
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001778 <_init>:
    1778:	push	{r3, lr}
    177c:	bl	1a60 <call_weak_fn>
    1780:	pop	{r3, pc}

Disassembly of section .plt:

00001784 <.plt>:
    1784:	push	{lr}		; (str lr, [sp, #-4]!)
    1788:	ldr	lr, [pc, #4]	; 1794 <.plt+0x10>
    178c:	add	lr, pc, lr
    1790:	ldr	pc, [lr, #8]!
    1794:	.word	0x0008186c

00001798 <calloc@plt>:
    1798:	add	ip, pc, #0, 12
    179c:	add	ip, ip, #528384	; 0x81000
    17a0:	ldr	pc, [ip, #2156]!	; 0x86c

000017a4 <Mat_VarReadNext@plt>:
    17a4:	add	ip, pc, #0, 12
    17a8:	add	ip, ip, #528384	; 0x81000
    17ac:	ldr	pc, [ip, #2148]!	; 0x864

000017b0 <strcmp@plt>:
    17b0:	add	ip, pc, #0, 12
    17b4:	add	ip, ip, #528384	; 0x81000
    17b8:	ldr	pc, [ip, #2140]!	; 0x85c

000017bc <__cxa_finalize@plt>:
    17bc:	add	ip, pc, #0, 12
    17c0:	add	ip, ip, #528384	; 0x81000
    17c4:	ldr	pc, [ip, #2132]!	; 0x854

000017c8 <Mat_Open@plt>:
    17c8:	add	ip, pc, #0, 12
    17cc:	add	ip, ip, #528384	; 0x81000
    17d0:	ldr	pc, [ip, #2124]!	; 0x84c

000017d4 <printf@plt>:
    17d4:	add	ip, pc, #0, 12
    17d8:	add	ip, ip, #528384	; 0x81000
    17dc:	ldr	pc, [ip, #2116]!	; 0x844

000017e0 <fopen@plt>:
    17e0:	add	ip, pc, #0, 12
    17e4:	add	ip, ip, #528384	; 0x81000
    17e8:	ldr	pc, [ip, #2108]!	; 0x83c

000017ec <inflate@plt>:
    17ec:	add	ip, pc, #0, 12
    17f0:	add	ip, ip, #528384	; 0x81000
    17f4:	ldr	pc, [ip, #2100]!	; 0x834

000017f8 <fflush@plt>:
    17f8:	add	ip, pc, #0, 12
    17fc:	add	ip, ip, #528384	; 0x81000
    1800:	ldr	pc, [ip, #2092]!	; 0x82c

00001804 <free@plt>:
    1804:	add	ip, pc, #0, 12
    1808:	add	ip, ip, #528384	; 0x81000
    180c:	ldr	pc, [ip, #2084]!	; 0x824

00001810 <Mat_Warning@plt>:
    1810:	add	ip, pc, #0, 12
    1814:	add	ip, ip, #528384	; 0x81000
    1818:	ldr	pc, [ip, #2076]!	; 0x81c

0000181c <memcpy@plt>:
    181c:	add	ip, pc, #0, 12
    1820:	add	ip, ip, #528384	; 0x81000
    1824:	ldr	pc, [ip, #2068]!	; 0x814

00001828 <Mat_VarWrite@plt>:
    1828:	add	ip, pc, #0, 12
    182c:	add	ip, ip, #528384	; 0x81000
    1830:	ldr	pc, [ip, #2060]!	; 0x80c

00001834 <time@plt>:
    1834:	add	ip, pc, #0, 12
    1838:	add	ip, ip, #528384	; 0x81000
    183c:	ldr	pc, [ip, #2052]!	; 0x804

00001840 <ftell@plt>:
    1840:	add	ip, pc, #0, 12
    1844:	add	ip, ip, #528384	; 0x81000
    1848:	ldr	pc, [ip, #2044]!	; 0x7fc

0000184c <fwrite_unlocked@plt>:
    184c:	add	ip, pc, #0, 12
    1850:	add	ip, ip, #528384	; 0x81000
    1854:	ldr	pc, [ip, #2036]!	; 0x7f4

00001858 <ctime@plt>:
    1858:	add	ip, pc, #0, 12
    185c:	add	ip, ip, #528384	; 0x81000
    1860:	ldr	pc, [ip, #2028]!	; 0x7ec

00001864 <strdup@plt>:
    1864:	add	ip, pc, #0, 12
    1868:	add	ip, ip, #528384	; 0x81000
    186c:	ldr	pc, [ip, #2020]!	; 0x7e4

00001870 <realloc@plt>:
    1870:	add	ip, pc, #0, 12
    1874:	add	ip, ip, #528384	; 0x81000
    1878:	ldr	pc, [ip, #2012]!	; 0x7dc

0000187c <Mat_VarReadInfo@plt>:
    187c:	add	ip, pc, #0, 12
    1880:	add	ip, ip, #528384	; 0x81000
    1884:	ldr	pc, [ip, #2004]!	; 0x7d4

00001888 <zError@plt>:
    1888:	add	ip, pc, #0, 12
    188c:	add	ip, ip, #528384	; 0x81000
    1890:	ldr	pc, [ip, #1996]!	; 0x7cc

00001894 <deflate@plt>:
    1894:	add	ip, pc, #0, 12
    1898:	add	ip, ip, #528384	; 0x81000
    189c:	ldr	pc, [ip, #1988]!	; 0x7c4

000018a0 <Mat_VarCalloc@plt>:
    18a0:	add	ip, pc, #0, 12
    18a4:	add	ip, ip, #528384	; 0x81000
    18a8:	ldr	pc, [ip, #1980]!	; 0x7bc

000018ac <fwrite@plt>:
    18ac:	add	ip, pc, #0, 12
    18b0:	add	ip, ip, #528384	; 0x81000
    18b4:	ldr	pc, [ip, #1972]!	; 0x7b4

000018b8 <fread@plt>:
    18b8:	add	ip, pc, #0, 12
    18bc:	add	ip, ip, #528384	; 0x81000
    18c0:	ldr	pc, [ip, #1964]!	; 0x7ac

000018c4 <puts@plt>:
    18c4:	add	ip, pc, #0, 12
    18c8:	add	ip, ip, #528384	; 0x81000
    18cc:	ldr	pc, [ip, #1956]!	; 0x7a4

000018d0 <malloc@plt>:
    18d0:	add	ip, pc, #0, 12
    18d4:	add	ip, ip, #528384	; 0x81000
    18d8:	ldr	pc, [ip, #1948]!	; 0x79c

000018dc <deflateInit_@plt>:
    18dc:	add	ip, pc, #0, 12
    18e0:	add	ip, ip, #528384	; 0x81000
    18e4:	ldr	pc, [ip, #1940]!	; 0x794

000018e8 <mktemp@plt>:
    18e8:	add	ip, pc, #0, 12
    18ec:	add	ip, ip, #528384	; 0x81000
    18f0:	ldr	pc, [ip, #1932]!	; 0x78c

000018f4 <__gmon_start__@plt>:
    18f4:	add	ip, pc, #0, 12
    18f8:	add	ip, ip, #528384	; 0x81000
    18fc:	ldr	pc, [ip, #1924]!	; 0x784

00001900 <exit@plt>:
    1900:	add	ip, pc, #0, 12
    1904:	add	ip, ip, #528384	; 0x81000
    1908:	ldr	pc, [ip, #1916]!	; 0x77c

0000190c <feof@plt>:
    190c:	add	ip, pc, #0, 12
    1910:	add	ip, ip, #528384	; 0x81000
    1914:	ldr	pc, [ip, #1908]!	; 0x774

00001918 <Mat_VarFree@plt>:
    1918:	add	ip, pc, #0, 12
    191c:	add	ip, ip, #528384	; 0x81000
    1920:	ldr	pc, [ip, #1900]!	; 0x76c

00001924 <Mat_SizeOf@plt>:
    1924:	add	ip, pc, #0, 12
    1928:	add	ip, ip, #528384	; 0x81000
    192c:	ldr	pc, [ip, #1892]!	; 0x764

00001930 <Mat_GetDir@plt>:
    1930:	add	ip, pc, #0, 12
    1934:	add	ip, ip, #528384	; 0x81000
    1938:	ldr	pc, [ip, #1884]!	; 0x75c

0000193c <inflateEnd@plt>:
    193c:	add	ip, pc, #0, 12
    1940:	add	ip, ip, #528384	; 0x81000
    1944:	ldr	pc, [ip, #1876]!	; 0x754

00001948 <inflateCopy@plt>:
    1948:	add	ip, pc, #0, 12
    194c:	add	ip, ip, #528384	; 0x81000
    1950:	ldr	pc, [ip, #1868]!	; 0x74c

00001954 <strlen@plt>:
    1954:	add	ip, pc, #0, 12
    1958:	add	ip, ip, #528384	; 0x81000
    195c:	ldr	pc, [ip, #1860]!	; 0x744

00001960 <fprintf@plt>:
    1960:	add	ip, pc, #0, 12
    1964:	add	ip, ip, #528384	; 0x81000
    1968:	ldr	pc, [ip, #1852]!	; 0x73c

0000196c <Mat_VarPrint@plt>:
    196c:	add	ip, pc, #0, 12
    1970:	add	ip, ip, #528384	; 0x81000
    1974:	ldr	pc, [ip, #1844]!	; 0x734

00001978 <snprintf@plt>:
    1978:	add	ip, pc, #0, 12
    197c:	add	ip, ip, #528384	; 0x81000
    1980:	ldr	pc, [ip, #1836]!	; 0x72c

00001984 <Mat_Rewind@plt>:
    1984:	add	ip, pc, #0, 12
    1988:	add	ip, ip, #528384	; 0x81000
    198c:	ldr	pc, [ip, #1828]!	; 0x724

00001990 <memset@plt>:
    1990:	add	ip, pc, #0, 12
    1994:	add	ip, ip, #528384	; 0x81000
    1998:	ldr	pc, [ip, #1820]!	; 0x71c

0000199c <putchar@plt>:
    199c:	add	ip, pc, #0, 12
    19a0:	add	ip, ip, #528384	; 0x81000
    19a4:	ldr	pc, [ip, #1812]!	; 0x714

000019a8 <Mat_Close@plt>:
    19a8:	add	ip, pc, #0, 12
    19ac:	add	ip, ip, #528384	; 0x81000
    19b0:	ldr	pc, [ip, #1804]!	; 0x70c

000019b4 <Mat_Critical@plt>:
    19b4:	add	ip, pc, #0, 12
    19b8:	add	ip, ip, #528384	; 0x81000
    19bc:	ldr	pc, [ip, #1796]!	; 0x704

000019c0 <deflateEnd@plt>:
    19c0:	add	ip, pc, #0, 12
    19c4:	add	ip, ip, #528384	; 0x81000
    19c8:	ldr	pc, [ip, #1788]!	; 0x6fc

000019cc <fclose@plt>:
    19cc:	add	ip, pc, #0, 12
    19d0:	add	ip, ip, #528384	; 0x81000
    19d4:	ldr	pc, [ip, #1780]!	; 0x6f4

000019d8 <inflateInit_@plt>:
    19d8:	add	ip, pc, #0, 12
    19dc:	add	ip, ip, #528384	; 0x81000
    19e0:	ldr	pc, [ip, #1772]!	; 0x6ec

000019e4 <fputc@plt>:
    19e4:	add	ip, pc, #0, 12
    19e8:	add	ip, ip, #528384	; 0x81000
    19ec:	ldr	pc, [ip, #1764]!	; 0x6e4

000019f0 <remove@plt>:
    19f0:	add	ip, pc, #0, 12
    19f4:	add	ip, ip, #528384	; 0x81000
    19f8:	ldr	pc, [ip, #1756]!	; 0x6dc

000019fc <vsnprintf@plt>:
    19fc:	add	ip, pc, #0, 12
    1a00:	add	ip, ip, #528384	; 0x81000
    1a04:	ldr	pc, [ip, #1748]!	; 0x6d4

00001a08 <Mat_SizeOfClass@plt>:
    1a08:	add	ip, pc, #0, 12
    1a0c:	add	ip, ip, #528384	; 0x81000
    1a10:	ldr	pc, [ip, #1740]!	; 0x6cc

00001a14 <fread_unlocked@plt>:
    1a14:	add	ip, pc, #0, 12
    1a18:	add	ip, ip, #528384	; 0x81000
    1a1c:	ldr	pc, [ip, #1732]!	; 0x6c4

00001a20 <Mat_VarGetSize@plt>:
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #528384	; 0x81000
    1a28:	ldr	pc, [ip, #1724]!	; 0x6bc

00001a2c <fseek@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #528384	; 0x81000
    1a34:	ldr	pc, [ip, #1716]!	; 0x6b4

00001a38 <abort@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #528384	; 0x81000
    1a40:	ldr	pc, [ip, #1708]!	; 0x6ac

00001a44 <Mat_VarDuplicate@plt>:
    1a44:	add	ip, pc, #0, 12
    1a48:	add	ip, ip, #528384	; 0x81000
    1a4c:	ldr	pc, [ip, #1700]!	; 0x6a4

00001a50 <Mat_VarReadNextInfo@plt>:
    1a50:	add	ip, pc, #0, 12
    1a54:	add	ip, ip, #528384	; 0x81000
    1a58:	ldr	pc, [ip, #1692]!	; 0x69c

Disassembly of section .text:

00001a60 <call_weak_fn>:
    1a60:	ldr	r3, [pc, #20]	; 1a7c <call_weak_fn+0x1c>
    1a64:	ldr	r2, [pc, #20]	; 1a80 <call_weak_fn+0x20>
    1a68:	add	r3, pc, r3
    1a6c:	ldr	r2, [r3, r2]
    1a70:	cmp	r2, #0
    1a74:	bxeq	lr
    1a78:	b	18f4 <__gmon_start__@plt>
    1a7c:	.word	0x00081590
    1a80:	.word	0x00000104

00001a84 <deregister_tm_clones>:
    1a84:	ldr	r0, [pc, #44]	; 1ab8 <deregister_tm_clones+0x34>
    1a88:	ldr	r3, [pc, #44]	; 1abc <deregister_tm_clones+0x38>
    1a8c:	add	r0, pc, r0
    1a90:	add	r3, pc, r3
    1a94:	cmp	r3, r0
    1a98:	ldr	r3, [pc, #32]	; 1ac0 <deregister_tm_clones+0x3c>
    1a9c:	add	r3, pc, r3
    1aa0:	bxeq	lr
    1aa4:	ldr	r2, [pc, #24]	; 1ac4 <deregister_tm_clones+0x40>
    1aa8:	ldr	r3, [r3, r2]
    1aac:	cmp	r3, #0
    1ab0:	bxeq	lr
    1ab4:	bx	r3
    1ab8:	.word	0x00081680
    1abc:	.word	0x0008167c
    1ac0:	.word	0x0008155c
    1ac4:	.word	0x000000fc

00001ac8 <register_tm_clones>:
    1ac8:	ldr	r0, [pc, #56]	; 1b08 <register_tm_clones+0x40>
    1acc:	ldr	r3, [pc, #56]	; 1b0c <register_tm_clones+0x44>
    1ad0:	add	r0, pc, r0
    1ad4:	add	r3, pc, r3
    1ad8:	sub	r1, r3, r0
    1adc:	ldr	r3, [pc, #44]	; 1b10 <register_tm_clones+0x48>
    1ae0:	asr	r1, r1, #2
    1ae4:	add	r3, pc, r3
    1ae8:	add	r1, r1, r1, lsr #31
    1aec:	asrs	r1, r1, #1
    1af0:	bxeq	lr
    1af4:	ldr	r2, [pc, #24]	; 1b14 <register_tm_clones+0x4c>
    1af8:	ldr	r3, [r3, r2]
    1afc:	cmp	r3, #0
    1b00:	bxeq	lr
    1b04:	bx	r3
    1b08:	.word	0x0008163c
    1b0c:	.word	0x00081638
    1b10:	.word	0x00081514
    1b14:	.word	0x0000010c

00001b18 <__do_global_dtors_aux>:
    1b18:	ldr	r3, [pc, #76]	; 1b6c <__do_global_dtors_aux+0x54>
    1b1c:	ldr	r2, [pc, #76]	; 1b70 <__do_global_dtors_aux+0x58>
    1b20:	add	r3, pc, r3
    1b24:	add	r2, pc, r2
    1b28:	ldrb	r3, [r3]
    1b2c:	cmp	r3, #0
    1b30:	bxne	lr
    1b34:	ldr	r3, [pc, #56]	; 1b74 <__do_global_dtors_aux+0x5c>
    1b38:	push	{r4, lr}
    1b3c:	ldr	r3, [r2, r3]
    1b40:	cmp	r3, #0
    1b44:	beq	1b54 <__do_global_dtors_aux+0x3c>
    1b48:	ldr	r3, [pc, #40]	; 1b78 <__do_global_dtors_aux+0x60>
    1b4c:	ldr	r0, [pc, r3]
    1b50:	bl	17bc <__cxa_finalize@plt>
    1b54:	bl	1a84 <deregister_tm_clones>
    1b58:	ldr	r3, [pc, #28]	; 1b7c <__do_global_dtors_aux+0x64>
    1b5c:	mov	r2, #1
    1b60:	add	r3, pc, r3
    1b64:	strb	r2, [r3]
    1b68:	pop	{r4, pc}
    1b6c:	.word	0x000815ec
    1b70:	.word	0x000814d4
    1b74:	.word	0x000000f8
    1b78:	.word	0x000815bc
    1b7c:	.word	0x000815ac

00001b80 <frame_dummy>:
    1b80:	b	1ac8 <register_tm_clones>

00001b84 <Mat_int64Swap>:
    1b84:	push	{r4, r5, fp, lr}
    1b88:	add	fp, sp, #8
    1b8c:	ldrd	r2, [r0]
    1b90:	mov	ip, #65280	; 0xff00
    1b94:	lsr	r1, r3, #24
    1b98:	and	lr, ip, r3, lsr #8
    1b9c:	orr	r1, r1, r3, lsl #24
    1ba0:	and	r3, r3, #65280	; 0xff00
    1ba4:	orr	r1, r1, r3, lsl #8
    1ba8:	lsl	r3, r2, #8
    1bac:	uxtb16	r3, r3
    1bb0:	orr	r4, r1, lr
    1bb4:	and	r1, ip, r2, lsr #8
    1bb8:	orr	r3, r3, r2, lsl #24
    1bbc:	orr	r1, r3, r1
    1bc0:	orr	r5, r1, r2, lsr #24
    1bc4:	strd	r4, [r0]
    1bc8:	mov	r0, r4
    1bcc:	mov	r1, r5
    1bd0:	pop	{r4, r5, fp, pc}

00001bd4 <Mat_uint64Swap>:
    1bd4:	push	{r4, r5, fp, lr}
    1bd8:	add	fp, sp, #8
    1bdc:	ldrd	r2, [r0]
    1be0:	rev	r5, r2
    1be4:	rev	r4, r3
    1be8:	strd	r4, [r0]
    1bec:	mov	r0, r4
    1bf0:	mov	r1, r5
    1bf4:	pop	{r4, r5, fp, pc}

00001bf8 <Mat_int32Swap>:
    1bf8:	ldr	r1, [r0]
    1bfc:	rev	r1, r1
    1c00:	str	r1, [r0]
    1c04:	mov	r0, r1
    1c08:	bx	lr

00001c0c <Mat_uint32Swap>:
    1c0c:	ldr	r1, [r0]
    1c10:	rev	r1, r1
    1c14:	str	r1, [r0]
    1c18:	mov	r0, r1
    1c1c:	bx	lr

00001c20 <Mat_int16Swap>:
    1c20:	ldrh	r1, [r0]
    1c24:	rev16	r2, r1
    1c28:	strh	r2, [r0]
    1c2c:	revsh	r0, r1
    1c30:	bx	lr

00001c34 <Mat_uint16Swap>:
    1c34:	ldrh	r1, [r0]
    1c38:	rev16	r2, r1
    1c3c:	strh	r2, [r0]
    1c40:	rev	r0, r1
    1c44:	lsr	r0, r0, #16
    1c48:	bx	lr

00001c4c <Mat_floatSwap>:
    1c4c:	ldr	r1, [r0]
    1c50:	uxtb	r2, r1
    1c54:	and	r3, r1, #-16777216	; 0xff000000
    1c58:	eor	r2, r2, r1, lsr #24
    1c5c:	eor	r3, r3, r2, lsl #24
    1c60:	eor	ip, r2, r3, lsr #24
    1c64:	and	r2, r1, #16711680	; 0xff0000
    1c68:	eor	r1, r1, r1, lsr #8
    1c6c:	and	r1, r1, #65280	; 0xff00
    1c70:	eor	r2, r2, r1, lsl #8
    1c74:	orr	r3, r2, r3
    1c78:	eor	r1, r1, r2, lsr #8
    1c7c:	orr	r3, r3, ip
    1c80:	orr	r1, r3, r1
    1c84:	vmov	s0, r1
    1c88:	str	r1, [r0]
    1c8c:	bx	lr

00001c90 <Mat_doubleSwap>:
    1c90:	push	{r4, r5, r6, r7, fp, lr}
    1c94:	add	fp, sp, #16
    1c98:	ldrd	r2, [r0]
    1c9c:	uxtb	r1, r2
    1ca0:	lsr	r5, r2, #24
    1ca4:	eor	r6, r3, r3, lsr #24
    1ca8:	orr	r5, r5, r3, lsl #8
    1cac:	eor	ip, r1, r3, lsr #24
    1cb0:	and	r1, r3, #-16777216	; 0xff000000
    1cb4:	lsl	r6, r6, #24
    1cb8:	eor	r5, r5, r2
    1cbc:	eor	lr, r1, ip, lsl #24
    1cc0:	eor	r1, r2, r3, lsr #8
    1cc4:	orr	r6, r6, r5, lsr #8
    1cc8:	eor	ip, ip, lr, lsr #24
    1ccc:	and	r1, r1, #65280	; 0xff00
    1cd0:	eor	r6, r6, r3
    1cd4:	and	r7, r6, #65280	; 0xff00
    1cd8:	orr	r1, ip, r1
    1cdc:	orr	r7, r7, lr
    1ce0:	eor	r4, r3, r1, lsl #8
    1ce4:	eor	r1, r1, r4, lsr #8
    1ce8:	and	r4, r4, #16711680	; 0xff0000
    1cec:	orr	r7, r7, r4
    1cf0:	lsr	r4, r2, #8
    1cf4:	orr	r4, r4, r3, lsl #24
    1cf8:	and	r1, r1, #65280	; 0xff00
    1cfc:	orr	r1, ip, r1
    1d00:	eor	r2, r4, r2
    1d04:	eor	r4, r3, r3, lsr #8
    1d08:	lsl	r4, r4, #8
    1d0c:	orr	r4, r4, r2, lsr #24
    1d10:	eor	r3, r4, r3
    1d14:	eor	r2, r2, r3, lsl #24
    1d18:	uxtb	r4, r3
    1d1c:	and	r2, r2, #-16777216	; 0xff000000
    1d20:	orr	r7, r4, r7
    1d24:	orr	r1, r2, r1
    1d28:	eor	r2, r5, r6, lsl #8
    1d2c:	and	r2, r2, #16711680	; 0xff0000
    1d30:	orr	r6, r1, r2
    1d34:	vmov	d0, r6, r7
    1d38:	strd	r6, [r0]
    1d3c:	pop	{r4, r5, r6, r7, fp, pc}

00001d40 <strdup_vprintf>:
    1d40:	push	{r4, r5, r6, sl, fp, lr}
    1d44:	add	fp, sp, #16
    1d48:	sub	sp, sp, #8
    1d4c:	mov	r4, r0
    1d50:	mov	r3, r1
    1d54:	str	r1, [sp, #4]
    1d58:	str	r1, [sp]
    1d5c:	mov	r0, #0
    1d60:	mov	r1, #0
    1d64:	mov	r2, r4
    1d68:	bl	19fc <vsnprintf@plt>
    1d6c:	mov	r6, r0
    1d70:	add	r0, r0, #2
    1d74:	bl	18d0 <malloc@plt>
    1d78:	mov	r5, r0
    1d7c:	cmp	r0, #0
    1d80:	beq	1d98 <strdup_vprintf+0x58>
    1d84:	ldr	r3, [sp, #4]
    1d88:	add	r1, r6, #1
    1d8c:	mov	r0, r5
    1d90:	mov	r2, r4
    1d94:	bl	19fc <vsnprintf@plt>
    1d98:	mov	r0, r5
    1d9c:	sub	sp, fp, #16
    1da0:	pop	{r4, r5, r6, sl, fp, pc}

00001da4 <strdup_printf>:
    1da4:	sub	sp, sp, #12
    1da8:	push	{r4, r5, r6, sl, fp, lr}
    1dac:	add	fp, sp, #16
    1db0:	sub	sp, sp, #12
    1db4:	mov	r4, r0
    1db8:	add	r0, fp, #8
    1dbc:	stm	r0, {r1, r2, r3}
    1dc0:	add	r3, fp, #8
    1dc4:	mov	r0, #0
    1dc8:	mov	r1, #0
    1dcc:	mov	r2, r4
    1dd0:	str	r3, [sp]
    1dd4:	str	r3, [sp, #8]
    1dd8:	str	r3, [sp, #4]
    1ddc:	bl	19fc <vsnprintf@plt>
    1de0:	mov	r6, r0
    1de4:	add	r0, r0, #2
    1de8:	bl	18d0 <malloc@plt>
    1dec:	mov	r5, r0
    1df0:	cmp	r0, #0
    1df4:	beq	1e0c <strdup_printf+0x68>
    1df8:	ldr	r3, [sp, #8]
    1dfc:	add	r1, r6, #1
    1e00:	mov	r0, r5
    1e04:	mov	r2, r4
    1e08:	bl	19fc <vsnprintf@plt>
    1e0c:	mov	r0, r5
    1e10:	sub	sp, fp, #16
    1e14:	pop	{r4, r5, r6, sl, fp, lr}
    1e18:	add	sp, sp, #12
    1e1c:	bx	lr

00001e20 <Mat_SetVerbose>:
    1e20:	ldr	r2, [pc, #12]	; 1e34 <Mat_SetVerbose+0x14>
    1e24:	add	r2, pc, r2
    1e28:	stm	r2, {r0, r1}
    1e2c:	mov	r0, #0
    1e30:	bx	lr
    1e34:	.word	0x000812ec

00001e38 <Mat_SetDebug>:
    1e38:	ldr	r1, [pc, #12]	; 1e4c <Mat_SetDebug+0x14>
    1e3c:	add	r1, pc, r1
    1e40:	str	r0, [r1, #8]
    1e44:	mov	r0, #0
    1e48:	bx	lr
    1e4c:	.word	0x000812d4

00001e50 <Mat_Message>:
    1e50:	sub	sp, sp, #12
    1e54:	push	{r4, r5, r6, r7, fp, lr}
    1e58:	add	fp, sp, #16
    1e5c:	sub	sp, sp, #12
    1e60:	mov	r4, r0
    1e64:	add	r0, fp, #8
    1e68:	stm	r0, {r1, r2, r3}
    1e6c:	ldr	r7, [pc, #144]	; 1f04 <Mat_Message+0xb4>
    1e70:	add	r7, pc, r7
    1e74:	ldr	r0, [r7, #4]
    1e78:	cmp	r0, #0
    1e7c:	bne	1ef0 <Mat_Message+0xa0>
    1e80:	ldr	r0, [r7, #12]
    1e84:	cmp	r0, #0
    1e88:	beq	1ef0 <Mat_Message+0xa0>
    1e8c:	add	r3, fp, #8
    1e90:	mov	r0, #0
    1e94:	mov	r1, #0
    1e98:	mov	r2, r4
    1e9c:	str	r3, [sp]
    1ea0:	str	r3, [sp, #8]
    1ea4:	str	r3, [sp, #4]
    1ea8:	bl	19fc <vsnprintf@plt>
    1eac:	mov	r6, r0
    1eb0:	add	r0, r0, #2
    1eb4:	bl	18d0 <malloc@plt>
    1eb8:	mov	r5, r0
    1ebc:	cmp	r0, #0
    1ec0:	beq	1ed8 <Mat_Message+0x88>
    1ec4:	ldr	r3, [sp, #8]
    1ec8:	add	r1, r6, #1
    1ecc:	mov	r0, r5
    1ed0:	mov	r2, r4
    1ed4:	bl	19fc <vsnprintf@plt>
    1ed8:	ldr	r2, [r7, #12]
    1edc:	mov	r0, #8
    1ee0:	mov	r1, r5
    1ee4:	blx	r2
    1ee8:	mov	r0, r5
    1eec:	bl	1804 <free@plt>
    1ef0:	mov	r0, #0
    1ef4:	sub	sp, fp, #16
    1ef8:	pop	{r4, r5, r6, r7, fp, lr}
    1efc:	add	sp, sp, #12
    1f00:	bx	lr
    1f04:	.word	0x000812a0

00001f08 <mat_log>:
    1f08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1f0c:	add	fp, sp, #24
    1f10:	sub	sp, sp, #8
    1f14:	ldr	r8, [pc, #124]	; 1f98 <mat_log+0x90>
    1f18:	mov	r4, r0
    1f1c:	add	r8, pc, r8
    1f20:	ldr	r0, [r8, #12]
    1f24:	cmp	r0, #0
    1f28:	beq	1f90 <mat_log+0x88>
    1f2c:	mov	r5, r1
    1f30:	mov	r3, r2
    1f34:	str	r2, [sp, #4]
    1f38:	str	r2, [sp]
    1f3c:	mov	r0, #0
    1f40:	mov	r1, #0
    1f44:	mov	r2, r5
    1f48:	bl	19fc <vsnprintf@plt>
    1f4c:	mov	r7, r0
    1f50:	add	r0, r0, #2
    1f54:	bl	18d0 <malloc@plt>
    1f58:	mov	r6, r0
    1f5c:	cmp	r0, #0
    1f60:	beq	1f78 <mat_log+0x70>
    1f64:	ldr	r3, [sp, #4]
    1f68:	add	r1, r7, #1
    1f6c:	mov	r0, r6
    1f70:	mov	r2, r5
    1f74:	bl	19fc <vsnprintf@plt>
    1f78:	ldr	r2, [r8, #12]
    1f7c:	mov	r0, r4
    1f80:	mov	r1, r6
    1f84:	blx	r2
    1f88:	mov	r0, r6
    1f8c:	bl	1804 <free@plt>
    1f90:	sub	sp, fp, #24
    1f94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1f98:	.word	0x000811f4

00001f9c <Mat_DebugMessage>:
    1f9c:	sub	sp, sp, #8
    1fa0:	push	{r4, r5, r6, r7, fp, lr}
    1fa4:	add	fp, sp, #16
    1fa8:	sub	sp, sp, #16
    1fac:	str	r2, [fp, #8]
    1fb0:	str	r3, [fp, #12]
    1fb4:	mov	r4, r1
    1fb8:	ldr	r7, [pc, #160]	; 2060 <Mat_DebugMessage+0xc4>
    1fbc:	add	r7, pc, r7
    1fc0:	ldr	r1, [r7, #4]
    1fc4:	cmp	r1, #0
    1fc8:	bne	204c <Mat_DebugMessage+0xb0>
    1fcc:	ldr	r1, [r7, #8]
    1fd0:	cmp	r1, r0
    1fd4:	blt	204c <Mat_DebugMessage+0xb0>
    1fd8:	add	r0, fp, #8
    1fdc:	str	r0, [sp, #4]
    1fe0:	ldr	r0, [r7, #12]
    1fe4:	cmp	r0, #0
    1fe8:	beq	204c <Mat_DebugMessage+0xb0>
    1fec:	ldr	r3, [sp, #4]
    1ff0:	mov	r0, #0
    1ff4:	mov	r1, #0
    1ff8:	mov	r2, r4
    1ffc:	str	r3, [sp, #12]
    2000:	str	r3, [sp, #8]
    2004:	bl	19fc <vsnprintf@plt>
    2008:	mov	r6, r0
    200c:	add	r0, r0, #2
    2010:	bl	18d0 <malloc@plt>
    2014:	mov	r5, r0
    2018:	cmp	r0, #0
    201c:	beq	2034 <Mat_DebugMessage+0x98>
    2020:	ldr	r3, [sp, #12]
    2024:	add	r1, r6, #1
    2028:	mov	r0, r5
    202c:	mov	r2, r4
    2030:	bl	19fc <vsnprintf@plt>
    2034:	ldr	r2, [r7, #12]
    2038:	mov	r0, #16
    203c:	mov	r1, r5
    2040:	blx	r2
    2044:	mov	r0, r5
    2048:	bl	1804 <free@plt>
    204c:	mov	r0, #0
    2050:	sub	sp, fp, #16
    2054:	pop	{r4, r5, r6, r7, fp, lr}
    2058:	add	sp, sp, #8
    205c:	bx	lr
    2060:	.word	0x00081154

00002064 <Mat_VerbMessage>:
    2064:	sub	sp, sp, #8
    2068:	push	{r4, r5, r6, r7, fp, lr}
    206c:	add	fp, sp, #16
    2070:	sub	sp, sp, #16
    2074:	str	r2, [fp, #8]
    2078:	str	r3, [fp, #12]
    207c:	mov	r4, r1
    2080:	ldr	r7, [pc, #164]	; 212c <Mat_VerbMessage+0xc8>
    2084:	add	r7, pc, r7
    2088:	ldr	r1, [r7, #4]
    208c:	cmp	r1, #0
    2090:	bne	2118 <Mat_VerbMessage+0xb4>
    2094:	ldr	r1, [pc, #148]	; 2130 <Mat_VerbMessage+0xcc>
    2098:	ldr	r1, [pc, r1]
    209c:	cmp	r1, r0
    20a0:	blt	2118 <Mat_VerbMessage+0xb4>
    20a4:	add	r0, fp, #8
    20a8:	str	r0, [sp, #4]
    20ac:	ldr	r0, [r7, #12]
    20b0:	cmp	r0, #0
    20b4:	beq	2118 <Mat_VerbMessage+0xb4>
    20b8:	ldr	r3, [sp, #4]
    20bc:	mov	r0, #0
    20c0:	mov	r1, #0
    20c4:	mov	r2, r4
    20c8:	str	r3, [sp, #12]
    20cc:	str	r3, [sp, #8]
    20d0:	bl	19fc <vsnprintf@plt>
    20d4:	mov	r6, r0
    20d8:	add	r0, r0, #2
    20dc:	bl	18d0 <malloc@plt>
    20e0:	mov	r5, r0
    20e4:	cmp	r0, #0
    20e8:	beq	2100 <Mat_VerbMessage+0x9c>
    20ec:	ldr	r3, [sp, #12]
    20f0:	add	r1, r6, #1
    20f4:	mov	r0, r5
    20f8:	mov	r2, r4
    20fc:	bl	19fc <vsnprintf@plt>
    2100:	ldr	r2, [r7, #12]
    2104:	mov	r0, #8
    2108:	mov	r1, r5
    210c:	blx	r2
    2110:	mov	r0, r5
    2114:	bl	1804 <free@plt>
    2118:	mov	r0, #0
    211c:	sub	sp, fp, #16
    2120:	pop	{r4, r5, r6, r7, fp, lr}
    2124:	add	sp, sp, #8
    2128:	bx	lr
    212c:	.word	0x0008108c
    2130:	.word	0x00081078

00002134 <Mat_Critical>:
    2134:	sub	sp, sp, #12
    2138:	push	{r4, r5, r6, r7, fp, lr}
    213c:	add	fp, sp, #16
    2140:	sub	sp, sp, #12
    2144:	mov	r4, r0
    2148:	add	r0, fp, #8
    214c:	stm	r0, {r1, r2, r3}
    2150:	add	r0, fp, #8
    2154:	str	r0, [sp]
    2158:	ldr	r7, [pc, #124]	; 21dc <Mat_Critical+0xa8>
    215c:	add	r7, pc, r7
    2160:	ldr	r0, [r7, #12]
    2164:	cmp	r0, #0
    2168:	beq	21cc <Mat_Critical+0x98>
    216c:	ldr	r3, [sp]
    2170:	mov	r0, #0
    2174:	mov	r1, #0
    2178:	mov	r2, r4
    217c:	str	r3, [sp, #8]
    2180:	str	r3, [sp, #4]
    2184:	bl	19fc <vsnprintf@plt>
    2188:	mov	r6, r0
    218c:	add	r0, r0, #2
    2190:	bl	18d0 <malloc@plt>
    2194:	mov	r5, r0
    2198:	cmp	r0, #0
    219c:	beq	21b4 <Mat_Critical+0x80>
    21a0:	ldr	r3, [sp, #8]
    21a4:	add	r1, r6, #1
    21a8:	mov	r0, r5
    21ac:	mov	r2, r4
    21b0:	bl	19fc <vsnprintf@plt>
    21b4:	ldr	r2, [r7, #12]
    21b8:	mov	r0, #2
    21bc:	mov	r1, r5
    21c0:	blx	r2
    21c4:	mov	r0, r5
    21c8:	bl	1804 <free@plt>
    21cc:	sub	sp, fp, #16
    21d0:	pop	{r4, r5, r6, r7, fp, lr}
    21d4:	add	sp, sp, #12
    21d8:	bx	lr
    21dc:	.word	0x00080fb4

000021e0 <Mat_Error>:
    21e0:	sub	sp, sp, #12
    21e4:	push	{fp, lr}
    21e8:	mov	fp, sp
    21ec:	sub	sp, sp, #4
    21f0:	mov	ip, r0
    21f4:	add	r0, fp, #8
    21f8:	stm	r0, {r1, r2, r3}
    21fc:	add	r2, fp, #8
    2200:	mov	r0, #1
    2204:	mov	r1, ip
    2208:	str	r2, [sp]
    220c:	bl	1f08 <mat_log>
    2210:	bl	1a38 <abort@plt>

00002214 <Mat_Help>:
    2214:	push	{fp, lr}
    2218:	mov	fp, sp
    221c:	mov	r1, r0
    2220:	ldr	r0, [r0]
    2224:	cmp	r0, #0
    2228:	beq	2240 <Mat_Help+0x2c>
    222c:	add	r4, r1, #4
    2230:	bl	18c4 <puts@plt>
    2234:	ldr	r0, [r4], #4
    2238:	cmp	r0, #0
    223c:	bne	2230 <Mat_Help+0x1c>
    2240:	mov	r0, #0
    2244:	bl	1900 <exit@plt>

00002248 <Mat_LogClose>:
    2248:	ldr	r0, [pc, #16]	; 2260 <Mat_LogClose+0x18>
    224c:	mov	r1, #0
    2250:	add	r0, pc, r0
    2254:	str	r1, [r0, #12]
    2258:	mov	r0, #1
    225c:	bx	lr
    2260:	.word	0x00080ec0

00002264 <Mat_LogInit>:
    2264:	ldr	r0, [pc, #32]	; 228c <Mat_LogInit+0x28>
    2268:	mov	r1, #0
    226c:	add	r0, pc, r0
    2270:	str	r1, [r0]
    2274:	str	r1, [r0, #4]
    2278:	ldr	r1, [pc, #16]	; 2290 <Mat_LogInit+0x2c>
    227c:	add	r1, pc, r1
    2280:	str	r1, [r0, #12]
    2284:	mov	r0, #0
    2288:	bx	lr
    228c:	.word	0x00080ea4
    2290:	.word	0x00000010

00002294 <mat_logfunc>:
    2294:	push	{r4, sl, fp, lr}
    2298:	add	fp, sp, #8
    229c:	ldr	r2, [pc, #388]	; 2428 <mat_logfunc+0x194>
    22a0:	mov	r3, r1
    22a4:	and	r1, r0, #2
    22a8:	add	r2, pc, r2
    22ac:	ldr	r2, [r2, #16]
    22b0:	cmp	r2, #0
    22b4:	beq	22e4 <mat_logfunc+0x50>
    22b8:	cmp	r1, #0
    22bc:	beq	2304 <mat_logfunc+0x70>
    22c0:	ldr	r4, [pc, #356]	; 242c <mat_logfunc+0x198>
    22c4:	ldr	r4, [pc, r4]
    22c8:	ldr	r0, [r4]
    22cc:	ldr	r1, [pc, #348]	; 2430 <mat_logfunc+0x19c>
    22d0:	add	r1, pc, r1
    22d4:	bl	1960 <fprintf@plt>
    22d8:	ldr	r0, [r4]
    22dc:	pop	{r4, sl, fp, lr}
    22e0:	b	17f8 <fflush@plt>
    22e4:	cmp	r1, #0
    22e8:	beq	2340 <mat_logfunc+0xac>
    22ec:	ldr	r4, [pc, #352]	; 2454 <mat_logfunc+0x1c0>
    22f0:	ldr	r4, [pc, r4]
    22f4:	ldr	r0, [r4]
    22f8:	ldr	r1, [pc, #344]	; 2458 <mat_logfunc+0x1c4>
    22fc:	add	r1, pc, r1
    2300:	b	23c8 <mat_logfunc+0x134>
    2304:	tst	r0, #1
    2308:	bne	23dc <mat_logfunc+0x148>
    230c:	tst	r0, #4
    2310:	bne	2378 <mat_logfunc+0xe4>
    2314:	tst	r0, #16
    2318:	beq	2358 <mat_logfunc+0xc4>
    231c:	ldr	r4, [pc, #288]	; 2444 <mat_logfunc+0x1b0>
    2320:	ldr	r4, [pc, r4]
    2324:	ldr	r0, [r4]
    2328:	ldr	r1, [pc, #280]	; 2448 <mat_logfunc+0x1b4>
    232c:	add	r1, pc, r1
    2330:	bl	1960 <fprintf@plt>
    2334:	ldr	r0, [r4]
    2338:	pop	{r4, sl, fp, lr}
    233c:	b	17f8 <fflush@plt>
    2340:	tst	r0, #1
    2344:	bne	2400 <mat_logfunc+0x16c>
    2348:	tst	r0, #4
    234c:	bne	239c <mat_logfunc+0x108>
    2350:	tst	r0, #16
    2354:	bne	23b4 <mat_logfunc+0x120>
    2358:	tst	r0, #8
    235c:	popeq	{r4, sl, fp, pc}
    2360:	ldr	r4, [pc, #228]	; 244c <mat_logfunc+0x1b8>
    2364:	ldr	r4, [pc, r4]
    2368:	ldr	r0, [r4]
    236c:	ldr	r1, [pc, #220]	; 2450 <mat_logfunc+0x1bc>
    2370:	add	r1, pc, r1
    2374:	b	23c8 <mat_logfunc+0x134>
    2378:	ldr	r4, [pc, #188]	; 243c <mat_logfunc+0x1a8>
    237c:	ldr	r4, [pc, r4]
    2380:	ldr	r0, [r4]
    2384:	ldr	r1, [pc, #180]	; 2440 <mat_logfunc+0x1ac>
    2388:	add	r1, pc, r1
    238c:	bl	1960 <fprintf@plt>
    2390:	ldr	r0, [r4]
    2394:	pop	{r4, sl, fp, lr}
    2398:	b	17f8 <fflush@plt>
    239c:	ldr	r4, [pc, #192]	; 2464 <mat_logfunc+0x1d0>
    23a0:	ldr	r4, [pc, r4]
    23a4:	ldr	r0, [r4]
    23a8:	ldr	r1, [pc, #184]	; 2468 <mat_logfunc+0x1d4>
    23ac:	add	r1, pc, r1
    23b0:	b	23c8 <mat_logfunc+0x134>
    23b4:	ldr	r4, [pc, #176]	; 246c <mat_logfunc+0x1d8>
    23b8:	ldr	r4, [pc, r4]
    23bc:	ldr	r0, [r4]
    23c0:	ldr	r1, [pc, #168]	; 2470 <mat_logfunc+0x1dc>
    23c4:	add	r1, pc, r1
    23c8:	mov	r2, r3
    23cc:	bl	1960 <fprintf@plt>
    23d0:	ldr	r0, [r4]
    23d4:	pop	{r4, sl, fp, lr}
    23d8:	b	17f8 <fflush@plt>
    23dc:	ldr	r4, [pc, #80]	; 2434 <mat_logfunc+0x1a0>
    23e0:	ldr	r4, [pc, r4]
    23e4:	ldr	r0, [r4]
    23e8:	ldr	r1, [pc, #72]	; 2438 <mat_logfunc+0x1a4>
    23ec:	add	r1, pc, r1
    23f0:	bl	1960 <fprintf@plt>
    23f4:	ldr	r0, [r4]
    23f8:	bl	17f8 <fflush@plt>
    23fc:	bl	1a38 <abort@plt>
    2400:	ldr	r4, [pc, #84]	; 245c <mat_logfunc+0x1c8>
    2404:	mov	r2, r3
    2408:	ldr	r4, [pc, r4]
    240c:	ldr	r0, [r4]
    2410:	ldr	r1, [pc, #72]	; 2460 <mat_logfunc+0x1cc>
    2414:	add	r1, pc, r1
    2418:	bl	1960 <fprintf@plt>
    241c:	ldr	r0, [r4]
    2420:	bl	17f8 <fflush@plt>
    2424:	bl	1a38 <abort@plt>
    2428:	.word	0x00080e68
    242c:	.word	0x00080e34
    2430:	.word	0x0006f5f8
    2434:	.word	0x00080d18
    2438:	.word	0x0006f4dc
    243c:	.word	0x00080d7c
    2440:	.word	0x0006f54c
    2444:	.word	0x00080dd8
    2448:	.word	0x0006f5b4
    244c:	.word	0x00080d9c
    2450:	.word	0x0006f596
    2454:	.word	0x00080e08
    2458:	.word	0x0006f5f0
    245c:	.word	0x00080cf0
    2460:	.word	0x0006f4d8
    2464:	.word	0x00080d58
    2468:	.word	0x0006f54a
    246c:	.word	0x00080d40
    2470:	.word	0x0006f53c

00002474 <Mat_LogInitFunc>:
    2474:	ldr	r2, [pc, #28]	; 2498 <Mat_LogInitFunc+0x24>
    2478:	add	r2, pc, r2
    247c:	str	r1, [r2, #12]
    2480:	str	r0, [r2, #16]
    2484:	mov	r0, #0
    2488:	str	r0, [r2]
    248c:	str	r0, [r2, #4]
    2490:	mov	r0, #0
    2494:	bx	lr
    2498:	.word	0x00080c98

0000249c <Mat_Warning>:
    249c:	sub	sp, sp, #12
    24a0:	push	{r4, r5, r6, r7, fp, lr}
    24a4:	add	fp, sp, #16
    24a8:	sub	sp, sp, #12
    24ac:	mov	r4, r0
    24b0:	add	r0, fp, #8
    24b4:	stm	r0, {r1, r2, r3}
    24b8:	add	r0, fp, #8
    24bc:	str	r0, [sp]
    24c0:	ldr	r7, [pc, #124]	; 2544 <Mat_Warning+0xa8>
    24c4:	add	r7, pc, r7
    24c8:	ldr	r0, [r7, #12]
    24cc:	cmp	r0, #0
    24d0:	beq	2534 <Mat_Warning+0x98>
    24d4:	ldr	r3, [sp]
    24d8:	mov	r0, #0
    24dc:	mov	r1, #0
    24e0:	mov	r2, r4
    24e4:	str	r3, [sp, #8]
    24e8:	str	r3, [sp, #4]
    24ec:	bl	19fc <vsnprintf@plt>
    24f0:	mov	r6, r0
    24f4:	add	r0, r0, #2
    24f8:	bl	18d0 <malloc@plt>
    24fc:	mov	r5, r0
    2500:	cmp	r0, #0
    2504:	beq	251c <Mat_Warning+0x80>
    2508:	ldr	r3, [sp, #8]
    250c:	add	r1, r6, #1
    2510:	mov	r0, r5
    2514:	mov	r2, r4
    2518:	bl	19fc <vsnprintf@plt>
    251c:	ldr	r2, [r7, #12]
    2520:	mov	r0, #4
    2524:	mov	r1, r5
    2528:	blx	r2
    252c:	mov	r0, r5
    2530:	bl	1804 <free@plt>
    2534:	sub	sp, fp, #16
    2538:	pop	{r4, r5, r6, r7, fp, lr}
    253c:	add	sp, sp, #12
    2540:	bx	lr
    2544:	.word	0x00080c4c

00002548 <Mat_SizeOf>:
    2548:	sub	r0, r0, #1
    254c:	cmp	r0, #17
    2550:	movhi	r0, #0
    2554:	bxhi	lr
    2558:	ldr	r1, [pc, #8]	; 2568 <Mat_SizeOf+0x20>
    255c:	add	r1, pc, r1
    2560:	ldr	r0, [r1, r0, lsl #2]
    2564:	bx	lr
    2568:	.word	0x0006f3b0

0000256c <InflateSkip>:
    256c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2570:	add	fp, sp, #28
    2574:	sub	sp, sp, #4
    2578:	sub	sp, sp, #1024	; 0x400
    257c:	cmp	r2, #1
    2580:	blt	2620 <InflateSkip+0xb4>
    2584:	mov	r8, r0
    2588:	ldr	r0, [r1, #4]
    258c:	cmp	r2, #512	; 0x200
    2590:	mov	r6, r2
    2594:	mov	r4, r2
    2598:	mov	r5, r1
    259c:	mov	r9, #0
    25a0:	movge	r6, #512	; 0x200
    25a4:	cmp	r0, #0
    25a8:	bne	25d0 <InflateSkip+0x64>
    25ac:	add	r0, sp, #512	; 0x200
    25b0:	mov	r1, #1
    25b4:	mov	r2, r6
    25b8:	str	r0, [r5]
    25bc:	ldr	r3, [r8]
    25c0:	bl	18b8 <fread@plt>
    25c4:	ldr	r1, [r5, #4]
    25c8:	add	r9, r1, r0
    25cc:	str	r9, [r5, #4]
    25d0:	mov	sl, sp
    25d4:	mov	r0, r5
    25d8:	mov	r1, #3
    25dc:	str	sl, [r5, #12]
    25e0:	str	r6, [r5, #16]
    25e4:	bl	17ec <inflate@plt>
    25e8:	cmp	r0, #0
    25ec:	beq	2630 <InflateSkip+0xc4>
    25f0:	cmp	r0, #1
    25f4:	beq	2718 <InflateSkip+0x1ac>
    25f8:	cmp	r0, #2
    25fc:	mvneq	r0, #2
    2600:	bl	1888 <zError@plt>
    2604:	mov	r1, r0
    2608:	ldr	r0, [pc, #276]	; 2724 <InflateSkip+0x1b8>
    260c:	add	r0, pc, r0
    2610:	bl	19b4 <Mat_Critical@plt>
    2614:	mov	r0, r9
    2618:	sub	sp, fp, #28
    261c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2620:	mov	r9, #0
    2624:	mov	r0, r9
    2628:	sub	sp, fp, #28
    262c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2630:	ldr	r0, [r5, #16]
    2634:	cmp	r0, #0
    2638:	beq	2650 <InflateSkip+0xe4>
    263c:	mov	r7, r6
    2640:	mov	r6, #0
    2644:	cmp	r6, r4
    2648:	blt	266c <InflateSkip+0x100>
    264c:	b	26ec <InflateSkip+0x180>
    2650:	sub	r7, r4, r6
    2654:	str	sl, [r5, #12]
    2658:	cmp	r7, #512	; 0x200
    265c:	movge	r7, #512	; 0x200
    2660:	str	r7, [r5, #16]
    2664:	cmp	r6, r4
    2668:	bge	26ec <InflateSkip+0x180>
    266c:	ldr	r0, [r5, #4]
    2670:	cmp	r0, #0
    2674:	bne	26a0 <InflateSkip+0x134>
    2678:	add	r0, sp, #512	; 0x200
    267c:	mov	r1, #1
    2680:	mov	r2, r7
    2684:	str	r0, [r5]
    2688:	ldr	r3, [r8]
    268c:	bl	18b8 <fread@plt>
    2690:	ldr	r1, [r5, #4]
    2694:	add	r0, r1, r0
    2698:	add	r9, r0, r9
    269c:	str	r0, [r5, #4]
    26a0:	mov	r0, r5
    26a4:	mov	r1, #3
    26a8:	bl	17ec <inflate@plt>
    26ac:	cmp	r0, #0
    26b0:	bne	26c8 <InflateSkip+0x15c>
    26b4:	ldr	r0, [r5, #16]
    26b8:	cmp	r0, #0
    26bc:	bne	2664 <InflateSkip+0xf8>
    26c0:	add	r6, r6, r7
    26c4:	b	2650 <InflateSkip+0xe4>
    26c8:	cmp	r0, #1
    26cc:	beq	26ec <InflateSkip+0x180>
    26d0:	cmp	r0, #2
    26d4:	mvneq	r0, #2
    26d8:	bl	1888 <zError@plt>
    26dc:	mov	r1, r0
    26e0:	ldr	r0, [pc, #64]	; 2728 <InflateSkip+0x1bc>
    26e4:	add	r0, pc, r0
    26e8:	bl	19b4 <Mat_Critical@plt>
    26ec:	ldr	r1, [r5, #4]
    26f0:	cmp	r1, #0
    26f4:	beq	2718 <InflateSkip+0x1ac>
    26f8:	ldr	r0, [r8]
    26fc:	rsb	r1, r1, #0
    2700:	mov	r2, #1
    2704:	bl	1a2c <fseek@plt>
    2708:	ldr	r0, [r5, #4]
    270c:	mov	r1, #0
    2710:	str	r1, [r5, #4]
    2714:	sub	r9, r9, r0
    2718:	mov	r0, r9
    271c:	sub	sp, fp, #28
    2720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2724:	.word	0x0006f348
    2728:	.word	0x0006f270

0000272c <InflateSkip2>:
    272c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2730:	add	fp, sp, #28
    2734:	sub	sp, sp, #68	; 0x44
    2738:	mov	r8, r0
    273c:	ldr	r0, [r1, #52]	; 0x34
    2740:	mov	r5, r1
    2744:	mov	r7, r2
    2748:	mov	r9, #0
    274c:	ldr	r0, [r0, #12]
    2750:	ldr	r1, [r0, #4]
    2754:	cmp	r1, #0
    2758:	bne	2788 <InflateSkip2+0x5c>
    275c:	add	r1, sp, #36	; 0x24
    2760:	mov	r2, #1
    2764:	stm	r0, {r1, r2}
    2768:	mov	r0, r1
    276c:	mov	r1, #1
    2770:	mov	r2, #1
    2774:	ldr	r3, [r8]
    2778:	bl	18b8 <fread@plt>
    277c:	mov	r9, r0
    2780:	ldr	r0, [r5, #52]	; 0x34
    2784:	ldr	r0, [r0, #12]
    2788:	add	r4, sp, #4
    278c:	mov	r1, #1
    2790:	str	r4, [r0, #12]
    2794:	str	r1, [r0, #16]
    2798:	mov	r1, #0
    279c:	bl	17ec <inflate@plt>
    27a0:	cmp	r0, #0
    27a4:	beq	27d8 <InflateSkip2+0xac>
    27a8:	ldr	r5, [r5, #36]	; 0x24
    27ac:	cmp	r0, #2
    27b0:	mvneq	r0, #2
    27b4:	bl	1888 <zError@plt>
    27b8:	mov	r2, r0
    27bc:	ldr	r0, [pc, #276]	; 28d8 <InflateSkip2+0x1ac>
    27c0:	mov	r1, r5
    27c4:	add	r0, pc, r0
    27c8:	bl	19b4 <Mat_Critical@plt>
    27cc:	mov	r0, r9
    27d0:	sub	sp, fp, #28
    27d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    27d8:	ldr	r0, [r5, #52]	; 0x34
    27dc:	ldr	r1, [r0, #12]
    27e0:	ldr	r2, [r1, #16]
    27e4:	mov	r3, r1
    27e8:	cmp	r2, #0
    27ec:	moveq	r2, #1
    27f0:	streq	r4, [r1, #12]
    27f4:	streq	r2, [r1, #16]
    27f8:	ldr	r4, [r3, #4]!
    27fc:	cmp	r4, #0
    2800:	mov	r2, r4
    2804:	movwne	r2, #1
    2808:	cmp	r7, #1
    280c:	blt	289c <InflateSkip2+0x170>
    2810:	mov	r6, #0
    2814:	add	sl, sp, #36	; 0x24
    2818:	tst	r2, #1
    281c:	bne	284c <InflateSkip2+0x120>
    2820:	mov	r0, #1
    2824:	mov	r2, #1
    2828:	str	r0, [r3]
    282c:	str	sl, [r1]
    2830:	mov	r0, sl
    2834:	mov	r1, #1
    2838:	ldr	r3, [r8]
    283c:	bl	18b8 <fread@plt>
    2840:	add	r9, r0, r9
    2844:	ldr	r0, [r5, #52]	; 0x34
    2848:	add	r6, r6, #1
    284c:	ldr	r0, [r0, #12]
    2850:	mov	r1, #0
    2854:	bl	17ec <inflate@plt>
    2858:	cmp	r0, #0
    285c:	bne	27a8 <InflateSkip2+0x7c>
    2860:	ldr	r0, [r5, #52]	; 0x34
    2864:	ldr	r1, [r0, #12]
    2868:	ldr	r2, [r1, #16]
    286c:	mov	r3, r1
    2870:	cmp	r2, #0
    2874:	addeq	r2, sp, #4
    2878:	streq	r2, [r1, #12]
    287c:	moveq	r2, #1
    2880:	streq	r2, [r1, #16]
    2884:	ldr	r4, [r3, #4]!
    2888:	cmp	r4, #0
    288c:	mov	r2, r4
    2890:	movwne	r2, #1
    2894:	cmp	r6, r7
    2898:	blt	2818 <InflateSkip2+0xec>
    289c:	cmp	r2, #0
    28a0:	beq	27cc <InflateSkip2+0xa0>
    28a4:	ldr	r0, [r8]
    28a8:	rsb	r1, r4, #0
    28ac:	mov	r2, #1
    28b0:	bl	1a2c <fseek@plt>
    28b4:	ldr	r0, [r5, #52]	; 0x34
    28b8:	mov	r2, #0
    28bc:	ldr	r0, [r0, #12]
    28c0:	ldr	r1, [r0, #4]
    28c4:	str	r2, [r0, #4]
    28c8:	sub	r9, r9, r1
    28cc:	mov	r0, r9
    28d0:	sub	sp, fp, #28
    28d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    28d8:	.word	0x0006f1b1

000028dc <InflateSkipData>:
    28dc:	push	{r4, r5, fp, lr}
    28e0:	add	fp, sp, #8
    28e4:	mov	r4, r3
    28e8:	mov	r3, r0
    28ec:	mov	r0, #0
    28f0:	cmp	r3, #0
    28f4:	cmpne	r1, #0
    28f8:	bne	2900 <InflateSkipData+0x24>
    28fc:	pop	{r4, r5, fp, pc}
    2900:	cmp	r4, #1
    2904:	blt	28fc <InflateSkipData+0x20>
    2908:	sub	r2, r2, #1
    290c:	cmp	r2, #12
    2910:	bhi	28fc <InflateSkipData+0x20>
    2914:	uxth	ip, r2
    2918:	movw	lr, #6527	; 0x197f
    291c:	mov	r5, #1
    2920:	tst	r5, lr, lsr ip
    2924:	popeq	{r4, r5, fp, pc}
    2928:	ldr	r0, [pc, #24]	; 2948 <InflateSkipData+0x6c>
    292c:	add	r0, pc, r0
    2930:	ldr	r0, [r0, r2, lsl #2]
    2934:	mul	r2, r0, r4
    2938:	mov	r0, r3
    293c:	bl	256c <InflateSkip>
    2940:	mov	r0, r4
    2944:	pop	{r4, r5, fp, pc}
    2948:	.word	0x0006f278

0000294c <InflateVarTag>:
    294c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2950:	add	fp, sp, #24
    2954:	sub	sp, sp, #32
    2958:	cmp	r2, #0
    295c:	beq	29f4 <InflateVarTag+0xa8>
    2960:	mov	r8, r0
    2964:	ldr	r0, [r1, #52]	; 0x34
    2968:	mov	r5, r1
    296c:	mov	r7, r2
    2970:	mov	r4, #0
    2974:	ldr	r0, [r0, #12]
    2978:	ldr	r1, [r0, #4]
    297c:	cmp	r1, #0
    2980:	bne	29b0 <InflateVarTag+0x64>
    2984:	mov	r1, sp
    2988:	mov	r2, #1
    298c:	stm	r0, {r1, r2}
    2990:	mov	r0, r1
    2994:	mov	r1, #1
    2998:	mov	r2, #1
    299c:	ldr	r3, [r8]
    29a0:	bl	18b8 <fread@plt>
    29a4:	mov	r4, r0
    29a8:	ldr	r0, [r5, #52]	; 0x34
    29ac:	ldr	r0, [r0, #12]
    29b0:	mov	r1, #8
    29b4:	str	r7, [r0, #12]
    29b8:	str	r1, [r0, #16]
    29bc:	mov	r1, #0
    29c0:	bl	17ec <inflate@plt>
    29c4:	cmp	r0, #0
    29c8:	beq	2a04 <InflateVarTag+0xb8>
    29cc:	cmp	r0, #2
    29d0:	mvneq	r0, #2
    29d4:	bl	1888 <zError@plt>
    29d8:	mov	r1, r0
    29dc:	ldr	r0, [pc, #200]	; 2aac <InflateVarTag+0x160>
    29e0:	add	r0, pc, r0
    29e4:	bl	19b4 <Mat_Critical@plt>
    29e8:	mov	r0, r4
    29ec:	sub	sp, fp, #24
    29f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    29f4:	mov	r4, #0
    29f8:	mov	r0, r4
    29fc:	sub	sp, fp, #24
    2a00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2a04:	mov	r9, #1
    2a08:	mov	r7, sp
    2a0c:	mov	r6, #1
    2a10:	ldr	r0, [r5, #52]	; 0x34
    2a14:	ldr	r0, [r0, #12]
    2a18:	ldr	r2, [r0, #16]
    2a1c:	ldr	r1, [r0, #4]
    2a20:	cmp	r2, #0
    2a24:	beq	2a70 <InflateVarTag+0x124>
    2a28:	cmp	r6, #1
    2a2c:	cmpeq	r1, #0
    2a30:	bne	2a70 <InflateVarTag+0x124>
    2a34:	stm	r0, {r7, r9}
    2a38:	mov	r0, r7
    2a3c:	mov	r1, #1
    2a40:	mov	r2, #1
    2a44:	ldr	r3, [r8]
    2a48:	bl	18b8 <fread@plt>
    2a4c:	mov	r6, r0
    2a50:	add	r4, r0, r4
    2a54:	ldr	r0, [r5, #52]	; 0x34
    2a58:	mov	r1, #0
    2a5c:	ldr	r0, [r0, #12]
    2a60:	bl	17ec <inflate@plt>
    2a64:	cmp	r0, #0
    2a68:	beq	2a10 <InflateVarTag+0xc4>
    2a6c:	b	29cc <InflateVarTag+0x80>
    2a70:	cmp	r1, #0
    2a74:	beq	2aa0 <InflateVarTag+0x154>
    2a78:	ldr	r0, [r8]
    2a7c:	rsb	r1, r1, #0
    2a80:	mov	r2, #1
    2a84:	bl	1a2c <fseek@plt>
    2a88:	ldr	r0, [r5, #52]	; 0x34
    2a8c:	mov	r2, #0
    2a90:	ldr	r0, [r0, #12]
    2a94:	ldr	r1, [r0, #4]
    2a98:	str	r2, [r0, #4]
    2a9c:	sub	r4, r4, r1
    2aa0:	mov	r0, r4
    2aa4:	sub	sp, fp, #24
    2aa8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2aac:	.word	0x0006efbc

00002ab0 <InflateArrayFlags>:
    2ab0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2ab4:	add	fp, sp, #24
    2ab8:	sub	sp, sp, #32
    2abc:	cmp	r2, #0
    2ac0:	beq	2b58 <InflateArrayFlags+0xa8>
    2ac4:	mov	r8, r0
    2ac8:	ldr	r0, [r1, #52]	; 0x34
    2acc:	mov	r5, r1
    2ad0:	mov	r7, r2
    2ad4:	mov	r4, #0
    2ad8:	ldr	r0, [r0, #12]
    2adc:	ldr	r1, [r0, #4]
    2ae0:	cmp	r1, #0
    2ae4:	bne	2b14 <InflateArrayFlags+0x64>
    2ae8:	mov	r1, sp
    2aec:	mov	r2, #1
    2af0:	stm	r0, {r1, r2}
    2af4:	mov	r0, r1
    2af8:	mov	r1, #1
    2afc:	mov	r2, #1
    2b00:	ldr	r3, [r8]
    2b04:	bl	18b8 <fread@plt>
    2b08:	mov	r4, r0
    2b0c:	ldr	r0, [r5, #52]	; 0x34
    2b10:	ldr	r0, [r0, #12]
    2b14:	mov	r1, #16
    2b18:	str	r7, [r0, #12]
    2b1c:	str	r1, [r0, #16]
    2b20:	mov	r1, #0
    2b24:	bl	17ec <inflate@plt>
    2b28:	cmp	r0, #0
    2b2c:	beq	2b68 <InflateArrayFlags+0xb8>
    2b30:	cmp	r0, #2
    2b34:	mvneq	r0, #2
    2b38:	bl	1888 <zError@plt>
    2b3c:	mov	r1, r0
    2b40:	ldr	r0, [pc, #200]	; 2c10 <InflateArrayFlags+0x160>
    2b44:	add	r0, pc, r0
    2b48:	bl	19b4 <Mat_Critical@plt>
    2b4c:	mov	r0, r4
    2b50:	sub	sp, fp, #24
    2b54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2b58:	mov	r4, #0
    2b5c:	mov	r0, r4
    2b60:	sub	sp, fp, #24
    2b64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2b68:	mov	r9, #1
    2b6c:	mov	r7, sp
    2b70:	mov	r6, #1
    2b74:	ldr	r0, [r5, #52]	; 0x34
    2b78:	ldr	r0, [r0, #12]
    2b7c:	ldr	r2, [r0, #16]
    2b80:	ldr	r1, [r0, #4]
    2b84:	cmp	r2, #0
    2b88:	beq	2bd4 <InflateArrayFlags+0x124>
    2b8c:	cmp	r6, #1
    2b90:	cmpeq	r1, #0
    2b94:	bne	2bd4 <InflateArrayFlags+0x124>
    2b98:	stm	r0, {r7, r9}
    2b9c:	mov	r0, r7
    2ba0:	mov	r1, #1
    2ba4:	mov	r2, #1
    2ba8:	ldr	r3, [r8]
    2bac:	bl	18b8 <fread@plt>
    2bb0:	mov	r6, r0
    2bb4:	add	r4, r0, r4
    2bb8:	ldr	r0, [r5, #52]	; 0x34
    2bbc:	mov	r1, #0
    2bc0:	ldr	r0, [r0, #12]
    2bc4:	bl	17ec <inflate@plt>
    2bc8:	cmp	r0, #0
    2bcc:	beq	2b74 <InflateArrayFlags+0xc4>
    2bd0:	b	2b30 <InflateArrayFlags+0x80>
    2bd4:	cmp	r1, #0
    2bd8:	beq	2c04 <InflateArrayFlags+0x154>
    2bdc:	ldr	r0, [r8]
    2be0:	rsb	r1, r1, #0
    2be4:	mov	r2, #1
    2be8:	bl	1a2c <fseek@plt>
    2bec:	ldr	r0, [r5, #52]	; 0x34
    2bf0:	mov	r2, #0
    2bf4:	ldr	r0, [r0, #12]
    2bf8:	ldr	r1, [r0, #4]
    2bfc:	str	r2, [r0, #4]
    2c00:	sub	r4, r4, r1
    2c04:	mov	r0, r4
    2c08:	sub	sp, fp, #24
    2c0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2c10:	.word	0x0006ee7b

00002c14 <InflateRankDims>:
    2c14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2c18:	add	fp, sp, #28
    2c1c:	sub	sp, sp, #44	; 0x2c
    2c20:	cmp	r2, #0
    2c24:	beq	2cc0 <InflateRankDims+0xac>
    2c28:	mov	sl, r0
    2c2c:	ldr	r0, [r1, #52]	; 0x34
    2c30:	mov	r5, r1
    2c34:	mov	r6, r3
    2c38:	mov	r9, r2
    2c3c:	mov	r4, #0
    2c40:	ldr	r0, [r0, #12]
    2c44:	ldr	r1, [r0, #4]
    2c48:	cmp	r1, #0
    2c4c:	bne	2c7c <InflateRankDims+0x68>
    2c50:	add	r1, sp, #12
    2c54:	mov	r2, #1
    2c58:	stm	r0, {r1, r2}
    2c5c:	mov	r0, r1
    2c60:	mov	r1, #1
    2c64:	mov	r2, #1
    2c68:	ldr	r3, [sl]
    2c6c:	bl	18b8 <fread@plt>
    2c70:	mov	r4, r0
    2c74:	ldr	r0, [r5, #52]	; 0x34
    2c78:	ldr	r0, [r0, #12]
    2c7c:	mov	r1, #8
    2c80:	str	r9, [r0, #12]
    2c84:	str	r1, [r0, #16]
    2c88:	mov	r1, #0
    2c8c:	bl	17ec <inflate@plt>
    2c90:	cmp	r0, #0
    2c94:	beq	2cd0 <InflateRankDims+0xbc>
    2c98:	cmp	r0, #2
    2c9c:	mvneq	r0, #2
    2ca0:	bl	1888 <zError@plt>
    2ca4:	mov	r1, r0
    2ca8:	ldr	r0, [pc, #616]	; 2f18 <InflateRankDims+0x304>
    2cac:	add	r0, pc, r0
    2cb0:	bl	19b4 <Mat_Critical@plt>
    2cb4:	mov	r0, r4
    2cb8:	sub	sp, fp, #28
    2cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2cc0:	mov	r4, #0
    2cc4:	mov	r0, r4
    2cc8:	sub	sp, fp, #28
    2ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2cd0:	str	r6, [sp]
    2cd4:	mov	r6, #1
    2cd8:	add	r8, sp, #12
    2cdc:	mov	r7, #1
    2ce0:	ldr	r0, [r5, #52]	; 0x34
    2ce4:	ldr	r0, [r0, #12]
    2ce8:	ldr	r1, [r0, #16]
    2cec:	cmp	r1, #0
    2cf0:	beq	2d44 <InflateRankDims+0x130>
    2cf4:	cmp	r7, #1
    2cf8:	ldreq	r1, [r0, #4]
    2cfc:	cmpeq	r1, #0
    2d00:	bne	2d44 <InflateRankDims+0x130>
    2d04:	str	r8, [r0]
    2d08:	str	r6, [r0, #4]
    2d0c:	mov	r0, r8
    2d10:	mov	r1, #1
    2d14:	mov	r2, #1
    2d18:	ldr	r3, [sl]
    2d1c:	bl	18b8 <fread@plt>
    2d20:	mov	r7, r0
    2d24:	add	r4, r0, r4
    2d28:	ldr	r0, [r5, #52]	; 0x34
    2d2c:	mov	r1, #0
    2d30:	ldr	r0, [r0, #12]
    2d34:	bl	17ec <inflate@plt>
    2d38:	cmp	r0, #0
    2d3c:	beq	2ce0 <InflateRankDims+0xcc>
    2d40:	b	2c98 <InflateRankDims+0x84>
    2d44:	ldm	r9, {r0, r1}
    2d48:	stmib	sp, {r0, r1}
    2d4c:	ldr	r1, [sl, #20]
    2d50:	cmp	r1, #0
    2d54:	beq	2d74 <InflateRankDims+0x160>
    2d58:	add	r0, sp, #4
    2d5c:	add	r7, r0, #4
    2d60:	add	r0, sp, #4
    2d64:	bl	1bf8 <Mat_int32Swap>
    2d68:	mov	r0, r7
    2d6c:	bl	1bf8 <Mat_int32Swap>
    2d70:	ldrh	r0, [sp, #4]
    2d74:	uxth	r0, r0
    2d78:	cmp	r0, #5
    2d7c:	bne	2e1c <InflateRankDims+0x208>
    2d80:	ldr	r6, [sp, #8]
    2d84:	asr	r0, r6, #31
    2d88:	add	r0, r6, r0, lsr #29
    2d8c:	bic	r0, r0, #7
    2d90:	subs	r1, r6, r0
    2d94:	addne	r6, r0, #8
    2d98:	ldr	r0, [r5, #52]	; 0x34
    2d9c:	ldr	r0, [r0, #12]
    2da0:	ldr	r1, [r0, #4]
    2da4:	cmp	r1, #0
    2da8:	bne	2dd8 <InflateRankDims+0x1c4>
    2dac:	mov	r1, #1
    2db0:	str	r8, [r0]
    2db4:	mov	r2, #1
    2db8:	str	r1, [r0, #4]
    2dbc:	mov	r0, r8
    2dc0:	mov	r1, #1
    2dc4:	ldr	r3, [sl]
    2dc8:	bl	18b8 <fread@plt>
    2dcc:	add	r4, r0, r4
    2dd0:	ldr	r0, [r5, #52]	; 0x34
    2dd4:	ldr	r0, [r0, #12]
    2dd8:	ldr	r2, [sp]
    2ddc:	add	r1, r6, #2
    2de0:	str	r6, [r0, #16]
    2de4:	lsl	r1, r1, #2
    2de8:	cmp	r1, r2
    2dec:	bls	2e34 <InflateRankDims+0x220>
    2df0:	mov	r0, r6
    2df4:	mov	r1, #4
    2df8:	bl	1798 <calloc@plt>
    2dfc:	mov	r1, r0
    2e00:	ldr	r0, [fp, #8]
    2e04:	cmp	r1, #0
    2e08:	str	r1, [r0]
    2e0c:	beq	2ef4 <InflateRankDims+0x2e0>
    2e10:	ldr	r0, [r5, #52]	; 0x34
    2e14:	ldr	r0, [r0, #12]
    2e18:	b	2e38 <InflateRankDims+0x224>
    2e1c:	ldr	r0, [pc, #240]	; 2f14 <InflateRankDims+0x300>
    2e20:	add	r0, pc, r0
    2e24:	bl	19b4 <Mat_Critical@plt>
    2e28:	mov	r0, r4
    2e2c:	sub	sp, fp, #28
    2e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2e34:	add	r1, r9, #8
    2e38:	str	r1, [r0, #12]
    2e3c:	mov	r1, #0
    2e40:	bl	17ec <inflate@plt>
    2e44:	cmp	r0, #0
    2e48:	bne	2c98 <InflateRankDims+0x84>
    2e4c:	mov	r6, #1
    2e50:	mov	r7, #1
    2e54:	ldr	r0, [r5, #52]	; 0x34
    2e58:	ldr	r0, [r0, #12]
    2e5c:	ldr	r2, [r0, #16]
    2e60:	ldr	r1, [r0, #4]
    2e64:	cmp	r2, #0
    2e68:	beq	2eb8 <InflateRankDims+0x2a4>
    2e6c:	cmp	r7, #1
    2e70:	cmpeq	r1, #0
    2e74:	bne	2eb8 <InflateRankDims+0x2a4>
    2e78:	str	r8, [r0]
    2e7c:	str	r6, [r0, #4]
    2e80:	mov	r0, r8
    2e84:	mov	r1, #1
    2e88:	mov	r2, #1
    2e8c:	ldr	r3, [sl]
    2e90:	bl	18b8 <fread@plt>
    2e94:	mov	r7, r0
    2e98:	add	r4, r0, r4
    2e9c:	ldr	r0, [r5, #52]	; 0x34
    2ea0:	mov	r1, #0
    2ea4:	ldr	r0, [r0, #12]
    2ea8:	bl	17ec <inflate@plt>
    2eac:	cmp	r0, #0
    2eb0:	beq	2e54 <InflateRankDims+0x240>
    2eb4:	b	2c98 <InflateRankDims+0x84>
    2eb8:	cmp	r1, #0
    2ebc:	beq	2e28 <InflateRankDims+0x214>
    2ec0:	ldr	r0, [sl]
    2ec4:	rsb	r1, r1, #0
    2ec8:	mov	r2, #1
    2ecc:	bl	1a2c <fseek@plt>
    2ed0:	ldr	r0, [r5, #52]	; 0x34
    2ed4:	mov	r2, #0
    2ed8:	ldr	r0, [r0, #12]
    2edc:	ldr	r1, [r0, #4]
    2ee0:	str	r2, [r0, #4]
    2ee4:	sub	r4, r4, r1
    2ee8:	mov	r0, r4
    2eec:	sub	sp, fp, #28
    2ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ef4:	mov	r0, #0
    2ef8:	str	r0, [r9, #4]
    2efc:	ldr	r0, [pc, #24]	; 2f1c <InflateRankDims+0x308>
    2f00:	add	r0, pc, r0
    2f04:	bl	19b4 <Mat_Critical@plt>
    2f08:	mov	r0, r4
    2f0c:	sub	sp, fp, #28
    2f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2f14:	.word	0x0006ebeb
    2f18:	.word	0x0006ed3a
    2f1c:	.word	0x0006eb49

00002f20 <InflateVarNameTag>:
    2f20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2f24:	add	fp, sp, #24
    2f28:	sub	sp, sp, #32
    2f2c:	cmp	r2, #0
    2f30:	beq	2fc8 <InflateVarNameTag+0xa8>
    2f34:	mov	r8, r0
    2f38:	ldr	r0, [r1, #52]	; 0x34
    2f3c:	mov	r5, r1
    2f40:	mov	r7, r2
    2f44:	mov	r4, #0
    2f48:	ldr	r0, [r0, #12]
    2f4c:	ldr	r1, [r0, #4]
    2f50:	cmp	r1, #0
    2f54:	bne	2f84 <InflateVarNameTag+0x64>
    2f58:	mov	r1, sp
    2f5c:	mov	r2, #1
    2f60:	stm	r0, {r1, r2}
    2f64:	mov	r0, r1
    2f68:	mov	r1, #1
    2f6c:	mov	r2, #1
    2f70:	ldr	r3, [r8]
    2f74:	bl	18b8 <fread@plt>
    2f78:	mov	r4, r0
    2f7c:	ldr	r0, [r5, #52]	; 0x34
    2f80:	ldr	r0, [r0, #12]
    2f84:	mov	r1, #8
    2f88:	str	r7, [r0, #12]
    2f8c:	str	r1, [r0, #16]
    2f90:	mov	r1, #0
    2f94:	bl	17ec <inflate@plt>
    2f98:	cmp	r0, #0
    2f9c:	beq	2fd8 <InflateVarNameTag+0xb8>
    2fa0:	cmp	r0, #2
    2fa4:	mvneq	r0, #2
    2fa8:	bl	1888 <zError@plt>
    2fac:	mov	r1, r0
    2fb0:	ldr	r0, [pc, #200]	; 3080 <InflateVarNameTag+0x160>
    2fb4:	add	r0, pc, r0
    2fb8:	bl	19b4 <Mat_Critical@plt>
    2fbc:	mov	r0, r4
    2fc0:	sub	sp, fp, #24
    2fc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2fc8:	mov	r4, #0
    2fcc:	mov	r0, r4
    2fd0:	sub	sp, fp, #24
    2fd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2fd8:	mov	r9, #1
    2fdc:	mov	r7, sp
    2fe0:	mov	r6, #1
    2fe4:	ldr	r0, [r5, #52]	; 0x34
    2fe8:	ldr	r0, [r0, #12]
    2fec:	ldr	r2, [r0, #16]
    2ff0:	ldr	r1, [r0, #4]
    2ff4:	cmp	r2, #0
    2ff8:	beq	3044 <InflateVarNameTag+0x124>
    2ffc:	cmp	r6, #1
    3000:	cmpeq	r1, #0
    3004:	bne	3044 <InflateVarNameTag+0x124>
    3008:	stm	r0, {r7, r9}
    300c:	mov	r0, r7
    3010:	mov	r1, #1
    3014:	mov	r2, #1
    3018:	ldr	r3, [r8]
    301c:	bl	18b8 <fread@plt>
    3020:	mov	r6, r0
    3024:	add	r4, r0, r4
    3028:	ldr	r0, [r5, #52]	; 0x34
    302c:	mov	r1, #0
    3030:	ldr	r0, [r0, #12]
    3034:	bl	17ec <inflate@plt>
    3038:	cmp	r0, #0
    303c:	beq	2fe4 <InflateVarNameTag+0xc4>
    3040:	b	2fa0 <InflateVarNameTag+0x80>
    3044:	cmp	r1, #0
    3048:	beq	3074 <InflateVarNameTag+0x154>
    304c:	ldr	r0, [r8]
    3050:	rsb	r1, r1, #0
    3054:	mov	r2, #1
    3058:	bl	1a2c <fseek@plt>
    305c:	ldr	r0, [r5, #52]	; 0x34
    3060:	mov	r2, #0
    3064:	ldr	r0, [r0, #12]
    3068:	ldr	r1, [r0, #4]
    306c:	str	r2, [r0, #4]
    3070:	sub	r4, r4, r1
    3074:	mov	r0, r4
    3078:	sub	sp, fp, #24
    307c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3080:	.word	0x0006eab6

00003084 <InflateVarName>:
    3084:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3088:	add	fp, sp, #24
    308c:	sub	sp, sp, #32
    3090:	cmp	r2, #0
    3094:	beq	312c <InflateVarName+0xa8>
    3098:	mov	r9, r0
    309c:	ldr	r0, [r1, #52]	; 0x34
    30a0:	mov	r5, r1
    30a4:	mov	r8, r3
    30a8:	mov	r7, r2
    30ac:	mov	r4, #0
    30b0:	ldr	r0, [r0, #12]
    30b4:	ldr	r1, [r0, #4]
    30b8:	cmp	r1, #0
    30bc:	bne	30ec <InflateVarName+0x68>
    30c0:	mov	r1, sp
    30c4:	mov	r2, #1
    30c8:	stm	r0, {r1, r2}
    30cc:	mov	r0, r1
    30d0:	mov	r1, #1
    30d4:	mov	r2, #1
    30d8:	ldr	r3, [r9]
    30dc:	bl	18b8 <fread@plt>
    30e0:	mov	r4, r0
    30e4:	ldr	r0, [r5, #52]	; 0x34
    30e8:	ldr	r0, [r0, #12]
    30ec:	mov	r1, #0
    30f0:	str	r7, [r0, #12]
    30f4:	str	r8, [r0, #16]
    30f8:	bl	17ec <inflate@plt>
    30fc:	cmp	r0, #0
    3100:	beq	313c <InflateVarName+0xb8>
    3104:	cmp	r0, #2
    3108:	mvneq	r0, #2
    310c:	bl	1888 <zError@plt>
    3110:	mov	r1, r0
    3114:	ldr	r0, [pc, #200]	; 31e4 <InflateVarName+0x160>
    3118:	add	r0, pc, r0
    311c:	bl	19b4 <Mat_Critical@plt>
    3120:	mov	r0, r4
    3124:	sub	sp, fp, #24
    3128:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    312c:	mov	r4, #0
    3130:	mov	r0, r4
    3134:	sub	sp, fp, #24
    3138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    313c:	mov	r8, #1
    3140:	mov	r7, sp
    3144:	mov	r6, #1
    3148:	ldr	r0, [r5, #52]	; 0x34
    314c:	ldr	r0, [r0, #12]
    3150:	ldr	r2, [r0, #16]
    3154:	ldr	r1, [r0, #4]
    3158:	cmp	r2, #0
    315c:	beq	31a8 <InflateVarName+0x124>
    3160:	cmp	r6, #1
    3164:	cmpeq	r1, #0
    3168:	bne	31a8 <InflateVarName+0x124>
    316c:	stm	r0, {r7, r8}
    3170:	mov	r0, r7
    3174:	mov	r1, #1
    3178:	mov	r2, #1
    317c:	ldr	r3, [r9]
    3180:	bl	18b8 <fread@plt>
    3184:	mov	r6, r0
    3188:	add	r4, r0, r4
    318c:	ldr	r0, [r5, #52]	; 0x34
    3190:	mov	r1, #0
    3194:	ldr	r0, [r0, #12]
    3198:	bl	17ec <inflate@plt>
    319c:	cmp	r0, #0
    31a0:	beq	3148 <InflateVarName+0xc4>
    31a4:	b	3104 <InflateVarName+0x80>
    31a8:	cmp	r1, #0
    31ac:	beq	31d8 <InflateVarName+0x154>
    31b0:	ldr	r0, [r9]
    31b4:	rsb	r1, r1, #0
    31b8:	mov	r2, #1
    31bc:	bl	1a2c <fseek@plt>
    31c0:	ldr	r0, [r5, #52]	; 0x34
    31c4:	mov	r2, #0
    31c8:	ldr	r0, [r0, #12]
    31cc:	ldr	r1, [r0, #4]
    31d0:	str	r2, [r0, #4]
    31d4:	sub	r4, r4, r1
    31d8:	mov	r0, r4
    31dc:	sub	sp, fp, #24
    31e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    31e4:	.word	0x0006e979

000031e8 <InflateDataTag>:
    31e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    31ec:	add	fp, sp, #24
    31f0:	sub	sp, sp, #32
    31f4:	cmp	r2, #0
    31f8:	beq	3328 <InflateDataTag+0x140>
    31fc:	mov	r8, r0
    3200:	ldr	r0, [r1, #52]	; 0x34
    3204:	mov	r5, r1
    3208:	mov	r7, r2
    320c:	mov	r4, #0
    3210:	ldr	r0, [r0, #12]
    3214:	ldr	r1, [r0, #4]
    3218:	cmp	r1, #0
    321c:	bne	324c <InflateDataTag+0x64>
    3220:	mov	r1, sp
    3224:	mov	r2, #1
    3228:	stm	r0, {r1, r2}
    322c:	mov	r0, r1
    3230:	mov	r1, #1
    3234:	mov	r2, #1
    3238:	ldr	r3, [r8]
    323c:	bl	18b8 <fread@plt>
    3240:	mov	r4, r0
    3244:	ldr	r0, [r5, #52]	; 0x34
    3248:	ldr	r0, [r0, #12]
    324c:	mov	r1, #8
    3250:	str	r7, [r0, #12]
    3254:	str	r1, [r0, #16]
    3258:	mov	r1, #0
    325c:	bl	17ec <inflate@plt>
    3260:	cmp	r0, #1
    3264:	beq	331c <InflateDataTag+0x134>
    3268:	cmp	r0, #0
    326c:	bne	3338 <InflateDataTag+0x150>
    3270:	mov	r9, #1
    3274:	mov	r7, sp
    3278:	mov	r6, #1
    327c:	ldr	r0, [r5, #52]	; 0x34
    3280:	ldr	r0, [r0, #12]
    3284:	ldr	r1, [r0, #16]
    3288:	cmp	r1, #0
    328c:	beq	32e8 <InflateDataTag+0x100>
    3290:	cmp	r6, #1
    3294:	ldreq	r1, [r0, #4]
    3298:	cmpeq	r1, #0
    329c:	bne	32e8 <InflateDataTag+0x100>
    32a0:	stm	r0, {r7, r9}
    32a4:	mov	r0, r7
    32a8:	mov	r1, #1
    32ac:	mov	r2, #1
    32b0:	ldr	r3, [r8]
    32b4:	bl	18b8 <fread@plt>
    32b8:	mov	r6, r0
    32bc:	add	r4, r0, r4
    32c0:	ldr	r0, [r5, #52]	; 0x34
    32c4:	mov	r1, #0
    32c8:	ldr	r0, [r0, #12]
    32cc:	bl	17ec <inflate@plt>
    32d0:	cmp	r0, #0
    32d4:	beq	327c <InflateDataTag+0x94>
    32d8:	cmp	r0, #1
    32dc:	bne	3338 <InflateDataTag+0x150>
    32e0:	ldr	r0, [r5, #52]	; 0x34
    32e4:	ldr	r0, [r0, #12]
    32e8:	ldr	r1, [r0, #4]
    32ec:	cmp	r1, #0
    32f0:	beq	331c <InflateDataTag+0x134>
    32f4:	ldr	r0, [r8]
    32f8:	rsb	r1, r1, #0
    32fc:	mov	r2, #1
    3300:	bl	1a2c <fseek@plt>
    3304:	ldr	r0, [r5, #52]	; 0x34
    3308:	mov	r2, #0
    330c:	ldr	r0, [r0, #12]
    3310:	ldr	r1, [r0, #4]
    3314:	str	r2, [r0, #4]
    3318:	sub	r4, r4, r1
    331c:	mov	r0, r4
    3320:	sub	sp, fp, #24
    3324:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3328:	mov	r4, #0
    332c:	mov	r0, r4
    3330:	sub	sp, fp, #24
    3334:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3338:	ldr	r5, [r5, #36]	; 0x24
    333c:	cmp	r0, #2
    3340:	mvneq	r0, #2
    3344:	bl	1888 <zError@plt>
    3348:	mov	r2, r0
    334c:	ldr	r0, [pc, #20]	; 3368 <InflateDataTag+0x180>
    3350:	mov	r1, r5
    3354:	add	r0, pc, r0
    3358:	bl	19b4 <Mat_Critical@plt>
    335c:	mov	r0, r4
    3360:	sub	sp, fp, #24
    3364:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3368:	.word	0x0006e761

0000336c <InflateDataType>:
    336c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3370:	add	fp, sp, #24
    3374:	sub	sp, sp, #32
    3378:	cmp	r2, #0
    337c:	beq	3404 <InflateDataType+0x98>
    3380:	mov	r8, r0
    3384:	ldr	r0, [r1, #4]
    3388:	mov	r7, r2
    338c:	mov	r5, r1
    3390:	mov	r4, #0
    3394:	cmp	r0, #0
    3398:	bne	33bc <InflateDataType+0x50>
    339c:	mov	r0, sp
    33a0:	mov	r1, #1
    33a4:	mov	r2, #1
    33a8:	stm	r5, {r0, r1}
    33ac:	mov	r1, #1
    33b0:	ldr	r3, [r8]
    33b4:	bl	18b8 <fread@plt>
    33b8:	mov	r4, r0
    33bc:	mov	r0, #4
    33c0:	str	r7, [r5, #12]
    33c4:	mov	r1, #0
    33c8:	str	r0, [r5, #16]
    33cc:	mov	r0, r5
    33d0:	bl	17ec <inflate@plt>
    33d4:	cmp	r0, #0
    33d8:	beq	3414 <InflateDataType+0xa8>
    33dc:	cmp	r0, #2
    33e0:	mvneq	r0, #2
    33e4:	bl	1888 <zError@plt>
    33e8:	mov	r1, r0
    33ec:	ldr	r0, [pc, #180]	; 34a8 <InflateDataType+0x13c>
    33f0:	add	r0, pc, r0
    33f4:	bl	19b4 <Mat_Critical@plt>
    33f8:	mov	r0, r4
    33fc:	sub	sp, fp, #24
    3400:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3404:	mov	r4, #0
    3408:	mov	r0, r4
    340c:	sub	sp, fp, #24
    3410:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3414:	mov	r9, #1
    3418:	mov	r7, sp
    341c:	mov	r6, #1
    3420:	ldr	r0, [r5, #16]
    3424:	ldr	r1, [r5, #4]
    3428:	cmp	r0, #0
    342c:	beq	3474 <InflateDataType+0x108>
    3430:	cmp	r6, #1
    3434:	cmpeq	r1, #0
    3438:	bne	3474 <InflateDataType+0x108>
    343c:	stm	r5, {r7, r9}
    3440:	mov	r0, r7
    3444:	mov	r1, #1
    3448:	mov	r2, #1
    344c:	ldr	r3, [r8]
    3450:	bl	18b8 <fread@plt>
    3454:	mov	r6, r0
    3458:	add	r4, r0, r4
    345c:	mov	r0, r5
    3460:	mov	r1, #0
    3464:	bl	17ec <inflate@plt>
    3468:	cmp	r0, #0
    346c:	beq	3420 <InflateDataType+0xb4>
    3470:	b	33dc <InflateDataType+0x70>
    3474:	cmp	r1, #0
    3478:	beq	349c <InflateDataType+0x130>
    347c:	ldr	r0, [r8]
    3480:	rsb	r1, r1, #0
    3484:	mov	r2, #1
    3488:	bl	1a2c <fseek@plt>
    348c:	ldr	r0, [r5, #4]
    3490:	mov	r1, #0
    3494:	str	r1, [r5, #4]
    3498:	sub	r4, r4, r0
    349c:	mov	r0, r4
    34a0:	sub	sp, fp, #24
    34a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    34a8:	.word	0x0006e6ee

000034ac <InflateData>:
    34ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    34b0:	add	fp, sp, #24
    34b4:	sub	sp, sp, #8
    34b8:	sub	sp, sp, #1024	; 0x400
    34bc:	cmp	r2, #0
    34c0:	mov	r4, #0
    34c4:	movne	r7, r3
    34c8:	cmpne	r3, #0
    34cc:	bne	34dc <InflateData+0x30>
    34d0:	mov	r0, r4
    34d4:	sub	sp, fp, #24
    34d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    34dc:	mov	r8, r0
    34e0:	ldr	r0, [r1, #4]
    34e4:	mov	r6, r2
    34e8:	mov	r5, r1
    34ec:	mov	r4, #0
    34f0:	cmp	r0, #0
    34f4:	bne	3524 <InflateData+0x78>
    34f8:	ldr	r3, [r8]
    34fc:	add	r9, sp, #4
    3500:	cmp	r7, #1024	; 0x400
    3504:	mov	r2, r7
    3508:	mov	r1, #1
    350c:	movcs	r2, #1024	; 0x400
    3510:	mov	r0, r9
    3514:	bl	18b8 <fread@plt>
    3518:	mov	r4, r0
    351c:	str	r9, [r5]
    3520:	str	r0, [r5, #4]
    3524:	mov	r0, r5
    3528:	mov	r1, #3
    352c:	str	r6, [r5, #12]
    3530:	str	r7, [r5, #16]
    3534:	bl	17ec <inflate@plt>
    3538:	cmp	r0, #1
    353c:	beq	34d0 <InflateData+0x24>
    3540:	cmp	r0, #0
    3544:	bne	35c8 <InflateData+0x11c>
    3548:	ldr	r0, [r5, #16]
    354c:	cmp	r0, #0
    3550:	beq	3614 <InflateData+0x168>
    3554:	add	r6, sp, #4
    3558:	ldr	r1, [r5, #4]
    355c:	cmp	r1, #0
    3560:	bne	3620 <InflateData+0x174>
    3564:	add	r0, r4, #1024	; 0x400
    3568:	mov	r2, #1024	; 0x400
    356c:	cmp	r0, r7
    3570:	bcc	3584 <InflateData+0xd8>
    3574:	add	r0, r4, #1
    3578:	sub	r2, r7, r4
    357c:	cmp	r0, r7
    3580:	movwhi	r2, #1
    3584:	ldr	r3, [r8]
    3588:	mov	r0, r6
    358c:	mov	r1, #1
    3590:	bl	18b8 <fread@plt>
    3594:	str	r6, [r5]
    3598:	str	r0, [r5, #4]
    359c:	add	r4, r0, r4
    35a0:	mov	r0, r5
    35a4:	mov	r1, #3
    35a8:	bl	17ec <inflate@plt>
    35ac:	cmn	r0, #5
    35b0:	cmpne	r0, #0
    35b4:	bne	35f0 <InflateData+0x144>
    35b8:	ldr	r0, [r5, #16]
    35bc:	cmp	r0, #0
    35c0:	bne	3558 <InflateData+0xac>
    35c4:	b	3614 <InflateData+0x168>
    35c8:	cmp	r0, #2
    35cc:	mvneq	r0, #2
    35d0:	bl	1888 <zError@plt>
    35d4:	mov	r1, r0
    35d8:	ldr	r0, [pc, #112]	; 3650 <InflateData+0x1a4>
    35dc:	add	r0, pc, r0
    35e0:	bl	19b4 <Mat_Critical@plt>
    35e4:	mov	r0, r4
    35e8:	sub	sp, fp, #24
    35ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    35f0:	cmp	r0, #1
    35f4:	beq	3614 <InflateData+0x168>
    35f8:	cmp	r0, #2
    35fc:	mvneq	r0, #2
    3600:	bl	1888 <zError@plt>
    3604:	mov	r1, r0
    3608:	ldr	r0, [pc, #60]	; 364c <InflateData+0x1a0>
    360c:	add	r0, pc, r0
    3610:	bl	19b4 <Mat_Critical@plt>
    3614:	ldr	r1, [r5, #4]
    3618:	cmp	r1, #0
    361c:	beq	34d0 <InflateData+0x24>
    3620:	ldr	r0, [r8]
    3624:	rsb	r1, r1, #0
    3628:	mov	r2, #1
    362c:	bl	1a2c <fseek@plt>
    3630:	ldr	r0, [r5, #4]
    3634:	mov	r1, #0
    3638:	str	r1, [r5, #4]
    363c:	sub	r4, r4, r0
    3640:	mov	r0, r4
    3644:	sub	sp, fp, #24
    3648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    364c:	.word	0x0006e4f7
    3650:	.word	0x0006e527

00003654 <InflateFieldNameLength>:
    3654:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3658:	add	fp, sp, #24
    365c:	sub	sp, sp, #32
    3660:	cmp	r2, #0
    3664:	beq	36fc <InflateFieldNameLength+0xa8>
    3668:	mov	r8, r0
    366c:	ldr	r0, [r1, #52]	; 0x34
    3670:	mov	r5, r1
    3674:	mov	r7, r2
    3678:	mov	r4, #0
    367c:	ldr	r0, [r0, #12]
    3680:	ldr	r1, [r0, #4]
    3684:	cmp	r1, #0
    3688:	bne	36b8 <InflateFieldNameLength+0x64>
    368c:	mov	r1, sp
    3690:	mov	r2, #1
    3694:	stm	r0, {r1, r2}
    3698:	mov	r0, r1
    369c:	mov	r1, #1
    36a0:	mov	r2, #1
    36a4:	ldr	r3, [r8]
    36a8:	bl	18b8 <fread@plt>
    36ac:	mov	r4, r0
    36b0:	ldr	r0, [r5, #52]	; 0x34
    36b4:	ldr	r0, [r0, #12]
    36b8:	mov	r1, #8
    36bc:	str	r7, [r0, #12]
    36c0:	str	r1, [r0, #16]
    36c4:	mov	r1, #0
    36c8:	bl	17ec <inflate@plt>
    36cc:	cmp	r0, #0
    36d0:	beq	370c <InflateFieldNameLength+0xb8>
    36d4:	cmp	r0, #2
    36d8:	mvneq	r0, #2
    36dc:	bl	1888 <zError@plt>
    36e0:	mov	r1, r0
    36e4:	ldr	r0, [pc, #200]	; 37b4 <InflateFieldNameLength+0x160>
    36e8:	add	r0, pc, r0
    36ec:	bl	19b4 <Mat_Critical@plt>
    36f0:	mov	r0, r4
    36f4:	sub	sp, fp, #24
    36f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    36fc:	mov	r4, #0
    3700:	mov	r0, r4
    3704:	sub	sp, fp, #24
    3708:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    370c:	mov	r9, #1
    3710:	mov	r7, sp
    3714:	mov	r6, #1
    3718:	ldr	r0, [r5, #52]	; 0x34
    371c:	ldr	r0, [r0, #12]
    3720:	ldr	r2, [r0, #16]
    3724:	ldr	r1, [r0, #4]
    3728:	cmp	r2, #0
    372c:	beq	3778 <InflateFieldNameLength+0x124>
    3730:	cmp	r6, #1
    3734:	cmpeq	r1, #0
    3738:	bne	3778 <InflateFieldNameLength+0x124>
    373c:	stm	r0, {r7, r9}
    3740:	mov	r0, r7
    3744:	mov	r1, #1
    3748:	mov	r2, #1
    374c:	ldr	r3, [r8]
    3750:	bl	18b8 <fread@plt>
    3754:	mov	r6, r0
    3758:	add	r4, r0, r4
    375c:	ldr	r0, [r5, #52]	; 0x34
    3760:	mov	r1, #0
    3764:	ldr	r0, [r0, #12]
    3768:	bl	17ec <inflate@plt>
    376c:	cmp	r0, #0
    3770:	beq	3718 <InflateFieldNameLength+0xc4>
    3774:	b	36d4 <InflateFieldNameLength+0x80>
    3778:	cmp	r1, #0
    377c:	beq	37a8 <InflateFieldNameLength+0x154>
    3780:	ldr	r0, [r8]
    3784:	rsb	r1, r1, #0
    3788:	mov	r2, #1
    378c:	bl	1a2c <fseek@plt>
    3790:	ldr	r0, [r5, #52]	; 0x34
    3794:	mov	r2, #0
    3798:	ldr	r0, [r0, #12]
    379c:	ldr	r1, [r0, #4]
    37a0:	str	r2, [r0, #4]
    37a4:	sub	r4, r4, r1
    37a8:	mov	r0, r4
    37ac:	sub	sp, fp, #24
    37b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    37b4:	.word	0x0006e43c

000037b8 <InflateFieldNamesTag>:
    37b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    37bc:	add	fp, sp, #24
    37c0:	sub	sp, sp, #32
    37c4:	cmp	r2, #0
    37c8:	beq	3860 <InflateFieldNamesTag+0xa8>
    37cc:	mov	r8, r0
    37d0:	ldr	r0, [r1, #52]	; 0x34
    37d4:	mov	r5, r1
    37d8:	mov	r7, r2
    37dc:	mov	r4, #0
    37e0:	ldr	r0, [r0, #12]
    37e4:	ldr	r1, [r0, #4]
    37e8:	cmp	r1, #0
    37ec:	bne	381c <InflateFieldNamesTag+0x64>
    37f0:	mov	r1, sp
    37f4:	mov	r2, #1
    37f8:	stm	r0, {r1, r2}
    37fc:	mov	r0, r1
    3800:	mov	r1, #1
    3804:	mov	r2, #1
    3808:	ldr	r3, [r8]
    380c:	bl	18b8 <fread@plt>
    3810:	mov	r4, r0
    3814:	ldr	r0, [r5, #52]	; 0x34
    3818:	ldr	r0, [r0, #12]
    381c:	mov	r1, #8
    3820:	str	r7, [r0, #12]
    3824:	str	r1, [r0, #16]
    3828:	mov	r1, #0
    382c:	bl	17ec <inflate@plt>
    3830:	cmp	r0, #0
    3834:	beq	3870 <InflateFieldNamesTag+0xb8>
    3838:	cmp	r0, #2
    383c:	mvneq	r0, #2
    3840:	bl	1888 <zError@plt>
    3844:	mov	r1, r0
    3848:	ldr	r0, [pc, #200]	; 3918 <InflateFieldNamesTag+0x160>
    384c:	add	r0, pc, r0
    3850:	bl	19b4 <Mat_Critical@plt>
    3854:	mov	r0, r4
    3858:	sub	sp, fp, #24
    385c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3860:	mov	r4, #0
    3864:	mov	r0, r4
    3868:	sub	sp, fp, #24
    386c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3870:	mov	r9, #1
    3874:	mov	r7, sp
    3878:	mov	r6, #1
    387c:	ldr	r0, [r5, #52]	; 0x34
    3880:	ldr	r0, [r0, #12]
    3884:	ldr	r2, [r0, #16]
    3888:	ldr	r1, [r0, #4]
    388c:	cmp	r2, #0
    3890:	beq	38dc <InflateFieldNamesTag+0x124>
    3894:	cmp	r6, #1
    3898:	cmpeq	r1, #0
    389c:	bne	38dc <InflateFieldNamesTag+0x124>
    38a0:	stm	r0, {r7, r9}
    38a4:	mov	r0, r7
    38a8:	mov	r1, #1
    38ac:	mov	r2, #1
    38b0:	ldr	r3, [r8]
    38b4:	bl	18b8 <fread@plt>
    38b8:	mov	r6, r0
    38bc:	add	r4, r0, r4
    38c0:	ldr	r0, [r5, #52]	; 0x34
    38c4:	mov	r1, #0
    38c8:	ldr	r0, [r0, #12]
    38cc:	bl	17ec <inflate@plt>
    38d0:	cmp	r0, #0
    38d4:	beq	387c <InflateFieldNamesTag+0xc4>
    38d8:	b	3838 <InflateFieldNamesTag+0x80>
    38dc:	cmp	r1, #0
    38e0:	beq	390c <InflateFieldNamesTag+0x154>
    38e4:	ldr	r0, [r8]
    38e8:	rsb	r1, r1, #0
    38ec:	mov	r2, #1
    38f0:	bl	1a2c <fseek@plt>
    38f4:	ldr	r0, [r5, #52]	; 0x34
    38f8:	mov	r2, #0
    38fc:	ldr	r0, [r0, #12]
    3900:	ldr	r1, [r0, #4]
    3904:	str	r2, [r0, #4]
    3908:	sub	r4, r4, r1
    390c:	mov	r0, r4
    3910:	sub	sp, fp, #24
    3914:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3918:	.word	0x0006e304

0000391c <InflateFieldNames>:
    391c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3920:	add	fp, sp, #28
    3924:	sub	sp, sp, #36	; 0x24
    3928:	cmp	r2, #0
    392c:	beq	39d0 <InflateFieldNames+0xb4>
    3930:	mov	r9, r0
    3934:	ldr	r0, [r1, #52]	; 0x34
    3938:	mov	r5, r1
    393c:	ldr	sl, [fp, #12]
    3940:	ldr	r6, [fp, #8]
    3944:	mov	r8, r3
    3948:	mov	r7, r2
    394c:	mov	r4, #0
    3950:	ldr	r0, [r0, #12]
    3954:	ldr	r1, [r0, #4]
    3958:	cmp	r1, #0
    395c:	bne	398c <InflateFieldNames+0x70>
    3960:	add	r1, sp, #4
    3964:	mov	r2, #1
    3968:	stm	r0, {r1, r2}
    396c:	mov	r0, r1
    3970:	mov	r1, #1
    3974:	mov	r2, #1
    3978:	ldr	r3, [r9]
    397c:	bl	18b8 <fread@plt>
    3980:	mov	r4, r0
    3984:	ldr	r0, [r5, #52]	; 0x34
    3988:	ldr	r0, [r0, #12]
    398c:	mla	r1, r6, r8, sl
    3990:	str	r7, [r0, #12]
    3994:	str	r1, [r0, #16]
    3998:	mov	r1, #0
    399c:	bl	17ec <inflate@plt>
    39a0:	cmp	r0, #0
    39a4:	beq	39e0 <InflateFieldNames+0xc4>
    39a8:	cmp	r0, #2
    39ac:	mvneq	r0, #2
    39b0:	bl	1888 <zError@plt>
    39b4:	mov	r1, r0
    39b8:	ldr	r0, [pc, #200]	; 3a88 <InflateFieldNames+0x16c>
    39bc:	add	r0, pc, r0
    39c0:	bl	19b4 <Mat_Critical@plt>
    39c4:	mov	r0, r4
    39c8:	sub	sp, fp, #28
    39cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    39d0:	mov	r4, #0
    39d4:	mov	r0, r4
    39d8:	sub	sp, fp, #28
    39dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    39e0:	mov	r8, #1
    39e4:	add	r7, sp, #4
    39e8:	mov	r6, #1
    39ec:	ldr	r0, [r5, #52]	; 0x34
    39f0:	ldr	r0, [r0, #12]
    39f4:	ldr	r2, [r0, #16]
    39f8:	ldr	r1, [r0, #4]
    39fc:	cmp	r2, #0
    3a00:	beq	3a4c <InflateFieldNames+0x130>
    3a04:	cmp	r6, #1
    3a08:	cmpeq	r1, #0
    3a0c:	bne	3a4c <InflateFieldNames+0x130>
    3a10:	stm	r0, {r7, r8}
    3a14:	mov	r0, r7
    3a18:	mov	r1, #1
    3a1c:	mov	r2, #1
    3a20:	ldr	r3, [r9]
    3a24:	bl	18b8 <fread@plt>
    3a28:	mov	r6, r0
    3a2c:	add	r4, r0, r4
    3a30:	ldr	r0, [r5, #52]	; 0x34
    3a34:	mov	r1, #0
    3a38:	ldr	r0, [r0, #12]
    3a3c:	bl	17ec <inflate@plt>
    3a40:	cmp	r0, #0
    3a44:	beq	39ec <InflateFieldNames+0xd0>
    3a48:	b	39a8 <InflateFieldNames+0x8c>
    3a4c:	cmp	r1, #0
    3a50:	beq	3a7c <InflateFieldNames+0x160>
    3a54:	ldr	r0, [r9]
    3a58:	rsb	r1, r1, #0
    3a5c:	mov	r2, #1
    3a60:	bl	1a2c <fseek@plt>
    3a64:	ldr	r0, [r5, #52]	; 0x34
    3a68:	mov	r2, #0
    3a6c:	ldr	r0, [r0, #12]
    3a70:	ldr	r1, [r0, #4]
    3a74:	str	r2, [r0, #4]
    3a78:	sub	r4, r4, r1
    3a7c:	mov	r0, r4
    3a80:	sub	sp, fp, #28
    3a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3a88:	.word	0x0006e1be

00003a8c <ReadDoubleData>:
    3a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3a90:	add	fp, sp, #28
    3a94:	sub	sp, sp, #4
    3a98:	vpush	{d8-d9}
    3a9c:	sub	sp, sp, #2224	; 0x8b0
    3aa0:	cmp	r0, #0
    3aa4:	mov	r5, #0
    3aa8:	str	r0, [sp, #36]	; 0x24
    3aac:	movne	r7, r1
    3ab0:	cmpne	r1, #0
    3ab4:	bne	3acc <ReadDoubleData+0x40>
    3ab8:	mov	r0, r5
    3abc:	sub	sp, fp, #48	; 0x30
    3ac0:	vpop	{d8-d9}
    3ac4:	add	sp, sp, #4
    3ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3acc:	ldr	r0, [sp, #36]	; 0x24
    3ad0:	ldr	r0, [r0]
    3ad4:	cmp	r0, #0
    3ad8:	beq	3ab8 <ReadDoubleData+0x2c>
    3adc:	mov	r0, r2
    3ae0:	mov	r6, r3
    3ae4:	mov	r4, r2
    3ae8:	bl	1924 <Mat_SizeOf@plt>
    3aec:	str	r0, [sp, #32]
    3af0:	sub	r0, r4, #1
    3af4:	cmp	r0, #12
    3af8:	bhi	3ab8 <ReadDoubleData+0x2c>
    3afc:	add	r1, pc, #4
    3b00:	ldr	r0, [r1, r0, lsl #2]
    3b04:	add	pc, r1, r0
    3b08:	.word	0x00000034
    3b0c:	.word	0x00000108
    3b10:	.word	0x000001dc
    3b14:	.word	0x00000244
    3b18:	.word	0x000002ac
    3b1c:	.word	0x00000314
    3b20:	.word	0x0000037c
    3b24:	.word	0xffffffb0
    3b28:	.word	0x000003e0
    3b2c:	.word	0xffffffb0
    3b30:	.word	0xffffffb0
    3b34:	.word	0x00000428
    3b38:	.word	0x0000048c
    3b3c:	cmp	r6, #256	; 0x100
    3b40:	bgt	3ff8 <ReadDoubleData+0x56c>
    3b44:	ldr	r0, [sp, #36]	; 0x24
    3b48:	ldr	r1, [sp, #32]
    3b4c:	add	r8, sp, #168	; 0xa8
    3b50:	mov	r2, r6
    3b54:	ldr	r3, [r0]
    3b58:	mov	r0, r8
    3b5c:	bl	18b8 <fread@plt>
    3b60:	mov	sl, r0
    3b64:	cmp	r6, #1
    3b68:	blt	65f0 <ReadDoubleData+0x2b64>
    3b6c:	mov	lr, #0
    3b70:	beq	5ce0 <ReadDoubleData+0x2254>
    3b74:	bic	lr, r6, #1
    3b78:	mov	r1, #1
    3b7c:	str	sl, [sp, #28]
    3b80:	str	r6, [sp, #8]
    3b84:	subs	r0, lr, #2
    3b88:	add	r0, r1, r0, lsr #1
    3b8c:	and	ip, r0, #1
    3b90:	beq	5c90 <ReadDoubleData+0x2204>
    3b94:	sub	r3, r0, ip
    3b98:	mov	r1, #0
    3b9c:	add	r9, sp, #108	; 0x6c
    3ba0:	mov	r6, #32
    3ba4:	add	r5, sp, #112	; 0x70
    3ba8:	mov	sl, r7
    3bac:	mov	r0, r7
    3bb0:	mov	r2, r7
    3bb4:	add	r4, r8, r1
    3bb8:	add	r0, r0, #16
    3bbc:	subs	r3, r3, #2
    3bc0:	add	r1, r1, #4
    3bc4:	ldrh	r7, [r4]
    3bc8:	strh	r7, [sp, #108]	; 0x6c
    3bcc:	vld1.16	{d16[0]}, [r9 :16]
    3bd0:	vmovl.s8	q8, d16
    3bd4:	vmovl.s16	q0, d16
    3bd8:	vcvt.f64.s32	d17, s1
    3bdc:	vcvt.f64.s32	d16, s0
    3be0:	vst1.64	{d16-d17}, [r2], r6
    3be4:	ldrh	r4, [r4, #2]
    3be8:	strh	r4, [sp, #112]	; 0x70
    3bec:	vld1.16	{d16[0]}, [r5 :16]
    3bf0:	vmovl.s8	q8, d16
    3bf4:	vmovl.s16	q0, d16
    3bf8:	vcvt.f64.s32	d17, s1
    3bfc:	vcvt.f64.s32	d16, s0
    3c00:	vst1.64	{d16-d17}, [r0]
    3c04:	mov	r0, r2
    3c08:	bne	3bb4 <ReadDoubleData+0x128>
    3c0c:	b	5c98 <ReadDoubleData+0x220c>
    3c10:	cmp	r6, #256	; 0x100
    3c14:	bgt	41e4 <ReadDoubleData+0x758>
    3c18:	ldr	r0, [sp, #36]	; 0x24
    3c1c:	ldr	r1, [sp, #32]
    3c20:	add	r8, sp, #168	; 0xa8
    3c24:	mov	r2, r6
    3c28:	ldr	r3, [r0]
    3c2c:	mov	r0, r8
    3c30:	bl	18b8 <fread@plt>
    3c34:	mov	sl, r0
    3c38:	cmp	r6, #1
    3c3c:	blt	65f0 <ReadDoubleData+0x2b64>
    3c40:	mov	lr, #0
    3c44:	beq	5d58 <ReadDoubleData+0x22cc>
    3c48:	bic	lr, r6, #1
    3c4c:	mov	r1, #1
    3c50:	str	sl, [sp, #28]
    3c54:	str	r6, [sp, #8]
    3c58:	subs	r0, lr, #2
    3c5c:	add	r0, r1, r0, lsr #1
    3c60:	and	ip, r0, #1
    3c64:	beq	5d08 <ReadDoubleData+0x227c>
    3c68:	sub	r3, r0, ip
    3c6c:	mov	r1, #0
    3c70:	add	r9, sp, #140	; 0x8c
    3c74:	mov	r6, #32
    3c78:	add	r5, sp, #144	; 0x90
    3c7c:	mov	sl, r7
    3c80:	mov	r0, r7
    3c84:	mov	r2, r7
    3c88:	add	r4, r8, r1
    3c8c:	add	r0, r0, #16
    3c90:	subs	r3, r3, #2
    3c94:	add	r1, r1, #4
    3c98:	ldrh	r7, [r4]
    3c9c:	strh	r7, [sp, #140]	; 0x8c
    3ca0:	vld1.16	{d16[0]}, [r9 :16]
    3ca4:	vmovl.u8	q8, d16
    3ca8:	vmovl.u16	q0, d16
    3cac:	vcvt.f64.u32	d17, s1
    3cb0:	vcvt.f64.u32	d16, s0
    3cb4:	vst1.64	{d16-d17}, [r2], r6
    3cb8:	ldrh	r4, [r4, #2]
    3cbc:	strh	r4, [sp, #144]	; 0x90
    3cc0:	vld1.16	{d16[0]}, [r5 :16]
    3cc4:	vmovl.u8	q8, d16
    3cc8:	vmovl.u16	q0, d16
    3ccc:	vcvt.f64.u32	d17, s1
    3cd0:	vcvt.f64.u32	d16, s0
    3cd4:	vst1.64	{d16-d17}, [r0]
    3cd8:	mov	r0, r2
    3cdc:	bne	3c88 <ReadDoubleData+0x1fc>
    3ce0:	b	5d10 <ReadDoubleData+0x2284>
    3ce4:	ldr	r0, [sp, #36]	; 0x24
    3ce8:	ldr	r0, [r0, #20]
    3cec:	cmp	r0, #0
    3cf0:	beq	43d0 <ReadDoubleData+0x944>
    3cf4:	cmp	r6, #256	; 0x100
    3cf8:	bgt	4968 <ReadDoubleData+0xedc>
    3cfc:	ldr	r0, [sp, #36]	; 0x24
    3d00:	ldr	r1, [sp, #32]
    3d04:	add	r4, sp, #168	; 0xa8
    3d08:	mov	r2, r6
    3d0c:	ldr	r3, [r0]
    3d10:	mov	r0, r4
    3d14:	bl	18b8 <fread@plt>
    3d18:	mov	sl, r0
    3d1c:	cmp	r6, #1
    3d20:	blt	65f0 <ReadDoubleData+0x2b64>
    3d24:	mov	r0, r4
    3d28:	bl	1c20 <Mat_int16Swap>
    3d2c:	vmov	s0, r0
    3d30:	add	r4, r4, #2
    3d34:	subs	r6, r6, #1
    3d38:	vcvt.f64.s32	d16, s0
    3d3c:	vstr	d16, [r7]
    3d40:	add	r7, r7, #8
    3d44:	bne	3d24 <ReadDoubleData+0x298>
    3d48:	b	65f0 <ReadDoubleData+0x2b64>
    3d4c:	ldr	r0, [sp, #36]	; 0x24
    3d50:	ldr	r0, [r0, #20]
    3d54:	cmp	r0, #0
    3d58:	beq	449c <ReadDoubleData+0xa10>
    3d5c:	cmp	r6, #256	; 0x100
    3d60:	bgt	4a5c <ReadDoubleData+0xfd0>
    3d64:	ldr	r0, [sp, #36]	; 0x24
    3d68:	ldr	r1, [sp, #32]
    3d6c:	add	r4, sp, #168	; 0xa8
    3d70:	mov	r2, r6
    3d74:	ldr	r3, [r0]
    3d78:	mov	r0, r4
    3d7c:	bl	18b8 <fread@plt>
    3d80:	mov	sl, r0
    3d84:	cmp	r6, #1
    3d88:	blt	65f0 <ReadDoubleData+0x2b64>
    3d8c:	mov	r0, r4
    3d90:	bl	1c34 <Mat_uint16Swap>
    3d94:	vmov	s0, r0
    3d98:	add	r4, r4, #2
    3d9c:	subs	r6, r6, #1
    3da0:	vcvt.f64.u32	d16, s0
    3da4:	vstr	d16, [r7]
    3da8:	add	r7, r7, #8
    3dac:	bne	3d8c <ReadDoubleData+0x300>
    3db0:	b	65f0 <ReadDoubleData+0x2b64>
    3db4:	ldr	r0, [sp, #36]	; 0x24
    3db8:	ldr	r0, [r0, #20]
    3dbc:	cmp	r0, #0
    3dc0:	beq	4568 <ReadDoubleData+0xadc>
    3dc4:	cmp	r6, #256	; 0x100
    3dc8:	bgt	4b50 <ReadDoubleData+0x10c4>
    3dcc:	ldr	r0, [sp, #36]	; 0x24
    3dd0:	ldr	r1, [sp, #32]
    3dd4:	add	r4, sp, #168	; 0xa8
    3dd8:	mov	r2, r6
    3ddc:	ldr	r3, [r0]
    3de0:	mov	r0, r4
    3de4:	bl	18b8 <fread@plt>
    3de8:	mov	sl, r0
    3dec:	cmp	r6, #1
    3df0:	blt	65f0 <ReadDoubleData+0x2b64>
    3df4:	mov	r0, r4
    3df8:	bl	1bf8 <Mat_int32Swap>
    3dfc:	vmov	s0, r0
    3e00:	add	r4, r4, #4
    3e04:	subs	r6, r6, #1
    3e08:	vcvt.f64.s32	d16, s0
    3e0c:	vstr	d16, [r7]
    3e10:	add	r7, r7, #8
    3e14:	bne	3df4 <ReadDoubleData+0x368>
    3e18:	b	65f0 <ReadDoubleData+0x2b64>
    3e1c:	ldr	r0, [sp, #36]	; 0x24
    3e20:	ldr	r0, [r0, #20]
    3e24:	cmp	r0, #0
    3e28:	beq	4618 <ReadDoubleData+0xb8c>
    3e2c:	cmp	r6, #256	; 0x100
    3e30:	bgt	4c44 <ReadDoubleData+0x11b8>
    3e34:	ldr	r0, [sp, #36]	; 0x24
    3e38:	ldr	r1, [sp, #32]
    3e3c:	add	r4, sp, #168	; 0xa8
    3e40:	mov	r2, r6
    3e44:	ldr	r3, [r0]
    3e48:	mov	r0, r4
    3e4c:	bl	18b8 <fread@plt>
    3e50:	mov	sl, r0
    3e54:	cmp	r6, #1
    3e58:	blt	65f0 <ReadDoubleData+0x2b64>
    3e5c:	mov	r0, r4
    3e60:	bl	1c0c <Mat_uint32Swap>
    3e64:	vmov	s0, r0
    3e68:	add	r4, r4, #4
    3e6c:	subs	r6, r6, #1
    3e70:	vcvt.f64.u32	d16, s0
    3e74:	vstr	d16, [r7]
    3e78:	add	r7, r7, #8
    3e7c:	bne	3e5c <ReadDoubleData+0x3d0>
    3e80:	b	65f0 <ReadDoubleData+0x2b64>
    3e84:	ldr	r0, [sp, #36]	; 0x24
    3e88:	ldr	r0, [r0, #20]
    3e8c:	cmp	r0, #0
    3e90:	beq	46c8 <ReadDoubleData+0xc3c>
    3e94:	cmp	r6, #256	; 0x100
    3e98:	bgt	4d38 <ReadDoubleData+0x12ac>
    3e9c:	ldr	r0, [sp, #36]	; 0x24
    3ea0:	ldr	r1, [sp, #32]
    3ea4:	add	r4, sp, #168	; 0xa8
    3ea8:	mov	r2, r6
    3eac:	ldr	r3, [r0]
    3eb0:	mov	r0, r4
    3eb4:	bl	18b8 <fread@plt>
    3eb8:	mov	sl, r0
    3ebc:	cmp	r6, #1
    3ec0:	blt	65f0 <ReadDoubleData+0x2b64>
    3ec4:	mov	r0, r4
    3ec8:	bl	1c4c <Mat_floatSwap>
    3ecc:	vcvt.f64.f32	d16, s0
    3ed0:	add	r4, r4, #4
    3ed4:	subs	r6, r6, #1
    3ed8:	vstr	d16, [r7]
    3edc:	add	r7, r7, #8
    3ee0:	bne	3ec4 <ReadDoubleData+0x438>
    3ee4:	b	65f0 <ReadDoubleData+0x2b64>
    3ee8:	ldr	r4, [sp, #36]	; 0x24
    3eec:	ldr	r1, [sp, #32]
    3ef0:	mov	r0, r7
    3ef4:	mov	r2, r6
    3ef8:	ldr	r3, [r4]
    3efc:	bl	18b8 <fread@plt>
    3f00:	mov	sl, r0
    3f04:	ldr	r0, [r4, #20]
    3f08:	cmp	r0, #0
    3f0c:	beq	65f0 <ReadDoubleData+0x2b64>
    3f10:	cmp	r6, #1
    3f14:	blt	65f0 <ReadDoubleData+0x2b64>
    3f18:	mov	r0, r7
    3f1c:	bl	1c90 <Mat_doubleSwap>
    3f20:	add	r7, r7, #8
    3f24:	subs	r6, r6, #1
    3f28:	bne	3f18 <ReadDoubleData+0x48c>
    3f2c:	b	65f0 <ReadDoubleData+0x2b64>
    3f30:	ldr	r0, [sp, #36]	; 0x24
    3f34:	ldr	r0, [r0, #20]
    3f38:	cmp	r0, #0
    3f3c:	beq	4770 <ReadDoubleData+0xce4>
    3f40:	cmp	r6, #256	; 0x100
    3f44:	bgt	4e24 <ReadDoubleData+0x1398>
    3f48:	ldr	r0, [sp, #36]	; 0x24
    3f4c:	ldr	r1, [sp, #32]
    3f50:	add	r4, sp, #168	; 0xa8
    3f54:	mov	r2, r6
    3f58:	ldr	r3, [r0]
    3f5c:	mov	r0, r4
    3f60:	bl	18b8 <fread@plt>
    3f64:	mov	sl, r0
    3f68:	cmp	r6, #1
    3f6c:	blt	65f0 <ReadDoubleData+0x2b64>
    3f70:	mov	r0, r4
    3f74:	bl	1b84 <Mat_int64Swap>
    3f78:	bl	71540 <__aeabi_l2d>
    3f7c:	strd	r0, [r7]
    3f80:	add	r4, r4, #8
    3f84:	add	r7, r7, #8
    3f88:	subs	r6, r6, #1
    3f8c:	bne	3f70 <ReadDoubleData+0x4e4>
    3f90:	b	65f0 <ReadDoubleData+0x2b64>
    3f94:	ldr	r0, [sp, #36]	; 0x24
    3f98:	ldr	r0, [r0, #20]
    3f9c:	cmp	r0, #0
    3fa0:	beq	486c <ReadDoubleData+0xde0>
    3fa4:	cmp	r6, #256	; 0x100
    3fa8:	bgt	4f14 <ReadDoubleData+0x1488>
    3fac:	ldr	r0, [sp, #36]	; 0x24
    3fb0:	ldr	r1, [sp, #32]
    3fb4:	add	r4, sp, #168	; 0xa8
    3fb8:	mov	r2, r6
    3fbc:	ldr	r3, [r0]
    3fc0:	mov	r0, r4
    3fc4:	bl	18b8 <fread@plt>
    3fc8:	mov	sl, r0
    3fcc:	cmp	r6, #1
    3fd0:	blt	65f0 <ReadDoubleData+0x2b64>
    3fd4:	mov	r0, r4
    3fd8:	bl	1bd4 <Mat_uint64Swap>
    3fdc:	bl	7152c <__aeabi_ul2d>
    3fe0:	strd	r0, [r7]
    3fe4:	add	r4, r4, #8
    3fe8:	add	r7, r7, #8
    3fec:	subs	r6, r6, #1
    3ff0:	bne	3fd4 <ReadDoubleData+0x548>
    3ff4:	b	65f0 <ReadDoubleData+0x2b64>
    3ff8:	sub	r1, r6, #256	; 0x100
    3ffc:	str	r6, [sp, #8]
    4000:	mov	r8, r7
    4004:	add	r0, r7, #2048	; 0x800
    4008:	mov	r2, #0
    400c:	mov	r7, #0
    4010:	add	r6, sp, #168	; 0xa8
    4014:	add	sl, sp, #128	; 0x80
    4018:	mov	r9, #32
    401c:	add	r5, sp, #132	; 0x84
    4020:	str	r1, [sp, #12]
    4024:	mov	r1, #256	; 0x100
    4028:	str	r8, [sp, #4]
    402c:	str	r2, [sp, #28]
    4030:	add	r2, sp, #16
    4034:	stm	r2, {r0, r1, r7}
    4038:	ldr	r0, [sp, #36]	; 0x24
    403c:	ldr	r1, [sp, #32]
    4040:	mov	r2, #256	; 0x100
    4044:	ldr	r3, [r0]
    4048:	mov	r0, r6
    404c:	bl	18b8 <fread@plt>
    4050:	mov	r3, r8
    4054:	mov	r1, #0
    4058:	mov	r2, r8
    405c:	add	r4, r6, r1
    4060:	add	r1, r1, #4
    4064:	add	r3, r3, #16
    4068:	ldrh	r7, [r4]
    406c:	cmp	r1, #256	; 0x100
    4070:	strh	r7, [sp, #128]	; 0x80
    4074:	vld1.16	{d16[0]}, [sl :16]
    4078:	vmovl.s8	q8, d16
    407c:	vmovl.s16	q0, d16
    4080:	vcvt.f64.s32	d17, s1
    4084:	vcvt.f64.s32	d16, s0
    4088:	vst1.64	{d16-d17}, [r2], r9
    408c:	ldrh	r7, [r4, #2]
    4090:	strh	r7, [sp, #132]	; 0x84
    4094:	vld1.16	{d16[0]}, [r5 :16]
    4098:	vmovl.s8	q8, d16
    409c:	vmovl.s16	q0, d16
    40a0:	vcvt.f64.s32	d17, s1
    40a4:	vcvt.f64.s32	d16, s0
    40a8:	vst1.64	{d16-d17}, [r3]
    40ac:	mov	r3, r2
    40b0:	bne	405c <ReadDoubleData+0x5d0>
    40b4:	ldr	r1, [sp, #28]
    40b8:	ldr	r2, [sp, #24]
    40bc:	add	r8, r8, #2048	; 0x800
    40c0:	add	r1, r0, r1
    40c4:	ldr	r0, [sp, #16]
    40c8:	add	r7, r2, #256	; 0x100
    40cc:	ldr	r2, [sp, #12]
    40d0:	str	r1, [sp, #28]
    40d4:	ldr	r1, [sp, #20]
    40d8:	add	r0, r0, #2048	; 0x800
    40dc:	cmp	r7, r2
    40e0:	add	r1, r1, #256	; 0x100
    40e4:	blt	4030 <ReadDoubleData+0x5a4>
    40e8:	ldr	r4, [sp, #8]
    40ec:	cmp	r7, r4
    40f0:	bge	65ec <ReadDoubleData+0x2b60>
    40f4:	ldr	r0, [sp, #36]	; 0x24
    40f8:	ldr	r1, [sp, #32]
    40fc:	sub	r5, r4, r7
    4100:	add	r8, sp, #168	; 0xa8
    4104:	mov	r2, r5
    4108:	ldr	r3, [r0]
    410c:	mov	r0, r8
    4110:	bl	18b8 <fread@plt>
    4114:	ldr	sl, [sp, #28]
    4118:	cmp	r5, #1
    411c:	add	sl, r0, sl
    4120:	blt	65f0 <ReadDoubleData+0x2b64>
    4124:	mov	lr, #0
    4128:	beq	5dd4 <ReadDoubleData+0x2348>
    412c:	bic	lr, r5, #1
    4130:	mov	r1, #1
    4134:	str	r5, [sp, #36]	; 0x24
    4138:	subs	r0, lr, #2
    413c:	add	r0, r1, r0, lsr #1
    4140:	and	r0, r0, #1
    4144:	str	r0, [sp, #28]
    4148:	beq	5d80 <ReadDoubleData+0x22f4>
    414c:	ldr	r0, [sp, #24]
    4150:	ldr	ip, [sp, #16]
    4154:	add	r9, sp, #120	; 0x78
    4158:	mov	r5, #32
    415c:	sub	r0, r4, r0
    4160:	add	r4, sp, #124	; 0x7c
    4164:	sub	r0, r0, #256	; 0x100
    4168:	bic	r0, r0, #1
    416c:	sub	r0, r0, #2
    4170:	mvn	r2, r0, lsr #1
    4174:	add	r0, r1, r0, lsr #1
    4178:	mov	r1, #0
    417c:	and	r0, r0, #1
    4180:	add	r3, r2, r0
    4184:	mov	r2, ip
    4188:	add	r6, r8, r1
    418c:	adds	r3, r3, #2
    4190:	add	r1, r1, #4
    4194:	ldrh	r0, [r6]
    4198:	strh	r0, [sp, #120]	; 0x78
    419c:	vld1.16	{d16[0]}, [r9 :16]
    41a0:	vmovl.s8	q8, d16
    41a4:	vmovl.s16	q0, d16
    41a8:	vcvt.f64.s32	d17, s1
    41ac:	vcvt.f64.s32	d16, s0
    41b0:	vst1.64	{d16-d17}, [r2], r5
    41b4:	ldrh	r0, [r6, #2]
    41b8:	strh	r0, [sp, #124]	; 0x7c
    41bc:	add	r0, ip, #16
    41c0:	mov	ip, r2
    41c4:	vld1.16	{d16[0]}, [r4 :16]
    41c8:	vmovl.s8	q8, d16
    41cc:	vmovl.s16	q0, d16
    41d0:	vcvt.f64.s32	d17, s1
    41d4:	vcvt.f64.s32	d16, s0
    41d8:	vst1.64	{d16-d17}, [r0]
    41dc:	bne	4188 <ReadDoubleData+0x6fc>
    41e0:	b	5d84 <ReadDoubleData+0x22f8>
    41e4:	sub	r1, r6, #256	; 0x100
    41e8:	str	r6, [sp, #8]
    41ec:	mov	r8, r7
    41f0:	add	r0, r7, #2048	; 0x800
    41f4:	mov	r2, #0
    41f8:	mov	r7, #0
    41fc:	add	r6, sp, #168	; 0xa8
    4200:	add	sl, sp, #160	; 0xa0
    4204:	mov	r9, #32
    4208:	add	r5, sp, #164	; 0xa4
    420c:	str	r1, [sp, #12]
    4210:	mov	r1, #256	; 0x100
    4214:	str	r8, [sp, #4]
    4218:	str	r2, [sp, #28]
    421c:	add	r2, sp, #16
    4220:	stm	r2, {r0, r1, r7}
    4224:	ldr	r0, [sp, #36]	; 0x24
    4228:	ldr	r1, [sp, #32]
    422c:	mov	r2, #256	; 0x100
    4230:	ldr	r3, [r0]
    4234:	mov	r0, r6
    4238:	bl	18b8 <fread@plt>
    423c:	mov	r3, r8
    4240:	mov	r1, #0
    4244:	mov	r2, r8
    4248:	add	r4, r6, r1
    424c:	add	r1, r1, #4
    4250:	add	r3, r3, #16
    4254:	ldrh	r7, [r4]
    4258:	cmp	r1, #256	; 0x100
    425c:	strh	r7, [sp, #160]	; 0xa0
    4260:	vld1.16	{d16[0]}, [sl :16]
    4264:	vmovl.u8	q8, d16
    4268:	vmovl.u16	q0, d16
    426c:	vcvt.f64.u32	d17, s1
    4270:	vcvt.f64.u32	d16, s0
    4274:	vst1.64	{d16-d17}, [r2], r9
    4278:	ldrh	r7, [r4, #2]
    427c:	strh	r7, [sp, #164]	; 0xa4
    4280:	vld1.16	{d16[0]}, [r5 :16]
    4284:	vmovl.u8	q8, d16
    4288:	vmovl.u16	q0, d16
    428c:	vcvt.f64.u32	d17, s1
    4290:	vcvt.f64.u32	d16, s0
    4294:	vst1.64	{d16-d17}, [r3]
    4298:	mov	r3, r2
    429c:	bne	4248 <ReadDoubleData+0x7bc>
    42a0:	ldr	r1, [sp, #28]
    42a4:	ldr	r2, [sp, #24]
    42a8:	add	r8, r8, #2048	; 0x800
    42ac:	add	r1, r0, r1
    42b0:	ldr	r0, [sp, #16]
    42b4:	add	r7, r2, #256	; 0x100
    42b8:	ldr	r2, [sp, #12]
    42bc:	str	r1, [sp, #28]
    42c0:	ldr	r1, [sp, #20]
    42c4:	add	r0, r0, #2048	; 0x800
    42c8:	cmp	r7, r2
    42cc:	add	r1, r1, #256	; 0x100
    42d0:	blt	421c <ReadDoubleData+0x790>
    42d4:	ldr	r4, [sp, #8]
    42d8:	cmp	r7, r4
    42dc:	bge	65ec <ReadDoubleData+0x2b60>
    42e0:	ldr	r0, [sp, #36]	; 0x24
    42e4:	ldr	r1, [sp, #32]
    42e8:	sub	r5, r4, r7
    42ec:	add	r8, sp, #168	; 0xa8
    42f0:	mov	r2, r5
    42f4:	ldr	r3, [r0]
    42f8:	mov	r0, r8
    42fc:	bl	18b8 <fread@plt>
    4300:	ldr	sl, [sp, #28]
    4304:	cmp	r5, #1
    4308:	add	sl, r0, sl
    430c:	blt	65f0 <ReadDoubleData+0x2b64>
    4310:	mov	lr, #0
    4314:	beq	5e68 <ReadDoubleData+0x23dc>
    4318:	bic	lr, r5, #1
    431c:	mov	r1, #1
    4320:	str	r5, [sp, #36]	; 0x24
    4324:	subs	r0, lr, #2
    4328:	add	r0, r1, r0, lsr #1
    432c:	and	r0, r0, #1
    4330:	str	r0, [sp, #28]
    4334:	beq	5e14 <ReadDoubleData+0x2388>
    4338:	ldr	r0, [sp, #24]
    433c:	ldr	ip, [sp, #16]
    4340:	add	r9, sp, #152	; 0x98
    4344:	mov	r5, #32
    4348:	sub	r0, r4, r0
    434c:	add	r4, sp, #156	; 0x9c
    4350:	sub	r0, r0, #256	; 0x100
    4354:	bic	r0, r0, #1
    4358:	sub	r0, r0, #2
    435c:	mvn	r2, r0, lsr #1
    4360:	add	r0, r1, r0, lsr #1
    4364:	mov	r1, #0
    4368:	and	r0, r0, #1
    436c:	add	r3, r2, r0
    4370:	mov	r2, ip
    4374:	add	r6, r8, r1
    4378:	adds	r3, r3, #2
    437c:	add	r1, r1, #4
    4380:	ldrh	r0, [r6]
    4384:	strh	r0, [sp, #152]	; 0x98
    4388:	vld1.16	{d16[0]}, [r9 :16]
    438c:	vmovl.u8	q8, d16
    4390:	vmovl.u16	q0, d16
    4394:	vcvt.f64.u32	d17, s1
    4398:	vcvt.f64.u32	d16, s0
    439c:	vst1.64	{d16-d17}, [r2], r5
    43a0:	ldrh	r0, [r6, #2]
    43a4:	strh	r0, [sp, #156]	; 0x9c
    43a8:	add	r0, ip, #16
    43ac:	mov	ip, r2
    43b0:	vld1.16	{d16[0]}, [r4 :16]
    43b4:	vmovl.u8	q8, d16
    43b8:	vmovl.u16	q0, d16
    43bc:	vcvt.f64.u32	d17, s1
    43c0:	vcvt.f64.u32	d16, s0
    43c4:	vst1.64	{d16-d17}, [r0]
    43c8:	bne	4374 <ReadDoubleData+0x8e8>
    43cc:	b	5e18 <ReadDoubleData+0x238c>
    43d0:	cmp	r6, #256	; 0x100
    43d4:	bgt	5004 <ReadDoubleData+0x1578>
    43d8:	ldr	r0, [sp, #36]	; 0x24
    43dc:	ldr	r1, [sp, #32]
    43e0:	add	r4, sp, #168	; 0xa8
    43e4:	mov	r2, r6
    43e8:	ldr	r3, [r0]
    43ec:	mov	r0, r4
    43f0:	bl	18b8 <fread@plt>
    43f4:	mov	sl, r0
    43f8:	cmp	r6, #1
    43fc:	blt	65f0 <ReadDoubleData+0x2b64>
    4400:	mov	lr, #0
    4404:	beq	5ef4 <ReadDoubleData+0x2468>
    4408:	bic	lr, r6, #1
    440c:	mov	r1, #1
    4410:	mov	r9, r6
    4414:	str	sl, [sp, #28]
    4418:	subs	r0, lr, #2
    441c:	add	r0, r1, r0, lsr #1
    4420:	and	ip, r0, #1
    4424:	beq	5ea8 <ReadDoubleData+0x241c>
    4428:	sub	r3, r0, ip
    442c:	mov	r1, #0
    4430:	add	r8, sp, #44	; 0x2c
    4434:	mov	r6, #32
    4438:	add	r5, sp, #48	; 0x30
    443c:	mov	sl, r7
    4440:	mov	r0, r7
    4444:	mov	r2, r7
    4448:	ldr	r7, [r4]
    444c:	add	r0, r0, #16
    4450:	subs	r3, r3, #2
    4454:	add	r1, r1, #4
    4458:	str	r7, [sp, #44]	; 0x2c
    445c:	vld1.32	{d16[0]}, [r8 :32]
    4460:	vmovl.s16	q0, d16
    4464:	vcvt.f64.s32	d17, s1
    4468:	vcvt.f64.s32	d16, s0
    446c:	vst1.64	{d16-d17}, [r2], r6
    4470:	ldr	r7, [r4, #4]
    4474:	add	r4, r4, #8
    4478:	str	r7, [sp, #48]	; 0x30
    447c:	vld1.32	{d16[0]}, [r5 :32]
    4480:	vmovl.s16	q0, d16
    4484:	vcvt.f64.s32	d17, s1
    4488:	vcvt.f64.s32	d16, s0
    448c:	vst1.64	{d16-d17}, [r0]
    4490:	mov	r0, r2
    4494:	bne	4448 <ReadDoubleData+0x9bc>
    4498:	b	5eb0 <ReadDoubleData+0x2424>
    449c:	cmp	r6, #256	; 0x100
    44a0:	bgt	51dc <ReadDoubleData+0x1750>
    44a4:	ldr	r0, [sp, #36]	; 0x24
    44a8:	ldr	r1, [sp, #32]
    44ac:	add	r4, sp, #168	; 0xa8
    44b0:	mov	r2, r6
    44b4:	ldr	r3, [r0]
    44b8:	mov	r0, r4
    44bc:	bl	18b8 <fread@plt>
    44c0:	mov	sl, r0
    44c4:	cmp	r6, #1
    44c8:	blt	65f0 <ReadDoubleData+0x2b64>
    44cc:	mov	lr, #0
    44d0:	beq	5f6c <ReadDoubleData+0x24e0>
    44d4:	bic	lr, r6, #1
    44d8:	mov	r1, #1
    44dc:	mov	r9, r6
    44e0:	str	sl, [sp, #28]
    44e4:	subs	r0, lr, #2
    44e8:	add	r0, r1, r0, lsr #1
    44ec:	and	ip, r0, #1
    44f0:	beq	5f20 <ReadDoubleData+0x2494>
    44f4:	sub	r3, r0, ip
    44f8:	mov	r1, #0
    44fc:	add	r8, sp, #76	; 0x4c
    4500:	mov	r6, #32
    4504:	add	r5, sp, #80	; 0x50
    4508:	mov	sl, r7
    450c:	mov	r0, r7
    4510:	mov	r2, r7
    4514:	ldr	r7, [r4]
    4518:	add	r0, r0, #16
    451c:	subs	r3, r3, #2
    4520:	add	r1, r1, #4
    4524:	str	r7, [sp, #76]	; 0x4c
    4528:	vld1.32	{d16[0]}, [r8 :32]
    452c:	vmovl.u16	q0, d16
    4530:	vcvt.f64.u32	d17, s1
    4534:	vcvt.f64.u32	d16, s0
    4538:	vst1.64	{d16-d17}, [r2], r6
    453c:	ldr	r7, [r4, #4]
    4540:	add	r4, r4, #8
    4544:	str	r7, [sp, #80]	; 0x50
    4548:	vld1.32	{d16[0]}, [r5 :32]
    454c:	vmovl.u16	q0, d16
    4550:	vcvt.f64.u32	d17, s1
    4554:	vcvt.f64.u32	d16, s0
    4558:	vst1.64	{d16-d17}, [r0]
    455c:	mov	r0, r2
    4560:	bne	4514 <ReadDoubleData+0xa88>
    4564:	b	5f28 <ReadDoubleData+0x249c>
    4568:	cmp	r6, #256	; 0x100
    456c:	bgt	53b4 <ReadDoubleData+0x1928>
    4570:	ldr	r0, [sp, #36]	; 0x24
    4574:	ldr	r1, [sp, #32]
    4578:	add	r5, sp, #168	; 0xa8
    457c:	mov	r2, r6
    4580:	ldr	r3, [r0]
    4584:	mov	r0, r5
    4588:	bl	18b8 <fread@plt>
    458c:	mov	sl, r0
    4590:	cmp	r6, #1
    4594:	blt	65f0 <ReadDoubleData+0x2b64>
    4598:	mov	lr, #0
    459c:	beq	5fd0 <ReadDoubleData+0x2544>
    45a0:	bic	lr, r6, #1
    45a4:	mov	r1, #1
    45a8:	mov	r9, r7
    45ac:	mov	r8, r6
    45b0:	subs	r0, lr, #2
    45b4:	add	r0, r1, r0, lsr #1
    45b8:	and	ip, r0, #1
    45bc:	beq	5f98 <ReadDoubleData+0x250c>
    45c0:	sub	r3, r0, ip
    45c4:	mov	r1, #0
    45c8:	mov	r7, #16
    45cc:	mov	r6, #32
    45d0:	mov	r0, r9
    45d4:	mov	r4, r5
    45d8:	mov	r2, r9
    45dc:	vld1.32	{d0}, [r4], r7
    45e0:	add	r0, r0, #16
    45e4:	subs	r3, r3, #2
    45e8:	add	r1, r1, #4
    45ec:	vcvt.f64.s32	d17, s1
    45f0:	vcvt.f64.s32	d16, s0
    45f4:	vst1.64	{d16-d17}, [r2], r6
    45f8:	vldr	d0, [r5, #8]
    45fc:	mov	r5, r4
    4600:	vcvt.f64.s32	d17, s1
    4604:	vcvt.f64.s32	d16, s0
    4608:	vst1.64	{d16-d17}, [r0]
    460c:	mov	r0, r2
    4610:	bne	45dc <ReadDoubleData+0xb50>
    4614:	b	5f9c <ReadDoubleData+0x2510>
    4618:	cmp	r6, #256	; 0x100
    461c:	bgt	5540 <ReadDoubleData+0x1ab4>
    4620:	ldr	r0, [sp, #36]	; 0x24
    4624:	ldr	r1, [sp, #32]
    4628:	add	r5, sp, #168	; 0xa8
    462c:	mov	r2, r6
    4630:	ldr	r3, [r0]
    4634:	mov	r0, r5
    4638:	bl	18b8 <fread@plt>
    463c:	mov	sl, r0
    4640:	cmp	r6, #1
    4644:	blt	65f0 <ReadDoubleData+0x2b64>
    4648:	mov	lr, #0
    464c:	beq	6034 <ReadDoubleData+0x25a8>
    4650:	bic	lr, r6, #1
    4654:	mov	r1, #1
    4658:	mov	r9, r7
    465c:	mov	r8, r6
    4660:	subs	r0, lr, #2
    4664:	add	r0, r1, r0, lsr #1
    4668:	and	ip, r0, #1
    466c:	beq	5ffc <ReadDoubleData+0x2570>
    4670:	sub	r3, r0, ip
    4674:	mov	r1, #0
    4678:	mov	r7, #16
    467c:	mov	r6, #32
    4680:	mov	r0, r9
    4684:	mov	r4, r5
    4688:	mov	r2, r9
    468c:	vld1.32	{d0}, [r4], r7
    4690:	add	r0, r0, #16
    4694:	subs	r3, r3, #2
    4698:	add	r1, r1, #4
    469c:	vcvt.f64.u32	d17, s1
    46a0:	vcvt.f64.u32	d16, s0
    46a4:	vst1.64	{d16-d17}, [r2], r6
    46a8:	vldr	d0, [r5, #8]
    46ac:	mov	r5, r4
    46b0:	vcvt.f64.u32	d17, s1
    46b4:	vcvt.f64.u32	d16, s0
    46b8:	vst1.64	{d16-d17}, [r0]
    46bc:	mov	r0, r2
    46c0:	bne	468c <ReadDoubleData+0xc00>
    46c4:	b	6000 <ReadDoubleData+0x2574>
    46c8:	cmp	r6, #256	; 0x100
    46cc:	bgt	56cc <ReadDoubleData+0x1c40>
    46d0:	ldr	r0, [sp, #36]	; 0x24
    46d4:	ldr	r1, [sp, #32]
    46d8:	mov	r9, r7
    46dc:	add	r7, sp, #168	; 0xa8
    46e0:	mov	r2, r6
    46e4:	ldr	r3, [r0]
    46e8:	mov	r0, r7
    46ec:	bl	18b8 <fread@plt>
    46f0:	mov	sl, r0
    46f4:	cmp	r6, #1
    46f8:	blt	65f0 <ReadDoubleData+0x2b64>
    46fc:	mov	lr, #0
    4700:	beq	6094 <ReadDoubleData+0x2608>
    4704:	bic	lr, r6, #1
    4708:	mov	r2, #1
    470c:	mov	r8, r6
    4710:	subs	r1, lr, #2
    4714:	add	r1, r2, r1, lsr #1
    4718:	and	ip, r1, #1
    471c:	beq	6060 <ReadDoubleData+0x25d4>
    4720:	sub	r3, r1, ip
    4724:	mov	r1, #0
    4728:	mov	r2, #16
    472c:	mov	r6, #32
    4730:	mov	r5, r9
    4734:	mov	r4, r7
    4738:	vld1.32	{d0}, [r4], r2
    473c:	add	r0, r5, #16
    4740:	subs	r3, r3, #2
    4744:	add	r1, r1, #4
    4748:	vcvt.f64.f32	d17, s1
    474c:	vcvt.f64.f32	d16, s0
    4750:	vst1.64	{d16-d17}, [r5], r6
    4754:	vldr	d0, [r7, #8]
    4758:	mov	r7, r4
    475c:	vcvt.f64.f32	d17, s1
    4760:	vcvt.f64.f32	d16, s0
    4764:	vst1.64	{d16-d17}, [r0]
    4768:	bne	4738 <ReadDoubleData+0xcac>
    476c:	b	6064 <ReadDoubleData+0x25d8>
    4770:	cmp	r6, #256	; 0x100
    4774:	str	r7, [sp, #4]
    4778:	bgt	5848 <ReadDoubleData+0x1dbc>
    477c:	ldr	r0, [sp, #36]	; 0x24
    4780:	ldr	r1, [sp, #32]
    4784:	add	r7, sp, #168	; 0xa8
    4788:	mov	r2, r6
    478c:	ldr	r3, [r0]
    4790:	mov	r0, r7
    4794:	bl	18b8 <fread@plt>
    4798:	mov	sl, r0
    479c:	cmp	r6, #1
    47a0:	blt	65f0 <ReadDoubleData+0x2b64>
    47a4:	mov	r1, #0
    47a8:	beq	61c0 <ReadDoubleData+0x2734>
    47ac:	bic	r0, r6, #1
    47b0:	mov	r1, #1
    47b4:	str	r6, [sp, #8]
    47b8:	str	sl, [sp, #28]
    47bc:	str	r0, [sp, #36]	; 0x24
    47c0:	subs	r0, r0, #2
    47c4:	add	r0, r1, r0, lsr #1
    47c8:	and	r1, r0, #1
    47cc:	str	r1, [sp, #24]
    47d0:	beq	615c <ReadDoubleData+0x26d0>
    47d4:	ldr	r8, [sp, #4]
    47d8:	sub	r5, r0, r1
    47dc:	mov	r6, #0
    47e0:	mov	sl, #32
    47e4:	mov	r4, r7
    47e8:	mov	r9, r8
    47ec:	vld1.64	{d8-d9}, [r4], sl
    47f0:	vmov.32	r0, d9[0]
    47f4:	vmov.32	r1, d9[1]
    47f8:	bl	71540 <__aeabi_l2d>
    47fc:	vmov.32	r2, d8[0]
    4800:	vmov.32	r3, d8[1]
    4804:	vmov	d9, r0, r1
    4808:	mov	r0, r2
    480c:	mov	r1, r3
    4810:	bl	71540 <__aeabi_l2d>
    4814:	vmov	d8, r0, r1
    4818:	add	r0, r7, #16
    481c:	vst1.64	{d8-d9}, [r9], sl
    4820:	vld1.64	{d8-d9}, [r0]
    4824:	vmov.32	r0, d9[0]
    4828:	vmov.32	r1, d9[1]
    482c:	bl	71540 <__aeabi_l2d>
    4830:	vmov.32	r2, d8[0]
    4834:	vmov.32	r3, d8[1]
    4838:	vmov	d9, r0, r1
    483c:	mov	r0, r2
    4840:	mov	r1, r3
    4844:	bl	71540 <__aeabi_l2d>
    4848:	vmov	d8, r0, r1
    484c:	add	r0, r8, #16
    4850:	subs	r5, r5, #2
    4854:	add	r6, r6, #4
    4858:	mov	r8, r9
    485c:	mov	r7, r4
    4860:	vst1.64	{d8-d9}, [r0]
    4864:	bne	47ec <ReadDoubleData+0xd60>
    4868:	b	6160 <ReadDoubleData+0x26d4>
    486c:	cmp	r6, #256	; 0x100
    4870:	str	r7, [sp, #4]
    4874:	bgt	5a68 <ReadDoubleData+0x1fdc>
    4878:	ldr	r0, [sp, #36]	; 0x24
    487c:	ldr	r1, [sp, #32]
    4880:	add	r7, sp, #168	; 0xa8
    4884:	mov	r2, r6
    4888:	ldr	r3, [r0]
    488c:	mov	r0, r7
    4890:	bl	18b8 <fread@plt>
    4894:	mov	sl, r0
    4898:	cmp	r6, #1
    489c:	blt	65f0 <ReadDoubleData+0x2b64>
    48a0:	mov	r1, #0
    48a4:	beq	6128 <ReadDoubleData+0x269c>
    48a8:	bic	r0, r6, #1
    48ac:	mov	r1, #1
    48b0:	str	r6, [sp, #8]
    48b4:	str	sl, [sp, #28]
    48b8:	str	r0, [sp, #36]	; 0x24
    48bc:	subs	r0, r0, #2
    48c0:	add	r0, r1, r0, lsr #1
    48c4:	and	r1, r0, #1
    48c8:	str	r1, [sp, #24]
    48cc:	beq	60c4 <ReadDoubleData+0x2638>
    48d0:	ldr	r8, [sp, #4]
    48d4:	sub	r5, r0, r1
    48d8:	mov	r6, #0
    48dc:	mov	sl, #32
    48e0:	mov	r4, r7
    48e4:	mov	r9, r8
    48e8:	vld1.64	{d8-d9}, [r4], sl
    48ec:	vmov.32	r0, d9[0]
    48f0:	vmov.32	r1, d9[1]
    48f4:	bl	7152c <__aeabi_ul2d>
    48f8:	vmov.32	r2, d8[0]
    48fc:	vmov.32	r3, d8[1]
    4900:	vmov	d9, r0, r1
    4904:	mov	r0, r2
    4908:	mov	r1, r3
    490c:	bl	7152c <__aeabi_ul2d>
    4910:	vmov	d8, r0, r1
    4914:	add	r0, r7, #16
    4918:	vst1.64	{d8-d9}, [r9], sl
    491c:	vld1.64	{d8-d9}, [r0]
    4920:	vmov.32	r0, d9[0]
    4924:	vmov.32	r1, d9[1]
    4928:	bl	7152c <__aeabi_ul2d>
    492c:	vmov.32	r2, d8[0]
    4930:	vmov.32	r3, d8[1]
    4934:	vmov	d9, r0, r1
    4938:	mov	r0, r2
    493c:	mov	r1, r3
    4940:	bl	7152c <__aeabi_ul2d>
    4944:	vmov	d8, r0, r1
    4948:	add	r0, r8, #16
    494c:	subs	r5, r5, #2
    4950:	add	r6, r6, #4
    4954:	mov	r8, r9
    4958:	mov	r7, r4
    495c:	vst1.64	{d8-d9}, [r0]
    4960:	bne	48e8 <ReadDoubleData+0xe5c>
    4964:	b	60c8 <ReadDoubleData+0x263c>
    4968:	sub	r0, r6, #256	; 0x100
    496c:	str	r6, [sp, #8]
    4970:	add	r1, r7, #2048	; 0x800
    4974:	add	r6, sp, #168	; 0xa8
    4978:	mov	sl, #0
    497c:	str	r0, [sp, #24]
    4980:	mov	r0, #0
    4984:	str	r0, [sp, #28]
    4988:	ldr	r0, [sp, #36]	; 0x24
    498c:	mov	r8, r1
    4990:	ldr	r1, [sp, #32]
    4994:	mov	r2, #256	; 0x100
    4998:	ldr	r3, [r0]
    499c:	mov	r0, r6
    49a0:	bl	18b8 <fread@plt>
    49a4:	mov	r4, r0
    49a8:	mov	r9, r7
    49ac:	mov	r5, r7
    49b0:	mov	r7, #0
    49b4:	add	r0, r6, r7
    49b8:	bl	1c20 <Mat_int16Swap>
    49bc:	vmov	s0, r0
    49c0:	add	r7, r7, #2
    49c4:	cmp	r7, #512	; 0x200
    49c8:	vcvt.f64.s32	d16, s0
    49cc:	vstmia	r5!, {d16}
    49d0:	bne	49b4 <ReadDoubleData+0xf28>
    49d4:	add	sl, r4, sl
    49d8:	ldr	r4, [sp, #28]
    49dc:	ldr	r2, [sp, #24]
    49e0:	mov	r7, r9
    49e4:	add	r7, r9, #2048	; 0x800
    49e8:	add	r1, r8, #2048	; 0x800
    49ec:	add	r0, r4, #256	; 0x100
    49f0:	cmp	r0, r2
    49f4:	blt	4984 <ReadDoubleData+0xef8>
    49f8:	ldr	r5, [sp, #8]
    49fc:	cmp	r0, r5
    4a00:	bge	65f0 <ReadDoubleData+0x2b64>
    4a04:	sub	r6, r5, r0
    4a08:	ldr	r0, [sp, #36]	; 0x24
    4a0c:	ldr	r1, [sp, #32]
    4a10:	add	r7, sp, #168	; 0xa8
    4a14:	mov	r2, r6
    4a18:	ldr	r3, [r0]
    4a1c:	mov	r0, r7
    4a20:	bl	18b8 <fread@plt>
    4a24:	add	sl, r0, sl
    4a28:	cmp	r6, #1
    4a2c:	blt	65f0 <ReadDoubleData+0x2b64>
    4a30:	sub	r0, r5, r4
    4a34:	sub	r5, r0, #256	; 0x100
    4a38:	mov	r0, r7
    4a3c:	bl	1c20 <Mat_int16Swap>
    4a40:	vmov	s0, r0
    4a44:	add	r7, r7, #2
    4a48:	subs	r5, r5, #1
    4a4c:	vcvt.f64.s32	d16, s0
    4a50:	vstmia	r8!, {d16}
    4a54:	bne	4a38 <ReadDoubleData+0xfac>
    4a58:	b	65f0 <ReadDoubleData+0x2b64>
    4a5c:	sub	r0, r6, #256	; 0x100
    4a60:	str	r6, [sp, #8]
    4a64:	add	r1, r7, #2048	; 0x800
    4a68:	add	r6, sp, #168	; 0xa8
    4a6c:	mov	sl, #0
    4a70:	str	r0, [sp, #24]
    4a74:	mov	r0, #0
    4a78:	str	r0, [sp, #28]
    4a7c:	ldr	r0, [sp, #36]	; 0x24
    4a80:	mov	r8, r1
    4a84:	ldr	r1, [sp, #32]
    4a88:	mov	r2, #256	; 0x100
    4a8c:	ldr	r3, [r0]
    4a90:	mov	r0, r6
    4a94:	bl	18b8 <fread@plt>
    4a98:	mov	r4, r0
    4a9c:	mov	r9, r7
    4aa0:	mov	r5, r7
    4aa4:	mov	r7, #0
    4aa8:	add	r0, r6, r7
    4aac:	bl	1c34 <Mat_uint16Swap>
    4ab0:	vmov	s0, r0
    4ab4:	add	r7, r7, #2
    4ab8:	cmp	r7, #512	; 0x200
    4abc:	vcvt.f64.u32	d16, s0
    4ac0:	vstmia	r5!, {d16}
    4ac4:	bne	4aa8 <ReadDoubleData+0x101c>
    4ac8:	add	sl, r4, sl
    4acc:	ldr	r4, [sp, #28]
    4ad0:	ldr	r2, [sp, #24]
    4ad4:	mov	r7, r9
    4ad8:	add	r7, r9, #2048	; 0x800
    4adc:	add	r1, r8, #2048	; 0x800
    4ae0:	add	r0, r4, #256	; 0x100
    4ae4:	cmp	r0, r2
    4ae8:	blt	4a78 <ReadDoubleData+0xfec>
    4aec:	ldr	r5, [sp, #8]
    4af0:	cmp	r0, r5
    4af4:	bge	65f0 <ReadDoubleData+0x2b64>
    4af8:	sub	r6, r5, r0
    4afc:	ldr	r0, [sp, #36]	; 0x24
    4b00:	ldr	r1, [sp, #32]
    4b04:	add	r7, sp, #168	; 0xa8
    4b08:	mov	r2, r6
    4b0c:	ldr	r3, [r0]
    4b10:	mov	r0, r7
    4b14:	bl	18b8 <fread@plt>
    4b18:	add	sl, r0, sl
    4b1c:	cmp	r6, #1
    4b20:	blt	65f0 <ReadDoubleData+0x2b64>
    4b24:	sub	r0, r5, r4
    4b28:	sub	r5, r0, #256	; 0x100
    4b2c:	mov	r0, r7
    4b30:	bl	1c34 <Mat_uint16Swap>
    4b34:	vmov	s0, r0
    4b38:	add	r7, r7, #2
    4b3c:	subs	r5, r5, #1
    4b40:	vcvt.f64.u32	d16, s0
    4b44:	vstmia	r8!, {d16}
    4b48:	bne	4b2c <ReadDoubleData+0x10a0>
    4b4c:	b	65f0 <ReadDoubleData+0x2b64>
    4b50:	sub	r0, r6, #256	; 0x100
    4b54:	str	r6, [sp, #8]
    4b58:	add	r1, r7, #2048	; 0x800
    4b5c:	add	r6, sp, #168	; 0xa8
    4b60:	mov	sl, #0
    4b64:	str	r0, [sp, #24]
    4b68:	mov	r0, #0
    4b6c:	str	r0, [sp, #28]
    4b70:	ldr	r0, [sp, #36]	; 0x24
    4b74:	mov	r8, r1
    4b78:	ldr	r1, [sp, #32]
    4b7c:	mov	r2, #256	; 0x100
    4b80:	ldr	r3, [r0]
    4b84:	mov	r0, r6
    4b88:	bl	18b8 <fread@plt>
    4b8c:	mov	r4, r0
    4b90:	mov	r9, r7
    4b94:	mov	r5, r7
    4b98:	mov	r7, #0
    4b9c:	add	r0, r6, r7
    4ba0:	bl	1bf8 <Mat_int32Swap>
    4ba4:	vmov	s0, r0
    4ba8:	add	r7, r7, #4
    4bac:	cmp	r7, #1024	; 0x400
    4bb0:	vcvt.f64.s32	d16, s0
    4bb4:	vstmia	r5!, {d16}
    4bb8:	bne	4b9c <ReadDoubleData+0x1110>
    4bbc:	add	sl, r4, sl
    4bc0:	ldr	r4, [sp, #28]
    4bc4:	ldr	r2, [sp, #24]
    4bc8:	mov	r7, r9
    4bcc:	add	r7, r9, #2048	; 0x800
    4bd0:	add	r1, r8, #2048	; 0x800
    4bd4:	add	r0, r4, #256	; 0x100
    4bd8:	cmp	r0, r2
    4bdc:	blt	4b6c <ReadDoubleData+0x10e0>
    4be0:	ldr	r5, [sp, #8]
    4be4:	cmp	r0, r5
    4be8:	bge	65f0 <ReadDoubleData+0x2b64>
    4bec:	sub	r6, r5, r0
    4bf0:	ldr	r0, [sp, #36]	; 0x24
    4bf4:	ldr	r1, [sp, #32]
    4bf8:	add	r7, sp, #168	; 0xa8
    4bfc:	mov	r2, r6
    4c00:	ldr	r3, [r0]
    4c04:	mov	r0, r7
    4c08:	bl	18b8 <fread@plt>
    4c0c:	add	sl, r0, sl
    4c10:	cmp	r6, #1
    4c14:	blt	65f0 <ReadDoubleData+0x2b64>
    4c18:	sub	r0, r5, r4
    4c1c:	sub	r5, r0, #256	; 0x100
    4c20:	mov	r0, r7
    4c24:	bl	1bf8 <Mat_int32Swap>
    4c28:	vmov	s0, r0
    4c2c:	add	r7, r7, #4
    4c30:	subs	r5, r5, #1
    4c34:	vcvt.f64.s32	d16, s0
    4c38:	vstmia	r8!, {d16}
    4c3c:	bne	4c20 <ReadDoubleData+0x1194>
    4c40:	b	65f0 <ReadDoubleData+0x2b64>
    4c44:	sub	r0, r6, #256	; 0x100
    4c48:	str	r6, [sp, #8]
    4c4c:	add	r1, r7, #2048	; 0x800
    4c50:	add	r6, sp, #168	; 0xa8
    4c54:	mov	sl, #0
    4c58:	str	r0, [sp, #24]
    4c5c:	mov	r0, #0
    4c60:	str	r0, [sp, #28]
    4c64:	ldr	r0, [sp, #36]	; 0x24
    4c68:	mov	r8, r1
    4c6c:	ldr	r1, [sp, #32]
    4c70:	mov	r2, #256	; 0x100
    4c74:	ldr	r3, [r0]
    4c78:	mov	r0, r6
    4c7c:	bl	18b8 <fread@plt>
    4c80:	mov	r4, r0
    4c84:	mov	r9, r7
    4c88:	mov	r5, r7
    4c8c:	mov	r7, #0
    4c90:	add	r0, r6, r7
    4c94:	bl	1c0c <Mat_uint32Swap>
    4c98:	vmov	s0, r0
    4c9c:	add	r7, r7, #4
    4ca0:	cmp	r7, #1024	; 0x400
    4ca4:	vcvt.f64.u32	d16, s0
    4ca8:	vstmia	r5!, {d16}
    4cac:	bne	4c90 <ReadDoubleData+0x1204>
    4cb0:	add	sl, r4, sl
    4cb4:	ldr	r4, [sp, #28]
    4cb8:	ldr	r2, [sp, #24]
    4cbc:	mov	r7, r9
    4cc0:	add	r7, r9, #2048	; 0x800
    4cc4:	add	r1, r8, #2048	; 0x800
    4cc8:	add	r0, r4, #256	; 0x100
    4ccc:	cmp	r0, r2
    4cd0:	blt	4c60 <ReadDoubleData+0x11d4>
    4cd4:	ldr	r5, [sp, #8]
    4cd8:	cmp	r0, r5
    4cdc:	bge	65f0 <ReadDoubleData+0x2b64>
    4ce0:	sub	r6, r5, r0
    4ce4:	ldr	r0, [sp, #36]	; 0x24
    4ce8:	ldr	r1, [sp, #32]
    4cec:	add	r7, sp, #168	; 0xa8
    4cf0:	mov	r2, r6
    4cf4:	ldr	r3, [r0]
    4cf8:	mov	r0, r7
    4cfc:	bl	18b8 <fread@plt>
    4d00:	add	sl, r0, sl
    4d04:	cmp	r6, #1
    4d08:	blt	65f0 <ReadDoubleData+0x2b64>
    4d0c:	sub	r0, r5, r4
    4d10:	sub	r5, r0, #256	; 0x100
    4d14:	mov	r0, r7
    4d18:	bl	1c0c <Mat_uint32Swap>
    4d1c:	vmov	s0, r0
    4d20:	add	r7, r7, #4
    4d24:	subs	r5, r5, #1
    4d28:	vcvt.f64.u32	d16, s0
    4d2c:	vstmia	r8!, {d16}
    4d30:	bne	4d14 <ReadDoubleData+0x1288>
    4d34:	b	65f0 <ReadDoubleData+0x2b64>
    4d38:	sub	r0, r6, #256	; 0x100
    4d3c:	str	r6, [sp, #8]
    4d40:	add	r1, r7, #2048	; 0x800
    4d44:	add	r6, sp, #168	; 0xa8
    4d48:	mov	sl, #0
    4d4c:	str	r0, [sp, #24]
    4d50:	mov	r0, #0
    4d54:	str	r0, [sp, #28]
    4d58:	ldr	r0, [sp, #36]	; 0x24
    4d5c:	mov	r8, r1
    4d60:	ldr	r1, [sp, #32]
    4d64:	mov	r2, #256	; 0x100
    4d68:	ldr	r3, [r0]
    4d6c:	mov	r0, r6
    4d70:	bl	18b8 <fread@plt>
    4d74:	mov	r4, r0
    4d78:	mov	r9, r7
    4d7c:	mov	r5, r7
    4d80:	mov	r7, #0
    4d84:	add	r0, r6, r7
    4d88:	bl	1c4c <Mat_floatSwap>
    4d8c:	vcvt.f64.f32	d16, s0
    4d90:	add	r7, r7, #4
    4d94:	cmp	r7, #1024	; 0x400
    4d98:	vstmia	r5!, {d16}
    4d9c:	bne	4d84 <ReadDoubleData+0x12f8>
    4da0:	add	sl, r4, sl
    4da4:	ldr	r4, [sp, #28]
    4da8:	ldr	r2, [sp, #24]
    4dac:	mov	r7, r9
    4db0:	add	r7, r9, #2048	; 0x800
    4db4:	add	r1, r8, #2048	; 0x800
    4db8:	add	r0, r4, #256	; 0x100
    4dbc:	cmp	r0, r2
    4dc0:	blt	4d54 <ReadDoubleData+0x12c8>
    4dc4:	ldr	r5, [sp, #8]
    4dc8:	cmp	r0, r5
    4dcc:	bge	65f0 <ReadDoubleData+0x2b64>
    4dd0:	sub	r6, r5, r0
    4dd4:	ldr	r0, [sp, #36]	; 0x24
    4dd8:	ldr	r1, [sp, #32]
    4ddc:	add	r7, sp, #168	; 0xa8
    4de0:	mov	r2, r6
    4de4:	ldr	r3, [r0]
    4de8:	mov	r0, r7
    4dec:	bl	18b8 <fread@plt>
    4df0:	add	sl, r0, sl
    4df4:	cmp	r6, #1
    4df8:	blt	65f0 <ReadDoubleData+0x2b64>
    4dfc:	sub	r0, r5, r4
    4e00:	sub	r5, r0, #256	; 0x100
    4e04:	mov	r0, r7
    4e08:	bl	1c4c <Mat_floatSwap>
    4e0c:	vcvt.f64.f32	d16, s0
    4e10:	add	r7, r7, #4
    4e14:	subs	r5, r5, #1
    4e18:	vstmia	r8!, {d16}
    4e1c:	bne	4e04 <ReadDoubleData+0x1378>
    4e20:	b	65f0 <ReadDoubleData+0x2b64>
    4e24:	sub	r0, r6, #256	; 0x100
    4e28:	str	r6, [sp, #8]
    4e2c:	mov	sl, r7
    4e30:	add	r1, r7, #2048	; 0x800
    4e34:	add	r6, sp, #168	; 0xa8
    4e38:	mov	r8, #0
    4e3c:	str	r0, [sp, #28]
    4e40:	mov	r0, #0
    4e44:	mov	r9, r0
    4e48:	ldr	r0, [sp, #36]	; 0x24
    4e4c:	mov	r7, r1
    4e50:	ldr	r1, [sp, #32]
    4e54:	mov	r2, #256	; 0x100
    4e58:	ldr	r3, [r0]
    4e5c:	mov	r0, r6
    4e60:	bl	18b8 <fread@plt>
    4e64:	mov	r4, r0
    4e68:	mov	r5, #0
    4e6c:	add	r0, r6, r5
    4e70:	bl	1b84 <Mat_int64Swap>
    4e74:	bl	71540 <__aeabi_l2d>
    4e78:	mov	r2, sl
    4e7c:	str	r0, [r2, r5]!
    4e80:	add	r5, r5, #8
    4e84:	cmp	r5, #2048	; 0x800
    4e88:	str	r1, [r2, #4]
    4e8c:	bne	4e6c <ReadDoubleData+0x13e0>
    4e90:	ldr	r2, [sp, #28]
    4e94:	add	r0, r9, #256	; 0x100
    4e98:	add	r8, r4, r8
    4e9c:	add	sl, sl, #2048	; 0x800
    4ea0:	add	r1, r7, #2048	; 0x800
    4ea4:	cmp	r0, r2
    4ea8:	blt	4e44 <ReadDoubleData+0x13b8>
    4eac:	ldr	r5, [sp, #8]
    4eb0:	cmp	r0, r5
    4eb4:	bge	6410 <ReadDoubleData+0x2984>
    4eb8:	sub	r6, r5, r0
    4ebc:	ldr	r0, [sp, #36]	; 0x24
    4ec0:	ldr	r1, [sp, #32]
    4ec4:	add	r4, sp, #168	; 0xa8
    4ec8:	mov	r2, r6
    4ecc:	ldr	r3, [r0]
    4ed0:	mov	r0, r4
    4ed4:	bl	18b8 <fread@plt>
    4ed8:	mov	sl, r8
    4edc:	add	sl, r0, r8
    4ee0:	cmp	r6, #1
    4ee4:	blt	65f0 <ReadDoubleData+0x2b64>
    4ee8:	sub	r0, r5, r9
    4eec:	sub	r5, r0, #256	; 0x100
    4ef0:	mov	r0, r4
    4ef4:	bl	1b84 <Mat_int64Swap>
    4ef8:	bl	71540 <__aeabi_l2d>
    4efc:	strd	r0, [r7]
    4f00:	add	r7, r7, #8
    4f04:	add	r4, r4, #8
    4f08:	subs	r5, r5, #1
    4f0c:	bne	4ef0 <ReadDoubleData+0x1464>
    4f10:	b	65f0 <ReadDoubleData+0x2b64>
    4f14:	sub	r0, r6, #256	; 0x100
    4f18:	str	r6, [sp, #8]
    4f1c:	mov	r8, r7
    4f20:	add	r1, r7, #2048	; 0x800
    4f24:	add	r6, sp, #168	; 0xa8
    4f28:	mov	sl, #0
    4f2c:	str	r0, [sp, #24]
    4f30:	mov	r0, #0
    4f34:	str	r0, [sp, #28]
    4f38:	ldr	r0, [sp, #36]	; 0x24
    4f3c:	mov	r9, r1
    4f40:	ldr	r1, [sp, #32]
    4f44:	mov	r2, #256	; 0x100
    4f48:	ldr	r3, [r0]
    4f4c:	mov	r0, r6
    4f50:	bl	18b8 <fread@plt>
    4f54:	mov	r4, r0
    4f58:	mov	r5, #0
    4f5c:	add	r0, r6, r5
    4f60:	bl	1bd4 <Mat_uint64Swap>
    4f64:	bl	7152c <__aeabi_ul2d>
    4f68:	mov	r2, r8
    4f6c:	str	r0, [r2, r5]!
    4f70:	add	r5, r5, #8
    4f74:	cmp	r5, #2048	; 0x800
    4f78:	str	r1, [r2, #4]
    4f7c:	bne	4f5c <ReadDoubleData+0x14d0>
    4f80:	ldr	r7, [sp, #28]
    4f84:	ldr	r2, [sp, #24]
    4f88:	add	sl, r4, sl
    4f8c:	add	r8, r8, #2048	; 0x800
    4f90:	add	r1, r9, #2048	; 0x800
    4f94:	add	r0, r7, #256	; 0x100
    4f98:	cmp	r0, r2
    4f9c:	blt	4f34 <ReadDoubleData+0x14a8>
    4fa0:	ldr	r5, [sp, #8]
    4fa4:	cmp	r0, r5
    4fa8:	bge	65f0 <ReadDoubleData+0x2b64>
    4fac:	sub	r6, r5, r0
    4fb0:	ldr	r0, [sp, #36]	; 0x24
    4fb4:	ldr	r1, [sp, #32]
    4fb8:	add	r4, sp, #168	; 0xa8
    4fbc:	mov	r2, r6
    4fc0:	ldr	r3, [r0]
    4fc4:	mov	r0, r4
    4fc8:	bl	18b8 <fread@plt>
    4fcc:	add	sl, r0, sl
    4fd0:	cmp	r6, #1
    4fd4:	blt	65f0 <ReadDoubleData+0x2b64>
    4fd8:	sub	r0, r5, r7
    4fdc:	sub	r5, r0, #256	; 0x100
    4fe0:	mov	r0, r4
    4fe4:	bl	1bd4 <Mat_uint64Swap>
    4fe8:	bl	7152c <__aeabi_ul2d>
    4fec:	strd	r0, [r9]
    4ff0:	add	r9, r9, #8
    4ff4:	add	r4, r4, #8
    4ff8:	subs	r5, r5, #1
    4ffc:	bne	4fe0 <ReadDoubleData+0x1554>
    5000:	b	65f0 <ReadDoubleData+0x2b64>
    5004:	sub	r1, r6, #256	; 0x100
    5008:	str	r6, [sp, #8]
    500c:	mov	r8, r7
    5010:	add	r0, r7, #2048	; 0x800
    5014:	mov	r2, #0
    5018:	add	r6, sp, #168	; 0xa8
    501c:	add	r5, sp, #64	; 0x40
    5020:	mov	r7, #32
    5024:	add	sl, sp, #68	; 0x44
    5028:	mov	r9, #0
    502c:	str	r1, [sp, #16]
    5030:	mov	r1, #256	; 0x100
    5034:	str	r8, [sp, #4]
    5038:	str	r0, [sp, #20]
    503c:	ldr	r0, [sp, #36]	; 0x24
    5040:	str	r1, [sp, #28]
    5044:	ldr	r1, [sp, #32]
    5048:	str	r2, [sp, #24]
    504c:	mov	r2, #256	; 0x100
    5050:	ldr	r3, [r0]
    5054:	mov	r0, r6
    5058:	bl	18b8 <fread@plt>
    505c:	mov	r3, r8
    5060:	mov	r1, #0
    5064:	mov	r2, r8
    5068:	ldr	r4, [r6, r1]
    506c:	add	r3, r3, #16
    5070:	str	r4, [sp, #64]	; 0x40
    5074:	add	r4, r6, r1
    5078:	add	r1, r1, #8
    507c:	vld1.32	{d16[0]}, [r5 :32]
    5080:	cmp	r1, #512	; 0x200
    5084:	vmovl.s16	q0, d16
    5088:	vcvt.f64.s32	d17, s1
    508c:	vcvt.f64.s32	d16, s0
    5090:	vst1.64	{d16-d17}, [r2], r7
    5094:	ldr	r4, [r4, #4]
    5098:	str	r4, [sp, #68]	; 0x44
    509c:	vld1.32	{d16[0]}, [sl :32]
    50a0:	vmovl.s16	q0, d16
    50a4:	vcvt.f64.s32	d17, s1
    50a8:	vcvt.f64.s32	d16, s0
    50ac:	vst1.64	{d16-d17}, [r3]
    50b0:	mov	r3, r2
    50b4:	bne	5068 <ReadDoubleData+0x15dc>
    50b8:	ldr	r4, [sp, #24]
    50bc:	ldr	r1, [sp, #28]
    50c0:	add	r9, r0, r9
    50c4:	ldr	r0, [sp, #20]
    50c8:	ldr	r3, [sp, #16]
    50cc:	add	r8, r8, #2048	; 0x800
    50d0:	add	r2, r4, #256	; 0x100
    50d4:	add	r0, r0, #2048	; 0x800
    50d8:	add	r1, r1, #256	; 0x100
    50dc:	cmp	r2, r3
    50e0:	blt	5038 <ReadDoubleData+0x15ac>
    50e4:	ldr	r0, [sp, #8]
    50e8:	cmp	r2, r0
    50ec:	bge	5c88 <ReadDoubleData+0x21fc>
    50f0:	sub	r5, r0, r2
    50f4:	ldr	r0, [sp, #36]	; 0x24
    50f8:	ldr	r1, [sp, #32]
    50fc:	add	r6, sp, #168	; 0xa8
    5100:	str	r2, [sp, #16]
    5104:	mov	r2, r5
    5108:	ldr	r3, [r0]
    510c:	mov	r0, r6
    5110:	bl	18b8 <fread@plt>
    5114:	mov	sl, r9
    5118:	add	sl, r0, r9
    511c:	cmp	r5, #1
    5120:	blt	65f0 <ReadDoubleData+0x2b64>
    5124:	ldr	r3, [sp, #4]
    5128:	mov	lr, #0
    512c:	beq	6240 <ReadDoubleData+0x27b4>
    5130:	bic	lr, r5, #1
    5134:	mov	r0, #1
    5138:	mov	r9, r5
    513c:	subs	r1, lr, #2
    5140:	add	r1, r0, r1, lsr #1
    5144:	and	ip, r1, #1
    5148:	beq	61f4 <ReadDoubleData+0x2768>
    514c:	ldr	r1, [sp, #8]
    5150:	ldr	r7, [sp, #20]
    5154:	add	r8, sp, #56	; 0x38
    5158:	mov	r5, #32
    515c:	sub	r1, r1, r4
    5160:	sub	r1, r1, #256	; 0x100
    5164:	bic	r1, r1, #1
    5168:	sub	r1, r1, #2
    516c:	add	r0, r0, r1, lsr #1
    5170:	mvn	r2, r1, lsr #1
    5174:	add	r1, sp, #60	; 0x3c
    5178:	and	r0, r0, #1
    517c:	add	r3, r2, r0
    5180:	mov	r2, #0
    5184:	mov	r0, r7
    5188:	ldr	r4, [r6]
    518c:	adds	r3, r3, #2
    5190:	add	r2, r2, #4
    5194:	str	r4, [sp, #56]	; 0x38
    5198:	vld1.32	{d16[0]}, [r8 :32]
    519c:	vmovl.s16	q0, d16
    51a0:	vcvt.f64.s32	d17, s1
    51a4:	vcvt.f64.s32	d16, s0
    51a8:	vst1.64	{d16-d17}, [r0], r5
    51ac:	ldr	r4, [r6, #4]
    51b0:	add	r6, r6, #8
    51b4:	str	r4, [sp, #60]	; 0x3c
    51b8:	add	r4, r7, #16
    51bc:	mov	r7, r0
    51c0:	vld1.32	{d16[0]}, [r1 :32]
    51c4:	vmovl.s16	q0, d16
    51c8:	vcvt.f64.s32	d17, s1
    51cc:	vcvt.f64.s32	d16, s0
    51d0:	vst1.64	{d16-d17}, [r4]
    51d4:	bne	5188 <ReadDoubleData+0x16fc>
    51d8:	b	61f8 <ReadDoubleData+0x276c>
    51dc:	sub	r1, r6, #256	; 0x100
    51e0:	str	r6, [sp, #8]
    51e4:	mov	r8, r7
    51e8:	add	r0, r7, #2048	; 0x800
    51ec:	mov	r2, #0
    51f0:	add	r6, sp, #168	; 0xa8
    51f4:	add	r5, sp, #96	; 0x60
    51f8:	mov	r7, #32
    51fc:	add	sl, sp, #100	; 0x64
    5200:	mov	r9, #0
    5204:	str	r1, [sp, #16]
    5208:	mov	r1, #256	; 0x100
    520c:	str	r8, [sp, #4]
    5210:	str	r0, [sp, #20]
    5214:	ldr	r0, [sp, #36]	; 0x24
    5218:	str	r1, [sp, #28]
    521c:	ldr	r1, [sp, #32]
    5220:	str	r2, [sp, #24]
    5224:	mov	r2, #256	; 0x100
    5228:	ldr	r3, [r0]
    522c:	mov	r0, r6
    5230:	bl	18b8 <fread@plt>
    5234:	mov	r3, r8
    5238:	mov	r1, #0
    523c:	mov	r2, r8
    5240:	ldr	r4, [r6, r1]
    5244:	add	r3, r3, #16
    5248:	str	r4, [sp, #96]	; 0x60
    524c:	add	r4, r6, r1
    5250:	add	r1, r1, #8
    5254:	vld1.32	{d16[0]}, [r5 :32]
    5258:	cmp	r1, #512	; 0x200
    525c:	vmovl.u16	q0, d16
    5260:	vcvt.f64.u32	d17, s1
    5264:	vcvt.f64.u32	d16, s0
    5268:	vst1.64	{d16-d17}, [r2], r7
    526c:	ldr	r4, [r4, #4]
    5270:	str	r4, [sp, #100]	; 0x64
    5274:	vld1.32	{d16[0]}, [sl :32]
    5278:	vmovl.u16	q0, d16
    527c:	vcvt.f64.u32	d17, s1
    5280:	vcvt.f64.u32	d16, s0
    5284:	vst1.64	{d16-d17}, [r3]
    5288:	mov	r3, r2
    528c:	bne	5240 <ReadDoubleData+0x17b4>
    5290:	ldr	r4, [sp, #24]
    5294:	ldr	r1, [sp, #28]
    5298:	add	r9, r0, r9
    529c:	ldr	r0, [sp, #20]
    52a0:	ldr	r3, [sp, #16]
    52a4:	add	r8, r8, #2048	; 0x800
    52a8:	add	r2, r4, #256	; 0x100
    52ac:	add	r0, r0, #2048	; 0x800
    52b0:	add	r1, r1, #256	; 0x100
    52b4:	cmp	r2, r3
    52b8:	blt	5210 <ReadDoubleData+0x1784>
    52bc:	ldr	r0, [sp, #8]
    52c0:	cmp	r2, r0
    52c4:	bge	5c88 <ReadDoubleData+0x21fc>
    52c8:	sub	r5, r0, r2
    52cc:	ldr	r0, [sp, #36]	; 0x24
    52d0:	ldr	r1, [sp, #32]
    52d4:	add	r6, sp, #168	; 0xa8
    52d8:	str	r2, [sp, #16]
    52dc:	mov	r2, r5
    52e0:	ldr	r3, [r0]
    52e4:	mov	r0, r6
    52e8:	bl	18b8 <fread@plt>
    52ec:	mov	sl, r9
    52f0:	add	sl, r0, r9
    52f4:	cmp	r5, #1
    52f8:	blt	65f0 <ReadDoubleData+0x2b64>
    52fc:	ldr	r3, [sp, #4]
    5300:	mov	lr, #0
    5304:	beq	62cc <ReadDoubleData+0x2840>
    5308:	bic	lr, r5, #1
    530c:	mov	r0, #1
    5310:	mov	r9, r5
    5314:	subs	r1, lr, #2
    5318:	add	r1, r0, r1, lsr #1
    531c:	and	ip, r1, #1
    5320:	beq	6280 <ReadDoubleData+0x27f4>
    5324:	ldr	r1, [sp, #8]
    5328:	ldr	r7, [sp, #20]
    532c:	add	r8, sp, #88	; 0x58
    5330:	mov	r5, #32
    5334:	sub	r1, r1, r4
    5338:	sub	r1, r1, #256	; 0x100
    533c:	bic	r1, r1, #1
    5340:	sub	r1, r1, #2
    5344:	add	r0, r0, r1, lsr #1
    5348:	mvn	r2, r1, lsr #1
    534c:	add	r1, sp, #92	; 0x5c
    5350:	and	r0, r0, #1
    5354:	add	r3, r2, r0
    5358:	mov	r2, #0
    535c:	mov	r0, r7
    5360:	ldr	r4, [r6]
    5364:	adds	r3, r3, #2
    5368:	add	r2, r2, #4
    536c:	str	r4, [sp, #88]	; 0x58
    5370:	vld1.32	{d16[0]}, [r8 :32]
    5374:	vmovl.u16	q0, d16
    5378:	vcvt.f64.u32	d17, s1
    537c:	vcvt.f64.u32	d16, s0
    5380:	vst1.64	{d16-d17}, [r0], r5
    5384:	ldr	r4, [r6, #4]
    5388:	add	r6, r6, #8
    538c:	str	r4, [sp, #92]	; 0x5c
    5390:	add	r4, r7, #16
    5394:	mov	r7, r0
    5398:	vld1.32	{d16[0]}, [r1 :32]
    539c:	vmovl.u16	q0, d16
    53a0:	vcvt.f64.u32	d17, s1
    53a4:	vcvt.f64.u32	d16, s0
    53a8:	vst1.64	{d16-d17}, [r4]
    53ac:	bne	5360 <ReadDoubleData+0x18d4>
    53b0:	b	6284 <ReadDoubleData+0x27f8>
    53b4:	sub	r1, r6, #256	; 0x100
    53b8:	str	r6, [sp, #8]
    53bc:	mov	r5, r7
    53c0:	add	r0, r7, #2048	; 0x800
    53c4:	mov	sl, #0
    53c8:	add	r6, sp, #168	; 0xa8
    53cc:	mov	r7, #32
    53d0:	mov	r8, #0
    53d4:	str	r1, [sp, #24]
    53d8:	mov	r1, #256	; 0x100
    53dc:	str	r5, [sp, #4]
    53e0:	mov	r9, r0
    53e4:	ldr	r0, [sp, #36]	; 0x24
    53e8:	str	r1, [sp, #28]
    53ec:	ldr	r1, [sp, #32]
    53f0:	mov	r2, #256	; 0x100
    53f4:	ldr	r3, [r0]
    53f8:	mov	r0, r6
    53fc:	bl	18b8 <fread@plt>
    5400:	mov	r3, r5
    5404:	mov	r1, #0
    5408:	mov	r2, r5
    540c:	add	r4, r6, r1
    5410:	add	r1, r1, #16
    5414:	add	r3, r3, #16
    5418:	vld1.32	{d0}, [r4]!
    541c:	cmp	r1, #1024	; 0x400
    5420:	vcvt.f64.s32	d17, s1
    5424:	vcvt.f64.s32	d16, s0
    5428:	vst1.64	{d16-d17}, [r2], r7
    542c:	vldr	d0, [r4]
    5430:	vcvt.f64.s32	d17, s1
    5434:	vcvt.f64.s32	d16, s0
    5438:	vst1.64	{d16-d17}, [r3]
    543c:	mov	r3, r2
    5440:	bne	540c <ReadDoubleData+0x1980>
    5444:	ldr	r1, [sp, #28]
    5448:	ldr	r3, [sp, #24]
    544c:	mov	r2, sl
    5450:	add	sl, sl, #256	; 0x100
    5454:	add	r8, r0, r8
    5458:	add	r5, r5, #2048	; 0x800
    545c:	add	r0, r9, #2048	; 0x800
    5460:	add	r1, r1, #256	; 0x100
    5464:	cmp	sl, r3
    5468:	blt	53e0 <ReadDoubleData+0x1954>
    546c:	ldr	r4, [sp, #8]
    5470:	str	r2, [sp, #24]
    5474:	cmp	sl, r4
    5478:	bge	6410 <ReadDoubleData+0x2984>
    547c:	ldr	r0, [sp, #36]	; 0x24
    5480:	ldr	r1, [sp, #32]
    5484:	sub	r5, r4, sl
    5488:	add	r7, sp, #168	; 0xa8
    548c:	mov	r2, r5
    5490:	ldr	r3, [r0]
    5494:	mov	r0, r7
    5498:	bl	18b8 <fread@plt>
    549c:	add	r8, r0, r8
    54a0:	cmp	r5, #1
    54a4:	blt	6410 <ReadDoubleData+0x2984>
    54a8:	mov	lr, #0
    54ac:	beq	634c <ReadDoubleData+0x28c0>
    54b0:	bic	lr, r5, #1
    54b4:	mov	r0, #1
    54b8:	str	r5, [sp, #36]	; 0x24
    54bc:	subs	r1, lr, #2
    54c0:	add	r1, r0, r1, lsr #1
    54c4:	and	ip, r1, #1
    54c8:	beq	630c <ReadDoubleData+0x2880>
    54cc:	ldr	r1, [sp, #24]
    54d0:	mov	r5, #32
    54d4:	mov	r6, r7
    54d8:	sub	r1, r4, r1
    54dc:	sub	r1, r1, #256	; 0x100
    54e0:	bic	r1, r1, #1
    54e4:	sub	r1, r1, #2
    54e8:	add	r0, r0, r1, lsr #1
    54ec:	mvn	r2, r1, lsr #1
    54f0:	mov	r1, #16
    54f4:	and	r0, r0, #1
    54f8:	add	r3, r2, r0
    54fc:	mov	r2, #0
    5500:	mov	r0, r9
    5504:	vld1.32	{d0}, [r6], r1
    5508:	add	r4, r9, #16
    550c:	adds	r3, r3, #2
    5510:	add	r2, r2, #4
    5514:	vcvt.f64.s32	d17, s1
    5518:	vcvt.f64.s32	d16, s0
    551c:	vst1.64	{d16-d17}, [r0], r5
    5520:	vldr	d0, [r7, #8]
    5524:	mov	r9, r0
    5528:	mov	r7, r6
    552c:	vcvt.f64.s32	d17, s1
    5530:	vcvt.f64.s32	d16, s0
    5534:	vst1.64	{d16-d17}, [r4]
    5538:	bne	5504 <ReadDoubleData+0x1a78>
    553c:	b	6310 <ReadDoubleData+0x2884>
    5540:	sub	r1, r6, #256	; 0x100
    5544:	str	r6, [sp, #8]
    5548:	mov	r5, r7
    554c:	add	r0, r7, #2048	; 0x800
    5550:	mov	sl, #0
    5554:	add	r6, sp, #168	; 0xa8
    5558:	mov	r7, #32
    555c:	mov	r8, #0
    5560:	str	r1, [sp, #24]
    5564:	mov	r1, #256	; 0x100
    5568:	str	r5, [sp, #4]
    556c:	mov	r9, r0
    5570:	ldr	r0, [sp, #36]	; 0x24
    5574:	str	r1, [sp, #28]
    5578:	ldr	r1, [sp, #32]
    557c:	mov	r2, #256	; 0x100
    5580:	ldr	r3, [r0]
    5584:	mov	r0, r6
    5588:	bl	18b8 <fread@plt>
    558c:	mov	r3, r5
    5590:	mov	r1, #0
    5594:	mov	r2, r5
    5598:	add	r4, r6, r1
    559c:	add	r1, r1, #16
    55a0:	add	r3, r3, #16
    55a4:	vld1.32	{d0}, [r4]!
    55a8:	cmp	r1, #1024	; 0x400
    55ac:	vcvt.f64.u32	d17, s1
    55b0:	vcvt.f64.u32	d16, s0
    55b4:	vst1.64	{d16-d17}, [r2], r7
    55b8:	vldr	d0, [r4]
    55bc:	vcvt.f64.u32	d17, s1
    55c0:	vcvt.f64.u32	d16, s0
    55c4:	vst1.64	{d16-d17}, [r3]
    55c8:	mov	r3, r2
    55cc:	bne	5598 <ReadDoubleData+0x1b0c>
    55d0:	ldr	r1, [sp, #28]
    55d4:	ldr	r3, [sp, #24]
    55d8:	mov	r2, sl
    55dc:	add	sl, sl, #256	; 0x100
    55e0:	add	r8, r0, r8
    55e4:	add	r5, r5, #2048	; 0x800
    55e8:	add	r0, r9, #2048	; 0x800
    55ec:	add	r1, r1, #256	; 0x100
    55f0:	cmp	sl, r3
    55f4:	blt	556c <ReadDoubleData+0x1ae0>
    55f8:	ldr	r4, [sp, #8]
    55fc:	str	r2, [sp, #24]
    5600:	cmp	sl, r4
    5604:	bge	6410 <ReadDoubleData+0x2984>
    5608:	ldr	r0, [sp, #36]	; 0x24
    560c:	ldr	r1, [sp, #32]
    5610:	sub	r5, r4, sl
    5614:	add	r7, sp, #168	; 0xa8
    5618:	mov	r2, r5
    561c:	ldr	r3, [r0]
    5620:	mov	r0, r7
    5624:	bl	18b8 <fread@plt>
    5628:	add	r8, r0, r8
    562c:	cmp	r5, #1
    5630:	blt	6410 <ReadDoubleData+0x2984>
    5634:	mov	lr, #0
    5638:	beq	63d0 <ReadDoubleData+0x2944>
    563c:	bic	lr, r5, #1
    5640:	mov	r0, #1
    5644:	str	r5, [sp, #36]	; 0x24
    5648:	subs	r1, lr, #2
    564c:	add	r1, r0, r1, lsr #1
    5650:	and	ip, r1, #1
    5654:	beq	6390 <ReadDoubleData+0x2904>
    5658:	ldr	r1, [sp, #24]
    565c:	mov	r5, #32
    5660:	mov	r6, r7
    5664:	sub	r1, r4, r1
    5668:	sub	r1, r1, #256	; 0x100
    566c:	bic	r1, r1, #1
    5670:	sub	r1, r1, #2
    5674:	add	r0, r0, r1, lsr #1
    5678:	mvn	r2, r1, lsr #1
    567c:	mov	r1, #16
    5680:	and	r0, r0, #1
    5684:	add	r3, r2, r0
    5688:	mov	r2, #0
    568c:	mov	r0, r9
    5690:	vld1.32	{d0}, [r6], r1
    5694:	add	r4, r9, #16
    5698:	adds	r3, r3, #2
    569c:	add	r2, r2, #4
    56a0:	vcvt.f64.u32	d17, s1
    56a4:	vcvt.f64.u32	d16, s0
    56a8:	vst1.64	{d16-d17}, [r0], r5
    56ac:	vldr	d0, [r7, #8]
    56b0:	mov	r9, r0
    56b4:	mov	r7, r6
    56b8:	vcvt.f64.u32	d17, s1
    56bc:	vcvt.f64.u32	d16, s0
    56c0:	vst1.64	{d16-d17}, [r4]
    56c4:	bne	5690 <ReadDoubleData+0x1c04>
    56c8:	b	6394 <ReadDoubleData+0x2908>
    56cc:	sub	r1, r6, #256	; 0x100
    56d0:	str	r6, [sp, #8]
    56d4:	mov	r5, r7
    56d8:	add	r0, r7, #2048	; 0x800
    56dc:	mov	r9, #0
    56e0:	add	r6, sp, #168	; 0xa8
    56e4:	mov	r7, #32
    56e8:	mov	sl, #0
    56ec:	str	r1, [sp, #24]
    56f0:	mov	r1, #256	; 0x100
    56f4:	str	r5, [sp, #4]
    56f8:	mov	r8, r0
    56fc:	ldr	r0, [sp, #36]	; 0x24
    5700:	str	r1, [sp, #28]
    5704:	ldr	r1, [sp, #32]
    5708:	mov	r2, #256	; 0x100
    570c:	ldr	r3, [r0]
    5710:	mov	r0, r6
    5714:	bl	18b8 <fread@plt>
    5718:	mov	r1, r5
    571c:	mov	r2, #0
    5720:	add	r3, r6, r2
    5724:	add	r4, r1, #16
    5728:	add	r2, r2, #16
    572c:	vld1.32	{d0}, [r3]!
    5730:	cmp	r2, #1024	; 0x400
    5734:	vcvt.f64.f32	d17, s1
    5738:	vcvt.f64.f32	d16, s0
    573c:	vst1.64	{d16-d17}, [r1], r7
    5740:	vldr	d0, [r3]
    5744:	vcvt.f64.f32	d17, s1
    5748:	vcvt.f64.f32	d16, s0
    574c:	vst1.64	{d16-d17}, [r4]
    5750:	bne	5720 <ReadDoubleData+0x1c94>
    5754:	ldr	r1, [sp, #28]
    5758:	ldr	r3, [sp, #24]
    575c:	mov	r2, r9
    5760:	add	r9, r9, #256	; 0x100
    5764:	add	sl, r0, sl
    5768:	add	r5, r5, #2048	; 0x800
    576c:	add	r0, r8, #2048	; 0x800
    5770:	add	r1, r1, #256	; 0x100
    5774:	cmp	r9, r3
    5778:	blt	56f8 <ReadDoubleData+0x1c6c>
    577c:	ldr	r4, [sp, #8]
    5780:	str	r2, [sp, #24]
    5784:	cmp	r9, r4
    5788:	bge	65f0 <ReadDoubleData+0x2b64>
    578c:	ldr	r0, [sp, #36]	; 0x24
    5790:	ldr	r1, [sp, #32]
    5794:	sub	r5, r4, r9
    5798:	add	r7, sp, #168	; 0xa8
    579c:	mov	r2, r5
    57a0:	ldr	r3, [r0]
    57a4:	mov	r0, r7
    57a8:	bl	18b8 <fread@plt>
    57ac:	add	sl, r0, sl
    57b0:	cmp	r5, #1
    57b4:	blt	65f0 <ReadDoubleData+0x2b64>
    57b8:	mov	r0, #0
    57bc:	beq	6454 <ReadDoubleData+0x29c8>
    57c0:	bic	r0, r5, #1
    57c4:	mov	r1, #1
    57c8:	mov	lr, r5
    57cc:	subs	r2, r0, #2
    57d0:	add	r2, r1, r2, lsr #1
    57d4:	and	ip, r2, #1
    57d8:	beq	6418 <ReadDoubleData+0x298c>
    57dc:	ldr	r2, [sp, #24]
    57e0:	mov	r5, #32
    57e4:	mov	r6, r7
    57e8:	sub	r2, r4, r2
    57ec:	sub	r2, r2, #256	; 0x100
    57f0:	bic	r2, r2, #1
    57f4:	sub	r2, r2, #2
    57f8:	add	r1, r1, r2, lsr #1
    57fc:	mvn	r3, r2, lsr #1
    5800:	mov	r2, #0
    5804:	and	r1, r1, #1
    5808:	add	r3, r3, r1
    580c:	mov	r1, #16
    5810:	vld1.32	{d0}, [r6], r1
    5814:	add	r4, r8, #16
    5818:	adds	r3, r3, #2
    581c:	add	r2, r2, #4
    5820:	vcvt.f64.f32	d17, s1
    5824:	vcvt.f64.f32	d16, s0
    5828:	vst1.64	{d16-d17}, [r8], r5
    582c:	vldr	d0, [r7, #8]
    5830:	mov	r7, r6
    5834:	vcvt.f64.f32	d17, s1
    5838:	vcvt.f64.f32	d16, s0
    583c:	vst1.64	{d16-d17}, [r4]
    5840:	bne	5810 <ReadDoubleData+0x1d84>
    5844:	b	641c <ReadDoubleData+0x2990>
    5848:	sub	r1, r6, #256	; 0x100
    584c:	str	r6, [sp, #8]
    5850:	add	r0, r7, #2048	; 0x800
    5854:	mov	r9, #0
    5858:	add	r6, sp, #168	; 0xa8
    585c:	mov	sl, #0
    5860:	str	r1, [sp, #28]
    5864:	mov	r1, #256	; 0x100
    5868:	str	r0, [sp, #24]
    586c:	ldr	r0, [sp, #36]	; 0x24
    5870:	str	r1, [sp, #20]
    5874:	ldr	r1, [sp, #32]
    5878:	mov	r2, #256	; 0x100
    587c:	mov	r8, sl
    5880:	str	r9, [sp, #16]
    5884:	ldr	r3, [r0]
    5888:	mov	r0, r6
    588c:	bl	18b8 <fread@plt>
    5890:	mov	r9, r0
    5894:	mov	r5, #0
    5898:	add	r4, r6, r5
    589c:	vld1.64	{d8-d9}, [r4]!
    58a0:	vmov.32	r0, d9[0]
    58a4:	vmov.32	r1, d9[1]
    58a8:	bl	71540 <__aeabi_l2d>
    58ac:	vmov.32	r2, d8[0]
    58b0:	vmov.32	r3, d8[1]
    58b4:	vmov	d9, r0, r1
    58b8:	mov	r0, r2
    58bc:	mov	r1, r3
    58c0:	bl	71540 <__aeabi_l2d>
    58c4:	vmov	d8, r0, r1
    58c8:	add	sl, r7, r5
    58cc:	vst1.64	{d8-d9}, [sl]!
    58d0:	vld1.64	{d8-d9}, [r4]
    58d4:	vmov.32	r0, d9[0]
    58d8:	vmov.32	r1, d9[1]
    58dc:	bl	71540 <__aeabi_l2d>
    58e0:	vmov.32	r2, d8[0]
    58e4:	vmov.32	r3, d8[1]
    58e8:	vmov	d9, r0, r1
    58ec:	mov	r0, r2
    58f0:	mov	r1, r3
    58f4:	bl	71540 <__aeabi_l2d>
    58f8:	vmov	d8, r0, r1
    58fc:	add	r5, r5, #32
    5900:	cmp	r5, #2048	; 0x800
    5904:	vst1.64	{d8-d9}, [sl]
    5908:	bne	5898 <ReadDoubleData+0x1e0c>
    590c:	mov	sl, r8
    5910:	add	sl, r9, r8
    5914:	ldr	r8, [sp, #16]
    5918:	ldr	r0, [sp, #24]
    591c:	ldr	r5, [sp, #20]
    5920:	ldr	r2, [sp, #28]
    5924:	add	r7, r7, #2048	; 0x800
    5928:	add	r9, r8, #256	; 0x100
    592c:	add	r0, r0, #2048	; 0x800
    5930:	add	r1, r5, #256	; 0x100
    5934:	cmp	r9, r2
    5938:	blt	5868 <ReadDoubleData+0x1ddc>
    593c:	ldr	r6, [sp, #8]
    5940:	cmp	r9, r6
    5944:	bge	65f0 <ReadDoubleData+0x2b64>
    5948:	ldr	r0, [sp, #36]	; 0x24
    594c:	ldr	r1, [sp, #32]
    5950:	sub	r7, r6, r9
    5954:	mov	r4, sl
    5958:	add	sl, sp, #168	; 0xa8
    595c:	mov	r2, r7
    5960:	ldr	r3, [r0]
    5964:	mov	r0, sl
    5968:	bl	18b8 <fread@plt>
    596c:	add	r4, r0, r4
    5970:	cmp	r7, #1
    5974:	str	r4, [sp, #28]
    5978:	blt	65ec <ReadDoubleData+0x2b60>
    597c:	mov	r2, #0
    5980:	beq	6504 <ReadDoubleData+0x2a78>
    5984:	bic	r0, r7, #1
    5988:	str	r7, [sp, #36]	; 0x24
    598c:	str	r0, [sp, #12]
    5990:	subs	r1, r0, #2
    5994:	mov	r0, #1
    5998:	add	r1, r0, r1, lsr #1
    599c:	and	r1, r1, #1
    59a0:	str	r1, [sp]
    59a4:	beq	6498 <ReadDoubleData+0x2a0c>
    59a8:	sub	r1, r6, r8
    59ac:	mov	r7, #0
    59b0:	mov	r6, sl
    59b4:	sub	r1, r1, #256	; 0x100
    59b8:	bic	r1, r1, #1
    59bc:	sub	r1, r1, #2
    59c0:	add	r0, r0, r1, lsr #1
    59c4:	mvn	r2, r1, lsr #1
    59c8:	and	r0, r0, #1
    59cc:	add	r5, r2, r0
    59d0:	ldr	r0, [sp, #24]
    59d4:	mov	r4, r0
    59d8:	str	r0, [sp, #24]
    59dc:	mov	r0, #32
    59e0:	vld1.64	{d8-d9}, [r6], r0
    59e4:	vmov.32	r0, d9[0]
    59e8:	vmov.32	r1, d9[1]
    59ec:	bl	71540 <__aeabi_l2d>
    59f0:	vmov.32	r2, d8[0]
    59f4:	vmov.32	r3, d8[1]
    59f8:	vmov	d9, r0, r1
    59fc:	mov	r0, r2
    5a00:	mov	r1, r3
    5a04:	bl	71540 <__aeabi_l2d>
    5a08:	vmov	d8, r0, r1
    5a0c:	mov	r0, #32
    5a10:	vst1.64	{d8-d9}, [r4], r0
    5a14:	add	r0, sl, #16
    5a18:	vld1.64	{d8-d9}, [r0]
    5a1c:	vmov.32	r0, d9[0]
    5a20:	vmov.32	r1, d9[1]
    5a24:	bl	71540 <__aeabi_l2d>
    5a28:	vmov.32	r2, d8[0]
    5a2c:	vmov.32	r3, d8[1]
    5a30:	vmov	d9, r0, r1
    5a34:	mov	r0, r2
    5a38:	mov	r1, r3
    5a3c:	bl	71540 <__aeabi_l2d>
    5a40:	vmov	d8, r0, r1
    5a44:	ldr	r0, [sp, #24]
    5a48:	adds	r5, r5, #2
    5a4c:	add	r7, r7, #4
    5a50:	mov	sl, r6
    5a54:	add	r0, r0, #16
    5a58:	vst1.64	{d8-d9}, [r0]
    5a5c:	mov	r0, r4
    5a60:	bne	59d8 <ReadDoubleData+0x1f4c>
    5a64:	b	649c <ReadDoubleData+0x2a10>
    5a68:	sub	r1, r6, #256	; 0x100
    5a6c:	str	r6, [sp, #8]
    5a70:	add	r0, r7, #2048	; 0x800
    5a74:	mov	r9, #0
    5a78:	add	r6, sp, #168	; 0xa8
    5a7c:	mov	sl, #0
    5a80:	str	r1, [sp, #28]
    5a84:	mov	r1, #256	; 0x100
    5a88:	str	r0, [sp, #24]
    5a8c:	ldr	r0, [sp, #36]	; 0x24
    5a90:	str	r1, [sp, #20]
    5a94:	ldr	r1, [sp, #32]
    5a98:	mov	r2, #256	; 0x100
    5a9c:	mov	r8, sl
    5aa0:	str	r9, [sp, #16]
    5aa4:	ldr	r3, [r0]
    5aa8:	mov	r0, r6
    5aac:	bl	18b8 <fread@plt>
    5ab0:	mov	r9, r0
    5ab4:	mov	r5, #0
    5ab8:	add	r4, r6, r5
    5abc:	vld1.64	{d8-d9}, [r4]!
    5ac0:	vmov.32	r0, d9[0]
    5ac4:	vmov.32	r1, d9[1]
    5ac8:	bl	7152c <__aeabi_ul2d>
    5acc:	vmov.32	r2, d8[0]
    5ad0:	vmov.32	r3, d8[1]
    5ad4:	vmov	d9, r0, r1
    5ad8:	mov	r0, r2
    5adc:	mov	r1, r3
    5ae0:	bl	7152c <__aeabi_ul2d>
    5ae4:	vmov	d8, r0, r1
    5ae8:	add	sl, r7, r5
    5aec:	vst1.64	{d8-d9}, [sl]!
    5af0:	vld1.64	{d8-d9}, [r4]
    5af4:	vmov.32	r0, d9[0]
    5af8:	vmov.32	r1, d9[1]
    5afc:	bl	7152c <__aeabi_ul2d>
    5b00:	vmov.32	r2, d8[0]
    5b04:	vmov.32	r3, d8[1]
    5b08:	vmov	d9, r0, r1
    5b0c:	mov	r0, r2
    5b10:	mov	r1, r3
    5b14:	bl	7152c <__aeabi_ul2d>
    5b18:	vmov	d8, r0, r1
    5b1c:	add	r5, r5, #32
    5b20:	cmp	r5, #2048	; 0x800
    5b24:	vst1.64	{d8-d9}, [sl]
    5b28:	bne	5ab8 <ReadDoubleData+0x202c>
    5b2c:	mov	sl, r8
    5b30:	add	sl, r9, r8
    5b34:	ldr	r8, [sp, #16]
    5b38:	ldr	r0, [sp, #24]
    5b3c:	ldr	r5, [sp, #20]
    5b40:	ldr	r2, [sp, #28]
    5b44:	add	r7, r7, #2048	; 0x800
    5b48:	add	r9, r8, #256	; 0x100
    5b4c:	add	r0, r0, #2048	; 0x800
    5b50:	add	r1, r5, #256	; 0x100
    5b54:	cmp	r9, r2
    5b58:	blt	5a88 <ReadDoubleData+0x1ffc>
    5b5c:	ldr	r6, [sp, #8]
    5b60:	cmp	r9, r6
    5b64:	bge	65f0 <ReadDoubleData+0x2b64>
    5b68:	ldr	r0, [sp, #36]	; 0x24
    5b6c:	ldr	r1, [sp, #32]
    5b70:	sub	r7, r6, r9
    5b74:	mov	r4, sl
    5b78:	add	sl, sp, #168	; 0xa8
    5b7c:	mov	r2, r7
    5b80:	ldr	r3, [r0]
    5b84:	mov	r0, sl
    5b88:	bl	18b8 <fread@plt>
    5b8c:	add	r4, r0, r4
    5b90:	cmp	r7, #1
    5b94:	str	r4, [sp, #28]
    5b98:	blt	65ec <ReadDoubleData+0x2b60>
    5b9c:	mov	r2, #0
    5ba0:	beq	65b0 <ReadDoubleData+0x2b24>
    5ba4:	bic	r0, r7, #1
    5ba8:	str	r7, [sp, #36]	; 0x24
    5bac:	str	r0, [sp, #12]
    5bb0:	subs	r1, r0, #2
    5bb4:	mov	r0, #1
    5bb8:	add	r1, r0, r1, lsr #1
    5bbc:	and	r1, r1, #1
    5bc0:	str	r1, [sp]
    5bc4:	beq	6544 <ReadDoubleData+0x2ab8>
    5bc8:	sub	r1, r6, r8
    5bcc:	mov	r7, #0
    5bd0:	mov	r6, sl
    5bd4:	sub	r1, r1, #256	; 0x100
    5bd8:	bic	r1, r1, #1
    5bdc:	sub	r1, r1, #2
    5be0:	add	r0, r0, r1, lsr #1
    5be4:	mvn	r2, r1, lsr #1
    5be8:	and	r0, r0, #1
    5bec:	add	r5, r2, r0
    5bf0:	ldr	r0, [sp, #24]
    5bf4:	mov	r4, r0
    5bf8:	str	r0, [sp, #24]
    5bfc:	mov	r0, #32
    5c00:	vld1.64	{d8-d9}, [r6], r0
    5c04:	vmov.32	r0, d9[0]
    5c08:	vmov.32	r1, d9[1]
    5c0c:	bl	7152c <__aeabi_ul2d>
    5c10:	vmov.32	r2, d8[0]
    5c14:	vmov.32	r3, d8[1]
    5c18:	vmov	d9, r0, r1
    5c1c:	mov	r0, r2
    5c20:	mov	r1, r3
    5c24:	bl	7152c <__aeabi_ul2d>
    5c28:	vmov	d8, r0, r1
    5c2c:	mov	r0, #32
    5c30:	vst1.64	{d8-d9}, [r4], r0
    5c34:	add	r0, sl, #16
    5c38:	vld1.64	{d8-d9}, [r0]
    5c3c:	vmov.32	r0, d9[0]
    5c40:	vmov.32	r1, d9[1]
    5c44:	bl	7152c <__aeabi_ul2d>
    5c48:	vmov.32	r2, d8[0]
    5c4c:	vmov.32	r3, d8[1]
    5c50:	vmov	d9, r0, r1
    5c54:	mov	r0, r2
    5c58:	mov	r1, r3
    5c5c:	bl	7152c <__aeabi_ul2d>
    5c60:	vmov	d8, r0, r1
    5c64:	ldr	r0, [sp, #24]
    5c68:	adds	r5, r5, #2
    5c6c:	add	r7, r7, #4
    5c70:	mov	sl, r6
    5c74:	add	r0, r0, #16
    5c78:	vst1.64	{d8-d9}, [r0]
    5c7c:	mov	r0, r4
    5c80:	bne	5bf8 <ReadDoubleData+0x216c>
    5c84:	b	6548 <ReadDoubleData+0x2abc>
    5c88:	mov	sl, r9
    5c8c:	b	65f0 <ReadDoubleData+0x2b64>
    5c90:	mov	sl, r7
    5c94:	mov	r1, #0
    5c98:	cmp	ip, #0
    5c9c:	mov	r7, sl
    5ca0:	beq	5cd0 <ReadDoubleData+0x2244>
    5ca4:	add	r0, r8, r1
    5ca8:	ldrh	r0, [r0]
    5cac:	strh	r0, [sp, #104]	; 0x68
    5cb0:	add	r0, sp, #104	; 0x68
    5cb4:	vld1.16	{d16[0]}, [r0 :16]
    5cb8:	add	r0, r7, r1, lsl #3
    5cbc:	vmovl.s8	q8, d16
    5cc0:	vmovl.s16	q0, d16
    5cc4:	vcvt.f64.s32	d17, s1
    5cc8:	vcvt.f64.s32	d16, s0
    5ccc:	vst1.64	{d16-d17}, [r0]
    5cd0:	ldr	r6, [sp, #8]
    5cd4:	ldr	sl, [sp, #28]
    5cd8:	cmp	lr, r6
    5cdc:	beq	65f0 <ReadDoubleData+0x2b64>
    5ce0:	add	r1, r7, lr, lsl #3
    5ce4:	add	r0, r8, lr
    5ce8:	sub	r2, r6, lr
    5cec:	ldrsb	r3, [r0], #1
    5cf0:	subs	r2, r2, #1
    5cf4:	vmov	s0, r3
    5cf8:	vcvt.f64.s32	d16, s0
    5cfc:	vstmia	r1!, {d16}
    5d00:	bne	5cec <ReadDoubleData+0x2260>
    5d04:	b	65f0 <ReadDoubleData+0x2b64>
    5d08:	mov	sl, r7
    5d0c:	mov	r1, #0
    5d10:	cmp	ip, #0
    5d14:	mov	r7, sl
    5d18:	beq	5d48 <ReadDoubleData+0x22bc>
    5d1c:	add	r0, r8, r1
    5d20:	ldrh	r0, [r0]
    5d24:	strh	r0, [sp, #136]	; 0x88
    5d28:	add	r0, sp, #136	; 0x88
    5d2c:	vld1.16	{d16[0]}, [r0 :16]
    5d30:	add	r0, r7, r1, lsl #3
    5d34:	vmovl.u8	q8, d16
    5d38:	vmovl.u16	q0, d16
    5d3c:	vcvt.f64.u32	d17, s1
    5d40:	vcvt.f64.u32	d16, s0
    5d44:	vst1.64	{d16-d17}, [r0]
    5d48:	ldr	r6, [sp, #8]
    5d4c:	ldr	sl, [sp, #28]
    5d50:	cmp	lr, r6
    5d54:	beq	65f0 <ReadDoubleData+0x2b64>
    5d58:	add	r1, r7, lr, lsl #3
    5d5c:	add	r0, r8, lr
    5d60:	sub	r2, r6, lr
    5d64:	ldrb	r3, [r0], #1
    5d68:	subs	r2, r2, #1
    5d6c:	vmov	s0, r3
    5d70:	vcvt.f64.u32	d16, s0
    5d74:	vstmia	r1!, {d16}
    5d78:	bne	5d64 <ReadDoubleData+0x22d8>
    5d7c:	b	65f0 <ReadDoubleData+0x2b64>
    5d80:	mov	r1, #0
    5d84:	ldr	r0, [sp, #28]
    5d88:	cmp	r0, #0
    5d8c:	beq	5dc4 <ReadDoubleData+0x2338>
    5d90:	add	r0, r8, r1
    5d94:	ldrh	r0, [r0]
    5d98:	strh	r0, [sp, #116]	; 0x74
    5d9c:	add	r0, sp, #116	; 0x74
    5da0:	vld1.16	{d16[0]}, [r0 :16]
    5da4:	add	r0, r1, r7
    5da8:	vmovl.s8	q8, d16
    5dac:	vmovl.s16	q0, d16
    5db0:	vcvt.f64.s32	d17, s1
    5db4:	vcvt.f64.s32	d16, s0
    5db8:	ldr	r1, [sp, #4]
    5dbc:	add	r0, r1, r0, lsl #3
    5dc0:	vst1.64	{d16-d17}, [r0]
    5dc4:	ldr	r0, [sp, #36]	; 0x24
    5dc8:	ldr	r4, [sp, #8]
    5dcc:	cmp	r0, lr
    5dd0:	beq	65f0 <ReadDoubleData+0x2b64>
    5dd4:	ldr	r0, [sp, #20]
    5dd8:	ldr	r2, [sp, #4]
    5ddc:	add	r1, r8, lr
    5de0:	add	r0, lr, r0
    5de4:	add	r2, r2, r0, lsl #3
    5de8:	ldr	r0, [sp, #24]
    5dec:	sub	r0, r4, r0
    5df0:	sub	r0, r0, lr
    5df4:	sub	r0, r0, #256	; 0x100
    5df8:	ldrsb	r3, [r1], #1
    5dfc:	subs	r0, r0, #1
    5e00:	vmov	s0, r3
    5e04:	vcvt.f64.s32	d16, s0
    5e08:	vstmia	r2!, {d16}
    5e0c:	bne	5df8 <ReadDoubleData+0x236c>
    5e10:	b	65f0 <ReadDoubleData+0x2b64>
    5e14:	mov	r1, #0
    5e18:	ldr	r0, [sp, #28]
    5e1c:	cmp	r0, #0
    5e20:	beq	5e58 <ReadDoubleData+0x23cc>
    5e24:	add	r0, r8, r1
    5e28:	ldrh	r0, [r0]
    5e2c:	strh	r0, [sp, #148]	; 0x94
    5e30:	add	r0, sp, #148	; 0x94
    5e34:	vld1.16	{d16[0]}, [r0 :16]
    5e38:	add	r0, r1, r7
    5e3c:	vmovl.u8	q8, d16
    5e40:	vmovl.u16	q0, d16
    5e44:	vcvt.f64.u32	d17, s1
    5e48:	vcvt.f64.u32	d16, s0
    5e4c:	ldr	r1, [sp, #4]
    5e50:	add	r0, r1, r0, lsl #3
    5e54:	vst1.64	{d16-d17}, [r0]
    5e58:	ldr	r0, [sp, #36]	; 0x24
    5e5c:	ldr	r4, [sp, #8]
    5e60:	cmp	r0, lr
    5e64:	beq	65f0 <ReadDoubleData+0x2b64>
    5e68:	ldr	r0, [sp, #20]
    5e6c:	ldr	r2, [sp, #4]
    5e70:	add	r1, r8, lr
    5e74:	add	r0, lr, r0
    5e78:	add	r2, r2, r0, lsl #3
    5e7c:	ldr	r0, [sp, #24]
    5e80:	sub	r0, r4, r0
    5e84:	sub	r0, r0, lr
    5e88:	sub	r0, r0, #256	; 0x100
    5e8c:	ldrb	r3, [r1], #1
    5e90:	subs	r0, r0, #1
    5e94:	vmov	s0, r3
    5e98:	vcvt.f64.u32	d16, s0
    5e9c:	vstmia	r2!, {d16}
    5ea0:	bne	5e8c <ReadDoubleData+0x2400>
    5ea4:	b	65f0 <ReadDoubleData+0x2b64>
    5ea8:	mov	sl, r7
    5eac:	mov	r1, #0
    5eb0:	cmp	ip, #0
    5eb4:	mov	r7, sl
    5eb8:	beq	5ee4 <ReadDoubleData+0x2458>
    5ebc:	add	r0, sp, #168	; 0xa8
    5ec0:	ldr	r0, [r0, r1, lsl #1]
    5ec4:	str	r0, [sp, #40]	; 0x28
    5ec8:	add	r0, sp, #40	; 0x28
    5ecc:	vld1.32	{d16[0]}, [r0 :32]
    5ed0:	add	r0, r7, r1, lsl #3
    5ed4:	vmovl.s16	q0, d16
    5ed8:	vcvt.f64.s32	d17, s1
    5edc:	vcvt.f64.s32	d16, s0
    5ee0:	vst1.64	{d16-d17}, [r0]
    5ee4:	ldr	sl, [sp, #28]
    5ee8:	mov	r6, r9
    5eec:	cmp	lr, r9
    5ef0:	beq	65f0 <ReadDoubleData+0x2b64>
    5ef4:	add	r0, sp, #168	; 0xa8
    5ef8:	add	r1, r7, lr, lsl #3
    5efc:	sub	r2, r6, lr
    5f00:	add	r0, r0, lr, lsl #1
    5f04:	ldrsh	r3, [r0], #2
    5f08:	subs	r2, r2, #1
    5f0c:	vmov	s0, r3
    5f10:	vcvt.f64.s32	d16, s0
    5f14:	vstmia	r1!, {d16}
    5f18:	bne	5f04 <ReadDoubleData+0x2478>
    5f1c:	b	65f0 <ReadDoubleData+0x2b64>
    5f20:	mov	sl, r7
    5f24:	mov	r1, #0
    5f28:	cmp	ip, #0
    5f2c:	mov	r7, sl
    5f30:	beq	5f5c <ReadDoubleData+0x24d0>
    5f34:	add	r0, sp, #168	; 0xa8
    5f38:	ldr	r0, [r0, r1, lsl #1]
    5f3c:	str	r0, [sp, #72]	; 0x48
    5f40:	add	r0, sp, #72	; 0x48
    5f44:	vld1.32	{d16[0]}, [r0 :32]
    5f48:	add	r0, r7, r1, lsl #3
    5f4c:	vmovl.u16	q0, d16
    5f50:	vcvt.f64.u32	d17, s1
    5f54:	vcvt.f64.u32	d16, s0
    5f58:	vst1.64	{d16-d17}, [r0]
    5f5c:	ldr	sl, [sp, #28]
    5f60:	mov	r6, r9
    5f64:	cmp	lr, r9
    5f68:	beq	65f0 <ReadDoubleData+0x2b64>
    5f6c:	add	r0, sp, #168	; 0xa8
    5f70:	add	r1, r7, lr, lsl #3
    5f74:	sub	r2, r6, lr
    5f78:	add	r0, r0, lr, lsl #1
    5f7c:	ldrh	r3, [r0], #2
    5f80:	subs	r2, r2, #1
    5f84:	vmov	s0, r3
    5f88:	vcvt.f64.u32	d16, s0
    5f8c:	vstmia	r1!, {d16}
    5f90:	bne	5f7c <ReadDoubleData+0x24f0>
    5f94:	b	65f0 <ReadDoubleData+0x2b64>
    5f98:	mov	r1, #0
    5f9c:	cmp	ip, #0
    5fa0:	mov	r7, r9
    5fa4:	beq	5fc4 <ReadDoubleData+0x2538>
    5fa8:	add	r0, sp, #168	; 0xa8
    5fac:	add	r0, r0, r1, lsl #2
    5fb0:	vldr	d0, [r0]
    5fb4:	add	r0, r7, r1, lsl #3
    5fb8:	vcvt.f64.s32	d17, s1
    5fbc:	vcvt.f64.s32	d16, s0
    5fc0:	vst1.64	{d16-d17}, [r0]
    5fc4:	mov	r6, r8
    5fc8:	cmp	lr, r8
    5fcc:	beq	65f0 <ReadDoubleData+0x2b64>
    5fd0:	add	r0, sp, #168	; 0xa8
    5fd4:	add	r1, r7, lr, lsl #3
    5fd8:	sub	r2, r6, lr
    5fdc:	add	r0, r0, lr, lsl #2
    5fe0:	ldr	r3, [r0], #4
    5fe4:	subs	r2, r2, #1
    5fe8:	vmov	s0, r3
    5fec:	vcvt.f64.s32	d16, s0
    5ff0:	vstmia	r1!, {d16}
    5ff4:	bne	5fe0 <ReadDoubleData+0x2554>
    5ff8:	b	65f0 <ReadDoubleData+0x2b64>
    5ffc:	mov	r1, #0
    6000:	cmp	ip, #0
    6004:	mov	r7, r9
    6008:	beq	6028 <ReadDoubleData+0x259c>
    600c:	add	r0, sp, #168	; 0xa8
    6010:	add	r0, r0, r1, lsl #2
    6014:	vldr	d0, [r0]
    6018:	add	r0, r7, r1, lsl #3
    601c:	vcvt.f64.u32	d17, s1
    6020:	vcvt.f64.u32	d16, s0
    6024:	vst1.64	{d16-d17}, [r0]
    6028:	mov	r6, r8
    602c:	cmp	lr, r8
    6030:	beq	65f0 <ReadDoubleData+0x2b64>
    6034:	add	r0, sp, #168	; 0xa8
    6038:	add	r1, r7, lr, lsl #3
    603c:	sub	r2, r6, lr
    6040:	add	r0, r0, lr, lsl #2
    6044:	ldr	r3, [r0], #4
    6048:	subs	r2, r2, #1
    604c:	vmov	s0, r3
    6050:	vcvt.f64.u32	d16, s0
    6054:	vstmia	r1!, {d16}
    6058:	bne	6044 <ReadDoubleData+0x25b8>
    605c:	b	65f0 <ReadDoubleData+0x2b64>
    6060:	mov	r1, #0
    6064:	cmp	ip, #0
    6068:	beq	6088 <ReadDoubleData+0x25fc>
    606c:	add	r0, sp, #168	; 0xa8
    6070:	add	r0, r0, r1, lsl #2
    6074:	vldr	d0, [r0]
    6078:	add	r0, r9, r1, lsl #3
    607c:	vcvt.f64.f32	d17, s1
    6080:	vcvt.f64.f32	d16, s0
    6084:	vst1.64	{d16-d17}, [r0]
    6088:	mov	r6, r8
    608c:	cmp	lr, r8
    6090:	beq	65f0 <ReadDoubleData+0x2b64>
    6094:	add	r0, sp, #168	; 0xa8
    6098:	add	r2, r9, lr, lsl #3
    609c:	add	r1, r0, lr, lsl #2
    60a0:	sub	r0, r6, lr
    60a4:	vldr	s0, [r1]
    60a8:	add	r1, r1, #4
    60ac:	subs	r0, r0, #1
    60b0:	vcvt.f64.f32	d16, s0
    60b4:	vstr	d16, [r2]
    60b8:	add	r2, r2, #8
    60bc:	bne	60a4 <ReadDoubleData+0x2618>
    60c0:	b	65f0 <ReadDoubleData+0x2b64>
    60c4:	mov	r6, #0
    60c8:	ldr	r0, [sp, #24]
    60cc:	ldr	sl, [sp, #28]
    60d0:	cmp	r0, #0
    60d4:	beq	6118 <ReadDoubleData+0x268c>
    60d8:	add	r0, sp, #168	; 0xa8
    60dc:	add	r0, r0, r6, lsl #3
    60e0:	vld1.64	{d8-d9}, [r0]
    60e4:	vmov.32	r0, d9[0]
    60e8:	vmov.32	r1, d9[1]
    60ec:	bl	7152c <__aeabi_ul2d>
    60f0:	vmov.32	r2, d8[0]
    60f4:	vmov.32	r3, d8[1]
    60f8:	vmov	d9, r0, r1
    60fc:	mov	r0, r2
    6100:	mov	r1, r3
    6104:	bl	7152c <__aeabi_ul2d>
    6108:	vmov	d8, r0, r1
    610c:	ldr	r0, [sp, #4]
    6110:	add	r0, r0, r6, lsl #3
    6114:	vst1.64	{d8-d9}, [r0]
    6118:	ldr	r6, [sp, #8]
    611c:	ldr	r1, [sp, #36]	; 0x24
    6120:	cmp	r1, r6
    6124:	beq	65f0 <ReadDoubleData+0x2b64>
    6128:	add	r0, sp, #168	; 0xa8
    612c:	sub	r6, r6, r1
    6130:	add	r4, r0, r1, lsl #3
    6134:	ldr	r0, [sp, #4]
    6138:	add	r5, r0, r1, lsl #3
    613c:	ldrd	r0, [r4]
    6140:	bl	7152c <__aeabi_ul2d>
    6144:	strd	r0, [r5]
    6148:	add	r4, r4, #8
    614c:	add	r5, r5, #8
    6150:	subs	r6, r6, #1
    6154:	bne	613c <ReadDoubleData+0x26b0>
    6158:	b	65f0 <ReadDoubleData+0x2b64>
    615c:	mov	r6, #0
    6160:	ldr	r0, [sp, #24]
    6164:	ldr	sl, [sp, #28]
    6168:	cmp	r0, #0
    616c:	beq	61b0 <ReadDoubleData+0x2724>
    6170:	add	r0, sp, #168	; 0xa8
    6174:	add	r0, r0, r6, lsl #3
    6178:	vld1.64	{d8-d9}, [r0]
    617c:	vmov.32	r0, d9[0]
    6180:	vmov.32	r1, d9[1]
    6184:	bl	71540 <__aeabi_l2d>
    6188:	vmov.32	r2, d8[0]
    618c:	vmov.32	r3, d8[1]
    6190:	vmov	d9, r0, r1
    6194:	mov	r0, r2
    6198:	mov	r1, r3
    619c:	bl	71540 <__aeabi_l2d>
    61a0:	vmov	d8, r0, r1
    61a4:	ldr	r0, [sp, #4]
    61a8:	add	r0, r0, r6, lsl #3
    61ac:	vst1.64	{d8-d9}, [r0]
    61b0:	ldr	r6, [sp, #8]
    61b4:	ldr	r1, [sp, #36]	; 0x24
    61b8:	cmp	r1, r6
    61bc:	beq	65f0 <ReadDoubleData+0x2b64>
    61c0:	add	r0, sp, #168	; 0xa8
    61c4:	sub	r6, r6, r1
    61c8:	add	r4, r0, r1, lsl #3
    61cc:	ldr	r0, [sp, #4]
    61d0:	add	r5, r0, r1, lsl #3
    61d4:	ldrd	r0, [r4]
    61d8:	bl	71540 <__aeabi_l2d>
    61dc:	strd	r0, [r5]
    61e0:	add	r4, r4, #8
    61e4:	add	r5, r5, #8
    61e8:	subs	r6, r6, #1
    61ec:	bne	61d4 <ReadDoubleData+0x2748>
    61f0:	b	65f0 <ReadDoubleData+0x2b64>
    61f4:	mov	r2, #0
    61f8:	ldr	r3, [sp, #4]
    61fc:	cmp	ip, #0
    6200:	beq	6234 <ReadDoubleData+0x27a8>
    6204:	add	r0, sp, #168	; 0xa8
    6208:	ldr	r0, [r0, r2, lsl #1]
    620c:	str	r0, [sp, #52]	; 0x34
    6210:	add	r0, sp, #52	; 0x34
    6214:	vld1.32	{d16[0]}, [r0 :32]
    6218:	ldr	r0, [sp, #16]
    621c:	add	r0, r2, r0
    6220:	add	r0, r3, r0, lsl #3
    6224:	vmovl.s16	q0, d16
    6228:	vcvt.f64.s32	d17, s1
    622c:	vcvt.f64.s32	d16, s0
    6230:	vst1.64	{d16-d17}, [r0]
    6234:	ldr	r4, [sp, #24]
    6238:	cmp	r9, lr
    623c:	beq	65f0 <ReadDoubleData+0x2b64>
    6240:	ldr	r1, [sp, #28]
    6244:	ldr	r2, [sp, #8]
    6248:	add	r0, sp, #168	; 0xa8
    624c:	add	r0, r0, lr, lsl #1
    6250:	add	r1, lr, r1
    6254:	sub	r2, r2, r4
    6258:	sub	r2, r2, lr
    625c:	add	r1, r3, r1, lsl #3
    6260:	sub	r2, r2, #256	; 0x100
    6264:	ldrsh	r3, [r0], #2
    6268:	subs	r2, r2, #1
    626c:	vmov	s0, r3
    6270:	vcvt.f64.s32	d16, s0
    6274:	vstmia	r1!, {d16}
    6278:	bne	6264 <ReadDoubleData+0x27d8>
    627c:	b	65f0 <ReadDoubleData+0x2b64>
    6280:	mov	r2, #0
    6284:	ldr	r3, [sp, #4]
    6288:	cmp	ip, #0
    628c:	beq	62c0 <ReadDoubleData+0x2834>
    6290:	add	r0, sp, #168	; 0xa8
    6294:	ldr	r0, [r0, r2, lsl #1]
    6298:	str	r0, [sp, #84]	; 0x54
    629c:	add	r0, sp, #84	; 0x54
    62a0:	vld1.32	{d16[0]}, [r0 :32]
    62a4:	ldr	r0, [sp, #16]
    62a8:	add	r0, r2, r0
    62ac:	add	r0, r3, r0, lsl #3
    62b0:	vmovl.u16	q0, d16
    62b4:	vcvt.f64.u32	d17, s1
    62b8:	vcvt.f64.u32	d16, s0
    62bc:	vst1.64	{d16-d17}, [r0]
    62c0:	ldr	r4, [sp, #24]
    62c4:	cmp	r9, lr
    62c8:	beq	65f0 <ReadDoubleData+0x2b64>
    62cc:	ldr	r1, [sp, #28]
    62d0:	ldr	r2, [sp, #8]
    62d4:	add	r0, sp, #168	; 0xa8
    62d8:	add	r0, r0, lr, lsl #1
    62dc:	add	r1, lr, r1
    62e0:	sub	r2, r2, r4
    62e4:	sub	r2, r2, lr
    62e8:	add	r1, r3, r1, lsl #3
    62ec:	sub	r2, r2, #256	; 0x100
    62f0:	ldrh	r3, [r0], #2
    62f4:	subs	r2, r2, #1
    62f8:	vmov	s0, r3
    62fc:	vcvt.f64.u32	d16, s0
    6300:	vstmia	r1!, {d16}
    6304:	bne	62f0 <ReadDoubleData+0x2864>
    6308:	b	65f0 <ReadDoubleData+0x2b64>
    630c:	mov	r2, #0
    6310:	cmp	ip, #0
    6314:	beq	633c <ReadDoubleData+0x28b0>
    6318:	add	r0, sp, #168	; 0xa8
    631c:	add	r0, r0, r2, lsl #2
    6320:	vldr	d0, [r0]
    6324:	add	r0, r2, sl
    6328:	vcvt.f64.s32	d17, s1
    632c:	vcvt.f64.s32	d16, s0
    6330:	ldr	r1, [sp, #4]
    6334:	add	r0, r1, r0, lsl #3
    6338:	vst1.64	{d16-d17}, [r0]
    633c:	ldr	r0, [sp, #36]	; 0x24
    6340:	ldr	r4, [sp, #8]
    6344:	cmp	r0, lr
    6348:	beq	6410 <ReadDoubleData+0x2984>
    634c:	ldr	r1, [sp, #28]
    6350:	ldr	r2, [sp, #4]
    6354:	add	r0, sp, #168	; 0xa8
    6358:	add	r0, r0, lr, lsl #2
    635c:	add	r1, lr, r1
    6360:	add	r1, r2, r1, lsl #3
    6364:	ldr	r2, [sp, #24]
    6368:	sub	r2, r4, r2
    636c:	sub	r2, r2, lr
    6370:	sub	r2, r2, #256	; 0x100
    6374:	ldr	r3, [r0], #4
    6378:	subs	r2, r2, #1
    637c:	vmov	s0, r3
    6380:	vcvt.f64.s32	d16, s0
    6384:	vstmia	r1!, {d16}
    6388:	bne	6374 <ReadDoubleData+0x28e8>
    638c:	b	6410 <ReadDoubleData+0x2984>
    6390:	mov	r2, #0
    6394:	cmp	ip, #0
    6398:	beq	63c0 <ReadDoubleData+0x2934>
    639c:	add	r0, sp, #168	; 0xa8
    63a0:	add	r0, r0, r2, lsl #2
    63a4:	vldr	d0, [r0]
    63a8:	add	r0, r2, sl
    63ac:	vcvt.f64.u32	d17, s1
    63b0:	vcvt.f64.u32	d16, s0
    63b4:	ldr	r1, [sp, #4]
    63b8:	add	r0, r1, r0, lsl #3
    63bc:	vst1.64	{d16-d17}, [r0]
    63c0:	ldr	r0, [sp, #36]	; 0x24
    63c4:	ldr	r4, [sp, #8]
    63c8:	cmp	r0, lr
    63cc:	beq	6410 <ReadDoubleData+0x2984>
    63d0:	ldr	r1, [sp, #28]
    63d4:	ldr	r2, [sp, #4]
    63d8:	add	r0, sp, #168	; 0xa8
    63dc:	add	r0, r0, lr, lsl #2
    63e0:	add	r1, lr, r1
    63e4:	add	r1, r2, r1, lsl #3
    63e8:	ldr	r2, [sp, #24]
    63ec:	sub	r2, r4, r2
    63f0:	sub	r2, r2, lr
    63f4:	sub	r2, r2, #256	; 0x100
    63f8:	ldr	r3, [r0], #4
    63fc:	subs	r2, r2, #1
    6400:	vmov	s0, r3
    6404:	vcvt.f64.u32	d16, s0
    6408:	vstmia	r1!, {d16}
    640c:	bne	63f8 <ReadDoubleData+0x296c>
    6410:	mov	sl, r8
    6414:	b	65f0 <ReadDoubleData+0x2b64>
    6418:	mov	r2, #0
    641c:	cmp	ip, #0
    6420:	beq	6448 <ReadDoubleData+0x29bc>
    6424:	add	r1, sp, #168	; 0xa8
    6428:	add	r1, r1, r2, lsl #2
    642c:	vldr	d0, [r1]
    6430:	add	r1, r2, r9
    6434:	ldr	r2, [sp, #4]
    6438:	add	r1, r2, r1, lsl #3
    643c:	vcvt.f64.f32	d17, s1
    6440:	vcvt.f64.f32	d16, s0
    6444:	vst1.64	{d16-d17}, [r1]
    6448:	ldr	r4, [sp, #8]
    644c:	cmp	lr, r0
    6450:	beq	65f0 <ReadDoubleData+0x2b64>
    6454:	ldr	r2, [sp, #28]
    6458:	ldr	r3, [sp, #4]
    645c:	add	r1, sp, #168	; 0xa8
    6460:	add	r1, r1, r0, lsl #2
    6464:	add	r2, r0, r2
    6468:	add	r2, r3, r2, lsl #3
    646c:	ldr	r3, [sp, #24]
    6470:	sub	r3, r4, r3
    6474:	sub	r0, r3, r0
    6478:	sub	r0, r0, #256	; 0x100
    647c:	vldr	s0, [r1]
    6480:	add	r1, r1, #4
    6484:	subs	r0, r0, #1
    6488:	vcvt.f64.f32	d16, s0
    648c:	vstmia	r2!, {d16}
    6490:	bne	647c <ReadDoubleData+0x29f0>
    6494:	b	65f0 <ReadDoubleData+0x2b64>
    6498:	mov	r7, #0
    649c:	ldr	r0, [sp]
    64a0:	ldr	r5, [sp, #20]
    64a4:	cmp	r0, #0
    64a8:	beq	64f0 <ReadDoubleData+0x2a64>
    64ac:	add	r0, sp, #168	; 0xa8
    64b0:	add	r0, r0, r7, lsl #3
    64b4:	vld1.64	{d8-d9}, [r0]
    64b8:	vmov.32	r0, d9[0]
    64bc:	vmov.32	r1, d9[1]
    64c0:	bl	71540 <__aeabi_l2d>
    64c4:	vmov.32	r2, d8[0]
    64c8:	vmov.32	r3, d8[1]
    64cc:	vmov	d9, r0, r1
    64d0:	add	r4, r7, r9
    64d4:	mov	r0, r2
    64d8:	mov	r1, r3
    64dc:	bl	71540 <__aeabi_l2d>
    64e0:	vmov	d8, r0, r1
    64e4:	ldr	r0, [sp, #4]
    64e8:	add	r0, r0, r4, lsl #3
    64ec:	vst1.64	{d8-d9}, [r0]
    64f0:	ldr	r0, [sp, #36]	; 0x24
    64f4:	ldr	r2, [sp, #12]
    64f8:	ldr	r6, [sp, #8]
    64fc:	cmp	r0, r2
    6500:	beq	65ec <ReadDoubleData+0x2b60>
    6504:	ldr	r1, [sp, #4]
    6508:	add	r0, sp, #168	; 0xa8
    650c:	add	r4, r0, r2, lsl #3
    6510:	add	r0, r2, r5
    6514:	add	r5, r1, r0, lsl #3
    6518:	sub	r0, r6, r8
    651c:	sub	r0, r0, r2
    6520:	sub	r6, r0, #256	; 0x100
    6524:	ldrd	r0, [r4]
    6528:	bl	71540 <__aeabi_l2d>
    652c:	strd	r0, [r5]
    6530:	add	r5, r5, #8
    6534:	add	r4, r4, #8
    6538:	subs	r6, r6, #1
    653c:	bne	6524 <ReadDoubleData+0x2a98>
    6540:	b	65ec <ReadDoubleData+0x2b60>
    6544:	mov	r7, #0
    6548:	ldr	r0, [sp]
    654c:	ldr	r5, [sp, #20]
    6550:	cmp	r0, #0
    6554:	beq	659c <ReadDoubleData+0x2b10>
    6558:	add	r0, sp, #168	; 0xa8
    655c:	add	r0, r0, r7, lsl #3
    6560:	vld1.64	{d8-d9}, [r0]
    6564:	vmov.32	r0, d9[0]
    6568:	vmov.32	r1, d9[1]
    656c:	bl	7152c <__aeabi_ul2d>
    6570:	vmov.32	r2, d8[0]
    6574:	vmov.32	r3, d8[1]
    6578:	vmov	d9, r0, r1
    657c:	add	r4, r7, r9
    6580:	mov	r0, r2
    6584:	mov	r1, r3
    6588:	bl	7152c <__aeabi_ul2d>
    658c:	vmov	d8, r0, r1
    6590:	ldr	r0, [sp, #4]
    6594:	add	r0, r0, r4, lsl #3
    6598:	vst1.64	{d8-d9}, [r0]
    659c:	ldr	r0, [sp, #36]	; 0x24
    65a0:	ldr	r2, [sp, #12]
    65a4:	ldr	r6, [sp, #8]
    65a8:	cmp	r0, r2
    65ac:	beq	65ec <ReadDoubleData+0x2b60>
    65b0:	ldr	r1, [sp, #4]
    65b4:	add	r0, sp, #168	; 0xa8
    65b8:	add	r4, r0, r2, lsl #3
    65bc:	add	r0, r2, r5
    65c0:	add	r5, r1, r0, lsl #3
    65c4:	sub	r0, r6, r8
    65c8:	sub	r0, r0, r2
    65cc:	sub	r6, r0, #256	; 0x100
    65d0:	ldrd	r0, [r4]
    65d4:	bl	7152c <__aeabi_ul2d>
    65d8:	strd	r0, [r5]
    65dc:	add	r5, r5, #8
    65e0:	add	r4, r4, #8
    65e4:	subs	r6, r6, #1
    65e8:	bne	65d0 <ReadDoubleData+0x2b44>
    65ec:	ldr	sl, [sp, #28]
    65f0:	ldr	r0, [sp, #32]
    65f4:	mul	r5, sl, r0
    65f8:	b	3ab8 <ReadDoubleData+0x2c>

000065fc <ReadCompressedDoubleData>:
    65fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6600:	add	fp, sp, #28
    6604:	sub	sp, sp, #4
    6608:	vpush	{d8-d9}
    660c:	sub	sp, sp, #40	; 0x28
    6610:	sub	sp, sp, #1024	; 0x400
    6614:	str	r0, [sp, #28]
    6618:	mov	r0, r3
    661c:	mov	r5, r3
    6620:	mov	r4, r2
    6624:	str	r1, [sp, #24]
    6628:	bl	1924 <Mat_SizeOf@plt>
    662c:	mov	r3, r0
    6630:	sub	r0, r5, #1
    6634:	mov	r9, #0
    6638:	cmp	r0, #12
    663c:	bhi	8bd8 <ReadCompressedDoubleData+0x25dc>
    6640:	add	r1, pc, #8
    6644:	ldr	sl, [fp, #8]
    6648:	ldr	r0, [r1, r0, lsl #2]
    664c:	add	pc, r1, r0
    6650:	.word	0x00000034
    6654:	.word	0x000000e4
    6658:	.word	0x00000194
    665c:	.word	0x000001f8
    6660:	.word	0x0000025c
    6664:	.word	0x000002c0
    6668:	.word	0x00000324
    666c:	.word	0x00002588
    6670:	.word	0x00000384
    6674:	.word	0x00002588
    6678:	.word	0x00002588
    667c:	.word	0x000003d0
    6680:	.word	0x00000430
    6684:	cmp	sl, #1024	; 0x400
    6688:	bgt	6ae0 <ReadCompressedDoubleData+0x4e4>
    668c:	mul	r9, r3, sl
    6690:	ldr	r0, [sp, #28]
    6694:	ldr	r1, [sp, #24]
    6698:	add	r5, sp, #32
    669c:	mov	r2, r5
    66a0:	mov	r3, r9
    66a4:	bl	34ac <InflateData>
    66a8:	cmp	sl, #1
    66ac:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    66b0:	mov	r0, #0
    66b4:	beq	84ac <ReadCompressedDoubleData+0x1eb0>
    66b8:	bic	r0, sl, #1
    66bc:	mov	r2, #1
    66c0:	subs	r1, r0, #2
    66c4:	add	r1, r2, r1, lsr #1
    66c8:	and	ip, r1, #1
    66cc:	beq	8470 <ReadCompressedDoubleData+0x1e74>
    66d0:	sub	r3, r1, ip
    66d4:	mov	r1, #0
    66d8:	mov	r7, #32
    66dc:	mov	lr, r4
    66e0:	mov	r6, r4
    66e4:	add	r2, r5, r1
    66e8:	subs	r3, r3, #2
    66ec:	add	r1, r1, #4
    66f0:	vld1.16	{d16[0]}, [r2 :16]
    66f4:	add	r2, r2, #2
    66f8:	vmovl.s8	q8, d16
    66fc:	vmovl.s16	q0, d16
    6700:	vcvt.f64.s32	d17, s1
    6704:	vcvt.f64.s32	d16, s0
    6708:	vst1.64	{d16-d17}, [r6], r7
    670c:	vld1.16	{d16[0]}, [r2 :16]
    6710:	add	r2, r4, #16
    6714:	mov	r4, r6
    6718:	vmovl.s8	q8, d16
    671c:	vmovl.s16	q0, d16
    6720:	vcvt.f64.s32	d17, s1
    6724:	vcvt.f64.s32	d16, s0
    6728:	vst1.64	{d16-d17}, [r2]
    672c:	bne	66e4 <ReadCompressedDoubleData+0xe8>
    6730:	b	8478 <ReadCompressedDoubleData+0x1e7c>
    6734:	cmp	sl, #1024	; 0x400
    6738:	bgt	6c78 <ReadCompressedDoubleData+0x67c>
    673c:	mul	r9, r3, sl
    6740:	ldr	r0, [sp, #28]
    6744:	ldr	r1, [sp, #24]
    6748:	add	r5, sp, #32
    674c:	mov	r2, r5
    6750:	mov	r3, r9
    6754:	bl	34ac <InflateData>
    6758:	cmp	sl, #1
    675c:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6760:	mov	r0, #0
    6764:	beq	8510 <ReadCompressedDoubleData+0x1f14>
    6768:	bic	r0, sl, #1
    676c:	mov	r2, #1
    6770:	subs	r1, r0, #2
    6774:	add	r1, r2, r1, lsr #1
    6778:	and	ip, r1, #1
    677c:	beq	84d4 <ReadCompressedDoubleData+0x1ed8>
    6780:	sub	r3, r1, ip
    6784:	mov	r1, #0
    6788:	mov	r7, #32
    678c:	mov	lr, r4
    6790:	mov	r6, r4
    6794:	add	r2, r5, r1
    6798:	subs	r3, r3, #2
    679c:	add	r1, r1, #4
    67a0:	vld1.16	{d16[0]}, [r2 :16]
    67a4:	add	r2, r2, #2
    67a8:	vmovl.u8	q8, d16
    67ac:	vmovl.u16	q0, d16
    67b0:	vcvt.f64.u32	d17, s1
    67b4:	vcvt.f64.u32	d16, s0
    67b8:	vst1.64	{d16-d17}, [r6], r7
    67bc:	vld1.16	{d16[0]}, [r2 :16]
    67c0:	add	r2, r4, #16
    67c4:	mov	r4, r6
    67c8:	vmovl.u8	q8, d16
    67cc:	vmovl.u16	q0, d16
    67d0:	vcvt.f64.u32	d17, s1
    67d4:	vcvt.f64.u32	d16, s0
    67d8:	vst1.64	{d16-d17}, [r2]
    67dc:	bne	6794 <ReadCompressedDoubleData+0x198>
    67e0:	b	84dc <ReadCompressedDoubleData+0x1ee0>
    67e4:	ldr	r0, [sp, #28]
    67e8:	ldr	r0, [r0, #20]
    67ec:	cmp	r0, #0
    67f0:	beq	6e18 <ReadCompressedDoubleData+0x81c>
    67f4:	cmp	sl, #512	; 0x200
    67f8:	bgt	7344 <ReadCompressedDoubleData+0xd48>
    67fc:	mul	r9, r3, sl
    6800:	ldr	r0, [sp, #28]
    6804:	ldr	r1, [sp, #24]
    6808:	add	r5, sp, #32
    680c:	mov	r2, r5
    6810:	mov	r3, r9
    6814:	bl	34ac <InflateData>
    6818:	cmp	sl, #1
    681c:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6820:	mov	r0, r5
    6824:	bl	1c20 <Mat_int16Swap>
    6828:	vmov	s0, r0
    682c:	add	r5, r5, #2
    6830:	subs	sl, sl, #1
    6834:	vcvt.f64.s32	d16, s0
    6838:	vstr	d16, [r4]
    683c:	add	r4, r4, #8
    6840:	bne	6820 <ReadCompressedDoubleData+0x224>
    6844:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    6848:	ldr	r0, [sp, #28]
    684c:	ldr	r0, [r0, #20]
    6850:	cmp	r0, #0
    6854:	beq	6ec0 <ReadCompressedDoubleData+0x8c4>
    6858:	cmp	sl, #512	; 0x200
    685c:	bgt	7418 <ReadCompressedDoubleData+0xe1c>
    6860:	mul	r9, r3, sl
    6864:	ldr	r0, [sp, #28]
    6868:	ldr	r1, [sp, #24]
    686c:	add	r5, sp, #32
    6870:	mov	r2, r5
    6874:	mov	r3, r9
    6878:	bl	34ac <InflateData>
    687c:	cmp	sl, #1
    6880:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6884:	mov	r0, r5
    6888:	bl	1c34 <Mat_uint16Swap>
    688c:	vmov	s0, r0
    6890:	add	r5, r5, #2
    6894:	subs	sl, sl, #1
    6898:	vcvt.f64.u32	d16, s0
    689c:	vstr	d16, [r4]
    68a0:	add	r4, r4, #8
    68a4:	bne	6884 <ReadCompressedDoubleData+0x288>
    68a8:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    68ac:	ldr	r0, [sp, #28]
    68b0:	ldr	r0, [r0, #20]
    68b4:	cmp	r0, #0
    68b8:	beq	6f68 <ReadCompressedDoubleData+0x96c>
    68bc:	cmp	sl, #256	; 0x100
    68c0:	bgt	74ec <ReadCompressedDoubleData+0xef0>
    68c4:	mul	r9, r3, sl
    68c8:	ldr	r0, [sp, #28]
    68cc:	ldr	r1, [sp, #24]
    68d0:	add	r5, sp, #32
    68d4:	mov	r2, r5
    68d8:	mov	r3, r9
    68dc:	bl	34ac <InflateData>
    68e0:	cmp	sl, #1
    68e4:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    68e8:	mov	r0, r5
    68ec:	bl	1bf8 <Mat_int32Swap>
    68f0:	vmov	s0, r0
    68f4:	add	r5, r5, #4
    68f8:	subs	sl, sl, #1
    68fc:	vcvt.f64.s32	d16, s0
    6900:	vstr	d16, [r4]
    6904:	add	r4, r4, #8
    6908:	bne	68e8 <ReadCompressedDoubleData+0x2ec>
    690c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    6910:	ldr	r0, [sp, #28]
    6914:	ldr	r0, [r0, #20]
    6918:	cmp	r0, #0
    691c:	beq	7010 <ReadCompressedDoubleData+0xa14>
    6920:	cmp	sl, #256	; 0x100
    6924:	bgt	75c0 <ReadCompressedDoubleData+0xfc4>
    6928:	mul	r9, r3, sl
    692c:	ldr	r0, [sp, #28]
    6930:	ldr	r1, [sp, #24]
    6934:	add	r5, sp, #32
    6938:	mov	r2, r5
    693c:	mov	r3, r9
    6940:	bl	34ac <InflateData>
    6944:	cmp	sl, #1
    6948:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    694c:	mov	r0, r5
    6950:	bl	1c0c <Mat_uint32Swap>
    6954:	vmov	s0, r0
    6958:	add	r5, r5, #4
    695c:	subs	sl, sl, #1
    6960:	vcvt.f64.u32	d16, s0
    6964:	vstr	d16, [r4]
    6968:	add	r4, r4, #8
    696c:	bne	694c <ReadCompressedDoubleData+0x350>
    6970:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    6974:	ldr	r0, [sp, #28]
    6978:	ldr	r0, [r0, #20]
    697c:	cmp	r0, #0
    6980:	beq	70b8 <ReadCompressedDoubleData+0xabc>
    6984:	cmp	sl, #256	; 0x100
    6988:	bgt	7694 <ReadCompressedDoubleData+0x1098>
    698c:	mul	r9, r3, sl
    6990:	ldr	r0, [sp, #28]
    6994:	ldr	r1, [sp, #24]
    6998:	add	r5, sp, #32
    699c:	mov	r2, r5
    69a0:	mov	r3, r9
    69a4:	bl	34ac <InflateData>
    69a8:	cmp	sl, #1
    69ac:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    69b0:	mov	r0, r5
    69b4:	bl	1c4c <Mat_floatSwap>
    69b8:	vcvt.f64.f32	d16, s0
    69bc:	add	r5, r5, #4
    69c0:	subs	sl, sl, #1
    69c4:	vstr	d16, [r4]
    69c8:	add	r4, r4, #8
    69cc:	bne	69b0 <ReadCompressedDoubleData+0x3b4>
    69d0:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    69d4:	ldr	r0, [sp, #28]
    69d8:	mul	r9, r3, sl
    69dc:	ldr	r1, [sp, #24]
    69e0:	mov	r2, r4
    69e4:	mov	r5, r2
    69e8:	mov	r3, r9
    69ec:	ldr	r4, [r0, #20]
    69f0:	bl	34ac <InflateData>
    69f4:	cmp	r4, #0
    69f8:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    69fc:	cmp	sl, #1
    6a00:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6a04:	mov	r4, r5
    6a08:	mov	r0, r4
    6a0c:	bl	1c90 <Mat_doubleSwap>
    6a10:	add	r4, r4, #8
    6a14:	subs	sl, sl, #1
    6a18:	bne	6a08 <ReadCompressedDoubleData+0x40c>
    6a1c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    6a20:	ldr	r0, [sp, #28]
    6a24:	ldr	r0, [r0, #20]
    6a28:	cmp	r0, #0
    6a2c:	beq	7154 <ReadCompressedDoubleData+0xb58>
    6a30:	cmp	sl, #128	; 0x80
    6a34:	bgt	7760 <ReadCompressedDoubleData+0x1164>
    6a38:	mul	r9, r3, sl
    6a3c:	ldr	r0, [sp, #28]
    6a40:	ldr	r1, [sp, #24]
    6a44:	add	r5, sp, #32
    6a48:	mov	r2, r5
    6a4c:	mov	r3, r9
    6a50:	bl	34ac <InflateData>
    6a54:	cmp	sl, #1
    6a58:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6a5c:	mov	r0, r5
    6a60:	bl	1b84 <Mat_int64Swap>
    6a64:	bl	71540 <__aeabi_l2d>
    6a68:	strd	r0, [r4]
    6a6c:	add	r5, r5, #8
    6a70:	add	r4, r4, #8
    6a74:	subs	sl, sl, #1
    6a78:	bne	6a5c <ReadCompressedDoubleData+0x460>
    6a7c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    6a80:	ldr	r0, [sp, #28]
    6a84:	ldr	r0, [r0, #20]
    6a88:	cmp	r0, #0
    6a8c:	beq	724c <ReadCompressedDoubleData+0xc50>
    6a90:	cmp	sl, #128	; 0x80
    6a94:	bgt	7834 <ReadCompressedDoubleData+0x1238>
    6a98:	mul	r9, r3, sl
    6a9c:	ldr	r0, [sp, #28]
    6aa0:	ldr	r1, [sp, #24]
    6aa4:	add	r5, sp, #32
    6aa8:	mov	r2, r5
    6aac:	mov	r3, r9
    6ab0:	bl	34ac <InflateData>
    6ab4:	cmp	sl, #1
    6ab8:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6abc:	mov	r0, r5
    6ac0:	bl	1bd4 <Mat_uint64Swap>
    6ac4:	bl	7152c <__aeabi_ul2d>
    6ac8:	strd	r0, [r4]
    6acc:	add	r5, r5, #8
    6ad0:	add	r4, r4, #8
    6ad4:	subs	sl, sl, #1
    6ad8:	bne	6abc <ReadCompressedDoubleData+0x4c0>
    6adc:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    6ae0:	mov	r7, r4
    6ae4:	add	r0, r4, #8192	; 0x2000
    6ae8:	lsl	r9, r3, #10
    6aec:	sub	r8, sl, #1024	; 0x400
    6af0:	mov	r5, #0
    6af4:	mov	r1, #1024	; 0x400
    6af8:	add	r6, sp, #32
    6afc:	mov	r4, #32
    6b00:	str	r3, [sp, #12]
    6b04:	str	r7, [sp, #4]
    6b08:	str	r1, [sp, #20]
    6b0c:	mov	sl, r0
    6b10:	ldr	r0, [sp, #28]
    6b14:	ldr	r1, [sp, #24]
    6b18:	mov	r2, r6
    6b1c:	mov	r3, r9
    6b20:	bl	34ac <InflateData>
    6b24:	mov	r2, r7
    6b28:	mov	r0, #0
    6b2c:	mov	r1, r7
    6b30:	add	r3, r6, r0
    6b34:	add	r0, r0, #4
    6b38:	add	r2, r2, #16
    6b3c:	vld1.16	{d16[0]}, [r3 :16]
    6b40:	add	r3, r3, #2
    6b44:	cmp	r0, #1024	; 0x400
    6b48:	vmovl.s8	q8, d16
    6b4c:	vmovl.s16	q0, d16
    6b50:	vcvt.f64.s32	d17, s1
    6b54:	vcvt.f64.s32	d16, s0
    6b58:	vst1.64	{d16-d17}, [r1], r4
    6b5c:	vld1.16	{d16[0]}, [r3 :16]
    6b60:	vmovl.s8	q8, d16
    6b64:	vmovl.s16	q0, d16
    6b68:	vcvt.f64.s32	d17, s1
    6b6c:	vcvt.f64.s32	d16, s0
    6b70:	vst1.64	{d16-d17}, [r2]
    6b74:	mov	r2, r1
    6b78:	bne	6b30 <ReadCompressedDoubleData+0x534>
    6b7c:	ldr	r1, [sp, #20]
    6b80:	mov	r2, r5
    6b84:	add	r5, r5, #1024	; 0x400
    6b88:	add	r7, r7, #8192	; 0x2000
    6b8c:	add	r0, sl, #8192	; 0x2000
    6b90:	cmp	r5, r8
    6b94:	add	r1, r1, #1024	; 0x400
    6b98:	blt	6b08 <ReadCompressedDoubleData+0x50c>
    6b9c:	ldr	r0, [fp, #8]
    6ba0:	ldr	r1, [sp, #24]
    6ba4:	add	r6, sp, #32
    6ba8:	str	r2, [sp, #16]
    6bac:	mov	r2, r6
    6bb0:	sub	r9, r0, r5
    6bb4:	ldr	r0, [sp, #12]
    6bb8:	mul	r3, r9, r0
    6bbc:	ldr	r0, [sp, #28]
    6bc0:	mov	r8, r3
    6bc4:	bl	34ac <InflateData>
    6bc8:	cmp	r9, #1
    6bcc:	blt	85b0 <ReadCompressedDoubleData+0x1fb4>
    6bd0:	ldr	r3, [sp, #4]
    6bd4:	mov	r0, #0
    6bd8:	beq	8574 <ReadCompressedDoubleData+0x1f78>
    6bdc:	bic	r0, r9, #1
    6be0:	mov	r2, #1
    6be4:	subs	r1, r0, #2
    6be8:	add	r1, r2, r1, lsr #1
    6bec:	and	ip, r1, #1
    6bf0:	beq	8538 <ReadCompressedDoubleData+0x1f3c>
    6bf4:	ldr	r1, [fp, #8]
    6bf8:	ldr	r3, [sp, #16]
    6bfc:	mov	r4, sl
    6c00:	sub	r3, r1, r3
    6c04:	sub	r3, r3, #1024	; 0x400
    6c08:	bic	r3, r3, #1
    6c0c:	sub	r3, r3, #2
    6c10:	add	r2, r2, r3, lsr #1
    6c14:	mvn	r7, r3, lsr #1
    6c18:	and	r2, r2, #1
    6c1c:	add	r3, r7, r2
    6c20:	mov	r2, #0
    6c24:	mov	r7, #32
    6c28:	add	r1, r6, r2
    6c2c:	adds	r3, r3, #2
    6c30:	add	r2, r2, #4
    6c34:	vld1.16	{d16[0]}, [r1 :16]
    6c38:	add	r1, r1, #2
    6c3c:	vmovl.s8	q8, d16
    6c40:	vmovl.s16	q0, d16
    6c44:	vcvt.f64.s32	d17, s1
    6c48:	vcvt.f64.s32	d16, s0
    6c4c:	vst1.64	{d16-d17}, [r4], r7
    6c50:	vld1.16	{d16[0]}, [r1 :16]
    6c54:	add	r1, sl, #16
    6c58:	mov	sl, r4
    6c5c:	vmovl.s8	q8, d16
    6c60:	vmovl.s16	q0, d16
    6c64:	vcvt.f64.s32	d17, s1
    6c68:	vcvt.f64.s32	d16, s0
    6c6c:	vst1.64	{d16-d17}, [r1]
    6c70:	bne	6c28 <ReadCompressedDoubleData+0x62c>
    6c74:	b	853c <ReadCompressedDoubleData+0x1f40>
    6c78:	mov	r2, r4
    6c7c:	add	r0, r4, #8192	; 0x2000
    6c80:	sub	r9, sl, #1024	; 0x400
    6c84:	lsl	r4, r3, #10
    6c88:	mov	r8, #0
    6c8c:	mov	r1, #1024	; 0x400
    6c90:	add	r6, sp, #32
    6c94:	mov	r7, #32
    6c98:	str	r3, [sp, #12]
    6c9c:	mov	sl, r2
    6ca0:	str	r2, [sp, #4]
    6ca4:	str	r1, [sp, #20]
    6ca8:	mov	r5, r0
    6cac:	ldr	r0, [sp, #28]
    6cb0:	ldr	r1, [sp, #24]
    6cb4:	mov	r2, r6
    6cb8:	mov	r3, r4
    6cbc:	bl	34ac <InflateData>
    6cc0:	mov	r2, sl
    6cc4:	mov	r0, #0
    6cc8:	mov	r1, sl
    6ccc:	add	r3, r6, r0
    6cd0:	add	r0, r0, #4
    6cd4:	add	r2, r2, #16
    6cd8:	vld1.16	{d16[0]}, [r3 :16]
    6cdc:	add	r3, r3, #2
    6ce0:	cmp	r0, #1024	; 0x400
    6ce4:	vmovl.u8	q8, d16
    6ce8:	vmovl.u16	q0, d16
    6cec:	vcvt.f64.u32	d17, s1
    6cf0:	vcvt.f64.u32	d16, s0
    6cf4:	vst1.64	{d16-d17}, [r1], r7
    6cf8:	vld1.16	{d16[0]}, [r3 :16]
    6cfc:	vmovl.u8	q8, d16
    6d00:	vmovl.u16	q0, d16
    6d04:	vcvt.f64.u32	d17, s1
    6d08:	vcvt.f64.u32	d16, s0
    6d0c:	vst1.64	{d16-d17}, [r2]
    6d10:	mov	r2, r1
    6d14:	bne	6ccc <ReadCompressedDoubleData+0x6d0>
    6d18:	ldr	r1, [sp, #20]
    6d1c:	mov	r2, r8
    6d20:	add	r8, r8, #1024	; 0x400
    6d24:	add	sl, sl, #8192	; 0x2000
    6d28:	add	r0, r5, #8192	; 0x2000
    6d2c:	cmp	r8, r9
    6d30:	add	r1, r1, #1024	; 0x400
    6d34:	blt	6ca4 <ReadCompressedDoubleData+0x6a8>
    6d38:	ldr	sl, [fp, #8]
    6d3c:	ldr	r0, [sp, #12]
    6d40:	ldr	r1, [sp, #24]
    6d44:	add	r6, sp, #32
    6d48:	str	r2, [sp, #16]
    6d4c:	mov	r2, r6
    6d50:	sub	r9, sl, r8
    6d54:	mov	r4, sl
    6d58:	mul	r3, r9, r0
    6d5c:	ldr	r0, [sp, #28]
    6d60:	mov	sl, r3
    6d64:	bl	34ac <InflateData>
    6d68:	cmp	r9, #1
    6d6c:	blt	8bd4 <ReadCompressedDoubleData+0x25d8>
    6d70:	ldr	r3, [sp, #4]
    6d74:	mov	r0, #0
    6d78:	beq	85fc <ReadCompressedDoubleData+0x2000>
    6d7c:	bic	r0, r9, #1
    6d80:	mov	r2, #1
    6d84:	subs	r1, r0, #2
    6d88:	add	r1, r2, r1, lsr #1
    6d8c:	and	ip, r1, #1
    6d90:	beq	85b8 <ReadCompressedDoubleData+0x1fbc>
    6d94:	ldr	r1, [sp, #16]
    6d98:	mov	lr, r4
    6d9c:	sub	r3, r4, r1
    6da0:	mov	r4, r5
    6da4:	sub	r3, r3, #1024	; 0x400
    6da8:	bic	r3, r3, #1
    6dac:	sub	r3, r3, #2
    6db0:	add	r2, r2, r3, lsr #1
    6db4:	mvn	r7, r3, lsr #1
    6db8:	and	r2, r2, #1
    6dbc:	add	r3, r7, r2
    6dc0:	mov	r2, #0
    6dc4:	mov	r7, #32
    6dc8:	add	r1, r6, r2
    6dcc:	adds	r3, r3, #2
    6dd0:	add	r2, r2, #4
    6dd4:	vld1.16	{d16[0]}, [r1 :16]
    6dd8:	add	r1, r1, #2
    6ddc:	vmovl.u8	q8, d16
    6de0:	vmovl.u16	q0, d16
    6de4:	vcvt.f64.u32	d17, s1
    6de8:	vcvt.f64.u32	d16, s0
    6dec:	vst1.64	{d16-d17}, [r4], r7
    6df0:	vld1.16	{d16[0]}, [r1 :16]
    6df4:	add	r1, r5, #16
    6df8:	mov	r5, r4
    6dfc:	vmovl.u8	q8, d16
    6e00:	vmovl.u16	q0, d16
    6e04:	vcvt.f64.u32	d17, s1
    6e08:	vcvt.f64.u32	d16, s0
    6e0c:	vst1.64	{d16-d17}, [r1]
    6e10:	bne	6dc8 <ReadCompressedDoubleData+0x7cc>
    6e14:	b	85c0 <ReadCompressedDoubleData+0x1fc4>
    6e18:	cmp	sl, #512	; 0x200
    6e1c:	bgt	7908 <ReadCompressedDoubleData+0x130c>
    6e20:	mul	r9, r3, sl
    6e24:	ldr	r0, [sp, #28]
    6e28:	ldr	r1, [sp, #24]
    6e2c:	add	r5, sp, #32
    6e30:	mov	r2, r5
    6e34:	mov	r3, r9
    6e38:	bl	34ac <InflateData>
    6e3c:	cmp	sl, #1
    6e40:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6e44:	mov	r0, #0
    6e48:	beq	8674 <ReadCompressedDoubleData+0x2078>
    6e4c:	bic	r0, sl, #1
    6e50:	mov	r2, #1
    6e54:	subs	r1, r0, #2
    6e58:	add	r1, r2, r1, lsr #1
    6e5c:	and	ip, r1, #1
    6e60:	beq	8638 <ReadCompressedDoubleData+0x203c>
    6e64:	sub	r3, r1, ip
    6e68:	mov	r1, #0
    6e6c:	mov	r7, #32
    6e70:	mov	lr, r4
    6e74:	mov	r6, r4
    6e78:	vld1.32	{d16[0]}, [r5 :32]
    6e7c:	add	r2, r5, #4
    6e80:	add	r5, r5, #8
    6e84:	subs	r3, r3, #2
    6e88:	add	r1, r1, #4
    6e8c:	vmovl.s16	q0, d16
    6e90:	vcvt.f64.s32	d17, s1
    6e94:	vcvt.f64.s32	d16, s0
    6e98:	vst1.64	{d16-d17}, [r6], r7
    6e9c:	vld1.32	{d16[0]}, [r2 :32]
    6ea0:	add	r2, r4, #16
    6ea4:	mov	r4, r6
    6ea8:	vmovl.s16	q0, d16
    6eac:	vcvt.f64.s32	d17, s1
    6eb0:	vcvt.f64.s32	d16, s0
    6eb4:	vst1.64	{d16-d17}, [r2]
    6eb8:	bne	6e78 <ReadCompressedDoubleData+0x87c>
    6ebc:	b	8640 <ReadCompressedDoubleData+0x2044>
    6ec0:	cmp	sl, #512	; 0x200
    6ec4:	bgt	7a94 <ReadCompressedDoubleData+0x1498>
    6ec8:	mul	r9, r3, sl
    6ecc:	ldr	r0, [sp, #28]
    6ed0:	ldr	r1, [sp, #24]
    6ed4:	add	r5, sp, #32
    6ed8:	mov	r2, r5
    6edc:	mov	r3, r9
    6ee0:	bl	34ac <InflateData>
    6ee4:	cmp	sl, #1
    6ee8:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6eec:	mov	r0, #0
    6ef0:	beq	86dc <ReadCompressedDoubleData+0x20e0>
    6ef4:	bic	r0, sl, #1
    6ef8:	mov	r2, #1
    6efc:	subs	r1, r0, #2
    6f00:	add	r1, r2, r1, lsr #1
    6f04:	and	ip, r1, #1
    6f08:	beq	86a0 <ReadCompressedDoubleData+0x20a4>
    6f0c:	sub	r3, r1, ip
    6f10:	mov	r1, #0
    6f14:	mov	r7, #32
    6f18:	mov	lr, r4
    6f1c:	mov	r6, r4
    6f20:	vld1.32	{d16[0]}, [r5 :32]
    6f24:	add	r2, r5, #4
    6f28:	add	r5, r5, #8
    6f2c:	subs	r3, r3, #2
    6f30:	add	r1, r1, #4
    6f34:	vmovl.u16	q0, d16
    6f38:	vcvt.f64.u32	d17, s1
    6f3c:	vcvt.f64.u32	d16, s0
    6f40:	vst1.64	{d16-d17}, [r6], r7
    6f44:	vld1.32	{d16[0]}, [r2 :32]
    6f48:	add	r2, r4, #16
    6f4c:	mov	r4, r6
    6f50:	vmovl.u16	q0, d16
    6f54:	vcvt.f64.u32	d17, s1
    6f58:	vcvt.f64.u32	d16, s0
    6f5c:	vst1.64	{d16-d17}, [r2]
    6f60:	bne	6f20 <ReadCompressedDoubleData+0x924>
    6f64:	b	86a8 <ReadCompressedDoubleData+0x20ac>
    6f68:	cmp	sl, #256	; 0x100
    6f6c:	bgt	7c20 <ReadCompressedDoubleData+0x1624>
    6f70:	mul	r9, r3, sl
    6f74:	ldr	r0, [sp, #28]
    6f78:	ldr	r1, [sp, #24]
    6f7c:	mov	r8, r4
    6f80:	add	r4, sp, #32
    6f84:	mov	r2, r4
    6f88:	mov	r3, r9
    6f8c:	bl	34ac <InflateData>
    6f90:	cmp	sl, #1
    6f94:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    6f98:	mov	lr, #0
    6f9c:	beq	8738 <ReadCompressedDoubleData+0x213c>
    6fa0:	bic	lr, sl, #1
    6fa4:	mov	r1, #1
    6fa8:	subs	r0, lr, #2
    6fac:	add	r0, r1, r0, lsr #1
    6fb0:	and	ip, r0, #1
    6fb4:	beq	8708 <ReadCompressedDoubleData+0x210c>
    6fb8:	sub	r3, r0, ip
    6fbc:	mov	r1, #0
    6fc0:	mov	r7, #16
    6fc4:	mov	r6, #32
    6fc8:	mov	r0, r8
    6fcc:	mov	r5, r4
    6fd0:	mov	r2, r8
    6fd4:	vld1.32	{d0}, [r5 :64], r7
    6fd8:	add	r0, r0, #16
    6fdc:	subs	r3, r3, #2
    6fe0:	add	r1, r1, #4
    6fe4:	vcvt.f64.s32	d17, s1
    6fe8:	vcvt.f64.s32	d16, s0
    6fec:	vst1.64	{d16-d17}, [r2], r6
    6ff0:	vldr	d0, [r4, #8]
    6ff4:	mov	r4, r5
    6ff8:	vcvt.f64.s32	d17, s1
    6ffc:	vcvt.f64.s32	d16, s0
    7000:	vst1.64	{d16-d17}, [r0]
    7004:	mov	r0, r2
    7008:	bne	6fd4 <ReadCompressedDoubleData+0x9d8>
    700c:	b	870c <ReadCompressedDoubleData+0x2110>
    7010:	cmp	sl, #256	; 0x100
    7014:	bgt	7d98 <ReadCompressedDoubleData+0x179c>
    7018:	mul	r9, r3, sl
    701c:	ldr	r0, [sp, #28]
    7020:	ldr	r1, [sp, #24]
    7024:	mov	r8, r4
    7028:	add	r4, sp, #32
    702c:	mov	r2, r4
    7030:	mov	r3, r9
    7034:	bl	34ac <InflateData>
    7038:	cmp	sl, #1
    703c:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7040:	mov	lr, #0
    7044:	beq	8794 <ReadCompressedDoubleData+0x2198>
    7048:	bic	lr, sl, #1
    704c:	mov	r1, #1
    7050:	subs	r0, lr, #2
    7054:	add	r0, r1, r0, lsr #1
    7058:	and	ip, r0, #1
    705c:	beq	8764 <ReadCompressedDoubleData+0x2168>
    7060:	sub	r3, r0, ip
    7064:	mov	r1, #0
    7068:	mov	r7, #16
    706c:	mov	r6, #32
    7070:	mov	r0, r8
    7074:	mov	r5, r4
    7078:	mov	r2, r8
    707c:	vld1.32	{d0}, [r5 :64], r7
    7080:	add	r0, r0, #16
    7084:	subs	r3, r3, #2
    7088:	add	r1, r1, #4
    708c:	vcvt.f64.u32	d17, s1
    7090:	vcvt.f64.u32	d16, s0
    7094:	vst1.64	{d16-d17}, [r2], r6
    7098:	vldr	d0, [r4, #8]
    709c:	mov	r4, r5
    70a0:	vcvt.f64.u32	d17, s1
    70a4:	vcvt.f64.u32	d16, s0
    70a8:	vst1.64	{d16-d17}, [r0]
    70ac:	mov	r0, r2
    70b0:	bne	707c <ReadCompressedDoubleData+0xa80>
    70b4:	b	8768 <ReadCompressedDoubleData+0x216c>
    70b8:	cmp	sl, #256	; 0x100
    70bc:	bgt	7f10 <ReadCompressedDoubleData+0x1914>
    70c0:	mul	r9, r3, sl
    70c4:	ldr	r0, [sp, #28]
    70c8:	ldr	r1, [sp, #24]
    70cc:	add	r7, sp, #32
    70d0:	mov	r2, r7
    70d4:	mov	r3, r9
    70d8:	bl	34ac <InflateData>
    70dc:	cmp	sl, #1
    70e0:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    70e4:	mov	lr, #0
    70e8:	beq	87f8 <ReadCompressedDoubleData+0x21fc>
    70ec:	bic	lr, sl, #1
    70f0:	mov	r2, #1
    70f4:	subs	r1, lr, #2
    70f8:	add	r1, r2, r1, lsr #1
    70fc:	and	ip, r1, #1
    7100:	beq	87c0 <ReadCompressedDoubleData+0x21c4>
    7104:	sub	r3, r1, ip
    7108:	mov	r1, #0
    710c:	mov	r2, #16
    7110:	mov	r6, #32
    7114:	mov	r8, r4
    7118:	mov	r5, r7
    711c:	vld1.32	{d0}, [r5 :64], r2
    7120:	add	r0, r4, #16
    7124:	subs	r3, r3, #2
    7128:	add	r1, r1, #4
    712c:	vcvt.f64.f32	d17, s1
    7130:	vcvt.f64.f32	d16, s0
    7134:	vst1.64	{d16-d17}, [r4], r6
    7138:	vldr	d0, [r7, #8]
    713c:	mov	r7, r5
    7140:	vcvt.f64.f32	d17, s1
    7144:	vcvt.f64.f32	d16, s0
    7148:	vst1.64	{d16-d17}, [r0]
    714c:	bne	711c <ReadCompressedDoubleData+0xb20>
    7150:	b	87c8 <ReadCompressedDoubleData+0x21cc>
    7154:	cmp	sl, #128	; 0x80
    7158:	bgt	8078 <ReadCompressedDoubleData+0x1a7c>
    715c:	mul	r9, r3, sl
    7160:	ldr	r0, [sp, #28]
    7164:	ldr	r1, [sp, #24]
    7168:	add	r8, sp, #32
    716c:	mov	r2, r8
    7170:	mov	r3, r9
    7174:	bl	34ac <InflateData>
    7178:	cmp	sl, #1
    717c:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7180:	mov	r1, #0
    7184:	str	r4, [sp, #4]
    7188:	beq	8888 <ReadCompressedDoubleData+0x228c>
    718c:	bic	r0, sl, #1
    7190:	mov	r1, #1
    7194:	str	r9, [sp, #12]
    7198:	str	r0, [sp, #28]
    719c:	subs	r0, r0, #2
    71a0:	add	r0, r1, r0, lsr #1
    71a4:	and	r1, r0, #1
    71a8:	str	r1, [sp, #24]
    71ac:	beq	8828 <ReadCompressedDoubleData+0x222c>
    71b0:	ldr	r6, [sp, #4]
    71b4:	sub	r4, r0, r1
    71b8:	mov	r7, #0
    71bc:	mov	r5, r8
    71c0:	mov	r9, r6
    71c4:	mov	r0, #32
    71c8:	vld1.64	{d8-d9}, [r5], r0
    71cc:	vmov.32	r0, d9[0]
    71d0:	vmov.32	r1, d9[1]
    71d4:	bl	71540 <__aeabi_l2d>
    71d8:	vmov.32	r2, d8[0]
    71dc:	vmov.32	r3, d8[1]
    71e0:	vmov	d9, r0, r1
    71e4:	mov	r0, r2
    71e8:	mov	r1, r3
    71ec:	bl	71540 <__aeabi_l2d>
    71f0:	vmov	d8, r0, r1
    71f4:	mov	r0, #32
    71f8:	vst1.64	{d8-d9}, [r9], r0
    71fc:	add	r0, r8, #16
    7200:	vld1.64	{d8-d9}, [r0]
    7204:	vmov.32	r0, d9[0]
    7208:	vmov.32	r1, d9[1]
    720c:	bl	71540 <__aeabi_l2d>
    7210:	vmov.32	r2, d8[0]
    7214:	vmov.32	r3, d8[1]
    7218:	vmov	d9, r0, r1
    721c:	mov	r0, r2
    7220:	mov	r1, r3
    7224:	bl	71540 <__aeabi_l2d>
    7228:	vmov	d8, r0, r1
    722c:	add	r0, r6, #16
    7230:	subs	r4, r4, #2
    7234:	add	r7, r7, #4
    7238:	mov	r6, r9
    723c:	mov	r8, r5
    7240:	vst1.64	{d8-d9}, [r0]
    7244:	bne	71c4 <ReadCompressedDoubleData+0xbc8>
    7248:	b	882c <ReadCompressedDoubleData+0x2230>
    724c:	cmp	sl, #128	; 0x80
    7250:	bgt	8274 <ReadCompressedDoubleData+0x1c78>
    7254:	mul	r9, r3, sl
    7258:	ldr	r0, [sp, #28]
    725c:	ldr	r1, [sp, #24]
    7260:	add	r8, sp, #32
    7264:	mov	r2, r8
    7268:	mov	r3, r9
    726c:	bl	34ac <InflateData>
    7270:	cmp	sl, #1
    7274:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7278:	mov	r1, #0
    727c:	str	r4, [sp, #4]
    7280:	beq	891c <ReadCompressedDoubleData+0x2320>
    7284:	bic	r0, sl, #1
    7288:	mov	r1, #1
    728c:	str	r9, [sp, #12]
    7290:	str	r0, [sp, #28]
    7294:	subs	r0, r0, #2
    7298:	add	r0, r1, r0, lsr #1
    729c:	and	r1, r0, #1
    72a0:	str	r1, [sp, #24]
    72a4:	beq	88bc <ReadCompressedDoubleData+0x22c0>
    72a8:	ldr	r6, [sp, #4]
    72ac:	sub	r4, r0, r1
    72b0:	mov	r7, #0
    72b4:	mov	r5, r8
    72b8:	mov	r9, r6
    72bc:	mov	r0, #32
    72c0:	vld1.64	{d8-d9}, [r5], r0
    72c4:	vmov.32	r0, d9[0]
    72c8:	vmov.32	r1, d9[1]
    72cc:	bl	7152c <__aeabi_ul2d>
    72d0:	vmov.32	r2, d8[0]
    72d4:	vmov.32	r3, d8[1]
    72d8:	vmov	d9, r0, r1
    72dc:	mov	r0, r2
    72e0:	mov	r1, r3
    72e4:	bl	7152c <__aeabi_ul2d>
    72e8:	vmov	d8, r0, r1
    72ec:	mov	r0, #32
    72f0:	vst1.64	{d8-d9}, [r9], r0
    72f4:	add	r0, r8, #16
    72f8:	vld1.64	{d8-d9}, [r0]
    72fc:	vmov.32	r0, d9[0]
    7300:	vmov.32	r1, d9[1]
    7304:	bl	7152c <__aeabi_ul2d>
    7308:	vmov.32	r2, d8[0]
    730c:	vmov.32	r3, d8[1]
    7310:	vmov	d9, r0, r1
    7314:	mov	r0, r2
    7318:	mov	r1, r3
    731c:	bl	7152c <__aeabi_ul2d>
    7320:	vmov	d8, r0, r1
    7324:	add	r0, r6, #16
    7328:	subs	r4, r4, #2
    732c:	add	r7, r7, #4
    7330:	mov	r6, r9
    7334:	mov	r8, r5
    7338:	vst1.64	{d8-d9}, [r0]
    733c:	bne	72bc <ReadCompressedDoubleData+0xcc0>
    7340:	b	88c0 <ReadCompressedDoubleData+0x22c4>
    7344:	lsl	r1, r3, #9
    7348:	add	r0, r4, #4096	; 0x1000
    734c:	sub	r9, sl, #512	; 0x200
    7350:	add	r6, sp, #32
    7354:	str	r3, [sp, #12]
    7358:	str	r1, [sp, #20]
    735c:	mov	r1, #0
    7360:	mov	sl, r1
    7364:	mov	r7, r0
    7368:	ldr	r0, [sp, #28]
    736c:	ldr	r1, [sp, #24]
    7370:	ldr	r3, [sp, #20]
    7374:	mov	r2, r6
    7378:	bl	34ac <InflateData>
    737c:	mov	r8, r4
    7380:	mov	r5, #0
    7384:	add	r0, r6, r5
    7388:	bl	1c20 <Mat_int16Swap>
    738c:	vmov	s0, r0
    7390:	add	r5, r5, #2
    7394:	cmp	r5, #1024	; 0x400
    7398:	vcvt.f64.s32	d16, s0
    739c:	vstmia	r4!, {d16}
    73a0:	bne	7384 <ReadCompressedDoubleData+0xd88>
    73a4:	add	r1, sl, #512	; 0x200
    73a8:	mov	r4, r8
    73ac:	add	r4, r8, #4096	; 0x1000
    73b0:	add	r0, r7, #4096	; 0x1000
    73b4:	cmp	r1, r9
    73b8:	blt	7360 <ReadCompressedDoubleData+0xd64>
    73bc:	ldr	r6, [fp, #8]
    73c0:	ldr	r0, [sp, #12]
    73c4:	add	r4, sp, #32
    73c8:	mov	r2, r4
    73cc:	sub	r5, r6, r1
    73d0:	ldr	r1, [sp, #24]
    73d4:	mul	r9, r5, r0
    73d8:	ldr	r0, [sp, #28]
    73dc:	mov	r3, r9
    73e0:	bl	34ac <InflateData>
    73e4:	cmp	r5, #1
    73e8:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    73ec:	sub	r0, r6, sl
    73f0:	sub	r5, r0, #512	; 0x200
    73f4:	mov	r0, r4
    73f8:	bl	1c20 <Mat_int16Swap>
    73fc:	vmov	s0, r0
    7400:	add	r4, r4, #2
    7404:	subs	r5, r5, #1
    7408:	vcvt.f64.s32	d16, s0
    740c:	vstmia	r7!, {d16}
    7410:	bne	73f4 <ReadCompressedDoubleData+0xdf8>
    7414:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    7418:	lsl	r1, r3, #9
    741c:	add	r0, r4, #4096	; 0x1000
    7420:	sub	r9, sl, #512	; 0x200
    7424:	add	r6, sp, #32
    7428:	str	r3, [sp, #12]
    742c:	str	r1, [sp, #20]
    7430:	mov	r1, #0
    7434:	mov	sl, r1
    7438:	mov	r7, r0
    743c:	ldr	r0, [sp, #28]
    7440:	ldr	r1, [sp, #24]
    7444:	ldr	r3, [sp, #20]
    7448:	mov	r2, r6
    744c:	bl	34ac <InflateData>
    7450:	mov	r8, r4
    7454:	mov	r5, #0
    7458:	add	r0, r6, r5
    745c:	bl	1c34 <Mat_uint16Swap>
    7460:	vmov	s0, r0
    7464:	add	r5, r5, #2
    7468:	cmp	r5, #1024	; 0x400
    746c:	vcvt.f64.u32	d16, s0
    7470:	vstmia	r4!, {d16}
    7474:	bne	7458 <ReadCompressedDoubleData+0xe5c>
    7478:	add	r1, sl, #512	; 0x200
    747c:	mov	r4, r8
    7480:	add	r4, r8, #4096	; 0x1000
    7484:	add	r0, r7, #4096	; 0x1000
    7488:	cmp	r1, r9
    748c:	blt	7434 <ReadCompressedDoubleData+0xe38>
    7490:	ldr	r6, [fp, #8]
    7494:	ldr	r0, [sp, #12]
    7498:	add	r4, sp, #32
    749c:	mov	r2, r4
    74a0:	sub	r5, r6, r1
    74a4:	ldr	r1, [sp, #24]
    74a8:	mul	r9, r5, r0
    74ac:	ldr	r0, [sp, #28]
    74b0:	mov	r3, r9
    74b4:	bl	34ac <InflateData>
    74b8:	cmp	r5, #1
    74bc:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    74c0:	sub	r0, r6, sl
    74c4:	sub	r5, r0, #512	; 0x200
    74c8:	mov	r0, r4
    74cc:	bl	1c34 <Mat_uint16Swap>
    74d0:	vmov	s0, r0
    74d4:	add	r4, r4, #2
    74d8:	subs	r5, r5, #1
    74dc:	vcvt.f64.u32	d16, s0
    74e0:	vstmia	r7!, {d16}
    74e4:	bne	74c8 <ReadCompressedDoubleData+0xecc>
    74e8:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    74ec:	lsl	r1, r3, #8
    74f0:	add	r0, r4, #2048	; 0x800
    74f4:	sub	r9, sl, #256	; 0x100
    74f8:	add	r6, sp, #32
    74fc:	str	r3, [sp, #12]
    7500:	str	r1, [sp, #20]
    7504:	mov	r1, #0
    7508:	mov	sl, r1
    750c:	mov	r7, r0
    7510:	ldr	r0, [sp, #28]
    7514:	ldr	r1, [sp, #24]
    7518:	ldr	r3, [sp, #20]
    751c:	mov	r2, r6
    7520:	bl	34ac <InflateData>
    7524:	mov	r8, r4
    7528:	mov	r5, #0
    752c:	add	r0, r6, r5
    7530:	bl	1bf8 <Mat_int32Swap>
    7534:	vmov	s0, r0
    7538:	add	r5, r5, #4
    753c:	cmp	r5, #1024	; 0x400
    7540:	vcvt.f64.s32	d16, s0
    7544:	vstmia	r4!, {d16}
    7548:	bne	752c <ReadCompressedDoubleData+0xf30>
    754c:	add	r1, sl, #256	; 0x100
    7550:	mov	r4, r8
    7554:	add	r4, r8, #2048	; 0x800
    7558:	add	r0, r7, #2048	; 0x800
    755c:	cmp	r1, r9
    7560:	blt	7508 <ReadCompressedDoubleData+0xf0c>
    7564:	ldr	r6, [fp, #8]
    7568:	ldr	r0, [sp, #12]
    756c:	add	r4, sp, #32
    7570:	mov	r2, r4
    7574:	sub	r5, r6, r1
    7578:	ldr	r1, [sp, #24]
    757c:	mul	r9, r5, r0
    7580:	ldr	r0, [sp, #28]
    7584:	mov	r3, r9
    7588:	bl	34ac <InflateData>
    758c:	cmp	r5, #1
    7590:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7594:	sub	r0, r6, sl
    7598:	sub	r5, r0, #256	; 0x100
    759c:	mov	r0, r4
    75a0:	bl	1bf8 <Mat_int32Swap>
    75a4:	vmov	s0, r0
    75a8:	add	r4, r4, #4
    75ac:	subs	r5, r5, #1
    75b0:	vcvt.f64.s32	d16, s0
    75b4:	vstmia	r7!, {d16}
    75b8:	bne	759c <ReadCompressedDoubleData+0xfa0>
    75bc:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    75c0:	lsl	r1, r3, #8
    75c4:	add	r0, r4, #2048	; 0x800
    75c8:	sub	r9, sl, #256	; 0x100
    75cc:	add	r6, sp, #32
    75d0:	str	r3, [sp, #12]
    75d4:	str	r1, [sp, #20]
    75d8:	mov	r1, #0
    75dc:	mov	sl, r1
    75e0:	mov	r7, r0
    75e4:	ldr	r0, [sp, #28]
    75e8:	ldr	r1, [sp, #24]
    75ec:	ldr	r3, [sp, #20]
    75f0:	mov	r2, r6
    75f4:	bl	34ac <InflateData>
    75f8:	mov	r8, r4
    75fc:	mov	r5, #0
    7600:	add	r0, r6, r5
    7604:	bl	1c0c <Mat_uint32Swap>
    7608:	vmov	s0, r0
    760c:	add	r5, r5, #4
    7610:	cmp	r5, #1024	; 0x400
    7614:	vcvt.f64.u32	d16, s0
    7618:	vstmia	r4!, {d16}
    761c:	bne	7600 <ReadCompressedDoubleData+0x1004>
    7620:	add	r1, sl, #256	; 0x100
    7624:	mov	r4, r8
    7628:	add	r4, r8, #2048	; 0x800
    762c:	add	r0, r7, #2048	; 0x800
    7630:	cmp	r1, r9
    7634:	blt	75dc <ReadCompressedDoubleData+0xfe0>
    7638:	ldr	r6, [fp, #8]
    763c:	ldr	r0, [sp, #12]
    7640:	add	r4, sp, #32
    7644:	mov	r2, r4
    7648:	sub	r5, r6, r1
    764c:	ldr	r1, [sp, #24]
    7650:	mul	r9, r5, r0
    7654:	ldr	r0, [sp, #28]
    7658:	mov	r3, r9
    765c:	bl	34ac <InflateData>
    7660:	cmp	r5, #1
    7664:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7668:	sub	r0, r6, sl
    766c:	sub	r5, r0, #256	; 0x100
    7670:	mov	r0, r4
    7674:	bl	1c0c <Mat_uint32Swap>
    7678:	vmov	s0, r0
    767c:	add	r4, r4, #4
    7680:	subs	r5, r5, #1
    7684:	vcvt.f64.u32	d16, s0
    7688:	vstmia	r7!, {d16}
    768c:	bne	7670 <ReadCompressedDoubleData+0x1074>
    7690:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    7694:	lsl	r1, r3, #8
    7698:	add	r0, r4, #2048	; 0x800
    769c:	sub	r9, sl, #256	; 0x100
    76a0:	add	r6, sp, #32
    76a4:	str	r3, [sp, #12]
    76a8:	str	r1, [sp, #20]
    76ac:	mov	r1, #0
    76b0:	mov	sl, r1
    76b4:	mov	r7, r0
    76b8:	ldr	r0, [sp, #28]
    76bc:	ldr	r1, [sp, #24]
    76c0:	ldr	r3, [sp, #20]
    76c4:	mov	r2, r6
    76c8:	bl	34ac <InflateData>
    76cc:	mov	r8, r4
    76d0:	mov	r5, #0
    76d4:	add	r0, r6, r5
    76d8:	bl	1c4c <Mat_floatSwap>
    76dc:	vcvt.f64.f32	d16, s0
    76e0:	add	r5, r5, #4
    76e4:	cmp	r5, #1024	; 0x400
    76e8:	vstmia	r4!, {d16}
    76ec:	bne	76d4 <ReadCompressedDoubleData+0x10d8>
    76f0:	add	r1, sl, #256	; 0x100
    76f4:	mov	r4, r8
    76f8:	add	r4, r8, #2048	; 0x800
    76fc:	add	r0, r7, #2048	; 0x800
    7700:	cmp	r1, r9
    7704:	blt	76b0 <ReadCompressedDoubleData+0x10b4>
    7708:	ldr	r6, [fp, #8]
    770c:	ldr	r0, [sp, #12]
    7710:	add	r4, sp, #32
    7714:	mov	r2, r4
    7718:	sub	r5, r6, r1
    771c:	ldr	r1, [sp, #24]
    7720:	mul	r9, r5, r0
    7724:	ldr	r0, [sp, #28]
    7728:	mov	r3, r9
    772c:	bl	34ac <InflateData>
    7730:	cmp	r5, #1
    7734:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7738:	sub	r0, r6, sl
    773c:	sub	r5, r0, #256	; 0x100
    7740:	mov	r0, r4
    7744:	bl	1c4c <Mat_floatSwap>
    7748:	vcvt.f64.f32	d16, s0
    774c:	add	r4, r4, #4
    7750:	subs	r5, r5, #1
    7754:	vstmia	r7!, {d16}
    7758:	bne	7740 <ReadCompressedDoubleData+0x1144>
    775c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    7760:	lsl	r1, r3, #7
    7764:	add	r0, r4, #1024	; 0x400
    7768:	sub	r9, sl, #128	; 0x80
    776c:	add	r6, sp, #32
    7770:	str	r3, [sp, #12]
    7774:	str	r1, [sp, #20]
    7778:	mov	r1, #0
    777c:	mov	r5, r1
    7780:	mov	r7, r0
    7784:	ldr	r0, [sp, #28]
    7788:	ldr	r1, [sp, #24]
    778c:	ldr	r3, [sp, #20]
    7790:	mov	r2, r6
    7794:	bl	34ac <InflateData>
    7798:	mov	r8, r4
    779c:	mov	r4, #0
    77a0:	add	r0, r6, r4
    77a4:	bl	1b84 <Mat_int64Swap>
    77a8:	bl	71540 <__aeabi_l2d>
    77ac:	mov	r2, r8
    77b0:	str	r0, [r2, r4]!
    77b4:	add	r4, r4, #8
    77b8:	cmp	r4, #1024	; 0x400
    77bc:	str	r1, [r2, #4]
    77c0:	bne	77a0 <ReadCompressedDoubleData+0x11a4>
    77c4:	add	r8, r8, #1024	; 0x400
    77c8:	add	r1, r5, #128	; 0x80
    77cc:	add	r0, r7, #1024	; 0x400
    77d0:	cmp	r1, r9
    77d4:	mov	r4, r8
    77d8:	blt	777c <ReadCompressedDoubleData+0x1180>
    77dc:	ldr	r0, [sp, #12]
    77e0:	sub	r6, sl, r1
    77e4:	ldr	r1, [sp, #24]
    77e8:	add	r4, sp, #32
    77ec:	mov	r2, r4
    77f0:	mul	r9, r6, r0
    77f4:	ldr	r0, [sp, #28]
    77f8:	mov	r3, r9
    77fc:	bl	34ac <InflateData>
    7800:	cmp	r6, #1
    7804:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    7808:	sub	r0, sl, r5
    780c:	sub	r5, r0, #128	; 0x80
    7810:	mov	r0, r4
    7814:	bl	1b84 <Mat_int64Swap>
    7818:	bl	71540 <__aeabi_l2d>
    781c:	strd	r0, [r7]
    7820:	add	r7, r7, #8
    7824:	add	r4, r4, #8
    7828:	subs	r5, r5, #1
    782c:	bne	7810 <ReadCompressedDoubleData+0x1214>
    7830:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    7834:	lsl	r1, r3, #7
    7838:	add	r0, r4, #1024	; 0x400
    783c:	sub	r9, sl, #128	; 0x80
    7840:	add	r6, sp, #32
    7844:	str	r3, [sp, #12]
    7848:	str	r1, [sp, #20]
    784c:	mov	r1, #0
    7850:	mov	r5, r1
    7854:	mov	r7, r0
    7858:	ldr	r0, [sp, #28]
    785c:	ldr	r1, [sp, #24]
    7860:	ldr	r3, [sp, #20]
    7864:	mov	r2, r6
    7868:	bl	34ac <InflateData>
    786c:	mov	r8, r4
    7870:	mov	r4, #0
    7874:	add	r0, r6, r4
    7878:	bl	1bd4 <Mat_uint64Swap>
    787c:	bl	7152c <__aeabi_ul2d>
    7880:	mov	r2, r8
    7884:	str	r0, [r2, r4]!
    7888:	add	r4, r4, #8
    788c:	cmp	r4, #1024	; 0x400
    7890:	str	r1, [r2, #4]
    7894:	bne	7874 <ReadCompressedDoubleData+0x1278>
    7898:	add	r8, r8, #1024	; 0x400
    789c:	add	r1, r5, #128	; 0x80
    78a0:	add	r0, r7, #1024	; 0x400
    78a4:	cmp	r1, r9
    78a8:	mov	r4, r8
    78ac:	blt	7850 <ReadCompressedDoubleData+0x1254>
    78b0:	ldr	r0, [sp, #12]
    78b4:	sub	r6, sl, r1
    78b8:	ldr	r1, [sp, #24]
    78bc:	add	r4, sp, #32
    78c0:	mov	r2, r4
    78c4:	mul	r9, r6, r0
    78c8:	ldr	r0, [sp, #28]
    78cc:	mov	r3, r9
    78d0:	bl	34ac <InflateData>
    78d4:	cmp	r6, #1
    78d8:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    78dc:	sub	r0, sl, r5
    78e0:	sub	r5, r0, #128	; 0x80
    78e4:	mov	r0, r4
    78e8:	bl	1bd4 <Mat_uint64Swap>
    78ec:	bl	7152c <__aeabi_ul2d>
    78f0:	strd	r0, [r7]
    78f4:	add	r7, r7, #8
    78f8:	add	r4, r4, #8
    78fc:	subs	r5, r5, #1
    7900:	bne	78e4 <ReadCompressedDoubleData+0x12e8>
    7904:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    7908:	sub	r8, sl, #512	; 0x200
    790c:	mov	sl, r4
    7910:	add	r0, r4, #4096	; 0x1000
    7914:	lsl	r7, r3, #9
    7918:	mov	r5, #0
    791c:	mov	r1, #512	; 0x200
    7920:	add	r6, sp, #32
    7924:	mov	r4, #32
    7928:	str	r3, [sp, #12]
    792c:	str	sl, [sp, #4]
    7930:	str	r1, [sp, #20]
    7934:	mov	r9, r0
    7938:	ldr	r0, [sp, #28]
    793c:	ldr	r1, [sp, #24]
    7940:	mov	r2, r6
    7944:	mov	r3, r7
    7948:	bl	34ac <InflateData>
    794c:	mov	r2, sl
    7950:	mov	r0, #0
    7954:	mov	r1, sl
    7958:	add	r3, r6, r0
    795c:	add	r0, r0, #8
    7960:	add	r2, r2, #16
    7964:	vld1.32	{d16[0]}, [r3 :32]
    7968:	add	r3, r3, #4
    796c:	cmp	r0, #1024	; 0x400
    7970:	vmovl.s16	q0, d16
    7974:	vcvt.f64.s32	d17, s1
    7978:	vcvt.f64.s32	d16, s0
    797c:	vst1.64	{d16-d17}, [r1], r4
    7980:	vld1.32	{d16[0]}, [r3 :32]
    7984:	vmovl.s16	q0, d16
    7988:	vcvt.f64.s32	d17, s1
    798c:	vcvt.f64.s32	d16, s0
    7990:	vst1.64	{d16-d17}, [r2]
    7994:	mov	r2, r1
    7998:	bne	7958 <ReadCompressedDoubleData+0x135c>
    799c:	ldr	r1, [sp, #20]
    79a0:	mov	r2, r5
    79a4:	add	r5, r5, #512	; 0x200
    79a8:	add	sl, sl, #4096	; 0x1000
    79ac:	add	r0, r9, #4096	; 0x1000
    79b0:	cmp	r5, r8
    79b4:	add	r1, r1, #512	; 0x200
    79b8:	blt	7930 <ReadCompressedDoubleData+0x1334>
    79bc:	ldr	sl, [fp, #8]
    79c0:	ldr	r0, [sp, #12]
    79c4:	ldr	r1, [sp, #24]
    79c8:	add	r6, sp, #32
    79cc:	str	r2, [sp, #16]
    79d0:	mov	r2, r6
    79d4:	sub	r8, sl, r5
    79d8:	mov	r4, sl
    79dc:	mul	r3, r8, r0
    79e0:	ldr	r0, [sp, #28]
    79e4:	mov	sl, r3
    79e8:	bl	34ac <InflateData>
    79ec:	cmp	r8, #1
    79f0:	blt	8bd4 <ReadCompressedDoubleData+0x25d8>
    79f4:	ldr	r3, [sp, #4]
    79f8:	mov	r0, #0
    79fc:	beq	8994 <ReadCompressedDoubleData+0x2398>
    7a00:	bic	r0, r8, #1
    7a04:	mov	r2, #1
    7a08:	subs	r1, r0, #2
    7a0c:	add	r1, r2, r1, lsr #1
    7a10:	and	ip, r1, #1
    7a14:	beq	8950 <ReadCompressedDoubleData+0x2354>
    7a18:	ldr	r1, [sp, #16]
    7a1c:	mov	lr, r4
    7a20:	sub	r3, r4, r1
    7a24:	mov	r4, #32
    7a28:	sub	r3, r3, #512	; 0x200
    7a2c:	bic	r3, r3, #1
    7a30:	sub	r3, r3, #2
    7a34:	add	r2, r2, r3, lsr #1
    7a38:	mvn	r7, r3, lsr #1
    7a3c:	and	r2, r2, #1
    7a40:	add	r3, r7, r2
    7a44:	mov	r2, #0
    7a48:	mov	r7, r9
    7a4c:	vld1.32	{d16[0]}, [r6 :32]
    7a50:	add	r1, r6, #4
    7a54:	adds	r3, r3, #2
    7a58:	add	r6, r6, #8
    7a5c:	add	r2, r2, #4
    7a60:	vmovl.s16	q0, d16
    7a64:	vcvt.f64.s32	d17, s1
    7a68:	vcvt.f64.s32	d16, s0
    7a6c:	vst1.64	{d16-d17}, [r7], r4
    7a70:	vld1.32	{d16[0]}, [r1 :32]
    7a74:	add	r1, r9, #16
    7a78:	mov	r9, r7
    7a7c:	vmovl.s16	q0, d16
    7a80:	vcvt.f64.s32	d17, s1
    7a84:	vcvt.f64.s32	d16, s0
    7a88:	vst1.64	{d16-d17}, [r1]
    7a8c:	bne	7a4c <ReadCompressedDoubleData+0x1450>
    7a90:	b	8958 <ReadCompressedDoubleData+0x235c>
    7a94:	sub	r8, sl, #512	; 0x200
    7a98:	mov	sl, r4
    7a9c:	add	r0, r4, #4096	; 0x1000
    7aa0:	lsl	r7, r3, #9
    7aa4:	mov	r5, #0
    7aa8:	mov	r1, #512	; 0x200
    7aac:	add	r6, sp, #32
    7ab0:	mov	r4, #32
    7ab4:	str	r3, [sp, #12]
    7ab8:	str	sl, [sp, #4]
    7abc:	str	r1, [sp, #20]
    7ac0:	mov	r9, r0
    7ac4:	ldr	r0, [sp, #28]
    7ac8:	ldr	r1, [sp, #24]
    7acc:	mov	r2, r6
    7ad0:	mov	r3, r7
    7ad4:	bl	34ac <InflateData>
    7ad8:	mov	r2, sl
    7adc:	mov	r0, #0
    7ae0:	mov	r1, sl
    7ae4:	add	r3, r6, r0
    7ae8:	add	r0, r0, #8
    7aec:	add	r2, r2, #16
    7af0:	vld1.32	{d16[0]}, [r3 :32]
    7af4:	add	r3, r3, #4
    7af8:	cmp	r0, #1024	; 0x400
    7afc:	vmovl.u16	q0, d16
    7b00:	vcvt.f64.u32	d17, s1
    7b04:	vcvt.f64.u32	d16, s0
    7b08:	vst1.64	{d16-d17}, [r1], r4
    7b0c:	vld1.32	{d16[0]}, [r3 :32]
    7b10:	vmovl.u16	q0, d16
    7b14:	vcvt.f64.u32	d17, s1
    7b18:	vcvt.f64.u32	d16, s0
    7b1c:	vst1.64	{d16-d17}, [r2]
    7b20:	mov	r2, r1
    7b24:	bne	7ae4 <ReadCompressedDoubleData+0x14e8>
    7b28:	ldr	r1, [sp, #20]
    7b2c:	mov	r2, r5
    7b30:	add	r5, r5, #512	; 0x200
    7b34:	add	sl, sl, #4096	; 0x1000
    7b38:	add	r0, r9, #4096	; 0x1000
    7b3c:	cmp	r5, r8
    7b40:	add	r1, r1, #512	; 0x200
    7b44:	blt	7abc <ReadCompressedDoubleData+0x14c0>
    7b48:	ldr	sl, [fp, #8]
    7b4c:	ldr	r0, [sp, #12]
    7b50:	ldr	r1, [sp, #24]
    7b54:	add	r6, sp, #32
    7b58:	str	r2, [sp, #16]
    7b5c:	mov	r2, r6
    7b60:	sub	r8, sl, r5
    7b64:	mov	r4, sl
    7b68:	mul	r3, r8, r0
    7b6c:	ldr	r0, [sp, #28]
    7b70:	mov	sl, r3
    7b74:	bl	34ac <InflateData>
    7b78:	cmp	r8, #1
    7b7c:	blt	8bd4 <ReadCompressedDoubleData+0x25d8>
    7b80:	ldr	r3, [sp, #4]
    7b84:	mov	r0, #0
    7b88:	beq	8a18 <ReadCompressedDoubleData+0x241c>
    7b8c:	bic	r0, r8, #1
    7b90:	mov	r2, #1
    7b94:	subs	r1, r0, #2
    7b98:	add	r1, r2, r1, lsr #1
    7b9c:	and	ip, r1, #1
    7ba0:	beq	89d4 <ReadCompressedDoubleData+0x23d8>
    7ba4:	ldr	r1, [sp, #16]
    7ba8:	mov	lr, r4
    7bac:	sub	r3, r4, r1
    7bb0:	mov	r4, #32
    7bb4:	sub	r3, r3, #512	; 0x200
    7bb8:	bic	r3, r3, #1
    7bbc:	sub	r3, r3, #2
    7bc0:	add	r2, r2, r3, lsr #1
    7bc4:	mvn	r7, r3, lsr #1
    7bc8:	and	r2, r2, #1
    7bcc:	add	r3, r7, r2
    7bd0:	mov	r2, #0
    7bd4:	mov	r7, r9
    7bd8:	vld1.32	{d16[0]}, [r6 :32]
    7bdc:	add	r1, r6, #4
    7be0:	adds	r3, r3, #2
    7be4:	add	r6, r6, #8
    7be8:	add	r2, r2, #4
    7bec:	vmovl.u16	q0, d16
    7bf0:	vcvt.f64.u32	d17, s1
    7bf4:	vcvt.f64.u32	d16, s0
    7bf8:	vst1.64	{d16-d17}, [r7], r4
    7bfc:	vld1.32	{d16[0]}, [r1 :32]
    7c00:	add	r1, r9, #16
    7c04:	mov	r9, r7
    7c08:	vmovl.u16	q0, d16
    7c0c:	vcvt.f64.u32	d17, s1
    7c10:	vcvt.f64.u32	d16, s0
    7c14:	vst1.64	{d16-d17}, [r1]
    7c18:	bne	7bd8 <ReadCompressedDoubleData+0x15dc>
    7c1c:	b	89dc <ReadCompressedDoubleData+0x23e0>
    7c20:	mov	r2, r4
    7c24:	add	r0, r4, #2048	; 0x800
    7c28:	sub	r4, sl, #256	; 0x100
    7c2c:	lsl	r7, r3, #8
    7c30:	mov	r5, #0
    7c34:	mov	r1, #256	; 0x100
    7c38:	add	r6, sp, #32
    7c3c:	mov	r8, #32
    7c40:	str	r3, [sp, #12]
    7c44:	mov	sl, r2
    7c48:	str	r2, [sp, #4]
    7c4c:	str	r1, [sp, #20]
    7c50:	mov	r9, r0
    7c54:	ldr	r0, [sp, #28]
    7c58:	ldr	r1, [sp, #24]
    7c5c:	mov	r2, r6
    7c60:	mov	r3, r7
    7c64:	bl	34ac <InflateData>
    7c68:	mov	r2, sl
    7c6c:	mov	r0, #0
    7c70:	mov	r1, sl
    7c74:	add	r3, r6, r0
    7c78:	add	r0, r0, #16
    7c7c:	add	r2, r2, #16
    7c80:	vld1.32	{d0}, [r3 :64]!
    7c84:	cmp	r0, #1024	; 0x400
    7c88:	vcvt.f64.s32	d17, s1
    7c8c:	vcvt.f64.s32	d16, s0
    7c90:	vst1.64	{d16-d17}, [r1], r8
    7c94:	vldr	d0, [r3]
    7c98:	vcvt.f64.s32	d17, s1
    7c9c:	vcvt.f64.s32	d16, s0
    7ca0:	vst1.64	{d16-d17}, [r2]
    7ca4:	mov	r2, r1
    7ca8:	bne	7c74 <ReadCompressedDoubleData+0x1678>
    7cac:	ldr	r1, [sp, #20]
    7cb0:	mov	r2, r5
    7cb4:	add	r5, r5, #256	; 0x100
    7cb8:	add	sl, sl, #2048	; 0x800
    7cbc:	add	r0, r9, #2048	; 0x800
    7cc0:	cmp	r5, r4
    7cc4:	add	r1, r1, #256	; 0x100
    7cc8:	blt	7c4c <ReadCompressedDoubleData+0x1650>
    7ccc:	ldr	sl, [fp, #8]
    7cd0:	ldr	r0, [sp, #12]
    7cd4:	ldr	r1, [sp, #24]
    7cd8:	add	r4, sp, #32
    7cdc:	str	r2, [sp, #16]
    7ce0:	mov	r2, r4
    7ce4:	sub	r8, sl, r5
    7ce8:	mov	r6, sl
    7cec:	mul	r3, r8, r0
    7cf0:	ldr	r0, [sp, #28]
    7cf4:	mov	sl, r3
    7cf8:	bl	34ac <InflateData>
    7cfc:	cmp	r8, #1
    7d00:	blt	8bd4 <ReadCompressedDoubleData+0x25d8>
    7d04:	mov	lr, #0
    7d08:	beq	8a94 <ReadCompressedDoubleData+0x2498>
    7d0c:	bic	lr, r8, #1
    7d10:	mov	r0, #1
    7d14:	subs	r1, lr, #2
    7d18:	add	r1, r0, r1, lsr #1
    7d1c:	and	ip, r1, #1
    7d20:	beq	8a58 <ReadCompressedDoubleData+0x245c>
    7d24:	ldr	r1, [sp, #16]
    7d28:	mov	r7, r9
    7d2c:	sub	r1, r6, r1
    7d30:	mov	r6, r4
    7d34:	sub	r1, r1, #256	; 0x100
    7d38:	bic	r1, r1, #1
    7d3c:	sub	r1, r1, #2
    7d40:	add	r0, r0, r1, lsr #1
    7d44:	mvn	r2, r1, lsr #1
    7d48:	mov	r1, #32
    7d4c:	and	r0, r0, #1
    7d50:	add	r3, r2, r0
    7d54:	mov	r2, #0
    7d58:	mov	r0, #16
    7d5c:	vld1.32	{d0}, [r6 :64], r0
    7d60:	adds	r3, r3, #2
    7d64:	add	r2, r2, #4
    7d68:	vcvt.f64.s32	d17, s1
    7d6c:	vcvt.f64.s32	d16, s0
    7d70:	vst1.64	{d16-d17}, [r7], r1
    7d74:	vldr	d0, [r4, #8]
    7d78:	add	r4, r9, #16
    7d7c:	mov	r9, r7
    7d80:	vcvt.f64.s32	d17, s1
    7d84:	vcvt.f64.s32	d16, s0
    7d88:	vst1.64	{d16-d17}, [r4]
    7d8c:	mov	r4, r6
    7d90:	bne	7d5c <ReadCompressedDoubleData+0x1760>
    7d94:	b	8a5c <ReadCompressedDoubleData+0x2460>
    7d98:	mov	r2, r4
    7d9c:	add	r0, r4, #2048	; 0x800
    7da0:	sub	r4, sl, #256	; 0x100
    7da4:	lsl	r7, r3, #8
    7da8:	mov	r5, #0
    7dac:	mov	r1, #256	; 0x100
    7db0:	add	r6, sp, #32
    7db4:	mov	r8, #32
    7db8:	str	r3, [sp, #12]
    7dbc:	mov	sl, r2
    7dc0:	str	r2, [sp, #4]
    7dc4:	str	r1, [sp, #20]
    7dc8:	mov	r9, r0
    7dcc:	ldr	r0, [sp, #28]
    7dd0:	ldr	r1, [sp, #24]
    7dd4:	mov	r2, r6
    7dd8:	mov	r3, r7
    7ddc:	bl	34ac <InflateData>
    7de0:	mov	r2, sl
    7de4:	mov	r0, #0
    7de8:	mov	r1, sl
    7dec:	add	r3, r6, r0
    7df0:	add	r0, r0, #16
    7df4:	add	r2, r2, #16
    7df8:	vld1.32	{d0}, [r3 :64]!
    7dfc:	cmp	r0, #1024	; 0x400
    7e00:	vcvt.f64.u32	d17, s1
    7e04:	vcvt.f64.u32	d16, s0
    7e08:	vst1.64	{d16-d17}, [r1], r8
    7e0c:	vldr	d0, [r3]
    7e10:	vcvt.f64.u32	d17, s1
    7e14:	vcvt.f64.u32	d16, s0
    7e18:	vst1.64	{d16-d17}, [r2]
    7e1c:	mov	r2, r1
    7e20:	bne	7dec <ReadCompressedDoubleData+0x17f0>
    7e24:	ldr	r1, [sp, #20]
    7e28:	mov	r2, r5
    7e2c:	add	r5, r5, #256	; 0x100
    7e30:	add	sl, sl, #2048	; 0x800
    7e34:	add	r0, r9, #2048	; 0x800
    7e38:	cmp	r5, r4
    7e3c:	add	r1, r1, #256	; 0x100
    7e40:	blt	7dc4 <ReadCompressedDoubleData+0x17c8>
    7e44:	ldr	sl, [fp, #8]
    7e48:	ldr	r0, [sp, #12]
    7e4c:	ldr	r1, [sp, #24]
    7e50:	add	r4, sp, #32
    7e54:	str	r2, [sp, #16]
    7e58:	mov	r2, r4
    7e5c:	sub	r8, sl, r5
    7e60:	mov	r6, sl
    7e64:	mul	r3, r8, r0
    7e68:	ldr	r0, [sp, #28]
    7e6c:	mov	sl, r3
    7e70:	bl	34ac <InflateData>
    7e74:	cmp	r8, #1
    7e78:	blt	8bd4 <ReadCompressedDoubleData+0x25d8>
    7e7c:	mov	lr, #0
    7e80:	beq	8b14 <ReadCompressedDoubleData+0x2518>
    7e84:	bic	lr, r8, #1
    7e88:	mov	r0, #1
    7e8c:	subs	r1, lr, #2
    7e90:	add	r1, r0, r1, lsr #1
    7e94:	and	ip, r1, #1
    7e98:	beq	8ad8 <ReadCompressedDoubleData+0x24dc>
    7e9c:	ldr	r1, [sp, #16]
    7ea0:	mov	r7, r9
    7ea4:	sub	r1, r6, r1
    7ea8:	mov	r6, r4
    7eac:	sub	r1, r1, #256	; 0x100
    7eb0:	bic	r1, r1, #1
    7eb4:	sub	r1, r1, #2
    7eb8:	add	r0, r0, r1, lsr #1
    7ebc:	mvn	r2, r1, lsr #1
    7ec0:	mov	r1, #32
    7ec4:	and	r0, r0, #1
    7ec8:	add	r3, r2, r0
    7ecc:	mov	r2, #0
    7ed0:	mov	r0, #16
    7ed4:	vld1.32	{d0}, [r6 :64], r0
    7ed8:	adds	r3, r3, #2
    7edc:	add	r2, r2, #4
    7ee0:	vcvt.f64.u32	d17, s1
    7ee4:	vcvt.f64.u32	d16, s0
    7ee8:	vst1.64	{d16-d17}, [r7], r1
    7eec:	vldr	d0, [r4, #8]
    7ef0:	add	r4, r9, #16
    7ef4:	mov	r9, r7
    7ef8:	vcvt.f64.u32	d17, s1
    7efc:	vcvt.f64.u32	d16, s0
    7f00:	vst1.64	{d16-d17}, [r4]
    7f04:	mov	r4, r6
    7f08:	bne	7ed4 <ReadCompressedDoubleData+0x18d8>
    7f0c:	b	8adc <ReadCompressedDoubleData+0x24e0>
    7f10:	mov	r2, r4
    7f14:	add	r0, r4, #2048	; 0x800
    7f18:	sub	r4, sl, #256	; 0x100
    7f1c:	lsl	r9, r3, #8
    7f20:	mov	r5, #0
    7f24:	mov	r1, #256	; 0x100
    7f28:	add	r6, sp, #32
    7f2c:	mov	r8, #32
    7f30:	str	r3, [sp, #12]
    7f34:	mov	sl, r2
    7f38:	str	r2, [sp, #4]
    7f3c:	str	r1, [sp, #20]
    7f40:	mov	r7, r0
    7f44:	ldr	r0, [sp, #28]
    7f48:	ldr	r1, [sp, #24]
    7f4c:	mov	r2, r6
    7f50:	mov	r3, r9
    7f54:	bl	34ac <InflateData>
    7f58:	mov	r0, sl
    7f5c:	mov	r1, #0
    7f60:	add	r2, r6, r1
    7f64:	add	r3, r0, #16
    7f68:	add	r1, r1, #16
    7f6c:	vld1.32	{d0}, [r2 :64]!
    7f70:	cmp	r1, #1024	; 0x400
    7f74:	vcvt.f64.f32	d17, s1
    7f78:	vcvt.f64.f32	d16, s0
    7f7c:	vst1.64	{d16-d17}, [r0], r8
    7f80:	vldr	d0, [r2]
    7f84:	vcvt.f64.f32	d17, s1
    7f88:	vcvt.f64.f32	d16, s0
    7f8c:	vst1.64	{d16-d17}, [r3]
    7f90:	bne	7f60 <ReadCompressedDoubleData+0x1964>
    7f94:	ldr	r1, [sp, #20]
    7f98:	mov	r2, r5
    7f9c:	add	r5, r5, #256	; 0x100
    7fa0:	add	sl, sl, #2048	; 0x800
    7fa4:	add	r0, r7, #2048	; 0x800
    7fa8:	cmp	r5, r4
    7fac:	add	r1, r1, #256	; 0x100
    7fb0:	blt	7f3c <ReadCompressedDoubleData+0x1940>
    7fb4:	ldr	sl, [fp, #8]
    7fb8:	ldr	r0, [sp, #12]
    7fbc:	ldr	r1, [sp, #24]
    7fc0:	add	r4, sp, #32
    7fc4:	str	r2, [sp, #16]
    7fc8:	mov	r2, r4
    7fcc:	sub	r9, sl, r5
    7fd0:	mov	r6, sl
    7fd4:	mul	r3, r9, r0
    7fd8:	ldr	r0, [sp, #28]
    7fdc:	mov	sl, r3
    7fe0:	bl	34ac <InflateData>
    7fe4:	cmp	r9, #1
    7fe8:	blt	8bd4 <ReadCompressedDoubleData+0x25d8>
    7fec:	mov	lr, #0
    7ff0:	beq	8b94 <ReadCompressedDoubleData+0x2598>
    7ff4:	bic	lr, r9, #1
    7ff8:	mov	r0, #1
    7ffc:	subs	r1, lr, #2
    8000:	add	r1, r0, r1, lsr #1
    8004:	and	ip, r1, #1
    8008:	beq	8b58 <ReadCompressedDoubleData+0x255c>
    800c:	ldr	r1, [sp, #16]
    8010:	mov	r8, #16
    8014:	sub	r1, r6, r1
    8018:	mov	r6, r4
    801c:	sub	r1, r1, #256	; 0x100
    8020:	bic	r1, r1, #1
    8024:	sub	r1, r1, #2
    8028:	add	r0, r0, r1, lsr #1
    802c:	mvn	r2, r1, lsr #1
    8030:	mov	r1, #32
    8034:	and	r0, r0, #1
    8038:	add	r3, r2, r0
    803c:	mov	r2, #0
    8040:	vld1.32	{d0}, [r6 :64], r8
    8044:	add	r0, r7, #16
    8048:	adds	r3, r3, #2
    804c:	add	r2, r2, #4
    8050:	vcvt.f64.f32	d17, s1
    8054:	vcvt.f64.f32	d16, s0
    8058:	vst1.64	{d16-d17}, [r7], r1
    805c:	vldr	d0, [r4, #8]
    8060:	mov	r4, r6
    8064:	vcvt.f64.f32	d17, s1
    8068:	vcvt.f64.f32	d16, s0
    806c:	vst1.64	{d16-d17}, [r0]
    8070:	bne	8040 <ReadCompressedDoubleData+0x1a44>
    8074:	b	8b5c <ReadCompressedDoubleData+0x2560>
    8078:	mov	r1, sl
    807c:	add	r0, r4, #1024	; 0x400
    8080:	lsl	sl, r3, #7
    8084:	mov	r7, #0
    8088:	add	r5, sp, #32
    808c:	str	r3, [sp, #12]
    8090:	str	r4, [sp, #4]
    8094:	sub	r1, r1, #128	; 0x80
    8098:	str	r1, [sp, #8]
    809c:	mov	r1, #128	; 0x80
    80a0:	str	r1, [sp, #20]
    80a4:	mov	r8, r0
    80a8:	ldr	r0, [sp, #28]
    80ac:	ldr	r1, [sp, #24]
    80b0:	mov	r2, r5
    80b4:	mov	r3, sl
    80b8:	str	r7, [sp, #16]
    80bc:	bl	34ac <InflateData>
    80c0:	mov	r7, #0
    80c4:	add	r6, r5, r7
    80c8:	vld1.64	{d8-d9}, [r6]!
    80cc:	vmov.32	r0, d9[0]
    80d0:	vmov.32	r1, d9[1]
    80d4:	bl	71540 <__aeabi_l2d>
    80d8:	vmov.32	r2, d8[0]
    80dc:	vmov.32	r3, d8[1]
    80e0:	vmov	d9, r0, r1
    80e4:	mov	r0, r2
    80e8:	mov	r1, r3
    80ec:	bl	71540 <__aeabi_l2d>
    80f0:	vmov	d8, r0, r1
    80f4:	add	r9, r4, r7
    80f8:	vst1.64	{d8-d9}, [r9]!
    80fc:	vld1.64	{d8-d9}, [r6]
    8100:	vmov.32	r0, d9[0]
    8104:	vmov.32	r1, d9[1]
    8108:	bl	71540 <__aeabi_l2d>
    810c:	vmov.32	r2, d8[0]
    8110:	vmov.32	r3, d8[1]
    8114:	vmov	d9, r0, r1
    8118:	mov	r0, r2
    811c:	mov	r1, r3
    8120:	bl	71540 <__aeabi_l2d>
    8124:	vmov	d8, r0, r1
    8128:	add	r7, r7, #32
    812c:	cmp	r7, #1024	; 0x400
    8130:	vst1.64	{d8-d9}, [r9]
    8134:	bne	80c4 <ReadCompressedDoubleData+0x1ac8>
    8138:	ldr	r6, [sp, #16]
    813c:	ldr	r1, [sp, #20]
    8140:	ldr	r2, [sp, #8]
    8144:	add	r4, r4, #1024	; 0x400
    8148:	add	r0, r8, #1024	; 0x400
    814c:	add	r7, r6, #128	; 0x80
    8150:	add	r1, r1, #128	; 0x80
    8154:	cmp	r7, r2
    8158:	blt	80a0 <ReadCompressedDoubleData+0x1aa4>
    815c:	ldr	sl, [fp, #8]
    8160:	ldr	r0, [sp, #12]
    8164:	ldr	r1, [sp, #24]
    8168:	add	r5, sp, #32
    816c:	mov	r2, r5
    8170:	sub	r4, sl, r7
    8174:	mul	r9, r4, r0
    8178:	ldr	r0, [sp, #28]
    817c:	mov	r3, r9
    8180:	bl	34ac <InflateData>
    8184:	cmp	r4, #1
    8188:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    818c:	mov	r2, #0
    8190:	beq	8c5c <ReadCompressedDoubleData+0x2660>
    8194:	bic	r0, r4, #1
    8198:	str	r4, [sp, #28]
    819c:	str	r9, [sp, #12]
    81a0:	str	r0, [sp, #24]
    81a4:	subs	r1, r0, #2
    81a8:	mov	r0, #1
    81ac:	add	r1, r0, r1, lsr #1
    81b0:	and	r1, r1, #1
    81b4:	str	r1, [sp, #8]
    81b8:	beq	8bec <ReadCompressedDoubleData+0x25f0>
    81bc:	sub	r1, sl, r6
    81c0:	mov	sl, r5
    81c4:	mov	r5, #0
    81c8:	mov	r6, r8
    81cc:	sub	r1, r1, #128	; 0x80
    81d0:	mov	r4, sl
    81d4:	bic	r1, r1, #1
    81d8:	sub	r1, r1, #2
    81dc:	add	r0, r0, r1, lsr #1
    81e0:	mvn	r2, r1, lsr #1
    81e4:	and	r0, r0, #1
    81e8:	add	r9, r2, r0
    81ec:	mov	r0, #32
    81f0:	vld1.64	{d8-d9}, [r4], r0
    81f4:	vmov.32	r0, d9[0]
    81f8:	vmov.32	r1, d9[1]
    81fc:	bl	71540 <__aeabi_l2d>
    8200:	vmov.32	r2, d8[0]
    8204:	vmov.32	r3, d8[1]
    8208:	vmov	d9, r0, r1
    820c:	mov	r0, r2
    8210:	mov	r1, r3
    8214:	bl	71540 <__aeabi_l2d>
    8218:	vmov	d8, r0, r1
    821c:	mov	r0, #32
    8220:	vst1.64	{d8-d9}, [r6], r0
    8224:	add	r0, sl, #16
    8228:	vld1.64	{d8-d9}, [r0]
    822c:	vmov.32	r0, d9[0]
    8230:	vmov.32	r1, d9[1]
    8234:	bl	71540 <__aeabi_l2d>
    8238:	vmov.32	r2, d8[0]
    823c:	vmov.32	r3, d8[1]
    8240:	vmov	d9, r0, r1
    8244:	mov	r0, r2
    8248:	mov	r1, r3
    824c:	bl	71540 <__aeabi_l2d>
    8250:	vmov	d8, r0, r1
    8254:	add	r0, r8, #16
    8258:	adds	r9, r9, #2
    825c:	add	r5, r5, #4
    8260:	mov	r8, r6
    8264:	mov	sl, r4
    8268:	vst1.64	{d8-d9}, [r0]
    826c:	bne	81ec <ReadCompressedDoubleData+0x1bf0>
    8270:	b	8bf0 <ReadCompressedDoubleData+0x25f4>
    8274:	mov	r1, sl
    8278:	add	r0, r4, #1024	; 0x400
    827c:	lsl	sl, r3, #7
    8280:	mov	r7, #0
    8284:	add	r5, sp, #32
    8288:	str	r3, [sp, #12]
    828c:	str	r4, [sp, #4]
    8290:	sub	r1, r1, #128	; 0x80
    8294:	str	r1, [sp, #8]
    8298:	mov	r1, #128	; 0x80
    829c:	str	r1, [sp, #20]
    82a0:	mov	r8, r0
    82a4:	ldr	r0, [sp, #28]
    82a8:	ldr	r1, [sp, #24]
    82ac:	mov	r2, r5
    82b0:	mov	r3, sl
    82b4:	str	r7, [sp, #16]
    82b8:	bl	34ac <InflateData>
    82bc:	mov	r7, #0
    82c0:	add	r6, r5, r7
    82c4:	vld1.64	{d8-d9}, [r6]!
    82c8:	vmov.32	r0, d9[0]
    82cc:	vmov.32	r1, d9[1]
    82d0:	bl	7152c <__aeabi_ul2d>
    82d4:	vmov.32	r2, d8[0]
    82d8:	vmov.32	r3, d8[1]
    82dc:	vmov	d9, r0, r1
    82e0:	mov	r0, r2
    82e4:	mov	r1, r3
    82e8:	bl	7152c <__aeabi_ul2d>
    82ec:	vmov	d8, r0, r1
    82f0:	add	r9, r4, r7
    82f4:	vst1.64	{d8-d9}, [r9]!
    82f8:	vld1.64	{d8-d9}, [r6]
    82fc:	vmov.32	r0, d9[0]
    8300:	vmov.32	r1, d9[1]
    8304:	bl	7152c <__aeabi_ul2d>
    8308:	vmov.32	r2, d8[0]
    830c:	vmov.32	r3, d8[1]
    8310:	vmov	d9, r0, r1
    8314:	mov	r0, r2
    8318:	mov	r1, r3
    831c:	bl	7152c <__aeabi_ul2d>
    8320:	vmov	d8, r0, r1
    8324:	add	r7, r7, #32
    8328:	cmp	r7, #1024	; 0x400
    832c:	vst1.64	{d8-d9}, [r9]
    8330:	bne	82c0 <ReadCompressedDoubleData+0x1cc4>
    8334:	ldr	r6, [sp, #16]
    8338:	ldr	r1, [sp, #20]
    833c:	ldr	r2, [sp, #8]
    8340:	add	r4, r4, #1024	; 0x400
    8344:	add	r0, r8, #1024	; 0x400
    8348:	add	r7, r6, #128	; 0x80
    834c:	add	r1, r1, #128	; 0x80
    8350:	cmp	r7, r2
    8354:	blt	829c <ReadCompressedDoubleData+0x1ca0>
    8358:	ldr	sl, [fp, #8]
    835c:	ldr	r0, [sp, #12]
    8360:	ldr	r1, [sp, #24]
    8364:	add	r5, sp, #32
    8368:	mov	r2, r5
    836c:	sub	r4, sl, r7
    8370:	mul	r9, r4, r0
    8374:	ldr	r0, [sp, #28]
    8378:	mov	r3, r9
    837c:	bl	34ac <InflateData>
    8380:	cmp	r4, #1
    8384:	blt	8bd8 <ReadCompressedDoubleData+0x25dc>
    8388:	mov	r2, #0
    838c:	beq	8d10 <ReadCompressedDoubleData+0x2714>
    8390:	bic	r0, r4, #1
    8394:	str	r4, [sp, #28]
    8398:	str	r9, [sp, #12]
    839c:	str	r0, [sp, #24]
    83a0:	subs	r1, r0, #2
    83a4:	mov	r0, #1
    83a8:	add	r1, r0, r1, lsr #1
    83ac:	and	r1, r1, #1
    83b0:	str	r1, [sp, #8]
    83b4:	beq	8ca0 <ReadCompressedDoubleData+0x26a4>
    83b8:	sub	r1, sl, r6
    83bc:	mov	sl, r5
    83c0:	mov	r5, #0
    83c4:	mov	r6, r8
    83c8:	sub	r1, r1, #128	; 0x80
    83cc:	mov	r4, sl
    83d0:	bic	r1, r1, #1
    83d4:	sub	r1, r1, #2
    83d8:	add	r0, r0, r1, lsr #1
    83dc:	mvn	r2, r1, lsr #1
    83e0:	and	r0, r0, #1
    83e4:	add	r9, r2, r0
    83e8:	mov	r0, #32
    83ec:	vld1.64	{d8-d9}, [r4], r0
    83f0:	vmov.32	r0, d9[0]
    83f4:	vmov.32	r1, d9[1]
    83f8:	bl	7152c <__aeabi_ul2d>
    83fc:	vmov.32	r2, d8[0]
    8400:	vmov.32	r3, d8[1]
    8404:	vmov	d9, r0, r1
    8408:	mov	r0, r2
    840c:	mov	r1, r3
    8410:	bl	7152c <__aeabi_ul2d>
    8414:	vmov	d8, r0, r1
    8418:	mov	r0, #32
    841c:	vst1.64	{d8-d9}, [r6], r0
    8420:	add	r0, sl, #16
    8424:	vld1.64	{d8-d9}, [r0]
    8428:	vmov.32	r0, d9[0]
    842c:	vmov.32	r1, d9[1]
    8430:	bl	7152c <__aeabi_ul2d>
    8434:	vmov.32	r2, d8[0]
    8438:	vmov.32	r3, d8[1]
    843c:	vmov	d9, r0, r1
    8440:	mov	r0, r2
    8444:	mov	r1, r3
    8448:	bl	7152c <__aeabi_ul2d>
    844c:	vmov	d8, r0, r1
    8450:	add	r0, r8, #16
    8454:	adds	r9, r9, #2
    8458:	add	r5, r5, #4
    845c:	mov	r8, r6
    8460:	mov	sl, r4
    8464:	vst1.64	{d8-d9}, [r0]
    8468:	bne	83e8 <ReadCompressedDoubleData+0x1dec>
    846c:	b	8ca4 <ReadCompressedDoubleData+0x26a8>
    8470:	mov	lr, r4
    8474:	mov	r1, #0
    8478:	cmp	ip, #0
    847c:	mov	r4, lr
    8480:	beq	84a4 <ReadCompressedDoubleData+0x1ea8>
    8484:	add	r2, r5, r1
    8488:	add	r1, r4, r1, lsl #3
    848c:	vld1.16	{d16[0]}, [r2 :16]
    8490:	vmovl.s8	q8, d16
    8494:	vmovl.s16	q0, d16
    8498:	vcvt.f64.s32	d17, s1
    849c:	vcvt.f64.s32	d16, s0
    84a0:	vst1.64	{d16-d17}, [r1]
    84a4:	cmp	r0, sl
    84a8:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    84ac:	add	r2, r4, r0, lsl #3
    84b0:	add	r1, r5, r0
    84b4:	sub	r0, sl, r0
    84b8:	ldrsb	r3, [r1], #1
    84bc:	subs	r0, r0, #1
    84c0:	vmov	s0, r3
    84c4:	vcvt.f64.s32	d16, s0
    84c8:	vstmia	r2!, {d16}
    84cc:	bne	84b8 <ReadCompressedDoubleData+0x1ebc>
    84d0:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    84d4:	mov	lr, r4
    84d8:	mov	r1, #0
    84dc:	cmp	ip, #0
    84e0:	mov	r4, lr
    84e4:	beq	8508 <ReadCompressedDoubleData+0x1f0c>
    84e8:	add	r2, r5, r1
    84ec:	add	r1, r4, r1, lsl #3
    84f0:	vld1.16	{d16[0]}, [r2 :16]
    84f4:	vmovl.u8	q8, d16
    84f8:	vmovl.u16	q0, d16
    84fc:	vcvt.f64.u32	d17, s1
    8500:	vcvt.f64.u32	d16, s0
    8504:	vst1.64	{d16-d17}, [r1]
    8508:	cmp	r0, sl
    850c:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8510:	add	r2, r4, r0, lsl #3
    8514:	add	r1, r5, r0
    8518:	sub	r0, sl, r0
    851c:	ldrb	r3, [r1], #1
    8520:	subs	r0, r0, #1
    8524:	vmov	s0, r3
    8528:	vcvt.f64.u32	d16, s0
    852c:	vstmia	r2!, {d16}
    8530:	bne	851c <ReadCompressedDoubleData+0x1f20>
    8534:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    8538:	mov	r2, #0
    853c:	ldr	r3, [sp, #4]
    8540:	cmp	ip, #0
    8544:	beq	856c <ReadCompressedDoubleData+0x1f70>
    8548:	add	r1, r6, r2
    854c:	vld1.16	{d16[0]}, [r1 :16]
    8550:	add	r1, r2, r5
    8554:	add	r1, r3, r1, lsl #3
    8558:	vmovl.s8	q8, d16
    855c:	vmovl.s16	q0, d16
    8560:	vcvt.f64.s32	d17, s1
    8564:	vcvt.f64.s32	d16, s0
    8568:	vst1.64	{d16-d17}, [r1]
    856c:	cmp	r9, r0
    8570:	beq	85b0 <ReadCompressedDoubleData+0x1fb4>
    8574:	ldr	r2, [sp, #20]
    8578:	ldr	r7, [sp, #16]
    857c:	add	r1, r6, r0
    8580:	add	r2, r0, r2
    8584:	add	r2, r3, r2, lsl #3
    8588:	ldr	r3, [fp, #8]
    858c:	sub	r3, r3, r7
    8590:	sub	r0, r3, r0
    8594:	sub	r0, r0, #1024	; 0x400
    8598:	ldrsb	r3, [r1], #1
    859c:	subs	r0, r0, #1
    85a0:	vmov	s0, r3
    85a4:	vcvt.f64.s32	d16, s0
    85a8:	vstmia	r2!, {d16}
    85ac:	bne	8598 <ReadCompressedDoubleData+0x1f9c>
    85b0:	mov	r9, r8
    85b4:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    85b8:	mov	lr, r4
    85bc:	mov	r2, #0
    85c0:	ldr	r3, [sp, #4]
    85c4:	cmp	ip, #0
    85c8:	beq	85f0 <ReadCompressedDoubleData+0x1ff4>
    85cc:	add	r1, r6, r2
    85d0:	vld1.16	{d16[0]}, [r1 :16]
    85d4:	add	r1, r2, r8
    85d8:	add	r1, r3, r1, lsl #3
    85dc:	vmovl.u8	q8, d16
    85e0:	vmovl.u16	q0, d16
    85e4:	vcvt.f64.u32	d17, s1
    85e8:	vcvt.f64.u32	d16, s0
    85ec:	vst1.64	{d16-d17}, [r1]
    85f0:	cmp	r9, r0
    85f4:	mov	r4, lr
    85f8:	beq	8bd4 <ReadCompressedDoubleData+0x25d8>
    85fc:	ldr	r2, [sp, #20]
    8600:	add	r1, r6, r0
    8604:	add	r2, r0, r2
    8608:	add	r2, r3, r2, lsl #3
    860c:	ldr	r3, [sp, #16]
    8610:	sub	r3, r4, r3
    8614:	sub	r0, r3, r0
    8618:	sub	r0, r0, #1024	; 0x400
    861c:	ldrb	r3, [r1], #1
    8620:	subs	r0, r0, #1
    8624:	vmov	s0, r3
    8628:	vcvt.f64.u32	d16, s0
    862c:	vstmia	r2!, {d16}
    8630:	bne	861c <ReadCompressedDoubleData+0x2020>
    8634:	b	8bd4 <ReadCompressedDoubleData+0x25d8>
    8638:	mov	lr, r4
    863c:	mov	r1, #0
    8640:	cmp	ip, #0
    8644:	mov	r4, lr
    8648:	beq	866c <ReadCompressedDoubleData+0x2070>
    864c:	add	r2, sp, #32
    8650:	add	r2, r2, r1, lsl #1
    8654:	add	r1, r4, r1, lsl #3
    8658:	vld1.32	{d16[0]}, [r2 :32]
    865c:	vmovl.s16	q0, d16
    8660:	vcvt.f64.s32	d17, s1
    8664:	vcvt.f64.s32	d16, s0
    8668:	vst1.64	{d16-d17}, [r1]
    866c:	cmp	r0, sl
    8670:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8674:	add	r1, sp, #32
    8678:	add	r2, r4, r0, lsl #3
    867c:	add	r1, r1, r0, lsl #1
    8680:	sub	r0, sl, r0
    8684:	ldrsh	r3, [r1], #2
    8688:	subs	r0, r0, #1
    868c:	vmov	s0, r3
    8690:	vcvt.f64.s32	d16, s0
    8694:	vstmia	r2!, {d16}
    8698:	bne	8684 <ReadCompressedDoubleData+0x2088>
    869c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    86a0:	mov	lr, r4
    86a4:	mov	r1, #0
    86a8:	cmp	ip, #0
    86ac:	mov	r4, lr
    86b0:	beq	86d4 <ReadCompressedDoubleData+0x20d8>
    86b4:	add	r2, sp, #32
    86b8:	add	r2, r2, r1, lsl #1
    86bc:	add	r1, r4, r1, lsl #3
    86c0:	vld1.32	{d16[0]}, [r2 :32]
    86c4:	vmovl.u16	q0, d16
    86c8:	vcvt.f64.u32	d17, s1
    86cc:	vcvt.f64.u32	d16, s0
    86d0:	vst1.64	{d16-d17}, [r1]
    86d4:	cmp	r0, sl
    86d8:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    86dc:	add	r1, sp, #32
    86e0:	add	r2, r4, r0, lsl #3
    86e4:	add	r1, r1, r0, lsl #1
    86e8:	sub	r0, sl, r0
    86ec:	ldrh	r3, [r1], #2
    86f0:	subs	r0, r0, #1
    86f4:	vmov	s0, r3
    86f8:	vcvt.f64.u32	d16, s0
    86fc:	vstmia	r2!, {d16}
    8700:	bne	86ec <ReadCompressedDoubleData+0x20f0>
    8704:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    8708:	mov	r1, #0
    870c:	cmp	ip, #0
    8710:	beq	8730 <ReadCompressedDoubleData+0x2134>
    8714:	add	r0, sp, #32
    8718:	add	r0, r0, r1, lsl #2
    871c:	vldr	d0, [r0]
    8720:	add	r0, r8, r1, lsl #3
    8724:	vcvt.f64.s32	d17, s1
    8728:	vcvt.f64.s32	d16, s0
    872c:	vst1.64	{d16-d17}, [r0]
    8730:	cmp	lr, sl
    8734:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8738:	add	r0, sp, #32
    873c:	add	r1, r8, lr, lsl #3
    8740:	sub	r2, sl, lr
    8744:	add	r0, r0, lr, lsl #2
    8748:	ldr	r3, [r0], #4
    874c:	subs	r2, r2, #1
    8750:	vmov	s0, r3
    8754:	vcvt.f64.s32	d16, s0
    8758:	vstmia	r1!, {d16}
    875c:	bne	8748 <ReadCompressedDoubleData+0x214c>
    8760:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    8764:	mov	r1, #0
    8768:	cmp	ip, #0
    876c:	beq	878c <ReadCompressedDoubleData+0x2190>
    8770:	add	r0, sp, #32
    8774:	add	r0, r0, r1, lsl #2
    8778:	vldr	d0, [r0]
    877c:	add	r0, r8, r1, lsl #3
    8780:	vcvt.f64.u32	d17, s1
    8784:	vcvt.f64.u32	d16, s0
    8788:	vst1.64	{d16-d17}, [r0]
    878c:	cmp	lr, sl
    8790:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8794:	add	r0, sp, #32
    8798:	add	r1, r8, lr, lsl #3
    879c:	sub	r2, sl, lr
    87a0:	add	r0, r0, lr, lsl #2
    87a4:	ldr	r3, [r0], #4
    87a8:	subs	r2, r2, #1
    87ac:	vmov	s0, r3
    87b0:	vcvt.f64.u32	d16, s0
    87b4:	vstmia	r1!, {d16}
    87b8:	bne	87a4 <ReadCompressedDoubleData+0x21a8>
    87bc:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    87c0:	mov	r8, r4
    87c4:	mov	r1, #0
    87c8:	cmp	ip, #0
    87cc:	mov	r4, r8
    87d0:	beq	87f0 <ReadCompressedDoubleData+0x21f4>
    87d4:	add	r0, sp, #32
    87d8:	add	r0, r0, r1, lsl #2
    87dc:	vldr	d0, [r0]
    87e0:	add	r0, r4, r1, lsl #3
    87e4:	vcvt.f64.f32	d17, s1
    87e8:	vcvt.f64.f32	d16, s0
    87ec:	vst1.64	{d16-d17}, [r0]
    87f0:	cmp	lr, sl
    87f4:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    87f8:	add	r0, sp, #32
    87fc:	add	r2, r4, lr, lsl #3
    8800:	add	r1, r0, lr, lsl #2
    8804:	sub	r0, sl, lr
    8808:	vldr	s0, [r1]
    880c:	add	r1, r1, #4
    8810:	subs	r0, r0, #1
    8814:	vcvt.f64.f32	d16, s0
    8818:	vstr	d16, [r2]
    881c:	add	r2, r2, #8
    8820:	bne	8808 <ReadCompressedDoubleData+0x220c>
    8824:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    8828:	mov	r7, #0
    882c:	ldr	r0, [sp, #24]
    8830:	ldr	r9, [sp, #12]
    8834:	cmp	r0, #0
    8838:	beq	887c <ReadCompressedDoubleData+0x2280>
    883c:	add	r0, sp, #32
    8840:	add	r0, r0, r7, lsl #3
    8844:	vld1.64	{d8-d9}, [r0]
    8848:	vmov.32	r0, d9[0]
    884c:	vmov.32	r1, d9[1]
    8850:	bl	71540 <__aeabi_l2d>
    8854:	vmov.32	r2, d8[0]
    8858:	vmov.32	r3, d8[1]
    885c:	vmov	d9, r0, r1
    8860:	mov	r0, r2
    8864:	mov	r1, r3
    8868:	bl	71540 <__aeabi_l2d>
    886c:	vmov	d8, r0, r1
    8870:	ldr	r0, [sp, #4]
    8874:	add	r0, r0, r7, lsl #3
    8878:	vst1.64	{d8-d9}, [r0]
    887c:	ldr	r1, [sp, #28]
    8880:	cmp	r1, sl
    8884:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8888:	add	r0, sp, #32
    888c:	sub	r6, sl, r1
    8890:	add	r4, r0, r1, lsl #3
    8894:	ldr	r0, [sp, #4]
    8898:	add	r5, r0, r1, lsl #3
    889c:	ldrd	r0, [r4]
    88a0:	bl	71540 <__aeabi_l2d>
    88a4:	strd	r0, [r5]
    88a8:	add	r4, r4, #8
    88ac:	add	r5, r5, #8
    88b0:	subs	r6, r6, #1
    88b4:	bne	889c <ReadCompressedDoubleData+0x22a0>
    88b8:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    88bc:	mov	r7, #0
    88c0:	ldr	r0, [sp, #24]
    88c4:	ldr	r9, [sp, #12]
    88c8:	cmp	r0, #0
    88cc:	beq	8910 <ReadCompressedDoubleData+0x2314>
    88d0:	add	r0, sp, #32
    88d4:	add	r0, r0, r7, lsl #3
    88d8:	vld1.64	{d8-d9}, [r0]
    88dc:	vmov.32	r0, d9[0]
    88e0:	vmov.32	r1, d9[1]
    88e4:	bl	7152c <__aeabi_ul2d>
    88e8:	vmov.32	r2, d8[0]
    88ec:	vmov.32	r3, d8[1]
    88f0:	vmov	d9, r0, r1
    88f4:	mov	r0, r2
    88f8:	mov	r1, r3
    88fc:	bl	7152c <__aeabi_ul2d>
    8900:	vmov	d8, r0, r1
    8904:	ldr	r0, [sp, #4]
    8908:	add	r0, r0, r7, lsl #3
    890c:	vst1.64	{d8-d9}, [r0]
    8910:	ldr	r1, [sp, #28]
    8914:	cmp	r1, sl
    8918:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    891c:	add	r0, sp, #32
    8920:	sub	r6, sl, r1
    8924:	add	r4, r0, r1, lsl #3
    8928:	ldr	r0, [sp, #4]
    892c:	add	r5, r0, r1, lsl #3
    8930:	ldrd	r0, [r4]
    8934:	bl	7152c <__aeabi_ul2d>
    8938:	strd	r0, [r5]
    893c:	add	r4, r4, #8
    8940:	add	r5, r5, #8
    8944:	subs	r6, r6, #1
    8948:	bne	8930 <ReadCompressedDoubleData+0x2334>
    894c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    8950:	mov	lr, r4
    8954:	mov	r2, #0
    8958:	ldr	r3, [sp, #4]
    895c:	cmp	ip, #0
    8960:	beq	8988 <ReadCompressedDoubleData+0x238c>
    8964:	add	r1, sp, #32
    8968:	add	r1, r1, r2, lsl #1
    896c:	vld1.32	{d16[0]}, [r1 :32]
    8970:	add	r1, r2, r5
    8974:	add	r1, r3, r1, lsl #3
    8978:	vmovl.s16	q0, d16
    897c:	vcvt.f64.s32	d17, s1
    8980:	vcvt.f64.s32	d16, s0
    8984:	vst1.64	{d16-d17}, [r1]
    8988:	cmp	r8, r0
    898c:	mov	r4, lr
    8990:	beq	8bd4 <ReadCompressedDoubleData+0x25d8>
    8994:	ldr	r2, [sp, #20]
    8998:	add	r1, sp, #32
    899c:	add	r1, r1, r0, lsl #1
    89a0:	add	r2, r0, r2
    89a4:	add	r2, r3, r2, lsl #3
    89a8:	ldr	r3, [sp, #16]
    89ac:	sub	r3, r4, r3
    89b0:	sub	r0, r3, r0
    89b4:	sub	r0, r0, #512	; 0x200
    89b8:	ldrsh	r3, [r1], #2
    89bc:	subs	r0, r0, #1
    89c0:	vmov	s0, r3
    89c4:	vcvt.f64.s32	d16, s0
    89c8:	vstmia	r2!, {d16}
    89cc:	bne	89b8 <ReadCompressedDoubleData+0x23bc>
    89d0:	b	8bd4 <ReadCompressedDoubleData+0x25d8>
    89d4:	mov	lr, r4
    89d8:	mov	r2, #0
    89dc:	ldr	r3, [sp, #4]
    89e0:	cmp	ip, #0
    89e4:	beq	8a0c <ReadCompressedDoubleData+0x2410>
    89e8:	add	r1, sp, #32
    89ec:	add	r1, r1, r2, lsl #1
    89f0:	vld1.32	{d16[0]}, [r1 :32]
    89f4:	add	r1, r2, r5
    89f8:	add	r1, r3, r1, lsl #3
    89fc:	vmovl.u16	q0, d16
    8a00:	vcvt.f64.u32	d17, s1
    8a04:	vcvt.f64.u32	d16, s0
    8a08:	vst1.64	{d16-d17}, [r1]
    8a0c:	cmp	r8, r0
    8a10:	mov	r4, lr
    8a14:	beq	8bd4 <ReadCompressedDoubleData+0x25d8>
    8a18:	ldr	r2, [sp, #20]
    8a1c:	add	r1, sp, #32
    8a20:	add	r1, r1, r0, lsl #1
    8a24:	add	r2, r0, r2
    8a28:	add	r2, r3, r2, lsl #3
    8a2c:	ldr	r3, [sp, #16]
    8a30:	sub	r3, r4, r3
    8a34:	sub	r0, r3, r0
    8a38:	sub	r0, r0, #512	; 0x200
    8a3c:	ldrh	r3, [r1], #2
    8a40:	subs	r0, r0, #1
    8a44:	vmov	s0, r3
    8a48:	vcvt.f64.u32	d16, s0
    8a4c:	vstmia	r2!, {d16}
    8a50:	bne	8a3c <ReadCompressedDoubleData+0x2440>
    8a54:	b	8bd4 <ReadCompressedDoubleData+0x25d8>
    8a58:	mov	r2, #0
    8a5c:	cmp	ip, #0
    8a60:	beq	8a88 <ReadCompressedDoubleData+0x248c>
    8a64:	add	r0, sp, #32
    8a68:	add	r0, r0, r2, lsl #2
    8a6c:	vldr	d0, [r0]
    8a70:	add	r0, r2, r5
    8a74:	vcvt.f64.s32	d17, s1
    8a78:	vcvt.f64.s32	d16, s0
    8a7c:	ldr	r1, [sp, #4]
    8a80:	add	r0, r1, r0, lsl #3
    8a84:	vst1.64	{d16-d17}, [r0]
    8a88:	ldr	r6, [fp, #8]
    8a8c:	cmp	r8, lr
    8a90:	beq	8bd4 <ReadCompressedDoubleData+0x25d8>
    8a94:	ldr	r1, [sp, #20]
    8a98:	ldr	r2, [sp, #4]
    8a9c:	add	r0, sp, #32
    8aa0:	add	r0, r0, lr, lsl #2
    8aa4:	add	r1, lr, r1
    8aa8:	add	r1, r2, r1, lsl #3
    8aac:	ldr	r2, [sp, #16]
    8ab0:	sub	r2, r6, r2
    8ab4:	sub	r2, r2, lr
    8ab8:	sub	r2, r2, #256	; 0x100
    8abc:	ldr	r3, [r0], #4
    8ac0:	subs	r2, r2, #1
    8ac4:	vmov	s0, r3
    8ac8:	vcvt.f64.s32	d16, s0
    8acc:	vstmia	r1!, {d16}
    8ad0:	bne	8abc <ReadCompressedDoubleData+0x24c0>
    8ad4:	b	8bd4 <ReadCompressedDoubleData+0x25d8>
    8ad8:	mov	r2, #0
    8adc:	cmp	ip, #0
    8ae0:	beq	8b08 <ReadCompressedDoubleData+0x250c>
    8ae4:	add	r0, sp, #32
    8ae8:	add	r0, r0, r2, lsl #2
    8aec:	vldr	d0, [r0]
    8af0:	add	r0, r2, r5
    8af4:	vcvt.f64.u32	d17, s1
    8af8:	vcvt.f64.u32	d16, s0
    8afc:	ldr	r1, [sp, #4]
    8b00:	add	r0, r1, r0, lsl #3
    8b04:	vst1.64	{d16-d17}, [r0]
    8b08:	ldr	r6, [fp, #8]
    8b0c:	cmp	r8, lr
    8b10:	beq	8bd4 <ReadCompressedDoubleData+0x25d8>
    8b14:	ldr	r1, [sp, #20]
    8b18:	ldr	r2, [sp, #4]
    8b1c:	add	r0, sp, #32
    8b20:	add	r0, r0, lr, lsl #2
    8b24:	add	r1, lr, r1
    8b28:	add	r1, r2, r1, lsl #3
    8b2c:	ldr	r2, [sp, #16]
    8b30:	sub	r2, r6, r2
    8b34:	sub	r2, r2, lr
    8b38:	sub	r2, r2, #256	; 0x100
    8b3c:	ldr	r3, [r0], #4
    8b40:	subs	r2, r2, #1
    8b44:	vmov	s0, r3
    8b48:	vcvt.f64.u32	d16, s0
    8b4c:	vstmia	r1!, {d16}
    8b50:	bne	8b3c <ReadCompressedDoubleData+0x2540>
    8b54:	b	8bd4 <ReadCompressedDoubleData+0x25d8>
    8b58:	mov	r2, #0
    8b5c:	cmp	ip, #0
    8b60:	beq	8b88 <ReadCompressedDoubleData+0x258c>
    8b64:	add	r0, sp, #32
    8b68:	ldr	r1, [sp, #4]
    8b6c:	add	r0, r0, r2, lsl #2
    8b70:	vldr	d0, [r0]
    8b74:	add	r0, r2, r5
    8b78:	add	r0, r1, r0, lsl #3
    8b7c:	vcvt.f64.f32	d17, s1
    8b80:	vcvt.f64.f32	d16, s0
    8b84:	vst1.64	{d16-d17}, [r0]
    8b88:	ldr	r6, [fp, #8]
    8b8c:	cmp	r9, lr
    8b90:	beq	8bd4 <ReadCompressedDoubleData+0x25d8>
    8b94:	ldr	r1, [sp, #20]
    8b98:	ldr	r2, [sp, #4]
    8b9c:	add	r0, sp, #32
    8ba0:	add	r0, r0, lr, lsl #2
    8ba4:	add	r1, lr, r1
    8ba8:	add	r1, r2, r1, lsl #3
    8bac:	ldr	r2, [sp, #16]
    8bb0:	sub	r2, r6, r2
    8bb4:	sub	r2, r2, lr
    8bb8:	sub	r2, r2, #256	; 0x100
    8bbc:	vldr	s0, [r0]
    8bc0:	add	r0, r0, #4
    8bc4:	subs	r2, r2, #1
    8bc8:	vcvt.f64.f32	d16, s0
    8bcc:	vstmia	r1!, {d16}
    8bd0:	bne	8bbc <ReadCompressedDoubleData+0x25c0>
    8bd4:	mov	r9, sl
    8bd8:	mov	r0, r9
    8bdc:	sub	sp, fp, #48	; 0x30
    8be0:	vpop	{d8-d9}
    8be4:	add	sp, sp, #4
    8be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8bec:	mov	r5, #0
    8bf0:	ldr	r0, [sp, #8]
    8bf4:	ldr	r9, [sp, #12]
    8bf8:	cmp	r0, #0
    8bfc:	beq	8c44 <ReadCompressedDoubleData+0x2648>
    8c00:	add	r0, sp, #32
    8c04:	add	r0, r0, r5, lsl #3
    8c08:	vld1.64	{d8-d9}, [r0]
    8c0c:	vmov.32	r0, d9[0]
    8c10:	vmov.32	r1, d9[1]
    8c14:	bl	71540 <__aeabi_l2d>
    8c18:	vmov.32	r2, d8[0]
    8c1c:	vmov.32	r3, d8[1]
    8c20:	vmov	d9, r0, r1
    8c24:	add	r4, r5, r7
    8c28:	mov	r0, r2
    8c2c:	mov	r1, r3
    8c30:	bl	71540 <__aeabi_l2d>
    8c34:	vmov	d8, r0, r1
    8c38:	ldr	r0, [sp, #4]
    8c3c:	add	r0, r0, r4, lsl #3
    8c40:	vst1.64	{d8-d9}, [r0]
    8c44:	ldr	r0, [sp, #28]
    8c48:	ldr	r2, [sp, #24]
    8c4c:	ldr	r6, [sp, #16]
    8c50:	ldr	sl, [fp, #8]
    8c54:	cmp	r0, r2
    8c58:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8c5c:	add	r0, sp, #32
    8c60:	ldr	r1, [sp, #4]
    8c64:	add	r4, r0, r2, lsl #3
    8c68:	ldr	r0, [sp, #20]
    8c6c:	add	r0, r2, r0
    8c70:	add	r5, r1, r0, lsl #3
    8c74:	sub	r0, sl, r6
    8c78:	sub	r0, r0, r2
    8c7c:	sub	r6, r0, #128	; 0x80
    8c80:	ldrd	r0, [r4]
    8c84:	bl	71540 <__aeabi_l2d>
    8c88:	strd	r0, [r5]
    8c8c:	add	r5, r5, #8
    8c90:	add	r4, r4, #8
    8c94:	subs	r6, r6, #1
    8c98:	bne	8c80 <ReadCompressedDoubleData+0x2684>
    8c9c:	b	8bd8 <ReadCompressedDoubleData+0x25dc>
    8ca0:	mov	r5, #0
    8ca4:	ldr	r0, [sp, #8]
    8ca8:	ldr	r9, [sp, #12]
    8cac:	cmp	r0, #0
    8cb0:	beq	8cf8 <ReadCompressedDoubleData+0x26fc>
    8cb4:	add	r0, sp, #32
    8cb8:	add	r0, r0, r5, lsl #3
    8cbc:	vld1.64	{d8-d9}, [r0]
    8cc0:	vmov.32	r0, d9[0]
    8cc4:	vmov.32	r1, d9[1]
    8cc8:	bl	7152c <__aeabi_ul2d>
    8ccc:	vmov.32	r2, d8[0]
    8cd0:	vmov.32	r3, d8[1]
    8cd4:	vmov	d9, r0, r1
    8cd8:	add	r4, r5, r7
    8cdc:	mov	r0, r2
    8ce0:	mov	r1, r3
    8ce4:	bl	7152c <__aeabi_ul2d>
    8ce8:	vmov	d8, r0, r1
    8cec:	ldr	r0, [sp, #4]
    8cf0:	add	r0, r0, r4, lsl #3
    8cf4:	vst1.64	{d8-d9}, [r0]
    8cf8:	ldr	r0, [sp, #28]
    8cfc:	ldr	r2, [sp, #24]
    8d00:	ldr	r6, [sp, #16]
    8d04:	ldr	sl, [fp, #8]
    8d08:	cmp	r0, r2
    8d0c:	beq	8bd8 <ReadCompressedDoubleData+0x25dc>
    8d10:	add	r0, sp, #32
    8d14:	ldr	r1, [sp, #4]
    8d18:	add	r4, r0, r2, lsl #3
    8d1c:	ldr	r0, [sp, #20]
    8d20:	add	r0, r2, r0
    8d24:	add	r5, r1, r0, lsl #3
    8d28:	sub	r0, sl, r6
    8d2c:	sub	r0, r0, r2
    8d30:	sub	r6, r0, #128	; 0x80
    8d34:	ldrd	r0, [r4]
    8d38:	bl	7152c <__aeabi_ul2d>
    8d3c:	strd	r0, [r5]
    8d40:	add	r5, r5, #8
    8d44:	add	r4, r4, #8
    8d48:	subs	r6, r6, #1
    8d4c:	bne	8d34 <ReadCompressedDoubleData+0x2738>
    8d50:	b	8bd8 <ReadCompressedDoubleData+0x25dc>

00008d54 <ReadSingleData>:
    8d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d58:	add	fp, sp, #28
    8d5c:	sub	sp, sp, #4
    8d60:	vpush	{d8-d9}
    8d64:	sub	sp, sp, #200	; 0xc8
    8d68:	sub	sp, sp, #2048	; 0x800
    8d6c:	mov	r4, r0
    8d70:	mov	r0, #0
    8d74:	cmp	r4, #0
    8d78:	movne	r7, r1
    8d7c:	cmpne	r1, #0
    8d80:	bne	8d94 <ReadSingleData+0x40>
    8d84:	sub	sp, fp, #48	; 0x30
    8d88:	vpop	{d8-d9}
    8d8c:	add	sp, sp, #4
    8d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d94:	ldr	r1, [r4]
    8d98:	cmp	r1, #0
    8d9c:	beq	8d84 <ReadSingleData+0x30>
    8da0:	mov	r0, r2
    8da4:	mov	r5, r3
    8da8:	mov	r9, r2
    8dac:	bl	1924 <Mat_SizeOf@plt>
    8db0:	mov	sl, r0
    8db4:	sub	r0, r9, #1
    8db8:	mov	r8, #0
    8dbc:	str	r4, [sp, #44]	; 0x2c
    8dc0:	cmp	r0, #11
    8dc4:	str	sl, [sp, #40]	; 0x28
    8dc8:	bhi	b074 <ReadSingleData+0x2320>
    8dcc:	add	r1, pc, #4
    8dd0:	ldr	r0, [r1, r0, lsl #2]
    8dd4:	add	pc, r1, r0
    8dd8:	.word	0x00000030
    8ddc:	.word	0x000000f4
    8de0:	.word	0x000001b8
    8de4:	.word	0x00000218
    8de8:	.word	0x00000278
    8dec:	.word	0x000002d8
    8df0:	.word	0x00000338
    8df4:	.word	0x0000229c
    8df8:	.word	0x00000390
    8dfc:	.word	0x0000229c
    8e00:	.word	0x0000229c
    8e04:	.word	0x000003ec
    8e08:	cmp	r5, #256	; 0x100
    8e0c:	bgt	922c <ReadSingleData+0x4d8>
    8e10:	ldr	r3, [r4]
    8e14:	add	r4, sp, #192	; 0xc0
    8e18:	mov	r1, sl
    8e1c:	mov	r2, r5
    8e20:	mov	r0, r4
    8e24:	bl	18b8 <fread@plt>
    8e28:	mov	r8, r0
    8e2c:	cmp	r5, #1
    8e30:	blt	b77c <ReadSingleData+0x2a28>
    8e34:	mov	lr, #0
    8e38:	cmp	r5, #4
    8e3c:	bcc	abe0 <ReadSingleData+0x1e8c>
    8e40:	bic	lr, r5, #3
    8e44:	mov	r2, #1
    8e48:	str	r5, [sp, #20]
    8e4c:	str	r8, [sp, #36]	; 0x24
    8e50:	subs	r1, lr, #4
    8e54:	add	r1, r2, r1, lsr #2
    8e58:	and	ip, r1, #1
    8e5c:	beq	ab98 <ReadSingleData+0x1e44>
    8e60:	sub	r3, r1, ip
    8e64:	mov	r1, #0
    8e68:	add	r8, sp, #132	; 0x84
    8e6c:	mov	r6, #32
    8e70:	add	r5, sp, #136	; 0x88
    8e74:	mov	r9, r7
    8e78:	mov	r2, r7
    8e7c:	ldr	r0, [r4, r1]
    8e80:	add	r7, r4, r1
    8e84:	subs	r3, r3, #2
    8e88:	add	r1, r1, #8
    8e8c:	str	r0, [sp, #132]	; 0x84
    8e90:	add	r0, r2, #16
    8e94:	vld1.32	{d16[0]}, [r8 :32]
    8e98:	vmovl.s8	q8, d16
    8e9c:	vmovl.s16	q8, d16
    8ea0:	vcvt.f32.s32	q8, q8
    8ea4:	vst1.32	{d16-d17}, [r2], r6
    8ea8:	ldr	r7, [r7, #4]
    8eac:	str	r7, [sp, #136]	; 0x88
    8eb0:	vld1.32	{d16[0]}, [r5 :32]
    8eb4:	vmovl.s8	q8, d16
    8eb8:	vmovl.s16	q8, d16
    8ebc:	vcvt.f32.s32	q8, q8
    8ec0:	vst1.32	{d16-d17}, [r0]
    8ec4:	bne	8e7c <ReadSingleData+0x128>
    8ec8:	b	aba0 <ReadSingleData+0x1e4c>
    8ecc:	cmp	r5, #256	; 0x100
    8ed0:	bgt	93f4 <ReadSingleData+0x6a0>
    8ed4:	ldr	r3, [r4]
    8ed8:	add	r4, sp, #192	; 0xc0
    8edc:	mov	r1, sl
    8ee0:	mov	r2, r5
    8ee4:	mov	r0, r4
    8ee8:	bl	18b8 <fread@plt>
    8eec:	mov	r8, r0
    8ef0:	cmp	r5, #1
    8ef4:	blt	b77c <ReadSingleData+0x2a28>
    8ef8:	mov	lr, #0
    8efc:	cmp	r5, #4
    8f00:	bcc	ac50 <ReadSingleData+0x1efc>
    8f04:	bic	lr, r5, #3
    8f08:	mov	r2, #1
    8f0c:	str	r5, [sp, #20]
    8f10:	str	r8, [sp, #36]	; 0x24
    8f14:	subs	r1, lr, #4
    8f18:	add	r1, r2, r1, lsr #2
    8f1c:	and	ip, r1, #1
    8f20:	beq	ac08 <ReadSingleData+0x1eb4>
    8f24:	sub	r3, r1, ip
    8f28:	mov	r1, #0
    8f2c:	add	r8, sp, #164	; 0xa4
    8f30:	mov	r6, #32
    8f34:	add	r5, sp, #168	; 0xa8
    8f38:	mov	r9, r7
    8f3c:	mov	r2, r7
    8f40:	ldr	r0, [r4, r1]
    8f44:	add	r7, r4, r1
    8f48:	subs	r3, r3, #2
    8f4c:	add	r1, r1, #8
    8f50:	str	r0, [sp, #164]	; 0xa4
    8f54:	add	r0, r2, #16
    8f58:	vld1.32	{d16[0]}, [r8 :32]
    8f5c:	vmovl.u8	q8, d16
    8f60:	vmovl.u16	q8, d16
    8f64:	vcvt.f32.u32	q8, q8
    8f68:	vst1.32	{d16-d17}, [r2], r6
    8f6c:	ldr	r7, [r7, #4]
    8f70:	str	r7, [sp, #168]	; 0xa8
    8f74:	vld1.32	{d16[0]}, [r5 :32]
    8f78:	vmovl.u8	q8, d16
    8f7c:	vmovl.u16	q8, d16
    8f80:	vcvt.f32.u32	q8, q8
    8f84:	vst1.32	{d16-d17}, [r0]
    8f88:	bne	8f40 <ReadSingleData+0x1ec>
    8f8c:	b	ac10 <ReadSingleData+0x1ebc>
    8f90:	ldr	r0, [r4, #20]
    8f94:	cmp	r0, #0
    8f98:	beq	95c4 <ReadSingleData+0x870>
    8f9c:	cmp	r5, #256	; 0x100
    8fa0:	bgt	9a44 <ReadSingleData+0xcf0>
    8fa4:	ldr	r3, [r4]
    8fa8:	add	r4, sp, #192	; 0xc0
    8fac:	mov	r1, sl
    8fb0:	mov	r2, r5
    8fb4:	mov	r0, r4
    8fb8:	bl	18b8 <fread@plt>
    8fbc:	mov	r8, r0
    8fc0:	cmp	r5, #1
    8fc4:	blt	b77c <ReadSingleData+0x2a28>
    8fc8:	mov	r0, r4
    8fcc:	bl	1c20 <Mat_int16Swap>
    8fd0:	vmov	s0, r0
    8fd4:	add	r4, r4, #2
    8fd8:	subs	r5, r5, #1
    8fdc:	vcvt.f32.s32	s0, s0
    8fe0:	vstr	s0, [r7]
    8fe4:	add	r7, r7, #4
    8fe8:	bne	8fc8 <ReadSingleData+0x274>
    8fec:	b	b77c <ReadSingleData+0x2a28>
    8ff0:	ldr	r0, [r4, #20]
    8ff4:	cmp	r0, #0
    8ff8:	beq	9684 <ReadSingleData+0x930>
    8ffc:	cmp	r5, #256	; 0x100
    9000:	bgt	9b34 <ReadSingleData+0xde0>
    9004:	ldr	r3, [r4]
    9008:	add	r4, sp, #192	; 0xc0
    900c:	mov	r1, sl
    9010:	mov	r2, r5
    9014:	mov	r0, r4
    9018:	bl	18b8 <fread@plt>
    901c:	mov	r8, r0
    9020:	cmp	r5, #1
    9024:	blt	b77c <ReadSingleData+0x2a28>
    9028:	mov	r0, r4
    902c:	bl	1c34 <Mat_uint16Swap>
    9030:	vmov	s0, r0
    9034:	add	r4, r4, #2
    9038:	subs	r5, r5, #1
    903c:	vcvt.f32.u32	s0, s0
    9040:	vstr	s0, [r7]
    9044:	add	r7, r7, #4
    9048:	bne	9028 <ReadSingleData+0x2d4>
    904c:	b	b77c <ReadSingleData+0x2a28>
    9050:	ldr	r0, [r4, #20]
    9054:	cmp	r0, #0
    9058:	beq	9744 <ReadSingleData+0x9f0>
    905c:	cmp	r5, #256	; 0x100
    9060:	bgt	9c24 <ReadSingleData+0xed0>
    9064:	ldr	r3, [r4]
    9068:	add	r4, sp, #192	; 0xc0
    906c:	mov	r1, sl
    9070:	mov	r2, r5
    9074:	mov	r0, r4
    9078:	bl	18b8 <fread@plt>
    907c:	mov	r8, r0
    9080:	cmp	r5, #1
    9084:	blt	b77c <ReadSingleData+0x2a28>
    9088:	mov	r0, r4
    908c:	bl	1bf8 <Mat_int32Swap>
    9090:	vmov	s0, r0
    9094:	add	r4, r4, #4
    9098:	subs	r5, r5, #1
    909c:	vcvt.f32.s32	s0, s0
    90a0:	vstr	s0, [r7]
    90a4:	add	r7, r7, #4
    90a8:	bne	9088 <ReadSingleData+0x334>
    90ac:	b	b77c <ReadSingleData+0x2a28>
    90b0:	ldr	r0, [r4, #20]
    90b4:	cmp	r0, #0
    90b8:	beq	97dc <ReadSingleData+0xa88>
    90bc:	cmp	r5, #256	; 0x100
    90c0:	bgt	9d10 <ReadSingleData+0xfbc>
    90c4:	ldr	r3, [r4]
    90c8:	add	r4, sp, #192	; 0xc0
    90cc:	mov	r1, sl
    90d0:	mov	r2, r5
    90d4:	mov	r0, r4
    90d8:	bl	18b8 <fread@plt>
    90dc:	mov	r8, r0
    90e0:	cmp	r5, #1
    90e4:	blt	b77c <ReadSingleData+0x2a28>
    90e8:	mov	r0, r4
    90ec:	bl	1c0c <Mat_uint32Swap>
    90f0:	vmov	s0, r0
    90f4:	add	r4, r4, #4
    90f8:	subs	r5, r5, #1
    90fc:	vcvt.f32.u32	s0, s0
    9100:	vstr	s0, [r7]
    9104:	add	r7, r7, #4
    9108:	bne	90e8 <ReadSingleData+0x394>
    910c:	b	b77c <ReadSingleData+0x2a28>
    9110:	ldr	r0, [r4, #20]
    9114:	cmp	r0, #0
    9118:	beq	9874 <ReadSingleData+0xb20>
    911c:	cmp	r5, #256	; 0x100
    9120:	bgt	9dfc <ReadSingleData+0x10a8>
    9124:	ldr	r3, [r4]
    9128:	add	r4, sp, #192	; 0xc0
    912c:	mov	r1, sl
    9130:	mov	r2, r5
    9134:	mov	r0, r4
    9138:	bl	18b8 <fread@plt>
    913c:	mov	r8, r0
    9140:	cmp	r5, #1
    9144:	blt	b77c <ReadSingleData+0x2a28>
    9148:	mov	r0, r4
    914c:	bl	1c4c <Mat_floatSwap>
    9150:	vstr	s0, [r7]
    9154:	add	r4, r4, #4
    9158:	add	r7, r7, #4
    915c:	subs	r5, r5, #1
    9160:	bne	9148 <ReadSingleData+0x3f4>
    9164:	b	b77c <ReadSingleData+0x2a28>
    9168:	ldr	r0, [r4, #20]
    916c:	cmp	r0, #0
    9170:	beq	98b0 <ReadSingleData+0xb5c>
    9174:	cmp	r5, #256	; 0x100
    9178:	bgt	9ee4 <ReadSingleData+0x1190>
    917c:	ldr	r3, [r4]
    9180:	add	r4, sp, #192	; 0xc0
    9184:	mov	r1, sl
    9188:	mov	r2, r5
    918c:	mov	r0, r4
    9190:	bl	18b8 <fread@plt>
    9194:	mov	r8, r0
    9198:	cmp	r5, #1
    919c:	blt	b77c <ReadSingleData+0x2a28>
    91a0:	mov	r0, r4
    91a4:	bl	1c90 <Mat_doubleSwap>
    91a8:	vcvt.f32.f64	s0, d0
    91ac:	add	r4, r4, #8
    91b0:	subs	r5, r5, #1
    91b4:	vstr	s0, [r7]
    91b8:	add	r7, r7, #4
    91bc:	bne	91a0 <ReadSingleData+0x44c>
    91c0:	b	b77c <ReadSingleData+0x2a28>
    91c4:	ldr	r0, [r4, #20]
    91c8:	cmp	r0, #0
    91cc:	beq	9954 <ReadSingleData+0xc00>
    91d0:	cmp	r5, #256	; 0x100
    91d4:	bgt	9fd4 <ReadSingleData+0x1280>
    91d8:	ldr	r3, [r4]
    91dc:	add	r6, sp, #192	; 0xc0
    91e0:	mov	r1, sl
    91e4:	mov	r2, r5
    91e8:	mov	r0, r6
    91ec:	bl	18b8 <fread@plt>
    91f0:	mov	r8, r0
    91f4:	cmp	r5, #1
    91f8:	blt	b074 <ReadSingleData+0x2320>
    91fc:	str	r9, [sp, #8]
    9200:	mov	r9, r7
    9204:	mov	r4, r7
    9208:	mov	r7, r5
    920c:	mov	r0, r6
    9210:	bl	1b84 <Mat_int64Swap>
    9214:	bl	71774 <__aeabi_l2f>
    9218:	str	r0, [r4], #4
    921c:	add	r6, r6, #8
    9220:	subs	r5, r5, #1
    9224:	bne	920c <ReadSingleData+0x4b8>
    9228:	b	b064 <ReadSingleData+0x2310>
    922c:	sub	r1, r5, #256	; 0x100
    9230:	str	r5, [sp, #20]
    9234:	mov	r9, r7
    9238:	add	r0, r7, #1024	; 0x400
    923c:	mov	r5, #0
    9240:	add	r6, sp, #192	; 0xc0
    9244:	add	r7, sp, #152	; 0x98
    9248:	mov	r8, #32
    924c:	add	r4, sp, #156	; 0x9c
    9250:	mov	sl, #0
    9254:	str	r1, [sp, #24]
    9258:	mov	r1, #256	; 0x100
    925c:	str	r9, [sp, #12]
    9260:	add	r2, sp, #28
    9264:	stm	r2, {r0, r1, r5}
    9268:	ldr	r0, [sp, #44]	; 0x2c
    926c:	ldr	r1, [sp, #40]	; 0x28
    9270:	mov	r2, #256	; 0x100
    9274:	ldr	r3, [r0]
    9278:	mov	r0, r6
    927c:	bl	18b8 <fread@plt>
    9280:	mov	r1, r9
    9284:	mov	r2, #0
    9288:	ldr	r3, [r6, r2]
    928c:	add	r5, r6, r2
    9290:	add	r2, r2, #8
    9294:	cmp	r2, #256	; 0x100
    9298:	str	r3, [sp, #152]	; 0x98
    929c:	add	r3, r1, #16
    92a0:	vld1.32	{d16[0]}, [r7 :32]
    92a4:	vmovl.s8	q8, d16
    92a8:	vmovl.s16	q8, d16
    92ac:	vcvt.f32.s32	q8, q8
    92b0:	vst1.32	{d16-d17}, [r1], r8
    92b4:	ldr	r5, [r5, #4]
    92b8:	str	r5, [sp, #156]	; 0x9c
    92bc:	vld1.32	{d16[0]}, [r4 :32]
    92c0:	vmovl.s8	q8, d16
    92c4:	vmovl.s16	q8, d16
    92c8:	vcvt.f32.s32	q8, q8
    92cc:	vst1.32	{d16-d17}, [r3]
    92d0:	bne	9288 <ReadSingleData+0x534>
    92d4:	ldr	r2, [sp, #36]	; 0x24
    92d8:	ldr	r1, [sp, #32]
    92dc:	add	sl, r0, sl
    92e0:	ldr	r0, [sp, #28]
    92e4:	add	r9, r9, #1024	; 0x400
    92e8:	add	r5, r2, #256	; 0x100
    92ec:	ldr	r2, [sp, #24]
    92f0:	add	r0, r0, #1024	; 0x400
    92f4:	add	r1, r1, #256	; 0x100
    92f8:	cmp	r5, r2
    92fc:	blt	9260 <ReadSingleData+0x50c>
    9300:	ldr	r0, [sp, #20]
    9304:	cmp	r5, r0
    9308:	bge	a468 <ReadSingleData+0x1714>
    930c:	sub	r4, r0, r5
    9310:	ldr	r0, [sp, #44]	; 0x2c
    9314:	ldr	r1, [sp, #40]	; 0x28
    9318:	add	r6, sp, #192	; 0xc0
    931c:	mov	r2, r4
    9320:	ldr	r3, [r0]
    9324:	mov	r0, r6
    9328:	bl	18b8 <fread@plt>
    932c:	mov	r8, sl
    9330:	add	r8, r0, sl
    9334:	cmp	r4, #1
    9338:	blt	b778 <ReadSingleData+0x2a24>
    933c:	ldr	r3, [sp, #12]
    9340:	mov	lr, #0
    9344:	cmp	r4, #4
    9348:	bcc	accc <ReadSingleData+0x1f78>
    934c:	bic	lr, r4, #3
    9350:	mov	r2, #1
    9354:	str	r4, [sp, #44]	; 0x2c
    9358:	subs	r1, lr, #4
    935c:	add	r1, r2, r1, lsr #2
    9360:	and	ip, r1, #1
    9364:	beq	ac88 <ReadSingleData+0x1f34>
    9368:	ldr	r0, [sp, #20]
    936c:	ldr	r1, [sp, #36]	; 0x24
    9370:	add	r9, sp, #144	; 0x90
    9374:	mov	sl, #32
    9378:	add	r4, sp, #148	; 0x94
    937c:	sub	r3, r0, r1
    9380:	sub	r3, r3, #256	; 0x100
    9384:	bic	r3, r3, #3
    9388:	sub	r3, r3, #4
    938c:	add	r2, r2, r3, lsr #2
    9390:	mvn	r7, r3, lsr #2
    9394:	and	r2, r2, #1
    9398:	add	r3, r7, r2
    939c:	ldr	r7, [sp, #28]
    93a0:	mov	r2, #0
    93a4:	ldr	r1, [r6, r2]
    93a8:	add	r0, r6, r2
    93ac:	adds	r3, r3, #2
    93b0:	add	r2, r2, #8
    93b4:	str	r1, [sp, #144]	; 0x90
    93b8:	add	r1, r7, #16
    93bc:	vld1.32	{d16[0]}, [r9 :32]
    93c0:	vmovl.s8	q8, d16
    93c4:	vmovl.s16	q8, d16
    93c8:	vcvt.f32.s32	q8, q8
    93cc:	vst1.32	{d16-d17}, [r7], sl
    93d0:	ldr	r0, [r0, #4]
    93d4:	str	r0, [sp, #148]	; 0x94
    93d8:	vld1.32	{d16[0]}, [r4 :32]
    93dc:	vmovl.s8	q8, d16
    93e0:	vmovl.s16	q8, d16
    93e4:	vcvt.f32.s32	q8, q8
    93e8:	vst1.32	{d16-d17}, [r1]
    93ec:	bne	93a4 <ReadSingleData+0x650>
    93f0:	b	ac8c <ReadSingleData+0x1f38>
    93f4:	sub	r1, r5, #256	; 0x100
    93f8:	str	r5, [sp, #20]
    93fc:	mov	r5, r7
    9400:	add	r0, r7, #1024	; 0x400
    9404:	mov	r4, #0
    9408:	add	r6, sp, #192	; 0xc0
    940c:	add	r7, sp, #184	; 0xb8
    9410:	mov	sl, #32
    9414:	add	r8, sp, #188	; 0xbc
    9418:	mov	r9, #0
    941c:	str	r1, [sp, #24]
    9420:	mov	r1, #256	; 0x100
    9424:	str	r5, [sp, #12]
    9428:	add	r2, sp, #28
    942c:	stm	r2, {r0, r1, r4}
    9430:	ldr	r0, [sp, #44]	; 0x2c
    9434:	ldr	r1, [sp, #40]	; 0x28
    9438:	mov	r2, #256	; 0x100
    943c:	ldr	r3, [r0]
    9440:	mov	r0, r6
    9444:	bl	18b8 <fread@plt>
    9448:	mov	r1, r5
    944c:	mov	r2, #0
    9450:	ldr	r3, [r6, r2]
    9454:	add	r4, r6, r2
    9458:	add	r2, r2, #8
    945c:	cmp	r2, #256	; 0x100
    9460:	str	r3, [sp, #184]	; 0xb8
    9464:	add	r3, r1, #16
    9468:	vld1.32	{d16[0]}, [r7 :32]
    946c:	vmovl.u8	q8, d16
    9470:	vmovl.u16	q8, d16
    9474:	vcvt.f32.u32	q8, q8
    9478:	vst1.32	{d16-d17}, [r1], sl
    947c:	ldr	r4, [r4, #4]
    9480:	str	r4, [sp, #188]	; 0xbc
    9484:	vld1.32	{d16[0]}, [r8 :32]
    9488:	vmovl.u8	q8, d16
    948c:	vmovl.u16	q8, d16
    9490:	vcvt.f32.u32	q8, q8
    9494:	vst1.32	{d16-d17}, [r3]
    9498:	bne	9450 <ReadSingleData+0x6fc>
    949c:	ldr	r2, [sp, #36]	; 0x24
    94a0:	ldr	r1, [sp, #32]
    94a4:	add	r9, r0, r9
    94a8:	ldr	r0, [sp, #28]
    94ac:	add	r5, r5, #1024	; 0x400
    94b0:	add	r4, r2, #256	; 0x100
    94b4:	ldr	r2, [sp, #24]
    94b8:	add	r0, r0, #1024	; 0x400
    94bc:	add	r1, r1, #256	; 0x100
    94c0:	cmp	r4, r2
    94c4:	blt	9428 <ReadSingleData+0x6d4>
    94c8:	ldr	r5, [sp, #20]
    94cc:	cmp	r4, r5
    94d0:	bge	a0e4 <ReadSingleData+0x1390>
    94d4:	ldr	r0, [sp, #44]	; 0x2c
    94d8:	ldr	sl, [sp, #40]	; 0x28
    94dc:	sub	r7, r5, r4
    94e0:	add	r6, sp, #192	; 0xc0
    94e4:	mov	r2, r7
    94e8:	ldr	r3, [r0]
    94ec:	mov	r0, r6
    94f0:	mov	r1, sl
    94f4:	bl	18b8 <fread@plt>
    94f8:	mov	r8, r9
    94fc:	add	r8, r0, r9
    9500:	cmp	r7, #1
    9504:	blt	b77c <ReadSingleData+0x2a28>
    9508:	ldr	r3, [sp, #12]
    950c:	mov	lr, #0
    9510:	cmp	r7, #4
    9514:	bcc	ad5c <ReadSingleData+0x2008>
    9518:	bic	lr, r7, #3
    951c:	mov	r1, #1
    9520:	mov	r9, r8
    9524:	str	r7, [sp, #44]	; 0x2c
    9528:	subs	r2, lr, #4
    952c:	add	r2, r1, r2, lsr #2
    9530:	and	r0, r2, #1
    9534:	str	r0, [sp, #24]
    9538:	beq	ad0c <ReadSingleData+0x1fb8>
    953c:	ldr	r0, [sp, #36]	; 0x24
    9540:	ldr	ip, [sp, #28]
    9544:	add	r8, sp, #176	; 0xb0
    9548:	sub	r2, r5, r0
    954c:	mov	r5, #32
    9550:	sub	r2, r2, #256	; 0x100
    9554:	bic	r2, r2, #3
    9558:	sub	r2, r2, #4
    955c:	add	r1, r1, r2, lsr #2
    9560:	mvn	r3, r2, lsr #2
    9564:	mov	r2, #0
    9568:	and	r1, r1, #1
    956c:	add	r3, r3, r1
    9570:	add	r1, sp, #180	; 0xb4
    9574:	ldr	r0, [r6, r2]
    9578:	add	r7, r6, r2
    957c:	adds	r3, r3, #2
    9580:	add	r2, r2, #8
    9584:	str	r0, [sp, #176]	; 0xb0
    9588:	add	r0, ip, #16
    958c:	vld1.32	{d16[0]}, [r8 :32]
    9590:	vmovl.u8	q8, d16
    9594:	vmovl.u16	q8, d16
    9598:	vcvt.f32.u32	q8, q8
    959c:	vst1.32	{d16-d17}, [ip], r5
    95a0:	ldr	r7, [r7, #4]
    95a4:	str	r7, [sp, #180]	; 0xb4
    95a8:	vld1.32	{d16[0]}, [r1 :32]
    95ac:	vmovl.u8	q8, d16
    95b0:	vmovl.u16	q8, d16
    95b4:	vcvt.f32.u32	q8, q8
    95b8:	vst1.32	{d16-d17}, [r0]
    95bc:	bne	9574 <ReadSingleData+0x820>
    95c0:	b	ad10 <ReadSingleData+0x1fbc>
    95c4:	cmp	r5, #256	; 0x100
    95c8:	bgt	a0f0 <ReadSingleData+0x139c>
    95cc:	ldr	r3, [r4]
    95d0:	mov	r1, sl
    95d4:	mov	sl, r7
    95d8:	add	r7, sp, #192	; 0xc0
    95dc:	mov	r2, r5
    95e0:	mov	r0, r7
    95e4:	bl	18b8 <fread@plt>
    95e8:	mov	r8, r0
    95ec:	cmp	r5, #1
    95f0:	blt	b778 <ReadSingleData+0x2a24>
    95f4:	mov	lr, #0
    95f8:	cmp	r5, #4
    95fc:	bcc	ade4 <ReadSingleData+0x2090>
    9600:	bic	lr, r5, #3
    9604:	mov	r1, #1
    9608:	str	r5, [sp, #20]
    960c:	str	r8, [sp, #36]	; 0x24
    9610:	subs	r0, lr, #4
    9614:	add	r0, r1, r0, lsr #2
    9618:	and	ip, r0, #1
    961c:	beq	ad98 <ReadSingleData+0x2044>
    9620:	sub	r3, r0, ip
    9624:	mov	r1, #0
    9628:	mov	r8, #16
    962c:	mov	r9, #32
    9630:	add	r5, sp, #56	; 0x38
    9634:	mov	r2, sl
    9638:	mov	r4, r7
    963c:	vld1.16	{d16}, [r4], r8
    9640:	add	r0, r2, #16
    9644:	subs	r3, r3, #2
    9648:	add	r1, r1, #8
    964c:	vmovl.s16	q8, d16
    9650:	vcvt.f32.s32	q8, q8
    9654:	vst1.32	{d16-d17}, [r2], r9
    9658:	ldr	r6, [r7, #8]
    965c:	ldr	r7, [r7, #12]
    9660:	str	r7, [sp, #60]	; 0x3c
    9664:	str	r6, [sp, #56]	; 0x38
    9668:	mov	r7, r4
    966c:	vld1.16	{d16}, [r5 :64]
    9670:	vmovl.s16	q8, d16
    9674:	vcvt.f32.s32	q8, q8
    9678:	vst1.32	{d16-d17}, [r0]
    967c:	bne	963c <ReadSingleData+0x8e8>
    9680:	b	ad9c <ReadSingleData+0x2048>
    9684:	cmp	r5, #256	; 0x100
    9688:	bgt	a2ac <ReadSingleData+0x1558>
    968c:	ldr	r3, [r4]
    9690:	mov	r1, sl
    9694:	mov	sl, r7
    9698:	add	r7, sp, #192	; 0xc0
    969c:	mov	r2, r5
    96a0:	mov	r0, r7
    96a4:	bl	18b8 <fread@plt>
    96a8:	mov	r8, r0
    96ac:	cmp	r5, #1
    96b0:	blt	b778 <ReadSingleData+0x2a24>
    96b4:	mov	lr, #0
    96b8:	cmp	r5, #4
    96bc:	bcc	ae5c <ReadSingleData+0x2108>
    96c0:	bic	lr, r5, #3
    96c4:	mov	r1, #1
    96c8:	str	r5, [sp, #20]
    96cc:	str	r8, [sp, #36]	; 0x24
    96d0:	subs	r0, lr, #4
    96d4:	add	r0, r1, r0, lsr #2
    96d8:	and	ip, r0, #1
    96dc:	beq	ae10 <ReadSingleData+0x20bc>
    96e0:	sub	r3, r0, ip
    96e4:	mov	r1, #0
    96e8:	mov	r8, #16
    96ec:	mov	r9, #32
    96f0:	add	r5, sp, #96	; 0x60
    96f4:	mov	r2, sl
    96f8:	mov	r4, r7
    96fc:	vld1.16	{d16}, [r4], r8
    9700:	add	r0, r2, #16
    9704:	subs	r3, r3, #2
    9708:	add	r1, r1, #8
    970c:	vmovl.u16	q8, d16
    9710:	vcvt.f32.u32	q8, q8
    9714:	vst1.32	{d16-d17}, [r2], r9
    9718:	ldr	r6, [r7, #8]
    971c:	ldr	r7, [r7, #12]
    9720:	str	r7, [sp, #100]	; 0x64
    9724:	str	r6, [sp, #96]	; 0x60
    9728:	mov	r7, r4
    972c:	vld1.16	{d16}, [r5 :64]
    9730:	vmovl.u16	q8, d16
    9734:	vcvt.f32.u32	q8, q8
    9738:	vst1.32	{d16-d17}, [r0]
    973c:	bne	96fc <ReadSingleData+0x9a8>
    9740:	b	ae14 <ReadSingleData+0x20c0>
    9744:	cmp	r5, #256	; 0x100
    9748:	bgt	a478 <ReadSingleData+0x1724>
    974c:	ldr	r3, [r4]
    9750:	add	r4, sp, #192	; 0xc0
    9754:	mov	r1, sl
    9758:	mov	r2, r5
    975c:	mov	r0, r4
    9760:	bl	18b8 <fread@plt>
    9764:	mov	r8, r0
    9768:	cmp	r5, #1
    976c:	blt	b77c <ReadSingleData+0x2a28>
    9770:	mov	r0, #0
    9774:	cmp	r5, #4
    9778:	bcc	aebc <ReadSingleData+0x2168>
    977c:	bic	r0, r5, #3
    9780:	mov	r2, #1
    9784:	mov	r9, r7
    9788:	mov	lr, r5
    978c:	subs	r1, r0, #4
    9790:	add	r1, r2, r1, lsr #2
    9794:	and	ip, r1, #1
    9798:	beq	ae88 <ReadSingleData+0x2134>
    979c:	sub	r3, r1, ip
    97a0:	mov	r1, #0
    97a4:	mov	r7, #32
    97a8:	mov	r6, r9
    97ac:	add	r5, r4, #16
    97b0:	vld1.32	{d16-d17}, [r4], r7
    97b4:	add	r2, r6, #16
    97b8:	subs	r3, r3, #2
    97bc:	add	r1, r1, #8
    97c0:	vcvt.f32.s32	q8, q8
    97c4:	vst1.32	{d16-d17}, [r6], r7
    97c8:	vld1.32	{d16-d17}, [r5]
    97cc:	vcvt.f32.s32	q8, q8
    97d0:	vst1.32	{d16-d17}, [r2]
    97d4:	bne	97ac <ReadSingleData+0xa58>
    97d8:	b	ae8c <ReadSingleData+0x2138>
    97dc:	cmp	r5, #256	; 0x100
    97e0:	bgt	a5cc <ReadSingleData+0x1878>
    97e4:	ldr	r3, [r4]
    97e8:	add	r4, sp, #192	; 0xc0
    97ec:	mov	r1, sl
    97f0:	mov	r2, r5
    97f4:	mov	r0, r4
    97f8:	bl	18b8 <fread@plt>
    97fc:	mov	r8, r0
    9800:	cmp	r5, #1
    9804:	blt	b77c <ReadSingleData+0x2a28>
    9808:	mov	r0, #0
    980c:	cmp	r5, #4
    9810:	bcc	af1c <ReadSingleData+0x21c8>
    9814:	bic	r0, r5, #3
    9818:	mov	r2, #1
    981c:	mov	r9, r7
    9820:	mov	lr, r5
    9824:	subs	r1, r0, #4
    9828:	add	r1, r2, r1, lsr #2
    982c:	and	ip, r1, #1
    9830:	beq	aee8 <ReadSingleData+0x2194>
    9834:	sub	r3, r1, ip
    9838:	mov	r1, #0
    983c:	mov	r7, #32
    9840:	mov	r6, r9
    9844:	add	r5, r4, #16
    9848:	vld1.32	{d16-d17}, [r4], r7
    984c:	add	r2, r6, #16
    9850:	subs	r3, r3, #2
    9854:	add	r1, r1, #8
    9858:	vcvt.f32.u32	q8, q8
    985c:	vst1.32	{d16-d17}, [r6], r7
    9860:	vld1.32	{d16-d17}, [r5]
    9864:	vcvt.f32.u32	q8, q8
    9868:	vst1.32	{d16-d17}, [r2]
    986c:	bne	9844 <ReadSingleData+0xaf0>
    9870:	b	aeec <ReadSingleData+0x2198>
    9874:	cmp	r5, #256	; 0x100
    9878:	bgt	a720 <ReadSingleData+0x19cc>
    987c:	ldr	r3, [r4]
    9880:	add	r0, sp, #192	; 0xc0
    9884:	mov	r1, sl
    9888:	mov	r2, r5
    988c:	bl	18b8 <fread@plt>
    9890:	mov	r8, r0
    9894:	cmp	r5, #1
    9898:	blt	b77c <ReadSingleData+0x2a28>
    989c:	lsl	r2, r5, #2
    98a0:	add	r1, sp, #192	; 0xc0
    98a4:	mov	r0, r7
    98a8:	bl	181c <memcpy@plt>
    98ac:	b	b77c <ReadSingleData+0x2a28>
    98b0:	cmp	r5, #256	; 0x100
    98b4:	bgt	a7cc <ReadSingleData+0x1a78>
    98b8:	ldr	r3, [r4]
    98bc:	add	r4, sp, #192	; 0xc0
    98c0:	mov	r1, sl
    98c4:	mov	r2, r5
    98c8:	mov	r0, r4
    98cc:	bl	18b8 <fread@plt>
    98d0:	mov	r8, r0
    98d4:	cmp	r5, #1
    98d8:	blt	b77c <ReadSingleData+0x2a28>
    98dc:	mov	lr, #0
    98e0:	beq	af84 <ReadSingleData+0x2230>
    98e4:	bic	lr, r5, #1
    98e8:	mov	r2, #1
    98ec:	mov	sl, r7
    98f0:	mov	r9, r5
    98f4:	subs	r1, lr, #2
    98f8:	add	r1, r2, r1, lsr #1
    98fc:	and	ip, r1, #1
    9900:	beq	af48 <ReadSingleData+0x21f4>
    9904:	sub	r3, r1, ip
    9908:	mov	r1, #0
    990c:	mov	r7, #32
    9910:	mov	r6, #16
    9914:	mov	r2, sl
    9918:	mov	r5, sl
    991c:	add	r0, r4, #16
    9920:	vld1.64	{d16-d17}, [r4], r7
    9924:	subs	r3, r3, #2
    9928:	add	r1, r1, #4
    992c:	vcvt.f32.f64	s1, d17
    9930:	vcvt.f32.f64	s0, d16
    9934:	vst1.32	{d0}, [r5], r6
    9938:	vld1.64	{d16-d17}, [r0]
    993c:	vcvt.f32.f64	s1, d17
    9940:	vcvt.f32.f64	s0, d16
    9944:	vstr	d0, [r2, #8]
    9948:	mov	r2, r5
    994c:	bne	991c <ReadSingleData+0xbc8>
    9950:	b	af4c <ReadSingleData+0x21f8>
    9954:	cmp	r5, #256	; 0x100
    9958:	bgt	a94c <ReadSingleData+0x1bf8>
    995c:	ldr	r3, [r4]
    9960:	add	r8, sp, #192	; 0xc0
    9964:	mov	r1, sl
    9968:	mov	r2, r5
    996c:	mov	r0, r8
    9970:	bl	18b8 <fread@plt>
    9974:	cmp	r5, #1
    9978:	str	r0, [sp, #36]	; 0x24
    997c:	blt	ab88 <ReadSingleData+0x1e34>
    9980:	mov	r1, #0
    9984:	str	r9, [sp, #8]
    9988:	beq	b02c <ReadSingleData+0x22d8>
    998c:	bic	r0, r5, #1
    9990:	mov	r1, #1
    9994:	str	r7, [sp, #12]
    9998:	str	r5, [sp, #20]
    999c:	str	r0, [sp, #32]
    99a0:	subs	r0, r0, #2
    99a4:	add	r0, r1, r0, lsr #1
    99a8:	and	r1, r0, #1
    99ac:	str	r1, [sp, #28]
    99b0:	beq	afb4 <ReadSingleData+0x2260>
    99b4:	ldr	sl, [sp, #12]
    99b8:	sub	r7, r0, r1
    99bc:	mov	r4, #0
    99c0:	mov	r9, #16
    99c4:	mov	r6, r8
    99c8:	mov	r5, sl
    99cc:	mov	r0, #32
    99d0:	vld1.64	{d8-d9}, [r6], r0
    99d4:	vmov.32	r0, d9[0]
    99d8:	vmov.32	r1, d9[1]
    99dc:	bl	71774 <__aeabi_l2f>
    99e0:	vmov.32	r2, d8[0]
    99e4:	vmov.32	r1, d8[1]
    99e8:	vmov	s17, r0
    99ec:	mov	r0, r2
    99f0:	bl	71774 <__aeabi_l2f>
    99f4:	vmov	s16, r0
    99f8:	add	r0, r8, #16
    99fc:	vst1.32	{d8}, [r5], r9
    9a00:	vld1.64	{d8-d9}, [r0]
    9a04:	vmov.32	r0, d9[0]
    9a08:	vmov.32	r1, d9[1]
    9a0c:	bl	71774 <__aeabi_l2f>
    9a10:	vmov.32	r2, d8[0]
    9a14:	vmov.32	r1, d8[1]
    9a18:	vmov	s17, r0
    9a1c:	mov	r0, r2
    9a20:	bl	71774 <__aeabi_l2f>
    9a24:	vmov	s16, r0
    9a28:	subs	r7, r7, #2
    9a2c:	add	r4, r4, #4
    9a30:	mov	r8, r6
    9a34:	vstr	d8, [sl, #8]
    9a38:	mov	sl, r5
    9a3c:	bne	99cc <ReadSingleData+0xc78>
    9a40:	b	afb8 <ReadSingleData+0x2264>
    9a44:	sub	r0, r5, #256	; 0x100
    9a48:	add	r1, r7, #1024	; 0x400
    9a4c:	add	r6, sp, #192	; 0xc0
    9a50:	mov	r8, #0
    9a54:	str	r5, [sp, #20]
    9a58:	str	r0, [sp, #32]
    9a5c:	mov	r0, #0
    9a60:	mov	r9, r1
    9a64:	ldr	r3, [r4]
    9a68:	ldr	r1, [sp, #40]	; 0x28
    9a6c:	str	r0, [sp, #36]	; 0x24
    9a70:	mov	r0, r6
    9a74:	mov	r2, #256	; 0x100
    9a78:	bl	18b8 <fread@plt>
    9a7c:	mov	r4, r0
    9a80:	mov	sl, r7
    9a84:	mov	r5, r7
    9a88:	mov	r7, #0
    9a8c:	add	r0, r6, r7
    9a90:	bl	1c20 <Mat_int16Swap>
    9a94:	vmov	s0, r0
    9a98:	add	r7, r7, #2
    9a9c:	cmp	r7, #512	; 0x200
    9aa0:	vcvt.f32.s32	s0, s0
    9aa4:	vstmia	r5!, {s0}
    9aa8:	bne	9a8c <ReadSingleData+0xd38>
    9aac:	ldr	r5, [sp, #36]	; 0x24
    9ab0:	ldr	r2, [sp, #32]
    9ab4:	add	r8, r4, r8
    9ab8:	ldr	r4, [sp, #44]	; 0x2c
    9abc:	mov	r7, sl
    9ac0:	add	r7, sl, #1024	; 0x400
    9ac4:	add	r1, r9, #1024	; 0x400
    9ac8:	add	r0, r5, #256	; 0x100
    9acc:	cmp	r0, r2
    9ad0:	blt	9a60 <ReadSingleData+0xd0c>
    9ad4:	ldr	r7, [sp, #20]
    9ad8:	cmp	r0, r7
    9adc:	bge	b778 <ReadSingleData+0x2a24>
    9ae0:	ldr	r3, [r4]
    9ae4:	ldr	r1, [sp, #40]	; 0x28
    9ae8:	sub	r6, r7, r0
    9aec:	add	r4, sp, #192	; 0xc0
    9af0:	mov	r0, r4
    9af4:	mov	r2, r6
    9af8:	bl	18b8 <fread@plt>
    9afc:	add	r8, r0, r8
    9b00:	cmp	r6, #1
    9b04:	blt	b778 <ReadSingleData+0x2a24>
    9b08:	sub	r0, r7, r5
    9b0c:	sub	r5, r0, #256	; 0x100
    9b10:	mov	r0, r4
    9b14:	bl	1c20 <Mat_int16Swap>
    9b18:	vmov	s0, r0
    9b1c:	add	r4, r4, #2
    9b20:	subs	r5, r5, #1
    9b24:	vcvt.f32.s32	s0, s0
    9b28:	vstmia	r9!, {s0}
    9b2c:	bne	9b10 <ReadSingleData+0xdbc>
    9b30:	b	b778 <ReadSingleData+0x2a24>
    9b34:	sub	r0, r5, #256	; 0x100
    9b38:	add	r1, r7, #1024	; 0x400
    9b3c:	add	r6, sp, #192	; 0xc0
    9b40:	mov	r8, #0
    9b44:	str	r5, [sp, #20]
    9b48:	str	r0, [sp, #32]
    9b4c:	mov	r0, #0
    9b50:	mov	r9, r1
    9b54:	ldr	r3, [r4]
    9b58:	ldr	r1, [sp, #40]	; 0x28
    9b5c:	str	r0, [sp, #36]	; 0x24
    9b60:	mov	r0, r6
    9b64:	mov	r2, #256	; 0x100
    9b68:	bl	18b8 <fread@plt>
    9b6c:	mov	r4, r0
    9b70:	mov	sl, r7
    9b74:	mov	r5, r7
    9b78:	mov	r7, #0
    9b7c:	add	r0, r6, r7
    9b80:	bl	1c34 <Mat_uint16Swap>
    9b84:	vmov	s0, r0
    9b88:	add	r7, r7, #2
    9b8c:	cmp	r7, #512	; 0x200
    9b90:	vcvt.f32.u32	s0, s0
    9b94:	vstmia	r5!, {s0}
    9b98:	bne	9b7c <ReadSingleData+0xe28>
    9b9c:	ldr	r5, [sp, #36]	; 0x24
    9ba0:	ldr	r2, [sp, #32]
    9ba4:	add	r8, r4, r8
    9ba8:	ldr	r4, [sp, #44]	; 0x2c
    9bac:	mov	r7, sl
    9bb0:	add	r7, sl, #1024	; 0x400
    9bb4:	add	r1, r9, #1024	; 0x400
    9bb8:	add	r0, r5, #256	; 0x100
    9bbc:	cmp	r0, r2
    9bc0:	blt	9b50 <ReadSingleData+0xdfc>
    9bc4:	ldr	r7, [sp, #20]
    9bc8:	cmp	r0, r7
    9bcc:	bge	b778 <ReadSingleData+0x2a24>
    9bd0:	ldr	r3, [r4]
    9bd4:	ldr	r1, [sp, #40]	; 0x28
    9bd8:	sub	r6, r7, r0
    9bdc:	add	r4, sp, #192	; 0xc0
    9be0:	mov	r0, r4
    9be4:	mov	r2, r6
    9be8:	bl	18b8 <fread@plt>
    9bec:	add	r8, r0, r8
    9bf0:	cmp	r6, #1
    9bf4:	blt	b778 <ReadSingleData+0x2a24>
    9bf8:	sub	r0, r7, r5
    9bfc:	sub	r5, r0, #256	; 0x100
    9c00:	mov	r0, r4
    9c04:	bl	1c34 <Mat_uint16Swap>
    9c08:	vmov	s0, r0
    9c0c:	add	r4, r4, #2
    9c10:	subs	r5, r5, #1
    9c14:	vcvt.f32.u32	s0, s0
    9c18:	vstmia	r9!, {s0}
    9c1c:	bne	9c00 <ReadSingleData+0xeac>
    9c20:	b	b778 <ReadSingleData+0x2a24>
    9c24:	sub	r0, r5, #256	; 0x100
    9c28:	mov	r8, r7
    9c2c:	add	r1, r7, #1024	; 0x400
    9c30:	add	r6, sp, #192	; 0xc0
    9c34:	mov	r7, #0
    9c38:	str	r5, [sp, #20]
    9c3c:	str	r0, [sp, #36]	; 0x24
    9c40:	mov	r0, #0
    9c44:	mov	sl, r1
    9c48:	ldr	r3, [r4]
    9c4c:	ldr	r1, [sp, #40]	; 0x28
    9c50:	mov	r9, r0
    9c54:	mov	r0, r6
    9c58:	mov	r2, #256	; 0x100
    9c5c:	bl	18b8 <fread@plt>
    9c60:	mov	r4, r0
    9c64:	mov	r5, #0
    9c68:	add	r0, r6, r5
    9c6c:	bl	1bf8 <Mat_int32Swap>
    9c70:	vmov	s0, r0
    9c74:	add	r1, r8, r5
    9c78:	add	r5, r5, #4
    9c7c:	cmp	r5, #1024	; 0x400
    9c80:	vcvt.f32.s32	s0, s0
    9c84:	vstr	s0, [r1]
    9c88:	bne	9c68 <ReadSingleData+0xf14>
    9c8c:	ldr	r2, [sp, #36]	; 0x24
    9c90:	add	r7, r4, r7
    9c94:	ldr	r4, [sp, #44]	; 0x2c
    9c98:	add	r0, r9, #256	; 0x100
    9c9c:	add	r8, r8, #1024	; 0x400
    9ca0:	add	r1, sl, #1024	; 0x400
    9ca4:	cmp	r0, r2
    9ca8:	blt	9c44 <ReadSingleData+0xef0>
    9cac:	ldr	r5, [sp, #20]
    9cb0:	cmp	r0, r5
    9cb4:	bge	9ed8 <ReadSingleData+0x1184>
    9cb8:	ldr	r3, [r4]
    9cbc:	ldr	r1, [sp, #40]	; 0x28
    9cc0:	sub	r6, r5, r0
    9cc4:	add	r4, sp, #192	; 0xc0
    9cc8:	mov	r0, r4
    9ccc:	mov	r2, r6
    9cd0:	bl	18b8 <fread@plt>
    9cd4:	mov	r8, r7
    9cd8:	add	r8, r0, r7
    9cdc:	cmp	r6, #1
    9ce0:	blt	b778 <ReadSingleData+0x2a24>
    9ce4:	sub	r0, r5, r9
    9ce8:	sub	r5, r0, #256	; 0x100
    9cec:	mov	r0, r4
    9cf0:	bl	1bf8 <Mat_int32Swap>
    9cf4:	vmov	s0, r0
    9cf8:	add	r4, r4, #4
    9cfc:	subs	r5, r5, #1
    9d00:	vcvt.f32.s32	s0, s0
    9d04:	vstmia	sl!, {s0}
    9d08:	bne	9cec <ReadSingleData+0xf98>
    9d0c:	b	b778 <ReadSingleData+0x2a24>
    9d10:	sub	r0, r5, #256	; 0x100
    9d14:	mov	r8, r7
    9d18:	add	r1, r7, #1024	; 0x400
    9d1c:	add	r6, sp, #192	; 0xc0
    9d20:	mov	r7, #0
    9d24:	str	r5, [sp, #20]
    9d28:	str	r0, [sp, #36]	; 0x24
    9d2c:	mov	r0, #0
    9d30:	mov	sl, r1
    9d34:	ldr	r3, [r4]
    9d38:	ldr	r1, [sp, #40]	; 0x28
    9d3c:	mov	r9, r0
    9d40:	mov	r0, r6
    9d44:	mov	r2, #256	; 0x100
    9d48:	bl	18b8 <fread@plt>
    9d4c:	mov	r4, r0
    9d50:	mov	r5, #0
    9d54:	add	r0, r6, r5
    9d58:	bl	1c0c <Mat_uint32Swap>
    9d5c:	vmov	s0, r0
    9d60:	add	r1, r8, r5
    9d64:	add	r5, r5, #4
    9d68:	cmp	r5, #1024	; 0x400
    9d6c:	vcvt.f32.u32	s0, s0
    9d70:	vstr	s0, [r1]
    9d74:	bne	9d54 <ReadSingleData+0x1000>
    9d78:	ldr	r2, [sp, #36]	; 0x24
    9d7c:	add	r7, r4, r7
    9d80:	ldr	r4, [sp, #44]	; 0x2c
    9d84:	add	r0, r9, #256	; 0x100
    9d88:	add	r8, r8, #1024	; 0x400
    9d8c:	add	r1, sl, #1024	; 0x400
    9d90:	cmp	r0, r2
    9d94:	blt	9d30 <ReadSingleData+0xfdc>
    9d98:	ldr	r5, [sp, #20]
    9d9c:	cmp	r0, r5
    9da0:	bge	9ed8 <ReadSingleData+0x1184>
    9da4:	ldr	r3, [r4]
    9da8:	ldr	r1, [sp, #40]	; 0x28
    9dac:	sub	r6, r5, r0
    9db0:	add	r4, sp, #192	; 0xc0
    9db4:	mov	r0, r4
    9db8:	mov	r2, r6
    9dbc:	bl	18b8 <fread@plt>
    9dc0:	mov	r8, r7
    9dc4:	add	r8, r0, r7
    9dc8:	cmp	r6, #1
    9dcc:	blt	b778 <ReadSingleData+0x2a24>
    9dd0:	sub	r0, r5, r9
    9dd4:	sub	r5, r0, #256	; 0x100
    9dd8:	mov	r0, r4
    9ddc:	bl	1c0c <Mat_uint32Swap>
    9de0:	vmov	s0, r0
    9de4:	add	r4, r4, #4
    9de8:	subs	r5, r5, #1
    9dec:	vcvt.f32.u32	s0, s0
    9df0:	vstmia	sl!, {s0}
    9df4:	bne	9dd8 <ReadSingleData+0x1084>
    9df8:	b	b778 <ReadSingleData+0x2a24>
    9dfc:	sub	r0, r5, #256	; 0x100
    9e00:	mov	r8, r7
    9e04:	add	r1, r7, #1024	; 0x400
    9e08:	add	r6, sp, #192	; 0xc0
    9e0c:	mov	r7, #0
    9e10:	str	r5, [sp, #20]
    9e14:	str	r0, [sp, #36]	; 0x24
    9e18:	mov	r0, #0
    9e1c:	mov	sl, r1
    9e20:	ldr	r3, [r4]
    9e24:	ldr	r1, [sp, #40]	; 0x28
    9e28:	mov	r9, r0
    9e2c:	mov	r0, r6
    9e30:	mov	r2, #256	; 0x100
    9e34:	bl	18b8 <fread@plt>
    9e38:	mov	r4, r0
    9e3c:	mov	r5, #0
    9e40:	add	r0, r6, r5
    9e44:	bl	1c4c <Mat_floatSwap>
    9e48:	add	r0, r8, r5
    9e4c:	add	r5, r5, #4
    9e50:	cmp	r5, #1024	; 0x400
    9e54:	vstr	s0, [r0]
    9e58:	bne	9e40 <ReadSingleData+0x10ec>
    9e5c:	ldr	r2, [sp, #36]	; 0x24
    9e60:	add	r7, r4, r7
    9e64:	ldr	r4, [sp, #44]	; 0x2c
    9e68:	add	r0, r9, #256	; 0x100
    9e6c:	add	r8, r8, #1024	; 0x400
    9e70:	add	r1, sl, #1024	; 0x400
    9e74:	cmp	r0, r2
    9e78:	blt	9e1c <ReadSingleData+0x10c8>
    9e7c:	ldr	r5, [sp, #20]
    9e80:	cmp	r0, r5
    9e84:	bge	9ed8 <ReadSingleData+0x1184>
    9e88:	ldr	r3, [r4]
    9e8c:	ldr	r1, [sp, #40]	; 0x28
    9e90:	sub	r6, r5, r0
    9e94:	add	r4, sp, #192	; 0xc0
    9e98:	mov	r0, r4
    9e9c:	mov	r2, r6
    9ea0:	bl	18b8 <fread@plt>
    9ea4:	mov	r8, r7
    9ea8:	add	r8, r0, r7
    9eac:	cmp	r6, #1
    9eb0:	blt	b778 <ReadSingleData+0x2a24>
    9eb4:	sub	r0, r5, r9
    9eb8:	sub	r5, r0, #256	; 0x100
    9ebc:	mov	r0, r4
    9ec0:	bl	1c4c <Mat_floatSwap>
    9ec4:	vstmia	sl!, {s0}
    9ec8:	add	r4, r4, #4
    9ecc:	subs	r5, r5, #1
    9ed0:	bne	9ebc <ReadSingleData+0x1168>
    9ed4:	b	b778 <ReadSingleData+0x2a24>
    9ed8:	ldr	sl, [sp, #40]	; 0x28
    9edc:	mov	r8, r7
    9ee0:	b	b77c <ReadSingleData+0x2a28>
    9ee4:	mov	r0, r7
    9ee8:	sub	r0, r5, #256	; 0x100
    9eec:	add	r1, r7, #1024	; 0x400
    9ef0:	mov	r8, #0
    9ef4:	str	r5, [sp, #20]
    9ef8:	str	r0, [sp, #32]
    9efc:	mov	r0, #0
    9f00:	mov	sl, r1
    9f04:	ldr	r3, [r4]
    9f08:	ldr	r1, [sp, #40]	; 0x28
    9f0c:	add	r6, sp, #192	; 0xc0
    9f10:	str	r0, [sp, #36]	; 0x24
    9f14:	mov	r2, #256	; 0x100
    9f18:	mov	r9, r8
    9f1c:	mov	r0, r6
    9f20:	bl	18b8 <fread@plt>
    9f24:	mov	r4, r0
    9f28:	mov	r5, #0
    9f2c:	mov	r0, r6
    9f30:	add	r8, r7, r5
    9f34:	bl	1c90 <Mat_doubleSwap>
    9f38:	vcvt.f32.f64	s0, d0
    9f3c:	add	r5, r5, #4
    9f40:	add	r6, r6, #8
    9f44:	cmp	r5, #1024	; 0x400
    9f48:	vstr	s0, [r8]
    9f4c:	bne	9f2c <ReadSingleData+0x11d8>
    9f50:	ldr	r6, [sp, #36]	; 0x24
    9f54:	ldr	r2, [sp, #32]
    9f58:	mov	r8, r9
    9f5c:	add	r8, r4, r9
    9f60:	ldr	r4, [sp, #44]	; 0x2c
    9f64:	add	r7, r7, #1024	; 0x400
    9f68:	add	r1, sl, #1024	; 0x400
    9f6c:	add	r0, r6, #256	; 0x100
    9f70:	cmp	r0, r2
    9f74:	blt	9f00 <ReadSingleData+0x11ac>
    9f78:	ldr	r5, [sp, #20]
    9f7c:	cmp	r0, r5
    9f80:	bge	b778 <ReadSingleData+0x2a24>
    9f84:	ldr	r3, [r4]
    9f88:	ldr	r1, [sp, #40]	; 0x28
    9f8c:	sub	r7, r5, r0
    9f90:	add	r4, sp, #192	; 0xc0
    9f94:	mov	r0, r4
    9f98:	mov	r2, r7
    9f9c:	bl	18b8 <fread@plt>
    9fa0:	add	r8, r0, r8
    9fa4:	cmp	r7, #1
    9fa8:	blt	b778 <ReadSingleData+0x2a24>
    9fac:	sub	r0, r5, r6
    9fb0:	sub	r5, r0, #256	; 0x100
    9fb4:	mov	r0, r4
    9fb8:	bl	1c90 <Mat_doubleSwap>
    9fbc:	vcvt.f32.f64	s0, d0
    9fc0:	add	r4, r4, #8
    9fc4:	subs	r5, r5, #1
    9fc8:	vstmia	sl!, {s0}
    9fcc:	bne	9fb4 <ReadSingleData+0x1260>
    9fd0:	b	b778 <ReadSingleData+0x2a24>
    9fd4:	sub	r0, r5, #256	; 0x100
    9fd8:	str	r5, [sp, #20]
    9fdc:	add	r1, r7, #1024	; 0x400
    9fe0:	mov	r5, r7
    9fe4:	mov	r8, #0
    9fe8:	str	r9, [sp, #8]
    9fec:	str	r7, [sp, #12]
    9ff0:	str	r0, [sp, #32]
    9ff4:	mov	r0, #0
    9ff8:	str	r0, [sp, #36]	; 0x24
    9ffc:	ldr	r0, [sp, #44]	; 0x2c
    a000:	add	r4, sp, #192	; 0xc0
    a004:	mov	r7, r1
    a008:	mov	r1, sl
    a00c:	mov	r2, #256	; 0x100
    a010:	mov	r9, r8
    a014:	ldr	r3, [r0]
    a018:	mov	r0, r4
    a01c:	bl	18b8 <fread@plt>
    a020:	mov	r6, r0
    a024:	mov	r8, #0
    a028:	mov	r0, r4
    a02c:	bl	1b84 <Mat_int64Swap>
    a030:	bl	71774 <__aeabi_l2f>
    a034:	str	r0, [r5, r8]
    a038:	add	r8, r8, #4
    a03c:	add	r4, r4, #8
    a040:	cmp	r8, #1024	; 0x400
    a044:	bne	a028 <ReadSingleData+0x12d4>
    a048:	ldr	r4, [sp, #36]	; 0x24
    a04c:	ldr	r2, [sp, #32]
    a050:	ldr	sl, [sp, #40]	; 0x28
    a054:	mov	r8, r9
    a058:	add	r8, r6, r9
    a05c:	add	r5, r5, #1024	; 0x400
    a060:	add	r1, r7, #1024	; 0x400
    a064:	add	r0, r4, #256	; 0x100
    a068:	cmp	r0, r2
    a06c:	blt	9ff8 <ReadSingleData+0x12a4>
    a070:	ldr	r5, [sp, #20]
    a074:	cmp	r0, r5
    a078:	bge	ab6c <ReadSingleData+0x1e18>
    a07c:	mov	r9, r5
    a080:	mov	r5, r8
    a084:	add	r6, sp, #192	; 0xc0
    a088:	mov	r1, sl
    a08c:	sub	r8, r9, r0
    a090:	ldr	r0, [sp, #44]	; 0x2c
    a094:	mov	r2, r8
    a098:	ldr	r3, [r0]
    a09c:	mov	r0, r6
    a0a0:	bl	18b8 <fread@plt>
    a0a4:	add	r5, r0, r5
    a0a8:	cmp	r8, #1
    a0ac:	blt	ac78 <ReadSingleData+0x1f24>
    a0b0:	sub	r0, r9, r4
    a0b4:	sub	r4, r0, #256	; 0x100
    a0b8:	mov	r0, r6
    a0bc:	bl	1b84 <Mat_int64Swap>
    a0c0:	bl	71774 <__aeabi_l2f>
    a0c4:	str	r0, [r7], #4
    a0c8:	add	r6, r6, #8
    a0cc:	subs	r4, r4, #1
    a0d0:	bne	a0b8 <ReadSingleData+0x1364>
    a0d4:	mov	r8, r5
    a0d8:	ldr	r5, [sp, #20]
    a0dc:	ldr	r7, [sp, #12]
    a0e0:	b	b06c <ReadSingleData+0x2318>
    a0e4:	ldr	sl, [sp, #40]	; 0x28
    a0e8:	mov	r8, r9
    a0ec:	b	b77c <ReadSingleData+0x2a28>
    a0f0:	sub	r1, r5, #256	; 0x100
    a0f4:	str	r5, [sp, #20]
    a0f8:	add	r0, r7, #1024	; 0x400
    a0fc:	mov	r5, #0
    a100:	add	r6, sp, #192	; 0xc0
    a104:	mov	r9, #32
    a108:	add	r4, sp, #80	; 0x50
    a10c:	mov	r8, r7
    a110:	mov	sl, #0
    a114:	str	r7, [sp, #12]
    a118:	str	r1, [sp, #24]
    a11c:	mov	r1, #256	; 0x100
    a120:	add	r2, sp, #28
    a124:	stm	r2, {r0, r1, r5}
    a128:	ldr	r0, [sp, #44]	; 0x2c
    a12c:	ldr	r1, [sp, #40]	; 0x28
    a130:	mov	r2, #256	; 0x100
    a134:	ldr	r3, [r0]
    a138:	mov	r0, r6
    a13c:	bl	18b8 <fread@plt>
    a140:	mov	r1, r8
    a144:	mov	r2, #0
    a148:	add	r3, r6, r2
    a14c:	add	r7, r1, #16
    a150:	add	r2, r2, #16
    a154:	vld1.16	{d16}, [r3]!
    a158:	cmp	r2, #512	; 0x200
    a15c:	vmovl.s16	q8, d16
    a160:	vcvt.f32.s32	q8, q8
    a164:	vst1.32	{d16-d17}, [r1], r9
    a168:	ldr	r5, [r3]
    a16c:	ldr	r3, [r3, #4]
    a170:	str	r3, [sp, #84]	; 0x54
    a174:	str	r5, [sp, #80]	; 0x50
    a178:	vld1.16	{d16}, [r4 :64]
    a17c:	vmovl.s16	q8, d16
    a180:	vcvt.f32.s32	q8, q8
    a184:	vst1.32	{d16-d17}, [r7]
    a188:	bne	a148 <ReadSingleData+0x13f4>
    a18c:	ldr	r2, [sp, #36]	; 0x24
    a190:	ldr	r1, [sp, #32]
    a194:	add	sl, r0, sl
    a198:	ldr	r0, [sp, #28]
    a19c:	add	r8, r8, #1024	; 0x400
    a1a0:	add	r5, r2, #256	; 0x100
    a1a4:	ldr	r2, [sp, #24]
    a1a8:	add	r0, r0, #1024	; 0x400
    a1ac:	add	r1, r1, #256	; 0x100
    a1b0:	cmp	r5, r2
    a1b4:	blt	a120 <ReadSingleData+0x13cc>
    a1b8:	ldr	r0, [sp, #20]
    a1bc:	cmp	r5, r0
    a1c0:	bge	a468 <ReadSingleData+0x1714>
    a1c4:	sub	r4, r0, r5
    a1c8:	ldr	r0, [sp, #44]	; 0x2c
    a1cc:	ldr	r1, [sp, #40]	; 0x28
    a1d0:	add	r7, sp, #192	; 0xc0
    a1d4:	mov	r2, r4
    a1d8:	ldr	r3, [r0]
    a1dc:	mov	r0, r7
    a1e0:	bl	18b8 <fread@plt>
    a1e4:	mov	r8, sl
    a1e8:	add	r8, r0, sl
    a1ec:	cmp	r4, #1
    a1f0:	blt	b778 <ReadSingleData+0x2a24>
    a1f4:	mov	lr, #0
    a1f8:	cmp	r4, #4
    a1fc:	bcc	b5ac <ReadSingleData+0x2858>
    a200:	bic	lr, r4, #3
    a204:	mov	r1, #1
    a208:	mov	r9, r8
    a20c:	str	r4, [sp, #44]	; 0x2c
    a210:	subs	r2, lr, #4
    a214:	add	r2, r1, r2, lsr #2
    a218:	and	r0, r2, #1
    a21c:	str	r0, [sp, #24]
    a220:	beq	b554 <ReadSingleData+0x2800>
    a224:	ldr	r0, [sp, #20]
    a228:	ldr	r2, [sp, #36]	; 0x24
    a22c:	ldr	ip, [sp, #28]
    a230:	mov	r8, #16
    a234:	mov	sl, #32
    a238:	add	r4, sp, #72	; 0x48
    a23c:	mov	r6, r7
    a240:	sub	r2, r0, r2
    a244:	sub	r2, r2, #256	; 0x100
    a248:	bic	r2, r2, #3
    a24c:	sub	r2, r2, #4
    a250:	add	r1, r1, r2, lsr #2
    a254:	mvn	r3, r2, lsr #2
    a258:	mov	r2, #0
    a25c:	and	r1, r1, #1
    a260:	add	r3, r3, r1
    a264:	vld1.16	{d16}, [r6], r8
    a268:	add	r0, ip, #16
    a26c:	adds	r3, r3, #2
    a270:	add	r2, r2, #8
    a274:	vmovl.s16	q8, d16
    a278:	vcvt.f32.s32	q8, q8
    a27c:	vst1.32	{d16-d17}, [ip], sl
    a280:	ldr	r1, [r7, #8]
    a284:	ldr	r7, [r7, #12]
    a288:	str	r7, [sp, #76]	; 0x4c
    a28c:	str	r1, [sp, #72]	; 0x48
    a290:	mov	r7, r6
    a294:	vld1.16	{d16}, [r4 :64]
    a298:	vmovl.s16	q8, d16
    a29c:	vcvt.f32.s32	q8, q8
    a2a0:	vst1.32	{d16-d17}, [r0]
    a2a4:	bne	a264 <ReadSingleData+0x1510>
    a2a8:	b	b558 <ReadSingleData+0x2804>
    a2ac:	sub	r1, r5, #256	; 0x100
    a2b0:	str	r5, [sp, #20]
    a2b4:	add	r0, r7, #1024	; 0x400
    a2b8:	mov	r5, #0
    a2bc:	add	r6, sp, #192	; 0xc0
    a2c0:	mov	r9, #32
    a2c4:	add	r4, sp, #120	; 0x78
    a2c8:	mov	r8, r7
    a2cc:	mov	sl, #0
    a2d0:	str	r7, [sp, #12]
    a2d4:	str	r1, [sp, #24]
    a2d8:	mov	r1, #256	; 0x100
    a2dc:	add	r2, sp, #28
    a2e0:	stm	r2, {r0, r1, r5}
    a2e4:	ldr	r0, [sp, #44]	; 0x2c
    a2e8:	ldr	r1, [sp, #40]	; 0x28
    a2ec:	mov	r2, #256	; 0x100
    a2f0:	ldr	r3, [r0]
    a2f4:	mov	r0, r6
    a2f8:	bl	18b8 <fread@plt>
    a2fc:	mov	r1, r8
    a300:	mov	r2, #0
    a304:	add	r3, r6, r2
    a308:	add	r7, r1, #16
    a30c:	add	r2, r2, #16
    a310:	vld1.16	{d16}, [r3]!
    a314:	cmp	r2, #512	; 0x200
    a318:	vmovl.u16	q8, d16
    a31c:	vcvt.f32.u32	q8, q8
    a320:	vst1.32	{d16-d17}, [r1], r9
    a324:	ldr	r5, [r3]
    a328:	ldr	r3, [r3, #4]
    a32c:	str	r3, [sp, #124]	; 0x7c
    a330:	str	r5, [sp, #120]	; 0x78
    a334:	vld1.16	{d16}, [r4 :64]
    a338:	vmovl.u16	q8, d16
    a33c:	vcvt.f32.u32	q8, q8
    a340:	vst1.32	{d16-d17}, [r7]
    a344:	bne	a304 <ReadSingleData+0x15b0>
    a348:	ldr	r2, [sp, #36]	; 0x24
    a34c:	ldr	r1, [sp, #32]
    a350:	add	sl, r0, sl
    a354:	ldr	r0, [sp, #28]
    a358:	add	r8, r8, #1024	; 0x400
    a35c:	add	r5, r2, #256	; 0x100
    a360:	ldr	r2, [sp, #24]
    a364:	add	r0, r0, #1024	; 0x400
    a368:	add	r1, r1, #256	; 0x100
    a36c:	cmp	r5, r2
    a370:	blt	a2dc <ReadSingleData+0x1588>
    a374:	ldr	r0, [sp, #20]
    a378:	cmp	r5, r0
    a37c:	bge	a468 <ReadSingleData+0x1714>
    a380:	sub	r4, r0, r5
    a384:	ldr	r0, [sp, #44]	; 0x2c
    a388:	ldr	r1, [sp, #40]	; 0x28
    a38c:	add	r7, sp, #192	; 0xc0
    a390:	mov	r2, r4
    a394:	ldr	r3, [r0]
    a398:	mov	r0, r7
    a39c:	bl	18b8 <fread@plt>
    a3a0:	mov	r8, sl
    a3a4:	add	r8, r0, sl
    a3a8:	cmp	r4, #1
    a3ac:	blt	b778 <ReadSingleData+0x2a24>
    a3b0:	mov	lr, #0
    a3b4:	cmp	r4, #4
    a3b8:	bcc	b64c <ReadSingleData+0x28f8>
    a3bc:	bic	lr, r4, #3
    a3c0:	mov	r1, #1
    a3c4:	mov	r9, r8
    a3c8:	str	r4, [sp, #44]	; 0x2c
    a3cc:	subs	r2, lr, #4
    a3d0:	add	r2, r1, r2, lsr #2
    a3d4:	and	r0, r2, #1
    a3d8:	str	r0, [sp, #24]
    a3dc:	beq	b5f4 <ReadSingleData+0x28a0>
    a3e0:	ldr	r0, [sp, #20]
    a3e4:	ldr	r2, [sp, #36]	; 0x24
    a3e8:	ldr	ip, [sp, #28]
    a3ec:	mov	r8, #16
    a3f0:	mov	sl, #32
    a3f4:	add	r4, sp, #112	; 0x70
    a3f8:	mov	r6, r7
    a3fc:	sub	r2, r0, r2
    a400:	sub	r2, r2, #256	; 0x100
    a404:	bic	r2, r2, #3
    a408:	sub	r2, r2, #4
    a40c:	add	r1, r1, r2, lsr #2
    a410:	mvn	r3, r2, lsr #2
    a414:	mov	r2, #0
    a418:	and	r1, r1, #1
    a41c:	add	r3, r3, r1
    a420:	vld1.16	{d16}, [r6], r8
    a424:	add	r0, ip, #16
    a428:	adds	r3, r3, #2
    a42c:	add	r2, r2, #8
    a430:	vmovl.u16	q8, d16
    a434:	vcvt.f32.u32	q8, q8
    a438:	vst1.32	{d16-d17}, [ip], sl
    a43c:	ldr	r1, [r7, #8]
    a440:	ldr	r7, [r7, #12]
    a444:	str	r7, [sp, #116]	; 0x74
    a448:	str	r1, [sp, #112]	; 0x70
    a44c:	mov	r7, r6
    a450:	vld1.16	{d16}, [r4 :64]
    a454:	vmovl.u16	q8, d16
    a458:	vcvt.f32.u32	q8, q8
    a45c:	vst1.32	{d16-d17}, [r0]
    a460:	bne	a420 <ReadSingleData+0x16cc>
    a464:	b	b5f8 <ReadSingleData+0x28a4>
    a468:	ldr	r0, [sp, #40]	; 0x28
    a46c:	mov	r8, sl
    a470:	mov	sl, r0
    a474:	b	b77c <ReadSingleData+0x2a28>
    a478:	str	r5, [sp, #20]
    a47c:	add	r0, r7, #1024	; 0x400
    a480:	sub	r5, r5, #256	; 0x100
    a484:	mov	r9, #0
    a488:	mov	r1, #256	; 0x100
    a48c:	add	r6, sp, #192	; 0xc0
    a490:	mov	r8, #0
    a494:	str	r7, [sp, #12]
    a498:	mov	r4, r0
    a49c:	ldr	r0, [sp, #44]	; 0x2c
    a4a0:	mov	sl, r1
    a4a4:	ldr	r1, [sp, #40]	; 0x28
    a4a8:	mov	r2, #256	; 0x100
    a4ac:	ldr	r3, [r0]
    a4b0:	mov	r0, r6
    a4b4:	bl	18b8 <fread@plt>
    a4b8:	mov	r1, #0
    a4bc:	add	r2, r6, r1
    a4c0:	add	r3, r7, r1
    a4c4:	add	r1, r1, #32
    a4c8:	vld1.32	{d16-d17}, [r2]!
    a4cc:	cmp	r1, #1024	; 0x400
    a4d0:	vcvt.f32.s32	q8, q8
    a4d4:	vst1.32	{d16-d17}, [r3]!
    a4d8:	vld1.32	{d16-d17}, [r2]
    a4dc:	vcvt.f32.s32	q8, q8
    a4e0:	vst1.32	{d16-d17}, [r3]
    a4e4:	bne	a4bc <ReadSingleData+0x1768>
    a4e8:	mov	r2, r9
    a4ec:	add	r9, r9, #256	; 0x100
    a4f0:	add	r8, r0, r8
    a4f4:	add	r7, r7, #1024	; 0x400
    a4f8:	add	r0, r4, #1024	; 0x400
    a4fc:	add	r1, sl, #256	; 0x100
    a500:	cmp	r9, r5
    a504:	blt	a498 <ReadSingleData+0x1744>
    a508:	ldr	r5, [sp, #20]
    a50c:	str	r2, [sp, #36]	; 0x24
    a510:	cmp	r9, r5
    a514:	bge	b778 <ReadSingleData+0x2a24>
    a518:	ldr	r0, [sp, #44]	; 0x2c
    a51c:	ldr	r1, [sp, #40]	; 0x28
    a520:	sub	r7, r5, r9
    a524:	add	r6, sp, #192	; 0xc0
    a528:	mov	r2, r7
    a52c:	ldr	r3, [r0]
    a530:	mov	r0, r6
    a534:	bl	18b8 <fread@plt>
    a538:	add	r8, r0, r8
    a53c:	cmp	r7, #1
    a540:	blt	b778 <ReadSingleData+0x2a24>
    a544:	ldr	r3, [sp, #12]
    a548:	mov	r0, #0
    a54c:	cmp	r7, #4
    a550:	bcc	b6cc <ReadSingleData+0x2978>
    a554:	bic	r0, r7, #3
    a558:	mov	r2, #1
    a55c:	mov	lr, r7
    a560:	subs	r1, r0, #4
    a564:	add	r1, r2, r1, lsr #2
    a568:	and	ip, r1, #1
    a56c:	beq	b694 <ReadSingleData+0x2940>
    a570:	ldr	r1, [sp, #36]	; 0x24
    a574:	sub	r3, r5, r1
    a578:	sub	r3, r3, #256	; 0x100
    a57c:	bic	r3, r3, #3
    a580:	sub	r3, r3, #4
    a584:	add	r2, r2, r3, lsr #2
    a588:	mvn	r7, r3, lsr #2
    a58c:	and	r2, r2, #1
    a590:	add	r3, r7, r2
    a594:	mov	r2, #0
    a598:	mov	r7, #32
    a59c:	add	r5, r6, #16
    a5a0:	vld1.32	{d16-d17}, [r6], r7
    a5a4:	add	r1, r4, #16
    a5a8:	adds	r3, r3, #2
    a5ac:	add	r2, r2, #8
    a5b0:	vcvt.f32.s32	q8, q8
    a5b4:	vst1.32	{d16-d17}, [r4], r7
    a5b8:	vld1.32	{d16-d17}, [r5]
    a5bc:	vcvt.f32.s32	q8, q8
    a5c0:	vst1.32	{d16-d17}, [r1]
    a5c4:	bne	a59c <ReadSingleData+0x1848>
    a5c8:	b	b698 <ReadSingleData+0x2944>
    a5cc:	str	r5, [sp, #20]
    a5d0:	add	r0, r7, #1024	; 0x400
    a5d4:	sub	r5, r5, #256	; 0x100
    a5d8:	mov	r9, #0
    a5dc:	mov	r1, #256	; 0x100
    a5e0:	add	r6, sp, #192	; 0xc0
    a5e4:	mov	r8, #0
    a5e8:	str	r7, [sp, #12]
    a5ec:	mov	r4, r0
    a5f0:	ldr	r0, [sp, #44]	; 0x2c
    a5f4:	mov	sl, r1
    a5f8:	ldr	r1, [sp, #40]	; 0x28
    a5fc:	mov	r2, #256	; 0x100
    a600:	ldr	r3, [r0]
    a604:	mov	r0, r6
    a608:	bl	18b8 <fread@plt>
    a60c:	mov	r1, #0
    a610:	add	r2, r6, r1
    a614:	add	r3, r7, r1
    a618:	add	r1, r1, #32
    a61c:	vld1.32	{d16-d17}, [r2]!
    a620:	cmp	r1, #1024	; 0x400
    a624:	vcvt.f32.u32	q8, q8
    a628:	vst1.32	{d16-d17}, [r3]!
    a62c:	vld1.32	{d16-d17}, [r2]
    a630:	vcvt.f32.u32	q8, q8
    a634:	vst1.32	{d16-d17}, [r3]
    a638:	bne	a610 <ReadSingleData+0x18bc>
    a63c:	mov	r2, r9
    a640:	add	r9, r9, #256	; 0x100
    a644:	add	r8, r0, r8
    a648:	add	r7, r7, #1024	; 0x400
    a64c:	add	r0, r4, #1024	; 0x400
    a650:	add	r1, sl, #256	; 0x100
    a654:	cmp	r9, r5
    a658:	blt	a5ec <ReadSingleData+0x1898>
    a65c:	ldr	r5, [sp, #20]
    a660:	str	r2, [sp, #36]	; 0x24
    a664:	cmp	r9, r5
    a668:	bge	b778 <ReadSingleData+0x2a24>
    a66c:	ldr	r0, [sp, #44]	; 0x2c
    a670:	ldr	r1, [sp, #40]	; 0x28
    a674:	sub	r7, r5, r9
    a678:	add	r6, sp, #192	; 0xc0
    a67c:	mov	r2, r7
    a680:	ldr	r3, [r0]
    a684:	mov	r0, r6
    a688:	bl	18b8 <fread@plt>
    a68c:	add	r8, r0, r8
    a690:	cmp	r7, #1
    a694:	blt	b778 <ReadSingleData+0x2a24>
    a698:	ldr	r3, [sp, #12]
    a69c:	mov	r0, #0
    a6a0:	cmp	r7, #4
    a6a4:	bcc	b740 <ReadSingleData+0x29ec>
    a6a8:	bic	r0, r7, #3
    a6ac:	mov	r2, #1
    a6b0:	mov	lr, r7
    a6b4:	subs	r1, r0, #4
    a6b8:	add	r1, r2, r1, lsr #2
    a6bc:	and	ip, r1, #1
    a6c0:	beq	b708 <ReadSingleData+0x29b4>
    a6c4:	ldr	r1, [sp, #36]	; 0x24
    a6c8:	sub	r3, r5, r1
    a6cc:	sub	r3, r3, #256	; 0x100
    a6d0:	bic	r3, r3, #3
    a6d4:	sub	r3, r3, #4
    a6d8:	add	r2, r2, r3, lsr #2
    a6dc:	mvn	r7, r3, lsr #2
    a6e0:	and	r2, r2, #1
    a6e4:	add	r3, r7, r2
    a6e8:	mov	r2, #0
    a6ec:	mov	r7, #32
    a6f0:	add	r5, r6, #16
    a6f4:	vld1.32	{d16-d17}, [r6], r7
    a6f8:	add	r1, r4, #16
    a6fc:	adds	r3, r3, #2
    a700:	add	r2, r2, #8
    a704:	vcvt.f32.u32	q8, q8
    a708:	vst1.32	{d16-d17}, [r4], r7
    a70c:	vld1.32	{d16-d17}, [r5]
    a710:	vcvt.f32.u32	q8, q8
    a714:	vst1.32	{d16-d17}, [r1]
    a718:	bne	a6f0 <ReadSingleData+0x199c>
    a71c:	b	b70c <ReadSingleData+0x29b8>
    a720:	sub	r0, r5, #256	; 0x100
    a724:	lsl	r6, r5, #2
    a728:	str	r5, [sp, #20]
    a72c:	mov	r5, #0
    a730:	add	r9, sp, #192	; 0xc0
    a734:	mov	r8, #0
    a738:	str	r0, [sp, #36]	; 0x24
    a73c:	ldr	r3, [r4]
    a740:	mov	r0, r9
    a744:	mov	r1, sl
    a748:	mov	r2, #256	; 0x100
    a74c:	bl	18b8 <fread@plt>
    a750:	mov	r4, r0
    a754:	add	r0, r7, r5, lsl #2
    a758:	mov	r1, r9
    a75c:	mov	r2, #1024	; 0x400
    a760:	bl	181c <memcpy@plt>
    a764:	ldr	r0, [sp, #36]	; 0x24
    a768:	add	r8, r4, r8
    a76c:	ldr	r4, [sp, #44]	; 0x2c
    a770:	add	r5, r5, #256	; 0x100
    a774:	sub	r6, r6, #1024	; 0x400
    a778:	cmp	r5, r0
    a77c:	blt	a73c <ReadSingleData+0x19e8>
    a780:	mov	r1, sl
    a784:	ldr	sl, [sp, #20]
    a788:	cmp	r5, sl
    a78c:	bge	ab74 <ReadSingleData+0x1e20>
    a790:	mov	r0, r4
    a794:	sub	r4, sl, r5
    a798:	mov	sl, r1
    a79c:	ldr	r3, [r0]
    a7a0:	add	r0, sp, #192	; 0xc0
    a7a4:	mov	r2, r4
    a7a8:	bl	18b8 <fread@plt>
    a7ac:	add	r8, r0, r8
    a7b0:	cmp	r4, #1
    a7b4:	blt	b77c <ReadSingleData+0x2a28>
    a7b8:	add	r0, r7, r5, lsl #2
    a7bc:	add	r1, sp, #192	; 0xc0
    a7c0:	mov	r2, r6
    a7c4:	bl	181c <memcpy@plt>
    a7c8:	b	b77c <ReadSingleData+0x2a28>
    a7cc:	mov	r2, r7
    a7d0:	add	r0, r7, #1024	; 0x400
    a7d4:	str	r5, [sp, #20]
    a7d8:	sub	r7, r5, #256	; 0x100
    a7dc:	mov	r4, #0
    a7e0:	mov	r1, #256	; 0x100
    a7e4:	add	r6, sp, #192	; 0xc0
    a7e8:	mov	sl, #32
    a7ec:	mov	r8, #0
    a7f0:	mov	r5, r2
    a7f4:	str	r2, [sp, #12]
    a7f8:	mov	r9, r0
    a7fc:	ldr	r0, [sp, #44]	; 0x2c
    a800:	str	r1, [sp, #32]
    a804:	ldr	r1, [sp, #40]	; 0x28
    a808:	mov	r2, #256	; 0x100
    a80c:	str	r4, [sp, #36]	; 0x24
    a810:	ldr	r3, [r0]
    a814:	mov	r0, r6
    a818:	bl	18b8 <fread@plt>
    a81c:	mov	r1, #0
    a820:	mov	r2, r6
    a824:	add	r3, r2, #16
    a828:	vld1.64	{d16-d17}, [r2], sl
    a82c:	add	r4, r5, r1
    a830:	add	r1, r1, #16
    a834:	cmp	r1, #1024	; 0x400
    a838:	vcvt.f32.f64	s1, d17
    a83c:	vcvt.f32.f64	s0, d16
    a840:	vst1.32	{d0}, [r4]!
    a844:	vld1.64	{d16-d17}, [r3]
    a848:	vcvt.f32.f64	s1, d17
    a84c:	vcvt.f32.f64	s0, d16
    a850:	vstr	d0, [r4]
    a854:	bne	a824 <ReadSingleData+0x1ad0>
    a858:	ldr	r2, [sp, #36]	; 0x24
    a85c:	ldr	r1, [sp, #32]
    a860:	add	r8, r0, r8
    a864:	add	r5, r5, #1024	; 0x400
    a868:	add	r0, r9, #1024	; 0x400
    a86c:	add	r4, r2, #256	; 0x100
    a870:	add	r1, r1, #256	; 0x100
    a874:	cmp	r4, r7
    a878:	blt	a7f8 <ReadSingleData+0x1aa4>
    a87c:	ldr	r5, [sp, #20]
    a880:	cmp	r4, r5
    a884:	bge	b778 <ReadSingleData+0x2a24>
    a888:	ldr	r0, [sp, #44]	; 0x2c
    a88c:	ldr	sl, [sp, #40]	; 0x28
    a890:	sub	r7, r5, r4
    a894:	add	r6, sp, #192	; 0xc0
    a898:	mov	r2, r7
    a89c:	ldr	r3, [r0]
    a8a0:	mov	r0, r6
    a8a4:	mov	r1, sl
    a8a8:	bl	18b8 <fread@plt>
    a8ac:	add	r8, r0, r8
    a8b0:	cmp	r7, #1
    a8b4:	blt	b77c <ReadSingleData+0x2a28>
    a8b8:	ldr	r3, [sp, #12]
    a8bc:	mov	lr, #0
    a8c0:	beq	b7d0 <ReadSingleData+0x2a7c>
    a8c4:	bic	lr, r7, #1
    a8c8:	mov	r1, #1
    a8cc:	str	r7, [sp, #44]	; 0x2c
    a8d0:	subs	r2, lr, #2
    a8d4:	add	r2, r1, r2, lsr #1
    a8d8:	and	ip, r2, #1
    a8dc:	beq	b790 <ReadSingleData+0x2a3c>
    a8e0:	ldr	r0, [sp, #36]	; 0x24
    a8e4:	mov	r7, #32
    a8e8:	sub	r2, r5, r0
    a8ec:	mov	r5, #16
    a8f0:	sub	r2, r2, #256	; 0x100
    a8f4:	bic	r2, r2, #1
    a8f8:	sub	r2, r2, #2
    a8fc:	add	r1, r1, r2, lsr #1
    a900:	mvn	r3, r2, lsr #1
    a904:	mov	r2, #0
    a908:	and	r1, r1, #1
    a90c:	add	r3, r3, r1
    a910:	mov	r1, r9
    a914:	add	r0, r6, #16
    a918:	vld1.64	{d16-d17}, [r6], r7
    a91c:	adds	r3, r3, #2
    a920:	add	r2, r2, #4
    a924:	vcvt.f32.f64	s1, d17
    a928:	vcvt.f32.f64	s0, d16
    a92c:	vst1.32	{d0}, [r1], r5
    a930:	vld1.64	{d16-d17}, [r0]
    a934:	vcvt.f32.f64	s1, d17
    a938:	vcvt.f32.f64	s0, d16
    a93c:	vstr	d0, [r9, #8]
    a940:	mov	r9, r1
    a944:	bne	a914 <ReadSingleData+0x1bc0>
    a948:	b	b794 <ReadSingleData+0x2a40>
    a94c:	sub	r1, r5, #256	; 0x100
    a950:	add	r0, r7, #1024	; 0x400
    a954:	mov	r4, #0
    a958:	mov	r8, #32
    a95c:	mov	r6, #0
    a960:	str	r9, [sp, #8]
    a964:	str	r5, [sp, #20]
    a968:	str	r7, [sp, #12]
    a96c:	str	r1, [sp, #16]
    a970:	mov	r1, #256	; 0x100
    a974:	add	r2, sp, #24
    a978:	stm	r2, {r0, r1, r4}
    a97c:	ldr	r0, [sp, #44]	; 0x2c
    a980:	add	r4, sp, #192	; 0xc0
    a984:	mov	r1, sl
    a988:	mov	r2, #256	; 0x100
    a98c:	ldr	r3, [r0]
    a990:	mov	r0, r4
    a994:	bl	18b8 <fread@plt>
    a998:	mov	r5, #0
    a99c:	mov	sl, r4
    a9a0:	str	r0, [sp, #36]	; 0x24
    a9a4:	vld1.64	{d8-d9}, [r4], r8
    a9a8:	vmov.32	r0, d9[0]
    a9ac:	vmov.32	r1, d9[1]
    a9b0:	bl	71774 <__aeabi_l2f>
    a9b4:	vmov.32	r2, d8[0]
    a9b8:	vmov.32	r1, d8[1]
    a9bc:	vmov	s17, r0
    a9c0:	mov	r0, r2
    a9c4:	bl	71774 <__aeabi_l2f>
    a9c8:	vmov	s16, r0
    a9cc:	add	r9, r7, r5
    a9d0:	add	r0, sl, #16
    a9d4:	vst1.32	{d8}, [r9]!
    a9d8:	vld1.64	{d8-d9}, [r0]
    a9dc:	vmov.32	r0, d9[0]
    a9e0:	vmov.32	r1, d9[1]
    a9e4:	bl	71774 <__aeabi_l2f>
    a9e8:	vmov.32	r2, d8[0]
    a9ec:	vmov.32	r1, d8[1]
    a9f0:	vmov	s17, r0
    a9f4:	mov	r0, r2
    a9f8:	bl	71774 <__aeabi_l2f>
    a9fc:	vmov	s16, r0
    aa00:	add	r5, r5, #16
    aa04:	mov	sl, r4
    aa08:	cmp	r5, #1024	; 0x400
    aa0c:	vstr	d8, [r9]
    aa10:	bne	a9a4 <ReadSingleData+0x1c50>
    aa14:	ldr	r0, [sp, #36]	; 0x24
    aa18:	ldr	r2, [sp, #32]
    aa1c:	ldr	r1, [sp, #28]
    aa20:	ldr	sl, [sp, #40]	; 0x28
    aa24:	add	r7, r7, #1024	; 0x400
    aa28:	add	r6, r0, r6
    aa2c:	ldr	r0, [sp, #24]
    aa30:	add	r4, r2, #256	; 0x100
    aa34:	ldr	r2, [sp, #16]
    aa38:	add	r1, r1, #256	; 0x100
    aa3c:	add	r0, r0, #1024	; 0x400
    aa40:	cmp	r4, r2
    aa44:	blt	a974 <ReadSingleData+0x1c20>
    aa48:	ldr	r5, [sp, #20]
    aa4c:	cmp	r4, r5
    aa50:	bge	ab7c <ReadSingleData+0x1e28>
    aa54:	ldr	r0, [sp, #44]	; 0x2c
    aa58:	sub	r7, r5, r4
    aa5c:	add	r9, sp, #192	; 0xc0
    aa60:	mov	r1, sl
    aa64:	mov	r2, r7
    aa68:	ldr	r3, [r0]
    aa6c:	mov	r0, r9
    aa70:	bl	18b8 <fread@plt>
    aa74:	str	r7, [sp, #16]
    aa78:	cmp	r7, #1
    aa7c:	ldr	r7, [sp, #12]
    aa80:	mov	r8, r6
    aa84:	add	r8, r0, r6
    aa88:	blt	b878 <ReadSingleData+0x2b24>
    aa8c:	mov	r2, #0
    aa90:	beq	b880 <ReadSingleData+0x2b2c>
    aa94:	ldr	r0, [sp, #16]
    aa98:	str	r8, [sp, #36]	; 0x24
    aa9c:	bic	r0, r0, #1
    aaa0:	str	r0, [sp, #4]
    aaa4:	subs	r1, r0, #2
    aaa8:	mov	r0, #1
    aaac:	add	r1, r0, r1, lsr #1
    aab0:	and	r1, r1, #1
    aab4:	str	r1, [sp]
    aab8:	beq	b810 <ReadSingleData+0x2abc>
    aabc:	ldr	r1, [sp, #32]
    aac0:	ldr	sl, [sp, #24]
    aac4:	mov	r6, #0
    aac8:	sub	r1, r5, r1
    aacc:	mov	r5, r9
    aad0:	mov	r8, sl
    aad4:	sub	r1, r1, #256	; 0x100
    aad8:	bic	r1, r1, #1
    aadc:	sub	r1, r1, #2
    aae0:	add	r0, r0, r1, lsr #1
    aae4:	mvn	r2, r1, lsr #1
    aae8:	and	r0, r0, #1
    aaec:	add	r7, r2, r0
    aaf0:	mov	r0, #32
    aaf4:	vld1.64	{d8-d9}, [r5], r0
    aaf8:	vmov.32	r0, d9[0]
    aafc:	vmov.32	r1, d9[1]
    ab00:	bl	71774 <__aeabi_l2f>
    ab04:	vmov.32	r2, d8[0]
    ab08:	vmov.32	r1, d8[1]
    ab0c:	vmov	s17, r0
    ab10:	mov	r0, r2
    ab14:	bl	71774 <__aeabi_l2f>
    ab18:	vmov	s16, r0
    ab1c:	mov	r0, #16
    ab20:	vst1.32	{d8}, [r8], r0
    ab24:	add	r0, r9, #16
    ab28:	vld1.64	{d8-d9}, [r0]
    ab2c:	vmov.32	r0, d9[0]
    ab30:	vmov.32	r1, d9[1]
    ab34:	bl	71774 <__aeabi_l2f>
    ab38:	vmov.32	r2, d8[0]
    ab3c:	vmov.32	r1, d8[1]
    ab40:	vmov	s17, r0
    ab44:	mov	r0, r2
    ab48:	bl	71774 <__aeabi_l2f>
    ab4c:	vmov	s16, r0
    ab50:	adds	r7, r7, #2
    ab54:	add	r6, r6, #4
    ab58:	mov	r9, r5
    ab5c:	vstr	d8, [sl, #8]
    ab60:	mov	sl, r8
    ab64:	bne	aaf0 <ReadSingleData+0x1d9c>
    ab68:	b	b814 <ReadSingleData+0x2ac0>
    ab6c:	ldr	r7, [sp, #12]
    ab70:	b	b06c <ReadSingleData+0x2318>
    ab74:	mov	sl, r1
    ab78:	b	b77c <ReadSingleData+0x2a28>
    ab7c:	ldr	r7, [sp, #12]
    ab80:	mov	r8, r6
    ab84:	b	b06c <ReadSingleData+0x2318>
    ab88:	ldr	r8, [sp, #36]	; 0x24
    ab8c:	cmp	r9, #13
    ab90:	beq	b07c <ReadSingleData+0x2328>
    ab94:	b	b77c <ReadSingleData+0x2a28>
    ab98:	mov	r9, r7
    ab9c:	mov	r1, #0
    aba0:	ldr	r8, [sp, #36]	; 0x24
    aba4:	cmp	ip, #0
    aba8:	mov	r7, r9
    abac:	beq	abd4 <ReadSingleData+0x1e80>
    abb0:	ldr	r0, [r4, r1]
    abb4:	str	r0, [sp, #128]	; 0x80
    abb8:	add	r0, sp, #128	; 0x80
    abbc:	vld1.32	{d16[0]}, [r0 :32]
    abc0:	add	r0, r7, r1, lsl #2
    abc4:	vmovl.s8	q8, d16
    abc8:	vmovl.s16	q8, d16
    abcc:	vcvt.f32.s32	q8, q8
    abd0:	vst1.32	{d16-d17}, [r0]
    abd4:	ldr	r5, [sp, #20]
    abd8:	cmp	lr, r5
    abdc:	beq	b77c <ReadSingleData+0x2a28>
    abe0:	add	r2, r7, lr, lsl #2
    abe4:	add	r1, r4, lr
    abe8:	sub	r0, r5, lr
    abec:	ldrsb	r3, [r1], #1
    abf0:	subs	r0, r0, #1
    abf4:	vmov	s0, r3
    abf8:	vcvt.f32.s32	s0, s0
    abfc:	vstmia	r2!, {s0}
    ac00:	bne	abec <ReadSingleData+0x1e98>
    ac04:	b	b77c <ReadSingleData+0x2a28>
    ac08:	mov	r9, r7
    ac0c:	mov	r1, #0
    ac10:	ldr	r8, [sp, #36]	; 0x24
    ac14:	cmp	ip, #0
    ac18:	mov	r7, r9
    ac1c:	beq	ac44 <ReadSingleData+0x1ef0>
    ac20:	ldr	r0, [r4, r1]
    ac24:	str	r0, [sp, #160]	; 0xa0
    ac28:	add	r0, sp, #160	; 0xa0
    ac2c:	vld1.32	{d16[0]}, [r0 :32]
    ac30:	add	r0, r7, r1, lsl #2
    ac34:	vmovl.u8	q8, d16
    ac38:	vmovl.u16	q8, d16
    ac3c:	vcvt.f32.u32	q8, q8
    ac40:	vst1.32	{d16-d17}, [r0]
    ac44:	ldr	r5, [sp, #20]
    ac48:	cmp	lr, r5
    ac4c:	beq	b77c <ReadSingleData+0x2a28>
    ac50:	add	r2, r7, lr, lsl #2
    ac54:	add	r1, r4, lr
    ac58:	sub	r0, r5, lr
    ac5c:	ldrb	r3, [r1], #1
    ac60:	subs	r0, r0, #1
    ac64:	vmov	s0, r3
    ac68:	vcvt.f32.u32	s0, s0
    ac6c:	vstmia	r2!, {s0}
    ac70:	bne	ac5c <ReadSingleData+0x1f08>
    ac74:	b	b77c <ReadSingleData+0x2a28>
    ac78:	ldr	r7, [sp, #12]
    ac7c:	mov	r8, r5
    ac80:	mov	r5, r9
    ac84:	b	b06c <ReadSingleData+0x2318>
    ac88:	mov	r2, #0
    ac8c:	ldr	r3, [sp, #12]
    ac90:	cmp	ip, #0
    ac94:	beq	acc0 <ReadSingleData+0x1f6c>
    ac98:	ldr	r0, [r6, r2]
    ac9c:	str	r0, [sp, #140]	; 0x8c
    aca0:	add	r0, sp, #140	; 0x8c
    aca4:	vld1.32	{d16[0]}, [r0 :32]
    aca8:	add	r0, r2, r5
    acac:	add	r0, r3, r0, lsl #2
    acb0:	vmovl.s8	q8, d16
    acb4:	vmovl.s16	q8, d16
    acb8:	vcvt.f32.s32	q8, q8
    acbc:	vst1.32	{d16-d17}, [r0]
    acc0:	ldr	r0, [sp, #44]	; 0x2c
    acc4:	cmp	r0, lr
    acc8:	beq	b778 <ReadSingleData+0x2a24>
    accc:	ldr	r0, [sp, #32]
    acd0:	add	r1, r6, lr
    acd4:	add	r0, lr, r0
    acd8:	add	r2, r3, r0, lsl #2
    acdc:	ldr	r0, [sp, #20]
    ace0:	ldr	r3, [sp, #36]	; 0x24
    ace4:	sub	r0, r0, r3
    ace8:	sub	r0, r0, lr
    acec:	sub	r0, r0, #256	; 0x100
    acf0:	ldrsb	r3, [r1], #1
    acf4:	subs	r0, r0, #1
    acf8:	vmov	s0, r3
    acfc:	vcvt.f32.s32	s0, s0
    ad00:	vstmia	r2!, {s0}
    ad04:	bne	acf0 <ReadSingleData+0x1f9c>
    ad08:	b	b778 <ReadSingleData+0x2a24>
    ad0c:	mov	r2, #0
    ad10:	ldr	r0, [sp, #24]
    ad14:	ldr	r3, [sp, #12]
    ad18:	mov	r8, r9
    ad1c:	cmp	r0, #0
    ad20:	beq	ad4c <ReadSingleData+0x1ff8>
    ad24:	ldr	r0, [r6, r2]
    ad28:	str	r0, [sp, #172]	; 0xac
    ad2c:	add	r0, sp, #172	; 0xac
    ad30:	vld1.32	{d16[0]}, [r0 :32]
    ad34:	add	r0, r2, r4
    ad38:	add	r0, r3, r0, lsl #2
    ad3c:	vmovl.u8	q8, d16
    ad40:	vmovl.u16	q8, d16
    ad44:	vcvt.f32.u32	q8, q8
    ad48:	vst1.32	{d16-d17}, [r0]
    ad4c:	ldr	r0, [sp, #44]	; 0x2c
    ad50:	ldr	r5, [sp, #20]
    ad54:	cmp	r0, lr
    ad58:	beq	b77c <ReadSingleData+0x2a28>
    ad5c:	ldr	r0, [sp, #32]
    ad60:	add	r1, r6, lr
    ad64:	add	r0, lr, r0
    ad68:	add	r2, r3, r0, lsl #2
    ad6c:	ldr	r0, [sp, #36]	; 0x24
    ad70:	sub	r0, r5, r0
    ad74:	sub	r0, r0, lr
    ad78:	sub	r0, r0, #256	; 0x100
    ad7c:	ldrb	r3, [r1], #1
    ad80:	subs	r0, r0, #1
    ad84:	vmov	s0, r3
    ad88:	vcvt.f32.u32	s0, s0
    ad8c:	vstmia	r2!, {s0}
    ad90:	bne	ad7c <ReadSingleData+0x2028>
    ad94:	b	b77c <ReadSingleData+0x2a28>
    ad98:	mov	r1, #0
    ad9c:	ldr	r8, [sp, #36]	; 0x24
    ada0:	cmp	ip, #0
    ada4:	beq	add8 <ReadSingleData+0x2084>
    ada8:	add	r0, sp, #192	; 0xc0
    adac:	ldr	r2, [r0, r1, lsl #1]
    adb0:	add	r0, r0, r1, lsl #1
    adb4:	str	r2, [sp, #48]	; 0x30
    adb8:	ldr	r0, [r0, #4]
    adbc:	str	r0, [sp, #52]	; 0x34
    adc0:	add	r0, sp, #48	; 0x30
    adc4:	vld1.16	{d16}, [r0 :64]
    adc8:	add	r0, sl, r1, lsl #2
    adcc:	vmovl.s16	q8, d16
    add0:	vcvt.f32.s32	q8, q8
    add4:	vst1.32	{d16-d17}, [r0]
    add8:	ldr	r5, [sp, #20]
    addc:	cmp	lr, r5
    ade0:	beq	b778 <ReadSingleData+0x2a24>
    ade4:	add	r0, sp, #192	; 0xc0
    ade8:	add	r1, sl, lr, lsl #2
    adec:	sub	r2, r5, lr
    adf0:	add	r0, r0, lr, lsl #1
    adf4:	ldrsh	r3, [r0], #2
    adf8:	subs	r2, r2, #1
    adfc:	vmov	s0, r3
    ae00:	vcvt.f32.s32	s0, s0
    ae04:	vstmia	r1!, {s0}
    ae08:	bne	adf4 <ReadSingleData+0x20a0>
    ae0c:	b	b778 <ReadSingleData+0x2a24>
    ae10:	mov	r1, #0
    ae14:	ldr	r8, [sp, #36]	; 0x24
    ae18:	cmp	ip, #0
    ae1c:	beq	ae50 <ReadSingleData+0x20fc>
    ae20:	add	r0, sp, #192	; 0xc0
    ae24:	ldr	r2, [r0, r1, lsl #1]
    ae28:	add	r0, r0, r1, lsl #1
    ae2c:	str	r2, [sp, #88]	; 0x58
    ae30:	ldr	r0, [r0, #4]
    ae34:	str	r0, [sp, #92]	; 0x5c
    ae38:	add	r0, sp, #88	; 0x58
    ae3c:	vld1.16	{d16}, [r0 :64]
    ae40:	add	r0, sl, r1, lsl #2
    ae44:	vmovl.u16	q8, d16
    ae48:	vcvt.f32.u32	q8, q8
    ae4c:	vst1.32	{d16-d17}, [r0]
    ae50:	ldr	r5, [sp, #20]
    ae54:	cmp	lr, r5
    ae58:	beq	b778 <ReadSingleData+0x2a24>
    ae5c:	add	r0, sp, #192	; 0xc0
    ae60:	add	r1, sl, lr, lsl #2
    ae64:	sub	r2, r5, lr
    ae68:	add	r0, r0, lr, lsl #1
    ae6c:	ldrh	r3, [r0], #2
    ae70:	subs	r2, r2, #1
    ae74:	vmov	s0, r3
    ae78:	vcvt.f32.u32	s0, s0
    ae7c:	vstmia	r1!, {s0}
    ae80:	bne	ae6c <ReadSingleData+0x2118>
    ae84:	b	b778 <ReadSingleData+0x2a24>
    ae88:	mov	r1, #0
    ae8c:	cmp	ip, #0
    ae90:	mov	r7, r9
    ae94:	beq	aeb0 <ReadSingleData+0x215c>
    ae98:	add	r2, sp, #192	; 0xc0
    ae9c:	add	r2, r2, r1, lsl #2
    aea0:	add	r1, r7, r1, lsl #2
    aea4:	vld1.32	{d16-d17}, [r2]
    aea8:	vcvt.f32.s32	q8, q8
    aeac:	vst1.32	{d16-d17}, [r1]
    aeb0:	mov	r5, lr
    aeb4:	cmp	r0, lr
    aeb8:	beq	b77c <ReadSingleData+0x2a28>
    aebc:	add	r1, sp, #192	; 0xc0
    aec0:	add	r2, r7, r0, lsl #2
    aec4:	add	r1, r1, r0, lsl #2
    aec8:	sub	r0, r5, r0
    aecc:	ldr	r3, [r1], #4
    aed0:	subs	r0, r0, #1
    aed4:	vmov	s0, r3
    aed8:	vcvt.f32.s32	s0, s0
    aedc:	vstmia	r2!, {s0}
    aee0:	bne	aecc <ReadSingleData+0x2178>
    aee4:	b	b77c <ReadSingleData+0x2a28>
    aee8:	mov	r1, #0
    aeec:	cmp	ip, #0
    aef0:	mov	r7, r9
    aef4:	beq	af10 <ReadSingleData+0x21bc>
    aef8:	add	r2, sp, #192	; 0xc0
    aefc:	add	r2, r2, r1, lsl #2
    af00:	add	r1, r7, r1, lsl #2
    af04:	vld1.32	{d16-d17}, [r2]
    af08:	vcvt.f32.u32	q8, q8
    af0c:	vst1.32	{d16-d17}, [r1]
    af10:	mov	r5, lr
    af14:	cmp	r0, lr
    af18:	beq	b77c <ReadSingleData+0x2a28>
    af1c:	add	r1, sp, #192	; 0xc0
    af20:	add	r2, r7, r0, lsl #2
    af24:	add	r1, r1, r0, lsl #2
    af28:	sub	r0, r5, r0
    af2c:	ldr	r3, [r1], #4
    af30:	subs	r0, r0, #1
    af34:	vmov	s0, r3
    af38:	vcvt.f32.u32	s0, s0
    af3c:	vstmia	r2!, {s0}
    af40:	bne	af2c <ReadSingleData+0x21d8>
    af44:	b	b77c <ReadSingleData+0x2a28>
    af48:	mov	r1, #0
    af4c:	cmp	ip, #0
    af50:	mov	r7, sl
    af54:	beq	af74 <ReadSingleData+0x2220>
    af58:	add	r0, sp, #192	; 0xc0
    af5c:	add	r0, r0, r1, lsl #3
    af60:	vld1.64	{d16-d17}, [r0]
    af64:	add	r0, r7, r1, lsl #2
    af68:	vcvt.f32.f64	s1, d17
    af6c:	vcvt.f32.f64	s0, d16
    af70:	vstr	d0, [r0]
    af74:	ldr	sl, [sp, #40]	; 0x28
    af78:	mov	r5, r9
    af7c:	cmp	lr, r9
    af80:	beq	b77c <ReadSingleData+0x2a28>
    af84:	add	r0, sp, #192	; 0xc0
    af88:	add	r2, r7, lr, lsl #2
    af8c:	add	r1, r0, lr, lsl #3
    af90:	sub	r0, r5, lr
    af94:	vldr	d16, [r1]
    af98:	add	r1, r1, #8
    af9c:	subs	r0, r0, #1
    afa0:	vcvt.f32.f64	s0, d16
    afa4:	vstr	s0, [r2]
    afa8:	add	r2, r2, #4
    afac:	bne	af94 <ReadSingleData+0x2240>
    afb0:	b	b77c <ReadSingleData+0x2a28>
    afb4:	mov	r4, #0
    afb8:	ldr	r0, [sp, #28]
    afbc:	ldr	sl, [sp, #40]	; 0x28
    afc0:	ldr	r7, [sp, #12]
    afc4:	ldr	r9, [sp, #8]
    afc8:	cmp	r0, #0
    afcc:	beq	b008 <ReadSingleData+0x22b4>
    afd0:	add	r0, sp, #192	; 0xc0
    afd4:	add	r0, r0, r4, lsl #3
    afd8:	vld1.64	{d8-d9}, [r0]
    afdc:	vmov.32	r0, d9[0]
    afe0:	vmov.32	r1, d9[1]
    afe4:	bl	71774 <__aeabi_l2f>
    afe8:	vmov.32	r2, d8[0]
    afec:	vmov.32	r1, d8[1]
    aff0:	vmov	s17, r0
    aff4:	mov	r0, r2
    aff8:	bl	71774 <__aeabi_l2f>
    affc:	vmov	s16, r0
    b000:	add	r0, r7, r4, lsl #2
    b004:	vstr	d8, [r0]
    b008:	ldr	r5, [sp, #20]
    b00c:	ldr	r1, [sp, #32]
    b010:	cmp	r1, r5
    b014:	bne	b02c <ReadSingleData+0x22d8>
    b018:	ldr	r8, [sp, #36]	; 0x24
    b01c:	ldr	r4, [sp, #44]	; 0x2c
    b020:	cmp	r9, #13
    b024:	beq	b07c <ReadSingleData+0x2328>
    b028:	b	b77c <ReadSingleData+0x2a28>
    b02c:	add	r0, sp, #192	; 0xc0
    b030:	mov	r9, r7
    b034:	add	r4, r0, r1, lsl #3
    b038:	mov	r0, r5
    b03c:	add	r5, r7, r1, lsl #2
    b040:	mov	r7, r0
    b044:	sub	r6, r0, r1
    b048:	ldrd	r0, [r4]
    b04c:	bl	71774 <__aeabi_l2f>
    b050:	str	r0, [r5], #4
    b054:	add	r4, r4, #8
    b058:	subs	r6, r6, #1
    b05c:	bne	b048 <ReadSingleData+0x22f4>
    b060:	ldr	r8, [sp, #36]	; 0x24
    b064:	mov	r5, r7
    b068:	mov	r7, r9
    b06c:	ldr	r4, [sp, #44]	; 0x2c
    b070:	ldr	r9, [sp, #8]
    b074:	cmp	r9, #13
    b078:	bne	b77c <ReadSingleData+0x2a28>
    b07c:	ldr	r0, [r4, #20]
    b080:	cmp	r0, #0
    b084:	beq	b0d4 <ReadSingleData+0x2380>
    b088:	cmp	r5, #256	; 0x100
    b08c:	bgt	b1cc <ReadSingleData+0x2478>
    b090:	ldr	r3, [r4]
    b094:	add	r4, sp, #192	; 0xc0
    b098:	mov	r1, sl
    b09c:	mov	r2, r5
    b0a0:	mov	r0, r4
    b0a4:	bl	18b8 <fread@plt>
    b0a8:	add	r8, r0, r8
    b0ac:	cmp	r5, #1
    b0b0:	blt	b77c <ReadSingleData+0x2a28>
    b0b4:	mov	r0, r4
    b0b8:	bl	1bd4 <Mat_uint64Swap>
    b0bc:	bl	71764 <__aeabi_ul2f>
    b0c0:	str	r0, [r7], #4
    b0c4:	add	r4, r4, #8
    b0c8:	subs	r5, r5, #1
    b0cc:	bne	b0b4 <ReadSingleData+0x2360>
    b0d0:	b	b77c <ReadSingleData+0x2a28>
    b0d4:	cmp	r5, #256	; 0x100
    b0d8:	str	r8, [sp, #36]	; 0x24
    b0dc:	bgt	b2ac <ReadSingleData+0x2558>
    b0e0:	ldr	r3, [r4]
    b0e4:	add	r8, sp, #192	; 0xc0
    b0e8:	mov	r1, sl
    b0ec:	mov	r2, r5
    b0f0:	mov	r0, r8
    b0f4:	bl	18b8 <fread@plt>
    b0f8:	ldr	r1, [sp, #36]	; 0x24
    b0fc:	cmp	r5, #1
    b100:	add	r1, r0, r1
    b104:	str	r1, [sp, #36]	; 0x24
    b108:	blt	b54c <ReadSingleData+0x27f8>
    b10c:	mov	r1, #0
    b110:	beq	b520 <ReadSingleData+0x27cc>
    b114:	bic	r0, r5, #1
    b118:	mov	r1, #1
    b11c:	str	r7, [sp, #12]
    b120:	str	r5, [sp, #20]
    b124:	str	r0, [sp, #44]	; 0x2c
    b128:	subs	r0, r0, #2
    b12c:	add	r0, r1, r0, lsr #1
    b130:	and	r1, r0, #1
    b134:	str	r1, [sp, #32]
    b138:	beq	b4c0 <ReadSingleData+0x276c>
    b13c:	ldr	sl, [sp, #12]
    b140:	sub	r7, r0, r1
    b144:	mov	r6, #0
    b148:	mov	r9, #16
    b14c:	mov	r4, r8
    b150:	mov	r5, sl
    b154:	mov	r0, #32
    b158:	vld1.64	{d8-d9}, [r4], r0
    b15c:	vmov.32	r0, d9[0]
    b160:	vmov.32	r1, d9[1]
    b164:	bl	71764 <__aeabi_ul2f>
    b168:	vmov.32	r2, d8[0]
    b16c:	vmov.32	r1, d8[1]
    b170:	vmov	s17, r0
    b174:	mov	r0, r2
    b178:	bl	71764 <__aeabi_ul2f>
    b17c:	vmov	s16, r0
    b180:	add	r0, r8, #16
    b184:	vst1.32	{d8}, [r5], r9
    b188:	vld1.64	{d8-d9}, [r0]
    b18c:	vmov.32	r0, d9[0]
    b190:	vmov.32	r1, d9[1]
    b194:	bl	71764 <__aeabi_ul2f>
    b198:	vmov.32	r2, d8[0]
    b19c:	vmov.32	r1, d8[1]
    b1a0:	vmov	s17, r0
    b1a4:	mov	r0, r2
    b1a8:	bl	71764 <__aeabi_ul2f>
    b1ac:	vmov	s16, r0
    b1b0:	subs	r7, r7, #2
    b1b4:	add	r6, r6, #4
    b1b8:	mov	r8, r4
    b1bc:	vstr	d8, [sl, #8]
    b1c0:	mov	sl, r5
    b1c4:	bne	b154 <ReadSingleData+0x2400>
    b1c8:	b	b4c4 <ReadSingleData+0x2770>
    b1cc:	sub	r0, r5, #256	; 0x100
    b1d0:	mov	sl, r7
    b1d4:	add	r1, r7, #1024	; 0x400
    b1d8:	str	r5, [sp, #20]
    b1dc:	str	r0, [sp, #36]	; 0x24
    b1e0:	mov	r0, #0
    b1e4:	mov	r7, r1
    b1e8:	ldr	r3, [r4]
    b1ec:	ldr	r1, [sp, #40]	; 0x28
    b1f0:	add	r4, sp, #192	; 0xc0
    b1f4:	mov	r9, r0
    b1f8:	mov	r2, #256	; 0x100
    b1fc:	mov	r0, r4
    b200:	bl	18b8 <fread@plt>
    b204:	mov	r6, r0
    b208:	mov	r5, #0
    b20c:	mov	r0, r4
    b210:	bl	1bd4 <Mat_uint64Swap>
    b214:	bl	71764 <__aeabi_ul2f>
    b218:	str	r0, [sl, r5]
    b21c:	add	r5, r5, #4
    b220:	add	r4, r4, #8
    b224:	cmp	r5, #1024	; 0x400
    b228:	bne	b20c <ReadSingleData+0x24b8>
    b22c:	ldr	r2, [sp, #36]	; 0x24
    b230:	ldr	r4, [sp, #44]	; 0x2c
    b234:	add	r0, r9, #256	; 0x100
    b238:	add	r8, r6, r8
    b23c:	add	sl, sl, #1024	; 0x400
    b240:	add	r1, r7, #1024	; 0x400
    b244:	cmp	r0, r2
    b248:	blt	b1e4 <ReadSingleData+0x2490>
    b24c:	ldr	r5, [sp, #20]
    b250:	cmp	r0, r5
    b254:	bge	b778 <ReadSingleData+0x2a24>
    b258:	ldr	sl, [sp, #40]	; 0x28
    b25c:	ldr	r3, [r4]
    b260:	sub	r6, r5, r0
    b264:	add	r4, sp, #192	; 0xc0
    b268:	mov	r0, r4
    b26c:	mov	r2, r6
    b270:	mov	r1, sl
    b274:	bl	18b8 <fread@plt>
    b278:	add	r8, r0, r8
    b27c:	cmp	r6, #1
    b280:	blt	b77c <ReadSingleData+0x2a28>
    b284:	sub	r0, r5, r9
    b288:	sub	r5, r0, #256	; 0x100
    b28c:	mov	r0, r4
    b290:	bl	1bd4 <Mat_uint64Swap>
    b294:	bl	71764 <__aeabi_ul2f>
    b298:	str	r0, [r7], #4
    b29c:	add	r4, r4, #8
    b2a0:	subs	r5, r5, #1
    b2a4:	bne	b28c <ReadSingleData+0x2538>
    b2a8:	b	b77c <ReadSingleData+0x2a28>
    b2ac:	sub	r1, r5, #256	; 0x100
    b2b0:	add	r0, r7, #1024	; 0x400
    b2b4:	mov	r9, #0
    b2b8:	mov	r8, #32
    b2bc:	str	r5, [sp, #20]
    b2c0:	str	r7, [sp, #12]
    b2c4:	str	r1, [sp, #16]
    b2c8:	mov	r1, #256	; 0x100
    b2cc:	add	r2, sp, #24
    b2d0:	stm	r2, {r0, r1, r9}
    b2d4:	add	r9, sp, #192	; 0xc0
    b2d8:	mov	r1, sl
    b2dc:	mov	r2, #256	; 0x100
    b2e0:	ldr	r3, [r4]
    b2e4:	mov	r0, r9
    b2e8:	bl	18b8 <fread@plt>
    b2ec:	mov	r6, r0
    b2f0:	mov	r5, #0
    b2f4:	mov	r4, r9
    b2f8:	vld1.64	{d8-d9}, [r4], r8
    b2fc:	vmov.32	r0, d9[0]
    b300:	vmov.32	r1, d9[1]
    b304:	bl	71764 <__aeabi_ul2f>
    b308:	vmov.32	r2, d8[0]
    b30c:	vmov.32	r1, d8[1]
    b310:	vmov	s17, r0
    b314:	mov	r0, r2
    b318:	bl	71764 <__aeabi_ul2f>
    b31c:	vmov	s16, r0
    b320:	add	sl, r7, r5
    b324:	add	r0, r9, #16
    b328:	vst1.32	{d8}, [sl]!
    b32c:	vld1.64	{d8-d9}, [r0]
    b330:	vmov.32	r0, d9[0]
    b334:	vmov.32	r1, d9[1]
    b338:	bl	71764 <__aeabi_ul2f>
    b33c:	vmov.32	r2, d8[0]
    b340:	vmov.32	r1, d8[1]
    b344:	vmov	s17, r0
    b348:	mov	r0, r2
    b34c:	bl	71764 <__aeabi_ul2f>
    b350:	vmov	s16, r0
    b354:	add	r5, r5, #16
    b358:	mov	r9, r4
    b35c:	cmp	r5, #1024	; 0x400
    b360:	vstr	d8, [sl]
    b364:	bne	b2f8 <ReadSingleData+0x25a4>
    b368:	ldr	r0, [sp, #36]	; 0x24
    b36c:	ldr	r5, [sp, #32]
    b370:	ldr	r2, [sp, #16]
    b374:	ldr	sl, [sp, #40]	; 0x28
    b378:	ldr	r4, [sp, #44]	; 0x2c
    b37c:	add	r7, r7, #1024	; 0x400
    b380:	add	r0, r6, r0
    b384:	ldr	r6, [sp, #28]
    b388:	add	r9, r5, #256	; 0x100
    b38c:	str	r0, [sp, #36]	; 0x24
    b390:	ldr	r0, [sp, #24]
    b394:	cmp	r9, r2
    b398:	add	r1, r6, #256	; 0x100
    b39c:	add	r0, r0, #1024	; 0x400
    b3a0:	blt	b2cc <ReadSingleData+0x2578>
    b3a4:	ldr	r0, [sp, #20]
    b3a8:	cmp	r9, r0
    b3ac:	bge	b54c <ReadSingleData+0x27f8>
    b3b0:	ldr	r3, [r4]
    b3b4:	sub	r7, r0, r9
    b3b8:	add	r4, sp, #192	; 0xc0
    b3bc:	mov	r1, sl
    b3c0:	mov	r0, r4
    b3c4:	mov	r2, r7
    b3c8:	bl	18b8 <fread@plt>
    b3cc:	ldr	r8, [sp, #36]	; 0x24
    b3d0:	cmp	r7, #1
    b3d4:	str	r7, [sp, #44]	; 0x2c
    b3d8:	add	r8, r0, r8
    b3dc:	blt	b77c <ReadSingleData+0x2a28>
    b3e0:	ldr	r2, [sp, #20]
    b3e4:	mov	r3, #0
    b3e8:	beq	b940 <ReadSingleData+0x2bec>
    b3ec:	ldr	r0, [sp, #44]	; 0x2c
    b3f0:	str	r8, [sp, #36]	; 0x24
    b3f4:	bic	r0, r0, #1
    b3f8:	str	r0, [sp, #16]
    b3fc:	subs	r1, r0, #2
    b400:	mov	r0, #1
    b404:	add	r1, r0, r1, lsr #1
    b408:	and	r1, r1, #1
    b40c:	str	r1, [sp, #8]
    b410:	beq	b8cc <ReadSingleData+0x2b78>
    b414:	sub	r1, r2, r5
    b418:	ldr	sl, [sp, #24]
    b41c:	mov	r7, #0
    b420:	mov	r5, r4
    b424:	sub	r1, r1, #256	; 0x100
    b428:	bic	r1, r1, #1
    b42c:	sub	r1, r1, #2
    b430:	add	r0, r0, r1, lsr #1
    b434:	mvn	r2, r1, lsr #1
    b438:	mov	r6, sl
    b43c:	and	r0, r0, #1
    b440:	add	r8, r2, r0
    b444:	mov	r0, #32
    b448:	vld1.64	{d8-d9}, [r5], r0
    b44c:	vmov.32	r0, d9[0]
    b450:	vmov.32	r1, d9[1]
    b454:	bl	71764 <__aeabi_ul2f>
    b458:	vmov.32	r2, d8[0]
    b45c:	vmov.32	r1, d8[1]
    b460:	vmov	s17, r0
    b464:	mov	r0, r2
    b468:	bl	71764 <__aeabi_ul2f>
    b46c:	vmov	s16, r0
    b470:	mov	r0, #16
    b474:	vst1.32	{d8}, [r6], r0
    b478:	add	r0, r4, #16
    b47c:	vld1.64	{d8-d9}, [r0]
    b480:	vmov.32	r0, d9[0]
    b484:	vmov.32	r1, d9[1]
    b488:	bl	71764 <__aeabi_ul2f>
    b48c:	vmov.32	r2, d8[0]
    b490:	vmov.32	r1, d8[1]
    b494:	vmov	s17, r0
    b498:	mov	r0, r2
    b49c:	bl	71764 <__aeabi_ul2f>
    b4a0:	vmov	s16, r0
    b4a4:	adds	r8, r8, #2
    b4a8:	add	r7, r7, #4
    b4ac:	mov	r4, r5
    b4b0:	vstr	d8, [sl, #8]
    b4b4:	mov	sl, r6
    b4b8:	bne	b444 <ReadSingleData+0x26f0>
    b4bc:	b	b8d0 <ReadSingleData+0x2b7c>
    b4c0:	mov	r6, #0
    b4c4:	ldr	r0, [sp, #32]
    b4c8:	ldr	sl, [sp, #40]	; 0x28
    b4cc:	ldr	r7, [sp, #12]
    b4d0:	cmp	r0, #0
    b4d4:	beq	b510 <ReadSingleData+0x27bc>
    b4d8:	add	r0, sp, #192	; 0xc0
    b4dc:	add	r0, r0, r6, lsl #3
    b4e0:	vld1.64	{d8-d9}, [r0]
    b4e4:	vmov.32	r0, d9[0]
    b4e8:	vmov.32	r1, d9[1]
    b4ec:	bl	71764 <__aeabi_ul2f>
    b4f0:	vmov.32	r2, d8[0]
    b4f4:	vmov.32	r1, d8[1]
    b4f8:	vmov	s17, r0
    b4fc:	mov	r0, r2
    b500:	bl	71764 <__aeabi_ul2f>
    b504:	vmov	s16, r0
    b508:	add	r0, r7, r6, lsl #2
    b50c:	vstr	d8, [r0]
    b510:	ldr	r5, [sp, #20]
    b514:	ldr	r1, [sp, #44]	; 0x2c
    b518:	cmp	r1, r5
    b51c:	beq	b54c <ReadSingleData+0x27f8>
    b520:	add	r0, sp, #192	; 0xc0
    b524:	add	r4, r0, r1, lsl #3
    b528:	mov	r0, r5
    b52c:	add	r5, r7, r1, lsl #2
    b530:	sub	r6, r0, r1
    b534:	ldrd	r0, [r4]
    b538:	bl	71764 <__aeabi_ul2f>
    b53c:	str	r0, [r5], #4
    b540:	add	r4, r4, #8
    b544:	subs	r6, r6, #1
    b548:	bne	b534 <ReadSingleData+0x27e0>
    b54c:	ldr	r8, [sp, #36]	; 0x24
    b550:	b	b77c <ReadSingleData+0x2a28>
    b554:	mov	r2, #0
    b558:	ldr	r0, [sp, #24]
    b55c:	mov	r8, r9
    b560:	cmp	r0, #0
    b564:	beq	b5a0 <ReadSingleData+0x284c>
    b568:	add	r0, sp, #192	; 0xc0
    b56c:	ldr	r1, [r0, r2, lsl #1]
    b570:	add	r0, r0, r2, lsl #1
    b574:	str	r1, [sp, #64]	; 0x40
    b578:	ldr	r0, [r0, #4]
    b57c:	str	r0, [sp, #68]	; 0x44
    b580:	add	r0, sp, #64	; 0x40
    b584:	vld1.16	{d16}, [r0 :64]
    b588:	ldr	r1, [sp, #12]
    b58c:	add	r0, r2, r5
    b590:	add	r0, r1, r0, lsl #2
    b594:	vmovl.s16	q8, d16
    b598:	vcvt.f32.s32	q8, q8
    b59c:	vst1.32	{d16-d17}, [r0]
    b5a0:	ldr	r0, [sp, #44]	; 0x2c
    b5a4:	cmp	r0, lr
    b5a8:	beq	b778 <ReadSingleData+0x2a24>
    b5ac:	add	r0, sp, #192	; 0xc0
    b5b0:	ldr	r2, [sp, #12]
    b5b4:	ldr	r3, [sp, #36]	; 0x24
    b5b8:	add	r1, r0, lr, lsl #1
    b5bc:	ldr	r0, [sp, #32]
    b5c0:	add	r0, lr, r0
    b5c4:	add	r2, r2, r0, lsl #2
    b5c8:	ldr	r0, [sp, #20]
    b5cc:	sub	r0, r0, r3
    b5d0:	sub	r0, r0, lr
    b5d4:	sub	r0, r0, #256	; 0x100
    b5d8:	ldrsh	r3, [r1], #2
    b5dc:	subs	r0, r0, #1
    b5e0:	vmov	s0, r3
    b5e4:	vcvt.f32.s32	s0, s0
    b5e8:	vstmia	r2!, {s0}
    b5ec:	bne	b5d8 <ReadSingleData+0x2884>
    b5f0:	b	b778 <ReadSingleData+0x2a24>
    b5f4:	mov	r2, #0
    b5f8:	ldr	r0, [sp, #24]
    b5fc:	mov	r8, r9
    b600:	cmp	r0, #0
    b604:	beq	b640 <ReadSingleData+0x28ec>
    b608:	add	r0, sp, #192	; 0xc0
    b60c:	ldr	r1, [r0, r2, lsl #1]
    b610:	add	r0, r0, r2, lsl #1
    b614:	str	r1, [sp, #104]	; 0x68
    b618:	ldr	r0, [r0, #4]
    b61c:	str	r0, [sp, #108]	; 0x6c
    b620:	add	r0, sp, #104	; 0x68
    b624:	vld1.16	{d16}, [r0 :64]
    b628:	ldr	r1, [sp, #12]
    b62c:	add	r0, r2, r5
    b630:	add	r0, r1, r0, lsl #2
    b634:	vmovl.u16	q8, d16
    b638:	vcvt.f32.u32	q8, q8
    b63c:	vst1.32	{d16-d17}, [r0]
    b640:	ldr	r0, [sp, #44]	; 0x2c
    b644:	cmp	r0, lr
    b648:	beq	b778 <ReadSingleData+0x2a24>
    b64c:	add	r0, sp, #192	; 0xc0
    b650:	ldr	r2, [sp, #12]
    b654:	ldr	r3, [sp, #36]	; 0x24
    b658:	add	r1, r0, lr, lsl #1
    b65c:	ldr	r0, [sp, #32]
    b660:	add	r0, lr, r0
    b664:	add	r2, r2, r0, lsl #2
    b668:	ldr	r0, [sp, #20]
    b66c:	sub	r0, r0, r3
    b670:	sub	r0, r0, lr
    b674:	sub	r0, r0, #256	; 0x100
    b678:	ldrh	r3, [r1], #2
    b67c:	subs	r0, r0, #1
    b680:	vmov	s0, r3
    b684:	vcvt.f32.u32	s0, s0
    b688:	vstmia	r2!, {s0}
    b68c:	bne	b678 <ReadSingleData+0x2924>
    b690:	b	b778 <ReadSingleData+0x2a24>
    b694:	mov	r2, #0
    b698:	ldr	r3, [sp, #12]
    b69c:	cmp	ip, #0
    b6a0:	beq	b6c0 <ReadSingleData+0x296c>
    b6a4:	add	r1, sp, #192	; 0xc0
    b6a8:	add	r1, r1, r2, lsl #2
    b6ac:	vld1.32	{d16-d17}, [r1]
    b6b0:	add	r1, r2, r9
    b6b4:	add	r1, r3, r1, lsl #2
    b6b8:	vcvt.f32.s32	q8, q8
    b6bc:	vst1.32	{d16-d17}, [r1]
    b6c0:	ldr	r5, [sp, #20]
    b6c4:	cmp	lr, r0
    b6c8:	beq	b778 <ReadSingleData+0x2a24>
    b6cc:	add	r2, r0, sl
    b6d0:	add	r1, sp, #192	; 0xc0
    b6d4:	add	r2, r3, r2, lsl #2
    b6d8:	ldr	r3, [sp, #36]	; 0x24
    b6dc:	add	r1, r1, r0, lsl #2
    b6e0:	sub	r3, r5, r3
    b6e4:	sub	r0, r3, r0
    b6e8:	sub	r0, r0, #256	; 0x100
    b6ec:	ldr	r3, [r1], #4
    b6f0:	subs	r0, r0, #1
    b6f4:	vmov	s0, r3
    b6f8:	vcvt.f32.s32	s0, s0
    b6fc:	vstmia	r2!, {s0}
    b700:	bne	b6ec <ReadSingleData+0x2998>
    b704:	b	b778 <ReadSingleData+0x2a24>
    b708:	mov	r2, #0
    b70c:	ldr	r3, [sp, #12]
    b710:	cmp	ip, #0
    b714:	beq	b734 <ReadSingleData+0x29e0>
    b718:	add	r1, sp, #192	; 0xc0
    b71c:	add	r1, r1, r2, lsl #2
    b720:	vld1.32	{d16-d17}, [r1]
    b724:	add	r1, r2, r9
    b728:	add	r1, r3, r1, lsl #2
    b72c:	vcvt.f32.u32	q8, q8
    b730:	vst1.32	{d16-d17}, [r1]
    b734:	ldr	r5, [sp, #20]
    b738:	cmp	lr, r0
    b73c:	beq	b778 <ReadSingleData+0x2a24>
    b740:	add	r2, r0, sl
    b744:	add	r1, sp, #192	; 0xc0
    b748:	add	r2, r3, r2, lsl #2
    b74c:	ldr	r3, [sp, #36]	; 0x24
    b750:	add	r1, r1, r0, lsl #2
    b754:	sub	r3, r5, r3
    b758:	sub	r0, r3, r0
    b75c:	sub	r0, r0, #256	; 0x100
    b760:	ldr	r3, [r1], #4
    b764:	subs	r0, r0, #1
    b768:	vmov	s0, r3
    b76c:	vcvt.f32.u32	s0, s0
    b770:	vstmia	r2!, {s0}
    b774:	bne	b760 <ReadSingleData+0x2a0c>
    b778:	ldr	sl, [sp, #40]	; 0x28
    b77c:	mul	r0, r8, sl
    b780:	sub	sp, fp, #48	; 0x30
    b784:	vpop	{d8-d9}
    b788:	add	sp, sp, #4
    b78c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b790:	mov	r2, #0
    b794:	ldr	r3, [sp, #12]
    b798:	cmp	ip, #0
    b79c:	beq	b7c0 <ReadSingleData+0x2a6c>
    b7a0:	add	r0, sp, #192	; 0xc0
    b7a4:	add	r0, r0, r2, lsl #3
    b7a8:	vld1.64	{d16-d17}, [r0]
    b7ac:	add	r0, r2, r4
    b7b0:	add	r0, r3, r0, lsl #2
    b7b4:	vcvt.f32.f64	s1, d17
    b7b8:	vcvt.f32.f64	s0, d16
    b7bc:	vstr	d0, [r0]
    b7c0:	ldr	r0, [sp, #44]	; 0x2c
    b7c4:	ldr	r5, [sp, #20]
    b7c8:	cmp	r0, lr
    b7cc:	beq	b77c <ReadSingleData+0x2a28>
    b7d0:	add	r0, sp, #192	; 0xc0
    b7d4:	add	r1, r0, lr, lsl #3
    b7d8:	ldr	r0, [sp, #32]
    b7dc:	add	r0, lr, r0
    b7e0:	add	r2, r3, r0, lsl #2
    b7e4:	ldr	r0, [sp, #36]	; 0x24
    b7e8:	sub	r0, r5, r0
    b7ec:	sub	r0, r0, lr
    b7f0:	sub	r0, r0, #256	; 0x100
    b7f4:	vldr	d16, [r1]
    b7f8:	add	r1, r1, #8
    b7fc:	subs	r0, r0, #1
    b800:	vcvt.f32.f64	s0, d16
    b804:	vstmia	r2!, {s0}
    b808:	bne	b7f4 <ReadSingleData+0x2aa0>
    b80c:	b	b77c <ReadSingleData+0x2a28>
    b810:	mov	r6, #0
    b814:	ldr	r0, [sp]
    b818:	ldr	r8, [sp, #36]	; 0x24
    b81c:	ldr	r7, [sp, #12]
    b820:	cmp	r0, #0
    b824:	beq	b864 <ReadSingleData+0x2b10>
    b828:	add	r0, sp, #192	; 0xc0
    b82c:	add	r0, r0, r6, lsl #3
    b830:	vld1.64	{d8-d9}, [r0]
    b834:	vmov.32	r0, d9[0]
    b838:	vmov.32	r1, d9[1]
    b83c:	bl	71774 <__aeabi_l2f>
    b840:	vmov.32	r2, d8[0]
    b844:	vmov.32	r1, d8[1]
    b848:	vmov	s17, r0
    b84c:	add	r4, r6, r4
    b850:	mov	r0, r2
    b854:	bl	71774 <__aeabi_l2f>
    b858:	vmov	s16, r0
    b85c:	add	r0, r7, r4, lsl #2
    b860:	vstr	d8, [r0]
    b864:	ldr	r0, [sp, #16]
    b868:	ldr	r2, [sp, #4]
    b86c:	ldr	r5, [sp, #20]
    b870:	cmp	r0, r2
    b874:	bne	b880 <ReadSingleData+0x2b2c>
    b878:	ldr	sl, [sp, #40]	; 0x28
    b87c:	b	b06c <ReadSingleData+0x2318>
    b880:	add	r0, sp, #192	; 0xc0
    b884:	mov	r1, r5
    b888:	add	r4, r0, r2, lsl #3
    b88c:	ldr	r0, [sp, #28]
    b890:	add	r0, r2, r0
    b894:	add	r5, r7, r0, lsl #2
    b898:	ldr	r0, [sp, #32]
    b89c:	sub	r0, r1, r0
    b8a0:	sub	r0, r0, r2
    b8a4:	sub	r6, r0, #256	; 0x100
    b8a8:	ldrd	r0, [r4]
    b8ac:	bl	71774 <__aeabi_l2f>
    b8b0:	str	r0, [r5], #4
    b8b4:	add	r4, r4, #8
    b8b8:	subs	r6, r6, #1
    b8bc:	bne	b8a8 <ReadSingleData+0x2b54>
    b8c0:	ldr	sl, [sp, #40]	; 0x28
    b8c4:	ldr	r5, [sp, #20]
    b8c8:	b	b06c <ReadSingleData+0x2318>
    b8cc:	mov	r7, #0
    b8d0:	ldr	r0, [sp, #8]
    b8d4:	ldr	r8, [sp, #36]	; 0x24
    b8d8:	ldr	r6, [sp, #28]
    b8dc:	cmp	r0, #0
    b8e0:	beq	b924 <ReadSingleData+0x2bd0>
    b8e4:	add	r0, sp, #192	; 0xc0
    b8e8:	add	r0, r0, r7, lsl #3
    b8ec:	vld1.64	{d8-d9}, [r0]
    b8f0:	vmov.32	r0, d9[0]
    b8f4:	vmov.32	r1, d9[1]
    b8f8:	bl	71764 <__aeabi_ul2f>
    b8fc:	vmov.32	r2, d8[0]
    b900:	vmov.32	r1, d8[1]
    b904:	vmov	s17, r0
    b908:	add	r4, r7, r9
    b90c:	mov	r0, r2
    b910:	bl	71764 <__aeabi_ul2f>
    b914:	vmov	s16, r0
    b918:	ldr	r0, [sp, #12]
    b91c:	add	r0, r0, r4, lsl #2
    b920:	vstr	d8, [r0]
    b924:	ldr	r0, [sp, #44]	; 0x2c
    b928:	ldr	r3, [sp, #16]
    b92c:	ldr	r2, [sp, #20]
    b930:	ldr	sl, [sp, #40]	; 0x28
    b934:	ldr	r5, [sp, #32]
    b938:	cmp	r0, r3
    b93c:	beq	b77c <ReadSingleData+0x2a28>
    b940:	mov	r1, r2
    b944:	ldr	r2, [sp, #12]
    b948:	add	r0, sp, #192	; 0xc0
    b94c:	add	r4, r0, r3, lsl #3
    b950:	add	r0, r3, r6
    b954:	add	r7, r2, r0, lsl #2
    b958:	sub	r0, r1, r5
    b95c:	sub	r0, r0, r3
    b960:	sub	r6, r0, #256	; 0x100
    b964:	ldrd	r0, [r4]
    b968:	bl	71764 <__aeabi_ul2f>
    b96c:	str	r0, [r7], #4
    b970:	add	r4, r4, #8
    b974:	subs	r6, r6, #1
    b978:	bne	b964 <ReadSingleData+0x2c10>
    b97c:	b	b77c <ReadSingleData+0x2a28>

0000b980 <ReadCompressedSingleData>:
    b980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b984:	add	fp, sp, #28
    b988:	sub	sp, sp, #12
    b98c:	mov	r7, r0
    b990:	mov	r0, #0
    b994:	cmp	r1, #0
    b998:	beq	b9ac <ReadCompressedSingleData+0x2c>
    b99c:	cmp	r7, #0
    b9a0:	movne	r5, r2
    b9a4:	cmpne	r2, #0
    b9a8:	bne	b9b4 <ReadCompressedSingleData+0x34>
    b9ac:	sub	sp, fp, #28
    b9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b9b4:	ldr	sl, [fp, #8]
    b9b8:	mov	r0, r3
    b9bc:	mov	r4, r3
    b9c0:	mov	r6, r1
    b9c4:	bl	1924 <Mat_SizeOf@plt>
    b9c8:	mov	r9, r0
    b9cc:	sub	r0, r4, #1
    b9d0:	cmp	r0, #12
    b9d4:	bhi	bee4 <ReadCompressedSingleData+0x564>
    b9d8:	add	r1, pc, #4
    b9dc:	ldr	r0, [r1, r0, lsl #2]
    b9e0:	add	pc, r1, r0
    b9e4:	.word	0x00000034
    b9e8:	.word	0x00000074
    b9ec:	.word	0x000000b4
    b9f0:	.word	0x00000104
    b9f4:	.word	0x00000154
    b9f8:	.word	0x000001a4
    b9fc:	.word	0x000001f4
    ba00:	.word	0x00000500
    ba04:	.word	0x0000023c
    ba08:	.word	0x00000500
    ba0c:	.word	0x00000500
    ba10:	.word	0x00000288
    ba14:	.word	0x000002d4
    ba18:	cmp	sl, #1
    ba1c:	blt	bee4 <ReadCompressedSingleData+0x564>
    ba20:	mov	r8, sp
    ba24:	mov	r4, sl
    ba28:	mov	r0, r7
    ba2c:	mov	r1, r6
    ba30:	mov	r2, r8
    ba34:	mov	r3, r9
    ba38:	bl	34ac <InflateData>
    ba3c:	ldrsb	r0, [sp]
    ba40:	subs	r4, r4, #1
    ba44:	vmov	s0, r0
    ba48:	vcvt.f32.s32	s0, s0
    ba4c:	vstmia	r5!, {s0}
    ba50:	bne	ba28 <ReadCompressedSingleData+0xa8>
    ba54:	b	bee4 <ReadCompressedSingleData+0x564>
    ba58:	cmp	sl, #1
    ba5c:	blt	bee4 <ReadCompressedSingleData+0x564>
    ba60:	mov	r8, sp
    ba64:	mov	r4, sl
    ba68:	mov	r0, r7
    ba6c:	mov	r1, r6
    ba70:	mov	r2, r8
    ba74:	mov	r3, r9
    ba78:	bl	34ac <InflateData>
    ba7c:	ldrb	r0, [sp]
    ba80:	subs	r4, r4, #1
    ba84:	vmov	s0, r0
    ba88:	vcvt.f32.u32	s0, s0
    ba8c:	vstmia	r5!, {s0}
    ba90:	bne	ba68 <ReadCompressedSingleData+0xe8>
    ba94:	b	bee4 <ReadCompressedSingleData+0x564>
    ba98:	ldr	r0, [r7, #20]
    ba9c:	cmp	r0, #0
    baa0:	beq	bd04 <ReadCompressedSingleData+0x384>
    baa4:	cmp	sl, #1
    baa8:	blt	bee4 <ReadCompressedSingleData+0x564>
    baac:	mov	r8, sp
    bab0:	mov	r4, sl
    bab4:	mov	r0, r7
    bab8:	mov	r1, r6
    babc:	mov	r2, r8
    bac0:	mov	r3, r9
    bac4:	bl	34ac <InflateData>
    bac8:	mov	r0, r8
    bacc:	bl	1c20 <Mat_int16Swap>
    bad0:	vmov	s0, r0
    bad4:	subs	r4, r4, #1
    bad8:	vcvt.f32.s32	s0, s0
    badc:	vstmia	r5!, {s0}
    bae0:	bne	bab4 <ReadCompressedSingleData+0x134>
    bae4:	b	bee4 <ReadCompressedSingleData+0x564>
    bae8:	ldr	r0, [r7, #20]
    baec:	cmp	r0, #0
    baf0:	beq	bd44 <ReadCompressedSingleData+0x3c4>
    baf4:	cmp	sl, #1
    baf8:	blt	bee4 <ReadCompressedSingleData+0x564>
    bafc:	mov	r8, sp
    bb00:	mov	r4, sl
    bb04:	mov	r0, r7
    bb08:	mov	r1, r6
    bb0c:	mov	r2, r8
    bb10:	mov	r3, r9
    bb14:	bl	34ac <InflateData>
    bb18:	mov	r0, r8
    bb1c:	bl	1c34 <Mat_uint16Swap>
    bb20:	vmov	s0, r0
    bb24:	subs	r4, r4, #1
    bb28:	vcvt.f32.u32	s0, s0
    bb2c:	vstmia	r5!, {s0}
    bb30:	bne	bb04 <ReadCompressedSingleData+0x184>
    bb34:	b	bee4 <ReadCompressedSingleData+0x564>
    bb38:	ldr	r0, [r7, #20]
    bb3c:	cmp	r0, #0
    bb40:	beq	bd84 <ReadCompressedSingleData+0x404>
    bb44:	cmp	sl, #1
    bb48:	blt	bee4 <ReadCompressedSingleData+0x564>
    bb4c:	mov	r8, sp
    bb50:	mov	r4, sl
    bb54:	mov	r0, r7
    bb58:	mov	r1, r6
    bb5c:	mov	r2, r8
    bb60:	mov	r3, r9
    bb64:	bl	34ac <InflateData>
    bb68:	mov	r0, r8
    bb6c:	bl	1bf8 <Mat_int32Swap>
    bb70:	vmov	s0, r0
    bb74:	subs	r4, r4, #1
    bb78:	vcvt.f32.s32	s0, s0
    bb7c:	vstmia	r5!, {s0}
    bb80:	bne	bb54 <ReadCompressedSingleData+0x1d4>
    bb84:	b	bee4 <ReadCompressedSingleData+0x564>
    bb88:	ldr	r0, [r7, #20]
    bb8c:	cmp	r0, #0
    bb90:	beq	bdc0 <ReadCompressedSingleData+0x440>
    bb94:	cmp	sl, #1
    bb98:	blt	bee4 <ReadCompressedSingleData+0x564>
    bb9c:	mov	r8, sp
    bba0:	mov	r4, sl
    bba4:	mov	r0, r7
    bba8:	mov	r1, r6
    bbac:	mov	r2, r8
    bbb0:	mov	r3, r9
    bbb4:	bl	34ac <InflateData>
    bbb8:	mov	r0, r8
    bbbc:	bl	1c0c <Mat_uint32Swap>
    bbc0:	vmov	s0, r0
    bbc4:	subs	r4, r4, #1
    bbc8:	vcvt.f32.u32	s0, s0
    bbcc:	vstmia	r5!, {s0}
    bbd0:	bne	bba4 <ReadCompressedSingleData+0x224>
    bbd4:	b	bee4 <ReadCompressedSingleData+0x564>
    bbd8:	ldr	r0, [r7, #20]
    bbdc:	cmp	r0, #0
    bbe0:	beq	bdfc <ReadCompressedSingleData+0x47c>
    bbe4:	cmp	sl, #1
    bbe8:	blt	bee4 <ReadCompressedSingleData+0x564>
    bbec:	mov	r8, sp
    bbf0:	mov	r4, sl
    bbf4:	mov	r0, r7
    bbf8:	mov	r1, r6
    bbfc:	mov	r2, r8
    bc00:	mov	r3, r9
    bc04:	bl	34ac <InflateData>
    bc08:	mov	r0, r8
    bc0c:	bl	1c4c <Mat_floatSwap>
    bc10:	vstmia	r5!, {s0}
    bc14:	subs	r4, r4, #1
    bc18:	bne	bbf4 <ReadCompressedSingleData+0x274>
    bc1c:	b	bee4 <ReadCompressedSingleData+0x564>
    bc20:	ldr	r0, [r7, #20]
    bc24:	cmp	r0, #0
    bc28:	beq	be34 <ReadCompressedSingleData+0x4b4>
    bc2c:	cmp	sl, #1
    bc30:	blt	bee4 <ReadCompressedSingleData+0x564>
    bc34:	mov	r8, sp
    bc38:	mov	r4, sl
    bc3c:	mov	r0, r7
    bc40:	mov	r1, r6
    bc44:	mov	r2, r8
    bc48:	mov	r3, r9
    bc4c:	bl	34ac <InflateData>
    bc50:	mov	r0, r8
    bc54:	bl	1c90 <Mat_doubleSwap>
    bc58:	vcvt.f32.f64	s0, d0
    bc5c:	subs	r4, r4, #1
    bc60:	vstmia	r5!, {s0}
    bc64:	bne	bc3c <ReadCompressedSingleData+0x2bc>
    bc68:	b	bee4 <ReadCompressedSingleData+0x564>
    bc6c:	ldr	r0, [r7, #20]
    bc70:	cmp	r0, #0
    bc74:	beq	be70 <ReadCompressedSingleData+0x4f0>
    bc78:	cmp	sl, #1
    bc7c:	blt	bee4 <ReadCompressedSingleData+0x564>
    bc80:	mov	r8, sp
    bc84:	mov	r4, sl
    bc88:	mov	r0, r7
    bc8c:	mov	r1, r6
    bc90:	mov	r2, r8
    bc94:	mov	r3, r9
    bc98:	bl	34ac <InflateData>
    bc9c:	mov	r0, r8
    bca0:	bl	1b84 <Mat_int64Swap>
    bca4:	bl	71774 <__aeabi_l2f>
    bca8:	str	r0, [r5], #4
    bcac:	subs	r4, r4, #1
    bcb0:	bne	bc88 <ReadCompressedSingleData+0x308>
    bcb4:	b	bee4 <ReadCompressedSingleData+0x564>
    bcb8:	ldr	r0, [r7, #20]
    bcbc:	cmp	r0, #0
    bcc0:	beq	beac <ReadCompressedSingleData+0x52c>
    bcc4:	cmp	sl, #1
    bcc8:	blt	bee4 <ReadCompressedSingleData+0x564>
    bccc:	mov	r8, sp
    bcd0:	mov	r4, sl
    bcd4:	mov	r0, r7
    bcd8:	mov	r1, r6
    bcdc:	mov	r2, r8
    bce0:	mov	r3, r9
    bce4:	bl	34ac <InflateData>
    bce8:	mov	r0, r8
    bcec:	bl	1bd4 <Mat_uint64Swap>
    bcf0:	bl	71764 <__aeabi_ul2f>
    bcf4:	str	r0, [r5], #4
    bcf8:	subs	r4, r4, #1
    bcfc:	bne	bcd4 <ReadCompressedSingleData+0x354>
    bd00:	b	bee4 <ReadCompressedSingleData+0x564>
    bd04:	cmp	sl, #1
    bd08:	blt	bee4 <ReadCompressedSingleData+0x564>
    bd0c:	mov	r8, sp
    bd10:	mov	r4, sl
    bd14:	mov	r0, r7
    bd18:	mov	r1, r6
    bd1c:	mov	r2, r8
    bd20:	mov	r3, r9
    bd24:	bl	34ac <InflateData>
    bd28:	ldrsh	r0, [sp]
    bd2c:	subs	r4, r4, #1
    bd30:	vmov	s0, r0
    bd34:	vcvt.f32.s32	s0, s0
    bd38:	vstmia	r5!, {s0}
    bd3c:	bne	bd14 <ReadCompressedSingleData+0x394>
    bd40:	b	bee4 <ReadCompressedSingleData+0x564>
    bd44:	cmp	sl, #1
    bd48:	blt	bee4 <ReadCompressedSingleData+0x564>
    bd4c:	mov	r8, sp
    bd50:	mov	r4, sl
    bd54:	mov	r0, r7
    bd58:	mov	r1, r6
    bd5c:	mov	r2, r8
    bd60:	mov	r3, r9
    bd64:	bl	34ac <InflateData>
    bd68:	ldrh	r0, [sp]
    bd6c:	subs	r4, r4, #1
    bd70:	vmov	s0, r0
    bd74:	vcvt.f32.u32	s0, s0
    bd78:	vstmia	r5!, {s0}
    bd7c:	bne	bd54 <ReadCompressedSingleData+0x3d4>
    bd80:	b	bee4 <ReadCompressedSingleData+0x564>
    bd84:	cmp	sl, #1
    bd88:	blt	bee4 <ReadCompressedSingleData+0x564>
    bd8c:	mov	r8, sp
    bd90:	mov	r4, sl
    bd94:	mov	r0, r7
    bd98:	mov	r1, r6
    bd9c:	mov	r2, r8
    bda0:	mov	r3, r9
    bda4:	bl	34ac <InflateData>
    bda8:	vldr	s0, [sp]
    bdac:	subs	r4, r4, #1
    bdb0:	vcvt.f32.s32	s0, s0
    bdb4:	vstmia	r5!, {s0}
    bdb8:	bne	bd94 <ReadCompressedSingleData+0x414>
    bdbc:	b	bee4 <ReadCompressedSingleData+0x564>
    bdc0:	cmp	sl, #1
    bdc4:	blt	bee4 <ReadCompressedSingleData+0x564>
    bdc8:	mov	r8, sp
    bdcc:	mov	r4, sl
    bdd0:	mov	r0, r7
    bdd4:	mov	r1, r6
    bdd8:	mov	r2, r8
    bddc:	mov	r3, r9
    bde0:	bl	34ac <InflateData>
    bde4:	vldr	s0, [sp]
    bde8:	subs	r4, r4, #1
    bdec:	vcvt.f32.u32	s0, s0
    bdf0:	vstmia	r5!, {s0}
    bdf4:	bne	bdd0 <ReadCompressedSingleData+0x450>
    bdf8:	b	bee4 <ReadCompressedSingleData+0x564>
    bdfc:	cmp	sl, #1
    be00:	blt	bee4 <ReadCompressedSingleData+0x564>
    be04:	mov	r8, sp
    be08:	mov	r4, sl
    be0c:	mov	r0, r7
    be10:	mov	r1, r6
    be14:	mov	r2, r8
    be18:	mov	r3, r9
    be1c:	bl	34ac <InflateData>
    be20:	ldr	r0, [sp]
    be24:	subs	r4, r4, #1
    be28:	str	r0, [r5], #4
    be2c:	bne	be0c <ReadCompressedSingleData+0x48c>
    be30:	b	bee4 <ReadCompressedSingleData+0x564>
    be34:	cmp	sl, #1
    be38:	blt	bee4 <ReadCompressedSingleData+0x564>
    be3c:	mov	r8, sp
    be40:	mov	r4, sl
    be44:	mov	r0, r7
    be48:	mov	r1, r6
    be4c:	mov	r2, r8
    be50:	mov	r3, r9
    be54:	bl	34ac <InflateData>
    be58:	vldr	d16, [sp]
    be5c:	subs	r4, r4, #1
    be60:	vcvt.f32.f64	s0, d16
    be64:	vstmia	r5!, {s0}
    be68:	bne	be44 <ReadCompressedSingleData+0x4c4>
    be6c:	b	bee4 <ReadCompressedSingleData+0x564>
    be70:	cmp	sl, #1
    be74:	blt	bee4 <ReadCompressedSingleData+0x564>
    be78:	mov	r8, sp
    be7c:	mov	r4, sl
    be80:	mov	r0, r7
    be84:	mov	r1, r6
    be88:	mov	r2, r8
    be8c:	mov	r3, r9
    be90:	bl	34ac <InflateData>
    be94:	ldm	sp, {r0, r1}
    be98:	bl	71774 <__aeabi_l2f>
    be9c:	str	r0, [r5], #4
    bea0:	subs	r4, r4, #1
    bea4:	bne	be80 <ReadCompressedSingleData+0x500>
    bea8:	b	bee4 <ReadCompressedSingleData+0x564>
    beac:	cmp	sl, #1
    beb0:	blt	bee4 <ReadCompressedSingleData+0x564>
    beb4:	mov	r8, sp
    beb8:	mov	r4, sl
    bebc:	mov	r0, r7
    bec0:	mov	r1, r6
    bec4:	mov	r2, r8
    bec8:	mov	r3, r9
    becc:	bl	34ac <InflateData>
    bed0:	ldm	sp, {r0, r1}
    bed4:	bl	71764 <__aeabi_ul2f>
    bed8:	str	r0, [r5], #4
    bedc:	subs	r4, r4, #1
    bee0:	bne	bebc <ReadCompressedSingleData+0x53c>
    bee4:	mul	r0, r9, sl
    bee8:	sub	sp, fp, #28
    beec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000bef0 <ReadInt64Data>:
    bef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bef4:	add	fp, sp, #28
    bef8:	sub	sp, sp, #300	; 0x12c
    befc:	sub	sp, sp, #2048	; 0x800
    bf00:	mov	r4, r0
    bf04:	mov	r0, #0
    bf08:	cmp	r4, #0
    bf0c:	movne	r7, r1
    bf10:	cmpne	r1, #0
    bf14:	bne	bf20 <ReadInt64Data+0x30>
    bf18:	sub	sp, fp, #28
    bf1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bf20:	ldr	r1, [r4]
    bf24:	cmp	r1, #0
    bf28:	beq	bf18 <ReadInt64Data+0x28>
    bf2c:	mov	r0, r2
    bf30:	mov	r6, r3
    bf34:	mov	r5, r2
    bf38:	bl	1924 <Mat_SizeOf@plt>
    bf3c:	mov	sl, r0
    bf40:	sub	r0, r5, #1
    bf44:	mov	r9, #0
    bf48:	str	r4, [sp, #36]	; 0x24
    bf4c:	cmp	r0, #11
    bf50:	bhi	de30 <ReadInt64Data+0x1f40>
    bf54:	add	r1, pc, #8
    bf58:	add	r8, sp, #232	; 0xe8
    bf5c:	ldr	r0, [r1, r0, lsl #2]
    bf60:	add	pc, r1, r0
    bf64:	.word	0x00000030
    bf68:	.word	0x000000f4
    bf6c:	.word	0x000001bc
    bf70:	.word	0x00000218
    bf74:	.word	0x00000274
    bf78:	.word	0x000002d0
    bf7c:	.word	0x0000032c
    bf80:	.word	0x00001ecc
    bf84:	.word	0x0000038c
    bf88:	.word	0x00001ecc
    bf8c:	.word	0x00001ecc
    bf90:	.word	0x000003ec
    bf94:	cmp	r6, #256	; 0x100
    bf98:	bgt	c3c4 <ReadInt64Data+0x4d4>
    bf9c:	ldr	r3, [r4]
    bfa0:	add	r4, sp, #296	; 0x128
    bfa4:	mov	r1, sl
    bfa8:	mov	r2, r6
    bfac:	mov	r0, r4
    bfb0:	bl	18b8 <fread@plt>
    bfb4:	mov	r9, r0
    bfb8:	cmp	r6, #1
    bfbc:	blt	e524 <ReadInt64Data+0x2634>
    bfc0:	mov	lr, #0
    bfc4:	beq	e0e0 <ReadInt64Data+0x21f0>
    bfc8:	bic	lr, r6, #1
    bfcc:	mov	r1, #1
    bfd0:	str	sl, [sp, #32]
    bfd4:	mov	sl, r7
    bfd8:	str	r9, [sp, #28]
    bfdc:	str	r6, [sp, #8]
    bfe0:	subs	r0, lr, #2
    bfe4:	add	r0, r1, r0, lsr #1
    bfe8:	and	ip, r0, #1
    bfec:	beq	e098 <ReadInt64Data+0x21a8>
    bff0:	sub	r3, r0, ip
    bff4:	mov	r1, #0
    bff8:	add	r9, sp, #236	; 0xec
    bffc:	mov	r5, #32
    c000:	add	r2, sp, #240	; 0xf0
    c004:	mov	r0, sl
    c008:	add	r7, r4, r1
    c00c:	subs	r3, r3, #2
    c010:	add	r1, r1, #4
    c014:	ldrh	r6, [r7]
    c018:	strh	r6, [r8, #4]
    c01c:	add	r6, r0, #16
    c020:	vld1.16	{d16[0]}, [r9 :16]
    c024:	vmovl.s8	q8, d16
    c028:	vmovl.s16	q8, d16
    c02c:	vmovl.s32	q8, d16
    c030:	vst1.64	{d16-d17}, [r0], r5
    c034:	ldrh	r7, [r7, #2]
    c038:	strh	r7, [r8, #8]
    c03c:	vld1.16	{d16[0]}, [r2 :16]
    c040:	vmovl.s8	q8, d16
    c044:	vmovl.s16	q8, d16
    c048:	vmovl.s32	q8, d16
    c04c:	vst1.64	{d16-d17}, [r6]
    c050:	bne	c008 <ReadInt64Data+0x118>
    c054:	b	e09c <ReadInt64Data+0x21ac>
    c058:	cmp	r6, #256	; 0x100
    c05c:	bgt	c5a0 <ReadInt64Data+0x6b0>
    c060:	ldr	r3, [r4]
    c064:	add	r9, sp, #296	; 0x128
    c068:	mov	r1, sl
    c06c:	mov	r2, r6
    c070:	mov	r0, r9
    c074:	bl	18b8 <fread@plt>
    c078:	mov	ip, r0
    c07c:	cmp	r6, #1
    c080:	blt	e178 <ReadInt64Data+0x2288>
    c084:	mov	r1, #0
    c088:	mov	lr, #0
    c08c:	beq	e154 <ReadInt64Data+0x2264>
    c090:	bic	lr, r6, #1
    c094:	mov	r2, #1
    c098:	str	r7, [sp, #4]
    c09c:	str	r6, [sp, #8]
    c0a0:	str	sl, [sp, #32]
    c0a4:	subs	r0, lr, #2
    c0a8:	add	r0, r2, r0, lsr #1
    c0ac:	and	r2, r0, #1
    c0b0:	str	r2, [sp, #36]	; 0x24
    c0b4:	beq	e108 <ReadInt64Data+0x2218>
    c0b8:	ldr	r7, [sp, #4]
    c0bc:	sub	r6, r0, r2
    c0c0:	mov	r2, #0
    c0c4:	add	sl, sp, #268	; 0x10c
    c0c8:	mov	r3, #32
    c0cc:	add	r0, sp, #272	; 0x110
    c0d0:	add	r4, r9, r2
    c0d4:	subs	r6, r6, #2
    c0d8:	add	r2, r2, #4
    c0dc:	ldrh	r5, [r4]
    c0e0:	strh	r5, [r8, #36]	; 0x24
    c0e4:	add	r5, r7, #16
    c0e8:	vld1.16	{d16[0]}, [sl :16]
    c0ec:	vmovl.u8	q8, d16
    c0f0:	vmovl.u16	q8, d16
    c0f4:	vmovl.u32	q8, d16
    c0f8:	vst1.64	{d16-d17}, [r7], r3
    c0fc:	ldrh	r4, [r4, #2]
    c100:	strh	r4, [r8, #40]	; 0x28
    c104:	vld1.16	{d16[0]}, [r0 :16]
    c108:	vmovl.u8	q8, d16
    c10c:	vmovl.u16	q8, d16
    c110:	vmovl.u32	q8, d16
    c114:	vst1.64	{d16-d17}, [r5]
    c118:	bne	c0d0 <ReadInt64Data+0x1e0>
    c11c:	b	e10c <ReadInt64Data+0x221c>
    c120:	ldr	r0, [r4, #20]
    c124:	cmp	r0, #0
    c128:	beq	c780 <ReadInt64Data+0x890>
    c12c:	cmp	r6, #256	; 0x100
    c130:	bgt	cc1c <ReadInt64Data+0xd2c>
    c134:	ldr	r3, [r4]
    c138:	add	r4, sp, #296	; 0x128
    c13c:	mov	r1, sl
    c140:	mov	r2, r6
    c144:	mov	r0, r4
    c148:	bl	18b8 <fread@plt>
    c14c:	mov	r9, r0
    c150:	cmp	r6, #1
    c154:	blt	e524 <ReadInt64Data+0x2634>
    c158:	mov	r0, r4
    c15c:	bl	1c20 <Mat_int16Swap>
    c160:	asr	r1, r0, #31
    c164:	add	r4, r4, #2
    c168:	subs	r6, r6, #1
    c16c:	strd	r0, [r7]
    c170:	add	r7, r7, #8
    c174:	bne	c158 <ReadInt64Data+0x268>
    c178:	b	e524 <ReadInt64Data+0x2634>
    c17c:	ldr	r0, [r4, #20]
    c180:	cmp	r0, #0
    c184:	beq	c838 <ReadInt64Data+0x948>
    c188:	cmp	r6, #256	; 0x100
    c18c:	bgt	cd0c <ReadInt64Data+0xe1c>
    c190:	ldr	r3, [r4]
    c194:	add	r4, sp, #296	; 0x128
    c198:	mov	r1, sl
    c19c:	mov	r2, r6
    c1a0:	mov	r0, r4
    c1a4:	bl	18b8 <fread@plt>
    c1a8:	mov	r9, r0
    c1ac:	cmp	r6, #1
    c1b0:	blt	e524 <ReadInt64Data+0x2634>
    c1b4:	mov	r5, #0
    c1b8:	mov	r0, r4
    c1bc:	bl	1c34 <Mat_uint16Swap>
    c1c0:	stm	r7, {r0, r5}
    c1c4:	add	r4, r4, #2
    c1c8:	add	r7, r7, #8
    c1cc:	subs	r6, r6, #1
    c1d0:	bne	c1b8 <ReadInt64Data+0x2c8>
    c1d4:	b	e524 <ReadInt64Data+0x2634>
    c1d8:	ldr	r0, [r4, #20]
    c1dc:	cmp	r0, #0
    c1e0:	beq	c8f8 <ReadInt64Data+0xa08>
    c1e4:	cmp	r6, #256	; 0x100
    c1e8:	bgt	ce08 <ReadInt64Data+0xf18>
    c1ec:	ldr	r3, [r4]
    c1f0:	add	r4, sp, #296	; 0x128
    c1f4:	mov	r1, sl
    c1f8:	mov	r2, r6
    c1fc:	mov	r0, r4
    c200:	bl	18b8 <fread@plt>
    c204:	mov	r9, r0
    c208:	cmp	r6, #1
    c20c:	blt	e524 <ReadInt64Data+0x2634>
    c210:	mov	r0, r4
    c214:	bl	1bf8 <Mat_int32Swap>
    c218:	asr	r1, r0, #31
    c21c:	add	r4, r4, #4
    c220:	subs	r6, r6, #1
    c224:	strd	r0, [r7]
    c228:	add	r7, r7, #8
    c22c:	bne	c210 <ReadInt64Data+0x320>
    c230:	b	e524 <ReadInt64Data+0x2634>
    c234:	ldr	r0, [r4, #20]
    c238:	cmp	r0, #0
    c23c:	beq	c9b8 <ReadInt64Data+0xac8>
    c240:	cmp	r6, #256	; 0x100
    c244:	bgt	cef8 <ReadInt64Data+0x1008>
    c248:	ldr	r3, [r4]
    c24c:	add	r4, sp, #296	; 0x128
    c250:	mov	r1, sl
    c254:	mov	r2, r6
    c258:	mov	r0, r4
    c25c:	bl	18b8 <fread@plt>
    c260:	mov	r9, r0
    c264:	cmp	r6, #1
    c268:	blt	e524 <ReadInt64Data+0x2634>
    c26c:	mov	r5, #0
    c270:	mov	r0, r4
    c274:	bl	1c0c <Mat_uint32Swap>
    c278:	stm	r7, {r0, r5}
    c27c:	add	r4, r4, #4
    c280:	add	r7, r7, #8
    c284:	subs	r6, r6, #1
    c288:	bne	c270 <ReadInt64Data+0x380>
    c28c:	b	e524 <ReadInt64Data+0x2634>
    c290:	ldr	r0, [r4, #20]
    c294:	cmp	r0, #0
    c298:	beq	ca80 <ReadInt64Data+0xb90>
    c29c:	cmp	r6, #256	; 0x100
    c2a0:	bgt	cff4 <ReadInt64Data+0x1104>
    c2a4:	ldr	r3, [r4]
    c2a8:	add	r4, sp, #296	; 0x128
    c2ac:	mov	r1, sl
    c2b0:	mov	r2, r6
    c2b4:	mov	r0, r4
    c2b8:	bl	18b8 <fread@plt>
    c2bc:	mov	r9, r0
    c2c0:	cmp	r6, #1
    c2c4:	blt	e524 <ReadInt64Data+0x2634>
    c2c8:	mov	r0, r4
    c2cc:	bl	1c4c <Mat_floatSwap>
    c2d0:	vmov	r0, s0
    c2d4:	bl	717f0 <__aeabi_f2lz>
    c2d8:	strd	r0, [r7]
    c2dc:	add	r4, r4, #4
    c2e0:	add	r7, r7, #8
    c2e4:	subs	r6, r6, #1
    c2e8:	bne	c2c8 <ReadInt64Data+0x3d8>
    c2ec:	b	e524 <ReadInt64Data+0x2634>
    c2f0:	ldr	r0, [r4, #20]
    c2f4:	cmp	r0, #0
    c2f8:	beq	cb1c <ReadInt64Data+0xc2c>
    c2fc:	cmp	r6, #256	; 0x100
    c300:	bgt	d0ec <ReadInt64Data+0x11fc>
    c304:	ldr	r3, [r4]
    c308:	add	r4, sp, #296	; 0x128
    c30c:	mov	r1, sl
    c310:	mov	r2, r6
    c314:	mov	r0, r4
    c318:	bl	18b8 <fread@plt>
    c31c:	mov	r9, r0
    c320:	cmp	r6, #1
    c324:	blt	e524 <ReadInt64Data+0x2634>
    c328:	mov	r0, r4
    c32c:	bl	1c90 <Mat_doubleSwap>
    c330:	vmov	r0, r1, d0
    c334:	bl	7181c <__aeabi_d2lz>
    c338:	strd	r0, [r7]
    c33c:	add	r4, r4, #8
    c340:	add	r7, r7, #8
    c344:	subs	r6, r6, #1
    c348:	bne	c328 <ReadInt64Data+0x438>
    c34c:	b	e524 <ReadInt64Data+0x2634>
    c350:	ldr	r0, [r4, #20]
    c354:	cmp	r0, #0
    c358:	beq	cbd8 <ReadInt64Data+0xce8>
    c35c:	cmp	r6, #256	; 0x100
    c360:	bgt	d1e8 <ReadInt64Data+0x12f8>
    c364:	ldr	r3, [r4]
    c368:	add	r4, sp, #296	; 0x128
    c36c:	mov	r1, sl
    c370:	mov	r2, r6
    c374:	mov	r0, r4
    c378:	bl	18b8 <fread@plt>
    c37c:	mov	r9, r0
    c380:	cmp	r6, #1
    c384:	blt	e078 <ReadInt64Data+0x2188>
    c388:	str	r5, [sp, #24]
    c38c:	mov	r8, r7
    c390:	mov	r5, r7
    c394:	mov	r7, r6
    c398:	mov	r0, r4
    c39c:	bl	1b84 <Mat_int64Swap>
    c3a0:	strd	r0, [r5]
    c3a4:	add	r4, r4, #8
    c3a8:	add	r5, r5, #8
    c3ac:	subs	r6, r6, #1
    c3b0:	bne	c398 <ReadInt64Data+0x4a8>
    c3b4:	ldr	r4, [sp, #36]	; 0x24
    c3b8:	mov	r6, r7
    c3bc:	mov	r7, r8
    c3c0:	b	de2c <ReadInt64Data+0x1f3c>
    c3c4:	sub	r1, r6, #256	; 0x100
    c3c8:	str	sl, [sp, #32]
    c3cc:	str	r6, [sp, #8]
    c3d0:	mov	r9, r7
    c3d4:	add	r0, r7, #2048	; 0x800
    c3d8:	mov	r2, #0
    c3dc:	mov	r4, #0
    c3e0:	add	r7, sp, #296	; 0x128
    c3e4:	add	r5, sp, #256	; 0x100
    c3e8:	mov	sl, #32
    c3ec:	add	r6, sp, #260	; 0x104
    c3f0:	str	r1, [sp, #12]
    c3f4:	mov	r1, #256	; 0x100
    c3f8:	str	r9, [sp, #4]
    c3fc:	str	r2, [sp, #28]
    c400:	add	r2, sp, #16
    c404:	stm	r2, {r0, r1, r4}
    c408:	ldr	r0, [sp, #36]	; 0x24
    c40c:	ldr	r1, [sp, #32]
    c410:	mov	r2, #256	; 0x100
    c414:	ldr	r3, [r0]
    c418:	mov	r0, r7
    c41c:	bl	18b8 <fread@plt>
    c420:	mov	r1, r9
    c424:	mov	r2, #0
    c428:	add	r3, r7, r2
    c42c:	add	r2, r2, #4
    c430:	ldrh	r4, [r3]
    c434:	cmp	r2, #256	; 0x100
    c438:	strh	r4, [r8, #24]
    c43c:	add	r4, r1, #16
    c440:	vld1.16	{d16[0]}, [r5 :16]
    c444:	vmovl.s8	q8, d16
    c448:	vmovl.s16	q8, d16
    c44c:	vmovl.s32	q8, d16
    c450:	vst1.64	{d16-d17}, [r1], sl
    c454:	ldrh	r3, [r3, #2]
    c458:	strh	r3, [r8, #28]
    c45c:	vld1.16	{d16[0]}, [r6 :16]
    c460:	vmovl.s8	q8, d16
    c464:	vmovl.s16	q8, d16
    c468:	vmovl.s32	q8, d16
    c46c:	vst1.64	{d16-d17}, [r4]
    c470:	bne	c428 <ReadInt64Data+0x538>
    c474:	ldr	r1, [sp, #28]
    c478:	ldr	r2, [sp, #24]
    c47c:	add	r9, r9, #2048	; 0x800
    c480:	add	r1, r0, r1
    c484:	ldr	r0, [sp, #16]
    c488:	add	r4, r2, #256	; 0x100
    c48c:	ldr	r2, [sp, #12]
    c490:	str	r1, [sp, #28]
    c494:	ldr	r1, [sp, #20]
    c498:	add	r0, r0, #2048	; 0x800
    c49c:	cmp	r4, r2
    c4a0:	add	r1, r1, #256	; 0x100
    c4a4:	blt	c400 <ReadInt64Data+0x510>
    c4a8:	ldr	r5, [sp, #8]
    c4ac:	cmp	r4, r5
    c4b0:	bge	dba4 <ReadInt64Data+0x1cb4>
    c4b4:	ldr	r0, [sp, #36]	; 0x24
    c4b8:	ldr	sl, [sp, #32]
    c4bc:	sub	r6, r5, r4
    c4c0:	add	r9, sp, #296	; 0x128
    c4c4:	mov	r2, r6
    c4c8:	ldr	r3, [r0]
    c4cc:	mov	r0, r9
    c4d0:	mov	r1, sl
    c4d4:	bl	18b8 <fread@plt>
    c4d8:	ldr	r1, [sp, #28]
    c4dc:	cmp	r6, #1
    c4e0:	add	r1, r0, r1
    c4e4:	str	r1, [sp, #28]
    c4e8:	blt	e2ac <ReadInt64Data+0x23bc>
    c4ec:	ldr	sl, [sp, #4]
    c4f0:	mov	lr, #0
    c4f4:	beq	e1d4 <ReadInt64Data+0x22e4>
    c4f8:	bic	lr, r6, #1
    c4fc:	mov	r1, #1
    c500:	str	r6, [sp, #36]	; 0x24
    c504:	subs	r2, lr, #2
    c508:	add	r2, r1, r2, lsr #1
    c50c:	and	r0, r2, #1
    c510:	str	r0, [sp, #12]
    c514:	beq	e188 <ReadInt64Data+0x2298>
    c518:	ldr	r0, [sp, #24]
    c51c:	ldr	ip, [sp, #16]
    c520:	add	r6, sp, #248	; 0xf8
    c524:	sub	r2, r5, r0
    c528:	mov	r5, #32
    c52c:	sub	r2, r2, #256	; 0x100
    c530:	bic	r2, r2, #1
    c534:	sub	r2, r2, #2
    c538:	add	r1, r1, r2, lsr #1
    c53c:	mvn	r3, r2, lsr #1
    c540:	mov	r2, #0
    c544:	and	r1, r1, #1
    c548:	add	r3, r3, r1
    c54c:	add	r1, sp, #252	; 0xfc
    c550:	add	r0, r9, r2
    c554:	adds	r3, r3, #2
    c558:	add	r2, r2, #4
    c55c:	ldrh	r7, [r0]
    c560:	strh	r7, [r8, #16]
    c564:	add	r7, ip, #16
    c568:	vld1.16	{d16[0]}, [r6 :16]
    c56c:	vmovl.s8	q8, d16
    c570:	vmovl.s16	q8, d16
    c574:	vmovl.s32	q8, d16
    c578:	vst1.64	{d16-d17}, [ip], r5
    c57c:	ldrh	r0, [r0, #2]
    c580:	strh	r0, [r8, #20]
    c584:	vld1.16	{d16[0]}, [r1 :16]
    c588:	vmovl.s8	q8, d16
    c58c:	vmovl.s16	q8, d16
    c590:	vmovl.s32	q8, d16
    c594:	vst1.64	{d16-d17}, [r7]
    c598:	bne	c550 <ReadInt64Data+0x660>
    c59c:	b	e18c <ReadInt64Data+0x229c>
    c5a0:	sub	r1, r6, #256	; 0x100
    c5a4:	str	sl, [sp, #32]
    c5a8:	str	r6, [sp, #8]
    c5ac:	mov	r6, r7
    c5b0:	add	r0, r7, #2048	; 0x800
    c5b4:	mov	r2, #0
    c5b8:	mov	r4, #0
    c5bc:	add	r7, sp, #296	; 0x128
    c5c0:	add	r5, sp, #288	; 0x120
    c5c4:	mov	sl, #32
    c5c8:	add	r9, sp, #292	; 0x124
    c5cc:	str	r1, [sp, #12]
    c5d0:	mov	r1, #256	; 0x100
    c5d4:	str	r6, [sp, #4]
    c5d8:	str	r2, [sp, #28]
    c5dc:	add	r2, sp, #16
    c5e0:	stm	r2, {r0, r1, r4}
    c5e4:	ldr	r0, [sp, #36]	; 0x24
    c5e8:	ldr	r1, [sp, #32]
    c5ec:	mov	r2, #256	; 0x100
    c5f0:	ldr	r3, [r0]
    c5f4:	mov	r0, r7
    c5f8:	bl	18b8 <fread@plt>
    c5fc:	mov	r1, r6
    c600:	mov	r2, #0
    c604:	add	r3, r7, r2
    c608:	add	r2, r2, #4
    c60c:	ldrh	r4, [r3]
    c610:	cmp	r2, #256	; 0x100
    c614:	strh	r4, [r8, #56]	; 0x38
    c618:	add	r4, r1, #16
    c61c:	vld1.16	{d16[0]}, [r5 :16]
    c620:	vmovl.u8	q8, d16
    c624:	vmovl.u16	q8, d16
    c628:	vmovl.u32	q8, d16
    c62c:	vst1.64	{d16-d17}, [r1], sl
    c630:	ldrh	r3, [r3, #2]
    c634:	strh	r3, [r8, #60]	; 0x3c
    c638:	vld1.16	{d16[0]}, [r9 :16]
    c63c:	vmovl.u8	q8, d16
    c640:	vmovl.u16	q8, d16
    c644:	vmovl.u32	q8, d16
    c648:	vst1.64	{d16-d17}, [r4]
    c64c:	bne	c604 <ReadInt64Data+0x714>
    c650:	ldr	r1, [sp, #28]
    c654:	ldr	r2, [sp, #24]
    c658:	add	r6, r6, #2048	; 0x800
    c65c:	add	r1, r0, r1
    c660:	ldr	r0, [sp, #16]
    c664:	add	r4, r2, #256	; 0x100
    c668:	ldr	r2, [sp, #12]
    c66c:	str	r1, [sp, #28]
    c670:	ldr	r1, [sp, #20]
    c674:	add	r0, r0, #2048	; 0x800
    c678:	cmp	r4, r2
    c67c:	add	r1, r1, #256	; 0x100
    c680:	blt	c5dc <ReadInt64Data+0x6ec>
    c684:	ldr	r5, [sp, #8]
    c688:	cmp	r4, r5
    c68c:	bge	dba4 <ReadInt64Data+0x1cb4>
    c690:	ldr	r0, [sp, #36]	; 0x24
    c694:	ldr	sl, [sp, #32]
    c698:	sub	r6, r5, r4
    c69c:	add	r9, sp, #296	; 0x128
    c6a0:	mov	r2, r6
    c6a4:	ldr	r3, [r0]
    c6a8:	mov	r0, r9
    c6ac:	mov	r1, sl
    c6b0:	bl	18b8 <fread@plt>
    c6b4:	ldr	r1, [sp, #28]
    c6b8:	cmp	r6, #1
    c6bc:	add	r1, r0, r1
    c6c0:	str	r1, [sp, #28]
    c6c4:	blt	e2ac <ReadInt64Data+0x23bc>
    c6c8:	ldr	r7, [sp, #4]
    c6cc:	mov	r1, #0
    c6d0:	mov	lr, #0
    c6d4:	beq	e274 <ReadInt64Data+0x2384>
    c6d8:	bic	lr, r6, #1
    c6dc:	mov	r0, #1
    c6e0:	str	r6, [sp, #36]	; 0x24
    c6e4:	subs	r2, lr, #2
    c6e8:	add	r2, r0, r2, lsr #1
    c6ec:	and	r2, r2, #1
    c6f0:	str	r2, [sp, #12]
    c6f4:	beq	e220 <ReadInt64Data+0x2330>
    c6f8:	ldr	r2, [sp, #24]
    c6fc:	ldr	ip, [sp, #16]
    c700:	add	sl, sp, #280	; 0x118
    c704:	sub	r2, r5, r2
    c708:	sub	r2, r2, #256	; 0x100
    c70c:	bic	r2, r2, #1
    c710:	sub	r2, r2, #2
    c714:	add	r0, r0, r2, lsr #1
    c718:	mvn	r3, r2, lsr #1
    c71c:	mov	r2, #32
    c720:	and	r0, r0, #1
    c724:	add	r6, r3, r0
    c728:	mov	r3, #0
    c72c:	add	r0, sp, #284	; 0x11c
    c730:	add	r7, r9, r3
    c734:	adds	r6, r6, #2
    c738:	add	r3, r3, #4
    c73c:	ldrh	r5, [r7]
    c740:	strh	r5, [r8, #48]	; 0x30
    c744:	add	r5, ip, #16
    c748:	vld1.16	{d16[0]}, [sl :16]
    c74c:	vmovl.u8	q8, d16
    c750:	vmovl.u16	q8, d16
    c754:	vmovl.u32	q8, d16
    c758:	vst1.64	{d16-d17}, [ip], r2
    c75c:	ldrh	r7, [r7, #2]
    c760:	strh	r7, [r8, #52]	; 0x34
    c764:	vld1.16	{d16[0]}, [r0 :16]
    c768:	vmovl.u8	q8, d16
    c76c:	vmovl.u16	q8, d16
    c770:	vmovl.u32	q8, d16
    c774:	vst1.64	{d16-d17}, [r5]
    c778:	bne	c730 <ReadInt64Data+0x840>
    c77c:	b	e224 <ReadInt64Data+0x2334>
    c780:	cmp	r6, #256	; 0x100
    c784:	bgt	d300 <ReadInt64Data+0x1410>
    c788:	ldr	r3, [r4]
    c78c:	add	r4, sp, #296	; 0x128
    c790:	mov	r1, sl
    c794:	mov	r2, r6
    c798:	mov	r0, r4
    c79c:	bl	18b8 <fread@plt>
    c7a0:	mov	r9, r0
    c7a4:	cmp	r6, #1
    c7a8:	blt	e524 <ReadInt64Data+0x2634>
    c7ac:	mov	lr, #0
    c7b0:	beq	e304 <ReadInt64Data+0x2414>
    c7b4:	bic	lr, r6, #1
    c7b8:	mov	r2, #1
    c7bc:	str	sl, [sp, #32]
    c7c0:	str	r6, [sp, #8]
    c7c4:	subs	r1, lr, #2
    c7c8:	add	r1, r2, r1, lsr #1
    c7cc:	and	ip, r1, #1
    c7d0:	beq	e2bc <ReadInt64Data+0x23cc>
    c7d4:	sub	r3, r1, ip
    c7d8:	mov	r1, #0
    c7dc:	add	r8, sp, #172	; 0xac
    c7e0:	mov	r6, #32
    c7e4:	add	r5, sp, #176	; 0xb0
    c7e8:	mov	sl, r7
    c7ec:	mov	r2, r7
    c7f0:	ldr	r0, [r4]
    c7f4:	subs	r3, r3, #2
    c7f8:	add	r1, r1, #4
    c7fc:	str	r0, [sp, #172]	; 0xac
    c800:	add	r0, r2, #16
    c804:	vld1.32	{d16[0]}, [r8 :32]
    c808:	vmovl.s16	q8, d16
    c80c:	vmovl.s32	q8, d16
    c810:	vst1.64	{d16-d17}, [r2], r6
    c814:	ldr	r7, [r4, #4]
    c818:	add	r4, r4, #8
    c81c:	str	r7, [sp, #176]	; 0xb0
    c820:	vld1.32	{d16[0]}, [r5 :32]
    c824:	vmovl.s16	q8, d16
    c828:	vmovl.s32	q8, d16
    c82c:	vst1.64	{d16-d17}, [r0]
    c830:	bne	c7f0 <ReadInt64Data+0x900>
    c834:	b	e2c4 <ReadInt64Data+0x23d4>
    c838:	cmp	r6, #256	; 0x100
    c83c:	bgt	d4b8 <ReadInt64Data+0x15c8>
    c840:	ldr	r3, [r4]
    c844:	add	r4, sp, #296	; 0x128
    c848:	mov	r1, sl
    c84c:	mov	r2, r6
    c850:	mov	r0, r4
    c854:	bl	18b8 <fread@plt>
    c858:	mov	r9, r0
    c85c:	cmp	r6, #1
    c860:	blt	e524 <ReadInt64Data+0x2634>
    c864:	mov	r1, #0
    c868:	mov	lr, #0
    c86c:	beq	e378 <ReadInt64Data+0x2488>
    c870:	bic	lr, r6, #1
    c874:	mov	r2, #1
    c878:	str	sl, [sp, #32]
    c87c:	mov	sl, r7
    c880:	str	r9, [sp, #28]
    c884:	str	r6, [sp, #8]
    c888:	subs	r0, lr, #2
    c88c:	add	r0, r2, r0, lsr #1
    c890:	and	ip, r0, #1
    c894:	beq	e330 <ReadInt64Data+0x2440>
    c898:	sub	r7, r0, ip
    c89c:	mov	r2, #0
    c8a0:	add	r8, sp, #204	; 0xcc
    c8a4:	mov	r9, #32
    c8a8:	add	r3, sp, #208	; 0xd0
    c8ac:	mov	r0, sl
    c8b0:	ldr	r6, [r4]
    c8b4:	subs	r7, r7, #2
    c8b8:	add	r2, r2, #4
    c8bc:	str	r6, [sp, #204]	; 0xcc
    c8c0:	add	r6, r0, #16
    c8c4:	vld1.32	{d16[0]}, [r8 :32]
    c8c8:	vmovl.u16	q8, d16
    c8cc:	vmovl.u32	q8, d16
    c8d0:	vst1.64	{d16-d17}, [r0], r9
    c8d4:	ldr	r5, [r4, #4]
    c8d8:	add	r4, r4, #8
    c8dc:	str	r5, [sp, #208]	; 0xd0
    c8e0:	vld1.32	{d16[0]}, [r3 :32]
    c8e4:	vmovl.u16	q8, d16
    c8e8:	vmovl.u32	q8, d16
    c8ec:	vst1.64	{d16-d17}, [r6]
    c8f0:	bne	c8b0 <ReadInt64Data+0x9c0>
    c8f4:	b	e334 <ReadInt64Data+0x2444>
    c8f8:	cmp	r6, #256	; 0x100
    c8fc:	bgt	d678 <ReadInt64Data+0x1788>
    c900:	ldr	r3, [r4]
    c904:	add	r4, sp, #296	; 0x128
    c908:	mov	r1, sl
    c90c:	mov	r2, r6
    c910:	mov	r0, r4
    c914:	bl	18b8 <fread@plt>
    c918:	mov	r9, r0
    c91c:	cmp	r6, #1
    c920:	blt	e524 <ReadInt64Data+0x2634>
    c924:	mov	lr, #0
    c928:	beq	e470 <ReadInt64Data+0x2580>
    c92c:	bic	lr, r6, #1
    c930:	mov	r2, #1
    c934:	str	sl, [sp, #32]
    c938:	mov	sl, r7
    c93c:	str	r6, [sp, #8]
    c940:	str	r9, [sp, #28]
    c944:	subs	r1, lr, #2
    c948:	add	r1, r2, r1, lsr #1
    c94c:	and	ip, r1, #1
    c950:	beq	e420 <ReadInt64Data+0x2530>
    c954:	sub	r3, r1, ip
    c958:	mov	r1, #0
    c95c:	add	r8, sp, #48	; 0x30
    c960:	mov	r9, #32
    c964:	add	r5, sp, #56	; 0x38
    c968:	mov	r2, sl
    c96c:	ldm	r4, {r0, r7}
    c970:	str	r7, [sp, #52]	; 0x34
    c974:	subs	r3, r3, #2
    c978:	add	r1, r1, #4
    c97c:	str	r0, [sp, #48]	; 0x30
    c980:	add	r0, r2, #16
    c984:	vld1.32	{d16}, [r8 :64]
    c988:	vmovl.s32	q8, d16
    c98c:	vst1.64	{d16-d17}, [r2], r9
    c990:	ldr	r7, [r4, #8]
    c994:	ldr	r6, [r4, #12]
    c998:	add	r4, r4, #16
    c99c:	str	r6, [sp, #60]	; 0x3c
    c9a0:	str	r7, [sp, #56]	; 0x38
    c9a4:	vld1.32	{d16}, [r5 :64]
    c9a8:	vmovl.s32	q8, d16
    c9ac:	vst1.64	{d16-d17}, [r0]
    c9b0:	bne	c96c <ReadInt64Data+0xa7c>
    c9b4:	b	e424 <ReadInt64Data+0x2534>
    c9b8:	cmp	r6, #256	; 0x100
    c9bc:	bgt	d850 <ReadInt64Data+0x1960>
    c9c0:	ldr	r3, [r4]
    c9c4:	add	r4, sp, #296	; 0x128
    c9c8:	mov	r1, sl
    c9cc:	mov	r2, r6
    c9d0:	mov	r0, r4
    c9d4:	bl	18b8 <fread@plt>
    c9d8:	mov	r9, r0
    c9dc:	cmp	r6, #1
    c9e0:	blt	e524 <ReadInt64Data+0x2634>
    c9e4:	mov	r1, #0
    c9e8:	mov	lr, #0
    c9ec:	beq	e3f4 <ReadInt64Data+0x2504>
    c9f0:	bic	lr, r6, #1
    c9f4:	mov	r2, #1
    c9f8:	str	r7, [sp, #4]
    c9fc:	str	r9, [sp, #28]
    ca00:	str	r6, [sp, #8]
    ca04:	str	sl, [sp, #32]
    ca08:	subs	r0, lr, #2
    ca0c:	add	r0, r2, r0, lsr #1
    ca10:	and	ip, r0, #1
    ca14:	beq	e3a4 <ReadInt64Data+0x24b4>
    ca18:	sub	r7, r0, ip
    ca1c:	ldr	r0, [sp, #4]
    ca20:	mov	r2, #0
    ca24:	add	r8, sp, #112	; 0x70
    ca28:	mov	r9, #32
    ca2c:	add	sl, sp, #120	; 0x78
    ca30:	ldr	r6, [r4]
    ca34:	ldr	r5, [r4, #4]
    ca38:	subs	r7, r7, #2
    ca3c:	add	r2, r2, #4
    ca40:	str	r5, [sp, #116]	; 0x74
    ca44:	str	r6, [sp, #112]	; 0x70
    ca48:	add	r5, r0, #16
    ca4c:	vld1.32	{d16}, [r8 :64]
    ca50:	vmovl.u32	q8, d16
    ca54:	vst1.64	{d16-d17}, [r0], r9
    ca58:	ldr	r6, [r4, #8]
    ca5c:	ldr	r3, [r4, #12]
    ca60:	add	r4, r4, #16
    ca64:	str	r3, [sp, #124]	; 0x7c
    ca68:	str	r6, [sp, #120]	; 0x78
    ca6c:	vld1.32	{d16}, [sl :64]
    ca70:	vmovl.u32	q8, d16
    ca74:	vst1.64	{d16-d17}, [r5]
    ca78:	bne	ca30 <ReadInt64Data+0xb40>
    ca7c:	b	e3a8 <ReadInt64Data+0x24b8>
    ca80:	cmp	r6, #256	; 0x100
    ca84:	bgt	da34 <ReadInt64Data+0x1b44>
    ca88:	ldr	r3, [r4]
    ca8c:	add	r8, sp, #296	; 0x128
    ca90:	mov	r1, sl
    ca94:	mov	r2, r6
    ca98:	mov	r0, r8
    ca9c:	bl	18b8 <fread@plt>
    caa0:	mov	r9, r0
    caa4:	cmp	r6, #1
    caa8:	blt	e524 <ReadInt64Data+0x2634>
    caac:	str	sl, [sp, #32]
    cab0:	str	r9, [sp, #28]
    cab4:	mov	sl, r7
    cab8:	and	r9, r6, #1
    cabc:	mov	r5, #0
    cac0:	beq	cb00 <ReadInt64Data+0xc10>
    cac4:	sub	r7, r6, r9
    cac8:	add	r4, r8, #4
    cacc:	mov	r5, #0
    cad0:	mov	r6, sl
    cad4:	ldr	r0, [r4, #-4]
    cad8:	bl	717f0 <__aeabi_f2lz>
    cadc:	strd	r0, [r6]
    cae0:	ldr	r0, [r4]
    cae4:	bl	717f0 <__aeabi_f2lz>
    cae8:	add	r5, r5, #2
    caec:	strd	r0, [r6, #8]
    caf0:	add	r6, r6, #16
    caf4:	add	r4, r4, #8
    caf8:	cmp	r7, r5
    cafc:	bne	cad4 <ReadInt64Data+0xbe4>
    cb00:	cmp	r9, #0
    cb04:	beq	e20c <ReadInt64Data+0x231c>
    cb08:	ldr	r0, [r8, r5, lsl #2]
    cb0c:	bl	717f0 <__aeabi_f2lz>
    cb10:	str	r0, [sl, r5, lsl #3]!
    cb14:	str	r1, [sl, #4]
    cb18:	b	e20c <ReadInt64Data+0x231c>
    cb1c:	cmp	r6, #256	; 0x100
    cb20:	bgt	dbb8 <ReadInt64Data+0x1cc8>
    cb24:	ldr	r3, [r4]
    cb28:	add	r8, sp, #296	; 0x128
    cb2c:	mov	r1, sl
    cb30:	mov	r2, r6
    cb34:	mov	r0, r8
    cb38:	bl	18b8 <fread@plt>
    cb3c:	mov	r9, r0
    cb40:	cmp	r6, #1
    cb44:	blt	e524 <ReadInt64Data+0x2634>
    cb48:	str	sl, [sp, #32]
    cb4c:	str	r9, [sp, #28]
    cb50:	mov	sl, r7
    cb54:	and	r9, r6, #1
    cb58:	mov	r5, #0
    cb5c:	beq	cba4 <ReadInt64Data+0xcb4>
    cb60:	sub	r7, r6, r9
    cb64:	add	r4, r8, #8
    cb68:	mov	r5, #0
    cb6c:	mov	r6, sl
    cb70:	vldr	d16, [r4, #-8]
    cb74:	vmov	r0, r1, d16
    cb78:	bl	7181c <__aeabi_d2lz>
    cb7c:	strd	r0, [r6]
    cb80:	vldr	d16, [r4]
    cb84:	vmov	r0, r1, d16
    cb88:	bl	7181c <__aeabi_d2lz>
    cb8c:	add	r5, r5, #2
    cb90:	strd	r0, [r6, #8]
    cb94:	add	r6, r6, #16
    cb98:	add	r4, r4, #16
    cb9c:	cmp	r7, r5
    cba0:	bne	cb70 <ReadInt64Data+0xc80>
    cba4:	cmp	r9, #0
    cba8:	beq	cbc4 <ReadInt64Data+0xcd4>
    cbac:	add	r0, r8, r5, lsl #3
    cbb0:	vldr	d16, [r0]
    cbb4:	vmov	r0, r1, d16
    cbb8:	bl	7181c <__aeabi_d2lz>
    cbbc:	str	r0, [sl, r5, lsl #3]!
    cbc0:	str	r1, [sl, #4]
    cbc4:	ldr	r9, [sp, #28]
    cbc8:	ldr	sl, [sp, #32]
    cbcc:	mul	r0, r9, sl
    cbd0:	sub	sp, fp, #28
    cbd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cbd8:	cmp	r6, #256	; 0x100
    cbdc:	bgt	dd50 <ReadInt64Data+0x1e60>
    cbe0:	ldr	r3, [r4]
    cbe4:	add	r0, sp, #296	; 0x128
    cbe8:	mov	r1, sl
    cbec:	mov	r2, r6
    cbf0:	bl	18b8 <fread@plt>
    cbf4:	mov	r9, r0
    cbf8:	cmp	r6, #1
    cbfc:	blt	de30 <ReadInt64Data+0x1f40>
    cc00:	lsl	r2, r6, #3
    cc04:	add	r1, sp, #296	; 0x128
    cc08:	mov	r0, r7
    cc0c:	bl	181c <memcpy@plt>
    cc10:	cmp	r5, #13
    cc14:	beq	de38 <ReadInt64Data+0x1f48>
    cc18:	b	e524 <ReadInt64Data+0x2634>
    cc1c:	sub	r0, r6, #256	; 0x100
    cc20:	mov	r8, r7
    cc24:	add	r1, r7, #2048	; 0x800
    cc28:	mov	r9, #0
    cc2c:	str	sl, [sp, #32]
    cc30:	str	r6, [sp, #8]
    cc34:	str	r0, [sp, #28]
    cc38:	mov	r0, #0
    cc3c:	mov	r5, r1
    cc40:	ldr	r3, [r4]
    cc44:	ldr	r1, [sp, #32]
    cc48:	add	r4, sp, #296	; 0x128
    cc4c:	mov	sl, r0
    cc50:	mov	r2, #256	; 0x100
    cc54:	mov	r0, r4
    cc58:	bl	18b8 <fread@plt>
    cc5c:	mov	r7, r0
    cc60:	mov	r6, #0
    cc64:	mov	r0, r4
    cc68:	bl	1c20 <Mat_int16Swap>
    cc6c:	mov	r1, r8
    cc70:	add	r4, r4, #2
    cc74:	str	r0, [r1, r6]!
    cc78:	add	r6, r6, #8
    cc7c:	asr	r0, r0, #31
    cc80:	cmp	r6, #2048	; 0x800
    cc84:	str	r0, [r1, #4]
    cc88:	bne	cc64 <ReadInt64Data+0xd74>
    cc8c:	ldr	r2, [sp, #28]
    cc90:	ldr	r4, [sp, #36]	; 0x24
    cc94:	add	r0, sl, #256	; 0x100
    cc98:	add	r9, r7, r9
    cc9c:	add	r8, r8, #2048	; 0x800
    cca0:	add	r1, r5, #2048	; 0x800
    cca4:	cmp	r0, r2
    cca8:	blt	cc3c <ReadInt64Data+0xd4c>
    ccac:	ldr	r6, [sp, #8]
    ccb0:	cmp	r0, r6
    ccb4:	bge	e520 <ReadInt64Data+0x2630>
    ccb8:	ldr	r3, [r4]
    ccbc:	ldr	r1, [sp, #32]
    ccc0:	sub	r7, r6, r0
    ccc4:	add	r4, sp, #296	; 0x128
    ccc8:	mov	r0, r4
    cccc:	mov	r2, r7
    ccd0:	bl	18b8 <fread@plt>
    ccd4:	add	r9, r0, r9
    ccd8:	cmp	r7, #1
    ccdc:	blt	e520 <ReadInt64Data+0x2630>
    cce0:	sub	r0, r6, sl
    cce4:	sub	r6, r0, #256	; 0x100
    cce8:	mov	r0, r4
    ccec:	bl	1c20 <Mat_int16Swap>
    ccf0:	asr	r1, r0, #31
    ccf4:	add	r4, r4, #2
    ccf8:	subs	r6, r6, #1
    ccfc:	strd	r0, [r5]
    cd00:	add	r5, r5, #8
    cd04:	bne	cce8 <ReadInt64Data+0xdf8>
    cd08:	b	e520 <ReadInt64Data+0x2630>
    cd0c:	sub	r1, r6, #256	; 0x100
    cd10:	str	sl, [sp, #32]
    cd14:	str	r6, [sp, #8]
    cd18:	mov	sl, r7
    cd1c:	add	r0, r7, #2048	; 0x800
    cd20:	mov	r6, #0
    cd24:	mov	r9, #0
    cd28:	str	r1, [sp, #24]
    cd2c:	mov	r1, #0
    cd30:	str	r1, [sp, #28]
    cd34:	ldr	r3, [r4]
    cd38:	ldr	r1, [sp, #32]
    cd3c:	add	r4, sp, #296	; 0x128
    cd40:	mov	r5, r0
    cd44:	mov	r2, #256	; 0x100
    cd48:	mov	r8, r9
    cd4c:	mov	r0, r4
    cd50:	bl	18b8 <fread@plt>
    cd54:	mov	r7, r0
    cd58:	mov	r9, #0
    cd5c:	mov	r0, r4
    cd60:	bl	1c34 <Mat_uint16Swap>
    cd64:	mov	r1, sl
    cd68:	add	r4, r4, #2
    cd6c:	str	r0, [r1, r9]!
    cd70:	add	r9, r9, #8
    cd74:	cmp	r9, #2048	; 0x800
    cd78:	str	r6, [r1, #4]
    cd7c:	bne	cd5c <ReadInt64Data+0xe6c>
    cd80:	mov	r9, r8
    cd84:	add	r9, r7, r8
    cd88:	ldr	r7, [sp, #28]
    cd8c:	ldr	r2, [sp, #24]
    cd90:	ldr	r4, [sp, #36]	; 0x24
    cd94:	add	sl, sl, #2048	; 0x800
    cd98:	add	r0, r5, #2048	; 0x800
    cd9c:	add	r1, r7, #256	; 0x100
    cda0:	cmp	r1, r2
    cda4:	blt	cd30 <ReadInt64Data+0xe40>
    cda8:	ldr	r6, [sp, #8]
    cdac:	cmp	r1, r6
    cdb0:	bge	dfb4 <ReadInt64Data+0x20c4>
    cdb4:	sub	r8, r6, r1
    cdb8:	ldr	r3, [r4]
    cdbc:	ldr	r1, [sp, #32]
    cdc0:	add	r4, sp, #296	; 0x128
    cdc4:	mov	r0, r4
    cdc8:	mov	r2, r8
    cdcc:	bl	18b8 <fread@plt>
    cdd0:	add	r9, r0, r9
    cdd4:	cmp	r8, #1
    cdd8:	blt	dfb4 <ReadInt64Data+0x20c4>
    cddc:	sub	r0, r6, r7
    cde0:	mov	r7, #0
    cde4:	sub	r6, r0, #256	; 0x100
    cde8:	mov	r0, r4
    cdec:	bl	1c34 <Mat_uint16Swap>
    cdf0:	stm	r5, {r0, r7}
    cdf4:	add	r5, r5, #8
    cdf8:	add	r4, r4, #2
    cdfc:	subs	r6, r6, #1
    ce00:	bne	cde8 <ReadInt64Data+0xef8>
    ce04:	b	dfb4 <ReadInt64Data+0x20c4>
    ce08:	sub	r0, r6, #256	; 0x100
    ce0c:	mov	r8, r7
    ce10:	add	r1, r7, #2048	; 0x800
    ce14:	mov	r9, #0
    ce18:	str	sl, [sp, #32]
    ce1c:	str	r6, [sp, #8]
    ce20:	str	r0, [sp, #28]
    ce24:	mov	r0, #0
    ce28:	mov	r5, r1
    ce2c:	ldr	r3, [r4]
    ce30:	ldr	r1, [sp, #32]
    ce34:	add	r4, sp, #296	; 0x128
    ce38:	mov	sl, r0
    ce3c:	mov	r2, #256	; 0x100
    ce40:	mov	r0, r4
    ce44:	bl	18b8 <fread@plt>
    ce48:	mov	r7, r0
    ce4c:	mov	r6, #0
    ce50:	mov	r0, r4
    ce54:	bl	1bf8 <Mat_int32Swap>
    ce58:	mov	r1, r8
    ce5c:	add	r4, r4, #4
    ce60:	str	r0, [r1, r6]!
    ce64:	add	r6, r6, #8
    ce68:	asr	r0, r0, #31
    ce6c:	cmp	r6, #2048	; 0x800
    ce70:	str	r0, [r1, #4]
    ce74:	bne	ce50 <ReadInt64Data+0xf60>
    ce78:	ldr	r2, [sp, #28]
    ce7c:	ldr	r4, [sp, #36]	; 0x24
    ce80:	add	r0, sl, #256	; 0x100
    ce84:	add	r9, r7, r9
    ce88:	add	r8, r8, #2048	; 0x800
    ce8c:	add	r1, r5, #2048	; 0x800
    ce90:	cmp	r0, r2
    ce94:	blt	ce28 <ReadInt64Data+0xf38>
    ce98:	ldr	r6, [sp, #8]
    ce9c:	cmp	r0, r6
    cea0:	bge	dfb4 <ReadInt64Data+0x20c4>
    cea4:	ldr	r3, [r4]
    cea8:	ldr	r1, [sp, #32]
    ceac:	sub	r7, r6, r0
    ceb0:	add	r4, sp, #296	; 0x128
    ceb4:	mov	r0, r4
    ceb8:	mov	r2, r7
    cebc:	bl	18b8 <fread@plt>
    cec0:	add	r9, r0, r9
    cec4:	cmp	r7, #1
    cec8:	blt	dfb4 <ReadInt64Data+0x20c4>
    cecc:	sub	r0, r6, sl
    ced0:	sub	r6, r0, #256	; 0x100
    ced4:	mov	r0, r4
    ced8:	bl	1bf8 <Mat_int32Swap>
    cedc:	asr	r1, r0, #31
    cee0:	add	r4, r4, #4
    cee4:	subs	r6, r6, #1
    cee8:	strd	r0, [r5]
    ceec:	add	r5, r5, #8
    cef0:	bne	ced4 <ReadInt64Data+0xfe4>
    cef4:	b	dfb4 <ReadInt64Data+0x20c4>
    cef8:	sub	r1, r6, #256	; 0x100
    cefc:	str	sl, [sp, #32]
    cf00:	str	r6, [sp, #8]
    cf04:	mov	sl, r7
    cf08:	add	r0, r7, #2048	; 0x800
    cf0c:	mov	r6, #0
    cf10:	mov	r9, #0
    cf14:	str	r1, [sp, #24]
    cf18:	mov	r1, #0
    cf1c:	str	r1, [sp, #28]
    cf20:	ldr	r3, [r4]
    cf24:	ldr	r1, [sp, #32]
    cf28:	add	r4, sp, #296	; 0x128
    cf2c:	mov	r5, r0
    cf30:	mov	r2, #256	; 0x100
    cf34:	mov	r8, r9
    cf38:	mov	r0, r4
    cf3c:	bl	18b8 <fread@plt>
    cf40:	mov	r7, r0
    cf44:	mov	r9, #0
    cf48:	mov	r0, r4
    cf4c:	bl	1c0c <Mat_uint32Swap>
    cf50:	mov	r1, sl
    cf54:	add	r4, r4, #4
    cf58:	str	r0, [r1, r9]!
    cf5c:	add	r9, r9, #8
    cf60:	cmp	r9, #2048	; 0x800
    cf64:	str	r6, [r1, #4]
    cf68:	bne	cf48 <ReadInt64Data+0x1058>
    cf6c:	mov	r9, r8
    cf70:	add	r9, r7, r8
    cf74:	ldr	r7, [sp, #28]
    cf78:	ldr	r2, [sp, #24]
    cf7c:	ldr	r4, [sp, #36]	; 0x24
    cf80:	add	sl, sl, #2048	; 0x800
    cf84:	add	r0, r5, #2048	; 0x800
    cf88:	add	r1, r7, #256	; 0x100
    cf8c:	cmp	r1, r2
    cf90:	blt	cf1c <ReadInt64Data+0x102c>
    cf94:	ldr	r6, [sp, #8]
    cf98:	cmp	r1, r6
    cf9c:	bge	dfb4 <ReadInt64Data+0x20c4>
    cfa0:	sub	r8, r6, r1
    cfa4:	ldr	r3, [r4]
    cfa8:	ldr	r1, [sp, #32]
    cfac:	add	r4, sp, #296	; 0x128
    cfb0:	mov	r0, r4
    cfb4:	mov	r2, r8
    cfb8:	bl	18b8 <fread@plt>
    cfbc:	add	r9, r0, r9
    cfc0:	cmp	r8, #1
    cfc4:	blt	dfb4 <ReadInt64Data+0x20c4>
    cfc8:	sub	r0, r6, r7
    cfcc:	mov	r7, #0
    cfd0:	sub	r6, r0, #256	; 0x100
    cfd4:	mov	r0, r4
    cfd8:	bl	1c0c <Mat_uint32Swap>
    cfdc:	stm	r5, {r0, r7}
    cfe0:	add	r5, r5, #8
    cfe4:	add	r4, r4, #4
    cfe8:	subs	r6, r6, #1
    cfec:	bne	cfd4 <ReadInt64Data+0x10e4>
    cff0:	b	dfb4 <ReadInt64Data+0x20c4>
    cff4:	sub	r0, r6, #256	; 0x100
    cff8:	mov	r8, r7
    cffc:	add	r1, r7, #2048	; 0x800
    d000:	mov	r9, #0
    d004:	str	sl, [sp, #32]
    d008:	str	r6, [sp, #8]
    d00c:	str	r0, [sp, #28]
    d010:	mov	r0, #0
    d014:	mov	r5, r1
    d018:	ldr	r3, [r4]
    d01c:	ldr	r1, [sp, #32]
    d020:	add	r4, sp, #296	; 0x128
    d024:	mov	sl, r0
    d028:	mov	r2, #256	; 0x100
    d02c:	mov	r0, r4
    d030:	bl	18b8 <fread@plt>
    d034:	mov	r7, r0
    d038:	mov	r6, #0
    d03c:	mov	r0, r4
    d040:	bl	1c4c <Mat_floatSwap>
    d044:	vmov	r0, s0
    d048:	bl	717f0 <__aeabi_f2lz>
    d04c:	mov	r2, r8
    d050:	add	r4, r4, #4
    d054:	str	r0, [r2, r6]!
    d058:	add	r6, r6, #8
    d05c:	cmp	r6, #2048	; 0x800
    d060:	str	r1, [r2, #4]
    d064:	bne	d03c <ReadInt64Data+0x114c>
    d068:	ldr	r2, [sp, #28]
    d06c:	ldr	r4, [sp, #36]	; 0x24
    d070:	add	r0, sl, #256	; 0x100
    d074:	add	r9, r7, r9
    d078:	add	r8, r8, #2048	; 0x800
    d07c:	add	r1, r5, #2048	; 0x800
    d080:	cmp	r0, r2
    d084:	blt	d014 <ReadInt64Data+0x1124>
    d088:	ldr	r7, [sp, #8]
    d08c:	cmp	r0, r7
    d090:	bge	dfb4 <ReadInt64Data+0x20c4>
    d094:	ldr	r3, [r4]
    d098:	ldr	r1, [sp, #32]
    d09c:	sub	r6, r7, r0
    d0a0:	add	r4, sp, #296	; 0x128
    d0a4:	mov	r0, r4
    d0a8:	mov	r2, r6
    d0ac:	bl	18b8 <fread@plt>
    d0b0:	add	r9, r0, r9
    d0b4:	cmp	r6, #1
    d0b8:	blt	dfb4 <ReadInt64Data+0x20c4>
    d0bc:	sub	r0, r7, sl
    d0c0:	sub	r6, r0, #256	; 0x100
    d0c4:	mov	r0, r4
    d0c8:	bl	1c4c <Mat_floatSwap>
    d0cc:	vmov	r0, s0
    d0d0:	bl	717f0 <__aeabi_f2lz>
    d0d4:	strd	r0, [r5]
    d0d8:	add	r5, r5, #8
    d0dc:	add	r4, r4, #4
    d0e0:	subs	r6, r6, #1
    d0e4:	bne	d0c4 <ReadInt64Data+0x11d4>
    d0e8:	b	dfb4 <ReadInt64Data+0x20c4>
    d0ec:	sub	r0, r6, #256	; 0x100
    d0f0:	mov	r9, r7
    d0f4:	add	r1, r7, #2048	; 0x800
    d0f8:	add	r4, sp, #296	; 0x128
    d0fc:	mov	r5, #0
    d100:	str	sl, [sp, #32]
    d104:	str	r6, [sp, #8]
    d108:	str	r0, [sp, #28]
    d10c:	mov	r0, #0
    d110:	mov	r8, r0
    d114:	ldr	r0, [sp, #36]	; 0x24
    d118:	mov	sl, r1
    d11c:	ldr	r1, [sp, #32]
    d120:	mov	r2, #256	; 0x100
    d124:	ldr	r3, [r0]
    d128:	mov	r0, r4
    d12c:	bl	18b8 <fread@plt>
    d130:	mov	r7, r0
    d134:	mov	r6, #0
    d138:	add	r0, r4, r6
    d13c:	bl	1c90 <Mat_doubleSwap>
    d140:	vmov	r0, r1, d0
    d144:	bl	7181c <__aeabi_d2lz>
    d148:	mov	r2, r9
    d14c:	str	r0, [r2, r6]!
    d150:	add	r6, r6, #8
    d154:	cmp	r6, #2048	; 0x800
    d158:	str	r1, [r2, #4]
    d15c:	bne	d138 <ReadInt64Data+0x1248>
    d160:	ldr	r2, [sp, #28]
    d164:	add	r0, r8, #256	; 0x100
    d168:	add	r5, r7, r5
    d16c:	add	r9, r9, #2048	; 0x800
    d170:	add	r1, sl, #2048	; 0x800
    d174:	cmp	r0, r2
    d178:	blt	d110 <ReadInt64Data+0x1220>
    d17c:	ldr	r7, [sp, #8]
    d180:	cmp	r0, r7
    d184:	bge	de0c <ReadInt64Data+0x1f1c>
    d188:	sub	r6, r7, r0
    d18c:	ldr	r0, [sp, #36]	; 0x24
    d190:	ldr	r1, [sp, #32]
    d194:	add	r4, sp, #296	; 0x128
    d198:	mov	r2, r6
    d19c:	ldr	r3, [r0]
    d1a0:	mov	r0, r4
    d1a4:	bl	18b8 <fread@plt>
    d1a8:	mov	r9, r5
    d1ac:	add	r9, r0, r5
    d1b0:	cmp	r6, #1
    d1b4:	blt	dfb4 <ReadInt64Data+0x20c4>
    d1b8:	sub	r0, r7, r8
    d1bc:	sub	r6, r0, #256	; 0x100
    d1c0:	mov	r0, r4
    d1c4:	bl	1c90 <Mat_doubleSwap>
    d1c8:	vmov	r0, r1, d0
    d1cc:	bl	7181c <__aeabi_d2lz>
    d1d0:	strd	r0, [sl]
    d1d4:	add	sl, sl, #8
    d1d8:	add	r4, r4, #8
    d1dc:	subs	r6, r6, #1
    d1e0:	bne	d1c0 <ReadInt64Data+0x12d0>
    d1e4:	b	dfb4 <ReadInt64Data+0x20c4>
    d1e8:	sub	r0, r6, #256	; 0x100
    d1ec:	str	r6, [sp, #8]
    d1f0:	add	r1, r7, #2048	; 0x800
    d1f4:	add	r4, sp, #296	; 0x128
    d1f8:	mov	r6, r7
    d1fc:	mov	r9, #0
    d200:	str	r5, [sp, #24]
    d204:	str	sl, [sp, #32]
    d208:	str	r7, [sp, #4]
    d20c:	str	r0, [sp, #28]
    d210:	mov	r0, #0
    d214:	mov	sl, r0
    d218:	ldr	r0, [sp, #36]	; 0x24
    d21c:	mov	r5, r1
    d220:	ldr	r1, [sp, #32]
    d224:	mov	r2, #256	; 0x100
    d228:	mov	r8, r9
    d22c:	ldr	r3, [r0]
    d230:	mov	r0, r4
    d234:	bl	18b8 <fread@plt>
    d238:	mov	r7, r0
    d23c:	mov	r9, #0
    d240:	add	r0, r4, r9
    d244:	bl	1b84 <Mat_int64Swap>
    d248:	mov	r2, r6
    d24c:	str	r0, [r2, r9]!
    d250:	add	r9, r9, #8
    d254:	cmp	r9, #2048	; 0x800
    d258:	str	r1, [r2, #4]
    d25c:	bne	d240 <ReadInt64Data+0x1350>
    d260:	ldr	r2, [sp, #28]
    d264:	add	r0, sl, #256	; 0x100
    d268:	mov	r9, r8
    d26c:	add	r9, r7, r8
    d270:	add	r6, r6, #2048	; 0x800
    d274:	add	r1, r5, #2048	; 0x800
    d278:	cmp	r0, r2
    d27c:	blt	d214 <ReadInt64Data+0x1324>
    d280:	ldr	r6, [sp, #8]
    d284:	cmp	r0, r6
    d288:	bge	d2f0 <ReadInt64Data+0x1400>
    d28c:	sub	r7, r6, r0
    d290:	ldr	r0, [sp, #36]	; 0x24
    d294:	ldr	r1, [sp, #32]
    d298:	add	r4, sp, #296	; 0x128
    d29c:	mov	r2, r7
    d2a0:	ldr	r3, [r0]
    d2a4:	mov	r0, r4
    d2a8:	bl	18b8 <fread@plt>
    d2ac:	add	r9, r0, r9
    d2b0:	cmp	r7, #1
    d2b4:	blt	d2f0 <ReadInt64Data+0x1400>
    d2b8:	sub	r0, r6, sl
    d2bc:	sub	r6, r0, #256	; 0x100
    d2c0:	mov	r0, r4
    d2c4:	bl	1b84 <Mat_int64Swap>
    d2c8:	strd	r0, [r5]
    d2cc:	add	r5, r5, #8
    d2d0:	add	r4, r4, #8
    d2d4:	subs	r6, r6, #1
    d2d8:	bne	d2c0 <ReadInt64Data+0x13d0>
    d2dc:	ldr	sl, [sp, #32]
    d2e0:	ldr	r7, [sp, #4]
    d2e4:	ldr	r6, [sp, #8]
    d2e8:	ldr	r4, [sp, #36]	; 0x24
    d2ec:	b	de2c <ReadInt64Data+0x1f3c>
    d2f0:	ldr	sl, [sp, #32]
    d2f4:	ldr	r7, [sp, #4]
    d2f8:	ldr	r4, [sp, #36]	; 0x24
    d2fc:	b	de2c <ReadInt64Data+0x1f3c>
    d300:	sub	r1, r6, #256	; 0x100
    d304:	str	sl, [sp, #32]
    d308:	str	r6, [sp, #8]
    d30c:	mov	sl, r7
    d310:	add	r0, r7, #2048	; 0x800
    d314:	mov	r5, #0
    d318:	add	r7, sp, #296	; 0x128
    d31c:	add	r6, sp, #192	; 0xc0
    d320:	mov	r4, #32
    d324:	add	r8, sp, #196	; 0xc4
    d328:	mov	r9, #0
    d32c:	str	r1, [sp, #16]
    d330:	mov	r1, #256	; 0x100
    d334:	str	sl, [sp, #4]
    d338:	add	r2, sp, #20
    d33c:	stm	r2, {r0, r1, r5}
    d340:	ldr	r0, [sp, #36]	; 0x24
    d344:	ldr	r1, [sp, #32]
    d348:	mov	r2, #256	; 0x100
    d34c:	ldr	r3, [r0]
    d350:	mov	r0, r7
    d354:	bl	18b8 <fread@plt>
    d358:	mov	r1, sl
    d35c:	mov	r2, #0
    d360:	ldr	r3, [r7, r2]
    d364:	add	r5, r7, r2
    d368:	add	r2, r2, #8
    d36c:	cmp	r2, #512	; 0x200
    d370:	str	r3, [sp, #192]	; 0xc0
    d374:	add	r3, r1, #16
    d378:	vld1.32	{d16[0]}, [r6 :32]
    d37c:	vmovl.s16	q8, d16
    d380:	vmovl.s32	q8, d16
    d384:	vst1.64	{d16-d17}, [r1], r4
    d388:	ldr	r5, [r5, #4]
    d38c:	str	r5, [sp, #196]	; 0xc4
    d390:	vld1.32	{d16[0]}, [r8 :32]
    d394:	vmovl.s16	q8, d16
    d398:	vmovl.s32	q8, d16
    d39c:	vst1.64	{d16-d17}, [r3]
    d3a0:	bne	d360 <ReadInt64Data+0x1470>
    d3a4:	ldr	r2, [sp, #28]
    d3a8:	ldr	r1, [sp, #24]
    d3ac:	add	r9, r0, r9
    d3b0:	ldr	r0, [sp, #20]
    d3b4:	add	sl, sl, #2048	; 0x800
    d3b8:	add	r5, r2, #256	; 0x100
    d3bc:	ldr	r2, [sp, #16]
    d3c0:	add	r0, r0, #2048	; 0x800
    d3c4:	add	r1, r1, #256	; 0x100
    d3c8:	cmp	r5, r2
    d3cc:	blt	d338 <ReadInt64Data+0x1448>
    d3d0:	ldr	r4, [sp, #8]
    d3d4:	cmp	r5, r4
    d3d8:	bge	e520 <ReadInt64Data+0x2630>
    d3dc:	ldr	r0, [sp, #36]	; 0x24
    d3e0:	ldr	sl, [sp, #32]
    d3e4:	sub	r6, r4, r5
    d3e8:	add	r7, sp, #296	; 0x128
    d3ec:	mov	r2, r6
    d3f0:	ldr	r3, [r0]
    d3f4:	mov	r0, r7
    d3f8:	mov	r1, sl
    d3fc:	bl	18b8 <fread@plt>
    d400:	add	r9, r0, r9
    d404:	cmp	r6, #1
    d408:	blt	e524 <ReadInt64Data+0x2634>
    d40c:	ldr	sl, [sp, #4]
    d410:	mov	lr, #0
    d414:	beq	e4e4 <ReadInt64Data+0x25f4>
    d418:	bic	lr, r6, #1
    d41c:	mov	r1, #1
    d420:	str	r6, [sp, #36]	; 0x24
    d424:	subs	r2, lr, #2
    d428:	add	r2, r1, r2, lsr #1
    d42c:	and	r0, r2, #1
    d430:	str	r0, [sp, #16]
    d434:	beq	e49c <ReadInt64Data+0x25ac>
    d438:	ldr	r0, [sp, #28]
    d43c:	ldr	ip, [sp, #20]
    d440:	add	r8, sp, #184	; 0xb8
    d444:	sub	r2, r4, r0
    d448:	mov	r4, #32
    d44c:	sub	r2, r2, #256	; 0x100
    d450:	bic	r2, r2, #1
    d454:	sub	r2, r2, #2
    d458:	add	r1, r1, r2, lsr #1
    d45c:	mvn	r3, r2, lsr #1
    d460:	mov	r2, #0
    d464:	and	r1, r1, #1
    d468:	add	r3, r3, r1
    d46c:	add	r1, sp, #188	; 0xbc
    d470:	ldr	r0, [r7]
    d474:	adds	r3, r3, #2
    d478:	add	r2, r2, #4
    d47c:	str	r0, [sp, #184]	; 0xb8
    d480:	add	r0, ip, #16
    d484:	vld1.32	{d16[0]}, [r8 :32]
    d488:	vmovl.s16	q8, d16
    d48c:	vmovl.s32	q8, d16
    d490:	vst1.64	{d16-d17}, [ip], r4
    d494:	ldr	r6, [r7, #4]
    d498:	add	r7, r7, #8
    d49c:	str	r6, [sp, #188]	; 0xbc
    d4a0:	vld1.32	{d16[0]}, [r1 :32]
    d4a4:	vmovl.s16	q8, d16
    d4a8:	vmovl.s32	q8, d16
    d4ac:	vst1.64	{d16-d17}, [r0]
    d4b0:	bne	d470 <ReadInt64Data+0x1580>
    d4b4:	b	e4a0 <ReadInt64Data+0x25b0>
    d4b8:	sub	r1, r6, #256	; 0x100
    d4bc:	str	sl, [sp, #32]
    d4c0:	str	r6, [sp, #8]
    d4c4:	mov	sl, r7
    d4c8:	add	r0, r7, #2048	; 0x800
    d4cc:	mov	r5, #0
    d4d0:	add	r7, sp, #296	; 0x128
    d4d4:	add	r6, sp, #224	; 0xe0
    d4d8:	mov	r4, #32
    d4dc:	add	r8, sp, #228	; 0xe4
    d4e0:	mov	r9, #0
    d4e4:	str	r1, [sp, #16]
    d4e8:	mov	r1, #256	; 0x100
    d4ec:	str	sl, [sp, #4]
    d4f0:	add	r2, sp, #20
    d4f4:	stm	r2, {r0, r1, r5}
    d4f8:	ldr	r0, [sp, #36]	; 0x24
    d4fc:	ldr	r1, [sp, #32]
    d500:	mov	r2, #256	; 0x100
    d504:	ldr	r3, [r0]
    d508:	mov	r0, r7
    d50c:	bl	18b8 <fread@plt>
    d510:	mov	r1, sl
    d514:	mov	r2, #0
    d518:	ldr	r3, [r7, r2]
    d51c:	add	r5, r7, r2
    d520:	add	r2, r2, #8
    d524:	cmp	r2, #512	; 0x200
    d528:	str	r3, [sp, #224]	; 0xe0
    d52c:	add	r3, r1, #16
    d530:	vld1.32	{d16[0]}, [r6 :32]
    d534:	vmovl.u16	q8, d16
    d538:	vmovl.u32	q8, d16
    d53c:	vst1.64	{d16-d17}, [r1], r4
    d540:	ldr	r5, [r5, #4]
    d544:	str	r5, [sp, #228]	; 0xe4
    d548:	vld1.32	{d16[0]}, [r8 :32]
    d54c:	vmovl.u16	q8, d16
    d550:	vmovl.u32	q8, d16
    d554:	vst1.64	{d16-d17}, [r3]
    d558:	bne	d518 <ReadInt64Data+0x1628>
    d55c:	ldr	r2, [sp, #28]
    d560:	ldr	r1, [sp, #24]
    d564:	add	r9, r0, r9
    d568:	ldr	r0, [sp, #20]
    d56c:	add	sl, sl, #2048	; 0x800
    d570:	add	r5, r2, #256	; 0x100
    d574:	ldr	r2, [sp, #16]
    d578:	add	r0, r0, #2048	; 0x800
    d57c:	add	r1, r1, #256	; 0x100
    d580:	cmp	r5, r2
    d584:	blt	d4f0 <ReadInt64Data+0x1600>
    d588:	ldr	r0, [sp, #8]
    d58c:	cmp	r5, r0
    d590:	bge	dfb4 <ReadInt64Data+0x20c4>
    d594:	sub	r4, r0, r5
    d598:	ldr	r0, [sp, #36]	; 0x24
    d59c:	ldr	sl, [sp, #32]
    d5a0:	add	r7, sp, #296	; 0x128
    d5a4:	mov	r2, r4
    d5a8:	ldr	r3, [r0]
    d5ac:	mov	r0, r7
    d5b0:	mov	r1, sl
    d5b4:	bl	18b8 <fread@plt>
    d5b8:	add	r9, r0, r9
    d5bc:	cmp	r4, #1
    d5c0:	blt	e524 <ReadInt64Data+0x2634>
    d5c4:	ldr	r6, [sp, #4]
    d5c8:	mov	r1, #0
    d5cc:	mov	lr, #0
    d5d0:	beq	e57c <ReadInt64Data+0x268c>
    d5d4:	bic	lr, r4, #1
    d5d8:	mov	r0, #1
    d5dc:	str	r4, [sp, #36]	; 0x24
    d5e0:	subs	r2, lr, #2
    d5e4:	add	r2, r0, r2, lsr #1
    d5e8:	and	r2, r2, #1
    d5ec:	str	r2, [sp, #16]
    d5f0:	beq	e530 <ReadInt64Data+0x2640>
    d5f4:	ldr	r2, [sp, #8]
    d5f8:	ldr	r3, [sp, #28]
    d5fc:	ldr	ip, [sp, #20]
    d600:	add	r8, sp, #216	; 0xd8
    d604:	mov	sl, #32
    d608:	sub	r2, r2, r3
    d60c:	sub	r2, r2, #256	; 0x100
    d610:	bic	r2, r2, #1
    d614:	sub	r2, r2, #2
    d618:	add	r0, r0, r2, lsr #1
    d61c:	mvn	r3, r2, lsr #1
    d620:	and	r0, r0, #1
    d624:	add	r6, r3, r0
    d628:	mov	r3, #0
    d62c:	add	r0, sp, #220	; 0xdc
    d630:	ldr	r4, [r7]
    d634:	adds	r6, r6, #2
    d638:	add	r3, r3, #4
    d63c:	str	r4, [sp, #216]	; 0xd8
    d640:	add	r4, ip, #16
    d644:	vld1.32	{d16[0]}, [r8 :32]
    d648:	vmovl.u16	q8, d16
    d64c:	vmovl.u32	q8, d16
    d650:	vst1.64	{d16-d17}, [ip], sl
    d654:	ldr	r2, [r7, #4]
    d658:	add	r7, r7, #8
    d65c:	str	r2, [sp, #220]	; 0xdc
    d660:	vld1.32	{d16[0]}, [r0 :32]
    d664:	vmovl.u16	q8, d16
    d668:	vmovl.u32	q8, d16
    d66c:	vst1.64	{d16-d17}, [r4]
    d670:	bne	d630 <ReadInt64Data+0x1740>
    d674:	b	e534 <ReadInt64Data+0x2644>
    d678:	sub	r1, r6, #256	; 0x100
    d67c:	str	sl, [sp, #32]
    d680:	mov	r8, r7
    d684:	add	r0, r7, #2048	; 0x800
    d688:	mov	r2, #0
    d68c:	mov	r5, #0
    d690:	add	r7, sp, #296	; 0x128
    d694:	add	r9, sp, #88	; 0x58
    d698:	mov	r4, #32
    d69c:	add	sl, sp, #96	; 0x60
    d6a0:	str	r6, [sp, #8]
    d6a4:	str	r1, [sp, #12]
    d6a8:	mov	r1, #256	; 0x100
    d6ac:	str	r8, [sp, #4]
    d6b0:	str	r2, [sp, #28]
    d6b4:	str	r0, [sp, #16]
    d6b8:	ldr	r0, [sp, #36]	; 0x24
    d6bc:	str	r1, [sp, #24]
    d6c0:	ldr	r1, [sp, #32]
    d6c4:	mov	r2, #256	; 0x100
    d6c8:	str	r5, [sp, #20]
    d6cc:	ldr	r3, [r0]
    d6d0:	mov	r0, r7
    d6d4:	bl	18b8 <fread@plt>
    d6d8:	mov	r1, r8
    d6dc:	mov	r2, #0
    d6e0:	ldr	r3, [r7, r2]
    d6e4:	str	r3, [sp, #88]	; 0x58
    d6e8:	add	r3, r7, r2
    d6ec:	add	r2, r2, #16
    d6f0:	ldr	r5, [r3, #4]
    d6f4:	cmp	r2, #1024	; 0x400
    d6f8:	str	r5, [sp, #92]	; 0x5c
    d6fc:	add	r5, r1, #16
    d700:	vld1.32	{d16}, [r9 :64]
    d704:	vmovl.s32	q8, d16
    d708:	vst1.64	{d16-d17}, [r1], r4
    d70c:	ldr	r6, [r3, #8]
    d710:	ldr	r3, [r3, #12]
    d714:	str	r6, [sp, #96]	; 0x60
    d718:	str	r3, [sp, #100]	; 0x64
    d71c:	vld1.32	{d16}, [sl :64]
    d720:	vmovl.s32	q8, d16
    d724:	vst1.64	{d16-d17}, [r5]
    d728:	bne	d6e0 <ReadInt64Data+0x17f0>
    d72c:	ldr	r1, [sp, #28]
    d730:	ldr	r6, [sp, #20]
    d734:	ldr	r2, [sp, #12]
    d738:	add	r8, r8, #2048	; 0x800
    d73c:	add	r1, r0, r1
    d740:	ldr	r0, [sp, #16]
    d744:	add	r5, r6, #256	; 0x100
    d748:	str	r1, [sp, #28]
    d74c:	ldr	r1, [sp, #24]
    d750:	cmp	r5, r2
    d754:	add	r0, r0, #2048	; 0x800
    d758:	add	r1, r1, #256	; 0x100
    d75c:	blt	d6b4 <ReadInt64Data+0x17c4>
    d760:	ldr	r4, [sp, #8]
    d764:	cmp	r5, r4
    d768:	bge	dba4 <ReadInt64Data+0x1cb4>
    d76c:	ldr	r0, [sp, #36]	; 0x24
    d770:	ldr	sl, [sp, #32]
    d774:	sub	r8, r4, r5
    d778:	add	r7, sp, #296	; 0x128
    d77c:	mov	r2, r8
    d780:	ldr	r3, [r0]
    d784:	mov	r0, r7
    d788:	mov	r1, sl
    d78c:	bl	18b8 <fread@plt>
    d790:	ldr	r9, [sp, #28]
    d794:	cmp	r8, #1
    d798:	add	r9, r0, r9
    d79c:	blt	e524 <ReadInt64Data+0x2634>
    d7a0:	ldr	r3, [sp, #4]
    d7a4:	mov	lr, #0
    d7a8:	beq	e620 <ReadInt64Data+0x2730>
    d7ac:	bic	lr, r8, #1
    d7b0:	mov	r1, #1
    d7b4:	mov	sl, r9
    d7b8:	str	r8, [sp, #36]	; 0x24
    d7bc:	subs	r2, lr, #2
    d7c0:	add	r2, r1, r2, lsr #1
    d7c4:	and	r0, r2, #1
    d7c8:	str	r0, [sp, #28]
    d7cc:	beq	e5c0 <ReadInt64Data+0x26d0>
    d7d0:	sub	r2, r4, r6
    d7d4:	ldr	ip, [sp, #16]
    d7d8:	add	r8, sp, #72	; 0x48
    d7dc:	mov	r9, #32
    d7e0:	sub	r2, r2, #256	; 0x100
    d7e4:	bic	r2, r2, #1
    d7e8:	sub	r2, r2, #2
    d7ec:	add	r1, r1, r2, lsr #1
    d7f0:	mvn	r3, r2, lsr #1
    d7f4:	mov	r2, #0
    d7f8:	and	r1, r1, #1
    d7fc:	add	r3, r3, r1
    d800:	add	r1, sp, #80	; 0x50
    d804:	ldm	r7, {r0, r6}
    d808:	str	r6, [sp, #76]	; 0x4c
    d80c:	adds	r3, r3, #2
    d810:	add	r2, r2, #4
    d814:	str	r0, [sp, #72]	; 0x48
    d818:	add	r0, ip, #16
    d81c:	vld1.32	{d16}, [r8 :64]
    d820:	vmovl.s32	q8, d16
    d824:	vst1.64	{d16-d17}, [ip], r9
    d828:	ldr	r6, [r7, #8]
    d82c:	ldr	r4, [r7, #12]
    d830:	add	r7, r7, #16
    d834:	str	r4, [sp, #84]	; 0x54
    d838:	str	r6, [sp, #80]	; 0x50
    d83c:	vld1.32	{d16}, [r1 :64]
    d840:	vmovl.s32	q8, d16
    d844:	vst1.64	{d16-d17}, [r0]
    d848:	bne	d804 <ReadInt64Data+0x1914>
    d84c:	b	e5c4 <ReadInt64Data+0x26d4>
    d850:	sub	r1, r6, #256	; 0x100
    d854:	str	sl, [sp, #32]
    d858:	mov	r8, r7
    d85c:	add	r0, r7, #2048	; 0x800
    d860:	mov	r2, #0
    d864:	mov	r5, #0
    d868:	add	r7, sp, #296	; 0x128
    d86c:	add	r9, sp, #152	; 0x98
    d870:	mov	r4, #32
    d874:	add	sl, sp, #160	; 0xa0
    d878:	str	r6, [sp, #8]
    d87c:	str	r1, [sp, #12]
    d880:	mov	r1, #256	; 0x100
    d884:	str	r8, [sp, #4]
    d888:	str	r2, [sp, #28]
    d88c:	add	r2, sp, #16
    d890:	stm	r2, {r0, r1, r5}
    d894:	ldr	r0, [sp, #36]	; 0x24
    d898:	ldr	r1, [sp, #32]
    d89c:	mov	r2, #256	; 0x100
    d8a0:	ldr	r3, [r0]
    d8a4:	mov	r0, r7
    d8a8:	bl	18b8 <fread@plt>
    d8ac:	mov	r1, r8
    d8b0:	mov	r2, #0
    d8b4:	ldr	r3, [r7, r2]
    d8b8:	str	r3, [sp, #152]	; 0x98
    d8bc:	add	r3, r7, r2
    d8c0:	add	r2, r2, #16
    d8c4:	ldr	r5, [r3, #4]
    d8c8:	cmp	r2, #1024	; 0x400
    d8cc:	str	r5, [sp, #156]	; 0x9c
    d8d0:	add	r5, r1, #16
    d8d4:	vld1.32	{d16}, [r9 :64]
    d8d8:	vmovl.u32	q8, d16
    d8dc:	vst1.64	{d16-d17}, [r1], r4
    d8e0:	ldr	r6, [r3, #8]
    d8e4:	ldr	r3, [r3, #12]
    d8e8:	str	r6, [sp, #160]	; 0xa0
    d8ec:	str	r3, [sp, #164]	; 0xa4
    d8f0:	vld1.32	{d16}, [sl :64]
    d8f4:	vmovl.u32	q8, d16
    d8f8:	vst1.64	{d16-d17}, [r5]
    d8fc:	bne	d8b4 <ReadInt64Data+0x19c4>
    d900:	ldr	r1, [sp, #28]
    d904:	ldr	r2, [sp, #24]
    d908:	add	r8, r8, #2048	; 0x800
    d90c:	add	r1, r0, r1
    d910:	ldr	r0, [sp, #16]
    d914:	add	r5, r2, #256	; 0x100
    d918:	ldr	r2, [sp, #12]
    d91c:	str	r1, [sp, #28]
    d920:	ldr	r1, [sp, #20]
    d924:	add	r0, r0, #2048	; 0x800
    d928:	cmp	r5, r2
    d92c:	add	r1, r1, #256	; 0x100
    d930:	blt	d88c <ReadInt64Data+0x199c>
    d934:	ldr	r0, [sp, #8]
    d938:	cmp	r5, r0
    d93c:	bge	dba4 <ReadInt64Data+0x1cb4>
    d940:	sub	r4, r0, r5
    d944:	ldr	r0, [sp, #36]	; 0x24
    d948:	ldr	sl, [sp, #32]
    d94c:	add	r7, sp, #296	; 0x128
    d950:	mov	r2, r4
    d954:	ldr	r3, [r0]
    d958:	mov	r0, r7
    d95c:	mov	r1, sl
    d960:	bl	18b8 <fread@plt>
    d964:	ldr	r9, [sp, #28]
    d968:	cmp	r4, #1
    d96c:	add	r9, r0, r9
    d970:	blt	e524 <ReadInt64Data+0x2634>
    d974:	ldr	r6, [sp, #4]
    d978:	mov	r1, #0
    d97c:	mov	lr, #0
    d980:	beq	e6b4 <ReadInt64Data+0x27c4>
    d984:	bic	lr, r4, #1
    d988:	mov	r0, #1
    d98c:	str	r4, [sp, #36]	; 0x24
    d990:	str	r9, [sp, #28]
    d994:	subs	r2, lr, #2
    d998:	add	r2, r0, r2, lsr #1
    d99c:	and	r2, r2, #1
    d9a0:	str	r2, [sp, #12]
    d9a4:	beq	e65c <ReadInt64Data+0x276c>
    d9a8:	ldr	r2, [sp, #8]
    d9ac:	ldr	r3, [sp, #24]
    d9b0:	ldr	ip, [sp, #16]
    d9b4:	add	r8, sp, #136	; 0x88
    d9b8:	mov	r9, #32
    d9bc:	add	sl, sp, #144	; 0x90
    d9c0:	sub	r2, r2, r3
    d9c4:	sub	r2, r2, #256	; 0x100
    d9c8:	bic	r2, r2, #1
    d9cc:	sub	r2, r2, #2
    d9d0:	add	r0, r0, r2, lsr #1
    d9d4:	mvn	r3, r2, lsr #1
    d9d8:	and	r0, r0, #1
    d9dc:	add	r6, r3, r0
    d9e0:	mov	r3, #0
    d9e4:	ldr	r4, [r7]
    d9e8:	ldr	r2, [r7, #4]
    d9ec:	adds	r6, r6, #2
    d9f0:	add	r3, r3, #4
    d9f4:	str	r2, [sp, #140]	; 0x8c
    d9f8:	str	r4, [sp, #136]	; 0x88
    d9fc:	add	r2, ip, #16
    da00:	vld1.32	{d16}, [r8 :64]
    da04:	vmovl.u32	q8, d16
    da08:	vst1.64	{d16-d17}, [ip], r9
    da0c:	ldr	r4, [r7, #8]
    da10:	ldr	r0, [r7, #12]
    da14:	add	r7, r7, #16
    da18:	str	r0, [sp, #148]	; 0x94
    da1c:	str	r4, [sp, #144]	; 0x90
    da20:	vld1.32	{d16}, [sl :64]
    da24:	vmovl.u32	q8, d16
    da28:	vst1.64	{d16-d17}, [r2]
    da2c:	bne	d9e4 <ReadInt64Data+0x1af4>
    da30:	b	e660 <ReadInt64Data+0x2770>
    da34:	add	r0, sp, #296	; 0x128
    da38:	sub	r1, r6, #256	; 0x100
    da3c:	str	r6, [sp, #8]
    da40:	mov	r8, #0
    da44:	mov	r6, r7
    da48:	mov	r9, #0
    da4c:	str	sl, [sp, #32]
    da50:	str	r7, [sp, #4]
    da54:	add	r0, r0, #4
    da58:	str	r1, [sp, #20]
    da5c:	str	r0, [sp, #28]
    da60:	add	r0, r7, #2048	; 0x800
    da64:	ldr	r3, [r4]
    da68:	ldr	r1, [sp, #32]
    da6c:	mov	r7, r0
    da70:	add	r0, sp, #296	; 0x128
    da74:	mov	r2, #256	; 0x100
    da78:	mov	sl, r9
    da7c:	str	r8, [sp, #24]
    da80:	bl	18b8 <fread@plt>
    da84:	ldr	r9, [sp, #28]
    da88:	mov	r4, r0
    da8c:	mov	r5, #0
    da90:	ldr	r0, [r9, #-4]
    da94:	bl	717f0 <__aeabi_f2lz>
    da98:	mov	r8, r6
    da9c:	str	r0, [r8, r5]!
    daa0:	str	r1, [r8, #4]
    daa4:	ldr	r0, [r9]
    daa8:	bl	717f0 <__aeabi_f2lz>
    daac:	add	r5, r5, #16
    dab0:	add	r9, r9, #8
    dab4:	strd	r0, [r8, #8]
    dab8:	cmp	r5, #2048	; 0x800
    dabc:	bne	da90 <ReadInt64Data+0x1ba0>
    dac0:	mov	r5, r7
    dac4:	add	r0, r7, #2048	; 0x800
    dac8:	ldr	r7, [sp, #24]
    dacc:	ldr	r1, [sp, #20]
    dad0:	mov	r9, sl
    dad4:	add	r9, r4, sl
    dad8:	ldr	r4, [sp, #36]	; 0x24
    dadc:	add	r6, r6, #2048	; 0x800
    dae0:	add	r8, r7, #256	; 0x100
    dae4:	cmp	r8, r1
    dae8:	blt	da64 <ReadInt64Data+0x1b74>
    daec:	ldr	r6, [sp, #8]
    daf0:	cmp	r8, r6
    daf4:	bge	dfb4 <ReadInt64Data+0x20c4>
    daf8:	mov	r0, r4
    dafc:	ldr	r1, [sp, #32]
    db00:	sub	r4, r6, r8
    db04:	ldr	r3, [r0]
    db08:	add	r0, sp, #296	; 0x128
    db0c:	mov	r2, r4
    db10:	bl	18b8 <fread@plt>
    db14:	add	r9, r0, r9
    db18:	cmp	r4, #1
    db1c:	blt	dfb4 <ReadInt64Data+0x20c4>
    db20:	mvn	r0, #256	; 0x100
    db24:	str	r9, [sp, #28]
    db28:	and	r9, r4, #1
    db2c:	mov	r4, #0
    db30:	sub	r0, r0, r7
    db34:	cmn	r0, r6
    db38:	beq	db80 <ReadInt64Data+0x1c90>
    db3c:	sub	r0, r9, r6
    db40:	mov	r4, #0
    db44:	add	sl, r0, r8
    db48:	add	r0, sp, #296	; 0x128
    db4c:	add	r6, r0, #4
    db50:	ldr	r0, [r6, #-4]
    db54:	bl	717f0 <__aeabi_f2lz>
    db58:	strd	r0, [r5]
    db5c:	ldr	r0, [r6]
    db60:	bl	717f0 <__aeabi_f2lz>
    db64:	sub	r4, r4, #2
    db68:	strd	r0, [r5, #8]
    db6c:	add	r5, r5, #16
    db70:	add	r6, r6, #8
    db74:	cmp	sl, r4
    db78:	bne	db50 <ReadInt64Data+0x1c60>
    db7c:	rsb	r4, r4, #0
    db80:	ldr	r6, [sp, #4]
    db84:	cmp	r9, #0
    db88:	beq	dba4 <ReadInt64Data+0x1cb4>
    db8c:	add	r0, sp, #296	; 0x128
    db90:	ldr	r0, [r0, r4, lsl #2]
    db94:	bl	717f0 <__aeabi_f2lz>
    db98:	add	r2, r4, r8
    db9c:	str	r0, [r6, r2, lsl #3]!
    dba0:	str	r1, [r6, #4]
    dba4:	ldr	sl, [sp, #32]
    dba8:	ldr	r9, [sp, #28]
    dbac:	mul	r0, r9, sl
    dbb0:	sub	sp, fp, #28
    dbb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dbb8:	str	sl, [sp, #32]
    dbbc:	sub	r1, r6, #256	; 0x100
    dbc0:	mov	sl, r7
    dbc4:	add	r0, r7, #2048	; 0x800
    dbc8:	mov	r4, #0
    dbcc:	add	r7, sp, #296	; 0x128
    dbd0:	mov	r9, #0
    dbd4:	str	r6, [sp, #8]
    dbd8:	str	r1, [sp, #20]
    dbdc:	str	sl, [sp, #4]
    dbe0:	str	r0, [sp, #28]
    dbe4:	ldr	r0, [sp, #36]	; 0x24
    dbe8:	ldr	r1, [sp, #32]
    dbec:	mov	r2, #256	; 0x100
    dbf0:	mov	r8, r9
    dbf4:	str	r4, [sp, #24]
    dbf8:	ldr	r3, [r0]
    dbfc:	mov	r0, r7
    dc00:	bl	18b8 <fread@plt>
    dc04:	mov	r4, r0
    dc08:	mov	r5, #0
    dc0c:	add	r9, r7, r5
    dc10:	vldr	d16, [r9]
    dc14:	vmov	r0, r1, d16
    dc18:	bl	7181c <__aeabi_d2lz>
    dc1c:	mov	r6, sl
    dc20:	str	r0, [r6, r5]!
    dc24:	str	r1, [r6, #4]
    dc28:	vldr	d16, [r9, #8]
    dc2c:	vmov	r0, r1, d16
    dc30:	bl	7181c <__aeabi_d2lz>
    dc34:	add	r5, r5, #16
    dc38:	strd	r0, [r6, #8]
    dc3c:	cmp	r5, #2048	; 0x800
    dc40:	bne	dc0c <ReadInt64Data+0x1d1c>
    dc44:	ldr	r5, [sp, #24]
    dc48:	ldr	r0, [sp, #28]
    dc4c:	ldr	r1, [sp, #20]
    dc50:	mov	r9, r8
    dc54:	add	r9, r4, r8
    dc58:	add	sl, sl, #2048	; 0x800
    dc5c:	add	r4, r5, #256	; 0x100
    dc60:	add	r0, r0, #2048	; 0x800
    dc64:	cmp	r4, r1
    dc68:	blt	dbe0 <ReadInt64Data+0x1cf0>
    dc6c:	ldr	r6, [sp, #8]
    dc70:	cmp	r4, r6
    dc74:	bge	dfb4 <ReadInt64Data+0x20c4>
    dc78:	ldr	r0, [sp, #36]	; 0x24
    dc7c:	ldr	sl, [sp, #32]
    dc80:	sub	r7, r6, r4
    dc84:	add	r8, sp, #296	; 0x128
    dc88:	mov	r2, r7
    dc8c:	ldr	r3, [r0]
    dc90:	mov	r0, r8
    dc94:	mov	r1, sl
    dc98:	bl	18b8 <fread@plt>
    dc9c:	add	r9, r0, r9
    dca0:	cmp	r7, #1
    dca4:	blt	e524 <ReadInt64Data+0x2634>
    dca8:	mvn	r0, #256	; 0x100
    dcac:	mov	sl, r9
    dcb0:	and	r9, r7, #1
    dcb4:	sub	r0, r0, r5
    dcb8:	mov	r5, #0
    dcbc:	cmn	r0, r6
    dcc0:	beq	dd14 <ReadInt64Data+0x1e24>
    dcc4:	add	r5, r8, #8
    dcc8:	ldr	r8, [sp, #28]
    dccc:	sub	r0, r9, r6
    dcd0:	mov	r7, #0
    dcd4:	add	r6, r0, r4
    dcd8:	vldr	d16, [r5, #-8]
    dcdc:	vmov	r0, r1, d16
    dce0:	bl	7181c <__aeabi_d2lz>
    dce4:	strd	r0, [r8]
    dce8:	vldr	d16, [r5]
    dcec:	vmov	r0, r1, d16
    dcf0:	bl	7181c <__aeabi_d2lz>
    dcf4:	sub	r7, r7, #2
    dcf8:	strd	r0, [r8, #8]
    dcfc:	add	r8, r8, #16
    dd00:	add	r5, r5, #16
    dd04:	cmp	r6, r7
    dd08:	bne	dcd8 <ReadInt64Data+0x1de8>
    dd0c:	rsb	r5, r7, #0
    dd10:	add	r8, sp, #296	; 0x128
    dd14:	cmp	r9, #0
    dd18:	beq	dd3c <ReadInt64Data+0x1e4c>
    dd1c:	add	r0, r8, r5, lsl #3
    dd20:	vldr	d16, [r0]
    dd24:	vmov	r0, r1, d16
    dd28:	bl	7181c <__aeabi_d2lz>
    dd2c:	ldr	r3, [sp, #4]
    dd30:	add	r2, r5, r4
    dd34:	str	r0, [r3, r2, lsl #3]!
    dd38:	str	r1, [r3, #4]
    dd3c:	mov	r9, sl
    dd40:	ldr	sl, [sp, #32]
    dd44:	mul	r0, r9, sl
    dd48:	sub	sp, fp, #28
    dd4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd50:	str	r5, [sp, #24]
    dd54:	sub	r0, r6, #256	; 0x100
    dd58:	mov	r8, sl
    dd5c:	lsl	r4, r6, #3
    dd60:	mov	r5, #0
    dd64:	mov	r9, #0
    dd68:	mov	sl, r7
    dd6c:	str	r6, [sp, #8]
    dd70:	str	r0, [sp, #28]
    dd74:	ldr	r0, [sp, #36]	; 0x24
    dd78:	add	r6, sp, #296	; 0x128
    dd7c:	mov	r1, r8
    dd80:	mov	r2, #256	; 0x100
    dd84:	ldr	r3, [r0]
    dd88:	mov	r0, r6
    dd8c:	bl	18b8 <fread@plt>
    dd90:	mov	r7, r0
    dd94:	add	r0, sl, r5, lsl #3
    dd98:	mov	r1, r6
    dd9c:	mov	r2, #2048	; 0x800
    dda0:	bl	181c <memcpy@plt>
    dda4:	ldr	r0, [sp, #28]
    dda8:	add	r5, r5, #256	; 0x100
    ddac:	add	r9, r7, r9
    ddb0:	sub	r4, r4, #2048	; 0x800
    ddb4:	cmp	r5, r0
    ddb8:	blt	dd74 <ReadInt64Data+0x1e84>
    ddbc:	ldr	r6, [sp, #8]
    ddc0:	cmp	r5, r6
    ddc4:	bge	de20 <ReadInt64Data+0x1f30>
    ddc8:	ldr	r0, [sp, #36]	; 0x24
    ddcc:	sub	r7, r6, r5
    ddd0:	mov	r1, r8
    ddd4:	mov	r2, r7
    ddd8:	ldr	r3, [r0]
    dddc:	add	r0, sp, #296	; 0x128
    dde0:	bl	18b8 <fread@plt>
    dde4:	add	r9, r0, r9
    dde8:	cmp	r7, #1
    ddec:	blt	de20 <ReadInt64Data+0x1f30>
    ddf0:	add	r0, sl, r5, lsl #3
    ddf4:	add	r1, sp, #296	; 0x128
    ddf8:	mov	r2, r4
    ddfc:	mov	r7, sl
    de00:	bl	181c <memcpy@plt>
    de04:	ldr	r4, [sp, #36]	; 0x24
    de08:	b	de28 <ReadInt64Data+0x1f38>
    de0c:	ldr	sl, [sp, #32]
    de10:	mov	r9, r5
    de14:	mul	r0, r9, sl
    de18:	sub	sp, fp, #28
    de1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de20:	ldr	r4, [sp, #36]	; 0x24
    de24:	mov	r7, sl
    de28:	mov	sl, r8
    de2c:	ldr	r5, [sp, #24]
    de30:	cmp	r5, #13
    de34:	bne	e524 <ReadInt64Data+0x2634>
    de38:	ldr	r0, [r4, #20]
    de3c:	cmp	r0, #0
    de40:	beq	de90 <ReadInt64Data+0x1fa0>
    de44:	cmp	r6, #256	; 0x100
    de48:	bgt	ded4 <ReadInt64Data+0x1fe4>
    de4c:	ldr	r3, [r4]
    de50:	add	r4, sp, #296	; 0x128
    de54:	mov	r1, sl
    de58:	mov	r2, r6
    de5c:	mov	r0, r4
    de60:	bl	18b8 <fread@plt>
    de64:	add	r9, r0, r9
    de68:	cmp	r6, #1
    de6c:	blt	e524 <ReadInt64Data+0x2634>
    de70:	mov	r0, r4
    de74:	bl	1bd4 <Mat_uint64Swap>
    de78:	strd	r0, [r7]
    de7c:	add	r4, r4, #8
    de80:	add	r7, r7, #8
    de84:	subs	r6, r6, #1
    de88:	bne	de70 <ReadInt64Data+0x1f80>
    de8c:	b	e524 <ReadInt64Data+0x2634>
    de90:	cmp	r6, #256	; 0x100
    de94:	bgt	dfc4 <ReadInt64Data+0x20d4>
    de98:	ldr	r3, [r4]
    de9c:	add	r0, sp, #296	; 0x128
    dea0:	mov	r1, sl
    dea4:	mov	r2, r6
    dea8:	bl	18b8 <fread@plt>
    deac:	add	r9, r0, r9
    deb0:	cmp	r6, #1
    deb4:	blt	e524 <ReadInt64Data+0x2634>
    deb8:	lsl	r2, r6, #3
    debc:	add	r1, sp, #296	; 0x128
    dec0:	mov	r0, r7
    dec4:	bl	181c <memcpy@plt>
    dec8:	mul	r0, r9, sl
    decc:	sub	sp, fp, #28
    ded0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ded4:	sub	r0, r6, #256	; 0x100
    ded8:	mov	r8, r7
    dedc:	add	r1, r7, #2048	; 0x800
    dee0:	add	r4, sp, #296	; 0x128
    dee4:	str	sl, [sp, #32]
    dee8:	str	r6, [sp, #8]
    deec:	str	r0, [sp, #28]
    def0:	mov	r0, #0
    def4:	mov	sl, r0
    def8:	ldr	r0, [sp, #36]	; 0x24
    defc:	mov	r5, r1
    df00:	ldr	r1, [sp, #32]
    df04:	mov	r2, #256	; 0x100
    df08:	ldr	r3, [r0]
    df0c:	mov	r0, r4
    df10:	bl	18b8 <fread@plt>
    df14:	mov	r7, r0
    df18:	mov	r6, #0
    df1c:	add	r0, r4, r6
    df20:	bl	1bd4 <Mat_uint64Swap>
    df24:	mov	r2, r8
    df28:	str	r0, [r2, r6]!
    df2c:	add	r6, r6, #8
    df30:	cmp	r6, #2048	; 0x800
    df34:	str	r1, [r2, #4]
    df38:	bne	df1c <ReadInt64Data+0x202c>
    df3c:	ldr	r2, [sp, #28]
    df40:	add	r0, sl, #256	; 0x100
    df44:	add	r9, r7, r9
    df48:	add	r8, r8, #2048	; 0x800
    df4c:	add	r1, r5, #2048	; 0x800
    df50:	cmp	r0, r2
    df54:	blt	def4 <ReadInt64Data+0x2004>
    df58:	ldr	r6, [sp, #8]
    df5c:	cmp	r0, r6
    df60:	bge	dfb4 <ReadInt64Data+0x20c4>
    df64:	sub	r7, r6, r0
    df68:	ldr	r0, [sp, #36]	; 0x24
    df6c:	ldr	r1, [sp, #32]
    df70:	add	r4, sp, #296	; 0x128
    df74:	mov	r2, r7
    df78:	ldr	r3, [r0]
    df7c:	mov	r0, r4
    df80:	bl	18b8 <fread@plt>
    df84:	add	r9, r0, r9
    df88:	cmp	r7, #1
    df8c:	blt	dfb4 <ReadInt64Data+0x20c4>
    df90:	sub	r0, r6, sl
    df94:	sub	r6, r0, #256	; 0x100
    df98:	mov	r0, r4
    df9c:	bl	1bd4 <Mat_uint64Swap>
    dfa0:	strd	r0, [r5]
    dfa4:	add	r5, r5, #8
    dfa8:	add	r4, r4, #8
    dfac:	subs	r6, r6, #1
    dfb0:	bne	df98 <ReadInt64Data+0x20a8>
    dfb4:	ldr	sl, [sp, #32]
    dfb8:	mul	r0, r9, sl
    dfbc:	sub	sp, fp, #28
    dfc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfc4:	sub	r0, r6, #256	; 0x100
    dfc8:	lsl	r4, r6, #3
    dfcc:	str	r6, [sp, #8]
    dfd0:	mov	r5, #0
    dfd4:	add	r8, sp, #296	; 0x128
    dfd8:	mov	r6, r7
    dfdc:	str	r0, [sp, #28]
    dfe0:	ldr	r0, [sp, #36]	; 0x24
    dfe4:	mov	r1, sl
    dfe8:	mov	r2, #256	; 0x100
    dfec:	ldr	r3, [r0]
    dff0:	mov	r0, r8
    dff4:	bl	18b8 <fread@plt>
    dff8:	mov	r7, r0
    dffc:	add	r0, r6, r5, lsl #3
    e000:	mov	r1, r8
    e004:	mov	r2, #2048	; 0x800
    e008:	bl	181c <memcpy@plt>
    e00c:	ldr	r0, [sp, #28]
    e010:	add	r5, r5, #256	; 0x100
    e014:	add	r9, r7, r9
    e018:	sub	r4, r4, #2048	; 0x800
    e01c:	cmp	r5, r0
    e020:	blt	dfe0 <ReadInt64Data+0x20f0>
    e024:	mov	r1, sl
    e028:	ldr	sl, [sp, #8]
    e02c:	cmp	r5, sl
    e030:	bge	e088 <ReadInt64Data+0x2198>
    e034:	ldr	r0, [sp, #36]	; 0x24
    e038:	sub	r7, sl, r5
    e03c:	mov	sl, r1
    e040:	mov	r2, r7
    e044:	ldr	r3, [r0]
    e048:	add	r0, sp, #296	; 0x128
    e04c:	bl	18b8 <fread@plt>
    e050:	add	r9, r0, r9
    e054:	cmp	r7, #1
    e058:	blt	e524 <ReadInt64Data+0x2634>
    e05c:	add	r0, r6, r5, lsl #3
    e060:	add	r1, sp, #296	; 0x128
    e064:	mov	r2, r4
    e068:	bl	181c <memcpy@plt>
    e06c:	mul	r0, r9, sl
    e070:	sub	sp, fp, #28
    e074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e078:	ldr	r4, [sp, #36]	; 0x24
    e07c:	cmp	r5, #13
    e080:	beq	de38 <ReadInt64Data+0x1f48>
    e084:	b	e524 <ReadInt64Data+0x2634>
    e088:	mov	sl, r1
    e08c:	mul	r0, r9, sl
    e090:	sub	sp, fp, #28
    e094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e098:	mov	r1, #0
    e09c:	ldr	r9, [sp, #28]
    e0a0:	cmp	ip, #0
    e0a4:	mov	r7, sl
    e0a8:	beq	e0d0 <ReadInt64Data+0x21e0>
    e0ac:	add	r0, r4, r1
    e0b0:	ldrh	r0, [r0]
    e0b4:	strh	r0, [r8]
    e0b8:	add	r0, r7, r1, lsl #3
    e0bc:	vld1.16	{d16[0]}, [r8 :16]
    e0c0:	vmovl.s8	q8, d16
    e0c4:	vmovl.s16	q8, d16
    e0c8:	vmovl.s32	q8, d16
    e0cc:	vst1.64	{d16-d17}, [r0]
    e0d0:	ldr	r6, [sp, #8]
    e0d4:	ldr	sl, [sp, #32]
    e0d8:	cmp	lr, r6
    e0dc:	beq	e524 <ReadInt64Data+0x2634>
    e0e0:	add	r1, r7, lr, lsl #3
    e0e4:	add	r0, r4, lr
    e0e8:	sub	r2, r6, lr
    e0ec:	ldrsb	r4, [r0], #1
    e0f0:	subs	r2, r2, #1
    e0f4:	asr	r5, r4, #31
    e0f8:	strd	r4, [r1]
    e0fc:	add	r1, r1, #8
    e100:	bne	e0ec <ReadInt64Data+0x21fc>
    e104:	b	e524 <ReadInt64Data+0x2634>
    e108:	mov	r2, #0
    e10c:	ldr	r0, [sp, #36]	; 0x24
    e110:	ldr	sl, [sp, #32]
    e114:	ldr	r7, [sp, #4]
    e118:	cmp	r0, #0
    e11c:	beq	e148 <ReadInt64Data+0x2258>
    e120:	add	r0, r9, r2
    e124:	ldrh	r0, [r0]
    e128:	strh	r0, [r8, #32]
    e12c:	add	r0, sp, #264	; 0x108
    e130:	vld1.16	{d16[0]}, [r0 :16]
    e134:	add	r0, r7, r2, lsl #3
    e138:	vmovl.u8	q8, d16
    e13c:	vmovl.u16	q8, d16
    e140:	vmovl.u32	q8, d16
    e144:	vst1.64	{d16-d17}, [r0]
    e148:	ldr	r6, [sp, #8]
    e14c:	cmp	lr, r6
    e150:	beq	e178 <ReadInt64Data+0x2288>
    e154:	add	r2, r7, lr, lsl #3
    e158:	add	r0, r9, lr
    e15c:	sub	r3, r6, lr
    e160:	ldrb	r4, [r0], #1
    e164:	subs	r3, r3, #1
    e168:	str	r4, [r2]
    e16c:	str	r1, [r2, #4]
    e170:	add	r2, r2, #8
    e174:	bne	e160 <ReadInt64Data+0x2270>
    e178:	mov	r9, ip
    e17c:	mul	r0, r9, sl
    e180:	sub	sp, fp, #28
    e184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e188:	mov	r2, #0
    e18c:	ldr	r0, [sp, #12]
    e190:	cmp	r0, #0
    e194:	beq	e1c4 <ReadInt64Data+0x22d4>
    e198:	add	r0, r9, r2
    e19c:	ldrh	r0, [r0]
    e1a0:	strh	r0, [r8, #12]
    e1a4:	add	r0, sp, #244	; 0xf4
    e1a8:	vld1.16	{d16[0]}, [r0 :16]
    e1ac:	add	r0, r2, r4
    e1b0:	add	r0, sl, r0, lsl #3
    e1b4:	vmovl.s8	q8, d16
    e1b8:	vmovl.s16	q8, d16
    e1bc:	vmovl.s32	q8, d16
    e1c0:	vst1.64	{d16-d17}, [r0]
    e1c4:	ldr	r0, [sp, #36]	; 0x24
    e1c8:	ldr	r5, [sp, #8]
    e1cc:	cmp	r0, lr
    e1d0:	beq	e20c <ReadInt64Data+0x231c>
    e1d4:	ldr	r0, [sp, #20]
    e1d8:	add	r1, r9, lr
    e1dc:	add	r0, lr, r0
    e1e0:	add	r2, sl, r0, lsl #3
    e1e4:	ldr	r0, [sp, #24]
    e1e8:	sub	r0, r5, r0
    e1ec:	sub	r0, r0, lr
    e1f0:	sub	r0, r0, #256	; 0x100
    e1f4:	ldrsb	r4, [r1], #1
    e1f8:	subs	r0, r0, #1
    e1fc:	asr	r5, r4, #31
    e200:	strd	r4, [r2]
    e204:	add	r2, r2, #8
    e208:	bne	e1f4 <ReadInt64Data+0x2304>
    e20c:	ldr	r9, [sp, #28]
    e210:	ldr	sl, [sp, #32]
    e214:	mul	r0, r9, sl
    e218:	sub	sp, fp, #28
    e21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e220:	mov	r3, #0
    e224:	ldr	r0, [sp, #12]
    e228:	ldr	sl, [sp, #32]
    e22c:	ldr	r7, [sp, #4]
    e230:	cmp	r0, #0
    e234:	beq	e264 <ReadInt64Data+0x2374>
    e238:	add	r0, r9, r3
    e23c:	ldrh	r0, [r0]
    e240:	strh	r0, [r8, #44]	; 0x2c
    e244:	add	r0, sp, #276	; 0x114
    e248:	vld1.16	{d16[0]}, [r0 :16]
    e24c:	add	r0, r3, r4
    e250:	add	r0, r7, r0, lsl #3
    e254:	vmovl.u8	q8, d16
    e258:	vmovl.u16	q8, d16
    e25c:	vmovl.u32	q8, d16
    e260:	vst1.64	{d16-d17}, [r0]
    e264:	ldr	r0, [sp, #36]	; 0x24
    e268:	ldr	r5, [sp, #8]
    e26c:	cmp	r0, lr
    e270:	beq	e2ac <ReadInt64Data+0x23bc>
    e274:	ldr	r2, [sp, #20]
    e278:	ldr	r3, [sp, #24]
    e27c:	add	r0, r9, lr
    e280:	add	r2, lr, r2
    e284:	sub	r3, r5, r3
    e288:	sub	r3, r3, lr
    e28c:	add	r2, r7, r2, lsl #3
    e290:	sub	r3, r3, #256	; 0x100
    e294:	ldrb	r4, [r0], #1
    e298:	subs	r3, r3, #1
    e29c:	str	r4, [r2]
    e2a0:	str	r1, [r2, #4]
    e2a4:	add	r2, r2, #8
    e2a8:	bne	e294 <ReadInt64Data+0x23a4>
    e2ac:	ldr	r9, [sp, #28]
    e2b0:	mul	r0, r9, sl
    e2b4:	sub	sp, fp, #28
    e2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e2bc:	mov	sl, r7
    e2c0:	mov	r1, #0
    e2c4:	cmp	ip, #0
    e2c8:	mov	r7, sl
    e2cc:	beq	e2f4 <ReadInt64Data+0x2404>
    e2d0:	add	r0, sp, #296	; 0x128
    e2d4:	ldr	r0, [r0, r1, lsl #1]
    e2d8:	str	r0, [sp, #168]	; 0xa8
    e2dc:	add	r0, sp, #168	; 0xa8
    e2e0:	vld1.32	{d16[0]}, [r0 :32]
    e2e4:	add	r0, r7, r1, lsl #3
    e2e8:	vmovl.s16	q8, d16
    e2ec:	vmovl.s32	q8, d16
    e2f0:	vst1.64	{d16-d17}, [r0]
    e2f4:	ldr	r6, [sp, #8]
    e2f8:	ldr	sl, [sp, #32]
    e2fc:	cmp	lr, r6
    e300:	beq	e524 <ReadInt64Data+0x2634>
    e304:	add	r0, sp, #296	; 0x128
    e308:	add	r2, r7, lr, lsl #3
    e30c:	add	r1, r0, lr, lsl #1
    e310:	sub	r0, r6, lr
    e314:	ldrsh	r4, [r1], #2
    e318:	subs	r0, r0, #1
    e31c:	asr	r5, r4, #31
    e320:	strd	r4, [r2]
    e324:	add	r2, r2, #8
    e328:	bne	e314 <ReadInt64Data+0x2424>
    e32c:	b	e524 <ReadInt64Data+0x2634>
    e330:	mov	r2, #0
    e334:	ldr	r9, [sp, #28]
    e338:	cmp	ip, #0
    e33c:	mov	r7, sl
    e340:	beq	e368 <ReadInt64Data+0x2478>
    e344:	add	r0, sp, #296	; 0x128
    e348:	ldr	r0, [r0, r2, lsl #1]
    e34c:	str	r0, [sp, #200]	; 0xc8
    e350:	add	r0, sp, #200	; 0xc8
    e354:	vld1.32	{d16[0]}, [r0 :32]
    e358:	add	r0, r7, r2, lsl #3
    e35c:	vmovl.u16	q8, d16
    e360:	vmovl.u32	q8, d16
    e364:	vst1.64	{d16-d17}, [r0]
    e368:	ldr	r6, [sp, #8]
    e36c:	ldr	sl, [sp, #32]
    e370:	cmp	lr, r6
    e374:	beq	e524 <ReadInt64Data+0x2634>
    e378:	add	r0, sp, #296	; 0x128
    e37c:	add	r2, r7, lr, lsl #3
    e380:	sub	r3, r6, lr
    e384:	add	r0, r0, lr, lsl #1
    e388:	ldrh	r4, [r0], #2
    e38c:	subs	r3, r3, #1
    e390:	str	r4, [r2]
    e394:	str	r1, [r2, #4]
    e398:	add	r2, r2, #8
    e39c:	bne	e388 <ReadInt64Data+0x2498>
    e3a0:	b	e524 <ReadInt64Data+0x2634>
    e3a4:	mov	r2, #0
    e3a8:	ldr	sl, [sp, #32]
    e3ac:	ldr	r9, [sp, #28]
    e3b0:	ldr	r7, [sp, #4]
    e3b4:	cmp	ip, #0
    e3b8:	beq	e3e8 <ReadInt64Data+0x24f8>
    e3bc:	add	r0, sp, #296	; 0x128
    e3c0:	ldr	r3, [r0, r2, lsl #2]
    e3c4:	add	r0, r0, r2, lsl #2
    e3c8:	str	r3, [sp, #104]	; 0x68
    e3cc:	ldr	r0, [r0, #4]
    e3d0:	str	r0, [sp, #108]	; 0x6c
    e3d4:	add	r0, sp, #104	; 0x68
    e3d8:	vld1.32	{d16}, [r0 :64]
    e3dc:	add	r0, r7, r2, lsl #3
    e3e0:	vmovl.u32	q8, d16
    e3e4:	vst1.64	{d16-d17}, [r0]
    e3e8:	ldr	r6, [sp, #8]
    e3ec:	cmp	lr, r6
    e3f0:	beq	e524 <ReadInt64Data+0x2634>
    e3f4:	add	r0, sp, #296	; 0x128
    e3f8:	add	r2, r7, lr, lsl #3
    e3fc:	sub	r3, r6, lr
    e400:	add	r0, r0, lr, lsl #2
    e404:	ldr	r4, [r0], #4
    e408:	subs	r3, r3, #1
    e40c:	str	r4, [r2]
    e410:	str	r1, [r2, #4]
    e414:	add	r2, r2, #8
    e418:	bne	e404 <ReadInt64Data+0x2514>
    e41c:	b	e524 <ReadInt64Data+0x2634>
    e420:	mov	r1, #0
    e424:	ldr	r9, [sp, #28]
    e428:	cmp	ip, #0
    e42c:	mov	r7, sl
    e430:	beq	e460 <ReadInt64Data+0x2570>
    e434:	add	r0, sp, #296	; 0x128
    e438:	ldr	r2, [r0, r1, lsl #2]
    e43c:	add	r0, r0, r1, lsl #2
    e440:	str	r2, [sp, #40]	; 0x28
    e444:	ldr	r0, [r0, #4]
    e448:	str	r0, [sp, #44]	; 0x2c
    e44c:	add	r0, sp, #40	; 0x28
    e450:	vld1.32	{d16}, [r0 :64]
    e454:	add	r0, r7, r1, lsl #3
    e458:	vmovl.s32	q8, d16
    e45c:	vst1.64	{d16-d17}, [r0]
    e460:	ldr	r6, [sp, #8]
    e464:	ldr	sl, [sp, #32]
    e468:	cmp	lr, r6
    e46c:	beq	e524 <ReadInt64Data+0x2634>
    e470:	add	r0, sp, #296	; 0x128
    e474:	add	r2, r7, lr, lsl #3
    e478:	add	r1, r0, lr, lsl #2
    e47c:	sub	r0, r6, lr
    e480:	ldr	r4, [r1], #4
    e484:	subs	r0, r0, #1
    e488:	asr	r5, r4, #31
    e48c:	strd	r4, [r2]
    e490:	add	r2, r2, #8
    e494:	bne	e480 <ReadInt64Data+0x2590>
    e498:	b	e524 <ReadInt64Data+0x2634>
    e49c:	mov	r2, #0
    e4a0:	ldr	r0, [sp, #16]
    e4a4:	cmp	r0, #0
    e4a8:	beq	e4d4 <ReadInt64Data+0x25e4>
    e4ac:	add	r0, sp, #296	; 0x128
    e4b0:	ldr	r0, [r0, r2, lsl #1]
    e4b4:	str	r0, [sp, #180]	; 0xb4
    e4b8:	add	r0, sp, #180	; 0xb4
    e4bc:	vld1.32	{d16[0]}, [r0 :32]
    e4c0:	add	r0, r2, r5
    e4c4:	add	r0, sl, r0, lsl #3
    e4c8:	vmovl.s16	q8, d16
    e4cc:	vmovl.s32	q8, d16
    e4d0:	vst1.64	{d16-d17}, [r0]
    e4d4:	ldr	r0, [sp, #36]	; 0x24
    e4d8:	ldr	r4, [sp, #8]
    e4dc:	cmp	r0, lr
    e4e0:	beq	e520 <ReadInt64Data+0x2630>
    e4e4:	add	r0, sp, #296	; 0x128
    e4e8:	add	r1, r0, lr, lsl #1
    e4ec:	ldr	r0, [sp, #24]
    e4f0:	add	r0, lr, r0
    e4f4:	add	r2, sl, r0, lsl #3
    e4f8:	ldr	r0, [sp, #28]
    e4fc:	sub	r0, r4, r0
    e500:	sub	r0, r0, lr
    e504:	sub	r0, r0, #256	; 0x100
    e508:	ldrsh	r4, [r1], #2
    e50c:	subs	r0, r0, #1
    e510:	asr	r5, r4, #31
    e514:	strd	r4, [r2]
    e518:	add	r2, r2, #8
    e51c:	bne	e508 <ReadInt64Data+0x2618>
    e520:	ldr	sl, [sp, #32]
    e524:	mul	r0, r9, sl
    e528:	sub	sp, fp, #28
    e52c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e530:	mov	r3, #0
    e534:	ldr	r0, [sp, #16]
    e538:	ldr	sl, [sp, #32]
    e53c:	ldr	r6, [sp, #4]
    e540:	cmp	r0, #0
    e544:	beq	e570 <ReadInt64Data+0x2680>
    e548:	add	r0, sp, #296	; 0x128
    e54c:	ldr	r0, [r0, r3, lsl #1]
    e550:	str	r0, [sp, #212]	; 0xd4
    e554:	add	r0, sp, #212	; 0xd4
    e558:	vld1.32	{d16[0]}, [r0 :32]
    e55c:	add	r0, r3, r5
    e560:	add	r0, r6, r0, lsl #3
    e564:	vmovl.u16	q8, d16
    e568:	vmovl.u32	q8, d16
    e56c:	vst1.64	{d16-d17}, [r0]
    e570:	ldr	r0, [sp, #36]	; 0x24
    e574:	cmp	r0, lr
    e578:	beq	e524 <ReadInt64Data+0x2634>
    e57c:	ldr	r2, [sp, #24]
    e580:	ldr	r3, [sp, #8]
    e584:	ldr	r7, [sp, #28]
    e588:	add	r0, sp, #296	; 0x128
    e58c:	add	r0, r0, lr, lsl #1
    e590:	add	r2, lr, r2
    e594:	sub	r3, r3, r7
    e598:	sub	r3, r3, lr
    e59c:	add	r2, r6, r2, lsl #3
    e5a0:	sub	r3, r3, #256	; 0x100
    e5a4:	ldrh	r4, [r0], #2
    e5a8:	subs	r3, r3, #1
    e5ac:	str	r4, [r2]
    e5b0:	str	r1, [r2, #4]
    e5b4:	add	r2, r2, #8
    e5b8:	bne	e5a4 <ReadInt64Data+0x26b4>
    e5bc:	b	e524 <ReadInt64Data+0x2634>
    e5c0:	mov	r2, #0
    e5c4:	ldr	r0, [sp, #28]
    e5c8:	ldr	r3, [sp, #4]
    e5cc:	mov	r9, sl
    e5d0:	cmp	r0, #0
    e5d4:	beq	e608 <ReadInt64Data+0x2718>
    e5d8:	add	r0, sp, #296	; 0x128
    e5dc:	ldr	r1, [r0, r2, lsl #2]
    e5e0:	add	r0, r0, r2, lsl #2
    e5e4:	str	r1, [sp, #64]	; 0x40
    e5e8:	ldr	r0, [r0, #4]
    e5ec:	str	r0, [sp, #68]	; 0x44
    e5f0:	add	r0, sp, #64	; 0x40
    e5f4:	vld1.32	{d16}, [r0 :64]
    e5f8:	add	r0, r2, r5
    e5fc:	add	r0, r3, r0, lsl #3
    e600:	vmovl.s32	q8, d16
    e604:	vst1.64	{d16-d17}, [r0]
    e608:	ldr	r0, [sp, #36]	; 0x24
    e60c:	ldr	r4, [sp, #8]
    e610:	ldr	sl, [sp, #32]
    e614:	ldr	r6, [sp, #20]
    e618:	cmp	r0, lr
    e61c:	beq	e524 <ReadInt64Data+0x2634>
    e620:	add	r0, sp, #296	; 0x128
    e624:	add	r1, r0, lr, lsl #2
    e628:	ldr	r0, [sp, #24]
    e62c:	add	r0, lr, r0
    e630:	add	r2, r3, r0, lsl #3
    e634:	sub	r0, r4, r6
    e638:	sub	r0, r0, lr
    e63c:	sub	r0, r0, #256	; 0x100
    e640:	ldr	r4, [r1], #4
    e644:	subs	r0, r0, #1
    e648:	asr	r5, r4, #31
    e64c:	strd	r4, [r2]
    e650:	add	r2, r2, #8
    e654:	bne	e640 <ReadInt64Data+0x2750>
    e658:	b	e524 <ReadInt64Data+0x2634>
    e65c:	mov	r3, #0
    e660:	ldr	r0, [sp, #12]
    e664:	ldr	sl, [sp, #32]
    e668:	ldr	r9, [sp, #28]
    e66c:	ldr	r6, [sp, #4]
    e670:	cmp	r0, #0
    e674:	beq	e6a8 <ReadInt64Data+0x27b8>
    e678:	add	r0, sp, #296	; 0x128
    e67c:	ldr	r2, [r0, r3, lsl #2]
    e680:	add	r0, r0, r3, lsl #2
    e684:	str	r2, [sp, #128]	; 0x80
    e688:	ldr	r0, [r0, #4]
    e68c:	str	r0, [sp, #132]	; 0x84
    e690:	add	r0, sp, #128	; 0x80
    e694:	vld1.32	{d16}, [r0 :64]
    e698:	add	r0, r3, r5
    e69c:	add	r0, r6, r0, lsl #3
    e6a0:	vmovl.u32	q8, d16
    e6a4:	vst1.64	{d16-d17}, [r0]
    e6a8:	ldr	r0, [sp, #36]	; 0x24
    e6ac:	cmp	r0, lr
    e6b0:	beq	e524 <ReadInt64Data+0x2634>
    e6b4:	ldr	r2, [sp, #20]
    e6b8:	ldr	r3, [sp, #8]
    e6bc:	ldr	r7, [sp, #24]
    e6c0:	add	r0, sp, #296	; 0x128
    e6c4:	add	r0, r0, lr, lsl #2
    e6c8:	add	r2, lr, r2
    e6cc:	sub	r3, r3, r7
    e6d0:	sub	r3, r3, lr
    e6d4:	add	r2, r6, r2, lsl #3
    e6d8:	sub	r3, r3, #256	; 0x100
    e6dc:	ldr	r4, [r0], #4
    e6e0:	subs	r3, r3, #1
    e6e4:	str	r4, [r2]
    e6e8:	str	r1, [r2, #4]
    e6ec:	add	r2, r2, #8
    e6f0:	bne	e6dc <ReadInt64Data+0x27ec>
    e6f4:	b	e524 <ReadInt64Data+0x2634>

0000e6f8 <ReadCompressedInt64Data>:
    e6f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e6fc:	add	fp, sp, #28
    e700:	sub	sp, sp, #12
    e704:	mov	r7, r0
    e708:	mov	r0, #0
    e70c:	cmp	r1, #0
    e710:	beq	e724 <ReadCompressedInt64Data+0x2c>
    e714:	cmp	r7, #0
    e718:	movne	r5, r2
    e71c:	cmpne	r2, #0
    e720:	bne	e72c <ReadCompressedInt64Data+0x34>
    e724:	sub	sp, fp, #28
    e728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e72c:	ldr	sl, [fp, #8]
    e730:	mov	r0, r3
    e734:	mov	r4, r3
    e738:	mov	r6, r1
    e73c:	bl	1924 <Mat_SizeOf@plt>
    e740:	mov	r9, r0
    e744:	sub	r0, r4, #1
    e748:	cmp	r0, #12
    e74c:	bhi	ecac <ReadCompressedInt64Data+0x5b4>
    e750:	add	r1, pc, #4
    e754:	ldr	r0, [r1, r0, lsl #2]
    e758:	add	pc, r1, r0
    e75c:	.word	0x00000034
    e760:	.word	0x00000074
    e764:	.word	0x000000c0
    e768:	.word	0x00000110
    e76c:	.word	0x00000160
    e770:	.word	0x000001b0
    e774:	.word	0x00000200
    e778:	.word	0x00000550
    e77c:	.word	0x00000254
    e780:	.word	0x00000550
    e784:	.word	0x00000550
    e788:	.word	0x000002a8
    e78c:	.word	0x000002f4
    e790:	cmp	sl, #1
    e794:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    e798:	mov	r8, sp
    e79c:	mov	r4, sl
    e7a0:	mov	r0, r7
    e7a4:	mov	r1, r6
    e7a8:	mov	r2, r8
    e7ac:	mov	r3, r9
    e7b0:	bl	34ac <InflateData>
    e7b4:	ldrsb	r0, [sp]
    e7b8:	subs	r4, r4, #1
    e7bc:	asr	r1, r0, #31
    e7c0:	strd	r0, [r5]
    e7c4:	add	r5, r5, #8
    e7c8:	bne	e7a0 <ReadCompressedInt64Data+0xa8>
    e7cc:	b	ecac <ReadCompressedInt64Data+0x5b4>
    e7d0:	cmp	sl, #1
    e7d4:	blt	e80c <ReadCompressedInt64Data+0x114>
    e7d8:	ldr	r4, [fp, #8]
    e7dc:	mov	r8, sp
    e7e0:	mov	sl, #0
    e7e4:	mov	r0, r7
    e7e8:	mov	r1, r6
    e7ec:	mov	r2, r8
    e7f0:	mov	r3, r9
    e7f4:	bl	34ac <InflateData>
    e7f8:	ldrb	r0, [sp]
    e7fc:	subs	r4, r4, #1
    e800:	stm	r5, {r0, sl}
    e804:	add	r5, r5, #8
    e808:	bne	e7e4 <ReadCompressedInt64Data+0xec>
    e80c:	ldr	sl, [fp, #8]
    e810:	mul	r0, r9, sl
    e814:	sub	sp, fp, #28
    e818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e81c:	ldr	r0, [r7, #20]
    e820:	cmp	r0, #0
    e824:	beq	ea9c <ReadCompressedInt64Data+0x3a4>
    e828:	cmp	sl, #1
    e82c:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    e830:	mov	r8, sp
    e834:	mov	r4, sl
    e838:	mov	r0, r7
    e83c:	mov	r1, r6
    e840:	mov	r2, r8
    e844:	mov	r3, r9
    e848:	bl	34ac <InflateData>
    e84c:	mov	r0, r8
    e850:	bl	1c20 <Mat_int16Swap>
    e854:	asr	r1, r0, #31
    e858:	subs	r4, r4, #1
    e85c:	strd	r0, [r5]
    e860:	add	r5, r5, #8
    e864:	bne	e838 <ReadCompressedInt64Data+0x140>
    e868:	b	ecac <ReadCompressedInt64Data+0x5b4>
    e86c:	ldr	r0, [r7, #20]
    e870:	cmp	r0, #0
    e874:	beq	eadc <ReadCompressedInt64Data+0x3e4>
    e878:	cmp	sl, #1
    e87c:	blt	eb18 <ReadCompressedInt64Data+0x420>
    e880:	ldr	r4, [fp, #8]
    e884:	mov	r8, sp
    e888:	mov	sl, #0
    e88c:	mov	r0, r7
    e890:	mov	r1, r6
    e894:	mov	r2, r8
    e898:	mov	r3, r9
    e89c:	bl	34ac <InflateData>
    e8a0:	mov	r0, r8
    e8a4:	bl	1c34 <Mat_uint16Swap>
    e8a8:	stm	r5, {r0, sl}
    e8ac:	add	r5, r5, #8
    e8b0:	subs	r4, r4, #1
    e8b4:	bne	e88c <ReadCompressedInt64Data+0x194>
    e8b8:	b	eb18 <ReadCompressedInt64Data+0x420>
    e8bc:	ldr	r0, [r7, #20]
    e8c0:	cmp	r0, #0
    e8c4:	beq	eb28 <ReadCompressedInt64Data+0x430>
    e8c8:	cmp	sl, #1
    e8cc:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    e8d0:	mov	r8, sp
    e8d4:	mov	r4, sl
    e8d8:	mov	r0, r7
    e8dc:	mov	r1, r6
    e8e0:	mov	r2, r8
    e8e4:	mov	r3, r9
    e8e8:	bl	34ac <InflateData>
    e8ec:	mov	r0, r8
    e8f0:	bl	1bf8 <Mat_int32Swap>
    e8f4:	asr	r1, r0, #31
    e8f8:	subs	r4, r4, #1
    e8fc:	strd	r0, [r5]
    e900:	add	r5, r5, #8
    e904:	bne	e8d8 <ReadCompressedInt64Data+0x1e0>
    e908:	b	ecac <ReadCompressedInt64Data+0x5b4>
    e90c:	ldr	r0, [r7, #20]
    e910:	cmp	r0, #0
    e914:	beq	eb68 <ReadCompressedInt64Data+0x470>
    e918:	cmp	sl, #1
    e91c:	blt	eba4 <ReadCompressedInt64Data+0x4ac>
    e920:	ldr	sl, [fp, #8]
    e924:	mov	r8, sp
    e928:	mov	r4, #0
    e92c:	mov	r0, r7
    e930:	mov	r1, r6
    e934:	mov	r2, r8
    e938:	mov	r3, r9
    e93c:	bl	34ac <InflateData>
    e940:	mov	r0, r8
    e944:	bl	1c0c <Mat_uint32Swap>
    e948:	stm	r5, {r0, r4}
    e94c:	add	r5, r5, #8
    e950:	subs	sl, sl, #1
    e954:	bne	e92c <ReadCompressedInt64Data+0x234>
    e958:	b	eba4 <ReadCompressedInt64Data+0x4ac>
    e95c:	ldr	r0, [r7, #20]
    e960:	cmp	r0, #0
    e964:	beq	ebb4 <ReadCompressedInt64Data+0x4bc>
    e968:	cmp	sl, #1
    e96c:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    e970:	mov	r8, sp
    e974:	mov	r4, sl
    e978:	mov	r0, r7
    e97c:	mov	r1, r6
    e980:	mov	r2, r8
    e984:	mov	r3, r9
    e988:	bl	34ac <InflateData>
    e98c:	mov	r0, r8
    e990:	bl	1c4c <Mat_floatSwap>
    e994:	vmov	r0, s0
    e998:	bl	717f0 <__aeabi_f2lz>
    e99c:	strd	r0, [r5]
    e9a0:	add	r5, r5, #8
    e9a4:	subs	r4, r4, #1
    e9a8:	bne	e978 <ReadCompressedInt64Data+0x280>
    e9ac:	b	ecac <ReadCompressedInt64Data+0x5b4>
    e9b0:	ldr	r0, [r7, #20]
    e9b4:	cmp	r0, #0
    e9b8:	beq	ebf4 <ReadCompressedInt64Data+0x4fc>
    e9bc:	cmp	sl, #1
    e9c0:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    e9c4:	mov	r8, sp
    e9c8:	mov	r4, sl
    e9cc:	mov	r0, r7
    e9d0:	mov	r1, r6
    e9d4:	mov	r2, r8
    e9d8:	mov	r3, r9
    e9dc:	bl	34ac <InflateData>
    e9e0:	mov	r0, r8
    e9e4:	bl	1c90 <Mat_doubleSwap>
    e9e8:	vmov	r0, r1, d0
    e9ec:	bl	7181c <__aeabi_d2lz>
    e9f0:	strd	r0, [r5]
    e9f4:	add	r5, r5, #8
    e9f8:	subs	r4, r4, #1
    e9fc:	bne	e9cc <ReadCompressedInt64Data+0x2d4>
    ea00:	b	ecac <ReadCompressedInt64Data+0x5b4>
    ea04:	ldr	r0, [r7, #20]
    ea08:	cmp	r0, #0
    ea0c:	beq	ec38 <ReadCompressedInt64Data+0x540>
    ea10:	cmp	sl, #1
    ea14:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    ea18:	mov	r8, sp
    ea1c:	mov	r4, sl
    ea20:	mov	r0, r7
    ea24:	mov	r1, r6
    ea28:	mov	r2, r8
    ea2c:	mov	r3, r9
    ea30:	bl	34ac <InflateData>
    ea34:	mov	r0, r8
    ea38:	bl	1b84 <Mat_int64Swap>
    ea3c:	strd	r0, [r5]
    ea40:	add	r5, r5, #8
    ea44:	subs	r4, r4, #1
    ea48:	bne	ea20 <ReadCompressedInt64Data+0x328>
    ea4c:	b	ecac <ReadCompressedInt64Data+0x5b4>
    ea50:	ldr	r0, [r7, #20]
    ea54:	cmp	r0, #0
    ea58:	beq	ec74 <ReadCompressedInt64Data+0x57c>
    ea5c:	cmp	sl, #1
    ea60:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    ea64:	mov	r8, sp
    ea68:	mov	r4, sl
    ea6c:	mov	r0, r7
    ea70:	mov	r1, r6
    ea74:	mov	r2, r8
    ea78:	mov	r3, r9
    ea7c:	bl	34ac <InflateData>
    ea80:	mov	r0, r8
    ea84:	bl	1bd4 <Mat_uint64Swap>
    ea88:	strd	r0, [r5]
    ea8c:	add	r5, r5, #8
    ea90:	subs	r4, r4, #1
    ea94:	bne	ea6c <ReadCompressedInt64Data+0x374>
    ea98:	b	ecac <ReadCompressedInt64Data+0x5b4>
    ea9c:	cmp	sl, #1
    eaa0:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    eaa4:	mov	r8, sp
    eaa8:	mov	r4, sl
    eaac:	mov	r0, r7
    eab0:	mov	r1, r6
    eab4:	mov	r2, r8
    eab8:	mov	r3, r9
    eabc:	bl	34ac <InflateData>
    eac0:	ldrsh	r0, [sp]
    eac4:	subs	r4, r4, #1
    eac8:	asr	r1, r0, #31
    eacc:	strd	r0, [r5]
    ead0:	add	r5, r5, #8
    ead4:	bne	eaac <ReadCompressedInt64Data+0x3b4>
    ead8:	b	ecac <ReadCompressedInt64Data+0x5b4>
    eadc:	cmp	sl, #1
    eae0:	blt	eb18 <ReadCompressedInt64Data+0x420>
    eae4:	ldr	r4, [fp, #8]
    eae8:	mov	r8, sp
    eaec:	mov	sl, #0
    eaf0:	mov	r0, r7
    eaf4:	mov	r1, r6
    eaf8:	mov	r2, r8
    eafc:	mov	r3, r9
    eb00:	bl	34ac <InflateData>
    eb04:	ldrh	r0, [sp]
    eb08:	subs	r4, r4, #1
    eb0c:	stm	r5, {r0, sl}
    eb10:	add	r5, r5, #8
    eb14:	bne	eaf0 <ReadCompressedInt64Data+0x3f8>
    eb18:	ldr	sl, [fp, #8]
    eb1c:	mul	r0, r9, sl
    eb20:	sub	sp, fp, #28
    eb24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb28:	cmp	sl, #1
    eb2c:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    eb30:	mov	r8, sp
    eb34:	mov	r4, sl
    eb38:	mov	r0, r7
    eb3c:	mov	r1, r6
    eb40:	mov	r2, r8
    eb44:	mov	r3, r9
    eb48:	bl	34ac <InflateData>
    eb4c:	ldr	r0, [sp]
    eb50:	subs	r4, r4, #1
    eb54:	asr	r1, r0, #31
    eb58:	strd	r0, [r5]
    eb5c:	add	r5, r5, #8
    eb60:	bne	eb38 <ReadCompressedInt64Data+0x440>
    eb64:	b	ecac <ReadCompressedInt64Data+0x5b4>
    eb68:	cmp	sl, #1
    eb6c:	blt	eba4 <ReadCompressedInt64Data+0x4ac>
    eb70:	ldr	r4, [fp, #8]
    eb74:	mov	r8, sp
    eb78:	mov	sl, #0
    eb7c:	mov	r0, r7
    eb80:	mov	r1, r6
    eb84:	mov	r2, r8
    eb88:	mov	r3, r9
    eb8c:	bl	34ac <InflateData>
    eb90:	ldr	r0, [sp]
    eb94:	subs	r4, r4, #1
    eb98:	stm	r5, {r0, sl}
    eb9c:	add	r5, r5, #8
    eba0:	bne	eb7c <ReadCompressedInt64Data+0x484>
    eba4:	ldr	sl, [fp, #8]
    eba8:	mul	r0, r9, sl
    ebac:	sub	sp, fp, #28
    ebb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ebb4:	cmp	sl, #1
    ebb8:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    ebbc:	mov	r8, sp
    ebc0:	mov	r4, sl
    ebc4:	mov	r0, r7
    ebc8:	mov	r1, r6
    ebcc:	mov	r2, r8
    ebd0:	mov	r3, r9
    ebd4:	bl	34ac <InflateData>
    ebd8:	ldr	r0, [sp]
    ebdc:	bl	717f0 <__aeabi_f2lz>
    ebe0:	strd	r0, [r5]
    ebe4:	add	r5, r5, #8
    ebe8:	subs	r4, r4, #1
    ebec:	bne	ebc4 <ReadCompressedInt64Data+0x4cc>
    ebf0:	b	ecac <ReadCompressedInt64Data+0x5b4>
    ebf4:	cmp	sl, #1
    ebf8:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    ebfc:	mov	r8, sp
    ec00:	mov	r4, sl
    ec04:	mov	r0, r7
    ec08:	mov	r1, r6
    ec0c:	mov	r2, r8
    ec10:	mov	r3, r9
    ec14:	bl	34ac <InflateData>
    ec18:	vldr	d16, [sp]
    ec1c:	vmov	r0, r1, d16
    ec20:	bl	7181c <__aeabi_d2lz>
    ec24:	strd	r0, [r5]
    ec28:	add	r5, r5, #8
    ec2c:	subs	r4, r4, #1
    ec30:	bne	ec04 <ReadCompressedInt64Data+0x50c>
    ec34:	b	ecac <ReadCompressedInt64Data+0x5b4>
    ec38:	cmp	sl, #1
    ec3c:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    ec40:	mov	r8, sp
    ec44:	mov	r4, sl
    ec48:	mov	r0, r7
    ec4c:	mov	r1, r6
    ec50:	mov	r2, r8
    ec54:	mov	r3, r9
    ec58:	bl	34ac <InflateData>
    ec5c:	ldm	sp, {r0, r1}
    ec60:	subs	r4, r4, #1
    ec64:	strd	r0, [r5]
    ec68:	add	r5, r5, #8
    ec6c:	bne	ec48 <ReadCompressedInt64Data+0x550>
    ec70:	b	ecac <ReadCompressedInt64Data+0x5b4>
    ec74:	cmp	sl, #1
    ec78:	blt	ecac <ReadCompressedInt64Data+0x5b4>
    ec7c:	mov	r8, sp
    ec80:	mov	r4, sl
    ec84:	mov	r0, r7
    ec88:	mov	r1, r6
    ec8c:	mov	r2, r8
    ec90:	mov	r3, r9
    ec94:	bl	34ac <InflateData>
    ec98:	ldm	sp, {r0, r1}
    ec9c:	subs	r4, r4, #1
    eca0:	strd	r0, [r5]
    eca4:	add	r5, r5, #8
    eca8:	bne	ec84 <ReadCompressedInt64Data+0x58c>
    ecac:	mul	r0, r9, sl
    ecb0:	sub	sp, fp, #28
    ecb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ecb8 <ReadUInt64Data>:
    ecb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ecbc:	add	fp, sp, #28
    ecc0:	sub	sp, sp, #300	; 0x12c
    ecc4:	sub	sp, sp, #2048	; 0x800
    ecc8:	mov	r4, r0
    eccc:	mov	r0, #0
    ecd0:	cmp	r4, #0
    ecd4:	movne	r7, r1
    ecd8:	cmpne	r1, #0
    ecdc:	bne	ece8 <ReadUInt64Data+0x30>
    ece0:	sub	sp, fp, #28
    ece4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ece8:	ldr	r1, [r4]
    ecec:	cmp	r1, #0
    ecf0:	beq	ece0 <ReadUInt64Data+0x28>
    ecf4:	mov	r0, r2
    ecf8:	mov	r6, r3
    ecfc:	mov	r5, r2
    ed00:	bl	1924 <Mat_SizeOf@plt>
    ed04:	mov	sl, r0
    ed08:	sub	r0, r5, #1
    ed0c:	mov	r9, #0
    ed10:	str	r4, [sp, #36]	; 0x24
    ed14:	cmp	r0, #11
    ed18:	bhi	10bf8 <ReadUInt64Data+0x1f40>
    ed1c:	add	r1, pc, #8
    ed20:	add	r8, sp, #232	; 0xe8
    ed24:	ldr	r0, [r1, r0, lsl #2]
    ed28:	add	pc, r1, r0
    ed2c:	.word	0x00000030
    ed30:	.word	0x000000f4
    ed34:	.word	0x000001bc
    ed38:	.word	0x00000218
    ed3c:	.word	0x00000274
    ed40:	.word	0x000002d0
    ed44:	.word	0x0000032c
    ed48:	.word	0x00001ecc
    ed4c:	.word	0x0000038c
    ed50:	.word	0x00001ecc
    ed54:	.word	0x00001ecc
    ed58:	.word	0x000003ec
    ed5c:	cmp	r6, #256	; 0x100
    ed60:	bgt	f18c <ReadUInt64Data+0x4d4>
    ed64:	ldr	r3, [r4]
    ed68:	add	r4, sp, #296	; 0x128
    ed6c:	mov	r1, sl
    ed70:	mov	r2, r6
    ed74:	mov	r0, r4
    ed78:	bl	18b8 <fread@plt>
    ed7c:	mov	r9, r0
    ed80:	cmp	r6, #1
    ed84:	blt	112ec <ReadUInt64Data+0x2634>
    ed88:	mov	lr, #0
    ed8c:	beq	10ea8 <ReadUInt64Data+0x21f0>
    ed90:	bic	lr, r6, #1
    ed94:	mov	r1, #1
    ed98:	str	sl, [sp, #32]
    ed9c:	mov	sl, r7
    eda0:	str	r9, [sp, #28]
    eda4:	str	r6, [sp, #8]
    eda8:	subs	r0, lr, #2
    edac:	add	r0, r1, r0, lsr #1
    edb0:	and	ip, r0, #1
    edb4:	beq	10e60 <ReadUInt64Data+0x21a8>
    edb8:	sub	r3, r0, ip
    edbc:	mov	r1, #0
    edc0:	add	r9, sp, #236	; 0xec
    edc4:	mov	r5, #32
    edc8:	add	r2, sp, #240	; 0xf0
    edcc:	mov	r0, sl
    edd0:	add	r7, r4, r1
    edd4:	subs	r3, r3, #2
    edd8:	add	r1, r1, #4
    eddc:	ldrh	r6, [r7]
    ede0:	strh	r6, [r8, #4]
    ede4:	add	r6, r0, #16
    ede8:	vld1.16	{d16[0]}, [r9 :16]
    edec:	vmovl.s8	q8, d16
    edf0:	vmovl.s16	q8, d16
    edf4:	vmovl.s32	q8, d16
    edf8:	vst1.64	{d16-d17}, [r0], r5
    edfc:	ldrh	r7, [r7, #2]
    ee00:	strh	r7, [r8, #8]
    ee04:	vld1.16	{d16[0]}, [r2 :16]
    ee08:	vmovl.s8	q8, d16
    ee0c:	vmovl.s16	q8, d16
    ee10:	vmovl.s32	q8, d16
    ee14:	vst1.64	{d16-d17}, [r6]
    ee18:	bne	edd0 <ReadUInt64Data+0x118>
    ee1c:	b	10e64 <ReadUInt64Data+0x21ac>
    ee20:	cmp	r6, #256	; 0x100
    ee24:	bgt	f368 <ReadUInt64Data+0x6b0>
    ee28:	ldr	r3, [r4]
    ee2c:	add	r9, sp, #296	; 0x128
    ee30:	mov	r1, sl
    ee34:	mov	r2, r6
    ee38:	mov	r0, r9
    ee3c:	bl	18b8 <fread@plt>
    ee40:	mov	ip, r0
    ee44:	cmp	r6, #1
    ee48:	blt	10f40 <ReadUInt64Data+0x2288>
    ee4c:	mov	r1, #0
    ee50:	mov	lr, #0
    ee54:	beq	10f1c <ReadUInt64Data+0x2264>
    ee58:	bic	lr, r6, #1
    ee5c:	mov	r2, #1
    ee60:	str	r7, [sp, #4]
    ee64:	str	r6, [sp, #8]
    ee68:	str	sl, [sp, #32]
    ee6c:	subs	r0, lr, #2
    ee70:	add	r0, r2, r0, lsr #1
    ee74:	and	r2, r0, #1
    ee78:	str	r2, [sp, #36]	; 0x24
    ee7c:	beq	10ed0 <ReadUInt64Data+0x2218>
    ee80:	ldr	r7, [sp, #4]
    ee84:	sub	r6, r0, r2
    ee88:	mov	r2, #0
    ee8c:	add	sl, sp, #268	; 0x10c
    ee90:	mov	r3, #32
    ee94:	add	r0, sp, #272	; 0x110
    ee98:	add	r4, r9, r2
    ee9c:	subs	r6, r6, #2
    eea0:	add	r2, r2, #4
    eea4:	ldrh	r5, [r4]
    eea8:	strh	r5, [r8, #36]	; 0x24
    eeac:	add	r5, r7, #16
    eeb0:	vld1.16	{d16[0]}, [sl :16]
    eeb4:	vmovl.u8	q8, d16
    eeb8:	vmovl.u16	q8, d16
    eebc:	vmovl.u32	q8, d16
    eec0:	vst1.64	{d16-d17}, [r7], r3
    eec4:	ldrh	r4, [r4, #2]
    eec8:	strh	r4, [r8, #40]	; 0x28
    eecc:	vld1.16	{d16[0]}, [r0 :16]
    eed0:	vmovl.u8	q8, d16
    eed4:	vmovl.u16	q8, d16
    eed8:	vmovl.u32	q8, d16
    eedc:	vst1.64	{d16-d17}, [r5]
    eee0:	bne	ee98 <ReadUInt64Data+0x1e0>
    eee4:	b	10ed4 <ReadUInt64Data+0x221c>
    eee8:	ldr	r0, [r4, #20]
    eeec:	cmp	r0, #0
    eef0:	beq	f548 <ReadUInt64Data+0x890>
    eef4:	cmp	r6, #256	; 0x100
    eef8:	bgt	f9e4 <ReadUInt64Data+0xd2c>
    eefc:	ldr	r3, [r4]
    ef00:	add	r4, sp, #296	; 0x128
    ef04:	mov	r1, sl
    ef08:	mov	r2, r6
    ef0c:	mov	r0, r4
    ef10:	bl	18b8 <fread@plt>
    ef14:	mov	r9, r0
    ef18:	cmp	r6, #1
    ef1c:	blt	112ec <ReadUInt64Data+0x2634>
    ef20:	mov	r0, r4
    ef24:	bl	1c20 <Mat_int16Swap>
    ef28:	asr	r1, r0, #31
    ef2c:	add	r4, r4, #2
    ef30:	subs	r6, r6, #1
    ef34:	strd	r0, [r7]
    ef38:	add	r7, r7, #8
    ef3c:	bne	ef20 <ReadUInt64Data+0x268>
    ef40:	b	112ec <ReadUInt64Data+0x2634>
    ef44:	ldr	r0, [r4, #20]
    ef48:	cmp	r0, #0
    ef4c:	beq	f600 <ReadUInt64Data+0x948>
    ef50:	cmp	r6, #256	; 0x100
    ef54:	bgt	fad4 <ReadUInt64Data+0xe1c>
    ef58:	ldr	r3, [r4]
    ef5c:	add	r4, sp, #296	; 0x128
    ef60:	mov	r1, sl
    ef64:	mov	r2, r6
    ef68:	mov	r0, r4
    ef6c:	bl	18b8 <fread@plt>
    ef70:	mov	r9, r0
    ef74:	cmp	r6, #1
    ef78:	blt	112ec <ReadUInt64Data+0x2634>
    ef7c:	mov	r5, #0
    ef80:	mov	r0, r4
    ef84:	bl	1c34 <Mat_uint16Swap>
    ef88:	stm	r7, {r0, r5}
    ef8c:	add	r4, r4, #2
    ef90:	add	r7, r7, #8
    ef94:	subs	r6, r6, #1
    ef98:	bne	ef80 <ReadUInt64Data+0x2c8>
    ef9c:	b	112ec <ReadUInt64Data+0x2634>
    efa0:	ldr	r0, [r4, #20]
    efa4:	cmp	r0, #0
    efa8:	beq	f6c0 <ReadUInt64Data+0xa08>
    efac:	cmp	r6, #256	; 0x100
    efb0:	bgt	fbd0 <ReadUInt64Data+0xf18>
    efb4:	ldr	r3, [r4]
    efb8:	add	r4, sp, #296	; 0x128
    efbc:	mov	r1, sl
    efc0:	mov	r2, r6
    efc4:	mov	r0, r4
    efc8:	bl	18b8 <fread@plt>
    efcc:	mov	r9, r0
    efd0:	cmp	r6, #1
    efd4:	blt	112ec <ReadUInt64Data+0x2634>
    efd8:	mov	r0, r4
    efdc:	bl	1bf8 <Mat_int32Swap>
    efe0:	asr	r1, r0, #31
    efe4:	add	r4, r4, #4
    efe8:	subs	r6, r6, #1
    efec:	strd	r0, [r7]
    eff0:	add	r7, r7, #8
    eff4:	bne	efd8 <ReadUInt64Data+0x320>
    eff8:	b	112ec <ReadUInt64Data+0x2634>
    effc:	ldr	r0, [r4, #20]
    f000:	cmp	r0, #0
    f004:	beq	f780 <ReadUInt64Data+0xac8>
    f008:	cmp	r6, #256	; 0x100
    f00c:	bgt	fcc0 <ReadUInt64Data+0x1008>
    f010:	ldr	r3, [r4]
    f014:	add	r4, sp, #296	; 0x128
    f018:	mov	r1, sl
    f01c:	mov	r2, r6
    f020:	mov	r0, r4
    f024:	bl	18b8 <fread@plt>
    f028:	mov	r9, r0
    f02c:	cmp	r6, #1
    f030:	blt	112ec <ReadUInt64Data+0x2634>
    f034:	mov	r5, #0
    f038:	mov	r0, r4
    f03c:	bl	1c0c <Mat_uint32Swap>
    f040:	stm	r7, {r0, r5}
    f044:	add	r4, r4, #4
    f048:	add	r7, r7, #8
    f04c:	subs	r6, r6, #1
    f050:	bne	f038 <ReadUInt64Data+0x380>
    f054:	b	112ec <ReadUInt64Data+0x2634>
    f058:	ldr	r0, [r4, #20]
    f05c:	cmp	r0, #0
    f060:	beq	f848 <ReadUInt64Data+0xb90>
    f064:	cmp	r6, #256	; 0x100
    f068:	bgt	fdbc <ReadUInt64Data+0x1104>
    f06c:	ldr	r3, [r4]
    f070:	add	r4, sp, #296	; 0x128
    f074:	mov	r1, sl
    f078:	mov	r2, r6
    f07c:	mov	r0, r4
    f080:	bl	18b8 <fread@plt>
    f084:	mov	r9, r0
    f088:	cmp	r6, #1
    f08c:	blt	112ec <ReadUInt64Data+0x2634>
    f090:	mov	r0, r4
    f094:	bl	1c4c <Mat_floatSwap>
    f098:	vmov	r0, s0
    f09c:	bl	71848 <__aeabi_f2ulz>
    f0a0:	strd	r0, [r7]
    f0a4:	add	r4, r4, #4
    f0a8:	add	r7, r7, #8
    f0ac:	subs	r6, r6, #1
    f0b0:	bne	f090 <ReadUInt64Data+0x3d8>
    f0b4:	b	112ec <ReadUInt64Data+0x2634>
    f0b8:	ldr	r0, [r4, #20]
    f0bc:	cmp	r0, #0
    f0c0:	beq	f8e4 <ReadUInt64Data+0xc2c>
    f0c4:	cmp	r6, #256	; 0x100
    f0c8:	bgt	feb4 <ReadUInt64Data+0x11fc>
    f0cc:	ldr	r3, [r4]
    f0d0:	add	r4, sp, #296	; 0x128
    f0d4:	mov	r1, sl
    f0d8:	mov	r2, r6
    f0dc:	mov	r0, r4
    f0e0:	bl	18b8 <fread@plt>
    f0e4:	mov	r9, r0
    f0e8:	cmp	r6, #1
    f0ec:	blt	112ec <ReadUInt64Data+0x2634>
    f0f0:	mov	r0, r4
    f0f4:	bl	1c90 <Mat_doubleSwap>
    f0f8:	vmov	r0, r1, d0
    f0fc:	bl	71888 <__aeabi_d2ulz>
    f100:	strd	r0, [r7]
    f104:	add	r4, r4, #8
    f108:	add	r7, r7, #8
    f10c:	subs	r6, r6, #1
    f110:	bne	f0f0 <ReadUInt64Data+0x438>
    f114:	b	112ec <ReadUInt64Data+0x2634>
    f118:	ldr	r0, [r4, #20]
    f11c:	cmp	r0, #0
    f120:	beq	f9a0 <ReadUInt64Data+0xce8>
    f124:	cmp	r6, #256	; 0x100
    f128:	bgt	ffb0 <ReadUInt64Data+0x12f8>
    f12c:	ldr	r3, [r4]
    f130:	add	r4, sp, #296	; 0x128
    f134:	mov	r1, sl
    f138:	mov	r2, r6
    f13c:	mov	r0, r4
    f140:	bl	18b8 <fread@plt>
    f144:	mov	r9, r0
    f148:	cmp	r6, #1
    f14c:	blt	10e40 <ReadUInt64Data+0x2188>
    f150:	str	r5, [sp, #24]
    f154:	mov	r8, r7
    f158:	mov	r5, r7
    f15c:	mov	r7, r6
    f160:	mov	r0, r4
    f164:	bl	1b84 <Mat_int64Swap>
    f168:	strd	r0, [r5]
    f16c:	add	r4, r4, #8
    f170:	add	r5, r5, #8
    f174:	subs	r6, r6, #1
    f178:	bne	f160 <ReadUInt64Data+0x4a8>
    f17c:	ldr	r4, [sp, #36]	; 0x24
    f180:	mov	r6, r7
    f184:	mov	r7, r8
    f188:	b	10bf4 <ReadUInt64Data+0x1f3c>
    f18c:	sub	r1, r6, #256	; 0x100
    f190:	str	sl, [sp, #32]
    f194:	str	r6, [sp, #8]
    f198:	mov	r9, r7
    f19c:	add	r0, r7, #2048	; 0x800
    f1a0:	mov	r2, #0
    f1a4:	mov	r4, #0
    f1a8:	add	r7, sp, #296	; 0x128
    f1ac:	add	r5, sp, #256	; 0x100
    f1b0:	mov	sl, #32
    f1b4:	add	r6, sp, #260	; 0x104
    f1b8:	str	r1, [sp, #12]
    f1bc:	mov	r1, #256	; 0x100
    f1c0:	str	r9, [sp, #4]
    f1c4:	str	r2, [sp, #28]
    f1c8:	add	r2, sp, #16
    f1cc:	stm	r2, {r0, r1, r4}
    f1d0:	ldr	r0, [sp, #36]	; 0x24
    f1d4:	ldr	r1, [sp, #32]
    f1d8:	mov	r2, #256	; 0x100
    f1dc:	ldr	r3, [r0]
    f1e0:	mov	r0, r7
    f1e4:	bl	18b8 <fread@plt>
    f1e8:	mov	r1, r9
    f1ec:	mov	r2, #0
    f1f0:	add	r3, r7, r2
    f1f4:	add	r2, r2, #4
    f1f8:	ldrh	r4, [r3]
    f1fc:	cmp	r2, #256	; 0x100
    f200:	strh	r4, [r8, #24]
    f204:	add	r4, r1, #16
    f208:	vld1.16	{d16[0]}, [r5 :16]
    f20c:	vmovl.s8	q8, d16
    f210:	vmovl.s16	q8, d16
    f214:	vmovl.s32	q8, d16
    f218:	vst1.64	{d16-d17}, [r1], sl
    f21c:	ldrh	r3, [r3, #2]
    f220:	strh	r3, [r8, #28]
    f224:	vld1.16	{d16[0]}, [r6 :16]
    f228:	vmovl.s8	q8, d16
    f22c:	vmovl.s16	q8, d16
    f230:	vmovl.s32	q8, d16
    f234:	vst1.64	{d16-d17}, [r4]
    f238:	bne	f1f0 <ReadUInt64Data+0x538>
    f23c:	ldr	r1, [sp, #28]
    f240:	ldr	r2, [sp, #24]
    f244:	add	r9, r9, #2048	; 0x800
    f248:	add	r1, r0, r1
    f24c:	ldr	r0, [sp, #16]
    f250:	add	r4, r2, #256	; 0x100
    f254:	ldr	r2, [sp, #12]
    f258:	str	r1, [sp, #28]
    f25c:	ldr	r1, [sp, #20]
    f260:	add	r0, r0, #2048	; 0x800
    f264:	cmp	r4, r2
    f268:	add	r1, r1, #256	; 0x100
    f26c:	blt	f1c8 <ReadUInt64Data+0x510>
    f270:	ldr	r5, [sp, #8]
    f274:	cmp	r4, r5
    f278:	bge	1096c <ReadUInt64Data+0x1cb4>
    f27c:	ldr	r0, [sp, #36]	; 0x24
    f280:	ldr	sl, [sp, #32]
    f284:	sub	r6, r5, r4
    f288:	add	r9, sp, #296	; 0x128
    f28c:	mov	r2, r6
    f290:	ldr	r3, [r0]
    f294:	mov	r0, r9
    f298:	mov	r1, sl
    f29c:	bl	18b8 <fread@plt>
    f2a0:	ldr	r1, [sp, #28]
    f2a4:	cmp	r6, #1
    f2a8:	add	r1, r0, r1
    f2ac:	str	r1, [sp, #28]
    f2b0:	blt	11074 <ReadUInt64Data+0x23bc>
    f2b4:	ldr	sl, [sp, #4]
    f2b8:	mov	lr, #0
    f2bc:	beq	10f9c <ReadUInt64Data+0x22e4>
    f2c0:	bic	lr, r6, #1
    f2c4:	mov	r1, #1
    f2c8:	str	r6, [sp, #36]	; 0x24
    f2cc:	subs	r2, lr, #2
    f2d0:	add	r2, r1, r2, lsr #1
    f2d4:	and	r0, r2, #1
    f2d8:	str	r0, [sp, #12]
    f2dc:	beq	10f50 <ReadUInt64Data+0x2298>
    f2e0:	ldr	r0, [sp, #24]
    f2e4:	ldr	ip, [sp, #16]
    f2e8:	add	r6, sp, #248	; 0xf8
    f2ec:	sub	r2, r5, r0
    f2f0:	mov	r5, #32
    f2f4:	sub	r2, r2, #256	; 0x100
    f2f8:	bic	r2, r2, #1
    f2fc:	sub	r2, r2, #2
    f300:	add	r1, r1, r2, lsr #1
    f304:	mvn	r3, r2, lsr #1
    f308:	mov	r2, #0
    f30c:	and	r1, r1, #1
    f310:	add	r3, r3, r1
    f314:	add	r1, sp, #252	; 0xfc
    f318:	add	r0, r9, r2
    f31c:	adds	r3, r3, #2
    f320:	add	r2, r2, #4
    f324:	ldrh	r7, [r0]
    f328:	strh	r7, [r8, #16]
    f32c:	add	r7, ip, #16
    f330:	vld1.16	{d16[0]}, [r6 :16]
    f334:	vmovl.s8	q8, d16
    f338:	vmovl.s16	q8, d16
    f33c:	vmovl.s32	q8, d16
    f340:	vst1.64	{d16-d17}, [ip], r5
    f344:	ldrh	r0, [r0, #2]
    f348:	strh	r0, [r8, #20]
    f34c:	vld1.16	{d16[0]}, [r1 :16]
    f350:	vmovl.s8	q8, d16
    f354:	vmovl.s16	q8, d16
    f358:	vmovl.s32	q8, d16
    f35c:	vst1.64	{d16-d17}, [r7]
    f360:	bne	f318 <ReadUInt64Data+0x660>
    f364:	b	10f54 <ReadUInt64Data+0x229c>
    f368:	sub	r1, r6, #256	; 0x100
    f36c:	str	sl, [sp, #32]
    f370:	str	r6, [sp, #8]
    f374:	mov	r6, r7
    f378:	add	r0, r7, #2048	; 0x800
    f37c:	mov	r2, #0
    f380:	mov	r4, #0
    f384:	add	r7, sp, #296	; 0x128
    f388:	add	r5, sp, #288	; 0x120
    f38c:	mov	sl, #32
    f390:	add	r9, sp, #292	; 0x124
    f394:	str	r1, [sp, #12]
    f398:	mov	r1, #256	; 0x100
    f39c:	str	r6, [sp, #4]
    f3a0:	str	r2, [sp, #28]
    f3a4:	add	r2, sp, #16
    f3a8:	stm	r2, {r0, r1, r4}
    f3ac:	ldr	r0, [sp, #36]	; 0x24
    f3b0:	ldr	r1, [sp, #32]
    f3b4:	mov	r2, #256	; 0x100
    f3b8:	ldr	r3, [r0]
    f3bc:	mov	r0, r7
    f3c0:	bl	18b8 <fread@plt>
    f3c4:	mov	r1, r6
    f3c8:	mov	r2, #0
    f3cc:	add	r3, r7, r2
    f3d0:	add	r2, r2, #4
    f3d4:	ldrh	r4, [r3]
    f3d8:	cmp	r2, #256	; 0x100
    f3dc:	strh	r4, [r8, #56]	; 0x38
    f3e0:	add	r4, r1, #16
    f3e4:	vld1.16	{d16[0]}, [r5 :16]
    f3e8:	vmovl.u8	q8, d16
    f3ec:	vmovl.u16	q8, d16
    f3f0:	vmovl.u32	q8, d16
    f3f4:	vst1.64	{d16-d17}, [r1], sl
    f3f8:	ldrh	r3, [r3, #2]
    f3fc:	strh	r3, [r8, #60]	; 0x3c
    f400:	vld1.16	{d16[0]}, [r9 :16]
    f404:	vmovl.u8	q8, d16
    f408:	vmovl.u16	q8, d16
    f40c:	vmovl.u32	q8, d16
    f410:	vst1.64	{d16-d17}, [r4]
    f414:	bne	f3cc <ReadUInt64Data+0x714>
    f418:	ldr	r1, [sp, #28]
    f41c:	ldr	r2, [sp, #24]
    f420:	add	r6, r6, #2048	; 0x800
    f424:	add	r1, r0, r1
    f428:	ldr	r0, [sp, #16]
    f42c:	add	r4, r2, #256	; 0x100
    f430:	ldr	r2, [sp, #12]
    f434:	str	r1, [sp, #28]
    f438:	ldr	r1, [sp, #20]
    f43c:	add	r0, r0, #2048	; 0x800
    f440:	cmp	r4, r2
    f444:	add	r1, r1, #256	; 0x100
    f448:	blt	f3a4 <ReadUInt64Data+0x6ec>
    f44c:	ldr	r5, [sp, #8]
    f450:	cmp	r4, r5
    f454:	bge	1096c <ReadUInt64Data+0x1cb4>
    f458:	ldr	r0, [sp, #36]	; 0x24
    f45c:	ldr	sl, [sp, #32]
    f460:	sub	r6, r5, r4
    f464:	add	r9, sp, #296	; 0x128
    f468:	mov	r2, r6
    f46c:	ldr	r3, [r0]
    f470:	mov	r0, r9
    f474:	mov	r1, sl
    f478:	bl	18b8 <fread@plt>
    f47c:	ldr	r1, [sp, #28]
    f480:	cmp	r6, #1
    f484:	add	r1, r0, r1
    f488:	str	r1, [sp, #28]
    f48c:	blt	11074 <ReadUInt64Data+0x23bc>
    f490:	ldr	r7, [sp, #4]
    f494:	mov	r1, #0
    f498:	mov	lr, #0
    f49c:	beq	1103c <ReadUInt64Data+0x2384>
    f4a0:	bic	lr, r6, #1
    f4a4:	mov	r0, #1
    f4a8:	str	r6, [sp, #36]	; 0x24
    f4ac:	subs	r2, lr, #2
    f4b0:	add	r2, r0, r2, lsr #1
    f4b4:	and	r2, r2, #1
    f4b8:	str	r2, [sp, #12]
    f4bc:	beq	10fe8 <ReadUInt64Data+0x2330>
    f4c0:	ldr	r2, [sp, #24]
    f4c4:	ldr	ip, [sp, #16]
    f4c8:	add	sl, sp, #280	; 0x118
    f4cc:	sub	r2, r5, r2
    f4d0:	sub	r2, r2, #256	; 0x100
    f4d4:	bic	r2, r2, #1
    f4d8:	sub	r2, r2, #2
    f4dc:	add	r0, r0, r2, lsr #1
    f4e0:	mvn	r3, r2, lsr #1
    f4e4:	mov	r2, #32
    f4e8:	and	r0, r0, #1
    f4ec:	add	r6, r3, r0
    f4f0:	mov	r3, #0
    f4f4:	add	r0, sp, #284	; 0x11c
    f4f8:	add	r7, r9, r3
    f4fc:	adds	r6, r6, #2
    f500:	add	r3, r3, #4
    f504:	ldrh	r5, [r7]
    f508:	strh	r5, [r8, #48]	; 0x30
    f50c:	add	r5, ip, #16
    f510:	vld1.16	{d16[0]}, [sl :16]
    f514:	vmovl.u8	q8, d16
    f518:	vmovl.u16	q8, d16
    f51c:	vmovl.u32	q8, d16
    f520:	vst1.64	{d16-d17}, [ip], r2
    f524:	ldrh	r7, [r7, #2]
    f528:	strh	r7, [r8, #52]	; 0x34
    f52c:	vld1.16	{d16[0]}, [r0 :16]
    f530:	vmovl.u8	q8, d16
    f534:	vmovl.u16	q8, d16
    f538:	vmovl.u32	q8, d16
    f53c:	vst1.64	{d16-d17}, [r5]
    f540:	bne	f4f8 <ReadUInt64Data+0x840>
    f544:	b	10fec <ReadUInt64Data+0x2334>
    f548:	cmp	r6, #256	; 0x100
    f54c:	bgt	100c8 <ReadUInt64Data+0x1410>
    f550:	ldr	r3, [r4]
    f554:	add	r4, sp, #296	; 0x128
    f558:	mov	r1, sl
    f55c:	mov	r2, r6
    f560:	mov	r0, r4
    f564:	bl	18b8 <fread@plt>
    f568:	mov	r9, r0
    f56c:	cmp	r6, #1
    f570:	blt	112ec <ReadUInt64Data+0x2634>
    f574:	mov	lr, #0
    f578:	beq	110cc <ReadUInt64Data+0x2414>
    f57c:	bic	lr, r6, #1
    f580:	mov	r2, #1
    f584:	str	sl, [sp, #32]
    f588:	str	r6, [sp, #8]
    f58c:	subs	r1, lr, #2
    f590:	add	r1, r2, r1, lsr #1
    f594:	and	ip, r1, #1
    f598:	beq	11084 <ReadUInt64Data+0x23cc>
    f59c:	sub	r3, r1, ip
    f5a0:	mov	r1, #0
    f5a4:	add	r8, sp, #172	; 0xac
    f5a8:	mov	r6, #32
    f5ac:	add	r5, sp, #176	; 0xb0
    f5b0:	mov	sl, r7
    f5b4:	mov	r2, r7
    f5b8:	ldr	r0, [r4]
    f5bc:	subs	r3, r3, #2
    f5c0:	add	r1, r1, #4
    f5c4:	str	r0, [sp, #172]	; 0xac
    f5c8:	add	r0, r2, #16
    f5cc:	vld1.32	{d16[0]}, [r8 :32]
    f5d0:	vmovl.s16	q8, d16
    f5d4:	vmovl.s32	q8, d16
    f5d8:	vst1.64	{d16-d17}, [r2], r6
    f5dc:	ldr	r7, [r4, #4]
    f5e0:	add	r4, r4, #8
    f5e4:	str	r7, [sp, #176]	; 0xb0
    f5e8:	vld1.32	{d16[0]}, [r5 :32]
    f5ec:	vmovl.s16	q8, d16
    f5f0:	vmovl.s32	q8, d16
    f5f4:	vst1.64	{d16-d17}, [r0]
    f5f8:	bne	f5b8 <ReadUInt64Data+0x900>
    f5fc:	b	1108c <ReadUInt64Data+0x23d4>
    f600:	cmp	r6, #256	; 0x100
    f604:	bgt	10280 <ReadUInt64Data+0x15c8>
    f608:	ldr	r3, [r4]
    f60c:	add	r4, sp, #296	; 0x128
    f610:	mov	r1, sl
    f614:	mov	r2, r6
    f618:	mov	r0, r4
    f61c:	bl	18b8 <fread@plt>
    f620:	mov	r9, r0
    f624:	cmp	r6, #1
    f628:	blt	112ec <ReadUInt64Data+0x2634>
    f62c:	mov	r1, #0
    f630:	mov	lr, #0
    f634:	beq	11140 <ReadUInt64Data+0x2488>
    f638:	bic	lr, r6, #1
    f63c:	mov	r2, #1
    f640:	str	sl, [sp, #32]
    f644:	mov	sl, r7
    f648:	str	r9, [sp, #28]
    f64c:	str	r6, [sp, #8]
    f650:	subs	r0, lr, #2
    f654:	add	r0, r2, r0, lsr #1
    f658:	and	ip, r0, #1
    f65c:	beq	110f8 <ReadUInt64Data+0x2440>
    f660:	sub	r7, r0, ip
    f664:	mov	r2, #0
    f668:	add	r8, sp, #204	; 0xcc
    f66c:	mov	r9, #32
    f670:	add	r3, sp, #208	; 0xd0
    f674:	mov	r0, sl
    f678:	ldr	r6, [r4]
    f67c:	subs	r7, r7, #2
    f680:	add	r2, r2, #4
    f684:	str	r6, [sp, #204]	; 0xcc
    f688:	add	r6, r0, #16
    f68c:	vld1.32	{d16[0]}, [r8 :32]
    f690:	vmovl.u16	q8, d16
    f694:	vmovl.u32	q8, d16
    f698:	vst1.64	{d16-d17}, [r0], r9
    f69c:	ldr	r5, [r4, #4]
    f6a0:	add	r4, r4, #8
    f6a4:	str	r5, [sp, #208]	; 0xd0
    f6a8:	vld1.32	{d16[0]}, [r3 :32]
    f6ac:	vmovl.u16	q8, d16
    f6b0:	vmovl.u32	q8, d16
    f6b4:	vst1.64	{d16-d17}, [r6]
    f6b8:	bne	f678 <ReadUInt64Data+0x9c0>
    f6bc:	b	110fc <ReadUInt64Data+0x2444>
    f6c0:	cmp	r6, #256	; 0x100
    f6c4:	bgt	10440 <ReadUInt64Data+0x1788>
    f6c8:	ldr	r3, [r4]
    f6cc:	add	r4, sp, #296	; 0x128
    f6d0:	mov	r1, sl
    f6d4:	mov	r2, r6
    f6d8:	mov	r0, r4
    f6dc:	bl	18b8 <fread@plt>
    f6e0:	mov	r9, r0
    f6e4:	cmp	r6, #1
    f6e8:	blt	112ec <ReadUInt64Data+0x2634>
    f6ec:	mov	lr, #0
    f6f0:	beq	11238 <ReadUInt64Data+0x2580>
    f6f4:	bic	lr, r6, #1
    f6f8:	mov	r2, #1
    f6fc:	str	sl, [sp, #32]
    f700:	mov	sl, r7
    f704:	str	r6, [sp, #8]
    f708:	str	r9, [sp, #28]
    f70c:	subs	r1, lr, #2
    f710:	add	r1, r2, r1, lsr #1
    f714:	and	ip, r1, #1
    f718:	beq	111e8 <ReadUInt64Data+0x2530>
    f71c:	sub	r3, r1, ip
    f720:	mov	r1, #0
    f724:	add	r8, sp, #48	; 0x30
    f728:	mov	r9, #32
    f72c:	add	r5, sp, #56	; 0x38
    f730:	mov	r2, sl
    f734:	ldm	r4, {r0, r7}
    f738:	str	r7, [sp, #52]	; 0x34
    f73c:	subs	r3, r3, #2
    f740:	add	r1, r1, #4
    f744:	str	r0, [sp, #48]	; 0x30
    f748:	add	r0, r2, #16
    f74c:	vld1.32	{d16}, [r8 :64]
    f750:	vmovl.s32	q8, d16
    f754:	vst1.64	{d16-d17}, [r2], r9
    f758:	ldr	r7, [r4, #8]
    f75c:	ldr	r6, [r4, #12]
    f760:	add	r4, r4, #16
    f764:	str	r6, [sp, #60]	; 0x3c
    f768:	str	r7, [sp, #56]	; 0x38
    f76c:	vld1.32	{d16}, [r5 :64]
    f770:	vmovl.s32	q8, d16
    f774:	vst1.64	{d16-d17}, [r0]
    f778:	bne	f734 <ReadUInt64Data+0xa7c>
    f77c:	b	111ec <ReadUInt64Data+0x2534>
    f780:	cmp	r6, #256	; 0x100
    f784:	bgt	10618 <ReadUInt64Data+0x1960>
    f788:	ldr	r3, [r4]
    f78c:	add	r4, sp, #296	; 0x128
    f790:	mov	r1, sl
    f794:	mov	r2, r6
    f798:	mov	r0, r4
    f79c:	bl	18b8 <fread@plt>
    f7a0:	mov	r9, r0
    f7a4:	cmp	r6, #1
    f7a8:	blt	112ec <ReadUInt64Data+0x2634>
    f7ac:	mov	r1, #0
    f7b0:	mov	lr, #0
    f7b4:	beq	111bc <ReadUInt64Data+0x2504>
    f7b8:	bic	lr, r6, #1
    f7bc:	mov	r2, #1
    f7c0:	str	r7, [sp, #4]
    f7c4:	str	r9, [sp, #28]
    f7c8:	str	r6, [sp, #8]
    f7cc:	str	sl, [sp, #32]
    f7d0:	subs	r0, lr, #2
    f7d4:	add	r0, r2, r0, lsr #1
    f7d8:	and	ip, r0, #1
    f7dc:	beq	1116c <ReadUInt64Data+0x24b4>
    f7e0:	sub	r7, r0, ip
    f7e4:	ldr	r0, [sp, #4]
    f7e8:	mov	r2, #0
    f7ec:	add	r8, sp, #112	; 0x70
    f7f0:	mov	r9, #32
    f7f4:	add	sl, sp, #120	; 0x78
    f7f8:	ldr	r6, [r4]
    f7fc:	ldr	r5, [r4, #4]
    f800:	subs	r7, r7, #2
    f804:	add	r2, r2, #4
    f808:	str	r5, [sp, #116]	; 0x74
    f80c:	str	r6, [sp, #112]	; 0x70
    f810:	add	r5, r0, #16
    f814:	vld1.32	{d16}, [r8 :64]
    f818:	vmovl.u32	q8, d16
    f81c:	vst1.64	{d16-d17}, [r0], r9
    f820:	ldr	r6, [r4, #8]
    f824:	ldr	r3, [r4, #12]
    f828:	add	r4, r4, #16
    f82c:	str	r3, [sp, #124]	; 0x7c
    f830:	str	r6, [sp, #120]	; 0x78
    f834:	vld1.32	{d16}, [sl :64]
    f838:	vmovl.u32	q8, d16
    f83c:	vst1.64	{d16-d17}, [r5]
    f840:	bne	f7f8 <ReadUInt64Data+0xb40>
    f844:	b	11170 <ReadUInt64Data+0x24b8>
    f848:	cmp	r6, #256	; 0x100
    f84c:	bgt	107fc <ReadUInt64Data+0x1b44>
    f850:	ldr	r3, [r4]
    f854:	add	r8, sp, #296	; 0x128
    f858:	mov	r1, sl
    f85c:	mov	r2, r6
    f860:	mov	r0, r8
    f864:	bl	18b8 <fread@plt>
    f868:	mov	r9, r0
    f86c:	cmp	r6, #1
    f870:	blt	112ec <ReadUInt64Data+0x2634>
    f874:	str	sl, [sp, #32]
    f878:	str	r9, [sp, #28]
    f87c:	mov	sl, r7
    f880:	and	r9, r6, #1
    f884:	mov	r5, #0
    f888:	beq	f8c8 <ReadUInt64Data+0xc10>
    f88c:	sub	r7, r6, r9
    f890:	add	r4, r8, #4
    f894:	mov	r5, #0
    f898:	mov	r6, sl
    f89c:	ldr	r0, [r4, #-4]
    f8a0:	bl	71848 <__aeabi_f2ulz>
    f8a4:	strd	r0, [r6]
    f8a8:	ldr	r0, [r4]
    f8ac:	bl	71848 <__aeabi_f2ulz>
    f8b0:	add	r5, r5, #2
    f8b4:	strd	r0, [r6, #8]
    f8b8:	add	r6, r6, #16
    f8bc:	add	r4, r4, #8
    f8c0:	cmp	r7, r5
    f8c4:	bne	f89c <ReadUInt64Data+0xbe4>
    f8c8:	cmp	r9, #0
    f8cc:	beq	10fd4 <ReadUInt64Data+0x231c>
    f8d0:	ldr	r0, [r8, r5, lsl #2]
    f8d4:	bl	71848 <__aeabi_f2ulz>
    f8d8:	str	r0, [sl, r5, lsl #3]!
    f8dc:	str	r1, [sl, #4]
    f8e0:	b	10fd4 <ReadUInt64Data+0x231c>
    f8e4:	cmp	r6, #256	; 0x100
    f8e8:	bgt	10980 <ReadUInt64Data+0x1cc8>
    f8ec:	ldr	r3, [r4]
    f8f0:	add	r8, sp, #296	; 0x128
    f8f4:	mov	r1, sl
    f8f8:	mov	r2, r6
    f8fc:	mov	r0, r8
    f900:	bl	18b8 <fread@plt>
    f904:	mov	r9, r0
    f908:	cmp	r6, #1
    f90c:	blt	112ec <ReadUInt64Data+0x2634>
    f910:	str	sl, [sp, #32]
    f914:	str	r9, [sp, #28]
    f918:	mov	sl, r7
    f91c:	and	r9, r6, #1
    f920:	mov	r5, #0
    f924:	beq	f96c <ReadUInt64Data+0xcb4>
    f928:	sub	r7, r6, r9
    f92c:	add	r4, r8, #8
    f930:	mov	r5, #0
    f934:	mov	r6, sl
    f938:	vldr	d16, [r4, #-8]
    f93c:	vmov	r0, r1, d16
    f940:	bl	71888 <__aeabi_d2ulz>
    f944:	strd	r0, [r6]
    f948:	vldr	d16, [r4]
    f94c:	vmov	r0, r1, d16
    f950:	bl	71888 <__aeabi_d2ulz>
    f954:	add	r5, r5, #2
    f958:	strd	r0, [r6, #8]
    f95c:	add	r6, r6, #16
    f960:	add	r4, r4, #16
    f964:	cmp	r7, r5
    f968:	bne	f938 <ReadUInt64Data+0xc80>
    f96c:	cmp	r9, #0
    f970:	beq	f98c <ReadUInt64Data+0xcd4>
    f974:	add	r0, r8, r5, lsl #3
    f978:	vldr	d16, [r0]
    f97c:	vmov	r0, r1, d16
    f980:	bl	71888 <__aeabi_d2ulz>
    f984:	str	r0, [sl, r5, lsl #3]!
    f988:	str	r1, [sl, #4]
    f98c:	ldr	r9, [sp, #28]
    f990:	ldr	sl, [sp, #32]
    f994:	mul	r0, r9, sl
    f998:	sub	sp, fp, #28
    f99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f9a0:	cmp	r6, #256	; 0x100
    f9a4:	bgt	10b18 <ReadUInt64Data+0x1e60>
    f9a8:	ldr	r3, [r4]
    f9ac:	add	r0, sp, #296	; 0x128
    f9b0:	mov	r1, sl
    f9b4:	mov	r2, r6
    f9b8:	bl	18b8 <fread@plt>
    f9bc:	mov	r9, r0
    f9c0:	cmp	r6, #1
    f9c4:	blt	10bf8 <ReadUInt64Data+0x1f40>
    f9c8:	lsl	r2, r6, #3
    f9cc:	add	r1, sp, #296	; 0x128
    f9d0:	mov	r0, r7
    f9d4:	bl	181c <memcpy@plt>
    f9d8:	cmp	r5, #13
    f9dc:	beq	10c00 <ReadUInt64Data+0x1f48>
    f9e0:	b	112ec <ReadUInt64Data+0x2634>
    f9e4:	sub	r0, r6, #256	; 0x100
    f9e8:	mov	r8, r7
    f9ec:	add	r1, r7, #2048	; 0x800
    f9f0:	mov	r9, #0
    f9f4:	str	sl, [sp, #32]
    f9f8:	str	r6, [sp, #8]
    f9fc:	str	r0, [sp, #28]
    fa00:	mov	r0, #0
    fa04:	mov	r5, r1
    fa08:	ldr	r3, [r4]
    fa0c:	ldr	r1, [sp, #32]
    fa10:	add	r4, sp, #296	; 0x128
    fa14:	mov	sl, r0
    fa18:	mov	r2, #256	; 0x100
    fa1c:	mov	r0, r4
    fa20:	bl	18b8 <fread@plt>
    fa24:	mov	r7, r0
    fa28:	mov	r6, #0
    fa2c:	mov	r0, r4
    fa30:	bl	1c20 <Mat_int16Swap>
    fa34:	mov	r1, r8
    fa38:	add	r4, r4, #2
    fa3c:	str	r0, [r1, r6]!
    fa40:	add	r6, r6, #8
    fa44:	asr	r0, r0, #31
    fa48:	cmp	r6, #2048	; 0x800
    fa4c:	str	r0, [r1, #4]
    fa50:	bne	fa2c <ReadUInt64Data+0xd74>
    fa54:	ldr	r2, [sp, #28]
    fa58:	ldr	r4, [sp, #36]	; 0x24
    fa5c:	add	r0, sl, #256	; 0x100
    fa60:	add	r9, r7, r9
    fa64:	add	r8, r8, #2048	; 0x800
    fa68:	add	r1, r5, #2048	; 0x800
    fa6c:	cmp	r0, r2
    fa70:	blt	fa04 <ReadUInt64Data+0xd4c>
    fa74:	ldr	r6, [sp, #8]
    fa78:	cmp	r0, r6
    fa7c:	bge	112e8 <ReadUInt64Data+0x2630>
    fa80:	ldr	r3, [r4]
    fa84:	ldr	r1, [sp, #32]
    fa88:	sub	r7, r6, r0
    fa8c:	add	r4, sp, #296	; 0x128
    fa90:	mov	r0, r4
    fa94:	mov	r2, r7
    fa98:	bl	18b8 <fread@plt>
    fa9c:	add	r9, r0, r9
    faa0:	cmp	r7, #1
    faa4:	blt	112e8 <ReadUInt64Data+0x2630>
    faa8:	sub	r0, r6, sl
    faac:	sub	r6, r0, #256	; 0x100
    fab0:	mov	r0, r4
    fab4:	bl	1c20 <Mat_int16Swap>
    fab8:	asr	r1, r0, #31
    fabc:	add	r4, r4, #2
    fac0:	subs	r6, r6, #1
    fac4:	strd	r0, [r5]
    fac8:	add	r5, r5, #8
    facc:	bne	fab0 <ReadUInt64Data+0xdf8>
    fad0:	b	112e8 <ReadUInt64Data+0x2630>
    fad4:	sub	r1, r6, #256	; 0x100
    fad8:	str	sl, [sp, #32]
    fadc:	str	r6, [sp, #8]
    fae0:	mov	sl, r7
    fae4:	add	r0, r7, #2048	; 0x800
    fae8:	mov	r6, #0
    faec:	mov	r9, #0
    faf0:	str	r1, [sp, #24]
    faf4:	mov	r1, #0
    faf8:	str	r1, [sp, #28]
    fafc:	ldr	r3, [r4]
    fb00:	ldr	r1, [sp, #32]
    fb04:	add	r4, sp, #296	; 0x128
    fb08:	mov	r5, r0
    fb0c:	mov	r2, #256	; 0x100
    fb10:	mov	r8, r9
    fb14:	mov	r0, r4
    fb18:	bl	18b8 <fread@plt>
    fb1c:	mov	r7, r0
    fb20:	mov	r9, #0
    fb24:	mov	r0, r4
    fb28:	bl	1c34 <Mat_uint16Swap>
    fb2c:	mov	r1, sl
    fb30:	add	r4, r4, #2
    fb34:	str	r0, [r1, r9]!
    fb38:	add	r9, r9, #8
    fb3c:	cmp	r9, #2048	; 0x800
    fb40:	str	r6, [r1, #4]
    fb44:	bne	fb24 <ReadUInt64Data+0xe6c>
    fb48:	mov	r9, r8
    fb4c:	add	r9, r7, r8
    fb50:	ldr	r7, [sp, #28]
    fb54:	ldr	r2, [sp, #24]
    fb58:	ldr	r4, [sp, #36]	; 0x24
    fb5c:	add	sl, sl, #2048	; 0x800
    fb60:	add	r0, r5, #2048	; 0x800
    fb64:	add	r1, r7, #256	; 0x100
    fb68:	cmp	r1, r2
    fb6c:	blt	faf8 <ReadUInt64Data+0xe40>
    fb70:	ldr	r6, [sp, #8]
    fb74:	cmp	r1, r6
    fb78:	bge	10d7c <ReadUInt64Data+0x20c4>
    fb7c:	sub	r8, r6, r1
    fb80:	ldr	r3, [r4]
    fb84:	ldr	r1, [sp, #32]
    fb88:	add	r4, sp, #296	; 0x128
    fb8c:	mov	r0, r4
    fb90:	mov	r2, r8
    fb94:	bl	18b8 <fread@plt>
    fb98:	add	r9, r0, r9
    fb9c:	cmp	r8, #1
    fba0:	blt	10d7c <ReadUInt64Data+0x20c4>
    fba4:	sub	r0, r6, r7
    fba8:	mov	r7, #0
    fbac:	sub	r6, r0, #256	; 0x100
    fbb0:	mov	r0, r4
    fbb4:	bl	1c34 <Mat_uint16Swap>
    fbb8:	stm	r5, {r0, r7}
    fbbc:	add	r5, r5, #8
    fbc0:	add	r4, r4, #2
    fbc4:	subs	r6, r6, #1
    fbc8:	bne	fbb0 <ReadUInt64Data+0xef8>
    fbcc:	b	10d7c <ReadUInt64Data+0x20c4>
    fbd0:	sub	r0, r6, #256	; 0x100
    fbd4:	mov	r8, r7
    fbd8:	add	r1, r7, #2048	; 0x800
    fbdc:	mov	r9, #0
    fbe0:	str	sl, [sp, #32]
    fbe4:	str	r6, [sp, #8]
    fbe8:	str	r0, [sp, #28]
    fbec:	mov	r0, #0
    fbf0:	mov	r5, r1
    fbf4:	ldr	r3, [r4]
    fbf8:	ldr	r1, [sp, #32]
    fbfc:	add	r4, sp, #296	; 0x128
    fc00:	mov	sl, r0
    fc04:	mov	r2, #256	; 0x100
    fc08:	mov	r0, r4
    fc0c:	bl	18b8 <fread@plt>
    fc10:	mov	r7, r0
    fc14:	mov	r6, #0
    fc18:	mov	r0, r4
    fc1c:	bl	1bf8 <Mat_int32Swap>
    fc20:	mov	r1, r8
    fc24:	add	r4, r4, #4
    fc28:	str	r0, [r1, r6]!
    fc2c:	add	r6, r6, #8
    fc30:	asr	r0, r0, #31
    fc34:	cmp	r6, #2048	; 0x800
    fc38:	str	r0, [r1, #4]
    fc3c:	bne	fc18 <ReadUInt64Data+0xf60>
    fc40:	ldr	r2, [sp, #28]
    fc44:	ldr	r4, [sp, #36]	; 0x24
    fc48:	add	r0, sl, #256	; 0x100
    fc4c:	add	r9, r7, r9
    fc50:	add	r8, r8, #2048	; 0x800
    fc54:	add	r1, r5, #2048	; 0x800
    fc58:	cmp	r0, r2
    fc5c:	blt	fbf0 <ReadUInt64Data+0xf38>
    fc60:	ldr	r6, [sp, #8]
    fc64:	cmp	r0, r6
    fc68:	bge	10d7c <ReadUInt64Data+0x20c4>
    fc6c:	ldr	r3, [r4]
    fc70:	ldr	r1, [sp, #32]
    fc74:	sub	r7, r6, r0
    fc78:	add	r4, sp, #296	; 0x128
    fc7c:	mov	r0, r4
    fc80:	mov	r2, r7
    fc84:	bl	18b8 <fread@plt>
    fc88:	add	r9, r0, r9
    fc8c:	cmp	r7, #1
    fc90:	blt	10d7c <ReadUInt64Data+0x20c4>
    fc94:	sub	r0, r6, sl
    fc98:	sub	r6, r0, #256	; 0x100
    fc9c:	mov	r0, r4
    fca0:	bl	1bf8 <Mat_int32Swap>
    fca4:	asr	r1, r0, #31
    fca8:	add	r4, r4, #4
    fcac:	subs	r6, r6, #1
    fcb0:	strd	r0, [r5]
    fcb4:	add	r5, r5, #8
    fcb8:	bne	fc9c <ReadUInt64Data+0xfe4>
    fcbc:	b	10d7c <ReadUInt64Data+0x20c4>
    fcc0:	sub	r1, r6, #256	; 0x100
    fcc4:	str	sl, [sp, #32]
    fcc8:	str	r6, [sp, #8]
    fccc:	mov	sl, r7
    fcd0:	add	r0, r7, #2048	; 0x800
    fcd4:	mov	r6, #0
    fcd8:	mov	r9, #0
    fcdc:	str	r1, [sp, #24]
    fce0:	mov	r1, #0
    fce4:	str	r1, [sp, #28]
    fce8:	ldr	r3, [r4]
    fcec:	ldr	r1, [sp, #32]
    fcf0:	add	r4, sp, #296	; 0x128
    fcf4:	mov	r5, r0
    fcf8:	mov	r2, #256	; 0x100
    fcfc:	mov	r8, r9
    fd00:	mov	r0, r4
    fd04:	bl	18b8 <fread@plt>
    fd08:	mov	r7, r0
    fd0c:	mov	r9, #0
    fd10:	mov	r0, r4
    fd14:	bl	1c0c <Mat_uint32Swap>
    fd18:	mov	r1, sl
    fd1c:	add	r4, r4, #4
    fd20:	str	r0, [r1, r9]!
    fd24:	add	r9, r9, #8
    fd28:	cmp	r9, #2048	; 0x800
    fd2c:	str	r6, [r1, #4]
    fd30:	bne	fd10 <ReadUInt64Data+0x1058>
    fd34:	mov	r9, r8
    fd38:	add	r9, r7, r8
    fd3c:	ldr	r7, [sp, #28]
    fd40:	ldr	r2, [sp, #24]
    fd44:	ldr	r4, [sp, #36]	; 0x24
    fd48:	add	sl, sl, #2048	; 0x800
    fd4c:	add	r0, r5, #2048	; 0x800
    fd50:	add	r1, r7, #256	; 0x100
    fd54:	cmp	r1, r2
    fd58:	blt	fce4 <ReadUInt64Data+0x102c>
    fd5c:	ldr	r6, [sp, #8]
    fd60:	cmp	r1, r6
    fd64:	bge	10d7c <ReadUInt64Data+0x20c4>
    fd68:	sub	r8, r6, r1
    fd6c:	ldr	r3, [r4]
    fd70:	ldr	r1, [sp, #32]
    fd74:	add	r4, sp, #296	; 0x128
    fd78:	mov	r0, r4
    fd7c:	mov	r2, r8
    fd80:	bl	18b8 <fread@plt>
    fd84:	add	r9, r0, r9
    fd88:	cmp	r8, #1
    fd8c:	blt	10d7c <ReadUInt64Data+0x20c4>
    fd90:	sub	r0, r6, r7
    fd94:	mov	r7, #0
    fd98:	sub	r6, r0, #256	; 0x100
    fd9c:	mov	r0, r4
    fda0:	bl	1c0c <Mat_uint32Swap>
    fda4:	stm	r5, {r0, r7}
    fda8:	add	r5, r5, #8
    fdac:	add	r4, r4, #4
    fdb0:	subs	r6, r6, #1
    fdb4:	bne	fd9c <ReadUInt64Data+0x10e4>
    fdb8:	b	10d7c <ReadUInt64Data+0x20c4>
    fdbc:	sub	r0, r6, #256	; 0x100
    fdc0:	mov	r8, r7
    fdc4:	add	r1, r7, #2048	; 0x800
    fdc8:	mov	r9, #0
    fdcc:	str	sl, [sp, #32]
    fdd0:	str	r6, [sp, #8]
    fdd4:	str	r0, [sp, #28]
    fdd8:	mov	r0, #0
    fddc:	mov	r5, r1
    fde0:	ldr	r3, [r4]
    fde4:	ldr	r1, [sp, #32]
    fde8:	add	r4, sp, #296	; 0x128
    fdec:	mov	sl, r0
    fdf0:	mov	r2, #256	; 0x100
    fdf4:	mov	r0, r4
    fdf8:	bl	18b8 <fread@plt>
    fdfc:	mov	r7, r0
    fe00:	mov	r6, #0
    fe04:	mov	r0, r4
    fe08:	bl	1c4c <Mat_floatSwap>
    fe0c:	vmov	r0, s0
    fe10:	bl	71848 <__aeabi_f2ulz>
    fe14:	mov	r2, r8
    fe18:	add	r4, r4, #4
    fe1c:	str	r0, [r2, r6]!
    fe20:	add	r6, r6, #8
    fe24:	cmp	r6, #2048	; 0x800
    fe28:	str	r1, [r2, #4]
    fe2c:	bne	fe04 <ReadUInt64Data+0x114c>
    fe30:	ldr	r2, [sp, #28]
    fe34:	ldr	r4, [sp, #36]	; 0x24
    fe38:	add	r0, sl, #256	; 0x100
    fe3c:	add	r9, r7, r9
    fe40:	add	r8, r8, #2048	; 0x800
    fe44:	add	r1, r5, #2048	; 0x800
    fe48:	cmp	r0, r2
    fe4c:	blt	fddc <ReadUInt64Data+0x1124>
    fe50:	ldr	r7, [sp, #8]
    fe54:	cmp	r0, r7
    fe58:	bge	10d7c <ReadUInt64Data+0x20c4>
    fe5c:	ldr	r3, [r4]
    fe60:	ldr	r1, [sp, #32]
    fe64:	sub	r6, r7, r0
    fe68:	add	r4, sp, #296	; 0x128
    fe6c:	mov	r0, r4
    fe70:	mov	r2, r6
    fe74:	bl	18b8 <fread@plt>
    fe78:	add	r9, r0, r9
    fe7c:	cmp	r6, #1
    fe80:	blt	10d7c <ReadUInt64Data+0x20c4>
    fe84:	sub	r0, r7, sl
    fe88:	sub	r6, r0, #256	; 0x100
    fe8c:	mov	r0, r4
    fe90:	bl	1c4c <Mat_floatSwap>
    fe94:	vmov	r0, s0
    fe98:	bl	71848 <__aeabi_f2ulz>
    fe9c:	strd	r0, [r5]
    fea0:	add	r5, r5, #8
    fea4:	add	r4, r4, #4
    fea8:	subs	r6, r6, #1
    feac:	bne	fe8c <ReadUInt64Data+0x11d4>
    feb0:	b	10d7c <ReadUInt64Data+0x20c4>
    feb4:	sub	r0, r6, #256	; 0x100
    feb8:	mov	r9, r7
    febc:	add	r1, r7, #2048	; 0x800
    fec0:	add	r4, sp, #296	; 0x128
    fec4:	mov	r5, #0
    fec8:	str	sl, [sp, #32]
    fecc:	str	r6, [sp, #8]
    fed0:	str	r0, [sp, #28]
    fed4:	mov	r0, #0
    fed8:	mov	r8, r0
    fedc:	ldr	r0, [sp, #36]	; 0x24
    fee0:	mov	sl, r1
    fee4:	ldr	r1, [sp, #32]
    fee8:	mov	r2, #256	; 0x100
    feec:	ldr	r3, [r0]
    fef0:	mov	r0, r4
    fef4:	bl	18b8 <fread@plt>
    fef8:	mov	r7, r0
    fefc:	mov	r6, #0
    ff00:	add	r0, r4, r6
    ff04:	bl	1c90 <Mat_doubleSwap>
    ff08:	vmov	r0, r1, d0
    ff0c:	bl	71888 <__aeabi_d2ulz>
    ff10:	mov	r2, r9
    ff14:	str	r0, [r2, r6]!
    ff18:	add	r6, r6, #8
    ff1c:	cmp	r6, #2048	; 0x800
    ff20:	str	r1, [r2, #4]
    ff24:	bne	ff00 <ReadUInt64Data+0x1248>
    ff28:	ldr	r2, [sp, #28]
    ff2c:	add	r0, r8, #256	; 0x100
    ff30:	add	r5, r7, r5
    ff34:	add	r9, r9, #2048	; 0x800
    ff38:	add	r1, sl, #2048	; 0x800
    ff3c:	cmp	r0, r2
    ff40:	blt	fed8 <ReadUInt64Data+0x1220>
    ff44:	ldr	r7, [sp, #8]
    ff48:	cmp	r0, r7
    ff4c:	bge	10bd4 <ReadUInt64Data+0x1f1c>
    ff50:	sub	r6, r7, r0
    ff54:	ldr	r0, [sp, #36]	; 0x24
    ff58:	ldr	r1, [sp, #32]
    ff5c:	add	r4, sp, #296	; 0x128
    ff60:	mov	r2, r6
    ff64:	ldr	r3, [r0]
    ff68:	mov	r0, r4
    ff6c:	bl	18b8 <fread@plt>
    ff70:	mov	r9, r5
    ff74:	add	r9, r0, r5
    ff78:	cmp	r6, #1
    ff7c:	blt	10d7c <ReadUInt64Data+0x20c4>
    ff80:	sub	r0, r7, r8
    ff84:	sub	r6, r0, #256	; 0x100
    ff88:	mov	r0, r4
    ff8c:	bl	1c90 <Mat_doubleSwap>
    ff90:	vmov	r0, r1, d0
    ff94:	bl	71888 <__aeabi_d2ulz>
    ff98:	strd	r0, [sl]
    ff9c:	add	sl, sl, #8
    ffa0:	add	r4, r4, #8
    ffa4:	subs	r6, r6, #1
    ffa8:	bne	ff88 <ReadUInt64Data+0x12d0>
    ffac:	b	10d7c <ReadUInt64Data+0x20c4>
    ffb0:	sub	r0, r6, #256	; 0x100
    ffb4:	str	r6, [sp, #8]
    ffb8:	add	r1, r7, #2048	; 0x800
    ffbc:	add	r4, sp, #296	; 0x128
    ffc0:	mov	r6, r7
    ffc4:	mov	r9, #0
    ffc8:	str	r5, [sp, #24]
    ffcc:	str	sl, [sp, #32]
    ffd0:	str	r7, [sp, #4]
    ffd4:	str	r0, [sp, #28]
    ffd8:	mov	r0, #0
    ffdc:	mov	sl, r0
    ffe0:	ldr	r0, [sp, #36]	; 0x24
    ffe4:	mov	r5, r1
    ffe8:	ldr	r1, [sp, #32]
    ffec:	mov	r2, #256	; 0x100
    fff0:	mov	r8, r9
    fff4:	ldr	r3, [r0]
    fff8:	mov	r0, r4
    fffc:	bl	18b8 <fread@plt>
   10000:	mov	r7, r0
   10004:	mov	r9, #0
   10008:	add	r0, r4, r9
   1000c:	bl	1b84 <Mat_int64Swap>
   10010:	mov	r2, r6
   10014:	str	r0, [r2, r9]!
   10018:	add	r9, r9, #8
   1001c:	cmp	r9, #2048	; 0x800
   10020:	str	r1, [r2, #4]
   10024:	bne	10008 <ReadUInt64Data+0x1350>
   10028:	ldr	r2, [sp, #28]
   1002c:	add	r0, sl, #256	; 0x100
   10030:	mov	r9, r8
   10034:	add	r9, r7, r8
   10038:	add	r6, r6, #2048	; 0x800
   1003c:	add	r1, r5, #2048	; 0x800
   10040:	cmp	r0, r2
   10044:	blt	ffdc <ReadUInt64Data+0x1324>
   10048:	ldr	r6, [sp, #8]
   1004c:	cmp	r0, r6
   10050:	bge	100b8 <ReadUInt64Data+0x1400>
   10054:	sub	r7, r6, r0
   10058:	ldr	r0, [sp, #36]	; 0x24
   1005c:	ldr	r1, [sp, #32]
   10060:	add	r4, sp, #296	; 0x128
   10064:	mov	r2, r7
   10068:	ldr	r3, [r0]
   1006c:	mov	r0, r4
   10070:	bl	18b8 <fread@plt>
   10074:	add	r9, r0, r9
   10078:	cmp	r7, #1
   1007c:	blt	100b8 <ReadUInt64Data+0x1400>
   10080:	sub	r0, r6, sl
   10084:	sub	r6, r0, #256	; 0x100
   10088:	mov	r0, r4
   1008c:	bl	1b84 <Mat_int64Swap>
   10090:	strd	r0, [r5]
   10094:	add	r5, r5, #8
   10098:	add	r4, r4, #8
   1009c:	subs	r6, r6, #1
   100a0:	bne	10088 <ReadUInt64Data+0x13d0>
   100a4:	ldr	sl, [sp, #32]
   100a8:	ldr	r7, [sp, #4]
   100ac:	ldr	r6, [sp, #8]
   100b0:	ldr	r4, [sp, #36]	; 0x24
   100b4:	b	10bf4 <ReadUInt64Data+0x1f3c>
   100b8:	ldr	sl, [sp, #32]
   100bc:	ldr	r7, [sp, #4]
   100c0:	ldr	r4, [sp, #36]	; 0x24
   100c4:	b	10bf4 <ReadUInt64Data+0x1f3c>
   100c8:	sub	r1, r6, #256	; 0x100
   100cc:	str	sl, [sp, #32]
   100d0:	str	r6, [sp, #8]
   100d4:	mov	sl, r7
   100d8:	add	r0, r7, #2048	; 0x800
   100dc:	mov	r5, #0
   100e0:	add	r7, sp, #296	; 0x128
   100e4:	add	r6, sp, #192	; 0xc0
   100e8:	mov	r4, #32
   100ec:	add	r8, sp, #196	; 0xc4
   100f0:	mov	r9, #0
   100f4:	str	r1, [sp, #16]
   100f8:	mov	r1, #256	; 0x100
   100fc:	str	sl, [sp, #4]
   10100:	add	r2, sp, #20
   10104:	stm	r2, {r0, r1, r5}
   10108:	ldr	r0, [sp, #36]	; 0x24
   1010c:	ldr	r1, [sp, #32]
   10110:	mov	r2, #256	; 0x100
   10114:	ldr	r3, [r0]
   10118:	mov	r0, r7
   1011c:	bl	18b8 <fread@plt>
   10120:	mov	r1, sl
   10124:	mov	r2, #0
   10128:	ldr	r3, [r7, r2]
   1012c:	add	r5, r7, r2
   10130:	add	r2, r2, #8
   10134:	cmp	r2, #512	; 0x200
   10138:	str	r3, [sp, #192]	; 0xc0
   1013c:	add	r3, r1, #16
   10140:	vld1.32	{d16[0]}, [r6 :32]
   10144:	vmovl.s16	q8, d16
   10148:	vmovl.s32	q8, d16
   1014c:	vst1.64	{d16-d17}, [r1], r4
   10150:	ldr	r5, [r5, #4]
   10154:	str	r5, [sp, #196]	; 0xc4
   10158:	vld1.32	{d16[0]}, [r8 :32]
   1015c:	vmovl.s16	q8, d16
   10160:	vmovl.s32	q8, d16
   10164:	vst1.64	{d16-d17}, [r3]
   10168:	bne	10128 <ReadUInt64Data+0x1470>
   1016c:	ldr	r2, [sp, #28]
   10170:	ldr	r1, [sp, #24]
   10174:	add	r9, r0, r9
   10178:	ldr	r0, [sp, #20]
   1017c:	add	sl, sl, #2048	; 0x800
   10180:	add	r5, r2, #256	; 0x100
   10184:	ldr	r2, [sp, #16]
   10188:	add	r0, r0, #2048	; 0x800
   1018c:	add	r1, r1, #256	; 0x100
   10190:	cmp	r5, r2
   10194:	blt	10100 <ReadUInt64Data+0x1448>
   10198:	ldr	r4, [sp, #8]
   1019c:	cmp	r5, r4
   101a0:	bge	112e8 <ReadUInt64Data+0x2630>
   101a4:	ldr	r0, [sp, #36]	; 0x24
   101a8:	ldr	sl, [sp, #32]
   101ac:	sub	r6, r4, r5
   101b0:	add	r7, sp, #296	; 0x128
   101b4:	mov	r2, r6
   101b8:	ldr	r3, [r0]
   101bc:	mov	r0, r7
   101c0:	mov	r1, sl
   101c4:	bl	18b8 <fread@plt>
   101c8:	add	r9, r0, r9
   101cc:	cmp	r6, #1
   101d0:	blt	112ec <ReadUInt64Data+0x2634>
   101d4:	ldr	sl, [sp, #4]
   101d8:	mov	lr, #0
   101dc:	beq	112ac <ReadUInt64Data+0x25f4>
   101e0:	bic	lr, r6, #1
   101e4:	mov	r1, #1
   101e8:	str	r6, [sp, #36]	; 0x24
   101ec:	subs	r2, lr, #2
   101f0:	add	r2, r1, r2, lsr #1
   101f4:	and	r0, r2, #1
   101f8:	str	r0, [sp, #16]
   101fc:	beq	11264 <ReadUInt64Data+0x25ac>
   10200:	ldr	r0, [sp, #28]
   10204:	ldr	ip, [sp, #20]
   10208:	add	r8, sp, #184	; 0xb8
   1020c:	sub	r2, r4, r0
   10210:	mov	r4, #32
   10214:	sub	r2, r2, #256	; 0x100
   10218:	bic	r2, r2, #1
   1021c:	sub	r2, r2, #2
   10220:	add	r1, r1, r2, lsr #1
   10224:	mvn	r3, r2, lsr #1
   10228:	mov	r2, #0
   1022c:	and	r1, r1, #1
   10230:	add	r3, r3, r1
   10234:	add	r1, sp, #188	; 0xbc
   10238:	ldr	r0, [r7]
   1023c:	adds	r3, r3, #2
   10240:	add	r2, r2, #4
   10244:	str	r0, [sp, #184]	; 0xb8
   10248:	add	r0, ip, #16
   1024c:	vld1.32	{d16[0]}, [r8 :32]
   10250:	vmovl.s16	q8, d16
   10254:	vmovl.s32	q8, d16
   10258:	vst1.64	{d16-d17}, [ip], r4
   1025c:	ldr	r6, [r7, #4]
   10260:	add	r7, r7, #8
   10264:	str	r6, [sp, #188]	; 0xbc
   10268:	vld1.32	{d16[0]}, [r1 :32]
   1026c:	vmovl.s16	q8, d16
   10270:	vmovl.s32	q8, d16
   10274:	vst1.64	{d16-d17}, [r0]
   10278:	bne	10238 <ReadUInt64Data+0x1580>
   1027c:	b	11268 <ReadUInt64Data+0x25b0>
   10280:	sub	r1, r6, #256	; 0x100
   10284:	str	sl, [sp, #32]
   10288:	str	r6, [sp, #8]
   1028c:	mov	sl, r7
   10290:	add	r0, r7, #2048	; 0x800
   10294:	mov	r5, #0
   10298:	add	r7, sp, #296	; 0x128
   1029c:	add	r6, sp, #224	; 0xe0
   102a0:	mov	r4, #32
   102a4:	add	r8, sp, #228	; 0xe4
   102a8:	mov	r9, #0
   102ac:	str	r1, [sp, #16]
   102b0:	mov	r1, #256	; 0x100
   102b4:	str	sl, [sp, #4]
   102b8:	add	r2, sp, #20
   102bc:	stm	r2, {r0, r1, r5}
   102c0:	ldr	r0, [sp, #36]	; 0x24
   102c4:	ldr	r1, [sp, #32]
   102c8:	mov	r2, #256	; 0x100
   102cc:	ldr	r3, [r0]
   102d0:	mov	r0, r7
   102d4:	bl	18b8 <fread@plt>
   102d8:	mov	r1, sl
   102dc:	mov	r2, #0
   102e0:	ldr	r3, [r7, r2]
   102e4:	add	r5, r7, r2
   102e8:	add	r2, r2, #8
   102ec:	cmp	r2, #512	; 0x200
   102f0:	str	r3, [sp, #224]	; 0xe0
   102f4:	add	r3, r1, #16
   102f8:	vld1.32	{d16[0]}, [r6 :32]
   102fc:	vmovl.u16	q8, d16
   10300:	vmovl.u32	q8, d16
   10304:	vst1.64	{d16-d17}, [r1], r4
   10308:	ldr	r5, [r5, #4]
   1030c:	str	r5, [sp, #228]	; 0xe4
   10310:	vld1.32	{d16[0]}, [r8 :32]
   10314:	vmovl.u16	q8, d16
   10318:	vmovl.u32	q8, d16
   1031c:	vst1.64	{d16-d17}, [r3]
   10320:	bne	102e0 <ReadUInt64Data+0x1628>
   10324:	ldr	r2, [sp, #28]
   10328:	ldr	r1, [sp, #24]
   1032c:	add	r9, r0, r9
   10330:	ldr	r0, [sp, #20]
   10334:	add	sl, sl, #2048	; 0x800
   10338:	add	r5, r2, #256	; 0x100
   1033c:	ldr	r2, [sp, #16]
   10340:	add	r0, r0, #2048	; 0x800
   10344:	add	r1, r1, #256	; 0x100
   10348:	cmp	r5, r2
   1034c:	blt	102b8 <ReadUInt64Data+0x1600>
   10350:	ldr	r0, [sp, #8]
   10354:	cmp	r5, r0
   10358:	bge	10d7c <ReadUInt64Data+0x20c4>
   1035c:	sub	r4, r0, r5
   10360:	ldr	r0, [sp, #36]	; 0x24
   10364:	ldr	sl, [sp, #32]
   10368:	add	r7, sp, #296	; 0x128
   1036c:	mov	r2, r4
   10370:	ldr	r3, [r0]
   10374:	mov	r0, r7
   10378:	mov	r1, sl
   1037c:	bl	18b8 <fread@plt>
   10380:	add	r9, r0, r9
   10384:	cmp	r4, #1
   10388:	blt	112ec <ReadUInt64Data+0x2634>
   1038c:	ldr	r6, [sp, #4]
   10390:	mov	r1, #0
   10394:	mov	lr, #0
   10398:	beq	11344 <ReadUInt64Data+0x268c>
   1039c:	bic	lr, r4, #1
   103a0:	mov	r0, #1
   103a4:	str	r4, [sp, #36]	; 0x24
   103a8:	subs	r2, lr, #2
   103ac:	add	r2, r0, r2, lsr #1
   103b0:	and	r2, r2, #1
   103b4:	str	r2, [sp, #16]
   103b8:	beq	112f8 <ReadUInt64Data+0x2640>
   103bc:	ldr	r2, [sp, #8]
   103c0:	ldr	r3, [sp, #28]
   103c4:	ldr	ip, [sp, #20]
   103c8:	add	r8, sp, #216	; 0xd8
   103cc:	mov	sl, #32
   103d0:	sub	r2, r2, r3
   103d4:	sub	r2, r2, #256	; 0x100
   103d8:	bic	r2, r2, #1
   103dc:	sub	r2, r2, #2
   103e0:	add	r0, r0, r2, lsr #1
   103e4:	mvn	r3, r2, lsr #1
   103e8:	and	r0, r0, #1
   103ec:	add	r6, r3, r0
   103f0:	mov	r3, #0
   103f4:	add	r0, sp, #220	; 0xdc
   103f8:	ldr	r4, [r7]
   103fc:	adds	r6, r6, #2
   10400:	add	r3, r3, #4
   10404:	str	r4, [sp, #216]	; 0xd8
   10408:	add	r4, ip, #16
   1040c:	vld1.32	{d16[0]}, [r8 :32]
   10410:	vmovl.u16	q8, d16
   10414:	vmovl.u32	q8, d16
   10418:	vst1.64	{d16-d17}, [ip], sl
   1041c:	ldr	r2, [r7, #4]
   10420:	add	r7, r7, #8
   10424:	str	r2, [sp, #220]	; 0xdc
   10428:	vld1.32	{d16[0]}, [r0 :32]
   1042c:	vmovl.u16	q8, d16
   10430:	vmovl.u32	q8, d16
   10434:	vst1.64	{d16-d17}, [r4]
   10438:	bne	103f8 <ReadUInt64Data+0x1740>
   1043c:	b	112fc <ReadUInt64Data+0x2644>
   10440:	sub	r1, r6, #256	; 0x100
   10444:	str	sl, [sp, #32]
   10448:	mov	r8, r7
   1044c:	add	r0, r7, #2048	; 0x800
   10450:	mov	r2, #0
   10454:	mov	r5, #0
   10458:	add	r7, sp, #296	; 0x128
   1045c:	add	r9, sp, #88	; 0x58
   10460:	mov	r4, #32
   10464:	add	sl, sp, #96	; 0x60
   10468:	str	r6, [sp, #8]
   1046c:	str	r1, [sp, #12]
   10470:	mov	r1, #256	; 0x100
   10474:	str	r8, [sp, #4]
   10478:	str	r2, [sp, #28]
   1047c:	str	r0, [sp, #16]
   10480:	ldr	r0, [sp, #36]	; 0x24
   10484:	str	r1, [sp, #24]
   10488:	ldr	r1, [sp, #32]
   1048c:	mov	r2, #256	; 0x100
   10490:	str	r5, [sp, #20]
   10494:	ldr	r3, [r0]
   10498:	mov	r0, r7
   1049c:	bl	18b8 <fread@plt>
   104a0:	mov	r1, r8
   104a4:	mov	r2, #0
   104a8:	ldr	r3, [r7, r2]
   104ac:	str	r3, [sp, #88]	; 0x58
   104b0:	add	r3, r7, r2
   104b4:	add	r2, r2, #16
   104b8:	ldr	r5, [r3, #4]
   104bc:	cmp	r2, #1024	; 0x400
   104c0:	str	r5, [sp, #92]	; 0x5c
   104c4:	add	r5, r1, #16
   104c8:	vld1.32	{d16}, [r9 :64]
   104cc:	vmovl.s32	q8, d16
   104d0:	vst1.64	{d16-d17}, [r1], r4
   104d4:	ldr	r6, [r3, #8]
   104d8:	ldr	r3, [r3, #12]
   104dc:	str	r6, [sp, #96]	; 0x60
   104e0:	str	r3, [sp, #100]	; 0x64
   104e4:	vld1.32	{d16}, [sl :64]
   104e8:	vmovl.s32	q8, d16
   104ec:	vst1.64	{d16-d17}, [r5]
   104f0:	bne	104a8 <ReadUInt64Data+0x17f0>
   104f4:	ldr	r1, [sp, #28]
   104f8:	ldr	r6, [sp, #20]
   104fc:	ldr	r2, [sp, #12]
   10500:	add	r8, r8, #2048	; 0x800
   10504:	add	r1, r0, r1
   10508:	ldr	r0, [sp, #16]
   1050c:	add	r5, r6, #256	; 0x100
   10510:	str	r1, [sp, #28]
   10514:	ldr	r1, [sp, #24]
   10518:	cmp	r5, r2
   1051c:	add	r0, r0, #2048	; 0x800
   10520:	add	r1, r1, #256	; 0x100
   10524:	blt	1047c <ReadUInt64Data+0x17c4>
   10528:	ldr	r4, [sp, #8]
   1052c:	cmp	r5, r4
   10530:	bge	1096c <ReadUInt64Data+0x1cb4>
   10534:	ldr	r0, [sp, #36]	; 0x24
   10538:	ldr	sl, [sp, #32]
   1053c:	sub	r8, r4, r5
   10540:	add	r7, sp, #296	; 0x128
   10544:	mov	r2, r8
   10548:	ldr	r3, [r0]
   1054c:	mov	r0, r7
   10550:	mov	r1, sl
   10554:	bl	18b8 <fread@plt>
   10558:	ldr	r9, [sp, #28]
   1055c:	cmp	r8, #1
   10560:	add	r9, r0, r9
   10564:	blt	112ec <ReadUInt64Data+0x2634>
   10568:	ldr	r3, [sp, #4]
   1056c:	mov	lr, #0
   10570:	beq	113e8 <ReadUInt64Data+0x2730>
   10574:	bic	lr, r8, #1
   10578:	mov	r1, #1
   1057c:	mov	sl, r9
   10580:	str	r8, [sp, #36]	; 0x24
   10584:	subs	r2, lr, #2
   10588:	add	r2, r1, r2, lsr #1
   1058c:	and	r0, r2, #1
   10590:	str	r0, [sp, #28]
   10594:	beq	11388 <ReadUInt64Data+0x26d0>
   10598:	sub	r2, r4, r6
   1059c:	ldr	ip, [sp, #16]
   105a0:	add	r8, sp, #72	; 0x48
   105a4:	mov	r9, #32
   105a8:	sub	r2, r2, #256	; 0x100
   105ac:	bic	r2, r2, #1
   105b0:	sub	r2, r2, #2
   105b4:	add	r1, r1, r2, lsr #1
   105b8:	mvn	r3, r2, lsr #1
   105bc:	mov	r2, #0
   105c0:	and	r1, r1, #1
   105c4:	add	r3, r3, r1
   105c8:	add	r1, sp, #80	; 0x50
   105cc:	ldm	r7, {r0, r6}
   105d0:	str	r6, [sp, #76]	; 0x4c
   105d4:	adds	r3, r3, #2
   105d8:	add	r2, r2, #4
   105dc:	str	r0, [sp, #72]	; 0x48
   105e0:	add	r0, ip, #16
   105e4:	vld1.32	{d16}, [r8 :64]
   105e8:	vmovl.s32	q8, d16
   105ec:	vst1.64	{d16-d17}, [ip], r9
   105f0:	ldr	r6, [r7, #8]
   105f4:	ldr	r4, [r7, #12]
   105f8:	add	r7, r7, #16
   105fc:	str	r4, [sp, #84]	; 0x54
   10600:	str	r6, [sp, #80]	; 0x50
   10604:	vld1.32	{d16}, [r1 :64]
   10608:	vmovl.s32	q8, d16
   1060c:	vst1.64	{d16-d17}, [r0]
   10610:	bne	105cc <ReadUInt64Data+0x1914>
   10614:	b	1138c <ReadUInt64Data+0x26d4>
   10618:	sub	r1, r6, #256	; 0x100
   1061c:	str	sl, [sp, #32]
   10620:	mov	r8, r7
   10624:	add	r0, r7, #2048	; 0x800
   10628:	mov	r2, #0
   1062c:	mov	r5, #0
   10630:	add	r7, sp, #296	; 0x128
   10634:	add	r9, sp, #152	; 0x98
   10638:	mov	r4, #32
   1063c:	add	sl, sp, #160	; 0xa0
   10640:	str	r6, [sp, #8]
   10644:	str	r1, [sp, #12]
   10648:	mov	r1, #256	; 0x100
   1064c:	str	r8, [sp, #4]
   10650:	str	r2, [sp, #28]
   10654:	add	r2, sp, #16
   10658:	stm	r2, {r0, r1, r5}
   1065c:	ldr	r0, [sp, #36]	; 0x24
   10660:	ldr	r1, [sp, #32]
   10664:	mov	r2, #256	; 0x100
   10668:	ldr	r3, [r0]
   1066c:	mov	r0, r7
   10670:	bl	18b8 <fread@plt>
   10674:	mov	r1, r8
   10678:	mov	r2, #0
   1067c:	ldr	r3, [r7, r2]
   10680:	str	r3, [sp, #152]	; 0x98
   10684:	add	r3, r7, r2
   10688:	add	r2, r2, #16
   1068c:	ldr	r5, [r3, #4]
   10690:	cmp	r2, #1024	; 0x400
   10694:	str	r5, [sp, #156]	; 0x9c
   10698:	add	r5, r1, #16
   1069c:	vld1.32	{d16}, [r9 :64]
   106a0:	vmovl.u32	q8, d16
   106a4:	vst1.64	{d16-d17}, [r1], r4
   106a8:	ldr	r6, [r3, #8]
   106ac:	ldr	r3, [r3, #12]
   106b0:	str	r6, [sp, #160]	; 0xa0
   106b4:	str	r3, [sp, #164]	; 0xa4
   106b8:	vld1.32	{d16}, [sl :64]
   106bc:	vmovl.u32	q8, d16
   106c0:	vst1.64	{d16-d17}, [r5]
   106c4:	bne	1067c <ReadUInt64Data+0x19c4>
   106c8:	ldr	r1, [sp, #28]
   106cc:	ldr	r2, [sp, #24]
   106d0:	add	r8, r8, #2048	; 0x800
   106d4:	add	r1, r0, r1
   106d8:	ldr	r0, [sp, #16]
   106dc:	add	r5, r2, #256	; 0x100
   106e0:	ldr	r2, [sp, #12]
   106e4:	str	r1, [sp, #28]
   106e8:	ldr	r1, [sp, #20]
   106ec:	add	r0, r0, #2048	; 0x800
   106f0:	cmp	r5, r2
   106f4:	add	r1, r1, #256	; 0x100
   106f8:	blt	10654 <ReadUInt64Data+0x199c>
   106fc:	ldr	r0, [sp, #8]
   10700:	cmp	r5, r0
   10704:	bge	1096c <ReadUInt64Data+0x1cb4>
   10708:	sub	r4, r0, r5
   1070c:	ldr	r0, [sp, #36]	; 0x24
   10710:	ldr	sl, [sp, #32]
   10714:	add	r7, sp, #296	; 0x128
   10718:	mov	r2, r4
   1071c:	ldr	r3, [r0]
   10720:	mov	r0, r7
   10724:	mov	r1, sl
   10728:	bl	18b8 <fread@plt>
   1072c:	ldr	r9, [sp, #28]
   10730:	cmp	r4, #1
   10734:	add	r9, r0, r9
   10738:	blt	112ec <ReadUInt64Data+0x2634>
   1073c:	ldr	r6, [sp, #4]
   10740:	mov	r1, #0
   10744:	mov	lr, #0
   10748:	beq	1147c <ReadUInt64Data+0x27c4>
   1074c:	bic	lr, r4, #1
   10750:	mov	r0, #1
   10754:	str	r4, [sp, #36]	; 0x24
   10758:	str	r9, [sp, #28]
   1075c:	subs	r2, lr, #2
   10760:	add	r2, r0, r2, lsr #1
   10764:	and	r2, r2, #1
   10768:	str	r2, [sp, #12]
   1076c:	beq	11424 <ReadUInt64Data+0x276c>
   10770:	ldr	r2, [sp, #8]
   10774:	ldr	r3, [sp, #24]
   10778:	ldr	ip, [sp, #16]
   1077c:	add	r8, sp, #136	; 0x88
   10780:	mov	r9, #32
   10784:	add	sl, sp, #144	; 0x90
   10788:	sub	r2, r2, r3
   1078c:	sub	r2, r2, #256	; 0x100
   10790:	bic	r2, r2, #1
   10794:	sub	r2, r2, #2
   10798:	add	r0, r0, r2, lsr #1
   1079c:	mvn	r3, r2, lsr #1
   107a0:	and	r0, r0, #1
   107a4:	add	r6, r3, r0
   107a8:	mov	r3, #0
   107ac:	ldr	r4, [r7]
   107b0:	ldr	r2, [r7, #4]
   107b4:	adds	r6, r6, #2
   107b8:	add	r3, r3, #4
   107bc:	str	r2, [sp, #140]	; 0x8c
   107c0:	str	r4, [sp, #136]	; 0x88
   107c4:	add	r2, ip, #16
   107c8:	vld1.32	{d16}, [r8 :64]
   107cc:	vmovl.u32	q8, d16
   107d0:	vst1.64	{d16-d17}, [ip], r9
   107d4:	ldr	r4, [r7, #8]
   107d8:	ldr	r0, [r7, #12]
   107dc:	add	r7, r7, #16
   107e0:	str	r0, [sp, #148]	; 0x94
   107e4:	str	r4, [sp, #144]	; 0x90
   107e8:	vld1.32	{d16}, [sl :64]
   107ec:	vmovl.u32	q8, d16
   107f0:	vst1.64	{d16-d17}, [r2]
   107f4:	bne	107ac <ReadUInt64Data+0x1af4>
   107f8:	b	11428 <ReadUInt64Data+0x2770>
   107fc:	add	r0, sp, #296	; 0x128
   10800:	sub	r1, r6, #256	; 0x100
   10804:	str	r6, [sp, #8]
   10808:	mov	r8, #0
   1080c:	mov	r6, r7
   10810:	mov	r9, #0
   10814:	str	sl, [sp, #32]
   10818:	str	r7, [sp, #4]
   1081c:	add	r0, r0, #4
   10820:	str	r1, [sp, #20]
   10824:	str	r0, [sp, #28]
   10828:	add	r0, r7, #2048	; 0x800
   1082c:	ldr	r3, [r4]
   10830:	ldr	r1, [sp, #32]
   10834:	mov	r7, r0
   10838:	add	r0, sp, #296	; 0x128
   1083c:	mov	r2, #256	; 0x100
   10840:	mov	sl, r9
   10844:	str	r8, [sp, #24]
   10848:	bl	18b8 <fread@plt>
   1084c:	ldr	r9, [sp, #28]
   10850:	mov	r4, r0
   10854:	mov	r5, #0
   10858:	ldr	r0, [r9, #-4]
   1085c:	bl	71848 <__aeabi_f2ulz>
   10860:	mov	r8, r6
   10864:	str	r0, [r8, r5]!
   10868:	str	r1, [r8, #4]
   1086c:	ldr	r0, [r9]
   10870:	bl	71848 <__aeabi_f2ulz>
   10874:	add	r5, r5, #16
   10878:	add	r9, r9, #8
   1087c:	strd	r0, [r8, #8]
   10880:	cmp	r5, #2048	; 0x800
   10884:	bne	10858 <ReadUInt64Data+0x1ba0>
   10888:	mov	r5, r7
   1088c:	add	r0, r7, #2048	; 0x800
   10890:	ldr	r7, [sp, #24]
   10894:	ldr	r1, [sp, #20]
   10898:	mov	r9, sl
   1089c:	add	r9, r4, sl
   108a0:	ldr	r4, [sp, #36]	; 0x24
   108a4:	add	r6, r6, #2048	; 0x800
   108a8:	add	r8, r7, #256	; 0x100
   108ac:	cmp	r8, r1
   108b0:	blt	1082c <ReadUInt64Data+0x1b74>
   108b4:	ldr	r6, [sp, #8]
   108b8:	cmp	r8, r6
   108bc:	bge	10d7c <ReadUInt64Data+0x20c4>
   108c0:	mov	r0, r4
   108c4:	ldr	r1, [sp, #32]
   108c8:	sub	r4, r6, r8
   108cc:	ldr	r3, [r0]
   108d0:	add	r0, sp, #296	; 0x128
   108d4:	mov	r2, r4
   108d8:	bl	18b8 <fread@plt>
   108dc:	add	r9, r0, r9
   108e0:	cmp	r4, #1
   108e4:	blt	10d7c <ReadUInt64Data+0x20c4>
   108e8:	mvn	r0, #256	; 0x100
   108ec:	str	r9, [sp, #28]
   108f0:	and	r9, r4, #1
   108f4:	mov	r4, #0
   108f8:	sub	r0, r0, r7
   108fc:	cmn	r0, r6
   10900:	beq	10948 <ReadUInt64Data+0x1c90>
   10904:	sub	r0, r9, r6
   10908:	mov	r4, #0
   1090c:	add	sl, r0, r8
   10910:	add	r0, sp, #296	; 0x128
   10914:	add	r6, r0, #4
   10918:	ldr	r0, [r6, #-4]
   1091c:	bl	71848 <__aeabi_f2ulz>
   10920:	strd	r0, [r5]
   10924:	ldr	r0, [r6]
   10928:	bl	71848 <__aeabi_f2ulz>
   1092c:	sub	r4, r4, #2
   10930:	strd	r0, [r5, #8]
   10934:	add	r5, r5, #16
   10938:	add	r6, r6, #8
   1093c:	cmp	sl, r4
   10940:	bne	10918 <ReadUInt64Data+0x1c60>
   10944:	rsb	r4, r4, #0
   10948:	ldr	r6, [sp, #4]
   1094c:	cmp	r9, #0
   10950:	beq	1096c <ReadUInt64Data+0x1cb4>
   10954:	add	r0, sp, #296	; 0x128
   10958:	ldr	r0, [r0, r4, lsl #2]
   1095c:	bl	71848 <__aeabi_f2ulz>
   10960:	add	r2, r4, r8
   10964:	str	r0, [r6, r2, lsl #3]!
   10968:	str	r1, [r6, #4]
   1096c:	ldr	sl, [sp, #32]
   10970:	ldr	r9, [sp, #28]
   10974:	mul	r0, r9, sl
   10978:	sub	sp, fp, #28
   1097c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10980:	str	sl, [sp, #32]
   10984:	sub	r1, r6, #256	; 0x100
   10988:	mov	sl, r7
   1098c:	add	r0, r7, #2048	; 0x800
   10990:	mov	r4, #0
   10994:	add	r7, sp, #296	; 0x128
   10998:	mov	r9, #0
   1099c:	str	r6, [sp, #8]
   109a0:	str	r1, [sp, #20]
   109a4:	str	sl, [sp, #4]
   109a8:	str	r0, [sp, #28]
   109ac:	ldr	r0, [sp, #36]	; 0x24
   109b0:	ldr	r1, [sp, #32]
   109b4:	mov	r2, #256	; 0x100
   109b8:	mov	r8, r9
   109bc:	str	r4, [sp, #24]
   109c0:	ldr	r3, [r0]
   109c4:	mov	r0, r7
   109c8:	bl	18b8 <fread@plt>
   109cc:	mov	r4, r0
   109d0:	mov	r5, #0
   109d4:	add	r9, r7, r5
   109d8:	vldr	d16, [r9]
   109dc:	vmov	r0, r1, d16
   109e0:	bl	71888 <__aeabi_d2ulz>
   109e4:	mov	r6, sl
   109e8:	str	r0, [r6, r5]!
   109ec:	str	r1, [r6, #4]
   109f0:	vldr	d16, [r9, #8]
   109f4:	vmov	r0, r1, d16
   109f8:	bl	71888 <__aeabi_d2ulz>
   109fc:	add	r5, r5, #16
   10a00:	strd	r0, [r6, #8]
   10a04:	cmp	r5, #2048	; 0x800
   10a08:	bne	109d4 <ReadUInt64Data+0x1d1c>
   10a0c:	ldr	r5, [sp, #24]
   10a10:	ldr	r0, [sp, #28]
   10a14:	ldr	r1, [sp, #20]
   10a18:	mov	r9, r8
   10a1c:	add	r9, r4, r8
   10a20:	add	sl, sl, #2048	; 0x800
   10a24:	add	r4, r5, #256	; 0x100
   10a28:	add	r0, r0, #2048	; 0x800
   10a2c:	cmp	r4, r1
   10a30:	blt	109a8 <ReadUInt64Data+0x1cf0>
   10a34:	ldr	r6, [sp, #8]
   10a38:	cmp	r4, r6
   10a3c:	bge	10d7c <ReadUInt64Data+0x20c4>
   10a40:	ldr	r0, [sp, #36]	; 0x24
   10a44:	ldr	sl, [sp, #32]
   10a48:	sub	r7, r6, r4
   10a4c:	add	r8, sp, #296	; 0x128
   10a50:	mov	r2, r7
   10a54:	ldr	r3, [r0]
   10a58:	mov	r0, r8
   10a5c:	mov	r1, sl
   10a60:	bl	18b8 <fread@plt>
   10a64:	add	r9, r0, r9
   10a68:	cmp	r7, #1
   10a6c:	blt	112ec <ReadUInt64Data+0x2634>
   10a70:	mvn	r0, #256	; 0x100
   10a74:	mov	sl, r9
   10a78:	and	r9, r7, #1
   10a7c:	sub	r0, r0, r5
   10a80:	mov	r5, #0
   10a84:	cmn	r0, r6
   10a88:	beq	10adc <ReadUInt64Data+0x1e24>
   10a8c:	add	r5, r8, #8
   10a90:	ldr	r8, [sp, #28]
   10a94:	sub	r0, r9, r6
   10a98:	mov	r7, #0
   10a9c:	add	r6, r0, r4
   10aa0:	vldr	d16, [r5, #-8]
   10aa4:	vmov	r0, r1, d16
   10aa8:	bl	71888 <__aeabi_d2ulz>
   10aac:	strd	r0, [r8]
   10ab0:	vldr	d16, [r5]
   10ab4:	vmov	r0, r1, d16
   10ab8:	bl	71888 <__aeabi_d2ulz>
   10abc:	sub	r7, r7, #2
   10ac0:	strd	r0, [r8, #8]
   10ac4:	add	r8, r8, #16
   10ac8:	add	r5, r5, #16
   10acc:	cmp	r6, r7
   10ad0:	bne	10aa0 <ReadUInt64Data+0x1de8>
   10ad4:	rsb	r5, r7, #0
   10ad8:	add	r8, sp, #296	; 0x128
   10adc:	cmp	r9, #0
   10ae0:	beq	10b04 <ReadUInt64Data+0x1e4c>
   10ae4:	add	r0, r8, r5, lsl #3
   10ae8:	vldr	d16, [r0]
   10aec:	vmov	r0, r1, d16
   10af0:	bl	71888 <__aeabi_d2ulz>
   10af4:	ldr	r3, [sp, #4]
   10af8:	add	r2, r5, r4
   10afc:	str	r0, [r3, r2, lsl #3]!
   10b00:	str	r1, [r3, #4]
   10b04:	mov	r9, sl
   10b08:	ldr	sl, [sp, #32]
   10b0c:	mul	r0, r9, sl
   10b10:	sub	sp, fp, #28
   10b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b18:	str	r5, [sp, #24]
   10b1c:	sub	r0, r6, #256	; 0x100
   10b20:	mov	r8, sl
   10b24:	lsl	r4, r6, #3
   10b28:	mov	r5, #0
   10b2c:	mov	r9, #0
   10b30:	mov	sl, r7
   10b34:	str	r6, [sp, #8]
   10b38:	str	r0, [sp, #28]
   10b3c:	ldr	r0, [sp, #36]	; 0x24
   10b40:	add	r6, sp, #296	; 0x128
   10b44:	mov	r1, r8
   10b48:	mov	r2, #256	; 0x100
   10b4c:	ldr	r3, [r0]
   10b50:	mov	r0, r6
   10b54:	bl	18b8 <fread@plt>
   10b58:	mov	r7, r0
   10b5c:	add	r0, sl, r5, lsl #3
   10b60:	mov	r1, r6
   10b64:	mov	r2, #2048	; 0x800
   10b68:	bl	181c <memcpy@plt>
   10b6c:	ldr	r0, [sp, #28]
   10b70:	add	r5, r5, #256	; 0x100
   10b74:	add	r9, r7, r9
   10b78:	sub	r4, r4, #2048	; 0x800
   10b7c:	cmp	r5, r0
   10b80:	blt	10b3c <ReadUInt64Data+0x1e84>
   10b84:	ldr	r6, [sp, #8]
   10b88:	cmp	r5, r6
   10b8c:	bge	10be8 <ReadUInt64Data+0x1f30>
   10b90:	ldr	r0, [sp, #36]	; 0x24
   10b94:	sub	r7, r6, r5
   10b98:	mov	r1, r8
   10b9c:	mov	r2, r7
   10ba0:	ldr	r3, [r0]
   10ba4:	add	r0, sp, #296	; 0x128
   10ba8:	bl	18b8 <fread@plt>
   10bac:	add	r9, r0, r9
   10bb0:	cmp	r7, #1
   10bb4:	blt	10be8 <ReadUInt64Data+0x1f30>
   10bb8:	add	r0, sl, r5, lsl #3
   10bbc:	add	r1, sp, #296	; 0x128
   10bc0:	mov	r2, r4
   10bc4:	mov	r7, sl
   10bc8:	bl	181c <memcpy@plt>
   10bcc:	ldr	r4, [sp, #36]	; 0x24
   10bd0:	b	10bf0 <ReadUInt64Data+0x1f38>
   10bd4:	ldr	sl, [sp, #32]
   10bd8:	mov	r9, r5
   10bdc:	mul	r0, r9, sl
   10be0:	sub	sp, fp, #28
   10be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10be8:	ldr	r4, [sp, #36]	; 0x24
   10bec:	mov	r7, sl
   10bf0:	mov	sl, r8
   10bf4:	ldr	r5, [sp, #24]
   10bf8:	cmp	r5, #13
   10bfc:	bne	112ec <ReadUInt64Data+0x2634>
   10c00:	ldr	r0, [r4, #20]
   10c04:	cmp	r0, #0
   10c08:	beq	10c58 <ReadUInt64Data+0x1fa0>
   10c0c:	cmp	r6, #256	; 0x100
   10c10:	bgt	10c9c <ReadUInt64Data+0x1fe4>
   10c14:	ldr	r3, [r4]
   10c18:	add	r4, sp, #296	; 0x128
   10c1c:	mov	r1, sl
   10c20:	mov	r2, r6
   10c24:	mov	r0, r4
   10c28:	bl	18b8 <fread@plt>
   10c2c:	add	r9, r0, r9
   10c30:	cmp	r6, #1
   10c34:	blt	112ec <ReadUInt64Data+0x2634>
   10c38:	mov	r0, r4
   10c3c:	bl	1bd4 <Mat_uint64Swap>
   10c40:	strd	r0, [r7]
   10c44:	add	r4, r4, #8
   10c48:	add	r7, r7, #8
   10c4c:	subs	r6, r6, #1
   10c50:	bne	10c38 <ReadUInt64Data+0x1f80>
   10c54:	b	112ec <ReadUInt64Data+0x2634>
   10c58:	cmp	r6, #256	; 0x100
   10c5c:	bgt	10d8c <ReadUInt64Data+0x20d4>
   10c60:	ldr	r3, [r4]
   10c64:	add	r0, sp, #296	; 0x128
   10c68:	mov	r1, sl
   10c6c:	mov	r2, r6
   10c70:	bl	18b8 <fread@plt>
   10c74:	add	r9, r0, r9
   10c78:	cmp	r6, #1
   10c7c:	blt	112ec <ReadUInt64Data+0x2634>
   10c80:	lsl	r2, r6, #3
   10c84:	add	r1, sp, #296	; 0x128
   10c88:	mov	r0, r7
   10c8c:	bl	181c <memcpy@plt>
   10c90:	mul	r0, r9, sl
   10c94:	sub	sp, fp, #28
   10c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c9c:	sub	r0, r6, #256	; 0x100
   10ca0:	mov	r8, r7
   10ca4:	add	r1, r7, #2048	; 0x800
   10ca8:	add	r4, sp, #296	; 0x128
   10cac:	str	sl, [sp, #32]
   10cb0:	str	r6, [sp, #8]
   10cb4:	str	r0, [sp, #28]
   10cb8:	mov	r0, #0
   10cbc:	mov	sl, r0
   10cc0:	ldr	r0, [sp, #36]	; 0x24
   10cc4:	mov	r5, r1
   10cc8:	ldr	r1, [sp, #32]
   10ccc:	mov	r2, #256	; 0x100
   10cd0:	ldr	r3, [r0]
   10cd4:	mov	r0, r4
   10cd8:	bl	18b8 <fread@plt>
   10cdc:	mov	r7, r0
   10ce0:	mov	r6, #0
   10ce4:	add	r0, r4, r6
   10ce8:	bl	1bd4 <Mat_uint64Swap>
   10cec:	mov	r2, r8
   10cf0:	str	r0, [r2, r6]!
   10cf4:	add	r6, r6, #8
   10cf8:	cmp	r6, #2048	; 0x800
   10cfc:	str	r1, [r2, #4]
   10d00:	bne	10ce4 <ReadUInt64Data+0x202c>
   10d04:	ldr	r2, [sp, #28]
   10d08:	add	r0, sl, #256	; 0x100
   10d0c:	add	r9, r7, r9
   10d10:	add	r8, r8, #2048	; 0x800
   10d14:	add	r1, r5, #2048	; 0x800
   10d18:	cmp	r0, r2
   10d1c:	blt	10cbc <ReadUInt64Data+0x2004>
   10d20:	ldr	r6, [sp, #8]
   10d24:	cmp	r0, r6
   10d28:	bge	10d7c <ReadUInt64Data+0x20c4>
   10d2c:	sub	r7, r6, r0
   10d30:	ldr	r0, [sp, #36]	; 0x24
   10d34:	ldr	r1, [sp, #32]
   10d38:	add	r4, sp, #296	; 0x128
   10d3c:	mov	r2, r7
   10d40:	ldr	r3, [r0]
   10d44:	mov	r0, r4
   10d48:	bl	18b8 <fread@plt>
   10d4c:	add	r9, r0, r9
   10d50:	cmp	r7, #1
   10d54:	blt	10d7c <ReadUInt64Data+0x20c4>
   10d58:	sub	r0, r6, sl
   10d5c:	sub	r6, r0, #256	; 0x100
   10d60:	mov	r0, r4
   10d64:	bl	1bd4 <Mat_uint64Swap>
   10d68:	strd	r0, [r5]
   10d6c:	add	r5, r5, #8
   10d70:	add	r4, r4, #8
   10d74:	subs	r6, r6, #1
   10d78:	bne	10d60 <ReadUInt64Data+0x20a8>
   10d7c:	ldr	sl, [sp, #32]
   10d80:	mul	r0, r9, sl
   10d84:	sub	sp, fp, #28
   10d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d8c:	sub	r0, r6, #256	; 0x100
   10d90:	lsl	r4, r6, #3
   10d94:	str	r6, [sp, #8]
   10d98:	mov	r5, #0
   10d9c:	add	r8, sp, #296	; 0x128
   10da0:	mov	r6, r7
   10da4:	str	r0, [sp, #28]
   10da8:	ldr	r0, [sp, #36]	; 0x24
   10dac:	mov	r1, sl
   10db0:	mov	r2, #256	; 0x100
   10db4:	ldr	r3, [r0]
   10db8:	mov	r0, r8
   10dbc:	bl	18b8 <fread@plt>
   10dc0:	mov	r7, r0
   10dc4:	add	r0, r6, r5, lsl #3
   10dc8:	mov	r1, r8
   10dcc:	mov	r2, #2048	; 0x800
   10dd0:	bl	181c <memcpy@plt>
   10dd4:	ldr	r0, [sp, #28]
   10dd8:	add	r5, r5, #256	; 0x100
   10ddc:	add	r9, r7, r9
   10de0:	sub	r4, r4, #2048	; 0x800
   10de4:	cmp	r5, r0
   10de8:	blt	10da8 <ReadUInt64Data+0x20f0>
   10dec:	mov	r1, sl
   10df0:	ldr	sl, [sp, #8]
   10df4:	cmp	r5, sl
   10df8:	bge	10e50 <ReadUInt64Data+0x2198>
   10dfc:	ldr	r0, [sp, #36]	; 0x24
   10e00:	sub	r7, sl, r5
   10e04:	mov	sl, r1
   10e08:	mov	r2, r7
   10e0c:	ldr	r3, [r0]
   10e10:	add	r0, sp, #296	; 0x128
   10e14:	bl	18b8 <fread@plt>
   10e18:	add	r9, r0, r9
   10e1c:	cmp	r7, #1
   10e20:	blt	112ec <ReadUInt64Data+0x2634>
   10e24:	add	r0, r6, r5, lsl #3
   10e28:	add	r1, sp, #296	; 0x128
   10e2c:	mov	r2, r4
   10e30:	bl	181c <memcpy@plt>
   10e34:	mul	r0, r9, sl
   10e38:	sub	sp, fp, #28
   10e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e40:	ldr	r4, [sp, #36]	; 0x24
   10e44:	cmp	r5, #13
   10e48:	beq	10c00 <ReadUInt64Data+0x1f48>
   10e4c:	b	112ec <ReadUInt64Data+0x2634>
   10e50:	mov	sl, r1
   10e54:	mul	r0, r9, sl
   10e58:	sub	sp, fp, #28
   10e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e60:	mov	r1, #0
   10e64:	ldr	r9, [sp, #28]
   10e68:	cmp	ip, #0
   10e6c:	mov	r7, sl
   10e70:	beq	10e98 <ReadUInt64Data+0x21e0>
   10e74:	add	r0, r4, r1
   10e78:	ldrh	r0, [r0]
   10e7c:	strh	r0, [r8]
   10e80:	add	r0, r7, r1, lsl #3
   10e84:	vld1.16	{d16[0]}, [r8 :16]
   10e88:	vmovl.s8	q8, d16
   10e8c:	vmovl.s16	q8, d16
   10e90:	vmovl.s32	q8, d16
   10e94:	vst1.64	{d16-d17}, [r0]
   10e98:	ldr	r6, [sp, #8]
   10e9c:	ldr	sl, [sp, #32]
   10ea0:	cmp	lr, r6
   10ea4:	beq	112ec <ReadUInt64Data+0x2634>
   10ea8:	add	r1, r7, lr, lsl #3
   10eac:	add	r0, r4, lr
   10eb0:	sub	r2, r6, lr
   10eb4:	ldrsb	r4, [r0], #1
   10eb8:	subs	r2, r2, #1
   10ebc:	asr	r5, r4, #31
   10ec0:	strd	r4, [r1]
   10ec4:	add	r1, r1, #8
   10ec8:	bne	10eb4 <ReadUInt64Data+0x21fc>
   10ecc:	b	112ec <ReadUInt64Data+0x2634>
   10ed0:	mov	r2, #0
   10ed4:	ldr	r0, [sp, #36]	; 0x24
   10ed8:	ldr	sl, [sp, #32]
   10edc:	ldr	r7, [sp, #4]
   10ee0:	cmp	r0, #0
   10ee4:	beq	10f10 <ReadUInt64Data+0x2258>
   10ee8:	add	r0, r9, r2
   10eec:	ldrh	r0, [r0]
   10ef0:	strh	r0, [r8, #32]
   10ef4:	add	r0, sp, #264	; 0x108
   10ef8:	vld1.16	{d16[0]}, [r0 :16]
   10efc:	add	r0, r7, r2, lsl #3
   10f00:	vmovl.u8	q8, d16
   10f04:	vmovl.u16	q8, d16
   10f08:	vmovl.u32	q8, d16
   10f0c:	vst1.64	{d16-d17}, [r0]
   10f10:	ldr	r6, [sp, #8]
   10f14:	cmp	lr, r6
   10f18:	beq	10f40 <ReadUInt64Data+0x2288>
   10f1c:	add	r2, r7, lr, lsl #3
   10f20:	add	r0, r9, lr
   10f24:	sub	r3, r6, lr
   10f28:	ldrb	r4, [r0], #1
   10f2c:	subs	r3, r3, #1
   10f30:	str	r4, [r2]
   10f34:	str	r1, [r2, #4]
   10f38:	add	r2, r2, #8
   10f3c:	bne	10f28 <ReadUInt64Data+0x2270>
   10f40:	mov	r9, ip
   10f44:	mul	r0, r9, sl
   10f48:	sub	sp, fp, #28
   10f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f50:	mov	r2, #0
   10f54:	ldr	r0, [sp, #12]
   10f58:	cmp	r0, #0
   10f5c:	beq	10f8c <ReadUInt64Data+0x22d4>
   10f60:	add	r0, r9, r2
   10f64:	ldrh	r0, [r0]
   10f68:	strh	r0, [r8, #12]
   10f6c:	add	r0, sp, #244	; 0xf4
   10f70:	vld1.16	{d16[0]}, [r0 :16]
   10f74:	add	r0, r2, r4
   10f78:	add	r0, sl, r0, lsl #3
   10f7c:	vmovl.s8	q8, d16
   10f80:	vmovl.s16	q8, d16
   10f84:	vmovl.s32	q8, d16
   10f88:	vst1.64	{d16-d17}, [r0]
   10f8c:	ldr	r0, [sp, #36]	; 0x24
   10f90:	ldr	r5, [sp, #8]
   10f94:	cmp	r0, lr
   10f98:	beq	10fd4 <ReadUInt64Data+0x231c>
   10f9c:	ldr	r0, [sp, #20]
   10fa0:	add	r1, r9, lr
   10fa4:	add	r0, lr, r0
   10fa8:	add	r2, sl, r0, lsl #3
   10fac:	ldr	r0, [sp, #24]
   10fb0:	sub	r0, r5, r0
   10fb4:	sub	r0, r0, lr
   10fb8:	sub	r0, r0, #256	; 0x100
   10fbc:	ldrsb	r4, [r1], #1
   10fc0:	subs	r0, r0, #1
   10fc4:	asr	r5, r4, #31
   10fc8:	strd	r4, [r2]
   10fcc:	add	r2, r2, #8
   10fd0:	bne	10fbc <ReadUInt64Data+0x2304>
   10fd4:	ldr	r9, [sp, #28]
   10fd8:	ldr	sl, [sp, #32]
   10fdc:	mul	r0, r9, sl
   10fe0:	sub	sp, fp, #28
   10fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fe8:	mov	r3, #0
   10fec:	ldr	r0, [sp, #12]
   10ff0:	ldr	sl, [sp, #32]
   10ff4:	ldr	r7, [sp, #4]
   10ff8:	cmp	r0, #0
   10ffc:	beq	1102c <ReadUInt64Data+0x2374>
   11000:	add	r0, r9, r3
   11004:	ldrh	r0, [r0]
   11008:	strh	r0, [r8, #44]	; 0x2c
   1100c:	add	r0, sp, #276	; 0x114
   11010:	vld1.16	{d16[0]}, [r0 :16]
   11014:	add	r0, r3, r4
   11018:	add	r0, r7, r0, lsl #3
   1101c:	vmovl.u8	q8, d16
   11020:	vmovl.u16	q8, d16
   11024:	vmovl.u32	q8, d16
   11028:	vst1.64	{d16-d17}, [r0]
   1102c:	ldr	r0, [sp, #36]	; 0x24
   11030:	ldr	r5, [sp, #8]
   11034:	cmp	r0, lr
   11038:	beq	11074 <ReadUInt64Data+0x23bc>
   1103c:	ldr	r2, [sp, #20]
   11040:	ldr	r3, [sp, #24]
   11044:	add	r0, r9, lr
   11048:	add	r2, lr, r2
   1104c:	sub	r3, r5, r3
   11050:	sub	r3, r3, lr
   11054:	add	r2, r7, r2, lsl #3
   11058:	sub	r3, r3, #256	; 0x100
   1105c:	ldrb	r4, [r0], #1
   11060:	subs	r3, r3, #1
   11064:	str	r4, [r2]
   11068:	str	r1, [r2, #4]
   1106c:	add	r2, r2, #8
   11070:	bne	1105c <ReadUInt64Data+0x23a4>
   11074:	ldr	r9, [sp, #28]
   11078:	mul	r0, r9, sl
   1107c:	sub	sp, fp, #28
   11080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11084:	mov	sl, r7
   11088:	mov	r1, #0
   1108c:	cmp	ip, #0
   11090:	mov	r7, sl
   11094:	beq	110bc <ReadUInt64Data+0x2404>
   11098:	add	r0, sp, #296	; 0x128
   1109c:	ldr	r0, [r0, r1, lsl #1]
   110a0:	str	r0, [sp, #168]	; 0xa8
   110a4:	add	r0, sp, #168	; 0xa8
   110a8:	vld1.32	{d16[0]}, [r0 :32]
   110ac:	add	r0, r7, r1, lsl #3
   110b0:	vmovl.s16	q8, d16
   110b4:	vmovl.s32	q8, d16
   110b8:	vst1.64	{d16-d17}, [r0]
   110bc:	ldr	r6, [sp, #8]
   110c0:	ldr	sl, [sp, #32]
   110c4:	cmp	lr, r6
   110c8:	beq	112ec <ReadUInt64Data+0x2634>
   110cc:	add	r0, sp, #296	; 0x128
   110d0:	add	r2, r7, lr, lsl #3
   110d4:	add	r1, r0, lr, lsl #1
   110d8:	sub	r0, r6, lr
   110dc:	ldrsh	r4, [r1], #2
   110e0:	subs	r0, r0, #1
   110e4:	asr	r5, r4, #31
   110e8:	strd	r4, [r2]
   110ec:	add	r2, r2, #8
   110f0:	bne	110dc <ReadUInt64Data+0x2424>
   110f4:	b	112ec <ReadUInt64Data+0x2634>
   110f8:	mov	r2, #0
   110fc:	ldr	r9, [sp, #28]
   11100:	cmp	ip, #0
   11104:	mov	r7, sl
   11108:	beq	11130 <ReadUInt64Data+0x2478>
   1110c:	add	r0, sp, #296	; 0x128
   11110:	ldr	r0, [r0, r2, lsl #1]
   11114:	str	r0, [sp, #200]	; 0xc8
   11118:	add	r0, sp, #200	; 0xc8
   1111c:	vld1.32	{d16[0]}, [r0 :32]
   11120:	add	r0, r7, r2, lsl #3
   11124:	vmovl.u16	q8, d16
   11128:	vmovl.u32	q8, d16
   1112c:	vst1.64	{d16-d17}, [r0]
   11130:	ldr	r6, [sp, #8]
   11134:	ldr	sl, [sp, #32]
   11138:	cmp	lr, r6
   1113c:	beq	112ec <ReadUInt64Data+0x2634>
   11140:	add	r0, sp, #296	; 0x128
   11144:	add	r2, r7, lr, lsl #3
   11148:	sub	r3, r6, lr
   1114c:	add	r0, r0, lr, lsl #1
   11150:	ldrh	r4, [r0], #2
   11154:	subs	r3, r3, #1
   11158:	str	r4, [r2]
   1115c:	str	r1, [r2, #4]
   11160:	add	r2, r2, #8
   11164:	bne	11150 <ReadUInt64Data+0x2498>
   11168:	b	112ec <ReadUInt64Data+0x2634>
   1116c:	mov	r2, #0
   11170:	ldr	sl, [sp, #32]
   11174:	ldr	r9, [sp, #28]
   11178:	ldr	r7, [sp, #4]
   1117c:	cmp	ip, #0
   11180:	beq	111b0 <ReadUInt64Data+0x24f8>
   11184:	add	r0, sp, #296	; 0x128
   11188:	ldr	r3, [r0, r2, lsl #2]
   1118c:	add	r0, r0, r2, lsl #2
   11190:	str	r3, [sp, #104]	; 0x68
   11194:	ldr	r0, [r0, #4]
   11198:	str	r0, [sp, #108]	; 0x6c
   1119c:	add	r0, sp, #104	; 0x68
   111a0:	vld1.32	{d16}, [r0 :64]
   111a4:	add	r0, r7, r2, lsl #3
   111a8:	vmovl.u32	q8, d16
   111ac:	vst1.64	{d16-d17}, [r0]
   111b0:	ldr	r6, [sp, #8]
   111b4:	cmp	lr, r6
   111b8:	beq	112ec <ReadUInt64Data+0x2634>
   111bc:	add	r0, sp, #296	; 0x128
   111c0:	add	r2, r7, lr, lsl #3
   111c4:	sub	r3, r6, lr
   111c8:	add	r0, r0, lr, lsl #2
   111cc:	ldr	r4, [r0], #4
   111d0:	subs	r3, r3, #1
   111d4:	str	r4, [r2]
   111d8:	str	r1, [r2, #4]
   111dc:	add	r2, r2, #8
   111e0:	bne	111cc <ReadUInt64Data+0x2514>
   111e4:	b	112ec <ReadUInt64Data+0x2634>
   111e8:	mov	r1, #0
   111ec:	ldr	r9, [sp, #28]
   111f0:	cmp	ip, #0
   111f4:	mov	r7, sl
   111f8:	beq	11228 <ReadUInt64Data+0x2570>
   111fc:	add	r0, sp, #296	; 0x128
   11200:	ldr	r2, [r0, r1, lsl #2]
   11204:	add	r0, r0, r1, lsl #2
   11208:	str	r2, [sp, #40]	; 0x28
   1120c:	ldr	r0, [r0, #4]
   11210:	str	r0, [sp, #44]	; 0x2c
   11214:	add	r0, sp, #40	; 0x28
   11218:	vld1.32	{d16}, [r0 :64]
   1121c:	add	r0, r7, r1, lsl #3
   11220:	vmovl.s32	q8, d16
   11224:	vst1.64	{d16-d17}, [r0]
   11228:	ldr	r6, [sp, #8]
   1122c:	ldr	sl, [sp, #32]
   11230:	cmp	lr, r6
   11234:	beq	112ec <ReadUInt64Data+0x2634>
   11238:	add	r0, sp, #296	; 0x128
   1123c:	add	r2, r7, lr, lsl #3
   11240:	add	r1, r0, lr, lsl #2
   11244:	sub	r0, r6, lr
   11248:	ldr	r4, [r1], #4
   1124c:	subs	r0, r0, #1
   11250:	asr	r5, r4, #31
   11254:	strd	r4, [r2]
   11258:	add	r2, r2, #8
   1125c:	bne	11248 <ReadUInt64Data+0x2590>
   11260:	b	112ec <ReadUInt64Data+0x2634>
   11264:	mov	r2, #0
   11268:	ldr	r0, [sp, #16]
   1126c:	cmp	r0, #0
   11270:	beq	1129c <ReadUInt64Data+0x25e4>
   11274:	add	r0, sp, #296	; 0x128
   11278:	ldr	r0, [r0, r2, lsl #1]
   1127c:	str	r0, [sp, #180]	; 0xb4
   11280:	add	r0, sp, #180	; 0xb4
   11284:	vld1.32	{d16[0]}, [r0 :32]
   11288:	add	r0, r2, r5
   1128c:	add	r0, sl, r0, lsl #3
   11290:	vmovl.s16	q8, d16
   11294:	vmovl.s32	q8, d16
   11298:	vst1.64	{d16-d17}, [r0]
   1129c:	ldr	r0, [sp, #36]	; 0x24
   112a0:	ldr	r4, [sp, #8]
   112a4:	cmp	r0, lr
   112a8:	beq	112e8 <ReadUInt64Data+0x2630>
   112ac:	add	r0, sp, #296	; 0x128
   112b0:	add	r1, r0, lr, lsl #1
   112b4:	ldr	r0, [sp, #24]
   112b8:	add	r0, lr, r0
   112bc:	add	r2, sl, r0, lsl #3
   112c0:	ldr	r0, [sp, #28]
   112c4:	sub	r0, r4, r0
   112c8:	sub	r0, r0, lr
   112cc:	sub	r0, r0, #256	; 0x100
   112d0:	ldrsh	r4, [r1], #2
   112d4:	subs	r0, r0, #1
   112d8:	asr	r5, r4, #31
   112dc:	strd	r4, [r2]
   112e0:	add	r2, r2, #8
   112e4:	bne	112d0 <ReadUInt64Data+0x2618>
   112e8:	ldr	sl, [sp, #32]
   112ec:	mul	r0, r9, sl
   112f0:	sub	sp, fp, #28
   112f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112f8:	mov	r3, #0
   112fc:	ldr	r0, [sp, #16]
   11300:	ldr	sl, [sp, #32]
   11304:	ldr	r6, [sp, #4]
   11308:	cmp	r0, #0
   1130c:	beq	11338 <ReadUInt64Data+0x2680>
   11310:	add	r0, sp, #296	; 0x128
   11314:	ldr	r0, [r0, r3, lsl #1]
   11318:	str	r0, [sp, #212]	; 0xd4
   1131c:	add	r0, sp, #212	; 0xd4
   11320:	vld1.32	{d16[0]}, [r0 :32]
   11324:	add	r0, r3, r5
   11328:	add	r0, r6, r0, lsl #3
   1132c:	vmovl.u16	q8, d16
   11330:	vmovl.u32	q8, d16
   11334:	vst1.64	{d16-d17}, [r0]
   11338:	ldr	r0, [sp, #36]	; 0x24
   1133c:	cmp	r0, lr
   11340:	beq	112ec <ReadUInt64Data+0x2634>
   11344:	ldr	r2, [sp, #24]
   11348:	ldr	r3, [sp, #8]
   1134c:	ldr	r7, [sp, #28]
   11350:	add	r0, sp, #296	; 0x128
   11354:	add	r0, r0, lr, lsl #1
   11358:	add	r2, lr, r2
   1135c:	sub	r3, r3, r7
   11360:	sub	r3, r3, lr
   11364:	add	r2, r6, r2, lsl #3
   11368:	sub	r3, r3, #256	; 0x100
   1136c:	ldrh	r4, [r0], #2
   11370:	subs	r3, r3, #1
   11374:	str	r4, [r2]
   11378:	str	r1, [r2, #4]
   1137c:	add	r2, r2, #8
   11380:	bne	1136c <ReadUInt64Data+0x26b4>
   11384:	b	112ec <ReadUInt64Data+0x2634>
   11388:	mov	r2, #0
   1138c:	ldr	r0, [sp, #28]
   11390:	ldr	r3, [sp, #4]
   11394:	mov	r9, sl
   11398:	cmp	r0, #0
   1139c:	beq	113d0 <ReadUInt64Data+0x2718>
   113a0:	add	r0, sp, #296	; 0x128
   113a4:	ldr	r1, [r0, r2, lsl #2]
   113a8:	add	r0, r0, r2, lsl #2
   113ac:	str	r1, [sp, #64]	; 0x40
   113b0:	ldr	r0, [r0, #4]
   113b4:	str	r0, [sp, #68]	; 0x44
   113b8:	add	r0, sp, #64	; 0x40
   113bc:	vld1.32	{d16}, [r0 :64]
   113c0:	add	r0, r2, r5
   113c4:	add	r0, r3, r0, lsl #3
   113c8:	vmovl.s32	q8, d16
   113cc:	vst1.64	{d16-d17}, [r0]
   113d0:	ldr	r0, [sp, #36]	; 0x24
   113d4:	ldr	r4, [sp, #8]
   113d8:	ldr	sl, [sp, #32]
   113dc:	ldr	r6, [sp, #20]
   113e0:	cmp	r0, lr
   113e4:	beq	112ec <ReadUInt64Data+0x2634>
   113e8:	add	r0, sp, #296	; 0x128
   113ec:	add	r1, r0, lr, lsl #2
   113f0:	ldr	r0, [sp, #24]
   113f4:	add	r0, lr, r0
   113f8:	add	r2, r3, r0, lsl #3
   113fc:	sub	r0, r4, r6
   11400:	sub	r0, r0, lr
   11404:	sub	r0, r0, #256	; 0x100
   11408:	ldr	r4, [r1], #4
   1140c:	subs	r0, r0, #1
   11410:	asr	r5, r4, #31
   11414:	strd	r4, [r2]
   11418:	add	r2, r2, #8
   1141c:	bne	11408 <ReadUInt64Data+0x2750>
   11420:	b	112ec <ReadUInt64Data+0x2634>
   11424:	mov	r3, #0
   11428:	ldr	r0, [sp, #12]
   1142c:	ldr	sl, [sp, #32]
   11430:	ldr	r9, [sp, #28]
   11434:	ldr	r6, [sp, #4]
   11438:	cmp	r0, #0
   1143c:	beq	11470 <ReadUInt64Data+0x27b8>
   11440:	add	r0, sp, #296	; 0x128
   11444:	ldr	r2, [r0, r3, lsl #2]
   11448:	add	r0, r0, r3, lsl #2
   1144c:	str	r2, [sp, #128]	; 0x80
   11450:	ldr	r0, [r0, #4]
   11454:	str	r0, [sp, #132]	; 0x84
   11458:	add	r0, sp, #128	; 0x80
   1145c:	vld1.32	{d16}, [r0 :64]
   11460:	add	r0, r3, r5
   11464:	add	r0, r6, r0, lsl #3
   11468:	vmovl.u32	q8, d16
   1146c:	vst1.64	{d16-d17}, [r0]
   11470:	ldr	r0, [sp, #36]	; 0x24
   11474:	cmp	r0, lr
   11478:	beq	112ec <ReadUInt64Data+0x2634>
   1147c:	ldr	r2, [sp, #20]
   11480:	ldr	r3, [sp, #8]
   11484:	ldr	r7, [sp, #24]
   11488:	add	r0, sp, #296	; 0x128
   1148c:	add	r0, r0, lr, lsl #2
   11490:	add	r2, lr, r2
   11494:	sub	r3, r3, r7
   11498:	sub	r3, r3, lr
   1149c:	add	r2, r6, r2, lsl #3
   114a0:	sub	r3, r3, #256	; 0x100
   114a4:	ldr	r4, [r0], #4
   114a8:	subs	r3, r3, #1
   114ac:	str	r4, [r2]
   114b0:	str	r1, [r2, #4]
   114b4:	add	r2, r2, #8
   114b8:	bne	114a4 <ReadUInt64Data+0x27ec>
   114bc:	b	112ec <ReadUInt64Data+0x2634>

000114c0 <ReadCompressedUInt64Data>:
   114c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114c4:	add	fp, sp, #28
   114c8:	sub	sp, sp, #12
   114cc:	mov	r7, r0
   114d0:	mov	r0, #0
   114d4:	cmp	r1, #0
   114d8:	beq	114ec <ReadCompressedUInt64Data+0x2c>
   114dc:	cmp	r7, #0
   114e0:	movne	r5, r2
   114e4:	cmpne	r2, #0
   114e8:	bne	114f4 <ReadCompressedUInt64Data+0x34>
   114ec:	sub	sp, fp, #28
   114f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114f4:	ldr	sl, [fp, #8]
   114f8:	mov	r0, r3
   114fc:	mov	r4, r3
   11500:	mov	r6, r1
   11504:	bl	1924 <Mat_SizeOf@plt>
   11508:	mov	r9, r0
   1150c:	sub	r0, r4, #1
   11510:	cmp	r0, #12
   11514:	bhi	11a74 <ReadCompressedUInt64Data+0x5b4>
   11518:	add	r1, pc, #4
   1151c:	ldr	r0, [r1, r0, lsl #2]
   11520:	add	pc, r1, r0
   11524:	.word	0x00000034
   11528:	.word	0x00000074
   1152c:	.word	0x000000c0
   11530:	.word	0x00000110
   11534:	.word	0x00000160
   11538:	.word	0x000001b0
   1153c:	.word	0x00000200
   11540:	.word	0x00000550
   11544:	.word	0x00000254
   11548:	.word	0x00000550
   1154c:	.word	0x00000550
   11550:	.word	0x000002a8
   11554:	.word	0x000002f4
   11558:	cmp	sl, #1
   1155c:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   11560:	mov	r8, sp
   11564:	mov	r4, sl
   11568:	mov	r0, r7
   1156c:	mov	r1, r6
   11570:	mov	r2, r8
   11574:	mov	r3, r9
   11578:	bl	34ac <InflateData>
   1157c:	ldrsb	r0, [sp]
   11580:	subs	r4, r4, #1
   11584:	asr	r1, r0, #31
   11588:	strd	r0, [r5]
   1158c:	add	r5, r5, #8
   11590:	bne	11568 <ReadCompressedUInt64Data+0xa8>
   11594:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11598:	cmp	sl, #1
   1159c:	blt	115d4 <ReadCompressedUInt64Data+0x114>
   115a0:	ldr	r4, [fp, #8]
   115a4:	mov	r8, sp
   115a8:	mov	sl, #0
   115ac:	mov	r0, r7
   115b0:	mov	r1, r6
   115b4:	mov	r2, r8
   115b8:	mov	r3, r9
   115bc:	bl	34ac <InflateData>
   115c0:	ldrb	r0, [sp]
   115c4:	subs	r4, r4, #1
   115c8:	stm	r5, {r0, sl}
   115cc:	add	r5, r5, #8
   115d0:	bne	115ac <ReadCompressedUInt64Data+0xec>
   115d4:	ldr	sl, [fp, #8]
   115d8:	mul	r0, r9, sl
   115dc:	sub	sp, fp, #28
   115e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115e4:	ldr	r0, [r7, #20]
   115e8:	cmp	r0, #0
   115ec:	beq	11864 <ReadCompressedUInt64Data+0x3a4>
   115f0:	cmp	sl, #1
   115f4:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   115f8:	mov	r8, sp
   115fc:	mov	r4, sl
   11600:	mov	r0, r7
   11604:	mov	r1, r6
   11608:	mov	r2, r8
   1160c:	mov	r3, r9
   11610:	bl	34ac <InflateData>
   11614:	mov	r0, r8
   11618:	bl	1c20 <Mat_int16Swap>
   1161c:	asr	r1, r0, #31
   11620:	subs	r4, r4, #1
   11624:	strd	r0, [r5]
   11628:	add	r5, r5, #8
   1162c:	bne	11600 <ReadCompressedUInt64Data+0x140>
   11630:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11634:	ldr	r0, [r7, #20]
   11638:	cmp	r0, #0
   1163c:	beq	118a4 <ReadCompressedUInt64Data+0x3e4>
   11640:	cmp	sl, #1
   11644:	blt	118e0 <ReadCompressedUInt64Data+0x420>
   11648:	ldr	r4, [fp, #8]
   1164c:	mov	r8, sp
   11650:	mov	sl, #0
   11654:	mov	r0, r7
   11658:	mov	r1, r6
   1165c:	mov	r2, r8
   11660:	mov	r3, r9
   11664:	bl	34ac <InflateData>
   11668:	mov	r0, r8
   1166c:	bl	1c34 <Mat_uint16Swap>
   11670:	stm	r5, {r0, sl}
   11674:	add	r5, r5, #8
   11678:	subs	r4, r4, #1
   1167c:	bne	11654 <ReadCompressedUInt64Data+0x194>
   11680:	b	118e0 <ReadCompressedUInt64Data+0x420>
   11684:	ldr	r0, [r7, #20]
   11688:	cmp	r0, #0
   1168c:	beq	118f0 <ReadCompressedUInt64Data+0x430>
   11690:	cmp	sl, #1
   11694:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   11698:	mov	r8, sp
   1169c:	mov	r4, sl
   116a0:	mov	r0, r7
   116a4:	mov	r1, r6
   116a8:	mov	r2, r8
   116ac:	mov	r3, r9
   116b0:	bl	34ac <InflateData>
   116b4:	mov	r0, r8
   116b8:	bl	1bf8 <Mat_int32Swap>
   116bc:	asr	r1, r0, #31
   116c0:	subs	r4, r4, #1
   116c4:	strd	r0, [r5]
   116c8:	add	r5, r5, #8
   116cc:	bne	116a0 <ReadCompressedUInt64Data+0x1e0>
   116d0:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   116d4:	ldr	r0, [r7, #20]
   116d8:	cmp	r0, #0
   116dc:	beq	11930 <ReadCompressedUInt64Data+0x470>
   116e0:	cmp	sl, #1
   116e4:	blt	1196c <ReadCompressedUInt64Data+0x4ac>
   116e8:	ldr	sl, [fp, #8]
   116ec:	mov	r8, sp
   116f0:	mov	r4, #0
   116f4:	mov	r0, r7
   116f8:	mov	r1, r6
   116fc:	mov	r2, r8
   11700:	mov	r3, r9
   11704:	bl	34ac <InflateData>
   11708:	mov	r0, r8
   1170c:	bl	1c0c <Mat_uint32Swap>
   11710:	stm	r5, {r0, r4}
   11714:	add	r5, r5, #8
   11718:	subs	sl, sl, #1
   1171c:	bne	116f4 <ReadCompressedUInt64Data+0x234>
   11720:	b	1196c <ReadCompressedUInt64Data+0x4ac>
   11724:	ldr	r0, [r7, #20]
   11728:	cmp	r0, #0
   1172c:	beq	1197c <ReadCompressedUInt64Data+0x4bc>
   11730:	cmp	sl, #1
   11734:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   11738:	mov	r8, sp
   1173c:	mov	r4, sl
   11740:	mov	r0, r7
   11744:	mov	r1, r6
   11748:	mov	r2, r8
   1174c:	mov	r3, r9
   11750:	bl	34ac <InflateData>
   11754:	mov	r0, r8
   11758:	bl	1c4c <Mat_floatSwap>
   1175c:	vmov	r0, s0
   11760:	bl	71848 <__aeabi_f2ulz>
   11764:	strd	r0, [r5]
   11768:	add	r5, r5, #8
   1176c:	subs	r4, r4, #1
   11770:	bne	11740 <ReadCompressedUInt64Data+0x280>
   11774:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11778:	ldr	r0, [r7, #20]
   1177c:	cmp	r0, #0
   11780:	beq	119bc <ReadCompressedUInt64Data+0x4fc>
   11784:	cmp	sl, #1
   11788:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   1178c:	mov	r8, sp
   11790:	mov	r4, sl
   11794:	mov	r0, r7
   11798:	mov	r1, r6
   1179c:	mov	r2, r8
   117a0:	mov	r3, r9
   117a4:	bl	34ac <InflateData>
   117a8:	mov	r0, r8
   117ac:	bl	1c90 <Mat_doubleSwap>
   117b0:	vmov	r0, r1, d0
   117b4:	bl	71888 <__aeabi_d2ulz>
   117b8:	strd	r0, [r5]
   117bc:	add	r5, r5, #8
   117c0:	subs	r4, r4, #1
   117c4:	bne	11794 <ReadCompressedUInt64Data+0x2d4>
   117c8:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   117cc:	ldr	r0, [r7, #20]
   117d0:	cmp	r0, #0
   117d4:	beq	11a00 <ReadCompressedUInt64Data+0x540>
   117d8:	cmp	sl, #1
   117dc:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   117e0:	mov	r8, sp
   117e4:	mov	r4, sl
   117e8:	mov	r0, r7
   117ec:	mov	r1, r6
   117f0:	mov	r2, r8
   117f4:	mov	r3, r9
   117f8:	bl	34ac <InflateData>
   117fc:	mov	r0, r8
   11800:	bl	1b84 <Mat_int64Swap>
   11804:	strd	r0, [r5]
   11808:	add	r5, r5, #8
   1180c:	subs	r4, r4, #1
   11810:	bne	117e8 <ReadCompressedUInt64Data+0x328>
   11814:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11818:	ldr	r0, [r7, #20]
   1181c:	cmp	r0, #0
   11820:	beq	11a3c <ReadCompressedUInt64Data+0x57c>
   11824:	cmp	sl, #1
   11828:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   1182c:	mov	r8, sp
   11830:	mov	r4, sl
   11834:	mov	r0, r7
   11838:	mov	r1, r6
   1183c:	mov	r2, r8
   11840:	mov	r3, r9
   11844:	bl	34ac <InflateData>
   11848:	mov	r0, r8
   1184c:	bl	1bd4 <Mat_uint64Swap>
   11850:	strd	r0, [r5]
   11854:	add	r5, r5, #8
   11858:	subs	r4, r4, #1
   1185c:	bne	11834 <ReadCompressedUInt64Data+0x374>
   11860:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11864:	cmp	sl, #1
   11868:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   1186c:	mov	r8, sp
   11870:	mov	r4, sl
   11874:	mov	r0, r7
   11878:	mov	r1, r6
   1187c:	mov	r2, r8
   11880:	mov	r3, r9
   11884:	bl	34ac <InflateData>
   11888:	ldrsh	r0, [sp]
   1188c:	subs	r4, r4, #1
   11890:	asr	r1, r0, #31
   11894:	strd	r0, [r5]
   11898:	add	r5, r5, #8
   1189c:	bne	11874 <ReadCompressedUInt64Data+0x3b4>
   118a0:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   118a4:	cmp	sl, #1
   118a8:	blt	118e0 <ReadCompressedUInt64Data+0x420>
   118ac:	ldr	r4, [fp, #8]
   118b0:	mov	r8, sp
   118b4:	mov	sl, #0
   118b8:	mov	r0, r7
   118bc:	mov	r1, r6
   118c0:	mov	r2, r8
   118c4:	mov	r3, r9
   118c8:	bl	34ac <InflateData>
   118cc:	ldrh	r0, [sp]
   118d0:	subs	r4, r4, #1
   118d4:	stm	r5, {r0, sl}
   118d8:	add	r5, r5, #8
   118dc:	bne	118b8 <ReadCompressedUInt64Data+0x3f8>
   118e0:	ldr	sl, [fp, #8]
   118e4:	mul	r0, r9, sl
   118e8:	sub	sp, fp, #28
   118ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118f0:	cmp	sl, #1
   118f4:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   118f8:	mov	r8, sp
   118fc:	mov	r4, sl
   11900:	mov	r0, r7
   11904:	mov	r1, r6
   11908:	mov	r2, r8
   1190c:	mov	r3, r9
   11910:	bl	34ac <InflateData>
   11914:	ldr	r0, [sp]
   11918:	subs	r4, r4, #1
   1191c:	asr	r1, r0, #31
   11920:	strd	r0, [r5]
   11924:	add	r5, r5, #8
   11928:	bne	11900 <ReadCompressedUInt64Data+0x440>
   1192c:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11930:	cmp	sl, #1
   11934:	blt	1196c <ReadCompressedUInt64Data+0x4ac>
   11938:	ldr	r4, [fp, #8]
   1193c:	mov	r8, sp
   11940:	mov	sl, #0
   11944:	mov	r0, r7
   11948:	mov	r1, r6
   1194c:	mov	r2, r8
   11950:	mov	r3, r9
   11954:	bl	34ac <InflateData>
   11958:	ldr	r0, [sp]
   1195c:	subs	r4, r4, #1
   11960:	stm	r5, {r0, sl}
   11964:	add	r5, r5, #8
   11968:	bne	11944 <ReadCompressedUInt64Data+0x484>
   1196c:	ldr	sl, [fp, #8]
   11970:	mul	r0, r9, sl
   11974:	sub	sp, fp, #28
   11978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1197c:	cmp	sl, #1
   11980:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   11984:	mov	r8, sp
   11988:	mov	r4, sl
   1198c:	mov	r0, r7
   11990:	mov	r1, r6
   11994:	mov	r2, r8
   11998:	mov	r3, r9
   1199c:	bl	34ac <InflateData>
   119a0:	ldr	r0, [sp]
   119a4:	bl	71848 <__aeabi_f2ulz>
   119a8:	strd	r0, [r5]
   119ac:	add	r5, r5, #8
   119b0:	subs	r4, r4, #1
   119b4:	bne	1198c <ReadCompressedUInt64Data+0x4cc>
   119b8:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   119bc:	cmp	sl, #1
   119c0:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   119c4:	mov	r8, sp
   119c8:	mov	r4, sl
   119cc:	mov	r0, r7
   119d0:	mov	r1, r6
   119d4:	mov	r2, r8
   119d8:	mov	r3, r9
   119dc:	bl	34ac <InflateData>
   119e0:	vldr	d16, [sp]
   119e4:	vmov	r0, r1, d16
   119e8:	bl	71888 <__aeabi_d2ulz>
   119ec:	strd	r0, [r5]
   119f0:	add	r5, r5, #8
   119f4:	subs	r4, r4, #1
   119f8:	bne	119cc <ReadCompressedUInt64Data+0x50c>
   119fc:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11a00:	cmp	sl, #1
   11a04:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   11a08:	mov	r8, sp
   11a0c:	mov	r4, sl
   11a10:	mov	r0, r7
   11a14:	mov	r1, r6
   11a18:	mov	r2, r8
   11a1c:	mov	r3, r9
   11a20:	bl	34ac <InflateData>
   11a24:	ldm	sp, {r0, r1}
   11a28:	subs	r4, r4, #1
   11a2c:	strd	r0, [r5]
   11a30:	add	r5, r5, #8
   11a34:	bne	11a10 <ReadCompressedUInt64Data+0x550>
   11a38:	b	11a74 <ReadCompressedUInt64Data+0x5b4>
   11a3c:	cmp	sl, #1
   11a40:	blt	11a74 <ReadCompressedUInt64Data+0x5b4>
   11a44:	mov	r8, sp
   11a48:	mov	r4, sl
   11a4c:	mov	r0, r7
   11a50:	mov	r1, r6
   11a54:	mov	r2, r8
   11a58:	mov	r3, r9
   11a5c:	bl	34ac <InflateData>
   11a60:	ldm	sp, {r0, r1}
   11a64:	subs	r4, r4, #1
   11a68:	strd	r0, [r5]
   11a6c:	add	r5, r5, #8
   11a70:	bne	11a4c <ReadCompressedUInt64Data+0x58c>
   11a74:	mul	r0, r9, sl
   11a78:	sub	sp, fp, #28
   11a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011a80 <ReadInt32Data>:
   11a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a84:	add	fp, sp, #28
   11a88:	sub	sp, sp, #412	; 0x19c
   11a8c:	sub	sp, sp, #2048	; 0x800
   11a90:	mov	r5, r0
   11a94:	mov	r0, #0
   11a98:	cmp	r5, #0
   11a9c:	movne	r8, r1
   11aa0:	cmpne	r1, #0
   11aa4:	bne	11ab0 <ReadInt32Data+0x30>
   11aa8:	sub	sp, fp, #28
   11aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ab0:	ldr	r1, [r5]
   11ab4:	cmp	r1, #0
   11ab8:	beq	11aa8 <ReadInt32Data+0x28>
   11abc:	mov	r0, r2
   11ac0:	mov	r6, r3
   11ac4:	mov	r9, r2
   11ac8:	bl	1924 <Mat_SizeOf@plt>
   11acc:	mov	sl, r0
   11ad0:	sub	r0, r9, #1
   11ad4:	mov	r7, #0
   11ad8:	cmp	r0, #11
   11adc:	bhi	14704 <ReadInt32Data+0x2c84>
   11ae0:	add	r1, sp, #408	; 0x198
   11ae4:	add	r4, r1, #4
   11ae8:	add	r1, pc, #4
   11aec:	ldr	r0, [r1, r0, lsl #2]
   11af0:	add	pc, r1, r0
   11af4:	.word	0x00000030
   11af8:	.word	0x00000178
   11afc:	.word	0x000002c0
   11b00:	.word	0x00000314
   11b04:	.word	0x00000368
   11b08:	.word	0x000003bc
   11b0c:	.word	0x00000410
   11b10:	.word	0x00002c10
   11b14:	.word	0x0000046c
   11b18:	.word	0x00002c10
   11b1c:	.word	0x00002c10
   11b20:	.word	0x000004c8
   11b24:	cmp	r6, #256	; 0x100
   11b28:	bgt	12030 <ReadInt32Data+0x5b0>
   11b2c:	ldr	r3, [r5]
   11b30:	add	r4, sp, #408	; 0x198
   11b34:	mov	r1, sl
   11b38:	mov	r2, r6
   11b3c:	mov	r0, r4
   11b40:	bl	18b8 <fread@plt>
   11b44:	mov	r7, r0
   11b48:	cmp	r6, #1
   11b4c:	blt	1516c <ReadInt32Data+0x36ec>
   11b50:	mov	lr, #0
   11b54:	cmp	r6, #4
   11b58:	bcc	11c4c <ReadInt32Data+0x1cc>
   11b5c:	bic	lr, r6, #3
   11b60:	str	r7, [sp, #252]	; 0xfc
   11b64:	mov	r1, #1
   11b68:	mov	r9, r6
   11b6c:	mov	r2, #0
   11b70:	sub	r7, lr, #4
   11b74:	add	r3, r1, r7, lsr #2
   11b78:	cmp	r7, #12
   11b7c:	and	ip, r3, #3
   11b80:	bcc	11c04 <ReadInt32Data+0x184>
   11b84:	sub	r3, r3, ip
   11b88:	mov	r2, #0
   11b8c:	mov	r7, #64	; 0x40
   11b90:	mov	r5, r8
   11b94:	mov	r6, r8
   11b98:	add	r1, r4, r2
   11b9c:	subs	r3, r3, #4
   11ba0:	add	r2, r2, #16
   11ba4:	vld1.32	{d16[0]}, [r1 :32]
   11ba8:	add	r0, r1, #4
   11bac:	vmovl.s8	q8, d16
   11bb0:	vmovl.s16	q8, d16
   11bb4:	vst1.32	{d16-d17}, [r6], r7
   11bb8:	vld1.32	{d16[0]}, [r0 :32]
   11bbc:	add	r0, r5, #16
   11bc0:	vmovl.s8	q8, d16
   11bc4:	vmovl.s16	q8, d16
   11bc8:	vst1.32	{d16-d17}, [r0]
   11bcc:	add	r0, r1, #8
   11bd0:	vld1.32	{d16[0]}, [r0 :32]
   11bd4:	add	r0, r5, #32
   11bd8:	vmovl.s8	q8, d16
   11bdc:	vmovl.s16	q8, d16
   11be0:	vst1.32	{d16-d17}, [r0]
   11be4:	add	r0, r1, #12
   11be8:	vld1.32	{d16[0]}, [r0 :32]
   11bec:	add	r0, r5, #48	; 0x30
   11bf0:	mov	r5, r6
   11bf4:	vmovl.s8	q8, d16
   11bf8:	vmovl.s16	q8, d16
   11bfc:	vst1.32	{d16-d17}, [r0]
   11c00:	bne	11b98 <ReadInt32Data+0x118>
   11c04:	cmp	ip, #0
   11c08:	beq	11c3c <ReadInt32Data+0x1bc>
   11c0c:	add	r3, r4, r2
   11c10:	add	r2, r8, r2, lsl #2
   11c14:	rsb	r1, ip, #0
   11c18:	add	r7, sp, #392	; 0x188
   11c1c:	ldr	r0, [r3], #4
   11c20:	adds	r1, r1, #1
   11c24:	str	r0, [sp, #392]	; 0x188
   11c28:	vld1.32	{d16[0]}, [r7 :32]
   11c2c:	vmovl.s8	q8, d16
   11c30:	vmovl.s16	q8, d16
   11c34:	vst1.32	{d16-d17}, [r2]!
   11c38:	bcc	11c1c <ReadInt32Data+0x19c>
   11c3c:	ldr	r7, [sp, #252]	; 0xfc
   11c40:	mov	r6, r9
   11c44:	cmp	lr, r9
   11c48:	beq	1516c <ReadInt32Data+0x36ec>
   11c4c:	add	r2, r8, lr, lsl #2
   11c50:	add	r1, r4, lr
   11c54:	sub	r0, r6, lr
   11c58:	ldrsb	r3, [r1], #1
   11c5c:	subs	r0, r0, #1
   11c60:	str	r3, [r2], #4
   11c64:	bne	11c58 <ReadInt32Data+0x1d8>
   11c68:	b	1516c <ReadInt32Data+0x36ec>
   11c6c:	cmp	r6, #256	; 0x100
   11c70:	bgt	12924 <ReadInt32Data+0xea4>
   11c74:	ldr	r3, [r5]
   11c78:	add	r4, sp, #408	; 0x198
   11c7c:	mov	r1, sl
   11c80:	mov	r2, r6
   11c84:	mov	r0, r4
   11c88:	bl	18b8 <fread@plt>
   11c8c:	mov	r7, r0
   11c90:	cmp	r6, #1
   11c94:	blt	1516c <ReadInt32Data+0x36ec>
   11c98:	mov	lr, #0
   11c9c:	cmp	r6, #4
   11ca0:	bcc	11d94 <ReadInt32Data+0x314>
   11ca4:	bic	lr, r6, #3
   11ca8:	str	r7, [sp, #252]	; 0xfc
   11cac:	mov	r1, #1
   11cb0:	mov	r9, r6
   11cb4:	mov	r2, #0
   11cb8:	sub	r7, lr, #4
   11cbc:	add	r3, r1, r7, lsr #2
   11cc0:	cmp	r7, #12
   11cc4:	and	ip, r3, #3
   11cc8:	bcc	11d4c <ReadInt32Data+0x2cc>
   11ccc:	sub	r3, r3, ip
   11cd0:	mov	r2, #0
   11cd4:	mov	r7, #64	; 0x40
   11cd8:	mov	r5, r8
   11cdc:	mov	r6, r8
   11ce0:	add	r1, r4, r2
   11ce4:	subs	r3, r3, #4
   11ce8:	add	r2, r2, #16
   11cec:	vld1.32	{d16[0]}, [r1 :32]
   11cf0:	add	r0, r1, #4
   11cf4:	vmovl.u8	q8, d16
   11cf8:	vmovl.u16	q8, d16
   11cfc:	vst1.32	{d16-d17}, [r6], r7
   11d00:	vld1.32	{d16[0]}, [r0 :32]
   11d04:	add	r0, r5, #16
   11d08:	vmovl.u8	q8, d16
   11d0c:	vmovl.u16	q8, d16
   11d10:	vst1.32	{d16-d17}, [r0]
   11d14:	add	r0, r1, #8
   11d18:	vld1.32	{d16[0]}, [r0 :32]
   11d1c:	add	r0, r5, #32
   11d20:	vmovl.u8	q8, d16
   11d24:	vmovl.u16	q8, d16
   11d28:	vst1.32	{d16-d17}, [r0]
   11d2c:	add	r0, r1, #12
   11d30:	vld1.32	{d16[0]}, [r0 :32]
   11d34:	add	r0, r5, #48	; 0x30
   11d38:	mov	r5, r6
   11d3c:	vmovl.u8	q8, d16
   11d40:	vmovl.u16	q8, d16
   11d44:	vst1.32	{d16-d17}, [r0]
   11d48:	bne	11ce0 <ReadInt32Data+0x260>
   11d4c:	cmp	ip, #0
   11d50:	beq	11d84 <ReadInt32Data+0x304>
   11d54:	add	r3, r4, r2
   11d58:	add	r2, r8, r2, lsl #2
   11d5c:	rsb	r1, ip, #0
   11d60:	add	r7, sp, #400	; 0x190
   11d64:	ldr	r0, [r3], #4
   11d68:	adds	r1, r1, #1
   11d6c:	str	r0, [sp, #400]	; 0x190
   11d70:	vld1.32	{d16[0]}, [r7 :32]
   11d74:	vmovl.u8	q8, d16
   11d78:	vmovl.u16	q8, d16
   11d7c:	vst1.32	{d16-d17}, [r2]!
   11d80:	bcc	11d64 <ReadInt32Data+0x2e4>
   11d84:	ldr	r7, [sp, #252]	; 0xfc
   11d88:	mov	r6, r9
   11d8c:	cmp	lr, r9
   11d90:	beq	1516c <ReadInt32Data+0x36ec>
   11d94:	add	r2, r8, lr, lsl #2
   11d98:	add	r1, r4, lr
   11d9c:	sub	r0, r6, lr
   11da0:	ldrb	r3, [r1], #1
   11da4:	subs	r0, r0, #1
   11da8:	str	r3, [r2], #4
   11dac:	bne	11da0 <ReadInt32Data+0x320>
   11db0:	b	1516c <ReadInt32Data+0x36ec>
   11db4:	ldr	r0, [r5, #20]
   11db8:	cmp	r0, #0
   11dbc:	beq	13218 <ReadInt32Data+0x1798>
   11dc0:	cmp	r6, #256	; 0x100
   11dc4:	bgt	136c0 <ReadInt32Data+0x1c40>
   11dc8:	ldr	r3, [r5]
   11dcc:	add	r4, sp, #408	; 0x198
   11dd0:	mov	r1, sl
   11dd4:	mov	r2, r6
   11dd8:	mov	r0, r4
   11ddc:	bl	18b8 <fread@plt>
   11de0:	mov	r7, r0
   11de4:	cmp	r6, #1
   11de8:	blt	1516c <ReadInt32Data+0x36ec>
   11dec:	mov	r0, r4
   11df0:	bl	1c20 <Mat_int16Swap>
   11df4:	str	r0, [r8], #4
   11df8:	add	r4, r4, #2
   11dfc:	subs	r6, r6, #1
   11e00:	bne	11dec <ReadInt32Data+0x36c>
   11e04:	b	1516c <ReadInt32Data+0x36ec>
   11e08:	ldr	r0, [r5, #20]
   11e0c:	cmp	r0, #0
   11e10:	beq	132e0 <ReadInt32Data+0x1860>
   11e14:	cmp	r6, #256	; 0x100
   11e18:	bgt	137ac <ReadInt32Data+0x1d2c>
   11e1c:	ldr	r3, [r5]
   11e20:	add	r4, sp, #408	; 0x198
   11e24:	mov	r1, sl
   11e28:	mov	r2, r6
   11e2c:	mov	r0, r4
   11e30:	bl	18b8 <fread@plt>
   11e34:	mov	r7, r0
   11e38:	cmp	r6, #1
   11e3c:	blt	1516c <ReadInt32Data+0x36ec>
   11e40:	mov	r0, r4
   11e44:	bl	1c34 <Mat_uint16Swap>
   11e48:	str	r0, [r8], #4
   11e4c:	add	r4, r4, #2
   11e50:	subs	r6, r6, #1
   11e54:	bne	11e40 <ReadInt32Data+0x3c0>
   11e58:	b	1516c <ReadInt32Data+0x36ec>
   11e5c:	ldr	r0, [r5, #20]
   11e60:	cmp	r0, #0
   11e64:	beq	133a8 <ReadInt32Data+0x1928>
   11e68:	cmp	r6, #256	; 0x100
   11e6c:	bgt	13898 <ReadInt32Data+0x1e18>
   11e70:	ldr	r3, [r5]
   11e74:	add	r4, sp, #408	; 0x198
   11e78:	mov	r1, sl
   11e7c:	mov	r2, r6
   11e80:	mov	r0, r4
   11e84:	bl	18b8 <fread@plt>
   11e88:	mov	r7, r0
   11e8c:	cmp	r6, #1
   11e90:	blt	1516c <ReadInt32Data+0x36ec>
   11e94:	mov	r0, r4
   11e98:	bl	1bf8 <Mat_int32Swap>
   11e9c:	str	r0, [r8], #4
   11ea0:	add	r4, r4, #4
   11ea4:	subs	r6, r6, #1
   11ea8:	bne	11e94 <ReadInt32Data+0x414>
   11eac:	b	1516c <ReadInt32Data+0x36ec>
   11eb0:	ldr	r0, [r5, #20]
   11eb4:	cmp	r0, #0
   11eb8:	beq	1346c <ReadInt32Data+0x19ec>
   11ebc:	cmp	r6, #256	; 0x100
   11ec0:	bgt	13984 <ReadInt32Data+0x1f04>
   11ec4:	ldr	r3, [r5]
   11ec8:	add	r4, sp, #408	; 0x198
   11ecc:	mov	r1, sl
   11ed0:	mov	r2, r6
   11ed4:	mov	r0, r4
   11ed8:	bl	18b8 <fread@plt>
   11edc:	mov	r7, r0
   11ee0:	cmp	r6, #1
   11ee4:	blt	1516c <ReadInt32Data+0x36ec>
   11ee8:	mov	r0, r4
   11eec:	bl	1c0c <Mat_uint32Swap>
   11ef0:	str	r0, [r8], #4
   11ef4:	add	r4, r4, #4
   11ef8:	subs	r6, r6, #1
   11efc:	bne	11ee8 <ReadInt32Data+0x468>
   11f00:	b	1516c <ReadInt32Data+0x36ec>
   11f04:	ldr	r0, [r5, #20]
   11f08:	cmp	r0, #0
   11f0c:	beq	134b0 <ReadInt32Data+0x1a30>
   11f10:	cmp	r6, #256	; 0x100
   11f14:	bgt	13a70 <ReadInt32Data+0x1ff0>
   11f18:	ldr	r3, [r5]
   11f1c:	add	r4, sp, #408	; 0x198
   11f20:	mov	r1, sl
   11f24:	mov	r2, r6
   11f28:	mov	r0, r4
   11f2c:	bl	18b8 <fread@plt>
   11f30:	mov	r7, r0
   11f34:	cmp	r6, #1
   11f38:	blt	1516c <ReadInt32Data+0x36ec>
   11f3c:	mov	r0, r4
   11f40:	bl	1c4c <Mat_floatSwap>
   11f44:	vcvt.s32.f32	s0, s0
   11f48:	add	r4, r4, #4
   11f4c:	subs	r6, r6, #1
   11f50:	vmov	r0, s0
   11f54:	str	r0, [r8], #4
   11f58:	bne	11f3c <ReadInt32Data+0x4bc>
   11f5c:	b	1516c <ReadInt32Data+0x36ec>
   11f60:	ldr	r0, [r5, #20]
   11f64:	cmp	r0, #0
   11f68:	beq	1354c <ReadInt32Data+0x1acc>
   11f6c:	cmp	r6, #256	; 0x100
   11f70:	bgt	13b6c <ReadInt32Data+0x20ec>
   11f74:	ldr	r3, [r5]
   11f78:	add	r4, sp, #408	; 0x198
   11f7c:	mov	r1, sl
   11f80:	mov	r2, r6
   11f84:	mov	r0, r4
   11f88:	bl	18b8 <fread@plt>
   11f8c:	mov	r7, r0
   11f90:	cmp	r6, #1
   11f94:	blt	1516c <ReadInt32Data+0x36ec>
   11f98:	mov	r0, r4
   11f9c:	bl	1c90 <Mat_doubleSwap>
   11fa0:	vcvt.s32.f64	s0, d0
   11fa4:	add	r4, r4, #8
   11fa8:	subs	r6, r6, #1
   11fac:	vmov	r0, s0
   11fb0:	str	r0, [r8], #4
   11fb4:	bne	11f98 <ReadInt32Data+0x518>
   11fb8:	b	1516c <ReadInt32Data+0x36ec>
   11fbc:	ldr	r0, [r5, #20]
   11fc0:	cmp	r0, #0
   11fc4:	beq	13614 <ReadInt32Data+0x1b94>
   11fc8:	cmp	r6, #256	; 0x100
   11fcc:	bgt	13c68 <ReadInt32Data+0x21e8>
   11fd0:	ldr	r3, [r5]
   11fd4:	add	r4, sp, #408	; 0x198
   11fd8:	mov	r1, sl
   11fdc:	mov	r2, r6
   11fe0:	mov	r0, r4
   11fe4:	bl	18b8 <fread@plt>
   11fe8:	mov	r7, r0
   11fec:	cmp	r6, #1
   11ff0:	blt	14704 <ReadInt32Data+0x2c84>
   11ff4:	str	r9, [sp, #244]	; 0xf4
   11ff8:	str	r5, [sp, #256]	; 0x100
   11ffc:	mov	r9, r8
   12000:	mov	r5, r8
   12004:	mov	r8, r6
   12008:	mov	r0, r4
   1200c:	bl	1b84 <Mat_int64Swap>
   12010:	str	r0, [r5], #4
   12014:	add	r4, r4, #8
   12018:	subs	r6, r6, #1
   1201c:	bne	12008 <ReadInt32Data+0x588>
   12020:	ldr	r5, [sp, #256]	; 0x100
   12024:	mov	r6, r8
   12028:	mov	r8, r9
   1202c:	b	14700 <ReadInt32Data+0x2c80>
   12030:	add	r0, r4, #248	; 0xf8
   12034:	str	r6, [sp, #4]
   12038:	mov	r9, r8
   1203c:	mov	r7, #0
   12040:	str	r8, [sp]
   12044:	str	sl, [sp, #260]	; 0x104
   12048:	str	r0, [sp, #256]	; 0x100
   1204c:	add	r0, r4, #244	; 0xf4
   12050:	str	r0, [sp, #252]	; 0xfc
   12054:	add	r0, r4, #240	; 0xf0
   12058:	str	r0, [sp, #248]	; 0xf8
   1205c:	add	r0, r4, #236	; 0xec
   12060:	str	r0, [sp, #244]	; 0xf4
   12064:	add	r0, r4, #232	; 0xe8
   12068:	str	r0, [sp, #240]	; 0xf0
   1206c:	add	r0, r4, #228	; 0xe4
   12070:	str	r0, [sp, #236]	; 0xec
   12074:	add	r0, r4, #224	; 0xe0
   12078:	str	r0, [sp, #232]	; 0xe8
   1207c:	add	r0, r4, #220	; 0xdc
   12080:	str	r0, [sp, #228]	; 0xe4
   12084:	add	r0, r4, #216	; 0xd8
   12088:	str	r0, [sp, #224]	; 0xe0
   1208c:	add	r0, r4, #212	; 0xd4
   12090:	str	r0, [sp, #220]	; 0xdc
   12094:	add	r0, r4, #208	; 0xd0
   12098:	str	r0, [sp, #216]	; 0xd8
   1209c:	add	r0, r4, #204	; 0xcc
   120a0:	str	r0, [sp, #212]	; 0xd4
   120a4:	add	r0, r4, #200	; 0xc8
   120a8:	str	r0, [sp, #208]	; 0xd0
   120ac:	add	r0, r4, #196	; 0xc4
   120b0:	str	r0, [sp, #204]	; 0xcc
   120b4:	add	r0, r4, #192	; 0xc0
   120b8:	str	r0, [sp, #200]	; 0xc8
   120bc:	add	r0, r4, #188	; 0xbc
   120c0:	str	r0, [sp, #196]	; 0xc4
   120c4:	add	r0, r4, #184	; 0xb8
   120c8:	str	r0, [sp, #192]	; 0xc0
   120cc:	add	r0, r4, #180	; 0xb4
   120d0:	str	r0, [sp, #188]	; 0xbc
   120d4:	add	r0, r4, #176	; 0xb0
   120d8:	str	r0, [sp, #184]	; 0xb8
   120dc:	add	r0, r4, #172	; 0xac
   120e0:	str	r0, [sp, #180]	; 0xb4
   120e4:	add	r0, r4, #168	; 0xa8
   120e8:	str	r0, [sp, #176]	; 0xb0
   120ec:	add	r0, r4, #164	; 0xa4
   120f0:	str	r0, [sp, #172]	; 0xac
   120f4:	add	r0, r4, #160	; 0xa0
   120f8:	str	r0, [sp, #168]	; 0xa8
   120fc:	add	r0, r4, #156	; 0x9c
   12100:	str	r0, [sp, #164]	; 0xa4
   12104:	add	r0, r4, #152	; 0x98
   12108:	str	r0, [sp, #160]	; 0xa0
   1210c:	add	r0, r4, #148	; 0x94
   12110:	str	r0, [sp, #156]	; 0x9c
   12114:	add	r0, r4, #144	; 0x90
   12118:	str	r0, [sp, #152]	; 0x98
   1211c:	add	r0, r4, #140	; 0x8c
   12120:	str	r0, [sp, #148]	; 0x94
   12124:	add	r0, r4, #136	; 0x88
   12128:	str	r0, [sp, #144]	; 0x90
   1212c:	add	r0, r4, #132	; 0x84
   12130:	str	r0, [sp, #140]	; 0x8c
   12134:	add	r0, r4, #128	; 0x80
   12138:	str	r0, [sp, #136]	; 0x88
   1213c:	add	r0, r4, #124	; 0x7c
   12140:	str	r0, [sp, #132]	; 0x84
   12144:	add	r0, r4, #120	; 0x78
   12148:	str	r0, [sp, #128]	; 0x80
   1214c:	add	r0, r4, #116	; 0x74
   12150:	str	r0, [sp, #124]	; 0x7c
   12154:	add	r0, r4, #112	; 0x70
   12158:	str	r0, [sp, #120]	; 0x78
   1215c:	add	r0, r4, #108	; 0x6c
   12160:	str	r0, [sp, #116]	; 0x74
   12164:	add	r0, r4, #104	; 0x68
   12168:	str	r0, [sp, #112]	; 0x70
   1216c:	add	r0, r4, #100	; 0x64
   12170:	str	r0, [sp, #108]	; 0x6c
   12174:	add	r0, r4, #96	; 0x60
   12178:	str	r0, [sp, #104]	; 0x68
   1217c:	add	r0, r4, #92	; 0x5c
   12180:	str	r0, [sp, #100]	; 0x64
   12184:	add	r0, r4, #88	; 0x58
   12188:	str	r0, [sp, #96]	; 0x60
   1218c:	add	r0, r4, #84	; 0x54
   12190:	str	r0, [sp, #92]	; 0x5c
   12194:	add	r0, r4, #80	; 0x50
   12198:	str	r0, [sp, #88]	; 0x58
   1219c:	add	r0, r4, #76	; 0x4c
   121a0:	str	r0, [sp, #84]	; 0x54
   121a4:	add	r0, r4, #72	; 0x48
   121a8:	str	r0, [sp, #80]	; 0x50
   121ac:	add	r0, r4, #68	; 0x44
   121b0:	str	r0, [sp, #76]	; 0x4c
   121b4:	add	r0, r4, #64	; 0x40
   121b8:	str	r0, [sp, #72]	; 0x48
   121bc:	add	r0, r4, #60	; 0x3c
   121c0:	str	r0, [sp, #68]	; 0x44
   121c4:	add	r0, r4, #56	; 0x38
   121c8:	str	r0, [sp, #64]	; 0x40
   121cc:	add	r0, r4, #52	; 0x34
   121d0:	str	r0, [sp, #60]	; 0x3c
   121d4:	add	r0, r4, #48	; 0x30
   121d8:	str	r0, [sp, #56]	; 0x38
   121dc:	add	r0, r4, #44	; 0x2c
   121e0:	str	r0, [sp, #52]	; 0x34
   121e4:	add	r0, r4, #40	; 0x28
   121e8:	str	r0, [sp, #48]	; 0x30
   121ec:	add	r0, r4, #36	; 0x24
   121f0:	str	r0, [sp, #44]	; 0x2c
   121f4:	add	r0, r4, #32
   121f8:	str	r0, [sp, #40]	; 0x28
   121fc:	add	r0, r4, #28
   12200:	str	r0, [sp, #36]	; 0x24
   12204:	add	r0, r4, #24
   12208:	str	r0, [sp, #32]
   1220c:	add	r0, r4, #20
   12210:	str	r0, [sp, #28]
   12214:	add	r0, r4, #16
   12218:	str	r0, [sp, #24]
   1221c:	add	r0, r4, #12
   12220:	str	r0, [sp, #20]
   12224:	add	r0, r4, #8
   12228:	str	r0, [sp, #16]
   1222c:	add	r0, r4, #4
   12230:	str	r0, [sp, #12]
   12234:	sub	r0, r6, #256	; 0x100
   12238:	mov	r6, #0
   1223c:	str	r0, [sp, #8]
   12240:	ldr	r3, [r5]
   12244:	ldr	r1, [sp, #260]	; 0x104
   12248:	add	sl, sp, #408	; 0x198
   1224c:	mov	r2, #256	; 0x100
   12250:	mov	r0, sl
   12254:	bl	18b8 <fread@plt>
   12258:	vld1.32	{d16[0]}, [sl :32]
   1225c:	mov	r1, #1024	; 0x400
   12260:	add	r7, r0, r7
   12264:	ldr	r0, [sp, #8]
   12268:	add	r6, r6, #256	; 0x100
   1226c:	cmp	r6, r0
   12270:	vmovl.s8	q8, d16
   12274:	vmovl.s16	q8, d16
   12278:	vst1.32	{d16-d17}, [r8], r1
   1227c:	add	r1, r9, #16
   12280:	vld1.32	{d16[0]}, [r4 :32]
   12284:	vmovl.s8	q8, d16
   12288:	vmovl.s16	q8, d16
   1228c:	vst1.32	{d16-d17}, [r1]
   12290:	ldr	r1, [sp, #12]
   12294:	vld1.32	{d16[0]}, [r1 :32]
   12298:	add	r1, r9, #32
   1229c:	vmovl.s8	q8, d16
   122a0:	vmovl.s16	q8, d16
   122a4:	vst1.32	{d16-d17}, [r1]
   122a8:	ldr	r1, [sp, #16]
   122ac:	vld1.32	{d16[0]}, [r1 :32]
   122b0:	add	r1, r9, #48	; 0x30
   122b4:	vmovl.s8	q8, d16
   122b8:	vmovl.s16	q8, d16
   122bc:	vst1.32	{d16-d17}, [r1]
   122c0:	ldr	r1, [sp, #20]
   122c4:	vld1.32	{d16[0]}, [r1 :32]
   122c8:	add	r1, r9, #64	; 0x40
   122cc:	vmovl.s8	q8, d16
   122d0:	vmovl.s16	q8, d16
   122d4:	vst1.32	{d16-d17}, [r1]
   122d8:	ldr	r1, [sp, #24]
   122dc:	vld1.32	{d16[0]}, [r1 :32]
   122e0:	add	r1, r9, #80	; 0x50
   122e4:	vmovl.s8	q8, d16
   122e8:	vmovl.s16	q8, d16
   122ec:	vst1.32	{d16-d17}, [r1]
   122f0:	ldr	r1, [sp, #28]
   122f4:	vld1.32	{d16[0]}, [r1 :32]
   122f8:	add	r1, r9, #96	; 0x60
   122fc:	vmovl.s8	q8, d16
   12300:	vmovl.s16	q8, d16
   12304:	vst1.32	{d16-d17}, [r1]
   12308:	ldr	r1, [sp, #32]
   1230c:	vld1.32	{d16[0]}, [r1 :32]
   12310:	add	r1, r9, #112	; 0x70
   12314:	vmovl.s8	q8, d16
   12318:	vmovl.s16	q8, d16
   1231c:	vst1.32	{d16-d17}, [r1]
   12320:	ldr	r1, [sp, #36]	; 0x24
   12324:	vld1.32	{d16[0]}, [r1 :32]
   12328:	add	r1, r9, #128	; 0x80
   1232c:	vmovl.s8	q8, d16
   12330:	vmovl.s16	q8, d16
   12334:	vst1.32	{d16-d17}, [r1]
   12338:	ldr	r1, [sp, #40]	; 0x28
   1233c:	vld1.32	{d16[0]}, [r1 :32]
   12340:	add	r1, r9, #144	; 0x90
   12344:	vmovl.s8	q8, d16
   12348:	vmovl.s16	q8, d16
   1234c:	vst1.32	{d16-d17}, [r1]
   12350:	ldr	r1, [sp, #44]	; 0x2c
   12354:	vld1.32	{d16[0]}, [r1 :32]
   12358:	add	r1, r9, #160	; 0xa0
   1235c:	vmovl.s8	q8, d16
   12360:	vmovl.s16	q8, d16
   12364:	vst1.32	{d16-d17}, [r1]
   12368:	ldr	r1, [sp, #48]	; 0x30
   1236c:	vld1.32	{d16[0]}, [r1 :32]
   12370:	add	r1, r9, #176	; 0xb0
   12374:	vmovl.s8	q8, d16
   12378:	vmovl.s16	q8, d16
   1237c:	vst1.32	{d16-d17}, [r1]
   12380:	ldr	r1, [sp, #52]	; 0x34
   12384:	vld1.32	{d16[0]}, [r1 :32]
   12388:	add	r1, r9, #192	; 0xc0
   1238c:	vmovl.s8	q8, d16
   12390:	vmovl.s16	q8, d16
   12394:	vst1.32	{d16-d17}, [r1]
   12398:	ldr	r1, [sp, #56]	; 0x38
   1239c:	vld1.32	{d16[0]}, [r1 :32]
   123a0:	add	r1, r9, #208	; 0xd0
   123a4:	vmovl.s8	q8, d16
   123a8:	vmovl.s16	q8, d16
   123ac:	vst1.32	{d16-d17}, [r1]
   123b0:	ldr	r1, [sp, #60]	; 0x3c
   123b4:	vld1.32	{d16[0]}, [r1 :32]
   123b8:	add	r1, r9, #224	; 0xe0
   123bc:	vmovl.s8	q8, d16
   123c0:	vmovl.s16	q8, d16
   123c4:	vst1.32	{d16-d17}, [r1]
   123c8:	ldr	r1, [sp, #64]	; 0x40
   123cc:	vld1.32	{d16[0]}, [r1 :32]
   123d0:	add	r1, r9, #240	; 0xf0
   123d4:	vmovl.s8	q8, d16
   123d8:	vmovl.s16	q8, d16
   123dc:	vst1.32	{d16-d17}, [r1]
   123e0:	ldr	r1, [sp, #68]	; 0x44
   123e4:	vld1.32	{d16[0]}, [r1 :32]
   123e8:	add	r1, r9, #256	; 0x100
   123ec:	vmovl.s8	q8, d16
   123f0:	vmovl.s16	q8, d16
   123f4:	vst1.32	{d16-d17}, [r1]
   123f8:	ldr	r1, [sp, #72]	; 0x48
   123fc:	vld1.32	{d16[0]}, [r1 :32]
   12400:	add	r1, r9, #272	; 0x110
   12404:	vmovl.s8	q8, d16
   12408:	vmovl.s16	q8, d16
   1240c:	vst1.32	{d16-d17}, [r1]
   12410:	ldr	r1, [sp, #76]	; 0x4c
   12414:	vld1.32	{d16[0]}, [r1 :32]
   12418:	add	r1, r9, #288	; 0x120
   1241c:	vmovl.s8	q8, d16
   12420:	vmovl.s16	q8, d16
   12424:	vst1.32	{d16-d17}, [r1]
   12428:	ldr	r1, [sp, #80]	; 0x50
   1242c:	vld1.32	{d16[0]}, [r1 :32]
   12430:	add	r1, r9, #304	; 0x130
   12434:	vmovl.s8	q8, d16
   12438:	vmovl.s16	q8, d16
   1243c:	vst1.32	{d16-d17}, [r1]
   12440:	ldr	r1, [sp, #84]	; 0x54
   12444:	vld1.32	{d16[0]}, [r1 :32]
   12448:	add	r1, r9, #320	; 0x140
   1244c:	vmovl.s8	q8, d16
   12450:	vmovl.s16	q8, d16
   12454:	vst1.32	{d16-d17}, [r1]
   12458:	ldr	r1, [sp, #88]	; 0x58
   1245c:	vld1.32	{d16[0]}, [r1 :32]
   12460:	add	r1, r9, #336	; 0x150
   12464:	vmovl.s8	q8, d16
   12468:	vmovl.s16	q8, d16
   1246c:	vst1.32	{d16-d17}, [r1]
   12470:	ldr	r1, [sp, #92]	; 0x5c
   12474:	vld1.32	{d16[0]}, [r1 :32]
   12478:	add	r1, r9, #352	; 0x160
   1247c:	vmovl.s8	q8, d16
   12480:	vmovl.s16	q8, d16
   12484:	vst1.32	{d16-d17}, [r1]
   12488:	ldr	r1, [sp, #96]	; 0x60
   1248c:	vld1.32	{d16[0]}, [r1 :32]
   12490:	add	r1, r9, #368	; 0x170
   12494:	vmovl.s8	q8, d16
   12498:	vmovl.s16	q8, d16
   1249c:	vst1.32	{d16-d17}, [r1]
   124a0:	ldr	r1, [sp, #100]	; 0x64
   124a4:	vld1.32	{d16[0]}, [r1 :32]
   124a8:	add	r1, r9, #384	; 0x180
   124ac:	vmovl.s8	q8, d16
   124b0:	vmovl.s16	q8, d16
   124b4:	vst1.32	{d16-d17}, [r1]
   124b8:	ldr	r1, [sp, #104]	; 0x68
   124bc:	vld1.32	{d16[0]}, [r1 :32]
   124c0:	add	r1, r9, #400	; 0x190
   124c4:	vmovl.s8	q8, d16
   124c8:	vmovl.s16	q8, d16
   124cc:	vst1.32	{d16-d17}, [r1]
   124d0:	ldr	r1, [sp, #108]	; 0x6c
   124d4:	vld1.32	{d16[0]}, [r1 :32]
   124d8:	add	r1, r9, #416	; 0x1a0
   124dc:	vmovl.s8	q8, d16
   124e0:	vmovl.s16	q8, d16
   124e4:	vst1.32	{d16-d17}, [r1]
   124e8:	ldr	r1, [sp, #112]	; 0x70
   124ec:	vld1.32	{d16[0]}, [r1 :32]
   124f0:	add	r1, r9, #432	; 0x1b0
   124f4:	vmovl.s8	q8, d16
   124f8:	vmovl.s16	q8, d16
   124fc:	vst1.32	{d16-d17}, [r1]
   12500:	ldr	r1, [sp, #116]	; 0x74
   12504:	vld1.32	{d16[0]}, [r1 :32]
   12508:	add	r1, r9, #448	; 0x1c0
   1250c:	vmovl.s8	q8, d16
   12510:	vmovl.s16	q8, d16
   12514:	vst1.32	{d16-d17}, [r1]
   12518:	ldr	r1, [sp, #120]	; 0x78
   1251c:	vld1.32	{d16[0]}, [r1 :32]
   12520:	add	r1, r9, #464	; 0x1d0
   12524:	vmovl.s8	q8, d16
   12528:	vmovl.s16	q8, d16
   1252c:	vst1.32	{d16-d17}, [r1]
   12530:	ldr	r1, [sp, #124]	; 0x7c
   12534:	vld1.32	{d16[0]}, [r1 :32]
   12538:	add	r1, r9, #480	; 0x1e0
   1253c:	vmovl.s8	q8, d16
   12540:	vmovl.s16	q8, d16
   12544:	vst1.32	{d16-d17}, [r1]
   12548:	ldr	r1, [sp, #128]	; 0x80
   1254c:	vld1.32	{d16[0]}, [r1 :32]
   12550:	add	r1, r9, #496	; 0x1f0
   12554:	vmovl.s8	q8, d16
   12558:	vmovl.s16	q8, d16
   1255c:	vst1.32	{d16-d17}, [r1]
   12560:	ldr	r1, [sp, #132]	; 0x84
   12564:	vld1.32	{d16[0]}, [r1 :32]
   12568:	add	r1, r9, #512	; 0x200
   1256c:	vmovl.s8	q8, d16
   12570:	vmovl.s16	q8, d16
   12574:	vst1.32	{d16-d17}, [r1]
   12578:	ldr	r1, [sp, #136]	; 0x88
   1257c:	vld1.32	{d16[0]}, [r1 :32]
   12580:	add	r1, r9, #528	; 0x210
   12584:	vmovl.s8	q8, d16
   12588:	vmovl.s16	q8, d16
   1258c:	vst1.32	{d16-d17}, [r1]
   12590:	ldr	r1, [sp, #140]	; 0x8c
   12594:	vld1.32	{d16[0]}, [r1 :32]
   12598:	add	r1, r9, #544	; 0x220
   1259c:	vmovl.s8	q8, d16
   125a0:	vmovl.s16	q8, d16
   125a4:	vst1.32	{d16-d17}, [r1]
   125a8:	ldr	r1, [sp, #144]	; 0x90
   125ac:	vld1.32	{d16[0]}, [r1 :32]
   125b0:	add	r1, r9, #560	; 0x230
   125b4:	vmovl.s8	q8, d16
   125b8:	vmovl.s16	q8, d16
   125bc:	vst1.32	{d16-d17}, [r1]
   125c0:	ldr	r1, [sp, #148]	; 0x94
   125c4:	vld1.32	{d16[0]}, [r1 :32]
   125c8:	add	r1, r9, #576	; 0x240
   125cc:	vmovl.s8	q8, d16
   125d0:	vmovl.s16	q8, d16
   125d4:	vst1.32	{d16-d17}, [r1]
   125d8:	ldr	r1, [sp, #152]	; 0x98
   125dc:	vld1.32	{d16[0]}, [r1 :32]
   125e0:	add	r1, r9, #592	; 0x250
   125e4:	vmovl.s8	q8, d16
   125e8:	vmovl.s16	q8, d16
   125ec:	vst1.32	{d16-d17}, [r1]
   125f0:	ldr	r1, [sp, #156]	; 0x9c
   125f4:	vld1.32	{d16[0]}, [r1 :32]
   125f8:	add	r1, r9, #608	; 0x260
   125fc:	vmovl.s8	q8, d16
   12600:	vmovl.s16	q8, d16
   12604:	vst1.32	{d16-d17}, [r1]
   12608:	ldr	r1, [sp, #160]	; 0xa0
   1260c:	vld1.32	{d16[0]}, [r1 :32]
   12610:	add	r1, r9, #624	; 0x270
   12614:	vmovl.s8	q8, d16
   12618:	vmovl.s16	q8, d16
   1261c:	vst1.32	{d16-d17}, [r1]
   12620:	ldr	r1, [sp, #164]	; 0xa4
   12624:	vld1.32	{d16[0]}, [r1 :32]
   12628:	add	r1, r9, #640	; 0x280
   1262c:	vmovl.s8	q8, d16
   12630:	vmovl.s16	q8, d16
   12634:	vst1.32	{d16-d17}, [r1]
   12638:	ldr	r1, [sp, #168]	; 0xa8
   1263c:	vld1.32	{d16[0]}, [r1 :32]
   12640:	add	r1, r9, #656	; 0x290
   12644:	vmovl.s8	q8, d16
   12648:	vmovl.s16	q8, d16
   1264c:	vst1.32	{d16-d17}, [r1]
   12650:	ldr	r1, [sp, #172]	; 0xac
   12654:	vld1.32	{d16[0]}, [r1 :32]
   12658:	add	r1, r9, #672	; 0x2a0
   1265c:	vmovl.s8	q8, d16
   12660:	vmovl.s16	q8, d16
   12664:	vst1.32	{d16-d17}, [r1]
   12668:	ldr	r1, [sp, #176]	; 0xb0
   1266c:	vld1.32	{d16[0]}, [r1 :32]
   12670:	add	r1, r9, #688	; 0x2b0
   12674:	vmovl.s8	q8, d16
   12678:	vmovl.s16	q8, d16
   1267c:	vst1.32	{d16-d17}, [r1]
   12680:	ldr	r1, [sp, #180]	; 0xb4
   12684:	vld1.32	{d16[0]}, [r1 :32]
   12688:	add	r1, r9, #704	; 0x2c0
   1268c:	vmovl.s8	q8, d16
   12690:	vmovl.s16	q8, d16
   12694:	vst1.32	{d16-d17}, [r1]
   12698:	ldr	r1, [sp, #184]	; 0xb8
   1269c:	vld1.32	{d16[0]}, [r1 :32]
   126a0:	add	r1, r9, #720	; 0x2d0
   126a4:	vmovl.s8	q8, d16
   126a8:	vmovl.s16	q8, d16
   126ac:	vst1.32	{d16-d17}, [r1]
   126b0:	ldr	r1, [sp, #188]	; 0xbc
   126b4:	vld1.32	{d16[0]}, [r1 :32]
   126b8:	add	r1, r9, #736	; 0x2e0
   126bc:	vmovl.s8	q8, d16
   126c0:	vmovl.s16	q8, d16
   126c4:	vst1.32	{d16-d17}, [r1]
   126c8:	ldr	r1, [sp, #192]	; 0xc0
   126cc:	vld1.32	{d16[0]}, [r1 :32]
   126d0:	add	r1, r9, #752	; 0x2f0
   126d4:	vmovl.s8	q8, d16
   126d8:	vmovl.s16	q8, d16
   126dc:	vst1.32	{d16-d17}, [r1]
   126e0:	ldr	r1, [sp, #196]	; 0xc4
   126e4:	vld1.32	{d16[0]}, [r1 :32]
   126e8:	add	r1, r9, #768	; 0x300
   126ec:	vmovl.s8	q8, d16
   126f0:	vmovl.s16	q8, d16
   126f4:	vst1.32	{d16-d17}, [r1]
   126f8:	ldr	r1, [sp, #200]	; 0xc8
   126fc:	vld1.32	{d16[0]}, [r1 :32]
   12700:	add	r1, r9, #784	; 0x310
   12704:	vmovl.s8	q8, d16
   12708:	vmovl.s16	q8, d16
   1270c:	vst1.32	{d16-d17}, [r1]
   12710:	ldr	r1, [sp, #204]	; 0xcc
   12714:	vld1.32	{d16[0]}, [r1 :32]
   12718:	add	r1, r9, #800	; 0x320
   1271c:	vmovl.s8	q8, d16
   12720:	vmovl.s16	q8, d16
   12724:	vst1.32	{d16-d17}, [r1]
   12728:	ldr	r1, [sp, #208]	; 0xd0
   1272c:	vld1.32	{d16[0]}, [r1 :32]
   12730:	add	r1, r9, #816	; 0x330
   12734:	vmovl.s8	q8, d16
   12738:	vmovl.s16	q8, d16
   1273c:	vst1.32	{d16-d17}, [r1]
   12740:	ldr	r1, [sp, #212]	; 0xd4
   12744:	vld1.32	{d16[0]}, [r1 :32]
   12748:	add	r1, r9, #832	; 0x340
   1274c:	vmovl.s8	q8, d16
   12750:	vmovl.s16	q8, d16
   12754:	vst1.32	{d16-d17}, [r1]
   12758:	ldr	r1, [sp, #216]	; 0xd8
   1275c:	vld1.32	{d16[0]}, [r1 :32]
   12760:	add	r1, r9, #848	; 0x350
   12764:	vmovl.s8	q8, d16
   12768:	vmovl.s16	q8, d16
   1276c:	vst1.32	{d16-d17}, [r1]
   12770:	ldr	r1, [sp, #220]	; 0xdc
   12774:	vld1.32	{d16[0]}, [r1 :32]
   12778:	add	r1, r9, #864	; 0x360
   1277c:	vmovl.s8	q8, d16
   12780:	vmovl.s16	q8, d16
   12784:	vst1.32	{d16-d17}, [r1]
   12788:	ldr	r1, [sp, #224]	; 0xe0
   1278c:	vld1.32	{d16[0]}, [r1 :32]
   12790:	add	r1, r9, #880	; 0x370
   12794:	vmovl.s8	q8, d16
   12798:	vmovl.s16	q8, d16
   1279c:	vst1.32	{d16-d17}, [r1]
   127a0:	ldr	r1, [sp, #228]	; 0xe4
   127a4:	vld1.32	{d16[0]}, [r1 :32]
   127a8:	add	r1, r9, #896	; 0x380
   127ac:	vmovl.s8	q8, d16
   127b0:	vmovl.s16	q8, d16
   127b4:	vst1.32	{d16-d17}, [r1]
   127b8:	ldr	r1, [sp, #232]	; 0xe8
   127bc:	vld1.32	{d16[0]}, [r1 :32]
   127c0:	add	r1, r9, #912	; 0x390
   127c4:	vmovl.s8	q8, d16
   127c8:	vmovl.s16	q8, d16
   127cc:	vst1.32	{d16-d17}, [r1]
   127d0:	ldr	r1, [sp, #236]	; 0xec
   127d4:	vld1.32	{d16[0]}, [r1 :32]
   127d8:	add	r1, r9, #928	; 0x3a0
   127dc:	vmovl.s8	q8, d16
   127e0:	vmovl.s16	q8, d16
   127e4:	vst1.32	{d16-d17}, [r1]
   127e8:	ldr	r1, [sp, #240]	; 0xf0
   127ec:	vld1.32	{d16[0]}, [r1 :32]
   127f0:	add	r1, r9, #944	; 0x3b0
   127f4:	vmovl.s8	q8, d16
   127f8:	vmovl.s16	q8, d16
   127fc:	vst1.32	{d16-d17}, [r1]
   12800:	ldr	r1, [sp, #244]	; 0xf4
   12804:	vld1.32	{d16[0]}, [r1 :32]
   12808:	add	r1, r9, #960	; 0x3c0
   1280c:	vmovl.s8	q8, d16
   12810:	vmovl.s16	q8, d16
   12814:	vst1.32	{d16-d17}, [r1]
   12818:	ldr	r1, [sp, #248]	; 0xf8
   1281c:	vld1.32	{d16[0]}, [r1 :32]
   12820:	add	r1, r9, #976	; 0x3d0
   12824:	vmovl.s8	q8, d16
   12828:	vmovl.s16	q8, d16
   1282c:	vst1.32	{d16-d17}, [r1]
   12830:	ldr	r1, [sp, #252]	; 0xfc
   12834:	vld1.32	{d16[0]}, [r1 :32]
   12838:	add	r1, r9, #992	; 0x3e0
   1283c:	vmovl.s8	q8, d16
   12840:	vmovl.s16	q8, d16
   12844:	vst1.32	{d16-d17}, [r1]
   12848:	ldr	r1, [sp, #256]	; 0x100
   1284c:	vld1.32	{d16[0]}, [r1 :32]
   12850:	add	r1, r9, #1008	; 0x3f0
   12854:	mov	r9, r8
   12858:	vmovl.s8	q8, d16
   1285c:	vmovl.s16	q8, d16
   12860:	vst1.32	{d16-d17}, [r1]
   12864:	blt	12240 <ReadInt32Data+0x7c0>
   12868:	ldr	r0, [sp, #4]
   1286c:	ldr	sl, [sp, #260]	; 0x104
   12870:	cmp	r6, r0
   12874:	bge	1516c <ReadInt32Data+0x36ec>
   12878:	ldr	r3, [r5]
   1287c:	sub	r4, r0, r6
   12880:	add	r9, sp, #408	; 0x198
   12884:	mov	r1, sl
   12888:	mov	r0, r9
   1288c:	mov	r2, r4
   12890:	bl	18b8 <fread@plt>
   12894:	add	r7, r0, r7
   12898:	cmp	r4, #1
   1289c:	blt	1516c <ReadInt32Data+0x36ec>
   128a0:	mov	r0, #0
   128a4:	cmp	r4, #4
   128a8:	bcc	14acc <ReadInt32Data+0x304c>
   128ac:	bic	r0, r4, #3
   128b0:	mov	r2, #1
   128b4:	mov	lr, r7
   128b8:	subs	r1, r0, #4
   128bc:	add	r1, r2, r1, lsr #2
   128c0:	and	ip, r1, #1
   128c4:	beq	14a8c <ReadInt32Data+0x300c>
   128c8:	bic	r3, r4, #3
   128cc:	sub	r3, r3, #4
   128d0:	add	r2, r2, r3, lsr #2
   128d4:	mvn	r7, r3, lsr #2
   128d8:	and	r2, r2, #1
   128dc:	add	r3, r7, r2
   128e0:	mov	r2, #0
   128e4:	mov	r7, #32
   128e8:	add	r5, r9, r2
   128ec:	add	r1, r8, #16
   128f0:	adds	r3, r3, #2
   128f4:	add	r2, r2, #8
   128f8:	vld1.32	{d16[0]}, [r5 :32]
   128fc:	add	r5, r5, #4
   12900:	vmovl.s8	q8, d16
   12904:	vmovl.s16	q8, d16
   12908:	vst1.32	{d16-d17}, [r8], r7
   1290c:	vld1.32	{d16[0]}, [r5 :32]
   12910:	vmovl.s8	q8, d16
   12914:	vmovl.s16	q8, d16
   12918:	vst1.32	{d16-d17}, [r1]
   1291c:	bne	128e8 <ReadInt32Data+0xe68>
   12920:	b	14a90 <ReadInt32Data+0x3010>
   12924:	add	r0, r4, #248	; 0xf8
   12928:	str	r6, [sp, #4]
   1292c:	mov	r9, r8
   12930:	mov	r7, #0
   12934:	str	r8, [sp]
   12938:	str	sl, [sp, #260]	; 0x104
   1293c:	str	r0, [sp, #256]	; 0x100
   12940:	add	r0, r4, #244	; 0xf4
   12944:	str	r0, [sp, #252]	; 0xfc
   12948:	add	r0, r4, #240	; 0xf0
   1294c:	str	r0, [sp, #248]	; 0xf8
   12950:	add	r0, r4, #236	; 0xec
   12954:	str	r0, [sp, #244]	; 0xf4
   12958:	add	r0, r4, #232	; 0xe8
   1295c:	str	r0, [sp, #240]	; 0xf0
   12960:	add	r0, r4, #228	; 0xe4
   12964:	str	r0, [sp, #236]	; 0xec
   12968:	add	r0, r4, #224	; 0xe0
   1296c:	str	r0, [sp, #232]	; 0xe8
   12970:	add	r0, r4, #220	; 0xdc
   12974:	str	r0, [sp, #228]	; 0xe4
   12978:	add	r0, r4, #216	; 0xd8
   1297c:	str	r0, [sp, #224]	; 0xe0
   12980:	add	r0, r4, #212	; 0xd4
   12984:	str	r0, [sp, #220]	; 0xdc
   12988:	add	r0, r4, #208	; 0xd0
   1298c:	str	r0, [sp, #216]	; 0xd8
   12990:	add	r0, r4, #204	; 0xcc
   12994:	str	r0, [sp, #212]	; 0xd4
   12998:	add	r0, r4, #200	; 0xc8
   1299c:	str	r0, [sp, #208]	; 0xd0
   129a0:	add	r0, r4, #196	; 0xc4
   129a4:	str	r0, [sp, #204]	; 0xcc
   129a8:	add	r0, r4, #192	; 0xc0
   129ac:	str	r0, [sp, #200]	; 0xc8
   129b0:	add	r0, r4, #188	; 0xbc
   129b4:	str	r0, [sp, #196]	; 0xc4
   129b8:	add	r0, r4, #184	; 0xb8
   129bc:	str	r0, [sp, #192]	; 0xc0
   129c0:	add	r0, r4, #180	; 0xb4
   129c4:	str	r0, [sp, #188]	; 0xbc
   129c8:	add	r0, r4, #176	; 0xb0
   129cc:	str	r0, [sp, #184]	; 0xb8
   129d0:	add	r0, r4, #172	; 0xac
   129d4:	str	r0, [sp, #180]	; 0xb4
   129d8:	add	r0, r4, #168	; 0xa8
   129dc:	str	r0, [sp, #176]	; 0xb0
   129e0:	add	r0, r4, #164	; 0xa4
   129e4:	str	r0, [sp, #172]	; 0xac
   129e8:	add	r0, r4, #160	; 0xa0
   129ec:	str	r0, [sp, #168]	; 0xa8
   129f0:	add	r0, r4, #156	; 0x9c
   129f4:	str	r0, [sp, #164]	; 0xa4
   129f8:	add	r0, r4, #152	; 0x98
   129fc:	str	r0, [sp, #160]	; 0xa0
   12a00:	add	r0, r4, #148	; 0x94
   12a04:	str	r0, [sp, #156]	; 0x9c
   12a08:	add	r0, r4, #144	; 0x90
   12a0c:	str	r0, [sp, #152]	; 0x98
   12a10:	add	r0, r4, #140	; 0x8c
   12a14:	str	r0, [sp, #148]	; 0x94
   12a18:	add	r0, r4, #136	; 0x88
   12a1c:	str	r0, [sp, #144]	; 0x90
   12a20:	add	r0, r4, #132	; 0x84
   12a24:	str	r0, [sp, #140]	; 0x8c
   12a28:	add	r0, r4, #128	; 0x80
   12a2c:	str	r0, [sp, #136]	; 0x88
   12a30:	add	r0, r4, #124	; 0x7c
   12a34:	str	r0, [sp, #132]	; 0x84
   12a38:	add	r0, r4, #120	; 0x78
   12a3c:	str	r0, [sp, #128]	; 0x80
   12a40:	add	r0, r4, #116	; 0x74
   12a44:	str	r0, [sp, #124]	; 0x7c
   12a48:	add	r0, r4, #112	; 0x70
   12a4c:	str	r0, [sp, #120]	; 0x78
   12a50:	add	r0, r4, #108	; 0x6c
   12a54:	str	r0, [sp, #116]	; 0x74
   12a58:	add	r0, r4, #104	; 0x68
   12a5c:	str	r0, [sp, #112]	; 0x70
   12a60:	add	r0, r4, #100	; 0x64
   12a64:	str	r0, [sp, #108]	; 0x6c
   12a68:	add	r0, r4, #96	; 0x60
   12a6c:	str	r0, [sp, #104]	; 0x68
   12a70:	add	r0, r4, #92	; 0x5c
   12a74:	str	r0, [sp, #100]	; 0x64
   12a78:	add	r0, r4, #88	; 0x58
   12a7c:	str	r0, [sp, #96]	; 0x60
   12a80:	add	r0, r4, #84	; 0x54
   12a84:	str	r0, [sp, #92]	; 0x5c
   12a88:	add	r0, r4, #80	; 0x50
   12a8c:	str	r0, [sp, #88]	; 0x58
   12a90:	add	r0, r4, #76	; 0x4c
   12a94:	str	r0, [sp, #84]	; 0x54
   12a98:	add	r0, r4, #72	; 0x48
   12a9c:	str	r0, [sp, #80]	; 0x50
   12aa0:	add	r0, r4, #68	; 0x44
   12aa4:	str	r0, [sp, #76]	; 0x4c
   12aa8:	add	r0, r4, #64	; 0x40
   12aac:	str	r0, [sp, #72]	; 0x48
   12ab0:	add	r0, r4, #60	; 0x3c
   12ab4:	str	r0, [sp, #68]	; 0x44
   12ab8:	add	r0, r4, #56	; 0x38
   12abc:	str	r0, [sp, #64]	; 0x40
   12ac0:	add	r0, r4, #52	; 0x34
   12ac4:	str	r0, [sp, #60]	; 0x3c
   12ac8:	add	r0, r4, #48	; 0x30
   12acc:	str	r0, [sp, #56]	; 0x38
   12ad0:	add	r0, r4, #44	; 0x2c
   12ad4:	str	r0, [sp, #52]	; 0x34
   12ad8:	add	r0, r4, #40	; 0x28
   12adc:	str	r0, [sp, #48]	; 0x30
   12ae0:	add	r0, r4, #36	; 0x24
   12ae4:	str	r0, [sp, #44]	; 0x2c
   12ae8:	add	r0, r4, #32
   12aec:	str	r0, [sp, #40]	; 0x28
   12af0:	add	r0, r4, #28
   12af4:	str	r0, [sp, #36]	; 0x24
   12af8:	add	r0, r4, #24
   12afc:	str	r0, [sp, #32]
   12b00:	add	r0, r4, #20
   12b04:	str	r0, [sp, #28]
   12b08:	add	r0, r4, #16
   12b0c:	str	r0, [sp, #24]
   12b10:	add	r0, r4, #12
   12b14:	str	r0, [sp, #20]
   12b18:	add	r0, r4, #8
   12b1c:	str	r0, [sp, #16]
   12b20:	add	r0, r4, #4
   12b24:	str	r0, [sp, #12]
   12b28:	sub	r0, r6, #256	; 0x100
   12b2c:	mov	r6, #0
   12b30:	str	r0, [sp, #8]
   12b34:	ldr	r3, [r5]
   12b38:	ldr	r1, [sp, #260]	; 0x104
   12b3c:	add	sl, sp, #408	; 0x198
   12b40:	mov	r2, #256	; 0x100
   12b44:	mov	r0, sl
   12b48:	bl	18b8 <fread@plt>
   12b4c:	vld1.32	{d16[0]}, [sl :32]
   12b50:	mov	r1, #1024	; 0x400
   12b54:	add	r7, r0, r7
   12b58:	ldr	r0, [sp, #8]
   12b5c:	add	r6, r6, #256	; 0x100
   12b60:	cmp	r6, r0
   12b64:	vmovl.u8	q8, d16
   12b68:	vmovl.u16	q8, d16
   12b6c:	vst1.32	{d16-d17}, [r8], r1
   12b70:	add	r1, r9, #16
   12b74:	vld1.32	{d16[0]}, [r4 :32]
   12b78:	vmovl.u8	q8, d16
   12b7c:	vmovl.u16	q8, d16
   12b80:	vst1.32	{d16-d17}, [r1]
   12b84:	ldr	r1, [sp, #12]
   12b88:	vld1.32	{d16[0]}, [r1 :32]
   12b8c:	add	r1, r9, #32
   12b90:	vmovl.u8	q8, d16
   12b94:	vmovl.u16	q8, d16
   12b98:	vst1.32	{d16-d17}, [r1]
   12b9c:	ldr	r1, [sp, #16]
   12ba0:	vld1.32	{d16[0]}, [r1 :32]
   12ba4:	add	r1, r9, #48	; 0x30
   12ba8:	vmovl.u8	q8, d16
   12bac:	vmovl.u16	q8, d16
   12bb0:	vst1.32	{d16-d17}, [r1]
   12bb4:	ldr	r1, [sp, #20]
   12bb8:	vld1.32	{d16[0]}, [r1 :32]
   12bbc:	add	r1, r9, #64	; 0x40
   12bc0:	vmovl.u8	q8, d16
   12bc4:	vmovl.u16	q8, d16
   12bc8:	vst1.32	{d16-d17}, [r1]
   12bcc:	ldr	r1, [sp, #24]
   12bd0:	vld1.32	{d16[0]}, [r1 :32]
   12bd4:	add	r1, r9, #80	; 0x50
   12bd8:	vmovl.u8	q8, d16
   12bdc:	vmovl.u16	q8, d16
   12be0:	vst1.32	{d16-d17}, [r1]
   12be4:	ldr	r1, [sp, #28]
   12be8:	vld1.32	{d16[0]}, [r1 :32]
   12bec:	add	r1, r9, #96	; 0x60
   12bf0:	vmovl.u8	q8, d16
   12bf4:	vmovl.u16	q8, d16
   12bf8:	vst1.32	{d16-d17}, [r1]
   12bfc:	ldr	r1, [sp, #32]
   12c00:	vld1.32	{d16[0]}, [r1 :32]
   12c04:	add	r1, r9, #112	; 0x70
   12c08:	vmovl.u8	q8, d16
   12c0c:	vmovl.u16	q8, d16
   12c10:	vst1.32	{d16-d17}, [r1]
   12c14:	ldr	r1, [sp, #36]	; 0x24
   12c18:	vld1.32	{d16[0]}, [r1 :32]
   12c1c:	add	r1, r9, #128	; 0x80
   12c20:	vmovl.u8	q8, d16
   12c24:	vmovl.u16	q8, d16
   12c28:	vst1.32	{d16-d17}, [r1]
   12c2c:	ldr	r1, [sp, #40]	; 0x28
   12c30:	vld1.32	{d16[0]}, [r1 :32]
   12c34:	add	r1, r9, #144	; 0x90
   12c38:	vmovl.u8	q8, d16
   12c3c:	vmovl.u16	q8, d16
   12c40:	vst1.32	{d16-d17}, [r1]
   12c44:	ldr	r1, [sp, #44]	; 0x2c
   12c48:	vld1.32	{d16[0]}, [r1 :32]
   12c4c:	add	r1, r9, #160	; 0xa0
   12c50:	vmovl.u8	q8, d16
   12c54:	vmovl.u16	q8, d16
   12c58:	vst1.32	{d16-d17}, [r1]
   12c5c:	ldr	r1, [sp, #48]	; 0x30
   12c60:	vld1.32	{d16[0]}, [r1 :32]
   12c64:	add	r1, r9, #176	; 0xb0
   12c68:	vmovl.u8	q8, d16
   12c6c:	vmovl.u16	q8, d16
   12c70:	vst1.32	{d16-d17}, [r1]
   12c74:	ldr	r1, [sp, #52]	; 0x34
   12c78:	vld1.32	{d16[0]}, [r1 :32]
   12c7c:	add	r1, r9, #192	; 0xc0
   12c80:	vmovl.u8	q8, d16
   12c84:	vmovl.u16	q8, d16
   12c88:	vst1.32	{d16-d17}, [r1]
   12c8c:	ldr	r1, [sp, #56]	; 0x38
   12c90:	vld1.32	{d16[0]}, [r1 :32]
   12c94:	add	r1, r9, #208	; 0xd0
   12c98:	vmovl.u8	q8, d16
   12c9c:	vmovl.u16	q8, d16
   12ca0:	vst1.32	{d16-d17}, [r1]
   12ca4:	ldr	r1, [sp, #60]	; 0x3c
   12ca8:	vld1.32	{d16[0]}, [r1 :32]
   12cac:	add	r1, r9, #224	; 0xe0
   12cb0:	vmovl.u8	q8, d16
   12cb4:	vmovl.u16	q8, d16
   12cb8:	vst1.32	{d16-d17}, [r1]
   12cbc:	ldr	r1, [sp, #64]	; 0x40
   12cc0:	vld1.32	{d16[0]}, [r1 :32]
   12cc4:	add	r1, r9, #240	; 0xf0
   12cc8:	vmovl.u8	q8, d16
   12ccc:	vmovl.u16	q8, d16
   12cd0:	vst1.32	{d16-d17}, [r1]
   12cd4:	ldr	r1, [sp, #68]	; 0x44
   12cd8:	vld1.32	{d16[0]}, [r1 :32]
   12cdc:	add	r1, r9, #256	; 0x100
   12ce0:	vmovl.u8	q8, d16
   12ce4:	vmovl.u16	q8, d16
   12ce8:	vst1.32	{d16-d17}, [r1]
   12cec:	ldr	r1, [sp, #72]	; 0x48
   12cf0:	vld1.32	{d16[0]}, [r1 :32]
   12cf4:	add	r1, r9, #272	; 0x110
   12cf8:	vmovl.u8	q8, d16
   12cfc:	vmovl.u16	q8, d16
   12d00:	vst1.32	{d16-d17}, [r1]
   12d04:	ldr	r1, [sp, #76]	; 0x4c
   12d08:	vld1.32	{d16[0]}, [r1 :32]
   12d0c:	add	r1, r9, #288	; 0x120
   12d10:	vmovl.u8	q8, d16
   12d14:	vmovl.u16	q8, d16
   12d18:	vst1.32	{d16-d17}, [r1]
   12d1c:	ldr	r1, [sp, #80]	; 0x50
   12d20:	vld1.32	{d16[0]}, [r1 :32]
   12d24:	add	r1, r9, #304	; 0x130
   12d28:	vmovl.u8	q8, d16
   12d2c:	vmovl.u16	q8, d16
   12d30:	vst1.32	{d16-d17}, [r1]
   12d34:	ldr	r1, [sp, #84]	; 0x54
   12d38:	vld1.32	{d16[0]}, [r1 :32]
   12d3c:	add	r1, r9, #320	; 0x140
   12d40:	vmovl.u8	q8, d16
   12d44:	vmovl.u16	q8, d16
   12d48:	vst1.32	{d16-d17}, [r1]
   12d4c:	ldr	r1, [sp, #88]	; 0x58
   12d50:	vld1.32	{d16[0]}, [r1 :32]
   12d54:	add	r1, r9, #336	; 0x150
   12d58:	vmovl.u8	q8, d16
   12d5c:	vmovl.u16	q8, d16
   12d60:	vst1.32	{d16-d17}, [r1]
   12d64:	ldr	r1, [sp, #92]	; 0x5c
   12d68:	vld1.32	{d16[0]}, [r1 :32]
   12d6c:	add	r1, r9, #352	; 0x160
   12d70:	vmovl.u8	q8, d16
   12d74:	vmovl.u16	q8, d16
   12d78:	vst1.32	{d16-d17}, [r1]
   12d7c:	ldr	r1, [sp, #96]	; 0x60
   12d80:	vld1.32	{d16[0]}, [r1 :32]
   12d84:	add	r1, r9, #368	; 0x170
   12d88:	vmovl.u8	q8, d16
   12d8c:	vmovl.u16	q8, d16
   12d90:	vst1.32	{d16-d17}, [r1]
   12d94:	ldr	r1, [sp, #100]	; 0x64
   12d98:	vld1.32	{d16[0]}, [r1 :32]
   12d9c:	add	r1, r9, #384	; 0x180
   12da0:	vmovl.u8	q8, d16
   12da4:	vmovl.u16	q8, d16
   12da8:	vst1.32	{d16-d17}, [r1]
   12dac:	ldr	r1, [sp, #104]	; 0x68
   12db0:	vld1.32	{d16[0]}, [r1 :32]
   12db4:	add	r1, r9, #400	; 0x190
   12db8:	vmovl.u8	q8, d16
   12dbc:	vmovl.u16	q8, d16
   12dc0:	vst1.32	{d16-d17}, [r1]
   12dc4:	ldr	r1, [sp, #108]	; 0x6c
   12dc8:	vld1.32	{d16[0]}, [r1 :32]
   12dcc:	add	r1, r9, #416	; 0x1a0
   12dd0:	vmovl.u8	q8, d16
   12dd4:	vmovl.u16	q8, d16
   12dd8:	vst1.32	{d16-d17}, [r1]
   12ddc:	ldr	r1, [sp, #112]	; 0x70
   12de0:	vld1.32	{d16[0]}, [r1 :32]
   12de4:	add	r1, r9, #432	; 0x1b0
   12de8:	vmovl.u8	q8, d16
   12dec:	vmovl.u16	q8, d16
   12df0:	vst1.32	{d16-d17}, [r1]
   12df4:	ldr	r1, [sp, #116]	; 0x74
   12df8:	vld1.32	{d16[0]}, [r1 :32]
   12dfc:	add	r1, r9, #448	; 0x1c0
   12e00:	vmovl.u8	q8, d16
   12e04:	vmovl.u16	q8, d16
   12e08:	vst1.32	{d16-d17}, [r1]
   12e0c:	ldr	r1, [sp, #120]	; 0x78
   12e10:	vld1.32	{d16[0]}, [r1 :32]
   12e14:	add	r1, r9, #464	; 0x1d0
   12e18:	vmovl.u8	q8, d16
   12e1c:	vmovl.u16	q8, d16
   12e20:	vst1.32	{d16-d17}, [r1]
   12e24:	ldr	r1, [sp, #124]	; 0x7c
   12e28:	vld1.32	{d16[0]}, [r1 :32]
   12e2c:	add	r1, r9, #480	; 0x1e0
   12e30:	vmovl.u8	q8, d16
   12e34:	vmovl.u16	q8, d16
   12e38:	vst1.32	{d16-d17}, [r1]
   12e3c:	ldr	r1, [sp, #128]	; 0x80
   12e40:	vld1.32	{d16[0]}, [r1 :32]
   12e44:	add	r1, r9, #496	; 0x1f0
   12e48:	vmovl.u8	q8, d16
   12e4c:	vmovl.u16	q8, d16
   12e50:	vst1.32	{d16-d17}, [r1]
   12e54:	ldr	r1, [sp, #132]	; 0x84
   12e58:	vld1.32	{d16[0]}, [r1 :32]
   12e5c:	add	r1, r9, #512	; 0x200
   12e60:	vmovl.u8	q8, d16
   12e64:	vmovl.u16	q8, d16
   12e68:	vst1.32	{d16-d17}, [r1]
   12e6c:	ldr	r1, [sp, #136]	; 0x88
   12e70:	vld1.32	{d16[0]}, [r1 :32]
   12e74:	add	r1, r9, #528	; 0x210
   12e78:	vmovl.u8	q8, d16
   12e7c:	vmovl.u16	q8, d16
   12e80:	vst1.32	{d16-d17}, [r1]
   12e84:	ldr	r1, [sp, #140]	; 0x8c
   12e88:	vld1.32	{d16[0]}, [r1 :32]
   12e8c:	add	r1, r9, #544	; 0x220
   12e90:	vmovl.u8	q8, d16
   12e94:	vmovl.u16	q8, d16
   12e98:	vst1.32	{d16-d17}, [r1]
   12e9c:	ldr	r1, [sp, #144]	; 0x90
   12ea0:	vld1.32	{d16[0]}, [r1 :32]
   12ea4:	add	r1, r9, #560	; 0x230
   12ea8:	vmovl.u8	q8, d16
   12eac:	vmovl.u16	q8, d16
   12eb0:	vst1.32	{d16-d17}, [r1]
   12eb4:	ldr	r1, [sp, #148]	; 0x94
   12eb8:	vld1.32	{d16[0]}, [r1 :32]
   12ebc:	add	r1, r9, #576	; 0x240
   12ec0:	vmovl.u8	q8, d16
   12ec4:	vmovl.u16	q8, d16
   12ec8:	vst1.32	{d16-d17}, [r1]
   12ecc:	ldr	r1, [sp, #152]	; 0x98
   12ed0:	vld1.32	{d16[0]}, [r1 :32]
   12ed4:	add	r1, r9, #592	; 0x250
   12ed8:	vmovl.u8	q8, d16
   12edc:	vmovl.u16	q8, d16
   12ee0:	vst1.32	{d16-d17}, [r1]
   12ee4:	ldr	r1, [sp, #156]	; 0x9c
   12ee8:	vld1.32	{d16[0]}, [r1 :32]
   12eec:	add	r1, r9, #608	; 0x260
   12ef0:	vmovl.u8	q8, d16
   12ef4:	vmovl.u16	q8, d16
   12ef8:	vst1.32	{d16-d17}, [r1]
   12efc:	ldr	r1, [sp, #160]	; 0xa0
   12f00:	vld1.32	{d16[0]}, [r1 :32]
   12f04:	add	r1, r9, #624	; 0x270
   12f08:	vmovl.u8	q8, d16
   12f0c:	vmovl.u16	q8, d16
   12f10:	vst1.32	{d16-d17}, [r1]
   12f14:	ldr	r1, [sp, #164]	; 0xa4
   12f18:	vld1.32	{d16[0]}, [r1 :32]
   12f1c:	add	r1, r9, #640	; 0x280
   12f20:	vmovl.u8	q8, d16
   12f24:	vmovl.u16	q8, d16
   12f28:	vst1.32	{d16-d17}, [r1]
   12f2c:	ldr	r1, [sp, #168]	; 0xa8
   12f30:	vld1.32	{d16[0]}, [r1 :32]
   12f34:	add	r1, r9, #656	; 0x290
   12f38:	vmovl.u8	q8, d16
   12f3c:	vmovl.u16	q8, d16
   12f40:	vst1.32	{d16-d17}, [r1]
   12f44:	ldr	r1, [sp, #172]	; 0xac
   12f48:	vld1.32	{d16[0]}, [r1 :32]
   12f4c:	add	r1, r9, #672	; 0x2a0
   12f50:	vmovl.u8	q8, d16
   12f54:	vmovl.u16	q8, d16
   12f58:	vst1.32	{d16-d17}, [r1]
   12f5c:	ldr	r1, [sp, #176]	; 0xb0
   12f60:	vld1.32	{d16[0]}, [r1 :32]
   12f64:	add	r1, r9, #688	; 0x2b0
   12f68:	vmovl.u8	q8, d16
   12f6c:	vmovl.u16	q8, d16
   12f70:	vst1.32	{d16-d17}, [r1]
   12f74:	ldr	r1, [sp, #180]	; 0xb4
   12f78:	vld1.32	{d16[0]}, [r1 :32]
   12f7c:	add	r1, r9, #704	; 0x2c0
   12f80:	vmovl.u8	q8, d16
   12f84:	vmovl.u16	q8, d16
   12f88:	vst1.32	{d16-d17}, [r1]
   12f8c:	ldr	r1, [sp, #184]	; 0xb8
   12f90:	vld1.32	{d16[0]}, [r1 :32]
   12f94:	add	r1, r9, #720	; 0x2d0
   12f98:	vmovl.u8	q8, d16
   12f9c:	vmovl.u16	q8, d16
   12fa0:	vst1.32	{d16-d17}, [r1]
   12fa4:	ldr	r1, [sp, #188]	; 0xbc
   12fa8:	vld1.32	{d16[0]}, [r1 :32]
   12fac:	add	r1, r9, #736	; 0x2e0
   12fb0:	vmovl.u8	q8, d16
   12fb4:	vmovl.u16	q8, d16
   12fb8:	vst1.32	{d16-d17}, [r1]
   12fbc:	ldr	r1, [sp, #192]	; 0xc0
   12fc0:	vld1.32	{d16[0]}, [r1 :32]
   12fc4:	add	r1, r9, #752	; 0x2f0
   12fc8:	vmovl.u8	q8, d16
   12fcc:	vmovl.u16	q8, d16
   12fd0:	vst1.32	{d16-d17}, [r1]
   12fd4:	ldr	r1, [sp, #196]	; 0xc4
   12fd8:	vld1.32	{d16[0]}, [r1 :32]
   12fdc:	add	r1, r9, #768	; 0x300
   12fe0:	vmovl.u8	q8, d16
   12fe4:	vmovl.u16	q8, d16
   12fe8:	vst1.32	{d16-d17}, [r1]
   12fec:	ldr	r1, [sp, #200]	; 0xc8
   12ff0:	vld1.32	{d16[0]}, [r1 :32]
   12ff4:	add	r1, r9, #784	; 0x310
   12ff8:	vmovl.u8	q8, d16
   12ffc:	vmovl.u16	q8, d16
   13000:	vst1.32	{d16-d17}, [r1]
   13004:	ldr	r1, [sp, #204]	; 0xcc
   13008:	vld1.32	{d16[0]}, [r1 :32]
   1300c:	add	r1, r9, #800	; 0x320
   13010:	vmovl.u8	q8, d16
   13014:	vmovl.u16	q8, d16
   13018:	vst1.32	{d16-d17}, [r1]
   1301c:	ldr	r1, [sp, #208]	; 0xd0
   13020:	vld1.32	{d16[0]}, [r1 :32]
   13024:	add	r1, r9, #816	; 0x330
   13028:	vmovl.u8	q8, d16
   1302c:	vmovl.u16	q8, d16
   13030:	vst1.32	{d16-d17}, [r1]
   13034:	ldr	r1, [sp, #212]	; 0xd4
   13038:	vld1.32	{d16[0]}, [r1 :32]
   1303c:	add	r1, r9, #832	; 0x340
   13040:	vmovl.u8	q8, d16
   13044:	vmovl.u16	q8, d16
   13048:	vst1.32	{d16-d17}, [r1]
   1304c:	ldr	r1, [sp, #216]	; 0xd8
   13050:	vld1.32	{d16[0]}, [r1 :32]
   13054:	add	r1, r9, #848	; 0x350
   13058:	vmovl.u8	q8, d16
   1305c:	vmovl.u16	q8, d16
   13060:	vst1.32	{d16-d17}, [r1]
   13064:	ldr	r1, [sp, #220]	; 0xdc
   13068:	vld1.32	{d16[0]}, [r1 :32]
   1306c:	add	r1, r9, #864	; 0x360
   13070:	vmovl.u8	q8, d16
   13074:	vmovl.u16	q8, d16
   13078:	vst1.32	{d16-d17}, [r1]
   1307c:	ldr	r1, [sp, #224]	; 0xe0
   13080:	vld1.32	{d16[0]}, [r1 :32]
   13084:	add	r1, r9, #880	; 0x370
   13088:	vmovl.u8	q8, d16
   1308c:	vmovl.u16	q8, d16
   13090:	vst1.32	{d16-d17}, [r1]
   13094:	ldr	r1, [sp, #228]	; 0xe4
   13098:	vld1.32	{d16[0]}, [r1 :32]
   1309c:	add	r1, r9, #896	; 0x380
   130a0:	vmovl.u8	q8, d16
   130a4:	vmovl.u16	q8, d16
   130a8:	vst1.32	{d16-d17}, [r1]
   130ac:	ldr	r1, [sp, #232]	; 0xe8
   130b0:	vld1.32	{d16[0]}, [r1 :32]
   130b4:	add	r1, r9, #912	; 0x390
   130b8:	vmovl.u8	q8, d16
   130bc:	vmovl.u16	q8, d16
   130c0:	vst1.32	{d16-d17}, [r1]
   130c4:	ldr	r1, [sp, #236]	; 0xec
   130c8:	vld1.32	{d16[0]}, [r1 :32]
   130cc:	add	r1, r9, #928	; 0x3a0
   130d0:	vmovl.u8	q8, d16
   130d4:	vmovl.u16	q8, d16
   130d8:	vst1.32	{d16-d17}, [r1]
   130dc:	ldr	r1, [sp, #240]	; 0xf0
   130e0:	vld1.32	{d16[0]}, [r1 :32]
   130e4:	add	r1, r9, #944	; 0x3b0
   130e8:	vmovl.u8	q8, d16
   130ec:	vmovl.u16	q8, d16
   130f0:	vst1.32	{d16-d17}, [r1]
   130f4:	ldr	r1, [sp, #244]	; 0xf4
   130f8:	vld1.32	{d16[0]}, [r1 :32]
   130fc:	add	r1, r9, #960	; 0x3c0
   13100:	vmovl.u8	q8, d16
   13104:	vmovl.u16	q8, d16
   13108:	vst1.32	{d16-d17}, [r1]
   1310c:	ldr	r1, [sp, #248]	; 0xf8
   13110:	vld1.32	{d16[0]}, [r1 :32]
   13114:	add	r1, r9, #976	; 0x3d0
   13118:	vmovl.u8	q8, d16
   1311c:	vmovl.u16	q8, d16
   13120:	vst1.32	{d16-d17}, [r1]
   13124:	ldr	r1, [sp, #252]	; 0xfc
   13128:	vld1.32	{d16[0]}, [r1 :32]
   1312c:	add	r1, r9, #992	; 0x3e0
   13130:	vmovl.u8	q8, d16
   13134:	vmovl.u16	q8, d16
   13138:	vst1.32	{d16-d17}, [r1]
   1313c:	ldr	r1, [sp, #256]	; 0x100
   13140:	vld1.32	{d16[0]}, [r1 :32]
   13144:	add	r1, r9, #1008	; 0x3f0
   13148:	mov	r9, r8
   1314c:	vmovl.u8	q8, d16
   13150:	vmovl.u16	q8, d16
   13154:	vst1.32	{d16-d17}, [r1]
   13158:	blt	12b34 <ReadInt32Data+0x10b4>
   1315c:	ldr	r0, [sp, #4]
   13160:	ldr	sl, [sp, #260]	; 0x104
   13164:	cmp	r6, r0
   13168:	bge	1516c <ReadInt32Data+0x36ec>
   1316c:	ldr	r3, [r5]
   13170:	sub	r4, r0, r6
   13174:	add	r9, sp, #408	; 0x198
   13178:	mov	r1, sl
   1317c:	mov	r0, r9
   13180:	mov	r2, r4
   13184:	bl	18b8 <fread@plt>
   13188:	add	r7, r0, r7
   1318c:	cmp	r4, #1
   13190:	blt	1516c <ReadInt32Data+0x36ec>
   13194:	mov	r0, #0
   13198:	cmp	r4, #4
   1319c:	bcc	14b3c <ReadInt32Data+0x30bc>
   131a0:	bic	r0, r4, #3
   131a4:	mov	r2, #1
   131a8:	mov	lr, r7
   131ac:	subs	r1, r0, #4
   131b0:	add	r1, r2, r1, lsr #2
   131b4:	and	ip, r1, #1
   131b8:	beq	14afc <ReadInt32Data+0x307c>
   131bc:	bic	r3, r4, #3
   131c0:	sub	r3, r3, #4
   131c4:	add	r2, r2, r3, lsr #2
   131c8:	mvn	r7, r3, lsr #2
   131cc:	and	r2, r2, #1
   131d0:	add	r3, r7, r2
   131d4:	mov	r2, #0
   131d8:	mov	r7, #32
   131dc:	add	r5, r9, r2
   131e0:	add	r1, r8, #16
   131e4:	adds	r3, r3, #2
   131e8:	add	r2, r2, #8
   131ec:	vld1.32	{d16[0]}, [r5 :32]
   131f0:	add	r5, r5, #4
   131f4:	vmovl.u8	q8, d16
   131f8:	vmovl.u16	q8, d16
   131fc:	vst1.32	{d16-d17}, [r8], r7
   13200:	vld1.32	{d16[0]}, [r5 :32]
   13204:	vmovl.u8	q8, d16
   13208:	vmovl.u16	q8, d16
   1320c:	vst1.32	{d16-d17}, [r1]
   13210:	bne	131dc <ReadInt32Data+0x175c>
   13214:	b	14b00 <ReadInt32Data+0x3080>
   13218:	cmp	r6, #256	; 0x100
   1321c:	bgt	13d78 <ReadInt32Data+0x22f8>
   13220:	ldr	r3, [r5]
   13224:	add	r4, sp, #408	; 0x198
   13228:	mov	r1, sl
   1322c:	mov	r2, r6
   13230:	mov	r0, r4
   13234:	bl	18b8 <fread@plt>
   13238:	mov	r7, r0
   1323c:	cmp	r6, #1
   13240:	blt	1516c <ReadInt32Data+0x36ec>
   13244:	mov	lr, #0
   13248:	cmp	r6, #4
   1324c:	bcc	14bbc <ReadInt32Data+0x313c>
   13250:	bic	lr, r6, #3
   13254:	mov	r2, #1
   13258:	str	sl, [sp, #260]	; 0x104
   1325c:	mov	sl, r6
   13260:	str	r8, [sp]
   13264:	str	r7, [sp, #252]	; 0xfc
   13268:	subs	r1, lr, #4
   1326c:	add	r1, r2, r1, lsr #2
   13270:	and	ip, r1, #1
   13274:	beq	14b6c <ReadInt32Data+0x30ec>
   13278:	ldr	r2, [sp]
   1327c:	sub	r3, r1, ip
   13280:	mov	r1, #0
   13284:	add	r8, sp, #272	; 0x110
   13288:	mov	r9, #32
   1328c:	add	r5, sp, #280	; 0x118
   13290:	ldr	r0, [r4]
   13294:	ldr	r7, [r4, #4]
   13298:	subs	r3, r3, #2
   1329c:	add	r1, r1, #8
   132a0:	str	r0, [sp, #272]	; 0x110
   132a4:	str	r7, [sp, #276]	; 0x114
   132a8:	add	r0, r2, #16
   132ac:	vld1.16	{d16}, [r8 :64]
   132b0:	vmovl.s16	q8, d16
   132b4:	vst1.32	{d16-d17}, [r2], r9
   132b8:	ldr	r7, [r4, #8]
   132bc:	ldr	r6, [r4, #12]
   132c0:	add	r4, r4, #16
   132c4:	str	r6, [sp, #284]	; 0x11c
   132c8:	str	r7, [sp, #280]	; 0x118
   132cc:	vld1.16	{d16}, [r5 :64]
   132d0:	vmovl.s16	q8, d16
   132d4:	vst1.32	{d16-d17}, [r0]
   132d8:	bne	13290 <ReadInt32Data+0x1810>
   132dc:	b	14b70 <ReadInt32Data+0x30f0>
   132e0:	cmp	r6, #256	; 0x100
   132e4:	bgt	13f54 <ReadInt32Data+0x24d4>
   132e8:	ldr	r3, [r5]
   132ec:	add	r4, sp, #408	; 0x198
   132f0:	mov	r1, sl
   132f4:	mov	r2, r6
   132f8:	mov	r0, r4
   132fc:	bl	18b8 <fread@plt>
   13300:	mov	r7, r0
   13304:	cmp	r6, #1
   13308:	blt	1516c <ReadInt32Data+0x36ec>
   1330c:	mov	lr, #0
   13310:	cmp	r6, #4
   13314:	bcc	14c30 <ReadInt32Data+0x31b0>
   13318:	bic	lr, r6, #3
   1331c:	mov	r2, #1
   13320:	str	sl, [sp, #260]	; 0x104
   13324:	mov	sl, r6
   13328:	str	r8, [sp]
   1332c:	str	r7, [sp, #252]	; 0xfc
   13330:	subs	r1, lr, #4
   13334:	add	r1, r2, r1, lsr #2
   13338:	and	ip, r1, #1
   1333c:	beq	14be0 <ReadInt32Data+0x3160>
   13340:	ldr	r2, [sp]
   13344:	sub	r3, r1, ip
   13348:	mov	r1, #0
   1334c:	add	r8, sp, #336	; 0x150
   13350:	mov	r9, #32
   13354:	add	r5, sp, #344	; 0x158
   13358:	ldr	r0, [r4]
   1335c:	ldr	r7, [r4, #4]
   13360:	subs	r3, r3, #2
   13364:	add	r1, r1, #8
   13368:	str	r0, [sp, #336]	; 0x150
   1336c:	str	r7, [sp, #340]	; 0x154
   13370:	add	r0, r2, #16
   13374:	vld1.16	{d16}, [r8 :64]
   13378:	vmovl.u16	q8, d16
   1337c:	vst1.32	{d16-d17}, [r2], r9
   13380:	ldr	r7, [r4, #8]
   13384:	ldr	r6, [r4, #12]
   13388:	add	r4, r4, #16
   1338c:	str	r6, [sp, #348]	; 0x15c
   13390:	str	r7, [sp, #344]	; 0x158
   13394:	vld1.16	{d16}, [r5 :64]
   13398:	vmovl.u16	q8, d16
   1339c:	vst1.32	{d16-d17}, [r0]
   133a0:	bne	13358 <ReadInt32Data+0x18d8>
   133a4:	b	14be4 <ReadInt32Data+0x3164>
   133a8:	cmp	r6, #256	; 0x100
   133ac:	ble	13474 <ReadInt32Data+0x19f4>
   133b0:	sub	r0, r6, #256	; 0x100
   133b4:	str	sl, [sp, #260]	; 0x104
   133b8:	mov	sl, r8
   133bc:	mov	r8, r5
   133c0:	lsl	r4, r6, #2
   133c4:	mov	r5, #0
   133c8:	mov	r7, #0
   133cc:	str	r6, [sp, #4]
   133d0:	str	r0, [sp, #256]	; 0x100
   133d4:	ldr	r3, [r8]
   133d8:	ldr	r1, [sp, #260]	; 0x104
   133dc:	add	r9, sp, #408	; 0x198
   133e0:	mov	r2, #256	; 0x100
   133e4:	mov	r0, r9
   133e8:	bl	18b8 <fread@plt>
   133ec:	mov	r6, r0
   133f0:	add	r0, sl, r5, lsl #2
   133f4:	mov	r1, r9
   133f8:	mov	r2, #1024	; 0x400
   133fc:	bl	181c <memcpy@plt>
   13400:	ldr	r0, [sp, #256]	; 0x100
   13404:	add	r5, r5, #256	; 0x100
   13408:	add	r7, r6, r7
   1340c:	sub	r4, r4, #1024	; 0x400
   13410:	cmp	r5, r0
   13414:	blt	133d4 <ReadInt32Data+0x1954>
   13418:	ldr	r0, [sp, #4]
   1341c:	ldr	r9, [sp, #260]	; 0x104
   13420:	cmp	r5, r0
   13424:	bge	1345c <ReadInt32Data+0x19dc>
   13428:	ldr	r3, [r8]
   1342c:	sub	r6, r0, r5
   13430:	add	r0, sp, #408	; 0x198
   13434:	mov	r1, r9
   13438:	mov	r2, r6
   1343c:	bl	18b8 <fread@plt>
   13440:	add	r7, r0, r7
   13444:	cmp	r6, #1
   13448:	blt	1345c <ReadInt32Data+0x19dc>
   1344c:	add	r0, sl, r5, lsl #2
   13450:	add	r1, sp, #408	; 0x198
   13454:	mov	r2, r4
   13458:	bl	181c <memcpy@plt>
   1345c:	mov	sl, r9
   13460:	mul	r0, r7, sl
   13464:	sub	sp, fp, #28
   13468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1346c:	cmp	r6, #256	; 0x100
   13470:	bgt	14130 <ReadInt32Data+0x26b0>
   13474:	ldr	r3, [r5]
   13478:	add	r0, sp, #408	; 0x198
   1347c:	mov	r1, sl
   13480:	mov	r2, r6
   13484:	bl	18b8 <fread@plt>
   13488:	mov	r7, r0
   1348c:	cmp	r6, #1
   13490:	blt	1516c <ReadInt32Data+0x36ec>
   13494:	lsl	r2, r6, #2
   13498:	add	r1, sp, #408	; 0x198
   1349c:	mov	r0, r8
   134a0:	bl	181c <memcpy@plt>
   134a4:	mul	r0, r7, sl
   134a8:	sub	sp, fp, #28
   134ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134b0:	cmp	r6, #256	; 0x100
   134b4:	bgt	141ec <ReadInt32Data+0x276c>
   134b8:	ldr	r3, [r5]
   134bc:	add	r4, sp, #408	; 0x198
   134c0:	mov	r1, sl
   134c4:	mov	r2, r6
   134c8:	mov	r0, r4
   134cc:	bl	18b8 <fread@plt>
   134d0:	mov	r7, r0
   134d4:	cmp	r6, #1
   134d8:	blt	1516c <ReadInt32Data+0x36ec>
   134dc:	mov	r0, #0
   134e0:	cmp	r6, #4
   134e4:	bcc	14c8c <ReadInt32Data+0x320c>
   134e8:	bic	r0, r6, #3
   134ec:	mov	r2, #1
   134f0:	mov	r9, r8
   134f4:	mov	r8, r6
   134f8:	mov	lr, r7
   134fc:	subs	r1, r0, #4
   13500:	add	r1, r2, r1, lsr #2
   13504:	and	ip, r1, #1
   13508:	beq	14c54 <ReadInt32Data+0x31d4>
   1350c:	sub	r3, r1, ip
   13510:	mov	r1, #0
   13514:	mov	r7, #32
   13518:	mov	r6, r9
   1351c:	add	r5, r4, #16
   13520:	vld1.32	{d16-d17}, [r4], r7
   13524:	add	r2, r6, #16
   13528:	subs	r3, r3, #2
   1352c:	add	r1, r1, #8
   13530:	vcvt.s32.f32	q8, q8
   13534:	vst1.32	{d16-d17}, [r6], r7
   13538:	vld1.32	{d16-d17}, [r5]
   1353c:	vcvt.s32.f32	q8, q8
   13540:	vst1.32	{d16-d17}, [r2]
   13544:	bne	1351c <ReadInt32Data+0x1a9c>
   13548:	b	14c58 <ReadInt32Data+0x31d8>
   1354c:	cmp	r6, #256	; 0x100
   13550:	bgt	14358 <ReadInt32Data+0x28d8>
   13554:	ldr	r3, [r5]
   13558:	add	r7, sp, #408	; 0x198
   1355c:	mov	r1, sl
   13560:	mov	r2, r6
   13564:	mov	r0, r7
   13568:	bl	18b8 <fread@plt>
   1356c:	cmp	r6, #1
   13570:	blt	14d30 <ReadInt32Data+0x32b0>
   13574:	mov	lr, #0
   13578:	beq	14d04 <ReadInt32Data+0x3284>
   1357c:	bic	lr, r6, #1
   13580:	mov	r1, #1
   13584:	str	r6, [sp, #4]
   13588:	str	r8, [sp]
   1358c:	subs	r2, lr, #2
   13590:	add	r1, r1, r2, lsr #1
   13594:	and	ip, r1, #1
   13598:	beq	14cbc <ReadInt32Data+0x323c>
   1359c:	mov	r6, r8
   135a0:	sub	r3, r1, ip
   135a4:	mov	r1, #0
   135a8:	mov	r8, #32
   135ac:	mov	r9, #16
   135b0:	mov	r4, r7
   135b4:	mov	r5, r6
   135b8:	vld1.64	{d16-d17}, [r4], r8
   135bc:	subs	r3, r3, #2
   135c0:	add	r1, r1, #4
   135c4:	vcvt.s32.f64	s0, d16
   135c8:	vcvt.s32.f64	s2, d17
   135cc:	vmov	r2, s0
   135d0:	vmov.32	d16[0], r2
   135d4:	vmov	r2, s2
   135d8:	vmov.32	d16[1], r2
   135dc:	add	r2, r7, #16
   135e0:	mov	r7, r4
   135e4:	vst1.32	{d16}, [r5], r9
   135e8:	vld1.64	{d16-d17}, [r2]
   135ec:	vcvt.s32.f64	s0, d16
   135f0:	vcvt.s32.f64	s2, d17
   135f4:	vmov	r2, s0
   135f8:	vmov.32	d16[0], r2
   135fc:	vmov	r2, s2
   13600:	vmov.32	d16[1], r2
   13604:	vstr	d16, [r6, #8]
   13608:	mov	r6, r5
   1360c:	bne	135b8 <ReadInt32Data+0x1b38>
   13610:	b	14cc0 <ReadInt32Data+0x3240>
   13614:	cmp	r6, #256	; 0x100
   13618:	bgt	14540 <ReadInt32Data+0x2ac0>
   1361c:	ldr	r3, [r5]
   13620:	add	r4, sp, #408	; 0x198
   13624:	mov	r1, sl
   13628:	mov	r2, r6
   1362c:	mov	r0, r4
   13630:	bl	18b8 <fread@plt>
   13634:	mov	r7, r0
   13638:	cmp	r6, #1
   1363c:	blt	14704 <ReadInt32Data+0x2c84>
   13640:	mov	lr, #0
   13644:	beq	14d8c <ReadInt32Data+0x330c>
   13648:	bic	lr, r6, #1
   1364c:	mov	r2, #1
   13650:	str	r9, [sp, #244]	; 0xf4
   13654:	mov	r9, r5
   13658:	str	sl, [sp, #260]	; 0x104
   1365c:	str	r6, [sp, #4]
   13660:	subs	r1, lr, #2
   13664:	add	r1, r2, r1, lsr #1
   13668:	and	ip, r1, #1
   1366c:	beq	14d40 <ReadInt32Data+0x32c0>
   13670:	mov	r2, r8
   13674:	mov	r8, r7
   13678:	sub	r3, r1, ip
   1367c:	mov	r1, #0
   13680:	mov	r7, #32
   13684:	mov	r6, #16
   13688:	mov	sl, r2
   1368c:	mov	r5, r2
   13690:	add	r0, r4, #16
   13694:	vld1.64	{d16-d17}, [r4], r7
   13698:	subs	r3, r3, #2
   1369c:	add	r1, r1, #4
   136a0:	vmovn.i64	d16, q8
   136a4:	vst1.32	{d16}, [r5], r6
   136a8:	vld1.64	{d16-d17}, [r0]
   136ac:	vmovn.i64	d16, q8
   136b0:	vstr	d16, [r2, #8]
   136b4:	mov	r2, r5
   136b8:	bne	13690 <ReadInt32Data+0x1c10>
   136bc:	b	14d4c <ReadInt32Data+0x32cc>
   136c0:	mov	r0, r8
   136c4:	sub	r0, r6, #256	; 0x100
   136c8:	add	r1, r8, #1024	; 0x400
   136cc:	add	r4, sp, #408	; 0x198
   136d0:	mov	r7, #0
   136d4:	str	r5, [sp, #256]	; 0x100
   136d8:	str	sl, [sp, #260]	; 0x104
   136dc:	str	r6, [sp, #4]
   136e0:	str	r0, [sp, #252]	; 0xfc
   136e4:	mov	r0, #0
   136e8:	mov	r9, r0
   136ec:	ldr	r0, [sp, #256]	; 0x100
   136f0:	mov	r5, r1
   136f4:	ldr	r1, [sp, #260]	; 0x104
   136f8:	mov	r2, #256	; 0x100
   136fc:	mov	sl, r7
   13700:	ldr	r3, [r0]
   13704:	mov	r0, r4
   13708:	bl	18b8 <fread@plt>
   1370c:	mov	r6, r0
   13710:	mov	r7, #0
   13714:	add	r0, r4, r7
   13718:	bl	1c20 <Mat_int16Swap>
   1371c:	str	r0, [r8, r7, lsl #1]
   13720:	add	r7, r7, #2
   13724:	cmp	r7, #512	; 0x200
   13728:	bne	13714 <ReadInt32Data+0x1c94>
   1372c:	ldr	r2, [sp, #252]	; 0xfc
   13730:	add	r0, r9, #256	; 0x100
   13734:	mov	r7, sl
   13738:	add	r7, r6, sl
   1373c:	add	r8, r8, #1024	; 0x400
   13740:	add	r1, r5, #1024	; 0x400
   13744:	cmp	r0, r2
   13748:	blt	136e8 <ReadInt32Data+0x1c68>
   1374c:	ldr	r8, [sp, #4]
   13750:	cmp	r0, r8
   13754:	bge	15168 <ReadInt32Data+0x36e8>
   13758:	sub	r6, r8, r0
   1375c:	ldr	r0, [sp, #256]	; 0x100
   13760:	ldr	sl, [sp, #260]	; 0x104
   13764:	add	r4, sp, #408	; 0x198
   13768:	mov	r2, r6
   1376c:	ldr	r3, [r0]
   13770:	mov	r0, r4
   13774:	mov	r1, sl
   13778:	bl	18b8 <fread@plt>
   1377c:	add	r7, r0, r7
   13780:	cmp	r6, #1
   13784:	blt	1516c <ReadInt32Data+0x36ec>
   13788:	sub	r0, r8, r9
   1378c:	sub	r6, r0, #256	; 0x100
   13790:	mov	r0, r4
   13794:	bl	1c20 <Mat_int16Swap>
   13798:	str	r0, [r5], #4
   1379c:	add	r4, r4, #2
   137a0:	subs	r6, r6, #1
   137a4:	bne	13790 <ReadInt32Data+0x1d10>
   137a8:	b	1516c <ReadInt32Data+0x36ec>
   137ac:	mov	r0, r8
   137b0:	sub	r0, r6, #256	; 0x100
   137b4:	add	r1, r8, #1024	; 0x400
   137b8:	add	r4, sp, #408	; 0x198
   137bc:	mov	r7, #0
   137c0:	str	r5, [sp, #256]	; 0x100
   137c4:	str	sl, [sp, #260]	; 0x104
   137c8:	str	r6, [sp, #4]
   137cc:	str	r0, [sp, #252]	; 0xfc
   137d0:	mov	r0, #0
   137d4:	mov	r9, r0
   137d8:	ldr	r0, [sp, #256]	; 0x100
   137dc:	mov	r5, r1
   137e0:	ldr	r1, [sp, #260]	; 0x104
   137e4:	mov	r2, #256	; 0x100
   137e8:	mov	sl, r7
   137ec:	ldr	r3, [r0]
   137f0:	mov	r0, r4
   137f4:	bl	18b8 <fread@plt>
   137f8:	mov	r6, r0
   137fc:	mov	r7, #0
   13800:	add	r0, r4, r7
   13804:	bl	1c34 <Mat_uint16Swap>
   13808:	str	r0, [r8, r7, lsl #1]
   1380c:	add	r7, r7, #2
   13810:	cmp	r7, #512	; 0x200
   13814:	bne	13800 <ReadInt32Data+0x1d80>
   13818:	ldr	r2, [sp, #252]	; 0xfc
   1381c:	add	r0, r9, #256	; 0x100
   13820:	mov	r7, sl
   13824:	add	r7, r6, sl
   13828:	add	r8, r8, #1024	; 0x400
   1382c:	add	r1, r5, #1024	; 0x400
   13830:	cmp	r0, r2
   13834:	blt	137d4 <ReadInt32Data+0x1d54>
   13838:	ldr	r8, [sp, #4]
   1383c:	cmp	r0, r8
   13840:	bge	15168 <ReadInt32Data+0x36e8>
   13844:	sub	r6, r8, r0
   13848:	ldr	r0, [sp, #256]	; 0x100
   1384c:	ldr	sl, [sp, #260]	; 0x104
   13850:	add	r4, sp, #408	; 0x198
   13854:	mov	r2, r6
   13858:	ldr	r3, [r0]
   1385c:	mov	r0, r4
   13860:	mov	r1, sl
   13864:	bl	18b8 <fread@plt>
   13868:	add	r7, r0, r7
   1386c:	cmp	r6, #1
   13870:	blt	1516c <ReadInt32Data+0x36ec>
   13874:	sub	r0, r8, r9
   13878:	sub	r6, r0, #256	; 0x100
   1387c:	mov	r0, r4
   13880:	bl	1c34 <Mat_uint16Swap>
   13884:	str	r0, [r5], #4
   13888:	add	r4, r4, #2
   1388c:	subs	r6, r6, #1
   13890:	bne	1387c <ReadInt32Data+0x1dfc>
   13894:	b	1516c <ReadInt32Data+0x36ec>
   13898:	mov	r0, r8
   1389c:	sub	r0, r6, #256	; 0x100
   138a0:	add	r1, r8, #1024	; 0x400
   138a4:	add	r4, sp, #408	; 0x198
   138a8:	mov	r7, #0
   138ac:	str	r5, [sp, #256]	; 0x100
   138b0:	str	sl, [sp, #260]	; 0x104
   138b4:	str	r6, [sp, #4]
   138b8:	str	r0, [sp, #252]	; 0xfc
   138bc:	mov	r0, #0
   138c0:	mov	r9, r0
   138c4:	ldr	r0, [sp, #256]	; 0x100
   138c8:	mov	r5, r1
   138cc:	ldr	r1, [sp, #260]	; 0x104
   138d0:	mov	r2, #256	; 0x100
   138d4:	mov	sl, r7
   138d8:	ldr	r3, [r0]
   138dc:	mov	r0, r4
   138e0:	bl	18b8 <fread@plt>
   138e4:	mov	r6, r0
   138e8:	mov	r7, #0
   138ec:	add	r0, r4, r7
   138f0:	bl	1bf8 <Mat_int32Swap>
   138f4:	str	r0, [r8, r7]
   138f8:	add	r7, r7, #4
   138fc:	cmp	r7, #1024	; 0x400
   13900:	bne	138ec <ReadInt32Data+0x1e6c>
   13904:	ldr	r2, [sp, #252]	; 0xfc
   13908:	add	r0, r9, #256	; 0x100
   1390c:	mov	r7, sl
   13910:	add	r7, r6, sl
   13914:	add	r8, r8, #1024	; 0x400
   13918:	add	r1, r5, #1024	; 0x400
   1391c:	cmp	r0, r2
   13920:	blt	138c0 <ReadInt32Data+0x1e40>
   13924:	ldr	r8, [sp, #4]
   13928:	cmp	r0, r8
   1392c:	bge	15168 <ReadInt32Data+0x36e8>
   13930:	sub	r6, r8, r0
   13934:	ldr	r0, [sp, #256]	; 0x100
   13938:	ldr	sl, [sp, #260]	; 0x104
   1393c:	add	r4, sp, #408	; 0x198
   13940:	mov	r2, r6
   13944:	ldr	r3, [r0]
   13948:	mov	r0, r4
   1394c:	mov	r1, sl
   13950:	bl	18b8 <fread@plt>
   13954:	add	r7, r0, r7
   13958:	cmp	r6, #1
   1395c:	blt	1516c <ReadInt32Data+0x36ec>
   13960:	sub	r0, r8, r9
   13964:	sub	r6, r0, #256	; 0x100
   13968:	mov	r0, r4
   1396c:	bl	1bf8 <Mat_int32Swap>
   13970:	str	r0, [r5], #4
   13974:	add	r4, r4, #4
   13978:	subs	r6, r6, #1
   1397c:	bne	13968 <ReadInt32Data+0x1ee8>
   13980:	b	1516c <ReadInt32Data+0x36ec>
   13984:	mov	r0, r8
   13988:	sub	r0, r6, #256	; 0x100
   1398c:	add	r1, r8, #1024	; 0x400
   13990:	add	r4, sp, #408	; 0x198
   13994:	mov	r7, #0
   13998:	str	r5, [sp, #256]	; 0x100
   1399c:	str	sl, [sp, #260]	; 0x104
   139a0:	str	r6, [sp, #4]
   139a4:	str	r0, [sp, #252]	; 0xfc
   139a8:	mov	r0, #0
   139ac:	mov	r9, r0
   139b0:	ldr	r0, [sp, #256]	; 0x100
   139b4:	mov	r5, r1
   139b8:	ldr	r1, [sp, #260]	; 0x104
   139bc:	mov	r2, #256	; 0x100
   139c0:	mov	sl, r7
   139c4:	ldr	r3, [r0]
   139c8:	mov	r0, r4
   139cc:	bl	18b8 <fread@plt>
   139d0:	mov	r6, r0
   139d4:	mov	r7, #0
   139d8:	add	r0, r4, r7
   139dc:	bl	1c0c <Mat_uint32Swap>
   139e0:	str	r0, [r8, r7]
   139e4:	add	r7, r7, #4
   139e8:	cmp	r7, #1024	; 0x400
   139ec:	bne	139d8 <ReadInt32Data+0x1f58>
   139f0:	ldr	r2, [sp, #252]	; 0xfc
   139f4:	add	r0, r9, #256	; 0x100
   139f8:	mov	r7, sl
   139fc:	add	r7, r6, sl
   13a00:	add	r8, r8, #1024	; 0x400
   13a04:	add	r1, r5, #1024	; 0x400
   13a08:	cmp	r0, r2
   13a0c:	blt	139ac <ReadInt32Data+0x1f2c>
   13a10:	ldr	r8, [sp, #4]
   13a14:	cmp	r0, r8
   13a18:	bge	15168 <ReadInt32Data+0x36e8>
   13a1c:	sub	r6, r8, r0
   13a20:	ldr	r0, [sp, #256]	; 0x100
   13a24:	ldr	sl, [sp, #260]	; 0x104
   13a28:	add	r4, sp, #408	; 0x198
   13a2c:	mov	r2, r6
   13a30:	ldr	r3, [r0]
   13a34:	mov	r0, r4
   13a38:	mov	r1, sl
   13a3c:	bl	18b8 <fread@plt>
   13a40:	add	r7, r0, r7
   13a44:	cmp	r6, #1
   13a48:	blt	1516c <ReadInt32Data+0x36ec>
   13a4c:	sub	r0, r8, r9
   13a50:	sub	r6, r0, #256	; 0x100
   13a54:	mov	r0, r4
   13a58:	bl	1c0c <Mat_uint32Swap>
   13a5c:	str	r0, [r5], #4
   13a60:	add	r4, r4, #4
   13a64:	subs	r6, r6, #1
   13a68:	bne	13a54 <ReadInt32Data+0x1fd4>
   13a6c:	b	1516c <ReadInt32Data+0x36ec>
   13a70:	mov	r0, r8
   13a74:	sub	r0, r6, #256	; 0x100
   13a78:	add	r1, r8, #1024	; 0x400
   13a7c:	add	r4, sp, #408	; 0x198
   13a80:	mov	r7, #0
   13a84:	str	r5, [sp, #256]	; 0x100
   13a88:	str	sl, [sp, #260]	; 0x104
   13a8c:	str	r6, [sp, #4]
   13a90:	str	r0, [sp, #252]	; 0xfc
   13a94:	mov	r0, #0
   13a98:	mov	r9, r0
   13a9c:	ldr	r0, [sp, #256]	; 0x100
   13aa0:	mov	r5, r1
   13aa4:	ldr	r1, [sp, #260]	; 0x104
   13aa8:	mov	r2, #256	; 0x100
   13aac:	mov	sl, r7
   13ab0:	ldr	r3, [r0]
   13ab4:	mov	r0, r4
   13ab8:	bl	18b8 <fread@plt>
   13abc:	mov	r6, r0
   13ac0:	mov	r7, #0
   13ac4:	add	r0, r4, r7
   13ac8:	bl	1c4c <Mat_floatSwap>
   13acc:	vcvt.s32.f32	s0, s0
   13ad0:	vmov	r0, s0
   13ad4:	str	r0, [r8, r7]
   13ad8:	add	r7, r7, #4
   13adc:	cmp	r7, #1024	; 0x400
   13ae0:	bne	13ac4 <ReadInt32Data+0x2044>
   13ae4:	ldr	r2, [sp, #252]	; 0xfc
   13ae8:	add	r0, r9, #256	; 0x100
   13aec:	mov	r7, sl
   13af0:	add	r7, r6, sl
   13af4:	add	r8, r8, #1024	; 0x400
   13af8:	add	r1, r5, #1024	; 0x400
   13afc:	cmp	r0, r2
   13b00:	blt	13a98 <ReadInt32Data+0x2018>
   13b04:	ldr	r8, [sp, #4]
   13b08:	cmp	r0, r8
   13b0c:	bge	15168 <ReadInt32Data+0x36e8>
   13b10:	sub	r6, r8, r0
   13b14:	ldr	r0, [sp, #256]	; 0x100
   13b18:	ldr	sl, [sp, #260]	; 0x104
   13b1c:	add	r4, sp, #408	; 0x198
   13b20:	mov	r2, r6
   13b24:	ldr	r3, [r0]
   13b28:	mov	r0, r4
   13b2c:	mov	r1, sl
   13b30:	bl	18b8 <fread@plt>
   13b34:	add	r7, r0, r7
   13b38:	cmp	r6, #1
   13b3c:	blt	1516c <ReadInt32Data+0x36ec>
   13b40:	sub	r0, r8, r9
   13b44:	sub	r6, r0, #256	; 0x100
   13b48:	mov	r0, r4
   13b4c:	bl	1c4c <Mat_floatSwap>
   13b50:	vcvt.s32.f32	s0, s0
   13b54:	add	r4, r4, #4
   13b58:	subs	r6, r6, #1
   13b5c:	vmov	r0, s0
   13b60:	str	r0, [r5], #4
   13b64:	bne	13b48 <ReadInt32Data+0x20c8>
   13b68:	b	1516c <ReadInt32Data+0x36ec>
   13b6c:	sub	r0, r6, #256	; 0x100
   13b70:	str	r5, [sp, #256]	; 0x100
   13b74:	mov	r5, r8
   13b78:	add	r1, r8, #1024	; 0x400
   13b7c:	mov	r7, #0
   13b80:	str	sl, [sp, #260]	; 0x104
   13b84:	str	r6, [sp, #4]
   13b88:	str	r0, [sp, #252]	; 0xfc
   13b8c:	mov	r0, #0
   13b90:	mov	r8, r0
   13b94:	ldr	r0, [sp, #256]	; 0x100
   13b98:	mov	sl, r1
   13b9c:	ldr	r1, [sp, #260]	; 0x104
   13ba0:	add	r4, sp, #408	; 0x198
   13ba4:	mov	r2, #256	; 0x100
   13ba8:	mov	r9, r7
   13bac:	ldr	r3, [r0]
   13bb0:	mov	r0, r4
   13bb4:	bl	18b8 <fread@plt>
   13bb8:	mov	r6, r0
   13bbc:	mov	r7, #0
   13bc0:	mov	r0, r4
   13bc4:	bl	1c90 <Mat_doubleSwap>
   13bc8:	vcvt.s32.f64	s0, d0
   13bcc:	add	r4, r4, #8
   13bd0:	vmov	r0, s0
   13bd4:	str	r0, [r5, r7, lsl #2]
   13bd8:	add	r7, r7, #1
   13bdc:	cmp	r7, #256	; 0x100
   13be0:	bne	13bc0 <ReadInt32Data+0x2140>
   13be4:	ldr	r2, [sp, #252]	; 0xfc
   13be8:	add	r0, r8, #256	; 0x100
   13bec:	mov	r7, r9
   13bf0:	add	r7, r6, r9
   13bf4:	add	r5, r5, #1024	; 0x400
   13bf8:	add	r1, sl, #1024	; 0x400
   13bfc:	cmp	r0, r2
   13c00:	blt	13b90 <ReadInt32Data+0x2110>
   13c04:	ldr	r5, [sp, #4]
   13c08:	cmp	r0, r5
   13c0c:	bge	15168 <ReadInt32Data+0x36e8>
   13c10:	sub	r6, r5, r0
   13c14:	ldr	r0, [sp, #256]	; 0x100
   13c18:	ldr	r1, [sp, #260]	; 0x104
   13c1c:	add	r4, sp, #408	; 0x198
   13c20:	mov	r2, r6
   13c24:	ldr	r3, [r0]
   13c28:	mov	r0, r4
   13c2c:	bl	18b8 <fread@plt>
   13c30:	add	r7, r0, r7
   13c34:	cmp	r6, #1
   13c38:	blt	15168 <ReadInt32Data+0x36e8>
   13c3c:	sub	r0, r5, r8
   13c40:	sub	r6, r0, #256	; 0x100
   13c44:	mov	r0, r4
   13c48:	bl	1c90 <Mat_doubleSwap>
   13c4c:	vcvt.s32.f64	s0, d0
   13c50:	add	r4, r4, #8
   13c54:	subs	r6, r6, #1
   13c58:	vmov	r0, s0
   13c5c:	str	r0, [sl], #4
   13c60:	bne	13c44 <ReadInt32Data+0x21c4>
   13c64:	b	15168 <ReadInt32Data+0x36e8>
   13c68:	sub	r0, r6, #256	; 0x100
   13c6c:	str	r6, [sp, #4]
   13c70:	add	r1, r8, #1024	; 0x400
   13c74:	mov	r6, r8
   13c78:	mov	r7, #0
   13c7c:	str	r9, [sp, #244]	; 0xf4
   13c80:	str	r5, [sp, #256]	; 0x100
   13c84:	str	r8, [sp]
   13c88:	str	r0, [sp, #252]	; 0xfc
   13c8c:	mov	r0, #0
   13c90:	str	r0, [sp, #260]	; 0x104
   13c94:	ldr	r0, [sp, #256]	; 0x100
   13c98:	add	r4, sp, #408	; 0x198
   13c9c:	mov	r5, r1
   13ca0:	mov	r1, sl
   13ca4:	mov	r2, #256	; 0x100
   13ca8:	mov	r9, sl
   13cac:	ldr	r3, [r0]
   13cb0:	mov	r0, r4
   13cb4:	bl	18b8 <fread@plt>
   13cb8:	mov	r8, r0
   13cbc:	mov	sl, #0
   13cc0:	mov	r0, r4
   13cc4:	bl	1b84 <Mat_int64Swap>
   13cc8:	str	r0, [r6, sl, lsl #2]
   13ccc:	add	sl, sl, #1
   13cd0:	add	r4, r4, #8
   13cd4:	cmp	sl, #256	; 0x100
   13cd8:	bne	13cc0 <ReadInt32Data+0x2240>
   13cdc:	ldr	r0, [sp, #260]	; 0x104
   13ce0:	ldr	r2, [sp, #252]	; 0xfc
   13ce4:	add	r7, r8, r7
   13ce8:	add	r6, r6, #1024	; 0x400
   13cec:	add	r1, r5, #1024	; 0x400
   13cf0:	mov	sl, r9
   13cf4:	add	r0, r0, #256	; 0x100
   13cf8:	cmp	r0, r2
   13cfc:	blt	13c90 <ReadInt32Data+0x2210>
   13d00:	ldr	r6, [sp, #4]
   13d04:	cmp	r0, r6
   13d08:	bge	146f8 <ReadInt32Data+0x2c78>
   13d0c:	sub	r8, r6, r0
   13d10:	ldr	r0, [sp, #256]	; 0x100
   13d14:	add	r4, sp, #408	; 0x198
   13d18:	mov	r1, sl
   13d1c:	mov	r2, r8
   13d20:	ldr	r3, [r0]
   13d24:	mov	r0, r4
   13d28:	bl	18b8 <fread@plt>
   13d2c:	ldr	r9, [sp, #244]	; 0xf4
   13d30:	add	r7, r0, r7
   13d34:	cmp	r8, #1
   13d38:	blt	13d64 <ReadInt32Data+0x22e4>
   13d3c:	ldr	r0, [sp, #260]	; 0x104
   13d40:	sub	r0, r6, r0
   13d44:	sub	r6, r0, #256	; 0x100
   13d48:	mov	r0, r4
   13d4c:	bl	1b84 <Mat_int64Swap>
   13d50:	str	r0, [r5], #4
   13d54:	add	r4, r4, #8
   13d58:	subs	r6, r6, #1
   13d5c:	bne	13d48 <ReadInt32Data+0x22c8>
   13d60:	ldr	r6, [sp, #4]
   13d64:	ldr	r8, [sp]
   13d68:	ldr	r5, [sp, #256]	; 0x100
   13d6c:	cmp	r9, #13
   13d70:	beq	1470c <ReadInt32Data+0x2c8c>
   13d74:	b	1516c <ReadInt32Data+0x36ec>
   13d78:	sub	r1, r6, #256	; 0x100
   13d7c:	str	r5, [sp, #256]	; 0x100
   13d80:	str	sl, [sp, #260]	; 0x104
   13d84:	mov	r2, #0
   13d88:	add	r0, r8, #1024	; 0x400
   13d8c:	mov	r7, #0
   13d90:	add	r4, sp, #408	; 0x198
   13d94:	add	sl, sp, #312	; 0x138
   13d98:	mov	r9, #32
   13d9c:	add	r5, sp, #320	; 0x140
   13da0:	str	r6, [sp, #4]
   13da4:	str	r8, [sp]
   13da8:	str	r1, [sp, #236]	; 0xec
   13dac:	mov	r1, #256	; 0x100
   13db0:	str	r2, [sp, #252]	; 0xfc
   13db4:	str	r0, [sp, #240]	; 0xf0
   13db8:	ldr	r0, [sp, #256]	; 0x100
   13dbc:	str	r1, [sp, #248]	; 0xf8
   13dc0:	ldr	r1, [sp, #260]	; 0x104
   13dc4:	mov	r2, #256	; 0x100
   13dc8:	str	r7, [sp, #244]	; 0xf4
   13dcc:	ldr	r3, [r0]
   13dd0:	mov	r0, r4
   13dd4:	bl	18b8 <fread@plt>
   13dd8:	mov	r1, r8
   13ddc:	mov	r2, #0
   13de0:	ldr	r3, [r4, r2]
   13de4:	str	r3, [sp, #312]	; 0x138
   13de8:	add	r3, r4, r2
   13dec:	add	r2, r2, #16
   13df0:	ldr	r7, [r3, #4]
   13df4:	cmp	r2, #512	; 0x200
   13df8:	str	r7, [sp, #316]	; 0x13c
   13dfc:	add	r7, r1, #16
   13e00:	vld1.16	{d16}, [sl :64]
   13e04:	vmovl.s16	q8, d16
   13e08:	vst1.32	{d16-d17}, [r1], r9
   13e0c:	ldr	r6, [r3, #8]
   13e10:	ldr	r3, [r3, #12]
   13e14:	str	r6, [sp, #320]	; 0x140
   13e18:	str	r3, [sp, #324]	; 0x144
   13e1c:	vld1.16	{d16}, [r5 :64]
   13e20:	vmovl.s16	q8, d16
   13e24:	vst1.32	{d16-d17}, [r7]
   13e28:	bne	13de0 <ReadInt32Data+0x2360>
   13e2c:	ldr	r1, [sp, #252]	; 0xfc
   13e30:	ldr	r6, [sp, #244]	; 0xf4
   13e34:	ldr	r2, [sp, #236]	; 0xec
   13e38:	add	r8, r8, #1024	; 0x400
   13e3c:	add	r1, r0, r1
   13e40:	ldr	r0, [sp, #240]	; 0xf0
   13e44:	add	r7, r6, #256	; 0x100
   13e48:	str	r1, [sp, #252]	; 0xfc
   13e4c:	ldr	r1, [sp, #248]	; 0xf8
   13e50:	cmp	r7, r2
   13e54:	add	r0, r0, #1024	; 0x400
   13e58:	add	r1, r1, #256	; 0x100
   13e5c:	blt	13db4 <ReadInt32Data+0x2334>
   13e60:	ldr	r5, [sp, #4]
   13e64:	cmp	r7, r5
   13e68:	bge	146d4 <ReadInt32Data+0x2c54>
   13e6c:	ldr	r0, [sp, #256]	; 0x100
   13e70:	ldr	sl, [sp, #260]	; 0x104
   13e74:	sub	r8, r5, r7
   13e78:	add	r4, sp, #408	; 0x198
   13e7c:	mov	r2, r8
   13e80:	ldr	r3, [r0]
   13e84:	mov	r0, r4
   13e88:	mov	r1, sl
   13e8c:	bl	18b8 <fread@plt>
   13e90:	ldr	r1, [sp, #252]	; 0xfc
   13e94:	cmp	r8, #1
   13e98:	add	r1, r0, r1
   13e9c:	str	r1, [sp, #252]	; 0xfc
   13ea0:	blt	14ea4 <ReadInt32Data+0x3424>
   13ea4:	mov	lr, #0
   13ea8:	cmp	r8, #4
   13eac:	bcc	14e70 <ReadInt32Data+0x33f0>
   13eb0:	bic	lr, r8, #3
   13eb4:	mov	r2, #1
   13eb8:	str	r8, [sp, #256]	; 0x100
   13ebc:	subs	r1, lr, #4
   13ec0:	add	r1, r2, r1, lsr #2
   13ec4:	and	r0, r1, #1
   13ec8:	str	r0, [sp, #236]	; 0xec
   13ecc:	beq	14e18 <ReadInt32Data+0x3398>
   13ed0:	sub	r1, r5, r6
   13ed4:	ldr	ip, [sp, #240]	; 0xf0
   13ed8:	add	r8, sp, #296	; 0x128
   13edc:	mov	r9, #32
   13ee0:	add	r5, sp, #304	; 0x130
   13ee4:	sub	r1, r1, #256	; 0x100
   13ee8:	bic	r1, r1, #3
   13eec:	sub	r1, r1, #4
   13ef0:	mvn	r3, r1, lsr #2
   13ef4:	add	r1, r2, r1, lsr #2
   13ef8:	mov	r2, #0
   13efc:	and	r1, r1, #1
   13f00:	add	r3, r3, r1
   13f04:	ldr	r0, [r4]
   13f08:	ldr	r1, [r4, #4]
   13f0c:	adds	r3, r3, #2
   13f10:	add	r2, r2, #8
   13f14:	str	r0, [sp, #296]	; 0x128
   13f18:	str	r1, [sp, #300]	; 0x12c
   13f1c:	add	r0, ip, #16
   13f20:	vld1.16	{d16}, [r8 :64]
   13f24:	vmovl.s16	q8, d16
   13f28:	vst1.32	{d16-d17}, [ip], r9
   13f2c:	ldr	r1, [r4, #8]
   13f30:	ldr	r6, [r4, #12]
   13f34:	add	r4, r4, #16
   13f38:	str	r6, [sp, #308]	; 0x134
   13f3c:	str	r1, [sp, #304]	; 0x130
   13f40:	vld1.16	{d16}, [r5 :64]
   13f44:	vmovl.s16	q8, d16
   13f48:	vst1.32	{d16-d17}, [r0]
   13f4c:	bne	13f04 <ReadInt32Data+0x2484>
   13f50:	b	14e1c <ReadInt32Data+0x339c>
   13f54:	sub	r1, r6, #256	; 0x100
   13f58:	str	r5, [sp, #256]	; 0x100
   13f5c:	str	sl, [sp, #260]	; 0x104
   13f60:	mov	r2, #0
   13f64:	add	r0, r8, #1024	; 0x400
   13f68:	mov	r7, #0
   13f6c:	add	r4, sp, #408	; 0x198
   13f70:	add	sl, sp, #376	; 0x178
   13f74:	mov	r9, #32
   13f78:	add	r5, sp, #384	; 0x180
   13f7c:	str	r6, [sp, #4]
   13f80:	str	r8, [sp]
   13f84:	str	r1, [sp, #236]	; 0xec
   13f88:	mov	r1, #256	; 0x100
   13f8c:	str	r2, [sp, #252]	; 0xfc
   13f90:	str	r0, [sp, #240]	; 0xf0
   13f94:	ldr	r0, [sp, #256]	; 0x100
   13f98:	str	r1, [sp, #248]	; 0xf8
   13f9c:	ldr	r1, [sp, #260]	; 0x104
   13fa0:	mov	r2, #256	; 0x100
   13fa4:	str	r7, [sp, #244]	; 0xf4
   13fa8:	ldr	r3, [r0]
   13fac:	mov	r0, r4
   13fb0:	bl	18b8 <fread@plt>
   13fb4:	mov	r1, r8
   13fb8:	mov	r2, #0
   13fbc:	ldr	r3, [r4, r2]
   13fc0:	str	r3, [sp, #376]	; 0x178
   13fc4:	add	r3, r4, r2
   13fc8:	add	r2, r2, #16
   13fcc:	ldr	r7, [r3, #4]
   13fd0:	cmp	r2, #512	; 0x200
   13fd4:	str	r7, [sp, #380]	; 0x17c
   13fd8:	add	r7, r1, #16
   13fdc:	vld1.16	{d16}, [sl :64]
   13fe0:	vmovl.u16	q8, d16
   13fe4:	vst1.32	{d16-d17}, [r1], r9
   13fe8:	ldr	r6, [r3, #8]
   13fec:	ldr	r3, [r3, #12]
   13ff0:	str	r6, [sp, #384]	; 0x180
   13ff4:	str	r3, [sp, #388]	; 0x184
   13ff8:	vld1.16	{d16}, [r5 :64]
   13ffc:	vmovl.u16	q8, d16
   14000:	vst1.32	{d16-d17}, [r7]
   14004:	bne	13fbc <ReadInt32Data+0x253c>
   14008:	ldr	r1, [sp, #252]	; 0xfc
   1400c:	ldr	r6, [sp, #244]	; 0xf4
   14010:	ldr	r2, [sp, #236]	; 0xec
   14014:	add	r8, r8, #1024	; 0x400
   14018:	add	r1, r0, r1
   1401c:	ldr	r0, [sp, #240]	; 0xf0
   14020:	add	r7, r6, #256	; 0x100
   14024:	str	r1, [sp, #252]	; 0xfc
   14028:	ldr	r1, [sp, #248]	; 0xf8
   1402c:	cmp	r7, r2
   14030:	add	r0, r0, #1024	; 0x400
   14034:	add	r1, r1, #256	; 0x100
   14038:	blt	13f90 <ReadInt32Data+0x2510>
   1403c:	ldr	r5, [sp, #4]
   14040:	cmp	r7, r5
   14044:	bge	146d4 <ReadInt32Data+0x2c54>
   14048:	ldr	r0, [sp, #256]	; 0x100
   1404c:	ldr	sl, [sp, #260]	; 0x104
   14050:	sub	r8, r5, r7
   14054:	add	r4, sp, #408	; 0x198
   14058:	mov	r2, r8
   1405c:	ldr	r3, [r0]
   14060:	mov	r0, r4
   14064:	mov	r1, sl
   14068:	bl	18b8 <fread@plt>
   1406c:	ldr	r1, [sp, #252]	; 0xfc
   14070:	cmp	r8, #1
   14074:	add	r1, r0, r1
   14078:	str	r1, [sp, #252]	; 0xfc
   1407c:	blt	14f40 <ReadInt32Data+0x34c0>
   14080:	mov	lr, #0
   14084:	cmp	r8, #4
   14088:	bcc	14f0c <ReadInt32Data+0x348c>
   1408c:	bic	lr, r8, #3
   14090:	mov	r2, #1
   14094:	str	r8, [sp, #256]	; 0x100
   14098:	subs	r1, lr, #4
   1409c:	add	r1, r2, r1, lsr #2
   140a0:	and	r0, r1, #1
   140a4:	str	r0, [sp, #236]	; 0xec
   140a8:	beq	14eb4 <ReadInt32Data+0x3434>
   140ac:	sub	r1, r5, r6
   140b0:	ldr	ip, [sp, #240]	; 0xf0
   140b4:	add	r8, sp, #360	; 0x168
   140b8:	mov	r9, #32
   140bc:	add	r5, sp, #368	; 0x170
   140c0:	sub	r1, r1, #256	; 0x100
   140c4:	bic	r1, r1, #3
   140c8:	sub	r1, r1, #4
   140cc:	mvn	r3, r1, lsr #2
   140d0:	add	r1, r2, r1, lsr #2
   140d4:	mov	r2, #0
   140d8:	and	r1, r1, #1
   140dc:	add	r3, r3, r1
   140e0:	ldr	r0, [r4]
   140e4:	ldr	r1, [r4, #4]
   140e8:	adds	r3, r3, #2
   140ec:	add	r2, r2, #8
   140f0:	str	r0, [sp, #360]	; 0x168
   140f4:	str	r1, [sp, #364]	; 0x16c
   140f8:	add	r0, ip, #16
   140fc:	vld1.16	{d16}, [r8 :64]
   14100:	vmovl.u16	q8, d16
   14104:	vst1.32	{d16-d17}, [ip], r9
   14108:	ldr	r1, [r4, #8]
   1410c:	ldr	r6, [r4, #12]
   14110:	add	r4, r4, #16
   14114:	str	r6, [sp, #372]	; 0x174
   14118:	str	r1, [sp, #368]	; 0x170
   1411c:	vld1.16	{d16}, [r5 :64]
   14120:	vmovl.u16	q8, d16
   14124:	vst1.32	{d16-d17}, [r0]
   14128:	bne	140e0 <ReadInt32Data+0x2660>
   1412c:	b	14eb8 <ReadInt32Data+0x3438>
   14130:	sub	r0, r6, #256	; 0x100
   14134:	str	sl, [sp, #260]	; 0x104
   14138:	mov	sl, r8
   1413c:	mov	r8, r5
   14140:	lsl	r4, r6, #2
   14144:	mov	r5, #0
   14148:	mov	r7, #0
   1414c:	str	r6, [sp, #4]
   14150:	str	r0, [sp, #256]	; 0x100
   14154:	ldr	r3, [r8]
   14158:	ldr	r1, [sp, #260]	; 0x104
   1415c:	add	r9, sp, #408	; 0x198
   14160:	mov	r2, #256	; 0x100
   14164:	mov	r0, r9
   14168:	bl	18b8 <fread@plt>
   1416c:	mov	r6, r0
   14170:	add	r0, sl, r5, lsl #2
   14174:	mov	r1, r9
   14178:	mov	r2, #1024	; 0x400
   1417c:	bl	181c <memcpy@plt>
   14180:	ldr	r0, [sp, #256]	; 0x100
   14184:	add	r5, r5, #256	; 0x100
   14188:	add	r7, r6, r7
   1418c:	sub	r4, r4, #1024	; 0x400
   14190:	cmp	r5, r0
   14194:	blt	14154 <ReadInt32Data+0x26d4>
   14198:	ldr	r0, [sp, #4]
   1419c:	ldr	r9, [sp, #260]	; 0x104
   141a0:	cmp	r5, r0
   141a4:	bge	141dc <ReadInt32Data+0x275c>
   141a8:	ldr	r3, [r8]
   141ac:	sub	r6, r0, r5
   141b0:	add	r0, sp, #408	; 0x198
   141b4:	mov	r1, r9
   141b8:	mov	r2, r6
   141bc:	bl	18b8 <fread@plt>
   141c0:	add	r7, r0, r7
   141c4:	cmp	r6, #1
   141c8:	blt	141dc <ReadInt32Data+0x275c>
   141cc:	add	r0, sl, r5, lsl #2
   141d0:	add	r1, sp, #408	; 0x198
   141d4:	mov	r2, r4
   141d8:	bl	181c <memcpy@plt>
   141dc:	mov	sl, r9
   141e0:	mul	r0, r7, sl
   141e4:	sub	sp, fp, #28
   141e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141ec:	str	r5, [sp, #256]	; 0x100
   141f0:	add	r0, r8, #1024	; 0x400
   141f4:	str	r6, [sp, #4]
   141f8:	sub	r5, r6, #256	; 0x100
   141fc:	mov	r9, #0
   14200:	mov	r1, #256	; 0x100
   14204:	add	r4, sp, #408	; 0x198
   14208:	mov	r7, r8
   1420c:	mov	r6, #0
   14210:	str	sl, [sp, #260]	; 0x104
   14214:	str	r8, [sp]
   14218:	mov	r8, r0
   1421c:	ldr	r0, [sp, #256]	; 0x100
   14220:	mov	sl, r1
   14224:	ldr	r1, [sp, #260]	; 0x104
   14228:	mov	r2, #256	; 0x100
   1422c:	ldr	r3, [r0]
   14230:	mov	r0, r4
   14234:	bl	18b8 <fread@plt>
   14238:	mov	r1, #0
   1423c:	add	r2, r4, r1
   14240:	add	r3, r7, r1
   14244:	add	r1, r1, #32
   14248:	vld1.32	{d16-d17}, [r2]!
   1424c:	cmp	r1, #1024	; 0x400
   14250:	vcvt.s32.f32	q8, q8
   14254:	vst1.32	{d16-d17}, [r3]!
   14258:	vld1.32	{d16-d17}, [r2]
   1425c:	vcvt.s32.f32	q8, q8
   14260:	vst1.32	{d16-d17}, [r3]
   14264:	bne	1423c <ReadInt32Data+0x27bc>
   14268:	mov	r2, r9
   1426c:	add	r9, r9, #256	; 0x100
   14270:	add	r6, r0, r6
   14274:	add	r7, r7, #1024	; 0x400
   14278:	add	r0, r8, #1024	; 0x400
   1427c:	add	r1, sl, #256	; 0x100
   14280:	cmp	r9, r5
   14284:	blt	14218 <ReadInt32Data+0x2798>
   14288:	ldr	r0, [sp, #4]
   1428c:	str	r2, [sp, #252]	; 0xfc
   14290:	cmp	r9, r0
   14294:	bge	146e8 <ReadInt32Data+0x2c68>
   14298:	sub	r5, r0, r9
   1429c:	ldr	r0, [sp, #256]	; 0x100
   142a0:	ldr	r1, [sp, #260]	; 0x104
   142a4:	add	r4, sp, #408	; 0x198
   142a8:	mov	r2, r5
   142ac:	ldr	r3, [r0]
   142b0:	mov	r0, r4
   142b4:	bl	18b8 <fread@plt>
   142b8:	mov	r7, r6
   142bc:	add	r7, r0, r6
   142c0:	cmp	r5, #1
   142c4:	blt	15168 <ReadInt32Data+0x36e8>
   142c8:	ldr	r3, [sp]
   142cc:	mov	r0, #0
   142d0:	cmp	r5, #4
   142d4:	bcc	14f88 <ReadInt32Data+0x3508>
   142d8:	bic	r0, r5, #3
   142dc:	mov	r2, #1
   142e0:	mov	lr, r5
   142e4:	mov	r6, r7
   142e8:	subs	r1, r0, #4
   142ec:	add	r1, r2, r1, lsr #2
   142f0:	and	ip, r1, #1
   142f4:	beq	14f50 <ReadInt32Data+0x34d0>
   142f8:	ldr	r1, [sp, #4]
   142fc:	ldr	r3, [sp, #252]	; 0xfc
   14300:	sub	r3, r1, r3
   14304:	sub	r3, r3, #256	; 0x100
   14308:	bic	r3, r3, #3
   1430c:	sub	r3, r3, #4
   14310:	add	r2, r2, r3, lsr #2
   14314:	mvn	r7, r3, lsr #2
   14318:	and	r2, r2, #1
   1431c:	add	r3, r7, r2
   14320:	mov	r2, #0
   14324:	mov	r7, #32
   14328:	add	r5, r4, #16
   1432c:	vld1.32	{d16-d17}, [r4], r7
   14330:	add	r1, r8, #16
   14334:	adds	r3, r3, #2
   14338:	add	r2, r2, #8
   1433c:	vcvt.s32.f32	q8, q8
   14340:	vst1.32	{d16-d17}, [r8], r7
   14344:	vld1.32	{d16-d17}, [r5]
   14348:	vcvt.s32.f32	q8, q8
   1434c:	vst1.32	{d16-d17}, [r1]
   14350:	bne	14328 <ReadInt32Data+0x28a8>
   14354:	b	14f54 <ReadInt32Data+0x34d4>
   14358:	sub	r1, r6, #256	; 0x100
   1435c:	str	sl, [sp, #260]	; 0x104
   14360:	add	r0, r8, #1024	; 0x400
   14364:	mov	r9, #0
   14368:	mov	r4, #32
   1436c:	mov	r7, r8
   14370:	mov	sl, #0
   14374:	str	r5, [sp, #256]	; 0x100
   14378:	str	r6, [sp, #4]
   1437c:	str	r8, [sp]
   14380:	str	r1, [sp, #248]	; 0xf8
   14384:	mov	r1, #256	; 0x100
   14388:	mov	r8, r0
   1438c:	ldr	r0, [sp, #256]	; 0x100
   14390:	str	r1, [sp, #252]	; 0xfc
   14394:	ldr	r1, [sp, #260]	; 0x104
   14398:	add	r5, sp, #408	; 0x198
   1439c:	mov	r2, #256	; 0x100
   143a0:	ldr	r3, [r0]
   143a4:	mov	r0, r5
   143a8:	bl	18b8 <fread@plt>
   143ac:	mov	r1, #0
   143b0:	mov	r3, r5
   143b4:	mov	r2, r5
   143b8:	vld1.64	{d16-d17}, [r2], r4
   143bc:	add	r3, r3, #16
   143c0:	vcvt.s32.f64	s0, d16
   143c4:	vmov	r5, s0
   143c8:	vcvt.s32.f64	s0, d17
   143cc:	vmov.32	d16[0], r5
   143d0:	vmov	r6, s0
   143d4:	add	r5, r7, r1
   143d8:	add	r1, r1, #16
   143dc:	cmp	r1, #1024	; 0x400
   143e0:	vmov.32	d16[1], r6
   143e4:	vst1.32	{d16}, [r5]!
   143e8:	vld1.64	{d16-d17}, [r3]
   143ec:	vcvt.s32.f64	s0, d16
   143f0:	vcvt.s32.f64	s2, d17
   143f4:	vmov	r3, s0
   143f8:	vmov.32	d16[0], r3
   143fc:	vmov	r3, s2
   14400:	vmov.32	d16[1], r3
   14404:	mov	r3, r2
   14408:	vstr	d16, [r5]
   1440c:	bne	143b8 <ReadInt32Data+0x2938>
   14410:	ldr	r6, [sp, #252]	; 0xfc
   14414:	ldr	r3, [sp, #248]	; 0xf8
   14418:	mov	r2, r9
   1441c:	add	r9, r9, #256	; 0x100
   14420:	add	sl, r0, sl
   14424:	add	r7, r7, #1024	; 0x400
   14428:	add	r0, r8, #1024	; 0x400
   1442c:	add	r1, r6, #256	; 0x100
   14430:	cmp	r9, r3
   14434:	blt	14388 <ReadInt32Data+0x2908>
   14438:	ldr	r0, [sp, #4]
   1443c:	str	r2, [sp, #248]	; 0xf8
   14440:	cmp	r9, r0
   14444:	bge	14a74 <ReadInt32Data+0x2ff4>
   14448:	sub	r5, r0, r9
   1444c:	ldr	r0, [sp, #256]	; 0x100
   14450:	ldr	r1, [sp, #260]	; 0x104
   14454:	add	r4, sp, #408	; 0x198
   14458:	mov	r2, r5
   1445c:	ldr	r3, [r0]
   14460:	mov	r0, r4
   14464:	bl	18b8 <fread@plt>
   14468:	mov	r7, sl
   1446c:	add	r7, r0, sl
   14470:	cmp	r5, #1
   14474:	blt	15168 <ReadInt32Data+0x36e8>
   14478:	ldr	sl, [sp, #260]	; 0x104
   1447c:	ldr	r3, [sp, #4]
   14480:	mov	lr, #0
   14484:	beq	15028 <ReadInt32Data+0x35a8>
   14488:	bic	lr, r5, #1
   1448c:	mov	r1, #1
   14490:	mov	ip, r5
   14494:	mov	sl, r7
   14498:	subs	r2, lr, #2
   1449c:	add	r2, r1, r2, lsr #1
   144a0:	and	r0, r2, #1
   144a4:	str	r0, [sp, #256]	; 0x100
   144a8:	beq	14fcc <ReadInt32Data+0x354c>
   144ac:	ldr	r0, [sp, #248]	; 0xf8
   144b0:	mov	r7, #32
   144b4:	mov	r5, #16
   144b8:	mov	r6, r4
   144bc:	sub	r2, r3, r0
   144c0:	sub	r2, r2, #256	; 0x100
   144c4:	bic	r2, r2, #1
   144c8:	sub	r2, r2, #2
   144cc:	add	r1, r1, r2, lsr #1
   144d0:	mvn	r3, r2, lsr #1
   144d4:	mov	r2, #0
   144d8:	and	r1, r1, #1
   144dc:	add	r3, r3, r1
   144e0:	mov	r1, r8
   144e4:	vld1.64	{d16-d17}, [r6], r7
   144e8:	adds	r3, r3, #2
   144ec:	add	r2, r2, #4
   144f0:	vcvt.s32.f64	s0, d16
   144f4:	vcvt.s32.f64	s2, d17
   144f8:	vmov	r0, s0
   144fc:	vmov.32	d16[0], r0
   14500:	vmov	r0, s2
   14504:	vmov.32	d16[1], r0
   14508:	add	r0, r4, #16
   1450c:	mov	r4, r6
   14510:	vst1.32	{d16}, [r1], r5
   14514:	vld1.64	{d16-d17}, [r0]
   14518:	vcvt.s32.f64	s0, d16
   1451c:	vcvt.s32.f64	s2, d17
   14520:	vmov	r0, s0
   14524:	vmov.32	d16[0], r0
   14528:	vmov	r0, s2
   1452c:	vmov.32	d16[1], r0
   14530:	vstr	d16, [r8, #8]
   14534:	mov	r8, r1
   14538:	bne	144e4 <ReadInt32Data+0x2a64>
   1453c:	b	14fd0 <ReadInt32Data+0x3550>
   14540:	sub	r1, r6, #256	; 0x100
   14544:	str	r9, [sp, #244]	; 0xf4
   14548:	str	r5, [sp, #256]	; 0x100
   1454c:	str	sl, [sp, #260]	; 0x104
   14550:	add	r0, r8, #1024	; 0x400
   14554:	mov	r9, #0
   14558:	add	r4, sp, #408	; 0x198
   1455c:	mov	r7, #32
   14560:	mov	sl, r8
   14564:	mov	r5, #0
   14568:	str	r6, [sp, #4]
   1456c:	str	r8, [sp]
   14570:	str	r1, [sp, #248]	; 0xf8
   14574:	mov	r1, #256	; 0x100
   14578:	mov	r8, r0
   1457c:	ldr	r0, [sp, #256]	; 0x100
   14580:	str	r1, [sp, #252]	; 0xfc
   14584:	ldr	r1, [sp, #260]	; 0x104
   14588:	mov	r2, #256	; 0x100
   1458c:	ldr	r3, [r0]
   14590:	mov	r0, r4
   14594:	bl	18b8 <fread@plt>
   14598:	mov	r1, #0
   1459c:	mov	r2, r4
   145a0:	add	r3, r2, #16
   145a4:	vld1.64	{d16-d17}, [r2], r7
   145a8:	add	r6, sl, r1
   145ac:	add	r1, r1, #16
   145b0:	cmp	r1, #1024	; 0x400
   145b4:	vmovn.i64	d16, q8
   145b8:	vst1.32	{d16}, [r6]!
   145bc:	vld1.64	{d16-d17}, [r3]
   145c0:	vmovn.i64	d16, q8
   145c4:	vstr	d16, [r6]
   145c8:	bne	145a0 <ReadInt32Data+0x2b20>
   145cc:	ldr	r1, [sp, #252]	; 0xfc
   145d0:	ldr	r3, [sp, #248]	; 0xf8
   145d4:	mov	r2, r9
   145d8:	add	r9, r9, #256	; 0x100
   145dc:	add	r5, r0, r5
   145e0:	add	sl, sl, #1024	; 0x400
   145e4:	add	r0, r8, #1024	; 0x400
   145e8:	add	r1, r1, #256	; 0x100
   145ec:	cmp	r9, r3
   145f0:	blt	14578 <ReadInt32Data+0x2af8>
   145f4:	ldr	r6, [sp, #4]
   145f8:	str	r2, [sp, #248]	; 0xf8
   145fc:	cmp	r9, r6
   14600:	bge	146f0 <ReadInt32Data+0x2c70>
   14604:	ldr	r0, [sp, #256]	; 0x100
   14608:	ldr	sl, [sp, #260]	; 0x104
   1460c:	add	r4, sp, #408	; 0x198
   14610:	sub	r2, r6, r9
   14614:	str	r2, [sp, #240]	; 0xf0
   14618:	ldr	r3, [r0]
   1461c:	mov	r0, r4
   14620:	mov	r1, sl
   14624:	bl	18b8 <fread@plt>
   14628:	mov	r7, r5
   1462c:	add	r7, r0, r5
   14630:	ldr	r0, [sp, #240]	; 0xf0
   14634:	cmp	r0, #1
   14638:	blt	146f8 <ReadInt32Data+0x2c78>
   1463c:	ldr	ip, [sp]
   14640:	ldr	r5, [sp, #256]	; 0x100
   14644:	mov	lr, r0
   14648:	mov	r0, #0
   1464c:	beq	150b8 <ReadInt32Data+0x3638>
   14650:	bic	r0, lr, #1
   14654:	mov	r2, #1
   14658:	mov	ip, r7
   1465c:	subs	r1, r0, #2
   14660:	add	r1, r2, r1, lsr #1
   14664:	and	r1, r1, #1
   14668:	str	r1, [sp, #236]	; 0xec
   1466c:	beq	1506c <ReadInt32Data+0x35ec>
   14670:	ldr	r1, [sp, #248]	; 0xf8
   14674:	mov	r5, r8
   14678:	sub	r3, r6, r1
   1467c:	mov	r6, #16
   14680:	sub	r3, r3, #256	; 0x100
   14684:	bic	r3, r3, #1
   14688:	sub	r3, r3, #2
   1468c:	add	r2, r2, r3, lsr #1
   14690:	mvn	r7, r3, lsr #1
   14694:	and	r2, r2, #1
   14698:	add	r3, r7, r2
   1469c:	mov	r2, #0
   146a0:	mov	r7, #32
   146a4:	add	r1, r4, #16
   146a8:	vld1.64	{d16-d17}, [r4], r7
   146ac:	adds	r3, r3, #2
   146b0:	add	r2, r2, #4
   146b4:	vmovn.i64	d16, q8
   146b8:	vst1.32	{d16}, [r5], r6
   146bc:	vld1.64	{d16-d17}, [r1]
   146c0:	vmovn.i64	d16, q8
   146c4:	vstr	d16, [r8, #8]
   146c8:	mov	r8, r5
   146cc:	bne	146a4 <ReadInt32Data+0x2c24>
   146d0:	b	15070 <ReadInt32Data+0x35f0>
   146d4:	ldr	sl, [sp, #260]	; 0x104
   146d8:	ldr	r7, [sp, #252]	; 0xfc
   146dc:	mul	r0, r7, sl
   146e0:	sub	sp, fp, #28
   146e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e8:	mov	r7, r6
   146ec:	b	15168 <ReadInt32Data+0x36e8>
   146f0:	ldr	sl, [sp, #260]	; 0x104
   146f4:	mov	r7, r5
   146f8:	ldr	r8, [sp]
   146fc:	ldr	r5, [sp, #256]	; 0x100
   14700:	ldr	r9, [sp, #244]	; 0xf4
   14704:	cmp	r9, #13
   14708:	bne	1516c <ReadInt32Data+0x36ec>
   1470c:	ldr	r0, [r5, #20]
   14710:	cmp	r0, #0
   14714:	beq	14760 <ReadInt32Data+0x2ce0>
   14718:	cmp	r6, #256	; 0x100
   1471c:	bgt	14804 <ReadInt32Data+0x2d84>
   14720:	ldr	r3, [r5]
   14724:	add	r4, sp, #408	; 0x198
   14728:	mov	r1, sl
   1472c:	mov	r2, r6
   14730:	mov	r0, r4
   14734:	bl	18b8 <fread@plt>
   14738:	add	r7, r0, r7
   1473c:	cmp	r6, #1
   14740:	blt	1516c <ReadInt32Data+0x36ec>
   14744:	mov	r0, r4
   14748:	bl	1bd4 <Mat_uint64Swap>
   1474c:	str	r0, [r8], #4
   14750:	add	r4, r4, #8
   14754:	subs	r6, r6, #1
   14758:	bne	14744 <ReadInt32Data+0x2cc4>
   1475c:	b	1516c <ReadInt32Data+0x36ec>
   14760:	cmp	r6, #256	; 0x100
   14764:	bgt	148ec <ReadInt32Data+0x2e6c>
   14768:	ldr	r3, [r5]
   1476c:	add	r4, sp, #408	; 0x198
   14770:	mov	r1, sl
   14774:	mov	r2, r6
   14778:	mov	r0, r4
   1477c:	bl	18b8 <fread@plt>
   14780:	add	r7, r0, r7
   14784:	cmp	r6, #1
   14788:	blt	1516c <ReadInt32Data+0x36ec>
   1478c:	mov	lr, #0
   14790:	beq	14df4 <ReadInt32Data+0x3374>
   14794:	bic	lr, r6, #1
   14798:	mov	r2, #1
   1479c:	mov	r9, r6
   147a0:	str	sl, [sp, #260]	; 0x104
   147a4:	subs	r1, lr, #2
   147a8:	add	r1, r2, r1, lsr #1
   147ac:	and	ip, r1, #1
   147b0:	beq	14db0 <ReadInt32Data+0x3330>
   147b4:	mov	r2, r8
   147b8:	mov	r8, r7
   147bc:	sub	r3, r1, ip
   147c0:	mov	r1, #0
   147c4:	mov	r7, #32
   147c8:	mov	r6, #16
   147cc:	mov	sl, r2
   147d0:	mov	r5, r2
   147d4:	add	r0, r4, #16
   147d8:	vld1.64	{d16-d17}, [r4], r7
   147dc:	subs	r3, r3, #2
   147e0:	add	r1, r1, #4
   147e4:	vmovn.i64	d16, q8
   147e8:	vst1.32	{d16}, [r5], r6
   147ec:	vld1.64	{d16-d17}, [r0]
   147f0:	vmovn.i64	d16, q8
   147f4:	vstr	d16, [r2, #8]
   147f8:	mov	r2, r5
   147fc:	bne	147d4 <ReadInt32Data+0x2d54>
   14800:	b	14dbc <ReadInt32Data+0x333c>
   14804:	mov	r0, r8
   14808:	sub	r0, r6, #256	; 0x100
   1480c:	add	r1, r8, #1024	; 0x400
   14810:	str	r5, [sp, #256]	; 0x100
   14814:	str	sl, [sp, #260]	; 0x104
   14818:	str	r6, [sp, #4]
   1481c:	str	r0, [sp, #252]	; 0xfc
   14820:	mov	r0, #0
   14824:	mov	sl, r0
   14828:	ldr	r0, [sp, #256]	; 0x100
   1482c:	mov	r5, r1
   14830:	ldr	r1, [sp, #260]	; 0x104
   14834:	add	r4, sp, #408	; 0x198
   14838:	mov	r2, #256	; 0x100
   1483c:	mov	r9, r7
   14840:	ldr	r3, [r0]
   14844:	mov	r0, r4
   14848:	bl	18b8 <fread@plt>
   1484c:	mov	r6, r0
   14850:	mov	r7, #0
   14854:	mov	r0, r4
   14858:	bl	1bd4 <Mat_uint64Swap>
   1485c:	str	r0, [r8, r7, lsl #2]
   14860:	add	r7, r7, #1
   14864:	add	r4, r4, #8
   14868:	cmp	r7, #256	; 0x100
   1486c:	bne	14854 <ReadInt32Data+0x2dd4>
   14870:	ldr	r2, [sp, #252]	; 0xfc
   14874:	add	r0, sl, #256	; 0x100
   14878:	mov	r7, r9
   1487c:	add	r7, r6, r9
   14880:	add	r8, r8, #1024	; 0x400
   14884:	add	r1, r5, #1024	; 0x400
   14888:	cmp	r0, r2
   1488c:	blt	14824 <ReadInt32Data+0x2da4>
   14890:	ldr	r8, [sp, #4]
   14894:	cmp	r0, r8
   14898:	bge	15168 <ReadInt32Data+0x36e8>
   1489c:	sub	r6, r8, r0
   148a0:	ldr	r0, [sp, #256]	; 0x100
   148a4:	ldr	r1, [sp, #260]	; 0x104
   148a8:	add	r4, sp, #408	; 0x198
   148ac:	mov	r2, r6
   148b0:	ldr	r3, [r0]
   148b4:	mov	r0, r4
   148b8:	bl	18b8 <fread@plt>
   148bc:	add	r7, r0, r7
   148c0:	cmp	r6, #1
   148c4:	blt	15168 <ReadInt32Data+0x36e8>
   148c8:	sub	r0, r8, sl
   148cc:	sub	r6, r0, #256	; 0x100
   148d0:	mov	r0, r4
   148d4:	bl	1bd4 <Mat_uint64Swap>
   148d8:	str	r0, [r5], #4
   148dc:	add	r4, r4, #8
   148e0:	subs	r6, r6, #1
   148e4:	bne	148d0 <ReadInt32Data+0x2e50>
   148e8:	b	15168 <ReadInt32Data+0x36e8>
   148ec:	mov	r0, sl
   148f0:	sub	r1, r6, #256	; 0x100
   148f4:	str	r5, [sp, #256]	; 0x100
   148f8:	mov	sl, r7
   148fc:	mov	r9, #0
   14900:	mov	r7, #32
   14904:	mov	r5, r8
   14908:	str	r6, [sp, #4]
   1490c:	str	r8, [sp]
   14910:	str	r0, [sp, #260]	; 0x104
   14914:	str	r1, [sp, #252]	; 0xfc
   14918:	add	r0, r8, #1024	; 0x400
   1491c:	mov	r1, #256	; 0x100
   14920:	mov	r8, r0
   14924:	ldr	r0, [sp, #256]	; 0x100
   14928:	mov	r4, r1
   1492c:	ldr	r1, [sp, #260]	; 0x104
   14930:	add	r6, sp, #408	; 0x198
   14934:	mov	r2, #256	; 0x100
   14938:	ldr	r3, [r0]
   1493c:	mov	r0, r6
   14940:	bl	18b8 <fread@plt>
   14944:	mov	r1, #0
   14948:	mov	r2, r6
   1494c:	add	r3, r2, #16
   14950:	vld1.64	{d16-d17}, [r2], r7
   14954:	add	r6, r5, r1
   14958:	add	r1, r1, #16
   1495c:	cmp	r1, #1024	; 0x400
   14960:	vmovn.i64	d16, q8
   14964:	vst1.32	{d16}, [r6]!
   14968:	vld1.64	{d16-d17}, [r3]
   1496c:	vmovn.i64	d16, q8
   14970:	vstr	d16, [r6]
   14974:	bne	1494c <ReadInt32Data+0x2ecc>
   14978:	ldr	r3, [sp, #252]	; 0xfc
   1497c:	mov	r2, r9
   14980:	add	r9, r9, #256	; 0x100
   14984:	add	sl, r0, sl
   14988:	add	r5, r5, #1024	; 0x400
   1498c:	add	r0, r8, #1024	; 0x400
   14990:	add	r1, r4, #256	; 0x100
   14994:	cmp	r9, r3
   14998:	blt	14920 <ReadInt32Data+0x2ea0>
   1499c:	ldr	r0, [sp, #4]
   149a0:	str	r2, [sp, #248]	; 0xf8
   149a4:	cmp	r9, r0
   149a8:	bge	14a74 <ReadInt32Data+0x2ff4>
   149ac:	sub	r2, r0, r9
   149b0:	ldr	r0, [sp, #256]	; 0x100
   149b4:	ldr	r1, [sp, #260]	; 0x104
   149b8:	add	r5, sp, #408	; 0x198
   149bc:	mov	r6, r4
   149c0:	str	r2, [sp, #244]	; 0xf4
   149c4:	ldr	r3, [r0]
   149c8:	mov	r0, r5
   149cc:	bl	18b8 <fread@plt>
   149d0:	mov	r7, sl
   149d4:	add	r7, r0, sl
   149d8:	ldr	r0, [sp, #244]	; 0xf4
   149dc:	cmp	r0, #1
   149e0:	blt	15168 <ReadInt32Data+0x36e8>
   149e4:	mov	lr, r0
   149e8:	ldr	r0, [sp, #4]
   149ec:	mov	sl, #0
   149f0:	beq	15134 <ReadInt32Data+0x36b4>
   149f4:	bic	sl, lr, #1
   149f8:	mov	r1, #1
   149fc:	str	r7, [sp, #252]	; 0xfc
   14a00:	subs	r2, sl, #2
   14a04:	add	r2, r1, r2, lsr #1
   14a08:	and	ip, r2, #1
   14a0c:	beq	150f4 <ReadInt32Data+0x3674>
   14a10:	ldr	r2, [sp, #248]	; 0xf8
   14a14:	mov	r7, #32
   14a18:	sub	r2, r0, r2
   14a1c:	mov	r0, #16
   14a20:	sub	r2, r2, #256	; 0x100
   14a24:	bic	r2, r2, #1
   14a28:	sub	r2, r2, #2
   14a2c:	add	r1, r1, r2, lsr #1
   14a30:	mvn	r3, r2, lsr #1
   14a34:	mov	r2, #0
   14a38:	and	r1, r1, #1
   14a3c:	add	r3, r3, r1
   14a40:	mov	r1, r8
   14a44:	add	r6, r5, #16
   14a48:	vld1.64	{d16-d17}, [r5], r7
   14a4c:	adds	r3, r3, #2
   14a50:	add	r2, r2, #4
   14a54:	vmovn.i64	d16, q8
   14a58:	vst1.32	{d16}, [r1], r0
   14a5c:	vld1.64	{d16-d17}, [r6]
   14a60:	vmovn.i64	d16, q8
   14a64:	vstr	d16, [r8, #8]
   14a68:	mov	r8, r1
   14a6c:	bne	14a44 <ReadInt32Data+0x2fc4>
   14a70:	b	150f8 <ReadInt32Data+0x3678>
   14a74:	ldr	r0, [sp, #260]	; 0x104
   14a78:	mov	r7, sl
   14a7c:	mov	sl, r0
   14a80:	mul	r0, r7, sl
   14a84:	sub	sp, fp, #28
   14a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a8c:	mov	r2, #0
   14a90:	ldr	r3, [sp]
   14a94:	cmp	ip, #0
   14a98:	mov	r7, lr
   14a9c:	beq	14ac4 <ReadInt32Data+0x3044>
   14aa0:	ldr	r1, [r9, r2]
   14aa4:	str	r1, [sp, #396]	; 0x18c
   14aa8:	add	r1, sp, #396	; 0x18c
   14aac:	vld1.32	{d16[0]}, [r1 :32]
   14ab0:	add	r1, r2, r6
   14ab4:	add	r1, r3, r1, lsl #2
   14ab8:	vmovl.s8	q8, d16
   14abc:	vmovl.s16	q8, d16
   14ac0:	vst1.32	{d16-d17}, [r1]
   14ac4:	cmp	r4, r0
   14ac8:	beq	1516c <ReadInt32Data+0x36ec>
   14acc:	ldr	r3, [sp]
   14ad0:	add	r2, r0, r6
   14ad4:	add	r1, r9, r0
   14ad8:	add	r2, r3, r2, lsl #2
   14adc:	ldr	r3, [sp, #4]
   14ae0:	sub	r0, r3, r0
   14ae4:	sub	r0, r0, r6
   14ae8:	ldrsb	r3, [r1], #1
   14aec:	subs	r0, r0, #1
   14af0:	str	r3, [r2], #4
   14af4:	bne	14ae8 <ReadInt32Data+0x3068>
   14af8:	b	1516c <ReadInt32Data+0x36ec>
   14afc:	mov	r2, #0
   14b00:	ldr	r3, [sp]
   14b04:	cmp	ip, #0
   14b08:	mov	r7, lr
   14b0c:	beq	14b34 <ReadInt32Data+0x30b4>
   14b10:	ldr	r1, [r9, r2]
   14b14:	str	r1, [sp, #404]	; 0x194
   14b18:	add	r1, sp, #404	; 0x194
   14b1c:	vld1.32	{d16[0]}, [r1 :32]
   14b20:	add	r1, r2, r6
   14b24:	add	r1, r3, r1, lsl #2
   14b28:	vmovl.u8	q8, d16
   14b2c:	vmovl.u16	q8, d16
   14b30:	vst1.32	{d16-d17}, [r1]
   14b34:	cmp	r4, r0
   14b38:	beq	1516c <ReadInt32Data+0x36ec>
   14b3c:	ldr	r3, [sp]
   14b40:	add	r2, r0, r6
   14b44:	add	r1, r9, r0
   14b48:	add	r2, r3, r2, lsl #2
   14b4c:	ldr	r3, [sp, #4]
   14b50:	sub	r0, r3, r0
   14b54:	sub	r0, r0, r6
   14b58:	ldrb	r3, [r1], #1
   14b5c:	subs	r0, r0, #1
   14b60:	str	r3, [r2], #4
   14b64:	bne	14b58 <ReadInt32Data+0x30d8>
   14b68:	b	1516c <ReadInt32Data+0x36ec>
   14b6c:	mov	r1, #0
   14b70:	ldr	r8, [sp]
   14b74:	cmp	ip, #0
   14b78:	beq	14ba8 <ReadInt32Data+0x3128>
   14b7c:	add	r0, sp, #408	; 0x198
   14b80:	ldr	r2, [r0, r1, lsl #1]
   14b84:	add	r0, r0, r1, lsl #1
   14b88:	str	r2, [sp, #264]	; 0x108
   14b8c:	ldr	r0, [r0, #4]
   14b90:	str	r0, [sp, #268]	; 0x10c
   14b94:	add	r0, sp, #264	; 0x108
   14b98:	vld1.16	{d16}, [r0 :64]
   14b9c:	add	r0, r8, r1, lsl #2
   14ba0:	vmovl.s16	q8, d16
   14ba4:	vst1.32	{d16-d17}, [r0]
   14ba8:	mov	r6, sl
   14bac:	cmp	lr, sl
   14bb0:	ldr	r7, [sp, #252]	; 0xfc
   14bb4:	ldr	sl, [sp, #260]	; 0x104
   14bb8:	beq	1516c <ReadInt32Data+0x36ec>
   14bbc:	add	r0, sp, #408	; 0x198
   14bc0:	add	r2, r8, lr, lsl #2
   14bc4:	add	r1, r0, lr, lsl #1
   14bc8:	sub	r0, r6, lr
   14bcc:	ldrsh	r3, [r1], #2
   14bd0:	subs	r0, r0, #1
   14bd4:	str	r3, [r2], #4
   14bd8:	bne	14bcc <ReadInt32Data+0x314c>
   14bdc:	b	1516c <ReadInt32Data+0x36ec>
   14be0:	mov	r1, #0
   14be4:	ldr	r8, [sp]
   14be8:	cmp	ip, #0
   14bec:	beq	14c1c <ReadInt32Data+0x319c>
   14bf0:	add	r0, sp, #408	; 0x198
   14bf4:	ldr	r2, [r0, r1, lsl #1]
   14bf8:	add	r0, r0, r1, lsl #1
   14bfc:	str	r2, [sp, #328]	; 0x148
   14c00:	ldr	r0, [r0, #4]
   14c04:	str	r0, [sp, #332]	; 0x14c
   14c08:	add	r0, sp, #328	; 0x148
   14c0c:	vld1.16	{d16}, [r0 :64]
   14c10:	add	r0, r8, r1, lsl #2
   14c14:	vmovl.u16	q8, d16
   14c18:	vst1.32	{d16-d17}, [r0]
   14c1c:	mov	r6, sl
   14c20:	cmp	lr, sl
   14c24:	ldr	r7, [sp, #252]	; 0xfc
   14c28:	ldr	sl, [sp, #260]	; 0x104
   14c2c:	beq	1516c <ReadInt32Data+0x36ec>
   14c30:	add	r0, sp, #408	; 0x198
   14c34:	add	r2, r8, lr, lsl #2
   14c38:	add	r1, r0, lr, lsl #1
   14c3c:	sub	r0, r6, lr
   14c40:	ldrh	r3, [r1], #2
   14c44:	subs	r0, r0, #1
   14c48:	str	r3, [r2], #4
   14c4c:	bne	14c40 <ReadInt32Data+0x31c0>
   14c50:	b	1516c <ReadInt32Data+0x36ec>
   14c54:	mov	r1, #0
   14c58:	cmp	ip, #0
   14c5c:	mov	r7, lr
   14c60:	beq	14c7c <ReadInt32Data+0x31fc>
   14c64:	add	r2, sp, #408	; 0x198
   14c68:	add	r2, r2, r1, lsl #2
   14c6c:	add	r1, r9, r1, lsl #2
   14c70:	vld1.32	{d16-d17}, [r2]
   14c74:	vcvt.s32.f32	q8, q8
   14c78:	vst1.32	{d16-d17}, [r1]
   14c7c:	mov	r6, r8
   14c80:	cmp	r0, r8
   14c84:	mov	r8, r9
   14c88:	beq	1516c <ReadInt32Data+0x36ec>
   14c8c:	add	r1, sp, #408	; 0x198
   14c90:	add	r2, r8, r0, lsl #2
   14c94:	add	r1, r1, r0, lsl #2
   14c98:	sub	r0, r6, r0
   14c9c:	vldr	s0, [r1]
   14ca0:	add	r1, r1, #4
   14ca4:	subs	r0, r0, #1
   14ca8:	vcvt.s32.f32	s0, s0
   14cac:	vmov	r3, s0
   14cb0:	str	r3, [r2], #4
   14cb4:	bne	14c9c <ReadInt32Data+0x321c>
   14cb8:	b	1516c <ReadInt32Data+0x36ec>
   14cbc:	mov	r1, #0
   14cc0:	ldr	r8, [sp]
   14cc4:	cmp	ip, #0
   14cc8:	beq	14cf8 <ReadInt32Data+0x3278>
   14ccc:	add	r2, sp, #408	; 0x198
   14cd0:	add	r2, r2, r1, lsl #3
   14cd4:	vld1.64	{d16-d17}, [r2]
   14cd8:	vcvt.s32.f64	s0, d16
   14cdc:	vmov	r2, s0
   14ce0:	vcvt.s32.f64	s0, d17
   14ce4:	vmov.32	d16[0], r2
   14ce8:	add	r2, r8, r1, lsl #2
   14cec:	vmov	r1, s0
   14cf0:	vmov.32	d16[1], r1
   14cf4:	vstr	d16, [r2]
   14cf8:	ldr	r6, [sp, #4]
   14cfc:	cmp	lr, r6
   14d00:	beq	14d30 <ReadInt32Data+0x32b0>
   14d04:	add	r1, sp, #408	; 0x198
   14d08:	sub	r2, r6, lr
   14d0c:	add	r7, r1, lr, lsl #3
   14d10:	add	r1, r8, lr, lsl #2
   14d14:	vldr	d16, [r7]
   14d18:	add	r7, r7, #8
   14d1c:	subs	r2, r2, #1
   14d20:	vcvt.s32.f64	s0, d16
   14d24:	vmov	r3, s0
   14d28:	str	r3, [r1], #4
   14d2c:	bne	14d14 <ReadInt32Data+0x3294>
   14d30:	mov	r7, r0
   14d34:	mul	r0, r7, sl
   14d38:	sub	sp, fp, #28
   14d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d40:	mov	sl, r8
   14d44:	mov	r8, r7
   14d48:	mov	r1, #0
   14d4c:	mov	r7, r8
   14d50:	cmp	ip, #0
   14d54:	mov	r8, sl
   14d58:	mov	r5, r9
   14d5c:	beq	14d78 <ReadInt32Data+0x32f8>
   14d60:	add	r0, sp, #408	; 0x198
   14d64:	add	r0, r0, r1, lsl #3
   14d68:	vld1.64	{d16-d17}, [r0]
   14d6c:	add	r0, r8, r1, lsl #2
   14d70:	vmovn.i64	d16, q8
   14d74:	vstr	d16, [r0]
   14d78:	ldr	r6, [sp, #4]
   14d7c:	ldr	sl, [sp, #260]	; 0x104
   14d80:	ldr	r9, [sp, #244]	; 0xf4
   14d84:	cmp	lr, r6
   14d88:	beq	14704 <ReadInt32Data+0x2c84>
   14d8c:	add	r0, sp, #408	; 0x198
   14d90:	add	r2, r8, lr, lsl #2
   14d94:	add	r1, r0, lr, lsl #3
   14d98:	sub	r0, r6, lr
   14d9c:	ldr	r3, [r1], #8
   14da0:	subs	r0, r0, #1
   14da4:	str	r3, [r2], #4
   14da8:	bne	14d9c <ReadInt32Data+0x331c>
   14dac:	b	14704 <ReadInt32Data+0x2c84>
   14db0:	mov	sl, r8
   14db4:	mov	r8, r7
   14db8:	mov	r1, #0
   14dbc:	mov	r7, r8
   14dc0:	cmp	ip, #0
   14dc4:	mov	r8, sl
   14dc8:	beq	14de4 <ReadInt32Data+0x3364>
   14dcc:	add	r0, sp, #408	; 0x198
   14dd0:	add	r0, r0, r1, lsl #3
   14dd4:	vld1.64	{d16-d17}, [r0]
   14dd8:	add	r0, r8, r1, lsl #2
   14ddc:	vmovn.i64	d16, q8
   14de0:	vstr	d16, [r0]
   14de4:	ldr	sl, [sp, #260]	; 0x104
   14de8:	mov	r6, r9
   14dec:	cmp	lr, r9
   14df0:	beq	1516c <ReadInt32Data+0x36ec>
   14df4:	add	r0, sp, #408	; 0x198
   14df8:	add	r2, r8, lr, lsl #2
   14dfc:	add	r1, r0, lr, lsl #3
   14e00:	sub	r0, r6, lr
   14e04:	ldr	r3, [r1], #8
   14e08:	subs	r0, r0, #1
   14e0c:	str	r3, [r2], #4
   14e10:	bne	14e04 <ReadInt32Data+0x3384>
   14e14:	b	1516c <ReadInt32Data+0x36ec>
   14e18:	mov	r2, #0
   14e1c:	ldr	r0, [sp, #236]	; 0xec
   14e20:	cmp	r0, #0
   14e24:	beq	14e5c <ReadInt32Data+0x33dc>
   14e28:	add	r0, sp, #408	; 0x198
   14e2c:	ldr	r1, [r0, r2, lsl #1]
   14e30:	add	r0, r0, r2, lsl #1
   14e34:	str	r1, [sp, #288]	; 0x120
   14e38:	ldr	r0, [r0, #4]
   14e3c:	str	r0, [sp, #292]	; 0x124
   14e40:	add	r0, sp, #288	; 0x120
   14e44:	vld1.16	{d16}, [r0 :64]
   14e48:	ldr	r1, [sp]
   14e4c:	add	r0, r2, r7
   14e50:	add	r0, r1, r0, lsl #2
   14e54:	vmovl.s16	q8, d16
   14e58:	vst1.32	{d16-d17}, [r0]
   14e5c:	ldr	r0, [sp, #256]	; 0x100
   14e60:	ldr	r5, [sp, #4]
   14e64:	ldr	r6, [sp, #244]	; 0xf4
   14e68:	cmp	r0, lr
   14e6c:	beq	14ea4 <ReadInt32Data+0x3424>
   14e70:	add	r0, sp, #408	; 0x198
   14e74:	ldr	r2, [sp]
   14e78:	add	r1, r0, lr, lsl #1
   14e7c:	ldr	r0, [sp, #248]	; 0xf8
   14e80:	add	r0, lr, r0
   14e84:	add	r2, r2, r0, lsl #2
   14e88:	sub	r0, r5, r6
   14e8c:	sub	r0, r0, lr
   14e90:	sub	r0, r0, #256	; 0x100
   14e94:	ldrsh	r3, [r1], #2
   14e98:	subs	r0, r0, #1
   14e9c:	str	r3, [r2], #4
   14ea0:	bne	14e94 <ReadInt32Data+0x3414>
   14ea4:	ldr	r7, [sp, #252]	; 0xfc
   14ea8:	mul	r0, r7, sl
   14eac:	sub	sp, fp, #28
   14eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14eb4:	mov	r2, #0
   14eb8:	ldr	r0, [sp, #236]	; 0xec
   14ebc:	cmp	r0, #0
   14ec0:	beq	14ef8 <ReadInt32Data+0x3478>
   14ec4:	add	r0, sp, #408	; 0x198
   14ec8:	ldr	r1, [r0, r2, lsl #1]
   14ecc:	add	r0, r0, r2, lsl #1
   14ed0:	str	r1, [sp, #352]	; 0x160
   14ed4:	ldr	r0, [r0, #4]
   14ed8:	str	r0, [sp, #356]	; 0x164
   14edc:	add	r0, sp, #352	; 0x160
   14ee0:	vld1.16	{d16}, [r0 :64]
   14ee4:	ldr	r1, [sp]
   14ee8:	add	r0, r2, r7
   14eec:	add	r0, r1, r0, lsl #2
   14ef0:	vmovl.u16	q8, d16
   14ef4:	vst1.32	{d16-d17}, [r0]
   14ef8:	ldr	r0, [sp, #256]	; 0x100
   14efc:	ldr	r5, [sp, #4]
   14f00:	ldr	r6, [sp, #244]	; 0xf4
   14f04:	cmp	r0, lr
   14f08:	beq	14f40 <ReadInt32Data+0x34c0>
   14f0c:	add	r0, sp, #408	; 0x198
   14f10:	ldr	r2, [sp]
   14f14:	add	r1, r0, lr, lsl #1
   14f18:	ldr	r0, [sp, #248]	; 0xf8
   14f1c:	add	r0, lr, r0
   14f20:	add	r2, r2, r0, lsl #2
   14f24:	sub	r0, r5, r6
   14f28:	sub	r0, r0, lr
   14f2c:	sub	r0, r0, #256	; 0x100
   14f30:	ldrh	r3, [r1], #2
   14f34:	subs	r0, r0, #1
   14f38:	str	r3, [r2], #4
   14f3c:	bne	14f30 <ReadInt32Data+0x34b0>
   14f40:	ldr	r7, [sp, #252]	; 0xfc
   14f44:	mul	r0, r7, sl
   14f48:	sub	sp, fp, #28
   14f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f50:	mov	r2, #0
   14f54:	ldr	r3, [sp]
   14f58:	cmp	ip, #0
   14f5c:	mov	r7, r6
   14f60:	beq	14f80 <ReadInt32Data+0x3500>
   14f64:	add	r1, sp, #408	; 0x198
   14f68:	add	r1, r1, r2, lsl #2
   14f6c:	vld1.32	{d16-d17}, [r1]
   14f70:	add	r1, r2, r9
   14f74:	add	r1, r3, r1, lsl #2
   14f78:	vcvt.s32.f32	q8, q8
   14f7c:	vst1.32	{d16-d17}, [r1]
   14f80:	cmp	lr, r0
   14f84:	beq	15168 <ReadInt32Data+0x36e8>
   14f88:	add	r2, r0, sl
   14f8c:	ldr	r6, [sp, #252]	; 0xfc
   14f90:	add	r1, sp, #408	; 0x198
   14f94:	add	r2, r3, r2, lsl #2
   14f98:	ldr	r3, [sp, #4]
   14f9c:	add	r1, r1, r0, lsl #2
   14fa0:	sub	r3, r3, r6
   14fa4:	sub	r0, r3, r0
   14fa8:	sub	r0, r0, #256	; 0x100
   14fac:	vldr	s0, [r1]
   14fb0:	add	r1, r1, #4
   14fb4:	subs	r0, r0, #1
   14fb8:	vcvt.s32.f32	s0, s0
   14fbc:	vmov	r3, s0
   14fc0:	str	r3, [r2], #4
   14fc4:	bne	14fac <ReadInt32Data+0x352c>
   14fc8:	b	15168 <ReadInt32Data+0x36e8>
   14fcc:	mov	r2, #0
   14fd0:	ldr	r0, [sp, #256]	; 0x100
   14fd4:	ldr	r6, [sp, #252]	; 0xfc
   14fd8:	mov	r7, sl
   14fdc:	cmp	r0, #0
   14fe0:	beq	15018 <ReadInt32Data+0x3598>
   14fe4:	add	r0, sp, #408	; 0x198
   14fe8:	add	r0, r0, r2, lsl #3
   14fec:	vld1.64	{d16-d17}, [r0]
   14ff0:	add	r0, r2, r9
   14ff4:	vcvt.s32.f64	s0, d16
   14ff8:	vmov	r1, s0
   14ffc:	vcvt.s32.f64	s0, d17
   15000:	vmov.32	d16[0], r1
   15004:	ldr	r1, [sp]
   15008:	add	r0, r1, r0, lsl #2
   1500c:	vmov	r1, s0
   15010:	vmov.32	d16[1], r1
   15014:	vstr	d16, [r0]
   15018:	ldr	sl, [sp, #260]	; 0x104
   1501c:	ldr	r3, [sp, #4]
   15020:	cmp	ip, lr
   15024:	beq	1516c <ReadInt32Data+0x36ec>
   15028:	ldr	r2, [sp]
   1502c:	add	r0, sp, #408	; 0x198
   15030:	add	r1, r0, lr, lsl #3
   15034:	add	r0, lr, r6
   15038:	add	r2, r2, r0, lsl #2
   1503c:	ldr	r0, [sp, #248]	; 0xf8
   15040:	sub	r0, r3, r0
   15044:	sub	r0, r0, lr
   15048:	sub	r0, r0, #256	; 0x100
   1504c:	vldr	d16, [r1]
   15050:	add	r1, r1, #8
   15054:	subs	r0, r0, #1
   15058:	vcvt.s32.f64	s0, d16
   1505c:	vmov	r3, s0
   15060:	str	r3, [r2], #4
   15064:	bne	1504c <ReadInt32Data+0x35cc>
   15068:	b	1516c <ReadInt32Data+0x36ec>
   1506c:	mov	r2, #0
   15070:	ldr	r1, [sp, #236]	; 0xec
   15074:	mov	r7, ip
   15078:	ldr	ip, [sp]
   1507c:	ldr	r5, [sp, #256]	; 0x100
   15080:	cmp	r1, #0
   15084:	beq	150a4 <ReadInt32Data+0x3624>
   15088:	add	r1, sp, #408	; 0x198
   1508c:	add	r1, r1, r2, lsl #3
   15090:	vld1.64	{d16-d17}, [r1]
   15094:	add	r1, r2, r9
   15098:	add	r1, ip, r1, lsl #2
   1509c:	vmovn.i64	d16, q8
   150a0:	vstr	d16, [r1]
   150a4:	ldr	r6, [sp, #4]
   150a8:	cmp	lr, r0
   150ac:	bne	150b8 <ReadInt32Data+0x3638>
   150b0:	mov	r8, ip
   150b4:	b	14700 <ReadInt32Data+0x2c80>
   150b8:	ldr	r2, [sp, #252]	; 0xfc
   150bc:	ldr	r3, [sp, #248]	; 0xf8
   150c0:	add	r1, sp, #408	; 0x198
   150c4:	mov	r8, ip
   150c8:	add	r1, r1, r0, lsl #3
   150cc:	add	r2, r0, r2
   150d0:	sub	r3, r6, r3
   150d4:	sub	r0, r3, r0
   150d8:	add	r2, ip, r2, lsl #2
   150dc:	sub	r0, r0, #256	; 0x100
   150e0:	ldr	r3, [r1], #8
   150e4:	subs	r0, r0, #1
   150e8:	str	r3, [r2], #4
   150ec:	bne	150e0 <ReadInt32Data+0x3660>
   150f0:	b	14700 <ReadInt32Data+0x2c80>
   150f4:	mov	r2, #0
   150f8:	ldr	r7, [sp, #252]	; 0xfc
   150fc:	cmp	ip, #0
   15100:	beq	15124 <ReadInt32Data+0x36a4>
   15104:	add	r1, sp, #408	; 0x198
   15108:	add	r1, r1, r2, lsl #3
   1510c:	vld1.64	{d16-d17}, [r1]
   15110:	add	r1, r2, r9
   15114:	ldr	r2, [sp]
   15118:	add	r1, r2, r1, lsl #2
   1511c:	vmovn.i64	d16, q8
   15120:	vstr	d16, [r1]
   15124:	ldr	r0, [sp, #4]
   15128:	cmp	lr, sl
   1512c:	mov	r6, r4
   15130:	beq	15168 <ReadInt32Data+0x36e8>
   15134:	ldr	r3, [sp]
   15138:	add	r2, sl, r6
   1513c:	add	r1, sp, #408	; 0x198
   15140:	add	r1, r1, sl, lsl #3
   15144:	add	r2, r3, r2, lsl #2
   15148:	ldr	r3, [sp, #248]	; 0xf8
   1514c:	sub	r3, r0, r3
   15150:	sub	r0, r3, sl
   15154:	sub	r0, r0, #256	; 0x100
   15158:	ldr	r3, [r1], #8
   1515c:	subs	r0, r0, #1
   15160:	str	r3, [r2], #4
   15164:	bne	15158 <ReadInt32Data+0x36d8>
   15168:	ldr	sl, [sp, #260]	; 0x104
   1516c:	mul	r0, r7, sl
   15170:	sub	sp, fp, #28
   15174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015178 <ReadCompressedInt32Data>:
   15178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1517c:	add	fp, sp, #28
   15180:	sub	sp, sp, #12
   15184:	mov	r7, r0
   15188:	mov	r0, #0
   1518c:	cmp	r1, #0
   15190:	beq	151a4 <ReadCompressedInt32Data+0x2c>
   15194:	cmp	r7, #0
   15198:	movne	r5, r2
   1519c:	cmpne	r2, #0
   151a0:	bne	151ac <ReadCompressedInt32Data+0x34>
   151a4:	sub	sp, fp, #28
   151a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151ac:	ldr	sl, [fp, #8]
   151b0:	mov	r0, r3
   151b4:	mov	r4, r3
   151b8:	mov	r6, r1
   151bc:	bl	1924 <Mat_SizeOf@plt>
   151c0:	mov	r9, r0
   151c4:	sub	r0, r4, #1
   151c8:	cmp	r0, #12
   151cc:	bhi	1569c <ReadCompressedInt32Data+0x524>
   151d0:	add	r1, pc, #4
   151d4:	ldr	r0, [r1, r0, lsl #2]
   151d8:	add	pc, r1, r0
   151dc:	.word	0x00000034
   151e0:	.word	0x0000006c
   151e4:	.word	0x000000a4
   151e8:	.word	0x000000ec
   151ec:	.word	0x00000134
   151f0:	.word	0x0000017c
   151f4:	.word	0x000001c4
   151f8:	.word	0x000004c0
   151fc:	.word	0x00000214
   15200:	.word	0x000004c0
   15204:	.word	0x000004c0
   15208:	.word	0x00000264
   1520c:	.word	0x000002ac
   15210:	cmp	sl, #1
   15214:	blt	1569c <ReadCompressedInt32Data+0x524>
   15218:	mov	r8, sp
   1521c:	mov	r4, sl
   15220:	mov	r0, r7
   15224:	mov	r1, r6
   15228:	mov	r2, r8
   1522c:	mov	r3, r9
   15230:	bl	34ac <InflateData>
   15234:	ldrsb	r0, [sp]
   15238:	subs	r4, r4, #1
   1523c:	str	r0, [r5], #4
   15240:	bne	15220 <ReadCompressedInt32Data+0xa8>
   15244:	b	1569c <ReadCompressedInt32Data+0x524>
   15248:	cmp	sl, #1
   1524c:	blt	1569c <ReadCompressedInt32Data+0x524>
   15250:	mov	r8, sp
   15254:	mov	r4, sl
   15258:	mov	r0, r7
   1525c:	mov	r1, r6
   15260:	mov	r2, r8
   15264:	mov	r3, r9
   15268:	bl	34ac <InflateData>
   1526c:	ldrb	r0, [sp]
   15270:	subs	r4, r4, #1
   15274:	str	r0, [r5], #4
   15278:	bne	15258 <ReadCompressedInt32Data+0xe0>
   1527c:	b	1569c <ReadCompressedInt32Data+0x524>
   15280:	ldr	r0, [r7, #20]
   15284:	cmp	r0, #0
   15288:	beq	154d0 <ReadCompressedInt32Data+0x358>
   1528c:	cmp	sl, #1
   15290:	blt	1569c <ReadCompressedInt32Data+0x524>
   15294:	mov	r8, sp
   15298:	mov	r4, sl
   1529c:	mov	r0, r7
   152a0:	mov	r1, r6
   152a4:	mov	r2, r8
   152a8:	mov	r3, r9
   152ac:	bl	34ac <InflateData>
   152b0:	mov	r0, r8
   152b4:	bl	1c20 <Mat_int16Swap>
   152b8:	str	r0, [r5], #4
   152bc:	subs	r4, r4, #1
   152c0:	bne	1529c <ReadCompressedInt32Data+0x124>
   152c4:	b	1569c <ReadCompressedInt32Data+0x524>
   152c8:	ldr	r0, [r7, #20]
   152cc:	cmp	r0, #0
   152d0:	beq	15508 <ReadCompressedInt32Data+0x390>
   152d4:	cmp	sl, #1
   152d8:	blt	1569c <ReadCompressedInt32Data+0x524>
   152dc:	mov	r8, sp
   152e0:	mov	r4, sl
   152e4:	mov	r0, r7
   152e8:	mov	r1, r6
   152ec:	mov	r2, r8
   152f0:	mov	r3, r9
   152f4:	bl	34ac <InflateData>
   152f8:	mov	r0, r8
   152fc:	bl	1c34 <Mat_uint16Swap>
   15300:	str	r0, [r5], #4
   15304:	subs	r4, r4, #1
   15308:	bne	152e4 <ReadCompressedInt32Data+0x16c>
   1530c:	b	1569c <ReadCompressedInt32Data+0x524>
   15310:	ldr	r0, [r7, #20]
   15314:	cmp	r0, #0
   15318:	beq	15540 <ReadCompressedInt32Data+0x3c8>
   1531c:	cmp	sl, #1
   15320:	blt	1569c <ReadCompressedInt32Data+0x524>
   15324:	mov	r8, sp
   15328:	mov	r4, sl
   1532c:	mov	r0, r7
   15330:	mov	r1, r6
   15334:	mov	r2, r8
   15338:	mov	r3, r9
   1533c:	bl	34ac <InflateData>
   15340:	mov	r0, r8
   15344:	bl	1bf8 <Mat_int32Swap>
   15348:	str	r0, [r5], #4
   1534c:	subs	r4, r4, #1
   15350:	bne	1532c <ReadCompressedInt32Data+0x1b4>
   15354:	b	1569c <ReadCompressedInt32Data+0x524>
   15358:	ldr	r0, [r7, #20]
   1535c:	cmp	r0, #0
   15360:	beq	15578 <ReadCompressedInt32Data+0x400>
   15364:	cmp	sl, #1
   15368:	blt	1569c <ReadCompressedInt32Data+0x524>
   1536c:	mov	r8, sp
   15370:	mov	r4, sl
   15374:	mov	r0, r7
   15378:	mov	r1, r6
   1537c:	mov	r2, r8
   15380:	mov	r3, r9
   15384:	bl	34ac <InflateData>
   15388:	mov	r0, r8
   1538c:	bl	1c0c <Mat_uint32Swap>
   15390:	str	r0, [r5], #4
   15394:	subs	r4, r4, #1
   15398:	bne	15374 <ReadCompressedInt32Data+0x1fc>
   1539c:	b	1569c <ReadCompressedInt32Data+0x524>
   153a0:	ldr	r0, [r7, #20]
   153a4:	cmp	r0, #0
   153a8:	beq	155b0 <ReadCompressedInt32Data+0x438>
   153ac:	cmp	sl, #1
   153b0:	blt	1569c <ReadCompressedInt32Data+0x524>
   153b4:	mov	r8, sp
   153b8:	mov	r4, sl
   153bc:	mov	r0, r7
   153c0:	mov	r1, r6
   153c4:	mov	r2, r8
   153c8:	mov	r3, r9
   153cc:	bl	34ac <InflateData>
   153d0:	mov	r0, r8
   153d4:	bl	1c4c <Mat_floatSwap>
   153d8:	vcvt.s32.f32	s0, s0
   153dc:	subs	r4, r4, #1
   153e0:	vmov	r0, s0
   153e4:	str	r0, [r5], #4
   153e8:	bne	153bc <ReadCompressedInt32Data+0x244>
   153ec:	b	1569c <ReadCompressedInt32Data+0x524>
   153f0:	ldr	r0, [r7, #20]
   153f4:	cmp	r0, #0
   153f8:	beq	155f0 <ReadCompressedInt32Data+0x478>
   153fc:	cmp	sl, #1
   15400:	blt	1569c <ReadCompressedInt32Data+0x524>
   15404:	mov	r8, sp
   15408:	mov	r4, sl
   1540c:	mov	r0, r7
   15410:	mov	r1, r6
   15414:	mov	r2, r8
   15418:	mov	r3, r9
   1541c:	bl	34ac <InflateData>
   15420:	mov	r0, r8
   15424:	bl	1c90 <Mat_doubleSwap>
   15428:	vcvt.s32.f64	s0, d0
   1542c:	subs	r4, r4, #1
   15430:	vmov	r0, s0
   15434:	str	r0, [r5], #4
   15438:	bne	1540c <ReadCompressedInt32Data+0x294>
   1543c:	b	1569c <ReadCompressedInt32Data+0x524>
   15440:	ldr	r0, [r7, #20]
   15444:	cmp	r0, #0
   15448:	beq	15630 <ReadCompressedInt32Data+0x4b8>
   1544c:	cmp	sl, #1
   15450:	blt	1569c <ReadCompressedInt32Data+0x524>
   15454:	mov	r8, sp
   15458:	mov	r4, sl
   1545c:	mov	r0, r7
   15460:	mov	r1, r6
   15464:	mov	r2, r8
   15468:	mov	r3, r9
   1546c:	bl	34ac <InflateData>
   15470:	mov	r0, r8
   15474:	bl	1b84 <Mat_int64Swap>
   15478:	str	r0, [r5], #4
   1547c:	subs	r4, r4, #1
   15480:	bne	1545c <ReadCompressedInt32Data+0x2e4>
   15484:	b	1569c <ReadCompressedInt32Data+0x524>
   15488:	ldr	r0, [r7, #20]
   1548c:	cmp	r0, #0
   15490:	beq	15668 <ReadCompressedInt32Data+0x4f0>
   15494:	cmp	sl, #1
   15498:	blt	1569c <ReadCompressedInt32Data+0x524>
   1549c:	mov	r8, sp
   154a0:	mov	r4, sl
   154a4:	mov	r0, r7
   154a8:	mov	r1, r6
   154ac:	mov	r2, r8
   154b0:	mov	r3, r9
   154b4:	bl	34ac <InflateData>
   154b8:	mov	r0, r8
   154bc:	bl	1bd4 <Mat_uint64Swap>
   154c0:	str	r0, [r5], #4
   154c4:	subs	r4, r4, #1
   154c8:	bne	154a4 <ReadCompressedInt32Data+0x32c>
   154cc:	b	1569c <ReadCompressedInt32Data+0x524>
   154d0:	cmp	sl, #1
   154d4:	blt	1569c <ReadCompressedInt32Data+0x524>
   154d8:	mov	r8, sp
   154dc:	mov	r4, sl
   154e0:	mov	r0, r7
   154e4:	mov	r1, r6
   154e8:	mov	r2, r8
   154ec:	mov	r3, r9
   154f0:	bl	34ac <InflateData>
   154f4:	ldrsh	r0, [sp]
   154f8:	subs	r4, r4, #1
   154fc:	str	r0, [r5], #4
   15500:	bne	154e0 <ReadCompressedInt32Data+0x368>
   15504:	b	1569c <ReadCompressedInt32Data+0x524>
   15508:	cmp	sl, #1
   1550c:	blt	1569c <ReadCompressedInt32Data+0x524>
   15510:	mov	r8, sp
   15514:	mov	r4, sl
   15518:	mov	r0, r7
   1551c:	mov	r1, r6
   15520:	mov	r2, r8
   15524:	mov	r3, r9
   15528:	bl	34ac <InflateData>
   1552c:	ldrh	r0, [sp]
   15530:	subs	r4, r4, #1
   15534:	str	r0, [r5], #4
   15538:	bne	15518 <ReadCompressedInt32Data+0x3a0>
   1553c:	b	1569c <ReadCompressedInt32Data+0x524>
   15540:	cmp	sl, #1
   15544:	blt	1569c <ReadCompressedInt32Data+0x524>
   15548:	mov	r8, sp
   1554c:	mov	r4, sl
   15550:	mov	r0, r7
   15554:	mov	r1, r6
   15558:	mov	r2, r8
   1555c:	mov	r3, r9
   15560:	bl	34ac <InflateData>
   15564:	ldr	r0, [sp]
   15568:	subs	r4, r4, #1
   1556c:	str	r0, [r5], #4
   15570:	bne	15550 <ReadCompressedInt32Data+0x3d8>
   15574:	b	1569c <ReadCompressedInt32Data+0x524>
   15578:	cmp	sl, #1
   1557c:	blt	1569c <ReadCompressedInt32Data+0x524>
   15580:	mov	r8, sp
   15584:	mov	r4, sl
   15588:	mov	r0, r7
   1558c:	mov	r1, r6
   15590:	mov	r2, r8
   15594:	mov	r3, r9
   15598:	bl	34ac <InflateData>
   1559c:	ldr	r0, [sp]
   155a0:	subs	r4, r4, #1
   155a4:	str	r0, [r5], #4
   155a8:	bne	15588 <ReadCompressedInt32Data+0x410>
   155ac:	b	1569c <ReadCompressedInt32Data+0x524>
   155b0:	cmp	sl, #1
   155b4:	blt	1569c <ReadCompressedInt32Data+0x524>
   155b8:	mov	r8, sp
   155bc:	mov	r4, sl
   155c0:	mov	r0, r7
   155c4:	mov	r1, r6
   155c8:	mov	r2, r8
   155cc:	mov	r3, r9
   155d0:	bl	34ac <InflateData>
   155d4:	vldr	s0, [sp]
   155d8:	subs	r4, r4, #1
   155dc:	vcvt.s32.f32	s0, s0
   155e0:	vmov	r0, s0
   155e4:	str	r0, [r5], #4
   155e8:	bne	155c0 <ReadCompressedInt32Data+0x448>
   155ec:	b	1569c <ReadCompressedInt32Data+0x524>
   155f0:	cmp	sl, #1
   155f4:	blt	1569c <ReadCompressedInt32Data+0x524>
   155f8:	mov	r8, sp
   155fc:	mov	r4, sl
   15600:	mov	r0, r7
   15604:	mov	r1, r6
   15608:	mov	r2, r8
   1560c:	mov	r3, r9
   15610:	bl	34ac <InflateData>
   15614:	vldr	d16, [sp]
   15618:	subs	r4, r4, #1
   1561c:	vcvt.s32.f64	s0, d16
   15620:	vmov	r0, s0
   15624:	str	r0, [r5], #4
   15628:	bne	15600 <ReadCompressedInt32Data+0x488>
   1562c:	b	1569c <ReadCompressedInt32Data+0x524>
   15630:	cmp	sl, #1
   15634:	blt	1569c <ReadCompressedInt32Data+0x524>
   15638:	mov	r8, sp
   1563c:	mov	r4, sl
   15640:	mov	r0, r7
   15644:	mov	r1, r6
   15648:	mov	r2, r8
   1564c:	mov	r3, r9
   15650:	bl	34ac <InflateData>
   15654:	ldr	r0, [sp]
   15658:	subs	r4, r4, #1
   1565c:	str	r0, [r5], #4
   15660:	bne	15640 <ReadCompressedInt32Data+0x4c8>
   15664:	b	1569c <ReadCompressedInt32Data+0x524>
   15668:	cmp	sl, #1
   1566c:	blt	1569c <ReadCompressedInt32Data+0x524>
   15670:	mov	r8, sp
   15674:	mov	r4, sl
   15678:	mov	r0, r7
   1567c:	mov	r1, r6
   15680:	mov	r2, r8
   15684:	mov	r3, r9
   15688:	bl	34ac <InflateData>
   1568c:	ldr	r0, [sp]
   15690:	subs	r4, r4, #1
   15694:	str	r0, [r5], #4
   15698:	bne	15678 <ReadCompressedInt32Data+0x500>
   1569c:	mul	r0, r9, sl
   156a0:	sub	sp, fp, #28
   156a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000156a8 <ReadUInt32Data>:
   156a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156ac:	add	fp, sp, #28
   156b0:	sub	sp, sp, #412	; 0x19c
   156b4:	sub	sp, sp, #2048	; 0x800
   156b8:	mov	r5, r0
   156bc:	mov	r0, #0
   156c0:	cmp	r5, #0
   156c4:	movne	r8, r1
   156c8:	cmpne	r1, #0
   156cc:	bne	156d8 <ReadUInt32Data+0x30>
   156d0:	sub	sp, fp, #28
   156d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156d8:	ldr	r1, [r5]
   156dc:	cmp	r1, #0
   156e0:	beq	156d0 <ReadUInt32Data+0x28>
   156e4:	mov	r0, r2
   156e8:	mov	r6, r3
   156ec:	mov	r9, r2
   156f0:	bl	1924 <Mat_SizeOf@plt>
   156f4:	mov	sl, r0
   156f8:	sub	r0, r9, #1
   156fc:	mov	r7, #0
   15700:	cmp	r0, #11
   15704:	bhi	1832c <ReadUInt32Data+0x2c84>
   15708:	add	r1, sp, #408	; 0x198
   1570c:	add	r4, r1, #4
   15710:	add	r1, pc, #4
   15714:	ldr	r0, [r1, r0, lsl #2]
   15718:	add	pc, r1, r0
   1571c:	.word	0x00000030
   15720:	.word	0x00000178
   15724:	.word	0x000002c0
   15728:	.word	0x00000314
   1572c:	.word	0x00000368
   15730:	.word	0x000003bc
   15734:	.word	0x00000410
   15738:	.word	0x00002c10
   1573c:	.word	0x0000046c
   15740:	.word	0x00002c10
   15744:	.word	0x00002c10
   15748:	.word	0x000004c8
   1574c:	cmp	r6, #256	; 0x100
   15750:	bgt	15c58 <ReadUInt32Data+0x5b0>
   15754:	ldr	r3, [r5]
   15758:	add	r4, sp, #408	; 0x198
   1575c:	mov	r1, sl
   15760:	mov	r2, r6
   15764:	mov	r0, r4
   15768:	bl	18b8 <fread@plt>
   1576c:	mov	r7, r0
   15770:	cmp	r6, #1
   15774:	blt	18d94 <ReadUInt32Data+0x36ec>
   15778:	mov	lr, #0
   1577c:	cmp	r6, #4
   15780:	bcc	15874 <ReadUInt32Data+0x1cc>
   15784:	bic	lr, r6, #3
   15788:	str	r7, [sp, #252]	; 0xfc
   1578c:	mov	r1, #1
   15790:	mov	r9, r6
   15794:	mov	r2, #0
   15798:	sub	r7, lr, #4
   1579c:	add	r3, r1, r7, lsr #2
   157a0:	cmp	r7, #12
   157a4:	and	ip, r3, #3
   157a8:	bcc	1582c <ReadUInt32Data+0x184>
   157ac:	sub	r3, r3, ip
   157b0:	mov	r2, #0
   157b4:	mov	r7, #64	; 0x40
   157b8:	mov	r5, r8
   157bc:	mov	r6, r8
   157c0:	add	r1, r4, r2
   157c4:	subs	r3, r3, #4
   157c8:	add	r2, r2, #16
   157cc:	vld1.32	{d16[0]}, [r1 :32]
   157d0:	add	r0, r1, #4
   157d4:	vmovl.s8	q8, d16
   157d8:	vmovl.s16	q8, d16
   157dc:	vst1.32	{d16-d17}, [r6], r7
   157e0:	vld1.32	{d16[0]}, [r0 :32]
   157e4:	add	r0, r5, #16
   157e8:	vmovl.s8	q8, d16
   157ec:	vmovl.s16	q8, d16
   157f0:	vst1.32	{d16-d17}, [r0]
   157f4:	add	r0, r1, #8
   157f8:	vld1.32	{d16[0]}, [r0 :32]
   157fc:	add	r0, r5, #32
   15800:	vmovl.s8	q8, d16
   15804:	vmovl.s16	q8, d16
   15808:	vst1.32	{d16-d17}, [r0]
   1580c:	add	r0, r1, #12
   15810:	vld1.32	{d16[0]}, [r0 :32]
   15814:	add	r0, r5, #48	; 0x30
   15818:	mov	r5, r6
   1581c:	vmovl.s8	q8, d16
   15820:	vmovl.s16	q8, d16
   15824:	vst1.32	{d16-d17}, [r0]
   15828:	bne	157c0 <ReadUInt32Data+0x118>
   1582c:	cmp	ip, #0
   15830:	beq	15864 <ReadUInt32Data+0x1bc>
   15834:	add	r3, r4, r2
   15838:	add	r2, r8, r2, lsl #2
   1583c:	rsb	r1, ip, #0
   15840:	add	r7, sp, #392	; 0x188
   15844:	ldr	r0, [r3], #4
   15848:	adds	r1, r1, #1
   1584c:	str	r0, [sp, #392]	; 0x188
   15850:	vld1.32	{d16[0]}, [r7 :32]
   15854:	vmovl.s8	q8, d16
   15858:	vmovl.s16	q8, d16
   1585c:	vst1.32	{d16-d17}, [r2]!
   15860:	bcc	15844 <ReadUInt32Data+0x19c>
   15864:	ldr	r7, [sp, #252]	; 0xfc
   15868:	mov	r6, r9
   1586c:	cmp	lr, r9
   15870:	beq	18d94 <ReadUInt32Data+0x36ec>
   15874:	add	r2, r8, lr, lsl #2
   15878:	add	r1, r4, lr
   1587c:	sub	r0, r6, lr
   15880:	ldrsb	r3, [r1], #1
   15884:	subs	r0, r0, #1
   15888:	str	r3, [r2], #4
   1588c:	bne	15880 <ReadUInt32Data+0x1d8>
   15890:	b	18d94 <ReadUInt32Data+0x36ec>
   15894:	cmp	r6, #256	; 0x100
   15898:	bgt	1654c <ReadUInt32Data+0xea4>
   1589c:	ldr	r3, [r5]
   158a0:	add	r4, sp, #408	; 0x198
   158a4:	mov	r1, sl
   158a8:	mov	r2, r6
   158ac:	mov	r0, r4
   158b0:	bl	18b8 <fread@plt>
   158b4:	mov	r7, r0
   158b8:	cmp	r6, #1
   158bc:	blt	18d94 <ReadUInt32Data+0x36ec>
   158c0:	mov	lr, #0
   158c4:	cmp	r6, #4
   158c8:	bcc	159bc <ReadUInt32Data+0x314>
   158cc:	bic	lr, r6, #3
   158d0:	str	r7, [sp, #252]	; 0xfc
   158d4:	mov	r1, #1
   158d8:	mov	r9, r6
   158dc:	mov	r2, #0
   158e0:	sub	r7, lr, #4
   158e4:	add	r3, r1, r7, lsr #2
   158e8:	cmp	r7, #12
   158ec:	and	ip, r3, #3
   158f0:	bcc	15974 <ReadUInt32Data+0x2cc>
   158f4:	sub	r3, r3, ip
   158f8:	mov	r2, #0
   158fc:	mov	r7, #64	; 0x40
   15900:	mov	r5, r8
   15904:	mov	r6, r8
   15908:	add	r1, r4, r2
   1590c:	subs	r3, r3, #4
   15910:	add	r2, r2, #16
   15914:	vld1.32	{d16[0]}, [r1 :32]
   15918:	add	r0, r1, #4
   1591c:	vmovl.u8	q8, d16
   15920:	vmovl.u16	q8, d16
   15924:	vst1.32	{d16-d17}, [r6], r7
   15928:	vld1.32	{d16[0]}, [r0 :32]
   1592c:	add	r0, r5, #16
   15930:	vmovl.u8	q8, d16
   15934:	vmovl.u16	q8, d16
   15938:	vst1.32	{d16-d17}, [r0]
   1593c:	add	r0, r1, #8
   15940:	vld1.32	{d16[0]}, [r0 :32]
   15944:	add	r0, r5, #32
   15948:	vmovl.u8	q8, d16
   1594c:	vmovl.u16	q8, d16
   15950:	vst1.32	{d16-d17}, [r0]
   15954:	add	r0, r1, #12
   15958:	vld1.32	{d16[0]}, [r0 :32]
   1595c:	add	r0, r5, #48	; 0x30
   15960:	mov	r5, r6
   15964:	vmovl.u8	q8, d16
   15968:	vmovl.u16	q8, d16
   1596c:	vst1.32	{d16-d17}, [r0]
   15970:	bne	15908 <ReadUInt32Data+0x260>
   15974:	cmp	ip, #0
   15978:	beq	159ac <ReadUInt32Data+0x304>
   1597c:	add	r3, r4, r2
   15980:	add	r2, r8, r2, lsl #2
   15984:	rsb	r1, ip, #0
   15988:	add	r7, sp, #400	; 0x190
   1598c:	ldr	r0, [r3], #4
   15990:	adds	r1, r1, #1
   15994:	str	r0, [sp, #400]	; 0x190
   15998:	vld1.32	{d16[0]}, [r7 :32]
   1599c:	vmovl.u8	q8, d16
   159a0:	vmovl.u16	q8, d16
   159a4:	vst1.32	{d16-d17}, [r2]!
   159a8:	bcc	1598c <ReadUInt32Data+0x2e4>
   159ac:	ldr	r7, [sp, #252]	; 0xfc
   159b0:	mov	r6, r9
   159b4:	cmp	lr, r9
   159b8:	beq	18d94 <ReadUInt32Data+0x36ec>
   159bc:	add	r2, r8, lr, lsl #2
   159c0:	add	r1, r4, lr
   159c4:	sub	r0, r6, lr
   159c8:	ldrb	r3, [r1], #1
   159cc:	subs	r0, r0, #1
   159d0:	str	r3, [r2], #4
   159d4:	bne	159c8 <ReadUInt32Data+0x320>
   159d8:	b	18d94 <ReadUInt32Data+0x36ec>
   159dc:	ldr	r0, [r5, #20]
   159e0:	cmp	r0, #0
   159e4:	beq	16e40 <ReadUInt32Data+0x1798>
   159e8:	cmp	r6, #256	; 0x100
   159ec:	bgt	172e8 <ReadUInt32Data+0x1c40>
   159f0:	ldr	r3, [r5]
   159f4:	add	r4, sp, #408	; 0x198
   159f8:	mov	r1, sl
   159fc:	mov	r2, r6
   15a00:	mov	r0, r4
   15a04:	bl	18b8 <fread@plt>
   15a08:	mov	r7, r0
   15a0c:	cmp	r6, #1
   15a10:	blt	18d94 <ReadUInt32Data+0x36ec>
   15a14:	mov	r0, r4
   15a18:	bl	1c20 <Mat_int16Swap>
   15a1c:	str	r0, [r8], #4
   15a20:	add	r4, r4, #2
   15a24:	subs	r6, r6, #1
   15a28:	bne	15a14 <ReadUInt32Data+0x36c>
   15a2c:	b	18d94 <ReadUInt32Data+0x36ec>
   15a30:	ldr	r0, [r5, #20]
   15a34:	cmp	r0, #0
   15a38:	beq	16f08 <ReadUInt32Data+0x1860>
   15a3c:	cmp	r6, #256	; 0x100
   15a40:	bgt	173d4 <ReadUInt32Data+0x1d2c>
   15a44:	ldr	r3, [r5]
   15a48:	add	r4, sp, #408	; 0x198
   15a4c:	mov	r1, sl
   15a50:	mov	r2, r6
   15a54:	mov	r0, r4
   15a58:	bl	18b8 <fread@plt>
   15a5c:	mov	r7, r0
   15a60:	cmp	r6, #1
   15a64:	blt	18d94 <ReadUInt32Data+0x36ec>
   15a68:	mov	r0, r4
   15a6c:	bl	1c34 <Mat_uint16Swap>
   15a70:	str	r0, [r8], #4
   15a74:	add	r4, r4, #2
   15a78:	subs	r6, r6, #1
   15a7c:	bne	15a68 <ReadUInt32Data+0x3c0>
   15a80:	b	18d94 <ReadUInt32Data+0x36ec>
   15a84:	ldr	r0, [r5, #20]
   15a88:	cmp	r0, #0
   15a8c:	beq	16fd0 <ReadUInt32Data+0x1928>
   15a90:	cmp	r6, #256	; 0x100
   15a94:	bgt	174c0 <ReadUInt32Data+0x1e18>
   15a98:	ldr	r3, [r5]
   15a9c:	add	r4, sp, #408	; 0x198
   15aa0:	mov	r1, sl
   15aa4:	mov	r2, r6
   15aa8:	mov	r0, r4
   15aac:	bl	18b8 <fread@plt>
   15ab0:	mov	r7, r0
   15ab4:	cmp	r6, #1
   15ab8:	blt	18d94 <ReadUInt32Data+0x36ec>
   15abc:	mov	r0, r4
   15ac0:	bl	1bf8 <Mat_int32Swap>
   15ac4:	str	r0, [r8], #4
   15ac8:	add	r4, r4, #4
   15acc:	subs	r6, r6, #1
   15ad0:	bne	15abc <ReadUInt32Data+0x414>
   15ad4:	b	18d94 <ReadUInt32Data+0x36ec>
   15ad8:	ldr	r0, [r5, #20]
   15adc:	cmp	r0, #0
   15ae0:	beq	17094 <ReadUInt32Data+0x19ec>
   15ae4:	cmp	r6, #256	; 0x100
   15ae8:	bgt	175ac <ReadUInt32Data+0x1f04>
   15aec:	ldr	r3, [r5]
   15af0:	add	r4, sp, #408	; 0x198
   15af4:	mov	r1, sl
   15af8:	mov	r2, r6
   15afc:	mov	r0, r4
   15b00:	bl	18b8 <fread@plt>
   15b04:	mov	r7, r0
   15b08:	cmp	r6, #1
   15b0c:	blt	18d94 <ReadUInt32Data+0x36ec>
   15b10:	mov	r0, r4
   15b14:	bl	1c0c <Mat_uint32Swap>
   15b18:	str	r0, [r8], #4
   15b1c:	add	r4, r4, #4
   15b20:	subs	r6, r6, #1
   15b24:	bne	15b10 <ReadUInt32Data+0x468>
   15b28:	b	18d94 <ReadUInt32Data+0x36ec>
   15b2c:	ldr	r0, [r5, #20]
   15b30:	cmp	r0, #0
   15b34:	beq	170d8 <ReadUInt32Data+0x1a30>
   15b38:	cmp	r6, #256	; 0x100
   15b3c:	bgt	17698 <ReadUInt32Data+0x1ff0>
   15b40:	ldr	r3, [r5]
   15b44:	add	r4, sp, #408	; 0x198
   15b48:	mov	r1, sl
   15b4c:	mov	r2, r6
   15b50:	mov	r0, r4
   15b54:	bl	18b8 <fread@plt>
   15b58:	mov	r7, r0
   15b5c:	cmp	r6, #1
   15b60:	blt	18d94 <ReadUInt32Data+0x36ec>
   15b64:	mov	r0, r4
   15b68:	bl	1c4c <Mat_floatSwap>
   15b6c:	vcvt.u32.f32	s0, s0
   15b70:	add	r4, r4, #4
   15b74:	subs	r6, r6, #1
   15b78:	vmov	r0, s0
   15b7c:	str	r0, [r8], #4
   15b80:	bne	15b64 <ReadUInt32Data+0x4bc>
   15b84:	b	18d94 <ReadUInt32Data+0x36ec>
   15b88:	ldr	r0, [r5, #20]
   15b8c:	cmp	r0, #0
   15b90:	beq	17174 <ReadUInt32Data+0x1acc>
   15b94:	cmp	r6, #256	; 0x100
   15b98:	bgt	17794 <ReadUInt32Data+0x20ec>
   15b9c:	ldr	r3, [r5]
   15ba0:	add	r4, sp, #408	; 0x198
   15ba4:	mov	r1, sl
   15ba8:	mov	r2, r6
   15bac:	mov	r0, r4
   15bb0:	bl	18b8 <fread@plt>
   15bb4:	mov	r7, r0
   15bb8:	cmp	r6, #1
   15bbc:	blt	18d94 <ReadUInt32Data+0x36ec>
   15bc0:	mov	r0, r4
   15bc4:	bl	1c90 <Mat_doubleSwap>
   15bc8:	vcvt.u32.f64	s0, d0
   15bcc:	add	r4, r4, #8
   15bd0:	subs	r6, r6, #1
   15bd4:	vmov	r0, s0
   15bd8:	str	r0, [r8], #4
   15bdc:	bne	15bc0 <ReadUInt32Data+0x518>
   15be0:	b	18d94 <ReadUInt32Data+0x36ec>
   15be4:	ldr	r0, [r5, #20]
   15be8:	cmp	r0, #0
   15bec:	beq	1723c <ReadUInt32Data+0x1b94>
   15bf0:	cmp	r6, #256	; 0x100
   15bf4:	bgt	17890 <ReadUInt32Data+0x21e8>
   15bf8:	ldr	r3, [r5]
   15bfc:	add	r4, sp, #408	; 0x198
   15c00:	mov	r1, sl
   15c04:	mov	r2, r6
   15c08:	mov	r0, r4
   15c0c:	bl	18b8 <fread@plt>
   15c10:	mov	r7, r0
   15c14:	cmp	r6, #1
   15c18:	blt	1832c <ReadUInt32Data+0x2c84>
   15c1c:	str	r9, [sp, #244]	; 0xf4
   15c20:	str	r5, [sp, #256]	; 0x100
   15c24:	mov	r9, r8
   15c28:	mov	r5, r8
   15c2c:	mov	r8, r6
   15c30:	mov	r0, r4
   15c34:	bl	1b84 <Mat_int64Swap>
   15c38:	str	r0, [r5], #4
   15c3c:	add	r4, r4, #8
   15c40:	subs	r6, r6, #1
   15c44:	bne	15c30 <ReadUInt32Data+0x588>
   15c48:	ldr	r5, [sp, #256]	; 0x100
   15c4c:	mov	r6, r8
   15c50:	mov	r8, r9
   15c54:	b	18328 <ReadUInt32Data+0x2c80>
   15c58:	add	r0, r4, #248	; 0xf8
   15c5c:	str	r6, [sp, #4]
   15c60:	mov	r9, r8
   15c64:	mov	r7, #0
   15c68:	str	r8, [sp]
   15c6c:	str	sl, [sp, #260]	; 0x104
   15c70:	str	r0, [sp, #256]	; 0x100
   15c74:	add	r0, r4, #244	; 0xf4
   15c78:	str	r0, [sp, #252]	; 0xfc
   15c7c:	add	r0, r4, #240	; 0xf0
   15c80:	str	r0, [sp, #248]	; 0xf8
   15c84:	add	r0, r4, #236	; 0xec
   15c88:	str	r0, [sp, #244]	; 0xf4
   15c8c:	add	r0, r4, #232	; 0xe8
   15c90:	str	r0, [sp, #240]	; 0xf0
   15c94:	add	r0, r4, #228	; 0xe4
   15c98:	str	r0, [sp, #236]	; 0xec
   15c9c:	add	r0, r4, #224	; 0xe0
   15ca0:	str	r0, [sp, #232]	; 0xe8
   15ca4:	add	r0, r4, #220	; 0xdc
   15ca8:	str	r0, [sp, #228]	; 0xe4
   15cac:	add	r0, r4, #216	; 0xd8
   15cb0:	str	r0, [sp, #224]	; 0xe0
   15cb4:	add	r0, r4, #212	; 0xd4
   15cb8:	str	r0, [sp, #220]	; 0xdc
   15cbc:	add	r0, r4, #208	; 0xd0
   15cc0:	str	r0, [sp, #216]	; 0xd8
   15cc4:	add	r0, r4, #204	; 0xcc
   15cc8:	str	r0, [sp, #212]	; 0xd4
   15ccc:	add	r0, r4, #200	; 0xc8
   15cd0:	str	r0, [sp, #208]	; 0xd0
   15cd4:	add	r0, r4, #196	; 0xc4
   15cd8:	str	r0, [sp, #204]	; 0xcc
   15cdc:	add	r0, r4, #192	; 0xc0
   15ce0:	str	r0, [sp, #200]	; 0xc8
   15ce4:	add	r0, r4, #188	; 0xbc
   15ce8:	str	r0, [sp, #196]	; 0xc4
   15cec:	add	r0, r4, #184	; 0xb8
   15cf0:	str	r0, [sp, #192]	; 0xc0
   15cf4:	add	r0, r4, #180	; 0xb4
   15cf8:	str	r0, [sp, #188]	; 0xbc
   15cfc:	add	r0, r4, #176	; 0xb0
   15d00:	str	r0, [sp, #184]	; 0xb8
   15d04:	add	r0, r4, #172	; 0xac
   15d08:	str	r0, [sp, #180]	; 0xb4
   15d0c:	add	r0, r4, #168	; 0xa8
   15d10:	str	r0, [sp, #176]	; 0xb0
   15d14:	add	r0, r4, #164	; 0xa4
   15d18:	str	r0, [sp, #172]	; 0xac
   15d1c:	add	r0, r4, #160	; 0xa0
   15d20:	str	r0, [sp, #168]	; 0xa8
   15d24:	add	r0, r4, #156	; 0x9c
   15d28:	str	r0, [sp, #164]	; 0xa4
   15d2c:	add	r0, r4, #152	; 0x98
   15d30:	str	r0, [sp, #160]	; 0xa0
   15d34:	add	r0, r4, #148	; 0x94
   15d38:	str	r0, [sp, #156]	; 0x9c
   15d3c:	add	r0, r4, #144	; 0x90
   15d40:	str	r0, [sp, #152]	; 0x98
   15d44:	add	r0, r4, #140	; 0x8c
   15d48:	str	r0, [sp, #148]	; 0x94
   15d4c:	add	r0, r4, #136	; 0x88
   15d50:	str	r0, [sp, #144]	; 0x90
   15d54:	add	r0, r4, #132	; 0x84
   15d58:	str	r0, [sp, #140]	; 0x8c
   15d5c:	add	r0, r4, #128	; 0x80
   15d60:	str	r0, [sp, #136]	; 0x88
   15d64:	add	r0, r4, #124	; 0x7c
   15d68:	str	r0, [sp, #132]	; 0x84
   15d6c:	add	r0, r4, #120	; 0x78
   15d70:	str	r0, [sp, #128]	; 0x80
   15d74:	add	r0, r4, #116	; 0x74
   15d78:	str	r0, [sp, #124]	; 0x7c
   15d7c:	add	r0, r4, #112	; 0x70
   15d80:	str	r0, [sp, #120]	; 0x78
   15d84:	add	r0, r4, #108	; 0x6c
   15d88:	str	r0, [sp, #116]	; 0x74
   15d8c:	add	r0, r4, #104	; 0x68
   15d90:	str	r0, [sp, #112]	; 0x70
   15d94:	add	r0, r4, #100	; 0x64
   15d98:	str	r0, [sp, #108]	; 0x6c
   15d9c:	add	r0, r4, #96	; 0x60
   15da0:	str	r0, [sp, #104]	; 0x68
   15da4:	add	r0, r4, #92	; 0x5c
   15da8:	str	r0, [sp, #100]	; 0x64
   15dac:	add	r0, r4, #88	; 0x58
   15db0:	str	r0, [sp, #96]	; 0x60
   15db4:	add	r0, r4, #84	; 0x54
   15db8:	str	r0, [sp, #92]	; 0x5c
   15dbc:	add	r0, r4, #80	; 0x50
   15dc0:	str	r0, [sp, #88]	; 0x58
   15dc4:	add	r0, r4, #76	; 0x4c
   15dc8:	str	r0, [sp, #84]	; 0x54
   15dcc:	add	r0, r4, #72	; 0x48
   15dd0:	str	r0, [sp, #80]	; 0x50
   15dd4:	add	r0, r4, #68	; 0x44
   15dd8:	str	r0, [sp, #76]	; 0x4c
   15ddc:	add	r0, r4, #64	; 0x40
   15de0:	str	r0, [sp, #72]	; 0x48
   15de4:	add	r0, r4, #60	; 0x3c
   15de8:	str	r0, [sp, #68]	; 0x44
   15dec:	add	r0, r4, #56	; 0x38
   15df0:	str	r0, [sp, #64]	; 0x40
   15df4:	add	r0, r4, #52	; 0x34
   15df8:	str	r0, [sp, #60]	; 0x3c
   15dfc:	add	r0, r4, #48	; 0x30
   15e00:	str	r0, [sp, #56]	; 0x38
   15e04:	add	r0, r4, #44	; 0x2c
   15e08:	str	r0, [sp, #52]	; 0x34
   15e0c:	add	r0, r4, #40	; 0x28
   15e10:	str	r0, [sp, #48]	; 0x30
   15e14:	add	r0, r4, #36	; 0x24
   15e18:	str	r0, [sp, #44]	; 0x2c
   15e1c:	add	r0, r4, #32
   15e20:	str	r0, [sp, #40]	; 0x28
   15e24:	add	r0, r4, #28
   15e28:	str	r0, [sp, #36]	; 0x24
   15e2c:	add	r0, r4, #24
   15e30:	str	r0, [sp, #32]
   15e34:	add	r0, r4, #20
   15e38:	str	r0, [sp, #28]
   15e3c:	add	r0, r4, #16
   15e40:	str	r0, [sp, #24]
   15e44:	add	r0, r4, #12
   15e48:	str	r0, [sp, #20]
   15e4c:	add	r0, r4, #8
   15e50:	str	r0, [sp, #16]
   15e54:	add	r0, r4, #4
   15e58:	str	r0, [sp, #12]
   15e5c:	sub	r0, r6, #256	; 0x100
   15e60:	mov	r6, #0
   15e64:	str	r0, [sp, #8]
   15e68:	ldr	r3, [r5]
   15e6c:	ldr	r1, [sp, #260]	; 0x104
   15e70:	add	sl, sp, #408	; 0x198
   15e74:	mov	r2, #256	; 0x100
   15e78:	mov	r0, sl
   15e7c:	bl	18b8 <fread@plt>
   15e80:	vld1.32	{d16[0]}, [sl :32]
   15e84:	mov	r1, #1024	; 0x400
   15e88:	add	r7, r0, r7
   15e8c:	ldr	r0, [sp, #8]
   15e90:	add	r6, r6, #256	; 0x100
   15e94:	cmp	r6, r0
   15e98:	vmovl.s8	q8, d16
   15e9c:	vmovl.s16	q8, d16
   15ea0:	vst1.32	{d16-d17}, [r8], r1
   15ea4:	add	r1, r9, #16
   15ea8:	vld1.32	{d16[0]}, [r4 :32]
   15eac:	vmovl.s8	q8, d16
   15eb0:	vmovl.s16	q8, d16
   15eb4:	vst1.32	{d16-d17}, [r1]
   15eb8:	ldr	r1, [sp, #12]
   15ebc:	vld1.32	{d16[0]}, [r1 :32]
   15ec0:	add	r1, r9, #32
   15ec4:	vmovl.s8	q8, d16
   15ec8:	vmovl.s16	q8, d16
   15ecc:	vst1.32	{d16-d17}, [r1]
   15ed0:	ldr	r1, [sp, #16]
   15ed4:	vld1.32	{d16[0]}, [r1 :32]
   15ed8:	add	r1, r9, #48	; 0x30
   15edc:	vmovl.s8	q8, d16
   15ee0:	vmovl.s16	q8, d16
   15ee4:	vst1.32	{d16-d17}, [r1]
   15ee8:	ldr	r1, [sp, #20]
   15eec:	vld1.32	{d16[0]}, [r1 :32]
   15ef0:	add	r1, r9, #64	; 0x40
   15ef4:	vmovl.s8	q8, d16
   15ef8:	vmovl.s16	q8, d16
   15efc:	vst1.32	{d16-d17}, [r1]
   15f00:	ldr	r1, [sp, #24]
   15f04:	vld1.32	{d16[0]}, [r1 :32]
   15f08:	add	r1, r9, #80	; 0x50
   15f0c:	vmovl.s8	q8, d16
   15f10:	vmovl.s16	q8, d16
   15f14:	vst1.32	{d16-d17}, [r1]
   15f18:	ldr	r1, [sp, #28]
   15f1c:	vld1.32	{d16[0]}, [r1 :32]
   15f20:	add	r1, r9, #96	; 0x60
   15f24:	vmovl.s8	q8, d16
   15f28:	vmovl.s16	q8, d16
   15f2c:	vst1.32	{d16-d17}, [r1]
   15f30:	ldr	r1, [sp, #32]
   15f34:	vld1.32	{d16[0]}, [r1 :32]
   15f38:	add	r1, r9, #112	; 0x70
   15f3c:	vmovl.s8	q8, d16
   15f40:	vmovl.s16	q8, d16
   15f44:	vst1.32	{d16-d17}, [r1]
   15f48:	ldr	r1, [sp, #36]	; 0x24
   15f4c:	vld1.32	{d16[0]}, [r1 :32]
   15f50:	add	r1, r9, #128	; 0x80
   15f54:	vmovl.s8	q8, d16
   15f58:	vmovl.s16	q8, d16
   15f5c:	vst1.32	{d16-d17}, [r1]
   15f60:	ldr	r1, [sp, #40]	; 0x28
   15f64:	vld1.32	{d16[0]}, [r1 :32]
   15f68:	add	r1, r9, #144	; 0x90
   15f6c:	vmovl.s8	q8, d16
   15f70:	vmovl.s16	q8, d16
   15f74:	vst1.32	{d16-d17}, [r1]
   15f78:	ldr	r1, [sp, #44]	; 0x2c
   15f7c:	vld1.32	{d16[0]}, [r1 :32]
   15f80:	add	r1, r9, #160	; 0xa0
   15f84:	vmovl.s8	q8, d16
   15f88:	vmovl.s16	q8, d16
   15f8c:	vst1.32	{d16-d17}, [r1]
   15f90:	ldr	r1, [sp, #48]	; 0x30
   15f94:	vld1.32	{d16[0]}, [r1 :32]
   15f98:	add	r1, r9, #176	; 0xb0
   15f9c:	vmovl.s8	q8, d16
   15fa0:	vmovl.s16	q8, d16
   15fa4:	vst1.32	{d16-d17}, [r1]
   15fa8:	ldr	r1, [sp, #52]	; 0x34
   15fac:	vld1.32	{d16[0]}, [r1 :32]
   15fb0:	add	r1, r9, #192	; 0xc0
   15fb4:	vmovl.s8	q8, d16
   15fb8:	vmovl.s16	q8, d16
   15fbc:	vst1.32	{d16-d17}, [r1]
   15fc0:	ldr	r1, [sp, #56]	; 0x38
   15fc4:	vld1.32	{d16[0]}, [r1 :32]
   15fc8:	add	r1, r9, #208	; 0xd0
   15fcc:	vmovl.s8	q8, d16
   15fd0:	vmovl.s16	q8, d16
   15fd4:	vst1.32	{d16-d17}, [r1]
   15fd8:	ldr	r1, [sp, #60]	; 0x3c
   15fdc:	vld1.32	{d16[0]}, [r1 :32]
   15fe0:	add	r1, r9, #224	; 0xe0
   15fe4:	vmovl.s8	q8, d16
   15fe8:	vmovl.s16	q8, d16
   15fec:	vst1.32	{d16-d17}, [r1]
   15ff0:	ldr	r1, [sp, #64]	; 0x40
   15ff4:	vld1.32	{d16[0]}, [r1 :32]
   15ff8:	add	r1, r9, #240	; 0xf0
   15ffc:	vmovl.s8	q8, d16
   16000:	vmovl.s16	q8, d16
   16004:	vst1.32	{d16-d17}, [r1]
   16008:	ldr	r1, [sp, #68]	; 0x44
   1600c:	vld1.32	{d16[0]}, [r1 :32]
   16010:	add	r1, r9, #256	; 0x100
   16014:	vmovl.s8	q8, d16
   16018:	vmovl.s16	q8, d16
   1601c:	vst1.32	{d16-d17}, [r1]
   16020:	ldr	r1, [sp, #72]	; 0x48
   16024:	vld1.32	{d16[0]}, [r1 :32]
   16028:	add	r1, r9, #272	; 0x110
   1602c:	vmovl.s8	q8, d16
   16030:	vmovl.s16	q8, d16
   16034:	vst1.32	{d16-d17}, [r1]
   16038:	ldr	r1, [sp, #76]	; 0x4c
   1603c:	vld1.32	{d16[0]}, [r1 :32]
   16040:	add	r1, r9, #288	; 0x120
   16044:	vmovl.s8	q8, d16
   16048:	vmovl.s16	q8, d16
   1604c:	vst1.32	{d16-d17}, [r1]
   16050:	ldr	r1, [sp, #80]	; 0x50
   16054:	vld1.32	{d16[0]}, [r1 :32]
   16058:	add	r1, r9, #304	; 0x130
   1605c:	vmovl.s8	q8, d16
   16060:	vmovl.s16	q8, d16
   16064:	vst1.32	{d16-d17}, [r1]
   16068:	ldr	r1, [sp, #84]	; 0x54
   1606c:	vld1.32	{d16[0]}, [r1 :32]
   16070:	add	r1, r9, #320	; 0x140
   16074:	vmovl.s8	q8, d16
   16078:	vmovl.s16	q8, d16
   1607c:	vst1.32	{d16-d17}, [r1]
   16080:	ldr	r1, [sp, #88]	; 0x58
   16084:	vld1.32	{d16[0]}, [r1 :32]
   16088:	add	r1, r9, #336	; 0x150
   1608c:	vmovl.s8	q8, d16
   16090:	vmovl.s16	q8, d16
   16094:	vst1.32	{d16-d17}, [r1]
   16098:	ldr	r1, [sp, #92]	; 0x5c
   1609c:	vld1.32	{d16[0]}, [r1 :32]
   160a0:	add	r1, r9, #352	; 0x160
   160a4:	vmovl.s8	q8, d16
   160a8:	vmovl.s16	q8, d16
   160ac:	vst1.32	{d16-d17}, [r1]
   160b0:	ldr	r1, [sp, #96]	; 0x60
   160b4:	vld1.32	{d16[0]}, [r1 :32]
   160b8:	add	r1, r9, #368	; 0x170
   160bc:	vmovl.s8	q8, d16
   160c0:	vmovl.s16	q8, d16
   160c4:	vst1.32	{d16-d17}, [r1]
   160c8:	ldr	r1, [sp, #100]	; 0x64
   160cc:	vld1.32	{d16[0]}, [r1 :32]
   160d0:	add	r1, r9, #384	; 0x180
   160d4:	vmovl.s8	q8, d16
   160d8:	vmovl.s16	q8, d16
   160dc:	vst1.32	{d16-d17}, [r1]
   160e0:	ldr	r1, [sp, #104]	; 0x68
   160e4:	vld1.32	{d16[0]}, [r1 :32]
   160e8:	add	r1, r9, #400	; 0x190
   160ec:	vmovl.s8	q8, d16
   160f0:	vmovl.s16	q8, d16
   160f4:	vst1.32	{d16-d17}, [r1]
   160f8:	ldr	r1, [sp, #108]	; 0x6c
   160fc:	vld1.32	{d16[0]}, [r1 :32]
   16100:	add	r1, r9, #416	; 0x1a0
   16104:	vmovl.s8	q8, d16
   16108:	vmovl.s16	q8, d16
   1610c:	vst1.32	{d16-d17}, [r1]
   16110:	ldr	r1, [sp, #112]	; 0x70
   16114:	vld1.32	{d16[0]}, [r1 :32]
   16118:	add	r1, r9, #432	; 0x1b0
   1611c:	vmovl.s8	q8, d16
   16120:	vmovl.s16	q8, d16
   16124:	vst1.32	{d16-d17}, [r1]
   16128:	ldr	r1, [sp, #116]	; 0x74
   1612c:	vld1.32	{d16[0]}, [r1 :32]
   16130:	add	r1, r9, #448	; 0x1c0
   16134:	vmovl.s8	q8, d16
   16138:	vmovl.s16	q8, d16
   1613c:	vst1.32	{d16-d17}, [r1]
   16140:	ldr	r1, [sp, #120]	; 0x78
   16144:	vld1.32	{d16[0]}, [r1 :32]
   16148:	add	r1, r9, #464	; 0x1d0
   1614c:	vmovl.s8	q8, d16
   16150:	vmovl.s16	q8, d16
   16154:	vst1.32	{d16-d17}, [r1]
   16158:	ldr	r1, [sp, #124]	; 0x7c
   1615c:	vld1.32	{d16[0]}, [r1 :32]
   16160:	add	r1, r9, #480	; 0x1e0
   16164:	vmovl.s8	q8, d16
   16168:	vmovl.s16	q8, d16
   1616c:	vst1.32	{d16-d17}, [r1]
   16170:	ldr	r1, [sp, #128]	; 0x80
   16174:	vld1.32	{d16[0]}, [r1 :32]
   16178:	add	r1, r9, #496	; 0x1f0
   1617c:	vmovl.s8	q8, d16
   16180:	vmovl.s16	q8, d16
   16184:	vst1.32	{d16-d17}, [r1]
   16188:	ldr	r1, [sp, #132]	; 0x84
   1618c:	vld1.32	{d16[0]}, [r1 :32]
   16190:	add	r1, r9, #512	; 0x200
   16194:	vmovl.s8	q8, d16
   16198:	vmovl.s16	q8, d16
   1619c:	vst1.32	{d16-d17}, [r1]
   161a0:	ldr	r1, [sp, #136]	; 0x88
   161a4:	vld1.32	{d16[0]}, [r1 :32]
   161a8:	add	r1, r9, #528	; 0x210
   161ac:	vmovl.s8	q8, d16
   161b0:	vmovl.s16	q8, d16
   161b4:	vst1.32	{d16-d17}, [r1]
   161b8:	ldr	r1, [sp, #140]	; 0x8c
   161bc:	vld1.32	{d16[0]}, [r1 :32]
   161c0:	add	r1, r9, #544	; 0x220
   161c4:	vmovl.s8	q8, d16
   161c8:	vmovl.s16	q8, d16
   161cc:	vst1.32	{d16-d17}, [r1]
   161d0:	ldr	r1, [sp, #144]	; 0x90
   161d4:	vld1.32	{d16[0]}, [r1 :32]
   161d8:	add	r1, r9, #560	; 0x230
   161dc:	vmovl.s8	q8, d16
   161e0:	vmovl.s16	q8, d16
   161e4:	vst1.32	{d16-d17}, [r1]
   161e8:	ldr	r1, [sp, #148]	; 0x94
   161ec:	vld1.32	{d16[0]}, [r1 :32]
   161f0:	add	r1, r9, #576	; 0x240
   161f4:	vmovl.s8	q8, d16
   161f8:	vmovl.s16	q8, d16
   161fc:	vst1.32	{d16-d17}, [r1]
   16200:	ldr	r1, [sp, #152]	; 0x98
   16204:	vld1.32	{d16[0]}, [r1 :32]
   16208:	add	r1, r9, #592	; 0x250
   1620c:	vmovl.s8	q8, d16
   16210:	vmovl.s16	q8, d16
   16214:	vst1.32	{d16-d17}, [r1]
   16218:	ldr	r1, [sp, #156]	; 0x9c
   1621c:	vld1.32	{d16[0]}, [r1 :32]
   16220:	add	r1, r9, #608	; 0x260
   16224:	vmovl.s8	q8, d16
   16228:	vmovl.s16	q8, d16
   1622c:	vst1.32	{d16-d17}, [r1]
   16230:	ldr	r1, [sp, #160]	; 0xa0
   16234:	vld1.32	{d16[0]}, [r1 :32]
   16238:	add	r1, r9, #624	; 0x270
   1623c:	vmovl.s8	q8, d16
   16240:	vmovl.s16	q8, d16
   16244:	vst1.32	{d16-d17}, [r1]
   16248:	ldr	r1, [sp, #164]	; 0xa4
   1624c:	vld1.32	{d16[0]}, [r1 :32]
   16250:	add	r1, r9, #640	; 0x280
   16254:	vmovl.s8	q8, d16
   16258:	vmovl.s16	q8, d16
   1625c:	vst1.32	{d16-d17}, [r1]
   16260:	ldr	r1, [sp, #168]	; 0xa8
   16264:	vld1.32	{d16[0]}, [r1 :32]
   16268:	add	r1, r9, #656	; 0x290
   1626c:	vmovl.s8	q8, d16
   16270:	vmovl.s16	q8, d16
   16274:	vst1.32	{d16-d17}, [r1]
   16278:	ldr	r1, [sp, #172]	; 0xac
   1627c:	vld1.32	{d16[0]}, [r1 :32]
   16280:	add	r1, r9, #672	; 0x2a0
   16284:	vmovl.s8	q8, d16
   16288:	vmovl.s16	q8, d16
   1628c:	vst1.32	{d16-d17}, [r1]
   16290:	ldr	r1, [sp, #176]	; 0xb0
   16294:	vld1.32	{d16[0]}, [r1 :32]
   16298:	add	r1, r9, #688	; 0x2b0
   1629c:	vmovl.s8	q8, d16
   162a0:	vmovl.s16	q8, d16
   162a4:	vst1.32	{d16-d17}, [r1]
   162a8:	ldr	r1, [sp, #180]	; 0xb4
   162ac:	vld1.32	{d16[0]}, [r1 :32]
   162b0:	add	r1, r9, #704	; 0x2c0
   162b4:	vmovl.s8	q8, d16
   162b8:	vmovl.s16	q8, d16
   162bc:	vst1.32	{d16-d17}, [r1]
   162c0:	ldr	r1, [sp, #184]	; 0xb8
   162c4:	vld1.32	{d16[0]}, [r1 :32]
   162c8:	add	r1, r9, #720	; 0x2d0
   162cc:	vmovl.s8	q8, d16
   162d0:	vmovl.s16	q8, d16
   162d4:	vst1.32	{d16-d17}, [r1]
   162d8:	ldr	r1, [sp, #188]	; 0xbc
   162dc:	vld1.32	{d16[0]}, [r1 :32]
   162e0:	add	r1, r9, #736	; 0x2e0
   162e4:	vmovl.s8	q8, d16
   162e8:	vmovl.s16	q8, d16
   162ec:	vst1.32	{d16-d17}, [r1]
   162f0:	ldr	r1, [sp, #192]	; 0xc0
   162f4:	vld1.32	{d16[0]}, [r1 :32]
   162f8:	add	r1, r9, #752	; 0x2f0
   162fc:	vmovl.s8	q8, d16
   16300:	vmovl.s16	q8, d16
   16304:	vst1.32	{d16-d17}, [r1]
   16308:	ldr	r1, [sp, #196]	; 0xc4
   1630c:	vld1.32	{d16[0]}, [r1 :32]
   16310:	add	r1, r9, #768	; 0x300
   16314:	vmovl.s8	q8, d16
   16318:	vmovl.s16	q8, d16
   1631c:	vst1.32	{d16-d17}, [r1]
   16320:	ldr	r1, [sp, #200]	; 0xc8
   16324:	vld1.32	{d16[0]}, [r1 :32]
   16328:	add	r1, r9, #784	; 0x310
   1632c:	vmovl.s8	q8, d16
   16330:	vmovl.s16	q8, d16
   16334:	vst1.32	{d16-d17}, [r1]
   16338:	ldr	r1, [sp, #204]	; 0xcc
   1633c:	vld1.32	{d16[0]}, [r1 :32]
   16340:	add	r1, r9, #800	; 0x320
   16344:	vmovl.s8	q8, d16
   16348:	vmovl.s16	q8, d16
   1634c:	vst1.32	{d16-d17}, [r1]
   16350:	ldr	r1, [sp, #208]	; 0xd0
   16354:	vld1.32	{d16[0]}, [r1 :32]
   16358:	add	r1, r9, #816	; 0x330
   1635c:	vmovl.s8	q8, d16
   16360:	vmovl.s16	q8, d16
   16364:	vst1.32	{d16-d17}, [r1]
   16368:	ldr	r1, [sp, #212]	; 0xd4
   1636c:	vld1.32	{d16[0]}, [r1 :32]
   16370:	add	r1, r9, #832	; 0x340
   16374:	vmovl.s8	q8, d16
   16378:	vmovl.s16	q8, d16
   1637c:	vst1.32	{d16-d17}, [r1]
   16380:	ldr	r1, [sp, #216]	; 0xd8
   16384:	vld1.32	{d16[0]}, [r1 :32]
   16388:	add	r1, r9, #848	; 0x350
   1638c:	vmovl.s8	q8, d16
   16390:	vmovl.s16	q8, d16
   16394:	vst1.32	{d16-d17}, [r1]
   16398:	ldr	r1, [sp, #220]	; 0xdc
   1639c:	vld1.32	{d16[0]}, [r1 :32]
   163a0:	add	r1, r9, #864	; 0x360
   163a4:	vmovl.s8	q8, d16
   163a8:	vmovl.s16	q8, d16
   163ac:	vst1.32	{d16-d17}, [r1]
   163b0:	ldr	r1, [sp, #224]	; 0xe0
   163b4:	vld1.32	{d16[0]}, [r1 :32]
   163b8:	add	r1, r9, #880	; 0x370
   163bc:	vmovl.s8	q8, d16
   163c0:	vmovl.s16	q8, d16
   163c4:	vst1.32	{d16-d17}, [r1]
   163c8:	ldr	r1, [sp, #228]	; 0xe4
   163cc:	vld1.32	{d16[0]}, [r1 :32]
   163d0:	add	r1, r9, #896	; 0x380
   163d4:	vmovl.s8	q8, d16
   163d8:	vmovl.s16	q8, d16
   163dc:	vst1.32	{d16-d17}, [r1]
   163e0:	ldr	r1, [sp, #232]	; 0xe8
   163e4:	vld1.32	{d16[0]}, [r1 :32]
   163e8:	add	r1, r9, #912	; 0x390
   163ec:	vmovl.s8	q8, d16
   163f0:	vmovl.s16	q8, d16
   163f4:	vst1.32	{d16-d17}, [r1]
   163f8:	ldr	r1, [sp, #236]	; 0xec
   163fc:	vld1.32	{d16[0]}, [r1 :32]
   16400:	add	r1, r9, #928	; 0x3a0
   16404:	vmovl.s8	q8, d16
   16408:	vmovl.s16	q8, d16
   1640c:	vst1.32	{d16-d17}, [r1]
   16410:	ldr	r1, [sp, #240]	; 0xf0
   16414:	vld1.32	{d16[0]}, [r1 :32]
   16418:	add	r1, r9, #944	; 0x3b0
   1641c:	vmovl.s8	q8, d16
   16420:	vmovl.s16	q8, d16
   16424:	vst1.32	{d16-d17}, [r1]
   16428:	ldr	r1, [sp, #244]	; 0xf4
   1642c:	vld1.32	{d16[0]}, [r1 :32]
   16430:	add	r1, r9, #960	; 0x3c0
   16434:	vmovl.s8	q8, d16
   16438:	vmovl.s16	q8, d16
   1643c:	vst1.32	{d16-d17}, [r1]
   16440:	ldr	r1, [sp, #248]	; 0xf8
   16444:	vld1.32	{d16[0]}, [r1 :32]
   16448:	add	r1, r9, #976	; 0x3d0
   1644c:	vmovl.s8	q8, d16
   16450:	vmovl.s16	q8, d16
   16454:	vst1.32	{d16-d17}, [r1]
   16458:	ldr	r1, [sp, #252]	; 0xfc
   1645c:	vld1.32	{d16[0]}, [r1 :32]
   16460:	add	r1, r9, #992	; 0x3e0
   16464:	vmovl.s8	q8, d16
   16468:	vmovl.s16	q8, d16
   1646c:	vst1.32	{d16-d17}, [r1]
   16470:	ldr	r1, [sp, #256]	; 0x100
   16474:	vld1.32	{d16[0]}, [r1 :32]
   16478:	add	r1, r9, #1008	; 0x3f0
   1647c:	mov	r9, r8
   16480:	vmovl.s8	q8, d16
   16484:	vmovl.s16	q8, d16
   16488:	vst1.32	{d16-d17}, [r1]
   1648c:	blt	15e68 <ReadUInt32Data+0x7c0>
   16490:	ldr	r0, [sp, #4]
   16494:	ldr	sl, [sp, #260]	; 0x104
   16498:	cmp	r6, r0
   1649c:	bge	18d94 <ReadUInt32Data+0x36ec>
   164a0:	ldr	r3, [r5]
   164a4:	sub	r4, r0, r6
   164a8:	add	r9, sp, #408	; 0x198
   164ac:	mov	r1, sl
   164b0:	mov	r0, r9
   164b4:	mov	r2, r4
   164b8:	bl	18b8 <fread@plt>
   164bc:	add	r7, r0, r7
   164c0:	cmp	r4, #1
   164c4:	blt	18d94 <ReadUInt32Data+0x36ec>
   164c8:	mov	r0, #0
   164cc:	cmp	r4, #4
   164d0:	bcc	186f4 <ReadUInt32Data+0x304c>
   164d4:	bic	r0, r4, #3
   164d8:	mov	r2, #1
   164dc:	mov	lr, r7
   164e0:	subs	r1, r0, #4
   164e4:	add	r1, r2, r1, lsr #2
   164e8:	and	ip, r1, #1
   164ec:	beq	186b4 <ReadUInt32Data+0x300c>
   164f0:	bic	r3, r4, #3
   164f4:	sub	r3, r3, #4
   164f8:	add	r2, r2, r3, lsr #2
   164fc:	mvn	r7, r3, lsr #2
   16500:	and	r2, r2, #1
   16504:	add	r3, r7, r2
   16508:	mov	r2, #0
   1650c:	mov	r7, #32
   16510:	add	r5, r9, r2
   16514:	add	r1, r8, #16
   16518:	adds	r3, r3, #2
   1651c:	add	r2, r2, #8
   16520:	vld1.32	{d16[0]}, [r5 :32]
   16524:	add	r5, r5, #4
   16528:	vmovl.s8	q8, d16
   1652c:	vmovl.s16	q8, d16
   16530:	vst1.32	{d16-d17}, [r8], r7
   16534:	vld1.32	{d16[0]}, [r5 :32]
   16538:	vmovl.s8	q8, d16
   1653c:	vmovl.s16	q8, d16
   16540:	vst1.32	{d16-d17}, [r1]
   16544:	bne	16510 <ReadUInt32Data+0xe68>
   16548:	b	186b8 <ReadUInt32Data+0x3010>
   1654c:	add	r0, r4, #248	; 0xf8
   16550:	str	r6, [sp, #4]
   16554:	mov	r9, r8
   16558:	mov	r7, #0
   1655c:	str	r8, [sp]
   16560:	str	sl, [sp, #260]	; 0x104
   16564:	str	r0, [sp, #256]	; 0x100
   16568:	add	r0, r4, #244	; 0xf4
   1656c:	str	r0, [sp, #252]	; 0xfc
   16570:	add	r0, r4, #240	; 0xf0
   16574:	str	r0, [sp, #248]	; 0xf8
   16578:	add	r0, r4, #236	; 0xec
   1657c:	str	r0, [sp, #244]	; 0xf4
   16580:	add	r0, r4, #232	; 0xe8
   16584:	str	r0, [sp, #240]	; 0xf0
   16588:	add	r0, r4, #228	; 0xe4
   1658c:	str	r0, [sp, #236]	; 0xec
   16590:	add	r0, r4, #224	; 0xe0
   16594:	str	r0, [sp, #232]	; 0xe8
   16598:	add	r0, r4, #220	; 0xdc
   1659c:	str	r0, [sp, #228]	; 0xe4
   165a0:	add	r0, r4, #216	; 0xd8
   165a4:	str	r0, [sp, #224]	; 0xe0
   165a8:	add	r0, r4, #212	; 0xd4
   165ac:	str	r0, [sp, #220]	; 0xdc
   165b0:	add	r0, r4, #208	; 0xd0
   165b4:	str	r0, [sp, #216]	; 0xd8
   165b8:	add	r0, r4, #204	; 0xcc
   165bc:	str	r0, [sp, #212]	; 0xd4
   165c0:	add	r0, r4, #200	; 0xc8
   165c4:	str	r0, [sp, #208]	; 0xd0
   165c8:	add	r0, r4, #196	; 0xc4
   165cc:	str	r0, [sp, #204]	; 0xcc
   165d0:	add	r0, r4, #192	; 0xc0
   165d4:	str	r0, [sp, #200]	; 0xc8
   165d8:	add	r0, r4, #188	; 0xbc
   165dc:	str	r0, [sp, #196]	; 0xc4
   165e0:	add	r0, r4, #184	; 0xb8
   165e4:	str	r0, [sp, #192]	; 0xc0
   165e8:	add	r0, r4, #180	; 0xb4
   165ec:	str	r0, [sp, #188]	; 0xbc
   165f0:	add	r0, r4, #176	; 0xb0
   165f4:	str	r0, [sp, #184]	; 0xb8
   165f8:	add	r0, r4, #172	; 0xac
   165fc:	str	r0, [sp, #180]	; 0xb4
   16600:	add	r0, r4, #168	; 0xa8
   16604:	str	r0, [sp, #176]	; 0xb0
   16608:	add	r0, r4, #164	; 0xa4
   1660c:	str	r0, [sp, #172]	; 0xac
   16610:	add	r0, r4, #160	; 0xa0
   16614:	str	r0, [sp, #168]	; 0xa8
   16618:	add	r0, r4, #156	; 0x9c
   1661c:	str	r0, [sp, #164]	; 0xa4
   16620:	add	r0, r4, #152	; 0x98
   16624:	str	r0, [sp, #160]	; 0xa0
   16628:	add	r0, r4, #148	; 0x94
   1662c:	str	r0, [sp, #156]	; 0x9c
   16630:	add	r0, r4, #144	; 0x90
   16634:	str	r0, [sp, #152]	; 0x98
   16638:	add	r0, r4, #140	; 0x8c
   1663c:	str	r0, [sp, #148]	; 0x94
   16640:	add	r0, r4, #136	; 0x88
   16644:	str	r0, [sp, #144]	; 0x90
   16648:	add	r0, r4, #132	; 0x84
   1664c:	str	r0, [sp, #140]	; 0x8c
   16650:	add	r0, r4, #128	; 0x80
   16654:	str	r0, [sp, #136]	; 0x88
   16658:	add	r0, r4, #124	; 0x7c
   1665c:	str	r0, [sp, #132]	; 0x84
   16660:	add	r0, r4, #120	; 0x78
   16664:	str	r0, [sp, #128]	; 0x80
   16668:	add	r0, r4, #116	; 0x74
   1666c:	str	r0, [sp, #124]	; 0x7c
   16670:	add	r0, r4, #112	; 0x70
   16674:	str	r0, [sp, #120]	; 0x78
   16678:	add	r0, r4, #108	; 0x6c
   1667c:	str	r0, [sp, #116]	; 0x74
   16680:	add	r0, r4, #104	; 0x68
   16684:	str	r0, [sp, #112]	; 0x70
   16688:	add	r0, r4, #100	; 0x64
   1668c:	str	r0, [sp, #108]	; 0x6c
   16690:	add	r0, r4, #96	; 0x60
   16694:	str	r0, [sp, #104]	; 0x68
   16698:	add	r0, r4, #92	; 0x5c
   1669c:	str	r0, [sp, #100]	; 0x64
   166a0:	add	r0, r4, #88	; 0x58
   166a4:	str	r0, [sp, #96]	; 0x60
   166a8:	add	r0, r4, #84	; 0x54
   166ac:	str	r0, [sp, #92]	; 0x5c
   166b0:	add	r0, r4, #80	; 0x50
   166b4:	str	r0, [sp, #88]	; 0x58
   166b8:	add	r0, r4, #76	; 0x4c
   166bc:	str	r0, [sp, #84]	; 0x54
   166c0:	add	r0, r4, #72	; 0x48
   166c4:	str	r0, [sp, #80]	; 0x50
   166c8:	add	r0, r4, #68	; 0x44
   166cc:	str	r0, [sp, #76]	; 0x4c
   166d0:	add	r0, r4, #64	; 0x40
   166d4:	str	r0, [sp, #72]	; 0x48
   166d8:	add	r0, r4, #60	; 0x3c
   166dc:	str	r0, [sp, #68]	; 0x44
   166e0:	add	r0, r4, #56	; 0x38
   166e4:	str	r0, [sp, #64]	; 0x40
   166e8:	add	r0, r4, #52	; 0x34
   166ec:	str	r0, [sp, #60]	; 0x3c
   166f0:	add	r0, r4, #48	; 0x30
   166f4:	str	r0, [sp, #56]	; 0x38
   166f8:	add	r0, r4, #44	; 0x2c
   166fc:	str	r0, [sp, #52]	; 0x34
   16700:	add	r0, r4, #40	; 0x28
   16704:	str	r0, [sp, #48]	; 0x30
   16708:	add	r0, r4, #36	; 0x24
   1670c:	str	r0, [sp, #44]	; 0x2c
   16710:	add	r0, r4, #32
   16714:	str	r0, [sp, #40]	; 0x28
   16718:	add	r0, r4, #28
   1671c:	str	r0, [sp, #36]	; 0x24
   16720:	add	r0, r4, #24
   16724:	str	r0, [sp, #32]
   16728:	add	r0, r4, #20
   1672c:	str	r0, [sp, #28]
   16730:	add	r0, r4, #16
   16734:	str	r0, [sp, #24]
   16738:	add	r0, r4, #12
   1673c:	str	r0, [sp, #20]
   16740:	add	r0, r4, #8
   16744:	str	r0, [sp, #16]
   16748:	add	r0, r4, #4
   1674c:	str	r0, [sp, #12]
   16750:	sub	r0, r6, #256	; 0x100
   16754:	mov	r6, #0
   16758:	str	r0, [sp, #8]
   1675c:	ldr	r3, [r5]
   16760:	ldr	r1, [sp, #260]	; 0x104
   16764:	add	sl, sp, #408	; 0x198
   16768:	mov	r2, #256	; 0x100
   1676c:	mov	r0, sl
   16770:	bl	18b8 <fread@plt>
   16774:	vld1.32	{d16[0]}, [sl :32]
   16778:	mov	r1, #1024	; 0x400
   1677c:	add	r7, r0, r7
   16780:	ldr	r0, [sp, #8]
   16784:	add	r6, r6, #256	; 0x100
   16788:	cmp	r6, r0
   1678c:	vmovl.u8	q8, d16
   16790:	vmovl.u16	q8, d16
   16794:	vst1.32	{d16-d17}, [r8], r1
   16798:	add	r1, r9, #16
   1679c:	vld1.32	{d16[0]}, [r4 :32]
   167a0:	vmovl.u8	q8, d16
   167a4:	vmovl.u16	q8, d16
   167a8:	vst1.32	{d16-d17}, [r1]
   167ac:	ldr	r1, [sp, #12]
   167b0:	vld1.32	{d16[0]}, [r1 :32]
   167b4:	add	r1, r9, #32
   167b8:	vmovl.u8	q8, d16
   167bc:	vmovl.u16	q8, d16
   167c0:	vst1.32	{d16-d17}, [r1]
   167c4:	ldr	r1, [sp, #16]
   167c8:	vld1.32	{d16[0]}, [r1 :32]
   167cc:	add	r1, r9, #48	; 0x30
   167d0:	vmovl.u8	q8, d16
   167d4:	vmovl.u16	q8, d16
   167d8:	vst1.32	{d16-d17}, [r1]
   167dc:	ldr	r1, [sp, #20]
   167e0:	vld1.32	{d16[0]}, [r1 :32]
   167e4:	add	r1, r9, #64	; 0x40
   167e8:	vmovl.u8	q8, d16
   167ec:	vmovl.u16	q8, d16
   167f0:	vst1.32	{d16-d17}, [r1]
   167f4:	ldr	r1, [sp, #24]
   167f8:	vld1.32	{d16[0]}, [r1 :32]
   167fc:	add	r1, r9, #80	; 0x50
   16800:	vmovl.u8	q8, d16
   16804:	vmovl.u16	q8, d16
   16808:	vst1.32	{d16-d17}, [r1]
   1680c:	ldr	r1, [sp, #28]
   16810:	vld1.32	{d16[0]}, [r1 :32]
   16814:	add	r1, r9, #96	; 0x60
   16818:	vmovl.u8	q8, d16
   1681c:	vmovl.u16	q8, d16
   16820:	vst1.32	{d16-d17}, [r1]
   16824:	ldr	r1, [sp, #32]
   16828:	vld1.32	{d16[0]}, [r1 :32]
   1682c:	add	r1, r9, #112	; 0x70
   16830:	vmovl.u8	q8, d16
   16834:	vmovl.u16	q8, d16
   16838:	vst1.32	{d16-d17}, [r1]
   1683c:	ldr	r1, [sp, #36]	; 0x24
   16840:	vld1.32	{d16[0]}, [r1 :32]
   16844:	add	r1, r9, #128	; 0x80
   16848:	vmovl.u8	q8, d16
   1684c:	vmovl.u16	q8, d16
   16850:	vst1.32	{d16-d17}, [r1]
   16854:	ldr	r1, [sp, #40]	; 0x28
   16858:	vld1.32	{d16[0]}, [r1 :32]
   1685c:	add	r1, r9, #144	; 0x90
   16860:	vmovl.u8	q8, d16
   16864:	vmovl.u16	q8, d16
   16868:	vst1.32	{d16-d17}, [r1]
   1686c:	ldr	r1, [sp, #44]	; 0x2c
   16870:	vld1.32	{d16[0]}, [r1 :32]
   16874:	add	r1, r9, #160	; 0xa0
   16878:	vmovl.u8	q8, d16
   1687c:	vmovl.u16	q8, d16
   16880:	vst1.32	{d16-d17}, [r1]
   16884:	ldr	r1, [sp, #48]	; 0x30
   16888:	vld1.32	{d16[0]}, [r1 :32]
   1688c:	add	r1, r9, #176	; 0xb0
   16890:	vmovl.u8	q8, d16
   16894:	vmovl.u16	q8, d16
   16898:	vst1.32	{d16-d17}, [r1]
   1689c:	ldr	r1, [sp, #52]	; 0x34
   168a0:	vld1.32	{d16[0]}, [r1 :32]
   168a4:	add	r1, r9, #192	; 0xc0
   168a8:	vmovl.u8	q8, d16
   168ac:	vmovl.u16	q8, d16
   168b0:	vst1.32	{d16-d17}, [r1]
   168b4:	ldr	r1, [sp, #56]	; 0x38
   168b8:	vld1.32	{d16[0]}, [r1 :32]
   168bc:	add	r1, r9, #208	; 0xd0
   168c0:	vmovl.u8	q8, d16
   168c4:	vmovl.u16	q8, d16
   168c8:	vst1.32	{d16-d17}, [r1]
   168cc:	ldr	r1, [sp, #60]	; 0x3c
   168d0:	vld1.32	{d16[0]}, [r1 :32]
   168d4:	add	r1, r9, #224	; 0xe0
   168d8:	vmovl.u8	q8, d16
   168dc:	vmovl.u16	q8, d16
   168e0:	vst1.32	{d16-d17}, [r1]
   168e4:	ldr	r1, [sp, #64]	; 0x40
   168e8:	vld1.32	{d16[0]}, [r1 :32]
   168ec:	add	r1, r9, #240	; 0xf0
   168f0:	vmovl.u8	q8, d16
   168f4:	vmovl.u16	q8, d16
   168f8:	vst1.32	{d16-d17}, [r1]
   168fc:	ldr	r1, [sp, #68]	; 0x44
   16900:	vld1.32	{d16[0]}, [r1 :32]
   16904:	add	r1, r9, #256	; 0x100
   16908:	vmovl.u8	q8, d16
   1690c:	vmovl.u16	q8, d16
   16910:	vst1.32	{d16-d17}, [r1]
   16914:	ldr	r1, [sp, #72]	; 0x48
   16918:	vld1.32	{d16[0]}, [r1 :32]
   1691c:	add	r1, r9, #272	; 0x110
   16920:	vmovl.u8	q8, d16
   16924:	vmovl.u16	q8, d16
   16928:	vst1.32	{d16-d17}, [r1]
   1692c:	ldr	r1, [sp, #76]	; 0x4c
   16930:	vld1.32	{d16[0]}, [r1 :32]
   16934:	add	r1, r9, #288	; 0x120
   16938:	vmovl.u8	q8, d16
   1693c:	vmovl.u16	q8, d16
   16940:	vst1.32	{d16-d17}, [r1]
   16944:	ldr	r1, [sp, #80]	; 0x50
   16948:	vld1.32	{d16[0]}, [r1 :32]
   1694c:	add	r1, r9, #304	; 0x130
   16950:	vmovl.u8	q8, d16
   16954:	vmovl.u16	q8, d16
   16958:	vst1.32	{d16-d17}, [r1]
   1695c:	ldr	r1, [sp, #84]	; 0x54
   16960:	vld1.32	{d16[0]}, [r1 :32]
   16964:	add	r1, r9, #320	; 0x140
   16968:	vmovl.u8	q8, d16
   1696c:	vmovl.u16	q8, d16
   16970:	vst1.32	{d16-d17}, [r1]
   16974:	ldr	r1, [sp, #88]	; 0x58
   16978:	vld1.32	{d16[0]}, [r1 :32]
   1697c:	add	r1, r9, #336	; 0x150
   16980:	vmovl.u8	q8, d16
   16984:	vmovl.u16	q8, d16
   16988:	vst1.32	{d16-d17}, [r1]
   1698c:	ldr	r1, [sp, #92]	; 0x5c
   16990:	vld1.32	{d16[0]}, [r1 :32]
   16994:	add	r1, r9, #352	; 0x160
   16998:	vmovl.u8	q8, d16
   1699c:	vmovl.u16	q8, d16
   169a0:	vst1.32	{d16-d17}, [r1]
   169a4:	ldr	r1, [sp, #96]	; 0x60
   169a8:	vld1.32	{d16[0]}, [r1 :32]
   169ac:	add	r1, r9, #368	; 0x170
   169b0:	vmovl.u8	q8, d16
   169b4:	vmovl.u16	q8, d16
   169b8:	vst1.32	{d16-d17}, [r1]
   169bc:	ldr	r1, [sp, #100]	; 0x64
   169c0:	vld1.32	{d16[0]}, [r1 :32]
   169c4:	add	r1, r9, #384	; 0x180
   169c8:	vmovl.u8	q8, d16
   169cc:	vmovl.u16	q8, d16
   169d0:	vst1.32	{d16-d17}, [r1]
   169d4:	ldr	r1, [sp, #104]	; 0x68
   169d8:	vld1.32	{d16[0]}, [r1 :32]
   169dc:	add	r1, r9, #400	; 0x190
   169e0:	vmovl.u8	q8, d16
   169e4:	vmovl.u16	q8, d16
   169e8:	vst1.32	{d16-d17}, [r1]
   169ec:	ldr	r1, [sp, #108]	; 0x6c
   169f0:	vld1.32	{d16[0]}, [r1 :32]
   169f4:	add	r1, r9, #416	; 0x1a0
   169f8:	vmovl.u8	q8, d16
   169fc:	vmovl.u16	q8, d16
   16a00:	vst1.32	{d16-d17}, [r1]
   16a04:	ldr	r1, [sp, #112]	; 0x70
   16a08:	vld1.32	{d16[0]}, [r1 :32]
   16a0c:	add	r1, r9, #432	; 0x1b0
   16a10:	vmovl.u8	q8, d16
   16a14:	vmovl.u16	q8, d16
   16a18:	vst1.32	{d16-d17}, [r1]
   16a1c:	ldr	r1, [sp, #116]	; 0x74
   16a20:	vld1.32	{d16[0]}, [r1 :32]
   16a24:	add	r1, r9, #448	; 0x1c0
   16a28:	vmovl.u8	q8, d16
   16a2c:	vmovl.u16	q8, d16
   16a30:	vst1.32	{d16-d17}, [r1]
   16a34:	ldr	r1, [sp, #120]	; 0x78
   16a38:	vld1.32	{d16[0]}, [r1 :32]
   16a3c:	add	r1, r9, #464	; 0x1d0
   16a40:	vmovl.u8	q8, d16
   16a44:	vmovl.u16	q8, d16
   16a48:	vst1.32	{d16-d17}, [r1]
   16a4c:	ldr	r1, [sp, #124]	; 0x7c
   16a50:	vld1.32	{d16[0]}, [r1 :32]
   16a54:	add	r1, r9, #480	; 0x1e0
   16a58:	vmovl.u8	q8, d16
   16a5c:	vmovl.u16	q8, d16
   16a60:	vst1.32	{d16-d17}, [r1]
   16a64:	ldr	r1, [sp, #128]	; 0x80
   16a68:	vld1.32	{d16[0]}, [r1 :32]
   16a6c:	add	r1, r9, #496	; 0x1f0
   16a70:	vmovl.u8	q8, d16
   16a74:	vmovl.u16	q8, d16
   16a78:	vst1.32	{d16-d17}, [r1]
   16a7c:	ldr	r1, [sp, #132]	; 0x84
   16a80:	vld1.32	{d16[0]}, [r1 :32]
   16a84:	add	r1, r9, #512	; 0x200
   16a88:	vmovl.u8	q8, d16
   16a8c:	vmovl.u16	q8, d16
   16a90:	vst1.32	{d16-d17}, [r1]
   16a94:	ldr	r1, [sp, #136]	; 0x88
   16a98:	vld1.32	{d16[0]}, [r1 :32]
   16a9c:	add	r1, r9, #528	; 0x210
   16aa0:	vmovl.u8	q8, d16
   16aa4:	vmovl.u16	q8, d16
   16aa8:	vst1.32	{d16-d17}, [r1]
   16aac:	ldr	r1, [sp, #140]	; 0x8c
   16ab0:	vld1.32	{d16[0]}, [r1 :32]
   16ab4:	add	r1, r9, #544	; 0x220
   16ab8:	vmovl.u8	q8, d16
   16abc:	vmovl.u16	q8, d16
   16ac0:	vst1.32	{d16-d17}, [r1]
   16ac4:	ldr	r1, [sp, #144]	; 0x90
   16ac8:	vld1.32	{d16[0]}, [r1 :32]
   16acc:	add	r1, r9, #560	; 0x230
   16ad0:	vmovl.u8	q8, d16
   16ad4:	vmovl.u16	q8, d16
   16ad8:	vst1.32	{d16-d17}, [r1]
   16adc:	ldr	r1, [sp, #148]	; 0x94
   16ae0:	vld1.32	{d16[0]}, [r1 :32]
   16ae4:	add	r1, r9, #576	; 0x240
   16ae8:	vmovl.u8	q8, d16
   16aec:	vmovl.u16	q8, d16
   16af0:	vst1.32	{d16-d17}, [r1]
   16af4:	ldr	r1, [sp, #152]	; 0x98
   16af8:	vld1.32	{d16[0]}, [r1 :32]
   16afc:	add	r1, r9, #592	; 0x250
   16b00:	vmovl.u8	q8, d16
   16b04:	vmovl.u16	q8, d16
   16b08:	vst1.32	{d16-d17}, [r1]
   16b0c:	ldr	r1, [sp, #156]	; 0x9c
   16b10:	vld1.32	{d16[0]}, [r1 :32]
   16b14:	add	r1, r9, #608	; 0x260
   16b18:	vmovl.u8	q8, d16
   16b1c:	vmovl.u16	q8, d16
   16b20:	vst1.32	{d16-d17}, [r1]
   16b24:	ldr	r1, [sp, #160]	; 0xa0
   16b28:	vld1.32	{d16[0]}, [r1 :32]
   16b2c:	add	r1, r9, #624	; 0x270
   16b30:	vmovl.u8	q8, d16
   16b34:	vmovl.u16	q8, d16
   16b38:	vst1.32	{d16-d17}, [r1]
   16b3c:	ldr	r1, [sp, #164]	; 0xa4
   16b40:	vld1.32	{d16[0]}, [r1 :32]
   16b44:	add	r1, r9, #640	; 0x280
   16b48:	vmovl.u8	q8, d16
   16b4c:	vmovl.u16	q8, d16
   16b50:	vst1.32	{d16-d17}, [r1]
   16b54:	ldr	r1, [sp, #168]	; 0xa8
   16b58:	vld1.32	{d16[0]}, [r1 :32]
   16b5c:	add	r1, r9, #656	; 0x290
   16b60:	vmovl.u8	q8, d16
   16b64:	vmovl.u16	q8, d16
   16b68:	vst1.32	{d16-d17}, [r1]
   16b6c:	ldr	r1, [sp, #172]	; 0xac
   16b70:	vld1.32	{d16[0]}, [r1 :32]
   16b74:	add	r1, r9, #672	; 0x2a0
   16b78:	vmovl.u8	q8, d16
   16b7c:	vmovl.u16	q8, d16
   16b80:	vst1.32	{d16-d17}, [r1]
   16b84:	ldr	r1, [sp, #176]	; 0xb0
   16b88:	vld1.32	{d16[0]}, [r1 :32]
   16b8c:	add	r1, r9, #688	; 0x2b0
   16b90:	vmovl.u8	q8, d16
   16b94:	vmovl.u16	q8, d16
   16b98:	vst1.32	{d16-d17}, [r1]
   16b9c:	ldr	r1, [sp, #180]	; 0xb4
   16ba0:	vld1.32	{d16[0]}, [r1 :32]
   16ba4:	add	r1, r9, #704	; 0x2c0
   16ba8:	vmovl.u8	q8, d16
   16bac:	vmovl.u16	q8, d16
   16bb0:	vst1.32	{d16-d17}, [r1]
   16bb4:	ldr	r1, [sp, #184]	; 0xb8
   16bb8:	vld1.32	{d16[0]}, [r1 :32]
   16bbc:	add	r1, r9, #720	; 0x2d0
   16bc0:	vmovl.u8	q8, d16
   16bc4:	vmovl.u16	q8, d16
   16bc8:	vst1.32	{d16-d17}, [r1]
   16bcc:	ldr	r1, [sp, #188]	; 0xbc
   16bd0:	vld1.32	{d16[0]}, [r1 :32]
   16bd4:	add	r1, r9, #736	; 0x2e0
   16bd8:	vmovl.u8	q8, d16
   16bdc:	vmovl.u16	q8, d16
   16be0:	vst1.32	{d16-d17}, [r1]
   16be4:	ldr	r1, [sp, #192]	; 0xc0
   16be8:	vld1.32	{d16[0]}, [r1 :32]
   16bec:	add	r1, r9, #752	; 0x2f0
   16bf0:	vmovl.u8	q8, d16
   16bf4:	vmovl.u16	q8, d16
   16bf8:	vst1.32	{d16-d17}, [r1]
   16bfc:	ldr	r1, [sp, #196]	; 0xc4
   16c00:	vld1.32	{d16[0]}, [r1 :32]
   16c04:	add	r1, r9, #768	; 0x300
   16c08:	vmovl.u8	q8, d16
   16c0c:	vmovl.u16	q8, d16
   16c10:	vst1.32	{d16-d17}, [r1]
   16c14:	ldr	r1, [sp, #200]	; 0xc8
   16c18:	vld1.32	{d16[0]}, [r1 :32]
   16c1c:	add	r1, r9, #784	; 0x310
   16c20:	vmovl.u8	q8, d16
   16c24:	vmovl.u16	q8, d16
   16c28:	vst1.32	{d16-d17}, [r1]
   16c2c:	ldr	r1, [sp, #204]	; 0xcc
   16c30:	vld1.32	{d16[0]}, [r1 :32]
   16c34:	add	r1, r9, #800	; 0x320
   16c38:	vmovl.u8	q8, d16
   16c3c:	vmovl.u16	q8, d16
   16c40:	vst1.32	{d16-d17}, [r1]
   16c44:	ldr	r1, [sp, #208]	; 0xd0
   16c48:	vld1.32	{d16[0]}, [r1 :32]
   16c4c:	add	r1, r9, #816	; 0x330
   16c50:	vmovl.u8	q8, d16
   16c54:	vmovl.u16	q8, d16
   16c58:	vst1.32	{d16-d17}, [r1]
   16c5c:	ldr	r1, [sp, #212]	; 0xd4
   16c60:	vld1.32	{d16[0]}, [r1 :32]
   16c64:	add	r1, r9, #832	; 0x340
   16c68:	vmovl.u8	q8, d16
   16c6c:	vmovl.u16	q8, d16
   16c70:	vst1.32	{d16-d17}, [r1]
   16c74:	ldr	r1, [sp, #216]	; 0xd8
   16c78:	vld1.32	{d16[0]}, [r1 :32]
   16c7c:	add	r1, r9, #848	; 0x350
   16c80:	vmovl.u8	q8, d16
   16c84:	vmovl.u16	q8, d16
   16c88:	vst1.32	{d16-d17}, [r1]
   16c8c:	ldr	r1, [sp, #220]	; 0xdc
   16c90:	vld1.32	{d16[0]}, [r1 :32]
   16c94:	add	r1, r9, #864	; 0x360
   16c98:	vmovl.u8	q8, d16
   16c9c:	vmovl.u16	q8, d16
   16ca0:	vst1.32	{d16-d17}, [r1]
   16ca4:	ldr	r1, [sp, #224]	; 0xe0
   16ca8:	vld1.32	{d16[0]}, [r1 :32]
   16cac:	add	r1, r9, #880	; 0x370
   16cb0:	vmovl.u8	q8, d16
   16cb4:	vmovl.u16	q8, d16
   16cb8:	vst1.32	{d16-d17}, [r1]
   16cbc:	ldr	r1, [sp, #228]	; 0xe4
   16cc0:	vld1.32	{d16[0]}, [r1 :32]
   16cc4:	add	r1, r9, #896	; 0x380
   16cc8:	vmovl.u8	q8, d16
   16ccc:	vmovl.u16	q8, d16
   16cd0:	vst1.32	{d16-d17}, [r1]
   16cd4:	ldr	r1, [sp, #232]	; 0xe8
   16cd8:	vld1.32	{d16[0]}, [r1 :32]
   16cdc:	add	r1, r9, #912	; 0x390
   16ce0:	vmovl.u8	q8, d16
   16ce4:	vmovl.u16	q8, d16
   16ce8:	vst1.32	{d16-d17}, [r1]
   16cec:	ldr	r1, [sp, #236]	; 0xec
   16cf0:	vld1.32	{d16[0]}, [r1 :32]
   16cf4:	add	r1, r9, #928	; 0x3a0
   16cf8:	vmovl.u8	q8, d16
   16cfc:	vmovl.u16	q8, d16
   16d00:	vst1.32	{d16-d17}, [r1]
   16d04:	ldr	r1, [sp, #240]	; 0xf0
   16d08:	vld1.32	{d16[0]}, [r1 :32]
   16d0c:	add	r1, r9, #944	; 0x3b0
   16d10:	vmovl.u8	q8, d16
   16d14:	vmovl.u16	q8, d16
   16d18:	vst1.32	{d16-d17}, [r1]
   16d1c:	ldr	r1, [sp, #244]	; 0xf4
   16d20:	vld1.32	{d16[0]}, [r1 :32]
   16d24:	add	r1, r9, #960	; 0x3c0
   16d28:	vmovl.u8	q8, d16
   16d2c:	vmovl.u16	q8, d16
   16d30:	vst1.32	{d16-d17}, [r1]
   16d34:	ldr	r1, [sp, #248]	; 0xf8
   16d38:	vld1.32	{d16[0]}, [r1 :32]
   16d3c:	add	r1, r9, #976	; 0x3d0
   16d40:	vmovl.u8	q8, d16
   16d44:	vmovl.u16	q8, d16
   16d48:	vst1.32	{d16-d17}, [r1]
   16d4c:	ldr	r1, [sp, #252]	; 0xfc
   16d50:	vld1.32	{d16[0]}, [r1 :32]
   16d54:	add	r1, r9, #992	; 0x3e0
   16d58:	vmovl.u8	q8, d16
   16d5c:	vmovl.u16	q8, d16
   16d60:	vst1.32	{d16-d17}, [r1]
   16d64:	ldr	r1, [sp, #256]	; 0x100
   16d68:	vld1.32	{d16[0]}, [r1 :32]
   16d6c:	add	r1, r9, #1008	; 0x3f0
   16d70:	mov	r9, r8
   16d74:	vmovl.u8	q8, d16
   16d78:	vmovl.u16	q8, d16
   16d7c:	vst1.32	{d16-d17}, [r1]
   16d80:	blt	1675c <ReadUInt32Data+0x10b4>
   16d84:	ldr	r0, [sp, #4]
   16d88:	ldr	sl, [sp, #260]	; 0x104
   16d8c:	cmp	r6, r0
   16d90:	bge	18d94 <ReadUInt32Data+0x36ec>
   16d94:	ldr	r3, [r5]
   16d98:	sub	r4, r0, r6
   16d9c:	add	r9, sp, #408	; 0x198
   16da0:	mov	r1, sl
   16da4:	mov	r0, r9
   16da8:	mov	r2, r4
   16dac:	bl	18b8 <fread@plt>
   16db0:	add	r7, r0, r7
   16db4:	cmp	r4, #1
   16db8:	blt	18d94 <ReadUInt32Data+0x36ec>
   16dbc:	mov	r0, #0
   16dc0:	cmp	r4, #4
   16dc4:	bcc	18764 <ReadUInt32Data+0x30bc>
   16dc8:	bic	r0, r4, #3
   16dcc:	mov	r2, #1
   16dd0:	mov	lr, r7
   16dd4:	subs	r1, r0, #4
   16dd8:	add	r1, r2, r1, lsr #2
   16ddc:	and	ip, r1, #1
   16de0:	beq	18724 <ReadUInt32Data+0x307c>
   16de4:	bic	r3, r4, #3
   16de8:	sub	r3, r3, #4
   16dec:	add	r2, r2, r3, lsr #2
   16df0:	mvn	r7, r3, lsr #2
   16df4:	and	r2, r2, #1
   16df8:	add	r3, r7, r2
   16dfc:	mov	r2, #0
   16e00:	mov	r7, #32
   16e04:	add	r5, r9, r2
   16e08:	add	r1, r8, #16
   16e0c:	adds	r3, r3, #2
   16e10:	add	r2, r2, #8
   16e14:	vld1.32	{d16[0]}, [r5 :32]
   16e18:	add	r5, r5, #4
   16e1c:	vmovl.u8	q8, d16
   16e20:	vmovl.u16	q8, d16
   16e24:	vst1.32	{d16-d17}, [r8], r7
   16e28:	vld1.32	{d16[0]}, [r5 :32]
   16e2c:	vmovl.u8	q8, d16
   16e30:	vmovl.u16	q8, d16
   16e34:	vst1.32	{d16-d17}, [r1]
   16e38:	bne	16e04 <ReadUInt32Data+0x175c>
   16e3c:	b	18728 <ReadUInt32Data+0x3080>
   16e40:	cmp	r6, #256	; 0x100
   16e44:	bgt	179a0 <ReadUInt32Data+0x22f8>
   16e48:	ldr	r3, [r5]
   16e4c:	add	r4, sp, #408	; 0x198
   16e50:	mov	r1, sl
   16e54:	mov	r2, r6
   16e58:	mov	r0, r4
   16e5c:	bl	18b8 <fread@plt>
   16e60:	mov	r7, r0
   16e64:	cmp	r6, #1
   16e68:	blt	18d94 <ReadUInt32Data+0x36ec>
   16e6c:	mov	lr, #0
   16e70:	cmp	r6, #4
   16e74:	bcc	187e4 <ReadUInt32Data+0x313c>
   16e78:	bic	lr, r6, #3
   16e7c:	mov	r2, #1
   16e80:	str	sl, [sp, #260]	; 0x104
   16e84:	mov	sl, r6
   16e88:	str	r8, [sp]
   16e8c:	str	r7, [sp, #252]	; 0xfc
   16e90:	subs	r1, lr, #4
   16e94:	add	r1, r2, r1, lsr #2
   16e98:	and	ip, r1, #1
   16e9c:	beq	18794 <ReadUInt32Data+0x30ec>
   16ea0:	ldr	r2, [sp]
   16ea4:	sub	r3, r1, ip
   16ea8:	mov	r1, #0
   16eac:	add	r8, sp, #272	; 0x110
   16eb0:	mov	r9, #32
   16eb4:	add	r5, sp, #280	; 0x118
   16eb8:	ldr	r0, [r4]
   16ebc:	ldr	r7, [r4, #4]
   16ec0:	subs	r3, r3, #2
   16ec4:	add	r1, r1, #8
   16ec8:	str	r0, [sp, #272]	; 0x110
   16ecc:	str	r7, [sp, #276]	; 0x114
   16ed0:	add	r0, r2, #16
   16ed4:	vld1.16	{d16}, [r8 :64]
   16ed8:	vmovl.s16	q8, d16
   16edc:	vst1.32	{d16-d17}, [r2], r9
   16ee0:	ldr	r7, [r4, #8]
   16ee4:	ldr	r6, [r4, #12]
   16ee8:	add	r4, r4, #16
   16eec:	str	r6, [sp, #284]	; 0x11c
   16ef0:	str	r7, [sp, #280]	; 0x118
   16ef4:	vld1.16	{d16}, [r5 :64]
   16ef8:	vmovl.s16	q8, d16
   16efc:	vst1.32	{d16-d17}, [r0]
   16f00:	bne	16eb8 <ReadUInt32Data+0x1810>
   16f04:	b	18798 <ReadUInt32Data+0x30f0>
   16f08:	cmp	r6, #256	; 0x100
   16f0c:	bgt	17b7c <ReadUInt32Data+0x24d4>
   16f10:	ldr	r3, [r5]
   16f14:	add	r4, sp, #408	; 0x198
   16f18:	mov	r1, sl
   16f1c:	mov	r2, r6
   16f20:	mov	r0, r4
   16f24:	bl	18b8 <fread@plt>
   16f28:	mov	r7, r0
   16f2c:	cmp	r6, #1
   16f30:	blt	18d94 <ReadUInt32Data+0x36ec>
   16f34:	mov	lr, #0
   16f38:	cmp	r6, #4
   16f3c:	bcc	18858 <ReadUInt32Data+0x31b0>
   16f40:	bic	lr, r6, #3
   16f44:	mov	r2, #1
   16f48:	str	sl, [sp, #260]	; 0x104
   16f4c:	mov	sl, r6
   16f50:	str	r8, [sp]
   16f54:	str	r7, [sp, #252]	; 0xfc
   16f58:	subs	r1, lr, #4
   16f5c:	add	r1, r2, r1, lsr #2
   16f60:	and	ip, r1, #1
   16f64:	beq	18808 <ReadUInt32Data+0x3160>
   16f68:	ldr	r2, [sp]
   16f6c:	sub	r3, r1, ip
   16f70:	mov	r1, #0
   16f74:	add	r8, sp, #336	; 0x150
   16f78:	mov	r9, #32
   16f7c:	add	r5, sp, #344	; 0x158
   16f80:	ldr	r0, [r4]
   16f84:	ldr	r7, [r4, #4]
   16f88:	subs	r3, r3, #2
   16f8c:	add	r1, r1, #8
   16f90:	str	r0, [sp, #336]	; 0x150
   16f94:	str	r7, [sp, #340]	; 0x154
   16f98:	add	r0, r2, #16
   16f9c:	vld1.16	{d16}, [r8 :64]
   16fa0:	vmovl.u16	q8, d16
   16fa4:	vst1.32	{d16-d17}, [r2], r9
   16fa8:	ldr	r7, [r4, #8]
   16fac:	ldr	r6, [r4, #12]
   16fb0:	add	r4, r4, #16
   16fb4:	str	r6, [sp, #348]	; 0x15c
   16fb8:	str	r7, [sp, #344]	; 0x158
   16fbc:	vld1.16	{d16}, [r5 :64]
   16fc0:	vmovl.u16	q8, d16
   16fc4:	vst1.32	{d16-d17}, [r0]
   16fc8:	bne	16f80 <ReadUInt32Data+0x18d8>
   16fcc:	b	1880c <ReadUInt32Data+0x3164>
   16fd0:	cmp	r6, #256	; 0x100
   16fd4:	ble	1709c <ReadUInt32Data+0x19f4>
   16fd8:	sub	r0, r6, #256	; 0x100
   16fdc:	str	sl, [sp, #260]	; 0x104
   16fe0:	mov	sl, r8
   16fe4:	mov	r8, r5
   16fe8:	lsl	r4, r6, #2
   16fec:	mov	r5, #0
   16ff0:	mov	r7, #0
   16ff4:	str	r6, [sp, #4]
   16ff8:	str	r0, [sp, #256]	; 0x100
   16ffc:	ldr	r3, [r8]
   17000:	ldr	r1, [sp, #260]	; 0x104
   17004:	add	r9, sp, #408	; 0x198
   17008:	mov	r2, #256	; 0x100
   1700c:	mov	r0, r9
   17010:	bl	18b8 <fread@plt>
   17014:	mov	r6, r0
   17018:	add	r0, sl, r5, lsl #2
   1701c:	mov	r1, r9
   17020:	mov	r2, #1024	; 0x400
   17024:	bl	181c <memcpy@plt>
   17028:	ldr	r0, [sp, #256]	; 0x100
   1702c:	add	r5, r5, #256	; 0x100
   17030:	add	r7, r6, r7
   17034:	sub	r4, r4, #1024	; 0x400
   17038:	cmp	r5, r0
   1703c:	blt	16ffc <ReadUInt32Data+0x1954>
   17040:	ldr	r0, [sp, #4]
   17044:	ldr	r9, [sp, #260]	; 0x104
   17048:	cmp	r5, r0
   1704c:	bge	17084 <ReadUInt32Data+0x19dc>
   17050:	ldr	r3, [r8]
   17054:	sub	r6, r0, r5
   17058:	add	r0, sp, #408	; 0x198
   1705c:	mov	r1, r9
   17060:	mov	r2, r6
   17064:	bl	18b8 <fread@plt>
   17068:	add	r7, r0, r7
   1706c:	cmp	r6, #1
   17070:	blt	17084 <ReadUInt32Data+0x19dc>
   17074:	add	r0, sl, r5, lsl #2
   17078:	add	r1, sp, #408	; 0x198
   1707c:	mov	r2, r4
   17080:	bl	181c <memcpy@plt>
   17084:	mov	sl, r9
   17088:	mul	r0, r7, sl
   1708c:	sub	sp, fp, #28
   17090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17094:	cmp	r6, #256	; 0x100
   17098:	bgt	17d58 <ReadUInt32Data+0x26b0>
   1709c:	ldr	r3, [r5]
   170a0:	add	r0, sp, #408	; 0x198
   170a4:	mov	r1, sl
   170a8:	mov	r2, r6
   170ac:	bl	18b8 <fread@plt>
   170b0:	mov	r7, r0
   170b4:	cmp	r6, #1
   170b8:	blt	18d94 <ReadUInt32Data+0x36ec>
   170bc:	lsl	r2, r6, #2
   170c0:	add	r1, sp, #408	; 0x198
   170c4:	mov	r0, r8
   170c8:	bl	181c <memcpy@plt>
   170cc:	mul	r0, r7, sl
   170d0:	sub	sp, fp, #28
   170d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170d8:	cmp	r6, #256	; 0x100
   170dc:	bgt	17e14 <ReadUInt32Data+0x276c>
   170e0:	ldr	r3, [r5]
   170e4:	add	r4, sp, #408	; 0x198
   170e8:	mov	r1, sl
   170ec:	mov	r2, r6
   170f0:	mov	r0, r4
   170f4:	bl	18b8 <fread@plt>
   170f8:	mov	r7, r0
   170fc:	cmp	r6, #1
   17100:	blt	18d94 <ReadUInt32Data+0x36ec>
   17104:	mov	r0, #0
   17108:	cmp	r6, #4
   1710c:	bcc	188b4 <ReadUInt32Data+0x320c>
   17110:	bic	r0, r6, #3
   17114:	mov	r2, #1
   17118:	mov	r9, r8
   1711c:	mov	r8, r6
   17120:	mov	lr, r7
   17124:	subs	r1, r0, #4
   17128:	add	r1, r2, r1, lsr #2
   1712c:	and	ip, r1, #1
   17130:	beq	1887c <ReadUInt32Data+0x31d4>
   17134:	sub	r3, r1, ip
   17138:	mov	r1, #0
   1713c:	mov	r7, #32
   17140:	mov	r6, r9
   17144:	add	r5, r4, #16
   17148:	vld1.32	{d16-d17}, [r4], r7
   1714c:	add	r2, r6, #16
   17150:	subs	r3, r3, #2
   17154:	add	r1, r1, #8
   17158:	vcvt.u32.f32	q8, q8
   1715c:	vst1.32	{d16-d17}, [r6], r7
   17160:	vld1.32	{d16-d17}, [r5]
   17164:	vcvt.u32.f32	q8, q8
   17168:	vst1.32	{d16-d17}, [r2]
   1716c:	bne	17144 <ReadUInt32Data+0x1a9c>
   17170:	b	18880 <ReadUInt32Data+0x31d8>
   17174:	cmp	r6, #256	; 0x100
   17178:	bgt	17f80 <ReadUInt32Data+0x28d8>
   1717c:	ldr	r3, [r5]
   17180:	add	r7, sp, #408	; 0x198
   17184:	mov	r1, sl
   17188:	mov	r2, r6
   1718c:	mov	r0, r7
   17190:	bl	18b8 <fread@plt>
   17194:	cmp	r6, #1
   17198:	blt	18958 <ReadUInt32Data+0x32b0>
   1719c:	mov	lr, #0
   171a0:	beq	1892c <ReadUInt32Data+0x3284>
   171a4:	bic	lr, r6, #1
   171a8:	mov	r1, #1
   171ac:	str	r6, [sp, #4]
   171b0:	str	r8, [sp]
   171b4:	subs	r2, lr, #2
   171b8:	add	r1, r1, r2, lsr #1
   171bc:	and	ip, r1, #1
   171c0:	beq	188e4 <ReadUInt32Data+0x323c>
   171c4:	mov	r6, r8
   171c8:	sub	r3, r1, ip
   171cc:	mov	r1, #0
   171d0:	mov	r8, #32
   171d4:	mov	r9, #16
   171d8:	mov	r4, r7
   171dc:	mov	r5, r6
   171e0:	vld1.64	{d16-d17}, [r4], r8
   171e4:	subs	r3, r3, #2
   171e8:	add	r1, r1, #4
   171ec:	vcvt.u32.f64	s0, d16
   171f0:	vcvt.u32.f64	s2, d17
   171f4:	vmov	r2, s0
   171f8:	vmov.32	d16[0], r2
   171fc:	vmov	r2, s2
   17200:	vmov.32	d16[1], r2
   17204:	add	r2, r7, #16
   17208:	mov	r7, r4
   1720c:	vst1.32	{d16}, [r5], r9
   17210:	vld1.64	{d16-d17}, [r2]
   17214:	vcvt.u32.f64	s0, d16
   17218:	vcvt.u32.f64	s2, d17
   1721c:	vmov	r2, s0
   17220:	vmov.32	d16[0], r2
   17224:	vmov	r2, s2
   17228:	vmov.32	d16[1], r2
   1722c:	vstr	d16, [r6, #8]
   17230:	mov	r6, r5
   17234:	bne	171e0 <ReadUInt32Data+0x1b38>
   17238:	b	188e8 <ReadUInt32Data+0x3240>
   1723c:	cmp	r6, #256	; 0x100
   17240:	bgt	18168 <ReadUInt32Data+0x2ac0>
   17244:	ldr	r3, [r5]
   17248:	add	r4, sp, #408	; 0x198
   1724c:	mov	r1, sl
   17250:	mov	r2, r6
   17254:	mov	r0, r4
   17258:	bl	18b8 <fread@plt>
   1725c:	mov	r7, r0
   17260:	cmp	r6, #1
   17264:	blt	1832c <ReadUInt32Data+0x2c84>
   17268:	mov	lr, #0
   1726c:	beq	189b4 <ReadUInt32Data+0x330c>
   17270:	bic	lr, r6, #1
   17274:	mov	r2, #1
   17278:	str	r9, [sp, #244]	; 0xf4
   1727c:	mov	r9, r5
   17280:	str	sl, [sp, #260]	; 0x104
   17284:	str	r6, [sp, #4]
   17288:	subs	r1, lr, #2
   1728c:	add	r1, r2, r1, lsr #1
   17290:	and	ip, r1, #1
   17294:	beq	18968 <ReadUInt32Data+0x32c0>
   17298:	mov	r2, r8
   1729c:	mov	r8, r7
   172a0:	sub	r3, r1, ip
   172a4:	mov	r1, #0
   172a8:	mov	r7, #32
   172ac:	mov	r6, #16
   172b0:	mov	sl, r2
   172b4:	mov	r5, r2
   172b8:	add	r0, r4, #16
   172bc:	vld1.64	{d16-d17}, [r4], r7
   172c0:	subs	r3, r3, #2
   172c4:	add	r1, r1, #4
   172c8:	vmovn.i64	d16, q8
   172cc:	vst1.32	{d16}, [r5], r6
   172d0:	vld1.64	{d16-d17}, [r0]
   172d4:	vmovn.i64	d16, q8
   172d8:	vstr	d16, [r2, #8]
   172dc:	mov	r2, r5
   172e0:	bne	172b8 <ReadUInt32Data+0x1c10>
   172e4:	b	18974 <ReadUInt32Data+0x32cc>
   172e8:	mov	r0, r8
   172ec:	sub	r0, r6, #256	; 0x100
   172f0:	add	r1, r8, #1024	; 0x400
   172f4:	add	r4, sp, #408	; 0x198
   172f8:	mov	r7, #0
   172fc:	str	r5, [sp, #256]	; 0x100
   17300:	str	sl, [sp, #260]	; 0x104
   17304:	str	r6, [sp, #4]
   17308:	str	r0, [sp, #252]	; 0xfc
   1730c:	mov	r0, #0
   17310:	mov	r9, r0
   17314:	ldr	r0, [sp, #256]	; 0x100
   17318:	mov	r5, r1
   1731c:	ldr	r1, [sp, #260]	; 0x104
   17320:	mov	r2, #256	; 0x100
   17324:	mov	sl, r7
   17328:	ldr	r3, [r0]
   1732c:	mov	r0, r4
   17330:	bl	18b8 <fread@plt>
   17334:	mov	r6, r0
   17338:	mov	r7, #0
   1733c:	add	r0, r4, r7
   17340:	bl	1c20 <Mat_int16Swap>
   17344:	str	r0, [r8, r7, lsl #1]
   17348:	add	r7, r7, #2
   1734c:	cmp	r7, #512	; 0x200
   17350:	bne	1733c <ReadUInt32Data+0x1c94>
   17354:	ldr	r2, [sp, #252]	; 0xfc
   17358:	add	r0, r9, #256	; 0x100
   1735c:	mov	r7, sl
   17360:	add	r7, r6, sl
   17364:	add	r8, r8, #1024	; 0x400
   17368:	add	r1, r5, #1024	; 0x400
   1736c:	cmp	r0, r2
   17370:	blt	17310 <ReadUInt32Data+0x1c68>
   17374:	ldr	r8, [sp, #4]
   17378:	cmp	r0, r8
   1737c:	bge	18d90 <ReadUInt32Data+0x36e8>
   17380:	sub	r6, r8, r0
   17384:	ldr	r0, [sp, #256]	; 0x100
   17388:	ldr	sl, [sp, #260]	; 0x104
   1738c:	add	r4, sp, #408	; 0x198
   17390:	mov	r2, r6
   17394:	ldr	r3, [r0]
   17398:	mov	r0, r4
   1739c:	mov	r1, sl
   173a0:	bl	18b8 <fread@plt>
   173a4:	add	r7, r0, r7
   173a8:	cmp	r6, #1
   173ac:	blt	18d94 <ReadUInt32Data+0x36ec>
   173b0:	sub	r0, r8, r9
   173b4:	sub	r6, r0, #256	; 0x100
   173b8:	mov	r0, r4
   173bc:	bl	1c20 <Mat_int16Swap>
   173c0:	str	r0, [r5], #4
   173c4:	add	r4, r4, #2
   173c8:	subs	r6, r6, #1
   173cc:	bne	173b8 <ReadUInt32Data+0x1d10>
   173d0:	b	18d94 <ReadUInt32Data+0x36ec>
   173d4:	mov	r0, r8
   173d8:	sub	r0, r6, #256	; 0x100
   173dc:	add	r1, r8, #1024	; 0x400
   173e0:	add	r4, sp, #408	; 0x198
   173e4:	mov	r7, #0
   173e8:	str	r5, [sp, #256]	; 0x100
   173ec:	str	sl, [sp, #260]	; 0x104
   173f0:	str	r6, [sp, #4]
   173f4:	str	r0, [sp, #252]	; 0xfc
   173f8:	mov	r0, #0
   173fc:	mov	r9, r0
   17400:	ldr	r0, [sp, #256]	; 0x100
   17404:	mov	r5, r1
   17408:	ldr	r1, [sp, #260]	; 0x104
   1740c:	mov	r2, #256	; 0x100
   17410:	mov	sl, r7
   17414:	ldr	r3, [r0]
   17418:	mov	r0, r4
   1741c:	bl	18b8 <fread@plt>
   17420:	mov	r6, r0
   17424:	mov	r7, #0
   17428:	add	r0, r4, r7
   1742c:	bl	1c34 <Mat_uint16Swap>
   17430:	str	r0, [r8, r7, lsl #1]
   17434:	add	r7, r7, #2
   17438:	cmp	r7, #512	; 0x200
   1743c:	bne	17428 <ReadUInt32Data+0x1d80>
   17440:	ldr	r2, [sp, #252]	; 0xfc
   17444:	add	r0, r9, #256	; 0x100
   17448:	mov	r7, sl
   1744c:	add	r7, r6, sl
   17450:	add	r8, r8, #1024	; 0x400
   17454:	add	r1, r5, #1024	; 0x400
   17458:	cmp	r0, r2
   1745c:	blt	173fc <ReadUInt32Data+0x1d54>
   17460:	ldr	r8, [sp, #4]
   17464:	cmp	r0, r8
   17468:	bge	18d90 <ReadUInt32Data+0x36e8>
   1746c:	sub	r6, r8, r0
   17470:	ldr	r0, [sp, #256]	; 0x100
   17474:	ldr	sl, [sp, #260]	; 0x104
   17478:	add	r4, sp, #408	; 0x198
   1747c:	mov	r2, r6
   17480:	ldr	r3, [r0]
   17484:	mov	r0, r4
   17488:	mov	r1, sl
   1748c:	bl	18b8 <fread@plt>
   17490:	add	r7, r0, r7
   17494:	cmp	r6, #1
   17498:	blt	18d94 <ReadUInt32Data+0x36ec>
   1749c:	sub	r0, r8, r9
   174a0:	sub	r6, r0, #256	; 0x100
   174a4:	mov	r0, r4
   174a8:	bl	1c34 <Mat_uint16Swap>
   174ac:	str	r0, [r5], #4
   174b0:	add	r4, r4, #2
   174b4:	subs	r6, r6, #1
   174b8:	bne	174a4 <ReadUInt32Data+0x1dfc>
   174bc:	b	18d94 <ReadUInt32Data+0x36ec>
   174c0:	mov	r0, r8
   174c4:	sub	r0, r6, #256	; 0x100
   174c8:	add	r1, r8, #1024	; 0x400
   174cc:	add	r4, sp, #408	; 0x198
   174d0:	mov	r7, #0
   174d4:	str	r5, [sp, #256]	; 0x100
   174d8:	str	sl, [sp, #260]	; 0x104
   174dc:	str	r6, [sp, #4]
   174e0:	str	r0, [sp, #252]	; 0xfc
   174e4:	mov	r0, #0
   174e8:	mov	r9, r0
   174ec:	ldr	r0, [sp, #256]	; 0x100
   174f0:	mov	r5, r1
   174f4:	ldr	r1, [sp, #260]	; 0x104
   174f8:	mov	r2, #256	; 0x100
   174fc:	mov	sl, r7
   17500:	ldr	r3, [r0]
   17504:	mov	r0, r4
   17508:	bl	18b8 <fread@plt>
   1750c:	mov	r6, r0
   17510:	mov	r7, #0
   17514:	add	r0, r4, r7
   17518:	bl	1bf8 <Mat_int32Swap>
   1751c:	str	r0, [r8, r7]
   17520:	add	r7, r7, #4
   17524:	cmp	r7, #1024	; 0x400
   17528:	bne	17514 <ReadUInt32Data+0x1e6c>
   1752c:	ldr	r2, [sp, #252]	; 0xfc
   17530:	add	r0, r9, #256	; 0x100
   17534:	mov	r7, sl
   17538:	add	r7, r6, sl
   1753c:	add	r8, r8, #1024	; 0x400
   17540:	add	r1, r5, #1024	; 0x400
   17544:	cmp	r0, r2
   17548:	blt	174e8 <ReadUInt32Data+0x1e40>
   1754c:	ldr	r8, [sp, #4]
   17550:	cmp	r0, r8
   17554:	bge	18d90 <ReadUInt32Data+0x36e8>
   17558:	sub	r6, r8, r0
   1755c:	ldr	r0, [sp, #256]	; 0x100
   17560:	ldr	sl, [sp, #260]	; 0x104
   17564:	add	r4, sp, #408	; 0x198
   17568:	mov	r2, r6
   1756c:	ldr	r3, [r0]
   17570:	mov	r0, r4
   17574:	mov	r1, sl
   17578:	bl	18b8 <fread@plt>
   1757c:	add	r7, r0, r7
   17580:	cmp	r6, #1
   17584:	blt	18d94 <ReadUInt32Data+0x36ec>
   17588:	sub	r0, r8, r9
   1758c:	sub	r6, r0, #256	; 0x100
   17590:	mov	r0, r4
   17594:	bl	1bf8 <Mat_int32Swap>
   17598:	str	r0, [r5], #4
   1759c:	add	r4, r4, #4
   175a0:	subs	r6, r6, #1
   175a4:	bne	17590 <ReadUInt32Data+0x1ee8>
   175a8:	b	18d94 <ReadUInt32Data+0x36ec>
   175ac:	mov	r0, r8
   175b0:	sub	r0, r6, #256	; 0x100
   175b4:	add	r1, r8, #1024	; 0x400
   175b8:	add	r4, sp, #408	; 0x198
   175bc:	mov	r7, #0
   175c0:	str	r5, [sp, #256]	; 0x100
   175c4:	str	sl, [sp, #260]	; 0x104
   175c8:	str	r6, [sp, #4]
   175cc:	str	r0, [sp, #252]	; 0xfc
   175d0:	mov	r0, #0
   175d4:	mov	r9, r0
   175d8:	ldr	r0, [sp, #256]	; 0x100
   175dc:	mov	r5, r1
   175e0:	ldr	r1, [sp, #260]	; 0x104
   175e4:	mov	r2, #256	; 0x100
   175e8:	mov	sl, r7
   175ec:	ldr	r3, [r0]
   175f0:	mov	r0, r4
   175f4:	bl	18b8 <fread@plt>
   175f8:	mov	r6, r0
   175fc:	mov	r7, #0
   17600:	add	r0, r4, r7
   17604:	bl	1c0c <Mat_uint32Swap>
   17608:	str	r0, [r8, r7]
   1760c:	add	r7, r7, #4
   17610:	cmp	r7, #1024	; 0x400
   17614:	bne	17600 <ReadUInt32Data+0x1f58>
   17618:	ldr	r2, [sp, #252]	; 0xfc
   1761c:	add	r0, r9, #256	; 0x100
   17620:	mov	r7, sl
   17624:	add	r7, r6, sl
   17628:	add	r8, r8, #1024	; 0x400
   1762c:	add	r1, r5, #1024	; 0x400
   17630:	cmp	r0, r2
   17634:	blt	175d4 <ReadUInt32Data+0x1f2c>
   17638:	ldr	r8, [sp, #4]
   1763c:	cmp	r0, r8
   17640:	bge	18d90 <ReadUInt32Data+0x36e8>
   17644:	sub	r6, r8, r0
   17648:	ldr	r0, [sp, #256]	; 0x100
   1764c:	ldr	sl, [sp, #260]	; 0x104
   17650:	add	r4, sp, #408	; 0x198
   17654:	mov	r2, r6
   17658:	ldr	r3, [r0]
   1765c:	mov	r0, r4
   17660:	mov	r1, sl
   17664:	bl	18b8 <fread@plt>
   17668:	add	r7, r0, r7
   1766c:	cmp	r6, #1
   17670:	blt	18d94 <ReadUInt32Data+0x36ec>
   17674:	sub	r0, r8, r9
   17678:	sub	r6, r0, #256	; 0x100
   1767c:	mov	r0, r4
   17680:	bl	1c0c <Mat_uint32Swap>
   17684:	str	r0, [r5], #4
   17688:	add	r4, r4, #4
   1768c:	subs	r6, r6, #1
   17690:	bne	1767c <ReadUInt32Data+0x1fd4>
   17694:	b	18d94 <ReadUInt32Data+0x36ec>
   17698:	mov	r0, r8
   1769c:	sub	r0, r6, #256	; 0x100
   176a0:	add	r1, r8, #1024	; 0x400
   176a4:	add	r4, sp, #408	; 0x198
   176a8:	mov	r7, #0
   176ac:	str	r5, [sp, #256]	; 0x100
   176b0:	str	sl, [sp, #260]	; 0x104
   176b4:	str	r6, [sp, #4]
   176b8:	str	r0, [sp, #252]	; 0xfc
   176bc:	mov	r0, #0
   176c0:	mov	r9, r0
   176c4:	ldr	r0, [sp, #256]	; 0x100
   176c8:	mov	r5, r1
   176cc:	ldr	r1, [sp, #260]	; 0x104
   176d0:	mov	r2, #256	; 0x100
   176d4:	mov	sl, r7
   176d8:	ldr	r3, [r0]
   176dc:	mov	r0, r4
   176e0:	bl	18b8 <fread@plt>
   176e4:	mov	r6, r0
   176e8:	mov	r7, #0
   176ec:	add	r0, r4, r7
   176f0:	bl	1c4c <Mat_floatSwap>
   176f4:	vcvt.u32.f32	s0, s0
   176f8:	vmov	r0, s0
   176fc:	str	r0, [r8, r7]
   17700:	add	r7, r7, #4
   17704:	cmp	r7, #1024	; 0x400
   17708:	bne	176ec <ReadUInt32Data+0x2044>
   1770c:	ldr	r2, [sp, #252]	; 0xfc
   17710:	add	r0, r9, #256	; 0x100
   17714:	mov	r7, sl
   17718:	add	r7, r6, sl
   1771c:	add	r8, r8, #1024	; 0x400
   17720:	add	r1, r5, #1024	; 0x400
   17724:	cmp	r0, r2
   17728:	blt	176c0 <ReadUInt32Data+0x2018>
   1772c:	ldr	r8, [sp, #4]
   17730:	cmp	r0, r8
   17734:	bge	18d90 <ReadUInt32Data+0x36e8>
   17738:	sub	r6, r8, r0
   1773c:	ldr	r0, [sp, #256]	; 0x100
   17740:	ldr	sl, [sp, #260]	; 0x104
   17744:	add	r4, sp, #408	; 0x198
   17748:	mov	r2, r6
   1774c:	ldr	r3, [r0]
   17750:	mov	r0, r4
   17754:	mov	r1, sl
   17758:	bl	18b8 <fread@plt>
   1775c:	add	r7, r0, r7
   17760:	cmp	r6, #1
   17764:	blt	18d94 <ReadUInt32Data+0x36ec>
   17768:	sub	r0, r8, r9
   1776c:	sub	r6, r0, #256	; 0x100
   17770:	mov	r0, r4
   17774:	bl	1c4c <Mat_floatSwap>
   17778:	vcvt.u32.f32	s0, s0
   1777c:	add	r4, r4, #4
   17780:	subs	r6, r6, #1
   17784:	vmov	r0, s0
   17788:	str	r0, [r5], #4
   1778c:	bne	17770 <ReadUInt32Data+0x20c8>
   17790:	b	18d94 <ReadUInt32Data+0x36ec>
   17794:	sub	r0, r6, #256	; 0x100
   17798:	str	r5, [sp, #256]	; 0x100
   1779c:	mov	r5, r8
   177a0:	add	r1, r8, #1024	; 0x400
   177a4:	mov	r7, #0
   177a8:	str	sl, [sp, #260]	; 0x104
   177ac:	str	r6, [sp, #4]
   177b0:	str	r0, [sp, #252]	; 0xfc
   177b4:	mov	r0, #0
   177b8:	mov	r8, r0
   177bc:	ldr	r0, [sp, #256]	; 0x100
   177c0:	mov	sl, r1
   177c4:	ldr	r1, [sp, #260]	; 0x104
   177c8:	add	r4, sp, #408	; 0x198
   177cc:	mov	r2, #256	; 0x100
   177d0:	mov	r9, r7
   177d4:	ldr	r3, [r0]
   177d8:	mov	r0, r4
   177dc:	bl	18b8 <fread@plt>
   177e0:	mov	r6, r0
   177e4:	mov	r7, #0
   177e8:	mov	r0, r4
   177ec:	bl	1c90 <Mat_doubleSwap>
   177f0:	vcvt.u32.f64	s0, d0
   177f4:	add	r4, r4, #8
   177f8:	vmov	r0, s0
   177fc:	str	r0, [r5, r7, lsl #2]
   17800:	add	r7, r7, #1
   17804:	cmp	r7, #256	; 0x100
   17808:	bne	177e8 <ReadUInt32Data+0x2140>
   1780c:	ldr	r2, [sp, #252]	; 0xfc
   17810:	add	r0, r8, #256	; 0x100
   17814:	mov	r7, r9
   17818:	add	r7, r6, r9
   1781c:	add	r5, r5, #1024	; 0x400
   17820:	add	r1, sl, #1024	; 0x400
   17824:	cmp	r0, r2
   17828:	blt	177b8 <ReadUInt32Data+0x2110>
   1782c:	ldr	r5, [sp, #4]
   17830:	cmp	r0, r5
   17834:	bge	18d90 <ReadUInt32Data+0x36e8>
   17838:	sub	r6, r5, r0
   1783c:	ldr	r0, [sp, #256]	; 0x100
   17840:	ldr	r1, [sp, #260]	; 0x104
   17844:	add	r4, sp, #408	; 0x198
   17848:	mov	r2, r6
   1784c:	ldr	r3, [r0]
   17850:	mov	r0, r4
   17854:	bl	18b8 <fread@plt>
   17858:	add	r7, r0, r7
   1785c:	cmp	r6, #1
   17860:	blt	18d90 <ReadUInt32Data+0x36e8>
   17864:	sub	r0, r5, r8
   17868:	sub	r6, r0, #256	; 0x100
   1786c:	mov	r0, r4
   17870:	bl	1c90 <Mat_doubleSwap>
   17874:	vcvt.u32.f64	s0, d0
   17878:	add	r4, r4, #8
   1787c:	subs	r6, r6, #1
   17880:	vmov	r0, s0
   17884:	str	r0, [sl], #4
   17888:	bne	1786c <ReadUInt32Data+0x21c4>
   1788c:	b	18d90 <ReadUInt32Data+0x36e8>
   17890:	sub	r0, r6, #256	; 0x100
   17894:	str	r6, [sp, #4]
   17898:	add	r1, r8, #1024	; 0x400
   1789c:	mov	r6, r8
   178a0:	mov	r7, #0
   178a4:	str	r9, [sp, #244]	; 0xf4
   178a8:	str	r5, [sp, #256]	; 0x100
   178ac:	str	r8, [sp]
   178b0:	str	r0, [sp, #252]	; 0xfc
   178b4:	mov	r0, #0
   178b8:	str	r0, [sp, #260]	; 0x104
   178bc:	ldr	r0, [sp, #256]	; 0x100
   178c0:	add	r4, sp, #408	; 0x198
   178c4:	mov	r5, r1
   178c8:	mov	r1, sl
   178cc:	mov	r2, #256	; 0x100
   178d0:	mov	r9, sl
   178d4:	ldr	r3, [r0]
   178d8:	mov	r0, r4
   178dc:	bl	18b8 <fread@plt>
   178e0:	mov	r8, r0
   178e4:	mov	sl, #0
   178e8:	mov	r0, r4
   178ec:	bl	1b84 <Mat_int64Swap>
   178f0:	str	r0, [r6, sl, lsl #2]
   178f4:	add	sl, sl, #1
   178f8:	add	r4, r4, #8
   178fc:	cmp	sl, #256	; 0x100
   17900:	bne	178e8 <ReadUInt32Data+0x2240>
   17904:	ldr	r0, [sp, #260]	; 0x104
   17908:	ldr	r2, [sp, #252]	; 0xfc
   1790c:	add	r7, r8, r7
   17910:	add	r6, r6, #1024	; 0x400
   17914:	add	r1, r5, #1024	; 0x400
   17918:	mov	sl, r9
   1791c:	add	r0, r0, #256	; 0x100
   17920:	cmp	r0, r2
   17924:	blt	178b8 <ReadUInt32Data+0x2210>
   17928:	ldr	r6, [sp, #4]
   1792c:	cmp	r0, r6
   17930:	bge	18320 <ReadUInt32Data+0x2c78>
   17934:	sub	r8, r6, r0
   17938:	ldr	r0, [sp, #256]	; 0x100
   1793c:	add	r4, sp, #408	; 0x198
   17940:	mov	r1, sl
   17944:	mov	r2, r8
   17948:	ldr	r3, [r0]
   1794c:	mov	r0, r4
   17950:	bl	18b8 <fread@plt>
   17954:	ldr	r9, [sp, #244]	; 0xf4
   17958:	add	r7, r0, r7
   1795c:	cmp	r8, #1
   17960:	blt	1798c <ReadUInt32Data+0x22e4>
   17964:	ldr	r0, [sp, #260]	; 0x104
   17968:	sub	r0, r6, r0
   1796c:	sub	r6, r0, #256	; 0x100
   17970:	mov	r0, r4
   17974:	bl	1b84 <Mat_int64Swap>
   17978:	str	r0, [r5], #4
   1797c:	add	r4, r4, #8
   17980:	subs	r6, r6, #1
   17984:	bne	17970 <ReadUInt32Data+0x22c8>
   17988:	ldr	r6, [sp, #4]
   1798c:	ldr	r8, [sp]
   17990:	ldr	r5, [sp, #256]	; 0x100
   17994:	cmp	r9, #13
   17998:	beq	18334 <ReadUInt32Data+0x2c8c>
   1799c:	b	18d94 <ReadUInt32Data+0x36ec>
   179a0:	sub	r1, r6, #256	; 0x100
   179a4:	str	r5, [sp, #256]	; 0x100
   179a8:	str	sl, [sp, #260]	; 0x104
   179ac:	mov	r2, #0
   179b0:	add	r0, r8, #1024	; 0x400
   179b4:	mov	r7, #0
   179b8:	add	r4, sp, #408	; 0x198
   179bc:	add	sl, sp, #312	; 0x138
   179c0:	mov	r9, #32
   179c4:	add	r5, sp, #320	; 0x140
   179c8:	str	r6, [sp, #4]
   179cc:	str	r8, [sp]
   179d0:	str	r1, [sp, #236]	; 0xec
   179d4:	mov	r1, #256	; 0x100
   179d8:	str	r2, [sp, #252]	; 0xfc
   179dc:	str	r0, [sp, #240]	; 0xf0
   179e0:	ldr	r0, [sp, #256]	; 0x100
   179e4:	str	r1, [sp, #248]	; 0xf8
   179e8:	ldr	r1, [sp, #260]	; 0x104
   179ec:	mov	r2, #256	; 0x100
   179f0:	str	r7, [sp, #244]	; 0xf4
   179f4:	ldr	r3, [r0]
   179f8:	mov	r0, r4
   179fc:	bl	18b8 <fread@plt>
   17a00:	mov	r1, r8
   17a04:	mov	r2, #0
   17a08:	ldr	r3, [r4, r2]
   17a0c:	str	r3, [sp, #312]	; 0x138
   17a10:	add	r3, r4, r2
   17a14:	add	r2, r2, #16
   17a18:	ldr	r7, [r3, #4]
   17a1c:	cmp	r2, #512	; 0x200
   17a20:	str	r7, [sp, #316]	; 0x13c
   17a24:	add	r7, r1, #16
   17a28:	vld1.16	{d16}, [sl :64]
   17a2c:	vmovl.s16	q8, d16
   17a30:	vst1.32	{d16-d17}, [r1], r9
   17a34:	ldr	r6, [r3, #8]
   17a38:	ldr	r3, [r3, #12]
   17a3c:	str	r6, [sp, #320]	; 0x140
   17a40:	str	r3, [sp, #324]	; 0x144
   17a44:	vld1.16	{d16}, [r5 :64]
   17a48:	vmovl.s16	q8, d16
   17a4c:	vst1.32	{d16-d17}, [r7]
   17a50:	bne	17a08 <ReadUInt32Data+0x2360>
   17a54:	ldr	r1, [sp, #252]	; 0xfc
   17a58:	ldr	r6, [sp, #244]	; 0xf4
   17a5c:	ldr	r2, [sp, #236]	; 0xec
   17a60:	add	r8, r8, #1024	; 0x400
   17a64:	add	r1, r0, r1
   17a68:	ldr	r0, [sp, #240]	; 0xf0
   17a6c:	add	r7, r6, #256	; 0x100
   17a70:	str	r1, [sp, #252]	; 0xfc
   17a74:	ldr	r1, [sp, #248]	; 0xf8
   17a78:	cmp	r7, r2
   17a7c:	add	r0, r0, #1024	; 0x400
   17a80:	add	r1, r1, #256	; 0x100
   17a84:	blt	179dc <ReadUInt32Data+0x2334>
   17a88:	ldr	r5, [sp, #4]
   17a8c:	cmp	r7, r5
   17a90:	bge	182fc <ReadUInt32Data+0x2c54>
   17a94:	ldr	r0, [sp, #256]	; 0x100
   17a98:	ldr	sl, [sp, #260]	; 0x104
   17a9c:	sub	r8, r5, r7
   17aa0:	add	r4, sp, #408	; 0x198
   17aa4:	mov	r2, r8
   17aa8:	ldr	r3, [r0]
   17aac:	mov	r0, r4
   17ab0:	mov	r1, sl
   17ab4:	bl	18b8 <fread@plt>
   17ab8:	ldr	r1, [sp, #252]	; 0xfc
   17abc:	cmp	r8, #1
   17ac0:	add	r1, r0, r1
   17ac4:	str	r1, [sp, #252]	; 0xfc
   17ac8:	blt	18acc <ReadUInt32Data+0x3424>
   17acc:	mov	lr, #0
   17ad0:	cmp	r8, #4
   17ad4:	bcc	18a98 <ReadUInt32Data+0x33f0>
   17ad8:	bic	lr, r8, #3
   17adc:	mov	r2, #1
   17ae0:	str	r8, [sp, #256]	; 0x100
   17ae4:	subs	r1, lr, #4
   17ae8:	add	r1, r2, r1, lsr #2
   17aec:	and	r0, r1, #1
   17af0:	str	r0, [sp, #236]	; 0xec
   17af4:	beq	18a40 <ReadUInt32Data+0x3398>
   17af8:	sub	r1, r5, r6
   17afc:	ldr	ip, [sp, #240]	; 0xf0
   17b00:	add	r8, sp, #296	; 0x128
   17b04:	mov	r9, #32
   17b08:	add	r5, sp, #304	; 0x130
   17b0c:	sub	r1, r1, #256	; 0x100
   17b10:	bic	r1, r1, #3
   17b14:	sub	r1, r1, #4
   17b18:	mvn	r3, r1, lsr #2
   17b1c:	add	r1, r2, r1, lsr #2
   17b20:	mov	r2, #0
   17b24:	and	r1, r1, #1
   17b28:	add	r3, r3, r1
   17b2c:	ldr	r0, [r4]
   17b30:	ldr	r1, [r4, #4]
   17b34:	adds	r3, r3, #2
   17b38:	add	r2, r2, #8
   17b3c:	str	r0, [sp, #296]	; 0x128
   17b40:	str	r1, [sp, #300]	; 0x12c
   17b44:	add	r0, ip, #16
   17b48:	vld1.16	{d16}, [r8 :64]
   17b4c:	vmovl.s16	q8, d16
   17b50:	vst1.32	{d16-d17}, [ip], r9
   17b54:	ldr	r1, [r4, #8]
   17b58:	ldr	r6, [r4, #12]
   17b5c:	add	r4, r4, #16
   17b60:	str	r6, [sp, #308]	; 0x134
   17b64:	str	r1, [sp, #304]	; 0x130
   17b68:	vld1.16	{d16}, [r5 :64]
   17b6c:	vmovl.s16	q8, d16
   17b70:	vst1.32	{d16-d17}, [r0]
   17b74:	bne	17b2c <ReadUInt32Data+0x2484>
   17b78:	b	18a44 <ReadUInt32Data+0x339c>
   17b7c:	sub	r1, r6, #256	; 0x100
   17b80:	str	r5, [sp, #256]	; 0x100
   17b84:	str	sl, [sp, #260]	; 0x104
   17b88:	mov	r2, #0
   17b8c:	add	r0, r8, #1024	; 0x400
   17b90:	mov	r7, #0
   17b94:	add	r4, sp, #408	; 0x198
   17b98:	add	sl, sp, #376	; 0x178
   17b9c:	mov	r9, #32
   17ba0:	add	r5, sp, #384	; 0x180
   17ba4:	str	r6, [sp, #4]
   17ba8:	str	r8, [sp]
   17bac:	str	r1, [sp, #236]	; 0xec
   17bb0:	mov	r1, #256	; 0x100
   17bb4:	str	r2, [sp, #252]	; 0xfc
   17bb8:	str	r0, [sp, #240]	; 0xf0
   17bbc:	ldr	r0, [sp, #256]	; 0x100
   17bc0:	str	r1, [sp, #248]	; 0xf8
   17bc4:	ldr	r1, [sp, #260]	; 0x104
   17bc8:	mov	r2, #256	; 0x100
   17bcc:	str	r7, [sp, #244]	; 0xf4
   17bd0:	ldr	r3, [r0]
   17bd4:	mov	r0, r4
   17bd8:	bl	18b8 <fread@plt>
   17bdc:	mov	r1, r8
   17be0:	mov	r2, #0
   17be4:	ldr	r3, [r4, r2]
   17be8:	str	r3, [sp, #376]	; 0x178
   17bec:	add	r3, r4, r2
   17bf0:	add	r2, r2, #16
   17bf4:	ldr	r7, [r3, #4]
   17bf8:	cmp	r2, #512	; 0x200
   17bfc:	str	r7, [sp, #380]	; 0x17c
   17c00:	add	r7, r1, #16
   17c04:	vld1.16	{d16}, [sl :64]
   17c08:	vmovl.u16	q8, d16
   17c0c:	vst1.32	{d16-d17}, [r1], r9
   17c10:	ldr	r6, [r3, #8]
   17c14:	ldr	r3, [r3, #12]
   17c18:	str	r6, [sp, #384]	; 0x180
   17c1c:	str	r3, [sp, #388]	; 0x184
   17c20:	vld1.16	{d16}, [r5 :64]
   17c24:	vmovl.u16	q8, d16
   17c28:	vst1.32	{d16-d17}, [r7]
   17c2c:	bne	17be4 <ReadUInt32Data+0x253c>
   17c30:	ldr	r1, [sp, #252]	; 0xfc
   17c34:	ldr	r6, [sp, #244]	; 0xf4
   17c38:	ldr	r2, [sp, #236]	; 0xec
   17c3c:	add	r8, r8, #1024	; 0x400
   17c40:	add	r1, r0, r1
   17c44:	ldr	r0, [sp, #240]	; 0xf0
   17c48:	add	r7, r6, #256	; 0x100
   17c4c:	str	r1, [sp, #252]	; 0xfc
   17c50:	ldr	r1, [sp, #248]	; 0xf8
   17c54:	cmp	r7, r2
   17c58:	add	r0, r0, #1024	; 0x400
   17c5c:	add	r1, r1, #256	; 0x100
   17c60:	blt	17bb8 <ReadUInt32Data+0x2510>
   17c64:	ldr	r5, [sp, #4]
   17c68:	cmp	r7, r5
   17c6c:	bge	182fc <ReadUInt32Data+0x2c54>
   17c70:	ldr	r0, [sp, #256]	; 0x100
   17c74:	ldr	sl, [sp, #260]	; 0x104
   17c78:	sub	r8, r5, r7
   17c7c:	add	r4, sp, #408	; 0x198
   17c80:	mov	r2, r8
   17c84:	ldr	r3, [r0]
   17c88:	mov	r0, r4
   17c8c:	mov	r1, sl
   17c90:	bl	18b8 <fread@plt>
   17c94:	ldr	r1, [sp, #252]	; 0xfc
   17c98:	cmp	r8, #1
   17c9c:	add	r1, r0, r1
   17ca0:	str	r1, [sp, #252]	; 0xfc
   17ca4:	blt	18b68 <ReadUInt32Data+0x34c0>
   17ca8:	mov	lr, #0
   17cac:	cmp	r8, #4
   17cb0:	bcc	18b34 <ReadUInt32Data+0x348c>
   17cb4:	bic	lr, r8, #3
   17cb8:	mov	r2, #1
   17cbc:	str	r8, [sp, #256]	; 0x100
   17cc0:	subs	r1, lr, #4
   17cc4:	add	r1, r2, r1, lsr #2
   17cc8:	and	r0, r1, #1
   17ccc:	str	r0, [sp, #236]	; 0xec
   17cd0:	beq	18adc <ReadUInt32Data+0x3434>
   17cd4:	sub	r1, r5, r6
   17cd8:	ldr	ip, [sp, #240]	; 0xf0
   17cdc:	add	r8, sp, #360	; 0x168
   17ce0:	mov	r9, #32
   17ce4:	add	r5, sp, #368	; 0x170
   17ce8:	sub	r1, r1, #256	; 0x100
   17cec:	bic	r1, r1, #3
   17cf0:	sub	r1, r1, #4
   17cf4:	mvn	r3, r1, lsr #2
   17cf8:	add	r1, r2, r1, lsr #2
   17cfc:	mov	r2, #0
   17d00:	and	r1, r1, #1
   17d04:	add	r3, r3, r1
   17d08:	ldr	r0, [r4]
   17d0c:	ldr	r1, [r4, #4]
   17d10:	adds	r3, r3, #2
   17d14:	add	r2, r2, #8
   17d18:	str	r0, [sp, #360]	; 0x168
   17d1c:	str	r1, [sp, #364]	; 0x16c
   17d20:	add	r0, ip, #16
   17d24:	vld1.16	{d16}, [r8 :64]
   17d28:	vmovl.u16	q8, d16
   17d2c:	vst1.32	{d16-d17}, [ip], r9
   17d30:	ldr	r1, [r4, #8]
   17d34:	ldr	r6, [r4, #12]
   17d38:	add	r4, r4, #16
   17d3c:	str	r6, [sp, #372]	; 0x174
   17d40:	str	r1, [sp, #368]	; 0x170
   17d44:	vld1.16	{d16}, [r5 :64]
   17d48:	vmovl.u16	q8, d16
   17d4c:	vst1.32	{d16-d17}, [r0]
   17d50:	bne	17d08 <ReadUInt32Data+0x2660>
   17d54:	b	18ae0 <ReadUInt32Data+0x3438>
   17d58:	sub	r0, r6, #256	; 0x100
   17d5c:	str	sl, [sp, #260]	; 0x104
   17d60:	mov	sl, r8
   17d64:	mov	r8, r5
   17d68:	lsl	r4, r6, #2
   17d6c:	mov	r5, #0
   17d70:	mov	r7, #0
   17d74:	str	r6, [sp, #4]
   17d78:	str	r0, [sp, #256]	; 0x100
   17d7c:	ldr	r3, [r8]
   17d80:	ldr	r1, [sp, #260]	; 0x104
   17d84:	add	r9, sp, #408	; 0x198
   17d88:	mov	r2, #256	; 0x100
   17d8c:	mov	r0, r9
   17d90:	bl	18b8 <fread@plt>
   17d94:	mov	r6, r0
   17d98:	add	r0, sl, r5, lsl #2
   17d9c:	mov	r1, r9
   17da0:	mov	r2, #1024	; 0x400
   17da4:	bl	181c <memcpy@plt>
   17da8:	ldr	r0, [sp, #256]	; 0x100
   17dac:	add	r5, r5, #256	; 0x100
   17db0:	add	r7, r6, r7
   17db4:	sub	r4, r4, #1024	; 0x400
   17db8:	cmp	r5, r0
   17dbc:	blt	17d7c <ReadUInt32Data+0x26d4>
   17dc0:	ldr	r0, [sp, #4]
   17dc4:	ldr	r9, [sp, #260]	; 0x104
   17dc8:	cmp	r5, r0
   17dcc:	bge	17e04 <ReadUInt32Data+0x275c>
   17dd0:	ldr	r3, [r8]
   17dd4:	sub	r6, r0, r5
   17dd8:	add	r0, sp, #408	; 0x198
   17ddc:	mov	r1, r9
   17de0:	mov	r2, r6
   17de4:	bl	18b8 <fread@plt>
   17de8:	add	r7, r0, r7
   17dec:	cmp	r6, #1
   17df0:	blt	17e04 <ReadUInt32Data+0x275c>
   17df4:	add	r0, sl, r5, lsl #2
   17df8:	add	r1, sp, #408	; 0x198
   17dfc:	mov	r2, r4
   17e00:	bl	181c <memcpy@plt>
   17e04:	mov	sl, r9
   17e08:	mul	r0, r7, sl
   17e0c:	sub	sp, fp, #28
   17e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e14:	str	r5, [sp, #256]	; 0x100
   17e18:	add	r0, r8, #1024	; 0x400
   17e1c:	str	r6, [sp, #4]
   17e20:	sub	r5, r6, #256	; 0x100
   17e24:	mov	r9, #0
   17e28:	mov	r1, #256	; 0x100
   17e2c:	add	r4, sp, #408	; 0x198
   17e30:	mov	r7, r8
   17e34:	mov	r6, #0
   17e38:	str	sl, [sp, #260]	; 0x104
   17e3c:	str	r8, [sp]
   17e40:	mov	r8, r0
   17e44:	ldr	r0, [sp, #256]	; 0x100
   17e48:	mov	sl, r1
   17e4c:	ldr	r1, [sp, #260]	; 0x104
   17e50:	mov	r2, #256	; 0x100
   17e54:	ldr	r3, [r0]
   17e58:	mov	r0, r4
   17e5c:	bl	18b8 <fread@plt>
   17e60:	mov	r1, #0
   17e64:	add	r2, r4, r1
   17e68:	add	r3, r7, r1
   17e6c:	add	r1, r1, #32
   17e70:	vld1.32	{d16-d17}, [r2]!
   17e74:	cmp	r1, #1024	; 0x400
   17e78:	vcvt.u32.f32	q8, q8
   17e7c:	vst1.32	{d16-d17}, [r3]!
   17e80:	vld1.32	{d16-d17}, [r2]
   17e84:	vcvt.u32.f32	q8, q8
   17e88:	vst1.32	{d16-d17}, [r3]
   17e8c:	bne	17e64 <ReadUInt32Data+0x27bc>
   17e90:	mov	r2, r9
   17e94:	add	r9, r9, #256	; 0x100
   17e98:	add	r6, r0, r6
   17e9c:	add	r7, r7, #1024	; 0x400
   17ea0:	add	r0, r8, #1024	; 0x400
   17ea4:	add	r1, sl, #256	; 0x100
   17ea8:	cmp	r9, r5
   17eac:	blt	17e40 <ReadUInt32Data+0x2798>
   17eb0:	ldr	r0, [sp, #4]
   17eb4:	str	r2, [sp, #252]	; 0xfc
   17eb8:	cmp	r9, r0
   17ebc:	bge	18310 <ReadUInt32Data+0x2c68>
   17ec0:	sub	r5, r0, r9
   17ec4:	ldr	r0, [sp, #256]	; 0x100
   17ec8:	ldr	r1, [sp, #260]	; 0x104
   17ecc:	add	r4, sp, #408	; 0x198
   17ed0:	mov	r2, r5
   17ed4:	ldr	r3, [r0]
   17ed8:	mov	r0, r4
   17edc:	bl	18b8 <fread@plt>
   17ee0:	mov	r7, r6
   17ee4:	add	r7, r0, r6
   17ee8:	cmp	r5, #1
   17eec:	blt	18d90 <ReadUInt32Data+0x36e8>
   17ef0:	ldr	r3, [sp]
   17ef4:	mov	r0, #0
   17ef8:	cmp	r5, #4
   17efc:	bcc	18bb0 <ReadUInt32Data+0x3508>
   17f00:	bic	r0, r5, #3
   17f04:	mov	r2, #1
   17f08:	mov	lr, r5
   17f0c:	mov	r6, r7
   17f10:	subs	r1, r0, #4
   17f14:	add	r1, r2, r1, lsr #2
   17f18:	and	ip, r1, #1
   17f1c:	beq	18b78 <ReadUInt32Data+0x34d0>
   17f20:	ldr	r1, [sp, #4]
   17f24:	ldr	r3, [sp, #252]	; 0xfc
   17f28:	sub	r3, r1, r3
   17f2c:	sub	r3, r3, #256	; 0x100
   17f30:	bic	r3, r3, #3
   17f34:	sub	r3, r3, #4
   17f38:	add	r2, r2, r3, lsr #2
   17f3c:	mvn	r7, r3, lsr #2
   17f40:	and	r2, r2, #1
   17f44:	add	r3, r7, r2
   17f48:	mov	r2, #0
   17f4c:	mov	r7, #32
   17f50:	add	r5, r4, #16
   17f54:	vld1.32	{d16-d17}, [r4], r7
   17f58:	add	r1, r8, #16
   17f5c:	adds	r3, r3, #2
   17f60:	add	r2, r2, #8
   17f64:	vcvt.u32.f32	q8, q8
   17f68:	vst1.32	{d16-d17}, [r8], r7
   17f6c:	vld1.32	{d16-d17}, [r5]
   17f70:	vcvt.u32.f32	q8, q8
   17f74:	vst1.32	{d16-d17}, [r1]
   17f78:	bne	17f50 <ReadUInt32Data+0x28a8>
   17f7c:	b	18b7c <ReadUInt32Data+0x34d4>
   17f80:	sub	r1, r6, #256	; 0x100
   17f84:	str	sl, [sp, #260]	; 0x104
   17f88:	add	r0, r8, #1024	; 0x400
   17f8c:	mov	r9, #0
   17f90:	mov	r4, #32
   17f94:	mov	r7, r8
   17f98:	mov	sl, #0
   17f9c:	str	r5, [sp, #256]	; 0x100
   17fa0:	str	r6, [sp, #4]
   17fa4:	str	r8, [sp]
   17fa8:	str	r1, [sp, #248]	; 0xf8
   17fac:	mov	r1, #256	; 0x100
   17fb0:	mov	r8, r0
   17fb4:	ldr	r0, [sp, #256]	; 0x100
   17fb8:	str	r1, [sp, #252]	; 0xfc
   17fbc:	ldr	r1, [sp, #260]	; 0x104
   17fc0:	add	r5, sp, #408	; 0x198
   17fc4:	mov	r2, #256	; 0x100
   17fc8:	ldr	r3, [r0]
   17fcc:	mov	r0, r5
   17fd0:	bl	18b8 <fread@plt>
   17fd4:	mov	r1, #0
   17fd8:	mov	r3, r5
   17fdc:	mov	r2, r5
   17fe0:	vld1.64	{d16-d17}, [r2], r4
   17fe4:	add	r3, r3, #16
   17fe8:	vcvt.u32.f64	s0, d16
   17fec:	vmov	r5, s0
   17ff0:	vcvt.u32.f64	s0, d17
   17ff4:	vmov.32	d16[0], r5
   17ff8:	vmov	r6, s0
   17ffc:	add	r5, r7, r1
   18000:	add	r1, r1, #16
   18004:	cmp	r1, #1024	; 0x400
   18008:	vmov.32	d16[1], r6
   1800c:	vst1.32	{d16}, [r5]!
   18010:	vld1.64	{d16-d17}, [r3]
   18014:	vcvt.u32.f64	s0, d16
   18018:	vcvt.u32.f64	s2, d17
   1801c:	vmov	r3, s0
   18020:	vmov.32	d16[0], r3
   18024:	vmov	r3, s2
   18028:	vmov.32	d16[1], r3
   1802c:	mov	r3, r2
   18030:	vstr	d16, [r5]
   18034:	bne	17fe0 <ReadUInt32Data+0x2938>
   18038:	ldr	r6, [sp, #252]	; 0xfc
   1803c:	ldr	r3, [sp, #248]	; 0xf8
   18040:	mov	r2, r9
   18044:	add	r9, r9, #256	; 0x100
   18048:	add	sl, r0, sl
   1804c:	add	r7, r7, #1024	; 0x400
   18050:	add	r0, r8, #1024	; 0x400
   18054:	add	r1, r6, #256	; 0x100
   18058:	cmp	r9, r3
   1805c:	blt	17fb0 <ReadUInt32Data+0x2908>
   18060:	ldr	r0, [sp, #4]
   18064:	str	r2, [sp, #248]	; 0xf8
   18068:	cmp	r9, r0
   1806c:	bge	1869c <ReadUInt32Data+0x2ff4>
   18070:	sub	r5, r0, r9
   18074:	ldr	r0, [sp, #256]	; 0x100
   18078:	ldr	r1, [sp, #260]	; 0x104
   1807c:	add	r4, sp, #408	; 0x198
   18080:	mov	r2, r5
   18084:	ldr	r3, [r0]
   18088:	mov	r0, r4
   1808c:	bl	18b8 <fread@plt>
   18090:	mov	r7, sl
   18094:	add	r7, r0, sl
   18098:	cmp	r5, #1
   1809c:	blt	18d90 <ReadUInt32Data+0x36e8>
   180a0:	ldr	sl, [sp, #260]	; 0x104
   180a4:	ldr	r3, [sp, #4]
   180a8:	mov	lr, #0
   180ac:	beq	18c50 <ReadUInt32Data+0x35a8>
   180b0:	bic	lr, r5, #1
   180b4:	mov	r1, #1
   180b8:	mov	ip, r5
   180bc:	mov	sl, r7
   180c0:	subs	r2, lr, #2
   180c4:	add	r2, r1, r2, lsr #1
   180c8:	and	r0, r2, #1
   180cc:	str	r0, [sp, #256]	; 0x100
   180d0:	beq	18bf4 <ReadUInt32Data+0x354c>
   180d4:	ldr	r0, [sp, #248]	; 0xf8
   180d8:	mov	r7, #32
   180dc:	mov	r5, #16
   180e0:	mov	r6, r4
   180e4:	sub	r2, r3, r0
   180e8:	sub	r2, r2, #256	; 0x100
   180ec:	bic	r2, r2, #1
   180f0:	sub	r2, r2, #2
   180f4:	add	r1, r1, r2, lsr #1
   180f8:	mvn	r3, r2, lsr #1
   180fc:	mov	r2, #0
   18100:	and	r1, r1, #1
   18104:	add	r3, r3, r1
   18108:	mov	r1, r8
   1810c:	vld1.64	{d16-d17}, [r6], r7
   18110:	adds	r3, r3, #2
   18114:	add	r2, r2, #4
   18118:	vcvt.u32.f64	s0, d16
   1811c:	vcvt.u32.f64	s2, d17
   18120:	vmov	r0, s0
   18124:	vmov.32	d16[0], r0
   18128:	vmov	r0, s2
   1812c:	vmov.32	d16[1], r0
   18130:	add	r0, r4, #16
   18134:	mov	r4, r6
   18138:	vst1.32	{d16}, [r1], r5
   1813c:	vld1.64	{d16-d17}, [r0]
   18140:	vcvt.u32.f64	s0, d16
   18144:	vcvt.u32.f64	s2, d17
   18148:	vmov	r0, s0
   1814c:	vmov.32	d16[0], r0
   18150:	vmov	r0, s2
   18154:	vmov.32	d16[1], r0
   18158:	vstr	d16, [r8, #8]
   1815c:	mov	r8, r1
   18160:	bne	1810c <ReadUInt32Data+0x2a64>
   18164:	b	18bf8 <ReadUInt32Data+0x3550>
   18168:	sub	r1, r6, #256	; 0x100
   1816c:	str	r9, [sp, #244]	; 0xf4
   18170:	str	r5, [sp, #256]	; 0x100
   18174:	str	sl, [sp, #260]	; 0x104
   18178:	add	r0, r8, #1024	; 0x400
   1817c:	mov	r9, #0
   18180:	add	r4, sp, #408	; 0x198
   18184:	mov	r7, #32
   18188:	mov	sl, r8
   1818c:	mov	r5, #0
   18190:	str	r6, [sp, #4]
   18194:	str	r8, [sp]
   18198:	str	r1, [sp, #248]	; 0xf8
   1819c:	mov	r1, #256	; 0x100
   181a0:	mov	r8, r0
   181a4:	ldr	r0, [sp, #256]	; 0x100
   181a8:	str	r1, [sp, #252]	; 0xfc
   181ac:	ldr	r1, [sp, #260]	; 0x104
   181b0:	mov	r2, #256	; 0x100
   181b4:	ldr	r3, [r0]
   181b8:	mov	r0, r4
   181bc:	bl	18b8 <fread@plt>
   181c0:	mov	r1, #0
   181c4:	mov	r2, r4
   181c8:	add	r3, r2, #16
   181cc:	vld1.64	{d16-d17}, [r2], r7
   181d0:	add	r6, sl, r1
   181d4:	add	r1, r1, #16
   181d8:	cmp	r1, #1024	; 0x400
   181dc:	vmovn.i64	d16, q8
   181e0:	vst1.32	{d16}, [r6]!
   181e4:	vld1.64	{d16-d17}, [r3]
   181e8:	vmovn.i64	d16, q8
   181ec:	vstr	d16, [r6]
   181f0:	bne	181c8 <ReadUInt32Data+0x2b20>
   181f4:	ldr	r1, [sp, #252]	; 0xfc
   181f8:	ldr	r3, [sp, #248]	; 0xf8
   181fc:	mov	r2, r9
   18200:	add	r9, r9, #256	; 0x100
   18204:	add	r5, r0, r5
   18208:	add	sl, sl, #1024	; 0x400
   1820c:	add	r0, r8, #1024	; 0x400
   18210:	add	r1, r1, #256	; 0x100
   18214:	cmp	r9, r3
   18218:	blt	181a0 <ReadUInt32Data+0x2af8>
   1821c:	ldr	r6, [sp, #4]
   18220:	str	r2, [sp, #248]	; 0xf8
   18224:	cmp	r9, r6
   18228:	bge	18318 <ReadUInt32Data+0x2c70>
   1822c:	ldr	r0, [sp, #256]	; 0x100
   18230:	ldr	sl, [sp, #260]	; 0x104
   18234:	add	r4, sp, #408	; 0x198
   18238:	sub	r2, r6, r9
   1823c:	str	r2, [sp, #240]	; 0xf0
   18240:	ldr	r3, [r0]
   18244:	mov	r0, r4
   18248:	mov	r1, sl
   1824c:	bl	18b8 <fread@plt>
   18250:	mov	r7, r5
   18254:	add	r7, r0, r5
   18258:	ldr	r0, [sp, #240]	; 0xf0
   1825c:	cmp	r0, #1
   18260:	blt	18320 <ReadUInt32Data+0x2c78>
   18264:	ldr	ip, [sp]
   18268:	ldr	r5, [sp, #256]	; 0x100
   1826c:	mov	lr, r0
   18270:	mov	r0, #0
   18274:	beq	18ce0 <ReadUInt32Data+0x3638>
   18278:	bic	r0, lr, #1
   1827c:	mov	r2, #1
   18280:	mov	ip, r7
   18284:	subs	r1, r0, #2
   18288:	add	r1, r2, r1, lsr #1
   1828c:	and	r1, r1, #1
   18290:	str	r1, [sp, #236]	; 0xec
   18294:	beq	18c94 <ReadUInt32Data+0x35ec>
   18298:	ldr	r1, [sp, #248]	; 0xf8
   1829c:	mov	r5, r8
   182a0:	sub	r3, r6, r1
   182a4:	mov	r6, #16
   182a8:	sub	r3, r3, #256	; 0x100
   182ac:	bic	r3, r3, #1
   182b0:	sub	r3, r3, #2
   182b4:	add	r2, r2, r3, lsr #1
   182b8:	mvn	r7, r3, lsr #1
   182bc:	and	r2, r2, #1
   182c0:	add	r3, r7, r2
   182c4:	mov	r2, #0
   182c8:	mov	r7, #32
   182cc:	add	r1, r4, #16
   182d0:	vld1.64	{d16-d17}, [r4], r7
   182d4:	adds	r3, r3, #2
   182d8:	add	r2, r2, #4
   182dc:	vmovn.i64	d16, q8
   182e0:	vst1.32	{d16}, [r5], r6
   182e4:	vld1.64	{d16-d17}, [r1]
   182e8:	vmovn.i64	d16, q8
   182ec:	vstr	d16, [r8, #8]
   182f0:	mov	r8, r5
   182f4:	bne	182cc <ReadUInt32Data+0x2c24>
   182f8:	b	18c98 <ReadUInt32Data+0x35f0>
   182fc:	ldr	sl, [sp, #260]	; 0x104
   18300:	ldr	r7, [sp, #252]	; 0xfc
   18304:	mul	r0, r7, sl
   18308:	sub	sp, fp, #28
   1830c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18310:	mov	r7, r6
   18314:	b	18d90 <ReadUInt32Data+0x36e8>
   18318:	ldr	sl, [sp, #260]	; 0x104
   1831c:	mov	r7, r5
   18320:	ldr	r8, [sp]
   18324:	ldr	r5, [sp, #256]	; 0x100
   18328:	ldr	r9, [sp, #244]	; 0xf4
   1832c:	cmp	r9, #13
   18330:	bne	18d94 <ReadUInt32Data+0x36ec>
   18334:	ldr	r0, [r5, #20]
   18338:	cmp	r0, #0
   1833c:	beq	18388 <ReadUInt32Data+0x2ce0>
   18340:	cmp	r6, #256	; 0x100
   18344:	bgt	1842c <ReadUInt32Data+0x2d84>
   18348:	ldr	r3, [r5]
   1834c:	add	r4, sp, #408	; 0x198
   18350:	mov	r1, sl
   18354:	mov	r2, r6
   18358:	mov	r0, r4
   1835c:	bl	18b8 <fread@plt>
   18360:	add	r7, r0, r7
   18364:	cmp	r6, #1
   18368:	blt	18d94 <ReadUInt32Data+0x36ec>
   1836c:	mov	r0, r4
   18370:	bl	1bd4 <Mat_uint64Swap>
   18374:	str	r0, [r8], #4
   18378:	add	r4, r4, #8
   1837c:	subs	r6, r6, #1
   18380:	bne	1836c <ReadUInt32Data+0x2cc4>
   18384:	b	18d94 <ReadUInt32Data+0x36ec>
   18388:	cmp	r6, #256	; 0x100
   1838c:	bgt	18514 <ReadUInt32Data+0x2e6c>
   18390:	ldr	r3, [r5]
   18394:	add	r4, sp, #408	; 0x198
   18398:	mov	r1, sl
   1839c:	mov	r2, r6
   183a0:	mov	r0, r4
   183a4:	bl	18b8 <fread@plt>
   183a8:	add	r7, r0, r7
   183ac:	cmp	r6, #1
   183b0:	blt	18d94 <ReadUInt32Data+0x36ec>
   183b4:	mov	lr, #0
   183b8:	beq	18a1c <ReadUInt32Data+0x3374>
   183bc:	bic	lr, r6, #1
   183c0:	mov	r2, #1
   183c4:	mov	r9, r6
   183c8:	str	sl, [sp, #260]	; 0x104
   183cc:	subs	r1, lr, #2
   183d0:	add	r1, r2, r1, lsr #1
   183d4:	and	ip, r1, #1
   183d8:	beq	189d8 <ReadUInt32Data+0x3330>
   183dc:	mov	r2, r8
   183e0:	mov	r8, r7
   183e4:	sub	r3, r1, ip
   183e8:	mov	r1, #0
   183ec:	mov	r7, #32
   183f0:	mov	r6, #16
   183f4:	mov	sl, r2
   183f8:	mov	r5, r2
   183fc:	add	r0, r4, #16
   18400:	vld1.64	{d16-d17}, [r4], r7
   18404:	subs	r3, r3, #2
   18408:	add	r1, r1, #4
   1840c:	vmovn.i64	d16, q8
   18410:	vst1.32	{d16}, [r5], r6
   18414:	vld1.64	{d16-d17}, [r0]
   18418:	vmovn.i64	d16, q8
   1841c:	vstr	d16, [r2, #8]
   18420:	mov	r2, r5
   18424:	bne	183fc <ReadUInt32Data+0x2d54>
   18428:	b	189e4 <ReadUInt32Data+0x333c>
   1842c:	mov	r0, r8
   18430:	sub	r0, r6, #256	; 0x100
   18434:	add	r1, r8, #1024	; 0x400
   18438:	str	r5, [sp, #256]	; 0x100
   1843c:	str	sl, [sp, #260]	; 0x104
   18440:	str	r6, [sp, #4]
   18444:	str	r0, [sp, #252]	; 0xfc
   18448:	mov	r0, #0
   1844c:	mov	sl, r0
   18450:	ldr	r0, [sp, #256]	; 0x100
   18454:	mov	r5, r1
   18458:	ldr	r1, [sp, #260]	; 0x104
   1845c:	add	r4, sp, #408	; 0x198
   18460:	mov	r2, #256	; 0x100
   18464:	mov	r9, r7
   18468:	ldr	r3, [r0]
   1846c:	mov	r0, r4
   18470:	bl	18b8 <fread@plt>
   18474:	mov	r6, r0
   18478:	mov	r7, #0
   1847c:	mov	r0, r4
   18480:	bl	1bd4 <Mat_uint64Swap>
   18484:	str	r0, [r8, r7, lsl #2]
   18488:	add	r7, r7, #1
   1848c:	add	r4, r4, #8
   18490:	cmp	r7, #256	; 0x100
   18494:	bne	1847c <ReadUInt32Data+0x2dd4>
   18498:	ldr	r2, [sp, #252]	; 0xfc
   1849c:	add	r0, sl, #256	; 0x100
   184a0:	mov	r7, r9
   184a4:	add	r7, r6, r9
   184a8:	add	r8, r8, #1024	; 0x400
   184ac:	add	r1, r5, #1024	; 0x400
   184b0:	cmp	r0, r2
   184b4:	blt	1844c <ReadUInt32Data+0x2da4>
   184b8:	ldr	r8, [sp, #4]
   184bc:	cmp	r0, r8
   184c0:	bge	18d90 <ReadUInt32Data+0x36e8>
   184c4:	sub	r6, r8, r0
   184c8:	ldr	r0, [sp, #256]	; 0x100
   184cc:	ldr	r1, [sp, #260]	; 0x104
   184d0:	add	r4, sp, #408	; 0x198
   184d4:	mov	r2, r6
   184d8:	ldr	r3, [r0]
   184dc:	mov	r0, r4
   184e0:	bl	18b8 <fread@plt>
   184e4:	add	r7, r0, r7
   184e8:	cmp	r6, #1
   184ec:	blt	18d90 <ReadUInt32Data+0x36e8>
   184f0:	sub	r0, r8, sl
   184f4:	sub	r6, r0, #256	; 0x100
   184f8:	mov	r0, r4
   184fc:	bl	1bd4 <Mat_uint64Swap>
   18500:	str	r0, [r5], #4
   18504:	add	r4, r4, #8
   18508:	subs	r6, r6, #1
   1850c:	bne	184f8 <ReadUInt32Data+0x2e50>
   18510:	b	18d90 <ReadUInt32Data+0x36e8>
   18514:	mov	r0, sl
   18518:	sub	r1, r6, #256	; 0x100
   1851c:	str	r5, [sp, #256]	; 0x100
   18520:	mov	sl, r7
   18524:	mov	r9, #0
   18528:	mov	r7, #32
   1852c:	mov	r5, r8
   18530:	str	r6, [sp, #4]
   18534:	str	r8, [sp]
   18538:	str	r0, [sp, #260]	; 0x104
   1853c:	str	r1, [sp, #252]	; 0xfc
   18540:	add	r0, r8, #1024	; 0x400
   18544:	mov	r1, #256	; 0x100
   18548:	mov	r8, r0
   1854c:	ldr	r0, [sp, #256]	; 0x100
   18550:	mov	r4, r1
   18554:	ldr	r1, [sp, #260]	; 0x104
   18558:	add	r6, sp, #408	; 0x198
   1855c:	mov	r2, #256	; 0x100
   18560:	ldr	r3, [r0]
   18564:	mov	r0, r6
   18568:	bl	18b8 <fread@plt>
   1856c:	mov	r1, #0
   18570:	mov	r2, r6
   18574:	add	r3, r2, #16
   18578:	vld1.64	{d16-d17}, [r2], r7
   1857c:	add	r6, r5, r1
   18580:	add	r1, r1, #16
   18584:	cmp	r1, #1024	; 0x400
   18588:	vmovn.i64	d16, q8
   1858c:	vst1.32	{d16}, [r6]!
   18590:	vld1.64	{d16-d17}, [r3]
   18594:	vmovn.i64	d16, q8
   18598:	vstr	d16, [r6]
   1859c:	bne	18574 <ReadUInt32Data+0x2ecc>
   185a0:	ldr	r3, [sp, #252]	; 0xfc
   185a4:	mov	r2, r9
   185a8:	add	r9, r9, #256	; 0x100
   185ac:	add	sl, r0, sl
   185b0:	add	r5, r5, #1024	; 0x400
   185b4:	add	r0, r8, #1024	; 0x400
   185b8:	add	r1, r4, #256	; 0x100
   185bc:	cmp	r9, r3
   185c0:	blt	18548 <ReadUInt32Data+0x2ea0>
   185c4:	ldr	r0, [sp, #4]
   185c8:	str	r2, [sp, #248]	; 0xf8
   185cc:	cmp	r9, r0
   185d0:	bge	1869c <ReadUInt32Data+0x2ff4>
   185d4:	sub	r2, r0, r9
   185d8:	ldr	r0, [sp, #256]	; 0x100
   185dc:	ldr	r1, [sp, #260]	; 0x104
   185e0:	add	r5, sp, #408	; 0x198
   185e4:	mov	r6, r4
   185e8:	str	r2, [sp, #244]	; 0xf4
   185ec:	ldr	r3, [r0]
   185f0:	mov	r0, r5
   185f4:	bl	18b8 <fread@plt>
   185f8:	mov	r7, sl
   185fc:	add	r7, r0, sl
   18600:	ldr	r0, [sp, #244]	; 0xf4
   18604:	cmp	r0, #1
   18608:	blt	18d90 <ReadUInt32Data+0x36e8>
   1860c:	mov	lr, r0
   18610:	ldr	r0, [sp, #4]
   18614:	mov	sl, #0
   18618:	beq	18d5c <ReadUInt32Data+0x36b4>
   1861c:	bic	sl, lr, #1
   18620:	mov	r1, #1
   18624:	str	r7, [sp, #252]	; 0xfc
   18628:	subs	r2, sl, #2
   1862c:	add	r2, r1, r2, lsr #1
   18630:	and	ip, r2, #1
   18634:	beq	18d1c <ReadUInt32Data+0x3674>
   18638:	ldr	r2, [sp, #248]	; 0xf8
   1863c:	mov	r7, #32
   18640:	sub	r2, r0, r2
   18644:	mov	r0, #16
   18648:	sub	r2, r2, #256	; 0x100
   1864c:	bic	r2, r2, #1
   18650:	sub	r2, r2, #2
   18654:	add	r1, r1, r2, lsr #1
   18658:	mvn	r3, r2, lsr #1
   1865c:	mov	r2, #0
   18660:	and	r1, r1, #1
   18664:	add	r3, r3, r1
   18668:	mov	r1, r8
   1866c:	add	r6, r5, #16
   18670:	vld1.64	{d16-d17}, [r5], r7
   18674:	adds	r3, r3, #2
   18678:	add	r2, r2, #4
   1867c:	vmovn.i64	d16, q8
   18680:	vst1.32	{d16}, [r1], r0
   18684:	vld1.64	{d16-d17}, [r6]
   18688:	vmovn.i64	d16, q8
   1868c:	vstr	d16, [r8, #8]
   18690:	mov	r8, r1
   18694:	bne	1866c <ReadUInt32Data+0x2fc4>
   18698:	b	18d20 <ReadUInt32Data+0x3678>
   1869c:	ldr	r0, [sp, #260]	; 0x104
   186a0:	mov	r7, sl
   186a4:	mov	sl, r0
   186a8:	mul	r0, r7, sl
   186ac:	sub	sp, fp, #28
   186b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186b4:	mov	r2, #0
   186b8:	ldr	r3, [sp]
   186bc:	cmp	ip, #0
   186c0:	mov	r7, lr
   186c4:	beq	186ec <ReadUInt32Data+0x3044>
   186c8:	ldr	r1, [r9, r2]
   186cc:	str	r1, [sp, #396]	; 0x18c
   186d0:	add	r1, sp, #396	; 0x18c
   186d4:	vld1.32	{d16[0]}, [r1 :32]
   186d8:	add	r1, r2, r6
   186dc:	add	r1, r3, r1, lsl #2
   186e0:	vmovl.s8	q8, d16
   186e4:	vmovl.s16	q8, d16
   186e8:	vst1.32	{d16-d17}, [r1]
   186ec:	cmp	r4, r0
   186f0:	beq	18d94 <ReadUInt32Data+0x36ec>
   186f4:	ldr	r3, [sp]
   186f8:	add	r2, r0, r6
   186fc:	add	r1, r9, r0
   18700:	add	r2, r3, r2, lsl #2
   18704:	ldr	r3, [sp, #4]
   18708:	sub	r0, r3, r0
   1870c:	sub	r0, r0, r6
   18710:	ldrsb	r3, [r1], #1
   18714:	subs	r0, r0, #1
   18718:	str	r3, [r2], #4
   1871c:	bne	18710 <ReadUInt32Data+0x3068>
   18720:	b	18d94 <ReadUInt32Data+0x36ec>
   18724:	mov	r2, #0
   18728:	ldr	r3, [sp]
   1872c:	cmp	ip, #0
   18730:	mov	r7, lr
   18734:	beq	1875c <ReadUInt32Data+0x30b4>
   18738:	ldr	r1, [r9, r2]
   1873c:	str	r1, [sp, #404]	; 0x194
   18740:	add	r1, sp, #404	; 0x194
   18744:	vld1.32	{d16[0]}, [r1 :32]
   18748:	add	r1, r2, r6
   1874c:	add	r1, r3, r1, lsl #2
   18750:	vmovl.u8	q8, d16
   18754:	vmovl.u16	q8, d16
   18758:	vst1.32	{d16-d17}, [r1]
   1875c:	cmp	r4, r0
   18760:	beq	18d94 <ReadUInt32Data+0x36ec>
   18764:	ldr	r3, [sp]
   18768:	add	r2, r0, r6
   1876c:	add	r1, r9, r0
   18770:	add	r2, r3, r2, lsl #2
   18774:	ldr	r3, [sp, #4]
   18778:	sub	r0, r3, r0
   1877c:	sub	r0, r0, r6
   18780:	ldrb	r3, [r1], #1
   18784:	subs	r0, r0, #1
   18788:	str	r3, [r2], #4
   1878c:	bne	18780 <ReadUInt32Data+0x30d8>
   18790:	b	18d94 <ReadUInt32Data+0x36ec>
   18794:	mov	r1, #0
   18798:	ldr	r8, [sp]
   1879c:	cmp	ip, #0
   187a0:	beq	187d0 <ReadUInt32Data+0x3128>
   187a4:	add	r0, sp, #408	; 0x198
   187a8:	ldr	r2, [r0, r1, lsl #1]
   187ac:	add	r0, r0, r1, lsl #1
   187b0:	str	r2, [sp, #264]	; 0x108
   187b4:	ldr	r0, [r0, #4]
   187b8:	str	r0, [sp, #268]	; 0x10c
   187bc:	add	r0, sp, #264	; 0x108
   187c0:	vld1.16	{d16}, [r0 :64]
   187c4:	add	r0, r8, r1, lsl #2
   187c8:	vmovl.s16	q8, d16
   187cc:	vst1.32	{d16-d17}, [r0]
   187d0:	mov	r6, sl
   187d4:	cmp	lr, sl
   187d8:	ldr	r7, [sp, #252]	; 0xfc
   187dc:	ldr	sl, [sp, #260]	; 0x104
   187e0:	beq	18d94 <ReadUInt32Data+0x36ec>
   187e4:	add	r0, sp, #408	; 0x198
   187e8:	add	r2, r8, lr, lsl #2
   187ec:	add	r1, r0, lr, lsl #1
   187f0:	sub	r0, r6, lr
   187f4:	ldrsh	r3, [r1], #2
   187f8:	subs	r0, r0, #1
   187fc:	str	r3, [r2], #4
   18800:	bne	187f4 <ReadUInt32Data+0x314c>
   18804:	b	18d94 <ReadUInt32Data+0x36ec>
   18808:	mov	r1, #0
   1880c:	ldr	r8, [sp]
   18810:	cmp	ip, #0
   18814:	beq	18844 <ReadUInt32Data+0x319c>
   18818:	add	r0, sp, #408	; 0x198
   1881c:	ldr	r2, [r0, r1, lsl #1]
   18820:	add	r0, r0, r1, lsl #1
   18824:	str	r2, [sp, #328]	; 0x148
   18828:	ldr	r0, [r0, #4]
   1882c:	str	r0, [sp, #332]	; 0x14c
   18830:	add	r0, sp, #328	; 0x148
   18834:	vld1.16	{d16}, [r0 :64]
   18838:	add	r0, r8, r1, lsl #2
   1883c:	vmovl.u16	q8, d16
   18840:	vst1.32	{d16-d17}, [r0]
   18844:	mov	r6, sl
   18848:	cmp	lr, sl
   1884c:	ldr	r7, [sp, #252]	; 0xfc
   18850:	ldr	sl, [sp, #260]	; 0x104
   18854:	beq	18d94 <ReadUInt32Data+0x36ec>
   18858:	add	r0, sp, #408	; 0x198
   1885c:	add	r2, r8, lr, lsl #2
   18860:	add	r1, r0, lr, lsl #1
   18864:	sub	r0, r6, lr
   18868:	ldrh	r3, [r1], #2
   1886c:	subs	r0, r0, #1
   18870:	str	r3, [r2], #4
   18874:	bne	18868 <ReadUInt32Data+0x31c0>
   18878:	b	18d94 <ReadUInt32Data+0x36ec>
   1887c:	mov	r1, #0
   18880:	cmp	ip, #0
   18884:	mov	r7, lr
   18888:	beq	188a4 <ReadUInt32Data+0x31fc>
   1888c:	add	r2, sp, #408	; 0x198
   18890:	add	r2, r2, r1, lsl #2
   18894:	add	r1, r9, r1, lsl #2
   18898:	vld1.32	{d16-d17}, [r2]
   1889c:	vcvt.u32.f32	q8, q8
   188a0:	vst1.32	{d16-d17}, [r1]
   188a4:	mov	r6, r8
   188a8:	cmp	r0, r8
   188ac:	mov	r8, r9
   188b0:	beq	18d94 <ReadUInt32Data+0x36ec>
   188b4:	add	r1, sp, #408	; 0x198
   188b8:	add	r2, r8, r0, lsl #2
   188bc:	add	r1, r1, r0, lsl #2
   188c0:	sub	r0, r6, r0
   188c4:	vldr	s0, [r1]
   188c8:	add	r1, r1, #4
   188cc:	subs	r0, r0, #1
   188d0:	vcvt.u32.f32	s0, s0
   188d4:	vmov	r3, s0
   188d8:	str	r3, [r2], #4
   188dc:	bne	188c4 <ReadUInt32Data+0x321c>
   188e0:	b	18d94 <ReadUInt32Data+0x36ec>
   188e4:	mov	r1, #0
   188e8:	ldr	r8, [sp]
   188ec:	cmp	ip, #0
   188f0:	beq	18920 <ReadUInt32Data+0x3278>
   188f4:	add	r2, sp, #408	; 0x198
   188f8:	add	r2, r2, r1, lsl #3
   188fc:	vld1.64	{d16-d17}, [r2]
   18900:	vcvt.u32.f64	s0, d16
   18904:	vmov	r2, s0
   18908:	vcvt.u32.f64	s0, d17
   1890c:	vmov.32	d16[0], r2
   18910:	add	r2, r8, r1, lsl #2
   18914:	vmov	r1, s0
   18918:	vmov.32	d16[1], r1
   1891c:	vstr	d16, [r2]
   18920:	ldr	r6, [sp, #4]
   18924:	cmp	lr, r6
   18928:	beq	18958 <ReadUInt32Data+0x32b0>
   1892c:	add	r1, sp, #408	; 0x198
   18930:	sub	r2, r6, lr
   18934:	add	r7, r1, lr, lsl #3
   18938:	add	r1, r8, lr, lsl #2
   1893c:	vldr	d16, [r7]
   18940:	add	r7, r7, #8
   18944:	subs	r2, r2, #1
   18948:	vcvt.u32.f64	s0, d16
   1894c:	vmov	r3, s0
   18950:	str	r3, [r1], #4
   18954:	bne	1893c <ReadUInt32Data+0x3294>
   18958:	mov	r7, r0
   1895c:	mul	r0, r7, sl
   18960:	sub	sp, fp, #28
   18964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18968:	mov	sl, r8
   1896c:	mov	r8, r7
   18970:	mov	r1, #0
   18974:	mov	r7, r8
   18978:	cmp	ip, #0
   1897c:	mov	r8, sl
   18980:	mov	r5, r9
   18984:	beq	189a0 <ReadUInt32Data+0x32f8>
   18988:	add	r0, sp, #408	; 0x198
   1898c:	add	r0, r0, r1, lsl #3
   18990:	vld1.64	{d16-d17}, [r0]
   18994:	add	r0, r8, r1, lsl #2
   18998:	vmovn.i64	d16, q8
   1899c:	vstr	d16, [r0]
   189a0:	ldr	r6, [sp, #4]
   189a4:	ldr	sl, [sp, #260]	; 0x104
   189a8:	ldr	r9, [sp, #244]	; 0xf4
   189ac:	cmp	lr, r6
   189b0:	beq	1832c <ReadUInt32Data+0x2c84>
   189b4:	add	r0, sp, #408	; 0x198
   189b8:	add	r2, r8, lr, lsl #2
   189bc:	add	r1, r0, lr, lsl #3
   189c0:	sub	r0, r6, lr
   189c4:	ldr	r3, [r1], #8
   189c8:	subs	r0, r0, #1
   189cc:	str	r3, [r2], #4
   189d0:	bne	189c4 <ReadUInt32Data+0x331c>
   189d4:	b	1832c <ReadUInt32Data+0x2c84>
   189d8:	mov	sl, r8
   189dc:	mov	r8, r7
   189e0:	mov	r1, #0
   189e4:	mov	r7, r8
   189e8:	cmp	ip, #0
   189ec:	mov	r8, sl
   189f0:	beq	18a0c <ReadUInt32Data+0x3364>
   189f4:	add	r0, sp, #408	; 0x198
   189f8:	add	r0, r0, r1, lsl #3
   189fc:	vld1.64	{d16-d17}, [r0]
   18a00:	add	r0, r8, r1, lsl #2
   18a04:	vmovn.i64	d16, q8
   18a08:	vstr	d16, [r0]
   18a0c:	ldr	sl, [sp, #260]	; 0x104
   18a10:	mov	r6, r9
   18a14:	cmp	lr, r9
   18a18:	beq	18d94 <ReadUInt32Data+0x36ec>
   18a1c:	add	r0, sp, #408	; 0x198
   18a20:	add	r2, r8, lr, lsl #2
   18a24:	add	r1, r0, lr, lsl #3
   18a28:	sub	r0, r6, lr
   18a2c:	ldr	r3, [r1], #8
   18a30:	subs	r0, r0, #1
   18a34:	str	r3, [r2], #4
   18a38:	bne	18a2c <ReadUInt32Data+0x3384>
   18a3c:	b	18d94 <ReadUInt32Data+0x36ec>
   18a40:	mov	r2, #0
   18a44:	ldr	r0, [sp, #236]	; 0xec
   18a48:	cmp	r0, #0
   18a4c:	beq	18a84 <ReadUInt32Data+0x33dc>
   18a50:	add	r0, sp, #408	; 0x198
   18a54:	ldr	r1, [r0, r2, lsl #1]
   18a58:	add	r0, r0, r2, lsl #1
   18a5c:	str	r1, [sp, #288]	; 0x120
   18a60:	ldr	r0, [r0, #4]
   18a64:	str	r0, [sp, #292]	; 0x124
   18a68:	add	r0, sp, #288	; 0x120
   18a6c:	vld1.16	{d16}, [r0 :64]
   18a70:	ldr	r1, [sp]
   18a74:	add	r0, r2, r7
   18a78:	add	r0, r1, r0, lsl #2
   18a7c:	vmovl.s16	q8, d16
   18a80:	vst1.32	{d16-d17}, [r0]
   18a84:	ldr	r0, [sp, #256]	; 0x100
   18a88:	ldr	r5, [sp, #4]
   18a8c:	ldr	r6, [sp, #244]	; 0xf4
   18a90:	cmp	r0, lr
   18a94:	beq	18acc <ReadUInt32Data+0x3424>
   18a98:	add	r0, sp, #408	; 0x198
   18a9c:	ldr	r2, [sp]
   18aa0:	add	r1, r0, lr, lsl #1
   18aa4:	ldr	r0, [sp, #248]	; 0xf8
   18aa8:	add	r0, lr, r0
   18aac:	add	r2, r2, r0, lsl #2
   18ab0:	sub	r0, r5, r6
   18ab4:	sub	r0, r0, lr
   18ab8:	sub	r0, r0, #256	; 0x100
   18abc:	ldrsh	r3, [r1], #2
   18ac0:	subs	r0, r0, #1
   18ac4:	str	r3, [r2], #4
   18ac8:	bne	18abc <ReadUInt32Data+0x3414>
   18acc:	ldr	r7, [sp, #252]	; 0xfc
   18ad0:	mul	r0, r7, sl
   18ad4:	sub	sp, fp, #28
   18ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18adc:	mov	r2, #0
   18ae0:	ldr	r0, [sp, #236]	; 0xec
   18ae4:	cmp	r0, #0
   18ae8:	beq	18b20 <ReadUInt32Data+0x3478>
   18aec:	add	r0, sp, #408	; 0x198
   18af0:	ldr	r1, [r0, r2, lsl #1]
   18af4:	add	r0, r0, r2, lsl #1
   18af8:	str	r1, [sp, #352]	; 0x160
   18afc:	ldr	r0, [r0, #4]
   18b00:	str	r0, [sp, #356]	; 0x164
   18b04:	add	r0, sp, #352	; 0x160
   18b08:	vld1.16	{d16}, [r0 :64]
   18b0c:	ldr	r1, [sp]
   18b10:	add	r0, r2, r7
   18b14:	add	r0, r1, r0, lsl #2
   18b18:	vmovl.u16	q8, d16
   18b1c:	vst1.32	{d16-d17}, [r0]
   18b20:	ldr	r0, [sp, #256]	; 0x100
   18b24:	ldr	r5, [sp, #4]
   18b28:	ldr	r6, [sp, #244]	; 0xf4
   18b2c:	cmp	r0, lr
   18b30:	beq	18b68 <ReadUInt32Data+0x34c0>
   18b34:	add	r0, sp, #408	; 0x198
   18b38:	ldr	r2, [sp]
   18b3c:	add	r1, r0, lr, lsl #1
   18b40:	ldr	r0, [sp, #248]	; 0xf8
   18b44:	add	r0, lr, r0
   18b48:	add	r2, r2, r0, lsl #2
   18b4c:	sub	r0, r5, r6
   18b50:	sub	r0, r0, lr
   18b54:	sub	r0, r0, #256	; 0x100
   18b58:	ldrh	r3, [r1], #2
   18b5c:	subs	r0, r0, #1
   18b60:	str	r3, [r2], #4
   18b64:	bne	18b58 <ReadUInt32Data+0x34b0>
   18b68:	ldr	r7, [sp, #252]	; 0xfc
   18b6c:	mul	r0, r7, sl
   18b70:	sub	sp, fp, #28
   18b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b78:	mov	r2, #0
   18b7c:	ldr	r3, [sp]
   18b80:	cmp	ip, #0
   18b84:	mov	r7, r6
   18b88:	beq	18ba8 <ReadUInt32Data+0x3500>
   18b8c:	add	r1, sp, #408	; 0x198
   18b90:	add	r1, r1, r2, lsl #2
   18b94:	vld1.32	{d16-d17}, [r1]
   18b98:	add	r1, r2, r9
   18b9c:	add	r1, r3, r1, lsl #2
   18ba0:	vcvt.u32.f32	q8, q8
   18ba4:	vst1.32	{d16-d17}, [r1]
   18ba8:	cmp	lr, r0
   18bac:	beq	18d90 <ReadUInt32Data+0x36e8>
   18bb0:	add	r2, r0, sl
   18bb4:	ldr	r6, [sp, #252]	; 0xfc
   18bb8:	add	r1, sp, #408	; 0x198
   18bbc:	add	r2, r3, r2, lsl #2
   18bc0:	ldr	r3, [sp, #4]
   18bc4:	add	r1, r1, r0, lsl #2
   18bc8:	sub	r3, r3, r6
   18bcc:	sub	r0, r3, r0
   18bd0:	sub	r0, r0, #256	; 0x100
   18bd4:	vldr	s0, [r1]
   18bd8:	add	r1, r1, #4
   18bdc:	subs	r0, r0, #1
   18be0:	vcvt.u32.f32	s0, s0
   18be4:	vmov	r3, s0
   18be8:	str	r3, [r2], #4
   18bec:	bne	18bd4 <ReadUInt32Data+0x352c>
   18bf0:	b	18d90 <ReadUInt32Data+0x36e8>
   18bf4:	mov	r2, #0
   18bf8:	ldr	r0, [sp, #256]	; 0x100
   18bfc:	ldr	r6, [sp, #252]	; 0xfc
   18c00:	mov	r7, sl
   18c04:	cmp	r0, #0
   18c08:	beq	18c40 <ReadUInt32Data+0x3598>
   18c0c:	add	r0, sp, #408	; 0x198
   18c10:	add	r0, r0, r2, lsl #3
   18c14:	vld1.64	{d16-d17}, [r0]
   18c18:	add	r0, r2, r9
   18c1c:	vcvt.u32.f64	s0, d16
   18c20:	vmov	r1, s0
   18c24:	vcvt.u32.f64	s0, d17
   18c28:	vmov.32	d16[0], r1
   18c2c:	ldr	r1, [sp]
   18c30:	add	r0, r1, r0, lsl #2
   18c34:	vmov	r1, s0
   18c38:	vmov.32	d16[1], r1
   18c3c:	vstr	d16, [r0]
   18c40:	ldr	sl, [sp, #260]	; 0x104
   18c44:	ldr	r3, [sp, #4]
   18c48:	cmp	ip, lr
   18c4c:	beq	18d94 <ReadUInt32Data+0x36ec>
   18c50:	ldr	r2, [sp]
   18c54:	add	r0, sp, #408	; 0x198
   18c58:	add	r1, r0, lr, lsl #3
   18c5c:	add	r0, lr, r6
   18c60:	add	r2, r2, r0, lsl #2
   18c64:	ldr	r0, [sp, #248]	; 0xf8
   18c68:	sub	r0, r3, r0
   18c6c:	sub	r0, r0, lr
   18c70:	sub	r0, r0, #256	; 0x100
   18c74:	vldr	d16, [r1]
   18c78:	add	r1, r1, #8
   18c7c:	subs	r0, r0, #1
   18c80:	vcvt.u32.f64	s0, d16
   18c84:	vmov	r3, s0
   18c88:	str	r3, [r2], #4
   18c8c:	bne	18c74 <ReadUInt32Data+0x35cc>
   18c90:	b	18d94 <ReadUInt32Data+0x36ec>
   18c94:	mov	r2, #0
   18c98:	ldr	r1, [sp, #236]	; 0xec
   18c9c:	mov	r7, ip
   18ca0:	ldr	ip, [sp]
   18ca4:	ldr	r5, [sp, #256]	; 0x100
   18ca8:	cmp	r1, #0
   18cac:	beq	18ccc <ReadUInt32Data+0x3624>
   18cb0:	add	r1, sp, #408	; 0x198
   18cb4:	add	r1, r1, r2, lsl #3
   18cb8:	vld1.64	{d16-d17}, [r1]
   18cbc:	add	r1, r2, r9
   18cc0:	add	r1, ip, r1, lsl #2
   18cc4:	vmovn.i64	d16, q8
   18cc8:	vstr	d16, [r1]
   18ccc:	ldr	r6, [sp, #4]
   18cd0:	cmp	lr, r0
   18cd4:	bne	18ce0 <ReadUInt32Data+0x3638>
   18cd8:	mov	r8, ip
   18cdc:	b	18328 <ReadUInt32Data+0x2c80>
   18ce0:	ldr	r2, [sp, #252]	; 0xfc
   18ce4:	ldr	r3, [sp, #248]	; 0xf8
   18ce8:	add	r1, sp, #408	; 0x198
   18cec:	mov	r8, ip
   18cf0:	add	r1, r1, r0, lsl #3
   18cf4:	add	r2, r0, r2
   18cf8:	sub	r3, r6, r3
   18cfc:	sub	r0, r3, r0
   18d00:	add	r2, ip, r2, lsl #2
   18d04:	sub	r0, r0, #256	; 0x100
   18d08:	ldr	r3, [r1], #8
   18d0c:	subs	r0, r0, #1
   18d10:	str	r3, [r2], #4
   18d14:	bne	18d08 <ReadUInt32Data+0x3660>
   18d18:	b	18328 <ReadUInt32Data+0x2c80>
   18d1c:	mov	r2, #0
   18d20:	ldr	r7, [sp, #252]	; 0xfc
   18d24:	cmp	ip, #0
   18d28:	beq	18d4c <ReadUInt32Data+0x36a4>
   18d2c:	add	r1, sp, #408	; 0x198
   18d30:	add	r1, r1, r2, lsl #3
   18d34:	vld1.64	{d16-d17}, [r1]
   18d38:	add	r1, r2, r9
   18d3c:	ldr	r2, [sp]
   18d40:	add	r1, r2, r1, lsl #2
   18d44:	vmovn.i64	d16, q8
   18d48:	vstr	d16, [r1]
   18d4c:	ldr	r0, [sp, #4]
   18d50:	cmp	lr, sl
   18d54:	mov	r6, r4
   18d58:	beq	18d90 <ReadUInt32Data+0x36e8>
   18d5c:	ldr	r3, [sp]
   18d60:	add	r2, sl, r6
   18d64:	add	r1, sp, #408	; 0x198
   18d68:	add	r1, r1, sl, lsl #3
   18d6c:	add	r2, r3, r2, lsl #2
   18d70:	ldr	r3, [sp, #248]	; 0xf8
   18d74:	sub	r3, r0, r3
   18d78:	sub	r0, r3, sl
   18d7c:	sub	r0, r0, #256	; 0x100
   18d80:	ldr	r3, [r1], #8
   18d84:	subs	r0, r0, #1
   18d88:	str	r3, [r2], #4
   18d8c:	bne	18d80 <ReadUInt32Data+0x36d8>
   18d90:	ldr	sl, [sp, #260]	; 0x104
   18d94:	mul	r0, r7, sl
   18d98:	sub	sp, fp, #28
   18d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018da0 <ReadCompressedUInt32Data>:
   18da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18da4:	add	fp, sp, #28
   18da8:	sub	sp, sp, #12
   18dac:	mov	r7, r0
   18db0:	mov	r0, #0
   18db4:	cmp	r1, #0
   18db8:	beq	18dcc <ReadCompressedUInt32Data+0x2c>
   18dbc:	cmp	r7, #0
   18dc0:	movne	r5, r2
   18dc4:	cmpne	r2, #0
   18dc8:	bne	18dd4 <ReadCompressedUInt32Data+0x34>
   18dcc:	sub	sp, fp, #28
   18dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18dd4:	ldr	sl, [fp, #8]
   18dd8:	mov	r0, r3
   18ddc:	mov	r4, r3
   18de0:	mov	r6, r1
   18de4:	bl	1924 <Mat_SizeOf@plt>
   18de8:	mov	r9, r0
   18dec:	sub	r0, r4, #1
   18df0:	cmp	r0, #12
   18df4:	bhi	192c4 <ReadCompressedUInt32Data+0x524>
   18df8:	add	r1, pc, #4
   18dfc:	ldr	r0, [r1, r0, lsl #2]
   18e00:	add	pc, r1, r0
   18e04:	.word	0x00000034
   18e08:	.word	0x0000006c
   18e0c:	.word	0x000000a4
   18e10:	.word	0x000000ec
   18e14:	.word	0x00000134
   18e18:	.word	0x0000017c
   18e1c:	.word	0x000001c4
   18e20:	.word	0x000004c0
   18e24:	.word	0x00000214
   18e28:	.word	0x000004c0
   18e2c:	.word	0x000004c0
   18e30:	.word	0x00000264
   18e34:	.word	0x000002ac
   18e38:	cmp	sl, #1
   18e3c:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18e40:	mov	r8, sp
   18e44:	mov	r4, sl
   18e48:	mov	r0, r7
   18e4c:	mov	r1, r6
   18e50:	mov	r2, r8
   18e54:	mov	r3, r9
   18e58:	bl	34ac <InflateData>
   18e5c:	ldrsb	r0, [sp]
   18e60:	subs	r4, r4, #1
   18e64:	str	r0, [r5], #4
   18e68:	bne	18e48 <ReadCompressedUInt32Data+0xa8>
   18e6c:	b	192c4 <ReadCompressedUInt32Data+0x524>
   18e70:	cmp	sl, #1
   18e74:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18e78:	mov	r8, sp
   18e7c:	mov	r4, sl
   18e80:	mov	r0, r7
   18e84:	mov	r1, r6
   18e88:	mov	r2, r8
   18e8c:	mov	r3, r9
   18e90:	bl	34ac <InflateData>
   18e94:	ldrb	r0, [sp]
   18e98:	subs	r4, r4, #1
   18e9c:	str	r0, [r5], #4
   18ea0:	bne	18e80 <ReadCompressedUInt32Data+0xe0>
   18ea4:	b	192c4 <ReadCompressedUInt32Data+0x524>
   18ea8:	ldr	r0, [r7, #20]
   18eac:	cmp	r0, #0
   18eb0:	beq	190f8 <ReadCompressedUInt32Data+0x358>
   18eb4:	cmp	sl, #1
   18eb8:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18ebc:	mov	r8, sp
   18ec0:	mov	r4, sl
   18ec4:	mov	r0, r7
   18ec8:	mov	r1, r6
   18ecc:	mov	r2, r8
   18ed0:	mov	r3, r9
   18ed4:	bl	34ac <InflateData>
   18ed8:	mov	r0, r8
   18edc:	bl	1c20 <Mat_int16Swap>
   18ee0:	str	r0, [r5], #4
   18ee4:	subs	r4, r4, #1
   18ee8:	bne	18ec4 <ReadCompressedUInt32Data+0x124>
   18eec:	b	192c4 <ReadCompressedUInt32Data+0x524>
   18ef0:	ldr	r0, [r7, #20]
   18ef4:	cmp	r0, #0
   18ef8:	beq	19130 <ReadCompressedUInt32Data+0x390>
   18efc:	cmp	sl, #1
   18f00:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18f04:	mov	r8, sp
   18f08:	mov	r4, sl
   18f0c:	mov	r0, r7
   18f10:	mov	r1, r6
   18f14:	mov	r2, r8
   18f18:	mov	r3, r9
   18f1c:	bl	34ac <InflateData>
   18f20:	mov	r0, r8
   18f24:	bl	1c34 <Mat_uint16Swap>
   18f28:	str	r0, [r5], #4
   18f2c:	subs	r4, r4, #1
   18f30:	bne	18f0c <ReadCompressedUInt32Data+0x16c>
   18f34:	b	192c4 <ReadCompressedUInt32Data+0x524>
   18f38:	ldr	r0, [r7, #20]
   18f3c:	cmp	r0, #0
   18f40:	beq	19168 <ReadCompressedUInt32Data+0x3c8>
   18f44:	cmp	sl, #1
   18f48:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18f4c:	mov	r8, sp
   18f50:	mov	r4, sl
   18f54:	mov	r0, r7
   18f58:	mov	r1, r6
   18f5c:	mov	r2, r8
   18f60:	mov	r3, r9
   18f64:	bl	34ac <InflateData>
   18f68:	mov	r0, r8
   18f6c:	bl	1bf8 <Mat_int32Swap>
   18f70:	str	r0, [r5], #4
   18f74:	subs	r4, r4, #1
   18f78:	bne	18f54 <ReadCompressedUInt32Data+0x1b4>
   18f7c:	b	192c4 <ReadCompressedUInt32Data+0x524>
   18f80:	ldr	r0, [r7, #20]
   18f84:	cmp	r0, #0
   18f88:	beq	191a0 <ReadCompressedUInt32Data+0x400>
   18f8c:	cmp	sl, #1
   18f90:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18f94:	mov	r8, sp
   18f98:	mov	r4, sl
   18f9c:	mov	r0, r7
   18fa0:	mov	r1, r6
   18fa4:	mov	r2, r8
   18fa8:	mov	r3, r9
   18fac:	bl	34ac <InflateData>
   18fb0:	mov	r0, r8
   18fb4:	bl	1c0c <Mat_uint32Swap>
   18fb8:	str	r0, [r5], #4
   18fbc:	subs	r4, r4, #1
   18fc0:	bne	18f9c <ReadCompressedUInt32Data+0x1fc>
   18fc4:	b	192c4 <ReadCompressedUInt32Data+0x524>
   18fc8:	ldr	r0, [r7, #20]
   18fcc:	cmp	r0, #0
   18fd0:	beq	191d8 <ReadCompressedUInt32Data+0x438>
   18fd4:	cmp	sl, #1
   18fd8:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   18fdc:	mov	r8, sp
   18fe0:	mov	r4, sl
   18fe4:	mov	r0, r7
   18fe8:	mov	r1, r6
   18fec:	mov	r2, r8
   18ff0:	mov	r3, r9
   18ff4:	bl	34ac <InflateData>
   18ff8:	mov	r0, r8
   18ffc:	bl	1c4c <Mat_floatSwap>
   19000:	vcvt.u32.f32	s0, s0
   19004:	subs	r4, r4, #1
   19008:	vmov	r0, s0
   1900c:	str	r0, [r5], #4
   19010:	bne	18fe4 <ReadCompressedUInt32Data+0x244>
   19014:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19018:	ldr	r0, [r7, #20]
   1901c:	cmp	r0, #0
   19020:	beq	19218 <ReadCompressedUInt32Data+0x478>
   19024:	cmp	sl, #1
   19028:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   1902c:	mov	r8, sp
   19030:	mov	r4, sl
   19034:	mov	r0, r7
   19038:	mov	r1, r6
   1903c:	mov	r2, r8
   19040:	mov	r3, r9
   19044:	bl	34ac <InflateData>
   19048:	mov	r0, r8
   1904c:	bl	1c90 <Mat_doubleSwap>
   19050:	vcvt.u32.f64	s0, d0
   19054:	subs	r4, r4, #1
   19058:	vmov	r0, s0
   1905c:	str	r0, [r5], #4
   19060:	bne	19034 <ReadCompressedUInt32Data+0x294>
   19064:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19068:	ldr	r0, [r7, #20]
   1906c:	cmp	r0, #0
   19070:	beq	19258 <ReadCompressedUInt32Data+0x4b8>
   19074:	cmp	sl, #1
   19078:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   1907c:	mov	r8, sp
   19080:	mov	r4, sl
   19084:	mov	r0, r7
   19088:	mov	r1, r6
   1908c:	mov	r2, r8
   19090:	mov	r3, r9
   19094:	bl	34ac <InflateData>
   19098:	mov	r0, r8
   1909c:	bl	1b84 <Mat_int64Swap>
   190a0:	str	r0, [r5], #4
   190a4:	subs	r4, r4, #1
   190a8:	bne	19084 <ReadCompressedUInt32Data+0x2e4>
   190ac:	b	192c4 <ReadCompressedUInt32Data+0x524>
   190b0:	ldr	r0, [r7, #20]
   190b4:	cmp	r0, #0
   190b8:	beq	19290 <ReadCompressedUInt32Data+0x4f0>
   190bc:	cmp	sl, #1
   190c0:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   190c4:	mov	r8, sp
   190c8:	mov	r4, sl
   190cc:	mov	r0, r7
   190d0:	mov	r1, r6
   190d4:	mov	r2, r8
   190d8:	mov	r3, r9
   190dc:	bl	34ac <InflateData>
   190e0:	mov	r0, r8
   190e4:	bl	1bd4 <Mat_uint64Swap>
   190e8:	str	r0, [r5], #4
   190ec:	subs	r4, r4, #1
   190f0:	bne	190cc <ReadCompressedUInt32Data+0x32c>
   190f4:	b	192c4 <ReadCompressedUInt32Data+0x524>
   190f8:	cmp	sl, #1
   190fc:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   19100:	mov	r8, sp
   19104:	mov	r4, sl
   19108:	mov	r0, r7
   1910c:	mov	r1, r6
   19110:	mov	r2, r8
   19114:	mov	r3, r9
   19118:	bl	34ac <InflateData>
   1911c:	ldrsh	r0, [sp]
   19120:	subs	r4, r4, #1
   19124:	str	r0, [r5], #4
   19128:	bne	19108 <ReadCompressedUInt32Data+0x368>
   1912c:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19130:	cmp	sl, #1
   19134:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   19138:	mov	r8, sp
   1913c:	mov	r4, sl
   19140:	mov	r0, r7
   19144:	mov	r1, r6
   19148:	mov	r2, r8
   1914c:	mov	r3, r9
   19150:	bl	34ac <InflateData>
   19154:	ldrh	r0, [sp]
   19158:	subs	r4, r4, #1
   1915c:	str	r0, [r5], #4
   19160:	bne	19140 <ReadCompressedUInt32Data+0x3a0>
   19164:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19168:	cmp	sl, #1
   1916c:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   19170:	mov	r8, sp
   19174:	mov	r4, sl
   19178:	mov	r0, r7
   1917c:	mov	r1, r6
   19180:	mov	r2, r8
   19184:	mov	r3, r9
   19188:	bl	34ac <InflateData>
   1918c:	ldr	r0, [sp]
   19190:	subs	r4, r4, #1
   19194:	str	r0, [r5], #4
   19198:	bne	19178 <ReadCompressedUInt32Data+0x3d8>
   1919c:	b	192c4 <ReadCompressedUInt32Data+0x524>
   191a0:	cmp	sl, #1
   191a4:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   191a8:	mov	r8, sp
   191ac:	mov	r4, sl
   191b0:	mov	r0, r7
   191b4:	mov	r1, r6
   191b8:	mov	r2, r8
   191bc:	mov	r3, r9
   191c0:	bl	34ac <InflateData>
   191c4:	ldr	r0, [sp]
   191c8:	subs	r4, r4, #1
   191cc:	str	r0, [r5], #4
   191d0:	bne	191b0 <ReadCompressedUInt32Data+0x410>
   191d4:	b	192c4 <ReadCompressedUInt32Data+0x524>
   191d8:	cmp	sl, #1
   191dc:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   191e0:	mov	r8, sp
   191e4:	mov	r4, sl
   191e8:	mov	r0, r7
   191ec:	mov	r1, r6
   191f0:	mov	r2, r8
   191f4:	mov	r3, r9
   191f8:	bl	34ac <InflateData>
   191fc:	vldr	s0, [sp]
   19200:	subs	r4, r4, #1
   19204:	vcvt.u32.f32	s0, s0
   19208:	vmov	r0, s0
   1920c:	str	r0, [r5], #4
   19210:	bne	191e8 <ReadCompressedUInt32Data+0x448>
   19214:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19218:	cmp	sl, #1
   1921c:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   19220:	mov	r8, sp
   19224:	mov	r4, sl
   19228:	mov	r0, r7
   1922c:	mov	r1, r6
   19230:	mov	r2, r8
   19234:	mov	r3, r9
   19238:	bl	34ac <InflateData>
   1923c:	vldr	d16, [sp]
   19240:	subs	r4, r4, #1
   19244:	vcvt.u32.f64	s0, d16
   19248:	vmov	r0, s0
   1924c:	str	r0, [r5], #4
   19250:	bne	19228 <ReadCompressedUInt32Data+0x488>
   19254:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19258:	cmp	sl, #1
   1925c:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   19260:	mov	r8, sp
   19264:	mov	r4, sl
   19268:	mov	r0, r7
   1926c:	mov	r1, r6
   19270:	mov	r2, r8
   19274:	mov	r3, r9
   19278:	bl	34ac <InflateData>
   1927c:	ldr	r0, [sp]
   19280:	subs	r4, r4, #1
   19284:	str	r0, [r5], #4
   19288:	bne	19268 <ReadCompressedUInt32Data+0x4c8>
   1928c:	b	192c4 <ReadCompressedUInt32Data+0x524>
   19290:	cmp	sl, #1
   19294:	blt	192c4 <ReadCompressedUInt32Data+0x524>
   19298:	mov	r8, sp
   1929c:	mov	r4, sl
   192a0:	mov	r0, r7
   192a4:	mov	r1, r6
   192a8:	mov	r2, r8
   192ac:	mov	r3, r9
   192b0:	bl	34ac <InflateData>
   192b4:	ldr	r0, [sp]
   192b8:	subs	r4, r4, #1
   192bc:	str	r0, [r5], #4
   192c0:	bne	192a0 <ReadCompressedUInt32Data+0x500>
   192c4:	mul	r0, r9, sl
   192c8:	sub	sp, fp, #28
   192cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000192d0 <ReadInt16Data>:
   192d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192d4:	add	fp, sp, #28
   192d8:	sub	sp, sp, #172	; 0xac
   192dc:	sub	sp, sp, #2048	; 0x800
   192e0:	mov	r8, r0
   192e4:	mov	r0, #0
   192e8:	cmp	r8, #0
   192ec:	movne	r6, r1
   192f0:	cmpne	r1, #0
   192f4:	bne	19300 <ReadInt16Data+0x30>
   192f8:	sub	sp, fp, #28
   192fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19300:	ldr	r1, [r8]
   19304:	cmp	r1, #0
   19308:	beq	192f8 <ReadInt16Data+0x28>
   1930c:	mov	r0, r2
   19310:	mov	sl, r3
   19314:	mov	r4, r2
   19318:	bl	1924 <Mat_SizeOf@plt>
   1931c:	mov	r9, r0
   19320:	sub	r0, r4, #1
   19324:	mov	r7, #0
   19328:	cmp	r0, #11
   1932c:	str	r9, [sp, #132]	; 0x84
   19330:	bhi	1b95c <ReadInt16Data+0x268c>
   19334:	add	r1, sp, #168	; 0xa8
   19338:	add	r5, r1, #8
   1933c:	add	r1, pc, #4
   19340:	ldr	r0, [r1, r0, lsl #2]
   19344:	add	pc, r1, r0
   19348:	.word	0x00000030
   1934c:	.word	0x000000d0
   19350:	.word	0x00000170
   19354:	.word	0x000001c4
   19358:	.word	0x00000218
   1935c:	.word	0x0000026c
   19360:	.word	0x000002c0
   19364:	.word	0x00002614
   19368:	.word	0x0000031c
   1936c:	.word	0x00002614
   19370:	.word	0x00002614
   19374:	.word	0x00000378
   19378:	cmp	sl, #256	; 0x100
   1937c:	str	r6, [sp]
   19380:	bgt	1972c <ReadInt16Data+0x45c>
   19384:	ldr	r3, [r8]
   19388:	add	r4, sp, #168	; 0xa8
   1938c:	mov	r1, r9
   19390:	mov	r2, sl
   19394:	mov	r0, r4
   19398:	bl	18b8 <fread@plt>
   1939c:	mov	r7, r0
   193a0:	cmp	sl, #1
   193a4:	blt	1bdd8 <ReadInt16Data+0x2b08>
   193a8:	ldr	r6, [sp]
   193ac:	mov	r0, #0
   193b0:	cmp	sl, #8
   193b4:	bcc	1b408 <ReadInt16Data+0x2138>
   193b8:	bic	r0, sl, #7
   193bc:	mov	r2, #1
   193c0:	mov	lr, r7
   193c4:	subs	r1, r0, #8
   193c8:	add	r1, r2, r1, lsr #3
   193cc:	and	ip, r1, #1
   193d0:	beq	1b3c0 <ReadInt16Data+0x20f0>
   193d4:	sub	r3, r1, ip
   193d8:	mov	r1, #0
   193dc:	mov	r7, #32
   193e0:	mov	r8, r6
   193e4:	add	r5, r4, r1
   193e8:	add	r2, r6, #16
   193ec:	subs	r3, r3, #2
   193f0:	add	r1, r1, #16
   193f4:	vld1.8	{d16}, [r5 :64]
   193f8:	add	r5, r5, #8
   193fc:	vmovl.s8	q8, d16
   19400:	vst1.16	{d16-d17}, [r6], r7
   19404:	vld1.8	{d16}, [r5 :64]
   19408:	vmovl.s8	q8, d16
   1940c:	vst1.16	{d16-d17}, [r2]
   19410:	bne	193e4 <ReadInt16Data+0x114>
   19414:	b	1b3c8 <ReadInt16Data+0x20f8>
   19418:	cmp	sl, #256	; 0x100
   1941c:	str	r6, [sp]
   19420:	bgt	19b98 <ReadInt16Data+0x8c8>
   19424:	ldr	r3, [r8]
   19428:	add	r4, sp, #168	; 0xa8
   1942c:	mov	r1, r9
   19430:	mov	r2, sl
   19434:	mov	r0, r4
   19438:	bl	18b8 <fread@plt>
   1943c:	mov	r7, r0
   19440:	cmp	sl, #1
   19444:	blt	1bdd8 <ReadInt16Data+0x2b08>
   19448:	ldr	r6, [sp]
   1944c:	mov	r0, #0
   19450:	cmp	sl, #8
   19454:	bcc	1b474 <ReadInt16Data+0x21a4>
   19458:	bic	r0, sl, #7
   1945c:	mov	r2, #1
   19460:	subs	r1, r0, #8
   19464:	add	r1, r2, r1, lsr #3
   19468:	and	ip, r1, #1
   1946c:	beq	1b428 <ReadInt16Data+0x2158>
   19470:	mov	lr, r7
   19474:	sub	r3, r1, ip
   19478:	mov	r1, #0
   1947c:	mov	r7, #32
   19480:	mov	r8, r6
   19484:	add	r5, r4, r1
   19488:	add	r2, r6, #16
   1948c:	subs	r3, r3, #2
   19490:	add	r1, r1, #16
   19494:	vld1.8	{d16}, [r5 :64]
   19498:	add	r5, r5, #8
   1949c:	vmovl.u8	q8, d16
   194a0:	vst1.16	{d16-d17}, [r6], r7
   194a4:	vld1.8	{d16}, [r5 :64]
   194a8:	vmovl.u8	q8, d16
   194ac:	vst1.16	{d16-d17}, [r2]
   194b0:	bne	19484 <ReadInt16Data+0x1b4>
   194b4:	b	1b434 <ReadInt16Data+0x2164>
   194b8:	ldr	r0, [r8, #20]
   194bc:	cmp	r0, #0
   194c0:	beq	1a004 <ReadInt16Data+0xd34>
   194c4:	cmp	sl, #256	; 0x100
   194c8:	bgt	1a43c <ReadInt16Data+0x116c>
   194cc:	ldr	r3, [r8]
   194d0:	add	r4, sp, #168	; 0xa8
   194d4:	mov	r1, r9
   194d8:	mov	r2, sl
   194dc:	mov	r0, r4
   194e0:	bl	18b8 <fread@plt>
   194e4:	mov	r7, r0
   194e8:	cmp	sl, #1
   194ec:	blt	1bdd8 <ReadInt16Data+0x2b08>
   194f0:	mov	r0, r4
   194f4:	bl	1c20 <Mat_int16Swap>
   194f8:	strh	r0, [r6], #2
   194fc:	add	r4, r4, #2
   19500:	subs	sl, sl, #1
   19504:	bne	194f0 <ReadInt16Data+0x220>
   19508:	b	1bdd8 <ReadInt16Data+0x2b08>
   1950c:	ldr	r0, [r8, #20]
   19510:	cmp	r0, #0
   19514:	beq	1a0c8 <ReadInt16Data+0xdf8>
   19518:	cmp	sl, #256	; 0x100
   1951c:	bgt	1a524 <ReadInt16Data+0x1254>
   19520:	ldr	r3, [r8]
   19524:	add	r4, sp, #168	; 0xa8
   19528:	mov	r1, r9
   1952c:	mov	r2, sl
   19530:	mov	r0, r4
   19534:	bl	18b8 <fread@plt>
   19538:	mov	r7, r0
   1953c:	cmp	sl, #1
   19540:	blt	1bdd8 <ReadInt16Data+0x2b08>
   19544:	mov	r0, r4
   19548:	bl	1c34 <Mat_uint16Swap>
   1954c:	strh	r0, [r6], #2
   19550:	add	r4, r4, #2
   19554:	subs	sl, sl, #1
   19558:	bne	19544 <ReadInt16Data+0x274>
   1955c:	b	1bdd8 <ReadInt16Data+0x2b08>
   19560:	ldr	r0, [r8, #20]
   19564:	cmp	r0, #0
   19568:	beq	1a110 <ReadInt16Data+0xe40>
   1956c:	cmp	sl, #256	; 0x100
   19570:	bgt	1a60c <ReadInt16Data+0x133c>
   19574:	ldr	r3, [r8]
   19578:	add	r4, sp, #168	; 0xa8
   1957c:	mov	r1, r9
   19580:	mov	r2, sl
   19584:	mov	r0, r4
   19588:	bl	18b8 <fread@plt>
   1958c:	mov	r7, r0
   19590:	cmp	sl, #1
   19594:	blt	1bdd8 <ReadInt16Data+0x2b08>
   19598:	mov	r0, r4
   1959c:	bl	1bf8 <Mat_int32Swap>
   195a0:	strh	r0, [r6], #2
   195a4:	add	r4, r4, #4
   195a8:	subs	sl, sl, #1
   195ac:	bne	19598 <ReadInt16Data+0x2c8>
   195b0:	b	1bdd8 <ReadInt16Data+0x2b08>
   195b4:	ldr	r0, [r8, #20]
   195b8:	cmp	r0, #0
   195bc:	beq	1a1b0 <ReadInt16Data+0xee0>
   195c0:	cmp	sl, #256	; 0x100
   195c4:	bgt	1a704 <ReadInt16Data+0x1434>
   195c8:	ldr	r3, [r8]
   195cc:	add	r4, sp, #168	; 0xa8
   195d0:	mov	r1, r9
   195d4:	mov	r2, sl
   195d8:	mov	r0, r4
   195dc:	bl	18b8 <fread@plt>
   195e0:	mov	r7, r0
   195e4:	cmp	sl, #1
   195e8:	blt	1bdd8 <ReadInt16Data+0x2b08>
   195ec:	mov	r0, r4
   195f0:	bl	1c0c <Mat_uint32Swap>
   195f4:	strh	r0, [r6], #2
   195f8:	add	r4, r4, #4
   195fc:	subs	sl, sl, #1
   19600:	bne	195ec <ReadInt16Data+0x31c>
   19604:	b	1bdd8 <ReadInt16Data+0x2b08>
   19608:	ldr	r0, [r8, #20]
   1960c:	cmp	r0, #0
   19610:	beq	1a250 <ReadInt16Data+0xf80>
   19614:	cmp	sl, #256	; 0x100
   19618:	bgt	1a7fc <ReadInt16Data+0x152c>
   1961c:	ldr	r3, [r8]
   19620:	add	r4, sp, #168	; 0xa8
   19624:	mov	r1, r9
   19628:	mov	r2, sl
   1962c:	mov	r0, r4
   19630:	bl	18b8 <fread@plt>
   19634:	mov	r7, r0
   19638:	cmp	sl, #1
   1963c:	blt	1bdd8 <ReadInt16Data+0x2b08>
   19640:	mov	r0, r4
   19644:	bl	1c4c <Mat_floatSwap>
   19648:	vcvt.s32.f32	s0, s0
   1964c:	add	r4, r4, #4
   19650:	subs	sl, sl, #1
   19654:	vmov	r0, s0
   19658:	strh	r0, [r6], #2
   1965c:	bne	19640 <ReadInt16Data+0x370>
   19660:	b	1bdd8 <ReadInt16Data+0x2b08>
   19664:	ldr	r0, [r8, #20]
   19668:	cmp	r0, #0
   1966c:	beq	1a2f8 <ReadInt16Data+0x1028>
   19670:	cmp	sl, #256	; 0x100
   19674:	bgt	1a8fc <ReadInt16Data+0x162c>
   19678:	ldr	r3, [r8]
   1967c:	add	r4, sp, #168	; 0xa8
   19680:	mov	r1, r9
   19684:	mov	r2, sl
   19688:	mov	r0, r4
   1968c:	bl	18b8 <fread@plt>
   19690:	mov	r7, r0
   19694:	cmp	sl, #1
   19698:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1969c:	mov	r0, r4
   196a0:	bl	1c90 <Mat_doubleSwap>
   196a4:	vcvt.s32.f64	s0, d0
   196a8:	add	r4, r4, #8
   196ac:	subs	sl, sl, #1
   196b0:	vmov	r0, s0
   196b4:	strh	r0, [r6], #2
   196b8:	bne	1969c <ReadInt16Data+0x3cc>
   196bc:	b	1bdd8 <ReadInt16Data+0x2b08>
   196c0:	ldr	r0, [r8, #20]
   196c4:	str	r4, [sp, #116]	; 0x74
   196c8:	cmp	r0, #0
   196cc:	beq	1a394 <ReadInt16Data+0x10c4>
   196d0:	cmp	sl, #256	; 0x100
   196d4:	bgt	1a9fc <ReadInt16Data+0x172c>
   196d8:	ldr	r3, [r8]
   196dc:	mov	r4, r6
   196e0:	add	r6, sp, #168	; 0xa8
   196e4:	mov	r1, r9
   196e8:	mov	r2, sl
   196ec:	mov	r0, r6
   196f0:	bl	18b8 <fread@plt>
   196f4:	mov	r7, r0
   196f8:	cmp	sl, #1
   196fc:	blt	1b384 <ReadInt16Data+0x20b4>
   19700:	str	r8, [sp, #128]	; 0x80
   19704:	mov	r8, r4
   19708:	mov	r5, sl
   1970c:	mov	r0, r6
   19710:	bl	1b84 <Mat_int64Swap>
   19714:	strh	r0, [r4], #2
   19718:	add	r6, r6, #8
   1971c:	subs	r5, r5, #1
   19720:	bne	1970c <ReadInt16Data+0x43c>
   19724:	mov	r6, r8
   19728:	b	1b954 <ReadInt16Data+0x2684>
   1972c:	add	r0, r5, #240	; 0xf0
   19730:	ldr	r4, [sp]
   19734:	str	sl, [sp, #4]
   19738:	mov	r6, #0
   1973c:	mov	r7, #0
   19740:	str	r0, [sp, #128]	; 0x80
   19744:	add	r0, r5, #232	; 0xe8
   19748:	str	r0, [sp, #124]	; 0x7c
   1974c:	add	r0, r5, #224	; 0xe0
   19750:	str	r0, [sp, #120]	; 0x78
   19754:	add	r0, r5, #216	; 0xd8
   19758:	str	r0, [sp, #116]	; 0x74
   1975c:	add	r0, r5, #208	; 0xd0
   19760:	str	r0, [sp, #112]	; 0x70
   19764:	add	r0, r5, #200	; 0xc8
   19768:	str	r0, [sp, #108]	; 0x6c
   1976c:	add	r0, r5, #192	; 0xc0
   19770:	str	r0, [sp, #104]	; 0x68
   19774:	add	r0, r5, #184	; 0xb8
   19778:	str	r0, [sp, #100]	; 0x64
   1977c:	add	r0, r5, #176	; 0xb0
   19780:	str	r0, [sp, #96]	; 0x60
   19784:	add	r0, r5, #168	; 0xa8
   19788:	str	r0, [sp, #92]	; 0x5c
   1978c:	add	r0, r5, #160	; 0xa0
   19790:	str	r0, [sp, #88]	; 0x58
   19794:	add	r0, r5, #152	; 0x98
   19798:	str	r0, [sp, #84]	; 0x54
   1979c:	add	r0, r5, #144	; 0x90
   197a0:	str	r0, [sp, #80]	; 0x50
   197a4:	add	r0, r5, #136	; 0x88
   197a8:	str	r0, [sp, #76]	; 0x4c
   197ac:	add	r0, r5, #128	; 0x80
   197b0:	str	r0, [sp, #72]	; 0x48
   197b4:	add	r0, r5, #120	; 0x78
   197b8:	str	r0, [sp, #68]	; 0x44
   197bc:	add	r0, r5, #112	; 0x70
   197c0:	str	r0, [sp, #64]	; 0x40
   197c4:	add	r0, r5, #104	; 0x68
   197c8:	str	r0, [sp, #60]	; 0x3c
   197cc:	add	r0, r5, #96	; 0x60
   197d0:	str	r0, [sp, #56]	; 0x38
   197d4:	add	r0, r5, #88	; 0x58
   197d8:	str	r0, [sp, #52]	; 0x34
   197dc:	add	r0, r5, #80	; 0x50
   197e0:	str	r0, [sp, #48]	; 0x30
   197e4:	add	r0, r5, #72	; 0x48
   197e8:	str	r0, [sp, #44]	; 0x2c
   197ec:	add	r0, r5, #64	; 0x40
   197f0:	str	r0, [sp, #40]	; 0x28
   197f4:	add	r0, r5, #56	; 0x38
   197f8:	str	r0, [sp, #36]	; 0x24
   197fc:	add	r0, r5, #48	; 0x30
   19800:	str	r0, [sp, #32]
   19804:	add	r0, r5, #40	; 0x28
   19808:	str	r0, [sp, #28]
   1980c:	add	r0, r5, #32
   19810:	str	r0, [sp, #24]
   19814:	add	r0, r5, #24
   19818:	str	r0, [sp, #20]
   1981c:	add	r0, r5, #16
   19820:	str	r0, [sp, #16]
   19824:	add	r0, r5, #8
   19828:	str	r0, [sp, #12]
   1982c:	sub	r0, sl, #256	; 0x100
   19830:	mov	sl, r4
   19834:	str	r0, [sp, #8]
   19838:	ldr	r3, [r8]
   1983c:	ldr	r1, [sp, #132]	; 0x84
   19840:	add	r9, sp, #168	; 0xa8
   19844:	mov	r2, #256	; 0x100
   19848:	mov	r0, r9
   1984c:	bl	18b8 <fread@plt>
   19850:	vld1.8	{d16}, [r9 :64]
   19854:	mov	r1, #512	; 0x200
   19858:	add	r7, r0, r7
   1985c:	ldr	r0, [sp, #8]
   19860:	add	r6, r6, #256	; 0x100
   19864:	cmp	r6, r0
   19868:	vmovl.s8	q8, d16
   1986c:	vst1.16	{d16-d17}, [sl], r1
   19870:	add	r1, r4, #16
   19874:	vld1.8	{d16}, [r5 :64]
   19878:	vmovl.s8	q8, d16
   1987c:	vst1.16	{d16-d17}, [r1]
   19880:	ldr	r1, [sp, #12]
   19884:	vld1.8	{d16}, [r1 :64]
   19888:	add	r1, r4, #32
   1988c:	vmovl.s8	q8, d16
   19890:	vst1.16	{d16-d17}, [r1]
   19894:	ldr	r1, [sp, #16]
   19898:	vld1.8	{d16}, [r1 :64]
   1989c:	add	r1, r4, #48	; 0x30
   198a0:	vmovl.s8	q8, d16
   198a4:	vst1.16	{d16-d17}, [r1]
   198a8:	ldr	r1, [sp, #20]
   198ac:	vld1.8	{d16}, [r1 :64]
   198b0:	add	r1, r4, #64	; 0x40
   198b4:	vmovl.s8	q8, d16
   198b8:	vst1.16	{d16-d17}, [r1]
   198bc:	ldr	r1, [sp, #24]
   198c0:	vld1.8	{d16}, [r1 :64]
   198c4:	add	r1, r4, #80	; 0x50
   198c8:	vmovl.s8	q8, d16
   198cc:	vst1.16	{d16-d17}, [r1]
   198d0:	ldr	r1, [sp, #28]
   198d4:	vld1.8	{d16}, [r1 :64]
   198d8:	add	r1, r4, #96	; 0x60
   198dc:	vmovl.s8	q8, d16
   198e0:	vst1.16	{d16-d17}, [r1]
   198e4:	ldr	r1, [sp, #32]
   198e8:	vld1.8	{d16}, [r1 :64]
   198ec:	add	r1, r4, #112	; 0x70
   198f0:	vmovl.s8	q8, d16
   198f4:	vst1.16	{d16-d17}, [r1]
   198f8:	ldr	r1, [sp, #36]	; 0x24
   198fc:	vld1.8	{d16}, [r1 :64]
   19900:	add	r1, r4, #128	; 0x80
   19904:	vmovl.s8	q8, d16
   19908:	vst1.16	{d16-d17}, [r1]
   1990c:	ldr	r1, [sp, #40]	; 0x28
   19910:	vld1.8	{d16}, [r1 :64]
   19914:	add	r1, r4, #144	; 0x90
   19918:	vmovl.s8	q8, d16
   1991c:	vst1.16	{d16-d17}, [r1]
   19920:	ldr	r1, [sp, #44]	; 0x2c
   19924:	vld1.8	{d16}, [r1 :64]
   19928:	add	r1, r4, #160	; 0xa0
   1992c:	vmovl.s8	q8, d16
   19930:	vst1.16	{d16-d17}, [r1]
   19934:	ldr	r1, [sp, #48]	; 0x30
   19938:	vld1.8	{d16}, [r1 :64]
   1993c:	add	r1, r4, #176	; 0xb0
   19940:	vmovl.s8	q8, d16
   19944:	vst1.16	{d16-d17}, [r1]
   19948:	ldr	r1, [sp, #52]	; 0x34
   1994c:	vld1.8	{d16}, [r1 :64]
   19950:	add	r1, r4, #192	; 0xc0
   19954:	vmovl.s8	q8, d16
   19958:	vst1.16	{d16-d17}, [r1]
   1995c:	ldr	r1, [sp, #56]	; 0x38
   19960:	vld1.8	{d16}, [r1 :64]
   19964:	add	r1, r4, #208	; 0xd0
   19968:	vmovl.s8	q8, d16
   1996c:	vst1.16	{d16-d17}, [r1]
   19970:	ldr	r1, [sp, #60]	; 0x3c
   19974:	vld1.8	{d16}, [r1 :64]
   19978:	add	r1, r4, #224	; 0xe0
   1997c:	vmovl.s8	q8, d16
   19980:	vst1.16	{d16-d17}, [r1]
   19984:	ldr	r1, [sp, #64]	; 0x40
   19988:	vld1.8	{d16}, [r1 :64]
   1998c:	add	r1, r4, #240	; 0xf0
   19990:	vmovl.s8	q8, d16
   19994:	vst1.16	{d16-d17}, [r1]
   19998:	ldr	r1, [sp, #68]	; 0x44
   1999c:	vld1.8	{d16}, [r1 :64]
   199a0:	add	r1, r4, #256	; 0x100
   199a4:	vmovl.s8	q8, d16
   199a8:	vst1.16	{d16-d17}, [r1]
   199ac:	ldr	r1, [sp, #72]	; 0x48
   199b0:	vld1.8	{d16}, [r1 :64]
   199b4:	add	r1, r4, #272	; 0x110
   199b8:	vmovl.s8	q8, d16
   199bc:	vst1.16	{d16-d17}, [r1]
   199c0:	ldr	r1, [sp, #76]	; 0x4c
   199c4:	vld1.8	{d16}, [r1 :64]
   199c8:	add	r1, r4, #288	; 0x120
   199cc:	vmovl.s8	q8, d16
   199d0:	vst1.16	{d16-d17}, [r1]
   199d4:	ldr	r1, [sp, #80]	; 0x50
   199d8:	vld1.8	{d16}, [r1 :64]
   199dc:	add	r1, r4, #304	; 0x130
   199e0:	vmovl.s8	q8, d16
   199e4:	vst1.16	{d16-d17}, [r1]
   199e8:	ldr	r1, [sp, #84]	; 0x54
   199ec:	vld1.8	{d16}, [r1 :64]
   199f0:	add	r1, r4, #320	; 0x140
   199f4:	vmovl.s8	q8, d16
   199f8:	vst1.16	{d16-d17}, [r1]
   199fc:	ldr	r1, [sp, #88]	; 0x58
   19a00:	vld1.8	{d16}, [r1 :64]
   19a04:	add	r1, r4, #336	; 0x150
   19a08:	vmovl.s8	q8, d16
   19a0c:	vst1.16	{d16-d17}, [r1]
   19a10:	ldr	r1, [sp, #92]	; 0x5c
   19a14:	vld1.8	{d16}, [r1 :64]
   19a18:	add	r1, r4, #352	; 0x160
   19a1c:	vmovl.s8	q8, d16
   19a20:	vst1.16	{d16-d17}, [r1]
   19a24:	ldr	r1, [sp, #96]	; 0x60
   19a28:	vld1.8	{d16}, [r1 :64]
   19a2c:	add	r1, r4, #368	; 0x170
   19a30:	vmovl.s8	q8, d16
   19a34:	vst1.16	{d16-d17}, [r1]
   19a38:	ldr	r1, [sp, #100]	; 0x64
   19a3c:	vld1.8	{d16}, [r1 :64]
   19a40:	add	r1, r4, #384	; 0x180
   19a44:	vmovl.s8	q8, d16
   19a48:	vst1.16	{d16-d17}, [r1]
   19a4c:	ldr	r1, [sp, #104]	; 0x68
   19a50:	vld1.8	{d16}, [r1 :64]
   19a54:	add	r1, r4, #400	; 0x190
   19a58:	vmovl.s8	q8, d16
   19a5c:	vst1.16	{d16-d17}, [r1]
   19a60:	ldr	r1, [sp, #108]	; 0x6c
   19a64:	vld1.8	{d16}, [r1 :64]
   19a68:	add	r1, r4, #416	; 0x1a0
   19a6c:	vmovl.s8	q8, d16
   19a70:	vst1.16	{d16-d17}, [r1]
   19a74:	ldr	r1, [sp, #112]	; 0x70
   19a78:	vld1.8	{d16}, [r1 :64]
   19a7c:	add	r1, r4, #432	; 0x1b0
   19a80:	vmovl.s8	q8, d16
   19a84:	vst1.16	{d16-d17}, [r1]
   19a88:	ldr	r1, [sp, #116]	; 0x74
   19a8c:	vld1.8	{d16}, [r1 :64]
   19a90:	add	r1, r4, #448	; 0x1c0
   19a94:	vmovl.s8	q8, d16
   19a98:	vst1.16	{d16-d17}, [r1]
   19a9c:	ldr	r1, [sp, #120]	; 0x78
   19aa0:	vld1.8	{d16}, [r1 :64]
   19aa4:	add	r1, r4, #464	; 0x1d0
   19aa8:	vmovl.s8	q8, d16
   19aac:	vst1.16	{d16-d17}, [r1]
   19ab0:	ldr	r1, [sp, #124]	; 0x7c
   19ab4:	vld1.8	{d16}, [r1 :64]
   19ab8:	add	r1, r4, #480	; 0x1e0
   19abc:	vmovl.s8	q8, d16
   19ac0:	vst1.16	{d16-d17}, [r1]
   19ac4:	ldr	r1, [sp, #128]	; 0x80
   19ac8:	vld1.8	{d16}, [r1 :64]
   19acc:	add	r1, r4, #496	; 0x1f0
   19ad0:	mov	r4, sl
   19ad4:	vmovl.s8	q8, d16
   19ad8:	vst1.16	{d16-d17}, [r1]
   19adc:	blt	19838 <ReadInt16Data+0x568>
   19ae0:	ldr	r0, [sp, #4]
   19ae4:	ldr	r9, [sp, #132]	; 0x84
   19ae8:	cmp	r6, r0
   19aec:	bge	1bdd8 <ReadInt16Data+0x2b08>
   19af0:	ldr	r3, [r8]
   19af4:	mov	r1, r9
   19af8:	sub	r9, r0, r6
   19afc:	add	r4, sp, #168	; 0xa8
   19b00:	mov	r0, r4
   19b04:	mov	r2, r9
   19b08:	mov	r8, r1
   19b0c:	bl	18b8 <fread@plt>
   19b10:	add	r7, r0, r7
   19b14:	cmp	r9, #1
   19b18:	blt	1b530 <ReadInt16Data+0x2260>
   19b1c:	mov	r0, #0
   19b20:	cmp	r9, #8
   19b24:	bcc	1b504 <ReadInt16Data+0x2234>
   19b28:	bic	r0, r9, #7
   19b2c:	mov	r1, #1
   19b30:	mov	lr, r7
   19b34:	subs	r2, r0, #8
   19b38:	add	r2, r1, r2, lsr #3
   19b3c:	and	ip, r2, #1
   19b40:	beq	1b4bc <ReadInt16Data+0x21ec>
   19b44:	bic	r3, r9, #7
   19b48:	sub	r3, r3, #8
   19b4c:	add	r1, r1, r3, lsr #3
   19b50:	mvn	r7, r3, lsr #3
   19b54:	and	r1, r1, #1
   19b58:	add	r3, r7, r1
   19b5c:	mov	r1, #0
   19b60:	mov	r7, #32
   19b64:	add	r5, r4, r1
   19b68:	add	r2, sl, #16
   19b6c:	adds	r3, r3, #2
   19b70:	add	r1, r1, #16
   19b74:	vld1.8	{d16}, [r5 :64]
   19b78:	add	r5, r5, #8
   19b7c:	vmovl.s8	q8, d16
   19b80:	vst1.16	{d16-d17}, [sl], r7
   19b84:	vld1.8	{d16}, [r5 :64]
   19b88:	vmovl.s8	q8, d16
   19b8c:	vst1.16	{d16-d17}, [r2]
   19b90:	bne	19b64 <ReadInt16Data+0x894>
   19b94:	b	1b4c0 <ReadInt16Data+0x21f0>
   19b98:	add	r0, r5, #240	; 0xf0
   19b9c:	ldr	r4, [sp]
   19ba0:	str	sl, [sp, #4]
   19ba4:	mov	r6, #0
   19ba8:	mov	r7, #0
   19bac:	str	r0, [sp, #128]	; 0x80
   19bb0:	add	r0, r5, #232	; 0xe8
   19bb4:	str	r0, [sp, #124]	; 0x7c
   19bb8:	add	r0, r5, #224	; 0xe0
   19bbc:	str	r0, [sp, #120]	; 0x78
   19bc0:	add	r0, r5, #216	; 0xd8
   19bc4:	str	r0, [sp, #116]	; 0x74
   19bc8:	add	r0, r5, #208	; 0xd0
   19bcc:	str	r0, [sp, #112]	; 0x70
   19bd0:	add	r0, r5, #200	; 0xc8
   19bd4:	str	r0, [sp, #108]	; 0x6c
   19bd8:	add	r0, r5, #192	; 0xc0
   19bdc:	str	r0, [sp, #104]	; 0x68
   19be0:	add	r0, r5, #184	; 0xb8
   19be4:	str	r0, [sp, #100]	; 0x64
   19be8:	add	r0, r5, #176	; 0xb0
   19bec:	str	r0, [sp, #96]	; 0x60
   19bf0:	add	r0, r5, #168	; 0xa8
   19bf4:	str	r0, [sp, #92]	; 0x5c
   19bf8:	add	r0, r5, #160	; 0xa0
   19bfc:	str	r0, [sp, #88]	; 0x58
   19c00:	add	r0, r5, #152	; 0x98
   19c04:	str	r0, [sp, #84]	; 0x54
   19c08:	add	r0, r5, #144	; 0x90
   19c0c:	str	r0, [sp, #80]	; 0x50
   19c10:	add	r0, r5, #136	; 0x88
   19c14:	str	r0, [sp, #76]	; 0x4c
   19c18:	add	r0, r5, #128	; 0x80
   19c1c:	str	r0, [sp, #72]	; 0x48
   19c20:	add	r0, r5, #120	; 0x78
   19c24:	str	r0, [sp, #68]	; 0x44
   19c28:	add	r0, r5, #112	; 0x70
   19c2c:	str	r0, [sp, #64]	; 0x40
   19c30:	add	r0, r5, #104	; 0x68
   19c34:	str	r0, [sp, #60]	; 0x3c
   19c38:	add	r0, r5, #96	; 0x60
   19c3c:	str	r0, [sp, #56]	; 0x38
   19c40:	add	r0, r5, #88	; 0x58
   19c44:	str	r0, [sp, #52]	; 0x34
   19c48:	add	r0, r5, #80	; 0x50
   19c4c:	str	r0, [sp, #48]	; 0x30
   19c50:	add	r0, r5, #72	; 0x48
   19c54:	str	r0, [sp, #44]	; 0x2c
   19c58:	add	r0, r5, #64	; 0x40
   19c5c:	str	r0, [sp, #40]	; 0x28
   19c60:	add	r0, r5, #56	; 0x38
   19c64:	str	r0, [sp, #36]	; 0x24
   19c68:	add	r0, r5, #48	; 0x30
   19c6c:	str	r0, [sp, #32]
   19c70:	add	r0, r5, #40	; 0x28
   19c74:	str	r0, [sp, #28]
   19c78:	add	r0, r5, #32
   19c7c:	str	r0, [sp, #24]
   19c80:	add	r0, r5, #24
   19c84:	str	r0, [sp, #20]
   19c88:	add	r0, r5, #16
   19c8c:	str	r0, [sp, #16]
   19c90:	add	r0, r5, #8
   19c94:	str	r0, [sp, #12]
   19c98:	sub	r0, sl, #256	; 0x100
   19c9c:	mov	sl, r4
   19ca0:	str	r0, [sp, #8]
   19ca4:	ldr	r3, [r8]
   19ca8:	ldr	r1, [sp, #132]	; 0x84
   19cac:	add	r9, sp, #168	; 0xa8
   19cb0:	mov	r2, #256	; 0x100
   19cb4:	mov	r0, r9
   19cb8:	bl	18b8 <fread@plt>
   19cbc:	vld1.8	{d16}, [r9 :64]
   19cc0:	mov	r1, #512	; 0x200
   19cc4:	add	r7, r0, r7
   19cc8:	ldr	r0, [sp, #8]
   19ccc:	add	r6, r6, #256	; 0x100
   19cd0:	cmp	r6, r0
   19cd4:	vmovl.u8	q8, d16
   19cd8:	vst1.16	{d16-d17}, [sl], r1
   19cdc:	add	r1, r4, #16
   19ce0:	vld1.8	{d16}, [r5 :64]
   19ce4:	vmovl.u8	q8, d16
   19ce8:	vst1.16	{d16-d17}, [r1]
   19cec:	ldr	r1, [sp, #12]
   19cf0:	vld1.8	{d16}, [r1 :64]
   19cf4:	add	r1, r4, #32
   19cf8:	vmovl.u8	q8, d16
   19cfc:	vst1.16	{d16-d17}, [r1]
   19d00:	ldr	r1, [sp, #16]
   19d04:	vld1.8	{d16}, [r1 :64]
   19d08:	add	r1, r4, #48	; 0x30
   19d0c:	vmovl.u8	q8, d16
   19d10:	vst1.16	{d16-d17}, [r1]
   19d14:	ldr	r1, [sp, #20]
   19d18:	vld1.8	{d16}, [r1 :64]
   19d1c:	add	r1, r4, #64	; 0x40
   19d20:	vmovl.u8	q8, d16
   19d24:	vst1.16	{d16-d17}, [r1]
   19d28:	ldr	r1, [sp, #24]
   19d2c:	vld1.8	{d16}, [r1 :64]
   19d30:	add	r1, r4, #80	; 0x50
   19d34:	vmovl.u8	q8, d16
   19d38:	vst1.16	{d16-d17}, [r1]
   19d3c:	ldr	r1, [sp, #28]
   19d40:	vld1.8	{d16}, [r1 :64]
   19d44:	add	r1, r4, #96	; 0x60
   19d48:	vmovl.u8	q8, d16
   19d4c:	vst1.16	{d16-d17}, [r1]
   19d50:	ldr	r1, [sp, #32]
   19d54:	vld1.8	{d16}, [r1 :64]
   19d58:	add	r1, r4, #112	; 0x70
   19d5c:	vmovl.u8	q8, d16
   19d60:	vst1.16	{d16-d17}, [r1]
   19d64:	ldr	r1, [sp, #36]	; 0x24
   19d68:	vld1.8	{d16}, [r1 :64]
   19d6c:	add	r1, r4, #128	; 0x80
   19d70:	vmovl.u8	q8, d16
   19d74:	vst1.16	{d16-d17}, [r1]
   19d78:	ldr	r1, [sp, #40]	; 0x28
   19d7c:	vld1.8	{d16}, [r1 :64]
   19d80:	add	r1, r4, #144	; 0x90
   19d84:	vmovl.u8	q8, d16
   19d88:	vst1.16	{d16-d17}, [r1]
   19d8c:	ldr	r1, [sp, #44]	; 0x2c
   19d90:	vld1.8	{d16}, [r1 :64]
   19d94:	add	r1, r4, #160	; 0xa0
   19d98:	vmovl.u8	q8, d16
   19d9c:	vst1.16	{d16-d17}, [r1]
   19da0:	ldr	r1, [sp, #48]	; 0x30
   19da4:	vld1.8	{d16}, [r1 :64]
   19da8:	add	r1, r4, #176	; 0xb0
   19dac:	vmovl.u8	q8, d16
   19db0:	vst1.16	{d16-d17}, [r1]
   19db4:	ldr	r1, [sp, #52]	; 0x34
   19db8:	vld1.8	{d16}, [r1 :64]
   19dbc:	add	r1, r4, #192	; 0xc0
   19dc0:	vmovl.u8	q8, d16
   19dc4:	vst1.16	{d16-d17}, [r1]
   19dc8:	ldr	r1, [sp, #56]	; 0x38
   19dcc:	vld1.8	{d16}, [r1 :64]
   19dd0:	add	r1, r4, #208	; 0xd0
   19dd4:	vmovl.u8	q8, d16
   19dd8:	vst1.16	{d16-d17}, [r1]
   19ddc:	ldr	r1, [sp, #60]	; 0x3c
   19de0:	vld1.8	{d16}, [r1 :64]
   19de4:	add	r1, r4, #224	; 0xe0
   19de8:	vmovl.u8	q8, d16
   19dec:	vst1.16	{d16-d17}, [r1]
   19df0:	ldr	r1, [sp, #64]	; 0x40
   19df4:	vld1.8	{d16}, [r1 :64]
   19df8:	add	r1, r4, #240	; 0xf0
   19dfc:	vmovl.u8	q8, d16
   19e00:	vst1.16	{d16-d17}, [r1]
   19e04:	ldr	r1, [sp, #68]	; 0x44
   19e08:	vld1.8	{d16}, [r1 :64]
   19e0c:	add	r1, r4, #256	; 0x100
   19e10:	vmovl.u8	q8, d16
   19e14:	vst1.16	{d16-d17}, [r1]
   19e18:	ldr	r1, [sp, #72]	; 0x48
   19e1c:	vld1.8	{d16}, [r1 :64]
   19e20:	add	r1, r4, #272	; 0x110
   19e24:	vmovl.u8	q8, d16
   19e28:	vst1.16	{d16-d17}, [r1]
   19e2c:	ldr	r1, [sp, #76]	; 0x4c
   19e30:	vld1.8	{d16}, [r1 :64]
   19e34:	add	r1, r4, #288	; 0x120
   19e38:	vmovl.u8	q8, d16
   19e3c:	vst1.16	{d16-d17}, [r1]
   19e40:	ldr	r1, [sp, #80]	; 0x50
   19e44:	vld1.8	{d16}, [r1 :64]
   19e48:	add	r1, r4, #304	; 0x130
   19e4c:	vmovl.u8	q8, d16
   19e50:	vst1.16	{d16-d17}, [r1]
   19e54:	ldr	r1, [sp, #84]	; 0x54
   19e58:	vld1.8	{d16}, [r1 :64]
   19e5c:	add	r1, r4, #320	; 0x140
   19e60:	vmovl.u8	q8, d16
   19e64:	vst1.16	{d16-d17}, [r1]
   19e68:	ldr	r1, [sp, #88]	; 0x58
   19e6c:	vld1.8	{d16}, [r1 :64]
   19e70:	add	r1, r4, #336	; 0x150
   19e74:	vmovl.u8	q8, d16
   19e78:	vst1.16	{d16-d17}, [r1]
   19e7c:	ldr	r1, [sp, #92]	; 0x5c
   19e80:	vld1.8	{d16}, [r1 :64]
   19e84:	add	r1, r4, #352	; 0x160
   19e88:	vmovl.u8	q8, d16
   19e8c:	vst1.16	{d16-d17}, [r1]
   19e90:	ldr	r1, [sp, #96]	; 0x60
   19e94:	vld1.8	{d16}, [r1 :64]
   19e98:	add	r1, r4, #368	; 0x170
   19e9c:	vmovl.u8	q8, d16
   19ea0:	vst1.16	{d16-d17}, [r1]
   19ea4:	ldr	r1, [sp, #100]	; 0x64
   19ea8:	vld1.8	{d16}, [r1 :64]
   19eac:	add	r1, r4, #384	; 0x180
   19eb0:	vmovl.u8	q8, d16
   19eb4:	vst1.16	{d16-d17}, [r1]
   19eb8:	ldr	r1, [sp, #104]	; 0x68
   19ebc:	vld1.8	{d16}, [r1 :64]
   19ec0:	add	r1, r4, #400	; 0x190
   19ec4:	vmovl.u8	q8, d16
   19ec8:	vst1.16	{d16-d17}, [r1]
   19ecc:	ldr	r1, [sp, #108]	; 0x6c
   19ed0:	vld1.8	{d16}, [r1 :64]
   19ed4:	add	r1, r4, #416	; 0x1a0
   19ed8:	vmovl.u8	q8, d16
   19edc:	vst1.16	{d16-d17}, [r1]
   19ee0:	ldr	r1, [sp, #112]	; 0x70
   19ee4:	vld1.8	{d16}, [r1 :64]
   19ee8:	add	r1, r4, #432	; 0x1b0
   19eec:	vmovl.u8	q8, d16
   19ef0:	vst1.16	{d16-d17}, [r1]
   19ef4:	ldr	r1, [sp, #116]	; 0x74
   19ef8:	vld1.8	{d16}, [r1 :64]
   19efc:	add	r1, r4, #448	; 0x1c0
   19f00:	vmovl.u8	q8, d16
   19f04:	vst1.16	{d16-d17}, [r1]
   19f08:	ldr	r1, [sp, #120]	; 0x78
   19f0c:	vld1.8	{d16}, [r1 :64]
   19f10:	add	r1, r4, #464	; 0x1d0
   19f14:	vmovl.u8	q8, d16
   19f18:	vst1.16	{d16-d17}, [r1]
   19f1c:	ldr	r1, [sp, #124]	; 0x7c
   19f20:	vld1.8	{d16}, [r1 :64]
   19f24:	add	r1, r4, #480	; 0x1e0
   19f28:	vmovl.u8	q8, d16
   19f2c:	vst1.16	{d16-d17}, [r1]
   19f30:	ldr	r1, [sp, #128]	; 0x80
   19f34:	vld1.8	{d16}, [r1 :64]
   19f38:	add	r1, r4, #496	; 0x1f0
   19f3c:	mov	r4, sl
   19f40:	vmovl.u8	q8, d16
   19f44:	vst1.16	{d16-d17}, [r1]
   19f48:	blt	19ca4 <ReadInt16Data+0x9d4>
   19f4c:	ldr	r0, [sp, #4]
   19f50:	ldr	r9, [sp, #132]	; 0x84
   19f54:	cmp	r6, r0
   19f58:	bge	1bdd8 <ReadInt16Data+0x2b08>
   19f5c:	ldr	r3, [r8]
   19f60:	mov	r1, r9
   19f64:	sub	r9, r0, r6
   19f68:	add	r4, sp, #168	; 0xa8
   19f6c:	mov	r0, r4
   19f70:	mov	r2, r9
   19f74:	mov	r8, r1
   19f78:	bl	18b8 <fread@plt>
   19f7c:	add	r7, r0, r7
   19f80:	cmp	r9, #1
   19f84:	blt	1b5b4 <ReadInt16Data+0x22e4>
   19f88:	mov	r0, #0
   19f8c:	cmp	r9, #8
   19f90:	bcc	1b588 <ReadInt16Data+0x22b8>
   19f94:	bic	r0, r9, #7
   19f98:	mov	r1, #1
   19f9c:	mov	lr, r7
   19fa0:	subs	r2, r0, #8
   19fa4:	add	r2, r1, r2, lsr #3
   19fa8:	and	ip, r2, #1
   19fac:	beq	1b540 <ReadInt16Data+0x2270>
   19fb0:	bic	r3, r9, #7
   19fb4:	sub	r3, r3, #8
   19fb8:	add	r1, r1, r3, lsr #3
   19fbc:	mvn	r7, r3, lsr #3
   19fc0:	and	r1, r1, #1
   19fc4:	add	r3, r7, r1
   19fc8:	mov	r1, #0
   19fcc:	mov	r7, #32
   19fd0:	add	r5, r4, r1
   19fd4:	add	r2, sl, #16
   19fd8:	adds	r3, r3, #2
   19fdc:	add	r1, r1, #16
   19fe0:	vld1.8	{d16}, [r5 :64]
   19fe4:	add	r5, r5, #8
   19fe8:	vmovl.u8	q8, d16
   19fec:	vst1.16	{d16-d17}, [sl], r7
   19ff0:	vld1.8	{d16}, [r5 :64]
   19ff4:	vmovl.u8	q8, d16
   19ff8:	vst1.16	{d16-d17}, [r2]
   19ffc:	bne	19fd0 <ReadInt16Data+0xd00>
   1a000:	b	1b544 <ReadInt16Data+0x2274>
   1a004:	mov	r4, r6
   1a008:	cmp	sl, #256	; 0x100
   1a00c:	ble	1a0d4 <ReadInt16Data+0xe04>
   1a010:	sub	r0, sl, #256	; 0x100
   1a014:	lsl	r6, sl, #1
   1a018:	mov	r9, r4
   1a01c:	mov	r5, #0
   1a020:	mov	r7, #0
   1a024:	str	sl, [sp, #4]
   1a028:	str	r0, [sp, #128]	; 0x80
   1a02c:	ldr	r3, [r8]
   1a030:	ldr	r1, [sp, #132]	; 0x84
   1a034:	add	sl, sp, #168	; 0xa8
   1a038:	mov	r2, #256	; 0x100
   1a03c:	mov	r0, sl
   1a040:	bl	18b8 <fread@plt>
   1a044:	mov	r4, r0
   1a048:	add	r0, r9, r5, lsl #1
   1a04c:	mov	r1, sl
   1a050:	mov	r2, #512	; 0x200
   1a054:	bl	181c <memcpy@plt>
   1a058:	ldr	r0, [sp, #128]	; 0x80
   1a05c:	add	r5, r5, #256	; 0x100
   1a060:	add	r7, r4, r7
   1a064:	sub	r6, r6, #512	; 0x200
   1a068:	cmp	r5, r0
   1a06c:	blt	1a02c <ReadInt16Data+0xd5c>
   1a070:	ldr	r0, [sp, #4]
   1a074:	mov	r1, r8
   1a078:	ldr	r8, [sp, #132]	; 0x84
   1a07c:	cmp	r5, r0
   1a080:	bge	1a0b8 <ReadInt16Data+0xde8>
   1a084:	ldr	r3, [r1]
   1a088:	sub	r4, r0, r5
   1a08c:	add	r0, sp, #168	; 0xa8
   1a090:	mov	r1, r8
   1a094:	mov	r2, r4
   1a098:	bl	18b8 <fread@plt>
   1a09c:	add	r7, r0, r7
   1a0a0:	cmp	r4, #1
   1a0a4:	blt	1a0b8 <ReadInt16Data+0xde8>
   1a0a8:	add	r0, r9, r5, lsl #1
   1a0ac:	add	r1, sp, #168	; 0xa8
   1a0b0:	mov	r2, r6
   1a0b4:	bl	181c <memcpy@plt>
   1a0b8:	mov	r9, r8
   1a0bc:	mul	r0, r7, r9
   1a0c0:	sub	sp, fp, #28
   1a0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0c8:	mov	r4, r6
   1a0cc:	cmp	sl, #256	; 0x100
   1a0d0:	bgt	1aaf8 <ReadInt16Data+0x1828>
   1a0d4:	ldr	r3, [r8]
   1a0d8:	add	r0, sp, #168	; 0xa8
   1a0dc:	mov	r1, r9
   1a0e0:	mov	r2, sl
   1a0e4:	bl	18b8 <fread@plt>
   1a0e8:	mov	r7, r0
   1a0ec:	cmp	sl, #1
   1a0f0:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a0f4:	lsl	r2, sl, #1
   1a0f8:	add	r1, sp, #168	; 0xa8
   1a0fc:	mov	r0, r4
   1a100:	bl	181c <memcpy@plt>
   1a104:	mul	r0, r7, r9
   1a108:	sub	sp, fp, #28
   1a10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a110:	cmp	sl, #256	; 0x100
   1a114:	bgt	1abb0 <ReadInt16Data+0x18e0>
   1a118:	ldr	r3, [r8]
   1a11c:	add	r4, sp, #168	; 0xa8
   1a120:	mov	r1, r9
   1a124:	mov	r2, sl
   1a128:	mov	r0, r4
   1a12c:	bl	18b8 <fread@plt>
   1a130:	mov	r7, r0
   1a134:	cmp	sl, #1
   1a138:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a13c:	mov	lr, #0
   1a140:	cmp	sl, #4
   1a144:	bcc	1b600 <ReadInt16Data+0x2330>
   1a148:	bic	lr, sl, #3
   1a14c:	mov	r2, #1
   1a150:	mov	r8, r9
   1a154:	str	r7, [sp, #128]	; 0x80
   1a158:	subs	r1, lr, #4
   1a15c:	add	r1, r2, r1, lsr #2
   1a160:	and	ip, r1, #1
   1a164:	beq	1b5c4 <ReadInt16Data+0x22f4>
   1a168:	mov	r5, r6
   1a16c:	sub	r3, r1, ip
   1a170:	mov	r1, #0
   1a174:	mov	r7, #32
   1a178:	mov	r6, #16
   1a17c:	mov	r9, r5
   1a180:	add	r2, r4, #16
   1a184:	vld1.32	{d16-d17}, [r4], r7
   1a188:	add	r0, r5, #8
   1a18c:	subs	r3, r3, #2
   1a190:	add	r1, r1, #8
   1a194:	vmovn.i32	d16, q8
   1a198:	vst1.16	{d16}, [r5], r6
   1a19c:	vld1.32	{d16-d17}, [r2]
   1a1a0:	vmovn.i32	d16, q8
   1a1a4:	vst1.16	{d16}, [r0]
   1a1a8:	bne	1a180 <ReadInt16Data+0xeb0>
   1a1ac:	b	1b5cc <ReadInt16Data+0x22fc>
   1a1b0:	cmp	sl, #256	; 0x100
   1a1b4:	bgt	1ad30 <ReadInt16Data+0x1a60>
   1a1b8:	ldr	r3, [r8]
   1a1bc:	add	r4, sp, #168	; 0xa8
   1a1c0:	mov	r1, r9
   1a1c4:	mov	r2, sl
   1a1c8:	mov	r0, r4
   1a1cc:	bl	18b8 <fread@plt>
   1a1d0:	mov	r7, r0
   1a1d4:	cmp	sl, #1
   1a1d8:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a1dc:	mov	lr, #0
   1a1e0:	cmp	sl, #4
   1a1e4:	bcc	1b660 <ReadInt16Data+0x2390>
   1a1e8:	bic	lr, sl, #3
   1a1ec:	mov	r2, #1
   1a1f0:	mov	r8, r9
   1a1f4:	str	r7, [sp, #128]	; 0x80
   1a1f8:	subs	r1, lr, #4
   1a1fc:	add	r1, r2, r1, lsr #2
   1a200:	and	ip, r1, #1
   1a204:	beq	1b624 <ReadInt16Data+0x2354>
   1a208:	mov	r5, r6
   1a20c:	sub	r3, r1, ip
   1a210:	mov	r1, #0
   1a214:	mov	r7, #32
   1a218:	mov	r6, #16
   1a21c:	mov	r9, r5
   1a220:	add	r2, r4, #16
   1a224:	vld1.32	{d16-d17}, [r4], r7
   1a228:	add	r0, r5, #8
   1a22c:	subs	r3, r3, #2
   1a230:	add	r1, r1, #8
   1a234:	vmovn.i32	d16, q8
   1a238:	vst1.16	{d16}, [r5], r6
   1a23c:	vld1.32	{d16-d17}, [r2]
   1a240:	vmovn.i32	d16, q8
   1a244:	vst1.16	{d16}, [r0]
   1a248:	bne	1a220 <ReadInt16Data+0xf50>
   1a24c:	b	1b62c <ReadInt16Data+0x235c>
   1a250:	cmp	sl, #256	; 0x100
   1a254:	bgt	1aeb0 <ReadInt16Data+0x1be0>
   1a258:	ldr	r3, [r8]
   1a25c:	add	r4, sp, #168	; 0xa8
   1a260:	mov	r1, r9
   1a264:	mov	r2, sl
   1a268:	mov	r0, r4
   1a26c:	bl	18b8 <fread@plt>
   1a270:	mov	r7, r0
   1a274:	cmp	sl, #1
   1a278:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a27c:	mov	lr, #0
   1a280:	cmp	sl, #4
   1a284:	bcc	1b6c4 <ReadInt16Data+0x23f4>
   1a288:	bic	lr, sl, #3
   1a28c:	mov	r2, #1
   1a290:	mov	r8, r9
   1a294:	str	r7, [sp, #128]	; 0x80
   1a298:	subs	r1, lr, #4
   1a29c:	add	r1, r2, r1, lsr #2
   1a2a0:	and	ip, r1, #1
   1a2a4:	beq	1b684 <ReadInt16Data+0x23b4>
   1a2a8:	mov	r5, r6
   1a2ac:	sub	r3, r1, ip
   1a2b0:	mov	r1, #0
   1a2b4:	mov	r7, #32
   1a2b8:	mov	r6, #16
   1a2bc:	mov	r9, r5
   1a2c0:	add	r2, r4, #16
   1a2c4:	vld1.32	{d16-d17}, [r4], r7
   1a2c8:	add	r0, r5, #8
   1a2cc:	subs	r3, r3, #2
   1a2d0:	add	r1, r1, #8
   1a2d4:	vcvt.s32.f32	q8, q8
   1a2d8:	vmovn.i32	d16, q8
   1a2dc:	vst1.16	{d16}, [r5], r6
   1a2e0:	vld1.32	{d16-d17}, [r2]
   1a2e4:	vcvt.s32.f32	q8, q8
   1a2e8:	vmovn.i32	d16, q8
   1a2ec:	vst1.16	{d16}, [r0]
   1a2f0:	bne	1a2c0 <ReadInt16Data+0xff0>
   1a2f4:	b	1b68c <ReadInt16Data+0x23bc>
   1a2f8:	cmp	sl, #256	; 0x100
   1a2fc:	bgt	1b048 <ReadInt16Data+0x1d78>
   1a300:	ldr	r3, [r8]
   1a304:	add	r4, sp, #168	; 0xa8
   1a308:	mov	r1, r9
   1a30c:	mov	r2, sl
   1a310:	mov	r0, r4
   1a314:	bl	18b8 <fread@plt>
   1a318:	mov	r7, r0
   1a31c:	cmp	sl, #1
   1a320:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a324:	mov	r5, r6
   1a328:	mov	ip, r7
   1a32c:	and	r1, sl, #1
   1a330:	mov	r0, #0
   1a334:	beq	1a37c <ReadInt16Data+0x10ac>
   1a338:	sub	r2, sl, r1
   1a33c:	add	r3, r5, #2
   1a340:	add	r7, r4, #8
   1a344:	mov	r0, #0
   1a348:	vldr	d16, [r7, #-8]
   1a34c:	add	r0, r0, #2
   1a350:	cmp	r2, r0
   1a354:	vcvt.s32.f64	s0, d16
   1a358:	vmov	r6, s0
   1a35c:	strh	r6, [r3, #-2]
   1a360:	vldr	d16, [r7]
   1a364:	add	r7, r7, #16
   1a368:	vcvt.s32.f64	s0, d16
   1a36c:	vmov	r6, s0
   1a370:	strh	r6, [r3]
   1a374:	add	r3, r3, #4
   1a378:	bne	1a348 <ReadInt16Data+0x1078>
   1a37c:	cmp	r1, #0
   1a380:	bne	1b494 <ReadInt16Data+0x21c4>
   1a384:	mov	r7, ip
   1a388:	mul	r0, r7, r9
   1a38c:	sub	sp, fp, #28
   1a390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a394:	cmp	sl, #256	; 0x100
   1a398:	bgt	1b1c0 <ReadInt16Data+0x1ef0>
   1a39c:	ldr	r3, [r8]
   1a3a0:	add	r4, sp, #168	; 0xa8
   1a3a4:	mov	r1, r9
   1a3a8:	mov	r2, sl
   1a3ac:	mov	r0, r4
   1a3b0:	bl	18b8 <fread@plt>
   1a3b4:	mov	r7, r0
   1a3b8:	cmp	sl, #1
   1a3bc:	blt	1b958 <ReadInt16Data+0x2688>
   1a3c0:	mov	r0, #0
   1a3c4:	beq	1b734 <ReadInt16Data+0x2464>
   1a3c8:	bic	r0, sl, #1
   1a3cc:	mov	r2, #1
   1a3d0:	subs	r1, r0, #2
   1a3d4:	add	r1, r2, r1, lsr #1
   1a3d8:	and	r2, r1, #1
   1a3dc:	beq	1b6f4 <ReadInt16Data+0x2424>
   1a3e0:	mov	ip, r7
   1a3e4:	sub	r3, r1, r2
   1a3e8:	mov	r1, #0
   1a3ec:	mov	r7, #32
   1a3f0:	mov	lr, r6
   1a3f4:	mov	r5, r6
   1a3f8:	mov	r6, r4
   1a3fc:	vld1.64	{d16-d17}, [r6], r7
   1a400:	add	r4, r4, #16
   1a404:	subs	r3, r3, #2
   1a408:	add	r1, r1, #4
   1a40c:	vmovn.i64	d16, q8
   1a410:	vuzp.16	d16, d17
   1a414:	vst1.32	{d16[0]}, [r5]
   1a418:	vld1.64	{d16-d17}, [r4]
   1a41c:	add	r4, r5, #4
   1a420:	add	r5, r5, #8
   1a424:	vmovn.i64	d16, q8
   1a428:	vuzp.16	d16, d17
   1a42c:	vst1.32	{d16[0]}, [r4]
   1a430:	mov	r4, r6
   1a434:	bne	1a3fc <ReadInt16Data+0x112c>
   1a438:	b	1b700 <ReadInt16Data+0x2430>
   1a43c:	sub	r0, sl, #256	; 0x100
   1a440:	str	r8, [sp, #128]	; 0x80
   1a444:	mov	r8, r6
   1a448:	add	r1, r6, #512	; 0x200
   1a44c:	add	r6, sp, #168	; 0xa8
   1a450:	mov	r7, #0
   1a454:	str	sl, [sp, #4]
   1a458:	str	r0, [sp, #124]	; 0x7c
   1a45c:	mov	r0, #0
   1a460:	mov	r9, r0
   1a464:	ldr	r0, [sp, #128]	; 0x80
   1a468:	mov	r5, r1
   1a46c:	ldr	r1, [sp, #132]	; 0x84
   1a470:	mov	r2, #256	; 0x100
   1a474:	mov	sl, r7
   1a478:	ldr	r3, [r0]
   1a47c:	mov	r0, r6
   1a480:	bl	18b8 <fread@plt>
   1a484:	mov	r4, r0
   1a488:	mov	r7, #0
   1a48c:	add	r0, r6, r7
   1a490:	bl	1c20 <Mat_int16Swap>
   1a494:	add	r1, r8, r7
   1a498:	add	r7, r7, #2
   1a49c:	cmp	r7, #512	; 0x200
   1a4a0:	strh	r0, [r1]
   1a4a4:	bne	1a48c <ReadInt16Data+0x11bc>
   1a4a8:	ldr	r2, [sp, #124]	; 0x7c
   1a4ac:	add	r0, r9, #256	; 0x100
   1a4b0:	mov	r7, sl
   1a4b4:	add	r7, r4, sl
   1a4b8:	add	r8, r8, #512	; 0x200
   1a4bc:	add	r1, r5, #512	; 0x200
   1a4c0:	cmp	r0, r2
   1a4c4:	blt	1a460 <ReadInt16Data+0x1190>
   1a4c8:	ldr	r6, [sp, #4]
   1a4cc:	cmp	r0, r6
   1a4d0:	bge	1bcf8 <ReadInt16Data+0x2a28>
   1a4d4:	sub	r8, r6, r0
   1a4d8:	ldr	r0, [sp, #128]	; 0x80
   1a4dc:	ldr	r1, [sp, #132]	; 0x84
   1a4e0:	add	r4, sp, #168	; 0xa8
   1a4e4:	mov	r2, r8
   1a4e8:	ldr	r3, [r0]
   1a4ec:	mov	r0, r4
   1a4f0:	bl	18b8 <fread@plt>
   1a4f4:	add	r7, r0, r7
   1a4f8:	cmp	r8, #1
   1a4fc:	blt	1bcf8 <ReadInt16Data+0x2a28>
   1a500:	sub	r0, r6, r9
   1a504:	sub	r6, r0, #256	; 0x100
   1a508:	mov	r0, r4
   1a50c:	bl	1c20 <Mat_int16Swap>
   1a510:	strh	r0, [r5], #2
   1a514:	add	r4, r4, #2
   1a518:	subs	r6, r6, #1
   1a51c:	bne	1a508 <ReadInt16Data+0x1238>
   1a520:	b	1bcf8 <ReadInt16Data+0x2a28>
   1a524:	sub	r0, sl, #256	; 0x100
   1a528:	str	r8, [sp, #128]	; 0x80
   1a52c:	mov	r8, r6
   1a530:	add	r1, r6, #512	; 0x200
   1a534:	add	r6, sp, #168	; 0xa8
   1a538:	mov	r7, #0
   1a53c:	str	sl, [sp, #4]
   1a540:	str	r0, [sp, #124]	; 0x7c
   1a544:	mov	r0, #0
   1a548:	mov	r9, r0
   1a54c:	ldr	r0, [sp, #128]	; 0x80
   1a550:	mov	r5, r1
   1a554:	ldr	r1, [sp, #132]	; 0x84
   1a558:	mov	r2, #256	; 0x100
   1a55c:	mov	sl, r7
   1a560:	ldr	r3, [r0]
   1a564:	mov	r0, r6
   1a568:	bl	18b8 <fread@plt>
   1a56c:	mov	r4, r0
   1a570:	mov	r7, #0
   1a574:	add	r0, r6, r7
   1a578:	bl	1c34 <Mat_uint16Swap>
   1a57c:	add	r1, r8, r7
   1a580:	add	r7, r7, #2
   1a584:	cmp	r7, #512	; 0x200
   1a588:	strh	r0, [r1]
   1a58c:	bne	1a574 <ReadInt16Data+0x12a4>
   1a590:	ldr	r2, [sp, #124]	; 0x7c
   1a594:	add	r0, r9, #256	; 0x100
   1a598:	mov	r7, sl
   1a59c:	add	r7, r4, sl
   1a5a0:	add	r8, r8, #512	; 0x200
   1a5a4:	add	r1, r5, #512	; 0x200
   1a5a8:	cmp	r0, r2
   1a5ac:	blt	1a548 <ReadInt16Data+0x1278>
   1a5b0:	ldr	r6, [sp, #4]
   1a5b4:	cmp	r0, r6
   1a5b8:	bge	1bcf8 <ReadInt16Data+0x2a28>
   1a5bc:	sub	r8, r6, r0
   1a5c0:	ldr	r0, [sp, #128]	; 0x80
   1a5c4:	ldr	r1, [sp, #132]	; 0x84
   1a5c8:	add	r4, sp, #168	; 0xa8
   1a5cc:	mov	r2, r8
   1a5d0:	ldr	r3, [r0]
   1a5d4:	mov	r0, r4
   1a5d8:	bl	18b8 <fread@plt>
   1a5dc:	add	r7, r0, r7
   1a5e0:	cmp	r8, #1
   1a5e4:	blt	1bcf8 <ReadInt16Data+0x2a28>
   1a5e8:	sub	r0, r6, r9
   1a5ec:	sub	r6, r0, #256	; 0x100
   1a5f0:	mov	r0, r4
   1a5f4:	bl	1c34 <Mat_uint16Swap>
   1a5f8:	strh	r0, [r5], #2
   1a5fc:	add	r4, r4, #2
   1a600:	subs	r6, r6, #1
   1a604:	bne	1a5f0 <ReadInt16Data+0x1320>
   1a608:	b	1bcf8 <ReadInt16Data+0x2a28>
   1a60c:	sub	r0, sl, #256	; 0x100
   1a610:	mov	r5, r6
   1a614:	add	r1, r6, #512	; 0x200
   1a618:	mov	r7, #0
   1a61c:	str	r8, [sp, #128]	; 0x80
   1a620:	str	sl, [sp, #4]
   1a624:	str	r0, [sp, #120]	; 0x78
   1a628:	mov	r0, #0
   1a62c:	str	r0, [sp, #124]	; 0x7c
   1a630:	ldr	r0, [sp, #128]	; 0x80
   1a634:	add	r4, sp, #168	; 0xa8
   1a638:	mov	sl, r1
   1a63c:	mov	r1, r9
   1a640:	mov	r2, #256	; 0x100
   1a644:	mov	r8, r7
   1a648:	ldr	r3, [r0]
   1a64c:	mov	r0, r4
   1a650:	bl	18b8 <fread@plt>
   1a654:	mov	r6, r0
   1a658:	mov	r7, #0
   1a65c:	mov	r0, r4
   1a660:	add	r9, r5, r7
   1a664:	bl	1bf8 <Mat_int32Swap>
   1a668:	add	r7, r7, #2
   1a66c:	add	r4, r4, #4
   1a670:	strh	r0, [r9]
   1a674:	cmp	r7, #512	; 0x200
   1a678:	bne	1a65c <ReadInt16Data+0x138c>
   1a67c:	ldr	r0, [sp, #124]	; 0x7c
   1a680:	ldr	r2, [sp, #120]	; 0x78
   1a684:	ldr	r9, [sp, #132]	; 0x84
   1a688:	mov	r7, r8
   1a68c:	add	r7, r6, r8
   1a690:	add	r5, r5, #512	; 0x200
   1a694:	add	r1, sl, #512	; 0x200
   1a698:	add	r0, r0, #256	; 0x100
   1a69c:	cmp	r0, r2
   1a6a0:	blt	1a62c <ReadInt16Data+0x135c>
   1a6a4:	ldr	r6, [sp, #4]
   1a6a8:	cmp	r0, r6
   1a6ac:	bge	1bdd8 <ReadInt16Data+0x2b08>
   1a6b0:	sub	r8, r6, r0
   1a6b4:	ldr	r0, [sp, #128]	; 0x80
   1a6b8:	add	r4, sp, #168	; 0xa8
   1a6bc:	mov	r1, r9
   1a6c0:	mov	r2, r8
   1a6c4:	ldr	r3, [r0]
   1a6c8:	mov	r0, r4
   1a6cc:	bl	18b8 <fread@plt>
   1a6d0:	add	r7, r0, r7
   1a6d4:	cmp	r8, #1
   1a6d8:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a6dc:	ldr	r0, [sp, #124]	; 0x7c
   1a6e0:	sub	r0, r6, r0
   1a6e4:	sub	r6, r0, #256	; 0x100
   1a6e8:	mov	r0, r4
   1a6ec:	bl	1bf8 <Mat_int32Swap>
   1a6f0:	strh	r0, [sl], #2
   1a6f4:	add	r4, r4, #4
   1a6f8:	subs	r6, r6, #1
   1a6fc:	bne	1a6e8 <ReadInt16Data+0x1418>
   1a700:	b	1bdd8 <ReadInt16Data+0x2b08>
   1a704:	sub	r0, sl, #256	; 0x100
   1a708:	mov	r5, r6
   1a70c:	add	r1, r6, #512	; 0x200
   1a710:	mov	r7, #0
   1a714:	str	r8, [sp, #128]	; 0x80
   1a718:	str	sl, [sp, #4]
   1a71c:	str	r0, [sp, #120]	; 0x78
   1a720:	mov	r0, #0
   1a724:	str	r0, [sp, #124]	; 0x7c
   1a728:	ldr	r0, [sp, #128]	; 0x80
   1a72c:	add	r4, sp, #168	; 0xa8
   1a730:	mov	sl, r1
   1a734:	mov	r1, r9
   1a738:	mov	r2, #256	; 0x100
   1a73c:	mov	r8, r7
   1a740:	ldr	r3, [r0]
   1a744:	mov	r0, r4
   1a748:	bl	18b8 <fread@plt>
   1a74c:	mov	r6, r0
   1a750:	mov	r7, #0
   1a754:	mov	r0, r4
   1a758:	add	r9, r5, r7
   1a75c:	bl	1c0c <Mat_uint32Swap>
   1a760:	add	r7, r7, #2
   1a764:	add	r4, r4, #4
   1a768:	strh	r0, [r9]
   1a76c:	cmp	r7, #512	; 0x200
   1a770:	bne	1a754 <ReadInt16Data+0x1484>
   1a774:	ldr	r0, [sp, #124]	; 0x7c
   1a778:	ldr	r2, [sp, #120]	; 0x78
   1a77c:	ldr	r9, [sp, #132]	; 0x84
   1a780:	mov	r7, r8
   1a784:	add	r7, r6, r8
   1a788:	add	r5, r5, #512	; 0x200
   1a78c:	add	r1, sl, #512	; 0x200
   1a790:	add	r0, r0, #256	; 0x100
   1a794:	cmp	r0, r2
   1a798:	blt	1a724 <ReadInt16Data+0x1454>
   1a79c:	ldr	r6, [sp, #4]
   1a7a0:	cmp	r0, r6
   1a7a4:	bge	1bdd8 <ReadInt16Data+0x2b08>
   1a7a8:	sub	r8, r6, r0
   1a7ac:	ldr	r0, [sp, #128]	; 0x80
   1a7b0:	add	r4, sp, #168	; 0xa8
   1a7b4:	mov	r1, r9
   1a7b8:	mov	r2, r8
   1a7bc:	ldr	r3, [r0]
   1a7c0:	mov	r0, r4
   1a7c4:	bl	18b8 <fread@plt>
   1a7c8:	add	r7, r0, r7
   1a7cc:	cmp	r8, #1
   1a7d0:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a7d4:	ldr	r0, [sp, #124]	; 0x7c
   1a7d8:	sub	r0, r6, r0
   1a7dc:	sub	r6, r0, #256	; 0x100
   1a7e0:	mov	r0, r4
   1a7e4:	bl	1c0c <Mat_uint32Swap>
   1a7e8:	strh	r0, [sl], #2
   1a7ec:	add	r4, r4, #4
   1a7f0:	subs	r6, r6, #1
   1a7f4:	bne	1a7e0 <ReadInt16Data+0x1510>
   1a7f8:	b	1bdd8 <ReadInt16Data+0x2b08>
   1a7fc:	sub	r0, sl, #256	; 0x100
   1a800:	mov	r9, r6
   1a804:	add	r1, r6, #512	; 0x200
   1a808:	mov	r7, #0
   1a80c:	str	r8, [sp, #128]	; 0x80
   1a810:	str	sl, [sp, #4]
   1a814:	str	r0, [sp, #124]	; 0x7c
   1a818:	mov	r0, #0
   1a81c:	mov	r8, r0
   1a820:	ldr	r0, [sp, #128]	; 0x80
   1a824:	mov	r5, r1
   1a828:	ldr	r1, [sp, #132]	; 0x84
   1a82c:	add	r4, sp, #168	; 0xa8
   1a830:	mov	r2, #256	; 0x100
   1a834:	mov	sl, r7
   1a838:	ldr	r3, [r0]
   1a83c:	mov	r0, r4
   1a840:	bl	18b8 <fread@plt>
   1a844:	mov	r6, r0
   1a848:	mov	r7, #0
   1a84c:	mov	r0, r4
   1a850:	bl	1c4c <Mat_floatSwap>
   1a854:	vcvt.s32.f32	s0, s0
   1a858:	add	r0, r9, r7
   1a85c:	add	r7, r7, #2
   1a860:	add	r4, r4, #4
   1a864:	cmp	r7, #512	; 0x200
   1a868:	vmov	r1, s0
   1a86c:	strh	r1, [r0]
   1a870:	bne	1a84c <ReadInt16Data+0x157c>
   1a874:	ldr	r2, [sp, #124]	; 0x7c
   1a878:	add	r0, r8, #256	; 0x100
   1a87c:	mov	r7, sl
   1a880:	add	r7, r6, sl
   1a884:	add	r9, r9, #512	; 0x200
   1a888:	add	r1, r5, #512	; 0x200
   1a88c:	cmp	r0, r2
   1a890:	blt	1a81c <ReadInt16Data+0x154c>
   1a894:	ldr	r6, [sp, #4]
   1a898:	cmp	r0, r6
   1a89c:	bge	1bcf8 <ReadInt16Data+0x2a28>
   1a8a0:	sub	sl, r6, r0
   1a8a4:	ldr	r0, [sp, #128]	; 0x80
   1a8a8:	ldr	r9, [sp, #132]	; 0x84
   1a8ac:	add	r4, sp, #168	; 0xa8
   1a8b0:	mov	r2, sl
   1a8b4:	ldr	r3, [r0]
   1a8b8:	mov	r0, r4
   1a8bc:	mov	r1, r9
   1a8c0:	bl	18b8 <fread@plt>
   1a8c4:	add	r7, r0, r7
   1a8c8:	cmp	sl, #1
   1a8cc:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a8d0:	sub	r0, r6, r8
   1a8d4:	sub	r6, r0, #256	; 0x100
   1a8d8:	mov	r0, r4
   1a8dc:	bl	1c4c <Mat_floatSwap>
   1a8e0:	vcvt.s32.f32	s0, s0
   1a8e4:	add	r4, r4, #4
   1a8e8:	subs	r6, r6, #1
   1a8ec:	vmov	r0, s0
   1a8f0:	strh	r0, [r5], #2
   1a8f4:	bne	1a8d8 <ReadInt16Data+0x1608>
   1a8f8:	b	1bdd8 <ReadInt16Data+0x2b08>
   1a8fc:	sub	r0, sl, #256	; 0x100
   1a900:	mov	r5, r6
   1a904:	add	r1, r6, #512	; 0x200
   1a908:	mov	r7, #0
   1a90c:	str	r8, [sp, #128]	; 0x80
   1a910:	str	sl, [sp, #4]
   1a914:	str	r0, [sp, #124]	; 0x7c
   1a918:	mov	r0, #0
   1a91c:	mov	r8, r0
   1a920:	ldr	r0, [sp, #128]	; 0x80
   1a924:	mov	sl, r1
   1a928:	ldr	r1, [sp, #132]	; 0x84
   1a92c:	add	r4, sp, #168	; 0xa8
   1a930:	mov	r2, #256	; 0x100
   1a934:	mov	r9, r7
   1a938:	ldr	r3, [r0]
   1a93c:	mov	r0, r4
   1a940:	bl	18b8 <fread@plt>
   1a944:	mov	r6, r0
   1a948:	mov	r7, #0
   1a94c:	mov	r0, r4
   1a950:	bl	1c90 <Mat_doubleSwap>
   1a954:	vcvt.s32.f64	s0, d0
   1a958:	add	r0, r5, r7
   1a95c:	add	r7, r7, #2
   1a960:	add	r4, r4, #8
   1a964:	cmp	r7, #512	; 0x200
   1a968:	vmov	r1, s0
   1a96c:	strh	r1, [r0]
   1a970:	bne	1a94c <ReadInt16Data+0x167c>
   1a974:	ldr	r2, [sp, #124]	; 0x7c
   1a978:	add	r0, r8, #256	; 0x100
   1a97c:	mov	r7, r9
   1a980:	add	r7, r6, r9
   1a984:	add	r5, r5, #512	; 0x200
   1a988:	add	r1, sl, #512	; 0x200
   1a98c:	cmp	r0, r2
   1a990:	blt	1a91c <ReadInt16Data+0x164c>
   1a994:	ldr	r6, [sp, #4]
   1a998:	cmp	r0, r6
   1a99c:	bge	1bcf8 <ReadInt16Data+0x2a28>
   1a9a0:	sub	r5, r6, r0
   1a9a4:	ldr	r0, [sp, #128]	; 0x80
   1a9a8:	ldr	r9, [sp, #132]	; 0x84
   1a9ac:	add	r4, sp, #168	; 0xa8
   1a9b0:	mov	r2, r5
   1a9b4:	ldr	r3, [r0]
   1a9b8:	mov	r0, r4
   1a9bc:	mov	r1, r9
   1a9c0:	bl	18b8 <fread@plt>
   1a9c4:	add	r7, r0, r7
   1a9c8:	cmp	r5, #1
   1a9cc:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1a9d0:	sub	r0, r6, r8
   1a9d4:	sub	r6, r0, #256	; 0x100
   1a9d8:	mov	r0, r4
   1a9dc:	bl	1c90 <Mat_doubleSwap>
   1a9e0:	vcvt.s32.f64	s0, d0
   1a9e4:	add	r4, r4, #8
   1a9e8:	subs	r6, r6, #1
   1a9ec:	vmov	r0, s0
   1a9f0:	strh	r0, [sl], #2
   1a9f4:	bne	1a9d8 <ReadInt16Data+0x1708>
   1a9f8:	b	1bdd8 <ReadInt16Data+0x2b08>
   1a9fc:	sub	r0, sl, #256	; 0x100
   1aa00:	str	sl, [sp, #4]
   1aa04:	add	r1, r6, #512	; 0x200
   1aa08:	mov	r7, r6
   1aa0c:	mov	sl, #0
   1aa10:	str	r8, [sp, #128]	; 0x80
   1aa14:	str	r6, [sp]
   1aa18:	str	r0, [sp, #120]	; 0x78
   1aa1c:	mov	r0, #0
   1aa20:	str	r0, [sp, #124]	; 0x7c
   1aa24:	ldr	r0, [sp, #128]	; 0x80
   1aa28:	add	r4, sp, #168	; 0xa8
   1aa2c:	mov	r5, r1
   1aa30:	mov	r1, r9
   1aa34:	mov	r2, #256	; 0x100
   1aa38:	ldr	r3, [r0]
   1aa3c:	mov	r0, r4
   1aa40:	bl	18b8 <fread@plt>
   1aa44:	mov	r8, r0
   1aa48:	mov	r9, #0
   1aa4c:	mov	r0, r4
   1aa50:	add	r6, r7, r9
   1aa54:	bl	1b84 <Mat_int64Swap>
   1aa58:	add	r9, r9, #2
   1aa5c:	add	r4, r4, #8
   1aa60:	strh	r0, [r6]
   1aa64:	cmp	r9, #512	; 0x200
   1aa68:	bne	1aa4c <ReadInt16Data+0x177c>
   1aa6c:	ldr	r0, [sp, #124]	; 0x7c
   1aa70:	ldr	r2, [sp, #120]	; 0x78
   1aa74:	ldr	r9, [sp, #132]	; 0x84
   1aa78:	add	sl, r8, sl
   1aa7c:	add	r7, r7, #512	; 0x200
   1aa80:	add	r1, r5, #512	; 0x200
   1aa84:	add	r0, r0, #256	; 0x100
   1aa88:	cmp	r0, r2
   1aa8c:	blt	1aa20 <ReadInt16Data+0x1750>
   1aa90:	ldr	r8, [sp, #4]
   1aa94:	cmp	r0, r8
   1aa98:	bge	1b374 <ReadInt16Data+0x20a4>
   1aa9c:	sub	r4, r8, r0
   1aaa0:	ldr	r0, [sp, #128]	; 0x80
   1aaa4:	add	r6, sp, #168	; 0xa8
   1aaa8:	mov	r1, r9
   1aaac:	mov	r2, r4
   1aab0:	ldr	r3, [r0]
   1aab4:	mov	r0, r6
   1aab8:	bl	18b8 <fread@plt>
   1aabc:	mov	r7, sl
   1aac0:	add	r7, r0, sl
   1aac4:	cmp	r4, #1
   1aac8:	blt	1b378 <ReadInt16Data+0x20a8>
   1aacc:	ldr	r0, [sp, #124]	; 0x7c
   1aad0:	mov	sl, r8
   1aad4:	sub	r0, r8, r0
   1aad8:	sub	r4, r0, #256	; 0x100
   1aadc:	mov	r0, r6
   1aae0:	bl	1b84 <Mat_int64Swap>
   1aae4:	strh	r0, [r5], #2
   1aae8:	add	r6, r6, #8
   1aaec:	subs	r4, r4, #1
   1aaf0:	bne	1aadc <ReadInt16Data+0x180c>
   1aaf4:	b	1b914 <ReadInt16Data+0x2644>
   1aaf8:	sub	r0, sl, #256	; 0x100
   1aafc:	lsl	r6, sl, #1
   1ab00:	mov	r9, r4
   1ab04:	mov	r5, #0
   1ab08:	mov	r7, #0
   1ab0c:	str	sl, [sp, #4]
   1ab10:	str	r0, [sp, #128]	; 0x80
   1ab14:	ldr	r3, [r8]
   1ab18:	ldr	r1, [sp, #132]	; 0x84
   1ab1c:	add	sl, sp, #168	; 0xa8
   1ab20:	mov	r2, #256	; 0x100
   1ab24:	mov	r0, sl
   1ab28:	bl	18b8 <fread@plt>
   1ab2c:	mov	r4, r0
   1ab30:	add	r0, r9, r5, lsl #1
   1ab34:	mov	r1, sl
   1ab38:	mov	r2, #512	; 0x200
   1ab3c:	bl	181c <memcpy@plt>
   1ab40:	ldr	r0, [sp, #128]	; 0x80
   1ab44:	add	r5, r5, #256	; 0x100
   1ab48:	add	r7, r4, r7
   1ab4c:	sub	r6, r6, #512	; 0x200
   1ab50:	cmp	r5, r0
   1ab54:	blt	1ab14 <ReadInt16Data+0x1844>
   1ab58:	ldr	r0, [sp, #4]
   1ab5c:	mov	r1, r8
   1ab60:	ldr	r8, [sp, #132]	; 0x84
   1ab64:	cmp	r5, r0
   1ab68:	bge	1aba0 <ReadInt16Data+0x18d0>
   1ab6c:	ldr	r3, [r1]
   1ab70:	sub	r4, r0, r5
   1ab74:	add	r0, sp, #168	; 0xa8
   1ab78:	mov	r1, r8
   1ab7c:	mov	r2, r4
   1ab80:	bl	18b8 <fread@plt>
   1ab84:	add	r7, r0, r7
   1ab88:	cmp	r4, #1
   1ab8c:	blt	1aba0 <ReadInt16Data+0x18d0>
   1ab90:	add	r0, r9, r5, lsl #1
   1ab94:	add	r1, sp, #168	; 0xa8
   1ab98:	mov	r2, r6
   1ab9c:	bl	181c <memcpy@plt>
   1aba0:	mov	r9, r8
   1aba4:	mul	r0, r7, r9
   1aba8:	sub	sp, fp, #28
   1abac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abb0:	sub	r1, sl, #256	; 0x100
   1abb4:	str	sl, [sp, #4]
   1abb8:	add	r0, r6, #512	; 0x200
   1abbc:	mov	sl, #0
   1abc0:	mov	r7, #32
   1abc4:	str	r6, [sp]
   1abc8:	mov	r5, r6
   1abcc:	mov	r6, #0
   1abd0:	str	r8, [sp, #128]	; 0x80
   1abd4:	str	r1, [sp, #124]	; 0x7c
   1abd8:	mov	r1, #256	; 0x100
   1abdc:	mov	r8, r0
   1abe0:	ldr	r0, [sp, #128]	; 0x80
   1abe4:	mov	r9, r1
   1abe8:	ldr	r1, [sp, #132]	; 0x84
   1abec:	add	r4, sp, #168	; 0xa8
   1abf0:	mov	r2, #256	; 0x100
   1abf4:	ldr	r3, [r0]
   1abf8:	mov	r0, r4
   1abfc:	bl	18b8 <fread@plt>
   1ac00:	mov	r1, #0
   1ac04:	mov	r2, r4
   1ac08:	add	r3, r2, #16
   1ac0c:	vld1.32	{d16-d17}, [r2], r7
   1ac10:	add	r4, r5, r1
   1ac14:	add	r1, r1, #16
   1ac18:	cmp	r1, #512	; 0x200
   1ac1c:	vmovn.i32	d16, q8
   1ac20:	vst1.16	{d16}, [r4]!
   1ac24:	vld1.32	{d16-d17}, [r3]
   1ac28:	vmovn.i32	d16, q8
   1ac2c:	vst1.16	{d16}, [r4]
   1ac30:	bne	1ac08 <ReadInt16Data+0x1938>
   1ac34:	ldr	r3, [sp, #124]	; 0x7c
   1ac38:	mov	r2, sl
   1ac3c:	add	sl, sl, #256	; 0x100
   1ac40:	add	r6, r0, r6
   1ac44:	add	r5, r5, #512	; 0x200
   1ac48:	add	r0, r8, #512	; 0x200
   1ac4c:	add	r1, r9, #256	; 0x100
   1ac50:	cmp	sl, r3
   1ac54:	blt	1abdc <ReadInt16Data+0x190c>
   1ac58:	ldr	r0, [sp, #4]
   1ac5c:	str	r2, [sp, #124]	; 0x7c
   1ac60:	cmp	sl, r0
   1ac64:	bge	1b360 <ReadInt16Data+0x2090>
   1ac68:	sub	r7, r0, sl
   1ac6c:	ldr	r0, [sp, #128]	; 0x80
   1ac70:	ldr	r1, [sp, #132]	; 0x84
   1ac74:	add	r5, sp, #168	; 0xa8
   1ac78:	mov	r4, r9
   1ac7c:	mov	r2, r7
   1ac80:	ldr	r3, [r0]
   1ac84:	mov	r0, r5
   1ac88:	bl	18b8 <fread@plt>
   1ac8c:	mov	r1, r7
   1ac90:	mov	r7, r6
   1ac94:	add	r7, r0, r6
   1ac98:	cmp	r1, #1
   1ac9c:	blt	1bcf8 <ReadInt16Data+0x2a28>
   1aca0:	mov	lr, #0
   1aca4:	cmp	r1, #4
   1aca8:	bcc	1b798 <ReadInt16Data+0x24c8>
   1acac:	bic	lr, r1, #3
   1acb0:	str	r1, [sp, #128]	; 0x80
   1acb4:	mov	r2, #1
   1acb8:	mov	r6, r7
   1acbc:	subs	r1, lr, #4
   1acc0:	add	r1, r2, r1, lsr #2
   1acc4:	and	ip, r1, #1
   1acc8:	beq	1b758 <ReadInt16Data+0x2488>
   1accc:	ldr	r0, [sp, #4]
   1acd0:	ldr	r1, [sp, #124]	; 0x7c
   1acd4:	sub	r3, r0, r1
   1acd8:	mov	r0, #16
   1acdc:	sub	r3, r3, #256	; 0x100
   1ace0:	bic	r3, r3, #3
   1ace4:	sub	r3, r3, #4
   1ace8:	add	r2, r2, r3, lsr #2
   1acec:	mvn	r7, r3, lsr #2
   1acf0:	and	r2, r2, #1
   1acf4:	add	r3, r7, r2
   1acf8:	mov	r2, #0
   1acfc:	mov	r7, #32
   1ad00:	add	r4, r5, #16
   1ad04:	vld1.32	{d16-d17}, [r5], r7
   1ad08:	add	r1, r8, #8
   1ad0c:	adds	r3, r3, #2
   1ad10:	add	r2, r2, #8
   1ad14:	vmovn.i32	d16, q8
   1ad18:	vst1.16	{d16}, [r8], r0
   1ad1c:	vld1.32	{d16-d17}, [r4]
   1ad20:	vmovn.i32	d16, q8
   1ad24:	vst1.16	{d16}, [r1]
   1ad28:	bne	1ad00 <ReadInt16Data+0x1a30>
   1ad2c:	b	1b75c <ReadInt16Data+0x248c>
   1ad30:	sub	r1, sl, #256	; 0x100
   1ad34:	str	sl, [sp, #4]
   1ad38:	add	r0, r6, #512	; 0x200
   1ad3c:	mov	sl, #0
   1ad40:	mov	r7, #32
   1ad44:	str	r6, [sp]
   1ad48:	mov	r5, r6
   1ad4c:	mov	r6, #0
   1ad50:	str	r8, [sp, #128]	; 0x80
   1ad54:	str	r1, [sp, #124]	; 0x7c
   1ad58:	mov	r1, #256	; 0x100
   1ad5c:	mov	r8, r0
   1ad60:	ldr	r0, [sp, #128]	; 0x80
   1ad64:	mov	r9, r1
   1ad68:	ldr	r1, [sp, #132]	; 0x84
   1ad6c:	add	r4, sp, #168	; 0xa8
   1ad70:	mov	r2, #256	; 0x100
   1ad74:	ldr	r3, [r0]
   1ad78:	mov	r0, r4
   1ad7c:	bl	18b8 <fread@plt>
   1ad80:	mov	r1, #0
   1ad84:	mov	r2, r4
   1ad88:	add	r3, r2, #16
   1ad8c:	vld1.32	{d16-d17}, [r2], r7
   1ad90:	add	r4, r5, r1
   1ad94:	add	r1, r1, #16
   1ad98:	cmp	r1, #512	; 0x200
   1ad9c:	vmovn.i32	d16, q8
   1ada0:	vst1.16	{d16}, [r4]!
   1ada4:	vld1.32	{d16-d17}, [r3]
   1ada8:	vmovn.i32	d16, q8
   1adac:	vst1.16	{d16}, [r4]
   1adb0:	bne	1ad88 <ReadInt16Data+0x1ab8>
   1adb4:	ldr	r3, [sp, #124]	; 0x7c
   1adb8:	mov	r2, sl
   1adbc:	add	sl, sl, #256	; 0x100
   1adc0:	add	r6, r0, r6
   1adc4:	add	r5, r5, #512	; 0x200
   1adc8:	add	r0, r8, #512	; 0x200
   1adcc:	add	r1, r9, #256	; 0x100
   1add0:	cmp	sl, r3
   1add4:	blt	1ad5c <ReadInt16Data+0x1a8c>
   1add8:	ldr	r0, [sp, #4]
   1addc:	str	r2, [sp, #124]	; 0x7c
   1ade0:	cmp	sl, r0
   1ade4:	bge	1b360 <ReadInt16Data+0x2090>
   1ade8:	sub	r7, r0, sl
   1adec:	ldr	r0, [sp, #128]	; 0x80
   1adf0:	ldr	r1, [sp, #132]	; 0x84
   1adf4:	add	r5, sp, #168	; 0xa8
   1adf8:	mov	r4, r9
   1adfc:	mov	r2, r7
   1ae00:	ldr	r3, [r0]
   1ae04:	mov	r0, r5
   1ae08:	bl	18b8 <fread@plt>
   1ae0c:	mov	r1, r7
   1ae10:	mov	r7, r6
   1ae14:	add	r7, r0, r6
   1ae18:	cmp	r1, #1
   1ae1c:	blt	1bcf8 <ReadInt16Data+0x2a28>
   1ae20:	mov	lr, #0
   1ae24:	cmp	r1, #4
   1ae28:	bcc	1b814 <ReadInt16Data+0x2544>
   1ae2c:	bic	lr, r1, #3
   1ae30:	str	r1, [sp, #128]	; 0x80
   1ae34:	mov	r2, #1
   1ae38:	mov	r6, r7
   1ae3c:	subs	r1, lr, #4
   1ae40:	add	r1, r2, r1, lsr #2
   1ae44:	and	ip, r1, #1
   1ae48:	beq	1b7d4 <ReadInt16Data+0x2504>
   1ae4c:	ldr	r0, [sp, #4]
   1ae50:	ldr	r1, [sp, #124]	; 0x7c
   1ae54:	sub	r3, r0, r1
   1ae58:	mov	r0, #16
   1ae5c:	sub	r3, r3, #256	; 0x100
   1ae60:	bic	r3, r3, #3
   1ae64:	sub	r3, r3, #4
   1ae68:	add	r2, r2, r3, lsr #2
   1ae6c:	mvn	r7, r3, lsr #2
   1ae70:	and	r2, r2, #1
   1ae74:	add	r3, r7, r2
   1ae78:	mov	r2, #0
   1ae7c:	mov	r7, #32
   1ae80:	add	r4, r5, #16
   1ae84:	vld1.32	{d16-d17}, [r5], r7
   1ae88:	add	r1, r8, #8
   1ae8c:	adds	r3, r3, #2
   1ae90:	add	r2, r2, #8
   1ae94:	vmovn.i32	d16, q8
   1ae98:	vst1.16	{d16}, [r8], r0
   1ae9c:	vld1.32	{d16-d17}, [r4]
   1aea0:	vmovn.i32	d16, q8
   1aea4:	vst1.16	{d16}, [r1]
   1aea8:	bne	1ae80 <ReadInt16Data+0x1bb0>
   1aeac:	b	1b7d8 <ReadInt16Data+0x2508>
   1aeb0:	sub	r1, sl, #256	; 0x100
   1aeb4:	str	sl, [sp, #4]
   1aeb8:	add	r0, r6, #512	; 0x200
   1aebc:	mov	sl, #0
   1aec0:	mov	r9, r6
   1aec4:	mov	r7, #32
   1aec8:	mov	r5, #0
   1aecc:	str	r8, [sp, #128]	; 0x80
   1aed0:	str	r6, [sp]
   1aed4:	str	r1, [sp, #120]	; 0x78
   1aed8:	mov	r1, #256	; 0x100
   1aedc:	mov	r8, r0
   1aee0:	ldr	r0, [sp, #128]	; 0x80
   1aee4:	str	r1, [sp, #124]	; 0x7c
   1aee8:	ldr	r1, [sp, #132]	; 0x84
   1aeec:	add	r4, sp, #168	; 0xa8
   1aef0:	mov	r2, #256	; 0x100
   1aef4:	ldr	r3, [r0]
   1aef8:	mov	r0, r4
   1aefc:	bl	18b8 <fread@plt>
   1af00:	mov	r1, #0
   1af04:	mov	r2, r4
   1af08:	add	r3, r2, #16
   1af0c:	vld1.32	{d16-d17}, [r2], r7
   1af10:	add	r4, r9, r1
   1af14:	add	r1, r1, #16
   1af18:	cmp	r1, #512	; 0x200
   1af1c:	vcvt.s32.f32	q8, q8
   1af20:	vmovn.i32	d16, q8
   1af24:	vst1.16	{d16}, [r4]!
   1af28:	vld1.32	{d16-d17}, [r3]
   1af2c:	vcvt.s32.f32	q8, q8
   1af30:	vmovn.i32	d16, q8
   1af34:	vst1.16	{d16}, [r4]
   1af38:	bne	1af08 <ReadInt16Data+0x1c38>
   1af3c:	ldr	r6, [sp, #124]	; 0x7c
   1af40:	ldr	r3, [sp, #120]	; 0x78
   1af44:	mov	r2, sl
   1af48:	add	sl, sl, #256	; 0x100
   1af4c:	add	r5, r0, r5
   1af50:	add	r9, r9, #512	; 0x200
   1af54:	add	r0, r8, #512	; 0x200
   1af58:	add	r1, r6, #256	; 0x100
   1af5c:	cmp	sl, r3
   1af60:	blt	1aedc <ReadInt16Data+0x1c0c>
   1af64:	ldr	r0, [sp, #4]
   1af68:	str	r2, [sp, #120]	; 0x78
   1af6c:	cmp	sl, r0
   1af70:	bge	1b38c <ReadInt16Data+0x20bc>
   1af74:	sub	r7, r0, sl
   1af78:	ldr	r0, [sp, #128]	; 0x80
   1af7c:	ldr	r9, [sp, #132]	; 0x84
   1af80:	add	r4, sp, #168	; 0xa8
   1af84:	mov	r2, r7
   1af88:	ldr	r3, [r0]
   1af8c:	mov	r0, r4
   1af90:	mov	r1, r9
   1af94:	bl	18b8 <fread@plt>
   1af98:	mov	r1, r7
   1af9c:	mov	r7, r5
   1afa0:	add	r7, r0, r5
   1afa4:	cmp	r1, #1
   1afa8:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1afac:	ldr	r3, [sp]
   1afb0:	mov	r0, #0
   1afb4:	cmp	r1, #4
   1afb8:	bcc	1b894 <ReadInt16Data+0x25c4>
   1afbc:	bic	r0, r1, #3
   1afc0:	str	r1, [sp, #128]	; 0x80
   1afc4:	mov	r2, #1
   1afc8:	mov	lr, r7
   1afcc:	subs	r1, r0, #4
   1afd0:	add	r1, r2, r1, lsr #2
   1afd4:	and	ip, r1, #1
   1afd8:	beq	1b850 <ReadInt16Data+0x2580>
   1afdc:	ldr	r1, [sp, #4]
   1afe0:	ldr	r3, [sp, #120]	; 0x78
   1afe4:	mov	r5, #16
   1afe8:	sub	r3, r1, r3
   1afec:	sub	r3, r3, #256	; 0x100
   1aff0:	bic	r3, r3, #3
   1aff4:	sub	r3, r3, #4
   1aff8:	add	r2, r2, r3, lsr #2
   1affc:	mvn	r7, r3, lsr #2
   1b000:	and	r2, r2, #1
   1b004:	add	r3, r7, r2
   1b008:	mov	r2, #0
   1b00c:	mov	r7, #32
   1b010:	add	r6, r4, #16
   1b014:	vld1.32	{d16-d17}, [r4], r7
   1b018:	add	r1, r8, #8
   1b01c:	adds	r3, r3, #2
   1b020:	add	r2, r2, #8
   1b024:	vcvt.s32.f32	q8, q8
   1b028:	vmovn.i32	d16, q8
   1b02c:	vst1.16	{d16}, [r8], r5
   1b030:	vld1.32	{d16-d17}, [r6]
   1b034:	vcvt.s32.f32	q8, q8
   1b038:	vmovn.i32	d16, q8
   1b03c:	vst1.16	{d16}, [r1]
   1b040:	bne	1b010 <ReadInt16Data+0x1d40>
   1b044:	b	1b854 <ReadInt16Data+0x2584>
   1b048:	movw	r0, #514	; 0x202
   1b04c:	add	r1, sp, #168	; 0xa8
   1b050:	str	r8, [sp, #128]	; 0x80
   1b054:	str	sl, [sp, #4]
   1b058:	add	r7, r6, #2
   1b05c:	sub	sl, sl, #256	; 0x100
   1b060:	mov	r5, #0
   1b064:	mov	r8, #0
   1b068:	str	r6, [sp]
   1b06c:	add	r0, r6, r0
   1b070:	add	r9, r1, #8
   1b074:	mov	r4, r0
   1b078:	ldr	r0, [sp, #128]	; 0x80
   1b07c:	ldr	r1, [sp, #132]	; 0x84
   1b080:	mov	r2, #256	; 0x100
   1b084:	mov	r6, r5
   1b088:	ldr	r3, [r0]
   1b08c:	add	r0, sp, #168	; 0xa8
   1b090:	bl	18b8 <fread@plt>
   1b094:	mov	r1, #0
   1b098:	mov	r2, r9
   1b09c:	vldr	d16, [r2, #-8]
   1b0a0:	add	r3, r7, r1
   1b0a4:	add	r1, r1, #4
   1b0a8:	cmp	r1, #512	; 0x200
   1b0ac:	vcvt.s32.f64	s0, d16
   1b0b0:	vmov	r5, s0
   1b0b4:	strh	r5, [r3, #-2]
   1b0b8:	vldr	d16, [r2]
   1b0bc:	add	r2, r2, #16
   1b0c0:	vcvt.s32.f64	s0, d16
   1b0c4:	vmov	r5, s0
   1b0c8:	strh	r5, [r3]
   1b0cc:	bne	1b09c <ReadInt16Data+0x1dcc>
   1b0d0:	add	r5, r6, #256	; 0x100
   1b0d4:	add	r8, r0, r8
   1b0d8:	add	r7, r7, #512	; 0x200
   1b0dc:	add	r0, r4, #512	; 0x200
   1b0e0:	cmp	r5, sl
   1b0e4:	blt	1b074 <ReadInt16Data+0x1da4>
   1b0e8:	ldr	r0, [sp, #4]
   1b0ec:	cmp	r5, r0
   1b0f0:	bge	1b3a0 <ReadInt16Data+0x20d0>
   1b0f4:	sub	sl, r0, r5
   1b0f8:	ldr	r0, [sp, #128]	; 0x80
   1b0fc:	ldr	r9, [sp, #132]	; 0x84
   1b100:	mov	r2, sl
   1b104:	ldr	r3, [r0]
   1b108:	add	r0, sp, #168	; 0xa8
   1b10c:	mov	r1, r9
   1b110:	bl	18b8 <fread@plt>
   1b114:	mov	r7, r8
   1b118:	add	r7, r0, r8
   1b11c:	cmp	sl, #1
   1b120:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1b124:	ldr	r3, [sp, #4]
   1b128:	mvn	r0, #256	; 0x100
   1b12c:	mov	r1, #0
   1b130:	sub	r2, r0, r6
   1b134:	and	r0, sl, #1
   1b138:	cmn	r2, r3
   1b13c:	beq	1b198 <ReadInt16Data+0x1ec8>
   1b140:	sub	r1, r0, r3
   1b144:	mov	r2, r3
   1b148:	add	r2, sp, #168	; 0xa8
   1b14c:	mov	r6, r7
   1b150:	add	r3, r2, #8
   1b154:	add	r1, r1, r5
   1b158:	mov	r2, #0
   1b15c:	vldr	d16, [r3, #-8]
   1b160:	sub	r2, r2, #2
   1b164:	cmp	r1, r2
   1b168:	vcvt.s32.f64	s0, d16
   1b16c:	vmov	r7, s0
   1b170:	strh	r7, [r4, #-2]
   1b174:	vldr	d16, [r3]
   1b178:	add	r3, r3, #16
   1b17c:	vcvt.s32.f64	s0, d16
   1b180:	vmov	r7, s0
   1b184:	strh	r7, [r4]
   1b188:	add	r4, r4, #4
   1b18c:	bne	1b15c <ReadInt16Data+0x1e8c>
   1b190:	rsb	r1, r2, #0
   1b194:	mov	r7, r6
   1b198:	cmp	r0, #0
   1b19c:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b1a0:	add	r0, sp, #168	; 0xa8
   1b1a4:	add	r0, r0, r1, lsl #3
   1b1a8:	vldr	d16, [r0]
   1b1ac:	add	r0, r1, r5
   1b1b0:	vcvt.s32.f64	s0, d16
   1b1b4:	ldr	r1, [sp]
   1b1b8:	add	r0, r1, r0, lsl #1
   1b1bc:	b	1b4a8 <ReadInt16Data+0x21d8>
   1b1c0:	sub	r1, sl, #256	; 0x100
   1b1c4:	add	r0, r6, #512	; 0x200
   1b1c8:	mov	r4, #0
   1b1cc:	mov	r5, #32
   1b1d0:	mov	r7, #0
   1b1d4:	str	r8, [sp, #128]	; 0x80
   1b1d8:	str	sl, [sp, #4]
   1b1dc:	str	r6, [sp]
   1b1e0:	str	r1, [sp, #120]	; 0x78
   1b1e4:	mov	r1, #256	; 0x100
   1b1e8:	mov	r8, r0
   1b1ec:	ldr	r0, [sp, #128]	; 0x80
   1b1f0:	str	r1, [sp, #124]	; 0x7c
   1b1f4:	ldr	r1, [sp, #132]	; 0x84
   1b1f8:	mov	r9, r4
   1b1fc:	add	r4, sp, #168	; 0xa8
   1b200:	mov	r2, #256	; 0x100
   1b204:	mov	sl, r7
   1b208:	ldr	r3, [r0]
   1b20c:	mov	r0, r4
   1b210:	bl	18b8 <fread@plt>
   1b214:	mov	r1, #0
   1b218:	mov	r3, r4
   1b21c:	mov	r2, r4
   1b220:	vld1.64	{d16-d17}, [r2], r5
   1b224:	mov	r7, r6
   1b228:	add	r3, r3, #16
   1b22c:	vmovn.i64	d16, q8
   1b230:	vuzp.16	d16, d17
   1b234:	vmov.32	r4, d16[0]
   1b238:	str	r4, [r7, r1]!
   1b23c:	add	r1, r1, #8
   1b240:	vld1.64	{d16-d17}, [r3]
   1b244:	add	r3, r7, #4
   1b248:	cmp	r1, #512	; 0x200
   1b24c:	vmovn.i64	d16, q8
   1b250:	vuzp.16	d16, d17
   1b254:	vst1.32	{d16[0]}, [r3]
   1b258:	mov	r3, r2
   1b25c:	bne	1b220 <ReadInt16Data+0x1f50>
   1b260:	ldr	r1, [sp, #124]	; 0x7c
   1b264:	ldr	r2, [sp, #120]	; 0x78
   1b268:	add	r4, r9, #256	; 0x100
   1b26c:	mov	r7, sl
   1b270:	add	r7, r0, sl
   1b274:	add	r6, r6, #512	; 0x200
   1b278:	add	r0, r8, #512	; 0x200
   1b27c:	add	r1, r1, #256	; 0x100
   1b280:	cmp	r4, r2
   1b284:	blt	1b1e8 <ReadInt16Data+0x1f18>
   1b288:	ldr	sl, [sp, #4]
   1b28c:	cmp	r4, sl
   1b290:	bge	1b3b4 <ReadInt16Data+0x20e4>
   1b294:	ldr	r0, [sp, #128]	; 0x80
   1b298:	str	r9, [sp, #120]	; 0x78
   1b29c:	ldr	r9, [sp, #132]	; 0x84
   1b2a0:	sub	r6, sl, r4
   1b2a4:	add	r5, sp, #168	; 0xa8
   1b2a8:	mov	r2, r6
   1b2ac:	ldr	r3, [r0]
   1b2b0:	mov	r0, r5
   1b2b4:	mov	r1, r9
   1b2b8:	bl	18b8 <fread@plt>
   1b2bc:	add	r7, r0, r7
   1b2c0:	cmp	r6, #1
   1b2c4:	blt	1b914 <ReadInt16Data+0x2644>
   1b2c8:	mov	r0, #0
   1b2cc:	beq	1b91c <ReadInt16Data+0x264c>
   1b2d0:	bic	r0, r6, #1
   1b2d4:	mov	r2, #1
   1b2d8:	mov	lr, r6
   1b2dc:	subs	r1, r0, #2
   1b2e0:	add	r1, r2, r1, lsr #1
   1b2e4:	and	ip, r1, #1
   1b2e8:	mov	r1, r7
   1b2ec:	beq	1b8d8 <ReadInt16Data+0x2608>
   1b2f0:	ldr	r3, [sp, #120]	; 0x78
   1b2f4:	mov	r6, r5
   1b2f8:	sub	r3, sl, r3
   1b2fc:	sub	r3, r3, #256	; 0x100
   1b300:	bic	r3, r3, #1
   1b304:	sub	r3, r3, #2
   1b308:	add	r2, r2, r3, lsr #1
   1b30c:	mvn	r7, r3, lsr #1
   1b310:	and	r2, r2, #1
   1b314:	add	r3, r7, r2
   1b318:	mov	r2, #0
   1b31c:	mov	r7, #32
   1b320:	vld1.64	{d16-d17}, [r6], r7
   1b324:	add	r5, r5, #16
   1b328:	adds	r3, r3, #2
   1b32c:	add	r2, r2, #4
   1b330:	vmovn.i64	d16, q8
   1b334:	vuzp.16	d16, d17
   1b338:	vst1.32	{d16[0]}, [r8]
   1b33c:	vld1.64	{d16-d17}, [r5]
   1b340:	add	r5, r8, #4
   1b344:	add	r8, r8, #8
   1b348:	vmovn.i64	d16, q8
   1b34c:	vuzp.16	d16, d17
   1b350:	vst1.32	{d16[0]}, [r5]
   1b354:	mov	r5, r6
   1b358:	bne	1b320 <ReadInt16Data+0x2050>
   1b35c:	b	1b8dc <ReadInt16Data+0x260c>
   1b360:	ldr	r9, [sp, #132]	; 0x84
   1b364:	mov	r7, r6
   1b368:	mul	r0, r7, r9
   1b36c:	sub	sp, fp, #28
   1b370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b374:	mov	r7, sl
   1b378:	ldr	r6, [sp]
   1b37c:	mov	sl, r8
   1b380:	b	1b954 <ReadInt16Data+0x2684>
   1b384:	mov	r6, r4
   1b388:	b	1b958 <ReadInt16Data+0x2688>
   1b38c:	ldr	r9, [sp, #132]	; 0x84
   1b390:	mov	r7, r5
   1b394:	mul	r0, r7, r9
   1b398:	sub	sp, fp, #28
   1b39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3a0:	ldr	r9, [sp, #132]	; 0x84
   1b3a4:	mov	r7, r8
   1b3a8:	mul	r0, r7, r9
   1b3ac:	sub	sp, fp, #28
   1b3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3b4:	ldr	r9, [sp, #132]	; 0x84
   1b3b8:	ldr	r6, [sp]
   1b3bc:	b	1b954 <ReadInt16Data+0x2684>
   1b3c0:	mov	r8, r6
   1b3c4:	mov	r1, #0
   1b3c8:	cmp	ip, #0
   1b3cc:	mov	r7, lr
   1b3d0:	mov	r6, r8
   1b3d4:	beq	1b400 <ReadInt16Data+0x2130>
   1b3d8:	ldr	r2, [r4, r1]
   1b3dc:	str	r2, [sp, #136]	; 0x88
   1b3e0:	add	r2, r4, r1
   1b3e4:	add	r1, r6, r1, lsl #1
   1b3e8:	ldr	r2, [r2, #4]
   1b3ec:	str	r2, [sp, #140]	; 0x8c
   1b3f0:	add	r2, sp, #136	; 0x88
   1b3f4:	vld1.8	{d16}, [r2 :64]
   1b3f8:	vmovl.s8	q8, d16
   1b3fc:	vst1.16	{d16-d17}, [r1]
   1b400:	cmp	r0, sl
   1b404:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b408:	add	r2, r6, r0, lsl #1
   1b40c:	add	r1, r4, r0
   1b410:	sub	r0, sl, r0
   1b414:	ldrsb	r3, [r1], #1
   1b418:	subs	r0, r0, #1
   1b41c:	strh	r3, [r2], #2
   1b420:	bne	1b414 <ReadInt16Data+0x2144>
   1b424:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b428:	mov	r8, r6
   1b42c:	mov	lr, r7
   1b430:	mov	r1, #0
   1b434:	cmp	ip, #0
   1b438:	mov	r7, lr
   1b43c:	mov	r6, r8
   1b440:	beq	1b46c <ReadInt16Data+0x219c>
   1b444:	ldr	r2, [r4, r1]
   1b448:	str	r2, [sp, #152]	; 0x98
   1b44c:	add	r2, r4, r1
   1b450:	add	r1, r6, r1, lsl #1
   1b454:	ldr	r2, [r2, #4]
   1b458:	str	r2, [sp, #156]	; 0x9c
   1b45c:	add	r2, sp, #152	; 0x98
   1b460:	vld1.8	{d16}, [r2 :64]
   1b464:	vmovl.u8	q8, d16
   1b468:	vst1.16	{d16-d17}, [r1]
   1b46c:	cmp	r0, sl
   1b470:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b474:	add	r2, r6, r0, lsl #1
   1b478:	add	r1, r4, r0
   1b47c:	sub	r0, sl, r0
   1b480:	ldrb	r3, [r1], #1
   1b484:	subs	r0, r0, #1
   1b488:	strh	r3, [r2], #2
   1b48c:	bne	1b480 <ReadInt16Data+0x21b0>
   1b490:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b494:	add	r1, r4, r0, lsl #3
   1b498:	add	r0, r5, r0, lsl #1
   1b49c:	mov	r7, ip
   1b4a0:	vldr	d16, [r1]
   1b4a4:	vcvt.s32.f64	s0, d16
   1b4a8:	vmov	r1, s0
   1b4ac:	strh	r1, [r0]
   1b4b0:	mul	r0, r7, r9
   1b4b4:	sub	sp, fp, #28
   1b4b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4bc:	mov	r1, #0
   1b4c0:	cmp	ip, #0
   1b4c4:	mov	r7, lr
   1b4c8:	beq	1b4fc <ReadInt16Data+0x222c>
   1b4cc:	ldr	r2, [r4, r1]
   1b4d0:	str	r2, [sp, #144]	; 0x90
   1b4d4:	add	r2, r4, r1
   1b4d8:	add	r1, r1, r6
   1b4dc:	ldr	r2, [r2, #4]
   1b4e0:	str	r2, [sp, #148]	; 0x94
   1b4e4:	add	r2, sp, #144	; 0x90
   1b4e8:	vld1.8	{d16}, [r2 :64]
   1b4ec:	ldr	r2, [sp]
   1b4f0:	add	r1, r2, r1, lsl #1
   1b4f4:	vmovl.s8	q8, d16
   1b4f8:	vst1.16	{d16-d17}, [r1]
   1b4fc:	cmp	r9, r0
   1b500:	beq	1b530 <ReadInt16Data+0x2260>
   1b504:	ldr	r3, [sp]
   1b508:	add	r2, r0, r6
   1b50c:	add	r1, r4, r0
   1b510:	add	r2, r3, r2, lsl #1
   1b514:	ldr	r3, [sp, #4]
   1b518:	sub	r0, r3, r0
   1b51c:	sub	r0, r0, r6
   1b520:	ldrsb	r3, [r1], #1
   1b524:	subs	r0, r0, #1
   1b528:	strh	r3, [r2], #2
   1b52c:	bne	1b520 <ReadInt16Data+0x2250>
   1b530:	mov	r9, r8
   1b534:	mul	r0, r7, r9
   1b538:	sub	sp, fp, #28
   1b53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b540:	mov	r1, #0
   1b544:	cmp	ip, #0
   1b548:	mov	r7, lr
   1b54c:	beq	1b580 <ReadInt16Data+0x22b0>
   1b550:	ldr	r2, [r4, r1]
   1b554:	str	r2, [sp, #160]	; 0xa0
   1b558:	add	r2, r4, r1
   1b55c:	add	r1, r1, r6
   1b560:	ldr	r2, [r2, #4]
   1b564:	str	r2, [sp, #164]	; 0xa4
   1b568:	add	r2, sp, #160	; 0xa0
   1b56c:	vld1.8	{d16}, [r2 :64]
   1b570:	ldr	r2, [sp]
   1b574:	add	r1, r2, r1, lsl #1
   1b578:	vmovl.u8	q8, d16
   1b57c:	vst1.16	{d16-d17}, [r1]
   1b580:	cmp	r9, r0
   1b584:	beq	1b5b4 <ReadInt16Data+0x22e4>
   1b588:	ldr	r3, [sp]
   1b58c:	add	r2, r0, r6
   1b590:	add	r1, r4, r0
   1b594:	add	r2, r3, r2, lsl #1
   1b598:	ldr	r3, [sp, #4]
   1b59c:	sub	r0, r3, r0
   1b5a0:	sub	r0, r0, r6
   1b5a4:	ldrb	r3, [r1], #1
   1b5a8:	subs	r0, r0, #1
   1b5ac:	strh	r3, [r2], #2
   1b5b0:	bne	1b5a4 <ReadInt16Data+0x22d4>
   1b5b4:	mov	r9, r8
   1b5b8:	mul	r0, r7, r9
   1b5bc:	sub	sp, fp, #28
   1b5c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5c4:	mov	r9, r6
   1b5c8:	mov	r1, #0
   1b5cc:	ldr	r7, [sp, #128]	; 0x80
   1b5d0:	cmp	ip, #0
   1b5d4:	mov	r6, r9
   1b5d8:	beq	1b5f4 <ReadInt16Data+0x2324>
   1b5dc:	add	r0, sp, #168	; 0xa8
   1b5e0:	add	r0, r0, r1, lsl #2
   1b5e4:	vld1.32	{d16-d17}, [r0]
   1b5e8:	add	r0, r6, r1, lsl #1
   1b5ec:	vmovn.i32	d16, q8
   1b5f0:	vst1.16	{d16}, [r0]
   1b5f4:	cmp	lr, sl
   1b5f8:	mov	r9, r8
   1b5fc:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b600:	add	r0, sp, #168	; 0xa8
   1b604:	add	r2, r6, lr, lsl #1
   1b608:	add	r1, r0, lr, lsl #2
   1b60c:	sub	r0, sl, lr
   1b610:	ldr	r3, [r1], #4
   1b614:	subs	r0, r0, #1
   1b618:	strh	r3, [r2], #2
   1b61c:	bne	1b610 <ReadInt16Data+0x2340>
   1b620:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b624:	mov	r9, r6
   1b628:	mov	r1, #0
   1b62c:	ldr	r7, [sp, #128]	; 0x80
   1b630:	cmp	ip, #0
   1b634:	mov	r6, r9
   1b638:	beq	1b654 <ReadInt16Data+0x2384>
   1b63c:	add	r0, sp, #168	; 0xa8
   1b640:	add	r0, r0, r1, lsl #2
   1b644:	vld1.32	{d16-d17}, [r0]
   1b648:	add	r0, r6, r1, lsl #1
   1b64c:	vmovn.i32	d16, q8
   1b650:	vst1.16	{d16}, [r0]
   1b654:	cmp	lr, sl
   1b658:	mov	r9, r8
   1b65c:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b660:	add	r0, sp, #168	; 0xa8
   1b664:	add	r2, r6, lr, lsl #1
   1b668:	add	r1, r0, lr, lsl #2
   1b66c:	sub	r0, sl, lr
   1b670:	ldr	r3, [r1], #4
   1b674:	subs	r0, r0, #1
   1b678:	strh	r3, [r2], #2
   1b67c:	bne	1b670 <ReadInt16Data+0x23a0>
   1b680:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b684:	mov	r9, r6
   1b688:	mov	r1, #0
   1b68c:	ldr	r7, [sp, #128]	; 0x80
   1b690:	cmp	ip, #0
   1b694:	mov	r6, r9
   1b698:	beq	1b6b8 <ReadInt16Data+0x23e8>
   1b69c:	add	r0, sp, #168	; 0xa8
   1b6a0:	add	r0, r0, r1, lsl #2
   1b6a4:	vld1.32	{d16-d17}, [r0]
   1b6a8:	add	r0, r6, r1, lsl #1
   1b6ac:	vcvt.s32.f32	q8, q8
   1b6b0:	vmovn.i32	d16, q8
   1b6b4:	vst1.16	{d16}, [r0]
   1b6b8:	cmp	lr, sl
   1b6bc:	mov	r9, r8
   1b6c0:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b6c4:	add	r0, sp, #168	; 0xa8
   1b6c8:	add	r2, r6, lr, lsl #1
   1b6cc:	add	r1, r0, lr, lsl #2
   1b6d0:	sub	r0, sl, lr
   1b6d4:	vldr	s0, [r1]
   1b6d8:	add	r1, r1, #4
   1b6dc:	subs	r0, r0, #1
   1b6e0:	vcvt.s32.f32	s0, s0
   1b6e4:	vmov	r3, s0
   1b6e8:	strh	r3, [r2], #2
   1b6ec:	bne	1b6d4 <ReadInt16Data+0x2404>
   1b6f0:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b6f4:	mov	lr, r6
   1b6f8:	mov	ip, r7
   1b6fc:	mov	r1, #0
   1b700:	cmp	r2, #0
   1b704:	mov	r7, ip
   1b708:	mov	r6, lr
   1b70c:	beq	1b72c <ReadInt16Data+0x245c>
   1b710:	add	r2, sp, #168	; 0xa8
   1b714:	add	r2, r2, r1, lsl #3
   1b718:	add	r1, r6, r1, lsl #1
   1b71c:	vld1.64	{d16-d17}, [r2]
   1b720:	vmovn.i64	d16, q8
   1b724:	vuzp.16	d16, d17
   1b728:	vst1.32	{d16[0]}, [r1]
   1b72c:	cmp	r0, sl
   1b730:	beq	1b958 <ReadInt16Data+0x2688>
   1b734:	add	r1, sp, #168	; 0xa8
   1b738:	add	r2, r6, r0, lsl #1
   1b73c:	add	r1, r1, r0, lsl #3
   1b740:	sub	r0, sl, r0
   1b744:	ldrh	r3, [r1], #8
   1b748:	subs	r0, r0, #1
   1b74c:	strh	r3, [r2], #2
   1b750:	bne	1b744 <ReadInt16Data+0x2474>
   1b754:	b	1b958 <ReadInt16Data+0x2688>
   1b758:	mov	r2, #0
   1b75c:	cmp	ip, #0
   1b760:	mov	r7, r6
   1b764:	beq	1b788 <ReadInt16Data+0x24b8>
   1b768:	add	r1, sp, #168	; 0xa8
   1b76c:	ldr	r0, [sp]
   1b770:	add	r1, r1, r2, lsl #2
   1b774:	vld1.32	{d16-d17}, [r1]
   1b778:	add	r1, r2, sl
   1b77c:	add	r1, r0, r1, lsl #1
   1b780:	vmovn.i32	d16, q8
   1b784:	vst1.16	{d16}, [r1]
   1b788:	ldr	r0, [sp, #128]	; 0x80
   1b78c:	mov	r4, r9
   1b790:	cmp	r0, lr
   1b794:	beq	1bcf8 <ReadInt16Data+0x2a28>
   1b798:	ldr	r0, [sp]
   1b79c:	add	r2, lr, r4
   1b7a0:	ldr	r3, [sp, #124]	; 0x7c
   1b7a4:	add	r1, sp, #168	; 0xa8
   1b7a8:	add	r1, r1, lr, lsl #2
   1b7ac:	add	r2, r0, r2, lsl #1
   1b7b0:	ldr	r0, [sp, #4]
   1b7b4:	sub	r3, r0, r3
   1b7b8:	sub	r0, r3, lr
   1b7bc:	sub	r0, r0, #256	; 0x100
   1b7c0:	ldr	r3, [r1], #4
   1b7c4:	subs	r0, r0, #1
   1b7c8:	strh	r3, [r2], #2
   1b7cc:	bne	1b7c0 <ReadInt16Data+0x24f0>
   1b7d0:	b	1bcf8 <ReadInt16Data+0x2a28>
   1b7d4:	mov	r2, #0
   1b7d8:	cmp	ip, #0
   1b7dc:	mov	r7, r6
   1b7e0:	beq	1b804 <ReadInt16Data+0x2534>
   1b7e4:	add	r1, sp, #168	; 0xa8
   1b7e8:	ldr	r0, [sp]
   1b7ec:	add	r1, r1, r2, lsl #2
   1b7f0:	vld1.32	{d16-d17}, [r1]
   1b7f4:	add	r1, r2, sl
   1b7f8:	add	r1, r0, r1, lsl #1
   1b7fc:	vmovn.i32	d16, q8
   1b800:	vst1.16	{d16}, [r1]
   1b804:	ldr	r0, [sp, #128]	; 0x80
   1b808:	mov	r4, r9
   1b80c:	cmp	r0, lr
   1b810:	beq	1bcf8 <ReadInt16Data+0x2a28>
   1b814:	ldr	r0, [sp]
   1b818:	add	r2, lr, r4
   1b81c:	ldr	r3, [sp, #124]	; 0x7c
   1b820:	add	r1, sp, #168	; 0xa8
   1b824:	add	r1, r1, lr, lsl #2
   1b828:	add	r2, r0, r2, lsl #1
   1b82c:	ldr	r0, [sp, #4]
   1b830:	sub	r3, r0, r3
   1b834:	sub	r0, r3, lr
   1b838:	sub	r0, r0, #256	; 0x100
   1b83c:	ldr	r3, [r1], #4
   1b840:	subs	r0, r0, #1
   1b844:	strh	r3, [r2], #2
   1b848:	bne	1b83c <ReadInt16Data+0x256c>
   1b84c:	b	1bcf8 <ReadInt16Data+0x2a28>
   1b850:	mov	r2, #0
   1b854:	ldr	r3, [sp]
   1b858:	cmp	ip, #0
   1b85c:	mov	r7, lr
   1b860:	beq	1b884 <ReadInt16Data+0x25b4>
   1b864:	add	r1, sp, #168	; 0xa8
   1b868:	add	r1, r1, r2, lsl #2
   1b86c:	vld1.32	{d16-d17}, [r1]
   1b870:	add	r1, r2, sl
   1b874:	add	r1, r3, r1, lsl #1
   1b878:	vcvt.s32.f32	q8, q8
   1b87c:	vmovn.i32	d16, q8
   1b880:	vst1.16	{d16}, [r1]
   1b884:	ldr	r1, [sp, #128]	; 0x80
   1b888:	ldr	r6, [sp, #124]	; 0x7c
   1b88c:	cmp	r1, r0
   1b890:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1b894:	add	r2, r0, r6
   1b898:	ldr	r6, [sp, #120]	; 0x78
   1b89c:	add	r1, sp, #168	; 0xa8
   1b8a0:	add	r2, r3, r2, lsl #1
   1b8a4:	ldr	r3, [sp, #4]
   1b8a8:	add	r1, r1, r0, lsl #2
   1b8ac:	sub	r3, r3, r6
   1b8b0:	sub	r0, r3, r0
   1b8b4:	sub	r0, r0, #256	; 0x100
   1b8b8:	vldr	s0, [r1]
   1b8bc:	add	r1, r1, #4
   1b8c0:	subs	r0, r0, #1
   1b8c4:	vcvt.s32.f32	s0, s0
   1b8c8:	vmov	r3, s0
   1b8cc:	strh	r3, [r2], #2
   1b8d0:	bne	1b8b8 <ReadInt16Data+0x25e8>
   1b8d4:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b8d8:	mov	r2, #0
   1b8dc:	cmp	ip, #0
   1b8e0:	mov	r7, r1
   1b8e4:	beq	1b90c <ReadInt16Data+0x263c>
   1b8e8:	add	r1, sp, #168	; 0xa8
   1b8ec:	add	r1, r1, r2, lsl #3
   1b8f0:	vld1.64	{d16-d17}, [r1]
   1b8f4:	add	r1, r2, r4
   1b8f8:	ldr	r2, [sp]
   1b8fc:	add	r1, r2, r1, lsl #1
   1b900:	vmovn.i64	d16, q8
   1b904:	vuzp.16	d16, d17
   1b908:	vst1.32	{d16[0]}, [r1]
   1b90c:	cmp	lr, r0
   1b910:	bne	1b91c <ReadInt16Data+0x264c>
   1b914:	ldr	r6, [sp]
   1b918:	b	1b954 <ReadInt16Data+0x2684>
   1b91c:	ldr	r2, [sp, #124]	; 0x7c
   1b920:	ldr	r3, [sp, #120]	; 0x78
   1b924:	ldr	r6, [sp]
   1b928:	add	r1, sp, #168	; 0xa8
   1b92c:	add	r1, r1, r0, lsl #3
   1b930:	add	r2, r0, r2
   1b934:	sub	r3, sl, r3
   1b938:	sub	r0, r3, r0
   1b93c:	add	r2, r6, r2, lsl #1
   1b940:	sub	r0, r0, #256	; 0x100
   1b944:	ldrh	r3, [r1], #8
   1b948:	subs	r0, r0, #1
   1b94c:	strh	r3, [r2], #2
   1b950:	bne	1b944 <ReadInt16Data+0x2674>
   1b954:	ldr	r8, [sp, #128]	; 0x80
   1b958:	ldr	r4, [sp, #116]	; 0x74
   1b95c:	cmp	r4, #13
   1b960:	bne	1bdd8 <ReadInt16Data+0x2b08>
   1b964:	ldr	r0, [r8, #20]
   1b968:	cmp	r0, #0
   1b96c:	beq	1b9b8 <ReadInt16Data+0x26e8>
   1b970:	cmp	sl, #256	; 0x100
   1b974:	bgt	1ba68 <ReadInt16Data+0x2798>
   1b978:	ldr	r3, [r8]
   1b97c:	add	r4, sp, #168	; 0xa8
   1b980:	mov	r1, r9
   1b984:	mov	r2, sl
   1b988:	mov	r0, r4
   1b98c:	bl	18b8 <fread@plt>
   1b990:	add	r7, r0, r7
   1b994:	cmp	sl, #1
   1b998:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1b99c:	mov	r0, r4
   1b9a0:	bl	1bd4 <Mat_uint64Swap>
   1b9a4:	strh	r0, [r6], #2
   1b9a8:	add	r4, r4, #8
   1b9ac:	subs	sl, sl, #1
   1b9b0:	bne	1b99c <ReadInt16Data+0x26cc>
   1b9b4:	b	1bdd8 <ReadInt16Data+0x2b08>
   1b9b8:	cmp	sl, #256	; 0x100
   1b9bc:	str	r8, [sp, #128]	; 0x80
   1b9c0:	bgt	1bb5c <ReadInt16Data+0x288c>
   1b9c4:	ldr	r0, [sp, #128]	; 0x80
   1b9c8:	add	r5, sp, #168	; 0xa8
   1b9cc:	mov	r1, r9
   1b9d0:	mov	r2, sl
   1b9d4:	mov	r8, r6
   1b9d8:	ldr	r3, [r0]
   1b9dc:	mov	r0, r5
   1b9e0:	bl	18b8 <fread@plt>
   1b9e4:	add	r7, r0, r7
   1b9e8:	cmp	sl, #1
   1b9ec:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1b9f0:	mov	r0, #0
   1b9f4:	beq	1bd3c <ReadInt16Data+0x2a6c>
   1b9f8:	bic	r0, sl, #1
   1b9fc:	mov	r2, #1
   1ba00:	mov	ip, r7
   1ba04:	subs	r1, r0, #2
   1ba08:	add	r1, r2, r1, lsr #1
   1ba0c:	and	r2, r1, #1
   1ba10:	beq	1bd08 <ReadInt16Data+0x2a38>
   1ba14:	sub	r3, r1, r2
   1ba18:	mov	r1, #0
   1ba1c:	mov	r7, #32
   1ba20:	mov	r6, r8
   1ba24:	mov	r4, r5
   1ba28:	vld1.64	{d16-d17}, [r4], r7
   1ba2c:	add	r5, r5, #16
   1ba30:	subs	r3, r3, #2
   1ba34:	add	r1, r1, #4
   1ba38:	vmovn.i64	d16, q8
   1ba3c:	vuzp.16	d16, d17
   1ba40:	vst1.32	{d16[0]}, [r6]
   1ba44:	vld1.64	{d16-d17}, [r5]
   1ba48:	add	r5, r6, #4
   1ba4c:	add	r6, r6, #8
   1ba50:	vmovn.i64	d16, q8
   1ba54:	vuzp.16	d16, d17
   1ba58:	vst1.32	{d16[0]}, [r5]
   1ba5c:	mov	r5, r4
   1ba60:	bne	1ba28 <ReadInt16Data+0x2758>
   1ba64:	b	1bd0c <ReadInt16Data+0x2a3c>
   1ba68:	sub	r0, sl, #256	; 0x100
   1ba6c:	mov	r5, r6
   1ba70:	add	r1, r6, #512	; 0x200
   1ba74:	str	r8, [sp, #128]	; 0x80
   1ba78:	str	sl, [sp, #4]
   1ba7c:	str	r0, [sp, #120]	; 0x78
   1ba80:	mov	r0, #0
   1ba84:	str	r0, [sp, #124]	; 0x7c
   1ba88:	ldr	r0, [sp, #128]	; 0x80
   1ba8c:	add	r4, sp, #168	; 0xa8
   1ba90:	mov	sl, r1
   1ba94:	mov	r1, r9
   1ba98:	mov	r2, #256	; 0x100
   1ba9c:	mov	r8, r7
   1baa0:	ldr	r3, [r0]
   1baa4:	mov	r0, r4
   1baa8:	bl	18b8 <fread@plt>
   1baac:	mov	r6, r0
   1bab0:	mov	r7, #0
   1bab4:	mov	r0, r4
   1bab8:	add	r9, r5, r7
   1babc:	bl	1bd4 <Mat_uint64Swap>
   1bac0:	add	r7, r7, #2
   1bac4:	add	r4, r4, #8
   1bac8:	strh	r0, [r9]
   1bacc:	cmp	r7, #512	; 0x200
   1bad0:	bne	1bab4 <ReadInt16Data+0x27e4>
   1bad4:	ldr	r0, [sp, #124]	; 0x7c
   1bad8:	ldr	r2, [sp, #120]	; 0x78
   1badc:	ldr	r9, [sp, #132]	; 0x84
   1bae0:	mov	r7, r8
   1bae4:	add	r7, r6, r8
   1bae8:	add	r5, r5, #512	; 0x200
   1baec:	add	r1, sl, #512	; 0x200
   1baf0:	add	r0, r0, #256	; 0x100
   1baf4:	cmp	r0, r2
   1baf8:	blt	1ba84 <ReadInt16Data+0x27b4>
   1bafc:	ldr	r6, [sp, #4]
   1bb00:	cmp	r0, r6
   1bb04:	bge	1bdd8 <ReadInt16Data+0x2b08>
   1bb08:	sub	r8, r6, r0
   1bb0c:	ldr	r0, [sp, #128]	; 0x80
   1bb10:	add	r4, sp, #168	; 0xa8
   1bb14:	mov	r1, r9
   1bb18:	mov	r2, r8
   1bb1c:	ldr	r3, [r0]
   1bb20:	mov	r0, r4
   1bb24:	bl	18b8 <fread@plt>
   1bb28:	add	r7, r0, r7
   1bb2c:	cmp	r8, #1
   1bb30:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1bb34:	ldr	r0, [sp, #124]	; 0x7c
   1bb38:	sub	r0, r6, r0
   1bb3c:	sub	r6, r0, #256	; 0x100
   1bb40:	mov	r0, r4
   1bb44:	bl	1bd4 <Mat_uint64Swap>
   1bb48:	strh	r0, [sl], #2
   1bb4c:	add	r4, r4, #8
   1bb50:	subs	r6, r6, #1
   1bb54:	bne	1bb40 <ReadInt16Data+0x2870>
   1bb58:	b	1bdd8 <ReadInt16Data+0x2b08>
   1bb5c:	sub	r1, sl, #256	; 0x100
   1bb60:	str	sl, [sp, #4]
   1bb64:	add	r0, r6, #512	; 0x200
   1bb68:	mov	sl, #0
   1bb6c:	mov	r9, r6
   1bb70:	mov	r5, #32
   1bb74:	str	r6, [sp]
   1bb78:	str	r1, [sp, #120]	; 0x78
   1bb7c:	mov	r1, #256	; 0x100
   1bb80:	mov	r8, r0
   1bb84:	ldr	r0, [sp, #128]	; 0x80
   1bb88:	str	r1, [sp, #124]	; 0x7c
   1bb8c:	ldr	r1, [sp, #132]	; 0x84
   1bb90:	add	r4, sp, #168	; 0xa8
   1bb94:	mov	r2, #256	; 0x100
   1bb98:	mov	r6, r7
   1bb9c:	ldr	r3, [r0]
   1bba0:	mov	r0, r4
   1bba4:	bl	18b8 <fread@plt>
   1bba8:	mov	r1, #0
   1bbac:	mov	r3, r4
   1bbb0:	mov	r2, r4
   1bbb4:	vld1.64	{d16-d17}, [r2], r5
   1bbb8:	mov	r7, r9
   1bbbc:	add	r3, r3, #16
   1bbc0:	vmovn.i64	d16, q8
   1bbc4:	vuzp.16	d16, d17
   1bbc8:	vmov.32	r4, d16[0]
   1bbcc:	str	r4, [r7, r1]!
   1bbd0:	add	r1, r1, #8
   1bbd4:	vld1.64	{d16-d17}, [r3]
   1bbd8:	add	r3, r7, #4
   1bbdc:	cmp	r1, #512	; 0x200
   1bbe0:	vmovn.i64	d16, q8
   1bbe4:	vuzp.16	d16, d17
   1bbe8:	vst1.32	{d16[0]}, [r3]
   1bbec:	mov	r3, r2
   1bbf0:	bne	1bbb4 <ReadInt16Data+0x28e4>
   1bbf4:	mov	r7, r6
   1bbf8:	add	r7, r0, r6
   1bbfc:	ldr	r6, [sp, #124]	; 0x7c
   1bc00:	ldr	r2, [sp, #120]	; 0x78
   1bc04:	mov	r4, sl
   1bc08:	add	sl, sl, #256	; 0x100
   1bc0c:	add	r9, r9, #512	; 0x200
   1bc10:	add	r0, r8, #512	; 0x200
   1bc14:	add	r1, r6, #256	; 0x100
   1bc18:	cmp	sl, r2
   1bc1c:	blt	1bb80 <ReadInt16Data+0x28b0>
   1bc20:	ldr	r0, [sp, #4]
   1bc24:	str	r4, [sp, #120]	; 0x78
   1bc28:	cmp	sl, r0
   1bc2c:	bge	1bcf8 <ReadInt16Data+0x2a28>
   1bc30:	sub	r4, r0, sl
   1bc34:	ldr	r0, [sp, #128]	; 0x80
   1bc38:	ldr	r9, [sp, #132]	; 0x84
   1bc3c:	add	r5, sp, #168	; 0xa8
   1bc40:	mov	r2, r4
   1bc44:	ldr	r3, [r0]
   1bc48:	mov	r0, r5
   1bc4c:	mov	r1, r9
   1bc50:	bl	18b8 <fread@plt>
   1bc54:	add	r7, r0, r7
   1bc58:	cmp	r4, #1
   1bc5c:	blt	1bdd8 <ReadInt16Data+0x2b08>
   1bc60:	mov	r0, #0
   1bc64:	beq	1bda0 <ReadInt16Data+0x2ad0>
   1bc68:	bic	r0, r4, #1
   1bc6c:	mov	r2, #1
   1bc70:	subs	r1, r0, #2
   1bc74:	add	r1, r2, r1, lsr #1
   1bc78:	and	ip, r1, #1
   1bc7c:	mov	r1, r7
   1bc80:	beq	1bd60 <ReadInt16Data+0x2a90>
   1bc84:	ldr	r3, [sp, #4]
   1bc88:	ldr	r7, [sp, #120]	; 0x78
   1bc8c:	mov	r6, r5
   1bc90:	sub	r3, r3, r7
   1bc94:	sub	r3, r3, #256	; 0x100
   1bc98:	bic	r3, r3, #1
   1bc9c:	sub	r3, r3, #2
   1bca0:	add	r2, r2, r3, lsr #1
   1bca4:	mvn	r7, r3, lsr #1
   1bca8:	and	r2, r2, #1
   1bcac:	add	r3, r7, r2
   1bcb0:	mov	r2, #0
   1bcb4:	mov	r7, #32
   1bcb8:	vld1.64	{d16-d17}, [r6], r7
   1bcbc:	add	r5, r5, #16
   1bcc0:	adds	r3, r3, #2
   1bcc4:	add	r2, r2, #4
   1bcc8:	vmovn.i64	d16, q8
   1bccc:	vuzp.16	d16, d17
   1bcd0:	vst1.32	{d16[0]}, [r8]
   1bcd4:	vld1.64	{d16-d17}, [r5]
   1bcd8:	add	r5, r8, #4
   1bcdc:	add	r8, r8, #8
   1bce0:	vmovn.i64	d16, q8
   1bce4:	vuzp.16	d16, d17
   1bce8:	vst1.32	{d16[0]}, [r5]
   1bcec:	mov	r5, r6
   1bcf0:	bne	1bcb8 <ReadInt16Data+0x29e8>
   1bcf4:	b	1bd64 <ReadInt16Data+0x2a94>
   1bcf8:	ldr	r9, [sp, #132]	; 0x84
   1bcfc:	mul	r0, r7, r9
   1bd00:	sub	sp, fp, #28
   1bd04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd08:	mov	r1, #0
   1bd0c:	cmp	r2, #0
   1bd10:	mov	r7, ip
   1bd14:	beq	1bd34 <ReadInt16Data+0x2a64>
   1bd18:	add	r2, sp, #168	; 0xa8
   1bd1c:	add	r2, r2, r1, lsl #3
   1bd20:	add	r1, r8, r1, lsl #1
   1bd24:	vld1.64	{d16-d17}, [r2]
   1bd28:	vmovn.i64	d16, q8
   1bd2c:	vuzp.16	d16, d17
   1bd30:	vst1.32	{d16[0]}, [r1]
   1bd34:	cmp	r0, sl
   1bd38:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1bd3c:	add	r1, sp, #168	; 0xa8
   1bd40:	add	r2, r8, r0, lsl #1
   1bd44:	add	r1, r1, r0, lsl #3
   1bd48:	sub	r0, sl, r0
   1bd4c:	ldrh	r3, [r1], #8
   1bd50:	subs	r0, r0, #1
   1bd54:	strh	r3, [r2], #2
   1bd58:	bne	1bd4c <ReadInt16Data+0x2a7c>
   1bd5c:	b	1bdd8 <ReadInt16Data+0x2b08>
   1bd60:	mov	r2, #0
   1bd64:	ldr	r6, [sp, #124]	; 0x7c
   1bd68:	cmp	ip, #0
   1bd6c:	mov	r7, r1
   1bd70:	beq	1bd98 <ReadInt16Data+0x2ac8>
   1bd74:	add	r1, sp, #168	; 0xa8
   1bd78:	add	r1, r1, r2, lsl #3
   1bd7c:	vld1.64	{d16-d17}, [r1]
   1bd80:	add	r1, r2, sl
   1bd84:	ldr	r2, [sp]
   1bd88:	add	r1, r2, r1, lsl #1
   1bd8c:	vmovn.i64	d16, q8
   1bd90:	vuzp.16	d16, d17
   1bd94:	vst1.32	{d16[0]}, [r1]
   1bd98:	cmp	r4, r0
   1bd9c:	beq	1bdd8 <ReadInt16Data+0x2b08>
   1bda0:	ldr	r3, [sp]
   1bda4:	add	r2, r0, r6
   1bda8:	ldr	r6, [sp, #120]	; 0x78
   1bdac:	add	r1, sp, #168	; 0xa8
   1bdb0:	add	r1, r1, r0, lsl #3
   1bdb4:	add	r2, r3, r2, lsl #1
   1bdb8:	ldr	r3, [sp, #4]
   1bdbc:	sub	r3, r3, r6
   1bdc0:	sub	r0, r3, r0
   1bdc4:	sub	r0, r0, #256	; 0x100
   1bdc8:	ldrh	r3, [r1], #8
   1bdcc:	subs	r0, r0, #1
   1bdd0:	strh	r3, [r2], #2
   1bdd4:	bne	1bdc8 <ReadInt16Data+0x2af8>
   1bdd8:	mul	r0, r7, r9
   1bddc:	sub	sp, fp, #28
   1bde0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bde4 <ReadCompressedInt16Data>:
   1bde4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bde8:	add	fp, sp, #28
   1bdec:	sub	sp, sp, #12
   1bdf0:	mov	r7, r0
   1bdf4:	mov	r0, #0
   1bdf8:	cmp	r1, #0
   1bdfc:	beq	1be10 <ReadCompressedInt16Data+0x2c>
   1be00:	cmp	r7, #0
   1be04:	movne	r5, r2
   1be08:	cmpne	r2, #0
   1be0c:	bne	1be18 <ReadCompressedInt16Data+0x34>
   1be10:	sub	sp, fp, #28
   1be14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be18:	ldr	sl, [fp, #8]
   1be1c:	mov	r0, r3
   1be20:	mov	r4, r3
   1be24:	mov	r6, r1
   1be28:	bl	1924 <Mat_SizeOf@plt>
   1be2c:	mov	r9, r0
   1be30:	sub	r0, r4, #1
   1be34:	cmp	r0, #12
   1be38:	bhi	1c308 <ReadCompressedInt16Data+0x524>
   1be3c:	add	r1, pc, #4
   1be40:	ldr	r0, [r1, r0, lsl #2]
   1be44:	add	pc, r1, r0
   1be48:	.word	0x00000034
   1be4c:	.word	0x0000006c
   1be50:	.word	0x000000a4
   1be54:	.word	0x000000ec
   1be58:	.word	0x00000134
   1be5c:	.word	0x0000017c
   1be60:	.word	0x000001c4
   1be64:	.word	0x000004c0
   1be68:	.word	0x00000214
   1be6c:	.word	0x000004c0
   1be70:	.word	0x000004c0
   1be74:	.word	0x00000264
   1be78:	.word	0x000002ac
   1be7c:	cmp	sl, #1
   1be80:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1be84:	mov	r8, sp
   1be88:	mov	r4, sl
   1be8c:	mov	r0, r7
   1be90:	mov	r1, r6
   1be94:	mov	r2, r8
   1be98:	mov	r3, r9
   1be9c:	bl	34ac <InflateData>
   1bea0:	ldrsb	r0, [sp]
   1bea4:	subs	r4, r4, #1
   1bea8:	strh	r0, [r5], #2
   1beac:	bne	1be8c <ReadCompressedInt16Data+0xa8>
   1beb0:	b	1c308 <ReadCompressedInt16Data+0x524>
   1beb4:	cmp	sl, #1
   1beb8:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1bebc:	mov	r8, sp
   1bec0:	mov	r4, sl
   1bec4:	mov	r0, r7
   1bec8:	mov	r1, r6
   1becc:	mov	r2, r8
   1bed0:	mov	r3, r9
   1bed4:	bl	34ac <InflateData>
   1bed8:	ldrb	r0, [sp]
   1bedc:	subs	r4, r4, #1
   1bee0:	strh	r0, [r5], #2
   1bee4:	bne	1bec4 <ReadCompressedInt16Data+0xe0>
   1bee8:	b	1c308 <ReadCompressedInt16Data+0x524>
   1beec:	ldr	r0, [r7, #20]
   1bef0:	cmp	r0, #0
   1bef4:	beq	1c13c <ReadCompressedInt16Data+0x358>
   1bef8:	cmp	sl, #1
   1befc:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1bf00:	mov	r8, sp
   1bf04:	mov	r4, sl
   1bf08:	mov	r0, r7
   1bf0c:	mov	r1, r6
   1bf10:	mov	r2, r8
   1bf14:	mov	r3, r9
   1bf18:	bl	34ac <InflateData>
   1bf1c:	mov	r0, r8
   1bf20:	bl	1c20 <Mat_int16Swap>
   1bf24:	strh	r0, [r5], #2
   1bf28:	subs	r4, r4, #1
   1bf2c:	bne	1bf08 <ReadCompressedInt16Data+0x124>
   1bf30:	b	1c308 <ReadCompressedInt16Data+0x524>
   1bf34:	ldr	r0, [r7, #20]
   1bf38:	cmp	r0, #0
   1bf3c:	beq	1c174 <ReadCompressedInt16Data+0x390>
   1bf40:	cmp	sl, #1
   1bf44:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1bf48:	mov	r8, sp
   1bf4c:	mov	r4, sl
   1bf50:	mov	r0, r7
   1bf54:	mov	r1, r6
   1bf58:	mov	r2, r8
   1bf5c:	mov	r3, r9
   1bf60:	bl	34ac <InflateData>
   1bf64:	mov	r0, r8
   1bf68:	bl	1c34 <Mat_uint16Swap>
   1bf6c:	strh	r0, [r5], #2
   1bf70:	subs	r4, r4, #1
   1bf74:	bne	1bf50 <ReadCompressedInt16Data+0x16c>
   1bf78:	b	1c308 <ReadCompressedInt16Data+0x524>
   1bf7c:	ldr	r0, [r7, #20]
   1bf80:	cmp	r0, #0
   1bf84:	beq	1c1ac <ReadCompressedInt16Data+0x3c8>
   1bf88:	cmp	sl, #1
   1bf8c:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1bf90:	mov	r8, sp
   1bf94:	mov	r4, sl
   1bf98:	mov	r0, r7
   1bf9c:	mov	r1, r6
   1bfa0:	mov	r2, r8
   1bfa4:	mov	r3, r9
   1bfa8:	bl	34ac <InflateData>
   1bfac:	mov	r0, r8
   1bfb0:	bl	1bf8 <Mat_int32Swap>
   1bfb4:	strh	r0, [r5], #2
   1bfb8:	subs	r4, r4, #1
   1bfbc:	bne	1bf98 <ReadCompressedInt16Data+0x1b4>
   1bfc0:	b	1c308 <ReadCompressedInt16Data+0x524>
   1bfc4:	ldr	r0, [r7, #20]
   1bfc8:	cmp	r0, #0
   1bfcc:	beq	1c1e4 <ReadCompressedInt16Data+0x400>
   1bfd0:	cmp	sl, #1
   1bfd4:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1bfd8:	mov	r8, sp
   1bfdc:	mov	r4, sl
   1bfe0:	mov	r0, r7
   1bfe4:	mov	r1, r6
   1bfe8:	mov	r2, r8
   1bfec:	mov	r3, r9
   1bff0:	bl	34ac <InflateData>
   1bff4:	mov	r0, r8
   1bff8:	bl	1c0c <Mat_uint32Swap>
   1bffc:	strh	r0, [r5], #2
   1c000:	subs	r4, r4, #1
   1c004:	bne	1bfe0 <ReadCompressedInt16Data+0x1fc>
   1c008:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c00c:	ldr	r0, [r7, #20]
   1c010:	cmp	r0, #0
   1c014:	beq	1c21c <ReadCompressedInt16Data+0x438>
   1c018:	cmp	sl, #1
   1c01c:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c020:	mov	r8, sp
   1c024:	mov	r4, sl
   1c028:	mov	r0, r7
   1c02c:	mov	r1, r6
   1c030:	mov	r2, r8
   1c034:	mov	r3, r9
   1c038:	bl	34ac <InflateData>
   1c03c:	mov	r0, r8
   1c040:	bl	1c4c <Mat_floatSwap>
   1c044:	vcvt.s32.f32	s0, s0
   1c048:	subs	r4, r4, #1
   1c04c:	vmov	r0, s0
   1c050:	strh	r0, [r5], #2
   1c054:	bne	1c028 <ReadCompressedInt16Data+0x244>
   1c058:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c05c:	ldr	r0, [r7, #20]
   1c060:	cmp	r0, #0
   1c064:	beq	1c25c <ReadCompressedInt16Data+0x478>
   1c068:	cmp	sl, #1
   1c06c:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c070:	mov	r8, sp
   1c074:	mov	r4, sl
   1c078:	mov	r0, r7
   1c07c:	mov	r1, r6
   1c080:	mov	r2, r8
   1c084:	mov	r3, r9
   1c088:	bl	34ac <InflateData>
   1c08c:	mov	r0, r8
   1c090:	bl	1c90 <Mat_doubleSwap>
   1c094:	vcvt.s32.f64	s0, d0
   1c098:	subs	r4, r4, #1
   1c09c:	vmov	r0, s0
   1c0a0:	strh	r0, [r5], #2
   1c0a4:	bne	1c078 <ReadCompressedInt16Data+0x294>
   1c0a8:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c0ac:	ldr	r0, [r7, #20]
   1c0b0:	cmp	r0, #0
   1c0b4:	beq	1c29c <ReadCompressedInt16Data+0x4b8>
   1c0b8:	cmp	sl, #1
   1c0bc:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c0c0:	mov	r8, sp
   1c0c4:	mov	r4, sl
   1c0c8:	mov	r0, r7
   1c0cc:	mov	r1, r6
   1c0d0:	mov	r2, r8
   1c0d4:	mov	r3, r9
   1c0d8:	bl	34ac <InflateData>
   1c0dc:	mov	r0, r8
   1c0e0:	bl	1b84 <Mat_int64Swap>
   1c0e4:	strh	r0, [r5], #2
   1c0e8:	subs	r4, r4, #1
   1c0ec:	bne	1c0c8 <ReadCompressedInt16Data+0x2e4>
   1c0f0:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c0f4:	ldr	r0, [r7, #20]
   1c0f8:	cmp	r0, #0
   1c0fc:	beq	1c2d4 <ReadCompressedInt16Data+0x4f0>
   1c100:	cmp	sl, #1
   1c104:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c108:	mov	r8, sp
   1c10c:	mov	r4, sl
   1c110:	mov	r0, r7
   1c114:	mov	r1, r6
   1c118:	mov	r2, r8
   1c11c:	mov	r3, r9
   1c120:	bl	34ac <InflateData>
   1c124:	mov	r0, r8
   1c128:	bl	1bd4 <Mat_uint64Swap>
   1c12c:	strh	r0, [r5], #2
   1c130:	subs	r4, r4, #1
   1c134:	bne	1c110 <ReadCompressedInt16Data+0x32c>
   1c138:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c13c:	cmp	sl, #1
   1c140:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c144:	mov	r8, sp
   1c148:	mov	r4, sl
   1c14c:	mov	r0, r7
   1c150:	mov	r1, r6
   1c154:	mov	r2, r8
   1c158:	mov	r3, r9
   1c15c:	bl	34ac <InflateData>
   1c160:	ldrh	r0, [sp]
   1c164:	subs	r4, r4, #1
   1c168:	strh	r0, [r5], #2
   1c16c:	bne	1c14c <ReadCompressedInt16Data+0x368>
   1c170:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c174:	cmp	sl, #1
   1c178:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c17c:	mov	r8, sp
   1c180:	mov	r4, sl
   1c184:	mov	r0, r7
   1c188:	mov	r1, r6
   1c18c:	mov	r2, r8
   1c190:	mov	r3, r9
   1c194:	bl	34ac <InflateData>
   1c198:	ldrh	r0, [sp]
   1c19c:	subs	r4, r4, #1
   1c1a0:	strh	r0, [r5], #2
   1c1a4:	bne	1c184 <ReadCompressedInt16Data+0x3a0>
   1c1a8:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c1ac:	cmp	sl, #1
   1c1b0:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c1b4:	mov	r8, sp
   1c1b8:	mov	r4, sl
   1c1bc:	mov	r0, r7
   1c1c0:	mov	r1, r6
   1c1c4:	mov	r2, r8
   1c1c8:	mov	r3, r9
   1c1cc:	bl	34ac <InflateData>
   1c1d0:	ldr	r0, [sp]
   1c1d4:	subs	r4, r4, #1
   1c1d8:	strh	r0, [r5], #2
   1c1dc:	bne	1c1bc <ReadCompressedInt16Data+0x3d8>
   1c1e0:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c1e4:	cmp	sl, #1
   1c1e8:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c1ec:	mov	r8, sp
   1c1f0:	mov	r4, sl
   1c1f4:	mov	r0, r7
   1c1f8:	mov	r1, r6
   1c1fc:	mov	r2, r8
   1c200:	mov	r3, r9
   1c204:	bl	34ac <InflateData>
   1c208:	ldr	r0, [sp]
   1c20c:	subs	r4, r4, #1
   1c210:	strh	r0, [r5], #2
   1c214:	bne	1c1f4 <ReadCompressedInt16Data+0x410>
   1c218:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c21c:	cmp	sl, #1
   1c220:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c224:	mov	r8, sp
   1c228:	mov	r4, sl
   1c22c:	mov	r0, r7
   1c230:	mov	r1, r6
   1c234:	mov	r2, r8
   1c238:	mov	r3, r9
   1c23c:	bl	34ac <InflateData>
   1c240:	vldr	s0, [sp]
   1c244:	subs	r4, r4, #1
   1c248:	vcvt.s32.f32	s0, s0
   1c24c:	vmov	r0, s0
   1c250:	strh	r0, [r5], #2
   1c254:	bne	1c22c <ReadCompressedInt16Data+0x448>
   1c258:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c25c:	cmp	sl, #1
   1c260:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c264:	mov	r8, sp
   1c268:	mov	r4, sl
   1c26c:	mov	r0, r7
   1c270:	mov	r1, r6
   1c274:	mov	r2, r8
   1c278:	mov	r3, r9
   1c27c:	bl	34ac <InflateData>
   1c280:	vldr	d16, [sp]
   1c284:	subs	r4, r4, #1
   1c288:	vcvt.s32.f64	s0, d16
   1c28c:	vmov	r0, s0
   1c290:	strh	r0, [r5], #2
   1c294:	bne	1c26c <ReadCompressedInt16Data+0x488>
   1c298:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c29c:	cmp	sl, #1
   1c2a0:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c2a4:	mov	r8, sp
   1c2a8:	mov	r4, sl
   1c2ac:	mov	r0, r7
   1c2b0:	mov	r1, r6
   1c2b4:	mov	r2, r8
   1c2b8:	mov	r3, r9
   1c2bc:	bl	34ac <InflateData>
   1c2c0:	ldrh	r0, [sp]
   1c2c4:	subs	r4, r4, #1
   1c2c8:	strh	r0, [r5], #2
   1c2cc:	bne	1c2ac <ReadCompressedInt16Data+0x4c8>
   1c2d0:	b	1c308 <ReadCompressedInt16Data+0x524>
   1c2d4:	cmp	sl, #1
   1c2d8:	blt	1c308 <ReadCompressedInt16Data+0x524>
   1c2dc:	mov	r8, sp
   1c2e0:	mov	r4, sl
   1c2e4:	mov	r0, r7
   1c2e8:	mov	r1, r6
   1c2ec:	mov	r2, r8
   1c2f0:	mov	r3, r9
   1c2f4:	bl	34ac <InflateData>
   1c2f8:	ldrh	r0, [sp]
   1c2fc:	subs	r4, r4, #1
   1c300:	strh	r0, [r5], #2
   1c304:	bne	1c2e4 <ReadCompressedInt16Data+0x500>
   1c308:	mul	r0, r9, sl
   1c30c:	sub	sp, fp, #28
   1c310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c314 <ReadUInt16Data>:
   1c314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c318:	add	fp, sp, #28
   1c31c:	sub	sp, sp, #172	; 0xac
   1c320:	sub	sp, sp, #2048	; 0x800
   1c324:	mov	r8, r0
   1c328:	mov	r0, #0
   1c32c:	cmp	r8, #0
   1c330:	movne	r6, r1
   1c334:	cmpne	r1, #0
   1c338:	bne	1c344 <ReadUInt16Data+0x30>
   1c33c:	sub	sp, fp, #28
   1c340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c344:	ldr	r1, [r8]
   1c348:	cmp	r1, #0
   1c34c:	beq	1c33c <ReadUInt16Data+0x28>
   1c350:	mov	r0, r2
   1c354:	mov	sl, r3
   1c358:	mov	r4, r2
   1c35c:	bl	1924 <Mat_SizeOf@plt>
   1c360:	mov	r9, r0
   1c364:	sub	r0, r4, #1
   1c368:	mov	r7, #0
   1c36c:	cmp	r0, #11
   1c370:	str	r9, [sp, #132]	; 0x84
   1c374:	bhi	1e9a0 <ReadUInt16Data+0x268c>
   1c378:	add	r1, sp, #168	; 0xa8
   1c37c:	add	r5, r1, #8
   1c380:	add	r1, pc, #4
   1c384:	ldr	r0, [r1, r0, lsl #2]
   1c388:	add	pc, r1, r0
   1c38c:	.word	0x00000030
   1c390:	.word	0x000000d0
   1c394:	.word	0x00000170
   1c398:	.word	0x000001c4
   1c39c:	.word	0x00000218
   1c3a0:	.word	0x0000026c
   1c3a4:	.word	0x000002c0
   1c3a8:	.word	0x00002614
   1c3ac:	.word	0x0000031c
   1c3b0:	.word	0x00002614
   1c3b4:	.word	0x00002614
   1c3b8:	.word	0x00000378
   1c3bc:	cmp	sl, #256	; 0x100
   1c3c0:	str	r6, [sp]
   1c3c4:	bgt	1c770 <ReadUInt16Data+0x45c>
   1c3c8:	ldr	r3, [r8]
   1c3cc:	add	r4, sp, #168	; 0xa8
   1c3d0:	mov	r1, r9
   1c3d4:	mov	r2, sl
   1c3d8:	mov	r0, r4
   1c3dc:	bl	18b8 <fread@plt>
   1c3e0:	mov	r7, r0
   1c3e4:	cmp	sl, #1
   1c3e8:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c3ec:	ldr	r6, [sp]
   1c3f0:	mov	r0, #0
   1c3f4:	cmp	sl, #8
   1c3f8:	bcc	1e44c <ReadUInt16Data+0x2138>
   1c3fc:	bic	r0, sl, #7
   1c400:	mov	r2, #1
   1c404:	mov	lr, r7
   1c408:	subs	r1, r0, #8
   1c40c:	add	r1, r2, r1, lsr #3
   1c410:	and	ip, r1, #1
   1c414:	beq	1e404 <ReadUInt16Data+0x20f0>
   1c418:	sub	r3, r1, ip
   1c41c:	mov	r1, #0
   1c420:	mov	r7, #32
   1c424:	mov	r8, r6
   1c428:	add	r5, r4, r1
   1c42c:	add	r2, r6, #16
   1c430:	subs	r3, r3, #2
   1c434:	add	r1, r1, #16
   1c438:	vld1.8	{d16}, [r5 :64]
   1c43c:	add	r5, r5, #8
   1c440:	vmovl.s8	q8, d16
   1c444:	vst1.16	{d16-d17}, [r6], r7
   1c448:	vld1.8	{d16}, [r5 :64]
   1c44c:	vmovl.s8	q8, d16
   1c450:	vst1.16	{d16-d17}, [r2]
   1c454:	bne	1c428 <ReadUInt16Data+0x114>
   1c458:	b	1e40c <ReadUInt16Data+0x20f8>
   1c45c:	cmp	sl, #256	; 0x100
   1c460:	str	r6, [sp]
   1c464:	bgt	1cbdc <ReadUInt16Data+0x8c8>
   1c468:	ldr	r3, [r8]
   1c46c:	add	r4, sp, #168	; 0xa8
   1c470:	mov	r1, r9
   1c474:	mov	r2, sl
   1c478:	mov	r0, r4
   1c47c:	bl	18b8 <fread@plt>
   1c480:	mov	r7, r0
   1c484:	cmp	sl, #1
   1c488:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c48c:	ldr	r6, [sp]
   1c490:	mov	r0, #0
   1c494:	cmp	sl, #8
   1c498:	bcc	1e4b8 <ReadUInt16Data+0x21a4>
   1c49c:	bic	r0, sl, #7
   1c4a0:	mov	r2, #1
   1c4a4:	subs	r1, r0, #8
   1c4a8:	add	r1, r2, r1, lsr #3
   1c4ac:	and	ip, r1, #1
   1c4b0:	beq	1e46c <ReadUInt16Data+0x2158>
   1c4b4:	mov	lr, r7
   1c4b8:	sub	r3, r1, ip
   1c4bc:	mov	r1, #0
   1c4c0:	mov	r7, #32
   1c4c4:	mov	r8, r6
   1c4c8:	add	r5, r4, r1
   1c4cc:	add	r2, r6, #16
   1c4d0:	subs	r3, r3, #2
   1c4d4:	add	r1, r1, #16
   1c4d8:	vld1.8	{d16}, [r5 :64]
   1c4dc:	add	r5, r5, #8
   1c4e0:	vmovl.u8	q8, d16
   1c4e4:	vst1.16	{d16-d17}, [r6], r7
   1c4e8:	vld1.8	{d16}, [r5 :64]
   1c4ec:	vmovl.u8	q8, d16
   1c4f0:	vst1.16	{d16-d17}, [r2]
   1c4f4:	bne	1c4c8 <ReadUInt16Data+0x1b4>
   1c4f8:	b	1e478 <ReadUInt16Data+0x2164>
   1c4fc:	ldr	r0, [r8, #20]
   1c500:	cmp	r0, #0
   1c504:	beq	1d048 <ReadUInt16Data+0xd34>
   1c508:	cmp	sl, #256	; 0x100
   1c50c:	bgt	1d480 <ReadUInt16Data+0x116c>
   1c510:	ldr	r3, [r8]
   1c514:	add	r4, sp, #168	; 0xa8
   1c518:	mov	r1, r9
   1c51c:	mov	r2, sl
   1c520:	mov	r0, r4
   1c524:	bl	18b8 <fread@plt>
   1c528:	mov	r7, r0
   1c52c:	cmp	sl, #1
   1c530:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c534:	mov	r0, r4
   1c538:	bl	1c20 <Mat_int16Swap>
   1c53c:	strh	r0, [r6], #2
   1c540:	add	r4, r4, #2
   1c544:	subs	sl, sl, #1
   1c548:	bne	1c534 <ReadUInt16Data+0x220>
   1c54c:	b	1ee1c <ReadUInt16Data+0x2b08>
   1c550:	ldr	r0, [r8, #20]
   1c554:	cmp	r0, #0
   1c558:	beq	1d10c <ReadUInt16Data+0xdf8>
   1c55c:	cmp	sl, #256	; 0x100
   1c560:	bgt	1d568 <ReadUInt16Data+0x1254>
   1c564:	ldr	r3, [r8]
   1c568:	add	r4, sp, #168	; 0xa8
   1c56c:	mov	r1, r9
   1c570:	mov	r2, sl
   1c574:	mov	r0, r4
   1c578:	bl	18b8 <fread@plt>
   1c57c:	mov	r7, r0
   1c580:	cmp	sl, #1
   1c584:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c588:	mov	r0, r4
   1c58c:	bl	1c34 <Mat_uint16Swap>
   1c590:	strh	r0, [r6], #2
   1c594:	add	r4, r4, #2
   1c598:	subs	sl, sl, #1
   1c59c:	bne	1c588 <ReadUInt16Data+0x274>
   1c5a0:	b	1ee1c <ReadUInt16Data+0x2b08>
   1c5a4:	ldr	r0, [r8, #20]
   1c5a8:	cmp	r0, #0
   1c5ac:	beq	1d154 <ReadUInt16Data+0xe40>
   1c5b0:	cmp	sl, #256	; 0x100
   1c5b4:	bgt	1d650 <ReadUInt16Data+0x133c>
   1c5b8:	ldr	r3, [r8]
   1c5bc:	add	r4, sp, #168	; 0xa8
   1c5c0:	mov	r1, r9
   1c5c4:	mov	r2, sl
   1c5c8:	mov	r0, r4
   1c5cc:	bl	18b8 <fread@plt>
   1c5d0:	mov	r7, r0
   1c5d4:	cmp	sl, #1
   1c5d8:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c5dc:	mov	r0, r4
   1c5e0:	bl	1bf8 <Mat_int32Swap>
   1c5e4:	strh	r0, [r6], #2
   1c5e8:	add	r4, r4, #4
   1c5ec:	subs	sl, sl, #1
   1c5f0:	bne	1c5dc <ReadUInt16Data+0x2c8>
   1c5f4:	b	1ee1c <ReadUInt16Data+0x2b08>
   1c5f8:	ldr	r0, [r8, #20]
   1c5fc:	cmp	r0, #0
   1c600:	beq	1d1f4 <ReadUInt16Data+0xee0>
   1c604:	cmp	sl, #256	; 0x100
   1c608:	bgt	1d748 <ReadUInt16Data+0x1434>
   1c60c:	ldr	r3, [r8]
   1c610:	add	r4, sp, #168	; 0xa8
   1c614:	mov	r1, r9
   1c618:	mov	r2, sl
   1c61c:	mov	r0, r4
   1c620:	bl	18b8 <fread@plt>
   1c624:	mov	r7, r0
   1c628:	cmp	sl, #1
   1c62c:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c630:	mov	r0, r4
   1c634:	bl	1c0c <Mat_uint32Swap>
   1c638:	strh	r0, [r6], #2
   1c63c:	add	r4, r4, #4
   1c640:	subs	sl, sl, #1
   1c644:	bne	1c630 <ReadUInt16Data+0x31c>
   1c648:	b	1ee1c <ReadUInt16Data+0x2b08>
   1c64c:	ldr	r0, [r8, #20]
   1c650:	cmp	r0, #0
   1c654:	beq	1d294 <ReadUInt16Data+0xf80>
   1c658:	cmp	sl, #256	; 0x100
   1c65c:	bgt	1d840 <ReadUInt16Data+0x152c>
   1c660:	ldr	r3, [r8]
   1c664:	add	r4, sp, #168	; 0xa8
   1c668:	mov	r1, r9
   1c66c:	mov	r2, sl
   1c670:	mov	r0, r4
   1c674:	bl	18b8 <fread@plt>
   1c678:	mov	r7, r0
   1c67c:	cmp	sl, #1
   1c680:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c684:	mov	r0, r4
   1c688:	bl	1c4c <Mat_floatSwap>
   1c68c:	vcvt.u32.f32	s0, s0
   1c690:	add	r4, r4, #4
   1c694:	subs	sl, sl, #1
   1c698:	vmov	r0, s0
   1c69c:	strh	r0, [r6], #2
   1c6a0:	bne	1c684 <ReadUInt16Data+0x370>
   1c6a4:	b	1ee1c <ReadUInt16Data+0x2b08>
   1c6a8:	ldr	r0, [r8, #20]
   1c6ac:	cmp	r0, #0
   1c6b0:	beq	1d33c <ReadUInt16Data+0x1028>
   1c6b4:	cmp	sl, #256	; 0x100
   1c6b8:	bgt	1d940 <ReadUInt16Data+0x162c>
   1c6bc:	ldr	r3, [r8]
   1c6c0:	add	r4, sp, #168	; 0xa8
   1c6c4:	mov	r1, r9
   1c6c8:	mov	r2, sl
   1c6cc:	mov	r0, r4
   1c6d0:	bl	18b8 <fread@plt>
   1c6d4:	mov	r7, r0
   1c6d8:	cmp	sl, #1
   1c6dc:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1c6e0:	mov	r0, r4
   1c6e4:	bl	1c90 <Mat_doubleSwap>
   1c6e8:	vcvt.u32.f64	s0, d0
   1c6ec:	add	r4, r4, #8
   1c6f0:	subs	sl, sl, #1
   1c6f4:	vmov	r0, s0
   1c6f8:	strh	r0, [r6], #2
   1c6fc:	bne	1c6e0 <ReadUInt16Data+0x3cc>
   1c700:	b	1ee1c <ReadUInt16Data+0x2b08>
   1c704:	ldr	r0, [r8, #20]
   1c708:	str	r4, [sp, #116]	; 0x74
   1c70c:	cmp	r0, #0
   1c710:	beq	1d3d8 <ReadUInt16Data+0x10c4>
   1c714:	cmp	sl, #256	; 0x100
   1c718:	bgt	1da40 <ReadUInt16Data+0x172c>
   1c71c:	ldr	r3, [r8]
   1c720:	mov	r4, r6
   1c724:	add	r6, sp, #168	; 0xa8
   1c728:	mov	r1, r9
   1c72c:	mov	r2, sl
   1c730:	mov	r0, r6
   1c734:	bl	18b8 <fread@plt>
   1c738:	mov	r7, r0
   1c73c:	cmp	sl, #1
   1c740:	blt	1e3c8 <ReadUInt16Data+0x20b4>
   1c744:	str	r8, [sp, #128]	; 0x80
   1c748:	mov	r8, r4
   1c74c:	mov	r5, sl
   1c750:	mov	r0, r6
   1c754:	bl	1b84 <Mat_int64Swap>
   1c758:	strh	r0, [r4], #2
   1c75c:	add	r6, r6, #8
   1c760:	subs	r5, r5, #1
   1c764:	bne	1c750 <ReadUInt16Data+0x43c>
   1c768:	mov	r6, r8
   1c76c:	b	1e998 <ReadUInt16Data+0x2684>
   1c770:	add	r0, r5, #240	; 0xf0
   1c774:	ldr	r4, [sp]
   1c778:	str	sl, [sp, #4]
   1c77c:	mov	r6, #0
   1c780:	mov	r7, #0
   1c784:	str	r0, [sp, #128]	; 0x80
   1c788:	add	r0, r5, #232	; 0xe8
   1c78c:	str	r0, [sp, #124]	; 0x7c
   1c790:	add	r0, r5, #224	; 0xe0
   1c794:	str	r0, [sp, #120]	; 0x78
   1c798:	add	r0, r5, #216	; 0xd8
   1c79c:	str	r0, [sp, #116]	; 0x74
   1c7a0:	add	r0, r5, #208	; 0xd0
   1c7a4:	str	r0, [sp, #112]	; 0x70
   1c7a8:	add	r0, r5, #200	; 0xc8
   1c7ac:	str	r0, [sp, #108]	; 0x6c
   1c7b0:	add	r0, r5, #192	; 0xc0
   1c7b4:	str	r0, [sp, #104]	; 0x68
   1c7b8:	add	r0, r5, #184	; 0xb8
   1c7bc:	str	r0, [sp, #100]	; 0x64
   1c7c0:	add	r0, r5, #176	; 0xb0
   1c7c4:	str	r0, [sp, #96]	; 0x60
   1c7c8:	add	r0, r5, #168	; 0xa8
   1c7cc:	str	r0, [sp, #92]	; 0x5c
   1c7d0:	add	r0, r5, #160	; 0xa0
   1c7d4:	str	r0, [sp, #88]	; 0x58
   1c7d8:	add	r0, r5, #152	; 0x98
   1c7dc:	str	r0, [sp, #84]	; 0x54
   1c7e0:	add	r0, r5, #144	; 0x90
   1c7e4:	str	r0, [sp, #80]	; 0x50
   1c7e8:	add	r0, r5, #136	; 0x88
   1c7ec:	str	r0, [sp, #76]	; 0x4c
   1c7f0:	add	r0, r5, #128	; 0x80
   1c7f4:	str	r0, [sp, #72]	; 0x48
   1c7f8:	add	r0, r5, #120	; 0x78
   1c7fc:	str	r0, [sp, #68]	; 0x44
   1c800:	add	r0, r5, #112	; 0x70
   1c804:	str	r0, [sp, #64]	; 0x40
   1c808:	add	r0, r5, #104	; 0x68
   1c80c:	str	r0, [sp, #60]	; 0x3c
   1c810:	add	r0, r5, #96	; 0x60
   1c814:	str	r0, [sp, #56]	; 0x38
   1c818:	add	r0, r5, #88	; 0x58
   1c81c:	str	r0, [sp, #52]	; 0x34
   1c820:	add	r0, r5, #80	; 0x50
   1c824:	str	r0, [sp, #48]	; 0x30
   1c828:	add	r0, r5, #72	; 0x48
   1c82c:	str	r0, [sp, #44]	; 0x2c
   1c830:	add	r0, r5, #64	; 0x40
   1c834:	str	r0, [sp, #40]	; 0x28
   1c838:	add	r0, r5, #56	; 0x38
   1c83c:	str	r0, [sp, #36]	; 0x24
   1c840:	add	r0, r5, #48	; 0x30
   1c844:	str	r0, [sp, #32]
   1c848:	add	r0, r5, #40	; 0x28
   1c84c:	str	r0, [sp, #28]
   1c850:	add	r0, r5, #32
   1c854:	str	r0, [sp, #24]
   1c858:	add	r0, r5, #24
   1c85c:	str	r0, [sp, #20]
   1c860:	add	r0, r5, #16
   1c864:	str	r0, [sp, #16]
   1c868:	add	r0, r5, #8
   1c86c:	str	r0, [sp, #12]
   1c870:	sub	r0, sl, #256	; 0x100
   1c874:	mov	sl, r4
   1c878:	str	r0, [sp, #8]
   1c87c:	ldr	r3, [r8]
   1c880:	ldr	r1, [sp, #132]	; 0x84
   1c884:	add	r9, sp, #168	; 0xa8
   1c888:	mov	r2, #256	; 0x100
   1c88c:	mov	r0, r9
   1c890:	bl	18b8 <fread@plt>
   1c894:	vld1.8	{d16}, [r9 :64]
   1c898:	mov	r1, #512	; 0x200
   1c89c:	add	r7, r0, r7
   1c8a0:	ldr	r0, [sp, #8]
   1c8a4:	add	r6, r6, #256	; 0x100
   1c8a8:	cmp	r6, r0
   1c8ac:	vmovl.s8	q8, d16
   1c8b0:	vst1.16	{d16-d17}, [sl], r1
   1c8b4:	add	r1, r4, #16
   1c8b8:	vld1.8	{d16}, [r5 :64]
   1c8bc:	vmovl.s8	q8, d16
   1c8c0:	vst1.16	{d16-d17}, [r1]
   1c8c4:	ldr	r1, [sp, #12]
   1c8c8:	vld1.8	{d16}, [r1 :64]
   1c8cc:	add	r1, r4, #32
   1c8d0:	vmovl.s8	q8, d16
   1c8d4:	vst1.16	{d16-d17}, [r1]
   1c8d8:	ldr	r1, [sp, #16]
   1c8dc:	vld1.8	{d16}, [r1 :64]
   1c8e0:	add	r1, r4, #48	; 0x30
   1c8e4:	vmovl.s8	q8, d16
   1c8e8:	vst1.16	{d16-d17}, [r1]
   1c8ec:	ldr	r1, [sp, #20]
   1c8f0:	vld1.8	{d16}, [r1 :64]
   1c8f4:	add	r1, r4, #64	; 0x40
   1c8f8:	vmovl.s8	q8, d16
   1c8fc:	vst1.16	{d16-d17}, [r1]
   1c900:	ldr	r1, [sp, #24]
   1c904:	vld1.8	{d16}, [r1 :64]
   1c908:	add	r1, r4, #80	; 0x50
   1c90c:	vmovl.s8	q8, d16
   1c910:	vst1.16	{d16-d17}, [r1]
   1c914:	ldr	r1, [sp, #28]
   1c918:	vld1.8	{d16}, [r1 :64]
   1c91c:	add	r1, r4, #96	; 0x60
   1c920:	vmovl.s8	q8, d16
   1c924:	vst1.16	{d16-d17}, [r1]
   1c928:	ldr	r1, [sp, #32]
   1c92c:	vld1.8	{d16}, [r1 :64]
   1c930:	add	r1, r4, #112	; 0x70
   1c934:	vmovl.s8	q8, d16
   1c938:	vst1.16	{d16-d17}, [r1]
   1c93c:	ldr	r1, [sp, #36]	; 0x24
   1c940:	vld1.8	{d16}, [r1 :64]
   1c944:	add	r1, r4, #128	; 0x80
   1c948:	vmovl.s8	q8, d16
   1c94c:	vst1.16	{d16-d17}, [r1]
   1c950:	ldr	r1, [sp, #40]	; 0x28
   1c954:	vld1.8	{d16}, [r1 :64]
   1c958:	add	r1, r4, #144	; 0x90
   1c95c:	vmovl.s8	q8, d16
   1c960:	vst1.16	{d16-d17}, [r1]
   1c964:	ldr	r1, [sp, #44]	; 0x2c
   1c968:	vld1.8	{d16}, [r1 :64]
   1c96c:	add	r1, r4, #160	; 0xa0
   1c970:	vmovl.s8	q8, d16
   1c974:	vst1.16	{d16-d17}, [r1]
   1c978:	ldr	r1, [sp, #48]	; 0x30
   1c97c:	vld1.8	{d16}, [r1 :64]
   1c980:	add	r1, r4, #176	; 0xb0
   1c984:	vmovl.s8	q8, d16
   1c988:	vst1.16	{d16-d17}, [r1]
   1c98c:	ldr	r1, [sp, #52]	; 0x34
   1c990:	vld1.8	{d16}, [r1 :64]
   1c994:	add	r1, r4, #192	; 0xc0
   1c998:	vmovl.s8	q8, d16
   1c99c:	vst1.16	{d16-d17}, [r1]
   1c9a0:	ldr	r1, [sp, #56]	; 0x38
   1c9a4:	vld1.8	{d16}, [r1 :64]
   1c9a8:	add	r1, r4, #208	; 0xd0
   1c9ac:	vmovl.s8	q8, d16
   1c9b0:	vst1.16	{d16-d17}, [r1]
   1c9b4:	ldr	r1, [sp, #60]	; 0x3c
   1c9b8:	vld1.8	{d16}, [r1 :64]
   1c9bc:	add	r1, r4, #224	; 0xe0
   1c9c0:	vmovl.s8	q8, d16
   1c9c4:	vst1.16	{d16-d17}, [r1]
   1c9c8:	ldr	r1, [sp, #64]	; 0x40
   1c9cc:	vld1.8	{d16}, [r1 :64]
   1c9d0:	add	r1, r4, #240	; 0xf0
   1c9d4:	vmovl.s8	q8, d16
   1c9d8:	vst1.16	{d16-d17}, [r1]
   1c9dc:	ldr	r1, [sp, #68]	; 0x44
   1c9e0:	vld1.8	{d16}, [r1 :64]
   1c9e4:	add	r1, r4, #256	; 0x100
   1c9e8:	vmovl.s8	q8, d16
   1c9ec:	vst1.16	{d16-d17}, [r1]
   1c9f0:	ldr	r1, [sp, #72]	; 0x48
   1c9f4:	vld1.8	{d16}, [r1 :64]
   1c9f8:	add	r1, r4, #272	; 0x110
   1c9fc:	vmovl.s8	q8, d16
   1ca00:	vst1.16	{d16-d17}, [r1]
   1ca04:	ldr	r1, [sp, #76]	; 0x4c
   1ca08:	vld1.8	{d16}, [r1 :64]
   1ca0c:	add	r1, r4, #288	; 0x120
   1ca10:	vmovl.s8	q8, d16
   1ca14:	vst1.16	{d16-d17}, [r1]
   1ca18:	ldr	r1, [sp, #80]	; 0x50
   1ca1c:	vld1.8	{d16}, [r1 :64]
   1ca20:	add	r1, r4, #304	; 0x130
   1ca24:	vmovl.s8	q8, d16
   1ca28:	vst1.16	{d16-d17}, [r1]
   1ca2c:	ldr	r1, [sp, #84]	; 0x54
   1ca30:	vld1.8	{d16}, [r1 :64]
   1ca34:	add	r1, r4, #320	; 0x140
   1ca38:	vmovl.s8	q8, d16
   1ca3c:	vst1.16	{d16-d17}, [r1]
   1ca40:	ldr	r1, [sp, #88]	; 0x58
   1ca44:	vld1.8	{d16}, [r1 :64]
   1ca48:	add	r1, r4, #336	; 0x150
   1ca4c:	vmovl.s8	q8, d16
   1ca50:	vst1.16	{d16-d17}, [r1]
   1ca54:	ldr	r1, [sp, #92]	; 0x5c
   1ca58:	vld1.8	{d16}, [r1 :64]
   1ca5c:	add	r1, r4, #352	; 0x160
   1ca60:	vmovl.s8	q8, d16
   1ca64:	vst1.16	{d16-d17}, [r1]
   1ca68:	ldr	r1, [sp, #96]	; 0x60
   1ca6c:	vld1.8	{d16}, [r1 :64]
   1ca70:	add	r1, r4, #368	; 0x170
   1ca74:	vmovl.s8	q8, d16
   1ca78:	vst1.16	{d16-d17}, [r1]
   1ca7c:	ldr	r1, [sp, #100]	; 0x64
   1ca80:	vld1.8	{d16}, [r1 :64]
   1ca84:	add	r1, r4, #384	; 0x180
   1ca88:	vmovl.s8	q8, d16
   1ca8c:	vst1.16	{d16-d17}, [r1]
   1ca90:	ldr	r1, [sp, #104]	; 0x68
   1ca94:	vld1.8	{d16}, [r1 :64]
   1ca98:	add	r1, r4, #400	; 0x190
   1ca9c:	vmovl.s8	q8, d16
   1caa0:	vst1.16	{d16-d17}, [r1]
   1caa4:	ldr	r1, [sp, #108]	; 0x6c
   1caa8:	vld1.8	{d16}, [r1 :64]
   1caac:	add	r1, r4, #416	; 0x1a0
   1cab0:	vmovl.s8	q8, d16
   1cab4:	vst1.16	{d16-d17}, [r1]
   1cab8:	ldr	r1, [sp, #112]	; 0x70
   1cabc:	vld1.8	{d16}, [r1 :64]
   1cac0:	add	r1, r4, #432	; 0x1b0
   1cac4:	vmovl.s8	q8, d16
   1cac8:	vst1.16	{d16-d17}, [r1]
   1cacc:	ldr	r1, [sp, #116]	; 0x74
   1cad0:	vld1.8	{d16}, [r1 :64]
   1cad4:	add	r1, r4, #448	; 0x1c0
   1cad8:	vmovl.s8	q8, d16
   1cadc:	vst1.16	{d16-d17}, [r1]
   1cae0:	ldr	r1, [sp, #120]	; 0x78
   1cae4:	vld1.8	{d16}, [r1 :64]
   1cae8:	add	r1, r4, #464	; 0x1d0
   1caec:	vmovl.s8	q8, d16
   1caf0:	vst1.16	{d16-d17}, [r1]
   1caf4:	ldr	r1, [sp, #124]	; 0x7c
   1caf8:	vld1.8	{d16}, [r1 :64]
   1cafc:	add	r1, r4, #480	; 0x1e0
   1cb00:	vmovl.s8	q8, d16
   1cb04:	vst1.16	{d16-d17}, [r1]
   1cb08:	ldr	r1, [sp, #128]	; 0x80
   1cb0c:	vld1.8	{d16}, [r1 :64]
   1cb10:	add	r1, r4, #496	; 0x1f0
   1cb14:	mov	r4, sl
   1cb18:	vmovl.s8	q8, d16
   1cb1c:	vst1.16	{d16-d17}, [r1]
   1cb20:	blt	1c87c <ReadUInt16Data+0x568>
   1cb24:	ldr	r0, [sp, #4]
   1cb28:	ldr	r9, [sp, #132]	; 0x84
   1cb2c:	cmp	r6, r0
   1cb30:	bge	1ee1c <ReadUInt16Data+0x2b08>
   1cb34:	ldr	r3, [r8]
   1cb38:	mov	r1, r9
   1cb3c:	sub	r9, r0, r6
   1cb40:	add	r4, sp, #168	; 0xa8
   1cb44:	mov	r0, r4
   1cb48:	mov	r2, r9
   1cb4c:	mov	r8, r1
   1cb50:	bl	18b8 <fread@plt>
   1cb54:	add	r7, r0, r7
   1cb58:	cmp	r9, #1
   1cb5c:	blt	1e574 <ReadUInt16Data+0x2260>
   1cb60:	mov	r0, #0
   1cb64:	cmp	r9, #8
   1cb68:	bcc	1e548 <ReadUInt16Data+0x2234>
   1cb6c:	bic	r0, r9, #7
   1cb70:	mov	r1, #1
   1cb74:	mov	lr, r7
   1cb78:	subs	r2, r0, #8
   1cb7c:	add	r2, r1, r2, lsr #3
   1cb80:	and	ip, r2, #1
   1cb84:	beq	1e500 <ReadUInt16Data+0x21ec>
   1cb88:	bic	r3, r9, #7
   1cb8c:	sub	r3, r3, #8
   1cb90:	add	r1, r1, r3, lsr #3
   1cb94:	mvn	r7, r3, lsr #3
   1cb98:	and	r1, r1, #1
   1cb9c:	add	r3, r7, r1
   1cba0:	mov	r1, #0
   1cba4:	mov	r7, #32
   1cba8:	add	r5, r4, r1
   1cbac:	add	r2, sl, #16
   1cbb0:	adds	r3, r3, #2
   1cbb4:	add	r1, r1, #16
   1cbb8:	vld1.8	{d16}, [r5 :64]
   1cbbc:	add	r5, r5, #8
   1cbc0:	vmovl.s8	q8, d16
   1cbc4:	vst1.16	{d16-d17}, [sl], r7
   1cbc8:	vld1.8	{d16}, [r5 :64]
   1cbcc:	vmovl.s8	q8, d16
   1cbd0:	vst1.16	{d16-d17}, [r2]
   1cbd4:	bne	1cba8 <ReadUInt16Data+0x894>
   1cbd8:	b	1e504 <ReadUInt16Data+0x21f0>
   1cbdc:	add	r0, r5, #240	; 0xf0
   1cbe0:	ldr	r4, [sp]
   1cbe4:	str	sl, [sp, #4]
   1cbe8:	mov	r6, #0
   1cbec:	mov	r7, #0
   1cbf0:	str	r0, [sp, #128]	; 0x80
   1cbf4:	add	r0, r5, #232	; 0xe8
   1cbf8:	str	r0, [sp, #124]	; 0x7c
   1cbfc:	add	r0, r5, #224	; 0xe0
   1cc00:	str	r0, [sp, #120]	; 0x78
   1cc04:	add	r0, r5, #216	; 0xd8
   1cc08:	str	r0, [sp, #116]	; 0x74
   1cc0c:	add	r0, r5, #208	; 0xd0
   1cc10:	str	r0, [sp, #112]	; 0x70
   1cc14:	add	r0, r5, #200	; 0xc8
   1cc18:	str	r0, [sp, #108]	; 0x6c
   1cc1c:	add	r0, r5, #192	; 0xc0
   1cc20:	str	r0, [sp, #104]	; 0x68
   1cc24:	add	r0, r5, #184	; 0xb8
   1cc28:	str	r0, [sp, #100]	; 0x64
   1cc2c:	add	r0, r5, #176	; 0xb0
   1cc30:	str	r0, [sp, #96]	; 0x60
   1cc34:	add	r0, r5, #168	; 0xa8
   1cc38:	str	r0, [sp, #92]	; 0x5c
   1cc3c:	add	r0, r5, #160	; 0xa0
   1cc40:	str	r0, [sp, #88]	; 0x58
   1cc44:	add	r0, r5, #152	; 0x98
   1cc48:	str	r0, [sp, #84]	; 0x54
   1cc4c:	add	r0, r5, #144	; 0x90
   1cc50:	str	r0, [sp, #80]	; 0x50
   1cc54:	add	r0, r5, #136	; 0x88
   1cc58:	str	r0, [sp, #76]	; 0x4c
   1cc5c:	add	r0, r5, #128	; 0x80
   1cc60:	str	r0, [sp, #72]	; 0x48
   1cc64:	add	r0, r5, #120	; 0x78
   1cc68:	str	r0, [sp, #68]	; 0x44
   1cc6c:	add	r0, r5, #112	; 0x70
   1cc70:	str	r0, [sp, #64]	; 0x40
   1cc74:	add	r0, r5, #104	; 0x68
   1cc78:	str	r0, [sp, #60]	; 0x3c
   1cc7c:	add	r0, r5, #96	; 0x60
   1cc80:	str	r0, [sp, #56]	; 0x38
   1cc84:	add	r0, r5, #88	; 0x58
   1cc88:	str	r0, [sp, #52]	; 0x34
   1cc8c:	add	r0, r5, #80	; 0x50
   1cc90:	str	r0, [sp, #48]	; 0x30
   1cc94:	add	r0, r5, #72	; 0x48
   1cc98:	str	r0, [sp, #44]	; 0x2c
   1cc9c:	add	r0, r5, #64	; 0x40
   1cca0:	str	r0, [sp, #40]	; 0x28
   1cca4:	add	r0, r5, #56	; 0x38
   1cca8:	str	r0, [sp, #36]	; 0x24
   1ccac:	add	r0, r5, #48	; 0x30
   1ccb0:	str	r0, [sp, #32]
   1ccb4:	add	r0, r5, #40	; 0x28
   1ccb8:	str	r0, [sp, #28]
   1ccbc:	add	r0, r5, #32
   1ccc0:	str	r0, [sp, #24]
   1ccc4:	add	r0, r5, #24
   1ccc8:	str	r0, [sp, #20]
   1cccc:	add	r0, r5, #16
   1ccd0:	str	r0, [sp, #16]
   1ccd4:	add	r0, r5, #8
   1ccd8:	str	r0, [sp, #12]
   1ccdc:	sub	r0, sl, #256	; 0x100
   1cce0:	mov	sl, r4
   1cce4:	str	r0, [sp, #8]
   1cce8:	ldr	r3, [r8]
   1ccec:	ldr	r1, [sp, #132]	; 0x84
   1ccf0:	add	r9, sp, #168	; 0xa8
   1ccf4:	mov	r2, #256	; 0x100
   1ccf8:	mov	r0, r9
   1ccfc:	bl	18b8 <fread@plt>
   1cd00:	vld1.8	{d16}, [r9 :64]
   1cd04:	mov	r1, #512	; 0x200
   1cd08:	add	r7, r0, r7
   1cd0c:	ldr	r0, [sp, #8]
   1cd10:	add	r6, r6, #256	; 0x100
   1cd14:	cmp	r6, r0
   1cd18:	vmovl.u8	q8, d16
   1cd1c:	vst1.16	{d16-d17}, [sl], r1
   1cd20:	add	r1, r4, #16
   1cd24:	vld1.8	{d16}, [r5 :64]
   1cd28:	vmovl.u8	q8, d16
   1cd2c:	vst1.16	{d16-d17}, [r1]
   1cd30:	ldr	r1, [sp, #12]
   1cd34:	vld1.8	{d16}, [r1 :64]
   1cd38:	add	r1, r4, #32
   1cd3c:	vmovl.u8	q8, d16
   1cd40:	vst1.16	{d16-d17}, [r1]
   1cd44:	ldr	r1, [sp, #16]
   1cd48:	vld1.8	{d16}, [r1 :64]
   1cd4c:	add	r1, r4, #48	; 0x30
   1cd50:	vmovl.u8	q8, d16
   1cd54:	vst1.16	{d16-d17}, [r1]
   1cd58:	ldr	r1, [sp, #20]
   1cd5c:	vld1.8	{d16}, [r1 :64]
   1cd60:	add	r1, r4, #64	; 0x40
   1cd64:	vmovl.u8	q8, d16
   1cd68:	vst1.16	{d16-d17}, [r1]
   1cd6c:	ldr	r1, [sp, #24]
   1cd70:	vld1.8	{d16}, [r1 :64]
   1cd74:	add	r1, r4, #80	; 0x50
   1cd78:	vmovl.u8	q8, d16
   1cd7c:	vst1.16	{d16-d17}, [r1]
   1cd80:	ldr	r1, [sp, #28]
   1cd84:	vld1.8	{d16}, [r1 :64]
   1cd88:	add	r1, r4, #96	; 0x60
   1cd8c:	vmovl.u8	q8, d16
   1cd90:	vst1.16	{d16-d17}, [r1]
   1cd94:	ldr	r1, [sp, #32]
   1cd98:	vld1.8	{d16}, [r1 :64]
   1cd9c:	add	r1, r4, #112	; 0x70
   1cda0:	vmovl.u8	q8, d16
   1cda4:	vst1.16	{d16-d17}, [r1]
   1cda8:	ldr	r1, [sp, #36]	; 0x24
   1cdac:	vld1.8	{d16}, [r1 :64]
   1cdb0:	add	r1, r4, #128	; 0x80
   1cdb4:	vmovl.u8	q8, d16
   1cdb8:	vst1.16	{d16-d17}, [r1]
   1cdbc:	ldr	r1, [sp, #40]	; 0x28
   1cdc0:	vld1.8	{d16}, [r1 :64]
   1cdc4:	add	r1, r4, #144	; 0x90
   1cdc8:	vmovl.u8	q8, d16
   1cdcc:	vst1.16	{d16-d17}, [r1]
   1cdd0:	ldr	r1, [sp, #44]	; 0x2c
   1cdd4:	vld1.8	{d16}, [r1 :64]
   1cdd8:	add	r1, r4, #160	; 0xa0
   1cddc:	vmovl.u8	q8, d16
   1cde0:	vst1.16	{d16-d17}, [r1]
   1cde4:	ldr	r1, [sp, #48]	; 0x30
   1cde8:	vld1.8	{d16}, [r1 :64]
   1cdec:	add	r1, r4, #176	; 0xb0
   1cdf0:	vmovl.u8	q8, d16
   1cdf4:	vst1.16	{d16-d17}, [r1]
   1cdf8:	ldr	r1, [sp, #52]	; 0x34
   1cdfc:	vld1.8	{d16}, [r1 :64]
   1ce00:	add	r1, r4, #192	; 0xc0
   1ce04:	vmovl.u8	q8, d16
   1ce08:	vst1.16	{d16-d17}, [r1]
   1ce0c:	ldr	r1, [sp, #56]	; 0x38
   1ce10:	vld1.8	{d16}, [r1 :64]
   1ce14:	add	r1, r4, #208	; 0xd0
   1ce18:	vmovl.u8	q8, d16
   1ce1c:	vst1.16	{d16-d17}, [r1]
   1ce20:	ldr	r1, [sp, #60]	; 0x3c
   1ce24:	vld1.8	{d16}, [r1 :64]
   1ce28:	add	r1, r4, #224	; 0xe0
   1ce2c:	vmovl.u8	q8, d16
   1ce30:	vst1.16	{d16-d17}, [r1]
   1ce34:	ldr	r1, [sp, #64]	; 0x40
   1ce38:	vld1.8	{d16}, [r1 :64]
   1ce3c:	add	r1, r4, #240	; 0xf0
   1ce40:	vmovl.u8	q8, d16
   1ce44:	vst1.16	{d16-d17}, [r1]
   1ce48:	ldr	r1, [sp, #68]	; 0x44
   1ce4c:	vld1.8	{d16}, [r1 :64]
   1ce50:	add	r1, r4, #256	; 0x100
   1ce54:	vmovl.u8	q8, d16
   1ce58:	vst1.16	{d16-d17}, [r1]
   1ce5c:	ldr	r1, [sp, #72]	; 0x48
   1ce60:	vld1.8	{d16}, [r1 :64]
   1ce64:	add	r1, r4, #272	; 0x110
   1ce68:	vmovl.u8	q8, d16
   1ce6c:	vst1.16	{d16-d17}, [r1]
   1ce70:	ldr	r1, [sp, #76]	; 0x4c
   1ce74:	vld1.8	{d16}, [r1 :64]
   1ce78:	add	r1, r4, #288	; 0x120
   1ce7c:	vmovl.u8	q8, d16
   1ce80:	vst1.16	{d16-d17}, [r1]
   1ce84:	ldr	r1, [sp, #80]	; 0x50
   1ce88:	vld1.8	{d16}, [r1 :64]
   1ce8c:	add	r1, r4, #304	; 0x130
   1ce90:	vmovl.u8	q8, d16
   1ce94:	vst1.16	{d16-d17}, [r1]
   1ce98:	ldr	r1, [sp, #84]	; 0x54
   1ce9c:	vld1.8	{d16}, [r1 :64]
   1cea0:	add	r1, r4, #320	; 0x140
   1cea4:	vmovl.u8	q8, d16
   1cea8:	vst1.16	{d16-d17}, [r1]
   1ceac:	ldr	r1, [sp, #88]	; 0x58
   1ceb0:	vld1.8	{d16}, [r1 :64]
   1ceb4:	add	r1, r4, #336	; 0x150
   1ceb8:	vmovl.u8	q8, d16
   1cebc:	vst1.16	{d16-d17}, [r1]
   1cec0:	ldr	r1, [sp, #92]	; 0x5c
   1cec4:	vld1.8	{d16}, [r1 :64]
   1cec8:	add	r1, r4, #352	; 0x160
   1cecc:	vmovl.u8	q8, d16
   1ced0:	vst1.16	{d16-d17}, [r1]
   1ced4:	ldr	r1, [sp, #96]	; 0x60
   1ced8:	vld1.8	{d16}, [r1 :64]
   1cedc:	add	r1, r4, #368	; 0x170
   1cee0:	vmovl.u8	q8, d16
   1cee4:	vst1.16	{d16-d17}, [r1]
   1cee8:	ldr	r1, [sp, #100]	; 0x64
   1ceec:	vld1.8	{d16}, [r1 :64]
   1cef0:	add	r1, r4, #384	; 0x180
   1cef4:	vmovl.u8	q8, d16
   1cef8:	vst1.16	{d16-d17}, [r1]
   1cefc:	ldr	r1, [sp, #104]	; 0x68
   1cf00:	vld1.8	{d16}, [r1 :64]
   1cf04:	add	r1, r4, #400	; 0x190
   1cf08:	vmovl.u8	q8, d16
   1cf0c:	vst1.16	{d16-d17}, [r1]
   1cf10:	ldr	r1, [sp, #108]	; 0x6c
   1cf14:	vld1.8	{d16}, [r1 :64]
   1cf18:	add	r1, r4, #416	; 0x1a0
   1cf1c:	vmovl.u8	q8, d16
   1cf20:	vst1.16	{d16-d17}, [r1]
   1cf24:	ldr	r1, [sp, #112]	; 0x70
   1cf28:	vld1.8	{d16}, [r1 :64]
   1cf2c:	add	r1, r4, #432	; 0x1b0
   1cf30:	vmovl.u8	q8, d16
   1cf34:	vst1.16	{d16-d17}, [r1]
   1cf38:	ldr	r1, [sp, #116]	; 0x74
   1cf3c:	vld1.8	{d16}, [r1 :64]
   1cf40:	add	r1, r4, #448	; 0x1c0
   1cf44:	vmovl.u8	q8, d16
   1cf48:	vst1.16	{d16-d17}, [r1]
   1cf4c:	ldr	r1, [sp, #120]	; 0x78
   1cf50:	vld1.8	{d16}, [r1 :64]
   1cf54:	add	r1, r4, #464	; 0x1d0
   1cf58:	vmovl.u8	q8, d16
   1cf5c:	vst1.16	{d16-d17}, [r1]
   1cf60:	ldr	r1, [sp, #124]	; 0x7c
   1cf64:	vld1.8	{d16}, [r1 :64]
   1cf68:	add	r1, r4, #480	; 0x1e0
   1cf6c:	vmovl.u8	q8, d16
   1cf70:	vst1.16	{d16-d17}, [r1]
   1cf74:	ldr	r1, [sp, #128]	; 0x80
   1cf78:	vld1.8	{d16}, [r1 :64]
   1cf7c:	add	r1, r4, #496	; 0x1f0
   1cf80:	mov	r4, sl
   1cf84:	vmovl.u8	q8, d16
   1cf88:	vst1.16	{d16-d17}, [r1]
   1cf8c:	blt	1cce8 <ReadUInt16Data+0x9d4>
   1cf90:	ldr	r0, [sp, #4]
   1cf94:	ldr	r9, [sp, #132]	; 0x84
   1cf98:	cmp	r6, r0
   1cf9c:	bge	1ee1c <ReadUInt16Data+0x2b08>
   1cfa0:	ldr	r3, [r8]
   1cfa4:	mov	r1, r9
   1cfa8:	sub	r9, r0, r6
   1cfac:	add	r4, sp, #168	; 0xa8
   1cfb0:	mov	r0, r4
   1cfb4:	mov	r2, r9
   1cfb8:	mov	r8, r1
   1cfbc:	bl	18b8 <fread@plt>
   1cfc0:	add	r7, r0, r7
   1cfc4:	cmp	r9, #1
   1cfc8:	blt	1e5f8 <ReadUInt16Data+0x22e4>
   1cfcc:	mov	r0, #0
   1cfd0:	cmp	r9, #8
   1cfd4:	bcc	1e5cc <ReadUInt16Data+0x22b8>
   1cfd8:	bic	r0, r9, #7
   1cfdc:	mov	r1, #1
   1cfe0:	mov	lr, r7
   1cfe4:	subs	r2, r0, #8
   1cfe8:	add	r2, r1, r2, lsr #3
   1cfec:	and	ip, r2, #1
   1cff0:	beq	1e584 <ReadUInt16Data+0x2270>
   1cff4:	bic	r3, r9, #7
   1cff8:	sub	r3, r3, #8
   1cffc:	add	r1, r1, r3, lsr #3
   1d000:	mvn	r7, r3, lsr #3
   1d004:	and	r1, r1, #1
   1d008:	add	r3, r7, r1
   1d00c:	mov	r1, #0
   1d010:	mov	r7, #32
   1d014:	add	r5, r4, r1
   1d018:	add	r2, sl, #16
   1d01c:	adds	r3, r3, #2
   1d020:	add	r1, r1, #16
   1d024:	vld1.8	{d16}, [r5 :64]
   1d028:	add	r5, r5, #8
   1d02c:	vmovl.u8	q8, d16
   1d030:	vst1.16	{d16-d17}, [sl], r7
   1d034:	vld1.8	{d16}, [r5 :64]
   1d038:	vmovl.u8	q8, d16
   1d03c:	vst1.16	{d16-d17}, [r2]
   1d040:	bne	1d014 <ReadUInt16Data+0xd00>
   1d044:	b	1e588 <ReadUInt16Data+0x2274>
   1d048:	mov	r4, r6
   1d04c:	cmp	sl, #256	; 0x100
   1d050:	ble	1d118 <ReadUInt16Data+0xe04>
   1d054:	sub	r0, sl, #256	; 0x100
   1d058:	lsl	r6, sl, #1
   1d05c:	mov	r9, r4
   1d060:	mov	r5, #0
   1d064:	mov	r7, #0
   1d068:	str	sl, [sp, #4]
   1d06c:	str	r0, [sp, #128]	; 0x80
   1d070:	ldr	r3, [r8]
   1d074:	ldr	r1, [sp, #132]	; 0x84
   1d078:	add	sl, sp, #168	; 0xa8
   1d07c:	mov	r2, #256	; 0x100
   1d080:	mov	r0, sl
   1d084:	bl	18b8 <fread@plt>
   1d088:	mov	r4, r0
   1d08c:	add	r0, r9, r5, lsl #1
   1d090:	mov	r1, sl
   1d094:	mov	r2, #512	; 0x200
   1d098:	bl	181c <memcpy@plt>
   1d09c:	ldr	r0, [sp, #128]	; 0x80
   1d0a0:	add	r5, r5, #256	; 0x100
   1d0a4:	add	r7, r4, r7
   1d0a8:	sub	r6, r6, #512	; 0x200
   1d0ac:	cmp	r5, r0
   1d0b0:	blt	1d070 <ReadUInt16Data+0xd5c>
   1d0b4:	ldr	r0, [sp, #4]
   1d0b8:	mov	r1, r8
   1d0bc:	ldr	r8, [sp, #132]	; 0x84
   1d0c0:	cmp	r5, r0
   1d0c4:	bge	1d0fc <ReadUInt16Data+0xde8>
   1d0c8:	ldr	r3, [r1]
   1d0cc:	sub	r4, r0, r5
   1d0d0:	add	r0, sp, #168	; 0xa8
   1d0d4:	mov	r1, r8
   1d0d8:	mov	r2, r4
   1d0dc:	bl	18b8 <fread@plt>
   1d0e0:	add	r7, r0, r7
   1d0e4:	cmp	r4, #1
   1d0e8:	blt	1d0fc <ReadUInt16Data+0xde8>
   1d0ec:	add	r0, r9, r5, lsl #1
   1d0f0:	add	r1, sp, #168	; 0xa8
   1d0f4:	mov	r2, r6
   1d0f8:	bl	181c <memcpy@plt>
   1d0fc:	mov	r9, r8
   1d100:	mul	r0, r7, r9
   1d104:	sub	sp, fp, #28
   1d108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d10c:	mov	r4, r6
   1d110:	cmp	sl, #256	; 0x100
   1d114:	bgt	1db3c <ReadUInt16Data+0x1828>
   1d118:	ldr	r3, [r8]
   1d11c:	add	r0, sp, #168	; 0xa8
   1d120:	mov	r1, r9
   1d124:	mov	r2, sl
   1d128:	bl	18b8 <fread@plt>
   1d12c:	mov	r7, r0
   1d130:	cmp	sl, #1
   1d134:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d138:	lsl	r2, sl, #1
   1d13c:	add	r1, sp, #168	; 0xa8
   1d140:	mov	r0, r4
   1d144:	bl	181c <memcpy@plt>
   1d148:	mul	r0, r7, r9
   1d14c:	sub	sp, fp, #28
   1d150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d154:	cmp	sl, #256	; 0x100
   1d158:	bgt	1dbf4 <ReadUInt16Data+0x18e0>
   1d15c:	ldr	r3, [r8]
   1d160:	add	r4, sp, #168	; 0xa8
   1d164:	mov	r1, r9
   1d168:	mov	r2, sl
   1d16c:	mov	r0, r4
   1d170:	bl	18b8 <fread@plt>
   1d174:	mov	r7, r0
   1d178:	cmp	sl, #1
   1d17c:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d180:	mov	lr, #0
   1d184:	cmp	sl, #4
   1d188:	bcc	1e644 <ReadUInt16Data+0x2330>
   1d18c:	bic	lr, sl, #3
   1d190:	mov	r2, #1
   1d194:	mov	r8, r9
   1d198:	str	r7, [sp, #128]	; 0x80
   1d19c:	subs	r1, lr, #4
   1d1a0:	add	r1, r2, r1, lsr #2
   1d1a4:	and	ip, r1, #1
   1d1a8:	beq	1e608 <ReadUInt16Data+0x22f4>
   1d1ac:	mov	r5, r6
   1d1b0:	sub	r3, r1, ip
   1d1b4:	mov	r1, #0
   1d1b8:	mov	r7, #32
   1d1bc:	mov	r6, #16
   1d1c0:	mov	r9, r5
   1d1c4:	add	r2, r4, #16
   1d1c8:	vld1.32	{d16-d17}, [r4], r7
   1d1cc:	add	r0, r5, #8
   1d1d0:	subs	r3, r3, #2
   1d1d4:	add	r1, r1, #8
   1d1d8:	vmovn.i32	d16, q8
   1d1dc:	vst1.16	{d16}, [r5], r6
   1d1e0:	vld1.32	{d16-d17}, [r2]
   1d1e4:	vmovn.i32	d16, q8
   1d1e8:	vst1.16	{d16}, [r0]
   1d1ec:	bne	1d1c4 <ReadUInt16Data+0xeb0>
   1d1f0:	b	1e610 <ReadUInt16Data+0x22fc>
   1d1f4:	cmp	sl, #256	; 0x100
   1d1f8:	bgt	1dd74 <ReadUInt16Data+0x1a60>
   1d1fc:	ldr	r3, [r8]
   1d200:	add	r4, sp, #168	; 0xa8
   1d204:	mov	r1, r9
   1d208:	mov	r2, sl
   1d20c:	mov	r0, r4
   1d210:	bl	18b8 <fread@plt>
   1d214:	mov	r7, r0
   1d218:	cmp	sl, #1
   1d21c:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d220:	mov	lr, #0
   1d224:	cmp	sl, #4
   1d228:	bcc	1e6a4 <ReadUInt16Data+0x2390>
   1d22c:	bic	lr, sl, #3
   1d230:	mov	r2, #1
   1d234:	mov	r8, r9
   1d238:	str	r7, [sp, #128]	; 0x80
   1d23c:	subs	r1, lr, #4
   1d240:	add	r1, r2, r1, lsr #2
   1d244:	and	ip, r1, #1
   1d248:	beq	1e668 <ReadUInt16Data+0x2354>
   1d24c:	mov	r5, r6
   1d250:	sub	r3, r1, ip
   1d254:	mov	r1, #0
   1d258:	mov	r7, #32
   1d25c:	mov	r6, #16
   1d260:	mov	r9, r5
   1d264:	add	r2, r4, #16
   1d268:	vld1.32	{d16-d17}, [r4], r7
   1d26c:	add	r0, r5, #8
   1d270:	subs	r3, r3, #2
   1d274:	add	r1, r1, #8
   1d278:	vmovn.i32	d16, q8
   1d27c:	vst1.16	{d16}, [r5], r6
   1d280:	vld1.32	{d16-d17}, [r2]
   1d284:	vmovn.i32	d16, q8
   1d288:	vst1.16	{d16}, [r0]
   1d28c:	bne	1d264 <ReadUInt16Data+0xf50>
   1d290:	b	1e670 <ReadUInt16Data+0x235c>
   1d294:	cmp	sl, #256	; 0x100
   1d298:	bgt	1def4 <ReadUInt16Data+0x1be0>
   1d29c:	ldr	r3, [r8]
   1d2a0:	add	r4, sp, #168	; 0xa8
   1d2a4:	mov	r1, r9
   1d2a8:	mov	r2, sl
   1d2ac:	mov	r0, r4
   1d2b0:	bl	18b8 <fread@plt>
   1d2b4:	mov	r7, r0
   1d2b8:	cmp	sl, #1
   1d2bc:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d2c0:	mov	lr, #0
   1d2c4:	cmp	sl, #4
   1d2c8:	bcc	1e708 <ReadUInt16Data+0x23f4>
   1d2cc:	bic	lr, sl, #3
   1d2d0:	mov	r2, #1
   1d2d4:	mov	r8, r9
   1d2d8:	str	r7, [sp, #128]	; 0x80
   1d2dc:	subs	r1, lr, #4
   1d2e0:	add	r1, r2, r1, lsr #2
   1d2e4:	and	ip, r1, #1
   1d2e8:	beq	1e6c8 <ReadUInt16Data+0x23b4>
   1d2ec:	mov	r5, r6
   1d2f0:	sub	r3, r1, ip
   1d2f4:	mov	r1, #0
   1d2f8:	mov	r7, #32
   1d2fc:	mov	r6, #16
   1d300:	mov	r9, r5
   1d304:	add	r2, r4, #16
   1d308:	vld1.32	{d16-d17}, [r4], r7
   1d30c:	add	r0, r5, #8
   1d310:	subs	r3, r3, #2
   1d314:	add	r1, r1, #8
   1d318:	vcvt.u32.f32	q8, q8
   1d31c:	vmovn.i32	d16, q8
   1d320:	vst1.16	{d16}, [r5], r6
   1d324:	vld1.32	{d16-d17}, [r2]
   1d328:	vcvt.u32.f32	q8, q8
   1d32c:	vmovn.i32	d16, q8
   1d330:	vst1.16	{d16}, [r0]
   1d334:	bne	1d304 <ReadUInt16Data+0xff0>
   1d338:	b	1e6d0 <ReadUInt16Data+0x23bc>
   1d33c:	cmp	sl, #256	; 0x100
   1d340:	bgt	1e08c <ReadUInt16Data+0x1d78>
   1d344:	ldr	r3, [r8]
   1d348:	add	r4, sp, #168	; 0xa8
   1d34c:	mov	r1, r9
   1d350:	mov	r2, sl
   1d354:	mov	r0, r4
   1d358:	bl	18b8 <fread@plt>
   1d35c:	mov	r7, r0
   1d360:	cmp	sl, #1
   1d364:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d368:	mov	r5, r6
   1d36c:	mov	ip, r7
   1d370:	and	r1, sl, #1
   1d374:	mov	r0, #0
   1d378:	beq	1d3c0 <ReadUInt16Data+0x10ac>
   1d37c:	sub	r2, sl, r1
   1d380:	add	r3, r5, #2
   1d384:	add	r7, r4, #8
   1d388:	mov	r0, #0
   1d38c:	vldr	d16, [r7, #-8]
   1d390:	add	r0, r0, #2
   1d394:	cmp	r2, r0
   1d398:	vcvt.u32.f64	s0, d16
   1d39c:	vmov	r6, s0
   1d3a0:	strh	r6, [r3, #-2]
   1d3a4:	vldr	d16, [r7]
   1d3a8:	add	r7, r7, #16
   1d3ac:	vcvt.u32.f64	s0, d16
   1d3b0:	vmov	r6, s0
   1d3b4:	strh	r6, [r3]
   1d3b8:	add	r3, r3, #4
   1d3bc:	bne	1d38c <ReadUInt16Data+0x1078>
   1d3c0:	cmp	r1, #0
   1d3c4:	bne	1e4d8 <ReadUInt16Data+0x21c4>
   1d3c8:	mov	r7, ip
   1d3cc:	mul	r0, r7, r9
   1d3d0:	sub	sp, fp, #28
   1d3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d3d8:	cmp	sl, #256	; 0x100
   1d3dc:	bgt	1e204 <ReadUInt16Data+0x1ef0>
   1d3e0:	ldr	r3, [r8]
   1d3e4:	add	r4, sp, #168	; 0xa8
   1d3e8:	mov	r1, r9
   1d3ec:	mov	r2, sl
   1d3f0:	mov	r0, r4
   1d3f4:	bl	18b8 <fread@plt>
   1d3f8:	mov	r7, r0
   1d3fc:	cmp	sl, #1
   1d400:	blt	1e99c <ReadUInt16Data+0x2688>
   1d404:	mov	r0, #0
   1d408:	beq	1e778 <ReadUInt16Data+0x2464>
   1d40c:	bic	r0, sl, #1
   1d410:	mov	r2, #1
   1d414:	subs	r1, r0, #2
   1d418:	add	r1, r2, r1, lsr #1
   1d41c:	and	r2, r1, #1
   1d420:	beq	1e738 <ReadUInt16Data+0x2424>
   1d424:	mov	ip, r7
   1d428:	sub	r3, r1, r2
   1d42c:	mov	r1, #0
   1d430:	mov	r7, #32
   1d434:	mov	lr, r6
   1d438:	mov	r5, r6
   1d43c:	mov	r6, r4
   1d440:	vld1.64	{d16-d17}, [r6], r7
   1d444:	add	r4, r4, #16
   1d448:	subs	r3, r3, #2
   1d44c:	add	r1, r1, #4
   1d450:	vmovn.i64	d16, q8
   1d454:	vuzp.16	d16, d17
   1d458:	vst1.32	{d16[0]}, [r5]
   1d45c:	vld1.64	{d16-d17}, [r4]
   1d460:	add	r4, r5, #4
   1d464:	add	r5, r5, #8
   1d468:	vmovn.i64	d16, q8
   1d46c:	vuzp.16	d16, d17
   1d470:	vst1.32	{d16[0]}, [r4]
   1d474:	mov	r4, r6
   1d478:	bne	1d440 <ReadUInt16Data+0x112c>
   1d47c:	b	1e744 <ReadUInt16Data+0x2430>
   1d480:	sub	r0, sl, #256	; 0x100
   1d484:	str	r8, [sp, #128]	; 0x80
   1d488:	mov	r8, r6
   1d48c:	add	r1, r6, #512	; 0x200
   1d490:	add	r6, sp, #168	; 0xa8
   1d494:	mov	r7, #0
   1d498:	str	sl, [sp, #4]
   1d49c:	str	r0, [sp, #124]	; 0x7c
   1d4a0:	mov	r0, #0
   1d4a4:	mov	r9, r0
   1d4a8:	ldr	r0, [sp, #128]	; 0x80
   1d4ac:	mov	r5, r1
   1d4b0:	ldr	r1, [sp, #132]	; 0x84
   1d4b4:	mov	r2, #256	; 0x100
   1d4b8:	mov	sl, r7
   1d4bc:	ldr	r3, [r0]
   1d4c0:	mov	r0, r6
   1d4c4:	bl	18b8 <fread@plt>
   1d4c8:	mov	r4, r0
   1d4cc:	mov	r7, #0
   1d4d0:	add	r0, r6, r7
   1d4d4:	bl	1c20 <Mat_int16Swap>
   1d4d8:	add	r1, r8, r7
   1d4dc:	add	r7, r7, #2
   1d4e0:	cmp	r7, #512	; 0x200
   1d4e4:	strh	r0, [r1]
   1d4e8:	bne	1d4d0 <ReadUInt16Data+0x11bc>
   1d4ec:	ldr	r2, [sp, #124]	; 0x7c
   1d4f0:	add	r0, r9, #256	; 0x100
   1d4f4:	mov	r7, sl
   1d4f8:	add	r7, r4, sl
   1d4fc:	add	r8, r8, #512	; 0x200
   1d500:	add	r1, r5, #512	; 0x200
   1d504:	cmp	r0, r2
   1d508:	blt	1d4a4 <ReadUInt16Data+0x1190>
   1d50c:	ldr	r6, [sp, #4]
   1d510:	cmp	r0, r6
   1d514:	bge	1ed3c <ReadUInt16Data+0x2a28>
   1d518:	sub	r8, r6, r0
   1d51c:	ldr	r0, [sp, #128]	; 0x80
   1d520:	ldr	r1, [sp, #132]	; 0x84
   1d524:	add	r4, sp, #168	; 0xa8
   1d528:	mov	r2, r8
   1d52c:	ldr	r3, [r0]
   1d530:	mov	r0, r4
   1d534:	bl	18b8 <fread@plt>
   1d538:	add	r7, r0, r7
   1d53c:	cmp	r8, #1
   1d540:	blt	1ed3c <ReadUInt16Data+0x2a28>
   1d544:	sub	r0, r6, r9
   1d548:	sub	r6, r0, #256	; 0x100
   1d54c:	mov	r0, r4
   1d550:	bl	1c20 <Mat_int16Swap>
   1d554:	strh	r0, [r5], #2
   1d558:	add	r4, r4, #2
   1d55c:	subs	r6, r6, #1
   1d560:	bne	1d54c <ReadUInt16Data+0x1238>
   1d564:	b	1ed3c <ReadUInt16Data+0x2a28>
   1d568:	sub	r0, sl, #256	; 0x100
   1d56c:	str	r8, [sp, #128]	; 0x80
   1d570:	mov	r8, r6
   1d574:	add	r1, r6, #512	; 0x200
   1d578:	add	r6, sp, #168	; 0xa8
   1d57c:	mov	r7, #0
   1d580:	str	sl, [sp, #4]
   1d584:	str	r0, [sp, #124]	; 0x7c
   1d588:	mov	r0, #0
   1d58c:	mov	r9, r0
   1d590:	ldr	r0, [sp, #128]	; 0x80
   1d594:	mov	r5, r1
   1d598:	ldr	r1, [sp, #132]	; 0x84
   1d59c:	mov	r2, #256	; 0x100
   1d5a0:	mov	sl, r7
   1d5a4:	ldr	r3, [r0]
   1d5a8:	mov	r0, r6
   1d5ac:	bl	18b8 <fread@plt>
   1d5b0:	mov	r4, r0
   1d5b4:	mov	r7, #0
   1d5b8:	add	r0, r6, r7
   1d5bc:	bl	1c34 <Mat_uint16Swap>
   1d5c0:	add	r1, r8, r7
   1d5c4:	add	r7, r7, #2
   1d5c8:	cmp	r7, #512	; 0x200
   1d5cc:	strh	r0, [r1]
   1d5d0:	bne	1d5b8 <ReadUInt16Data+0x12a4>
   1d5d4:	ldr	r2, [sp, #124]	; 0x7c
   1d5d8:	add	r0, r9, #256	; 0x100
   1d5dc:	mov	r7, sl
   1d5e0:	add	r7, r4, sl
   1d5e4:	add	r8, r8, #512	; 0x200
   1d5e8:	add	r1, r5, #512	; 0x200
   1d5ec:	cmp	r0, r2
   1d5f0:	blt	1d58c <ReadUInt16Data+0x1278>
   1d5f4:	ldr	r6, [sp, #4]
   1d5f8:	cmp	r0, r6
   1d5fc:	bge	1ed3c <ReadUInt16Data+0x2a28>
   1d600:	sub	r8, r6, r0
   1d604:	ldr	r0, [sp, #128]	; 0x80
   1d608:	ldr	r1, [sp, #132]	; 0x84
   1d60c:	add	r4, sp, #168	; 0xa8
   1d610:	mov	r2, r8
   1d614:	ldr	r3, [r0]
   1d618:	mov	r0, r4
   1d61c:	bl	18b8 <fread@plt>
   1d620:	add	r7, r0, r7
   1d624:	cmp	r8, #1
   1d628:	blt	1ed3c <ReadUInt16Data+0x2a28>
   1d62c:	sub	r0, r6, r9
   1d630:	sub	r6, r0, #256	; 0x100
   1d634:	mov	r0, r4
   1d638:	bl	1c34 <Mat_uint16Swap>
   1d63c:	strh	r0, [r5], #2
   1d640:	add	r4, r4, #2
   1d644:	subs	r6, r6, #1
   1d648:	bne	1d634 <ReadUInt16Data+0x1320>
   1d64c:	b	1ed3c <ReadUInt16Data+0x2a28>
   1d650:	sub	r0, sl, #256	; 0x100
   1d654:	mov	r5, r6
   1d658:	add	r1, r6, #512	; 0x200
   1d65c:	mov	r7, #0
   1d660:	str	r8, [sp, #128]	; 0x80
   1d664:	str	sl, [sp, #4]
   1d668:	str	r0, [sp, #120]	; 0x78
   1d66c:	mov	r0, #0
   1d670:	str	r0, [sp, #124]	; 0x7c
   1d674:	ldr	r0, [sp, #128]	; 0x80
   1d678:	add	r4, sp, #168	; 0xa8
   1d67c:	mov	sl, r1
   1d680:	mov	r1, r9
   1d684:	mov	r2, #256	; 0x100
   1d688:	mov	r8, r7
   1d68c:	ldr	r3, [r0]
   1d690:	mov	r0, r4
   1d694:	bl	18b8 <fread@plt>
   1d698:	mov	r6, r0
   1d69c:	mov	r7, #0
   1d6a0:	mov	r0, r4
   1d6a4:	add	r9, r5, r7
   1d6a8:	bl	1bf8 <Mat_int32Swap>
   1d6ac:	add	r7, r7, #2
   1d6b0:	add	r4, r4, #4
   1d6b4:	strh	r0, [r9]
   1d6b8:	cmp	r7, #512	; 0x200
   1d6bc:	bne	1d6a0 <ReadUInt16Data+0x138c>
   1d6c0:	ldr	r0, [sp, #124]	; 0x7c
   1d6c4:	ldr	r2, [sp, #120]	; 0x78
   1d6c8:	ldr	r9, [sp, #132]	; 0x84
   1d6cc:	mov	r7, r8
   1d6d0:	add	r7, r6, r8
   1d6d4:	add	r5, r5, #512	; 0x200
   1d6d8:	add	r1, sl, #512	; 0x200
   1d6dc:	add	r0, r0, #256	; 0x100
   1d6e0:	cmp	r0, r2
   1d6e4:	blt	1d670 <ReadUInt16Data+0x135c>
   1d6e8:	ldr	r6, [sp, #4]
   1d6ec:	cmp	r0, r6
   1d6f0:	bge	1ee1c <ReadUInt16Data+0x2b08>
   1d6f4:	sub	r8, r6, r0
   1d6f8:	ldr	r0, [sp, #128]	; 0x80
   1d6fc:	add	r4, sp, #168	; 0xa8
   1d700:	mov	r1, r9
   1d704:	mov	r2, r8
   1d708:	ldr	r3, [r0]
   1d70c:	mov	r0, r4
   1d710:	bl	18b8 <fread@plt>
   1d714:	add	r7, r0, r7
   1d718:	cmp	r8, #1
   1d71c:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d720:	ldr	r0, [sp, #124]	; 0x7c
   1d724:	sub	r0, r6, r0
   1d728:	sub	r6, r0, #256	; 0x100
   1d72c:	mov	r0, r4
   1d730:	bl	1bf8 <Mat_int32Swap>
   1d734:	strh	r0, [sl], #2
   1d738:	add	r4, r4, #4
   1d73c:	subs	r6, r6, #1
   1d740:	bne	1d72c <ReadUInt16Data+0x1418>
   1d744:	b	1ee1c <ReadUInt16Data+0x2b08>
   1d748:	sub	r0, sl, #256	; 0x100
   1d74c:	mov	r5, r6
   1d750:	add	r1, r6, #512	; 0x200
   1d754:	mov	r7, #0
   1d758:	str	r8, [sp, #128]	; 0x80
   1d75c:	str	sl, [sp, #4]
   1d760:	str	r0, [sp, #120]	; 0x78
   1d764:	mov	r0, #0
   1d768:	str	r0, [sp, #124]	; 0x7c
   1d76c:	ldr	r0, [sp, #128]	; 0x80
   1d770:	add	r4, sp, #168	; 0xa8
   1d774:	mov	sl, r1
   1d778:	mov	r1, r9
   1d77c:	mov	r2, #256	; 0x100
   1d780:	mov	r8, r7
   1d784:	ldr	r3, [r0]
   1d788:	mov	r0, r4
   1d78c:	bl	18b8 <fread@plt>
   1d790:	mov	r6, r0
   1d794:	mov	r7, #0
   1d798:	mov	r0, r4
   1d79c:	add	r9, r5, r7
   1d7a0:	bl	1c0c <Mat_uint32Swap>
   1d7a4:	add	r7, r7, #2
   1d7a8:	add	r4, r4, #4
   1d7ac:	strh	r0, [r9]
   1d7b0:	cmp	r7, #512	; 0x200
   1d7b4:	bne	1d798 <ReadUInt16Data+0x1484>
   1d7b8:	ldr	r0, [sp, #124]	; 0x7c
   1d7bc:	ldr	r2, [sp, #120]	; 0x78
   1d7c0:	ldr	r9, [sp, #132]	; 0x84
   1d7c4:	mov	r7, r8
   1d7c8:	add	r7, r6, r8
   1d7cc:	add	r5, r5, #512	; 0x200
   1d7d0:	add	r1, sl, #512	; 0x200
   1d7d4:	add	r0, r0, #256	; 0x100
   1d7d8:	cmp	r0, r2
   1d7dc:	blt	1d768 <ReadUInt16Data+0x1454>
   1d7e0:	ldr	r6, [sp, #4]
   1d7e4:	cmp	r0, r6
   1d7e8:	bge	1ee1c <ReadUInt16Data+0x2b08>
   1d7ec:	sub	r8, r6, r0
   1d7f0:	ldr	r0, [sp, #128]	; 0x80
   1d7f4:	add	r4, sp, #168	; 0xa8
   1d7f8:	mov	r1, r9
   1d7fc:	mov	r2, r8
   1d800:	ldr	r3, [r0]
   1d804:	mov	r0, r4
   1d808:	bl	18b8 <fread@plt>
   1d80c:	add	r7, r0, r7
   1d810:	cmp	r8, #1
   1d814:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d818:	ldr	r0, [sp, #124]	; 0x7c
   1d81c:	sub	r0, r6, r0
   1d820:	sub	r6, r0, #256	; 0x100
   1d824:	mov	r0, r4
   1d828:	bl	1c0c <Mat_uint32Swap>
   1d82c:	strh	r0, [sl], #2
   1d830:	add	r4, r4, #4
   1d834:	subs	r6, r6, #1
   1d838:	bne	1d824 <ReadUInt16Data+0x1510>
   1d83c:	b	1ee1c <ReadUInt16Data+0x2b08>
   1d840:	sub	r0, sl, #256	; 0x100
   1d844:	mov	r9, r6
   1d848:	add	r1, r6, #512	; 0x200
   1d84c:	mov	r7, #0
   1d850:	str	r8, [sp, #128]	; 0x80
   1d854:	str	sl, [sp, #4]
   1d858:	str	r0, [sp, #124]	; 0x7c
   1d85c:	mov	r0, #0
   1d860:	mov	r8, r0
   1d864:	ldr	r0, [sp, #128]	; 0x80
   1d868:	mov	r5, r1
   1d86c:	ldr	r1, [sp, #132]	; 0x84
   1d870:	add	r4, sp, #168	; 0xa8
   1d874:	mov	r2, #256	; 0x100
   1d878:	mov	sl, r7
   1d87c:	ldr	r3, [r0]
   1d880:	mov	r0, r4
   1d884:	bl	18b8 <fread@plt>
   1d888:	mov	r6, r0
   1d88c:	mov	r7, #0
   1d890:	mov	r0, r4
   1d894:	bl	1c4c <Mat_floatSwap>
   1d898:	vcvt.u32.f32	s0, s0
   1d89c:	add	r0, r9, r7
   1d8a0:	add	r7, r7, #2
   1d8a4:	add	r4, r4, #4
   1d8a8:	cmp	r7, #512	; 0x200
   1d8ac:	vmov	r1, s0
   1d8b0:	strh	r1, [r0]
   1d8b4:	bne	1d890 <ReadUInt16Data+0x157c>
   1d8b8:	ldr	r2, [sp, #124]	; 0x7c
   1d8bc:	add	r0, r8, #256	; 0x100
   1d8c0:	mov	r7, sl
   1d8c4:	add	r7, r6, sl
   1d8c8:	add	r9, r9, #512	; 0x200
   1d8cc:	add	r1, r5, #512	; 0x200
   1d8d0:	cmp	r0, r2
   1d8d4:	blt	1d860 <ReadUInt16Data+0x154c>
   1d8d8:	ldr	r6, [sp, #4]
   1d8dc:	cmp	r0, r6
   1d8e0:	bge	1ed3c <ReadUInt16Data+0x2a28>
   1d8e4:	sub	sl, r6, r0
   1d8e8:	ldr	r0, [sp, #128]	; 0x80
   1d8ec:	ldr	r9, [sp, #132]	; 0x84
   1d8f0:	add	r4, sp, #168	; 0xa8
   1d8f4:	mov	r2, sl
   1d8f8:	ldr	r3, [r0]
   1d8fc:	mov	r0, r4
   1d900:	mov	r1, r9
   1d904:	bl	18b8 <fread@plt>
   1d908:	add	r7, r0, r7
   1d90c:	cmp	sl, #1
   1d910:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1d914:	sub	r0, r6, r8
   1d918:	sub	r6, r0, #256	; 0x100
   1d91c:	mov	r0, r4
   1d920:	bl	1c4c <Mat_floatSwap>
   1d924:	vcvt.u32.f32	s0, s0
   1d928:	add	r4, r4, #4
   1d92c:	subs	r6, r6, #1
   1d930:	vmov	r0, s0
   1d934:	strh	r0, [r5], #2
   1d938:	bne	1d91c <ReadUInt16Data+0x1608>
   1d93c:	b	1ee1c <ReadUInt16Data+0x2b08>
   1d940:	sub	r0, sl, #256	; 0x100
   1d944:	mov	r5, r6
   1d948:	add	r1, r6, #512	; 0x200
   1d94c:	mov	r7, #0
   1d950:	str	r8, [sp, #128]	; 0x80
   1d954:	str	sl, [sp, #4]
   1d958:	str	r0, [sp, #124]	; 0x7c
   1d95c:	mov	r0, #0
   1d960:	mov	r8, r0
   1d964:	ldr	r0, [sp, #128]	; 0x80
   1d968:	mov	sl, r1
   1d96c:	ldr	r1, [sp, #132]	; 0x84
   1d970:	add	r4, sp, #168	; 0xa8
   1d974:	mov	r2, #256	; 0x100
   1d978:	mov	r9, r7
   1d97c:	ldr	r3, [r0]
   1d980:	mov	r0, r4
   1d984:	bl	18b8 <fread@plt>
   1d988:	mov	r6, r0
   1d98c:	mov	r7, #0
   1d990:	mov	r0, r4
   1d994:	bl	1c90 <Mat_doubleSwap>
   1d998:	vcvt.u32.f64	s0, d0
   1d99c:	add	r0, r5, r7
   1d9a0:	add	r7, r7, #2
   1d9a4:	add	r4, r4, #8
   1d9a8:	cmp	r7, #512	; 0x200
   1d9ac:	vmov	r1, s0
   1d9b0:	strh	r1, [r0]
   1d9b4:	bne	1d990 <ReadUInt16Data+0x167c>
   1d9b8:	ldr	r2, [sp, #124]	; 0x7c
   1d9bc:	add	r0, r8, #256	; 0x100
   1d9c0:	mov	r7, r9
   1d9c4:	add	r7, r6, r9
   1d9c8:	add	r5, r5, #512	; 0x200
   1d9cc:	add	r1, sl, #512	; 0x200
   1d9d0:	cmp	r0, r2
   1d9d4:	blt	1d960 <ReadUInt16Data+0x164c>
   1d9d8:	ldr	r6, [sp, #4]
   1d9dc:	cmp	r0, r6
   1d9e0:	bge	1ed3c <ReadUInt16Data+0x2a28>
   1d9e4:	sub	r5, r6, r0
   1d9e8:	ldr	r0, [sp, #128]	; 0x80
   1d9ec:	ldr	r9, [sp, #132]	; 0x84
   1d9f0:	add	r4, sp, #168	; 0xa8
   1d9f4:	mov	r2, r5
   1d9f8:	ldr	r3, [r0]
   1d9fc:	mov	r0, r4
   1da00:	mov	r1, r9
   1da04:	bl	18b8 <fread@plt>
   1da08:	add	r7, r0, r7
   1da0c:	cmp	r5, #1
   1da10:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1da14:	sub	r0, r6, r8
   1da18:	sub	r6, r0, #256	; 0x100
   1da1c:	mov	r0, r4
   1da20:	bl	1c90 <Mat_doubleSwap>
   1da24:	vcvt.u32.f64	s0, d0
   1da28:	add	r4, r4, #8
   1da2c:	subs	r6, r6, #1
   1da30:	vmov	r0, s0
   1da34:	strh	r0, [sl], #2
   1da38:	bne	1da1c <ReadUInt16Data+0x1708>
   1da3c:	b	1ee1c <ReadUInt16Data+0x2b08>
   1da40:	sub	r0, sl, #256	; 0x100
   1da44:	str	sl, [sp, #4]
   1da48:	add	r1, r6, #512	; 0x200
   1da4c:	mov	r7, r6
   1da50:	mov	sl, #0
   1da54:	str	r8, [sp, #128]	; 0x80
   1da58:	str	r6, [sp]
   1da5c:	str	r0, [sp, #120]	; 0x78
   1da60:	mov	r0, #0
   1da64:	str	r0, [sp, #124]	; 0x7c
   1da68:	ldr	r0, [sp, #128]	; 0x80
   1da6c:	add	r4, sp, #168	; 0xa8
   1da70:	mov	r5, r1
   1da74:	mov	r1, r9
   1da78:	mov	r2, #256	; 0x100
   1da7c:	ldr	r3, [r0]
   1da80:	mov	r0, r4
   1da84:	bl	18b8 <fread@plt>
   1da88:	mov	r8, r0
   1da8c:	mov	r9, #0
   1da90:	mov	r0, r4
   1da94:	add	r6, r7, r9
   1da98:	bl	1b84 <Mat_int64Swap>
   1da9c:	add	r9, r9, #2
   1daa0:	add	r4, r4, #8
   1daa4:	strh	r0, [r6]
   1daa8:	cmp	r9, #512	; 0x200
   1daac:	bne	1da90 <ReadUInt16Data+0x177c>
   1dab0:	ldr	r0, [sp, #124]	; 0x7c
   1dab4:	ldr	r2, [sp, #120]	; 0x78
   1dab8:	ldr	r9, [sp, #132]	; 0x84
   1dabc:	add	sl, r8, sl
   1dac0:	add	r7, r7, #512	; 0x200
   1dac4:	add	r1, r5, #512	; 0x200
   1dac8:	add	r0, r0, #256	; 0x100
   1dacc:	cmp	r0, r2
   1dad0:	blt	1da64 <ReadUInt16Data+0x1750>
   1dad4:	ldr	r8, [sp, #4]
   1dad8:	cmp	r0, r8
   1dadc:	bge	1e3b8 <ReadUInt16Data+0x20a4>
   1dae0:	sub	r4, r8, r0
   1dae4:	ldr	r0, [sp, #128]	; 0x80
   1dae8:	add	r6, sp, #168	; 0xa8
   1daec:	mov	r1, r9
   1daf0:	mov	r2, r4
   1daf4:	ldr	r3, [r0]
   1daf8:	mov	r0, r6
   1dafc:	bl	18b8 <fread@plt>
   1db00:	mov	r7, sl
   1db04:	add	r7, r0, sl
   1db08:	cmp	r4, #1
   1db0c:	blt	1e3bc <ReadUInt16Data+0x20a8>
   1db10:	ldr	r0, [sp, #124]	; 0x7c
   1db14:	mov	sl, r8
   1db18:	sub	r0, r8, r0
   1db1c:	sub	r4, r0, #256	; 0x100
   1db20:	mov	r0, r6
   1db24:	bl	1b84 <Mat_int64Swap>
   1db28:	strh	r0, [r5], #2
   1db2c:	add	r6, r6, #8
   1db30:	subs	r4, r4, #1
   1db34:	bne	1db20 <ReadUInt16Data+0x180c>
   1db38:	b	1e958 <ReadUInt16Data+0x2644>
   1db3c:	sub	r0, sl, #256	; 0x100
   1db40:	lsl	r6, sl, #1
   1db44:	mov	r9, r4
   1db48:	mov	r5, #0
   1db4c:	mov	r7, #0
   1db50:	str	sl, [sp, #4]
   1db54:	str	r0, [sp, #128]	; 0x80
   1db58:	ldr	r3, [r8]
   1db5c:	ldr	r1, [sp, #132]	; 0x84
   1db60:	add	sl, sp, #168	; 0xa8
   1db64:	mov	r2, #256	; 0x100
   1db68:	mov	r0, sl
   1db6c:	bl	18b8 <fread@plt>
   1db70:	mov	r4, r0
   1db74:	add	r0, r9, r5, lsl #1
   1db78:	mov	r1, sl
   1db7c:	mov	r2, #512	; 0x200
   1db80:	bl	181c <memcpy@plt>
   1db84:	ldr	r0, [sp, #128]	; 0x80
   1db88:	add	r5, r5, #256	; 0x100
   1db8c:	add	r7, r4, r7
   1db90:	sub	r6, r6, #512	; 0x200
   1db94:	cmp	r5, r0
   1db98:	blt	1db58 <ReadUInt16Data+0x1844>
   1db9c:	ldr	r0, [sp, #4]
   1dba0:	mov	r1, r8
   1dba4:	ldr	r8, [sp, #132]	; 0x84
   1dba8:	cmp	r5, r0
   1dbac:	bge	1dbe4 <ReadUInt16Data+0x18d0>
   1dbb0:	ldr	r3, [r1]
   1dbb4:	sub	r4, r0, r5
   1dbb8:	add	r0, sp, #168	; 0xa8
   1dbbc:	mov	r1, r8
   1dbc0:	mov	r2, r4
   1dbc4:	bl	18b8 <fread@plt>
   1dbc8:	add	r7, r0, r7
   1dbcc:	cmp	r4, #1
   1dbd0:	blt	1dbe4 <ReadUInt16Data+0x18d0>
   1dbd4:	add	r0, r9, r5, lsl #1
   1dbd8:	add	r1, sp, #168	; 0xa8
   1dbdc:	mov	r2, r6
   1dbe0:	bl	181c <memcpy@plt>
   1dbe4:	mov	r9, r8
   1dbe8:	mul	r0, r7, r9
   1dbec:	sub	sp, fp, #28
   1dbf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbf4:	sub	r1, sl, #256	; 0x100
   1dbf8:	str	sl, [sp, #4]
   1dbfc:	add	r0, r6, #512	; 0x200
   1dc00:	mov	sl, #0
   1dc04:	mov	r7, #32
   1dc08:	str	r6, [sp]
   1dc0c:	mov	r5, r6
   1dc10:	mov	r6, #0
   1dc14:	str	r8, [sp, #128]	; 0x80
   1dc18:	str	r1, [sp, #124]	; 0x7c
   1dc1c:	mov	r1, #256	; 0x100
   1dc20:	mov	r8, r0
   1dc24:	ldr	r0, [sp, #128]	; 0x80
   1dc28:	mov	r9, r1
   1dc2c:	ldr	r1, [sp, #132]	; 0x84
   1dc30:	add	r4, sp, #168	; 0xa8
   1dc34:	mov	r2, #256	; 0x100
   1dc38:	ldr	r3, [r0]
   1dc3c:	mov	r0, r4
   1dc40:	bl	18b8 <fread@plt>
   1dc44:	mov	r1, #0
   1dc48:	mov	r2, r4
   1dc4c:	add	r3, r2, #16
   1dc50:	vld1.32	{d16-d17}, [r2], r7
   1dc54:	add	r4, r5, r1
   1dc58:	add	r1, r1, #16
   1dc5c:	cmp	r1, #512	; 0x200
   1dc60:	vmovn.i32	d16, q8
   1dc64:	vst1.16	{d16}, [r4]!
   1dc68:	vld1.32	{d16-d17}, [r3]
   1dc6c:	vmovn.i32	d16, q8
   1dc70:	vst1.16	{d16}, [r4]
   1dc74:	bne	1dc4c <ReadUInt16Data+0x1938>
   1dc78:	ldr	r3, [sp, #124]	; 0x7c
   1dc7c:	mov	r2, sl
   1dc80:	add	sl, sl, #256	; 0x100
   1dc84:	add	r6, r0, r6
   1dc88:	add	r5, r5, #512	; 0x200
   1dc8c:	add	r0, r8, #512	; 0x200
   1dc90:	add	r1, r9, #256	; 0x100
   1dc94:	cmp	sl, r3
   1dc98:	blt	1dc20 <ReadUInt16Data+0x190c>
   1dc9c:	ldr	r0, [sp, #4]
   1dca0:	str	r2, [sp, #124]	; 0x7c
   1dca4:	cmp	sl, r0
   1dca8:	bge	1e3a4 <ReadUInt16Data+0x2090>
   1dcac:	sub	r7, r0, sl
   1dcb0:	ldr	r0, [sp, #128]	; 0x80
   1dcb4:	ldr	r1, [sp, #132]	; 0x84
   1dcb8:	add	r5, sp, #168	; 0xa8
   1dcbc:	mov	r4, r9
   1dcc0:	mov	r2, r7
   1dcc4:	ldr	r3, [r0]
   1dcc8:	mov	r0, r5
   1dccc:	bl	18b8 <fread@plt>
   1dcd0:	mov	r1, r7
   1dcd4:	mov	r7, r6
   1dcd8:	add	r7, r0, r6
   1dcdc:	cmp	r1, #1
   1dce0:	blt	1ed3c <ReadUInt16Data+0x2a28>
   1dce4:	mov	lr, #0
   1dce8:	cmp	r1, #4
   1dcec:	bcc	1e7dc <ReadUInt16Data+0x24c8>
   1dcf0:	bic	lr, r1, #3
   1dcf4:	str	r1, [sp, #128]	; 0x80
   1dcf8:	mov	r2, #1
   1dcfc:	mov	r6, r7
   1dd00:	subs	r1, lr, #4
   1dd04:	add	r1, r2, r1, lsr #2
   1dd08:	and	ip, r1, #1
   1dd0c:	beq	1e79c <ReadUInt16Data+0x2488>
   1dd10:	ldr	r0, [sp, #4]
   1dd14:	ldr	r1, [sp, #124]	; 0x7c
   1dd18:	sub	r3, r0, r1
   1dd1c:	mov	r0, #16
   1dd20:	sub	r3, r3, #256	; 0x100
   1dd24:	bic	r3, r3, #3
   1dd28:	sub	r3, r3, #4
   1dd2c:	add	r2, r2, r3, lsr #2
   1dd30:	mvn	r7, r3, lsr #2
   1dd34:	and	r2, r2, #1
   1dd38:	add	r3, r7, r2
   1dd3c:	mov	r2, #0
   1dd40:	mov	r7, #32
   1dd44:	add	r4, r5, #16
   1dd48:	vld1.32	{d16-d17}, [r5], r7
   1dd4c:	add	r1, r8, #8
   1dd50:	adds	r3, r3, #2
   1dd54:	add	r2, r2, #8
   1dd58:	vmovn.i32	d16, q8
   1dd5c:	vst1.16	{d16}, [r8], r0
   1dd60:	vld1.32	{d16-d17}, [r4]
   1dd64:	vmovn.i32	d16, q8
   1dd68:	vst1.16	{d16}, [r1]
   1dd6c:	bne	1dd44 <ReadUInt16Data+0x1a30>
   1dd70:	b	1e7a0 <ReadUInt16Data+0x248c>
   1dd74:	sub	r1, sl, #256	; 0x100
   1dd78:	str	sl, [sp, #4]
   1dd7c:	add	r0, r6, #512	; 0x200
   1dd80:	mov	sl, #0
   1dd84:	mov	r7, #32
   1dd88:	str	r6, [sp]
   1dd8c:	mov	r5, r6
   1dd90:	mov	r6, #0
   1dd94:	str	r8, [sp, #128]	; 0x80
   1dd98:	str	r1, [sp, #124]	; 0x7c
   1dd9c:	mov	r1, #256	; 0x100
   1dda0:	mov	r8, r0
   1dda4:	ldr	r0, [sp, #128]	; 0x80
   1dda8:	mov	r9, r1
   1ddac:	ldr	r1, [sp, #132]	; 0x84
   1ddb0:	add	r4, sp, #168	; 0xa8
   1ddb4:	mov	r2, #256	; 0x100
   1ddb8:	ldr	r3, [r0]
   1ddbc:	mov	r0, r4
   1ddc0:	bl	18b8 <fread@plt>
   1ddc4:	mov	r1, #0
   1ddc8:	mov	r2, r4
   1ddcc:	add	r3, r2, #16
   1ddd0:	vld1.32	{d16-d17}, [r2], r7
   1ddd4:	add	r4, r5, r1
   1ddd8:	add	r1, r1, #16
   1dddc:	cmp	r1, #512	; 0x200
   1dde0:	vmovn.i32	d16, q8
   1dde4:	vst1.16	{d16}, [r4]!
   1dde8:	vld1.32	{d16-d17}, [r3]
   1ddec:	vmovn.i32	d16, q8
   1ddf0:	vst1.16	{d16}, [r4]
   1ddf4:	bne	1ddcc <ReadUInt16Data+0x1ab8>
   1ddf8:	ldr	r3, [sp, #124]	; 0x7c
   1ddfc:	mov	r2, sl
   1de00:	add	sl, sl, #256	; 0x100
   1de04:	add	r6, r0, r6
   1de08:	add	r5, r5, #512	; 0x200
   1de0c:	add	r0, r8, #512	; 0x200
   1de10:	add	r1, r9, #256	; 0x100
   1de14:	cmp	sl, r3
   1de18:	blt	1dda0 <ReadUInt16Data+0x1a8c>
   1de1c:	ldr	r0, [sp, #4]
   1de20:	str	r2, [sp, #124]	; 0x7c
   1de24:	cmp	sl, r0
   1de28:	bge	1e3a4 <ReadUInt16Data+0x2090>
   1de2c:	sub	r7, r0, sl
   1de30:	ldr	r0, [sp, #128]	; 0x80
   1de34:	ldr	r1, [sp, #132]	; 0x84
   1de38:	add	r5, sp, #168	; 0xa8
   1de3c:	mov	r4, r9
   1de40:	mov	r2, r7
   1de44:	ldr	r3, [r0]
   1de48:	mov	r0, r5
   1de4c:	bl	18b8 <fread@plt>
   1de50:	mov	r1, r7
   1de54:	mov	r7, r6
   1de58:	add	r7, r0, r6
   1de5c:	cmp	r1, #1
   1de60:	blt	1ed3c <ReadUInt16Data+0x2a28>
   1de64:	mov	lr, #0
   1de68:	cmp	r1, #4
   1de6c:	bcc	1e858 <ReadUInt16Data+0x2544>
   1de70:	bic	lr, r1, #3
   1de74:	str	r1, [sp, #128]	; 0x80
   1de78:	mov	r2, #1
   1de7c:	mov	r6, r7
   1de80:	subs	r1, lr, #4
   1de84:	add	r1, r2, r1, lsr #2
   1de88:	and	ip, r1, #1
   1de8c:	beq	1e818 <ReadUInt16Data+0x2504>
   1de90:	ldr	r0, [sp, #4]
   1de94:	ldr	r1, [sp, #124]	; 0x7c
   1de98:	sub	r3, r0, r1
   1de9c:	mov	r0, #16
   1dea0:	sub	r3, r3, #256	; 0x100
   1dea4:	bic	r3, r3, #3
   1dea8:	sub	r3, r3, #4
   1deac:	add	r2, r2, r3, lsr #2
   1deb0:	mvn	r7, r3, lsr #2
   1deb4:	and	r2, r2, #1
   1deb8:	add	r3, r7, r2
   1debc:	mov	r2, #0
   1dec0:	mov	r7, #32
   1dec4:	add	r4, r5, #16
   1dec8:	vld1.32	{d16-d17}, [r5], r7
   1decc:	add	r1, r8, #8
   1ded0:	adds	r3, r3, #2
   1ded4:	add	r2, r2, #8
   1ded8:	vmovn.i32	d16, q8
   1dedc:	vst1.16	{d16}, [r8], r0
   1dee0:	vld1.32	{d16-d17}, [r4]
   1dee4:	vmovn.i32	d16, q8
   1dee8:	vst1.16	{d16}, [r1]
   1deec:	bne	1dec4 <ReadUInt16Data+0x1bb0>
   1def0:	b	1e81c <ReadUInt16Data+0x2508>
   1def4:	sub	r1, sl, #256	; 0x100
   1def8:	str	sl, [sp, #4]
   1defc:	add	r0, r6, #512	; 0x200
   1df00:	mov	sl, #0
   1df04:	mov	r9, r6
   1df08:	mov	r7, #32
   1df0c:	mov	r5, #0
   1df10:	str	r8, [sp, #128]	; 0x80
   1df14:	str	r6, [sp]
   1df18:	str	r1, [sp, #120]	; 0x78
   1df1c:	mov	r1, #256	; 0x100
   1df20:	mov	r8, r0
   1df24:	ldr	r0, [sp, #128]	; 0x80
   1df28:	str	r1, [sp, #124]	; 0x7c
   1df2c:	ldr	r1, [sp, #132]	; 0x84
   1df30:	add	r4, sp, #168	; 0xa8
   1df34:	mov	r2, #256	; 0x100
   1df38:	ldr	r3, [r0]
   1df3c:	mov	r0, r4
   1df40:	bl	18b8 <fread@plt>
   1df44:	mov	r1, #0
   1df48:	mov	r2, r4
   1df4c:	add	r3, r2, #16
   1df50:	vld1.32	{d16-d17}, [r2], r7
   1df54:	add	r4, r9, r1
   1df58:	add	r1, r1, #16
   1df5c:	cmp	r1, #512	; 0x200
   1df60:	vcvt.u32.f32	q8, q8
   1df64:	vmovn.i32	d16, q8
   1df68:	vst1.16	{d16}, [r4]!
   1df6c:	vld1.32	{d16-d17}, [r3]
   1df70:	vcvt.u32.f32	q8, q8
   1df74:	vmovn.i32	d16, q8
   1df78:	vst1.16	{d16}, [r4]
   1df7c:	bne	1df4c <ReadUInt16Data+0x1c38>
   1df80:	ldr	r6, [sp, #124]	; 0x7c
   1df84:	ldr	r3, [sp, #120]	; 0x78
   1df88:	mov	r2, sl
   1df8c:	add	sl, sl, #256	; 0x100
   1df90:	add	r5, r0, r5
   1df94:	add	r9, r9, #512	; 0x200
   1df98:	add	r0, r8, #512	; 0x200
   1df9c:	add	r1, r6, #256	; 0x100
   1dfa0:	cmp	sl, r3
   1dfa4:	blt	1df20 <ReadUInt16Data+0x1c0c>
   1dfa8:	ldr	r0, [sp, #4]
   1dfac:	str	r2, [sp, #120]	; 0x78
   1dfb0:	cmp	sl, r0
   1dfb4:	bge	1e3d0 <ReadUInt16Data+0x20bc>
   1dfb8:	sub	r7, r0, sl
   1dfbc:	ldr	r0, [sp, #128]	; 0x80
   1dfc0:	ldr	r9, [sp, #132]	; 0x84
   1dfc4:	add	r4, sp, #168	; 0xa8
   1dfc8:	mov	r2, r7
   1dfcc:	ldr	r3, [r0]
   1dfd0:	mov	r0, r4
   1dfd4:	mov	r1, r9
   1dfd8:	bl	18b8 <fread@plt>
   1dfdc:	mov	r1, r7
   1dfe0:	mov	r7, r5
   1dfe4:	add	r7, r0, r5
   1dfe8:	cmp	r1, #1
   1dfec:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1dff0:	ldr	r3, [sp]
   1dff4:	mov	r0, #0
   1dff8:	cmp	r1, #4
   1dffc:	bcc	1e8d8 <ReadUInt16Data+0x25c4>
   1e000:	bic	r0, r1, #3
   1e004:	str	r1, [sp, #128]	; 0x80
   1e008:	mov	r2, #1
   1e00c:	mov	lr, r7
   1e010:	subs	r1, r0, #4
   1e014:	add	r1, r2, r1, lsr #2
   1e018:	and	ip, r1, #1
   1e01c:	beq	1e894 <ReadUInt16Data+0x2580>
   1e020:	ldr	r1, [sp, #4]
   1e024:	ldr	r3, [sp, #120]	; 0x78
   1e028:	mov	r5, #16
   1e02c:	sub	r3, r1, r3
   1e030:	sub	r3, r3, #256	; 0x100
   1e034:	bic	r3, r3, #3
   1e038:	sub	r3, r3, #4
   1e03c:	add	r2, r2, r3, lsr #2
   1e040:	mvn	r7, r3, lsr #2
   1e044:	and	r2, r2, #1
   1e048:	add	r3, r7, r2
   1e04c:	mov	r2, #0
   1e050:	mov	r7, #32
   1e054:	add	r6, r4, #16
   1e058:	vld1.32	{d16-d17}, [r4], r7
   1e05c:	add	r1, r8, #8
   1e060:	adds	r3, r3, #2
   1e064:	add	r2, r2, #8
   1e068:	vcvt.u32.f32	q8, q8
   1e06c:	vmovn.i32	d16, q8
   1e070:	vst1.16	{d16}, [r8], r5
   1e074:	vld1.32	{d16-d17}, [r6]
   1e078:	vcvt.u32.f32	q8, q8
   1e07c:	vmovn.i32	d16, q8
   1e080:	vst1.16	{d16}, [r1]
   1e084:	bne	1e054 <ReadUInt16Data+0x1d40>
   1e088:	b	1e898 <ReadUInt16Data+0x2584>
   1e08c:	movw	r0, #514	; 0x202
   1e090:	add	r1, sp, #168	; 0xa8
   1e094:	str	r8, [sp, #128]	; 0x80
   1e098:	str	sl, [sp, #4]
   1e09c:	add	r7, r6, #2
   1e0a0:	sub	sl, sl, #256	; 0x100
   1e0a4:	mov	r5, #0
   1e0a8:	mov	r8, #0
   1e0ac:	str	r6, [sp]
   1e0b0:	add	r0, r6, r0
   1e0b4:	add	r9, r1, #8
   1e0b8:	mov	r4, r0
   1e0bc:	ldr	r0, [sp, #128]	; 0x80
   1e0c0:	ldr	r1, [sp, #132]	; 0x84
   1e0c4:	mov	r2, #256	; 0x100
   1e0c8:	mov	r6, r5
   1e0cc:	ldr	r3, [r0]
   1e0d0:	add	r0, sp, #168	; 0xa8
   1e0d4:	bl	18b8 <fread@plt>
   1e0d8:	mov	r1, #0
   1e0dc:	mov	r2, r9
   1e0e0:	vldr	d16, [r2, #-8]
   1e0e4:	add	r3, r7, r1
   1e0e8:	add	r1, r1, #4
   1e0ec:	cmp	r1, #512	; 0x200
   1e0f0:	vcvt.u32.f64	s0, d16
   1e0f4:	vmov	r5, s0
   1e0f8:	strh	r5, [r3, #-2]
   1e0fc:	vldr	d16, [r2]
   1e100:	add	r2, r2, #16
   1e104:	vcvt.u32.f64	s0, d16
   1e108:	vmov	r5, s0
   1e10c:	strh	r5, [r3]
   1e110:	bne	1e0e0 <ReadUInt16Data+0x1dcc>
   1e114:	add	r5, r6, #256	; 0x100
   1e118:	add	r8, r0, r8
   1e11c:	add	r7, r7, #512	; 0x200
   1e120:	add	r0, r4, #512	; 0x200
   1e124:	cmp	r5, sl
   1e128:	blt	1e0b8 <ReadUInt16Data+0x1da4>
   1e12c:	ldr	r0, [sp, #4]
   1e130:	cmp	r5, r0
   1e134:	bge	1e3e4 <ReadUInt16Data+0x20d0>
   1e138:	sub	sl, r0, r5
   1e13c:	ldr	r0, [sp, #128]	; 0x80
   1e140:	ldr	r9, [sp, #132]	; 0x84
   1e144:	mov	r2, sl
   1e148:	ldr	r3, [r0]
   1e14c:	add	r0, sp, #168	; 0xa8
   1e150:	mov	r1, r9
   1e154:	bl	18b8 <fread@plt>
   1e158:	mov	r7, r8
   1e15c:	add	r7, r0, r8
   1e160:	cmp	sl, #1
   1e164:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1e168:	ldr	r3, [sp, #4]
   1e16c:	mvn	r0, #256	; 0x100
   1e170:	mov	r1, #0
   1e174:	sub	r2, r0, r6
   1e178:	and	r0, sl, #1
   1e17c:	cmn	r2, r3
   1e180:	beq	1e1dc <ReadUInt16Data+0x1ec8>
   1e184:	sub	r1, r0, r3
   1e188:	mov	r2, r3
   1e18c:	add	r2, sp, #168	; 0xa8
   1e190:	mov	r6, r7
   1e194:	add	r3, r2, #8
   1e198:	add	r1, r1, r5
   1e19c:	mov	r2, #0
   1e1a0:	vldr	d16, [r3, #-8]
   1e1a4:	sub	r2, r2, #2
   1e1a8:	cmp	r1, r2
   1e1ac:	vcvt.u32.f64	s0, d16
   1e1b0:	vmov	r7, s0
   1e1b4:	strh	r7, [r4, #-2]
   1e1b8:	vldr	d16, [r3]
   1e1bc:	add	r3, r3, #16
   1e1c0:	vcvt.u32.f64	s0, d16
   1e1c4:	vmov	r7, s0
   1e1c8:	strh	r7, [r4]
   1e1cc:	add	r4, r4, #4
   1e1d0:	bne	1e1a0 <ReadUInt16Data+0x1e8c>
   1e1d4:	rsb	r1, r2, #0
   1e1d8:	mov	r7, r6
   1e1dc:	cmp	r0, #0
   1e1e0:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e1e4:	add	r0, sp, #168	; 0xa8
   1e1e8:	add	r0, r0, r1, lsl #3
   1e1ec:	vldr	d16, [r0]
   1e1f0:	add	r0, r1, r5
   1e1f4:	vcvt.u32.f64	s0, d16
   1e1f8:	ldr	r1, [sp]
   1e1fc:	add	r0, r1, r0, lsl #1
   1e200:	b	1e4ec <ReadUInt16Data+0x21d8>
   1e204:	sub	r1, sl, #256	; 0x100
   1e208:	add	r0, r6, #512	; 0x200
   1e20c:	mov	r4, #0
   1e210:	mov	r5, #32
   1e214:	mov	r7, #0
   1e218:	str	r8, [sp, #128]	; 0x80
   1e21c:	str	sl, [sp, #4]
   1e220:	str	r6, [sp]
   1e224:	str	r1, [sp, #120]	; 0x78
   1e228:	mov	r1, #256	; 0x100
   1e22c:	mov	r8, r0
   1e230:	ldr	r0, [sp, #128]	; 0x80
   1e234:	str	r1, [sp, #124]	; 0x7c
   1e238:	ldr	r1, [sp, #132]	; 0x84
   1e23c:	mov	r9, r4
   1e240:	add	r4, sp, #168	; 0xa8
   1e244:	mov	r2, #256	; 0x100
   1e248:	mov	sl, r7
   1e24c:	ldr	r3, [r0]
   1e250:	mov	r0, r4
   1e254:	bl	18b8 <fread@plt>
   1e258:	mov	r1, #0
   1e25c:	mov	r3, r4
   1e260:	mov	r2, r4
   1e264:	vld1.64	{d16-d17}, [r2], r5
   1e268:	mov	r7, r6
   1e26c:	add	r3, r3, #16
   1e270:	vmovn.i64	d16, q8
   1e274:	vuzp.16	d16, d17
   1e278:	vmov.32	r4, d16[0]
   1e27c:	str	r4, [r7, r1]!
   1e280:	add	r1, r1, #8
   1e284:	vld1.64	{d16-d17}, [r3]
   1e288:	add	r3, r7, #4
   1e28c:	cmp	r1, #512	; 0x200
   1e290:	vmovn.i64	d16, q8
   1e294:	vuzp.16	d16, d17
   1e298:	vst1.32	{d16[0]}, [r3]
   1e29c:	mov	r3, r2
   1e2a0:	bne	1e264 <ReadUInt16Data+0x1f50>
   1e2a4:	ldr	r1, [sp, #124]	; 0x7c
   1e2a8:	ldr	r2, [sp, #120]	; 0x78
   1e2ac:	add	r4, r9, #256	; 0x100
   1e2b0:	mov	r7, sl
   1e2b4:	add	r7, r0, sl
   1e2b8:	add	r6, r6, #512	; 0x200
   1e2bc:	add	r0, r8, #512	; 0x200
   1e2c0:	add	r1, r1, #256	; 0x100
   1e2c4:	cmp	r4, r2
   1e2c8:	blt	1e22c <ReadUInt16Data+0x1f18>
   1e2cc:	ldr	sl, [sp, #4]
   1e2d0:	cmp	r4, sl
   1e2d4:	bge	1e3f8 <ReadUInt16Data+0x20e4>
   1e2d8:	ldr	r0, [sp, #128]	; 0x80
   1e2dc:	str	r9, [sp, #120]	; 0x78
   1e2e0:	ldr	r9, [sp, #132]	; 0x84
   1e2e4:	sub	r6, sl, r4
   1e2e8:	add	r5, sp, #168	; 0xa8
   1e2ec:	mov	r2, r6
   1e2f0:	ldr	r3, [r0]
   1e2f4:	mov	r0, r5
   1e2f8:	mov	r1, r9
   1e2fc:	bl	18b8 <fread@plt>
   1e300:	add	r7, r0, r7
   1e304:	cmp	r6, #1
   1e308:	blt	1e958 <ReadUInt16Data+0x2644>
   1e30c:	mov	r0, #0
   1e310:	beq	1e960 <ReadUInt16Data+0x264c>
   1e314:	bic	r0, r6, #1
   1e318:	mov	r2, #1
   1e31c:	mov	lr, r6
   1e320:	subs	r1, r0, #2
   1e324:	add	r1, r2, r1, lsr #1
   1e328:	and	ip, r1, #1
   1e32c:	mov	r1, r7
   1e330:	beq	1e91c <ReadUInt16Data+0x2608>
   1e334:	ldr	r3, [sp, #120]	; 0x78
   1e338:	mov	r6, r5
   1e33c:	sub	r3, sl, r3
   1e340:	sub	r3, r3, #256	; 0x100
   1e344:	bic	r3, r3, #1
   1e348:	sub	r3, r3, #2
   1e34c:	add	r2, r2, r3, lsr #1
   1e350:	mvn	r7, r3, lsr #1
   1e354:	and	r2, r2, #1
   1e358:	add	r3, r7, r2
   1e35c:	mov	r2, #0
   1e360:	mov	r7, #32
   1e364:	vld1.64	{d16-d17}, [r6], r7
   1e368:	add	r5, r5, #16
   1e36c:	adds	r3, r3, #2
   1e370:	add	r2, r2, #4
   1e374:	vmovn.i64	d16, q8
   1e378:	vuzp.16	d16, d17
   1e37c:	vst1.32	{d16[0]}, [r8]
   1e380:	vld1.64	{d16-d17}, [r5]
   1e384:	add	r5, r8, #4
   1e388:	add	r8, r8, #8
   1e38c:	vmovn.i64	d16, q8
   1e390:	vuzp.16	d16, d17
   1e394:	vst1.32	{d16[0]}, [r5]
   1e398:	mov	r5, r6
   1e39c:	bne	1e364 <ReadUInt16Data+0x2050>
   1e3a0:	b	1e920 <ReadUInt16Data+0x260c>
   1e3a4:	ldr	r9, [sp, #132]	; 0x84
   1e3a8:	mov	r7, r6
   1e3ac:	mul	r0, r7, r9
   1e3b0:	sub	sp, fp, #28
   1e3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3b8:	mov	r7, sl
   1e3bc:	ldr	r6, [sp]
   1e3c0:	mov	sl, r8
   1e3c4:	b	1e998 <ReadUInt16Data+0x2684>
   1e3c8:	mov	r6, r4
   1e3cc:	b	1e99c <ReadUInt16Data+0x2688>
   1e3d0:	ldr	r9, [sp, #132]	; 0x84
   1e3d4:	mov	r7, r5
   1e3d8:	mul	r0, r7, r9
   1e3dc:	sub	sp, fp, #28
   1e3e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3e4:	ldr	r9, [sp, #132]	; 0x84
   1e3e8:	mov	r7, r8
   1e3ec:	mul	r0, r7, r9
   1e3f0:	sub	sp, fp, #28
   1e3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3f8:	ldr	r9, [sp, #132]	; 0x84
   1e3fc:	ldr	r6, [sp]
   1e400:	b	1e998 <ReadUInt16Data+0x2684>
   1e404:	mov	r8, r6
   1e408:	mov	r1, #0
   1e40c:	cmp	ip, #0
   1e410:	mov	r7, lr
   1e414:	mov	r6, r8
   1e418:	beq	1e444 <ReadUInt16Data+0x2130>
   1e41c:	ldr	r2, [r4, r1]
   1e420:	str	r2, [sp, #136]	; 0x88
   1e424:	add	r2, r4, r1
   1e428:	add	r1, r6, r1, lsl #1
   1e42c:	ldr	r2, [r2, #4]
   1e430:	str	r2, [sp, #140]	; 0x8c
   1e434:	add	r2, sp, #136	; 0x88
   1e438:	vld1.8	{d16}, [r2 :64]
   1e43c:	vmovl.s8	q8, d16
   1e440:	vst1.16	{d16-d17}, [r1]
   1e444:	cmp	r0, sl
   1e448:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e44c:	add	r2, r6, r0, lsl #1
   1e450:	add	r1, r4, r0
   1e454:	sub	r0, sl, r0
   1e458:	ldrsb	r3, [r1], #1
   1e45c:	subs	r0, r0, #1
   1e460:	strh	r3, [r2], #2
   1e464:	bne	1e458 <ReadUInt16Data+0x2144>
   1e468:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e46c:	mov	r8, r6
   1e470:	mov	lr, r7
   1e474:	mov	r1, #0
   1e478:	cmp	ip, #0
   1e47c:	mov	r7, lr
   1e480:	mov	r6, r8
   1e484:	beq	1e4b0 <ReadUInt16Data+0x219c>
   1e488:	ldr	r2, [r4, r1]
   1e48c:	str	r2, [sp, #152]	; 0x98
   1e490:	add	r2, r4, r1
   1e494:	add	r1, r6, r1, lsl #1
   1e498:	ldr	r2, [r2, #4]
   1e49c:	str	r2, [sp, #156]	; 0x9c
   1e4a0:	add	r2, sp, #152	; 0x98
   1e4a4:	vld1.8	{d16}, [r2 :64]
   1e4a8:	vmovl.u8	q8, d16
   1e4ac:	vst1.16	{d16-d17}, [r1]
   1e4b0:	cmp	r0, sl
   1e4b4:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e4b8:	add	r2, r6, r0, lsl #1
   1e4bc:	add	r1, r4, r0
   1e4c0:	sub	r0, sl, r0
   1e4c4:	ldrb	r3, [r1], #1
   1e4c8:	subs	r0, r0, #1
   1e4cc:	strh	r3, [r2], #2
   1e4d0:	bne	1e4c4 <ReadUInt16Data+0x21b0>
   1e4d4:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e4d8:	add	r1, r4, r0, lsl #3
   1e4dc:	add	r0, r5, r0, lsl #1
   1e4e0:	mov	r7, ip
   1e4e4:	vldr	d16, [r1]
   1e4e8:	vcvt.u32.f64	s0, d16
   1e4ec:	vmov	r1, s0
   1e4f0:	strh	r1, [r0]
   1e4f4:	mul	r0, r7, r9
   1e4f8:	sub	sp, fp, #28
   1e4fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e500:	mov	r1, #0
   1e504:	cmp	ip, #0
   1e508:	mov	r7, lr
   1e50c:	beq	1e540 <ReadUInt16Data+0x222c>
   1e510:	ldr	r2, [r4, r1]
   1e514:	str	r2, [sp, #144]	; 0x90
   1e518:	add	r2, r4, r1
   1e51c:	add	r1, r1, r6
   1e520:	ldr	r2, [r2, #4]
   1e524:	str	r2, [sp, #148]	; 0x94
   1e528:	add	r2, sp, #144	; 0x90
   1e52c:	vld1.8	{d16}, [r2 :64]
   1e530:	ldr	r2, [sp]
   1e534:	add	r1, r2, r1, lsl #1
   1e538:	vmovl.s8	q8, d16
   1e53c:	vst1.16	{d16-d17}, [r1]
   1e540:	cmp	r9, r0
   1e544:	beq	1e574 <ReadUInt16Data+0x2260>
   1e548:	ldr	r3, [sp]
   1e54c:	add	r2, r0, r6
   1e550:	add	r1, r4, r0
   1e554:	add	r2, r3, r2, lsl #1
   1e558:	ldr	r3, [sp, #4]
   1e55c:	sub	r0, r3, r0
   1e560:	sub	r0, r0, r6
   1e564:	ldrsb	r3, [r1], #1
   1e568:	subs	r0, r0, #1
   1e56c:	strh	r3, [r2], #2
   1e570:	bne	1e564 <ReadUInt16Data+0x2250>
   1e574:	mov	r9, r8
   1e578:	mul	r0, r7, r9
   1e57c:	sub	sp, fp, #28
   1e580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e584:	mov	r1, #0
   1e588:	cmp	ip, #0
   1e58c:	mov	r7, lr
   1e590:	beq	1e5c4 <ReadUInt16Data+0x22b0>
   1e594:	ldr	r2, [r4, r1]
   1e598:	str	r2, [sp, #160]	; 0xa0
   1e59c:	add	r2, r4, r1
   1e5a0:	add	r1, r1, r6
   1e5a4:	ldr	r2, [r2, #4]
   1e5a8:	str	r2, [sp, #164]	; 0xa4
   1e5ac:	add	r2, sp, #160	; 0xa0
   1e5b0:	vld1.8	{d16}, [r2 :64]
   1e5b4:	ldr	r2, [sp]
   1e5b8:	add	r1, r2, r1, lsl #1
   1e5bc:	vmovl.u8	q8, d16
   1e5c0:	vst1.16	{d16-d17}, [r1]
   1e5c4:	cmp	r9, r0
   1e5c8:	beq	1e5f8 <ReadUInt16Data+0x22e4>
   1e5cc:	ldr	r3, [sp]
   1e5d0:	add	r2, r0, r6
   1e5d4:	add	r1, r4, r0
   1e5d8:	add	r2, r3, r2, lsl #1
   1e5dc:	ldr	r3, [sp, #4]
   1e5e0:	sub	r0, r3, r0
   1e5e4:	sub	r0, r0, r6
   1e5e8:	ldrb	r3, [r1], #1
   1e5ec:	subs	r0, r0, #1
   1e5f0:	strh	r3, [r2], #2
   1e5f4:	bne	1e5e8 <ReadUInt16Data+0x22d4>
   1e5f8:	mov	r9, r8
   1e5fc:	mul	r0, r7, r9
   1e600:	sub	sp, fp, #28
   1e604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e608:	mov	r9, r6
   1e60c:	mov	r1, #0
   1e610:	ldr	r7, [sp, #128]	; 0x80
   1e614:	cmp	ip, #0
   1e618:	mov	r6, r9
   1e61c:	beq	1e638 <ReadUInt16Data+0x2324>
   1e620:	add	r0, sp, #168	; 0xa8
   1e624:	add	r0, r0, r1, lsl #2
   1e628:	vld1.32	{d16-d17}, [r0]
   1e62c:	add	r0, r6, r1, lsl #1
   1e630:	vmovn.i32	d16, q8
   1e634:	vst1.16	{d16}, [r0]
   1e638:	cmp	lr, sl
   1e63c:	mov	r9, r8
   1e640:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e644:	add	r0, sp, #168	; 0xa8
   1e648:	add	r2, r6, lr, lsl #1
   1e64c:	add	r1, r0, lr, lsl #2
   1e650:	sub	r0, sl, lr
   1e654:	ldr	r3, [r1], #4
   1e658:	subs	r0, r0, #1
   1e65c:	strh	r3, [r2], #2
   1e660:	bne	1e654 <ReadUInt16Data+0x2340>
   1e664:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e668:	mov	r9, r6
   1e66c:	mov	r1, #0
   1e670:	ldr	r7, [sp, #128]	; 0x80
   1e674:	cmp	ip, #0
   1e678:	mov	r6, r9
   1e67c:	beq	1e698 <ReadUInt16Data+0x2384>
   1e680:	add	r0, sp, #168	; 0xa8
   1e684:	add	r0, r0, r1, lsl #2
   1e688:	vld1.32	{d16-d17}, [r0]
   1e68c:	add	r0, r6, r1, lsl #1
   1e690:	vmovn.i32	d16, q8
   1e694:	vst1.16	{d16}, [r0]
   1e698:	cmp	lr, sl
   1e69c:	mov	r9, r8
   1e6a0:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e6a4:	add	r0, sp, #168	; 0xa8
   1e6a8:	add	r2, r6, lr, lsl #1
   1e6ac:	add	r1, r0, lr, lsl #2
   1e6b0:	sub	r0, sl, lr
   1e6b4:	ldr	r3, [r1], #4
   1e6b8:	subs	r0, r0, #1
   1e6bc:	strh	r3, [r2], #2
   1e6c0:	bne	1e6b4 <ReadUInt16Data+0x23a0>
   1e6c4:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e6c8:	mov	r9, r6
   1e6cc:	mov	r1, #0
   1e6d0:	ldr	r7, [sp, #128]	; 0x80
   1e6d4:	cmp	ip, #0
   1e6d8:	mov	r6, r9
   1e6dc:	beq	1e6fc <ReadUInt16Data+0x23e8>
   1e6e0:	add	r0, sp, #168	; 0xa8
   1e6e4:	add	r0, r0, r1, lsl #2
   1e6e8:	vld1.32	{d16-d17}, [r0]
   1e6ec:	add	r0, r6, r1, lsl #1
   1e6f0:	vcvt.u32.f32	q8, q8
   1e6f4:	vmovn.i32	d16, q8
   1e6f8:	vst1.16	{d16}, [r0]
   1e6fc:	cmp	lr, sl
   1e700:	mov	r9, r8
   1e704:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e708:	add	r0, sp, #168	; 0xa8
   1e70c:	add	r2, r6, lr, lsl #1
   1e710:	add	r1, r0, lr, lsl #2
   1e714:	sub	r0, sl, lr
   1e718:	vldr	s0, [r1]
   1e71c:	add	r1, r1, #4
   1e720:	subs	r0, r0, #1
   1e724:	vcvt.u32.f32	s0, s0
   1e728:	vmov	r3, s0
   1e72c:	strh	r3, [r2], #2
   1e730:	bne	1e718 <ReadUInt16Data+0x2404>
   1e734:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e738:	mov	lr, r6
   1e73c:	mov	ip, r7
   1e740:	mov	r1, #0
   1e744:	cmp	r2, #0
   1e748:	mov	r7, ip
   1e74c:	mov	r6, lr
   1e750:	beq	1e770 <ReadUInt16Data+0x245c>
   1e754:	add	r2, sp, #168	; 0xa8
   1e758:	add	r2, r2, r1, lsl #3
   1e75c:	add	r1, r6, r1, lsl #1
   1e760:	vld1.64	{d16-d17}, [r2]
   1e764:	vmovn.i64	d16, q8
   1e768:	vuzp.16	d16, d17
   1e76c:	vst1.32	{d16[0]}, [r1]
   1e770:	cmp	r0, sl
   1e774:	beq	1e99c <ReadUInt16Data+0x2688>
   1e778:	add	r1, sp, #168	; 0xa8
   1e77c:	add	r2, r6, r0, lsl #1
   1e780:	add	r1, r1, r0, lsl #3
   1e784:	sub	r0, sl, r0
   1e788:	ldrh	r3, [r1], #8
   1e78c:	subs	r0, r0, #1
   1e790:	strh	r3, [r2], #2
   1e794:	bne	1e788 <ReadUInt16Data+0x2474>
   1e798:	b	1e99c <ReadUInt16Data+0x2688>
   1e79c:	mov	r2, #0
   1e7a0:	cmp	ip, #0
   1e7a4:	mov	r7, r6
   1e7a8:	beq	1e7cc <ReadUInt16Data+0x24b8>
   1e7ac:	add	r1, sp, #168	; 0xa8
   1e7b0:	ldr	r0, [sp]
   1e7b4:	add	r1, r1, r2, lsl #2
   1e7b8:	vld1.32	{d16-d17}, [r1]
   1e7bc:	add	r1, r2, sl
   1e7c0:	add	r1, r0, r1, lsl #1
   1e7c4:	vmovn.i32	d16, q8
   1e7c8:	vst1.16	{d16}, [r1]
   1e7cc:	ldr	r0, [sp, #128]	; 0x80
   1e7d0:	mov	r4, r9
   1e7d4:	cmp	r0, lr
   1e7d8:	beq	1ed3c <ReadUInt16Data+0x2a28>
   1e7dc:	ldr	r0, [sp]
   1e7e0:	add	r2, lr, r4
   1e7e4:	ldr	r3, [sp, #124]	; 0x7c
   1e7e8:	add	r1, sp, #168	; 0xa8
   1e7ec:	add	r1, r1, lr, lsl #2
   1e7f0:	add	r2, r0, r2, lsl #1
   1e7f4:	ldr	r0, [sp, #4]
   1e7f8:	sub	r3, r0, r3
   1e7fc:	sub	r0, r3, lr
   1e800:	sub	r0, r0, #256	; 0x100
   1e804:	ldr	r3, [r1], #4
   1e808:	subs	r0, r0, #1
   1e80c:	strh	r3, [r2], #2
   1e810:	bne	1e804 <ReadUInt16Data+0x24f0>
   1e814:	b	1ed3c <ReadUInt16Data+0x2a28>
   1e818:	mov	r2, #0
   1e81c:	cmp	ip, #0
   1e820:	mov	r7, r6
   1e824:	beq	1e848 <ReadUInt16Data+0x2534>
   1e828:	add	r1, sp, #168	; 0xa8
   1e82c:	ldr	r0, [sp]
   1e830:	add	r1, r1, r2, lsl #2
   1e834:	vld1.32	{d16-d17}, [r1]
   1e838:	add	r1, r2, sl
   1e83c:	add	r1, r0, r1, lsl #1
   1e840:	vmovn.i32	d16, q8
   1e844:	vst1.16	{d16}, [r1]
   1e848:	ldr	r0, [sp, #128]	; 0x80
   1e84c:	mov	r4, r9
   1e850:	cmp	r0, lr
   1e854:	beq	1ed3c <ReadUInt16Data+0x2a28>
   1e858:	ldr	r0, [sp]
   1e85c:	add	r2, lr, r4
   1e860:	ldr	r3, [sp, #124]	; 0x7c
   1e864:	add	r1, sp, #168	; 0xa8
   1e868:	add	r1, r1, lr, lsl #2
   1e86c:	add	r2, r0, r2, lsl #1
   1e870:	ldr	r0, [sp, #4]
   1e874:	sub	r3, r0, r3
   1e878:	sub	r0, r3, lr
   1e87c:	sub	r0, r0, #256	; 0x100
   1e880:	ldr	r3, [r1], #4
   1e884:	subs	r0, r0, #1
   1e888:	strh	r3, [r2], #2
   1e88c:	bne	1e880 <ReadUInt16Data+0x256c>
   1e890:	b	1ed3c <ReadUInt16Data+0x2a28>
   1e894:	mov	r2, #0
   1e898:	ldr	r3, [sp]
   1e89c:	cmp	ip, #0
   1e8a0:	mov	r7, lr
   1e8a4:	beq	1e8c8 <ReadUInt16Data+0x25b4>
   1e8a8:	add	r1, sp, #168	; 0xa8
   1e8ac:	add	r1, r1, r2, lsl #2
   1e8b0:	vld1.32	{d16-d17}, [r1]
   1e8b4:	add	r1, r2, sl
   1e8b8:	add	r1, r3, r1, lsl #1
   1e8bc:	vcvt.u32.f32	q8, q8
   1e8c0:	vmovn.i32	d16, q8
   1e8c4:	vst1.16	{d16}, [r1]
   1e8c8:	ldr	r1, [sp, #128]	; 0x80
   1e8cc:	ldr	r6, [sp, #124]	; 0x7c
   1e8d0:	cmp	r1, r0
   1e8d4:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1e8d8:	add	r2, r0, r6
   1e8dc:	ldr	r6, [sp, #120]	; 0x78
   1e8e0:	add	r1, sp, #168	; 0xa8
   1e8e4:	add	r2, r3, r2, lsl #1
   1e8e8:	ldr	r3, [sp, #4]
   1e8ec:	add	r1, r1, r0, lsl #2
   1e8f0:	sub	r3, r3, r6
   1e8f4:	sub	r0, r3, r0
   1e8f8:	sub	r0, r0, #256	; 0x100
   1e8fc:	vldr	s0, [r1]
   1e900:	add	r1, r1, #4
   1e904:	subs	r0, r0, #1
   1e908:	vcvt.u32.f32	s0, s0
   1e90c:	vmov	r3, s0
   1e910:	strh	r3, [r2], #2
   1e914:	bne	1e8fc <ReadUInt16Data+0x25e8>
   1e918:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e91c:	mov	r2, #0
   1e920:	cmp	ip, #0
   1e924:	mov	r7, r1
   1e928:	beq	1e950 <ReadUInt16Data+0x263c>
   1e92c:	add	r1, sp, #168	; 0xa8
   1e930:	add	r1, r1, r2, lsl #3
   1e934:	vld1.64	{d16-d17}, [r1]
   1e938:	add	r1, r2, r4
   1e93c:	ldr	r2, [sp]
   1e940:	add	r1, r2, r1, lsl #1
   1e944:	vmovn.i64	d16, q8
   1e948:	vuzp.16	d16, d17
   1e94c:	vst1.32	{d16[0]}, [r1]
   1e950:	cmp	lr, r0
   1e954:	bne	1e960 <ReadUInt16Data+0x264c>
   1e958:	ldr	r6, [sp]
   1e95c:	b	1e998 <ReadUInt16Data+0x2684>
   1e960:	ldr	r2, [sp, #124]	; 0x7c
   1e964:	ldr	r3, [sp, #120]	; 0x78
   1e968:	ldr	r6, [sp]
   1e96c:	add	r1, sp, #168	; 0xa8
   1e970:	add	r1, r1, r0, lsl #3
   1e974:	add	r2, r0, r2
   1e978:	sub	r3, sl, r3
   1e97c:	sub	r0, r3, r0
   1e980:	add	r2, r6, r2, lsl #1
   1e984:	sub	r0, r0, #256	; 0x100
   1e988:	ldrh	r3, [r1], #8
   1e98c:	subs	r0, r0, #1
   1e990:	strh	r3, [r2], #2
   1e994:	bne	1e988 <ReadUInt16Data+0x2674>
   1e998:	ldr	r8, [sp, #128]	; 0x80
   1e99c:	ldr	r4, [sp, #116]	; 0x74
   1e9a0:	cmp	r4, #13
   1e9a4:	bne	1ee1c <ReadUInt16Data+0x2b08>
   1e9a8:	ldr	r0, [r8, #20]
   1e9ac:	cmp	r0, #0
   1e9b0:	beq	1e9fc <ReadUInt16Data+0x26e8>
   1e9b4:	cmp	sl, #256	; 0x100
   1e9b8:	bgt	1eaac <ReadUInt16Data+0x2798>
   1e9bc:	ldr	r3, [r8]
   1e9c0:	add	r4, sp, #168	; 0xa8
   1e9c4:	mov	r1, r9
   1e9c8:	mov	r2, sl
   1e9cc:	mov	r0, r4
   1e9d0:	bl	18b8 <fread@plt>
   1e9d4:	add	r7, r0, r7
   1e9d8:	cmp	sl, #1
   1e9dc:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1e9e0:	mov	r0, r4
   1e9e4:	bl	1bd4 <Mat_uint64Swap>
   1e9e8:	strh	r0, [r6], #2
   1e9ec:	add	r4, r4, #8
   1e9f0:	subs	sl, sl, #1
   1e9f4:	bne	1e9e0 <ReadUInt16Data+0x26cc>
   1e9f8:	b	1ee1c <ReadUInt16Data+0x2b08>
   1e9fc:	cmp	sl, #256	; 0x100
   1ea00:	str	r8, [sp, #128]	; 0x80
   1ea04:	bgt	1eba0 <ReadUInt16Data+0x288c>
   1ea08:	ldr	r0, [sp, #128]	; 0x80
   1ea0c:	add	r5, sp, #168	; 0xa8
   1ea10:	mov	r1, r9
   1ea14:	mov	r2, sl
   1ea18:	mov	r8, r6
   1ea1c:	ldr	r3, [r0]
   1ea20:	mov	r0, r5
   1ea24:	bl	18b8 <fread@plt>
   1ea28:	add	r7, r0, r7
   1ea2c:	cmp	sl, #1
   1ea30:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1ea34:	mov	r0, #0
   1ea38:	beq	1ed80 <ReadUInt16Data+0x2a6c>
   1ea3c:	bic	r0, sl, #1
   1ea40:	mov	r2, #1
   1ea44:	mov	ip, r7
   1ea48:	subs	r1, r0, #2
   1ea4c:	add	r1, r2, r1, lsr #1
   1ea50:	and	r2, r1, #1
   1ea54:	beq	1ed4c <ReadUInt16Data+0x2a38>
   1ea58:	sub	r3, r1, r2
   1ea5c:	mov	r1, #0
   1ea60:	mov	r7, #32
   1ea64:	mov	r6, r8
   1ea68:	mov	r4, r5
   1ea6c:	vld1.64	{d16-d17}, [r4], r7
   1ea70:	add	r5, r5, #16
   1ea74:	subs	r3, r3, #2
   1ea78:	add	r1, r1, #4
   1ea7c:	vmovn.i64	d16, q8
   1ea80:	vuzp.16	d16, d17
   1ea84:	vst1.32	{d16[0]}, [r6]
   1ea88:	vld1.64	{d16-d17}, [r5]
   1ea8c:	add	r5, r6, #4
   1ea90:	add	r6, r6, #8
   1ea94:	vmovn.i64	d16, q8
   1ea98:	vuzp.16	d16, d17
   1ea9c:	vst1.32	{d16[0]}, [r5]
   1eaa0:	mov	r5, r4
   1eaa4:	bne	1ea6c <ReadUInt16Data+0x2758>
   1eaa8:	b	1ed50 <ReadUInt16Data+0x2a3c>
   1eaac:	sub	r0, sl, #256	; 0x100
   1eab0:	mov	r5, r6
   1eab4:	add	r1, r6, #512	; 0x200
   1eab8:	str	r8, [sp, #128]	; 0x80
   1eabc:	str	sl, [sp, #4]
   1eac0:	str	r0, [sp, #120]	; 0x78
   1eac4:	mov	r0, #0
   1eac8:	str	r0, [sp, #124]	; 0x7c
   1eacc:	ldr	r0, [sp, #128]	; 0x80
   1ead0:	add	r4, sp, #168	; 0xa8
   1ead4:	mov	sl, r1
   1ead8:	mov	r1, r9
   1eadc:	mov	r2, #256	; 0x100
   1eae0:	mov	r8, r7
   1eae4:	ldr	r3, [r0]
   1eae8:	mov	r0, r4
   1eaec:	bl	18b8 <fread@plt>
   1eaf0:	mov	r6, r0
   1eaf4:	mov	r7, #0
   1eaf8:	mov	r0, r4
   1eafc:	add	r9, r5, r7
   1eb00:	bl	1bd4 <Mat_uint64Swap>
   1eb04:	add	r7, r7, #2
   1eb08:	add	r4, r4, #8
   1eb0c:	strh	r0, [r9]
   1eb10:	cmp	r7, #512	; 0x200
   1eb14:	bne	1eaf8 <ReadUInt16Data+0x27e4>
   1eb18:	ldr	r0, [sp, #124]	; 0x7c
   1eb1c:	ldr	r2, [sp, #120]	; 0x78
   1eb20:	ldr	r9, [sp, #132]	; 0x84
   1eb24:	mov	r7, r8
   1eb28:	add	r7, r6, r8
   1eb2c:	add	r5, r5, #512	; 0x200
   1eb30:	add	r1, sl, #512	; 0x200
   1eb34:	add	r0, r0, #256	; 0x100
   1eb38:	cmp	r0, r2
   1eb3c:	blt	1eac8 <ReadUInt16Data+0x27b4>
   1eb40:	ldr	r6, [sp, #4]
   1eb44:	cmp	r0, r6
   1eb48:	bge	1ee1c <ReadUInt16Data+0x2b08>
   1eb4c:	sub	r8, r6, r0
   1eb50:	ldr	r0, [sp, #128]	; 0x80
   1eb54:	add	r4, sp, #168	; 0xa8
   1eb58:	mov	r1, r9
   1eb5c:	mov	r2, r8
   1eb60:	ldr	r3, [r0]
   1eb64:	mov	r0, r4
   1eb68:	bl	18b8 <fread@plt>
   1eb6c:	add	r7, r0, r7
   1eb70:	cmp	r8, #1
   1eb74:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1eb78:	ldr	r0, [sp, #124]	; 0x7c
   1eb7c:	sub	r0, r6, r0
   1eb80:	sub	r6, r0, #256	; 0x100
   1eb84:	mov	r0, r4
   1eb88:	bl	1bd4 <Mat_uint64Swap>
   1eb8c:	strh	r0, [sl], #2
   1eb90:	add	r4, r4, #8
   1eb94:	subs	r6, r6, #1
   1eb98:	bne	1eb84 <ReadUInt16Data+0x2870>
   1eb9c:	b	1ee1c <ReadUInt16Data+0x2b08>
   1eba0:	sub	r1, sl, #256	; 0x100
   1eba4:	str	sl, [sp, #4]
   1eba8:	add	r0, r6, #512	; 0x200
   1ebac:	mov	sl, #0
   1ebb0:	mov	r9, r6
   1ebb4:	mov	r5, #32
   1ebb8:	str	r6, [sp]
   1ebbc:	str	r1, [sp, #120]	; 0x78
   1ebc0:	mov	r1, #256	; 0x100
   1ebc4:	mov	r8, r0
   1ebc8:	ldr	r0, [sp, #128]	; 0x80
   1ebcc:	str	r1, [sp, #124]	; 0x7c
   1ebd0:	ldr	r1, [sp, #132]	; 0x84
   1ebd4:	add	r4, sp, #168	; 0xa8
   1ebd8:	mov	r2, #256	; 0x100
   1ebdc:	mov	r6, r7
   1ebe0:	ldr	r3, [r0]
   1ebe4:	mov	r0, r4
   1ebe8:	bl	18b8 <fread@plt>
   1ebec:	mov	r1, #0
   1ebf0:	mov	r3, r4
   1ebf4:	mov	r2, r4
   1ebf8:	vld1.64	{d16-d17}, [r2], r5
   1ebfc:	mov	r7, r9
   1ec00:	add	r3, r3, #16
   1ec04:	vmovn.i64	d16, q8
   1ec08:	vuzp.16	d16, d17
   1ec0c:	vmov.32	r4, d16[0]
   1ec10:	str	r4, [r7, r1]!
   1ec14:	add	r1, r1, #8
   1ec18:	vld1.64	{d16-d17}, [r3]
   1ec1c:	add	r3, r7, #4
   1ec20:	cmp	r1, #512	; 0x200
   1ec24:	vmovn.i64	d16, q8
   1ec28:	vuzp.16	d16, d17
   1ec2c:	vst1.32	{d16[0]}, [r3]
   1ec30:	mov	r3, r2
   1ec34:	bne	1ebf8 <ReadUInt16Data+0x28e4>
   1ec38:	mov	r7, r6
   1ec3c:	add	r7, r0, r6
   1ec40:	ldr	r6, [sp, #124]	; 0x7c
   1ec44:	ldr	r2, [sp, #120]	; 0x78
   1ec48:	mov	r4, sl
   1ec4c:	add	sl, sl, #256	; 0x100
   1ec50:	add	r9, r9, #512	; 0x200
   1ec54:	add	r0, r8, #512	; 0x200
   1ec58:	add	r1, r6, #256	; 0x100
   1ec5c:	cmp	sl, r2
   1ec60:	blt	1ebc4 <ReadUInt16Data+0x28b0>
   1ec64:	ldr	r0, [sp, #4]
   1ec68:	str	r4, [sp, #120]	; 0x78
   1ec6c:	cmp	sl, r0
   1ec70:	bge	1ed3c <ReadUInt16Data+0x2a28>
   1ec74:	sub	r4, r0, sl
   1ec78:	ldr	r0, [sp, #128]	; 0x80
   1ec7c:	ldr	r9, [sp, #132]	; 0x84
   1ec80:	add	r5, sp, #168	; 0xa8
   1ec84:	mov	r2, r4
   1ec88:	ldr	r3, [r0]
   1ec8c:	mov	r0, r5
   1ec90:	mov	r1, r9
   1ec94:	bl	18b8 <fread@plt>
   1ec98:	add	r7, r0, r7
   1ec9c:	cmp	r4, #1
   1eca0:	blt	1ee1c <ReadUInt16Data+0x2b08>
   1eca4:	mov	r0, #0
   1eca8:	beq	1ede4 <ReadUInt16Data+0x2ad0>
   1ecac:	bic	r0, r4, #1
   1ecb0:	mov	r2, #1
   1ecb4:	subs	r1, r0, #2
   1ecb8:	add	r1, r2, r1, lsr #1
   1ecbc:	and	ip, r1, #1
   1ecc0:	mov	r1, r7
   1ecc4:	beq	1eda4 <ReadUInt16Data+0x2a90>
   1ecc8:	ldr	r3, [sp, #4]
   1eccc:	ldr	r7, [sp, #120]	; 0x78
   1ecd0:	mov	r6, r5
   1ecd4:	sub	r3, r3, r7
   1ecd8:	sub	r3, r3, #256	; 0x100
   1ecdc:	bic	r3, r3, #1
   1ece0:	sub	r3, r3, #2
   1ece4:	add	r2, r2, r3, lsr #1
   1ece8:	mvn	r7, r3, lsr #1
   1ecec:	and	r2, r2, #1
   1ecf0:	add	r3, r7, r2
   1ecf4:	mov	r2, #0
   1ecf8:	mov	r7, #32
   1ecfc:	vld1.64	{d16-d17}, [r6], r7
   1ed00:	add	r5, r5, #16
   1ed04:	adds	r3, r3, #2
   1ed08:	add	r2, r2, #4
   1ed0c:	vmovn.i64	d16, q8
   1ed10:	vuzp.16	d16, d17
   1ed14:	vst1.32	{d16[0]}, [r8]
   1ed18:	vld1.64	{d16-d17}, [r5]
   1ed1c:	add	r5, r8, #4
   1ed20:	add	r8, r8, #8
   1ed24:	vmovn.i64	d16, q8
   1ed28:	vuzp.16	d16, d17
   1ed2c:	vst1.32	{d16[0]}, [r5]
   1ed30:	mov	r5, r6
   1ed34:	bne	1ecfc <ReadUInt16Data+0x29e8>
   1ed38:	b	1eda8 <ReadUInt16Data+0x2a94>
   1ed3c:	ldr	r9, [sp, #132]	; 0x84
   1ed40:	mul	r0, r7, r9
   1ed44:	sub	sp, fp, #28
   1ed48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed4c:	mov	r1, #0
   1ed50:	cmp	r2, #0
   1ed54:	mov	r7, ip
   1ed58:	beq	1ed78 <ReadUInt16Data+0x2a64>
   1ed5c:	add	r2, sp, #168	; 0xa8
   1ed60:	add	r2, r2, r1, lsl #3
   1ed64:	add	r1, r8, r1, lsl #1
   1ed68:	vld1.64	{d16-d17}, [r2]
   1ed6c:	vmovn.i64	d16, q8
   1ed70:	vuzp.16	d16, d17
   1ed74:	vst1.32	{d16[0]}, [r1]
   1ed78:	cmp	r0, sl
   1ed7c:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1ed80:	add	r1, sp, #168	; 0xa8
   1ed84:	add	r2, r8, r0, lsl #1
   1ed88:	add	r1, r1, r0, lsl #3
   1ed8c:	sub	r0, sl, r0
   1ed90:	ldrh	r3, [r1], #8
   1ed94:	subs	r0, r0, #1
   1ed98:	strh	r3, [r2], #2
   1ed9c:	bne	1ed90 <ReadUInt16Data+0x2a7c>
   1eda0:	b	1ee1c <ReadUInt16Data+0x2b08>
   1eda4:	mov	r2, #0
   1eda8:	ldr	r6, [sp, #124]	; 0x7c
   1edac:	cmp	ip, #0
   1edb0:	mov	r7, r1
   1edb4:	beq	1eddc <ReadUInt16Data+0x2ac8>
   1edb8:	add	r1, sp, #168	; 0xa8
   1edbc:	add	r1, r1, r2, lsl #3
   1edc0:	vld1.64	{d16-d17}, [r1]
   1edc4:	add	r1, r2, sl
   1edc8:	ldr	r2, [sp]
   1edcc:	add	r1, r2, r1, lsl #1
   1edd0:	vmovn.i64	d16, q8
   1edd4:	vuzp.16	d16, d17
   1edd8:	vst1.32	{d16[0]}, [r1]
   1eddc:	cmp	r4, r0
   1ede0:	beq	1ee1c <ReadUInt16Data+0x2b08>
   1ede4:	ldr	r3, [sp]
   1ede8:	add	r2, r0, r6
   1edec:	ldr	r6, [sp, #120]	; 0x78
   1edf0:	add	r1, sp, #168	; 0xa8
   1edf4:	add	r1, r1, r0, lsl #3
   1edf8:	add	r2, r3, r2, lsl #1
   1edfc:	ldr	r3, [sp, #4]
   1ee00:	sub	r3, r3, r6
   1ee04:	sub	r0, r3, r0
   1ee08:	sub	r0, r0, #256	; 0x100
   1ee0c:	ldrh	r3, [r1], #8
   1ee10:	subs	r0, r0, #1
   1ee14:	strh	r3, [r2], #2
   1ee18:	bne	1ee0c <ReadUInt16Data+0x2af8>
   1ee1c:	mul	r0, r7, r9
   1ee20:	sub	sp, fp, #28
   1ee24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ee28 <ReadCompressedUInt16Data>:
   1ee28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee2c:	add	fp, sp, #28
   1ee30:	sub	sp, sp, #12
   1ee34:	mov	r7, r0
   1ee38:	mov	r0, #0
   1ee3c:	cmp	r1, #0
   1ee40:	beq	1ee54 <ReadCompressedUInt16Data+0x2c>
   1ee44:	cmp	r7, #0
   1ee48:	movne	r5, r2
   1ee4c:	cmpne	r2, #0
   1ee50:	bne	1ee5c <ReadCompressedUInt16Data+0x34>
   1ee54:	sub	sp, fp, #28
   1ee58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee5c:	ldr	sl, [fp, #8]
   1ee60:	mov	r0, r3
   1ee64:	mov	r4, r3
   1ee68:	mov	r6, r1
   1ee6c:	bl	1924 <Mat_SizeOf@plt>
   1ee70:	mov	r9, r0
   1ee74:	sub	r0, r4, #1
   1ee78:	cmp	r0, #12
   1ee7c:	bhi	1f34c <ReadCompressedUInt16Data+0x524>
   1ee80:	add	r1, pc, #4
   1ee84:	ldr	r0, [r1, r0, lsl #2]
   1ee88:	add	pc, r1, r0
   1ee8c:	.word	0x00000034
   1ee90:	.word	0x0000006c
   1ee94:	.word	0x000000a4
   1ee98:	.word	0x000000ec
   1ee9c:	.word	0x00000134
   1eea0:	.word	0x0000017c
   1eea4:	.word	0x000001c4
   1eea8:	.word	0x000004c0
   1eeac:	.word	0x00000214
   1eeb0:	.word	0x000004c0
   1eeb4:	.word	0x000004c0
   1eeb8:	.word	0x00000264
   1eebc:	.word	0x000002ac
   1eec0:	cmp	sl, #1
   1eec4:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1eec8:	mov	r8, sp
   1eecc:	mov	r4, sl
   1eed0:	mov	r0, r7
   1eed4:	mov	r1, r6
   1eed8:	mov	r2, r8
   1eedc:	mov	r3, r9
   1eee0:	bl	34ac <InflateData>
   1eee4:	ldrsb	r0, [sp]
   1eee8:	subs	r4, r4, #1
   1eeec:	strh	r0, [r5], #2
   1eef0:	bne	1eed0 <ReadCompressedUInt16Data+0xa8>
   1eef4:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1eef8:	cmp	sl, #1
   1eefc:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1ef00:	mov	r8, sp
   1ef04:	mov	r4, sl
   1ef08:	mov	r0, r7
   1ef0c:	mov	r1, r6
   1ef10:	mov	r2, r8
   1ef14:	mov	r3, r9
   1ef18:	bl	34ac <InflateData>
   1ef1c:	ldrb	r0, [sp]
   1ef20:	subs	r4, r4, #1
   1ef24:	strh	r0, [r5], #2
   1ef28:	bne	1ef08 <ReadCompressedUInt16Data+0xe0>
   1ef2c:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1ef30:	ldr	r0, [r7, #20]
   1ef34:	cmp	r0, #0
   1ef38:	beq	1f180 <ReadCompressedUInt16Data+0x358>
   1ef3c:	cmp	sl, #1
   1ef40:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1ef44:	mov	r8, sp
   1ef48:	mov	r4, sl
   1ef4c:	mov	r0, r7
   1ef50:	mov	r1, r6
   1ef54:	mov	r2, r8
   1ef58:	mov	r3, r9
   1ef5c:	bl	34ac <InflateData>
   1ef60:	mov	r0, r8
   1ef64:	bl	1c20 <Mat_int16Swap>
   1ef68:	strh	r0, [r5], #2
   1ef6c:	subs	r4, r4, #1
   1ef70:	bne	1ef4c <ReadCompressedUInt16Data+0x124>
   1ef74:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1ef78:	ldr	r0, [r7, #20]
   1ef7c:	cmp	r0, #0
   1ef80:	beq	1f1b8 <ReadCompressedUInt16Data+0x390>
   1ef84:	cmp	sl, #1
   1ef88:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1ef8c:	mov	r8, sp
   1ef90:	mov	r4, sl
   1ef94:	mov	r0, r7
   1ef98:	mov	r1, r6
   1ef9c:	mov	r2, r8
   1efa0:	mov	r3, r9
   1efa4:	bl	34ac <InflateData>
   1efa8:	mov	r0, r8
   1efac:	bl	1c34 <Mat_uint16Swap>
   1efb0:	strh	r0, [r5], #2
   1efb4:	subs	r4, r4, #1
   1efb8:	bne	1ef94 <ReadCompressedUInt16Data+0x16c>
   1efbc:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1efc0:	ldr	r0, [r7, #20]
   1efc4:	cmp	r0, #0
   1efc8:	beq	1f1f0 <ReadCompressedUInt16Data+0x3c8>
   1efcc:	cmp	sl, #1
   1efd0:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1efd4:	mov	r8, sp
   1efd8:	mov	r4, sl
   1efdc:	mov	r0, r7
   1efe0:	mov	r1, r6
   1efe4:	mov	r2, r8
   1efe8:	mov	r3, r9
   1efec:	bl	34ac <InflateData>
   1eff0:	mov	r0, r8
   1eff4:	bl	1bf8 <Mat_int32Swap>
   1eff8:	strh	r0, [r5], #2
   1effc:	subs	r4, r4, #1
   1f000:	bne	1efdc <ReadCompressedUInt16Data+0x1b4>
   1f004:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f008:	ldr	r0, [r7, #20]
   1f00c:	cmp	r0, #0
   1f010:	beq	1f228 <ReadCompressedUInt16Data+0x400>
   1f014:	cmp	sl, #1
   1f018:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f01c:	mov	r8, sp
   1f020:	mov	r4, sl
   1f024:	mov	r0, r7
   1f028:	mov	r1, r6
   1f02c:	mov	r2, r8
   1f030:	mov	r3, r9
   1f034:	bl	34ac <InflateData>
   1f038:	mov	r0, r8
   1f03c:	bl	1c0c <Mat_uint32Swap>
   1f040:	strh	r0, [r5], #2
   1f044:	subs	r4, r4, #1
   1f048:	bne	1f024 <ReadCompressedUInt16Data+0x1fc>
   1f04c:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f050:	ldr	r0, [r7, #20]
   1f054:	cmp	r0, #0
   1f058:	beq	1f260 <ReadCompressedUInt16Data+0x438>
   1f05c:	cmp	sl, #1
   1f060:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f064:	mov	r8, sp
   1f068:	mov	r4, sl
   1f06c:	mov	r0, r7
   1f070:	mov	r1, r6
   1f074:	mov	r2, r8
   1f078:	mov	r3, r9
   1f07c:	bl	34ac <InflateData>
   1f080:	mov	r0, r8
   1f084:	bl	1c4c <Mat_floatSwap>
   1f088:	vcvt.u32.f32	s0, s0
   1f08c:	subs	r4, r4, #1
   1f090:	vmov	r0, s0
   1f094:	strh	r0, [r5], #2
   1f098:	bne	1f06c <ReadCompressedUInt16Data+0x244>
   1f09c:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f0a0:	ldr	r0, [r7, #20]
   1f0a4:	cmp	r0, #0
   1f0a8:	beq	1f2a0 <ReadCompressedUInt16Data+0x478>
   1f0ac:	cmp	sl, #1
   1f0b0:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f0b4:	mov	r8, sp
   1f0b8:	mov	r4, sl
   1f0bc:	mov	r0, r7
   1f0c0:	mov	r1, r6
   1f0c4:	mov	r2, r8
   1f0c8:	mov	r3, r9
   1f0cc:	bl	34ac <InflateData>
   1f0d0:	mov	r0, r8
   1f0d4:	bl	1c90 <Mat_doubleSwap>
   1f0d8:	vcvt.u32.f64	s0, d0
   1f0dc:	subs	r4, r4, #1
   1f0e0:	vmov	r0, s0
   1f0e4:	strh	r0, [r5], #2
   1f0e8:	bne	1f0bc <ReadCompressedUInt16Data+0x294>
   1f0ec:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f0f0:	ldr	r0, [r7, #20]
   1f0f4:	cmp	r0, #0
   1f0f8:	beq	1f2e0 <ReadCompressedUInt16Data+0x4b8>
   1f0fc:	cmp	sl, #1
   1f100:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f104:	mov	r8, sp
   1f108:	mov	r4, sl
   1f10c:	mov	r0, r7
   1f110:	mov	r1, r6
   1f114:	mov	r2, r8
   1f118:	mov	r3, r9
   1f11c:	bl	34ac <InflateData>
   1f120:	mov	r0, r8
   1f124:	bl	1b84 <Mat_int64Swap>
   1f128:	strh	r0, [r5], #2
   1f12c:	subs	r4, r4, #1
   1f130:	bne	1f10c <ReadCompressedUInt16Data+0x2e4>
   1f134:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f138:	ldr	r0, [r7, #20]
   1f13c:	cmp	r0, #0
   1f140:	beq	1f318 <ReadCompressedUInt16Data+0x4f0>
   1f144:	cmp	sl, #1
   1f148:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f14c:	mov	r8, sp
   1f150:	mov	r4, sl
   1f154:	mov	r0, r7
   1f158:	mov	r1, r6
   1f15c:	mov	r2, r8
   1f160:	mov	r3, r9
   1f164:	bl	34ac <InflateData>
   1f168:	mov	r0, r8
   1f16c:	bl	1bd4 <Mat_uint64Swap>
   1f170:	strh	r0, [r5], #2
   1f174:	subs	r4, r4, #1
   1f178:	bne	1f154 <ReadCompressedUInt16Data+0x32c>
   1f17c:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f180:	cmp	sl, #1
   1f184:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f188:	mov	r8, sp
   1f18c:	mov	r4, sl
   1f190:	mov	r0, r7
   1f194:	mov	r1, r6
   1f198:	mov	r2, r8
   1f19c:	mov	r3, r9
   1f1a0:	bl	34ac <InflateData>
   1f1a4:	ldrh	r0, [sp]
   1f1a8:	subs	r4, r4, #1
   1f1ac:	strh	r0, [r5], #2
   1f1b0:	bne	1f190 <ReadCompressedUInt16Data+0x368>
   1f1b4:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f1b8:	cmp	sl, #1
   1f1bc:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f1c0:	mov	r8, sp
   1f1c4:	mov	r4, sl
   1f1c8:	mov	r0, r7
   1f1cc:	mov	r1, r6
   1f1d0:	mov	r2, r8
   1f1d4:	mov	r3, r9
   1f1d8:	bl	34ac <InflateData>
   1f1dc:	ldrh	r0, [sp]
   1f1e0:	subs	r4, r4, #1
   1f1e4:	strh	r0, [r5], #2
   1f1e8:	bne	1f1c8 <ReadCompressedUInt16Data+0x3a0>
   1f1ec:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f1f0:	cmp	sl, #1
   1f1f4:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f1f8:	mov	r8, sp
   1f1fc:	mov	r4, sl
   1f200:	mov	r0, r7
   1f204:	mov	r1, r6
   1f208:	mov	r2, r8
   1f20c:	mov	r3, r9
   1f210:	bl	34ac <InflateData>
   1f214:	ldr	r0, [sp]
   1f218:	subs	r4, r4, #1
   1f21c:	strh	r0, [r5], #2
   1f220:	bne	1f200 <ReadCompressedUInt16Data+0x3d8>
   1f224:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f228:	cmp	sl, #1
   1f22c:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f230:	mov	r8, sp
   1f234:	mov	r4, sl
   1f238:	mov	r0, r7
   1f23c:	mov	r1, r6
   1f240:	mov	r2, r8
   1f244:	mov	r3, r9
   1f248:	bl	34ac <InflateData>
   1f24c:	ldr	r0, [sp]
   1f250:	subs	r4, r4, #1
   1f254:	strh	r0, [r5], #2
   1f258:	bne	1f238 <ReadCompressedUInt16Data+0x410>
   1f25c:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f260:	cmp	sl, #1
   1f264:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f268:	mov	r8, sp
   1f26c:	mov	r4, sl
   1f270:	mov	r0, r7
   1f274:	mov	r1, r6
   1f278:	mov	r2, r8
   1f27c:	mov	r3, r9
   1f280:	bl	34ac <InflateData>
   1f284:	vldr	s0, [sp]
   1f288:	subs	r4, r4, #1
   1f28c:	vcvt.u32.f32	s0, s0
   1f290:	vmov	r0, s0
   1f294:	strh	r0, [r5], #2
   1f298:	bne	1f270 <ReadCompressedUInt16Data+0x448>
   1f29c:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f2a0:	cmp	sl, #1
   1f2a4:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f2a8:	mov	r8, sp
   1f2ac:	mov	r4, sl
   1f2b0:	mov	r0, r7
   1f2b4:	mov	r1, r6
   1f2b8:	mov	r2, r8
   1f2bc:	mov	r3, r9
   1f2c0:	bl	34ac <InflateData>
   1f2c4:	vldr	d16, [sp]
   1f2c8:	subs	r4, r4, #1
   1f2cc:	vcvt.u32.f64	s0, d16
   1f2d0:	vmov	r0, s0
   1f2d4:	strh	r0, [r5], #2
   1f2d8:	bne	1f2b0 <ReadCompressedUInt16Data+0x488>
   1f2dc:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f2e0:	cmp	sl, #1
   1f2e4:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f2e8:	mov	r8, sp
   1f2ec:	mov	r4, sl
   1f2f0:	mov	r0, r7
   1f2f4:	mov	r1, r6
   1f2f8:	mov	r2, r8
   1f2fc:	mov	r3, r9
   1f300:	bl	34ac <InflateData>
   1f304:	ldrh	r0, [sp]
   1f308:	subs	r4, r4, #1
   1f30c:	strh	r0, [r5], #2
   1f310:	bne	1f2f0 <ReadCompressedUInt16Data+0x4c8>
   1f314:	b	1f34c <ReadCompressedUInt16Data+0x524>
   1f318:	cmp	sl, #1
   1f31c:	blt	1f34c <ReadCompressedUInt16Data+0x524>
   1f320:	mov	r8, sp
   1f324:	mov	r4, sl
   1f328:	mov	r0, r7
   1f32c:	mov	r1, r6
   1f330:	mov	r2, r8
   1f334:	mov	r3, r9
   1f338:	bl	34ac <InflateData>
   1f33c:	ldrh	r0, [sp]
   1f340:	subs	r4, r4, #1
   1f344:	strh	r0, [r5], #2
   1f348:	bne	1f328 <ReadCompressedUInt16Data+0x500>
   1f34c:	mul	r0, r9, sl
   1f350:	sub	sp, fp, #28
   1f354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f358 <ReadInt8Data>:
   1f358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f35c:	add	fp, sp, #28
   1f360:	sub	sp, sp, #140	; 0x8c
   1f364:	sub	sp, sp, #2048	; 0x800
   1f368:	mov	r6, r0
   1f36c:	mov	r0, #0
   1f370:	cmp	r6, #0
   1f374:	movne	r5, r1
   1f378:	cmpne	r1, #0
   1f37c:	bne	1f388 <ReadInt8Data+0x30>
   1f380:	sub	sp, fp, #28
   1f384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f388:	ldr	r1, [r6]
   1f38c:	cmp	r1, #0
   1f390:	beq	1f380 <ReadInt8Data+0x28>
   1f394:	mov	r0, r2
   1f398:	mov	r7, r3
   1f39c:	mov	r4, r2
   1f3a0:	bl	1924 <Mat_SizeOf@plt>
   1f3a4:	mov	r9, r0
   1f3a8:	sub	r0, r4, #1
   1f3ac:	mov	sl, #0
   1f3b0:	str	r4, [sp, #116]	; 0x74
   1f3b4:	str	r6, [sp, #132]	; 0x84
   1f3b8:	cmp	r0, #11
   1f3bc:	bhi	21920 <ReadInt8Data+0x25c8>
   1f3c0:	add	r1, sp, #136	; 0x88
   1f3c4:	add	r4, r1, #16
   1f3c8:	add	r8, r1, #272	; 0x110
   1f3cc:	add	r1, pc, #4
   1f3d0:	ldr	r0, [r1, r0, lsl #2]
   1f3d4:	add	pc, r1, r0
   1f3d8:	.word	0x00000030
   1f3dc:	.word	0x000000a8
   1f3e0:	.word	0x000000ec
   1f3e4:	.word	0x00000140
   1f3e8:	.word	0x00000194
   1f3ec:	.word	0x000001e8
   1f3f0:	.word	0x0000023c
   1f3f4:	.word	0x00002548
   1f3f8:	.word	0x00000298
   1f3fc:	.word	0x00002548
   1f400:	.word	0x00002548
   1f404:	.word	0x000002f4
   1f408:	cmp	r7, #256	; 0x100
   1f40c:	ble	1f488 <ReadInt8Data+0x130>
   1f410:	sub	r0, r7, #256	; 0x100
   1f414:	str	r7, [sp, #108]	; 0x6c
   1f418:	mov	r8, r5
   1f41c:	mov	r5, #0
   1f420:	add	sl, sp, #136	; 0x88
   1f424:	mov	r7, #0
   1f428:	str	r0, [sp, #124]	; 0x7c
   1f42c:	ldr	r3, [r6]
   1f430:	mov	r0, sl
   1f434:	mov	r1, r9
   1f438:	mov	r2, #256	; 0x100
   1f43c:	bl	18b8 <fread@plt>
   1f440:	mov	r4, r0
   1f444:	add	r0, r8, r5
   1f448:	mov	r1, sl
   1f44c:	mov	r2, #256	; 0x100
   1f450:	bl	181c <memcpy@plt>
   1f454:	ldr	r0, [sp, #124]	; 0x7c
   1f458:	add	r5, r5, #256	; 0x100
   1f45c:	add	r7, r4, r7
   1f460:	cmp	r5, r0
   1f464:	blt	1f42c <ReadInt8Data+0xd4>
   1f468:	mov	sl, r7
   1f46c:	mov	r4, r8
   1f470:	ldr	r8, [sp, #108]	; 0x6c
   1f474:	cmp	r5, r8
   1f478:	blt	1f798 <ReadInt8Data+0x440>
   1f47c:	b	21cc8 <ReadInt8Data+0x2970>
   1f480:	cmp	r7, #256	; 0x100
   1f484:	bgt	1f730 <ReadInt8Data+0x3d8>
   1f488:	ldr	r3, [r6]
   1f48c:	add	r0, sp, #136	; 0x88
   1f490:	mov	r1, r9
   1f494:	mov	r2, r7
   1f498:	bl	18b8 <fread@plt>
   1f49c:	mov	sl, r0
   1f4a0:	cmp	r7, #1
   1f4a4:	blt	21cc8 <ReadInt8Data+0x2970>
   1f4a8:	add	r1, sp, #136	; 0x88
   1f4ac:	mov	r0, r5
   1f4b0:	mov	r2, r7
   1f4b4:	bl	181c <memcpy@plt>
   1f4b8:	mul	r0, sl, r9
   1f4bc:	sub	sp, fp, #28
   1f4c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4c4:	ldr	r0, [r6, #20]
   1f4c8:	cmp	r0, #0
   1f4cc:	beq	1f7dc <ReadInt8Data+0x484>
   1f4d0:	cmp	r7, #256	; 0x100
   1f4d4:	bgt	1fc6c <ReadInt8Data+0x914>
   1f4d8:	ldr	r3, [r6]
   1f4dc:	add	r4, sp, #136	; 0x88
   1f4e0:	mov	r1, r9
   1f4e4:	mov	r2, r7
   1f4e8:	mov	r0, r4
   1f4ec:	bl	18b8 <fread@plt>
   1f4f0:	mov	sl, r0
   1f4f4:	cmp	r7, #1
   1f4f8:	blt	21cc8 <ReadInt8Data+0x2970>
   1f4fc:	mov	r0, r4
   1f500:	bl	1c20 <Mat_int16Swap>
   1f504:	strb	r0, [r5], #1
   1f508:	add	r4, r4, #2
   1f50c:	subs	r7, r7, #1
   1f510:	bne	1f4fc <ReadInt8Data+0x1a4>
   1f514:	b	21cc8 <ReadInt8Data+0x2970>
   1f518:	ldr	r0, [r6, #20]
   1f51c:	cmp	r0, #0
   1f520:	beq	1f874 <ReadInt8Data+0x51c>
   1f524:	cmp	r7, #256	; 0x100
   1f528:	bgt	1fd5c <ReadInt8Data+0xa04>
   1f52c:	ldr	r3, [r6]
   1f530:	add	r4, sp, #136	; 0x88
   1f534:	mov	r1, r9
   1f538:	mov	r2, r7
   1f53c:	mov	r0, r4
   1f540:	bl	18b8 <fread@plt>
   1f544:	mov	sl, r0
   1f548:	cmp	r7, #1
   1f54c:	blt	21cc8 <ReadInt8Data+0x2970>
   1f550:	mov	r0, r4
   1f554:	bl	1c34 <Mat_uint16Swap>
   1f558:	strb	r0, [r5], #1
   1f55c:	add	r4, r4, #2
   1f560:	subs	r7, r7, #1
   1f564:	bne	1f550 <ReadInt8Data+0x1f8>
   1f568:	b	21cc8 <ReadInt8Data+0x2970>
   1f56c:	ldr	r0, [r6, #20]
   1f570:	cmp	r0, #0
   1f574:	beq	1f90c <ReadInt8Data+0x5b4>
   1f578:	cmp	r7, #256	; 0x100
   1f57c:	bgt	1fe4c <ReadInt8Data+0xaf4>
   1f580:	ldr	r3, [r6]
   1f584:	add	r4, sp, #136	; 0x88
   1f588:	mov	r1, r9
   1f58c:	mov	r2, r7
   1f590:	mov	r0, r4
   1f594:	bl	18b8 <fread@plt>
   1f598:	mov	sl, r0
   1f59c:	cmp	r7, #1
   1f5a0:	blt	21cc8 <ReadInt8Data+0x2970>
   1f5a4:	mov	r0, r4
   1f5a8:	bl	1bf8 <Mat_int32Swap>
   1f5ac:	strb	r0, [r5], #1
   1f5b0:	add	r4, r4, #4
   1f5b4:	subs	r7, r7, #1
   1f5b8:	bne	1f5a4 <ReadInt8Data+0x24c>
   1f5bc:	b	21cc8 <ReadInt8Data+0x2970>
   1f5c0:	ldr	r0, [r6, #20]
   1f5c4:	cmp	r0, #0
   1f5c8:	beq	1f9bc <ReadInt8Data+0x664>
   1f5cc:	cmp	r7, #256	; 0x100
   1f5d0:	bgt	1ff3c <ReadInt8Data+0xbe4>
   1f5d4:	ldr	r3, [r6]
   1f5d8:	add	r4, sp, #136	; 0x88
   1f5dc:	mov	r1, r9
   1f5e0:	mov	r2, r7
   1f5e4:	mov	r0, r4
   1f5e8:	bl	18b8 <fread@plt>
   1f5ec:	mov	sl, r0
   1f5f0:	cmp	r7, #1
   1f5f4:	blt	21cc8 <ReadInt8Data+0x2970>
   1f5f8:	mov	r0, r4
   1f5fc:	bl	1c0c <Mat_uint32Swap>
   1f600:	strb	r0, [r5], #1
   1f604:	add	r4, r4, #4
   1f608:	subs	r7, r7, #1
   1f60c:	bne	1f5f8 <ReadInt8Data+0x2a0>
   1f610:	b	21cc8 <ReadInt8Data+0x2970>
   1f614:	ldr	r0, [r6, #20]
   1f618:	cmp	r0, #0
   1f61c:	beq	1fa6c <ReadInt8Data+0x714>
   1f620:	cmp	r7, #256	; 0x100
   1f624:	bgt	2002c <ReadInt8Data+0xcd4>
   1f628:	ldr	r3, [r6]
   1f62c:	add	r4, sp, #136	; 0x88
   1f630:	mov	r1, r9
   1f634:	mov	r2, r7
   1f638:	mov	r0, r4
   1f63c:	bl	18b8 <fread@plt>
   1f640:	mov	sl, r0
   1f644:	cmp	r7, #1
   1f648:	blt	21cc8 <ReadInt8Data+0x2970>
   1f64c:	mov	r0, r4
   1f650:	bl	1c4c <Mat_floatSwap>
   1f654:	vcvt.s32.f32	s0, s0
   1f658:	add	r4, r4, #4
   1f65c:	subs	r7, r7, #1
   1f660:	vmov	r0, s0
   1f664:	strb	r0, [r5], #1
   1f668:	bne	1f64c <ReadInt8Data+0x2f4>
   1f66c:	b	21cc8 <ReadInt8Data+0x2970>
   1f670:	ldr	r0, [r6, #20]
   1f674:	cmp	r0, #0
   1f678:	beq	1fb24 <ReadInt8Data+0x7cc>
   1f67c:	cmp	r7, #256	; 0x100
   1f680:	bgt	20120 <ReadInt8Data+0xdc8>
   1f684:	ldr	r3, [r6]
   1f688:	add	r4, sp, #136	; 0x88
   1f68c:	mov	r1, r9
   1f690:	mov	r2, r7
   1f694:	mov	r0, r4
   1f698:	bl	18b8 <fread@plt>
   1f69c:	mov	sl, r0
   1f6a0:	cmp	r7, #1
   1f6a4:	blt	21cc8 <ReadInt8Data+0x2970>
   1f6a8:	mov	r0, r4
   1f6ac:	bl	1c90 <Mat_doubleSwap>
   1f6b0:	vcvt.s32.f64	s0, d0
   1f6b4:	add	r4, r4, #8
   1f6b8:	subs	r7, r7, #1
   1f6bc:	vmov	r0, s0
   1f6c0:	strb	r0, [r5], #1
   1f6c4:	bne	1f6a8 <ReadInt8Data+0x350>
   1f6c8:	b	21cc8 <ReadInt8Data+0x2970>
   1f6cc:	ldr	r0, [r6, #20]
   1f6d0:	cmp	r0, #0
   1f6d4:	beq	1fbc4 <ReadInt8Data+0x86c>
   1f6d8:	cmp	r7, #256	; 0x100
   1f6dc:	bgt	20214 <ReadInt8Data+0xebc>
   1f6e0:	ldr	r3, [r6]
   1f6e4:	add	r6, sp, #136	; 0x88
   1f6e8:	mov	r1, r9
   1f6ec:	mov	r2, r7
   1f6f0:	mov	r0, r6
   1f6f4:	bl	18b8 <fread@plt>
   1f6f8:	mov	sl, r0
   1f6fc:	cmp	r7, #1
   1f700:	blt	2191c <ReadInt8Data+0x25c4>
   1f704:	mov	r8, r5
   1f708:	mov	r4, r5
   1f70c:	mov	r5, r7
   1f710:	mov	r0, r6
   1f714:	bl	1b84 <Mat_int64Swap>
   1f718:	strb	r0, [r4], #1
   1f71c:	add	r6, r6, #8
   1f720:	subs	r5, r5, #1
   1f724:	bne	1f710 <ReadInt8Data+0x3b8>
   1f728:	mov	r5, r8
   1f72c:	b	2191c <ReadInt8Data+0x25c4>
   1f730:	sub	r0, r7, #256	; 0x100
   1f734:	str	r7, [sp, #108]	; 0x6c
   1f738:	mov	r8, r5
   1f73c:	mov	r5, #0
   1f740:	add	r7, sp, #136	; 0x88
   1f744:	mov	sl, #0
   1f748:	str	r0, [sp, #124]	; 0x7c
   1f74c:	ldr	r3, [r6]
   1f750:	mov	r0, r7
   1f754:	mov	r1, r9
   1f758:	mov	r2, #256	; 0x100
   1f75c:	bl	18b8 <fread@plt>
   1f760:	mov	r4, r0
   1f764:	add	r0, r8, r5
   1f768:	mov	r1, r7
   1f76c:	mov	r2, #256	; 0x100
   1f770:	bl	181c <memcpy@plt>
   1f774:	ldr	r0, [sp, #124]	; 0x7c
   1f778:	add	r5, r5, #256	; 0x100
   1f77c:	add	sl, r4, sl
   1f780:	cmp	r5, r0
   1f784:	blt	1f74c <ReadInt8Data+0x3f4>
   1f788:	mov	r4, r8
   1f78c:	ldr	r8, [sp, #108]	; 0x6c
   1f790:	cmp	r5, r8
   1f794:	bge	21cc8 <ReadInt8Data+0x2970>
   1f798:	ldr	r0, [sp, #132]	; 0x84
   1f79c:	sub	r6, r8, r5
   1f7a0:	mov	r1, r9
   1f7a4:	mov	r2, r6
   1f7a8:	ldr	r3, [r0]
   1f7ac:	add	r0, sp, #136	; 0x88
   1f7b0:	bl	18b8 <fread@plt>
   1f7b4:	add	sl, r0, sl
   1f7b8:	cmp	r6, #1
   1f7bc:	blt	21cc8 <ReadInt8Data+0x2970>
   1f7c0:	add	r0, r4, r5
   1f7c4:	add	r1, sp, #136	; 0x88
   1f7c8:	mov	r2, r6
   1f7cc:	bl	181c <memcpy@plt>
   1f7d0:	mul	r0, sl, r9
   1f7d4:	sub	sp, fp, #28
   1f7d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f7dc:	cmp	r7, #256	; 0x100
   1f7e0:	bgt	20300 <ReadInt8Data+0xfa8>
   1f7e4:	ldr	r3, [r6]
   1f7e8:	add	r4, sp, #136	; 0x88
   1f7ec:	mov	r1, r9
   1f7f0:	mov	r2, r7
   1f7f4:	mov	r0, r4
   1f7f8:	bl	18b8 <fread@plt>
   1f7fc:	mov	sl, r0
   1f800:	cmp	r7, #1
   1f804:	blt	21cc8 <ReadInt8Data+0x2970>
   1f808:	mov	r0, #0
   1f80c:	cmp	r7, #8
   1f810:	bcc	2144c <ReadInt8Data+0x20f4>
   1f814:	bic	r0, r7, #7
   1f818:	mov	r2, #1
   1f81c:	mov	ip, r7
   1f820:	subs	r1, r0, #8
   1f824:	add	r1, r2, r1, lsr #3
   1f828:	and	lr, r1, #1
   1f82c:	beq	2141c <ReadInt8Data+0x20c4>
   1f830:	sub	r3, r1, lr
   1f834:	mov	r1, #0
   1f838:	mov	r7, #32
   1f83c:	add	r6, r4, #16
   1f840:	vld1.16	{d16-d17}, [r4], r7
   1f844:	mov	r2, r5
   1f848:	add	r5, r5, r1
   1f84c:	subs	r3, r3, #2
   1f850:	add	r1, r1, #16
   1f854:	vmovn.i16	d16, q8
   1f858:	vst1.8	{d16}, [r5]!
   1f85c:	vld1.16	{d16-d17}, [r6]
   1f860:	vmovn.i16	d16, q8
   1f864:	vst1.8	{d16}, [r5]
   1f868:	mov	r5, r2
   1f86c:	bne	1f83c <ReadInt8Data+0x4e4>
   1f870:	b	21420 <ReadInt8Data+0x20c8>
   1f874:	cmp	r7, #256	; 0x100
   1f878:	bgt	20780 <ReadInt8Data+0x1428>
   1f87c:	ldr	r3, [r6]
   1f880:	add	r4, sp, #136	; 0x88
   1f884:	mov	r1, r9
   1f888:	mov	r2, r7
   1f88c:	mov	r0, r4
   1f890:	bl	18b8 <fread@plt>
   1f894:	mov	sl, r0
   1f898:	cmp	r7, #1
   1f89c:	blt	21cc8 <ReadInt8Data+0x2970>
   1f8a0:	mov	r0, #0
   1f8a4:	cmp	r7, #8
   1f8a8:	bcc	214a0 <ReadInt8Data+0x2148>
   1f8ac:	bic	r0, r7, #7
   1f8b0:	mov	r2, #1
   1f8b4:	mov	ip, r7
   1f8b8:	subs	r1, r0, #8
   1f8bc:	add	r1, r2, r1, lsr #3
   1f8c0:	and	lr, r1, #1
   1f8c4:	beq	21470 <ReadInt8Data+0x2118>
   1f8c8:	sub	r3, r1, lr
   1f8cc:	mov	r1, #0
   1f8d0:	mov	r7, #32
   1f8d4:	add	r6, r4, #16
   1f8d8:	vld1.16	{d16-d17}, [r4], r7
   1f8dc:	mov	r2, r5
   1f8e0:	add	r5, r5, r1
   1f8e4:	subs	r3, r3, #2
   1f8e8:	add	r1, r1, #16
   1f8ec:	vmovn.i16	d16, q8
   1f8f0:	vst1.8	{d16}, [r5]!
   1f8f4:	vld1.16	{d16-d17}, [r6]
   1f8f8:	vmovn.i16	d16, q8
   1f8fc:	vst1.8	{d16}, [r5]
   1f900:	mov	r5, r2
   1f904:	bne	1f8d4 <ReadInt8Data+0x57c>
   1f908:	b	21474 <ReadInt8Data+0x211c>
   1f90c:	cmp	r7, #256	; 0x100
   1f910:	bgt	20c00 <ReadInt8Data+0x18a8>
   1f914:	ldr	r3, [r6]
   1f918:	mov	r8, r5
   1f91c:	add	r5, sp, #136	; 0x88
   1f920:	mov	r1, r9
   1f924:	mov	r2, r7
   1f928:	mov	r0, r5
   1f92c:	bl	18b8 <fread@plt>
   1f930:	mov	sl, r0
   1f934:	cmp	r7, #1
   1f938:	blt	21cc8 <ReadInt8Data+0x2970>
   1f93c:	mov	lr, #0
   1f940:	cmp	r7, #4
   1f944:	bcc	214f8 <ReadInt8Data+0x21a0>
   1f948:	bic	lr, r7, #3
   1f94c:	mov	r2, #1
   1f950:	str	r7, [sp, #108]	; 0x6c
   1f954:	subs	r1, lr, #4
   1f958:	add	r1, r2, r1, lsr #2
   1f95c:	and	ip, r1, #1
   1f960:	beq	214c4 <ReadInt8Data+0x216c>
   1f964:	sub	r3, r1, ip
   1f968:	mov	r1, #0
   1f96c:	mov	r7, #32
   1f970:	mov	r4, r5
   1f974:	mov	r0, r8
   1f978:	vld1.32	{d16-d17}, [r4], r7
   1f97c:	mov	r2, r0
   1f980:	subs	r3, r3, #2
   1f984:	vmovn.i32	d16, q8
   1f988:	vuzp.8	d16, d17
   1f98c:	vmov.32	r6, d16[0]
   1f990:	str	r6, [r2, r1]!
   1f994:	add	r6, r5, #16
   1f998:	add	r1, r1, #8
   1f99c:	mov	r5, r4
   1f9a0:	vld1.32	{d16-d17}, [r6]
   1f9a4:	add	r2, r2, #4
   1f9a8:	vmovn.i32	d16, q8
   1f9ac:	vuzp.8	d16, d17
   1f9b0:	vst1.32	{d16[0]}, [r2]
   1f9b4:	bne	1f978 <ReadInt8Data+0x620>
   1f9b8:	b	214c8 <ReadInt8Data+0x2170>
   1f9bc:	cmp	r7, #256	; 0x100
   1f9c0:	bgt	20d98 <ReadInt8Data+0x1a40>
   1f9c4:	ldr	r3, [r6]
   1f9c8:	mov	r8, r5
   1f9cc:	add	r5, sp, #136	; 0x88
   1f9d0:	mov	r1, r9
   1f9d4:	mov	r2, r7
   1f9d8:	mov	r0, r5
   1f9dc:	bl	18b8 <fread@plt>
   1f9e0:	mov	sl, r0
   1f9e4:	cmp	r7, #1
   1f9e8:	blt	21cc8 <ReadInt8Data+0x2970>
   1f9ec:	mov	lr, #0
   1f9f0:	cmp	r7, #4
   1f9f4:	bcc	21550 <ReadInt8Data+0x21f8>
   1f9f8:	bic	lr, r7, #3
   1f9fc:	mov	r2, #1
   1fa00:	str	r7, [sp, #108]	; 0x6c
   1fa04:	subs	r1, lr, #4
   1fa08:	add	r1, r2, r1, lsr #2
   1fa0c:	and	ip, r1, #1
   1fa10:	beq	2151c <ReadInt8Data+0x21c4>
   1fa14:	sub	r3, r1, ip
   1fa18:	mov	r1, #0
   1fa1c:	mov	r7, #32
   1fa20:	mov	r4, r5
   1fa24:	mov	r0, r8
   1fa28:	vld1.32	{d16-d17}, [r4], r7
   1fa2c:	mov	r2, r0
   1fa30:	subs	r3, r3, #2
   1fa34:	vmovn.i32	d16, q8
   1fa38:	vuzp.8	d16, d17
   1fa3c:	vmov.32	r6, d16[0]
   1fa40:	str	r6, [r2, r1]!
   1fa44:	add	r6, r5, #16
   1fa48:	add	r1, r1, #8
   1fa4c:	mov	r5, r4
   1fa50:	vld1.32	{d16-d17}, [r6]
   1fa54:	add	r2, r2, #4
   1fa58:	vmovn.i32	d16, q8
   1fa5c:	vuzp.8	d16, d17
   1fa60:	vst1.32	{d16[0]}, [r2]
   1fa64:	bne	1fa28 <ReadInt8Data+0x6d0>
   1fa68:	b	21520 <ReadInt8Data+0x21c8>
   1fa6c:	cmp	r7, #256	; 0x100
   1fa70:	bgt	20f30 <ReadInt8Data+0x1bd8>
   1fa74:	ldr	r3, [r6]
   1fa78:	mov	r8, r5
   1fa7c:	add	r5, sp, #136	; 0x88
   1fa80:	mov	r1, r9
   1fa84:	mov	r2, r7
   1fa88:	mov	r0, r5
   1fa8c:	bl	18b8 <fread@plt>
   1fa90:	mov	sl, r0
   1fa94:	cmp	r7, #1
   1fa98:	blt	21cc8 <ReadInt8Data+0x2970>
   1fa9c:	mov	lr, #0
   1faa0:	cmp	r7, #4
   1faa4:	bcc	215ac <ReadInt8Data+0x2254>
   1faa8:	bic	lr, r7, #3
   1faac:	mov	r2, #1
   1fab0:	str	r7, [sp, #108]	; 0x6c
   1fab4:	subs	r1, lr, #4
   1fab8:	add	r1, r2, r1, lsr #2
   1fabc:	and	ip, r1, #1
   1fac0:	beq	21574 <ReadInt8Data+0x221c>
   1fac4:	sub	r3, r1, ip
   1fac8:	mov	r1, #0
   1facc:	mov	r7, #32
   1fad0:	mov	r4, r5
   1fad4:	mov	r0, r8
   1fad8:	vld1.32	{d16-d17}, [r4], r7
   1fadc:	mov	r2, r0
   1fae0:	subs	r3, r3, #2
   1fae4:	vcvt.s32.f32	q8, q8
   1fae8:	vmovn.i32	d16, q8
   1faec:	vuzp.8	d16, d17
   1faf0:	vmov.32	r6, d16[0]
   1faf4:	str	r6, [r2, r1]!
   1faf8:	add	r6, r5, #16
   1fafc:	add	r1, r1, #8
   1fb00:	mov	r5, r4
   1fb04:	vld1.32	{d16-d17}, [r6]
   1fb08:	add	r2, r2, #4
   1fb0c:	vcvt.s32.f32	q8, q8
   1fb10:	vmovn.i32	d16, q8
   1fb14:	vuzp.8	d16, d17
   1fb18:	vst1.32	{d16[0]}, [r2]
   1fb1c:	bne	1fad8 <ReadInt8Data+0x780>
   1fb20:	b	21578 <ReadInt8Data+0x2220>
   1fb24:	cmp	r7, #256	; 0x100
   1fb28:	bgt	210e0 <ReadInt8Data+0x1d88>
   1fb2c:	ldr	r3, [r6]
   1fb30:	add	r4, sp, #136	; 0x88
   1fb34:	mov	r1, r9
   1fb38:	mov	r2, r7
   1fb3c:	mov	r0, r4
   1fb40:	bl	18b8 <fread@plt>
   1fb44:	mov	sl, r0
   1fb48:	cmp	r7, #1
   1fb4c:	blt	21cc8 <ReadInt8Data+0x2970>
   1fb50:	and	r1, r7, #1
   1fb54:	mov	r0, #0
   1fb58:	beq	1fb9c <ReadInt8Data+0x844>
   1fb5c:	sub	r2, r7, r1
   1fb60:	add	r3, r4, #8
   1fb64:	mov	r0, #0
   1fb68:	vldr	d16, [r3, #-8]
   1fb6c:	mov	r6, r5
   1fb70:	vcvt.s32.f64	s0, d16
   1fb74:	vmov	r7, s0
   1fb78:	strb	r7, [r6, r0]!
   1fb7c:	add	r0, r0, #2
   1fb80:	vldr	d16, [r3]
   1fb84:	add	r3, r3, #16
   1fb88:	cmp	r2, r0
   1fb8c:	vcvt.s32.f64	s0, d16
   1fb90:	vmov	r7, s0
   1fb94:	strb	r7, [r6, #1]
   1fb98:	bne	1fb68 <ReadInt8Data+0x810>
   1fb9c:	cmp	r1, #0
   1fba0:	beq	21cc8 <ReadInt8Data+0x2970>
   1fba4:	add	r1, r4, r0, lsl #3
   1fba8:	vldr	d16, [r1]
   1fbac:	vcvt.s32.f64	s0, d16
   1fbb0:	vmov	r1, s0
   1fbb4:	strb	r1, [r5, r0]
   1fbb8:	mul	r0, sl, r9
   1fbbc:	sub	sp, fp, #28
   1fbc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbc4:	cmp	r7, #256	; 0x100
   1fbc8:	bgt	21248 <ReadInt8Data+0x1ef0>
   1fbcc:	ldr	r3, [r6]
   1fbd0:	add	r6, sp, #136	; 0x88
   1fbd4:	mov	r1, r9
   1fbd8:	mov	r2, r7
   1fbdc:	mov	r0, r6
   1fbe0:	bl	18b8 <fread@plt>
   1fbe4:	mov	sl, r0
   1fbe8:	cmp	r7, #1
   1fbec:	blt	2191c <ReadInt8Data+0x25c4>
   1fbf0:	mov	r8, #0
   1fbf4:	beq	21620 <ReadInt8Data+0x22c8>
   1fbf8:	bic	r8, r7, #1
   1fbfc:	mov	r2, #1
   1fc00:	mov	lr, r7
   1fc04:	subs	r1, r8, #2
   1fc08:	add	r1, r2, r1, lsr #1
   1fc0c:	and	ip, r1, #1
   1fc10:	beq	215dc <ReadInt8Data+0x2284>
   1fc14:	sub	r3, r1, ip
   1fc18:	mov	r1, #0
   1fc1c:	mov	r7, #32
   1fc20:	mov	r0, r5
   1fc24:	add	r5, r6, #16
   1fc28:	vld1.64	{d16-d17}, [r6], r7
   1fc2c:	mov	r2, r0
   1fc30:	subs	r3, r3, #2
   1fc34:	vmovn.i64	d16, q8
   1fc38:	vmov.32	r4, d16[0]
   1fc3c:	strb	r4, [r2, r1]!
   1fc40:	vmov.32	r4, d16[1]
   1fc44:	add	r1, r1, #4
   1fc48:	strb	r4, [r2, #1]
   1fc4c:	vld1.64	{d16-d17}, [r5]
   1fc50:	vmovn.i64	d16, q8
   1fc54:	vmov.32	r5, d16[1]
   1fc58:	strb	r5, [r2, #3]
   1fc5c:	vmov.32	r5, d16[0]
   1fc60:	strb	r5, [r2, #2]
   1fc64:	bne	1fc24 <ReadInt8Data+0x8cc>
   1fc68:	b	215e4 <ReadInt8Data+0x228c>
   1fc6c:	sub	r0, r7, #256	; 0x100
   1fc70:	mov	r8, r5
   1fc74:	add	r1, r5, #256	; 0x100
   1fc78:	mov	sl, #0
   1fc7c:	str	r9, [sp, #128]	; 0x80
   1fc80:	str	r7, [sp, #108]	; 0x6c
   1fc84:	str	r0, [sp, #124]	; 0x7c
   1fc88:	mov	r0, #0
   1fc8c:	mov	r5, r1
   1fc90:	ldr	r3, [r6]
   1fc94:	ldr	r1, [sp, #128]	; 0x80
   1fc98:	add	r4, sp, #136	; 0x88
   1fc9c:	mov	r9, r0
   1fca0:	mov	r2, #256	; 0x100
   1fca4:	mov	r0, r4
   1fca8:	bl	18b8 <fread@plt>
   1fcac:	mov	r6, r0
   1fcb0:	mov	r7, #0
   1fcb4:	mov	r0, r4
   1fcb8:	bl	1c20 <Mat_int16Swap>
   1fcbc:	strb	r0, [r8, r7]
   1fcc0:	add	r7, r7, #1
   1fcc4:	add	r4, r4, #2
   1fcc8:	cmp	r7, #256	; 0x100
   1fccc:	bne	1fcb4 <ReadInt8Data+0x95c>
   1fcd0:	ldr	r2, [sp, #124]	; 0x7c
   1fcd4:	add	sl, r6, sl
   1fcd8:	ldr	r6, [sp, #132]	; 0x84
   1fcdc:	add	r0, r9, #256	; 0x100
   1fce0:	add	r8, r8, #256	; 0x100
   1fce4:	add	r1, r5, #256	; 0x100
   1fce8:	cmp	r0, r2
   1fcec:	blt	1fc8c <ReadInt8Data+0x934>
   1fcf0:	ldr	r7, [sp, #108]	; 0x6c
   1fcf4:	cmp	r0, r7
   1fcf8:	bge	21b14 <ReadInt8Data+0x27bc>
   1fcfc:	mov	r1, r6
   1fd00:	sub	r6, r7, r0
   1fd04:	add	r4, sp, #136	; 0x88
   1fd08:	ldr	r3, [r1]
   1fd0c:	ldr	r1, [sp, #128]	; 0x80
   1fd10:	mov	r0, r4
   1fd14:	mov	r2, r6
   1fd18:	mov	r8, r1
   1fd1c:	bl	18b8 <fread@plt>
   1fd20:	add	sl, r0, sl
   1fd24:	cmp	r6, #1
   1fd28:	blt	21b04 <ReadInt8Data+0x27ac>
   1fd2c:	sub	r0, r7, r9
   1fd30:	sub	r6, r0, #256	; 0x100
   1fd34:	mov	r0, r4
   1fd38:	bl	1c20 <Mat_int16Swap>
   1fd3c:	strb	r0, [r5], #1
   1fd40:	add	r4, r4, #2
   1fd44:	subs	r6, r6, #1
   1fd48:	bne	1fd34 <ReadInt8Data+0x9dc>
   1fd4c:	mov	r9, r8
   1fd50:	mul	r0, sl, r9
   1fd54:	sub	sp, fp, #28
   1fd58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd5c:	sub	r0, r7, #256	; 0x100
   1fd60:	mov	r8, r5
   1fd64:	add	r1, r5, #256	; 0x100
   1fd68:	mov	sl, #0
   1fd6c:	str	r9, [sp, #128]	; 0x80
   1fd70:	str	r7, [sp, #108]	; 0x6c
   1fd74:	str	r0, [sp, #124]	; 0x7c
   1fd78:	mov	r0, #0
   1fd7c:	mov	r5, r1
   1fd80:	ldr	r3, [r6]
   1fd84:	ldr	r1, [sp, #128]	; 0x80
   1fd88:	add	r4, sp, #136	; 0x88
   1fd8c:	mov	r9, r0
   1fd90:	mov	r2, #256	; 0x100
   1fd94:	mov	r0, r4
   1fd98:	bl	18b8 <fread@plt>
   1fd9c:	mov	r6, r0
   1fda0:	mov	r7, #0
   1fda4:	mov	r0, r4
   1fda8:	bl	1c34 <Mat_uint16Swap>
   1fdac:	strb	r0, [r8, r7]
   1fdb0:	add	r7, r7, #1
   1fdb4:	add	r4, r4, #2
   1fdb8:	cmp	r7, #256	; 0x100
   1fdbc:	bne	1fda4 <ReadInt8Data+0xa4c>
   1fdc0:	ldr	r2, [sp, #124]	; 0x7c
   1fdc4:	add	sl, r6, sl
   1fdc8:	ldr	r6, [sp, #132]	; 0x84
   1fdcc:	add	r0, r9, #256	; 0x100
   1fdd0:	add	r8, r8, #256	; 0x100
   1fdd4:	add	r1, r5, #256	; 0x100
   1fdd8:	cmp	r0, r2
   1fddc:	blt	1fd7c <ReadInt8Data+0xa24>
   1fde0:	ldr	r7, [sp, #108]	; 0x6c
   1fde4:	cmp	r0, r7
   1fde8:	bge	21b14 <ReadInt8Data+0x27bc>
   1fdec:	mov	r1, r6
   1fdf0:	sub	r6, r7, r0
   1fdf4:	add	r4, sp, #136	; 0x88
   1fdf8:	ldr	r3, [r1]
   1fdfc:	ldr	r1, [sp, #128]	; 0x80
   1fe00:	mov	r0, r4
   1fe04:	mov	r2, r6
   1fe08:	mov	r8, r1
   1fe0c:	bl	18b8 <fread@plt>
   1fe10:	add	sl, r0, sl
   1fe14:	cmp	r6, #1
   1fe18:	blt	21b04 <ReadInt8Data+0x27ac>
   1fe1c:	sub	r0, r7, r9
   1fe20:	sub	r6, r0, #256	; 0x100
   1fe24:	mov	r0, r4
   1fe28:	bl	1c34 <Mat_uint16Swap>
   1fe2c:	strb	r0, [r5], #1
   1fe30:	add	r4, r4, #2
   1fe34:	subs	r6, r6, #1
   1fe38:	bne	1fe24 <ReadInt8Data+0xacc>
   1fe3c:	mov	r9, r8
   1fe40:	mul	r0, sl, r9
   1fe44:	sub	sp, fp, #28
   1fe48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe4c:	sub	r0, r7, #256	; 0x100
   1fe50:	mov	r8, r5
   1fe54:	add	r1, r5, #256	; 0x100
   1fe58:	mov	sl, #0
   1fe5c:	str	r9, [sp, #128]	; 0x80
   1fe60:	str	r7, [sp, #108]	; 0x6c
   1fe64:	str	r0, [sp, #124]	; 0x7c
   1fe68:	mov	r0, #0
   1fe6c:	mov	r5, r1
   1fe70:	ldr	r3, [r6]
   1fe74:	ldr	r1, [sp, #128]	; 0x80
   1fe78:	add	r4, sp, #136	; 0x88
   1fe7c:	mov	r9, r0
   1fe80:	mov	r2, #256	; 0x100
   1fe84:	mov	r0, r4
   1fe88:	bl	18b8 <fread@plt>
   1fe8c:	mov	r6, r0
   1fe90:	mov	r7, #0
   1fe94:	mov	r0, r4
   1fe98:	bl	1bf8 <Mat_int32Swap>
   1fe9c:	strb	r0, [r8, r7]
   1fea0:	add	r7, r7, #1
   1fea4:	add	r4, r4, #4
   1fea8:	cmp	r7, #256	; 0x100
   1feac:	bne	1fe94 <ReadInt8Data+0xb3c>
   1feb0:	ldr	r2, [sp, #124]	; 0x7c
   1feb4:	add	sl, r6, sl
   1feb8:	ldr	r6, [sp, #132]	; 0x84
   1febc:	add	r0, r9, #256	; 0x100
   1fec0:	add	r8, r8, #256	; 0x100
   1fec4:	add	r1, r5, #256	; 0x100
   1fec8:	cmp	r0, r2
   1fecc:	blt	1fe6c <ReadInt8Data+0xb14>
   1fed0:	ldr	r7, [sp, #108]	; 0x6c
   1fed4:	cmp	r0, r7
   1fed8:	bge	21b14 <ReadInt8Data+0x27bc>
   1fedc:	mov	r1, r6
   1fee0:	sub	r6, r7, r0
   1fee4:	add	r4, sp, #136	; 0x88
   1fee8:	ldr	r3, [r1]
   1feec:	ldr	r1, [sp, #128]	; 0x80
   1fef0:	mov	r0, r4
   1fef4:	mov	r2, r6
   1fef8:	mov	r8, r1
   1fefc:	bl	18b8 <fread@plt>
   1ff00:	add	sl, r0, sl
   1ff04:	cmp	r6, #1
   1ff08:	blt	21b04 <ReadInt8Data+0x27ac>
   1ff0c:	sub	r0, r7, r9
   1ff10:	sub	r6, r0, #256	; 0x100
   1ff14:	mov	r0, r4
   1ff18:	bl	1bf8 <Mat_int32Swap>
   1ff1c:	strb	r0, [r5], #1
   1ff20:	add	r4, r4, #4
   1ff24:	subs	r6, r6, #1
   1ff28:	bne	1ff14 <ReadInt8Data+0xbbc>
   1ff2c:	mov	r9, r8
   1ff30:	mul	r0, sl, r9
   1ff34:	sub	sp, fp, #28
   1ff38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff3c:	sub	r0, r7, #256	; 0x100
   1ff40:	mov	r8, r5
   1ff44:	add	r1, r5, #256	; 0x100
   1ff48:	mov	sl, #0
   1ff4c:	str	r9, [sp, #128]	; 0x80
   1ff50:	str	r7, [sp, #108]	; 0x6c
   1ff54:	str	r0, [sp, #124]	; 0x7c
   1ff58:	mov	r0, #0
   1ff5c:	mov	r5, r1
   1ff60:	ldr	r3, [r6]
   1ff64:	ldr	r1, [sp, #128]	; 0x80
   1ff68:	add	r4, sp, #136	; 0x88
   1ff6c:	mov	r9, r0
   1ff70:	mov	r2, #256	; 0x100
   1ff74:	mov	r0, r4
   1ff78:	bl	18b8 <fread@plt>
   1ff7c:	mov	r6, r0
   1ff80:	mov	r7, #0
   1ff84:	mov	r0, r4
   1ff88:	bl	1c0c <Mat_uint32Swap>
   1ff8c:	strb	r0, [r8, r7]
   1ff90:	add	r7, r7, #1
   1ff94:	add	r4, r4, #4
   1ff98:	cmp	r7, #256	; 0x100
   1ff9c:	bne	1ff84 <ReadInt8Data+0xc2c>
   1ffa0:	ldr	r2, [sp, #124]	; 0x7c
   1ffa4:	add	sl, r6, sl
   1ffa8:	ldr	r6, [sp, #132]	; 0x84
   1ffac:	add	r0, r9, #256	; 0x100
   1ffb0:	add	r8, r8, #256	; 0x100
   1ffb4:	add	r1, r5, #256	; 0x100
   1ffb8:	cmp	r0, r2
   1ffbc:	blt	1ff5c <ReadInt8Data+0xc04>
   1ffc0:	ldr	r7, [sp, #108]	; 0x6c
   1ffc4:	cmp	r0, r7
   1ffc8:	bge	21b14 <ReadInt8Data+0x27bc>
   1ffcc:	mov	r1, r6
   1ffd0:	sub	r6, r7, r0
   1ffd4:	add	r4, sp, #136	; 0x88
   1ffd8:	ldr	r3, [r1]
   1ffdc:	ldr	r1, [sp, #128]	; 0x80
   1ffe0:	mov	r0, r4
   1ffe4:	mov	r2, r6
   1ffe8:	mov	r8, r1
   1ffec:	bl	18b8 <fread@plt>
   1fff0:	add	sl, r0, sl
   1fff4:	cmp	r6, #1
   1fff8:	blt	21b04 <ReadInt8Data+0x27ac>
   1fffc:	sub	r0, r7, r9
   20000:	sub	r6, r0, #256	; 0x100
   20004:	mov	r0, r4
   20008:	bl	1c0c <Mat_uint32Swap>
   2000c:	strb	r0, [r5], #1
   20010:	add	r4, r4, #4
   20014:	subs	r6, r6, #1
   20018:	bne	20004 <ReadInt8Data+0xcac>
   2001c:	mov	r9, r8
   20020:	mul	r0, sl, r9
   20024:	sub	sp, fp, #28
   20028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2002c:	sub	r0, r7, #256	; 0x100
   20030:	str	r9, [sp, #128]	; 0x80
   20034:	mov	r9, r5
   20038:	add	r1, r5, #256	; 0x100
   2003c:	mov	sl, #0
   20040:	str	r7, [sp, #108]	; 0x6c
   20044:	str	r0, [sp, #124]	; 0x7c
   20048:	mov	r0, #0
   2004c:	mov	r5, r1
   20050:	ldr	r3, [r6]
   20054:	ldr	r1, [sp, #128]	; 0x80
   20058:	add	r4, sp, #136	; 0x88
   2005c:	mov	r8, r0
   20060:	mov	r2, #256	; 0x100
   20064:	mov	r0, r4
   20068:	bl	18b8 <fread@plt>
   2006c:	mov	r6, r0
   20070:	mov	r7, #0
   20074:	mov	r0, r4
   20078:	bl	1c4c <Mat_floatSwap>
   2007c:	vcvt.s32.f32	s0, s0
   20080:	add	r4, r4, #4
   20084:	vmov	r0, s0
   20088:	strb	r0, [r9, r7]
   2008c:	add	r7, r7, #1
   20090:	cmp	r7, #256	; 0x100
   20094:	bne	20074 <ReadInt8Data+0xd1c>
   20098:	ldr	r2, [sp, #124]	; 0x7c
   2009c:	add	sl, r6, sl
   200a0:	ldr	r6, [sp, #132]	; 0x84
   200a4:	add	r0, r8, #256	; 0x100
   200a8:	add	r9, r9, #256	; 0x100
   200ac:	add	r1, r5, #256	; 0x100
   200b0:	cmp	r0, r2
   200b4:	blt	2004c <ReadInt8Data+0xcf4>
   200b8:	ldr	r7, [sp, #108]	; 0x6c
   200bc:	cmp	r0, r7
   200c0:	bge	21b14 <ReadInt8Data+0x27bc>
   200c4:	mov	r1, r6
   200c8:	ldr	r9, [sp, #128]	; 0x80
   200cc:	sub	r6, r7, r0
   200d0:	add	r4, sp, #136	; 0x88
   200d4:	ldr	r3, [r1]
   200d8:	mov	r0, r4
   200dc:	mov	r2, r6
   200e0:	mov	r1, r9
   200e4:	bl	18b8 <fread@plt>
   200e8:	add	sl, r0, sl
   200ec:	cmp	r6, #1
   200f0:	blt	21cc8 <ReadInt8Data+0x2970>
   200f4:	sub	r0, r7, r8
   200f8:	sub	r6, r0, #256	; 0x100
   200fc:	mov	r0, r4
   20100:	bl	1c4c <Mat_floatSwap>
   20104:	vcvt.s32.f32	s0, s0
   20108:	add	r4, r4, #4
   2010c:	subs	r6, r6, #1
   20110:	vmov	r0, s0
   20114:	strb	r0, [r5], #1
   20118:	bne	200fc <ReadInt8Data+0xda4>
   2011c:	b	21cc8 <ReadInt8Data+0x2970>
   20120:	sub	r0, r7, #256	; 0x100
   20124:	str	r9, [sp, #128]	; 0x80
   20128:	mov	r9, r5
   2012c:	add	r1, r5, #256	; 0x100
   20130:	mov	sl, #0
   20134:	str	r7, [sp, #108]	; 0x6c
   20138:	str	r0, [sp, #124]	; 0x7c
   2013c:	mov	r0, #0
   20140:	mov	r5, r1
   20144:	ldr	r3, [r6]
   20148:	ldr	r1, [sp, #128]	; 0x80
   2014c:	add	r4, sp, #136	; 0x88
   20150:	mov	r8, r0
   20154:	mov	r2, #256	; 0x100
   20158:	mov	r0, r4
   2015c:	bl	18b8 <fread@plt>
   20160:	mov	r6, r0
   20164:	mov	r7, #0
   20168:	mov	r0, r4
   2016c:	bl	1c90 <Mat_doubleSwap>
   20170:	vcvt.s32.f64	s0, d0
   20174:	add	r4, r4, #8
   20178:	vmov	r0, s0
   2017c:	strb	r0, [r9, r7]
   20180:	add	r7, r7, #1
   20184:	cmp	r7, #256	; 0x100
   20188:	bne	20168 <ReadInt8Data+0xe10>
   2018c:	ldr	r2, [sp, #124]	; 0x7c
   20190:	add	sl, r6, sl
   20194:	ldr	r6, [sp, #132]	; 0x84
   20198:	add	r0, r8, #256	; 0x100
   2019c:	add	r9, r9, #256	; 0x100
   201a0:	add	r1, r5, #256	; 0x100
   201a4:	cmp	r0, r2
   201a8:	blt	20140 <ReadInt8Data+0xde8>
   201ac:	ldr	r7, [sp, #108]	; 0x6c
   201b0:	cmp	r0, r7
   201b4:	bge	21b14 <ReadInt8Data+0x27bc>
   201b8:	mov	r1, r6
   201bc:	ldr	r9, [sp, #128]	; 0x80
   201c0:	sub	r6, r7, r0
   201c4:	add	r4, sp, #136	; 0x88
   201c8:	ldr	r3, [r1]
   201cc:	mov	r0, r4
   201d0:	mov	r2, r6
   201d4:	mov	r1, r9
   201d8:	bl	18b8 <fread@plt>
   201dc:	add	sl, r0, sl
   201e0:	cmp	r6, #1
   201e4:	blt	21cc8 <ReadInt8Data+0x2970>
   201e8:	sub	r0, r7, r8
   201ec:	sub	r6, r0, #256	; 0x100
   201f0:	mov	r0, r4
   201f4:	bl	1c90 <Mat_doubleSwap>
   201f8:	vcvt.s32.f64	s0, d0
   201fc:	add	r4, r4, #8
   20200:	subs	r6, r6, #1
   20204:	vmov	r0, s0
   20208:	strb	r0, [r5], #1
   2020c:	bne	201f0 <ReadInt8Data+0xe98>
   20210:	b	21cc8 <ReadInt8Data+0x2970>
   20214:	sub	r0, r7, #256	; 0x100
   20218:	str	r7, [sp, #108]	; 0x6c
   2021c:	add	r1, r5, #256	; 0x100
   20220:	mov	r7, r5
   20224:	mov	sl, #0
   20228:	str	r5, [sp, #120]	; 0x78
   2022c:	str	r0, [sp, #112]	; 0x70
   20230:	mov	r0, #0
   20234:	ldr	r3, [r6]
   20238:	add	r4, sp, #136	; 0x88
   2023c:	str	r0, [sp, #124]	; 0x7c
   20240:	mov	r5, r1
   20244:	mov	r1, r9
   20248:	mov	r2, #256	; 0x100
   2024c:	mov	r6, r9
   20250:	mov	r0, r4
   20254:	bl	18b8 <fread@plt>
   20258:	mov	r8, r0
   2025c:	mov	r9, #0
   20260:	mov	r0, r4
   20264:	bl	1b84 <Mat_int64Swap>
   20268:	strb	r0, [r7, r9]
   2026c:	add	r9, r9, #1
   20270:	add	r4, r4, #8
   20274:	cmp	r9, #256	; 0x100
   20278:	bne	20260 <ReadInt8Data+0xf08>
   2027c:	ldr	r4, [sp, #124]	; 0x7c
   20280:	ldr	r2, [sp, #112]	; 0x70
   20284:	mov	r9, r6
   20288:	ldr	r6, [sp, #132]	; 0x84
   2028c:	add	sl, r8, sl
   20290:	add	r7, r7, #256	; 0x100
   20294:	add	r1, r5, #256	; 0x100
   20298:	add	r0, r4, #256	; 0x100
   2029c:	cmp	r0, r2
   202a0:	blt	20234 <ReadInt8Data+0xedc>
   202a4:	ldr	r7, [sp, #108]	; 0x6c
   202a8:	cmp	r0, r7
   202ac:	bge	213e8 <ReadInt8Data+0x2090>
   202b0:	ldr	r3, [r6]
   202b4:	sub	r8, r7, r0
   202b8:	add	r6, sp, #136	; 0x88
   202bc:	mov	r1, r9
   202c0:	mov	r0, r6
   202c4:	mov	r2, r8
   202c8:	bl	18b8 <fread@plt>
   202cc:	add	sl, r0, sl
   202d0:	cmp	r8, #1
   202d4:	blt	202f8 <ReadInt8Data+0xfa0>
   202d8:	sub	r0, r7, r4
   202dc:	sub	r4, r0, #256	; 0x100
   202e0:	mov	r0, r6
   202e4:	bl	1b84 <Mat_int64Swap>
   202e8:	strb	r0, [r5], #1
   202ec:	add	r6, r6, #8
   202f0:	subs	r4, r4, #1
   202f4:	bne	202e0 <ReadInt8Data+0xf88>
   202f8:	ldr	r5, [sp, #120]	; 0x78
   202fc:	b	2191c <ReadInt8Data+0x25c4>
   20300:	add	r0, r8, #224	; 0xe0
   20304:	str	r5, [sp, #120]	; 0x78
   20308:	mov	r6, #0
   2030c:	mov	r5, #0
   20310:	mov	sl, r9
   20314:	str	r0, [sp, #124]	; 0x7c
   20318:	add	r0, r8, #208	; 0xd0
   2031c:	str	r0, [sp, #116]	; 0x74
   20320:	add	r0, r8, #192	; 0xc0
   20324:	str	r0, [sp, #112]	; 0x70
   20328:	add	r0, r8, #176	; 0xb0
   2032c:	str	r0, [sp, #108]	; 0x6c
   20330:	add	r0, r8, #160	; 0xa0
   20334:	str	r0, [sp, #104]	; 0x68
   20338:	add	r0, r8, #144	; 0x90
   2033c:	str	r0, [sp, #100]	; 0x64
   20340:	add	r0, r8, #128	; 0x80
   20344:	str	r0, [sp, #96]	; 0x60
   20348:	add	r0, r8, #112	; 0x70
   2034c:	str	r0, [sp, #92]	; 0x5c
   20350:	add	r0, r8, #96	; 0x60
   20354:	str	r0, [sp, #88]	; 0x58
   20358:	add	r0, r8, #80	; 0x50
   2035c:	str	r0, [sp, #84]	; 0x54
   20360:	add	r0, r8, #64	; 0x40
   20364:	str	r0, [sp, #80]	; 0x50
   20368:	add	r0, r8, #48	; 0x30
   2036c:	str	r0, [sp, #76]	; 0x4c
   20370:	add	r0, r8, #32
   20374:	str	r0, [sp, #72]	; 0x48
   20378:	add	r0, r8, #16
   2037c:	str	r0, [sp, #68]	; 0x44
   20380:	add	r0, r4, #240	; 0xf0
   20384:	str	r0, [sp, #64]	; 0x40
   20388:	add	r0, r4, #224	; 0xe0
   2038c:	str	r0, [sp, #60]	; 0x3c
   20390:	add	r0, r4, #208	; 0xd0
   20394:	str	r0, [sp, #56]	; 0x38
   20398:	add	r0, r4, #192	; 0xc0
   2039c:	str	r0, [sp, #52]	; 0x34
   203a0:	add	r0, r4, #176	; 0xb0
   203a4:	str	r0, [sp, #48]	; 0x30
   203a8:	add	r0, r4, #160	; 0xa0
   203ac:	str	r0, [sp, #44]	; 0x2c
   203b0:	add	r0, r4, #144	; 0x90
   203b4:	str	r0, [sp, #40]	; 0x28
   203b8:	add	r0, r4, #128	; 0x80
   203bc:	str	r0, [sp, #36]	; 0x24
   203c0:	add	r0, r4, #112	; 0x70
   203c4:	str	r0, [sp, #32]
   203c8:	add	r0, r4, #96	; 0x60
   203cc:	str	r0, [sp, #28]
   203d0:	add	r0, r4, #80	; 0x50
   203d4:	str	r0, [sp, #24]
   203d8:	add	r0, r4, #64	; 0x40
   203dc:	str	r0, [sp, #20]
   203e0:	add	r0, r4, #48	; 0x30
   203e4:	str	r0, [sp, #16]
   203e8:	add	r0, r4, #32
   203ec:	str	r0, [sp, #12]
   203f0:	add	r0, r4, #16
   203f4:	str	r0, [sp, #8]
   203f8:	sub	r0, r7, #256	; 0x100
   203fc:	str	r0, [sp, #4]
   20400:	ldr	r0, [sp, #132]	; 0x84
   20404:	add	r9, sp, #136	; 0x88
   20408:	mov	r1, sl
   2040c:	mov	r2, #256	; 0x100
   20410:	ldr	r3, [r0]
   20414:	mov	r0, r9
   20418:	bl	18b8 <fread@plt>
   2041c:	vld1.16	{d16-d17}, [r9]
   20420:	ldr	r1, [sp, #120]	; 0x78
   20424:	mov	r3, #248	; 0xf8
   20428:	add	r5, r0, r5
   2042c:	ldr	r0, [sp, #4]
   20430:	add	r2, r1, r6
   20434:	add	r6, r6, #256	; 0x100
   20438:	vmovn.i16	d16, q8
   2043c:	mov	r1, r2
   20440:	cmp	r6, r0
   20444:	vst1.8	{d16}, [r1], r3
   20448:	add	r3, r2, #8
   2044c:	vld1.16	{d16-d17}, [r4]
   20450:	vmovn.i16	d16, q8
   20454:	vst1.8	{d16}, [r3]
   20458:	ldr	r3, [sp, #8]
   2045c:	vld1.16	{d16-d17}, [r3]
   20460:	add	r3, r2, #16
   20464:	vmovn.i16	d16, q8
   20468:	vst1.8	{d16}, [r3]
   2046c:	ldr	r3, [sp, #12]
   20470:	vld1.16	{d16-d17}, [r3]
   20474:	add	r3, r2, #24
   20478:	vmovn.i16	d16, q8
   2047c:	vst1.8	{d16}, [r3]
   20480:	ldr	r3, [sp, #16]
   20484:	vld1.16	{d16-d17}, [r3]
   20488:	add	r3, r2, #32
   2048c:	vmovn.i16	d16, q8
   20490:	vst1.8	{d16}, [r3]
   20494:	ldr	r3, [sp, #20]
   20498:	vld1.16	{d16-d17}, [r3]
   2049c:	add	r3, r2, #40	; 0x28
   204a0:	vmovn.i16	d16, q8
   204a4:	vst1.8	{d16}, [r3]
   204a8:	ldr	r3, [sp, #24]
   204ac:	vld1.16	{d16-d17}, [r3]
   204b0:	add	r3, r2, #48	; 0x30
   204b4:	vmovn.i16	d16, q8
   204b8:	vst1.8	{d16}, [r3]
   204bc:	ldr	r3, [sp, #28]
   204c0:	vld1.16	{d16-d17}, [r3]
   204c4:	add	r3, r2, #56	; 0x38
   204c8:	vmovn.i16	d16, q8
   204cc:	vst1.8	{d16}, [r3]
   204d0:	ldr	r3, [sp, #32]
   204d4:	vld1.16	{d16-d17}, [r3]
   204d8:	add	r3, r2, #64	; 0x40
   204dc:	vmovn.i16	d16, q8
   204e0:	vst1.8	{d16}, [r3]
   204e4:	ldr	r3, [sp, #36]	; 0x24
   204e8:	vld1.16	{d16-d17}, [r3]
   204ec:	add	r3, r2, #72	; 0x48
   204f0:	vmovn.i16	d16, q8
   204f4:	vst1.8	{d16}, [r3]
   204f8:	ldr	r3, [sp, #40]	; 0x28
   204fc:	vld1.16	{d16-d17}, [r3]
   20500:	add	r3, r2, #80	; 0x50
   20504:	vmovn.i16	d16, q8
   20508:	vst1.8	{d16}, [r3]
   2050c:	ldr	r3, [sp, #44]	; 0x2c
   20510:	vld1.16	{d16-d17}, [r3]
   20514:	add	r3, r2, #88	; 0x58
   20518:	vmovn.i16	d16, q8
   2051c:	vst1.8	{d16}, [r3]
   20520:	ldr	r3, [sp, #48]	; 0x30
   20524:	vld1.16	{d16-d17}, [r3]
   20528:	add	r3, r2, #96	; 0x60
   2052c:	vmovn.i16	d16, q8
   20530:	vst1.8	{d16}, [r3]
   20534:	ldr	r3, [sp, #52]	; 0x34
   20538:	vld1.16	{d16-d17}, [r3]
   2053c:	add	r3, r2, #104	; 0x68
   20540:	vmovn.i16	d16, q8
   20544:	vst1.8	{d16}, [r3]
   20548:	ldr	r3, [sp, #56]	; 0x38
   2054c:	vld1.16	{d16-d17}, [r3]
   20550:	add	r3, r2, #112	; 0x70
   20554:	vmovn.i16	d16, q8
   20558:	vst1.8	{d16}, [r3]
   2055c:	ldr	r3, [sp, #60]	; 0x3c
   20560:	vld1.16	{d16-d17}, [r3]
   20564:	add	r3, r2, #120	; 0x78
   20568:	vmovn.i16	d16, q8
   2056c:	vst1.8	{d16}, [r3]
   20570:	ldr	r3, [sp, #64]	; 0x40
   20574:	vld1.16	{d16-d17}, [r3]
   20578:	add	r3, r2, #128	; 0x80
   2057c:	vmovn.i16	d16, q8
   20580:	vst1.8	{d16}, [r3]
   20584:	add	r3, r2, #136	; 0x88
   20588:	vld1.16	{d16-d17}, [r8]
   2058c:	vmovn.i16	d16, q8
   20590:	vst1.8	{d16}, [r3]
   20594:	ldr	r3, [sp, #68]	; 0x44
   20598:	vld1.16	{d16-d17}, [r3]
   2059c:	add	r3, r2, #144	; 0x90
   205a0:	vmovn.i16	d16, q8
   205a4:	vst1.8	{d16}, [r3]
   205a8:	ldr	r3, [sp, #72]	; 0x48
   205ac:	vld1.16	{d16-d17}, [r3]
   205b0:	add	r3, r2, #152	; 0x98
   205b4:	vmovn.i16	d16, q8
   205b8:	vst1.8	{d16}, [r3]
   205bc:	ldr	r3, [sp, #76]	; 0x4c
   205c0:	vld1.16	{d16-d17}, [r3]
   205c4:	add	r3, r2, #160	; 0xa0
   205c8:	vmovn.i16	d16, q8
   205cc:	vst1.8	{d16}, [r3]
   205d0:	ldr	r3, [sp, #80]	; 0x50
   205d4:	vld1.16	{d16-d17}, [r3]
   205d8:	add	r3, r2, #168	; 0xa8
   205dc:	vmovn.i16	d16, q8
   205e0:	vst1.8	{d16}, [r3]
   205e4:	ldr	r3, [sp, #84]	; 0x54
   205e8:	vld1.16	{d16-d17}, [r3]
   205ec:	add	r3, r2, #176	; 0xb0
   205f0:	vmovn.i16	d16, q8
   205f4:	vst1.8	{d16}, [r3]
   205f8:	ldr	r3, [sp, #88]	; 0x58
   205fc:	vld1.16	{d16-d17}, [r3]
   20600:	add	r3, r2, #184	; 0xb8
   20604:	vmovn.i16	d16, q8
   20608:	vst1.8	{d16}, [r3]
   2060c:	ldr	r3, [sp, #92]	; 0x5c
   20610:	vld1.16	{d16-d17}, [r3]
   20614:	add	r3, r2, #192	; 0xc0
   20618:	vmovn.i16	d16, q8
   2061c:	vst1.8	{d16}, [r3]
   20620:	ldr	r3, [sp, #96]	; 0x60
   20624:	vld1.16	{d16-d17}, [r3]
   20628:	add	r3, r2, #200	; 0xc8
   2062c:	vmovn.i16	d16, q8
   20630:	vst1.8	{d16}, [r3]
   20634:	ldr	r3, [sp, #100]	; 0x64
   20638:	vld1.16	{d16-d17}, [r3]
   2063c:	add	r3, r2, #208	; 0xd0
   20640:	vmovn.i16	d16, q8
   20644:	vst1.8	{d16}, [r3]
   20648:	ldr	r3, [sp, #104]	; 0x68
   2064c:	vld1.16	{d16-d17}, [r3]
   20650:	add	r3, r2, #216	; 0xd8
   20654:	vmovn.i16	d16, q8
   20658:	vst1.8	{d16}, [r3]
   2065c:	ldr	r3, [sp, #108]	; 0x6c
   20660:	vld1.16	{d16-d17}, [r3]
   20664:	add	r3, r2, #224	; 0xe0
   20668:	vmovn.i16	d16, q8
   2066c:	vst1.8	{d16}, [r3]
   20670:	ldr	r3, [sp, #112]	; 0x70
   20674:	vld1.16	{d16-d17}, [r3]
   20678:	add	r3, r2, #232	; 0xe8
   2067c:	add	r2, r2, #240	; 0xf0
   20680:	vmovn.i16	d16, q8
   20684:	vst1.8	{d16}, [r3]
   20688:	ldr	r3, [sp, #116]	; 0x74
   2068c:	vld1.16	{d16-d17}, [r3]
   20690:	vmovn.i16	d16, q8
   20694:	vst1.8	{d16}, [r2]
   20698:	ldr	r2, [sp, #124]	; 0x7c
   2069c:	vld1.16	{d16-d17}, [r2]
   206a0:	vmovn.i16	d16, q8
   206a4:	vst1.8	{d16}, [r1]
   206a8:	blt	20400 <ReadInt8Data+0x10a8>
   206ac:	ldr	r8, [sp, #120]	; 0x78
   206b0:	mov	r9, sl
   206b4:	mov	sl, r5
   206b8:	cmp	r6, r7
   206bc:	bge	21cc8 <ReadInt8Data+0x2970>
   206c0:	ldr	r0, [sp, #132]	; 0x84
   206c4:	sub	r5, r7, r6
   206c8:	add	r4, sp, #136	; 0x88
   206cc:	mov	r1, r9
   206d0:	mov	r2, r5
   206d4:	ldr	r3, [r0]
   206d8:	mov	r0, r4
   206dc:	bl	18b8 <fread@plt>
   206e0:	add	sl, r0, sl
   206e4:	cmp	r5, #1
   206e8:	blt	21cc8 <ReadInt8Data+0x2970>
   206ec:	mov	lr, #0
   206f0:	cmp	r5, #8
   206f4:	mov	r3, r8
   206f8:	bcc	2168c <ReadInt8Data+0x2334>
   206fc:	bic	lr, r5, #7
   20700:	mov	r2, #1
   20704:	str	r9, [sp, #128]	; 0x80
   20708:	mov	r9, r3
   2070c:	subs	r1, lr, #8
   20710:	add	r1, r2, r1, lsr #3
   20714:	and	r0, r1, #1
   20718:	str	r0, [sp, #132]	; 0x84
   2071c:	beq	21644 <ReadInt8Data+0x22ec>
   20720:	bic	r3, r5, #7
   20724:	mov	ip, r7
   20728:	mov	r8, r5
   2072c:	mov	r5, #32
   20730:	sub	r3, r3, #8
   20734:	add	r2, r2, r3, lsr #3
   20738:	mvn	r7, r3, lsr #3
   2073c:	and	r2, r2, #1
   20740:	add	r3, r7, r2
   20744:	add	r7, r9, r6
   20748:	mov	r2, #0
   2074c:	add	r1, r4, #16
   20750:	vld1.16	{d16-d17}, [r4], r5
   20754:	add	r0, r7, r2
   20758:	adds	r3, r3, #2
   2075c:	add	r2, r2, #16
   20760:	vmovn.i16	d16, q8
   20764:	vst1.8	{d16}, [r0]
   20768:	add	r0, r0, #8
   2076c:	vld1.16	{d16-d17}, [r1]
   20770:	vmovn.i16	d16, q8
   20774:	vst1.8	{d16}, [r0]
   20778:	bne	2074c <ReadInt8Data+0x13f4>
   2077c:	b	21650 <ReadInt8Data+0x22f8>
   20780:	add	r0, r8, #224	; 0xe0
   20784:	str	r5, [sp, #120]	; 0x78
   20788:	mov	r6, #0
   2078c:	mov	r5, #0
   20790:	mov	sl, r9
   20794:	str	r0, [sp, #124]	; 0x7c
   20798:	add	r0, r8, #208	; 0xd0
   2079c:	str	r0, [sp, #116]	; 0x74
   207a0:	add	r0, r8, #192	; 0xc0
   207a4:	str	r0, [sp, #112]	; 0x70
   207a8:	add	r0, r8, #176	; 0xb0
   207ac:	str	r0, [sp, #108]	; 0x6c
   207b0:	add	r0, r8, #160	; 0xa0
   207b4:	str	r0, [sp, #104]	; 0x68
   207b8:	add	r0, r8, #144	; 0x90
   207bc:	str	r0, [sp, #100]	; 0x64
   207c0:	add	r0, r8, #128	; 0x80
   207c4:	str	r0, [sp, #96]	; 0x60
   207c8:	add	r0, r8, #112	; 0x70
   207cc:	str	r0, [sp, #92]	; 0x5c
   207d0:	add	r0, r8, #96	; 0x60
   207d4:	str	r0, [sp, #88]	; 0x58
   207d8:	add	r0, r8, #80	; 0x50
   207dc:	str	r0, [sp, #84]	; 0x54
   207e0:	add	r0, r8, #64	; 0x40
   207e4:	str	r0, [sp, #80]	; 0x50
   207e8:	add	r0, r8, #48	; 0x30
   207ec:	str	r0, [sp, #76]	; 0x4c
   207f0:	add	r0, r8, #32
   207f4:	str	r0, [sp, #72]	; 0x48
   207f8:	add	r0, r8, #16
   207fc:	str	r0, [sp, #68]	; 0x44
   20800:	add	r0, r4, #240	; 0xf0
   20804:	str	r0, [sp, #64]	; 0x40
   20808:	add	r0, r4, #224	; 0xe0
   2080c:	str	r0, [sp, #60]	; 0x3c
   20810:	add	r0, r4, #208	; 0xd0
   20814:	str	r0, [sp, #56]	; 0x38
   20818:	add	r0, r4, #192	; 0xc0
   2081c:	str	r0, [sp, #52]	; 0x34
   20820:	add	r0, r4, #176	; 0xb0
   20824:	str	r0, [sp, #48]	; 0x30
   20828:	add	r0, r4, #160	; 0xa0
   2082c:	str	r0, [sp, #44]	; 0x2c
   20830:	add	r0, r4, #144	; 0x90
   20834:	str	r0, [sp, #40]	; 0x28
   20838:	add	r0, r4, #128	; 0x80
   2083c:	str	r0, [sp, #36]	; 0x24
   20840:	add	r0, r4, #112	; 0x70
   20844:	str	r0, [sp, #32]
   20848:	add	r0, r4, #96	; 0x60
   2084c:	str	r0, [sp, #28]
   20850:	add	r0, r4, #80	; 0x50
   20854:	str	r0, [sp, #24]
   20858:	add	r0, r4, #64	; 0x40
   2085c:	str	r0, [sp, #20]
   20860:	add	r0, r4, #48	; 0x30
   20864:	str	r0, [sp, #16]
   20868:	add	r0, r4, #32
   2086c:	str	r0, [sp, #12]
   20870:	add	r0, r4, #16
   20874:	str	r0, [sp, #8]
   20878:	sub	r0, r7, #256	; 0x100
   2087c:	str	r0, [sp, #4]
   20880:	ldr	r0, [sp, #132]	; 0x84
   20884:	add	r9, sp, #136	; 0x88
   20888:	mov	r1, sl
   2088c:	mov	r2, #256	; 0x100
   20890:	ldr	r3, [r0]
   20894:	mov	r0, r9
   20898:	bl	18b8 <fread@plt>
   2089c:	vld1.16	{d16-d17}, [r9]
   208a0:	ldr	r1, [sp, #120]	; 0x78
   208a4:	mov	r3, #248	; 0xf8
   208a8:	add	r5, r0, r5
   208ac:	ldr	r0, [sp, #4]
   208b0:	add	r2, r1, r6
   208b4:	add	r6, r6, #256	; 0x100
   208b8:	vmovn.i16	d16, q8
   208bc:	mov	r1, r2
   208c0:	cmp	r6, r0
   208c4:	vst1.8	{d16}, [r1], r3
   208c8:	add	r3, r2, #8
   208cc:	vld1.16	{d16-d17}, [r4]
   208d0:	vmovn.i16	d16, q8
   208d4:	vst1.8	{d16}, [r3]
   208d8:	ldr	r3, [sp, #8]
   208dc:	vld1.16	{d16-d17}, [r3]
   208e0:	add	r3, r2, #16
   208e4:	vmovn.i16	d16, q8
   208e8:	vst1.8	{d16}, [r3]
   208ec:	ldr	r3, [sp, #12]
   208f0:	vld1.16	{d16-d17}, [r3]
   208f4:	add	r3, r2, #24
   208f8:	vmovn.i16	d16, q8
   208fc:	vst1.8	{d16}, [r3]
   20900:	ldr	r3, [sp, #16]
   20904:	vld1.16	{d16-d17}, [r3]
   20908:	add	r3, r2, #32
   2090c:	vmovn.i16	d16, q8
   20910:	vst1.8	{d16}, [r3]
   20914:	ldr	r3, [sp, #20]
   20918:	vld1.16	{d16-d17}, [r3]
   2091c:	add	r3, r2, #40	; 0x28
   20920:	vmovn.i16	d16, q8
   20924:	vst1.8	{d16}, [r3]
   20928:	ldr	r3, [sp, #24]
   2092c:	vld1.16	{d16-d17}, [r3]
   20930:	add	r3, r2, #48	; 0x30
   20934:	vmovn.i16	d16, q8
   20938:	vst1.8	{d16}, [r3]
   2093c:	ldr	r3, [sp, #28]
   20940:	vld1.16	{d16-d17}, [r3]
   20944:	add	r3, r2, #56	; 0x38
   20948:	vmovn.i16	d16, q8
   2094c:	vst1.8	{d16}, [r3]
   20950:	ldr	r3, [sp, #32]
   20954:	vld1.16	{d16-d17}, [r3]
   20958:	add	r3, r2, #64	; 0x40
   2095c:	vmovn.i16	d16, q8
   20960:	vst1.8	{d16}, [r3]
   20964:	ldr	r3, [sp, #36]	; 0x24
   20968:	vld1.16	{d16-d17}, [r3]
   2096c:	add	r3, r2, #72	; 0x48
   20970:	vmovn.i16	d16, q8
   20974:	vst1.8	{d16}, [r3]
   20978:	ldr	r3, [sp, #40]	; 0x28
   2097c:	vld1.16	{d16-d17}, [r3]
   20980:	add	r3, r2, #80	; 0x50
   20984:	vmovn.i16	d16, q8
   20988:	vst1.8	{d16}, [r3]
   2098c:	ldr	r3, [sp, #44]	; 0x2c
   20990:	vld1.16	{d16-d17}, [r3]
   20994:	add	r3, r2, #88	; 0x58
   20998:	vmovn.i16	d16, q8
   2099c:	vst1.8	{d16}, [r3]
   209a0:	ldr	r3, [sp, #48]	; 0x30
   209a4:	vld1.16	{d16-d17}, [r3]
   209a8:	add	r3, r2, #96	; 0x60
   209ac:	vmovn.i16	d16, q8
   209b0:	vst1.8	{d16}, [r3]
   209b4:	ldr	r3, [sp, #52]	; 0x34
   209b8:	vld1.16	{d16-d17}, [r3]
   209bc:	add	r3, r2, #104	; 0x68
   209c0:	vmovn.i16	d16, q8
   209c4:	vst1.8	{d16}, [r3]
   209c8:	ldr	r3, [sp, #56]	; 0x38
   209cc:	vld1.16	{d16-d17}, [r3]
   209d0:	add	r3, r2, #112	; 0x70
   209d4:	vmovn.i16	d16, q8
   209d8:	vst1.8	{d16}, [r3]
   209dc:	ldr	r3, [sp, #60]	; 0x3c
   209e0:	vld1.16	{d16-d17}, [r3]
   209e4:	add	r3, r2, #120	; 0x78
   209e8:	vmovn.i16	d16, q8
   209ec:	vst1.8	{d16}, [r3]
   209f0:	ldr	r3, [sp, #64]	; 0x40
   209f4:	vld1.16	{d16-d17}, [r3]
   209f8:	add	r3, r2, #128	; 0x80
   209fc:	vmovn.i16	d16, q8
   20a00:	vst1.8	{d16}, [r3]
   20a04:	add	r3, r2, #136	; 0x88
   20a08:	vld1.16	{d16-d17}, [r8]
   20a0c:	vmovn.i16	d16, q8
   20a10:	vst1.8	{d16}, [r3]
   20a14:	ldr	r3, [sp, #68]	; 0x44
   20a18:	vld1.16	{d16-d17}, [r3]
   20a1c:	add	r3, r2, #144	; 0x90
   20a20:	vmovn.i16	d16, q8
   20a24:	vst1.8	{d16}, [r3]
   20a28:	ldr	r3, [sp, #72]	; 0x48
   20a2c:	vld1.16	{d16-d17}, [r3]
   20a30:	add	r3, r2, #152	; 0x98
   20a34:	vmovn.i16	d16, q8
   20a38:	vst1.8	{d16}, [r3]
   20a3c:	ldr	r3, [sp, #76]	; 0x4c
   20a40:	vld1.16	{d16-d17}, [r3]
   20a44:	add	r3, r2, #160	; 0xa0
   20a48:	vmovn.i16	d16, q8
   20a4c:	vst1.8	{d16}, [r3]
   20a50:	ldr	r3, [sp, #80]	; 0x50
   20a54:	vld1.16	{d16-d17}, [r3]
   20a58:	add	r3, r2, #168	; 0xa8
   20a5c:	vmovn.i16	d16, q8
   20a60:	vst1.8	{d16}, [r3]
   20a64:	ldr	r3, [sp, #84]	; 0x54
   20a68:	vld1.16	{d16-d17}, [r3]
   20a6c:	add	r3, r2, #176	; 0xb0
   20a70:	vmovn.i16	d16, q8
   20a74:	vst1.8	{d16}, [r3]
   20a78:	ldr	r3, [sp, #88]	; 0x58
   20a7c:	vld1.16	{d16-d17}, [r3]
   20a80:	add	r3, r2, #184	; 0xb8
   20a84:	vmovn.i16	d16, q8
   20a88:	vst1.8	{d16}, [r3]
   20a8c:	ldr	r3, [sp, #92]	; 0x5c
   20a90:	vld1.16	{d16-d17}, [r3]
   20a94:	add	r3, r2, #192	; 0xc0
   20a98:	vmovn.i16	d16, q8
   20a9c:	vst1.8	{d16}, [r3]
   20aa0:	ldr	r3, [sp, #96]	; 0x60
   20aa4:	vld1.16	{d16-d17}, [r3]
   20aa8:	add	r3, r2, #200	; 0xc8
   20aac:	vmovn.i16	d16, q8
   20ab0:	vst1.8	{d16}, [r3]
   20ab4:	ldr	r3, [sp, #100]	; 0x64
   20ab8:	vld1.16	{d16-d17}, [r3]
   20abc:	add	r3, r2, #208	; 0xd0
   20ac0:	vmovn.i16	d16, q8
   20ac4:	vst1.8	{d16}, [r3]
   20ac8:	ldr	r3, [sp, #104]	; 0x68
   20acc:	vld1.16	{d16-d17}, [r3]
   20ad0:	add	r3, r2, #216	; 0xd8
   20ad4:	vmovn.i16	d16, q8
   20ad8:	vst1.8	{d16}, [r3]
   20adc:	ldr	r3, [sp, #108]	; 0x6c
   20ae0:	vld1.16	{d16-d17}, [r3]
   20ae4:	add	r3, r2, #224	; 0xe0
   20ae8:	vmovn.i16	d16, q8
   20aec:	vst1.8	{d16}, [r3]
   20af0:	ldr	r3, [sp, #112]	; 0x70
   20af4:	vld1.16	{d16-d17}, [r3]
   20af8:	add	r3, r2, #232	; 0xe8
   20afc:	add	r2, r2, #240	; 0xf0
   20b00:	vmovn.i16	d16, q8
   20b04:	vst1.8	{d16}, [r3]
   20b08:	ldr	r3, [sp, #116]	; 0x74
   20b0c:	vld1.16	{d16-d17}, [r3]
   20b10:	vmovn.i16	d16, q8
   20b14:	vst1.8	{d16}, [r2]
   20b18:	ldr	r2, [sp, #124]	; 0x7c
   20b1c:	vld1.16	{d16-d17}, [r2]
   20b20:	vmovn.i16	d16, q8
   20b24:	vst1.8	{d16}, [r1]
   20b28:	blt	20880 <ReadInt8Data+0x1528>
   20b2c:	ldr	r8, [sp, #120]	; 0x78
   20b30:	mov	r9, sl
   20b34:	mov	sl, r5
   20b38:	cmp	r6, r7
   20b3c:	bge	21cc8 <ReadInt8Data+0x2970>
   20b40:	ldr	r0, [sp, #132]	; 0x84
   20b44:	sub	r5, r7, r6
   20b48:	add	r4, sp, #136	; 0x88
   20b4c:	mov	r1, r9
   20b50:	mov	r2, r5
   20b54:	ldr	r3, [r0]
   20b58:	mov	r0, r4
   20b5c:	bl	18b8 <fread@plt>
   20b60:	add	sl, r0, sl
   20b64:	cmp	r5, #1
   20b68:	blt	21cc8 <ReadInt8Data+0x2970>
   20b6c:	mov	lr, #0
   20b70:	cmp	r5, #8
   20b74:	mov	r3, r8
   20b78:	bcc	21700 <ReadInt8Data+0x23a8>
   20b7c:	bic	lr, r5, #7
   20b80:	mov	r2, #1
   20b84:	str	r9, [sp, #128]	; 0x80
   20b88:	mov	r9, r3
   20b8c:	subs	r1, lr, #8
   20b90:	add	r1, r2, r1, lsr #3
   20b94:	and	r0, r1, #1
   20b98:	str	r0, [sp, #132]	; 0x84
   20b9c:	beq	216b8 <ReadInt8Data+0x2360>
   20ba0:	bic	r3, r5, #7
   20ba4:	mov	ip, r7
   20ba8:	mov	r8, r5
   20bac:	mov	r5, #32
   20bb0:	sub	r3, r3, #8
   20bb4:	add	r2, r2, r3, lsr #3
   20bb8:	mvn	r7, r3, lsr #3
   20bbc:	and	r2, r2, #1
   20bc0:	add	r3, r7, r2
   20bc4:	add	r7, r9, r6
   20bc8:	mov	r2, #0
   20bcc:	add	r1, r4, #16
   20bd0:	vld1.16	{d16-d17}, [r4], r5
   20bd4:	add	r0, r7, r2
   20bd8:	adds	r3, r3, #2
   20bdc:	add	r2, r2, #16
   20be0:	vmovn.i16	d16, q8
   20be4:	vst1.8	{d16}, [r0]
   20be8:	add	r0, r0, #8
   20bec:	vld1.16	{d16-d17}, [r1]
   20bf0:	vmovn.i16	d16, q8
   20bf4:	vst1.8	{d16}, [r0]
   20bf8:	bne	20bcc <ReadInt8Data+0x1874>
   20bfc:	b	216c4 <ReadInt8Data+0x236c>
   20c00:	str	r9, [sp, #128]	; 0x80
   20c04:	sub	r1, r7, #256	; 0x100
   20c08:	str	r7, [sp, #108]	; 0x6c
   20c0c:	add	r0, r5, #256	; 0x100
   20c10:	mov	sl, #0
   20c14:	add	r6, sp, #136	; 0x88
   20c18:	mov	r7, #32
   20c1c:	mov	r9, r5
   20c20:	mov	r8, #0
   20c24:	str	r5, [sp, #120]	; 0x78
   20c28:	str	r1, [sp, #116]	; 0x74
   20c2c:	str	r0, [sp, #124]	; 0x7c
   20c30:	ldr	r0, [sp, #132]	; 0x84
   20c34:	ldr	r1, [sp, #128]	; 0x80
   20c38:	mov	r2, #256	; 0x100
   20c3c:	ldr	r3, [r0]
   20c40:	mov	r0, r6
   20c44:	bl	18b8 <fread@plt>
   20c48:	mov	r3, r6
   20c4c:	mov	r1, #0
   20c50:	mov	r2, r6
   20c54:	vld1.32	{d16-d17}, [r2], r7
   20c58:	mov	r5, r9
   20c5c:	add	r3, r3, #16
   20c60:	vmovn.i32	d16, q8
   20c64:	vuzp.8	d16, d17
   20c68:	vmov.32	r4, d16[0]
   20c6c:	str	r4, [r5, r1]!
   20c70:	add	r1, r1, #8
   20c74:	vld1.32	{d16-d17}, [r3]
   20c78:	add	r3, r5, #4
   20c7c:	cmp	r1, #256	; 0x100
   20c80:	vmovn.i32	d16, q8
   20c84:	vuzp.8	d16, d17
   20c88:	vst1.32	{d16[0]}, [r3]
   20c8c:	mov	r3, r2
   20c90:	bne	20c54 <ReadInt8Data+0x18fc>
   20c94:	add	r8, r0, r8
   20c98:	ldr	r0, [sp, #124]	; 0x7c
   20c9c:	ldr	r2, [sp, #116]	; 0x74
   20ca0:	mov	r1, sl
   20ca4:	add	sl, sl, #256	; 0x100
   20ca8:	add	r9, r9, #256	; 0x100
   20cac:	add	r0, r0, #256	; 0x100
   20cb0:	cmp	sl, r2
   20cb4:	blt	20c2c <ReadInt8Data+0x18d4>
   20cb8:	ldr	r4, [sp, #108]	; 0x6c
   20cbc:	str	r1, [sp, #116]	; 0x74
   20cc0:	cmp	sl, r4
   20cc4:	bge	21cc0 <ReadInt8Data+0x2968>
   20cc8:	ldr	r0, [sp, #132]	; 0x84
   20ccc:	ldr	r9, [sp, #128]	; 0x80
   20cd0:	sub	r6, r4, sl
   20cd4:	add	r5, sp, #136	; 0x88
   20cd8:	mov	r2, r6
   20cdc:	ldr	r3, [r0]
   20ce0:	mov	r0, r5
   20ce4:	mov	r1, r9
   20ce8:	bl	18b8 <fread@plt>
   20cec:	add	r8, r0, r8
   20cf0:	cmp	r6, #1
   20cf4:	blt	21cc4 <ReadInt8Data+0x296c>
   20cf8:	mov	r0, #0
   20cfc:	cmp	r6, #4
   20d00:	bcc	2176c <ReadInt8Data+0x2414>
   20d04:	bic	r0, r6, #3
   20d08:	mov	r1, #1
   20d0c:	str	r6, [sp, #132]	; 0x84
   20d10:	subs	r2, r0, #4
   20d14:	add	r2, r1, r2, lsr #2
   20d18:	and	ip, r2, #1
   20d1c:	beq	2172c <ReadInt8Data+0x23d4>
   20d20:	ldr	r2, [sp, #116]	; 0x74
   20d24:	ldr	lr, [sp, #120]	; 0x78
   20d28:	mov	r6, r5
   20d2c:	sub	r2, r4, r2
   20d30:	add	r7, lr, sl
   20d34:	sub	r2, r2, #256	; 0x100
   20d38:	bic	r2, r2, #3
   20d3c:	sub	r2, r2, #4
   20d40:	add	r1, r1, r2, lsr #2
   20d44:	mvn	r3, r2, lsr #2
   20d48:	mov	r2, #0
   20d4c:	and	r1, r1, #1
   20d50:	add	r3, r3, r1
   20d54:	mov	r1, #32
   20d58:	vld1.32	{d16-d17}, [r6], r1
   20d5c:	add	r4, r7, r2
   20d60:	add	r5, r5, #16
   20d64:	adds	r3, r3, #2
   20d68:	add	r2, r2, #8
   20d6c:	vmovn.i32	d16, q8
   20d70:	vuzp.8	d16, d17
   20d74:	vst1.32	{d16[0]}, [r4]
   20d78:	vld1.32	{d16-d17}, [r5]
   20d7c:	add	r5, r4, #4
   20d80:	vmovn.i32	d16, q8
   20d84:	vuzp.8	d16, d17
   20d88:	vst1.32	{d16[0]}, [r5]
   20d8c:	mov	r5, r6
   20d90:	bne	20d58 <ReadInt8Data+0x1a00>
   20d94:	b	21734 <ReadInt8Data+0x23dc>
   20d98:	str	r9, [sp, #128]	; 0x80
   20d9c:	sub	r1, r7, #256	; 0x100
   20da0:	str	r7, [sp, #108]	; 0x6c
   20da4:	add	r0, r5, #256	; 0x100
   20da8:	mov	sl, #0
   20dac:	add	r6, sp, #136	; 0x88
   20db0:	mov	r7, #32
   20db4:	mov	r9, r5
   20db8:	mov	r8, #0
   20dbc:	str	r5, [sp, #120]	; 0x78
   20dc0:	str	r1, [sp, #116]	; 0x74
   20dc4:	str	r0, [sp, #124]	; 0x7c
   20dc8:	ldr	r0, [sp, #132]	; 0x84
   20dcc:	ldr	r1, [sp, #128]	; 0x80
   20dd0:	mov	r2, #256	; 0x100
   20dd4:	ldr	r3, [r0]
   20dd8:	mov	r0, r6
   20ddc:	bl	18b8 <fread@plt>
   20de0:	mov	r3, r6
   20de4:	mov	r1, #0
   20de8:	mov	r2, r6
   20dec:	vld1.32	{d16-d17}, [r2], r7
   20df0:	mov	r4, r9
   20df4:	add	r3, r3, #16
   20df8:	vmovn.i32	d16, q8
   20dfc:	vuzp.8	d16, d17
   20e00:	vmov.32	r5, d16[0]
   20e04:	str	r5, [r4, r1]!
   20e08:	add	r1, r1, #8
   20e0c:	vld1.32	{d16-d17}, [r3]
   20e10:	add	r3, r4, #4
   20e14:	cmp	r1, #256	; 0x100
   20e18:	vmovn.i32	d16, q8
   20e1c:	vuzp.8	d16, d17
   20e20:	vst1.32	{d16[0]}, [r3]
   20e24:	mov	r3, r2
   20e28:	bne	20dec <ReadInt8Data+0x1a94>
   20e2c:	add	r8, r0, r8
   20e30:	ldr	r0, [sp, #124]	; 0x7c
   20e34:	ldr	r2, [sp, #116]	; 0x74
   20e38:	mov	r1, sl
   20e3c:	add	sl, sl, #256	; 0x100
   20e40:	add	r9, r9, #256	; 0x100
   20e44:	add	r0, r0, #256	; 0x100
   20e48:	cmp	sl, r2
   20e4c:	blt	20dc4 <ReadInt8Data+0x1a6c>
   20e50:	ldr	r5, [sp, #108]	; 0x6c
   20e54:	str	r1, [sp, #116]	; 0x74
   20e58:	cmp	sl, r5
   20e5c:	bge	21cc0 <ReadInt8Data+0x2968>
   20e60:	ldr	r0, [sp, #132]	; 0x84
   20e64:	ldr	r9, [sp, #128]	; 0x80
   20e68:	sub	r6, r5, sl
   20e6c:	add	r4, sp, #136	; 0x88
   20e70:	mov	r2, r6
   20e74:	ldr	r3, [r0]
   20e78:	mov	r0, r4
   20e7c:	mov	r1, r9
   20e80:	bl	18b8 <fread@plt>
   20e84:	add	r8, r0, r8
   20e88:	cmp	r6, #1
   20e8c:	blt	21cc4 <ReadInt8Data+0x296c>
   20e90:	mov	r0, #0
   20e94:	cmp	r6, #4
   20e98:	bcc	217e0 <ReadInt8Data+0x2488>
   20e9c:	bic	r0, r6, #3
   20ea0:	mov	r2, #1
   20ea4:	str	r6, [sp, #132]	; 0x84
   20ea8:	subs	r1, r0, #4
   20eac:	add	r1, r2, r1, lsr #2
   20eb0:	and	ip, r1, #1
   20eb4:	beq	217a0 <ReadInt8Data+0x2448>
   20eb8:	ldr	r1, [sp, #116]	; 0x74
   20ebc:	ldr	lr, [sp, #120]	; 0x78
   20ec0:	mov	r6, r4
   20ec4:	sub	r3, r5, r1
   20ec8:	mov	r5, #32
   20ecc:	sub	r3, r3, #256	; 0x100
   20ed0:	bic	r3, r3, #3
   20ed4:	sub	r3, r3, #4
   20ed8:	add	r2, r2, r3, lsr #2
   20edc:	mvn	r7, r3, lsr #2
   20ee0:	and	r2, r2, #1
   20ee4:	add	r3, r7, r2
   20ee8:	add	r7, lr, sl
   20eec:	mov	r2, #0
   20ef0:	vld1.32	{d16-d17}, [r6], r5
   20ef4:	add	r1, r7, r2
   20ef8:	add	r4, r4, #16
   20efc:	adds	r3, r3, #2
   20f00:	add	r2, r2, #8
   20f04:	vmovn.i32	d16, q8
   20f08:	vuzp.8	d16, d17
   20f0c:	vst1.32	{d16[0]}, [r1]
   20f10:	add	r1, r1, #4
   20f14:	vld1.32	{d16-d17}, [r4]
   20f18:	mov	r4, r6
   20f1c:	vmovn.i32	d16, q8
   20f20:	vuzp.8	d16, d17
   20f24:	vst1.32	{d16[0]}, [r1]
   20f28:	bne	20ef0 <ReadInt8Data+0x1b98>
   20f2c:	b	217a8 <ReadInt8Data+0x2450>
   20f30:	str	r9, [sp, #128]	; 0x80
   20f34:	sub	r1, r7, #256	; 0x100
   20f38:	mov	r9, r5
   20f3c:	add	r0, r5, #256	; 0x100
   20f40:	mov	sl, #0
   20f44:	add	r5, sp, #136	; 0x88
   20f48:	mov	r8, #32
   20f4c:	mov	r6, #0
   20f50:	str	r7, [sp, #108]	; 0x6c
   20f54:	str	r1, [sp, #116]	; 0x74
   20f58:	str	r9, [sp, #120]	; 0x78
   20f5c:	str	r0, [sp, #124]	; 0x7c
   20f60:	ldr	r0, [sp, #132]	; 0x84
   20f64:	ldr	r1, [sp, #128]	; 0x80
   20f68:	mov	r2, #256	; 0x100
   20f6c:	ldr	r3, [r0]
   20f70:	mov	r0, r5
   20f74:	bl	18b8 <fread@plt>
   20f78:	mov	r3, r5
   20f7c:	mov	r1, #0
   20f80:	mov	r2, r5
   20f84:	vld1.32	{d16-d17}, [r2], r8
   20f88:	mov	r7, r9
   20f8c:	add	r3, r3, #16
   20f90:	vcvt.s32.f32	q8, q8
   20f94:	vmovn.i32	d16, q8
   20f98:	vuzp.8	d16, d17
   20f9c:	vmov.32	r4, d16[0]
   20fa0:	str	r4, [r7, r1]!
   20fa4:	add	r1, r1, #8
   20fa8:	vld1.32	{d16-d17}, [r3]
   20fac:	add	r3, r7, #4
   20fb0:	cmp	r1, #256	; 0x100
   20fb4:	vcvt.s32.f32	q8, q8
   20fb8:	vmovn.i32	d16, q8
   20fbc:	vuzp.8	d16, d17
   20fc0:	vst1.32	{d16[0]}, [r3]
   20fc4:	mov	r3, r2
   20fc8:	bne	20f84 <ReadInt8Data+0x1c2c>
   20fcc:	ldr	r7, [sp, #124]	; 0x7c
   20fd0:	ldr	r2, [sp, #116]	; 0x74
   20fd4:	mov	r1, sl
   20fd8:	add	sl, sl, #256	; 0x100
   20fdc:	add	r6, r0, r6
   20fe0:	add	r9, r9, #256	; 0x100
   20fe4:	add	r0, r7, #256	; 0x100
   20fe8:	cmp	sl, r2
   20fec:	blt	20f5c <ReadInt8Data+0x1c04>
   20ff0:	ldr	r4, [sp, #108]	; 0x6c
   20ff4:	str	r1, [sp, #116]	; 0x74
   20ff8:	cmp	sl, r4
   20ffc:	bge	213fc <ReadInt8Data+0x20a4>
   21000:	ldr	r0, [sp, #132]	; 0x84
   21004:	ldr	r9, [sp, #128]	; 0x80
   21008:	sub	r8, r4, sl
   2100c:	add	r5, sp, #136	; 0x88
   21010:	mov	r2, r8
   21014:	ldr	r3, [r0]
   21018:	mov	r0, r5
   2101c:	mov	r1, r9
   21020:	bl	18b8 <fread@plt>
   21024:	add	r6, r0, r6
   21028:	cmp	r8, #1
   2102c:	blt	21894 <ReadInt8Data+0x253c>
   21030:	mov	r1, r8
   21034:	mov	lr, #0
   21038:	cmp	r8, #4
   2103c:	bcc	2185c <ReadInt8Data+0x2504>
   21040:	bic	lr, r1, #3
   21044:	mov	r8, r1
   21048:	mov	r1, #1
   2104c:	subs	r2, lr, #4
   21050:	add	r2, r1, r2, lsr #2
   21054:	and	r0, r2, #1
   21058:	str	r0, [sp, #132]	; 0x84
   2105c:	beq	21814 <ReadInt8Data+0x24bc>
   21060:	ldr	r0, [sp, #116]	; 0x74
   21064:	ldr	ip, [sp, #120]	; 0x78
   21068:	sub	r2, r4, r0
   2106c:	add	r7, ip, sl
   21070:	mov	r0, r5
   21074:	sub	r2, r2, #256	; 0x100
   21078:	bic	r2, r2, #3
   2107c:	sub	r2, r2, #4
   21080:	add	r1, r1, r2, lsr #2
   21084:	mvn	r3, r2, lsr #2
   21088:	mov	r2, #0
   2108c:	and	r1, r1, #1
   21090:	add	r3, r3, r1
   21094:	mov	r1, #32
   21098:	vld1.32	{d16-d17}, [r0], r1
   2109c:	add	r4, r7, r2
   210a0:	add	r5, r5, #16
   210a4:	adds	r3, r3, #2
   210a8:	add	r2, r2, #8
   210ac:	vcvt.s32.f32	q8, q8
   210b0:	vmovn.i32	d16, q8
   210b4:	vuzp.8	d16, d17
   210b8:	vst1.32	{d16[0]}, [r4]
   210bc:	vld1.32	{d16-d17}, [r5]
   210c0:	add	r5, r4, #4
   210c4:	vcvt.s32.f32	q8, q8
   210c8:	vmovn.i32	d16, q8
   210cc:	vuzp.8	d16, d17
   210d0:	vst1.32	{d16[0]}, [r5]
   210d4:	mov	r5, r0
   210d8:	bne	21098 <ReadInt8Data+0x1d40>
   210dc:	b	2181c <ReadInt8Data+0x24c4>
   210e0:	mov	r0, r7
   210e4:	add	r1, sp, #136	; 0x88
   210e8:	mov	r8, r9
   210ec:	str	r5, [sp, #120]	; 0x78
   210f0:	add	r7, r5, #1
   210f4:	mov	r5, #0
   210f8:	mov	sl, #0
   210fc:	add	r9, r1, #8
   21100:	sub	r6, r0, #256	; 0x100
   21104:	str	r0, [sp, #108]	; 0x6c
   21108:	ldr	r0, [sp, #132]	; 0x84
   2110c:	mov	r1, r8
   21110:	mov	r2, #256	; 0x100
   21114:	mov	r4, r5
   21118:	ldr	r3, [r0]
   2111c:	add	r0, sp, #136	; 0x88
   21120:	bl	18b8 <fread@plt>
   21124:	mov	r1, r9
   21128:	mov	r2, #0
   2112c:	vldr	d16, [r1, #-8]
   21130:	add	r3, r7, r2
   21134:	vcvt.s32.f64	s0, d16
   21138:	vmov	r5, s0
   2113c:	strb	r5, [r3, #-1]
   21140:	vldr	d16, [r1]
   21144:	add	r1, r1, #16
   21148:	vcvt.s32.f64	s0, d16
   2114c:	vmov	r3, s0
   21150:	strb	r3, [r7, r2]
   21154:	add	r2, r2, #2
   21158:	cmp	r2, #256	; 0x100
   2115c:	bne	2112c <ReadInt8Data+0x1dd4>
   21160:	add	r5, r4, #256	; 0x100
   21164:	add	sl, r0, sl
   21168:	add	r7, r7, #256	; 0x100
   2116c:	cmp	r5, r6
   21170:	blt	21108 <ReadInt8Data+0x1db0>
   21174:	ldr	r7, [sp, #108]	; 0x6c
   21178:	cmp	r5, r7
   2117c:	bge	21238 <ReadInt8Data+0x1ee0>
   21180:	ldr	r0, [sp, #132]	; 0x84
   21184:	sub	r6, r7, r5
   21188:	add	r9, sp, #136	; 0x88
   2118c:	mov	r1, r8
   21190:	mov	r2, r6
   21194:	ldr	r3, [r0]
   21198:	mov	r0, r9
   2119c:	bl	18b8 <fread@plt>
   211a0:	add	sl, r0, sl
   211a4:	cmp	r6, #1
   211a8:	blt	21238 <ReadInt8Data+0x1ee0>
   211ac:	mvn	r0, #256	; 0x100
   211b0:	mov	r1, #0
   211b4:	sub	r2, r0, r4
   211b8:	and	r0, r6, #1
   211bc:	cmn	r2, r7
   211c0:	beq	21214 <ReadInt8Data+0x1ebc>
   211c4:	ldr	r1, [sp, #120]	; 0x78
   211c8:	sub	r2, r0, r7
   211cc:	add	r7, r9, #8
   211d0:	mov	r3, #0
   211d4:	add	r2, r2, r5
   211d8:	add	r4, r1, r5
   211dc:	vldr	d16, [r7, #-8]
   211e0:	mov	r1, r4
   211e4:	vcvt.s32.f64	s0, d16
   211e8:	vmov	r6, s0
   211ec:	strb	r6, [r1, -r3]!
   211f0:	sub	r3, r3, #2
   211f4:	vldr	d16, [r7]
   211f8:	add	r7, r7, #16
   211fc:	cmp	r2, r3
   21200:	vcvt.s32.f64	s0, d16
   21204:	vmov	r6, s0
   21208:	strb	r6, [r1, #1]
   2120c:	bne	211dc <ReadInt8Data+0x1e84>
   21210:	rsb	r1, r3, #0
   21214:	cmp	r0, #0
   21218:	beq	21238 <ReadInt8Data+0x1ee0>
   2121c:	add	r0, r9, r1, lsl #3
   21220:	vldr	d16, [r0]
   21224:	add	r0, r1, r5
   21228:	vcvt.s32.f64	s0, d16
   2122c:	ldr	r2, [sp, #120]	; 0x78
   21230:	vmov	r1, s0
   21234:	strb	r1, [r2, r0]
   21238:	mov	r9, r8
   2123c:	mul	r0, sl, r9
   21240:	sub	sp, fp, #28
   21244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21248:	str	r9, [sp, #128]	; 0x80
   2124c:	sub	r1, r7, #256	; 0x100
   21250:	str	r7, [sp, #108]	; 0x6c
   21254:	add	r0, r5, #256	; 0x100
   21258:	mov	r8, #0
   2125c:	add	r6, sp, #136	; 0x88
   21260:	mov	r7, #32
   21264:	mov	r9, r5
   21268:	mov	sl, #0
   2126c:	str	r5, [sp, #120]	; 0x78
   21270:	str	r1, [sp, #112]	; 0x70
   21274:	str	r0, [sp, #124]	; 0x7c
   21278:	ldr	r0, [sp, #132]	; 0x84
   2127c:	ldr	r1, [sp, #128]	; 0x80
   21280:	mov	r2, #256	; 0x100
   21284:	ldr	r3, [r0]
   21288:	mov	r0, r6
   2128c:	bl	18b8 <fread@plt>
   21290:	mov	r1, r6
   21294:	mov	r2, #0
   21298:	add	r3, r1, #16
   2129c:	vld1.64	{d16-d17}, [r1], r7
   212a0:	mov	r4, r9
   212a4:	vmovn.i64	d16, q8
   212a8:	vmov.32	r5, d16[0]
   212ac:	strb	r5, [r4, r2]!
   212b0:	vmov.32	r5, d16[1]
   212b4:	add	r2, r2, #4
   212b8:	cmp	r2, #256	; 0x100
   212bc:	strb	r5, [r4, #1]
   212c0:	vld1.64	{d16-d17}, [r3]
   212c4:	vmovn.i64	d16, q8
   212c8:	vmov.32	r3, d16[1]
   212cc:	strb	r3, [r4, #3]
   212d0:	vmov.32	r3, d16[0]
   212d4:	strb	r3, [r4, #2]
   212d8:	bne	21298 <ReadInt8Data+0x1f40>
   212dc:	ldr	r4, [sp, #124]	; 0x7c
   212e0:	ldr	r2, [sp, #112]	; 0x70
   212e4:	mov	r1, r8
   212e8:	add	r8, r8, #256	; 0x100
   212ec:	add	sl, r0, sl
   212f0:	add	r9, r9, #256	; 0x100
   212f4:	add	r0, r4, #256	; 0x100
   212f8:	cmp	r8, r2
   212fc:	blt	21274 <ReadInt8Data+0x1f1c>
   21300:	ldr	r7, [sp, #108]	; 0x6c
   21304:	str	r1, [sp, #112]	; 0x70
   21308:	cmp	r8, r7
   2130c:	bge	21410 <ReadInt8Data+0x20b8>
   21310:	ldr	r0, [sp, #132]	; 0x84
   21314:	ldr	r9, [sp, #128]	; 0x80
   21318:	sub	r5, r7, r8
   2131c:	add	r6, sp, #136	; 0x88
   21320:	mov	r2, r5
   21324:	ldr	r3, [r0]
   21328:	mov	r0, r6
   2132c:	mov	r1, r9
   21330:	bl	18b8 <fread@plt>
   21334:	mov	ip, r5
   21338:	cmp	r5, #1
   2133c:	ldr	r5, [sp, #120]	; 0x78
   21340:	add	sl, r0, sl
   21344:	blt	2191c <ReadInt8Data+0x25c4>
   21348:	mov	lr, #0
   2134c:	beq	218f0 <ReadInt8Data+0x2598>
   21350:	bic	lr, ip, #1
   21354:	mov	r2, #1
   21358:	subs	r1, lr, #2
   2135c:	add	r1, r2, r1, lsr #1
   21360:	and	r0, r1, #1
   21364:	str	r0, [sp, #104]	; 0x68
   21368:	beq	218a4 <ReadInt8Data+0x254c>
   2136c:	ldr	r0, [sp, #112]	; 0x70
   21370:	sub	r3, r7, r0
   21374:	add	r0, r5, r8
   21378:	mov	r5, #32
   2137c:	sub	r3, r3, #256	; 0x100
   21380:	bic	r3, r3, #1
   21384:	sub	r3, r3, #2
   21388:	add	r2, r2, r3, lsr #1
   2138c:	mvn	r7, r3, lsr #1
   21390:	and	r2, r2, #1
   21394:	add	r3, r7, r2
   21398:	mov	r2, #0
   2139c:	add	r4, r6, #16
   213a0:	vld1.64	{d16-d17}, [r6], r5
   213a4:	mov	r7, r0
   213a8:	adds	r3, r3, #2
   213ac:	vmovn.i64	d16, q8
   213b0:	vmov.32	r1, d16[0]
   213b4:	strb	r1, [r7, r2]!
   213b8:	vmov.32	r1, d16[1]
   213bc:	strb	r1, [r7, #1]
   213c0:	add	r1, r0, r2
   213c4:	add	r2, r2, #4
   213c8:	vld1.64	{d16-d17}, [r4]
   213cc:	vmovn.i64	d16, q8
   213d0:	vmov.32	r4, d16[1]
   213d4:	strb	r4, [r1, #3]
   213d8:	vmov.32	r4, d16[0]
   213dc:	strb	r4, [r1, #2]
   213e0:	bne	2139c <ReadInt8Data+0x2044>
   213e4:	b	218a8 <ReadInt8Data+0x2550>
   213e8:	ldr	r5, [sp, #120]	; 0x78
   213ec:	ldr	r0, [sp, #116]	; 0x74
   213f0:	cmp	r0, #13
   213f4:	beq	2192c <ReadInt8Data+0x25d4>
   213f8:	b	21cc8 <ReadInt8Data+0x2970>
   213fc:	ldr	r9, [sp, #128]	; 0x80
   21400:	mov	sl, r6
   21404:	mul	r0, sl, r9
   21408:	sub	sp, fp, #28
   2140c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21410:	ldr	r9, [sp, #128]	; 0x80
   21414:	ldr	r5, [sp, #120]	; 0x78
   21418:	b	2191c <ReadInt8Data+0x25c4>
   2141c:	mov	r1, #0
   21420:	cmp	lr, #0
   21424:	beq	21440 <ReadInt8Data+0x20e8>
   21428:	add	r2, sp, #136	; 0x88
   2142c:	add	r2, r2, r1, lsl #1
   21430:	add	r1, r5, r1
   21434:	vld1.16	{d16-d17}, [r2]
   21438:	vmovn.i16	d16, q8
   2143c:	vst1.8	{d16}, [r1]
   21440:	mov	r7, ip
   21444:	cmp	r0, ip
   21448:	beq	21cc8 <ReadInt8Data+0x2970>
   2144c:	add	r1, sp, #136	; 0x88
   21450:	add	r2, r5, r0
   21454:	add	r1, r1, r0, lsl #1
   21458:	sub	r0, r7, r0
   2145c:	ldrb	r3, [r1], #2
   21460:	subs	r0, r0, #1
   21464:	strb	r3, [r2], #1
   21468:	bne	2145c <ReadInt8Data+0x2104>
   2146c:	b	21cc8 <ReadInt8Data+0x2970>
   21470:	mov	r1, #0
   21474:	cmp	lr, #0
   21478:	beq	21494 <ReadInt8Data+0x213c>
   2147c:	add	r2, sp, #136	; 0x88
   21480:	add	r2, r2, r1, lsl #1
   21484:	add	r1, r5, r1
   21488:	vld1.16	{d16-d17}, [r2]
   2148c:	vmovn.i16	d16, q8
   21490:	vst1.8	{d16}, [r1]
   21494:	mov	r7, ip
   21498:	cmp	r0, ip
   2149c:	beq	21cc8 <ReadInt8Data+0x2970>
   214a0:	add	r1, sp, #136	; 0x88
   214a4:	add	r2, r5, r0
   214a8:	add	r1, r1, r0, lsl #1
   214ac:	sub	r0, r7, r0
   214b0:	ldrb	r3, [r1], #2
   214b4:	subs	r0, r0, #1
   214b8:	strb	r3, [r2], #1
   214bc:	bne	214b0 <ReadInt8Data+0x2158>
   214c0:	b	21cc8 <ReadInt8Data+0x2970>
   214c4:	mov	r1, #0
   214c8:	cmp	ip, #0
   214cc:	beq	214ec <ReadInt8Data+0x2194>
   214d0:	add	r2, sp, #136	; 0x88
   214d4:	add	r2, r2, r1, lsl #2
   214d8:	add	r1, r8, r1
   214dc:	vld1.32	{d16-d17}, [r2]
   214e0:	vmovn.i32	d16, q8
   214e4:	vuzp.8	d16, d17
   214e8:	vst1.32	{d16[0]}, [r1]
   214ec:	ldr	r7, [sp, #108]	; 0x6c
   214f0:	cmp	lr, r7
   214f4:	beq	21cc8 <ReadInt8Data+0x2970>
   214f8:	add	r1, sp, #136	; 0x88
   214fc:	add	r2, r8, lr
   21500:	sub	r0, r7, lr
   21504:	add	r1, r1, lr, lsl #2
   21508:	ldr	r3, [r1], #4
   2150c:	subs	r0, r0, #1
   21510:	strb	r3, [r2], #1
   21514:	bne	21508 <ReadInt8Data+0x21b0>
   21518:	b	21cc8 <ReadInt8Data+0x2970>
   2151c:	mov	r1, #0
   21520:	cmp	ip, #0
   21524:	beq	21544 <ReadInt8Data+0x21ec>
   21528:	add	r2, sp, #136	; 0x88
   2152c:	add	r2, r2, r1, lsl #2
   21530:	add	r1, r8, r1
   21534:	vld1.32	{d16-d17}, [r2]
   21538:	vmovn.i32	d16, q8
   2153c:	vuzp.8	d16, d17
   21540:	vst1.32	{d16[0]}, [r1]
   21544:	ldr	r7, [sp, #108]	; 0x6c
   21548:	cmp	lr, r7
   2154c:	beq	21cc8 <ReadInt8Data+0x2970>
   21550:	add	r1, sp, #136	; 0x88
   21554:	add	r2, r8, lr
   21558:	sub	r0, r7, lr
   2155c:	add	r1, r1, lr, lsl #2
   21560:	ldr	r3, [r1], #4
   21564:	subs	r0, r0, #1
   21568:	strb	r3, [r2], #1
   2156c:	bne	21560 <ReadInt8Data+0x2208>
   21570:	b	21cc8 <ReadInt8Data+0x2970>
   21574:	mov	r1, #0
   21578:	cmp	ip, #0
   2157c:	beq	215a0 <ReadInt8Data+0x2248>
   21580:	add	r2, sp, #136	; 0x88
   21584:	add	r2, r2, r1, lsl #2
   21588:	add	r1, r8, r1
   2158c:	vld1.32	{d16-d17}, [r2]
   21590:	vcvt.s32.f32	q8, q8
   21594:	vmovn.i32	d16, q8
   21598:	vuzp.8	d16, d17
   2159c:	vst1.32	{d16[0]}, [r1]
   215a0:	ldr	r7, [sp, #108]	; 0x6c
   215a4:	cmp	lr, r7
   215a8:	beq	21cc8 <ReadInt8Data+0x2970>
   215ac:	add	r1, sp, #136	; 0x88
   215b0:	add	r2, r8, lr
   215b4:	sub	r0, r7, lr
   215b8:	add	r1, r1, lr, lsl #2
   215bc:	vldr	s0, [r1]
   215c0:	add	r1, r1, #4
   215c4:	subs	r0, r0, #1
   215c8:	vcvt.s32.f32	s0, s0
   215cc:	vmov	r3, s0
   215d0:	strb	r3, [r2], #1
   215d4:	bne	215bc <ReadInt8Data+0x2264>
   215d8:	b	21cc8 <ReadInt8Data+0x2970>
   215dc:	mov	r1, #0
   215e0:	mov	r0, r5
   215e4:	cmp	ip, #0
   215e8:	mov	r5, r0
   215ec:	beq	21614 <ReadInt8Data+0x22bc>
   215f0:	add	r2, sp, #136	; 0x88
   215f4:	mov	r3, r5
   215f8:	add	r2, r2, r1, lsl #3
   215fc:	vld1.64	{d16-d17}, [r2]
   21600:	vmovn.i64	d16, q8
   21604:	vmov.32	r2, d16[0]
   21608:	strb	r2, [r3, r1]!
   2160c:	vmov.32	r1, d16[1]
   21610:	strb	r1, [r3, #1]
   21614:	mov	r7, lr
   21618:	cmp	r8, lr
   2161c:	beq	2191c <ReadInt8Data+0x25c4>
   21620:	add	r1, sp, #136	; 0x88
   21624:	add	r2, r5, r8
   21628:	sub	r0, r7, r8
   2162c:	add	r1, r1, r8, lsl #3
   21630:	ldrb	r3, [r1], #8
   21634:	subs	r0, r0, #1
   21638:	strb	r3, [r2], #1
   2163c:	bne	21630 <ReadInt8Data+0x22d8>
   21640:	b	2191c <ReadInt8Data+0x25c4>
   21644:	mov	r8, r5
   21648:	mov	ip, r7
   2164c:	mov	r2, #0
   21650:	ldr	r0, [sp, #132]	; 0x84
   21654:	mov	r7, ip
   21658:	mov	r3, r9
   2165c:	cmp	r0, #0
   21660:	beq	21680 <ReadInt8Data+0x2328>
   21664:	add	r0, sp, #136	; 0x88
   21668:	add	r0, r0, r2, lsl #1
   2166c:	vld1.16	{d16-d17}, [r0]
   21670:	add	r0, r3, r2
   21674:	add	r0, r0, r6
   21678:	vmovn.i16	d16, q8
   2167c:	vst1.8	{d16}, [r0]
   21680:	ldr	r9, [sp, #128]	; 0x80
   21684:	cmp	r8, lr
   21688:	beq	21cc8 <ReadInt8Data+0x2970>
   2168c:	add	r0, sp, #136	; 0x88
   21690:	add	r1, r0, lr, lsl #1
   21694:	add	r0, r3, lr
   21698:	add	r2, r0, r6
   2169c:	sub	r0, r7, lr
   216a0:	sub	r0, r0, r6
   216a4:	ldrb	r3, [r1], #2
   216a8:	subs	r0, r0, #1
   216ac:	strb	r3, [r2], #1
   216b0:	bne	216a4 <ReadInt8Data+0x234c>
   216b4:	b	21cc8 <ReadInt8Data+0x2970>
   216b8:	mov	r8, r5
   216bc:	mov	ip, r7
   216c0:	mov	r2, #0
   216c4:	ldr	r0, [sp, #132]	; 0x84
   216c8:	mov	r7, ip
   216cc:	mov	r3, r9
   216d0:	cmp	r0, #0
   216d4:	beq	216f4 <ReadInt8Data+0x239c>
   216d8:	add	r0, sp, #136	; 0x88
   216dc:	add	r0, r0, r2, lsl #1
   216e0:	vld1.16	{d16-d17}, [r0]
   216e4:	add	r0, r3, r2
   216e8:	add	r0, r0, r6
   216ec:	vmovn.i16	d16, q8
   216f0:	vst1.8	{d16}, [r0]
   216f4:	ldr	r9, [sp, #128]	; 0x80
   216f8:	cmp	r8, lr
   216fc:	beq	21cc8 <ReadInt8Data+0x2970>
   21700:	add	r0, sp, #136	; 0x88
   21704:	add	r1, r0, lr, lsl #1
   21708:	add	r0, r3, lr
   2170c:	add	r2, r0, r6
   21710:	sub	r0, r7, lr
   21714:	sub	r0, r0, r6
   21718:	ldrb	r3, [r1], #2
   2171c:	subs	r0, r0, #1
   21720:	strb	r3, [r2], #1
   21724:	bne	21718 <ReadInt8Data+0x23c0>
   21728:	b	21cc8 <ReadInt8Data+0x2970>
   2172c:	ldr	lr, [sp, #120]	; 0x78
   21730:	mov	r2, #0
   21734:	cmp	ip, #0
   21738:	beq	2175c <ReadInt8Data+0x2404>
   2173c:	add	r1, sp, #136	; 0x88
   21740:	add	r1, r1, r2, lsl #2
   21744:	vld1.32	{d16-d17}, [r1]
   21748:	add	r1, r2, sl
   2174c:	add	r1, lr, r1
   21750:	vmovn.i32	d16, q8
   21754:	vuzp.8	d16, d17
   21758:	vst1.32	{d16[0]}, [r1]
   2175c:	ldr	r1, [sp, #132]	; 0x84
   21760:	ldr	r4, [sp, #108]	; 0x6c
   21764:	cmp	r1, r0
   21768:	beq	21cc4 <ReadInt8Data+0x296c>
   2176c:	ldr	r3, [sp, #116]	; 0x74
   21770:	ldr	r1, [sp, #124]	; 0x7c
   21774:	add	r2, sp, #136	; 0x88
   21778:	add	r2, r2, r0, lsl #2
   2177c:	sub	r3, r4, r3
   21780:	add	r1, r1, r0
   21784:	sub	r0, r3, r0
   21788:	sub	r0, r0, #256	; 0x100
   2178c:	ldr	r3, [r2], #4
   21790:	subs	r0, r0, #1
   21794:	strb	r3, [r1], #1
   21798:	bne	2178c <ReadInt8Data+0x2434>
   2179c:	b	21cc4 <ReadInt8Data+0x296c>
   217a0:	ldr	lr, [sp, #120]	; 0x78
   217a4:	mov	r2, #0
   217a8:	cmp	ip, #0
   217ac:	beq	217d0 <ReadInt8Data+0x2478>
   217b0:	add	r1, sp, #136	; 0x88
   217b4:	add	r1, r1, r2, lsl #2
   217b8:	vld1.32	{d16-d17}, [r1]
   217bc:	add	r1, r2, sl
   217c0:	add	r1, lr, r1
   217c4:	vmovn.i32	d16, q8
   217c8:	vuzp.8	d16, d17
   217cc:	vst1.32	{d16[0]}, [r1]
   217d0:	ldr	r1, [sp, #132]	; 0x84
   217d4:	ldr	r5, [sp, #108]	; 0x6c
   217d8:	cmp	r1, r0
   217dc:	beq	21cc4 <ReadInt8Data+0x296c>
   217e0:	ldr	r3, [sp, #116]	; 0x74
   217e4:	ldr	r1, [sp, #124]	; 0x7c
   217e8:	add	r2, sp, #136	; 0x88
   217ec:	add	r2, r2, r0, lsl #2
   217f0:	sub	r3, r5, r3
   217f4:	add	r1, r1, r0
   217f8:	sub	r0, r3, r0
   217fc:	sub	r0, r0, #256	; 0x100
   21800:	ldr	r3, [r2], #4
   21804:	subs	r0, r0, #1
   21808:	strb	r3, [r1], #1
   2180c:	bne	21800 <ReadInt8Data+0x24a8>
   21810:	b	21cc4 <ReadInt8Data+0x296c>
   21814:	ldr	ip, [sp, #120]	; 0x78
   21818:	mov	r2, #0
   2181c:	ldr	r0, [sp, #132]	; 0x84
   21820:	ldr	r7, [sp, #124]	; 0x7c
   21824:	cmp	r0, #0
   21828:	beq	21850 <ReadInt8Data+0x24f8>
   2182c:	add	r1, sp, #136	; 0x88
   21830:	add	r1, r1, r2, lsl #2
   21834:	vld1.32	{d16-d17}, [r1]
   21838:	add	r1, r2, sl
   2183c:	add	r1, ip, r1
   21840:	vcvt.s32.f32	q8, q8
   21844:	vmovn.i32	d16, q8
   21848:	vuzp.8	d16, d17
   2184c:	vst1.32	{d16[0]}, [r1]
   21850:	ldr	r4, [sp, #108]	; 0x6c
   21854:	cmp	r8, lr
   21858:	beq	21894 <ReadInt8Data+0x253c>
   2185c:	ldr	r0, [sp, #116]	; 0x74
   21860:	add	r2, sp, #136	; 0x88
   21864:	add	r1, r7, lr
   21868:	add	r2, r2, lr, lsl #2
   2186c:	sub	r3, r4, r0
   21870:	sub	r0, r3, lr
   21874:	sub	r0, r0, #256	; 0x100
   21878:	vldr	s0, [r2]
   2187c:	add	r2, r2, #4
   21880:	subs	r0, r0, #1
   21884:	vcvt.s32.f32	s0, s0
   21888:	vmov	r3, s0
   2188c:	strb	r3, [r1], #1
   21890:	bne	21878 <ReadInt8Data+0x2520>
   21894:	mov	sl, r6
   21898:	mul	r0, sl, r9
   2189c:	sub	sp, fp, #28
   218a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   218a4:	mov	r2, #0
   218a8:	ldr	r0, [sp, #104]	; 0x68
   218ac:	ldr	r5, [sp, #120]	; 0x78
   218b0:	cmp	r0, #0
   218b4:	beq	218e0 <ReadInt8Data+0x2588>
   218b8:	add	r0, sp, #136	; 0x88
   218bc:	add	r0, r0, r2, lsl #3
   218c0:	vld1.64	{d16-d17}, [r0]
   218c4:	add	r0, r2, r8
   218c8:	mov	r2, r5
   218cc:	vmovn.i64	d16, q8
   218d0:	vmov.32	r1, d16[0]
   218d4:	strb	r1, [r2, r0]!
   218d8:	vmov.32	r0, d16[1]
   218dc:	strb	r0, [r2, #1]
   218e0:	ldr	r7, [sp, #108]	; 0x6c
   218e4:	ldr	r4, [sp, #124]	; 0x7c
   218e8:	cmp	ip, lr
   218ec:	beq	2191c <ReadInt8Data+0x25c4>
   218f0:	add	r0, sp, #136	; 0x88
   218f4:	add	r1, r4, lr
   218f8:	add	r2, r0, lr, lsl #3
   218fc:	ldr	r0, [sp, #112]	; 0x70
   21900:	sub	r0, r7, r0
   21904:	sub	r0, r0, lr
   21908:	sub	r0, r0, #256	; 0x100
   2190c:	ldrb	r3, [r2], #8
   21910:	subs	r0, r0, #1
   21914:	strb	r3, [r1], #1
   21918:	bne	2190c <ReadInt8Data+0x25b4>
   2191c:	ldr	r6, [sp, #132]	; 0x84
   21920:	ldr	r0, [sp, #116]	; 0x74
   21924:	cmp	r0, #13
   21928:	bne	21cc8 <ReadInt8Data+0x2970>
   2192c:	ldr	r0, [r6, #20]
   21930:	cmp	r0, #0
   21934:	beq	21980 <ReadInt8Data+0x2628>
   21938:	cmp	r7, #256	; 0x100
   2193c:	bgt	21a28 <ReadInt8Data+0x26d0>
   21940:	ldr	r3, [r6]
   21944:	add	r4, sp, #136	; 0x88
   21948:	mov	r1, r9
   2194c:	mov	r2, r7
   21950:	mov	r0, r4
   21954:	bl	18b8 <fread@plt>
   21958:	add	sl, r0, sl
   2195c:	cmp	r7, #1
   21960:	blt	21cc8 <ReadInt8Data+0x2970>
   21964:	mov	r0, r4
   21968:	bl	1bd4 <Mat_uint64Swap>
   2196c:	strb	r0, [r5], #1
   21970:	add	r4, r4, #8
   21974:	subs	r7, r7, #1
   21978:	bne	21964 <ReadInt8Data+0x260c>
   2197c:	b	21cc8 <ReadInt8Data+0x2970>
   21980:	cmp	r7, #256	; 0x100
   21984:	bgt	21b24 <ReadInt8Data+0x27cc>
   21988:	ldr	r3, [r6]
   2198c:	add	r4, sp, #136	; 0x88
   21990:	mov	r1, r9
   21994:	mov	r2, r7
   21998:	mov	r0, r4
   2199c:	bl	18b8 <fread@plt>
   219a0:	add	sl, r0, sl
   219a4:	cmp	r7, #1
   219a8:	blt	21cc8 <ReadInt8Data+0x2970>
   219ac:	mov	r8, #0
   219b0:	beq	21d18 <ReadInt8Data+0x29c0>
   219b4:	bic	r8, r7, #1
   219b8:	mov	r2, #1
   219bc:	mov	lr, r7
   219c0:	subs	r1, r8, #2
   219c4:	add	r1, r2, r1, lsr #1
   219c8:	and	ip, r1, #1
   219cc:	beq	21cd4 <ReadInt8Data+0x297c>
   219d0:	sub	r3, r1, ip
   219d4:	mov	r1, #0
   219d8:	mov	r7, #32
   219dc:	mov	r0, r5
   219e0:	add	r6, r4, #16
   219e4:	vld1.64	{d16-d17}, [r4], r7
   219e8:	mov	r2, r0
   219ec:	subs	r3, r3, #2
   219f0:	vmovn.i64	d16, q8
   219f4:	vmov.32	r5, d16[0]
   219f8:	strb	r5, [r2, r1]!
   219fc:	vmov.32	r5, d16[1]
   21a00:	add	r1, r1, #4
   21a04:	strb	r5, [r2, #1]
   21a08:	vld1.64	{d16-d17}, [r6]
   21a0c:	vmovn.i64	d16, q8
   21a10:	vmov.32	r6, d16[1]
   21a14:	strb	r6, [r2, #3]
   21a18:	vmov.32	r6, d16[0]
   21a1c:	strb	r6, [r2, #2]
   21a20:	bne	219e0 <ReadInt8Data+0x2688>
   21a24:	b	21cdc <ReadInt8Data+0x2984>
   21a28:	sub	r0, r7, #256	; 0x100
   21a2c:	mov	r8, r5
   21a30:	add	r1, r5, #256	; 0x100
   21a34:	str	r9, [sp, #128]	; 0x80
   21a38:	str	r7, [sp, #108]	; 0x6c
   21a3c:	str	r0, [sp, #124]	; 0x7c
   21a40:	mov	r0, #0
   21a44:	mov	r5, r1
   21a48:	ldr	r3, [r6]
   21a4c:	ldr	r1, [sp, #128]	; 0x80
   21a50:	add	r4, sp, #136	; 0x88
   21a54:	mov	r9, r0
   21a58:	mov	r2, #256	; 0x100
   21a5c:	mov	r0, r4
   21a60:	bl	18b8 <fread@plt>
   21a64:	mov	r6, r0
   21a68:	mov	r7, #0
   21a6c:	mov	r0, r4
   21a70:	bl	1bd4 <Mat_uint64Swap>
   21a74:	strb	r0, [r8, r7]
   21a78:	add	r7, r7, #1
   21a7c:	add	r4, r4, #8
   21a80:	cmp	r7, #256	; 0x100
   21a84:	bne	21a6c <ReadInt8Data+0x2714>
   21a88:	ldr	r2, [sp, #124]	; 0x7c
   21a8c:	add	sl, r6, sl
   21a90:	ldr	r6, [sp, #132]	; 0x84
   21a94:	add	r0, r9, #256	; 0x100
   21a98:	add	r8, r8, #256	; 0x100
   21a9c:	add	r1, r5, #256	; 0x100
   21aa0:	cmp	r0, r2
   21aa4:	blt	21a44 <ReadInt8Data+0x26ec>
   21aa8:	ldr	r7, [sp, #108]	; 0x6c
   21aac:	cmp	r0, r7
   21ab0:	bge	21b14 <ReadInt8Data+0x27bc>
   21ab4:	mov	r1, r6
   21ab8:	sub	r6, r7, r0
   21abc:	add	r4, sp, #136	; 0x88
   21ac0:	ldr	r3, [r1]
   21ac4:	ldr	r1, [sp, #128]	; 0x80
   21ac8:	mov	r0, r4
   21acc:	mov	r2, r6
   21ad0:	mov	r8, r1
   21ad4:	bl	18b8 <fread@plt>
   21ad8:	add	sl, r0, sl
   21adc:	cmp	r6, #1
   21ae0:	blt	21b04 <ReadInt8Data+0x27ac>
   21ae4:	sub	r0, r7, r9
   21ae8:	sub	r6, r0, #256	; 0x100
   21aec:	mov	r0, r4
   21af0:	bl	1bd4 <Mat_uint64Swap>
   21af4:	strb	r0, [r5], #1
   21af8:	add	r4, r4, #8
   21afc:	subs	r6, r6, #1
   21b00:	bne	21aec <ReadInt8Data+0x2794>
   21b04:	mov	r9, r8
   21b08:	mul	r0, sl, r9
   21b0c:	sub	sp, fp, #28
   21b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b14:	ldr	r9, [sp, #128]	; 0x80
   21b18:	mul	r0, sl, r9
   21b1c:	sub	sp, fp, #28
   21b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b24:	mov	r8, sl
   21b28:	str	r9, [sp, #128]	; 0x80
   21b2c:	sub	r1, r7, #256	; 0x100
   21b30:	str	r7, [sp, #108]	; 0x6c
   21b34:	add	r0, r5, #256	; 0x100
   21b38:	mov	sl, #0
   21b3c:	mov	r7, #32
   21b40:	mov	r9, r5
   21b44:	str	r5, [sp, #120]	; 0x78
   21b48:	str	r1, [sp, #116]	; 0x74
   21b4c:	str	r0, [sp, #124]	; 0x7c
   21b50:	ldr	r0, [sp, #132]	; 0x84
   21b54:	ldr	r1, [sp, #128]	; 0x80
   21b58:	add	r4, sp, #136	; 0x88
   21b5c:	mov	r2, #256	; 0x100
   21b60:	ldr	r3, [r0]
   21b64:	mov	r0, r4
   21b68:	bl	18b8 <fread@plt>
   21b6c:	mov	r1, r4
   21b70:	mov	r2, #0
   21b74:	add	r3, r1, #16
   21b78:	vld1.64	{d16-d17}, [r1], r7
   21b7c:	mov	r4, r9
   21b80:	vmovn.i64	d16, q8
   21b84:	vmov.32	r5, d16[0]
   21b88:	strb	r5, [r4, r2]!
   21b8c:	vmov.32	r5, d16[1]
   21b90:	add	r2, r2, #4
   21b94:	cmp	r2, #256	; 0x100
   21b98:	strb	r5, [r4, #1]
   21b9c:	vld1.64	{d16-d17}, [r3]
   21ba0:	vmovn.i64	d16, q8
   21ba4:	vmov.32	r3, d16[1]
   21ba8:	strb	r3, [r4, #3]
   21bac:	vmov.32	r3, d16[0]
   21bb0:	strb	r3, [r4, #2]
   21bb4:	bne	21b74 <ReadInt8Data+0x281c>
   21bb8:	ldr	r6, [sp, #124]	; 0x7c
   21bbc:	ldr	r2, [sp, #116]	; 0x74
   21bc0:	mov	r1, sl
   21bc4:	add	sl, sl, #256	; 0x100
   21bc8:	add	r8, r0, r8
   21bcc:	add	r9, r9, #256	; 0x100
   21bd0:	add	r0, r6, #256	; 0x100
   21bd4:	cmp	sl, r2
   21bd8:	blt	21b4c <ReadInt8Data+0x27f4>
   21bdc:	ldr	r4, [sp, #108]	; 0x6c
   21be0:	str	r1, [sp, #116]	; 0x74
   21be4:	cmp	sl, r4
   21be8:	bge	21cc0 <ReadInt8Data+0x2968>
   21bec:	ldr	r0, [sp, #132]	; 0x84
   21bf0:	ldr	r9, [sp, #128]	; 0x80
   21bf4:	sub	r7, r4, sl
   21bf8:	add	r5, sp, #136	; 0x88
   21bfc:	mov	r2, r7
   21c00:	ldr	r3, [r0]
   21c04:	mov	r0, r5
   21c08:	mov	r1, r9
   21c0c:	bl	18b8 <fread@plt>
   21c10:	add	r8, r0, r8
   21c14:	cmp	r7, #1
   21c18:	blt	21cc4 <ReadInt8Data+0x296c>
   21c1c:	mov	lr, #0
   21c20:	beq	21d88 <ReadInt8Data+0x2a30>
   21c24:	bic	lr, r7, #1
   21c28:	mov	r2, #1
   21c2c:	str	r7, [sp, #132]	; 0x84
   21c30:	subs	r1, lr, #2
   21c34:	add	r1, r2, r1, lsr #1
   21c38:	and	ip, r1, #1
   21c3c:	beq	21d3c <ReadInt8Data+0x29e4>
   21c40:	ldr	r0, [sp, #116]	; 0x74
   21c44:	ldr	r9, [sp, #120]	; 0x78
   21c48:	mov	r6, #32
   21c4c:	sub	r3, r4, r0
   21c50:	add	r0, r9, sl
   21c54:	sub	r3, r3, #256	; 0x100
   21c58:	bic	r3, r3, #1
   21c5c:	sub	r3, r3, #2
   21c60:	add	r2, r2, r3, lsr #1
   21c64:	mvn	r7, r3, lsr #1
   21c68:	and	r2, r2, #1
   21c6c:	add	r3, r7, r2
   21c70:	mov	r2, #0
   21c74:	add	r4, r5, #16
   21c78:	vld1.64	{d16-d17}, [r5], r6
   21c7c:	mov	r7, r0
   21c80:	adds	r3, r3, #2
   21c84:	vmovn.i64	d16, q8
   21c88:	vmov.32	r1, d16[0]
   21c8c:	strb	r1, [r7, r2]!
   21c90:	vmov.32	r1, d16[1]
   21c94:	strb	r1, [r7, #1]
   21c98:	add	r1, r0, r2
   21c9c:	add	r2, r2, #4
   21ca0:	vld1.64	{d16-d17}, [r4]
   21ca4:	vmovn.i64	d16, q8
   21ca8:	vmov.32	r4, d16[1]
   21cac:	strb	r4, [r1, #3]
   21cb0:	vmov.32	r4, d16[0]
   21cb4:	strb	r4, [r1, #2]
   21cb8:	bne	21c74 <ReadInt8Data+0x291c>
   21cbc:	b	21d44 <ReadInt8Data+0x29ec>
   21cc0:	ldr	r9, [sp, #128]	; 0x80
   21cc4:	mov	sl, r8
   21cc8:	mul	r0, sl, r9
   21ccc:	sub	sp, fp, #28
   21cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21cd4:	mov	r1, #0
   21cd8:	mov	r0, r5
   21cdc:	cmp	ip, #0
   21ce0:	mov	r5, r0
   21ce4:	beq	21d0c <ReadInt8Data+0x29b4>
   21ce8:	add	r2, sp, #136	; 0x88
   21cec:	mov	r3, r5
   21cf0:	add	r2, r2, r1, lsl #3
   21cf4:	vld1.64	{d16-d17}, [r2]
   21cf8:	vmovn.i64	d16, q8
   21cfc:	vmov.32	r2, d16[0]
   21d00:	strb	r2, [r3, r1]!
   21d04:	vmov.32	r1, d16[1]
   21d08:	strb	r1, [r3, #1]
   21d0c:	mov	r7, lr
   21d10:	cmp	r8, lr
   21d14:	beq	21cc8 <ReadInt8Data+0x2970>
   21d18:	add	r1, sp, #136	; 0x88
   21d1c:	add	r2, r5, r8
   21d20:	sub	r0, r7, r8
   21d24:	add	r1, r1, r8, lsl #3
   21d28:	ldrb	r3, [r1], #8
   21d2c:	subs	r0, r0, #1
   21d30:	strb	r3, [r2], #1
   21d34:	bne	21d28 <ReadInt8Data+0x29d0>
   21d38:	b	21cc8 <ReadInt8Data+0x2970>
   21d3c:	ldr	r9, [sp, #120]	; 0x78
   21d40:	mov	r2, #0
   21d44:	ldr	r6, [sp, #124]	; 0x7c
   21d48:	cmp	ip, #0
   21d4c:	beq	21d74 <ReadInt8Data+0x2a1c>
   21d50:	add	r0, sp, #136	; 0x88
   21d54:	add	r0, r0, r2, lsl #3
   21d58:	vld1.64	{d16-d17}, [r0]
   21d5c:	add	r0, r2, sl
   21d60:	vmovn.i64	d16, q8
   21d64:	vmov.32	r1, d16[0]
   21d68:	strb	r1, [r9, r0]!
   21d6c:	vmov.32	r0, d16[1]
   21d70:	strb	r0, [r9, #1]
   21d74:	ldr	r0, [sp, #132]	; 0x84
   21d78:	ldr	r4, [sp, #108]	; 0x6c
   21d7c:	ldr	r9, [sp, #128]	; 0x80
   21d80:	cmp	r0, lr
   21d84:	beq	21cc4 <ReadInt8Data+0x296c>
   21d88:	add	r0, sp, #136	; 0x88
   21d8c:	add	r1, r6, lr
   21d90:	add	r2, r0, lr, lsl #3
   21d94:	ldr	r0, [sp, #116]	; 0x74
   21d98:	sub	r0, r4, r0
   21d9c:	sub	r0, r0, lr
   21da0:	sub	r0, r0, #256	; 0x100
   21da4:	ldrb	r3, [r2], #8
   21da8:	subs	r0, r0, #1
   21dac:	strb	r3, [r1], #1
   21db0:	bne	21da4 <ReadInt8Data+0x2a4c>
   21db4:	b	21cc4 <ReadInt8Data+0x296c>

00021db8 <ReadCompressedInt8Data>:
   21db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21dbc:	add	fp, sp, #28
   21dc0:	sub	sp, sp, #12
   21dc4:	mov	r7, r0
   21dc8:	mov	r0, #0
   21dcc:	cmp	r1, #0
   21dd0:	beq	21de4 <ReadCompressedInt8Data+0x2c>
   21dd4:	cmp	r7, #0
   21dd8:	movne	r5, r2
   21ddc:	cmpne	r2, #0
   21de0:	bne	21dec <ReadCompressedInt8Data+0x34>
   21de4:	sub	sp, fp, #28
   21de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21dec:	ldr	sl, [fp, #8]
   21df0:	mov	r0, r3
   21df4:	mov	r4, r3
   21df8:	mov	r6, r1
   21dfc:	bl	1924 <Mat_SizeOf@plt>
   21e00:	mov	r9, r0
   21e04:	sub	r0, r4, #1
   21e08:	cmp	r0, #12
   21e0c:	bhi	222dc <ReadCompressedInt8Data+0x524>
   21e10:	add	r1, pc, #4
   21e14:	ldr	r0, [r1, r0, lsl #2]
   21e18:	add	pc, r1, r0
   21e1c:	.word	0x00000034
   21e20:	.word	0x0000006c
   21e24:	.word	0x000000a4
   21e28:	.word	0x000000ec
   21e2c:	.word	0x00000134
   21e30:	.word	0x0000017c
   21e34:	.word	0x000001c4
   21e38:	.word	0x000004c0
   21e3c:	.word	0x00000214
   21e40:	.word	0x000004c0
   21e44:	.word	0x000004c0
   21e48:	.word	0x00000264
   21e4c:	.word	0x000002ac
   21e50:	cmp	sl, #1
   21e54:	blt	222dc <ReadCompressedInt8Data+0x524>
   21e58:	mov	r8, sp
   21e5c:	mov	r4, sl
   21e60:	mov	r0, r7
   21e64:	mov	r1, r6
   21e68:	mov	r2, r8
   21e6c:	mov	r3, r9
   21e70:	bl	34ac <InflateData>
   21e74:	ldrb	r0, [sp]
   21e78:	subs	r4, r4, #1
   21e7c:	strb	r0, [r5], #1
   21e80:	bne	21e60 <ReadCompressedInt8Data+0xa8>
   21e84:	b	222dc <ReadCompressedInt8Data+0x524>
   21e88:	cmp	sl, #1
   21e8c:	blt	222dc <ReadCompressedInt8Data+0x524>
   21e90:	mov	r8, sp
   21e94:	mov	r4, sl
   21e98:	mov	r0, r7
   21e9c:	mov	r1, r6
   21ea0:	mov	r2, r8
   21ea4:	mov	r3, r9
   21ea8:	bl	34ac <InflateData>
   21eac:	ldrb	r0, [sp]
   21eb0:	subs	r4, r4, #1
   21eb4:	strb	r0, [r5], #1
   21eb8:	bne	21e98 <ReadCompressedInt8Data+0xe0>
   21ebc:	b	222dc <ReadCompressedInt8Data+0x524>
   21ec0:	ldr	r0, [r7, #20]
   21ec4:	cmp	r0, #0
   21ec8:	beq	22110 <ReadCompressedInt8Data+0x358>
   21ecc:	cmp	sl, #1
   21ed0:	blt	222dc <ReadCompressedInt8Data+0x524>
   21ed4:	mov	r8, sp
   21ed8:	mov	r4, sl
   21edc:	mov	r0, r7
   21ee0:	mov	r1, r6
   21ee4:	mov	r2, r8
   21ee8:	mov	r3, r9
   21eec:	bl	34ac <InflateData>
   21ef0:	mov	r0, r8
   21ef4:	bl	1c20 <Mat_int16Swap>
   21ef8:	strb	r0, [r5], #1
   21efc:	subs	r4, r4, #1
   21f00:	bne	21edc <ReadCompressedInt8Data+0x124>
   21f04:	b	222dc <ReadCompressedInt8Data+0x524>
   21f08:	ldr	r0, [r7, #20]
   21f0c:	cmp	r0, #0
   21f10:	beq	22148 <ReadCompressedInt8Data+0x390>
   21f14:	cmp	sl, #1
   21f18:	blt	222dc <ReadCompressedInt8Data+0x524>
   21f1c:	mov	r8, sp
   21f20:	mov	r4, sl
   21f24:	mov	r0, r7
   21f28:	mov	r1, r6
   21f2c:	mov	r2, r8
   21f30:	mov	r3, r9
   21f34:	bl	34ac <InflateData>
   21f38:	mov	r0, r8
   21f3c:	bl	1c34 <Mat_uint16Swap>
   21f40:	strb	r0, [r5], #1
   21f44:	subs	r4, r4, #1
   21f48:	bne	21f24 <ReadCompressedInt8Data+0x16c>
   21f4c:	b	222dc <ReadCompressedInt8Data+0x524>
   21f50:	ldr	r0, [r7, #20]
   21f54:	cmp	r0, #0
   21f58:	beq	22180 <ReadCompressedInt8Data+0x3c8>
   21f5c:	cmp	sl, #1
   21f60:	blt	222dc <ReadCompressedInt8Data+0x524>
   21f64:	mov	r8, sp
   21f68:	mov	r4, sl
   21f6c:	mov	r0, r7
   21f70:	mov	r1, r6
   21f74:	mov	r2, r8
   21f78:	mov	r3, r9
   21f7c:	bl	34ac <InflateData>
   21f80:	mov	r0, r8
   21f84:	bl	1bf8 <Mat_int32Swap>
   21f88:	strb	r0, [r5], #1
   21f8c:	subs	r4, r4, #1
   21f90:	bne	21f6c <ReadCompressedInt8Data+0x1b4>
   21f94:	b	222dc <ReadCompressedInt8Data+0x524>
   21f98:	ldr	r0, [r7, #20]
   21f9c:	cmp	r0, #0
   21fa0:	beq	221b8 <ReadCompressedInt8Data+0x400>
   21fa4:	cmp	sl, #1
   21fa8:	blt	222dc <ReadCompressedInt8Data+0x524>
   21fac:	mov	r8, sp
   21fb0:	mov	r4, sl
   21fb4:	mov	r0, r7
   21fb8:	mov	r1, r6
   21fbc:	mov	r2, r8
   21fc0:	mov	r3, r9
   21fc4:	bl	34ac <InflateData>
   21fc8:	mov	r0, r8
   21fcc:	bl	1c0c <Mat_uint32Swap>
   21fd0:	strb	r0, [r5], #1
   21fd4:	subs	r4, r4, #1
   21fd8:	bne	21fb4 <ReadCompressedInt8Data+0x1fc>
   21fdc:	b	222dc <ReadCompressedInt8Data+0x524>
   21fe0:	ldr	r0, [r7, #20]
   21fe4:	cmp	r0, #0
   21fe8:	beq	221f0 <ReadCompressedInt8Data+0x438>
   21fec:	cmp	sl, #1
   21ff0:	blt	222dc <ReadCompressedInt8Data+0x524>
   21ff4:	mov	r8, sp
   21ff8:	mov	r4, sl
   21ffc:	mov	r0, r7
   22000:	mov	r1, r6
   22004:	mov	r2, r8
   22008:	mov	r3, r9
   2200c:	bl	34ac <InflateData>
   22010:	mov	r0, r8
   22014:	bl	1c4c <Mat_floatSwap>
   22018:	vcvt.s32.f32	s0, s0
   2201c:	subs	r4, r4, #1
   22020:	vmov	r0, s0
   22024:	strb	r0, [r5], #1
   22028:	bne	21ffc <ReadCompressedInt8Data+0x244>
   2202c:	b	222dc <ReadCompressedInt8Data+0x524>
   22030:	ldr	r0, [r7, #20]
   22034:	cmp	r0, #0
   22038:	beq	22230 <ReadCompressedInt8Data+0x478>
   2203c:	cmp	sl, #1
   22040:	blt	222dc <ReadCompressedInt8Data+0x524>
   22044:	mov	r8, sp
   22048:	mov	r4, sl
   2204c:	mov	r0, r7
   22050:	mov	r1, r6
   22054:	mov	r2, r8
   22058:	mov	r3, r9
   2205c:	bl	34ac <InflateData>
   22060:	mov	r0, r8
   22064:	bl	1c90 <Mat_doubleSwap>
   22068:	vcvt.s32.f64	s0, d0
   2206c:	subs	r4, r4, #1
   22070:	vmov	r0, s0
   22074:	strb	r0, [r5], #1
   22078:	bne	2204c <ReadCompressedInt8Data+0x294>
   2207c:	b	222dc <ReadCompressedInt8Data+0x524>
   22080:	ldr	r0, [r7, #20]
   22084:	cmp	r0, #0
   22088:	beq	22270 <ReadCompressedInt8Data+0x4b8>
   2208c:	cmp	sl, #1
   22090:	blt	222dc <ReadCompressedInt8Data+0x524>
   22094:	mov	r8, sp
   22098:	mov	r4, sl
   2209c:	mov	r0, r7
   220a0:	mov	r1, r6
   220a4:	mov	r2, r8
   220a8:	mov	r3, r9
   220ac:	bl	34ac <InflateData>
   220b0:	mov	r0, r8
   220b4:	bl	1b84 <Mat_int64Swap>
   220b8:	strb	r0, [r5], #1
   220bc:	subs	r4, r4, #1
   220c0:	bne	2209c <ReadCompressedInt8Data+0x2e4>
   220c4:	b	222dc <ReadCompressedInt8Data+0x524>
   220c8:	ldr	r0, [r7, #20]
   220cc:	cmp	r0, #0
   220d0:	beq	222a8 <ReadCompressedInt8Data+0x4f0>
   220d4:	cmp	sl, #1
   220d8:	blt	222dc <ReadCompressedInt8Data+0x524>
   220dc:	mov	r8, sp
   220e0:	mov	r4, sl
   220e4:	mov	r0, r7
   220e8:	mov	r1, r6
   220ec:	mov	r2, r8
   220f0:	mov	r3, r9
   220f4:	bl	34ac <InflateData>
   220f8:	mov	r0, r8
   220fc:	bl	1bd4 <Mat_uint64Swap>
   22100:	strb	r0, [r5], #1
   22104:	subs	r4, r4, #1
   22108:	bne	220e4 <ReadCompressedInt8Data+0x32c>
   2210c:	b	222dc <ReadCompressedInt8Data+0x524>
   22110:	cmp	sl, #1
   22114:	blt	222dc <ReadCompressedInt8Data+0x524>
   22118:	mov	r8, sp
   2211c:	mov	r4, sl
   22120:	mov	r0, r7
   22124:	mov	r1, r6
   22128:	mov	r2, r8
   2212c:	mov	r3, r9
   22130:	bl	34ac <InflateData>
   22134:	ldrb	r0, [sp]
   22138:	subs	r4, r4, #1
   2213c:	strb	r0, [r5], #1
   22140:	bne	22120 <ReadCompressedInt8Data+0x368>
   22144:	b	222dc <ReadCompressedInt8Data+0x524>
   22148:	cmp	sl, #1
   2214c:	blt	222dc <ReadCompressedInt8Data+0x524>
   22150:	mov	r8, sp
   22154:	mov	r4, sl
   22158:	mov	r0, r7
   2215c:	mov	r1, r6
   22160:	mov	r2, r8
   22164:	mov	r3, r9
   22168:	bl	34ac <InflateData>
   2216c:	ldrb	r0, [sp]
   22170:	subs	r4, r4, #1
   22174:	strb	r0, [r5], #1
   22178:	bne	22158 <ReadCompressedInt8Data+0x3a0>
   2217c:	b	222dc <ReadCompressedInt8Data+0x524>
   22180:	cmp	sl, #1
   22184:	blt	222dc <ReadCompressedInt8Data+0x524>
   22188:	mov	r8, sp
   2218c:	mov	r4, sl
   22190:	mov	r0, r7
   22194:	mov	r1, r6
   22198:	mov	r2, r8
   2219c:	mov	r3, r9
   221a0:	bl	34ac <InflateData>
   221a4:	ldr	r0, [sp]
   221a8:	subs	r4, r4, #1
   221ac:	strb	r0, [r5], #1
   221b0:	bne	22190 <ReadCompressedInt8Data+0x3d8>
   221b4:	b	222dc <ReadCompressedInt8Data+0x524>
   221b8:	cmp	sl, #1
   221bc:	blt	222dc <ReadCompressedInt8Data+0x524>
   221c0:	mov	r8, sp
   221c4:	mov	r4, sl
   221c8:	mov	r0, r7
   221cc:	mov	r1, r6
   221d0:	mov	r2, r8
   221d4:	mov	r3, r9
   221d8:	bl	34ac <InflateData>
   221dc:	ldr	r0, [sp]
   221e0:	subs	r4, r4, #1
   221e4:	strb	r0, [r5], #1
   221e8:	bne	221c8 <ReadCompressedInt8Data+0x410>
   221ec:	b	222dc <ReadCompressedInt8Data+0x524>
   221f0:	cmp	sl, #1
   221f4:	blt	222dc <ReadCompressedInt8Data+0x524>
   221f8:	mov	r8, sp
   221fc:	mov	r4, sl
   22200:	mov	r0, r7
   22204:	mov	r1, r6
   22208:	mov	r2, r8
   2220c:	mov	r3, r9
   22210:	bl	34ac <InflateData>
   22214:	vldr	s0, [sp]
   22218:	subs	r4, r4, #1
   2221c:	vcvt.s32.f32	s0, s0
   22220:	vmov	r0, s0
   22224:	strb	r0, [r5], #1
   22228:	bne	22200 <ReadCompressedInt8Data+0x448>
   2222c:	b	222dc <ReadCompressedInt8Data+0x524>
   22230:	cmp	sl, #1
   22234:	blt	222dc <ReadCompressedInt8Data+0x524>
   22238:	mov	r8, sp
   2223c:	mov	r4, sl
   22240:	mov	r0, r7
   22244:	mov	r1, r6
   22248:	mov	r2, r8
   2224c:	mov	r3, r9
   22250:	bl	34ac <InflateData>
   22254:	vldr	d16, [sp]
   22258:	subs	r4, r4, #1
   2225c:	vcvt.s32.f64	s0, d16
   22260:	vmov	r0, s0
   22264:	strb	r0, [r5], #1
   22268:	bne	22240 <ReadCompressedInt8Data+0x488>
   2226c:	b	222dc <ReadCompressedInt8Data+0x524>
   22270:	cmp	sl, #1
   22274:	blt	222dc <ReadCompressedInt8Data+0x524>
   22278:	mov	r8, sp
   2227c:	mov	r4, sl
   22280:	mov	r0, r7
   22284:	mov	r1, r6
   22288:	mov	r2, r8
   2228c:	mov	r3, r9
   22290:	bl	34ac <InflateData>
   22294:	ldrb	r0, [sp]
   22298:	subs	r4, r4, #1
   2229c:	strb	r0, [r5], #1
   222a0:	bne	22280 <ReadCompressedInt8Data+0x4c8>
   222a4:	b	222dc <ReadCompressedInt8Data+0x524>
   222a8:	cmp	sl, #1
   222ac:	blt	222dc <ReadCompressedInt8Data+0x524>
   222b0:	mov	r8, sp
   222b4:	mov	r4, sl
   222b8:	mov	r0, r7
   222bc:	mov	r1, r6
   222c0:	mov	r2, r8
   222c4:	mov	r3, r9
   222c8:	bl	34ac <InflateData>
   222cc:	ldrb	r0, [sp]
   222d0:	subs	r4, r4, #1
   222d4:	strb	r0, [r5], #1
   222d8:	bne	222b8 <ReadCompressedInt8Data+0x500>
   222dc:	mul	r0, r9, sl
   222e0:	sub	sp, fp, #28
   222e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000222e8 <ReadUInt8Data>:
   222e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222ec:	add	fp, sp, #28
   222f0:	sub	sp, sp, #140	; 0x8c
   222f4:	sub	sp, sp, #2048	; 0x800
   222f8:	mov	r6, r0
   222fc:	mov	r0, #0
   22300:	cmp	r6, #0
   22304:	movne	r5, r1
   22308:	cmpne	r1, #0
   2230c:	bne	22318 <ReadUInt8Data+0x30>
   22310:	sub	sp, fp, #28
   22314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22318:	ldr	r1, [r6]
   2231c:	cmp	r1, #0
   22320:	beq	22310 <ReadUInt8Data+0x28>
   22324:	mov	r0, r2
   22328:	mov	r7, r3
   2232c:	mov	r4, r2
   22330:	bl	1924 <Mat_SizeOf@plt>
   22334:	mov	r9, r0
   22338:	sub	r0, r4, #1
   2233c:	mov	sl, #0
   22340:	str	r4, [sp, #116]	; 0x74
   22344:	str	r6, [sp, #132]	; 0x84
   22348:	cmp	r0, #11
   2234c:	bhi	248b0 <ReadUInt8Data+0x25c8>
   22350:	add	r1, sp, #136	; 0x88
   22354:	add	r4, r1, #16
   22358:	add	r8, r1, #272	; 0x110
   2235c:	add	r1, pc, #4
   22360:	ldr	r0, [r1, r0, lsl #2]
   22364:	add	pc, r1, r0
   22368:	.word	0x00000030
   2236c:	.word	0x000000a8
   22370:	.word	0x000000ec
   22374:	.word	0x00000140
   22378:	.word	0x00000194
   2237c:	.word	0x000001e8
   22380:	.word	0x0000023c
   22384:	.word	0x00002548
   22388:	.word	0x00000298
   2238c:	.word	0x00002548
   22390:	.word	0x00002548
   22394:	.word	0x000002f4
   22398:	cmp	r7, #256	; 0x100
   2239c:	ble	22418 <ReadUInt8Data+0x130>
   223a0:	sub	r0, r7, #256	; 0x100
   223a4:	str	r7, [sp, #108]	; 0x6c
   223a8:	mov	r8, r5
   223ac:	mov	r5, #0
   223b0:	add	sl, sp, #136	; 0x88
   223b4:	mov	r7, #0
   223b8:	str	r0, [sp, #124]	; 0x7c
   223bc:	ldr	r3, [r6]
   223c0:	mov	r0, sl
   223c4:	mov	r1, r9
   223c8:	mov	r2, #256	; 0x100
   223cc:	bl	18b8 <fread@plt>
   223d0:	mov	r4, r0
   223d4:	add	r0, r8, r5
   223d8:	mov	r1, sl
   223dc:	mov	r2, #256	; 0x100
   223e0:	bl	181c <memcpy@plt>
   223e4:	ldr	r0, [sp, #124]	; 0x7c
   223e8:	add	r5, r5, #256	; 0x100
   223ec:	add	r7, r4, r7
   223f0:	cmp	r5, r0
   223f4:	blt	223bc <ReadUInt8Data+0xd4>
   223f8:	mov	sl, r7
   223fc:	mov	r4, r8
   22400:	ldr	r8, [sp, #108]	; 0x6c
   22404:	cmp	r5, r8
   22408:	blt	22728 <ReadUInt8Data+0x440>
   2240c:	b	24c58 <ReadUInt8Data+0x2970>
   22410:	cmp	r7, #256	; 0x100
   22414:	bgt	226c0 <ReadUInt8Data+0x3d8>
   22418:	ldr	r3, [r6]
   2241c:	add	r0, sp, #136	; 0x88
   22420:	mov	r1, r9
   22424:	mov	r2, r7
   22428:	bl	18b8 <fread@plt>
   2242c:	mov	sl, r0
   22430:	cmp	r7, #1
   22434:	blt	24c58 <ReadUInt8Data+0x2970>
   22438:	add	r1, sp, #136	; 0x88
   2243c:	mov	r0, r5
   22440:	mov	r2, r7
   22444:	bl	181c <memcpy@plt>
   22448:	mul	r0, sl, r9
   2244c:	sub	sp, fp, #28
   22450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22454:	ldr	r0, [r6, #20]
   22458:	cmp	r0, #0
   2245c:	beq	2276c <ReadUInt8Data+0x484>
   22460:	cmp	r7, #256	; 0x100
   22464:	bgt	22bfc <ReadUInt8Data+0x914>
   22468:	ldr	r3, [r6]
   2246c:	add	r4, sp, #136	; 0x88
   22470:	mov	r1, r9
   22474:	mov	r2, r7
   22478:	mov	r0, r4
   2247c:	bl	18b8 <fread@plt>
   22480:	mov	sl, r0
   22484:	cmp	r7, #1
   22488:	blt	24c58 <ReadUInt8Data+0x2970>
   2248c:	mov	r0, r4
   22490:	bl	1c20 <Mat_int16Swap>
   22494:	strb	r0, [r5], #1
   22498:	add	r4, r4, #2
   2249c:	subs	r7, r7, #1
   224a0:	bne	2248c <ReadUInt8Data+0x1a4>
   224a4:	b	24c58 <ReadUInt8Data+0x2970>
   224a8:	ldr	r0, [r6, #20]
   224ac:	cmp	r0, #0
   224b0:	beq	22804 <ReadUInt8Data+0x51c>
   224b4:	cmp	r7, #256	; 0x100
   224b8:	bgt	22cec <ReadUInt8Data+0xa04>
   224bc:	ldr	r3, [r6]
   224c0:	add	r4, sp, #136	; 0x88
   224c4:	mov	r1, r9
   224c8:	mov	r2, r7
   224cc:	mov	r0, r4
   224d0:	bl	18b8 <fread@plt>
   224d4:	mov	sl, r0
   224d8:	cmp	r7, #1
   224dc:	blt	24c58 <ReadUInt8Data+0x2970>
   224e0:	mov	r0, r4
   224e4:	bl	1c34 <Mat_uint16Swap>
   224e8:	strb	r0, [r5], #1
   224ec:	add	r4, r4, #2
   224f0:	subs	r7, r7, #1
   224f4:	bne	224e0 <ReadUInt8Data+0x1f8>
   224f8:	b	24c58 <ReadUInt8Data+0x2970>
   224fc:	ldr	r0, [r6, #20]
   22500:	cmp	r0, #0
   22504:	beq	2289c <ReadUInt8Data+0x5b4>
   22508:	cmp	r7, #256	; 0x100
   2250c:	bgt	22ddc <ReadUInt8Data+0xaf4>
   22510:	ldr	r3, [r6]
   22514:	add	r4, sp, #136	; 0x88
   22518:	mov	r1, r9
   2251c:	mov	r2, r7
   22520:	mov	r0, r4
   22524:	bl	18b8 <fread@plt>
   22528:	mov	sl, r0
   2252c:	cmp	r7, #1
   22530:	blt	24c58 <ReadUInt8Data+0x2970>
   22534:	mov	r0, r4
   22538:	bl	1bf8 <Mat_int32Swap>
   2253c:	strb	r0, [r5], #1
   22540:	add	r4, r4, #4
   22544:	subs	r7, r7, #1
   22548:	bne	22534 <ReadUInt8Data+0x24c>
   2254c:	b	24c58 <ReadUInt8Data+0x2970>
   22550:	ldr	r0, [r6, #20]
   22554:	cmp	r0, #0
   22558:	beq	2294c <ReadUInt8Data+0x664>
   2255c:	cmp	r7, #256	; 0x100
   22560:	bgt	22ecc <ReadUInt8Data+0xbe4>
   22564:	ldr	r3, [r6]
   22568:	add	r4, sp, #136	; 0x88
   2256c:	mov	r1, r9
   22570:	mov	r2, r7
   22574:	mov	r0, r4
   22578:	bl	18b8 <fread@plt>
   2257c:	mov	sl, r0
   22580:	cmp	r7, #1
   22584:	blt	24c58 <ReadUInt8Data+0x2970>
   22588:	mov	r0, r4
   2258c:	bl	1c0c <Mat_uint32Swap>
   22590:	strb	r0, [r5], #1
   22594:	add	r4, r4, #4
   22598:	subs	r7, r7, #1
   2259c:	bne	22588 <ReadUInt8Data+0x2a0>
   225a0:	b	24c58 <ReadUInt8Data+0x2970>
   225a4:	ldr	r0, [r6, #20]
   225a8:	cmp	r0, #0
   225ac:	beq	229fc <ReadUInt8Data+0x714>
   225b0:	cmp	r7, #256	; 0x100
   225b4:	bgt	22fbc <ReadUInt8Data+0xcd4>
   225b8:	ldr	r3, [r6]
   225bc:	add	r4, sp, #136	; 0x88
   225c0:	mov	r1, r9
   225c4:	mov	r2, r7
   225c8:	mov	r0, r4
   225cc:	bl	18b8 <fread@plt>
   225d0:	mov	sl, r0
   225d4:	cmp	r7, #1
   225d8:	blt	24c58 <ReadUInt8Data+0x2970>
   225dc:	mov	r0, r4
   225e0:	bl	1c4c <Mat_floatSwap>
   225e4:	vcvt.u32.f32	s0, s0
   225e8:	add	r4, r4, #4
   225ec:	subs	r7, r7, #1
   225f0:	vmov	r0, s0
   225f4:	strb	r0, [r5], #1
   225f8:	bne	225dc <ReadUInt8Data+0x2f4>
   225fc:	b	24c58 <ReadUInt8Data+0x2970>
   22600:	ldr	r0, [r6, #20]
   22604:	cmp	r0, #0
   22608:	beq	22ab4 <ReadUInt8Data+0x7cc>
   2260c:	cmp	r7, #256	; 0x100
   22610:	bgt	230b0 <ReadUInt8Data+0xdc8>
   22614:	ldr	r3, [r6]
   22618:	add	r4, sp, #136	; 0x88
   2261c:	mov	r1, r9
   22620:	mov	r2, r7
   22624:	mov	r0, r4
   22628:	bl	18b8 <fread@plt>
   2262c:	mov	sl, r0
   22630:	cmp	r7, #1
   22634:	blt	24c58 <ReadUInt8Data+0x2970>
   22638:	mov	r0, r4
   2263c:	bl	1c90 <Mat_doubleSwap>
   22640:	vcvt.u32.f64	s0, d0
   22644:	add	r4, r4, #8
   22648:	subs	r7, r7, #1
   2264c:	vmov	r0, s0
   22650:	strb	r0, [r5], #1
   22654:	bne	22638 <ReadUInt8Data+0x350>
   22658:	b	24c58 <ReadUInt8Data+0x2970>
   2265c:	ldr	r0, [r6, #20]
   22660:	cmp	r0, #0
   22664:	beq	22b54 <ReadUInt8Data+0x86c>
   22668:	cmp	r7, #256	; 0x100
   2266c:	bgt	231a4 <ReadUInt8Data+0xebc>
   22670:	ldr	r3, [r6]
   22674:	add	r6, sp, #136	; 0x88
   22678:	mov	r1, r9
   2267c:	mov	r2, r7
   22680:	mov	r0, r6
   22684:	bl	18b8 <fread@plt>
   22688:	mov	sl, r0
   2268c:	cmp	r7, #1
   22690:	blt	248ac <ReadUInt8Data+0x25c4>
   22694:	mov	r8, r5
   22698:	mov	r4, r5
   2269c:	mov	r5, r7
   226a0:	mov	r0, r6
   226a4:	bl	1b84 <Mat_int64Swap>
   226a8:	strb	r0, [r4], #1
   226ac:	add	r6, r6, #8
   226b0:	subs	r5, r5, #1
   226b4:	bne	226a0 <ReadUInt8Data+0x3b8>
   226b8:	mov	r5, r8
   226bc:	b	248ac <ReadUInt8Data+0x25c4>
   226c0:	sub	r0, r7, #256	; 0x100
   226c4:	str	r7, [sp, #108]	; 0x6c
   226c8:	mov	r8, r5
   226cc:	mov	r5, #0
   226d0:	add	r7, sp, #136	; 0x88
   226d4:	mov	sl, #0
   226d8:	str	r0, [sp, #124]	; 0x7c
   226dc:	ldr	r3, [r6]
   226e0:	mov	r0, r7
   226e4:	mov	r1, r9
   226e8:	mov	r2, #256	; 0x100
   226ec:	bl	18b8 <fread@plt>
   226f0:	mov	r4, r0
   226f4:	add	r0, r8, r5
   226f8:	mov	r1, r7
   226fc:	mov	r2, #256	; 0x100
   22700:	bl	181c <memcpy@plt>
   22704:	ldr	r0, [sp, #124]	; 0x7c
   22708:	add	r5, r5, #256	; 0x100
   2270c:	add	sl, r4, sl
   22710:	cmp	r5, r0
   22714:	blt	226dc <ReadUInt8Data+0x3f4>
   22718:	mov	r4, r8
   2271c:	ldr	r8, [sp, #108]	; 0x6c
   22720:	cmp	r5, r8
   22724:	bge	24c58 <ReadUInt8Data+0x2970>
   22728:	ldr	r0, [sp, #132]	; 0x84
   2272c:	sub	r6, r8, r5
   22730:	mov	r1, r9
   22734:	mov	r2, r6
   22738:	ldr	r3, [r0]
   2273c:	add	r0, sp, #136	; 0x88
   22740:	bl	18b8 <fread@plt>
   22744:	add	sl, r0, sl
   22748:	cmp	r6, #1
   2274c:	blt	24c58 <ReadUInt8Data+0x2970>
   22750:	add	r0, r4, r5
   22754:	add	r1, sp, #136	; 0x88
   22758:	mov	r2, r6
   2275c:	bl	181c <memcpy@plt>
   22760:	mul	r0, sl, r9
   22764:	sub	sp, fp, #28
   22768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2276c:	cmp	r7, #256	; 0x100
   22770:	bgt	23290 <ReadUInt8Data+0xfa8>
   22774:	ldr	r3, [r6]
   22778:	add	r4, sp, #136	; 0x88
   2277c:	mov	r1, r9
   22780:	mov	r2, r7
   22784:	mov	r0, r4
   22788:	bl	18b8 <fread@plt>
   2278c:	mov	sl, r0
   22790:	cmp	r7, #1
   22794:	blt	24c58 <ReadUInt8Data+0x2970>
   22798:	mov	r0, #0
   2279c:	cmp	r7, #8
   227a0:	bcc	243dc <ReadUInt8Data+0x20f4>
   227a4:	bic	r0, r7, #7
   227a8:	mov	r2, #1
   227ac:	mov	ip, r7
   227b0:	subs	r1, r0, #8
   227b4:	add	r1, r2, r1, lsr #3
   227b8:	and	lr, r1, #1
   227bc:	beq	243ac <ReadUInt8Data+0x20c4>
   227c0:	sub	r3, r1, lr
   227c4:	mov	r1, #0
   227c8:	mov	r7, #32
   227cc:	add	r6, r4, #16
   227d0:	vld1.16	{d16-d17}, [r4], r7
   227d4:	mov	r2, r5
   227d8:	add	r5, r5, r1
   227dc:	subs	r3, r3, #2
   227e0:	add	r1, r1, #16
   227e4:	vmovn.i16	d16, q8
   227e8:	vst1.8	{d16}, [r5]!
   227ec:	vld1.16	{d16-d17}, [r6]
   227f0:	vmovn.i16	d16, q8
   227f4:	vst1.8	{d16}, [r5]
   227f8:	mov	r5, r2
   227fc:	bne	227cc <ReadUInt8Data+0x4e4>
   22800:	b	243b0 <ReadUInt8Data+0x20c8>
   22804:	cmp	r7, #256	; 0x100
   22808:	bgt	23710 <ReadUInt8Data+0x1428>
   2280c:	ldr	r3, [r6]
   22810:	add	r4, sp, #136	; 0x88
   22814:	mov	r1, r9
   22818:	mov	r2, r7
   2281c:	mov	r0, r4
   22820:	bl	18b8 <fread@plt>
   22824:	mov	sl, r0
   22828:	cmp	r7, #1
   2282c:	blt	24c58 <ReadUInt8Data+0x2970>
   22830:	mov	r0, #0
   22834:	cmp	r7, #8
   22838:	bcc	24430 <ReadUInt8Data+0x2148>
   2283c:	bic	r0, r7, #7
   22840:	mov	r2, #1
   22844:	mov	ip, r7
   22848:	subs	r1, r0, #8
   2284c:	add	r1, r2, r1, lsr #3
   22850:	and	lr, r1, #1
   22854:	beq	24400 <ReadUInt8Data+0x2118>
   22858:	sub	r3, r1, lr
   2285c:	mov	r1, #0
   22860:	mov	r7, #32
   22864:	add	r6, r4, #16
   22868:	vld1.16	{d16-d17}, [r4], r7
   2286c:	mov	r2, r5
   22870:	add	r5, r5, r1
   22874:	subs	r3, r3, #2
   22878:	add	r1, r1, #16
   2287c:	vmovn.i16	d16, q8
   22880:	vst1.8	{d16}, [r5]!
   22884:	vld1.16	{d16-d17}, [r6]
   22888:	vmovn.i16	d16, q8
   2288c:	vst1.8	{d16}, [r5]
   22890:	mov	r5, r2
   22894:	bne	22864 <ReadUInt8Data+0x57c>
   22898:	b	24404 <ReadUInt8Data+0x211c>
   2289c:	cmp	r7, #256	; 0x100
   228a0:	bgt	23b90 <ReadUInt8Data+0x18a8>
   228a4:	ldr	r3, [r6]
   228a8:	mov	r8, r5
   228ac:	add	r5, sp, #136	; 0x88
   228b0:	mov	r1, r9
   228b4:	mov	r2, r7
   228b8:	mov	r0, r5
   228bc:	bl	18b8 <fread@plt>
   228c0:	mov	sl, r0
   228c4:	cmp	r7, #1
   228c8:	blt	24c58 <ReadUInt8Data+0x2970>
   228cc:	mov	lr, #0
   228d0:	cmp	r7, #4
   228d4:	bcc	24488 <ReadUInt8Data+0x21a0>
   228d8:	bic	lr, r7, #3
   228dc:	mov	r2, #1
   228e0:	str	r7, [sp, #108]	; 0x6c
   228e4:	subs	r1, lr, #4
   228e8:	add	r1, r2, r1, lsr #2
   228ec:	and	ip, r1, #1
   228f0:	beq	24454 <ReadUInt8Data+0x216c>
   228f4:	sub	r3, r1, ip
   228f8:	mov	r1, #0
   228fc:	mov	r7, #32
   22900:	mov	r4, r5
   22904:	mov	r0, r8
   22908:	vld1.32	{d16-d17}, [r4], r7
   2290c:	mov	r2, r0
   22910:	subs	r3, r3, #2
   22914:	vmovn.i32	d16, q8
   22918:	vuzp.8	d16, d17
   2291c:	vmov.32	r6, d16[0]
   22920:	str	r6, [r2, r1]!
   22924:	add	r6, r5, #16
   22928:	add	r1, r1, #8
   2292c:	mov	r5, r4
   22930:	vld1.32	{d16-d17}, [r6]
   22934:	add	r2, r2, #4
   22938:	vmovn.i32	d16, q8
   2293c:	vuzp.8	d16, d17
   22940:	vst1.32	{d16[0]}, [r2]
   22944:	bne	22908 <ReadUInt8Data+0x620>
   22948:	b	24458 <ReadUInt8Data+0x2170>
   2294c:	cmp	r7, #256	; 0x100
   22950:	bgt	23d28 <ReadUInt8Data+0x1a40>
   22954:	ldr	r3, [r6]
   22958:	mov	r8, r5
   2295c:	add	r5, sp, #136	; 0x88
   22960:	mov	r1, r9
   22964:	mov	r2, r7
   22968:	mov	r0, r5
   2296c:	bl	18b8 <fread@plt>
   22970:	mov	sl, r0
   22974:	cmp	r7, #1
   22978:	blt	24c58 <ReadUInt8Data+0x2970>
   2297c:	mov	lr, #0
   22980:	cmp	r7, #4
   22984:	bcc	244e0 <ReadUInt8Data+0x21f8>
   22988:	bic	lr, r7, #3
   2298c:	mov	r2, #1
   22990:	str	r7, [sp, #108]	; 0x6c
   22994:	subs	r1, lr, #4
   22998:	add	r1, r2, r1, lsr #2
   2299c:	and	ip, r1, #1
   229a0:	beq	244ac <ReadUInt8Data+0x21c4>
   229a4:	sub	r3, r1, ip
   229a8:	mov	r1, #0
   229ac:	mov	r7, #32
   229b0:	mov	r4, r5
   229b4:	mov	r0, r8
   229b8:	vld1.32	{d16-d17}, [r4], r7
   229bc:	mov	r2, r0
   229c0:	subs	r3, r3, #2
   229c4:	vmovn.i32	d16, q8
   229c8:	vuzp.8	d16, d17
   229cc:	vmov.32	r6, d16[0]
   229d0:	str	r6, [r2, r1]!
   229d4:	add	r6, r5, #16
   229d8:	add	r1, r1, #8
   229dc:	mov	r5, r4
   229e0:	vld1.32	{d16-d17}, [r6]
   229e4:	add	r2, r2, #4
   229e8:	vmovn.i32	d16, q8
   229ec:	vuzp.8	d16, d17
   229f0:	vst1.32	{d16[0]}, [r2]
   229f4:	bne	229b8 <ReadUInt8Data+0x6d0>
   229f8:	b	244b0 <ReadUInt8Data+0x21c8>
   229fc:	cmp	r7, #256	; 0x100
   22a00:	bgt	23ec0 <ReadUInt8Data+0x1bd8>
   22a04:	ldr	r3, [r6]
   22a08:	mov	r8, r5
   22a0c:	add	r5, sp, #136	; 0x88
   22a10:	mov	r1, r9
   22a14:	mov	r2, r7
   22a18:	mov	r0, r5
   22a1c:	bl	18b8 <fread@plt>
   22a20:	mov	sl, r0
   22a24:	cmp	r7, #1
   22a28:	blt	24c58 <ReadUInt8Data+0x2970>
   22a2c:	mov	lr, #0
   22a30:	cmp	r7, #4
   22a34:	bcc	2453c <ReadUInt8Data+0x2254>
   22a38:	bic	lr, r7, #3
   22a3c:	mov	r2, #1
   22a40:	str	r7, [sp, #108]	; 0x6c
   22a44:	subs	r1, lr, #4
   22a48:	add	r1, r2, r1, lsr #2
   22a4c:	and	ip, r1, #1
   22a50:	beq	24504 <ReadUInt8Data+0x221c>
   22a54:	sub	r3, r1, ip
   22a58:	mov	r1, #0
   22a5c:	mov	r7, #32
   22a60:	mov	r4, r5
   22a64:	mov	r0, r8
   22a68:	vld1.32	{d16-d17}, [r4], r7
   22a6c:	mov	r2, r0
   22a70:	subs	r3, r3, #2
   22a74:	vcvt.s32.f32	q8, q8
   22a78:	vmovn.i32	d16, q8
   22a7c:	vuzp.8	d16, d17
   22a80:	vmov.32	r6, d16[0]
   22a84:	str	r6, [r2, r1]!
   22a88:	add	r6, r5, #16
   22a8c:	add	r1, r1, #8
   22a90:	mov	r5, r4
   22a94:	vld1.32	{d16-d17}, [r6]
   22a98:	add	r2, r2, #4
   22a9c:	vcvt.s32.f32	q8, q8
   22aa0:	vmovn.i32	d16, q8
   22aa4:	vuzp.8	d16, d17
   22aa8:	vst1.32	{d16[0]}, [r2]
   22aac:	bne	22a68 <ReadUInt8Data+0x780>
   22ab0:	b	24508 <ReadUInt8Data+0x2220>
   22ab4:	cmp	r7, #256	; 0x100
   22ab8:	bgt	24070 <ReadUInt8Data+0x1d88>
   22abc:	ldr	r3, [r6]
   22ac0:	add	r4, sp, #136	; 0x88
   22ac4:	mov	r1, r9
   22ac8:	mov	r2, r7
   22acc:	mov	r0, r4
   22ad0:	bl	18b8 <fread@plt>
   22ad4:	mov	sl, r0
   22ad8:	cmp	r7, #1
   22adc:	blt	24c58 <ReadUInt8Data+0x2970>
   22ae0:	and	r1, r7, #1
   22ae4:	mov	r0, #0
   22ae8:	beq	22b2c <ReadUInt8Data+0x844>
   22aec:	sub	r2, r7, r1
   22af0:	add	r3, r4, #8
   22af4:	mov	r0, #0
   22af8:	vldr	d16, [r3, #-8]
   22afc:	mov	r6, r5
   22b00:	vcvt.u32.f64	s0, d16
   22b04:	vmov	r7, s0
   22b08:	strb	r7, [r6, r0]!
   22b0c:	add	r0, r0, #2
   22b10:	vldr	d16, [r3]
   22b14:	add	r3, r3, #16
   22b18:	cmp	r2, r0
   22b1c:	vcvt.u32.f64	s0, d16
   22b20:	vmov	r7, s0
   22b24:	strb	r7, [r6, #1]
   22b28:	bne	22af8 <ReadUInt8Data+0x810>
   22b2c:	cmp	r1, #0
   22b30:	beq	24c58 <ReadUInt8Data+0x2970>
   22b34:	add	r1, r4, r0, lsl #3
   22b38:	vldr	d16, [r1]
   22b3c:	vcvt.u32.f64	s0, d16
   22b40:	vmov	r1, s0
   22b44:	strb	r1, [r5, r0]
   22b48:	mul	r0, sl, r9
   22b4c:	sub	sp, fp, #28
   22b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b54:	cmp	r7, #256	; 0x100
   22b58:	bgt	241d8 <ReadUInt8Data+0x1ef0>
   22b5c:	ldr	r3, [r6]
   22b60:	add	r6, sp, #136	; 0x88
   22b64:	mov	r1, r9
   22b68:	mov	r2, r7
   22b6c:	mov	r0, r6
   22b70:	bl	18b8 <fread@plt>
   22b74:	mov	sl, r0
   22b78:	cmp	r7, #1
   22b7c:	blt	248ac <ReadUInt8Data+0x25c4>
   22b80:	mov	r8, #0
   22b84:	beq	245b0 <ReadUInt8Data+0x22c8>
   22b88:	bic	r8, r7, #1
   22b8c:	mov	r2, #1
   22b90:	mov	lr, r7
   22b94:	subs	r1, r8, #2
   22b98:	add	r1, r2, r1, lsr #1
   22b9c:	and	ip, r1, #1
   22ba0:	beq	2456c <ReadUInt8Data+0x2284>
   22ba4:	sub	r3, r1, ip
   22ba8:	mov	r1, #0
   22bac:	mov	r7, #32
   22bb0:	mov	r0, r5
   22bb4:	add	r5, r6, #16
   22bb8:	vld1.64	{d16-d17}, [r6], r7
   22bbc:	mov	r2, r0
   22bc0:	subs	r3, r3, #2
   22bc4:	vmovn.i64	d16, q8
   22bc8:	vmov.32	r4, d16[0]
   22bcc:	strb	r4, [r2, r1]!
   22bd0:	vmov.32	r4, d16[1]
   22bd4:	add	r1, r1, #4
   22bd8:	strb	r4, [r2, #1]
   22bdc:	vld1.64	{d16-d17}, [r5]
   22be0:	vmovn.i64	d16, q8
   22be4:	vmov.32	r5, d16[1]
   22be8:	strb	r5, [r2, #3]
   22bec:	vmov.32	r5, d16[0]
   22bf0:	strb	r5, [r2, #2]
   22bf4:	bne	22bb4 <ReadUInt8Data+0x8cc>
   22bf8:	b	24574 <ReadUInt8Data+0x228c>
   22bfc:	sub	r0, r7, #256	; 0x100
   22c00:	mov	r8, r5
   22c04:	add	r1, r5, #256	; 0x100
   22c08:	mov	sl, #0
   22c0c:	str	r9, [sp, #128]	; 0x80
   22c10:	str	r7, [sp, #108]	; 0x6c
   22c14:	str	r0, [sp, #124]	; 0x7c
   22c18:	mov	r0, #0
   22c1c:	mov	r5, r1
   22c20:	ldr	r3, [r6]
   22c24:	ldr	r1, [sp, #128]	; 0x80
   22c28:	add	r4, sp, #136	; 0x88
   22c2c:	mov	r9, r0
   22c30:	mov	r2, #256	; 0x100
   22c34:	mov	r0, r4
   22c38:	bl	18b8 <fread@plt>
   22c3c:	mov	r6, r0
   22c40:	mov	r7, #0
   22c44:	mov	r0, r4
   22c48:	bl	1c20 <Mat_int16Swap>
   22c4c:	strb	r0, [r8, r7]
   22c50:	add	r7, r7, #1
   22c54:	add	r4, r4, #2
   22c58:	cmp	r7, #256	; 0x100
   22c5c:	bne	22c44 <ReadUInt8Data+0x95c>
   22c60:	ldr	r2, [sp, #124]	; 0x7c
   22c64:	add	sl, r6, sl
   22c68:	ldr	r6, [sp, #132]	; 0x84
   22c6c:	add	r0, r9, #256	; 0x100
   22c70:	add	r8, r8, #256	; 0x100
   22c74:	add	r1, r5, #256	; 0x100
   22c78:	cmp	r0, r2
   22c7c:	blt	22c1c <ReadUInt8Data+0x934>
   22c80:	ldr	r7, [sp, #108]	; 0x6c
   22c84:	cmp	r0, r7
   22c88:	bge	24aa4 <ReadUInt8Data+0x27bc>
   22c8c:	mov	r1, r6
   22c90:	sub	r6, r7, r0
   22c94:	add	r4, sp, #136	; 0x88
   22c98:	ldr	r3, [r1]
   22c9c:	ldr	r1, [sp, #128]	; 0x80
   22ca0:	mov	r0, r4
   22ca4:	mov	r2, r6
   22ca8:	mov	r8, r1
   22cac:	bl	18b8 <fread@plt>
   22cb0:	add	sl, r0, sl
   22cb4:	cmp	r6, #1
   22cb8:	blt	24a94 <ReadUInt8Data+0x27ac>
   22cbc:	sub	r0, r7, r9
   22cc0:	sub	r6, r0, #256	; 0x100
   22cc4:	mov	r0, r4
   22cc8:	bl	1c20 <Mat_int16Swap>
   22ccc:	strb	r0, [r5], #1
   22cd0:	add	r4, r4, #2
   22cd4:	subs	r6, r6, #1
   22cd8:	bne	22cc4 <ReadUInt8Data+0x9dc>
   22cdc:	mov	r9, r8
   22ce0:	mul	r0, sl, r9
   22ce4:	sub	sp, fp, #28
   22ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22cec:	sub	r0, r7, #256	; 0x100
   22cf0:	mov	r8, r5
   22cf4:	add	r1, r5, #256	; 0x100
   22cf8:	mov	sl, #0
   22cfc:	str	r9, [sp, #128]	; 0x80
   22d00:	str	r7, [sp, #108]	; 0x6c
   22d04:	str	r0, [sp, #124]	; 0x7c
   22d08:	mov	r0, #0
   22d0c:	mov	r5, r1
   22d10:	ldr	r3, [r6]
   22d14:	ldr	r1, [sp, #128]	; 0x80
   22d18:	add	r4, sp, #136	; 0x88
   22d1c:	mov	r9, r0
   22d20:	mov	r2, #256	; 0x100
   22d24:	mov	r0, r4
   22d28:	bl	18b8 <fread@plt>
   22d2c:	mov	r6, r0
   22d30:	mov	r7, #0
   22d34:	mov	r0, r4
   22d38:	bl	1c34 <Mat_uint16Swap>
   22d3c:	strb	r0, [r8, r7]
   22d40:	add	r7, r7, #1
   22d44:	add	r4, r4, #2
   22d48:	cmp	r7, #256	; 0x100
   22d4c:	bne	22d34 <ReadUInt8Data+0xa4c>
   22d50:	ldr	r2, [sp, #124]	; 0x7c
   22d54:	add	sl, r6, sl
   22d58:	ldr	r6, [sp, #132]	; 0x84
   22d5c:	add	r0, r9, #256	; 0x100
   22d60:	add	r8, r8, #256	; 0x100
   22d64:	add	r1, r5, #256	; 0x100
   22d68:	cmp	r0, r2
   22d6c:	blt	22d0c <ReadUInt8Data+0xa24>
   22d70:	ldr	r7, [sp, #108]	; 0x6c
   22d74:	cmp	r0, r7
   22d78:	bge	24aa4 <ReadUInt8Data+0x27bc>
   22d7c:	mov	r1, r6
   22d80:	sub	r6, r7, r0
   22d84:	add	r4, sp, #136	; 0x88
   22d88:	ldr	r3, [r1]
   22d8c:	ldr	r1, [sp, #128]	; 0x80
   22d90:	mov	r0, r4
   22d94:	mov	r2, r6
   22d98:	mov	r8, r1
   22d9c:	bl	18b8 <fread@plt>
   22da0:	add	sl, r0, sl
   22da4:	cmp	r6, #1
   22da8:	blt	24a94 <ReadUInt8Data+0x27ac>
   22dac:	sub	r0, r7, r9
   22db0:	sub	r6, r0, #256	; 0x100
   22db4:	mov	r0, r4
   22db8:	bl	1c34 <Mat_uint16Swap>
   22dbc:	strb	r0, [r5], #1
   22dc0:	add	r4, r4, #2
   22dc4:	subs	r6, r6, #1
   22dc8:	bne	22db4 <ReadUInt8Data+0xacc>
   22dcc:	mov	r9, r8
   22dd0:	mul	r0, sl, r9
   22dd4:	sub	sp, fp, #28
   22dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ddc:	sub	r0, r7, #256	; 0x100
   22de0:	mov	r8, r5
   22de4:	add	r1, r5, #256	; 0x100
   22de8:	mov	sl, #0
   22dec:	str	r9, [sp, #128]	; 0x80
   22df0:	str	r7, [sp, #108]	; 0x6c
   22df4:	str	r0, [sp, #124]	; 0x7c
   22df8:	mov	r0, #0
   22dfc:	mov	r5, r1
   22e00:	ldr	r3, [r6]
   22e04:	ldr	r1, [sp, #128]	; 0x80
   22e08:	add	r4, sp, #136	; 0x88
   22e0c:	mov	r9, r0
   22e10:	mov	r2, #256	; 0x100
   22e14:	mov	r0, r4
   22e18:	bl	18b8 <fread@plt>
   22e1c:	mov	r6, r0
   22e20:	mov	r7, #0
   22e24:	mov	r0, r4
   22e28:	bl	1bf8 <Mat_int32Swap>
   22e2c:	strb	r0, [r8, r7]
   22e30:	add	r7, r7, #1
   22e34:	add	r4, r4, #4
   22e38:	cmp	r7, #256	; 0x100
   22e3c:	bne	22e24 <ReadUInt8Data+0xb3c>
   22e40:	ldr	r2, [sp, #124]	; 0x7c
   22e44:	add	sl, r6, sl
   22e48:	ldr	r6, [sp, #132]	; 0x84
   22e4c:	add	r0, r9, #256	; 0x100
   22e50:	add	r8, r8, #256	; 0x100
   22e54:	add	r1, r5, #256	; 0x100
   22e58:	cmp	r0, r2
   22e5c:	blt	22dfc <ReadUInt8Data+0xb14>
   22e60:	ldr	r7, [sp, #108]	; 0x6c
   22e64:	cmp	r0, r7
   22e68:	bge	24aa4 <ReadUInt8Data+0x27bc>
   22e6c:	mov	r1, r6
   22e70:	sub	r6, r7, r0
   22e74:	add	r4, sp, #136	; 0x88
   22e78:	ldr	r3, [r1]
   22e7c:	ldr	r1, [sp, #128]	; 0x80
   22e80:	mov	r0, r4
   22e84:	mov	r2, r6
   22e88:	mov	r8, r1
   22e8c:	bl	18b8 <fread@plt>
   22e90:	add	sl, r0, sl
   22e94:	cmp	r6, #1
   22e98:	blt	24a94 <ReadUInt8Data+0x27ac>
   22e9c:	sub	r0, r7, r9
   22ea0:	sub	r6, r0, #256	; 0x100
   22ea4:	mov	r0, r4
   22ea8:	bl	1bf8 <Mat_int32Swap>
   22eac:	strb	r0, [r5], #1
   22eb0:	add	r4, r4, #4
   22eb4:	subs	r6, r6, #1
   22eb8:	bne	22ea4 <ReadUInt8Data+0xbbc>
   22ebc:	mov	r9, r8
   22ec0:	mul	r0, sl, r9
   22ec4:	sub	sp, fp, #28
   22ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ecc:	sub	r0, r7, #256	; 0x100
   22ed0:	mov	r8, r5
   22ed4:	add	r1, r5, #256	; 0x100
   22ed8:	mov	sl, #0
   22edc:	str	r9, [sp, #128]	; 0x80
   22ee0:	str	r7, [sp, #108]	; 0x6c
   22ee4:	str	r0, [sp, #124]	; 0x7c
   22ee8:	mov	r0, #0
   22eec:	mov	r5, r1
   22ef0:	ldr	r3, [r6]
   22ef4:	ldr	r1, [sp, #128]	; 0x80
   22ef8:	add	r4, sp, #136	; 0x88
   22efc:	mov	r9, r0
   22f00:	mov	r2, #256	; 0x100
   22f04:	mov	r0, r4
   22f08:	bl	18b8 <fread@plt>
   22f0c:	mov	r6, r0
   22f10:	mov	r7, #0
   22f14:	mov	r0, r4
   22f18:	bl	1c0c <Mat_uint32Swap>
   22f1c:	strb	r0, [r8, r7]
   22f20:	add	r7, r7, #1
   22f24:	add	r4, r4, #4
   22f28:	cmp	r7, #256	; 0x100
   22f2c:	bne	22f14 <ReadUInt8Data+0xc2c>
   22f30:	ldr	r2, [sp, #124]	; 0x7c
   22f34:	add	sl, r6, sl
   22f38:	ldr	r6, [sp, #132]	; 0x84
   22f3c:	add	r0, r9, #256	; 0x100
   22f40:	add	r8, r8, #256	; 0x100
   22f44:	add	r1, r5, #256	; 0x100
   22f48:	cmp	r0, r2
   22f4c:	blt	22eec <ReadUInt8Data+0xc04>
   22f50:	ldr	r7, [sp, #108]	; 0x6c
   22f54:	cmp	r0, r7
   22f58:	bge	24aa4 <ReadUInt8Data+0x27bc>
   22f5c:	mov	r1, r6
   22f60:	sub	r6, r7, r0
   22f64:	add	r4, sp, #136	; 0x88
   22f68:	ldr	r3, [r1]
   22f6c:	ldr	r1, [sp, #128]	; 0x80
   22f70:	mov	r0, r4
   22f74:	mov	r2, r6
   22f78:	mov	r8, r1
   22f7c:	bl	18b8 <fread@plt>
   22f80:	add	sl, r0, sl
   22f84:	cmp	r6, #1
   22f88:	blt	24a94 <ReadUInt8Data+0x27ac>
   22f8c:	sub	r0, r7, r9
   22f90:	sub	r6, r0, #256	; 0x100
   22f94:	mov	r0, r4
   22f98:	bl	1c0c <Mat_uint32Swap>
   22f9c:	strb	r0, [r5], #1
   22fa0:	add	r4, r4, #4
   22fa4:	subs	r6, r6, #1
   22fa8:	bne	22f94 <ReadUInt8Data+0xcac>
   22fac:	mov	r9, r8
   22fb0:	mul	r0, sl, r9
   22fb4:	sub	sp, fp, #28
   22fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22fbc:	sub	r0, r7, #256	; 0x100
   22fc0:	str	r9, [sp, #128]	; 0x80
   22fc4:	mov	r9, r5
   22fc8:	add	r1, r5, #256	; 0x100
   22fcc:	mov	sl, #0
   22fd0:	str	r7, [sp, #108]	; 0x6c
   22fd4:	str	r0, [sp, #124]	; 0x7c
   22fd8:	mov	r0, #0
   22fdc:	mov	r5, r1
   22fe0:	ldr	r3, [r6]
   22fe4:	ldr	r1, [sp, #128]	; 0x80
   22fe8:	add	r4, sp, #136	; 0x88
   22fec:	mov	r8, r0
   22ff0:	mov	r2, #256	; 0x100
   22ff4:	mov	r0, r4
   22ff8:	bl	18b8 <fread@plt>
   22ffc:	mov	r6, r0
   23000:	mov	r7, #0
   23004:	mov	r0, r4
   23008:	bl	1c4c <Mat_floatSwap>
   2300c:	vcvt.u32.f32	s0, s0
   23010:	add	r4, r4, #4
   23014:	vmov	r0, s0
   23018:	strb	r0, [r9, r7]
   2301c:	add	r7, r7, #1
   23020:	cmp	r7, #256	; 0x100
   23024:	bne	23004 <ReadUInt8Data+0xd1c>
   23028:	ldr	r2, [sp, #124]	; 0x7c
   2302c:	add	sl, r6, sl
   23030:	ldr	r6, [sp, #132]	; 0x84
   23034:	add	r0, r8, #256	; 0x100
   23038:	add	r9, r9, #256	; 0x100
   2303c:	add	r1, r5, #256	; 0x100
   23040:	cmp	r0, r2
   23044:	blt	22fdc <ReadUInt8Data+0xcf4>
   23048:	ldr	r7, [sp, #108]	; 0x6c
   2304c:	cmp	r0, r7
   23050:	bge	24aa4 <ReadUInt8Data+0x27bc>
   23054:	mov	r1, r6
   23058:	ldr	r9, [sp, #128]	; 0x80
   2305c:	sub	r6, r7, r0
   23060:	add	r4, sp, #136	; 0x88
   23064:	ldr	r3, [r1]
   23068:	mov	r0, r4
   2306c:	mov	r2, r6
   23070:	mov	r1, r9
   23074:	bl	18b8 <fread@plt>
   23078:	add	sl, r0, sl
   2307c:	cmp	r6, #1
   23080:	blt	24c58 <ReadUInt8Data+0x2970>
   23084:	sub	r0, r7, r8
   23088:	sub	r6, r0, #256	; 0x100
   2308c:	mov	r0, r4
   23090:	bl	1c4c <Mat_floatSwap>
   23094:	vcvt.u32.f32	s0, s0
   23098:	add	r4, r4, #4
   2309c:	subs	r6, r6, #1
   230a0:	vmov	r0, s0
   230a4:	strb	r0, [r5], #1
   230a8:	bne	2308c <ReadUInt8Data+0xda4>
   230ac:	b	24c58 <ReadUInt8Data+0x2970>
   230b0:	sub	r0, r7, #256	; 0x100
   230b4:	str	r9, [sp, #128]	; 0x80
   230b8:	mov	r9, r5
   230bc:	add	r1, r5, #256	; 0x100
   230c0:	mov	sl, #0
   230c4:	str	r7, [sp, #108]	; 0x6c
   230c8:	str	r0, [sp, #124]	; 0x7c
   230cc:	mov	r0, #0
   230d0:	mov	r5, r1
   230d4:	ldr	r3, [r6]
   230d8:	ldr	r1, [sp, #128]	; 0x80
   230dc:	add	r4, sp, #136	; 0x88
   230e0:	mov	r8, r0
   230e4:	mov	r2, #256	; 0x100
   230e8:	mov	r0, r4
   230ec:	bl	18b8 <fread@plt>
   230f0:	mov	r6, r0
   230f4:	mov	r7, #0
   230f8:	mov	r0, r4
   230fc:	bl	1c90 <Mat_doubleSwap>
   23100:	vcvt.u32.f64	s0, d0
   23104:	add	r4, r4, #8
   23108:	vmov	r0, s0
   2310c:	strb	r0, [r9, r7]
   23110:	add	r7, r7, #1
   23114:	cmp	r7, #256	; 0x100
   23118:	bne	230f8 <ReadUInt8Data+0xe10>
   2311c:	ldr	r2, [sp, #124]	; 0x7c
   23120:	add	sl, r6, sl
   23124:	ldr	r6, [sp, #132]	; 0x84
   23128:	add	r0, r8, #256	; 0x100
   2312c:	add	r9, r9, #256	; 0x100
   23130:	add	r1, r5, #256	; 0x100
   23134:	cmp	r0, r2
   23138:	blt	230d0 <ReadUInt8Data+0xde8>
   2313c:	ldr	r7, [sp, #108]	; 0x6c
   23140:	cmp	r0, r7
   23144:	bge	24aa4 <ReadUInt8Data+0x27bc>
   23148:	mov	r1, r6
   2314c:	ldr	r9, [sp, #128]	; 0x80
   23150:	sub	r6, r7, r0
   23154:	add	r4, sp, #136	; 0x88
   23158:	ldr	r3, [r1]
   2315c:	mov	r0, r4
   23160:	mov	r2, r6
   23164:	mov	r1, r9
   23168:	bl	18b8 <fread@plt>
   2316c:	add	sl, r0, sl
   23170:	cmp	r6, #1
   23174:	blt	24c58 <ReadUInt8Data+0x2970>
   23178:	sub	r0, r7, r8
   2317c:	sub	r6, r0, #256	; 0x100
   23180:	mov	r0, r4
   23184:	bl	1c90 <Mat_doubleSwap>
   23188:	vcvt.u32.f64	s0, d0
   2318c:	add	r4, r4, #8
   23190:	subs	r6, r6, #1
   23194:	vmov	r0, s0
   23198:	strb	r0, [r5], #1
   2319c:	bne	23180 <ReadUInt8Data+0xe98>
   231a0:	b	24c58 <ReadUInt8Data+0x2970>
   231a4:	sub	r0, r7, #256	; 0x100
   231a8:	str	r7, [sp, #108]	; 0x6c
   231ac:	add	r1, r5, #256	; 0x100
   231b0:	mov	r7, r5
   231b4:	mov	sl, #0
   231b8:	str	r5, [sp, #120]	; 0x78
   231bc:	str	r0, [sp, #112]	; 0x70
   231c0:	mov	r0, #0
   231c4:	ldr	r3, [r6]
   231c8:	add	r4, sp, #136	; 0x88
   231cc:	str	r0, [sp, #124]	; 0x7c
   231d0:	mov	r5, r1
   231d4:	mov	r1, r9
   231d8:	mov	r2, #256	; 0x100
   231dc:	mov	r6, r9
   231e0:	mov	r0, r4
   231e4:	bl	18b8 <fread@plt>
   231e8:	mov	r8, r0
   231ec:	mov	r9, #0
   231f0:	mov	r0, r4
   231f4:	bl	1b84 <Mat_int64Swap>
   231f8:	strb	r0, [r7, r9]
   231fc:	add	r9, r9, #1
   23200:	add	r4, r4, #8
   23204:	cmp	r9, #256	; 0x100
   23208:	bne	231f0 <ReadUInt8Data+0xf08>
   2320c:	ldr	r4, [sp, #124]	; 0x7c
   23210:	ldr	r2, [sp, #112]	; 0x70
   23214:	mov	r9, r6
   23218:	ldr	r6, [sp, #132]	; 0x84
   2321c:	add	sl, r8, sl
   23220:	add	r7, r7, #256	; 0x100
   23224:	add	r1, r5, #256	; 0x100
   23228:	add	r0, r4, #256	; 0x100
   2322c:	cmp	r0, r2
   23230:	blt	231c4 <ReadUInt8Data+0xedc>
   23234:	ldr	r7, [sp, #108]	; 0x6c
   23238:	cmp	r0, r7
   2323c:	bge	24378 <ReadUInt8Data+0x2090>
   23240:	ldr	r3, [r6]
   23244:	sub	r8, r7, r0
   23248:	add	r6, sp, #136	; 0x88
   2324c:	mov	r1, r9
   23250:	mov	r0, r6
   23254:	mov	r2, r8
   23258:	bl	18b8 <fread@plt>
   2325c:	add	sl, r0, sl
   23260:	cmp	r8, #1
   23264:	blt	23288 <ReadUInt8Data+0xfa0>
   23268:	sub	r0, r7, r4
   2326c:	sub	r4, r0, #256	; 0x100
   23270:	mov	r0, r6
   23274:	bl	1b84 <Mat_int64Swap>
   23278:	strb	r0, [r5], #1
   2327c:	add	r6, r6, #8
   23280:	subs	r4, r4, #1
   23284:	bne	23270 <ReadUInt8Data+0xf88>
   23288:	ldr	r5, [sp, #120]	; 0x78
   2328c:	b	248ac <ReadUInt8Data+0x25c4>
   23290:	add	r0, r8, #224	; 0xe0
   23294:	str	r5, [sp, #120]	; 0x78
   23298:	mov	r6, #0
   2329c:	mov	r5, #0
   232a0:	mov	sl, r9
   232a4:	str	r0, [sp, #124]	; 0x7c
   232a8:	add	r0, r8, #208	; 0xd0
   232ac:	str	r0, [sp, #116]	; 0x74
   232b0:	add	r0, r8, #192	; 0xc0
   232b4:	str	r0, [sp, #112]	; 0x70
   232b8:	add	r0, r8, #176	; 0xb0
   232bc:	str	r0, [sp, #108]	; 0x6c
   232c0:	add	r0, r8, #160	; 0xa0
   232c4:	str	r0, [sp, #104]	; 0x68
   232c8:	add	r0, r8, #144	; 0x90
   232cc:	str	r0, [sp, #100]	; 0x64
   232d0:	add	r0, r8, #128	; 0x80
   232d4:	str	r0, [sp, #96]	; 0x60
   232d8:	add	r0, r8, #112	; 0x70
   232dc:	str	r0, [sp, #92]	; 0x5c
   232e0:	add	r0, r8, #96	; 0x60
   232e4:	str	r0, [sp, #88]	; 0x58
   232e8:	add	r0, r8, #80	; 0x50
   232ec:	str	r0, [sp, #84]	; 0x54
   232f0:	add	r0, r8, #64	; 0x40
   232f4:	str	r0, [sp, #80]	; 0x50
   232f8:	add	r0, r8, #48	; 0x30
   232fc:	str	r0, [sp, #76]	; 0x4c
   23300:	add	r0, r8, #32
   23304:	str	r0, [sp, #72]	; 0x48
   23308:	add	r0, r8, #16
   2330c:	str	r0, [sp, #68]	; 0x44
   23310:	add	r0, r4, #240	; 0xf0
   23314:	str	r0, [sp, #64]	; 0x40
   23318:	add	r0, r4, #224	; 0xe0
   2331c:	str	r0, [sp, #60]	; 0x3c
   23320:	add	r0, r4, #208	; 0xd0
   23324:	str	r0, [sp, #56]	; 0x38
   23328:	add	r0, r4, #192	; 0xc0
   2332c:	str	r0, [sp, #52]	; 0x34
   23330:	add	r0, r4, #176	; 0xb0
   23334:	str	r0, [sp, #48]	; 0x30
   23338:	add	r0, r4, #160	; 0xa0
   2333c:	str	r0, [sp, #44]	; 0x2c
   23340:	add	r0, r4, #144	; 0x90
   23344:	str	r0, [sp, #40]	; 0x28
   23348:	add	r0, r4, #128	; 0x80
   2334c:	str	r0, [sp, #36]	; 0x24
   23350:	add	r0, r4, #112	; 0x70
   23354:	str	r0, [sp, #32]
   23358:	add	r0, r4, #96	; 0x60
   2335c:	str	r0, [sp, #28]
   23360:	add	r0, r4, #80	; 0x50
   23364:	str	r0, [sp, #24]
   23368:	add	r0, r4, #64	; 0x40
   2336c:	str	r0, [sp, #20]
   23370:	add	r0, r4, #48	; 0x30
   23374:	str	r0, [sp, #16]
   23378:	add	r0, r4, #32
   2337c:	str	r0, [sp, #12]
   23380:	add	r0, r4, #16
   23384:	str	r0, [sp, #8]
   23388:	sub	r0, r7, #256	; 0x100
   2338c:	str	r0, [sp, #4]
   23390:	ldr	r0, [sp, #132]	; 0x84
   23394:	add	r9, sp, #136	; 0x88
   23398:	mov	r1, sl
   2339c:	mov	r2, #256	; 0x100
   233a0:	ldr	r3, [r0]
   233a4:	mov	r0, r9
   233a8:	bl	18b8 <fread@plt>
   233ac:	vld1.16	{d16-d17}, [r9]
   233b0:	ldr	r1, [sp, #120]	; 0x78
   233b4:	mov	r3, #248	; 0xf8
   233b8:	add	r5, r0, r5
   233bc:	ldr	r0, [sp, #4]
   233c0:	add	r2, r1, r6
   233c4:	add	r6, r6, #256	; 0x100
   233c8:	vmovn.i16	d16, q8
   233cc:	mov	r1, r2
   233d0:	cmp	r6, r0
   233d4:	vst1.8	{d16}, [r1], r3
   233d8:	add	r3, r2, #8
   233dc:	vld1.16	{d16-d17}, [r4]
   233e0:	vmovn.i16	d16, q8
   233e4:	vst1.8	{d16}, [r3]
   233e8:	ldr	r3, [sp, #8]
   233ec:	vld1.16	{d16-d17}, [r3]
   233f0:	add	r3, r2, #16
   233f4:	vmovn.i16	d16, q8
   233f8:	vst1.8	{d16}, [r3]
   233fc:	ldr	r3, [sp, #12]
   23400:	vld1.16	{d16-d17}, [r3]
   23404:	add	r3, r2, #24
   23408:	vmovn.i16	d16, q8
   2340c:	vst1.8	{d16}, [r3]
   23410:	ldr	r3, [sp, #16]
   23414:	vld1.16	{d16-d17}, [r3]
   23418:	add	r3, r2, #32
   2341c:	vmovn.i16	d16, q8
   23420:	vst1.8	{d16}, [r3]
   23424:	ldr	r3, [sp, #20]
   23428:	vld1.16	{d16-d17}, [r3]
   2342c:	add	r3, r2, #40	; 0x28
   23430:	vmovn.i16	d16, q8
   23434:	vst1.8	{d16}, [r3]
   23438:	ldr	r3, [sp, #24]
   2343c:	vld1.16	{d16-d17}, [r3]
   23440:	add	r3, r2, #48	; 0x30
   23444:	vmovn.i16	d16, q8
   23448:	vst1.8	{d16}, [r3]
   2344c:	ldr	r3, [sp, #28]
   23450:	vld1.16	{d16-d17}, [r3]
   23454:	add	r3, r2, #56	; 0x38
   23458:	vmovn.i16	d16, q8
   2345c:	vst1.8	{d16}, [r3]
   23460:	ldr	r3, [sp, #32]
   23464:	vld1.16	{d16-d17}, [r3]
   23468:	add	r3, r2, #64	; 0x40
   2346c:	vmovn.i16	d16, q8
   23470:	vst1.8	{d16}, [r3]
   23474:	ldr	r3, [sp, #36]	; 0x24
   23478:	vld1.16	{d16-d17}, [r3]
   2347c:	add	r3, r2, #72	; 0x48
   23480:	vmovn.i16	d16, q8
   23484:	vst1.8	{d16}, [r3]
   23488:	ldr	r3, [sp, #40]	; 0x28
   2348c:	vld1.16	{d16-d17}, [r3]
   23490:	add	r3, r2, #80	; 0x50
   23494:	vmovn.i16	d16, q8
   23498:	vst1.8	{d16}, [r3]
   2349c:	ldr	r3, [sp, #44]	; 0x2c
   234a0:	vld1.16	{d16-d17}, [r3]
   234a4:	add	r3, r2, #88	; 0x58
   234a8:	vmovn.i16	d16, q8
   234ac:	vst1.8	{d16}, [r3]
   234b0:	ldr	r3, [sp, #48]	; 0x30
   234b4:	vld1.16	{d16-d17}, [r3]
   234b8:	add	r3, r2, #96	; 0x60
   234bc:	vmovn.i16	d16, q8
   234c0:	vst1.8	{d16}, [r3]
   234c4:	ldr	r3, [sp, #52]	; 0x34
   234c8:	vld1.16	{d16-d17}, [r3]
   234cc:	add	r3, r2, #104	; 0x68
   234d0:	vmovn.i16	d16, q8
   234d4:	vst1.8	{d16}, [r3]
   234d8:	ldr	r3, [sp, #56]	; 0x38
   234dc:	vld1.16	{d16-d17}, [r3]
   234e0:	add	r3, r2, #112	; 0x70
   234e4:	vmovn.i16	d16, q8
   234e8:	vst1.8	{d16}, [r3]
   234ec:	ldr	r3, [sp, #60]	; 0x3c
   234f0:	vld1.16	{d16-d17}, [r3]
   234f4:	add	r3, r2, #120	; 0x78
   234f8:	vmovn.i16	d16, q8
   234fc:	vst1.8	{d16}, [r3]
   23500:	ldr	r3, [sp, #64]	; 0x40
   23504:	vld1.16	{d16-d17}, [r3]
   23508:	add	r3, r2, #128	; 0x80
   2350c:	vmovn.i16	d16, q8
   23510:	vst1.8	{d16}, [r3]
   23514:	add	r3, r2, #136	; 0x88
   23518:	vld1.16	{d16-d17}, [r8]
   2351c:	vmovn.i16	d16, q8
   23520:	vst1.8	{d16}, [r3]
   23524:	ldr	r3, [sp, #68]	; 0x44
   23528:	vld1.16	{d16-d17}, [r3]
   2352c:	add	r3, r2, #144	; 0x90
   23530:	vmovn.i16	d16, q8
   23534:	vst1.8	{d16}, [r3]
   23538:	ldr	r3, [sp, #72]	; 0x48
   2353c:	vld1.16	{d16-d17}, [r3]
   23540:	add	r3, r2, #152	; 0x98
   23544:	vmovn.i16	d16, q8
   23548:	vst1.8	{d16}, [r3]
   2354c:	ldr	r3, [sp, #76]	; 0x4c
   23550:	vld1.16	{d16-d17}, [r3]
   23554:	add	r3, r2, #160	; 0xa0
   23558:	vmovn.i16	d16, q8
   2355c:	vst1.8	{d16}, [r3]
   23560:	ldr	r3, [sp, #80]	; 0x50
   23564:	vld1.16	{d16-d17}, [r3]
   23568:	add	r3, r2, #168	; 0xa8
   2356c:	vmovn.i16	d16, q8
   23570:	vst1.8	{d16}, [r3]
   23574:	ldr	r3, [sp, #84]	; 0x54
   23578:	vld1.16	{d16-d17}, [r3]
   2357c:	add	r3, r2, #176	; 0xb0
   23580:	vmovn.i16	d16, q8
   23584:	vst1.8	{d16}, [r3]
   23588:	ldr	r3, [sp, #88]	; 0x58
   2358c:	vld1.16	{d16-d17}, [r3]
   23590:	add	r3, r2, #184	; 0xb8
   23594:	vmovn.i16	d16, q8
   23598:	vst1.8	{d16}, [r3]
   2359c:	ldr	r3, [sp, #92]	; 0x5c
   235a0:	vld1.16	{d16-d17}, [r3]
   235a4:	add	r3, r2, #192	; 0xc0
   235a8:	vmovn.i16	d16, q8
   235ac:	vst1.8	{d16}, [r3]
   235b0:	ldr	r3, [sp, #96]	; 0x60
   235b4:	vld1.16	{d16-d17}, [r3]
   235b8:	add	r3, r2, #200	; 0xc8
   235bc:	vmovn.i16	d16, q8
   235c0:	vst1.8	{d16}, [r3]
   235c4:	ldr	r3, [sp, #100]	; 0x64
   235c8:	vld1.16	{d16-d17}, [r3]
   235cc:	add	r3, r2, #208	; 0xd0
   235d0:	vmovn.i16	d16, q8
   235d4:	vst1.8	{d16}, [r3]
   235d8:	ldr	r3, [sp, #104]	; 0x68
   235dc:	vld1.16	{d16-d17}, [r3]
   235e0:	add	r3, r2, #216	; 0xd8
   235e4:	vmovn.i16	d16, q8
   235e8:	vst1.8	{d16}, [r3]
   235ec:	ldr	r3, [sp, #108]	; 0x6c
   235f0:	vld1.16	{d16-d17}, [r3]
   235f4:	add	r3, r2, #224	; 0xe0
   235f8:	vmovn.i16	d16, q8
   235fc:	vst1.8	{d16}, [r3]
   23600:	ldr	r3, [sp, #112]	; 0x70
   23604:	vld1.16	{d16-d17}, [r3]
   23608:	add	r3, r2, #232	; 0xe8
   2360c:	add	r2, r2, #240	; 0xf0
   23610:	vmovn.i16	d16, q8
   23614:	vst1.8	{d16}, [r3]
   23618:	ldr	r3, [sp, #116]	; 0x74
   2361c:	vld1.16	{d16-d17}, [r3]
   23620:	vmovn.i16	d16, q8
   23624:	vst1.8	{d16}, [r2]
   23628:	ldr	r2, [sp, #124]	; 0x7c
   2362c:	vld1.16	{d16-d17}, [r2]
   23630:	vmovn.i16	d16, q8
   23634:	vst1.8	{d16}, [r1]
   23638:	blt	23390 <ReadUInt8Data+0x10a8>
   2363c:	ldr	r8, [sp, #120]	; 0x78
   23640:	mov	r9, sl
   23644:	mov	sl, r5
   23648:	cmp	r6, r7
   2364c:	bge	24c58 <ReadUInt8Data+0x2970>
   23650:	ldr	r0, [sp, #132]	; 0x84
   23654:	sub	r5, r7, r6
   23658:	add	r4, sp, #136	; 0x88
   2365c:	mov	r1, r9
   23660:	mov	r2, r5
   23664:	ldr	r3, [r0]
   23668:	mov	r0, r4
   2366c:	bl	18b8 <fread@plt>
   23670:	add	sl, r0, sl
   23674:	cmp	r5, #1
   23678:	blt	24c58 <ReadUInt8Data+0x2970>
   2367c:	mov	lr, #0
   23680:	cmp	r5, #8
   23684:	mov	r3, r8
   23688:	bcc	2461c <ReadUInt8Data+0x2334>
   2368c:	bic	lr, r5, #7
   23690:	mov	r2, #1
   23694:	str	r9, [sp, #128]	; 0x80
   23698:	mov	r9, r3
   2369c:	subs	r1, lr, #8
   236a0:	add	r1, r2, r1, lsr #3
   236a4:	and	r0, r1, #1
   236a8:	str	r0, [sp, #132]	; 0x84
   236ac:	beq	245d4 <ReadUInt8Data+0x22ec>
   236b0:	bic	r3, r5, #7
   236b4:	mov	ip, r7
   236b8:	mov	r8, r5
   236bc:	mov	r5, #32
   236c0:	sub	r3, r3, #8
   236c4:	add	r2, r2, r3, lsr #3
   236c8:	mvn	r7, r3, lsr #3
   236cc:	and	r2, r2, #1
   236d0:	add	r3, r7, r2
   236d4:	add	r7, r9, r6
   236d8:	mov	r2, #0
   236dc:	add	r1, r4, #16
   236e0:	vld1.16	{d16-d17}, [r4], r5
   236e4:	add	r0, r7, r2
   236e8:	adds	r3, r3, #2
   236ec:	add	r2, r2, #16
   236f0:	vmovn.i16	d16, q8
   236f4:	vst1.8	{d16}, [r0]
   236f8:	add	r0, r0, #8
   236fc:	vld1.16	{d16-d17}, [r1]
   23700:	vmovn.i16	d16, q8
   23704:	vst1.8	{d16}, [r0]
   23708:	bne	236dc <ReadUInt8Data+0x13f4>
   2370c:	b	245e0 <ReadUInt8Data+0x22f8>
   23710:	add	r0, r8, #224	; 0xe0
   23714:	str	r5, [sp, #120]	; 0x78
   23718:	mov	r6, #0
   2371c:	mov	r5, #0
   23720:	mov	sl, r9
   23724:	str	r0, [sp, #124]	; 0x7c
   23728:	add	r0, r8, #208	; 0xd0
   2372c:	str	r0, [sp, #116]	; 0x74
   23730:	add	r0, r8, #192	; 0xc0
   23734:	str	r0, [sp, #112]	; 0x70
   23738:	add	r0, r8, #176	; 0xb0
   2373c:	str	r0, [sp, #108]	; 0x6c
   23740:	add	r0, r8, #160	; 0xa0
   23744:	str	r0, [sp, #104]	; 0x68
   23748:	add	r0, r8, #144	; 0x90
   2374c:	str	r0, [sp, #100]	; 0x64
   23750:	add	r0, r8, #128	; 0x80
   23754:	str	r0, [sp, #96]	; 0x60
   23758:	add	r0, r8, #112	; 0x70
   2375c:	str	r0, [sp, #92]	; 0x5c
   23760:	add	r0, r8, #96	; 0x60
   23764:	str	r0, [sp, #88]	; 0x58
   23768:	add	r0, r8, #80	; 0x50
   2376c:	str	r0, [sp, #84]	; 0x54
   23770:	add	r0, r8, #64	; 0x40
   23774:	str	r0, [sp, #80]	; 0x50
   23778:	add	r0, r8, #48	; 0x30
   2377c:	str	r0, [sp, #76]	; 0x4c
   23780:	add	r0, r8, #32
   23784:	str	r0, [sp, #72]	; 0x48
   23788:	add	r0, r8, #16
   2378c:	str	r0, [sp, #68]	; 0x44
   23790:	add	r0, r4, #240	; 0xf0
   23794:	str	r0, [sp, #64]	; 0x40
   23798:	add	r0, r4, #224	; 0xe0
   2379c:	str	r0, [sp, #60]	; 0x3c
   237a0:	add	r0, r4, #208	; 0xd0
   237a4:	str	r0, [sp, #56]	; 0x38
   237a8:	add	r0, r4, #192	; 0xc0
   237ac:	str	r0, [sp, #52]	; 0x34
   237b0:	add	r0, r4, #176	; 0xb0
   237b4:	str	r0, [sp, #48]	; 0x30
   237b8:	add	r0, r4, #160	; 0xa0
   237bc:	str	r0, [sp, #44]	; 0x2c
   237c0:	add	r0, r4, #144	; 0x90
   237c4:	str	r0, [sp, #40]	; 0x28
   237c8:	add	r0, r4, #128	; 0x80
   237cc:	str	r0, [sp, #36]	; 0x24
   237d0:	add	r0, r4, #112	; 0x70
   237d4:	str	r0, [sp, #32]
   237d8:	add	r0, r4, #96	; 0x60
   237dc:	str	r0, [sp, #28]
   237e0:	add	r0, r4, #80	; 0x50
   237e4:	str	r0, [sp, #24]
   237e8:	add	r0, r4, #64	; 0x40
   237ec:	str	r0, [sp, #20]
   237f0:	add	r0, r4, #48	; 0x30
   237f4:	str	r0, [sp, #16]
   237f8:	add	r0, r4, #32
   237fc:	str	r0, [sp, #12]
   23800:	add	r0, r4, #16
   23804:	str	r0, [sp, #8]
   23808:	sub	r0, r7, #256	; 0x100
   2380c:	str	r0, [sp, #4]
   23810:	ldr	r0, [sp, #132]	; 0x84
   23814:	add	r9, sp, #136	; 0x88
   23818:	mov	r1, sl
   2381c:	mov	r2, #256	; 0x100
   23820:	ldr	r3, [r0]
   23824:	mov	r0, r9
   23828:	bl	18b8 <fread@plt>
   2382c:	vld1.16	{d16-d17}, [r9]
   23830:	ldr	r1, [sp, #120]	; 0x78
   23834:	mov	r3, #248	; 0xf8
   23838:	add	r5, r0, r5
   2383c:	ldr	r0, [sp, #4]
   23840:	add	r2, r1, r6
   23844:	add	r6, r6, #256	; 0x100
   23848:	vmovn.i16	d16, q8
   2384c:	mov	r1, r2
   23850:	cmp	r6, r0
   23854:	vst1.8	{d16}, [r1], r3
   23858:	add	r3, r2, #8
   2385c:	vld1.16	{d16-d17}, [r4]
   23860:	vmovn.i16	d16, q8
   23864:	vst1.8	{d16}, [r3]
   23868:	ldr	r3, [sp, #8]
   2386c:	vld1.16	{d16-d17}, [r3]
   23870:	add	r3, r2, #16
   23874:	vmovn.i16	d16, q8
   23878:	vst1.8	{d16}, [r3]
   2387c:	ldr	r3, [sp, #12]
   23880:	vld1.16	{d16-d17}, [r3]
   23884:	add	r3, r2, #24
   23888:	vmovn.i16	d16, q8
   2388c:	vst1.8	{d16}, [r3]
   23890:	ldr	r3, [sp, #16]
   23894:	vld1.16	{d16-d17}, [r3]
   23898:	add	r3, r2, #32
   2389c:	vmovn.i16	d16, q8
   238a0:	vst1.8	{d16}, [r3]
   238a4:	ldr	r3, [sp, #20]
   238a8:	vld1.16	{d16-d17}, [r3]
   238ac:	add	r3, r2, #40	; 0x28
   238b0:	vmovn.i16	d16, q8
   238b4:	vst1.8	{d16}, [r3]
   238b8:	ldr	r3, [sp, #24]
   238bc:	vld1.16	{d16-d17}, [r3]
   238c0:	add	r3, r2, #48	; 0x30
   238c4:	vmovn.i16	d16, q8
   238c8:	vst1.8	{d16}, [r3]
   238cc:	ldr	r3, [sp, #28]
   238d0:	vld1.16	{d16-d17}, [r3]
   238d4:	add	r3, r2, #56	; 0x38
   238d8:	vmovn.i16	d16, q8
   238dc:	vst1.8	{d16}, [r3]
   238e0:	ldr	r3, [sp, #32]
   238e4:	vld1.16	{d16-d17}, [r3]
   238e8:	add	r3, r2, #64	; 0x40
   238ec:	vmovn.i16	d16, q8
   238f0:	vst1.8	{d16}, [r3]
   238f4:	ldr	r3, [sp, #36]	; 0x24
   238f8:	vld1.16	{d16-d17}, [r3]
   238fc:	add	r3, r2, #72	; 0x48
   23900:	vmovn.i16	d16, q8
   23904:	vst1.8	{d16}, [r3]
   23908:	ldr	r3, [sp, #40]	; 0x28
   2390c:	vld1.16	{d16-d17}, [r3]
   23910:	add	r3, r2, #80	; 0x50
   23914:	vmovn.i16	d16, q8
   23918:	vst1.8	{d16}, [r3]
   2391c:	ldr	r3, [sp, #44]	; 0x2c
   23920:	vld1.16	{d16-d17}, [r3]
   23924:	add	r3, r2, #88	; 0x58
   23928:	vmovn.i16	d16, q8
   2392c:	vst1.8	{d16}, [r3]
   23930:	ldr	r3, [sp, #48]	; 0x30
   23934:	vld1.16	{d16-d17}, [r3]
   23938:	add	r3, r2, #96	; 0x60
   2393c:	vmovn.i16	d16, q8
   23940:	vst1.8	{d16}, [r3]
   23944:	ldr	r3, [sp, #52]	; 0x34
   23948:	vld1.16	{d16-d17}, [r3]
   2394c:	add	r3, r2, #104	; 0x68
   23950:	vmovn.i16	d16, q8
   23954:	vst1.8	{d16}, [r3]
   23958:	ldr	r3, [sp, #56]	; 0x38
   2395c:	vld1.16	{d16-d17}, [r3]
   23960:	add	r3, r2, #112	; 0x70
   23964:	vmovn.i16	d16, q8
   23968:	vst1.8	{d16}, [r3]
   2396c:	ldr	r3, [sp, #60]	; 0x3c
   23970:	vld1.16	{d16-d17}, [r3]
   23974:	add	r3, r2, #120	; 0x78
   23978:	vmovn.i16	d16, q8
   2397c:	vst1.8	{d16}, [r3]
   23980:	ldr	r3, [sp, #64]	; 0x40
   23984:	vld1.16	{d16-d17}, [r3]
   23988:	add	r3, r2, #128	; 0x80
   2398c:	vmovn.i16	d16, q8
   23990:	vst1.8	{d16}, [r3]
   23994:	add	r3, r2, #136	; 0x88
   23998:	vld1.16	{d16-d17}, [r8]
   2399c:	vmovn.i16	d16, q8
   239a0:	vst1.8	{d16}, [r3]
   239a4:	ldr	r3, [sp, #68]	; 0x44
   239a8:	vld1.16	{d16-d17}, [r3]
   239ac:	add	r3, r2, #144	; 0x90
   239b0:	vmovn.i16	d16, q8
   239b4:	vst1.8	{d16}, [r3]
   239b8:	ldr	r3, [sp, #72]	; 0x48
   239bc:	vld1.16	{d16-d17}, [r3]
   239c0:	add	r3, r2, #152	; 0x98
   239c4:	vmovn.i16	d16, q8
   239c8:	vst1.8	{d16}, [r3]
   239cc:	ldr	r3, [sp, #76]	; 0x4c
   239d0:	vld1.16	{d16-d17}, [r3]
   239d4:	add	r3, r2, #160	; 0xa0
   239d8:	vmovn.i16	d16, q8
   239dc:	vst1.8	{d16}, [r3]
   239e0:	ldr	r3, [sp, #80]	; 0x50
   239e4:	vld1.16	{d16-d17}, [r3]
   239e8:	add	r3, r2, #168	; 0xa8
   239ec:	vmovn.i16	d16, q8
   239f0:	vst1.8	{d16}, [r3]
   239f4:	ldr	r3, [sp, #84]	; 0x54
   239f8:	vld1.16	{d16-d17}, [r3]
   239fc:	add	r3, r2, #176	; 0xb0
   23a00:	vmovn.i16	d16, q8
   23a04:	vst1.8	{d16}, [r3]
   23a08:	ldr	r3, [sp, #88]	; 0x58
   23a0c:	vld1.16	{d16-d17}, [r3]
   23a10:	add	r3, r2, #184	; 0xb8
   23a14:	vmovn.i16	d16, q8
   23a18:	vst1.8	{d16}, [r3]
   23a1c:	ldr	r3, [sp, #92]	; 0x5c
   23a20:	vld1.16	{d16-d17}, [r3]
   23a24:	add	r3, r2, #192	; 0xc0
   23a28:	vmovn.i16	d16, q8
   23a2c:	vst1.8	{d16}, [r3]
   23a30:	ldr	r3, [sp, #96]	; 0x60
   23a34:	vld1.16	{d16-d17}, [r3]
   23a38:	add	r3, r2, #200	; 0xc8
   23a3c:	vmovn.i16	d16, q8
   23a40:	vst1.8	{d16}, [r3]
   23a44:	ldr	r3, [sp, #100]	; 0x64
   23a48:	vld1.16	{d16-d17}, [r3]
   23a4c:	add	r3, r2, #208	; 0xd0
   23a50:	vmovn.i16	d16, q8
   23a54:	vst1.8	{d16}, [r3]
   23a58:	ldr	r3, [sp, #104]	; 0x68
   23a5c:	vld1.16	{d16-d17}, [r3]
   23a60:	add	r3, r2, #216	; 0xd8
   23a64:	vmovn.i16	d16, q8
   23a68:	vst1.8	{d16}, [r3]
   23a6c:	ldr	r3, [sp, #108]	; 0x6c
   23a70:	vld1.16	{d16-d17}, [r3]
   23a74:	add	r3, r2, #224	; 0xe0
   23a78:	vmovn.i16	d16, q8
   23a7c:	vst1.8	{d16}, [r3]
   23a80:	ldr	r3, [sp, #112]	; 0x70
   23a84:	vld1.16	{d16-d17}, [r3]
   23a88:	add	r3, r2, #232	; 0xe8
   23a8c:	add	r2, r2, #240	; 0xf0
   23a90:	vmovn.i16	d16, q8
   23a94:	vst1.8	{d16}, [r3]
   23a98:	ldr	r3, [sp, #116]	; 0x74
   23a9c:	vld1.16	{d16-d17}, [r3]
   23aa0:	vmovn.i16	d16, q8
   23aa4:	vst1.8	{d16}, [r2]
   23aa8:	ldr	r2, [sp, #124]	; 0x7c
   23aac:	vld1.16	{d16-d17}, [r2]
   23ab0:	vmovn.i16	d16, q8
   23ab4:	vst1.8	{d16}, [r1]
   23ab8:	blt	23810 <ReadUInt8Data+0x1528>
   23abc:	ldr	r8, [sp, #120]	; 0x78
   23ac0:	mov	r9, sl
   23ac4:	mov	sl, r5
   23ac8:	cmp	r6, r7
   23acc:	bge	24c58 <ReadUInt8Data+0x2970>
   23ad0:	ldr	r0, [sp, #132]	; 0x84
   23ad4:	sub	r5, r7, r6
   23ad8:	add	r4, sp, #136	; 0x88
   23adc:	mov	r1, r9
   23ae0:	mov	r2, r5
   23ae4:	ldr	r3, [r0]
   23ae8:	mov	r0, r4
   23aec:	bl	18b8 <fread@plt>
   23af0:	add	sl, r0, sl
   23af4:	cmp	r5, #1
   23af8:	blt	24c58 <ReadUInt8Data+0x2970>
   23afc:	mov	lr, #0
   23b00:	cmp	r5, #8
   23b04:	mov	r3, r8
   23b08:	bcc	24690 <ReadUInt8Data+0x23a8>
   23b0c:	bic	lr, r5, #7
   23b10:	mov	r2, #1
   23b14:	str	r9, [sp, #128]	; 0x80
   23b18:	mov	r9, r3
   23b1c:	subs	r1, lr, #8
   23b20:	add	r1, r2, r1, lsr #3
   23b24:	and	r0, r1, #1
   23b28:	str	r0, [sp, #132]	; 0x84
   23b2c:	beq	24648 <ReadUInt8Data+0x2360>
   23b30:	bic	r3, r5, #7
   23b34:	mov	ip, r7
   23b38:	mov	r8, r5
   23b3c:	mov	r5, #32
   23b40:	sub	r3, r3, #8
   23b44:	add	r2, r2, r3, lsr #3
   23b48:	mvn	r7, r3, lsr #3
   23b4c:	and	r2, r2, #1
   23b50:	add	r3, r7, r2
   23b54:	add	r7, r9, r6
   23b58:	mov	r2, #0
   23b5c:	add	r1, r4, #16
   23b60:	vld1.16	{d16-d17}, [r4], r5
   23b64:	add	r0, r7, r2
   23b68:	adds	r3, r3, #2
   23b6c:	add	r2, r2, #16
   23b70:	vmovn.i16	d16, q8
   23b74:	vst1.8	{d16}, [r0]
   23b78:	add	r0, r0, #8
   23b7c:	vld1.16	{d16-d17}, [r1]
   23b80:	vmovn.i16	d16, q8
   23b84:	vst1.8	{d16}, [r0]
   23b88:	bne	23b5c <ReadUInt8Data+0x1874>
   23b8c:	b	24654 <ReadUInt8Data+0x236c>
   23b90:	str	r9, [sp, #128]	; 0x80
   23b94:	sub	r1, r7, #256	; 0x100
   23b98:	str	r7, [sp, #108]	; 0x6c
   23b9c:	add	r0, r5, #256	; 0x100
   23ba0:	mov	sl, #0
   23ba4:	add	r6, sp, #136	; 0x88
   23ba8:	mov	r7, #32
   23bac:	mov	r9, r5
   23bb0:	mov	r8, #0
   23bb4:	str	r5, [sp, #120]	; 0x78
   23bb8:	str	r1, [sp, #116]	; 0x74
   23bbc:	str	r0, [sp, #124]	; 0x7c
   23bc0:	ldr	r0, [sp, #132]	; 0x84
   23bc4:	ldr	r1, [sp, #128]	; 0x80
   23bc8:	mov	r2, #256	; 0x100
   23bcc:	ldr	r3, [r0]
   23bd0:	mov	r0, r6
   23bd4:	bl	18b8 <fread@plt>
   23bd8:	mov	r3, r6
   23bdc:	mov	r1, #0
   23be0:	mov	r2, r6
   23be4:	vld1.32	{d16-d17}, [r2], r7
   23be8:	mov	r5, r9
   23bec:	add	r3, r3, #16
   23bf0:	vmovn.i32	d16, q8
   23bf4:	vuzp.8	d16, d17
   23bf8:	vmov.32	r4, d16[0]
   23bfc:	str	r4, [r5, r1]!
   23c00:	add	r1, r1, #8
   23c04:	vld1.32	{d16-d17}, [r3]
   23c08:	add	r3, r5, #4
   23c0c:	cmp	r1, #256	; 0x100
   23c10:	vmovn.i32	d16, q8
   23c14:	vuzp.8	d16, d17
   23c18:	vst1.32	{d16[0]}, [r3]
   23c1c:	mov	r3, r2
   23c20:	bne	23be4 <ReadUInt8Data+0x18fc>
   23c24:	add	r8, r0, r8
   23c28:	ldr	r0, [sp, #124]	; 0x7c
   23c2c:	ldr	r2, [sp, #116]	; 0x74
   23c30:	mov	r1, sl
   23c34:	add	sl, sl, #256	; 0x100
   23c38:	add	r9, r9, #256	; 0x100
   23c3c:	add	r0, r0, #256	; 0x100
   23c40:	cmp	sl, r2
   23c44:	blt	23bbc <ReadUInt8Data+0x18d4>
   23c48:	ldr	r4, [sp, #108]	; 0x6c
   23c4c:	str	r1, [sp, #116]	; 0x74
   23c50:	cmp	sl, r4
   23c54:	bge	24c50 <ReadUInt8Data+0x2968>
   23c58:	ldr	r0, [sp, #132]	; 0x84
   23c5c:	ldr	r9, [sp, #128]	; 0x80
   23c60:	sub	r6, r4, sl
   23c64:	add	r5, sp, #136	; 0x88
   23c68:	mov	r2, r6
   23c6c:	ldr	r3, [r0]
   23c70:	mov	r0, r5
   23c74:	mov	r1, r9
   23c78:	bl	18b8 <fread@plt>
   23c7c:	add	r8, r0, r8
   23c80:	cmp	r6, #1
   23c84:	blt	24c54 <ReadUInt8Data+0x296c>
   23c88:	mov	r0, #0
   23c8c:	cmp	r6, #4
   23c90:	bcc	246fc <ReadUInt8Data+0x2414>
   23c94:	bic	r0, r6, #3
   23c98:	mov	r1, #1
   23c9c:	str	r6, [sp, #132]	; 0x84
   23ca0:	subs	r2, r0, #4
   23ca4:	add	r2, r1, r2, lsr #2
   23ca8:	and	ip, r2, #1
   23cac:	beq	246bc <ReadUInt8Data+0x23d4>
   23cb0:	ldr	r2, [sp, #116]	; 0x74
   23cb4:	ldr	lr, [sp, #120]	; 0x78
   23cb8:	mov	r6, r5
   23cbc:	sub	r2, r4, r2
   23cc0:	add	r7, lr, sl
   23cc4:	sub	r2, r2, #256	; 0x100
   23cc8:	bic	r2, r2, #3
   23ccc:	sub	r2, r2, #4
   23cd0:	add	r1, r1, r2, lsr #2
   23cd4:	mvn	r3, r2, lsr #2
   23cd8:	mov	r2, #0
   23cdc:	and	r1, r1, #1
   23ce0:	add	r3, r3, r1
   23ce4:	mov	r1, #32
   23ce8:	vld1.32	{d16-d17}, [r6], r1
   23cec:	add	r4, r7, r2
   23cf0:	add	r5, r5, #16
   23cf4:	adds	r3, r3, #2
   23cf8:	add	r2, r2, #8
   23cfc:	vmovn.i32	d16, q8
   23d00:	vuzp.8	d16, d17
   23d04:	vst1.32	{d16[0]}, [r4]
   23d08:	vld1.32	{d16-d17}, [r5]
   23d0c:	add	r5, r4, #4
   23d10:	vmovn.i32	d16, q8
   23d14:	vuzp.8	d16, d17
   23d18:	vst1.32	{d16[0]}, [r5]
   23d1c:	mov	r5, r6
   23d20:	bne	23ce8 <ReadUInt8Data+0x1a00>
   23d24:	b	246c4 <ReadUInt8Data+0x23dc>
   23d28:	str	r9, [sp, #128]	; 0x80
   23d2c:	sub	r1, r7, #256	; 0x100
   23d30:	str	r7, [sp, #108]	; 0x6c
   23d34:	add	r0, r5, #256	; 0x100
   23d38:	mov	sl, #0
   23d3c:	add	r6, sp, #136	; 0x88
   23d40:	mov	r7, #32
   23d44:	mov	r9, r5
   23d48:	mov	r8, #0
   23d4c:	str	r5, [sp, #120]	; 0x78
   23d50:	str	r1, [sp, #116]	; 0x74
   23d54:	str	r0, [sp, #124]	; 0x7c
   23d58:	ldr	r0, [sp, #132]	; 0x84
   23d5c:	ldr	r1, [sp, #128]	; 0x80
   23d60:	mov	r2, #256	; 0x100
   23d64:	ldr	r3, [r0]
   23d68:	mov	r0, r6
   23d6c:	bl	18b8 <fread@plt>
   23d70:	mov	r3, r6
   23d74:	mov	r1, #0
   23d78:	mov	r2, r6
   23d7c:	vld1.32	{d16-d17}, [r2], r7
   23d80:	mov	r4, r9
   23d84:	add	r3, r3, #16
   23d88:	vmovn.i32	d16, q8
   23d8c:	vuzp.8	d16, d17
   23d90:	vmov.32	r5, d16[0]
   23d94:	str	r5, [r4, r1]!
   23d98:	add	r1, r1, #8
   23d9c:	vld1.32	{d16-d17}, [r3]
   23da0:	add	r3, r4, #4
   23da4:	cmp	r1, #256	; 0x100
   23da8:	vmovn.i32	d16, q8
   23dac:	vuzp.8	d16, d17
   23db0:	vst1.32	{d16[0]}, [r3]
   23db4:	mov	r3, r2
   23db8:	bne	23d7c <ReadUInt8Data+0x1a94>
   23dbc:	add	r8, r0, r8
   23dc0:	ldr	r0, [sp, #124]	; 0x7c
   23dc4:	ldr	r2, [sp, #116]	; 0x74
   23dc8:	mov	r1, sl
   23dcc:	add	sl, sl, #256	; 0x100
   23dd0:	add	r9, r9, #256	; 0x100
   23dd4:	add	r0, r0, #256	; 0x100
   23dd8:	cmp	sl, r2
   23ddc:	blt	23d54 <ReadUInt8Data+0x1a6c>
   23de0:	ldr	r5, [sp, #108]	; 0x6c
   23de4:	str	r1, [sp, #116]	; 0x74
   23de8:	cmp	sl, r5
   23dec:	bge	24c50 <ReadUInt8Data+0x2968>
   23df0:	ldr	r0, [sp, #132]	; 0x84
   23df4:	ldr	r9, [sp, #128]	; 0x80
   23df8:	sub	r6, r5, sl
   23dfc:	add	r4, sp, #136	; 0x88
   23e00:	mov	r2, r6
   23e04:	ldr	r3, [r0]
   23e08:	mov	r0, r4
   23e0c:	mov	r1, r9
   23e10:	bl	18b8 <fread@plt>
   23e14:	add	r8, r0, r8
   23e18:	cmp	r6, #1
   23e1c:	blt	24c54 <ReadUInt8Data+0x296c>
   23e20:	mov	r0, #0
   23e24:	cmp	r6, #4
   23e28:	bcc	24770 <ReadUInt8Data+0x2488>
   23e2c:	bic	r0, r6, #3
   23e30:	mov	r2, #1
   23e34:	str	r6, [sp, #132]	; 0x84
   23e38:	subs	r1, r0, #4
   23e3c:	add	r1, r2, r1, lsr #2
   23e40:	and	ip, r1, #1
   23e44:	beq	24730 <ReadUInt8Data+0x2448>
   23e48:	ldr	r1, [sp, #116]	; 0x74
   23e4c:	ldr	lr, [sp, #120]	; 0x78
   23e50:	mov	r6, r4
   23e54:	sub	r3, r5, r1
   23e58:	mov	r5, #32
   23e5c:	sub	r3, r3, #256	; 0x100
   23e60:	bic	r3, r3, #3
   23e64:	sub	r3, r3, #4
   23e68:	add	r2, r2, r3, lsr #2
   23e6c:	mvn	r7, r3, lsr #2
   23e70:	and	r2, r2, #1
   23e74:	add	r3, r7, r2
   23e78:	add	r7, lr, sl
   23e7c:	mov	r2, #0
   23e80:	vld1.32	{d16-d17}, [r6], r5
   23e84:	add	r1, r7, r2
   23e88:	add	r4, r4, #16
   23e8c:	adds	r3, r3, #2
   23e90:	add	r2, r2, #8
   23e94:	vmovn.i32	d16, q8
   23e98:	vuzp.8	d16, d17
   23e9c:	vst1.32	{d16[0]}, [r1]
   23ea0:	add	r1, r1, #4
   23ea4:	vld1.32	{d16-d17}, [r4]
   23ea8:	mov	r4, r6
   23eac:	vmovn.i32	d16, q8
   23eb0:	vuzp.8	d16, d17
   23eb4:	vst1.32	{d16[0]}, [r1]
   23eb8:	bne	23e80 <ReadUInt8Data+0x1b98>
   23ebc:	b	24738 <ReadUInt8Data+0x2450>
   23ec0:	str	r9, [sp, #128]	; 0x80
   23ec4:	sub	r1, r7, #256	; 0x100
   23ec8:	mov	r9, r5
   23ecc:	add	r0, r5, #256	; 0x100
   23ed0:	mov	sl, #0
   23ed4:	add	r5, sp, #136	; 0x88
   23ed8:	mov	r8, #32
   23edc:	mov	r6, #0
   23ee0:	str	r7, [sp, #108]	; 0x6c
   23ee4:	str	r1, [sp, #116]	; 0x74
   23ee8:	str	r9, [sp, #120]	; 0x78
   23eec:	str	r0, [sp, #124]	; 0x7c
   23ef0:	ldr	r0, [sp, #132]	; 0x84
   23ef4:	ldr	r1, [sp, #128]	; 0x80
   23ef8:	mov	r2, #256	; 0x100
   23efc:	ldr	r3, [r0]
   23f00:	mov	r0, r5
   23f04:	bl	18b8 <fread@plt>
   23f08:	mov	r3, r5
   23f0c:	mov	r1, #0
   23f10:	mov	r2, r5
   23f14:	vld1.32	{d16-d17}, [r2], r8
   23f18:	mov	r7, r9
   23f1c:	add	r3, r3, #16
   23f20:	vcvt.s32.f32	q8, q8
   23f24:	vmovn.i32	d16, q8
   23f28:	vuzp.8	d16, d17
   23f2c:	vmov.32	r4, d16[0]
   23f30:	str	r4, [r7, r1]!
   23f34:	add	r1, r1, #8
   23f38:	vld1.32	{d16-d17}, [r3]
   23f3c:	add	r3, r7, #4
   23f40:	cmp	r1, #256	; 0x100
   23f44:	vcvt.s32.f32	q8, q8
   23f48:	vmovn.i32	d16, q8
   23f4c:	vuzp.8	d16, d17
   23f50:	vst1.32	{d16[0]}, [r3]
   23f54:	mov	r3, r2
   23f58:	bne	23f14 <ReadUInt8Data+0x1c2c>
   23f5c:	ldr	r7, [sp, #124]	; 0x7c
   23f60:	ldr	r2, [sp, #116]	; 0x74
   23f64:	mov	r1, sl
   23f68:	add	sl, sl, #256	; 0x100
   23f6c:	add	r6, r0, r6
   23f70:	add	r9, r9, #256	; 0x100
   23f74:	add	r0, r7, #256	; 0x100
   23f78:	cmp	sl, r2
   23f7c:	blt	23eec <ReadUInt8Data+0x1c04>
   23f80:	ldr	r4, [sp, #108]	; 0x6c
   23f84:	str	r1, [sp, #116]	; 0x74
   23f88:	cmp	sl, r4
   23f8c:	bge	2438c <ReadUInt8Data+0x20a4>
   23f90:	ldr	r0, [sp, #132]	; 0x84
   23f94:	ldr	r9, [sp, #128]	; 0x80
   23f98:	sub	r8, r4, sl
   23f9c:	add	r5, sp, #136	; 0x88
   23fa0:	mov	r2, r8
   23fa4:	ldr	r3, [r0]
   23fa8:	mov	r0, r5
   23fac:	mov	r1, r9
   23fb0:	bl	18b8 <fread@plt>
   23fb4:	add	r6, r0, r6
   23fb8:	cmp	r8, #1
   23fbc:	blt	24824 <ReadUInt8Data+0x253c>
   23fc0:	mov	r1, r8
   23fc4:	mov	lr, #0
   23fc8:	cmp	r8, #4
   23fcc:	bcc	247ec <ReadUInt8Data+0x2504>
   23fd0:	bic	lr, r1, #3
   23fd4:	mov	r8, r1
   23fd8:	mov	r1, #1
   23fdc:	subs	r2, lr, #4
   23fe0:	add	r2, r1, r2, lsr #2
   23fe4:	and	r0, r2, #1
   23fe8:	str	r0, [sp, #132]	; 0x84
   23fec:	beq	247a4 <ReadUInt8Data+0x24bc>
   23ff0:	ldr	r0, [sp, #116]	; 0x74
   23ff4:	ldr	ip, [sp, #120]	; 0x78
   23ff8:	sub	r2, r4, r0
   23ffc:	add	r7, ip, sl
   24000:	mov	r0, r5
   24004:	sub	r2, r2, #256	; 0x100
   24008:	bic	r2, r2, #3
   2400c:	sub	r2, r2, #4
   24010:	add	r1, r1, r2, lsr #2
   24014:	mvn	r3, r2, lsr #2
   24018:	mov	r2, #0
   2401c:	and	r1, r1, #1
   24020:	add	r3, r3, r1
   24024:	mov	r1, #32
   24028:	vld1.32	{d16-d17}, [r0], r1
   2402c:	add	r4, r7, r2
   24030:	add	r5, r5, #16
   24034:	adds	r3, r3, #2
   24038:	add	r2, r2, #8
   2403c:	vcvt.s32.f32	q8, q8
   24040:	vmovn.i32	d16, q8
   24044:	vuzp.8	d16, d17
   24048:	vst1.32	{d16[0]}, [r4]
   2404c:	vld1.32	{d16-d17}, [r5]
   24050:	add	r5, r4, #4
   24054:	vcvt.s32.f32	q8, q8
   24058:	vmovn.i32	d16, q8
   2405c:	vuzp.8	d16, d17
   24060:	vst1.32	{d16[0]}, [r5]
   24064:	mov	r5, r0
   24068:	bne	24028 <ReadUInt8Data+0x1d40>
   2406c:	b	247ac <ReadUInt8Data+0x24c4>
   24070:	mov	r0, r7
   24074:	add	r1, sp, #136	; 0x88
   24078:	mov	r8, r9
   2407c:	str	r5, [sp, #120]	; 0x78
   24080:	add	r7, r5, #1
   24084:	mov	r5, #0
   24088:	mov	sl, #0
   2408c:	add	r9, r1, #8
   24090:	sub	r6, r0, #256	; 0x100
   24094:	str	r0, [sp, #108]	; 0x6c
   24098:	ldr	r0, [sp, #132]	; 0x84
   2409c:	mov	r1, r8
   240a0:	mov	r2, #256	; 0x100
   240a4:	mov	r4, r5
   240a8:	ldr	r3, [r0]
   240ac:	add	r0, sp, #136	; 0x88
   240b0:	bl	18b8 <fread@plt>
   240b4:	mov	r1, r9
   240b8:	mov	r2, #0
   240bc:	vldr	d16, [r1, #-8]
   240c0:	add	r3, r7, r2
   240c4:	vcvt.u32.f64	s0, d16
   240c8:	vmov	r5, s0
   240cc:	strb	r5, [r3, #-1]
   240d0:	vldr	d16, [r1]
   240d4:	add	r1, r1, #16
   240d8:	vcvt.u32.f64	s0, d16
   240dc:	vmov	r3, s0
   240e0:	strb	r3, [r7, r2]
   240e4:	add	r2, r2, #2
   240e8:	cmp	r2, #256	; 0x100
   240ec:	bne	240bc <ReadUInt8Data+0x1dd4>
   240f0:	add	r5, r4, #256	; 0x100
   240f4:	add	sl, r0, sl
   240f8:	add	r7, r7, #256	; 0x100
   240fc:	cmp	r5, r6
   24100:	blt	24098 <ReadUInt8Data+0x1db0>
   24104:	ldr	r7, [sp, #108]	; 0x6c
   24108:	cmp	r5, r7
   2410c:	bge	241c8 <ReadUInt8Data+0x1ee0>
   24110:	ldr	r0, [sp, #132]	; 0x84
   24114:	sub	r6, r7, r5
   24118:	add	r9, sp, #136	; 0x88
   2411c:	mov	r1, r8
   24120:	mov	r2, r6
   24124:	ldr	r3, [r0]
   24128:	mov	r0, r9
   2412c:	bl	18b8 <fread@plt>
   24130:	add	sl, r0, sl
   24134:	cmp	r6, #1
   24138:	blt	241c8 <ReadUInt8Data+0x1ee0>
   2413c:	mvn	r0, #256	; 0x100
   24140:	mov	r1, #0
   24144:	sub	r2, r0, r4
   24148:	and	r0, r6, #1
   2414c:	cmn	r2, r7
   24150:	beq	241a4 <ReadUInt8Data+0x1ebc>
   24154:	ldr	r1, [sp, #120]	; 0x78
   24158:	sub	r2, r0, r7
   2415c:	add	r7, r9, #8
   24160:	mov	r3, #0
   24164:	add	r2, r2, r5
   24168:	add	r4, r1, r5
   2416c:	vldr	d16, [r7, #-8]
   24170:	mov	r1, r4
   24174:	vcvt.u32.f64	s0, d16
   24178:	vmov	r6, s0
   2417c:	strb	r6, [r1, -r3]!
   24180:	sub	r3, r3, #2
   24184:	vldr	d16, [r7]
   24188:	add	r7, r7, #16
   2418c:	cmp	r2, r3
   24190:	vcvt.u32.f64	s0, d16
   24194:	vmov	r6, s0
   24198:	strb	r6, [r1, #1]
   2419c:	bne	2416c <ReadUInt8Data+0x1e84>
   241a0:	rsb	r1, r3, #0
   241a4:	cmp	r0, #0
   241a8:	beq	241c8 <ReadUInt8Data+0x1ee0>
   241ac:	add	r0, r9, r1, lsl #3
   241b0:	vldr	d16, [r0]
   241b4:	add	r0, r1, r5
   241b8:	vcvt.u32.f64	s0, d16
   241bc:	ldr	r2, [sp, #120]	; 0x78
   241c0:	vmov	r1, s0
   241c4:	strb	r1, [r2, r0]
   241c8:	mov	r9, r8
   241cc:	mul	r0, sl, r9
   241d0:	sub	sp, fp, #28
   241d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241d8:	str	r9, [sp, #128]	; 0x80
   241dc:	sub	r1, r7, #256	; 0x100
   241e0:	str	r7, [sp, #108]	; 0x6c
   241e4:	add	r0, r5, #256	; 0x100
   241e8:	mov	r8, #0
   241ec:	add	r6, sp, #136	; 0x88
   241f0:	mov	r7, #32
   241f4:	mov	r9, r5
   241f8:	mov	sl, #0
   241fc:	str	r5, [sp, #120]	; 0x78
   24200:	str	r1, [sp, #112]	; 0x70
   24204:	str	r0, [sp, #124]	; 0x7c
   24208:	ldr	r0, [sp, #132]	; 0x84
   2420c:	ldr	r1, [sp, #128]	; 0x80
   24210:	mov	r2, #256	; 0x100
   24214:	ldr	r3, [r0]
   24218:	mov	r0, r6
   2421c:	bl	18b8 <fread@plt>
   24220:	mov	r1, r6
   24224:	mov	r2, #0
   24228:	add	r3, r1, #16
   2422c:	vld1.64	{d16-d17}, [r1], r7
   24230:	mov	r4, r9
   24234:	vmovn.i64	d16, q8
   24238:	vmov.32	r5, d16[0]
   2423c:	strb	r5, [r4, r2]!
   24240:	vmov.32	r5, d16[1]
   24244:	add	r2, r2, #4
   24248:	cmp	r2, #256	; 0x100
   2424c:	strb	r5, [r4, #1]
   24250:	vld1.64	{d16-d17}, [r3]
   24254:	vmovn.i64	d16, q8
   24258:	vmov.32	r3, d16[1]
   2425c:	strb	r3, [r4, #3]
   24260:	vmov.32	r3, d16[0]
   24264:	strb	r3, [r4, #2]
   24268:	bne	24228 <ReadUInt8Data+0x1f40>
   2426c:	ldr	r4, [sp, #124]	; 0x7c
   24270:	ldr	r2, [sp, #112]	; 0x70
   24274:	mov	r1, r8
   24278:	add	r8, r8, #256	; 0x100
   2427c:	add	sl, r0, sl
   24280:	add	r9, r9, #256	; 0x100
   24284:	add	r0, r4, #256	; 0x100
   24288:	cmp	r8, r2
   2428c:	blt	24204 <ReadUInt8Data+0x1f1c>
   24290:	ldr	r7, [sp, #108]	; 0x6c
   24294:	str	r1, [sp, #112]	; 0x70
   24298:	cmp	r8, r7
   2429c:	bge	243a0 <ReadUInt8Data+0x20b8>
   242a0:	ldr	r0, [sp, #132]	; 0x84
   242a4:	ldr	r9, [sp, #128]	; 0x80
   242a8:	sub	r5, r7, r8
   242ac:	add	r6, sp, #136	; 0x88
   242b0:	mov	r2, r5
   242b4:	ldr	r3, [r0]
   242b8:	mov	r0, r6
   242bc:	mov	r1, r9
   242c0:	bl	18b8 <fread@plt>
   242c4:	mov	ip, r5
   242c8:	cmp	r5, #1
   242cc:	ldr	r5, [sp, #120]	; 0x78
   242d0:	add	sl, r0, sl
   242d4:	blt	248ac <ReadUInt8Data+0x25c4>
   242d8:	mov	lr, #0
   242dc:	beq	24880 <ReadUInt8Data+0x2598>
   242e0:	bic	lr, ip, #1
   242e4:	mov	r2, #1
   242e8:	subs	r1, lr, #2
   242ec:	add	r1, r2, r1, lsr #1
   242f0:	and	r0, r1, #1
   242f4:	str	r0, [sp, #104]	; 0x68
   242f8:	beq	24834 <ReadUInt8Data+0x254c>
   242fc:	ldr	r0, [sp, #112]	; 0x70
   24300:	sub	r3, r7, r0
   24304:	add	r0, r5, r8
   24308:	mov	r5, #32
   2430c:	sub	r3, r3, #256	; 0x100
   24310:	bic	r3, r3, #1
   24314:	sub	r3, r3, #2
   24318:	add	r2, r2, r3, lsr #1
   2431c:	mvn	r7, r3, lsr #1
   24320:	and	r2, r2, #1
   24324:	add	r3, r7, r2
   24328:	mov	r2, #0
   2432c:	add	r4, r6, #16
   24330:	vld1.64	{d16-d17}, [r6], r5
   24334:	mov	r7, r0
   24338:	adds	r3, r3, #2
   2433c:	vmovn.i64	d16, q8
   24340:	vmov.32	r1, d16[0]
   24344:	strb	r1, [r7, r2]!
   24348:	vmov.32	r1, d16[1]
   2434c:	strb	r1, [r7, #1]
   24350:	add	r1, r0, r2
   24354:	add	r2, r2, #4
   24358:	vld1.64	{d16-d17}, [r4]
   2435c:	vmovn.i64	d16, q8
   24360:	vmov.32	r4, d16[1]
   24364:	strb	r4, [r1, #3]
   24368:	vmov.32	r4, d16[0]
   2436c:	strb	r4, [r1, #2]
   24370:	bne	2432c <ReadUInt8Data+0x2044>
   24374:	b	24838 <ReadUInt8Data+0x2550>
   24378:	ldr	r5, [sp, #120]	; 0x78
   2437c:	ldr	r0, [sp, #116]	; 0x74
   24380:	cmp	r0, #13
   24384:	beq	248bc <ReadUInt8Data+0x25d4>
   24388:	b	24c58 <ReadUInt8Data+0x2970>
   2438c:	ldr	r9, [sp, #128]	; 0x80
   24390:	mov	sl, r6
   24394:	mul	r0, sl, r9
   24398:	sub	sp, fp, #28
   2439c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243a0:	ldr	r9, [sp, #128]	; 0x80
   243a4:	ldr	r5, [sp, #120]	; 0x78
   243a8:	b	248ac <ReadUInt8Data+0x25c4>
   243ac:	mov	r1, #0
   243b0:	cmp	lr, #0
   243b4:	beq	243d0 <ReadUInt8Data+0x20e8>
   243b8:	add	r2, sp, #136	; 0x88
   243bc:	add	r2, r2, r1, lsl #1
   243c0:	add	r1, r5, r1
   243c4:	vld1.16	{d16-d17}, [r2]
   243c8:	vmovn.i16	d16, q8
   243cc:	vst1.8	{d16}, [r1]
   243d0:	mov	r7, ip
   243d4:	cmp	r0, ip
   243d8:	beq	24c58 <ReadUInt8Data+0x2970>
   243dc:	add	r1, sp, #136	; 0x88
   243e0:	add	r2, r5, r0
   243e4:	add	r1, r1, r0, lsl #1
   243e8:	sub	r0, r7, r0
   243ec:	ldrb	r3, [r1], #2
   243f0:	subs	r0, r0, #1
   243f4:	strb	r3, [r2], #1
   243f8:	bne	243ec <ReadUInt8Data+0x2104>
   243fc:	b	24c58 <ReadUInt8Data+0x2970>
   24400:	mov	r1, #0
   24404:	cmp	lr, #0
   24408:	beq	24424 <ReadUInt8Data+0x213c>
   2440c:	add	r2, sp, #136	; 0x88
   24410:	add	r2, r2, r1, lsl #1
   24414:	add	r1, r5, r1
   24418:	vld1.16	{d16-d17}, [r2]
   2441c:	vmovn.i16	d16, q8
   24420:	vst1.8	{d16}, [r1]
   24424:	mov	r7, ip
   24428:	cmp	r0, ip
   2442c:	beq	24c58 <ReadUInt8Data+0x2970>
   24430:	add	r1, sp, #136	; 0x88
   24434:	add	r2, r5, r0
   24438:	add	r1, r1, r0, lsl #1
   2443c:	sub	r0, r7, r0
   24440:	ldrb	r3, [r1], #2
   24444:	subs	r0, r0, #1
   24448:	strb	r3, [r2], #1
   2444c:	bne	24440 <ReadUInt8Data+0x2158>
   24450:	b	24c58 <ReadUInt8Data+0x2970>
   24454:	mov	r1, #0
   24458:	cmp	ip, #0
   2445c:	beq	2447c <ReadUInt8Data+0x2194>
   24460:	add	r2, sp, #136	; 0x88
   24464:	add	r2, r2, r1, lsl #2
   24468:	add	r1, r8, r1
   2446c:	vld1.32	{d16-d17}, [r2]
   24470:	vmovn.i32	d16, q8
   24474:	vuzp.8	d16, d17
   24478:	vst1.32	{d16[0]}, [r1]
   2447c:	ldr	r7, [sp, #108]	; 0x6c
   24480:	cmp	lr, r7
   24484:	beq	24c58 <ReadUInt8Data+0x2970>
   24488:	add	r1, sp, #136	; 0x88
   2448c:	add	r2, r8, lr
   24490:	sub	r0, r7, lr
   24494:	add	r1, r1, lr, lsl #2
   24498:	ldr	r3, [r1], #4
   2449c:	subs	r0, r0, #1
   244a0:	strb	r3, [r2], #1
   244a4:	bne	24498 <ReadUInt8Data+0x21b0>
   244a8:	b	24c58 <ReadUInt8Data+0x2970>
   244ac:	mov	r1, #0
   244b0:	cmp	ip, #0
   244b4:	beq	244d4 <ReadUInt8Data+0x21ec>
   244b8:	add	r2, sp, #136	; 0x88
   244bc:	add	r2, r2, r1, lsl #2
   244c0:	add	r1, r8, r1
   244c4:	vld1.32	{d16-d17}, [r2]
   244c8:	vmovn.i32	d16, q8
   244cc:	vuzp.8	d16, d17
   244d0:	vst1.32	{d16[0]}, [r1]
   244d4:	ldr	r7, [sp, #108]	; 0x6c
   244d8:	cmp	lr, r7
   244dc:	beq	24c58 <ReadUInt8Data+0x2970>
   244e0:	add	r1, sp, #136	; 0x88
   244e4:	add	r2, r8, lr
   244e8:	sub	r0, r7, lr
   244ec:	add	r1, r1, lr, lsl #2
   244f0:	ldr	r3, [r1], #4
   244f4:	subs	r0, r0, #1
   244f8:	strb	r3, [r2], #1
   244fc:	bne	244f0 <ReadUInt8Data+0x2208>
   24500:	b	24c58 <ReadUInt8Data+0x2970>
   24504:	mov	r1, #0
   24508:	cmp	ip, #0
   2450c:	beq	24530 <ReadUInt8Data+0x2248>
   24510:	add	r2, sp, #136	; 0x88
   24514:	add	r2, r2, r1, lsl #2
   24518:	add	r1, r8, r1
   2451c:	vld1.32	{d16-d17}, [r2]
   24520:	vcvt.s32.f32	q8, q8
   24524:	vmovn.i32	d16, q8
   24528:	vuzp.8	d16, d17
   2452c:	vst1.32	{d16[0]}, [r1]
   24530:	ldr	r7, [sp, #108]	; 0x6c
   24534:	cmp	lr, r7
   24538:	beq	24c58 <ReadUInt8Data+0x2970>
   2453c:	add	r1, sp, #136	; 0x88
   24540:	add	r2, r8, lr
   24544:	sub	r0, r7, lr
   24548:	add	r1, r1, lr, lsl #2
   2454c:	vldr	s0, [r1]
   24550:	add	r1, r1, #4
   24554:	subs	r0, r0, #1
   24558:	vcvt.u32.f32	s0, s0
   2455c:	vmov	r3, s0
   24560:	strb	r3, [r2], #1
   24564:	bne	2454c <ReadUInt8Data+0x2264>
   24568:	b	24c58 <ReadUInt8Data+0x2970>
   2456c:	mov	r1, #0
   24570:	mov	r0, r5
   24574:	cmp	ip, #0
   24578:	mov	r5, r0
   2457c:	beq	245a4 <ReadUInt8Data+0x22bc>
   24580:	add	r2, sp, #136	; 0x88
   24584:	mov	r3, r5
   24588:	add	r2, r2, r1, lsl #3
   2458c:	vld1.64	{d16-d17}, [r2]
   24590:	vmovn.i64	d16, q8
   24594:	vmov.32	r2, d16[0]
   24598:	strb	r2, [r3, r1]!
   2459c:	vmov.32	r1, d16[1]
   245a0:	strb	r1, [r3, #1]
   245a4:	mov	r7, lr
   245a8:	cmp	r8, lr
   245ac:	beq	248ac <ReadUInt8Data+0x25c4>
   245b0:	add	r1, sp, #136	; 0x88
   245b4:	add	r2, r5, r8
   245b8:	sub	r0, r7, r8
   245bc:	add	r1, r1, r8, lsl #3
   245c0:	ldrb	r3, [r1], #8
   245c4:	subs	r0, r0, #1
   245c8:	strb	r3, [r2], #1
   245cc:	bne	245c0 <ReadUInt8Data+0x22d8>
   245d0:	b	248ac <ReadUInt8Data+0x25c4>
   245d4:	mov	r8, r5
   245d8:	mov	ip, r7
   245dc:	mov	r2, #0
   245e0:	ldr	r0, [sp, #132]	; 0x84
   245e4:	mov	r7, ip
   245e8:	mov	r3, r9
   245ec:	cmp	r0, #0
   245f0:	beq	24610 <ReadUInt8Data+0x2328>
   245f4:	add	r0, sp, #136	; 0x88
   245f8:	add	r0, r0, r2, lsl #1
   245fc:	vld1.16	{d16-d17}, [r0]
   24600:	add	r0, r3, r2
   24604:	add	r0, r0, r6
   24608:	vmovn.i16	d16, q8
   2460c:	vst1.8	{d16}, [r0]
   24610:	ldr	r9, [sp, #128]	; 0x80
   24614:	cmp	r8, lr
   24618:	beq	24c58 <ReadUInt8Data+0x2970>
   2461c:	add	r0, sp, #136	; 0x88
   24620:	add	r1, r0, lr, lsl #1
   24624:	add	r0, r3, lr
   24628:	add	r2, r0, r6
   2462c:	sub	r0, r7, lr
   24630:	sub	r0, r0, r6
   24634:	ldrb	r3, [r1], #2
   24638:	subs	r0, r0, #1
   2463c:	strb	r3, [r2], #1
   24640:	bne	24634 <ReadUInt8Data+0x234c>
   24644:	b	24c58 <ReadUInt8Data+0x2970>
   24648:	mov	r8, r5
   2464c:	mov	ip, r7
   24650:	mov	r2, #0
   24654:	ldr	r0, [sp, #132]	; 0x84
   24658:	mov	r7, ip
   2465c:	mov	r3, r9
   24660:	cmp	r0, #0
   24664:	beq	24684 <ReadUInt8Data+0x239c>
   24668:	add	r0, sp, #136	; 0x88
   2466c:	add	r0, r0, r2, lsl #1
   24670:	vld1.16	{d16-d17}, [r0]
   24674:	add	r0, r3, r2
   24678:	add	r0, r0, r6
   2467c:	vmovn.i16	d16, q8
   24680:	vst1.8	{d16}, [r0]
   24684:	ldr	r9, [sp, #128]	; 0x80
   24688:	cmp	r8, lr
   2468c:	beq	24c58 <ReadUInt8Data+0x2970>
   24690:	add	r0, sp, #136	; 0x88
   24694:	add	r1, r0, lr, lsl #1
   24698:	add	r0, r3, lr
   2469c:	add	r2, r0, r6
   246a0:	sub	r0, r7, lr
   246a4:	sub	r0, r0, r6
   246a8:	ldrb	r3, [r1], #2
   246ac:	subs	r0, r0, #1
   246b0:	strb	r3, [r2], #1
   246b4:	bne	246a8 <ReadUInt8Data+0x23c0>
   246b8:	b	24c58 <ReadUInt8Data+0x2970>
   246bc:	ldr	lr, [sp, #120]	; 0x78
   246c0:	mov	r2, #0
   246c4:	cmp	ip, #0
   246c8:	beq	246ec <ReadUInt8Data+0x2404>
   246cc:	add	r1, sp, #136	; 0x88
   246d0:	add	r1, r1, r2, lsl #2
   246d4:	vld1.32	{d16-d17}, [r1]
   246d8:	add	r1, r2, sl
   246dc:	add	r1, lr, r1
   246e0:	vmovn.i32	d16, q8
   246e4:	vuzp.8	d16, d17
   246e8:	vst1.32	{d16[0]}, [r1]
   246ec:	ldr	r1, [sp, #132]	; 0x84
   246f0:	ldr	r4, [sp, #108]	; 0x6c
   246f4:	cmp	r1, r0
   246f8:	beq	24c54 <ReadUInt8Data+0x296c>
   246fc:	ldr	r3, [sp, #116]	; 0x74
   24700:	ldr	r1, [sp, #124]	; 0x7c
   24704:	add	r2, sp, #136	; 0x88
   24708:	add	r2, r2, r0, lsl #2
   2470c:	sub	r3, r4, r3
   24710:	add	r1, r1, r0
   24714:	sub	r0, r3, r0
   24718:	sub	r0, r0, #256	; 0x100
   2471c:	ldr	r3, [r2], #4
   24720:	subs	r0, r0, #1
   24724:	strb	r3, [r1], #1
   24728:	bne	2471c <ReadUInt8Data+0x2434>
   2472c:	b	24c54 <ReadUInt8Data+0x296c>
   24730:	ldr	lr, [sp, #120]	; 0x78
   24734:	mov	r2, #0
   24738:	cmp	ip, #0
   2473c:	beq	24760 <ReadUInt8Data+0x2478>
   24740:	add	r1, sp, #136	; 0x88
   24744:	add	r1, r1, r2, lsl #2
   24748:	vld1.32	{d16-d17}, [r1]
   2474c:	add	r1, r2, sl
   24750:	add	r1, lr, r1
   24754:	vmovn.i32	d16, q8
   24758:	vuzp.8	d16, d17
   2475c:	vst1.32	{d16[0]}, [r1]
   24760:	ldr	r1, [sp, #132]	; 0x84
   24764:	ldr	r5, [sp, #108]	; 0x6c
   24768:	cmp	r1, r0
   2476c:	beq	24c54 <ReadUInt8Data+0x296c>
   24770:	ldr	r3, [sp, #116]	; 0x74
   24774:	ldr	r1, [sp, #124]	; 0x7c
   24778:	add	r2, sp, #136	; 0x88
   2477c:	add	r2, r2, r0, lsl #2
   24780:	sub	r3, r5, r3
   24784:	add	r1, r1, r0
   24788:	sub	r0, r3, r0
   2478c:	sub	r0, r0, #256	; 0x100
   24790:	ldr	r3, [r2], #4
   24794:	subs	r0, r0, #1
   24798:	strb	r3, [r1], #1
   2479c:	bne	24790 <ReadUInt8Data+0x24a8>
   247a0:	b	24c54 <ReadUInt8Data+0x296c>
   247a4:	ldr	ip, [sp, #120]	; 0x78
   247a8:	mov	r2, #0
   247ac:	ldr	r0, [sp, #132]	; 0x84
   247b0:	ldr	r7, [sp, #124]	; 0x7c
   247b4:	cmp	r0, #0
   247b8:	beq	247e0 <ReadUInt8Data+0x24f8>
   247bc:	add	r1, sp, #136	; 0x88
   247c0:	add	r1, r1, r2, lsl #2
   247c4:	vld1.32	{d16-d17}, [r1]
   247c8:	add	r1, r2, sl
   247cc:	add	r1, ip, r1
   247d0:	vcvt.s32.f32	q8, q8
   247d4:	vmovn.i32	d16, q8
   247d8:	vuzp.8	d16, d17
   247dc:	vst1.32	{d16[0]}, [r1]
   247e0:	ldr	r4, [sp, #108]	; 0x6c
   247e4:	cmp	r8, lr
   247e8:	beq	24824 <ReadUInt8Data+0x253c>
   247ec:	ldr	r0, [sp, #116]	; 0x74
   247f0:	add	r2, sp, #136	; 0x88
   247f4:	add	r1, r7, lr
   247f8:	add	r2, r2, lr, lsl #2
   247fc:	sub	r3, r4, r0
   24800:	sub	r0, r3, lr
   24804:	sub	r0, r0, #256	; 0x100
   24808:	vldr	s0, [r2]
   2480c:	add	r2, r2, #4
   24810:	subs	r0, r0, #1
   24814:	vcvt.u32.f32	s0, s0
   24818:	vmov	r3, s0
   2481c:	strb	r3, [r1], #1
   24820:	bne	24808 <ReadUInt8Data+0x2520>
   24824:	mov	sl, r6
   24828:	mul	r0, sl, r9
   2482c:	sub	sp, fp, #28
   24830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24834:	mov	r2, #0
   24838:	ldr	r0, [sp, #104]	; 0x68
   2483c:	ldr	r5, [sp, #120]	; 0x78
   24840:	cmp	r0, #0
   24844:	beq	24870 <ReadUInt8Data+0x2588>
   24848:	add	r0, sp, #136	; 0x88
   2484c:	add	r0, r0, r2, lsl #3
   24850:	vld1.64	{d16-d17}, [r0]
   24854:	add	r0, r2, r8
   24858:	mov	r2, r5
   2485c:	vmovn.i64	d16, q8
   24860:	vmov.32	r1, d16[0]
   24864:	strb	r1, [r2, r0]!
   24868:	vmov.32	r0, d16[1]
   2486c:	strb	r0, [r2, #1]
   24870:	ldr	r7, [sp, #108]	; 0x6c
   24874:	ldr	r4, [sp, #124]	; 0x7c
   24878:	cmp	ip, lr
   2487c:	beq	248ac <ReadUInt8Data+0x25c4>
   24880:	add	r0, sp, #136	; 0x88
   24884:	add	r1, r4, lr
   24888:	add	r2, r0, lr, lsl #3
   2488c:	ldr	r0, [sp, #112]	; 0x70
   24890:	sub	r0, r7, r0
   24894:	sub	r0, r0, lr
   24898:	sub	r0, r0, #256	; 0x100
   2489c:	ldrb	r3, [r2], #8
   248a0:	subs	r0, r0, #1
   248a4:	strb	r3, [r1], #1
   248a8:	bne	2489c <ReadUInt8Data+0x25b4>
   248ac:	ldr	r6, [sp, #132]	; 0x84
   248b0:	ldr	r0, [sp, #116]	; 0x74
   248b4:	cmp	r0, #13
   248b8:	bne	24c58 <ReadUInt8Data+0x2970>
   248bc:	ldr	r0, [r6, #20]
   248c0:	cmp	r0, #0
   248c4:	beq	24910 <ReadUInt8Data+0x2628>
   248c8:	cmp	r7, #256	; 0x100
   248cc:	bgt	249b8 <ReadUInt8Data+0x26d0>
   248d0:	ldr	r3, [r6]
   248d4:	add	r4, sp, #136	; 0x88
   248d8:	mov	r1, r9
   248dc:	mov	r2, r7
   248e0:	mov	r0, r4
   248e4:	bl	18b8 <fread@plt>
   248e8:	add	sl, r0, sl
   248ec:	cmp	r7, #1
   248f0:	blt	24c58 <ReadUInt8Data+0x2970>
   248f4:	mov	r0, r4
   248f8:	bl	1bd4 <Mat_uint64Swap>
   248fc:	strb	r0, [r5], #1
   24900:	add	r4, r4, #8
   24904:	subs	r7, r7, #1
   24908:	bne	248f4 <ReadUInt8Data+0x260c>
   2490c:	b	24c58 <ReadUInt8Data+0x2970>
   24910:	cmp	r7, #256	; 0x100
   24914:	bgt	24ab4 <ReadUInt8Data+0x27cc>
   24918:	ldr	r3, [r6]
   2491c:	add	r4, sp, #136	; 0x88
   24920:	mov	r1, r9
   24924:	mov	r2, r7
   24928:	mov	r0, r4
   2492c:	bl	18b8 <fread@plt>
   24930:	add	sl, r0, sl
   24934:	cmp	r7, #1
   24938:	blt	24c58 <ReadUInt8Data+0x2970>
   2493c:	mov	r8, #0
   24940:	beq	24ca8 <ReadUInt8Data+0x29c0>
   24944:	bic	r8, r7, #1
   24948:	mov	r2, #1
   2494c:	mov	lr, r7
   24950:	subs	r1, r8, #2
   24954:	add	r1, r2, r1, lsr #1
   24958:	and	ip, r1, #1
   2495c:	beq	24c64 <ReadUInt8Data+0x297c>
   24960:	sub	r3, r1, ip
   24964:	mov	r1, #0
   24968:	mov	r7, #32
   2496c:	mov	r0, r5
   24970:	add	r6, r4, #16
   24974:	vld1.64	{d16-d17}, [r4], r7
   24978:	mov	r2, r0
   2497c:	subs	r3, r3, #2
   24980:	vmovn.i64	d16, q8
   24984:	vmov.32	r5, d16[0]
   24988:	strb	r5, [r2, r1]!
   2498c:	vmov.32	r5, d16[1]
   24990:	add	r1, r1, #4
   24994:	strb	r5, [r2, #1]
   24998:	vld1.64	{d16-d17}, [r6]
   2499c:	vmovn.i64	d16, q8
   249a0:	vmov.32	r6, d16[1]
   249a4:	strb	r6, [r2, #3]
   249a8:	vmov.32	r6, d16[0]
   249ac:	strb	r6, [r2, #2]
   249b0:	bne	24970 <ReadUInt8Data+0x2688>
   249b4:	b	24c6c <ReadUInt8Data+0x2984>
   249b8:	sub	r0, r7, #256	; 0x100
   249bc:	mov	r8, r5
   249c0:	add	r1, r5, #256	; 0x100
   249c4:	str	r9, [sp, #128]	; 0x80
   249c8:	str	r7, [sp, #108]	; 0x6c
   249cc:	str	r0, [sp, #124]	; 0x7c
   249d0:	mov	r0, #0
   249d4:	mov	r5, r1
   249d8:	ldr	r3, [r6]
   249dc:	ldr	r1, [sp, #128]	; 0x80
   249e0:	add	r4, sp, #136	; 0x88
   249e4:	mov	r9, r0
   249e8:	mov	r2, #256	; 0x100
   249ec:	mov	r0, r4
   249f0:	bl	18b8 <fread@plt>
   249f4:	mov	r6, r0
   249f8:	mov	r7, #0
   249fc:	mov	r0, r4
   24a00:	bl	1bd4 <Mat_uint64Swap>
   24a04:	strb	r0, [r8, r7]
   24a08:	add	r7, r7, #1
   24a0c:	add	r4, r4, #8
   24a10:	cmp	r7, #256	; 0x100
   24a14:	bne	249fc <ReadUInt8Data+0x2714>
   24a18:	ldr	r2, [sp, #124]	; 0x7c
   24a1c:	add	sl, r6, sl
   24a20:	ldr	r6, [sp, #132]	; 0x84
   24a24:	add	r0, r9, #256	; 0x100
   24a28:	add	r8, r8, #256	; 0x100
   24a2c:	add	r1, r5, #256	; 0x100
   24a30:	cmp	r0, r2
   24a34:	blt	249d4 <ReadUInt8Data+0x26ec>
   24a38:	ldr	r7, [sp, #108]	; 0x6c
   24a3c:	cmp	r0, r7
   24a40:	bge	24aa4 <ReadUInt8Data+0x27bc>
   24a44:	mov	r1, r6
   24a48:	sub	r6, r7, r0
   24a4c:	add	r4, sp, #136	; 0x88
   24a50:	ldr	r3, [r1]
   24a54:	ldr	r1, [sp, #128]	; 0x80
   24a58:	mov	r0, r4
   24a5c:	mov	r2, r6
   24a60:	mov	r8, r1
   24a64:	bl	18b8 <fread@plt>
   24a68:	add	sl, r0, sl
   24a6c:	cmp	r6, #1
   24a70:	blt	24a94 <ReadUInt8Data+0x27ac>
   24a74:	sub	r0, r7, r9
   24a78:	sub	r6, r0, #256	; 0x100
   24a7c:	mov	r0, r4
   24a80:	bl	1bd4 <Mat_uint64Swap>
   24a84:	strb	r0, [r5], #1
   24a88:	add	r4, r4, #8
   24a8c:	subs	r6, r6, #1
   24a90:	bne	24a7c <ReadUInt8Data+0x2794>
   24a94:	mov	r9, r8
   24a98:	mul	r0, sl, r9
   24a9c:	sub	sp, fp, #28
   24aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24aa4:	ldr	r9, [sp, #128]	; 0x80
   24aa8:	mul	r0, sl, r9
   24aac:	sub	sp, fp, #28
   24ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ab4:	mov	r8, sl
   24ab8:	str	r9, [sp, #128]	; 0x80
   24abc:	sub	r1, r7, #256	; 0x100
   24ac0:	str	r7, [sp, #108]	; 0x6c
   24ac4:	add	r0, r5, #256	; 0x100
   24ac8:	mov	sl, #0
   24acc:	mov	r7, #32
   24ad0:	mov	r9, r5
   24ad4:	str	r5, [sp, #120]	; 0x78
   24ad8:	str	r1, [sp, #116]	; 0x74
   24adc:	str	r0, [sp, #124]	; 0x7c
   24ae0:	ldr	r0, [sp, #132]	; 0x84
   24ae4:	ldr	r1, [sp, #128]	; 0x80
   24ae8:	add	r4, sp, #136	; 0x88
   24aec:	mov	r2, #256	; 0x100
   24af0:	ldr	r3, [r0]
   24af4:	mov	r0, r4
   24af8:	bl	18b8 <fread@plt>
   24afc:	mov	r1, r4
   24b00:	mov	r2, #0
   24b04:	add	r3, r1, #16
   24b08:	vld1.64	{d16-d17}, [r1], r7
   24b0c:	mov	r4, r9
   24b10:	vmovn.i64	d16, q8
   24b14:	vmov.32	r5, d16[0]
   24b18:	strb	r5, [r4, r2]!
   24b1c:	vmov.32	r5, d16[1]
   24b20:	add	r2, r2, #4
   24b24:	cmp	r2, #256	; 0x100
   24b28:	strb	r5, [r4, #1]
   24b2c:	vld1.64	{d16-d17}, [r3]
   24b30:	vmovn.i64	d16, q8
   24b34:	vmov.32	r3, d16[1]
   24b38:	strb	r3, [r4, #3]
   24b3c:	vmov.32	r3, d16[0]
   24b40:	strb	r3, [r4, #2]
   24b44:	bne	24b04 <ReadUInt8Data+0x281c>
   24b48:	ldr	r6, [sp, #124]	; 0x7c
   24b4c:	ldr	r2, [sp, #116]	; 0x74
   24b50:	mov	r1, sl
   24b54:	add	sl, sl, #256	; 0x100
   24b58:	add	r8, r0, r8
   24b5c:	add	r9, r9, #256	; 0x100
   24b60:	add	r0, r6, #256	; 0x100
   24b64:	cmp	sl, r2
   24b68:	blt	24adc <ReadUInt8Data+0x27f4>
   24b6c:	ldr	r4, [sp, #108]	; 0x6c
   24b70:	str	r1, [sp, #116]	; 0x74
   24b74:	cmp	sl, r4
   24b78:	bge	24c50 <ReadUInt8Data+0x2968>
   24b7c:	ldr	r0, [sp, #132]	; 0x84
   24b80:	ldr	r9, [sp, #128]	; 0x80
   24b84:	sub	r7, r4, sl
   24b88:	add	r5, sp, #136	; 0x88
   24b8c:	mov	r2, r7
   24b90:	ldr	r3, [r0]
   24b94:	mov	r0, r5
   24b98:	mov	r1, r9
   24b9c:	bl	18b8 <fread@plt>
   24ba0:	add	r8, r0, r8
   24ba4:	cmp	r7, #1
   24ba8:	blt	24c54 <ReadUInt8Data+0x296c>
   24bac:	mov	lr, #0
   24bb0:	beq	24d18 <ReadUInt8Data+0x2a30>
   24bb4:	bic	lr, r7, #1
   24bb8:	mov	r2, #1
   24bbc:	str	r7, [sp, #132]	; 0x84
   24bc0:	subs	r1, lr, #2
   24bc4:	add	r1, r2, r1, lsr #1
   24bc8:	and	ip, r1, #1
   24bcc:	beq	24ccc <ReadUInt8Data+0x29e4>
   24bd0:	ldr	r0, [sp, #116]	; 0x74
   24bd4:	ldr	r9, [sp, #120]	; 0x78
   24bd8:	mov	r6, #32
   24bdc:	sub	r3, r4, r0
   24be0:	add	r0, r9, sl
   24be4:	sub	r3, r3, #256	; 0x100
   24be8:	bic	r3, r3, #1
   24bec:	sub	r3, r3, #2
   24bf0:	add	r2, r2, r3, lsr #1
   24bf4:	mvn	r7, r3, lsr #1
   24bf8:	and	r2, r2, #1
   24bfc:	add	r3, r7, r2
   24c00:	mov	r2, #0
   24c04:	add	r4, r5, #16
   24c08:	vld1.64	{d16-d17}, [r5], r6
   24c0c:	mov	r7, r0
   24c10:	adds	r3, r3, #2
   24c14:	vmovn.i64	d16, q8
   24c18:	vmov.32	r1, d16[0]
   24c1c:	strb	r1, [r7, r2]!
   24c20:	vmov.32	r1, d16[1]
   24c24:	strb	r1, [r7, #1]
   24c28:	add	r1, r0, r2
   24c2c:	add	r2, r2, #4
   24c30:	vld1.64	{d16-d17}, [r4]
   24c34:	vmovn.i64	d16, q8
   24c38:	vmov.32	r4, d16[1]
   24c3c:	strb	r4, [r1, #3]
   24c40:	vmov.32	r4, d16[0]
   24c44:	strb	r4, [r1, #2]
   24c48:	bne	24c04 <ReadUInt8Data+0x291c>
   24c4c:	b	24cd4 <ReadUInt8Data+0x29ec>
   24c50:	ldr	r9, [sp, #128]	; 0x80
   24c54:	mov	sl, r8
   24c58:	mul	r0, sl, r9
   24c5c:	sub	sp, fp, #28
   24c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c64:	mov	r1, #0
   24c68:	mov	r0, r5
   24c6c:	cmp	ip, #0
   24c70:	mov	r5, r0
   24c74:	beq	24c9c <ReadUInt8Data+0x29b4>
   24c78:	add	r2, sp, #136	; 0x88
   24c7c:	mov	r3, r5
   24c80:	add	r2, r2, r1, lsl #3
   24c84:	vld1.64	{d16-d17}, [r2]
   24c88:	vmovn.i64	d16, q8
   24c8c:	vmov.32	r2, d16[0]
   24c90:	strb	r2, [r3, r1]!
   24c94:	vmov.32	r1, d16[1]
   24c98:	strb	r1, [r3, #1]
   24c9c:	mov	r7, lr
   24ca0:	cmp	r8, lr
   24ca4:	beq	24c58 <ReadUInt8Data+0x2970>
   24ca8:	add	r1, sp, #136	; 0x88
   24cac:	add	r2, r5, r8
   24cb0:	sub	r0, r7, r8
   24cb4:	add	r1, r1, r8, lsl #3
   24cb8:	ldrb	r3, [r1], #8
   24cbc:	subs	r0, r0, #1
   24cc0:	strb	r3, [r2], #1
   24cc4:	bne	24cb8 <ReadUInt8Data+0x29d0>
   24cc8:	b	24c58 <ReadUInt8Data+0x2970>
   24ccc:	ldr	r9, [sp, #120]	; 0x78
   24cd0:	mov	r2, #0
   24cd4:	ldr	r6, [sp, #124]	; 0x7c
   24cd8:	cmp	ip, #0
   24cdc:	beq	24d04 <ReadUInt8Data+0x2a1c>
   24ce0:	add	r0, sp, #136	; 0x88
   24ce4:	add	r0, r0, r2, lsl #3
   24ce8:	vld1.64	{d16-d17}, [r0]
   24cec:	add	r0, r2, sl
   24cf0:	vmovn.i64	d16, q8
   24cf4:	vmov.32	r1, d16[0]
   24cf8:	strb	r1, [r9, r0]!
   24cfc:	vmov.32	r0, d16[1]
   24d00:	strb	r0, [r9, #1]
   24d04:	ldr	r0, [sp, #132]	; 0x84
   24d08:	ldr	r4, [sp, #108]	; 0x6c
   24d0c:	ldr	r9, [sp, #128]	; 0x80
   24d10:	cmp	r0, lr
   24d14:	beq	24c54 <ReadUInt8Data+0x296c>
   24d18:	add	r0, sp, #136	; 0x88
   24d1c:	add	r1, r6, lr
   24d20:	add	r2, r0, lr, lsl #3
   24d24:	ldr	r0, [sp, #116]	; 0x74
   24d28:	sub	r0, r4, r0
   24d2c:	sub	r0, r0, lr
   24d30:	sub	r0, r0, #256	; 0x100
   24d34:	ldrb	r3, [r2], #8
   24d38:	subs	r0, r0, #1
   24d3c:	strb	r3, [r1], #1
   24d40:	bne	24d34 <ReadUInt8Data+0x2a4c>
   24d44:	b	24c54 <ReadUInt8Data+0x296c>

00024d48 <ReadCompressedUInt8Data>:
   24d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d4c:	add	fp, sp, #28
   24d50:	sub	sp, sp, #12
   24d54:	mov	r7, r0
   24d58:	mov	r0, #0
   24d5c:	cmp	r1, #0
   24d60:	beq	24d74 <ReadCompressedUInt8Data+0x2c>
   24d64:	cmp	r7, #0
   24d68:	movne	r5, r2
   24d6c:	cmpne	r2, #0
   24d70:	bne	24d7c <ReadCompressedUInt8Data+0x34>
   24d74:	sub	sp, fp, #28
   24d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d7c:	ldr	sl, [fp, #8]
   24d80:	mov	r0, r3
   24d84:	mov	r4, r3
   24d88:	mov	r6, r1
   24d8c:	bl	1924 <Mat_SizeOf@plt>
   24d90:	mov	r9, r0
   24d94:	sub	r0, r4, #1
   24d98:	cmp	r0, #12
   24d9c:	bhi	2526c <ReadCompressedUInt8Data+0x524>
   24da0:	add	r1, pc, #4
   24da4:	ldr	r0, [r1, r0, lsl #2]
   24da8:	add	pc, r1, r0
   24dac:	.word	0x00000034
   24db0:	.word	0x0000006c
   24db4:	.word	0x000000a4
   24db8:	.word	0x000000ec
   24dbc:	.word	0x00000134
   24dc0:	.word	0x0000017c
   24dc4:	.word	0x000001c4
   24dc8:	.word	0x000004c0
   24dcc:	.word	0x00000214
   24dd0:	.word	0x000004c0
   24dd4:	.word	0x000004c0
   24dd8:	.word	0x00000264
   24ddc:	.word	0x000002ac
   24de0:	cmp	sl, #1
   24de4:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24de8:	mov	r8, sp
   24dec:	mov	r4, sl
   24df0:	mov	r0, r7
   24df4:	mov	r1, r6
   24df8:	mov	r2, r8
   24dfc:	mov	r3, r9
   24e00:	bl	34ac <InflateData>
   24e04:	ldrb	r0, [sp]
   24e08:	subs	r4, r4, #1
   24e0c:	strb	r0, [r5], #1
   24e10:	bne	24df0 <ReadCompressedUInt8Data+0xa8>
   24e14:	b	2526c <ReadCompressedUInt8Data+0x524>
   24e18:	cmp	sl, #1
   24e1c:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24e20:	mov	r8, sp
   24e24:	mov	r4, sl
   24e28:	mov	r0, r7
   24e2c:	mov	r1, r6
   24e30:	mov	r2, r8
   24e34:	mov	r3, r9
   24e38:	bl	34ac <InflateData>
   24e3c:	ldrb	r0, [sp]
   24e40:	subs	r4, r4, #1
   24e44:	strb	r0, [r5], #1
   24e48:	bne	24e28 <ReadCompressedUInt8Data+0xe0>
   24e4c:	b	2526c <ReadCompressedUInt8Data+0x524>
   24e50:	ldr	r0, [r7, #20]
   24e54:	cmp	r0, #0
   24e58:	beq	250a0 <ReadCompressedUInt8Data+0x358>
   24e5c:	cmp	sl, #1
   24e60:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24e64:	mov	r8, sp
   24e68:	mov	r4, sl
   24e6c:	mov	r0, r7
   24e70:	mov	r1, r6
   24e74:	mov	r2, r8
   24e78:	mov	r3, r9
   24e7c:	bl	34ac <InflateData>
   24e80:	mov	r0, r8
   24e84:	bl	1c20 <Mat_int16Swap>
   24e88:	strb	r0, [r5], #1
   24e8c:	subs	r4, r4, #1
   24e90:	bne	24e6c <ReadCompressedUInt8Data+0x124>
   24e94:	b	2526c <ReadCompressedUInt8Data+0x524>
   24e98:	ldr	r0, [r7, #20]
   24e9c:	cmp	r0, #0
   24ea0:	beq	250d8 <ReadCompressedUInt8Data+0x390>
   24ea4:	cmp	sl, #1
   24ea8:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24eac:	mov	r8, sp
   24eb0:	mov	r4, sl
   24eb4:	mov	r0, r7
   24eb8:	mov	r1, r6
   24ebc:	mov	r2, r8
   24ec0:	mov	r3, r9
   24ec4:	bl	34ac <InflateData>
   24ec8:	mov	r0, r8
   24ecc:	bl	1c34 <Mat_uint16Swap>
   24ed0:	strb	r0, [r5], #1
   24ed4:	subs	r4, r4, #1
   24ed8:	bne	24eb4 <ReadCompressedUInt8Data+0x16c>
   24edc:	b	2526c <ReadCompressedUInt8Data+0x524>
   24ee0:	ldr	r0, [r7, #20]
   24ee4:	cmp	r0, #0
   24ee8:	beq	25110 <ReadCompressedUInt8Data+0x3c8>
   24eec:	cmp	sl, #1
   24ef0:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24ef4:	mov	r8, sp
   24ef8:	mov	r4, sl
   24efc:	mov	r0, r7
   24f00:	mov	r1, r6
   24f04:	mov	r2, r8
   24f08:	mov	r3, r9
   24f0c:	bl	34ac <InflateData>
   24f10:	mov	r0, r8
   24f14:	bl	1bf8 <Mat_int32Swap>
   24f18:	strb	r0, [r5], #1
   24f1c:	subs	r4, r4, #1
   24f20:	bne	24efc <ReadCompressedUInt8Data+0x1b4>
   24f24:	b	2526c <ReadCompressedUInt8Data+0x524>
   24f28:	ldr	r0, [r7, #20]
   24f2c:	cmp	r0, #0
   24f30:	beq	25148 <ReadCompressedUInt8Data+0x400>
   24f34:	cmp	sl, #1
   24f38:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24f3c:	mov	r8, sp
   24f40:	mov	r4, sl
   24f44:	mov	r0, r7
   24f48:	mov	r1, r6
   24f4c:	mov	r2, r8
   24f50:	mov	r3, r9
   24f54:	bl	34ac <InflateData>
   24f58:	mov	r0, r8
   24f5c:	bl	1c0c <Mat_uint32Swap>
   24f60:	strb	r0, [r5], #1
   24f64:	subs	r4, r4, #1
   24f68:	bne	24f44 <ReadCompressedUInt8Data+0x1fc>
   24f6c:	b	2526c <ReadCompressedUInt8Data+0x524>
   24f70:	ldr	r0, [r7, #20]
   24f74:	cmp	r0, #0
   24f78:	beq	25180 <ReadCompressedUInt8Data+0x438>
   24f7c:	cmp	sl, #1
   24f80:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24f84:	mov	r8, sp
   24f88:	mov	r4, sl
   24f8c:	mov	r0, r7
   24f90:	mov	r1, r6
   24f94:	mov	r2, r8
   24f98:	mov	r3, r9
   24f9c:	bl	34ac <InflateData>
   24fa0:	mov	r0, r8
   24fa4:	bl	1c4c <Mat_floatSwap>
   24fa8:	vcvt.u32.f32	s0, s0
   24fac:	subs	r4, r4, #1
   24fb0:	vmov	r0, s0
   24fb4:	strb	r0, [r5], #1
   24fb8:	bne	24f8c <ReadCompressedUInt8Data+0x244>
   24fbc:	b	2526c <ReadCompressedUInt8Data+0x524>
   24fc0:	ldr	r0, [r7, #20]
   24fc4:	cmp	r0, #0
   24fc8:	beq	251c0 <ReadCompressedUInt8Data+0x478>
   24fcc:	cmp	sl, #1
   24fd0:	blt	2526c <ReadCompressedUInt8Data+0x524>
   24fd4:	mov	r8, sp
   24fd8:	mov	r4, sl
   24fdc:	mov	r0, r7
   24fe0:	mov	r1, r6
   24fe4:	mov	r2, r8
   24fe8:	mov	r3, r9
   24fec:	bl	34ac <InflateData>
   24ff0:	mov	r0, r8
   24ff4:	bl	1c90 <Mat_doubleSwap>
   24ff8:	vcvt.u32.f64	s0, d0
   24ffc:	subs	r4, r4, #1
   25000:	vmov	r0, s0
   25004:	strb	r0, [r5], #1
   25008:	bne	24fdc <ReadCompressedUInt8Data+0x294>
   2500c:	b	2526c <ReadCompressedUInt8Data+0x524>
   25010:	ldr	r0, [r7, #20]
   25014:	cmp	r0, #0
   25018:	beq	25200 <ReadCompressedUInt8Data+0x4b8>
   2501c:	cmp	sl, #1
   25020:	blt	2526c <ReadCompressedUInt8Data+0x524>
   25024:	mov	r8, sp
   25028:	mov	r4, sl
   2502c:	mov	r0, r7
   25030:	mov	r1, r6
   25034:	mov	r2, r8
   25038:	mov	r3, r9
   2503c:	bl	34ac <InflateData>
   25040:	mov	r0, r8
   25044:	bl	1b84 <Mat_int64Swap>
   25048:	strb	r0, [r5], #1
   2504c:	subs	r4, r4, #1
   25050:	bne	2502c <ReadCompressedUInt8Data+0x2e4>
   25054:	b	2526c <ReadCompressedUInt8Data+0x524>
   25058:	ldr	r0, [r7, #20]
   2505c:	cmp	r0, #0
   25060:	beq	25238 <ReadCompressedUInt8Data+0x4f0>
   25064:	cmp	sl, #1
   25068:	blt	2526c <ReadCompressedUInt8Data+0x524>
   2506c:	mov	r8, sp
   25070:	mov	r4, sl
   25074:	mov	r0, r7
   25078:	mov	r1, r6
   2507c:	mov	r2, r8
   25080:	mov	r3, r9
   25084:	bl	34ac <InflateData>
   25088:	mov	r0, r8
   2508c:	bl	1bd4 <Mat_uint64Swap>
   25090:	strb	r0, [r5], #1
   25094:	subs	r4, r4, #1
   25098:	bne	25074 <ReadCompressedUInt8Data+0x32c>
   2509c:	b	2526c <ReadCompressedUInt8Data+0x524>
   250a0:	cmp	sl, #1
   250a4:	blt	2526c <ReadCompressedUInt8Data+0x524>
   250a8:	mov	r8, sp
   250ac:	mov	r4, sl
   250b0:	mov	r0, r7
   250b4:	mov	r1, r6
   250b8:	mov	r2, r8
   250bc:	mov	r3, r9
   250c0:	bl	34ac <InflateData>
   250c4:	ldrb	r0, [sp]
   250c8:	subs	r4, r4, #1
   250cc:	strb	r0, [r5], #1
   250d0:	bne	250b0 <ReadCompressedUInt8Data+0x368>
   250d4:	b	2526c <ReadCompressedUInt8Data+0x524>
   250d8:	cmp	sl, #1
   250dc:	blt	2526c <ReadCompressedUInt8Data+0x524>
   250e0:	mov	r8, sp
   250e4:	mov	r4, sl
   250e8:	mov	r0, r7
   250ec:	mov	r1, r6
   250f0:	mov	r2, r8
   250f4:	mov	r3, r9
   250f8:	bl	34ac <InflateData>
   250fc:	ldrb	r0, [sp]
   25100:	subs	r4, r4, #1
   25104:	strb	r0, [r5], #1
   25108:	bne	250e8 <ReadCompressedUInt8Data+0x3a0>
   2510c:	b	2526c <ReadCompressedUInt8Data+0x524>
   25110:	cmp	sl, #1
   25114:	blt	2526c <ReadCompressedUInt8Data+0x524>
   25118:	mov	r8, sp
   2511c:	mov	r4, sl
   25120:	mov	r0, r7
   25124:	mov	r1, r6
   25128:	mov	r2, r8
   2512c:	mov	r3, r9
   25130:	bl	34ac <InflateData>
   25134:	ldr	r0, [sp]
   25138:	subs	r4, r4, #1
   2513c:	strb	r0, [r5], #1
   25140:	bne	25120 <ReadCompressedUInt8Data+0x3d8>
   25144:	b	2526c <ReadCompressedUInt8Data+0x524>
   25148:	cmp	sl, #1
   2514c:	blt	2526c <ReadCompressedUInt8Data+0x524>
   25150:	mov	r8, sp
   25154:	mov	r4, sl
   25158:	mov	r0, r7
   2515c:	mov	r1, r6
   25160:	mov	r2, r8
   25164:	mov	r3, r9
   25168:	bl	34ac <InflateData>
   2516c:	ldr	r0, [sp]
   25170:	subs	r4, r4, #1
   25174:	strb	r0, [r5], #1
   25178:	bne	25158 <ReadCompressedUInt8Data+0x410>
   2517c:	b	2526c <ReadCompressedUInt8Data+0x524>
   25180:	cmp	sl, #1
   25184:	blt	2526c <ReadCompressedUInt8Data+0x524>
   25188:	mov	r8, sp
   2518c:	mov	r4, sl
   25190:	mov	r0, r7
   25194:	mov	r1, r6
   25198:	mov	r2, r8
   2519c:	mov	r3, r9
   251a0:	bl	34ac <InflateData>
   251a4:	vldr	s0, [sp]
   251a8:	subs	r4, r4, #1
   251ac:	vcvt.u32.f32	s0, s0
   251b0:	vmov	r0, s0
   251b4:	strb	r0, [r5], #1
   251b8:	bne	25190 <ReadCompressedUInt8Data+0x448>
   251bc:	b	2526c <ReadCompressedUInt8Data+0x524>
   251c0:	cmp	sl, #1
   251c4:	blt	2526c <ReadCompressedUInt8Data+0x524>
   251c8:	mov	r8, sp
   251cc:	mov	r4, sl
   251d0:	mov	r0, r7
   251d4:	mov	r1, r6
   251d8:	mov	r2, r8
   251dc:	mov	r3, r9
   251e0:	bl	34ac <InflateData>
   251e4:	vldr	d16, [sp]
   251e8:	subs	r4, r4, #1
   251ec:	vcvt.u32.f64	s0, d16
   251f0:	vmov	r0, s0
   251f4:	strb	r0, [r5], #1
   251f8:	bne	251d0 <ReadCompressedUInt8Data+0x488>
   251fc:	b	2526c <ReadCompressedUInt8Data+0x524>
   25200:	cmp	sl, #1
   25204:	blt	2526c <ReadCompressedUInt8Data+0x524>
   25208:	mov	r8, sp
   2520c:	mov	r4, sl
   25210:	mov	r0, r7
   25214:	mov	r1, r6
   25218:	mov	r2, r8
   2521c:	mov	r3, r9
   25220:	bl	34ac <InflateData>
   25224:	ldrb	r0, [sp]
   25228:	subs	r4, r4, #1
   2522c:	strb	r0, [r5], #1
   25230:	bne	25210 <ReadCompressedUInt8Data+0x4c8>
   25234:	b	2526c <ReadCompressedUInt8Data+0x524>
   25238:	cmp	sl, #1
   2523c:	blt	2526c <ReadCompressedUInt8Data+0x524>
   25240:	mov	r8, sp
   25244:	mov	r4, sl
   25248:	mov	r0, r7
   2524c:	mov	r1, r6
   25250:	mov	r2, r8
   25254:	mov	r3, r9
   25258:	bl	34ac <InflateData>
   2525c:	ldrb	r0, [sp]
   25260:	subs	r4, r4, #1
   25264:	strb	r0, [r5], #1
   25268:	bne	25248 <ReadCompressedUInt8Data+0x500>
   2526c:	mul	r0, r9, sl
   25270:	sub	sp, fp, #28
   25274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025278 <ReadCompressedCharData>:
   25278:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2527c:	add	fp, sp, #24
   25280:	cmp	r0, #0
   25284:	mov	r9, #0
   25288:	movne	r5, r2
   2528c:	cmpne	r2, #0
   25290:	bne	2529c <ReadCompressedCharData+0x24>
   25294:	mov	r0, r9
   25298:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2529c:	mov	r6, r0
   252a0:	ldr	r0, [r0]
   252a4:	cmp	r0, #0
   252a8:	beq	25294 <ReadCompressedCharData+0x1c>
   252ac:	ldr	r4, [fp, #8]
   252b0:	mov	r0, r3
   252b4:	mov	r7, r3
   252b8:	mov	r8, r1
   252bc:	bl	1924 <Mat_SizeOf@plt>
   252c0:	mov	r9, r0
   252c4:	sub	r0, r7, #2
   252c8:	cmp	r0, #15
   252cc:	bhi	25380 <ReadCompressedCharData+0x108>
   252d0:	add	r1, pc, #4
   252d4:	ldr	r0, [r1, r0, lsl #2]
   252d8:	add	pc, r1, r0
   252dc:	.word	0x00000040
   252e0:	.word	0x000000a4
   252e4:	.word	0x00000060
   252e8:	.word	0x000000a4
   252ec:	.word	0x000000a4
   252f0:	.word	0x000000a4
   252f4:	.word	0x000000a4
   252f8:	.word	0x000000a4
   252fc:	.word	0x000000a4
   25300:	.word	0x000000a4
   25304:	.word	0x000000a4
   25308:	.word	0x000000a4
   2530c:	.word	0x000000a4
   25310:	.word	0x000000a4
   25314:	.word	0x00000040
   25318:	.word	0x00000060
   2531c:	mul	r9, r9, r4
   25320:	mov	r0, r6
   25324:	mov	r1, r8
   25328:	mov	r2, r5
   2532c:	mov	r3, r9
   25330:	bl	34ac <InflateData>
   25334:	mov	r0, r9
   25338:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2533c:	mul	r9, r9, r4
   25340:	mov	r0, r6
   25344:	mov	r1, r8
   25348:	mov	r2, r5
   2534c:	mov	r3, r9
   25350:	bl	34ac <InflateData>
   25354:	ldr	r0, [r6, #20]
   25358:	cmp	r0, #0
   2535c:	beq	25294 <ReadCompressedCharData+0x1c>
   25360:	cmp	r4, #1
   25364:	blt	25294 <ReadCompressedCharData+0x1c>
   25368:	mov	r0, r5
   2536c:	bl	1c34 <Mat_uint16Swap>
   25370:	add	r5, r5, #2
   25374:	subs	r4, r4, #1
   25378:	bne	25368 <ReadCompressedCharData+0xf0>
   2537c:	b	25294 <ReadCompressedCharData+0x1c>
   25380:	ldr	r0, [pc, #20]	; 2539c <ReadCompressedCharData+0x124>
   25384:	mov	r1, r7
   25388:	add	r0, pc, r0
   2538c:	bl	1810 <Mat_Warning@plt>
   25390:	mul	r9, r9, r4
   25394:	mov	r0, r9
   25398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2539c:	.word	0x0004c850

000253a0 <ReadCharData>:
   253a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   253a4:	add	fp, sp, #24
   253a8:	sub	sp, sp, #8
   253ac:	cmp	r0, #0
   253b0:	mov	r4, #0
   253b4:	movne	r6, r1
   253b8:	cmpne	r1, #0
   253bc:	bne	253cc <ReadCharData+0x2c>
   253c0:	mov	r0, r4
   253c4:	sub	sp, fp, #24
   253c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   253cc:	mov	r7, r0
   253d0:	ldr	r0, [r0]
   253d4:	cmp	r0, #0
   253d8:	beq	253c0 <ReadCharData+0x20>
   253dc:	mov	r0, r2
   253e0:	mov	r5, r3
   253e4:	mov	r9, r2
   253e8:	bl	1924 <Mat_SizeOf@plt>
   253ec:	mov	r8, r0
   253f0:	sub	r0, r9, #2
   253f4:	cmp	r0, #15
   253f8:	bhi	254b0 <ReadCharData+0x110>
   253fc:	add	r1, pc, #4
   25400:	ldr	r0, [r1, r0, lsl #2]
   25404:	add	pc, r1, r0
   25408:	.word	0x00000040
   2540c:	.word	0x000000a8
   25410:	.word	0x0000005c
   25414:	.word	0x000000a8
   25418:	.word	0x000000a8
   2541c:	.word	0x000000a8
   25420:	.word	0x000000a8
   25424:	.word	0x000000a8
   25428:	.word	0x000000a8
   2542c:	.word	0x000000a8
   25430:	.word	0x000000a8
   25434:	.word	0x000000a8
   25438:	.word	0x000000a8
   2543c:	.word	0x000000a8
   25440:	.word	0x00000040
   25444:	.word	0x0000005c
   25448:	ldr	r3, [r7]
   2544c:	mov	r0, r6
   25450:	mov	r1, r8
   25454:	mov	r2, r5
   25458:	sub	sp, fp, #24
   2545c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   25460:	b	18b8 <fread@plt>
   25464:	ldr	r0, [r7, #20]
   25468:	mov	r4, #0
   2546c:	cmp	r0, #0
   25470:	beq	254cc <ReadCharData+0x12c>
   25474:	cmp	r5, #1
   25478:	blt	253c0 <ReadCharData+0x20>
   2547c:	add	r9, sp, #6
   25480:	ldr	r3, [r7]
   25484:	mov	r0, r9
   25488:	mov	r1, r8
   2548c:	mov	r2, #1
   25490:	bl	18b8 <fread@plt>
   25494:	add	r4, r0, r4
   25498:	mov	r0, r9
   2549c:	bl	1c34 <Mat_uint16Swap>
   254a0:	strb	r0, [r6], #1
   254a4:	subs	r5, r5, #1
   254a8:	bne	25480 <ReadCharData+0xe0>
   254ac:	b	253c0 <ReadCharData+0x20>
   254b0:	ldr	r0, [pc, #76]	; 25504 <ReadCharData+0x164>
   254b4:	mov	r1, r9
   254b8:	add	r0, pc, r0
   254bc:	bl	1810 <Mat_Warning@plt>
   254c0:	mov	r0, r4
   254c4:	sub	sp, fp, #24
   254c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   254cc:	cmp	r5, #1
   254d0:	blt	253c0 <ReadCharData+0x20>
   254d4:	add	r9, sp, #6
   254d8:	ldr	r3, [r7]
   254dc:	mov	r0, r9
   254e0:	mov	r1, r8
   254e4:	mov	r2, #1
   254e8:	bl	18b8 <fread@plt>
   254ec:	add	r4, r0, r4
   254f0:	ldrb	r0, [sp, #6]
   254f4:	subs	r5, r5, #1
   254f8:	strb	r0, [r6], #1
   254fc:	bne	254d8 <ReadCharData+0x138>
   25500:	b	253c0 <ReadCharData+0x20>
   25504:	.word	0x0004c76b

00025508 <ReadDataSlabN>:
   25508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2550c:	add	fp, sp, #28
   25510:	sub	sp, sp, #180	; 0xb4
   25514:	vmov.i32	q8, #0	; 0x00000000
   25518:	sub	r5, fp, #72	; 0x48
   2551c:	mov	r6, r0
   25520:	mov	r0, #36	; 0x24
   25524:	mov	r8, r2
   25528:	mov	r2, #0
   2552c:	add	r4, sp, #56	; 0x38
   25530:	mov	r7, r5
   25534:	cmp	r6, #0
   25538:	str	r2, [fp, #-40]	; 0xffffffd8
   2553c:	str	r2, [sp, #128]	; 0x80
   25540:	str	r2, [sp, #88]	; 0x58
   25544:	cmpne	r1, #0
   25548:	vst1.64	{d16-d17}, [r7], r0
   2554c:	str	r2, [r7]
   25550:	add	r7, r5, #16
   25554:	add	r5, sp, #96	; 0x60
   25558:	vst1.64	{d16-d17}, [r7]
   2555c:	add	r7, r5, #16
   25560:	vst1.64	{d16-d17}, [r7]
   25564:	mov	r7, r5
   25568:	vst1.64	{d16-d17}, [r7], r0
   2556c:	str	r2, [r7]
   25570:	add	r7, r4, #16
   25574:	vst1.64	{d16-d17}, [r7]
   25578:	mov	r7, r4
   2557c:	vst1.64	{d16-d17}, [r7], r0
   25580:	mvn	r0, #0
   25584:	str	r2, [r7]
   25588:	bne	25594 <ReadDataSlabN+0x8c>
   2558c:	sub	sp, fp, #28
   25590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25594:	ldr	r2, [fp, #8]
   25598:	cmp	r2, #10
   2559c:	bgt	2558c <ReadDataSlabN+0x84>
   255a0:	ldr	r2, [fp, #24]
   255a4:	cmp	r2, #0
   255a8:	ldrne	r2, [fp, #20]
   255ac:	cmpne	r2, #0
   255b0:	beq	2558c <ReadDataSlabN+0x84>
   255b4:	ldr	r2, [fp, #16]
   255b8:	cmp	r2, #0
   255bc:	addne	r2, sp, #40	; 0x28
   255c0:	stmne	r2, {r1, r3, r6}
   255c4:	ldrne	r1, [r6]
   255c8:	cmpne	r1, #0
   255cc:	beq	2558c <ReadDataSlabN+0x84>
   255d0:	ldr	r0, [sp, #44]	; 0x2c
   255d4:	bl	1924 <Mat_SizeOf@plt>
   255d8:	ldr	ip, [fp, #20]
   255dc:	sub	r2, r8, #6
   255e0:	cmp	r2, #9
   255e4:	bhi	29a38 <ReadDataSlabN+0x4530>
   255e8:	add	r1, pc, #12
   255ec:	ldr	r8, [fp, #12]
   255f0:	str	r0, [sp, #52]	; 0x34
   255f4:	ldr	r2, [r1, r2, lsl #2]
   255f8:	add	pc, r1, r2
   255fc:	.word	0x00000028
   25600:	.word	0x000001b4
   25604:	.word	0x00000340
   25608:	.word	0x000004d0
   2560c:	.word	0x00000660
   25610:	.word	0x000007ec
   25614:	.word	0x00000978
   25618:	.word	0x00000b04
   2561c:	.word	0x00000c90
   25620:	.word	0x00000e18
   25624:	ldr	r0, [ip]
   25628:	mov	r6, r8
   2562c:	mov	r9, #0
   25630:	sub	r0, r0, #1
   25634:	str	r0, [fp, #-72]	; 0xffffffb8
   25638:	ldr	sl, [r8]
   2563c:	ldr	r8, [fp, #24]
   25640:	str	sl, [sp, #56]	; 0x38
   25644:	ldr	r0, [r8]
   25648:	str	r0, [sp, #24]
   2564c:	ldr	r0, [fp, #8]
   25650:	cmp	r0, #2
   25654:	blt	26af0 <ReadDataSlabN+0x15e8>
   25658:	sub	r0, r6, #4
   2565c:	sub	lr, r6, #12
   25660:	mov	r3, #1
   25664:	mov	r2, #0
   25668:	mvn	r5, #15
   2566c:	mov	r4, sl
   25670:	mov	r9, #0
   25674:	add	r6, sp, #56	; 0x38
   25678:	sub	ip, fp, #72	; 0x48
   2567c:	b	256cc <ReadDataSlabN+0x1c4>
   25680:	sub	ip, fp, #72	; 0x48
   25684:	ldr	r1, [fp, #16]
   25688:	str	r4, [r6, r3, lsl #2]
   2568c:	str	r7, [ip, r3, lsl #2]
   25690:	ldr	r2, [sp, #24]
   25694:	add	lr, lr, #4
   25698:	ldr	r1, [r1, r3, lsl #2]
   2569c:	mla	r9, r1, sl, r9
   256a0:	ldr	r1, [fp, #24]
   256a4:	mov	sl, r4
   256a8:	ldr	r4, [sp, #36]	; 0x24
   256ac:	ldr	r1, [r1, r3, lsl #2]
   256b0:	add	r3, r3, #1
   256b4:	mul	r2, r1, r2
   256b8:	ldr	r1, [fp, #8]
   256bc:	str	r2, [sp, #24]
   256c0:	mov	r2, r8
   256c4:	cmp	r3, r1
   256c8:	beq	26af4 <ReadDataSlabN+0x15ec>
   256cc:	ldr	r1, [fp, #20]
   256d0:	add	r2, r2, #1
   256d4:	cmp	r2, #4
   256d8:	ldr	r1, [r1, r3, lsl #2]
   256dc:	str	r4, [r6, r3, lsl #2]
   256e0:	sub	r7, r1, #1
   256e4:	ldr	r1, [fp, #12]
   256e8:	str	r7, [ip, r3, lsl #2]
   256ec:	ldr	r1, [r1, r3, lsl #2]
   256f0:	str	r1, [sp, #36]	; 0x24
   256f4:	bcs	25704 <ReadDataSlabN+0x1fc>
   256f8:	mov	r8, r2
   256fc:	mov	r2, r3
   25700:	b	25798 <ReadDataSlabN+0x290>
   25704:	vmov.i32	q9, #1	; 0x00000001
   25708:	vmov.i32	q10, #1	; 0x00000001
   2570c:	vmov.32	d23[1], r1
   25710:	vmov.i32	q8, #1	; 0x00000001
   25714:	bic	r1, r2, #3
   25718:	mov	r8, r2
   2571c:	bic	ip, r3, #3
   25720:	str	r1, [sp, #32]
   25724:	sub	r2, r3, r1
   25728:	mov	r1, lr
   2572c:	vmov.32	d18[0], r4
   25730:	vmov.32	d20[0], r7
   25734:	vorr	d16, d18, d18
   25738:	vmov.i32	q9, #1	; 0x00000001
   2573c:	vorr	d18, d20, d20
   25740:	vld1.32	{d20-d21}, [r1], r5
   25744:	subs	ip, ip, #4
   25748:	vrev64.32	q12, q10
   2574c:	vext.8	q12, q12, q12, #8
   25750:	vext.8	q11, q11, q12, #12
   25754:	vmul.i32	q9, q9, q12
   25758:	vmul.i32	q8, q11, q8
   2575c:	vorr	q11, q12, q12
   25760:	bne	25740 <ReadDataSlabN+0x238>
   25764:	vext.8	q11, q9, q8, #8
   25768:	vext.8	q12, q8, q8, #8
   2576c:	ldr	r1, [sp, #32]
   25770:	vmul.i32	q0, q9, q11
   25774:	vmul.i32	q1, q8, q12
   25778:	cmp	r8, r1
   2577c:	vmul.i32	q8, q0, d0[1]
   25780:	vmul.i32	q9, q1, d2[1]
   25784:	vmov.32	r7, d16[0]
   25788:	vmov.32	r4, d18[0]
   2578c:	beq	25680 <ReadDataSlabN+0x178>
   25790:	vmov.32	r1, d20[0]
   25794:	sub	ip, fp, #72	; 0x48
   25798:	mul	r4, r1, r4
   2579c:	ldr	r1, [r0, r2, lsl #2]
   257a0:	subs	r2, r2, #1
   257a4:	mul	r7, r7, r1
   257a8:	bne	25798 <ReadDataSlabN+0x290>
   257ac:	b	25684 <ReadDataSlabN+0x17c>
   257b0:	ldr	r0, [ip]
   257b4:	mov	r6, r8
   257b8:	mov	r9, #0
   257bc:	sub	r0, r0, #1
   257c0:	str	r0, [fp, #-72]	; 0xffffffb8
   257c4:	ldr	sl, [r8]
   257c8:	ldr	r8, [fp, #24]
   257cc:	str	sl, [sp, #56]	; 0x38
   257d0:	ldr	r0, [r8]
   257d4:	str	r0, [sp, #20]
   257d8:	ldr	r0, [fp, #8]
   257dc:	cmp	r0, #2
   257e0:	blt	26d5c <ReadDataSlabN+0x1854>
   257e4:	sub	r0, r6, #4
   257e8:	sub	lr, r6, #12
   257ec:	mov	r3, #1
   257f0:	mov	r2, #0
   257f4:	mvn	r5, #15
   257f8:	mov	r4, sl
   257fc:	mov	r9, #0
   25800:	add	r6, sp, #56	; 0x38
   25804:	sub	ip, fp, #72	; 0x48
   25808:	b	25858 <ReadDataSlabN+0x350>
   2580c:	sub	ip, fp, #72	; 0x48
   25810:	ldr	r1, [fp, #16]
   25814:	str	r4, [r6, r3, lsl #2]
   25818:	str	r7, [ip, r3, lsl #2]
   2581c:	ldr	r2, [sp, #20]
   25820:	add	lr, lr, #4
   25824:	ldr	r1, [r1, r3, lsl #2]
   25828:	mla	r9, r1, sl, r9
   2582c:	ldr	r1, [fp, #24]
   25830:	mov	sl, r4
   25834:	ldr	r4, [sp, #36]	; 0x24
   25838:	ldr	r1, [r1, r3, lsl #2]
   2583c:	add	r3, r3, #1
   25840:	mul	r2, r1, r2
   25844:	ldr	r1, [fp, #8]
   25848:	str	r2, [sp, #20]
   2584c:	mov	r2, r8
   25850:	cmp	r3, r1
   25854:	beq	26d60 <ReadDataSlabN+0x1858>
   25858:	ldr	r1, [fp, #20]
   2585c:	add	r2, r2, #1
   25860:	cmp	r2, #4
   25864:	ldr	r1, [r1, r3, lsl #2]
   25868:	str	r4, [r6, r3, lsl #2]
   2586c:	sub	r7, r1, #1
   25870:	ldr	r1, [fp, #12]
   25874:	str	r7, [ip, r3, lsl #2]
   25878:	ldr	r1, [r1, r3, lsl #2]
   2587c:	str	r1, [sp, #36]	; 0x24
   25880:	bcs	25890 <ReadDataSlabN+0x388>
   25884:	mov	r8, r2
   25888:	mov	r2, r3
   2588c:	b	25924 <ReadDataSlabN+0x41c>
   25890:	vmov.i32	q9, #1	; 0x00000001
   25894:	vmov.i32	q10, #1	; 0x00000001
   25898:	vmov.32	d23[1], r1
   2589c:	vmov.i32	q8, #1	; 0x00000001
   258a0:	bic	r1, r2, #3
   258a4:	mov	r8, r2
   258a8:	bic	ip, r3, #3
   258ac:	str	r1, [sp, #32]
   258b0:	sub	r2, r3, r1
   258b4:	mov	r1, lr
   258b8:	vmov.32	d18[0], r4
   258bc:	vmov.32	d20[0], r7
   258c0:	vorr	d16, d18, d18
   258c4:	vmov.i32	q9, #1	; 0x00000001
   258c8:	vorr	d18, d20, d20
   258cc:	vld1.32	{d20-d21}, [r1], r5
   258d0:	subs	ip, ip, #4
   258d4:	vrev64.32	q12, q10
   258d8:	vext.8	q12, q12, q12, #8
   258dc:	vext.8	q11, q11, q12, #12
   258e0:	vmul.i32	q9, q9, q12
   258e4:	vmul.i32	q8, q11, q8
   258e8:	vorr	q11, q12, q12
   258ec:	bne	258cc <ReadDataSlabN+0x3c4>
   258f0:	vext.8	q11, q9, q8, #8
   258f4:	vext.8	q12, q8, q8, #8
   258f8:	ldr	r1, [sp, #32]
   258fc:	vmul.i32	q0, q9, q11
   25900:	vmul.i32	q1, q8, q12
   25904:	cmp	r8, r1
   25908:	vmul.i32	q8, q0, d0[1]
   2590c:	vmul.i32	q9, q1, d2[1]
   25910:	vmov.32	r7, d16[0]
   25914:	vmov.32	r4, d18[0]
   25918:	beq	2580c <ReadDataSlabN+0x304>
   2591c:	vmov.32	r1, d20[0]
   25920:	sub	ip, fp, #72	; 0x48
   25924:	mul	r4, r1, r4
   25928:	ldr	r1, [r0, r2, lsl #2]
   2592c:	subs	r2, r2, #1
   25930:	mul	r7, r7, r1
   25934:	bne	25924 <ReadDataSlabN+0x41c>
   25938:	b	25810 <ReadDataSlabN+0x308>
   2593c:	ldr	r0, [ip]
   25940:	ldr	r5, [fp, #24]
   25944:	mov	r6, #0
   25948:	sub	r0, r0, #1
   2594c:	str	r0, [fp, #-72]	; 0xffffffb8
   25950:	ldr	r9, [r8]
   25954:	str	r9, [sp, #56]	; 0x38
   25958:	ldr	r0, [r5]
   2595c:	str	r0, [sp, #24]
   25960:	ldr	r0, [fp, #8]
   25964:	cmp	r0, #2
   25968:	blt	265a0 <ReadDataSlabN+0x1098>
   2596c:	sub	r0, r8, #4
   25970:	sub	sl, r8, #12
   25974:	mov	r3, #1
   25978:	mov	r4, #0
   2597c:	mvn	lr, #15
   25980:	mov	r7, r9
   25984:	mov	r6, #0
   25988:	add	r2, sp, #56	; 0x38
   2598c:	sub	r5, fp, #72	; 0x48
   25990:	b	259ec <ReadDataSlabN+0x4e4>
   25994:	mov	ip, r8
   25998:	ldr	r8, [fp, #12]
   2599c:	sub	r5, fp, #72	; 0x48
   259a0:	str	r1, [r5, r3, lsl #2]
   259a4:	ldr	r1, [fp, #16]
   259a8:	add	r2, sp, #56	; 0x38
   259ac:	ldr	r4, [sp, #24]
   259b0:	add	sl, sl, #4
   259b4:	str	r7, [r2, r3, lsl #2]
   259b8:	ldr	r1, [r1, r3, lsl #2]
   259bc:	mla	r6, r1, r9, r6
   259c0:	ldr	r1, [fp, #24]
   259c4:	mov	r9, r7
   259c8:	ldr	r7, [sp, #32]
   259cc:	ldr	r1, [r1, r3, lsl #2]
   259d0:	add	r3, r3, #1
   259d4:	mul	r4, r1, r4
   259d8:	ldr	r1, [fp, #8]
   259dc:	str	r4, [sp, #24]
   259e0:	ldr	r4, [sp, #36]	; 0x24
   259e4:	cmp	r3, r1
   259e8:	beq	265a0 <ReadDataSlabN+0x1098>
   259ec:	ldr	r1, [ip, r3, lsl #2]
   259f0:	str	r7, [r2, r3, lsl #2]
   259f4:	add	r4, r4, #1
   259f8:	cmp	r4, #4
   259fc:	str	r4, [sp, #36]	; 0x24
   25a00:	sub	r1, r1, #1
   25a04:	str	r1, [r5, r3, lsl #2]
   25a08:	ldr	r2, [r8, r3, lsl #2]
   25a0c:	str	r2, [sp, #32]
   25a10:	bcs	25a20 <ReadDataSlabN+0x518>
   25a14:	mov	r4, r2
   25a18:	mov	r2, r3
   25a1c:	b	25ab4 <ReadDataSlabN+0x5ac>
   25a20:	vmov.i32	q9, #1	; 0x00000001
   25a24:	vmov.i32	q10, #1	; 0x00000001
   25a28:	vmov.32	d23[1], r2
   25a2c:	vmov.i32	q8, #1	; 0x00000001
   25a30:	bic	r5, r4, #3
   25a34:	mov	r8, ip
   25a38:	bic	ip, r3, #3
   25a3c:	sub	r2, r3, r5
   25a40:	vmov.32	d18[0], r7
   25a44:	vmov.32	d20[0], r1
   25a48:	mov	r1, sl
   25a4c:	vorr	d16, d18, d18
   25a50:	vmov.i32	q9, #1	; 0x00000001
   25a54:	vorr	d18, d20, d20
   25a58:	vld1.32	{d20-d21}, [r1], lr
   25a5c:	subs	ip, ip, #4
   25a60:	vrev64.32	q12, q10
   25a64:	vext.8	q12, q12, q12, #8
   25a68:	vext.8	q11, q11, q12, #12
   25a6c:	vmul.i32	q9, q9, q12
   25a70:	vmul.i32	q8, q11, q8
   25a74:	vorr	q11, q12, q12
   25a78:	bne	25a58 <ReadDataSlabN+0x550>
   25a7c:	vext.8	q11, q9, q8, #8
   25a80:	vext.8	q12, q8, q8, #8
   25a84:	cmp	r4, r5
   25a88:	vmul.i32	q0, q9, q11
   25a8c:	vmul.i32	q1, q8, q12
   25a90:	vmul.i32	q8, q0, d0[1]
   25a94:	vmul.i32	q9, q1, d2[1]
   25a98:	vmov.32	r1, d16[0]
   25a9c:	vmov.32	r7, d18[0]
   25aa0:	beq	25994 <ReadDataSlabN+0x48c>
   25aa4:	vmov.32	r4, d20[0]
   25aa8:	mov	ip, r8
   25aac:	ldr	r8, [fp, #12]
   25ab0:	sub	r5, fp, #72	; 0x48
   25ab4:	mul	r7, r4, r7
   25ab8:	ldr	r4, [r0, r2, lsl #2]
   25abc:	subs	r2, r2, #1
   25ac0:	mul	r1, r1, r4
   25ac4:	bne	25ab4 <ReadDataSlabN+0x5ac>
   25ac8:	b	259a0 <ReadDataSlabN+0x498>
   25acc:	ldr	r0, [ip]
   25ad0:	ldr	r5, [fp, #24]
   25ad4:	mov	r6, #0
   25ad8:	sub	r0, r0, #1
   25adc:	str	r0, [fp, #-72]	; 0xffffffb8
   25ae0:	ldr	r9, [r8]
   25ae4:	str	r9, [sp, #56]	; 0x38
   25ae8:	ldr	r0, [r5]
   25aec:	str	r0, [sp, #24]
   25af0:	ldr	r0, [fp, #8]
   25af4:	cmp	r0, #2
   25af8:	blt	26848 <ReadDataSlabN+0x1340>
   25afc:	sub	r0, r8, #4
   25b00:	sub	sl, r8, #12
   25b04:	mov	r3, #1
   25b08:	mov	r4, #0
   25b0c:	mvn	lr, #15
   25b10:	mov	r7, r9
   25b14:	mov	r6, #0
   25b18:	add	r2, sp, #56	; 0x38
   25b1c:	sub	r5, fp, #72	; 0x48
   25b20:	b	25b7c <ReadDataSlabN+0x674>
   25b24:	mov	ip, r8
   25b28:	ldr	r8, [fp, #12]
   25b2c:	sub	r5, fp, #72	; 0x48
   25b30:	str	r1, [r5, r3, lsl #2]
   25b34:	ldr	r1, [fp, #16]
   25b38:	add	r2, sp, #56	; 0x38
   25b3c:	ldr	r4, [sp, #24]
   25b40:	add	sl, sl, #4
   25b44:	str	r7, [r2, r3, lsl #2]
   25b48:	ldr	r1, [r1, r3, lsl #2]
   25b4c:	mla	r6, r1, r9, r6
   25b50:	ldr	r1, [fp, #24]
   25b54:	mov	r9, r7
   25b58:	ldr	r7, [sp, #32]
   25b5c:	ldr	r1, [r1, r3, lsl #2]
   25b60:	add	r3, r3, #1
   25b64:	mul	r4, r1, r4
   25b68:	ldr	r1, [fp, #8]
   25b6c:	str	r4, [sp, #24]
   25b70:	ldr	r4, [sp, #36]	; 0x24
   25b74:	cmp	r3, r1
   25b78:	beq	26848 <ReadDataSlabN+0x1340>
   25b7c:	ldr	r1, [ip, r3, lsl #2]
   25b80:	str	r7, [r2, r3, lsl #2]
   25b84:	add	r4, r4, #1
   25b88:	cmp	r4, #4
   25b8c:	str	r4, [sp, #36]	; 0x24
   25b90:	sub	r1, r1, #1
   25b94:	str	r1, [r5, r3, lsl #2]
   25b98:	ldr	r2, [r8, r3, lsl #2]
   25b9c:	str	r2, [sp, #32]
   25ba0:	bcs	25bb0 <ReadDataSlabN+0x6a8>
   25ba4:	mov	r4, r2
   25ba8:	mov	r2, r3
   25bac:	b	25c44 <ReadDataSlabN+0x73c>
   25bb0:	vmov.i32	q9, #1	; 0x00000001
   25bb4:	vmov.i32	q10, #1	; 0x00000001
   25bb8:	vmov.32	d23[1], r2
   25bbc:	vmov.i32	q8, #1	; 0x00000001
   25bc0:	bic	r5, r4, #3
   25bc4:	mov	r8, ip
   25bc8:	bic	ip, r3, #3
   25bcc:	sub	r2, r3, r5
   25bd0:	vmov.32	d18[0], r7
   25bd4:	vmov.32	d20[0], r1
   25bd8:	mov	r1, sl
   25bdc:	vorr	d16, d18, d18
   25be0:	vmov.i32	q9, #1	; 0x00000001
   25be4:	vorr	d18, d20, d20
   25be8:	vld1.32	{d20-d21}, [r1], lr
   25bec:	subs	ip, ip, #4
   25bf0:	vrev64.32	q12, q10
   25bf4:	vext.8	q12, q12, q12, #8
   25bf8:	vext.8	q11, q11, q12, #12
   25bfc:	vmul.i32	q9, q9, q12
   25c00:	vmul.i32	q8, q11, q8
   25c04:	vorr	q11, q12, q12
   25c08:	bne	25be8 <ReadDataSlabN+0x6e0>
   25c0c:	vext.8	q11, q9, q8, #8
   25c10:	vext.8	q12, q8, q8, #8
   25c14:	cmp	r4, r5
   25c18:	vmul.i32	q0, q9, q11
   25c1c:	vmul.i32	q1, q8, q12
   25c20:	vmul.i32	q8, q0, d0[1]
   25c24:	vmul.i32	q9, q1, d2[1]
   25c28:	vmov.32	r1, d16[0]
   25c2c:	vmov.32	r7, d18[0]
   25c30:	beq	25b24 <ReadDataSlabN+0x61c>
   25c34:	vmov.32	r4, d20[0]
   25c38:	mov	ip, r8
   25c3c:	ldr	r8, [fp, #12]
   25c40:	sub	r5, fp, #72	; 0x48
   25c44:	mul	r7, r4, r7
   25c48:	ldr	r4, [r0, r2, lsl #2]
   25c4c:	subs	r2, r2, #1
   25c50:	mul	r1, r1, r4
   25c54:	bne	25c44 <ReadDataSlabN+0x73c>
   25c58:	b	25b30 <ReadDataSlabN+0x628>
   25c5c:	ldr	r0, [ip]
   25c60:	mov	r6, r8
   25c64:	mov	r9, #0
   25c68:	sub	r0, r0, #1
   25c6c:	str	r0, [fp, #-72]	; 0xffffffb8
   25c70:	ldr	sl, [r8]
   25c74:	ldr	r8, [fp, #24]
   25c78:	str	sl, [sp, #56]	; 0x38
   25c7c:	ldr	r0, [r8]
   25c80:	str	r0, [sp, #20]
   25c84:	ldr	r0, [fp, #8]
   25c88:	cmp	r0, #2
   25c8c:	blt	26fc0 <ReadDataSlabN+0x1ab8>
   25c90:	sub	r0, r6, #4
   25c94:	sub	lr, r6, #12
   25c98:	mov	r3, #1
   25c9c:	mov	r2, #0
   25ca0:	mvn	r5, #15
   25ca4:	mov	r4, sl
   25ca8:	mov	r9, #0
   25cac:	add	r6, sp, #56	; 0x38
   25cb0:	sub	ip, fp, #72	; 0x48
   25cb4:	b	25d04 <ReadDataSlabN+0x7fc>
   25cb8:	sub	ip, fp, #72	; 0x48
   25cbc:	ldr	r1, [fp, #16]
   25cc0:	str	r4, [r6, r3, lsl #2]
   25cc4:	str	r7, [ip, r3, lsl #2]
   25cc8:	ldr	r2, [sp, #20]
   25ccc:	add	lr, lr, #4
   25cd0:	ldr	r1, [r1, r3, lsl #2]
   25cd4:	mla	r9, r1, sl, r9
   25cd8:	ldr	r1, [fp, #24]
   25cdc:	mov	sl, r4
   25ce0:	ldr	r4, [sp, #36]	; 0x24
   25ce4:	ldr	r1, [r1, r3, lsl #2]
   25ce8:	add	r3, r3, #1
   25cec:	mul	r2, r1, r2
   25cf0:	ldr	r1, [fp, #8]
   25cf4:	str	r2, [sp, #20]
   25cf8:	mov	r2, r8
   25cfc:	cmp	r3, r1
   25d00:	beq	26fc4 <ReadDataSlabN+0x1abc>
   25d04:	ldr	r1, [fp, #20]
   25d08:	add	r2, r2, #1
   25d0c:	cmp	r2, #4
   25d10:	ldr	r1, [r1, r3, lsl #2]
   25d14:	str	r4, [r6, r3, lsl #2]
   25d18:	sub	r7, r1, #1
   25d1c:	ldr	r1, [fp, #12]
   25d20:	str	r7, [ip, r3, lsl #2]
   25d24:	ldr	r1, [r1, r3, lsl #2]
   25d28:	str	r1, [sp, #36]	; 0x24
   25d2c:	bcs	25d3c <ReadDataSlabN+0x834>
   25d30:	mov	r8, r2
   25d34:	mov	r2, r3
   25d38:	b	25dd0 <ReadDataSlabN+0x8c8>
   25d3c:	vmov.i32	q9, #1	; 0x00000001
   25d40:	vmov.i32	q10, #1	; 0x00000001
   25d44:	vmov.32	d23[1], r1
   25d48:	vmov.i32	q8, #1	; 0x00000001
   25d4c:	bic	r1, r2, #3
   25d50:	mov	r8, r2
   25d54:	bic	ip, r3, #3
   25d58:	str	r1, [sp, #32]
   25d5c:	sub	r2, r3, r1
   25d60:	mov	r1, lr
   25d64:	vmov.32	d18[0], r4
   25d68:	vmov.32	d20[0], r7
   25d6c:	vorr	d16, d18, d18
   25d70:	vmov.i32	q9, #1	; 0x00000001
   25d74:	vorr	d18, d20, d20
   25d78:	vld1.32	{d20-d21}, [r1], r5
   25d7c:	subs	ip, ip, #4
   25d80:	vrev64.32	q12, q10
   25d84:	vext.8	q12, q12, q12, #8
   25d88:	vext.8	q11, q11, q12, #12
   25d8c:	vmul.i32	q9, q9, q12
   25d90:	vmul.i32	q8, q11, q8
   25d94:	vorr	q11, q12, q12
   25d98:	bne	25d78 <ReadDataSlabN+0x870>
   25d9c:	vext.8	q11, q9, q8, #8
   25da0:	vext.8	q12, q8, q8, #8
   25da4:	ldr	r1, [sp, #32]
   25da8:	vmul.i32	q0, q9, q11
   25dac:	vmul.i32	q1, q8, q12
   25db0:	cmp	r8, r1
   25db4:	vmul.i32	q8, q0, d0[1]
   25db8:	vmul.i32	q9, q1, d2[1]
   25dbc:	vmov.32	r7, d16[0]
   25dc0:	vmov.32	r4, d18[0]
   25dc4:	beq	25cb8 <ReadDataSlabN+0x7b0>
   25dc8:	vmov.32	r1, d20[0]
   25dcc:	sub	ip, fp, #72	; 0x48
   25dd0:	mul	r4, r1, r4
   25dd4:	ldr	r1, [r0, r2, lsl #2]
   25dd8:	subs	r2, r2, #1
   25ddc:	mul	r7, r7, r1
   25de0:	bne	25dd0 <ReadDataSlabN+0x8c8>
   25de4:	b	25cbc <ReadDataSlabN+0x7b4>
   25de8:	ldr	r0, [ip]
   25dec:	mov	r6, r8
   25df0:	mov	r9, #0
   25df4:	sub	r0, r0, #1
   25df8:	str	r0, [fp, #-72]	; 0xffffffb8
   25dfc:	ldr	sl, [r8]
   25e00:	ldr	r8, [fp, #24]
   25e04:	str	sl, [sp, #56]	; 0x38
   25e08:	ldr	r0, [r8]
   25e0c:	str	r0, [sp, #20]
   25e10:	ldr	r0, [fp, #8]
   25e14:	cmp	r0, #2
   25e18:	blt	27224 <ReadDataSlabN+0x1d1c>
   25e1c:	sub	r0, r6, #4
   25e20:	sub	lr, r6, #12
   25e24:	mov	r3, #1
   25e28:	mov	r2, #0
   25e2c:	mvn	r5, #15
   25e30:	mov	r4, sl
   25e34:	mov	r9, #0
   25e38:	add	r6, sp, #56	; 0x38
   25e3c:	sub	ip, fp, #72	; 0x48
   25e40:	b	25e90 <ReadDataSlabN+0x988>
   25e44:	sub	ip, fp, #72	; 0x48
   25e48:	ldr	r1, [fp, #16]
   25e4c:	str	r4, [r6, r3, lsl #2]
   25e50:	str	r7, [ip, r3, lsl #2]
   25e54:	ldr	r2, [sp, #20]
   25e58:	add	lr, lr, #4
   25e5c:	ldr	r1, [r1, r3, lsl #2]
   25e60:	mla	r9, r1, sl, r9
   25e64:	ldr	r1, [fp, #24]
   25e68:	mov	sl, r4
   25e6c:	ldr	r4, [sp, #36]	; 0x24
   25e70:	ldr	r1, [r1, r3, lsl #2]
   25e74:	add	r3, r3, #1
   25e78:	mul	r2, r1, r2
   25e7c:	ldr	r1, [fp, #8]
   25e80:	str	r2, [sp, #20]
   25e84:	mov	r2, r8
   25e88:	cmp	r3, r1
   25e8c:	beq	27228 <ReadDataSlabN+0x1d20>
   25e90:	ldr	r1, [fp, #20]
   25e94:	add	r2, r2, #1
   25e98:	cmp	r2, #4
   25e9c:	ldr	r1, [r1, r3, lsl #2]
   25ea0:	str	r4, [r6, r3, lsl #2]
   25ea4:	sub	r7, r1, #1
   25ea8:	ldr	r1, [fp, #12]
   25eac:	str	r7, [ip, r3, lsl #2]
   25eb0:	ldr	r1, [r1, r3, lsl #2]
   25eb4:	str	r1, [sp, #36]	; 0x24
   25eb8:	bcs	25ec8 <ReadDataSlabN+0x9c0>
   25ebc:	mov	r8, r2
   25ec0:	mov	r2, r3
   25ec4:	b	25f5c <ReadDataSlabN+0xa54>
   25ec8:	vmov.i32	q9, #1	; 0x00000001
   25ecc:	vmov.i32	q10, #1	; 0x00000001
   25ed0:	vmov.32	d23[1], r1
   25ed4:	vmov.i32	q8, #1	; 0x00000001
   25ed8:	bic	r1, r2, #3
   25edc:	mov	r8, r2
   25ee0:	bic	ip, r3, #3
   25ee4:	str	r1, [sp, #32]
   25ee8:	sub	r2, r3, r1
   25eec:	mov	r1, lr
   25ef0:	vmov.32	d18[0], r4
   25ef4:	vmov.32	d20[0], r7
   25ef8:	vorr	d16, d18, d18
   25efc:	vmov.i32	q9, #1	; 0x00000001
   25f00:	vorr	d18, d20, d20
   25f04:	vld1.32	{d20-d21}, [r1], r5
   25f08:	subs	ip, ip, #4
   25f0c:	vrev64.32	q12, q10
   25f10:	vext.8	q12, q12, q12, #8
   25f14:	vext.8	q11, q11, q12, #12
   25f18:	vmul.i32	q9, q9, q12
   25f1c:	vmul.i32	q8, q11, q8
   25f20:	vorr	q11, q12, q12
   25f24:	bne	25f04 <ReadDataSlabN+0x9fc>
   25f28:	vext.8	q11, q9, q8, #8
   25f2c:	vext.8	q12, q8, q8, #8
   25f30:	ldr	r1, [sp, #32]
   25f34:	vmul.i32	q0, q9, q11
   25f38:	vmul.i32	q1, q8, q12
   25f3c:	cmp	r8, r1
   25f40:	vmul.i32	q8, q0, d0[1]
   25f44:	vmul.i32	q9, q1, d2[1]
   25f48:	vmov.32	r7, d16[0]
   25f4c:	vmov.32	r4, d18[0]
   25f50:	beq	25e44 <ReadDataSlabN+0x93c>
   25f54:	vmov.32	r1, d20[0]
   25f58:	sub	ip, fp, #72	; 0x48
   25f5c:	mul	r4, r1, r4
   25f60:	ldr	r1, [r0, r2, lsl #2]
   25f64:	subs	r2, r2, #1
   25f68:	mul	r7, r7, r1
   25f6c:	bne	25f5c <ReadDataSlabN+0xa54>
   25f70:	b	25e48 <ReadDataSlabN+0x940>
   25f74:	ldr	r0, [ip]
   25f78:	mov	r6, r8
   25f7c:	mov	r9, #0
   25f80:	sub	r0, r0, #1
   25f84:	str	r0, [fp, #-72]	; 0xffffffb8
   25f88:	ldr	sl, [r8]
   25f8c:	ldr	r8, [fp, #24]
   25f90:	str	sl, [sp, #56]	; 0x38
   25f94:	ldr	r0, [r8]
   25f98:	str	r0, [sp, #20]
   25f9c:	ldr	r0, [fp, #8]
   25fa0:	cmp	r0, #2
   25fa4:	blt	27488 <ReadDataSlabN+0x1f80>
   25fa8:	sub	r0, r6, #4
   25fac:	sub	lr, r6, #12
   25fb0:	mov	r3, #1
   25fb4:	mov	r2, #0
   25fb8:	mvn	r5, #15
   25fbc:	mov	r4, sl
   25fc0:	mov	r9, #0
   25fc4:	add	r6, sp, #56	; 0x38
   25fc8:	sub	ip, fp, #72	; 0x48
   25fcc:	b	2601c <ReadDataSlabN+0xb14>
   25fd0:	sub	ip, fp, #72	; 0x48
   25fd4:	ldr	r1, [fp, #16]
   25fd8:	str	r4, [r6, r3, lsl #2]
   25fdc:	str	r7, [ip, r3, lsl #2]
   25fe0:	ldr	r2, [sp, #20]
   25fe4:	add	lr, lr, #4
   25fe8:	ldr	r1, [r1, r3, lsl #2]
   25fec:	mla	r9, r1, sl, r9
   25ff0:	ldr	r1, [fp, #24]
   25ff4:	mov	sl, r4
   25ff8:	ldr	r4, [sp, #36]	; 0x24
   25ffc:	ldr	r1, [r1, r3, lsl #2]
   26000:	add	r3, r3, #1
   26004:	mul	r2, r1, r2
   26008:	ldr	r1, [fp, #8]
   2600c:	str	r2, [sp, #20]
   26010:	mov	r2, r8
   26014:	cmp	r3, r1
   26018:	beq	2748c <ReadDataSlabN+0x1f84>
   2601c:	ldr	r1, [fp, #20]
   26020:	add	r2, r2, #1
   26024:	cmp	r2, #4
   26028:	ldr	r1, [r1, r3, lsl #2]
   2602c:	str	r4, [r6, r3, lsl #2]
   26030:	sub	r7, r1, #1
   26034:	ldr	r1, [fp, #12]
   26038:	str	r7, [ip, r3, lsl #2]
   2603c:	ldr	r1, [r1, r3, lsl #2]
   26040:	str	r1, [sp, #36]	; 0x24
   26044:	bcs	26054 <ReadDataSlabN+0xb4c>
   26048:	mov	r8, r2
   2604c:	mov	r2, r3
   26050:	b	260e8 <ReadDataSlabN+0xbe0>
   26054:	vmov.i32	q9, #1	; 0x00000001
   26058:	vmov.i32	q10, #1	; 0x00000001
   2605c:	vmov.32	d23[1], r1
   26060:	vmov.i32	q8, #1	; 0x00000001
   26064:	bic	r1, r2, #3
   26068:	mov	r8, r2
   2606c:	bic	ip, r3, #3
   26070:	str	r1, [sp, #32]
   26074:	sub	r2, r3, r1
   26078:	mov	r1, lr
   2607c:	vmov.32	d18[0], r4
   26080:	vmov.32	d20[0], r7
   26084:	vorr	d16, d18, d18
   26088:	vmov.i32	q9, #1	; 0x00000001
   2608c:	vorr	d18, d20, d20
   26090:	vld1.32	{d20-d21}, [r1], r5
   26094:	subs	ip, ip, #4
   26098:	vrev64.32	q12, q10
   2609c:	vext.8	q12, q12, q12, #8
   260a0:	vext.8	q11, q11, q12, #12
   260a4:	vmul.i32	q9, q9, q12
   260a8:	vmul.i32	q8, q11, q8
   260ac:	vorr	q11, q12, q12
   260b0:	bne	26090 <ReadDataSlabN+0xb88>
   260b4:	vext.8	q11, q9, q8, #8
   260b8:	vext.8	q12, q8, q8, #8
   260bc:	ldr	r1, [sp, #32]
   260c0:	vmul.i32	q0, q9, q11
   260c4:	vmul.i32	q1, q8, q12
   260c8:	cmp	r8, r1
   260cc:	vmul.i32	q8, q0, d0[1]
   260d0:	vmul.i32	q9, q1, d2[1]
   260d4:	vmov.32	r7, d16[0]
   260d8:	vmov.32	r4, d18[0]
   260dc:	beq	25fd0 <ReadDataSlabN+0xac8>
   260e0:	vmov.32	r1, d20[0]
   260e4:	sub	ip, fp, #72	; 0x48
   260e8:	mul	r4, r1, r4
   260ec:	ldr	r1, [r0, r2, lsl #2]
   260f0:	subs	r2, r2, #1
   260f4:	mul	r7, r7, r1
   260f8:	bne	260e8 <ReadDataSlabN+0xbe0>
   260fc:	b	25fd4 <ReadDataSlabN+0xacc>
   26100:	ldr	r0, [ip]
   26104:	mov	r6, r8
   26108:	mov	r9, #0
   2610c:	sub	r0, r0, #1
   26110:	str	r0, [fp, #-72]	; 0xffffffb8
   26114:	ldr	sl, [r8]
   26118:	ldr	r8, [fp, #24]
   2611c:	str	sl, [sp, #56]	; 0x38
   26120:	ldr	r0, [r8]
   26124:	str	r0, [sp, #20]
   26128:	ldr	r0, [fp, #8]
   2612c:	cmp	r0, #2
   26130:	blt	276ec <ReadDataSlabN+0x21e4>
   26134:	sub	r0, r6, #4
   26138:	sub	lr, r6, #12
   2613c:	mov	r3, #1
   26140:	mov	r2, #0
   26144:	mvn	r5, #15
   26148:	mov	r4, sl
   2614c:	mov	r9, #0
   26150:	add	r6, sp, #56	; 0x38
   26154:	sub	ip, fp, #72	; 0x48
   26158:	b	261a8 <ReadDataSlabN+0xca0>
   2615c:	sub	ip, fp, #72	; 0x48
   26160:	ldr	r1, [fp, #16]
   26164:	str	r4, [r6, r3, lsl #2]
   26168:	str	r7, [ip, r3, lsl #2]
   2616c:	ldr	r2, [sp, #20]
   26170:	add	lr, lr, #4
   26174:	ldr	r1, [r1, r3, lsl #2]
   26178:	mla	r9, r1, sl, r9
   2617c:	ldr	r1, [fp, #24]
   26180:	mov	sl, r4
   26184:	ldr	r4, [sp, #36]	; 0x24
   26188:	ldr	r1, [r1, r3, lsl #2]
   2618c:	add	r3, r3, #1
   26190:	mul	r2, r1, r2
   26194:	ldr	r1, [fp, #8]
   26198:	str	r2, [sp, #20]
   2619c:	mov	r2, r8
   261a0:	cmp	r3, r1
   261a4:	beq	276f0 <ReadDataSlabN+0x21e8>
   261a8:	ldr	r1, [fp, #20]
   261ac:	add	r2, r2, #1
   261b0:	cmp	r2, #4
   261b4:	ldr	r1, [r1, r3, lsl #2]
   261b8:	str	r4, [r6, r3, lsl #2]
   261bc:	sub	r7, r1, #1
   261c0:	ldr	r1, [fp, #12]
   261c4:	str	r7, [ip, r3, lsl #2]
   261c8:	ldr	r1, [r1, r3, lsl #2]
   261cc:	str	r1, [sp, #36]	; 0x24
   261d0:	bcs	261e0 <ReadDataSlabN+0xcd8>
   261d4:	mov	r8, r2
   261d8:	mov	r2, r3
   261dc:	b	26274 <ReadDataSlabN+0xd6c>
   261e0:	vmov.i32	q9, #1	; 0x00000001
   261e4:	vmov.i32	q10, #1	; 0x00000001
   261e8:	vmov.32	d23[1], r1
   261ec:	vmov.i32	q8, #1	; 0x00000001
   261f0:	bic	r1, r2, #3
   261f4:	mov	r8, r2
   261f8:	bic	ip, r3, #3
   261fc:	str	r1, [sp, #32]
   26200:	sub	r2, r3, r1
   26204:	mov	r1, lr
   26208:	vmov.32	d18[0], r4
   2620c:	vmov.32	d20[0], r7
   26210:	vorr	d16, d18, d18
   26214:	vmov.i32	q9, #1	; 0x00000001
   26218:	vorr	d18, d20, d20
   2621c:	vld1.32	{d20-d21}, [r1], r5
   26220:	subs	ip, ip, #4
   26224:	vrev64.32	q12, q10
   26228:	vext.8	q12, q12, q12, #8
   2622c:	vext.8	q11, q11, q12, #12
   26230:	vmul.i32	q9, q9, q12
   26234:	vmul.i32	q8, q11, q8
   26238:	vorr	q11, q12, q12
   2623c:	bne	2621c <ReadDataSlabN+0xd14>
   26240:	vext.8	q11, q9, q8, #8
   26244:	vext.8	q12, q8, q8, #8
   26248:	ldr	r1, [sp, #32]
   2624c:	vmul.i32	q0, q9, q11
   26250:	vmul.i32	q1, q8, q12
   26254:	cmp	r8, r1
   26258:	vmul.i32	q8, q0, d0[1]
   2625c:	vmul.i32	q9, q1, d2[1]
   26260:	vmov.32	r7, d16[0]
   26264:	vmov.32	r4, d18[0]
   26268:	beq	2615c <ReadDataSlabN+0xc54>
   2626c:	vmov.32	r1, d20[0]
   26270:	sub	ip, fp, #72	; 0x48
   26274:	mul	r4, r1, r4
   26278:	ldr	r1, [r0, r2, lsl #2]
   2627c:	subs	r2, r2, #1
   26280:	mul	r7, r7, r1
   26284:	bne	26274 <ReadDataSlabN+0xd6c>
   26288:	b	26160 <ReadDataSlabN+0xc58>
   2628c:	ldr	r0, [ip]
   26290:	mov	r6, r8
   26294:	sub	r0, r0, #1
   26298:	str	r0, [fp, #-72]	; 0xffffffb8
   2629c:	ldr	sl, [r8]
   262a0:	ldr	r8, [fp, #24]
   262a4:	str	sl, [sp, #56]	; 0x38
   262a8:	ldr	r0, [r8]
   262ac:	str	r0, [sp, #20]
   262b0:	ldr	r0, [fp, #8]
   262b4:	cmp	r0, #2
   262b8:	blt	27950 <ReadDataSlabN+0x2448>
   262bc:	sub	r0, r6, #4
   262c0:	sub	lr, r6, #12
   262c4:	add	r6, sp, #56	; 0x38
   262c8:	mov	r3, #1
   262cc:	mov	r9, #0
   262d0:	mvn	r5, #15
   262d4:	mov	r4, sl
   262d8:	mov	r8, #0
   262dc:	mov	ip, r6
   262e0:	sub	r6, fp, #72	; 0x48
   262e4:	b	26334 <ReadDataSlabN+0xe2c>
   262e8:	sub	r6, fp, #72	; 0x48
   262ec:	add	ip, sp, #56	; 0x38
   262f0:	ldr	r1, [fp, #16]
   262f4:	str	r4, [ip, r3, lsl #2]
   262f8:	str	r7, [r6, r3, lsl #2]
   262fc:	ldr	r2, [sp, #20]
   26300:	add	lr, lr, #4
   26304:	ldr	r1, [r1, r3, lsl #2]
   26308:	mla	r8, r1, sl, r8
   2630c:	ldr	r1, [fp, #24]
   26310:	mov	sl, r4
   26314:	ldr	r4, [sp, #36]	; 0x24
   26318:	ldr	r1, [r1, r3, lsl #2]
   2631c:	add	r3, r3, #1
   26320:	mul	r2, r1, r2
   26324:	ldr	r1, [fp, #8]
   26328:	str	r2, [sp, #20]
   2632c:	cmp	r3, r1
   26330:	beq	2795c <ReadDataSlabN+0x2454>
   26334:	ldr	r1, [fp, #20]
   26338:	add	r9, r9, #1
   2633c:	cmp	r9, #4
   26340:	ldr	r1, [r1, r3, lsl #2]
   26344:	str	r4, [ip, r3, lsl #2]
   26348:	sub	r7, r1, #1
   2634c:	ldr	r1, [fp, #12]
   26350:	str	r7, [r6, r3, lsl #2]
   26354:	ldr	r2, [r1, r3, lsl #2]
   26358:	str	r2, [sp, #36]	; 0x24
   2635c:	bcs	2636c <ReadDataSlabN+0xe64>
   26360:	mov	r1, r2
   26364:	mov	r2, r3
   26368:	b	263fc <ReadDataSlabN+0xef4>
   2636c:	vmov.i32	q9, #1	; 0x00000001
   26370:	vmov.i32	q10, #1	; 0x00000001
   26374:	vmov.32	d23[1], r2
   26378:	vmov.i32	q8, #1	; 0x00000001
   2637c:	bic	r6, r9, #3
   26380:	mov	r1, r9
   26384:	bic	ip, r3, #3
   26388:	mov	r1, lr
   2638c:	sub	r2, r3, r6
   26390:	vmov.32	d18[0], r4
   26394:	vmov.32	d20[0], r7
   26398:	vorr	d16, d18, d18
   2639c:	vmov.i32	q9, #1	; 0x00000001
   263a0:	vorr	d18, d20, d20
   263a4:	vld1.32	{d20-d21}, [r1], r5
   263a8:	subs	ip, ip, #4
   263ac:	vrev64.32	q12, q10
   263b0:	vext.8	q12, q12, q12, #8
   263b4:	vext.8	q11, q11, q12, #12
   263b8:	vmul.i32	q9, q9, q12
   263bc:	vmul.i32	q8, q11, q8
   263c0:	vorr	q11, q12, q12
   263c4:	bne	263a4 <ReadDataSlabN+0xe9c>
   263c8:	vext.8	q11, q9, q8, #8
   263cc:	vext.8	q12, q8, q8, #8
   263d0:	cmp	r9, r6
   263d4:	vmul.i32	q0, q9, q11
   263d8:	vmul.i32	q1, q8, q12
   263dc:	vmul.i32	q8, q0, d0[1]
   263e0:	vmul.i32	q9, q1, d2[1]
   263e4:	vmov.32	r7, d16[0]
   263e8:	vmov.32	r4, d18[0]
   263ec:	beq	262e8 <ReadDataSlabN+0xde0>
   263f0:	vmov.32	r1, d20[0]
   263f4:	sub	r6, fp, #72	; 0x48
   263f8:	add	ip, sp, #56	; 0x38
   263fc:	mul	r4, r1, r4
   26400:	ldr	r1, [r0, r2, lsl #2]
   26404:	subs	r2, r2, #1
   26408:	mul	r7, r7, r1
   2640c:	bne	263fc <ReadDataSlabN+0xef4>
   26410:	b	262f0 <ReadDataSlabN+0xde8>
   26414:	ldr	r0, [ip]
   26418:	mov	r6, r8
   2641c:	mov	r9, #0
   26420:	sub	r0, r0, #1
   26424:	str	r0, [fp, #-72]	; 0xffffffb8
   26428:	ldr	sl, [r8]
   2642c:	ldr	r8, [fp, #24]
   26430:	str	sl, [sp, #56]	; 0x38
   26434:	ldr	r0, [r8]
   26438:	str	r0, [sp, #20]
   2643c:	ldr	r0, [fp, #8]
   26440:	cmp	r0, #2
   26444:	blt	27bc4 <ReadDataSlabN+0x26bc>
   26448:	sub	r0, r6, #4
   2644c:	sub	lr, r6, #12
   26450:	mov	r3, #1
   26454:	mov	r2, #0
   26458:	mvn	r5, #15
   2645c:	mov	r4, sl
   26460:	mov	r9, #0
   26464:	add	r6, sp, #56	; 0x38
   26468:	sub	ip, fp, #72	; 0x48
   2646c:	b	264bc <ReadDataSlabN+0xfb4>
   26470:	sub	ip, fp, #72	; 0x48
   26474:	ldr	r1, [fp, #16]
   26478:	str	r4, [r6, r3, lsl #2]
   2647c:	str	r7, [ip, r3, lsl #2]
   26480:	ldr	r2, [sp, #20]
   26484:	add	lr, lr, #4
   26488:	ldr	r1, [r1, r3, lsl #2]
   2648c:	mla	r9, r1, sl, r9
   26490:	ldr	r1, [fp, #24]
   26494:	mov	sl, r4
   26498:	ldr	r4, [sp, #36]	; 0x24
   2649c:	ldr	r1, [r1, r3, lsl #2]
   264a0:	add	r3, r3, #1
   264a4:	mul	r2, r1, r2
   264a8:	ldr	r1, [fp, #8]
   264ac:	str	r2, [sp, #20]
   264b0:	mov	r2, r8
   264b4:	cmp	r3, r1
   264b8:	beq	27bc8 <ReadDataSlabN+0x26c0>
   264bc:	ldr	r1, [fp, #20]
   264c0:	add	r2, r2, #1
   264c4:	cmp	r2, #4
   264c8:	ldr	r1, [r1, r3, lsl #2]
   264cc:	str	r4, [r6, r3, lsl #2]
   264d0:	sub	r7, r1, #1
   264d4:	ldr	r1, [fp, #12]
   264d8:	str	r7, [ip, r3, lsl #2]
   264dc:	ldr	r1, [r1, r3, lsl #2]
   264e0:	str	r1, [sp, #36]	; 0x24
   264e4:	bcs	264f4 <ReadDataSlabN+0xfec>
   264e8:	mov	r8, r2
   264ec:	mov	r2, r3
   264f0:	b	26588 <ReadDataSlabN+0x1080>
   264f4:	vmov.i32	q9, #1	; 0x00000001
   264f8:	vmov.i32	q10, #1	; 0x00000001
   264fc:	vmov.32	d23[1], r1
   26500:	vmov.i32	q8, #1	; 0x00000001
   26504:	bic	r1, r2, #3
   26508:	mov	r8, r2
   2650c:	bic	ip, r3, #3
   26510:	str	r1, [sp, #32]
   26514:	sub	r2, r3, r1
   26518:	mov	r1, lr
   2651c:	vmov.32	d18[0], r4
   26520:	vmov.32	d20[0], r7
   26524:	vorr	d16, d18, d18
   26528:	vmov.i32	q9, #1	; 0x00000001
   2652c:	vorr	d18, d20, d20
   26530:	vld1.32	{d20-d21}, [r1], r5
   26534:	subs	ip, ip, #4
   26538:	vrev64.32	q12, q10
   2653c:	vext.8	q12, q12, q12, #8
   26540:	vext.8	q11, q11, q12, #12
   26544:	vmul.i32	q9, q9, q12
   26548:	vmul.i32	q8, q11, q8
   2654c:	vorr	q11, q12, q12
   26550:	bne	26530 <ReadDataSlabN+0x1028>
   26554:	vext.8	q11, q9, q8, #8
   26558:	vext.8	q12, q8, q8, #8
   2655c:	ldr	r1, [sp, #32]
   26560:	vmul.i32	q0, q9, q11
   26564:	vmul.i32	q1, q8, q12
   26568:	cmp	r8, r1
   2656c:	vmul.i32	q8, q0, d0[1]
   26570:	vmul.i32	q9, q1, d2[1]
   26574:	vmov.32	r7, d16[0]
   26578:	vmov.32	r4, d18[0]
   2657c:	beq	26470 <ReadDataSlabN+0xf68>
   26580:	vmov.32	r1, d20[0]
   26584:	sub	ip, fp, #72	; 0x48
   26588:	mul	r4, r1, r4
   2658c:	ldr	r1, [r0, r2, lsl #2]
   26590:	subs	r2, r2, #1
   26594:	mul	r7, r7, r1
   26598:	bne	26588 <ReadDataSlabN+0x1080>
   2659c:	b	26474 <ReadDataSlabN+0xf6c>
   265a0:	ldr	r0, [sp, #52]	; 0x34
   265a4:	mov	r2, #1
   265a8:	mov	r4, ip
   265ac:	mul	r1, r6, r0
   265b0:	ldr	r0, [sp, #48]	; 0x30
   265b4:	ldr	r0, [r0]
   265b8:	bl	1a2c <fseek@plt>
   265bc:	ldr	r0, [r4]
   265c0:	cmp	r0, #1
   265c4:	bne	27e28 <ReadDataSlabN+0x2920>
   265c8:	ldr	r0, [sp, #24]
   265cc:	sub	r1, fp, #72	; 0x48
   265d0:	add	r2, sp, #96	; 0x60
   265d4:	cmp	r0, #1
   265d8:	add	r0, sp, #56	; 0x38
   265dc:	blt	29a38 <ReadDataSlabN+0x4530>
   265e0:	orr	r0, r0, #4
   265e4:	orr	r4, r2, #4
   265e8:	ldr	r2, [fp, #24]
   265ec:	str	r0, [sp, #32]
   265f0:	ldr	r0, [fp, #16]
   265f4:	str	r4, [sp, #20]
   265f8:	add	r2, r2, #4
   265fc:	add	r3, r0, #4
   26600:	ldr	r0, [fp, #8]
   26604:	str	r2, [sp, #36]	; 0x24
   26608:	str	r3, [sp, #28]
   2660c:	sub	r0, r0, #1
   26610:	str	r0, [sp, #12]
   26614:	orr	r0, r1, #4
   26618:	str	r0, [sp, #8]
   2661c:	mov	r0, #0
   26620:	str	r0, [sp, #16]
   26624:	ldr	r5, [fp, #16]
   26628:	ldr	r0, [r5]
   2662c:	cmp	r0, #0
   26630:	bne	26694 <ReadDataSlabN+0x118c>
   26634:	b	266cc <ReadDataSlabN+0x11c4>
   26638:	ldr	r0, [sp, #8]
   2663c:	mov	r5, r6
   26640:	mov	r2, #1
   26644:	ldr	r6, [r0, r9]
   26648:	ldr	r0, [sp, #52]	; 0x34
   2664c:	mul	r1, r6, r0
   26650:	ldr	r0, [sl]
   26654:	bl	1a2c <fseek@plt>
   26658:	add	r5, r6, r5
   2665c:	mov	r6, r5
   26660:	ldr	r0, [fp, #24]
   26664:	ldr	r2, [sp, #16]
   26668:	ldr	r1, [sp, #24]
   2666c:	ldr	r0, [r0]
   26670:	add	r2, r0, r2
   26674:	mov	r0, #0
   26678:	cmp	r2, r1
   2667c:	str	r2, [sp, #16]
   26680:	bge	2558c <ReadDataSlabN+0x84>
   26684:	ldr	r5, [fp, #16]
   26688:	ldr	r0, [r5]
   2668c:	cmp	r0, #0
   26690:	beq	266cc <ReadDataSlabN+0x11c4>
   26694:	ldr	r8, [sp, #52]	; 0x34
   26698:	ldr	sl, [sp, #48]	; 0x30
   2669c:	mov	r2, #1
   266a0:	mul	r1, r0, r8
   266a4:	ldr	r0, [sl]
   266a8:	bl	1a2c <fseek@plt>
   266ac:	ldr	r0, [r5]
   266b0:	ldr	r2, [sp, #44]	; 0x2c
   266b4:	add	r6, r0, r6
   266b8:	ldr	r0, [sp, #40]	; 0x28
   266bc:	mov	r9, r6
   266c0:	mov	r6, r5
   266c4:	ldr	r5, [fp, #24]
   266c8:	b	266e4 <ReadDataSlabN+0x11dc>
   266cc:	add	sl, sp, #40	; 0x28
   266d0:	mov	r9, r6
   266d4:	mov	r6, r5
   266d8:	ldr	r5, [fp, #24]
   266dc:	ldr	r8, [sp, #52]	; 0x34
   266e0:	ldm	sl, {r0, r2, sl}
   266e4:	ldr	r1, [sp, #16]
   266e8:	ldr	r3, [r5]
   266ec:	add	r1, r0, r1
   266f0:	mov	r0, sl
   266f4:	bl	1f358 <ReadInt8Data>
   266f8:	ldr	r0, [fp, #12]
   266fc:	ldr	r6, [r6]
   26700:	ldr	r1, [r5]
   26704:	mov	r2, #1
   26708:	ldr	r7, [r0]
   2670c:	sub	r0, r7, r6
   26710:	sub	r0, r0, r1
   26714:	mul	r1, r0, r8
   26718:	ldr	r0, [sl]
   2671c:	bl	1a2c <fseek@plt>
   26720:	add	r0, r7, r9
   26724:	sub	r6, r0, r6
   26728:	ldr	r0, [fp, #8]
   2672c:	cmp	r0, #2
   26730:	blt	26660 <ReadDataSlabN+0x1158>
   26734:	ldr	r8, [sp, #12]
   26738:	ldr	r3, [sp, #28]
   2673c:	mov	r9, #0
   26740:	b	2679c <ReadDataSlabN+0x1294>
   26744:	add	r0, sp, #56	; 0x38
   26748:	mov	r4, r6
   2674c:	sub	r1, sl, r7
   26750:	ldr	r5, [sp, #48]	; 0x30
   26754:	mov	r2, #1
   26758:	ldr	r6, [r0, r9]
   2675c:	ldr	r0, [r3, r9]
   26760:	mla	r0, r0, r6, r1
   26764:	ldr	r1, [sp, #52]	; 0x34
   26768:	mul	r1, r0, r1
   2676c:	ldr	r0, [r5]
   26770:	bl	1a2c <fseek@plt>
   26774:	ldr	r3, [sp, #28]
   26778:	add	r1, sl, r4
   2677c:	ldr	r4, [sp, #20]
   26780:	mov	sl, r5
   26784:	sub	r1, r1, r7
   26788:	ldr	r0, [r3, r9]
   2678c:	mla	r6, r0, r6, r1
   26790:	subs	r8, r8, #1
   26794:	add	r9, r9, #4
   26798:	beq	26660 <ReadDataSlabN+0x1158>
   2679c:	ldr	r0, [r4, r9]
   267a0:	ldr	r1, [sp, #36]	; 0x24
   267a4:	add	r0, r0, #1
   267a8:	str	r0, [r4, r9]
   267ac:	ldr	r1, [r1, r9]
   267b0:	sdiv	r2, r0, r1
   267b4:	mls	r0, r2, r1, r0
   267b8:	cmp	r0, #0
   267bc:	bne	26638 <ReadDataSlabN+0x1130>
   267c0:	mov	r0, #0
   267c4:	str	r0, [r4, r9]
   267c8:	ldr	r0, [sp, #32]
   267cc:	ldr	sl, [r0, r9]
   267d0:	sdiv	r0, r6, sl
   267d4:	mls	r7, r0, sl, r6
   267d8:	cmp	r7, #0
   267dc:	bne	26744 <ReadDataSlabN+0x123c>
   267e0:	ldr	r0, [r3, r9]
   267e4:	cmp	r0, #0
   267e8:	beq	26834 <ReadDataSlabN+0x132c>
   267ec:	add	r1, sp, #56	; 0x38
   267f0:	mov	r5, r6
   267f4:	ldr	sl, [sp, #48]	; 0x30
   267f8:	mov	r2, #1
   267fc:	ldr	r6, [r1, r9]
   26800:	ldr	r1, [sp, #52]	; 0x34
   26804:	mul	r0, r0, r1
   26808:	mul	r1, r0, r6
   2680c:	ldr	r0, [sl]
   26810:	bl	1a2c <fseek@plt>
   26814:	ldr	r3, [sp, #28]
   26818:	ldr	r0, [r3, r9]
   2681c:	mla	r5, r0, r6, r5
   26820:	mov	r6, r5
   26824:	subs	r8, r8, #1
   26828:	add	r9, r9, #4
   2682c:	bne	2679c <ReadDataSlabN+0x1294>
   26830:	b	26660 <ReadDataSlabN+0x1158>
   26834:	ldr	sl, [sp, #48]	; 0x30
   26838:	subs	r8, r8, #1
   2683c:	add	r9, r9, #4
   26840:	bne	2679c <ReadDataSlabN+0x1294>
   26844:	b	26660 <ReadDataSlabN+0x1158>
   26848:	ldr	r0, [sp, #52]	; 0x34
   2684c:	mov	r2, #1
   26850:	mov	r4, ip
   26854:	mul	r1, r6, r0
   26858:	ldr	r0, [sp, #48]	; 0x30
   2685c:	ldr	r0, [r0]
   26860:	bl	1a2c <fseek@plt>
   26864:	ldr	r0, [r4]
   26868:	cmp	r0, #1
   2686c:	bne	280e0 <ReadDataSlabN+0x2bd8>
   26870:	ldr	r0, [sp, #24]
   26874:	sub	r1, fp, #72	; 0x48
   26878:	add	r2, sp, #96	; 0x60
   2687c:	cmp	r0, #1
   26880:	add	r0, sp, #56	; 0x38
   26884:	blt	29a38 <ReadDataSlabN+0x4530>
   26888:	orr	r0, r0, #4
   2688c:	orr	r4, r2, #4
   26890:	ldr	r2, [fp, #24]
   26894:	str	r0, [sp, #32]
   26898:	ldr	r0, [fp, #16]
   2689c:	str	r4, [sp, #20]
   268a0:	add	r2, r2, #4
   268a4:	add	r3, r0, #4
   268a8:	ldr	r0, [fp, #8]
   268ac:	str	r2, [sp, #36]	; 0x24
   268b0:	str	r3, [sp, #28]
   268b4:	sub	r0, r0, #1
   268b8:	str	r0, [sp, #12]
   268bc:	orr	r0, r1, #4
   268c0:	str	r0, [sp, #8]
   268c4:	mov	r0, #0
   268c8:	str	r0, [sp, #16]
   268cc:	ldr	r5, [fp, #16]
   268d0:	ldr	r0, [r5]
   268d4:	cmp	r0, #0
   268d8:	bne	2693c <ReadDataSlabN+0x1434>
   268dc:	b	26974 <ReadDataSlabN+0x146c>
   268e0:	ldr	r0, [sp, #8]
   268e4:	mov	r5, r6
   268e8:	mov	r2, #1
   268ec:	ldr	r6, [r0, r9]
   268f0:	ldr	r0, [sp, #52]	; 0x34
   268f4:	mul	r1, r6, r0
   268f8:	ldr	r0, [sl]
   268fc:	bl	1a2c <fseek@plt>
   26900:	add	r5, r6, r5
   26904:	mov	r6, r5
   26908:	ldr	r0, [fp, #24]
   2690c:	ldr	r2, [sp, #16]
   26910:	ldr	r1, [sp, #24]
   26914:	ldr	r0, [r0]
   26918:	add	r2, r0, r2
   2691c:	mov	r0, #0
   26920:	cmp	r2, r1
   26924:	str	r2, [sp, #16]
   26928:	bge	2558c <ReadDataSlabN+0x84>
   2692c:	ldr	r5, [fp, #16]
   26930:	ldr	r0, [r5]
   26934:	cmp	r0, #0
   26938:	beq	26974 <ReadDataSlabN+0x146c>
   2693c:	ldr	r8, [sp, #52]	; 0x34
   26940:	ldr	sl, [sp, #48]	; 0x30
   26944:	mov	r2, #1
   26948:	mul	r1, r0, r8
   2694c:	ldr	r0, [sl]
   26950:	bl	1a2c <fseek@plt>
   26954:	ldr	r0, [r5]
   26958:	ldr	r2, [sp, #44]	; 0x2c
   2695c:	add	r6, r0, r6
   26960:	ldr	r0, [sp, #40]	; 0x28
   26964:	mov	r9, r6
   26968:	mov	r6, r5
   2696c:	ldr	r5, [fp, #24]
   26970:	b	2698c <ReadDataSlabN+0x1484>
   26974:	add	sl, sp, #40	; 0x28
   26978:	mov	r9, r6
   2697c:	mov	r6, r5
   26980:	ldr	r5, [fp, #24]
   26984:	ldr	r8, [sp, #52]	; 0x34
   26988:	ldm	sl, {r0, r2, sl}
   2698c:	ldr	r1, [sp, #16]
   26990:	ldr	r3, [r5]
   26994:	add	r1, r0, r1
   26998:	mov	r0, sl
   2699c:	bl	222e8 <ReadUInt8Data>
   269a0:	ldr	r0, [fp, #12]
   269a4:	ldr	r6, [r6]
   269a8:	ldr	r1, [r5]
   269ac:	mov	r2, #1
   269b0:	ldr	r7, [r0]
   269b4:	sub	r0, r7, r6
   269b8:	sub	r0, r0, r1
   269bc:	mul	r1, r0, r8
   269c0:	ldr	r0, [sl]
   269c4:	bl	1a2c <fseek@plt>
   269c8:	add	r0, r7, r9
   269cc:	sub	r6, r0, r6
   269d0:	ldr	r0, [fp, #8]
   269d4:	cmp	r0, #2
   269d8:	blt	26908 <ReadDataSlabN+0x1400>
   269dc:	ldr	r8, [sp, #12]
   269e0:	ldr	r3, [sp, #28]
   269e4:	mov	r9, #0
   269e8:	b	26a44 <ReadDataSlabN+0x153c>
   269ec:	add	r0, sp, #56	; 0x38
   269f0:	mov	r4, r6
   269f4:	sub	r1, sl, r7
   269f8:	ldr	r5, [sp, #48]	; 0x30
   269fc:	mov	r2, #1
   26a00:	ldr	r6, [r0, r9]
   26a04:	ldr	r0, [r3, r9]
   26a08:	mla	r0, r0, r6, r1
   26a0c:	ldr	r1, [sp, #52]	; 0x34
   26a10:	mul	r1, r0, r1
   26a14:	ldr	r0, [r5]
   26a18:	bl	1a2c <fseek@plt>
   26a1c:	ldr	r3, [sp, #28]
   26a20:	add	r1, sl, r4
   26a24:	ldr	r4, [sp, #20]
   26a28:	mov	sl, r5
   26a2c:	sub	r1, r1, r7
   26a30:	ldr	r0, [r3, r9]
   26a34:	mla	r6, r0, r6, r1
   26a38:	subs	r8, r8, #1
   26a3c:	add	r9, r9, #4
   26a40:	beq	26908 <ReadDataSlabN+0x1400>
   26a44:	ldr	r0, [r4, r9]
   26a48:	ldr	r1, [sp, #36]	; 0x24
   26a4c:	add	r0, r0, #1
   26a50:	str	r0, [r4, r9]
   26a54:	ldr	r1, [r1, r9]
   26a58:	sdiv	r2, r0, r1
   26a5c:	mls	r0, r2, r1, r0
   26a60:	cmp	r0, #0
   26a64:	bne	268e0 <ReadDataSlabN+0x13d8>
   26a68:	mov	r0, #0
   26a6c:	str	r0, [r4, r9]
   26a70:	ldr	r0, [sp, #32]
   26a74:	ldr	sl, [r0, r9]
   26a78:	sdiv	r0, r6, sl
   26a7c:	mls	r7, r0, sl, r6
   26a80:	cmp	r7, #0
   26a84:	bne	269ec <ReadDataSlabN+0x14e4>
   26a88:	ldr	r0, [r3, r9]
   26a8c:	cmp	r0, #0
   26a90:	beq	26adc <ReadDataSlabN+0x15d4>
   26a94:	add	r1, sp, #56	; 0x38
   26a98:	mov	r5, r6
   26a9c:	ldr	sl, [sp, #48]	; 0x30
   26aa0:	mov	r2, #1
   26aa4:	ldr	r6, [r1, r9]
   26aa8:	ldr	r1, [sp, #52]	; 0x34
   26aac:	mul	r0, r0, r1
   26ab0:	mul	r1, r0, r6
   26ab4:	ldr	r0, [sl]
   26ab8:	bl	1a2c <fseek@plt>
   26abc:	ldr	r3, [sp, #28]
   26ac0:	ldr	r0, [r3, r9]
   26ac4:	mla	r5, r0, r6, r5
   26ac8:	mov	r6, r5
   26acc:	subs	r8, r8, #1
   26ad0:	add	r9, r9, #4
   26ad4:	bne	26a44 <ReadDataSlabN+0x153c>
   26ad8:	b	26908 <ReadDataSlabN+0x1400>
   26adc:	ldr	sl, [sp, #48]	; 0x30
   26ae0:	subs	r8, r8, #1
   26ae4:	add	r9, r9, #4
   26ae8:	bne	26a44 <ReadDataSlabN+0x153c>
   26aec:	b	26908 <ReadDataSlabN+0x1400>
   26af0:	add	r6, sp, #56	; 0x38
   26af4:	ldr	r0, [sp, #52]	; 0x34
   26af8:	mov	r2, #1
   26afc:	mul	r1, r9, r0
   26b00:	ldr	r0, [sp, #48]	; 0x30
   26b04:	ldr	r0, [r0]
   26b08:	bl	1a2c <fseek@plt>
   26b0c:	ldr	r0, [fp, #20]
   26b10:	ldr	r0, [r0]
   26b14:	cmp	r0, #1
   26b18:	bne	28398 <ReadDataSlabN+0x2e90>
   26b1c:	ldr	r0, [sp, #24]
   26b20:	sub	r1, fp, #72	; 0x48
   26b24:	cmp	r0, #1
   26b28:	ldr	r0, [fp, #16]
   26b2c:	blt	29a38 <ReadDataSlabN+0x4530>
   26b30:	add	r3, r0, #4
   26b34:	ldr	r0, [fp, #8]
   26b38:	add	r2, sp, #96	; 0x60
   26b3c:	orr	r4, r2, #4
   26b40:	ldr	r2, [fp, #24]
   26b44:	str	r3, [sp, #28]
   26b48:	sub	r0, r0, #1
   26b4c:	add	r2, r2, #4
   26b50:	str	r0, [sp, #16]
   26b54:	orr	r0, r1, #4
   26b58:	str	r2, [sp, #36]	; 0x24
   26b5c:	orr	r2, r6, #4
   26b60:	str	r0, [sp, #12]
   26b64:	mov	r0, #0
   26b68:	str	r2, [sp, #32]
   26b6c:	str	r0, [sp, #20]
   26b70:	ldr	r5, [fp, #16]
   26b74:	ldr	r0, [r5]
   26b78:	cmp	r0, #0
   26b7c:	bne	26bdc <ReadDataSlabN+0x16d4>
   26b80:	b	26c0c <ReadDataSlabN+0x1704>
   26b84:	ldr	r0, [sp, #12]
   26b88:	mov	r2, #1
   26b8c:	ldr	r5, [r0, r8]
   26b90:	ldr	r0, [sp, #52]	; 0x34
   26b94:	mul	r1, r5, r0
   26b98:	ldr	r0, [sp, #48]	; 0x30
   26b9c:	ldr	r0, [r0]
   26ba0:	bl	1a2c <fseek@plt>
   26ba4:	add	r9, r5, r9
   26ba8:	ldr	r0, [fp, #24]
   26bac:	ldr	r2, [sp, #20]
   26bb0:	ldr	r1, [sp, #24]
   26bb4:	ldr	r0, [r0]
   26bb8:	add	r2, r0, r2
   26bbc:	mov	r0, #0
   26bc0:	cmp	r2, r1
   26bc4:	str	r2, [sp, #20]
   26bc8:	bge	2558c <ReadDataSlabN+0x84>
   26bcc:	ldr	r5, [fp, #16]
   26bd0:	ldr	r0, [r5]
   26bd4:	cmp	r0, #0
   26bd8:	beq	26c0c <ReadDataSlabN+0x1704>
   26bdc:	ldr	sl, [sp, #52]	; 0x34
   26be0:	ldr	r8, [sp, #48]	; 0x30
   26be4:	mov	r2, #1
   26be8:	mul	r1, r0, sl
   26bec:	ldr	r0, [r8]
   26bf0:	bl	1a2c <fseek@plt>
   26bf4:	ldr	r0, [r5]
   26bf8:	ldr	r2, [sp, #44]	; 0x2c
   26bfc:	ldr	r6, [fp, #24]
   26c00:	add	r9, r0, r9
   26c04:	ldr	r0, [sp, #40]	; 0x28
   26c08:	b	26c1c <ReadDataSlabN+0x1714>
   26c0c:	add	r8, sp, #40	; 0x28
   26c10:	ldr	r6, [fp, #24]
   26c14:	ldr	sl, [sp, #52]	; 0x34
   26c18:	ldm	r8, {r0, r2, r8}
   26c1c:	ldr	r1, [sp, #20]
   26c20:	ldr	r3, [r6]
   26c24:	add	r1, r0, r1, lsl #3
   26c28:	mov	r0, r8
   26c2c:	bl	3a8c <ReadDoubleData>
   26c30:	ldr	r0, [fp, #12]
   26c34:	ldr	r5, [r5]
   26c38:	ldr	r1, [r6]
   26c3c:	mov	r2, #1
   26c40:	ldr	r7, [r0]
   26c44:	sub	r0, r7, r5
   26c48:	sub	r0, r0, r1
   26c4c:	mul	r1, r0, sl
   26c50:	ldr	r0, [r8]
   26c54:	bl	1a2c <fseek@plt>
   26c58:	add	r0, r7, r9
   26c5c:	sub	r9, r0, r5
   26c60:	ldr	r0, [fp, #8]
   26c64:	cmp	r0, #2
   26c68:	blt	26ba8 <ReadDataSlabN+0x16a0>
   26c6c:	ldr	sl, [sp, #16]
   26c70:	ldr	r3, [sp, #28]
   26c74:	mov	r8, #0
   26c78:	add	r6, sp, #56	; 0x38
   26c7c:	b	26cd0 <ReadDataSlabN+0x17c8>
   26c80:	add	r0, sp, #56	; 0x38
   26c84:	sub	r1, r7, r5
   26c88:	mov	r2, #1
   26c8c:	ldr	r6, [r0, r8]
   26c90:	ldr	r0, [r3, r8]
   26c94:	mla	r0, r0, r6, r1
   26c98:	ldr	r1, [sp, #52]	; 0x34
   26c9c:	mul	r1, r0, r1
   26ca0:	ldr	r0, [sp, #48]	; 0x30
   26ca4:	ldr	r0, [r0]
   26ca8:	bl	1a2c <fseek@plt>
   26cac:	ldr	r3, [sp, #28]
   26cb0:	add	r1, r7, r9
   26cb4:	sub	r1, r1, r5
   26cb8:	ldr	r0, [r3, r8]
   26cbc:	mla	r9, r0, r6, r1
   26cc0:	add	r6, sp, #56	; 0x38
   26cc4:	subs	sl, sl, #1
   26cc8:	add	r8, r8, #4
   26ccc:	beq	26ba8 <ReadDataSlabN+0x16a0>
   26cd0:	ldr	r0, [r4, r8]
   26cd4:	ldr	r1, [sp, #36]	; 0x24
   26cd8:	add	r0, r0, #1
   26cdc:	str	r0, [r4, r8]
   26ce0:	ldr	r1, [r1, r8]
   26ce4:	sdiv	r2, r0, r1
   26ce8:	mls	r0, r2, r1, r0
   26cec:	cmp	r0, #0
   26cf0:	bne	26b84 <ReadDataSlabN+0x167c>
   26cf4:	mov	r0, #0
   26cf8:	str	r0, [r4, r8]
   26cfc:	ldr	r0, [sp, #32]
   26d00:	ldr	r7, [r0, r8]
   26d04:	sdiv	r0, r9, r7
   26d08:	mls	r5, r0, r7, r9
   26d0c:	cmp	r5, #0
   26d10:	bne	26c80 <ReadDataSlabN+0x1778>
   26d14:	ldr	r0, [r3, r8]
   26d18:	cmp	r0, #0
   26d1c:	beq	26cc4 <ReadDataSlabN+0x17bc>
   26d20:	ldr	r1, [sp, #52]	; 0x34
   26d24:	ldr	r5, [r6, r8]
   26d28:	mov	r2, #1
   26d2c:	mul	r0, r0, r1
   26d30:	mul	r1, r0, r5
   26d34:	ldr	r0, [sp, #48]	; 0x30
   26d38:	ldr	r0, [r0]
   26d3c:	bl	1a2c <fseek@plt>
   26d40:	ldr	r3, [sp, #28]
   26d44:	ldr	r0, [r3, r8]
   26d48:	mla	r9, r0, r5, r9
   26d4c:	subs	sl, sl, #1
   26d50:	add	r8, r8, #4
   26d54:	bne	26cd0 <ReadDataSlabN+0x17c8>
   26d58:	b	26ba8 <ReadDataSlabN+0x16a0>
   26d5c:	add	r6, sp, #56	; 0x38
   26d60:	ldr	r0, [sp, #52]	; 0x34
   26d64:	mov	r2, #1
   26d68:	mul	r1, r9, r0
   26d6c:	ldr	r0, [sp, #48]	; 0x30
   26d70:	ldr	r0, [r0]
   26d74:	bl	1a2c <fseek@plt>
   26d78:	ldr	r0, [fp, #20]
   26d7c:	ldr	r0, [r0]
   26d80:	cmp	r0, #1
   26d84:	bne	2863c <ReadDataSlabN+0x3134>
   26d88:	ldr	r0, [sp, #20]
   26d8c:	sub	r1, fp, #72	; 0x48
   26d90:	cmp	r0, #1
   26d94:	ldr	r0, [fp, #16]
   26d98:	blt	29a38 <ReadDataSlabN+0x4530>
   26d9c:	add	r2, sp, #96	; 0x60
   26da0:	add	r3, r0, #4
   26da4:	ldr	r0, [fp, #8]
   26da8:	orr	r4, r2, #4
   26dac:	ldr	r2, [fp, #24]
   26db0:	str	r3, [sp, #28]
   26db4:	sub	r0, r0, #1
   26db8:	add	r2, r2, #4
   26dbc:	str	r0, [sp, #16]
   26dc0:	orr	r0, r1, #4
   26dc4:	str	r2, [sp, #36]	; 0x24
   26dc8:	orr	r2, r6, #4
   26dcc:	mov	r6, #0
   26dd0:	str	r0, [sp, #12]
   26dd4:	str	r2, [sp, #32]
   26dd8:	ldr	r5, [fp, #16]
   26ddc:	ldr	r0, [r5]
   26de0:	cmp	r0, #0
   26de4:	bne	26e40 <ReadDataSlabN+0x1938>
   26de8:	b	26e70 <ReadDataSlabN+0x1968>
   26dec:	ldr	r0, [sp, #12]
   26df0:	mov	r2, #1
   26df4:	ldr	r5, [r0, r8]
   26df8:	ldr	r0, [sp, #52]	; 0x34
   26dfc:	mul	r1, r5, r0
   26e00:	ldr	r0, [sp, #48]	; 0x30
   26e04:	ldr	r0, [r0]
   26e08:	bl	1a2c <fseek@plt>
   26e0c:	add	r9, r5, r9
   26e10:	ldr	r0, [fp, #24]
   26e14:	ldr	r6, [sp, #24]
   26e18:	ldr	r1, [sp, #20]
   26e1c:	ldr	r0, [r0]
   26e20:	add	r6, r0, r6
   26e24:	mov	r0, #0
   26e28:	cmp	r6, r1
   26e2c:	bge	2558c <ReadDataSlabN+0x84>
   26e30:	ldr	r5, [fp, #16]
   26e34:	ldr	r0, [r5]
   26e38:	cmp	r0, #0
   26e3c:	beq	26e70 <ReadDataSlabN+0x1968>
   26e40:	ldr	sl, [sp, #52]	; 0x34
   26e44:	ldr	r8, [sp, #48]	; 0x30
   26e48:	mov	r2, #1
   26e4c:	mul	r1, r0, sl
   26e50:	ldr	r0, [r8]
   26e54:	bl	1a2c <fseek@plt>
   26e58:	ldr	r0, [r5]
   26e5c:	ldr	r2, [sp, #44]	; 0x2c
   26e60:	ldr	r7, [fp, #24]
   26e64:	add	r9, r0, r9
   26e68:	ldr	r0, [sp, #40]	; 0x28
   26e6c:	b	26e80 <ReadDataSlabN+0x1978>
   26e70:	add	r8, sp, #40	; 0x28
   26e74:	ldr	r7, [fp, #24]
   26e78:	ldr	sl, [sp, #52]	; 0x34
   26e7c:	ldm	r8, {r0, r2, r8}
   26e80:	ldr	r3, [r7]
   26e84:	add	r1, r0, r6, lsl #2
   26e88:	mov	r0, r8
   26e8c:	str	r6, [sp, #24]
   26e90:	bl	8d54 <ReadSingleData>
   26e94:	ldr	r0, [fp, #12]
   26e98:	ldr	r5, [r5]
   26e9c:	ldr	r1, [r7]
   26ea0:	mov	r2, #1
   26ea4:	ldr	r6, [r0]
   26ea8:	sub	r0, r6, r5
   26eac:	sub	r0, r0, r1
   26eb0:	mul	r1, r0, sl
   26eb4:	ldr	r0, [r8]
   26eb8:	bl	1a2c <fseek@plt>
   26ebc:	add	r0, r6, r9
   26ec0:	sub	r9, r0, r5
   26ec4:	ldr	r0, [fp, #8]
   26ec8:	cmp	r0, #2
   26ecc:	blt	26e10 <ReadDataSlabN+0x1908>
   26ed0:	ldr	sl, [sp, #16]
   26ed4:	ldr	r3, [sp, #28]
   26ed8:	mov	r8, #0
   26edc:	add	r6, sp, #56	; 0x38
   26ee0:	b	26f34 <ReadDataSlabN+0x1a2c>
   26ee4:	add	r0, sp, #56	; 0x38
   26ee8:	sub	r1, r7, r5
   26eec:	mov	r2, #1
   26ef0:	ldr	r6, [r0, r8]
   26ef4:	ldr	r0, [r3, r8]
   26ef8:	mla	r0, r0, r6, r1
   26efc:	ldr	r1, [sp, #52]	; 0x34
   26f00:	mul	r1, r0, r1
   26f04:	ldr	r0, [sp, #48]	; 0x30
   26f08:	ldr	r0, [r0]
   26f0c:	bl	1a2c <fseek@plt>
   26f10:	ldr	r3, [sp, #28]
   26f14:	add	r1, r7, r9
   26f18:	sub	r1, r1, r5
   26f1c:	ldr	r0, [r3, r8]
   26f20:	mla	r9, r0, r6, r1
   26f24:	add	r6, sp, #56	; 0x38
   26f28:	subs	sl, sl, #1
   26f2c:	add	r8, r8, #4
   26f30:	beq	26e10 <ReadDataSlabN+0x1908>
   26f34:	ldr	r0, [r4, r8]
   26f38:	ldr	r1, [sp, #36]	; 0x24
   26f3c:	add	r0, r0, #1
   26f40:	str	r0, [r4, r8]
   26f44:	ldr	r1, [r1, r8]
   26f48:	sdiv	r2, r0, r1
   26f4c:	mls	r0, r2, r1, r0
   26f50:	cmp	r0, #0
   26f54:	bne	26dec <ReadDataSlabN+0x18e4>
   26f58:	mov	r0, #0
   26f5c:	str	r0, [r4, r8]
   26f60:	ldr	r0, [sp, #32]
   26f64:	ldr	r7, [r0, r8]
   26f68:	sdiv	r0, r9, r7
   26f6c:	mls	r5, r0, r7, r9
   26f70:	cmp	r5, #0
   26f74:	bne	26ee4 <ReadDataSlabN+0x19dc>
   26f78:	ldr	r0, [r3, r8]
   26f7c:	cmp	r0, #0
   26f80:	beq	26f28 <ReadDataSlabN+0x1a20>
   26f84:	ldr	r1, [sp, #52]	; 0x34
   26f88:	ldr	r5, [r6, r8]
   26f8c:	mov	r2, #1
   26f90:	mul	r0, r0, r1
   26f94:	mul	r1, r0, r5
   26f98:	ldr	r0, [sp, #48]	; 0x30
   26f9c:	ldr	r0, [r0]
   26fa0:	bl	1a2c <fseek@plt>
   26fa4:	ldr	r3, [sp, #28]
   26fa8:	ldr	r0, [r3, r8]
   26fac:	mla	r9, r0, r5, r9
   26fb0:	subs	sl, sl, #1
   26fb4:	add	r8, r8, #4
   26fb8:	bne	26f34 <ReadDataSlabN+0x1a2c>
   26fbc:	b	26e10 <ReadDataSlabN+0x1908>
   26fc0:	add	r6, sp, #56	; 0x38
   26fc4:	ldr	r0, [sp, #52]	; 0x34
   26fc8:	mov	r2, #1
   26fcc:	mul	r1, r9, r0
   26fd0:	ldr	r0, [sp, #48]	; 0x30
   26fd4:	ldr	r0, [r0]
   26fd8:	bl	1a2c <fseek@plt>
   26fdc:	ldr	r0, [fp, #20]
   26fe0:	ldr	r0, [r0]
   26fe4:	cmp	r0, #1
   26fe8:	bne	28918 <ReadDataSlabN+0x3410>
   26fec:	ldr	r0, [sp, #20]
   26ff0:	sub	r1, fp, #72	; 0x48
   26ff4:	cmp	r0, #1
   26ff8:	ldr	r0, [fp, #16]
   26ffc:	blt	29a38 <ReadDataSlabN+0x4530>
   27000:	add	r2, sp, #96	; 0x60
   27004:	add	r3, r0, #4
   27008:	ldr	r0, [fp, #8]
   2700c:	orr	r4, r2, #4
   27010:	ldr	r2, [fp, #24]
   27014:	str	r3, [sp, #28]
   27018:	sub	r0, r0, #1
   2701c:	add	r2, r2, #4
   27020:	str	r0, [sp, #16]
   27024:	orr	r0, r1, #4
   27028:	str	r2, [sp, #36]	; 0x24
   2702c:	orr	r2, r6, #4
   27030:	mov	r6, #0
   27034:	str	r0, [sp, #12]
   27038:	str	r2, [sp, #32]
   2703c:	ldr	r5, [fp, #16]
   27040:	ldr	r0, [r5]
   27044:	cmp	r0, #0
   27048:	bne	270a4 <ReadDataSlabN+0x1b9c>
   2704c:	b	270d4 <ReadDataSlabN+0x1bcc>
   27050:	ldr	r0, [sp, #12]
   27054:	mov	r2, #1
   27058:	ldr	r5, [r0, r8]
   2705c:	ldr	r0, [sp, #52]	; 0x34
   27060:	mul	r1, r5, r0
   27064:	ldr	r0, [sp, #48]	; 0x30
   27068:	ldr	r0, [r0]
   2706c:	bl	1a2c <fseek@plt>
   27070:	add	r9, r5, r9
   27074:	ldr	r0, [fp, #24]
   27078:	ldr	r6, [sp, #24]
   2707c:	ldr	r1, [sp, #20]
   27080:	ldr	r0, [r0]
   27084:	add	r6, r0, r6
   27088:	mov	r0, #0
   2708c:	cmp	r6, r1
   27090:	bge	2558c <ReadDataSlabN+0x84>
   27094:	ldr	r5, [fp, #16]
   27098:	ldr	r0, [r5]
   2709c:	cmp	r0, #0
   270a0:	beq	270d4 <ReadDataSlabN+0x1bcc>
   270a4:	ldr	sl, [sp, #52]	; 0x34
   270a8:	ldr	r8, [sp, #48]	; 0x30
   270ac:	mov	r2, #1
   270b0:	mul	r1, r0, sl
   270b4:	ldr	r0, [r8]
   270b8:	bl	1a2c <fseek@plt>
   270bc:	ldr	r0, [r5]
   270c0:	ldr	r2, [sp, #44]	; 0x2c
   270c4:	ldr	r7, [fp, #24]
   270c8:	add	r9, r0, r9
   270cc:	ldr	r0, [sp, #40]	; 0x28
   270d0:	b	270e4 <ReadDataSlabN+0x1bdc>
   270d4:	add	r8, sp, #40	; 0x28
   270d8:	ldr	r7, [fp, #24]
   270dc:	ldr	sl, [sp, #52]	; 0x34
   270e0:	ldm	r8, {r0, r2, r8}
   270e4:	ldr	r3, [r7]
   270e8:	add	r1, r0, r6, lsl #1
   270ec:	mov	r0, r8
   270f0:	str	r6, [sp, #24]
   270f4:	bl	192d0 <ReadInt16Data>
   270f8:	ldr	r0, [fp, #12]
   270fc:	ldr	r5, [r5]
   27100:	ldr	r1, [r7]
   27104:	mov	r2, #1
   27108:	ldr	r6, [r0]
   2710c:	sub	r0, r6, r5
   27110:	sub	r0, r0, r1
   27114:	mul	r1, r0, sl
   27118:	ldr	r0, [r8]
   2711c:	bl	1a2c <fseek@plt>
   27120:	add	r0, r6, r9
   27124:	sub	r9, r0, r5
   27128:	ldr	r0, [fp, #8]
   2712c:	cmp	r0, #2
   27130:	blt	27074 <ReadDataSlabN+0x1b6c>
   27134:	ldr	sl, [sp, #16]
   27138:	ldr	r3, [sp, #28]
   2713c:	mov	r8, #0
   27140:	add	r6, sp, #56	; 0x38
   27144:	b	27198 <ReadDataSlabN+0x1c90>
   27148:	add	r0, sp, #56	; 0x38
   2714c:	sub	r1, r7, r5
   27150:	mov	r2, #1
   27154:	ldr	r6, [r0, r8]
   27158:	ldr	r0, [r3, r8]
   2715c:	mla	r0, r0, r6, r1
   27160:	ldr	r1, [sp, #52]	; 0x34
   27164:	mul	r1, r0, r1
   27168:	ldr	r0, [sp, #48]	; 0x30
   2716c:	ldr	r0, [r0]
   27170:	bl	1a2c <fseek@plt>
   27174:	ldr	r3, [sp, #28]
   27178:	add	r1, r7, r9
   2717c:	sub	r1, r1, r5
   27180:	ldr	r0, [r3, r8]
   27184:	mla	r9, r0, r6, r1
   27188:	add	r6, sp, #56	; 0x38
   2718c:	subs	sl, sl, #1
   27190:	add	r8, r8, #4
   27194:	beq	27074 <ReadDataSlabN+0x1b6c>
   27198:	ldr	r0, [r4, r8]
   2719c:	ldr	r1, [sp, #36]	; 0x24
   271a0:	add	r0, r0, #1
   271a4:	str	r0, [r4, r8]
   271a8:	ldr	r1, [r1, r8]
   271ac:	sdiv	r2, r0, r1
   271b0:	mls	r0, r2, r1, r0
   271b4:	cmp	r0, #0
   271b8:	bne	27050 <ReadDataSlabN+0x1b48>
   271bc:	mov	r0, #0
   271c0:	str	r0, [r4, r8]
   271c4:	ldr	r0, [sp, #32]
   271c8:	ldr	r7, [r0, r8]
   271cc:	sdiv	r0, r9, r7
   271d0:	mls	r5, r0, r7, r9
   271d4:	cmp	r5, #0
   271d8:	bne	27148 <ReadDataSlabN+0x1c40>
   271dc:	ldr	r0, [r3, r8]
   271e0:	cmp	r0, #0
   271e4:	beq	2718c <ReadDataSlabN+0x1c84>
   271e8:	ldr	r1, [sp, #52]	; 0x34
   271ec:	ldr	r5, [r6, r8]
   271f0:	mov	r2, #1
   271f4:	mul	r0, r0, r1
   271f8:	mul	r1, r0, r5
   271fc:	ldr	r0, [sp, #48]	; 0x30
   27200:	ldr	r0, [r0]
   27204:	bl	1a2c <fseek@plt>
   27208:	ldr	r3, [sp, #28]
   2720c:	ldr	r0, [r3, r8]
   27210:	mla	r9, r0, r5, r9
   27214:	subs	sl, sl, #1
   27218:	add	r8, r8, #4
   2721c:	bne	27198 <ReadDataSlabN+0x1c90>
   27220:	b	27074 <ReadDataSlabN+0x1b6c>
   27224:	add	r6, sp, #56	; 0x38
   27228:	ldr	r0, [sp, #52]	; 0x34
   2722c:	mov	r2, #1
   27230:	mul	r1, r9, r0
   27234:	ldr	r0, [sp, #48]	; 0x30
   27238:	ldr	r0, [r0]
   2723c:	bl	1a2c <fseek@plt>
   27240:	ldr	r0, [fp, #20]
   27244:	ldr	r0, [r0]
   27248:	cmp	r0, #1
   2724c:	bne	28bf4 <ReadDataSlabN+0x36ec>
   27250:	ldr	r0, [sp, #20]
   27254:	sub	r1, fp, #72	; 0x48
   27258:	cmp	r0, #1
   2725c:	ldr	r0, [fp, #16]
   27260:	blt	29a38 <ReadDataSlabN+0x4530>
   27264:	add	r2, sp, #96	; 0x60
   27268:	add	r3, r0, #4
   2726c:	ldr	r0, [fp, #8]
   27270:	orr	r4, r2, #4
   27274:	ldr	r2, [fp, #24]
   27278:	str	r3, [sp, #28]
   2727c:	sub	r0, r0, #1
   27280:	add	r2, r2, #4
   27284:	str	r0, [sp, #16]
   27288:	orr	r0, r1, #4
   2728c:	str	r2, [sp, #36]	; 0x24
   27290:	orr	r2, r6, #4
   27294:	mov	r6, #0
   27298:	str	r0, [sp, #12]
   2729c:	str	r2, [sp, #32]
   272a0:	ldr	r5, [fp, #16]
   272a4:	ldr	r0, [r5]
   272a8:	cmp	r0, #0
   272ac:	bne	27308 <ReadDataSlabN+0x1e00>
   272b0:	b	27338 <ReadDataSlabN+0x1e30>
   272b4:	ldr	r0, [sp, #12]
   272b8:	mov	r2, #1
   272bc:	ldr	r5, [r0, r8]
   272c0:	ldr	r0, [sp, #52]	; 0x34
   272c4:	mul	r1, r5, r0
   272c8:	ldr	r0, [sp, #48]	; 0x30
   272cc:	ldr	r0, [r0]
   272d0:	bl	1a2c <fseek@plt>
   272d4:	add	r9, r5, r9
   272d8:	ldr	r0, [fp, #24]
   272dc:	ldr	r6, [sp, #24]
   272e0:	ldr	r1, [sp, #20]
   272e4:	ldr	r0, [r0]
   272e8:	add	r6, r0, r6
   272ec:	mov	r0, #0
   272f0:	cmp	r6, r1
   272f4:	bge	2558c <ReadDataSlabN+0x84>
   272f8:	ldr	r5, [fp, #16]
   272fc:	ldr	r0, [r5]
   27300:	cmp	r0, #0
   27304:	beq	27338 <ReadDataSlabN+0x1e30>
   27308:	ldr	sl, [sp, #52]	; 0x34
   2730c:	ldr	r8, [sp, #48]	; 0x30
   27310:	mov	r2, #1
   27314:	mul	r1, r0, sl
   27318:	ldr	r0, [r8]
   2731c:	bl	1a2c <fseek@plt>
   27320:	ldr	r0, [r5]
   27324:	ldr	r2, [sp, #44]	; 0x2c
   27328:	ldr	r7, [fp, #24]
   2732c:	add	r9, r0, r9
   27330:	ldr	r0, [sp, #40]	; 0x28
   27334:	b	27348 <ReadDataSlabN+0x1e40>
   27338:	add	r8, sp, #40	; 0x28
   2733c:	ldr	r7, [fp, #24]
   27340:	ldr	sl, [sp, #52]	; 0x34
   27344:	ldm	r8, {r0, r2, r8}
   27348:	ldr	r3, [r7]
   2734c:	add	r1, r0, r6, lsl #1
   27350:	mov	r0, r8
   27354:	str	r6, [sp, #24]
   27358:	bl	1c314 <ReadUInt16Data>
   2735c:	ldr	r0, [fp, #12]
   27360:	ldr	r5, [r5]
   27364:	ldr	r1, [r7]
   27368:	mov	r2, #1
   2736c:	ldr	r6, [r0]
   27370:	sub	r0, r6, r5
   27374:	sub	r0, r0, r1
   27378:	mul	r1, r0, sl
   2737c:	ldr	r0, [r8]
   27380:	bl	1a2c <fseek@plt>
   27384:	add	r0, r6, r9
   27388:	sub	r9, r0, r5
   2738c:	ldr	r0, [fp, #8]
   27390:	cmp	r0, #2
   27394:	blt	272d8 <ReadDataSlabN+0x1dd0>
   27398:	ldr	sl, [sp, #16]
   2739c:	ldr	r3, [sp, #28]
   273a0:	mov	r8, #0
   273a4:	add	r6, sp, #56	; 0x38
   273a8:	b	273fc <ReadDataSlabN+0x1ef4>
   273ac:	add	r0, sp, #56	; 0x38
   273b0:	sub	r1, r7, r5
   273b4:	mov	r2, #1
   273b8:	ldr	r6, [r0, r8]
   273bc:	ldr	r0, [r3, r8]
   273c0:	mla	r0, r0, r6, r1
   273c4:	ldr	r1, [sp, #52]	; 0x34
   273c8:	mul	r1, r0, r1
   273cc:	ldr	r0, [sp, #48]	; 0x30
   273d0:	ldr	r0, [r0]
   273d4:	bl	1a2c <fseek@plt>
   273d8:	ldr	r3, [sp, #28]
   273dc:	add	r1, r7, r9
   273e0:	sub	r1, r1, r5
   273e4:	ldr	r0, [r3, r8]
   273e8:	mla	r9, r0, r6, r1
   273ec:	add	r6, sp, #56	; 0x38
   273f0:	subs	sl, sl, #1
   273f4:	add	r8, r8, #4
   273f8:	beq	272d8 <ReadDataSlabN+0x1dd0>
   273fc:	ldr	r0, [r4, r8]
   27400:	ldr	r1, [sp, #36]	; 0x24
   27404:	add	r0, r0, #1
   27408:	str	r0, [r4, r8]
   2740c:	ldr	r1, [r1, r8]
   27410:	sdiv	r2, r0, r1
   27414:	mls	r0, r2, r1, r0
   27418:	cmp	r0, #0
   2741c:	bne	272b4 <ReadDataSlabN+0x1dac>
   27420:	mov	r0, #0
   27424:	str	r0, [r4, r8]
   27428:	ldr	r0, [sp, #32]
   2742c:	ldr	r7, [r0, r8]
   27430:	sdiv	r0, r9, r7
   27434:	mls	r5, r0, r7, r9
   27438:	cmp	r5, #0
   2743c:	bne	273ac <ReadDataSlabN+0x1ea4>
   27440:	ldr	r0, [r3, r8]
   27444:	cmp	r0, #0
   27448:	beq	273f0 <ReadDataSlabN+0x1ee8>
   2744c:	ldr	r1, [sp, #52]	; 0x34
   27450:	ldr	r5, [r6, r8]
   27454:	mov	r2, #1
   27458:	mul	r0, r0, r1
   2745c:	mul	r1, r0, r5
   27460:	ldr	r0, [sp, #48]	; 0x30
   27464:	ldr	r0, [r0]
   27468:	bl	1a2c <fseek@plt>
   2746c:	ldr	r3, [sp, #28]
   27470:	ldr	r0, [r3, r8]
   27474:	mla	r9, r0, r5, r9
   27478:	subs	sl, sl, #1
   2747c:	add	r8, r8, #4
   27480:	bne	273fc <ReadDataSlabN+0x1ef4>
   27484:	b	272d8 <ReadDataSlabN+0x1dd0>
   27488:	add	r6, sp, #56	; 0x38
   2748c:	ldr	r0, [sp, #52]	; 0x34
   27490:	mov	r2, #1
   27494:	mul	r1, r9, r0
   27498:	ldr	r0, [sp, #48]	; 0x30
   2749c:	ldr	r0, [r0]
   274a0:	bl	1a2c <fseek@plt>
   274a4:	ldr	r0, [fp, #20]
   274a8:	ldr	r0, [r0]
   274ac:	cmp	r0, #1
   274b0:	bne	28ed0 <ReadDataSlabN+0x39c8>
   274b4:	ldr	r0, [sp, #20]
   274b8:	sub	r1, fp, #72	; 0x48
   274bc:	cmp	r0, #1
   274c0:	ldr	r0, [fp, #16]
   274c4:	blt	29a38 <ReadDataSlabN+0x4530>
   274c8:	add	r2, sp, #96	; 0x60
   274cc:	add	r3, r0, #4
   274d0:	ldr	r0, [fp, #8]
   274d4:	orr	r4, r2, #4
   274d8:	ldr	r2, [fp, #24]
   274dc:	str	r3, [sp, #28]
   274e0:	sub	r0, r0, #1
   274e4:	add	r2, r2, #4
   274e8:	str	r0, [sp, #16]
   274ec:	orr	r0, r1, #4
   274f0:	str	r2, [sp, #36]	; 0x24
   274f4:	orr	r2, r6, #4
   274f8:	mov	r6, #0
   274fc:	str	r0, [sp, #12]
   27500:	str	r2, [sp, #32]
   27504:	ldr	r5, [fp, #16]
   27508:	ldr	r0, [r5]
   2750c:	cmp	r0, #0
   27510:	bne	2756c <ReadDataSlabN+0x2064>
   27514:	b	2759c <ReadDataSlabN+0x2094>
   27518:	ldr	r0, [sp, #12]
   2751c:	mov	r2, #1
   27520:	ldr	r5, [r0, r8]
   27524:	ldr	r0, [sp, #52]	; 0x34
   27528:	mul	r1, r5, r0
   2752c:	ldr	r0, [sp, #48]	; 0x30
   27530:	ldr	r0, [r0]
   27534:	bl	1a2c <fseek@plt>
   27538:	add	r9, r5, r9
   2753c:	ldr	r0, [fp, #24]
   27540:	ldr	r6, [sp, #24]
   27544:	ldr	r1, [sp, #20]
   27548:	ldr	r0, [r0]
   2754c:	add	r6, r0, r6
   27550:	mov	r0, #0
   27554:	cmp	r6, r1
   27558:	bge	2558c <ReadDataSlabN+0x84>
   2755c:	ldr	r5, [fp, #16]
   27560:	ldr	r0, [r5]
   27564:	cmp	r0, #0
   27568:	beq	2759c <ReadDataSlabN+0x2094>
   2756c:	ldr	sl, [sp, #52]	; 0x34
   27570:	ldr	r8, [sp, #48]	; 0x30
   27574:	mov	r2, #1
   27578:	mul	r1, r0, sl
   2757c:	ldr	r0, [r8]
   27580:	bl	1a2c <fseek@plt>
   27584:	ldr	r0, [r5]
   27588:	ldr	r2, [sp, #44]	; 0x2c
   2758c:	ldr	r7, [fp, #24]
   27590:	add	r9, r0, r9
   27594:	ldr	r0, [sp, #40]	; 0x28
   27598:	b	275ac <ReadDataSlabN+0x20a4>
   2759c:	add	r8, sp, #40	; 0x28
   275a0:	ldr	r7, [fp, #24]
   275a4:	ldr	sl, [sp, #52]	; 0x34
   275a8:	ldm	r8, {r0, r2, r8}
   275ac:	ldr	r3, [r7]
   275b0:	add	r1, r0, r6, lsl #2
   275b4:	mov	r0, r8
   275b8:	str	r6, [sp, #24]
   275bc:	bl	11a80 <ReadInt32Data>
   275c0:	ldr	r0, [fp, #12]
   275c4:	ldr	r5, [r5]
   275c8:	ldr	r1, [r7]
   275cc:	mov	r2, #1
   275d0:	ldr	r6, [r0]
   275d4:	sub	r0, r6, r5
   275d8:	sub	r0, r0, r1
   275dc:	mul	r1, r0, sl
   275e0:	ldr	r0, [r8]
   275e4:	bl	1a2c <fseek@plt>
   275e8:	add	r0, r6, r9
   275ec:	sub	r9, r0, r5
   275f0:	ldr	r0, [fp, #8]
   275f4:	cmp	r0, #2
   275f8:	blt	2753c <ReadDataSlabN+0x2034>
   275fc:	ldr	sl, [sp, #16]
   27600:	ldr	r3, [sp, #28]
   27604:	mov	r8, #0
   27608:	add	r6, sp, #56	; 0x38
   2760c:	b	27660 <ReadDataSlabN+0x2158>
   27610:	add	r0, sp, #56	; 0x38
   27614:	sub	r1, r7, r5
   27618:	mov	r2, #1
   2761c:	ldr	r6, [r0, r8]
   27620:	ldr	r0, [r3, r8]
   27624:	mla	r0, r0, r6, r1
   27628:	ldr	r1, [sp, #52]	; 0x34
   2762c:	mul	r1, r0, r1
   27630:	ldr	r0, [sp, #48]	; 0x30
   27634:	ldr	r0, [r0]
   27638:	bl	1a2c <fseek@plt>
   2763c:	ldr	r3, [sp, #28]
   27640:	add	r1, r7, r9
   27644:	sub	r1, r1, r5
   27648:	ldr	r0, [r3, r8]
   2764c:	mla	r9, r0, r6, r1
   27650:	add	r6, sp, #56	; 0x38
   27654:	subs	sl, sl, #1
   27658:	add	r8, r8, #4
   2765c:	beq	2753c <ReadDataSlabN+0x2034>
   27660:	ldr	r0, [r4, r8]
   27664:	ldr	r1, [sp, #36]	; 0x24
   27668:	add	r0, r0, #1
   2766c:	str	r0, [r4, r8]
   27670:	ldr	r1, [r1, r8]
   27674:	sdiv	r2, r0, r1
   27678:	mls	r0, r2, r1, r0
   2767c:	cmp	r0, #0
   27680:	bne	27518 <ReadDataSlabN+0x2010>
   27684:	mov	r0, #0
   27688:	str	r0, [r4, r8]
   2768c:	ldr	r0, [sp, #32]
   27690:	ldr	r7, [r0, r8]
   27694:	sdiv	r0, r9, r7
   27698:	mls	r5, r0, r7, r9
   2769c:	cmp	r5, #0
   276a0:	bne	27610 <ReadDataSlabN+0x2108>
   276a4:	ldr	r0, [r3, r8]
   276a8:	cmp	r0, #0
   276ac:	beq	27654 <ReadDataSlabN+0x214c>
   276b0:	ldr	r1, [sp, #52]	; 0x34
   276b4:	ldr	r5, [r6, r8]
   276b8:	mov	r2, #1
   276bc:	mul	r0, r0, r1
   276c0:	mul	r1, r0, r5
   276c4:	ldr	r0, [sp, #48]	; 0x30
   276c8:	ldr	r0, [r0]
   276cc:	bl	1a2c <fseek@plt>
   276d0:	ldr	r3, [sp, #28]
   276d4:	ldr	r0, [r3, r8]
   276d8:	mla	r9, r0, r5, r9
   276dc:	subs	sl, sl, #1
   276e0:	add	r8, r8, #4
   276e4:	bne	27660 <ReadDataSlabN+0x2158>
   276e8:	b	2753c <ReadDataSlabN+0x2034>
   276ec:	add	r6, sp, #56	; 0x38
   276f0:	ldr	r0, [sp, #52]	; 0x34
   276f4:	mov	r2, #1
   276f8:	mul	r1, r9, r0
   276fc:	ldr	r0, [sp, #48]	; 0x30
   27700:	ldr	r0, [r0]
   27704:	bl	1a2c <fseek@plt>
   27708:	ldr	r0, [fp, #20]
   2770c:	ldr	r0, [r0]
   27710:	cmp	r0, #1
   27714:	bne	291ac <ReadDataSlabN+0x3ca4>
   27718:	ldr	r0, [sp, #20]
   2771c:	sub	r1, fp, #72	; 0x48
   27720:	cmp	r0, #1
   27724:	ldr	r0, [fp, #16]
   27728:	blt	29a38 <ReadDataSlabN+0x4530>
   2772c:	add	r2, sp, #96	; 0x60
   27730:	add	r3, r0, #4
   27734:	ldr	r0, [fp, #8]
   27738:	orr	r4, r2, #4
   2773c:	ldr	r2, [fp, #24]
   27740:	str	r3, [sp, #28]
   27744:	sub	r0, r0, #1
   27748:	add	r2, r2, #4
   2774c:	str	r0, [sp, #16]
   27750:	orr	r0, r1, #4
   27754:	str	r2, [sp, #36]	; 0x24
   27758:	orr	r2, r6, #4
   2775c:	mov	r6, #0
   27760:	str	r0, [sp, #12]
   27764:	str	r2, [sp, #32]
   27768:	ldr	r5, [fp, #16]
   2776c:	ldr	r0, [r5]
   27770:	cmp	r0, #0
   27774:	bne	277d0 <ReadDataSlabN+0x22c8>
   27778:	b	27800 <ReadDataSlabN+0x22f8>
   2777c:	ldr	r0, [sp, #12]
   27780:	mov	r2, #1
   27784:	ldr	r5, [r0, r8]
   27788:	ldr	r0, [sp, #52]	; 0x34
   2778c:	mul	r1, r5, r0
   27790:	ldr	r0, [sp, #48]	; 0x30
   27794:	ldr	r0, [r0]
   27798:	bl	1a2c <fseek@plt>
   2779c:	add	r9, r5, r9
   277a0:	ldr	r0, [fp, #24]
   277a4:	ldr	r6, [sp, #24]
   277a8:	ldr	r1, [sp, #20]
   277ac:	ldr	r0, [r0]
   277b0:	add	r6, r0, r6
   277b4:	mov	r0, #0
   277b8:	cmp	r6, r1
   277bc:	bge	2558c <ReadDataSlabN+0x84>
   277c0:	ldr	r5, [fp, #16]
   277c4:	ldr	r0, [r5]
   277c8:	cmp	r0, #0
   277cc:	beq	27800 <ReadDataSlabN+0x22f8>
   277d0:	ldr	sl, [sp, #52]	; 0x34
   277d4:	ldr	r8, [sp, #48]	; 0x30
   277d8:	mov	r2, #1
   277dc:	mul	r1, r0, sl
   277e0:	ldr	r0, [r8]
   277e4:	bl	1a2c <fseek@plt>
   277e8:	ldr	r0, [r5]
   277ec:	ldr	r2, [sp, #44]	; 0x2c
   277f0:	ldr	r7, [fp, #24]
   277f4:	add	r9, r0, r9
   277f8:	ldr	r0, [sp, #40]	; 0x28
   277fc:	b	27810 <ReadDataSlabN+0x2308>
   27800:	add	r8, sp, #40	; 0x28
   27804:	ldr	r7, [fp, #24]
   27808:	ldr	sl, [sp, #52]	; 0x34
   2780c:	ldm	r8, {r0, r2, r8}
   27810:	ldr	r3, [r7]
   27814:	add	r1, r0, r6, lsl #2
   27818:	mov	r0, r8
   2781c:	str	r6, [sp, #24]
   27820:	bl	156a8 <ReadUInt32Data>
   27824:	ldr	r0, [fp, #12]
   27828:	ldr	r5, [r5]
   2782c:	ldr	r1, [r7]
   27830:	mov	r2, #1
   27834:	ldr	r6, [r0]
   27838:	sub	r0, r6, r5
   2783c:	sub	r0, r0, r1
   27840:	mul	r1, r0, sl
   27844:	ldr	r0, [r8]
   27848:	bl	1a2c <fseek@plt>
   2784c:	add	r0, r6, r9
   27850:	sub	r9, r0, r5
   27854:	ldr	r0, [fp, #8]
   27858:	cmp	r0, #2
   2785c:	blt	277a0 <ReadDataSlabN+0x2298>
   27860:	ldr	sl, [sp, #16]
   27864:	ldr	r3, [sp, #28]
   27868:	mov	r8, #0
   2786c:	add	r6, sp, #56	; 0x38
   27870:	b	278c4 <ReadDataSlabN+0x23bc>
   27874:	add	r0, sp, #56	; 0x38
   27878:	sub	r1, r7, r5
   2787c:	mov	r2, #1
   27880:	ldr	r6, [r0, r8]
   27884:	ldr	r0, [r3, r8]
   27888:	mla	r0, r0, r6, r1
   2788c:	ldr	r1, [sp, #52]	; 0x34
   27890:	mul	r1, r0, r1
   27894:	ldr	r0, [sp, #48]	; 0x30
   27898:	ldr	r0, [r0]
   2789c:	bl	1a2c <fseek@plt>
   278a0:	ldr	r3, [sp, #28]
   278a4:	add	r1, r7, r9
   278a8:	sub	r1, r1, r5
   278ac:	ldr	r0, [r3, r8]
   278b0:	mla	r9, r0, r6, r1
   278b4:	add	r6, sp, #56	; 0x38
   278b8:	subs	sl, sl, #1
   278bc:	add	r8, r8, #4
   278c0:	beq	277a0 <ReadDataSlabN+0x2298>
   278c4:	ldr	r0, [r4, r8]
   278c8:	ldr	r1, [sp, #36]	; 0x24
   278cc:	add	r0, r0, #1
   278d0:	str	r0, [r4, r8]
   278d4:	ldr	r1, [r1, r8]
   278d8:	sdiv	r2, r0, r1
   278dc:	mls	r0, r2, r1, r0
   278e0:	cmp	r0, #0
   278e4:	bne	2777c <ReadDataSlabN+0x2274>
   278e8:	mov	r0, #0
   278ec:	str	r0, [r4, r8]
   278f0:	ldr	r0, [sp, #32]
   278f4:	ldr	r7, [r0, r8]
   278f8:	sdiv	r0, r9, r7
   278fc:	mls	r5, r0, r7, r9
   27900:	cmp	r5, #0
   27904:	bne	27874 <ReadDataSlabN+0x236c>
   27908:	ldr	r0, [r3, r8]
   2790c:	cmp	r0, #0
   27910:	beq	278b8 <ReadDataSlabN+0x23b0>
   27914:	ldr	r1, [sp, #52]	; 0x34
   27918:	ldr	r5, [r6, r8]
   2791c:	mov	r2, #1
   27920:	mul	r0, r0, r1
   27924:	mul	r1, r0, r5
   27928:	ldr	r0, [sp, #48]	; 0x30
   2792c:	ldr	r0, [r0]
   27930:	bl	1a2c <fseek@plt>
   27934:	ldr	r3, [sp, #28]
   27938:	ldr	r0, [r3, r8]
   2793c:	mla	r9, r0, r5, r9
   27940:	subs	sl, sl, #1
   27944:	add	r8, r8, #4
   27948:	bne	278c4 <ReadDataSlabN+0x23bc>
   2794c:	b	277a0 <ReadDataSlabN+0x2298>
   27950:	add	r6, sp, #56	; 0x38
   27954:	mov	r8, #0
   27958:	mov	ip, r6
   2795c:	ldr	r0, [sp, #52]	; 0x34
   27960:	mov	r2, #1
   27964:	mov	r4, ip
   27968:	mul	r1, r8, r0
   2796c:	ldr	r0, [sp, #48]	; 0x30
   27970:	ldr	r0, [r0]
   27974:	bl	1a2c <fseek@plt>
   27978:	ldr	r0, [fp, #20]
   2797c:	ldr	r0, [r0]
   27980:	cmp	r0, #1
   27984:	bne	29488 <ReadDataSlabN+0x3f80>
   27988:	ldr	r0, [sp, #20]
   2798c:	sub	r1, fp, #72	; 0x48
   27990:	cmp	r0, #1
   27994:	ldr	r0, [fp, #16]
   27998:	blt	29a38 <ReadDataSlabN+0x4530>
   2799c:	add	r2, sp, #96	; 0x60
   279a0:	add	r0, r0, #4
   279a4:	mov	r6, #0
   279a8:	orr	r9, r2, #4
   279ac:	ldr	r2, [fp, #24]
   279b0:	str	r0, [sp, #28]
   279b4:	ldr	r0, [fp, #8]
   279b8:	add	r2, r2, #4
   279bc:	sub	r0, r0, #1
   279c0:	str	r2, [sp, #36]	; 0x24
   279c4:	orr	r2, r4, #4
   279c8:	str	r0, [sp, #16]
   279cc:	orr	r0, r1, #4
   279d0:	mov	r4, r8
   279d4:	str	r2, [sp, #32]
   279d8:	str	r0, [sp, #12]
   279dc:	ldr	r5, [fp, #16]
   279e0:	ldr	r0, [r5]
   279e4:	cmp	r0, #0
   279e8:	bne	27a44 <ReadDataSlabN+0x253c>
   279ec:	b	27a74 <ReadDataSlabN+0x256c>
   279f0:	ldr	r0, [sp, #12]
   279f4:	mov	r2, #1
   279f8:	ldr	r5, [r0, r8]
   279fc:	ldr	r0, [sp, #52]	; 0x34
   27a00:	mul	r1, r5, r0
   27a04:	ldr	r0, [sp, #48]	; 0x30
   27a08:	ldr	r0, [r0]
   27a0c:	bl	1a2c <fseek@plt>
   27a10:	add	r4, r5, r4
   27a14:	ldr	r0, [fp, #24]
   27a18:	ldr	r6, [sp, #24]
   27a1c:	ldr	r1, [sp, #20]
   27a20:	ldr	r0, [r0]
   27a24:	add	r6, r0, r6
   27a28:	mov	r0, #0
   27a2c:	cmp	r6, r1
   27a30:	bge	2558c <ReadDataSlabN+0x84>
   27a34:	ldr	r5, [fp, #16]
   27a38:	ldr	r0, [r5]
   27a3c:	cmp	r0, #0
   27a40:	beq	27a74 <ReadDataSlabN+0x256c>
   27a44:	ldr	sl, [sp, #52]	; 0x34
   27a48:	ldr	r8, [sp, #48]	; 0x30
   27a4c:	mov	r2, #1
   27a50:	mul	r1, r0, sl
   27a54:	ldr	r0, [r8]
   27a58:	bl	1a2c <fseek@plt>
   27a5c:	ldr	r0, [r5]
   27a60:	ldr	r2, [sp, #44]	; 0x2c
   27a64:	ldr	r7, [fp, #24]
   27a68:	add	r4, r0, r4
   27a6c:	ldr	r0, [sp, #40]	; 0x28
   27a70:	b	27a84 <ReadDataSlabN+0x257c>
   27a74:	add	r8, sp, #40	; 0x28
   27a78:	ldr	r7, [fp, #24]
   27a7c:	ldr	sl, [sp, #52]	; 0x34
   27a80:	ldm	r8, {r0, r2, r8}
   27a84:	ldr	r3, [r7]
   27a88:	add	r1, r0, r6, lsl #3
   27a8c:	mov	r0, r8
   27a90:	str	r6, [sp, #24]
   27a94:	bl	bef0 <ReadInt64Data>
   27a98:	ldr	r0, [fp, #12]
   27a9c:	ldr	r5, [r5]
   27aa0:	ldr	r1, [r7]
   27aa4:	mov	r2, #1
   27aa8:	ldr	r6, [r0]
   27aac:	sub	r0, r6, r5
   27ab0:	sub	r0, r0, r1
   27ab4:	mul	r1, r0, sl
   27ab8:	ldr	r0, [r8]
   27abc:	bl	1a2c <fseek@plt>
   27ac0:	add	r0, r6, r4
   27ac4:	sub	r4, r0, r5
   27ac8:	ldr	r0, [fp, #8]
   27acc:	cmp	r0, #2
   27ad0:	blt	27a14 <ReadDataSlabN+0x250c>
   27ad4:	ldr	sl, [sp, #16]
   27ad8:	ldr	r3, [sp, #28]
   27adc:	mov	r8, #0
   27ae0:	add	r6, sp, #56	; 0x38
   27ae4:	b	27b38 <ReadDataSlabN+0x2630>
   27ae8:	add	r0, sp, #56	; 0x38
   27aec:	sub	r1, r7, r5
   27af0:	mov	r2, #1
   27af4:	ldr	r6, [r0, r8]
   27af8:	ldr	r0, [r3, r8]
   27afc:	mla	r0, r0, r6, r1
   27b00:	ldr	r1, [sp, #52]	; 0x34
   27b04:	mul	r1, r0, r1
   27b08:	ldr	r0, [sp, #48]	; 0x30
   27b0c:	ldr	r0, [r0]
   27b10:	bl	1a2c <fseek@plt>
   27b14:	ldr	r3, [sp, #28]
   27b18:	add	r1, r7, r4
   27b1c:	sub	r1, r1, r5
   27b20:	ldr	r0, [r3, r8]
   27b24:	mla	r4, r0, r6, r1
   27b28:	add	r6, sp, #56	; 0x38
   27b2c:	subs	sl, sl, #1
   27b30:	add	r8, r8, #4
   27b34:	beq	27a14 <ReadDataSlabN+0x250c>
   27b38:	ldr	r0, [r9, r8]
   27b3c:	ldr	r1, [sp, #36]	; 0x24
   27b40:	add	r0, r0, #1
   27b44:	str	r0, [r9, r8]
   27b48:	ldr	r1, [r1, r8]
   27b4c:	sdiv	r2, r0, r1
   27b50:	mls	r0, r2, r1, r0
   27b54:	cmp	r0, #0
   27b58:	bne	279f0 <ReadDataSlabN+0x24e8>
   27b5c:	mov	r0, #0
   27b60:	str	r0, [r9, r8]
   27b64:	ldr	r0, [sp, #32]
   27b68:	ldr	r7, [r0, r8]
   27b6c:	sdiv	r0, r4, r7
   27b70:	mls	r5, r0, r7, r4
   27b74:	cmp	r5, #0
   27b78:	bne	27ae8 <ReadDataSlabN+0x25e0>
   27b7c:	ldr	r0, [r3, r8]
   27b80:	cmp	r0, #0
   27b84:	beq	27b2c <ReadDataSlabN+0x2624>
   27b88:	ldr	r1, [sp, #52]	; 0x34
   27b8c:	ldr	r5, [r6, r8]
   27b90:	mov	r2, #1
   27b94:	mul	r0, r0, r1
   27b98:	mul	r1, r0, r5
   27b9c:	ldr	r0, [sp, #48]	; 0x30
   27ba0:	ldr	r0, [r0]
   27ba4:	bl	1a2c <fseek@plt>
   27ba8:	ldr	r3, [sp, #28]
   27bac:	ldr	r0, [r3, r8]
   27bb0:	mla	r4, r0, r5, r4
   27bb4:	subs	sl, sl, #1
   27bb8:	add	r8, r8, #4
   27bbc:	bne	27b38 <ReadDataSlabN+0x2630>
   27bc0:	b	27a14 <ReadDataSlabN+0x250c>
   27bc4:	add	r6, sp, #56	; 0x38
   27bc8:	ldr	r0, [sp, #52]	; 0x34
   27bcc:	mov	r2, #1
   27bd0:	mul	r1, r9, r0
   27bd4:	ldr	r0, [sp, #48]	; 0x30
   27bd8:	ldr	r0, [r0]
   27bdc:	bl	1a2c <fseek@plt>
   27be0:	ldr	r0, [fp, #20]
   27be4:	ldr	r0, [r0]
   27be8:	cmp	r0, #1
   27bec:	bne	2975c <ReadDataSlabN+0x4254>
   27bf0:	ldr	r0, [sp, #20]
   27bf4:	sub	r1, fp, #72	; 0x48
   27bf8:	cmp	r0, #1
   27bfc:	ldr	r0, [fp, #16]
   27c00:	blt	29a38 <ReadDataSlabN+0x4530>
   27c04:	add	r2, sp, #96	; 0x60
   27c08:	add	r3, r0, #4
   27c0c:	ldr	r0, [fp, #8]
   27c10:	orr	r4, r2, #4
   27c14:	ldr	r2, [fp, #24]
   27c18:	str	r3, [sp, #28]
   27c1c:	sub	r0, r0, #1
   27c20:	add	r2, r2, #4
   27c24:	str	r0, [sp, #16]
   27c28:	orr	r0, r1, #4
   27c2c:	str	r2, [sp, #36]	; 0x24
   27c30:	orr	r2, r6, #4
   27c34:	mov	r6, #0
   27c38:	str	r0, [sp, #12]
   27c3c:	str	r2, [sp, #32]
   27c40:	ldr	r5, [fp, #16]
   27c44:	ldr	r0, [r5]
   27c48:	cmp	r0, #0
   27c4c:	bne	27ca8 <ReadDataSlabN+0x27a0>
   27c50:	b	27cd8 <ReadDataSlabN+0x27d0>
   27c54:	ldr	r0, [sp, #12]
   27c58:	mov	r2, #1
   27c5c:	ldr	r5, [r0, r8]
   27c60:	ldr	r0, [sp, #52]	; 0x34
   27c64:	mul	r1, r5, r0
   27c68:	ldr	r0, [sp, #48]	; 0x30
   27c6c:	ldr	r0, [r0]
   27c70:	bl	1a2c <fseek@plt>
   27c74:	add	r9, r5, r9
   27c78:	ldr	r0, [fp, #24]
   27c7c:	ldr	r6, [sp, #24]
   27c80:	ldr	r1, [sp, #20]
   27c84:	ldr	r0, [r0]
   27c88:	add	r6, r0, r6
   27c8c:	mov	r0, #0
   27c90:	cmp	r6, r1
   27c94:	bge	2558c <ReadDataSlabN+0x84>
   27c98:	ldr	r5, [fp, #16]
   27c9c:	ldr	r0, [r5]
   27ca0:	cmp	r0, #0
   27ca4:	beq	27cd8 <ReadDataSlabN+0x27d0>
   27ca8:	ldr	sl, [sp, #52]	; 0x34
   27cac:	ldr	r8, [sp, #48]	; 0x30
   27cb0:	mov	r2, #1
   27cb4:	mul	r1, r0, sl
   27cb8:	ldr	r0, [r8]
   27cbc:	bl	1a2c <fseek@plt>
   27cc0:	ldr	r0, [r5]
   27cc4:	ldr	r2, [sp, #44]	; 0x2c
   27cc8:	ldr	r7, [fp, #24]
   27ccc:	add	r9, r0, r9
   27cd0:	ldr	r0, [sp, #40]	; 0x28
   27cd4:	b	27ce8 <ReadDataSlabN+0x27e0>
   27cd8:	add	r8, sp, #40	; 0x28
   27cdc:	ldr	r7, [fp, #24]
   27ce0:	ldr	sl, [sp, #52]	; 0x34
   27ce4:	ldm	r8, {r0, r2, r8}
   27ce8:	ldr	r3, [r7]
   27cec:	add	r1, r0, r6, lsl #3
   27cf0:	mov	r0, r8
   27cf4:	str	r6, [sp, #24]
   27cf8:	bl	ecb8 <ReadUInt64Data>
   27cfc:	ldr	r0, [fp, #12]
   27d00:	ldr	r5, [r5]
   27d04:	ldr	r1, [r7]
   27d08:	mov	r2, #1
   27d0c:	ldr	r6, [r0]
   27d10:	sub	r0, r6, r5
   27d14:	sub	r0, r0, r1
   27d18:	mul	r1, r0, sl
   27d1c:	ldr	r0, [r8]
   27d20:	bl	1a2c <fseek@plt>
   27d24:	add	r0, r6, r9
   27d28:	sub	r9, r0, r5
   27d2c:	ldr	r0, [fp, #8]
   27d30:	cmp	r0, #2
   27d34:	blt	27c78 <ReadDataSlabN+0x2770>
   27d38:	ldr	sl, [sp, #16]
   27d3c:	ldr	r3, [sp, #28]
   27d40:	mov	r8, #0
   27d44:	add	r6, sp, #56	; 0x38
   27d48:	b	27d9c <ReadDataSlabN+0x2894>
   27d4c:	add	r0, sp, #56	; 0x38
   27d50:	sub	r1, r7, r5
   27d54:	mov	r2, #1
   27d58:	ldr	r6, [r0, r8]
   27d5c:	ldr	r0, [r3, r8]
   27d60:	mla	r0, r0, r6, r1
   27d64:	ldr	r1, [sp, #52]	; 0x34
   27d68:	mul	r1, r0, r1
   27d6c:	ldr	r0, [sp, #48]	; 0x30
   27d70:	ldr	r0, [r0]
   27d74:	bl	1a2c <fseek@plt>
   27d78:	ldr	r3, [sp, #28]
   27d7c:	add	r1, r7, r9
   27d80:	sub	r1, r1, r5
   27d84:	ldr	r0, [r3, r8]
   27d88:	mla	r9, r0, r6, r1
   27d8c:	add	r6, sp, #56	; 0x38
   27d90:	subs	sl, sl, #1
   27d94:	add	r8, r8, #4
   27d98:	beq	27c78 <ReadDataSlabN+0x2770>
   27d9c:	ldr	r0, [r4, r8]
   27da0:	ldr	r1, [sp, #36]	; 0x24
   27da4:	add	r0, r0, #1
   27da8:	str	r0, [r4, r8]
   27dac:	ldr	r1, [r1, r8]
   27db0:	sdiv	r2, r0, r1
   27db4:	mls	r0, r2, r1, r0
   27db8:	cmp	r0, #0
   27dbc:	bne	27c54 <ReadDataSlabN+0x274c>
   27dc0:	mov	r0, #0
   27dc4:	str	r0, [r4, r8]
   27dc8:	ldr	r0, [sp, #32]
   27dcc:	ldr	r7, [r0, r8]
   27dd0:	sdiv	r0, r9, r7
   27dd4:	mls	r5, r0, r7, r9
   27dd8:	cmp	r5, #0
   27ddc:	bne	27d4c <ReadDataSlabN+0x2844>
   27de0:	ldr	r0, [r3, r8]
   27de4:	cmp	r0, #0
   27de8:	beq	27d90 <ReadDataSlabN+0x2888>
   27dec:	ldr	r1, [sp, #52]	; 0x34
   27df0:	ldr	r5, [r6, r8]
   27df4:	mov	r2, #1
   27df8:	mul	r0, r0, r1
   27dfc:	mul	r1, r0, r5
   27e00:	ldr	r0, [sp, #48]	; 0x30
   27e04:	ldr	r0, [r0]
   27e08:	bl	1a2c <fseek@plt>
   27e0c:	ldr	r3, [sp, #28]
   27e10:	ldr	r0, [r3, r8]
   27e14:	mla	r9, r0, r5, r9
   27e18:	subs	sl, sl, #1
   27e1c:	add	r8, r8, #4
   27e20:	bne	27d9c <ReadDataSlabN+0x2894>
   27e24:	b	27c78 <ReadDataSlabN+0x2770>
   27e28:	ldr	r0, [sp, #24]
   27e2c:	sub	r1, fp, #72	; 0x48
   27e30:	add	r2, sp, #96	; 0x60
   27e34:	cmp	r0, #1
   27e38:	add	r0, sp, #56	; 0x38
   27e3c:	blt	29a38 <ReadDataSlabN+0x4530>
   27e40:	orr	r0, r0, #4
   27e44:	orr	r3, r2, #4
   27e48:	ldr	r2, [fp, #24]
   27e4c:	mov	r7, #0
   27e50:	str	r0, [sp, #36]	; 0x24
   27e54:	ldr	r0, [fp, #16]
   27e58:	str	r3, [sp, #32]
   27e5c:	add	r8, r2, #4
   27e60:	add	ip, r0, #4
   27e64:	ldr	r0, [fp, #8]
   27e68:	str	r8, [sp, #12]
   27e6c:	str	ip, [sp, #28]
   27e70:	sub	r0, r0, #1
   27e74:	str	r0, [sp, #8]
   27e78:	orr	r0, r1, #4
   27e7c:	str	r0, [sp, #4]
   27e80:	ldr	r4, [fp, #16]
   27e84:	ldr	r0, [r4]
   27e88:	cmp	r0, #0
   27e8c:	bne	27ee8 <ReadDataSlabN+0x29e0>
   27e90:	b	27f10 <ReadDataSlabN+0x2a08>
   27e94:	ldr	r0, [sp, #4]
   27e98:	mov	r2, #1
   27e9c:	ldr	r4, [r0, r7]
   27ea0:	ldr	r0, [sp, #52]	; 0x34
   27ea4:	mul	r1, r4, r0
   27ea8:	ldr	r0, [sp, #48]	; 0x30
   27eac:	ldr	r0, [r0]
   27eb0:	bl	1a2c <fseek@plt>
   27eb4:	add	r6, r4, r6
   27eb8:	ldr	r0, [fp, #24]
   27ebc:	ldr	r7, [sp, #16]
   27ec0:	ldr	r1, [sp, #24]
   27ec4:	ldr	r0, [r0]
   27ec8:	add	r7, r0, r7
   27ecc:	mov	r0, #0
   27ed0:	cmp	r7, r1
   27ed4:	bge	2558c <ReadDataSlabN+0x84>
   27ed8:	ldr	r4, [fp, #16]
   27edc:	ldr	r0, [r4]
   27ee0:	cmp	r0, #0
   27ee4:	beq	27f10 <ReadDataSlabN+0x2a08>
   27ee8:	ldr	sl, [sp, #52]	; 0x34
   27eec:	ldr	r5, [sp, #48]	; 0x30
   27ef0:	mov	r2, #1
   27ef4:	mul	r1, r0, sl
   27ef8:	ldr	r0, [r5]
   27efc:	bl	1a2c <fseek@plt>
   27f00:	ldr	r0, [r4]
   27f04:	add	r6, r0, r6
   27f08:	str	r6, [sp, #20]
   27f0c:	b	27f20 <ReadDataSlabN+0x2a18>
   27f10:	ldr	r5, [sp, #48]	; 0x30
   27f14:	ldr	sl, [sp, #52]	; 0x34
   27f18:	str	r6, [sp, #20]
   27f1c:	mov	r0, #0
   27f20:	ldr	r1, [fp, #24]
   27f24:	ldr	r6, [sp, #44]	; 0x2c
   27f28:	str	r7, [sp, #16]
   27f2c:	ldr	r1, [r1]
   27f30:	cmp	r1, #0
   27f34:	ble	27fa8 <ReadDataSlabN+0x2aa0>
   27f38:	ldr	r0, [sp, #40]	; 0x28
   27f3c:	ldr	r8, [fp, #20]
   27f40:	ldr	r9, [sp, #20]
   27f44:	mov	r4, #0
   27f48:	add	r7, r0, r7
   27f4c:	add	r1, r7, r4
   27f50:	mov	r0, r5
   27f54:	mov	r2, r6
   27f58:	mov	r3, #1
   27f5c:	bl	1f358 <ReadInt8Data>
   27f60:	ldr	r0, [r8]
   27f64:	mov	r2, #1
   27f68:	sub	r0, r0, #1
   27f6c:	mul	r1, r0, sl
   27f70:	ldr	r0, [r5]
   27f74:	bl	1a2c <fseek@plt>
   27f78:	ldr	r0, [fp, #24]
   27f7c:	ldr	r2, [r8]
   27f80:	add	r4, r4, #1
   27f84:	ldr	r1, [r0]
   27f88:	add	r9, r2, r9
   27f8c:	cmp	r4, r1
   27f90:	blt	27f4c <ReadDataSlabN+0x2a44>
   27f94:	ldr	r0, [fp, #16]
   27f98:	ldr	r8, [sp, #12]
   27f9c:	str	r9, [sp, #20]
   27fa0:	ldr	r0, [r0]
   27fa4:	b	27fb0 <ReadDataSlabN+0x2aa8>
   27fa8:	ldr	r2, [fp, #20]
   27fac:	ldr	r2, [r2]
   27fb0:	ldr	r3, [fp, #12]
   27fb4:	ldr	r3, [r3]
   27fb8:	mls	r1, r2, r1, r3
   27fbc:	mov	r2, #1
   27fc0:	sub	r4, r1, r0
   27fc4:	ldr	r0, [r5]
   27fc8:	mul	r1, r4, sl
   27fcc:	bl	1a2c <fseek@plt>
   27fd0:	ldr	r6, [sp, #20]
   27fd4:	ldr	r0, [fp, #8]
   27fd8:	add	r5, sp, #56	; 0x38
   27fdc:	add	r6, r4, r6
   27fe0:	cmp	r0, #2
   27fe4:	blt	27eb8 <ReadDataSlabN+0x29b0>
   27fe8:	ldr	sl, [sp, #8]
   27fec:	ldr	r3, [sp, #32]
   27ff0:	ldr	ip, [sp, #28]
   27ff4:	mov	r7, #0
   27ff8:	b	28054 <ReadDataSlabN+0x2b4c>
   27ffc:	add	r0, sp, #56	; 0x38
   28000:	mov	r5, r6
   28004:	sub	r1, r4, r9
   28008:	mov	r2, #1
   2800c:	ldr	r6, [r0, r7]
   28010:	ldr	r0, [ip, r7]
   28014:	mla	r0, r0, r6, r1
   28018:	ldr	r1, [sp, #52]	; 0x34
   2801c:	mul	r1, r0, r1
   28020:	ldr	r0, [sp, #48]	; 0x30
   28024:	ldr	r0, [r0]
   28028:	bl	1a2c <fseek@plt>
   2802c:	ldr	ip, [sp, #28]
   28030:	ldr	r3, [sp, #32]
   28034:	add	r1, r4, r5
   28038:	add	r5, sp, #56	; 0x38
   2803c:	sub	r1, r1, r9
   28040:	ldr	r0, [ip, r7]
   28044:	mla	r6, r0, r6, r1
   28048:	subs	sl, sl, #1
   2804c:	add	r7, r7, #4
   28050:	beq	27eb8 <ReadDataSlabN+0x29b0>
   28054:	ldr	r0, [r3, r7]
   28058:	add	r0, r0, #1
   2805c:	str	r0, [r3, r7]
   28060:	ldr	r1, [r8, r7]
   28064:	sdiv	r2, r0, r1
   28068:	mls	r0, r2, r1, r0
   2806c:	cmp	r0, #0
   28070:	bne	27e94 <ReadDataSlabN+0x298c>
   28074:	mov	r0, #0
   28078:	str	r0, [r3, r7]
   2807c:	ldr	r0, [sp, #36]	; 0x24
   28080:	ldr	r4, [r0, r7]
   28084:	sdiv	r0, r6, r4
   28088:	mls	r9, r0, r4, r6
   2808c:	cmp	r9, #0
   28090:	bne	27ffc <ReadDataSlabN+0x2af4>
   28094:	ldr	r0, [ip, r7]
   28098:	cmp	r0, #0
   2809c:	beq	28048 <ReadDataSlabN+0x2b40>
   280a0:	ldr	r1, [sp, #52]	; 0x34
   280a4:	ldr	r4, [r5, r7]
   280a8:	mov	r2, #1
   280ac:	mul	r0, r0, r1
   280b0:	mul	r1, r0, r4
   280b4:	ldr	r0, [sp, #48]	; 0x30
   280b8:	ldr	r0, [r0]
   280bc:	bl	1a2c <fseek@plt>
   280c0:	ldr	ip, [sp, #28]
   280c4:	ldr	r3, [sp, #32]
   280c8:	ldr	r0, [ip, r7]
   280cc:	mla	r6, r0, r4, r6
   280d0:	subs	sl, sl, #1
   280d4:	add	r7, r7, #4
   280d8:	bne	28054 <ReadDataSlabN+0x2b4c>
   280dc:	b	27eb8 <ReadDataSlabN+0x29b0>
   280e0:	ldr	r0, [sp, #24]
   280e4:	sub	r1, fp, #72	; 0x48
   280e8:	add	r2, sp, #96	; 0x60
   280ec:	cmp	r0, #1
   280f0:	add	r0, sp, #56	; 0x38
   280f4:	blt	29a38 <ReadDataSlabN+0x4530>
   280f8:	orr	r0, r0, #4
   280fc:	orr	r3, r2, #4
   28100:	ldr	r2, [fp, #24]
   28104:	mov	r7, #0
   28108:	str	r0, [sp, #36]	; 0x24
   2810c:	ldr	r0, [fp, #16]
   28110:	str	r3, [sp, #32]
   28114:	add	r8, r2, #4
   28118:	add	ip, r0, #4
   2811c:	ldr	r0, [fp, #8]
   28120:	str	r8, [sp, #12]
   28124:	str	ip, [sp, #28]
   28128:	sub	r0, r0, #1
   2812c:	str	r0, [sp, #8]
   28130:	orr	r0, r1, #4
   28134:	str	r0, [sp, #4]
   28138:	ldr	r4, [fp, #16]
   2813c:	ldr	r0, [r4]
   28140:	cmp	r0, #0
   28144:	bne	281a0 <ReadDataSlabN+0x2c98>
   28148:	b	281c8 <ReadDataSlabN+0x2cc0>
   2814c:	ldr	r0, [sp, #4]
   28150:	mov	r2, #1
   28154:	ldr	r4, [r0, r7]
   28158:	ldr	r0, [sp, #52]	; 0x34
   2815c:	mul	r1, r4, r0
   28160:	ldr	r0, [sp, #48]	; 0x30
   28164:	ldr	r0, [r0]
   28168:	bl	1a2c <fseek@plt>
   2816c:	add	r6, r4, r6
   28170:	ldr	r0, [fp, #24]
   28174:	ldr	r7, [sp, #16]
   28178:	ldr	r1, [sp, #24]
   2817c:	ldr	r0, [r0]
   28180:	add	r7, r0, r7
   28184:	mov	r0, #0
   28188:	cmp	r7, r1
   2818c:	bge	2558c <ReadDataSlabN+0x84>
   28190:	ldr	r4, [fp, #16]
   28194:	ldr	r0, [r4]
   28198:	cmp	r0, #0
   2819c:	beq	281c8 <ReadDataSlabN+0x2cc0>
   281a0:	ldr	sl, [sp, #52]	; 0x34
   281a4:	ldr	r5, [sp, #48]	; 0x30
   281a8:	mov	r2, #1
   281ac:	mul	r1, r0, sl
   281b0:	ldr	r0, [r5]
   281b4:	bl	1a2c <fseek@plt>
   281b8:	ldr	r0, [r4]
   281bc:	add	r6, r0, r6
   281c0:	str	r6, [sp, #20]
   281c4:	b	281d8 <ReadDataSlabN+0x2cd0>
   281c8:	ldr	r5, [sp, #48]	; 0x30
   281cc:	ldr	sl, [sp, #52]	; 0x34
   281d0:	str	r6, [sp, #20]
   281d4:	mov	r0, #0
   281d8:	ldr	r1, [fp, #24]
   281dc:	ldr	r6, [sp, #44]	; 0x2c
   281e0:	str	r7, [sp, #16]
   281e4:	ldr	r1, [r1]
   281e8:	cmp	r1, #0
   281ec:	ble	28260 <ReadDataSlabN+0x2d58>
   281f0:	ldr	r0, [sp, #40]	; 0x28
   281f4:	ldr	r8, [fp, #20]
   281f8:	ldr	r9, [sp, #20]
   281fc:	mov	r4, #0
   28200:	add	r7, r0, r7
   28204:	add	r1, r7, r4
   28208:	mov	r0, r5
   2820c:	mov	r2, r6
   28210:	mov	r3, #1
   28214:	bl	222e8 <ReadUInt8Data>
   28218:	ldr	r0, [r8]
   2821c:	mov	r2, #1
   28220:	sub	r0, r0, #1
   28224:	mul	r1, r0, sl
   28228:	ldr	r0, [r5]
   2822c:	bl	1a2c <fseek@plt>
   28230:	ldr	r0, [fp, #24]
   28234:	ldr	r2, [r8]
   28238:	add	r4, r4, #1
   2823c:	ldr	r1, [r0]
   28240:	add	r9, r2, r9
   28244:	cmp	r4, r1
   28248:	blt	28204 <ReadDataSlabN+0x2cfc>
   2824c:	ldr	r0, [fp, #16]
   28250:	ldr	r8, [sp, #12]
   28254:	str	r9, [sp, #20]
   28258:	ldr	r0, [r0]
   2825c:	b	28268 <ReadDataSlabN+0x2d60>
   28260:	ldr	r2, [fp, #20]
   28264:	ldr	r2, [r2]
   28268:	ldr	r3, [fp, #12]
   2826c:	ldr	r3, [r3]
   28270:	mls	r1, r2, r1, r3
   28274:	mov	r2, #1
   28278:	sub	r4, r1, r0
   2827c:	ldr	r0, [r5]
   28280:	mul	r1, r4, sl
   28284:	bl	1a2c <fseek@plt>
   28288:	ldr	r6, [sp, #20]
   2828c:	ldr	r0, [fp, #8]
   28290:	add	r5, sp, #56	; 0x38
   28294:	add	r6, r4, r6
   28298:	cmp	r0, #2
   2829c:	blt	28170 <ReadDataSlabN+0x2c68>
   282a0:	ldr	sl, [sp, #8]
   282a4:	ldr	r3, [sp, #32]
   282a8:	ldr	ip, [sp, #28]
   282ac:	mov	r7, #0
   282b0:	b	2830c <ReadDataSlabN+0x2e04>
   282b4:	add	r0, sp, #56	; 0x38
   282b8:	mov	r5, r6
   282bc:	sub	r1, r4, r9
   282c0:	mov	r2, #1
   282c4:	ldr	r6, [r0, r7]
   282c8:	ldr	r0, [ip, r7]
   282cc:	mla	r0, r0, r6, r1
   282d0:	ldr	r1, [sp, #52]	; 0x34
   282d4:	mul	r1, r0, r1
   282d8:	ldr	r0, [sp, #48]	; 0x30
   282dc:	ldr	r0, [r0]
   282e0:	bl	1a2c <fseek@plt>
   282e4:	ldr	ip, [sp, #28]
   282e8:	ldr	r3, [sp, #32]
   282ec:	add	r1, r4, r5
   282f0:	add	r5, sp, #56	; 0x38
   282f4:	sub	r1, r1, r9
   282f8:	ldr	r0, [ip, r7]
   282fc:	mla	r6, r0, r6, r1
   28300:	subs	sl, sl, #1
   28304:	add	r7, r7, #4
   28308:	beq	28170 <ReadDataSlabN+0x2c68>
   2830c:	ldr	r0, [r3, r7]
   28310:	add	r0, r0, #1
   28314:	str	r0, [r3, r7]
   28318:	ldr	r1, [r8, r7]
   2831c:	sdiv	r2, r0, r1
   28320:	mls	r0, r2, r1, r0
   28324:	cmp	r0, #0
   28328:	bne	2814c <ReadDataSlabN+0x2c44>
   2832c:	mov	r0, #0
   28330:	str	r0, [r3, r7]
   28334:	ldr	r0, [sp, #36]	; 0x24
   28338:	ldr	r4, [r0, r7]
   2833c:	sdiv	r0, r6, r4
   28340:	mls	r9, r0, r4, r6
   28344:	cmp	r9, #0
   28348:	bne	282b4 <ReadDataSlabN+0x2dac>
   2834c:	ldr	r0, [ip, r7]
   28350:	cmp	r0, #0
   28354:	beq	28300 <ReadDataSlabN+0x2df8>
   28358:	ldr	r1, [sp, #52]	; 0x34
   2835c:	ldr	r4, [r5, r7]
   28360:	mov	r2, #1
   28364:	mul	r0, r0, r1
   28368:	mul	r1, r0, r4
   2836c:	ldr	r0, [sp, #48]	; 0x30
   28370:	ldr	r0, [r0]
   28374:	bl	1a2c <fseek@plt>
   28378:	ldr	ip, [sp, #28]
   2837c:	ldr	r3, [sp, #32]
   28380:	ldr	r0, [ip, r7]
   28384:	mla	r6, r0, r4, r6
   28388:	subs	sl, sl, #1
   2838c:	add	r7, r7, #4
   28390:	bne	2830c <ReadDataSlabN+0x2e04>
   28394:	b	28170 <ReadDataSlabN+0x2c68>
   28398:	ldr	r0, [sp, #24]
   2839c:	sub	r1, fp, #72	; 0x48
   283a0:	cmp	r0, #1
   283a4:	ldr	r0, [fp, #16]
   283a8:	blt	29a38 <ReadDataSlabN+0x4530>
   283ac:	add	r2, sp, #96	; 0x60
   283b0:	add	r3, r0, #4
   283b4:	ldr	r0, [fp, #8]
   283b8:	mov	r5, #0
   283bc:	orr	sl, r2, #4
   283c0:	ldr	r2, [fp, #24]
   283c4:	str	r3, [sp, #28]
   283c8:	str	sl, [sp, #16]
   283cc:	sub	r0, r0, #1
   283d0:	add	r2, r2, #4
   283d4:	str	r0, [sp, #12]
   283d8:	orr	r0, r1, #4
   283dc:	str	r2, [sp, #36]	; 0x24
   283e0:	orr	r2, r6, #4
   283e4:	str	r0, [sp, #8]
   283e8:	str	r2, [sp, #32]
   283ec:	ldr	r4, [fp, #16]
   283f0:	ldr	r0, [r4]
   283f4:	cmp	r0, #0
   283f8:	bne	28450 <ReadDataSlabN+0x2f48>
   283fc:	b	28474 <ReadDataSlabN+0x2f6c>
   28400:	ldr	r0, [sp, #8]
   28404:	mov	r2, #1
   28408:	ldr	r4, [r0, r5]
   2840c:	ldr	r0, [sp, #52]	; 0x34
   28410:	mul	r1, r4, r0
   28414:	ldr	r0, [sp, #48]	; 0x30
   28418:	ldr	r0, [r0]
   2841c:	bl	1a2c <fseek@plt>
   28420:	add	r9, r4, r9
   28424:	ldr	r0, [r8]
   28428:	ldr	r5, [sp, #20]
   2842c:	ldr	r1, [sp, #24]
   28430:	add	r5, r0, r5
   28434:	mov	r0, #0
   28438:	cmp	r5, r1
   2843c:	bge	2558c <ReadDataSlabN+0x84>
   28440:	ldr	r4, [fp, #16]
   28444:	ldr	r0, [r4]
   28448:	cmp	r0, #0
   2844c:	beq	28474 <ReadDataSlabN+0x2f6c>
   28450:	ldr	r1, [sp, #52]	; 0x34
   28454:	mov	r2, #1
   28458:	mul	r1, r0, r1
   2845c:	ldr	r0, [sp, #48]	; 0x30
   28460:	ldr	r0, [r0]
   28464:	bl	1a2c <fseek@plt>
   28468:	ldr	r0, [r4]
   2846c:	add	r9, r0, r9
   28470:	b	28478 <ReadDataSlabN+0x2f70>
   28474:	mov	r0, #0
   28478:	ldr	r8, [fp, #24]
   2847c:	ldr	r2, [sp, #40]	; 0x28
   28480:	str	r5, [sp, #20]
   28484:	ldr	r1, [r8]
   28488:	cmp	r1, #0
   2848c:	ble	28508 <ReadDataSlabN+0x3000>
   28490:	add	sl, sp, #44	; 0x2c
   28494:	ldr	r8, [fp, #20]
   28498:	add	r5, r2, r5, lsl #3
   2849c:	mov	r7, #0
   284a0:	ldm	sl, {r4, r6, sl}
   284a4:	mov	r0, r6
   284a8:	mov	r1, r5
   284ac:	mov	r2, r4
   284b0:	mov	r3, #1
   284b4:	bl	3a8c <ReadDoubleData>
   284b8:	ldr	r0, [r8]
   284bc:	mov	r2, #1
   284c0:	sub	r0, r0, #1
   284c4:	mul	r1, r0, sl
   284c8:	ldr	r0, [r6]
   284cc:	bl	1a2c <fseek@plt>
   284d0:	ldr	r0, [fp, #24]
   284d4:	ldr	r2, [r8]
   284d8:	add	r7, r7, #1
   284dc:	add	r5, r5, #8
   284e0:	ldr	r1, [r0]
   284e4:	add	r9, r2, r9
   284e8:	cmp	r7, r1
   284ec:	blt	284a4 <ReadDataSlabN+0x2f9c>
   284f0:	ldr	r0, [fp, #16]
   284f4:	ldr	sl, [sp, #16]
   284f8:	ldr	r8, [fp, #24]
   284fc:	add	r6, sp, #56	; 0x38
   28500:	ldr	r0, [r0]
   28504:	b	28510 <ReadDataSlabN+0x3008>
   28508:	ldr	r2, [fp, #20]
   2850c:	ldr	r2, [r2]
   28510:	ldr	r3, [fp, #12]
   28514:	ldr	r3, [r3]
   28518:	mls	r1, r2, r1, r3
   2851c:	mov	r2, #1
   28520:	sub	r4, r1, r0
   28524:	ldr	r0, [sp, #52]	; 0x34
   28528:	mul	r1, r4, r0
   2852c:	ldr	r0, [sp, #48]	; 0x30
   28530:	ldr	r0, [r0]
   28534:	bl	1a2c <fseek@plt>
   28538:	ldr	r0, [fp, #8]
   2853c:	add	r9, r4, r9
   28540:	cmp	r0, #2
   28544:	blt	28424 <ReadDataSlabN+0x2f1c>
   28548:	ldr	r7, [sp, #12]
   2854c:	ldr	r3, [sp, #28]
   28550:	mov	r5, #0
   28554:	b	285ac <ReadDataSlabN+0x30a4>
   28558:	add	r0, sp, #56	; 0x38
   2855c:	sub	r1, r4, r8
   28560:	mov	r2, #1
   28564:	ldr	r6, [r0, r5]
   28568:	ldr	r0, [r3, r5]
   2856c:	mla	r0, r0, r6, r1
   28570:	ldr	r1, [sp, #52]	; 0x34
   28574:	mul	r1, r0, r1
   28578:	ldr	r0, [sp, #48]	; 0x30
   2857c:	ldr	r0, [r0]
   28580:	bl	1a2c <fseek@plt>
   28584:	ldr	r3, [sp, #28]
   28588:	add	r1, r4, r9
   2858c:	sub	r1, r1, r8
   28590:	ldr	r0, [r3, r5]
   28594:	mla	r9, r0, r6, r1
   28598:	add	r6, sp, #56	; 0x38
   2859c:	ldr	r8, [fp, #24]
   285a0:	subs	r7, r7, #1
   285a4:	add	r5, r5, #4
   285a8:	beq	28424 <ReadDataSlabN+0x2f1c>
   285ac:	ldr	r0, [sl, r5]
   285b0:	ldr	r1, [sp, #36]	; 0x24
   285b4:	add	r0, r0, #1
   285b8:	str	r0, [sl, r5]
   285bc:	ldr	r1, [r1, r5]
   285c0:	sdiv	r2, r0, r1
   285c4:	mls	r0, r2, r1, r0
   285c8:	cmp	r0, #0
   285cc:	bne	28400 <ReadDataSlabN+0x2ef8>
   285d0:	mov	r0, #0
   285d4:	str	r0, [sl, r5]
   285d8:	ldr	r0, [sp, #32]
   285dc:	ldr	r4, [r0, r5]
   285e0:	sdiv	r0, r9, r4
   285e4:	mls	r8, r0, r4, r9
   285e8:	cmp	r8, #0
   285ec:	bne	28558 <ReadDataSlabN+0x3050>
   285f0:	ldr	r0, [r3, r5]
   285f4:	cmp	r0, #0
   285f8:	beq	2859c <ReadDataSlabN+0x3094>
   285fc:	ldr	r1, [sp, #52]	; 0x34
   28600:	ldr	r4, [r6, r5]
   28604:	mov	r2, #1
   28608:	mul	r0, r0, r1
   2860c:	mul	r1, r0, r4
   28610:	ldr	r0, [sp, #48]	; 0x30
   28614:	ldr	r0, [r0]
   28618:	bl	1a2c <fseek@plt>
   2861c:	ldr	r3, [sp, #28]
   28620:	ldr	r0, [r3, r5]
   28624:	mla	r9, r0, r4, r9
   28628:	ldr	r8, [fp, #24]
   2862c:	subs	r7, r7, #1
   28630:	add	r5, r5, #4
   28634:	bne	285ac <ReadDataSlabN+0x30a4>
   28638:	b	28424 <ReadDataSlabN+0x2f1c>
   2863c:	ldr	r0, [sp, #20]
   28640:	sub	r1, fp, #72	; 0x48
   28644:	cmp	r0, #1
   28648:	ldr	r0, [fp, #16]
   2864c:	blt	29a38 <ReadDataSlabN+0x4530>
   28650:	ldr	r3, [fp, #24]
   28654:	add	r2, sp, #96	; 0x60
   28658:	mov	r5, #0
   2865c:	orr	r2, r2, #4
   28660:	mov	r8, r2
   28664:	orr	r2, r6, #4
   28668:	str	r2, [sp, #32]
   2866c:	str	r8, [sp, #24]
   28670:	add	r3, r3, #4
   28674:	str	r3, [sp, #36]	; 0x24
   28678:	add	r3, r0, #4
   2867c:	ldr	r0, [fp, #8]
   28680:	str	r3, [sp, #28]
   28684:	sub	r0, r0, #1
   28688:	str	r0, [sp, #12]
   2868c:	orr	r0, r1, #4
   28690:	str	r0, [sp, #8]
   28694:	ldr	r4, [fp, #16]
   28698:	ldr	r0, [r4]
   2869c:	cmp	r0, #0
   286a0:	bne	286d8 <ReadDataSlabN+0x31d0>
   286a4:	b	286fc <ReadDataSlabN+0x31f4>
   286a8:	ldr	ip, [fp, #24]
   286ac:	ldr	r0, [ip]
   286b0:	ldr	r5, [sp, #16]
   286b4:	ldr	r1, [sp, #20]
   286b8:	add	r5, r0, r5
   286bc:	mov	r0, #0
   286c0:	cmp	r5, r1
   286c4:	bge	2558c <ReadDataSlabN+0x84>
   286c8:	ldr	r4, [fp, #16]
   286cc:	ldr	r0, [r4]
   286d0:	cmp	r0, #0
   286d4:	beq	286fc <ReadDataSlabN+0x31f4>
   286d8:	ldr	r1, [sp, #52]	; 0x34
   286dc:	ldr	sl, [sp, #48]	; 0x30
   286e0:	mov	r2, #1
   286e4:	mul	r1, r0, r1
   286e8:	ldr	r0, [sl]
   286ec:	bl	1a2c <fseek@plt>
   286f0:	ldr	r0, [r4]
   286f4:	add	r9, r0, r9
   286f8:	b	28704 <ReadDataSlabN+0x31fc>
   286fc:	ldr	sl, [sp, #48]	; 0x30
   28700:	mov	r0, #0
   28704:	ldr	r8, [fp, #24]
   28708:	ldr	r4, [sp, #44]	; 0x2c
   2870c:	str	r5, [sp, #16]
   28710:	ldr	r1, [r8]
   28714:	cmp	r1, #0
   28718:	ble	2878c <ReadDataSlabN+0x3284>
   2871c:	ldr	r0, [sp, #40]	; 0x28
   28720:	ldr	r6, [sp, #52]	; 0x34
   28724:	ldr	r8, [fp, #20]
   28728:	mov	r7, #0
   2872c:	add	r5, r0, r5, lsl #2
   28730:	mov	r0, sl
   28734:	mov	r1, r5
   28738:	mov	r2, r4
   2873c:	mov	r3, #1
   28740:	bl	8d54 <ReadSingleData>
   28744:	ldr	r0, [r8]
   28748:	mov	r2, #1
   2874c:	sub	r0, r0, #1
   28750:	mul	r1, r0, r6
   28754:	ldr	r0, [sl]
   28758:	bl	1a2c <fseek@plt>
   2875c:	ldr	r0, [fp, #24]
   28760:	ldr	r2, [r8]
   28764:	add	r7, r7, #1
   28768:	add	r5, r5, #4
   2876c:	ldr	r1, [r0]
   28770:	add	r9, r2, r9
   28774:	cmp	r7, r1
   28778:	blt	28730 <ReadDataSlabN+0x3228>
   2877c:	ldr	r0, [fp, #16]
   28780:	add	r6, sp, #56	; 0x38
   28784:	ldr	r0, [r0]
   28788:	b	28794 <ReadDataSlabN+0x328c>
   2878c:	ldr	r2, [fp, #20]
   28790:	ldr	r2, [r2]
   28794:	ldr	r3, [fp, #12]
   28798:	ldr	r3, [r3]
   2879c:	mls	r1, r2, r1, r3
   287a0:	mov	r2, #1
   287a4:	sub	r4, r1, r0
   287a8:	ldr	r0, [sp, #52]	; 0x34
   287ac:	mul	r1, r4, r0
   287b0:	ldr	r0, [sl]
   287b4:	bl	1a2c <fseek@plt>
   287b8:	ldr	r0, [fp, #8]
   287bc:	ldr	r8, [sp, #24]
   287c0:	add	r9, r4, r9
   287c4:	cmp	r0, #2
   287c8:	blt	286a8 <ReadDataSlabN+0x31a0>
   287cc:	ldr	r7, [sp, #12]
   287d0:	ldr	r3, [sp, #28]
   287d4:	ldr	ip, [fp, #24]
   287d8:	mov	r5, #0
   287dc:	b	28840 <ReadDataSlabN+0x3338>
   287e0:	add	r0, sp, #56	; 0x38
   287e4:	sub	r1, r4, sl
   287e8:	ldr	r8, [sp, #48]	; 0x30
   287ec:	mov	r2, #1
   287f0:	ldr	r6, [r0, r5]
   287f4:	ldr	r0, [r3, r5]
   287f8:	mla	r0, r0, r6, r1
   287fc:	ldr	r1, [sp, #52]	; 0x34
   28800:	mul	r1, r0, r1
   28804:	ldr	r0, [r8]
   28808:	bl	1a2c <fseek@plt>
   2880c:	add	r1, r4, r9
   28810:	ldr	r3, [sp, #28]
   28814:	sub	r1, r1, sl
   28818:	mov	sl, r8
   2881c:	ldr	r8, [fp, #24]
   28820:	ldr	r0, [r3, r5]
   28824:	mov	ip, r8
   28828:	ldr	r8, [sp, #24]
   2882c:	mla	r9, r0, r6, r1
   28830:	add	r6, sp, #56	; 0x38
   28834:	subs	r7, r7, #1
   28838:	add	r5, r5, #4
   2883c:	beq	286ac <ReadDataSlabN+0x31a4>
   28840:	ldr	r0, [r8, r5]
   28844:	ldr	r1, [sp, #36]	; 0x24
   28848:	add	r0, r0, #1
   2884c:	str	r0, [r8, r5]
   28850:	ldr	r1, [r1, r5]
   28854:	sdiv	r2, r0, r1
   28858:	mls	r0, r2, r1, r0
   2885c:	cmp	r0, #0
   28860:	bne	288ec <ReadDataSlabN+0x33e4>
   28864:	mov	r0, #0
   28868:	str	r0, [r8, r5]
   2886c:	ldr	r0, [sp, #32]
   28870:	ldr	r4, [r0, r5]
   28874:	sdiv	r0, r9, r4
   28878:	mls	sl, r0, r4, r9
   2887c:	cmp	sl, #0
   28880:	bne	287e0 <ReadDataSlabN+0x32d8>
   28884:	ldr	r0, [r3, r5]
   28888:	cmp	r0, #0
   2888c:	beq	288d8 <ReadDataSlabN+0x33d0>
   28890:	ldr	r1, [sp, #52]	; 0x34
   28894:	ldr	r4, [r6, r5]
   28898:	ldr	sl, [sp, #48]	; 0x30
   2889c:	mov	r2, #1
   288a0:	mov	r6, ip
   288a4:	mul	r0, r0, r1
   288a8:	mul	r1, r0, r4
   288ac:	ldr	r0, [sl]
   288b0:	bl	1a2c <fseek@plt>
   288b4:	ldr	r3, [sp, #28]
   288b8:	mov	ip, r6
   288bc:	add	r6, sp, #56	; 0x38
   288c0:	ldr	r0, [r3, r5]
   288c4:	mla	r9, r0, r4, r9
   288c8:	subs	r7, r7, #1
   288cc:	add	r5, r5, #4
   288d0:	bne	28840 <ReadDataSlabN+0x3338>
   288d4:	b	286ac <ReadDataSlabN+0x31a4>
   288d8:	ldr	sl, [sp, #48]	; 0x30
   288dc:	subs	r7, r7, #1
   288e0:	add	r5, r5, #4
   288e4:	bne	28840 <ReadDataSlabN+0x3338>
   288e8:	b	286ac <ReadDataSlabN+0x31a4>
   288ec:	ldr	r0, [sp, #8]
   288f0:	mov	r2, #1
   288f4:	ldr	r4, [r0, r5]
   288f8:	ldr	r0, [sp, #52]	; 0x34
   288fc:	mov	r5, ip
   28900:	mul	r1, r4, r0
   28904:	ldr	r0, [sl]
   28908:	bl	1a2c <fseek@plt>
   2890c:	mov	ip, r5
   28910:	add	r9, r4, r9
   28914:	b	286ac <ReadDataSlabN+0x31a4>
   28918:	ldr	r0, [sp, #20]
   2891c:	sub	r1, fp, #72	; 0x48
   28920:	cmp	r0, #1
   28924:	ldr	r0, [fp, #16]
   28928:	blt	29a38 <ReadDataSlabN+0x4530>
   2892c:	ldr	r3, [fp, #24]
   28930:	add	r2, sp, #96	; 0x60
   28934:	mov	r5, #0
   28938:	orr	r2, r2, #4
   2893c:	mov	r8, r2
   28940:	orr	r2, r6, #4
   28944:	str	r2, [sp, #32]
   28948:	str	r8, [sp, #24]
   2894c:	add	r3, r3, #4
   28950:	str	r3, [sp, #36]	; 0x24
   28954:	add	r3, r0, #4
   28958:	ldr	r0, [fp, #8]
   2895c:	str	r3, [sp, #28]
   28960:	sub	r0, r0, #1
   28964:	str	r0, [sp, #12]
   28968:	orr	r0, r1, #4
   2896c:	str	r0, [sp, #8]
   28970:	ldr	r4, [fp, #16]
   28974:	ldr	r0, [r4]
   28978:	cmp	r0, #0
   2897c:	bne	289b4 <ReadDataSlabN+0x34ac>
   28980:	b	289d8 <ReadDataSlabN+0x34d0>
   28984:	ldr	ip, [fp, #24]
   28988:	ldr	r0, [ip]
   2898c:	ldr	r5, [sp, #16]
   28990:	ldr	r1, [sp, #20]
   28994:	add	r5, r0, r5
   28998:	mov	r0, #0
   2899c:	cmp	r5, r1
   289a0:	bge	2558c <ReadDataSlabN+0x84>
   289a4:	ldr	r4, [fp, #16]
   289a8:	ldr	r0, [r4]
   289ac:	cmp	r0, #0
   289b0:	beq	289d8 <ReadDataSlabN+0x34d0>
   289b4:	ldr	r1, [sp, #52]	; 0x34
   289b8:	ldr	sl, [sp, #48]	; 0x30
   289bc:	mov	r2, #1
   289c0:	mul	r1, r0, r1
   289c4:	ldr	r0, [sl]
   289c8:	bl	1a2c <fseek@plt>
   289cc:	ldr	r0, [r4]
   289d0:	add	r9, r0, r9
   289d4:	b	289e0 <ReadDataSlabN+0x34d8>
   289d8:	ldr	sl, [sp, #48]	; 0x30
   289dc:	mov	r0, #0
   289e0:	ldr	r8, [fp, #24]
   289e4:	ldr	r4, [sp, #44]	; 0x2c
   289e8:	str	r5, [sp, #16]
   289ec:	ldr	r1, [r8]
   289f0:	cmp	r1, #0
   289f4:	ble	28a68 <ReadDataSlabN+0x3560>
   289f8:	ldr	r0, [sp, #40]	; 0x28
   289fc:	ldr	r6, [sp, #52]	; 0x34
   28a00:	ldr	r8, [fp, #20]
   28a04:	mov	r7, #0
   28a08:	add	r5, r0, r5, lsl #1
   28a0c:	mov	r0, sl
   28a10:	mov	r1, r5
   28a14:	mov	r2, r4
   28a18:	mov	r3, #1
   28a1c:	bl	192d0 <ReadInt16Data>
   28a20:	ldr	r0, [r8]
   28a24:	mov	r2, #1
   28a28:	sub	r0, r0, #1
   28a2c:	mul	r1, r0, r6
   28a30:	ldr	r0, [sl]
   28a34:	bl	1a2c <fseek@plt>
   28a38:	ldr	r0, [fp, #24]
   28a3c:	ldr	r2, [r8]
   28a40:	add	r7, r7, #1
   28a44:	add	r5, r5, #2
   28a48:	ldr	r1, [r0]
   28a4c:	add	r9, r2, r9
   28a50:	cmp	r7, r1
   28a54:	blt	28a0c <ReadDataSlabN+0x3504>
   28a58:	ldr	r0, [fp, #16]
   28a5c:	add	r6, sp, #56	; 0x38
   28a60:	ldr	r0, [r0]
   28a64:	b	28a70 <ReadDataSlabN+0x3568>
   28a68:	ldr	r2, [fp, #20]
   28a6c:	ldr	r2, [r2]
   28a70:	ldr	r3, [fp, #12]
   28a74:	ldr	r3, [r3]
   28a78:	mls	r1, r2, r1, r3
   28a7c:	mov	r2, #1
   28a80:	sub	r4, r1, r0
   28a84:	ldr	r0, [sp, #52]	; 0x34
   28a88:	mul	r1, r4, r0
   28a8c:	ldr	r0, [sl]
   28a90:	bl	1a2c <fseek@plt>
   28a94:	ldr	r0, [fp, #8]
   28a98:	ldr	r8, [sp, #24]
   28a9c:	add	r9, r4, r9
   28aa0:	cmp	r0, #2
   28aa4:	blt	28984 <ReadDataSlabN+0x347c>
   28aa8:	ldr	r7, [sp, #12]
   28aac:	ldr	r3, [sp, #28]
   28ab0:	ldr	ip, [fp, #24]
   28ab4:	mov	r5, #0
   28ab8:	b	28b1c <ReadDataSlabN+0x3614>
   28abc:	add	r0, sp, #56	; 0x38
   28ac0:	sub	r1, r4, sl
   28ac4:	ldr	r8, [sp, #48]	; 0x30
   28ac8:	mov	r2, #1
   28acc:	ldr	r6, [r0, r5]
   28ad0:	ldr	r0, [r3, r5]
   28ad4:	mla	r0, r0, r6, r1
   28ad8:	ldr	r1, [sp, #52]	; 0x34
   28adc:	mul	r1, r0, r1
   28ae0:	ldr	r0, [r8]
   28ae4:	bl	1a2c <fseek@plt>
   28ae8:	add	r1, r4, r9
   28aec:	ldr	r3, [sp, #28]
   28af0:	sub	r1, r1, sl
   28af4:	mov	sl, r8
   28af8:	ldr	r8, [fp, #24]
   28afc:	ldr	r0, [r3, r5]
   28b00:	mov	ip, r8
   28b04:	ldr	r8, [sp, #24]
   28b08:	mla	r9, r0, r6, r1
   28b0c:	add	r6, sp, #56	; 0x38
   28b10:	subs	r7, r7, #1
   28b14:	add	r5, r5, #4
   28b18:	beq	28988 <ReadDataSlabN+0x3480>
   28b1c:	ldr	r0, [r8, r5]
   28b20:	ldr	r1, [sp, #36]	; 0x24
   28b24:	add	r0, r0, #1
   28b28:	str	r0, [r8, r5]
   28b2c:	ldr	r1, [r1, r5]
   28b30:	sdiv	r2, r0, r1
   28b34:	mls	r0, r2, r1, r0
   28b38:	cmp	r0, #0
   28b3c:	bne	28bc8 <ReadDataSlabN+0x36c0>
   28b40:	mov	r0, #0
   28b44:	str	r0, [r8, r5]
   28b48:	ldr	r0, [sp, #32]
   28b4c:	ldr	r4, [r0, r5]
   28b50:	sdiv	r0, r9, r4
   28b54:	mls	sl, r0, r4, r9
   28b58:	cmp	sl, #0
   28b5c:	bne	28abc <ReadDataSlabN+0x35b4>
   28b60:	ldr	r0, [r3, r5]
   28b64:	cmp	r0, #0
   28b68:	beq	28bb4 <ReadDataSlabN+0x36ac>
   28b6c:	ldr	r1, [sp, #52]	; 0x34
   28b70:	ldr	r4, [r6, r5]
   28b74:	ldr	sl, [sp, #48]	; 0x30
   28b78:	mov	r2, #1
   28b7c:	mov	r6, ip
   28b80:	mul	r0, r0, r1
   28b84:	mul	r1, r0, r4
   28b88:	ldr	r0, [sl]
   28b8c:	bl	1a2c <fseek@plt>
   28b90:	ldr	r3, [sp, #28]
   28b94:	mov	ip, r6
   28b98:	add	r6, sp, #56	; 0x38
   28b9c:	ldr	r0, [r3, r5]
   28ba0:	mla	r9, r0, r4, r9
   28ba4:	subs	r7, r7, #1
   28ba8:	add	r5, r5, #4
   28bac:	bne	28b1c <ReadDataSlabN+0x3614>
   28bb0:	b	28988 <ReadDataSlabN+0x3480>
   28bb4:	ldr	sl, [sp, #48]	; 0x30
   28bb8:	subs	r7, r7, #1
   28bbc:	add	r5, r5, #4
   28bc0:	bne	28b1c <ReadDataSlabN+0x3614>
   28bc4:	b	28988 <ReadDataSlabN+0x3480>
   28bc8:	ldr	r0, [sp, #8]
   28bcc:	mov	r2, #1
   28bd0:	ldr	r4, [r0, r5]
   28bd4:	ldr	r0, [sp, #52]	; 0x34
   28bd8:	mov	r5, ip
   28bdc:	mul	r1, r4, r0
   28be0:	ldr	r0, [sl]
   28be4:	bl	1a2c <fseek@plt>
   28be8:	mov	ip, r5
   28bec:	add	r9, r4, r9
   28bf0:	b	28988 <ReadDataSlabN+0x3480>
   28bf4:	ldr	r0, [sp, #20]
   28bf8:	sub	r1, fp, #72	; 0x48
   28bfc:	cmp	r0, #1
   28c00:	ldr	r0, [fp, #16]
   28c04:	blt	29a38 <ReadDataSlabN+0x4530>
   28c08:	ldr	r3, [fp, #24]
   28c0c:	add	r2, sp, #96	; 0x60
   28c10:	mov	r5, #0
   28c14:	orr	r2, r2, #4
   28c18:	mov	r8, r2
   28c1c:	orr	r2, r6, #4
   28c20:	str	r2, [sp, #32]
   28c24:	str	r8, [sp, #24]
   28c28:	add	r3, r3, #4
   28c2c:	str	r3, [sp, #36]	; 0x24
   28c30:	add	r3, r0, #4
   28c34:	ldr	r0, [fp, #8]
   28c38:	str	r3, [sp, #28]
   28c3c:	sub	r0, r0, #1
   28c40:	str	r0, [sp, #12]
   28c44:	orr	r0, r1, #4
   28c48:	str	r0, [sp, #8]
   28c4c:	ldr	r4, [fp, #16]
   28c50:	ldr	r0, [r4]
   28c54:	cmp	r0, #0
   28c58:	bne	28c90 <ReadDataSlabN+0x3788>
   28c5c:	b	28cb4 <ReadDataSlabN+0x37ac>
   28c60:	ldr	ip, [fp, #24]
   28c64:	ldr	r0, [ip]
   28c68:	ldr	r5, [sp, #16]
   28c6c:	ldr	r1, [sp, #20]
   28c70:	add	r5, r0, r5
   28c74:	mov	r0, #0
   28c78:	cmp	r5, r1
   28c7c:	bge	2558c <ReadDataSlabN+0x84>
   28c80:	ldr	r4, [fp, #16]
   28c84:	ldr	r0, [r4]
   28c88:	cmp	r0, #0
   28c8c:	beq	28cb4 <ReadDataSlabN+0x37ac>
   28c90:	ldr	r1, [sp, #52]	; 0x34
   28c94:	ldr	sl, [sp, #48]	; 0x30
   28c98:	mov	r2, #1
   28c9c:	mul	r1, r0, r1
   28ca0:	ldr	r0, [sl]
   28ca4:	bl	1a2c <fseek@plt>
   28ca8:	ldr	r0, [r4]
   28cac:	add	r9, r0, r9
   28cb0:	b	28cbc <ReadDataSlabN+0x37b4>
   28cb4:	ldr	sl, [sp, #48]	; 0x30
   28cb8:	mov	r0, #0
   28cbc:	ldr	r8, [fp, #24]
   28cc0:	ldr	r4, [sp, #44]	; 0x2c
   28cc4:	str	r5, [sp, #16]
   28cc8:	ldr	r1, [r8]
   28ccc:	cmp	r1, #0
   28cd0:	ble	28d44 <ReadDataSlabN+0x383c>
   28cd4:	ldr	r0, [sp, #40]	; 0x28
   28cd8:	ldr	r6, [sp, #52]	; 0x34
   28cdc:	ldr	r8, [fp, #20]
   28ce0:	mov	r7, #0
   28ce4:	add	r5, r0, r5, lsl #1
   28ce8:	mov	r0, sl
   28cec:	mov	r1, r5
   28cf0:	mov	r2, r4
   28cf4:	mov	r3, #1
   28cf8:	bl	1c314 <ReadUInt16Data>
   28cfc:	ldr	r0, [r8]
   28d00:	mov	r2, #1
   28d04:	sub	r0, r0, #1
   28d08:	mul	r1, r0, r6
   28d0c:	ldr	r0, [sl]
   28d10:	bl	1a2c <fseek@plt>
   28d14:	ldr	r0, [fp, #24]
   28d18:	ldr	r2, [r8]
   28d1c:	add	r7, r7, #1
   28d20:	add	r5, r5, #2
   28d24:	ldr	r1, [r0]
   28d28:	add	r9, r2, r9
   28d2c:	cmp	r7, r1
   28d30:	blt	28ce8 <ReadDataSlabN+0x37e0>
   28d34:	ldr	r0, [fp, #16]
   28d38:	add	r6, sp, #56	; 0x38
   28d3c:	ldr	r0, [r0]
   28d40:	b	28d4c <ReadDataSlabN+0x3844>
   28d44:	ldr	r2, [fp, #20]
   28d48:	ldr	r2, [r2]
   28d4c:	ldr	r3, [fp, #12]
   28d50:	ldr	r3, [r3]
   28d54:	mls	r1, r2, r1, r3
   28d58:	mov	r2, #1
   28d5c:	sub	r4, r1, r0
   28d60:	ldr	r0, [sp, #52]	; 0x34
   28d64:	mul	r1, r4, r0
   28d68:	ldr	r0, [sl]
   28d6c:	bl	1a2c <fseek@plt>
   28d70:	ldr	r0, [fp, #8]
   28d74:	ldr	r8, [sp, #24]
   28d78:	add	r9, r4, r9
   28d7c:	cmp	r0, #2
   28d80:	blt	28c60 <ReadDataSlabN+0x3758>
   28d84:	ldr	r7, [sp, #12]
   28d88:	ldr	r3, [sp, #28]
   28d8c:	ldr	ip, [fp, #24]
   28d90:	mov	r5, #0
   28d94:	b	28df8 <ReadDataSlabN+0x38f0>
   28d98:	add	r0, sp, #56	; 0x38
   28d9c:	sub	r1, r4, sl
   28da0:	ldr	r8, [sp, #48]	; 0x30
   28da4:	mov	r2, #1
   28da8:	ldr	r6, [r0, r5]
   28dac:	ldr	r0, [r3, r5]
   28db0:	mla	r0, r0, r6, r1
   28db4:	ldr	r1, [sp, #52]	; 0x34
   28db8:	mul	r1, r0, r1
   28dbc:	ldr	r0, [r8]
   28dc0:	bl	1a2c <fseek@plt>
   28dc4:	add	r1, r4, r9
   28dc8:	ldr	r3, [sp, #28]
   28dcc:	sub	r1, r1, sl
   28dd0:	mov	sl, r8
   28dd4:	ldr	r8, [fp, #24]
   28dd8:	ldr	r0, [r3, r5]
   28ddc:	mov	ip, r8
   28de0:	ldr	r8, [sp, #24]
   28de4:	mla	r9, r0, r6, r1
   28de8:	add	r6, sp, #56	; 0x38
   28dec:	subs	r7, r7, #1
   28df0:	add	r5, r5, #4
   28df4:	beq	28c64 <ReadDataSlabN+0x375c>
   28df8:	ldr	r0, [r8, r5]
   28dfc:	ldr	r1, [sp, #36]	; 0x24
   28e00:	add	r0, r0, #1
   28e04:	str	r0, [r8, r5]
   28e08:	ldr	r1, [r1, r5]
   28e0c:	sdiv	r2, r0, r1
   28e10:	mls	r0, r2, r1, r0
   28e14:	cmp	r0, #0
   28e18:	bne	28ea4 <ReadDataSlabN+0x399c>
   28e1c:	mov	r0, #0
   28e20:	str	r0, [r8, r5]
   28e24:	ldr	r0, [sp, #32]
   28e28:	ldr	r4, [r0, r5]
   28e2c:	sdiv	r0, r9, r4
   28e30:	mls	sl, r0, r4, r9
   28e34:	cmp	sl, #0
   28e38:	bne	28d98 <ReadDataSlabN+0x3890>
   28e3c:	ldr	r0, [r3, r5]
   28e40:	cmp	r0, #0
   28e44:	beq	28e90 <ReadDataSlabN+0x3988>
   28e48:	ldr	r1, [sp, #52]	; 0x34
   28e4c:	ldr	r4, [r6, r5]
   28e50:	ldr	sl, [sp, #48]	; 0x30
   28e54:	mov	r2, #1
   28e58:	mov	r6, ip
   28e5c:	mul	r0, r0, r1
   28e60:	mul	r1, r0, r4
   28e64:	ldr	r0, [sl]
   28e68:	bl	1a2c <fseek@plt>
   28e6c:	ldr	r3, [sp, #28]
   28e70:	mov	ip, r6
   28e74:	add	r6, sp, #56	; 0x38
   28e78:	ldr	r0, [r3, r5]
   28e7c:	mla	r9, r0, r4, r9
   28e80:	subs	r7, r7, #1
   28e84:	add	r5, r5, #4
   28e88:	bne	28df8 <ReadDataSlabN+0x38f0>
   28e8c:	b	28c64 <ReadDataSlabN+0x375c>
   28e90:	ldr	sl, [sp, #48]	; 0x30
   28e94:	subs	r7, r7, #1
   28e98:	add	r5, r5, #4
   28e9c:	bne	28df8 <ReadDataSlabN+0x38f0>
   28ea0:	b	28c64 <ReadDataSlabN+0x375c>
   28ea4:	ldr	r0, [sp, #8]
   28ea8:	mov	r2, #1
   28eac:	ldr	r4, [r0, r5]
   28eb0:	ldr	r0, [sp, #52]	; 0x34
   28eb4:	mov	r5, ip
   28eb8:	mul	r1, r4, r0
   28ebc:	ldr	r0, [sl]
   28ec0:	bl	1a2c <fseek@plt>
   28ec4:	mov	ip, r5
   28ec8:	add	r9, r4, r9
   28ecc:	b	28c64 <ReadDataSlabN+0x375c>
   28ed0:	ldr	r0, [sp, #20]
   28ed4:	sub	r1, fp, #72	; 0x48
   28ed8:	cmp	r0, #1
   28edc:	ldr	r0, [fp, #16]
   28ee0:	blt	29a38 <ReadDataSlabN+0x4530>
   28ee4:	ldr	r3, [fp, #24]
   28ee8:	add	r2, sp, #96	; 0x60
   28eec:	mov	r5, #0
   28ef0:	orr	r2, r2, #4
   28ef4:	mov	r8, r2
   28ef8:	orr	r2, r6, #4
   28efc:	str	r2, [sp, #32]
   28f00:	str	r8, [sp, #24]
   28f04:	add	r3, r3, #4
   28f08:	str	r3, [sp, #36]	; 0x24
   28f0c:	add	r3, r0, #4
   28f10:	ldr	r0, [fp, #8]
   28f14:	str	r3, [sp, #28]
   28f18:	sub	r0, r0, #1
   28f1c:	str	r0, [sp, #12]
   28f20:	orr	r0, r1, #4
   28f24:	str	r0, [sp, #8]
   28f28:	ldr	r4, [fp, #16]
   28f2c:	ldr	r0, [r4]
   28f30:	cmp	r0, #0
   28f34:	bne	28f6c <ReadDataSlabN+0x3a64>
   28f38:	b	28f90 <ReadDataSlabN+0x3a88>
   28f3c:	ldr	ip, [fp, #24]
   28f40:	ldr	r0, [ip]
   28f44:	ldr	r5, [sp, #16]
   28f48:	ldr	r1, [sp, #20]
   28f4c:	add	r5, r0, r5
   28f50:	mov	r0, #0
   28f54:	cmp	r5, r1
   28f58:	bge	2558c <ReadDataSlabN+0x84>
   28f5c:	ldr	r4, [fp, #16]
   28f60:	ldr	r0, [r4]
   28f64:	cmp	r0, #0
   28f68:	beq	28f90 <ReadDataSlabN+0x3a88>
   28f6c:	ldr	r1, [sp, #52]	; 0x34
   28f70:	ldr	sl, [sp, #48]	; 0x30
   28f74:	mov	r2, #1
   28f78:	mul	r1, r0, r1
   28f7c:	ldr	r0, [sl]
   28f80:	bl	1a2c <fseek@plt>
   28f84:	ldr	r0, [r4]
   28f88:	add	r9, r0, r9
   28f8c:	b	28f98 <ReadDataSlabN+0x3a90>
   28f90:	ldr	sl, [sp, #48]	; 0x30
   28f94:	mov	r0, #0
   28f98:	ldr	r8, [fp, #24]
   28f9c:	ldr	r4, [sp, #44]	; 0x2c
   28fa0:	str	r5, [sp, #16]
   28fa4:	ldr	r1, [r8]
   28fa8:	cmp	r1, #0
   28fac:	ble	29020 <ReadDataSlabN+0x3b18>
   28fb0:	ldr	r0, [sp, #40]	; 0x28
   28fb4:	ldr	r6, [sp, #52]	; 0x34
   28fb8:	ldr	r8, [fp, #20]
   28fbc:	mov	r7, #0
   28fc0:	add	r5, r0, r5, lsl #2
   28fc4:	mov	r0, sl
   28fc8:	mov	r1, r5
   28fcc:	mov	r2, r4
   28fd0:	mov	r3, #1
   28fd4:	bl	11a80 <ReadInt32Data>
   28fd8:	ldr	r0, [r8]
   28fdc:	mov	r2, #1
   28fe0:	sub	r0, r0, #1
   28fe4:	mul	r1, r0, r6
   28fe8:	ldr	r0, [sl]
   28fec:	bl	1a2c <fseek@plt>
   28ff0:	ldr	r0, [fp, #24]
   28ff4:	ldr	r2, [r8]
   28ff8:	add	r7, r7, #1
   28ffc:	add	r5, r5, #4
   29000:	ldr	r1, [r0]
   29004:	add	r9, r2, r9
   29008:	cmp	r7, r1
   2900c:	blt	28fc4 <ReadDataSlabN+0x3abc>
   29010:	ldr	r0, [fp, #16]
   29014:	add	r6, sp, #56	; 0x38
   29018:	ldr	r0, [r0]
   2901c:	b	29028 <ReadDataSlabN+0x3b20>
   29020:	ldr	r2, [fp, #20]
   29024:	ldr	r2, [r2]
   29028:	ldr	r3, [fp, #12]
   2902c:	ldr	r3, [r3]
   29030:	mls	r1, r2, r1, r3
   29034:	mov	r2, #1
   29038:	sub	r4, r1, r0
   2903c:	ldr	r0, [sp, #52]	; 0x34
   29040:	mul	r1, r4, r0
   29044:	ldr	r0, [sl]
   29048:	bl	1a2c <fseek@plt>
   2904c:	ldr	r0, [fp, #8]
   29050:	ldr	r8, [sp, #24]
   29054:	add	r9, r4, r9
   29058:	cmp	r0, #2
   2905c:	blt	28f3c <ReadDataSlabN+0x3a34>
   29060:	ldr	r7, [sp, #12]
   29064:	ldr	r3, [sp, #28]
   29068:	ldr	ip, [fp, #24]
   2906c:	mov	r5, #0
   29070:	b	290d4 <ReadDataSlabN+0x3bcc>
   29074:	add	r0, sp, #56	; 0x38
   29078:	sub	r1, r4, sl
   2907c:	ldr	r8, [sp, #48]	; 0x30
   29080:	mov	r2, #1
   29084:	ldr	r6, [r0, r5]
   29088:	ldr	r0, [r3, r5]
   2908c:	mla	r0, r0, r6, r1
   29090:	ldr	r1, [sp, #52]	; 0x34
   29094:	mul	r1, r0, r1
   29098:	ldr	r0, [r8]
   2909c:	bl	1a2c <fseek@plt>
   290a0:	add	r1, r4, r9
   290a4:	ldr	r3, [sp, #28]
   290a8:	sub	r1, r1, sl
   290ac:	mov	sl, r8
   290b0:	ldr	r8, [fp, #24]
   290b4:	ldr	r0, [r3, r5]
   290b8:	mov	ip, r8
   290bc:	ldr	r8, [sp, #24]
   290c0:	mla	r9, r0, r6, r1
   290c4:	add	r6, sp, #56	; 0x38
   290c8:	subs	r7, r7, #1
   290cc:	add	r5, r5, #4
   290d0:	beq	28f40 <ReadDataSlabN+0x3a38>
   290d4:	ldr	r0, [r8, r5]
   290d8:	ldr	r1, [sp, #36]	; 0x24
   290dc:	add	r0, r0, #1
   290e0:	str	r0, [r8, r5]
   290e4:	ldr	r1, [r1, r5]
   290e8:	sdiv	r2, r0, r1
   290ec:	mls	r0, r2, r1, r0
   290f0:	cmp	r0, #0
   290f4:	bne	29180 <ReadDataSlabN+0x3c78>
   290f8:	mov	r0, #0
   290fc:	str	r0, [r8, r5]
   29100:	ldr	r0, [sp, #32]
   29104:	ldr	r4, [r0, r5]
   29108:	sdiv	r0, r9, r4
   2910c:	mls	sl, r0, r4, r9
   29110:	cmp	sl, #0
   29114:	bne	29074 <ReadDataSlabN+0x3b6c>
   29118:	ldr	r0, [r3, r5]
   2911c:	cmp	r0, #0
   29120:	beq	2916c <ReadDataSlabN+0x3c64>
   29124:	ldr	r1, [sp, #52]	; 0x34
   29128:	ldr	r4, [r6, r5]
   2912c:	ldr	sl, [sp, #48]	; 0x30
   29130:	mov	r2, #1
   29134:	mov	r6, ip
   29138:	mul	r0, r0, r1
   2913c:	mul	r1, r0, r4
   29140:	ldr	r0, [sl]
   29144:	bl	1a2c <fseek@plt>
   29148:	ldr	r3, [sp, #28]
   2914c:	mov	ip, r6
   29150:	add	r6, sp, #56	; 0x38
   29154:	ldr	r0, [r3, r5]
   29158:	mla	r9, r0, r4, r9
   2915c:	subs	r7, r7, #1
   29160:	add	r5, r5, #4
   29164:	bne	290d4 <ReadDataSlabN+0x3bcc>
   29168:	b	28f40 <ReadDataSlabN+0x3a38>
   2916c:	ldr	sl, [sp, #48]	; 0x30
   29170:	subs	r7, r7, #1
   29174:	add	r5, r5, #4
   29178:	bne	290d4 <ReadDataSlabN+0x3bcc>
   2917c:	b	28f40 <ReadDataSlabN+0x3a38>
   29180:	ldr	r0, [sp, #8]
   29184:	mov	r2, #1
   29188:	ldr	r4, [r0, r5]
   2918c:	ldr	r0, [sp, #52]	; 0x34
   29190:	mov	r5, ip
   29194:	mul	r1, r4, r0
   29198:	ldr	r0, [sl]
   2919c:	bl	1a2c <fseek@plt>
   291a0:	mov	ip, r5
   291a4:	add	r9, r4, r9
   291a8:	b	28f40 <ReadDataSlabN+0x3a38>
   291ac:	ldr	r0, [sp, #20]
   291b0:	sub	r1, fp, #72	; 0x48
   291b4:	cmp	r0, #1
   291b8:	ldr	r0, [fp, #16]
   291bc:	blt	29a38 <ReadDataSlabN+0x4530>
   291c0:	ldr	r3, [fp, #24]
   291c4:	add	r2, sp, #96	; 0x60
   291c8:	mov	r5, #0
   291cc:	orr	r2, r2, #4
   291d0:	mov	r8, r2
   291d4:	orr	r2, r6, #4
   291d8:	str	r2, [sp, #32]
   291dc:	str	r8, [sp, #24]
   291e0:	add	r3, r3, #4
   291e4:	str	r3, [sp, #36]	; 0x24
   291e8:	add	r3, r0, #4
   291ec:	ldr	r0, [fp, #8]
   291f0:	str	r3, [sp, #28]
   291f4:	sub	r0, r0, #1
   291f8:	str	r0, [sp, #12]
   291fc:	orr	r0, r1, #4
   29200:	str	r0, [sp, #8]
   29204:	ldr	r4, [fp, #16]
   29208:	ldr	r0, [r4]
   2920c:	cmp	r0, #0
   29210:	bne	29248 <ReadDataSlabN+0x3d40>
   29214:	b	2926c <ReadDataSlabN+0x3d64>
   29218:	ldr	ip, [fp, #24]
   2921c:	ldr	r0, [ip]
   29220:	ldr	r5, [sp, #16]
   29224:	ldr	r1, [sp, #20]
   29228:	add	r5, r0, r5
   2922c:	mov	r0, #0
   29230:	cmp	r5, r1
   29234:	bge	2558c <ReadDataSlabN+0x84>
   29238:	ldr	r4, [fp, #16]
   2923c:	ldr	r0, [r4]
   29240:	cmp	r0, #0
   29244:	beq	2926c <ReadDataSlabN+0x3d64>
   29248:	ldr	r1, [sp, #52]	; 0x34
   2924c:	ldr	sl, [sp, #48]	; 0x30
   29250:	mov	r2, #1
   29254:	mul	r1, r0, r1
   29258:	ldr	r0, [sl]
   2925c:	bl	1a2c <fseek@plt>
   29260:	ldr	r0, [r4]
   29264:	add	r9, r0, r9
   29268:	b	29274 <ReadDataSlabN+0x3d6c>
   2926c:	ldr	sl, [sp, #48]	; 0x30
   29270:	mov	r0, #0
   29274:	ldr	r8, [fp, #24]
   29278:	ldr	r4, [sp, #44]	; 0x2c
   2927c:	str	r5, [sp, #16]
   29280:	ldr	r1, [r8]
   29284:	cmp	r1, #0
   29288:	ble	292fc <ReadDataSlabN+0x3df4>
   2928c:	ldr	r0, [sp, #40]	; 0x28
   29290:	ldr	r6, [sp, #52]	; 0x34
   29294:	ldr	r8, [fp, #20]
   29298:	mov	r7, #0
   2929c:	add	r5, r0, r5, lsl #2
   292a0:	mov	r0, sl
   292a4:	mov	r1, r5
   292a8:	mov	r2, r4
   292ac:	mov	r3, #1
   292b0:	bl	156a8 <ReadUInt32Data>
   292b4:	ldr	r0, [r8]
   292b8:	mov	r2, #1
   292bc:	sub	r0, r0, #1
   292c0:	mul	r1, r0, r6
   292c4:	ldr	r0, [sl]
   292c8:	bl	1a2c <fseek@plt>
   292cc:	ldr	r0, [fp, #24]
   292d0:	ldr	r2, [r8]
   292d4:	add	r7, r7, #1
   292d8:	add	r5, r5, #4
   292dc:	ldr	r1, [r0]
   292e0:	add	r9, r2, r9
   292e4:	cmp	r7, r1
   292e8:	blt	292a0 <ReadDataSlabN+0x3d98>
   292ec:	ldr	r0, [fp, #16]
   292f0:	add	r6, sp, #56	; 0x38
   292f4:	ldr	r0, [r0]
   292f8:	b	29304 <ReadDataSlabN+0x3dfc>
   292fc:	ldr	r2, [fp, #20]
   29300:	ldr	r2, [r2]
   29304:	ldr	r3, [fp, #12]
   29308:	ldr	r3, [r3]
   2930c:	mls	r1, r2, r1, r3
   29310:	mov	r2, #1
   29314:	sub	r4, r1, r0
   29318:	ldr	r0, [sp, #52]	; 0x34
   2931c:	mul	r1, r4, r0
   29320:	ldr	r0, [sl]
   29324:	bl	1a2c <fseek@plt>
   29328:	ldr	r0, [fp, #8]
   2932c:	ldr	r8, [sp, #24]
   29330:	add	r9, r4, r9
   29334:	cmp	r0, #2
   29338:	blt	29218 <ReadDataSlabN+0x3d10>
   2933c:	ldr	r7, [sp, #12]
   29340:	ldr	r3, [sp, #28]
   29344:	ldr	ip, [fp, #24]
   29348:	mov	r5, #0
   2934c:	b	293b0 <ReadDataSlabN+0x3ea8>
   29350:	add	r0, sp, #56	; 0x38
   29354:	sub	r1, r4, sl
   29358:	ldr	r8, [sp, #48]	; 0x30
   2935c:	mov	r2, #1
   29360:	ldr	r6, [r0, r5]
   29364:	ldr	r0, [r3, r5]
   29368:	mla	r0, r0, r6, r1
   2936c:	ldr	r1, [sp, #52]	; 0x34
   29370:	mul	r1, r0, r1
   29374:	ldr	r0, [r8]
   29378:	bl	1a2c <fseek@plt>
   2937c:	add	r1, r4, r9
   29380:	ldr	r3, [sp, #28]
   29384:	sub	r1, r1, sl
   29388:	mov	sl, r8
   2938c:	ldr	r8, [fp, #24]
   29390:	ldr	r0, [r3, r5]
   29394:	mov	ip, r8
   29398:	ldr	r8, [sp, #24]
   2939c:	mla	r9, r0, r6, r1
   293a0:	add	r6, sp, #56	; 0x38
   293a4:	subs	r7, r7, #1
   293a8:	add	r5, r5, #4
   293ac:	beq	2921c <ReadDataSlabN+0x3d14>
   293b0:	ldr	r0, [r8, r5]
   293b4:	ldr	r1, [sp, #36]	; 0x24
   293b8:	add	r0, r0, #1
   293bc:	str	r0, [r8, r5]
   293c0:	ldr	r1, [r1, r5]
   293c4:	sdiv	r2, r0, r1
   293c8:	mls	r0, r2, r1, r0
   293cc:	cmp	r0, #0
   293d0:	bne	2945c <ReadDataSlabN+0x3f54>
   293d4:	mov	r0, #0
   293d8:	str	r0, [r8, r5]
   293dc:	ldr	r0, [sp, #32]
   293e0:	ldr	r4, [r0, r5]
   293e4:	sdiv	r0, r9, r4
   293e8:	mls	sl, r0, r4, r9
   293ec:	cmp	sl, #0
   293f0:	bne	29350 <ReadDataSlabN+0x3e48>
   293f4:	ldr	r0, [r3, r5]
   293f8:	cmp	r0, #0
   293fc:	beq	29448 <ReadDataSlabN+0x3f40>
   29400:	ldr	r1, [sp, #52]	; 0x34
   29404:	ldr	r4, [r6, r5]
   29408:	ldr	sl, [sp, #48]	; 0x30
   2940c:	mov	r2, #1
   29410:	mov	r6, ip
   29414:	mul	r0, r0, r1
   29418:	mul	r1, r0, r4
   2941c:	ldr	r0, [sl]
   29420:	bl	1a2c <fseek@plt>
   29424:	ldr	r3, [sp, #28]
   29428:	mov	ip, r6
   2942c:	add	r6, sp, #56	; 0x38
   29430:	ldr	r0, [r3, r5]
   29434:	mla	r9, r0, r4, r9
   29438:	subs	r7, r7, #1
   2943c:	add	r5, r5, #4
   29440:	bne	293b0 <ReadDataSlabN+0x3ea8>
   29444:	b	2921c <ReadDataSlabN+0x3d14>
   29448:	ldr	sl, [sp, #48]	; 0x30
   2944c:	subs	r7, r7, #1
   29450:	add	r5, r5, #4
   29454:	bne	293b0 <ReadDataSlabN+0x3ea8>
   29458:	b	2921c <ReadDataSlabN+0x3d14>
   2945c:	ldr	r0, [sp, #8]
   29460:	mov	r2, #1
   29464:	ldr	r4, [r0, r5]
   29468:	ldr	r0, [sp, #52]	; 0x34
   2946c:	mov	r5, ip
   29470:	mul	r1, r4, r0
   29474:	ldr	r0, [sl]
   29478:	bl	1a2c <fseek@plt>
   2947c:	mov	ip, r5
   29480:	add	r9, r4, r9
   29484:	b	2921c <ReadDataSlabN+0x3d14>
   29488:	ldr	r0, [sp, #20]
   2948c:	sub	r1, fp, #72	; 0x48
   29490:	cmp	r0, #1
   29494:	ldr	r0, [fp, #16]
   29498:	blt	29a38 <ReadDataSlabN+0x4530>
   2949c:	add	r2, sp, #96	; 0x60
   294a0:	add	r0, r0, #4
   294a4:	mov	r7, #0
   294a8:	mov	r9, r8
   294ac:	orr	r6, r2, #4
   294b0:	ldr	r2, [fp, #24]
   294b4:	str	r0, [sp, #24]
   294b8:	ldr	r0, [fp, #8]
   294bc:	str	r6, [sp, #28]
   294c0:	add	r2, r2, #4
   294c4:	sub	r0, r0, #1
   294c8:	str	r2, [sp, #36]	; 0x24
   294cc:	orr	r2, r4, #4
   294d0:	str	r0, [sp, #12]
   294d4:	orr	r0, r1, #4
   294d8:	str	r2, [sp, #32]
   294dc:	str	r0, [sp, #8]
   294e0:	ldr	r5, [fp, #16]
   294e4:	ldr	r0, [r5]
   294e8:	cmp	r0, #0
   294ec:	bne	29524 <ReadDataSlabN+0x401c>
   294f0:	b	29548 <ReadDataSlabN+0x4040>
   294f4:	ldr	r8, [fp, #24]
   294f8:	ldr	r0, [r8]
   294fc:	ldr	r7, [sp, #16]
   29500:	ldr	r1, [sp, #20]
   29504:	add	r7, r0, r7
   29508:	mov	r0, #0
   2950c:	cmp	r7, r1
   29510:	bge	2558c <ReadDataSlabN+0x84>
   29514:	ldr	r5, [fp, #16]
   29518:	ldr	r0, [r5]
   2951c:	cmp	r0, #0
   29520:	beq	29548 <ReadDataSlabN+0x4040>
   29524:	ldr	r1, [sp, #52]	; 0x34
   29528:	mov	r2, #1
   2952c:	mul	r1, r0, r1
   29530:	ldr	r0, [sp, #48]	; 0x30
   29534:	ldr	r0, [r0]
   29538:	bl	1a2c <fseek@plt>
   2953c:	ldr	r0, [r5]
   29540:	add	r9, r0, r9
   29544:	b	2954c <ReadDataSlabN+0x4044>
   29548:	mov	r0, #0
   2954c:	ldr	r8, [fp, #24]
   29550:	ldr	r2, [sp, #44]	; 0x2c
   29554:	str	r7, [sp, #16]
   29558:	ldr	r1, [r8]
   2955c:	cmp	r1, #0
   29560:	ble	295e0 <ReadDataSlabN+0x40d8>
   29564:	ldr	r0, [sp, #40]	; 0x28
   29568:	mov	r6, r8
   2956c:	ldr	sl, [fp, #20]
   29570:	ldr	r8, [sp, #48]	; 0x30
   29574:	add	r5, r0, r7, lsl #3
   29578:	mov	r7, #0
   2957c:	mov	r0, r8
   29580:	mov	r1, r5
   29584:	mov	r3, #1
   29588:	mov	r4, r2
   2958c:	bl	bef0 <ReadInt64Data>
   29590:	ldr	r0, [sl]
   29594:	ldr	r1, [sp, #52]	; 0x34
   29598:	mov	r2, #1
   2959c:	sub	r0, r0, #1
   295a0:	mul	r1, r0, r1
   295a4:	ldr	r0, [r8]
   295a8:	bl	1a2c <fseek@plt>
   295ac:	mov	r2, r4
   295b0:	ldr	r4, [sl]
   295b4:	ldr	r1, [r6]
   295b8:	add	r7, r7, #1
   295bc:	add	r5, r5, #8
   295c0:	add	r9, r4, r9
   295c4:	cmp	r7, r1
   295c8:	blt	2957c <ReadDataSlabN+0x4074>
   295cc:	ldr	r0, [fp, #16]
   295d0:	ldr	r6, [sp, #28]
   295d4:	ldr	sl, [sp, #52]	; 0x34
   295d8:	ldr	r0, [r0]
   295dc:	b	295f0 <ReadDataSlabN+0x40e8>
   295e0:	ldr	r2, [fp, #20]
   295e4:	ldr	sl, [sp, #52]	; 0x34
   295e8:	ldr	r8, [sp, #48]	; 0x30
   295ec:	ldr	r4, [r2]
   295f0:	ldr	r3, [fp, #12]
   295f4:	mov	r2, #1
   295f8:	ldr	r3, [r3]
   295fc:	mls	r1, r4, r1, r3
   29600:	sub	r5, r1, r0
   29604:	ldr	r0, [r8]
   29608:	mul	r1, r5, sl
   2960c:	bl	1a2c <fseek@plt>
   29610:	ldr	r0, [fp, #8]
   29614:	add	r9, r5, r9
   29618:	cmp	r0, #2
   2961c:	blt	294f4 <ReadDataSlabN+0x3fec>
   29620:	ldr	r7, [sp, #12]
   29624:	ldr	r3, [sp, #24]
   29628:	ldr	r8, [fp, #24]
   2962c:	mov	r5, #0
   29630:	b	29690 <ReadDataSlabN+0x4188>
   29634:	add	r0, sp, #56	; 0x38
   29638:	mov	r8, r9
   2963c:	sub	r1, r4, sl
   29640:	ldr	r9, [sp, #52]	; 0x34
   29644:	mov	r2, #1
   29648:	ldr	r6, [r0, r5]
   2964c:	ldr	r0, [r3, r5]
   29650:	mla	r0, r0, r6, r1
   29654:	mul	r1, r0, r9
   29658:	ldr	r0, [sp, #48]	; 0x30
   2965c:	ldr	r0, [r0]
   29660:	bl	1a2c <fseek@plt>
   29664:	ldr	r3, [sp, #24]
   29668:	add	r1, r4, r8
   2966c:	ldr	r8, [fp, #24]
   29670:	sub	r1, r1, sl
   29674:	mov	sl, r9
   29678:	ldr	r0, [r3, r5]
   2967c:	mla	r9, r0, r6, r1
   29680:	ldr	r6, [sp, #28]
   29684:	subs	r7, r7, #1
   29688:	add	r5, r5, #4
   2968c:	beq	294f8 <ReadDataSlabN+0x3ff0>
   29690:	ldr	r0, [r6, r5]
   29694:	ldr	r1, [sp, #36]	; 0x24
   29698:	add	r0, r0, #1
   2969c:	str	r0, [r6, r5]
   296a0:	ldr	r1, [r1, r5]
   296a4:	sdiv	r2, r0, r1
   296a8:	mls	r0, r2, r1, r0
   296ac:	cmp	r0, #0
   296b0:	bne	29738 <ReadDataSlabN+0x4230>
   296b4:	mov	r0, #0
   296b8:	str	r0, [r6, r5]
   296bc:	ldr	r0, [sp, #32]
   296c0:	ldr	r4, [r0, r5]
   296c4:	sdiv	r0, r9, r4
   296c8:	mls	sl, r0, r4, r9
   296cc:	cmp	sl, #0
   296d0:	bne	29634 <ReadDataSlabN+0x412c>
   296d4:	ldr	r0, [r3, r5]
   296d8:	cmp	r0, #0
   296dc:	beq	29724 <ReadDataSlabN+0x421c>
   296e0:	ldr	sl, [sp, #52]	; 0x34
   296e4:	add	r1, sp, #56	; 0x38
   296e8:	mov	r2, #1
   296ec:	ldr	r6, [r1, r5]
   296f0:	mul	r0, r0, sl
   296f4:	mul	r1, r0, r6
   296f8:	ldr	r0, [sp, #48]	; 0x30
   296fc:	ldr	r0, [r0]
   29700:	bl	1a2c <fseek@plt>
   29704:	ldr	r3, [sp, #24]
   29708:	ldr	r0, [r3, r5]
   2970c:	mla	r9, r0, r6, r9
   29710:	ldr	r6, [sp, #28]
   29714:	subs	r7, r7, #1
   29718:	add	r5, r5, #4
   2971c:	bne	29690 <ReadDataSlabN+0x4188>
   29720:	b	294f8 <ReadDataSlabN+0x3ff0>
   29724:	ldr	sl, [sp, #52]	; 0x34
   29728:	subs	r7, r7, #1
   2972c:	add	r5, r5, #4
   29730:	bne	29690 <ReadDataSlabN+0x4188>
   29734:	b	294f8 <ReadDataSlabN+0x3ff0>
   29738:	ldr	r0, [sp, #8]
   2973c:	mov	r2, #1
   29740:	ldr	r5, [r0, r5]
   29744:	ldr	r0, [sp, #48]	; 0x30
   29748:	ldr	r0, [r0]
   2974c:	mul	r1, r5, sl
   29750:	bl	1a2c <fseek@plt>
   29754:	add	r9, r5, r9
   29758:	b	294f8 <ReadDataSlabN+0x3ff0>
   2975c:	ldr	r0, [sp, #20]
   29760:	sub	r1, fp, #72	; 0x48
   29764:	cmp	r0, #1
   29768:	ldr	r0, [fp, #16]
   2976c:	blt	29a38 <ReadDataSlabN+0x4530>
   29770:	ldr	r3, [fp, #24]
   29774:	add	r2, sp, #96	; 0x60
   29778:	mov	r5, #0
   2977c:	orr	r2, r2, #4
   29780:	mov	r8, r2
   29784:	orr	r2, r6, #4
   29788:	str	r2, [sp, #32]
   2978c:	str	r8, [sp, #24]
   29790:	add	r3, r3, #4
   29794:	str	r3, [sp, #36]	; 0x24
   29798:	add	r3, r0, #4
   2979c:	ldr	r0, [fp, #8]
   297a0:	str	r3, [sp, #28]
   297a4:	sub	r0, r0, #1
   297a8:	str	r0, [sp, #12]
   297ac:	orr	r0, r1, #4
   297b0:	str	r0, [sp, #8]
   297b4:	ldr	r4, [fp, #16]
   297b8:	ldr	r0, [r4]
   297bc:	cmp	r0, #0
   297c0:	bne	297f8 <ReadDataSlabN+0x42f0>
   297c4:	b	2981c <ReadDataSlabN+0x4314>
   297c8:	ldr	ip, [fp, #24]
   297cc:	ldr	r0, [ip]
   297d0:	ldr	r5, [sp, #16]
   297d4:	ldr	r1, [sp, #20]
   297d8:	add	r5, r0, r5
   297dc:	mov	r0, #0
   297e0:	cmp	r5, r1
   297e4:	bge	2558c <ReadDataSlabN+0x84>
   297e8:	ldr	r4, [fp, #16]
   297ec:	ldr	r0, [r4]
   297f0:	cmp	r0, #0
   297f4:	beq	2981c <ReadDataSlabN+0x4314>
   297f8:	ldr	r1, [sp, #52]	; 0x34
   297fc:	ldr	sl, [sp, #48]	; 0x30
   29800:	mov	r2, #1
   29804:	mul	r1, r0, r1
   29808:	ldr	r0, [sl]
   2980c:	bl	1a2c <fseek@plt>
   29810:	ldr	r0, [r4]
   29814:	add	r9, r0, r9
   29818:	b	29824 <ReadDataSlabN+0x431c>
   2981c:	ldr	sl, [sp, #48]	; 0x30
   29820:	mov	r0, #0
   29824:	ldr	r8, [fp, #24]
   29828:	ldr	r4, [sp, #44]	; 0x2c
   2982c:	str	r5, [sp, #16]
   29830:	ldr	r1, [r8]
   29834:	cmp	r1, #0
   29838:	ble	298ac <ReadDataSlabN+0x43a4>
   2983c:	ldr	r0, [sp, #40]	; 0x28
   29840:	ldr	r6, [sp, #52]	; 0x34
   29844:	ldr	r8, [fp, #20]
   29848:	mov	r7, #0
   2984c:	add	r5, r0, r5, lsl #3
   29850:	mov	r0, sl
   29854:	mov	r1, r5
   29858:	mov	r2, r4
   2985c:	mov	r3, #1
   29860:	bl	ecb8 <ReadUInt64Data>
   29864:	ldr	r0, [r8]
   29868:	mov	r2, #1
   2986c:	sub	r0, r0, #1
   29870:	mul	r1, r0, r6
   29874:	ldr	r0, [sl]
   29878:	bl	1a2c <fseek@plt>
   2987c:	ldr	r0, [fp, #24]
   29880:	ldr	r2, [r8]
   29884:	add	r7, r7, #1
   29888:	add	r5, r5, #8
   2988c:	ldr	r1, [r0]
   29890:	add	r9, r2, r9
   29894:	cmp	r7, r1
   29898:	blt	29850 <ReadDataSlabN+0x4348>
   2989c:	ldr	r0, [fp, #16]
   298a0:	add	r6, sp, #56	; 0x38
   298a4:	ldr	r0, [r0]
   298a8:	b	298b4 <ReadDataSlabN+0x43ac>
   298ac:	ldr	r2, [fp, #20]
   298b0:	ldr	r2, [r2]
   298b4:	ldr	r3, [fp, #12]
   298b8:	ldr	r3, [r3]
   298bc:	mls	r1, r2, r1, r3
   298c0:	mov	r2, #1
   298c4:	sub	r4, r1, r0
   298c8:	ldr	r0, [sp, #52]	; 0x34
   298cc:	mul	r1, r4, r0
   298d0:	ldr	r0, [sl]
   298d4:	bl	1a2c <fseek@plt>
   298d8:	ldr	r0, [fp, #8]
   298dc:	ldr	r8, [sp, #24]
   298e0:	add	r9, r4, r9
   298e4:	cmp	r0, #2
   298e8:	blt	297c8 <ReadDataSlabN+0x42c0>
   298ec:	ldr	r7, [sp, #12]
   298f0:	ldr	r3, [sp, #28]
   298f4:	ldr	ip, [fp, #24]
   298f8:	mov	r5, #0
   298fc:	b	29960 <ReadDataSlabN+0x4458>
   29900:	add	r0, sp, #56	; 0x38
   29904:	sub	r1, r4, sl
   29908:	ldr	r8, [sp, #48]	; 0x30
   2990c:	mov	r2, #1
   29910:	ldr	r6, [r0, r5]
   29914:	ldr	r0, [r3, r5]
   29918:	mla	r0, r0, r6, r1
   2991c:	ldr	r1, [sp, #52]	; 0x34
   29920:	mul	r1, r0, r1
   29924:	ldr	r0, [r8]
   29928:	bl	1a2c <fseek@plt>
   2992c:	add	r1, r4, r9
   29930:	ldr	r3, [sp, #28]
   29934:	sub	r1, r1, sl
   29938:	mov	sl, r8
   2993c:	ldr	r8, [fp, #24]
   29940:	ldr	r0, [r3, r5]
   29944:	mov	ip, r8
   29948:	ldr	r8, [sp, #24]
   2994c:	mla	r9, r0, r6, r1
   29950:	add	r6, sp, #56	; 0x38
   29954:	subs	r7, r7, #1
   29958:	add	r5, r5, #4
   2995c:	beq	297cc <ReadDataSlabN+0x42c4>
   29960:	ldr	r0, [r8, r5]
   29964:	ldr	r1, [sp, #36]	; 0x24
   29968:	add	r0, r0, #1
   2996c:	str	r0, [r8, r5]
   29970:	ldr	r1, [r1, r5]
   29974:	sdiv	r2, r0, r1
   29978:	mls	r0, r2, r1, r0
   2997c:	cmp	r0, #0
   29980:	bne	29a0c <ReadDataSlabN+0x4504>
   29984:	mov	r0, #0
   29988:	str	r0, [r8, r5]
   2998c:	ldr	r0, [sp, #32]
   29990:	ldr	r4, [r0, r5]
   29994:	sdiv	r0, r9, r4
   29998:	mls	sl, r0, r4, r9
   2999c:	cmp	sl, #0
   299a0:	bne	29900 <ReadDataSlabN+0x43f8>
   299a4:	ldr	r0, [r3, r5]
   299a8:	cmp	r0, #0
   299ac:	beq	299f8 <ReadDataSlabN+0x44f0>
   299b0:	ldr	r1, [sp, #52]	; 0x34
   299b4:	ldr	r4, [r6, r5]
   299b8:	ldr	sl, [sp, #48]	; 0x30
   299bc:	mov	r2, #1
   299c0:	mov	r6, ip
   299c4:	mul	r0, r0, r1
   299c8:	mul	r1, r0, r4
   299cc:	ldr	r0, [sl]
   299d0:	bl	1a2c <fseek@plt>
   299d4:	ldr	r3, [sp, #28]
   299d8:	mov	ip, r6
   299dc:	add	r6, sp, #56	; 0x38
   299e0:	ldr	r0, [r3, r5]
   299e4:	mla	r9, r0, r4, r9
   299e8:	subs	r7, r7, #1
   299ec:	add	r5, r5, #4
   299f0:	bne	29960 <ReadDataSlabN+0x4458>
   299f4:	b	297cc <ReadDataSlabN+0x42c4>
   299f8:	ldr	sl, [sp, #48]	; 0x30
   299fc:	subs	r7, r7, #1
   29a00:	add	r5, r5, #4
   29a04:	bne	29960 <ReadDataSlabN+0x4458>
   29a08:	b	297cc <ReadDataSlabN+0x42c4>
   29a0c:	ldr	r0, [sp, #8]
   29a10:	mov	r2, #1
   29a14:	ldr	r4, [r0, r5]
   29a18:	ldr	r0, [sp, #52]	; 0x34
   29a1c:	mov	r5, ip
   29a20:	mul	r1, r4, r0
   29a24:	ldr	r0, [sl]
   29a28:	bl	1a2c <fseek@plt>
   29a2c:	mov	ip, r5
   29a30:	add	r9, r4, r9
   29a34:	b	297cc <ReadDataSlabN+0x42c4>
   29a38:	mov	r0, #0
   29a3c:	sub	sp, fp, #28
   29a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00029a44 <ReadCompressedDataSlabN>:
   29a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29a48:	add	fp, sp, #28
   29a4c:	sub	sp, sp, #236	; 0xec
   29a50:	vmov.i32	q8, #0	; 0x00000000
   29a54:	sub	r5, fp, #72	; 0x48
   29a58:	mov	r6, r0
   29a5c:	mov	r7, r2
   29a60:	mov	r0, #36	; 0x24
   29a64:	mov	r8, r3
   29a68:	mov	r3, #0
   29a6c:	mov	r2, r5
   29a70:	cmp	r6, #0
   29a74:	str	r3, [fp, #-40]	; 0xffffffd8
   29a78:	str	r3, [fp, #-80]	; 0xffffffb0
   29a7c:	str	r3, [sp, #144]	; 0x90
   29a80:	str	r3, [sp, #104]	; 0x68
   29a84:	cmpne	r7, #0
   29a88:	vst1.64	{d16-d17}, [r2], r0
   29a8c:	str	r3, [r2]
   29a90:	add	r2, r5, #16
   29a94:	sub	r5, fp, #112	; 0x70
   29a98:	vst1.64	{d16-d17}, [r2]
   29a9c:	add	r2, r5, #16
   29aa0:	vst1.64	{d16-d17}, [r2]
   29aa4:	mov	r2, r5
   29aa8:	add	r5, sp, #112	; 0x70
   29aac:	vst1.64	{d16-d17}, [r2], r0
   29ab0:	str	r3, [r2]
   29ab4:	add	r2, r5, #16
   29ab8:	vst1.64	{d16-d17}, [r2]
   29abc:	mov	r2, r5
   29ac0:	vst1.64	{d16-d17}, [r2], r0
   29ac4:	add	r0, sp, #56	; 0x38
   29ac8:	str	r3, [r2]
   29acc:	add	r2, r0, #32
   29ad0:	vst1.64	{d16-d17}, [r2]
   29ad4:	add	r2, r0, #16
   29ad8:	vst1.64	{d16-d17}, [r2]
   29adc:	mov	r2, #52	; 0x34
   29ae0:	vst1.64	{d16-d17}, [r0], r2
   29ae4:	str	r3, [r0]
   29ae8:	mov	r0, #1
   29aec:	bne	29af8 <ReadCompressedDataSlabN+0xb4>
   29af0:	sub	sp, fp, #28
   29af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29af8:	ldr	r2, [fp, #12]
   29afc:	cmp	r2, #10
   29b00:	bgt	29af0 <ReadCompressedDataSlabN+0xac>
   29b04:	ldr	r2, [fp, #28]
   29b08:	cmp	r2, #0
   29b0c:	ldrne	r2, [fp, #24]
   29b10:	cmpne	r2, #0
   29b14:	beq	29af0 <ReadCompressedDataSlabN+0xac>
   29b18:	ldr	sl, [fp, #20]
   29b1c:	cmp	sl, #0
   29b20:	ldrne	r2, [r6]
   29b24:	cmpne	r2, #0
   29b28:	beq	29af0 <ReadCompressedDataSlabN+0xac>
   29b2c:	add	r0, sp, #56	; 0x38
   29b30:	str	r6, [sp, #52]	; 0x34
   29b34:	str	r7, [sp, #48]	; 0x30
   29b38:	bl	1948 <inflateCopy@plt>
   29b3c:	sub	r0, r8, #6
   29b40:	cmp	r0, #9
   29b44:	bhi	2e320 <ReadCompressedDataSlabN+0x48dc>
   29b48:	add	r1, pc, #8
   29b4c:	ldr	r2, [fp, #16]
   29b50:	ldr	r0, [r1, r0, lsl #2]
   29b54:	add	pc, r1, r0
   29b58:	.word	0x00000028
   29b5c:	.word	0x000001ac
   29b60:	.word	0x00000324
   29b64:	.word	0x0000049c
   29b68:	.word	0x00000614
   29b6c:	.word	0x0000078c
   29b70:	.word	0x00000904
   29b74:	.word	0x00000a7c
   29b78:	.word	0x00000bf4
   29b7c:	.word	0x00000d6c
   29b80:	ldr	r7, [fp, #24]
   29b84:	ldr	r0, [r7]
   29b88:	sub	r0, r0, #1
   29b8c:	str	r0, [fp, #-72]	; 0xffffffb8
   29b90:	ldr	r0, [fp, #28]
   29b94:	ldr	r9, [r2]
   29b98:	str	r9, [sp, #112]	; 0x70
   29b9c:	ldr	r0, [r0]
   29ba0:	str	r0, [sp, #28]
   29ba4:	ldr	r0, [fp, #12]
   29ba8:	cmp	r0, #2
   29bac:	blt	2c0f8 <ReadCompressedDataSlabN+0x26b4>
   29bb0:	mov	r1, #0
   29bb4:	sub	r5, r2, #4
   29bb8:	sub	ip, r2, #12
   29bbc:	mov	r3, #1
   29bc0:	mov	lr, #0
   29bc4:	mvn	r8, #15
   29bc8:	mov	r4, r9
   29bcc:	add	r2, sp, #112	; 0x70
   29bd0:	sub	r7, fp, #72	; 0x48
   29bd4:	str	r1, [sp, #44]	; 0x2c
   29bd8:	b	29c2c <ReadCompressedDataSlabN+0x1e8>
   29bdc:	add	r2, sp, #112	; 0x70
   29be0:	sub	r7, fp, #72	; 0x48
   29be4:	add	ip, ip, #4
   29be8:	str	r6, [r7, r3, lsl #2]
   29bec:	str	r4, [r2, r3, lsl #2]
   29bf0:	ldr	r6, [sp, #44]	; 0x2c
   29bf4:	ldr	r1, [sl, r3, lsl #2]
   29bf8:	mla	r6, r1, r9, r6
   29bfc:	ldr	r1, [fp, #28]
   29c00:	mov	r9, r4
   29c04:	mov	r4, r0
   29c08:	str	r6, [sp, #44]	; 0x2c
   29c0c:	ldr	r6, [sp, #28]
   29c10:	ldr	r1, [r1, r3, lsl #2]
   29c14:	add	r3, r3, #1
   29c18:	mul	r6, r1, r6
   29c1c:	ldr	r1, [fp, #12]
   29c20:	str	r6, [sp, #28]
   29c24:	cmp	r3, r1
   29c28:	beq	2c100 <ReadCompressedDataSlabN+0x26bc>
   29c2c:	ldr	r1, [fp, #24]
   29c30:	add	lr, lr, #1
   29c34:	cmp	lr, #4
   29c38:	ldr	r1, [r1, r3, lsl #2]
   29c3c:	str	r4, [r2, r3, lsl #2]
   29c40:	sub	r6, r1, #1
   29c44:	ldr	r1, [fp, #16]
   29c48:	str	r6, [r7, r3, lsl #2]
   29c4c:	ldr	r1, [r1, r3, lsl #2]
   29c50:	bcs	29c60 <ReadCompressedDataSlabN+0x21c>
   29c54:	mov	r0, r1
   29c58:	mov	r2, r3
   29c5c:	b	29cec <ReadCompressedDataSlabN+0x2a8>
   29c60:	vmov.i32	q9, #1	; 0x00000001
   29c64:	vmov.i32	q10, #1	; 0x00000001
   29c68:	vmov.32	d23[1], r1
   29c6c:	vmov.i32	q8, #1	; 0x00000001
   29c70:	bic	r7, lr, #3
   29c74:	mov	r0, r1
   29c78:	bic	sl, r3, #3
   29c7c:	mov	r1, ip
   29c80:	sub	r2, r3, r7
   29c84:	vmov.32	d18[0], r4
   29c88:	vmov.32	d20[0], r6
   29c8c:	vorr	d16, d18, d18
   29c90:	vmov.i32	q9, #1	; 0x00000001
   29c94:	vorr	d18, d20, d20
   29c98:	vld1.32	{d20-d21}, [r1], r8
   29c9c:	subs	sl, sl, #4
   29ca0:	vrev64.32	q12, q10
   29ca4:	vext.8	q12, q12, q12, #8
   29ca8:	vext.8	q11, q11, q12, #12
   29cac:	vmul.i32	q9, q9, q12
   29cb0:	vmul.i32	q8, q11, q8
   29cb4:	vorr	q11, q12, q12
   29cb8:	bne	29c98 <ReadCompressedDataSlabN+0x254>
   29cbc:	vext.8	q11, q9, q8, #8
   29cc0:	vext.8	q12, q8, q8, #8
   29cc4:	ldr	sl, [fp, #20]
   29cc8:	cmp	lr, r7
   29ccc:	vmul.i32	q0, q9, q11
   29cd0:	vmul.i32	q1, q8, q12
   29cd4:	vmul.i32	q8, q0, d0[1]
   29cd8:	vmul.i32	q9, q1, d2[1]
   29cdc:	vmov.32	r6, d16[0]
   29ce0:	vmov.32	r4, d18[0]
   29ce4:	beq	29bdc <ReadCompressedDataSlabN+0x198>
   29ce8:	vmov.32	r1, d20[0]
   29cec:	mul	r4, r1, r4
   29cf0:	ldr	r1, [r5, r2, lsl #2]
   29cf4:	subs	r2, r2, #1
   29cf8:	mul	r6, r6, r1
   29cfc:	bne	29cec <ReadCompressedDataSlabN+0x2a8>
   29d00:	b	29bdc <ReadCompressedDataSlabN+0x198>
   29d04:	ldr	r0, [fp, #24]
   29d08:	mov	r9, #0
   29d0c:	ldr	r0, [r0]
   29d10:	sub	r0, r0, #1
   29d14:	str	r0, [fp, #-72]	; 0xffffffb8
   29d18:	ldr	r0, [fp, #28]
   29d1c:	ldr	r8, [r2]
   29d20:	str	r8, [sp, #112]	; 0x70
   29d24:	ldr	r0, [r0]
   29d28:	str	r0, [sp, #32]
   29d2c:	ldr	r0, [fp, #12]
   29d30:	cmp	r0, #2
   29d34:	blt	2aa3c <ReadCompressedDataSlabN+0xff8>
   29d38:	sub	r7, r2, #4
   29d3c:	sub	ip, r2, #12
   29d40:	mov	r3, #1
   29d44:	mov	r0, #0
   29d48:	mvn	r5, #15
   29d4c:	mov	r4, r8
   29d50:	mov	r9, #0
   29d54:	add	r2, sp, #112	; 0x70
   29d58:	sub	lr, fp, #72	; 0x48
   29d5c:	b	29da8 <ReadCompressedDataSlabN+0x364>
   29d60:	add	r2, sp, #112	; 0x70
   29d64:	sub	lr, fp, #72	; 0x48
   29d68:	add	ip, ip, #4
   29d6c:	str	r6, [lr, r3, lsl #2]
   29d70:	str	r4, [r2, r3, lsl #2]
   29d74:	ldr	r6, [sp, #32]
   29d78:	ldr	r1, [sl, r3, lsl #2]
   29d7c:	mla	r9, r1, r8, r9
   29d80:	ldr	r1, [fp, #28]
   29d84:	mov	r8, r4
   29d88:	ldr	r4, [sp, #44]	; 0x2c
   29d8c:	ldr	r1, [r1, r3, lsl #2]
   29d90:	add	r3, r3, #1
   29d94:	mul	r6, r1, r6
   29d98:	ldr	r1, [fp, #12]
   29d9c:	str	r6, [sp, #32]
   29da0:	cmp	r3, r1
   29da4:	beq	2aa3c <ReadCompressedDataSlabN+0xff8>
   29da8:	ldr	r1, [fp, #24]
   29dac:	add	r0, r0, #1
   29db0:	cmp	r0, #4
   29db4:	ldr	r1, [r1, r3, lsl #2]
   29db8:	str	r4, [r2, r3, lsl #2]
   29dbc:	sub	r6, r1, #1
   29dc0:	ldr	r1, [fp, #16]
   29dc4:	str	r6, [lr, r3, lsl #2]
   29dc8:	ldr	r1, [r1, r3, lsl #2]
   29dcc:	str	r1, [sp, #44]	; 0x2c
   29dd0:	bcs	29ddc <ReadCompressedDataSlabN+0x398>
   29dd4:	mov	r2, r3
   29dd8:	b	29e64 <ReadCompressedDataSlabN+0x420>
   29ddc:	vmov.i32	q9, #1	; 0x00000001
   29de0:	vmov.i32	q10, #1	; 0x00000001
   29de4:	vmov.32	d23[1], r1
   29de8:	vmov.i32	q8, #1	; 0x00000001
   29dec:	bic	lr, r0, #3
   29df0:	bic	sl, r3, #3
   29df4:	mov	r1, ip
   29df8:	sub	r2, r3, lr
   29dfc:	vmov.32	d18[0], r4
   29e00:	vmov.32	d20[0], r6
   29e04:	vorr	d16, d18, d18
   29e08:	vmov.i32	q9, #1	; 0x00000001
   29e0c:	vorr	d18, d20, d20
   29e10:	vld1.32	{d20-d21}, [r1], r5
   29e14:	subs	sl, sl, #4
   29e18:	vrev64.32	q12, q10
   29e1c:	vext.8	q12, q12, q12, #8
   29e20:	vext.8	q11, q11, q12, #12
   29e24:	vmul.i32	q9, q9, q12
   29e28:	vmul.i32	q8, q11, q8
   29e2c:	vorr	q11, q12, q12
   29e30:	bne	29e10 <ReadCompressedDataSlabN+0x3cc>
   29e34:	vext.8	q11, q9, q8, #8
   29e38:	vext.8	q12, q8, q8, #8
   29e3c:	ldr	sl, [fp, #20]
   29e40:	cmp	r0, lr
   29e44:	vmul.i32	q0, q9, q11
   29e48:	vmul.i32	q1, q8, q12
   29e4c:	vmul.i32	q8, q0, d0[1]
   29e50:	vmul.i32	q9, q1, d2[1]
   29e54:	vmov.32	r6, d16[0]
   29e58:	vmov.32	r4, d18[0]
   29e5c:	beq	29d60 <ReadCompressedDataSlabN+0x31c>
   29e60:	vmov.32	r1, d20[0]
   29e64:	mul	r4, r1, r4
   29e68:	ldr	r1, [r7, r2, lsl #2]
   29e6c:	subs	r2, r2, #1
   29e70:	mul	r6, r6, r1
   29e74:	bne	29e64 <ReadCompressedDataSlabN+0x420>
   29e78:	b	29d60 <ReadCompressedDataSlabN+0x31c>
   29e7c:	ldr	r0, [fp, #24]
   29e80:	mov	r7, #0
   29e84:	ldr	r0, [r0]
   29e88:	sub	r0, r0, #1
   29e8c:	str	r0, [fp, #-72]	; 0xffffffb8
   29e90:	ldr	r0, [fp, #28]
   29e94:	ldr	r9, [r2]
   29e98:	str	r9, [sp, #112]	; 0x70
   29e9c:	ldr	r0, [r0]
   29ea0:	str	r0, [sp, #24]
   29ea4:	ldr	r0, [fp, #12]
   29ea8:	cmp	r0, #2
   29eac:	blt	2acc0 <ReadCompressedDataSlabN+0x127c>
   29eb0:	sub	r5, r2, #4
   29eb4:	sub	ip, r2, #12
   29eb8:	mov	r3, #1
   29ebc:	mov	r0, #0
   29ec0:	mvn	r8, #15
   29ec4:	mov	r4, r9
   29ec8:	mov	r7, #0
   29ecc:	add	r2, sp, #112	; 0x70
   29ed0:	sub	lr, fp, #72	; 0x48
   29ed4:	b	29f20 <ReadCompressedDataSlabN+0x4dc>
   29ed8:	add	r2, sp, #112	; 0x70
   29edc:	sub	lr, fp, #72	; 0x48
   29ee0:	add	ip, ip, #4
   29ee4:	str	r6, [lr, r3, lsl #2]
   29ee8:	str	r4, [r2, r3, lsl #2]
   29eec:	ldr	r6, [sp, #24]
   29ef0:	ldr	r1, [sl, r3, lsl #2]
   29ef4:	mla	r7, r1, r9, r7
   29ef8:	ldr	r1, [fp, #28]
   29efc:	mov	r9, r4
   29f00:	ldr	r4, [sp, #44]	; 0x2c
   29f04:	ldr	r1, [r1, r3, lsl #2]
   29f08:	add	r3, r3, #1
   29f0c:	mul	r6, r1, r6
   29f10:	ldr	r1, [fp, #12]
   29f14:	str	r6, [sp, #24]
   29f18:	cmp	r3, r1
   29f1c:	beq	2acc0 <ReadCompressedDataSlabN+0x127c>
   29f20:	ldr	r1, [fp, #24]
   29f24:	add	r0, r0, #1
   29f28:	cmp	r0, #4
   29f2c:	ldr	r1, [r1, r3, lsl #2]
   29f30:	str	r4, [r2, r3, lsl #2]
   29f34:	sub	r6, r1, #1
   29f38:	ldr	r1, [fp, #16]
   29f3c:	str	r6, [lr, r3, lsl #2]
   29f40:	ldr	r1, [r1, r3, lsl #2]
   29f44:	str	r1, [sp, #44]	; 0x2c
   29f48:	bcs	29f54 <ReadCompressedDataSlabN+0x510>
   29f4c:	mov	r2, r3
   29f50:	b	29fdc <ReadCompressedDataSlabN+0x598>
   29f54:	vmov.i32	q9, #1	; 0x00000001
   29f58:	vmov.i32	q10, #1	; 0x00000001
   29f5c:	vmov.32	d23[1], r1
   29f60:	vmov.i32	q8, #1	; 0x00000001
   29f64:	bic	lr, r0, #3
   29f68:	bic	sl, r3, #3
   29f6c:	mov	r1, ip
   29f70:	sub	r2, r3, lr
   29f74:	vmov.32	d18[0], r4
   29f78:	vmov.32	d20[0], r6
   29f7c:	vorr	d16, d18, d18
   29f80:	vmov.i32	q9, #1	; 0x00000001
   29f84:	vorr	d18, d20, d20
   29f88:	vld1.32	{d20-d21}, [r1], r8
   29f8c:	subs	sl, sl, #4
   29f90:	vrev64.32	q12, q10
   29f94:	vext.8	q12, q12, q12, #8
   29f98:	vext.8	q11, q11, q12, #12
   29f9c:	vmul.i32	q9, q9, q12
   29fa0:	vmul.i32	q8, q11, q8
   29fa4:	vorr	q11, q12, q12
   29fa8:	bne	29f88 <ReadCompressedDataSlabN+0x544>
   29fac:	vext.8	q11, q9, q8, #8
   29fb0:	vext.8	q12, q8, q8, #8
   29fb4:	ldr	sl, [fp, #20]
   29fb8:	cmp	r0, lr
   29fbc:	vmul.i32	q0, q9, q11
   29fc0:	vmul.i32	q1, q8, q12
   29fc4:	vmul.i32	q8, q0, d0[1]
   29fc8:	vmul.i32	q9, q1, d2[1]
   29fcc:	vmov.32	r6, d16[0]
   29fd0:	vmov.32	r4, d18[0]
   29fd4:	beq	29ed8 <ReadCompressedDataSlabN+0x494>
   29fd8:	vmov.32	r1, d20[0]
   29fdc:	mul	r4, r1, r4
   29fe0:	ldr	r1, [r5, r2, lsl #2]
   29fe4:	subs	r2, r2, #1
   29fe8:	mul	r6, r6, r1
   29fec:	bne	29fdc <ReadCompressedDataSlabN+0x598>
   29ff0:	b	29ed8 <ReadCompressedDataSlabN+0x494>
   29ff4:	ldr	r0, [fp, #24]
   29ff8:	mov	r7, #0
   29ffc:	ldr	r0, [r0]
   2a000:	sub	r0, r0, #1
   2a004:	str	r0, [fp, #-72]	; 0xffffffb8
   2a008:	ldr	r0, [fp, #28]
   2a00c:	ldr	r9, [r2]
   2a010:	str	r9, [sp, #112]	; 0x70
   2a014:	ldr	r0, [r0]
   2a018:	str	r0, [sp, #24]
   2a01c:	ldr	r0, [fp, #12]
   2a020:	cmp	r0, #2
   2a024:	blt	2af50 <ReadCompressedDataSlabN+0x150c>
   2a028:	sub	r5, r2, #4
   2a02c:	sub	ip, r2, #12
   2a030:	mov	r3, #1
   2a034:	mov	r0, #0
   2a038:	mvn	r8, #15
   2a03c:	mov	r4, r9
   2a040:	mov	r7, #0
   2a044:	add	r2, sp, #112	; 0x70
   2a048:	sub	lr, fp, #72	; 0x48
   2a04c:	b	2a098 <ReadCompressedDataSlabN+0x654>
   2a050:	add	r2, sp, #112	; 0x70
   2a054:	sub	lr, fp, #72	; 0x48
   2a058:	add	ip, ip, #4
   2a05c:	str	r6, [lr, r3, lsl #2]
   2a060:	str	r4, [r2, r3, lsl #2]
   2a064:	ldr	r6, [sp, #24]
   2a068:	ldr	r1, [sl, r3, lsl #2]
   2a06c:	mla	r7, r1, r9, r7
   2a070:	ldr	r1, [fp, #28]
   2a074:	mov	r9, r4
   2a078:	ldr	r4, [sp, #44]	; 0x2c
   2a07c:	ldr	r1, [r1, r3, lsl #2]
   2a080:	add	r3, r3, #1
   2a084:	mul	r6, r1, r6
   2a088:	ldr	r1, [fp, #12]
   2a08c:	str	r6, [sp, #24]
   2a090:	cmp	r3, r1
   2a094:	beq	2af50 <ReadCompressedDataSlabN+0x150c>
   2a098:	ldr	r1, [fp, #24]
   2a09c:	add	r0, r0, #1
   2a0a0:	cmp	r0, #4
   2a0a4:	ldr	r1, [r1, r3, lsl #2]
   2a0a8:	str	r4, [r2, r3, lsl #2]
   2a0ac:	sub	r6, r1, #1
   2a0b0:	ldr	r1, [fp, #16]
   2a0b4:	str	r6, [lr, r3, lsl #2]
   2a0b8:	ldr	r1, [r1, r3, lsl #2]
   2a0bc:	str	r1, [sp, #44]	; 0x2c
   2a0c0:	bcs	2a0cc <ReadCompressedDataSlabN+0x688>
   2a0c4:	mov	r2, r3
   2a0c8:	b	2a154 <ReadCompressedDataSlabN+0x710>
   2a0cc:	vmov.i32	q9, #1	; 0x00000001
   2a0d0:	vmov.i32	q10, #1	; 0x00000001
   2a0d4:	vmov.32	d23[1], r1
   2a0d8:	vmov.i32	q8, #1	; 0x00000001
   2a0dc:	bic	lr, r0, #3
   2a0e0:	bic	sl, r3, #3
   2a0e4:	mov	r1, ip
   2a0e8:	sub	r2, r3, lr
   2a0ec:	vmov.32	d18[0], r4
   2a0f0:	vmov.32	d20[0], r6
   2a0f4:	vorr	d16, d18, d18
   2a0f8:	vmov.i32	q9, #1	; 0x00000001
   2a0fc:	vorr	d18, d20, d20
   2a100:	vld1.32	{d20-d21}, [r1], r8
   2a104:	subs	sl, sl, #4
   2a108:	vrev64.32	q12, q10
   2a10c:	vext.8	q12, q12, q12, #8
   2a110:	vext.8	q11, q11, q12, #12
   2a114:	vmul.i32	q9, q9, q12
   2a118:	vmul.i32	q8, q11, q8
   2a11c:	vorr	q11, q12, q12
   2a120:	bne	2a100 <ReadCompressedDataSlabN+0x6bc>
   2a124:	vext.8	q11, q9, q8, #8
   2a128:	vext.8	q12, q8, q8, #8
   2a12c:	ldr	sl, [fp, #20]
   2a130:	cmp	r0, lr
   2a134:	vmul.i32	q0, q9, q11
   2a138:	vmul.i32	q1, q8, q12
   2a13c:	vmul.i32	q8, q0, d0[1]
   2a140:	vmul.i32	q9, q1, d2[1]
   2a144:	vmov.32	r6, d16[0]
   2a148:	vmov.32	r4, d18[0]
   2a14c:	beq	2a050 <ReadCompressedDataSlabN+0x60c>
   2a150:	vmov.32	r1, d20[0]
   2a154:	mul	r4, r1, r4
   2a158:	ldr	r1, [r5, r2, lsl #2]
   2a15c:	subs	r2, r2, #1
   2a160:	mul	r6, r6, r1
   2a164:	bne	2a154 <ReadCompressedDataSlabN+0x710>
   2a168:	b	2a050 <ReadCompressedDataSlabN+0x60c>
   2a16c:	ldr	r0, [fp, #24]
   2a170:	mov	r9, #0
   2a174:	ldr	r0, [r0]
   2a178:	sub	r0, r0, #1
   2a17c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a180:	ldr	r0, [fp, #28]
   2a184:	ldr	r8, [r2]
   2a188:	str	r8, [sp, #112]	; 0x70
   2a18c:	ldr	r0, [r0]
   2a190:	str	r0, [sp, #32]
   2a194:	ldr	r0, [fp, #12]
   2a198:	cmp	r0, #2
   2a19c:	blt	2b1e0 <ReadCompressedDataSlabN+0x179c>
   2a1a0:	sub	r7, r2, #4
   2a1a4:	sub	ip, r2, #12
   2a1a8:	mov	r3, #1
   2a1ac:	mov	r0, #0
   2a1b0:	mvn	r5, #15
   2a1b4:	mov	r4, r8
   2a1b8:	mov	r9, #0
   2a1bc:	add	r2, sp, #112	; 0x70
   2a1c0:	sub	lr, fp, #72	; 0x48
   2a1c4:	b	2a210 <ReadCompressedDataSlabN+0x7cc>
   2a1c8:	add	r2, sp, #112	; 0x70
   2a1cc:	sub	lr, fp, #72	; 0x48
   2a1d0:	add	ip, ip, #4
   2a1d4:	str	r6, [lr, r3, lsl #2]
   2a1d8:	str	r4, [r2, r3, lsl #2]
   2a1dc:	ldr	r6, [sp, #32]
   2a1e0:	ldr	r1, [sl, r3, lsl #2]
   2a1e4:	mla	r9, r1, r8, r9
   2a1e8:	ldr	r1, [fp, #28]
   2a1ec:	mov	r8, r4
   2a1f0:	ldr	r4, [sp, #44]	; 0x2c
   2a1f4:	ldr	r1, [r1, r3, lsl #2]
   2a1f8:	add	r3, r3, #1
   2a1fc:	mul	r6, r1, r6
   2a200:	ldr	r1, [fp, #12]
   2a204:	str	r6, [sp, #32]
   2a208:	cmp	r3, r1
   2a20c:	beq	2b1e0 <ReadCompressedDataSlabN+0x179c>
   2a210:	ldr	r1, [fp, #24]
   2a214:	add	r0, r0, #1
   2a218:	cmp	r0, #4
   2a21c:	ldr	r1, [r1, r3, lsl #2]
   2a220:	str	r4, [r2, r3, lsl #2]
   2a224:	sub	r6, r1, #1
   2a228:	ldr	r1, [fp, #16]
   2a22c:	str	r6, [lr, r3, lsl #2]
   2a230:	ldr	r1, [r1, r3, lsl #2]
   2a234:	str	r1, [sp, #44]	; 0x2c
   2a238:	bcs	2a244 <ReadCompressedDataSlabN+0x800>
   2a23c:	mov	r2, r3
   2a240:	b	2a2cc <ReadCompressedDataSlabN+0x888>
   2a244:	vmov.i32	q9, #1	; 0x00000001
   2a248:	vmov.i32	q10, #1	; 0x00000001
   2a24c:	vmov.32	d23[1], r1
   2a250:	vmov.i32	q8, #1	; 0x00000001
   2a254:	bic	lr, r0, #3
   2a258:	bic	sl, r3, #3
   2a25c:	mov	r1, ip
   2a260:	sub	r2, r3, lr
   2a264:	vmov.32	d18[0], r4
   2a268:	vmov.32	d20[0], r6
   2a26c:	vorr	d16, d18, d18
   2a270:	vmov.i32	q9, #1	; 0x00000001
   2a274:	vorr	d18, d20, d20
   2a278:	vld1.32	{d20-d21}, [r1], r5
   2a27c:	subs	sl, sl, #4
   2a280:	vrev64.32	q12, q10
   2a284:	vext.8	q12, q12, q12, #8
   2a288:	vext.8	q11, q11, q12, #12
   2a28c:	vmul.i32	q9, q9, q12
   2a290:	vmul.i32	q8, q11, q8
   2a294:	vorr	q11, q12, q12
   2a298:	bne	2a278 <ReadCompressedDataSlabN+0x834>
   2a29c:	vext.8	q11, q9, q8, #8
   2a2a0:	vext.8	q12, q8, q8, #8
   2a2a4:	ldr	sl, [fp, #20]
   2a2a8:	cmp	r0, lr
   2a2ac:	vmul.i32	q0, q9, q11
   2a2b0:	vmul.i32	q1, q8, q12
   2a2b4:	vmul.i32	q8, q0, d0[1]
   2a2b8:	vmul.i32	q9, q1, d2[1]
   2a2bc:	vmov.32	r6, d16[0]
   2a2c0:	vmov.32	r4, d18[0]
   2a2c4:	beq	2a1c8 <ReadCompressedDataSlabN+0x784>
   2a2c8:	vmov.32	r1, d20[0]
   2a2cc:	mul	r4, r1, r4
   2a2d0:	ldr	r1, [r7, r2, lsl #2]
   2a2d4:	subs	r2, r2, #1
   2a2d8:	mul	r6, r6, r1
   2a2dc:	bne	2a2cc <ReadCompressedDataSlabN+0x888>
   2a2e0:	b	2a1c8 <ReadCompressedDataSlabN+0x784>
   2a2e4:	ldr	r0, [fp, #24]
   2a2e8:	mov	r9, #0
   2a2ec:	ldr	r0, [r0]
   2a2f0:	sub	r0, r0, #1
   2a2f4:	str	r0, [fp, #-72]	; 0xffffffb8
   2a2f8:	ldr	r0, [fp, #28]
   2a2fc:	ldr	r8, [r2]
   2a300:	str	r8, [sp, #112]	; 0x70
   2a304:	ldr	r0, [r0]
   2a308:	str	r0, [sp, #32]
   2a30c:	ldr	r0, [fp, #12]
   2a310:	cmp	r0, #2
   2a314:	blt	2b464 <ReadCompressedDataSlabN+0x1a20>
   2a318:	sub	r7, r2, #4
   2a31c:	sub	ip, r2, #12
   2a320:	mov	r3, #1
   2a324:	mov	r0, #0
   2a328:	mvn	r5, #15
   2a32c:	mov	r4, r8
   2a330:	mov	r9, #0
   2a334:	add	r2, sp, #112	; 0x70
   2a338:	sub	lr, fp, #72	; 0x48
   2a33c:	b	2a388 <ReadCompressedDataSlabN+0x944>
   2a340:	add	r2, sp, #112	; 0x70
   2a344:	sub	lr, fp, #72	; 0x48
   2a348:	add	ip, ip, #4
   2a34c:	str	r6, [lr, r3, lsl #2]
   2a350:	str	r4, [r2, r3, lsl #2]
   2a354:	ldr	r6, [sp, #32]
   2a358:	ldr	r1, [sl, r3, lsl #2]
   2a35c:	mla	r9, r1, r8, r9
   2a360:	ldr	r1, [fp, #28]
   2a364:	mov	r8, r4
   2a368:	ldr	r4, [sp, #44]	; 0x2c
   2a36c:	ldr	r1, [r1, r3, lsl #2]
   2a370:	add	r3, r3, #1
   2a374:	mul	r6, r1, r6
   2a378:	ldr	r1, [fp, #12]
   2a37c:	str	r6, [sp, #32]
   2a380:	cmp	r3, r1
   2a384:	beq	2b464 <ReadCompressedDataSlabN+0x1a20>
   2a388:	ldr	r1, [fp, #24]
   2a38c:	add	r0, r0, #1
   2a390:	cmp	r0, #4
   2a394:	ldr	r1, [r1, r3, lsl #2]
   2a398:	str	r4, [r2, r3, lsl #2]
   2a39c:	sub	r6, r1, #1
   2a3a0:	ldr	r1, [fp, #16]
   2a3a4:	str	r6, [lr, r3, lsl #2]
   2a3a8:	ldr	r1, [r1, r3, lsl #2]
   2a3ac:	str	r1, [sp, #44]	; 0x2c
   2a3b0:	bcs	2a3bc <ReadCompressedDataSlabN+0x978>
   2a3b4:	mov	r2, r3
   2a3b8:	b	2a444 <ReadCompressedDataSlabN+0xa00>
   2a3bc:	vmov.i32	q9, #1	; 0x00000001
   2a3c0:	vmov.i32	q10, #1	; 0x00000001
   2a3c4:	vmov.32	d23[1], r1
   2a3c8:	vmov.i32	q8, #1	; 0x00000001
   2a3cc:	bic	lr, r0, #3
   2a3d0:	bic	sl, r3, #3
   2a3d4:	mov	r1, ip
   2a3d8:	sub	r2, r3, lr
   2a3dc:	vmov.32	d18[0], r4
   2a3e0:	vmov.32	d20[0], r6
   2a3e4:	vorr	d16, d18, d18
   2a3e8:	vmov.i32	q9, #1	; 0x00000001
   2a3ec:	vorr	d18, d20, d20
   2a3f0:	vld1.32	{d20-d21}, [r1], r5
   2a3f4:	subs	sl, sl, #4
   2a3f8:	vrev64.32	q12, q10
   2a3fc:	vext.8	q12, q12, q12, #8
   2a400:	vext.8	q11, q11, q12, #12
   2a404:	vmul.i32	q9, q9, q12
   2a408:	vmul.i32	q8, q11, q8
   2a40c:	vorr	q11, q12, q12
   2a410:	bne	2a3f0 <ReadCompressedDataSlabN+0x9ac>
   2a414:	vext.8	q11, q9, q8, #8
   2a418:	vext.8	q12, q8, q8, #8
   2a41c:	ldr	sl, [fp, #20]
   2a420:	cmp	r0, lr
   2a424:	vmul.i32	q0, q9, q11
   2a428:	vmul.i32	q1, q8, q12
   2a42c:	vmul.i32	q8, q0, d0[1]
   2a430:	vmul.i32	q9, q1, d2[1]
   2a434:	vmov.32	r6, d16[0]
   2a438:	vmov.32	r4, d18[0]
   2a43c:	beq	2a340 <ReadCompressedDataSlabN+0x8fc>
   2a440:	vmov.32	r1, d20[0]
   2a444:	mul	r4, r1, r4
   2a448:	ldr	r1, [r7, r2, lsl #2]
   2a44c:	subs	r2, r2, #1
   2a450:	mul	r6, r6, r1
   2a454:	bne	2a444 <ReadCompressedDataSlabN+0xa00>
   2a458:	b	2a340 <ReadCompressedDataSlabN+0x8fc>
   2a45c:	ldr	r0, [fp, #24]
   2a460:	mov	r9, #0
   2a464:	ldr	r0, [r0]
   2a468:	sub	r0, r0, #1
   2a46c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a470:	ldr	r0, [fp, #28]
   2a474:	ldr	r8, [r2]
   2a478:	str	r8, [sp, #112]	; 0x70
   2a47c:	ldr	r0, [r0]
   2a480:	str	r0, [sp, #32]
   2a484:	ldr	r0, [fp, #12]
   2a488:	cmp	r0, #2
   2a48c:	blt	2b6e8 <ReadCompressedDataSlabN+0x1ca4>
   2a490:	sub	r7, r2, #4
   2a494:	sub	ip, r2, #12
   2a498:	mov	r3, #1
   2a49c:	mov	r0, #0
   2a4a0:	mvn	r5, #15
   2a4a4:	mov	r4, r8
   2a4a8:	mov	r9, #0
   2a4ac:	add	r2, sp, #112	; 0x70
   2a4b0:	sub	lr, fp, #72	; 0x48
   2a4b4:	b	2a500 <ReadCompressedDataSlabN+0xabc>
   2a4b8:	add	r2, sp, #112	; 0x70
   2a4bc:	sub	lr, fp, #72	; 0x48
   2a4c0:	add	ip, ip, #4
   2a4c4:	str	r6, [lr, r3, lsl #2]
   2a4c8:	str	r4, [r2, r3, lsl #2]
   2a4cc:	ldr	r6, [sp, #32]
   2a4d0:	ldr	r1, [sl, r3, lsl #2]
   2a4d4:	mla	r9, r1, r8, r9
   2a4d8:	ldr	r1, [fp, #28]
   2a4dc:	mov	r8, r4
   2a4e0:	ldr	r4, [sp, #44]	; 0x2c
   2a4e4:	ldr	r1, [r1, r3, lsl #2]
   2a4e8:	add	r3, r3, #1
   2a4ec:	mul	r6, r1, r6
   2a4f0:	ldr	r1, [fp, #12]
   2a4f4:	str	r6, [sp, #32]
   2a4f8:	cmp	r3, r1
   2a4fc:	beq	2b6e8 <ReadCompressedDataSlabN+0x1ca4>
   2a500:	ldr	r1, [fp, #24]
   2a504:	add	r0, r0, #1
   2a508:	cmp	r0, #4
   2a50c:	ldr	r1, [r1, r3, lsl #2]
   2a510:	str	r4, [r2, r3, lsl #2]
   2a514:	sub	r6, r1, #1
   2a518:	ldr	r1, [fp, #16]
   2a51c:	str	r6, [lr, r3, lsl #2]
   2a520:	ldr	r1, [r1, r3, lsl #2]
   2a524:	str	r1, [sp, #44]	; 0x2c
   2a528:	bcs	2a534 <ReadCompressedDataSlabN+0xaf0>
   2a52c:	mov	r2, r3
   2a530:	b	2a5bc <ReadCompressedDataSlabN+0xb78>
   2a534:	vmov.i32	q9, #1	; 0x00000001
   2a538:	vmov.i32	q10, #1	; 0x00000001
   2a53c:	vmov.32	d23[1], r1
   2a540:	vmov.i32	q8, #1	; 0x00000001
   2a544:	bic	lr, r0, #3
   2a548:	bic	sl, r3, #3
   2a54c:	mov	r1, ip
   2a550:	sub	r2, r3, lr
   2a554:	vmov.32	d18[0], r4
   2a558:	vmov.32	d20[0], r6
   2a55c:	vorr	d16, d18, d18
   2a560:	vmov.i32	q9, #1	; 0x00000001
   2a564:	vorr	d18, d20, d20
   2a568:	vld1.32	{d20-d21}, [r1], r5
   2a56c:	subs	sl, sl, #4
   2a570:	vrev64.32	q12, q10
   2a574:	vext.8	q12, q12, q12, #8
   2a578:	vext.8	q11, q11, q12, #12
   2a57c:	vmul.i32	q9, q9, q12
   2a580:	vmul.i32	q8, q11, q8
   2a584:	vorr	q11, q12, q12
   2a588:	bne	2a568 <ReadCompressedDataSlabN+0xb24>
   2a58c:	vext.8	q11, q9, q8, #8
   2a590:	vext.8	q12, q8, q8, #8
   2a594:	ldr	sl, [fp, #20]
   2a598:	cmp	r0, lr
   2a59c:	vmul.i32	q0, q9, q11
   2a5a0:	vmul.i32	q1, q8, q12
   2a5a4:	vmul.i32	q8, q0, d0[1]
   2a5a8:	vmul.i32	q9, q1, d2[1]
   2a5ac:	vmov.32	r6, d16[0]
   2a5b0:	vmov.32	r4, d18[0]
   2a5b4:	beq	2a4b8 <ReadCompressedDataSlabN+0xa74>
   2a5b8:	vmov.32	r1, d20[0]
   2a5bc:	mul	r4, r1, r4
   2a5c0:	ldr	r1, [r7, r2, lsl #2]
   2a5c4:	subs	r2, r2, #1
   2a5c8:	mul	r6, r6, r1
   2a5cc:	bne	2a5bc <ReadCompressedDataSlabN+0xb78>
   2a5d0:	b	2a4b8 <ReadCompressedDataSlabN+0xa74>
   2a5d4:	ldr	r0, [fp, #24]
   2a5d8:	mov	r9, #0
   2a5dc:	ldr	r0, [r0]
   2a5e0:	sub	r0, r0, #1
   2a5e4:	str	r0, [fp, #-72]	; 0xffffffb8
   2a5e8:	ldr	r0, [fp, #28]
   2a5ec:	ldr	r8, [r2]
   2a5f0:	str	r8, [sp, #112]	; 0x70
   2a5f4:	ldr	r0, [r0]
   2a5f8:	str	r0, [sp, #32]
   2a5fc:	ldr	r0, [fp, #12]
   2a600:	cmp	r0, #2
   2a604:	blt	2b96c <ReadCompressedDataSlabN+0x1f28>
   2a608:	sub	r7, r2, #4
   2a60c:	sub	ip, r2, #12
   2a610:	mov	r3, #1
   2a614:	mov	r0, #0
   2a618:	mvn	r5, #15
   2a61c:	mov	r4, r8
   2a620:	mov	r9, #0
   2a624:	add	r2, sp, #112	; 0x70
   2a628:	sub	lr, fp, #72	; 0x48
   2a62c:	b	2a678 <ReadCompressedDataSlabN+0xc34>
   2a630:	add	r2, sp, #112	; 0x70
   2a634:	sub	lr, fp, #72	; 0x48
   2a638:	add	ip, ip, #4
   2a63c:	str	r6, [lr, r3, lsl #2]
   2a640:	str	r4, [r2, r3, lsl #2]
   2a644:	ldr	r6, [sp, #32]
   2a648:	ldr	r1, [sl, r3, lsl #2]
   2a64c:	mla	r9, r1, r8, r9
   2a650:	ldr	r1, [fp, #28]
   2a654:	mov	r8, r4
   2a658:	ldr	r4, [sp, #44]	; 0x2c
   2a65c:	ldr	r1, [r1, r3, lsl #2]
   2a660:	add	r3, r3, #1
   2a664:	mul	r6, r1, r6
   2a668:	ldr	r1, [fp, #12]
   2a66c:	str	r6, [sp, #32]
   2a670:	cmp	r3, r1
   2a674:	beq	2b96c <ReadCompressedDataSlabN+0x1f28>
   2a678:	ldr	r1, [fp, #24]
   2a67c:	add	r0, r0, #1
   2a680:	cmp	r0, #4
   2a684:	ldr	r1, [r1, r3, lsl #2]
   2a688:	str	r4, [r2, r3, lsl #2]
   2a68c:	sub	r6, r1, #1
   2a690:	ldr	r1, [fp, #16]
   2a694:	str	r6, [lr, r3, lsl #2]
   2a698:	ldr	r1, [r1, r3, lsl #2]
   2a69c:	str	r1, [sp, #44]	; 0x2c
   2a6a0:	bcs	2a6ac <ReadCompressedDataSlabN+0xc68>
   2a6a4:	mov	r2, r3
   2a6a8:	b	2a734 <ReadCompressedDataSlabN+0xcf0>
   2a6ac:	vmov.i32	q9, #1	; 0x00000001
   2a6b0:	vmov.i32	q10, #1	; 0x00000001
   2a6b4:	vmov.32	d23[1], r1
   2a6b8:	vmov.i32	q8, #1	; 0x00000001
   2a6bc:	bic	lr, r0, #3
   2a6c0:	bic	sl, r3, #3
   2a6c4:	mov	r1, ip
   2a6c8:	sub	r2, r3, lr
   2a6cc:	vmov.32	d18[0], r4
   2a6d0:	vmov.32	d20[0], r6
   2a6d4:	vorr	d16, d18, d18
   2a6d8:	vmov.i32	q9, #1	; 0x00000001
   2a6dc:	vorr	d18, d20, d20
   2a6e0:	vld1.32	{d20-d21}, [r1], r5
   2a6e4:	subs	sl, sl, #4
   2a6e8:	vrev64.32	q12, q10
   2a6ec:	vext.8	q12, q12, q12, #8
   2a6f0:	vext.8	q11, q11, q12, #12
   2a6f4:	vmul.i32	q9, q9, q12
   2a6f8:	vmul.i32	q8, q11, q8
   2a6fc:	vorr	q11, q12, q12
   2a700:	bne	2a6e0 <ReadCompressedDataSlabN+0xc9c>
   2a704:	vext.8	q11, q9, q8, #8
   2a708:	vext.8	q12, q8, q8, #8
   2a70c:	ldr	sl, [fp, #20]
   2a710:	cmp	r0, lr
   2a714:	vmul.i32	q0, q9, q11
   2a718:	vmul.i32	q1, q8, q12
   2a71c:	vmul.i32	q8, q0, d0[1]
   2a720:	vmul.i32	q9, q1, d2[1]
   2a724:	vmov.32	r6, d16[0]
   2a728:	vmov.32	r4, d18[0]
   2a72c:	beq	2a630 <ReadCompressedDataSlabN+0xbec>
   2a730:	vmov.32	r1, d20[0]
   2a734:	mul	r4, r1, r4
   2a738:	ldr	r1, [r7, r2, lsl #2]
   2a73c:	subs	r2, r2, #1
   2a740:	mul	r6, r6, r1
   2a744:	bne	2a734 <ReadCompressedDataSlabN+0xcf0>
   2a748:	b	2a630 <ReadCompressedDataSlabN+0xbec>
   2a74c:	ldr	r0, [fp, #24]
   2a750:	mov	r9, #0
   2a754:	ldr	r0, [r0]
   2a758:	sub	r0, r0, #1
   2a75c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a760:	ldr	r0, [fp, #28]
   2a764:	ldr	r8, [r2]
   2a768:	str	r8, [sp, #112]	; 0x70
   2a76c:	ldr	r0, [r0]
   2a770:	str	r0, [sp, #32]
   2a774:	ldr	r0, [fp, #12]
   2a778:	cmp	r0, #2
   2a77c:	blt	2bbf0 <ReadCompressedDataSlabN+0x21ac>
   2a780:	sub	r7, r2, #4
   2a784:	sub	ip, r2, #12
   2a788:	mov	r3, #1
   2a78c:	mov	r0, #0
   2a790:	mvn	r5, #15
   2a794:	mov	r4, r8
   2a798:	mov	r9, #0
   2a79c:	add	r2, sp, #112	; 0x70
   2a7a0:	sub	lr, fp, #72	; 0x48
   2a7a4:	b	2a7f0 <ReadCompressedDataSlabN+0xdac>
   2a7a8:	add	r2, sp, #112	; 0x70
   2a7ac:	sub	lr, fp, #72	; 0x48
   2a7b0:	add	ip, ip, #4
   2a7b4:	str	r6, [lr, r3, lsl #2]
   2a7b8:	str	r4, [r2, r3, lsl #2]
   2a7bc:	ldr	r6, [sp, #32]
   2a7c0:	ldr	r1, [sl, r3, lsl #2]
   2a7c4:	mla	r9, r1, r8, r9
   2a7c8:	ldr	r1, [fp, #28]
   2a7cc:	mov	r8, r4
   2a7d0:	ldr	r4, [sp, #44]	; 0x2c
   2a7d4:	ldr	r1, [r1, r3, lsl #2]
   2a7d8:	add	r3, r3, #1
   2a7dc:	mul	r6, r1, r6
   2a7e0:	ldr	r1, [fp, #12]
   2a7e4:	str	r6, [sp, #32]
   2a7e8:	cmp	r3, r1
   2a7ec:	beq	2bbf0 <ReadCompressedDataSlabN+0x21ac>
   2a7f0:	ldr	r1, [fp, #24]
   2a7f4:	add	r0, r0, #1
   2a7f8:	cmp	r0, #4
   2a7fc:	ldr	r1, [r1, r3, lsl #2]
   2a800:	str	r4, [r2, r3, lsl #2]
   2a804:	sub	r6, r1, #1
   2a808:	ldr	r1, [fp, #16]
   2a80c:	str	r6, [lr, r3, lsl #2]
   2a810:	ldr	r1, [r1, r3, lsl #2]
   2a814:	str	r1, [sp, #44]	; 0x2c
   2a818:	bcs	2a824 <ReadCompressedDataSlabN+0xde0>
   2a81c:	mov	r2, r3
   2a820:	b	2a8ac <ReadCompressedDataSlabN+0xe68>
   2a824:	vmov.i32	q9, #1	; 0x00000001
   2a828:	vmov.i32	q10, #1	; 0x00000001
   2a82c:	vmov.32	d23[1], r1
   2a830:	vmov.i32	q8, #1	; 0x00000001
   2a834:	bic	lr, r0, #3
   2a838:	bic	sl, r3, #3
   2a83c:	mov	r1, ip
   2a840:	sub	r2, r3, lr
   2a844:	vmov.32	d18[0], r4
   2a848:	vmov.32	d20[0], r6
   2a84c:	vorr	d16, d18, d18
   2a850:	vmov.i32	q9, #1	; 0x00000001
   2a854:	vorr	d18, d20, d20
   2a858:	vld1.32	{d20-d21}, [r1], r5
   2a85c:	subs	sl, sl, #4
   2a860:	vrev64.32	q12, q10
   2a864:	vext.8	q12, q12, q12, #8
   2a868:	vext.8	q11, q11, q12, #12
   2a86c:	vmul.i32	q9, q9, q12
   2a870:	vmul.i32	q8, q11, q8
   2a874:	vorr	q11, q12, q12
   2a878:	bne	2a858 <ReadCompressedDataSlabN+0xe14>
   2a87c:	vext.8	q11, q9, q8, #8
   2a880:	vext.8	q12, q8, q8, #8
   2a884:	ldr	sl, [fp, #20]
   2a888:	cmp	r0, lr
   2a88c:	vmul.i32	q0, q9, q11
   2a890:	vmul.i32	q1, q8, q12
   2a894:	vmul.i32	q8, q0, d0[1]
   2a898:	vmul.i32	q9, q1, d2[1]
   2a89c:	vmov.32	r6, d16[0]
   2a8a0:	vmov.32	r4, d18[0]
   2a8a4:	beq	2a7a8 <ReadCompressedDataSlabN+0xd64>
   2a8a8:	vmov.32	r1, d20[0]
   2a8ac:	mul	r4, r1, r4
   2a8b0:	ldr	r1, [r7, r2, lsl #2]
   2a8b4:	subs	r2, r2, #1
   2a8b8:	mul	r6, r6, r1
   2a8bc:	bne	2a8ac <ReadCompressedDataSlabN+0xe68>
   2a8c0:	b	2a7a8 <ReadCompressedDataSlabN+0xd64>
   2a8c4:	ldr	r0, [fp, #24]
   2a8c8:	mov	r9, #0
   2a8cc:	ldr	r0, [r0]
   2a8d0:	sub	r0, r0, #1
   2a8d4:	str	r0, [fp, #-72]	; 0xffffffb8
   2a8d8:	ldr	r0, [fp, #28]
   2a8dc:	ldr	r8, [r2]
   2a8e0:	str	r8, [sp, #112]	; 0x70
   2a8e4:	ldr	r0, [r0]
   2a8e8:	str	r0, [sp, #32]
   2a8ec:	ldr	r0, [fp, #12]
   2a8f0:	cmp	r0, #2
   2a8f4:	blt	2be74 <ReadCompressedDataSlabN+0x2430>
   2a8f8:	sub	r7, r2, #4
   2a8fc:	sub	ip, r2, #12
   2a900:	mov	r3, #1
   2a904:	mov	r0, #0
   2a908:	mvn	r5, #15
   2a90c:	mov	r4, r8
   2a910:	mov	r9, #0
   2a914:	add	r2, sp, #112	; 0x70
   2a918:	sub	lr, fp, #72	; 0x48
   2a91c:	b	2a968 <ReadCompressedDataSlabN+0xf24>
   2a920:	add	r2, sp, #112	; 0x70
   2a924:	sub	lr, fp, #72	; 0x48
   2a928:	add	ip, ip, #4
   2a92c:	str	r6, [lr, r3, lsl #2]
   2a930:	str	r4, [r2, r3, lsl #2]
   2a934:	ldr	r6, [sp, #32]
   2a938:	ldr	r1, [sl, r3, lsl #2]
   2a93c:	mla	r9, r1, r8, r9
   2a940:	ldr	r1, [fp, #28]
   2a944:	mov	r8, r4
   2a948:	ldr	r4, [sp, #44]	; 0x2c
   2a94c:	ldr	r1, [r1, r3, lsl #2]
   2a950:	add	r3, r3, #1
   2a954:	mul	r6, r1, r6
   2a958:	ldr	r1, [fp, #12]
   2a95c:	str	r6, [sp, #32]
   2a960:	cmp	r3, r1
   2a964:	beq	2be74 <ReadCompressedDataSlabN+0x2430>
   2a968:	ldr	r1, [fp, #24]
   2a96c:	add	r0, r0, #1
   2a970:	cmp	r0, #4
   2a974:	ldr	r1, [r1, r3, lsl #2]
   2a978:	str	r4, [r2, r3, lsl #2]
   2a97c:	sub	r6, r1, #1
   2a980:	ldr	r1, [fp, #16]
   2a984:	str	r6, [lr, r3, lsl #2]
   2a988:	ldr	r1, [r1, r3, lsl #2]
   2a98c:	str	r1, [sp, #44]	; 0x2c
   2a990:	bcs	2a99c <ReadCompressedDataSlabN+0xf58>
   2a994:	mov	r2, r3
   2a998:	b	2aa24 <ReadCompressedDataSlabN+0xfe0>
   2a99c:	vmov.i32	q9, #1	; 0x00000001
   2a9a0:	vmov.i32	q10, #1	; 0x00000001
   2a9a4:	vmov.32	d23[1], r1
   2a9a8:	vmov.i32	q8, #1	; 0x00000001
   2a9ac:	bic	lr, r0, #3
   2a9b0:	bic	sl, r3, #3
   2a9b4:	mov	r1, ip
   2a9b8:	sub	r2, r3, lr
   2a9bc:	vmov.32	d18[0], r4
   2a9c0:	vmov.32	d20[0], r6
   2a9c4:	vorr	d16, d18, d18
   2a9c8:	vmov.i32	q9, #1	; 0x00000001
   2a9cc:	vorr	d18, d20, d20
   2a9d0:	vld1.32	{d20-d21}, [r1], r5
   2a9d4:	subs	sl, sl, #4
   2a9d8:	vrev64.32	q12, q10
   2a9dc:	vext.8	q12, q12, q12, #8
   2a9e0:	vext.8	q11, q11, q12, #12
   2a9e4:	vmul.i32	q9, q9, q12
   2a9e8:	vmul.i32	q8, q11, q8
   2a9ec:	vorr	q11, q12, q12
   2a9f0:	bne	2a9d0 <ReadCompressedDataSlabN+0xf8c>
   2a9f4:	vext.8	q11, q9, q8, #8
   2a9f8:	vext.8	q12, q8, q8, #8
   2a9fc:	ldr	sl, [fp, #20]
   2aa00:	cmp	r0, lr
   2aa04:	vmul.i32	q0, q9, q11
   2aa08:	vmul.i32	q1, q8, q12
   2aa0c:	vmul.i32	q8, q0, d0[1]
   2aa10:	vmul.i32	q9, q1, d2[1]
   2aa14:	vmov.32	r6, d16[0]
   2aa18:	vmov.32	r4, d18[0]
   2aa1c:	beq	2a920 <ReadCompressedDataSlabN+0xedc>
   2aa20:	vmov.32	r1, d20[0]
   2aa24:	mul	r4, r1, r4
   2aa28:	ldr	r1, [r7, r2, lsl #2]
   2aa2c:	subs	r2, r2, #1
   2aa30:	mul	r6, r6, r1
   2aa34:	bne	2aa24 <ReadCompressedDataSlabN+0xfe0>
   2aa38:	b	2a920 <ReadCompressedDataSlabN+0xedc>
   2aa3c:	ldr	r0, [sp, #52]	; 0x34
   2aa40:	ldr	r2, [fp, #8]
   2aa44:	add	r1, sp, #56	; 0x38
   2aa48:	mov	r3, r9
   2aa4c:	bl	28dc <InflateSkipData>
   2aa50:	ldr	r0, [fp, #24]
   2aa54:	ldr	r0, [r0]
   2aa58:	cmp	r0, #1
   2aa5c:	bne	2c3a8 <ReadCompressedDataSlabN+0x2964>
   2aa60:	ldr	r0, [sp, #32]
   2aa64:	cmp	r0, #1
   2aa68:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2aa6c:	sub	r0, fp, #112	; 0x70
   2aa70:	add	r7, sl, #4
   2aa74:	add	r6, sp, #56	; 0x38
   2aa78:	orr	r5, r0, #4
   2aa7c:	ldr	r0, [fp, #28]
   2aa80:	str	r7, [sp, #24]
   2aa84:	add	r8, r0, #4
   2aa88:	add	r0, sp, #112	; 0x70
   2aa8c:	orr	r3, r0, #4
   2aa90:	ldr	r0, [fp, #12]
   2aa94:	str	r8, [sp, #36]	; 0x24
   2aa98:	str	r3, [sp, #44]	; 0x2c
   2aa9c:	sub	r0, r0, #1
   2aaa0:	str	r0, [sp, #28]
   2aaa4:	sub	r0, fp, #72	; 0x48
   2aaa8:	orr	r0, r0, #4
   2aaac:	str	r0, [sp, #20]
   2aab0:	mov	r0, #0
   2aab4:	str	r0, [sp, #40]	; 0x28
   2aab8:	ldr	r3, [sl]
   2aabc:	cmp	r3, #0
   2aac0:	bne	2aafc <ReadCompressedDataSlabN+0x10b8>
   2aac4:	b	2ab28 <ReadCompressedDataSlabN+0x10e4>
   2aac8:	ldr	r0, [fp, #28]
   2aacc:	ldr	r1, [sp, #40]	; 0x28
   2aad0:	ldr	sl, [fp, #20]
   2aad4:	add	r6, sp, #56	; 0x38
   2aad8:	ldr	r0, [r0]
   2aadc:	add	r1, r0, r1
   2aae0:	ldr	r0, [sp, #32]
   2aae4:	str	r1, [sp, #40]	; 0x28
   2aae8:	cmp	r1, r0
   2aaec:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2aaf0:	ldr	r3, [sl]
   2aaf4:	cmp	r3, #0
   2aaf8:	beq	2ab28 <ReadCompressedDataSlabN+0x10e4>
   2aafc:	ldr	r8, [fp, #8]
   2ab00:	ldr	r0, [sp, #52]	; 0x34
   2ab04:	mov	r1, r6
   2ab08:	mov	r2, r8
   2ab0c:	mov	r7, r0
   2ab10:	bl	28dc <InflateSkipData>
   2ab14:	ldr	r0, [sl]
   2ab18:	ldr	r1, [sp, #48]	; 0x30
   2ab1c:	add	r4, sp, #112	; 0x70
   2ab20:	add	r9, r0, r9
   2ab24:	b	2ab38 <ReadCompressedDataSlabN+0x10f4>
   2ab28:	ldr	r1, [sp, #48]	; 0x30
   2ab2c:	ldr	r7, [sp, #52]	; 0x34
   2ab30:	ldr	r8, [fp, #8]
   2ab34:	add	r4, sp, #112	; 0x70
   2ab38:	ldr	r0, [fp, #28]
   2ab3c:	mov	r3, r8
   2ab40:	ldr	r0, [r0]
   2ab44:	str	r0, [sp]
   2ab48:	ldr	r0, [sp, #40]	; 0x28
   2ab4c:	add	r2, r1, r0, lsl #2
   2ab50:	mov	r0, r7
   2ab54:	mov	r1, r6
   2ab58:	bl	b980 <ReadCompressedSingleData>
   2ab5c:	ldr	r1, [fp, #16]
   2ab60:	ldr	r0, [sl]
   2ab64:	mov	r2, r8
   2ab68:	ldr	r1, [r1]
   2ab6c:	sub	r0, r1, r0
   2ab70:	ldr	r1, [fp, #28]
   2ab74:	ldr	r1, [r1]
   2ab78:	sub	r3, r0, r1
   2ab7c:	mov	r0, r7
   2ab80:	mov	r1, r6
   2ab84:	bl	28dc <InflateSkipData>
   2ab88:	ldr	r0, [fp, #16]
   2ab8c:	ldr	r1, [sl]
   2ab90:	ldr	r0, [r0]
   2ab94:	add	r0, r0, r9
   2ab98:	sub	r9, r0, r1
   2ab9c:	ldr	r0, [fp, #12]
   2aba0:	cmp	r0, #2
   2aba4:	blt	2aac8 <ReadCompressedDataSlabN+0x1084>
   2aba8:	ldr	sl, [sp, #28]
   2abac:	ldr	r8, [sp, #36]	; 0x24
   2abb0:	ldr	r3, [sp, #44]	; 0x2c
   2abb4:	ldr	r7, [sp, #24]
   2abb8:	mov	r6, #0
   2abbc:	b	2ac14 <ReadCompressedDataSlabN+0x11d0>
   2abc0:	ldr	r2, [r4, r6]
   2abc4:	ldr	r3, [r7, r6]
   2abc8:	sub	r0, r0, r1
   2abcc:	add	r1, sp, #56	; 0x38
   2abd0:	mla	r3, r3, r2, r0
   2abd4:	ldr	r0, [sp, #52]	; 0x34
   2abd8:	ldr	r2, [fp, #8]
   2abdc:	bl	28dc <InflateSkipData>
   2abe0:	ldr	r3, [sp, #44]	; 0x2c
   2abe4:	ldr	r2, [r7, r6]
   2abe8:	ldr	r0, [r3, r6]
   2abec:	sdiv	r1, r9, r0
   2abf0:	mul	r1, r1, r0
   2abf4:	add	r0, r0, r9
   2abf8:	sub	r1, r1, r9
   2abfc:	add	r0, r0, r1
   2ac00:	ldr	r1, [r4, r6]
   2ac04:	mla	r9, r2, r1, r0
   2ac08:	subs	sl, sl, #1
   2ac0c:	add	r6, r6, #4
   2ac10:	beq	2aac8 <ReadCompressedDataSlabN+0x1084>
   2ac14:	ldr	r0, [r5, r6]
   2ac18:	add	r0, r0, #1
   2ac1c:	str	r0, [r5, r6]
   2ac20:	ldr	r1, [r8, r6]
   2ac24:	sdiv	r2, r0, r1
   2ac28:	mls	r0, r2, r1, r0
   2ac2c:	cmp	r0, #0
   2ac30:	bne	2ac94 <ReadCompressedDataSlabN+0x1250>
   2ac34:	mov	r0, #0
   2ac38:	str	r0, [r5, r6]
   2ac3c:	ldr	r0, [r3, r6]
   2ac40:	sdiv	r1, r9, r0
   2ac44:	mls	r1, r1, r0, r9
   2ac48:	cmp	r1, #0
   2ac4c:	bne	2abc0 <ReadCompressedDataSlabN+0x117c>
   2ac50:	ldr	r0, [r7, r6]
   2ac54:	cmp	r0, #0
   2ac58:	beq	2ac08 <ReadCompressedDataSlabN+0x11c4>
   2ac5c:	ldr	r1, [r4, r6]
   2ac60:	ldr	r2, [fp, #8]
   2ac64:	mul	r3, r1, r0
   2ac68:	ldr	r0, [sp, #52]	; 0x34
   2ac6c:	add	r1, sp, #56	; 0x38
   2ac70:	bl	28dc <InflateSkipData>
   2ac74:	ldr	r0, [r4, r6]
   2ac78:	ldr	r1, [r7, r6]
   2ac7c:	ldr	r3, [sp, #44]	; 0x2c
   2ac80:	mla	r9, r1, r0, r9
   2ac84:	subs	sl, sl, #1
   2ac88:	add	r6, r6, #4
   2ac8c:	bne	2ac14 <ReadCompressedDataSlabN+0x11d0>
   2ac90:	b	2aac8 <ReadCompressedDataSlabN+0x1084>
   2ac94:	ldr	r0, [sp, #20]
   2ac98:	ldr	r4, [r0, r6]
   2ac9c:	cmp	r4, #0
   2aca0:	beq	2aac8 <ReadCompressedDataSlabN+0x1084>
   2aca4:	ldr	r0, [sp, #52]	; 0x34
   2aca8:	ldr	r2, [fp, #8]
   2acac:	add	r1, sp, #56	; 0x38
   2acb0:	mov	r3, r4
   2acb4:	bl	28dc <InflateSkipData>
   2acb8:	add	r9, r4, r9
   2acbc:	b	2aac8 <ReadCompressedDataSlabN+0x1084>
   2acc0:	ldr	r0, [sp, #52]	; 0x34
   2acc4:	ldr	r2, [fp, #8]
   2acc8:	add	r1, sp, #56	; 0x38
   2accc:	mov	r3, r7
   2acd0:	bl	28dc <InflateSkipData>
   2acd4:	ldr	r0, [fp, #24]
   2acd8:	str	r7, [sp, #28]
   2acdc:	ldr	r0, [r0]
   2ace0:	cmp	r0, #1
   2ace4:	bne	2c6cc <ReadCompressedDataSlabN+0x2c88>
   2ace8:	ldr	r0, [sp, #24]
   2acec:	cmp	r0, #1
   2acf0:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2acf4:	sub	r0, fp, #112	; 0x70
   2acf8:	add	r9, sl, #4
   2acfc:	add	r6, sp, #56	; 0x38
   2ad00:	orr	r5, r0, #4
   2ad04:	ldr	r0, [fp, #28]
   2ad08:	add	r8, r0, #4
   2ad0c:	add	r0, sp, #112	; 0x70
   2ad10:	orr	r3, r0, #4
   2ad14:	ldr	r0, [fp, #12]
   2ad18:	str	r8, [sp, #36]	; 0x24
   2ad1c:	str	r3, [sp, #44]	; 0x2c
   2ad20:	sub	r0, r0, #1
   2ad24:	str	r0, [sp, #32]
   2ad28:	sub	r0, fp, #72	; 0x48
   2ad2c:	orr	r0, r0, #4
   2ad30:	str	r0, [sp, #20]
   2ad34:	mov	r0, #0
   2ad38:	str	r0, [sp, #40]	; 0x28
   2ad3c:	ldr	r3, [sl]
   2ad40:	cmp	r3, #0
   2ad44:	bne	2ad84 <ReadCompressedDataSlabN+0x1340>
   2ad48:	b	2adb8 <ReadCompressedDataSlabN+0x1374>
   2ad4c:	ldr	r0, [fp, #28]
   2ad50:	ldr	r1, [sp, #40]	; 0x28
   2ad54:	ldr	sl, [fp, #20]
   2ad58:	add	r6, sp, #56	; 0x38
   2ad5c:	str	r7, [sp, #28]
   2ad60:	ldr	r0, [r0]
   2ad64:	add	r1, r0, r1
   2ad68:	ldr	r0, [sp, #24]
   2ad6c:	str	r1, [sp, #40]	; 0x28
   2ad70:	cmp	r1, r0
   2ad74:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2ad78:	ldr	r3, [sl]
   2ad7c:	cmp	r3, #0
   2ad80:	beq	2adb8 <ReadCompressedDataSlabN+0x1374>
   2ad84:	ldr	r7, [sp, #52]	; 0x34
   2ad88:	ldr	r8, [fp, #8]
   2ad8c:	mov	r1, r6
   2ad90:	mov	r0, r7
   2ad94:	mov	r2, r8
   2ad98:	bl	28dc <InflateSkipData>
   2ad9c:	ldr	r0, [sl]
   2ada0:	ldr	r1, [sp, #28]
   2ada4:	add	r4, sp, #112	; 0x70
   2ada8:	add	r1, r0, r1
   2adac:	str	r1, [sp, #28]
   2adb0:	ldr	r1, [sp, #48]	; 0x30
   2adb4:	b	2adc8 <ReadCompressedDataSlabN+0x1384>
   2adb8:	ldr	r1, [sp, #48]	; 0x30
   2adbc:	ldr	r7, [sp, #52]	; 0x34
   2adc0:	ldr	r8, [fp, #8]
   2adc4:	add	r4, sp, #112	; 0x70
   2adc8:	ldr	r0, [fp, #28]
   2adcc:	mov	r3, r8
   2add0:	ldr	r0, [r0]
   2add4:	str	r0, [sp]
   2add8:	ldr	r0, [sp, #40]	; 0x28
   2addc:	add	r2, r1, r0
   2ade0:	mov	r0, r7
   2ade4:	mov	r1, r6
   2ade8:	bl	21db8 <ReadCompressedInt8Data>
   2adec:	ldr	r1, [fp, #16]
   2adf0:	ldr	r0, [sl]
   2adf4:	mov	r2, r8
   2adf8:	ldr	r1, [r1]
   2adfc:	sub	r0, r1, r0
   2ae00:	ldr	r1, [fp, #28]
   2ae04:	ldr	r1, [r1]
   2ae08:	sub	r3, r0, r1
   2ae0c:	mov	r0, r7
   2ae10:	mov	r1, r6
   2ae14:	bl	28dc <InflateSkipData>
   2ae18:	ldr	r0, [fp, #16]
   2ae1c:	ldr	r1, [sp, #28]
   2ae20:	ldr	r0, [r0]
   2ae24:	add	r0, r0, r1
   2ae28:	ldr	r1, [sl]
   2ae2c:	sub	r7, r0, r1
   2ae30:	ldr	r0, [fp, #12]
   2ae34:	cmp	r0, #2
   2ae38:	blt	2ad4c <ReadCompressedDataSlabN+0x1308>
   2ae3c:	ldr	sl, [sp, #32]
   2ae40:	ldr	r8, [sp, #36]	; 0x24
   2ae44:	ldr	r3, [sp, #44]	; 0x2c
   2ae48:	mov	r6, #0
   2ae4c:	b	2aea4 <ReadCompressedDataSlabN+0x1460>
   2ae50:	ldr	r2, [r4, r6]
   2ae54:	ldr	r3, [r9, r6]
   2ae58:	sub	r0, r0, r1
   2ae5c:	add	r1, sp, #56	; 0x38
   2ae60:	mla	r3, r3, r2, r0
   2ae64:	ldr	r0, [sp, #52]	; 0x34
   2ae68:	ldr	r2, [fp, #8]
   2ae6c:	bl	28dc <InflateSkipData>
   2ae70:	ldr	r3, [sp, #44]	; 0x2c
   2ae74:	ldr	r2, [r9, r6]
   2ae78:	ldr	r0, [r3, r6]
   2ae7c:	sdiv	r1, r7, r0
   2ae80:	mul	r1, r1, r0
   2ae84:	add	r0, r0, r7
   2ae88:	sub	r1, r1, r7
   2ae8c:	add	r0, r0, r1
   2ae90:	ldr	r1, [r4, r6]
   2ae94:	mla	r7, r2, r1, r0
   2ae98:	subs	sl, sl, #1
   2ae9c:	add	r6, r6, #4
   2aea0:	beq	2ad4c <ReadCompressedDataSlabN+0x1308>
   2aea4:	ldr	r0, [r5, r6]
   2aea8:	add	r0, r0, #1
   2aeac:	str	r0, [r5, r6]
   2aeb0:	ldr	r1, [r8, r6]
   2aeb4:	sdiv	r2, r0, r1
   2aeb8:	mls	r0, r2, r1, r0
   2aebc:	cmp	r0, #0
   2aec0:	bne	2af24 <ReadCompressedDataSlabN+0x14e0>
   2aec4:	mov	r0, #0
   2aec8:	str	r0, [r5, r6]
   2aecc:	ldr	r0, [r3, r6]
   2aed0:	sdiv	r1, r7, r0
   2aed4:	mls	r1, r1, r0, r7
   2aed8:	cmp	r1, #0
   2aedc:	bne	2ae50 <ReadCompressedDataSlabN+0x140c>
   2aee0:	ldr	r0, [r9, r6]
   2aee4:	cmp	r0, #0
   2aee8:	beq	2ae98 <ReadCompressedDataSlabN+0x1454>
   2aeec:	ldr	r1, [r4, r6]
   2aef0:	ldr	r2, [fp, #8]
   2aef4:	mul	r3, r1, r0
   2aef8:	ldr	r0, [sp, #52]	; 0x34
   2aefc:	add	r1, sp, #56	; 0x38
   2af00:	bl	28dc <InflateSkipData>
   2af04:	ldr	r0, [r4, r6]
   2af08:	ldr	r1, [r9, r6]
   2af0c:	ldr	r3, [sp, #44]	; 0x2c
   2af10:	mla	r7, r1, r0, r7
   2af14:	subs	sl, sl, #1
   2af18:	add	r6, r6, #4
   2af1c:	bne	2aea4 <ReadCompressedDataSlabN+0x1460>
   2af20:	b	2ad4c <ReadCompressedDataSlabN+0x1308>
   2af24:	ldr	r0, [sp, #20]
   2af28:	ldr	r4, [r0, r6]
   2af2c:	cmp	r4, #0
   2af30:	beq	2ad4c <ReadCompressedDataSlabN+0x1308>
   2af34:	ldr	r0, [sp, #52]	; 0x34
   2af38:	ldr	r2, [fp, #8]
   2af3c:	add	r1, sp, #56	; 0x38
   2af40:	mov	r3, r4
   2af44:	bl	28dc <InflateSkipData>
   2af48:	add	r7, r4, r7
   2af4c:	b	2ad4c <ReadCompressedDataSlabN+0x1308>
   2af50:	ldr	r0, [sp, #52]	; 0x34
   2af54:	ldr	r2, [fp, #8]
   2af58:	add	r1, sp, #56	; 0x38
   2af5c:	mov	r3, r7
   2af60:	bl	28dc <InflateSkipData>
   2af64:	ldr	r0, [fp, #24]
   2af68:	str	r7, [sp, #28]
   2af6c:	ldr	r0, [r0]
   2af70:	cmp	r0, #1
   2af74:	bne	2c9f4 <ReadCompressedDataSlabN+0x2fb0>
   2af78:	ldr	r0, [sp, #24]
   2af7c:	cmp	r0, #1
   2af80:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2af84:	sub	r0, fp, #112	; 0x70
   2af88:	add	r9, sl, #4
   2af8c:	add	r6, sp, #56	; 0x38
   2af90:	orr	r5, r0, #4
   2af94:	ldr	r0, [fp, #28]
   2af98:	add	r8, r0, #4
   2af9c:	add	r0, sp, #112	; 0x70
   2afa0:	orr	r3, r0, #4
   2afa4:	ldr	r0, [fp, #12]
   2afa8:	str	r8, [sp, #36]	; 0x24
   2afac:	str	r3, [sp, #44]	; 0x2c
   2afb0:	sub	r0, r0, #1
   2afb4:	str	r0, [sp, #32]
   2afb8:	sub	r0, fp, #72	; 0x48
   2afbc:	orr	r0, r0, #4
   2afc0:	str	r0, [sp, #20]
   2afc4:	mov	r0, #0
   2afc8:	str	r0, [sp, #40]	; 0x28
   2afcc:	ldr	r3, [sl]
   2afd0:	cmp	r3, #0
   2afd4:	bne	2b014 <ReadCompressedDataSlabN+0x15d0>
   2afd8:	b	2b048 <ReadCompressedDataSlabN+0x1604>
   2afdc:	ldr	r0, [fp, #28]
   2afe0:	ldr	r1, [sp, #40]	; 0x28
   2afe4:	ldr	sl, [fp, #20]
   2afe8:	add	r6, sp, #56	; 0x38
   2afec:	str	r7, [sp, #28]
   2aff0:	ldr	r0, [r0]
   2aff4:	add	r1, r0, r1
   2aff8:	ldr	r0, [sp, #24]
   2affc:	str	r1, [sp, #40]	; 0x28
   2b000:	cmp	r1, r0
   2b004:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b008:	ldr	r3, [sl]
   2b00c:	cmp	r3, #0
   2b010:	beq	2b048 <ReadCompressedDataSlabN+0x1604>
   2b014:	ldr	r7, [sp, #52]	; 0x34
   2b018:	ldr	r8, [fp, #8]
   2b01c:	mov	r1, r6
   2b020:	mov	r0, r7
   2b024:	mov	r2, r8
   2b028:	bl	28dc <InflateSkipData>
   2b02c:	ldr	r0, [sl]
   2b030:	ldr	r1, [sp, #28]
   2b034:	add	r4, sp, #112	; 0x70
   2b038:	add	r1, r0, r1
   2b03c:	str	r1, [sp, #28]
   2b040:	ldr	r1, [sp, #48]	; 0x30
   2b044:	b	2b058 <ReadCompressedDataSlabN+0x1614>
   2b048:	ldr	r1, [sp, #48]	; 0x30
   2b04c:	ldr	r7, [sp, #52]	; 0x34
   2b050:	ldr	r8, [fp, #8]
   2b054:	add	r4, sp, #112	; 0x70
   2b058:	ldr	r0, [fp, #28]
   2b05c:	mov	r3, r8
   2b060:	ldr	r0, [r0]
   2b064:	str	r0, [sp]
   2b068:	ldr	r0, [sp, #40]	; 0x28
   2b06c:	add	r2, r1, r0
   2b070:	mov	r0, r7
   2b074:	mov	r1, r6
   2b078:	bl	24d48 <ReadCompressedUInt8Data>
   2b07c:	ldr	r1, [fp, #16]
   2b080:	ldr	r0, [sl]
   2b084:	mov	r2, r8
   2b088:	ldr	r1, [r1]
   2b08c:	sub	r0, r1, r0
   2b090:	ldr	r1, [fp, #28]
   2b094:	ldr	r1, [r1]
   2b098:	sub	r3, r0, r1
   2b09c:	mov	r0, r7
   2b0a0:	mov	r1, r6
   2b0a4:	bl	28dc <InflateSkipData>
   2b0a8:	ldr	r0, [fp, #16]
   2b0ac:	ldr	r1, [sp, #28]
   2b0b0:	ldr	r0, [r0]
   2b0b4:	add	r0, r0, r1
   2b0b8:	ldr	r1, [sl]
   2b0bc:	sub	r7, r0, r1
   2b0c0:	ldr	r0, [fp, #12]
   2b0c4:	cmp	r0, #2
   2b0c8:	blt	2afdc <ReadCompressedDataSlabN+0x1598>
   2b0cc:	ldr	sl, [sp, #32]
   2b0d0:	ldr	r8, [sp, #36]	; 0x24
   2b0d4:	ldr	r3, [sp, #44]	; 0x2c
   2b0d8:	mov	r6, #0
   2b0dc:	b	2b134 <ReadCompressedDataSlabN+0x16f0>
   2b0e0:	ldr	r2, [r4, r6]
   2b0e4:	ldr	r3, [r9, r6]
   2b0e8:	sub	r0, r0, r1
   2b0ec:	add	r1, sp, #56	; 0x38
   2b0f0:	mla	r3, r3, r2, r0
   2b0f4:	ldr	r0, [sp, #52]	; 0x34
   2b0f8:	ldr	r2, [fp, #8]
   2b0fc:	bl	28dc <InflateSkipData>
   2b100:	ldr	r3, [sp, #44]	; 0x2c
   2b104:	ldr	r2, [r9, r6]
   2b108:	ldr	r0, [r3, r6]
   2b10c:	sdiv	r1, r7, r0
   2b110:	mul	r1, r1, r0
   2b114:	add	r0, r0, r7
   2b118:	sub	r1, r1, r7
   2b11c:	add	r0, r0, r1
   2b120:	ldr	r1, [r4, r6]
   2b124:	mla	r7, r2, r1, r0
   2b128:	subs	sl, sl, #1
   2b12c:	add	r6, r6, #4
   2b130:	beq	2afdc <ReadCompressedDataSlabN+0x1598>
   2b134:	ldr	r0, [r5, r6]
   2b138:	add	r0, r0, #1
   2b13c:	str	r0, [r5, r6]
   2b140:	ldr	r1, [r8, r6]
   2b144:	sdiv	r2, r0, r1
   2b148:	mls	r0, r2, r1, r0
   2b14c:	cmp	r0, #0
   2b150:	bne	2b1b4 <ReadCompressedDataSlabN+0x1770>
   2b154:	mov	r0, #0
   2b158:	str	r0, [r5, r6]
   2b15c:	ldr	r0, [r3, r6]
   2b160:	sdiv	r1, r7, r0
   2b164:	mls	r1, r1, r0, r7
   2b168:	cmp	r1, #0
   2b16c:	bne	2b0e0 <ReadCompressedDataSlabN+0x169c>
   2b170:	ldr	r0, [r9, r6]
   2b174:	cmp	r0, #0
   2b178:	beq	2b128 <ReadCompressedDataSlabN+0x16e4>
   2b17c:	ldr	r1, [r4, r6]
   2b180:	ldr	r2, [fp, #8]
   2b184:	mul	r3, r1, r0
   2b188:	ldr	r0, [sp, #52]	; 0x34
   2b18c:	add	r1, sp, #56	; 0x38
   2b190:	bl	28dc <InflateSkipData>
   2b194:	ldr	r0, [r4, r6]
   2b198:	ldr	r1, [r9, r6]
   2b19c:	ldr	r3, [sp, #44]	; 0x2c
   2b1a0:	mla	r7, r1, r0, r7
   2b1a4:	subs	sl, sl, #1
   2b1a8:	add	r6, r6, #4
   2b1ac:	bne	2b134 <ReadCompressedDataSlabN+0x16f0>
   2b1b0:	b	2afdc <ReadCompressedDataSlabN+0x1598>
   2b1b4:	ldr	r0, [sp, #20]
   2b1b8:	ldr	r4, [r0, r6]
   2b1bc:	cmp	r4, #0
   2b1c0:	beq	2afdc <ReadCompressedDataSlabN+0x1598>
   2b1c4:	ldr	r0, [sp, #52]	; 0x34
   2b1c8:	ldr	r2, [fp, #8]
   2b1cc:	add	r1, sp, #56	; 0x38
   2b1d0:	mov	r3, r4
   2b1d4:	bl	28dc <InflateSkipData>
   2b1d8:	add	r7, r4, r7
   2b1dc:	b	2afdc <ReadCompressedDataSlabN+0x1598>
   2b1e0:	ldr	r0, [sp, #52]	; 0x34
   2b1e4:	ldr	r2, [fp, #8]
   2b1e8:	add	r1, sp, #56	; 0x38
   2b1ec:	mov	r3, r9
   2b1f0:	bl	28dc <InflateSkipData>
   2b1f4:	ldr	r0, [fp, #24]
   2b1f8:	ldr	r0, [r0]
   2b1fc:	cmp	r0, #1
   2b200:	bne	2cd1c <ReadCompressedDataSlabN+0x32d8>
   2b204:	ldr	r0, [sp, #32]
   2b208:	cmp	r0, #1
   2b20c:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b210:	sub	r0, fp, #112	; 0x70
   2b214:	add	r7, sl, #4
   2b218:	add	r6, sp, #56	; 0x38
   2b21c:	orr	r5, r0, #4
   2b220:	ldr	r0, [fp, #28]
   2b224:	str	r7, [sp, #24]
   2b228:	add	r8, r0, #4
   2b22c:	add	r0, sp, #112	; 0x70
   2b230:	orr	r3, r0, #4
   2b234:	ldr	r0, [fp, #12]
   2b238:	str	r8, [sp, #36]	; 0x24
   2b23c:	str	r3, [sp, #44]	; 0x2c
   2b240:	sub	r0, r0, #1
   2b244:	str	r0, [sp, #28]
   2b248:	sub	r0, fp, #72	; 0x48
   2b24c:	orr	r0, r0, #4
   2b250:	str	r0, [sp, #20]
   2b254:	mov	r0, #0
   2b258:	str	r0, [sp, #40]	; 0x28
   2b25c:	ldr	r3, [sl]
   2b260:	cmp	r3, #0
   2b264:	bne	2b2a0 <ReadCompressedDataSlabN+0x185c>
   2b268:	b	2b2cc <ReadCompressedDataSlabN+0x1888>
   2b26c:	ldr	r0, [fp, #28]
   2b270:	ldr	r1, [sp, #40]	; 0x28
   2b274:	ldr	sl, [fp, #20]
   2b278:	add	r6, sp, #56	; 0x38
   2b27c:	ldr	r0, [r0]
   2b280:	add	r1, r0, r1
   2b284:	ldr	r0, [sp, #32]
   2b288:	str	r1, [sp, #40]	; 0x28
   2b28c:	cmp	r1, r0
   2b290:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b294:	ldr	r3, [sl]
   2b298:	cmp	r3, #0
   2b29c:	beq	2b2cc <ReadCompressedDataSlabN+0x1888>
   2b2a0:	ldr	r8, [fp, #8]
   2b2a4:	ldr	r0, [sp, #52]	; 0x34
   2b2a8:	mov	r1, r6
   2b2ac:	mov	r2, r8
   2b2b0:	mov	r7, r0
   2b2b4:	bl	28dc <InflateSkipData>
   2b2b8:	ldr	r0, [sl]
   2b2bc:	ldr	r1, [sp, #48]	; 0x30
   2b2c0:	add	r4, sp, #112	; 0x70
   2b2c4:	add	r9, r0, r9
   2b2c8:	b	2b2dc <ReadCompressedDataSlabN+0x1898>
   2b2cc:	ldr	r1, [sp, #48]	; 0x30
   2b2d0:	ldr	r7, [sp, #52]	; 0x34
   2b2d4:	ldr	r8, [fp, #8]
   2b2d8:	add	r4, sp, #112	; 0x70
   2b2dc:	ldr	r0, [fp, #28]
   2b2e0:	mov	r3, r8
   2b2e4:	ldr	r0, [r0]
   2b2e8:	str	r0, [sp]
   2b2ec:	ldr	r0, [sp, #40]	; 0x28
   2b2f0:	add	r2, r1, r0, lsl #1
   2b2f4:	mov	r0, r7
   2b2f8:	mov	r1, r6
   2b2fc:	bl	1bde4 <ReadCompressedInt16Data>
   2b300:	ldr	r1, [fp, #16]
   2b304:	ldr	r0, [sl]
   2b308:	mov	r2, r8
   2b30c:	ldr	r1, [r1]
   2b310:	sub	r0, r1, r0
   2b314:	ldr	r1, [fp, #28]
   2b318:	ldr	r1, [r1]
   2b31c:	sub	r3, r0, r1
   2b320:	mov	r0, r7
   2b324:	mov	r1, r6
   2b328:	bl	28dc <InflateSkipData>
   2b32c:	ldr	r0, [fp, #16]
   2b330:	ldr	r1, [sl]
   2b334:	ldr	r0, [r0]
   2b338:	add	r0, r0, r9
   2b33c:	sub	r9, r0, r1
   2b340:	ldr	r0, [fp, #12]
   2b344:	cmp	r0, #2
   2b348:	blt	2b26c <ReadCompressedDataSlabN+0x1828>
   2b34c:	ldr	sl, [sp, #28]
   2b350:	ldr	r8, [sp, #36]	; 0x24
   2b354:	ldr	r3, [sp, #44]	; 0x2c
   2b358:	ldr	r7, [sp, #24]
   2b35c:	mov	r6, #0
   2b360:	b	2b3b8 <ReadCompressedDataSlabN+0x1974>
   2b364:	ldr	r2, [r4, r6]
   2b368:	ldr	r3, [r7, r6]
   2b36c:	sub	r0, r0, r1
   2b370:	add	r1, sp, #56	; 0x38
   2b374:	mla	r3, r3, r2, r0
   2b378:	ldr	r0, [sp, #52]	; 0x34
   2b37c:	ldr	r2, [fp, #8]
   2b380:	bl	28dc <InflateSkipData>
   2b384:	ldr	r3, [sp, #44]	; 0x2c
   2b388:	ldr	r2, [r7, r6]
   2b38c:	ldr	r0, [r3, r6]
   2b390:	sdiv	r1, r9, r0
   2b394:	mul	r1, r1, r0
   2b398:	add	r0, r0, r9
   2b39c:	sub	r1, r1, r9
   2b3a0:	add	r0, r0, r1
   2b3a4:	ldr	r1, [r4, r6]
   2b3a8:	mla	r9, r2, r1, r0
   2b3ac:	subs	sl, sl, #1
   2b3b0:	add	r6, r6, #4
   2b3b4:	beq	2b26c <ReadCompressedDataSlabN+0x1828>
   2b3b8:	ldr	r0, [r5, r6]
   2b3bc:	add	r0, r0, #1
   2b3c0:	str	r0, [r5, r6]
   2b3c4:	ldr	r1, [r8, r6]
   2b3c8:	sdiv	r2, r0, r1
   2b3cc:	mls	r0, r2, r1, r0
   2b3d0:	cmp	r0, #0
   2b3d4:	bne	2b438 <ReadCompressedDataSlabN+0x19f4>
   2b3d8:	mov	r0, #0
   2b3dc:	str	r0, [r5, r6]
   2b3e0:	ldr	r0, [r3, r6]
   2b3e4:	sdiv	r1, r9, r0
   2b3e8:	mls	r1, r1, r0, r9
   2b3ec:	cmp	r1, #0
   2b3f0:	bne	2b364 <ReadCompressedDataSlabN+0x1920>
   2b3f4:	ldr	r0, [r7, r6]
   2b3f8:	cmp	r0, #0
   2b3fc:	beq	2b3ac <ReadCompressedDataSlabN+0x1968>
   2b400:	ldr	r1, [r4, r6]
   2b404:	ldr	r2, [fp, #8]
   2b408:	mul	r3, r1, r0
   2b40c:	ldr	r0, [sp, #52]	; 0x34
   2b410:	add	r1, sp, #56	; 0x38
   2b414:	bl	28dc <InflateSkipData>
   2b418:	ldr	r0, [r4, r6]
   2b41c:	ldr	r1, [r7, r6]
   2b420:	ldr	r3, [sp, #44]	; 0x2c
   2b424:	mla	r9, r1, r0, r9
   2b428:	subs	sl, sl, #1
   2b42c:	add	r6, r6, #4
   2b430:	bne	2b3b8 <ReadCompressedDataSlabN+0x1974>
   2b434:	b	2b26c <ReadCompressedDataSlabN+0x1828>
   2b438:	ldr	r0, [sp, #20]
   2b43c:	ldr	r4, [r0, r6]
   2b440:	cmp	r4, #0
   2b444:	beq	2b26c <ReadCompressedDataSlabN+0x1828>
   2b448:	ldr	r0, [sp, #52]	; 0x34
   2b44c:	ldr	r2, [fp, #8]
   2b450:	add	r1, sp, #56	; 0x38
   2b454:	mov	r3, r4
   2b458:	bl	28dc <InflateSkipData>
   2b45c:	add	r9, r4, r9
   2b460:	b	2b26c <ReadCompressedDataSlabN+0x1828>
   2b464:	ldr	r0, [sp, #52]	; 0x34
   2b468:	ldr	r2, [fp, #8]
   2b46c:	add	r1, sp, #56	; 0x38
   2b470:	mov	r3, r9
   2b474:	bl	28dc <InflateSkipData>
   2b478:	ldr	r0, [fp, #24]
   2b47c:	ldr	r0, [r0]
   2b480:	cmp	r0, #1
   2b484:	bne	2d040 <ReadCompressedDataSlabN+0x35fc>
   2b488:	ldr	r0, [sp, #32]
   2b48c:	cmp	r0, #1
   2b490:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b494:	sub	r0, fp, #112	; 0x70
   2b498:	add	r7, sl, #4
   2b49c:	add	r6, sp, #56	; 0x38
   2b4a0:	orr	r5, r0, #4
   2b4a4:	ldr	r0, [fp, #28]
   2b4a8:	str	r7, [sp, #24]
   2b4ac:	add	r8, r0, #4
   2b4b0:	add	r0, sp, #112	; 0x70
   2b4b4:	orr	r3, r0, #4
   2b4b8:	ldr	r0, [fp, #12]
   2b4bc:	str	r8, [sp, #36]	; 0x24
   2b4c0:	str	r3, [sp, #44]	; 0x2c
   2b4c4:	sub	r0, r0, #1
   2b4c8:	str	r0, [sp, #28]
   2b4cc:	sub	r0, fp, #72	; 0x48
   2b4d0:	orr	r0, r0, #4
   2b4d4:	str	r0, [sp, #20]
   2b4d8:	mov	r0, #0
   2b4dc:	str	r0, [sp, #40]	; 0x28
   2b4e0:	ldr	r3, [sl]
   2b4e4:	cmp	r3, #0
   2b4e8:	bne	2b524 <ReadCompressedDataSlabN+0x1ae0>
   2b4ec:	b	2b550 <ReadCompressedDataSlabN+0x1b0c>
   2b4f0:	ldr	r0, [fp, #28]
   2b4f4:	ldr	r1, [sp, #40]	; 0x28
   2b4f8:	ldr	sl, [fp, #20]
   2b4fc:	add	r6, sp, #56	; 0x38
   2b500:	ldr	r0, [r0]
   2b504:	add	r1, r0, r1
   2b508:	ldr	r0, [sp, #32]
   2b50c:	str	r1, [sp, #40]	; 0x28
   2b510:	cmp	r1, r0
   2b514:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b518:	ldr	r3, [sl]
   2b51c:	cmp	r3, #0
   2b520:	beq	2b550 <ReadCompressedDataSlabN+0x1b0c>
   2b524:	ldr	r8, [fp, #8]
   2b528:	ldr	r0, [sp, #52]	; 0x34
   2b52c:	mov	r1, r6
   2b530:	mov	r2, r8
   2b534:	mov	r7, r0
   2b538:	bl	28dc <InflateSkipData>
   2b53c:	ldr	r0, [sl]
   2b540:	ldr	r1, [sp, #48]	; 0x30
   2b544:	add	r4, sp, #112	; 0x70
   2b548:	add	r9, r0, r9
   2b54c:	b	2b560 <ReadCompressedDataSlabN+0x1b1c>
   2b550:	ldr	r1, [sp, #48]	; 0x30
   2b554:	ldr	r7, [sp, #52]	; 0x34
   2b558:	ldr	r8, [fp, #8]
   2b55c:	add	r4, sp, #112	; 0x70
   2b560:	ldr	r0, [fp, #28]
   2b564:	mov	r3, r8
   2b568:	ldr	r0, [r0]
   2b56c:	str	r0, [sp]
   2b570:	ldr	r0, [sp, #40]	; 0x28
   2b574:	add	r2, r1, r0, lsl #1
   2b578:	mov	r0, r7
   2b57c:	mov	r1, r6
   2b580:	bl	1ee28 <ReadCompressedUInt16Data>
   2b584:	ldr	r1, [fp, #16]
   2b588:	ldr	r0, [sl]
   2b58c:	mov	r2, r8
   2b590:	ldr	r1, [r1]
   2b594:	sub	r0, r1, r0
   2b598:	ldr	r1, [fp, #28]
   2b59c:	ldr	r1, [r1]
   2b5a0:	sub	r3, r0, r1
   2b5a4:	mov	r0, r7
   2b5a8:	mov	r1, r6
   2b5ac:	bl	28dc <InflateSkipData>
   2b5b0:	ldr	r0, [fp, #16]
   2b5b4:	ldr	r1, [sl]
   2b5b8:	ldr	r0, [r0]
   2b5bc:	add	r0, r0, r9
   2b5c0:	sub	r9, r0, r1
   2b5c4:	ldr	r0, [fp, #12]
   2b5c8:	cmp	r0, #2
   2b5cc:	blt	2b4f0 <ReadCompressedDataSlabN+0x1aac>
   2b5d0:	ldr	sl, [sp, #28]
   2b5d4:	ldr	r8, [sp, #36]	; 0x24
   2b5d8:	ldr	r3, [sp, #44]	; 0x2c
   2b5dc:	ldr	r7, [sp, #24]
   2b5e0:	mov	r6, #0
   2b5e4:	b	2b63c <ReadCompressedDataSlabN+0x1bf8>
   2b5e8:	ldr	r2, [r4, r6]
   2b5ec:	ldr	r3, [r7, r6]
   2b5f0:	sub	r0, r0, r1
   2b5f4:	add	r1, sp, #56	; 0x38
   2b5f8:	mla	r3, r3, r2, r0
   2b5fc:	ldr	r0, [sp, #52]	; 0x34
   2b600:	ldr	r2, [fp, #8]
   2b604:	bl	28dc <InflateSkipData>
   2b608:	ldr	r3, [sp, #44]	; 0x2c
   2b60c:	ldr	r2, [r7, r6]
   2b610:	ldr	r0, [r3, r6]
   2b614:	sdiv	r1, r9, r0
   2b618:	mul	r1, r1, r0
   2b61c:	add	r0, r0, r9
   2b620:	sub	r1, r1, r9
   2b624:	add	r0, r0, r1
   2b628:	ldr	r1, [r4, r6]
   2b62c:	mla	r9, r2, r1, r0
   2b630:	subs	sl, sl, #1
   2b634:	add	r6, r6, #4
   2b638:	beq	2b4f0 <ReadCompressedDataSlabN+0x1aac>
   2b63c:	ldr	r0, [r5, r6]
   2b640:	add	r0, r0, #1
   2b644:	str	r0, [r5, r6]
   2b648:	ldr	r1, [r8, r6]
   2b64c:	sdiv	r2, r0, r1
   2b650:	mls	r0, r2, r1, r0
   2b654:	cmp	r0, #0
   2b658:	bne	2b6bc <ReadCompressedDataSlabN+0x1c78>
   2b65c:	mov	r0, #0
   2b660:	str	r0, [r5, r6]
   2b664:	ldr	r0, [r3, r6]
   2b668:	sdiv	r1, r9, r0
   2b66c:	mls	r1, r1, r0, r9
   2b670:	cmp	r1, #0
   2b674:	bne	2b5e8 <ReadCompressedDataSlabN+0x1ba4>
   2b678:	ldr	r0, [r7, r6]
   2b67c:	cmp	r0, #0
   2b680:	beq	2b630 <ReadCompressedDataSlabN+0x1bec>
   2b684:	ldr	r1, [r4, r6]
   2b688:	ldr	r2, [fp, #8]
   2b68c:	mul	r3, r1, r0
   2b690:	ldr	r0, [sp, #52]	; 0x34
   2b694:	add	r1, sp, #56	; 0x38
   2b698:	bl	28dc <InflateSkipData>
   2b69c:	ldr	r0, [r4, r6]
   2b6a0:	ldr	r1, [r7, r6]
   2b6a4:	ldr	r3, [sp, #44]	; 0x2c
   2b6a8:	mla	r9, r1, r0, r9
   2b6ac:	subs	sl, sl, #1
   2b6b0:	add	r6, r6, #4
   2b6b4:	bne	2b63c <ReadCompressedDataSlabN+0x1bf8>
   2b6b8:	b	2b4f0 <ReadCompressedDataSlabN+0x1aac>
   2b6bc:	ldr	r0, [sp, #20]
   2b6c0:	ldr	r4, [r0, r6]
   2b6c4:	cmp	r4, #0
   2b6c8:	beq	2b4f0 <ReadCompressedDataSlabN+0x1aac>
   2b6cc:	ldr	r0, [sp, #52]	; 0x34
   2b6d0:	ldr	r2, [fp, #8]
   2b6d4:	add	r1, sp, #56	; 0x38
   2b6d8:	mov	r3, r4
   2b6dc:	bl	28dc <InflateSkipData>
   2b6e0:	add	r9, r4, r9
   2b6e4:	b	2b4f0 <ReadCompressedDataSlabN+0x1aac>
   2b6e8:	ldr	r0, [sp, #52]	; 0x34
   2b6ec:	ldr	r2, [fp, #8]
   2b6f0:	add	r1, sp, #56	; 0x38
   2b6f4:	mov	r3, r9
   2b6f8:	bl	28dc <InflateSkipData>
   2b6fc:	ldr	r0, [fp, #24]
   2b700:	ldr	r0, [r0]
   2b704:	cmp	r0, #1
   2b708:	bne	2d364 <ReadCompressedDataSlabN+0x3920>
   2b70c:	ldr	r0, [sp, #32]
   2b710:	cmp	r0, #1
   2b714:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b718:	sub	r0, fp, #112	; 0x70
   2b71c:	add	r7, sl, #4
   2b720:	add	r6, sp, #56	; 0x38
   2b724:	orr	r5, r0, #4
   2b728:	ldr	r0, [fp, #28]
   2b72c:	str	r7, [sp, #24]
   2b730:	add	r8, r0, #4
   2b734:	add	r0, sp, #112	; 0x70
   2b738:	orr	r3, r0, #4
   2b73c:	ldr	r0, [fp, #12]
   2b740:	str	r8, [sp, #36]	; 0x24
   2b744:	str	r3, [sp, #44]	; 0x2c
   2b748:	sub	r0, r0, #1
   2b74c:	str	r0, [sp, #28]
   2b750:	sub	r0, fp, #72	; 0x48
   2b754:	orr	r0, r0, #4
   2b758:	str	r0, [sp, #20]
   2b75c:	mov	r0, #0
   2b760:	str	r0, [sp, #40]	; 0x28
   2b764:	ldr	r3, [sl]
   2b768:	cmp	r3, #0
   2b76c:	bne	2b7a8 <ReadCompressedDataSlabN+0x1d64>
   2b770:	b	2b7d4 <ReadCompressedDataSlabN+0x1d90>
   2b774:	ldr	r0, [fp, #28]
   2b778:	ldr	r1, [sp, #40]	; 0x28
   2b77c:	ldr	sl, [fp, #20]
   2b780:	add	r6, sp, #56	; 0x38
   2b784:	ldr	r0, [r0]
   2b788:	add	r1, r0, r1
   2b78c:	ldr	r0, [sp, #32]
   2b790:	str	r1, [sp, #40]	; 0x28
   2b794:	cmp	r1, r0
   2b798:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b79c:	ldr	r3, [sl]
   2b7a0:	cmp	r3, #0
   2b7a4:	beq	2b7d4 <ReadCompressedDataSlabN+0x1d90>
   2b7a8:	ldr	r8, [fp, #8]
   2b7ac:	ldr	r0, [sp, #52]	; 0x34
   2b7b0:	mov	r1, r6
   2b7b4:	mov	r2, r8
   2b7b8:	mov	r7, r0
   2b7bc:	bl	28dc <InflateSkipData>
   2b7c0:	ldr	r0, [sl]
   2b7c4:	ldr	r1, [sp, #48]	; 0x30
   2b7c8:	add	r4, sp, #112	; 0x70
   2b7cc:	add	r9, r0, r9
   2b7d0:	b	2b7e4 <ReadCompressedDataSlabN+0x1da0>
   2b7d4:	ldr	r1, [sp, #48]	; 0x30
   2b7d8:	ldr	r7, [sp, #52]	; 0x34
   2b7dc:	ldr	r8, [fp, #8]
   2b7e0:	add	r4, sp, #112	; 0x70
   2b7e4:	ldr	r0, [fp, #28]
   2b7e8:	mov	r3, r8
   2b7ec:	ldr	r0, [r0]
   2b7f0:	str	r0, [sp]
   2b7f4:	ldr	r0, [sp, #40]	; 0x28
   2b7f8:	add	r2, r1, r0, lsl #2
   2b7fc:	mov	r0, r7
   2b800:	mov	r1, r6
   2b804:	bl	15178 <ReadCompressedInt32Data>
   2b808:	ldr	r1, [fp, #16]
   2b80c:	ldr	r0, [sl]
   2b810:	mov	r2, r8
   2b814:	ldr	r1, [r1]
   2b818:	sub	r0, r1, r0
   2b81c:	ldr	r1, [fp, #28]
   2b820:	ldr	r1, [r1]
   2b824:	sub	r3, r0, r1
   2b828:	mov	r0, r7
   2b82c:	mov	r1, r6
   2b830:	bl	28dc <InflateSkipData>
   2b834:	ldr	r0, [fp, #16]
   2b838:	ldr	r1, [sl]
   2b83c:	ldr	r0, [r0]
   2b840:	add	r0, r0, r9
   2b844:	sub	r9, r0, r1
   2b848:	ldr	r0, [fp, #12]
   2b84c:	cmp	r0, #2
   2b850:	blt	2b774 <ReadCompressedDataSlabN+0x1d30>
   2b854:	ldr	sl, [sp, #28]
   2b858:	ldr	r8, [sp, #36]	; 0x24
   2b85c:	ldr	r3, [sp, #44]	; 0x2c
   2b860:	ldr	r7, [sp, #24]
   2b864:	mov	r6, #0
   2b868:	b	2b8c0 <ReadCompressedDataSlabN+0x1e7c>
   2b86c:	ldr	r2, [r4, r6]
   2b870:	ldr	r3, [r7, r6]
   2b874:	sub	r0, r0, r1
   2b878:	add	r1, sp, #56	; 0x38
   2b87c:	mla	r3, r3, r2, r0
   2b880:	ldr	r0, [sp, #52]	; 0x34
   2b884:	ldr	r2, [fp, #8]
   2b888:	bl	28dc <InflateSkipData>
   2b88c:	ldr	r3, [sp, #44]	; 0x2c
   2b890:	ldr	r2, [r7, r6]
   2b894:	ldr	r0, [r3, r6]
   2b898:	sdiv	r1, r9, r0
   2b89c:	mul	r1, r1, r0
   2b8a0:	add	r0, r0, r9
   2b8a4:	sub	r1, r1, r9
   2b8a8:	add	r0, r0, r1
   2b8ac:	ldr	r1, [r4, r6]
   2b8b0:	mla	r9, r2, r1, r0
   2b8b4:	subs	sl, sl, #1
   2b8b8:	add	r6, r6, #4
   2b8bc:	beq	2b774 <ReadCompressedDataSlabN+0x1d30>
   2b8c0:	ldr	r0, [r5, r6]
   2b8c4:	add	r0, r0, #1
   2b8c8:	str	r0, [r5, r6]
   2b8cc:	ldr	r1, [r8, r6]
   2b8d0:	sdiv	r2, r0, r1
   2b8d4:	mls	r0, r2, r1, r0
   2b8d8:	cmp	r0, #0
   2b8dc:	bne	2b940 <ReadCompressedDataSlabN+0x1efc>
   2b8e0:	mov	r0, #0
   2b8e4:	str	r0, [r5, r6]
   2b8e8:	ldr	r0, [r3, r6]
   2b8ec:	sdiv	r1, r9, r0
   2b8f0:	mls	r1, r1, r0, r9
   2b8f4:	cmp	r1, #0
   2b8f8:	bne	2b86c <ReadCompressedDataSlabN+0x1e28>
   2b8fc:	ldr	r0, [r7, r6]
   2b900:	cmp	r0, #0
   2b904:	beq	2b8b4 <ReadCompressedDataSlabN+0x1e70>
   2b908:	ldr	r1, [r4, r6]
   2b90c:	ldr	r2, [fp, #8]
   2b910:	mul	r3, r1, r0
   2b914:	ldr	r0, [sp, #52]	; 0x34
   2b918:	add	r1, sp, #56	; 0x38
   2b91c:	bl	28dc <InflateSkipData>
   2b920:	ldr	r0, [r4, r6]
   2b924:	ldr	r1, [r7, r6]
   2b928:	ldr	r3, [sp, #44]	; 0x2c
   2b92c:	mla	r9, r1, r0, r9
   2b930:	subs	sl, sl, #1
   2b934:	add	r6, r6, #4
   2b938:	bne	2b8c0 <ReadCompressedDataSlabN+0x1e7c>
   2b93c:	b	2b774 <ReadCompressedDataSlabN+0x1d30>
   2b940:	ldr	r0, [sp, #20]
   2b944:	ldr	r4, [r0, r6]
   2b948:	cmp	r4, #0
   2b94c:	beq	2b774 <ReadCompressedDataSlabN+0x1d30>
   2b950:	ldr	r0, [sp, #52]	; 0x34
   2b954:	ldr	r2, [fp, #8]
   2b958:	add	r1, sp, #56	; 0x38
   2b95c:	mov	r3, r4
   2b960:	bl	28dc <InflateSkipData>
   2b964:	add	r9, r4, r9
   2b968:	b	2b774 <ReadCompressedDataSlabN+0x1d30>
   2b96c:	ldr	r0, [sp, #52]	; 0x34
   2b970:	ldr	r2, [fp, #8]
   2b974:	add	r1, sp, #56	; 0x38
   2b978:	mov	r3, r9
   2b97c:	bl	28dc <InflateSkipData>
   2b980:	ldr	r0, [fp, #24]
   2b984:	ldr	r0, [r0]
   2b988:	cmp	r0, #1
   2b98c:	bne	2d688 <ReadCompressedDataSlabN+0x3c44>
   2b990:	ldr	r0, [sp, #32]
   2b994:	cmp	r0, #1
   2b998:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2b99c:	sub	r0, fp, #112	; 0x70
   2b9a0:	add	r7, sl, #4
   2b9a4:	add	r6, sp, #56	; 0x38
   2b9a8:	orr	r5, r0, #4
   2b9ac:	ldr	r0, [fp, #28]
   2b9b0:	str	r7, [sp, #24]
   2b9b4:	add	r8, r0, #4
   2b9b8:	add	r0, sp, #112	; 0x70
   2b9bc:	orr	r3, r0, #4
   2b9c0:	ldr	r0, [fp, #12]
   2b9c4:	str	r8, [sp, #36]	; 0x24
   2b9c8:	str	r3, [sp, #44]	; 0x2c
   2b9cc:	sub	r0, r0, #1
   2b9d0:	str	r0, [sp, #28]
   2b9d4:	sub	r0, fp, #72	; 0x48
   2b9d8:	orr	r0, r0, #4
   2b9dc:	str	r0, [sp, #20]
   2b9e0:	mov	r0, #0
   2b9e4:	str	r0, [sp, #40]	; 0x28
   2b9e8:	ldr	r3, [sl]
   2b9ec:	cmp	r3, #0
   2b9f0:	bne	2ba2c <ReadCompressedDataSlabN+0x1fe8>
   2b9f4:	b	2ba58 <ReadCompressedDataSlabN+0x2014>
   2b9f8:	ldr	r0, [fp, #28]
   2b9fc:	ldr	r1, [sp, #40]	; 0x28
   2ba00:	ldr	sl, [fp, #20]
   2ba04:	add	r6, sp, #56	; 0x38
   2ba08:	ldr	r0, [r0]
   2ba0c:	add	r1, r0, r1
   2ba10:	ldr	r0, [sp, #32]
   2ba14:	str	r1, [sp, #40]	; 0x28
   2ba18:	cmp	r1, r0
   2ba1c:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2ba20:	ldr	r3, [sl]
   2ba24:	cmp	r3, #0
   2ba28:	beq	2ba58 <ReadCompressedDataSlabN+0x2014>
   2ba2c:	ldr	r8, [fp, #8]
   2ba30:	ldr	r0, [sp, #52]	; 0x34
   2ba34:	mov	r1, r6
   2ba38:	mov	r2, r8
   2ba3c:	mov	r7, r0
   2ba40:	bl	28dc <InflateSkipData>
   2ba44:	ldr	r0, [sl]
   2ba48:	ldr	r1, [sp, #48]	; 0x30
   2ba4c:	add	r4, sp, #112	; 0x70
   2ba50:	add	r9, r0, r9
   2ba54:	b	2ba68 <ReadCompressedDataSlabN+0x2024>
   2ba58:	ldr	r1, [sp, #48]	; 0x30
   2ba5c:	ldr	r7, [sp, #52]	; 0x34
   2ba60:	ldr	r8, [fp, #8]
   2ba64:	add	r4, sp, #112	; 0x70
   2ba68:	ldr	r0, [fp, #28]
   2ba6c:	mov	r3, r8
   2ba70:	ldr	r0, [r0]
   2ba74:	str	r0, [sp]
   2ba78:	ldr	r0, [sp, #40]	; 0x28
   2ba7c:	add	r2, r1, r0, lsl #2
   2ba80:	mov	r0, r7
   2ba84:	mov	r1, r6
   2ba88:	bl	18da0 <ReadCompressedUInt32Data>
   2ba8c:	ldr	r1, [fp, #16]
   2ba90:	ldr	r0, [sl]
   2ba94:	mov	r2, r8
   2ba98:	ldr	r1, [r1]
   2ba9c:	sub	r0, r1, r0
   2baa0:	ldr	r1, [fp, #28]
   2baa4:	ldr	r1, [r1]
   2baa8:	sub	r3, r0, r1
   2baac:	mov	r0, r7
   2bab0:	mov	r1, r6
   2bab4:	bl	28dc <InflateSkipData>
   2bab8:	ldr	r0, [fp, #16]
   2babc:	ldr	r1, [sl]
   2bac0:	ldr	r0, [r0]
   2bac4:	add	r0, r0, r9
   2bac8:	sub	r9, r0, r1
   2bacc:	ldr	r0, [fp, #12]
   2bad0:	cmp	r0, #2
   2bad4:	blt	2b9f8 <ReadCompressedDataSlabN+0x1fb4>
   2bad8:	ldr	sl, [sp, #28]
   2badc:	ldr	r8, [sp, #36]	; 0x24
   2bae0:	ldr	r3, [sp, #44]	; 0x2c
   2bae4:	ldr	r7, [sp, #24]
   2bae8:	mov	r6, #0
   2baec:	b	2bb44 <ReadCompressedDataSlabN+0x2100>
   2baf0:	ldr	r2, [r4, r6]
   2baf4:	ldr	r3, [r7, r6]
   2baf8:	sub	r0, r0, r1
   2bafc:	add	r1, sp, #56	; 0x38
   2bb00:	mla	r3, r3, r2, r0
   2bb04:	ldr	r0, [sp, #52]	; 0x34
   2bb08:	ldr	r2, [fp, #8]
   2bb0c:	bl	28dc <InflateSkipData>
   2bb10:	ldr	r3, [sp, #44]	; 0x2c
   2bb14:	ldr	r2, [r7, r6]
   2bb18:	ldr	r0, [r3, r6]
   2bb1c:	sdiv	r1, r9, r0
   2bb20:	mul	r1, r1, r0
   2bb24:	add	r0, r0, r9
   2bb28:	sub	r1, r1, r9
   2bb2c:	add	r0, r0, r1
   2bb30:	ldr	r1, [r4, r6]
   2bb34:	mla	r9, r2, r1, r0
   2bb38:	subs	sl, sl, #1
   2bb3c:	add	r6, r6, #4
   2bb40:	beq	2b9f8 <ReadCompressedDataSlabN+0x1fb4>
   2bb44:	ldr	r0, [r5, r6]
   2bb48:	add	r0, r0, #1
   2bb4c:	str	r0, [r5, r6]
   2bb50:	ldr	r1, [r8, r6]
   2bb54:	sdiv	r2, r0, r1
   2bb58:	mls	r0, r2, r1, r0
   2bb5c:	cmp	r0, #0
   2bb60:	bne	2bbc4 <ReadCompressedDataSlabN+0x2180>
   2bb64:	mov	r0, #0
   2bb68:	str	r0, [r5, r6]
   2bb6c:	ldr	r0, [r3, r6]
   2bb70:	sdiv	r1, r9, r0
   2bb74:	mls	r1, r1, r0, r9
   2bb78:	cmp	r1, #0
   2bb7c:	bne	2baf0 <ReadCompressedDataSlabN+0x20ac>
   2bb80:	ldr	r0, [r7, r6]
   2bb84:	cmp	r0, #0
   2bb88:	beq	2bb38 <ReadCompressedDataSlabN+0x20f4>
   2bb8c:	ldr	r1, [r4, r6]
   2bb90:	ldr	r2, [fp, #8]
   2bb94:	mul	r3, r1, r0
   2bb98:	ldr	r0, [sp, #52]	; 0x34
   2bb9c:	add	r1, sp, #56	; 0x38
   2bba0:	bl	28dc <InflateSkipData>
   2bba4:	ldr	r0, [r4, r6]
   2bba8:	ldr	r1, [r7, r6]
   2bbac:	ldr	r3, [sp, #44]	; 0x2c
   2bbb0:	mla	r9, r1, r0, r9
   2bbb4:	subs	sl, sl, #1
   2bbb8:	add	r6, r6, #4
   2bbbc:	bne	2bb44 <ReadCompressedDataSlabN+0x2100>
   2bbc0:	b	2b9f8 <ReadCompressedDataSlabN+0x1fb4>
   2bbc4:	ldr	r0, [sp, #20]
   2bbc8:	ldr	r4, [r0, r6]
   2bbcc:	cmp	r4, #0
   2bbd0:	beq	2b9f8 <ReadCompressedDataSlabN+0x1fb4>
   2bbd4:	ldr	r0, [sp, #52]	; 0x34
   2bbd8:	ldr	r2, [fp, #8]
   2bbdc:	add	r1, sp, #56	; 0x38
   2bbe0:	mov	r3, r4
   2bbe4:	bl	28dc <InflateSkipData>
   2bbe8:	add	r9, r4, r9
   2bbec:	b	2b9f8 <ReadCompressedDataSlabN+0x1fb4>
   2bbf0:	ldr	r0, [sp, #52]	; 0x34
   2bbf4:	ldr	r2, [fp, #8]
   2bbf8:	add	r1, sp, #56	; 0x38
   2bbfc:	mov	r3, r9
   2bc00:	bl	28dc <InflateSkipData>
   2bc04:	ldr	r0, [fp, #24]
   2bc08:	ldr	r0, [r0]
   2bc0c:	cmp	r0, #1
   2bc10:	bne	2d9ac <ReadCompressedDataSlabN+0x3f68>
   2bc14:	ldr	r0, [sp, #32]
   2bc18:	cmp	r0, #1
   2bc1c:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2bc20:	sub	r0, fp, #112	; 0x70
   2bc24:	add	r7, sp, #56	; 0x38
   2bc28:	orr	r5, r0, #4
   2bc2c:	ldr	r0, [fp, #28]
   2bc30:	add	r0, r0, #4
   2bc34:	str	r0, [sp, #36]	; 0x24
   2bc38:	add	r0, sp, #112	; 0x70
   2bc3c:	orr	r0, r0, #4
   2bc40:	str	r0, [sp, #28]
   2bc44:	add	r0, sl, #4
   2bc48:	str	r0, [sp, #44]	; 0x2c
   2bc4c:	ldr	r0, [fp, #12]
   2bc50:	sub	r0, r0, #1
   2bc54:	str	r0, [sp, #24]
   2bc58:	sub	r0, fp, #72	; 0x48
   2bc5c:	orr	r0, r0, #4
   2bc60:	str	r0, [sp, #20]
   2bc64:	mov	r0, #0
   2bc68:	str	r0, [sp, #40]	; 0x28
   2bc6c:	ldr	r3, [sl]
   2bc70:	cmp	r3, #0
   2bc74:	bne	2bcb0 <ReadCompressedDataSlabN+0x226c>
   2bc78:	b	2bcdc <ReadCompressedDataSlabN+0x2298>
   2bc7c:	ldr	r0, [fp, #28]
   2bc80:	ldr	r1, [sp, #40]	; 0x28
   2bc84:	ldr	sl, [fp, #20]
   2bc88:	add	r7, sp, #56	; 0x38
   2bc8c:	ldr	r0, [r0]
   2bc90:	add	r1, r0, r1
   2bc94:	ldr	r0, [sp, #32]
   2bc98:	str	r1, [sp, #40]	; 0x28
   2bc9c:	cmp	r1, r0
   2bca0:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2bca4:	ldr	r3, [sl]
   2bca8:	cmp	r3, #0
   2bcac:	beq	2bcdc <ReadCompressedDataSlabN+0x2298>
   2bcb0:	ldr	r6, [sp, #52]	; 0x34
   2bcb4:	ldr	r8, [fp, #8]
   2bcb8:	mov	r1, r7
   2bcbc:	mov	r0, r6
   2bcc0:	mov	r2, r8
   2bcc4:	bl	28dc <InflateSkipData>
   2bcc8:	ldr	r0, [sl]
   2bccc:	ldr	r1, [sp, #48]	; 0x30
   2bcd0:	add	r4, sp, #112	; 0x70
   2bcd4:	add	r9, r0, r9
   2bcd8:	b	2bcec <ReadCompressedDataSlabN+0x22a8>
   2bcdc:	ldr	r1, [sp, #48]	; 0x30
   2bce0:	ldr	r6, [sp, #52]	; 0x34
   2bce4:	ldr	r8, [fp, #8]
   2bce8:	add	r4, sp, #112	; 0x70
   2bcec:	ldr	r0, [fp, #28]
   2bcf0:	mov	r3, r8
   2bcf4:	ldr	r0, [r0]
   2bcf8:	str	r0, [sp]
   2bcfc:	ldr	r0, [sp, #40]	; 0x28
   2bd00:	add	r2, r1, r0, lsl #3
   2bd04:	mov	r0, r6
   2bd08:	mov	r1, r7
   2bd0c:	bl	e6f8 <ReadCompressedInt64Data>
   2bd10:	ldr	r1, [fp, #16]
   2bd14:	ldr	r0, [sl]
   2bd18:	mov	r2, r8
   2bd1c:	ldr	r1, [r1]
   2bd20:	sub	r0, r1, r0
   2bd24:	ldr	r1, [fp, #28]
   2bd28:	ldr	r1, [r1]
   2bd2c:	sub	r3, r0, r1
   2bd30:	mov	r0, r6
   2bd34:	mov	r1, r7
   2bd38:	bl	28dc <InflateSkipData>
   2bd3c:	ldr	r0, [fp, #16]
   2bd40:	ldr	r1, [sl]
   2bd44:	ldr	r0, [r0]
   2bd48:	add	r0, r0, r9
   2bd4c:	sub	r9, r0, r1
   2bd50:	ldr	r0, [fp, #12]
   2bd54:	cmp	r0, #2
   2bd58:	blt	2bc7c <ReadCompressedDataSlabN+0x2238>
   2bd5c:	ldr	sl, [sp, #24]
   2bd60:	ldr	r8, [sp, #36]	; 0x24
   2bd64:	ldr	r7, [sp, #28]
   2bd68:	ldr	r3, [sp, #44]	; 0x2c
   2bd6c:	mov	r6, #0
   2bd70:	b	2bdc8 <ReadCompressedDataSlabN+0x2384>
   2bd74:	ldr	r2, [r4, r6]
   2bd78:	ldr	r3, [r3, r6]
   2bd7c:	sub	r0, r0, r1
   2bd80:	add	r1, sp, #56	; 0x38
   2bd84:	mla	r3, r3, r2, r0
   2bd88:	ldr	r0, [sp, #52]	; 0x34
   2bd8c:	ldr	r2, [fp, #8]
   2bd90:	bl	28dc <InflateSkipData>
   2bd94:	ldr	r0, [r7, r6]
   2bd98:	ldr	r3, [sp, #44]	; 0x2c
   2bd9c:	sdiv	r1, r9, r0
   2bda0:	ldr	r2, [r3, r6]
   2bda4:	mul	r1, r1, r0
   2bda8:	add	r0, r0, r9
   2bdac:	sub	r1, r1, r9
   2bdb0:	add	r0, r0, r1
   2bdb4:	ldr	r1, [r4, r6]
   2bdb8:	mla	r9, r2, r1, r0
   2bdbc:	subs	sl, sl, #1
   2bdc0:	add	r6, r6, #4
   2bdc4:	beq	2bc7c <ReadCompressedDataSlabN+0x2238>
   2bdc8:	ldr	r0, [r5, r6]
   2bdcc:	add	r0, r0, #1
   2bdd0:	str	r0, [r5, r6]
   2bdd4:	ldr	r1, [r8, r6]
   2bdd8:	sdiv	r2, r0, r1
   2bddc:	mls	r0, r2, r1, r0
   2bde0:	cmp	r0, #0
   2bde4:	bne	2be48 <ReadCompressedDataSlabN+0x2404>
   2bde8:	mov	r0, #0
   2bdec:	str	r0, [r5, r6]
   2bdf0:	ldr	r0, [r7, r6]
   2bdf4:	sdiv	r1, r9, r0
   2bdf8:	mls	r1, r1, r0, r9
   2bdfc:	cmp	r1, #0
   2be00:	bne	2bd74 <ReadCompressedDataSlabN+0x2330>
   2be04:	ldr	r0, [r3, r6]
   2be08:	cmp	r0, #0
   2be0c:	beq	2bdbc <ReadCompressedDataSlabN+0x2378>
   2be10:	ldr	r1, [r4, r6]
   2be14:	ldr	r2, [fp, #8]
   2be18:	mul	r3, r1, r0
   2be1c:	ldr	r0, [sp, #52]	; 0x34
   2be20:	add	r1, sp, #56	; 0x38
   2be24:	bl	28dc <InflateSkipData>
   2be28:	ldr	r3, [sp, #44]	; 0x2c
   2be2c:	ldr	r0, [r4, r6]
   2be30:	ldr	r1, [r3, r6]
   2be34:	mla	r9, r1, r0, r9
   2be38:	subs	sl, sl, #1
   2be3c:	add	r6, r6, #4
   2be40:	bne	2bdc8 <ReadCompressedDataSlabN+0x2384>
   2be44:	b	2bc7c <ReadCompressedDataSlabN+0x2238>
   2be48:	ldr	r0, [sp, #20]
   2be4c:	ldr	r4, [r0, r6]
   2be50:	cmp	r4, #0
   2be54:	beq	2bc7c <ReadCompressedDataSlabN+0x2238>
   2be58:	ldr	r0, [sp, #52]	; 0x34
   2be5c:	ldr	r2, [fp, #8]
   2be60:	add	r1, sp, #56	; 0x38
   2be64:	mov	r3, r4
   2be68:	bl	28dc <InflateSkipData>
   2be6c:	add	r9, r4, r9
   2be70:	b	2bc7c <ReadCompressedDataSlabN+0x2238>
   2be74:	ldr	r0, [sp, #52]	; 0x34
   2be78:	ldr	r2, [fp, #8]
   2be7c:	add	r1, sp, #56	; 0x38
   2be80:	mov	r3, r9
   2be84:	bl	28dc <InflateSkipData>
   2be88:	ldr	r0, [fp, #24]
   2be8c:	ldr	r0, [r0]
   2be90:	cmp	r0, #1
   2be94:	bne	2dcd0 <ReadCompressedDataSlabN+0x428c>
   2be98:	ldr	r0, [sp, #32]
   2be9c:	cmp	r0, #1
   2bea0:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2bea4:	sub	r0, fp, #112	; 0x70
   2bea8:	add	r7, sl, #4
   2beac:	add	r6, sp, #56	; 0x38
   2beb0:	orr	r5, r0, #4
   2beb4:	ldr	r0, [fp, #28]
   2beb8:	str	r7, [sp, #24]
   2bebc:	add	r8, r0, #4
   2bec0:	add	r0, sp, #112	; 0x70
   2bec4:	orr	r3, r0, #4
   2bec8:	ldr	r0, [fp, #12]
   2becc:	str	r8, [sp, #36]	; 0x24
   2bed0:	str	r3, [sp, #44]	; 0x2c
   2bed4:	sub	r0, r0, #1
   2bed8:	str	r0, [sp, #28]
   2bedc:	sub	r0, fp, #72	; 0x48
   2bee0:	orr	r0, r0, #4
   2bee4:	str	r0, [sp, #20]
   2bee8:	mov	r0, #0
   2beec:	str	r0, [sp, #40]	; 0x28
   2bef0:	ldr	r3, [sl]
   2bef4:	cmp	r3, #0
   2bef8:	bne	2bf34 <ReadCompressedDataSlabN+0x24f0>
   2befc:	b	2bf60 <ReadCompressedDataSlabN+0x251c>
   2bf00:	ldr	r0, [fp, #28]
   2bf04:	ldr	r1, [sp, #40]	; 0x28
   2bf08:	ldr	sl, [fp, #20]
   2bf0c:	add	r6, sp, #56	; 0x38
   2bf10:	ldr	r0, [r0]
   2bf14:	add	r1, r0, r1
   2bf18:	ldr	r0, [sp, #32]
   2bf1c:	str	r1, [sp, #40]	; 0x28
   2bf20:	cmp	r1, r0
   2bf24:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2bf28:	ldr	r3, [sl]
   2bf2c:	cmp	r3, #0
   2bf30:	beq	2bf60 <ReadCompressedDataSlabN+0x251c>
   2bf34:	ldr	r8, [fp, #8]
   2bf38:	ldr	r0, [sp, #52]	; 0x34
   2bf3c:	mov	r1, r6
   2bf40:	mov	r2, r8
   2bf44:	mov	r7, r0
   2bf48:	bl	28dc <InflateSkipData>
   2bf4c:	ldr	r0, [sl]
   2bf50:	ldr	r1, [sp, #48]	; 0x30
   2bf54:	add	r4, sp, #112	; 0x70
   2bf58:	add	r9, r0, r9
   2bf5c:	b	2bf70 <ReadCompressedDataSlabN+0x252c>
   2bf60:	ldr	r1, [sp, #48]	; 0x30
   2bf64:	ldr	r7, [sp, #52]	; 0x34
   2bf68:	ldr	r8, [fp, #8]
   2bf6c:	add	r4, sp, #112	; 0x70
   2bf70:	ldr	r0, [fp, #28]
   2bf74:	mov	r3, r8
   2bf78:	ldr	r0, [r0]
   2bf7c:	str	r0, [sp]
   2bf80:	ldr	r0, [sp, #40]	; 0x28
   2bf84:	add	r2, r1, r0, lsl #3
   2bf88:	mov	r0, r7
   2bf8c:	mov	r1, r6
   2bf90:	bl	114c0 <ReadCompressedUInt64Data>
   2bf94:	ldr	r1, [fp, #16]
   2bf98:	ldr	r0, [sl]
   2bf9c:	mov	r2, r8
   2bfa0:	ldr	r1, [r1]
   2bfa4:	sub	r0, r1, r0
   2bfa8:	ldr	r1, [fp, #28]
   2bfac:	ldr	r1, [r1]
   2bfb0:	sub	r3, r0, r1
   2bfb4:	mov	r0, r7
   2bfb8:	mov	r1, r6
   2bfbc:	bl	28dc <InflateSkipData>
   2bfc0:	ldr	r0, [fp, #16]
   2bfc4:	ldr	r1, [sl]
   2bfc8:	ldr	r0, [r0]
   2bfcc:	add	r0, r0, r9
   2bfd0:	sub	r9, r0, r1
   2bfd4:	ldr	r0, [fp, #12]
   2bfd8:	cmp	r0, #2
   2bfdc:	blt	2bf00 <ReadCompressedDataSlabN+0x24bc>
   2bfe0:	ldr	sl, [sp, #28]
   2bfe4:	ldr	r8, [sp, #36]	; 0x24
   2bfe8:	ldr	r3, [sp, #44]	; 0x2c
   2bfec:	ldr	r7, [sp, #24]
   2bff0:	mov	r6, #0
   2bff4:	b	2c04c <ReadCompressedDataSlabN+0x2608>
   2bff8:	ldr	r2, [r4, r6]
   2bffc:	ldr	r3, [r7, r6]
   2c000:	sub	r0, r0, r1
   2c004:	add	r1, sp, #56	; 0x38
   2c008:	mla	r3, r3, r2, r0
   2c00c:	ldr	r0, [sp, #52]	; 0x34
   2c010:	ldr	r2, [fp, #8]
   2c014:	bl	28dc <InflateSkipData>
   2c018:	ldr	r3, [sp, #44]	; 0x2c
   2c01c:	ldr	r2, [r7, r6]
   2c020:	ldr	r0, [r3, r6]
   2c024:	sdiv	r1, r9, r0
   2c028:	mul	r1, r1, r0
   2c02c:	add	r0, r0, r9
   2c030:	sub	r1, r1, r9
   2c034:	add	r0, r0, r1
   2c038:	ldr	r1, [r4, r6]
   2c03c:	mla	r9, r2, r1, r0
   2c040:	subs	sl, sl, #1
   2c044:	add	r6, r6, #4
   2c048:	beq	2bf00 <ReadCompressedDataSlabN+0x24bc>
   2c04c:	ldr	r0, [r5, r6]
   2c050:	add	r0, r0, #1
   2c054:	str	r0, [r5, r6]
   2c058:	ldr	r1, [r8, r6]
   2c05c:	sdiv	r2, r0, r1
   2c060:	mls	r0, r2, r1, r0
   2c064:	cmp	r0, #0
   2c068:	bne	2c0cc <ReadCompressedDataSlabN+0x2688>
   2c06c:	mov	r0, #0
   2c070:	str	r0, [r5, r6]
   2c074:	ldr	r0, [r3, r6]
   2c078:	sdiv	r1, r9, r0
   2c07c:	mls	r1, r1, r0, r9
   2c080:	cmp	r1, #0
   2c084:	bne	2bff8 <ReadCompressedDataSlabN+0x25b4>
   2c088:	ldr	r0, [r7, r6]
   2c08c:	cmp	r0, #0
   2c090:	beq	2c040 <ReadCompressedDataSlabN+0x25fc>
   2c094:	ldr	r1, [r4, r6]
   2c098:	ldr	r2, [fp, #8]
   2c09c:	mul	r3, r1, r0
   2c0a0:	ldr	r0, [sp, #52]	; 0x34
   2c0a4:	add	r1, sp, #56	; 0x38
   2c0a8:	bl	28dc <InflateSkipData>
   2c0ac:	ldr	r0, [r4, r6]
   2c0b0:	ldr	r1, [r7, r6]
   2c0b4:	ldr	r3, [sp, #44]	; 0x2c
   2c0b8:	mla	r9, r1, r0, r9
   2c0bc:	subs	sl, sl, #1
   2c0c0:	add	r6, r6, #4
   2c0c4:	bne	2c04c <ReadCompressedDataSlabN+0x2608>
   2c0c8:	b	2bf00 <ReadCompressedDataSlabN+0x24bc>
   2c0cc:	ldr	r0, [sp, #20]
   2c0d0:	ldr	r4, [r0, r6]
   2c0d4:	cmp	r4, #0
   2c0d8:	beq	2bf00 <ReadCompressedDataSlabN+0x24bc>
   2c0dc:	ldr	r0, [sp, #52]	; 0x34
   2c0e0:	ldr	r2, [fp, #8]
   2c0e4:	add	r1, sp, #56	; 0x38
   2c0e8:	mov	r3, r4
   2c0ec:	bl	28dc <InflateSkipData>
   2c0f0:	add	r9, r4, r9
   2c0f4:	b	2bf00 <ReadCompressedDataSlabN+0x24bc>
   2c0f8:	mov	r1, #0
   2c0fc:	str	r1, [sp, #44]	; 0x2c
   2c100:	ldr	r0, [sp, #52]	; 0x34
   2c104:	ldr	r2, [fp, #8]
   2c108:	ldr	r3, [sp, #44]	; 0x2c
   2c10c:	add	r1, sp, #56	; 0x38
   2c110:	bl	28dc <InflateSkipData>
   2c114:	ldr	r0, [fp, #24]
   2c118:	ldr	r0, [r0]
   2c11c:	cmp	r0, #1
   2c120:	bne	2dff4 <ReadCompressedDataSlabN+0x45b0>
   2c124:	ldr	r0, [sp, #28]
   2c128:	cmp	r0, #1
   2c12c:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2c130:	sub	r0, fp, #112	; 0x70
   2c134:	add	r5, sp, #56	; 0x38
   2c138:	orr	r9, r0, #4
   2c13c:	ldr	r0, [fp, #28]
   2c140:	add	r0, r0, #4
   2c144:	str	r0, [sp, #40]	; 0x28
   2c148:	add	r0, sp, #112	; 0x70
   2c14c:	orr	r0, r0, #4
   2c150:	str	r0, [sp, #24]
   2c154:	add	r0, sl, #4
   2c158:	str	r0, [sp, #20]
   2c15c:	ldr	r0, [fp, #12]
   2c160:	sub	r0, r0, #1
   2c164:	str	r0, [sp, #32]
   2c168:	sub	r0, fp, #72	; 0x48
   2c16c:	orr	r0, r0, #4
   2c170:	str	r0, [sp, #16]
   2c174:	mov	r0, #0
   2c178:	str	r0, [sp, #36]	; 0x24
   2c17c:	ldr	r3, [sl]
   2c180:	cmp	r3, #0
   2c184:	bne	2c1c4 <ReadCompressedDataSlabN+0x2780>
   2c188:	b	2c1fc <ReadCompressedDataSlabN+0x27b8>
   2c18c:	ldr	r0, [fp, #28]
   2c190:	ldr	r1, [sp, #36]	; 0x24
   2c194:	ldr	sl, [fp, #20]
   2c198:	add	r5, sp, #56	; 0x38
   2c19c:	str	r3, [sp, #44]	; 0x2c
   2c1a0:	ldr	r0, [r0]
   2c1a4:	add	r1, r0, r1
   2c1a8:	ldr	r0, [sp, #28]
   2c1ac:	str	r1, [sp, #36]	; 0x24
   2c1b0:	cmp	r1, r0
   2c1b4:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2c1b8:	ldr	r3, [sl]
   2c1bc:	cmp	r3, #0
   2c1c0:	beq	2c1fc <ReadCompressedDataSlabN+0x27b8>
   2c1c4:	ldr	r6, [sp, #52]	; 0x34
   2c1c8:	ldr	r7, [fp, #8]
   2c1cc:	mov	r1, r5
   2c1d0:	mov	r0, r6
   2c1d4:	mov	r2, r7
   2c1d8:	bl	28dc <InflateSkipData>
   2c1dc:	ldr	r1, [sp, #44]	; 0x2c
   2c1e0:	ldr	r0, [sl]
   2c1e4:	add	r8, sp, #112	; 0x70
   2c1e8:	mov	r2, r1
   2c1ec:	add	r2, r0, r1
   2c1f0:	ldr	r1, [sp, #48]	; 0x30
   2c1f4:	mov	r4, r2
   2c1f8:	b	2c214 <ReadCompressedDataSlabN+0x27d0>
   2c1fc:	ldr	r0, [sp, #44]	; 0x2c
   2c200:	ldr	r1, [sp, #48]	; 0x30
   2c204:	ldr	r6, [sp, #52]	; 0x34
   2c208:	ldr	r7, [fp, #8]
   2c20c:	add	r8, sp, #112	; 0x70
   2c210:	mov	r4, r0
   2c214:	ldr	r0, [fp, #28]
   2c218:	mov	r3, r7
   2c21c:	ldr	r0, [r0]
   2c220:	str	r0, [sp]
   2c224:	ldr	r0, [sp, #36]	; 0x24
   2c228:	add	r2, r1, r0, lsl #3
   2c22c:	mov	r0, r6
   2c230:	mov	r1, r5
   2c234:	bl	65fc <ReadCompressedDoubleData>
   2c238:	ldr	r1, [fp, #16]
   2c23c:	ldr	r0, [sl]
   2c240:	mov	r2, r7
   2c244:	ldr	r1, [r1]
   2c248:	sub	r0, r1, r0
   2c24c:	ldr	r1, [fp, #28]
   2c250:	ldr	r1, [r1]
   2c254:	sub	r3, r0, r1
   2c258:	mov	r0, r6
   2c25c:	mov	r1, r5
   2c260:	bl	28dc <InflateSkipData>
   2c264:	ldr	r0, [fp, #16]
   2c268:	ldr	r1, [sl]
   2c26c:	ldr	r0, [r0]
   2c270:	add	r0, r0, r4
   2c274:	sub	r3, r0, r1
   2c278:	ldr	r0, [fp, #12]
   2c27c:	cmp	r0, #2
   2c280:	blt	2c18c <ReadCompressedDataSlabN+0x2748>
   2c284:	ldr	sl, [sp, #32]
   2c288:	ldr	r4, [sp, #24]
   2c28c:	ldr	r5, [sp, #20]
   2c290:	mov	r6, #0
   2c294:	b	2c2ec <ReadCompressedDataSlabN+0x28a8>
   2c298:	mov	r7, r3
   2c29c:	ldr	r2, [r8, r6]
   2c2a0:	ldr	r3, [r5, r6]
   2c2a4:	sub	r0, r0, r1
   2c2a8:	add	r1, sp, #56	; 0x38
   2c2ac:	mla	r3, r3, r2, r0
   2c2b0:	ldr	r0, [sp, #52]	; 0x34
   2c2b4:	ldr	r2, [fp, #8]
   2c2b8:	bl	28dc <InflateSkipData>
   2c2bc:	ldr	r0, [r4, r6]
   2c2c0:	ldr	r2, [r5, r6]
   2c2c4:	sdiv	r1, r7, r0
   2c2c8:	mul	r1, r1, r0
   2c2cc:	add	r0, r0, r7
   2c2d0:	sub	r1, r1, r7
   2c2d4:	add	r0, r0, r1
   2c2d8:	ldr	r1, [r8, r6]
   2c2dc:	mla	r3, r2, r1, r0
   2c2e0:	subs	sl, sl, #1
   2c2e4:	add	r6, r6, #4
   2c2e8:	beq	2c18c <ReadCompressedDataSlabN+0x2748>
   2c2ec:	ldr	r0, [r9, r6]
   2c2f0:	ldr	r1, [sp, #40]	; 0x28
   2c2f4:	add	r0, r0, #1
   2c2f8:	str	r0, [r9, r6]
   2c2fc:	ldr	r1, [r1, r6]
   2c300:	sdiv	r2, r0, r1
   2c304:	mls	r0, r2, r1, r0
   2c308:	cmp	r0, #0
   2c30c:	bne	2c374 <ReadCompressedDataSlabN+0x2930>
   2c310:	mov	r0, #0
   2c314:	str	r0, [r9, r6]
   2c318:	ldr	r0, [r4, r6]
   2c31c:	sdiv	r1, r3, r0
   2c320:	mls	r1, r1, r0, r3
   2c324:	cmp	r1, #0
   2c328:	bne	2c298 <ReadCompressedDataSlabN+0x2854>
   2c32c:	ldr	r0, [r5, r6]
   2c330:	cmp	r0, #0
   2c334:	beq	2c2e0 <ReadCompressedDataSlabN+0x289c>
   2c338:	ldr	r1, [r8, r6]
   2c33c:	mov	r7, r3
   2c340:	ldr	r2, [fp, #8]
   2c344:	mul	r3, r1, r0
   2c348:	ldr	r0, [sp, #52]	; 0x34
   2c34c:	add	r1, sp, #56	; 0x38
   2c350:	bl	28dc <InflateSkipData>
   2c354:	ldr	r0, [r8, r6]
   2c358:	ldr	r1, [r5, r6]
   2c35c:	mov	r3, r7
   2c360:	mla	r3, r1, r0, r7
   2c364:	subs	sl, sl, #1
   2c368:	add	r6, r6, #4
   2c36c:	bne	2c2ec <ReadCompressedDataSlabN+0x28a8>
   2c370:	b	2c18c <ReadCompressedDataSlabN+0x2748>
   2c374:	ldr	r0, [sp, #16]
   2c378:	ldr	r5, [r0, r6]
   2c37c:	cmp	r5, #0
   2c380:	beq	2c18c <ReadCompressedDataSlabN+0x2748>
   2c384:	ldr	r0, [sp, #52]	; 0x34
   2c388:	ldr	r2, [fp, #8]
   2c38c:	mov	r4, r3
   2c390:	add	r1, sp, #56	; 0x38
   2c394:	mov	r3, r5
   2c398:	bl	28dc <InflateSkipData>
   2c39c:	mov	r3, r4
   2c3a0:	add	r3, r5, r4
   2c3a4:	b	2c18c <ReadCompressedDataSlabN+0x2748>
   2c3a8:	ldr	r0, [sp, #32]
   2c3ac:	cmp	r0, #1
   2c3b0:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2c3b4:	sub	r0, fp, #112	; 0x70
   2c3b8:	add	r7, sl, #4
   2c3bc:	add	r1, sp, #56	; 0x38
   2c3c0:	orr	r8, r0, #4
   2c3c4:	ldr	r0, [fp, #28]
   2c3c8:	str	r7, [sp, #36]	; 0x24
   2c3cc:	str	r8, [sp, #20]
   2c3d0:	add	r0, r0, #4
   2c3d4:	str	r0, [sp, #44]	; 0x2c
   2c3d8:	add	r0, sp, #112	; 0x70
   2c3dc:	orr	r3, r0, #4
   2c3e0:	ldr	r0, [fp, #12]
   2c3e4:	str	r3, [sp, #40]	; 0x28
   2c3e8:	sub	r0, r0, #1
   2c3ec:	str	r0, [sp, #16]
   2c3f0:	sub	r0, fp, #72	; 0x48
   2c3f4:	orr	r0, r0, #4
   2c3f8:	str	r0, [sp, #8]
   2c3fc:	ldr	r0, [sp, #48]	; 0x30
   2c400:	add	r0, r0, #4
   2c404:	str	r0, [sp, #12]
   2c408:	mov	r0, #0
   2c40c:	str	r0, [sp, #28]
   2c410:	ldr	r3, [sl]
   2c414:	cmp	r3, #0
   2c418:	bne	2c450 <ReadCompressedDataSlabN+0x2a0c>
   2c41c:	b	2c480 <ReadCompressedDataSlabN+0x2a3c>
   2c420:	ldr	r0, [r5]
   2c424:	ldr	r1, [sp, #28]
   2c428:	ldr	sl, [fp, #20]
   2c42c:	add	r1, r0, r1
   2c430:	ldr	r0, [sp, #32]
   2c434:	str	r1, [sp, #28]
   2c438:	cmp	r1, r0
   2c43c:	add	r1, sp, #56	; 0x38
   2c440:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2c444:	ldr	r3, [sl]
   2c448:	cmp	r3, #0
   2c44c:	beq	2c480 <ReadCompressedDataSlabN+0x2a3c>
   2c450:	ldr	r7, [sp, #52]	; 0x34
   2c454:	ldr	r6, [fp, #8]
   2c458:	mov	r4, sl
   2c45c:	mov	sl, r1
   2c460:	mov	r0, r7
   2c464:	mov	r2, r6
   2c468:	bl	28dc <InflateSkipData>
   2c46c:	ldr	r0, [r4]
   2c470:	ldr	r5, [fp, #28]
   2c474:	add	r9, r0, r9
   2c478:	ldr	r0, [sp, #48]	; 0x30
   2c47c:	b	2c494 <ReadCompressedDataSlabN+0x2a50>
   2c480:	ldr	r0, [sp, #48]	; 0x30
   2c484:	ldr	r7, [sp, #52]	; 0x34
   2c488:	ldr	r5, [fp, #28]
   2c48c:	ldr	r6, [fp, #8]
   2c490:	mov	sl, r1
   2c494:	ldr	r4, [sp, #28]
   2c498:	ldr	r8, [r5]
   2c49c:	mov	r1, #1
   2c4a0:	mov	r3, r6
   2c4a4:	str	r9, [sp, #24]
   2c4a8:	str	r1, [sp]
   2c4ac:	mov	r1, sl
   2c4b0:	add	r2, r0, r4, lsl #2
   2c4b4:	mov	r0, r7
   2c4b8:	bl	b980 <ReadCompressedSingleData>
   2c4bc:	ldr	r1, [fp, #24]
   2c4c0:	cmp	r8, #2
   2c4c4:	blt	2c54c <ReadCompressedDataSlabN+0x2b08>
   2c4c8:	ldr	r0, [sp, #12]
   2c4cc:	ldr	r9, [sp, #24]
   2c4d0:	add	r6, r0, r4, lsl #2
   2c4d4:	mov	r4, #0
   2c4d8:	ldr	r0, [r1]
   2c4dc:	ldr	sl, [fp, #8]
   2c4e0:	ldr	r5, [sp, #52]	; 0x34
   2c4e4:	add	r8, sp, #56	; 0x38
   2c4e8:	mov	r1, r8
   2c4ec:	sub	r3, r0, #1
   2c4f0:	mov	r0, r5
   2c4f4:	mov	r2, sl
   2c4f8:	bl	28dc <InflateSkipData>
   2c4fc:	ldr	r0, [fp, #28]
   2c500:	ldr	r3, [fp, #8]
   2c504:	mov	r1, r8
   2c508:	mov	r2, r6
   2c50c:	ldr	sl, [r0]
   2c510:	ldr	r0, [fp, #24]
   2c514:	ldr	r7, [r0]
   2c518:	mov	r0, #1
   2c51c:	str	r0, [sp]
   2c520:	mov	r0, r5
   2c524:	bl	b980 <ReadCompressedSingleData>
   2c528:	ldr	r1, [fp, #24]
   2c52c:	ldr	r5, [fp, #28]
   2c530:	add	r4, r4, #1
   2c534:	sub	r0, sl, #1
   2c538:	add	r9, r7, r9
   2c53c:	add	r6, r6, #4
   2c540:	cmp	r4, r0
   2c544:	blt	2c4d8 <ReadCompressedDataSlabN+0x2a94>
   2c548:	b	2c550 <ReadCompressedDataSlabN+0x2b0c>
   2c54c:	ldr	r9, [sp, #24]
   2c550:	ldr	r0, [fp, #16]
   2c554:	ldr	r2, [r5]
   2c558:	ldr	r1, [r1]
   2c55c:	ldr	r0, [r0]
   2c560:	sub	r2, r2, #1
   2c564:	mls	r0, r2, r1, r0
   2c568:	ldr	r1, [fp, #20]
   2c56c:	ldr	r2, [fp, #8]
   2c570:	ldr	r1, [r1]
   2c574:	sub	r4, r0, r1
   2c578:	ldr	r0, [sp, #52]	; 0x34
   2c57c:	add	r1, sp, #56	; 0x38
   2c580:	sub	r3, r4, #1
   2c584:	bl	28dc <InflateSkipData>
   2c588:	ldr	r0, [fp, #12]
   2c58c:	add	r9, r4, r9
   2c590:	cmp	r0, #2
   2c594:	blt	2c420 <ReadCompressedDataSlabN+0x29dc>
   2c598:	ldr	sl, [sp, #16]
   2c59c:	ldr	r8, [sp, #20]
   2c5a0:	ldr	r3, [sp, #40]	; 0x28
   2c5a4:	ldr	r7, [sp, #36]	; 0x24
   2c5a8:	mov	r6, #0
   2c5ac:	b	2c610 <ReadCompressedDataSlabN+0x2bcc>
   2c5b0:	add	r2, sp, #112	; 0x70
   2c5b4:	ldr	r3, [r7, r6]
   2c5b8:	sub	r0, r0, r1
   2c5bc:	add	r1, sp, #56	; 0x38
   2c5c0:	mov	r4, r2
   2c5c4:	ldr	r2, [r2, r6]
   2c5c8:	mla	r3, r3, r2, r0
   2c5cc:	ldr	r0, [sp, #52]	; 0x34
   2c5d0:	ldr	r2, [fp, #8]
   2c5d4:	bl	28dc <InflateSkipData>
   2c5d8:	ldr	r3, [sp, #40]	; 0x28
   2c5dc:	ldr	r7, [sp, #36]	; 0x24
   2c5e0:	ldr	r0, [r3, r6]
   2c5e4:	ldr	r2, [r7, r6]
   2c5e8:	sdiv	r1, r9, r0
   2c5ec:	mul	r1, r1, r0
   2c5f0:	add	r0, r0, r9
   2c5f4:	sub	r1, r1, r9
   2c5f8:	add	r0, r0, r1
   2c5fc:	ldr	r1, [r4, r6]
   2c600:	mla	r9, r2, r1, r0
   2c604:	subs	sl, sl, #1
   2c608:	add	r6, r6, #4
   2c60c:	beq	2c420 <ReadCompressedDataSlabN+0x29dc>
   2c610:	ldr	r0, [r8, r6]
   2c614:	ldr	r1, [sp, #44]	; 0x2c
   2c618:	add	r0, r0, #1
   2c61c:	str	r0, [r8, r6]
   2c620:	ldr	r1, [r1, r6]
   2c624:	sdiv	r2, r0, r1
   2c628:	mls	r0, r2, r1, r0
   2c62c:	cmp	r0, #0
   2c630:	bne	2c6a0 <ReadCompressedDataSlabN+0x2c5c>
   2c634:	mov	r0, #0
   2c638:	str	r0, [r8, r6]
   2c63c:	ldr	r0, [r3, r6]
   2c640:	sdiv	r1, r9, r0
   2c644:	mls	r1, r1, r0, r9
   2c648:	cmp	r1, #0
   2c64c:	bne	2c5b0 <ReadCompressedDataSlabN+0x2b6c>
   2c650:	ldr	r0, [r7, r6]
   2c654:	cmp	r0, #0
   2c658:	beq	2c604 <ReadCompressedDataSlabN+0x2bc0>
   2c65c:	add	r1, sp, #112	; 0x70
   2c660:	ldr	r2, [fp, #8]
   2c664:	mov	r4, r1
   2c668:	ldr	r1, [r1, r6]
   2c66c:	mul	r3, r1, r0
   2c670:	ldr	r0, [sp, #52]	; 0x34
   2c674:	add	r1, sp, #56	; 0x38
   2c678:	bl	28dc <InflateSkipData>
   2c67c:	ldr	r7, [sp, #36]	; 0x24
   2c680:	ldr	r0, [r4, r6]
   2c684:	ldr	r3, [sp, #40]	; 0x28
   2c688:	ldr	r1, [r7, r6]
   2c68c:	mla	r9, r1, r0, r9
   2c690:	subs	sl, sl, #1
   2c694:	add	r6, r6, #4
   2c698:	bne	2c610 <ReadCompressedDataSlabN+0x2bcc>
   2c69c:	b	2c420 <ReadCompressedDataSlabN+0x29dc>
   2c6a0:	ldr	r0, [sp, #8]
   2c6a4:	ldr	r6, [r0, r6]
   2c6a8:	cmp	r6, #0
   2c6ac:	beq	2c420 <ReadCompressedDataSlabN+0x29dc>
   2c6b0:	ldr	r0, [sp, #52]	; 0x34
   2c6b4:	ldr	r2, [fp, #8]
   2c6b8:	add	r1, sp, #56	; 0x38
   2c6bc:	mov	r3, r6
   2c6c0:	bl	28dc <InflateSkipData>
   2c6c4:	add	r9, r6, r9
   2c6c8:	b	2c420 <ReadCompressedDataSlabN+0x29dc>
   2c6cc:	ldr	r0, [sp, #24]
   2c6d0:	cmp	r0, #1
   2c6d4:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2c6d8:	sub	r0, fp, #112	; 0x70
   2c6dc:	add	r5, sl, #4
   2c6e0:	mov	r9, #1
   2c6e4:	add	r7, sp, #56	; 0x38
   2c6e8:	mov	r4, #0
   2c6ec:	orr	r8, r0, #4
   2c6f0:	ldr	r0, [fp, #28]
   2c6f4:	str	r5, [sp, #32]
   2c6f8:	str	r8, [sp, #16]
   2c6fc:	add	r0, r0, #4
   2c700:	str	r0, [sp, #40]	; 0x28
   2c704:	add	r0, sp, #112	; 0x70
   2c708:	orr	r3, r0, #4
   2c70c:	ldr	r0, [fp, #12]
   2c710:	str	r3, [sp, #36]	; 0x24
   2c714:	sub	r0, r0, #1
   2c718:	str	r0, [sp, #12]
   2c71c:	sub	r0, fp, #72	; 0x48
   2c720:	orr	r0, r0, #4
   2c724:	str	r0, [sp, #4]
   2c728:	ldr	r0, [sp, #48]	; 0x30
   2c72c:	add	r0, r0, #1
   2c730:	str	r0, [sp, #8]
   2c734:	ldr	r3, [sl]
   2c738:	cmp	r3, #0
   2c73c:	bne	2c77c <ReadCompressedDataSlabN+0x2d38>
   2c740:	b	2c7ac <ReadCompressedDataSlabN+0x2d68>
   2c744:	ldr	r0, [fp, #28]
   2c748:	ldr	r4, [sp, #20]
   2c74c:	ldr	sl, [fp, #20]
   2c750:	str	r7, [sp, #28]
   2c754:	mov	r9, #1
   2c758:	add	r7, sp, #56	; 0x38
   2c75c:	ldr	r0, [r0]
   2c760:	add	r4, r0, r4
   2c764:	ldr	r0, [sp, #24]
   2c768:	cmp	r4, r0
   2c76c:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2c770:	ldr	r3, [sl]
   2c774:	cmp	r3, #0
   2c778:	beq	2c7ac <ReadCompressedDataSlabN+0x2d68>
   2c77c:	ldr	r5, [sp, #52]	; 0x34
   2c780:	ldr	r6, [fp, #8]
   2c784:	mov	r1, r7
   2c788:	mov	r0, r5
   2c78c:	mov	r2, r6
   2c790:	bl	28dc <InflateSkipData>
   2c794:	ldr	r0, [sl]
   2c798:	ldr	r1, [sp, #28]
   2c79c:	add	r1, r0, r1
   2c7a0:	ldr	r0, [sp, #48]	; 0x30
   2c7a4:	str	r1, [sp, #28]
   2c7a8:	b	2c7b8 <ReadCompressedDataSlabN+0x2d74>
   2c7ac:	ldr	r0, [sp, #48]	; 0x30
   2c7b0:	ldr	r5, [sp, #52]	; 0x34
   2c7b4:	ldr	r6, [fp, #8]
   2c7b8:	ldr	r1, [fp, #28]
   2c7bc:	add	r2, r0, r4
   2c7c0:	mov	r0, r5
   2c7c4:	mov	r3, r6
   2c7c8:	ldr	r8, [r1]
   2c7cc:	mov	r1, r7
   2c7d0:	str	r9, [sp]
   2c7d4:	bl	21db8 <ReadCompressedInt8Data>
   2c7d8:	cmp	r8, #2
   2c7dc:	str	r4, [sp, #20]
   2c7e0:	blt	2c868 <ReadCompressedDataSlabN+0x2e24>
   2c7e4:	ldr	r0, [sp, #8]
   2c7e8:	ldr	r7, [sp, #28]
   2c7ec:	add	r0, r0, r4
   2c7f0:	mov	r4, #0
   2c7f4:	str	r0, [sp, #44]	; 0x2c
   2c7f8:	ldr	r0, [fp, #24]
   2c7fc:	ldr	r9, [fp, #8]
   2c800:	ldr	sl, [sp, #52]	; 0x34
   2c804:	add	r8, sp, #56	; 0x38
   2c808:	mov	r1, r8
   2c80c:	mov	r6, r0
   2c810:	ldr	r0, [r0]
   2c814:	mov	r2, r9
   2c818:	sub	r3, r0, #1
   2c81c:	mov	r0, sl
   2c820:	bl	28dc <InflateSkipData>
   2c824:	ldr	r0, [fp, #28]
   2c828:	ldr	r6, [r6]
   2c82c:	mov	r1, r8
   2c830:	mov	r3, r9
   2c834:	ldr	r5, [r0]
   2c838:	mov	r0, #1
   2c83c:	str	r0, [sp]
   2c840:	ldr	r0, [sp, #44]	; 0x2c
   2c844:	add	r2, r0, r4
   2c848:	mov	r0, sl
   2c84c:	bl	21db8 <ReadCompressedInt8Data>
   2c850:	add	r4, r4, #1
   2c854:	sub	r0, r5, #1
   2c858:	add	r7, r6, r7
   2c85c:	cmp	r4, r0
   2c860:	blt	2c7f8 <ReadCompressedDataSlabN+0x2db4>
   2c864:	b	2c86c <ReadCompressedDataSlabN+0x2e28>
   2c868:	ldr	r7, [sp, #28]
   2c86c:	ldr	r2, [fp, #28]
   2c870:	ldr	r0, [fp, #16]
   2c874:	ldr	r1, [fp, #24]
   2c878:	ldr	r9, [fp, #8]
   2c87c:	ldr	r2, [r2]
   2c880:	ldr	r0, [r0]
   2c884:	ldr	r1, [r1]
   2c888:	sub	r2, r2, #1
   2c88c:	mls	r0, r2, r1, r0
   2c890:	ldr	r1, [fp, #20]
   2c894:	mov	r2, r9
   2c898:	ldr	r1, [r1]
   2c89c:	sub	r4, r0, r1
   2c8a0:	ldr	r0, [sp, #52]	; 0x34
   2c8a4:	add	r1, sp, #56	; 0x38
   2c8a8:	sub	r3, r4, #1
   2c8ac:	bl	28dc <InflateSkipData>
   2c8b0:	ldr	r0, [fp, #12]
   2c8b4:	add	r7, r4, r7
   2c8b8:	cmp	r0, #2
   2c8bc:	blt	2c744 <ReadCompressedDataSlabN+0x2d00>
   2c8c0:	ldr	r6, [sp, #12]
   2c8c4:	ldr	r8, [sp, #16]
   2c8c8:	ldr	r3, [sp, #36]	; 0x24
   2c8cc:	ldr	r5, [sp, #32]
   2c8d0:	mov	sl, #0
   2c8d4:	b	2c938 <ReadCompressedDataSlabN+0x2ef4>
   2c8d8:	add	r2, sp, #112	; 0x70
   2c8dc:	ldr	r3, [r5, sl]
   2c8e0:	sub	r0, r0, r1
   2c8e4:	add	r1, sp, #56	; 0x38
   2c8e8:	mov	r4, r2
   2c8ec:	ldr	r2, [r2, sl]
   2c8f0:	mla	r3, r3, r2, r0
   2c8f4:	ldr	r0, [sp, #52]	; 0x34
   2c8f8:	mov	r2, r9
   2c8fc:	bl	28dc <InflateSkipData>
   2c900:	ldr	r3, [sp, #36]	; 0x24
   2c904:	ldr	r5, [sp, #32]
   2c908:	ldr	r0, [r3, sl]
   2c90c:	ldr	r2, [r5, sl]
   2c910:	sdiv	r1, r7, r0
   2c914:	mul	r1, r1, r0
   2c918:	add	r0, r0, r7
   2c91c:	sub	r1, r1, r7
   2c920:	add	r0, r0, r1
   2c924:	ldr	r1, [r4, sl]
   2c928:	mla	r7, r2, r1, r0
   2c92c:	subs	r6, r6, #1
   2c930:	add	sl, sl, #4
   2c934:	beq	2c744 <ReadCompressedDataSlabN+0x2d00>
   2c938:	ldr	r0, [r8, sl]
   2c93c:	ldr	r1, [sp, #40]	; 0x28
   2c940:	add	r0, r0, #1
   2c944:	str	r0, [r8, sl]
   2c948:	ldr	r1, [r1, sl]
   2c94c:	sdiv	r2, r0, r1
   2c950:	mls	r0, r2, r1, r0
   2c954:	cmp	r0, #0
   2c958:	bne	2c9c8 <ReadCompressedDataSlabN+0x2f84>
   2c95c:	mov	r0, #0
   2c960:	str	r0, [r8, sl]
   2c964:	ldr	r0, [r3, sl]
   2c968:	sdiv	r1, r7, r0
   2c96c:	mls	r1, r1, r0, r7
   2c970:	cmp	r1, #0
   2c974:	bne	2c8d8 <ReadCompressedDataSlabN+0x2e94>
   2c978:	ldr	r0, [r5, sl]
   2c97c:	cmp	r0, #0
   2c980:	beq	2c92c <ReadCompressedDataSlabN+0x2ee8>
   2c984:	add	r1, sp, #112	; 0x70
   2c988:	mov	r2, r9
   2c98c:	mov	r4, r1
   2c990:	ldr	r1, [r1, sl]
   2c994:	mul	r3, r1, r0
   2c998:	ldr	r0, [sp, #52]	; 0x34
   2c99c:	add	r1, sp, #56	; 0x38
   2c9a0:	bl	28dc <InflateSkipData>
   2c9a4:	ldr	r5, [sp, #32]
   2c9a8:	ldr	r0, [r4, sl]
   2c9ac:	ldr	r3, [sp, #36]	; 0x24
   2c9b0:	ldr	r1, [r5, sl]
   2c9b4:	mla	r7, r1, r0, r7
   2c9b8:	subs	r6, r6, #1
   2c9bc:	add	sl, sl, #4
   2c9c0:	bne	2c938 <ReadCompressedDataSlabN+0x2ef4>
   2c9c4:	b	2c744 <ReadCompressedDataSlabN+0x2d00>
   2c9c8:	ldr	r0, [sp, #4]
   2c9cc:	ldr	r4, [r0, sl]
   2c9d0:	cmp	r4, #0
   2c9d4:	beq	2c744 <ReadCompressedDataSlabN+0x2d00>
   2c9d8:	ldr	r0, [sp, #52]	; 0x34
   2c9dc:	add	r1, sp, #56	; 0x38
   2c9e0:	mov	r2, r9
   2c9e4:	mov	r3, r4
   2c9e8:	bl	28dc <InflateSkipData>
   2c9ec:	add	r7, r4, r7
   2c9f0:	b	2c744 <ReadCompressedDataSlabN+0x2d00>
   2c9f4:	ldr	r0, [sp, #24]
   2c9f8:	cmp	r0, #1
   2c9fc:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2ca00:	sub	r0, fp, #112	; 0x70
   2ca04:	add	r5, sl, #4
   2ca08:	mov	r9, #1
   2ca0c:	add	r7, sp, #56	; 0x38
   2ca10:	mov	r4, #0
   2ca14:	orr	r8, r0, #4
   2ca18:	ldr	r0, [fp, #28]
   2ca1c:	str	r5, [sp, #32]
   2ca20:	str	r8, [sp, #16]
   2ca24:	add	r0, r0, #4
   2ca28:	str	r0, [sp, #40]	; 0x28
   2ca2c:	add	r0, sp, #112	; 0x70
   2ca30:	orr	r3, r0, #4
   2ca34:	ldr	r0, [fp, #12]
   2ca38:	str	r3, [sp, #36]	; 0x24
   2ca3c:	sub	r0, r0, #1
   2ca40:	str	r0, [sp, #12]
   2ca44:	sub	r0, fp, #72	; 0x48
   2ca48:	orr	r0, r0, #4
   2ca4c:	str	r0, [sp, #4]
   2ca50:	ldr	r0, [sp, #48]	; 0x30
   2ca54:	add	r0, r0, #1
   2ca58:	str	r0, [sp, #8]
   2ca5c:	ldr	r3, [sl]
   2ca60:	cmp	r3, #0
   2ca64:	bne	2caa4 <ReadCompressedDataSlabN+0x3060>
   2ca68:	b	2cad4 <ReadCompressedDataSlabN+0x3090>
   2ca6c:	ldr	r0, [fp, #28]
   2ca70:	ldr	r4, [sp, #20]
   2ca74:	ldr	sl, [fp, #20]
   2ca78:	str	r7, [sp, #28]
   2ca7c:	mov	r9, #1
   2ca80:	add	r7, sp, #56	; 0x38
   2ca84:	ldr	r0, [r0]
   2ca88:	add	r4, r0, r4
   2ca8c:	ldr	r0, [sp, #24]
   2ca90:	cmp	r4, r0
   2ca94:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2ca98:	ldr	r3, [sl]
   2ca9c:	cmp	r3, #0
   2caa0:	beq	2cad4 <ReadCompressedDataSlabN+0x3090>
   2caa4:	ldr	r5, [sp, #52]	; 0x34
   2caa8:	ldr	r6, [fp, #8]
   2caac:	mov	r1, r7
   2cab0:	mov	r0, r5
   2cab4:	mov	r2, r6
   2cab8:	bl	28dc <InflateSkipData>
   2cabc:	ldr	r0, [sl]
   2cac0:	ldr	r1, [sp, #28]
   2cac4:	add	r1, r0, r1
   2cac8:	ldr	r0, [sp, #48]	; 0x30
   2cacc:	str	r1, [sp, #28]
   2cad0:	b	2cae0 <ReadCompressedDataSlabN+0x309c>
   2cad4:	ldr	r0, [sp, #48]	; 0x30
   2cad8:	ldr	r5, [sp, #52]	; 0x34
   2cadc:	ldr	r6, [fp, #8]
   2cae0:	ldr	r1, [fp, #28]
   2cae4:	add	r2, r0, r4
   2cae8:	mov	r0, r5
   2caec:	mov	r3, r6
   2caf0:	ldr	r8, [r1]
   2caf4:	mov	r1, r7
   2caf8:	str	r9, [sp]
   2cafc:	bl	24d48 <ReadCompressedUInt8Data>
   2cb00:	cmp	r8, #2
   2cb04:	str	r4, [sp, #20]
   2cb08:	blt	2cb90 <ReadCompressedDataSlabN+0x314c>
   2cb0c:	ldr	r0, [sp, #8]
   2cb10:	ldr	r7, [sp, #28]
   2cb14:	add	r0, r0, r4
   2cb18:	mov	r4, #0
   2cb1c:	str	r0, [sp, #44]	; 0x2c
   2cb20:	ldr	r0, [fp, #24]
   2cb24:	ldr	r9, [fp, #8]
   2cb28:	ldr	sl, [sp, #52]	; 0x34
   2cb2c:	add	r8, sp, #56	; 0x38
   2cb30:	mov	r1, r8
   2cb34:	mov	r6, r0
   2cb38:	ldr	r0, [r0]
   2cb3c:	mov	r2, r9
   2cb40:	sub	r3, r0, #1
   2cb44:	mov	r0, sl
   2cb48:	bl	28dc <InflateSkipData>
   2cb4c:	ldr	r0, [fp, #28]
   2cb50:	ldr	r6, [r6]
   2cb54:	mov	r1, r8
   2cb58:	mov	r3, r9
   2cb5c:	ldr	r5, [r0]
   2cb60:	mov	r0, #1
   2cb64:	str	r0, [sp]
   2cb68:	ldr	r0, [sp, #44]	; 0x2c
   2cb6c:	add	r2, r0, r4
   2cb70:	mov	r0, sl
   2cb74:	bl	24d48 <ReadCompressedUInt8Data>
   2cb78:	add	r4, r4, #1
   2cb7c:	sub	r0, r5, #1
   2cb80:	add	r7, r6, r7
   2cb84:	cmp	r4, r0
   2cb88:	blt	2cb20 <ReadCompressedDataSlabN+0x30dc>
   2cb8c:	b	2cb94 <ReadCompressedDataSlabN+0x3150>
   2cb90:	ldr	r7, [sp, #28]
   2cb94:	ldr	r2, [fp, #28]
   2cb98:	ldr	r0, [fp, #16]
   2cb9c:	ldr	r1, [fp, #24]
   2cba0:	ldr	r9, [fp, #8]
   2cba4:	ldr	r2, [r2]
   2cba8:	ldr	r0, [r0]
   2cbac:	ldr	r1, [r1]
   2cbb0:	sub	r2, r2, #1
   2cbb4:	mls	r0, r2, r1, r0
   2cbb8:	ldr	r1, [fp, #20]
   2cbbc:	mov	r2, r9
   2cbc0:	ldr	r1, [r1]
   2cbc4:	sub	r4, r0, r1
   2cbc8:	ldr	r0, [sp, #52]	; 0x34
   2cbcc:	add	r1, sp, #56	; 0x38
   2cbd0:	sub	r3, r4, #1
   2cbd4:	bl	28dc <InflateSkipData>
   2cbd8:	ldr	r0, [fp, #12]
   2cbdc:	add	r7, r4, r7
   2cbe0:	cmp	r0, #2
   2cbe4:	blt	2ca6c <ReadCompressedDataSlabN+0x3028>
   2cbe8:	ldr	r6, [sp, #12]
   2cbec:	ldr	r8, [sp, #16]
   2cbf0:	ldr	r3, [sp, #36]	; 0x24
   2cbf4:	ldr	r5, [sp, #32]
   2cbf8:	mov	sl, #0
   2cbfc:	b	2cc60 <ReadCompressedDataSlabN+0x321c>
   2cc00:	add	r2, sp, #112	; 0x70
   2cc04:	ldr	r3, [r5, sl]
   2cc08:	sub	r0, r0, r1
   2cc0c:	add	r1, sp, #56	; 0x38
   2cc10:	mov	r4, r2
   2cc14:	ldr	r2, [r2, sl]
   2cc18:	mla	r3, r3, r2, r0
   2cc1c:	ldr	r0, [sp, #52]	; 0x34
   2cc20:	mov	r2, r9
   2cc24:	bl	28dc <InflateSkipData>
   2cc28:	ldr	r3, [sp, #36]	; 0x24
   2cc2c:	ldr	r5, [sp, #32]
   2cc30:	ldr	r0, [r3, sl]
   2cc34:	ldr	r2, [r5, sl]
   2cc38:	sdiv	r1, r7, r0
   2cc3c:	mul	r1, r1, r0
   2cc40:	add	r0, r0, r7
   2cc44:	sub	r1, r1, r7
   2cc48:	add	r0, r0, r1
   2cc4c:	ldr	r1, [r4, sl]
   2cc50:	mla	r7, r2, r1, r0
   2cc54:	subs	r6, r6, #1
   2cc58:	add	sl, sl, #4
   2cc5c:	beq	2ca6c <ReadCompressedDataSlabN+0x3028>
   2cc60:	ldr	r0, [r8, sl]
   2cc64:	ldr	r1, [sp, #40]	; 0x28
   2cc68:	add	r0, r0, #1
   2cc6c:	str	r0, [r8, sl]
   2cc70:	ldr	r1, [r1, sl]
   2cc74:	sdiv	r2, r0, r1
   2cc78:	mls	r0, r2, r1, r0
   2cc7c:	cmp	r0, #0
   2cc80:	bne	2ccf0 <ReadCompressedDataSlabN+0x32ac>
   2cc84:	mov	r0, #0
   2cc88:	str	r0, [r8, sl]
   2cc8c:	ldr	r0, [r3, sl]
   2cc90:	sdiv	r1, r7, r0
   2cc94:	mls	r1, r1, r0, r7
   2cc98:	cmp	r1, #0
   2cc9c:	bne	2cc00 <ReadCompressedDataSlabN+0x31bc>
   2cca0:	ldr	r0, [r5, sl]
   2cca4:	cmp	r0, #0
   2cca8:	beq	2cc54 <ReadCompressedDataSlabN+0x3210>
   2ccac:	add	r1, sp, #112	; 0x70
   2ccb0:	mov	r2, r9
   2ccb4:	mov	r4, r1
   2ccb8:	ldr	r1, [r1, sl]
   2ccbc:	mul	r3, r1, r0
   2ccc0:	ldr	r0, [sp, #52]	; 0x34
   2ccc4:	add	r1, sp, #56	; 0x38
   2ccc8:	bl	28dc <InflateSkipData>
   2cccc:	ldr	r5, [sp, #32]
   2ccd0:	ldr	r0, [r4, sl]
   2ccd4:	ldr	r3, [sp, #36]	; 0x24
   2ccd8:	ldr	r1, [r5, sl]
   2ccdc:	mla	r7, r1, r0, r7
   2cce0:	subs	r6, r6, #1
   2cce4:	add	sl, sl, #4
   2cce8:	bne	2cc60 <ReadCompressedDataSlabN+0x321c>
   2ccec:	b	2ca6c <ReadCompressedDataSlabN+0x3028>
   2ccf0:	ldr	r0, [sp, #4]
   2ccf4:	ldr	r4, [r0, sl]
   2ccf8:	cmp	r4, #0
   2ccfc:	beq	2ca6c <ReadCompressedDataSlabN+0x3028>
   2cd00:	ldr	r0, [sp, #52]	; 0x34
   2cd04:	add	r1, sp, #56	; 0x38
   2cd08:	mov	r2, r9
   2cd0c:	mov	r3, r4
   2cd10:	bl	28dc <InflateSkipData>
   2cd14:	add	r7, r4, r7
   2cd18:	b	2ca6c <ReadCompressedDataSlabN+0x3028>
   2cd1c:	ldr	r0, [sp, #32]
   2cd20:	cmp	r0, #1
   2cd24:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2cd28:	sub	r0, fp, #112	; 0x70
   2cd2c:	add	r7, sl, #4
   2cd30:	add	r1, sp, #56	; 0x38
   2cd34:	orr	r8, r0, #4
   2cd38:	ldr	r0, [fp, #28]
   2cd3c:	str	r7, [sp, #36]	; 0x24
   2cd40:	str	r8, [sp, #20]
   2cd44:	add	r0, r0, #4
   2cd48:	str	r0, [sp, #44]	; 0x2c
   2cd4c:	add	r0, sp, #112	; 0x70
   2cd50:	orr	r3, r0, #4
   2cd54:	ldr	r0, [fp, #12]
   2cd58:	str	r3, [sp, #40]	; 0x28
   2cd5c:	sub	r0, r0, #1
   2cd60:	str	r0, [sp, #16]
   2cd64:	sub	r0, fp, #72	; 0x48
   2cd68:	orr	r0, r0, #4
   2cd6c:	str	r0, [sp, #8]
   2cd70:	ldr	r0, [sp, #48]	; 0x30
   2cd74:	add	r0, r0, #2
   2cd78:	str	r0, [sp, #12]
   2cd7c:	mov	r0, #0
   2cd80:	str	r0, [sp, #28]
   2cd84:	ldr	r3, [sl]
   2cd88:	cmp	r3, #0
   2cd8c:	bne	2cdc4 <ReadCompressedDataSlabN+0x3380>
   2cd90:	b	2cdf4 <ReadCompressedDataSlabN+0x33b0>
   2cd94:	ldr	r0, [r5]
   2cd98:	ldr	r1, [sp, #28]
   2cd9c:	ldr	sl, [fp, #20]
   2cda0:	add	r1, r0, r1
   2cda4:	ldr	r0, [sp, #32]
   2cda8:	str	r1, [sp, #28]
   2cdac:	cmp	r1, r0
   2cdb0:	add	r1, sp, #56	; 0x38
   2cdb4:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2cdb8:	ldr	r3, [sl]
   2cdbc:	cmp	r3, #0
   2cdc0:	beq	2cdf4 <ReadCompressedDataSlabN+0x33b0>
   2cdc4:	ldr	r7, [sp, #52]	; 0x34
   2cdc8:	ldr	r6, [fp, #8]
   2cdcc:	mov	r4, sl
   2cdd0:	mov	sl, r1
   2cdd4:	mov	r0, r7
   2cdd8:	mov	r2, r6
   2cddc:	bl	28dc <InflateSkipData>
   2cde0:	ldr	r0, [r4]
   2cde4:	ldr	r5, [fp, #28]
   2cde8:	add	r9, r0, r9
   2cdec:	ldr	r0, [sp, #48]	; 0x30
   2cdf0:	b	2ce08 <ReadCompressedDataSlabN+0x33c4>
   2cdf4:	ldr	r0, [sp, #48]	; 0x30
   2cdf8:	ldr	r7, [sp, #52]	; 0x34
   2cdfc:	ldr	r5, [fp, #28]
   2ce00:	ldr	r6, [fp, #8]
   2ce04:	mov	sl, r1
   2ce08:	ldr	r4, [sp, #28]
   2ce0c:	ldr	r8, [r5]
   2ce10:	mov	r1, #1
   2ce14:	mov	r3, r6
   2ce18:	str	r9, [sp, #24]
   2ce1c:	str	r1, [sp]
   2ce20:	mov	r1, sl
   2ce24:	add	r2, r0, r4, lsl #1
   2ce28:	mov	r0, r7
   2ce2c:	bl	1bde4 <ReadCompressedInt16Data>
   2ce30:	ldr	r1, [fp, #24]
   2ce34:	cmp	r8, #2
   2ce38:	blt	2cec0 <ReadCompressedDataSlabN+0x347c>
   2ce3c:	ldr	r0, [sp, #12]
   2ce40:	ldr	r9, [sp, #24]
   2ce44:	add	r6, r0, r4, lsl #1
   2ce48:	mov	r4, #0
   2ce4c:	ldr	r0, [r1]
   2ce50:	ldr	sl, [fp, #8]
   2ce54:	ldr	r5, [sp, #52]	; 0x34
   2ce58:	add	r8, sp, #56	; 0x38
   2ce5c:	mov	r1, r8
   2ce60:	sub	r3, r0, #1
   2ce64:	mov	r0, r5
   2ce68:	mov	r2, sl
   2ce6c:	bl	28dc <InflateSkipData>
   2ce70:	ldr	r0, [fp, #28]
   2ce74:	ldr	r3, [fp, #8]
   2ce78:	mov	r1, r8
   2ce7c:	mov	r2, r6
   2ce80:	ldr	sl, [r0]
   2ce84:	ldr	r0, [fp, #24]
   2ce88:	ldr	r7, [r0]
   2ce8c:	mov	r0, #1
   2ce90:	str	r0, [sp]
   2ce94:	mov	r0, r5
   2ce98:	bl	1bde4 <ReadCompressedInt16Data>
   2ce9c:	ldr	r1, [fp, #24]
   2cea0:	ldr	r5, [fp, #28]
   2cea4:	add	r4, r4, #1
   2cea8:	sub	r0, sl, #1
   2ceac:	add	r9, r7, r9
   2ceb0:	add	r6, r6, #2
   2ceb4:	cmp	r4, r0
   2ceb8:	blt	2ce4c <ReadCompressedDataSlabN+0x3408>
   2cebc:	b	2cec4 <ReadCompressedDataSlabN+0x3480>
   2cec0:	ldr	r9, [sp, #24]
   2cec4:	ldr	r0, [fp, #16]
   2cec8:	ldr	r2, [r5]
   2cecc:	ldr	r1, [r1]
   2ced0:	ldr	r0, [r0]
   2ced4:	sub	r2, r2, #1
   2ced8:	mls	r0, r2, r1, r0
   2cedc:	ldr	r1, [fp, #20]
   2cee0:	ldr	r2, [fp, #8]
   2cee4:	ldr	r1, [r1]
   2cee8:	sub	r4, r0, r1
   2ceec:	ldr	r0, [sp, #52]	; 0x34
   2cef0:	add	r1, sp, #56	; 0x38
   2cef4:	sub	r3, r4, #1
   2cef8:	bl	28dc <InflateSkipData>
   2cefc:	ldr	r0, [fp, #12]
   2cf00:	add	r9, r4, r9
   2cf04:	cmp	r0, #2
   2cf08:	blt	2cd94 <ReadCompressedDataSlabN+0x3350>
   2cf0c:	ldr	sl, [sp, #16]
   2cf10:	ldr	r8, [sp, #20]
   2cf14:	ldr	r3, [sp, #40]	; 0x28
   2cf18:	ldr	r7, [sp, #36]	; 0x24
   2cf1c:	mov	r6, #0
   2cf20:	b	2cf84 <ReadCompressedDataSlabN+0x3540>
   2cf24:	add	r2, sp, #112	; 0x70
   2cf28:	ldr	r3, [r7, r6]
   2cf2c:	sub	r0, r0, r1
   2cf30:	add	r1, sp, #56	; 0x38
   2cf34:	mov	r4, r2
   2cf38:	ldr	r2, [r2, r6]
   2cf3c:	mla	r3, r3, r2, r0
   2cf40:	ldr	r0, [sp, #52]	; 0x34
   2cf44:	ldr	r2, [fp, #8]
   2cf48:	bl	28dc <InflateSkipData>
   2cf4c:	ldr	r3, [sp, #40]	; 0x28
   2cf50:	ldr	r7, [sp, #36]	; 0x24
   2cf54:	ldr	r0, [r3, r6]
   2cf58:	ldr	r2, [r7, r6]
   2cf5c:	sdiv	r1, r9, r0
   2cf60:	mul	r1, r1, r0
   2cf64:	add	r0, r0, r9
   2cf68:	sub	r1, r1, r9
   2cf6c:	add	r0, r0, r1
   2cf70:	ldr	r1, [r4, r6]
   2cf74:	mla	r9, r2, r1, r0
   2cf78:	subs	sl, sl, #1
   2cf7c:	add	r6, r6, #4
   2cf80:	beq	2cd94 <ReadCompressedDataSlabN+0x3350>
   2cf84:	ldr	r0, [r8, r6]
   2cf88:	ldr	r1, [sp, #44]	; 0x2c
   2cf8c:	add	r0, r0, #1
   2cf90:	str	r0, [r8, r6]
   2cf94:	ldr	r1, [r1, r6]
   2cf98:	sdiv	r2, r0, r1
   2cf9c:	mls	r0, r2, r1, r0
   2cfa0:	cmp	r0, #0
   2cfa4:	bne	2d014 <ReadCompressedDataSlabN+0x35d0>
   2cfa8:	mov	r0, #0
   2cfac:	str	r0, [r8, r6]
   2cfb0:	ldr	r0, [r3, r6]
   2cfb4:	sdiv	r1, r9, r0
   2cfb8:	mls	r1, r1, r0, r9
   2cfbc:	cmp	r1, #0
   2cfc0:	bne	2cf24 <ReadCompressedDataSlabN+0x34e0>
   2cfc4:	ldr	r0, [r7, r6]
   2cfc8:	cmp	r0, #0
   2cfcc:	beq	2cf78 <ReadCompressedDataSlabN+0x3534>
   2cfd0:	add	r1, sp, #112	; 0x70
   2cfd4:	ldr	r2, [fp, #8]
   2cfd8:	mov	r4, r1
   2cfdc:	ldr	r1, [r1, r6]
   2cfe0:	mul	r3, r1, r0
   2cfe4:	ldr	r0, [sp, #52]	; 0x34
   2cfe8:	add	r1, sp, #56	; 0x38
   2cfec:	bl	28dc <InflateSkipData>
   2cff0:	ldr	r7, [sp, #36]	; 0x24
   2cff4:	ldr	r0, [r4, r6]
   2cff8:	ldr	r3, [sp, #40]	; 0x28
   2cffc:	ldr	r1, [r7, r6]
   2d000:	mla	r9, r1, r0, r9
   2d004:	subs	sl, sl, #1
   2d008:	add	r6, r6, #4
   2d00c:	bne	2cf84 <ReadCompressedDataSlabN+0x3540>
   2d010:	b	2cd94 <ReadCompressedDataSlabN+0x3350>
   2d014:	ldr	r0, [sp, #8]
   2d018:	ldr	r6, [r0, r6]
   2d01c:	cmp	r6, #0
   2d020:	beq	2cd94 <ReadCompressedDataSlabN+0x3350>
   2d024:	ldr	r0, [sp, #52]	; 0x34
   2d028:	ldr	r2, [fp, #8]
   2d02c:	add	r1, sp, #56	; 0x38
   2d030:	mov	r3, r6
   2d034:	bl	28dc <InflateSkipData>
   2d038:	add	r9, r6, r9
   2d03c:	b	2cd94 <ReadCompressedDataSlabN+0x3350>
   2d040:	ldr	r0, [sp, #32]
   2d044:	cmp	r0, #1
   2d048:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d04c:	sub	r0, fp, #112	; 0x70
   2d050:	add	r7, sl, #4
   2d054:	add	r1, sp, #56	; 0x38
   2d058:	orr	r8, r0, #4
   2d05c:	ldr	r0, [fp, #28]
   2d060:	str	r7, [sp, #36]	; 0x24
   2d064:	str	r8, [sp, #20]
   2d068:	add	r0, r0, #4
   2d06c:	str	r0, [sp, #44]	; 0x2c
   2d070:	add	r0, sp, #112	; 0x70
   2d074:	orr	r3, r0, #4
   2d078:	ldr	r0, [fp, #12]
   2d07c:	str	r3, [sp, #40]	; 0x28
   2d080:	sub	r0, r0, #1
   2d084:	str	r0, [sp, #16]
   2d088:	sub	r0, fp, #72	; 0x48
   2d08c:	orr	r0, r0, #4
   2d090:	str	r0, [sp, #8]
   2d094:	ldr	r0, [sp, #48]	; 0x30
   2d098:	add	r0, r0, #2
   2d09c:	str	r0, [sp, #12]
   2d0a0:	mov	r0, #0
   2d0a4:	str	r0, [sp, #28]
   2d0a8:	ldr	r3, [sl]
   2d0ac:	cmp	r3, #0
   2d0b0:	bne	2d0e8 <ReadCompressedDataSlabN+0x36a4>
   2d0b4:	b	2d118 <ReadCompressedDataSlabN+0x36d4>
   2d0b8:	ldr	r0, [r5]
   2d0bc:	ldr	r1, [sp, #28]
   2d0c0:	ldr	sl, [fp, #20]
   2d0c4:	add	r1, r0, r1
   2d0c8:	ldr	r0, [sp, #32]
   2d0cc:	str	r1, [sp, #28]
   2d0d0:	cmp	r1, r0
   2d0d4:	add	r1, sp, #56	; 0x38
   2d0d8:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d0dc:	ldr	r3, [sl]
   2d0e0:	cmp	r3, #0
   2d0e4:	beq	2d118 <ReadCompressedDataSlabN+0x36d4>
   2d0e8:	ldr	r7, [sp, #52]	; 0x34
   2d0ec:	ldr	r6, [fp, #8]
   2d0f0:	mov	r4, sl
   2d0f4:	mov	sl, r1
   2d0f8:	mov	r0, r7
   2d0fc:	mov	r2, r6
   2d100:	bl	28dc <InflateSkipData>
   2d104:	ldr	r0, [r4]
   2d108:	ldr	r5, [fp, #28]
   2d10c:	add	r9, r0, r9
   2d110:	ldr	r0, [sp, #48]	; 0x30
   2d114:	b	2d12c <ReadCompressedDataSlabN+0x36e8>
   2d118:	ldr	r0, [sp, #48]	; 0x30
   2d11c:	ldr	r7, [sp, #52]	; 0x34
   2d120:	ldr	r5, [fp, #28]
   2d124:	ldr	r6, [fp, #8]
   2d128:	mov	sl, r1
   2d12c:	ldr	r4, [sp, #28]
   2d130:	ldr	r8, [r5]
   2d134:	mov	r1, #1
   2d138:	mov	r3, r6
   2d13c:	str	r9, [sp, #24]
   2d140:	str	r1, [sp]
   2d144:	mov	r1, sl
   2d148:	add	r2, r0, r4, lsl #1
   2d14c:	mov	r0, r7
   2d150:	bl	1ee28 <ReadCompressedUInt16Data>
   2d154:	ldr	r1, [fp, #24]
   2d158:	cmp	r8, #2
   2d15c:	blt	2d1e4 <ReadCompressedDataSlabN+0x37a0>
   2d160:	ldr	r0, [sp, #12]
   2d164:	ldr	r9, [sp, #24]
   2d168:	add	r6, r0, r4, lsl #1
   2d16c:	mov	r4, #0
   2d170:	ldr	r0, [r1]
   2d174:	ldr	sl, [fp, #8]
   2d178:	ldr	r5, [sp, #52]	; 0x34
   2d17c:	add	r8, sp, #56	; 0x38
   2d180:	mov	r1, r8
   2d184:	sub	r3, r0, #1
   2d188:	mov	r0, r5
   2d18c:	mov	r2, sl
   2d190:	bl	28dc <InflateSkipData>
   2d194:	ldr	r0, [fp, #28]
   2d198:	ldr	r3, [fp, #8]
   2d19c:	mov	r1, r8
   2d1a0:	mov	r2, r6
   2d1a4:	ldr	sl, [r0]
   2d1a8:	ldr	r0, [fp, #24]
   2d1ac:	ldr	r7, [r0]
   2d1b0:	mov	r0, #1
   2d1b4:	str	r0, [sp]
   2d1b8:	mov	r0, r5
   2d1bc:	bl	1ee28 <ReadCompressedUInt16Data>
   2d1c0:	ldr	r1, [fp, #24]
   2d1c4:	ldr	r5, [fp, #28]
   2d1c8:	add	r4, r4, #1
   2d1cc:	sub	r0, sl, #1
   2d1d0:	add	r9, r7, r9
   2d1d4:	add	r6, r6, #2
   2d1d8:	cmp	r4, r0
   2d1dc:	blt	2d170 <ReadCompressedDataSlabN+0x372c>
   2d1e0:	b	2d1e8 <ReadCompressedDataSlabN+0x37a4>
   2d1e4:	ldr	r9, [sp, #24]
   2d1e8:	ldr	r0, [fp, #16]
   2d1ec:	ldr	r2, [r5]
   2d1f0:	ldr	r1, [r1]
   2d1f4:	ldr	r0, [r0]
   2d1f8:	sub	r2, r2, #1
   2d1fc:	mls	r0, r2, r1, r0
   2d200:	ldr	r1, [fp, #20]
   2d204:	ldr	r2, [fp, #8]
   2d208:	ldr	r1, [r1]
   2d20c:	sub	r4, r0, r1
   2d210:	ldr	r0, [sp, #52]	; 0x34
   2d214:	add	r1, sp, #56	; 0x38
   2d218:	sub	r3, r4, #1
   2d21c:	bl	28dc <InflateSkipData>
   2d220:	ldr	r0, [fp, #12]
   2d224:	add	r9, r4, r9
   2d228:	cmp	r0, #2
   2d22c:	blt	2d0b8 <ReadCompressedDataSlabN+0x3674>
   2d230:	ldr	sl, [sp, #16]
   2d234:	ldr	r8, [sp, #20]
   2d238:	ldr	r3, [sp, #40]	; 0x28
   2d23c:	ldr	r7, [sp, #36]	; 0x24
   2d240:	mov	r6, #0
   2d244:	b	2d2a8 <ReadCompressedDataSlabN+0x3864>
   2d248:	add	r2, sp, #112	; 0x70
   2d24c:	ldr	r3, [r7, r6]
   2d250:	sub	r0, r0, r1
   2d254:	add	r1, sp, #56	; 0x38
   2d258:	mov	r4, r2
   2d25c:	ldr	r2, [r2, r6]
   2d260:	mla	r3, r3, r2, r0
   2d264:	ldr	r0, [sp, #52]	; 0x34
   2d268:	ldr	r2, [fp, #8]
   2d26c:	bl	28dc <InflateSkipData>
   2d270:	ldr	r3, [sp, #40]	; 0x28
   2d274:	ldr	r7, [sp, #36]	; 0x24
   2d278:	ldr	r0, [r3, r6]
   2d27c:	ldr	r2, [r7, r6]
   2d280:	sdiv	r1, r9, r0
   2d284:	mul	r1, r1, r0
   2d288:	add	r0, r0, r9
   2d28c:	sub	r1, r1, r9
   2d290:	add	r0, r0, r1
   2d294:	ldr	r1, [r4, r6]
   2d298:	mla	r9, r2, r1, r0
   2d29c:	subs	sl, sl, #1
   2d2a0:	add	r6, r6, #4
   2d2a4:	beq	2d0b8 <ReadCompressedDataSlabN+0x3674>
   2d2a8:	ldr	r0, [r8, r6]
   2d2ac:	ldr	r1, [sp, #44]	; 0x2c
   2d2b0:	add	r0, r0, #1
   2d2b4:	str	r0, [r8, r6]
   2d2b8:	ldr	r1, [r1, r6]
   2d2bc:	sdiv	r2, r0, r1
   2d2c0:	mls	r0, r2, r1, r0
   2d2c4:	cmp	r0, #0
   2d2c8:	bne	2d338 <ReadCompressedDataSlabN+0x38f4>
   2d2cc:	mov	r0, #0
   2d2d0:	str	r0, [r8, r6]
   2d2d4:	ldr	r0, [r3, r6]
   2d2d8:	sdiv	r1, r9, r0
   2d2dc:	mls	r1, r1, r0, r9
   2d2e0:	cmp	r1, #0
   2d2e4:	bne	2d248 <ReadCompressedDataSlabN+0x3804>
   2d2e8:	ldr	r0, [r7, r6]
   2d2ec:	cmp	r0, #0
   2d2f0:	beq	2d29c <ReadCompressedDataSlabN+0x3858>
   2d2f4:	add	r1, sp, #112	; 0x70
   2d2f8:	ldr	r2, [fp, #8]
   2d2fc:	mov	r4, r1
   2d300:	ldr	r1, [r1, r6]
   2d304:	mul	r3, r1, r0
   2d308:	ldr	r0, [sp, #52]	; 0x34
   2d30c:	add	r1, sp, #56	; 0x38
   2d310:	bl	28dc <InflateSkipData>
   2d314:	ldr	r7, [sp, #36]	; 0x24
   2d318:	ldr	r0, [r4, r6]
   2d31c:	ldr	r3, [sp, #40]	; 0x28
   2d320:	ldr	r1, [r7, r6]
   2d324:	mla	r9, r1, r0, r9
   2d328:	subs	sl, sl, #1
   2d32c:	add	r6, r6, #4
   2d330:	bne	2d2a8 <ReadCompressedDataSlabN+0x3864>
   2d334:	b	2d0b8 <ReadCompressedDataSlabN+0x3674>
   2d338:	ldr	r0, [sp, #8]
   2d33c:	ldr	r6, [r0, r6]
   2d340:	cmp	r6, #0
   2d344:	beq	2d0b8 <ReadCompressedDataSlabN+0x3674>
   2d348:	ldr	r0, [sp, #52]	; 0x34
   2d34c:	ldr	r2, [fp, #8]
   2d350:	add	r1, sp, #56	; 0x38
   2d354:	mov	r3, r6
   2d358:	bl	28dc <InflateSkipData>
   2d35c:	add	r9, r6, r9
   2d360:	b	2d0b8 <ReadCompressedDataSlabN+0x3674>
   2d364:	ldr	r0, [sp, #32]
   2d368:	cmp	r0, #1
   2d36c:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d370:	sub	r0, fp, #112	; 0x70
   2d374:	add	r7, sl, #4
   2d378:	add	r1, sp, #56	; 0x38
   2d37c:	orr	r8, r0, #4
   2d380:	ldr	r0, [fp, #28]
   2d384:	str	r7, [sp, #36]	; 0x24
   2d388:	str	r8, [sp, #20]
   2d38c:	add	r0, r0, #4
   2d390:	str	r0, [sp, #44]	; 0x2c
   2d394:	add	r0, sp, #112	; 0x70
   2d398:	orr	r3, r0, #4
   2d39c:	ldr	r0, [fp, #12]
   2d3a0:	str	r3, [sp, #40]	; 0x28
   2d3a4:	sub	r0, r0, #1
   2d3a8:	str	r0, [sp, #16]
   2d3ac:	sub	r0, fp, #72	; 0x48
   2d3b0:	orr	r0, r0, #4
   2d3b4:	str	r0, [sp, #8]
   2d3b8:	ldr	r0, [sp, #48]	; 0x30
   2d3bc:	add	r0, r0, #4
   2d3c0:	str	r0, [sp, #12]
   2d3c4:	mov	r0, #0
   2d3c8:	str	r0, [sp, #28]
   2d3cc:	ldr	r3, [sl]
   2d3d0:	cmp	r3, #0
   2d3d4:	bne	2d40c <ReadCompressedDataSlabN+0x39c8>
   2d3d8:	b	2d43c <ReadCompressedDataSlabN+0x39f8>
   2d3dc:	ldr	r0, [r5]
   2d3e0:	ldr	r1, [sp, #28]
   2d3e4:	ldr	sl, [fp, #20]
   2d3e8:	add	r1, r0, r1
   2d3ec:	ldr	r0, [sp, #32]
   2d3f0:	str	r1, [sp, #28]
   2d3f4:	cmp	r1, r0
   2d3f8:	add	r1, sp, #56	; 0x38
   2d3fc:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d400:	ldr	r3, [sl]
   2d404:	cmp	r3, #0
   2d408:	beq	2d43c <ReadCompressedDataSlabN+0x39f8>
   2d40c:	ldr	r7, [sp, #52]	; 0x34
   2d410:	ldr	r6, [fp, #8]
   2d414:	mov	r4, sl
   2d418:	mov	sl, r1
   2d41c:	mov	r0, r7
   2d420:	mov	r2, r6
   2d424:	bl	28dc <InflateSkipData>
   2d428:	ldr	r0, [r4]
   2d42c:	ldr	r5, [fp, #28]
   2d430:	add	r9, r0, r9
   2d434:	ldr	r0, [sp, #48]	; 0x30
   2d438:	b	2d450 <ReadCompressedDataSlabN+0x3a0c>
   2d43c:	ldr	r0, [sp, #48]	; 0x30
   2d440:	ldr	r7, [sp, #52]	; 0x34
   2d444:	ldr	r5, [fp, #28]
   2d448:	ldr	r6, [fp, #8]
   2d44c:	mov	sl, r1
   2d450:	ldr	r4, [sp, #28]
   2d454:	ldr	r8, [r5]
   2d458:	mov	r1, #1
   2d45c:	mov	r3, r6
   2d460:	str	r9, [sp, #24]
   2d464:	str	r1, [sp]
   2d468:	mov	r1, sl
   2d46c:	add	r2, r0, r4, lsl #2
   2d470:	mov	r0, r7
   2d474:	bl	15178 <ReadCompressedInt32Data>
   2d478:	ldr	r1, [fp, #24]
   2d47c:	cmp	r8, #2
   2d480:	blt	2d508 <ReadCompressedDataSlabN+0x3ac4>
   2d484:	ldr	r0, [sp, #12]
   2d488:	ldr	r9, [sp, #24]
   2d48c:	add	r6, r0, r4, lsl #2
   2d490:	mov	r4, #0
   2d494:	ldr	r0, [r1]
   2d498:	ldr	sl, [fp, #8]
   2d49c:	ldr	r5, [sp, #52]	; 0x34
   2d4a0:	add	r8, sp, #56	; 0x38
   2d4a4:	mov	r1, r8
   2d4a8:	sub	r3, r0, #1
   2d4ac:	mov	r0, r5
   2d4b0:	mov	r2, sl
   2d4b4:	bl	28dc <InflateSkipData>
   2d4b8:	ldr	r0, [fp, #28]
   2d4bc:	ldr	r3, [fp, #8]
   2d4c0:	mov	r1, r8
   2d4c4:	mov	r2, r6
   2d4c8:	ldr	sl, [r0]
   2d4cc:	ldr	r0, [fp, #24]
   2d4d0:	ldr	r7, [r0]
   2d4d4:	mov	r0, #1
   2d4d8:	str	r0, [sp]
   2d4dc:	mov	r0, r5
   2d4e0:	bl	15178 <ReadCompressedInt32Data>
   2d4e4:	ldr	r1, [fp, #24]
   2d4e8:	ldr	r5, [fp, #28]
   2d4ec:	add	r4, r4, #1
   2d4f0:	sub	r0, sl, #1
   2d4f4:	add	r9, r7, r9
   2d4f8:	add	r6, r6, #4
   2d4fc:	cmp	r4, r0
   2d500:	blt	2d494 <ReadCompressedDataSlabN+0x3a50>
   2d504:	b	2d50c <ReadCompressedDataSlabN+0x3ac8>
   2d508:	ldr	r9, [sp, #24]
   2d50c:	ldr	r0, [fp, #16]
   2d510:	ldr	r2, [r5]
   2d514:	ldr	r1, [r1]
   2d518:	ldr	r0, [r0]
   2d51c:	sub	r2, r2, #1
   2d520:	mls	r0, r2, r1, r0
   2d524:	ldr	r1, [fp, #20]
   2d528:	ldr	r2, [fp, #8]
   2d52c:	ldr	r1, [r1]
   2d530:	sub	r4, r0, r1
   2d534:	ldr	r0, [sp, #52]	; 0x34
   2d538:	add	r1, sp, #56	; 0x38
   2d53c:	sub	r3, r4, #1
   2d540:	bl	28dc <InflateSkipData>
   2d544:	ldr	r0, [fp, #12]
   2d548:	add	r9, r4, r9
   2d54c:	cmp	r0, #2
   2d550:	blt	2d3dc <ReadCompressedDataSlabN+0x3998>
   2d554:	ldr	sl, [sp, #16]
   2d558:	ldr	r8, [sp, #20]
   2d55c:	ldr	r3, [sp, #40]	; 0x28
   2d560:	ldr	r7, [sp, #36]	; 0x24
   2d564:	mov	r6, #0
   2d568:	b	2d5cc <ReadCompressedDataSlabN+0x3b88>
   2d56c:	add	r2, sp, #112	; 0x70
   2d570:	ldr	r3, [r7, r6]
   2d574:	sub	r0, r0, r1
   2d578:	add	r1, sp, #56	; 0x38
   2d57c:	mov	r4, r2
   2d580:	ldr	r2, [r2, r6]
   2d584:	mla	r3, r3, r2, r0
   2d588:	ldr	r0, [sp, #52]	; 0x34
   2d58c:	ldr	r2, [fp, #8]
   2d590:	bl	28dc <InflateSkipData>
   2d594:	ldr	r3, [sp, #40]	; 0x28
   2d598:	ldr	r7, [sp, #36]	; 0x24
   2d59c:	ldr	r0, [r3, r6]
   2d5a0:	ldr	r2, [r7, r6]
   2d5a4:	sdiv	r1, r9, r0
   2d5a8:	mul	r1, r1, r0
   2d5ac:	add	r0, r0, r9
   2d5b0:	sub	r1, r1, r9
   2d5b4:	add	r0, r0, r1
   2d5b8:	ldr	r1, [r4, r6]
   2d5bc:	mla	r9, r2, r1, r0
   2d5c0:	subs	sl, sl, #1
   2d5c4:	add	r6, r6, #4
   2d5c8:	beq	2d3dc <ReadCompressedDataSlabN+0x3998>
   2d5cc:	ldr	r0, [r8, r6]
   2d5d0:	ldr	r1, [sp, #44]	; 0x2c
   2d5d4:	add	r0, r0, #1
   2d5d8:	str	r0, [r8, r6]
   2d5dc:	ldr	r1, [r1, r6]
   2d5e0:	sdiv	r2, r0, r1
   2d5e4:	mls	r0, r2, r1, r0
   2d5e8:	cmp	r0, #0
   2d5ec:	bne	2d65c <ReadCompressedDataSlabN+0x3c18>
   2d5f0:	mov	r0, #0
   2d5f4:	str	r0, [r8, r6]
   2d5f8:	ldr	r0, [r3, r6]
   2d5fc:	sdiv	r1, r9, r0
   2d600:	mls	r1, r1, r0, r9
   2d604:	cmp	r1, #0
   2d608:	bne	2d56c <ReadCompressedDataSlabN+0x3b28>
   2d60c:	ldr	r0, [r7, r6]
   2d610:	cmp	r0, #0
   2d614:	beq	2d5c0 <ReadCompressedDataSlabN+0x3b7c>
   2d618:	add	r1, sp, #112	; 0x70
   2d61c:	ldr	r2, [fp, #8]
   2d620:	mov	r4, r1
   2d624:	ldr	r1, [r1, r6]
   2d628:	mul	r3, r1, r0
   2d62c:	ldr	r0, [sp, #52]	; 0x34
   2d630:	add	r1, sp, #56	; 0x38
   2d634:	bl	28dc <InflateSkipData>
   2d638:	ldr	r7, [sp, #36]	; 0x24
   2d63c:	ldr	r0, [r4, r6]
   2d640:	ldr	r3, [sp, #40]	; 0x28
   2d644:	ldr	r1, [r7, r6]
   2d648:	mla	r9, r1, r0, r9
   2d64c:	subs	sl, sl, #1
   2d650:	add	r6, r6, #4
   2d654:	bne	2d5cc <ReadCompressedDataSlabN+0x3b88>
   2d658:	b	2d3dc <ReadCompressedDataSlabN+0x3998>
   2d65c:	ldr	r0, [sp, #8]
   2d660:	ldr	r6, [r0, r6]
   2d664:	cmp	r6, #0
   2d668:	beq	2d3dc <ReadCompressedDataSlabN+0x3998>
   2d66c:	ldr	r0, [sp, #52]	; 0x34
   2d670:	ldr	r2, [fp, #8]
   2d674:	add	r1, sp, #56	; 0x38
   2d678:	mov	r3, r6
   2d67c:	bl	28dc <InflateSkipData>
   2d680:	add	r9, r6, r9
   2d684:	b	2d3dc <ReadCompressedDataSlabN+0x3998>
   2d688:	ldr	r0, [sp, #32]
   2d68c:	cmp	r0, #1
   2d690:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d694:	sub	r0, fp, #112	; 0x70
   2d698:	add	r7, sl, #4
   2d69c:	add	r1, sp, #56	; 0x38
   2d6a0:	orr	r8, r0, #4
   2d6a4:	ldr	r0, [fp, #28]
   2d6a8:	str	r7, [sp, #36]	; 0x24
   2d6ac:	str	r8, [sp, #20]
   2d6b0:	add	r0, r0, #4
   2d6b4:	str	r0, [sp, #44]	; 0x2c
   2d6b8:	add	r0, sp, #112	; 0x70
   2d6bc:	orr	r3, r0, #4
   2d6c0:	ldr	r0, [fp, #12]
   2d6c4:	str	r3, [sp, #40]	; 0x28
   2d6c8:	sub	r0, r0, #1
   2d6cc:	str	r0, [sp, #16]
   2d6d0:	sub	r0, fp, #72	; 0x48
   2d6d4:	orr	r0, r0, #4
   2d6d8:	str	r0, [sp, #8]
   2d6dc:	ldr	r0, [sp, #48]	; 0x30
   2d6e0:	add	r0, r0, #4
   2d6e4:	str	r0, [sp, #12]
   2d6e8:	mov	r0, #0
   2d6ec:	str	r0, [sp, #28]
   2d6f0:	ldr	r3, [sl]
   2d6f4:	cmp	r3, #0
   2d6f8:	bne	2d730 <ReadCompressedDataSlabN+0x3cec>
   2d6fc:	b	2d760 <ReadCompressedDataSlabN+0x3d1c>
   2d700:	ldr	r0, [r5]
   2d704:	ldr	r1, [sp, #28]
   2d708:	ldr	sl, [fp, #20]
   2d70c:	add	r1, r0, r1
   2d710:	ldr	r0, [sp, #32]
   2d714:	str	r1, [sp, #28]
   2d718:	cmp	r1, r0
   2d71c:	add	r1, sp, #56	; 0x38
   2d720:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d724:	ldr	r3, [sl]
   2d728:	cmp	r3, #0
   2d72c:	beq	2d760 <ReadCompressedDataSlabN+0x3d1c>
   2d730:	ldr	r7, [sp, #52]	; 0x34
   2d734:	ldr	r6, [fp, #8]
   2d738:	mov	r4, sl
   2d73c:	mov	sl, r1
   2d740:	mov	r0, r7
   2d744:	mov	r2, r6
   2d748:	bl	28dc <InflateSkipData>
   2d74c:	ldr	r0, [r4]
   2d750:	ldr	r5, [fp, #28]
   2d754:	add	r9, r0, r9
   2d758:	ldr	r0, [sp, #48]	; 0x30
   2d75c:	b	2d774 <ReadCompressedDataSlabN+0x3d30>
   2d760:	ldr	r0, [sp, #48]	; 0x30
   2d764:	ldr	r7, [sp, #52]	; 0x34
   2d768:	ldr	r5, [fp, #28]
   2d76c:	ldr	r6, [fp, #8]
   2d770:	mov	sl, r1
   2d774:	ldr	r4, [sp, #28]
   2d778:	ldr	r8, [r5]
   2d77c:	mov	r1, #1
   2d780:	mov	r3, r6
   2d784:	str	r9, [sp, #24]
   2d788:	str	r1, [sp]
   2d78c:	mov	r1, sl
   2d790:	add	r2, r0, r4, lsl #2
   2d794:	mov	r0, r7
   2d798:	bl	18da0 <ReadCompressedUInt32Data>
   2d79c:	ldr	r1, [fp, #24]
   2d7a0:	cmp	r8, #2
   2d7a4:	blt	2d82c <ReadCompressedDataSlabN+0x3de8>
   2d7a8:	ldr	r0, [sp, #12]
   2d7ac:	ldr	r9, [sp, #24]
   2d7b0:	add	r6, r0, r4, lsl #2
   2d7b4:	mov	r4, #0
   2d7b8:	ldr	r0, [r1]
   2d7bc:	ldr	sl, [fp, #8]
   2d7c0:	ldr	r5, [sp, #52]	; 0x34
   2d7c4:	add	r8, sp, #56	; 0x38
   2d7c8:	mov	r1, r8
   2d7cc:	sub	r3, r0, #1
   2d7d0:	mov	r0, r5
   2d7d4:	mov	r2, sl
   2d7d8:	bl	28dc <InflateSkipData>
   2d7dc:	ldr	r0, [fp, #28]
   2d7e0:	ldr	r3, [fp, #8]
   2d7e4:	mov	r1, r8
   2d7e8:	mov	r2, r6
   2d7ec:	ldr	sl, [r0]
   2d7f0:	ldr	r0, [fp, #24]
   2d7f4:	ldr	r7, [r0]
   2d7f8:	mov	r0, #1
   2d7fc:	str	r0, [sp]
   2d800:	mov	r0, r5
   2d804:	bl	18da0 <ReadCompressedUInt32Data>
   2d808:	ldr	r1, [fp, #24]
   2d80c:	ldr	r5, [fp, #28]
   2d810:	add	r4, r4, #1
   2d814:	sub	r0, sl, #1
   2d818:	add	r9, r7, r9
   2d81c:	add	r6, r6, #4
   2d820:	cmp	r4, r0
   2d824:	blt	2d7b8 <ReadCompressedDataSlabN+0x3d74>
   2d828:	b	2d830 <ReadCompressedDataSlabN+0x3dec>
   2d82c:	ldr	r9, [sp, #24]
   2d830:	ldr	r0, [fp, #16]
   2d834:	ldr	r2, [r5]
   2d838:	ldr	r1, [r1]
   2d83c:	ldr	r0, [r0]
   2d840:	sub	r2, r2, #1
   2d844:	mls	r0, r2, r1, r0
   2d848:	ldr	r1, [fp, #20]
   2d84c:	ldr	r2, [fp, #8]
   2d850:	ldr	r1, [r1]
   2d854:	sub	r4, r0, r1
   2d858:	ldr	r0, [sp, #52]	; 0x34
   2d85c:	add	r1, sp, #56	; 0x38
   2d860:	sub	r3, r4, #1
   2d864:	bl	28dc <InflateSkipData>
   2d868:	ldr	r0, [fp, #12]
   2d86c:	add	r9, r4, r9
   2d870:	cmp	r0, #2
   2d874:	blt	2d700 <ReadCompressedDataSlabN+0x3cbc>
   2d878:	ldr	sl, [sp, #16]
   2d87c:	ldr	r8, [sp, #20]
   2d880:	ldr	r3, [sp, #40]	; 0x28
   2d884:	ldr	r7, [sp, #36]	; 0x24
   2d888:	mov	r6, #0
   2d88c:	b	2d8f0 <ReadCompressedDataSlabN+0x3eac>
   2d890:	add	r2, sp, #112	; 0x70
   2d894:	ldr	r3, [r7, r6]
   2d898:	sub	r0, r0, r1
   2d89c:	add	r1, sp, #56	; 0x38
   2d8a0:	mov	r4, r2
   2d8a4:	ldr	r2, [r2, r6]
   2d8a8:	mla	r3, r3, r2, r0
   2d8ac:	ldr	r0, [sp, #52]	; 0x34
   2d8b0:	ldr	r2, [fp, #8]
   2d8b4:	bl	28dc <InflateSkipData>
   2d8b8:	ldr	r3, [sp, #40]	; 0x28
   2d8bc:	ldr	r7, [sp, #36]	; 0x24
   2d8c0:	ldr	r0, [r3, r6]
   2d8c4:	ldr	r2, [r7, r6]
   2d8c8:	sdiv	r1, r9, r0
   2d8cc:	mul	r1, r1, r0
   2d8d0:	add	r0, r0, r9
   2d8d4:	sub	r1, r1, r9
   2d8d8:	add	r0, r0, r1
   2d8dc:	ldr	r1, [r4, r6]
   2d8e0:	mla	r9, r2, r1, r0
   2d8e4:	subs	sl, sl, #1
   2d8e8:	add	r6, r6, #4
   2d8ec:	beq	2d700 <ReadCompressedDataSlabN+0x3cbc>
   2d8f0:	ldr	r0, [r8, r6]
   2d8f4:	ldr	r1, [sp, #44]	; 0x2c
   2d8f8:	add	r0, r0, #1
   2d8fc:	str	r0, [r8, r6]
   2d900:	ldr	r1, [r1, r6]
   2d904:	sdiv	r2, r0, r1
   2d908:	mls	r0, r2, r1, r0
   2d90c:	cmp	r0, #0
   2d910:	bne	2d980 <ReadCompressedDataSlabN+0x3f3c>
   2d914:	mov	r0, #0
   2d918:	str	r0, [r8, r6]
   2d91c:	ldr	r0, [r3, r6]
   2d920:	sdiv	r1, r9, r0
   2d924:	mls	r1, r1, r0, r9
   2d928:	cmp	r1, #0
   2d92c:	bne	2d890 <ReadCompressedDataSlabN+0x3e4c>
   2d930:	ldr	r0, [r7, r6]
   2d934:	cmp	r0, #0
   2d938:	beq	2d8e4 <ReadCompressedDataSlabN+0x3ea0>
   2d93c:	add	r1, sp, #112	; 0x70
   2d940:	ldr	r2, [fp, #8]
   2d944:	mov	r4, r1
   2d948:	ldr	r1, [r1, r6]
   2d94c:	mul	r3, r1, r0
   2d950:	ldr	r0, [sp, #52]	; 0x34
   2d954:	add	r1, sp, #56	; 0x38
   2d958:	bl	28dc <InflateSkipData>
   2d95c:	ldr	r7, [sp, #36]	; 0x24
   2d960:	ldr	r0, [r4, r6]
   2d964:	ldr	r3, [sp, #40]	; 0x28
   2d968:	ldr	r1, [r7, r6]
   2d96c:	mla	r9, r1, r0, r9
   2d970:	subs	sl, sl, #1
   2d974:	add	r6, r6, #4
   2d978:	bne	2d8f0 <ReadCompressedDataSlabN+0x3eac>
   2d97c:	b	2d700 <ReadCompressedDataSlabN+0x3cbc>
   2d980:	ldr	r0, [sp, #8]
   2d984:	ldr	r6, [r0, r6]
   2d988:	cmp	r6, #0
   2d98c:	beq	2d700 <ReadCompressedDataSlabN+0x3cbc>
   2d990:	ldr	r0, [sp, #52]	; 0x34
   2d994:	ldr	r2, [fp, #8]
   2d998:	add	r1, sp, #56	; 0x38
   2d99c:	mov	r3, r6
   2d9a0:	bl	28dc <InflateSkipData>
   2d9a4:	add	r9, r6, r9
   2d9a8:	b	2d700 <ReadCompressedDataSlabN+0x3cbc>
   2d9ac:	ldr	r0, [sp, #32]
   2d9b0:	cmp	r0, #1
   2d9b4:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2d9b8:	sub	r0, fp, #112	; 0x70
   2d9bc:	orr	r0, r0, #4
   2d9c0:	str	r0, [sp, #24]
   2d9c4:	ldr	r0, [fp, #28]
   2d9c8:	add	r0, r0, #4
   2d9cc:	str	r0, [sp, #44]	; 0x2c
   2d9d0:	add	r0, sp, #112	; 0x70
   2d9d4:	orr	r0, r0, #4
   2d9d8:	str	r0, [sp, #40]	; 0x28
   2d9dc:	add	r0, sl, #4
   2d9e0:	str	r0, [sp, #36]	; 0x24
   2d9e4:	ldr	r0, [fp, #12]
   2d9e8:	sub	r0, r0, #1
   2d9ec:	str	r0, [sp, #20]
   2d9f0:	sub	r0, fp, #72	; 0x48
   2d9f4:	orr	r0, r0, #4
   2d9f8:	str	r0, [sp, #12]
   2d9fc:	ldr	r0, [sp, #48]	; 0x30
   2da00:	add	r0, r0, #8
   2da04:	str	r0, [sp, #16]
   2da08:	mov	r0, #0
   2da0c:	str	r0, [sp, #28]
   2da10:	ldr	r3, [sl]
   2da14:	cmp	r3, #0
   2da18:	bne	2da4c <ReadCompressedDataSlabN+0x4008>
   2da1c:	b	2da8c <ReadCompressedDataSlabN+0x4048>
   2da20:	ldr	r0, [r5]
   2da24:	ldr	r1, [sp, #28]
   2da28:	ldr	sl, [fp, #20]
   2da2c:	add	r1, r0, r1
   2da30:	ldr	r0, [sp, #32]
   2da34:	str	r1, [sp, #28]
   2da38:	cmp	r1, r0
   2da3c:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2da40:	ldr	r3, [sl]
   2da44:	cmp	r3, #0
   2da48:	beq	2da8c <ReadCompressedDataSlabN+0x4048>
   2da4c:	mov	r4, sl
   2da50:	ldr	sl, [sp, #52]	; 0x34
   2da54:	ldr	r6, [fp, #8]
   2da58:	add	r5, sp, #56	; 0x38
   2da5c:	mov	r1, r5
   2da60:	mov	r0, sl
   2da64:	mov	r2, r6
   2da68:	bl	28dc <InflateSkipData>
   2da6c:	ldr	r0, [r4]
   2da70:	mov	r1, r5
   2da74:	ldr	r5, [fp, #28]
   2da78:	ldr	r7, [fp, #24]
   2da7c:	mov	r2, #1
   2da80:	add	r9, r0, r9
   2da84:	ldr	r0, [sp, #48]	; 0x30
   2da88:	b	2daa8 <ReadCompressedDataSlabN+0x4064>
   2da8c:	ldr	r0, [sp, #48]	; 0x30
   2da90:	ldr	sl, [sp, #52]	; 0x34
   2da94:	ldr	r5, [fp, #28]
   2da98:	ldr	r6, [fp, #8]
   2da9c:	ldr	r7, [fp, #24]
   2daa0:	mov	r2, #1
   2daa4:	add	r1, sp, #56	; 0x38
   2daa8:	ldr	r4, [sp, #28]
   2daac:	ldr	r8, [r5]
   2dab0:	str	r2, [sp]
   2dab4:	mov	r3, r6
   2dab8:	add	r2, r0, r4, lsl #3
   2dabc:	mov	r0, sl
   2dac0:	bl	e6f8 <ReadCompressedInt64Data>
   2dac4:	cmp	r8, #2
   2dac8:	blt	2db50 <ReadCompressedDataSlabN+0x410c>
   2dacc:	ldr	r0, [sp, #16]
   2dad0:	mov	sl, r9
   2dad4:	add	r6, r0, r4, lsl #3
   2dad8:	mov	r4, #0
   2dadc:	ldr	r0, [r7]
   2dae0:	ldr	r9, [fp, #8]
   2dae4:	ldr	r5, [sp, #52]	; 0x34
   2dae8:	add	r8, sp, #56	; 0x38
   2daec:	mov	r1, r8
   2daf0:	sub	r3, r0, #1
   2daf4:	mov	r0, r5
   2daf8:	mov	r2, r9
   2dafc:	bl	28dc <InflateSkipData>
   2db00:	ldr	r0, [fp, #28]
   2db04:	ldr	r3, [fp, #8]
   2db08:	mov	r1, r8
   2db0c:	mov	r2, r6
   2db10:	ldr	r9, [r0]
   2db14:	ldr	r0, [fp, #24]
   2db18:	ldr	r7, [r0]
   2db1c:	mov	r0, #1
   2db20:	str	r0, [sp]
   2db24:	mov	r0, r5
   2db28:	bl	e6f8 <ReadCompressedInt64Data>
   2db2c:	add	sl, r7, sl
   2db30:	ldr	r7, [fp, #24]
   2db34:	ldr	r5, [fp, #28]
   2db38:	add	r4, r4, #1
   2db3c:	sub	r0, r9, #1
   2db40:	add	r6, r6, #8
   2db44:	cmp	r4, r0
   2db48:	blt	2dadc <ReadCompressedDataSlabN+0x4098>
   2db4c:	b	2db54 <ReadCompressedDataSlabN+0x4110>
   2db50:	mov	sl, r9
   2db54:	ldr	r0, [fp, #16]
   2db58:	ldr	r2, [r5]
   2db5c:	ldr	r1, [r7]
   2db60:	ldr	r0, [r0]
   2db64:	sub	r2, r2, #1
   2db68:	mls	r0, r2, r1, r0
   2db6c:	ldr	r1, [fp, #20]
   2db70:	ldr	r2, [fp, #8]
   2db74:	ldr	r1, [r1]
   2db78:	sub	r4, r0, r1
   2db7c:	ldr	r0, [sp, #52]	; 0x34
   2db80:	add	r1, sp, #56	; 0x38
   2db84:	sub	r3, r4, #1
   2db88:	bl	28dc <InflateSkipData>
   2db8c:	ldr	r0, [fp, #12]
   2db90:	add	sl, r4, sl
   2db94:	mov	r9, sl
   2db98:	cmp	r0, #2
   2db9c:	blt	2da20 <ReadCompressedDataSlabN+0x3fdc>
   2dba0:	ldr	sl, [sp, #20]
   2dba4:	ldr	r7, [sp, #24]
   2dba8:	ldr	r3, [sp, #40]	; 0x28
   2dbac:	ldr	r4, [sp, #36]	; 0x24
   2dbb0:	mov	r6, #0
   2dbb4:	b	2dc14 <ReadCompressedDataSlabN+0x41d0>
   2dbb8:	add	r8, sp, #112	; 0x70
   2dbbc:	ldr	r3, [r4, r6]
   2dbc0:	sub	r0, r0, r1
   2dbc4:	add	r1, sp, #56	; 0x38
   2dbc8:	ldr	r2, [r8, r6]
   2dbcc:	mla	r3, r3, r2, r0
   2dbd0:	ldr	r0, [sp, #52]	; 0x34
   2dbd4:	ldr	r2, [fp, #8]
   2dbd8:	bl	28dc <InflateSkipData>
   2dbdc:	ldr	r3, [sp, #40]	; 0x28
   2dbe0:	ldr	r4, [sp, #36]	; 0x24
   2dbe4:	ldr	r0, [r3, r6]
   2dbe8:	ldr	r2, [r4, r6]
   2dbec:	sdiv	r1, r9, r0
   2dbf0:	mul	r1, r1, r0
   2dbf4:	add	r0, r0, r9
   2dbf8:	sub	r1, r1, r9
   2dbfc:	add	r0, r0, r1
   2dc00:	ldr	r1, [r8, r6]
   2dc04:	mla	r9, r2, r1, r0
   2dc08:	subs	sl, sl, #1
   2dc0c:	add	r6, r6, #4
   2dc10:	beq	2da20 <ReadCompressedDataSlabN+0x3fdc>
   2dc14:	ldr	r0, [r7, r6]
   2dc18:	ldr	r1, [sp, #44]	; 0x2c
   2dc1c:	add	r0, r0, #1
   2dc20:	str	r0, [r7, r6]
   2dc24:	ldr	r1, [r1, r6]
   2dc28:	sdiv	r2, r0, r1
   2dc2c:	mls	r0, r2, r1, r0
   2dc30:	cmp	r0, #0
   2dc34:	bne	2dca4 <ReadCompressedDataSlabN+0x4260>
   2dc38:	mov	r0, #0
   2dc3c:	str	r0, [r7, r6]
   2dc40:	ldr	r0, [r3, r6]
   2dc44:	sdiv	r1, r9, r0
   2dc48:	mls	r1, r1, r0, r9
   2dc4c:	cmp	r1, #0
   2dc50:	bne	2dbb8 <ReadCompressedDataSlabN+0x4174>
   2dc54:	ldr	r0, [r4, r6]
   2dc58:	cmp	r0, #0
   2dc5c:	beq	2dc08 <ReadCompressedDataSlabN+0x41c4>
   2dc60:	add	r1, sp, #112	; 0x70
   2dc64:	ldr	r2, [fp, #8]
   2dc68:	mov	r8, r1
   2dc6c:	ldr	r1, [r1, r6]
   2dc70:	mul	r3, r1, r0
   2dc74:	ldr	r0, [sp, #52]	; 0x34
   2dc78:	add	r1, sp, #56	; 0x38
   2dc7c:	bl	28dc <InflateSkipData>
   2dc80:	ldr	r4, [sp, #36]	; 0x24
   2dc84:	ldr	r0, [r8, r6]
   2dc88:	ldr	r3, [sp, #40]	; 0x28
   2dc8c:	ldr	r1, [r4, r6]
   2dc90:	mla	r9, r1, r0, r9
   2dc94:	subs	sl, sl, #1
   2dc98:	add	r6, r6, #4
   2dc9c:	bne	2dc14 <ReadCompressedDataSlabN+0x41d0>
   2dca0:	b	2da20 <ReadCompressedDataSlabN+0x3fdc>
   2dca4:	ldr	r0, [sp, #12]
   2dca8:	ldr	r6, [r0, r6]
   2dcac:	cmp	r6, #0
   2dcb0:	beq	2da20 <ReadCompressedDataSlabN+0x3fdc>
   2dcb4:	ldr	r0, [sp, #52]	; 0x34
   2dcb8:	ldr	r2, [fp, #8]
   2dcbc:	add	r1, sp, #56	; 0x38
   2dcc0:	mov	r3, r6
   2dcc4:	bl	28dc <InflateSkipData>
   2dcc8:	add	r9, r6, r9
   2dccc:	b	2da20 <ReadCompressedDataSlabN+0x3fdc>
   2dcd0:	ldr	r0, [sp, #32]
   2dcd4:	cmp	r0, #1
   2dcd8:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2dcdc:	sub	r0, fp, #112	; 0x70
   2dce0:	add	r7, sl, #4
   2dce4:	add	r1, sp, #56	; 0x38
   2dce8:	orr	r8, r0, #4
   2dcec:	ldr	r0, [fp, #28]
   2dcf0:	str	r7, [sp, #36]	; 0x24
   2dcf4:	str	r8, [sp, #20]
   2dcf8:	add	r0, r0, #4
   2dcfc:	str	r0, [sp, #44]	; 0x2c
   2dd00:	add	r0, sp, #112	; 0x70
   2dd04:	orr	r3, r0, #4
   2dd08:	ldr	r0, [fp, #12]
   2dd0c:	str	r3, [sp, #40]	; 0x28
   2dd10:	sub	r0, r0, #1
   2dd14:	str	r0, [sp, #16]
   2dd18:	sub	r0, fp, #72	; 0x48
   2dd1c:	orr	r0, r0, #4
   2dd20:	str	r0, [sp, #8]
   2dd24:	ldr	r0, [sp, #48]	; 0x30
   2dd28:	add	r0, r0, #8
   2dd2c:	str	r0, [sp, #12]
   2dd30:	mov	r0, #0
   2dd34:	str	r0, [sp, #28]
   2dd38:	ldr	r3, [sl]
   2dd3c:	cmp	r3, #0
   2dd40:	bne	2dd78 <ReadCompressedDataSlabN+0x4334>
   2dd44:	b	2dda8 <ReadCompressedDataSlabN+0x4364>
   2dd48:	ldr	r0, [r5]
   2dd4c:	ldr	r1, [sp, #28]
   2dd50:	ldr	sl, [fp, #20]
   2dd54:	add	r1, r0, r1
   2dd58:	ldr	r0, [sp, #32]
   2dd5c:	str	r1, [sp, #28]
   2dd60:	cmp	r1, r0
   2dd64:	add	r1, sp, #56	; 0x38
   2dd68:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2dd6c:	ldr	r3, [sl]
   2dd70:	cmp	r3, #0
   2dd74:	beq	2dda8 <ReadCompressedDataSlabN+0x4364>
   2dd78:	ldr	r7, [sp, #52]	; 0x34
   2dd7c:	ldr	r6, [fp, #8]
   2dd80:	mov	r4, sl
   2dd84:	mov	sl, r1
   2dd88:	mov	r0, r7
   2dd8c:	mov	r2, r6
   2dd90:	bl	28dc <InflateSkipData>
   2dd94:	ldr	r0, [r4]
   2dd98:	ldr	r5, [fp, #28]
   2dd9c:	add	r9, r0, r9
   2dda0:	ldr	r0, [sp, #48]	; 0x30
   2dda4:	b	2ddbc <ReadCompressedDataSlabN+0x4378>
   2dda8:	ldr	r0, [sp, #48]	; 0x30
   2ddac:	ldr	r7, [sp, #52]	; 0x34
   2ddb0:	ldr	r5, [fp, #28]
   2ddb4:	ldr	r6, [fp, #8]
   2ddb8:	mov	sl, r1
   2ddbc:	ldr	r4, [sp, #28]
   2ddc0:	ldr	r8, [r5]
   2ddc4:	mov	r1, #1
   2ddc8:	mov	r3, r6
   2ddcc:	str	r9, [sp, #24]
   2ddd0:	str	r1, [sp]
   2ddd4:	mov	r1, sl
   2ddd8:	add	r2, r0, r4, lsl #3
   2dddc:	mov	r0, r7
   2dde0:	bl	114c0 <ReadCompressedUInt64Data>
   2dde4:	ldr	r1, [fp, #24]
   2dde8:	cmp	r8, #2
   2ddec:	blt	2de74 <ReadCompressedDataSlabN+0x4430>
   2ddf0:	ldr	r0, [sp, #12]
   2ddf4:	ldr	r9, [sp, #24]
   2ddf8:	add	r6, r0, r4, lsl #3
   2ddfc:	mov	r4, #0
   2de00:	ldr	r0, [r1]
   2de04:	ldr	sl, [fp, #8]
   2de08:	ldr	r5, [sp, #52]	; 0x34
   2de0c:	add	r8, sp, #56	; 0x38
   2de10:	mov	r1, r8
   2de14:	sub	r3, r0, #1
   2de18:	mov	r0, r5
   2de1c:	mov	r2, sl
   2de20:	bl	28dc <InflateSkipData>
   2de24:	ldr	r0, [fp, #28]
   2de28:	ldr	r3, [fp, #8]
   2de2c:	mov	r1, r8
   2de30:	mov	r2, r6
   2de34:	ldr	sl, [r0]
   2de38:	ldr	r0, [fp, #24]
   2de3c:	ldr	r7, [r0]
   2de40:	mov	r0, #1
   2de44:	str	r0, [sp]
   2de48:	mov	r0, r5
   2de4c:	bl	114c0 <ReadCompressedUInt64Data>
   2de50:	ldr	r1, [fp, #24]
   2de54:	ldr	r5, [fp, #28]
   2de58:	add	r4, r4, #1
   2de5c:	sub	r0, sl, #1
   2de60:	add	r9, r7, r9
   2de64:	add	r6, r6, #8
   2de68:	cmp	r4, r0
   2de6c:	blt	2de00 <ReadCompressedDataSlabN+0x43bc>
   2de70:	b	2de78 <ReadCompressedDataSlabN+0x4434>
   2de74:	ldr	r9, [sp, #24]
   2de78:	ldr	r0, [fp, #16]
   2de7c:	ldr	r2, [r5]
   2de80:	ldr	r1, [r1]
   2de84:	ldr	r0, [r0]
   2de88:	sub	r2, r2, #1
   2de8c:	mls	r0, r2, r1, r0
   2de90:	ldr	r1, [fp, #20]
   2de94:	ldr	r2, [fp, #8]
   2de98:	ldr	r1, [r1]
   2de9c:	sub	r4, r0, r1
   2dea0:	ldr	r0, [sp, #52]	; 0x34
   2dea4:	add	r1, sp, #56	; 0x38
   2dea8:	sub	r3, r4, #1
   2deac:	bl	28dc <InflateSkipData>
   2deb0:	ldr	r0, [fp, #12]
   2deb4:	add	r9, r4, r9
   2deb8:	cmp	r0, #2
   2debc:	blt	2dd48 <ReadCompressedDataSlabN+0x4304>
   2dec0:	ldr	sl, [sp, #16]
   2dec4:	ldr	r8, [sp, #20]
   2dec8:	ldr	r3, [sp, #40]	; 0x28
   2decc:	ldr	r7, [sp, #36]	; 0x24
   2ded0:	mov	r6, #0
   2ded4:	b	2df38 <ReadCompressedDataSlabN+0x44f4>
   2ded8:	add	r2, sp, #112	; 0x70
   2dedc:	ldr	r3, [r7, r6]
   2dee0:	sub	r0, r0, r1
   2dee4:	add	r1, sp, #56	; 0x38
   2dee8:	mov	r4, r2
   2deec:	ldr	r2, [r2, r6]
   2def0:	mla	r3, r3, r2, r0
   2def4:	ldr	r0, [sp, #52]	; 0x34
   2def8:	ldr	r2, [fp, #8]
   2defc:	bl	28dc <InflateSkipData>
   2df00:	ldr	r3, [sp, #40]	; 0x28
   2df04:	ldr	r7, [sp, #36]	; 0x24
   2df08:	ldr	r0, [r3, r6]
   2df0c:	ldr	r2, [r7, r6]
   2df10:	sdiv	r1, r9, r0
   2df14:	mul	r1, r1, r0
   2df18:	add	r0, r0, r9
   2df1c:	sub	r1, r1, r9
   2df20:	add	r0, r0, r1
   2df24:	ldr	r1, [r4, r6]
   2df28:	mla	r9, r2, r1, r0
   2df2c:	subs	sl, sl, #1
   2df30:	add	r6, r6, #4
   2df34:	beq	2dd48 <ReadCompressedDataSlabN+0x4304>
   2df38:	ldr	r0, [r8, r6]
   2df3c:	ldr	r1, [sp, #44]	; 0x2c
   2df40:	add	r0, r0, #1
   2df44:	str	r0, [r8, r6]
   2df48:	ldr	r1, [r1, r6]
   2df4c:	sdiv	r2, r0, r1
   2df50:	mls	r0, r2, r1, r0
   2df54:	cmp	r0, #0
   2df58:	bne	2dfc8 <ReadCompressedDataSlabN+0x4584>
   2df5c:	mov	r0, #0
   2df60:	str	r0, [r8, r6]
   2df64:	ldr	r0, [r3, r6]
   2df68:	sdiv	r1, r9, r0
   2df6c:	mls	r1, r1, r0, r9
   2df70:	cmp	r1, #0
   2df74:	bne	2ded8 <ReadCompressedDataSlabN+0x4494>
   2df78:	ldr	r0, [r7, r6]
   2df7c:	cmp	r0, #0
   2df80:	beq	2df2c <ReadCompressedDataSlabN+0x44e8>
   2df84:	add	r1, sp, #112	; 0x70
   2df88:	ldr	r2, [fp, #8]
   2df8c:	mov	r4, r1
   2df90:	ldr	r1, [r1, r6]
   2df94:	mul	r3, r1, r0
   2df98:	ldr	r0, [sp, #52]	; 0x34
   2df9c:	add	r1, sp, #56	; 0x38
   2dfa0:	bl	28dc <InflateSkipData>
   2dfa4:	ldr	r7, [sp, #36]	; 0x24
   2dfa8:	ldr	r0, [r4, r6]
   2dfac:	ldr	r3, [sp, #40]	; 0x28
   2dfb0:	ldr	r1, [r7, r6]
   2dfb4:	mla	r9, r1, r0, r9
   2dfb8:	subs	sl, sl, #1
   2dfbc:	add	r6, r6, #4
   2dfc0:	bne	2df38 <ReadCompressedDataSlabN+0x44f4>
   2dfc4:	b	2dd48 <ReadCompressedDataSlabN+0x4304>
   2dfc8:	ldr	r0, [sp, #8]
   2dfcc:	ldr	r6, [r0, r6]
   2dfd0:	cmp	r6, #0
   2dfd4:	beq	2dd48 <ReadCompressedDataSlabN+0x4304>
   2dfd8:	ldr	r0, [sp, #52]	; 0x34
   2dfdc:	ldr	r2, [fp, #8]
   2dfe0:	add	r1, sp, #56	; 0x38
   2dfe4:	mov	r3, r6
   2dfe8:	bl	28dc <InflateSkipData>
   2dfec:	add	r9, r6, r9
   2dff0:	b	2dd48 <ReadCompressedDataSlabN+0x4304>
   2dff4:	ldr	r0, [sp, #28]
   2dff8:	cmp	r0, #1
   2dffc:	blt	2e320 <ReadCompressedDataSlabN+0x48dc>
   2e000:	sub	r0, fp, #112	; 0x70
   2e004:	add	lr, sl, #4
   2e008:	mov	r6, #1
   2e00c:	add	r5, sp, #56	; 0x38
   2e010:	mov	r4, #0
   2e014:	orr	r8, r0, #4
   2e018:	ldr	r0, [fp, #28]
   2e01c:	str	lr, [sp, #32]
   2e020:	str	r8, [sp, #20]
   2e024:	add	r0, r0, #4
   2e028:	str	r0, [sp, #40]	; 0x28
   2e02c:	add	r0, sp, #112	; 0x70
   2e030:	orr	ip, r0, #4
   2e034:	ldr	r0, [fp, #12]
   2e038:	str	ip, [sp, #36]	; 0x24
   2e03c:	sub	r0, r0, #1
   2e040:	str	r0, [sp, #16]
   2e044:	sub	r0, fp, #72	; 0x48
   2e048:	orr	r0, r0, #4
   2e04c:	str	r0, [sp, #8]
   2e050:	ldr	r0, [sp, #48]	; 0x30
   2e054:	add	r0, r0, #8
   2e058:	str	r0, [sp, #12]
   2e05c:	ldr	r3, [sl]
   2e060:	cmp	r3, #0
   2e064:	bne	2e0a0 <ReadCompressedDataSlabN+0x465c>
   2e068:	b	2e0d4 <ReadCompressedDataSlabN+0x4690>
   2e06c:	ldr	r0, [fp, #28]
   2e070:	ldr	r4, [sp, #24]
   2e074:	mov	r6, #1
   2e078:	add	r5, sp, #56	; 0x38
   2e07c:	str	r3, [sp, #44]	; 0x2c
   2e080:	ldr	r0, [r0]
   2e084:	add	r4, r0, r4
   2e088:	ldr	r0, [sp, #28]
   2e08c:	cmp	r4, r0
   2e090:	bge	2e320 <ReadCompressedDataSlabN+0x48dc>
   2e094:	ldr	r3, [sl]
   2e098:	cmp	r3, #0
   2e09c:	beq	2e0d4 <ReadCompressedDataSlabN+0x4690>
   2e0a0:	ldr	sl, [sp, #52]	; 0x34
   2e0a4:	ldr	r9, [fp, #8]
   2e0a8:	mov	r1, r5
   2e0ac:	mov	r0, sl
   2e0b0:	mov	r2, r9
   2e0b4:	bl	28dc <InflateSkipData>
   2e0b8:	ldr	r0, [fp, #20]
   2e0bc:	ldr	r1, [sp, #44]	; 0x2c
   2e0c0:	ldr	r0, [r0]
   2e0c4:	add	r1, r0, r1
   2e0c8:	ldr	r0, [fp, #28]
   2e0cc:	str	r1, [sp, #44]	; 0x2c
   2e0d0:	b	2e0e0 <ReadCompressedDataSlabN+0x469c>
   2e0d4:	ldr	sl, [sp, #52]	; 0x34
   2e0d8:	ldr	r0, [fp, #28]
   2e0dc:	ldr	r9, [fp, #8]
   2e0e0:	mov	r1, r5
   2e0e4:	ldr	r5, [r0]
   2e0e8:	ldr	r0, [sp, #48]	; 0x30
   2e0ec:	mov	r3, r9
   2e0f0:	str	r6, [sp]
   2e0f4:	add	r2, r0, r4, lsl #3
   2e0f8:	mov	r0, sl
   2e0fc:	bl	65fc <ReadCompressedDoubleData>
   2e100:	cmp	r5, #2
   2e104:	str	r4, [sp, #24]
   2e108:	blt	2e188 <ReadCompressedDataSlabN+0x4744>
   2e10c:	ldr	r0, [sp, #12]
   2e110:	mov	r5, #0
   2e114:	add	r6, r0, r4, lsl #3
   2e118:	ldr	r4, [sp, #44]	; 0x2c
   2e11c:	ldr	r8, [fp, #24]
   2e120:	ldr	r7, [sp, #52]	; 0x34
   2e124:	add	sl, sp, #56	; 0x38
   2e128:	mov	r2, r9
   2e12c:	mov	r1, sl
   2e130:	ldr	r0, [r8]
   2e134:	sub	r3, r0, #1
   2e138:	mov	r0, r7
   2e13c:	bl	28dc <InflateSkipData>
   2e140:	ldr	r0, [fp, #28]
   2e144:	ldr	r3, [fp, #8]
   2e148:	ldr	r8, [r8]
   2e14c:	mov	r1, sl
   2e150:	mov	r2, r6
   2e154:	ldr	r9, [r0]
   2e158:	mov	r0, #1
   2e15c:	str	r0, [sp]
   2e160:	mov	r0, r7
   2e164:	bl	65fc <ReadCompressedDoubleData>
   2e168:	sub	r0, r9, #1
   2e16c:	ldr	r9, [fp, #8]
   2e170:	add	r5, r5, #1
   2e174:	add	r4, r8, r4
   2e178:	add	r6, r6, #8
   2e17c:	cmp	r5, r0
   2e180:	blt	2e11c <ReadCompressedDataSlabN+0x46d8>
   2e184:	b	2e18c <ReadCompressedDataSlabN+0x4748>
   2e188:	ldr	r4, [sp, #44]	; 0x2c
   2e18c:	ldr	r2, [fp, #28]
   2e190:	ldr	r0, [fp, #16]
   2e194:	ldr	r1, [fp, #24]
   2e198:	ldr	sl, [fp, #20]
   2e19c:	ldr	r2, [r2]
   2e1a0:	ldr	r0, [r0]
   2e1a4:	ldr	r1, [r1]
   2e1a8:	sub	r2, r2, #1
   2e1ac:	mls	r0, r2, r1, r0
   2e1b0:	ldr	r1, [sl]
   2e1b4:	mov	r2, r9
   2e1b8:	sub	r5, r0, r1
   2e1bc:	ldr	r0, [sp, #52]	; 0x34
   2e1c0:	add	r1, sp, #56	; 0x38
   2e1c4:	sub	r3, r5, #1
   2e1c8:	bl	28dc <InflateSkipData>
   2e1cc:	ldr	r0, [fp, #12]
   2e1d0:	add	r4, r5, r4
   2e1d4:	mov	r3, r4
   2e1d8:	cmp	r0, #2
   2e1dc:	blt	2e06c <ReadCompressedDataSlabN+0x4628>
   2e1e0:	ldr	r5, [sp, #16]
   2e1e4:	ldr	r8, [sp, #20]
   2e1e8:	ldr	ip, [sp, #36]	; 0x24
   2e1ec:	ldr	lr, [sp, #32]
   2e1f0:	add	r4, sp, #112	; 0x70
   2e1f4:	mov	r6, #0
   2e1f8:	mov	r7, r4
   2e1fc:	b	2e25c <ReadCompressedDataSlabN+0x4818>
   2e200:	mov	r4, r3
   2e204:	ldr	r2, [r7, r6]
   2e208:	ldr	r3, [lr, r6]
   2e20c:	sub	r0, r0, r1
   2e210:	add	r1, sp, #56	; 0x38
   2e214:	mla	r3, r3, r2, r0
   2e218:	ldr	r0, [sp, #52]	; 0x34
   2e21c:	mov	r2, r9
   2e220:	bl	28dc <InflateSkipData>
   2e224:	ldr	ip, [sp, #36]	; 0x24
   2e228:	ldr	lr, [sp, #32]
   2e22c:	ldr	r0, [ip, r6]
   2e230:	ldr	r2, [lr, r6]
   2e234:	sdiv	r1, r4, r0
   2e238:	mul	r1, r1, r0
   2e23c:	add	r0, r0, r4
   2e240:	sub	r1, r1, r4
   2e244:	add	r0, r0, r1
   2e248:	ldr	r1, [r7, r6]
   2e24c:	mla	r3, r2, r1, r0
   2e250:	subs	r5, r5, #1
   2e254:	add	r6, r6, #4
   2e258:	beq	2e06c <ReadCompressedDataSlabN+0x4628>
   2e25c:	ldr	r0, [r8, r6]
   2e260:	ldr	r1, [sp, #40]	; 0x28
   2e264:	add	r0, r0, #1
   2e268:	str	r0, [r8, r6]
   2e26c:	ldr	r1, [r1, r6]
   2e270:	sdiv	r2, r0, r1
   2e274:	mls	r0, r2, r1, r0
   2e278:	cmp	r0, #0
   2e27c:	bne	2e2ec <ReadCompressedDataSlabN+0x48a8>
   2e280:	mov	r0, #0
   2e284:	str	r0, [r8, r6]
   2e288:	ldr	r0, [ip, r6]
   2e28c:	sdiv	r1, r3, r0
   2e290:	mls	r1, r1, r0, r3
   2e294:	cmp	r1, #0
   2e298:	bne	2e200 <ReadCompressedDataSlabN+0x47bc>
   2e29c:	ldr	r0, [lr, r6]
   2e2a0:	cmp	r0, #0
   2e2a4:	beq	2e250 <ReadCompressedDataSlabN+0x480c>
   2e2a8:	ldr	r1, [r7, r6]
   2e2ac:	mov	r4, r3
   2e2b0:	mov	r2, r9
   2e2b4:	mul	r3, r1, r0
   2e2b8:	ldr	r0, [sp, #52]	; 0x34
   2e2bc:	add	r1, sp, #56	; 0x38
   2e2c0:	bl	28dc <InflateSkipData>
   2e2c4:	ldr	lr, [sp, #32]
   2e2c8:	ldr	r0, [r7, r6]
   2e2cc:	ldr	ip, [sp, #36]	; 0x24
   2e2d0:	mov	r3, r4
   2e2d4:	ldr	r1, [lr, r6]
   2e2d8:	mla	r3, r1, r0, r4
   2e2dc:	subs	r5, r5, #1
   2e2e0:	add	r6, r6, #4
   2e2e4:	bne	2e25c <ReadCompressedDataSlabN+0x4818>
   2e2e8:	b	2e06c <ReadCompressedDataSlabN+0x4628>
   2e2ec:	ldr	r0, [sp, #8]
   2e2f0:	ldr	r6, [r0, r6]
   2e2f4:	cmp	r6, #0
   2e2f8:	beq	2e06c <ReadCompressedDataSlabN+0x4628>
   2e2fc:	ldr	r0, [sp, #52]	; 0x34
   2e300:	mov	r4, r3
   2e304:	add	r1, sp, #56	; 0x38
   2e308:	mov	r2, r9
   2e30c:	mov	r3, r6
   2e310:	bl	28dc <InflateSkipData>
   2e314:	mov	r3, r4
   2e318:	add	r3, r6, r4
   2e31c:	b	2e06c <ReadCompressedDataSlabN+0x4628>
   2e320:	add	r0, sp, #56	; 0x38
   2e324:	bl	193c <inflateEnd@plt>
   2e328:	mov	r0, #0
   2e32c:	sub	sp, fp, #28
   2e330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e334 <ReadDataSlab1>:
   2e334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e338:	add	fp, sp, #28
   2e33c:	sub	sp, sp, #4
   2e340:	mov	sl, r0
   2e344:	mov	r0, r3
   2e348:	mov	r8, r3
   2e34c:	mov	r4, r2
   2e350:	mov	r5, r1
   2e354:	bl	1924 <Mat_SizeOf@plt>
   2e358:	mov	r6, r0
   2e35c:	ldr	r0, [fp, #8]
   2e360:	mov	r2, #1
   2e364:	mul	r1, r6, r0
   2e368:	ldr	r0, [sl]
   2e36c:	bl	1a2c <fseek@plt>
   2e370:	sub	r0, r4, #6
   2e374:	mov	r4, #0
   2e378:	cmp	r0, #9
   2e37c:	bhi	2e6e0 <ReadDataSlab1+0x3ac>
   2e380:	ldr	r1, [fp, #12]
   2e384:	sub	r1, r1, #1
   2e388:	mul	r9, r6, r1
   2e38c:	ldr	r6, [fp, #16]
   2e390:	add	r1, pc, #4
   2e394:	ldr	r0, [r1, r0, lsl #2]
   2e398:	add	pc, r1, r0
   2e39c:	.word	0x00000028
   2e3a0:	.word	0x00000078
   2e3a4:	.word	0x000000c8
   2e3a8:	.word	0x00000118
   2e3ac:	.word	0x00000168
   2e3b0:	.word	0x000001b8
   2e3b4:	.word	0x00000208
   2e3b8:	.word	0x00000258
   2e3bc:	.word	0x000002a8
   2e3c0:	.word	0x000002f8
   2e3c4:	cmp	r9, #0
   2e3c8:	beq	2e6ec <ReadDataSlab1+0x3b8>
   2e3cc:	cmp	r6, #1
   2e3d0:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e3d4:	mov	r4, #0
   2e3d8:	mov	r0, sl
   2e3dc:	mov	r1, r5
   2e3e0:	mov	r2, r8
   2e3e4:	mov	r3, #1
   2e3e8:	bl	3a8c <ReadDoubleData>
   2e3ec:	mov	r7, r0
   2e3f0:	ldr	r0, [sl]
   2e3f4:	mov	r1, r9
   2e3f8:	mov	r2, #1
   2e3fc:	bl	1a2c <fseek@plt>
   2e400:	add	r4, r7, r4
   2e404:	add	r5, r5, #8
   2e408:	subs	r6, r6, #1
   2e40c:	bne	2e3d8 <ReadDataSlab1+0xa4>
   2e410:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e414:	cmp	r9, #0
   2e418:	beq	2e708 <ReadDataSlab1+0x3d4>
   2e41c:	cmp	r6, #1
   2e420:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e424:	mov	r4, #0
   2e428:	mov	r0, sl
   2e42c:	mov	r1, r5
   2e430:	mov	r2, r8
   2e434:	mov	r3, #1
   2e438:	bl	8d54 <ReadSingleData>
   2e43c:	mov	r7, r0
   2e440:	ldr	r0, [sl]
   2e444:	mov	r1, r9
   2e448:	mov	r2, #1
   2e44c:	bl	1a2c <fseek@plt>
   2e450:	add	r4, r7, r4
   2e454:	add	r5, r5, #4
   2e458:	subs	r6, r6, #1
   2e45c:	bne	2e428 <ReadDataSlab1+0xf4>
   2e460:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e464:	cmp	r9, #0
   2e468:	beq	2e724 <ReadDataSlab1+0x3f0>
   2e46c:	cmp	r6, #1
   2e470:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e474:	mov	r4, #0
   2e478:	mov	r0, sl
   2e47c:	mov	r1, r5
   2e480:	mov	r2, r8
   2e484:	mov	r3, #1
   2e488:	bl	1f358 <ReadInt8Data>
   2e48c:	mov	r7, r0
   2e490:	ldr	r0, [sl]
   2e494:	mov	r1, r9
   2e498:	mov	r2, #1
   2e49c:	bl	1a2c <fseek@plt>
   2e4a0:	add	r4, r7, r4
   2e4a4:	add	r5, r5, #1
   2e4a8:	subs	r6, r6, #1
   2e4ac:	bne	2e478 <ReadDataSlab1+0x144>
   2e4b0:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e4b4:	cmp	r9, #0
   2e4b8:	beq	2e740 <ReadDataSlab1+0x40c>
   2e4bc:	cmp	r6, #1
   2e4c0:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e4c4:	mov	r4, #0
   2e4c8:	mov	r0, sl
   2e4cc:	mov	r1, r5
   2e4d0:	mov	r2, r8
   2e4d4:	mov	r3, #1
   2e4d8:	bl	222e8 <ReadUInt8Data>
   2e4dc:	mov	r7, r0
   2e4e0:	ldr	r0, [sl]
   2e4e4:	mov	r1, r9
   2e4e8:	mov	r2, #1
   2e4ec:	bl	1a2c <fseek@plt>
   2e4f0:	add	r4, r7, r4
   2e4f4:	add	r5, r5, #1
   2e4f8:	subs	r6, r6, #1
   2e4fc:	bne	2e4c8 <ReadDataSlab1+0x194>
   2e500:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e504:	cmp	r9, #0
   2e508:	beq	2e75c <ReadDataSlab1+0x428>
   2e50c:	cmp	r6, #1
   2e510:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e514:	mov	r4, #0
   2e518:	mov	r0, sl
   2e51c:	mov	r1, r5
   2e520:	mov	r2, r8
   2e524:	mov	r3, #1
   2e528:	bl	192d0 <ReadInt16Data>
   2e52c:	mov	r7, r0
   2e530:	ldr	r0, [sl]
   2e534:	mov	r1, r9
   2e538:	mov	r2, #1
   2e53c:	bl	1a2c <fseek@plt>
   2e540:	add	r4, r7, r4
   2e544:	add	r5, r5, #2
   2e548:	subs	r6, r6, #1
   2e54c:	bne	2e518 <ReadDataSlab1+0x1e4>
   2e550:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e554:	cmp	r9, #0
   2e558:	beq	2e778 <ReadDataSlab1+0x444>
   2e55c:	cmp	r6, #1
   2e560:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e564:	mov	r4, #0
   2e568:	mov	r0, sl
   2e56c:	mov	r1, r5
   2e570:	mov	r2, r8
   2e574:	mov	r3, #1
   2e578:	bl	1c314 <ReadUInt16Data>
   2e57c:	mov	r7, r0
   2e580:	ldr	r0, [sl]
   2e584:	mov	r1, r9
   2e588:	mov	r2, #1
   2e58c:	bl	1a2c <fseek@plt>
   2e590:	add	r4, r7, r4
   2e594:	add	r5, r5, #2
   2e598:	subs	r6, r6, #1
   2e59c:	bne	2e568 <ReadDataSlab1+0x234>
   2e5a0:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e5a4:	cmp	r9, #0
   2e5a8:	beq	2e794 <ReadDataSlab1+0x460>
   2e5ac:	cmp	r6, #1
   2e5b0:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e5b4:	mov	r4, #0
   2e5b8:	mov	r0, sl
   2e5bc:	mov	r1, r5
   2e5c0:	mov	r2, r8
   2e5c4:	mov	r3, #1
   2e5c8:	bl	11a80 <ReadInt32Data>
   2e5cc:	mov	r7, r0
   2e5d0:	ldr	r0, [sl]
   2e5d4:	mov	r1, r9
   2e5d8:	mov	r2, #1
   2e5dc:	bl	1a2c <fseek@plt>
   2e5e0:	add	r4, r7, r4
   2e5e4:	add	r5, r5, #4
   2e5e8:	subs	r6, r6, #1
   2e5ec:	bne	2e5b8 <ReadDataSlab1+0x284>
   2e5f0:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e5f4:	cmp	r9, #0
   2e5f8:	beq	2e7b0 <ReadDataSlab1+0x47c>
   2e5fc:	cmp	r6, #1
   2e600:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e604:	mov	r4, #0
   2e608:	mov	r0, sl
   2e60c:	mov	r1, r5
   2e610:	mov	r2, r8
   2e614:	mov	r3, #1
   2e618:	bl	156a8 <ReadUInt32Data>
   2e61c:	mov	r7, r0
   2e620:	ldr	r0, [sl]
   2e624:	mov	r1, r9
   2e628:	mov	r2, #1
   2e62c:	bl	1a2c <fseek@plt>
   2e630:	add	r4, r7, r4
   2e634:	add	r5, r5, #4
   2e638:	subs	r6, r6, #1
   2e63c:	bne	2e608 <ReadDataSlab1+0x2d4>
   2e640:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e644:	cmp	r9, #0
   2e648:	beq	2e7cc <ReadDataSlab1+0x498>
   2e64c:	cmp	r6, #1
   2e650:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e654:	mov	r4, #0
   2e658:	mov	r0, sl
   2e65c:	mov	r1, r5
   2e660:	mov	r2, r8
   2e664:	mov	r3, #1
   2e668:	bl	bef0 <ReadInt64Data>
   2e66c:	mov	r7, r0
   2e670:	ldr	r0, [sl]
   2e674:	mov	r1, r9
   2e678:	mov	r2, #1
   2e67c:	bl	1a2c <fseek@plt>
   2e680:	add	r4, r7, r4
   2e684:	add	r5, r5, #8
   2e688:	subs	r6, r6, #1
   2e68c:	bne	2e658 <ReadDataSlab1+0x324>
   2e690:	b	2e6e0 <ReadDataSlab1+0x3ac>
   2e694:	cmp	r9, #0
   2e698:	beq	2e7e8 <ReadDataSlab1+0x4b4>
   2e69c:	cmp	r6, #1
   2e6a0:	blt	2e6e0 <ReadDataSlab1+0x3ac>
   2e6a4:	mov	r4, #0
   2e6a8:	mov	r0, sl
   2e6ac:	mov	r1, r5
   2e6b0:	mov	r2, r8
   2e6b4:	mov	r3, #1
   2e6b8:	bl	ecb8 <ReadUInt64Data>
   2e6bc:	mov	r7, r0
   2e6c0:	ldr	r0, [sl]
   2e6c4:	mov	r1, r9
   2e6c8:	mov	r2, #1
   2e6cc:	bl	1a2c <fseek@plt>
   2e6d0:	add	r4, r7, r4
   2e6d4:	add	r5, r5, #8
   2e6d8:	subs	r6, r6, #1
   2e6dc:	bne	2e6a8 <ReadDataSlab1+0x374>
   2e6e0:	mov	r0, r4
   2e6e4:	sub	sp, fp, #28
   2e6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e6ec:	mov	r0, sl
   2e6f0:	mov	r1, r5
   2e6f4:	mov	r2, r8
   2e6f8:	mov	r3, r6
   2e6fc:	sub	sp, fp, #28
   2e700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e704:	b	3a8c <ReadDoubleData>
   2e708:	mov	r0, sl
   2e70c:	mov	r1, r5
   2e710:	mov	r2, r8
   2e714:	mov	r3, r6
   2e718:	sub	sp, fp, #28
   2e71c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e720:	b	8d54 <ReadSingleData>
   2e724:	mov	r0, sl
   2e728:	mov	r1, r5
   2e72c:	mov	r2, r8
   2e730:	mov	r3, r6
   2e734:	sub	sp, fp, #28
   2e738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e73c:	b	1f358 <ReadInt8Data>
   2e740:	mov	r0, sl
   2e744:	mov	r1, r5
   2e748:	mov	r2, r8
   2e74c:	mov	r3, r6
   2e750:	sub	sp, fp, #28
   2e754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e758:	b	222e8 <ReadUInt8Data>
   2e75c:	mov	r0, sl
   2e760:	mov	r1, r5
   2e764:	mov	r2, r8
   2e768:	mov	r3, r6
   2e76c:	sub	sp, fp, #28
   2e770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e774:	b	192d0 <ReadInt16Data>
   2e778:	mov	r0, sl
   2e77c:	mov	r1, r5
   2e780:	mov	r2, r8
   2e784:	mov	r3, r6
   2e788:	sub	sp, fp, #28
   2e78c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e790:	b	1c314 <ReadUInt16Data>
   2e794:	mov	r0, sl
   2e798:	mov	r1, r5
   2e79c:	mov	r2, r8
   2e7a0:	mov	r3, r6
   2e7a4:	sub	sp, fp, #28
   2e7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7ac:	b	11a80 <ReadInt32Data>
   2e7b0:	mov	r0, sl
   2e7b4:	mov	r1, r5
   2e7b8:	mov	r2, r8
   2e7bc:	mov	r3, r6
   2e7c0:	sub	sp, fp, #28
   2e7c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7c8:	b	156a8 <ReadUInt32Data>
   2e7cc:	mov	r0, sl
   2e7d0:	mov	r1, r5
   2e7d4:	mov	r2, r8
   2e7d8:	mov	r3, r6
   2e7dc:	sub	sp, fp, #28
   2e7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7e4:	b	bef0 <ReadInt64Data>
   2e7e8:	mov	r0, sl
   2e7ec:	mov	r1, r5
   2e7f0:	mov	r2, r8
   2e7f4:	mov	r3, r6
   2e7f8:	sub	sp, fp, #28
   2e7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e800:	b	ecb8 <ReadUInt64Data>

0002e804 <ReadDataSlab2>:
   2e804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e808:	add	fp, sp, #28
   2e80c:	sub	sp, sp, #20
   2e810:	cmp	r0, #0
   2e814:	mov	r9, #0
   2e818:	movne	r5, r1
   2e81c:	cmpne	r1, #0
   2e820:	beq	2e850 <ReadDataSlab2+0x4c>
   2e824:	ldr	r4, [fp, #20]
   2e828:	cmp	r4, #0
   2e82c:	ldrne	r8, [fp, #16]
   2e830:	cmpne	r8, #0
   2e834:	beq	2e850 <ReadDataSlab2+0x4c>
   2e838:	mov	r6, r0
   2e83c:	ldr	r0, [fp, #12]
   2e840:	cmp	r0, #0
   2e844:	ldrne	r0, [r6]
   2e848:	cmpne	r0, #0
   2e84c:	bne	2e85c <ReadDataSlab2+0x58>
   2e850:	mov	r0, r9
   2e854:	sub	sp, fp, #28
   2e858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e85c:	mov	r0, r3
   2e860:	mov	sl, r3
   2e864:	mov	r7, r2
   2e868:	bl	1924 <Mat_SizeOf@plt>
   2e86c:	str	r0, [sp, #16]
   2e870:	sub	r0, r7, #6
   2e874:	cmp	r0, #9
   2e878:	bhi	2e850 <ReadDataSlab2+0x4c>
   2e87c:	add	r1, pc, #8
   2e880:	ldr	r7, [fp, #8]
   2e884:	ldr	r0, [r1, r0, lsl #2]
   2e888:	add	pc, r1, r0
   2e88c:	.word	0x00000028
   2e890:	.word	0x00000074
   2e894:	.word	0x000000c0
   2e898:	.word	0x0000010c
   2e89c:	.word	0x00000158
   2e8a0:	.word	0x000001a4
   2e8a4:	.word	0x000001f0
   2e8a8:	.word	0x0000023c
   2e8ac:	.word	0x000002d4
   2e8b0:	.word	0x00000288
   2e8b4:	ldr	r2, [r8]
   2e8b8:	cmp	r2, #1
   2e8bc:	bne	2ebac <ReadDataSlab2+0x3a8>
   2e8c0:	ldr	r1, [r7]
   2e8c4:	ldr	r0, [r4]
   2e8c8:	cmp	r0, r1
   2e8cc:	bne	2ec00 <ReadDataSlab2+0x3fc>
   2e8d0:	ldr	r1, [r8, #4]
   2e8d4:	cmp	r1, #1
   2e8d8:	bne	2ebfc <ReadDataSlab2+0x3f8>
   2e8dc:	ldr	r1, [r4, #4]
   2e8e0:	mov	r2, sl
   2e8e4:	mul	r3, r1, r0
   2e8e8:	mov	r0, r6
   2e8ec:	mov	r1, r5
   2e8f0:	bl	3a8c <ReadDoubleData>
   2e8f4:	mov	r0, r9
   2e8f8:	sub	sp, fp, #28
   2e8fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e900:	ldr	r2, [r8]
   2e904:	cmp	r2, #1
   2e908:	bne	2ebb4 <ReadDataSlab2+0x3b0>
   2e90c:	ldr	r1, [r7]
   2e910:	ldr	r0, [r4]
   2e914:	cmp	r0, r1
   2e918:	bne	2ed3c <ReadDataSlab2+0x538>
   2e91c:	ldr	r1, [r8, #4]
   2e920:	cmp	r1, #1
   2e924:	bne	2ed38 <ReadDataSlab2+0x534>
   2e928:	ldr	r1, [r4, #4]
   2e92c:	mov	r2, sl
   2e930:	mul	r3, r1, r0
   2e934:	mov	r0, r6
   2e938:	mov	r1, r5
   2e93c:	bl	8d54 <ReadSingleData>
   2e940:	mov	r0, r9
   2e944:	sub	sp, fp, #28
   2e948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e94c:	ldr	r2, [r8]
   2e950:	cmp	r2, #1
   2e954:	bne	2ebbc <ReadDataSlab2+0x3b8>
   2e958:	ldr	r1, [r7]
   2e95c:	ldr	r0, [r4]
   2e960:	cmp	r0, r1
   2e964:	bne	2ee74 <ReadDataSlab2+0x670>
   2e968:	ldr	r1, [r8, #4]
   2e96c:	cmp	r1, #1
   2e970:	bne	2ee70 <ReadDataSlab2+0x66c>
   2e974:	ldr	r1, [r4, #4]
   2e978:	mov	r2, sl
   2e97c:	mul	r3, r1, r0
   2e980:	mov	r0, r6
   2e984:	mov	r1, r5
   2e988:	bl	1f358 <ReadInt8Data>
   2e98c:	mov	r0, r9
   2e990:	sub	sp, fp, #28
   2e994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e998:	ldr	r2, [r8]
   2e99c:	cmp	r2, #1
   2e9a0:	bne	2ebc4 <ReadDataSlab2+0x3c0>
   2e9a4:	ldr	r1, [r7]
   2e9a8:	ldr	r0, [r4]
   2e9ac:	cmp	r0, r1
   2e9b0:	bne	2efac <ReadDataSlab2+0x7a8>
   2e9b4:	ldr	r1, [r8, #4]
   2e9b8:	cmp	r1, #1
   2e9bc:	bne	2efa8 <ReadDataSlab2+0x7a4>
   2e9c0:	ldr	r1, [r4, #4]
   2e9c4:	mov	r2, sl
   2e9c8:	mul	r3, r1, r0
   2e9cc:	mov	r0, r6
   2e9d0:	mov	r1, r5
   2e9d4:	bl	222e8 <ReadUInt8Data>
   2e9d8:	mov	r0, r9
   2e9dc:	sub	sp, fp, #28
   2e9e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e9e4:	ldr	r2, [r8]
   2e9e8:	cmp	r2, #1
   2e9ec:	bne	2ebcc <ReadDataSlab2+0x3c8>
   2e9f0:	ldr	r1, [r7]
   2e9f4:	ldr	r0, [r4]
   2e9f8:	cmp	r0, r1
   2e9fc:	bne	2f0e4 <ReadDataSlab2+0x8e0>
   2ea00:	ldr	r1, [r8, #4]
   2ea04:	cmp	r1, #1
   2ea08:	bne	2f0e0 <ReadDataSlab2+0x8dc>
   2ea0c:	ldr	r1, [r4, #4]
   2ea10:	mov	r2, sl
   2ea14:	mul	r3, r1, r0
   2ea18:	mov	r0, r6
   2ea1c:	mov	r1, r5
   2ea20:	bl	192d0 <ReadInt16Data>
   2ea24:	mov	r0, r9
   2ea28:	sub	sp, fp, #28
   2ea2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ea30:	ldr	r2, [r8]
   2ea34:	cmp	r2, #1
   2ea38:	bne	2ebd4 <ReadDataSlab2+0x3d0>
   2ea3c:	ldr	r1, [r7]
   2ea40:	ldr	r0, [r4]
   2ea44:	cmp	r0, r1
   2ea48:	bne	2f21c <ReadDataSlab2+0xa18>
   2ea4c:	ldr	r1, [r8, #4]
   2ea50:	cmp	r1, #1
   2ea54:	bne	2f218 <ReadDataSlab2+0xa14>
   2ea58:	ldr	r1, [r4, #4]
   2ea5c:	mov	r2, sl
   2ea60:	mul	r3, r1, r0
   2ea64:	mov	r0, r6
   2ea68:	mov	r1, r5
   2ea6c:	bl	1c314 <ReadUInt16Data>
   2ea70:	mov	r0, r9
   2ea74:	sub	sp, fp, #28
   2ea78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ea7c:	ldr	r2, [r8]
   2ea80:	cmp	r2, #1
   2ea84:	bne	2ebdc <ReadDataSlab2+0x3d8>
   2ea88:	ldr	r1, [r7]
   2ea8c:	ldr	r0, [r4]
   2ea90:	cmp	r0, r1
   2ea94:	bne	2f354 <ReadDataSlab2+0xb50>
   2ea98:	ldr	r1, [r8, #4]
   2ea9c:	cmp	r1, #1
   2eaa0:	bne	2f350 <ReadDataSlab2+0xb4c>
   2eaa4:	ldr	r1, [r4, #4]
   2eaa8:	mov	r2, sl
   2eaac:	mul	r3, r1, r0
   2eab0:	mov	r0, r6
   2eab4:	mov	r1, r5
   2eab8:	bl	11a80 <ReadInt32Data>
   2eabc:	mov	r0, r9
   2eac0:	sub	sp, fp, #28
   2eac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eac8:	ldr	r2, [r8]
   2eacc:	cmp	r2, #1
   2ead0:	bne	2ebe4 <ReadDataSlab2+0x3e0>
   2ead4:	ldr	r1, [r7]
   2ead8:	ldr	r0, [r4]
   2eadc:	cmp	r0, r1
   2eae0:	bne	2f48c <ReadDataSlab2+0xc88>
   2eae4:	ldr	r1, [r8, #4]
   2eae8:	cmp	r1, #1
   2eaec:	bne	2f488 <ReadDataSlab2+0xc84>
   2eaf0:	ldr	r1, [r4, #4]
   2eaf4:	mov	r2, sl
   2eaf8:	mul	r3, r1, r0
   2eafc:	mov	r0, r6
   2eb00:	mov	r1, r5
   2eb04:	bl	156a8 <ReadUInt32Data>
   2eb08:	mov	r0, r9
   2eb0c:	sub	sp, fp, #28
   2eb10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb14:	ldr	r2, [r8]
   2eb18:	cmp	r2, #1
   2eb1c:	bne	2ebec <ReadDataSlab2+0x3e8>
   2eb20:	ldr	r1, [r7]
   2eb24:	ldr	r0, [r4]
   2eb28:	cmp	r0, r1
   2eb2c:	bne	2f5c4 <ReadDataSlab2+0xdc0>
   2eb30:	ldr	r1, [r8, #4]
   2eb34:	cmp	r1, #1
   2eb38:	bne	2f5c0 <ReadDataSlab2+0xdbc>
   2eb3c:	ldr	r1, [r4, #4]
   2eb40:	mov	r2, sl
   2eb44:	mul	r3, r1, r0
   2eb48:	mov	r0, r6
   2eb4c:	mov	r1, r5
   2eb50:	bl	ecb8 <ReadUInt64Data>
   2eb54:	mov	r0, r9
   2eb58:	sub	sp, fp, #28
   2eb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb60:	ldr	r2, [r8]
   2eb64:	cmp	r2, #1
   2eb68:	bne	2ebf4 <ReadDataSlab2+0x3f0>
   2eb6c:	ldr	r1, [r7]
   2eb70:	ldr	r0, [r4]
   2eb74:	cmp	r0, r1
   2eb78:	bne	2f6fc <ReadDataSlab2+0xef8>
   2eb7c:	ldr	r1, [r8, #4]
   2eb80:	cmp	r1, #1
   2eb84:	bne	2f6f8 <ReadDataSlab2+0xef4>
   2eb88:	ldr	r1, [r4, #4]
   2eb8c:	mov	r2, sl
   2eb90:	mul	r3, r1, r0
   2eb94:	mov	r0, r6
   2eb98:	mov	r1, r5
   2eb9c:	bl	bef0 <ReadInt64Data>
   2eba0:	mov	r0, r9
   2eba4:	sub	sp, fp, #28
   2eba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ebac:	ldr	r1, [r7]
   2ebb0:	b	2ec00 <ReadDataSlab2+0x3fc>
   2ebb4:	ldr	r1, [r7]
   2ebb8:	b	2ed3c <ReadDataSlab2+0x538>
   2ebbc:	ldr	r1, [r7]
   2ebc0:	b	2ee74 <ReadDataSlab2+0x670>
   2ebc4:	ldr	r1, [r7]
   2ebc8:	b	2efac <ReadDataSlab2+0x7a8>
   2ebcc:	ldr	r1, [r7]
   2ebd0:	b	2f0e4 <ReadDataSlab2+0x8e0>
   2ebd4:	ldr	r1, [r7]
   2ebd8:	b	2f21c <ReadDataSlab2+0xa18>
   2ebdc:	ldr	r1, [r7]
   2ebe0:	b	2f354 <ReadDataSlab2+0xb50>
   2ebe4:	ldr	r1, [r7]
   2ebe8:	b	2f48c <ReadDataSlab2+0xc88>
   2ebec:	ldr	r1, [r7]
   2ebf0:	b	2f5c4 <ReadDataSlab2+0xdc0>
   2ebf4:	ldr	r1, [r7]
   2ebf8:	b	2f6fc <ReadDataSlab2+0xef8>
   2ebfc:	mov	r1, r0
   2ec00:	ldr	r0, [r6]
   2ec04:	ldr	r8, [r8, #4]
   2ec08:	str	r1, [sp, #8]
   2ec0c:	str	r2, [sp, #12]
   2ec10:	bl	1840 <ftell@plt>
   2ec14:	cmn	r0, #1
   2ec18:	beq	2f830 <ReadDataSlab2+0x102c>
   2ec1c:	ldr	r0, [fp, #12]
   2ec20:	ldr	r1, [sp, #16]
   2ec24:	mov	r2, #1
   2ec28:	ldr	r0, [r0, #4]
   2ec2c:	mul	r0, r0, r1
   2ec30:	ldr	r1, [r7]
   2ec34:	mul	r1, r0, r1
   2ec38:	ldr	r0, [r6]
   2ec3c:	bl	1a2c <fseek@plt>
   2ec40:	ldr	r0, [r4, #4]
   2ec44:	cmp	r0, #1
   2ec48:	blt	2e850 <ReadDataSlab2+0x4c>
   2ec4c:	ldr	r0, [sp, #12]
   2ec50:	ldr	r1, [sp, #16]
   2ec54:	mov	r4, #0
   2ec58:	sub	r0, r0, #1
   2ec5c:	mul	r7, r0, r1
   2ec60:	mul	r0, r8, r1
   2ec64:	ldr	r1, [sp, #8]
   2ec68:	mul	r0, r0, r1
   2ec6c:	str	r0, [sp, #8]
   2ec70:	ldr	r0, [r6]
   2ec74:	bl	1840 <ftell@plt>
   2ec78:	cmn	r0, #1
   2ec7c:	beq	2f830 <ReadDataSlab2+0x102c>
   2ec80:	mov	r9, r0
   2ec84:	ldr	r0, [fp, #12]
   2ec88:	ldr	r1, [sp, #16]
   2ec8c:	mov	r2, #1
   2ec90:	str	r4, [sp, #12]
   2ec94:	ldr	r0, [r0]
   2ec98:	mul	r1, r0, r1
   2ec9c:	ldr	r0, [r6]
   2eca0:	bl	1a2c <fseek@plt>
   2eca4:	ldr	r4, [fp, #20]
   2eca8:	ldr	r0, [r4]
   2ecac:	cmp	r0, #1
   2ecb0:	blt	2ecf0 <ReadDataSlab2+0x4ec>
   2ecb4:	mov	r8, #0
   2ecb8:	mov	r0, r6
   2ecbc:	mov	r1, r5
   2ecc0:	mov	r2, sl
   2ecc4:	mov	r3, #1
   2ecc8:	bl	3a8c <ReadDoubleData>
   2eccc:	ldr	r0, [r6]
   2ecd0:	mov	r1, r7
   2ecd4:	mov	r2, #1
   2ecd8:	bl	1a2c <fseek@plt>
   2ecdc:	ldr	r0, [r4]
   2ece0:	add	r8, r8, #1
   2ece4:	add	r5, r5, #8
   2ece8:	cmp	r8, r0
   2ecec:	blt	2ecb8 <ReadDataSlab2+0x4b4>
   2ecf0:	ldr	r0, [r6]
   2ecf4:	bl	1840 <ftell@plt>
   2ecf8:	cmn	r0, #1
   2ecfc:	beq	2f830 <ReadDataSlab2+0x102c>
   2ed00:	ldr	r1, [sp, #8]
   2ed04:	mov	r2, #1
   2ed08:	add	r1, r9, r1
   2ed0c:	sub	r1, r1, r0
   2ed10:	ldr	r0, [r6]
   2ed14:	bl	1a2c <fseek@plt>
   2ed18:	mov	r0, r4
   2ed1c:	ldr	r4, [sp, #12]
   2ed20:	mov	r9, #0
   2ed24:	ldr	r0, [r0, #4]
   2ed28:	add	r4, r4, #1
   2ed2c:	cmp	r4, r0
   2ed30:	blt	2ec70 <ReadDataSlab2+0x46c>
   2ed34:	b	2e850 <ReadDataSlab2+0x4c>
   2ed38:	mov	r1, r0
   2ed3c:	ldr	r0, [r6]
   2ed40:	ldr	r8, [r8, #4]
   2ed44:	str	r1, [sp, #8]
   2ed48:	str	r2, [sp, #12]
   2ed4c:	bl	1840 <ftell@plt>
   2ed50:	cmn	r0, #1
   2ed54:	beq	2f830 <ReadDataSlab2+0x102c>
   2ed58:	ldr	r0, [fp, #12]
   2ed5c:	ldr	r1, [sp, #16]
   2ed60:	mov	r2, #1
   2ed64:	ldr	r0, [r0, #4]
   2ed68:	mul	r0, r0, r1
   2ed6c:	ldr	r1, [r7]
   2ed70:	mul	r1, r0, r1
   2ed74:	ldr	r0, [r6]
   2ed78:	bl	1a2c <fseek@plt>
   2ed7c:	ldr	r0, [r4, #4]
   2ed80:	cmp	r0, #1
   2ed84:	blt	2e850 <ReadDataSlab2+0x4c>
   2ed88:	ldr	r0, [sp, #12]
   2ed8c:	ldr	r1, [sp, #16]
   2ed90:	mov	r4, #0
   2ed94:	sub	r0, r0, #1
   2ed98:	mul	r7, r0, r1
   2ed9c:	mul	r0, r8, r1
   2eda0:	ldr	r1, [sp, #8]
   2eda4:	mul	r0, r0, r1
   2eda8:	str	r0, [sp, #4]
   2edac:	ldr	r0, [r6]
   2edb0:	bl	1840 <ftell@plt>
   2edb4:	cmn	r0, #1
   2edb8:	beq	2f830 <ReadDataSlab2+0x102c>
   2edbc:	str	r0, [sp, #8]
   2edc0:	ldr	r0, [fp, #12]
   2edc4:	ldr	r1, [sp, #16]
   2edc8:	mov	r2, #1
   2edcc:	str	r4, [sp, #12]
   2edd0:	ldr	r0, [r0]
   2edd4:	mul	r1, r0, r1
   2edd8:	ldr	r0, [r6]
   2eddc:	bl	1a2c <fseek@plt>
   2ede0:	ldr	r9, [fp, #20]
   2ede4:	ldr	r0, [r9]
   2ede8:	cmp	r0, #1
   2edec:	blt	2ee2c <ReadDataSlab2+0x628>
   2edf0:	mov	r8, #0
   2edf4:	mov	r0, r6
   2edf8:	mov	r1, r5
   2edfc:	mov	r2, sl
   2ee00:	mov	r3, #1
   2ee04:	bl	8d54 <ReadSingleData>
   2ee08:	ldr	r0, [r6]
   2ee0c:	mov	r1, r7
   2ee10:	mov	r2, #1
   2ee14:	bl	1a2c <fseek@plt>
   2ee18:	ldr	r0, [r9]
   2ee1c:	add	r8, r8, #1
   2ee20:	add	r5, r5, #4
   2ee24:	cmp	r8, r0
   2ee28:	blt	2edf4 <ReadDataSlab2+0x5f0>
   2ee2c:	ldr	r0, [r6]
   2ee30:	bl	1840 <ftell@plt>
   2ee34:	cmn	r0, #1
   2ee38:	beq	2f830 <ReadDataSlab2+0x102c>
   2ee3c:	ldmib	sp, {r1, r2}
   2ee40:	add	r1, r2, r1
   2ee44:	mov	r2, #1
   2ee48:	sub	r1, r1, r0
   2ee4c:	ldr	r0, [r6]
   2ee50:	bl	1a2c <fseek@plt>
   2ee54:	ldr	r4, [sp, #12]
   2ee58:	ldr	r0, [r9, #4]
   2ee5c:	mov	r9, #0
   2ee60:	add	r4, r4, #1
   2ee64:	cmp	r4, r0
   2ee68:	blt	2edac <ReadDataSlab2+0x5a8>
   2ee6c:	b	2e850 <ReadDataSlab2+0x4c>
   2ee70:	mov	r1, r0
   2ee74:	ldr	r0, [r6]
   2ee78:	ldr	r8, [r8, #4]
   2ee7c:	str	r1, [sp, #8]
   2ee80:	str	r2, [sp, #12]
   2ee84:	bl	1840 <ftell@plt>
   2ee88:	cmn	r0, #1
   2ee8c:	beq	2f830 <ReadDataSlab2+0x102c>
   2ee90:	ldr	r0, [fp, #12]
   2ee94:	ldr	r1, [sp, #16]
   2ee98:	mov	r2, #1
   2ee9c:	ldr	r0, [r0, #4]
   2eea0:	mul	r0, r0, r1
   2eea4:	ldr	r1, [r7]
   2eea8:	mul	r1, r0, r1
   2eeac:	ldr	r0, [r6]
   2eeb0:	bl	1a2c <fseek@plt>
   2eeb4:	ldr	r0, [r4, #4]
   2eeb8:	cmp	r0, #1
   2eebc:	blt	2e850 <ReadDataSlab2+0x4c>
   2eec0:	ldr	r0, [sp, #12]
   2eec4:	ldr	r1, [sp, #16]
   2eec8:	sub	r0, r0, #1
   2eecc:	mul	r7, r0, r1
   2eed0:	mul	r0, r8, r1
   2eed4:	ldr	r1, [sp, #8]
   2eed8:	mov	r8, #0
   2eedc:	mul	r0, r0, r1
   2eee0:	str	r0, [sp, #8]
   2eee4:	ldr	r0, [r6]
   2eee8:	bl	1840 <ftell@plt>
   2eeec:	cmn	r0, #1
   2eef0:	beq	2f830 <ReadDataSlab2+0x102c>
   2eef4:	mov	r9, r0
   2eef8:	ldr	r0, [fp, #12]
   2eefc:	ldr	r1, [sp, #16]
   2ef00:	mov	r2, #1
   2ef04:	ldr	r0, [r0]
   2ef08:	mul	r1, r0, r1
   2ef0c:	ldr	r0, [r6]
   2ef10:	bl	1a2c <fseek@plt>
   2ef14:	ldr	r4, [fp, #20]
   2ef18:	ldr	r0, [r4]
   2ef1c:	cmp	r0, #1
   2ef20:	blt	2ef68 <ReadDataSlab2+0x764>
   2ef24:	str	r8, [sp, #12]
   2ef28:	mov	r8, #0
   2ef2c:	add	r1, r5, r8
   2ef30:	mov	r0, r6
   2ef34:	mov	r2, sl
   2ef38:	mov	r3, #1
   2ef3c:	bl	1f358 <ReadInt8Data>
   2ef40:	ldr	r0, [r6]
   2ef44:	mov	r1, r7
   2ef48:	mov	r2, #1
   2ef4c:	bl	1a2c <fseek@plt>
   2ef50:	ldr	r0, [r4]
   2ef54:	add	r8, r8, #1
   2ef58:	cmp	r8, r0
   2ef5c:	blt	2ef2c <ReadDataSlab2+0x728>
   2ef60:	add	r5, r5, r8
   2ef64:	ldr	r8, [sp, #12]
   2ef68:	ldr	r0, [r6]
   2ef6c:	bl	1840 <ftell@plt>
   2ef70:	cmn	r0, #1
   2ef74:	beq	2f830 <ReadDataSlab2+0x102c>
   2ef78:	ldr	r1, [sp, #8]
   2ef7c:	mov	r2, #1
   2ef80:	add	r1, r9, r1
   2ef84:	sub	r1, r1, r0
   2ef88:	ldr	r0, [r6]
   2ef8c:	bl	1a2c <fseek@plt>
   2ef90:	ldr	r0, [r4, #4]
   2ef94:	add	r8, r8, #1
   2ef98:	mov	r9, #0
   2ef9c:	cmp	r8, r0
   2efa0:	blt	2eee4 <ReadDataSlab2+0x6e0>
   2efa4:	b	2e850 <ReadDataSlab2+0x4c>
   2efa8:	mov	r1, r0
   2efac:	ldr	r0, [r6]
   2efb0:	ldr	r8, [r8, #4]
   2efb4:	str	r1, [sp, #8]
   2efb8:	str	r2, [sp, #12]
   2efbc:	bl	1840 <ftell@plt>
   2efc0:	cmn	r0, #1
   2efc4:	beq	2f830 <ReadDataSlab2+0x102c>
   2efc8:	ldr	r0, [fp, #12]
   2efcc:	ldr	r1, [sp, #16]
   2efd0:	mov	r2, #1
   2efd4:	ldr	r0, [r0, #4]
   2efd8:	mul	r0, r0, r1
   2efdc:	ldr	r1, [r7]
   2efe0:	mul	r1, r0, r1
   2efe4:	ldr	r0, [r6]
   2efe8:	bl	1a2c <fseek@plt>
   2efec:	ldr	r0, [r4, #4]
   2eff0:	cmp	r0, #1
   2eff4:	blt	2e850 <ReadDataSlab2+0x4c>
   2eff8:	ldr	r0, [sp, #12]
   2effc:	ldr	r1, [sp, #16]
   2f000:	sub	r0, r0, #1
   2f004:	mul	r7, r0, r1
   2f008:	mul	r0, r8, r1
   2f00c:	ldr	r1, [sp, #8]
   2f010:	mov	r8, #0
   2f014:	mul	r0, r0, r1
   2f018:	str	r0, [sp, #8]
   2f01c:	ldr	r0, [r6]
   2f020:	bl	1840 <ftell@plt>
   2f024:	cmn	r0, #1
   2f028:	beq	2f830 <ReadDataSlab2+0x102c>
   2f02c:	mov	r9, r0
   2f030:	ldr	r0, [fp, #12]
   2f034:	ldr	r1, [sp, #16]
   2f038:	mov	r2, #1
   2f03c:	ldr	r0, [r0]
   2f040:	mul	r1, r0, r1
   2f044:	ldr	r0, [r6]
   2f048:	bl	1a2c <fseek@plt>
   2f04c:	ldr	r4, [fp, #20]
   2f050:	ldr	r0, [r4]
   2f054:	cmp	r0, #1
   2f058:	blt	2f0a0 <ReadDataSlab2+0x89c>
   2f05c:	str	r8, [sp, #12]
   2f060:	mov	r8, #0
   2f064:	add	r1, r5, r8
   2f068:	mov	r0, r6
   2f06c:	mov	r2, sl
   2f070:	mov	r3, #1
   2f074:	bl	222e8 <ReadUInt8Data>
   2f078:	ldr	r0, [r6]
   2f07c:	mov	r1, r7
   2f080:	mov	r2, #1
   2f084:	bl	1a2c <fseek@plt>
   2f088:	ldr	r0, [r4]
   2f08c:	add	r8, r8, #1
   2f090:	cmp	r8, r0
   2f094:	blt	2f064 <ReadDataSlab2+0x860>
   2f098:	add	r5, r5, r8
   2f09c:	ldr	r8, [sp, #12]
   2f0a0:	ldr	r0, [r6]
   2f0a4:	bl	1840 <ftell@plt>
   2f0a8:	cmn	r0, #1
   2f0ac:	beq	2f830 <ReadDataSlab2+0x102c>
   2f0b0:	ldr	r1, [sp, #8]
   2f0b4:	mov	r2, #1
   2f0b8:	add	r1, r9, r1
   2f0bc:	sub	r1, r1, r0
   2f0c0:	ldr	r0, [r6]
   2f0c4:	bl	1a2c <fseek@plt>
   2f0c8:	ldr	r0, [r4, #4]
   2f0cc:	add	r8, r8, #1
   2f0d0:	mov	r9, #0
   2f0d4:	cmp	r8, r0
   2f0d8:	blt	2f01c <ReadDataSlab2+0x818>
   2f0dc:	b	2e850 <ReadDataSlab2+0x4c>
   2f0e0:	mov	r1, r0
   2f0e4:	ldr	r0, [r6]
   2f0e8:	ldr	r8, [r8, #4]
   2f0ec:	str	r1, [sp, #8]
   2f0f0:	str	r2, [sp, #12]
   2f0f4:	bl	1840 <ftell@plt>
   2f0f8:	cmn	r0, #1
   2f0fc:	beq	2f830 <ReadDataSlab2+0x102c>
   2f100:	ldr	r0, [fp, #12]
   2f104:	ldr	r1, [sp, #16]
   2f108:	mov	r2, #1
   2f10c:	ldr	r0, [r0, #4]
   2f110:	mul	r0, r0, r1
   2f114:	ldr	r1, [r7]
   2f118:	mul	r1, r0, r1
   2f11c:	ldr	r0, [r6]
   2f120:	bl	1a2c <fseek@plt>
   2f124:	ldr	r0, [r4, #4]
   2f128:	cmp	r0, #1
   2f12c:	blt	2e850 <ReadDataSlab2+0x4c>
   2f130:	ldr	r0, [sp, #12]
   2f134:	ldr	r1, [sp, #16]
   2f138:	mov	r4, #0
   2f13c:	sub	r0, r0, #1
   2f140:	mul	r7, r0, r1
   2f144:	mul	r0, r8, r1
   2f148:	ldr	r1, [sp, #8]
   2f14c:	mul	r0, r0, r1
   2f150:	str	r0, [sp, #4]
   2f154:	ldr	r0, [r6]
   2f158:	bl	1840 <ftell@plt>
   2f15c:	cmn	r0, #1
   2f160:	beq	2f830 <ReadDataSlab2+0x102c>
   2f164:	str	r0, [sp, #8]
   2f168:	ldr	r0, [fp, #12]
   2f16c:	ldr	r1, [sp, #16]
   2f170:	mov	r2, #1
   2f174:	str	r4, [sp, #12]
   2f178:	ldr	r0, [r0]
   2f17c:	mul	r1, r0, r1
   2f180:	ldr	r0, [r6]
   2f184:	bl	1a2c <fseek@plt>
   2f188:	ldr	r9, [fp, #20]
   2f18c:	ldr	r0, [r9]
   2f190:	cmp	r0, #1
   2f194:	blt	2f1d4 <ReadDataSlab2+0x9d0>
   2f198:	mov	r8, #0
   2f19c:	mov	r0, r6
   2f1a0:	mov	r1, r5
   2f1a4:	mov	r2, sl
   2f1a8:	mov	r3, #1
   2f1ac:	bl	192d0 <ReadInt16Data>
   2f1b0:	ldr	r0, [r6]
   2f1b4:	mov	r1, r7
   2f1b8:	mov	r2, #1
   2f1bc:	bl	1a2c <fseek@plt>
   2f1c0:	ldr	r0, [r9]
   2f1c4:	add	r8, r8, #1
   2f1c8:	add	r5, r5, #2
   2f1cc:	cmp	r8, r0
   2f1d0:	blt	2f19c <ReadDataSlab2+0x998>
   2f1d4:	ldr	r0, [r6]
   2f1d8:	bl	1840 <ftell@plt>
   2f1dc:	cmn	r0, #1
   2f1e0:	beq	2f830 <ReadDataSlab2+0x102c>
   2f1e4:	ldmib	sp, {r1, r2}
   2f1e8:	add	r1, r2, r1
   2f1ec:	mov	r2, #1
   2f1f0:	sub	r1, r1, r0
   2f1f4:	ldr	r0, [r6]
   2f1f8:	bl	1a2c <fseek@plt>
   2f1fc:	ldr	r4, [sp, #12]
   2f200:	ldr	r0, [r9, #4]
   2f204:	mov	r9, #0
   2f208:	add	r4, r4, #1
   2f20c:	cmp	r4, r0
   2f210:	blt	2f154 <ReadDataSlab2+0x950>
   2f214:	b	2e850 <ReadDataSlab2+0x4c>
   2f218:	mov	r1, r0
   2f21c:	ldr	r0, [r6]
   2f220:	ldr	r8, [r8, #4]
   2f224:	str	r1, [sp, #8]
   2f228:	str	r2, [sp, #12]
   2f22c:	bl	1840 <ftell@plt>
   2f230:	cmn	r0, #1
   2f234:	beq	2f830 <ReadDataSlab2+0x102c>
   2f238:	ldr	r0, [fp, #12]
   2f23c:	ldr	r1, [sp, #16]
   2f240:	mov	r2, #1
   2f244:	ldr	r0, [r0, #4]
   2f248:	mul	r0, r0, r1
   2f24c:	ldr	r1, [r7]
   2f250:	mul	r1, r0, r1
   2f254:	ldr	r0, [r6]
   2f258:	bl	1a2c <fseek@plt>
   2f25c:	ldr	r0, [r4, #4]
   2f260:	cmp	r0, #1
   2f264:	blt	2e850 <ReadDataSlab2+0x4c>
   2f268:	ldr	r0, [sp, #12]
   2f26c:	ldr	r1, [sp, #16]
   2f270:	mov	r4, #0
   2f274:	sub	r0, r0, #1
   2f278:	mul	r7, r0, r1
   2f27c:	mul	r0, r8, r1
   2f280:	ldr	r1, [sp, #8]
   2f284:	mul	r0, r0, r1
   2f288:	str	r0, [sp, #4]
   2f28c:	ldr	r0, [r6]
   2f290:	bl	1840 <ftell@plt>
   2f294:	cmn	r0, #1
   2f298:	beq	2f830 <ReadDataSlab2+0x102c>
   2f29c:	str	r0, [sp, #8]
   2f2a0:	ldr	r0, [fp, #12]
   2f2a4:	ldr	r1, [sp, #16]
   2f2a8:	mov	r2, #1
   2f2ac:	str	r4, [sp, #12]
   2f2b0:	ldr	r0, [r0]
   2f2b4:	mul	r1, r0, r1
   2f2b8:	ldr	r0, [r6]
   2f2bc:	bl	1a2c <fseek@plt>
   2f2c0:	ldr	r9, [fp, #20]
   2f2c4:	ldr	r0, [r9]
   2f2c8:	cmp	r0, #1
   2f2cc:	blt	2f30c <ReadDataSlab2+0xb08>
   2f2d0:	mov	r8, #0
   2f2d4:	mov	r0, r6
   2f2d8:	mov	r1, r5
   2f2dc:	mov	r2, sl
   2f2e0:	mov	r3, #1
   2f2e4:	bl	1c314 <ReadUInt16Data>
   2f2e8:	ldr	r0, [r6]
   2f2ec:	mov	r1, r7
   2f2f0:	mov	r2, #1
   2f2f4:	bl	1a2c <fseek@plt>
   2f2f8:	ldr	r0, [r9]
   2f2fc:	add	r8, r8, #1
   2f300:	add	r5, r5, #2
   2f304:	cmp	r8, r0
   2f308:	blt	2f2d4 <ReadDataSlab2+0xad0>
   2f30c:	ldr	r0, [r6]
   2f310:	bl	1840 <ftell@plt>
   2f314:	cmn	r0, #1
   2f318:	beq	2f830 <ReadDataSlab2+0x102c>
   2f31c:	ldmib	sp, {r1, r2}
   2f320:	add	r1, r2, r1
   2f324:	mov	r2, #1
   2f328:	sub	r1, r1, r0
   2f32c:	ldr	r0, [r6]
   2f330:	bl	1a2c <fseek@plt>
   2f334:	ldr	r4, [sp, #12]
   2f338:	ldr	r0, [r9, #4]
   2f33c:	mov	r9, #0
   2f340:	add	r4, r4, #1
   2f344:	cmp	r4, r0
   2f348:	blt	2f28c <ReadDataSlab2+0xa88>
   2f34c:	b	2e850 <ReadDataSlab2+0x4c>
   2f350:	mov	r1, r0
   2f354:	ldr	r0, [r6]
   2f358:	ldr	r8, [r8, #4]
   2f35c:	str	r1, [sp, #8]
   2f360:	str	r2, [sp, #12]
   2f364:	bl	1840 <ftell@plt>
   2f368:	cmn	r0, #1
   2f36c:	beq	2f830 <ReadDataSlab2+0x102c>
   2f370:	ldr	r0, [fp, #12]
   2f374:	ldr	r1, [sp, #16]
   2f378:	mov	r2, #1
   2f37c:	ldr	r0, [r0, #4]
   2f380:	mul	r0, r0, r1
   2f384:	ldr	r1, [r7]
   2f388:	mul	r1, r0, r1
   2f38c:	ldr	r0, [r6]
   2f390:	bl	1a2c <fseek@plt>
   2f394:	ldr	r0, [r4, #4]
   2f398:	cmp	r0, #1
   2f39c:	blt	2e850 <ReadDataSlab2+0x4c>
   2f3a0:	ldr	r0, [sp, #12]
   2f3a4:	ldr	r1, [sp, #16]
   2f3a8:	sub	r0, r0, #1
   2f3ac:	mul	r7, r0, r1
   2f3b0:	mul	r0, r8, r1
   2f3b4:	ldr	r1, [sp, #8]
   2f3b8:	mov	r8, #0
   2f3bc:	mul	r0, r0, r1
   2f3c0:	str	r0, [sp, #8]
   2f3c4:	ldr	r0, [r6]
   2f3c8:	bl	1840 <ftell@plt>
   2f3cc:	cmn	r0, #1
   2f3d0:	beq	2f830 <ReadDataSlab2+0x102c>
   2f3d4:	mov	r9, r0
   2f3d8:	ldr	r0, [fp, #12]
   2f3dc:	ldr	r1, [sp, #16]
   2f3e0:	mov	r2, #1
   2f3e4:	ldr	r0, [r0]
   2f3e8:	mul	r1, r0, r1
   2f3ec:	ldr	r0, [r6]
   2f3f0:	bl	1a2c <fseek@plt>
   2f3f4:	ldr	r4, [fp, #20]
   2f3f8:	str	r8, [sp, #12]
   2f3fc:	ldr	r0, [r4]
   2f400:	cmp	r0, #1
   2f404:	blt	2f444 <ReadDataSlab2+0xc40>
   2f408:	mov	r8, #0
   2f40c:	mov	r0, r6
   2f410:	mov	r1, r5
   2f414:	mov	r2, sl
   2f418:	mov	r3, #1
   2f41c:	bl	11a80 <ReadInt32Data>
   2f420:	ldr	r0, [r6]
   2f424:	mov	r1, r7
   2f428:	mov	r2, #1
   2f42c:	bl	1a2c <fseek@plt>
   2f430:	ldr	r0, [r4]
   2f434:	add	r8, r8, #1
   2f438:	add	r5, r5, #4
   2f43c:	cmp	r8, r0
   2f440:	blt	2f40c <ReadDataSlab2+0xc08>
   2f444:	ldr	r0, [r6]
   2f448:	bl	1840 <ftell@plt>
   2f44c:	cmn	r0, #1
   2f450:	beq	2f830 <ReadDataSlab2+0x102c>
   2f454:	ldr	r1, [sp, #8]
   2f458:	mov	r2, #1
   2f45c:	add	r1, r9, r1
   2f460:	sub	r1, r1, r0
   2f464:	ldr	r0, [r6]
   2f468:	bl	1a2c <fseek@plt>
   2f46c:	ldr	r8, [sp, #12]
   2f470:	ldr	r0, [r4, #4]
   2f474:	mov	r9, #0
   2f478:	add	r8, r8, #1
   2f47c:	cmp	r8, r0
   2f480:	blt	2f3c4 <ReadDataSlab2+0xbc0>
   2f484:	b	2e850 <ReadDataSlab2+0x4c>
   2f488:	mov	r1, r0
   2f48c:	ldr	r0, [r6]
   2f490:	ldr	r8, [r8, #4]
   2f494:	str	r1, [sp, #8]
   2f498:	str	r2, [sp, #12]
   2f49c:	bl	1840 <ftell@plt>
   2f4a0:	cmn	r0, #1
   2f4a4:	beq	2f830 <ReadDataSlab2+0x102c>
   2f4a8:	ldr	r0, [fp, #12]
   2f4ac:	ldr	r1, [sp, #16]
   2f4b0:	mov	r2, #1
   2f4b4:	ldr	r0, [r0, #4]
   2f4b8:	mul	r0, r0, r1
   2f4bc:	ldr	r1, [r7]
   2f4c0:	mul	r1, r0, r1
   2f4c4:	ldr	r0, [r6]
   2f4c8:	bl	1a2c <fseek@plt>
   2f4cc:	ldr	r0, [r4, #4]
   2f4d0:	cmp	r0, #1
   2f4d4:	blt	2e850 <ReadDataSlab2+0x4c>
   2f4d8:	ldr	r0, [sp, #12]
   2f4dc:	ldr	r1, [sp, #16]
   2f4e0:	mov	r4, #0
   2f4e4:	sub	r0, r0, #1
   2f4e8:	mul	r7, r0, r1
   2f4ec:	mul	r0, r8, r1
   2f4f0:	ldr	r1, [sp, #8]
   2f4f4:	mul	r0, r0, r1
   2f4f8:	str	r0, [sp, #4]
   2f4fc:	ldr	r0, [r6]
   2f500:	bl	1840 <ftell@plt>
   2f504:	cmn	r0, #1
   2f508:	beq	2f830 <ReadDataSlab2+0x102c>
   2f50c:	str	r0, [sp, #8]
   2f510:	ldr	r0, [fp, #12]
   2f514:	ldr	r1, [sp, #16]
   2f518:	mov	r2, #1
   2f51c:	str	r4, [sp, #12]
   2f520:	ldr	r0, [r0]
   2f524:	mul	r1, r0, r1
   2f528:	ldr	r0, [r6]
   2f52c:	bl	1a2c <fseek@plt>
   2f530:	ldr	r9, [fp, #20]
   2f534:	ldr	r0, [r9]
   2f538:	cmp	r0, #1
   2f53c:	blt	2f57c <ReadDataSlab2+0xd78>
   2f540:	mov	r8, #0
   2f544:	mov	r0, r6
   2f548:	mov	r1, r5
   2f54c:	mov	r2, sl
   2f550:	mov	r3, #1
   2f554:	bl	156a8 <ReadUInt32Data>
   2f558:	ldr	r0, [r6]
   2f55c:	mov	r1, r7
   2f560:	mov	r2, #1
   2f564:	bl	1a2c <fseek@plt>
   2f568:	ldr	r0, [r9]
   2f56c:	add	r8, r8, #1
   2f570:	add	r5, r5, #4
   2f574:	cmp	r8, r0
   2f578:	blt	2f544 <ReadDataSlab2+0xd40>
   2f57c:	ldr	r0, [r6]
   2f580:	bl	1840 <ftell@plt>
   2f584:	cmn	r0, #1
   2f588:	beq	2f830 <ReadDataSlab2+0x102c>
   2f58c:	ldmib	sp, {r1, r2}
   2f590:	add	r1, r2, r1
   2f594:	mov	r2, #1
   2f598:	sub	r1, r1, r0
   2f59c:	ldr	r0, [r6]
   2f5a0:	bl	1a2c <fseek@plt>
   2f5a4:	ldr	r4, [sp, #12]
   2f5a8:	ldr	r0, [r9, #4]
   2f5ac:	mov	r9, #0
   2f5b0:	add	r4, r4, #1
   2f5b4:	cmp	r4, r0
   2f5b8:	blt	2f4fc <ReadDataSlab2+0xcf8>
   2f5bc:	b	2e850 <ReadDataSlab2+0x4c>
   2f5c0:	mov	r1, r0
   2f5c4:	ldr	r0, [r6]
   2f5c8:	ldr	r8, [r8, #4]
   2f5cc:	str	r1, [sp, #8]
   2f5d0:	str	r2, [sp, #12]
   2f5d4:	bl	1840 <ftell@plt>
   2f5d8:	cmn	r0, #1
   2f5dc:	beq	2f830 <ReadDataSlab2+0x102c>
   2f5e0:	ldr	r0, [fp, #12]
   2f5e4:	ldr	r1, [sp, #16]
   2f5e8:	mov	r2, #1
   2f5ec:	ldr	r0, [r0, #4]
   2f5f0:	mul	r0, r0, r1
   2f5f4:	ldr	r1, [r7]
   2f5f8:	mul	r1, r0, r1
   2f5fc:	ldr	r0, [r6]
   2f600:	bl	1a2c <fseek@plt>
   2f604:	ldr	r0, [r4, #4]
   2f608:	cmp	r0, #1
   2f60c:	blt	2e850 <ReadDataSlab2+0x4c>
   2f610:	ldr	r0, [sp, #12]
   2f614:	ldr	r1, [sp, #16]
   2f618:	mov	r4, #0
   2f61c:	sub	r0, r0, #1
   2f620:	mul	r7, r0, r1
   2f624:	mul	r0, r8, r1
   2f628:	ldr	r1, [sp, #8]
   2f62c:	mul	r0, r0, r1
   2f630:	str	r0, [sp, #4]
   2f634:	ldr	r0, [r6]
   2f638:	bl	1840 <ftell@plt>
   2f63c:	cmn	r0, #1
   2f640:	beq	2f830 <ReadDataSlab2+0x102c>
   2f644:	str	r0, [sp, #8]
   2f648:	ldr	r0, [fp, #12]
   2f64c:	ldr	r1, [sp, #16]
   2f650:	mov	r2, #1
   2f654:	str	r4, [sp, #12]
   2f658:	ldr	r0, [r0]
   2f65c:	mul	r1, r0, r1
   2f660:	ldr	r0, [r6]
   2f664:	bl	1a2c <fseek@plt>
   2f668:	ldr	r9, [fp, #20]
   2f66c:	ldr	r0, [r9]
   2f670:	cmp	r0, #1
   2f674:	blt	2f6b4 <ReadDataSlab2+0xeb0>
   2f678:	mov	r8, #0
   2f67c:	mov	r0, r6
   2f680:	mov	r1, r5
   2f684:	mov	r2, sl
   2f688:	mov	r3, #1
   2f68c:	bl	ecb8 <ReadUInt64Data>
   2f690:	ldr	r0, [r6]
   2f694:	mov	r1, r7
   2f698:	mov	r2, #1
   2f69c:	bl	1a2c <fseek@plt>
   2f6a0:	ldr	r0, [r9]
   2f6a4:	add	r8, r8, #1
   2f6a8:	add	r5, r5, #8
   2f6ac:	cmp	r8, r0
   2f6b0:	blt	2f67c <ReadDataSlab2+0xe78>
   2f6b4:	ldr	r0, [r6]
   2f6b8:	bl	1840 <ftell@plt>
   2f6bc:	cmn	r0, #1
   2f6c0:	beq	2f830 <ReadDataSlab2+0x102c>
   2f6c4:	ldmib	sp, {r1, r2}
   2f6c8:	add	r1, r2, r1
   2f6cc:	mov	r2, #1
   2f6d0:	sub	r1, r1, r0
   2f6d4:	ldr	r0, [r6]
   2f6d8:	bl	1a2c <fseek@plt>
   2f6dc:	ldr	r4, [sp, #12]
   2f6e0:	ldr	r0, [r9, #4]
   2f6e4:	mov	r9, #0
   2f6e8:	add	r4, r4, #1
   2f6ec:	cmp	r4, r0
   2f6f0:	blt	2f634 <ReadDataSlab2+0xe30>
   2f6f4:	b	2e850 <ReadDataSlab2+0x4c>
   2f6f8:	mov	r1, r0
   2f6fc:	ldr	r0, [r6]
   2f700:	ldr	r8, [r8, #4]
   2f704:	str	r1, [sp, #8]
   2f708:	str	r2, [sp, #12]
   2f70c:	bl	1840 <ftell@plt>
   2f710:	cmn	r0, #1
   2f714:	beq	2f830 <ReadDataSlab2+0x102c>
   2f718:	ldr	r0, [fp, #12]
   2f71c:	ldr	r1, [sp, #16]
   2f720:	mov	r2, #1
   2f724:	ldr	r0, [r0, #4]
   2f728:	mul	r0, r0, r1
   2f72c:	ldr	r1, [r7]
   2f730:	mul	r1, r0, r1
   2f734:	ldr	r0, [r6]
   2f738:	bl	1a2c <fseek@plt>
   2f73c:	ldr	r0, [r4, #4]
   2f740:	cmp	r0, #1
   2f744:	blt	2e850 <ReadDataSlab2+0x4c>
   2f748:	ldr	r0, [sp, #12]
   2f74c:	ldr	r1, [sp, #16]
   2f750:	sub	r0, r0, #1
   2f754:	mul	r7, r0, r1
   2f758:	mul	r0, r8, r1
   2f75c:	ldr	r1, [sp, #8]
   2f760:	mov	r8, #0
   2f764:	mul	r0, r0, r1
   2f768:	str	r0, [sp, #8]
   2f76c:	ldr	r0, [r6]
   2f770:	bl	1840 <ftell@plt>
   2f774:	cmn	r0, #1
   2f778:	beq	2f830 <ReadDataSlab2+0x102c>
   2f77c:	mov	r9, r0
   2f780:	ldr	r0, [fp, #12]
   2f784:	ldr	r1, [sp, #16]
   2f788:	mov	r2, #1
   2f78c:	ldr	r0, [r0]
   2f790:	mul	r1, r0, r1
   2f794:	ldr	r0, [r6]
   2f798:	bl	1a2c <fseek@plt>
   2f79c:	ldr	r4, [fp, #20]
   2f7a0:	str	r8, [sp, #12]
   2f7a4:	ldr	r0, [r4]
   2f7a8:	cmp	r0, #1
   2f7ac:	blt	2f7ec <ReadDataSlab2+0xfe8>
   2f7b0:	mov	r8, #0
   2f7b4:	mov	r0, r6
   2f7b8:	mov	r1, r5
   2f7bc:	mov	r2, sl
   2f7c0:	mov	r3, #1
   2f7c4:	bl	bef0 <ReadInt64Data>
   2f7c8:	ldr	r0, [r6]
   2f7cc:	mov	r1, r7
   2f7d0:	mov	r2, #1
   2f7d4:	bl	1a2c <fseek@plt>
   2f7d8:	ldr	r0, [r4]
   2f7dc:	add	r8, r8, #1
   2f7e0:	add	r5, r5, #8
   2f7e4:	cmp	r8, r0
   2f7e8:	blt	2f7b4 <ReadDataSlab2+0xfb0>
   2f7ec:	ldr	r0, [r6]
   2f7f0:	bl	1840 <ftell@plt>
   2f7f4:	cmn	r0, #1
   2f7f8:	beq	2f830 <ReadDataSlab2+0x102c>
   2f7fc:	ldr	r1, [sp, #8]
   2f800:	mov	r2, #1
   2f804:	add	r1, r9, r1
   2f808:	sub	r1, r1, r0
   2f80c:	ldr	r0, [r6]
   2f810:	bl	1a2c <fseek@plt>
   2f814:	ldr	r8, [sp, #12]
   2f818:	ldr	r0, [r4, #4]
   2f81c:	mov	r9, #0
   2f820:	add	r8, r8, #1
   2f824:	cmp	r8, r0
   2f828:	blt	2f76c <ReadDataSlab2+0xf68>
   2f82c:	b	2e850 <ReadDataSlab2+0x4c>
   2f830:	ldr	r0, [pc, #20]	; 2f84c <ReadDataSlab2+0x1048>
   2f834:	add	r0, pc, r0
   2f838:	bl	19b4 <Mat_Critical@plt>
   2f83c:	mvn	r9, #0
   2f840:	mov	r0, r9
   2f844:	sub	sp, fp, #28
   2f848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f84c:	.word	0x00042430

0002f850 <ReadCompressedDataSlab1>:
   2f850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f854:	add	fp, sp, #28
   2f858:	sub	sp, sp, #68	; 0x44
   2f85c:	vmov.i32	q8, #0	; 0x00000000
   2f860:	mov	r4, r2
   2f864:	add	r2, sp, #8
   2f868:	mov	r6, r0
   2f86c:	mov	r5, r3
   2f870:	mov	r0, #52	; 0x34
   2f874:	mov	r7, #0
   2f878:	mov	r3, r2
   2f87c:	cmp	r6, #0
   2f880:	str	r7, [sp, #56]	; 0x38
   2f884:	cmpne	r4, #0
   2f888:	vst1.64	{d16-d17}, [r3], r0
   2f88c:	add	r0, r2, #32
   2f890:	vst1.64	{d16-d17}, [r0]
   2f894:	add	r0, r2, #16
   2f898:	str	r7, [r3]
   2f89c:	vst1.64	{d16-d17}, [r0]
   2f8a0:	bne	2f8b0 <ReadCompressedDataSlab1+0x60>
   2f8a4:	mov	r0, r7
   2f8a8:	sub	sp, fp, #28
   2f8ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f8b0:	ldr	r0, [r6]
   2f8b4:	cmp	r0, #0
   2f8b8:	beq	2f8a4 <ReadCompressedDataSlab1+0x54>
   2f8bc:	ldr	r9, [fp, #12]
   2f8c0:	ldr	r8, [fp, #8]
   2f8c4:	add	r7, sp, #8
   2f8c8:	mov	r0, r7
   2f8cc:	bl	1948 <inflateCopy@plt>
   2f8d0:	mov	r0, r6
   2f8d4:	mov	r1, r7
   2f8d8:	mov	r2, r8
   2f8dc:	mov	r3, r9
   2f8e0:	bl	28dc <InflateSkipData>
   2f8e4:	sub	r0, r5, #6
   2f8e8:	mov	r7, #0
   2f8ec:	cmp	r0, #9
   2f8f0:	bhi	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2f8f4:	ldr	r1, [fp, #16]
   2f8f8:	mov	r9, r8
   2f8fc:	ldr	r8, [fp, #20]
   2f900:	sub	r1, r1, #1
   2f904:	str	r1, [sp, #4]
   2f908:	add	r1, pc, #4
   2f90c:	ldr	r0, [r1, r0, lsl #2]
   2f910:	add	pc, r1, r0
   2f914:	.word	0x00000028
   2f918:	.word	0x0000008c
   2f91c:	.word	0x000000f0
   2f920:	.word	0x00000154
   2f924:	.word	0x000001b8
   2f928:	.word	0x0000021c
   2f92c:	.word	0x00000280
   2f930:	.word	0x000002e4
   2f934:	.word	0x00000348
   2f938:	.word	0x000003ac
   2f93c:	ldr	r0, [sp, #4]
   2f940:	cmp	r0, #0
   2f944:	beq	2fd24 <ReadCompressedDataSlab1+0x4d4>
   2f948:	cmp	r8, #1
   2f94c:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2f950:	mov	r7, #0
   2f954:	add	sl, sp, #8
   2f958:	mov	r0, #1
   2f95c:	mov	r1, sl
   2f960:	mov	r2, r4
   2f964:	mov	r3, r9
   2f968:	str	r0, [sp]
   2f96c:	mov	r0, r6
   2f970:	bl	65fc <ReadCompressedDoubleData>
   2f974:	ldr	r3, [sp, #4]
   2f978:	mov	r5, r0
   2f97c:	mov	r0, r6
   2f980:	mov	r1, sl
   2f984:	mov	r2, r9
   2f988:	bl	28dc <InflateSkipData>
   2f98c:	add	r7, r5, r7
   2f990:	add	r4, r4, #8
   2f994:	subs	r8, r8, #1
   2f998:	bne	2f958 <ReadCompressedDataSlab1+0x108>
   2f99c:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2f9a0:	ldr	r0, [sp, #4]
   2f9a4:	cmp	r0, #0
   2f9a8:	beq	2fd40 <ReadCompressedDataSlab1+0x4f0>
   2f9ac:	cmp	r8, #1
   2f9b0:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2f9b4:	mov	r7, #0
   2f9b8:	add	sl, sp, #8
   2f9bc:	mov	r0, #1
   2f9c0:	mov	r1, sl
   2f9c4:	mov	r2, r4
   2f9c8:	mov	r3, r9
   2f9cc:	str	r0, [sp]
   2f9d0:	mov	r0, r6
   2f9d4:	bl	b980 <ReadCompressedSingleData>
   2f9d8:	ldr	r3, [sp, #4]
   2f9dc:	mov	r5, r0
   2f9e0:	mov	r0, r6
   2f9e4:	mov	r1, sl
   2f9e8:	mov	r2, r9
   2f9ec:	bl	28dc <InflateSkipData>
   2f9f0:	add	r7, r5, r7
   2f9f4:	add	r4, r4, #4
   2f9f8:	subs	r8, r8, #1
   2f9fc:	bne	2f9bc <ReadCompressedDataSlab1+0x16c>
   2fa00:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fa04:	ldr	r0, [sp, #4]
   2fa08:	cmp	r0, #0
   2fa0c:	beq	2fd5c <ReadCompressedDataSlab1+0x50c>
   2fa10:	cmp	r8, #1
   2fa14:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fa18:	mov	r7, #0
   2fa1c:	mov	r0, #1
   2fa20:	add	sl, sp, #8
   2fa24:	mov	r2, r4
   2fa28:	mov	r3, r9
   2fa2c:	str	r0, [sp]
   2fa30:	mov	r0, r6
   2fa34:	mov	r1, sl
   2fa38:	bl	21db8 <ReadCompressedInt8Data>
   2fa3c:	ldr	r3, [sp, #4]
   2fa40:	mov	r5, r0
   2fa44:	mov	r0, r6
   2fa48:	mov	r1, sl
   2fa4c:	mov	r2, r9
   2fa50:	bl	28dc <InflateSkipData>
   2fa54:	add	r7, r5, r7
   2fa58:	add	r4, r4, #1
   2fa5c:	subs	r8, r8, #1
   2fa60:	bne	2fa1c <ReadCompressedDataSlab1+0x1cc>
   2fa64:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fa68:	ldr	r0, [sp, #4]
   2fa6c:	cmp	r0, #0
   2fa70:	beq	2fd78 <ReadCompressedDataSlab1+0x528>
   2fa74:	cmp	r8, #1
   2fa78:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fa7c:	mov	r7, #0
   2fa80:	mov	r0, #1
   2fa84:	add	sl, sp, #8
   2fa88:	mov	r2, r4
   2fa8c:	mov	r3, r9
   2fa90:	str	r0, [sp]
   2fa94:	mov	r0, r6
   2fa98:	mov	r1, sl
   2fa9c:	bl	24d48 <ReadCompressedUInt8Data>
   2faa0:	ldr	r3, [sp, #4]
   2faa4:	mov	r5, r0
   2faa8:	mov	r0, r6
   2faac:	mov	r1, sl
   2fab0:	mov	r2, r9
   2fab4:	bl	28dc <InflateSkipData>
   2fab8:	add	r7, r5, r7
   2fabc:	add	r4, r4, #1
   2fac0:	subs	r8, r8, #1
   2fac4:	bne	2fa80 <ReadCompressedDataSlab1+0x230>
   2fac8:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2facc:	ldr	r0, [sp, #4]
   2fad0:	cmp	r0, #0
   2fad4:	beq	2fd94 <ReadCompressedDataSlab1+0x544>
   2fad8:	cmp	r8, #1
   2fadc:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fae0:	mov	r7, #0
   2fae4:	add	sl, sp, #8
   2fae8:	mov	r0, #1
   2faec:	mov	r1, sl
   2faf0:	mov	r2, r4
   2faf4:	mov	r3, r9
   2faf8:	str	r0, [sp]
   2fafc:	mov	r0, r6
   2fb00:	bl	1bde4 <ReadCompressedInt16Data>
   2fb04:	ldr	r3, [sp, #4]
   2fb08:	mov	r5, r0
   2fb0c:	mov	r0, r6
   2fb10:	mov	r1, sl
   2fb14:	mov	r2, r9
   2fb18:	bl	28dc <InflateSkipData>
   2fb1c:	add	r7, r5, r7
   2fb20:	add	r4, r4, #2
   2fb24:	subs	r8, r8, #1
   2fb28:	bne	2fae8 <ReadCompressedDataSlab1+0x298>
   2fb2c:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fb30:	ldr	r0, [sp, #4]
   2fb34:	cmp	r0, #0
   2fb38:	beq	2fdb0 <ReadCompressedDataSlab1+0x560>
   2fb3c:	cmp	r8, #1
   2fb40:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fb44:	mov	r7, #0
   2fb48:	add	sl, sp, #8
   2fb4c:	mov	r0, #1
   2fb50:	mov	r1, sl
   2fb54:	mov	r2, r4
   2fb58:	mov	r3, r9
   2fb5c:	str	r0, [sp]
   2fb60:	mov	r0, r6
   2fb64:	bl	1ee28 <ReadCompressedUInt16Data>
   2fb68:	ldr	r3, [sp, #4]
   2fb6c:	mov	r5, r0
   2fb70:	mov	r0, r6
   2fb74:	mov	r1, sl
   2fb78:	mov	r2, r9
   2fb7c:	bl	28dc <InflateSkipData>
   2fb80:	add	r7, r5, r7
   2fb84:	add	r4, r4, #2
   2fb88:	subs	r8, r8, #1
   2fb8c:	bne	2fb4c <ReadCompressedDataSlab1+0x2fc>
   2fb90:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fb94:	ldr	r0, [sp, #4]
   2fb98:	cmp	r0, #0
   2fb9c:	beq	2fdcc <ReadCompressedDataSlab1+0x57c>
   2fba0:	cmp	r8, #1
   2fba4:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fba8:	mov	r7, #0
   2fbac:	add	sl, sp, #8
   2fbb0:	mov	r0, #1
   2fbb4:	mov	r1, sl
   2fbb8:	mov	r2, r4
   2fbbc:	mov	r3, r9
   2fbc0:	str	r0, [sp]
   2fbc4:	mov	r0, r6
   2fbc8:	bl	15178 <ReadCompressedInt32Data>
   2fbcc:	ldr	r3, [sp, #4]
   2fbd0:	mov	r5, r0
   2fbd4:	mov	r0, r6
   2fbd8:	mov	r1, sl
   2fbdc:	mov	r2, r9
   2fbe0:	bl	28dc <InflateSkipData>
   2fbe4:	add	r7, r5, r7
   2fbe8:	add	r4, r4, #4
   2fbec:	subs	r8, r8, #1
   2fbf0:	bne	2fbb0 <ReadCompressedDataSlab1+0x360>
   2fbf4:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fbf8:	ldr	r0, [sp, #4]
   2fbfc:	cmp	r0, #0
   2fc00:	beq	2fde8 <ReadCompressedDataSlab1+0x598>
   2fc04:	cmp	r8, #1
   2fc08:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fc0c:	mov	r7, #0
   2fc10:	add	sl, sp, #8
   2fc14:	mov	r0, #1
   2fc18:	mov	r1, sl
   2fc1c:	mov	r2, r4
   2fc20:	mov	r3, r9
   2fc24:	str	r0, [sp]
   2fc28:	mov	r0, r6
   2fc2c:	bl	18da0 <ReadCompressedUInt32Data>
   2fc30:	ldr	r3, [sp, #4]
   2fc34:	mov	r5, r0
   2fc38:	mov	r0, r6
   2fc3c:	mov	r1, sl
   2fc40:	mov	r2, r9
   2fc44:	bl	28dc <InflateSkipData>
   2fc48:	add	r7, r5, r7
   2fc4c:	add	r4, r4, #4
   2fc50:	subs	r8, r8, #1
   2fc54:	bne	2fc14 <ReadCompressedDataSlab1+0x3c4>
   2fc58:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fc5c:	ldr	r0, [sp, #4]
   2fc60:	cmp	r0, #0
   2fc64:	beq	2fe20 <ReadCompressedDataSlab1+0x5d0>
   2fc68:	cmp	r8, #1
   2fc6c:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fc70:	mov	r7, #0
   2fc74:	add	sl, sp, #8
   2fc78:	mov	r0, #1
   2fc7c:	mov	r1, sl
   2fc80:	mov	r2, r4
   2fc84:	mov	r3, r9
   2fc88:	str	r0, [sp]
   2fc8c:	mov	r0, r6
   2fc90:	bl	e6f8 <ReadCompressedInt64Data>
   2fc94:	ldr	r3, [sp, #4]
   2fc98:	mov	r5, r0
   2fc9c:	mov	r0, r6
   2fca0:	mov	r1, sl
   2fca4:	mov	r2, r9
   2fca8:	bl	28dc <InflateSkipData>
   2fcac:	add	r7, r5, r7
   2fcb0:	add	r4, r4, #8
   2fcb4:	subs	r8, r8, #1
   2fcb8:	bne	2fc78 <ReadCompressedDataSlab1+0x428>
   2fcbc:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fcc0:	ldr	r0, [sp, #4]
   2fcc4:	cmp	r0, #0
   2fcc8:	beq	2fe04 <ReadCompressedDataSlab1+0x5b4>
   2fccc:	cmp	r8, #1
   2fcd0:	blt	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fcd4:	mov	r7, #0
   2fcd8:	add	sl, sp, #8
   2fcdc:	mov	r0, #1
   2fce0:	mov	r1, sl
   2fce4:	mov	r2, r4
   2fce8:	mov	r3, r9
   2fcec:	str	r0, [sp]
   2fcf0:	mov	r0, r6
   2fcf4:	bl	114c0 <ReadCompressedUInt64Data>
   2fcf8:	ldr	r3, [sp, #4]
   2fcfc:	mov	r5, r0
   2fd00:	mov	r0, r6
   2fd04:	mov	r1, sl
   2fd08:	mov	r2, r9
   2fd0c:	bl	28dc <InflateSkipData>
   2fd10:	add	r7, r5, r7
   2fd14:	add	r4, r4, #8
   2fd18:	subs	r8, r8, #1
   2fd1c:	bne	2fcdc <ReadCompressedDataSlab1+0x48c>
   2fd20:	b	2fe3c <ReadCompressedDataSlab1+0x5ec>
   2fd24:	add	r1, sp, #8
   2fd28:	mov	r0, r6
   2fd2c:	mov	r2, r4
   2fd30:	mov	r3, r9
   2fd34:	str	r8, [sp]
   2fd38:	bl	65fc <ReadCompressedDoubleData>
   2fd3c:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fd40:	add	r1, sp, #8
   2fd44:	mov	r0, r6
   2fd48:	mov	r2, r4
   2fd4c:	mov	r3, r9
   2fd50:	str	r8, [sp]
   2fd54:	bl	b980 <ReadCompressedSingleData>
   2fd58:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fd5c:	add	r1, sp, #8
   2fd60:	mov	r0, r6
   2fd64:	mov	r2, r4
   2fd68:	mov	r3, r9
   2fd6c:	str	r8, [sp]
   2fd70:	bl	21db8 <ReadCompressedInt8Data>
   2fd74:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fd78:	add	r1, sp, #8
   2fd7c:	mov	r0, r6
   2fd80:	mov	r2, r4
   2fd84:	mov	r3, r9
   2fd88:	str	r8, [sp]
   2fd8c:	bl	24d48 <ReadCompressedUInt8Data>
   2fd90:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fd94:	add	r1, sp, #8
   2fd98:	mov	r0, r6
   2fd9c:	mov	r2, r4
   2fda0:	mov	r3, r9
   2fda4:	str	r8, [sp]
   2fda8:	bl	1bde4 <ReadCompressedInt16Data>
   2fdac:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fdb0:	add	r1, sp, #8
   2fdb4:	mov	r0, r6
   2fdb8:	mov	r2, r4
   2fdbc:	mov	r3, r9
   2fdc0:	str	r8, [sp]
   2fdc4:	bl	1ee28 <ReadCompressedUInt16Data>
   2fdc8:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fdcc:	add	r1, sp, #8
   2fdd0:	mov	r0, r6
   2fdd4:	mov	r2, r4
   2fdd8:	mov	r3, r9
   2fddc:	str	r8, [sp]
   2fde0:	bl	15178 <ReadCompressedInt32Data>
   2fde4:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fde8:	add	r1, sp, #8
   2fdec:	mov	r0, r6
   2fdf0:	mov	r2, r4
   2fdf4:	mov	r3, r9
   2fdf8:	str	r8, [sp]
   2fdfc:	bl	18da0 <ReadCompressedUInt32Data>
   2fe00:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fe04:	add	r1, sp, #8
   2fe08:	mov	r0, r6
   2fe0c:	mov	r2, r4
   2fe10:	mov	r3, r9
   2fe14:	str	r8, [sp]
   2fe18:	bl	114c0 <ReadCompressedUInt64Data>
   2fe1c:	b	2fe38 <ReadCompressedDataSlab1+0x5e8>
   2fe20:	add	r1, sp, #8
   2fe24:	mov	r0, r6
   2fe28:	mov	r2, r4
   2fe2c:	mov	r3, r9
   2fe30:	str	r8, [sp]
   2fe34:	bl	e6f8 <ReadCompressedInt64Data>
   2fe38:	mov	r7, r0
   2fe3c:	add	r0, sp, #8
   2fe40:	bl	193c <inflateEnd@plt>
   2fe44:	mov	r0, r7
   2fe48:	sub	sp, fp, #28
   2fe4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002fe50 <ReadCompressedDataSlab2>:
   2fe50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fe54:	add	fp, sp, #28
   2fe58:	sub	sp, sp, #84	; 0x54
   2fe5c:	vmov.i32	q8, #0	; 0x00000000
   2fe60:	mov	r4, r2
   2fe64:	add	r2, sp, #24
   2fe68:	mov	r5, r0
   2fe6c:	mov	r6, r3
   2fe70:	mov	r0, #52	; 0x34
   2fe74:	mov	r3, r2
   2fe78:	cmp	r5, #0
   2fe7c:	cmpne	r4, #0
   2fe80:	vst1.64	{d16-d17}, [r3], r0
   2fe84:	mov	r0, #0
   2fe88:	str	r0, [r3]
   2fe8c:	add	r3, r2, #32
   2fe90:	add	r2, r2, #16
   2fe94:	str	r0, [sp, #72]	; 0x48
   2fe98:	vst1.64	{d16-d17}, [r3]
   2fe9c:	vst1.64	{d16-d17}, [r2]
   2fea0:	beq	2fecc <ReadCompressedDataSlab2+0x7c>
   2fea4:	ldr	r7, [fp, #24]
   2fea8:	cmp	r7, #0
   2feac:	ldrne	r0, [fp, #20]
   2feb0:	cmpne	r0, #0
   2feb4:	beq	2fecc <ReadCompressedDataSlab2+0x7c>
   2feb8:	ldr	r0, [fp, #16]
   2febc:	cmp	r0, #0
   2fec0:	ldrne	r0, [r5]
   2fec4:	cmpne	r0, #0
   2fec8:	bne	2fed8 <ReadCompressedDataSlab2+0x88>
   2fecc:	mov	r0, #0
   2fed0:	sub	sp, fp, #28
   2fed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fed8:	add	r0, sp, #24
   2fedc:	bl	1948 <inflateCopy@plt>
   2fee0:	sub	r0, r6, #6
   2fee4:	cmp	r0, #9
   2fee8:	bhi	318f8 <ReadCompressedDataSlab2+0x1aa8>
   2feec:	str	r5, [sp, #20]
   2fef0:	add	r1, pc, #16
   2fef4:	ldr	r2, [fp, #12]
   2fef8:	ldr	r8, [fp, #8]
   2fefc:	mov	sl, r7
   2ff00:	ldr	r0, [r1, r0, lsl #2]
   2ff04:	add	pc, r1, r0
   2ff08:	.word	0x00000028
   2ff0c:	.word	0x000000b8
   2ff10:	.word	0x00000148
   2ff14:	.word	0x000001d8
   2ff18:	.word	0x00000268
   2ff1c:	.word	0x000002f8
   2ff20:	.word	0x00000388
   2ff24:	.word	0x00000418
   2ff28:	.word	0x00000538
   2ff2c:	.word	0x000004a8
   2ff30:	ldr	r0, [fp, #16]
   2ff34:	ldr	r7, [r2]
   2ff38:	ldr	r9, [fp, #20]
   2ff3c:	ldr	r5, [sp, #20]
   2ff40:	add	r1, sp, #24
   2ff44:	mov	r2, r8
   2ff48:	ldr	r0, [r0, #4]
   2ff4c:	ldr	r6, [r9, #4]
   2ff50:	mul	r3, r0, r7
   2ff54:	ldr	r0, [r9]
   2ff58:	str	r0, [sp, #12]
   2ff5c:	mov	r0, r5
   2ff60:	bl	28dc <InflateSkipData>
   2ff64:	sub	r0, r6, #1
   2ff68:	mul	r3, r0, r7
   2ff6c:	ldr	r0, [r9]
   2ff70:	cmp	r0, #1
   2ff74:	bne	304d0 <ReadCompressedDataSlab2+0x680>
   2ff78:	ldr	r2, [fp, #12]
   2ff7c:	ldr	r0, [sl]
   2ff80:	ldr	r1, [r2]
   2ff84:	cmp	r0, r1
   2ff88:	bne	311a4 <ReadCompressedDataSlab2+0x1354>
   2ff8c:	ldr	r1, [fp, #20]
   2ff90:	ldr	r1, [r1, #4]
   2ff94:	cmp	r1, #1
   2ff98:	bne	311a4 <ReadCompressedDataSlab2+0x1354>
   2ff9c:	ldr	r1, [sl, #4]
   2ffa0:	mov	r2, r4
   2ffa4:	mov	r3, r8
   2ffa8:	mul	r0, r1, r0
   2ffac:	add	r1, sp, #24
   2ffb0:	str	r0, [sp]
   2ffb4:	mov	r0, r5
   2ffb8:	bl	65fc <ReadCompressedDoubleData>
   2ffbc:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   2ffc0:	ldr	r0, [fp, #16]
   2ffc4:	ldr	r7, [r2]
   2ffc8:	ldr	r9, [fp, #20]
   2ffcc:	ldr	r5, [sp, #20]
   2ffd0:	add	r1, sp, #24
   2ffd4:	mov	r2, r8
   2ffd8:	ldr	r0, [r0, #4]
   2ffdc:	ldr	r6, [r9, #4]
   2ffe0:	mul	r3, r0, r7
   2ffe4:	ldr	r0, [r9]
   2ffe8:	str	r0, [sp, #12]
   2ffec:	mov	r0, r5
   2fff0:	bl	28dc <InflateSkipData>
   2fff4:	sub	r0, r6, #1
   2fff8:	mul	r3, r0, r7
   2fffc:	ldr	r0, [r9]
   30000:	cmp	r0, #1
   30004:	bne	30618 <ReadCompressedDataSlab2+0x7c8>
   30008:	ldr	r2, [fp, #12]
   3000c:	ldr	r0, [sl]
   30010:	ldr	r1, [r2]
   30014:	cmp	r0, r1
   30018:	bne	31260 <ReadCompressedDataSlab2+0x1410>
   3001c:	ldr	r1, [fp, #20]
   30020:	ldr	r1, [r1, #4]
   30024:	cmp	r1, #1
   30028:	bne	31260 <ReadCompressedDataSlab2+0x1410>
   3002c:	ldr	r1, [sl, #4]
   30030:	mov	r2, r4
   30034:	mov	r3, r8
   30038:	mul	r0, r1, r0
   3003c:	add	r1, sp, #24
   30040:	str	r0, [sp]
   30044:	mov	r0, r5
   30048:	bl	b980 <ReadCompressedSingleData>
   3004c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30050:	ldr	r0, [fp, #16]
   30054:	ldr	r7, [r2]
   30058:	ldr	r9, [fp, #20]
   3005c:	ldr	r5, [sp, #20]
   30060:	add	r1, sp, #24
   30064:	mov	r2, r8
   30068:	ldr	r0, [r0, #4]
   3006c:	ldr	r6, [r9, #4]
   30070:	mul	r3, r0, r7
   30074:	ldr	r0, [r9]
   30078:	str	r0, [sp, #12]
   3007c:	mov	r0, r5
   30080:	bl	28dc <InflateSkipData>
   30084:	sub	r0, r6, #1
   30088:	mul	r3, r0, r7
   3008c:	ldr	r0, [r9]
   30090:	cmp	r0, #1
   30094:	bne	30760 <ReadCompressedDataSlab2+0x910>
   30098:	ldr	r2, [fp, #12]
   3009c:	ldr	r0, [sl]
   300a0:	ldr	r1, [r2]
   300a4:	cmp	r0, r1
   300a8:	bne	3131c <ReadCompressedDataSlab2+0x14cc>
   300ac:	ldr	r1, [fp, #20]
   300b0:	ldr	r1, [r1, #4]
   300b4:	cmp	r1, #1
   300b8:	bne	3131c <ReadCompressedDataSlab2+0x14cc>
   300bc:	ldr	r1, [sl, #4]
   300c0:	mov	r2, r4
   300c4:	mov	r3, r8
   300c8:	mul	r0, r1, r0
   300cc:	add	r1, sp, #24
   300d0:	str	r0, [sp]
   300d4:	mov	r0, r5
   300d8:	bl	21db8 <ReadCompressedInt8Data>
   300dc:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   300e0:	ldr	r0, [fp, #16]
   300e4:	ldr	r7, [r2]
   300e8:	ldr	r9, [fp, #20]
   300ec:	ldr	r5, [sp, #20]
   300f0:	add	r1, sp, #24
   300f4:	mov	r2, r8
   300f8:	ldr	r0, [r0, #4]
   300fc:	ldr	r6, [r9, #4]
   30100:	mul	r3, r0, r7
   30104:	ldr	r0, [r9]
   30108:	str	r0, [sp, #12]
   3010c:	mov	r0, r5
   30110:	bl	28dc <InflateSkipData>
   30114:	sub	r0, r6, #1
   30118:	mul	r3, r0, r7
   3011c:	ldr	r0, [r9]
   30120:	cmp	r0, #1
   30124:	bne	308b0 <ReadCompressedDataSlab2+0xa60>
   30128:	ldr	r2, [fp, #12]
   3012c:	ldr	r0, [sl]
   30130:	ldr	r1, [r2]
   30134:	cmp	r0, r1
   30138:	bne	313d8 <ReadCompressedDataSlab2+0x1588>
   3013c:	ldr	r1, [fp, #20]
   30140:	ldr	r1, [r1, #4]
   30144:	cmp	r1, #1
   30148:	bne	313d8 <ReadCompressedDataSlab2+0x1588>
   3014c:	ldr	r1, [sl, #4]
   30150:	mov	r2, r4
   30154:	mov	r3, r8
   30158:	mul	r0, r1, r0
   3015c:	add	r1, sp, #24
   30160:	str	r0, [sp]
   30164:	mov	r0, r5
   30168:	bl	24d48 <ReadCompressedUInt8Data>
   3016c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30170:	ldr	r0, [fp, #16]
   30174:	ldr	r7, [r2]
   30178:	ldr	r9, [fp, #20]
   3017c:	ldr	r5, [sp, #20]
   30180:	add	r1, sp, #24
   30184:	mov	r2, r8
   30188:	ldr	r0, [r0, #4]
   3018c:	ldr	r6, [r9, #4]
   30190:	mul	r3, r0, r7
   30194:	ldr	r0, [r9]
   30198:	str	r0, [sp, #12]
   3019c:	mov	r0, r5
   301a0:	bl	28dc <InflateSkipData>
   301a4:	sub	r0, r6, #1
   301a8:	mul	r3, r0, r7
   301ac:	ldr	r0, [r9]
   301b0:	cmp	r0, #1
   301b4:	bne	30a00 <ReadCompressedDataSlab2+0xbb0>
   301b8:	ldr	r2, [fp, #12]
   301bc:	ldr	r0, [sl]
   301c0:	ldr	r1, [r2]
   301c4:	cmp	r0, r1
   301c8:	bne	31494 <ReadCompressedDataSlab2+0x1644>
   301cc:	ldr	r1, [fp, #20]
   301d0:	ldr	r1, [r1, #4]
   301d4:	cmp	r1, #1
   301d8:	bne	31494 <ReadCompressedDataSlab2+0x1644>
   301dc:	ldr	r1, [sl, #4]
   301e0:	mov	r2, r4
   301e4:	mov	r3, r8
   301e8:	mul	r0, r1, r0
   301ec:	add	r1, sp, #24
   301f0:	str	r0, [sp]
   301f4:	mov	r0, r5
   301f8:	bl	1bde4 <ReadCompressedInt16Data>
   301fc:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30200:	ldr	r0, [fp, #16]
   30204:	ldr	r7, [r2]
   30208:	ldr	r9, [fp, #20]
   3020c:	ldr	r5, [sp, #20]
   30210:	add	r1, sp, #24
   30214:	mov	r2, r8
   30218:	ldr	r0, [r0, #4]
   3021c:	ldr	r6, [r9, #4]
   30220:	mul	r3, r0, r7
   30224:	ldr	r0, [r9]
   30228:	str	r0, [sp, #16]
   3022c:	mov	r0, r5
   30230:	bl	28dc <InflateSkipData>
   30234:	sub	r0, r6, #1
   30238:	mul	r3, r0, r7
   3023c:	ldr	r0, [r9]
   30240:	cmp	r0, #1
   30244:	bne	30b48 <ReadCompressedDataSlab2+0xcf8>
   30248:	ldr	r2, [fp, #12]
   3024c:	ldr	r0, [sl]
   30250:	ldr	r1, [r2]
   30254:	cmp	r0, r1
   30258:	bne	31550 <ReadCompressedDataSlab2+0x1700>
   3025c:	ldr	r1, [fp, #20]
   30260:	ldr	r1, [r1, #4]
   30264:	cmp	r1, #1
   30268:	bne	31550 <ReadCompressedDataSlab2+0x1700>
   3026c:	ldr	r1, [sl, #4]
   30270:	mov	r2, r4
   30274:	mov	r3, r8
   30278:	mul	r0, r1, r0
   3027c:	add	r1, sp, #24
   30280:	str	r0, [sp]
   30284:	mov	r0, r5
   30288:	bl	1ee28 <ReadCompressedUInt16Data>
   3028c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30290:	ldr	r0, [fp, #16]
   30294:	ldr	r7, [r2]
   30298:	ldr	r9, [fp, #20]
   3029c:	ldr	r5, [sp, #20]
   302a0:	add	r1, sp, #24
   302a4:	mov	r2, r8
   302a8:	ldr	r0, [r0, #4]
   302ac:	ldr	r6, [r9, #4]
   302b0:	mul	r3, r0, r7
   302b4:	ldr	r0, [r9]
   302b8:	str	r0, [sp, #12]
   302bc:	mov	r0, r5
   302c0:	bl	28dc <InflateSkipData>
   302c4:	sub	r0, r6, #1
   302c8:	mul	r3, r0, r7
   302cc:	ldr	r0, [r9]
   302d0:	cmp	r0, #1
   302d4:	bne	30c9c <ReadCompressedDataSlab2+0xe4c>
   302d8:	ldr	r2, [fp, #12]
   302dc:	ldr	r0, [sl]
   302e0:	ldr	r1, [r2]
   302e4:	cmp	r0, r1
   302e8:	bne	3160c <ReadCompressedDataSlab2+0x17bc>
   302ec:	ldr	r1, [fp, #20]
   302f0:	ldr	r1, [r1, #4]
   302f4:	cmp	r1, #1
   302f8:	bne	3160c <ReadCompressedDataSlab2+0x17bc>
   302fc:	ldr	r1, [sl, #4]
   30300:	mov	r2, r4
   30304:	mov	r3, r8
   30308:	mul	r0, r1, r0
   3030c:	add	r1, sp, #24
   30310:	str	r0, [sp]
   30314:	mov	r0, r5
   30318:	bl	15178 <ReadCompressedInt32Data>
   3031c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30320:	ldr	r0, [fp, #16]
   30324:	ldr	r7, [r2]
   30328:	ldr	r9, [fp, #20]
   3032c:	ldr	r5, [sp, #20]
   30330:	add	r1, sp, #24
   30334:	mov	r2, r8
   30338:	ldr	r0, [r0, #4]
   3033c:	ldr	r6, [r9, #4]
   30340:	mul	r3, r0, r7
   30344:	ldr	r0, [r9]
   30348:	str	r0, [sp, #12]
   3034c:	mov	r0, r5
   30350:	bl	28dc <InflateSkipData>
   30354:	sub	r0, r6, #1
   30358:	mul	r3, r0, r7
   3035c:	ldr	r0, [r9]
   30360:	cmp	r0, #1
   30364:	bne	30de4 <ReadCompressedDataSlab2+0xf94>
   30368:	ldr	r2, [fp, #12]
   3036c:	ldr	r0, [sl]
   30370:	ldr	r1, [r2]
   30374:	cmp	r0, r1
   30378:	bne	316c8 <ReadCompressedDataSlab2+0x1878>
   3037c:	ldr	r1, [fp, #20]
   30380:	ldr	r1, [r1, #4]
   30384:	cmp	r1, #1
   30388:	bne	316c8 <ReadCompressedDataSlab2+0x1878>
   3038c:	ldr	r1, [sl, #4]
   30390:	mov	r2, r4
   30394:	mov	r3, r8
   30398:	mul	r0, r1, r0
   3039c:	add	r1, sp, #24
   303a0:	str	r0, [sp]
   303a4:	mov	r0, r5
   303a8:	bl	18da0 <ReadCompressedUInt32Data>
   303ac:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   303b0:	ldr	r0, [fp, #16]
   303b4:	ldr	r7, [r2]
   303b8:	ldr	r9, [fp, #20]
   303bc:	ldr	r5, [sp, #20]
   303c0:	add	r1, sp, #24
   303c4:	mov	r2, r8
   303c8:	ldr	r0, [r0, #4]
   303cc:	ldr	r6, [r9, #4]
   303d0:	mul	r3, r0, r7
   303d4:	ldr	r0, [r9]
   303d8:	str	r0, [sp, #12]
   303dc:	mov	r0, r5
   303e0:	bl	28dc <InflateSkipData>
   303e4:	sub	r0, r6, #1
   303e8:	mul	r3, r0, r7
   303ec:	ldr	r0, [r9]
   303f0:	cmp	r0, #1
   303f4:	bne	30f2c <ReadCompressedDataSlab2+0x10dc>
   303f8:	ldr	r2, [fp, #12]
   303fc:	ldr	r0, [sl]
   30400:	ldr	r1, [r2]
   30404:	cmp	r0, r1
   30408:	bne	31784 <ReadCompressedDataSlab2+0x1934>
   3040c:	ldr	r1, [fp, #20]
   30410:	ldr	r1, [r1, #4]
   30414:	cmp	r1, #1
   30418:	bne	31784 <ReadCompressedDataSlab2+0x1934>
   3041c:	ldr	r1, [sl, #4]
   30420:	mov	r2, r4
   30424:	mov	r3, r8
   30428:	mul	r0, r1, r0
   3042c:	add	r1, sp, #24
   30430:	str	r0, [sp]
   30434:	mov	r0, r5
   30438:	bl	114c0 <ReadCompressedUInt64Data>
   3043c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30440:	ldr	r0, [fp, #16]
   30444:	ldr	r7, [r2]
   30448:	ldr	r9, [fp, #20]
   3044c:	ldr	r5, [sp, #20]
   30450:	add	r1, sp, #24
   30454:	mov	r2, r8
   30458:	ldr	r0, [r0, #4]
   3045c:	ldr	r6, [r9, #4]
   30460:	mul	r3, r0, r7
   30464:	ldr	r0, [r9]
   30468:	str	r0, [sp, #12]
   3046c:	mov	r0, r5
   30470:	bl	28dc <InflateSkipData>
   30474:	sub	r0, r6, #1
   30478:	mul	r3, r0, r7
   3047c:	ldr	r0, [r9]
   30480:	cmp	r0, #1
   30484:	bne	31074 <ReadCompressedDataSlab2+0x1224>
   30488:	ldr	r2, [fp, #12]
   3048c:	ldr	r0, [sl]
   30490:	ldr	r1, [r2]
   30494:	cmp	r0, r1
   30498:	bne	31840 <ReadCompressedDataSlab2+0x19f0>
   3049c:	ldr	r1, [fp, #20]
   304a0:	ldr	r1, [r1, #4]
   304a4:	cmp	r1, #1
   304a8:	bne	31840 <ReadCompressedDataSlab2+0x19f0>
   304ac:	ldr	r1, [sl, #4]
   304b0:	mov	r2, r4
   304b4:	mov	r3, r8
   304b8:	mul	r0, r1, r0
   304bc:	add	r1, sp, #24
   304c0:	str	r0, [sp]
   304c4:	mov	r0, r5
   304c8:	bl	e6f8 <ReadCompressedInt64Data>
   304cc:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   304d0:	ldr	r0, [sl, #4]
   304d4:	ldr	r9, [fp, #16]
   304d8:	cmp	r0, #1
   304dc:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   304e0:	ldr	r0, [sp, #12]
   304e4:	mov	r7, sl
   304e8:	mov	r1, #0
   304ec:	add	r6, sp, #24
   304f0:	mov	sl, r3
   304f4:	str	r3, [sp, #16]
   304f8:	sub	r0, r0, #1
   304fc:	str	r0, [sp, #12]
   30500:	b	3056c <ReadCompressedDataSlab2+0x71c>
   30504:	ldr	r8, [fp, #8]
   30508:	mov	r6, r9
   3050c:	ldr	r7, [fp, #24]
   30510:	ldr	r1, [fp, #20]
   30514:	ldr	r0, [fp, #12]
   30518:	ldr	sl, [sp, #16]
   3051c:	ldr	r9, [fp, #16]
   30520:	ldr	r2, [r7]
   30524:	ldr	r1, [r1]
   30528:	ldr	r0, [r0]
   3052c:	sub	r2, r2, #1
   30530:	add	r0, r0, sl
   30534:	mul	r1, r2, r1
   30538:	mov	r2, r8
   3053c:	mvn	r1, r1
   30540:	add	r0, r0, r1
   30544:	ldr	r1, [r9]
   30548:	sub	r3, r0, r1
   3054c:	mov	r0, r5
   30550:	mov	r1, r6
   30554:	bl	28dc <InflateSkipData>
   30558:	ldr	r1, [sp, #20]
   3055c:	ldr	r0, [r7, #4]
   30560:	add	r1, r1, #1
   30564:	cmp	r1, r0
   30568:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   3056c:	ldr	r3, [r9]
   30570:	str	r1, [sp, #20]
   30574:	mov	r0, r5
   30578:	mov	r1, r6
   3057c:	mov	r2, r8
   30580:	bl	28dc <InflateSkipData>
   30584:	mov	sl, r7
   30588:	ldr	sl, [r7]
   3058c:	mov	r0, #1
   30590:	mov	r1, r6
   30594:	mov	r2, r4
   30598:	mov	r3, r8
   3059c:	mov	r9, r6
   305a0:	str	r0, [sp]
   305a4:	mov	r0, r5
   305a8:	bl	65fc <ReadCompressedDoubleData>
   305ac:	add	r4, r4, #8
   305b0:	cmp	sl, #2
   305b4:	blt	30504 <ReadCompressedDataSlab2+0x6b4>
   305b8:	ldr	r8, [fp, #8]
   305bc:	ldr	r7, [sp, #12]
   305c0:	mov	sl, #0
   305c4:	mov	r6, r9
   305c8:	mov	r0, r5
   305cc:	mov	r1, r6
   305d0:	mov	r2, r8
   305d4:	mov	r3, r7
   305d8:	bl	28dc <InflateSkipData>
   305dc:	ldr	r0, [fp, #24]
   305e0:	mov	r1, r6
   305e4:	mov	r2, r4
   305e8:	mov	r3, r8
   305ec:	ldr	r9, [r0]
   305f0:	mov	r0, #1
   305f4:	str	r0, [sp]
   305f8:	mov	r0, r5
   305fc:	bl	65fc <ReadCompressedDoubleData>
   30600:	add	sl, sl, #1
   30604:	sub	r0, r9, #1
   30608:	add	r4, r4, #8
   3060c:	cmp	sl, r0
   30610:	blt	305c8 <ReadCompressedDataSlab2+0x778>
   30614:	b	3050c <ReadCompressedDataSlab2+0x6bc>
   30618:	ldr	r0, [sl, #4]
   3061c:	ldr	r9, [fp, #16]
   30620:	cmp	r0, #1
   30624:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30628:	ldr	r0, [sp, #12]
   3062c:	mov	r7, sl
   30630:	mov	r1, #0
   30634:	add	r6, sp, #24
   30638:	mov	sl, r3
   3063c:	str	r3, [sp, #16]
   30640:	sub	r0, r0, #1
   30644:	str	r0, [sp, #12]
   30648:	b	306b4 <ReadCompressedDataSlab2+0x864>
   3064c:	ldr	r8, [fp, #8]
   30650:	mov	r6, r9
   30654:	ldr	r7, [fp, #24]
   30658:	ldr	r1, [fp, #20]
   3065c:	ldr	r0, [fp, #12]
   30660:	ldr	sl, [sp, #16]
   30664:	ldr	r9, [fp, #16]
   30668:	ldr	r2, [r7]
   3066c:	ldr	r1, [r1]
   30670:	ldr	r0, [r0]
   30674:	sub	r2, r2, #1
   30678:	add	r0, r0, sl
   3067c:	mul	r1, r2, r1
   30680:	mov	r2, r8
   30684:	mvn	r1, r1
   30688:	add	r0, r0, r1
   3068c:	ldr	r1, [r9]
   30690:	sub	r3, r0, r1
   30694:	mov	r0, r5
   30698:	mov	r1, r6
   3069c:	bl	28dc <InflateSkipData>
   306a0:	ldr	r1, [sp, #20]
   306a4:	ldr	r0, [r7, #4]
   306a8:	add	r1, r1, #1
   306ac:	cmp	r1, r0
   306b0:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   306b4:	ldr	r3, [r9]
   306b8:	str	r1, [sp, #20]
   306bc:	mov	r0, r5
   306c0:	mov	r1, r6
   306c4:	mov	r2, r8
   306c8:	bl	28dc <InflateSkipData>
   306cc:	mov	sl, r7
   306d0:	ldr	sl, [r7]
   306d4:	mov	r0, #1
   306d8:	mov	r1, r6
   306dc:	mov	r2, r4
   306e0:	mov	r3, r8
   306e4:	mov	r9, r6
   306e8:	str	r0, [sp]
   306ec:	mov	r0, r5
   306f0:	bl	b980 <ReadCompressedSingleData>
   306f4:	add	r4, r4, #4
   306f8:	cmp	sl, #2
   306fc:	blt	3064c <ReadCompressedDataSlab2+0x7fc>
   30700:	ldr	r8, [fp, #8]
   30704:	ldr	r7, [sp, #12]
   30708:	mov	sl, #0
   3070c:	mov	r6, r9
   30710:	mov	r0, r5
   30714:	mov	r1, r6
   30718:	mov	r2, r8
   3071c:	mov	r3, r7
   30720:	bl	28dc <InflateSkipData>
   30724:	ldr	r0, [fp, #24]
   30728:	mov	r1, r6
   3072c:	mov	r2, r4
   30730:	mov	r3, r8
   30734:	ldr	r9, [r0]
   30738:	mov	r0, #1
   3073c:	str	r0, [sp]
   30740:	mov	r0, r5
   30744:	bl	b980 <ReadCompressedSingleData>
   30748:	add	sl, sl, #1
   3074c:	sub	r0, r9, #1
   30750:	add	r4, r4, #4
   30754:	cmp	sl, r0
   30758:	blt	30710 <ReadCompressedDataSlab2+0x8c0>
   3075c:	b	30654 <ReadCompressedDataSlab2+0x804>
   30760:	ldr	r0, [sl, #4]
   30764:	mov	r7, r8
   30768:	ldr	r8, [fp, #16]
   3076c:	cmp	r0, #1
   30770:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30774:	ldr	r0, [sp, #12]
   30778:	mov	r1, r8
   3077c:	mov	r6, #0
   30780:	add	r9, sp, #24
   30784:	mov	r8, r3
   30788:	str	r3, [sp, #16]
   3078c:	sub	r0, r0, #1
   30790:	str	r0, [sp, #12]
   30794:	b	30800 <ReadCompressedDataSlab2+0x9b0>
   30798:	mov	r3, r8
   3079c:	ldr	sl, [fp, #24]
   307a0:	ldr	r1, [fp, #20]
   307a4:	ldr	r0, [fp, #12]
   307a8:	ldr	r8, [sp, #16]
   307ac:	ldr	r7, [fp, #8]
   307b0:	add	r9, sp, #24
   307b4:	ldr	r2, [sl]
   307b8:	ldr	r1, [r1]
   307bc:	ldr	r0, [r0]
   307c0:	sub	r2, r2, #1
   307c4:	add	r0, r0, r8
   307c8:	mul	r1, r2, r1
   307cc:	mov	r2, r7
   307d0:	mvn	r1, r1
   307d4:	add	r0, r0, r1
   307d8:	ldr	r1, [r3]
   307dc:	sub	r3, r0, r1
   307e0:	mov	r0, r5
   307e4:	mov	r1, r9
   307e8:	bl	28dc <InflateSkipData>
   307ec:	ldr	r0, [sl, #4]
   307f0:	ldr	r1, [fp, #16]
   307f4:	add	r6, r6, #1
   307f8:	cmp	r6, r0
   307fc:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30800:	ldr	r3, [r1]
   30804:	mov	r8, r1
   30808:	mov	r0, r5
   3080c:	mov	r1, r9
   30810:	mov	r2, r7
   30814:	bl	28dc <InflateSkipData>
   30818:	ldr	sl, [sl]
   3081c:	mov	r0, #1
   30820:	mov	r1, r9
   30824:	mov	r2, r4
   30828:	mov	r3, r7
   3082c:	str	r0, [sp]
   30830:	mov	r0, r5
   30834:	bl	21db8 <ReadCompressedInt8Data>
   30838:	add	r4, r4, #1
   3083c:	cmp	sl, #2
   30840:	blt	30798 <ReadCompressedDataSlab2+0x948>
   30844:	str	r6, [sp, #20]
   30848:	ldr	r8, [fp, #8]
   3084c:	ldr	r6, [sp, #12]
   30850:	mov	r1, r9
   30854:	mov	sl, #0
   30858:	mov	r7, #1
   3085c:	mov	r0, r5
   30860:	mov	r2, r8
   30864:	mov	r3, r6
   30868:	bl	28dc <InflateSkipData>
   3086c:	ldr	r0, [fp, #24]
   30870:	add	r2, r4, sl
   30874:	add	r1, sp, #24
   30878:	mov	r3, r8
   3087c:	ldr	r9, [r0]
   30880:	mov	r0, r5
   30884:	str	r7, [sp]
   30888:	bl	21db8 <ReadCompressedInt8Data>
   3088c:	add	sl, sl, #1
   30890:	sub	r0, r9, #1
   30894:	add	r1, sp, #24
   30898:	cmp	sl, r0
   3089c:	blt	3085c <ReadCompressedDataSlab2+0xa0c>
   308a0:	ldr	r8, [fp, #16]
   308a4:	ldr	r6, [sp, #20]
   308a8:	add	r4, r4, sl
   308ac:	b	30798 <ReadCompressedDataSlab2+0x948>
   308b0:	ldr	r0, [sl, #4]
   308b4:	mov	r7, r8
   308b8:	ldr	r8, [fp, #16]
   308bc:	cmp	r0, #1
   308c0:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   308c4:	ldr	r0, [sp, #12]
   308c8:	mov	r1, r8
   308cc:	mov	r6, #0
   308d0:	add	r9, sp, #24
   308d4:	mov	r8, r3
   308d8:	str	r3, [sp, #16]
   308dc:	sub	r0, r0, #1
   308e0:	str	r0, [sp, #12]
   308e4:	b	30950 <ReadCompressedDataSlab2+0xb00>
   308e8:	mov	r3, r8
   308ec:	ldr	sl, [fp, #24]
   308f0:	ldr	r1, [fp, #20]
   308f4:	ldr	r0, [fp, #12]
   308f8:	ldr	r8, [sp, #16]
   308fc:	ldr	r7, [fp, #8]
   30900:	add	r9, sp, #24
   30904:	ldr	r2, [sl]
   30908:	ldr	r1, [r1]
   3090c:	ldr	r0, [r0]
   30910:	sub	r2, r2, #1
   30914:	add	r0, r0, r8
   30918:	mul	r1, r2, r1
   3091c:	mov	r2, r7
   30920:	mvn	r1, r1
   30924:	add	r0, r0, r1
   30928:	ldr	r1, [r3]
   3092c:	sub	r3, r0, r1
   30930:	mov	r0, r5
   30934:	mov	r1, r9
   30938:	bl	28dc <InflateSkipData>
   3093c:	ldr	r0, [sl, #4]
   30940:	ldr	r1, [fp, #16]
   30944:	add	r6, r6, #1
   30948:	cmp	r6, r0
   3094c:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30950:	ldr	r3, [r1]
   30954:	mov	r8, r1
   30958:	mov	r0, r5
   3095c:	mov	r1, r9
   30960:	mov	r2, r7
   30964:	bl	28dc <InflateSkipData>
   30968:	ldr	sl, [sl]
   3096c:	mov	r0, #1
   30970:	mov	r1, r9
   30974:	mov	r2, r4
   30978:	mov	r3, r7
   3097c:	str	r0, [sp]
   30980:	mov	r0, r5
   30984:	bl	24d48 <ReadCompressedUInt8Data>
   30988:	add	r4, r4, #1
   3098c:	cmp	sl, #2
   30990:	blt	308e8 <ReadCompressedDataSlab2+0xa98>
   30994:	str	r6, [sp, #20]
   30998:	ldr	r8, [fp, #8]
   3099c:	ldr	r6, [sp, #12]
   309a0:	mov	r1, r9
   309a4:	mov	sl, #0
   309a8:	mov	r7, #1
   309ac:	mov	r0, r5
   309b0:	mov	r2, r8
   309b4:	mov	r3, r6
   309b8:	bl	28dc <InflateSkipData>
   309bc:	ldr	r0, [fp, #24]
   309c0:	add	r2, r4, sl
   309c4:	add	r1, sp, #24
   309c8:	mov	r3, r8
   309cc:	ldr	r9, [r0]
   309d0:	mov	r0, r5
   309d4:	str	r7, [sp]
   309d8:	bl	24d48 <ReadCompressedUInt8Data>
   309dc:	add	sl, sl, #1
   309e0:	sub	r0, r9, #1
   309e4:	add	r1, sp, #24
   309e8:	cmp	sl, r0
   309ec:	blt	309ac <ReadCompressedDataSlab2+0xb5c>
   309f0:	ldr	r8, [fp, #16]
   309f4:	ldr	r6, [sp, #20]
   309f8:	add	r4, r4, sl
   309fc:	b	308e8 <ReadCompressedDataSlab2+0xa98>
   30a00:	ldr	r0, [sl, #4]
   30a04:	ldr	r9, [fp, #16]
   30a08:	cmp	r0, #1
   30a0c:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30a10:	ldr	r0, [sp, #12]
   30a14:	mov	r7, sl
   30a18:	mov	r1, #0
   30a1c:	add	r6, sp, #24
   30a20:	mov	sl, r3
   30a24:	str	r3, [sp, #16]
   30a28:	sub	r0, r0, #1
   30a2c:	str	r0, [sp, #12]
   30a30:	b	30a9c <ReadCompressedDataSlab2+0xc4c>
   30a34:	ldr	r8, [fp, #8]
   30a38:	mov	r6, r9
   30a3c:	ldr	r7, [fp, #24]
   30a40:	ldr	r1, [fp, #20]
   30a44:	ldr	r0, [fp, #12]
   30a48:	ldr	sl, [sp, #16]
   30a4c:	ldr	r9, [fp, #16]
   30a50:	ldr	r2, [r7]
   30a54:	ldr	r1, [r1]
   30a58:	ldr	r0, [r0]
   30a5c:	sub	r2, r2, #1
   30a60:	add	r0, r0, sl
   30a64:	mul	r1, r2, r1
   30a68:	mov	r2, r8
   30a6c:	mvn	r1, r1
   30a70:	add	r0, r0, r1
   30a74:	ldr	r1, [r9]
   30a78:	sub	r3, r0, r1
   30a7c:	mov	r0, r5
   30a80:	mov	r1, r6
   30a84:	bl	28dc <InflateSkipData>
   30a88:	ldr	r1, [sp, #20]
   30a8c:	ldr	r0, [r7, #4]
   30a90:	add	r1, r1, #1
   30a94:	cmp	r1, r0
   30a98:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30a9c:	ldr	r3, [r9]
   30aa0:	str	r1, [sp, #20]
   30aa4:	mov	r0, r5
   30aa8:	mov	r1, r6
   30aac:	mov	r2, r8
   30ab0:	bl	28dc <InflateSkipData>
   30ab4:	mov	sl, r7
   30ab8:	ldr	sl, [r7]
   30abc:	mov	r0, #1
   30ac0:	mov	r1, r6
   30ac4:	mov	r2, r4
   30ac8:	mov	r3, r8
   30acc:	mov	r9, r6
   30ad0:	str	r0, [sp]
   30ad4:	mov	r0, r5
   30ad8:	bl	1bde4 <ReadCompressedInt16Data>
   30adc:	add	r4, r4, #2
   30ae0:	cmp	sl, #2
   30ae4:	blt	30a34 <ReadCompressedDataSlab2+0xbe4>
   30ae8:	ldr	r8, [fp, #8]
   30aec:	ldr	r7, [sp, #12]
   30af0:	mov	sl, #0
   30af4:	mov	r6, r9
   30af8:	mov	r0, r5
   30afc:	mov	r1, r6
   30b00:	mov	r2, r8
   30b04:	mov	r3, r7
   30b08:	bl	28dc <InflateSkipData>
   30b0c:	ldr	r0, [fp, #24]
   30b10:	mov	r1, r6
   30b14:	mov	r2, r4
   30b18:	mov	r3, r8
   30b1c:	ldr	r9, [r0]
   30b20:	mov	r0, #1
   30b24:	str	r0, [sp]
   30b28:	mov	r0, r5
   30b2c:	bl	1bde4 <ReadCompressedInt16Data>
   30b30:	add	sl, sl, #1
   30b34:	sub	r0, r9, #1
   30b38:	add	r4, r4, #2
   30b3c:	cmp	sl, r0
   30b40:	blt	30af8 <ReadCompressedDataSlab2+0xca8>
   30b44:	b	30a3c <ReadCompressedDataSlab2+0xbec>
   30b48:	ldr	r0, [sl, #4]
   30b4c:	ldr	r9, [fp, #16]
   30b50:	cmp	r0, #1
   30b54:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30b58:	ldr	r0, [sp, #16]
   30b5c:	mov	r7, sl
   30b60:	mov	r6, r5
   30b64:	mov	r1, #0
   30b68:	add	r5, sp, #24
   30b6c:	mov	sl, r3
   30b70:	str	r3, [sp, #12]
   30b74:	sub	r0, r0, #1
   30b78:	str	r0, [sp, #8]
   30b7c:	b	30bec <ReadCompressedDataSlab2+0xd9c>
   30b80:	ldr	r8, [fp, #8]
   30b84:	ldr	r6, [sp, #20]
   30b88:	mov	r5, r9
   30b8c:	ldr	r7, [fp, #24]
   30b90:	ldr	r1, [fp, #20]
   30b94:	ldr	r0, [fp, #12]
   30b98:	ldr	sl, [sp, #12]
   30b9c:	ldr	r9, [fp, #16]
   30ba0:	ldr	r2, [r7]
   30ba4:	ldr	r1, [r1]
   30ba8:	ldr	r0, [r0]
   30bac:	sub	r2, r2, #1
   30bb0:	add	r0, r0, sl
   30bb4:	mul	r1, r2, r1
   30bb8:	mov	r2, r8
   30bbc:	mvn	r1, r1
   30bc0:	add	r0, r0, r1
   30bc4:	ldr	r1, [r9]
   30bc8:	sub	r3, r0, r1
   30bcc:	mov	r0, r6
   30bd0:	mov	r1, r5
   30bd4:	bl	28dc <InflateSkipData>
   30bd8:	ldr	r1, [sp, #16]
   30bdc:	ldr	r0, [r7, #4]
   30be0:	add	r1, r1, #1
   30be4:	cmp	r1, r0
   30be8:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30bec:	ldr	r3, [r9]
   30bf0:	str	r1, [sp, #16]
   30bf4:	mov	r0, r6
   30bf8:	mov	r1, r5
   30bfc:	mov	r2, r8
   30c00:	bl	28dc <InflateSkipData>
   30c04:	mov	sl, r7
   30c08:	ldr	sl, [r7]
   30c0c:	mov	r0, #1
   30c10:	mov	r1, r5
   30c14:	mov	r2, r4
   30c18:	mov	r3, r8
   30c1c:	mov	r9, r5
   30c20:	str	r0, [sp]
   30c24:	mov	r0, r6
   30c28:	bl	1ee28 <ReadCompressedUInt16Data>
   30c2c:	add	r4, r4, #2
   30c30:	cmp	sl, #2
   30c34:	blt	30b80 <ReadCompressedDataSlab2+0xd30>
   30c38:	ldr	r8, [fp, #8]
   30c3c:	ldr	r7, [sp, #8]
   30c40:	ldr	r6, [sp, #20]
   30c44:	mov	sl, #0
   30c48:	mov	r5, r9
   30c4c:	mov	r0, r6
   30c50:	mov	r1, r5
   30c54:	mov	r2, r8
   30c58:	mov	r3, r7
   30c5c:	bl	28dc <InflateSkipData>
   30c60:	ldr	r0, [fp, #24]
   30c64:	mov	r1, r5
   30c68:	mov	r2, r4
   30c6c:	mov	r3, r8
   30c70:	ldr	r9, [r0]
   30c74:	mov	r0, #1
   30c78:	str	r0, [sp]
   30c7c:	mov	r0, r6
   30c80:	bl	1ee28 <ReadCompressedUInt16Data>
   30c84:	add	sl, sl, #1
   30c88:	sub	r0, r9, #1
   30c8c:	add	r4, r4, #2
   30c90:	cmp	sl, r0
   30c94:	blt	30c4c <ReadCompressedDataSlab2+0xdfc>
   30c98:	b	30b8c <ReadCompressedDataSlab2+0xd3c>
   30c9c:	ldr	r0, [sl, #4]
   30ca0:	ldr	r9, [fp, #16]
   30ca4:	cmp	r0, #1
   30ca8:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30cac:	ldr	r0, [sp, #12]
   30cb0:	mov	r7, sl
   30cb4:	mov	r1, #0
   30cb8:	add	r6, sp, #24
   30cbc:	mov	sl, r3
   30cc0:	str	r3, [sp, #16]
   30cc4:	sub	r0, r0, #1
   30cc8:	str	r0, [sp, #12]
   30ccc:	b	30d38 <ReadCompressedDataSlab2+0xee8>
   30cd0:	ldr	r8, [fp, #8]
   30cd4:	mov	r6, r9
   30cd8:	ldr	r7, [fp, #24]
   30cdc:	ldr	r1, [fp, #20]
   30ce0:	ldr	r0, [fp, #12]
   30ce4:	ldr	sl, [sp, #16]
   30ce8:	ldr	r9, [fp, #16]
   30cec:	ldr	r2, [r7]
   30cf0:	ldr	r1, [r1]
   30cf4:	ldr	r0, [r0]
   30cf8:	sub	r2, r2, #1
   30cfc:	add	r0, r0, sl
   30d00:	mul	r1, r2, r1
   30d04:	mov	r2, r8
   30d08:	mvn	r1, r1
   30d0c:	add	r0, r0, r1
   30d10:	ldr	r1, [r9]
   30d14:	sub	r3, r0, r1
   30d18:	mov	r0, r5
   30d1c:	mov	r1, r6
   30d20:	bl	28dc <InflateSkipData>
   30d24:	ldr	r1, [sp, #20]
   30d28:	ldr	r0, [r7, #4]
   30d2c:	add	r1, r1, #1
   30d30:	cmp	r1, r0
   30d34:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30d38:	ldr	r3, [r9]
   30d3c:	str	r1, [sp, #20]
   30d40:	mov	r0, r5
   30d44:	mov	r1, r6
   30d48:	mov	r2, r8
   30d4c:	bl	28dc <InflateSkipData>
   30d50:	mov	sl, r7
   30d54:	ldr	sl, [r7]
   30d58:	mov	r0, #1
   30d5c:	mov	r1, r6
   30d60:	mov	r2, r4
   30d64:	mov	r3, r8
   30d68:	mov	r9, r6
   30d6c:	str	r0, [sp]
   30d70:	mov	r0, r5
   30d74:	bl	15178 <ReadCompressedInt32Data>
   30d78:	add	r4, r4, #4
   30d7c:	cmp	sl, #2
   30d80:	blt	30cd0 <ReadCompressedDataSlab2+0xe80>
   30d84:	ldr	r8, [fp, #8]
   30d88:	ldr	r7, [sp, #12]
   30d8c:	mov	sl, #0
   30d90:	mov	r6, r9
   30d94:	mov	r0, r5
   30d98:	mov	r1, r6
   30d9c:	mov	r2, r8
   30da0:	mov	r3, r7
   30da4:	bl	28dc <InflateSkipData>
   30da8:	ldr	r0, [fp, #24]
   30dac:	mov	r1, r6
   30db0:	mov	r2, r4
   30db4:	mov	r3, r8
   30db8:	ldr	r9, [r0]
   30dbc:	mov	r0, #1
   30dc0:	str	r0, [sp]
   30dc4:	mov	r0, r5
   30dc8:	bl	15178 <ReadCompressedInt32Data>
   30dcc:	add	sl, sl, #1
   30dd0:	sub	r0, r9, #1
   30dd4:	add	r4, r4, #4
   30dd8:	cmp	sl, r0
   30ddc:	blt	30d94 <ReadCompressedDataSlab2+0xf44>
   30de0:	b	30cd8 <ReadCompressedDataSlab2+0xe88>
   30de4:	ldr	r0, [sl, #4]
   30de8:	ldr	r9, [fp, #16]
   30dec:	cmp	r0, #1
   30df0:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30df4:	ldr	r0, [sp, #12]
   30df8:	mov	r7, sl
   30dfc:	mov	r1, #0
   30e00:	add	r6, sp, #24
   30e04:	mov	sl, r3
   30e08:	str	r3, [sp, #16]
   30e0c:	sub	r0, r0, #1
   30e10:	str	r0, [sp, #12]
   30e14:	b	30e80 <ReadCompressedDataSlab2+0x1030>
   30e18:	ldr	r8, [fp, #8]
   30e1c:	mov	r6, r9
   30e20:	ldr	r7, [fp, #24]
   30e24:	ldr	r1, [fp, #20]
   30e28:	ldr	r0, [fp, #12]
   30e2c:	ldr	sl, [sp, #16]
   30e30:	ldr	r9, [fp, #16]
   30e34:	ldr	r2, [r7]
   30e38:	ldr	r1, [r1]
   30e3c:	ldr	r0, [r0]
   30e40:	sub	r2, r2, #1
   30e44:	add	r0, r0, sl
   30e48:	mul	r1, r2, r1
   30e4c:	mov	r2, r8
   30e50:	mvn	r1, r1
   30e54:	add	r0, r0, r1
   30e58:	ldr	r1, [r9]
   30e5c:	sub	r3, r0, r1
   30e60:	mov	r0, r5
   30e64:	mov	r1, r6
   30e68:	bl	28dc <InflateSkipData>
   30e6c:	ldr	r1, [sp, #20]
   30e70:	ldr	r0, [r7, #4]
   30e74:	add	r1, r1, #1
   30e78:	cmp	r1, r0
   30e7c:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30e80:	ldr	r3, [r9]
   30e84:	str	r1, [sp, #20]
   30e88:	mov	r0, r5
   30e8c:	mov	r1, r6
   30e90:	mov	r2, r8
   30e94:	bl	28dc <InflateSkipData>
   30e98:	mov	sl, r7
   30e9c:	ldr	sl, [r7]
   30ea0:	mov	r0, #1
   30ea4:	mov	r1, r6
   30ea8:	mov	r2, r4
   30eac:	mov	r3, r8
   30eb0:	mov	r9, r6
   30eb4:	str	r0, [sp]
   30eb8:	mov	r0, r5
   30ebc:	bl	18da0 <ReadCompressedUInt32Data>
   30ec0:	add	r4, r4, #4
   30ec4:	cmp	sl, #2
   30ec8:	blt	30e18 <ReadCompressedDataSlab2+0xfc8>
   30ecc:	ldr	r8, [fp, #8]
   30ed0:	ldr	r7, [sp, #12]
   30ed4:	mov	sl, #0
   30ed8:	mov	r6, r9
   30edc:	mov	r0, r5
   30ee0:	mov	r1, r6
   30ee4:	mov	r2, r8
   30ee8:	mov	r3, r7
   30eec:	bl	28dc <InflateSkipData>
   30ef0:	ldr	r0, [fp, #24]
   30ef4:	mov	r1, r6
   30ef8:	mov	r2, r4
   30efc:	mov	r3, r8
   30f00:	ldr	r9, [r0]
   30f04:	mov	r0, #1
   30f08:	str	r0, [sp]
   30f0c:	mov	r0, r5
   30f10:	bl	18da0 <ReadCompressedUInt32Data>
   30f14:	add	sl, sl, #1
   30f18:	sub	r0, r9, #1
   30f1c:	add	r4, r4, #4
   30f20:	cmp	sl, r0
   30f24:	blt	30edc <ReadCompressedDataSlab2+0x108c>
   30f28:	b	30e20 <ReadCompressedDataSlab2+0xfd0>
   30f2c:	ldr	r0, [sl, #4]
   30f30:	ldr	r9, [fp, #16]
   30f34:	cmp	r0, #1
   30f38:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30f3c:	ldr	r0, [sp, #12]
   30f40:	mov	r7, sl
   30f44:	mov	r1, #0
   30f48:	add	r6, sp, #24
   30f4c:	mov	sl, r3
   30f50:	str	r3, [sp, #16]
   30f54:	sub	r0, r0, #1
   30f58:	str	r0, [sp, #12]
   30f5c:	b	30fc8 <ReadCompressedDataSlab2+0x1178>
   30f60:	ldr	r8, [fp, #8]
   30f64:	mov	r6, r9
   30f68:	ldr	r7, [fp, #24]
   30f6c:	ldr	r1, [fp, #20]
   30f70:	ldr	r0, [fp, #12]
   30f74:	ldr	sl, [sp, #16]
   30f78:	ldr	r9, [fp, #16]
   30f7c:	ldr	r2, [r7]
   30f80:	ldr	r1, [r1]
   30f84:	ldr	r0, [r0]
   30f88:	sub	r2, r2, #1
   30f8c:	add	r0, r0, sl
   30f90:	mul	r1, r2, r1
   30f94:	mov	r2, r8
   30f98:	mvn	r1, r1
   30f9c:	add	r0, r0, r1
   30fa0:	ldr	r1, [r9]
   30fa4:	sub	r3, r0, r1
   30fa8:	mov	r0, r5
   30fac:	mov	r1, r6
   30fb0:	bl	28dc <InflateSkipData>
   30fb4:	ldr	r1, [sp, #20]
   30fb8:	ldr	r0, [r7, #4]
   30fbc:	add	r1, r1, #1
   30fc0:	cmp	r1, r0
   30fc4:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   30fc8:	ldr	r3, [r9]
   30fcc:	str	r1, [sp, #20]
   30fd0:	mov	r0, r5
   30fd4:	mov	r1, r6
   30fd8:	mov	r2, r8
   30fdc:	bl	28dc <InflateSkipData>
   30fe0:	mov	sl, r7
   30fe4:	ldr	sl, [r7]
   30fe8:	mov	r0, #1
   30fec:	mov	r1, r6
   30ff0:	mov	r2, r4
   30ff4:	mov	r3, r8
   30ff8:	mov	r9, r6
   30ffc:	str	r0, [sp]
   31000:	mov	r0, r5
   31004:	bl	114c0 <ReadCompressedUInt64Data>
   31008:	add	r4, r4, #8
   3100c:	cmp	sl, #2
   31010:	blt	30f60 <ReadCompressedDataSlab2+0x1110>
   31014:	ldr	r8, [fp, #8]
   31018:	ldr	r7, [sp, #12]
   3101c:	mov	sl, #0
   31020:	mov	r6, r9
   31024:	mov	r0, r5
   31028:	mov	r1, r6
   3102c:	mov	r2, r8
   31030:	mov	r3, r7
   31034:	bl	28dc <InflateSkipData>
   31038:	ldr	r0, [fp, #24]
   3103c:	mov	r1, r6
   31040:	mov	r2, r4
   31044:	mov	r3, r8
   31048:	ldr	r9, [r0]
   3104c:	mov	r0, #1
   31050:	str	r0, [sp]
   31054:	mov	r0, r5
   31058:	bl	114c0 <ReadCompressedUInt64Data>
   3105c:	add	sl, sl, #1
   31060:	sub	r0, r9, #1
   31064:	add	r4, r4, #8
   31068:	cmp	sl, r0
   3106c:	blt	31024 <ReadCompressedDataSlab2+0x11d4>
   31070:	b	30f68 <ReadCompressedDataSlab2+0x1118>
   31074:	ldr	r0, [sl, #4]
   31078:	ldr	r1, [sp, #12]
   3107c:	ldr	r9, [fp, #16]
   31080:	cmp	r0, #1
   31084:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31088:	sub	r0, r1, #1
   3108c:	mov	r7, #0
   31090:	add	r6, sp, #24
   31094:	str	r3, [sp, #16]
   31098:	str	r0, [sp, #12]
   3109c:	b	31104 <ReadCompressedDataSlab2+0x12b4>
   310a0:	ldr	r8, [fp, #8]
   310a4:	ldr	sl, [fp, #24]
   310a8:	ldr	r1, [fp, #20]
   310ac:	ldr	r0, [fp, #12]
   310b0:	ldr	r7, [sp, #16]
   310b4:	ldr	r9, [fp, #16]
   310b8:	ldr	r2, [sl]
   310bc:	ldr	r1, [r1]
   310c0:	ldr	r0, [r0]
   310c4:	sub	r2, r2, #1
   310c8:	add	r0, r0, r7
   310cc:	mul	r1, r2, r1
   310d0:	mov	r2, r8
   310d4:	mvn	r1, r1
   310d8:	add	r0, r0, r1
   310dc:	ldr	r1, [r9]
   310e0:	sub	r3, r0, r1
   310e4:	mov	r0, r5
   310e8:	mov	r1, r6
   310ec:	bl	28dc <InflateSkipData>
   310f0:	ldr	r7, [sp, #20]
   310f4:	ldr	r0, [sl, #4]
   310f8:	add	r7, r7, #1
   310fc:	cmp	r7, r0
   31100:	bge	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31104:	ldr	r3, [r9]
   31108:	mov	r0, r5
   3110c:	mov	r1, r6
   31110:	mov	r2, r8
   31114:	bl	28dc <InflateSkipData>
   31118:	ldr	sl, [sl]
   3111c:	mov	r0, #1
   31120:	mov	r1, r6
   31124:	mov	r2, r4
   31128:	mov	r3, r8
   3112c:	str	r0, [sp]
   31130:	mov	r0, r5
   31134:	bl	e6f8 <ReadCompressedInt64Data>
   31138:	add	r4, r4, #8
   3113c:	cmp	sl, #2
   31140:	str	r7, [sp, #20]
   31144:	blt	310a0 <ReadCompressedDataSlab2+0x1250>
   31148:	ldr	r8, [fp, #8]
   3114c:	ldr	r7, [sp, #12]
   31150:	mov	sl, #0
   31154:	mov	r0, r5
   31158:	mov	r1, r6
   3115c:	mov	r2, r8
   31160:	mov	r3, r7
   31164:	bl	28dc <InflateSkipData>
   31168:	ldr	r0, [fp, #24]
   3116c:	mov	r1, r6
   31170:	mov	r2, r4
   31174:	mov	r3, r8
   31178:	ldr	r9, [r0]
   3117c:	mov	r0, #1
   31180:	str	r0, [sp]
   31184:	mov	r0, r5
   31188:	bl	e6f8 <ReadCompressedInt64Data>
   3118c:	add	sl, sl, #1
   31190:	sub	r0, r9, #1
   31194:	add	r4, r4, #8
   31198:	cmp	sl, r0
   3119c:	blt	31154 <ReadCompressedDataSlab2+0x1304>
   311a0:	b	310a4 <ReadCompressedDataSlab2+0x1254>
   311a4:	ldr	r0, [sl, #4]
   311a8:	str	r3, [sp, #16]
   311ac:	cmp	r0, #1
   311b0:	ldr	r0, [fp, #16]
   311b4:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   311b8:	mov	r9, r8
   311bc:	mov	r6, r2
   311c0:	mov	r7, #0
   311c4:	ldr	r3, [r0]
   311c8:	add	r1, sp, #24
   311cc:	mov	r0, r5
   311d0:	mov	r2, r9
   311d4:	mov	r8, r1
   311d8:	bl	28dc <InflateSkipData>
   311dc:	ldr	r0, [sl]
   311e0:	mov	r1, r8
   311e4:	mov	r2, r4
   311e8:	mov	r3, r9
   311ec:	str	r0, [sp]
   311f0:	mov	r0, r5
   311f4:	bl	65fc <ReadCompressedDoubleData>
   311f8:	ldr	r0, [r6]
   311fc:	ldr	r1, [sp, #16]
   31200:	mov	r8, r6
   31204:	ldr	r6, [sl]
   31208:	add	r0, r0, r1
   3120c:	ldr	r1, [fp, #20]
   31210:	sub	r2, r6, #1
   31214:	ldr	r1, [r1]
   31218:	mul	r1, r1, r2
   3121c:	mov	r2, r9
   31220:	mvn	r1, r1
   31224:	add	r0, r0, r1
   31228:	ldr	r1, [fp, #16]
   3122c:	ldr	r1, [r1]
   31230:	sub	r3, r0, r1
   31234:	mov	r0, r5
   31238:	add	r1, sp, #24
   3123c:	bl	28dc <InflateSkipData>
   31240:	ldr	r0, [sl, #4]
   31244:	add	r7, r7, #1
   31248:	add	r4, r4, r6, lsl #3
   3124c:	mov	r6, r8
   31250:	cmp	r7, r0
   31254:	ldr	r0, [fp, #16]
   31258:	blt	311c4 <ReadCompressedDataSlab2+0x1374>
   3125c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31260:	ldr	r0, [sl, #4]
   31264:	str	r3, [sp, #16]
   31268:	cmp	r0, #1
   3126c:	ldr	r0, [fp, #16]
   31270:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31274:	mov	r9, r8
   31278:	mov	r6, r2
   3127c:	mov	r7, #0
   31280:	ldr	r3, [r0]
   31284:	add	r1, sp, #24
   31288:	mov	r0, r5
   3128c:	mov	r2, r9
   31290:	mov	r8, r1
   31294:	bl	28dc <InflateSkipData>
   31298:	ldr	r0, [sl]
   3129c:	mov	r1, r8
   312a0:	mov	r2, r4
   312a4:	mov	r3, r9
   312a8:	str	r0, [sp]
   312ac:	mov	r0, r5
   312b0:	bl	b980 <ReadCompressedSingleData>
   312b4:	ldr	r0, [r6]
   312b8:	ldr	r1, [sp, #16]
   312bc:	mov	r8, r6
   312c0:	ldr	r6, [sl]
   312c4:	add	r0, r0, r1
   312c8:	ldr	r1, [fp, #20]
   312cc:	sub	r2, r6, #1
   312d0:	ldr	r1, [r1]
   312d4:	mul	r1, r1, r2
   312d8:	mov	r2, r9
   312dc:	mvn	r1, r1
   312e0:	add	r0, r0, r1
   312e4:	ldr	r1, [fp, #16]
   312e8:	ldr	r1, [r1]
   312ec:	sub	r3, r0, r1
   312f0:	mov	r0, r5
   312f4:	add	r1, sp, #24
   312f8:	bl	28dc <InflateSkipData>
   312fc:	ldr	r0, [sl, #4]
   31300:	add	r7, r7, #1
   31304:	add	r4, r4, r6, lsl #2
   31308:	mov	r6, r8
   3130c:	cmp	r7, r0
   31310:	ldr	r0, [fp, #16]
   31314:	blt	31280 <ReadCompressedDataSlab2+0x1430>
   31318:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   3131c:	ldr	r0, [sl, #4]
   31320:	str	r3, [sp, #16]
   31324:	cmp	r0, #1
   31328:	ldr	r0, [fp, #16]
   3132c:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31330:	mov	r9, r8
   31334:	mov	r6, r2
   31338:	mov	r7, #0
   3133c:	ldr	r3, [r0]
   31340:	add	r1, sp, #24
   31344:	mov	r0, r5
   31348:	mov	r2, r9
   3134c:	mov	r8, r1
   31350:	bl	28dc <InflateSkipData>
   31354:	ldr	r0, [sl]
   31358:	mov	r1, r8
   3135c:	mov	r2, r4
   31360:	mov	r3, r9
   31364:	str	r0, [sp]
   31368:	mov	r0, r5
   3136c:	bl	21db8 <ReadCompressedInt8Data>
   31370:	ldr	r0, [r6]
   31374:	ldr	r1, [sp, #16]
   31378:	mov	r8, r6
   3137c:	ldr	r6, [sl]
   31380:	add	r0, r0, r1
   31384:	ldr	r1, [fp, #20]
   31388:	sub	r2, r6, #1
   3138c:	ldr	r1, [r1]
   31390:	mul	r1, r1, r2
   31394:	mov	r2, r9
   31398:	mvn	r1, r1
   3139c:	add	r0, r0, r1
   313a0:	ldr	r1, [fp, #16]
   313a4:	ldr	r1, [r1]
   313a8:	sub	r3, r0, r1
   313ac:	mov	r0, r5
   313b0:	add	r1, sp, #24
   313b4:	bl	28dc <InflateSkipData>
   313b8:	ldr	r0, [sl, #4]
   313bc:	add	r7, r7, #1
   313c0:	add	r4, r4, r6
   313c4:	mov	r6, r8
   313c8:	cmp	r7, r0
   313cc:	ldr	r0, [fp, #16]
   313d0:	blt	3133c <ReadCompressedDataSlab2+0x14ec>
   313d4:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   313d8:	ldr	r0, [sl, #4]
   313dc:	str	r3, [sp, #16]
   313e0:	cmp	r0, #1
   313e4:	ldr	r0, [fp, #16]
   313e8:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   313ec:	mov	r9, r8
   313f0:	mov	r6, r2
   313f4:	mov	r7, #0
   313f8:	ldr	r3, [r0]
   313fc:	add	r1, sp, #24
   31400:	mov	r0, r5
   31404:	mov	r2, r9
   31408:	mov	r8, r1
   3140c:	bl	28dc <InflateSkipData>
   31410:	ldr	r0, [sl]
   31414:	mov	r1, r8
   31418:	mov	r2, r4
   3141c:	mov	r3, r9
   31420:	str	r0, [sp]
   31424:	mov	r0, r5
   31428:	bl	24d48 <ReadCompressedUInt8Data>
   3142c:	ldr	r0, [r6]
   31430:	ldr	r1, [sp, #16]
   31434:	mov	r8, r6
   31438:	ldr	r6, [sl]
   3143c:	add	r0, r0, r1
   31440:	ldr	r1, [fp, #20]
   31444:	sub	r2, r6, #1
   31448:	ldr	r1, [r1]
   3144c:	mul	r1, r1, r2
   31450:	mov	r2, r9
   31454:	mvn	r1, r1
   31458:	add	r0, r0, r1
   3145c:	ldr	r1, [fp, #16]
   31460:	ldr	r1, [r1]
   31464:	sub	r3, r0, r1
   31468:	mov	r0, r5
   3146c:	add	r1, sp, #24
   31470:	bl	28dc <InflateSkipData>
   31474:	ldr	r0, [sl, #4]
   31478:	add	r7, r7, #1
   3147c:	add	r4, r4, r6
   31480:	mov	r6, r8
   31484:	cmp	r7, r0
   31488:	ldr	r0, [fp, #16]
   3148c:	blt	313f8 <ReadCompressedDataSlab2+0x15a8>
   31490:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31494:	ldr	r0, [sl, #4]
   31498:	str	r3, [sp, #16]
   3149c:	cmp	r0, #1
   314a0:	ldr	r0, [fp, #16]
   314a4:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   314a8:	mov	r9, r8
   314ac:	mov	r6, r2
   314b0:	mov	r7, #0
   314b4:	ldr	r3, [r0]
   314b8:	add	r1, sp, #24
   314bc:	mov	r0, r5
   314c0:	mov	r2, r9
   314c4:	mov	r8, r1
   314c8:	bl	28dc <InflateSkipData>
   314cc:	ldr	r0, [sl]
   314d0:	mov	r1, r8
   314d4:	mov	r2, r4
   314d8:	mov	r3, r9
   314dc:	str	r0, [sp]
   314e0:	mov	r0, r5
   314e4:	bl	1bde4 <ReadCompressedInt16Data>
   314e8:	ldr	r0, [r6]
   314ec:	ldr	r1, [sp, #16]
   314f0:	mov	r8, r6
   314f4:	ldr	r6, [sl]
   314f8:	add	r0, r0, r1
   314fc:	ldr	r1, [fp, #20]
   31500:	sub	r2, r6, #1
   31504:	ldr	r1, [r1]
   31508:	mul	r1, r1, r2
   3150c:	mov	r2, r9
   31510:	mvn	r1, r1
   31514:	add	r0, r0, r1
   31518:	ldr	r1, [fp, #16]
   3151c:	ldr	r1, [r1]
   31520:	sub	r3, r0, r1
   31524:	mov	r0, r5
   31528:	add	r1, sp, #24
   3152c:	bl	28dc <InflateSkipData>
   31530:	ldr	r0, [sl, #4]
   31534:	add	r7, r7, #1
   31538:	add	r4, r4, r6, lsl #1
   3153c:	mov	r6, r8
   31540:	cmp	r7, r0
   31544:	ldr	r0, [fp, #16]
   31548:	blt	314b4 <ReadCompressedDataSlab2+0x1664>
   3154c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31550:	ldr	r0, [sl, #4]
   31554:	str	r3, [sp, #12]
   31558:	cmp	r0, #1
   3155c:	ldr	r0, [fp, #16]
   31560:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31564:	mov	r9, r8
   31568:	mov	r6, r2
   3156c:	mov	r7, #0
   31570:	ldr	r3, [r0]
   31574:	add	r1, sp, #24
   31578:	mov	r0, r5
   3157c:	mov	r2, r9
   31580:	mov	r8, r1
   31584:	bl	28dc <InflateSkipData>
   31588:	ldr	r0, [sl]
   3158c:	mov	r1, r8
   31590:	mov	r2, r4
   31594:	mov	r3, r9
   31598:	str	r0, [sp]
   3159c:	mov	r0, r5
   315a0:	bl	1ee28 <ReadCompressedUInt16Data>
   315a4:	ldr	r0, [r6]
   315a8:	ldr	r1, [sp, #12]
   315ac:	mov	r8, r6
   315b0:	ldr	r6, [sl]
   315b4:	add	r0, r0, r1
   315b8:	ldr	r1, [fp, #20]
   315bc:	sub	r2, r6, #1
   315c0:	ldr	r1, [r1]
   315c4:	mul	r1, r1, r2
   315c8:	mov	r2, r9
   315cc:	mvn	r1, r1
   315d0:	add	r0, r0, r1
   315d4:	ldr	r1, [fp, #16]
   315d8:	ldr	r1, [r1]
   315dc:	sub	r3, r0, r1
   315e0:	mov	r0, r5
   315e4:	add	r1, sp, #24
   315e8:	bl	28dc <InflateSkipData>
   315ec:	ldr	r0, [sl, #4]
   315f0:	add	r7, r7, #1
   315f4:	add	r4, r4, r6, lsl #1
   315f8:	mov	r6, r8
   315fc:	cmp	r7, r0
   31600:	ldr	r0, [fp, #16]
   31604:	blt	31570 <ReadCompressedDataSlab2+0x1720>
   31608:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   3160c:	ldr	r0, [sl, #4]
   31610:	str	r3, [sp, #16]
   31614:	cmp	r0, #1
   31618:	ldr	r0, [fp, #16]
   3161c:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31620:	mov	r9, r8
   31624:	mov	r6, r2
   31628:	mov	r7, #0
   3162c:	ldr	r3, [r0]
   31630:	add	r1, sp, #24
   31634:	mov	r0, r5
   31638:	mov	r2, r9
   3163c:	mov	r8, r1
   31640:	bl	28dc <InflateSkipData>
   31644:	ldr	r0, [sl]
   31648:	mov	r1, r8
   3164c:	mov	r2, r4
   31650:	mov	r3, r9
   31654:	str	r0, [sp]
   31658:	mov	r0, r5
   3165c:	bl	15178 <ReadCompressedInt32Data>
   31660:	ldr	r0, [r6]
   31664:	ldr	r1, [sp, #16]
   31668:	mov	r8, r6
   3166c:	ldr	r6, [sl]
   31670:	add	r0, r0, r1
   31674:	ldr	r1, [fp, #20]
   31678:	sub	r2, r6, #1
   3167c:	ldr	r1, [r1]
   31680:	mul	r1, r1, r2
   31684:	mov	r2, r9
   31688:	mvn	r1, r1
   3168c:	add	r0, r0, r1
   31690:	ldr	r1, [fp, #16]
   31694:	ldr	r1, [r1]
   31698:	sub	r3, r0, r1
   3169c:	mov	r0, r5
   316a0:	add	r1, sp, #24
   316a4:	bl	28dc <InflateSkipData>
   316a8:	ldr	r0, [sl, #4]
   316ac:	add	r7, r7, #1
   316b0:	add	r4, r4, r6, lsl #2
   316b4:	mov	r6, r8
   316b8:	cmp	r7, r0
   316bc:	ldr	r0, [fp, #16]
   316c0:	blt	3162c <ReadCompressedDataSlab2+0x17dc>
   316c4:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   316c8:	ldr	r0, [sl, #4]
   316cc:	str	r3, [sp, #16]
   316d0:	cmp	r0, #1
   316d4:	ldr	r0, [fp, #16]
   316d8:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   316dc:	mov	r9, r8
   316e0:	mov	r6, r2
   316e4:	mov	r7, #0
   316e8:	ldr	r3, [r0]
   316ec:	add	r1, sp, #24
   316f0:	mov	r0, r5
   316f4:	mov	r2, r9
   316f8:	mov	r8, r1
   316fc:	bl	28dc <InflateSkipData>
   31700:	ldr	r0, [sl]
   31704:	mov	r1, r8
   31708:	mov	r2, r4
   3170c:	mov	r3, r9
   31710:	str	r0, [sp]
   31714:	mov	r0, r5
   31718:	bl	18da0 <ReadCompressedUInt32Data>
   3171c:	ldr	r0, [r6]
   31720:	ldr	r1, [sp, #16]
   31724:	mov	r8, r6
   31728:	ldr	r6, [sl]
   3172c:	add	r0, r0, r1
   31730:	ldr	r1, [fp, #20]
   31734:	sub	r2, r6, #1
   31738:	ldr	r1, [r1]
   3173c:	mul	r1, r1, r2
   31740:	mov	r2, r9
   31744:	mvn	r1, r1
   31748:	add	r0, r0, r1
   3174c:	ldr	r1, [fp, #16]
   31750:	ldr	r1, [r1]
   31754:	sub	r3, r0, r1
   31758:	mov	r0, r5
   3175c:	add	r1, sp, #24
   31760:	bl	28dc <InflateSkipData>
   31764:	ldr	r0, [sl, #4]
   31768:	add	r7, r7, #1
   3176c:	add	r4, r4, r6, lsl #2
   31770:	mov	r6, r8
   31774:	cmp	r7, r0
   31778:	ldr	r0, [fp, #16]
   3177c:	blt	316e8 <ReadCompressedDataSlab2+0x1898>
   31780:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31784:	ldr	r0, [sl, #4]
   31788:	str	r3, [sp, #16]
   3178c:	cmp	r0, #1
   31790:	ldr	r0, [fp, #16]
   31794:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31798:	mov	r9, r8
   3179c:	mov	r6, r2
   317a0:	mov	r7, #0
   317a4:	ldr	r3, [r0]
   317a8:	add	r1, sp, #24
   317ac:	mov	r0, r5
   317b0:	mov	r2, r9
   317b4:	mov	r8, r1
   317b8:	bl	28dc <InflateSkipData>
   317bc:	ldr	r0, [sl]
   317c0:	mov	r1, r8
   317c4:	mov	r2, r4
   317c8:	mov	r3, r9
   317cc:	str	r0, [sp]
   317d0:	mov	r0, r5
   317d4:	bl	114c0 <ReadCompressedUInt64Data>
   317d8:	ldr	r0, [r6]
   317dc:	ldr	r1, [sp, #16]
   317e0:	mov	r8, r6
   317e4:	ldr	r6, [sl]
   317e8:	add	r0, r0, r1
   317ec:	ldr	r1, [fp, #20]
   317f0:	sub	r2, r6, #1
   317f4:	ldr	r1, [r1]
   317f8:	mul	r1, r1, r2
   317fc:	mov	r2, r9
   31800:	mvn	r1, r1
   31804:	add	r0, r0, r1
   31808:	ldr	r1, [fp, #16]
   3180c:	ldr	r1, [r1]
   31810:	sub	r3, r0, r1
   31814:	mov	r0, r5
   31818:	add	r1, sp, #24
   3181c:	bl	28dc <InflateSkipData>
   31820:	ldr	r0, [sl, #4]
   31824:	add	r7, r7, #1
   31828:	add	r4, r4, r6, lsl #3
   3182c:	mov	r6, r8
   31830:	cmp	r7, r0
   31834:	ldr	r0, [fp, #16]
   31838:	blt	317a4 <ReadCompressedDataSlab2+0x1954>
   3183c:	b	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31840:	ldr	r0, [sl, #4]
   31844:	str	r3, [sp, #16]
   31848:	cmp	r0, #1
   3184c:	ldr	r0, [fp, #16]
   31850:	blt	318f8 <ReadCompressedDataSlab2+0x1aa8>
   31854:	mov	r9, r8
   31858:	mov	r6, r2
   3185c:	mov	r7, #0
   31860:	ldr	r3, [r0]
   31864:	add	r1, sp, #24
   31868:	mov	r0, r5
   3186c:	mov	r2, r9
   31870:	mov	r8, r1
   31874:	bl	28dc <InflateSkipData>
   31878:	ldr	r0, [sl]
   3187c:	mov	r1, r8
   31880:	mov	r2, r4
   31884:	mov	r3, r9
   31888:	str	r0, [sp]
   3188c:	mov	r0, r5
   31890:	bl	e6f8 <ReadCompressedInt64Data>
   31894:	ldr	r0, [r6]
   31898:	ldr	r1, [sp, #16]
   3189c:	mov	r8, r6
   318a0:	ldr	r6, [sl]
   318a4:	add	r0, r0, r1
   318a8:	ldr	r1, [fp, #20]
   318ac:	sub	r2, r6, #1
   318b0:	ldr	r1, [r1]
   318b4:	mul	r1, r1, r2
   318b8:	mov	r2, r9
   318bc:	mvn	r1, r1
   318c0:	add	r0, r0, r1
   318c4:	ldr	r1, [fp, #16]
   318c8:	ldr	r1, [r1]
   318cc:	sub	r3, r0, r1
   318d0:	mov	r0, r5
   318d4:	add	r1, sp, #24
   318d8:	bl	28dc <InflateSkipData>
   318dc:	ldr	r0, [sl, #4]
   318e0:	add	r7, r7, #1
   318e4:	add	r4, r4, r6, lsl #3
   318e8:	mov	r6, r8
   318ec:	cmp	r7, r0
   318f0:	ldr	r0, [fp, #16]
   318f4:	blt	31860 <ReadCompressedDataSlab2+0x1a10>
   318f8:	add	r0, sp, #24
   318fc:	bl	193c <inflateEnd@plt>
   31900:	mov	r0, #0
   31904:	sub	sp, fp, #28
   31908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3190c:	andeq	r0, r0, r0

00031910 <Mat_Create5>:
   31910:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31914:	add	fp, sp, #24
   31918:	sub	sp, sp, #24
   3191c:	mov	r4, #0
   31920:	mov	r8, r1
   31924:	mov	r6, r0
   31928:	strh	r4, [sp, #22]
   3192c:	ldr	r1, [pc, #416]	; 31ad4 <Mat_Create5+0x1c4>
   31930:	add	r1, pc, r1
   31934:	bl	17e0 <fopen@plt>
   31938:	cmp	r0, #0
   3193c:	beq	31a00 <Mat_Create5+0xf0>
   31940:	mov	r5, r0
   31944:	mov	r0, #44	; 0x2c
   31948:	bl	18d0 <malloc@plt>
   3194c:	cmp	r0, #0
   31950:	beq	319f4 <Mat_Create5+0xe4>
   31954:	mov	r4, r0
   31958:	mov	r0, #128	; 0x80
   3195c:	mov	r7, #0
   31960:	str	r0, [r4, #28]
   31964:	mov	r0, #0
   31968:	str	r7, [r4, #32]
   3196c:	str	r7, [r4, #36]	; 0x24
   31970:	str	r7, [r4, #40]	; 0x28
   31974:	str	r7, [r4, #16]
   31978:	bl	1834 <time@plt>
   3197c:	str	r0, [sp, #16]
   31980:	str	r5, [r4]
   31984:	mov	r1, r6
   31988:	ldr	r0, [pc, #328]	; 31ad8 <Mat_Create5+0x1c8>
   3198c:	add	r0, pc, r0
   31990:	bl	1da4 <strdup_printf>
   31994:	str	r0, [r4, #12]
   31998:	mov	r0, #128	; 0x80
   3199c:	mov	r9, #1
   319a0:	str	r7, [r4, #20]
   319a4:	str	r9, [r4, #24]
   319a8:	bl	18d0 <malloc@plt>
   319ac:	mov	r7, r0
   319b0:	str	r0, [r4, #4]
   319b4:	mov	r0, #8
   319b8:	bl	18d0 <malloc@plt>
   319bc:	mov	r6, r0
   319c0:	str	r0, [r4, #8]
   319c4:	mov	r0, r7
   319c8:	mov	r1, #32
   319cc:	mov	r2, #128	; 0x80
   319d0:	bl	1990 <memset@plt>
   319d4:	cmp	r8, #0
   319d8:	beq	31a0c <Mat_Create5+0xfc>
   319dc:	ldr	r2, [pc, #256]	; 31ae4 <Mat_Create5+0x1d4>
   319e0:	mov	r0, r7
   319e4:	mov	r1, #116	; 0x74
   319e8:	mov	r3, r8
   319ec:	add	r2, pc, r2
   319f0:	b	31a44 <Mat_Create5+0x134>
   319f4:	mov	r0, r5
   319f8:	bl	19cc <fclose@plt>
   319fc:	mov	r4, #0
   31a00:	mov	r0, r4
   31a04:	sub	sp, fp, #24
   31a08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31a0c:	add	r0, sp, #16
   31a10:	bl	1858 <ctime@plt>
   31a14:	mov	r1, #15
   31a18:	mov	r2, #5
   31a1c:	str	r0, [sp, #12]
   31a20:	str	r9, [sp]
   31a24:	mov	r0, r7
   31a28:	str	r1, [sp, #8]
   31a2c:	str	r2, [sp, #4]
   31a30:	mov	r1, #116	; 0x74
   31a34:	ldr	r2, [pc, #160]	; 31adc <Mat_Create5+0x1cc>
   31a38:	ldr	r3, [pc, #160]	; 31ae0 <Mat_Create5+0x1d0>
   31a3c:	add	r2, pc, r2
   31a40:	add	r3, pc, r3
   31a44:	bl	1978 <snprintf@plt>
   31a48:	cmp	r0, #116	; 0x74
   31a4c:	mov	r1, #1
   31a50:	mov	r2, #116	; 0x74
   31a54:	mov	r3, r5
   31a58:	movcs	r0, #0
   31a5c:	strbcs	r0, [r7, #115]	; 0x73
   31a60:	movw	r0, #8224	; 0x2020
   31a64:	movt	r0, #8224	; 0x2020
   31a68:	str	r0, [r6, #4]
   31a6c:	str	r0, [r6]
   31a70:	mov	r0, #256	; 0x100
   31a74:	str	r0, [r4, #16]
   31a78:	strh	r0, [sp, #20]
   31a7c:	movw	r0, #19785	; 0x4d49
   31a80:	strh	r0, [sp, #22]
   31a84:	mov	r0, r7
   31a88:	bl	18ac <fwrite@plt>
   31a8c:	mov	r0, r6
   31a90:	mov	r1, #1
   31a94:	mov	r2, #8
   31a98:	mov	r3, r5
   31a9c:	bl	18ac <fwrite@plt>
   31aa0:	add	r0, sp, #20
   31aa4:	mov	r1, #2
   31aa8:	mov	r2, #1
   31aac:	mov	r3, r5
   31ab0:	bl	18ac <fwrite@plt>
   31ab4:	add	r0, sp, #22
   31ab8:	mov	r1, #2
   31abc:	mov	r2, #1
   31ac0:	mov	r3, r5
   31ac4:	bl	18ac <fwrite@plt>
   31ac8:	mov	r0, r4
   31acc:	sub	sp, fp, #24
   31ad0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31ad4:	.word	0x00040355
   31ad8:	.word	0x00040c17
   31adc:	.word	0x0004024d
   31ae0:	.word	0x00040291
   31ae4:	.word	0x00040bb7
   31ae8:	.word	0xe320f000
   31aec:	.word	0xe320f000

00031af0 <Mat_VarRead5>:
   31af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31af4:	add	fp, sp, #28
   31af8:	sub	sp, sp, #44	; 0x2c
   31afc:	mov	r4, r0
   31b00:	mov	r0, #1
   31b04:	cmp	r1, #0
   31b08:	str	r0, [fp, #-32]	; 0xffffffe0
   31b0c:	beq	3291c <Mat_VarRead5+0xe2c>
   31b10:	ldr	r0, [r1, #4]
   31b14:	mov	r5, r1
   31b18:	cmp	r0, #0
   31b1c:	beq	3291c <Mat_VarRead5+0xe2c>
   31b20:	mov	r9, r5
   31b24:	ldr	r0, [r9, #52]!	; 0x34
   31b28:	ldr	r1, [r0, #16]
   31b2c:	cmp	r1, #0
   31b30:	beq	31b48 <Mat_VarRead5+0x58>
   31b34:	str	r1, [r5, #40]	; 0x28
   31b38:	mov	r1, #0
   31b3c:	str	r1, [r0, #16]
   31b40:	sub	sp, fp, #28
   31b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31b48:	ldr	r0, [r4]
   31b4c:	bl	1840 <ftell@plt>
   31b50:	cmn	r0, #1
   31b54:	beq	31b84 <Mat_VarRead5+0x94>
   31b58:	mov	sl, r0
   31b5c:	sub	r1, fp, #32
   31b60:	mov	r0, r5
   31b64:	bl	6be10 <SafeMulDims>
   31b68:	cmp	r0, #0
   31b6c:	beq	31b98 <Mat_VarRead5+0xa8>
   31b70:	ldr	r0, [pc, #4024]	; 32b30 <Mat_VarRead5+0x1040>
   31b74:	add	r0, pc, r0
   31b78:	bl	19b4 <Mat_Critical@plt>
   31b7c:	sub	sp, fp, #28
   31b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31b84:	ldr	r0, [pc, #4008]	; 32b34 <Mat_VarRead5+0x1044>
   31b88:	add	r0, pc, r0
   31b8c:	bl	19b4 <Mat_Critical@plt>
   31b90:	sub	sp, fp, #28
   31b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31b98:	ldr	r1, [r5, #16]
   31b9c:	cmp	r1, #16
   31ba0:	bhi	31d2c <Mat_VarRead5+0x23c>
   31ba4:	ldr	r7, [r4, #20]
   31ba8:	add	r0, pc, #4
   31bac:	ldr	r2, [r0, r1, lsl #2]
   31bb0:	add	pc, r0, r2
   31bb4:	.word	0x00000044
   31bb8:	.word	0x00000084
   31bbc:	.word	0x000000e4
   31bc0:	.word	0x00000178
   31bc4:	.word	0x00000184
   31bc8:	.word	0x00000224
   31bcc:	.word	0x000002f4
   31bd0:	.word	0x00000314
   31bd4:	.word	0x00000334
   31bd8:	.word	0x00000368
   31bdc:	.word	0x00000388
   31be0:	.word	0x000003a8
   31be4:	.word	0x000003c8
   31be8:	.word	0x000003e8
   31bec:	.word	0x00000408
   31bf0:	.word	0x0000043c
   31bf4:	.word	0x00000518
   31bf8:	add	r0, pc, #992	; 0x3e0
   31bfc:	mov	r6, r5
   31c00:	vld1.64	{d16-d17}, [r0 :128]
   31c04:	mov	r0, #32
   31c08:	vst1.32	{d16-d17}, [r6], r0
   31c0c:	mov	r0, #8
   31c10:	bl	18d0 <malloc@plt>
   31c14:	mov	r1, #0
   31c18:	str	r0, [r6]
   31c1c:	str	r1, [r0]
   31c20:	str	r1, [r0, #4]
   31c24:	ldr	r0, [r5, #16]
   31c28:	sub	r0, r0, #6
   31c2c:	cmp	r0, #9
   31c30:	bls	32024 <Mat_VarRead5+0x534>
   31c34:	b	3290c <Mat_VarRead5+0xe1c>
   31c38:	ldr	r7, [r5, #40]	; 0x28
   31c3c:	cmp	r7, #0
   31c40:	beq	321ec <Mat_VarRead5+0x6fc>
   31c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c48:	cmp	r0, #0
   31c4c:	beq	31c90 <Mat_VarRead5+0x1a0>
   31c50:	mov	r6, #0
   31c54:	ldr	r1, [r7, r6, lsl #2]
   31c58:	cmp	r1, #0
   31c5c:	bne	31c78 <Mat_VarRead5+0x188>
   31c60:	add	r6, r6, #1
   31c64:	cmp	r6, r0
   31c68:	bcs	31c90 <Mat_VarRead5+0x1a0>
   31c6c:	ldr	r1, [r7, r6, lsl #2]
   31c70:	cmp	r1, #0
   31c74:	beq	31c60 <Mat_VarRead5+0x170>
   31c78:	mov	r0, r4
   31c7c:	bl	31af0 <Mat_VarRead5>
   31c80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c84:	add	r6, r6, #1
   31c88:	cmp	r6, r0
   31c8c:	bcc	31c6c <Mat_VarRead5+0x17c>
   31c90:	mov	r0, #21
   31c94:	b	3211c <Mat_VarRead5+0x62c>
   31c98:	mov	r0, #22
   31c9c:	str	r0, [r5, #8]
   31ca0:	ldr	r0, [r5]
   31ca4:	cmp	r0, #0
   31ca8:	beq	32014 <Mat_VarRead5+0x524>
   31cac:	ldr	r0, [r5, #12]
   31cb0:	cmp	r0, #0
   31cb4:	beq	32014 <Mat_VarRead5+0x524>
   31cb8:	ldr	r0, [r5, #40]	; 0x28
   31cbc:	cmp	r0, #0
   31cc0:	beq	32014 <Mat_VarRead5+0x524>
   31cc4:	ldr	r0, [r5, #52]	; 0x34
   31cc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31ccc:	ldr	r2, [r0, #4]
   31cd0:	add	r0, sp, #32
   31cd4:	bl	6be6c <SafeMul>
   31cd8:	ldr	r0, [sp, #32]
   31cdc:	cmp	r0, #0
   31ce0:	beq	32014 <Mat_VarRead5+0x524>
   31ce4:	ldr	r7, [r5, #40]	; 0x28
   31ce8:	mov	r6, #0
   31cec:	ldr	r1, [r7, r6, lsl #2]
   31cf0:	cmp	r1, #0
   31cf4:	bne	31d10 <Mat_VarRead5+0x220>
   31cf8:	add	r6, r6, #1
   31cfc:	cmp	r6, r0
   31d00:	bcs	32014 <Mat_VarRead5+0x524>
   31d04:	ldr	r1, [r7, r6, lsl #2]
   31d08:	cmp	r1, #0
   31d0c:	beq	31cf8 <Mat_VarRead5+0x208>
   31d10:	mov	r0, r4
   31d14:	bl	31af0 <Mat_VarRead5>
   31d18:	ldr	r0, [sp, #32]
   31d1c:	add	r6, r6, #1
   31d20:	cmp	r6, r0
   31d24:	bcc	31d04 <Mat_VarRead5+0x214>
   31d28:	b	32014 <Mat_VarRead5+0x524>
   31d2c:	ldr	r0, [pc, #4084]	; 32d28 <Mat_VarRead5+0x1238>
   31d30:	add	r0, pc, r0
   31d34:	b	321f8 <Mat_VarRead5+0x708>
   31d38:	ldr	r1, [r5, #52]	; 0x34
   31d3c:	ldr	r0, [r4]
   31d40:	mov	r2, #0
   31d44:	mov	r6, #0
   31d48:	ldr	r1, [r1]
   31d4c:	bl	1a2c <fseek@plt>
   31d50:	ldr	r0, [r5, #48]	; 0x30
   31d54:	cmp	r0, #1
   31d58:	bne	32134 <Mat_VarRead5+0x644>
   31d5c:	ldr	r0, [r9]
   31d60:	add	r8, sp, #32
   31d64:	mov	r2, r8
   31d68:	ldr	r1, [r0, #12]
   31d6c:	mov	r0, r4
   31d70:	str	r6, [r1, #4]
   31d74:	bl	336c <InflateDataType>
   31d78:	mov	r6, r7
   31d7c:	cmp	r7, #0
   31d80:	beq	31d8c <Mat_VarRead5+0x29c>
   31d84:	add	r0, sp, #32
   31d88:	bl	1c0c <Mat_uint32Swap>
   31d8c:	ldr	r0, [sp, #32]
   31d90:	uxtb	r7, r0
   31d94:	cmp	r7, #25
   31d98:	movcs	r7, #0
   31d9c:	cmp	r0, #65536	; 0x10000
   31da0:	bcs	323bc <Mat_VarRead5+0x8cc>
   31da4:	ldr	r0, [r9]
   31da8:	add	r8, r8, #4
   31dac:	mov	r2, r8
   31db0:	ldr	r1, [r0, #12]
   31db4:	mov	r0, r4
   31db8:	bl	336c <InflateDataType>
   31dbc:	cmp	r6, #0
   31dc0:	beq	31dcc <Mat_VarRead5+0x2dc>
   31dc4:	mov	r0, r8
   31dc8:	bl	1c0c <Mat_uint32Swap>
   31dcc:	ldr	r6, [sp, #36]	; 0x24
   31dd0:	mov	r0, #0
   31dd4:	b	323c4 <Mat_VarRead5+0x8d4>
   31dd8:	mov	r0, #0
   31ddc:	str	r7, [sp, #20]
   31de0:	str	r0, [sp, #28]
   31de4:	mov	r0, #28
   31de8:	str	r0, [r5, #12]
   31dec:	mov	r0, #28
   31df0:	bl	18d0 <malloc@plt>
   31df4:	cmp	r0, #0
   31df8:	str	r0, [r5, #40]	; 0x28
   31dfc:	beq	32210 <Mat_VarRead5+0x720>
   31e00:	mov	r7, r0
   31e04:	ldr	r0, [r5]
   31e08:	mov	r2, #0
   31e0c:	mov	r6, #0
   31e10:	str	r0, [r7]
   31e14:	ldr	r1, [r5, #52]	; 0x34
   31e18:	ldr	r0, [r4]
   31e1c:	ldr	r1, [r1]
   31e20:	bl	1a2c <fseek@plt>
   31e24:	ldr	r0, [r5, #48]	; 0x30
   31e28:	str	r7, [sp, #24]
   31e2c:	cmp	r0, #1
   31e30:	bne	3221c <Mat_VarRead5+0x72c>
   31e34:	ldr	r0, [r9]
   31e38:	add	r2, sp, #32
   31e3c:	ldr	r1, [r0, #12]
   31e40:	mov	r0, r4
   31e44:	str	r6, [r1, #4]
   31e48:	bl	336c <InflateDataType>
   31e4c:	ldr	r0, [r4, #20]
   31e50:	cmp	r0, #0
   31e54:	beq	31e60 <Mat_VarRead5+0x370>
   31e58:	add	r0, sp, #32
   31e5c:	bl	1c0c <Mat_uint32Swap>
   31e60:	ldr	r0, [sp, #32]
   31e64:	mov	r1, #0
   31e68:	uxtb	r6, r0
   31e6c:	cmp	r6, #25
   31e70:	movcs	r6, r1
   31e74:	cmp	r0, #65536	; 0x10000
   31e78:	bcs	32294 <Mat_VarRead5+0x7a4>
   31e7c:	mov	r0, #0
   31e80:	add	r2, sp, #28
   31e84:	mov	r3, #5
   31e88:	str	r0, [sp, #16]
   31e8c:	ldr	r0, [r9]
   31e90:	ldr	r1, [r0, #12]
   31e94:	mov	r0, #1
   31e98:	str	r0, [sp]
   31e9c:	mov	r0, r4
   31ea0:	bl	15178 <ReadCompressedInt32Data>
   31ea4:	b	322a4 <Mat_VarRead5+0x7b4>
   31ea8:	ldr	r1, [r5, #52]	; 0x34
   31eac:	ldr	r0, [r4]
   31eb0:	mov	r2, #0
   31eb4:	ldr	r1, [r1]
   31eb8:	bl	1a2c <fseek@plt>
   31ebc:	mov	r0, #8
   31ec0:	mov	r1, #9
   31ec4:	b	3200c <Mat_VarRead5+0x51c>
   31ec8:	ldr	r1, [r5, #52]	; 0x34
   31ecc:	ldr	r0, [r4]
   31ed0:	mov	r2, #0
   31ed4:	ldr	r1, [r1]
   31ed8:	bl	1a2c <fseek@plt>
   31edc:	mov	r0, #4
   31ee0:	mov	r1, #7
   31ee4:	b	3200c <Mat_VarRead5+0x51c>
   31ee8:	ldr	r1, [r5, #52]	; 0x34
   31eec:	ldr	r0, [r4]
   31ef0:	mov	r2, #0
   31ef4:	ldr	r1, [r1]
   31ef8:	bl	1a2c <fseek@plt>
   31efc:	mov	r0, #1
   31f00:	str	r0, [r5, #8]
   31f04:	str	r0, [r5, #12]
   31f08:	ldr	r0, [r5, #16]
   31f0c:	sub	r0, r0, #6
   31f10:	cmp	r0, #9
   31f14:	bls	32024 <Mat_VarRead5+0x534>
   31f18:	b	3290c <Mat_VarRead5+0xe1c>
   31f1c:	ldr	r1, [r5, #52]	; 0x34
   31f20:	ldr	r0, [r4]
   31f24:	mov	r2, #0
   31f28:	ldr	r1, [r1]
   31f2c:	bl	1a2c <fseek@plt>
   31f30:	mov	r0, #1
   31f34:	mov	r1, #2
   31f38:	b	3200c <Mat_VarRead5+0x51c>
   31f3c:	ldr	r1, [r5, #52]	; 0x34
   31f40:	ldr	r0, [r4]
   31f44:	mov	r2, #0
   31f48:	ldr	r1, [r1]
   31f4c:	bl	1a2c <fseek@plt>
   31f50:	mov	r0, #2
   31f54:	mov	r1, #3
   31f58:	b	3200c <Mat_VarRead5+0x51c>
   31f5c:	ldr	r1, [r5, #52]	; 0x34
   31f60:	ldr	r0, [r4]
   31f64:	mov	r2, #0
   31f68:	ldr	r1, [r1]
   31f6c:	bl	1a2c <fseek@plt>
   31f70:	mov	r0, #2
   31f74:	mov	r1, #4
   31f78:	b	3200c <Mat_VarRead5+0x51c>
   31f7c:	ldr	r1, [r5, #52]	; 0x34
   31f80:	ldr	r0, [r4]
   31f84:	mov	r2, #0
   31f88:	ldr	r1, [r1]
   31f8c:	bl	1a2c <fseek@plt>
   31f90:	mov	r0, #4
   31f94:	mov	r1, #5
   31f98:	b	3200c <Mat_VarRead5+0x51c>
   31f9c:	ldr	r1, [r5, #52]	; 0x34
   31fa0:	ldr	r0, [r4]
   31fa4:	mov	r2, #0
   31fa8:	ldr	r1, [r1]
   31fac:	bl	1a2c <fseek@plt>
   31fb0:	mov	r0, #4
   31fb4:	mov	r1, #6
   31fb8:	b	3200c <Mat_VarRead5+0x51c>
   31fbc:	ldr	r1, [r5, #52]	; 0x34
   31fc0:	ldr	r0, [r4]
   31fc4:	mov	r2, #0
   31fc8:	ldr	r1, [r1]
   31fcc:	bl	1a2c <fseek@plt>
   31fd0:	mov	r0, #8
   31fd4:	mov	r1, #12
   31fd8:	b	3200c <Mat_VarRead5+0x51c>
   31fdc:	nop	{0}
   31fe0:	.word	0x00000000
   31fe4:	.word	0x00000002
   31fe8:	.word	0x00000009
   31fec:	.word	0x00000008
   31ff0:	ldr	r1, [r5, #52]	; 0x34
   31ff4:	ldr	r0, [r4]
   31ff8:	mov	r2, #0
   31ffc:	ldr	r1, [r1]
   32000:	bl	1a2c <fseek@plt>
   32004:	mov	r0, #8
   32008:	mov	r1, #13
   3200c:	str	r1, [r5, #8]
   32010:	str	r0, [r5, #12]
   32014:	ldr	r0, [r5, #16]
   32018:	sub	r0, r0, #6
   3201c:	cmp	r0, #9
   32020:	bhi	3290c <Mat_VarRead5+0xe1c>
   32024:	ldr	r2, [r5, #12]
   32028:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3202c:	ldr	r6, [r5, #20]
   32030:	mov	r0, r5
   32034:	bl	6be6c <SafeMul>
   32038:	ldr	r0, [r5]
   3203c:	cmp	r6, #0
   32040:	beq	32084 <Mat_VarRead5+0x594>
   32044:	bl	6bd7c <ComplexMalloc>
   32048:	cmp	r0, #0
   3204c:	beq	320ac <Mat_VarRead5+0x5bc>
   32050:	ldr	r2, [r0]
   32054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32058:	mov	r7, r0
   3205c:	mov	r0, r4
   32060:	mov	r1, r5
   32064:	bl	334c4 <Mat_VarReadNumeric5>
   32068:	ldr	r2, [r7, #4]
   3206c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32070:	mov	r0, r4
   32074:	mov	r1, r5
   32078:	bl	334c4 <Mat_VarReadNumeric5>
   3207c:	str	r7, [r5, #40]	; 0x28
   32080:	b	3290c <Mat_VarRead5+0xe1c>
   32084:	bl	18d0 <malloc@plt>
   32088:	cmp	r0, #0
   3208c:	str	r0, [r5, #40]	; 0x28
   32090:	beq	320bc <Mat_VarRead5+0x5cc>
   32094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32098:	mov	r2, r0
   3209c:	mov	r0, r4
   320a0:	mov	r1, r5
   320a4:	bl	334c4 <Mat_VarReadNumeric5>
   320a8:	b	3290c <Mat_VarRead5+0xe1c>
   320ac:	ldr	r0, [pc, #4092]	; 330b0 <Mat_VarRead5+0x15c0>
   320b0:	add	r0, pc, r0
   320b4:	bl	19b4 <Mat_Critical@plt>
   320b8:	b	3290c <Mat_VarRead5+0xe1c>
   320bc:	ldr	r0, [pc, #4080]	; 330b4 <Mat_VarRead5+0x15c4>
   320c0:	add	r0, pc, r0
   320c4:	bl	19b4 <Mat_Critical@plt>
   320c8:	b	3290c <Mat_VarRead5+0xe1c>
   320cc:	ldr	r0, [r5]
   320d0:	cmp	r0, #0
   320d4:	beq	32014 <Mat_VarRead5+0x524>
   320d8:	ldr	r1, [r5, #12]
   320dc:	cmp	r1, #0
   320e0:	beq	32014 <Mat_VarRead5+0x524>
   320e4:	ldr	r8, [r5, #40]	; 0x28
   320e8:	cmp	r8, #0
   320ec:	beq	32118 <Mat_VarRead5+0x628>
   320f0:	cmp	r1, r0
   320f4:	bhi	32118 <Mat_VarRead5+0x628>
   320f8:	udiv	r7, r0, r1
   320fc:	mov	r6, #0
   32100:	ldr	r1, [r8, r6, lsl #2]
   32104:	mov	r0, r4
   32108:	bl	31af0 <Mat_VarRead5>
   3210c:	add	r6, r6, #1
   32110:	cmp	r6, r7
   32114:	bcc	32100 <Mat_VarRead5+0x610>
   32118:	mov	r0, #24
   3211c:	str	r0, [r5, #8]
   32120:	ldr	r0, [r5, #16]
   32124:	sub	r0, r0, #6
   32128:	cmp	r0, #9
   3212c:	bls	32024 <Mat_VarRead5+0x534>
   32130:	b	3290c <Mat_VarRead5+0xe1c>
   32134:	ldr	r3, [r4]
   32138:	mov	r0, #1
   3213c:	add	r8, sp, #32
   32140:	mov	r1, #4
   32144:	mov	r2, #1
   32148:	str	r0, [sp, #24]
   3214c:	mov	r0, r8
   32150:	bl	18b8 <fread@plt>
   32154:	mov	r6, r7
   32158:	cmp	r7, #0
   3215c:	beq	32168 <Mat_VarRead5+0x678>
   32160:	add	r0, sp, #32
   32164:	bl	1c0c <Mat_uint32Swap>
   32168:	ldr	r0, [sp, #32]
   3216c:	mov	r1, #0
   32170:	uxtb	r7, r0
   32174:	cmp	r7, #25
   32178:	movcs	r7, r1
   3217c:	cmp	r1, r0, lsr #16
   32180:	bne	321b4 <Mat_VarRead5+0x6c4>
   32184:	ldr	r3, [r4]
   32188:	add	r8, r8, #4
   3218c:	mov	r1, #4
   32190:	mov	r2, #1
   32194:	mov	r0, r8
   32198:	bl	18b8 <fread@plt>
   3219c:	cmp	r6, #0
   321a0:	beq	321ac <Mat_VarRead5+0x6bc>
   321a4:	mov	r0, r8
   321a8:	bl	1c0c <Mat_uint32Swap>
   321ac:	mov	r0, #0
   321b0:	str	r0, [sp, #24]
   321b4:	mov	r0, #2
   321b8:	str	r0, [r5, #8]
   321bc:	mov	r0, #2
   321c0:	bl	1924 <Mat_SizeOf@plt>
   321c4:	str	r0, [r5, #12]
   321c8:	mov	r2, r0
   321cc:	mov	r0, r5
   321d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   321d4:	bl	6be6c <SafeMul>
   321d8:	cmp	r0, #0
   321dc:	beq	323dc <Mat_VarRead5+0x8ec>
   321e0:	ldr	r0, [pc, #4032]	; 331a8 <Mat_VarRead5+0x16b8>
   321e4:	add	r0, pc, r0
   321e8:	b	328f8 <Mat_VarRead5+0xe08>
   321ec:	ldr	r1, [r5, #36]	; 0x24
   321f0:	ldr	r0, [pc, #4020]	; 331ac <Mat_VarRead5+0x16bc>
   321f4:	add	r0, pc, r0
   321f8:	bl	19b4 <Mat_Critical@plt>
   321fc:	ldr	r0, [r5, #16]
   32200:	sub	r0, r0, #6
   32204:	cmp	r0, #9
   32208:	bls	32024 <Mat_VarRead5+0x534>
   3220c:	b	3290c <Mat_VarRead5+0xe1c>
   32210:	ldr	r0, [pc, #3992]	; 331b0 <Mat_VarRead5+0x16c0>
   32214:	add	r0, pc, r0
   32218:	b	328f8 <Mat_VarRead5+0xe08>
   3221c:	ldr	r3, [r4]
   32220:	add	r0, sp, #32
   32224:	mov	r1, #4
   32228:	mov	r2, #1
   3222c:	bl	18b8 <fread@plt>
   32230:	ldr	r0, [r4, #20]
   32234:	cmp	r0, #0
   32238:	beq	32244 <Mat_VarRead5+0x754>
   3223c:	add	r0, sp, #32
   32240:	bl	1c0c <Mat_uint32Swap>
   32244:	ldr	r0, [sp, #32]
   32248:	mov	r1, #0
   3224c:	uxtb	r6, r0
   32250:	cmp	r6, #25
   32254:	movcs	r6, r1
   32258:	cmp	r0, #65536	; 0x10000
   3225c:	bcs	32294 <Mat_VarRead5+0x7a4>
   32260:	ldr	r3, [r4]
   32264:	mov	r0, #0
   32268:	mov	r1, #4
   3226c:	mov	r2, #1
   32270:	str	r0, [sp, #16]
   32274:	add	r0, sp, #28
   32278:	bl	18b8 <fread@plt>
   3227c:	ldr	r0, [r4, #20]
   32280:	cmp	r0, #0
   32284:	beq	322a4 <Mat_VarRead5+0x7b4>
   32288:	add	r0, sp, #28
   3228c:	bl	1bf8 <Mat_int32Swap>
   32290:	b	322a4 <Mat_VarRead5+0x7b4>
   32294:	lsr	r0, r0, #16
   32298:	str	r0, [sp, #28]
   3229c:	mov	r0, #1
   322a0:	str	r0, [sp, #16]
   322a4:	ldr	r0, [sp, #28]
   322a8:	ldr	r8, [sp, #24]
   322ac:	asr	r1, r0, #31
   322b0:	add	r0, r0, r1, lsr #30
   322b4:	asr	r7, r0, #2
   322b8:	bic	r0, r0, #3
   322bc:	str	r7, [r8, #8]
   322c0:	bl	18d0 <malloc@plt>
   322c4:	cmp	r0, #0
   322c8:	str	r0, [r8, #4]
   322cc:	beq	32480 <Mat_VarRead5+0x990>
   322d0:	mov	r2, r0
   322d4:	ldr	r0, [r5, #48]	; 0x30
   322d8:	cmp	r0, #1
   322dc:	beq	3248c <Mat_VarRead5+0x99c>
   322e0:	mov	r1, #0
   322e4:	cmp	r0, #0
   322e8:	str	r1, [sp, #12]
   322ec:	bne	32344 <Mat_VarRead5+0x854>
   322f0:	mov	r1, r2
   322f4:	mov	r0, r4
   322f8:	mov	r2, r6
   322fc:	mov	r3, r7
   32300:	bl	11a80 <ReadInt32Data>
   32304:	ldr	r1, [sp, #16]
   32308:	cmp	r1, #0
   3230c:	addne	r0, r0, #4
   32310:	asr	r1, r0, #31
   32314:	str	r0, [sp, #12]
   32318:	add	r1, r0, r1, lsr #29
   3231c:	bic	r1, r1, #7
   32320:	subs	r1, r0, r1
   32324:	beq	324dc <Mat_VarRead5+0x9ec>
   32328:	ldr	r0, [r4]
   3232c:	rsb	r1, r1, #8
   32330:	mov	r2, #1
   32334:	bl	1a2c <fseek@plt>
   32338:	ldr	r0, [r5, #48]	; 0x30
   3233c:	cmp	r0, #1
   32340:	beq	324e8 <Mat_VarRead5+0x9f8>
   32344:	ldr	r3, [r4]
   32348:	add	r0, sp, #32
   3234c:	mov	r1, #4
   32350:	mov	r2, #1
   32354:	bl	18b8 <fread@plt>
   32358:	ldr	r0, [r4, #20]
   3235c:	cmp	r0, #0
   32360:	beq	3236c <Mat_VarRead5+0x87c>
   32364:	add	r0, sp, #32
   32368:	bl	1c0c <Mat_uint32Swap>
   3236c:	ldr	r0, [sp, #32]
   32370:	mov	r1, #0
   32374:	uxtb	r6, r0
   32378:	cmp	r6, #25
   3237c:	movcs	r6, r1
   32380:	cmp	r0, #65536	; 0x10000
   32384:	bcs	32558 <Mat_VarRead5+0xa68>
   32388:	ldr	r3, [r4]
   3238c:	add	r0, sp, #28
   32390:	mov	r1, #4
   32394:	mov	r2, #1
   32398:	bl	18b8 <fread@plt>
   3239c:	ldr	r0, [r4, #20]
   323a0:	cmp	r0, #0
   323a4:	beq	32550 <Mat_VarRead5+0xa60>
   323a8:	mov	r0, #0
   323ac:	str	r0, [sp, #16]
   323b0:	add	r0, sp, #28
   323b4:	bl	1bf8 <Mat_int32Swap>
   323b8:	b	32568 <Mat_VarRead5+0xa78>
   323bc:	lsr	r6, r0, #16
   323c0:	mov	r0, #1
   323c4:	str	r0, [sp, #24]
   323c8:	mov	r0, r7
   323cc:	str	r7, [r5, #8]
   323d0:	bl	1924 <Mat_SizeOf@plt>
   323d4:	str	r0, [r5, #12]
   323d8:	str	r6, [r5]
   323dc:	ldr	r0, [r5, #20]
   323e0:	cmp	r0, #0
   323e4:	bne	32014 <Mat_VarRead5+0x524>
   323e8:	ldr	r6, [r5]
   323ec:	mov	r1, #1
   323f0:	add	r0, r6, #1
   323f4:	bl	1798 <calloc@plt>
   323f8:	cmp	r0, #0
   323fc:	str	r0, [r5, #40]	; 0x28
   32400:	beq	3267c <Mat_VarRead5+0xb8c>
   32404:	cmp	r6, #0
   32408:	beq	32014 <Mat_VarRead5+0x524>
   3240c:	ldr	r2, [r5, #12]
   32410:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32414:	add	r0, sp, #28
   32418:	bl	6be6c <SafeMul>
   3241c:	cmp	r0, #0
   32420:	bne	32014 <Mat_VarRead5+0x524>
   32424:	ldr	r0, [r5]
   32428:	ldr	r1, [sp, #28]
   3242c:	cmp	r1, r0
   32430:	bhi	32014 <Mat_VarRead5+0x524>
   32434:	ldr	r0, [r5, #48]	; 0x30
   32438:	cmp	r0, #1
   3243c:	beq	32a0c <Mat_VarRead5+0xf1c>
   32440:	cmp	r0, #0
   32444:	bne	32014 <Mat_VarRead5+0x524>
   32448:	ldr	r1, [r5, #40]	; 0x28
   3244c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32450:	mov	r0, r4
   32454:	mov	r2, r7
   32458:	bl	253a0 <ReadCharData>
   3245c:	ldr	r1, [sp, #24]
   32460:	cmp	r1, #0
   32464:	addne	r0, r0, #4
   32468:	asr	r1, r0, #31
   3246c:	add	r1, r0, r1, lsr #29
   32470:	bic	r1, r1, #7
   32474:	subs	r1, r0, r1
   32478:	bne	33320 <Mat_VarRead5+0x1830>
   3247c:	b	32014 <Mat_VarRead5+0x524>
   32480:	ldr	r0, [pc, #4028]	; 33444 <Mat_VarRead5+0x1954>
   32484:	add	r0, pc, r0
   32488:	b	328f8 <Mat_VarRead5+0xe08>
   3248c:	ldr	r0, [r9]
   32490:	mov	r3, r6
   32494:	ldr	r1, [r0, #12]
   32498:	mov	r0, r4
   3249c:	str	r7, [sp]
   324a0:	bl	15178 <ReadCompressedInt32Data>
   324a4:	ldr	r1, [sp, #16]
   324a8:	cmp	r1, #0
   324ac:	addne	r0, r0, #4
   324b0:	asr	r1, r0, #31
   324b4:	str	r0, [sp, #12]
   324b8:	add	r1, r0, r1, lsr #29
   324bc:	bic	r1, r1, #7
   324c0:	subs	r0, r0, r1
   324c4:	beq	324dc <Mat_VarRead5+0x9ec>
   324c8:	ldr	r1, [r9]
   324cc:	rsb	r2, r0, #8
   324d0:	mov	r0, r4
   324d4:	ldr	r1, [r1, #12]
   324d8:	bl	256c <InflateSkip>
   324dc:	ldr	r0, [r5, #48]	; 0x30
   324e0:	cmp	r0, #1
   324e4:	bne	32344 <Mat_VarRead5+0x854>
   324e8:	ldr	r0, [r9]
   324ec:	mov	r6, #0
   324f0:	add	r2, sp, #32
   324f4:	ldr	r1, [r0, #12]
   324f8:	mov	r0, r4
   324fc:	str	r6, [r1, #4]
   32500:	bl	336c <InflateDataType>
   32504:	ldr	r0, [r4, #20]
   32508:	cmp	r0, #0
   3250c:	beq	32518 <Mat_VarRead5+0xa28>
   32510:	add	r0, sp, #32
   32514:	bl	1c0c <Mat_uint32Swap>
   32518:	ldr	r0, [sp, #32]
   3251c:	uxtb	r1, r0
   32520:	cmp	r1, #25
   32524:	movcc	r6, r1
   32528:	cmp	r0, #65536	; 0x10000
   3252c:	bcs	32558 <Mat_VarRead5+0xa68>
   32530:	ldr	r0, [r9]
   32534:	add	r2, sp, #28
   32538:	mov	r3, #5
   3253c:	ldr	r1, [r0, #12]
   32540:	mov	r0, #1
   32544:	str	r0, [sp]
   32548:	mov	r0, r4
   3254c:	bl	15178 <ReadCompressedInt32Data>
   32550:	mov	r0, #0
   32554:	b	32564 <Mat_VarRead5+0xa74>
   32558:	lsr	r0, r0, #16
   3255c:	str	r0, [sp, #28]
   32560:	mov	r0, #1
   32564:	str	r0, [sp, #16]
   32568:	ldr	r0, [sp, #28]
   3256c:	ldr	r8, [sp, #24]
   32570:	asr	r1, r0, #31
   32574:	add	r0, r0, r1, lsr #30
   32578:	asr	r7, r0, #2
   3257c:	bic	r0, r0, #3
   32580:	str	r7, [r8, #16]
   32584:	bl	18d0 <malloc@plt>
   32588:	cmp	r0, #0
   3258c:	str	r0, [r8, #12]
   32590:	beq	32670 <Mat_VarRead5+0xb80>
   32594:	mov	r2, r0
   32598:	ldr	r0, [r5, #48]	; 0x30
   3259c:	cmp	r0, #1
   325a0:	beq	32688 <Mat_VarRead5+0xb98>
   325a4:	cmp	r0, #0
   325a8:	bne	32600 <Mat_VarRead5+0xb10>
   325ac:	mov	r1, r2
   325b0:	mov	r0, r4
   325b4:	mov	r2, r6
   325b8:	mov	r3, r7
   325bc:	bl	11a80 <ReadInt32Data>
   325c0:	ldr	r1, [sp, #16]
   325c4:	cmp	r1, #0
   325c8:	addne	r0, r0, #4
   325cc:	asr	r1, r0, #31
   325d0:	str	r0, [sp, #12]
   325d4:	add	r1, r0, r1, lsr #29
   325d8:	bic	r1, r1, #7
   325dc:	subs	r1, r0, r1
   325e0:	beq	326d8 <Mat_VarRead5+0xbe8>
   325e4:	ldr	r0, [r4]
   325e8:	rsb	r1, r1, #8
   325ec:	mov	r2, #1
   325f0:	bl	1a2c <fseek@plt>
   325f4:	ldr	r0, [r5, #48]	; 0x30
   325f8:	cmp	r0, #1
   325fc:	beq	326e4 <Mat_VarRead5+0xbf4>
   32600:	ldr	r3, [r4]
   32604:	add	r0, sp, #32
   32608:	mov	r1, #4
   3260c:	mov	r2, #1
   32610:	bl	18b8 <fread@plt>
   32614:	ldr	r0, [r4, #20]
   32618:	cmp	r0, #0
   3261c:	beq	32628 <Mat_VarRead5+0xb38>
   32620:	add	r0, sp, #32
   32624:	bl	1c0c <Mat_uint32Swap>
   32628:	ldr	r0, [sp, #32]
   3262c:	mov	r8, #0
   32630:	uxtb	r6, r0
   32634:	cmp	r6, #25
   32638:	movcs	r6, r8
   3263c:	cmp	r0, #65536	; 0x10000
   32640:	bcs	32754 <Mat_VarRead5+0xc64>
   32644:	ldr	r3, [r4]
   32648:	add	r0, sp, #28
   3264c:	mov	r1, #4
   32650:	mov	r2, #1
   32654:	bl	18b8 <fread@plt>
   32658:	ldr	r0, [r4, #20]
   3265c:	cmp	r0, #0
   32660:	beq	32760 <Mat_VarRead5+0xc70>
   32664:	add	r0, sp, #28
   32668:	bl	1bf8 <Mat_int32Swap>
   3266c:	b	32760 <Mat_VarRead5+0xc70>
   32670:	ldr	r0, [pc, #3656]	; 334c0 <Mat_VarRead5+0x19d0>
   32674:	add	r0, pc, r0
   32678:	b	328f8 <Mat_VarRead5+0xe08>
   3267c:	ldr	r0, [pc, #3632]	; 334b4 <Mat_VarRead5+0x19c4>
   32680:	add	r0, pc, r0
   32684:	b	328f8 <Mat_VarRead5+0xe08>
   32688:	ldr	r0, [r9]
   3268c:	mov	r3, r6
   32690:	ldr	r1, [r0, #12]
   32694:	mov	r0, r4
   32698:	str	r7, [sp]
   3269c:	bl	15178 <ReadCompressedInt32Data>
   326a0:	ldr	r1, [sp, #16]
   326a4:	cmp	r1, #0
   326a8:	addne	r0, r0, #4
   326ac:	asr	r1, r0, #31
   326b0:	str	r0, [sp, #12]
   326b4:	add	r1, r0, r1, lsr #29
   326b8:	bic	r1, r1, #7
   326bc:	subs	r0, r0, r1
   326c0:	beq	326d8 <Mat_VarRead5+0xbe8>
   326c4:	ldr	r1, [r9]
   326c8:	rsb	r2, r0, #8
   326cc:	mov	r0, r4
   326d0:	ldr	r1, [r1, #12]
   326d4:	bl	256c <InflateSkip>
   326d8:	ldr	r0, [r5, #48]	; 0x30
   326dc:	cmp	r0, #1
   326e0:	bne	32600 <Mat_VarRead5+0xb10>
   326e4:	ldr	r0, [r9]
   326e8:	mov	r6, #0
   326ec:	add	r2, sp, #32
   326f0:	ldr	r1, [r0, #12]
   326f4:	mov	r0, r4
   326f8:	str	r6, [r1, #4]
   326fc:	bl	336c <InflateDataType>
   32700:	ldr	r0, [r4, #20]
   32704:	cmp	r0, #0
   32708:	beq	32714 <Mat_VarRead5+0xc24>
   3270c:	add	r0, sp, #32
   32710:	bl	1c0c <Mat_uint32Swap>
   32714:	ldr	r0, [sp, #32]
   32718:	uxtb	r1, r0
   3271c:	cmp	r1, #25
   32720:	movcc	r6, r1
   32724:	cmp	r0, #65536	; 0x10000
   32728:	bcs	32754 <Mat_VarRead5+0xc64>
   3272c:	ldr	r0, [r9]
   32730:	add	r2, sp, #28
   32734:	mov	r3, #5
   32738:	ldr	r1, [r0, #12]
   3273c:	mov	r0, #1
   32740:	str	r0, [sp]
   32744:	mov	r0, r4
   32748:	bl	15178 <ReadCompressedInt32Data>
   3274c:	mov	r8, #0
   32750:	b	32760 <Mat_VarRead5+0xc70>
   32754:	lsr	r0, r0, #16
   32758:	mov	r8, #1
   3275c:	str	r0, [sp, #28]
   32760:	ldr	r0, [r5, #28]
   32764:	mov	r7, r6
   32768:	cmp	r0, #0
   3276c:	movwne	r7, #2
   32770:	cmp	r6, #9
   32774:	movne	r7, r6
   32778:	mov	r0, r7
   3277c:	str	r7, [r5, #8]
   32780:	bl	1924 <Mat_SizeOf@plt>
   32784:	cmp	r0, #0
   32788:	beq	32014 <Mat_VarRead5+0x524>
   3278c:	ldr	r1, [sp, #28]
   32790:	str	r7, [sp, #8]
   32794:	ldr	r6, [sp, #24]
   32798:	str	r8, [sp, #16]
   3279c:	udiv	r7, r1, r0
   327a0:	str	r7, [r6, #20]!
   327a4:	ldr	r0, [r5, #8]
   327a8:	ldr	r8, [r5, #20]
   327ac:	bl	1924 <Mat_SizeOf@plt>
   327b0:	mul	r0, r0, r7
   327b4:	cmp	r8, #0
   327b8:	beq	32850 <Mat_VarRead5+0xd60>
   327bc:	bl	6bd7c <ComplexMalloc>
   327c0:	cmp	r0, #0
   327c4:	beq	328e4 <Mat_VarRead5+0xdf4>
   327c8:	mov	r8, r0
   327cc:	ldr	r0, [r5, #48]	; 0x30
   327d0:	str	r6, [sp, #4]
   327d4:	cmp	r0, #1
   327d8:	beq	32924 <Mat_VarRead5+0xe34>
   327dc:	cmp	r0, #0
   327e0:	bne	33208 <Mat_VarRead5+0x1718>
   327e4:	ldr	r0, [r5, #8]
   327e8:	sub	r0, r0, #1
   327ec:	cmp	r0, #12
   327f0:	bhi	32b54 <Mat_VarRead5+0x1064>
   327f4:	add	r1, pc, #4
   327f8:	ldr	r0, [r1, r0, lsl #2]
   327fc:	add	pc, r1, r0
   32800:	.word	0x00000034
   32804:	.word	0x00000250
   32808:	.word	0x0000026c
   3280c:	.word	0x00000288
   32810:	.word	0x000002a4
   32814:	.word	0x000002c0
   32818:	.word	0x000002dc
   3281c:	.word	0x00000354
   32820:	.word	0x000002f8
   32824:	.word	0x00000354
   32828:	.word	0x00000354
   3282c:	.word	0x00000314
   32830:	.word	0x00000338
   32834:	ldr	r0, [sp, #4]
   32838:	ldr	r1, [r8]
   3283c:	ldr	r2, [sp, #8]
   32840:	ldr	r3, [r0]
   32844:	mov	r0, r4
   32848:	bl	1f358 <ReadInt8Data>
   3284c:	b	32b50 <Mat_VarRead5+0x1060>
   32850:	bl	18d0 <malloc@plt>
   32854:	mov	r2, r0
   32858:	ldr	r0, [sp, #24]
   3285c:	cmp	r2, #0
   32860:	str	r2, [r0, #24]
   32864:	beq	328f0 <Mat_VarRead5+0xe00>
   32868:	ldr	r0, [r5, #48]	; 0x30
   3286c:	cmp	r0, #1
   32870:	beq	3299c <Mat_VarRead5+0xeac>
   32874:	cmp	r0, #0
   32878:	bne	32014 <Mat_VarRead5+0x524>
   3287c:	ldr	r0, [r5, #8]
   32880:	sub	r0, r0, #1
   32884:	cmp	r0, #12
   32888:	bhi	332fc <Mat_VarRead5+0x180c>
   3288c:	add	r1, pc, #4
   32890:	ldr	r0, [r1, r0, lsl #2]
   32894:	add	pc, r1, r0
   32898:	.word	0x00000034
   3289c:	.word	0x0000098c
   328a0:	.word	0x000009a4
   328a4:	.word	0x000009bc
   328a8:	.word	0x000009d4
   328ac:	.word	0x000009ec
   328b0:	.word	0x00000a04
   328b4:	.word	0x00000a64
   328b8:	.word	0x00000a1c
   328bc:	.word	0x00000a64
   328c0:	.word	0x00000a64
   328c4:	.word	0x00000a34
   328c8:	.word	0x00000a4c
   328cc:	mov	r1, r2
   328d0:	ldr	r3, [r6]
   328d4:	ldr	r2, [sp, #8]
   328d8:	mov	r0, r4
   328dc:	bl	1f358 <ReadInt8Data>
   328e0:	b	332f8 <Mat_VarRead5+0x1808>
   328e4:	ldr	r0, [pc, #3020]	; 334b8 <Mat_VarRead5+0x19c8>
   328e8:	add	r0, pc, r0
   328ec:	b	328f8 <Mat_VarRead5+0xe08>
   328f0:	ldr	r0, [pc, #3012]	; 334bc <Mat_VarRead5+0x19cc>
   328f4:	add	r0, pc, r0
   328f8:	bl	19b4 <Mat_Critical@plt>
   328fc:	ldr	r0, [r5, #16]
   32900:	sub	r0, r0, #6
   32904:	cmp	r0, #9
   32908:	bls	32024 <Mat_VarRead5+0x534>
   3290c:	ldr	r0, [r4]
   32910:	mov	r1, sl
   32914:	mov	r2, #0
   32918:	bl	1a2c <fseek@plt>
   3291c:	sub	sp, fp, #28
   32920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32924:	ldr	r0, [r5, #8]
   32928:	sub	r0, r0, #1
   3292c:	cmp	r0, #12
   32930:	bhi	32df4 <Mat_VarRead5+0x1304>
   32934:	add	r1, pc, #4
   32938:	ldr	r0, [r1, r0, lsl #2]
   3293c:	add	pc, r1, r0
   32940:	.word	0x00000034
   32944:	.word	0x00000348
   32948:	.word	0x00000370
   3294c:	.word	0x00000398
   32950:	.word	0x000003c0
   32954:	.word	0x000003ec
   32958:	.word	0x00000414
   3295c:	.word	0x000004b4
   32960:	.word	0x0000043c
   32964:	.word	0x000004b4
   32968:	.word	0x000004b4
   3296c:	.word	0x00000464
   32970:	.word	0x0000048c
   32974:	ldr	r0, [r9]
   32978:	ldr	r2, [r8]
   3297c:	ldr	r3, [sp, #8]
   32980:	ldr	r1, [r0, #12]
   32984:	ldr	r0, [sp, #4]
   32988:	ldr	r0, [r0]
   3298c:	str	r0, [sp]
   32990:	mov	r0, r4
   32994:	bl	21db8 <ReadCompressedInt8Data>
   32998:	b	32df0 <Mat_VarRead5+0x1300>
   3299c:	ldr	r0, [r5, #8]
   329a0:	sub	r0, r0, #1
   329a4:	cmp	r0, #12
   329a8:	bhi	33468 <Mat_VarRead5+0x1978>
   329ac:	add	r1, pc, #4
   329b0:	ldr	r0, [r1, r0, lsl #2]
   329b4:	add	pc, r1, r0
   329b8:	.word	0x00000034
   329bc:	.word	0x0000098c
   329c0:	.word	0x000009ac
   329c4:	.word	0x000009cc
   329c8:	.word	0x000009ec
   329cc:	.word	0x00000a0c
   329d0:	.word	0x00000a2c
   329d4:	.word	0x00000ab0
   329d8:	.word	0x00000a4c
   329dc:	.word	0x00000ab0
   329e0:	.word	0x00000ab0
   329e4:	.word	0x00000a6c
   329e8:	.word	0x00000a90
   329ec:	ldr	r0, [r9]
   329f0:	ldr	r3, [sp, #8]
   329f4:	ldr	r1, [r0, #12]
   329f8:	ldr	r0, [r6]
   329fc:	str	r0, [sp]
   32a00:	mov	r0, r4
   32a04:	bl	21db8 <ReadCompressedInt8Data>
   32a08:	b	33464 <Mat_VarRead5+0x1974>
   32a0c:	ldr	r0, [r5, #52]	; 0x34
   32a10:	ldr	r2, [r5, #40]	; 0x28
   32a14:	mov	r3, r7
   32a18:	ldr	r1, [r0, #12]
   32a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32a20:	str	r0, [sp]
   32a24:	mov	r0, r4
   32a28:	bl	25278 <ReadCompressedCharData>
   32a2c:	ldr	r1, [sp, #24]
   32a30:	cmp	r1, #0
   32a34:	addne	r0, r0, #4
   32a38:	asr	r1, r0, #31
   32a3c:	add	r1, r0, r1, lsr #29
   32a40:	bic	r1, r1, #7
   32a44:	subs	r0, r0, r1
   32a48:	bne	3348c <Mat_VarRead5+0x199c>
   32a4c:	b	32014 <Mat_VarRead5+0x524>
   32a50:	ldr	r0, [sp, #4]
   32a54:	ldr	r1, [r8]
   32a58:	ldr	r2, [sp, #8]
   32a5c:	ldr	r3, [r0]
   32a60:	mov	r0, r4
   32a64:	bl	222e8 <ReadUInt8Data>
   32a68:	b	32b50 <Mat_VarRead5+0x1060>
   32a6c:	ldr	r0, [sp, #4]
   32a70:	ldr	r1, [r8]
   32a74:	ldr	r2, [sp, #8]
   32a78:	ldr	r3, [r0]
   32a7c:	mov	r0, r4
   32a80:	bl	192d0 <ReadInt16Data>
   32a84:	b	32b50 <Mat_VarRead5+0x1060>
   32a88:	ldr	r0, [sp, #4]
   32a8c:	ldr	r1, [r8]
   32a90:	ldr	r2, [sp, #8]
   32a94:	ldr	r3, [r0]
   32a98:	mov	r0, r4
   32a9c:	bl	1c314 <ReadUInt16Data>
   32aa0:	b	32b50 <Mat_VarRead5+0x1060>
   32aa4:	ldr	r0, [sp, #4]
   32aa8:	ldr	r1, [r8]
   32aac:	ldr	r2, [sp, #8]
   32ab0:	ldr	r3, [r0]
   32ab4:	mov	r0, r4
   32ab8:	bl	11a80 <ReadInt32Data>
   32abc:	b	32b50 <Mat_VarRead5+0x1060>
   32ac0:	ldr	r0, [sp, #4]
   32ac4:	ldr	r1, [r8]
   32ac8:	ldr	r2, [sp, #8]
   32acc:	ldr	r3, [r0]
   32ad0:	mov	r0, r4
   32ad4:	bl	156a8 <ReadUInt32Data>
   32ad8:	b	32b50 <Mat_VarRead5+0x1060>
   32adc:	ldr	r0, [sp, #4]
   32ae0:	ldr	r1, [r8]
   32ae4:	ldr	r2, [sp, #8]
   32ae8:	ldr	r3, [r0]
   32aec:	mov	r0, r4
   32af0:	bl	8d54 <ReadSingleData>
   32af4:	b	32b50 <Mat_VarRead5+0x1060>
   32af8:	ldr	r0, [sp, #4]
   32afc:	ldr	r1, [r8]
   32b00:	ldr	r2, [sp, #8]
   32b04:	ldr	r3, [r0]
   32b08:	mov	r0, r4
   32b0c:	bl	3a8c <ReadDoubleData>
   32b10:	b	32b50 <Mat_VarRead5+0x1060>
   32b14:	ldr	r0, [sp, #4]
   32b18:	ldr	r1, [r8]
   32b1c:	ldr	r2, [sp, #8]
   32b20:	ldr	r3, [r0]
   32b24:	mov	r0, r4
   32b28:	bl	bef0 <ReadInt64Data>
   32b2c:	b	32b50 <Mat_VarRead5+0x1060>
   32b30:	.word	0x0004017c
   32b34:	.word	0x000400dc
   32b38:	ldr	r0, [sp, #4]
   32b3c:	ldr	r1, [r8]
   32b40:	ldr	r2, [sp, #8]
   32b44:	ldr	r3, [r0]
   32b48:	mov	r0, r4
   32b4c:	bl	ecb8 <ReadUInt64Data>
   32b50:	str	r0, [sp, #12]
   32b54:	ldr	r0, [sp, #16]
   32b58:	ldr	r1, [sp, #12]
   32b5c:	cmp	r0, #0
   32b60:	addne	r1, r1, #4
   32b64:	asr	r0, r1, #31
   32b68:	add	r0, r1, r0, lsr #29
   32b6c:	bic	r0, r0, #7
   32b70:	subs	r1, r1, r0
   32b74:	beq	32b88 <Mat_VarRead5+0x1098>
   32b78:	ldr	r0, [r4]
   32b7c:	rsb	r1, r1, #8
   32b80:	mov	r2, #1
   32b84:	bl	1a2c <fseek@plt>
   32b88:	ldr	r3, [r4]
   32b8c:	add	r6, sp, #32
   32b90:	mov	r1, #4
   32b94:	mov	r2, #1
   32b98:	mov	r0, r6
   32b9c:	bl	18b8 <fread@plt>
   32ba0:	ldr	r0, [sp, #20]
   32ba4:	cmp	r0, #0
   32ba8:	beq	32bb4 <Mat_VarRead5+0x10c4>
   32bac:	add	r0, sp, #32
   32bb0:	bl	1c0c <Mat_uint32Swap>
   32bb4:	ldr	r0, [sp, #32]
   32bb8:	uxtb	r9, r0
   32bbc:	cmp	r9, #25
   32bc0:	movcs	r9, #0
   32bc4:	cmp	r0, #65536	; 0x10000
   32bc8:	bcs	32c14 <Mat_VarRead5+0x1124>
   32bcc:	ldr	r3, [r4]
   32bd0:	add	r6, r6, #4
   32bd4:	mov	r1, #4
   32bd8:	mov	r2, #1
   32bdc:	mov	r0, r6
   32be0:	bl	18b8 <fread@plt>
   32be4:	ldr	r0, [sp, #20]
   32be8:	cmp	r0, #0
   32bec:	beq	32bf8 <Mat_VarRead5+0x1108>
   32bf0:	mov	r0, r6
   32bf4:	bl	1c0c <Mat_uint32Swap>
   32bf8:	ldr	r0, [sp, #36]	; 0x24
   32bfc:	mov	r6, #0
   32c00:	ldr	r1, [r5, #8]
   32c04:	sub	r1, r1, #1
   32c08:	cmp	r1, #12
   32c0c:	bls	32c2c <Mat_VarRead5+0x113c>
   32c10:	b	33030 <Mat_VarRead5+0x1540>
   32c14:	lsr	r0, r0, #16
   32c18:	mov	r6, #1
   32c1c:	ldr	r1, [r5, #8]
   32c20:	sub	r1, r1, #1
   32c24:	cmp	r1, #12
   32c28:	bhi	33030 <Mat_VarRead5+0x1540>
   32c2c:	add	r2, pc, #4
   32c30:	ldr	r1, [r2, r1, lsl #2]
   32c34:	add	pc, r2, r1
   32c38:	.word	0x00000034
   32c3c:	.word	0x00000300
   32c40:	.word	0x0000031c
   32c44:	.word	0x00000338
   32c48:	.word	0x00000354
   32c4c:	.word	0x00000370
   32c50:	.word	0x0000038c
   32c54:	.word	0x000003f8
   32c58:	.word	0x000003a8
   32c5c:	.word	0x000003f8
   32c60:	.word	0x000003f8
   32c64:	.word	0x000003c4
   32c68:	.word	0x000003e0
   32c6c:	ldr	r0, [sp, #4]
   32c70:	ldr	r1, [r8, #4]
   32c74:	mov	r2, r9
   32c78:	ldr	r3, [r0]
   32c7c:	mov	r0, r4
   32c80:	bl	1f358 <ReadInt8Data>
   32c84:	b	33030 <Mat_VarRead5+0x1540>
   32c88:	ldr	r0, [r9]
   32c8c:	ldr	r2, [r8]
   32c90:	ldr	r3, [sp, #8]
   32c94:	ldr	r1, [r0, #12]
   32c98:	ldr	r0, [sp, #4]
   32c9c:	ldr	r0, [r0]
   32ca0:	str	r0, [sp]
   32ca4:	mov	r0, r4
   32ca8:	bl	24d48 <ReadCompressedUInt8Data>
   32cac:	b	32df0 <Mat_VarRead5+0x1300>
   32cb0:	ldr	r0, [r9]
   32cb4:	ldr	r2, [r8]
   32cb8:	ldr	r3, [sp, #8]
   32cbc:	ldr	r1, [r0, #12]
   32cc0:	ldr	r0, [sp, #4]
   32cc4:	ldr	r0, [r0]
   32cc8:	str	r0, [sp]
   32ccc:	mov	r0, r4
   32cd0:	bl	1bde4 <ReadCompressedInt16Data>
   32cd4:	b	32df0 <Mat_VarRead5+0x1300>
   32cd8:	ldr	r0, [r9]
   32cdc:	ldr	r2, [r8]
   32ce0:	ldr	r3, [sp, #8]
   32ce4:	ldr	r1, [r0, #12]
   32ce8:	ldr	r0, [sp, #4]
   32cec:	ldr	r0, [r0]
   32cf0:	str	r0, [sp]
   32cf4:	mov	r0, r4
   32cf8:	bl	1ee28 <ReadCompressedUInt16Data>
   32cfc:	b	32df0 <Mat_VarRead5+0x1300>
   32d00:	ldr	r0, [r9]
   32d04:	ldr	r2, [r8]
   32d08:	ldr	r3, [sp, #8]
   32d0c:	ldr	r1, [r0, #12]
   32d10:	ldr	r0, [sp, #4]
   32d14:	ldr	r0, [r0]
   32d18:	str	r0, [sp]
   32d1c:	mov	r0, r4
   32d20:	bl	15178 <ReadCompressedInt32Data>
   32d24:	b	32df0 <Mat_VarRead5+0x1300>
   32d28:	.word	0x00040113
   32d2c:	ldr	r0, [r9]
   32d30:	ldr	r2, [r8]
   32d34:	ldr	r3, [sp, #8]
   32d38:	ldr	r1, [r0, #12]
   32d3c:	ldr	r0, [sp, #4]
   32d40:	ldr	r0, [r0]
   32d44:	str	r0, [sp]
   32d48:	mov	r0, r4
   32d4c:	bl	18da0 <ReadCompressedUInt32Data>
   32d50:	b	32df0 <Mat_VarRead5+0x1300>
   32d54:	ldr	r0, [r9]
   32d58:	ldr	r2, [r8]
   32d5c:	ldr	r3, [sp, #8]
   32d60:	ldr	r1, [r0, #12]
   32d64:	ldr	r0, [sp, #4]
   32d68:	ldr	r0, [r0]
   32d6c:	str	r0, [sp]
   32d70:	mov	r0, r4
   32d74:	bl	b980 <ReadCompressedSingleData>
   32d78:	b	32df0 <Mat_VarRead5+0x1300>
   32d7c:	ldr	r0, [r9]
   32d80:	ldr	r2, [r8]
   32d84:	ldr	r3, [sp, #8]
   32d88:	ldr	r1, [r0, #12]
   32d8c:	ldr	r0, [sp, #4]
   32d90:	ldr	r0, [r0]
   32d94:	str	r0, [sp]
   32d98:	mov	r0, r4
   32d9c:	bl	65fc <ReadCompressedDoubleData>
   32da0:	b	32df0 <Mat_VarRead5+0x1300>
   32da4:	ldr	r0, [r9]
   32da8:	ldr	r2, [r8]
   32dac:	ldr	r3, [sp, #8]
   32db0:	ldr	r1, [r0, #12]
   32db4:	ldr	r0, [sp, #4]
   32db8:	ldr	r0, [r0]
   32dbc:	str	r0, [sp]
   32dc0:	mov	r0, r4
   32dc4:	bl	e6f8 <ReadCompressedInt64Data>
   32dc8:	b	32df0 <Mat_VarRead5+0x1300>
   32dcc:	ldr	r0, [r9]
   32dd0:	ldr	r2, [r8]
   32dd4:	ldr	r3, [sp, #8]
   32dd8:	ldr	r1, [r0, #12]
   32ddc:	ldr	r0, [sp, #4]
   32de0:	ldr	r0, [r0]
   32de4:	str	r0, [sp]
   32de8:	mov	r0, r4
   32dec:	bl	114c0 <ReadCompressedUInt64Data>
   32df0:	str	r0, [sp, #12]
   32df4:	ldr	r0, [sp, #16]
   32df8:	ldr	r1, [sp, #12]
   32dfc:	cmp	r0, #0
   32e00:	addne	r1, r1, #4
   32e04:	asr	r0, r1, #31
   32e08:	add	r0, r1, r0, lsr #29
   32e0c:	bic	r0, r0, #7
   32e10:	subs	r0, r1, r0
   32e14:	beq	32e2c <Mat_VarRead5+0x133c>
   32e18:	ldr	r1, [r9]
   32e1c:	rsb	r2, r0, #8
   32e20:	mov	r0, r4
   32e24:	ldr	r1, [r1, #12]
   32e28:	bl	256c <InflateSkip>
   32e2c:	ldr	r0, [r9]
   32e30:	add	r7, sp, #32
   32e34:	mov	r2, r7
   32e38:	ldr	r1, [r0, #12]
   32e3c:	mov	r0, r4
   32e40:	bl	336c <InflateDataType>
   32e44:	ldr	r0, [sp, #20]
   32e48:	cmp	r0, #0
   32e4c:	beq	32e58 <Mat_VarRead5+0x1368>
   32e50:	add	r0, sp, #32
   32e54:	bl	1c0c <Mat_uint32Swap>
   32e58:	ldr	r0, [sp, #32]
   32e5c:	uxtb	r6, r0
   32e60:	cmp	r6, #25
   32e64:	movcs	r6, #0
   32e68:	cmp	r0, #65536	; 0x10000
   32e6c:	bcs	32eb8 <Mat_VarRead5+0x13c8>
   32e70:	ldr	r0, [r9]
   32e74:	add	r7, r7, #4
   32e78:	mov	r2, r7
   32e7c:	ldr	r1, [r0, #12]
   32e80:	mov	r0, r4
   32e84:	bl	336c <InflateDataType>
   32e88:	ldr	r0, [sp, #20]
   32e8c:	cmp	r0, #0
   32e90:	beq	32e9c <Mat_VarRead5+0x13ac>
   32e94:	mov	r0, r7
   32e98:	bl	1c0c <Mat_uint32Swap>
   32e9c:	ldr	r0, [sp, #36]	; 0x24
   32ea0:	mov	r7, #0
   32ea4:	ldr	r1, [r5, #8]
   32ea8:	sub	r1, r1, #1
   32eac:	cmp	r1, #12
   32eb0:	bls	32ed0 <Mat_VarRead5+0x13e0>
   32eb4:	b	331d8 <Mat_VarRead5+0x16e8>
   32eb8:	lsr	r0, r0, #16
   32ebc:	mov	r7, #1
   32ec0:	ldr	r1, [r5, #8]
   32ec4:	sub	r1, r1, #1
   32ec8:	cmp	r1, #12
   32ecc:	bhi	331d8 <Mat_VarRead5+0x16e8>
   32ed0:	add	r2, pc, #4
   32ed4:	ldr	r1, [r2, r1, lsl #2]
   32ed8:	add	pc, r2, r1
   32edc:	.word	0x00000034
   32ee0:	.word	0x00000184
   32ee4:	.word	0x000001ac
   32ee8:	.word	0x000001dc
   32eec:	.word	0x00000204
   32ef0:	.word	0x0000022c
   32ef4:	.word	0x00000254
   32ef8:	.word	0x000002fc
   32efc:	.word	0x0000027c
   32f00:	.word	0x000002fc
   32f04:	.word	0x000002fc
   32f08:	.word	0x000002a4
   32f0c:	.word	0x000002d8
   32f10:	ldr	r0, [r9]
   32f14:	ldr	r2, [r8, #4]
   32f18:	mov	r3, r6
   32f1c:	ldr	r1, [r0, #12]
   32f20:	ldr	r0, [sp, #4]
   32f24:	ldr	r0, [r0]
   32f28:	str	r0, [sp]
   32f2c:	mov	r0, r4
   32f30:	bl	21db8 <ReadCompressedInt8Data>
   32f34:	b	331d8 <Mat_VarRead5+0x16e8>
   32f38:	ldr	r0, [sp, #4]
   32f3c:	ldr	r1, [r8, #4]
   32f40:	mov	r2, r9
   32f44:	ldr	r3, [r0]
   32f48:	mov	r0, r4
   32f4c:	bl	222e8 <ReadUInt8Data>
   32f50:	b	33030 <Mat_VarRead5+0x1540>
   32f54:	ldr	r0, [sp, #4]
   32f58:	ldr	r1, [r8, #4]
   32f5c:	mov	r2, r9
   32f60:	ldr	r3, [r0]
   32f64:	mov	r0, r4
   32f68:	bl	192d0 <ReadInt16Data>
   32f6c:	b	33030 <Mat_VarRead5+0x1540>
   32f70:	ldr	r0, [sp, #4]
   32f74:	ldr	r1, [r8, #4]
   32f78:	mov	r2, r9
   32f7c:	ldr	r3, [r0]
   32f80:	mov	r0, r4
   32f84:	bl	1c314 <ReadUInt16Data>
   32f88:	b	33030 <Mat_VarRead5+0x1540>
   32f8c:	ldr	r0, [sp, #4]
   32f90:	ldr	r1, [r8, #4]
   32f94:	mov	r2, r9
   32f98:	ldr	r3, [r0]
   32f9c:	mov	r0, r4
   32fa0:	bl	11a80 <ReadInt32Data>
   32fa4:	b	33030 <Mat_VarRead5+0x1540>
   32fa8:	ldr	r0, [sp, #4]
   32fac:	ldr	r1, [r8, #4]
   32fb0:	mov	r2, r9
   32fb4:	ldr	r3, [r0]
   32fb8:	mov	r0, r4
   32fbc:	bl	156a8 <ReadUInt32Data>
   32fc0:	b	33030 <Mat_VarRead5+0x1540>
   32fc4:	ldr	r0, [sp, #4]
   32fc8:	ldr	r1, [r8, #4]
   32fcc:	mov	r2, r9
   32fd0:	ldr	r3, [r0]
   32fd4:	mov	r0, r4
   32fd8:	bl	8d54 <ReadSingleData>
   32fdc:	b	33030 <Mat_VarRead5+0x1540>
   32fe0:	ldr	r0, [sp, #4]
   32fe4:	ldr	r1, [r8, #4]
   32fe8:	mov	r2, r9
   32fec:	ldr	r3, [r0]
   32ff0:	mov	r0, r4
   32ff4:	bl	3a8c <ReadDoubleData>
   32ff8:	b	33030 <Mat_VarRead5+0x1540>
   32ffc:	ldr	r0, [sp, #4]
   33000:	ldr	r1, [r8, #4]
   33004:	mov	r2, r9
   33008:	ldr	r3, [r0]
   3300c:	mov	r0, r4
   33010:	bl	bef0 <ReadInt64Data>
   33014:	b	33030 <Mat_VarRead5+0x1540>
   33018:	ldr	r0, [sp, #4]
   3301c:	ldr	r1, [r8, #4]
   33020:	mov	r2, r9
   33024:	ldr	r3, [r0]
   33028:	mov	r0, r4
   3302c:	bl	ecb8 <ReadUInt64Data>
   33030:	cmp	r6, #0
   33034:	addne	r0, r0, #4
   33038:	asr	r1, r0, #31
   3303c:	add	r1, r0, r1, lsr #29
   33040:	bic	r1, r1, #7
   33044:	subs	r1, r0, r1
   33048:	beq	33208 <Mat_VarRead5+0x1718>
   3304c:	ldr	r0, [r4]
   33050:	rsb	r1, r1, #8
   33054:	mov	r2, #1
   33058:	bl	1a2c <fseek@plt>
   3305c:	b	33208 <Mat_VarRead5+0x1718>
   33060:	ldr	r0, [r9]
   33064:	ldr	r2, [r8, #4]
   33068:	mov	r3, r6
   3306c:	ldr	r1, [r0, #12]
   33070:	ldr	r0, [sp, #4]
   33074:	ldr	r0, [r0]
   33078:	str	r0, [sp]
   3307c:	mov	r0, r4
   33080:	bl	24d48 <ReadCompressedUInt8Data>
   33084:	b	331d8 <Mat_VarRead5+0x16e8>
   33088:	ldr	r0, [r9]
   3308c:	ldr	r2, [r8, #4]
   33090:	mov	r3, r6
   33094:	ldr	r1, [r0, #12]
   33098:	ldr	r0, [sp, #4]
   3309c:	ldr	r0, [r0]
   330a0:	str	r0, [sp]
   330a4:	mov	r0, r4
   330a8:	bl	1bde4 <ReadCompressedInt16Data>
   330ac:	b	331d8 <Mat_VarRead5+0x16e8>
   330b0:	.word	0x0003fdbd
   330b4:	.word	0x0003fc50
   330b8:	ldr	r0, [r9]
   330bc:	ldr	r2, [r8, #4]
   330c0:	mov	r3, r6
   330c4:	ldr	r1, [r0, #12]
   330c8:	ldr	r0, [sp, #4]
   330cc:	ldr	r0, [r0]
   330d0:	str	r0, [sp]
   330d4:	mov	r0, r4
   330d8:	bl	1ee28 <ReadCompressedUInt16Data>
   330dc:	b	331d8 <Mat_VarRead5+0x16e8>
   330e0:	ldr	r0, [r9]
   330e4:	ldr	r2, [r8, #4]
   330e8:	mov	r3, r6
   330ec:	ldr	r1, [r0, #12]
   330f0:	ldr	r0, [sp, #4]
   330f4:	ldr	r0, [r0]
   330f8:	str	r0, [sp]
   330fc:	mov	r0, r4
   33100:	bl	15178 <ReadCompressedInt32Data>
   33104:	b	331d8 <Mat_VarRead5+0x16e8>
   33108:	ldr	r0, [r9]
   3310c:	ldr	r2, [r8, #4]
   33110:	mov	r3, r6
   33114:	ldr	r1, [r0, #12]
   33118:	ldr	r0, [sp, #4]
   3311c:	ldr	r0, [r0]
   33120:	str	r0, [sp]
   33124:	mov	r0, r4
   33128:	bl	18da0 <ReadCompressedUInt32Data>
   3312c:	b	331d8 <Mat_VarRead5+0x16e8>
   33130:	ldr	r0, [r9]
   33134:	ldr	r2, [r8, #4]
   33138:	mov	r3, r6
   3313c:	ldr	r1, [r0, #12]
   33140:	ldr	r0, [sp, #4]
   33144:	ldr	r0, [r0]
   33148:	str	r0, [sp]
   3314c:	mov	r0, r4
   33150:	bl	b980 <ReadCompressedSingleData>
   33154:	b	331d8 <Mat_VarRead5+0x16e8>
   33158:	ldr	r0, [r9]
   3315c:	ldr	r2, [r8, #4]
   33160:	mov	r3, r6
   33164:	ldr	r1, [r0, #12]
   33168:	ldr	r0, [sp, #4]
   3316c:	ldr	r0, [r0]
   33170:	str	r0, [sp]
   33174:	mov	r0, r4
   33178:	bl	65fc <ReadCompressedDoubleData>
   3317c:	b	331d8 <Mat_VarRead5+0x16e8>
   33180:	ldr	r0, [r9]
   33184:	ldr	r2, [r8, #4]
   33188:	mov	r3, r6
   3318c:	ldr	r1, [r0, #12]
   33190:	ldr	r0, [sp, #4]
   33194:	ldr	r0, [r0]
   33198:	str	r0, [sp]
   3319c:	mov	r0, r4
   331a0:	bl	e6f8 <ReadCompressedInt64Data>
   331a4:	b	331d8 <Mat_VarRead5+0x16e8>
   331a8:	.word	0x0003fb0c
   331ac:	.word	0x0003fb42
   331b0:	.word	0x0003fb41
   331b4:	ldr	r0, [r9]
   331b8:	ldr	r2, [r8, #4]
   331bc:	mov	r3, r6
   331c0:	ldr	r1, [r0, #12]
   331c4:	ldr	r0, [sp, #4]
   331c8:	ldr	r0, [r0]
   331cc:	str	r0, [sp]
   331d0:	mov	r0, r4
   331d4:	bl	114c0 <ReadCompressedUInt64Data>
   331d8:	cmp	r7, #0
   331dc:	addne	r0, r0, #4
   331e0:	asr	r1, r0, #31
   331e4:	add	r1, r0, r1, lsr #29
   331e8:	bic	r1, r1, #7
   331ec:	subs	r0, r0, r1
   331f0:	beq	33208 <Mat_VarRead5+0x1718>
   331f4:	ldr	r1, [r9]
   331f8:	rsb	r2, r0, #8
   331fc:	mov	r0, r4
   33200:	ldr	r1, [r1, #12]
   33204:	bl	256c <InflateSkip>
   33208:	ldr	r0, [sp, #24]
   3320c:	str	r8, [r0, #24]
   33210:	ldr	r0, [r5, #16]
   33214:	sub	r0, r0, #6
   33218:	cmp	r0, #9
   3321c:	bls	32024 <Mat_VarRead5+0x534>
   33220:	b	3290c <Mat_VarRead5+0xe1c>
   33224:	mov	r1, r2
   33228:	ldr	r3, [r6]
   3322c:	ldr	r2, [sp, #8]
   33230:	mov	r0, r4
   33234:	bl	222e8 <ReadUInt8Data>
   33238:	b	332f8 <Mat_VarRead5+0x1808>
   3323c:	mov	r1, r2
   33240:	ldr	r3, [r6]
   33244:	ldr	r2, [sp, #8]
   33248:	mov	r0, r4
   3324c:	bl	192d0 <ReadInt16Data>
   33250:	b	332f8 <Mat_VarRead5+0x1808>
   33254:	mov	r1, r2
   33258:	ldr	r3, [r6]
   3325c:	ldr	r2, [sp, #8]
   33260:	mov	r0, r4
   33264:	bl	1c314 <ReadUInt16Data>
   33268:	b	332f8 <Mat_VarRead5+0x1808>
   3326c:	mov	r1, r2
   33270:	ldr	r3, [r6]
   33274:	ldr	r2, [sp, #8]
   33278:	mov	r0, r4
   3327c:	bl	11a80 <ReadInt32Data>
   33280:	b	332f8 <Mat_VarRead5+0x1808>
   33284:	mov	r1, r2
   33288:	ldr	r3, [r6]
   3328c:	ldr	r2, [sp, #8]
   33290:	mov	r0, r4
   33294:	bl	156a8 <ReadUInt32Data>
   33298:	b	332f8 <Mat_VarRead5+0x1808>
   3329c:	mov	r1, r2
   332a0:	ldr	r3, [r6]
   332a4:	ldr	r2, [sp, #8]
   332a8:	mov	r0, r4
   332ac:	bl	8d54 <ReadSingleData>
   332b0:	b	332f8 <Mat_VarRead5+0x1808>
   332b4:	mov	r1, r2
   332b8:	ldr	r3, [r6]
   332bc:	ldr	r2, [sp, #8]
   332c0:	mov	r0, r4
   332c4:	bl	3a8c <ReadDoubleData>
   332c8:	b	332f8 <Mat_VarRead5+0x1808>
   332cc:	mov	r1, r2
   332d0:	ldr	r3, [r6]
   332d4:	ldr	r2, [sp, #8]
   332d8:	mov	r0, r4
   332dc:	bl	bef0 <ReadInt64Data>
   332e0:	b	332f8 <Mat_VarRead5+0x1808>
   332e4:	mov	r1, r2
   332e8:	ldr	r3, [r6]
   332ec:	ldr	r2, [sp, #8]
   332f0:	mov	r0, r4
   332f4:	bl	ecb8 <ReadUInt64Data>
   332f8:	str	r0, [sp, #12]
   332fc:	ldr	r0, [sp, #16]
   33300:	ldr	r1, [sp, #12]
   33304:	cmp	r0, #0
   33308:	addne	r1, r1, #4
   3330c:	asr	r0, r1, #31
   33310:	add	r0, r1, r0, lsr #29
   33314:	bic	r0, r0, #7
   33318:	subs	r1, r1, r0
   3331c:	beq	32014 <Mat_VarRead5+0x524>
   33320:	ldr	r0, [r4]
   33324:	rsb	r1, r1, #8
   33328:	mov	r2, #1
   3332c:	bl	1a2c <fseek@plt>
   33330:	ldr	r0, [r5, #16]
   33334:	sub	r0, r0, #6
   33338:	cmp	r0, #9
   3333c:	bls	32024 <Mat_VarRead5+0x534>
   33340:	b	3290c <Mat_VarRead5+0xe1c>
   33344:	ldr	r0, [r9]
   33348:	ldr	r3, [sp, #8]
   3334c:	ldr	r1, [r0, #12]
   33350:	ldr	r0, [r6]
   33354:	str	r0, [sp]
   33358:	mov	r0, r4
   3335c:	bl	24d48 <ReadCompressedUInt8Data>
   33360:	b	33464 <Mat_VarRead5+0x1974>
   33364:	ldr	r0, [r9]
   33368:	ldr	r3, [sp, #8]
   3336c:	ldr	r1, [r0, #12]
   33370:	ldr	r0, [r6]
   33374:	str	r0, [sp]
   33378:	mov	r0, r4
   3337c:	bl	1bde4 <ReadCompressedInt16Data>
   33380:	b	33464 <Mat_VarRead5+0x1974>
   33384:	ldr	r0, [r9]
   33388:	ldr	r3, [sp, #8]
   3338c:	ldr	r1, [r0, #12]
   33390:	ldr	r0, [r6]
   33394:	str	r0, [sp]
   33398:	mov	r0, r4
   3339c:	bl	1ee28 <ReadCompressedUInt16Data>
   333a0:	b	33464 <Mat_VarRead5+0x1974>
   333a4:	ldr	r0, [r9]
   333a8:	ldr	r3, [sp, #8]
   333ac:	ldr	r1, [r0, #12]
   333b0:	ldr	r0, [r6]
   333b4:	str	r0, [sp]
   333b8:	mov	r0, r4
   333bc:	bl	15178 <ReadCompressedInt32Data>
   333c0:	b	33464 <Mat_VarRead5+0x1974>
   333c4:	ldr	r0, [r9]
   333c8:	ldr	r3, [sp, #8]
   333cc:	ldr	r1, [r0, #12]
   333d0:	ldr	r0, [r6]
   333d4:	str	r0, [sp]
   333d8:	mov	r0, r4
   333dc:	bl	18da0 <ReadCompressedUInt32Data>
   333e0:	b	33464 <Mat_VarRead5+0x1974>
   333e4:	ldr	r0, [r9]
   333e8:	ldr	r3, [sp, #8]
   333ec:	ldr	r1, [r0, #12]
   333f0:	ldr	r0, [r6]
   333f4:	str	r0, [sp]
   333f8:	mov	r0, r4
   333fc:	bl	b980 <ReadCompressedSingleData>
   33400:	b	33464 <Mat_VarRead5+0x1974>
   33404:	ldr	r0, [r9]
   33408:	ldr	r3, [sp, #8]
   3340c:	ldr	r1, [r0, #12]
   33410:	ldr	r0, [r6]
   33414:	str	r0, [sp]
   33418:	mov	r0, r4
   3341c:	bl	65fc <ReadCompressedDoubleData>
   33420:	b	33464 <Mat_VarRead5+0x1974>
   33424:	ldr	r0, [r9]
   33428:	ldr	r3, [sp, #8]
   3342c:	ldr	r1, [r0, #12]
   33430:	ldr	r0, [r6]
   33434:	str	r0, [sp]
   33438:	mov	r0, r4
   3343c:	bl	e6f8 <ReadCompressedInt64Data>
   33440:	b	33464 <Mat_VarRead5+0x1974>
   33444:	.word	0x0003f901
   33448:	ldr	r0, [r9]
   3344c:	ldr	r3, [sp, #8]
   33450:	ldr	r1, [r0, #12]
   33454:	ldr	r0, [r6]
   33458:	str	r0, [sp]
   3345c:	mov	r0, r4
   33460:	bl	114c0 <ReadCompressedUInt64Data>
   33464:	str	r0, [sp, #12]
   33468:	ldr	r0, [sp, #16]
   3346c:	ldr	r1, [sp, #12]
   33470:	cmp	r0, #0
   33474:	addne	r1, r1, #4
   33478:	asr	r0, r1, #31
   3347c:	add	r0, r1, r0, lsr #29
   33480:	bic	r0, r0, #7
   33484:	subs	r0, r1, r0
   33488:	beq	32014 <Mat_VarRead5+0x524>
   3348c:	ldr	r1, [r9]
   33490:	rsb	r2, r0, #8
   33494:	mov	r0, r4
   33498:	ldr	r1, [r1, #12]
   3349c:	bl	256c <InflateSkip>
   334a0:	ldr	r0, [r5, #16]
   334a4:	sub	r0, r0, #6
   334a8:	cmp	r0, #9
   334ac:	bls	32024 <Mat_VarRead5+0x534>
   334b0:	b	3290c <Mat_VarRead5+0xe1c>
   334b4:	.word	0x0003f690
   334b8:	.word	0x0003f4f9
   334bc:	.word	0x0003f522
   334c0:	.word	0x0003f73f

000334c4 <Mat_VarReadNumeric5>:
   334c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   334c8:	add	fp, sp, #24
   334cc:	sub	sp, sp, #16
   334d0:	mov	r4, r0
   334d4:	ldr	r0, [r1, #48]	; 0x30
   334d8:	mov	r9, r3
   334dc:	mov	r8, r2
   334e0:	mov	r5, r1
   334e4:	cmp	r0, #1
   334e8:	bne	33560 <Mat_VarReadNumeric5+0x9c>
   334ec:	ldr	r0, [r5, #52]	; 0x34
   334f0:	add	r7, sp, #8
   334f4:	mov	r6, #0
   334f8:	mov	r2, r7
   334fc:	ldr	r1, [r0, #12]
   33500:	mov	r0, r4
   33504:	str	r6, [r1, #4]
   33508:	bl	336c <InflateDataType>
   3350c:	ldr	r0, [r4, #20]
   33510:	cmp	r0, #0
   33514:	beq	33520 <Mat_VarReadNumeric5+0x5c>
   33518:	add	r0, sp, #8
   3351c:	bl	1c0c <Mat_uint32Swap>
   33520:	ldr	r0, [sp, #8]
   33524:	uxtb	r1, r0
   33528:	cmp	r1, #25
   3352c:	movcc	r6, r1
   33530:	cmp	r0, #65536	; 0x10000
   33534:	bcs	33650 <Mat_VarReadNumeric5+0x18c>
   33538:	ldr	r0, [r5, #52]	; 0x34
   3353c:	add	r7, r7, #4
   33540:	mov	r2, r7
   33544:	ldr	r1, [r0, #12]
   33548:	mov	r0, r4
   3354c:	bl	336c <InflateDataType>
   33550:	ldr	r0, [r4, #20]
   33554:	cmp	r0, #0
   33558:	bne	335c8 <Mat_VarReadNumeric5+0x104>
   3355c:	b	335d0 <Mat_VarReadNumeric5+0x10c>
   33560:	ldr	r3, [r4]
   33564:	add	r7, sp, #8
   33568:	mov	r1, #4
   3356c:	mov	r2, #1
   33570:	mov	r0, r7
   33574:	bl	18b8 <fread@plt>
   33578:	ldr	r0, [r4, #20]
   3357c:	cmp	r0, #0
   33580:	beq	3358c <Mat_VarReadNumeric5+0xc8>
   33584:	add	r0, sp, #8
   33588:	bl	1c0c <Mat_uint32Swap>
   3358c:	ldr	r0, [sp, #8]
   33590:	uxtb	r6, r0
   33594:	cmp	r6, #25
   33598:	movcs	r6, #0
   3359c:	cmp	r0, #65536	; 0x10000
   335a0:	bcs	33650 <Mat_VarReadNumeric5+0x18c>
   335a4:	ldr	r3, [r4]
   335a8:	add	r7, r7, #4
   335ac:	mov	r1, #4
   335b0:	mov	r2, #1
   335b4:	mov	r0, r7
   335b8:	bl	18b8 <fread@plt>
   335bc:	ldr	r0, [r4, #20]
   335c0:	cmp	r0, #0
   335c4:	beq	335d0 <Mat_VarReadNumeric5+0x10c>
   335c8:	mov	r0, r7
   335cc:	bl	1c0c <Mat_uint32Swap>
   335d0:	ldr	r0, [sp, #12]
   335d4:	mov	r7, #0
   335d8:	cmp	r0, #0
   335dc:	beq	336c8 <Mat_VarReadNumeric5+0x204>
   335e0:	ldr	r1, [r5, #48]	; 0x30
   335e4:	cmp	r1, #1
   335e8:	beq	33664 <Mat_VarReadNumeric5+0x1a0>
   335ec:	cmp	r1, #0
   335f0:	bne	3392c <Mat_VarReadNumeric5+0x468>
   335f4:	ldr	r1, [r5, #16]
   335f8:	sub	r1, r1, #6
   335fc:	cmp	r1, #9
   33600:	bhi	337ac <Mat_VarReadNumeric5+0x2e8>
   33604:	add	r0, pc, #4
   33608:	ldr	r1, [r0, r1, lsl #2]
   3360c:	add	pc, r0, r1
   33610:	.word	0x00000028
   33614:	.word	0x000000c8
   33618:	.word	0x000000e0
   3361c:	.word	0x000000f8
   33620:	.word	0x00000110
   33624:	.word	0x00000128
   33628:	.word	0x00000140
   3362c:	.word	0x00000158
   33630:	.word	0x00000170
   33634:	.word	0x00000188
   33638:	mov	r0, r4
   3363c:	mov	r1, r8
   33640:	mov	r2, r6
   33644:	mov	r3, r9
   33648:	bl	3a8c <ReadDoubleData>
   3364c:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33650:	lsr	r0, r0, #16
   33654:	mov	r7, #1
   33658:	ldr	r1, [r5, #48]	; 0x30
   3365c:	cmp	r1, #1
   33660:	bne	335ec <Mat_VarReadNumeric5+0x128>
   33664:	ldr	r1, [r5, #16]
   33668:	sub	r1, r1, #6
   3366c:	cmp	r1, #9
   33670:	bhi	338fc <Mat_VarReadNumeric5+0x438>
   33674:	add	r0, pc, #4
   33678:	ldr	r1, [r0, r1, lsl #2]
   3367c:	add	pc, r0, r1
   33680:	.word	0x00000028
   33684:	.word	0x00000160
   33688:	.word	0x00000180
   3368c:	.word	0x000001a0
   33690:	.word	0x000001c0
   33694:	.word	0x000001e0
   33698:	.word	0x00000200
   3369c:	.word	0x00000220
   336a0:	.word	0x00000240
   336a4:	.word	0x00000260
   336a8:	ldr	r0, [r5, #52]	; 0x34
   336ac:	mov	r2, r8
   336b0:	mov	r3, r6
   336b4:	ldr	r1, [r0, #12]
   336b8:	mov	r0, r4
   336bc:	str	r9, [sp]
   336c0:	bl	65fc <ReadCompressedDoubleData>
   336c4:	b	338fc <Mat_VarReadNumeric5+0x438>
   336c8:	mov	r0, #0
   336cc:	str	r0, [r5]
   336d0:	sub	sp, fp, #24
   336d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   336d8:	mov	r0, r4
   336dc:	mov	r1, r8
   336e0:	mov	r2, r6
   336e4:	mov	r3, r9
   336e8:	bl	8d54 <ReadSingleData>
   336ec:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   336f0:	mov	r0, r4
   336f4:	mov	r1, r8
   336f8:	mov	r2, r6
   336fc:	mov	r3, r9
   33700:	bl	1f358 <ReadInt8Data>
   33704:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33708:	mov	r0, r4
   3370c:	mov	r1, r8
   33710:	mov	r2, r6
   33714:	mov	r3, r9
   33718:	bl	222e8 <ReadUInt8Data>
   3371c:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33720:	mov	r0, r4
   33724:	mov	r1, r8
   33728:	mov	r2, r6
   3372c:	mov	r3, r9
   33730:	bl	192d0 <ReadInt16Data>
   33734:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33738:	mov	r0, r4
   3373c:	mov	r1, r8
   33740:	mov	r2, r6
   33744:	mov	r3, r9
   33748:	bl	1c314 <ReadUInt16Data>
   3374c:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33750:	mov	r0, r4
   33754:	mov	r1, r8
   33758:	mov	r2, r6
   3375c:	mov	r3, r9
   33760:	bl	11a80 <ReadInt32Data>
   33764:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33768:	mov	r0, r4
   3376c:	mov	r1, r8
   33770:	mov	r2, r6
   33774:	mov	r3, r9
   33778:	bl	156a8 <ReadUInt32Data>
   3377c:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33780:	mov	r0, r4
   33784:	mov	r1, r8
   33788:	mov	r2, r6
   3378c:	mov	r3, r9
   33790:	bl	bef0 <ReadInt64Data>
   33794:	b	337ac <Mat_VarReadNumeric5+0x2e8>
   33798:	mov	r0, r4
   3379c:	mov	r1, r8
   337a0:	mov	r2, r6
   337a4:	mov	r3, r9
   337a8:	bl	ecb8 <ReadUInt64Data>
   337ac:	cmp	r7, #0
   337b0:	addne	r0, r0, #4
   337b4:	asr	r1, r0, #31
   337b8:	add	r1, r0, r1, lsr #29
   337bc:	bic	r1, r1, #7
   337c0:	subs	r1, r0, r1
   337c4:	beq	3392c <Mat_VarReadNumeric5+0x468>
   337c8:	ldr	r0, [r4]
   337cc:	rsb	r1, r1, #8
   337d0:	mov	r2, #1
   337d4:	bl	1a2c <fseek@plt>
   337d8:	sub	sp, fp, #24
   337dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   337e0:	ldr	r0, [r5, #52]	; 0x34
   337e4:	mov	r2, r8
   337e8:	mov	r3, r6
   337ec:	ldr	r1, [r0, #12]
   337f0:	mov	r0, r4
   337f4:	str	r9, [sp]
   337f8:	bl	b980 <ReadCompressedSingleData>
   337fc:	b	338fc <Mat_VarReadNumeric5+0x438>
   33800:	ldr	r0, [r5, #52]	; 0x34
   33804:	mov	r2, r8
   33808:	mov	r3, r6
   3380c:	ldr	r1, [r0, #12]
   33810:	mov	r0, r4
   33814:	str	r9, [sp]
   33818:	bl	21db8 <ReadCompressedInt8Data>
   3381c:	b	338fc <Mat_VarReadNumeric5+0x438>
   33820:	ldr	r0, [r5, #52]	; 0x34
   33824:	mov	r2, r8
   33828:	mov	r3, r6
   3382c:	ldr	r1, [r0, #12]
   33830:	mov	r0, r4
   33834:	str	r9, [sp]
   33838:	bl	24d48 <ReadCompressedUInt8Data>
   3383c:	b	338fc <Mat_VarReadNumeric5+0x438>
   33840:	ldr	r0, [r5, #52]	; 0x34
   33844:	mov	r2, r8
   33848:	mov	r3, r6
   3384c:	ldr	r1, [r0, #12]
   33850:	mov	r0, r4
   33854:	str	r9, [sp]
   33858:	bl	1bde4 <ReadCompressedInt16Data>
   3385c:	b	338fc <Mat_VarReadNumeric5+0x438>
   33860:	ldr	r0, [r5, #52]	; 0x34
   33864:	mov	r2, r8
   33868:	mov	r3, r6
   3386c:	ldr	r1, [r0, #12]
   33870:	mov	r0, r4
   33874:	str	r9, [sp]
   33878:	bl	1ee28 <ReadCompressedUInt16Data>
   3387c:	b	338fc <Mat_VarReadNumeric5+0x438>
   33880:	ldr	r0, [r5, #52]	; 0x34
   33884:	mov	r2, r8
   33888:	mov	r3, r6
   3388c:	ldr	r1, [r0, #12]
   33890:	mov	r0, r4
   33894:	str	r9, [sp]
   33898:	bl	15178 <ReadCompressedInt32Data>
   3389c:	b	338fc <Mat_VarReadNumeric5+0x438>
   338a0:	ldr	r0, [r5, #52]	; 0x34
   338a4:	mov	r2, r8
   338a8:	mov	r3, r6
   338ac:	ldr	r1, [r0, #12]
   338b0:	mov	r0, r4
   338b4:	str	r9, [sp]
   338b8:	bl	18da0 <ReadCompressedUInt32Data>
   338bc:	b	338fc <Mat_VarReadNumeric5+0x438>
   338c0:	ldr	r0, [r5, #52]	; 0x34
   338c4:	mov	r2, r8
   338c8:	mov	r3, r6
   338cc:	ldr	r1, [r0, #12]
   338d0:	mov	r0, r4
   338d4:	str	r9, [sp]
   338d8:	bl	e6f8 <ReadCompressedInt64Data>
   338dc:	b	338fc <Mat_VarReadNumeric5+0x438>
   338e0:	ldr	r0, [r5, #52]	; 0x34
   338e4:	mov	r2, r8
   338e8:	mov	r3, r6
   338ec:	ldr	r1, [r0, #12]
   338f0:	mov	r0, r4
   338f4:	str	r9, [sp]
   338f8:	bl	114c0 <ReadCompressedUInt64Data>
   338fc:	cmp	r7, #0
   33900:	addne	r0, r0, #4
   33904:	asr	r1, r0, #31
   33908:	add	r1, r0, r1, lsr #29
   3390c:	bic	r1, r1, #7
   33910:	subs	r0, r0, r1
   33914:	beq	3392c <Mat_VarReadNumeric5+0x468>
   33918:	ldr	r1, [r5, #52]	; 0x34
   3391c:	rsb	r2, r0, #8
   33920:	mov	r0, r4
   33924:	ldr	r1, [r1, #12]
   33928:	bl	256c <InflateSkip>
   3392c:	sub	sp, fp, #24
   33930:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033934 <Mat_VarReadData5>:
   33934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33938:	add	fp, sp, #28
   3393c:	sub	sp, sp, #92	; 0x5c
   33940:	mov	r4, r1
   33944:	ldr	r1, [r1, #52]	; 0x34
   33948:	mov	r8, r0
   3394c:	ldr	r0, [r0]
   33950:	str	r2, [sp, #24]
   33954:	mov	r2, #0
   33958:	mov	r9, r3
   3395c:	mov	r6, #0
   33960:	ldr	r1, [r1]
   33964:	bl	1a2c <fseek@plt>
   33968:	ldr	r0, [r4, #48]	; 0x30
   3396c:	ldr	sl, [fp, #12]
   33970:	ldr	r7, [fp, #8]
   33974:	cmp	r0, #1
   33978:	beq	339f4 <Mat_VarReadData5+0xc0>
   3397c:	cmp	r0, #0
   33980:	bne	33b78 <Mat_VarReadData5+0x244>
   33984:	ldr	r3, [r8]
   33988:	sub	r5, fp, #36	; 0x24
   3398c:	mov	r1, #4
   33990:	mov	r2, #2
   33994:	mov	r0, r5
   33998:	bl	18b8 <fread@plt>
   3399c:	ldr	r0, [r8, #20]
   339a0:	cmp	r0, #0
   339a4:	beq	339b8 <Mat_VarReadData5+0x84>
   339a8:	mov	r0, r5
   339ac:	bl	1bf8 <Mat_int32Swap>
   339b0:	add	r0, r5, #4
   339b4:	bl	1bf8 <Mat_int32Swap>
   339b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   339bc:	uxtb	r1, r0
   339c0:	cmp	r1, #25
   339c4:	movcs	r1, #0
   339c8:	cmp	r0, #65536	; 0x10000
   339cc:	str	r1, [r4, #8]
   339d0:	bcc	33b70 <Mat_VarReadData5+0x23c>
   339d4:	ldr	r0, [r8]
   339d8:	mvn	r1, #3
   339dc:	mov	r2, #1
   339e0:	bl	1a2c <fseek@plt>
   339e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   339e8:	mov	r1, #4
   339ec:	add	r6, r1, r0, asr #16
   339f0:	b	33b78 <Mat_VarReadData5+0x244>
   339f4:	ldr	r0, [r4, #52]	; 0x34
   339f8:	ldr	r6, [r0, #16]
   339fc:	cmp	r6, #0
   33a00:	beq	33a84 <Mat_VarReadData5+0x150>
   33a04:	ldr	r0, [r4, #20]
   33a08:	cmp	r0, #0
   33a0c:	beq	33abc <Mat_VarReadData5+0x188>
   33a10:	ldr	r0, [sp, #24]
   33a14:	ldr	r5, [r4, #32]
   33a18:	ldr	r3, [r4, #8]
   33a1c:	ldr	r2, [r4, #16]
   33a20:	ldm	r4, {ip, lr}
   33a24:	ldr	r1, [r0]
   33a28:	ldr	r0, [r6]
   33a2c:	stm	sp, {r5, r9}
   33a30:	add	r5, sp, #8
   33a34:	stm	r5, {r7, sl, lr}
   33a38:	str	ip, [sp, #20]
   33a3c:	bl	3415c <GetDataSlab>
   33a40:	mov	r5, r0
   33a44:	cmp	r0, #0
   33a48:	bne	33f20 <Mat_VarReadData5+0x5ec>
   33a4c:	ldr	r0, [sp, #24]
   33a50:	mov	ip, r7
   33a54:	ldr	r7, [r4, #32]
   33a58:	ldr	r5, [r4, #4]
   33a5c:	ldr	r3, [r4, #8]
   33a60:	ldr	r2, [r4, #16]
   33a64:	ldr	r1, [r0, #4]
   33a68:	ldr	r0, [r6, #4]
   33a6c:	ldr	r6, [r4]
   33a70:	stm	sp, {r7, r9, ip}
   33a74:	str	sl, [sp, #12]
   33a78:	str	r5, [sp, #16]
   33a7c:	str	r6, [sp, #20]
   33a80:	b	33ae8 <Mat_VarReadData5+0x1b4>
   33a84:	ldr	r1, [r0, #12]
   33a88:	add	r0, sp, #28
   33a8c:	bl	1948 <inflateCopy@plt>
   33a90:	cmp	r0, #0
   33a94:	beq	33afc <Mat_VarReadData5+0x1c8>
   33a98:	bl	1888 <zError@plt>
   33a9c:	mov	r1, r0
   33aa0:	ldr	r0, [pc, #1704]	; 34150 <Mat_VarReadData5+0x81c>
   33aa4:	add	r0, pc, r0
   33aa8:	bl	19b4 <Mat_Critical@plt>
   33aac:	mvn	r5, #0
   33ab0:	mov	r0, r5
   33ab4:	sub	sp, fp, #28
   33ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33abc:	ldr	r0, [r4, #32]
   33ac0:	ldm	r4, {r1, r5}
   33ac4:	ldr	r3, [r4, #8]
   33ac8:	ldr	r2, [r4, #16]
   33acc:	stm	sp, {r0, r9}
   33ad0:	str	r1, [sp, #20]
   33ad4:	ldr	r1, [sp, #24]
   33ad8:	mov	r0, r6
   33adc:	str	r7, [sp, #8]
   33ae0:	str	sl, [sp, #12]
   33ae4:	str	r5, [sp, #16]
   33ae8:	bl	3415c <GetDataSlab>
   33aec:	mov	r5, r0
   33af0:	mov	r0, r5
   33af4:	sub	sp, fp, #28
   33af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33afc:	sub	r5, fp, #36	; 0x24
   33b00:	mov	r6, #0
   33b04:	add	r1, sp, #28
   33b08:	mov	r0, r8
   33b0c:	mov	r2, r5
   33b10:	str	r6, [sp, #32]
   33b14:	bl	336c <InflateDataType>
   33b18:	ldr	r0, [r8, #20]
   33b1c:	cmp	r0, #0
   33b20:	beq	33b2c <Mat_VarReadData5+0x1f8>
   33b24:	sub	r0, fp, #36	; 0x24
   33b28:	bl	1bf8 <Mat_int32Swap>
   33b2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33b30:	uxtb	r1, r0
   33b34:	cmp	r1, #25
   33b38:	movcs	r1, r6
   33b3c:	cmp	r6, r0, lsr #16
   33b40:	str	r1, [r4, #8]
   33b44:	bne	339e8 <Mat_VarReadData5+0xb4>
   33b48:	add	r5, r5, #4
   33b4c:	add	r1, sp, #28
   33b50:	mov	r0, r8
   33b54:	mov	r2, r5
   33b58:	bl	336c <InflateDataType>
   33b5c:	ldr	r0, [r8, #20]
   33b60:	cmp	r0, #0
   33b64:	beq	33b70 <Mat_VarReadData5+0x23c>
   33b68:	mov	r0, r5
   33b6c:	bl	1bf8 <Mat_int32Swap>
   33b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33b74:	add	r6, r0, #8
   33b78:	asr	r0, r6, #31
   33b7c:	add	r0, r6, r0, lsr #29
   33b80:	bic	r0, r0, #7
   33b84:	subs	r1, r6, r0
   33b88:	addne	r6, r0, #8
   33b8c:	ldr	r0, [r4, #4]
   33b90:	cmp	r0, #2
   33b94:	bne	33cdc <Mat_VarReadData5+0x3a8>
   33b98:	ldr	r2, [sl]
   33b9c:	ldr	r0, [r9]
   33ba0:	ldr	r1, [r7]
   33ba4:	mov	r5, #1
   33ba8:	sub	r2, r2, #1
   33bac:	mla	r0, r2, r1, r0
   33bb0:	add	r1, r0, #1
   33bb4:	ldr	r0, [r4, #32]
   33bb8:	ldr	r2, [r0]
   33bbc:	cmp	r1, r2
   33bc0:	bhi	33f20 <Mat_VarReadData5+0x5ec>
   33bc4:	ldr	r3, [sl, #4]
   33bc8:	ldr	r1, [r9, #4]
   33bcc:	ldr	r2, [r7, #4]
   33bd0:	sub	r3, r3, #1
   33bd4:	mla	r1, r3, r2, r1
   33bd8:	ldr	r2, [r0, #4]
   33bdc:	add	r1, r1, #1
   33be0:	cmp	r1, r2
   33be4:	bhi	33f20 <Mat_VarReadData5+0x5ec>
   33be8:	ldr	r1, [r4, #48]	; 0x30
   33bec:	cmp	r1, #1
   33bf0:	beq	33f84 <Mat_VarReadData5+0x650>
   33bf4:	cmp	r1, #0
   33bf8:	bne	34128 <Mat_VarReadData5+0x7f4>
   33bfc:	ldr	r1, [r4, #20]
   33c00:	cmp	r1, #0
   33c04:	beq	340c8 <Mat_VarReadData5+0x794>
   33c08:	ldr	r1, [sp, #24]
   33c0c:	ldr	r3, [r4, #8]
   33c10:	ldr	r2, [r4, #16]
   33c14:	ldr	r1, [r1]
   33c18:	stm	sp, {r0, r9}
   33c1c:	mov	r0, r8
   33c20:	str	r7, [sp, #8]
   33c24:	str	sl, [sp, #12]
   33c28:	bl	2e804 <ReadDataSlab2>
   33c2c:	ldr	r0, [r4, #52]	; 0x34
   33c30:	mov	r2, #0
   33c34:	mov	r5, #0
   33c38:	ldr	r0, [r0]
   33c3c:	add	r1, r0, r6
   33c40:	ldr	r0, [r8]
   33c44:	bl	1a2c <fseek@plt>
   33c48:	ldr	r3, [r8]
   33c4c:	sub	r6, fp, #36	; 0x24
   33c50:	mov	r1, #4
   33c54:	mov	r2, #2
   33c58:	mov	r0, r6
   33c5c:	bl	18b8 <fread@plt>
   33c60:	ldr	r0, [r8, #20]
   33c64:	cmp	r0, #0
   33c68:	beq	33c7c <Mat_VarReadData5+0x348>
   33c6c:	mov	r0, r6
   33c70:	bl	1bf8 <Mat_int32Swap>
   33c74:	add	r0, r6, #4
   33c78:	bl	1bf8 <Mat_int32Swap>
   33c7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33c80:	uxtb	r1, r0
   33c84:	cmp	r1, #25
   33c88:	movcc	r5, r1
   33c8c:	cmp	r0, #65536	; 0x10000
   33c90:	str	r5, [r4, #8]
   33c94:	bcc	33cac <Mat_VarReadData5+0x378>
   33c98:	ldr	r0, [r8]
   33c9c:	mvn	r1, #3
   33ca0:	mov	r2, #1
   33ca4:	bl	1a2c <fseek@plt>
   33ca8:	ldr	r5, [r4, #8]
   33cac:	ldr	r0, [sp, #24]
   33cb0:	ldr	r2, [r4, #16]
   33cb4:	mov	r3, r5
   33cb8:	ldr	r1, [r0, #4]
   33cbc:	ldr	r0, [r4, #32]
   33cc0:	stm	sp, {r0, r9}
   33cc4:	ldr	r0, [fp, #8]
   33cc8:	str	sl, [sp, #12]
   33ccc:	str	r0, [sp, #8]
   33cd0:	mov	r0, r8
   33cd4:	bl	2e804 <ReadDataSlab2>
   33cd8:	b	34128 <Mat_VarReadData5+0x7f4>
   33cdc:	ldr	r1, [r4, #48]	; 0x30
   33ce0:	cmp	r1, #1
   33ce4:	beq	33dd8 <Mat_VarReadData5+0x4a4>
   33ce8:	cmp	r1, #0
   33cec:	bne	34128 <Mat_VarReadData5+0x7f4>
   33cf0:	ldr	r1, [r4, #20]
   33cf4:	cmp	r1, #0
   33cf8:	beq	33f2c <Mat_VarReadData5+0x5f8>
   33cfc:	ldr	r1, [sp, #24]
   33d00:	ldr	r3, [r4, #8]
   33d04:	ldr	r2, [r4, #16]
   33d08:	ldr	r5, [r4, #32]
   33d0c:	ldr	r1, [r1]
   33d10:	stm	sp, {r0, r5, r9}
   33d14:	mov	r0, r8
   33d18:	str	r7, [sp, #12]
   33d1c:	str	sl, [sp, #16]
   33d20:	bl	25508 <ReadDataSlabN>
   33d24:	ldr	r0, [r4, #52]	; 0x34
   33d28:	mov	r2, #0
   33d2c:	mov	r5, #0
   33d30:	ldr	r0, [r0]
   33d34:	add	r1, r0, r6
   33d38:	ldr	r0, [r8]
   33d3c:	bl	1a2c <fseek@plt>
   33d40:	ldr	r3, [r8]
   33d44:	sub	r6, fp, #36	; 0x24
   33d48:	mov	r1, #4
   33d4c:	mov	r2, #2
   33d50:	mov	r0, r6
   33d54:	bl	18b8 <fread@plt>
   33d58:	ldr	r0, [r8, #20]
   33d5c:	cmp	r0, #0
   33d60:	beq	33d74 <Mat_VarReadData5+0x440>
   33d64:	mov	r0, r6
   33d68:	bl	1bf8 <Mat_int32Swap>
   33d6c:	add	r0, r6, #4
   33d70:	bl	1bf8 <Mat_int32Swap>
   33d74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33d78:	uxtb	r1, r0
   33d7c:	cmp	r1, #25
   33d80:	movcc	r5, r1
   33d84:	cmp	r0, #65536	; 0x10000
   33d88:	str	r5, [r4, #8]
   33d8c:	bcc	33da4 <Mat_VarReadData5+0x470>
   33d90:	ldr	r0, [r8]
   33d94:	mvn	r1, #3
   33d98:	mov	r2, #1
   33d9c:	bl	1a2c <fseek@plt>
   33da0:	ldr	r5, [r4, #8]
   33da4:	ldr	r0, [sp, #24]
   33da8:	ldr	r2, [r4, #16]
   33dac:	ldr	r3, [r4, #32]
   33db0:	ldr	r1, [r0, #4]
   33db4:	ldr	r0, [r4, #4]
   33db8:	stm	sp, {r0, r3, r9}
   33dbc:	ldr	r0, [fp, #8]
   33dc0:	mov	r3, r5
   33dc4:	str	sl, [sp, #16]
   33dc8:	str	r0, [sp, #12]
   33dcc:	mov	r0, r8
   33dd0:	bl	25508 <ReadDataSlabN>
   33dd4:	b	34128 <Mat_VarReadData5+0x7f4>
   33dd8:	ldr	r1, [r4, #20]
   33ddc:	cmp	r1, #0
   33de0:	beq	33f54 <Mat_VarReadData5+0x620>
   33de4:	ldr	r1, [sp, #24]
   33de8:	ldr	r3, [r4, #16]
   33dec:	ldr	r5, [r4, #32]
   33df0:	ldr	r2, [r1]
   33df4:	ldr	r1, [r4, #8]
   33df8:	str	r1, [sp]
   33dfc:	stmib	sp, {r0, r5, r9}
   33e00:	add	r5, sp, #28
   33e04:	mov	r0, r8
   33e08:	str	r7, [sp, #16]
   33e0c:	str	sl, [sp, #20]
   33e10:	mov	r1, r5
   33e14:	bl	29a44 <ReadCompressedDataSlabN>
   33e18:	ldr	r1, [r4, #52]	; 0x34
   33e1c:	ldr	r0, [r8]
   33e20:	mov	r2, #0
   33e24:	mov	r7, #0
   33e28:	ldr	r1, [r1]
   33e2c:	bl	1a2c <fseek@plt>
   33e30:	mov	r0, r5
   33e34:	bl	193c <inflateEnd@plt>
   33e38:	ldr	r0, [r4, #52]	; 0x34
   33e3c:	ldr	r1, [r0, #12]
   33e40:	mov	r0, r5
   33e44:	bl	1948 <inflateCopy@plt>
   33e48:	mov	r5, r0
   33e4c:	cmp	r0, #0
   33e50:	beq	33e6c <Mat_VarReadData5+0x538>
   33e54:	mov	r0, r5
   33e58:	bl	1888 <zError@plt>
   33e5c:	mov	r1, r0
   33e60:	ldr	r0, [pc, #752]	; 34158 <Mat_VarReadData5+0x824>
   33e64:	add	r0, pc, r0
   33e68:	bl	19b4 <Mat_Critical@plt>
   33e6c:	add	sl, sp, #28
   33e70:	mov	r0, r8
   33e74:	mov	r2, r6
   33e78:	mov	r1, sl
   33e7c:	bl	256c <InflateSkip>
   33e80:	sub	r2, fp, #36	; 0x24
   33e84:	mov	r0, r8
   33e88:	mov	r1, sl
   33e8c:	str	r7, [sp, #32]
   33e90:	bl	336c <InflateDataType>
   33e94:	ldr	r0, [r8, #20]
   33e98:	cmp	r0, #0
   33e9c:	beq	33ea8 <Mat_VarReadData5+0x574>
   33ea0:	sub	r0, fp, #36	; 0x24
   33ea4:	bl	1bf8 <Mat_int32Swap>
   33ea8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33eac:	ldr	sl, [fp, #12]
   33eb0:	mov	r2, #0
   33eb4:	uxtb	r0, r1
   33eb8:	cmp	r0, #25
   33ebc:	movcs	r0, r2
   33ec0:	cmp	r2, r1, lsr #16
   33ec4:	str	r0, [r4, #8]
   33ec8:	bne	33ee0 <Mat_VarReadData5+0x5ac>
   33ecc:	add	r1, sp, #28
   33ed0:	mov	r0, r8
   33ed4:	mov	r2, #4
   33ed8:	bl	256c <InflateSkip>
   33edc:	ldr	r0, [r4, #8]
   33ee0:	ldr	r1, [sp, #24]
   33ee4:	ldr	r3, [r4, #16]
   33ee8:	ldr	r6, [r4, #32]
   33eec:	ldr	r2, [r1, #4]
   33ef0:	ldr	r1, [r4, #4]
   33ef4:	stm	sp, {r0, r1, r6, r9}
   33ef8:	ldr	r0, [fp, #8]
   33efc:	add	r1, sp, #28
   33f00:	str	sl, [sp, #20]
   33f04:	str	r0, [sp, #16]
   33f08:	mov	r0, r8
   33f0c:	bl	29a44 <ReadCompressedDataSlabN>
   33f10:	add	r0, sp, #28
   33f14:	bl	193c <inflateEnd@plt>
   33f18:	cmp	r5, #0
   33f1c:	beq	34128 <Mat_VarReadData5+0x7f4>
   33f20:	mov	r0, r5
   33f24:	sub	sp, fp, #28
   33f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f2c:	ldr	r3, [r4, #8]
   33f30:	ldr	r2, [r4, #16]
   33f34:	ldr	r1, [r4, #32]
   33f38:	stm	sp, {r0, r1, r9}
   33f3c:	ldr	r1, [sp, #24]
   33f40:	mov	r0, r8
   33f44:	str	r7, [sp, #12]
   33f48:	str	sl, [sp, #16]
   33f4c:	bl	25508 <ReadDataSlabN>
   33f50:	b	34128 <Mat_VarReadData5+0x7f4>
   33f54:	ldr	r1, [r4, #8]
   33f58:	ldr	r3, [r4, #16]
   33f5c:	ldr	r2, [r4, #32]
   33f60:	str	r1, [sp]
   33f64:	stmib	sp, {r0, r2, r9}
   33f68:	ldr	r2, [sp, #24]
   33f6c:	add	r1, sp, #28
   33f70:	mov	r0, r8
   33f74:	str	r7, [sp, #16]
   33f78:	str	sl, [sp, #20]
   33f7c:	bl	29a44 <ReadCompressedDataSlabN>
   33f80:	b	34114 <Mat_VarReadData5+0x7e0>
   33f84:	ldr	r1, [r4, #20]
   33f88:	cmp	r1, #0
   33f8c:	beq	340ec <Mat_VarReadData5+0x7b8>
   33f90:	ldr	r1, [sp, #24]
   33f94:	ldr	r3, [r4, #16]
   33f98:	add	r5, sp, #28
   33f9c:	ldr	r2, [r1]
   33fa0:	ldr	r1, [r4, #8]
   33fa4:	str	r1, [sp]
   33fa8:	stmib	sp, {r0, r9}
   33fac:	mov	r0, r8
   33fb0:	mov	r1, r5
   33fb4:	str	r7, [sp, #12]
   33fb8:	str	sl, [sp, #16]
   33fbc:	bl	2fe50 <ReadCompressedDataSlab2>
   33fc0:	ldr	r1, [r4, #52]	; 0x34
   33fc4:	ldr	r0, [r8]
   33fc8:	mov	r2, #0
   33fcc:	mov	r7, #0
   33fd0:	ldr	r1, [r1]
   33fd4:	bl	1a2c <fseek@plt>
   33fd8:	mov	r0, r5
   33fdc:	bl	193c <inflateEnd@plt>
   33fe0:	ldr	r0, [r4, #52]	; 0x34
   33fe4:	ldr	r1, [r0, #12]
   33fe8:	mov	r0, r5
   33fec:	bl	1948 <inflateCopy@plt>
   33ff0:	mov	r5, r0
   33ff4:	cmp	r0, #0
   33ff8:	beq	34014 <Mat_VarReadData5+0x6e0>
   33ffc:	mov	r0, r5
   34000:	bl	1888 <zError@plt>
   34004:	mov	r1, r0
   34008:	ldr	r0, [pc, #324]	; 34154 <Mat_VarReadData5+0x820>
   3400c:	add	r0, pc, r0
   34010:	bl	19b4 <Mat_Critical@plt>
   34014:	add	sl, sp, #28
   34018:	mov	r0, r8
   3401c:	mov	r2, r6
   34020:	mov	r1, sl
   34024:	bl	256c <InflateSkip>
   34028:	sub	r2, fp, #36	; 0x24
   3402c:	mov	r0, r8
   34030:	mov	r1, sl
   34034:	str	r7, [sp, #32]
   34038:	bl	336c <InflateDataType>
   3403c:	ldr	r0, [r8, #20]
   34040:	cmp	r0, #0
   34044:	beq	34050 <Mat_VarReadData5+0x71c>
   34048:	sub	r0, fp, #36	; 0x24
   3404c:	bl	1bf8 <Mat_int32Swap>
   34050:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34054:	ldr	r6, [fp, #12]
   34058:	mov	r2, #0
   3405c:	uxtb	r0, r1
   34060:	cmp	r0, #25
   34064:	movcs	r0, r2
   34068:	cmp	r2, r1, lsr #16
   3406c:	str	r0, [r4, #8]
   34070:	bne	34088 <Mat_VarReadData5+0x754>
   34074:	add	r1, sp, #28
   34078:	mov	r0, r8
   3407c:	mov	r2, #4
   34080:	bl	256c <InflateSkip>
   34084:	ldr	r0, [r4, #8]
   34088:	ldr	r1, [sp, #24]
   3408c:	ldr	r3, [r4, #16]
   34090:	ldr	r2, [r1, #4]
   34094:	ldr	r1, [r4, #32]
   34098:	stm	sp, {r0, r1, r9}
   3409c:	ldr	r0, [fp, #8]
   340a0:	add	r1, sp, #28
   340a4:	str	r6, [sp, #16]
   340a8:	str	r0, [sp, #12]
   340ac:	mov	r0, r8
   340b0:	bl	2fe50 <ReadCompressedDataSlab2>
   340b4:	add	r0, sp, #28
   340b8:	bl	193c <inflateEnd@plt>
   340bc:	cmp	r5, #0
   340c0:	bne	33f20 <Mat_VarReadData5+0x5ec>
   340c4:	b	34128 <Mat_VarReadData5+0x7f4>
   340c8:	ldr	r3, [r4, #8]
   340cc:	ldr	r2, [r4, #16]
   340d0:	ldr	r1, [sp, #24]
   340d4:	stm	sp, {r0, r9}
   340d8:	mov	r0, r8
   340dc:	str	r7, [sp, #8]
   340e0:	str	sl, [sp, #12]
   340e4:	bl	2e804 <ReadDataSlab2>
   340e8:	b	34128 <Mat_VarReadData5+0x7f4>
   340ec:	ldr	r1, [r4, #8]
   340f0:	ldr	r3, [r4, #16]
   340f4:	ldr	r2, [sp, #24]
   340f8:	str	r1, [sp]
   340fc:	stmib	sp, {r0, r9}
   34100:	add	r1, sp, #28
   34104:	mov	r0, r8
   34108:	str	r7, [sp, #12]
   3410c:	str	sl, [sp, #16]
   34110:	bl	2fe50 <ReadCompressedDataSlab2>
   34114:	mov	r5, #0
   34118:	add	r0, sp, #28
   3411c:	bl	193c <inflateEnd@plt>
   34120:	cmp	r5, #0
   34124:	bne	33f20 <Mat_VarReadData5+0x5ec>
   34128:	ldr	r0, [r4, #16]
   3412c:	bl	6bdec <ClassType2DataType>
   34130:	str	r0, [r4, #8]
   34134:	ldr	r0, [r4, #16]
   34138:	bl	1a08 <Mat_SizeOfClass@plt>
   3413c:	mov	r5, #0
   34140:	str	r0, [r4, #12]
   34144:	mov	r0, r5
   34148:	sub	sp, fp, #28
   3414c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34150:	.word	0x0003e3f7
   34154:	.word	0x0003de8f
   34158:	.word	0x0003e037

0003415c <GetDataSlab>:
   3415c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34160:	add	fp, sp, #28
   34164:	sub	sp, sp, #4
   34168:	vpush	{d8-d9}
   3416c:	sub	sp, sp, #1008	; 0x3f0
   34170:	cmp	r2, #6
   34174:	mov	r8, r1
   34178:	mov	r1, r0
   3417c:	cmpeq	r3, #9
   34180:	beq	341f4 <GetDataSlab+0x98>
   34184:	cmp	r2, #7
   34188:	cmpeq	r3, #7
   3418c:	beq	341f4 <GetDataSlab+0x98>
   34190:	cmp	r2, #10
   34194:	cmpeq	r3, #3
   34198:	beq	341f4 <GetDataSlab+0x98>
   3419c:	cmp	r2, #12
   341a0:	cmpeq	r3, #5
   341a4:	beq	341f4 <GetDataSlab+0x98>
   341a8:	cmp	r2, #14
   341ac:	cmpeq	r3, #12
   341b0:	beq	341f4 <GetDataSlab+0x98>
   341b4:	cmp	r2, #8
   341b8:	cmpeq	r3, #1
   341bc:	beq	341f4 <GetDataSlab+0x98>
   341c0:	cmp	r2, #11
   341c4:	cmpeq	r3, #4
   341c8:	beq	341f4 <GetDataSlab+0x98>
   341cc:	cmp	r2, #13
   341d0:	cmpeq	r3, #6
   341d4:	beq	341f4 <GetDataSlab+0x98>
   341d8:	cmp	r2, #15
   341dc:	cmpeq	r3, #13
   341e0:	beq	341f4 <GetDataSlab+0x98>
   341e4:	cmp	r2, #9
   341e8:	mov	ip, #0
   341ec:	cmpeq	r3, #2
   341f0:	bne	341f8 <GetDataSlab+0x9c>
   341f4:	mov	ip, #1
   341f8:	ldr	r0, [fp, #24]
   341fc:	str	r3, [sp, #84]	; 0x54
   34200:	ldr	r3, [fp, #12]
   34204:	ldr	sl, [fp, #16]
   34208:	ldr	r5, [fp, #8]
   3420c:	str	r8, [sp, #88]	; 0x58
   34210:	str	r1, [sp, #80]	; 0x50
   34214:	cmp	r0, #2
   34218:	str	r3, [sp, #92]	; 0x5c
   3421c:	bne	34424 <GetDataSlab+0x2c8>
   34220:	ldr	r9, [fp, #20]
   34224:	mov	r7, sl
   34228:	ldr	r4, [r3]
   3422c:	mov	sl, r8
   34230:	ldr	r6, [r5]
   34234:	ldr	r1, [r7]
   34238:	ldr	r0, [r9]
   3423c:	str	r6, [sp, #64]	; 0x40
   34240:	str	r1, [sp, #68]	; 0x44
   34244:	mov	r8, r0
   34248:	sub	r0, r0, #1
   3424c:	mla	r0, r0, r1, r4
   34250:	add	r1, r0, #1
   34254:	mov	r0, #1
   34258:	cmp	r1, r6
   3425c:	bhi	5b6a4 <GetDataSlab+0x27548>
   34260:	ldr	r1, [r9, #4]!
   34264:	str	r4, [sp, #60]	; 0x3c
   34268:	ldr	lr, [r3, #4]
   3426c:	ldr	r4, [r7, #4]!
   34270:	sub	r6, r1, #1
   34274:	str	r4, [sp, #72]	; 0x48
   34278:	str	lr, [sp, #56]	; 0x38
   3427c:	mla	r6, r6, r4, lr
   34280:	ldr	r4, [r5, #4]
   34284:	add	r6, r6, #1
   34288:	cmp	r6, r4
   3428c:	bhi	5b6a4 <GetDataSlab+0x27548>
   34290:	ldr	r4, [sp, #68]	; 0x44
   34294:	mov	lr, r5
   34298:	mov	r5, r8
   3429c:	cmp	r4, #1
   342a0:	ldreq	r4, [sp, #64]	; 0x40
   342a4:	cmpeq	r5, r4
   342a8:	beq	35034 <GetDataSlab+0xed8>
   342ac:	mov	r3, r9
   342b0:	ldr	r8, [sp, #64]	; 0x40
   342b4:	ldr	r9, [fp, #20]
   342b8:	ldr	sl, [fp, #16]
   342bc:	sub	r2, r2, #6
   342c0:	str	r1, [sp, #76]	; 0x4c
   342c4:	cmp	r2, #9
   342c8:	bhi	5b6a4 <GetDataSlab+0x27548>
   342cc:	add	r0, pc, #8
   342d0:	mov	ip, r7
   342d4:	ldr	r2, [r0, r2, lsl #2]
   342d8:	add	pc, r0, r2
   342dc:	.word	0x00000028
   342e0:	.word	0x0000183c
   342e4:	.word	0x00001b68
   342e8:	.word	0x00001c4c
   342ec:	.word	0x00001d30
   342f0:	.word	0x00002050
   342f4:	.word	0x00002370
   342f8:	.word	0x00002460
   342fc:	.word	0x00002550
   34300:	.word	0x00002890
   34304:	ldr	r7, [sp, #84]	; 0x54
   34308:	mov	r0, #1
   3430c:	sub	r1, r7, #1
   34310:	cmp	r1, #11
   34314:	bhi	63af4 <GetDataSlab+0x2f998>
   34318:	add	r2, pc, #8
   3431c:	ldr	r3, [sp, #76]	; 0x4c
   34320:	ldr	r1, [r2, r1, lsl #2]
   34324:	add	pc, r2, r1
   34328:	.word	0x00000030
   3432c:	.word	0x00027528
   34330:	.word	0x00027830
   34334:	.word	0x00027ac4
   34338:	.word	0x00027d58
   3433c:	.word	0x00027f9c
   34340:	.word	0x000281e0
   34344:	.word	0x0002f7cc
   34348:	.word	0x000283fc
   3434c:	.word	0x0002f7cc
   34350:	.word	0x0002f7cc
   34354:	.word	0x00028658
   34358:	cmp	r3, #1
   3435c:	blt	35058 <GetDataSlab+0xefc>
   34360:	cmp	r5, #1
   34364:	mov	r0, #0
   34368:	blt	5b6a4 <GetDataSlab+0x27548>
   3436c:	ldr	r0, [sp, #72]	; 0x48
   34370:	ldr	r2, [sp, #60]	; 0x3c
   34374:	ldr	r3, [sp, #56]	; 0x38
   34378:	cmp	r5, #1
   3437c:	mov	r9, #32
   34380:	mul	r0, r0, r8
   34384:	mla	r1, r3, r8, r2
   34388:	str	r0, [sp, #72]	; 0x48
   3438c:	ldr	r0, [sp, #80]	; 0x50
   34390:	str	r1, [sp, #52]	; 0x34
   34394:	add	r0, r0, r1
   34398:	mov	r1, #1
   3439c:	str	r0, [sp, #92]	; 0x5c
   343a0:	sub	r0, r5, #2
   343a4:	add	r1, r1, r0, lsr #1
   343a8:	lsr	r0, r0, #1
   343ac:	str	r0, [sp, #40]	; 0x28
   343b0:	and	r7, r1, #1
   343b4:	sub	r1, r1, r7
   343b8:	str	r7, [sp, #48]	; 0x30
   343bc:	str	r1, [sp, #36]	; 0x24
   343c0:	add	r1, r5, r2
   343c4:	mov	r2, #0
   343c8:	mla	r1, r3, r8, r1
   343cc:	str	r2, [sp, #84]	; 0x54
   343d0:	mov	r2, #0
   343d4:	movwhi	r2, #1
   343d8:	str	r1, [sp, #56]	; 0x38
   343dc:	ldr	r1, [sp, #68]	; 0x44
   343e0:	mov	r3, r1
   343e4:	sub	r1, r1, #1
   343e8:	clz	r1, r1
   343ec:	lsl	r4, r3, #1
   343f0:	lsr	r1, r1, #5
   343f4:	and	r1, r2, r1
   343f8:	str	r1, [sp, #64]	; 0x40
   343fc:	lsl	r1, r3, #2
   34400:	str	r1, [sp, #32]
   34404:	and	r1, r5, #1
   34408:	str	r1, [sp, #60]	; 0x3c
   3440c:	bic	r1, r5, #1
   34410:	str	r1, [sp, #44]	; 0x2c
   34414:	ldr	r0, [sp, #64]	; 0x40
   34418:	cmp	r0, #0
   3441c:	bne	35900 <GetDataSlab+0x17a4>
   34420:	b	35994 <GetDataSlab+0x1838>
   34424:	vmov.i32	q8, #0	; 0x00000000
   34428:	sub	r7, fp, #96	; 0x60
   3442c:	mov	r0, #36	; 0x24
   34430:	mov	r3, #0
   34434:	sub	ip, fp, #176	; 0xb0
   34438:	mov	r1, r7
   3443c:	str	r3, [fp, #-64]	; 0xffffffc0
   34440:	str	r3, [fp, #-104]	; 0xffffff98
   34444:	str	r3, [fp, #-144]	; 0xffffff70
   34448:	vst1.64	{d16-d17}, [r1], r0
   3444c:	str	r3, [r1]
   34450:	add	r1, r7, #16
   34454:	sub	r7, fp, #136	; 0x88
   34458:	vst1.64	{d16-d17}, [r1]
   3445c:	add	r1, r7, #16
   34460:	vst1.64	{d16-d17}, [r1]
   34464:	mov	r1, r7
   34468:	vst1.64	{d16-d17}, [r1], r0
   3446c:	str	r3, [r1]
   34470:	add	r1, ip, #16
   34474:	vst1.64	{d16-d17}, [r1]
   34478:	mov	r1, ip
   3447c:	vst1.64	{d16-d17}, [r1], r0
   34480:	sub	r0, r2, #6
   34484:	cmp	r0, #9
   34488:	str	r3, [r1]
   3448c:	bhi	34584 <GetDataSlab+0x428>
   34490:	add	r1, pc, #4
   34494:	ldr	r0, [r1, r0, lsl #2]
   34498:	add	pc, r1, r0
   3449c:	.word	0x00000028
   344a0:	.word	0x000000f0
   344a4:	.word	0x000002e8
   344a8:	.word	0x000003b4
   344ac:	.word	0x00000480
   344b0:	.word	0x00000678
   344b4:	.word	0x00000870
   344b8:	.word	0x0000093c
   344bc:	.word	0x00000a08
   344c0:	.word	0x00000ad0
   344c4:	ldr	r0, [sp, #84]	; 0x54
   344c8:	mov	r2, #1
   344cc:	sub	r0, r0, #1
   344d0:	cmp	r0, #11
   344d4:	bhi	4ed4c <GetDataSlab+0x1abf0>
   344d8:	add	r1, pc, #4
   344dc:	ldr	r0, [r1, r0, lsl #2]
   344e0:	add	pc, r1, r0
   344e4:	.word	0x00000030
   344e8:	.word	0x000029cc
   344ec:	.word	0x00002b64
   344f0:	.word	0x00002cfc
   344f4:	.word	0x00002e94
   344f8:	.word	0x0000304c
   344fc:	.word	0x00003204
   34500:	.word	0x0001a868
   34504:	.word	0x000033a8
   34508:	.word	0x0001a868
   3450c:	.word	0x0001a868
   34510:	.word	0x0000354c
   34514:	ldr	sl, [sl]
   34518:	mov	r7, #0
   3451c:	sub	r2, fp, #96	; 0x60
   34520:	sub	r0, sl, #1
   34524:	str	r0, [fp, #-96]	; 0xffffffa0
   34528:	ldr	r0, [fp, #8]
   3452c:	ldr	r0, [r0]
   34530:	str	r0, [sp, #44]	; 0x2c
   34534:	str	r0, [fp, #-176]	; 0xffffff50
   34538:	ldr	r0, [fp, #20]
   3453c:	ldr	r1, [r0]
   34540:	ldr	r0, [fp, #24]
   34544:	cmp	r0, #2
   34548:	str	r1, [sp, #72]	; 0x48
   3454c:	str	r1, [sp, #76]	; 0x4c
   34550:	blt	3fdc4 <GetDataSlab+0xbc68>
   34554:	ldr	r0, [fp, #8]
   34558:	ldr	r4, [sp, #44]	; 0x2c
   3455c:	mov	r6, #1
   34560:	mov	r8, #0
   34564:	mvn	r5, #15
   34568:	mov	r7, #0
   3456c:	sub	r1, r0, #4
   34570:	sub	lr, r0, #12
   34574:	ldr	r0, [sp, #72]	; 0x48
   34578:	mov	r9, r4
   3457c:	str	r0, [sp, #76]	; 0x4c
   34580:	b	350b8 <GetDataSlab+0xf5c>
   34584:	mov	r2, #1
   34588:	b	5b6a0 <GetDataSlab+0x27544>
   3458c:	ldr	r0, [sp, #84]	; 0x54
   34590:	mov	r2, #1
   34594:	sub	r0, r0, #1
   34598:	cmp	r0, #11
   3459c:	bhi	503e4 <GetDataSlab+0x1c288>
   345a0:	add	r1, pc, #4
   345a4:	ldr	r0, [r1, r0, lsl #2]
   345a8:	add	pc, r1, r0
   345ac:	.word	0x00000030
   345b0:	.word	0x00003628
   345b4:	.word	0x000037d0
   345b8:	.word	0x00003968
   345bc:	.word	0x00003b00
   345c0:	.word	0x00003c9c
   345c4:	.word	0x00003e38
   345c8:	.word	0x0001be38
   345cc:	.word	0x00003fd0
   345d0:	.word	0x0001be38
   345d4:	.word	0x0001be38
   345d8:	.word	0x00004174
   345dc:	ldr	sl, [sl]
   345e0:	mov	r3, #0
   345e4:	sub	lr, fp, #96	; 0x60
   345e8:	sub	r0, sl, #1
   345ec:	str	r0, [fp, #-96]	; 0xffffffa0
   345f0:	ldr	r0, [fp, #8]
   345f4:	ldr	r0, [r0]
   345f8:	str	r0, [sp, #40]	; 0x28
   345fc:	str	r0, [fp, #-176]	; 0xffffff50
   34600:	ldr	r0, [fp, #20]
   34604:	ldr	r1, [r0]
   34608:	ldr	r0, [fp, #24]
   3460c:	cmp	r0, #2
   34610:	str	r1, [sp, #60]	; 0x3c
   34614:	str	r1, [sp, #76]	; 0x4c
   34618:	blt	388c4 <GetDataSlab+0x4768>
   3461c:	ldr	r0, [fp, #8]
   34620:	ldr	r4, [sp, #40]	; 0x28
   34624:	mov	r2, ip
   34628:	mov	r6, #1
   3462c:	mov	r9, #0
   34630:	mvn	r5, #15
   34634:	mov	r3, #0
   34638:	mov	r1, r0
   3463c:	sub	r0, r0, #4
   34640:	mov	r8, r4
   34644:	sub	ip, r1, #12
   34648:	ldr	r1, [sp, #60]	; 0x3c
   3464c:	str	r1, [sp, #76]	; 0x4c
   34650:	b	346a0 <GetDataSlab+0x544>
   34654:	ldr	r1, [fp, #12]
   34658:	sub	r2, fp, #176	; 0xb0
   3465c:	sub	lr, fp, #96	; 0x60
   34660:	add	ip, ip, #4
   34664:	str	r7, [lr, r6, lsl #2]
   34668:	str	r4, [r2, r6, lsl #2]
   3466c:	ldr	r7, [sp, #76]	; 0x4c
   34670:	ldr	r1, [r1, r6, lsl #2]
   34674:	mla	r3, r1, r8, r3
   34678:	ldr	r1, [fp, #20]
   3467c:	mov	r8, r4
   34680:	ldr	r4, [sp, #84]	; 0x54
   34684:	ldr	r1, [r1, r6, lsl #2]
   34688:	add	r6, r6, #1
   3468c:	mul	r7, r1, r7
   34690:	ldr	r1, [fp, #24]
   34694:	str	r7, [sp, #76]	; 0x4c
   34698:	cmp	r6, r1
   3469c:	beq	388c4 <GetDataSlab+0x4768>
   346a0:	ldr	r1, [fp, #16]
   346a4:	add	r9, r9, #1
   346a8:	cmp	r9, #4
   346ac:	ldr	r1, [r1, r6, lsl #2]
   346b0:	str	r4, [r2, r6, lsl #2]
   346b4:	sub	r7, r1, #1
   346b8:	ldr	r1, [fp, #8]
   346bc:	str	r7, [lr, r6, lsl #2]
   346c0:	ldr	r2, [r1, r6, lsl #2]
   346c4:	str	r2, [sp, #84]	; 0x54
   346c8:	bcs	346d8 <GetDataSlab+0x57c>
   346cc:	mov	r1, r2
   346d0:	mov	r2, r6
   346d4:	b	3476c <GetDataSlab+0x610>
   346d8:	vmov.i32	q9, #1	; 0x00000001
   346dc:	vmov.i32	q10, #1	; 0x00000001
   346e0:	vmov.32	d23[1], r2
   346e4:	mov	r1, r9
   346e8:	vmov.i32	q8, #1	; 0x00000001
   346ec:	bic	r9, r6, #3
   346f0:	str	r1, [sp, #72]	; 0x48
   346f4:	bic	r1, r1, #3
   346f8:	mov	lr, r1
   346fc:	sub	r2, r6, r1
   34700:	mov	r1, ip
   34704:	vmov.32	d18[0], r4
   34708:	vmov.32	d20[0], r7
   3470c:	vorr	d16, d18, d18
   34710:	vmov.i32	q9, #1	; 0x00000001
   34714:	vorr	d18, d20, d20
   34718:	vld1.32	{d20-d21}, [r1], r5
   3471c:	subs	r9, r9, #4
   34720:	vrev64.32	q12, q10
   34724:	vext.8	q12, q12, q12, #8
   34728:	vext.8	q11, q11, q12, #12
   3472c:	vmul.i32	q9, q9, q12
   34730:	vmul.i32	q8, q11, q8
   34734:	vorr	q11, q12, q12
   34738:	bne	34718 <GetDataSlab+0x5bc>
   3473c:	vext.8	q11, q9, q8, #8
   34740:	vext.8	q12, q8, q8, #8
   34744:	ldr	r9, [sp, #72]	; 0x48
   34748:	vmul.i32	q0, q9, q11
   3474c:	vmul.i32	q1, q8, q12
   34750:	cmp	r9, lr
   34754:	vmul.i32	q8, q0, d0[1]
   34758:	vmul.i32	q9, q1, d2[1]
   3475c:	vmov.32	r7, d16[0]
   34760:	vmov.32	r4, d18[0]
   34764:	beq	34654 <GetDataSlab+0x4f8>
   34768:	vmov.32	r1, d20[0]
   3476c:	mul	r4, r1, r4
   34770:	ldr	r1, [r0, r2, lsl #2]
   34774:	subs	r2, r2, #1
   34778:	mul	r7, r7, r1
   3477c:	bne	3476c <GetDataSlab+0x610>
   34780:	b	34654 <GetDataSlab+0x4f8>
   34784:	ldr	r7, [sp, #84]	; 0x54
   34788:	mov	r2, #1
   3478c:	sub	r0, r7, #1
   34790:	cmp	r0, #11
   34794:	bhi	5162c <GetDataSlab+0x1d4d0>
   34798:	add	r1, pc, #8
   3479c:	ldr	r3, [fp, #8]
   347a0:	ldr	r0, [r1, r0, lsl #2]
   347a4:	add	pc, r1, r0
   347a8:	.word	0x00000030
   347ac:	.word	0x0000449c
   347b0:	.word	0x0000464c
   347b4:	.word	0x000047fc
   347b8:	.word	0x000049ac
   347bc:	.word	0x00004b5c
   347c0:	.word	0x00004d0c
   347c4:	.word	0x0001ce84
   347c8:	.word	0x00004ebc
   347cc:	.word	0x0001ce84
   347d0:	.word	0x0001ce84
   347d4:	.word	0x0000506c
   347d8:	ldr	r5, [sl]
   347dc:	mov	r7, #0
   347e0:	sub	r9, fp, #176	; 0xb0
   347e4:	sub	r8, fp, #96	; 0x60
   347e8:	sub	r0, r5, #1
   347ec:	str	r0, [fp, #-96]	; 0xffffffa0
   347f0:	ldr	r0, [r3]
   347f4:	str	r0, [sp, #72]	; 0x48
   347f8:	str	r0, [fp, #-176]	; 0xffffff50
   347fc:	ldr	r0, [fp, #20]
   34800:	ldr	r1, [r0]
   34804:	ldr	r0, [fp, #24]
   34808:	cmp	r0, #2
   3480c:	mov	r0, r1
   34810:	str	r1, [sp, #76]	; 0x4c
   34814:	blt	40160 <GetDataSlab+0xc004>
   34818:	ldr	r0, [fp, #8]
   3481c:	ldr	r4, [sp, #72]	; 0x48
   34820:	mov	r3, #0
   34824:	mvn	ip, #15
   34828:	mov	r7, #0
   3482c:	str	r1, [sp, #76]	; 0x4c
   34830:	str	r3, [sp, #84]	; 0x54
   34834:	mov	r3, r1
   34838:	mov	r2, r0
   3483c:	sub	r0, r0, #4
   34840:	mov	r6, r4
   34844:	sub	sl, r2, #12
   34848:	mov	r2, #1
   3484c:	b	351e4 <GetDataSlab+0x1088>
   34850:	ldr	r7, [sp, #84]	; 0x54
   34854:	mov	r2, #1
   34858:	sub	r0, r7, #1
   3485c:	cmp	r0, #11
   34860:	bhi	526f8 <GetDataSlab+0x1e59c>
   34864:	add	r1, pc, #8
   34868:	ldr	r3, [fp, #8]
   3486c:	ldr	r0, [r1, r0, lsl #2]
   34870:	add	pc, r1, r0
   34874:	.word	0x00000030
   34878:	.word	0x0000515c
   3487c:	.word	0x0000530c
   34880:	.word	0x000054bc
   34884:	.word	0x0000566c
   34888:	.word	0x0000581c
   3488c:	.word	0x000059cc
   34890:	.word	0x0001de84
   34894:	.word	0x00005b7c
   34898:	.word	0x0001de84
   3489c:	.word	0x0001de84
   348a0:	.word	0x00005d2c
   348a4:	ldr	r5, [sl]
   348a8:	mov	r7, #0
   348ac:	sub	r9, fp, #176	; 0xb0
   348b0:	sub	r8, fp, #96	; 0x60
   348b4:	sub	r0, r5, #1
   348b8:	str	r0, [fp, #-96]	; 0xffffffa0
   348bc:	ldr	r0, [r3]
   348c0:	str	r0, [sp, #72]	; 0x48
   348c4:	str	r0, [fp, #-176]	; 0xffffff50
   348c8:	ldr	r0, [fp, #20]
   348cc:	ldr	r1, [r0]
   348d0:	ldr	r0, [fp, #24]
   348d4:	cmp	r0, #2
   348d8:	mov	r0, r1
   348dc:	str	r1, [sp, #76]	; 0x4c
   348e0:	blt	40300 <GetDataSlab+0xc1a4>
   348e4:	ldr	r0, [fp, #8]
   348e8:	ldr	r4, [sp, #72]	; 0x48
   348ec:	mov	r3, #0
   348f0:	mvn	ip, #15
   348f4:	mov	r7, #0
   348f8:	str	r1, [sp, #76]	; 0x4c
   348fc:	str	r3, [sp, #84]	; 0x54
   34900:	mov	r3, r1
   34904:	mov	r2, r0
   34908:	sub	r0, r0, #4
   3490c:	mov	r6, r4
   34910:	sub	sl, r2, #12
   34914:	mov	r2, #1
   34918:	b	3531c <GetDataSlab+0x11c0>
   3491c:	ldr	r0, [sp, #84]	; 0x54
   34920:	mov	r2, #1
   34924:	sub	r0, r0, #1
   34928:	cmp	r0, #11
   3492c:	bhi	53b64 <GetDataSlab+0x1fa08>
   34930:	add	r1, pc, #4
   34934:	ldr	r0, [r1, r0, lsl #2]
   34938:	add	pc, r1, r0
   3493c:	.word	0x00000030
   34940:	.word	0x00005e20
   34944:	.word	0x00005fc8
   34948:	.word	0x00006160
   3494c:	.word	0x000062f8
   34950:	.word	0x000064b0
   34954:	.word	0x00006668
   34958:	.word	0x0001f228
   3495c:	.word	0x0000680c
   34960:	.word	0x0001f228
   34964:	.word	0x0001f228
   34968:	.word	0x000069b4
   3496c:	ldr	sl, [sl]
   34970:	mov	r3, #0
   34974:	sub	lr, fp, #96	; 0x60
   34978:	sub	r0, sl, #1
   3497c:	str	r0, [fp, #-96]	; 0xffffffa0
   34980:	ldr	r0, [fp, #8]
   34984:	ldr	r0, [r0]
   34988:	str	r0, [sp, #52]	; 0x34
   3498c:	str	r0, [fp, #-176]	; 0xffffff50
   34990:	ldr	r0, [fp, #20]
   34994:	ldr	r1, [r0]
   34998:	ldr	r0, [fp, #24]
   3499c:	cmp	r0, #2
   349a0:	str	r1, [sp, #56]	; 0x38
   349a4:	str	r1, [sp, #76]	; 0x4c
   349a8:	blt	3b498 <GetDataSlab+0x733c>
   349ac:	ldr	r0, [fp, #8]
   349b0:	ldr	r4, [sp, #52]	; 0x34
   349b4:	mov	r2, ip
   349b8:	mov	r6, #1
   349bc:	mov	r9, #0
   349c0:	mvn	r5, #15
   349c4:	mov	r3, #0
   349c8:	mov	r1, r0
   349cc:	sub	r0, r0, #4
   349d0:	mov	r8, r4
   349d4:	sub	ip, r1, #12
   349d8:	ldr	r1, [sp, #56]	; 0x38
   349dc:	str	r1, [sp, #76]	; 0x4c
   349e0:	b	34a30 <GetDataSlab+0x8d4>
   349e4:	ldr	r1, [fp, #12]
   349e8:	sub	r2, fp, #176	; 0xb0
   349ec:	sub	lr, fp, #96	; 0x60
   349f0:	add	ip, ip, #4
   349f4:	str	r7, [lr, r6, lsl #2]
   349f8:	str	r4, [r2, r6, lsl #2]
   349fc:	ldr	r7, [sp, #76]	; 0x4c
   34a00:	ldr	r1, [r1, r6, lsl #2]
   34a04:	mla	r3, r1, r8, r3
   34a08:	ldr	r1, [fp, #20]
   34a0c:	mov	r8, r4
   34a10:	ldr	r4, [sp, #84]	; 0x54
   34a14:	ldr	r1, [r1, r6, lsl #2]
   34a18:	add	r6, r6, #1
   34a1c:	mul	r7, r1, r7
   34a20:	ldr	r1, [fp, #24]
   34a24:	str	r7, [sp, #76]	; 0x4c
   34a28:	cmp	r6, r1
   34a2c:	beq	3b498 <GetDataSlab+0x733c>
   34a30:	ldr	r1, [fp, #16]
   34a34:	add	r9, r9, #1
   34a38:	cmp	r9, #4
   34a3c:	ldr	r1, [r1, r6, lsl #2]
   34a40:	str	r4, [r2, r6, lsl #2]
   34a44:	sub	r7, r1, #1
   34a48:	ldr	r1, [fp, #8]
   34a4c:	str	r7, [lr, r6, lsl #2]
   34a50:	ldr	r2, [r1, r6, lsl #2]
   34a54:	str	r2, [sp, #84]	; 0x54
   34a58:	bcs	34a68 <GetDataSlab+0x90c>
   34a5c:	mov	r1, r2
   34a60:	mov	r2, r6
   34a64:	b	34afc <GetDataSlab+0x9a0>
   34a68:	vmov.i32	q9, #1	; 0x00000001
   34a6c:	vmov.i32	q10, #1	; 0x00000001
   34a70:	vmov.32	d23[1], r2
   34a74:	mov	r1, r9
   34a78:	vmov.i32	q8, #1	; 0x00000001
   34a7c:	bic	r9, r6, #3
   34a80:	str	r1, [sp, #72]	; 0x48
   34a84:	bic	r1, r1, #3
   34a88:	mov	lr, r1
   34a8c:	sub	r2, r6, r1
   34a90:	mov	r1, ip
   34a94:	vmov.32	d18[0], r4
   34a98:	vmov.32	d20[0], r7
   34a9c:	vorr	d16, d18, d18
   34aa0:	vmov.i32	q9, #1	; 0x00000001
   34aa4:	vorr	d18, d20, d20
   34aa8:	vld1.32	{d20-d21}, [r1], r5
   34aac:	subs	r9, r9, #4
   34ab0:	vrev64.32	q12, q10
   34ab4:	vext.8	q12, q12, q12, #8
   34ab8:	vext.8	q11, q11, q12, #12
   34abc:	vmul.i32	q9, q9, q12
   34ac0:	vmul.i32	q8, q11, q8
   34ac4:	vorr	q11, q12, q12
   34ac8:	bne	34aa8 <GetDataSlab+0x94c>
   34acc:	vext.8	q11, q9, q8, #8
   34ad0:	vext.8	q12, q8, q8, #8
   34ad4:	ldr	r9, [sp, #72]	; 0x48
   34ad8:	vmul.i32	q0, q9, q11
   34adc:	vmul.i32	q1, q8, q12
   34ae0:	cmp	r9, lr
   34ae4:	vmul.i32	q8, q0, d0[1]
   34ae8:	vmul.i32	q9, q1, d2[1]
   34aec:	vmov.32	r7, d16[0]
   34af0:	vmov.32	r4, d18[0]
   34af4:	beq	349e4 <GetDataSlab+0x888>
   34af8:	vmov.32	r1, d20[0]
   34afc:	mul	r4, r1, r4
   34b00:	ldr	r1, [r0, r2, lsl #2]
   34b04:	subs	r2, r2, #1
   34b08:	mul	r7, r7, r1
   34b0c:	bne	34afc <GetDataSlab+0x9a0>
   34b10:	b	349e4 <GetDataSlab+0x888>
   34b14:	ldr	r0, [sp, #84]	; 0x54
   34b18:	mov	r2, #1
   34b1c:	sub	r0, r0, #1
   34b20:	cmp	r0, #11
   34b24:	bhi	550bc <GetDataSlab+0x20f60>
   34b28:	add	r1, pc, #4
   34b2c:	ldr	r0, [r1, r0, lsl #2]
   34b30:	add	pc, r1, r0
   34b34:	.word	0x00000030
   34b38:	.word	0x00006cfc
   34b3c:	.word	0x00006ea4
   34b40:	.word	0x0000703c
   34b44:	.word	0x000071d4
   34b48:	.word	0x0000738c
   34b4c:	.word	0x00007544
   34b50:	.word	0x00020588
   34b54:	.word	0x000076e8
   34b58:	.word	0x00020588
   34b5c:	.word	0x00020588
   34b60:	.word	0x00007890
   34b64:	ldr	sl, [sl]
   34b68:	mov	r3, #0
   34b6c:	sub	lr, fp, #96	; 0x60
   34b70:	sub	r0, sl, #1
   34b74:	str	r0, [fp, #-96]	; 0xffffffa0
   34b78:	ldr	r0, [fp, #8]
   34b7c:	ldr	r0, [r0]
   34b80:	str	r0, [sp, #52]	; 0x34
   34b84:	str	r0, [fp, #-176]	; 0xffffff50
   34b88:	ldr	r0, [fp, #20]
   34b8c:	ldr	r1, [r0]
   34b90:	ldr	r0, [fp, #24]
   34b94:	cmp	r0, #2
   34b98:	str	r1, [sp, #56]	; 0x38
   34b9c:	str	r1, [sp, #76]	; 0x4c
   34ba0:	blt	3c56c <GetDataSlab+0x8410>
   34ba4:	ldr	r0, [fp, #8]
   34ba8:	ldr	r4, [sp, #52]	; 0x34
   34bac:	mov	r2, ip
   34bb0:	mov	r6, #1
   34bb4:	mov	r9, #0
   34bb8:	mvn	r5, #15
   34bbc:	mov	r3, #0
   34bc0:	mov	r1, r0
   34bc4:	sub	r0, r0, #4
   34bc8:	mov	r8, r4
   34bcc:	sub	ip, r1, #12
   34bd0:	ldr	r1, [sp, #56]	; 0x38
   34bd4:	str	r1, [sp, #76]	; 0x4c
   34bd8:	b	34c28 <GetDataSlab+0xacc>
   34bdc:	ldr	r1, [fp, #12]
   34be0:	sub	r2, fp, #176	; 0xb0
   34be4:	sub	lr, fp, #96	; 0x60
   34be8:	add	ip, ip, #4
   34bec:	str	r7, [lr, r6, lsl #2]
   34bf0:	str	r4, [r2, r6, lsl #2]
   34bf4:	ldr	r7, [sp, #76]	; 0x4c
   34bf8:	ldr	r1, [r1, r6, lsl #2]
   34bfc:	mla	r3, r1, r8, r3
   34c00:	ldr	r1, [fp, #20]
   34c04:	mov	r8, r4
   34c08:	ldr	r4, [sp, #84]	; 0x54
   34c0c:	ldr	r1, [r1, r6, lsl #2]
   34c10:	add	r6, r6, #1
   34c14:	mul	r7, r1, r7
   34c18:	ldr	r1, [fp, #24]
   34c1c:	str	r7, [sp, #76]	; 0x4c
   34c20:	cmp	r6, r1
   34c24:	beq	3c56c <GetDataSlab+0x8410>
   34c28:	ldr	r1, [fp, #16]
   34c2c:	add	r9, r9, #1
   34c30:	cmp	r9, #4
   34c34:	ldr	r1, [r1, r6, lsl #2]
   34c38:	str	r4, [r2, r6, lsl #2]
   34c3c:	sub	r7, r1, #1
   34c40:	ldr	r1, [fp, #8]
   34c44:	str	r7, [lr, r6, lsl #2]
   34c48:	ldr	r2, [r1, r6, lsl #2]
   34c4c:	str	r2, [sp, #84]	; 0x54
   34c50:	bcs	34c60 <GetDataSlab+0xb04>
   34c54:	mov	r1, r2
   34c58:	mov	r2, r6
   34c5c:	b	34cf4 <GetDataSlab+0xb98>
   34c60:	vmov.i32	q9, #1	; 0x00000001
   34c64:	vmov.i32	q10, #1	; 0x00000001
   34c68:	vmov.32	d23[1], r2
   34c6c:	mov	r1, r9
   34c70:	vmov.i32	q8, #1	; 0x00000001
   34c74:	bic	r9, r6, #3
   34c78:	str	r1, [sp, #72]	; 0x48
   34c7c:	bic	r1, r1, #3
   34c80:	mov	lr, r1
   34c84:	sub	r2, r6, r1
   34c88:	mov	r1, ip
   34c8c:	vmov.32	d18[0], r4
   34c90:	vmov.32	d20[0], r7
   34c94:	vorr	d16, d18, d18
   34c98:	vmov.i32	q9, #1	; 0x00000001
   34c9c:	vorr	d18, d20, d20
   34ca0:	vld1.32	{d20-d21}, [r1], r5
   34ca4:	subs	r9, r9, #4
   34ca8:	vrev64.32	q12, q10
   34cac:	vext.8	q12, q12, q12, #8
   34cb0:	vext.8	q11, q11, q12, #12
   34cb4:	vmul.i32	q9, q9, q12
   34cb8:	vmul.i32	q8, q11, q8
   34cbc:	vorr	q11, q12, q12
   34cc0:	bne	34ca0 <GetDataSlab+0xb44>
   34cc4:	vext.8	q11, q9, q8, #8
   34cc8:	vext.8	q12, q8, q8, #8
   34ccc:	ldr	r9, [sp, #72]	; 0x48
   34cd0:	vmul.i32	q0, q9, q11
   34cd4:	vmul.i32	q1, q8, q12
   34cd8:	cmp	r9, lr
   34cdc:	vmul.i32	q8, q0, d0[1]
   34ce0:	vmul.i32	q9, q1, d2[1]
   34ce4:	vmov.32	r7, d16[0]
   34ce8:	vmov.32	r4, d18[0]
   34cec:	beq	34bdc <GetDataSlab+0xa80>
   34cf0:	vmov.32	r1, d20[0]
   34cf4:	mul	r4, r1, r4
   34cf8:	ldr	r1, [r0, r2, lsl #2]
   34cfc:	subs	r2, r2, #1
   34d00:	mul	r7, r7, r1
   34d04:	bne	34cf4 <GetDataSlab+0xb98>
   34d08:	b	34bdc <GetDataSlab+0xa80>
   34d0c:	ldr	r7, [sp, #84]	; 0x54
   34d10:	mov	r2, #1
   34d14:	sub	r0, r7, #1
   34d18:	cmp	r0, #11
   34d1c:	bhi	56274 <GetDataSlab+0x22118>
   34d20:	add	r1, pc, #8
   34d24:	ldr	r3, [fp, #8]
   34d28:	ldr	r0, [r1, r0, lsl #2]
   34d2c:	add	pc, r1, r0
   34d30:	.word	0x00000030
   34d34:	.word	0x00007bd4
   34d38:	.word	0x00007d84
   34d3c:	.word	0x00007f34
   34d40:	.word	0x000080e4
   34d44:	.word	0x00008294
   34d48:	.word	0x00008444
   34d4c:	.word	0x00021544
   34d50:	.word	0x000085f4
   34d54:	.word	0x00021544
   34d58:	.word	0x00021544
   34d5c:	.word	0x000087a4
   34d60:	ldr	r5, [sl]
   34d64:	mov	r7, #0
   34d68:	sub	r9, fp, #176	; 0xb0
   34d6c:	sub	r8, fp, #96	; 0x60
   34d70:	sub	r0, r5, #1
   34d74:	str	r0, [fp, #-96]	; 0xffffffa0
   34d78:	ldr	r0, [r3]
   34d7c:	str	r0, [sp, #72]	; 0x48
   34d80:	str	r0, [fp, #-176]	; 0xffffff50
   34d84:	ldr	r0, [fp, #20]
   34d88:	ldr	r1, [r0]
   34d8c:	ldr	r0, [fp, #24]
   34d90:	cmp	r0, #2
   34d94:	mov	r0, r1
   34d98:	str	r1, [sp, #76]	; 0x4c
   34d9c:	blt	404a0 <GetDataSlab+0xc344>
   34da0:	ldr	r0, [fp, #8]
   34da4:	ldr	r4, [sp, #72]	; 0x48
   34da8:	mov	r3, #0
   34dac:	mvn	ip, #15
   34db0:	mov	r7, #0
   34db4:	str	r1, [sp, #76]	; 0x4c
   34db8:	str	r3, [sp, #84]	; 0x54
   34dbc:	mov	r3, r1
   34dc0:	mov	r2, r0
   34dc4:	sub	r0, r0, #4
   34dc8:	mov	r6, r4
   34dcc:	sub	sl, r2, #12
   34dd0:	mov	r2, #1
   34dd4:	b	35454 <GetDataSlab+0x12f8>
   34dd8:	ldr	r7, [sp, #84]	; 0x54
   34ddc:	mov	r2, #1
   34de0:	sub	r0, r7, #1
   34de4:	cmp	r0, #11
   34de8:	bhi	57340 <GetDataSlab+0x231e4>
   34dec:	add	r1, pc, #8
   34df0:	ldr	r3, [fp, #8]
   34df4:	ldr	r0, [r1, r0, lsl #2]
   34df8:	add	pc, r1, r0
   34dfc:	.word	0x00000030
   34e00:	.word	0x00008894
   34e04:	.word	0x00008a44
   34e08:	.word	0x00008bf4
   34e0c:	.word	0x00008da4
   34e10:	.word	0x00008f54
   34e14:	.word	0x00009104
   34e18:	.word	0x00022544
   34e1c:	.word	0x000092b4
   34e20:	.word	0x00022544
   34e24:	.word	0x00022544
   34e28:	.word	0x00009464
   34e2c:	ldr	r5, [sl]
   34e30:	mov	r7, #0
   34e34:	sub	r9, fp, #176	; 0xb0
   34e38:	sub	r8, fp, #96	; 0x60
   34e3c:	sub	r0, r5, #1
   34e40:	str	r0, [fp, #-96]	; 0xffffffa0
   34e44:	ldr	r0, [r3]
   34e48:	str	r0, [sp, #72]	; 0x48
   34e4c:	str	r0, [fp, #-176]	; 0xffffff50
   34e50:	ldr	r0, [fp, #20]
   34e54:	ldr	r1, [r0]
   34e58:	ldr	r0, [fp, #24]
   34e5c:	cmp	r0, #2
   34e60:	mov	r0, r1
   34e64:	str	r1, [sp, #76]	; 0x4c
   34e68:	blt	40640 <GetDataSlab+0xc4e4>
   34e6c:	ldr	r0, [fp, #8]
   34e70:	ldr	r4, [sp, #72]	; 0x48
   34e74:	mov	r3, #0
   34e78:	mvn	ip, #15
   34e7c:	mov	r7, #0
   34e80:	str	r1, [sp, #76]	; 0x4c
   34e84:	str	r3, [sp, #84]	; 0x54
   34e88:	mov	r3, r1
   34e8c:	mov	r2, r0
   34e90:	sub	r0, r0, #4
   34e94:	mov	r6, r4
   34e98:	sub	sl, r2, #12
   34e9c:	mov	r2, #1
   34ea0:	b	3558c <GetDataSlab+0x1430>
   34ea4:	ldr	r3, [sp, #84]	; 0x54
   34ea8:	mov	r2, #1
   34eac:	sub	r0, r3, #1
   34eb0:	cmp	r0, #11
   34eb4:	bhi	5887c <GetDataSlab+0x24720>
   34eb8:	add	r1, pc, #8
   34ebc:	ldr	r6, [fp, #8]
   34ec0:	ldr	r0, [r1, r0, lsl #2]
   34ec4:	add	pc, r1, r0
   34ec8:	.word	0x00000030
   34ecc:	.word	0x00009554
   34ed0:	.word	0x000096f8
   34ed4:	.word	0x0000989c
   34ed8:	.word	0x00009a34
   34edc:	.word	0x00009bc8
   34ee0:	.word	0x00009d60
   34ee4:	.word	0x000239b4
   34ee8:	.word	0x00009ef8
   34eec:	.word	0x000239b4
   34ef0:	.word	0x000239b4
   34ef4:	.word	0x0000a08c
   34ef8:	ldr	r9, [sl]
   34efc:	mov	r7, #0
   34f00:	sub	r2, fp, #176	; 0xb0
   34f04:	sub	r3, fp, #96	; 0x60
   34f08:	sub	r0, r9, #1
   34f0c:	str	r0, [fp, #-96]	; 0xffffffa0
   34f10:	ldr	r0, [r6]
   34f14:	str	r0, [sp, #48]	; 0x30
   34f18:	str	r0, [fp, #-176]	; 0xffffff50
   34f1c:	ldr	r0, [fp, #20]
   34f20:	ldr	r1, [r0]
   34f24:	ldr	r0, [fp, #24]
   34f28:	cmp	r0, #2
   34f2c:	str	r1, [sp, #72]	; 0x48
   34f30:	str	r1, [sp, #76]	; 0x4c
   34f34:	blt	407e0 <GetDataSlab+0xc684>
   34f38:	ldr	r0, [fp, #8]
   34f3c:	ldr	r4, [sp, #48]	; 0x30
   34f40:	mov	r6, #1
   34f44:	mov	r5, #0
   34f48:	mvn	lr, #15
   34f4c:	mov	r7, #0
   34f50:	sub	r1, r0, #4
   34f54:	sub	ip, r0, #12
   34f58:	mov	r0, r4
   34f5c:	ldr	r0, [sp, #72]	; 0x48
   34f60:	str	r4, [sp, #84]	; 0x54
   34f64:	str	r0, [sp, #76]	; 0x4c
   34f68:	b	356d0 <GetDataSlab+0x1574>
   34f6c:	ldr	r3, [sp, #84]	; 0x54
   34f70:	mov	r2, #1
   34f74:	sub	r0, r3, #1
   34f78:	cmp	r0, #11
   34f7c:	bhi	59f24 <GetDataSlab+0x25dc8>
   34f80:	add	r1, pc, #8
   34f84:	ldr	r6, [fp, #8]
   34f88:	ldr	r0, [r1, r0, lsl #2]
   34f8c:	add	pc, r1, r0
   34f90:	.word	0x00000030
   34f94:	.word	0x0000a160
   34f98:	.word	0x0000a304
   34f9c:	.word	0x0000a4a8
   34fa0:	.word	0x0000a640
   34fa4:	.word	0x0000a7d4
   34fa8:	.word	0x0000a96c
   34fac:	.word	0x00024f94
   34fb0:	.word	0x0000ab04
   34fb4:	.word	0x00024f94
   34fb8:	.word	0x00024f94
   34fbc:	.word	0x0000ac98
   34fc0:	ldr	r9, [sl]
   34fc4:	mov	r7, #0
   34fc8:	sub	r2, fp, #176	; 0xb0
   34fcc:	sub	r3, fp, #96	; 0x60
   34fd0:	sub	r0, r9, #1
   34fd4:	str	r0, [fp, #-96]	; 0xffffffa0
   34fd8:	ldr	r0, [r6]
   34fdc:	str	r0, [sp, #48]	; 0x30
   34fe0:	str	r0, [fp, #-176]	; 0xffffff50
   34fe4:	ldr	r0, [fp, #20]
   34fe8:	ldr	r1, [r0]
   34fec:	ldr	r0, [fp, #24]
   34ff0:	cmp	r0, #2
   34ff4:	str	r1, [sp, #72]	; 0x48
   34ff8:	str	r1, [sp, #76]	; 0x4c
   34ffc:	blt	40b70 <GetDataSlab+0xca14>
   35000:	ldr	r0, [fp, #8]
   35004:	ldr	r4, [sp, #48]	; 0x30
   35008:	mov	r6, #1
   3500c:	mov	r5, #0
   35010:	mvn	lr, #15
   35014:	mov	r7, #0
   35018:	sub	r1, r0, #4
   3501c:	sub	ip, r0, #12
   35020:	mov	r0, r4
   35024:	ldr	r0, [sp, #72]	; 0x48
   35028:	str	r4, [sp, #84]	; 0x54
   3502c:	str	r0, [sp, #76]	; 0x4c
   35030:	b	35800 <GetDataSlab+0x16a4>
   35034:	cmp	ip, #0
   35038:	beq	342ac <GetDataSlab+0x150>
   3503c:	ldr	r4, [sp, #72]	; 0x48
   35040:	cmp	r4, #1
   35044:	bne	342ac <GetDataSlab+0x150>
   35048:	ldr	r2, [fp, #28]
   3504c:	ldr	r1, [sp, #80]	; 0x50
   35050:	mov	r0, sl
   35054:	bl	181c <memcpy@plt>
   35058:	mov	r0, #0
   3505c:	sub	sp, fp, #48	; 0x30
   35060:	vpop	{d8-d9}
   35064:	add	sp, sp, #4
   35068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3506c:	sub	ip, fp, #176	; 0xb0
   35070:	sub	r2, fp, #96	; 0x60
   35074:	str	r4, [ip, r6, lsl #2]
   35078:	ldr	r3, [sp, #76]	; 0x4c
   3507c:	add	lr, lr, #4
   35080:	str	r0, [r2, r6, lsl #2]
   35084:	ldr	r0, [fp, #12]
   35088:	ldr	r0, [r0, r6, lsl #2]
   3508c:	mla	r7, r0, r9, r7
   35090:	ldr	r0, [fp, #20]
   35094:	mov	r9, r4
   35098:	ldr	r4, [sp, #84]	; 0x54
   3509c:	ldr	r0, [r0, r6, lsl #2]
   350a0:	add	r6, r6, #1
   350a4:	mul	r3, r0, r3
   350a8:	ldr	r0, [fp, #24]
   350ac:	str	r3, [sp, #76]	; 0x4c
   350b0:	cmp	r6, r0
   350b4:	beq	3fdc4 <GetDataSlab+0xbc68>
   350b8:	ldr	r0, [fp, #16]
   350bc:	add	r8, r8, #1
   350c0:	cmp	r8, #4
   350c4:	ldr	r0, [r0, r6, lsl #2]
   350c8:	str	r4, [ip, r6, lsl #2]
   350cc:	sub	r0, r0, #1
   350d0:	str	r0, [r2, r6, lsl #2]
   350d4:	ldr	r2, [fp, #8]
   350d8:	ldr	r2, [r2, r6, lsl #2]
   350dc:	str	r2, [sp, #84]	; 0x54
   350e0:	bcs	350ec <GetDataSlab+0xf90>
   350e4:	mov	r3, r6
   350e8:	b	3517c <GetDataSlab+0x1020>
   350ec:	vmov.i32	q9, #1	; 0x00000001
   350f0:	vmov.i32	q10, #1	; 0x00000001
   350f4:	vmov.32	d23[1], r2
   350f8:	vmov.i32	q8, #1	; 0x00000001
   350fc:	bic	ip, r6, #3
   35100:	vmov.32	d18[0], r4
   35104:	vmov.32	d20[0], r0
   35108:	bic	r0, r8, #3
   3510c:	str	r0, [sp, #68]	; 0x44
   35110:	sub	r3, r6, r0
   35114:	mov	r0, lr
   35118:	vorr	d16, d18, d18
   3511c:	vmov.i32	q9, #1	; 0x00000001
   35120:	vorr	d18, d20, d20
   35124:	vld1.32	{d20-d21}, [r0], r5
   35128:	subs	ip, ip, #4
   3512c:	vrev64.32	q12, q10
   35130:	vext.8	q12, q12, q12, #8
   35134:	vext.8	q11, q11, q12, #12
   35138:	vmul.i32	q9, q9, q12
   3513c:	vmul.i32	q8, q11, q8
   35140:	vorr	q11, q12, q12
   35144:	bne	35124 <GetDataSlab+0xfc8>
   35148:	vext.8	q11, q9, q8, #8
   3514c:	vext.8	q12, q8, q8, #8
   35150:	ldr	r2, [sp, #68]	; 0x44
   35154:	vmul.i32	q0, q9, q11
   35158:	vmul.i32	q1, q8, q12
   3515c:	cmp	r8, r2
   35160:	vmul.i32	q8, q0, d0[1]
   35164:	vmul.i32	q9, q1, d2[1]
   35168:	vmov.32	r0, d16[0]
   3516c:	vmov.32	r4, d18[0]
   35170:	beq	3506c <GetDataSlab+0xf10>
   35174:	vmov.32	r2, d20[0]
   35178:	sub	ip, fp, #176	; 0xb0
   3517c:	mul	r4, r2, r4
   35180:	ldr	r2, [r1, r3, lsl #2]
   35184:	subs	r3, r3, #1
   35188:	mul	r0, r0, r2
   3518c:	bne	3517c <GetDataSlab+0x1020>
   35190:	b	35070 <GetDataSlab+0xf14>
   35194:	sub	r8, fp, #96	; 0x60
   35198:	ldr	r3, [fp, #12]
   3519c:	sub	r9, fp, #176	; 0xb0
   351a0:	str	lr, [r8, r2, lsl #2]
   351a4:	ldr	r6, [sp, #68]	; 0x44
   351a8:	add	sl, sl, #4
   351ac:	str	r4, [r9, r2, lsl #2]
   351b0:	ldr	r3, [r3, r2, lsl #2]
   351b4:	mla	r7, r3, r6, r7
   351b8:	ldr	r3, [fp, #20]
   351bc:	ldr	r6, [sp, #76]	; 0x4c
   351c0:	ldr	r3, [r3, r2, lsl #2]
   351c4:	add	r2, r2, #1
   351c8:	mul	r6, r3, r6
   351cc:	ldr	r3, [fp, #24]
   351d0:	str	r6, [sp, #76]	; 0x4c
   351d4:	mov	r6, r4
   351d8:	ldr	r4, [sp, #64]	; 0x40
   351dc:	cmp	r2, r3
   351e0:	beq	40160 <GetDataSlab+0xc004>
   351e4:	ldr	r3, [fp, #16]
   351e8:	str	r6, [sp, #68]	; 0x44
   351ec:	ldr	r3, [r3, r2, lsl #2]
   351f0:	str	r4, [r9, r2, lsl #2]
   351f4:	ldr	r9, [sp, #84]	; 0x54
   351f8:	sub	lr, r3, #1
   351fc:	ldr	r3, [fp, #8]
   35200:	add	r9, r9, #1
   35204:	str	lr, [r8, r2, lsl #2]
   35208:	cmp	r9, #4
   3520c:	str	r9, [sp, #84]	; 0x54
   35210:	ldr	r6, [r3, r2, lsl #2]
   35214:	str	r6, [sp, #64]	; 0x40
   35218:	bcs	35224 <GetDataSlab+0x10c8>
   3521c:	mov	r3, r2
   35220:	b	352b4 <GetDataSlab+0x1158>
   35224:	vmov.i32	q9, #1	; 0x00000001
   35228:	vmov.i32	q10, #1	; 0x00000001
   3522c:	vmov.32	d23[1], r6
   35230:	vmov.i32	q8, #1	; 0x00000001
   35234:	bic	r3, r9, #3
   35238:	bic	r8, r2, #3
   3523c:	mov	r6, sl
   35240:	str	r3, [sp, #60]	; 0x3c
   35244:	sub	r3, r2, r3
   35248:	vmov.32	d18[0], r4
   3524c:	vmov.32	d20[0], lr
   35250:	vorr	d16, d18, d18
   35254:	vmov.i32	q9, #1	; 0x00000001
   35258:	vorr	d18, d20, d20
   3525c:	vld1.32	{d20-d21}, [r6], ip
   35260:	subs	r8, r8, #4
   35264:	vrev64.32	q12, q10
   35268:	vext.8	q12, q12, q12, #8
   3526c:	vext.8	q11, q11, q12, #12
   35270:	vmul.i32	q9, q9, q12
   35274:	vmul.i32	q8, q11, q8
   35278:	vorr	q11, q12, q12
   3527c:	bne	3525c <GetDataSlab+0x1100>
   35280:	vext.8	q11, q9, q8, #8
   35284:	vext.8	q12, q8, q8, #8
   35288:	ldr	r6, [sp, #60]	; 0x3c
   3528c:	vmul.i32	q0, q9, q11
   35290:	vmul.i32	q1, q8, q12
   35294:	cmp	r9, r6
   35298:	vmul.i32	q8, q0, d0[1]
   3529c:	vmul.i32	q9, q1, d2[1]
   352a0:	vmov.32	lr, d16[0]
   352a4:	vmov.32	r4, d18[0]
   352a8:	beq	35194 <GetDataSlab+0x1038>
   352ac:	vmov.32	r6, d20[0]
   352b0:	sub	r8, fp, #96	; 0x60
   352b4:	mul	r4, r6, r4
   352b8:	ldr	r6, [r0, r3, lsl #2]
   352bc:	subs	r3, r3, #1
   352c0:	mul	lr, lr, r6
   352c4:	bne	352b4 <GetDataSlab+0x1158>
   352c8:	b	35198 <GetDataSlab+0x103c>
   352cc:	sub	r8, fp, #96	; 0x60
   352d0:	ldr	r3, [fp, #12]
   352d4:	sub	r9, fp, #176	; 0xb0
   352d8:	str	lr, [r8, r2, lsl #2]
   352dc:	ldr	r6, [sp, #68]	; 0x44
   352e0:	add	sl, sl, #4
   352e4:	str	r4, [r9, r2, lsl #2]
   352e8:	ldr	r3, [r3, r2, lsl #2]
   352ec:	mla	r7, r3, r6, r7
   352f0:	ldr	r3, [fp, #20]
   352f4:	ldr	r6, [sp, #76]	; 0x4c
   352f8:	ldr	r3, [r3, r2, lsl #2]
   352fc:	add	r2, r2, #1
   35300:	mul	r6, r3, r6
   35304:	ldr	r3, [fp, #24]
   35308:	str	r6, [sp, #76]	; 0x4c
   3530c:	mov	r6, r4
   35310:	ldr	r4, [sp, #64]	; 0x40
   35314:	cmp	r2, r3
   35318:	beq	40300 <GetDataSlab+0xc1a4>
   3531c:	ldr	r3, [fp, #16]
   35320:	str	r6, [sp, #68]	; 0x44
   35324:	ldr	r3, [r3, r2, lsl #2]
   35328:	str	r4, [r9, r2, lsl #2]
   3532c:	ldr	r9, [sp, #84]	; 0x54
   35330:	sub	lr, r3, #1
   35334:	ldr	r3, [fp, #8]
   35338:	add	r9, r9, #1
   3533c:	str	lr, [r8, r2, lsl #2]
   35340:	cmp	r9, #4
   35344:	str	r9, [sp, #84]	; 0x54
   35348:	ldr	r6, [r3, r2, lsl #2]
   3534c:	str	r6, [sp, #64]	; 0x40
   35350:	bcs	3535c <GetDataSlab+0x1200>
   35354:	mov	r3, r2
   35358:	b	353ec <GetDataSlab+0x1290>
   3535c:	vmov.i32	q9, #1	; 0x00000001
   35360:	vmov.i32	q10, #1	; 0x00000001
   35364:	vmov.32	d23[1], r6
   35368:	vmov.i32	q8, #1	; 0x00000001
   3536c:	bic	r3, r9, #3
   35370:	bic	r8, r2, #3
   35374:	mov	r6, sl
   35378:	str	r3, [sp, #60]	; 0x3c
   3537c:	sub	r3, r2, r3
   35380:	vmov.32	d18[0], r4
   35384:	vmov.32	d20[0], lr
   35388:	vorr	d16, d18, d18
   3538c:	vmov.i32	q9, #1	; 0x00000001
   35390:	vorr	d18, d20, d20
   35394:	vld1.32	{d20-d21}, [r6], ip
   35398:	subs	r8, r8, #4
   3539c:	vrev64.32	q12, q10
   353a0:	vext.8	q12, q12, q12, #8
   353a4:	vext.8	q11, q11, q12, #12
   353a8:	vmul.i32	q9, q9, q12
   353ac:	vmul.i32	q8, q11, q8
   353b0:	vorr	q11, q12, q12
   353b4:	bne	35394 <GetDataSlab+0x1238>
   353b8:	vext.8	q11, q9, q8, #8
   353bc:	vext.8	q12, q8, q8, #8
   353c0:	ldr	r6, [sp, #60]	; 0x3c
   353c4:	vmul.i32	q0, q9, q11
   353c8:	vmul.i32	q1, q8, q12
   353cc:	cmp	r9, r6
   353d0:	vmul.i32	q8, q0, d0[1]
   353d4:	vmul.i32	q9, q1, d2[1]
   353d8:	vmov.32	lr, d16[0]
   353dc:	vmov.32	r4, d18[0]
   353e0:	beq	352cc <GetDataSlab+0x1170>
   353e4:	vmov.32	r6, d20[0]
   353e8:	sub	r8, fp, #96	; 0x60
   353ec:	mul	r4, r6, r4
   353f0:	ldr	r6, [r0, r3, lsl #2]
   353f4:	subs	r3, r3, #1
   353f8:	mul	lr, lr, r6
   353fc:	bne	353ec <GetDataSlab+0x1290>
   35400:	b	352d0 <GetDataSlab+0x1174>
   35404:	sub	r8, fp, #96	; 0x60
   35408:	ldr	r3, [fp, #12]
   3540c:	sub	r9, fp, #176	; 0xb0
   35410:	str	lr, [r8, r2, lsl #2]
   35414:	ldr	r6, [sp, #68]	; 0x44
   35418:	add	sl, sl, #4
   3541c:	str	r4, [r9, r2, lsl #2]
   35420:	ldr	r3, [r3, r2, lsl #2]
   35424:	mla	r7, r3, r6, r7
   35428:	ldr	r3, [fp, #20]
   3542c:	ldr	r6, [sp, #76]	; 0x4c
   35430:	ldr	r3, [r3, r2, lsl #2]
   35434:	add	r2, r2, #1
   35438:	mul	r6, r3, r6
   3543c:	ldr	r3, [fp, #24]
   35440:	str	r6, [sp, #76]	; 0x4c
   35444:	mov	r6, r4
   35448:	ldr	r4, [sp, #64]	; 0x40
   3544c:	cmp	r2, r3
   35450:	beq	404a0 <GetDataSlab+0xc344>
   35454:	ldr	r3, [fp, #16]
   35458:	str	r6, [sp, #68]	; 0x44
   3545c:	ldr	r3, [r3, r2, lsl #2]
   35460:	str	r4, [r9, r2, lsl #2]
   35464:	ldr	r9, [sp, #84]	; 0x54
   35468:	sub	lr, r3, #1
   3546c:	ldr	r3, [fp, #8]
   35470:	add	r9, r9, #1
   35474:	str	lr, [r8, r2, lsl #2]
   35478:	cmp	r9, #4
   3547c:	str	r9, [sp, #84]	; 0x54
   35480:	ldr	r6, [r3, r2, lsl #2]
   35484:	str	r6, [sp, #64]	; 0x40
   35488:	bcs	35494 <GetDataSlab+0x1338>
   3548c:	mov	r3, r2
   35490:	b	35524 <GetDataSlab+0x13c8>
   35494:	vmov.i32	q9, #1	; 0x00000001
   35498:	vmov.i32	q10, #1	; 0x00000001
   3549c:	vmov.32	d23[1], r6
   354a0:	vmov.i32	q8, #1	; 0x00000001
   354a4:	bic	r3, r9, #3
   354a8:	bic	r8, r2, #3
   354ac:	mov	r6, sl
   354b0:	str	r3, [sp, #60]	; 0x3c
   354b4:	sub	r3, r2, r3
   354b8:	vmov.32	d18[0], r4
   354bc:	vmov.32	d20[0], lr
   354c0:	vorr	d16, d18, d18
   354c4:	vmov.i32	q9, #1	; 0x00000001
   354c8:	vorr	d18, d20, d20
   354cc:	vld1.32	{d20-d21}, [r6], ip
   354d0:	subs	r8, r8, #4
   354d4:	vrev64.32	q12, q10
   354d8:	vext.8	q12, q12, q12, #8
   354dc:	vext.8	q11, q11, q12, #12
   354e0:	vmul.i32	q9, q9, q12
   354e4:	vmul.i32	q8, q11, q8
   354e8:	vorr	q11, q12, q12
   354ec:	bne	354cc <GetDataSlab+0x1370>
   354f0:	vext.8	q11, q9, q8, #8
   354f4:	vext.8	q12, q8, q8, #8
   354f8:	ldr	r6, [sp, #60]	; 0x3c
   354fc:	vmul.i32	q0, q9, q11
   35500:	vmul.i32	q1, q8, q12
   35504:	cmp	r9, r6
   35508:	vmul.i32	q8, q0, d0[1]
   3550c:	vmul.i32	q9, q1, d2[1]
   35510:	vmov.32	lr, d16[0]
   35514:	vmov.32	r4, d18[0]
   35518:	beq	35404 <GetDataSlab+0x12a8>
   3551c:	vmov.32	r6, d20[0]
   35520:	sub	r8, fp, #96	; 0x60
   35524:	mul	r4, r6, r4
   35528:	ldr	r6, [r0, r3, lsl #2]
   3552c:	subs	r3, r3, #1
   35530:	mul	lr, lr, r6
   35534:	bne	35524 <GetDataSlab+0x13c8>
   35538:	b	35408 <GetDataSlab+0x12ac>
   3553c:	sub	r8, fp, #96	; 0x60
   35540:	ldr	r3, [fp, #12]
   35544:	sub	r9, fp, #176	; 0xb0
   35548:	str	lr, [r8, r2, lsl #2]
   3554c:	ldr	r6, [sp, #68]	; 0x44
   35550:	add	sl, sl, #4
   35554:	str	r4, [r9, r2, lsl #2]
   35558:	ldr	r3, [r3, r2, lsl #2]
   3555c:	mla	r7, r3, r6, r7
   35560:	ldr	r3, [fp, #20]
   35564:	ldr	r6, [sp, #76]	; 0x4c
   35568:	ldr	r3, [r3, r2, lsl #2]
   3556c:	add	r2, r2, #1
   35570:	mul	r6, r3, r6
   35574:	ldr	r3, [fp, #24]
   35578:	str	r6, [sp, #76]	; 0x4c
   3557c:	mov	r6, r4
   35580:	ldr	r4, [sp, #64]	; 0x40
   35584:	cmp	r2, r3
   35588:	beq	40640 <GetDataSlab+0xc4e4>
   3558c:	ldr	r3, [fp, #16]
   35590:	str	r6, [sp, #68]	; 0x44
   35594:	ldr	r3, [r3, r2, lsl #2]
   35598:	str	r4, [r9, r2, lsl #2]
   3559c:	ldr	r9, [sp, #84]	; 0x54
   355a0:	sub	lr, r3, #1
   355a4:	ldr	r3, [fp, #8]
   355a8:	add	r9, r9, #1
   355ac:	str	lr, [r8, r2, lsl #2]
   355b0:	cmp	r9, #4
   355b4:	str	r9, [sp, #84]	; 0x54
   355b8:	ldr	r6, [r3, r2, lsl #2]
   355bc:	str	r6, [sp, #64]	; 0x40
   355c0:	bcs	355cc <GetDataSlab+0x1470>
   355c4:	mov	r3, r2
   355c8:	b	3565c <GetDataSlab+0x1500>
   355cc:	vmov.i32	q9, #1	; 0x00000001
   355d0:	vmov.i32	q10, #1	; 0x00000001
   355d4:	vmov.32	d23[1], r6
   355d8:	vmov.i32	q8, #1	; 0x00000001
   355dc:	bic	r3, r9, #3
   355e0:	bic	r8, r2, #3
   355e4:	mov	r6, sl
   355e8:	str	r3, [sp, #60]	; 0x3c
   355ec:	sub	r3, r2, r3
   355f0:	vmov.32	d18[0], r4
   355f4:	vmov.32	d20[0], lr
   355f8:	vorr	d16, d18, d18
   355fc:	vmov.i32	q9, #1	; 0x00000001
   35600:	vorr	d18, d20, d20
   35604:	vld1.32	{d20-d21}, [r6], ip
   35608:	subs	r8, r8, #4
   3560c:	vrev64.32	q12, q10
   35610:	vext.8	q12, q12, q12, #8
   35614:	vext.8	q11, q11, q12, #12
   35618:	vmul.i32	q9, q9, q12
   3561c:	vmul.i32	q8, q11, q8
   35620:	vorr	q11, q12, q12
   35624:	bne	35604 <GetDataSlab+0x14a8>
   35628:	vext.8	q11, q9, q8, #8
   3562c:	vext.8	q12, q8, q8, #8
   35630:	ldr	r6, [sp, #60]	; 0x3c
   35634:	vmul.i32	q0, q9, q11
   35638:	vmul.i32	q1, q8, q12
   3563c:	cmp	r9, r6
   35640:	vmul.i32	q8, q0, d0[1]
   35644:	vmul.i32	q9, q1, d2[1]
   35648:	vmov.32	lr, d16[0]
   3564c:	vmov.32	r4, d18[0]
   35650:	beq	3553c <GetDataSlab+0x13e0>
   35654:	vmov.32	r6, d20[0]
   35658:	sub	r8, fp, #96	; 0x60
   3565c:	mul	r4, r6, r4
   35660:	ldr	r6, [r0, r3, lsl #2]
   35664:	subs	r3, r3, #1
   35668:	mul	lr, lr, r6
   3566c:	bne	3565c <GetDataSlab+0x1500>
   35670:	b	35540 <GetDataSlab+0x13e4>
   35674:	ldr	sl, [fp, #16]
   35678:	mov	r8, r5
   3567c:	sub	r3, fp, #96	; 0x60
   35680:	sub	r2, fp, #176	; 0xb0
   35684:	ldr	r5, [sp, #84]	; 0x54
   35688:	str	r4, [sp, #84]	; 0x54
   3568c:	add	ip, ip, #4
   35690:	str	r0, [r3, r6, lsl #2]
   35694:	ldr	r0, [fp, #12]
   35698:	str	r4, [r2, r6, lsl #2]
   3569c:	ldr	r4, [sp, #68]	; 0x44
   356a0:	ldr	r0, [r0, r6, lsl #2]
   356a4:	mla	r7, r0, r5, r7
   356a8:	ldr	r0, [fp, #20]
   356ac:	ldr	r5, [sp, #76]	; 0x4c
   356b0:	ldr	r0, [r0, r6, lsl #2]
   356b4:	add	r6, r6, #1
   356b8:	mul	r5, r0, r5
   356bc:	ldr	r0, [fp, #24]
   356c0:	str	r5, [sp, #76]	; 0x4c
   356c4:	mov	r5, r8
   356c8:	cmp	r6, r0
   356cc:	beq	407e0 <GetDataSlab+0xc684>
   356d0:	ldr	r0, [sl, r6, lsl #2]
   356d4:	str	r4, [r2, r6, lsl #2]
   356d8:	ldr	r2, [fp, #8]
   356dc:	add	r5, r5, #1
   356e0:	cmp	r5, #4
   356e4:	sub	r0, r0, #1
   356e8:	str	r0, [r3, r6, lsl #2]
   356ec:	ldr	r2, [r2, r6, lsl #2]
   356f0:	str	r2, [sp, #68]	; 0x44
   356f4:	bcs	35700 <GetDataSlab+0x15a4>
   356f8:	mov	r3, r6
   356fc:	b	35788 <GetDataSlab+0x162c>
   35700:	vmov.i32	q9, #1	; 0x00000001
   35704:	vmov.i32	q10, #1	; 0x00000001
   35708:	vmov.32	d23[1], r2
   3570c:	vmov.i32	q8, #1	; 0x00000001
   35710:	bic	r8, r5, #3
   35714:	bic	sl, r6, #3
   35718:	sub	r3, r6, r8
   3571c:	vmov.32	d18[0], r4
   35720:	vmov.32	d20[0], r0
   35724:	mov	r0, ip
   35728:	vorr	d16, d18, d18
   3572c:	vmov.i32	q9, #1	; 0x00000001
   35730:	vorr	d18, d20, d20
   35734:	vld1.32	{d20-d21}, [r0], lr
   35738:	subs	sl, sl, #4
   3573c:	vrev64.32	q12, q10
   35740:	vext.8	q12, q12, q12, #8
   35744:	vext.8	q11, q11, q12, #12
   35748:	vmul.i32	q9, q9, q12
   3574c:	vmul.i32	q8, q11, q8
   35750:	vorr	q11, q12, q12
   35754:	bne	35734 <GetDataSlab+0x15d8>
   35758:	vext.8	q11, q9, q8, #8
   3575c:	vext.8	q12, q8, q8, #8
   35760:	cmp	r5, r8
   35764:	vmul.i32	q0, q9, q11
   35768:	vmul.i32	q1, q8, q12
   3576c:	vmul.i32	q8, q0, d0[1]
   35770:	vmul.i32	q9, q1, d2[1]
   35774:	vmov.32	r0, d16[0]
   35778:	vmov.32	r4, d18[0]
   3577c:	beq	35674 <GetDataSlab+0x1518>
   35780:	vmov.32	r2, d20[0]
   35784:	ldr	sl, [fp, #16]
   35788:	mov	r8, r5
   3578c:	mul	r4, r2, r4
   35790:	ldr	r2, [r1, r3, lsl #2]
   35794:	subs	r3, r3, #1
   35798:	mul	r0, r0, r2
   3579c:	bne	3578c <GetDataSlab+0x1630>
   357a0:	b	3567c <GetDataSlab+0x1520>
   357a4:	ldr	sl, [fp, #16]
   357a8:	mov	r8, r5
   357ac:	sub	r3, fp, #96	; 0x60
   357b0:	sub	r2, fp, #176	; 0xb0
   357b4:	ldr	r5, [sp, #84]	; 0x54
   357b8:	str	r4, [sp, #84]	; 0x54
   357bc:	add	ip, ip, #4
   357c0:	str	r0, [r3, r6, lsl #2]
   357c4:	ldr	r0, [fp, #12]
   357c8:	str	r4, [r2, r6, lsl #2]
   357cc:	ldr	r4, [sp, #68]	; 0x44
   357d0:	ldr	r0, [r0, r6, lsl #2]
   357d4:	mla	r7, r0, r5, r7
   357d8:	ldr	r0, [fp, #20]
   357dc:	ldr	r5, [sp, #76]	; 0x4c
   357e0:	ldr	r0, [r0, r6, lsl #2]
   357e4:	add	r6, r6, #1
   357e8:	mul	r5, r0, r5
   357ec:	ldr	r0, [fp, #24]
   357f0:	str	r5, [sp, #76]	; 0x4c
   357f4:	mov	r5, r8
   357f8:	cmp	r6, r0
   357fc:	beq	40b70 <GetDataSlab+0xca14>
   35800:	ldr	r0, [sl, r6, lsl #2]
   35804:	str	r4, [r2, r6, lsl #2]
   35808:	ldr	r2, [fp, #8]
   3580c:	add	r5, r5, #1
   35810:	cmp	r5, #4
   35814:	sub	r0, r0, #1
   35818:	str	r0, [r3, r6, lsl #2]
   3581c:	ldr	r2, [r2, r6, lsl #2]
   35820:	str	r2, [sp, #68]	; 0x44
   35824:	bcs	35830 <GetDataSlab+0x16d4>
   35828:	mov	r3, r6
   3582c:	b	358b8 <GetDataSlab+0x175c>
   35830:	vmov.i32	q9, #1	; 0x00000001
   35834:	vmov.i32	q10, #1	; 0x00000001
   35838:	vmov.32	d23[1], r2
   3583c:	vmov.i32	q8, #1	; 0x00000001
   35840:	bic	r8, r5, #3
   35844:	bic	sl, r6, #3
   35848:	sub	r3, r6, r8
   3584c:	vmov.32	d18[0], r4
   35850:	vmov.32	d20[0], r0
   35854:	mov	r0, ip
   35858:	vorr	d16, d18, d18
   3585c:	vmov.i32	q9, #1	; 0x00000001
   35860:	vorr	d18, d20, d20
   35864:	vld1.32	{d20-d21}, [r0], lr
   35868:	subs	sl, sl, #4
   3586c:	vrev64.32	q12, q10
   35870:	vext.8	q12, q12, q12, #8
   35874:	vext.8	q11, q11, q12, #12
   35878:	vmul.i32	q9, q9, q12
   3587c:	vmul.i32	q8, q11, q8
   35880:	vorr	q11, q12, q12
   35884:	bne	35864 <GetDataSlab+0x1708>
   35888:	vext.8	q11, q9, q8, #8
   3588c:	vext.8	q12, q8, q8, #8
   35890:	cmp	r5, r8
   35894:	vmul.i32	q0, q9, q11
   35898:	vmul.i32	q1, q8, q12
   3589c:	vmul.i32	q8, q0, d0[1]
   358a0:	vmul.i32	q9, q1, d2[1]
   358a4:	vmov.32	r0, d16[0]
   358a8:	vmov.32	r4, d18[0]
   358ac:	beq	357a4 <GetDataSlab+0x1648>
   358b0:	vmov.32	r2, d20[0]
   358b4:	ldr	sl, [fp, #16]
   358b8:	mov	r8, r5
   358bc:	mul	r4, r2, r4
   358c0:	ldr	r2, [r1, r3, lsl #2]
   358c4:	subs	r3, r3, #1
   358c8:	mul	r0, r0, r2
   358cc:	bne	358bc <GetDataSlab+0x1760>
   358d0:	b	357ac <GetDataSlab+0x1650>
   358d4:	ldr	r0, [sp, #72]	; 0x48
   358d8:	add	r8, r8, #1
   358dc:	cmp	r8, lr
   358e0:	str	r8, [sp, #84]	; 0x54
   358e4:	add	ip, ip, r0
   358e8:	mov	r0, #0
   358ec:	str	ip, [sp, #92]	; 0x5c
   358f0:	beq	5b6a4 <GetDataSlab+0x27548>
   358f4:	ldr	r0, [sp, #64]	; 0x40
   358f8:	cmp	r0, #0
   358fc:	beq	35994 <GetDataSlab+0x1838>
   35900:	ldr	r0, [sp, #72]	; 0x48
   35904:	ldr	r8, [sp, #84]	; 0x54
   35908:	ldr	r1, [sp, #56]	; 0x38
   3590c:	ldr	r3, [sp, #80]	; 0x50
   35910:	ldr	r2, [sp, #88]	; 0x58
   35914:	ldr	lr, [sp, #76]	; 0x4c
   35918:	ldr	ip, [sp, #92]	; 0x5c
   3591c:	add	r6, sp, #124	; 0x7c
   35920:	mul	r0, r0, r8
   35924:	add	r1, r1, r0
   35928:	add	r1, r3, r1
   3592c:	cmp	r1, r2
   35930:	bls	35a1c <GetDataSlab+0x18c0>
   35934:	add	r1, r2, r5, lsl #3
   35938:	ldr	r2, [sp, #52]	; 0x34
   3593c:	add	r0, r2, r0
   35940:	add	r0, r3, r0
   35944:	cmp	r0, r1
   35948:	bcs	35a1c <GetDataSlab+0x18c0>
   3594c:	mov	r0, #0
   35950:	ldr	r1, [sp, #60]	; 0x3c
   35954:	cmp	r1, #0
   35958:	beq	359b0 <GetDataSlab+0x1854>
   3595c:	ldr	r1, [sp, #68]	; 0x44
   35960:	orr	r3, r0, #1
   35964:	mla	r1, r0, r1, ip
   35968:	ldrsb	r1, [r1]
   3596c:	vmov	s0, r1
   35970:	vcvt.f64.s32	d16, s0
   35974:	ldr	r1, [sp, #88]	; 0x58
   35978:	vstr	d16, [r1]
   3597c:	add	r1, r1, #8
   35980:	str	r1, [sp, #88]	; 0x58
   35984:	orr	r0, r0, #1
   35988:	cmp	r5, r0
   3598c:	bne	359c0 <GetDataSlab+0x1864>
   35990:	b	358d4 <GetDataSlab+0x1778>
   35994:	ldr	lr, [sp, #76]	; 0x4c
   35998:	ldr	ip, [sp, #92]	; 0x5c
   3599c:	ldr	r8, [sp, #84]	; 0x54
   359a0:	mov	r0, #0
   359a4:	ldr	r1, [sp, #60]	; 0x3c
   359a8:	cmp	r1, #0
   359ac:	bne	3595c <GetDataSlab+0x1800>
   359b0:	mov	r3, r0
   359b4:	orr	r0, r0, #1
   359b8:	cmp	r5, r0
   359bc:	beq	358d4 <GetDataSlab+0x1778>
   359c0:	ldr	r6, [sp, #68]	; 0x44
   359c4:	add	r2, r3, #1
   359c8:	sub	r1, r5, r3
   359cc:	mov	r7, ip
   359d0:	mul	r0, r6, r3
   359d4:	mul	r3, r6, r2
   359d8:	ldr	r6, [sp, #88]	; 0x58
   359dc:	add	r2, r7, r0
   359e0:	subs	r1, r1, #2
   359e4:	ldrsb	r2, [r2]
   359e8:	vmov	s0, r2
   359ec:	add	r2, r7, r3
   359f0:	add	r7, r7, r4
   359f4:	vcvt.f64.s32	d16, s0
   359f8:	vstr	d16, [r6]
   359fc:	ldrsb	r2, [r2]
   35a00:	vmov	s0, r2
   35a04:	vcvt.f64.s32	d16, s0
   35a08:	vstr	d16, [r6, #8]
   35a0c:	add	r6, r6, #16
   35a10:	bne	359dc <GetDataSlab+0x1880>
   35a14:	str	r6, [sp, #88]	; 0x58
   35a18:	b	358d4 <GetDataSlab+0x1778>
   35a1c:	ldr	r0, [sp, #40]	; 0x28
   35a20:	cmp	r0, #0
   35a24:	beq	35aa8 <GetDataSlab+0x194c>
   35a28:	ldr	r1, [sp, #88]	; 0x58
   35a2c:	mov	r3, ip
   35a30:	ldr	sl, [sp, #36]	; 0x24
   35a34:	ldr	ip, [sp, #32]
   35a38:	mov	r8, r6
   35a3c:	mov	r0, #0
   35a40:	add	r6, sp, #128	; 0x80
   35a44:	mov	r7, r1
   35a48:	ldrh	lr, [r3]
   35a4c:	add	r2, r3, r4
   35a50:	add	r1, r1, #16
   35a54:	add	r3, r3, ip
   35a58:	subs	sl, sl, #2
   35a5c:	add	r0, r0, #4
   35a60:	strh	lr, [sp, #124]	; 0x7c
   35a64:	vld1.16	{d16[0]}, [r8 :16]
   35a68:	vmovl.s8	q8, d16
   35a6c:	vmovl.s16	q0, d16
   35a70:	vcvt.f64.s32	d17, s1
   35a74:	vcvt.f64.s32	d16, s0
   35a78:	vst1.64	{d16-d17}, [r7], r9
   35a7c:	ldrh	r2, [r2]
   35a80:	strh	r2, [sp, #128]	; 0x80
   35a84:	vld1.16	{d16[0]}, [r6 :16]
   35a88:	vmovl.s8	q8, d16
   35a8c:	vmovl.s16	q0, d16
   35a90:	vcvt.f64.s32	d17, s1
   35a94:	vcvt.f64.s32	d16, s0
   35a98:	vst1.64	{d16-d17}, [r1]
   35a9c:	mov	r1, r7
   35aa0:	bne	35a48 <GetDataSlab+0x18ec>
   35aa4:	b	35aac <GetDataSlab+0x1950>
   35aa8:	mov	r0, #0
   35aac:	ldr	r1, [sp, #48]	; 0x30
   35ab0:	ldr	ip, [sp, #92]	; 0x5c
   35ab4:	ldr	r8, [sp, #84]	; 0x54
   35ab8:	cmp	r1, #0
   35abc:	beq	35af4 <GetDataSlab+0x1998>
   35ac0:	ldr	r1, [sp, #68]	; 0x44
   35ac4:	mla	r1, r0, r1, ip
   35ac8:	ldrh	r1, [r1]
   35acc:	strh	r1, [sp, #120]	; 0x78
   35ad0:	add	r1, sp, #120	; 0x78
   35ad4:	vld1.16	{d16[0]}, [r1 :16]
   35ad8:	vmovl.s8	q8, d16
   35adc:	vmovl.s16	q0, d16
   35ae0:	vcvt.f64.s32	d17, s1
   35ae4:	vcvt.f64.s32	d16, s0
   35ae8:	ldr	r1, [sp, #88]	; 0x58
   35aec:	add	r0, r1, r0, lsl #3
   35af0:	vst1.64	{d16-d17}, [r0]
   35af4:	ldr	r1, [sp, #44]	; 0x2c
   35af8:	ldr	r0, [sp, #88]	; 0x58
   35afc:	ldr	lr, [sp, #76]	; 0x4c
   35b00:	add	r0, r0, r1, lsl #3
   35b04:	cmp	r5, r1
   35b08:	str	r0, [sp, #88]	; 0x58
   35b0c:	mov	r0, r1
   35b10:	bne	359a4 <GetDataSlab+0x1848>
   35b14:	b	358d4 <GetDataSlab+0x1778>
   35b18:	ldr	r7, [sp, #84]	; 0x54
   35b1c:	mov	r0, #1
   35b20:	sub	r1, r7, #1
   35b24:	cmp	r1, #11
   35b28:	bhi	63df4 <GetDataSlab+0x2fc98>
   35b2c:	add	r2, pc, #8
   35b30:	ldr	r3, [sp, #76]	; 0x4c
   35b34:	ldr	r1, [r2, r1, lsl #2]
   35b38:	add	pc, r2, r1
   35b3c:	.word	0x00000030
   35b40:	.word	0x0002712c
   35b44:	.word	0x000273fc
   35b48:	.word	0x00027690
   35b4c:	.word	0x00027924
   35b50:	.word	0x00027b5c
   35b54:	.word	0x00027d94
   35b58:	.word	0x0002e2b8
   35b5c:	.word	0x00027ea4
   35b60:	.word	0x0002e2b8
   35b64:	.word	0x0002e2b8
   35b68:	.word	0x000280d0
   35b6c:	cmp	r3, #1
   35b70:	blt	35058 <GetDataSlab+0xefc>
   35b74:	cmp	r5, #1
   35b78:	mov	r0, #0
   35b7c:	blt	5b6a4 <GetDataSlab+0x27548>
   35b80:	ldr	r0, [sp, #72]	; 0x48
   35b84:	ldr	r2, [sp, #60]	; 0x3c
   35b88:	ldr	r3, [sp, #56]	; 0x38
   35b8c:	cmp	r5, #3
   35b90:	mov	r9, #32
   35b94:	mul	r0, r0, r8
   35b98:	mla	r1, r3, r8, r2
   35b9c:	str	r0, [sp, #72]	; 0x48
   35ba0:	ldr	r0, [sp, #80]	; 0x50
   35ba4:	str	r1, [sp, #52]	; 0x34
   35ba8:	add	r0, r0, r1
   35bac:	mov	r1, #1
   35bb0:	str	r0, [sp, #92]	; 0x5c
   35bb4:	sub	r0, r5, #4
   35bb8:	add	r1, r1, r0, lsr #2
   35bbc:	lsr	r0, r0, #2
   35bc0:	str	r0, [sp, #40]	; 0x28
   35bc4:	and	r7, r1, #1
   35bc8:	sub	r1, r1, r7
   35bcc:	str	r7, [sp, #48]	; 0x30
   35bd0:	str	r1, [sp, #36]	; 0x24
   35bd4:	add	r1, r5, r2
   35bd8:	mov	r2, #0
   35bdc:	mla	r1, r3, r8, r1
   35be0:	str	r2, [sp, #84]	; 0x54
   35be4:	mov	r2, #0
   35be8:	movwhi	r2, #1
   35bec:	str	r1, [sp, #56]	; 0x38
   35bf0:	ldr	r1, [sp, #68]	; 0x44
   35bf4:	mov	r3, r1
   35bf8:	sub	r1, r1, #1
   35bfc:	clz	r1, r1
   35c00:	lsr	r1, r1, #5
   35c04:	and	r1, r2, r1
   35c08:	lsl	r2, r3, #1
   35c0c:	str	r1, [sp, #64]	; 0x40
   35c10:	lsl	r1, r3, #3
   35c14:	str	r1, [sp, #32]
   35c18:	lsl	r1, r3, #2
   35c1c:	ldr	lr, [sp, #32]
   35c20:	str	r1, [sp, #28]
   35c24:	and	r1, r5, #1
   35c28:	str	r1, [sp, #60]	; 0x3c
   35c2c:	bic	r1, r5, #3
   35c30:	str	r1, [sp, #44]	; 0x2c
   35c34:	ldr	r0, [sp, #64]	; 0x40
   35c38:	cmp	r0, #0
   35c3c:	bne	35c78 <GetDataSlab+0x1b1c>
   35c40:	b	35d00 <GetDataSlab+0x1ba4>
   35c44:	ldr	r0, [sp, #72]	; 0x48
   35c48:	ldr	r1, [sp, #76]	; 0x4c
   35c4c:	add	r6, r6, #1
   35c50:	str	sl, [sp, #88]	; 0x58
   35c54:	str	r6, [sp, #84]	; 0x54
   35c58:	add	ip, ip, r0
   35c5c:	mov	r0, #0
   35c60:	cmp	r6, r1
   35c64:	str	ip, [sp, #92]	; 0x5c
   35c68:	beq	5b6a4 <GetDataSlab+0x27548>
   35c6c:	ldr	r0, [sp, #64]	; 0x40
   35c70:	cmp	r0, #0
   35c74:	beq	35d00 <GetDataSlab+0x1ba4>
   35c78:	ldr	r0, [sp, #72]	; 0x48
   35c7c:	ldr	r6, [sp, #84]	; 0x54
   35c80:	ldr	r1, [sp, #56]	; 0x38
   35c84:	ldr	r3, [sp, #80]	; 0x50
   35c88:	ldr	sl, [sp, #88]	; 0x58
   35c8c:	ldr	ip, [sp, #92]	; 0x5c
   35c90:	add	r7, sp, #180	; 0xb4
   35c94:	mul	r0, r0, r6
   35c98:	add	r1, r1, r0
   35c9c:	add	r1, r3, r1
   35ca0:	cmp	r1, sl
   35ca4:	bls	35d7c <GetDataSlab+0x1c20>
   35ca8:	ldr	r4, [sp, #52]	; 0x34
   35cac:	add	r1, sl, r5, lsl #2
   35cb0:	add	r0, r4, r0
   35cb4:	add	r0, r3, r0
   35cb8:	cmp	r0, r1
   35cbc:	bcs	35d7c <GetDataSlab+0x1c20>
   35cc0:	mov	r0, #0
   35cc4:	ldr	r1, [sp, #60]	; 0x3c
   35cc8:	cmp	r1, #0
   35ccc:	beq	35d18 <GetDataSlab+0x1bbc>
   35cd0:	ldr	r1, [sp, #68]	; 0x44
   35cd4:	orr	r3, r0, #1
   35cd8:	mla	r1, r0, r1, ip
   35cdc:	ldrsb	r1, [r1]
   35ce0:	vmov	s0, r1
   35ce4:	vcvt.f32.s32	s0, s0
   35ce8:	vstr	s0, [sl]
   35cec:	add	sl, sl, #4
   35cf0:	orr	r0, r0, #1
   35cf4:	cmp	r5, r0
   35cf8:	bne	35d28 <GetDataSlab+0x1bcc>
   35cfc:	b	35c44 <GetDataSlab+0x1ae8>
   35d00:	add	ip, sp, #84	; 0x54
   35d04:	mov	r0, #0
   35d08:	ldm	ip, {r6, sl, ip}
   35d0c:	ldr	r1, [sp, #60]	; 0x3c
   35d10:	cmp	r1, #0
   35d14:	bne	35cd0 <GetDataSlab+0x1b74>
   35d18:	mov	r3, r0
   35d1c:	orr	r0, r0, #1
   35d20:	cmp	r5, r0
   35d24:	beq	35c44 <GetDataSlab+0x1ae8>
   35d28:	ldr	r4, [sp, #68]	; 0x44
   35d2c:	sub	r1, r5, r3
   35d30:	mul	r0, r4, r3
   35d34:	add	r3, r3, #1
   35d38:	mul	r3, r4, r3
   35d3c:	mov	r4, ip
   35d40:	add	r7, r4, r0
   35d44:	subs	r1, r1, #2
   35d48:	ldrsb	r7, [r7]
   35d4c:	vmov	s0, r7
   35d50:	add	r7, r4, r3
   35d54:	add	r4, r4, r2
   35d58:	vcvt.f32.s32	s0, s0
   35d5c:	vstr	s0, [sl]
   35d60:	ldrsb	r7, [r7]
   35d64:	vmov	s0, r7
   35d68:	vcvt.f32.s32	s0, s0
   35d6c:	vstr	s0, [sl, #4]
   35d70:	add	sl, sl, #8
   35d74:	bne	35d40 <GetDataSlab+0x1be4>
   35d78:	b	35c44 <GetDataSlab+0x1ae8>
   35d7c:	ldr	r0, [sp, #40]	; 0x28
   35d80:	cmp	r0, #0
   35d84:	beq	35dec <GetDataSlab+0x1c90>
   35d88:	mov	r3, ip
   35d8c:	ldr	r1, [sp, #36]	; 0x24
   35d90:	ldr	ip, [sp, #28]
   35d94:	mov	r0, #0
   35d98:	add	r6, sp, #184	; 0xb8
   35d9c:	ldr	r4, [r3]
   35da0:	subs	r1, r1, #2
   35da4:	add	r0, r0, #8
   35da8:	str	r4, [sp, #180]	; 0xb4
   35dac:	add	r4, sl, #16
   35db0:	vld1.32	{d16[0]}, [r7 :32]
   35db4:	vmovl.s8	q8, d16
   35db8:	vmovl.s16	q8, d16
   35dbc:	vcvt.f32.s32	q8, q8
   35dc0:	vst1.32	{d16-d17}, [sl], r9
   35dc4:	ldr	r8, [r3, ip]
   35dc8:	add	r3, r3, lr
   35dcc:	str	r8, [sp, #184]	; 0xb8
   35dd0:	vld1.32	{d16[0]}, [r6 :32]
   35dd4:	vmovl.s8	q8, d16
   35dd8:	vmovl.s16	q8, d16
   35ddc:	vcvt.f32.s32	q8, q8
   35de0:	vst1.32	{d16-d17}, [r4]
   35de4:	bne	35d9c <GetDataSlab+0x1c40>
   35de8:	b	35df0 <GetDataSlab+0x1c94>
   35dec:	mov	r0, #0
   35df0:	add	ip, sp, #84	; 0x54
   35df4:	ldr	r1, [sp, #48]	; 0x30
   35df8:	ldm	ip, {r6, sl, ip}
   35dfc:	cmp	r1, #0
   35e00:	beq	35e30 <GetDataSlab+0x1cd4>
   35e04:	ldr	r1, [sp, #68]	; 0x44
   35e08:	mul	r1, r0, r1
   35e0c:	add	r0, sl, r0, lsl #2
   35e10:	ldr	r1, [ip, r1]
   35e14:	str	r1, [sp, #176]	; 0xb0
   35e18:	add	r1, sp, #176	; 0xb0
   35e1c:	vld1.32	{d16[0]}, [r1 :32]
   35e20:	vmovl.s8	q8, d16
   35e24:	vmovl.s16	q8, d16
   35e28:	vcvt.f32.s32	q8, q8
   35e2c:	vst1.32	{d16-d17}, [r0]
   35e30:	ldr	r0, [sp, #44]	; 0x2c
   35e34:	add	sl, sl, r0, lsl #2
   35e38:	cmp	r5, r0
   35e3c:	bne	35d0c <GetDataSlab+0x1bb0>
   35e40:	b	35c44 <GetDataSlab+0x1ae8>
   35e44:	ldr	r0, [sp, #84]	; 0x54
   35e48:	ldr	r6, [sp, #88]	; 0x58
   35e4c:	sub	r2, r0, #1
   35e50:	mov	r0, #1
   35e54:	cmp	r2, #11
   35e58:	bhi	6380c <GetDataSlab+0x2f6b0>
   35e5c:	add	r7, pc, #8
   35e60:	ldr	r4, [sp, #76]	; 0x4c
   35e64:	ldr	r2, [r7, r2, lsl #2]
   35e68:	add	pc, r7, r2
   35e6c:	.word	0x00000030
   35e70:	.word	0x00028074
   35e74:	.word	0x00028100
   35e78:	.word	0x00028194
   35e7c:	.word	0x00028228
   35e80:	.word	0x000282bc
   35e84:	.word	0x00028350
   35e88:	.word	0x0002d9a4
   35e8c:	.word	0x000283f0
   35e90:	.word	0x0002d9a4
   35e94:	.word	0x0002d9a4
   35e98:	.word	0x00028490
   35e9c:	cmp	r4, #1
   35ea0:	blt	35058 <GetDataSlab+0xefc>
   35ea4:	ldr	r0, [sp, #60]	; 0x3c
   35ea8:	ldr	r1, [sp, #56]	; 0x38
   35eac:	ldr	r2, [sp, #80]	; 0x50
   35eb0:	mov	r7, #0
   35eb4:	mla	r0, r1, r8, r0
   35eb8:	add	r2, r2, r0
   35ebc:	cmp	r5, #1
   35ec0:	bge	35ef0 <GetDataSlab+0x1d94>
   35ec4:	ldr	r1, [sp, #76]	; 0x4c
   35ec8:	ldr	r0, [sp, #72]	; 0x48
   35ecc:	mla	r2, r8, r0, r2
   35ed0:	add	r7, r7, #1
   35ed4:	str	r0, [sp, #72]	; 0x48
   35ed8:	mov	r0, #0
   35edc:	str	r1, [sp, #76]	; 0x4c
   35ee0:	cmp	r7, r1
   35ee4:	bge	5b6a4 <GetDataSlab+0x27548>
   35ee8:	cmp	r5, #1
   35eec:	blt	35ec4 <GetDataSlab+0x1d68>
   35ef0:	mov	r0, #0
   35ef4:	ldr	r5, [sl]
   35ef8:	mul	r5, r5, r0
   35efc:	ldrb	r5, [r2, r5]
   35f00:	strb	r5, [r6, r0]
   35f04:	add	r0, r0, #1
   35f08:	ldr	r5, [r9]
   35f0c:	cmp	r0, r5
   35f10:	blt	35ef4 <GetDataSlab+0x1d98>
   35f14:	add	r6, r6, r0
   35f18:	ldr	r1, [r3]
   35f1c:	ldr	r8, [lr]
   35f20:	ldr	r0, [ip]
   35f24:	b	35ecc <GetDataSlab+0x1d70>
   35f28:	ldr	r0, [sp, #84]	; 0x54
   35f2c:	ldr	r6, [sp, #88]	; 0x58
   35f30:	sub	r2, r0, #1
   35f34:	mov	r0, #1
   35f38:	cmp	r2, #11
   35f3c:	bhi	638bc <GetDataSlab+0x2f760>
   35f40:	add	r7, pc, #8
   35f44:	ldr	r4, [sp, #76]	; 0x4c
   35f48:	ldr	r2, [r7, r2, lsl #2]
   35f4c:	add	pc, r7, r2
   35f50:	.word	0x00000030
   35f54:	.word	0x00028434
   35f58:	.word	0x000284c0
   35f5c:	.word	0x00028554
   35f60:	.word	0x000285e8
   35f64:	.word	0x0002867c
   35f68:	.word	0x00028710
   35f6c:	.word	0x0002d970
   35f70:	.word	0x000287b0
   35f74:	.word	0x0002d970
   35f78:	.word	0x0002d970
   35f7c:	.word	0x00028850
   35f80:	cmp	r4, #1
   35f84:	blt	35058 <GetDataSlab+0xefc>
   35f88:	ldr	r0, [sp, #60]	; 0x3c
   35f8c:	ldr	r1, [sp, #56]	; 0x38
   35f90:	ldr	r2, [sp, #80]	; 0x50
   35f94:	mov	r7, #0
   35f98:	mla	r0, r1, r8, r0
   35f9c:	add	r2, r2, r0
   35fa0:	cmp	r5, #1
   35fa4:	bge	35fd4 <GetDataSlab+0x1e78>
   35fa8:	ldr	r1, [sp, #76]	; 0x4c
   35fac:	ldr	r0, [sp, #72]	; 0x48
   35fb0:	mla	r2, r8, r0, r2
   35fb4:	add	r7, r7, #1
   35fb8:	str	r0, [sp, #72]	; 0x48
   35fbc:	mov	r0, #0
   35fc0:	str	r1, [sp, #76]	; 0x4c
   35fc4:	cmp	r7, r1
   35fc8:	bge	5b6a4 <GetDataSlab+0x27548>
   35fcc:	cmp	r5, #1
   35fd0:	blt	35fa8 <GetDataSlab+0x1e4c>
   35fd4:	mov	r0, #0
   35fd8:	ldr	r5, [sl]
   35fdc:	mul	r5, r5, r0
   35fe0:	ldrb	r5, [r2, r5]
   35fe4:	strb	r5, [r6, r0]
   35fe8:	add	r0, r0, #1
   35fec:	ldr	r5, [r9]
   35ff0:	cmp	r0, r5
   35ff4:	blt	35fd8 <GetDataSlab+0x1e7c>
   35ff8:	add	r6, r6, r0
   35ffc:	ldr	r1, [r3]
   36000:	ldr	r8, [lr]
   36004:	ldr	r0, [ip]
   36008:	b	35fb0 <GetDataSlab+0x1e54>
   3600c:	ldr	r0, [sp, #84]	; 0x54
   36010:	ldr	ip, [sp, #88]	; 0x58
   36014:	sub	r1, r0, #1
   36018:	mov	r0, #1
   3601c:	cmp	r1, #11
   36020:	bhi	640dc <GetDataSlab+0x2ff80>
   36024:	add	r2, pc, #8
   36028:	ldr	r3, [sp, #76]	; 0x4c
   3602c:	ldr	r1, [r2, r1, lsl #2]
   36030:	add	pc, r2, r1
   36034:	.word	0x00000030
   36038:	.word	0x000287f4
   3603c:	.word	0x00028ab4
   36040:	.word	0x00028d44
   36044:	.word	0x00028fd4
   36048:	.word	0x000291d8
   3604c:	.word	0x000293dc
   36050:	.word	0x0002e0a8
   36054:	.word	0x00029628
   36058:	.word	0x0002e0a8
   3605c:	.word	0x0002e0a8
   36060:	.word	0x00029720
   36064:	cmp	r3, #1
   36068:	blt	35058 <GetDataSlab+0xefc>
   3606c:	cmp	r5, #1
   36070:	mov	r0, #0
   36074:	blt	5b6a4 <GetDataSlab+0x27548>
   36078:	ldr	r0, [sp, #72]	; 0x48
   3607c:	ldr	r3, [sp, #60]	; 0x3c
   36080:	ldr	r7, [sp, #56]	; 0x38
   36084:	mov	r2, r8
   36088:	mov	r2, #0
   3608c:	cmp	r5, #7
   36090:	ldr	sl, [sp, #88]	; 0x58
   36094:	str	r2, [sp, #84]	; 0x54
   36098:	mov	r2, #0
   3609c:	movwhi	r2, #1
   360a0:	mul	r0, r0, r8
   360a4:	mla	r1, r7, r8, r3
   360a8:	str	r0, [sp, #72]	; 0x48
   360ac:	ldr	r0, [sp, #80]	; 0x50
   360b0:	str	r1, [sp, #52]	; 0x34
   360b4:	add	r0, r0, r1
   360b8:	mov	r1, #1
   360bc:	str	r0, [sp, #92]	; 0x5c
   360c0:	sub	r0, r5, #8
   360c4:	add	r1, r1, r0, lsr #3
   360c8:	lsr	r0, r0, #3
   360cc:	str	r0, [sp, #40]	; 0x28
   360d0:	and	r6, r1, #1
   360d4:	sub	r1, r1, r6
   360d8:	str	r6, [sp, #48]	; 0x30
   360dc:	str	r1, [sp, #36]	; 0x24
   360e0:	add	r1, r5, r3
   360e4:	mla	r1, r7, r8, r1
   360e8:	str	r1, [sp, #56]	; 0x38
   360ec:	ldr	r1, [sp, #68]	; 0x44
   360f0:	mov	r3, r1
   360f4:	sub	r1, r1, #1
   360f8:	clz	r1, r1
   360fc:	lsr	r1, r1, #5
   36100:	and	r1, r2, r1
   36104:	lsl	r2, r3, #1
   36108:	str	r1, [sp, #64]	; 0x40
   3610c:	lsl	r1, r3, #4
   36110:	str	r1, [sp, #32]
   36114:	lsl	r1, r3, #3
   36118:	str	r1, [sp, #28]
   3611c:	ldr	r8, [sp, #32]
   36120:	and	r1, r5, #1
   36124:	ldr	lr, [sp, #28]
   36128:	str	r1, [sp, #60]	; 0x3c
   3612c:	bic	r1, r5, #7
   36130:	str	r1, [sp, #44]	; 0x2c
   36134:	ldr	r0, [sp, #64]	; 0x40
   36138:	cmp	r0, #0
   3613c:	bne	36174 <GetDataSlab+0x2018>
   36140:	b	361e8 <GetDataSlab+0x208c>
   36144:	ldr	r0, [sp, #72]	; 0x48
   36148:	ldr	r1, [sp, #76]	; 0x4c
   3614c:	add	r6, r6, #1
   36150:	str	r6, [sp, #84]	; 0x54
   36154:	add	ip, ip, r0
   36158:	mov	r0, #0
   3615c:	cmp	r6, r1
   36160:	str	ip, [sp, #92]	; 0x5c
   36164:	beq	5b6a4 <GetDataSlab+0x27548>
   36168:	ldr	r0, [sp, #64]	; 0x40
   3616c:	cmp	r0, #0
   36170:	beq	361e8 <GetDataSlab+0x208c>
   36174:	ldr	r0, [sp, #72]	; 0x48
   36178:	ldr	r6, [sp, #84]	; 0x54
   3617c:	ldr	r1, [sp, #56]	; 0x38
   36180:	ldr	r3, [sp, #80]	; 0x50
   36184:	ldr	ip, [sp, #92]	; 0x5c
   36188:	mul	r0, r0, r6
   3618c:	add	r1, r1, r0
   36190:	add	r1, r3, r1
   36194:	cmp	r1, sl
   36198:	bls	36254 <GetDataSlab+0x20f8>
   3619c:	ldr	r7, [sp, #52]	; 0x34
   361a0:	add	r1, sl, r5, lsl #1
   361a4:	add	r0, r7, r0
   361a8:	add	r0, r3, r0
   361ac:	cmp	r0, r1
   361b0:	bcs	36254 <GetDataSlab+0x20f8>
   361b4:	mov	r0, #0
   361b8:	ldr	r1, [sp, #60]	; 0x3c
   361bc:	cmp	r1, #0
   361c0:	beq	36200 <GetDataSlab+0x20a4>
   361c4:	ldr	r1, [sp, #68]	; 0x44
   361c8:	orr	r3, r0, #1
   361cc:	mla	r1, r0, r1, ip
   361d0:	ldrsb	r1, [r1]
   361d4:	strh	r1, [sl], #2
   361d8:	orr	r0, r0, #1
   361dc:	cmp	r5, r0
   361e0:	bne	36210 <GetDataSlab+0x20b4>
   361e4:	b	36144 <GetDataSlab+0x1fe8>
   361e8:	ldr	ip, [sp, #92]	; 0x5c
   361ec:	ldr	r6, [sp, #84]	; 0x54
   361f0:	mov	r0, #0
   361f4:	ldr	r1, [sp, #60]	; 0x3c
   361f8:	cmp	r1, #0
   361fc:	bne	361c4 <GetDataSlab+0x2068>
   36200:	mov	r3, r0
   36204:	orr	r0, r0, #1
   36208:	cmp	r5, r0
   3620c:	beq	36144 <GetDataSlab+0x1fe8>
   36210:	ldr	r7, [sp, #68]	; 0x44
   36214:	sub	r1, r5, r3
   36218:	mov	r4, ip
   3621c:	mul	r0, r7, r3
   36220:	add	r3, r3, #1
   36224:	mul	r3, r7, r3
   36228:	add	r7, r4, r0
   3622c:	subs	r1, r1, #2
   36230:	ldrsb	r7, [r7]
   36234:	strh	r7, [sl]
   36238:	add	r7, r4, r3
   3623c:	add	r4, r4, r2
   36240:	ldrsb	r7, [r7]
   36244:	strh	r7, [sl, #2]
   36248:	add	sl, sl, #4
   3624c:	bne	36228 <GetDataSlab+0x20cc>
   36250:	b	36144 <GetDataSlab+0x1fe8>
   36254:	ldr	r0, [sp, #40]	; 0x28
   36258:	cmp	r0, #0
   3625c:	beq	362d0 <GetDataSlab+0x2174>
   36260:	ldr	r1, [sp, #36]	; 0x24
   36264:	mov	r0, #0
   36268:	mov	r3, ip
   3626c:	mov	r9, sl
   36270:	ldr	r4, [r3]
   36274:	ldr	ip, [r3, #4]
   36278:	add	r7, sp, #400	; 0x190
   3627c:	subs	r1, r1, #2
   36280:	add	r0, r0, #16
   36284:	str	r4, [sp, #400]	; 0x190
   36288:	str	ip, [sp, #404]	; 0x194
   3628c:	add	r4, r9, #16
   36290:	vld1.8	{d16}, [r7 :64]
   36294:	mov	r7, #32
   36298:	vmovl.s8	q8, d16
   3629c:	vst1.16	{d16-d17}, [r9], r7
   362a0:	add	r7, r3, r8
   362a4:	ldr	r6, [r3, lr]!
   362a8:	str	r6, [sp, #408]	; 0x198
   362ac:	ldr	r3, [r3, #4]
   362b0:	str	r3, [sp, #412]	; 0x19c
   362b4:	add	r3, sp, #408	; 0x198
   362b8:	vld1.8	{d16}, [r3 :64]
   362bc:	mov	r3, r7
   362c0:	vmovl.s8	q8, d16
   362c4:	vst1.16	{d16-d17}, [r4]
   362c8:	bne	36270 <GetDataSlab+0x2114>
   362cc:	b	362d4 <GetDataSlab+0x2178>
   362d0:	mov	r0, #0
   362d4:	ldr	r1, [sp, #48]	; 0x30
   362d8:	ldr	ip, [sp, #92]	; 0x5c
   362dc:	cmp	r1, #0
   362e0:	beq	36314 <GetDataSlab+0x21b8>
   362e4:	ldr	r1, [sp, #68]	; 0x44
   362e8:	mov	r3, ip
   362ec:	mul	r1, r0, r1
   362f0:	add	r0, sl, r0, lsl #1
   362f4:	ldr	r1, [r3, r1]!
   362f8:	str	r1, [sp, #392]	; 0x188
   362fc:	ldr	r1, [r3, #4]
   36300:	str	r1, [sp, #396]	; 0x18c
   36304:	add	r1, sp, #392	; 0x188
   36308:	vld1.8	{d16}, [r1 :64]
   3630c:	vmovl.s8	q8, d16
   36310:	vst1.16	{d16-d17}, [r0]
   36314:	ldr	r0, [sp, #44]	; 0x2c
   36318:	ldr	r6, [sp, #84]	; 0x54
   3631c:	add	sl, sl, r0, lsl #1
   36320:	cmp	r5, r0
   36324:	bne	361f4 <GetDataSlab+0x2098>
   36328:	b	36144 <GetDataSlab+0x1fe8>
   3632c:	ldr	r0, [sp, #84]	; 0x54
   36330:	ldr	ip, [sp, #88]	; 0x58
   36334:	sub	r1, r0, #1
   36338:	mov	r0, #1
   3633c:	cmp	r1, #11
   36340:	bhi	64318 <GetDataSlab+0x301bc>
   36344:	add	r2, pc, #8
   36348:	ldr	r3, [sp, #76]	; 0x4c
   3634c:	ldr	r1, [r2, r1, lsl #2]
   36350:	add	pc, r2, r1
   36354:	.word	0x00000030
   36358:	.word	0x0002960c
   3635c:	.word	0x000298cc
   36360:	.word	0x00029b5c
   36364:	.word	0x00029dec
   36368:	.word	0x00029ff0
   3636c:	.word	0x0002a1f4
   36370:	.word	0x0002dfc4
   36374:	.word	0x0002a428
   36378:	.word	0x0002dfc4
   3637c:	.word	0x0002dfc4
   36380:	.word	0x0002a514
   36384:	cmp	r3, #1
   36388:	blt	35058 <GetDataSlab+0xefc>
   3638c:	cmp	r5, #1
   36390:	mov	r0, #0
   36394:	blt	5b6a4 <GetDataSlab+0x27548>
   36398:	ldr	r0, [sp, #72]	; 0x48
   3639c:	ldr	r3, [sp, #60]	; 0x3c
   363a0:	ldr	r7, [sp, #56]	; 0x38
   363a4:	mov	r2, r8
   363a8:	mov	r2, #0
   363ac:	cmp	r5, #7
   363b0:	ldr	sl, [sp, #88]	; 0x58
   363b4:	str	r2, [sp, #84]	; 0x54
   363b8:	mov	r2, #0
   363bc:	movwhi	r2, #1
   363c0:	mul	r0, r0, r8
   363c4:	mla	r1, r7, r8, r3
   363c8:	str	r0, [sp, #72]	; 0x48
   363cc:	ldr	r0, [sp, #80]	; 0x50
   363d0:	str	r1, [sp, #52]	; 0x34
   363d4:	add	r0, r0, r1
   363d8:	mov	r1, #1
   363dc:	str	r0, [sp, #92]	; 0x5c
   363e0:	sub	r0, r5, #8
   363e4:	add	r1, r1, r0, lsr #3
   363e8:	lsr	r0, r0, #3
   363ec:	str	r0, [sp, #40]	; 0x28
   363f0:	and	r6, r1, #1
   363f4:	sub	r1, r1, r6
   363f8:	str	r6, [sp, #48]	; 0x30
   363fc:	str	r1, [sp, #36]	; 0x24
   36400:	add	r1, r5, r3
   36404:	mla	r1, r7, r8, r1
   36408:	str	r1, [sp, #56]	; 0x38
   3640c:	ldr	r1, [sp, #68]	; 0x44
   36410:	mov	r3, r1
   36414:	sub	r1, r1, #1
   36418:	clz	r1, r1
   3641c:	lsr	r1, r1, #5
   36420:	and	r1, r2, r1
   36424:	lsl	r2, r3, #1
   36428:	str	r1, [sp, #64]	; 0x40
   3642c:	lsl	r1, r3, #4
   36430:	str	r1, [sp, #32]
   36434:	lsl	r1, r3, #3
   36438:	str	r1, [sp, #28]
   3643c:	ldr	r8, [sp, #32]
   36440:	and	r1, r5, #1
   36444:	ldr	lr, [sp, #28]
   36448:	str	r1, [sp, #60]	; 0x3c
   3644c:	bic	r1, r5, #7
   36450:	str	r1, [sp, #44]	; 0x2c
   36454:	ldr	r0, [sp, #64]	; 0x40
   36458:	cmp	r0, #0
   3645c:	bne	36494 <GetDataSlab+0x2338>
   36460:	b	36508 <GetDataSlab+0x23ac>
   36464:	ldr	r0, [sp, #72]	; 0x48
   36468:	ldr	r1, [sp, #76]	; 0x4c
   3646c:	add	r6, r6, #1
   36470:	str	r6, [sp, #84]	; 0x54
   36474:	add	ip, ip, r0
   36478:	mov	r0, #0
   3647c:	cmp	r6, r1
   36480:	str	ip, [sp, #92]	; 0x5c
   36484:	beq	5b6a4 <GetDataSlab+0x27548>
   36488:	ldr	r0, [sp, #64]	; 0x40
   3648c:	cmp	r0, #0
   36490:	beq	36508 <GetDataSlab+0x23ac>
   36494:	ldr	r0, [sp, #72]	; 0x48
   36498:	ldr	r6, [sp, #84]	; 0x54
   3649c:	ldr	r1, [sp, #56]	; 0x38
   364a0:	ldr	r3, [sp, #80]	; 0x50
   364a4:	ldr	ip, [sp, #92]	; 0x5c
   364a8:	mul	r0, r0, r6
   364ac:	add	r1, r1, r0
   364b0:	add	r1, r3, r1
   364b4:	cmp	r1, sl
   364b8:	bls	36574 <GetDataSlab+0x2418>
   364bc:	ldr	r7, [sp, #52]	; 0x34
   364c0:	add	r1, sl, r5, lsl #1
   364c4:	add	r0, r7, r0
   364c8:	add	r0, r3, r0
   364cc:	cmp	r0, r1
   364d0:	bcs	36574 <GetDataSlab+0x2418>
   364d4:	mov	r0, #0
   364d8:	ldr	r1, [sp, #60]	; 0x3c
   364dc:	cmp	r1, #0
   364e0:	beq	36520 <GetDataSlab+0x23c4>
   364e4:	ldr	r1, [sp, #68]	; 0x44
   364e8:	orr	r3, r0, #1
   364ec:	mla	r1, r0, r1, ip
   364f0:	ldrsb	r1, [r1]
   364f4:	strh	r1, [sl], #2
   364f8:	orr	r0, r0, #1
   364fc:	cmp	r5, r0
   36500:	bne	36530 <GetDataSlab+0x23d4>
   36504:	b	36464 <GetDataSlab+0x2308>
   36508:	ldr	ip, [sp, #92]	; 0x5c
   3650c:	ldr	r6, [sp, #84]	; 0x54
   36510:	mov	r0, #0
   36514:	ldr	r1, [sp, #60]	; 0x3c
   36518:	cmp	r1, #0
   3651c:	bne	364e4 <GetDataSlab+0x2388>
   36520:	mov	r3, r0
   36524:	orr	r0, r0, #1
   36528:	cmp	r5, r0
   3652c:	beq	36464 <GetDataSlab+0x2308>
   36530:	ldr	r7, [sp, #68]	; 0x44
   36534:	sub	r1, r5, r3
   36538:	mov	r4, ip
   3653c:	mul	r0, r7, r3
   36540:	add	r3, r3, #1
   36544:	mul	r3, r7, r3
   36548:	add	r7, r4, r0
   3654c:	subs	r1, r1, #2
   36550:	ldrsb	r7, [r7]
   36554:	strh	r7, [sl]
   36558:	add	r7, r4, r3
   3655c:	add	r4, r4, r2
   36560:	ldrsb	r7, [r7]
   36564:	strh	r7, [sl, #2]
   36568:	add	sl, sl, #4
   3656c:	bne	36548 <GetDataSlab+0x23ec>
   36570:	b	36464 <GetDataSlab+0x2308>
   36574:	ldr	r0, [sp, #40]	; 0x28
   36578:	cmp	r0, #0
   3657c:	beq	365f0 <GetDataSlab+0x2494>
   36580:	ldr	r1, [sp, #36]	; 0x24
   36584:	mov	r0, #0
   36588:	mov	r3, ip
   3658c:	mov	r9, sl
   36590:	ldr	r4, [r3]
   36594:	ldr	ip, [r3, #4]
   36598:	add	r7, sp, #448	; 0x1c0
   3659c:	subs	r1, r1, #2
   365a0:	add	r0, r0, #16
   365a4:	str	r4, [sp, #448]	; 0x1c0
   365a8:	str	ip, [sp, #452]	; 0x1c4
   365ac:	add	r4, r9, #16
   365b0:	vld1.8	{d16}, [r7 :64]
   365b4:	mov	r7, #32
   365b8:	vmovl.s8	q8, d16
   365bc:	vst1.16	{d16-d17}, [r9], r7
   365c0:	add	r7, r3, r8
   365c4:	ldr	r6, [r3, lr]!
   365c8:	str	r6, [sp, #456]	; 0x1c8
   365cc:	ldr	r3, [r3, #4]
   365d0:	str	r3, [sp, #460]	; 0x1cc
   365d4:	add	r3, sp, #456	; 0x1c8
   365d8:	vld1.8	{d16}, [r3 :64]
   365dc:	mov	r3, r7
   365e0:	vmovl.s8	q8, d16
   365e4:	vst1.16	{d16-d17}, [r4]
   365e8:	bne	36590 <GetDataSlab+0x2434>
   365ec:	b	365f4 <GetDataSlab+0x2498>
   365f0:	mov	r0, #0
   365f4:	ldr	r1, [sp, #48]	; 0x30
   365f8:	ldr	ip, [sp, #92]	; 0x5c
   365fc:	cmp	r1, #0
   36600:	beq	36634 <GetDataSlab+0x24d8>
   36604:	ldr	r1, [sp, #68]	; 0x44
   36608:	mov	r3, ip
   3660c:	mul	r1, r0, r1
   36610:	add	r0, sl, r0, lsl #1
   36614:	ldr	r1, [r3, r1]!
   36618:	str	r1, [sp, #440]	; 0x1b8
   3661c:	ldr	r1, [r3, #4]
   36620:	str	r1, [sp, #444]	; 0x1bc
   36624:	add	r1, sp, #440	; 0x1b8
   36628:	vld1.8	{d16}, [r1 :64]
   3662c:	vmovl.s8	q8, d16
   36630:	vst1.16	{d16-d17}, [r0]
   36634:	ldr	r0, [sp, #44]	; 0x2c
   36638:	ldr	r6, [sp, #84]	; 0x54
   3663c:	add	sl, sl, r0, lsl #1
   36640:	cmp	r5, r0
   36644:	bne	36514 <GetDataSlab+0x23b8>
   36648:	b	36464 <GetDataSlab+0x2308>
   3664c:	ldr	r0, [sp, #84]	; 0x54
   36650:	sub	r2, r0, #1
   36654:	mov	r0, #1
   36658:	cmp	r2, #11
   3665c:	bhi	6396c <GetDataSlab+0x2f810>
   36660:	add	r7, pc, #8
   36664:	ldr	r6, [sp, #76]	; 0x4c
   36668:	ldr	r2, [r7, r2, lsl #2]
   3666c:	add	pc, r7, r2
   36670:	.word	0x00000030
   36674:	.word	0x0002a404
   36678:	.word	0x0002a4a0
   3667c:	.word	0x0002a548
   36680:	.word	0x0002a5f0
   36684:	.word	0x0002a694
   36688:	.word	0x0002a738
   3668c:	.word	0x0002d300
   36690:	.word	0x0002a7e8
   36694:	.word	0x0002d300
   36698:	.word	0x0002d300
   3669c:	.word	0x0002a898
   366a0:	cmp	r6, #1
   366a4:	blt	35058 <GetDataSlab+0xefc>
   366a8:	ldr	r0, [sp, #60]	; 0x3c
   366ac:	ldr	r1, [sp, #56]	; 0x38
   366b0:	ldr	r2, [sp, #80]	; 0x50
   366b4:	mov	r7, #0
   366b8:	mla	r0, r1, r8, r0
   366bc:	add	r2, r2, r0
   366c0:	cmp	r5, #1
   366c4:	bge	366f4 <GetDataSlab+0x2598>
   366c8:	ldr	r1, [sp, #76]	; 0x4c
   366cc:	ldr	r0, [sp, #72]	; 0x48
   366d0:	mla	r2, r8, r0, r2
   366d4:	add	r7, r7, #1
   366d8:	str	r0, [sp, #72]	; 0x48
   366dc:	mov	r0, #0
   366e0:	str	r1, [sp, #76]	; 0x4c
   366e4:	cmp	r7, r1
   366e8:	bge	5b6a4 <GetDataSlab+0x27548>
   366ec:	cmp	r5, #1
   366f0:	blt	366c8 <GetDataSlab+0x256c>
   366f4:	ldr	r4, [sp, #88]	; 0x58
   366f8:	mov	r0, #0
   366fc:	mov	r6, #0
   36700:	ldr	r5, [sl]
   36704:	add	r0, r0, #4
   36708:	mla	r5, r5, r6, r2
   3670c:	ldrsb	r5, [r5]
   36710:	str	r5, [r4, r6, lsl #2]
   36714:	add	r6, r6, #1
   36718:	ldr	r5, [r9]
   3671c:	cmp	r6, r5
   36720:	blt	36700 <GetDataSlab+0x25a4>
   36724:	add	r4, r4, r0
   36728:	ldr	r1, [r3]
   3672c:	ldr	r8, [lr]
   36730:	ldr	r0, [ip]
   36734:	str	r4, [sp, #88]	; 0x58
   36738:	b	366d0 <GetDataSlab+0x2574>
   3673c:	ldr	r0, [sp, #84]	; 0x54
   36740:	sub	r2, r0, #1
   36744:	mov	r0, #1
   36748:	cmp	r2, #11
   3674c:	bhi	63a2c <GetDataSlab+0x2f8d0>
   36750:	add	r7, pc, #8
   36754:	ldr	r6, [sp, #76]	; 0x4c
   36758:	ldr	r2, [r7, r2, lsl #2]
   3675c:	add	pc, r7, r2
   36760:	.word	0x00000030
   36764:	.word	0x0002a838
   36768:	.word	0x0002a8d4
   3676c:	.word	0x0002a97c
   36770:	.word	0x0002aa24
   36774:	.word	0x0002aac8
   36778:	.word	0x0002ab6c
   3677c:	.word	0x0002d2d0
   36780:	.word	0x0002ac1c
   36784:	.word	0x0002d2d0
   36788:	.word	0x0002d2d0
   3678c:	.word	0x0002accc
   36790:	cmp	r6, #1
   36794:	blt	35058 <GetDataSlab+0xefc>
   36798:	ldr	r0, [sp, #60]	; 0x3c
   3679c:	ldr	r1, [sp, #56]	; 0x38
   367a0:	ldr	r2, [sp, #80]	; 0x50
   367a4:	mov	r7, #0
   367a8:	mla	r0, r1, r8, r0
   367ac:	add	r2, r2, r0
   367b0:	cmp	r5, #1
   367b4:	bge	367e4 <GetDataSlab+0x2688>
   367b8:	ldr	r1, [sp, #76]	; 0x4c
   367bc:	ldr	r0, [sp, #72]	; 0x48
   367c0:	mla	r2, r8, r0, r2
   367c4:	add	r7, r7, #1
   367c8:	str	r0, [sp, #72]	; 0x48
   367cc:	mov	r0, #0
   367d0:	str	r1, [sp, #76]	; 0x4c
   367d4:	cmp	r7, r1
   367d8:	bge	5b6a4 <GetDataSlab+0x27548>
   367dc:	cmp	r5, #1
   367e0:	blt	367b8 <GetDataSlab+0x265c>
   367e4:	ldr	r4, [sp, #88]	; 0x58
   367e8:	mov	r0, #0
   367ec:	mov	r6, #0
   367f0:	ldr	r5, [sl]
   367f4:	add	r0, r0, #4
   367f8:	mla	r5, r5, r6, r2
   367fc:	ldrsb	r5, [r5]
   36800:	str	r5, [r4, r6, lsl #2]
   36804:	add	r6, r6, #1
   36808:	ldr	r5, [r9]
   3680c:	cmp	r6, r5
   36810:	blt	367f0 <GetDataSlab+0x2694>
   36814:	add	r4, r4, r0
   36818:	ldr	r1, [r3]
   3681c:	ldr	r8, [lr]
   36820:	ldr	r0, [ip]
   36824:	str	r4, [sp, #88]	; 0x58
   36828:	b	367c0 <GetDataSlab+0x2664>
   3682c:	ldr	r7, [sp, #84]	; 0x54
   36830:	mov	r0, #1
   36834:	sub	r1, r7, #1
   36838:	cmp	r1, #11
   3683c:	bhi	6455c <GetDataSlab+0x30400>
   36840:	add	r2, pc, #8
   36844:	ldr	r3, [sp, #76]	; 0x4c
   36848:	ldr	r1, [r2, r1, lsl #2]
   3684c:	add	pc, r2, r1
   36850:	.word	0x00000030
   36854:	.word	0x0002ac6c
   36858:	.word	0x0002af58
   3685c:	.word	0x0002b1c8
   36860:	.word	0x0002b444
   36864:	.word	0x0002b6c4
   36868:	.word	0x0002b940
   3686c:	.word	0x0002dd0c
   36870:	.word	0x0002ba4c
   36874:	.word	0x0002dd0c
   36878:	.word	0x0002dd0c
   3687c:	.word	0x0002bb6c
   36880:	cmp	r3, #1
   36884:	blt	35058 <GetDataSlab+0xefc>
   36888:	cmp	r5, #1
   3688c:	mov	r0, #0
   36890:	blt	5b6a4 <GetDataSlab+0x27548>
   36894:	ldr	r0, [sp, #72]	; 0x48
   36898:	ldr	r2, [sp, #60]	; 0x3c
   3689c:	ldr	r3, [sp, #56]	; 0x38
   368a0:	cmp	r5, #1
   368a4:	mul	r0, r0, r8
   368a8:	mla	r1, r3, r8, r2
   368ac:	str	r0, [sp, #72]	; 0x48
   368b0:	ldr	r0, [sp, #80]	; 0x50
   368b4:	str	r1, [sp, #52]	; 0x34
   368b8:	add	r0, r0, r1
   368bc:	mov	r1, #1
   368c0:	str	r0, [sp, #92]	; 0x5c
   368c4:	sub	r0, r5, #2
   368c8:	add	r1, r1, r0, lsr #1
   368cc:	lsr	r0, r0, #1
   368d0:	str	r0, [sp, #40]	; 0x28
   368d4:	and	r7, r1, #1
   368d8:	sub	r1, r1, r7
   368dc:	str	r7, [sp, #48]	; 0x30
   368e0:	str	r1, [sp, #36]	; 0x24
   368e4:	add	r1, r5, r2
   368e8:	mov	r2, #0
   368ec:	mla	r1, r3, r8, r1
   368f0:	str	r2, [sp, #84]	; 0x54
   368f4:	mov	r2, #0
   368f8:	movwhi	r2, #1
   368fc:	mov	r8, #32
   36900:	str	r1, [sp, #56]	; 0x38
   36904:	ldr	r1, [sp, #68]	; 0x44
   36908:	mov	r3, r1
   3690c:	sub	r1, r1, #1
   36910:	clz	r1, r1
   36914:	lsl	r4, r3, #1
   36918:	lsr	r1, r1, #5
   3691c:	and	r1, r2, r1
   36920:	str	r1, [sp, #64]	; 0x40
   36924:	lsl	r1, r3, #2
   36928:	str	r1, [sp, #32]
   3692c:	and	r1, r5, #1
   36930:	str	r1, [sp, #60]	; 0x3c
   36934:	bic	r1, r5, #1
   36938:	str	r1, [sp, #44]	; 0x2c
   3693c:	ldr	r0, [sp, #64]	; 0x40
   36940:	cmp	r0, #0
   36944:	bne	3697c <GetDataSlab+0x2820>
   36948:	b	36a08 <GetDataSlab+0x28ac>
   3694c:	ldr	r0, [sp, #72]	; 0x48
   36950:	ldr	r1, [sp, #76]	; 0x4c
   36954:	add	lr, lr, #1
   36958:	str	lr, [sp, #84]	; 0x54
   3695c:	add	ip, ip, r0
   36960:	mov	r0, #0
   36964:	cmp	lr, r1
   36968:	str	ip, [sp, #92]	; 0x5c
   3696c:	beq	5b6a4 <GetDataSlab+0x27548>
   36970:	ldr	r0, [sp, #64]	; 0x40
   36974:	cmp	r0, #0
   36978:	beq	36a08 <GetDataSlab+0x28ac>
   3697c:	ldr	r0, [sp, #72]	; 0x48
   36980:	ldr	lr, [sp, #84]	; 0x54
   36984:	ldr	r1, [sp, #56]	; 0x38
   36988:	ldr	r3, [sp, #80]	; 0x50
   3698c:	ldr	r2, [sp, #88]	; 0x58
   36990:	ldr	ip, [sp, #92]	; 0x5c
   36994:	add	r6, sp, #272	; 0x110
   36998:	mul	r0, r0, lr
   3699c:	add	r1, r1, r0
   369a0:	add	r1, r3, r1
   369a4:	cmp	r1, r2
   369a8:	bls	36a8c <GetDataSlab+0x2930>
   369ac:	add	r1, r2, r5, lsl #3
   369b0:	ldr	r2, [sp, #52]	; 0x34
   369b4:	add	r0, r2, r0
   369b8:	add	r0, r3, r0
   369bc:	cmp	r0, r1
   369c0:	bcs	36a8c <GetDataSlab+0x2930>
   369c4:	mov	r0, #0
   369c8:	ldr	r1, [sp, #60]	; 0x3c
   369cc:	cmp	r1, #0
   369d0:	beq	36a20 <GetDataSlab+0x28c4>
   369d4:	ldr	r1, [sp, #68]	; 0x44
   369d8:	ldr	r7, [sp, #88]	; 0x58
   369dc:	mla	r1, r0, r1, ip
   369e0:	ldrsb	r2, [r1]
   369e4:	orr	r1, r0, #1
   369e8:	asr	r3, r2, #31
   369ec:	strd	r2, [r7]
   369f0:	add	r7, r7, #8
   369f4:	str	r7, [sp, #88]	; 0x58
   369f8:	orr	r0, r0, #1
   369fc:	cmp	r5, r0
   36a00:	bne	36a30 <GetDataSlab+0x28d4>
   36a04:	b	3694c <GetDataSlab+0x27f0>
   36a08:	ldr	ip, [sp, #92]	; 0x5c
   36a0c:	ldr	lr, [sp, #84]	; 0x54
   36a10:	mov	r0, #0
   36a14:	ldr	r1, [sp, #60]	; 0x3c
   36a18:	cmp	r1, #0
   36a1c:	bne	369d4 <GetDataSlab+0x2878>
   36a20:	mov	r1, r0
   36a24:	orr	r0, r0, #1
   36a28:	cmp	r5, r0
   36a2c:	beq	3694c <GetDataSlab+0x27f0>
   36a30:	ldr	r2, [sp, #68]	; 0x44
   36a34:	sub	r3, r5, r1
   36a38:	ldr	r6, [sp, #88]	; 0x58
   36a3c:	mul	r0, r2, r1
   36a40:	add	r1, r1, #1
   36a44:	mul	r7, r2, r1
   36a48:	mov	r1, ip
   36a4c:	add	r2, r1, r0
   36a50:	subs	r3, r3, #2
   36a54:	ldrsb	r2, [r2]
   36a58:	str	r2, [r6]
   36a5c:	asr	r2, r2, #31
   36a60:	str	r2, [r6, #4]
   36a64:	add	r2, r1, r7
   36a68:	add	r1, r1, r4
   36a6c:	ldrsb	r2, [r2]
   36a70:	str	r2, [r6, #8]
   36a74:	asr	r2, r2, #31
   36a78:	str	r2, [r6, #12]
   36a7c:	add	r6, r6, #16
   36a80:	bne	36a4c <GetDataSlab+0x28f0>
   36a84:	str	r6, [sp, #88]	; 0x58
   36a88:	b	3694c <GetDataSlab+0x27f0>
   36a8c:	ldr	r0, [sp, #40]	; 0x28
   36a90:	cmp	r0, #0
   36a94:	beq	36b08 <GetDataSlab+0x29ac>
   36a98:	ldr	sl, [sp, #88]	; 0x58
   36a9c:	ldr	r7, [sp, #36]	; 0x24
   36aa0:	ldr	lr, [sp, #32]
   36aa4:	mov	r0, #0
   36aa8:	mov	r3, ip
   36aac:	add	r9, sp, #280	; 0x118
   36ab0:	ldrh	r1, [r3]
   36ab4:	add	ip, r3, r4
   36ab8:	add	r3, r3, lr
   36abc:	subs	r7, r7, #2
   36ac0:	add	r0, r0, #4
   36ac4:	strh	r1, [r6, #4]
   36ac8:	add	r1, sp, #276	; 0x114
   36acc:	vld1.16	{d16[0]}, [r1 :16]
   36ad0:	add	r1, sl, #16
   36ad4:	vmovl.s8	q8, d16
   36ad8:	vmovl.s16	q8, d16
   36adc:	vmovl.s32	q8, d16
   36ae0:	vst1.64	{d16-d17}, [sl], r8
   36ae4:	ldrh	r2, [ip]
   36ae8:	strh	r2, [r6, #8]
   36aec:	vld1.16	{d16[0]}, [r9 :16]
   36af0:	vmovl.s8	q8, d16
   36af4:	vmovl.s16	q8, d16
   36af8:	vmovl.s32	q8, d16
   36afc:	vst1.64	{d16-d17}, [r1]
   36b00:	bne	36ab0 <GetDataSlab+0x2954>
   36b04:	b	36b0c <GetDataSlab+0x29b0>
   36b08:	mov	r0, #0
   36b0c:	ldr	r1, [sp, #48]	; 0x30
   36b10:	ldr	ip, [sp, #92]	; 0x5c
   36b14:	ldr	lr, [sp, #84]	; 0x54
   36b18:	cmp	r1, #0
   36b1c:	beq	36b4c <GetDataSlab+0x29f0>
   36b20:	ldr	r1, [sp, #68]	; 0x44
   36b24:	mla	r1, r0, r1, ip
   36b28:	ldrh	r1, [r1]
   36b2c:	strh	r1, [r6]
   36b30:	vld1.16	{d16[0]}, [r6 :16]
   36b34:	ldr	r1, [sp, #88]	; 0x58
   36b38:	add	r0, r1, r0, lsl #3
   36b3c:	vmovl.s8	q8, d16
   36b40:	vmovl.s16	q8, d16
   36b44:	vmovl.s32	q8, d16
   36b48:	vst1.64	{d16-d17}, [r0]
   36b4c:	ldr	r1, [sp, #44]	; 0x2c
   36b50:	ldr	r0, [sp, #88]	; 0x58
   36b54:	add	r0, r0, r1, lsl #3
   36b58:	cmp	r5, r1
   36b5c:	str	r0, [sp, #88]	; 0x58
   36b60:	mov	r0, r1
   36b64:	bne	36a14 <GetDataSlab+0x28b8>
   36b68:	b	3694c <GetDataSlab+0x27f0>
   36b6c:	ldr	r7, [sp, #84]	; 0x54
   36b70:	mov	r0, #1
   36b74:	sub	r1, r7, #1
   36b78:	cmp	r1, #11
   36b7c:	bhi	64818 <GetDataSlab+0x306bc>
   36b80:	add	r2, pc, #8
   36b84:	ldr	r3, [sp, #76]	; 0x4c
   36b88:	ldr	r1, [r2, r1, lsl #2]
   36b8c:	add	pc, r2, r1
   36b90:	.word	0x00000030
   36b94:	.word	0x0002baa4
   36b98:	.word	0x0002bd90
   36b9c:	.word	0x0002c000
   36ba0:	.word	0x0002c27c
   36ba4:	.word	0x0002c4fc
   36ba8:	.word	0x0002c778
   36bac:	.word	0x0002dc88
   36bb0:	.word	0x0002c884
   36bb4:	.word	0x0002dc88
   36bb8:	.word	0x0002dc88
   36bbc:	.word	0x0002c9a4
   36bc0:	cmp	r3, #1
   36bc4:	blt	35058 <GetDataSlab+0xefc>
   36bc8:	cmp	r5, #1
   36bcc:	mov	r0, #0
   36bd0:	blt	5b6a4 <GetDataSlab+0x27548>
   36bd4:	ldr	r0, [sp, #72]	; 0x48
   36bd8:	ldr	r2, [sp, #60]	; 0x3c
   36bdc:	ldr	r3, [sp, #56]	; 0x38
   36be0:	cmp	r5, #1
   36be4:	mul	r0, r0, r8
   36be8:	mla	r1, r3, r8, r2
   36bec:	str	r0, [sp, #72]	; 0x48
   36bf0:	ldr	r0, [sp, #80]	; 0x50
   36bf4:	str	r1, [sp, #52]	; 0x34
   36bf8:	add	r0, r0, r1
   36bfc:	mov	r1, #1
   36c00:	str	r0, [sp, #92]	; 0x5c
   36c04:	sub	r0, r5, #2
   36c08:	add	r1, r1, r0, lsr #1
   36c0c:	lsr	r0, r0, #1
   36c10:	str	r0, [sp, #40]	; 0x28
   36c14:	and	r7, r1, #1
   36c18:	sub	r1, r1, r7
   36c1c:	str	r7, [sp, #48]	; 0x30
   36c20:	str	r1, [sp, #36]	; 0x24
   36c24:	add	r1, r5, r2
   36c28:	mov	r2, #0
   36c2c:	mla	r1, r3, r8, r1
   36c30:	str	r2, [sp, #84]	; 0x54
   36c34:	mov	r2, #0
   36c38:	movwhi	r2, #1
   36c3c:	mov	r8, #32
   36c40:	str	r1, [sp, #56]	; 0x38
   36c44:	ldr	r1, [sp, #68]	; 0x44
   36c48:	mov	r3, r1
   36c4c:	sub	r1, r1, #1
   36c50:	clz	r1, r1
   36c54:	lsl	r4, r3, #1
   36c58:	lsr	r1, r1, #5
   36c5c:	and	r1, r2, r1
   36c60:	str	r1, [sp, #64]	; 0x40
   36c64:	lsl	r1, r3, #2
   36c68:	str	r1, [sp, #32]
   36c6c:	and	r1, r5, #1
   36c70:	str	r1, [sp, #60]	; 0x3c
   36c74:	bic	r1, r5, #1
   36c78:	str	r1, [sp, #44]	; 0x2c
   36c7c:	ldr	r0, [sp, #64]	; 0x40
   36c80:	cmp	r0, #0
   36c84:	bne	36cbc <GetDataSlab+0x2b60>
   36c88:	b	36d48 <GetDataSlab+0x2bec>
   36c8c:	ldr	r0, [sp, #72]	; 0x48
   36c90:	ldr	r1, [sp, #76]	; 0x4c
   36c94:	add	lr, lr, #1
   36c98:	str	lr, [sp, #84]	; 0x54
   36c9c:	add	ip, ip, r0
   36ca0:	mov	r0, #0
   36ca4:	cmp	lr, r1
   36ca8:	str	ip, [sp, #92]	; 0x5c
   36cac:	beq	5b6a4 <GetDataSlab+0x27548>
   36cb0:	ldr	r0, [sp, #64]	; 0x40
   36cb4:	cmp	r0, #0
   36cb8:	beq	36d48 <GetDataSlab+0x2bec>
   36cbc:	ldr	r0, [sp, #72]	; 0x48
   36cc0:	ldr	lr, [sp, #84]	; 0x54
   36cc4:	ldr	r1, [sp, #56]	; 0x38
   36cc8:	ldr	r3, [sp, #80]	; 0x50
   36ccc:	ldr	r2, [sp, #88]	; 0x58
   36cd0:	ldr	ip, [sp, #92]	; 0x5c
   36cd4:	add	r6, sp, #272	; 0x110
   36cd8:	mul	r0, r0, lr
   36cdc:	add	r1, r1, r0
   36ce0:	add	r1, r3, r1
   36ce4:	cmp	r1, r2
   36ce8:	bls	36dcc <GetDataSlab+0x2c70>
   36cec:	add	r1, r2, r5, lsl #3
   36cf0:	ldr	r2, [sp, #52]	; 0x34
   36cf4:	add	r0, r2, r0
   36cf8:	add	r0, r3, r0
   36cfc:	cmp	r0, r1
   36d00:	bcs	36dcc <GetDataSlab+0x2c70>
   36d04:	mov	r0, #0
   36d08:	ldr	r1, [sp, #60]	; 0x3c
   36d0c:	cmp	r1, #0
   36d10:	beq	36d60 <GetDataSlab+0x2c04>
   36d14:	ldr	r1, [sp, #68]	; 0x44
   36d18:	ldr	r7, [sp, #88]	; 0x58
   36d1c:	mla	r1, r0, r1, ip
   36d20:	ldrsb	r2, [r1]
   36d24:	orr	r1, r0, #1
   36d28:	asr	r3, r2, #31
   36d2c:	strd	r2, [r7]
   36d30:	add	r7, r7, #8
   36d34:	str	r7, [sp, #88]	; 0x58
   36d38:	orr	r0, r0, #1
   36d3c:	cmp	r5, r0
   36d40:	bne	36d70 <GetDataSlab+0x2c14>
   36d44:	b	36c8c <GetDataSlab+0x2b30>
   36d48:	ldr	ip, [sp, #92]	; 0x5c
   36d4c:	ldr	lr, [sp, #84]	; 0x54
   36d50:	mov	r0, #0
   36d54:	ldr	r1, [sp, #60]	; 0x3c
   36d58:	cmp	r1, #0
   36d5c:	bne	36d14 <GetDataSlab+0x2bb8>
   36d60:	mov	r1, r0
   36d64:	orr	r0, r0, #1
   36d68:	cmp	r5, r0
   36d6c:	beq	36c8c <GetDataSlab+0x2b30>
   36d70:	ldr	r2, [sp, #68]	; 0x44
   36d74:	sub	r3, r5, r1
   36d78:	ldr	r6, [sp, #88]	; 0x58
   36d7c:	mul	r0, r2, r1
   36d80:	add	r1, r1, #1
   36d84:	mul	r7, r2, r1
   36d88:	mov	r1, ip
   36d8c:	add	r2, r1, r0
   36d90:	subs	r3, r3, #2
   36d94:	ldrsb	r2, [r2]
   36d98:	str	r2, [r6]
   36d9c:	asr	r2, r2, #31
   36da0:	str	r2, [r6, #4]
   36da4:	add	r2, r1, r7
   36da8:	add	r1, r1, r4
   36dac:	ldrsb	r2, [r2]
   36db0:	str	r2, [r6, #8]
   36db4:	asr	r2, r2, #31
   36db8:	str	r2, [r6, #12]
   36dbc:	add	r6, r6, #16
   36dc0:	bne	36d8c <GetDataSlab+0x2c30>
   36dc4:	str	r6, [sp, #88]	; 0x58
   36dc8:	b	36c8c <GetDataSlab+0x2b30>
   36dcc:	ldr	r0, [sp, #40]	; 0x28
   36dd0:	cmp	r0, #0
   36dd4:	beq	36e48 <GetDataSlab+0x2cec>
   36dd8:	ldr	sl, [sp, #88]	; 0x58
   36ddc:	ldr	r7, [sp, #36]	; 0x24
   36de0:	ldr	lr, [sp, #32]
   36de4:	mov	r0, #0
   36de8:	mov	r3, ip
   36dec:	add	r9, sp, #376	; 0x178
   36df0:	ldrh	r1, [r3]
   36df4:	add	ip, r3, r4
   36df8:	add	r3, r3, lr
   36dfc:	subs	r7, r7, #2
   36e00:	add	r0, r0, #4
   36e04:	strh	r1, [r6, #100]	; 0x64
   36e08:	add	r1, sp, #372	; 0x174
   36e0c:	vld1.16	{d16[0]}, [r1 :16]
   36e10:	add	r1, sl, #16
   36e14:	vmovl.s8	q8, d16
   36e18:	vmovl.s16	q8, d16
   36e1c:	vmovl.s32	q8, d16
   36e20:	vst1.64	{d16-d17}, [sl], r8
   36e24:	ldrh	r2, [ip]
   36e28:	strh	r2, [r6, #104]	; 0x68
   36e2c:	vld1.16	{d16[0]}, [r9 :16]
   36e30:	vmovl.s8	q8, d16
   36e34:	vmovl.s16	q8, d16
   36e38:	vmovl.s32	q8, d16
   36e3c:	vst1.64	{d16-d17}, [r1]
   36e40:	bne	36df0 <GetDataSlab+0x2c94>
   36e44:	b	36e4c <GetDataSlab+0x2cf0>
   36e48:	mov	r0, #0
   36e4c:	ldr	r1, [sp, #48]	; 0x30
   36e50:	ldr	ip, [sp, #92]	; 0x5c
   36e54:	ldr	lr, [sp, #84]	; 0x54
   36e58:	cmp	r1, #0
   36e5c:	beq	36e90 <GetDataSlab+0x2d34>
   36e60:	ldr	r1, [sp, #68]	; 0x44
   36e64:	mla	r1, r0, r1, ip
   36e68:	ldrh	r1, [r1]
   36e6c:	strh	r1, [r6, #96]	; 0x60
   36e70:	add	r1, sp, #368	; 0x170
   36e74:	vld1.16	{d16[0]}, [r1 :16]
   36e78:	ldr	r1, [sp, #88]	; 0x58
   36e7c:	add	r0, r1, r0, lsl #3
   36e80:	vmovl.s8	q8, d16
   36e84:	vmovl.s16	q8, d16
   36e88:	vmovl.s32	q8, d16
   36e8c:	vst1.64	{d16-d17}, [r0]
   36e90:	ldr	r1, [sp, #44]	; 0x2c
   36e94:	ldr	r0, [sp, #88]	; 0x58
   36e98:	add	r0, r0, r1, lsl #3
   36e9c:	cmp	r5, r1
   36ea0:	str	r0, [sp, #88]	; 0x58
   36ea4:	mov	r0, r1
   36ea8:	bne	36d54 <GetDataSlab+0x2bf8>
   36eac:	b	36c8c <GetDataSlab+0x2b30>
   36eb0:	ldr	sl, [sl]
   36eb4:	mov	r5, #0
   36eb8:	sub	r2, fp, #96	; 0x60
   36ebc:	sub	r0, sl, #1
   36ec0:	str	r0, [fp, #-96]	; 0xffffffa0
   36ec4:	ldr	r0, [fp, #8]
   36ec8:	ldr	r0, [r0]
   36ecc:	str	r0, [sp, #40]	; 0x28
   36ed0:	str	r0, [fp, #-176]	; 0xffffff50
   36ed4:	ldr	r0, [fp, #20]
   36ed8:	ldr	r1, [r0]
   36edc:	ldr	r0, [fp, #24]
   36ee0:	cmp	r0, #2
   36ee4:	str	r1, [sp, #72]	; 0x48
   36ee8:	str	r1, [sp, #76]	; 0x4c
   36eec:	blt	40f00 <GetDataSlab+0xcda4>
   36ef0:	ldr	r0, [fp, #8]
   36ef4:	ldr	r4, [sp, #40]	; 0x28
   36ef8:	mov	r7, #1
   36efc:	mov	r8, #0
   36f00:	mvn	r6, #15
   36f04:	mov	r5, #0
   36f08:	sub	r1, r0, #4
   36f0c:	sub	lr, r0, #12
   36f10:	ldr	r0, [sp, #72]	; 0x48
   36f14:	mov	r9, r4
   36f18:	str	r0, [sp, #76]	; 0x4c
   36f1c:	b	36f6c <GetDataSlab+0x2e10>
   36f20:	sub	ip, fp, #176	; 0xb0
   36f24:	sub	r2, fp, #96	; 0x60
   36f28:	str	r4, [ip, r7, lsl #2]
   36f2c:	ldr	r3, [sp, #76]	; 0x4c
   36f30:	add	lr, lr, #4
   36f34:	str	r0, [r2, r7, lsl #2]
   36f38:	ldr	r0, [fp, #12]
   36f3c:	ldr	r0, [r0, r7, lsl #2]
   36f40:	mla	r5, r0, r9, r5
   36f44:	ldr	r0, [fp, #20]
   36f48:	mov	r9, r4
   36f4c:	ldr	r4, [sp, #84]	; 0x54
   36f50:	ldr	r0, [r0, r7, lsl #2]
   36f54:	add	r7, r7, #1
   36f58:	mul	r3, r0, r3
   36f5c:	ldr	r0, [fp, #24]
   36f60:	str	r3, [sp, #76]	; 0x4c
   36f64:	cmp	r7, r0
   36f68:	beq	40f00 <GetDataSlab+0xcda4>
   36f6c:	ldr	r0, [fp, #16]
   36f70:	add	r8, r8, #1
   36f74:	cmp	r8, #4
   36f78:	ldr	r0, [r0, r7, lsl #2]
   36f7c:	str	r4, [ip, r7, lsl #2]
   36f80:	sub	r0, r0, #1
   36f84:	str	r0, [r2, r7, lsl #2]
   36f88:	ldr	r2, [fp, #8]
   36f8c:	ldr	r2, [r2, r7, lsl #2]
   36f90:	str	r2, [sp, #84]	; 0x54
   36f94:	bcs	36fa0 <GetDataSlab+0x2e44>
   36f98:	mov	r3, r7
   36f9c:	b	37030 <GetDataSlab+0x2ed4>
   36fa0:	vmov.i32	q9, #1	; 0x00000001
   36fa4:	vmov.i32	q10, #1	; 0x00000001
   36fa8:	vmov.32	d23[1], r2
   36fac:	vmov.i32	q8, #1	; 0x00000001
   36fb0:	bic	ip, r7, #3
   36fb4:	vmov.32	d18[0], r4
   36fb8:	vmov.32	d20[0], r0
   36fbc:	bic	r0, r8, #3
   36fc0:	str	r0, [sp, #68]	; 0x44
   36fc4:	sub	r3, r7, r0
   36fc8:	mov	r0, lr
   36fcc:	vorr	d16, d18, d18
   36fd0:	vmov.i32	q9, #1	; 0x00000001
   36fd4:	vorr	d18, d20, d20
   36fd8:	vld1.32	{d20-d21}, [r0], r6
   36fdc:	subs	ip, ip, #4
   36fe0:	vrev64.32	q12, q10
   36fe4:	vext.8	q12, q12, q12, #8
   36fe8:	vext.8	q11, q11, q12, #12
   36fec:	vmul.i32	q9, q9, q12
   36ff0:	vmul.i32	q8, q11, q8
   36ff4:	vorr	q11, q12, q12
   36ff8:	bne	36fd8 <GetDataSlab+0x2e7c>
   36ffc:	vext.8	q11, q9, q8, #8
   37000:	vext.8	q12, q8, q8, #8
   37004:	ldr	r2, [sp, #68]	; 0x44
   37008:	vmul.i32	q0, q9, q11
   3700c:	vmul.i32	q1, q8, q12
   37010:	cmp	r8, r2
   37014:	vmul.i32	q8, q0, d0[1]
   37018:	vmul.i32	q9, q1, d2[1]
   3701c:	vmov.32	r0, d16[0]
   37020:	vmov.32	r4, d18[0]
   37024:	beq	36f20 <GetDataSlab+0x2dc4>
   37028:	vmov.32	r2, d20[0]
   3702c:	sub	ip, fp, #176	; 0xb0
   37030:	mul	r4, r2, r4
   37034:	ldr	r2, [r1, r3, lsl #2]
   37038:	subs	r3, r3, #1
   3703c:	mul	r0, r0, r2
   37040:	bne	37030 <GetDataSlab+0x2ed4>
   37044:	b	36f24 <GetDataSlab+0x2dc8>
   37048:	ldr	r0, [sl]
   3704c:	mov	r1, #0
   37050:	sub	r6, fp, #96	; 0x60
   37054:	str	r0, [sp, #68]	; 0x44
   37058:	sub	r0, r0, #1
   3705c:	str	r0, [fp, #-96]	; 0xffffffa0
   37060:	ldr	r0, [fp, #8]
   37064:	ldr	r0, [r0]
   37068:	str	r0, [sp, #60]	; 0x3c
   3706c:	str	r0, [fp, #-176]	; 0xffffff50
   37070:	ldr	r0, [fp, #20]
   37074:	ldr	r2, [r0]
   37078:	ldr	r0, [fp, #24]
   3707c:	cmp	r0, #2
   37080:	str	r2, [sp, #72]	; 0x48
   37084:	str	r2, [sp, #76]	; 0x4c
   37088:	blt	412a0 <GetDataSlab+0xd144>
   3708c:	ldr	r0, [fp, #8]
   37090:	ldr	r3, [sp, #60]	; 0x3c
   37094:	ldr	r2, [sp, #72]	; 0x48
   37098:	mov	r5, #1
   3709c:	mov	r8, #0
   370a0:	mvn	r4, #15
   370a4:	mov	r1, r0
   370a8:	sub	r0, r0, #4
   370ac:	mov	r9, r3
   370b0:	str	r2, [sp, #76]	; 0x4c
   370b4:	sub	sl, r1, #12
   370b8:	mov	r1, #0
   370bc:	b	3710c <GetDataSlab+0x2fb0>
   370c0:	sub	ip, fp, #176	; 0xb0
   370c4:	sub	r6, fp, #96	; 0x60
   370c8:	str	r3, [ip, r5, lsl #2]
   370cc:	ldr	r7, [sp, #76]	; 0x4c
   370d0:	add	sl, sl, #4
   370d4:	str	r2, [r6, r5, lsl #2]
   370d8:	ldr	r2, [fp, #12]
   370dc:	ldr	r2, [r2, r5, lsl #2]
   370e0:	mla	r1, r2, r9, r1
   370e4:	ldr	r2, [fp, #20]
   370e8:	mov	r9, r3
   370ec:	mov	r3, lr
   370f0:	ldr	r2, [r2, r5, lsl #2]
   370f4:	add	r5, r5, #1
   370f8:	mul	r7, r2, r7
   370fc:	ldr	r2, [fp, #24]
   37100:	str	r7, [sp, #76]	; 0x4c
   37104:	cmp	r5, r2
   37108:	beq	412a0 <GetDataSlab+0xd144>
   3710c:	ldr	r2, [fp, #16]
   37110:	ldr	r7, [fp, #8]
   37114:	add	r8, r8, #1
   37118:	cmp	r8, #4
   3711c:	ldr	r2, [r2, r5, lsl #2]
   37120:	str	r3, [ip, r5, lsl #2]
   37124:	sub	r2, r2, #1
   37128:	str	r2, [r6, r5, lsl #2]
   3712c:	ldr	lr, [r7, r5, lsl #2]
   37130:	bcs	37140 <GetDataSlab+0x2fe4>
   37134:	mov	r7, lr
   37138:	mov	r6, r5
   3713c:	b	371c8 <GetDataSlab+0x306c>
   37140:	vmov.i32	q9, #1	; 0x00000001
   37144:	vmov.i32	q10, #1	; 0x00000001
   37148:	vmov.32	d23[1], lr
   3714c:	vmov.i32	q8, #1	; 0x00000001
   37150:	bic	r7, r8, #3
   37154:	bic	ip, r5, #3
   37158:	sub	r6, r5, r7
   3715c:	vmov.32	d18[0], r3
   37160:	vmov.32	d20[0], r2
   37164:	mov	r2, sl
   37168:	vorr	d16, d18, d18
   3716c:	vmov.i32	q9, #1	; 0x00000001
   37170:	vorr	d18, d20, d20
   37174:	vld1.32	{d20-d21}, [r2], r4
   37178:	subs	ip, ip, #4
   3717c:	vrev64.32	q12, q10
   37180:	vext.8	q12, q12, q12, #8
   37184:	vext.8	q11, q11, q12, #12
   37188:	vmul.i32	q9, q9, q12
   3718c:	vmul.i32	q8, q11, q8
   37190:	vorr	q11, q12, q12
   37194:	bne	37174 <GetDataSlab+0x3018>
   37198:	vext.8	q11, q9, q8, #8
   3719c:	vext.8	q12, q8, q8, #8
   371a0:	cmp	r8, r7
   371a4:	vmul.i32	q0, q9, q11
   371a8:	vmul.i32	q1, q8, q12
   371ac:	vmul.i32	q8, q0, d0[1]
   371b0:	vmul.i32	q9, q1, d2[1]
   371b4:	vmov.32	r2, d16[0]
   371b8:	vmov.32	r3, d18[0]
   371bc:	beq	370c0 <GetDataSlab+0x2f64>
   371c0:	vmov.32	r7, d20[0]
   371c4:	sub	ip, fp, #176	; 0xb0
   371c8:	mul	r3, r7, r3
   371cc:	ldr	r7, [r0, r6, lsl #2]
   371d0:	subs	r6, r6, #1
   371d4:	mul	r2, r2, r7
   371d8:	bne	371c8 <GetDataSlab+0x306c>
   371dc:	b	370c4 <GetDataSlab+0x2f68>
   371e0:	ldr	r0, [sl]
   371e4:	mov	r1, #0
   371e8:	sub	r6, fp, #96	; 0x60
   371ec:	str	r0, [sp, #68]	; 0x44
   371f0:	sub	r0, r0, #1
   371f4:	str	r0, [fp, #-96]	; 0xffffffa0
   371f8:	ldr	r0, [fp, #8]
   371fc:	ldr	r0, [r0]
   37200:	str	r0, [sp, #60]	; 0x3c
   37204:	str	r0, [fp, #-176]	; 0xffffff50
   37208:	ldr	r0, [fp, #20]
   3720c:	ldr	r2, [r0]
   37210:	ldr	r0, [fp, #24]
   37214:	cmp	r0, #2
   37218:	str	r2, [sp, #72]	; 0x48
   3721c:	str	r2, [sp, #76]	; 0x4c
   37220:	blt	41574 <GetDataSlab+0xd418>
   37224:	ldr	r0, [fp, #8]
   37228:	ldr	r3, [sp, #60]	; 0x3c
   3722c:	ldr	r2, [sp, #72]	; 0x48
   37230:	mov	r5, #1
   37234:	mov	r8, #0
   37238:	mvn	r4, #15
   3723c:	mov	r1, r0
   37240:	sub	r0, r0, #4
   37244:	mov	r9, r3
   37248:	str	r2, [sp, #76]	; 0x4c
   3724c:	sub	sl, r1, #12
   37250:	mov	r1, #0
   37254:	b	372a4 <GetDataSlab+0x3148>
   37258:	sub	ip, fp, #176	; 0xb0
   3725c:	sub	r6, fp, #96	; 0x60
   37260:	str	r3, [ip, r5, lsl #2]
   37264:	ldr	r7, [sp, #76]	; 0x4c
   37268:	add	sl, sl, #4
   3726c:	str	r2, [r6, r5, lsl #2]
   37270:	ldr	r2, [fp, #12]
   37274:	ldr	r2, [r2, r5, lsl #2]
   37278:	mla	r1, r2, r9, r1
   3727c:	ldr	r2, [fp, #20]
   37280:	mov	r9, r3
   37284:	mov	r3, lr
   37288:	ldr	r2, [r2, r5, lsl #2]
   3728c:	add	r5, r5, #1
   37290:	mul	r7, r2, r7
   37294:	ldr	r2, [fp, #24]
   37298:	str	r7, [sp, #76]	; 0x4c
   3729c:	cmp	r5, r2
   372a0:	beq	41574 <GetDataSlab+0xd418>
   372a4:	ldr	r2, [fp, #16]
   372a8:	ldr	r7, [fp, #8]
   372ac:	add	r8, r8, #1
   372b0:	cmp	r8, #4
   372b4:	ldr	r2, [r2, r5, lsl #2]
   372b8:	str	r3, [ip, r5, lsl #2]
   372bc:	sub	r2, r2, #1
   372c0:	str	r2, [r6, r5, lsl #2]
   372c4:	ldr	lr, [r7, r5, lsl #2]
   372c8:	bcs	372d8 <GetDataSlab+0x317c>
   372cc:	mov	r7, lr
   372d0:	mov	r6, r5
   372d4:	b	37360 <GetDataSlab+0x3204>
   372d8:	vmov.i32	q9, #1	; 0x00000001
   372dc:	vmov.i32	q10, #1	; 0x00000001
   372e0:	vmov.32	d23[1], lr
   372e4:	vmov.i32	q8, #1	; 0x00000001
   372e8:	bic	r7, r8, #3
   372ec:	bic	ip, r5, #3
   372f0:	sub	r6, r5, r7
   372f4:	vmov.32	d18[0], r3
   372f8:	vmov.32	d20[0], r2
   372fc:	mov	r2, sl
   37300:	vorr	d16, d18, d18
   37304:	vmov.i32	q9, #1	; 0x00000001
   37308:	vorr	d18, d20, d20
   3730c:	vld1.32	{d20-d21}, [r2], r4
   37310:	subs	ip, ip, #4
   37314:	vrev64.32	q12, q10
   37318:	vext.8	q12, q12, q12, #8
   3731c:	vext.8	q11, q11, q12, #12
   37320:	vmul.i32	q9, q9, q12
   37324:	vmul.i32	q8, q11, q8
   37328:	vorr	q11, q12, q12
   3732c:	bne	3730c <GetDataSlab+0x31b0>
   37330:	vext.8	q11, q9, q8, #8
   37334:	vext.8	q12, q8, q8, #8
   37338:	cmp	r8, r7
   3733c:	vmul.i32	q0, q9, q11
   37340:	vmul.i32	q1, q8, q12
   37344:	vmul.i32	q8, q0, d0[1]
   37348:	vmul.i32	q9, q1, d2[1]
   3734c:	vmov.32	r2, d16[0]
   37350:	vmov.32	r3, d18[0]
   37354:	beq	37258 <GetDataSlab+0x30fc>
   37358:	vmov.32	r7, d20[0]
   3735c:	sub	ip, fp, #176	; 0xb0
   37360:	mul	r3, r7, r3
   37364:	ldr	r7, [r0, r6, lsl #2]
   37368:	subs	r6, r6, #1
   3736c:	mul	r2, r2, r7
   37370:	bne	37360 <GetDataSlab+0x3204>
   37374:	b	3725c <GetDataSlab+0x3100>
   37378:	ldr	r0, [sl]
   3737c:	mov	r3, #0
   37380:	sub	lr, fp, #96	; 0x60
   37384:	str	r0, [sp, #56]	; 0x38
   37388:	sub	r0, r0, #1
   3738c:	str	r0, [fp, #-96]	; 0xffffffa0
   37390:	ldr	r0, [fp, #8]
   37394:	ldr	r0, [r0]
   37398:	str	r0, [sp, #52]	; 0x34
   3739c:	str	r0, [fp, #-176]	; 0xffffff50
   373a0:	ldr	r0, [fp, #20]
   373a4:	ldr	r1, [r0]
   373a8:	ldr	r0, [fp, #24]
   373ac:	cmp	r0, #2
   373b0:	str	r1, [sp, #68]	; 0x44
   373b4:	str	r1, [sp, #76]	; 0x4c
   373b8:	blt	41848 <GetDataSlab+0xd6ec>
   373bc:	ldr	r0, [fp, #8]
   373c0:	ldr	r5, [sp, #52]	; 0x34
   373c4:	mov	r7, #1
   373c8:	mvn	r9, #15
   373cc:	mov	r3, #0
   373d0:	mov	r1, r0
   373d4:	sub	r0, r0, #4
   373d8:	mov	r4, r5
   373dc:	sub	sl, r1, #12
   373e0:	mov	r1, #0
   373e4:	str	r1, [sp, #84]	; 0x54
   373e8:	ldr	r1, [sp, #68]	; 0x44
   373ec:	str	r1, [sp, #76]	; 0x4c
   373f0:	b	37450 <GetDataSlab+0x32f4>
   373f4:	ldr	r8, [sp, #88]	; 0x58
   373f8:	sub	r1, fp, #176	; 0xb0
   373fc:	sub	lr, fp, #96	; 0x60
   37400:	add	sl, sl, #4
   37404:	mov	r2, r1
   37408:	str	r5, [r1, r7, lsl #2]
   3740c:	ldr	r1, [fp, #12]
   37410:	str	r4, [lr, r7, lsl #2]
   37414:	ldr	r4, [sp, #72]	; 0x48
   37418:	ldr	r1, [r1, r7, lsl #2]
   3741c:	mla	r3, r1, r4, r3
   37420:	ldr	r1, [fp, #20]
   37424:	ldr	r4, [sp, #76]	; 0x4c
   37428:	ldr	r1, [r1, r7, lsl #2]
   3742c:	add	r7, r7, #1
   37430:	mul	r4, r1, r4
   37434:	ldr	r1, [fp, #24]
   37438:	str	r4, [sp, #76]	; 0x4c
   3743c:	mov	r4, r5
   37440:	mov	r5, ip
   37444:	mov	ip, r2
   37448:	cmp	r7, r1
   3744c:	beq	41848 <GetDataSlab+0xd6ec>
   37450:	ldr	r1, [fp, #16]
   37454:	str	r4, [sp, #72]	; 0x48
   37458:	ldr	r6, [sp, #84]	; 0x54
   3745c:	ldr	r1, [r1, r7, lsl #2]
   37460:	str	r5, [ip, r7, lsl #2]
   37464:	add	r6, r6, #1
   37468:	cmp	r6, #4
   3746c:	str	r6, [sp, #84]	; 0x54
   37470:	sub	r4, r1, #1
   37474:	ldr	r1, [fp, #8]
   37478:	str	r4, [lr, r7, lsl #2]
   3747c:	ldr	ip, [r1, r7, lsl #2]
   37480:	bcs	37490 <GetDataSlab+0x3334>
   37484:	mov	r1, ip
   37488:	mov	r2, r7
   3748c:	b	37518 <GetDataSlab+0x33bc>
   37490:	vmov.i32	q9, #1	; 0x00000001
   37494:	vmov.i32	q10, #1	; 0x00000001
   37498:	vmov.32	d23[1], ip
   3749c:	vmov.i32	q8, #1	; 0x00000001
   374a0:	bic	r1, r6, #3
   374a4:	bic	r8, r7, #3
   374a8:	sub	r2, r7, r1
   374ac:	vmov.32	d18[0], r5
   374b0:	vmov.32	d20[0], r4
   374b4:	mov	r4, sl
   374b8:	vorr	d16, d18, d18
   374bc:	vmov.i32	q9, #1	; 0x00000001
   374c0:	vorr	d18, d20, d20
   374c4:	vld1.32	{d20-d21}, [r4], r9
   374c8:	subs	r8, r8, #4
   374cc:	vrev64.32	q12, q10
   374d0:	vext.8	q12, q12, q12, #8
   374d4:	vext.8	q11, q11, q12, #12
   374d8:	vmul.i32	q9, q9, q12
   374dc:	vmul.i32	q8, q11, q8
   374e0:	vorr	q11, q12, q12
   374e4:	bne	374c4 <GetDataSlab+0x3368>
   374e8:	vext.8	q11, q9, q8, #8
   374ec:	vext.8	q12, q8, q8, #8
   374f0:	cmp	r6, r1
   374f4:	vmul.i32	q0, q9, q11
   374f8:	vmul.i32	q1, q8, q12
   374fc:	vmul.i32	q8, q0, d0[1]
   37500:	vmul.i32	q9, q1, d2[1]
   37504:	vmov.32	r4, d16[0]
   37508:	vmov.32	r5, d18[0]
   3750c:	beq	373f4 <GetDataSlab+0x3298>
   37510:	vmov.32	r1, d20[0]
   37514:	ldr	r8, [sp, #88]	; 0x58
   37518:	mul	r5, r1, r5
   3751c:	ldr	r1, [r0, r2, lsl #2]
   37520:	subs	r2, r2, #1
   37524:	mul	r4, r4, r1
   37528:	bne	37518 <GetDataSlab+0x33bc>
   3752c:	b	373f8 <GetDataSlab+0x329c>
   37530:	ldr	r0, [sl]
   37534:	mov	r3, #0
   37538:	sub	lr, fp, #96	; 0x60
   3753c:	str	r0, [sp, #56]	; 0x38
   37540:	sub	r0, r0, #1
   37544:	str	r0, [fp, #-96]	; 0xffffffa0
   37548:	ldr	r0, [fp, #8]
   3754c:	ldr	r0, [r0]
   37550:	str	r0, [sp, #52]	; 0x34
   37554:	str	r0, [fp, #-176]	; 0xffffff50
   37558:	ldr	r0, [fp, #20]
   3755c:	ldr	r1, [r0]
   37560:	ldr	r0, [fp, #24]
   37564:	cmp	r0, #2
   37568:	str	r1, [sp, #68]	; 0x44
   3756c:	str	r1, [sp, #76]	; 0x4c
   37570:	blt	41b04 <GetDataSlab+0xd9a8>
   37574:	ldr	r0, [fp, #8]
   37578:	ldr	r5, [sp, #52]	; 0x34
   3757c:	mov	r7, #1
   37580:	mvn	r9, #15
   37584:	mov	r3, #0
   37588:	mov	r1, r0
   3758c:	sub	r0, r0, #4
   37590:	mov	r4, r5
   37594:	sub	sl, r1, #12
   37598:	mov	r1, #0
   3759c:	str	r1, [sp, #84]	; 0x54
   375a0:	ldr	r1, [sp, #68]	; 0x44
   375a4:	str	r1, [sp, #76]	; 0x4c
   375a8:	b	37608 <GetDataSlab+0x34ac>
   375ac:	ldr	r8, [sp, #88]	; 0x58
   375b0:	sub	r1, fp, #176	; 0xb0
   375b4:	sub	lr, fp, #96	; 0x60
   375b8:	add	sl, sl, #4
   375bc:	mov	r2, r1
   375c0:	str	r5, [r1, r7, lsl #2]
   375c4:	ldr	r1, [fp, #12]
   375c8:	str	r4, [lr, r7, lsl #2]
   375cc:	ldr	r4, [sp, #72]	; 0x48
   375d0:	ldr	r1, [r1, r7, lsl #2]
   375d4:	mla	r3, r1, r4, r3
   375d8:	ldr	r1, [fp, #20]
   375dc:	ldr	r4, [sp, #76]	; 0x4c
   375e0:	ldr	r1, [r1, r7, lsl #2]
   375e4:	add	r7, r7, #1
   375e8:	mul	r4, r1, r4
   375ec:	ldr	r1, [fp, #24]
   375f0:	str	r4, [sp, #76]	; 0x4c
   375f4:	mov	r4, r5
   375f8:	mov	r5, ip
   375fc:	mov	ip, r2
   37600:	cmp	r7, r1
   37604:	beq	41b04 <GetDataSlab+0xd9a8>
   37608:	ldr	r1, [fp, #16]
   3760c:	str	r4, [sp, #72]	; 0x48
   37610:	ldr	r6, [sp, #84]	; 0x54
   37614:	ldr	r1, [r1, r7, lsl #2]
   37618:	str	r5, [ip, r7, lsl #2]
   3761c:	add	r6, r6, #1
   37620:	cmp	r6, #4
   37624:	str	r6, [sp, #84]	; 0x54
   37628:	sub	r4, r1, #1
   3762c:	ldr	r1, [fp, #8]
   37630:	str	r4, [lr, r7, lsl #2]
   37634:	ldr	ip, [r1, r7, lsl #2]
   37638:	bcs	37648 <GetDataSlab+0x34ec>
   3763c:	mov	r1, ip
   37640:	mov	r2, r7
   37644:	b	376d0 <GetDataSlab+0x3574>
   37648:	vmov.i32	q9, #1	; 0x00000001
   3764c:	vmov.i32	q10, #1	; 0x00000001
   37650:	vmov.32	d23[1], ip
   37654:	vmov.i32	q8, #1	; 0x00000001
   37658:	bic	r1, r6, #3
   3765c:	bic	r8, r7, #3
   37660:	sub	r2, r7, r1
   37664:	vmov.32	d18[0], r5
   37668:	vmov.32	d20[0], r4
   3766c:	mov	r4, sl
   37670:	vorr	d16, d18, d18
   37674:	vmov.i32	q9, #1	; 0x00000001
   37678:	vorr	d18, d20, d20
   3767c:	vld1.32	{d20-d21}, [r4], r9
   37680:	subs	r8, r8, #4
   37684:	vrev64.32	q12, q10
   37688:	vext.8	q12, q12, q12, #8
   3768c:	vext.8	q11, q11, q12, #12
   37690:	vmul.i32	q9, q9, q12
   37694:	vmul.i32	q8, q11, q8
   37698:	vorr	q11, q12, q12
   3769c:	bne	3767c <GetDataSlab+0x3520>
   376a0:	vext.8	q11, q9, q8, #8
   376a4:	vext.8	q12, q8, q8, #8
   376a8:	cmp	r6, r1
   376ac:	vmul.i32	q0, q9, q11
   376b0:	vmul.i32	q1, q8, q12
   376b4:	vmul.i32	q8, q0, d0[1]
   376b8:	vmul.i32	q9, q1, d2[1]
   376bc:	vmov.32	r4, d16[0]
   376c0:	vmov.32	r5, d18[0]
   376c4:	beq	375ac <GetDataSlab+0x3450>
   376c8:	vmov.32	r1, d20[0]
   376cc:	ldr	r8, [sp, #88]	; 0x58
   376d0:	mul	r5, r1, r5
   376d4:	ldr	r1, [r0, r2, lsl #2]
   376d8:	subs	r2, r2, #1
   376dc:	mul	r4, r4, r1
   376e0:	bne	376d0 <GetDataSlab+0x3574>
   376e4:	b	375b0 <GetDataSlab+0x3454>
   376e8:	ldr	r0, [sl]
   376ec:	mov	r1, #0
   376f0:	sub	lr, fp, #96	; 0x60
   376f4:	str	r0, [sp, #40]	; 0x28
   376f8:	sub	r0, r0, #1
   376fc:	str	r0, [fp, #-96]	; 0xffffffa0
   37700:	ldr	r0, [fp, #8]
   37704:	ldr	r0, [r0]
   37708:	str	r0, [sp, #60]	; 0x3c
   3770c:	str	r0, [fp, #-176]	; 0xffffff50
   37710:	ldr	r0, [fp, #20]
   37714:	ldr	r2, [r0]
   37718:	ldr	r0, [fp, #24]
   3771c:	cmp	r0, #2
   37720:	str	r2, [sp, #64]	; 0x40
   37724:	str	r2, [sp, #76]	; 0x4c
   37728:	blt	41dc0 <GetDataSlab+0xdc64>
   3772c:	ldr	r0, [fp, #8]
   37730:	ldr	r3, [sp, #60]	; 0x3c
   37734:	ldr	r2, [sp, #64]	; 0x40
   37738:	mov	r6, #1
   3773c:	mov	r9, #0
   37740:	mvn	r5, #15
   37744:	mov	r1, r0
   37748:	sub	r0, r0, #4
   3774c:	mov	r8, r3
   37750:	str	r2, [sp, #76]	; 0x4c
   37754:	sub	sl, r1, #12
   37758:	mov	r1, #0
   3775c:	b	377b4 <GetDataSlab+0x3658>
   37760:	sub	r2, fp, #176	; 0xb0
   37764:	sub	lr, fp, #96	; 0x60
   37768:	add	sl, sl, #4
   3776c:	mov	r7, r2
   37770:	str	r3, [r2, r6, lsl #2]
   37774:	ldr	r2, [fp, #12]
   37778:	str	r4, [lr, r6, lsl #2]
   3777c:	ldr	r4, [sp, #76]	; 0x4c
   37780:	ldr	r2, [r2, r6, lsl #2]
   37784:	mla	r1, r2, r8, r1
   37788:	ldr	r2, [fp, #20]
   3778c:	mov	r8, r3
   37790:	mov	r3, ip
   37794:	mov	ip, r7
   37798:	ldr	r2, [r2, r6, lsl #2]
   3779c:	add	r6, r6, #1
   377a0:	mul	r4, r2, r4
   377a4:	ldr	r2, [fp, #24]
   377a8:	str	r4, [sp, #76]	; 0x4c
   377ac:	cmp	r6, r2
   377b0:	beq	41dc0 <GetDataSlab+0xdc64>
   377b4:	ldr	r2, [fp, #16]
   377b8:	add	r9, r9, #1
   377bc:	cmp	r9, #4
   377c0:	ldr	r2, [r2, r6, lsl #2]
   377c4:	str	r3, [ip, r6, lsl #2]
   377c8:	sub	r4, r2, #1
   377cc:	ldr	r2, [fp, #8]
   377d0:	str	r4, [lr, r6, lsl #2]
   377d4:	ldr	ip, [r2, r6, lsl #2]
   377d8:	bcs	377e8 <GetDataSlab+0x368c>
   377dc:	mov	r2, ip
   377e0:	mov	r7, r6
   377e4:	b	37874 <GetDataSlab+0x3718>
   377e8:	vmov.i32	q9, #1	; 0x00000001
   377ec:	vmov.i32	q10, #1	; 0x00000001
   377f0:	vmov.32	d23[1], ip
   377f4:	vmov.i32	q8, #1	; 0x00000001
   377f8:	mov	lr, r9
   377fc:	bic	r9, r9, #3
   37800:	bic	r2, r6, #3
   37804:	sub	r7, r6, r9
   37808:	vmov.32	d18[0], r3
   3780c:	vmov.32	d20[0], r4
   37810:	mov	r3, sl
   37814:	vorr	d16, d18, d18
   37818:	vmov.i32	q9, #1	; 0x00000001
   3781c:	vorr	d18, d20, d20
   37820:	vld1.32	{d20-d21}, [r3], r5
   37824:	subs	r2, r2, #4
   37828:	vrev64.32	q12, q10
   3782c:	vext.8	q12, q12, q12, #8
   37830:	vext.8	q11, q11, q12, #12
   37834:	vmul.i32	q9, q9, q12
   37838:	vmul.i32	q8, q11, q8
   3783c:	vorr	q11, q12, q12
   37840:	bne	37820 <GetDataSlab+0x36c4>
   37844:	vext.8	q11, q9, q8, #8
   37848:	vext.8	q12, q8, q8, #8
   3784c:	cmp	lr, r9
   37850:	mov	r9, lr
   37854:	vmul.i32	q0, q9, q11
   37858:	vmul.i32	q1, q8, q12
   3785c:	vmul.i32	q8, q0, d0[1]
   37860:	vmul.i32	q9, q1, d2[1]
   37864:	vmov.32	r4, d16[0]
   37868:	vmov.32	r3, d18[0]
   3786c:	beq	37760 <GetDataSlab+0x3604>
   37870:	vmov.32	r2, d20[0]
   37874:	mul	r3, r2, r3
   37878:	ldr	r2, [r0, r7, lsl #2]
   3787c:	subs	r7, r7, #1
   37880:	mul	r4, r4, r2
   37884:	bne	37874 <GetDataSlab+0x3718>
   37888:	b	37760 <GetDataSlab+0x3604>
   3788c:	ldr	r0, [sl]
   37890:	mov	r1, #0
   37894:	sub	lr, fp, #96	; 0x60
   37898:	str	r0, [sp, #44]	; 0x2c
   3789c:	sub	r0, r0, #1
   378a0:	str	r0, [fp, #-96]	; 0xffffffa0
   378a4:	ldr	r0, [fp, #8]
   378a8:	ldr	r0, [r0]
   378ac:	str	r0, [sp, #40]	; 0x28
   378b0:	str	r0, [fp, #-176]	; 0xffffff50
   378b4:	ldr	r0, [fp, #20]
   378b8:	ldr	r2, [r0]
   378bc:	ldr	r0, [fp, #24]
   378c0:	cmp	r0, #2
   378c4:	str	r2, [sp, #72]	; 0x48
   378c8:	str	r2, [sp, #76]	; 0x4c
   378cc:	blt	42058 <GetDataSlab+0xdefc>
   378d0:	ldr	r0, [fp, #8]
   378d4:	ldr	r3, [sp, #40]	; 0x28
   378d8:	ldr	r2, [sp, #72]	; 0x48
   378dc:	mov	r6, #1
   378e0:	mov	r9, #0
   378e4:	mvn	r5, #15
   378e8:	mov	r1, r0
   378ec:	sub	r0, r0, #4
   378f0:	mov	r8, r3
   378f4:	str	r2, [sp, #76]	; 0x4c
   378f8:	sub	sl, r1, #12
   378fc:	mov	r1, #0
   37900:	b	37958 <GetDataSlab+0x37fc>
   37904:	sub	r2, fp, #176	; 0xb0
   37908:	sub	lr, fp, #96	; 0x60
   3790c:	add	sl, sl, #4
   37910:	mov	r7, r2
   37914:	str	r3, [r2, r6, lsl #2]
   37918:	ldr	r2, [fp, #12]
   3791c:	str	r4, [lr, r6, lsl #2]
   37920:	ldr	r4, [sp, #76]	; 0x4c
   37924:	ldr	r2, [r2, r6, lsl #2]
   37928:	mla	r1, r2, r8, r1
   3792c:	ldr	r2, [fp, #20]
   37930:	mov	r8, r3
   37934:	mov	r3, ip
   37938:	mov	ip, r7
   3793c:	ldr	r2, [r2, r6, lsl #2]
   37940:	add	r6, r6, #1
   37944:	mul	r4, r2, r4
   37948:	ldr	r2, [fp, #24]
   3794c:	str	r4, [sp, #76]	; 0x4c
   37950:	cmp	r6, r2
   37954:	beq	42058 <GetDataSlab+0xdefc>
   37958:	ldr	r2, [fp, #16]
   3795c:	add	r9, r9, #1
   37960:	cmp	r9, #4
   37964:	ldr	r2, [r2, r6, lsl #2]
   37968:	str	r3, [ip, r6, lsl #2]
   3796c:	sub	r4, r2, #1
   37970:	ldr	r2, [fp, #8]
   37974:	str	r4, [lr, r6, lsl #2]
   37978:	ldr	ip, [r2, r6, lsl #2]
   3797c:	bcs	3798c <GetDataSlab+0x3830>
   37980:	mov	r2, ip
   37984:	mov	r7, r6
   37988:	b	37a18 <GetDataSlab+0x38bc>
   3798c:	vmov.i32	q9, #1	; 0x00000001
   37990:	vmov.i32	q10, #1	; 0x00000001
   37994:	vmov.32	d23[1], ip
   37998:	vmov.i32	q8, #1	; 0x00000001
   3799c:	mov	lr, r9
   379a0:	bic	r9, r9, #3
   379a4:	bic	r2, r6, #3
   379a8:	sub	r7, r6, r9
   379ac:	vmov.32	d18[0], r3
   379b0:	vmov.32	d20[0], r4
   379b4:	mov	r3, sl
   379b8:	vorr	d16, d18, d18
   379bc:	vmov.i32	q9, #1	; 0x00000001
   379c0:	vorr	d18, d20, d20
   379c4:	vld1.32	{d20-d21}, [r3], r5
   379c8:	subs	r2, r2, #4
   379cc:	vrev64.32	q12, q10
   379d0:	vext.8	q12, q12, q12, #8
   379d4:	vext.8	q11, q11, q12, #12
   379d8:	vmul.i32	q9, q9, q12
   379dc:	vmul.i32	q8, q11, q8
   379e0:	vorr	q11, q12, q12
   379e4:	bne	379c4 <GetDataSlab+0x3868>
   379e8:	vext.8	q11, q9, q8, #8
   379ec:	vext.8	q12, q8, q8, #8
   379f0:	cmp	lr, r9
   379f4:	mov	r9, lr
   379f8:	vmul.i32	q0, q9, q11
   379fc:	vmul.i32	q1, q8, q12
   37a00:	vmul.i32	q8, q0, d0[1]
   37a04:	vmul.i32	q9, q1, d2[1]
   37a08:	vmov.32	r4, d16[0]
   37a0c:	vmov.32	r3, d18[0]
   37a10:	beq	37904 <GetDataSlab+0x37a8>
   37a14:	vmov.32	r2, d20[0]
   37a18:	mul	r3, r2, r3
   37a1c:	ldr	r2, [r0, r7, lsl #2]
   37a20:	subs	r7, r7, #1
   37a24:	mul	r4, r4, r2
   37a28:	bne	37a18 <GetDataSlab+0x38bc>
   37a2c:	b	37904 <GetDataSlab+0x37a8>
   37a30:	ldr	r0, [sl]
   37a34:	mov	r7, #0
   37a38:	sub	lr, fp, #96	; 0x60
   37a3c:	str	r0, [sp, #20]
   37a40:	sub	r0, r0, #1
   37a44:	str	r0, [fp, #-96]	; 0xffffffa0
   37a48:	ldr	r0, [fp, #8]
   37a4c:	ldr	r0, [r0]
   37a50:	str	r0, [sp, #16]
   37a54:	str	r0, [fp, #-176]	; 0xffffff50
   37a58:	ldr	r0, [fp, #20]
   37a5c:	ldr	r1, [r0]
   37a60:	ldr	r0, [fp, #24]
   37a64:	cmp	r0, #2
   37a68:	str	r1, [sp, #52]	; 0x34
   37a6c:	str	r1, [sp, #60]	; 0x3c
   37a70:	blt	42354 <GetDataSlab+0xe1f8>
   37a74:	ldr	r0, [fp, #8]
   37a78:	ldr	r4, [sp, #16]
   37a7c:	mov	r3, #1
   37a80:	mov	r9, #0
   37a84:	mvn	r6, #15
   37a88:	mov	r7, #0
   37a8c:	mov	r1, r0
   37a90:	sub	r0, r0, #4
   37a94:	mov	r8, r4
   37a98:	sub	sl, r1, #12
   37a9c:	ldr	r1, [sp, #52]	; 0x34
   37aa0:	str	r1, [sp, #60]	; 0x3c
   37aa4:	b	37afc <GetDataSlab+0x39a0>
   37aa8:	sub	r1, fp, #176	; 0xb0
   37aac:	sub	lr, fp, #96	; 0x60
   37ab0:	add	sl, sl, #4
   37ab4:	mov	r2, r1
   37ab8:	str	r4, [r1, r3, lsl #2]
   37abc:	ldr	r1, [fp, #12]
   37ac0:	str	r5, [lr, r3, lsl #2]
   37ac4:	ldr	r5, [sp, #60]	; 0x3c
   37ac8:	ldr	r1, [r1, r3, lsl #2]
   37acc:	mla	r7, r1, r8, r7
   37ad0:	ldr	r1, [fp, #20]
   37ad4:	mov	r8, r4
   37ad8:	mov	r4, ip
   37adc:	mov	ip, r2
   37ae0:	ldr	r1, [r1, r3, lsl #2]
   37ae4:	add	r3, r3, #1
   37ae8:	mul	r5, r1, r5
   37aec:	ldr	r1, [fp, #24]
   37af0:	str	r5, [sp, #60]	; 0x3c
   37af4:	cmp	r3, r1
   37af8:	beq	42354 <GetDataSlab+0xe1f8>
   37afc:	ldr	r1, [fp, #16]
   37b00:	add	r9, r9, #1
   37b04:	cmp	r9, #4
   37b08:	ldr	r1, [r1, r3, lsl #2]
   37b0c:	str	r4, [ip, r3, lsl #2]
   37b10:	sub	r5, r1, #1
   37b14:	ldr	r1, [fp, #8]
   37b18:	str	r5, [lr, r3, lsl #2]
   37b1c:	ldr	ip, [r1, r3, lsl #2]
   37b20:	bcs	37b30 <GetDataSlab+0x39d4>
   37b24:	mov	r1, ip
   37b28:	mov	r2, r3
   37b2c:	b	37bbc <GetDataSlab+0x3a60>
   37b30:	vmov.i32	q9, #1	; 0x00000001
   37b34:	vmov.i32	q10, #1	; 0x00000001
   37b38:	vmov.32	d23[1], ip
   37b3c:	vmov.i32	q8, #1	; 0x00000001
   37b40:	mov	lr, r9
   37b44:	bic	r9, r9, #3
   37b48:	bic	r1, r3, #3
   37b4c:	sub	r2, r3, r9
   37b50:	vmov.32	d18[0], r4
   37b54:	vmov.32	d20[0], r5
   37b58:	mov	r4, sl
   37b5c:	vorr	d16, d18, d18
   37b60:	vmov.i32	q9, #1	; 0x00000001
   37b64:	vorr	d18, d20, d20
   37b68:	vld1.32	{d20-d21}, [r4], r6
   37b6c:	subs	r1, r1, #4
   37b70:	vrev64.32	q12, q10
   37b74:	vext.8	q12, q12, q12, #8
   37b78:	vext.8	q11, q11, q12, #12
   37b7c:	vmul.i32	q9, q9, q12
   37b80:	vmul.i32	q8, q11, q8
   37b84:	vorr	q11, q12, q12
   37b88:	bne	37b68 <GetDataSlab+0x3a0c>
   37b8c:	vext.8	q11, q9, q8, #8
   37b90:	vext.8	q12, q8, q8, #8
   37b94:	cmp	lr, r9
   37b98:	mov	r9, lr
   37b9c:	vmul.i32	q0, q9, q11
   37ba0:	vmul.i32	q1, q8, q12
   37ba4:	vmul.i32	q8, q0, d0[1]
   37ba8:	vmul.i32	q9, q1, d2[1]
   37bac:	vmov.32	r5, d16[0]
   37bb0:	vmov.32	r4, d18[0]
   37bb4:	beq	37aa8 <GetDataSlab+0x394c>
   37bb8:	vmov.32	r1, d20[0]
   37bbc:	mul	r4, r1, r4
   37bc0:	ldr	r1, [r0, r2, lsl #2]
   37bc4:	subs	r2, r2, #1
   37bc8:	mul	r5, r5, r1
   37bcc:	bne	37bbc <GetDataSlab+0x3a60>
   37bd0:	b	37aa8 <GetDataSlab+0x394c>
   37bd4:	ldr	sl, [sl]
   37bd8:	mov	r3, #0
   37bdc:	sub	lr, fp, #96	; 0x60
   37be0:	sub	r0, sl, #1
   37be4:	str	r0, [fp, #-96]	; 0xffffffa0
   37be8:	ldr	r0, [fp, #8]
   37bec:	ldr	r0, [r0]
   37bf0:	str	r0, [sp, #40]	; 0x28
   37bf4:	str	r0, [fp, #-176]	; 0xffffff50
   37bf8:	ldr	r0, [fp, #20]
   37bfc:	ldr	r1, [r0]
   37c00:	ldr	r0, [fp, #24]
   37c04:	cmp	r0, #2
   37c08:	str	r1, [sp, #60]	; 0x3c
   37c0c:	str	r1, [sp, #76]	; 0x4c
   37c10:	blt	42678 <GetDataSlab+0xe51c>
   37c14:	ldr	r0, [fp, #8]
   37c18:	ldr	r4, [sp, #40]	; 0x28
   37c1c:	mov	r2, ip
   37c20:	mov	r6, #1
   37c24:	mov	r9, #0
   37c28:	mvn	r5, #15
   37c2c:	mov	r3, #0
   37c30:	mov	r1, r0
   37c34:	sub	r0, r0, #4
   37c38:	mov	r8, r4
   37c3c:	sub	ip, r1, #12
   37c40:	ldr	r1, [sp, #60]	; 0x3c
   37c44:	str	r1, [sp, #76]	; 0x4c
   37c48:	b	37c98 <GetDataSlab+0x3b3c>
   37c4c:	ldr	r1, [fp, #12]
   37c50:	sub	r2, fp, #176	; 0xb0
   37c54:	sub	lr, fp, #96	; 0x60
   37c58:	add	ip, ip, #4
   37c5c:	str	r7, [lr, r6, lsl #2]
   37c60:	str	r4, [r2, r6, lsl #2]
   37c64:	ldr	r7, [sp, #76]	; 0x4c
   37c68:	ldr	r1, [r1, r6, lsl #2]
   37c6c:	mla	r3, r1, r8, r3
   37c70:	ldr	r1, [fp, #20]
   37c74:	mov	r8, r4
   37c78:	ldr	r4, [sp, #84]	; 0x54
   37c7c:	ldr	r1, [r1, r6, lsl #2]
   37c80:	add	r6, r6, #1
   37c84:	mul	r7, r1, r7
   37c88:	ldr	r1, [fp, #24]
   37c8c:	str	r7, [sp, #76]	; 0x4c
   37c90:	cmp	r6, r1
   37c94:	beq	42678 <GetDataSlab+0xe51c>
   37c98:	ldr	r1, [fp, #16]
   37c9c:	add	r9, r9, #1
   37ca0:	cmp	r9, #4
   37ca4:	ldr	r1, [r1, r6, lsl #2]
   37ca8:	str	r4, [r2, r6, lsl #2]
   37cac:	sub	r7, r1, #1
   37cb0:	ldr	r1, [fp, #8]
   37cb4:	str	r7, [lr, r6, lsl #2]
   37cb8:	ldr	r2, [r1, r6, lsl #2]
   37cbc:	str	r2, [sp, #84]	; 0x54
   37cc0:	bcs	37cd0 <GetDataSlab+0x3b74>
   37cc4:	mov	r1, r2
   37cc8:	mov	r2, r6
   37ccc:	b	37d64 <GetDataSlab+0x3c08>
   37cd0:	vmov.i32	q9, #1	; 0x00000001
   37cd4:	vmov.i32	q10, #1	; 0x00000001
   37cd8:	vmov.32	d23[1], r2
   37cdc:	mov	r1, r9
   37ce0:	vmov.i32	q8, #1	; 0x00000001
   37ce4:	bic	r9, r6, #3
   37ce8:	str	r1, [sp, #72]	; 0x48
   37cec:	bic	r1, r1, #3
   37cf0:	mov	lr, r1
   37cf4:	sub	r2, r6, r1
   37cf8:	mov	r1, ip
   37cfc:	vmov.32	d18[0], r4
   37d00:	vmov.32	d20[0], r7
   37d04:	vorr	d16, d18, d18
   37d08:	vmov.i32	q9, #1	; 0x00000001
   37d0c:	vorr	d18, d20, d20
   37d10:	vld1.32	{d20-d21}, [r1], r5
   37d14:	subs	r9, r9, #4
   37d18:	vrev64.32	q12, q10
   37d1c:	vext.8	q12, q12, q12, #8
   37d20:	vext.8	q11, q11, q12, #12
   37d24:	vmul.i32	q9, q9, q12
   37d28:	vmul.i32	q8, q11, q8
   37d2c:	vorr	q11, q12, q12
   37d30:	bne	37d10 <GetDataSlab+0x3bb4>
   37d34:	vext.8	q11, q9, q8, #8
   37d38:	vext.8	q12, q8, q8, #8
   37d3c:	ldr	r9, [sp, #72]	; 0x48
   37d40:	vmul.i32	q0, q9, q11
   37d44:	vmul.i32	q1, q8, q12
   37d48:	cmp	r9, lr
   37d4c:	vmul.i32	q8, q0, d0[1]
   37d50:	vmul.i32	q9, q1, d2[1]
   37d54:	vmov.32	r7, d16[0]
   37d58:	vmov.32	r4, d18[0]
   37d5c:	beq	37c4c <GetDataSlab+0x3af0>
   37d60:	vmov.32	r1, d20[0]
   37d64:	mul	r4, r1, r4
   37d68:	ldr	r1, [r0, r2, lsl #2]
   37d6c:	subs	r2, r2, #1
   37d70:	mul	r7, r7, r1
   37d74:	bne	37d64 <GetDataSlab+0x3c08>
   37d78:	b	37c4c <GetDataSlab+0x3af0>
   37d7c:	ldr	r0, [sl]
   37d80:	mov	r1, #0
   37d84:	sub	r6, fp, #96	; 0x60
   37d88:	str	r0, [sp, #68]	; 0x44
   37d8c:	sub	r0, r0, #1
   37d90:	str	r0, [fp, #-96]	; 0xffffffa0
   37d94:	ldr	r0, [fp, #8]
   37d98:	ldr	r0, [r0]
   37d9c:	str	r0, [sp, #48]	; 0x30
   37da0:	str	r0, [fp, #-176]	; 0xffffff50
   37da4:	ldr	r0, [fp, #20]
   37da8:	ldr	r2, [r0]
   37dac:	ldr	r0, [fp, #24]
   37db0:	cmp	r0, #2
   37db4:	str	r2, [sp, #64]	; 0x40
   37db8:	str	r2, [sp, #76]	; 0x4c
   37dbc:	blt	429f4 <GetDataSlab+0xe898>
   37dc0:	ldr	r0, [fp, #8]
   37dc4:	ldr	r3, [sp, #48]	; 0x30
   37dc8:	ldr	r2, [sp, #64]	; 0x40
   37dcc:	mov	r5, #1
   37dd0:	mov	r9, #0
   37dd4:	mvn	r4, #15
   37dd8:	mov	r1, r0
   37ddc:	sub	r0, r0, #4
   37de0:	mov	sl, r3
   37de4:	str	r2, [sp, #76]	; 0x4c
   37de8:	sub	lr, r1, #12
   37dec:	mov	r1, #0
   37df0:	b	37e40 <GetDataSlab+0x3ce4>
   37df4:	sub	ip, fp, #176	; 0xb0
   37df8:	sub	r6, fp, #96	; 0x60
   37dfc:	str	r3, [ip, r5, lsl #2]
   37e00:	ldr	r7, [sp, #76]	; 0x4c
   37e04:	add	lr, lr, #4
   37e08:	str	r2, [r6, r5, lsl #2]
   37e0c:	ldr	r2, [fp, #12]
   37e10:	ldr	r2, [r2, r5, lsl #2]
   37e14:	mla	r1, r2, sl, r1
   37e18:	ldr	r2, [fp, #20]
   37e1c:	mov	sl, r3
   37e20:	mov	r3, r8
   37e24:	ldr	r2, [r2, r5, lsl #2]
   37e28:	add	r5, r5, #1
   37e2c:	mul	r7, r2, r7
   37e30:	ldr	r2, [fp, #24]
   37e34:	str	r7, [sp, #76]	; 0x4c
   37e38:	cmp	r5, r2
   37e3c:	beq	429f4 <GetDataSlab+0xe898>
   37e40:	ldr	r2, [fp, #16]
   37e44:	add	r9, r9, #1
   37e48:	cmp	r9, #4
   37e4c:	ldr	r2, [r2, r5, lsl #2]
   37e50:	str	r3, [ip, r5, lsl #2]
   37e54:	sub	r2, r2, #1
   37e58:	str	r2, [r6, r5, lsl #2]
   37e5c:	ldr	r6, [fp, #8]
   37e60:	ldr	r8, [r6, r5, lsl #2]
   37e64:	bcs	37e74 <GetDataSlab+0x3d18>
   37e68:	mov	r7, r8
   37e6c:	mov	r6, r5
   37e70:	b	37efc <GetDataSlab+0x3da0>
   37e74:	vmov.i32	q9, #1	; 0x00000001
   37e78:	vmov.i32	q10, #1	; 0x00000001
   37e7c:	vmov.32	d23[1], r8
   37e80:	vmov.i32	q8, #1	; 0x00000001
   37e84:	bic	r7, r9, #3
   37e88:	bic	ip, r5, #3
   37e8c:	sub	r6, r5, r7
   37e90:	vmov.32	d18[0], r3
   37e94:	vmov.32	d20[0], r2
   37e98:	mov	r2, lr
   37e9c:	vorr	d16, d18, d18
   37ea0:	vmov.i32	q9, #1	; 0x00000001
   37ea4:	vorr	d18, d20, d20
   37ea8:	vld1.32	{d20-d21}, [r2], r4
   37eac:	subs	ip, ip, #4
   37eb0:	vrev64.32	q12, q10
   37eb4:	vext.8	q12, q12, q12, #8
   37eb8:	vext.8	q11, q11, q12, #12
   37ebc:	vmul.i32	q9, q9, q12
   37ec0:	vmul.i32	q8, q11, q8
   37ec4:	vorr	q11, q12, q12
   37ec8:	bne	37ea8 <GetDataSlab+0x3d4c>
   37ecc:	vext.8	q11, q9, q8, #8
   37ed0:	vext.8	q12, q8, q8, #8
   37ed4:	cmp	r9, r7
   37ed8:	vmul.i32	q0, q9, q11
   37edc:	vmul.i32	q1, q8, q12
   37ee0:	vmul.i32	q8, q0, d0[1]
   37ee4:	vmul.i32	q9, q1, d2[1]
   37ee8:	vmov.32	r2, d16[0]
   37eec:	vmov.32	r3, d18[0]
   37ef0:	beq	37df4 <GetDataSlab+0x3c98>
   37ef4:	vmov.32	r7, d20[0]
   37ef8:	sub	ip, fp, #176	; 0xb0
   37efc:	mul	r3, r7, r3
   37f00:	ldr	r7, [r0, r6, lsl #2]
   37f04:	subs	r6, r6, #1
   37f08:	mul	r2, r2, r7
   37f0c:	bne	37efc <GetDataSlab+0x3da0>
   37f10:	b	37df8 <GetDataSlab+0x3c9c>
   37f14:	ldr	r0, [sl]
   37f18:	mov	r1, #0
   37f1c:	sub	r6, fp, #96	; 0x60
   37f20:	str	r0, [sp, #68]	; 0x44
   37f24:	sub	r0, r0, #1
   37f28:	str	r0, [fp, #-96]	; 0xffffffa0
   37f2c:	ldr	r0, [fp, #8]
   37f30:	ldr	r0, [r0]
   37f34:	str	r0, [sp, #48]	; 0x30
   37f38:	str	r0, [fp, #-176]	; 0xffffff50
   37f3c:	ldr	r0, [fp, #20]
   37f40:	ldr	r2, [r0]
   37f44:	ldr	r0, [fp, #24]
   37f48:	cmp	r0, #2
   37f4c:	str	r2, [sp, #64]	; 0x40
   37f50:	str	r2, [sp, #76]	; 0x4c
   37f54:	blt	42cb0 <GetDataSlab+0xeb54>
   37f58:	ldr	r0, [fp, #8]
   37f5c:	ldr	r3, [sp, #48]	; 0x30
   37f60:	ldr	r2, [sp, #64]	; 0x40
   37f64:	mov	r5, #1
   37f68:	mov	r9, #0
   37f6c:	mvn	r4, #15
   37f70:	mov	r1, r0
   37f74:	sub	r0, r0, #4
   37f78:	mov	sl, r3
   37f7c:	str	r2, [sp, #76]	; 0x4c
   37f80:	sub	lr, r1, #12
   37f84:	mov	r1, #0
   37f88:	b	37fd8 <GetDataSlab+0x3e7c>
   37f8c:	sub	ip, fp, #176	; 0xb0
   37f90:	sub	r6, fp, #96	; 0x60
   37f94:	str	r3, [ip, r5, lsl #2]
   37f98:	ldr	r7, [sp, #76]	; 0x4c
   37f9c:	add	lr, lr, #4
   37fa0:	str	r2, [r6, r5, lsl #2]
   37fa4:	ldr	r2, [fp, #12]
   37fa8:	ldr	r2, [r2, r5, lsl #2]
   37fac:	mla	r1, r2, sl, r1
   37fb0:	ldr	r2, [fp, #20]
   37fb4:	mov	sl, r3
   37fb8:	mov	r3, r8
   37fbc:	ldr	r2, [r2, r5, lsl #2]
   37fc0:	add	r5, r5, #1
   37fc4:	mul	r7, r2, r7
   37fc8:	ldr	r2, [fp, #24]
   37fcc:	str	r7, [sp, #76]	; 0x4c
   37fd0:	cmp	r5, r2
   37fd4:	beq	42cb0 <GetDataSlab+0xeb54>
   37fd8:	ldr	r2, [fp, #16]
   37fdc:	add	r9, r9, #1
   37fe0:	cmp	r9, #4
   37fe4:	ldr	r2, [r2, r5, lsl #2]
   37fe8:	str	r3, [ip, r5, lsl #2]
   37fec:	sub	r2, r2, #1
   37ff0:	str	r2, [r6, r5, lsl #2]
   37ff4:	ldr	r6, [fp, #8]
   37ff8:	ldr	r8, [r6, r5, lsl #2]
   37ffc:	bcs	3800c <GetDataSlab+0x3eb0>
   38000:	mov	r7, r8
   38004:	mov	r6, r5
   38008:	b	38094 <GetDataSlab+0x3f38>
   3800c:	vmov.i32	q9, #1	; 0x00000001
   38010:	vmov.i32	q10, #1	; 0x00000001
   38014:	vmov.32	d23[1], r8
   38018:	vmov.i32	q8, #1	; 0x00000001
   3801c:	bic	r7, r9, #3
   38020:	bic	ip, r5, #3
   38024:	sub	r6, r5, r7
   38028:	vmov.32	d18[0], r3
   3802c:	vmov.32	d20[0], r2
   38030:	mov	r2, lr
   38034:	vorr	d16, d18, d18
   38038:	vmov.i32	q9, #1	; 0x00000001
   3803c:	vorr	d18, d20, d20
   38040:	vld1.32	{d20-d21}, [r2], r4
   38044:	subs	ip, ip, #4
   38048:	vrev64.32	q12, q10
   3804c:	vext.8	q12, q12, q12, #8
   38050:	vext.8	q11, q11, q12, #12
   38054:	vmul.i32	q9, q9, q12
   38058:	vmul.i32	q8, q11, q8
   3805c:	vorr	q11, q12, q12
   38060:	bne	38040 <GetDataSlab+0x3ee4>
   38064:	vext.8	q11, q9, q8, #8
   38068:	vext.8	q12, q8, q8, #8
   3806c:	cmp	r9, r7
   38070:	vmul.i32	q0, q9, q11
   38074:	vmul.i32	q1, q8, q12
   38078:	vmul.i32	q8, q0, d0[1]
   3807c:	vmul.i32	q9, q1, d2[1]
   38080:	vmov.32	r2, d16[0]
   38084:	vmov.32	r3, d18[0]
   38088:	beq	37f8c <GetDataSlab+0x3e30>
   3808c:	vmov.32	r7, d20[0]
   38090:	sub	ip, fp, #176	; 0xb0
   38094:	mul	r3, r7, r3
   38098:	ldr	r7, [r0, r6, lsl #2]
   3809c:	subs	r6, r6, #1
   380a0:	mul	r2, r2, r7
   380a4:	bne	38094 <GetDataSlab+0x3f38>
   380a8:	b	37f90 <GetDataSlab+0x3e34>
   380ac:	ldr	r0, [sl]
   380b0:	mov	r2, ip
   380b4:	mov	r3, #0
   380b8:	sub	ip, fp, #96	; 0x60
   380bc:	str	r0, [sp, #52]	; 0x34
   380c0:	sub	r0, r0, #1
   380c4:	str	r0, [fp, #-96]	; 0xffffffa0
   380c8:	ldr	r0, [fp, #8]
   380cc:	ldr	r0, [r0]
   380d0:	str	r0, [sp, #56]	; 0x38
   380d4:	str	r0, [fp, #-176]	; 0xffffff50
   380d8:	ldr	r0, [fp, #20]
   380dc:	ldr	r1, [r0]
   380e0:	ldr	r0, [fp, #24]
   380e4:	cmp	r0, #2
   380e8:	str	r1, [sp, #72]	; 0x48
   380ec:	str	r1, [sp, #76]	; 0x4c
   380f0:	blt	42f6c <GetDataSlab+0xee10>
   380f4:	ldr	r0, [fp, #8]
   380f8:	ldr	r5, [sp, #56]	; 0x38
   380fc:	mov	r7, #1
   38100:	mov	lr, #0
   38104:	mvn	r6, #15
   38108:	mov	r3, #0
   3810c:	mov	r1, r0
   38110:	sub	r0, r0, #4
   38114:	mov	r8, r5
   38118:	sub	sl, r1, #12
   3811c:	ldr	r1, [sp, #72]	; 0x48
   38120:	str	r1, [sp, #76]	; 0x4c
   38124:	b	38174 <GetDataSlab+0x4018>
   38128:	ldr	r1, [fp, #12]
   3812c:	sub	r2, fp, #176	; 0xb0
   38130:	sub	ip, fp, #96	; 0x60
   38134:	add	sl, sl, #4
   38138:	str	r4, [ip, r7, lsl #2]
   3813c:	str	r5, [r2, r7, lsl #2]
   38140:	ldr	r4, [sp, #76]	; 0x4c
   38144:	ldr	r1, [r1, r7, lsl #2]
   38148:	mla	r3, r1, r8, r3
   3814c:	ldr	r1, [fp, #20]
   38150:	mov	r8, r5
   38154:	mov	r5, r9
   38158:	ldr	r1, [r1, r7, lsl #2]
   3815c:	add	r7, r7, #1
   38160:	mul	r4, r1, r4
   38164:	ldr	r1, [fp, #24]
   38168:	str	r4, [sp, #76]	; 0x4c
   3816c:	cmp	r7, r1
   38170:	beq	42f6c <GetDataSlab+0xee10>
   38174:	ldr	r1, [fp, #16]
   38178:	add	lr, lr, #1
   3817c:	cmp	lr, #4
   38180:	ldr	r1, [r1, r7, lsl #2]
   38184:	str	r5, [r2, r7, lsl #2]
   38188:	sub	r4, r1, #1
   3818c:	ldr	r1, [fp, #8]
   38190:	str	r4, [ip, r7, lsl #2]
   38194:	ldr	r1, [r1, r7, lsl #2]
   38198:	bcs	381a8 <GetDataSlab+0x404c>
   3819c:	mov	r9, r1
   381a0:	mov	r2, r7
   381a4:	b	38230 <GetDataSlab+0x40d4>
   381a8:	vmov.i32	q9, #1	; 0x00000001
   381ac:	vmov.i32	q10, #1	; 0x00000001
   381b0:	vmov.32	d23[1], r1
   381b4:	vmov.i32	q8, #1	; 0x00000001
   381b8:	bic	ip, lr, #3
   381bc:	bic	r9, r7, #3
   381c0:	sub	r2, r7, ip
   381c4:	vmov.32	d18[0], r5
   381c8:	vmov.32	d20[0], r4
   381cc:	mov	r4, sl
   381d0:	vorr	d16, d18, d18
   381d4:	vmov.i32	q9, #1	; 0x00000001
   381d8:	vorr	d18, d20, d20
   381dc:	vld1.32	{d20-d21}, [r4], r6
   381e0:	subs	r9, r9, #4
   381e4:	vrev64.32	q12, q10
   381e8:	vext.8	q12, q12, q12, #8
   381ec:	vext.8	q11, q11, q12, #12
   381f0:	vmul.i32	q9, q9, q12
   381f4:	vmul.i32	q8, q11, q8
   381f8:	vorr	q11, q12, q12
   381fc:	bne	381dc <GetDataSlab+0x4080>
   38200:	vext.8	q11, q9, q8, #8
   38204:	vext.8	q12, q8, q8, #8
   38208:	mov	r9, r1
   3820c:	cmp	lr, ip
   38210:	vmul.i32	q0, q9, q11
   38214:	vmul.i32	q1, q8, q12
   38218:	vmul.i32	q8, q0, d0[1]
   3821c:	vmul.i32	q9, q1, d2[1]
   38220:	vmov.32	r4, d16[0]
   38224:	vmov.32	r5, d18[0]
   38228:	beq	38128 <GetDataSlab+0x3fcc>
   3822c:	vmov.32	r1, d20[0]
   38230:	mul	r5, r1, r5
   38234:	ldr	r1, [r0, r2, lsl #2]
   38238:	subs	r2, r2, #1
   3823c:	mul	r4, r4, r1
   38240:	bne	38230 <GetDataSlab+0x40d4>
   38244:	b	38128 <GetDataSlab+0x3fcc>
   38248:	ldr	r0, [sl]
   3824c:	mov	r2, ip
   38250:	mov	r3, #0
   38254:	sub	ip, fp, #96	; 0x60
   38258:	str	r0, [sp, #52]	; 0x34
   3825c:	sub	r0, r0, #1
   38260:	str	r0, [fp, #-96]	; 0xffffffa0
   38264:	ldr	r0, [fp, #8]
   38268:	ldr	r0, [r0]
   3826c:	str	r0, [sp, #56]	; 0x38
   38270:	str	r0, [fp, #-176]	; 0xffffff50
   38274:	ldr	r0, [fp, #20]
   38278:	ldr	r1, [r0]
   3827c:	ldr	r0, [fp, #24]
   38280:	cmp	r0, #2
   38284:	str	r1, [sp, #72]	; 0x48
   38288:	str	r1, [sp, #76]	; 0x4c
   3828c:	blt	431f8 <GetDataSlab+0xf09c>
   38290:	ldr	r0, [fp, #8]
   38294:	ldr	r5, [sp, #56]	; 0x38
   38298:	mov	r7, #1
   3829c:	mov	lr, #0
   382a0:	mvn	r6, #15
   382a4:	mov	r3, #0
   382a8:	mov	r1, r0
   382ac:	sub	r0, r0, #4
   382b0:	mov	r8, r5
   382b4:	sub	sl, r1, #12
   382b8:	ldr	r1, [sp, #72]	; 0x48
   382bc:	str	r1, [sp, #76]	; 0x4c
   382c0:	b	38310 <GetDataSlab+0x41b4>
   382c4:	ldr	r1, [fp, #12]
   382c8:	sub	r2, fp, #176	; 0xb0
   382cc:	sub	ip, fp, #96	; 0x60
   382d0:	add	sl, sl, #4
   382d4:	str	r4, [ip, r7, lsl #2]
   382d8:	str	r5, [r2, r7, lsl #2]
   382dc:	ldr	r4, [sp, #76]	; 0x4c
   382e0:	ldr	r1, [r1, r7, lsl #2]
   382e4:	mla	r3, r1, r8, r3
   382e8:	ldr	r1, [fp, #20]
   382ec:	mov	r8, r5
   382f0:	mov	r5, r9
   382f4:	ldr	r1, [r1, r7, lsl #2]
   382f8:	add	r7, r7, #1
   382fc:	mul	r4, r1, r4
   38300:	ldr	r1, [fp, #24]
   38304:	str	r4, [sp, #76]	; 0x4c
   38308:	cmp	r7, r1
   3830c:	beq	431f8 <GetDataSlab+0xf09c>
   38310:	ldr	r1, [fp, #16]
   38314:	add	lr, lr, #1
   38318:	cmp	lr, #4
   3831c:	ldr	r1, [r1, r7, lsl #2]
   38320:	str	r5, [r2, r7, lsl #2]
   38324:	sub	r4, r1, #1
   38328:	ldr	r1, [fp, #8]
   3832c:	str	r4, [ip, r7, lsl #2]
   38330:	ldr	r1, [r1, r7, lsl #2]
   38334:	bcs	38344 <GetDataSlab+0x41e8>
   38338:	mov	r9, r1
   3833c:	mov	r2, r7
   38340:	b	383cc <GetDataSlab+0x4270>
   38344:	vmov.i32	q9, #1	; 0x00000001
   38348:	vmov.i32	q10, #1	; 0x00000001
   3834c:	vmov.32	d23[1], r1
   38350:	vmov.i32	q8, #1	; 0x00000001
   38354:	bic	ip, lr, #3
   38358:	bic	r9, r7, #3
   3835c:	sub	r2, r7, ip
   38360:	vmov.32	d18[0], r5
   38364:	vmov.32	d20[0], r4
   38368:	mov	r4, sl
   3836c:	vorr	d16, d18, d18
   38370:	vmov.i32	q9, #1	; 0x00000001
   38374:	vorr	d18, d20, d20
   38378:	vld1.32	{d20-d21}, [r4], r6
   3837c:	subs	r9, r9, #4
   38380:	vrev64.32	q12, q10
   38384:	vext.8	q12, q12, q12, #8
   38388:	vext.8	q11, q11, q12, #12
   3838c:	vmul.i32	q9, q9, q12
   38390:	vmul.i32	q8, q11, q8
   38394:	vorr	q11, q12, q12
   38398:	bne	38378 <GetDataSlab+0x421c>
   3839c:	vext.8	q11, q9, q8, #8
   383a0:	vext.8	q12, q8, q8, #8
   383a4:	mov	r9, r1
   383a8:	cmp	lr, ip
   383ac:	vmul.i32	q0, q9, q11
   383b0:	vmul.i32	q1, q8, q12
   383b4:	vmul.i32	q8, q0, d0[1]
   383b8:	vmul.i32	q9, q1, d2[1]
   383bc:	vmov.32	r4, d16[0]
   383c0:	vmov.32	r5, d18[0]
   383c4:	beq	382c4 <GetDataSlab+0x4168>
   383c8:	vmov.32	r1, d20[0]
   383cc:	mul	r5, r1, r5
   383d0:	ldr	r1, [r0, r2, lsl #2]
   383d4:	subs	r2, r2, #1
   383d8:	mul	r4, r4, r1
   383dc:	bne	383cc <GetDataSlab+0x4270>
   383e0:	b	382c4 <GetDataSlab+0x4168>
   383e4:	ldr	r0, [sl]
   383e8:	mov	r1, #0
   383ec:	sub	r6, fp, #96	; 0x60
   383f0:	str	r0, [sp, #52]	; 0x34
   383f4:	sub	r0, r0, #1
   383f8:	str	r0, [fp, #-96]	; 0xffffffa0
   383fc:	ldr	r0, [fp, #8]
   38400:	ldr	r0, [r0]
   38404:	str	r0, [sp, #60]	; 0x3c
   38408:	str	r0, [fp, #-176]	; 0xffffff50
   3840c:	ldr	r0, [fp, #20]
   38410:	ldr	r2, [r0]
   38414:	ldr	r0, [fp, #24]
   38418:	cmp	r0, #2
   3841c:	str	r2, [sp, #64]	; 0x40
   38420:	str	r2, [sp, #76]	; 0x4c
   38424:	blt	43484 <GetDataSlab+0xf328>
   38428:	ldr	r0, [fp, #8]
   3842c:	ldr	r7, [sp, #60]	; 0x3c
   38430:	ldr	r2, [sp, #64]	; 0x40
   38434:	mov	r5, #1
   38438:	mov	r8, #0
   3843c:	mvn	r4, #15
   38440:	mov	r1, r0
   38444:	sub	r0, r0, #4
   38448:	mov	r9, r7
   3844c:	str	r2, [sp, #76]	; 0x4c
   38450:	sub	sl, r1, #12
   38454:	mov	r1, #0
   38458:	b	384a8 <GetDataSlab+0x434c>
   3845c:	sub	ip, fp, #176	; 0xb0
   38460:	ldr	r2, [fp, #12]
   38464:	sub	r6, fp, #96	; 0x60
   38468:	str	r7, [ip, r5, lsl #2]
   3846c:	add	sl, sl, #4
   38470:	str	r3, [r6, r5, lsl #2]
   38474:	ldr	r3, [sp, #76]	; 0x4c
   38478:	ldr	r2, [r2, r5, lsl #2]
   3847c:	mla	r1, r2, r9, r1
   38480:	ldr	r2, [fp, #20]
   38484:	mov	r9, r7
   38488:	mov	r7, lr
   3848c:	ldr	r2, [r2, r5, lsl #2]
   38490:	add	r5, r5, #1
   38494:	mul	r3, r2, r3
   38498:	ldr	r2, [fp, #24]
   3849c:	str	r3, [sp, #76]	; 0x4c
   384a0:	cmp	r5, r2
   384a4:	beq	43484 <GetDataSlab+0xf328>
   384a8:	ldr	r2, [fp, #16]
   384ac:	add	r8, r8, #1
   384b0:	cmp	r8, #4
   384b4:	ldr	r2, [r2, r5, lsl #2]
   384b8:	str	r7, [ip, r5, lsl #2]
   384bc:	sub	r3, r2, #1
   384c0:	ldr	r2, [fp, #8]
   384c4:	str	r3, [r6, r5, lsl #2]
   384c8:	ldr	lr, [r2, r5, lsl #2]
   384cc:	bcs	384dc <GetDataSlab+0x4380>
   384d0:	mov	r2, lr
   384d4:	mov	r6, r5
   384d8:	b	38564 <GetDataSlab+0x4408>
   384dc:	vmov.i32	q9, #1	; 0x00000001
   384e0:	vmov.i32	q10, #1	; 0x00000001
   384e4:	vmov.32	d23[1], lr
   384e8:	vmov.i32	q8, #1	; 0x00000001
   384ec:	bic	r2, r8, #3
   384f0:	bic	ip, r5, #3
   384f4:	sub	r6, r5, r2
   384f8:	vmov.32	d18[0], r7
   384fc:	vmov.32	d20[0], r3
   38500:	mov	r3, sl
   38504:	vorr	d16, d18, d18
   38508:	vmov.i32	q9, #1	; 0x00000001
   3850c:	vorr	d18, d20, d20
   38510:	vld1.32	{d20-d21}, [r3], r4
   38514:	subs	ip, ip, #4
   38518:	vrev64.32	q12, q10
   3851c:	vext.8	q12, q12, q12, #8
   38520:	vext.8	q11, q11, q12, #12
   38524:	vmul.i32	q9, q9, q12
   38528:	vmul.i32	q8, q11, q8
   3852c:	vorr	q11, q12, q12
   38530:	bne	38510 <GetDataSlab+0x43b4>
   38534:	vext.8	q11, q9, q8, #8
   38538:	vext.8	q12, q8, q8, #8
   3853c:	cmp	r8, r2
   38540:	vmul.i32	q0, q9, q11
   38544:	vmul.i32	q1, q8, q12
   38548:	vmul.i32	q8, q0, d0[1]
   3854c:	vmul.i32	q9, q1, d2[1]
   38550:	vmov.32	r3, d16[0]
   38554:	vmov.32	r7, d18[0]
   38558:	beq	3845c <GetDataSlab+0x4300>
   3855c:	vmov.32	r2, d20[0]
   38560:	sub	ip, fp, #176	; 0xb0
   38564:	mul	r7, r2, r7
   38568:	ldr	r2, [r0, r6, lsl #2]
   3856c:	subs	r6, r6, #1
   38570:	mul	r3, r3, r2
   38574:	bne	38564 <GetDataSlab+0x4408>
   38578:	b	38460 <GetDataSlab+0x4304>
   3857c:	ldr	r0, [sl]
   38580:	mov	r1, #0
   38584:	sub	lr, fp, #96	; 0x60
   38588:	str	r0, [sp, #44]	; 0x2c
   3858c:	sub	r0, r0, #1
   38590:	str	r0, [fp, #-96]	; 0xffffffa0
   38594:	ldr	r0, [fp, #8]
   38598:	ldr	r0, [r0]
   3859c:	str	r0, [sp, #60]	; 0x3c
   385a0:	str	r0, [fp, #-176]	; 0xffffff50
   385a4:	ldr	r0, [fp, #20]
   385a8:	ldr	r2, [r0]
   385ac:	ldr	r0, [fp, #24]
   385b0:	cmp	r0, #2
   385b4:	str	r2, [sp, #72]	; 0x48
   385b8:	str	r2, [sp, #76]	; 0x4c
   385bc:	blt	43780 <GetDataSlab+0xf624>
   385c0:	ldr	r0, [fp, #8]
   385c4:	ldr	r3, [sp, #60]	; 0x3c
   385c8:	ldr	r2, [sp, #72]	; 0x48
   385cc:	mov	r6, #1
   385d0:	mov	r9, #0
   385d4:	mvn	r5, #15
   385d8:	mov	r1, r0
   385dc:	sub	r0, r0, #4
   385e0:	mov	r8, r3
   385e4:	str	r2, [sp, #76]	; 0x4c
   385e8:	sub	sl, r1, #12
   385ec:	mov	r1, #0
   385f0:	b	38648 <GetDataSlab+0x44ec>
   385f4:	sub	r2, fp, #176	; 0xb0
   385f8:	sub	lr, fp, #96	; 0x60
   385fc:	add	sl, sl, #4
   38600:	mov	r7, r2
   38604:	str	r3, [r2, r6, lsl #2]
   38608:	ldr	r2, [fp, #12]
   3860c:	str	r4, [lr, r6, lsl #2]
   38610:	ldr	r4, [sp, #76]	; 0x4c
   38614:	ldr	r2, [r2, r6, lsl #2]
   38618:	mla	r1, r2, r8, r1
   3861c:	ldr	r2, [fp, #20]
   38620:	mov	r8, r3
   38624:	mov	r3, ip
   38628:	mov	ip, r7
   3862c:	ldr	r2, [r2, r6, lsl #2]
   38630:	add	r6, r6, #1
   38634:	mul	r4, r2, r4
   38638:	ldr	r2, [fp, #24]
   3863c:	str	r4, [sp, #76]	; 0x4c
   38640:	cmp	r6, r2
   38644:	beq	43780 <GetDataSlab+0xf624>
   38648:	ldr	r2, [fp, #16]
   3864c:	add	r9, r9, #1
   38650:	cmp	r9, #4
   38654:	ldr	r2, [r2, r6, lsl #2]
   38658:	str	r3, [ip, r6, lsl #2]
   3865c:	sub	r4, r2, #1
   38660:	ldr	r2, [fp, #8]
   38664:	str	r4, [lr, r6, lsl #2]
   38668:	ldr	ip, [r2, r6, lsl #2]
   3866c:	bcs	3867c <GetDataSlab+0x4520>
   38670:	mov	r2, ip
   38674:	mov	r7, r6
   38678:	b	38708 <GetDataSlab+0x45ac>
   3867c:	vmov.i32	q9, #1	; 0x00000001
   38680:	vmov.i32	q10, #1	; 0x00000001
   38684:	vmov.32	d23[1], ip
   38688:	vmov.i32	q8, #1	; 0x00000001
   3868c:	mov	lr, r9
   38690:	bic	r9, r9, #3
   38694:	bic	r2, r6, #3
   38698:	sub	r7, r6, r9
   3869c:	vmov.32	d18[0], r3
   386a0:	vmov.32	d20[0], r4
   386a4:	mov	r3, sl
   386a8:	vorr	d16, d18, d18
   386ac:	vmov.i32	q9, #1	; 0x00000001
   386b0:	vorr	d18, d20, d20
   386b4:	vld1.32	{d20-d21}, [r3], r5
   386b8:	subs	r2, r2, #4
   386bc:	vrev64.32	q12, q10
   386c0:	vext.8	q12, q12, q12, #8
   386c4:	vext.8	q11, q11, q12, #12
   386c8:	vmul.i32	q9, q9, q12
   386cc:	vmul.i32	q8, q11, q8
   386d0:	vorr	q11, q12, q12
   386d4:	bne	386b4 <GetDataSlab+0x4558>
   386d8:	vext.8	q11, q9, q8, #8
   386dc:	vext.8	q12, q8, q8, #8
   386e0:	cmp	lr, r9
   386e4:	mov	r9, lr
   386e8:	vmul.i32	q0, q9, q11
   386ec:	vmul.i32	q1, q8, q12
   386f0:	vmul.i32	q8, q0, d0[1]
   386f4:	vmul.i32	q9, q1, d2[1]
   386f8:	vmov.32	r4, d16[0]
   386fc:	vmov.32	r3, d18[0]
   38700:	beq	385f4 <GetDataSlab+0x4498>
   38704:	vmov.32	r2, d20[0]
   38708:	mul	r3, r2, r3
   3870c:	ldr	r2, [r0, r7, lsl #2]
   38710:	subs	r7, r7, #1
   38714:	mul	r4, r4, r2
   38718:	bne	38708 <GetDataSlab+0x45ac>
   3871c:	b	385f4 <GetDataSlab+0x4498>
   38720:	ldr	r0, [sl]
   38724:	mov	r5, #0
   38728:	sub	lr, fp, #96	; 0x60
   3872c:	str	r0, [sp, #20]
   38730:	sub	r0, r0, #1
   38734:	str	r0, [fp, #-96]	; 0xffffffa0
   38738:	ldr	r0, [fp, #8]
   3873c:	ldr	r0, [r0]
   38740:	str	r0, [sp, #28]
   38744:	str	r0, [fp, #-176]	; 0xffffff50
   38748:	ldr	r0, [fp, #20]
   3874c:	ldr	r1, [r0]
   38750:	ldr	r0, [fp, #24]
   38754:	cmp	r0, #2
   38758:	str	r1, [sp, #56]	; 0x38
   3875c:	str	r1, [sp, #68]	; 0x44
   38760:	blt	43a20 <GetDataSlab+0xf8c4>
   38764:	ldr	r0, [fp, #8]
   38768:	ldr	r4, [sp, #28]
   3876c:	mov	r3, #1
   38770:	mov	r9, #0
   38774:	mvn	r7, #15
   38778:	mov	r5, #0
   3877c:	mov	r1, r0
   38780:	sub	r0, r0, #4
   38784:	mov	r8, r4
   38788:	sub	sl, r1, #12
   3878c:	ldr	r1, [sp, #56]	; 0x38
   38790:	str	r1, [sp, #68]	; 0x44
   38794:	b	387ec <GetDataSlab+0x4690>
   38798:	sub	r1, fp, #176	; 0xb0
   3879c:	sub	lr, fp, #96	; 0x60
   387a0:	add	sl, sl, #4
   387a4:	mov	r2, r1
   387a8:	str	r4, [r1, r3, lsl #2]
   387ac:	ldr	r1, [fp, #12]
   387b0:	str	r6, [lr, r3, lsl #2]
   387b4:	ldr	r6, [sp, #68]	; 0x44
   387b8:	ldr	r1, [r1, r3, lsl #2]
   387bc:	mla	r5, r1, r8, r5
   387c0:	ldr	r1, [fp, #20]
   387c4:	mov	r8, r4
   387c8:	mov	r4, ip
   387cc:	mov	ip, r2
   387d0:	ldr	r1, [r1, r3, lsl #2]
   387d4:	add	r3, r3, #1
   387d8:	mul	r6, r1, r6
   387dc:	ldr	r1, [fp, #24]
   387e0:	str	r6, [sp, #68]	; 0x44
   387e4:	cmp	r3, r1
   387e8:	beq	43a20 <GetDataSlab+0xf8c4>
   387ec:	ldr	r1, [fp, #16]
   387f0:	add	r9, r9, #1
   387f4:	cmp	r9, #4
   387f8:	ldr	r1, [r1, r3, lsl #2]
   387fc:	str	r4, [ip, r3, lsl #2]
   38800:	sub	r6, r1, #1
   38804:	ldr	r1, [fp, #8]
   38808:	str	r6, [lr, r3, lsl #2]
   3880c:	ldr	ip, [r1, r3, lsl #2]
   38810:	bcs	38820 <GetDataSlab+0x46c4>
   38814:	mov	r1, ip
   38818:	mov	r2, r3
   3881c:	b	388ac <GetDataSlab+0x4750>
   38820:	vmov.i32	q9, #1	; 0x00000001
   38824:	vmov.i32	q10, #1	; 0x00000001
   38828:	vmov.32	d23[1], ip
   3882c:	vmov.i32	q8, #1	; 0x00000001
   38830:	mov	lr, r9
   38834:	bic	r9, r9, #3
   38838:	bic	r1, r3, #3
   3883c:	sub	r2, r3, r9
   38840:	vmov.32	d18[0], r4
   38844:	vmov.32	d20[0], r6
   38848:	mov	r4, sl
   3884c:	vorr	d16, d18, d18
   38850:	vmov.i32	q9, #1	; 0x00000001
   38854:	vorr	d18, d20, d20
   38858:	vld1.32	{d20-d21}, [r4], r7
   3885c:	subs	r1, r1, #4
   38860:	vrev64.32	q12, q10
   38864:	vext.8	q12, q12, q12, #8
   38868:	vext.8	q11, q11, q12, #12
   3886c:	vmul.i32	q9, q9, q12
   38870:	vmul.i32	q8, q11, q8
   38874:	vorr	q11, q12, q12
   38878:	bne	38858 <GetDataSlab+0x46fc>
   3887c:	vext.8	q11, q9, q8, #8
   38880:	vext.8	q12, q8, q8, #8
   38884:	cmp	lr, r9
   38888:	mov	r9, lr
   3888c:	vmul.i32	q0, q9, q11
   38890:	vmul.i32	q1, q8, q12
   38894:	vmul.i32	q8, q0, d0[1]
   38898:	vmul.i32	q9, q1, d2[1]
   3889c:	vmov.32	r6, d16[0]
   388a0:	vmov.32	r4, d18[0]
   388a4:	beq	38798 <GetDataSlab+0x463c>
   388a8:	vmov.32	r1, d20[0]
   388ac:	mul	r4, r1, r4
   388b0:	ldr	r1, [r0, r2, lsl #2]
   388b4:	subs	r2, r2, #1
   388b8:	mul	r6, r6, r1
   388bc:	bne	388ac <GetDataSlab+0x4750>
   388c0:	b	38798 <GetDataSlab+0x463c>
   388c4:	ldr	r0, [sp, #80]	; 0x50
   388c8:	cmp	sl, #1
   388cc:	add	ip, r0, r3
   388d0:	bne	4c800 <GetDataSlab+0x186a4>
   388d4:	ldr	r0, [sp, #76]	; 0x4c
   388d8:	ldr	r2, [fp, #12]
   388dc:	sub	r7, fp, #96	; 0x60
   388e0:	cmp	r0, #1
   388e4:	blt	5b69c <GetDataSlab+0x27540>
   388e8:	ldr	lr, [sp, #60]	; 0x3c
   388ec:	mov	r1, #1
   388f0:	ldr	sl, [sp, #40]	; 0x28
   388f4:	mov	r6, #32
   388f8:	mov	r8, #0
   388fc:	sub	r0, lr, #4
   38900:	add	r1, r1, r0, lsr #2
   38904:	lsr	r0, r0, #2
   38908:	str	r0, [sp, #24]
   3890c:	ldr	r0, [sp, #88]	; 0x58
   38910:	and	r4, r1, #1
   38914:	sub	r1, r1, r4
   38918:	str	r4, [sp, #32]
   3891c:	str	r1, [sp, #16]
   38920:	sub	r1, fp, #136	; 0x88
   38924:	orr	r4, r1, #4
   38928:	ldr	r1, [fp, #20]
   3892c:	str	r0, [sp, #68]	; 0x44
   38930:	mov	r0, #0
   38934:	str	r0, [sp, #72]	; 0x48
   38938:	add	r9, r1, #4
   3893c:	sub	r1, fp, #176	; 0xb0
   38940:	orr	r1, r1, #4
   38944:	str	r9, [sp, #20]
   38948:	str	r1, [sp, #84]	; 0x54
   3894c:	add	r1, r2, #4
   38950:	str	r1, [sp, #80]	; 0x50
   38954:	ldr	r1, [fp, #24]
   38958:	sub	r1, r1, #1
   3895c:	str	r1, [sp, #44]	; 0x2c
   38960:	orr	r1, r7, #4
   38964:	str	r1, [sp, #36]	; 0x24
   38968:	lsl	r1, lr, #2
   3896c:	str	r1, [sp, #64]	; 0x40
   38970:	and	r1, lr, #1
   38974:	str	r1, [sp, #48]	; 0x30
   38978:	bic	r1, lr, #3
   3897c:	str	r1, [sp, #28]
   38980:	cmp	lr, #1
   38984:	bge	389d8 <GetDataSlab+0x487c>
   38988:	b	38b80 <GetDataSlab+0x4a24>
   3898c:	ldr	r0, [sp, #36]	; 0x24
   38990:	mov	r6, #32
   38994:	ldr	r0, [r0, r1]
   38998:	add	ip, ip, r0
   3899c:	add	r3, r0, r3
   389a0:	ldr	r0, [sp, #64]	; 0x40
   389a4:	ldr	r1, [sp, #68]	; 0x44
   389a8:	add	r8, r8, lr
   389ac:	mov	r2, #0
   389b0:	add	r1, r1, r0
   389b4:	ldr	r0, [sp, #72]	; 0x48
   389b8:	str	r1, [sp, #68]	; 0x44
   389bc:	add	r0, r0, #1
   389c0:	str	r0, [sp, #72]	; 0x48
   389c4:	ldr	r0, [sp, #76]	; 0x4c
   389c8:	cmp	r8, r0
   389cc:	bge	5b6a0 <GetDataSlab+0x27544>
   389d0:	cmp	lr, #1
   389d4:	blt	38b80 <GetDataSlab+0x4a24>
   389d8:	ldr	r0, [fp, #12]
   389dc:	cmp	lr, #4
   389e0:	ldr	r5, [r0]
   389e4:	ldr	r0, [sp, #88]	; 0x58
   389e8:	add	r1, r0, r8, lsl #2
   389ec:	add	r2, ip, r5
   389f0:	str	r1, [sp, #52]	; 0x34
   389f4:	mov	r1, #0
   389f8:	bcc	38afc <GetDataSlab+0x49a0>
   389fc:	str	r5, [sp, #56]	; 0x38
   38a00:	ldr	r5, [sp, #64]	; 0x40
   38a04:	ldr	r7, [sp, #72]	; 0x48
   38a08:	mla	r0, r5, r7, r0
   38a0c:	ldr	r5, [sp, #56]	; 0x38
   38a10:	add	r7, ip, lr
   38a14:	add	r7, r7, r5
   38a18:	cmp	r0, r7
   38a1c:	bcs	38a40 <GetDataSlab+0x48e4>
   38a20:	ldr	r0, [sp, #64]	; 0x40
   38a24:	ldr	r5, [sp, #72]	; 0x48
   38a28:	ldr	r7, [sp, #88]	; 0x58
   38a2c:	mla	r0, r0, r5, r0
   38a30:	ldr	r5, [sp, #56]	; 0x38
   38a34:	add	r0, r7, r0
   38a38:	cmp	r2, r0
   38a3c:	bcc	38afc <GetDataSlab+0x49a0>
   38a40:	ldr	r0, [sp, #24]
   38a44:	mov	r1, #0
   38a48:	cmp	r0, #0
   38a4c:	beq	38aac <GetDataSlab+0x4950>
   38a50:	ldr	lr, [sp, #68]	; 0x44
   38a54:	ldr	sl, [sp, #16]
   38a58:	sub	r5, fp, #480	; 0x1e0
   38a5c:	sub	r9, fp, #484	; 0x1e4
   38a60:	mov	r0, r2
   38a64:	subs	sl, sl, #2
   38a68:	ldr	r7, [r0, r1]!
   38a6c:	add	r1, r1, #8
   38a70:	str	r7, [fp, #-484]	; 0xfffffe1c
   38a74:	add	r7, lr, #16
   38a78:	vld1.32	{d16[0]}, [r9 :32]
   38a7c:	vmovl.s8	q8, d16
   38a80:	vmovl.s16	q8, d16
   38a84:	vcvt.f32.s32	q8, q8
   38a88:	vst1.32	{d16-d17}, [lr], r6
   38a8c:	ldr	r0, [r0, #4]
   38a90:	str	r0, [fp, #-480]	; 0xfffffe20
   38a94:	vld1.32	{d16[0]}, [r5 :32]
   38a98:	vmovl.s8	q8, d16
   38a9c:	vmovl.s16	q8, d16
   38aa0:	vcvt.f32.s32	q8, q8
   38aa4:	vst1.32	{d16-d17}, [r7]
   38aa8:	bne	38a60 <GetDataSlab+0x4904>
   38aac:	ldr	r0, [sp, #32]
   38ab0:	ldr	sl, [sp, #40]	; 0x28
   38ab4:	ldr	r5, [sp, #56]	; 0x38
   38ab8:	ldr	r9, [sp, #20]
   38abc:	cmp	r0, #0
   38ac0:	beq	38aec <GetDataSlab+0x4990>
   38ac4:	ldr	r0, [r2, r1]
   38ac8:	str	r0, [fp, #-488]	; 0xfffffe18
   38acc:	sub	r0, fp, #488	; 0x1e8
   38ad0:	vld1.32	{d16[0]}, [r0 :32]
   38ad4:	ldr	r0, [sp, #52]	; 0x34
   38ad8:	add	r0, r0, r1, lsl #2
   38adc:	vmovl.s8	q8, d16
   38ae0:	vmovl.s16	q8, d16
   38ae4:	vcvt.f32.s32	q8, q8
   38ae8:	vst1.32	{d16-d17}, [r0]
   38aec:	ldr	lr, [sp, #60]	; 0x3c
   38af0:	ldr	r1, [sp, #28]
   38af4:	cmp	lr, r1
   38af8:	beq	38b80 <GetDataSlab+0x4a24>
   38afc:	ldr	r0, [sp, #48]	; 0x30
   38b00:	mov	r7, r1
   38b04:	cmp	r0, #0
   38b08:	beq	38b2c <GetDataSlab+0x49d0>
   38b0c:	add	r2, r2, r1
   38b10:	ldr	r0, [sp, #52]	; 0x34
   38b14:	orr	r7, r1, #1
   38b18:	ldrsb	r2, [r2]
   38b1c:	add	r0, r0, r1, lsl #2
   38b20:	vmov	s0, r2
   38b24:	vcvt.f32.s32	s0, s0
   38b28:	vstr	s0, [r0]
   38b2c:	orr	r0, r1, #1
   38b30:	cmp	lr, r0
   38b34:	beq	38b80 <GetDataSlab+0x4a24>
   38b38:	ldr	r0, [sp, #68]	; 0x44
   38b3c:	sub	r2, lr, r7
   38b40:	add	r1, r0, r7, lsl #2
   38b44:	add	r0, r7, r5
   38b48:	add	r0, ip, r0
   38b4c:	add	r7, r0, #1
   38b50:	ldrsb	r0, [r7, #-1]
   38b54:	subs	r2, r2, #2
   38b58:	vmov	s0, r0
   38b5c:	vcvt.f32.s32	s0, s0
   38b60:	vstr	s0, [r1]
   38b64:	ldrsb	r0, [r7]
   38b68:	add	r7, r7, #2
   38b6c:	vmov	s0, r0
   38b70:	vcvt.f32.s32	s0, s0
   38b74:	vstr	s0, [r1, #4]
   38b78:	add	r1, r1, #8
   38b7c:	bne	38b50 <GetDataSlab+0x49f4>
   38b80:	ldr	r0, [fp, #24]
   38b84:	add	ip, ip, sl
   38b88:	add	r3, r3, sl
   38b8c:	cmp	r0, #2
   38b90:	blt	389a0 <GetDataSlab+0x4844>
   38b94:	ldr	r2, [sp, #44]	; 0x2c
   38b98:	mov	r1, #0
   38b9c:	b	38bd0 <GetDataSlab+0x4a74>
   38ba0:	ldr	r5, [sp, #80]	; 0x50
   38ba4:	sub	r6, fp, #176	; 0xb0
   38ba8:	sub	r0, r7, r0
   38bac:	ldr	r6, [r6, r1]
   38bb0:	ldr	r5, [r5, r1]
   38bb4:	mla	r0, r5, r6, r0
   38bb8:	add	r3, r0, r3
   38bbc:	add	ip, ip, r0
   38bc0:	mov	r6, #32
   38bc4:	subs	r2, r2, #1
   38bc8:	add	r1, r1, #4
   38bcc:	beq	389a0 <GetDataSlab+0x4844>
   38bd0:	ldr	r0, [r4, r1]
   38bd4:	add	r0, r0, #1
   38bd8:	str	r0, [r4, r1]
   38bdc:	ldr	r7, [r9, r1]
   38be0:	sdiv	r6, r0, r7
   38be4:	mls	r0, r6, r7, r0
   38be8:	cmp	r0, #0
   38bec:	bne	3898c <GetDataSlab+0x4830>
   38bf0:	mov	r0, #0
   38bf4:	str	r0, [r4, r1]
   38bf8:	ldr	r0, [sp, #84]	; 0x54
   38bfc:	ldr	r7, [r0, r1]
   38c00:	sdiv	r0, r3, r7
   38c04:	mls	r0, r0, r7, r3
   38c08:	cmp	r0, #0
   38c0c:	bne	38ba0 <GetDataSlab+0x4a44>
   38c10:	ldr	r0, [sp, #80]	; 0x50
   38c14:	ldr	r0, [r0, r1]
   38c18:	cmp	r0, #0
   38c1c:	beq	38bc0 <GetDataSlab+0x4a64>
   38c20:	sub	r7, fp, #176	; 0xb0
   38c24:	ldr	r7, [r7, r1]
   38c28:	mla	r3, r7, r0, r3
   38c2c:	mla	ip, r7, r0, ip
   38c30:	mov	r6, #32
   38c34:	subs	r2, r2, #1
   38c38:	add	r1, r1, #4
   38c3c:	bne	38bd0 <GetDataSlab+0x4a74>
   38c40:	b	389a0 <GetDataSlab+0x4844>
   38c44:	ldr	r5, [sl]
   38c48:	mov	r7, #0
   38c4c:	sub	r9, fp, #176	; 0xb0
   38c50:	sub	r8, fp, #96	; 0x60
   38c54:	sub	r0, r5, #1
   38c58:	str	r0, [fp, #-96]	; 0xffffffa0
   38c5c:	ldr	r0, [r3]
   38c60:	str	r0, [sp, #72]	; 0x48
   38c64:	str	r0, [fp, #-176]	; 0xffffff50
   38c68:	ldr	r0, [fp, #20]
   38c6c:	ldr	r1, [r0]
   38c70:	ldr	r0, [fp, #24]
   38c74:	cmp	r0, #2
   38c78:	mov	r0, r1
   38c7c:	str	r1, [sp, #76]	; 0x4c
   38c80:	blt	43d20 <GetDataSlab+0xfbc4>
   38c84:	ldr	r0, [fp, #8]
   38c88:	ldr	r4, [sp, #72]	; 0x48
   38c8c:	mov	r3, #0
   38c90:	mvn	ip, #15
   38c94:	mov	r7, #0
   38c98:	str	r1, [sp, #76]	; 0x4c
   38c9c:	str	r3, [sp, #84]	; 0x54
   38ca0:	mov	r3, r1
   38ca4:	mov	r2, r0
   38ca8:	sub	r0, r0, #4
   38cac:	mov	r6, r4
   38cb0:	sub	sl, r2, #12
   38cb4:	mov	r2, #1
   38cb8:	b	38d0c <GetDataSlab+0x4bb0>
   38cbc:	sub	r8, fp, #96	; 0x60
   38cc0:	ldr	r3, [fp, #12]
   38cc4:	sub	r9, fp, #176	; 0xb0
   38cc8:	str	lr, [r8, r2, lsl #2]
   38ccc:	ldr	r6, [sp, #68]	; 0x44
   38cd0:	add	sl, sl, #4
   38cd4:	str	r4, [r9, r2, lsl #2]
   38cd8:	ldr	r3, [r3, r2, lsl #2]
   38cdc:	mla	r7, r3, r6, r7
   38ce0:	ldr	r3, [fp, #20]
   38ce4:	ldr	r6, [sp, #76]	; 0x4c
   38ce8:	ldr	r3, [r3, r2, lsl #2]
   38cec:	add	r2, r2, #1
   38cf0:	mul	r6, r3, r6
   38cf4:	ldr	r3, [fp, #24]
   38cf8:	str	r6, [sp, #76]	; 0x4c
   38cfc:	mov	r6, r4
   38d00:	ldr	r4, [sp, #64]	; 0x40
   38d04:	cmp	r2, r3
   38d08:	beq	43d20 <GetDataSlab+0xfbc4>
   38d0c:	ldr	r3, [fp, #16]
   38d10:	str	r6, [sp, #68]	; 0x44
   38d14:	ldr	r3, [r3, r2, lsl #2]
   38d18:	str	r4, [r9, r2, lsl #2]
   38d1c:	ldr	r9, [sp, #84]	; 0x54
   38d20:	sub	lr, r3, #1
   38d24:	ldr	r3, [fp, #8]
   38d28:	add	r9, r9, #1
   38d2c:	str	lr, [r8, r2, lsl #2]
   38d30:	cmp	r9, #4
   38d34:	str	r9, [sp, #84]	; 0x54
   38d38:	ldr	r6, [r3, r2, lsl #2]
   38d3c:	str	r6, [sp, #64]	; 0x40
   38d40:	bcs	38d4c <GetDataSlab+0x4bf0>
   38d44:	mov	r3, r2
   38d48:	b	38ddc <GetDataSlab+0x4c80>
   38d4c:	vmov.i32	q9, #1	; 0x00000001
   38d50:	vmov.i32	q10, #1	; 0x00000001
   38d54:	vmov.32	d23[1], r6
   38d58:	vmov.i32	q8, #1	; 0x00000001
   38d5c:	bic	r3, r9, #3
   38d60:	bic	r8, r2, #3
   38d64:	mov	r6, sl
   38d68:	str	r3, [sp, #60]	; 0x3c
   38d6c:	sub	r3, r2, r3
   38d70:	vmov.32	d18[0], r4
   38d74:	vmov.32	d20[0], lr
   38d78:	vorr	d16, d18, d18
   38d7c:	vmov.i32	q9, #1	; 0x00000001
   38d80:	vorr	d18, d20, d20
   38d84:	vld1.32	{d20-d21}, [r6], ip
   38d88:	subs	r8, r8, #4
   38d8c:	vrev64.32	q12, q10
   38d90:	vext.8	q12, q12, q12, #8
   38d94:	vext.8	q11, q11, q12, #12
   38d98:	vmul.i32	q9, q9, q12
   38d9c:	vmul.i32	q8, q11, q8
   38da0:	vorr	q11, q12, q12
   38da4:	bne	38d84 <GetDataSlab+0x4c28>
   38da8:	vext.8	q11, q9, q8, #8
   38dac:	vext.8	q12, q8, q8, #8
   38db0:	ldr	r6, [sp, #60]	; 0x3c
   38db4:	vmul.i32	q0, q9, q11
   38db8:	vmul.i32	q1, q8, q12
   38dbc:	cmp	r9, r6
   38dc0:	vmul.i32	q8, q0, d0[1]
   38dc4:	vmul.i32	q9, q1, d2[1]
   38dc8:	vmov.32	lr, d16[0]
   38dcc:	vmov.32	r4, d18[0]
   38dd0:	beq	38cbc <GetDataSlab+0x4b60>
   38dd4:	vmov.32	r6, d20[0]
   38dd8:	sub	r8, fp, #96	; 0x60
   38ddc:	mul	r4, r6, r4
   38de0:	ldr	r6, [r0, r3, lsl #2]
   38de4:	subs	r3, r3, #1
   38de8:	mul	lr, lr, r6
   38dec:	bne	38ddc <GetDataSlab+0x4c80>
   38df0:	b	38cc0 <GetDataSlab+0x4b64>
   38df4:	ldr	r5, [sl]
   38df8:	mov	r7, #0
   38dfc:	sub	r9, fp, #176	; 0xb0
   38e00:	sub	r8, fp, #96	; 0x60
   38e04:	sub	r0, r5, #1
   38e08:	str	r0, [fp, #-96]	; 0xffffffa0
   38e0c:	ldr	r0, [r3]
   38e10:	str	r0, [sp, #72]	; 0x48
   38e14:	str	r0, [fp, #-176]	; 0xffffff50
   38e18:	ldr	r0, [fp, #20]
   38e1c:	ldr	r1, [r0]
   38e20:	ldr	r0, [fp, #24]
   38e24:	cmp	r0, #2
   38e28:	mov	r0, r1
   38e2c:	str	r1, [sp, #76]	; 0x4c
   38e30:	blt	43ec0 <GetDataSlab+0xfd64>
   38e34:	ldr	r0, [fp, #8]
   38e38:	ldr	r4, [sp, #72]	; 0x48
   38e3c:	mov	r3, #0
   38e40:	mvn	ip, #15
   38e44:	mov	r7, #0
   38e48:	str	r1, [sp, #76]	; 0x4c
   38e4c:	str	r3, [sp, #84]	; 0x54
   38e50:	mov	r3, r1
   38e54:	mov	r2, r0
   38e58:	sub	r0, r0, #4
   38e5c:	mov	r6, r4
   38e60:	sub	sl, r2, #12
   38e64:	mov	r2, #1
   38e68:	b	38ebc <GetDataSlab+0x4d60>
   38e6c:	sub	r8, fp, #96	; 0x60
   38e70:	ldr	r3, [fp, #12]
   38e74:	sub	r9, fp, #176	; 0xb0
   38e78:	str	lr, [r8, r2, lsl #2]
   38e7c:	ldr	r6, [sp, #68]	; 0x44
   38e80:	add	sl, sl, #4
   38e84:	str	r4, [r9, r2, lsl #2]
   38e88:	ldr	r3, [r3, r2, lsl #2]
   38e8c:	mla	r7, r3, r6, r7
   38e90:	ldr	r3, [fp, #20]
   38e94:	ldr	r6, [sp, #76]	; 0x4c
   38e98:	ldr	r3, [r3, r2, lsl #2]
   38e9c:	add	r2, r2, #1
   38ea0:	mul	r6, r3, r6
   38ea4:	ldr	r3, [fp, #24]
   38ea8:	str	r6, [sp, #76]	; 0x4c
   38eac:	mov	r6, r4
   38eb0:	ldr	r4, [sp, #64]	; 0x40
   38eb4:	cmp	r2, r3
   38eb8:	beq	43ec0 <GetDataSlab+0xfd64>
   38ebc:	ldr	r3, [fp, #16]
   38ec0:	str	r6, [sp, #68]	; 0x44
   38ec4:	ldr	r3, [r3, r2, lsl #2]
   38ec8:	str	r4, [r9, r2, lsl #2]
   38ecc:	ldr	r9, [sp, #84]	; 0x54
   38ed0:	sub	lr, r3, #1
   38ed4:	ldr	r3, [fp, #8]
   38ed8:	add	r9, r9, #1
   38edc:	str	lr, [r8, r2, lsl #2]
   38ee0:	cmp	r9, #4
   38ee4:	str	r9, [sp, #84]	; 0x54
   38ee8:	ldr	r6, [r3, r2, lsl #2]
   38eec:	str	r6, [sp, #64]	; 0x40
   38ef0:	bcs	38efc <GetDataSlab+0x4da0>
   38ef4:	mov	r3, r2
   38ef8:	b	38f8c <GetDataSlab+0x4e30>
   38efc:	vmov.i32	q9, #1	; 0x00000001
   38f00:	vmov.i32	q10, #1	; 0x00000001
   38f04:	vmov.32	d23[1], r6
   38f08:	vmov.i32	q8, #1	; 0x00000001
   38f0c:	bic	r3, r9, #3
   38f10:	bic	r8, r2, #3
   38f14:	mov	r6, sl
   38f18:	str	r3, [sp, #60]	; 0x3c
   38f1c:	sub	r3, r2, r3
   38f20:	vmov.32	d18[0], r4
   38f24:	vmov.32	d20[0], lr
   38f28:	vorr	d16, d18, d18
   38f2c:	vmov.i32	q9, #1	; 0x00000001
   38f30:	vorr	d18, d20, d20
   38f34:	vld1.32	{d20-d21}, [r6], ip
   38f38:	subs	r8, r8, #4
   38f3c:	vrev64.32	q12, q10
   38f40:	vext.8	q12, q12, q12, #8
   38f44:	vext.8	q11, q11, q12, #12
   38f48:	vmul.i32	q9, q9, q12
   38f4c:	vmul.i32	q8, q11, q8
   38f50:	vorr	q11, q12, q12
   38f54:	bne	38f34 <GetDataSlab+0x4dd8>
   38f58:	vext.8	q11, q9, q8, #8
   38f5c:	vext.8	q12, q8, q8, #8
   38f60:	ldr	r6, [sp, #60]	; 0x3c
   38f64:	vmul.i32	q0, q9, q11
   38f68:	vmul.i32	q1, q8, q12
   38f6c:	cmp	r9, r6
   38f70:	vmul.i32	q8, q0, d0[1]
   38f74:	vmul.i32	q9, q1, d2[1]
   38f78:	vmov.32	lr, d16[0]
   38f7c:	vmov.32	r4, d18[0]
   38f80:	beq	38e6c <GetDataSlab+0x4d10>
   38f84:	vmov.32	r6, d20[0]
   38f88:	sub	r8, fp, #96	; 0x60
   38f8c:	mul	r4, r6, r4
   38f90:	ldr	r6, [r0, r3, lsl #2]
   38f94:	subs	r3, r3, #1
   38f98:	mul	lr, lr, r6
   38f9c:	bne	38f8c <GetDataSlab+0x4e30>
   38fa0:	b	38e70 <GetDataSlab+0x4d14>
   38fa4:	ldr	r5, [sl]
   38fa8:	mov	r7, #0
   38fac:	sub	r9, fp, #176	; 0xb0
   38fb0:	sub	r8, fp, #96	; 0x60
   38fb4:	sub	r0, r5, #1
   38fb8:	str	r0, [fp, #-96]	; 0xffffffa0
   38fbc:	ldr	r0, [r3]
   38fc0:	str	r0, [sp, #72]	; 0x48
   38fc4:	str	r0, [fp, #-176]	; 0xffffff50
   38fc8:	ldr	r0, [fp, #20]
   38fcc:	ldr	r1, [r0]
   38fd0:	ldr	r0, [fp, #24]
   38fd4:	cmp	r0, #2
   38fd8:	mov	r0, r1
   38fdc:	str	r1, [sp, #76]	; 0x4c
   38fe0:	blt	44054 <GetDataSlab+0xfef8>
   38fe4:	ldr	r0, [fp, #8]
   38fe8:	ldr	r4, [sp, #72]	; 0x48
   38fec:	mov	r3, #0
   38ff0:	mvn	ip, #15
   38ff4:	mov	r7, #0
   38ff8:	str	r1, [sp, #76]	; 0x4c
   38ffc:	str	r3, [sp, #84]	; 0x54
   39000:	mov	r3, r1
   39004:	mov	r2, r0
   39008:	sub	r0, r0, #4
   3900c:	mov	r6, r4
   39010:	sub	sl, r2, #12
   39014:	mov	r2, #1
   39018:	b	3906c <GetDataSlab+0x4f10>
   3901c:	sub	r8, fp, #96	; 0x60
   39020:	ldr	r3, [fp, #12]
   39024:	sub	r9, fp, #176	; 0xb0
   39028:	str	lr, [r8, r2, lsl #2]
   3902c:	ldr	r6, [sp, #68]	; 0x44
   39030:	add	sl, sl, #4
   39034:	str	r4, [r9, r2, lsl #2]
   39038:	ldr	r3, [r3, r2, lsl #2]
   3903c:	mla	r7, r3, r6, r7
   39040:	ldr	r3, [fp, #20]
   39044:	ldr	r6, [sp, #76]	; 0x4c
   39048:	ldr	r3, [r3, r2, lsl #2]
   3904c:	add	r2, r2, #1
   39050:	mul	r6, r3, r6
   39054:	ldr	r3, [fp, #24]
   39058:	str	r6, [sp, #76]	; 0x4c
   3905c:	mov	r6, r4
   39060:	ldr	r4, [sp, #64]	; 0x40
   39064:	cmp	r2, r3
   39068:	beq	44054 <GetDataSlab+0xfef8>
   3906c:	ldr	r3, [fp, #16]
   39070:	str	r6, [sp, #68]	; 0x44
   39074:	ldr	r3, [r3, r2, lsl #2]
   39078:	str	r4, [r9, r2, lsl #2]
   3907c:	ldr	r9, [sp, #84]	; 0x54
   39080:	sub	lr, r3, #1
   39084:	ldr	r3, [fp, #8]
   39088:	add	r9, r9, #1
   3908c:	str	lr, [r8, r2, lsl #2]
   39090:	cmp	r9, #4
   39094:	str	r9, [sp, #84]	; 0x54
   39098:	ldr	r6, [r3, r2, lsl #2]
   3909c:	str	r6, [sp, #64]	; 0x40
   390a0:	bcs	390ac <GetDataSlab+0x4f50>
   390a4:	mov	r3, r2
   390a8:	b	3913c <GetDataSlab+0x4fe0>
   390ac:	vmov.i32	q9, #1	; 0x00000001
   390b0:	vmov.i32	q10, #1	; 0x00000001
   390b4:	vmov.32	d23[1], r6
   390b8:	vmov.i32	q8, #1	; 0x00000001
   390bc:	bic	r3, r9, #3
   390c0:	bic	r8, r2, #3
   390c4:	mov	r6, sl
   390c8:	str	r3, [sp, #60]	; 0x3c
   390cc:	sub	r3, r2, r3
   390d0:	vmov.32	d18[0], r4
   390d4:	vmov.32	d20[0], lr
   390d8:	vorr	d16, d18, d18
   390dc:	vmov.i32	q9, #1	; 0x00000001
   390e0:	vorr	d18, d20, d20
   390e4:	vld1.32	{d20-d21}, [r6], ip
   390e8:	subs	r8, r8, #4
   390ec:	vrev64.32	q12, q10
   390f0:	vext.8	q12, q12, q12, #8
   390f4:	vext.8	q11, q11, q12, #12
   390f8:	vmul.i32	q9, q9, q12
   390fc:	vmul.i32	q8, q11, q8
   39100:	vorr	q11, q12, q12
   39104:	bne	390e4 <GetDataSlab+0x4f88>
   39108:	vext.8	q11, q9, q8, #8
   3910c:	vext.8	q12, q8, q8, #8
   39110:	ldr	r6, [sp, #60]	; 0x3c
   39114:	vmul.i32	q0, q9, q11
   39118:	vmul.i32	q1, q8, q12
   3911c:	cmp	r9, r6
   39120:	vmul.i32	q8, q0, d0[1]
   39124:	vmul.i32	q9, q1, d2[1]
   39128:	vmov.32	lr, d16[0]
   3912c:	vmov.32	r4, d18[0]
   39130:	beq	3901c <GetDataSlab+0x4ec0>
   39134:	vmov.32	r6, d20[0]
   39138:	sub	r8, fp, #96	; 0x60
   3913c:	mul	r4, r6, r4
   39140:	ldr	r6, [r0, r3, lsl #2]
   39144:	subs	r3, r3, #1
   39148:	mul	lr, lr, r6
   3914c:	bne	3913c <GetDataSlab+0x4fe0>
   39150:	b	39020 <GetDataSlab+0x4ec4>
   39154:	ldr	r5, [sl]
   39158:	mov	r7, #0
   3915c:	sub	r9, fp, #176	; 0xb0
   39160:	sub	r8, fp, #96	; 0x60
   39164:	sub	r0, r5, #1
   39168:	str	r0, [fp, #-96]	; 0xffffffa0
   3916c:	ldr	r0, [r3]
   39170:	str	r0, [sp, #72]	; 0x48
   39174:	str	r0, [fp, #-176]	; 0xffffff50
   39178:	ldr	r0, [fp, #20]
   3917c:	ldr	r1, [r0]
   39180:	ldr	r0, [fp, #24]
   39184:	cmp	r0, #2
   39188:	mov	r0, r1
   3918c:	str	r1, [sp, #76]	; 0x4c
   39190:	blt	441e8 <GetDataSlab+0x1008c>
   39194:	ldr	r0, [fp, #8]
   39198:	ldr	r4, [sp, #72]	; 0x48
   3919c:	mov	r3, #0
   391a0:	mvn	ip, #15
   391a4:	mov	r7, #0
   391a8:	str	r1, [sp, #76]	; 0x4c
   391ac:	str	r3, [sp, #84]	; 0x54
   391b0:	mov	r3, r1
   391b4:	mov	r2, r0
   391b8:	sub	r0, r0, #4
   391bc:	mov	r6, r4
   391c0:	sub	sl, r2, #12
   391c4:	mov	r2, #1
   391c8:	b	3921c <GetDataSlab+0x50c0>
   391cc:	sub	r8, fp, #96	; 0x60
   391d0:	ldr	r3, [fp, #12]
   391d4:	sub	r9, fp, #176	; 0xb0
   391d8:	str	lr, [r8, r2, lsl #2]
   391dc:	ldr	r6, [sp, #68]	; 0x44
   391e0:	add	sl, sl, #4
   391e4:	str	r4, [r9, r2, lsl #2]
   391e8:	ldr	r3, [r3, r2, lsl #2]
   391ec:	mla	r7, r3, r6, r7
   391f0:	ldr	r3, [fp, #20]
   391f4:	ldr	r6, [sp, #76]	; 0x4c
   391f8:	ldr	r3, [r3, r2, lsl #2]
   391fc:	add	r2, r2, #1
   39200:	mul	r6, r3, r6
   39204:	ldr	r3, [fp, #24]
   39208:	str	r6, [sp, #76]	; 0x4c
   3920c:	mov	r6, r4
   39210:	ldr	r4, [sp, #64]	; 0x40
   39214:	cmp	r2, r3
   39218:	beq	441e8 <GetDataSlab+0x1008c>
   3921c:	ldr	r3, [fp, #16]
   39220:	str	r6, [sp, #68]	; 0x44
   39224:	ldr	r3, [r3, r2, lsl #2]
   39228:	str	r4, [r9, r2, lsl #2]
   3922c:	ldr	r9, [sp, #84]	; 0x54
   39230:	sub	lr, r3, #1
   39234:	ldr	r3, [fp, #8]
   39238:	add	r9, r9, #1
   3923c:	str	lr, [r8, r2, lsl #2]
   39240:	cmp	r9, #4
   39244:	str	r9, [sp, #84]	; 0x54
   39248:	ldr	r6, [r3, r2, lsl #2]
   3924c:	str	r6, [sp, #64]	; 0x40
   39250:	bcs	3925c <GetDataSlab+0x5100>
   39254:	mov	r3, r2
   39258:	b	392ec <GetDataSlab+0x5190>
   3925c:	vmov.i32	q9, #1	; 0x00000001
   39260:	vmov.i32	q10, #1	; 0x00000001
   39264:	vmov.32	d23[1], r6
   39268:	vmov.i32	q8, #1	; 0x00000001
   3926c:	bic	r3, r9, #3
   39270:	bic	r8, r2, #3
   39274:	mov	r6, sl
   39278:	str	r3, [sp, #60]	; 0x3c
   3927c:	sub	r3, r2, r3
   39280:	vmov.32	d18[0], r4
   39284:	vmov.32	d20[0], lr
   39288:	vorr	d16, d18, d18
   3928c:	vmov.i32	q9, #1	; 0x00000001
   39290:	vorr	d18, d20, d20
   39294:	vld1.32	{d20-d21}, [r6], ip
   39298:	subs	r8, r8, #4
   3929c:	vrev64.32	q12, q10
   392a0:	vext.8	q12, q12, q12, #8
   392a4:	vext.8	q11, q11, q12, #12
   392a8:	vmul.i32	q9, q9, q12
   392ac:	vmul.i32	q8, q11, q8
   392b0:	vorr	q11, q12, q12
   392b4:	bne	39294 <GetDataSlab+0x5138>
   392b8:	vext.8	q11, q9, q8, #8
   392bc:	vext.8	q12, q8, q8, #8
   392c0:	ldr	r6, [sp, #60]	; 0x3c
   392c4:	vmul.i32	q0, q9, q11
   392c8:	vmul.i32	q1, q8, q12
   392cc:	cmp	r9, r6
   392d0:	vmul.i32	q8, q0, d0[1]
   392d4:	vmul.i32	q9, q1, d2[1]
   392d8:	vmov.32	lr, d16[0]
   392dc:	vmov.32	r4, d18[0]
   392e0:	beq	391cc <GetDataSlab+0x5070>
   392e4:	vmov.32	r6, d20[0]
   392e8:	sub	r8, fp, #96	; 0x60
   392ec:	mul	r4, r6, r4
   392f0:	ldr	r6, [r0, r3, lsl #2]
   392f4:	subs	r3, r3, #1
   392f8:	mul	lr, lr, r6
   392fc:	bne	392ec <GetDataSlab+0x5190>
   39300:	b	391d0 <GetDataSlab+0x5074>
   39304:	ldr	r5, [sl]
   39308:	mov	r7, #0
   3930c:	sub	r9, fp, #176	; 0xb0
   39310:	sub	r8, fp, #96	; 0x60
   39314:	sub	r0, r5, #1
   39318:	str	r0, [fp, #-96]	; 0xffffffa0
   3931c:	ldr	r0, [r3]
   39320:	str	r0, [sp, #72]	; 0x48
   39324:	str	r0, [fp, #-176]	; 0xffffff50
   39328:	ldr	r0, [fp, #20]
   3932c:	ldr	r1, [r0]
   39330:	ldr	r0, [fp, #24]
   39334:	cmp	r0, #2
   39338:	mov	r0, r1
   3933c:	str	r1, [sp, #76]	; 0x4c
   39340:	blt	4437c <GetDataSlab+0x10220>
   39344:	ldr	r0, [fp, #8]
   39348:	ldr	r4, [sp, #72]	; 0x48
   3934c:	mov	r3, #0
   39350:	mvn	ip, #15
   39354:	mov	r7, #0
   39358:	str	r1, [sp, #76]	; 0x4c
   3935c:	str	r3, [sp, #84]	; 0x54
   39360:	mov	r3, r1
   39364:	mov	r2, r0
   39368:	sub	r0, r0, #4
   3936c:	mov	r6, r4
   39370:	sub	sl, r2, #12
   39374:	mov	r2, #1
   39378:	b	393cc <GetDataSlab+0x5270>
   3937c:	sub	r8, fp, #96	; 0x60
   39380:	ldr	r3, [fp, #12]
   39384:	sub	r9, fp, #176	; 0xb0
   39388:	str	lr, [r8, r2, lsl #2]
   3938c:	ldr	r6, [sp, #68]	; 0x44
   39390:	add	sl, sl, #4
   39394:	str	r4, [r9, r2, lsl #2]
   39398:	ldr	r3, [r3, r2, lsl #2]
   3939c:	mla	r7, r3, r6, r7
   393a0:	ldr	r3, [fp, #20]
   393a4:	ldr	r6, [sp, #76]	; 0x4c
   393a8:	ldr	r3, [r3, r2, lsl #2]
   393ac:	add	r2, r2, #1
   393b0:	mul	r6, r3, r6
   393b4:	ldr	r3, [fp, #24]
   393b8:	str	r6, [sp, #76]	; 0x4c
   393bc:	mov	r6, r4
   393c0:	ldr	r4, [sp, #64]	; 0x40
   393c4:	cmp	r2, r3
   393c8:	beq	4437c <GetDataSlab+0x10220>
   393cc:	ldr	r3, [fp, #16]
   393d0:	str	r6, [sp, #68]	; 0x44
   393d4:	ldr	r3, [r3, r2, lsl #2]
   393d8:	str	r4, [r9, r2, lsl #2]
   393dc:	ldr	r9, [sp, #84]	; 0x54
   393e0:	sub	lr, r3, #1
   393e4:	ldr	r3, [fp, #8]
   393e8:	add	r9, r9, #1
   393ec:	str	lr, [r8, r2, lsl #2]
   393f0:	cmp	r9, #4
   393f4:	str	r9, [sp, #84]	; 0x54
   393f8:	ldr	r6, [r3, r2, lsl #2]
   393fc:	str	r6, [sp, #64]	; 0x40
   39400:	bcs	3940c <GetDataSlab+0x52b0>
   39404:	mov	r3, r2
   39408:	b	3949c <GetDataSlab+0x5340>
   3940c:	vmov.i32	q9, #1	; 0x00000001
   39410:	vmov.i32	q10, #1	; 0x00000001
   39414:	vmov.32	d23[1], r6
   39418:	vmov.i32	q8, #1	; 0x00000001
   3941c:	bic	r3, r9, #3
   39420:	bic	r8, r2, #3
   39424:	mov	r6, sl
   39428:	str	r3, [sp, #60]	; 0x3c
   3942c:	sub	r3, r2, r3
   39430:	vmov.32	d18[0], r4
   39434:	vmov.32	d20[0], lr
   39438:	vorr	d16, d18, d18
   3943c:	vmov.i32	q9, #1	; 0x00000001
   39440:	vorr	d18, d20, d20
   39444:	vld1.32	{d20-d21}, [r6], ip
   39448:	subs	r8, r8, #4
   3944c:	vrev64.32	q12, q10
   39450:	vext.8	q12, q12, q12, #8
   39454:	vext.8	q11, q11, q12, #12
   39458:	vmul.i32	q9, q9, q12
   3945c:	vmul.i32	q8, q11, q8
   39460:	vorr	q11, q12, q12
   39464:	bne	39444 <GetDataSlab+0x52e8>
   39468:	vext.8	q11, q9, q8, #8
   3946c:	vext.8	q12, q8, q8, #8
   39470:	ldr	r6, [sp, #60]	; 0x3c
   39474:	vmul.i32	q0, q9, q11
   39478:	vmul.i32	q1, q8, q12
   3947c:	cmp	r9, r6
   39480:	vmul.i32	q8, q0, d0[1]
   39484:	vmul.i32	q9, q1, d2[1]
   39488:	vmov.32	lr, d16[0]
   3948c:	vmov.32	r4, d18[0]
   39490:	beq	3937c <GetDataSlab+0x5220>
   39494:	vmov.32	r6, d20[0]
   39498:	sub	r8, fp, #96	; 0x60
   3949c:	mul	r4, r6, r4
   394a0:	ldr	r6, [r0, r3, lsl #2]
   394a4:	subs	r3, r3, #1
   394a8:	mul	lr, lr, r6
   394ac:	bne	3949c <GetDataSlab+0x5340>
   394b0:	b	39380 <GetDataSlab+0x5224>
   394b4:	ldr	r5, [sl]
   394b8:	mov	r7, #0
   394bc:	sub	r9, fp, #176	; 0xb0
   394c0:	sub	r8, fp, #96	; 0x60
   394c4:	sub	r0, r5, #1
   394c8:	str	r0, [fp, #-96]	; 0xffffffa0
   394cc:	ldr	r0, [r3]
   394d0:	str	r0, [sp, #72]	; 0x48
   394d4:	str	r0, [fp, #-176]	; 0xffffff50
   394d8:	ldr	r0, [fp, #20]
   394dc:	ldr	r1, [r0]
   394e0:	ldr	r0, [fp, #24]
   394e4:	cmp	r0, #2
   394e8:	mov	r0, r1
   394ec:	str	r1, [sp, #76]	; 0x4c
   394f0:	blt	44510 <GetDataSlab+0x103b4>
   394f4:	ldr	r0, [fp, #8]
   394f8:	ldr	r4, [sp, #72]	; 0x48
   394fc:	mov	r3, #0
   39500:	mvn	ip, #15
   39504:	mov	r7, #0
   39508:	str	r1, [sp, #76]	; 0x4c
   3950c:	str	r3, [sp, #84]	; 0x54
   39510:	mov	r3, r1
   39514:	mov	r2, r0
   39518:	sub	r0, r0, #4
   3951c:	mov	r6, r4
   39520:	sub	sl, r2, #12
   39524:	mov	r2, #1
   39528:	b	3957c <GetDataSlab+0x5420>
   3952c:	sub	r8, fp, #96	; 0x60
   39530:	ldr	r3, [fp, #12]
   39534:	sub	r9, fp, #176	; 0xb0
   39538:	str	lr, [r8, r2, lsl #2]
   3953c:	ldr	r6, [sp, #68]	; 0x44
   39540:	add	sl, sl, #4
   39544:	str	r4, [r9, r2, lsl #2]
   39548:	ldr	r3, [r3, r2, lsl #2]
   3954c:	mla	r7, r3, r6, r7
   39550:	ldr	r3, [fp, #20]
   39554:	ldr	r6, [sp, #76]	; 0x4c
   39558:	ldr	r3, [r3, r2, lsl #2]
   3955c:	add	r2, r2, #1
   39560:	mul	r6, r3, r6
   39564:	ldr	r3, [fp, #24]
   39568:	str	r6, [sp, #76]	; 0x4c
   3956c:	mov	r6, r4
   39570:	ldr	r4, [sp, #64]	; 0x40
   39574:	cmp	r2, r3
   39578:	beq	44510 <GetDataSlab+0x103b4>
   3957c:	ldr	r3, [fp, #16]
   39580:	str	r6, [sp, #68]	; 0x44
   39584:	ldr	r3, [r3, r2, lsl #2]
   39588:	str	r4, [r9, r2, lsl #2]
   3958c:	ldr	r9, [sp, #84]	; 0x54
   39590:	sub	lr, r3, #1
   39594:	ldr	r3, [fp, #8]
   39598:	add	r9, r9, #1
   3959c:	str	lr, [r8, r2, lsl #2]
   395a0:	cmp	r9, #4
   395a4:	str	r9, [sp, #84]	; 0x54
   395a8:	ldr	r6, [r3, r2, lsl #2]
   395ac:	str	r6, [sp, #64]	; 0x40
   395b0:	bcs	395bc <GetDataSlab+0x5460>
   395b4:	mov	r3, r2
   395b8:	b	3964c <GetDataSlab+0x54f0>
   395bc:	vmov.i32	q9, #1	; 0x00000001
   395c0:	vmov.i32	q10, #1	; 0x00000001
   395c4:	vmov.32	d23[1], r6
   395c8:	vmov.i32	q8, #1	; 0x00000001
   395cc:	bic	r3, r9, #3
   395d0:	bic	r8, r2, #3
   395d4:	mov	r6, sl
   395d8:	str	r3, [sp, #60]	; 0x3c
   395dc:	sub	r3, r2, r3
   395e0:	vmov.32	d18[0], r4
   395e4:	vmov.32	d20[0], lr
   395e8:	vorr	d16, d18, d18
   395ec:	vmov.i32	q9, #1	; 0x00000001
   395f0:	vorr	d18, d20, d20
   395f4:	vld1.32	{d20-d21}, [r6], ip
   395f8:	subs	r8, r8, #4
   395fc:	vrev64.32	q12, q10
   39600:	vext.8	q12, q12, q12, #8
   39604:	vext.8	q11, q11, q12, #12
   39608:	vmul.i32	q9, q9, q12
   3960c:	vmul.i32	q8, q11, q8
   39610:	vorr	q11, q12, q12
   39614:	bne	395f4 <GetDataSlab+0x5498>
   39618:	vext.8	q11, q9, q8, #8
   3961c:	vext.8	q12, q8, q8, #8
   39620:	ldr	r6, [sp, #60]	; 0x3c
   39624:	vmul.i32	q0, q9, q11
   39628:	vmul.i32	q1, q8, q12
   3962c:	cmp	r9, r6
   39630:	vmul.i32	q8, q0, d0[1]
   39634:	vmul.i32	q9, q1, d2[1]
   39638:	vmov.32	lr, d16[0]
   3963c:	vmov.32	r4, d18[0]
   39640:	beq	3952c <GetDataSlab+0x53d0>
   39644:	vmov.32	r6, d20[0]
   39648:	sub	r8, fp, #96	; 0x60
   3964c:	mul	r4, r6, r4
   39650:	ldr	r6, [r0, r3, lsl #2]
   39654:	subs	r3, r3, #1
   39658:	mul	lr, lr, r6
   3965c:	bne	3964c <GetDataSlab+0x54f0>
   39660:	b	39530 <GetDataSlab+0x53d4>
   39664:	ldr	r5, [sl]
   39668:	mov	r7, #0
   3966c:	sub	r9, fp, #176	; 0xb0
   39670:	sub	r8, fp, #96	; 0x60
   39674:	sub	r0, r5, #1
   39678:	str	r0, [fp, #-96]	; 0xffffffa0
   3967c:	ldr	r0, [r3]
   39680:	str	r0, [sp, #72]	; 0x48
   39684:	str	r0, [fp, #-176]	; 0xffffff50
   39688:	ldr	r0, [fp, #20]
   3968c:	ldr	r1, [r0]
   39690:	ldr	r0, [fp, #24]
   39694:	cmp	r0, #2
   39698:	mov	r0, r1
   3969c:	str	r1, [sp, #76]	; 0x4c
   396a0:	blt	446b0 <GetDataSlab+0x10554>
   396a4:	ldr	r0, [fp, #8]
   396a8:	ldr	r4, [sp, #72]	; 0x48
   396ac:	mov	r3, #0
   396b0:	mvn	ip, #15
   396b4:	mov	r7, #0
   396b8:	str	r1, [sp, #76]	; 0x4c
   396bc:	str	r3, [sp, #84]	; 0x54
   396c0:	mov	r3, r1
   396c4:	mov	r2, r0
   396c8:	sub	r0, r0, #4
   396cc:	mov	r6, r4
   396d0:	sub	sl, r2, #12
   396d4:	mov	r2, #1
   396d8:	b	3972c <GetDataSlab+0x55d0>
   396dc:	sub	r8, fp, #96	; 0x60
   396e0:	ldr	r3, [fp, #12]
   396e4:	sub	r9, fp, #176	; 0xb0
   396e8:	str	lr, [r8, r2, lsl #2]
   396ec:	ldr	r6, [sp, #68]	; 0x44
   396f0:	add	sl, sl, #4
   396f4:	str	r4, [r9, r2, lsl #2]
   396f8:	ldr	r3, [r3, r2, lsl #2]
   396fc:	mla	r7, r3, r6, r7
   39700:	ldr	r3, [fp, #20]
   39704:	ldr	r6, [sp, #76]	; 0x4c
   39708:	ldr	r3, [r3, r2, lsl #2]
   3970c:	add	r2, r2, #1
   39710:	mul	r6, r3, r6
   39714:	ldr	r3, [fp, #24]
   39718:	str	r6, [sp, #76]	; 0x4c
   3971c:	mov	r6, r4
   39720:	ldr	r4, [sp, #64]	; 0x40
   39724:	cmp	r2, r3
   39728:	beq	446b0 <GetDataSlab+0x10554>
   3972c:	ldr	r3, [fp, #16]
   39730:	str	r6, [sp, #68]	; 0x44
   39734:	ldr	r3, [r3, r2, lsl #2]
   39738:	str	r4, [r9, r2, lsl #2]
   3973c:	ldr	r9, [sp, #84]	; 0x54
   39740:	sub	lr, r3, #1
   39744:	ldr	r3, [fp, #8]
   39748:	add	r9, r9, #1
   3974c:	str	lr, [r8, r2, lsl #2]
   39750:	cmp	r9, #4
   39754:	str	r9, [sp, #84]	; 0x54
   39758:	ldr	r6, [r3, r2, lsl #2]
   3975c:	str	r6, [sp, #64]	; 0x40
   39760:	bcs	3976c <GetDataSlab+0x5610>
   39764:	mov	r3, r2
   39768:	b	397fc <GetDataSlab+0x56a0>
   3976c:	vmov.i32	q9, #1	; 0x00000001
   39770:	vmov.i32	q10, #1	; 0x00000001
   39774:	vmov.32	d23[1], r6
   39778:	vmov.i32	q8, #1	; 0x00000001
   3977c:	bic	r3, r9, #3
   39780:	bic	r8, r2, #3
   39784:	mov	r6, sl
   39788:	str	r3, [sp, #60]	; 0x3c
   3978c:	sub	r3, r2, r3
   39790:	vmov.32	d18[0], r4
   39794:	vmov.32	d20[0], lr
   39798:	vorr	d16, d18, d18
   3979c:	vmov.i32	q9, #1	; 0x00000001
   397a0:	vorr	d18, d20, d20
   397a4:	vld1.32	{d20-d21}, [r6], ip
   397a8:	subs	r8, r8, #4
   397ac:	vrev64.32	q12, q10
   397b0:	vext.8	q12, q12, q12, #8
   397b4:	vext.8	q11, q11, q12, #12
   397b8:	vmul.i32	q9, q9, q12
   397bc:	vmul.i32	q8, q11, q8
   397c0:	vorr	q11, q12, q12
   397c4:	bne	397a4 <GetDataSlab+0x5648>
   397c8:	vext.8	q11, q9, q8, #8
   397cc:	vext.8	q12, q8, q8, #8
   397d0:	ldr	r6, [sp, #60]	; 0x3c
   397d4:	vmul.i32	q0, q9, q11
   397d8:	vmul.i32	q1, q8, q12
   397dc:	cmp	r9, r6
   397e0:	vmul.i32	q8, q0, d0[1]
   397e4:	vmul.i32	q9, q1, d2[1]
   397e8:	vmov.32	lr, d16[0]
   397ec:	vmov.32	r4, d18[0]
   397f0:	beq	396dc <GetDataSlab+0x5580>
   397f4:	vmov.32	r6, d20[0]
   397f8:	sub	r8, fp, #96	; 0x60
   397fc:	mul	r4, r6, r4
   39800:	ldr	r6, [r0, r3, lsl #2]
   39804:	subs	r3, r3, #1
   39808:	mul	lr, lr, r6
   3980c:	bne	397fc <GetDataSlab+0x56a0>
   39810:	b	396e0 <GetDataSlab+0x5584>
   39814:	ldr	r7, [sl]
   39818:	sub	r6, fp, #176	; 0xb0
   3981c:	sub	r8, fp, #96	; 0x60
   39820:	sub	r0, r7, #1
   39824:	str	r0, [fp, #-96]	; 0xffffffa0
   39828:	ldr	r0, [r3]
   3982c:	mov	r3, #0
   39830:	str	r0, [sp, #64]	; 0x40
   39834:	str	r0, [fp, #-176]	; 0xffffff50
   39838:	ldr	r0, [fp, #20]
   3983c:	ldr	r1, [r0]
   39840:	ldr	r0, [fp, #24]
   39844:	cmp	r0, #2
   39848:	mov	r0, r1
   3984c:	str	r1, [sp, #68]	; 0x44
   39850:	blt	44850 <GetDataSlab+0x106f4>
   39854:	ldr	r0, [fp, #8]
   39858:	ldr	r5, [sp, #64]	; 0x40
   3985c:	mov	ip, #1
   39860:	mvn	sl, #15
   39864:	mov	r3, #0
   39868:	str	r1, [sp, #68]	; 0x44
   3986c:	mov	r2, r0
   39870:	sub	r0, r0, #4
   39874:	mov	r4, r5
   39878:	sub	lr, r2, #12
   3987c:	mov	r2, #0
   39880:	str	r2, [sp, #76]	; 0x4c
   39884:	mov	r2, r1
   39888:	b	398dc <GetDataSlab+0x5780>
   3988c:	ldr	r4, [sp, #56]	; 0x38
   39890:	sub	r8, fp, #96	; 0x60
   39894:	ldr	r2, [fp, #12]
   39898:	sub	r6, fp, #176	; 0xb0
   3989c:	str	r9, [r8, ip, lsl #2]
   398a0:	add	lr, lr, #4
   398a4:	str	r5, [r6, ip, lsl #2]
   398a8:	ldr	r2, [r2, ip, lsl #2]
   398ac:	mla	r3, r2, r4, r3
   398b0:	ldr	r2, [fp, #20]
   398b4:	ldr	r4, [sp, #68]	; 0x44
   398b8:	ldr	r2, [r2, ip, lsl #2]
   398bc:	add	ip, ip, #1
   398c0:	mul	r4, r2, r4
   398c4:	ldr	r2, [fp, #24]
   398c8:	str	r4, [sp, #68]	; 0x44
   398cc:	mov	r4, r5
   398d0:	ldr	r5, [sp, #72]	; 0x48
   398d4:	cmp	ip, r2
   398d8:	beq	44850 <GetDataSlab+0x106f4>
   398dc:	ldr	r2, [fp, #16]
   398e0:	ldr	r2, [r2, ip, lsl #2]
   398e4:	str	r5, [r6, ip, lsl #2]
   398e8:	sub	r9, r2, #1
   398ec:	ldr	r2, [fp, #8]
   398f0:	str	r9, [r8, ip, lsl #2]
   398f4:	ldr	r6, [r2, ip, lsl #2]
   398f8:	ldr	r2, [sp, #76]	; 0x4c
   398fc:	add	r2, r2, #1
   39900:	str	r6, [sp, #72]	; 0x48
   39904:	cmp	r2, #4
   39908:	str	r2, [sp, #76]	; 0x4c
   3990c:	bcs	3991c <GetDataSlab+0x57c0>
   39910:	mov	r2, r6
   39914:	mov	r6, ip
   39918:	b	399b8 <GetDataSlab+0x585c>
   3991c:	vmov.i32	q9, #1	; 0x00000001
   39920:	vmov.i32	q10, #1	; 0x00000001
   39924:	vmov.32	d23[1], r6
   39928:	vmov.i32	q8, #1	; 0x00000001
   3992c:	bic	r2, r2, #3
   39930:	bic	r8, ip, #3
   39934:	str	r4, [sp, #56]	; 0x38
   39938:	str	r2, [sp, #60]	; 0x3c
   3993c:	sub	r6, ip, r2
   39940:	mov	r2, lr
   39944:	vmov.32	d18[0], r5
   39948:	vmov.32	d20[0], r9
   3994c:	vorr	d16, d18, d18
   39950:	vmov.i32	q9, #1	; 0x00000001
   39954:	vorr	d18, d20, d20
   39958:	vld1.32	{d20-d21}, [r2], sl
   3995c:	subs	r8, r8, #4
   39960:	vrev64.32	q12, q10
   39964:	vext.8	q12, q12, q12, #8
   39968:	vext.8	q11, q11, q12, #12
   3996c:	vmul.i32	q9, q9, q12
   39970:	vmul.i32	q8, q11, q8
   39974:	vorr	q11, q12, q12
   39978:	bne	39958 <GetDataSlab+0x57fc>
   3997c:	vext.8	q11, q9, q8, #8
   39980:	vext.8	q12, q8, q8, #8
   39984:	ldr	r2, [sp, #76]	; 0x4c
   39988:	ldr	r4, [sp, #60]	; 0x3c
   3998c:	vmul.i32	q0, q9, q11
   39990:	vmul.i32	q1, q8, q12
   39994:	cmp	r2, r4
   39998:	vmul.i32	q8, q0, d0[1]
   3999c:	vmul.i32	q9, q1, d2[1]
   399a0:	vmov.32	r9, d16[0]
   399a4:	vmov.32	r5, d18[0]
   399a8:	beq	3988c <GetDataSlab+0x5730>
   399ac:	vmov.32	r2, d20[0]
   399b0:	ldr	r4, [sp, #56]	; 0x38
   399b4:	sub	r8, fp, #96	; 0x60
   399b8:	mul	r5, r2, r5
   399bc:	ldr	r2, [r0, r6, lsl #2]
   399c0:	subs	r6, r6, #1
   399c4:	mul	r9, r9, r2
   399c8:	bne	399b8 <GetDataSlab+0x585c>
   399cc:	b	39894 <GetDataSlab+0x5738>
   399d0:	ldr	r5, [sl]
   399d4:	mov	r7, #0
   399d8:	sub	r9, fp, #176	; 0xb0
   399dc:	sub	r8, fp, #96	; 0x60
   399e0:	sub	r0, r5, #1
   399e4:	str	r0, [fp, #-96]	; 0xffffffa0
   399e8:	ldr	r0, [r3]
   399ec:	str	r0, [sp, #72]	; 0x48
   399f0:	str	r0, [fp, #-176]	; 0xffffff50
   399f4:	ldr	r0, [fp, #20]
   399f8:	ldr	r1, [r0]
   399fc:	ldr	r0, [fp, #24]
   39a00:	cmp	r0, #2
   39a04:	mov	r0, r1
   39a08:	str	r1, [sp, #76]	; 0x4c
   39a0c:	blt	449d8 <GetDataSlab+0x1087c>
   39a10:	ldr	r0, [fp, #8]
   39a14:	ldr	r4, [sp, #72]	; 0x48
   39a18:	mov	r3, #0
   39a1c:	mvn	ip, #15
   39a20:	mov	r7, #0
   39a24:	str	r1, [sp, #76]	; 0x4c
   39a28:	str	r3, [sp, #84]	; 0x54
   39a2c:	mov	r3, r1
   39a30:	mov	r2, r0
   39a34:	sub	r0, r0, #4
   39a38:	mov	r6, r4
   39a3c:	sub	sl, r2, #12
   39a40:	mov	r2, #1
   39a44:	b	39a98 <GetDataSlab+0x593c>
   39a48:	sub	r8, fp, #96	; 0x60
   39a4c:	ldr	r3, [fp, #12]
   39a50:	sub	r9, fp, #176	; 0xb0
   39a54:	str	lr, [r8, r2, lsl #2]
   39a58:	ldr	r6, [sp, #68]	; 0x44
   39a5c:	add	sl, sl, #4
   39a60:	str	r4, [r9, r2, lsl #2]
   39a64:	ldr	r3, [r3, r2, lsl #2]
   39a68:	mla	r7, r3, r6, r7
   39a6c:	ldr	r3, [fp, #20]
   39a70:	ldr	r6, [sp, #76]	; 0x4c
   39a74:	ldr	r3, [r3, r2, lsl #2]
   39a78:	add	r2, r2, #1
   39a7c:	mul	r6, r3, r6
   39a80:	ldr	r3, [fp, #24]
   39a84:	str	r6, [sp, #76]	; 0x4c
   39a88:	mov	r6, r4
   39a8c:	ldr	r4, [sp, #64]	; 0x40
   39a90:	cmp	r2, r3
   39a94:	beq	449d8 <GetDataSlab+0x1087c>
   39a98:	ldr	r3, [fp, #16]
   39a9c:	str	r6, [sp, #68]	; 0x44
   39aa0:	ldr	r3, [r3, r2, lsl #2]
   39aa4:	str	r4, [r9, r2, lsl #2]
   39aa8:	ldr	r9, [sp, #84]	; 0x54
   39aac:	sub	lr, r3, #1
   39ab0:	ldr	r3, [fp, #8]
   39ab4:	add	r9, r9, #1
   39ab8:	str	lr, [r8, r2, lsl #2]
   39abc:	cmp	r9, #4
   39ac0:	str	r9, [sp, #84]	; 0x54
   39ac4:	ldr	r6, [r3, r2, lsl #2]
   39ac8:	str	r6, [sp, #64]	; 0x40
   39acc:	bcs	39ad8 <GetDataSlab+0x597c>
   39ad0:	mov	r3, r2
   39ad4:	b	39b68 <GetDataSlab+0x5a0c>
   39ad8:	vmov.i32	q9, #1	; 0x00000001
   39adc:	vmov.i32	q10, #1	; 0x00000001
   39ae0:	vmov.32	d23[1], r6
   39ae4:	vmov.i32	q8, #1	; 0x00000001
   39ae8:	bic	r3, r9, #3
   39aec:	bic	r8, r2, #3
   39af0:	mov	r6, sl
   39af4:	str	r3, [sp, #60]	; 0x3c
   39af8:	sub	r3, r2, r3
   39afc:	vmov.32	d18[0], r4
   39b00:	vmov.32	d20[0], lr
   39b04:	vorr	d16, d18, d18
   39b08:	vmov.i32	q9, #1	; 0x00000001
   39b0c:	vorr	d18, d20, d20
   39b10:	vld1.32	{d20-d21}, [r6], ip
   39b14:	subs	r8, r8, #4
   39b18:	vrev64.32	q12, q10
   39b1c:	vext.8	q12, q12, q12, #8
   39b20:	vext.8	q11, q11, q12, #12
   39b24:	vmul.i32	q9, q9, q12
   39b28:	vmul.i32	q8, q11, q8
   39b2c:	vorr	q11, q12, q12
   39b30:	bne	39b10 <GetDataSlab+0x59b4>
   39b34:	vext.8	q11, q9, q8, #8
   39b38:	vext.8	q12, q8, q8, #8
   39b3c:	ldr	r6, [sp, #60]	; 0x3c
   39b40:	vmul.i32	q0, q9, q11
   39b44:	vmul.i32	q1, q8, q12
   39b48:	cmp	r9, r6
   39b4c:	vmul.i32	q8, q0, d0[1]
   39b50:	vmul.i32	q9, q1, d2[1]
   39b54:	vmov.32	lr, d16[0]
   39b58:	vmov.32	r4, d18[0]
   39b5c:	beq	39a48 <GetDataSlab+0x58ec>
   39b60:	vmov.32	r6, d20[0]
   39b64:	sub	r8, fp, #96	; 0x60
   39b68:	mul	r4, r6, r4
   39b6c:	ldr	r6, [r0, r3, lsl #2]
   39b70:	subs	r3, r3, #1
   39b74:	mul	lr, lr, r6
   39b78:	bne	39b68 <GetDataSlab+0x5a0c>
   39b7c:	b	39a4c <GetDataSlab+0x58f0>
   39b80:	ldr	r5, [sl]
   39b84:	mov	r7, #0
   39b88:	sub	r9, fp, #176	; 0xb0
   39b8c:	sub	r8, fp, #96	; 0x60
   39b90:	sub	r0, r5, #1
   39b94:	str	r0, [fp, #-96]	; 0xffffffa0
   39b98:	ldr	r0, [r3]
   39b9c:	str	r0, [sp, #72]	; 0x48
   39ba0:	str	r0, [fp, #-176]	; 0xffffff50
   39ba4:	ldr	r0, [fp, #20]
   39ba8:	ldr	r1, [r0]
   39bac:	ldr	r0, [fp, #24]
   39bb0:	cmp	r0, #2
   39bb4:	mov	r0, r1
   39bb8:	str	r1, [sp, #76]	; 0x4c
   39bbc:	blt	44b78 <GetDataSlab+0x10a1c>
   39bc0:	ldr	r0, [fp, #8]
   39bc4:	ldr	r4, [sp, #72]	; 0x48
   39bc8:	mov	r3, #0
   39bcc:	mvn	ip, #15
   39bd0:	mov	r7, #0
   39bd4:	str	r1, [sp, #76]	; 0x4c
   39bd8:	str	r3, [sp, #84]	; 0x54
   39bdc:	mov	r3, r1
   39be0:	mov	r2, r0
   39be4:	sub	r0, r0, #4
   39be8:	mov	r6, r4
   39bec:	sub	sl, r2, #12
   39bf0:	mov	r2, #1
   39bf4:	b	39c48 <GetDataSlab+0x5aec>
   39bf8:	sub	r8, fp, #96	; 0x60
   39bfc:	ldr	r3, [fp, #12]
   39c00:	sub	r9, fp, #176	; 0xb0
   39c04:	str	lr, [r8, r2, lsl #2]
   39c08:	ldr	r6, [sp, #68]	; 0x44
   39c0c:	add	sl, sl, #4
   39c10:	str	r4, [r9, r2, lsl #2]
   39c14:	ldr	r3, [r3, r2, lsl #2]
   39c18:	mla	r7, r3, r6, r7
   39c1c:	ldr	r3, [fp, #20]
   39c20:	ldr	r6, [sp, #76]	; 0x4c
   39c24:	ldr	r3, [r3, r2, lsl #2]
   39c28:	add	r2, r2, #1
   39c2c:	mul	r6, r3, r6
   39c30:	ldr	r3, [fp, #24]
   39c34:	str	r6, [sp, #76]	; 0x4c
   39c38:	mov	r6, r4
   39c3c:	ldr	r4, [sp, #64]	; 0x40
   39c40:	cmp	r2, r3
   39c44:	beq	44b78 <GetDataSlab+0x10a1c>
   39c48:	ldr	r3, [fp, #16]
   39c4c:	str	r6, [sp, #68]	; 0x44
   39c50:	ldr	r3, [r3, r2, lsl #2]
   39c54:	str	r4, [r9, r2, lsl #2]
   39c58:	ldr	r9, [sp, #84]	; 0x54
   39c5c:	sub	lr, r3, #1
   39c60:	ldr	r3, [fp, #8]
   39c64:	add	r9, r9, #1
   39c68:	str	lr, [r8, r2, lsl #2]
   39c6c:	cmp	r9, #4
   39c70:	str	r9, [sp, #84]	; 0x54
   39c74:	ldr	r6, [r3, r2, lsl #2]
   39c78:	str	r6, [sp, #64]	; 0x40
   39c7c:	bcs	39c88 <GetDataSlab+0x5b2c>
   39c80:	mov	r3, r2
   39c84:	b	39d18 <GetDataSlab+0x5bbc>
   39c88:	vmov.i32	q9, #1	; 0x00000001
   39c8c:	vmov.i32	q10, #1	; 0x00000001
   39c90:	vmov.32	d23[1], r6
   39c94:	vmov.i32	q8, #1	; 0x00000001
   39c98:	bic	r3, r9, #3
   39c9c:	bic	r8, r2, #3
   39ca0:	mov	r6, sl
   39ca4:	str	r3, [sp, #60]	; 0x3c
   39ca8:	sub	r3, r2, r3
   39cac:	vmov.32	d18[0], r4
   39cb0:	vmov.32	d20[0], lr
   39cb4:	vorr	d16, d18, d18
   39cb8:	vmov.i32	q9, #1	; 0x00000001
   39cbc:	vorr	d18, d20, d20
   39cc0:	vld1.32	{d20-d21}, [r6], ip
   39cc4:	subs	r8, r8, #4
   39cc8:	vrev64.32	q12, q10
   39ccc:	vext.8	q12, q12, q12, #8
   39cd0:	vext.8	q11, q11, q12, #12
   39cd4:	vmul.i32	q9, q9, q12
   39cd8:	vmul.i32	q8, q11, q8
   39cdc:	vorr	q11, q12, q12
   39ce0:	bne	39cc0 <GetDataSlab+0x5b64>
   39ce4:	vext.8	q11, q9, q8, #8
   39ce8:	vext.8	q12, q8, q8, #8
   39cec:	ldr	r6, [sp, #60]	; 0x3c
   39cf0:	vmul.i32	q0, q9, q11
   39cf4:	vmul.i32	q1, q8, q12
   39cf8:	cmp	r9, r6
   39cfc:	vmul.i32	q8, q0, d0[1]
   39d00:	vmul.i32	q9, q1, d2[1]
   39d04:	vmov.32	lr, d16[0]
   39d08:	vmov.32	r4, d18[0]
   39d0c:	beq	39bf8 <GetDataSlab+0x5a9c>
   39d10:	vmov.32	r6, d20[0]
   39d14:	sub	r8, fp, #96	; 0x60
   39d18:	mul	r4, r6, r4
   39d1c:	ldr	r6, [r0, r3, lsl #2]
   39d20:	subs	r3, r3, #1
   39d24:	mul	lr, lr, r6
   39d28:	bne	39d18 <GetDataSlab+0x5bbc>
   39d2c:	b	39bfc <GetDataSlab+0x5aa0>
   39d30:	ldr	r5, [sl]
   39d34:	mov	r7, #0
   39d38:	sub	r9, fp, #176	; 0xb0
   39d3c:	sub	r8, fp, #96	; 0x60
   39d40:	sub	r0, r5, #1
   39d44:	str	r0, [fp, #-96]	; 0xffffffa0
   39d48:	ldr	r0, [r3]
   39d4c:	str	r0, [sp, #72]	; 0x48
   39d50:	str	r0, [fp, #-176]	; 0xffffff50
   39d54:	ldr	r0, [fp, #20]
   39d58:	ldr	r1, [r0]
   39d5c:	ldr	r0, [fp, #24]
   39d60:	cmp	r0, #2
   39d64:	mov	r0, r1
   39d68:	str	r1, [sp, #76]	; 0x4c
   39d6c:	blt	44d0c <GetDataSlab+0x10bb0>
   39d70:	ldr	r0, [fp, #8]
   39d74:	ldr	r4, [sp, #72]	; 0x48
   39d78:	mov	r3, #0
   39d7c:	mvn	ip, #15
   39d80:	mov	r7, #0
   39d84:	str	r1, [sp, #76]	; 0x4c
   39d88:	str	r3, [sp, #84]	; 0x54
   39d8c:	mov	r3, r1
   39d90:	mov	r2, r0
   39d94:	sub	r0, r0, #4
   39d98:	mov	r6, r4
   39d9c:	sub	sl, r2, #12
   39da0:	mov	r2, #1
   39da4:	b	39df8 <GetDataSlab+0x5c9c>
   39da8:	sub	r8, fp, #96	; 0x60
   39dac:	ldr	r3, [fp, #12]
   39db0:	sub	r9, fp, #176	; 0xb0
   39db4:	str	lr, [r8, r2, lsl #2]
   39db8:	ldr	r6, [sp, #68]	; 0x44
   39dbc:	add	sl, sl, #4
   39dc0:	str	r4, [r9, r2, lsl #2]
   39dc4:	ldr	r3, [r3, r2, lsl #2]
   39dc8:	mla	r7, r3, r6, r7
   39dcc:	ldr	r3, [fp, #20]
   39dd0:	ldr	r6, [sp, #76]	; 0x4c
   39dd4:	ldr	r3, [r3, r2, lsl #2]
   39dd8:	add	r2, r2, #1
   39ddc:	mul	r6, r3, r6
   39de0:	ldr	r3, [fp, #24]
   39de4:	str	r6, [sp, #76]	; 0x4c
   39de8:	mov	r6, r4
   39dec:	ldr	r4, [sp, #64]	; 0x40
   39df0:	cmp	r2, r3
   39df4:	beq	44d0c <GetDataSlab+0x10bb0>
   39df8:	ldr	r3, [fp, #16]
   39dfc:	str	r6, [sp, #68]	; 0x44
   39e00:	ldr	r3, [r3, r2, lsl #2]
   39e04:	str	r4, [r9, r2, lsl #2]
   39e08:	ldr	r9, [sp, #84]	; 0x54
   39e0c:	sub	lr, r3, #1
   39e10:	ldr	r3, [fp, #8]
   39e14:	add	r9, r9, #1
   39e18:	str	lr, [r8, r2, lsl #2]
   39e1c:	cmp	r9, #4
   39e20:	str	r9, [sp, #84]	; 0x54
   39e24:	ldr	r6, [r3, r2, lsl #2]
   39e28:	str	r6, [sp, #64]	; 0x40
   39e2c:	bcs	39e38 <GetDataSlab+0x5cdc>
   39e30:	mov	r3, r2
   39e34:	b	39ec8 <GetDataSlab+0x5d6c>
   39e38:	vmov.i32	q9, #1	; 0x00000001
   39e3c:	vmov.i32	q10, #1	; 0x00000001
   39e40:	vmov.32	d23[1], r6
   39e44:	vmov.i32	q8, #1	; 0x00000001
   39e48:	bic	r3, r9, #3
   39e4c:	bic	r8, r2, #3
   39e50:	mov	r6, sl
   39e54:	str	r3, [sp, #60]	; 0x3c
   39e58:	sub	r3, r2, r3
   39e5c:	vmov.32	d18[0], r4
   39e60:	vmov.32	d20[0], lr
   39e64:	vorr	d16, d18, d18
   39e68:	vmov.i32	q9, #1	; 0x00000001
   39e6c:	vorr	d18, d20, d20
   39e70:	vld1.32	{d20-d21}, [r6], ip
   39e74:	subs	r8, r8, #4
   39e78:	vrev64.32	q12, q10
   39e7c:	vext.8	q12, q12, q12, #8
   39e80:	vext.8	q11, q11, q12, #12
   39e84:	vmul.i32	q9, q9, q12
   39e88:	vmul.i32	q8, q11, q8
   39e8c:	vorr	q11, q12, q12
   39e90:	bne	39e70 <GetDataSlab+0x5d14>
   39e94:	vext.8	q11, q9, q8, #8
   39e98:	vext.8	q12, q8, q8, #8
   39e9c:	ldr	r6, [sp, #60]	; 0x3c
   39ea0:	vmul.i32	q0, q9, q11
   39ea4:	vmul.i32	q1, q8, q12
   39ea8:	cmp	r9, r6
   39eac:	vmul.i32	q8, q0, d0[1]
   39eb0:	vmul.i32	q9, q1, d2[1]
   39eb4:	vmov.32	lr, d16[0]
   39eb8:	vmov.32	r4, d18[0]
   39ebc:	beq	39da8 <GetDataSlab+0x5c4c>
   39ec0:	vmov.32	r6, d20[0]
   39ec4:	sub	r8, fp, #96	; 0x60
   39ec8:	mul	r4, r6, r4
   39ecc:	ldr	r6, [r0, r3, lsl #2]
   39ed0:	subs	r3, r3, #1
   39ed4:	mul	lr, lr, r6
   39ed8:	bne	39ec8 <GetDataSlab+0x5d6c>
   39edc:	b	39dac <GetDataSlab+0x5c50>
   39ee0:	ldr	r5, [sl]
   39ee4:	mov	r7, #0
   39ee8:	sub	r9, fp, #176	; 0xb0
   39eec:	sub	r8, fp, #96	; 0x60
   39ef0:	sub	r0, r5, #1
   39ef4:	str	r0, [fp, #-96]	; 0xffffffa0
   39ef8:	ldr	r0, [r3]
   39efc:	str	r0, [sp, #72]	; 0x48
   39f00:	str	r0, [fp, #-176]	; 0xffffff50
   39f04:	ldr	r0, [fp, #20]
   39f08:	ldr	r1, [r0]
   39f0c:	ldr	r0, [fp, #24]
   39f10:	cmp	r0, #2
   39f14:	mov	r0, r1
   39f18:	str	r1, [sp, #76]	; 0x4c
   39f1c:	blt	44ea0 <GetDataSlab+0x10d44>
   39f20:	ldr	r0, [fp, #8]
   39f24:	ldr	r4, [sp, #72]	; 0x48
   39f28:	mov	r3, #0
   39f2c:	mvn	ip, #15
   39f30:	mov	r7, #0
   39f34:	str	r1, [sp, #76]	; 0x4c
   39f38:	str	r3, [sp, #84]	; 0x54
   39f3c:	mov	r3, r1
   39f40:	mov	r2, r0
   39f44:	sub	r0, r0, #4
   39f48:	mov	r6, r4
   39f4c:	sub	sl, r2, #12
   39f50:	mov	r2, #1
   39f54:	b	39fa8 <GetDataSlab+0x5e4c>
   39f58:	sub	r8, fp, #96	; 0x60
   39f5c:	ldr	r3, [fp, #12]
   39f60:	sub	r9, fp, #176	; 0xb0
   39f64:	str	lr, [r8, r2, lsl #2]
   39f68:	ldr	r6, [sp, #68]	; 0x44
   39f6c:	add	sl, sl, #4
   39f70:	str	r4, [r9, r2, lsl #2]
   39f74:	ldr	r3, [r3, r2, lsl #2]
   39f78:	mla	r7, r3, r6, r7
   39f7c:	ldr	r3, [fp, #20]
   39f80:	ldr	r6, [sp, #76]	; 0x4c
   39f84:	ldr	r3, [r3, r2, lsl #2]
   39f88:	add	r2, r2, #1
   39f8c:	mul	r6, r3, r6
   39f90:	ldr	r3, [fp, #24]
   39f94:	str	r6, [sp, #76]	; 0x4c
   39f98:	mov	r6, r4
   39f9c:	ldr	r4, [sp, #64]	; 0x40
   39fa0:	cmp	r2, r3
   39fa4:	beq	44ea0 <GetDataSlab+0x10d44>
   39fa8:	ldr	r3, [fp, #16]
   39fac:	str	r6, [sp, #68]	; 0x44
   39fb0:	ldr	r3, [r3, r2, lsl #2]
   39fb4:	str	r4, [r9, r2, lsl #2]
   39fb8:	ldr	r9, [sp, #84]	; 0x54
   39fbc:	sub	lr, r3, #1
   39fc0:	ldr	r3, [fp, #8]
   39fc4:	add	r9, r9, #1
   39fc8:	str	lr, [r8, r2, lsl #2]
   39fcc:	cmp	r9, #4
   39fd0:	str	r9, [sp, #84]	; 0x54
   39fd4:	ldr	r6, [r3, r2, lsl #2]
   39fd8:	str	r6, [sp, #64]	; 0x40
   39fdc:	bcs	39fe8 <GetDataSlab+0x5e8c>
   39fe0:	mov	r3, r2
   39fe4:	b	3a078 <GetDataSlab+0x5f1c>
   39fe8:	vmov.i32	q9, #1	; 0x00000001
   39fec:	vmov.i32	q10, #1	; 0x00000001
   39ff0:	vmov.32	d23[1], r6
   39ff4:	vmov.i32	q8, #1	; 0x00000001
   39ff8:	bic	r3, r9, #3
   39ffc:	bic	r8, r2, #3
   3a000:	mov	r6, sl
   3a004:	str	r3, [sp, #60]	; 0x3c
   3a008:	sub	r3, r2, r3
   3a00c:	vmov.32	d18[0], r4
   3a010:	vmov.32	d20[0], lr
   3a014:	vorr	d16, d18, d18
   3a018:	vmov.i32	q9, #1	; 0x00000001
   3a01c:	vorr	d18, d20, d20
   3a020:	vld1.32	{d20-d21}, [r6], ip
   3a024:	subs	r8, r8, #4
   3a028:	vrev64.32	q12, q10
   3a02c:	vext.8	q12, q12, q12, #8
   3a030:	vext.8	q11, q11, q12, #12
   3a034:	vmul.i32	q9, q9, q12
   3a038:	vmul.i32	q8, q11, q8
   3a03c:	vorr	q11, q12, q12
   3a040:	bne	3a020 <GetDataSlab+0x5ec4>
   3a044:	vext.8	q11, q9, q8, #8
   3a048:	vext.8	q12, q8, q8, #8
   3a04c:	ldr	r6, [sp, #60]	; 0x3c
   3a050:	vmul.i32	q0, q9, q11
   3a054:	vmul.i32	q1, q8, q12
   3a058:	cmp	r9, r6
   3a05c:	vmul.i32	q8, q0, d0[1]
   3a060:	vmul.i32	q9, q1, d2[1]
   3a064:	vmov.32	lr, d16[0]
   3a068:	vmov.32	r4, d18[0]
   3a06c:	beq	39f58 <GetDataSlab+0x5dfc>
   3a070:	vmov.32	r6, d20[0]
   3a074:	sub	r8, fp, #96	; 0x60
   3a078:	mul	r4, r6, r4
   3a07c:	ldr	r6, [r0, r3, lsl #2]
   3a080:	subs	r3, r3, #1
   3a084:	mul	lr, lr, r6
   3a088:	bne	3a078 <GetDataSlab+0x5f1c>
   3a08c:	b	39f5c <GetDataSlab+0x5e00>
   3a090:	ldr	r5, [sl]
   3a094:	mov	r7, #0
   3a098:	sub	r9, fp, #176	; 0xb0
   3a09c:	sub	r8, fp, #96	; 0x60
   3a0a0:	sub	r0, r5, #1
   3a0a4:	str	r0, [fp, #-96]	; 0xffffffa0
   3a0a8:	ldr	r0, [r3]
   3a0ac:	str	r0, [sp, #72]	; 0x48
   3a0b0:	str	r0, [fp, #-176]	; 0xffffff50
   3a0b4:	ldr	r0, [fp, #20]
   3a0b8:	ldr	r1, [r0]
   3a0bc:	ldr	r0, [fp, #24]
   3a0c0:	cmp	r0, #2
   3a0c4:	mov	r0, r1
   3a0c8:	str	r1, [sp, #76]	; 0x4c
   3a0cc:	blt	45034 <GetDataSlab+0x10ed8>
   3a0d0:	ldr	r0, [fp, #8]
   3a0d4:	ldr	r4, [sp, #72]	; 0x48
   3a0d8:	mov	r3, #0
   3a0dc:	mvn	ip, #15
   3a0e0:	mov	r7, #0
   3a0e4:	str	r1, [sp, #76]	; 0x4c
   3a0e8:	str	r3, [sp, #84]	; 0x54
   3a0ec:	mov	r3, r1
   3a0f0:	mov	r2, r0
   3a0f4:	sub	r0, r0, #4
   3a0f8:	mov	r6, r4
   3a0fc:	sub	sl, r2, #12
   3a100:	mov	r2, #1
   3a104:	b	3a158 <GetDataSlab+0x5ffc>
   3a108:	sub	r8, fp, #96	; 0x60
   3a10c:	ldr	r3, [fp, #12]
   3a110:	sub	r9, fp, #176	; 0xb0
   3a114:	str	lr, [r8, r2, lsl #2]
   3a118:	ldr	r6, [sp, #68]	; 0x44
   3a11c:	add	sl, sl, #4
   3a120:	str	r4, [r9, r2, lsl #2]
   3a124:	ldr	r3, [r3, r2, lsl #2]
   3a128:	mla	r7, r3, r6, r7
   3a12c:	ldr	r3, [fp, #20]
   3a130:	ldr	r6, [sp, #76]	; 0x4c
   3a134:	ldr	r3, [r3, r2, lsl #2]
   3a138:	add	r2, r2, #1
   3a13c:	mul	r6, r3, r6
   3a140:	ldr	r3, [fp, #24]
   3a144:	str	r6, [sp, #76]	; 0x4c
   3a148:	mov	r6, r4
   3a14c:	ldr	r4, [sp, #64]	; 0x40
   3a150:	cmp	r2, r3
   3a154:	beq	45034 <GetDataSlab+0x10ed8>
   3a158:	ldr	r3, [fp, #16]
   3a15c:	str	r6, [sp, #68]	; 0x44
   3a160:	ldr	r3, [r3, r2, lsl #2]
   3a164:	str	r4, [r9, r2, lsl #2]
   3a168:	ldr	r9, [sp, #84]	; 0x54
   3a16c:	sub	lr, r3, #1
   3a170:	ldr	r3, [fp, #8]
   3a174:	add	r9, r9, #1
   3a178:	str	lr, [r8, r2, lsl #2]
   3a17c:	cmp	r9, #4
   3a180:	str	r9, [sp, #84]	; 0x54
   3a184:	ldr	r6, [r3, r2, lsl #2]
   3a188:	str	r6, [sp, #64]	; 0x40
   3a18c:	bcs	3a198 <GetDataSlab+0x603c>
   3a190:	mov	r3, r2
   3a194:	b	3a228 <GetDataSlab+0x60cc>
   3a198:	vmov.i32	q9, #1	; 0x00000001
   3a19c:	vmov.i32	q10, #1	; 0x00000001
   3a1a0:	vmov.32	d23[1], r6
   3a1a4:	vmov.i32	q8, #1	; 0x00000001
   3a1a8:	bic	r3, r9, #3
   3a1ac:	bic	r8, r2, #3
   3a1b0:	mov	r6, sl
   3a1b4:	str	r3, [sp, #60]	; 0x3c
   3a1b8:	sub	r3, r2, r3
   3a1bc:	vmov.32	d18[0], r4
   3a1c0:	vmov.32	d20[0], lr
   3a1c4:	vorr	d16, d18, d18
   3a1c8:	vmov.i32	q9, #1	; 0x00000001
   3a1cc:	vorr	d18, d20, d20
   3a1d0:	vld1.32	{d20-d21}, [r6], ip
   3a1d4:	subs	r8, r8, #4
   3a1d8:	vrev64.32	q12, q10
   3a1dc:	vext.8	q12, q12, q12, #8
   3a1e0:	vext.8	q11, q11, q12, #12
   3a1e4:	vmul.i32	q9, q9, q12
   3a1e8:	vmul.i32	q8, q11, q8
   3a1ec:	vorr	q11, q12, q12
   3a1f0:	bne	3a1d0 <GetDataSlab+0x6074>
   3a1f4:	vext.8	q11, q9, q8, #8
   3a1f8:	vext.8	q12, q8, q8, #8
   3a1fc:	ldr	r6, [sp, #60]	; 0x3c
   3a200:	vmul.i32	q0, q9, q11
   3a204:	vmul.i32	q1, q8, q12
   3a208:	cmp	r9, r6
   3a20c:	vmul.i32	q8, q0, d0[1]
   3a210:	vmul.i32	q9, q1, d2[1]
   3a214:	vmov.32	lr, d16[0]
   3a218:	vmov.32	r4, d18[0]
   3a21c:	beq	3a108 <GetDataSlab+0x5fac>
   3a220:	vmov.32	r6, d20[0]
   3a224:	sub	r8, fp, #96	; 0x60
   3a228:	mul	r4, r6, r4
   3a22c:	ldr	r6, [r0, r3, lsl #2]
   3a230:	subs	r3, r3, #1
   3a234:	mul	lr, lr, r6
   3a238:	bne	3a228 <GetDataSlab+0x60cc>
   3a23c:	b	3a10c <GetDataSlab+0x5fb0>
   3a240:	ldr	r5, [sl]
   3a244:	mov	r7, #0
   3a248:	sub	r9, fp, #176	; 0xb0
   3a24c:	sub	r8, fp, #96	; 0x60
   3a250:	sub	r0, r5, #1
   3a254:	str	r0, [fp, #-96]	; 0xffffffa0
   3a258:	ldr	r0, [r3]
   3a25c:	str	r0, [sp, #72]	; 0x48
   3a260:	str	r0, [fp, #-176]	; 0xffffff50
   3a264:	ldr	r0, [fp, #20]
   3a268:	ldr	r1, [r0]
   3a26c:	ldr	r0, [fp, #24]
   3a270:	cmp	r0, #2
   3a274:	mov	r0, r1
   3a278:	str	r1, [sp, #76]	; 0x4c
   3a27c:	blt	451c8 <GetDataSlab+0x1106c>
   3a280:	ldr	r0, [fp, #8]
   3a284:	ldr	r4, [sp, #72]	; 0x48
   3a288:	mov	r3, #0
   3a28c:	mvn	ip, #15
   3a290:	mov	r7, #0
   3a294:	str	r1, [sp, #76]	; 0x4c
   3a298:	str	r3, [sp, #84]	; 0x54
   3a29c:	mov	r3, r1
   3a2a0:	mov	r2, r0
   3a2a4:	sub	r0, r0, #4
   3a2a8:	mov	r6, r4
   3a2ac:	sub	sl, r2, #12
   3a2b0:	mov	r2, #1
   3a2b4:	b	3a308 <GetDataSlab+0x61ac>
   3a2b8:	sub	r8, fp, #96	; 0x60
   3a2bc:	ldr	r3, [fp, #12]
   3a2c0:	sub	r9, fp, #176	; 0xb0
   3a2c4:	str	lr, [r8, r2, lsl #2]
   3a2c8:	ldr	r6, [sp, #68]	; 0x44
   3a2cc:	add	sl, sl, #4
   3a2d0:	str	r4, [r9, r2, lsl #2]
   3a2d4:	ldr	r3, [r3, r2, lsl #2]
   3a2d8:	mla	r7, r3, r6, r7
   3a2dc:	ldr	r3, [fp, #20]
   3a2e0:	ldr	r6, [sp, #76]	; 0x4c
   3a2e4:	ldr	r3, [r3, r2, lsl #2]
   3a2e8:	add	r2, r2, #1
   3a2ec:	mul	r6, r3, r6
   3a2f0:	ldr	r3, [fp, #24]
   3a2f4:	str	r6, [sp, #76]	; 0x4c
   3a2f8:	mov	r6, r4
   3a2fc:	ldr	r4, [sp, #64]	; 0x40
   3a300:	cmp	r2, r3
   3a304:	beq	451c8 <GetDataSlab+0x1106c>
   3a308:	ldr	r3, [fp, #16]
   3a30c:	str	r6, [sp, #68]	; 0x44
   3a310:	ldr	r3, [r3, r2, lsl #2]
   3a314:	str	r4, [r9, r2, lsl #2]
   3a318:	ldr	r9, [sp, #84]	; 0x54
   3a31c:	sub	lr, r3, #1
   3a320:	ldr	r3, [fp, #8]
   3a324:	add	r9, r9, #1
   3a328:	str	lr, [r8, r2, lsl #2]
   3a32c:	cmp	r9, #4
   3a330:	str	r9, [sp, #84]	; 0x54
   3a334:	ldr	r6, [r3, r2, lsl #2]
   3a338:	str	r6, [sp, #64]	; 0x40
   3a33c:	bcs	3a348 <GetDataSlab+0x61ec>
   3a340:	mov	r3, r2
   3a344:	b	3a3d8 <GetDataSlab+0x627c>
   3a348:	vmov.i32	q9, #1	; 0x00000001
   3a34c:	vmov.i32	q10, #1	; 0x00000001
   3a350:	vmov.32	d23[1], r6
   3a354:	vmov.i32	q8, #1	; 0x00000001
   3a358:	bic	r3, r9, #3
   3a35c:	bic	r8, r2, #3
   3a360:	mov	r6, sl
   3a364:	str	r3, [sp, #60]	; 0x3c
   3a368:	sub	r3, r2, r3
   3a36c:	vmov.32	d18[0], r4
   3a370:	vmov.32	d20[0], lr
   3a374:	vorr	d16, d18, d18
   3a378:	vmov.i32	q9, #1	; 0x00000001
   3a37c:	vorr	d18, d20, d20
   3a380:	vld1.32	{d20-d21}, [r6], ip
   3a384:	subs	r8, r8, #4
   3a388:	vrev64.32	q12, q10
   3a38c:	vext.8	q12, q12, q12, #8
   3a390:	vext.8	q11, q11, q12, #12
   3a394:	vmul.i32	q9, q9, q12
   3a398:	vmul.i32	q8, q11, q8
   3a39c:	vorr	q11, q12, q12
   3a3a0:	bne	3a380 <GetDataSlab+0x6224>
   3a3a4:	vext.8	q11, q9, q8, #8
   3a3a8:	vext.8	q12, q8, q8, #8
   3a3ac:	ldr	r6, [sp, #60]	; 0x3c
   3a3b0:	vmul.i32	q0, q9, q11
   3a3b4:	vmul.i32	q1, q8, q12
   3a3b8:	cmp	r9, r6
   3a3bc:	vmul.i32	q8, q0, d0[1]
   3a3c0:	vmul.i32	q9, q1, d2[1]
   3a3c4:	vmov.32	lr, d16[0]
   3a3c8:	vmov.32	r4, d18[0]
   3a3cc:	beq	3a2b8 <GetDataSlab+0x615c>
   3a3d0:	vmov.32	r6, d20[0]
   3a3d4:	sub	r8, fp, #96	; 0x60
   3a3d8:	mul	r4, r6, r4
   3a3dc:	ldr	r6, [r0, r3, lsl #2]
   3a3e0:	subs	r3, r3, #1
   3a3e4:	mul	lr, lr, r6
   3a3e8:	bne	3a3d8 <GetDataSlab+0x627c>
   3a3ec:	b	3a2bc <GetDataSlab+0x6160>
   3a3f0:	ldr	r5, [sl]
   3a3f4:	mov	r7, #0
   3a3f8:	sub	r9, fp, #176	; 0xb0
   3a3fc:	sub	r8, fp, #96	; 0x60
   3a400:	sub	r0, r5, #1
   3a404:	str	r0, [fp, #-96]	; 0xffffffa0
   3a408:	ldr	r0, [r3]
   3a40c:	str	r0, [sp, #72]	; 0x48
   3a410:	str	r0, [fp, #-176]	; 0xffffff50
   3a414:	ldr	r0, [fp, #20]
   3a418:	ldr	r1, [r0]
   3a41c:	ldr	r0, [fp, #24]
   3a420:	cmp	r0, #2
   3a424:	mov	r0, r1
   3a428:	str	r1, [sp, #76]	; 0x4c
   3a42c:	blt	45368 <GetDataSlab+0x1120c>
   3a430:	ldr	r0, [fp, #8]
   3a434:	ldr	r4, [sp, #72]	; 0x48
   3a438:	mov	r3, #0
   3a43c:	mvn	ip, #15
   3a440:	mov	r7, #0
   3a444:	str	r1, [sp, #76]	; 0x4c
   3a448:	str	r3, [sp, #84]	; 0x54
   3a44c:	mov	r3, r1
   3a450:	mov	r2, r0
   3a454:	sub	r0, r0, #4
   3a458:	mov	r6, r4
   3a45c:	sub	sl, r2, #12
   3a460:	mov	r2, #1
   3a464:	b	3a4b8 <GetDataSlab+0x635c>
   3a468:	sub	r8, fp, #96	; 0x60
   3a46c:	ldr	r3, [fp, #12]
   3a470:	sub	r9, fp, #176	; 0xb0
   3a474:	str	lr, [r8, r2, lsl #2]
   3a478:	ldr	r6, [sp, #68]	; 0x44
   3a47c:	add	sl, sl, #4
   3a480:	str	r4, [r9, r2, lsl #2]
   3a484:	ldr	r3, [r3, r2, lsl #2]
   3a488:	mla	r7, r3, r6, r7
   3a48c:	ldr	r3, [fp, #20]
   3a490:	ldr	r6, [sp, #76]	; 0x4c
   3a494:	ldr	r3, [r3, r2, lsl #2]
   3a498:	add	r2, r2, #1
   3a49c:	mul	r6, r3, r6
   3a4a0:	ldr	r3, [fp, #24]
   3a4a4:	str	r6, [sp, #76]	; 0x4c
   3a4a8:	mov	r6, r4
   3a4ac:	ldr	r4, [sp, #64]	; 0x40
   3a4b0:	cmp	r2, r3
   3a4b4:	beq	45368 <GetDataSlab+0x1120c>
   3a4b8:	ldr	r3, [fp, #16]
   3a4bc:	str	r6, [sp, #68]	; 0x44
   3a4c0:	ldr	r3, [r3, r2, lsl #2]
   3a4c4:	str	r4, [r9, r2, lsl #2]
   3a4c8:	ldr	r9, [sp, #84]	; 0x54
   3a4cc:	sub	lr, r3, #1
   3a4d0:	ldr	r3, [fp, #8]
   3a4d4:	add	r9, r9, #1
   3a4d8:	str	lr, [r8, r2, lsl #2]
   3a4dc:	cmp	r9, #4
   3a4e0:	str	r9, [sp, #84]	; 0x54
   3a4e4:	ldr	r6, [r3, r2, lsl #2]
   3a4e8:	str	r6, [sp, #64]	; 0x40
   3a4ec:	bcs	3a4f8 <GetDataSlab+0x639c>
   3a4f0:	mov	r3, r2
   3a4f4:	b	3a588 <GetDataSlab+0x642c>
   3a4f8:	vmov.i32	q9, #1	; 0x00000001
   3a4fc:	vmov.i32	q10, #1	; 0x00000001
   3a500:	vmov.32	d23[1], r6
   3a504:	vmov.i32	q8, #1	; 0x00000001
   3a508:	bic	r3, r9, #3
   3a50c:	bic	r8, r2, #3
   3a510:	mov	r6, sl
   3a514:	str	r3, [sp, #60]	; 0x3c
   3a518:	sub	r3, r2, r3
   3a51c:	vmov.32	d18[0], r4
   3a520:	vmov.32	d20[0], lr
   3a524:	vorr	d16, d18, d18
   3a528:	vmov.i32	q9, #1	; 0x00000001
   3a52c:	vorr	d18, d20, d20
   3a530:	vld1.32	{d20-d21}, [r6], ip
   3a534:	subs	r8, r8, #4
   3a538:	vrev64.32	q12, q10
   3a53c:	vext.8	q12, q12, q12, #8
   3a540:	vext.8	q11, q11, q12, #12
   3a544:	vmul.i32	q9, q9, q12
   3a548:	vmul.i32	q8, q11, q8
   3a54c:	vorr	q11, q12, q12
   3a550:	bne	3a530 <GetDataSlab+0x63d4>
   3a554:	vext.8	q11, q9, q8, #8
   3a558:	vext.8	q12, q8, q8, #8
   3a55c:	ldr	r6, [sp, #60]	; 0x3c
   3a560:	vmul.i32	q0, q9, q11
   3a564:	vmul.i32	q1, q8, q12
   3a568:	cmp	r9, r6
   3a56c:	vmul.i32	q8, q0, d0[1]
   3a570:	vmul.i32	q9, q1, d2[1]
   3a574:	vmov.32	lr, d16[0]
   3a578:	vmov.32	r4, d18[0]
   3a57c:	beq	3a468 <GetDataSlab+0x630c>
   3a580:	vmov.32	r6, d20[0]
   3a584:	sub	r8, fp, #96	; 0x60
   3a588:	mul	r4, r6, r4
   3a58c:	ldr	r6, [r0, r3, lsl #2]
   3a590:	subs	r3, r3, #1
   3a594:	mul	lr, lr, r6
   3a598:	bne	3a588 <GetDataSlab+0x642c>
   3a59c:	b	3a46c <GetDataSlab+0x6310>
   3a5a0:	ldr	r7, [sl]
   3a5a4:	sub	r6, fp, #176	; 0xb0
   3a5a8:	sub	r8, fp, #96	; 0x60
   3a5ac:	sub	r0, r7, #1
   3a5b0:	str	r0, [fp, #-96]	; 0xffffffa0
   3a5b4:	ldr	r0, [r3]
   3a5b8:	mov	r3, #0
   3a5bc:	str	r0, [sp, #64]	; 0x40
   3a5c0:	str	r0, [fp, #-176]	; 0xffffff50
   3a5c4:	ldr	r0, [fp, #20]
   3a5c8:	ldr	r1, [r0]
   3a5cc:	ldr	r0, [fp, #24]
   3a5d0:	cmp	r0, #2
   3a5d4:	mov	r0, r1
   3a5d8:	str	r1, [sp, #68]	; 0x44
   3a5dc:	blt	45508 <GetDataSlab+0x113ac>
   3a5e0:	ldr	r0, [fp, #8]
   3a5e4:	ldr	r5, [sp, #64]	; 0x40
   3a5e8:	mov	ip, #1
   3a5ec:	mvn	sl, #15
   3a5f0:	mov	r3, #0
   3a5f4:	str	r1, [sp, #68]	; 0x44
   3a5f8:	mov	r2, r0
   3a5fc:	sub	r0, r0, #4
   3a600:	mov	r4, r5
   3a604:	sub	lr, r2, #12
   3a608:	mov	r2, #0
   3a60c:	str	r2, [sp, #76]	; 0x4c
   3a610:	mov	r2, r1
   3a614:	b	3a668 <GetDataSlab+0x650c>
   3a618:	ldr	r4, [sp, #56]	; 0x38
   3a61c:	sub	r8, fp, #96	; 0x60
   3a620:	ldr	r2, [fp, #12]
   3a624:	sub	r6, fp, #176	; 0xb0
   3a628:	str	r9, [r8, ip, lsl #2]
   3a62c:	add	lr, lr, #4
   3a630:	str	r5, [r6, ip, lsl #2]
   3a634:	ldr	r2, [r2, ip, lsl #2]
   3a638:	mla	r3, r2, r4, r3
   3a63c:	ldr	r2, [fp, #20]
   3a640:	ldr	r4, [sp, #68]	; 0x44
   3a644:	ldr	r2, [r2, ip, lsl #2]
   3a648:	add	ip, ip, #1
   3a64c:	mul	r4, r2, r4
   3a650:	ldr	r2, [fp, #24]
   3a654:	str	r4, [sp, #68]	; 0x44
   3a658:	mov	r4, r5
   3a65c:	ldr	r5, [sp, #72]	; 0x48
   3a660:	cmp	ip, r2
   3a664:	beq	45508 <GetDataSlab+0x113ac>
   3a668:	ldr	r2, [fp, #16]
   3a66c:	ldr	r2, [r2, ip, lsl #2]
   3a670:	str	r5, [r6, ip, lsl #2]
   3a674:	sub	r9, r2, #1
   3a678:	ldr	r2, [fp, #8]
   3a67c:	str	r9, [r8, ip, lsl #2]
   3a680:	ldr	r6, [r2, ip, lsl #2]
   3a684:	ldr	r2, [sp, #76]	; 0x4c
   3a688:	add	r2, r2, #1
   3a68c:	str	r6, [sp, #72]	; 0x48
   3a690:	cmp	r2, #4
   3a694:	str	r2, [sp, #76]	; 0x4c
   3a698:	bcs	3a6a8 <GetDataSlab+0x654c>
   3a69c:	mov	r2, r6
   3a6a0:	mov	r6, ip
   3a6a4:	b	3a744 <GetDataSlab+0x65e8>
   3a6a8:	vmov.i32	q9, #1	; 0x00000001
   3a6ac:	vmov.i32	q10, #1	; 0x00000001
   3a6b0:	vmov.32	d23[1], r6
   3a6b4:	vmov.i32	q8, #1	; 0x00000001
   3a6b8:	bic	r2, r2, #3
   3a6bc:	bic	r8, ip, #3
   3a6c0:	str	r4, [sp, #56]	; 0x38
   3a6c4:	str	r2, [sp, #60]	; 0x3c
   3a6c8:	sub	r6, ip, r2
   3a6cc:	mov	r2, lr
   3a6d0:	vmov.32	d18[0], r5
   3a6d4:	vmov.32	d20[0], r9
   3a6d8:	vorr	d16, d18, d18
   3a6dc:	vmov.i32	q9, #1	; 0x00000001
   3a6e0:	vorr	d18, d20, d20
   3a6e4:	vld1.32	{d20-d21}, [r2], sl
   3a6e8:	subs	r8, r8, #4
   3a6ec:	vrev64.32	q12, q10
   3a6f0:	vext.8	q12, q12, q12, #8
   3a6f4:	vext.8	q11, q11, q12, #12
   3a6f8:	vmul.i32	q9, q9, q12
   3a6fc:	vmul.i32	q8, q11, q8
   3a700:	vorr	q11, q12, q12
   3a704:	bne	3a6e4 <GetDataSlab+0x6588>
   3a708:	vext.8	q11, q9, q8, #8
   3a70c:	vext.8	q12, q8, q8, #8
   3a710:	ldr	r2, [sp, #76]	; 0x4c
   3a714:	ldr	r4, [sp, #60]	; 0x3c
   3a718:	vmul.i32	q0, q9, q11
   3a71c:	vmul.i32	q1, q8, q12
   3a720:	cmp	r2, r4
   3a724:	vmul.i32	q8, q0, d0[1]
   3a728:	vmul.i32	q9, q1, d2[1]
   3a72c:	vmov.32	r9, d16[0]
   3a730:	vmov.32	r5, d18[0]
   3a734:	beq	3a618 <GetDataSlab+0x64bc>
   3a738:	vmov.32	r2, d20[0]
   3a73c:	ldr	r4, [sp, #56]	; 0x38
   3a740:	sub	r8, fp, #96	; 0x60
   3a744:	mul	r5, r2, r5
   3a748:	ldr	r2, [r0, r6, lsl #2]
   3a74c:	subs	r6, r6, #1
   3a750:	mul	r9, r9, r2
   3a754:	bne	3a744 <GetDataSlab+0x65e8>
   3a758:	b	3a620 <GetDataSlab+0x64c4>
   3a75c:	ldr	sl, [sl]
   3a760:	mov	r3, #0
   3a764:	sub	lr, fp, #96	; 0x60
   3a768:	sub	r0, sl, #1
   3a76c:	str	r0, [fp, #-96]	; 0xffffffa0
   3a770:	ldr	r0, [fp, #8]
   3a774:	ldr	r0, [r0]
   3a778:	str	r0, [sp, #52]	; 0x34
   3a77c:	str	r0, [fp, #-176]	; 0xffffff50
   3a780:	ldr	r0, [fp, #20]
   3a784:	ldr	r1, [r0]
   3a788:	ldr	r0, [fp, #24]
   3a78c:	cmp	r0, #2
   3a790:	str	r1, [sp, #56]	; 0x38
   3a794:	str	r1, [sp, #76]	; 0x4c
   3a798:	blt	45690 <GetDataSlab+0x11534>
   3a79c:	ldr	r0, [fp, #8]
   3a7a0:	ldr	r4, [sp, #52]	; 0x34
   3a7a4:	mov	r2, ip
   3a7a8:	mov	r6, #1
   3a7ac:	mov	r9, #0
   3a7b0:	mvn	r5, #15
   3a7b4:	mov	r3, #0
   3a7b8:	mov	r1, r0
   3a7bc:	sub	r0, r0, #4
   3a7c0:	mov	r8, r4
   3a7c4:	sub	ip, r1, #12
   3a7c8:	ldr	r1, [sp, #56]	; 0x38
   3a7cc:	str	r1, [sp, #76]	; 0x4c
   3a7d0:	b	3a820 <GetDataSlab+0x66c4>
   3a7d4:	ldr	r1, [fp, #12]
   3a7d8:	sub	r2, fp, #176	; 0xb0
   3a7dc:	sub	lr, fp, #96	; 0x60
   3a7e0:	add	ip, ip, #4
   3a7e4:	str	r7, [lr, r6, lsl #2]
   3a7e8:	str	r4, [r2, r6, lsl #2]
   3a7ec:	ldr	r7, [sp, #76]	; 0x4c
   3a7f0:	ldr	r1, [r1, r6, lsl #2]
   3a7f4:	mla	r3, r1, r8, r3
   3a7f8:	ldr	r1, [fp, #20]
   3a7fc:	mov	r8, r4
   3a800:	ldr	r4, [sp, #84]	; 0x54
   3a804:	ldr	r1, [r1, r6, lsl #2]
   3a808:	add	r6, r6, #1
   3a80c:	mul	r7, r1, r7
   3a810:	ldr	r1, [fp, #24]
   3a814:	str	r7, [sp, #76]	; 0x4c
   3a818:	cmp	r6, r1
   3a81c:	beq	45690 <GetDataSlab+0x11534>
   3a820:	ldr	r1, [fp, #16]
   3a824:	add	r9, r9, #1
   3a828:	cmp	r9, #4
   3a82c:	ldr	r1, [r1, r6, lsl #2]
   3a830:	str	r4, [r2, r6, lsl #2]
   3a834:	sub	r7, r1, #1
   3a838:	ldr	r1, [fp, #8]
   3a83c:	str	r7, [lr, r6, lsl #2]
   3a840:	ldr	r2, [r1, r6, lsl #2]
   3a844:	str	r2, [sp, #84]	; 0x54
   3a848:	bcs	3a858 <GetDataSlab+0x66fc>
   3a84c:	mov	r1, r2
   3a850:	mov	r2, r6
   3a854:	b	3a8ec <GetDataSlab+0x6790>
   3a858:	vmov.i32	q9, #1	; 0x00000001
   3a85c:	vmov.i32	q10, #1	; 0x00000001
   3a860:	vmov.32	d23[1], r2
   3a864:	mov	r1, r9
   3a868:	vmov.i32	q8, #1	; 0x00000001
   3a86c:	bic	r9, r6, #3
   3a870:	str	r1, [sp, #72]	; 0x48
   3a874:	bic	r1, r1, #3
   3a878:	mov	lr, r1
   3a87c:	sub	r2, r6, r1
   3a880:	mov	r1, ip
   3a884:	vmov.32	d18[0], r4
   3a888:	vmov.32	d20[0], r7
   3a88c:	vorr	d16, d18, d18
   3a890:	vmov.i32	q9, #1	; 0x00000001
   3a894:	vorr	d18, d20, d20
   3a898:	vld1.32	{d20-d21}, [r1], r5
   3a89c:	subs	r9, r9, #4
   3a8a0:	vrev64.32	q12, q10
   3a8a4:	vext.8	q12, q12, q12, #8
   3a8a8:	vext.8	q11, q11, q12, #12
   3a8ac:	vmul.i32	q9, q9, q12
   3a8b0:	vmul.i32	q8, q11, q8
   3a8b4:	vorr	q11, q12, q12
   3a8b8:	bne	3a898 <GetDataSlab+0x673c>
   3a8bc:	vext.8	q11, q9, q8, #8
   3a8c0:	vext.8	q12, q8, q8, #8
   3a8c4:	ldr	r9, [sp, #72]	; 0x48
   3a8c8:	vmul.i32	q0, q9, q11
   3a8cc:	vmul.i32	q1, q8, q12
   3a8d0:	cmp	r9, lr
   3a8d4:	vmul.i32	q8, q0, d0[1]
   3a8d8:	vmul.i32	q9, q1, d2[1]
   3a8dc:	vmov.32	r7, d16[0]
   3a8e0:	vmov.32	r4, d18[0]
   3a8e4:	beq	3a7d4 <GetDataSlab+0x6678>
   3a8e8:	vmov.32	r1, d20[0]
   3a8ec:	mul	r4, r1, r4
   3a8f0:	ldr	r1, [r0, r2, lsl #2]
   3a8f4:	subs	r2, r2, #1
   3a8f8:	mul	r7, r7, r1
   3a8fc:	bne	3a8ec <GetDataSlab+0x6790>
   3a900:	b	3a7d4 <GetDataSlab+0x6678>
   3a904:	ldr	r0, [sl]
   3a908:	mov	r1, #0
   3a90c:	sub	r6, fp, #96	; 0x60
   3a910:	str	r0, [sp, #68]	; 0x44
   3a914:	sub	r0, r0, #1
   3a918:	str	r0, [fp, #-96]	; 0xffffffa0
   3a91c:	ldr	r0, [fp, #8]
   3a920:	ldr	r0, [r0]
   3a924:	str	r0, [sp, #60]	; 0x3c
   3a928:	str	r0, [fp, #-176]	; 0xffffff50
   3a92c:	ldr	r0, [fp, #20]
   3a930:	ldr	r2, [r0]
   3a934:	ldr	r0, [fp, #24]
   3a938:	cmp	r0, #2
   3a93c:	str	r2, [sp, #64]	; 0x40
   3a940:	str	r2, [sp, #76]	; 0x4c
   3a944:	blt	45a24 <GetDataSlab+0x118c8>
   3a948:	ldr	r0, [fp, #8]
   3a94c:	ldr	r3, [sp, #60]	; 0x3c
   3a950:	ldr	r2, [sp, #64]	; 0x40
   3a954:	mov	r5, #1
   3a958:	mov	r8, #0
   3a95c:	mvn	r4, #15
   3a960:	mov	r1, r0
   3a964:	sub	r0, r0, #4
   3a968:	mov	r9, r3
   3a96c:	str	r2, [sp, #76]	; 0x4c
   3a970:	sub	sl, r1, #12
   3a974:	mov	r1, #0
   3a978:	b	3a9c8 <GetDataSlab+0x686c>
   3a97c:	sub	ip, fp, #176	; 0xb0
   3a980:	sub	r6, fp, #96	; 0x60
   3a984:	str	r3, [ip, r5, lsl #2]
   3a988:	ldr	r7, [sp, #76]	; 0x4c
   3a98c:	add	sl, sl, #4
   3a990:	str	r2, [r6, r5, lsl #2]
   3a994:	ldr	r2, [fp, #12]
   3a998:	ldr	r2, [r2, r5, lsl #2]
   3a99c:	mla	r1, r2, r9, r1
   3a9a0:	ldr	r2, [fp, #20]
   3a9a4:	mov	r9, r3
   3a9a8:	mov	r3, lr
   3a9ac:	ldr	r2, [r2, r5, lsl #2]
   3a9b0:	add	r5, r5, #1
   3a9b4:	mul	r7, r2, r7
   3a9b8:	ldr	r2, [fp, #24]
   3a9bc:	str	r7, [sp, #76]	; 0x4c
   3a9c0:	cmp	r5, r2
   3a9c4:	beq	45a24 <GetDataSlab+0x118c8>
   3a9c8:	ldr	r2, [fp, #16]
   3a9cc:	ldr	r7, [fp, #8]
   3a9d0:	add	r8, r8, #1
   3a9d4:	cmp	r8, #4
   3a9d8:	ldr	r2, [r2, r5, lsl #2]
   3a9dc:	str	r3, [ip, r5, lsl #2]
   3a9e0:	sub	r2, r2, #1
   3a9e4:	str	r2, [r6, r5, lsl #2]
   3a9e8:	ldr	lr, [r7, r5, lsl #2]
   3a9ec:	bcs	3a9fc <GetDataSlab+0x68a0>
   3a9f0:	mov	r7, lr
   3a9f4:	mov	r6, r5
   3a9f8:	b	3aa84 <GetDataSlab+0x6928>
   3a9fc:	vmov.i32	q9, #1	; 0x00000001
   3aa00:	vmov.i32	q10, #1	; 0x00000001
   3aa04:	vmov.32	d23[1], lr
   3aa08:	vmov.i32	q8, #1	; 0x00000001
   3aa0c:	bic	r7, r8, #3
   3aa10:	bic	ip, r5, #3
   3aa14:	sub	r6, r5, r7
   3aa18:	vmov.32	d18[0], r3
   3aa1c:	vmov.32	d20[0], r2
   3aa20:	mov	r2, sl
   3aa24:	vorr	d16, d18, d18
   3aa28:	vmov.i32	q9, #1	; 0x00000001
   3aa2c:	vorr	d18, d20, d20
   3aa30:	vld1.32	{d20-d21}, [r2], r4
   3aa34:	subs	ip, ip, #4
   3aa38:	vrev64.32	q12, q10
   3aa3c:	vext.8	q12, q12, q12, #8
   3aa40:	vext.8	q11, q11, q12, #12
   3aa44:	vmul.i32	q9, q9, q12
   3aa48:	vmul.i32	q8, q11, q8
   3aa4c:	vorr	q11, q12, q12
   3aa50:	bne	3aa30 <GetDataSlab+0x68d4>
   3aa54:	vext.8	q11, q9, q8, #8
   3aa58:	vext.8	q12, q8, q8, #8
   3aa5c:	cmp	r8, r7
   3aa60:	vmul.i32	q0, q9, q11
   3aa64:	vmul.i32	q1, q8, q12
   3aa68:	vmul.i32	q8, q0, d0[1]
   3aa6c:	vmul.i32	q9, q1, d2[1]
   3aa70:	vmov.32	r2, d16[0]
   3aa74:	vmov.32	r3, d18[0]
   3aa78:	beq	3a97c <GetDataSlab+0x6820>
   3aa7c:	vmov.32	r7, d20[0]
   3aa80:	sub	ip, fp, #176	; 0xb0
   3aa84:	mul	r3, r7, r3
   3aa88:	ldr	r7, [r0, r6, lsl #2]
   3aa8c:	subs	r6, r6, #1
   3aa90:	mul	r2, r2, r7
   3aa94:	bne	3aa84 <GetDataSlab+0x6928>
   3aa98:	b	3a980 <GetDataSlab+0x6824>
   3aa9c:	ldr	r0, [sl]
   3aaa0:	mov	r1, #0
   3aaa4:	sub	r6, fp, #96	; 0x60
   3aaa8:	str	r0, [sp, #68]	; 0x44
   3aaac:	sub	r0, r0, #1
   3aab0:	str	r0, [fp, #-96]	; 0xffffffa0
   3aab4:	ldr	r0, [fp, #8]
   3aab8:	ldr	r0, [r0]
   3aabc:	str	r0, [sp, #60]	; 0x3c
   3aac0:	str	r0, [fp, #-176]	; 0xffffff50
   3aac4:	ldr	r0, [fp, #20]
   3aac8:	ldr	r2, [r0]
   3aacc:	ldr	r0, [fp, #24]
   3aad0:	cmp	r0, #2
   3aad4:	str	r2, [sp, #64]	; 0x40
   3aad8:	str	r2, [sp, #76]	; 0x4c
   3aadc:	blt	45d24 <GetDataSlab+0x11bc8>
   3aae0:	ldr	r0, [fp, #8]
   3aae4:	ldr	r3, [sp, #60]	; 0x3c
   3aae8:	ldr	r2, [sp, #64]	; 0x40
   3aaec:	mov	r5, #1
   3aaf0:	mov	r8, #0
   3aaf4:	mvn	r4, #15
   3aaf8:	mov	r1, r0
   3aafc:	sub	r0, r0, #4
   3ab00:	mov	r9, r3
   3ab04:	str	r2, [sp, #76]	; 0x4c
   3ab08:	sub	sl, r1, #12
   3ab0c:	mov	r1, #0
   3ab10:	b	3ab60 <GetDataSlab+0x6a04>
   3ab14:	sub	ip, fp, #176	; 0xb0
   3ab18:	sub	r6, fp, #96	; 0x60
   3ab1c:	str	r3, [ip, r5, lsl #2]
   3ab20:	ldr	r7, [sp, #76]	; 0x4c
   3ab24:	add	sl, sl, #4
   3ab28:	str	r2, [r6, r5, lsl #2]
   3ab2c:	ldr	r2, [fp, #12]
   3ab30:	ldr	r2, [r2, r5, lsl #2]
   3ab34:	mla	r1, r2, r9, r1
   3ab38:	ldr	r2, [fp, #20]
   3ab3c:	mov	r9, r3
   3ab40:	mov	r3, lr
   3ab44:	ldr	r2, [r2, r5, lsl #2]
   3ab48:	add	r5, r5, #1
   3ab4c:	mul	r7, r2, r7
   3ab50:	ldr	r2, [fp, #24]
   3ab54:	str	r7, [sp, #76]	; 0x4c
   3ab58:	cmp	r5, r2
   3ab5c:	beq	45d24 <GetDataSlab+0x11bc8>
   3ab60:	ldr	r2, [fp, #16]
   3ab64:	ldr	r7, [fp, #8]
   3ab68:	add	r8, r8, #1
   3ab6c:	cmp	r8, #4
   3ab70:	ldr	r2, [r2, r5, lsl #2]
   3ab74:	str	r3, [ip, r5, lsl #2]
   3ab78:	sub	r2, r2, #1
   3ab7c:	str	r2, [r6, r5, lsl #2]
   3ab80:	ldr	lr, [r7, r5, lsl #2]
   3ab84:	bcs	3ab94 <GetDataSlab+0x6a38>
   3ab88:	mov	r7, lr
   3ab8c:	mov	r6, r5
   3ab90:	b	3ac1c <GetDataSlab+0x6ac0>
   3ab94:	vmov.i32	q9, #1	; 0x00000001
   3ab98:	vmov.i32	q10, #1	; 0x00000001
   3ab9c:	vmov.32	d23[1], lr
   3aba0:	vmov.i32	q8, #1	; 0x00000001
   3aba4:	bic	r7, r8, #3
   3aba8:	bic	ip, r5, #3
   3abac:	sub	r6, r5, r7
   3abb0:	vmov.32	d18[0], r3
   3abb4:	vmov.32	d20[0], r2
   3abb8:	mov	r2, sl
   3abbc:	vorr	d16, d18, d18
   3abc0:	vmov.i32	q9, #1	; 0x00000001
   3abc4:	vorr	d18, d20, d20
   3abc8:	vld1.32	{d20-d21}, [r2], r4
   3abcc:	subs	ip, ip, #4
   3abd0:	vrev64.32	q12, q10
   3abd4:	vext.8	q12, q12, q12, #8
   3abd8:	vext.8	q11, q11, q12, #12
   3abdc:	vmul.i32	q9, q9, q12
   3abe0:	vmul.i32	q8, q11, q8
   3abe4:	vorr	q11, q12, q12
   3abe8:	bne	3abc8 <GetDataSlab+0x6a6c>
   3abec:	vext.8	q11, q9, q8, #8
   3abf0:	vext.8	q12, q8, q8, #8
   3abf4:	cmp	r8, r7
   3abf8:	vmul.i32	q0, q9, q11
   3abfc:	vmul.i32	q1, q8, q12
   3ac00:	vmul.i32	q8, q0, d0[1]
   3ac04:	vmul.i32	q9, q1, d2[1]
   3ac08:	vmov.32	r2, d16[0]
   3ac0c:	vmov.32	r3, d18[0]
   3ac10:	beq	3ab14 <GetDataSlab+0x69b8>
   3ac14:	vmov.32	r7, d20[0]
   3ac18:	sub	ip, fp, #176	; 0xb0
   3ac1c:	mul	r3, r7, r3
   3ac20:	ldr	r7, [r0, r6, lsl #2]
   3ac24:	subs	r6, r6, #1
   3ac28:	mul	r2, r2, r7
   3ac2c:	bne	3ac1c <GetDataSlab+0x6ac0>
   3ac30:	b	3ab18 <GetDataSlab+0x69bc>
   3ac34:	ldr	r0, [sl]
   3ac38:	mov	r3, #0
   3ac3c:	sub	lr, fp, #96	; 0x60
   3ac40:	str	r0, [sp, #56]	; 0x38
   3ac44:	sub	r0, r0, #1
   3ac48:	str	r0, [fp, #-96]	; 0xffffffa0
   3ac4c:	ldr	r0, [fp, #8]
   3ac50:	ldr	r0, [r0]
   3ac54:	str	r0, [sp, #60]	; 0x3c
   3ac58:	str	r0, [fp, #-176]	; 0xffffff50
   3ac5c:	ldr	r0, [fp, #20]
   3ac60:	ldr	r1, [r0]
   3ac64:	ldr	r0, [fp, #24]
   3ac68:	cmp	r0, #2
   3ac6c:	str	r1, [sp, #72]	; 0x48
   3ac70:	str	r1, [sp, #76]	; 0x4c
   3ac74:	blt	46024 <GetDataSlab+0x11ec8>
   3ac78:	ldr	r0, [fp, #8]
   3ac7c:	ldr	r5, [sp, #60]	; 0x3c
   3ac80:	mov	r7, #1
   3ac84:	mvn	r9, #15
   3ac88:	mov	r3, #0
   3ac8c:	mov	r1, r0
   3ac90:	sub	r0, r0, #4
   3ac94:	mov	r4, r5
   3ac98:	sub	sl, r1, #12
   3ac9c:	mov	r1, #0
   3aca0:	str	r1, [sp, #84]	; 0x54
   3aca4:	ldr	r1, [sp, #72]	; 0x48
   3aca8:	str	r1, [sp, #76]	; 0x4c
   3acac:	b	3ad0c <GetDataSlab+0x6bb0>
   3acb0:	ldr	r8, [sp, #88]	; 0x58
   3acb4:	sub	r1, fp, #176	; 0xb0
   3acb8:	sub	lr, fp, #96	; 0x60
   3acbc:	add	sl, sl, #4
   3acc0:	mov	r2, r1
   3acc4:	str	r5, [r1, r7, lsl #2]
   3acc8:	ldr	r1, [fp, #12]
   3accc:	str	r4, [lr, r7, lsl #2]
   3acd0:	ldr	r4, [sp, #68]	; 0x44
   3acd4:	ldr	r1, [r1, r7, lsl #2]
   3acd8:	mla	r3, r1, r4, r3
   3acdc:	ldr	r1, [fp, #20]
   3ace0:	ldr	r4, [sp, #76]	; 0x4c
   3ace4:	ldr	r1, [r1, r7, lsl #2]
   3ace8:	add	r7, r7, #1
   3acec:	mul	r4, r1, r4
   3acf0:	ldr	r1, [fp, #24]
   3acf4:	str	r4, [sp, #76]	; 0x4c
   3acf8:	mov	r4, r5
   3acfc:	mov	r5, ip
   3ad00:	mov	ip, r2
   3ad04:	cmp	r7, r1
   3ad08:	beq	46024 <GetDataSlab+0x11ec8>
   3ad0c:	ldr	r1, [fp, #16]
   3ad10:	str	r4, [sp, #68]	; 0x44
   3ad14:	ldr	r6, [sp, #84]	; 0x54
   3ad18:	ldr	r1, [r1, r7, lsl #2]
   3ad1c:	str	r5, [ip, r7, lsl #2]
   3ad20:	add	r6, r6, #1
   3ad24:	cmp	r6, #4
   3ad28:	str	r6, [sp, #84]	; 0x54
   3ad2c:	sub	r4, r1, #1
   3ad30:	ldr	r1, [fp, #8]
   3ad34:	str	r4, [lr, r7, lsl #2]
   3ad38:	ldr	ip, [r1, r7, lsl #2]
   3ad3c:	bcs	3ad4c <GetDataSlab+0x6bf0>
   3ad40:	mov	r1, ip
   3ad44:	mov	r2, r7
   3ad48:	b	3add4 <GetDataSlab+0x6c78>
   3ad4c:	vmov.i32	q9, #1	; 0x00000001
   3ad50:	vmov.i32	q10, #1	; 0x00000001
   3ad54:	vmov.32	d23[1], ip
   3ad58:	vmov.i32	q8, #1	; 0x00000001
   3ad5c:	bic	r1, r6, #3
   3ad60:	bic	r8, r7, #3
   3ad64:	sub	r2, r7, r1
   3ad68:	vmov.32	d18[0], r5
   3ad6c:	vmov.32	d20[0], r4
   3ad70:	mov	r4, sl
   3ad74:	vorr	d16, d18, d18
   3ad78:	vmov.i32	q9, #1	; 0x00000001
   3ad7c:	vorr	d18, d20, d20
   3ad80:	vld1.32	{d20-d21}, [r4], r9
   3ad84:	subs	r8, r8, #4
   3ad88:	vrev64.32	q12, q10
   3ad8c:	vext.8	q12, q12, q12, #8
   3ad90:	vext.8	q11, q11, q12, #12
   3ad94:	vmul.i32	q9, q9, q12
   3ad98:	vmul.i32	q8, q11, q8
   3ad9c:	vorr	q11, q12, q12
   3ada0:	bne	3ad80 <GetDataSlab+0x6c24>
   3ada4:	vext.8	q11, q9, q8, #8
   3ada8:	vext.8	q12, q8, q8, #8
   3adac:	cmp	r6, r1
   3adb0:	vmul.i32	q0, q9, q11
   3adb4:	vmul.i32	q1, q8, q12
   3adb8:	vmul.i32	q8, q0, d0[1]
   3adbc:	vmul.i32	q9, q1, d2[1]
   3adc0:	vmov.32	r4, d16[0]
   3adc4:	vmov.32	r5, d18[0]
   3adc8:	beq	3acb0 <GetDataSlab+0x6b54>
   3adcc:	vmov.32	r1, d20[0]
   3add0:	ldr	r8, [sp, #88]	; 0x58
   3add4:	mul	r5, r1, r5
   3add8:	ldr	r1, [r0, r2, lsl #2]
   3addc:	subs	r2, r2, #1
   3ade0:	mul	r4, r4, r1
   3ade4:	bne	3add4 <GetDataSlab+0x6c78>
   3ade8:	b	3acb4 <GetDataSlab+0x6b58>
   3adec:	ldr	r0, [sl]
   3adf0:	mov	r3, #0
   3adf4:	sub	lr, fp, #96	; 0x60
   3adf8:	str	r0, [sp, #56]	; 0x38
   3adfc:	sub	r0, r0, #1
   3ae00:	str	r0, [fp, #-96]	; 0xffffffa0
   3ae04:	ldr	r0, [fp, #8]
   3ae08:	ldr	r0, [r0]
   3ae0c:	str	r0, [sp, #60]	; 0x3c
   3ae10:	str	r0, [fp, #-176]	; 0xffffff50
   3ae14:	ldr	r0, [fp, #20]
   3ae18:	ldr	r1, [r0]
   3ae1c:	ldr	r0, [fp, #24]
   3ae20:	cmp	r0, #2
   3ae24:	str	r1, [sp, #72]	; 0x48
   3ae28:	str	r1, [sp, #76]	; 0x4c
   3ae2c:	blt	462b4 <GetDataSlab+0x12158>
   3ae30:	ldr	r0, [fp, #8]
   3ae34:	ldr	r5, [sp, #60]	; 0x3c
   3ae38:	mov	r7, #1
   3ae3c:	mvn	r9, #15
   3ae40:	mov	r3, #0
   3ae44:	mov	r1, r0
   3ae48:	sub	r0, r0, #4
   3ae4c:	mov	r4, r5
   3ae50:	sub	sl, r1, #12
   3ae54:	mov	r1, #0
   3ae58:	str	r1, [sp, #84]	; 0x54
   3ae5c:	ldr	r1, [sp, #72]	; 0x48
   3ae60:	str	r1, [sp, #76]	; 0x4c
   3ae64:	b	3aec4 <GetDataSlab+0x6d68>
   3ae68:	ldr	r8, [sp, #88]	; 0x58
   3ae6c:	sub	r1, fp, #176	; 0xb0
   3ae70:	sub	lr, fp, #96	; 0x60
   3ae74:	add	sl, sl, #4
   3ae78:	mov	r2, r1
   3ae7c:	str	r5, [r1, r7, lsl #2]
   3ae80:	ldr	r1, [fp, #12]
   3ae84:	str	r4, [lr, r7, lsl #2]
   3ae88:	ldr	r4, [sp, #68]	; 0x44
   3ae8c:	ldr	r1, [r1, r7, lsl #2]
   3ae90:	mla	r3, r1, r4, r3
   3ae94:	ldr	r1, [fp, #20]
   3ae98:	ldr	r4, [sp, #76]	; 0x4c
   3ae9c:	ldr	r1, [r1, r7, lsl #2]
   3aea0:	add	r7, r7, #1
   3aea4:	mul	r4, r1, r4
   3aea8:	ldr	r1, [fp, #24]
   3aeac:	str	r4, [sp, #76]	; 0x4c
   3aeb0:	mov	r4, r5
   3aeb4:	mov	r5, ip
   3aeb8:	mov	ip, r2
   3aebc:	cmp	r7, r1
   3aec0:	beq	462b4 <GetDataSlab+0x12158>
   3aec4:	ldr	r1, [fp, #16]
   3aec8:	str	r4, [sp, #68]	; 0x44
   3aecc:	ldr	r6, [sp, #84]	; 0x54
   3aed0:	ldr	r1, [r1, r7, lsl #2]
   3aed4:	str	r5, [ip, r7, lsl #2]
   3aed8:	add	r6, r6, #1
   3aedc:	cmp	r6, #4
   3aee0:	str	r6, [sp, #84]	; 0x54
   3aee4:	sub	r4, r1, #1
   3aee8:	ldr	r1, [fp, #8]
   3aeec:	str	r4, [lr, r7, lsl #2]
   3aef0:	ldr	ip, [r1, r7, lsl #2]
   3aef4:	bcs	3af04 <GetDataSlab+0x6da8>
   3aef8:	mov	r1, ip
   3aefc:	mov	r2, r7
   3af00:	b	3af8c <GetDataSlab+0x6e30>
   3af04:	vmov.i32	q9, #1	; 0x00000001
   3af08:	vmov.i32	q10, #1	; 0x00000001
   3af0c:	vmov.32	d23[1], ip
   3af10:	vmov.i32	q8, #1	; 0x00000001
   3af14:	bic	r1, r6, #3
   3af18:	bic	r8, r7, #3
   3af1c:	sub	r2, r7, r1
   3af20:	vmov.32	d18[0], r5
   3af24:	vmov.32	d20[0], r4
   3af28:	mov	r4, sl
   3af2c:	vorr	d16, d18, d18
   3af30:	vmov.i32	q9, #1	; 0x00000001
   3af34:	vorr	d18, d20, d20
   3af38:	vld1.32	{d20-d21}, [r4], r9
   3af3c:	subs	r8, r8, #4
   3af40:	vrev64.32	q12, q10
   3af44:	vext.8	q12, q12, q12, #8
   3af48:	vext.8	q11, q11, q12, #12
   3af4c:	vmul.i32	q9, q9, q12
   3af50:	vmul.i32	q8, q11, q8
   3af54:	vorr	q11, q12, q12
   3af58:	bne	3af38 <GetDataSlab+0x6ddc>
   3af5c:	vext.8	q11, q9, q8, #8
   3af60:	vext.8	q12, q8, q8, #8
   3af64:	cmp	r6, r1
   3af68:	vmul.i32	q0, q9, q11
   3af6c:	vmul.i32	q1, q8, q12
   3af70:	vmul.i32	q8, q0, d0[1]
   3af74:	vmul.i32	q9, q1, d2[1]
   3af78:	vmov.32	r4, d16[0]
   3af7c:	vmov.32	r5, d18[0]
   3af80:	beq	3ae68 <GetDataSlab+0x6d0c>
   3af84:	vmov.32	r1, d20[0]
   3af88:	ldr	r8, [sp, #88]	; 0x58
   3af8c:	mul	r5, r1, r5
   3af90:	ldr	r1, [r0, r2, lsl #2]
   3af94:	subs	r2, r2, #1
   3af98:	mul	r4, r4, r1
   3af9c:	bne	3af8c <GetDataSlab+0x6e30>
   3afa0:	b	3ae6c <GetDataSlab+0x6d10>
   3afa4:	ldr	r0, [sl]
   3afa8:	mov	r1, #0
   3afac:	sub	lr, fp, #96	; 0x60
   3afb0:	str	r0, [sp, #40]	; 0x28
   3afb4:	sub	r0, r0, #1
   3afb8:	str	r0, [fp, #-96]	; 0xffffffa0
   3afbc:	ldr	r0, [fp, #8]
   3afc0:	ldr	r0, [r0]
   3afc4:	str	r0, [sp, #60]	; 0x3c
   3afc8:	str	r0, [fp, #-176]	; 0xffffff50
   3afcc:	ldr	r0, [fp, #20]
   3afd0:	ldr	r2, [r0]
   3afd4:	ldr	r0, [fp, #24]
   3afd8:	cmp	r0, #2
   3afdc:	str	r2, [sp, #64]	; 0x40
   3afe0:	str	r2, [sp, #76]	; 0x4c
   3afe4:	blt	46544 <GetDataSlab+0x123e8>
   3afe8:	ldr	r0, [fp, #8]
   3afec:	ldr	r3, [sp, #60]	; 0x3c
   3aff0:	ldr	r2, [sp, #64]	; 0x40
   3aff4:	mov	r6, #1
   3aff8:	mov	r9, #0
   3affc:	mvn	r5, #15
   3b000:	mov	r1, r0
   3b004:	sub	r0, r0, #4
   3b008:	mov	r8, r3
   3b00c:	str	r2, [sp, #76]	; 0x4c
   3b010:	sub	sl, r1, #12
   3b014:	mov	r1, #0
   3b018:	b	3b070 <GetDataSlab+0x6f14>
   3b01c:	sub	r2, fp, #176	; 0xb0
   3b020:	sub	lr, fp, #96	; 0x60
   3b024:	add	sl, sl, #4
   3b028:	mov	r7, r2
   3b02c:	str	r3, [r2, r6, lsl #2]
   3b030:	ldr	r2, [fp, #12]
   3b034:	str	r4, [lr, r6, lsl #2]
   3b038:	ldr	r4, [sp, #76]	; 0x4c
   3b03c:	ldr	r2, [r2, r6, lsl #2]
   3b040:	mla	r1, r2, r8, r1
   3b044:	ldr	r2, [fp, #20]
   3b048:	mov	r8, r3
   3b04c:	mov	r3, ip
   3b050:	mov	ip, r7
   3b054:	ldr	r2, [r2, r6, lsl #2]
   3b058:	add	r6, r6, #1
   3b05c:	mul	r4, r2, r4
   3b060:	ldr	r2, [fp, #24]
   3b064:	str	r4, [sp, #76]	; 0x4c
   3b068:	cmp	r6, r2
   3b06c:	beq	46544 <GetDataSlab+0x123e8>
   3b070:	ldr	r2, [fp, #16]
   3b074:	add	r9, r9, #1
   3b078:	cmp	r9, #4
   3b07c:	ldr	r2, [r2, r6, lsl #2]
   3b080:	str	r3, [ip, r6, lsl #2]
   3b084:	sub	r4, r2, #1
   3b088:	ldr	r2, [fp, #8]
   3b08c:	str	r4, [lr, r6, lsl #2]
   3b090:	ldr	ip, [r2, r6, lsl #2]
   3b094:	bcs	3b0a4 <GetDataSlab+0x6f48>
   3b098:	mov	r2, ip
   3b09c:	mov	r7, r6
   3b0a0:	b	3b130 <GetDataSlab+0x6fd4>
   3b0a4:	vmov.i32	q9, #1	; 0x00000001
   3b0a8:	vmov.i32	q10, #1	; 0x00000001
   3b0ac:	vmov.32	d23[1], ip
   3b0b0:	vmov.i32	q8, #1	; 0x00000001
   3b0b4:	mov	lr, r9
   3b0b8:	bic	r9, r9, #3
   3b0bc:	bic	r2, r6, #3
   3b0c0:	sub	r7, r6, r9
   3b0c4:	vmov.32	d18[0], r3
   3b0c8:	vmov.32	d20[0], r4
   3b0cc:	mov	r3, sl
   3b0d0:	vorr	d16, d18, d18
   3b0d4:	vmov.i32	q9, #1	; 0x00000001
   3b0d8:	vorr	d18, d20, d20
   3b0dc:	vld1.32	{d20-d21}, [r3], r5
   3b0e0:	subs	r2, r2, #4
   3b0e4:	vrev64.32	q12, q10
   3b0e8:	vext.8	q12, q12, q12, #8
   3b0ec:	vext.8	q11, q11, q12, #12
   3b0f0:	vmul.i32	q9, q9, q12
   3b0f4:	vmul.i32	q8, q11, q8
   3b0f8:	vorr	q11, q12, q12
   3b0fc:	bne	3b0dc <GetDataSlab+0x6f80>
   3b100:	vext.8	q11, q9, q8, #8
   3b104:	vext.8	q12, q8, q8, #8
   3b108:	cmp	lr, r9
   3b10c:	mov	r9, lr
   3b110:	vmul.i32	q0, q9, q11
   3b114:	vmul.i32	q1, q8, q12
   3b118:	vmul.i32	q8, q0, d0[1]
   3b11c:	vmul.i32	q9, q1, d2[1]
   3b120:	vmov.32	r4, d16[0]
   3b124:	vmov.32	r3, d18[0]
   3b128:	beq	3b01c <GetDataSlab+0x6ec0>
   3b12c:	vmov.32	r2, d20[0]
   3b130:	mul	r3, r2, r3
   3b134:	ldr	r2, [r0, r7, lsl #2]
   3b138:	subs	r7, r7, #1
   3b13c:	mul	r4, r4, r2
   3b140:	bne	3b130 <GetDataSlab+0x6fd4>
   3b144:	b	3b01c <GetDataSlab+0x6ec0>
   3b148:	ldr	r0, [sl]
   3b14c:	mov	r1, #0
   3b150:	sub	lr, fp, #96	; 0x60
   3b154:	str	r0, [sp, #40]	; 0x28
   3b158:	sub	r0, r0, #1
   3b15c:	str	r0, [fp, #-96]	; 0xffffffa0
   3b160:	ldr	r0, [fp, #8]
   3b164:	ldr	r0, [r0]
   3b168:	str	r0, [sp, #72]	; 0x48
   3b16c:	str	r0, [fp, #-176]	; 0xffffff50
   3b170:	ldr	r0, [fp, #20]
   3b174:	ldr	r2, [r0]
   3b178:	ldr	r0, [fp, #24]
   3b17c:	cmp	r0, #2
   3b180:	str	r2, [sp, #64]	; 0x40
   3b184:	str	r2, [sp, #76]	; 0x4c
   3b188:	blt	467e8 <GetDataSlab+0x1268c>
   3b18c:	ldr	r0, [fp, #8]
   3b190:	ldr	r3, [sp, #72]	; 0x48
   3b194:	ldr	r2, [sp, #64]	; 0x40
   3b198:	mov	r6, #1
   3b19c:	mov	r9, #0
   3b1a0:	mvn	r5, #15
   3b1a4:	mov	r1, r0
   3b1a8:	sub	r0, r0, #4
   3b1ac:	mov	r8, r3
   3b1b0:	str	r2, [sp, #76]	; 0x4c
   3b1b4:	sub	sl, r1, #12
   3b1b8:	mov	r1, #0
   3b1bc:	b	3b214 <GetDataSlab+0x70b8>
   3b1c0:	sub	r2, fp, #176	; 0xb0
   3b1c4:	sub	lr, fp, #96	; 0x60
   3b1c8:	add	sl, sl, #4
   3b1cc:	mov	r7, r2
   3b1d0:	str	r3, [r2, r6, lsl #2]
   3b1d4:	ldr	r2, [fp, #12]
   3b1d8:	str	r4, [lr, r6, lsl #2]
   3b1dc:	ldr	r4, [sp, #76]	; 0x4c
   3b1e0:	ldr	r2, [r2, r6, lsl #2]
   3b1e4:	mla	r1, r2, r8, r1
   3b1e8:	ldr	r2, [fp, #20]
   3b1ec:	mov	r8, r3
   3b1f0:	mov	r3, ip
   3b1f4:	mov	ip, r7
   3b1f8:	ldr	r2, [r2, r6, lsl #2]
   3b1fc:	add	r6, r6, #1
   3b200:	mul	r4, r2, r4
   3b204:	ldr	r2, [fp, #24]
   3b208:	str	r4, [sp, #76]	; 0x4c
   3b20c:	cmp	r6, r2
   3b210:	beq	467e8 <GetDataSlab+0x1268c>
   3b214:	ldr	r2, [fp, #16]
   3b218:	add	r9, r9, #1
   3b21c:	cmp	r9, #4
   3b220:	ldr	r2, [r2, r6, lsl #2]
   3b224:	str	r3, [ip, r6, lsl #2]
   3b228:	sub	r4, r2, #1
   3b22c:	ldr	r2, [fp, #8]
   3b230:	str	r4, [lr, r6, lsl #2]
   3b234:	ldr	ip, [r2, r6, lsl #2]
   3b238:	bcs	3b248 <GetDataSlab+0x70ec>
   3b23c:	mov	r2, ip
   3b240:	mov	r7, r6
   3b244:	b	3b2d8 <GetDataSlab+0x717c>
   3b248:	vmov.i32	q9, #1	; 0x00000001
   3b24c:	vmov.i32	q10, #1	; 0x00000001
   3b250:	vmov.32	d23[1], ip
   3b254:	mov	r2, r9
   3b258:	vmov.i32	q8, #1	; 0x00000001
   3b25c:	bic	r9, r6, #3
   3b260:	mov	lr, r2
   3b264:	bic	r2, r2, #3
   3b268:	sub	r7, r6, r2
   3b26c:	vmov.32	d18[0], r3
   3b270:	vmov.32	d20[0], r4
   3b274:	mov	r3, sl
   3b278:	vorr	d16, d18, d18
   3b27c:	vmov.i32	q9, #1	; 0x00000001
   3b280:	vorr	d18, d20, d20
   3b284:	vld1.32	{d20-d21}, [r3], r5
   3b288:	subs	r9, r9, #4
   3b28c:	vrev64.32	q12, q10
   3b290:	vext.8	q12, q12, q12, #8
   3b294:	vext.8	q11, q11, q12, #12
   3b298:	vmul.i32	q9, q9, q12
   3b29c:	vmul.i32	q8, q11, q8
   3b2a0:	vorr	q11, q12, q12
   3b2a4:	bne	3b284 <GetDataSlab+0x7128>
   3b2a8:	vext.8	q11, q9, q8, #8
   3b2ac:	vext.8	q12, q8, q8, #8
   3b2b0:	mov	r9, lr
   3b2b4:	cmp	lr, r2
   3b2b8:	vmul.i32	q0, q9, q11
   3b2bc:	vmul.i32	q1, q8, q12
   3b2c0:	vmul.i32	q8, q0, d0[1]
   3b2c4:	vmul.i32	q9, q1, d2[1]
   3b2c8:	vmov.32	r4, d16[0]
   3b2cc:	vmov.32	r3, d18[0]
   3b2d0:	beq	3b1c0 <GetDataSlab+0x7064>
   3b2d4:	vmov.32	r2, d20[0]
   3b2d8:	mul	r3, r2, r3
   3b2dc:	ldr	r2, [r0, r7, lsl #2]
   3b2e0:	subs	r7, r7, #1
   3b2e4:	mul	r4, r4, r2
   3b2e8:	bne	3b2d8 <GetDataSlab+0x717c>
   3b2ec:	b	3b1c0 <GetDataSlab+0x7064>
   3b2f0:	ldr	r0, [sl]
   3b2f4:	mov	r1, #0
   3b2f8:	sub	r7, fp, #96	; 0x60
   3b2fc:	str	r0, [sp, #60]	; 0x3c
   3b300:	sub	r0, r0, #1
   3b304:	str	r0, [fp, #-96]	; 0xffffffa0
   3b308:	ldr	r0, [fp, #8]
   3b30c:	ldr	r0, [r0]
   3b310:	str	r0, [sp, #44]	; 0x2c
   3b314:	str	r0, [fp, #-176]	; 0xffffff50
   3b318:	ldr	r0, [fp, #20]
   3b31c:	ldr	r2, [r0]
   3b320:	ldr	r0, [fp, #24]
   3b324:	cmp	r0, #2
   3b328:	str	r2, [sp, #56]	; 0x38
   3b32c:	str	r2, [sp, #68]	; 0x44
   3b330:	blt	469f0 <GetDataSlab+0x12894>
   3b334:	ldr	r0, [fp, #8]
   3b338:	ldr	r2, [sp, #44]	; 0x2c
   3b33c:	mov	r5, #1
   3b340:	mov	r4, #0
   3b344:	mvn	lr, #15
   3b348:	mov	r1, #0
   3b34c:	sub	r3, r0, #4
   3b350:	sub	sl, r0, #12
   3b354:	ldr	r0, [sp, #56]	; 0x38
   3b358:	mov	r9, r2
   3b35c:	str	r0, [sp, #68]	; 0x44
   3b360:	b	3b3bc <GetDataSlab+0x7260>
   3b364:	ldr	r8, [sp, #88]	; 0x58
   3b368:	mov	r4, r7
   3b36c:	sub	r7, fp, #96	; 0x60
   3b370:	sub	ip, fp, #176	; 0xb0
   3b374:	ldr	r6, [sp, #68]	; 0x44
   3b378:	add	sl, sl, #4
   3b37c:	str	r0, [r7, r5, lsl #2]
   3b380:	ldr	r0, [fp, #12]
   3b384:	str	r2, [ip, r5, lsl #2]
   3b388:	ldr	r0, [r0, r5, lsl #2]
   3b38c:	mla	r1, r0, r9, r1
   3b390:	ldr	r0, [fp, #20]
   3b394:	mov	r9, r2
   3b398:	mov	r2, r4
   3b39c:	ldr	r4, [sp, #76]	; 0x4c
   3b3a0:	ldr	r0, [r0, r5, lsl #2]
   3b3a4:	add	r5, r5, #1
   3b3a8:	mul	r6, r0, r6
   3b3ac:	ldr	r0, [fp, #24]
   3b3b0:	str	r6, [sp, #68]	; 0x44
   3b3b4:	cmp	r5, r0
   3b3b8:	beq	469f0 <GetDataSlab+0x12894>
   3b3bc:	ldr	r0, [fp, #16]
   3b3c0:	add	r4, r4, #1
   3b3c4:	cmp	r4, #4
   3b3c8:	str	r4, [sp, #76]	; 0x4c
   3b3cc:	ldr	r0, [r0, r5, lsl #2]
   3b3d0:	str	r2, [ip, r5, lsl #2]
   3b3d4:	sub	r0, r0, #1
   3b3d8:	str	r0, [r7, r5, lsl #2]
   3b3dc:	ldr	r7, [fp, #8]
   3b3e0:	ldr	r7, [r7, r5, lsl #2]
   3b3e4:	bcs	3b3f4 <GetDataSlab+0x7298>
   3b3e8:	mov	r4, r7
   3b3ec:	mov	r6, r5
   3b3f0:	b	3b480 <GetDataSlab+0x7324>
   3b3f4:	vmov.i32	q9, #1	; 0x00000001
   3b3f8:	vmov.i32	q10, #1	; 0x00000001
   3b3fc:	vmov.32	d23[1], r7
   3b400:	vmov.i32	q8, #1	; 0x00000001
   3b404:	bic	ip, r4, #3
   3b408:	bic	r8, r5, #3
   3b40c:	sub	r6, r5, ip
   3b410:	vmov.32	d18[0], r2
   3b414:	vmov.32	d20[0], r0
   3b418:	mov	r0, sl
   3b41c:	vorr	d16, d18, d18
   3b420:	vmov.i32	q9, #1	; 0x00000001
   3b424:	vorr	d18, d20, d20
   3b428:	vld1.32	{d20-d21}, [r0], lr
   3b42c:	subs	r8, r8, #4
   3b430:	vrev64.32	q12, q10
   3b434:	vext.8	q12, q12, q12, #8
   3b438:	vext.8	q11, q11, q12, #12
   3b43c:	vmul.i32	q9, q9, q12
   3b440:	vmul.i32	q8, q11, q8
   3b444:	vorr	q11, q12, q12
   3b448:	bne	3b428 <GetDataSlab+0x72cc>
   3b44c:	vext.8	q11, q9, q8, #8
   3b450:	vext.8	q12, q8, q8, #8
   3b454:	cmp	r4, ip
   3b458:	vmul.i32	q0, q9, q11
   3b45c:	vmul.i32	q1, q8, q12
   3b460:	vmul.i32	q8, q0, d0[1]
   3b464:	vmul.i32	q9, q1, d2[1]
   3b468:	vmov.32	r0, d16[0]
   3b46c:	vmov.32	r2, d18[0]
   3b470:	beq	3b364 <GetDataSlab+0x7208>
   3b474:	mov	r4, r7
   3b478:	vmov.32	r7, d20[0]
   3b47c:	ldr	r8, [sp, #88]	; 0x58
   3b480:	mul	r2, r7, r2
   3b484:	ldr	r7, [r3, r6, lsl #2]
   3b488:	subs	r6, r6, #1
   3b48c:	mul	r0, r0, r7
   3b490:	bne	3b480 <GetDataSlab+0x7324>
   3b494:	b	3b36c <GetDataSlab+0x7210>
   3b498:	ldr	r0, [sp, #80]	; 0x50
   3b49c:	cmp	sl, #1
   3b4a0:	add	ip, r0, r3
   3b4a4:	bne	4ca3c <GetDataSlab+0x188e0>
   3b4a8:	ldr	r0, [sp, #76]	; 0x4c
   3b4ac:	ldr	r2, [fp, #12]
   3b4b0:	sub	r7, fp, #96	; 0x60
   3b4b4:	cmp	r0, #1
   3b4b8:	blt	5b69c <GetDataSlab+0x27540>
   3b4bc:	ldr	lr, [sp, #56]	; 0x38
   3b4c0:	mov	r1, #1
   3b4c4:	ldr	r8, [sp, #88]	; 0x58
   3b4c8:	sub	r6, fp, #264	; 0x108
   3b4cc:	sub	r0, lr, #8
   3b4d0:	add	r1, r1, r0, lsr #3
   3b4d4:	lsr	r0, r0, #3
   3b4d8:	str	r0, [sp, #20]
   3b4dc:	mov	r0, #0
   3b4e0:	and	r4, r1, #1
   3b4e4:	str	r0, [sp, #72]	; 0x48
   3b4e8:	sub	r1, r1, r4
   3b4ec:	str	r4, [sp, #28]
   3b4f0:	str	r1, [sp, #12]
   3b4f4:	sub	r1, fp, #136	; 0x88
   3b4f8:	orr	r4, r1, #4
   3b4fc:	ldr	r1, [fp, #20]
   3b500:	add	sl, r1, #4
   3b504:	sub	r1, fp, #176	; 0xb0
   3b508:	orr	r1, r1, #4
   3b50c:	str	sl, [sp, #16]
   3b510:	str	r1, [sp, #84]	; 0x54
   3b514:	add	r1, r2, #4
   3b518:	str	r1, [sp, #80]	; 0x50
   3b51c:	ldr	r1, [fp, #24]
   3b520:	sub	r1, r1, #1
   3b524:	str	r1, [sp, #40]	; 0x28
   3b528:	orr	r1, r7, #4
   3b52c:	str	r1, [sp, #32]
   3b530:	lsl	r1, lr, #1
   3b534:	str	r1, [sp, #64]	; 0x40
   3b538:	and	r1, lr, #1
   3b53c:	str	r1, [sp, #44]	; 0x2c
   3b540:	bic	r1, lr, #7
   3b544:	str	r1, [sp, #24]
   3b548:	mov	r1, #0
   3b54c:	cmp	lr, #1
   3b550:	str	r1, [sp, #68]	; 0x44
   3b554:	bge	3b5a8 <GetDataSlab+0x744c>
   3b558:	b	3b764 <GetDataSlab+0x7608>
   3b55c:	ldr	r0, [sp, #32]
   3b560:	mov	r6, r9
   3b564:	ldr	r0, [r0, r1]
   3b568:	add	ip, ip, r0
   3b56c:	add	r3, r0, r3
   3b570:	ldr	r0, [sp, #64]	; 0x40
   3b574:	ldr	r2, [sp, #72]	; 0x48
   3b578:	ldr	r1, [sp, #68]	; 0x44
   3b57c:	add	r8, r8, r0
   3b580:	ldr	r0, [sp, #76]	; 0x4c
   3b584:	add	r2, r2, lr
   3b588:	add	r1, r1, #1
   3b58c:	str	r2, [sp, #72]	; 0x48
   3b590:	cmp	r2, r0
   3b594:	mov	r2, #0
   3b598:	bge	5b6a0 <GetDataSlab+0x27544>
   3b59c:	cmp	lr, #1
   3b5a0:	str	r1, [sp, #68]	; 0x44
   3b5a4:	blt	3b764 <GetDataSlab+0x7608>
   3b5a8:	ldr	r0, [fp, #12]
   3b5ac:	str	r8, [sp, #60]	; 0x3c
   3b5b0:	mov	r8, lr
   3b5b4:	ldr	r5, [sp, #72]	; 0x48
   3b5b8:	mov	r9, #0
   3b5bc:	cmp	r8, #8
   3b5c0:	ldr	lr, [r0]
   3b5c4:	ldr	r0, [sp, #88]	; 0x58
   3b5c8:	add	r5, r0, r5, lsl #1
   3b5cc:	add	r2, ip, lr
   3b5d0:	str	r5, [sp, #48]	; 0x30
   3b5d4:	bcs	3b5f8 <GetDataSlab+0x749c>
   3b5d8:	mov	r5, lr
   3b5dc:	mov	lr, r8
   3b5e0:	ldr	r8, [sp, #60]	; 0x3c
   3b5e4:	ldr	r0, [sp, #44]	; 0x2c
   3b5e8:	mov	r7, r9
   3b5ec:	cmp	r0, #0
   3b5f0:	bne	3b70c <GetDataSlab+0x75b0>
   3b5f4:	b	3b724 <GetDataSlab+0x75c8>
   3b5f8:	ldr	r5, [sp, #64]	; 0x40
   3b5fc:	add	r7, ip, r8
   3b600:	add	r7, r7, lr
   3b604:	mla	r0, r5, r1, r0
   3b608:	mov	r5, lr
   3b60c:	mov	lr, r8
   3b610:	ldr	r8, [sp, #60]	; 0x3c
   3b614:	cmp	r0, r7
   3b618:	bcs	3b634 <GetDataSlab+0x74d8>
   3b61c:	ldr	r0, [sp, #64]	; 0x40
   3b620:	ldr	r7, [sp, #88]	; 0x58
   3b624:	mla	r0, r0, r1, r0
   3b628:	add	r0, r7, r0
   3b62c:	cmp	r2, r0
   3b630:	bcc	3b6fc <GetDataSlab+0x75a0>
   3b634:	ldr	r0, [sp, #20]
   3b638:	mov	r1, #0
   3b63c:	str	r5, [sp, #36]	; 0x24
   3b640:	cmp	r0, #0
   3b644:	beq	3b6a4 <GetDataSlab+0x7548>
   3b648:	ldr	sl, [sp, #12]
   3b64c:	mov	lr, r8
   3b650:	mov	r5, #32
   3b654:	sub	r8, fp, #256	; 0x100
   3b658:	mov	r0, r2
   3b65c:	subs	sl, sl, #2
   3b660:	ldr	r7, [r0, r1]!
   3b664:	add	r1, r1, #16
   3b668:	str	r7, [fp, #-264]	; 0xfffffef8
   3b66c:	ldr	r7, [r0, #4]
   3b670:	str	r7, [fp, #-260]	; 0xfffffefc
   3b674:	add	r7, lr, #16
   3b678:	vld1.8	{d16}, [r6 :64]
   3b67c:	vmovl.s8	q8, d16
   3b680:	vst1.16	{d16-d17}, [lr], r5
   3b684:	ldr	r9, [r0, #8]
   3b688:	ldr	r0, [r0, #12]
   3b68c:	str	r0, [fp, #-252]	; 0xffffff04
   3b690:	str	r9, [fp, #-256]	; 0xffffff00
   3b694:	vld1.8	{d16}, [r8 :64]
   3b698:	vmovl.s8	q8, d16
   3b69c:	vst1.16	{d16-d17}, [r7]
   3b6a0:	bne	3b658 <GetDataSlab+0x74fc>
   3b6a4:	ldr	r0, [sp, #28]
   3b6a8:	ldr	sl, [sp, #16]
   3b6ac:	ldr	r5, [sp, #36]	; 0x24
   3b6b0:	cmp	r0, #0
   3b6b4:	beq	3b6e4 <GetDataSlab+0x7588>
   3b6b8:	mov	r0, r2
   3b6bc:	ldr	r7, [r0, r1]!
   3b6c0:	str	r7, [fp, #-272]	; 0xfffffef0
   3b6c4:	ldr	r0, [r0, #4]
   3b6c8:	str	r0, [fp, #-268]	; 0xfffffef4
   3b6cc:	sub	r0, fp, #272	; 0x110
   3b6d0:	vld1.8	{d16}, [r0 :64]
   3b6d4:	ldr	r0, [sp, #48]	; 0x30
   3b6d8:	add	r0, r0, r1, lsl #1
   3b6dc:	vmovl.s8	q8, d16
   3b6e0:	vst1.16	{d16-d17}, [r0]
   3b6e4:	ldr	r1, [sp, #24]
   3b6e8:	ldr	lr, [sp, #56]	; 0x38
   3b6ec:	ldr	r8, [sp, #60]	; 0x3c
   3b6f0:	cmp	lr, r1
   3b6f4:	mov	r9, r1
   3b6f8:	beq	3b764 <GetDataSlab+0x7608>
   3b6fc:	ldr	r0, [sp, #44]	; 0x2c
   3b700:	mov	r7, r9
   3b704:	cmp	r0, #0
   3b708:	beq	3b724 <GetDataSlab+0x75c8>
   3b70c:	ldr	r0, [sp, #48]	; 0x30
   3b710:	add	r2, r2, r9
   3b714:	orr	r7, r9, #1
   3b718:	ldrsb	r2, [r2]
   3b71c:	add	r0, r0, r9, lsl #1
   3b720:	strh	r2, [r0]
   3b724:	orr	r0, r9, #1
   3b728:	cmp	lr, r0
   3b72c:	beq	3b764 <GetDataSlab+0x7608>
   3b730:	add	r0, r7, r5
   3b734:	add	r1, r8, r7, lsl #1
   3b738:	sub	r2, lr, r7
   3b73c:	add	r0, ip, r0
   3b740:	add	r7, r0, #1
   3b744:	ldrsb	r0, [r7, #-1]
   3b748:	subs	r2, r2, #2
   3b74c:	strh	r0, [r1]
   3b750:	ldrsb	r0, [r7]
   3b754:	add	r7, r7, #2
   3b758:	strh	r0, [r1, #2]
   3b75c:	add	r1, r1, #4
   3b760:	bne	3b744 <GetDataSlab+0x75e8>
   3b764:	ldr	r0, [sp, #52]	; 0x34
   3b768:	add	ip, ip, r0
   3b76c:	add	r3, r3, r0
   3b770:	ldr	r0, [fp, #24]
   3b774:	cmp	r0, #2
   3b778:	blt	3b570 <GetDataSlab+0x7414>
   3b77c:	ldr	r2, [sp, #40]	; 0x28
   3b780:	mov	r1, #0
   3b784:	b	3b7b8 <GetDataSlab+0x765c>
   3b788:	ldr	r5, [sp, #80]	; 0x50
   3b78c:	sub	r6, fp, #176	; 0xb0
   3b790:	sub	r0, r7, r0
   3b794:	ldr	r6, [r6, r1]
   3b798:	ldr	r5, [r5, r1]
   3b79c:	mla	r0, r5, r6, r0
   3b7a0:	add	r3, r0, r3
   3b7a4:	add	ip, ip, r0
   3b7a8:	mov	r6, r9
   3b7ac:	subs	r2, r2, #1
   3b7b0:	add	r1, r1, #4
   3b7b4:	beq	3b570 <GetDataSlab+0x7414>
   3b7b8:	ldr	r0, [r4, r1]
   3b7bc:	mov	r9, r6
   3b7c0:	add	r0, r0, #1
   3b7c4:	str	r0, [r4, r1]
   3b7c8:	ldr	r7, [sl, r1]
   3b7cc:	sdiv	r6, r0, r7
   3b7d0:	mls	r0, r6, r7, r0
   3b7d4:	cmp	r0, #0
   3b7d8:	bne	3b55c <GetDataSlab+0x7400>
   3b7dc:	mov	r0, #0
   3b7e0:	str	r0, [r4, r1]
   3b7e4:	ldr	r0, [sp, #84]	; 0x54
   3b7e8:	ldr	r7, [r0, r1]
   3b7ec:	sdiv	r0, r3, r7
   3b7f0:	mls	r0, r0, r7, r3
   3b7f4:	cmp	r0, #0
   3b7f8:	bne	3b788 <GetDataSlab+0x762c>
   3b7fc:	ldr	r0, [sp, #80]	; 0x50
   3b800:	ldr	r0, [r0, r1]
   3b804:	cmp	r0, #0
   3b808:	beq	3b7a8 <GetDataSlab+0x764c>
   3b80c:	sub	r7, fp, #176	; 0xb0
   3b810:	ldr	r7, [r7, r1]
   3b814:	mla	r3, r7, r0, r3
   3b818:	mla	ip, r7, r0, ip
   3b81c:	mov	r6, r9
   3b820:	subs	r2, r2, #1
   3b824:	add	r1, r1, #4
   3b828:	bne	3b7b8 <GetDataSlab+0x765c>
   3b82c:	b	3b570 <GetDataSlab+0x7414>
   3b830:	ldr	sl, [sl]
   3b834:	mov	r3, #0
   3b838:	sub	lr, fp, #96	; 0x60
   3b83c:	sub	r0, sl, #1
   3b840:	str	r0, [fp, #-96]	; 0xffffffa0
   3b844:	ldr	r0, [fp, #8]
   3b848:	ldr	r0, [r0]
   3b84c:	str	r0, [sp, #52]	; 0x34
   3b850:	str	r0, [fp, #-176]	; 0xffffff50
   3b854:	ldr	r0, [fp, #20]
   3b858:	ldr	r1, [r0]
   3b85c:	ldr	r0, [fp, #24]
   3b860:	cmp	r0, #2
   3b864:	str	r1, [sp, #56]	; 0x38
   3b868:	str	r1, [sp, #76]	; 0x4c
   3b86c:	blt	46c6c <GetDataSlab+0x12b10>
   3b870:	ldr	r0, [fp, #8]
   3b874:	ldr	r4, [sp, #52]	; 0x34
   3b878:	mov	r2, ip
   3b87c:	mov	r6, #1
   3b880:	mov	r9, #0
   3b884:	mvn	r5, #15
   3b888:	mov	r3, #0
   3b88c:	mov	r1, r0
   3b890:	sub	r0, r0, #4
   3b894:	mov	r8, r4
   3b898:	sub	ip, r1, #12
   3b89c:	ldr	r1, [sp, #56]	; 0x38
   3b8a0:	str	r1, [sp, #76]	; 0x4c
   3b8a4:	b	3b8f4 <GetDataSlab+0x7798>
   3b8a8:	ldr	r1, [fp, #12]
   3b8ac:	sub	r2, fp, #176	; 0xb0
   3b8b0:	sub	lr, fp, #96	; 0x60
   3b8b4:	add	ip, ip, #4
   3b8b8:	str	r7, [lr, r6, lsl #2]
   3b8bc:	str	r4, [r2, r6, lsl #2]
   3b8c0:	ldr	r7, [sp, #76]	; 0x4c
   3b8c4:	ldr	r1, [r1, r6, lsl #2]
   3b8c8:	mla	r3, r1, r8, r3
   3b8cc:	ldr	r1, [fp, #20]
   3b8d0:	mov	r8, r4
   3b8d4:	ldr	r4, [sp, #84]	; 0x54
   3b8d8:	ldr	r1, [r1, r6, lsl #2]
   3b8dc:	add	r6, r6, #1
   3b8e0:	mul	r7, r1, r7
   3b8e4:	ldr	r1, [fp, #24]
   3b8e8:	str	r7, [sp, #76]	; 0x4c
   3b8ec:	cmp	r6, r1
   3b8f0:	beq	46c6c <GetDataSlab+0x12b10>
   3b8f4:	ldr	r1, [fp, #16]
   3b8f8:	add	r9, r9, #1
   3b8fc:	cmp	r9, #4
   3b900:	ldr	r1, [r1, r6, lsl #2]
   3b904:	str	r4, [r2, r6, lsl #2]
   3b908:	sub	r7, r1, #1
   3b90c:	ldr	r1, [fp, #8]
   3b910:	str	r7, [lr, r6, lsl #2]
   3b914:	ldr	r2, [r1, r6, lsl #2]
   3b918:	str	r2, [sp, #84]	; 0x54
   3b91c:	bcs	3b92c <GetDataSlab+0x77d0>
   3b920:	mov	r1, r2
   3b924:	mov	r2, r6
   3b928:	b	3b9c0 <GetDataSlab+0x7864>
   3b92c:	vmov.i32	q9, #1	; 0x00000001
   3b930:	vmov.i32	q10, #1	; 0x00000001
   3b934:	vmov.32	d23[1], r2
   3b938:	mov	r1, r9
   3b93c:	vmov.i32	q8, #1	; 0x00000001
   3b940:	bic	r9, r6, #3
   3b944:	str	r1, [sp, #72]	; 0x48
   3b948:	bic	r1, r1, #3
   3b94c:	mov	lr, r1
   3b950:	sub	r2, r6, r1
   3b954:	mov	r1, ip
   3b958:	vmov.32	d18[0], r4
   3b95c:	vmov.32	d20[0], r7
   3b960:	vorr	d16, d18, d18
   3b964:	vmov.i32	q9, #1	; 0x00000001
   3b968:	vorr	d18, d20, d20
   3b96c:	vld1.32	{d20-d21}, [r1], r5
   3b970:	subs	r9, r9, #4
   3b974:	vrev64.32	q12, q10
   3b978:	vext.8	q12, q12, q12, #8
   3b97c:	vext.8	q11, q11, q12, #12
   3b980:	vmul.i32	q9, q9, q12
   3b984:	vmul.i32	q8, q11, q8
   3b988:	vorr	q11, q12, q12
   3b98c:	bne	3b96c <GetDataSlab+0x7810>
   3b990:	vext.8	q11, q9, q8, #8
   3b994:	vext.8	q12, q8, q8, #8
   3b998:	ldr	r9, [sp, #72]	; 0x48
   3b99c:	vmul.i32	q0, q9, q11
   3b9a0:	vmul.i32	q1, q8, q12
   3b9a4:	cmp	r9, lr
   3b9a8:	vmul.i32	q8, q0, d0[1]
   3b9ac:	vmul.i32	q9, q1, d2[1]
   3b9b0:	vmov.32	r7, d16[0]
   3b9b4:	vmov.32	r4, d18[0]
   3b9b8:	beq	3b8a8 <GetDataSlab+0x774c>
   3b9bc:	vmov.32	r1, d20[0]
   3b9c0:	mul	r4, r1, r4
   3b9c4:	ldr	r1, [r0, r2, lsl #2]
   3b9c8:	subs	r2, r2, #1
   3b9cc:	mul	r7, r7, r1
   3b9d0:	bne	3b9c0 <GetDataSlab+0x7864>
   3b9d4:	b	3b8a8 <GetDataSlab+0x774c>
   3b9d8:	ldr	r0, [sl]
   3b9dc:	mov	r1, #0
   3b9e0:	sub	r6, fp, #96	; 0x60
   3b9e4:	str	r0, [sp, #68]	; 0x44
   3b9e8:	sub	r0, r0, #1
   3b9ec:	str	r0, [fp, #-96]	; 0xffffffa0
   3b9f0:	ldr	r0, [fp, #8]
   3b9f4:	ldr	r0, [r0]
   3b9f8:	str	r0, [sp, #60]	; 0x3c
   3b9fc:	str	r0, [fp, #-176]	; 0xffffff50
   3ba00:	ldr	r0, [fp, #20]
   3ba04:	ldr	r2, [r0]
   3ba08:	ldr	r0, [fp, #24]
   3ba0c:	cmp	r0, #2
   3ba10:	str	r2, [sp, #64]	; 0x40
   3ba14:	str	r2, [sp, #76]	; 0x4c
   3ba18:	blt	47000 <GetDataSlab+0x12ea4>
   3ba1c:	ldr	r0, [fp, #8]
   3ba20:	ldr	r3, [sp, #60]	; 0x3c
   3ba24:	ldr	r2, [sp, #64]	; 0x40
   3ba28:	mov	r5, #1
   3ba2c:	mov	r8, #0
   3ba30:	mvn	r4, #15
   3ba34:	mov	r1, r0
   3ba38:	sub	r0, r0, #4
   3ba3c:	mov	r9, r3
   3ba40:	str	r2, [sp, #76]	; 0x4c
   3ba44:	sub	sl, r1, #12
   3ba48:	mov	r1, #0
   3ba4c:	b	3ba9c <GetDataSlab+0x7940>
   3ba50:	sub	ip, fp, #176	; 0xb0
   3ba54:	sub	r6, fp, #96	; 0x60
   3ba58:	str	r3, [ip, r5, lsl #2]
   3ba5c:	ldr	r7, [sp, #76]	; 0x4c
   3ba60:	add	sl, sl, #4
   3ba64:	str	r2, [r6, r5, lsl #2]
   3ba68:	ldr	r2, [fp, #12]
   3ba6c:	ldr	r2, [r2, r5, lsl #2]
   3ba70:	mla	r1, r2, r9, r1
   3ba74:	ldr	r2, [fp, #20]
   3ba78:	mov	r9, r3
   3ba7c:	mov	r3, lr
   3ba80:	ldr	r2, [r2, r5, lsl #2]
   3ba84:	add	r5, r5, #1
   3ba88:	mul	r7, r2, r7
   3ba8c:	ldr	r2, [fp, #24]
   3ba90:	str	r7, [sp, #76]	; 0x4c
   3ba94:	cmp	r5, r2
   3ba98:	beq	47000 <GetDataSlab+0x12ea4>
   3ba9c:	ldr	r2, [fp, #16]
   3baa0:	ldr	r7, [fp, #8]
   3baa4:	add	r8, r8, #1
   3baa8:	cmp	r8, #4
   3baac:	ldr	r2, [r2, r5, lsl #2]
   3bab0:	str	r3, [ip, r5, lsl #2]
   3bab4:	sub	r2, r2, #1
   3bab8:	str	r2, [r6, r5, lsl #2]
   3babc:	ldr	lr, [r7, r5, lsl #2]
   3bac0:	bcs	3bad0 <GetDataSlab+0x7974>
   3bac4:	mov	r7, lr
   3bac8:	mov	r6, r5
   3bacc:	b	3bb58 <GetDataSlab+0x79fc>
   3bad0:	vmov.i32	q9, #1	; 0x00000001
   3bad4:	vmov.i32	q10, #1	; 0x00000001
   3bad8:	vmov.32	d23[1], lr
   3badc:	vmov.i32	q8, #1	; 0x00000001
   3bae0:	bic	r7, r8, #3
   3bae4:	bic	ip, r5, #3
   3bae8:	sub	r6, r5, r7
   3baec:	vmov.32	d18[0], r3
   3baf0:	vmov.32	d20[0], r2
   3baf4:	mov	r2, sl
   3baf8:	vorr	d16, d18, d18
   3bafc:	vmov.i32	q9, #1	; 0x00000001
   3bb00:	vorr	d18, d20, d20
   3bb04:	vld1.32	{d20-d21}, [r2], r4
   3bb08:	subs	ip, ip, #4
   3bb0c:	vrev64.32	q12, q10
   3bb10:	vext.8	q12, q12, q12, #8
   3bb14:	vext.8	q11, q11, q12, #12
   3bb18:	vmul.i32	q9, q9, q12
   3bb1c:	vmul.i32	q8, q11, q8
   3bb20:	vorr	q11, q12, q12
   3bb24:	bne	3bb04 <GetDataSlab+0x79a8>
   3bb28:	vext.8	q11, q9, q8, #8
   3bb2c:	vext.8	q12, q8, q8, #8
   3bb30:	cmp	r8, r7
   3bb34:	vmul.i32	q0, q9, q11
   3bb38:	vmul.i32	q1, q8, q12
   3bb3c:	vmul.i32	q8, q0, d0[1]
   3bb40:	vmul.i32	q9, q1, d2[1]
   3bb44:	vmov.32	r2, d16[0]
   3bb48:	vmov.32	r3, d18[0]
   3bb4c:	beq	3ba50 <GetDataSlab+0x78f4>
   3bb50:	vmov.32	r7, d20[0]
   3bb54:	sub	ip, fp, #176	; 0xb0
   3bb58:	mul	r3, r7, r3
   3bb5c:	ldr	r7, [r0, r6, lsl #2]
   3bb60:	subs	r6, r6, #1
   3bb64:	mul	r2, r2, r7
   3bb68:	bne	3bb58 <GetDataSlab+0x79fc>
   3bb6c:	b	3ba54 <GetDataSlab+0x78f8>
   3bb70:	ldr	r0, [sl]
   3bb74:	mov	r1, #0
   3bb78:	sub	r6, fp, #96	; 0x60
   3bb7c:	str	r0, [sp, #68]	; 0x44
   3bb80:	sub	r0, r0, #1
   3bb84:	str	r0, [fp, #-96]	; 0xffffffa0
   3bb88:	ldr	r0, [fp, #8]
   3bb8c:	ldr	r0, [r0]
   3bb90:	str	r0, [sp, #60]	; 0x3c
   3bb94:	str	r0, [fp, #-176]	; 0xffffff50
   3bb98:	ldr	r0, [fp, #20]
   3bb9c:	ldr	r2, [r0]
   3bba0:	ldr	r0, [fp, #24]
   3bba4:	cmp	r0, #2
   3bba8:	str	r2, [sp, #64]	; 0x40
   3bbac:	str	r2, [sp, #76]	; 0x4c
   3bbb0:	blt	47300 <GetDataSlab+0x131a4>
   3bbb4:	ldr	r0, [fp, #8]
   3bbb8:	ldr	r3, [sp, #60]	; 0x3c
   3bbbc:	ldr	r2, [sp, #64]	; 0x40
   3bbc0:	mov	r5, #1
   3bbc4:	mov	r8, #0
   3bbc8:	mvn	r4, #15
   3bbcc:	mov	r1, r0
   3bbd0:	sub	r0, r0, #4
   3bbd4:	mov	r9, r3
   3bbd8:	str	r2, [sp, #76]	; 0x4c
   3bbdc:	sub	sl, r1, #12
   3bbe0:	mov	r1, #0
   3bbe4:	b	3bc34 <GetDataSlab+0x7ad8>
   3bbe8:	sub	ip, fp, #176	; 0xb0
   3bbec:	sub	r6, fp, #96	; 0x60
   3bbf0:	str	r3, [ip, r5, lsl #2]
   3bbf4:	ldr	r7, [sp, #76]	; 0x4c
   3bbf8:	add	sl, sl, #4
   3bbfc:	str	r2, [r6, r5, lsl #2]
   3bc00:	ldr	r2, [fp, #12]
   3bc04:	ldr	r2, [r2, r5, lsl #2]
   3bc08:	mla	r1, r2, r9, r1
   3bc0c:	ldr	r2, [fp, #20]
   3bc10:	mov	r9, r3
   3bc14:	mov	r3, lr
   3bc18:	ldr	r2, [r2, r5, lsl #2]
   3bc1c:	add	r5, r5, #1
   3bc20:	mul	r7, r2, r7
   3bc24:	ldr	r2, [fp, #24]
   3bc28:	str	r7, [sp, #76]	; 0x4c
   3bc2c:	cmp	r5, r2
   3bc30:	beq	47300 <GetDataSlab+0x131a4>
   3bc34:	ldr	r2, [fp, #16]
   3bc38:	ldr	r7, [fp, #8]
   3bc3c:	add	r8, r8, #1
   3bc40:	cmp	r8, #4
   3bc44:	ldr	r2, [r2, r5, lsl #2]
   3bc48:	str	r3, [ip, r5, lsl #2]
   3bc4c:	sub	r2, r2, #1
   3bc50:	str	r2, [r6, r5, lsl #2]
   3bc54:	ldr	lr, [r7, r5, lsl #2]
   3bc58:	bcs	3bc68 <GetDataSlab+0x7b0c>
   3bc5c:	mov	r7, lr
   3bc60:	mov	r6, r5
   3bc64:	b	3bcf0 <GetDataSlab+0x7b94>
   3bc68:	vmov.i32	q9, #1	; 0x00000001
   3bc6c:	vmov.i32	q10, #1	; 0x00000001
   3bc70:	vmov.32	d23[1], lr
   3bc74:	vmov.i32	q8, #1	; 0x00000001
   3bc78:	bic	r7, r8, #3
   3bc7c:	bic	ip, r5, #3
   3bc80:	sub	r6, r5, r7
   3bc84:	vmov.32	d18[0], r3
   3bc88:	vmov.32	d20[0], r2
   3bc8c:	mov	r2, sl
   3bc90:	vorr	d16, d18, d18
   3bc94:	vmov.i32	q9, #1	; 0x00000001
   3bc98:	vorr	d18, d20, d20
   3bc9c:	vld1.32	{d20-d21}, [r2], r4
   3bca0:	subs	ip, ip, #4
   3bca4:	vrev64.32	q12, q10
   3bca8:	vext.8	q12, q12, q12, #8
   3bcac:	vext.8	q11, q11, q12, #12
   3bcb0:	vmul.i32	q9, q9, q12
   3bcb4:	vmul.i32	q8, q11, q8
   3bcb8:	vorr	q11, q12, q12
   3bcbc:	bne	3bc9c <GetDataSlab+0x7b40>
   3bcc0:	vext.8	q11, q9, q8, #8
   3bcc4:	vext.8	q12, q8, q8, #8
   3bcc8:	cmp	r8, r7
   3bccc:	vmul.i32	q0, q9, q11
   3bcd0:	vmul.i32	q1, q8, q12
   3bcd4:	vmul.i32	q8, q0, d0[1]
   3bcd8:	vmul.i32	q9, q1, d2[1]
   3bcdc:	vmov.32	r2, d16[0]
   3bce0:	vmov.32	r3, d18[0]
   3bce4:	beq	3bbe8 <GetDataSlab+0x7a8c>
   3bce8:	vmov.32	r7, d20[0]
   3bcec:	sub	ip, fp, #176	; 0xb0
   3bcf0:	mul	r3, r7, r3
   3bcf4:	ldr	r7, [r0, r6, lsl #2]
   3bcf8:	subs	r6, r6, #1
   3bcfc:	mul	r2, r2, r7
   3bd00:	bne	3bcf0 <GetDataSlab+0x7b94>
   3bd04:	b	3bbec <GetDataSlab+0x7a90>
   3bd08:	ldr	r0, [sl]
   3bd0c:	mov	r3, #0
   3bd10:	sub	lr, fp, #96	; 0x60
   3bd14:	str	r0, [sp, #56]	; 0x38
   3bd18:	sub	r0, r0, #1
   3bd1c:	str	r0, [fp, #-96]	; 0xffffffa0
   3bd20:	ldr	r0, [fp, #8]
   3bd24:	ldr	r0, [r0]
   3bd28:	str	r0, [sp, #60]	; 0x3c
   3bd2c:	str	r0, [fp, #-176]	; 0xffffff50
   3bd30:	ldr	r0, [fp, #20]
   3bd34:	ldr	r1, [r0]
   3bd38:	ldr	r0, [fp, #24]
   3bd3c:	cmp	r0, #2
   3bd40:	str	r1, [sp, #72]	; 0x48
   3bd44:	str	r1, [sp, #76]	; 0x4c
   3bd48:	blt	47600 <GetDataSlab+0x134a4>
   3bd4c:	ldr	r0, [fp, #8]
   3bd50:	ldr	r5, [sp, #60]	; 0x3c
   3bd54:	mov	r7, #1
   3bd58:	mvn	r9, #15
   3bd5c:	mov	r3, #0
   3bd60:	mov	r1, r0
   3bd64:	sub	r0, r0, #4
   3bd68:	mov	r4, r5
   3bd6c:	sub	sl, r1, #12
   3bd70:	mov	r1, #0
   3bd74:	str	r1, [sp, #84]	; 0x54
   3bd78:	ldr	r1, [sp, #72]	; 0x48
   3bd7c:	str	r1, [sp, #76]	; 0x4c
   3bd80:	b	3bde0 <GetDataSlab+0x7c84>
   3bd84:	ldr	r8, [sp, #88]	; 0x58
   3bd88:	sub	r1, fp, #176	; 0xb0
   3bd8c:	sub	lr, fp, #96	; 0x60
   3bd90:	add	sl, sl, #4
   3bd94:	mov	r2, r1
   3bd98:	str	r5, [r1, r7, lsl #2]
   3bd9c:	ldr	r1, [fp, #12]
   3bda0:	str	r4, [lr, r7, lsl #2]
   3bda4:	ldr	r4, [sp, #68]	; 0x44
   3bda8:	ldr	r1, [r1, r7, lsl #2]
   3bdac:	mla	r3, r1, r4, r3
   3bdb0:	ldr	r1, [fp, #20]
   3bdb4:	ldr	r4, [sp, #76]	; 0x4c
   3bdb8:	ldr	r1, [r1, r7, lsl #2]
   3bdbc:	add	r7, r7, #1
   3bdc0:	mul	r4, r1, r4
   3bdc4:	ldr	r1, [fp, #24]
   3bdc8:	str	r4, [sp, #76]	; 0x4c
   3bdcc:	mov	r4, r5
   3bdd0:	mov	r5, ip
   3bdd4:	mov	ip, r2
   3bdd8:	cmp	r7, r1
   3bddc:	beq	47600 <GetDataSlab+0x134a4>
   3bde0:	ldr	r1, [fp, #16]
   3bde4:	str	r4, [sp, #68]	; 0x44
   3bde8:	ldr	r6, [sp, #84]	; 0x54
   3bdec:	ldr	r1, [r1, r7, lsl #2]
   3bdf0:	str	r5, [ip, r7, lsl #2]
   3bdf4:	add	r6, r6, #1
   3bdf8:	cmp	r6, #4
   3bdfc:	str	r6, [sp, #84]	; 0x54
   3be00:	sub	r4, r1, #1
   3be04:	ldr	r1, [fp, #8]
   3be08:	str	r4, [lr, r7, lsl #2]
   3be0c:	ldr	ip, [r1, r7, lsl #2]
   3be10:	bcs	3be20 <GetDataSlab+0x7cc4>
   3be14:	mov	r1, ip
   3be18:	mov	r2, r7
   3be1c:	b	3bea8 <GetDataSlab+0x7d4c>
   3be20:	vmov.i32	q9, #1	; 0x00000001
   3be24:	vmov.i32	q10, #1	; 0x00000001
   3be28:	vmov.32	d23[1], ip
   3be2c:	vmov.i32	q8, #1	; 0x00000001
   3be30:	bic	r1, r6, #3
   3be34:	bic	r8, r7, #3
   3be38:	sub	r2, r7, r1
   3be3c:	vmov.32	d18[0], r5
   3be40:	vmov.32	d20[0], r4
   3be44:	mov	r4, sl
   3be48:	vorr	d16, d18, d18
   3be4c:	vmov.i32	q9, #1	; 0x00000001
   3be50:	vorr	d18, d20, d20
   3be54:	vld1.32	{d20-d21}, [r4], r9
   3be58:	subs	r8, r8, #4
   3be5c:	vrev64.32	q12, q10
   3be60:	vext.8	q12, q12, q12, #8
   3be64:	vext.8	q11, q11, q12, #12
   3be68:	vmul.i32	q9, q9, q12
   3be6c:	vmul.i32	q8, q11, q8
   3be70:	vorr	q11, q12, q12
   3be74:	bne	3be54 <GetDataSlab+0x7cf8>
   3be78:	vext.8	q11, q9, q8, #8
   3be7c:	vext.8	q12, q8, q8, #8
   3be80:	cmp	r6, r1
   3be84:	vmul.i32	q0, q9, q11
   3be88:	vmul.i32	q1, q8, q12
   3be8c:	vmul.i32	q8, q0, d0[1]
   3be90:	vmul.i32	q9, q1, d2[1]
   3be94:	vmov.32	r4, d16[0]
   3be98:	vmov.32	r5, d18[0]
   3be9c:	beq	3bd84 <GetDataSlab+0x7c28>
   3bea0:	vmov.32	r1, d20[0]
   3bea4:	ldr	r8, [sp, #88]	; 0x58
   3bea8:	mul	r5, r1, r5
   3beac:	ldr	r1, [r0, r2, lsl #2]
   3beb0:	subs	r2, r2, #1
   3beb4:	mul	r4, r4, r1
   3beb8:	bne	3bea8 <GetDataSlab+0x7d4c>
   3bebc:	b	3bd88 <GetDataSlab+0x7c2c>
   3bec0:	ldr	r0, [sl]
   3bec4:	mov	r3, #0
   3bec8:	sub	lr, fp, #96	; 0x60
   3becc:	str	r0, [sp, #56]	; 0x38
   3bed0:	sub	r0, r0, #1
   3bed4:	str	r0, [fp, #-96]	; 0xffffffa0
   3bed8:	ldr	r0, [fp, #8]
   3bedc:	ldr	r0, [r0]
   3bee0:	str	r0, [sp, #60]	; 0x3c
   3bee4:	str	r0, [fp, #-176]	; 0xffffff50
   3bee8:	ldr	r0, [fp, #20]
   3beec:	ldr	r1, [r0]
   3bef0:	ldr	r0, [fp, #24]
   3bef4:	cmp	r0, #2
   3bef8:	str	r1, [sp, #72]	; 0x48
   3befc:	str	r1, [sp, #76]	; 0x4c
   3bf00:	blt	47890 <GetDataSlab+0x13734>
   3bf04:	ldr	r0, [fp, #8]
   3bf08:	ldr	r5, [sp, #60]	; 0x3c
   3bf0c:	mov	r7, #1
   3bf10:	mvn	r9, #15
   3bf14:	mov	r3, #0
   3bf18:	mov	r1, r0
   3bf1c:	sub	r0, r0, #4
   3bf20:	mov	r4, r5
   3bf24:	sub	sl, r1, #12
   3bf28:	mov	r1, #0
   3bf2c:	str	r1, [sp, #84]	; 0x54
   3bf30:	ldr	r1, [sp, #72]	; 0x48
   3bf34:	str	r1, [sp, #76]	; 0x4c
   3bf38:	b	3bf98 <GetDataSlab+0x7e3c>
   3bf3c:	ldr	r8, [sp, #88]	; 0x58
   3bf40:	sub	r1, fp, #176	; 0xb0
   3bf44:	sub	lr, fp, #96	; 0x60
   3bf48:	add	sl, sl, #4
   3bf4c:	mov	r2, r1
   3bf50:	str	r5, [r1, r7, lsl #2]
   3bf54:	ldr	r1, [fp, #12]
   3bf58:	str	r4, [lr, r7, lsl #2]
   3bf5c:	ldr	r4, [sp, #68]	; 0x44
   3bf60:	ldr	r1, [r1, r7, lsl #2]
   3bf64:	mla	r3, r1, r4, r3
   3bf68:	ldr	r1, [fp, #20]
   3bf6c:	ldr	r4, [sp, #76]	; 0x4c
   3bf70:	ldr	r1, [r1, r7, lsl #2]
   3bf74:	add	r7, r7, #1
   3bf78:	mul	r4, r1, r4
   3bf7c:	ldr	r1, [fp, #24]
   3bf80:	str	r4, [sp, #76]	; 0x4c
   3bf84:	mov	r4, r5
   3bf88:	mov	r5, ip
   3bf8c:	mov	ip, r2
   3bf90:	cmp	r7, r1
   3bf94:	beq	47890 <GetDataSlab+0x13734>
   3bf98:	ldr	r1, [fp, #16]
   3bf9c:	str	r4, [sp, #68]	; 0x44
   3bfa0:	ldr	r6, [sp, #84]	; 0x54
   3bfa4:	ldr	r1, [r1, r7, lsl #2]
   3bfa8:	str	r5, [ip, r7, lsl #2]
   3bfac:	add	r6, r6, #1
   3bfb0:	cmp	r6, #4
   3bfb4:	str	r6, [sp, #84]	; 0x54
   3bfb8:	sub	r4, r1, #1
   3bfbc:	ldr	r1, [fp, #8]
   3bfc0:	str	r4, [lr, r7, lsl #2]
   3bfc4:	ldr	ip, [r1, r7, lsl #2]
   3bfc8:	bcs	3bfd8 <GetDataSlab+0x7e7c>
   3bfcc:	mov	r1, ip
   3bfd0:	mov	r2, r7
   3bfd4:	b	3c060 <GetDataSlab+0x7f04>
   3bfd8:	vmov.i32	q9, #1	; 0x00000001
   3bfdc:	vmov.i32	q10, #1	; 0x00000001
   3bfe0:	vmov.32	d23[1], ip
   3bfe4:	vmov.i32	q8, #1	; 0x00000001
   3bfe8:	bic	r1, r6, #3
   3bfec:	bic	r8, r7, #3
   3bff0:	sub	r2, r7, r1
   3bff4:	vmov.32	d18[0], r5
   3bff8:	vmov.32	d20[0], r4
   3bffc:	mov	r4, sl
   3c000:	vorr	d16, d18, d18
   3c004:	vmov.i32	q9, #1	; 0x00000001
   3c008:	vorr	d18, d20, d20
   3c00c:	vld1.32	{d20-d21}, [r4], r9
   3c010:	subs	r8, r8, #4
   3c014:	vrev64.32	q12, q10
   3c018:	vext.8	q12, q12, q12, #8
   3c01c:	vext.8	q11, q11, q12, #12
   3c020:	vmul.i32	q9, q9, q12
   3c024:	vmul.i32	q8, q11, q8
   3c028:	vorr	q11, q12, q12
   3c02c:	bne	3c00c <GetDataSlab+0x7eb0>
   3c030:	vext.8	q11, q9, q8, #8
   3c034:	vext.8	q12, q8, q8, #8
   3c038:	cmp	r6, r1
   3c03c:	vmul.i32	q0, q9, q11
   3c040:	vmul.i32	q1, q8, q12
   3c044:	vmul.i32	q8, q0, d0[1]
   3c048:	vmul.i32	q9, q1, d2[1]
   3c04c:	vmov.32	r4, d16[0]
   3c050:	vmov.32	r5, d18[0]
   3c054:	beq	3bf3c <GetDataSlab+0x7de0>
   3c058:	vmov.32	r1, d20[0]
   3c05c:	ldr	r8, [sp, #88]	; 0x58
   3c060:	mul	r5, r1, r5
   3c064:	ldr	r1, [r0, r2, lsl #2]
   3c068:	subs	r2, r2, #1
   3c06c:	mul	r4, r4, r1
   3c070:	bne	3c060 <GetDataSlab+0x7f04>
   3c074:	b	3bf40 <GetDataSlab+0x7de4>
   3c078:	ldr	r0, [sl]
   3c07c:	mov	r1, #0
   3c080:	sub	lr, fp, #96	; 0x60
   3c084:	str	r0, [sp, #40]	; 0x28
   3c088:	sub	r0, r0, #1
   3c08c:	str	r0, [fp, #-96]	; 0xffffffa0
   3c090:	ldr	r0, [fp, #8]
   3c094:	ldr	r0, [r0]
   3c098:	str	r0, [sp, #60]	; 0x3c
   3c09c:	str	r0, [fp, #-176]	; 0xffffff50
   3c0a0:	ldr	r0, [fp, #20]
   3c0a4:	ldr	r2, [r0]
   3c0a8:	ldr	r0, [fp, #24]
   3c0ac:	cmp	r0, #2
   3c0b0:	str	r2, [sp, #64]	; 0x40
   3c0b4:	str	r2, [sp, #76]	; 0x4c
   3c0b8:	blt	47b20 <GetDataSlab+0x139c4>
   3c0bc:	ldr	r0, [fp, #8]
   3c0c0:	ldr	r3, [sp, #60]	; 0x3c
   3c0c4:	ldr	r2, [sp, #64]	; 0x40
   3c0c8:	mov	r6, #1
   3c0cc:	mov	r9, #0
   3c0d0:	mvn	r5, #15
   3c0d4:	mov	r1, r0
   3c0d8:	sub	r0, r0, #4
   3c0dc:	mov	r8, r3
   3c0e0:	str	r2, [sp, #76]	; 0x4c
   3c0e4:	sub	sl, r1, #12
   3c0e8:	mov	r1, #0
   3c0ec:	b	3c144 <GetDataSlab+0x7fe8>
   3c0f0:	sub	r2, fp, #176	; 0xb0
   3c0f4:	sub	lr, fp, #96	; 0x60
   3c0f8:	add	sl, sl, #4
   3c0fc:	mov	r7, r2
   3c100:	str	r3, [r2, r6, lsl #2]
   3c104:	ldr	r2, [fp, #12]
   3c108:	str	r4, [lr, r6, lsl #2]
   3c10c:	ldr	r4, [sp, #76]	; 0x4c
   3c110:	ldr	r2, [r2, r6, lsl #2]
   3c114:	mla	r1, r2, r8, r1
   3c118:	ldr	r2, [fp, #20]
   3c11c:	mov	r8, r3
   3c120:	mov	r3, ip
   3c124:	mov	ip, r7
   3c128:	ldr	r2, [r2, r6, lsl #2]
   3c12c:	add	r6, r6, #1
   3c130:	mul	r4, r2, r4
   3c134:	ldr	r2, [fp, #24]
   3c138:	str	r4, [sp, #76]	; 0x4c
   3c13c:	cmp	r6, r2
   3c140:	beq	47b20 <GetDataSlab+0x139c4>
   3c144:	ldr	r2, [fp, #16]
   3c148:	add	r9, r9, #1
   3c14c:	cmp	r9, #4
   3c150:	ldr	r2, [r2, r6, lsl #2]
   3c154:	str	r3, [ip, r6, lsl #2]
   3c158:	sub	r4, r2, #1
   3c15c:	ldr	r2, [fp, #8]
   3c160:	str	r4, [lr, r6, lsl #2]
   3c164:	ldr	ip, [r2, r6, lsl #2]
   3c168:	bcs	3c178 <GetDataSlab+0x801c>
   3c16c:	mov	r2, ip
   3c170:	mov	r7, r6
   3c174:	b	3c204 <GetDataSlab+0x80a8>
   3c178:	vmov.i32	q9, #1	; 0x00000001
   3c17c:	vmov.i32	q10, #1	; 0x00000001
   3c180:	vmov.32	d23[1], ip
   3c184:	vmov.i32	q8, #1	; 0x00000001
   3c188:	mov	lr, r9
   3c18c:	bic	r9, r9, #3
   3c190:	bic	r2, r6, #3
   3c194:	sub	r7, r6, r9
   3c198:	vmov.32	d18[0], r3
   3c19c:	vmov.32	d20[0], r4
   3c1a0:	mov	r3, sl
   3c1a4:	vorr	d16, d18, d18
   3c1a8:	vmov.i32	q9, #1	; 0x00000001
   3c1ac:	vorr	d18, d20, d20
   3c1b0:	vld1.32	{d20-d21}, [r3], r5
   3c1b4:	subs	r2, r2, #4
   3c1b8:	vrev64.32	q12, q10
   3c1bc:	vext.8	q12, q12, q12, #8
   3c1c0:	vext.8	q11, q11, q12, #12
   3c1c4:	vmul.i32	q9, q9, q12
   3c1c8:	vmul.i32	q8, q11, q8
   3c1cc:	vorr	q11, q12, q12
   3c1d0:	bne	3c1b0 <GetDataSlab+0x8054>
   3c1d4:	vext.8	q11, q9, q8, #8
   3c1d8:	vext.8	q12, q8, q8, #8
   3c1dc:	cmp	lr, r9
   3c1e0:	mov	r9, lr
   3c1e4:	vmul.i32	q0, q9, q11
   3c1e8:	vmul.i32	q1, q8, q12
   3c1ec:	vmul.i32	q8, q0, d0[1]
   3c1f0:	vmul.i32	q9, q1, d2[1]
   3c1f4:	vmov.32	r4, d16[0]
   3c1f8:	vmov.32	r3, d18[0]
   3c1fc:	beq	3c0f0 <GetDataSlab+0x7f94>
   3c200:	vmov.32	r2, d20[0]
   3c204:	mul	r3, r2, r3
   3c208:	ldr	r2, [r0, r7, lsl #2]
   3c20c:	subs	r7, r7, #1
   3c210:	mul	r4, r4, r2
   3c214:	bne	3c204 <GetDataSlab+0x80a8>
   3c218:	b	3c0f0 <GetDataSlab+0x7f94>
   3c21c:	ldr	r0, [sl]
   3c220:	mov	r1, #0
   3c224:	sub	lr, fp, #96	; 0x60
   3c228:	str	r0, [sp, #40]	; 0x28
   3c22c:	sub	r0, r0, #1
   3c230:	str	r0, [fp, #-96]	; 0xffffffa0
   3c234:	ldr	r0, [fp, #8]
   3c238:	ldr	r0, [r0]
   3c23c:	str	r0, [sp, #72]	; 0x48
   3c240:	str	r0, [fp, #-176]	; 0xffffff50
   3c244:	ldr	r0, [fp, #20]
   3c248:	ldr	r2, [r0]
   3c24c:	ldr	r0, [fp, #24]
   3c250:	cmp	r0, #2
   3c254:	str	r2, [sp, #64]	; 0x40
   3c258:	str	r2, [sp, #76]	; 0x4c
   3c25c:	blt	47dc4 <GetDataSlab+0x13c68>
   3c260:	ldr	r0, [fp, #8]
   3c264:	ldr	r3, [sp, #72]	; 0x48
   3c268:	ldr	r2, [sp, #64]	; 0x40
   3c26c:	mov	r6, #1
   3c270:	mov	r9, #0
   3c274:	mvn	r5, #15
   3c278:	mov	r1, r0
   3c27c:	sub	r0, r0, #4
   3c280:	mov	r8, r3
   3c284:	str	r2, [sp, #76]	; 0x4c
   3c288:	sub	sl, r1, #12
   3c28c:	mov	r1, #0
   3c290:	b	3c2e8 <GetDataSlab+0x818c>
   3c294:	sub	r2, fp, #176	; 0xb0
   3c298:	sub	lr, fp, #96	; 0x60
   3c29c:	add	sl, sl, #4
   3c2a0:	mov	r7, r2
   3c2a4:	str	r3, [r2, r6, lsl #2]
   3c2a8:	ldr	r2, [fp, #12]
   3c2ac:	str	r4, [lr, r6, lsl #2]
   3c2b0:	ldr	r4, [sp, #76]	; 0x4c
   3c2b4:	ldr	r2, [r2, r6, lsl #2]
   3c2b8:	mla	r1, r2, r8, r1
   3c2bc:	ldr	r2, [fp, #20]
   3c2c0:	mov	r8, r3
   3c2c4:	mov	r3, ip
   3c2c8:	mov	ip, r7
   3c2cc:	ldr	r2, [r2, r6, lsl #2]
   3c2d0:	add	r6, r6, #1
   3c2d4:	mul	r4, r2, r4
   3c2d8:	ldr	r2, [fp, #24]
   3c2dc:	str	r4, [sp, #76]	; 0x4c
   3c2e0:	cmp	r6, r2
   3c2e4:	beq	47dc4 <GetDataSlab+0x13c68>
   3c2e8:	ldr	r2, [fp, #16]
   3c2ec:	add	r9, r9, #1
   3c2f0:	cmp	r9, #4
   3c2f4:	ldr	r2, [r2, r6, lsl #2]
   3c2f8:	str	r3, [ip, r6, lsl #2]
   3c2fc:	sub	r4, r2, #1
   3c300:	ldr	r2, [fp, #8]
   3c304:	str	r4, [lr, r6, lsl #2]
   3c308:	ldr	ip, [r2, r6, lsl #2]
   3c30c:	bcs	3c31c <GetDataSlab+0x81c0>
   3c310:	mov	r2, ip
   3c314:	mov	r7, r6
   3c318:	b	3c3ac <GetDataSlab+0x8250>
   3c31c:	vmov.i32	q9, #1	; 0x00000001
   3c320:	vmov.i32	q10, #1	; 0x00000001
   3c324:	vmov.32	d23[1], ip
   3c328:	mov	r2, r9
   3c32c:	vmov.i32	q8, #1	; 0x00000001
   3c330:	bic	r9, r6, #3
   3c334:	mov	lr, r2
   3c338:	bic	r2, r2, #3
   3c33c:	sub	r7, r6, r2
   3c340:	vmov.32	d18[0], r3
   3c344:	vmov.32	d20[0], r4
   3c348:	mov	r3, sl
   3c34c:	vorr	d16, d18, d18
   3c350:	vmov.i32	q9, #1	; 0x00000001
   3c354:	vorr	d18, d20, d20
   3c358:	vld1.32	{d20-d21}, [r3], r5
   3c35c:	subs	r9, r9, #4
   3c360:	vrev64.32	q12, q10
   3c364:	vext.8	q12, q12, q12, #8
   3c368:	vext.8	q11, q11, q12, #12
   3c36c:	vmul.i32	q9, q9, q12
   3c370:	vmul.i32	q8, q11, q8
   3c374:	vorr	q11, q12, q12
   3c378:	bne	3c358 <GetDataSlab+0x81fc>
   3c37c:	vext.8	q11, q9, q8, #8
   3c380:	vext.8	q12, q8, q8, #8
   3c384:	mov	r9, lr
   3c388:	cmp	lr, r2
   3c38c:	vmul.i32	q0, q9, q11
   3c390:	vmul.i32	q1, q8, q12
   3c394:	vmul.i32	q8, q0, d0[1]
   3c398:	vmul.i32	q9, q1, d2[1]
   3c39c:	vmov.32	r4, d16[0]
   3c3a0:	vmov.32	r3, d18[0]
   3c3a4:	beq	3c294 <GetDataSlab+0x8138>
   3c3a8:	vmov.32	r2, d20[0]
   3c3ac:	mul	r3, r2, r3
   3c3b0:	ldr	r2, [r0, r7, lsl #2]
   3c3b4:	subs	r7, r7, #1
   3c3b8:	mul	r4, r4, r2
   3c3bc:	bne	3c3ac <GetDataSlab+0x8250>
   3c3c0:	b	3c294 <GetDataSlab+0x8138>
   3c3c4:	ldr	r0, [sl]
   3c3c8:	mov	r1, #0
   3c3cc:	sub	r7, fp, #96	; 0x60
   3c3d0:	str	r0, [sp, #60]	; 0x3c
   3c3d4:	sub	r0, r0, #1
   3c3d8:	str	r0, [fp, #-96]	; 0xffffffa0
   3c3dc:	ldr	r0, [fp, #8]
   3c3e0:	ldr	r0, [r0]
   3c3e4:	str	r0, [sp, #44]	; 0x2c
   3c3e8:	str	r0, [fp, #-176]	; 0xffffff50
   3c3ec:	ldr	r0, [fp, #20]
   3c3f0:	ldr	r2, [r0]
   3c3f4:	ldr	r0, [fp, #24]
   3c3f8:	cmp	r0, #2
   3c3fc:	str	r2, [sp, #56]	; 0x38
   3c400:	str	r2, [sp, #68]	; 0x44
   3c404:	blt	47fcc <GetDataSlab+0x13e70>
   3c408:	ldr	r0, [fp, #8]
   3c40c:	ldr	r2, [sp, #44]	; 0x2c
   3c410:	mov	r5, #1
   3c414:	mov	r4, #0
   3c418:	mvn	lr, #15
   3c41c:	mov	r1, #0
   3c420:	sub	r3, r0, #4
   3c424:	sub	sl, r0, #12
   3c428:	ldr	r0, [sp, #56]	; 0x38
   3c42c:	mov	r9, r2
   3c430:	str	r0, [sp, #68]	; 0x44
   3c434:	b	3c490 <GetDataSlab+0x8334>
   3c438:	ldr	r8, [sp, #88]	; 0x58
   3c43c:	mov	r4, r7
   3c440:	sub	r7, fp, #96	; 0x60
   3c444:	sub	ip, fp, #176	; 0xb0
   3c448:	ldr	r6, [sp, #68]	; 0x44
   3c44c:	add	sl, sl, #4
   3c450:	str	r0, [r7, r5, lsl #2]
   3c454:	ldr	r0, [fp, #12]
   3c458:	str	r2, [ip, r5, lsl #2]
   3c45c:	ldr	r0, [r0, r5, lsl #2]
   3c460:	mla	r1, r0, r9, r1
   3c464:	ldr	r0, [fp, #20]
   3c468:	mov	r9, r2
   3c46c:	mov	r2, r4
   3c470:	ldr	r4, [sp, #76]	; 0x4c
   3c474:	ldr	r0, [r0, r5, lsl #2]
   3c478:	add	r5, r5, #1
   3c47c:	mul	r6, r0, r6
   3c480:	ldr	r0, [fp, #24]
   3c484:	str	r6, [sp, #68]	; 0x44
   3c488:	cmp	r5, r0
   3c48c:	beq	47fcc <GetDataSlab+0x13e70>
   3c490:	ldr	r0, [fp, #16]
   3c494:	add	r4, r4, #1
   3c498:	cmp	r4, #4
   3c49c:	str	r4, [sp, #76]	; 0x4c
   3c4a0:	ldr	r0, [r0, r5, lsl #2]
   3c4a4:	str	r2, [ip, r5, lsl #2]
   3c4a8:	sub	r0, r0, #1
   3c4ac:	str	r0, [r7, r5, lsl #2]
   3c4b0:	ldr	r7, [fp, #8]
   3c4b4:	ldr	r7, [r7, r5, lsl #2]
   3c4b8:	bcs	3c4c8 <GetDataSlab+0x836c>
   3c4bc:	mov	r4, r7
   3c4c0:	mov	r6, r5
   3c4c4:	b	3c554 <GetDataSlab+0x83f8>
   3c4c8:	vmov.i32	q9, #1	; 0x00000001
   3c4cc:	vmov.i32	q10, #1	; 0x00000001
   3c4d0:	vmov.32	d23[1], r7
   3c4d4:	vmov.i32	q8, #1	; 0x00000001
   3c4d8:	bic	ip, r4, #3
   3c4dc:	bic	r8, r5, #3
   3c4e0:	sub	r6, r5, ip
   3c4e4:	vmov.32	d18[0], r2
   3c4e8:	vmov.32	d20[0], r0
   3c4ec:	mov	r0, sl
   3c4f0:	vorr	d16, d18, d18
   3c4f4:	vmov.i32	q9, #1	; 0x00000001
   3c4f8:	vorr	d18, d20, d20
   3c4fc:	vld1.32	{d20-d21}, [r0], lr
   3c500:	subs	r8, r8, #4
   3c504:	vrev64.32	q12, q10
   3c508:	vext.8	q12, q12, q12, #8
   3c50c:	vext.8	q11, q11, q12, #12
   3c510:	vmul.i32	q9, q9, q12
   3c514:	vmul.i32	q8, q11, q8
   3c518:	vorr	q11, q12, q12
   3c51c:	bne	3c4fc <GetDataSlab+0x83a0>
   3c520:	vext.8	q11, q9, q8, #8
   3c524:	vext.8	q12, q8, q8, #8
   3c528:	cmp	r4, ip
   3c52c:	vmul.i32	q0, q9, q11
   3c530:	vmul.i32	q1, q8, q12
   3c534:	vmul.i32	q8, q0, d0[1]
   3c538:	vmul.i32	q9, q1, d2[1]
   3c53c:	vmov.32	r0, d16[0]
   3c540:	vmov.32	r2, d18[0]
   3c544:	beq	3c438 <GetDataSlab+0x82dc>
   3c548:	mov	r4, r7
   3c54c:	vmov.32	r7, d20[0]
   3c550:	ldr	r8, [sp, #88]	; 0x58
   3c554:	mul	r2, r7, r2
   3c558:	ldr	r7, [r3, r6, lsl #2]
   3c55c:	subs	r6, r6, #1
   3c560:	mul	r0, r0, r7
   3c564:	bne	3c554 <GetDataSlab+0x83f8>
   3c568:	b	3c440 <GetDataSlab+0x82e4>
   3c56c:	ldr	r0, [sp, #80]	; 0x50
   3c570:	cmp	sl, #1
   3c574:	add	ip, r0, r3
   3c578:	bne	4cc5c <GetDataSlab+0x18b00>
   3c57c:	ldr	r0, [sp, #76]	; 0x4c
   3c580:	ldr	r2, [fp, #12]
   3c584:	sub	r7, fp, #96	; 0x60
   3c588:	cmp	r0, #1
   3c58c:	blt	5aed4 <GetDataSlab+0x26d78>
   3c590:	ldr	lr, [sp, #56]	; 0x38
   3c594:	mov	r1, #1
   3c598:	ldr	r8, [sp, #88]	; 0x58
   3c59c:	sub	r6, fp, #216	; 0xd8
   3c5a0:	sub	r0, lr, #8
   3c5a4:	add	r1, r1, r0, lsr #3
   3c5a8:	lsr	r0, r0, #3
   3c5ac:	str	r0, [sp, #20]
   3c5b0:	mov	r0, #0
   3c5b4:	and	r4, r1, #1
   3c5b8:	str	r0, [sp, #72]	; 0x48
   3c5bc:	sub	r1, r1, r4
   3c5c0:	str	r4, [sp, #28]
   3c5c4:	str	r1, [sp, #12]
   3c5c8:	sub	r1, fp, #136	; 0x88
   3c5cc:	orr	r4, r1, #4
   3c5d0:	ldr	r1, [fp, #20]
   3c5d4:	add	sl, r1, #4
   3c5d8:	sub	r1, fp, #176	; 0xb0
   3c5dc:	orr	r1, r1, #4
   3c5e0:	str	sl, [sp, #16]
   3c5e4:	str	r1, [sp, #84]	; 0x54
   3c5e8:	add	r1, r2, #4
   3c5ec:	str	r1, [sp, #80]	; 0x50
   3c5f0:	ldr	r1, [fp, #24]
   3c5f4:	sub	r1, r1, #1
   3c5f8:	str	r1, [sp, #40]	; 0x28
   3c5fc:	orr	r1, r7, #4
   3c600:	str	r1, [sp, #32]
   3c604:	lsl	r1, lr, #1
   3c608:	str	r1, [sp, #64]	; 0x40
   3c60c:	and	r1, lr, #1
   3c610:	str	r1, [sp, #44]	; 0x2c
   3c614:	bic	r1, lr, #7
   3c618:	str	r1, [sp, #24]
   3c61c:	mov	r1, #0
   3c620:	cmp	lr, #1
   3c624:	str	r1, [sp, #68]	; 0x44
   3c628:	bge	3c67c <GetDataSlab+0x8520>
   3c62c:	b	3c838 <GetDataSlab+0x86dc>
   3c630:	ldr	r0, [sp, #32]
   3c634:	mov	r6, r9
   3c638:	ldr	r0, [r0, r1]
   3c63c:	add	ip, ip, r0
   3c640:	add	r3, r0, r3
   3c644:	ldr	r0, [sp, #64]	; 0x40
   3c648:	ldr	r2, [sp, #72]	; 0x48
   3c64c:	ldr	r1, [sp, #68]	; 0x44
   3c650:	add	r8, r8, r0
   3c654:	ldr	r0, [sp, #76]	; 0x4c
   3c658:	add	r2, r2, lr
   3c65c:	add	r1, r1, #1
   3c660:	str	r2, [sp, #72]	; 0x48
   3c664:	cmp	r2, r0
   3c668:	mov	r2, #0
   3c66c:	bge	5b6a0 <GetDataSlab+0x27544>
   3c670:	cmp	lr, #1
   3c674:	str	r1, [sp, #68]	; 0x44
   3c678:	blt	3c838 <GetDataSlab+0x86dc>
   3c67c:	ldr	r0, [fp, #12]
   3c680:	str	r8, [sp, #60]	; 0x3c
   3c684:	mov	r8, lr
   3c688:	ldr	r5, [sp, #72]	; 0x48
   3c68c:	mov	r9, #0
   3c690:	cmp	r8, #8
   3c694:	ldr	lr, [r0]
   3c698:	ldr	r0, [sp, #88]	; 0x58
   3c69c:	add	r5, r0, r5, lsl #1
   3c6a0:	add	r2, ip, lr
   3c6a4:	str	r5, [sp, #48]	; 0x30
   3c6a8:	bcs	3c6cc <GetDataSlab+0x8570>
   3c6ac:	mov	r5, lr
   3c6b0:	mov	lr, r8
   3c6b4:	ldr	r8, [sp, #60]	; 0x3c
   3c6b8:	ldr	r0, [sp, #44]	; 0x2c
   3c6bc:	mov	r7, r9
   3c6c0:	cmp	r0, #0
   3c6c4:	bne	3c7e0 <GetDataSlab+0x8684>
   3c6c8:	b	3c7f8 <GetDataSlab+0x869c>
   3c6cc:	ldr	r5, [sp, #64]	; 0x40
   3c6d0:	add	r7, ip, r8
   3c6d4:	add	r7, r7, lr
   3c6d8:	mla	r0, r5, r1, r0
   3c6dc:	mov	r5, lr
   3c6e0:	mov	lr, r8
   3c6e4:	ldr	r8, [sp, #60]	; 0x3c
   3c6e8:	cmp	r0, r7
   3c6ec:	bcs	3c708 <GetDataSlab+0x85ac>
   3c6f0:	ldr	r0, [sp, #64]	; 0x40
   3c6f4:	ldr	r7, [sp, #88]	; 0x58
   3c6f8:	mla	r0, r0, r1, r0
   3c6fc:	add	r0, r7, r0
   3c700:	cmp	r2, r0
   3c704:	bcc	3c7d0 <GetDataSlab+0x8674>
   3c708:	ldr	r0, [sp, #20]
   3c70c:	mov	r1, #0
   3c710:	str	r5, [sp, #36]	; 0x24
   3c714:	cmp	r0, #0
   3c718:	beq	3c778 <GetDataSlab+0x861c>
   3c71c:	ldr	sl, [sp, #12]
   3c720:	mov	lr, r8
   3c724:	mov	r5, #32
   3c728:	sub	r8, fp, #208	; 0xd0
   3c72c:	mov	r0, r2
   3c730:	subs	sl, sl, #2
   3c734:	ldr	r7, [r0, r1]!
   3c738:	add	r1, r1, #16
   3c73c:	str	r7, [fp, #-216]	; 0xffffff28
   3c740:	ldr	r7, [r0, #4]
   3c744:	str	r7, [fp, #-212]	; 0xffffff2c
   3c748:	add	r7, lr, #16
   3c74c:	vld1.8	{d16}, [r6 :64]
   3c750:	vmovl.s8	q8, d16
   3c754:	vst1.16	{d16-d17}, [lr], r5
   3c758:	ldr	r9, [r0, #8]
   3c75c:	ldr	r0, [r0, #12]
   3c760:	str	r0, [fp, #-204]	; 0xffffff34
   3c764:	str	r9, [fp, #-208]	; 0xffffff30
   3c768:	vld1.8	{d16}, [r8 :64]
   3c76c:	vmovl.s8	q8, d16
   3c770:	vst1.16	{d16-d17}, [r7]
   3c774:	bne	3c72c <GetDataSlab+0x85d0>
   3c778:	ldr	r0, [sp, #28]
   3c77c:	ldr	sl, [sp, #16]
   3c780:	ldr	r5, [sp, #36]	; 0x24
   3c784:	cmp	r0, #0
   3c788:	beq	3c7b8 <GetDataSlab+0x865c>
   3c78c:	mov	r0, r2
   3c790:	ldr	r7, [r0, r1]!
   3c794:	str	r7, [fp, #-224]	; 0xffffff20
   3c798:	ldr	r0, [r0, #4]
   3c79c:	str	r0, [fp, #-220]	; 0xffffff24
   3c7a0:	sub	r0, fp, #224	; 0xe0
   3c7a4:	vld1.8	{d16}, [r0 :64]
   3c7a8:	ldr	r0, [sp, #48]	; 0x30
   3c7ac:	add	r0, r0, r1, lsl #1
   3c7b0:	vmovl.s8	q8, d16
   3c7b4:	vst1.16	{d16-d17}, [r0]
   3c7b8:	ldr	r1, [sp, #24]
   3c7bc:	ldr	lr, [sp, #56]	; 0x38
   3c7c0:	ldr	r8, [sp, #60]	; 0x3c
   3c7c4:	cmp	lr, r1
   3c7c8:	mov	r9, r1
   3c7cc:	beq	3c838 <GetDataSlab+0x86dc>
   3c7d0:	ldr	r0, [sp, #44]	; 0x2c
   3c7d4:	mov	r7, r9
   3c7d8:	cmp	r0, #0
   3c7dc:	beq	3c7f8 <GetDataSlab+0x869c>
   3c7e0:	ldr	r0, [sp, #48]	; 0x30
   3c7e4:	add	r2, r2, r9
   3c7e8:	orr	r7, r9, #1
   3c7ec:	ldrsb	r2, [r2]
   3c7f0:	add	r0, r0, r9, lsl #1
   3c7f4:	strh	r2, [r0]
   3c7f8:	orr	r0, r9, #1
   3c7fc:	cmp	lr, r0
   3c800:	beq	3c838 <GetDataSlab+0x86dc>
   3c804:	add	r0, r7, r5
   3c808:	add	r1, r8, r7, lsl #1
   3c80c:	sub	r2, lr, r7
   3c810:	add	r0, ip, r0
   3c814:	add	r7, r0, #1
   3c818:	ldrsb	r0, [r7, #-1]
   3c81c:	subs	r2, r2, #2
   3c820:	strh	r0, [r1]
   3c824:	ldrsb	r0, [r7]
   3c828:	add	r7, r7, #2
   3c82c:	strh	r0, [r1, #2]
   3c830:	add	r1, r1, #4
   3c834:	bne	3c818 <GetDataSlab+0x86bc>
   3c838:	ldr	r0, [sp, #52]	; 0x34
   3c83c:	add	ip, ip, r0
   3c840:	add	r3, r3, r0
   3c844:	ldr	r0, [fp, #24]
   3c848:	cmp	r0, #2
   3c84c:	blt	3c644 <GetDataSlab+0x84e8>
   3c850:	ldr	r2, [sp, #40]	; 0x28
   3c854:	mov	r1, #0
   3c858:	b	3c88c <GetDataSlab+0x8730>
   3c85c:	ldr	r5, [sp, #80]	; 0x50
   3c860:	sub	r6, fp, #176	; 0xb0
   3c864:	sub	r0, r7, r0
   3c868:	ldr	r6, [r6, r1]
   3c86c:	ldr	r5, [r5, r1]
   3c870:	mla	r0, r5, r6, r0
   3c874:	add	r3, r0, r3
   3c878:	add	ip, ip, r0
   3c87c:	mov	r6, r9
   3c880:	subs	r2, r2, #1
   3c884:	add	r1, r1, #4
   3c888:	beq	3c644 <GetDataSlab+0x84e8>
   3c88c:	ldr	r0, [r4, r1]
   3c890:	mov	r9, r6
   3c894:	add	r0, r0, #1
   3c898:	str	r0, [r4, r1]
   3c89c:	ldr	r7, [sl, r1]
   3c8a0:	sdiv	r6, r0, r7
   3c8a4:	mls	r0, r6, r7, r0
   3c8a8:	cmp	r0, #0
   3c8ac:	bne	3c630 <GetDataSlab+0x84d4>
   3c8b0:	mov	r0, #0
   3c8b4:	str	r0, [r4, r1]
   3c8b8:	ldr	r0, [sp, #84]	; 0x54
   3c8bc:	ldr	r7, [r0, r1]
   3c8c0:	sdiv	r0, r3, r7
   3c8c4:	mls	r0, r0, r7, r3
   3c8c8:	cmp	r0, #0
   3c8cc:	bne	3c85c <GetDataSlab+0x8700>
   3c8d0:	ldr	r0, [sp, #80]	; 0x50
   3c8d4:	ldr	r0, [r0, r1]
   3c8d8:	cmp	r0, #0
   3c8dc:	beq	3c87c <GetDataSlab+0x8720>
   3c8e0:	sub	r7, fp, #176	; 0xb0
   3c8e4:	ldr	r7, [r7, r1]
   3c8e8:	mla	r3, r7, r0, r3
   3c8ec:	mla	ip, r7, r0, ip
   3c8f0:	mov	r6, r9
   3c8f4:	subs	r2, r2, #1
   3c8f8:	add	r1, r1, #4
   3c8fc:	bne	3c88c <GetDataSlab+0x8730>
   3c900:	b	3c644 <GetDataSlab+0x84e8>
   3c904:	ldr	r5, [sl]
   3c908:	mov	r7, #0
   3c90c:	sub	r9, fp, #176	; 0xb0
   3c910:	sub	r8, fp, #96	; 0x60
   3c914:	sub	r0, r5, #1
   3c918:	str	r0, [fp, #-96]	; 0xffffffa0
   3c91c:	ldr	r0, [r3]
   3c920:	str	r0, [sp, #72]	; 0x48
   3c924:	str	r0, [fp, #-176]	; 0xffffff50
   3c928:	ldr	r0, [fp, #20]
   3c92c:	ldr	r1, [r0]
   3c930:	ldr	r0, [fp, #24]
   3c934:	cmp	r0, #2
   3c938:	mov	r0, r1
   3c93c:	str	r1, [sp, #76]	; 0x4c
   3c940:	blt	48248 <GetDataSlab+0x140ec>
   3c944:	ldr	r0, [fp, #8]
   3c948:	ldr	r4, [sp, #72]	; 0x48
   3c94c:	mov	r3, #0
   3c950:	mvn	ip, #15
   3c954:	mov	r7, #0
   3c958:	str	r1, [sp, #76]	; 0x4c
   3c95c:	str	r3, [sp, #84]	; 0x54
   3c960:	mov	r3, r1
   3c964:	mov	r2, r0
   3c968:	sub	r0, r0, #4
   3c96c:	mov	r6, r4
   3c970:	sub	sl, r2, #12
   3c974:	mov	r2, #1
   3c978:	b	3c9cc <GetDataSlab+0x8870>
   3c97c:	sub	r8, fp, #96	; 0x60
   3c980:	ldr	r3, [fp, #12]
   3c984:	sub	r9, fp, #176	; 0xb0
   3c988:	str	lr, [r8, r2, lsl #2]
   3c98c:	ldr	r6, [sp, #68]	; 0x44
   3c990:	add	sl, sl, #4
   3c994:	str	r4, [r9, r2, lsl #2]
   3c998:	ldr	r3, [r3, r2, lsl #2]
   3c99c:	mla	r7, r3, r6, r7
   3c9a0:	ldr	r3, [fp, #20]
   3c9a4:	ldr	r6, [sp, #76]	; 0x4c
   3c9a8:	ldr	r3, [r3, r2, lsl #2]
   3c9ac:	add	r2, r2, #1
   3c9b0:	mul	r6, r3, r6
   3c9b4:	ldr	r3, [fp, #24]
   3c9b8:	str	r6, [sp, #76]	; 0x4c
   3c9bc:	mov	r6, r4
   3c9c0:	ldr	r4, [sp, #64]	; 0x40
   3c9c4:	cmp	r2, r3
   3c9c8:	beq	48248 <GetDataSlab+0x140ec>
   3c9cc:	ldr	r3, [fp, #16]
   3c9d0:	str	r6, [sp, #68]	; 0x44
   3c9d4:	ldr	r3, [r3, r2, lsl #2]
   3c9d8:	str	r4, [r9, r2, lsl #2]
   3c9dc:	ldr	r9, [sp, #84]	; 0x54
   3c9e0:	sub	lr, r3, #1
   3c9e4:	ldr	r3, [fp, #8]
   3c9e8:	add	r9, r9, #1
   3c9ec:	str	lr, [r8, r2, lsl #2]
   3c9f0:	cmp	r9, #4
   3c9f4:	str	r9, [sp, #84]	; 0x54
   3c9f8:	ldr	r6, [r3, r2, lsl #2]
   3c9fc:	str	r6, [sp, #64]	; 0x40
   3ca00:	bcs	3ca0c <GetDataSlab+0x88b0>
   3ca04:	mov	r3, r2
   3ca08:	b	3ca9c <GetDataSlab+0x8940>
   3ca0c:	vmov.i32	q9, #1	; 0x00000001
   3ca10:	vmov.i32	q10, #1	; 0x00000001
   3ca14:	vmov.32	d23[1], r6
   3ca18:	vmov.i32	q8, #1	; 0x00000001
   3ca1c:	bic	r3, r9, #3
   3ca20:	bic	r8, r2, #3
   3ca24:	mov	r6, sl
   3ca28:	str	r3, [sp, #60]	; 0x3c
   3ca2c:	sub	r3, r2, r3
   3ca30:	vmov.32	d18[0], r4
   3ca34:	vmov.32	d20[0], lr
   3ca38:	vorr	d16, d18, d18
   3ca3c:	vmov.i32	q9, #1	; 0x00000001
   3ca40:	vorr	d18, d20, d20
   3ca44:	vld1.32	{d20-d21}, [r6], ip
   3ca48:	subs	r8, r8, #4
   3ca4c:	vrev64.32	q12, q10
   3ca50:	vext.8	q12, q12, q12, #8
   3ca54:	vext.8	q11, q11, q12, #12
   3ca58:	vmul.i32	q9, q9, q12
   3ca5c:	vmul.i32	q8, q11, q8
   3ca60:	vorr	q11, q12, q12
   3ca64:	bne	3ca44 <GetDataSlab+0x88e8>
   3ca68:	vext.8	q11, q9, q8, #8
   3ca6c:	vext.8	q12, q8, q8, #8
   3ca70:	ldr	r6, [sp, #60]	; 0x3c
   3ca74:	vmul.i32	q0, q9, q11
   3ca78:	vmul.i32	q1, q8, q12
   3ca7c:	cmp	r9, r6
   3ca80:	vmul.i32	q8, q0, d0[1]
   3ca84:	vmul.i32	q9, q1, d2[1]
   3ca88:	vmov.32	lr, d16[0]
   3ca8c:	vmov.32	r4, d18[0]
   3ca90:	beq	3c97c <GetDataSlab+0x8820>
   3ca94:	vmov.32	r6, d20[0]
   3ca98:	sub	r8, fp, #96	; 0x60
   3ca9c:	mul	r4, r6, r4
   3caa0:	ldr	r6, [r0, r3, lsl #2]
   3caa4:	subs	r3, r3, #1
   3caa8:	mul	lr, lr, r6
   3caac:	bne	3ca9c <GetDataSlab+0x8940>
   3cab0:	b	3c980 <GetDataSlab+0x8824>
   3cab4:	ldr	r5, [sl]
   3cab8:	mov	r7, #0
   3cabc:	sub	r9, fp, #176	; 0xb0
   3cac0:	sub	r8, fp, #96	; 0x60
   3cac4:	sub	r0, r5, #1
   3cac8:	str	r0, [fp, #-96]	; 0xffffffa0
   3cacc:	ldr	r0, [r3]
   3cad0:	str	r0, [sp, #72]	; 0x48
   3cad4:	str	r0, [fp, #-176]	; 0xffffff50
   3cad8:	ldr	r0, [fp, #20]
   3cadc:	ldr	r1, [r0]
   3cae0:	ldr	r0, [fp, #24]
   3cae4:	cmp	r0, #2
   3cae8:	mov	r0, r1
   3caec:	str	r1, [sp, #76]	; 0x4c
   3caf0:	blt	483e8 <GetDataSlab+0x1428c>
   3caf4:	ldr	r0, [fp, #8]
   3caf8:	ldr	r4, [sp, #72]	; 0x48
   3cafc:	mov	r3, #0
   3cb00:	mvn	ip, #15
   3cb04:	mov	r7, #0
   3cb08:	str	r1, [sp, #76]	; 0x4c
   3cb0c:	str	r3, [sp, #84]	; 0x54
   3cb10:	mov	r3, r1
   3cb14:	mov	r2, r0
   3cb18:	sub	r0, r0, #4
   3cb1c:	mov	r6, r4
   3cb20:	sub	sl, r2, #12
   3cb24:	mov	r2, #1
   3cb28:	b	3cb7c <GetDataSlab+0x8a20>
   3cb2c:	sub	r8, fp, #96	; 0x60
   3cb30:	ldr	r3, [fp, #12]
   3cb34:	sub	r9, fp, #176	; 0xb0
   3cb38:	str	lr, [r8, r2, lsl #2]
   3cb3c:	ldr	r6, [sp, #68]	; 0x44
   3cb40:	add	sl, sl, #4
   3cb44:	str	r4, [r9, r2, lsl #2]
   3cb48:	ldr	r3, [r3, r2, lsl #2]
   3cb4c:	mla	r7, r3, r6, r7
   3cb50:	ldr	r3, [fp, #20]
   3cb54:	ldr	r6, [sp, #76]	; 0x4c
   3cb58:	ldr	r3, [r3, r2, lsl #2]
   3cb5c:	add	r2, r2, #1
   3cb60:	mul	r6, r3, r6
   3cb64:	ldr	r3, [fp, #24]
   3cb68:	str	r6, [sp, #76]	; 0x4c
   3cb6c:	mov	r6, r4
   3cb70:	ldr	r4, [sp, #64]	; 0x40
   3cb74:	cmp	r2, r3
   3cb78:	beq	483e8 <GetDataSlab+0x1428c>
   3cb7c:	ldr	r3, [fp, #16]
   3cb80:	str	r6, [sp, #68]	; 0x44
   3cb84:	ldr	r3, [r3, r2, lsl #2]
   3cb88:	str	r4, [r9, r2, lsl #2]
   3cb8c:	ldr	r9, [sp, #84]	; 0x54
   3cb90:	sub	lr, r3, #1
   3cb94:	ldr	r3, [fp, #8]
   3cb98:	add	r9, r9, #1
   3cb9c:	str	lr, [r8, r2, lsl #2]
   3cba0:	cmp	r9, #4
   3cba4:	str	r9, [sp, #84]	; 0x54
   3cba8:	ldr	r6, [r3, r2, lsl #2]
   3cbac:	str	r6, [sp, #64]	; 0x40
   3cbb0:	bcs	3cbbc <GetDataSlab+0x8a60>
   3cbb4:	mov	r3, r2
   3cbb8:	b	3cc4c <GetDataSlab+0x8af0>
   3cbbc:	vmov.i32	q9, #1	; 0x00000001
   3cbc0:	vmov.i32	q10, #1	; 0x00000001
   3cbc4:	vmov.32	d23[1], r6
   3cbc8:	vmov.i32	q8, #1	; 0x00000001
   3cbcc:	bic	r3, r9, #3
   3cbd0:	bic	r8, r2, #3
   3cbd4:	mov	r6, sl
   3cbd8:	str	r3, [sp, #60]	; 0x3c
   3cbdc:	sub	r3, r2, r3
   3cbe0:	vmov.32	d18[0], r4
   3cbe4:	vmov.32	d20[0], lr
   3cbe8:	vorr	d16, d18, d18
   3cbec:	vmov.i32	q9, #1	; 0x00000001
   3cbf0:	vorr	d18, d20, d20
   3cbf4:	vld1.32	{d20-d21}, [r6], ip
   3cbf8:	subs	r8, r8, #4
   3cbfc:	vrev64.32	q12, q10
   3cc00:	vext.8	q12, q12, q12, #8
   3cc04:	vext.8	q11, q11, q12, #12
   3cc08:	vmul.i32	q9, q9, q12
   3cc0c:	vmul.i32	q8, q11, q8
   3cc10:	vorr	q11, q12, q12
   3cc14:	bne	3cbf4 <GetDataSlab+0x8a98>
   3cc18:	vext.8	q11, q9, q8, #8
   3cc1c:	vext.8	q12, q8, q8, #8
   3cc20:	ldr	r6, [sp, #60]	; 0x3c
   3cc24:	vmul.i32	q0, q9, q11
   3cc28:	vmul.i32	q1, q8, q12
   3cc2c:	cmp	r9, r6
   3cc30:	vmul.i32	q8, q0, d0[1]
   3cc34:	vmul.i32	q9, q1, d2[1]
   3cc38:	vmov.32	lr, d16[0]
   3cc3c:	vmov.32	r4, d18[0]
   3cc40:	beq	3cb2c <GetDataSlab+0x89d0>
   3cc44:	vmov.32	r6, d20[0]
   3cc48:	sub	r8, fp, #96	; 0x60
   3cc4c:	mul	r4, r6, r4
   3cc50:	ldr	r6, [r0, r3, lsl #2]
   3cc54:	subs	r3, r3, #1
   3cc58:	mul	lr, lr, r6
   3cc5c:	bne	3cc4c <GetDataSlab+0x8af0>
   3cc60:	b	3cb30 <GetDataSlab+0x89d4>
   3cc64:	ldr	r5, [sl]
   3cc68:	mov	r7, #0
   3cc6c:	sub	r9, fp, #176	; 0xb0
   3cc70:	sub	r8, fp, #96	; 0x60
   3cc74:	sub	r0, r5, #1
   3cc78:	str	r0, [fp, #-96]	; 0xffffffa0
   3cc7c:	ldr	r0, [r3]
   3cc80:	str	r0, [sp, #72]	; 0x48
   3cc84:	str	r0, [fp, #-176]	; 0xffffff50
   3cc88:	ldr	r0, [fp, #20]
   3cc8c:	ldr	r1, [r0]
   3cc90:	ldr	r0, [fp, #24]
   3cc94:	cmp	r0, #2
   3cc98:	mov	r0, r1
   3cc9c:	str	r1, [sp, #76]	; 0x4c
   3cca0:	blt	4857c <GetDataSlab+0x14420>
   3cca4:	ldr	r0, [fp, #8]
   3cca8:	ldr	r4, [sp, #72]	; 0x48
   3ccac:	mov	r3, #0
   3ccb0:	mvn	ip, #15
   3ccb4:	mov	r7, #0
   3ccb8:	str	r1, [sp, #76]	; 0x4c
   3ccbc:	str	r3, [sp, #84]	; 0x54
   3ccc0:	mov	r3, r1
   3ccc4:	mov	r2, r0
   3ccc8:	sub	r0, r0, #4
   3cccc:	mov	r6, r4
   3ccd0:	sub	sl, r2, #12
   3ccd4:	mov	r2, #1
   3ccd8:	b	3cd2c <GetDataSlab+0x8bd0>
   3ccdc:	sub	r8, fp, #96	; 0x60
   3cce0:	ldr	r3, [fp, #12]
   3cce4:	sub	r9, fp, #176	; 0xb0
   3cce8:	str	lr, [r8, r2, lsl #2]
   3ccec:	ldr	r6, [sp, #68]	; 0x44
   3ccf0:	add	sl, sl, #4
   3ccf4:	str	r4, [r9, r2, lsl #2]
   3ccf8:	ldr	r3, [r3, r2, lsl #2]
   3ccfc:	mla	r7, r3, r6, r7
   3cd00:	ldr	r3, [fp, #20]
   3cd04:	ldr	r6, [sp, #76]	; 0x4c
   3cd08:	ldr	r3, [r3, r2, lsl #2]
   3cd0c:	add	r2, r2, #1
   3cd10:	mul	r6, r3, r6
   3cd14:	ldr	r3, [fp, #24]
   3cd18:	str	r6, [sp, #76]	; 0x4c
   3cd1c:	mov	r6, r4
   3cd20:	ldr	r4, [sp, #64]	; 0x40
   3cd24:	cmp	r2, r3
   3cd28:	beq	4857c <GetDataSlab+0x14420>
   3cd2c:	ldr	r3, [fp, #16]
   3cd30:	str	r6, [sp, #68]	; 0x44
   3cd34:	ldr	r3, [r3, r2, lsl #2]
   3cd38:	str	r4, [r9, r2, lsl #2]
   3cd3c:	ldr	r9, [sp, #84]	; 0x54
   3cd40:	sub	lr, r3, #1
   3cd44:	ldr	r3, [fp, #8]
   3cd48:	add	r9, r9, #1
   3cd4c:	str	lr, [r8, r2, lsl #2]
   3cd50:	cmp	r9, #4
   3cd54:	str	r9, [sp, #84]	; 0x54
   3cd58:	ldr	r6, [r3, r2, lsl #2]
   3cd5c:	str	r6, [sp, #64]	; 0x40
   3cd60:	bcs	3cd6c <GetDataSlab+0x8c10>
   3cd64:	mov	r3, r2
   3cd68:	b	3cdfc <GetDataSlab+0x8ca0>
   3cd6c:	vmov.i32	q9, #1	; 0x00000001
   3cd70:	vmov.i32	q10, #1	; 0x00000001
   3cd74:	vmov.32	d23[1], r6
   3cd78:	vmov.i32	q8, #1	; 0x00000001
   3cd7c:	bic	r3, r9, #3
   3cd80:	bic	r8, r2, #3
   3cd84:	mov	r6, sl
   3cd88:	str	r3, [sp, #60]	; 0x3c
   3cd8c:	sub	r3, r2, r3
   3cd90:	vmov.32	d18[0], r4
   3cd94:	vmov.32	d20[0], lr
   3cd98:	vorr	d16, d18, d18
   3cd9c:	vmov.i32	q9, #1	; 0x00000001
   3cda0:	vorr	d18, d20, d20
   3cda4:	vld1.32	{d20-d21}, [r6], ip
   3cda8:	subs	r8, r8, #4
   3cdac:	vrev64.32	q12, q10
   3cdb0:	vext.8	q12, q12, q12, #8
   3cdb4:	vext.8	q11, q11, q12, #12
   3cdb8:	vmul.i32	q9, q9, q12
   3cdbc:	vmul.i32	q8, q11, q8
   3cdc0:	vorr	q11, q12, q12
   3cdc4:	bne	3cda4 <GetDataSlab+0x8c48>
   3cdc8:	vext.8	q11, q9, q8, #8
   3cdcc:	vext.8	q12, q8, q8, #8
   3cdd0:	ldr	r6, [sp, #60]	; 0x3c
   3cdd4:	vmul.i32	q0, q9, q11
   3cdd8:	vmul.i32	q1, q8, q12
   3cddc:	cmp	r9, r6
   3cde0:	vmul.i32	q8, q0, d0[1]
   3cde4:	vmul.i32	q9, q1, d2[1]
   3cde8:	vmov.32	lr, d16[0]
   3cdec:	vmov.32	r4, d18[0]
   3cdf0:	beq	3ccdc <GetDataSlab+0x8b80>
   3cdf4:	vmov.32	r6, d20[0]
   3cdf8:	sub	r8, fp, #96	; 0x60
   3cdfc:	mul	r4, r6, r4
   3ce00:	ldr	r6, [r0, r3, lsl #2]
   3ce04:	subs	r3, r3, #1
   3ce08:	mul	lr, lr, r6
   3ce0c:	bne	3cdfc <GetDataSlab+0x8ca0>
   3ce10:	b	3cce0 <GetDataSlab+0x8b84>
   3ce14:	ldr	r5, [sl]
   3ce18:	mov	r7, #0
   3ce1c:	sub	r9, fp, #176	; 0xb0
   3ce20:	sub	r8, fp, #96	; 0x60
   3ce24:	sub	r0, r5, #1
   3ce28:	str	r0, [fp, #-96]	; 0xffffffa0
   3ce2c:	ldr	r0, [r3]
   3ce30:	str	r0, [sp, #72]	; 0x48
   3ce34:	str	r0, [fp, #-176]	; 0xffffff50
   3ce38:	ldr	r0, [fp, #20]
   3ce3c:	ldr	r1, [r0]
   3ce40:	ldr	r0, [fp, #24]
   3ce44:	cmp	r0, #2
   3ce48:	mov	r0, r1
   3ce4c:	str	r1, [sp, #76]	; 0x4c
   3ce50:	blt	48710 <GetDataSlab+0x145b4>
   3ce54:	ldr	r0, [fp, #8]
   3ce58:	ldr	r4, [sp, #72]	; 0x48
   3ce5c:	mov	r3, #0
   3ce60:	mvn	ip, #15
   3ce64:	mov	r7, #0
   3ce68:	str	r1, [sp, #76]	; 0x4c
   3ce6c:	str	r3, [sp, #84]	; 0x54
   3ce70:	mov	r3, r1
   3ce74:	mov	r2, r0
   3ce78:	sub	r0, r0, #4
   3ce7c:	mov	r6, r4
   3ce80:	sub	sl, r2, #12
   3ce84:	mov	r2, #1
   3ce88:	b	3cedc <GetDataSlab+0x8d80>
   3ce8c:	sub	r8, fp, #96	; 0x60
   3ce90:	ldr	r3, [fp, #12]
   3ce94:	sub	r9, fp, #176	; 0xb0
   3ce98:	str	lr, [r8, r2, lsl #2]
   3ce9c:	ldr	r6, [sp, #68]	; 0x44
   3cea0:	add	sl, sl, #4
   3cea4:	str	r4, [r9, r2, lsl #2]
   3cea8:	ldr	r3, [r3, r2, lsl #2]
   3ceac:	mla	r7, r3, r6, r7
   3ceb0:	ldr	r3, [fp, #20]
   3ceb4:	ldr	r6, [sp, #76]	; 0x4c
   3ceb8:	ldr	r3, [r3, r2, lsl #2]
   3cebc:	add	r2, r2, #1
   3cec0:	mul	r6, r3, r6
   3cec4:	ldr	r3, [fp, #24]
   3cec8:	str	r6, [sp, #76]	; 0x4c
   3cecc:	mov	r6, r4
   3ced0:	ldr	r4, [sp, #64]	; 0x40
   3ced4:	cmp	r2, r3
   3ced8:	beq	48710 <GetDataSlab+0x145b4>
   3cedc:	ldr	r3, [fp, #16]
   3cee0:	str	r6, [sp, #68]	; 0x44
   3cee4:	ldr	r3, [r3, r2, lsl #2]
   3cee8:	str	r4, [r9, r2, lsl #2]
   3ceec:	ldr	r9, [sp, #84]	; 0x54
   3cef0:	sub	lr, r3, #1
   3cef4:	ldr	r3, [fp, #8]
   3cef8:	add	r9, r9, #1
   3cefc:	str	lr, [r8, r2, lsl #2]
   3cf00:	cmp	r9, #4
   3cf04:	str	r9, [sp, #84]	; 0x54
   3cf08:	ldr	r6, [r3, r2, lsl #2]
   3cf0c:	str	r6, [sp, #64]	; 0x40
   3cf10:	bcs	3cf1c <GetDataSlab+0x8dc0>
   3cf14:	mov	r3, r2
   3cf18:	b	3cfac <GetDataSlab+0x8e50>
   3cf1c:	vmov.i32	q9, #1	; 0x00000001
   3cf20:	vmov.i32	q10, #1	; 0x00000001
   3cf24:	vmov.32	d23[1], r6
   3cf28:	vmov.i32	q8, #1	; 0x00000001
   3cf2c:	bic	r3, r9, #3
   3cf30:	bic	r8, r2, #3
   3cf34:	mov	r6, sl
   3cf38:	str	r3, [sp, #60]	; 0x3c
   3cf3c:	sub	r3, r2, r3
   3cf40:	vmov.32	d18[0], r4
   3cf44:	vmov.32	d20[0], lr
   3cf48:	vorr	d16, d18, d18
   3cf4c:	vmov.i32	q9, #1	; 0x00000001
   3cf50:	vorr	d18, d20, d20
   3cf54:	vld1.32	{d20-d21}, [r6], ip
   3cf58:	subs	r8, r8, #4
   3cf5c:	vrev64.32	q12, q10
   3cf60:	vext.8	q12, q12, q12, #8
   3cf64:	vext.8	q11, q11, q12, #12
   3cf68:	vmul.i32	q9, q9, q12
   3cf6c:	vmul.i32	q8, q11, q8
   3cf70:	vorr	q11, q12, q12
   3cf74:	bne	3cf54 <GetDataSlab+0x8df8>
   3cf78:	vext.8	q11, q9, q8, #8
   3cf7c:	vext.8	q12, q8, q8, #8
   3cf80:	ldr	r6, [sp, #60]	; 0x3c
   3cf84:	vmul.i32	q0, q9, q11
   3cf88:	vmul.i32	q1, q8, q12
   3cf8c:	cmp	r9, r6
   3cf90:	vmul.i32	q8, q0, d0[1]
   3cf94:	vmul.i32	q9, q1, d2[1]
   3cf98:	vmov.32	lr, d16[0]
   3cf9c:	vmov.32	r4, d18[0]
   3cfa0:	beq	3ce8c <GetDataSlab+0x8d30>
   3cfa4:	vmov.32	r6, d20[0]
   3cfa8:	sub	r8, fp, #96	; 0x60
   3cfac:	mul	r4, r6, r4
   3cfb0:	ldr	r6, [r0, r3, lsl #2]
   3cfb4:	subs	r3, r3, #1
   3cfb8:	mul	lr, lr, r6
   3cfbc:	bne	3cfac <GetDataSlab+0x8e50>
   3cfc0:	b	3ce90 <GetDataSlab+0x8d34>
   3cfc4:	ldr	r5, [sl]
   3cfc8:	mov	r7, #0
   3cfcc:	sub	r9, fp, #176	; 0xb0
   3cfd0:	sub	r8, fp, #96	; 0x60
   3cfd4:	sub	r0, r5, #1
   3cfd8:	str	r0, [fp, #-96]	; 0xffffffa0
   3cfdc:	ldr	r0, [r3]
   3cfe0:	str	r0, [sp, #72]	; 0x48
   3cfe4:	str	r0, [fp, #-176]	; 0xffffff50
   3cfe8:	ldr	r0, [fp, #20]
   3cfec:	ldr	r1, [r0]
   3cff0:	ldr	r0, [fp, #24]
   3cff4:	cmp	r0, #2
   3cff8:	mov	r0, r1
   3cffc:	str	r1, [sp, #76]	; 0x4c
   3d000:	blt	488a4 <GetDataSlab+0x14748>
   3d004:	ldr	r0, [fp, #8]
   3d008:	ldr	r4, [sp, #72]	; 0x48
   3d00c:	mov	r3, #0
   3d010:	mvn	ip, #15
   3d014:	mov	r7, #0
   3d018:	str	r1, [sp, #76]	; 0x4c
   3d01c:	str	r3, [sp, #84]	; 0x54
   3d020:	mov	r3, r1
   3d024:	mov	r2, r0
   3d028:	sub	r0, r0, #4
   3d02c:	mov	r6, r4
   3d030:	sub	sl, r2, #12
   3d034:	mov	r2, #1
   3d038:	b	3d08c <GetDataSlab+0x8f30>
   3d03c:	sub	r8, fp, #96	; 0x60
   3d040:	ldr	r3, [fp, #12]
   3d044:	sub	r9, fp, #176	; 0xb0
   3d048:	str	lr, [r8, r2, lsl #2]
   3d04c:	ldr	r6, [sp, #68]	; 0x44
   3d050:	add	sl, sl, #4
   3d054:	str	r4, [r9, r2, lsl #2]
   3d058:	ldr	r3, [r3, r2, lsl #2]
   3d05c:	mla	r7, r3, r6, r7
   3d060:	ldr	r3, [fp, #20]
   3d064:	ldr	r6, [sp, #76]	; 0x4c
   3d068:	ldr	r3, [r3, r2, lsl #2]
   3d06c:	add	r2, r2, #1
   3d070:	mul	r6, r3, r6
   3d074:	ldr	r3, [fp, #24]
   3d078:	str	r6, [sp, #76]	; 0x4c
   3d07c:	mov	r6, r4
   3d080:	ldr	r4, [sp, #64]	; 0x40
   3d084:	cmp	r2, r3
   3d088:	beq	488a4 <GetDataSlab+0x14748>
   3d08c:	ldr	r3, [fp, #16]
   3d090:	str	r6, [sp, #68]	; 0x44
   3d094:	ldr	r3, [r3, r2, lsl #2]
   3d098:	str	r4, [r9, r2, lsl #2]
   3d09c:	ldr	r9, [sp, #84]	; 0x54
   3d0a0:	sub	lr, r3, #1
   3d0a4:	ldr	r3, [fp, #8]
   3d0a8:	add	r9, r9, #1
   3d0ac:	str	lr, [r8, r2, lsl #2]
   3d0b0:	cmp	r9, #4
   3d0b4:	str	r9, [sp, #84]	; 0x54
   3d0b8:	ldr	r6, [r3, r2, lsl #2]
   3d0bc:	str	r6, [sp, #64]	; 0x40
   3d0c0:	bcs	3d0cc <GetDataSlab+0x8f70>
   3d0c4:	mov	r3, r2
   3d0c8:	b	3d15c <GetDataSlab+0x9000>
   3d0cc:	vmov.i32	q9, #1	; 0x00000001
   3d0d0:	vmov.i32	q10, #1	; 0x00000001
   3d0d4:	vmov.32	d23[1], r6
   3d0d8:	vmov.i32	q8, #1	; 0x00000001
   3d0dc:	bic	r3, r9, #3
   3d0e0:	bic	r8, r2, #3
   3d0e4:	mov	r6, sl
   3d0e8:	str	r3, [sp, #60]	; 0x3c
   3d0ec:	sub	r3, r2, r3
   3d0f0:	vmov.32	d18[0], r4
   3d0f4:	vmov.32	d20[0], lr
   3d0f8:	vorr	d16, d18, d18
   3d0fc:	vmov.i32	q9, #1	; 0x00000001
   3d100:	vorr	d18, d20, d20
   3d104:	vld1.32	{d20-d21}, [r6], ip
   3d108:	subs	r8, r8, #4
   3d10c:	vrev64.32	q12, q10
   3d110:	vext.8	q12, q12, q12, #8
   3d114:	vext.8	q11, q11, q12, #12
   3d118:	vmul.i32	q9, q9, q12
   3d11c:	vmul.i32	q8, q11, q8
   3d120:	vorr	q11, q12, q12
   3d124:	bne	3d104 <GetDataSlab+0x8fa8>
   3d128:	vext.8	q11, q9, q8, #8
   3d12c:	vext.8	q12, q8, q8, #8
   3d130:	ldr	r6, [sp, #60]	; 0x3c
   3d134:	vmul.i32	q0, q9, q11
   3d138:	vmul.i32	q1, q8, q12
   3d13c:	cmp	r9, r6
   3d140:	vmul.i32	q8, q0, d0[1]
   3d144:	vmul.i32	q9, q1, d2[1]
   3d148:	vmov.32	lr, d16[0]
   3d14c:	vmov.32	r4, d18[0]
   3d150:	beq	3d03c <GetDataSlab+0x8ee0>
   3d154:	vmov.32	r6, d20[0]
   3d158:	sub	r8, fp, #96	; 0x60
   3d15c:	mul	r4, r6, r4
   3d160:	ldr	r6, [r0, r3, lsl #2]
   3d164:	subs	r3, r3, #1
   3d168:	mul	lr, lr, r6
   3d16c:	bne	3d15c <GetDataSlab+0x9000>
   3d170:	b	3d040 <GetDataSlab+0x8ee4>
   3d174:	ldr	r5, [sl]
   3d178:	mov	r7, #0
   3d17c:	sub	r9, fp, #176	; 0xb0
   3d180:	sub	r8, fp, #96	; 0x60
   3d184:	sub	r0, r5, #1
   3d188:	str	r0, [fp, #-96]	; 0xffffffa0
   3d18c:	ldr	r0, [r3]
   3d190:	str	r0, [sp, #72]	; 0x48
   3d194:	str	r0, [fp, #-176]	; 0xffffff50
   3d198:	ldr	r0, [fp, #20]
   3d19c:	ldr	r1, [r0]
   3d1a0:	ldr	r0, [fp, #24]
   3d1a4:	cmp	r0, #2
   3d1a8:	mov	r0, r1
   3d1ac:	str	r1, [sp, #76]	; 0x4c
   3d1b0:	blt	48a38 <GetDataSlab+0x148dc>
   3d1b4:	ldr	r0, [fp, #8]
   3d1b8:	ldr	r4, [sp, #72]	; 0x48
   3d1bc:	mov	r3, #0
   3d1c0:	mvn	ip, #15
   3d1c4:	mov	r7, #0
   3d1c8:	str	r1, [sp, #76]	; 0x4c
   3d1cc:	str	r3, [sp, #84]	; 0x54
   3d1d0:	mov	r3, r1
   3d1d4:	mov	r2, r0
   3d1d8:	sub	r0, r0, #4
   3d1dc:	mov	r6, r4
   3d1e0:	sub	sl, r2, #12
   3d1e4:	mov	r2, #1
   3d1e8:	b	3d23c <GetDataSlab+0x90e0>
   3d1ec:	sub	r8, fp, #96	; 0x60
   3d1f0:	ldr	r3, [fp, #12]
   3d1f4:	sub	r9, fp, #176	; 0xb0
   3d1f8:	str	lr, [r8, r2, lsl #2]
   3d1fc:	ldr	r6, [sp, #68]	; 0x44
   3d200:	add	sl, sl, #4
   3d204:	str	r4, [r9, r2, lsl #2]
   3d208:	ldr	r3, [r3, r2, lsl #2]
   3d20c:	mla	r7, r3, r6, r7
   3d210:	ldr	r3, [fp, #20]
   3d214:	ldr	r6, [sp, #76]	; 0x4c
   3d218:	ldr	r3, [r3, r2, lsl #2]
   3d21c:	add	r2, r2, #1
   3d220:	mul	r6, r3, r6
   3d224:	ldr	r3, [fp, #24]
   3d228:	str	r6, [sp, #76]	; 0x4c
   3d22c:	mov	r6, r4
   3d230:	ldr	r4, [sp, #64]	; 0x40
   3d234:	cmp	r2, r3
   3d238:	beq	48a38 <GetDataSlab+0x148dc>
   3d23c:	ldr	r3, [fp, #16]
   3d240:	str	r6, [sp, #68]	; 0x44
   3d244:	ldr	r3, [r3, r2, lsl #2]
   3d248:	str	r4, [r9, r2, lsl #2]
   3d24c:	ldr	r9, [sp, #84]	; 0x54
   3d250:	sub	lr, r3, #1
   3d254:	ldr	r3, [fp, #8]
   3d258:	add	r9, r9, #1
   3d25c:	str	lr, [r8, r2, lsl #2]
   3d260:	cmp	r9, #4
   3d264:	str	r9, [sp, #84]	; 0x54
   3d268:	ldr	r6, [r3, r2, lsl #2]
   3d26c:	str	r6, [sp, #64]	; 0x40
   3d270:	bcs	3d27c <GetDataSlab+0x9120>
   3d274:	mov	r3, r2
   3d278:	b	3d30c <GetDataSlab+0x91b0>
   3d27c:	vmov.i32	q9, #1	; 0x00000001
   3d280:	vmov.i32	q10, #1	; 0x00000001
   3d284:	vmov.32	d23[1], r6
   3d288:	vmov.i32	q8, #1	; 0x00000001
   3d28c:	bic	r3, r9, #3
   3d290:	bic	r8, r2, #3
   3d294:	mov	r6, sl
   3d298:	str	r3, [sp, #60]	; 0x3c
   3d29c:	sub	r3, r2, r3
   3d2a0:	vmov.32	d18[0], r4
   3d2a4:	vmov.32	d20[0], lr
   3d2a8:	vorr	d16, d18, d18
   3d2ac:	vmov.i32	q9, #1	; 0x00000001
   3d2b0:	vorr	d18, d20, d20
   3d2b4:	vld1.32	{d20-d21}, [r6], ip
   3d2b8:	subs	r8, r8, #4
   3d2bc:	vrev64.32	q12, q10
   3d2c0:	vext.8	q12, q12, q12, #8
   3d2c4:	vext.8	q11, q11, q12, #12
   3d2c8:	vmul.i32	q9, q9, q12
   3d2cc:	vmul.i32	q8, q11, q8
   3d2d0:	vorr	q11, q12, q12
   3d2d4:	bne	3d2b4 <GetDataSlab+0x9158>
   3d2d8:	vext.8	q11, q9, q8, #8
   3d2dc:	vext.8	q12, q8, q8, #8
   3d2e0:	ldr	r6, [sp, #60]	; 0x3c
   3d2e4:	vmul.i32	q0, q9, q11
   3d2e8:	vmul.i32	q1, q8, q12
   3d2ec:	cmp	r9, r6
   3d2f0:	vmul.i32	q8, q0, d0[1]
   3d2f4:	vmul.i32	q9, q1, d2[1]
   3d2f8:	vmov.32	lr, d16[0]
   3d2fc:	vmov.32	r4, d18[0]
   3d300:	beq	3d1ec <GetDataSlab+0x9090>
   3d304:	vmov.32	r6, d20[0]
   3d308:	sub	r8, fp, #96	; 0x60
   3d30c:	mul	r4, r6, r4
   3d310:	ldr	r6, [r0, r3, lsl #2]
   3d314:	subs	r3, r3, #1
   3d318:	mul	lr, lr, r6
   3d31c:	bne	3d30c <GetDataSlab+0x91b0>
   3d320:	b	3d1f0 <GetDataSlab+0x9094>
   3d324:	ldr	r5, [sl]
   3d328:	mov	r7, #0
   3d32c:	sub	r9, fp, #176	; 0xb0
   3d330:	sub	r8, fp, #96	; 0x60
   3d334:	sub	r0, r5, #1
   3d338:	str	r0, [fp, #-96]	; 0xffffffa0
   3d33c:	ldr	r0, [r3]
   3d340:	str	r0, [sp, #72]	; 0x48
   3d344:	str	r0, [fp, #-176]	; 0xffffff50
   3d348:	ldr	r0, [fp, #20]
   3d34c:	ldr	r1, [r0]
   3d350:	ldr	r0, [fp, #24]
   3d354:	cmp	r0, #2
   3d358:	mov	r0, r1
   3d35c:	str	r1, [sp, #76]	; 0x4c
   3d360:	blt	48bd8 <GetDataSlab+0x14a7c>
   3d364:	ldr	r0, [fp, #8]
   3d368:	ldr	r4, [sp, #72]	; 0x48
   3d36c:	mov	r3, #0
   3d370:	mvn	ip, #15
   3d374:	mov	r7, #0
   3d378:	str	r1, [sp, #76]	; 0x4c
   3d37c:	str	r3, [sp, #84]	; 0x54
   3d380:	mov	r3, r1
   3d384:	mov	r2, r0
   3d388:	sub	r0, r0, #4
   3d38c:	mov	r6, r4
   3d390:	sub	sl, r2, #12
   3d394:	mov	r2, #1
   3d398:	b	3d3ec <GetDataSlab+0x9290>
   3d39c:	sub	r8, fp, #96	; 0x60
   3d3a0:	ldr	r3, [fp, #12]
   3d3a4:	sub	r9, fp, #176	; 0xb0
   3d3a8:	str	lr, [r8, r2, lsl #2]
   3d3ac:	ldr	r6, [sp, #68]	; 0x44
   3d3b0:	add	sl, sl, #4
   3d3b4:	str	r4, [r9, r2, lsl #2]
   3d3b8:	ldr	r3, [r3, r2, lsl #2]
   3d3bc:	mla	r7, r3, r6, r7
   3d3c0:	ldr	r3, [fp, #20]
   3d3c4:	ldr	r6, [sp, #76]	; 0x4c
   3d3c8:	ldr	r3, [r3, r2, lsl #2]
   3d3cc:	add	r2, r2, #1
   3d3d0:	mul	r6, r3, r6
   3d3d4:	ldr	r3, [fp, #24]
   3d3d8:	str	r6, [sp, #76]	; 0x4c
   3d3dc:	mov	r6, r4
   3d3e0:	ldr	r4, [sp, #64]	; 0x40
   3d3e4:	cmp	r2, r3
   3d3e8:	beq	48bd8 <GetDataSlab+0x14a7c>
   3d3ec:	ldr	r3, [fp, #16]
   3d3f0:	str	r6, [sp, #68]	; 0x44
   3d3f4:	ldr	r3, [r3, r2, lsl #2]
   3d3f8:	str	r4, [r9, r2, lsl #2]
   3d3fc:	ldr	r9, [sp, #84]	; 0x54
   3d400:	sub	lr, r3, #1
   3d404:	ldr	r3, [fp, #8]
   3d408:	add	r9, r9, #1
   3d40c:	str	lr, [r8, r2, lsl #2]
   3d410:	cmp	r9, #4
   3d414:	str	r9, [sp, #84]	; 0x54
   3d418:	ldr	r6, [r3, r2, lsl #2]
   3d41c:	str	r6, [sp, #64]	; 0x40
   3d420:	bcs	3d42c <GetDataSlab+0x92d0>
   3d424:	mov	r3, r2
   3d428:	b	3d4bc <GetDataSlab+0x9360>
   3d42c:	vmov.i32	q9, #1	; 0x00000001
   3d430:	vmov.i32	q10, #1	; 0x00000001
   3d434:	vmov.32	d23[1], r6
   3d438:	vmov.i32	q8, #1	; 0x00000001
   3d43c:	bic	r3, r9, #3
   3d440:	bic	r8, r2, #3
   3d444:	mov	r6, sl
   3d448:	str	r3, [sp, #60]	; 0x3c
   3d44c:	sub	r3, r2, r3
   3d450:	vmov.32	d18[0], r4
   3d454:	vmov.32	d20[0], lr
   3d458:	vorr	d16, d18, d18
   3d45c:	vmov.i32	q9, #1	; 0x00000001
   3d460:	vorr	d18, d20, d20
   3d464:	vld1.32	{d20-d21}, [r6], ip
   3d468:	subs	r8, r8, #4
   3d46c:	vrev64.32	q12, q10
   3d470:	vext.8	q12, q12, q12, #8
   3d474:	vext.8	q11, q11, q12, #12
   3d478:	vmul.i32	q9, q9, q12
   3d47c:	vmul.i32	q8, q11, q8
   3d480:	vorr	q11, q12, q12
   3d484:	bne	3d464 <GetDataSlab+0x9308>
   3d488:	vext.8	q11, q9, q8, #8
   3d48c:	vext.8	q12, q8, q8, #8
   3d490:	ldr	r6, [sp, #60]	; 0x3c
   3d494:	vmul.i32	q0, q9, q11
   3d498:	vmul.i32	q1, q8, q12
   3d49c:	cmp	r9, r6
   3d4a0:	vmul.i32	q8, q0, d0[1]
   3d4a4:	vmul.i32	q9, q1, d2[1]
   3d4a8:	vmov.32	lr, d16[0]
   3d4ac:	vmov.32	r4, d18[0]
   3d4b0:	beq	3d39c <GetDataSlab+0x9240>
   3d4b4:	vmov.32	r6, d20[0]
   3d4b8:	sub	r8, fp, #96	; 0x60
   3d4bc:	mul	r4, r6, r4
   3d4c0:	ldr	r6, [r0, r3, lsl #2]
   3d4c4:	subs	r3, r3, #1
   3d4c8:	mul	lr, lr, r6
   3d4cc:	bne	3d4bc <GetDataSlab+0x9360>
   3d4d0:	b	3d3a0 <GetDataSlab+0x9244>
   3d4d4:	ldr	r7, [sl]
   3d4d8:	sub	r6, fp, #176	; 0xb0
   3d4dc:	sub	r8, fp, #96	; 0x60
   3d4e0:	sub	r0, r7, #1
   3d4e4:	str	r0, [fp, #-96]	; 0xffffffa0
   3d4e8:	ldr	r0, [r3]
   3d4ec:	mov	r3, #0
   3d4f0:	str	r0, [sp, #64]	; 0x40
   3d4f4:	str	r0, [fp, #-176]	; 0xffffff50
   3d4f8:	ldr	r0, [fp, #20]
   3d4fc:	ldr	r1, [r0]
   3d500:	ldr	r0, [fp, #24]
   3d504:	cmp	r0, #2
   3d508:	mov	r0, r1
   3d50c:	str	r1, [sp, #68]	; 0x44
   3d510:	blt	48d78 <GetDataSlab+0x14c1c>
   3d514:	ldr	r0, [fp, #8]
   3d518:	ldr	r5, [sp, #64]	; 0x40
   3d51c:	mov	ip, #1
   3d520:	mvn	sl, #15
   3d524:	mov	r3, #0
   3d528:	str	r1, [sp, #68]	; 0x44
   3d52c:	mov	r2, r0
   3d530:	sub	r0, r0, #4
   3d534:	mov	r4, r5
   3d538:	sub	lr, r2, #12
   3d53c:	mov	r2, #0
   3d540:	str	r2, [sp, #76]	; 0x4c
   3d544:	mov	r2, r1
   3d548:	b	3d59c <GetDataSlab+0x9440>
   3d54c:	ldr	r4, [sp, #56]	; 0x38
   3d550:	sub	r8, fp, #96	; 0x60
   3d554:	ldr	r2, [fp, #12]
   3d558:	sub	r6, fp, #176	; 0xb0
   3d55c:	str	r9, [r8, ip, lsl #2]
   3d560:	add	lr, lr, #4
   3d564:	str	r5, [r6, ip, lsl #2]
   3d568:	ldr	r2, [r2, ip, lsl #2]
   3d56c:	mla	r3, r2, r4, r3
   3d570:	ldr	r2, [fp, #20]
   3d574:	ldr	r4, [sp, #68]	; 0x44
   3d578:	ldr	r2, [r2, ip, lsl #2]
   3d57c:	add	ip, ip, #1
   3d580:	mul	r4, r2, r4
   3d584:	ldr	r2, [fp, #24]
   3d588:	str	r4, [sp, #68]	; 0x44
   3d58c:	mov	r4, r5
   3d590:	ldr	r5, [sp, #72]	; 0x48
   3d594:	cmp	ip, r2
   3d598:	beq	48d78 <GetDataSlab+0x14c1c>
   3d59c:	ldr	r2, [fp, #16]
   3d5a0:	ldr	r2, [r2, ip, lsl #2]
   3d5a4:	str	r5, [r6, ip, lsl #2]
   3d5a8:	sub	r9, r2, #1
   3d5ac:	ldr	r2, [fp, #8]
   3d5b0:	str	r9, [r8, ip, lsl #2]
   3d5b4:	ldr	r6, [r2, ip, lsl #2]
   3d5b8:	ldr	r2, [sp, #76]	; 0x4c
   3d5bc:	add	r2, r2, #1
   3d5c0:	str	r6, [sp, #72]	; 0x48
   3d5c4:	cmp	r2, #4
   3d5c8:	str	r2, [sp, #76]	; 0x4c
   3d5cc:	bcs	3d5dc <GetDataSlab+0x9480>
   3d5d0:	mov	r2, r6
   3d5d4:	mov	r6, ip
   3d5d8:	b	3d678 <GetDataSlab+0x951c>
   3d5dc:	vmov.i32	q9, #1	; 0x00000001
   3d5e0:	vmov.i32	q10, #1	; 0x00000001
   3d5e4:	vmov.32	d23[1], r6
   3d5e8:	vmov.i32	q8, #1	; 0x00000001
   3d5ec:	bic	r2, r2, #3
   3d5f0:	bic	r8, ip, #3
   3d5f4:	str	r4, [sp, #56]	; 0x38
   3d5f8:	str	r2, [sp, #60]	; 0x3c
   3d5fc:	sub	r6, ip, r2
   3d600:	mov	r2, lr
   3d604:	vmov.32	d18[0], r5
   3d608:	vmov.32	d20[0], r9
   3d60c:	vorr	d16, d18, d18
   3d610:	vmov.i32	q9, #1	; 0x00000001
   3d614:	vorr	d18, d20, d20
   3d618:	vld1.32	{d20-d21}, [r2], sl
   3d61c:	subs	r8, r8, #4
   3d620:	vrev64.32	q12, q10
   3d624:	vext.8	q12, q12, q12, #8
   3d628:	vext.8	q11, q11, q12, #12
   3d62c:	vmul.i32	q9, q9, q12
   3d630:	vmul.i32	q8, q11, q8
   3d634:	vorr	q11, q12, q12
   3d638:	bne	3d618 <GetDataSlab+0x94bc>
   3d63c:	vext.8	q11, q9, q8, #8
   3d640:	vext.8	q12, q8, q8, #8
   3d644:	ldr	r2, [sp, #76]	; 0x4c
   3d648:	ldr	r4, [sp, #60]	; 0x3c
   3d64c:	vmul.i32	q0, q9, q11
   3d650:	vmul.i32	q1, q8, q12
   3d654:	cmp	r2, r4
   3d658:	vmul.i32	q8, q0, d0[1]
   3d65c:	vmul.i32	q9, q1, d2[1]
   3d660:	vmov.32	r9, d16[0]
   3d664:	vmov.32	r5, d18[0]
   3d668:	beq	3d54c <GetDataSlab+0x93f0>
   3d66c:	vmov.32	r2, d20[0]
   3d670:	ldr	r4, [sp, #56]	; 0x38
   3d674:	sub	r8, fp, #96	; 0x60
   3d678:	mul	r5, r2, r5
   3d67c:	ldr	r2, [r0, r6, lsl #2]
   3d680:	subs	r6, r6, #1
   3d684:	mul	r9, r9, r2
   3d688:	bne	3d678 <GetDataSlab+0x951c>
   3d68c:	b	3d554 <GetDataSlab+0x93f8>
   3d690:	ldr	r5, [sl]
   3d694:	mov	r7, #0
   3d698:	sub	r9, fp, #176	; 0xb0
   3d69c:	sub	r8, fp, #96	; 0x60
   3d6a0:	sub	r0, r5, #1
   3d6a4:	str	r0, [fp, #-96]	; 0xffffffa0
   3d6a8:	ldr	r0, [r3]
   3d6ac:	str	r0, [sp, #72]	; 0x48
   3d6b0:	str	r0, [fp, #-176]	; 0xffffff50
   3d6b4:	ldr	r0, [fp, #20]
   3d6b8:	ldr	r1, [r0]
   3d6bc:	ldr	r0, [fp, #24]
   3d6c0:	cmp	r0, #2
   3d6c4:	mov	r0, r1
   3d6c8:	str	r1, [sp, #76]	; 0x4c
   3d6cc:	blt	48f00 <GetDataSlab+0x14da4>
   3d6d0:	ldr	r0, [fp, #8]
   3d6d4:	ldr	r4, [sp, #72]	; 0x48
   3d6d8:	mov	r3, #0
   3d6dc:	mvn	ip, #15
   3d6e0:	mov	r7, #0
   3d6e4:	str	r1, [sp, #76]	; 0x4c
   3d6e8:	str	r3, [sp, #84]	; 0x54
   3d6ec:	mov	r3, r1
   3d6f0:	mov	r2, r0
   3d6f4:	sub	r0, r0, #4
   3d6f8:	mov	r6, r4
   3d6fc:	sub	sl, r2, #12
   3d700:	mov	r2, #1
   3d704:	b	3d758 <GetDataSlab+0x95fc>
   3d708:	sub	r8, fp, #96	; 0x60
   3d70c:	ldr	r3, [fp, #12]
   3d710:	sub	r9, fp, #176	; 0xb0
   3d714:	str	lr, [r8, r2, lsl #2]
   3d718:	ldr	r6, [sp, #68]	; 0x44
   3d71c:	add	sl, sl, #4
   3d720:	str	r4, [r9, r2, lsl #2]
   3d724:	ldr	r3, [r3, r2, lsl #2]
   3d728:	mla	r7, r3, r6, r7
   3d72c:	ldr	r3, [fp, #20]
   3d730:	ldr	r6, [sp, #76]	; 0x4c
   3d734:	ldr	r3, [r3, r2, lsl #2]
   3d738:	add	r2, r2, #1
   3d73c:	mul	r6, r3, r6
   3d740:	ldr	r3, [fp, #24]
   3d744:	str	r6, [sp, #76]	; 0x4c
   3d748:	mov	r6, r4
   3d74c:	ldr	r4, [sp, #64]	; 0x40
   3d750:	cmp	r2, r3
   3d754:	beq	48f00 <GetDataSlab+0x14da4>
   3d758:	ldr	r3, [fp, #16]
   3d75c:	str	r6, [sp, #68]	; 0x44
   3d760:	ldr	r3, [r3, r2, lsl #2]
   3d764:	str	r4, [r9, r2, lsl #2]
   3d768:	ldr	r9, [sp, #84]	; 0x54
   3d76c:	sub	lr, r3, #1
   3d770:	ldr	r3, [fp, #8]
   3d774:	add	r9, r9, #1
   3d778:	str	lr, [r8, r2, lsl #2]
   3d77c:	cmp	r9, #4
   3d780:	str	r9, [sp, #84]	; 0x54
   3d784:	ldr	r6, [r3, r2, lsl #2]
   3d788:	str	r6, [sp, #64]	; 0x40
   3d78c:	bcs	3d798 <GetDataSlab+0x963c>
   3d790:	mov	r3, r2
   3d794:	b	3d828 <GetDataSlab+0x96cc>
   3d798:	vmov.i32	q9, #1	; 0x00000001
   3d79c:	vmov.i32	q10, #1	; 0x00000001
   3d7a0:	vmov.32	d23[1], r6
   3d7a4:	vmov.i32	q8, #1	; 0x00000001
   3d7a8:	bic	r3, r9, #3
   3d7ac:	bic	r8, r2, #3
   3d7b0:	mov	r6, sl
   3d7b4:	str	r3, [sp, #60]	; 0x3c
   3d7b8:	sub	r3, r2, r3
   3d7bc:	vmov.32	d18[0], r4
   3d7c0:	vmov.32	d20[0], lr
   3d7c4:	vorr	d16, d18, d18
   3d7c8:	vmov.i32	q9, #1	; 0x00000001
   3d7cc:	vorr	d18, d20, d20
   3d7d0:	vld1.32	{d20-d21}, [r6], ip
   3d7d4:	subs	r8, r8, #4
   3d7d8:	vrev64.32	q12, q10
   3d7dc:	vext.8	q12, q12, q12, #8
   3d7e0:	vext.8	q11, q11, q12, #12
   3d7e4:	vmul.i32	q9, q9, q12
   3d7e8:	vmul.i32	q8, q11, q8
   3d7ec:	vorr	q11, q12, q12
   3d7f0:	bne	3d7d0 <GetDataSlab+0x9674>
   3d7f4:	vext.8	q11, q9, q8, #8
   3d7f8:	vext.8	q12, q8, q8, #8
   3d7fc:	ldr	r6, [sp, #60]	; 0x3c
   3d800:	vmul.i32	q0, q9, q11
   3d804:	vmul.i32	q1, q8, q12
   3d808:	cmp	r9, r6
   3d80c:	vmul.i32	q8, q0, d0[1]
   3d810:	vmul.i32	q9, q1, d2[1]
   3d814:	vmov.32	lr, d16[0]
   3d818:	vmov.32	r4, d18[0]
   3d81c:	beq	3d708 <GetDataSlab+0x95ac>
   3d820:	vmov.32	r6, d20[0]
   3d824:	sub	r8, fp, #96	; 0x60
   3d828:	mul	r4, r6, r4
   3d82c:	ldr	r6, [r0, r3, lsl #2]
   3d830:	subs	r3, r3, #1
   3d834:	mul	lr, lr, r6
   3d838:	bne	3d828 <GetDataSlab+0x96cc>
   3d83c:	b	3d70c <GetDataSlab+0x95b0>
   3d840:	ldr	r5, [sl]
   3d844:	mov	r7, #0
   3d848:	sub	r9, fp, #176	; 0xb0
   3d84c:	sub	r8, fp, #96	; 0x60
   3d850:	sub	r0, r5, #1
   3d854:	str	r0, [fp, #-96]	; 0xffffffa0
   3d858:	ldr	r0, [r3]
   3d85c:	str	r0, [sp, #72]	; 0x48
   3d860:	str	r0, [fp, #-176]	; 0xffffff50
   3d864:	ldr	r0, [fp, #20]
   3d868:	ldr	r1, [r0]
   3d86c:	ldr	r0, [fp, #24]
   3d870:	cmp	r0, #2
   3d874:	mov	r0, r1
   3d878:	str	r1, [sp, #76]	; 0x4c
   3d87c:	blt	490a0 <GetDataSlab+0x14f44>
   3d880:	ldr	r0, [fp, #8]
   3d884:	ldr	r4, [sp, #72]	; 0x48
   3d888:	mov	r3, #0
   3d88c:	mvn	ip, #15
   3d890:	mov	r7, #0
   3d894:	str	r1, [sp, #76]	; 0x4c
   3d898:	str	r3, [sp, #84]	; 0x54
   3d89c:	mov	r3, r1
   3d8a0:	mov	r2, r0
   3d8a4:	sub	r0, r0, #4
   3d8a8:	mov	r6, r4
   3d8ac:	sub	sl, r2, #12
   3d8b0:	mov	r2, #1
   3d8b4:	b	3d908 <GetDataSlab+0x97ac>
   3d8b8:	sub	r8, fp, #96	; 0x60
   3d8bc:	ldr	r3, [fp, #12]
   3d8c0:	sub	r9, fp, #176	; 0xb0
   3d8c4:	str	lr, [r8, r2, lsl #2]
   3d8c8:	ldr	r6, [sp, #68]	; 0x44
   3d8cc:	add	sl, sl, #4
   3d8d0:	str	r4, [r9, r2, lsl #2]
   3d8d4:	ldr	r3, [r3, r2, lsl #2]
   3d8d8:	mla	r7, r3, r6, r7
   3d8dc:	ldr	r3, [fp, #20]
   3d8e0:	ldr	r6, [sp, #76]	; 0x4c
   3d8e4:	ldr	r3, [r3, r2, lsl #2]
   3d8e8:	add	r2, r2, #1
   3d8ec:	mul	r6, r3, r6
   3d8f0:	ldr	r3, [fp, #24]
   3d8f4:	str	r6, [sp, #76]	; 0x4c
   3d8f8:	mov	r6, r4
   3d8fc:	ldr	r4, [sp, #64]	; 0x40
   3d900:	cmp	r2, r3
   3d904:	beq	490a0 <GetDataSlab+0x14f44>
   3d908:	ldr	r3, [fp, #16]
   3d90c:	str	r6, [sp, #68]	; 0x44
   3d910:	ldr	r3, [r3, r2, lsl #2]
   3d914:	str	r4, [r9, r2, lsl #2]
   3d918:	ldr	r9, [sp, #84]	; 0x54
   3d91c:	sub	lr, r3, #1
   3d920:	ldr	r3, [fp, #8]
   3d924:	add	r9, r9, #1
   3d928:	str	lr, [r8, r2, lsl #2]
   3d92c:	cmp	r9, #4
   3d930:	str	r9, [sp, #84]	; 0x54
   3d934:	ldr	r6, [r3, r2, lsl #2]
   3d938:	str	r6, [sp, #64]	; 0x40
   3d93c:	bcs	3d948 <GetDataSlab+0x97ec>
   3d940:	mov	r3, r2
   3d944:	b	3d9d8 <GetDataSlab+0x987c>
   3d948:	vmov.i32	q9, #1	; 0x00000001
   3d94c:	vmov.i32	q10, #1	; 0x00000001
   3d950:	vmov.32	d23[1], r6
   3d954:	vmov.i32	q8, #1	; 0x00000001
   3d958:	bic	r3, r9, #3
   3d95c:	bic	r8, r2, #3
   3d960:	mov	r6, sl
   3d964:	str	r3, [sp, #60]	; 0x3c
   3d968:	sub	r3, r2, r3
   3d96c:	vmov.32	d18[0], r4
   3d970:	vmov.32	d20[0], lr
   3d974:	vorr	d16, d18, d18
   3d978:	vmov.i32	q9, #1	; 0x00000001
   3d97c:	vorr	d18, d20, d20
   3d980:	vld1.32	{d20-d21}, [r6], ip
   3d984:	subs	r8, r8, #4
   3d988:	vrev64.32	q12, q10
   3d98c:	vext.8	q12, q12, q12, #8
   3d990:	vext.8	q11, q11, q12, #12
   3d994:	vmul.i32	q9, q9, q12
   3d998:	vmul.i32	q8, q11, q8
   3d99c:	vorr	q11, q12, q12
   3d9a0:	bne	3d980 <GetDataSlab+0x9824>
   3d9a4:	vext.8	q11, q9, q8, #8
   3d9a8:	vext.8	q12, q8, q8, #8
   3d9ac:	ldr	r6, [sp, #60]	; 0x3c
   3d9b0:	vmul.i32	q0, q9, q11
   3d9b4:	vmul.i32	q1, q8, q12
   3d9b8:	cmp	r9, r6
   3d9bc:	vmul.i32	q8, q0, d0[1]
   3d9c0:	vmul.i32	q9, q1, d2[1]
   3d9c4:	vmov.32	lr, d16[0]
   3d9c8:	vmov.32	r4, d18[0]
   3d9cc:	beq	3d8b8 <GetDataSlab+0x975c>
   3d9d0:	vmov.32	r6, d20[0]
   3d9d4:	sub	r8, fp, #96	; 0x60
   3d9d8:	mul	r4, r6, r4
   3d9dc:	ldr	r6, [r0, r3, lsl #2]
   3d9e0:	subs	r3, r3, #1
   3d9e4:	mul	lr, lr, r6
   3d9e8:	bne	3d9d8 <GetDataSlab+0x987c>
   3d9ec:	b	3d8bc <GetDataSlab+0x9760>
   3d9f0:	ldr	r5, [sl]
   3d9f4:	mov	r7, #0
   3d9f8:	sub	r9, fp, #176	; 0xb0
   3d9fc:	sub	r8, fp, #96	; 0x60
   3da00:	sub	r0, r5, #1
   3da04:	str	r0, [fp, #-96]	; 0xffffffa0
   3da08:	ldr	r0, [r3]
   3da0c:	str	r0, [sp, #72]	; 0x48
   3da10:	str	r0, [fp, #-176]	; 0xffffff50
   3da14:	ldr	r0, [fp, #20]
   3da18:	ldr	r1, [r0]
   3da1c:	ldr	r0, [fp, #24]
   3da20:	cmp	r0, #2
   3da24:	mov	r0, r1
   3da28:	str	r1, [sp, #76]	; 0x4c
   3da2c:	blt	49234 <GetDataSlab+0x150d8>
   3da30:	ldr	r0, [fp, #8]
   3da34:	ldr	r4, [sp, #72]	; 0x48
   3da38:	mov	r3, #0
   3da3c:	mvn	ip, #15
   3da40:	mov	r7, #0
   3da44:	str	r1, [sp, #76]	; 0x4c
   3da48:	str	r3, [sp, #84]	; 0x54
   3da4c:	mov	r3, r1
   3da50:	mov	r2, r0
   3da54:	sub	r0, r0, #4
   3da58:	mov	r6, r4
   3da5c:	sub	sl, r2, #12
   3da60:	mov	r2, #1
   3da64:	b	3dab8 <GetDataSlab+0x995c>
   3da68:	sub	r8, fp, #96	; 0x60
   3da6c:	ldr	r3, [fp, #12]
   3da70:	sub	r9, fp, #176	; 0xb0
   3da74:	str	lr, [r8, r2, lsl #2]
   3da78:	ldr	r6, [sp, #68]	; 0x44
   3da7c:	add	sl, sl, #4
   3da80:	str	r4, [r9, r2, lsl #2]
   3da84:	ldr	r3, [r3, r2, lsl #2]
   3da88:	mla	r7, r3, r6, r7
   3da8c:	ldr	r3, [fp, #20]
   3da90:	ldr	r6, [sp, #76]	; 0x4c
   3da94:	ldr	r3, [r3, r2, lsl #2]
   3da98:	add	r2, r2, #1
   3da9c:	mul	r6, r3, r6
   3daa0:	ldr	r3, [fp, #24]
   3daa4:	str	r6, [sp, #76]	; 0x4c
   3daa8:	mov	r6, r4
   3daac:	ldr	r4, [sp, #64]	; 0x40
   3dab0:	cmp	r2, r3
   3dab4:	beq	49234 <GetDataSlab+0x150d8>
   3dab8:	ldr	r3, [fp, #16]
   3dabc:	str	r6, [sp, #68]	; 0x44
   3dac0:	ldr	r3, [r3, r2, lsl #2]
   3dac4:	str	r4, [r9, r2, lsl #2]
   3dac8:	ldr	r9, [sp, #84]	; 0x54
   3dacc:	sub	lr, r3, #1
   3dad0:	ldr	r3, [fp, #8]
   3dad4:	add	r9, r9, #1
   3dad8:	str	lr, [r8, r2, lsl #2]
   3dadc:	cmp	r9, #4
   3dae0:	str	r9, [sp, #84]	; 0x54
   3dae4:	ldr	r6, [r3, r2, lsl #2]
   3dae8:	str	r6, [sp, #64]	; 0x40
   3daec:	bcs	3daf8 <GetDataSlab+0x999c>
   3daf0:	mov	r3, r2
   3daf4:	b	3db88 <GetDataSlab+0x9a2c>
   3daf8:	vmov.i32	q9, #1	; 0x00000001
   3dafc:	vmov.i32	q10, #1	; 0x00000001
   3db00:	vmov.32	d23[1], r6
   3db04:	vmov.i32	q8, #1	; 0x00000001
   3db08:	bic	r3, r9, #3
   3db0c:	bic	r8, r2, #3
   3db10:	mov	r6, sl
   3db14:	str	r3, [sp, #60]	; 0x3c
   3db18:	sub	r3, r2, r3
   3db1c:	vmov.32	d18[0], r4
   3db20:	vmov.32	d20[0], lr
   3db24:	vorr	d16, d18, d18
   3db28:	vmov.i32	q9, #1	; 0x00000001
   3db2c:	vorr	d18, d20, d20
   3db30:	vld1.32	{d20-d21}, [r6], ip
   3db34:	subs	r8, r8, #4
   3db38:	vrev64.32	q12, q10
   3db3c:	vext.8	q12, q12, q12, #8
   3db40:	vext.8	q11, q11, q12, #12
   3db44:	vmul.i32	q9, q9, q12
   3db48:	vmul.i32	q8, q11, q8
   3db4c:	vorr	q11, q12, q12
   3db50:	bne	3db30 <GetDataSlab+0x99d4>
   3db54:	vext.8	q11, q9, q8, #8
   3db58:	vext.8	q12, q8, q8, #8
   3db5c:	ldr	r6, [sp, #60]	; 0x3c
   3db60:	vmul.i32	q0, q9, q11
   3db64:	vmul.i32	q1, q8, q12
   3db68:	cmp	r9, r6
   3db6c:	vmul.i32	q8, q0, d0[1]
   3db70:	vmul.i32	q9, q1, d2[1]
   3db74:	vmov.32	lr, d16[0]
   3db78:	vmov.32	r4, d18[0]
   3db7c:	beq	3da68 <GetDataSlab+0x990c>
   3db80:	vmov.32	r6, d20[0]
   3db84:	sub	r8, fp, #96	; 0x60
   3db88:	mul	r4, r6, r4
   3db8c:	ldr	r6, [r0, r3, lsl #2]
   3db90:	subs	r3, r3, #1
   3db94:	mul	lr, lr, r6
   3db98:	bne	3db88 <GetDataSlab+0x9a2c>
   3db9c:	b	3da6c <GetDataSlab+0x9910>
   3dba0:	ldr	r5, [sl]
   3dba4:	mov	r7, #0
   3dba8:	sub	r9, fp, #176	; 0xb0
   3dbac:	sub	r8, fp, #96	; 0x60
   3dbb0:	sub	r0, r5, #1
   3dbb4:	str	r0, [fp, #-96]	; 0xffffffa0
   3dbb8:	ldr	r0, [r3]
   3dbbc:	str	r0, [sp, #72]	; 0x48
   3dbc0:	str	r0, [fp, #-176]	; 0xffffff50
   3dbc4:	ldr	r0, [fp, #20]
   3dbc8:	ldr	r1, [r0]
   3dbcc:	ldr	r0, [fp, #24]
   3dbd0:	cmp	r0, #2
   3dbd4:	mov	r0, r1
   3dbd8:	str	r1, [sp, #76]	; 0x4c
   3dbdc:	blt	493c8 <GetDataSlab+0x1526c>
   3dbe0:	ldr	r0, [fp, #8]
   3dbe4:	ldr	r4, [sp, #72]	; 0x48
   3dbe8:	mov	r3, #0
   3dbec:	mvn	ip, #15
   3dbf0:	mov	r7, #0
   3dbf4:	str	r1, [sp, #76]	; 0x4c
   3dbf8:	str	r3, [sp, #84]	; 0x54
   3dbfc:	mov	r3, r1
   3dc00:	mov	r2, r0
   3dc04:	sub	r0, r0, #4
   3dc08:	mov	r6, r4
   3dc0c:	sub	sl, r2, #12
   3dc10:	mov	r2, #1
   3dc14:	b	3dc68 <GetDataSlab+0x9b0c>
   3dc18:	sub	r8, fp, #96	; 0x60
   3dc1c:	ldr	r3, [fp, #12]
   3dc20:	sub	r9, fp, #176	; 0xb0
   3dc24:	str	lr, [r8, r2, lsl #2]
   3dc28:	ldr	r6, [sp, #68]	; 0x44
   3dc2c:	add	sl, sl, #4
   3dc30:	str	r4, [r9, r2, lsl #2]
   3dc34:	ldr	r3, [r3, r2, lsl #2]
   3dc38:	mla	r7, r3, r6, r7
   3dc3c:	ldr	r3, [fp, #20]
   3dc40:	ldr	r6, [sp, #76]	; 0x4c
   3dc44:	ldr	r3, [r3, r2, lsl #2]
   3dc48:	add	r2, r2, #1
   3dc4c:	mul	r6, r3, r6
   3dc50:	ldr	r3, [fp, #24]
   3dc54:	str	r6, [sp, #76]	; 0x4c
   3dc58:	mov	r6, r4
   3dc5c:	ldr	r4, [sp, #64]	; 0x40
   3dc60:	cmp	r2, r3
   3dc64:	beq	493c8 <GetDataSlab+0x1526c>
   3dc68:	ldr	r3, [fp, #16]
   3dc6c:	str	r6, [sp, #68]	; 0x44
   3dc70:	ldr	r3, [r3, r2, lsl #2]
   3dc74:	str	r4, [r9, r2, lsl #2]
   3dc78:	ldr	r9, [sp, #84]	; 0x54
   3dc7c:	sub	lr, r3, #1
   3dc80:	ldr	r3, [fp, #8]
   3dc84:	add	r9, r9, #1
   3dc88:	str	lr, [r8, r2, lsl #2]
   3dc8c:	cmp	r9, #4
   3dc90:	str	r9, [sp, #84]	; 0x54
   3dc94:	ldr	r6, [r3, r2, lsl #2]
   3dc98:	str	r6, [sp, #64]	; 0x40
   3dc9c:	bcs	3dca8 <GetDataSlab+0x9b4c>
   3dca0:	mov	r3, r2
   3dca4:	b	3dd38 <GetDataSlab+0x9bdc>
   3dca8:	vmov.i32	q9, #1	; 0x00000001
   3dcac:	vmov.i32	q10, #1	; 0x00000001
   3dcb0:	vmov.32	d23[1], r6
   3dcb4:	vmov.i32	q8, #1	; 0x00000001
   3dcb8:	bic	r3, r9, #3
   3dcbc:	bic	r8, r2, #3
   3dcc0:	mov	r6, sl
   3dcc4:	str	r3, [sp, #60]	; 0x3c
   3dcc8:	sub	r3, r2, r3
   3dccc:	vmov.32	d18[0], r4
   3dcd0:	vmov.32	d20[0], lr
   3dcd4:	vorr	d16, d18, d18
   3dcd8:	vmov.i32	q9, #1	; 0x00000001
   3dcdc:	vorr	d18, d20, d20
   3dce0:	vld1.32	{d20-d21}, [r6], ip
   3dce4:	subs	r8, r8, #4
   3dce8:	vrev64.32	q12, q10
   3dcec:	vext.8	q12, q12, q12, #8
   3dcf0:	vext.8	q11, q11, q12, #12
   3dcf4:	vmul.i32	q9, q9, q12
   3dcf8:	vmul.i32	q8, q11, q8
   3dcfc:	vorr	q11, q12, q12
   3dd00:	bne	3dce0 <GetDataSlab+0x9b84>
   3dd04:	vext.8	q11, q9, q8, #8
   3dd08:	vext.8	q12, q8, q8, #8
   3dd0c:	ldr	r6, [sp, #60]	; 0x3c
   3dd10:	vmul.i32	q0, q9, q11
   3dd14:	vmul.i32	q1, q8, q12
   3dd18:	cmp	r9, r6
   3dd1c:	vmul.i32	q8, q0, d0[1]
   3dd20:	vmul.i32	q9, q1, d2[1]
   3dd24:	vmov.32	lr, d16[0]
   3dd28:	vmov.32	r4, d18[0]
   3dd2c:	beq	3dc18 <GetDataSlab+0x9abc>
   3dd30:	vmov.32	r6, d20[0]
   3dd34:	sub	r8, fp, #96	; 0x60
   3dd38:	mul	r4, r6, r4
   3dd3c:	ldr	r6, [r0, r3, lsl #2]
   3dd40:	subs	r3, r3, #1
   3dd44:	mul	lr, lr, r6
   3dd48:	bne	3dd38 <GetDataSlab+0x9bdc>
   3dd4c:	b	3dc1c <GetDataSlab+0x9ac0>
   3dd50:	ldr	r5, [sl]
   3dd54:	mov	r7, #0
   3dd58:	sub	r9, fp, #176	; 0xb0
   3dd5c:	sub	r8, fp, #96	; 0x60
   3dd60:	sub	r0, r5, #1
   3dd64:	str	r0, [fp, #-96]	; 0xffffffa0
   3dd68:	ldr	r0, [r3]
   3dd6c:	str	r0, [sp, #72]	; 0x48
   3dd70:	str	r0, [fp, #-176]	; 0xffffff50
   3dd74:	ldr	r0, [fp, #20]
   3dd78:	ldr	r1, [r0]
   3dd7c:	ldr	r0, [fp, #24]
   3dd80:	cmp	r0, #2
   3dd84:	mov	r0, r1
   3dd88:	str	r1, [sp, #76]	; 0x4c
   3dd8c:	blt	4955c <GetDataSlab+0x15400>
   3dd90:	ldr	r0, [fp, #8]
   3dd94:	ldr	r4, [sp, #72]	; 0x48
   3dd98:	mov	r3, #0
   3dd9c:	mvn	ip, #15
   3dda0:	mov	r7, #0
   3dda4:	str	r1, [sp, #76]	; 0x4c
   3dda8:	str	r3, [sp, #84]	; 0x54
   3ddac:	mov	r3, r1
   3ddb0:	mov	r2, r0
   3ddb4:	sub	r0, r0, #4
   3ddb8:	mov	r6, r4
   3ddbc:	sub	sl, r2, #12
   3ddc0:	mov	r2, #1
   3ddc4:	b	3de18 <GetDataSlab+0x9cbc>
   3ddc8:	sub	r8, fp, #96	; 0x60
   3ddcc:	ldr	r3, [fp, #12]
   3ddd0:	sub	r9, fp, #176	; 0xb0
   3ddd4:	str	lr, [r8, r2, lsl #2]
   3ddd8:	ldr	r6, [sp, #68]	; 0x44
   3dddc:	add	sl, sl, #4
   3dde0:	str	r4, [r9, r2, lsl #2]
   3dde4:	ldr	r3, [r3, r2, lsl #2]
   3dde8:	mla	r7, r3, r6, r7
   3ddec:	ldr	r3, [fp, #20]
   3ddf0:	ldr	r6, [sp, #76]	; 0x4c
   3ddf4:	ldr	r3, [r3, r2, lsl #2]
   3ddf8:	add	r2, r2, #1
   3ddfc:	mul	r6, r3, r6
   3de00:	ldr	r3, [fp, #24]
   3de04:	str	r6, [sp, #76]	; 0x4c
   3de08:	mov	r6, r4
   3de0c:	ldr	r4, [sp, #64]	; 0x40
   3de10:	cmp	r2, r3
   3de14:	beq	4955c <GetDataSlab+0x15400>
   3de18:	ldr	r3, [fp, #16]
   3de1c:	str	r6, [sp, #68]	; 0x44
   3de20:	ldr	r3, [r3, r2, lsl #2]
   3de24:	str	r4, [r9, r2, lsl #2]
   3de28:	ldr	r9, [sp, #84]	; 0x54
   3de2c:	sub	lr, r3, #1
   3de30:	ldr	r3, [fp, #8]
   3de34:	add	r9, r9, #1
   3de38:	str	lr, [r8, r2, lsl #2]
   3de3c:	cmp	r9, #4
   3de40:	str	r9, [sp, #84]	; 0x54
   3de44:	ldr	r6, [r3, r2, lsl #2]
   3de48:	str	r6, [sp, #64]	; 0x40
   3de4c:	bcs	3de58 <GetDataSlab+0x9cfc>
   3de50:	mov	r3, r2
   3de54:	b	3dee8 <GetDataSlab+0x9d8c>
   3de58:	vmov.i32	q9, #1	; 0x00000001
   3de5c:	vmov.i32	q10, #1	; 0x00000001
   3de60:	vmov.32	d23[1], r6
   3de64:	vmov.i32	q8, #1	; 0x00000001
   3de68:	bic	r3, r9, #3
   3de6c:	bic	r8, r2, #3
   3de70:	mov	r6, sl
   3de74:	str	r3, [sp, #60]	; 0x3c
   3de78:	sub	r3, r2, r3
   3de7c:	vmov.32	d18[0], r4
   3de80:	vmov.32	d20[0], lr
   3de84:	vorr	d16, d18, d18
   3de88:	vmov.i32	q9, #1	; 0x00000001
   3de8c:	vorr	d18, d20, d20
   3de90:	vld1.32	{d20-d21}, [r6], ip
   3de94:	subs	r8, r8, #4
   3de98:	vrev64.32	q12, q10
   3de9c:	vext.8	q12, q12, q12, #8
   3dea0:	vext.8	q11, q11, q12, #12
   3dea4:	vmul.i32	q9, q9, q12
   3dea8:	vmul.i32	q8, q11, q8
   3deac:	vorr	q11, q12, q12
   3deb0:	bne	3de90 <GetDataSlab+0x9d34>
   3deb4:	vext.8	q11, q9, q8, #8
   3deb8:	vext.8	q12, q8, q8, #8
   3debc:	ldr	r6, [sp, #60]	; 0x3c
   3dec0:	vmul.i32	q0, q9, q11
   3dec4:	vmul.i32	q1, q8, q12
   3dec8:	cmp	r9, r6
   3decc:	vmul.i32	q8, q0, d0[1]
   3ded0:	vmul.i32	q9, q1, d2[1]
   3ded4:	vmov.32	lr, d16[0]
   3ded8:	vmov.32	r4, d18[0]
   3dedc:	beq	3ddc8 <GetDataSlab+0x9c6c>
   3dee0:	vmov.32	r6, d20[0]
   3dee4:	sub	r8, fp, #96	; 0x60
   3dee8:	mul	r4, r6, r4
   3deec:	ldr	r6, [r0, r3, lsl #2]
   3def0:	subs	r3, r3, #1
   3def4:	mul	lr, lr, r6
   3def8:	bne	3dee8 <GetDataSlab+0x9d8c>
   3defc:	b	3ddcc <GetDataSlab+0x9c70>
   3df00:	ldr	r5, [sl]
   3df04:	mov	r7, #0
   3df08:	sub	r9, fp, #176	; 0xb0
   3df0c:	sub	r8, fp, #96	; 0x60
   3df10:	sub	r0, r5, #1
   3df14:	str	r0, [fp, #-96]	; 0xffffffa0
   3df18:	ldr	r0, [r3]
   3df1c:	str	r0, [sp, #72]	; 0x48
   3df20:	str	r0, [fp, #-176]	; 0xffffff50
   3df24:	ldr	r0, [fp, #20]
   3df28:	ldr	r1, [r0]
   3df2c:	ldr	r0, [fp, #24]
   3df30:	cmp	r0, #2
   3df34:	mov	r0, r1
   3df38:	str	r1, [sp, #76]	; 0x4c
   3df3c:	blt	496f0 <GetDataSlab+0x15594>
   3df40:	ldr	r0, [fp, #8]
   3df44:	ldr	r4, [sp, #72]	; 0x48
   3df48:	mov	r3, #0
   3df4c:	mvn	ip, #15
   3df50:	mov	r7, #0
   3df54:	str	r1, [sp, #76]	; 0x4c
   3df58:	str	r3, [sp, #84]	; 0x54
   3df5c:	mov	r3, r1
   3df60:	mov	r2, r0
   3df64:	sub	r0, r0, #4
   3df68:	mov	r6, r4
   3df6c:	sub	sl, r2, #12
   3df70:	mov	r2, #1
   3df74:	b	3dfc8 <GetDataSlab+0x9e6c>
   3df78:	sub	r8, fp, #96	; 0x60
   3df7c:	ldr	r3, [fp, #12]
   3df80:	sub	r9, fp, #176	; 0xb0
   3df84:	str	lr, [r8, r2, lsl #2]
   3df88:	ldr	r6, [sp, #68]	; 0x44
   3df8c:	add	sl, sl, #4
   3df90:	str	r4, [r9, r2, lsl #2]
   3df94:	ldr	r3, [r3, r2, lsl #2]
   3df98:	mla	r7, r3, r6, r7
   3df9c:	ldr	r3, [fp, #20]
   3dfa0:	ldr	r6, [sp, #76]	; 0x4c
   3dfa4:	ldr	r3, [r3, r2, lsl #2]
   3dfa8:	add	r2, r2, #1
   3dfac:	mul	r6, r3, r6
   3dfb0:	ldr	r3, [fp, #24]
   3dfb4:	str	r6, [sp, #76]	; 0x4c
   3dfb8:	mov	r6, r4
   3dfbc:	ldr	r4, [sp, #64]	; 0x40
   3dfc0:	cmp	r2, r3
   3dfc4:	beq	496f0 <GetDataSlab+0x15594>
   3dfc8:	ldr	r3, [fp, #16]
   3dfcc:	str	r6, [sp, #68]	; 0x44
   3dfd0:	ldr	r3, [r3, r2, lsl #2]
   3dfd4:	str	r4, [r9, r2, lsl #2]
   3dfd8:	ldr	r9, [sp, #84]	; 0x54
   3dfdc:	sub	lr, r3, #1
   3dfe0:	ldr	r3, [fp, #8]
   3dfe4:	add	r9, r9, #1
   3dfe8:	str	lr, [r8, r2, lsl #2]
   3dfec:	cmp	r9, #4
   3dff0:	str	r9, [sp, #84]	; 0x54
   3dff4:	ldr	r6, [r3, r2, lsl #2]
   3dff8:	str	r6, [sp, #64]	; 0x40
   3dffc:	bcs	3e008 <GetDataSlab+0x9eac>
   3e000:	mov	r3, r2
   3e004:	b	3e098 <GetDataSlab+0x9f3c>
   3e008:	vmov.i32	q9, #1	; 0x00000001
   3e00c:	vmov.i32	q10, #1	; 0x00000001
   3e010:	vmov.32	d23[1], r6
   3e014:	vmov.i32	q8, #1	; 0x00000001
   3e018:	bic	r3, r9, #3
   3e01c:	bic	r8, r2, #3
   3e020:	mov	r6, sl
   3e024:	str	r3, [sp, #60]	; 0x3c
   3e028:	sub	r3, r2, r3
   3e02c:	vmov.32	d18[0], r4
   3e030:	vmov.32	d20[0], lr
   3e034:	vorr	d16, d18, d18
   3e038:	vmov.i32	q9, #1	; 0x00000001
   3e03c:	vorr	d18, d20, d20
   3e040:	vld1.32	{d20-d21}, [r6], ip
   3e044:	subs	r8, r8, #4
   3e048:	vrev64.32	q12, q10
   3e04c:	vext.8	q12, q12, q12, #8
   3e050:	vext.8	q11, q11, q12, #12
   3e054:	vmul.i32	q9, q9, q12
   3e058:	vmul.i32	q8, q11, q8
   3e05c:	vorr	q11, q12, q12
   3e060:	bne	3e040 <GetDataSlab+0x9ee4>
   3e064:	vext.8	q11, q9, q8, #8
   3e068:	vext.8	q12, q8, q8, #8
   3e06c:	ldr	r6, [sp, #60]	; 0x3c
   3e070:	vmul.i32	q0, q9, q11
   3e074:	vmul.i32	q1, q8, q12
   3e078:	cmp	r9, r6
   3e07c:	vmul.i32	q8, q0, d0[1]
   3e080:	vmul.i32	q9, q1, d2[1]
   3e084:	vmov.32	lr, d16[0]
   3e088:	vmov.32	r4, d18[0]
   3e08c:	beq	3df78 <GetDataSlab+0x9e1c>
   3e090:	vmov.32	r6, d20[0]
   3e094:	sub	r8, fp, #96	; 0x60
   3e098:	mul	r4, r6, r4
   3e09c:	ldr	r6, [r0, r3, lsl #2]
   3e0a0:	subs	r3, r3, #1
   3e0a4:	mul	lr, lr, r6
   3e0a8:	bne	3e098 <GetDataSlab+0x9f3c>
   3e0ac:	b	3df7c <GetDataSlab+0x9e20>
   3e0b0:	ldr	r5, [sl]
   3e0b4:	mov	r7, #0
   3e0b8:	sub	r9, fp, #176	; 0xb0
   3e0bc:	sub	r8, fp, #96	; 0x60
   3e0c0:	sub	r0, r5, #1
   3e0c4:	str	r0, [fp, #-96]	; 0xffffffa0
   3e0c8:	ldr	r0, [r3]
   3e0cc:	str	r0, [sp, #72]	; 0x48
   3e0d0:	str	r0, [fp, #-176]	; 0xffffff50
   3e0d4:	ldr	r0, [fp, #20]
   3e0d8:	ldr	r1, [r0]
   3e0dc:	ldr	r0, [fp, #24]
   3e0e0:	cmp	r0, #2
   3e0e4:	mov	r0, r1
   3e0e8:	str	r1, [sp, #76]	; 0x4c
   3e0ec:	blt	49890 <GetDataSlab+0x15734>
   3e0f0:	ldr	r0, [fp, #8]
   3e0f4:	ldr	r4, [sp, #72]	; 0x48
   3e0f8:	mov	r3, #0
   3e0fc:	mvn	ip, #15
   3e100:	mov	r7, #0
   3e104:	str	r1, [sp, #76]	; 0x4c
   3e108:	str	r3, [sp, #84]	; 0x54
   3e10c:	mov	r3, r1
   3e110:	mov	r2, r0
   3e114:	sub	r0, r0, #4
   3e118:	mov	r6, r4
   3e11c:	sub	sl, r2, #12
   3e120:	mov	r2, #1
   3e124:	b	3e178 <GetDataSlab+0xa01c>
   3e128:	sub	r8, fp, #96	; 0x60
   3e12c:	ldr	r3, [fp, #12]
   3e130:	sub	r9, fp, #176	; 0xb0
   3e134:	str	lr, [r8, r2, lsl #2]
   3e138:	ldr	r6, [sp, #68]	; 0x44
   3e13c:	add	sl, sl, #4
   3e140:	str	r4, [r9, r2, lsl #2]
   3e144:	ldr	r3, [r3, r2, lsl #2]
   3e148:	mla	r7, r3, r6, r7
   3e14c:	ldr	r3, [fp, #20]
   3e150:	ldr	r6, [sp, #76]	; 0x4c
   3e154:	ldr	r3, [r3, r2, lsl #2]
   3e158:	add	r2, r2, #1
   3e15c:	mul	r6, r3, r6
   3e160:	ldr	r3, [fp, #24]
   3e164:	str	r6, [sp, #76]	; 0x4c
   3e168:	mov	r6, r4
   3e16c:	ldr	r4, [sp, #64]	; 0x40
   3e170:	cmp	r2, r3
   3e174:	beq	49890 <GetDataSlab+0x15734>
   3e178:	ldr	r3, [fp, #16]
   3e17c:	str	r6, [sp, #68]	; 0x44
   3e180:	ldr	r3, [r3, r2, lsl #2]
   3e184:	str	r4, [r9, r2, lsl #2]
   3e188:	ldr	r9, [sp, #84]	; 0x54
   3e18c:	sub	lr, r3, #1
   3e190:	ldr	r3, [fp, #8]
   3e194:	add	r9, r9, #1
   3e198:	str	lr, [r8, r2, lsl #2]
   3e19c:	cmp	r9, #4
   3e1a0:	str	r9, [sp, #84]	; 0x54
   3e1a4:	ldr	r6, [r3, r2, lsl #2]
   3e1a8:	str	r6, [sp, #64]	; 0x40
   3e1ac:	bcs	3e1b8 <GetDataSlab+0xa05c>
   3e1b0:	mov	r3, r2
   3e1b4:	b	3e248 <GetDataSlab+0xa0ec>
   3e1b8:	vmov.i32	q9, #1	; 0x00000001
   3e1bc:	vmov.i32	q10, #1	; 0x00000001
   3e1c0:	vmov.32	d23[1], r6
   3e1c4:	vmov.i32	q8, #1	; 0x00000001
   3e1c8:	bic	r3, r9, #3
   3e1cc:	bic	r8, r2, #3
   3e1d0:	mov	r6, sl
   3e1d4:	str	r3, [sp, #60]	; 0x3c
   3e1d8:	sub	r3, r2, r3
   3e1dc:	vmov.32	d18[0], r4
   3e1e0:	vmov.32	d20[0], lr
   3e1e4:	vorr	d16, d18, d18
   3e1e8:	vmov.i32	q9, #1	; 0x00000001
   3e1ec:	vorr	d18, d20, d20
   3e1f0:	vld1.32	{d20-d21}, [r6], ip
   3e1f4:	subs	r8, r8, #4
   3e1f8:	vrev64.32	q12, q10
   3e1fc:	vext.8	q12, q12, q12, #8
   3e200:	vext.8	q11, q11, q12, #12
   3e204:	vmul.i32	q9, q9, q12
   3e208:	vmul.i32	q8, q11, q8
   3e20c:	vorr	q11, q12, q12
   3e210:	bne	3e1f0 <GetDataSlab+0xa094>
   3e214:	vext.8	q11, q9, q8, #8
   3e218:	vext.8	q12, q8, q8, #8
   3e21c:	ldr	r6, [sp, #60]	; 0x3c
   3e220:	vmul.i32	q0, q9, q11
   3e224:	vmul.i32	q1, q8, q12
   3e228:	cmp	r9, r6
   3e22c:	vmul.i32	q8, q0, d0[1]
   3e230:	vmul.i32	q9, q1, d2[1]
   3e234:	vmov.32	lr, d16[0]
   3e238:	vmov.32	r4, d18[0]
   3e23c:	beq	3e128 <GetDataSlab+0x9fcc>
   3e240:	vmov.32	r6, d20[0]
   3e244:	sub	r8, fp, #96	; 0x60
   3e248:	mul	r4, r6, r4
   3e24c:	ldr	r6, [r0, r3, lsl #2]
   3e250:	subs	r3, r3, #1
   3e254:	mul	lr, lr, r6
   3e258:	bne	3e248 <GetDataSlab+0xa0ec>
   3e25c:	b	3e12c <GetDataSlab+0x9fd0>
   3e260:	ldr	r7, [sl]
   3e264:	sub	r6, fp, #176	; 0xb0
   3e268:	sub	r8, fp, #96	; 0x60
   3e26c:	sub	r0, r7, #1
   3e270:	str	r0, [fp, #-96]	; 0xffffffa0
   3e274:	ldr	r0, [r3]
   3e278:	mov	r3, #0
   3e27c:	str	r0, [sp, #64]	; 0x40
   3e280:	str	r0, [fp, #-176]	; 0xffffff50
   3e284:	ldr	r0, [fp, #20]
   3e288:	ldr	r1, [r0]
   3e28c:	ldr	r0, [fp, #24]
   3e290:	cmp	r0, #2
   3e294:	mov	r0, r1
   3e298:	str	r1, [sp, #68]	; 0x44
   3e29c:	blt	49a30 <GetDataSlab+0x158d4>
   3e2a0:	ldr	r0, [fp, #8]
   3e2a4:	ldr	r5, [sp, #64]	; 0x40
   3e2a8:	mov	ip, #1
   3e2ac:	mvn	sl, #15
   3e2b0:	mov	r3, #0
   3e2b4:	str	r1, [sp, #68]	; 0x44
   3e2b8:	mov	r2, r0
   3e2bc:	sub	r0, r0, #4
   3e2c0:	mov	r4, r5
   3e2c4:	sub	lr, r2, #12
   3e2c8:	mov	r2, #0
   3e2cc:	str	r2, [sp, #76]	; 0x4c
   3e2d0:	mov	r2, r1
   3e2d4:	b	3e328 <GetDataSlab+0xa1cc>
   3e2d8:	ldr	r4, [sp, #56]	; 0x38
   3e2dc:	sub	r8, fp, #96	; 0x60
   3e2e0:	ldr	r2, [fp, #12]
   3e2e4:	sub	r6, fp, #176	; 0xb0
   3e2e8:	str	r9, [r8, ip, lsl #2]
   3e2ec:	add	lr, lr, #4
   3e2f0:	str	r5, [r6, ip, lsl #2]
   3e2f4:	ldr	r2, [r2, ip, lsl #2]
   3e2f8:	mla	r3, r2, r4, r3
   3e2fc:	ldr	r2, [fp, #20]
   3e300:	ldr	r4, [sp, #68]	; 0x44
   3e304:	ldr	r2, [r2, ip, lsl #2]
   3e308:	add	ip, ip, #1
   3e30c:	mul	r4, r2, r4
   3e310:	ldr	r2, [fp, #24]
   3e314:	str	r4, [sp, #68]	; 0x44
   3e318:	mov	r4, r5
   3e31c:	ldr	r5, [sp, #72]	; 0x48
   3e320:	cmp	ip, r2
   3e324:	beq	49a30 <GetDataSlab+0x158d4>
   3e328:	ldr	r2, [fp, #16]
   3e32c:	ldr	r2, [r2, ip, lsl #2]
   3e330:	str	r5, [r6, ip, lsl #2]
   3e334:	sub	r9, r2, #1
   3e338:	ldr	r2, [fp, #8]
   3e33c:	str	r9, [r8, ip, lsl #2]
   3e340:	ldr	r6, [r2, ip, lsl #2]
   3e344:	ldr	r2, [sp, #76]	; 0x4c
   3e348:	add	r2, r2, #1
   3e34c:	str	r6, [sp, #72]	; 0x48
   3e350:	cmp	r2, #4
   3e354:	str	r2, [sp, #76]	; 0x4c
   3e358:	bcs	3e368 <GetDataSlab+0xa20c>
   3e35c:	mov	r2, r6
   3e360:	mov	r6, ip
   3e364:	b	3e404 <GetDataSlab+0xa2a8>
   3e368:	vmov.i32	q9, #1	; 0x00000001
   3e36c:	vmov.i32	q10, #1	; 0x00000001
   3e370:	vmov.32	d23[1], r6
   3e374:	vmov.i32	q8, #1	; 0x00000001
   3e378:	bic	r2, r2, #3
   3e37c:	bic	r8, ip, #3
   3e380:	str	r4, [sp, #56]	; 0x38
   3e384:	str	r2, [sp, #60]	; 0x3c
   3e388:	sub	r6, ip, r2
   3e38c:	mov	r2, lr
   3e390:	vmov.32	d18[0], r5
   3e394:	vmov.32	d20[0], r9
   3e398:	vorr	d16, d18, d18
   3e39c:	vmov.i32	q9, #1	; 0x00000001
   3e3a0:	vorr	d18, d20, d20
   3e3a4:	vld1.32	{d20-d21}, [r2], sl
   3e3a8:	subs	r8, r8, #4
   3e3ac:	vrev64.32	q12, q10
   3e3b0:	vext.8	q12, q12, q12, #8
   3e3b4:	vext.8	q11, q11, q12, #12
   3e3b8:	vmul.i32	q9, q9, q12
   3e3bc:	vmul.i32	q8, q11, q8
   3e3c0:	vorr	q11, q12, q12
   3e3c4:	bne	3e3a4 <GetDataSlab+0xa248>
   3e3c8:	vext.8	q11, q9, q8, #8
   3e3cc:	vext.8	q12, q8, q8, #8
   3e3d0:	ldr	r2, [sp, #76]	; 0x4c
   3e3d4:	ldr	r4, [sp, #60]	; 0x3c
   3e3d8:	vmul.i32	q0, q9, q11
   3e3dc:	vmul.i32	q1, q8, q12
   3e3e0:	cmp	r2, r4
   3e3e4:	vmul.i32	q8, q0, d0[1]
   3e3e8:	vmul.i32	q9, q1, d2[1]
   3e3ec:	vmov.32	r9, d16[0]
   3e3f0:	vmov.32	r5, d18[0]
   3e3f4:	beq	3e2d8 <GetDataSlab+0xa17c>
   3e3f8:	vmov.32	r2, d20[0]
   3e3fc:	ldr	r4, [sp, #56]	; 0x38
   3e400:	sub	r8, fp, #96	; 0x60
   3e404:	mul	r5, r2, r5
   3e408:	ldr	r2, [r0, r6, lsl #2]
   3e40c:	subs	r6, r6, #1
   3e410:	mul	r9, r9, r2
   3e414:	bne	3e404 <GetDataSlab+0xa2a8>
   3e418:	b	3e2e0 <GetDataSlab+0xa184>
   3e41c:	ldr	lr, [sl]
   3e420:	mov	r7, #0
   3e424:	sub	r2, fp, #176	; 0xb0
   3e428:	sub	r3, fp, #96	; 0x60
   3e42c:	sub	r0, lr, #1
   3e430:	str	r0, [fp, #-96]	; 0xffffffa0
   3e434:	ldr	r0, [r6]
   3e438:	str	r0, [sp, #40]	; 0x28
   3e43c:	str	r0, [fp, #-176]	; 0xffffff50
   3e440:	ldr	r0, [fp, #20]
   3e444:	ldr	r1, [r0]
   3e448:	ldr	r0, [fp, #24]
   3e44c:	cmp	r0, #2
   3e450:	str	r1, [sp, #68]	; 0x44
   3e454:	str	r1, [sp, #72]	; 0x48
   3e458:	blt	49bb8 <GetDataSlab+0x15a5c>
   3e45c:	ldr	r0, [fp, #8]
   3e460:	ldr	r4, [sp, #40]	; 0x28
   3e464:	mov	r6, #1
   3e468:	mov	r5, #0
   3e46c:	mvn	r8, #15
   3e470:	mov	r7, #0
   3e474:	sub	r1, r0, #4
   3e478:	sub	ip, r0, #12
   3e47c:	mov	r0, r4
   3e480:	ldr	r0, [sp, #68]	; 0x44
   3e484:	str	r4, [sp, #84]	; 0x54
   3e488:	str	r0, [sp, #72]	; 0x48
   3e48c:	b	3e4ec <GetDataSlab+0xa390>
   3e490:	ldr	sl, [fp, #16]
   3e494:	mov	r9, r5
   3e498:	sub	r3, fp, #96	; 0x60
   3e49c:	sub	r2, fp, #176	; 0xb0
   3e4a0:	ldr	r5, [sp, #84]	; 0x54
   3e4a4:	str	r4, [sp, #84]	; 0x54
   3e4a8:	add	ip, ip, #4
   3e4ac:	str	r0, [r3, r6, lsl #2]
   3e4b0:	ldr	r0, [fp, #12]
   3e4b4:	str	r4, [r2, r6, lsl #2]
   3e4b8:	ldr	r4, [sp, #76]	; 0x4c
   3e4bc:	ldr	r0, [r0, r6, lsl #2]
   3e4c0:	mla	r7, r0, r5, r7
   3e4c4:	ldr	r0, [fp, #20]
   3e4c8:	ldr	r5, [sp, #72]	; 0x48
   3e4cc:	ldr	r0, [r0, r6, lsl #2]
   3e4d0:	add	r6, r6, #1
   3e4d4:	mul	r5, r0, r5
   3e4d8:	ldr	r0, [fp, #24]
   3e4dc:	str	r5, [sp, #72]	; 0x48
   3e4e0:	mov	r5, r9
   3e4e4:	cmp	r6, r0
   3e4e8:	beq	49bb8 <GetDataSlab+0x15a5c>
   3e4ec:	ldr	r0, [sl, r6, lsl #2]
   3e4f0:	str	r4, [r2, r6, lsl #2]
   3e4f4:	ldr	r2, [fp, #8]
   3e4f8:	add	r5, r5, #1
   3e4fc:	cmp	r5, #4
   3e500:	sub	r0, r0, #1
   3e504:	str	r0, [r3, r6, lsl #2]
   3e508:	ldr	r2, [r2, r6, lsl #2]
   3e50c:	str	r2, [sp, #76]	; 0x4c
   3e510:	bcs	3e51c <GetDataSlab+0xa3c0>
   3e514:	mov	r3, r6
   3e518:	b	3e5a4 <GetDataSlab+0xa448>
   3e51c:	vmov.i32	q9, #1	; 0x00000001
   3e520:	vmov.i32	q10, #1	; 0x00000001
   3e524:	vmov.32	d23[1], r2
   3e528:	vmov.i32	q8, #1	; 0x00000001
   3e52c:	bic	r9, r5, #3
   3e530:	bic	sl, r6, #3
   3e534:	sub	r3, r6, r9
   3e538:	vmov.32	d18[0], r4
   3e53c:	vmov.32	d20[0], r0
   3e540:	mov	r0, ip
   3e544:	vorr	d16, d18, d18
   3e548:	vmov.i32	q9, #1	; 0x00000001
   3e54c:	vorr	d18, d20, d20
   3e550:	vld1.32	{d20-d21}, [r0], r8
   3e554:	subs	sl, sl, #4
   3e558:	vrev64.32	q12, q10
   3e55c:	vext.8	q12, q12, q12, #8
   3e560:	vext.8	q11, q11, q12, #12
   3e564:	vmul.i32	q9, q9, q12
   3e568:	vmul.i32	q8, q11, q8
   3e56c:	vorr	q11, q12, q12
   3e570:	bne	3e550 <GetDataSlab+0xa3f4>
   3e574:	vext.8	q11, q9, q8, #8
   3e578:	vext.8	q12, q8, q8, #8
   3e57c:	cmp	r5, r9
   3e580:	vmul.i32	q0, q9, q11
   3e584:	vmul.i32	q1, q8, q12
   3e588:	vmul.i32	q8, q0, d0[1]
   3e58c:	vmul.i32	q9, q1, d2[1]
   3e590:	vmov.32	r0, d16[0]
   3e594:	vmov.32	r4, d18[0]
   3e598:	beq	3e490 <GetDataSlab+0xa334>
   3e59c:	vmov.32	r2, d20[0]
   3e5a0:	ldr	sl, [fp, #16]
   3e5a4:	mov	r9, r5
   3e5a8:	mul	r4, r2, r4
   3e5ac:	ldr	r2, [r1, r3, lsl #2]
   3e5b0:	subs	r3, r3, #1
   3e5b4:	mul	r0, r0, r2
   3e5b8:	bne	3e5a8 <GetDataSlab+0xa44c>
   3e5bc:	b	3e498 <GetDataSlab+0xa33c>
   3e5c0:	ldr	r0, [sl]
   3e5c4:	mov	r1, #0
   3e5c8:	sub	r7, fp, #176	; 0xb0
   3e5cc:	str	r0, [sp, #68]	; 0x44
   3e5d0:	sub	r0, r0, #1
   3e5d4:	str	r0, [fp, #-96]	; 0xffffffa0
   3e5d8:	ldr	r0, [r6]
   3e5dc:	sub	r6, fp, #96	; 0x60
   3e5e0:	str	r0, [sp, #60]	; 0x3c
   3e5e4:	str	r0, [fp, #-176]	; 0xffffff50
   3e5e8:	ldr	r0, [fp, #20]
   3e5ec:	ldr	r2, [r0]
   3e5f0:	ldr	r0, [fp, #24]
   3e5f4:	cmp	r0, #2
   3e5f8:	str	r2, [sp, #72]	; 0x48
   3e5fc:	str	r2, [sp, #76]	; 0x4c
   3e600:	blt	49f38 <GetDataSlab+0x15ddc>
   3e604:	ldr	r0, [fp, #8]
   3e608:	ldr	r3, [sp, #60]	; 0x3c
   3e60c:	ldr	r2, [sp, #72]	; 0x48
   3e610:	mov	r5, #1
   3e614:	mov	r9, #0
   3e618:	mvn	r8, #15
   3e61c:	mov	r1, r0
   3e620:	sub	r0, r0, #4
   3e624:	mov	sl, r3
   3e628:	str	r2, [sp, #76]	; 0x4c
   3e62c:	sub	ip, r1, #12
   3e630:	mov	r1, #0
   3e634:	b	3e688 <GetDataSlab+0xa52c>
   3e638:	mov	lr, r4
   3e63c:	sub	r6, fp, #96	; 0x60
   3e640:	sub	r7, fp, #176	; 0xb0
   3e644:	ldr	r4, [sp, #76]	; 0x4c
   3e648:	add	ip, ip, #4
   3e64c:	str	r2, [r6, r5, lsl #2]
   3e650:	ldr	r2, [fp, #12]
   3e654:	str	r3, [r7, r5, lsl #2]
   3e658:	ldr	r2, [r2, r5, lsl #2]
   3e65c:	mla	r1, r2, sl, r1
   3e660:	ldr	r2, [fp, #20]
   3e664:	mov	sl, r3
   3e668:	mov	r3, lr
   3e66c:	ldr	r2, [r2, r5, lsl #2]
   3e670:	add	r5, r5, #1
   3e674:	mul	r4, r2, r4
   3e678:	ldr	r2, [fp, #24]
   3e67c:	str	r4, [sp, #76]	; 0x4c
   3e680:	cmp	r5, r2
   3e684:	beq	49f38 <GetDataSlab+0x15ddc>
   3e688:	ldr	r2, [fp, #16]
   3e68c:	add	r9, r9, #1
   3e690:	cmp	r9, #4
   3e694:	ldr	r2, [r2, r5, lsl #2]
   3e698:	str	r3, [r7, r5, lsl #2]
   3e69c:	ldr	r7, [fp, #8]
   3e6a0:	sub	r2, r2, #1
   3e6a4:	str	r2, [r6, r5, lsl #2]
   3e6a8:	ldr	lr, [r7, r5, lsl #2]
   3e6ac:	bcs	3e6bc <GetDataSlab+0xa560>
   3e6b0:	mov	r7, lr
   3e6b4:	mov	r6, r5
   3e6b8:	b	3e74c <GetDataSlab+0xa5f0>
   3e6bc:	vmov.i32	q9, #1	; 0x00000001
   3e6c0:	vmov.i32	q10, #1	; 0x00000001
   3e6c4:	mov	r6, lr
   3e6c8:	vmov.i32	q8, #1	; 0x00000001
   3e6cc:	bic	r7, r9, #3
   3e6d0:	bic	lr, r5, #3
   3e6d4:	vmov.32	d23[1], r6
   3e6d8:	mov	r4, r6
   3e6dc:	sub	r6, r5, r7
   3e6e0:	vmov.32	d18[0], r3
   3e6e4:	vmov.32	d20[0], r2
   3e6e8:	mov	r2, ip
   3e6ec:	vorr	d16, d18, d18
   3e6f0:	vmov.i32	q9, #1	; 0x00000001
   3e6f4:	vorr	d18, d20, d20
   3e6f8:	vld1.32	{d20-d21}, [r2], r8
   3e6fc:	subs	lr, lr, #4
   3e700:	vrev64.32	q12, q10
   3e704:	vext.8	q12, q12, q12, #8
   3e708:	vext.8	q11, q11, q12, #12
   3e70c:	vmul.i32	q9, q9, q12
   3e710:	vmul.i32	q8, q11, q8
   3e714:	vorr	q11, q12, q12
   3e718:	bne	3e6f8 <GetDataSlab+0xa59c>
   3e71c:	vext.8	q11, q9, q8, #8
   3e720:	vext.8	q12, q8, q8, #8
   3e724:	cmp	r9, r7
   3e728:	vmul.i32	q0, q9, q11
   3e72c:	vmul.i32	q1, q8, q12
   3e730:	vmul.i32	q8, q0, d0[1]
   3e734:	vmul.i32	q9, q1, d2[1]
   3e738:	vmov.32	r2, d16[0]
   3e73c:	vmov.32	r3, d18[0]
   3e740:	beq	3e638 <GetDataSlab+0xa4dc>
   3e744:	vmov.32	r7, d20[0]
   3e748:	mov	lr, r4
   3e74c:	mul	r3, r7, r3
   3e750:	ldr	r7, [r0, r6, lsl #2]
   3e754:	subs	r6, r6, #1
   3e758:	mul	r2, r2, r7
   3e75c:	bne	3e74c <GetDataSlab+0xa5f0>
   3e760:	b	3e63c <GetDataSlab+0xa4e0>
   3e764:	ldr	r0, [sl]
   3e768:	mov	r1, #0
   3e76c:	sub	ip, fp, #176	; 0xb0
   3e770:	str	r0, [sp, #68]	; 0x44
   3e774:	sub	r0, r0, #1
   3e778:	str	r0, [fp, #-96]	; 0xffffffa0
   3e77c:	ldr	r0, [r6]
   3e780:	sub	r6, fp, #96	; 0x60
   3e784:	str	r0, [sp, #56]	; 0x38
   3e788:	str	r0, [fp, #-176]	; 0xffffff50
   3e78c:	ldr	r0, [fp, #20]
   3e790:	ldr	r2, [r0]
   3e794:	ldr	r0, [fp, #24]
   3e798:	cmp	r0, #2
   3e79c:	str	r2, [sp, #72]	; 0x48
   3e7a0:	str	r2, [sp, #76]	; 0x4c
   3e7a4:	blt	4a1f0 <GetDataSlab+0x16094>
   3e7a8:	ldr	r0, [fp, #8]
   3e7ac:	ldr	r3, [sp, #56]	; 0x38
   3e7b0:	ldr	r2, [sp, #72]	; 0x48
   3e7b4:	mov	r5, #1
   3e7b8:	mov	r8, #0
   3e7bc:	mvn	r4, #15
   3e7c0:	mov	r1, r0
   3e7c4:	sub	r0, r0, #4
   3e7c8:	mov	r9, r3
   3e7cc:	str	r2, [sp, #76]	; 0x4c
   3e7d0:	sub	sl, r1, #12
   3e7d4:	mov	r1, #0
   3e7d8:	b	3e828 <GetDataSlab+0xa6cc>
   3e7dc:	sub	ip, fp, #176	; 0xb0
   3e7e0:	sub	r6, fp, #96	; 0x60
   3e7e4:	str	r3, [ip, r5, lsl #2]
   3e7e8:	ldr	r7, [sp, #76]	; 0x4c
   3e7ec:	add	sl, sl, #4
   3e7f0:	str	r2, [r6, r5, lsl #2]
   3e7f4:	ldr	r2, [fp, #12]
   3e7f8:	ldr	r2, [r2, r5, lsl #2]
   3e7fc:	mla	r1, r2, r9, r1
   3e800:	ldr	r2, [fp, #20]
   3e804:	mov	r9, r3
   3e808:	mov	r3, lr
   3e80c:	ldr	r2, [r2, r5, lsl #2]
   3e810:	add	r5, r5, #1
   3e814:	mul	r7, r2, r7
   3e818:	ldr	r2, [fp, #24]
   3e81c:	str	r7, [sp, #76]	; 0x4c
   3e820:	cmp	r5, r2
   3e824:	beq	4a1f0 <GetDataSlab+0x16094>
   3e828:	ldr	r2, [fp, #16]
   3e82c:	ldr	r7, [fp, #8]
   3e830:	add	r8, r8, #1
   3e834:	cmp	r8, #4
   3e838:	ldr	r2, [r2, r5, lsl #2]
   3e83c:	str	r3, [ip, r5, lsl #2]
   3e840:	sub	r2, r2, #1
   3e844:	str	r2, [r6, r5, lsl #2]
   3e848:	ldr	lr, [r7, r5, lsl #2]
   3e84c:	bcs	3e85c <GetDataSlab+0xa700>
   3e850:	mov	r7, lr
   3e854:	mov	r6, r5
   3e858:	b	3e8e4 <GetDataSlab+0xa788>
   3e85c:	vmov.i32	q9, #1	; 0x00000001
   3e860:	vmov.i32	q10, #1	; 0x00000001
   3e864:	vmov.32	d23[1], lr
   3e868:	vmov.i32	q8, #1	; 0x00000001
   3e86c:	bic	r7, r8, #3
   3e870:	bic	ip, r5, #3
   3e874:	sub	r6, r5, r7
   3e878:	vmov.32	d18[0], r3
   3e87c:	vmov.32	d20[0], r2
   3e880:	mov	r2, sl
   3e884:	vorr	d16, d18, d18
   3e888:	vmov.i32	q9, #1	; 0x00000001
   3e88c:	vorr	d18, d20, d20
   3e890:	vld1.32	{d20-d21}, [r2], r4
   3e894:	subs	ip, ip, #4
   3e898:	vrev64.32	q12, q10
   3e89c:	vext.8	q12, q12, q12, #8
   3e8a0:	vext.8	q11, q11, q12, #12
   3e8a4:	vmul.i32	q9, q9, q12
   3e8a8:	vmul.i32	q8, q11, q8
   3e8ac:	vorr	q11, q12, q12
   3e8b0:	bne	3e890 <GetDataSlab+0xa734>
   3e8b4:	vext.8	q11, q9, q8, #8
   3e8b8:	vext.8	q12, q8, q8, #8
   3e8bc:	cmp	r8, r7
   3e8c0:	vmul.i32	q0, q9, q11
   3e8c4:	vmul.i32	q1, q8, q12
   3e8c8:	vmul.i32	q8, q0, d0[1]
   3e8cc:	vmul.i32	q9, q1, d2[1]
   3e8d0:	vmov.32	r2, d16[0]
   3e8d4:	vmov.32	r3, d18[0]
   3e8d8:	beq	3e7dc <GetDataSlab+0xa680>
   3e8dc:	vmov.32	r7, d20[0]
   3e8e0:	sub	ip, fp, #176	; 0xb0
   3e8e4:	mul	r3, r7, r3
   3e8e8:	ldr	r7, [r0, r6, lsl #2]
   3e8ec:	subs	r6, r6, #1
   3e8f0:	mul	r2, r2, r7
   3e8f4:	bne	3e8e4 <GetDataSlab+0xa788>
   3e8f8:	b	3e7e0 <GetDataSlab+0xa684>
   3e8fc:	ldr	r0, [sl]
   3e900:	sub	r2, fp, #176	; 0xb0
   3e904:	mov	r3, #0
   3e908:	mov	lr, r2
   3e90c:	sub	r2, fp, #96	; 0x60
   3e910:	str	r0, [sp, #56]	; 0x38
   3e914:	sub	r0, r0, #1
   3e918:	str	r0, [fp, #-96]	; 0xffffffa0
   3e91c:	ldr	r0, [r6]
   3e920:	str	r0, [sp, #52]	; 0x34
   3e924:	str	r0, [fp, #-176]	; 0xffffff50
   3e928:	ldr	r0, [fp, #20]
   3e92c:	ldr	r1, [r0]
   3e930:	ldr	r0, [fp, #24]
   3e934:	cmp	r0, #2
   3e938:	str	r1, [sp, #72]	; 0x48
   3e93c:	str	r1, [sp, #76]	; 0x4c
   3e940:	blt	4a4bc <GetDataSlab+0x16360>
   3e944:	ldr	r5, [sp, #52]	; 0x34
   3e948:	ldr	r1, [sp, #72]	; 0x48
   3e94c:	sub	r0, r6, #4
   3e950:	sub	sl, r6, #12
   3e954:	mov	r7, #1
   3e958:	mov	r8, #0
   3e95c:	mvn	ip, #15
   3e960:	mov	r3, #0
   3e964:	mov	r9, r5
   3e968:	str	r1, [sp, #76]	; 0x4c
   3e96c:	b	3e9c4 <GetDataSlab+0xa868>
   3e970:	ldr	r1, [fp, #12]
   3e974:	sub	r2, fp, #176	; 0xb0
   3e978:	add	sl, sl, #4
   3e97c:	mov	lr, r2
   3e980:	str	r5, [r2, r7, lsl #2]
   3e984:	sub	r2, fp, #96	; 0x60
   3e988:	str	r4, [r2, r7, lsl #2]
   3e98c:	ldr	r4, [sp, #76]	; 0x4c
   3e990:	ldr	r1, [r1, r7, lsl #2]
   3e994:	mla	r3, r1, r9, r3
   3e998:	ldr	r1, [fp, #20]
   3e99c:	mov	r9, r5
   3e9a0:	mov	r5, r6
   3e9a4:	ldr	r6, [fp, #8]
   3e9a8:	ldr	r1, [r1, r7, lsl #2]
   3e9ac:	add	r7, r7, #1
   3e9b0:	mul	r4, r1, r4
   3e9b4:	ldr	r1, [fp, #24]
   3e9b8:	str	r4, [sp, #76]	; 0x4c
   3e9bc:	cmp	r7, r1
   3e9c0:	beq	4a4bc <GetDataSlab+0x16360>
   3e9c4:	ldr	r1, [fp, #16]
   3e9c8:	add	r8, r8, #1
   3e9cc:	cmp	r8, #4
   3e9d0:	ldr	r1, [r1, r7, lsl #2]
   3e9d4:	str	r5, [lr, r7, lsl #2]
   3e9d8:	sub	r4, r1, #1
   3e9dc:	str	r4, [r2, r7, lsl #2]
   3e9e0:	ldr	r6, [r6, r7, lsl #2]
   3e9e4:	bcs	3e9f4 <GetDataSlab+0xa898>
   3e9e8:	mov	r1, r6
   3e9ec:	mov	r2, r7
   3e9f0:	b	3ea78 <GetDataSlab+0xa91c>
   3e9f4:	vmov.i32	q9, #1	; 0x00000001
   3e9f8:	vmov.i32	q10, #1	; 0x00000001
   3e9fc:	vmov.32	d23[1], r6
   3ea00:	vmov.i32	q8, #1	; 0x00000001
   3ea04:	bic	r1, r8, #3
   3ea08:	bic	lr, r7, #3
   3ea0c:	sub	r2, r7, r1
   3ea10:	vmov.32	d18[0], r5
   3ea14:	vmov.32	d20[0], r4
   3ea18:	mov	r4, sl
   3ea1c:	vorr	d16, d18, d18
   3ea20:	vmov.i32	q9, #1	; 0x00000001
   3ea24:	vorr	d18, d20, d20
   3ea28:	vld1.32	{d20-d21}, [r4], ip
   3ea2c:	subs	lr, lr, #4
   3ea30:	vrev64.32	q12, q10
   3ea34:	vext.8	q12, q12, q12, #8
   3ea38:	vext.8	q11, q11, q12, #12
   3ea3c:	vmul.i32	q9, q9, q12
   3ea40:	vmul.i32	q8, q11, q8
   3ea44:	vorr	q11, q12, q12
   3ea48:	bne	3ea28 <GetDataSlab+0xa8cc>
   3ea4c:	vext.8	q11, q9, q8, #8
   3ea50:	vext.8	q12, q8, q8, #8
   3ea54:	cmp	r8, r1
   3ea58:	vmul.i32	q0, q9, q11
   3ea5c:	vmul.i32	q1, q8, q12
   3ea60:	vmul.i32	q8, q0, d0[1]
   3ea64:	vmul.i32	q9, q1, d2[1]
   3ea68:	vmov.32	r4, d16[0]
   3ea6c:	vmov.32	r5, d18[0]
   3ea70:	beq	3e970 <GetDataSlab+0xa814>
   3ea74:	vmov.32	r1, d20[0]
   3ea78:	mul	r5, r1, r5
   3ea7c:	ldr	r1, [r0, r2, lsl #2]
   3ea80:	subs	r2, r2, #1
   3ea84:	mul	r4, r4, r1
   3ea88:	bne	3ea78 <GetDataSlab+0xa91c>
   3ea8c:	b	3e970 <GetDataSlab+0xa814>
   3ea90:	ldr	r1, [sl]
   3ea94:	mov	r3, #0
   3ea98:	sub	r2, fp, #176	; 0xb0
   3ea9c:	sub	lr, fp, #96	; 0x60
   3eaa0:	mov	r0, r1
   3eaa4:	sub	r0, r1, #1
   3eaa8:	str	r1, [sp, #48]	; 0x30
   3eaac:	str	r0, [fp, #-96]	; 0xffffffa0
   3eab0:	ldr	r0, [r6]
   3eab4:	str	r0, [sp, #52]	; 0x34
   3eab8:	str	r0, [fp, #-176]	; 0xffffff50
   3eabc:	ldr	r0, [fp, #20]
   3eac0:	ldr	r1, [r0]
   3eac4:	ldr	r0, [fp, #24]
   3eac8:	cmp	r0, #2
   3eacc:	str	r1, [sp, #68]	; 0x44
   3ead0:	str	r1, [sp, #72]	; 0x48
   3ead4:	blt	4a790 <GetDataSlab+0x16634>
   3ead8:	ldr	r5, [sp, #52]	; 0x34
   3eadc:	ldr	r1, [sp, #68]	; 0x44
   3eae0:	sub	r0, r6, #4
   3eae4:	sub	sl, r6, #12
   3eae8:	mov	r7, #1
   3eaec:	mov	r9, #0
   3eaf0:	mvn	ip, #15
   3eaf4:	mov	r3, #0
   3eaf8:	mov	r8, r5
   3eafc:	str	r1, [sp, #72]	; 0x48
   3eb00:	b	3eb54 <GetDataSlab+0xa9f8>
   3eb04:	ldr	r1, [fp, #12]
   3eb08:	sub	r2, fp, #176	; 0xb0
   3eb0c:	sub	lr, fp, #96	; 0x60
   3eb10:	add	sl, sl, #4
   3eb14:	str	r4, [lr, r7, lsl #2]
   3eb18:	str	r5, [r2, r7, lsl #2]
   3eb1c:	ldr	r4, [sp, #72]	; 0x48
   3eb20:	ldr	r1, [r1, r7, lsl #2]
   3eb24:	mla	r3, r1, r8, r3
   3eb28:	ldr	r1, [fp, #20]
   3eb2c:	mov	r8, r5
   3eb30:	mov	r5, r6
   3eb34:	ldr	r6, [fp, #8]
   3eb38:	ldr	r1, [r1, r7, lsl #2]
   3eb3c:	add	r7, r7, #1
   3eb40:	mul	r4, r1, r4
   3eb44:	ldr	r1, [fp, #24]
   3eb48:	str	r4, [sp, #72]	; 0x48
   3eb4c:	cmp	r7, r1
   3eb50:	beq	4a790 <GetDataSlab+0x16634>
   3eb54:	ldr	r1, [fp, #16]
   3eb58:	add	r9, r9, #1
   3eb5c:	cmp	r9, #4
   3eb60:	ldr	r1, [r1, r7, lsl #2]
   3eb64:	str	r5, [r2, r7, lsl #2]
   3eb68:	sub	r4, r1, #1
   3eb6c:	str	r4, [lr, r7, lsl #2]
   3eb70:	ldr	r6, [r6, r7, lsl #2]
   3eb74:	bcs	3eb84 <GetDataSlab+0xaa28>
   3eb78:	mov	r1, r6
   3eb7c:	mov	r2, r7
   3eb80:	b	3ec10 <GetDataSlab+0xaab4>
   3eb84:	vmov.i32	q9, #1	; 0x00000001
   3eb88:	vmov.i32	q10, #1	; 0x00000001
   3eb8c:	vmov.32	d23[1], r6
   3eb90:	vmov.i32	q8, #1	; 0x00000001
   3eb94:	mov	lr, r9
   3eb98:	bic	r9, r9, #3
   3eb9c:	bic	r1, r7, #3
   3eba0:	sub	r2, r7, r9
   3eba4:	vmov.32	d18[0], r5
   3eba8:	vmov.32	d20[0], r4
   3ebac:	mov	r4, sl
   3ebb0:	vorr	d16, d18, d18
   3ebb4:	vmov.i32	q9, #1	; 0x00000001
   3ebb8:	vorr	d18, d20, d20
   3ebbc:	vld1.32	{d20-d21}, [r4], ip
   3ebc0:	subs	r1, r1, #4
   3ebc4:	vrev64.32	q12, q10
   3ebc8:	vext.8	q12, q12, q12, #8
   3ebcc:	vext.8	q11, q11, q12, #12
   3ebd0:	vmul.i32	q9, q9, q12
   3ebd4:	vmul.i32	q8, q11, q8
   3ebd8:	vorr	q11, q12, q12
   3ebdc:	bne	3ebbc <GetDataSlab+0xaa60>
   3ebe0:	vext.8	q11, q9, q8, #8
   3ebe4:	vext.8	q12, q8, q8, #8
   3ebe8:	cmp	lr, r9
   3ebec:	mov	r9, lr
   3ebf0:	vmul.i32	q0, q9, q11
   3ebf4:	vmul.i32	q1, q8, q12
   3ebf8:	vmul.i32	q8, q0, d0[1]
   3ebfc:	vmul.i32	q9, q1, d2[1]
   3ec00:	vmov.32	r4, d16[0]
   3ec04:	vmov.32	r5, d18[0]
   3ec08:	beq	3eb04 <GetDataSlab+0xa9a8>
   3ec0c:	vmov.32	r1, d20[0]
   3ec10:	mul	r5, r1, r5
   3ec14:	ldr	r1, [r0, r2, lsl #2]
   3ec18:	subs	r2, r2, #1
   3ec1c:	mul	r4, r4, r1
   3ec20:	bne	3ec10 <GetDataSlab+0xaab4>
   3ec24:	b	3eb04 <GetDataSlab+0xa9a8>
   3ec28:	ldr	r1, [sl]
   3ec2c:	mov	r8, #0
   3ec30:	sub	r2, fp, #176	; 0xb0
   3ec34:	sub	lr, fp, #96	; 0x60
   3ec38:	mov	r0, r1
   3ec3c:	sub	r0, r1, #1
   3ec40:	str	r1, [sp, #36]	; 0x24
   3ec44:	str	r0, [fp, #-96]	; 0xffffffa0
   3ec48:	ldr	r0, [r6]
   3ec4c:	str	r0, [sp, #72]	; 0x48
   3ec50:	str	r0, [fp, #-176]	; 0xffffff50
   3ec54:	ldr	r0, [fp, #20]
   3ec58:	ldr	r1, [r0]
   3ec5c:	ldr	r0, [fp, #24]
   3ec60:	cmp	r0, #2
   3ec64:	str	r1, [sp, #68]	; 0x44
   3ec68:	str	r1, [sp, #76]	; 0x4c
   3ec6c:	blt	4aa60 <GetDataSlab+0x16904>
   3ec70:	ldr	r4, [sp, #72]	; 0x48
   3ec74:	ldr	r1, [sp, #68]	; 0x44
   3ec78:	sub	r0, r6, #4
   3ec7c:	sub	sl, r6, #12
   3ec80:	mov	r3, #1
   3ec84:	mov	r7, #0
   3ec88:	mvn	ip, #15
   3ec8c:	mov	r8, #0
   3ec90:	mov	r9, r4
   3ec94:	str	r1, [sp, #76]	; 0x4c
   3ec98:	b	3ecec <GetDataSlab+0xab90>
   3ec9c:	ldr	r1, [fp, #12]
   3eca0:	sub	r2, fp, #176	; 0xb0
   3eca4:	sub	lr, fp, #96	; 0x60
   3eca8:	add	sl, sl, #4
   3ecac:	str	r5, [lr, r3, lsl #2]
   3ecb0:	str	r4, [r2, r3, lsl #2]
   3ecb4:	ldr	r5, [sp, #76]	; 0x4c
   3ecb8:	ldr	r1, [r1, r3, lsl #2]
   3ecbc:	mla	r8, r1, r9, r8
   3ecc0:	ldr	r1, [fp, #20]
   3ecc4:	mov	r9, r4
   3ecc8:	mov	r4, r6
   3eccc:	ldr	r6, [fp, #8]
   3ecd0:	ldr	r1, [r1, r3, lsl #2]
   3ecd4:	add	r3, r3, #1
   3ecd8:	mul	r5, r1, r5
   3ecdc:	ldr	r1, [fp, #24]
   3ece0:	str	r5, [sp, #76]	; 0x4c
   3ece4:	cmp	r3, r1
   3ece8:	beq	4aa60 <GetDataSlab+0x16904>
   3ecec:	ldr	r1, [fp, #16]
   3ecf0:	add	r7, r7, #1
   3ecf4:	cmp	r7, #4
   3ecf8:	ldr	r1, [r1, r3, lsl #2]
   3ecfc:	str	r4, [r2, r3, lsl #2]
   3ed00:	sub	r5, r1, #1
   3ed04:	str	r5, [lr, r3, lsl #2]
   3ed08:	ldr	r6, [r6, r3, lsl #2]
   3ed0c:	bcs	3ed1c <GetDataSlab+0xabc0>
   3ed10:	mov	r1, r6
   3ed14:	mov	r2, r3
   3ed18:	b	3eda8 <GetDataSlab+0xac4c>
   3ed1c:	vmov.i32	q9, #1	; 0x00000001
   3ed20:	vmov.i32	q10, #1	; 0x00000001
   3ed24:	vmov.32	d23[1], r6
   3ed28:	vmov.i32	q8, #1	; 0x00000001
   3ed2c:	mov	lr, r7
   3ed30:	bic	r7, r7, #3
   3ed34:	bic	r1, r3, #3
   3ed38:	sub	r2, r3, r7
   3ed3c:	vmov.32	d18[0], r4
   3ed40:	vmov.32	d20[0], r5
   3ed44:	mov	r4, sl
   3ed48:	vorr	d16, d18, d18
   3ed4c:	vmov.i32	q9, #1	; 0x00000001
   3ed50:	vorr	d18, d20, d20
   3ed54:	vld1.32	{d20-d21}, [r4], ip
   3ed58:	subs	r1, r1, #4
   3ed5c:	vrev64.32	q12, q10
   3ed60:	vext.8	q12, q12, q12, #8
   3ed64:	vext.8	q11, q11, q12, #12
   3ed68:	vmul.i32	q9, q9, q12
   3ed6c:	vmul.i32	q8, q11, q8
   3ed70:	vorr	q11, q12, q12
   3ed74:	bne	3ed54 <GetDataSlab+0xabf8>
   3ed78:	vext.8	q11, q9, q8, #8
   3ed7c:	vext.8	q12, q8, q8, #8
   3ed80:	cmp	lr, r7
   3ed84:	mov	r7, lr
   3ed88:	vmul.i32	q0, q9, q11
   3ed8c:	vmul.i32	q1, q8, q12
   3ed90:	vmul.i32	q8, q0, d0[1]
   3ed94:	vmul.i32	q9, q1, d2[1]
   3ed98:	vmov.32	r5, d16[0]
   3ed9c:	vmov.32	r4, d18[0]
   3eda0:	beq	3ec9c <GetDataSlab+0xab40>
   3eda4:	vmov.32	r1, d20[0]
   3eda8:	mul	r4, r1, r4
   3edac:	ldr	r1, [r0, r2, lsl #2]
   3edb0:	subs	r2, r2, #1
   3edb4:	mul	r5, r5, r1
   3edb8:	bne	3eda8 <GetDataSlab+0xac4c>
   3edbc:	b	3ec9c <GetDataSlab+0xab40>
   3edc0:	ldr	r0, [sl]
   3edc4:	mov	r8, #0
   3edc8:	sub	r2, fp, #176	; 0xb0
   3edcc:	sub	lr, fp, #96	; 0x60
   3edd0:	str	r0, [sp, #36]	; 0x24
   3edd4:	sub	r0, r0, #1
   3edd8:	str	r0, [fp, #-96]	; 0xffffffa0
   3eddc:	ldr	r0, [r6]
   3ede0:	str	r0, [sp, #72]	; 0x48
   3ede4:	str	r0, [fp, #-176]	; 0xffffff50
   3ede8:	ldr	r0, [fp, #20]
   3edec:	ldr	r1, [r0]
   3edf0:	ldr	r0, [fp, #24]
   3edf4:	cmp	r0, #2
   3edf8:	str	r1, [sp, #68]	; 0x44
   3edfc:	str	r1, [sp, #76]	; 0x4c
   3ee00:	blt	4ac84 <GetDataSlab+0x16b28>
   3ee04:	ldr	r4, [sp, #72]	; 0x48
   3ee08:	ldr	r1, [sp, #68]	; 0x44
   3ee0c:	sub	r0, r6, #4
   3ee10:	sub	sl, r6, #12
   3ee14:	mov	r3, #1
   3ee18:	mov	r7, #0
   3ee1c:	mvn	ip, #15
   3ee20:	mov	r8, #0
   3ee24:	mov	r9, r4
   3ee28:	str	r1, [sp, #76]	; 0x4c
   3ee2c:	b	3ee80 <GetDataSlab+0xad24>
   3ee30:	ldr	r1, [fp, #12]
   3ee34:	sub	r2, fp, #176	; 0xb0
   3ee38:	sub	lr, fp, #96	; 0x60
   3ee3c:	add	sl, sl, #4
   3ee40:	str	r5, [lr, r3, lsl #2]
   3ee44:	str	r4, [r2, r3, lsl #2]
   3ee48:	ldr	r5, [sp, #76]	; 0x4c
   3ee4c:	ldr	r1, [r1, r3, lsl #2]
   3ee50:	mla	r8, r1, r9, r8
   3ee54:	ldr	r1, [fp, #20]
   3ee58:	mov	r9, r4
   3ee5c:	mov	r4, r6
   3ee60:	ldr	r6, [fp, #8]
   3ee64:	ldr	r1, [r1, r3, lsl #2]
   3ee68:	add	r3, r3, #1
   3ee6c:	mul	r5, r1, r5
   3ee70:	ldr	r1, [fp, #24]
   3ee74:	str	r5, [sp, #76]	; 0x4c
   3ee78:	cmp	r3, r1
   3ee7c:	beq	4ac84 <GetDataSlab+0x16b28>
   3ee80:	ldr	r1, [fp, #16]
   3ee84:	add	r7, r7, #1
   3ee88:	cmp	r7, #4
   3ee8c:	ldr	r1, [r1, r3, lsl #2]
   3ee90:	str	r4, [r2, r3, lsl #2]
   3ee94:	sub	r5, r1, #1
   3ee98:	str	r5, [lr, r3, lsl #2]
   3ee9c:	ldr	r6, [r6, r3, lsl #2]
   3eea0:	bcs	3eeb0 <GetDataSlab+0xad54>
   3eea4:	mov	r1, r6
   3eea8:	mov	r2, r3
   3eeac:	b	3ef3c <GetDataSlab+0xade0>
   3eeb0:	vmov.i32	q9, #1	; 0x00000001
   3eeb4:	vmov.i32	q10, #1	; 0x00000001
   3eeb8:	vmov.32	d23[1], r6
   3eebc:	vmov.i32	q8, #1	; 0x00000001
   3eec0:	mov	lr, r7
   3eec4:	bic	r7, r7, #3
   3eec8:	bic	r1, r3, #3
   3eecc:	sub	r2, r3, r7
   3eed0:	vmov.32	d18[0], r4
   3eed4:	vmov.32	d20[0], r5
   3eed8:	mov	r4, sl
   3eedc:	vorr	d16, d18, d18
   3eee0:	vmov.i32	q9, #1	; 0x00000001
   3eee4:	vorr	d18, d20, d20
   3eee8:	vld1.32	{d20-d21}, [r4], ip
   3eeec:	subs	r1, r1, #4
   3eef0:	vrev64.32	q12, q10
   3eef4:	vext.8	q12, q12, q12, #8
   3eef8:	vext.8	q11, q11, q12, #12
   3eefc:	vmul.i32	q9, q9, q12
   3ef00:	vmul.i32	q8, q11, q8
   3ef04:	vorr	q11, q12, q12
   3ef08:	bne	3eee8 <GetDataSlab+0xad8c>
   3ef0c:	vext.8	q11, q9, q8, #8
   3ef10:	vext.8	q12, q8, q8, #8
   3ef14:	cmp	lr, r7
   3ef18:	mov	r7, lr
   3ef1c:	vmul.i32	q0, q9, q11
   3ef20:	vmul.i32	q1, q8, q12
   3ef24:	vmul.i32	q8, q0, d0[1]
   3ef28:	vmul.i32	q9, q1, d2[1]
   3ef2c:	vmov.32	r5, d16[0]
   3ef30:	vmov.32	r4, d18[0]
   3ef34:	beq	3ee30 <GetDataSlab+0xacd4>
   3ef38:	vmov.32	r1, d20[0]
   3ef3c:	mul	r4, r1, r4
   3ef40:	ldr	r1, [r0, r2, lsl #2]
   3ef44:	subs	r2, r2, #1
   3ef48:	mul	r5, r5, r1
   3ef4c:	bne	3ef3c <GetDataSlab+0xade0>
   3ef50:	b	3ee30 <GetDataSlab+0xacd4>
   3ef54:	ldr	r0, [sl]
   3ef58:	mov	ip, #0
   3ef5c:	sub	r7, fp, #176	; 0xb0
   3ef60:	sub	lr, fp, #96	; 0x60
   3ef64:	str	r0, [sp, #32]
   3ef68:	sub	r0, r0, #1
   3ef6c:	str	r0, [fp, #-96]	; 0xffffffa0
   3ef70:	ldr	r0, [r6]
   3ef74:	str	r0, [sp, #24]
   3ef78:	str	r0, [fp, #-176]	; 0xffffff50
   3ef7c:	ldr	r0, [fp, #20]
   3ef80:	ldr	r1, [r0]
   3ef84:	ldr	r0, [fp, #24]
   3ef88:	cmp	r0, #2
   3ef8c:	str	r1, [sp, #44]	; 0x2c
   3ef90:	str	r1, [sp, #68]	; 0x44
   3ef94:	blt	4aeb8 <GetDataSlab+0x16d5c>
   3ef98:	ldr	r0, [fp, #8]
   3ef9c:	ldr	r2, [sp, #24]
   3efa0:	mov	r6, #1
   3efa4:	mov	r9, #0
   3efa8:	mvn	r5, #15
   3efac:	mov	ip, #0
   3efb0:	mov	r1, r0
   3efb4:	sub	r0, r0, #4
   3efb8:	mov	r8, r2
   3efbc:	sub	sl, r1, #12
   3efc0:	ldr	r1, [sp, #44]	; 0x2c
   3efc4:	str	r1, [sp, #68]	; 0x44
   3efc8:	b	3f018 <GetDataSlab+0xaebc>
   3efcc:	ldr	r3, [fp, #12]
   3efd0:	sub	r7, fp, #176	; 0xb0
   3efd4:	sub	lr, fp, #96	; 0x60
   3efd8:	add	sl, sl, #4
   3efdc:	str	r4, [lr, r6, lsl #2]
   3efe0:	str	r2, [r7, r6, lsl #2]
   3efe4:	ldr	r4, [sp, #68]	; 0x44
   3efe8:	ldr	r3, [r3, r6, lsl #2]
   3efec:	mla	ip, r3, r8, ip
   3eff0:	ldr	r3, [fp, #20]
   3eff4:	mov	r8, r2
   3eff8:	mov	r2, r1
   3effc:	ldr	r3, [r3, r6, lsl #2]
   3f000:	add	r6, r6, #1
   3f004:	mul	r4, r3, r4
   3f008:	ldr	r3, [fp, #24]
   3f00c:	str	r4, [sp, #68]	; 0x44
   3f010:	cmp	r6, r3
   3f014:	beq	4aeb8 <GetDataSlab+0x16d5c>
   3f018:	ldr	r1, [fp, #16]
   3f01c:	add	r9, r9, #1
   3f020:	cmp	r9, #4
   3f024:	ldr	r3, [r1, r6, lsl #2]
   3f028:	ldr	r1, [fp, #8]
   3f02c:	str	r2, [r7, r6, lsl #2]
   3f030:	sub	r4, r3, #1
   3f034:	str	r4, [lr, r6, lsl #2]
   3f038:	ldr	r1, [r1, r6, lsl #2]
   3f03c:	bcs	3f04c <GetDataSlab+0xaef0>
   3f040:	mov	r3, r1
   3f044:	mov	r7, r6
   3f048:	b	3f0d8 <GetDataSlab+0xaf7c>
   3f04c:	vmov.i32	q9, #1	; 0x00000001
   3f050:	vmov.i32	q10, #1	; 0x00000001
   3f054:	vmov.32	d23[1], r1
   3f058:	vmov.i32	q8, #1	; 0x00000001
   3f05c:	mov	lr, r9
   3f060:	bic	r9, r9, #3
   3f064:	bic	r3, r6, #3
   3f068:	sub	r7, r6, r9
   3f06c:	vmov.32	d18[0], r2
   3f070:	vmov.32	d20[0], r4
   3f074:	mov	r2, sl
   3f078:	vorr	d16, d18, d18
   3f07c:	vmov.i32	q9, #1	; 0x00000001
   3f080:	vorr	d18, d20, d20
   3f084:	vld1.32	{d20-d21}, [r2], r5
   3f088:	subs	r3, r3, #4
   3f08c:	vrev64.32	q12, q10
   3f090:	vext.8	q12, q12, q12, #8
   3f094:	vext.8	q11, q11, q12, #12
   3f098:	vmul.i32	q9, q9, q12
   3f09c:	vmul.i32	q8, q11, q8
   3f0a0:	vorr	q11, q12, q12
   3f0a4:	bne	3f084 <GetDataSlab+0xaf28>
   3f0a8:	vext.8	q11, q9, q8, #8
   3f0ac:	vext.8	q12, q8, q8, #8
   3f0b0:	cmp	lr, r9
   3f0b4:	mov	r9, lr
   3f0b8:	vmul.i32	q0, q9, q11
   3f0bc:	vmul.i32	q1, q8, q12
   3f0c0:	vmul.i32	q8, q0, d0[1]
   3f0c4:	vmul.i32	q9, q1, d2[1]
   3f0c8:	vmov.32	r4, d16[0]
   3f0cc:	vmov.32	r2, d18[0]
   3f0d0:	beq	3efcc <GetDataSlab+0xae70>
   3f0d4:	vmov.32	r3, d20[0]
   3f0d8:	mul	r2, r3, r2
   3f0dc:	ldr	r3, [r0, r7, lsl #2]
   3f0e0:	subs	r7, r7, #1
   3f0e4:	mul	r4, r4, r3
   3f0e8:	bne	3f0d8 <GetDataSlab+0xaf7c>
   3f0ec:	b	3efcc <GetDataSlab+0xae70>
   3f0f0:	ldr	lr, [sl]
   3f0f4:	mov	r7, #0
   3f0f8:	sub	r2, fp, #176	; 0xb0
   3f0fc:	sub	r3, fp, #96	; 0x60
   3f100:	sub	r0, lr, #1
   3f104:	str	r0, [fp, #-96]	; 0xffffffa0
   3f108:	ldr	r0, [r6]
   3f10c:	str	r0, [sp, #40]	; 0x28
   3f110:	str	r0, [fp, #-176]	; 0xffffff50
   3f114:	ldr	r0, [fp, #20]
   3f118:	ldr	r1, [r0]
   3f11c:	ldr	r0, [fp, #24]
   3f120:	cmp	r0, #2
   3f124:	str	r1, [sp, #68]	; 0x44
   3f128:	str	r1, [sp, #72]	; 0x48
   3f12c:	blt	4b1dc <GetDataSlab+0x17080>
   3f130:	ldr	r0, [fp, #8]
   3f134:	ldr	r4, [sp, #40]	; 0x28
   3f138:	mov	r6, #1
   3f13c:	mov	r5, #0
   3f140:	mvn	r8, #15
   3f144:	mov	r7, #0
   3f148:	sub	r1, r0, #4
   3f14c:	sub	ip, r0, #12
   3f150:	mov	r0, r4
   3f154:	ldr	r0, [sp, #68]	; 0x44
   3f158:	str	r4, [sp, #84]	; 0x54
   3f15c:	str	r0, [sp, #72]	; 0x48
   3f160:	b	3f1c0 <GetDataSlab+0xb064>
   3f164:	ldr	sl, [fp, #16]
   3f168:	mov	r9, r5
   3f16c:	sub	r3, fp, #96	; 0x60
   3f170:	sub	r2, fp, #176	; 0xb0
   3f174:	ldr	r5, [sp, #84]	; 0x54
   3f178:	str	r4, [sp, #84]	; 0x54
   3f17c:	add	ip, ip, #4
   3f180:	str	r0, [r3, r6, lsl #2]
   3f184:	ldr	r0, [fp, #12]
   3f188:	str	r4, [r2, r6, lsl #2]
   3f18c:	ldr	r4, [sp, #76]	; 0x4c
   3f190:	ldr	r0, [r0, r6, lsl #2]
   3f194:	mla	r7, r0, r5, r7
   3f198:	ldr	r0, [fp, #20]
   3f19c:	ldr	r5, [sp, #72]	; 0x48
   3f1a0:	ldr	r0, [r0, r6, lsl #2]
   3f1a4:	add	r6, r6, #1
   3f1a8:	mul	r5, r0, r5
   3f1ac:	ldr	r0, [fp, #24]
   3f1b0:	str	r5, [sp, #72]	; 0x48
   3f1b4:	mov	r5, r9
   3f1b8:	cmp	r6, r0
   3f1bc:	beq	4b1dc <GetDataSlab+0x17080>
   3f1c0:	ldr	r0, [sl, r6, lsl #2]
   3f1c4:	str	r4, [r2, r6, lsl #2]
   3f1c8:	ldr	r2, [fp, #8]
   3f1cc:	add	r5, r5, #1
   3f1d0:	cmp	r5, #4
   3f1d4:	sub	r0, r0, #1
   3f1d8:	str	r0, [r3, r6, lsl #2]
   3f1dc:	ldr	r2, [r2, r6, lsl #2]
   3f1e0:	str	r2, [sp, #76]	; 0x4c
   3f1e4:	bcs	3f1f0 <GetDataSlab+0xb094>
   3f1e8:	mov	r3, r6
   3f1ec:	b	3f278 <GetDataSlab+0xb11c>
   3f1f0:	vmov.i32	q9, #1	; 0x00000001
   3f1f4:	vmov.i32	q10, #1	; 0x00000001
   3f1f8:	vmov.32	d23[1], r2
   3f1fc:	vmov.i32	q8, #1	; 0x00000001
   3f200:	bic	r9, r5, #3
   3f204:	bic	sl, r6, #3
   3f208:	sub	r3, r6, r9
   3f20c:	vmov.32	d18[0], r4
   3f210:	vmov.32	d20[0], r0
   3f214:	mov	r0, ip
   3f218:	vorr	d16, d18, d18
   3f21c:	vmov.i32	q9, #1	; 0x00000001
   3f220:	vorr	d18, d20, d20
   3f224:	vld1.32	{d20-d21}, [r0], r8
   3f228:	subs	sl, sl, #4
   3f22c:	vrev64.32	q12, q10
   3f230:	vext.8	q12, q12, q12, #8
   3f234:	vext.8	q11, q11, q12, #12
   3f238:	vmul.i32	q9, q9, q12
   3f23c:	vmul.i32	q8, q11, q8
   3f240:	vorr	q11, q12, q12
   3f244:	bne	3f224 <GetDataSlab+0xb0c8>
   3f248:	vext.8	q11, q9, q8, #8
   3f24c:	vext.8	q12, q8, q8, #8
   3f250:	cmp	r5, r9
   3f254:	vmul.i32	q0, q9, q11
   3f258:	vmul.i32	q1, q8, q12
   3f25c:	vmul.i32	q8, q0, d0[1]
   3f260:	vmul.i32	q9, q1, d2[1]
   3f264:	vmov.32	r0, d16[0]
   3f268:	vmov.32	r4, d18[0]
   3f26c:	beq	3f164 <GetDataSlab+0xb008>
   3f270:	vmov.32	r2, d20[0]
   3f274:	ldr	sl, [fp, #16]
   3f278:	mov	r9, r5
   3f27c:	mul	r4, r2, r4
   3f280:	ldr	r2, [r1, r3, lsl #2]
   3f284:	subs	r3, r3, #1
   3f288:	mul	r0, r0, r2
   3f28c:	bne	3f27c <GetDataSlab+0xb120>
   3f290:	b	3f16c <GetDataSlab+0xb010>
   3f294:	ldr	r0, [sl]
   3f298:	mov	r1, #0
   3f29c:	sub	r7, fp, #176	; 0xb0
   3f2a0:	str	r0, [sp, #68]	; 0x44
   3f2a4:	sub	r0, r0, #1
   3f2a8:	str	r0, [fp, #-96]	; 0xffffffa0
   3f2ac:	ldr	r0, [r6]
   3f2b0:	sub	r6, fp, #96	; 0x60
   3f2b4:	str	r0, [sp, #60]	; 0x3c
   3f2b8:	str	r0, [fp, #-176]	; 0xffffff50
   3f2bc:	ldr	r0, [fp, #20]
   3f2c0:	ldr	r2, [r0]
   3f2c4:	ldr	r0, [fp, #24]
   3f2c8:	cmp	r0, #2
   3f2cc:	str	r2, [sp, #72]	; 0x48
   3f2d0:	str	r2, [sp, #76]	; 0x4c
   3f2d4:	blt	4b55c <GetDataSlab+0x17400>
   3f2d8:	ldr	r0, [fp, #8]
   3f2dc:	ldr	r3, [sp, #60]	; 0x3c
   3f2e0:	ldr	r2, [sp, #72]	; 0x48
   3f2e4:	mov	r5, #1
   3f2e8:	mov	r9, #0
   3f2ec:	mvn	r8, #15
   3f2f0:	mov	r1, r0
   3f2f4:	sub	r0, r0, #4
   3f2f8:	mov	sl, r3
   3f2fc:	str	r2, [sp, #76]	; 0x4c
   3f300:	sub	ip, r1, #12
   3f304:	mov	r1, #0
   3f308:	b	3f35c <GetDataSlab+0xb200>
   3f30c:	mov	lr, r4
   3f310:	sub	r6, fp, #96	; 0x60
   3f314:	sub	r7, fp, #176	; 0xb0
   3f318:	ldr	r4, [sp, #76]	; 0x4c
   3f31c:	add	ip, ip, #4
   3f320:	str	r2, [r6, r5, lsl #2]
   3f324:	ldr	r2, [fp, #12]
   3f328:	str	r3, [r7, r5, lsl #2]
   3f32c:	ldr	r2, [r2, r5, lsl #2]
   3f330:	mla	r1, r2, sl, r1
   3f334:	ldr	r2, [fp, #20]
   3f338:	mov	sl, r3
   3f33c:	mov	r3, lr
   3f340:	ldr	r2, [r2, r5, lsl #2]
   3f344:	add	r5, r5, #1
   3f348:	mul	r4, r2, r4
   3f34c:	ldr	r2, [fp, #24]
   3f350:	str	r4, [sp, #76]	; 0x4c
   3f354:	cmp	r5, r2
   3f358:	beq	4b55c <GetDataSlab+0x17400>
   3f35c:	ldr	r2, [fp, #16]
   3f360:	add	r9, r9, #1
   3f364:	cmp	r9, #4
   3f368:	ldr	r2, [r2, r5, lsl #2]
   3f36c:	str	r3, [r7, r5, lsl #2]
   3f370:	ldr	r7, [fp, #8]
   3f374:	sub	r2, r2, #1
   3f378:	str	r2, [r6, r5, lsl #2]
   3f37c:	ldr	lr, [r7, r5, lsl #2]
   3f380:	bcs	3f390 <GetDataSlab+0xb234>
   3f384:	mov	r7, lr
   3f388:	mov	r6, r5
   3f38c:	b	3f420 <GetDataSlab+0xb2c4>
   3f390:	vmov.i32	q9, #1	; 0x00000001
   3f394:	vmov.i32	q10, #1	; 0x00000001
   3f398:	mov	r6, lr
   3f39c:	vmov.i32	q8, #1	; 0x00000001
   3f3a0:	bic	r7, r9, #3
   3f3a4:	bic	lr, r5, #3
   3f3a8:	vmov.32	d23[1], r6
   3f3ac:	mov	r4, r6
   3f3b0:	sub	r6, r5, r7
   3f3b4:	vmov.32	d18[0], r3
   3f3b8:	vmov.32	d20[0], r2
   3f3bc:	mov	r2, ip
   3f3c0:	vorr	d16, d18, d18
   3f3c4:	vmov.i32	q9, #1	; 0x00000001
   3f3c8:	vorr	d18, d20, d20
   3f3cc:	vld1.32	{d20-d21}, [r2], r8
   3f3d0:	subs	lr, lr, #4
   3f3d4:	vrev64.32	q12, q10
   3f3d8:	vext.8	q12, q12, q12, #8
   3f3dc:	vext.8	q11, q11, q12, #12
   3f3e0:	vmul.i32	q9, q9, q12
   3f3e4:	vmul.i32	q8, q11, q8
   3f3e8:	vorr	q11, q12, q12
   3f3ec:	bne	3f3cc <GetDataSlab+0xb270>
   3f3f0:	vext.8	q11, q9, q8, #8
   3f3f4:	vext.8	q12, q8, q8, #8
   3f3f8:	cmp	r9, r7
   3f3fc:	vmul.i32	q0, q9, q11
   3f400:	vmul.i32	q1, q8, q12
   3f404:	vmul.i32	q8, q0, d0[1]
   3f408:	vmul.i32	q9, q1, d2[1]
   3f40c:	vmov.32	r2, d16[0]
   3f410:	vmov.32	r3, d18[0]
   3f414:	beq	3f30c <GetDataSlab+0xb1b0>
   3f418:	vmov.32	r7, d20[0]
   3f41c:	mov	lr, r4
   3f420:	mul	r3, r7, r3
   3f424:	ldr	r7, [r0, r6, lsl #2]
   3f428:	subs	r6, r6, #1
   3f42c:	mul	r2, r2, r7
   3f430:	bne	3f420 <GetDataSlab+0xb2c4>
   3f434:	b	3f310 <GetDataSlab+0xb1b4>
   3f438:	ldr	r0, [sl]
   3f43c:	mov	r1, #0
   3f440:	sub	ip, fp, #176	; 0xb0
   3f444:	str	r0, [sp, #68]	; 0x44
   3f448:	sub	r0, r0, #1
   3f44c:	str	r0, [fp, #-96]	; 0xffffffa0
   3f450:	ldr	r0, [r6]
   3f454:	sub	r6, fp, #96	; 0x60
   3f458:	str	r0, [sp, #56]	; 0x38
   3f45c:	str	r0, [fp, #-176]	; 0xffffff50
   3f460:	ldr	r0, [fp, #20]
   3f464:	ldr	r2, [r0]
   3f468:	ldr	r0, [fp, #24]
   3f46c:	cmp	r0, #2
   3f470:	str	r2, [sp, #72]	; 0x48
   3f474:	str	r2, [sp, #76]	; 0x4c
   3f478:	blt	4b814 <GetDataSlab+0x176b8>
   3f47c:	ldr	r0, [fp, #8]
   3f480:	ldr	r3, [sp, #56]	; 0x38
   3f484:	ldr	r2, [sp, #72]	; 0x48
   3f488:	mov	r5, #1
   3f48c:	mov	r8, #0
   3f490:	mvn	r4, #15
   3f494:	mov	r1, r0
   3f498:	sub	r0, r0, #4
   3f49c:	mov	r9, r3
   3f4a0:	str	r2, [sp, #76]	; 0x4c
   3f4a4:	sub	sl, r1, #12
   3f4a8:	mov	r1, #0
   3f4ac:	b	3f4fc <GetDataSlab+0xb3a0>
   3f4b0:	sub	ip, fp, #176	; 0xb0
   3f4b4:	sub	r6, fp, #96	; 0x60
   3f4b8:	str	r3, [ip, r5, lsl #2]
   3f4bc:	ldr	r7, [sp, #76]	; 0x4c
   3f4c0:	add	sl, sl, #4
   3f4c4:	str	r2, [r6, r5, lsl #2]
   3f4c8:	ldr	r2, [fp, #12]
   3f4cc:	ldr	r2, [r2, r5, lsl #2]
   3f4d0:	mla	r1, r2, r9, r1
   3f4d4:	ldr	r2, [fp, #20]
   3f4d8:	mov	r9, r3
   3f4dc:	mov	r3, lr
   3f4e0:	ldr	r2, [r2, r5, lsl #2]
   3f4e4:	add	r5, r5, #1
   3f4e8:	mul	r7, r2, r7
   3f4ec:	ldr	r2, [fp, #24]
   3f4f0:	str	r7, [sp, #76]	; 0x4c
   3f4f4:	cmp	r5, r2
   3f4f8:	beq	4b814 <GetDataSlab+0x176b8>
   3f4fc:	ldr	r2, [fp, #16]
   3f500:	ldr	r7, [fp, #8]
   3f504:	add	r8, r8, #1
   3f508:	cmp	r8, #4
   3f50c:	ldr	r2, [r2, r5, lsl #2]
   3f510:	str	r3, [ip, r5, lsl #2]
   3f514:	sub	r2, r2, #1
   3f518:	str	r2, [r6, r5, lsl #2]
   3f51c:	ldr	lr, [r7, r5, lsl #2]
   3f520:	bcs	3f530 <GetDataSlab+0xb3d4>
   3f524:	mov	r7, lr
   3f528:	mov	r6, r5
   3f52c:	b	3f5b8 <GetDataSlab+0xb45c>
   3f530:	vmov.i32	q9, #1	; 0x00000001
   3f534:	vmov.i32	q10, #1	; 0x00000001
   3f538:	vmov.32	d23[1], lr
   3f53c:	vmov.i32	q8, #1	; 0x00000001
   3f540:	bic	r7, r8, #3
   3f544:	bic	ip, r5, #3
   3f548:	sub	r6, r5, r7
   3f54c:	vmov.32	d18[0], r3
   3f550:	vmov.32	d20[0], r2
   3f554:	mov	r2, sl
   3f558:	vorr	d16, d18, d18
   3f55c:	vmov.i32	q9, #1	; 0x00000001
   3f560:	vorr	d18, d20, d20
   3f564:	vld1.32	{d20-d21}, [r2], r4
   3f568:	subs	ip, ip, #4
   3f56c:	vrev64.32	q12, q10
   3f570:	vext.8	q12, q12, q12, #8
   3f574:	vext.8	q11, q11, q12, #12
   3f578:	vmul.i32	q9, q9, q12
   3f57c:	vmul.i32	q8, q11, q8
   3f580:	vorr	q11, q12, q12
   3f584:	bne	3f564 <GetDataSlab+0xb408>
   3f588:	vext.8	q11, q9, q8, #8
   3f58c:	vext.8	q12, q8, q8, #8
   3f590:	cmp	r8, r7
   3f594:	vmul.i32	q0, q9, q11
   3f598:	vmul.i32	q1, q8, q12
   3f59c:	vmul.i32	q8, q0, d0[1]
   3f5a0:	vmul.i32	q9, q1, d2[1]
   3f5a4:	vmov.32	r2, d16[0]
   3f5a8:	vmov.32	r3, d18[0]
   3f5ac:	beq	3f4b0 <GetDataSlab+0xb354>
   3f5b0:	vmov.32	r7, d20[0]
   3f5b4:	sub	ip, fp, #176	; 0xb0
   3f5b8:	mul	r3, r7, r3
   3f5bc:	ldr	r7, [r0, r6, lsl #2]
   3f5c0:	subs	r6, r6, #1
   3f5c4:	mul	r2, r2, r7
   3f5c8:	bne	3f5b8 <GetDataSlab+0xb45c>
   3f5cc:	b	3f4b4 <GetDataSlab+0xb358>
   3f5d0:	ldr	r0, [sl]
   3f5d4:	sub	r2, fp, #176	; 0xb0
   3f5d8:	mov	r3, #0
   3f5dc:	mov	lr, r2
   3f5e0:	sub	r2, fp, #96	; 0x60
   3f5e4:	str	r0, [sp, #56]	; 0x38
   3f5e8:	sub	r0, r0, #1
   3f5ec:	str	r0, [fp, #-96]	; 0xffffffa0
   3f5f0:	ldr	r0, [r6]
   3f5f4:	str	r0, [sp, #52]	; 0x34
   3f5f8:	str	r0, [fp, #-176]	; 0xffffff50
   3f5fc:	ldr	r0, [fp, #20]
   3f600:	ldr	r1, [r0]
   3f604:	ldr	r0, [fp, #24]
   3f608:	cmp	r0, #2
   3f60c:	str	r1, [sp, #72]	; 0x48
   3f610:	str	r1, [sp, #76]	; 0x4c
   3f614:	blt	4bae0 <GetDataSlab+0x17984>
   3f618:	ldr	r5, [sp, #52]	; 0x34
   3f61c:	ldr	r1, [sp, #72]	; 0x48
   3f620:	sub	r0, r6, #4
   3f624:	sub	sl, r6, #12
   3f628:	mov	r7, #1
   3f62c:	mov	r8, #0
   3f630:	mvn	ip, #15
   3f634:	mov	r3, #0
   3f638:	mov	r9, r5
   3f63c:	str	r1, [sp, #76]	; 0x4c
   3f640:	b	3f698 <GetDataSlab+0xb53c>
   3f644:	ldr	r1, [fp, #12]
   3f648:	sub	r2, fp, #176	; 0xb0
   3f64c:	add	sl, sl, #4
   3f650:	mov	lr, r2
   3f654:	str	r5, [r2, r7, lsl #2]
   3f658:	sub	r2, fp, #96	; 0x60
   3f65c:	str	r4, [r2, r7, lsl #2]
   3f660:	ldr	r4, [sp, #76]	; 0x4c
   3f664:	ldr	r1, [r1, r7, lsl #2]
   3f668:	mla	r3, r1, r9, r3
   3f66c:	ldr	r1, [fp, #20]
   3f670:	mov	r9, r5
   3f674:	mov	r5, r6
   3f678:	ldr	r6, [fp, #8]
   3f67c:	ldr	r1, [r1, r7, lsl #2]
   3f680:	add	r7, r7, #1
   3f684:	mul	r4, r1, r4
   3f688:	ldr	r1, [fp, #24]
   3f68c:	str	r4, [sp, #76]	; 0x4c
   3f690:	cmp	r7, r1
   3f694:	beq	4bae0 <GetDataSlab+0x17984>
   3f698:	ldr	r1, [fp, #16]
   3f69c:	add	r8, r8, #1
   3f6a0:	cmp	r8, #4
   3f6a4:	ldr	r1, [r1, r7, lsl #2]
   3f6a8:	str	r5, [lr, r7, lsl #2]
   3f6ac:	sub	r4, r1, #1
   3f6b0:	str	r4, [r2, r7, lsl #2]
   3f6b4:	ldr	r6, [r6, r7, lsl #2]
   3f6b8:	bcs	3f6c8 <GetDataSlab+0xb56c>
   3f6bc:	mov	r1, r6
   3f6c0:	mov	r2, r7
   3f6c4:	b	3f74c <GetDataSlab+0xb5f0>
   3f6c8:	vmov.i32	q9, #1	; 0x00000001
   3f6cc:	vmov.i32	q10, #1	; 0x00000001
   3f6d0:	vmov.32	d23[1], r6
   3f6d4:	vmov.i32	q8, #1	; 0x00000001
   3f6d8:	bic	r1, r8, #3
   3f6dc:	bic	lr, r7, #3
   3f6e0:	sub	r2, r7, r1
   3f6e4:	vmov.32	d18[0], r5
   3f6e8:	vmov.32	d20[0], r4
   3f6ec:	mov	r4, sl
   3f6f0:	vorr	d16, d18, d18
   3f6f4:	vmov.i32	q9, #1	; 0x00000001
   3f6f8:	vorr	d18, d20, d20
   3f6fc:	vld1.32	{d20-d21}, [r4], ip
   3f700:	subs	lr, lr, #4
   3f704:	vrev64.32	q12, q10
   3f708:	vext.8	q12, q12, q12, #8
   3f70c:	vext.8	q11, q11, q12, #12
   3f710:	vmul.i32	q9, q9, q12
   3f714:	vmul.i32	q8, q11, q8
   3f718:	vorr	q11, q12, q12
   3f71c:	bne	3f6fc <GetDataSlab+0xb5a0>
   3f720:	vext.8	q11, q9, q8, #8
   3f724:	vext.8	q12, q8, q8, #8
   3f728:	cmp	r8, r1
   3f72c:	vmul.i32	q0, q9, q11
   3f730:	vmul.i32	q1, q8, q12
   3f734:	vmul.i32	q8, q0, d0[1]
   3f738:	vmul.i32	q9, q1, d2[1]
   3f73c:	vmov.32	r4, d16[0]
   3f740:	vmov.32	r5, d18[0]
   3f744:	beq	3f644 <GetDataSlab+0xb4e8>
   3f748:	vmov.32	r1, d20[0]
   3f74c:	mul	r5, r1, r5
   3f750:	ldr	r1, [r0, r2, lsl #2]
   3f754:	subs	r2, r2, #1
   3f758:	mul	r4, r4, r1
   3f75c:	bne	3f74c <GetDataSlab+0xb5f0>
   3f760:	b	3f644 <GetDataSlab+0xb4e8>
   3f764:	ldr	r1, [sl]
   3f768:	mov	r3, #0
   3f76c:	sub	r2, fp, #176	; 0xb0
   3f770:	sub	lr, fp, #96	; 0x60
   3f774:	mov	r0, r1
   3f778:	sub	r0, r1, #1
   3f77c:	str	r1, [sp, #48]	; 0x30
   3f780:	str	r0, [fp, #-96]	; 0xffffffa0
   3f784:	ldr	r0, [r6]
   3f788:	str	r0, [sp, #52]	; 0x34
   3f78c:	str	r0, [fp, #-176]	; 0xffffff50
   3f790:	ldr	r0, [fp, #20]
   3f794:	ldr	r1, [r0]
   3f798:	ldr	r0, [fp, #24]
   3f79c:	cmp	r0, #2
   3f7a0:	str	r1, [sp, #68]	; 0x44
   3f7a4:	str	r1, [sp, #72]	; 0x48
   3f7a8:	blt	4bdb4 <GetDataSlab+0x17c58>
   3f7ac:	ldr	r5, [sp, #52]	; 0x34
   3f7b0:	ldr	r1, [sp, #68]	; 0x44
   3f7b4:	sub	r0, r6, #4
   3f7b8:	sub	sl, r6, #12
   3f7bc:	mov	r7, #1
   3f7c0:	mov	r9, #0
   3f7c4:	mvn	ip, #15
   3f7c8:	mov	r3, #0
   3f7cc:	mov	r8, r5
   3f7d0:	str	r1, [sp, #72]	; 0x48
   3f7d4:	b	3f828 <GetDataSlab+0xb6cc>
   3f7d8:	ldr	r1, [fp, #12]
   3f7dc:	sub	r2, fp, #176	; 0xb0
   3f7e0:	sub	lr, fp, #96	; 0x60
   3f7e4:	add	sl, sl, #4
   3f7e8:	str	r4, [lr, r7, lsl #2]
   3f7ec:	str	r5, [r2, r7, lsl #2]
   3f7f0:	ldr	r4, [sp, #72]	; 0x48
   3f7f4:	ldr	r1, [r1, r7, lsl #2]
   3f7f8:	mla	r3, r1, r8, r3
   3f7fc:	ldr	r1, [fp, #20]
   3f800:	mov	r8, r5
   3f804:	mov	r5, r6
   3f808:	ldr	r6, [fp, #8]
   3f80c:	ldr	r1, [r1, r7, lsl #2]
   3f810:	add	r7, r7, #1
   3f814:	mul	r4, r1, r4
   3f818:	ldr	r1, [fp, #24]
   3f81c:	str	r4, [sp, #72]	; 0x48
   3f820:	cmp	r7, r1
   3f824:	beq	4bdb4 <GetDataSlab+0x17c58>
   3f828:	ldr	r1, [fp, #16]
   3f82c:	add	r9, r9, #1
   3f830:	cmp	r9, #4
   3f834:	ldr	r1, [r1, r7, lsl #2]
   3f838:	str	r5, [r2, r7, lsl #2]
   3f83c:	sub	r4, r1, #1
   3f840:	str	r4, [lr, r7, lsl #2]
   3f844:	ldr	r6, [r6, r7, lsl #2]
   3f848:	bcs	3f858 <GetDataSlab+0xb6fc>
   3f84c:	mov	r1, r6
   3f850:	mov	r2, r7
   3f854:	b	3f8e4 <GetDataSlab+0xb788>
   3f858:	vmov.i32	q9, #1	; 0x00000001
   3f85c:	vmov.i32	q10, #1	; 0x00000001
   3f860:	vmov.32	d23[1], r6
   3f864:	vmov.i32	q8, #1	; 0x00000001
   3f868:	mov	lr, r9
   3f86c:	bic	r9, r9, #3
   3f870:	bic	r1, r7, #3
   3f874:	sub	r2, r7, r9
   3f878:	vmov.32	d18[0], r5
   3f87c:	vmov.32	d20[0], r4
   3f880:	mov	r4, sl
   3f884:	vorr	d16, d18, d18
   3f888:	vmov.i32	q9, #1	; 0x00000001
   3f88c:	vorr	d18, d20, d20
   3f890:	vld1.32	{d20-d21}, [r4], ip
   3f894:	subs	r1, r1, #4
   3f898:	vrev64.32	q12, q10
   3f89c:	vext.8	q12, q12, q12, #8
   3f8a0:	vext.8	q11, q11, q12, #12
   3f8a4:	vmul.i32	q9, q9, q12
   3f8a8:	vmul.i32	q8, q11, q8
   3f8ac:	vorr	q11, q12, q12
   3f8b0:	bne	3f890 <GetDataSlab+0xb734>
   3f8b4:	vext.8	q11, q9, q8, #8
   3f8b8:	vext.8	q12, q8, q8, #8
   3f8bc:	cmp	lr, r9
   3f8c0:	mov	r9, lr
   3f8c4:	vmul.i32	q0, q9, q11
   3f8c8:	vmul.i32	q1, q8, q12
   3f8cc:	vmul.i32	q8, q0, d0[1]
   3f8d0:	vmul.i32	q9, q1, d2[1]
   3f8d4:	vmov.32	r4, d16[0]
   3f8d8:	vmov.32	r5, d18[0]
   3f8dc:	beq	3f7d8 <GetDataSlab+0xb67c>
   3f8e0:	vmov.32	r1, d20[0]
   3f8e4:	mul	r5, r1, r5
   3f8e8:	ldr	r1, [r0, r2, lsl #2]
   3f8ec:	subs	r2, r2, #1
   3f8f0:	mul	r4, r4, r1
   3f8f4:	bne	3f8e4 <GetDataSlab+0xb788>
   3f8f8:	b	3f7d8 <GetDataSlab+0xb67c>
   3f8fc:	ldr	r1, [sl]
   3f900:	mov	r8, #0
   3f904:	sub	r2, fp, #176	; 0xb0
   3f908:	sub	lr, fp, #96	; 0x60
   3f90c:	mov	r0, r1
   3f910:	sub	r0, r1, #1
   3f914:	str	r1, [sp, #36]	; 0x24
   3f918:	str	r0, [fp, #-96]	; 0xffffffa0
   3f91c:	ldr	r0, [r6]
   3f920:	str	r0, [sp, #72]	; 0x48
   3f924:	str	r0, [fp, #-176]	; 0xffffff50
   3f928:	ldr	r0, [fp, #20]
   3f92c:	ldr	r1, [r0]
   3f930:	ldr	r0, [fp, #24]
   3f934:	cmp	r0, #2
   3f938:	str	r1, [sp, #68]	; 0x44
   3f93c:	str	r1, [sp, #76]	; 0x4c
   3f940:	blt	4c084 <GetDataSlab+0x17f28>
   3f944:	ldr	r4, [sp, #72]	; 0x48
   3f948:	ldr	r1, [sp, #68]	; 0x44
   3f94c:	sub	r0, r6, #4
   3f950:	sub	sl, r6, #12
   3f954:	mov	r3, #1
   3f958:	mov	r7, #0
   3f95c:	mvn	ip, #15
   3f960:	mov	r8, #0
   3f964:	mov	r9, r4
   3f968:	str	r1, [sp, #76]	; 0x4c
   3f96c:	b	3f9c0 <GetDataSlab+0xb864>
   3f970:	ldr	r1, [fp, #12]
   3f974:	sub	r2, fp, #176	; 0xb0
   3f978:	sub	lr, fp, #96	; 0x60
   3f97c:	add	sl, sl, #4
   3f980:	str	r5, [lr, r3, lsl #2]
   3f984:	str	r4, [r2, r3, lsl #2]
   3f988:	ldr	r5, [sp, #76]	; 0x4c
   3f98c:	ldr	r1, [r1, r3, lsl #2]
   3f990:	mla	r8, r1, r9, r8
   3f994:	ldr	r1, [fp, #20]
   3f998:	mov	r9, r4
   3f99c:	mov	r4, r6
   3f9a0:	ldr	r6, [fp, #8]
   3f9a4:	ldr	r1, [r1, r3, lsl #2]
   3f9a8:	add	r3, r3, #1
   3f9ac:	mul	r5, r1, r5
   3f9b0:	ldr	r1, [fp, #24]
   3f9b4:	str	r5, [sp, #76]	; 0x4c
   3f9b8:	cmp	r3, r1
   3f9bc:	beq	4c084 <GetDataSlab+0x17f28>
   3f9c0:	ldr	r1, [fp, #16]
   3f9c4:	add	r7, r7, #1
   3f9c8:	cmp	r7, #4
   3f9cc:	ldr	r1, [r1, r3, lsl #2]
   3f9d0:	str	r4, [r2, r3, lsl #2]
   3f9d4:	sub	r5, r1, #1
   3f9d8:	str	r5, [lr, r3, lsl #2]
   3f9dc:	ldr	r6, [r6, r3, lsl #2]
   3f9e0:	bcs	3f9f0 <GetDataSlab+0xb894>
   3f9e4:	mov	r1, r6
   3f9e8:	mov	r2, r3
   3f9ec:	b	3fa7c <GetDataSlab+0xb920>
   3f9f0:	vmov.i32	q9, #1	; 0x00000001
   3f9f4:	vmov.i32	q10, #1	; 0x00000001
   3f9f8:	vmov.32	d23[1], r6
   3f9fc:	vmov.i32	q8, #1	; 0x00000001
   3fa00:	mov	lr, r7
   3fa04:	bic	r7, r7, #3
   3fa08:	bic	r1, r3, #3
   3fa0c:	sub	r2, r3, r7
   3fa10:	vmov.32	d18[0], r4
   3fa14:	vmov.32	d20[0], r5
   3fa18:	mov	r4, sl
   3fa1c:	vorr	d16, d18, d18
   3fa20:	vmov.i32	q9, #1	; 0x00000001
   3fa24:	vorr	d18, d20, d20
   3fa28:	vld1.32	{d20-d21}, [r4], ip
   3fa2c:	subs	r1, r1, #4
   3fa30:	vrev64.32	q12, q10
   3fa34:	vext.8	q12, q12, q12, #8
   3fa38:	vext.8	q11, q11, q12, #12
   3fa3c:	vmul.i32	q9, q9, q12
   3fa40:	vmul.i32	q8, q11, q8
   3fa44:	vorr	q11, q12, q12
   3fa48:	bne	3fa28 <GetDataSlab+0xb8cc>
   3fa4c:	vext.8	q11, q9, q8, #8
   3fa50:	vext.8	q12, q8, q8, #8
   3fa54:	cmp	lr, r7
   3fa58:	mov	r7, lr
   3fa5c:	vmul.i32	q0, q9, q11
   3fa60:	vmul.i32	q1, q8, q12
   3fa64:	vmul.i32	q8, q0, d0[1]
   3fa68:	vmul.i32	q9, q1, d2[1]
   3fa6c:	vmov.32	r5, d16[0]
   3fa70:	vmov.32	r4, d18[0]
   3fa74:	beq	3f970 <GetDataSlab+0xb814>
   3fa78:	vmov.32	r1, d20[0]
   3fa7c:	mul	r4, r1, r4
   3fa80:	ldr	r1, [r0, r2, lsl #2]
   3fa84:	subs	r2, r2, #1
   3fa88:	mul	r5, r5, r1
   3fa8c:	bne	3fa7c <GetDataSlab+0xb920>
   3fa90:	b	3f970 <GetDataSlab+0xb814>
   3fa94:	ldr	r0, [sl]
   3fa98:	mov	r8, #0
   3fa9c:	sub	r2, fp, #176	; 0xb0
   3faa0:	sub	lr, fp, #96	; 0x60
   3faa4:	str	r0, [sp, #36]	; 0x24
   3faa8:	sub	r0, r0, #1
   3faac:	str	r0, [fp, #-96]	; 0xffffffa0
   3fab0:	ldr	r0, [r6]
   3fab4:	str	r0, [sp, #72]	; 0x48
   3fab8:	str	r0, [fp, #-176]	; 0xffffff50
   3fabc:	ldr	r0, [fp, #20]
   3fac0:	ldr	r1, [r0]
   3fac4:	ldr	r0, [fp, #24]
   3fac8:	cmp	r0, #2
   3facc:	str	r1, [sp, #68]	; 0x44
   3fad0:	str	r1, [sp, #76]	; 0x4c
   3fad4:	blt	4c2a8 <GetDataSlab+0x1814c>
   3fad8:	ldr	r4, [sp, #72]	; 0x48
   3fadc:	ldr	r1, [sp, #68]	; 0x44
   3fae0:	sub	r0, r6, #4
   3fae4:	sub	sl, r6, #12
   3fae8:	mov	r3, #1
   3faec:	mov	r7, #0
   3faf0:	mvn	ip, #15
   3faf4:	mov	r8, #0
   3faf8:	mov	r9, r4
   3fafc:	str	r1, [sp, #76]	; 0x4c
   3fb00:	b	3fb54 <GetDataSlab+0xb9f8>
   3fb04:	ldr	r1, [fp, #12]
   3fb08:	sub	r2, fp, #176	; 0xb0
   3fb0c:	sub	lr, fp, #96	; 0x60
   3fb10:	add	sl, sl, #4
   3fb14:	str	r5, [lr, r3, lsl #2]
   3fb18:	str	r4, [r2, r3, lsl #2]
   3fb1c:	ldr	r5, [sp, #76]	; 0x4c
   3fb20:	ldr	r1, [r1, r3, lsl #2]
   3fb24:	mla	r8, r1, r9, r8
   3fb28:	ldr	r1, [fp, #20]
   3fb2c:	mov	r9, r4
   3fb30:	mov	r4, r6
   3fb34:	ldr	r6, [fp, #8]
   3fb38:	ldr	r1, [r1, r3, lsl #2]
   3fb3c:	add	r3, r3, #1
   3fb40:	mul	r5, r1, r5
   3fb44:	ldr	r1, [fp, #24]
   3fb48:	str	r5, [sp, #76]	; 0x4c
   3fb4c:	cmp	r3, r1
   3fb50:	beq	4c2a8 <GetDataSlab+0x1814c>
   3fb54:	ldr	r1, [fp, #16]
   3fb58:	add	r7, r7, #1
   3fb5c:	cmp	r7, #4
   3fb60:	ldr	r1, [r1, r3, lsl #2]
   3fb64:	str	r4, [r2, r3, lsl #2]
   3fb68:	sub	r5, r1, #1
   3fb6c:	str	r5, [lr, r3, lsl #2]
   3fb70:	ldr	r6, [r6, r3, lsl #2]
   3fb74:	bcs	3fb84 <GetDataSlab+0xba28>
   3fb78:	mov	r1, r6
   3fb7c:	mov	r2, r3
   3fb80:	b	3fc10 <GetDataSlab+0xbab4>
   3fb84:	vmov.i32	q9, #1	; 0x00000001
   3fb88:	vmov.i32	q10, #1	; 0x00000001
   3fb8c:	vmov.32	d23[1], r6
   3fb90:	vmov.i32	q8, #1	; 0x00000001
   3fb94:	mov	lr, r7
   3fb98:	bic	r7, r7, #3
   3fb9c:	bic	r1, r3, #3
   3fba0:	sub	r2, r3, r7
   3fba4:	vmov.32	d18[0], r4
   3fba8:	vmov.32	d20[0], r5
   3fbac:	mov	r4, sl
   3fbb0:	vorr	d16, d18, d18
   3fbb4:	vmov.i32	q9, #1	; 0x00000001
   3fbb8:	vorr	d18, d20, d20
   3fbbc:	vld1.32	{d20-d21}, [r4], ip
   3fbc0:	subs	r1, r1, #4
   3fbc4:	vrev64.32	q12, q10
   3fbc8:	vext.8	q12, q12, q12, #8
   3fbcc:	vext.8	q11, q11, q12, #12
   3fbd0:	vmul.i32	q9, q9, q12
   3fbd4:	vmul.i32	q8, q11, q8
   3fbd8:	vorr	q11, q12, q12
   3fbdc:	bne	3fbbc <GetDataSlab+0xba60>
   3fbe0:	vext.8	q11, q9, q8, #8
   3fbe4:	vext.8	q12, q8, q8, #8
   3fbe8:	cmp	lr, r7
   3fbec:	mov	r7, lr
   3fbf0:	vmul.i32	q0, q9, q11
   3fbf4:	vmul.i32	q1, q8, q12
   3fbf8:	vmul.i32	q8, q0, d0[1]
   3fbfc:	vmul.i32	q9, q1, d2[1]
   3fc00:	vmov.32	r5, d16[0]
   3fc04:	vmov.32	r4, d18[0]
   3fc08:	beq	3fb04 <GetDataSlab+0xb9a8>
   3fc0c:	vmov.32	r1, d20[0]
   3fc10:	mul	r4, r1, r4
   3fc14:	ldr	r1, [r0, r2, lsl #2]
   3fc18:	subs	r2, r2, #1
   3fc1c:	mul	r5, r5, r1
   3fc20:	bne	3fc10 <GetDataSlab+0xbab4>
   3fc24:	b	3fb04 <GetDataSlab+0xb9a8>
   3fc28:	ldr	r0, [sl]
   3fc2c:	mov	ip, #0
   3fc30:	sub	r7, fp, #176	; 0xb0
   3fc34:	sub	lr, fp, #96	; 0x60
   3fc38:	str	r0, [sp, #32]
   3fc3c:	sub	r0, r0, #1
   3fc40:	str	r0, [fp, #-96]	; 0xffffffa0
   3fc44:	ldr	r0, [r6]
   3fc48:	str	r0, [sp, #24]
   3fc4c:	str	r0, [fp, #-176]	; 0xffffff50
   3fc50:	ldr	r0, [fp, #20]
   3fc54:	ldr	r1, [r0]
   3fc58:	ldr	r0, [fp, #24]
   3fc5c:	cmp	r0, #2
   3fc60:	str	r1, [sp, #44]	; 0x2c
   3fc64:	str	r1, [sp, #68]	; 0x44
   3fc68:	blt	4c4dc <GetDataSlab+0x18380>
   3fc6c:	ldr	r0, [fp, #8]
   3fc70:	ldr	r2, [sp, #24]
   3fc74:	mov	r6, #1
   3fc78:	mov	r9, #0
   3fc7c:	mvn	r5, #15
   3fc80:	mov	ip, #0
   3fc84:	mov	r1, r0
   3fc88:	sub	r0, r0, #4
   3fc8c:	mov	r8, r2
   3fc90:	sub	sl, r1, #12
   3fc94:	ldr	r1, [sp, #44]	; 0x2c
   3fc98:	str	r1, [sp, #68]	; 0x44
   3fc9c:	b	3fcec <GetDataSlab+0xbb90>
   3fca0:	ldr	r3, [fp, #12]
   3fca4:	sub	r7, fp, #176	; 0xb0
   3fca8:	sub	lr, fp, #96	; 0x60
   3fcac:	add	sl, sl, #4
   3fcb0:	str	r4, [lr, r6, lsl #2]
   3fcb4:	str	r2, [r7, r6, lsl #2]
   3fcb8:	ldr	r4, [sp, #68]	; 0x44
   3fcbc:	ldr	r3, [r3, r6, lsl #2]
   3fcc0:	mla	ip, r3, r8, ip
   3fcc4:	ldr	r3, [fp, #20]
   3fcc8:	mov	r8, r2
   3fccc:	mov	r2, r1
   3fcd0:	ldr	r3, [r3, r6, lsl #2]
   3fcd4:	add	r6, r6, #1
   3fcd8:	mul	r4, r3, r4
   3fcdc:	ldr	r3, [fp, #24]
   3fce0:	str	r4, [sp, #68]	; 0x44
   3fce4:	cmp	r6, r3
   3fce8:	beq	4c4dc <GetDataSlab+0x18380>
   3fcec:	ldr	r1, [fp, #16]
   3fcf0:	add	r9, r9, #1
   3fcf4:	cmp	r9, #4
   3fcf8:	ldr	r3, [r1, r6, lsl #2]
   3fcfc:	ldr	r1, [fp, #8]
   3fd00:	str	r2, [r7, r6, lsl #2]
   3fd04:	sub	r4, r3, #1
   3fd08:	str	r4, [lr, r6, lsl #2]
   3fd0c:	ldr	r1, [r1, r6, lsl #2]
   3fd10:	bcs	3fd20 <GetDataSlab+0xbbc4>
   3fd14:	mov	r3, r1
   3fd18:	mov	r7, r6
   3fd1c:	b	3fdac <GetDataSlab+0xbc50>
   3fd20:	vmov.i32	q9, #1	; 0x00000001
   3fd24:	vmov.i32	q10, #1	; 0x00000001
   3fd28:	vmov.32	d23[1], r1
   3fd2c:	vmov.i32	q8, #1	; 0x00000001
   3fd30:	mov	lr, r9
   3fd34:	bic	r9, r9, #3
   3fd38:	bic	r3, r6, #3
   3fd3c:	sub	r7, r6, r9
   3fd40:	vmov.32	d18[0], r2
   3fd44:	vmov.32	d20[0], r4
   3fd48:	mov	r2, sl
   3fd4c:	vorr	d16, d18, d18
   3fd50:	vmov.i32	q9, #1	; 0x00000001
   3fd54:	vorr	d18, d20, d20
   3fd58:	vld1.32	{d20-d21}, [r2], r5
   3fd5c:	subs	r3, r3, #4
   3fd60:	vrev64.32	q12, q10
   3fd64:	vext.8	q12, q12, q12, #8
   3fd68:	vext.8	q11, q11, q12, #12
   3fd6c:	vmul.i32	q9, q9, q12
   3fd70:	vmul.i32	q8, q11, q8
   3fd74:	vorr	q11, q12, q12
   3fd78:	bne	3fd58 <GetDataSlab+0xbbfc>
   3fd7c:	vext.8	q11, q9, q8, #8
   3fd80:	vext.8	q12, q8, q8, #8
   3fd84:	cmp	lr, r9
   3fd88:	mov	r9, lr
   3fd8c:	vmul.i32	q0, q9, q11
   3fd90:	vmul.i32	q1, q8, q12
   3fd94:	vmul.i32	q8, q0, d0[1]
   3fd98:	vmul.i32	q9, q1, d2[1]
   3fd9c:	vmov.32	r4, d16[0]
   3fda0:	vmov.32	r2, d18[0]
   3fda4:	beq	3fca0 <GetDataSlab+0xbb44>
   3fda8:	vmov.32	r3, d20[0]
   3fdac:	mul	r2, r3, r2
   3fdb0:	ldr	r3, [r0, r7, lsl #2]
   3fdb4:	subs	r7, r7, #1
   3fdb8:	mul	r4, r4, r3
   3fdbc:	bne	3fdac <GetDataSlab+0xbc50>
   3fdc0:	b	3fca0 <GetDataSlab+0xbb44>
   3fdc4:	ldr	r0, [sp, #80]	; 0x50
   3fdc8:	cmp	sl, #1
   3fdcc:	add	lr, r0, r7
   3fdd0:	bne	4ce7c <GetDataSlab+0x18d20>
   3fdd4:	ldr	r0, [sp, #76]	; 0x4c
   3fdd8:	ldr	r2, [fp, #12]
   3fddc:	ldr	r3, [fp, #20]
   3fde0:	ldr	r8, [sp, #44]	; 0x2c
   3fde4:	cmp	r0, #1
   3fde8:	blt	5b69c <GetDataSlab+0x27540>
   3fdec:	ldr	r5, [sp, #72]	; 0x48
   3fdf0:	mov	r1, #1
   3fdf4:	add	sl, r3, #4
   3fdf8:	orr	r9, ip, #4
   3fdfc:	str	r9, [sp, #20]
   3fe00:	sub	r0, r5, #2
   3fe04:	mov	r3, r5
   3fe08:	add	r1, r1, r0, lsr #1
   3fe0c:	lsr	r0, r0, #1
   3fe10:	str	r0, [sp, #24]
   3fe14:	ldr	r0, [sp, #88]	; 0x58
   3fe18:	and	r4, r1, #1
   3fe1c:	sub	r1, r1, r4
   3fe20:	str	r4, [sp, #32]
   3fe24:	str	r1, [sp, #16]
   3fe28:	sub	r1, fp, #136	; 0x88
   3fe2c:	orr	r4, r1, #4
   3fe30:	add	r1, r2, #4
   3fe34:	str	r0, [sp, #64]	; 0x40
   3fe38:	mov	r0, #0
   3fe3c:	str	r1, [sp, #84]	; 0x54
   3fe40:	ldr	r1, [fp, #24]
   3fe44:	str	r0, [sp, #68]	; 0x44
   3fe48:	mov	r0, #0
   3fe4c:	str	r0, [sp, #80]	; 0x50
   3fe50:	sub	r1, r1, #1
   3fe54:	str	r1, [sp, #48]	; 0x30
   3fe58:	sub	r1, fp, #96	; 0x60
   3fe5c:	orr	r1, r1, #4
   3fe60:	str	r1, [sp, #36]	; 0x24
   3fe64:	lsl	r1, r5, #3
   3fe68:	str	r1, [sp, #60]	; 0x3c
   3fe6c:	and	r1, r5, #1
   3fe70:	str	r1, [sp, #52]	; 0x34
   3fe74:	bic	r1, r5, #1
   3fe78:	str	r1, [sp, #28]
   3fe7c:	b	3fecc <GetDataSlab+0xbd70>
   3fe80:	ldr	r0, [sp, #36]	; 0x24
   3fe84:	ldr	r0, [r0, r2]
   3fe88:	add	lr, lr, r0
   3fe8c:	add	r7, r0, r7
   3fe90:	ldr	r0, [sp, #60]	; 0x3c
   3fe94:	ldr	r1, [sp, #64]	; 0x40
   3fe98:	ldr	r3, [sp, #72]	; 0x48
   3fe9c:	mov	r2, #0
   3fea0:	add	r1, r1, r0
   3fea4:	ldr	r0, [sp, #68]	; 0x44
   3fea8:	str	r1, [sp, #64]	; 0x40
   3feac:	ldr	r1, [sp, #80]	; 0x50
   3feb0:	add	r0, r0, #1
   3feb4:	str	r0, [sp, #68]	; 0x44
   3feb8:	ldr	r0, [sp, #76]	; 0x4c
   3febc:	add	r1, r1, r3
   3fec0:	str	r1, [sp, #80]	; 0x50
   3fec4:	cmp	r1, r0
   3fec8:	bge	5b6a0 <GetDataSlab+0x27544>
   3fecc:	ldr	r6, [sp, #88]	; 0x58
   3fed0:	ldr	r0, [fp, #12]
   3fed4:	cmp	r3, #1
   3fed8:	sub	ip, fp, #176	; 0xb0
   3fedc:	blt	400b0 <GetDataSlab+0xbf54>
   3fee0:	ldr	r5, [r0]
   3fee4:	ldr	r0, [sp, #80]	; 0x50
   3fee8:	add	r0, r6, r0, lsl #3
   3feec:	add	r3, lr, r5
   3fef0:	str	r0, [sp, #56]	; 0x38
   3fef4:	mov	r0, #0
   3fef8:	beq	40024 <GetDataSlab+0xbec8>
   3fefc:	ldr	r1, [sp, #60]	; 0x3c
   3ff00:	ldr	r2, [sp, #68]	; 0x44
   3ff04:	mla	r1, r1, r2, r6
   3ff08:	ldr	r2, [sp, #72]	; 0x48
   3ff0c:	add	r2, lr, r2
   3ff10:	add	r2, r2, r5
   3ff14:	cmp	r1, r2
   3ff18:	bcs	3ff34 <GetDataSlab+0xbdd8>
   3ff1c:	ldr	r1, [sp, #60]	; 0x3c
   3ff20:	ldr	r2, [sp, #68]	; 0x44
   3ff24:	mla	r1, r1, r2, r1
   3ff28:	add	r1, r6, r1
   3ff2c:	cmp	r3, r1
   3ff30:	bcc	40024 <GetDataSlab+0xbec8>
   3ff34:	ldr	r0, [sp, #24]
   3ff38:	mov	r2, #0
   3ff3c:	str	r5, [sp, #40]	; 0x28
   3ff40:	cmp	r0, #0
   3ff44:	beq	3ffc0 <GetDataSlab+0xbe64>
   3ff48:	ldr	r9, [sp, #64]	; 0x40
   3ff4c:	ldr	r0, [sp, #16]
   3ff50:	add	r5, sp, #272	; 0x110
   3ff54:	mov	r8, r9
   3ff58:	mov	r1, r3
   3ff5c:	add	r6, sp, #516	; 0x204
   3ff60:	subs	r0, r0, #2
   3ff64:	ldrh	ip, [r1, r2]!
   3ff68:	add	r2, r2, #4
   3ff6c:	strh	ip, [r5, #244]	; 0xf4
   3ff70:	vld1.16	{d16[0]}, [r6 :16]
   3ff74:	mov	r6, #32
   3ff78:	vmovl.s8	q8, d16
   3ff7c:	vmovl.s16	q0, d16
   3ff80:	vcvt.f64.s32	d17, s1
   3ff84:	vcvt.f64.s32	d16, s0
   3ff88:	vst1.64	{d16-d17}, [r8], r6
   3ff8c:	ldrh	r1, [r1, #2]
   3ff90:	strh	r1, [r5, #248]	; 0xf8
   3ff94:	add	r1, sp, #520	; 0x208
   3ff98:	vld1.16	{d16[0]}, [r1 :16]
   3ff9c:	add	r1, r9, #16
   3ffa0:	mov	r9, r8
   3ffa4:	vmovl.s8	q8, d16
   3ffa8:	vmovl.s16	q0, d16
   3ffac:	vcvt.f64.s32	d17, s1
   3ffb0:	vcvt.f64.s32	d16, s0
   3ffb4:	vst1.64	{d16-d17}, [r1]
   3ffb8:	bne	3ff58 <GetDataSlab+0xbdfc>
   3ffbc:	b	3ffc4 <GetDataSlab+0xbe68>
   3ffc0:	add	r5, sp, #272	; 0x110
   3ffc4:	ldr	r0, [sp, #32]
   3ffc8:	ldr	r8, [sp, #44]	; 0x2c
   3ffcc:	ldr	r9, [sp, #20]
   3ffd0:	cmp	r0, #0
   3ffd4:	beq	40008 <GetDataSlab+0xbeac>
   3ffd8:	add	r0, r3, r2
   3ffdc:	ldrh	r0, [r0]
   3ffe0:	strh	r0, [r5, #240]	; 0xf0
   3ffe4:	add	r0, sp, #512	; 0x200
   3ffe8:	vld1.16	{d16[0]}, [r0 :16]
   3ffec:	vmovl.s8	q8, d16
   3fff0:	vmovl.s16	q0, d16
   3fff4:	vcvt.f64.s32	d17, s1
   3fff8:	vcvt.f64.s32	d16, s0
   3fffc:	ldr	r0, [sp, #56]	; 0x38
   40000:	add	r0, r0, r2, lsl #3
   40004:	vst1.64	{d16-d17}, [r0]
   40008:	ldr	r0, [sp, #72]	; 0x48
   4000c:	ldr	r1, [sp, #28]
   40010:	ldr	r5, [sp, #40]	; 0x28
   40014:	sub	ip, fp, #176	; 0xb0
   40018:	cmp	r0, r1
   4001c:	mov	r0, r1
   40020:	beq	400b0 <GetDataSlab+0xbf54>
   40024:	ldr	r1, [sp, #52]	; 0x34
   40028:	cmp	r1, #0
   4002c:	mov	r1, r0
   40030:	beq	40054 <GetDataSlab+0xbef8>
   40034:	add	r2, r3, r0
   40038:	ldr	r1, [sp, #56]	; 0x38
   4003c:	ldrsb	r2, [r2]
   40040:	add	r1, r1, r0, lsl #3
   40044:	vmov	s0, r2
   40048:	vcvt.f64.s32	d16, s0
   4004c:	vstr	d16, [r1]
   40050:	orr	r1, r0, #1
   40054:	ldr	r2, [sp, #72]	; 0x48
   40058:	orr	r0, r0, #1
   4005c:	cmp	r2, r0
   40060:	beq	400b0 <GetDataSlab+0xbf54>
   40064:	ldr	r0, [sp, #64]	; 0x40
   40068:	ldr	r2, [sp, #72]	; 0x48
   4006c:	add	r0, r0, r1, lsl #3
   40070:	sub	r2, r2, r1
   40074:	add	r1, r1, r5
   40078:	add	r1, lr, r1
   4007c:	add	r3, r1, #1
   40080:	ldrsb	r1, [r3, #-1]
   40084:	subs	r2, r2, #2
   40088:	vmov	s0, r1
   4008c:	vcvt.f64.s32	d16, s0
   40090:	vstr	d16, [r0]
   40094:	ldrsb	r1, [r3]
   40098:	add	r3, r3, #2
   4009c:	vmov	s0, r1
   400a0:	vcvt.f64.s32	d16, s0
   400a4:	vstr	d16, [r0, #8]
   400a8:	add	r0, r0, #16
   400ac:	bne	40080 <GetDataSlab+0xbf24>
   400b0:	ldr	r0, [fp, #24]
   400b4:	add	lr, lr, r8
   400b8:	add	r7, r7, r8
   400bc:	cmp	r0, #2
   400c0:	blt	3fe90 <GetDataSlab+0xbd34>
   400c4:	ldr	r3, [sp, #48]	; 0x30
   400c8:	mov	r2, #0
   400cc:	b	400f8 <GetDataSlab+0xbf9c>
   400d0:	ldr	r5, [sp, #84]	; 0x54
   400d4:	ldr	r6, [ip, r2]
   400d8:	sub	r0, r0, r1
   400dc:	ldr	r5, [r5, r2]
   400e0:	mla	r0, r5, r6, r0
   400e4:	add	r7, r0, r7
   400e8:	add	lr, lr, r0
   400ec:	subs	r3, r3, #1
   400f0:	add	r2, r2, #4
   400f4:	beq	3fe90 <GetDataSlab+0xbd34>
   400f8:	ldr	r0, [r4, r2]
   400fc:	add	r0, r0, #1
   40100:	str	r0, [r4, r2]
   40104:	ldr	r1, [sl, r2]
   40108:	sdiv	r6, r0, r1
   4010c:	mls	r0, r6, r1, r0
   40110:	cmp	r0, #0
   40114:	bne	3fe80 <GetDataSlab+0xbd24>
   40118:	mov	r0, #0
   4011c:	str	r0, [r4, r2]
   40120:	ldr	r0, [r9, r2]
   40124:	sdiv	r1, r7, r0
   40128:	mls	r1, r1, r0, r7
   4012c:	cmp	r1, #0
   40130:	bne	400d0 <GetDataSlab+0xbf74>
   40134:	ldr	r0, [sp, #84]	; 0x54
   40138:	ldr	r0, [r0, r2]
   4013c:	cmp	r0, #0
   40140:	beq	400ec <GetDataSlab+0xbf90>
   40144:	ldr	r1, [ip, r2]
   40148:	mla	r7, r1, r0, r7
   4014c:	mla	lr, r1, r0, lr
   40150:	subs	r3, r3, #1
   40154:	add	r2, r2, #4
   40158:	bne	400f8 <GetDataSlab+0xbf9c>
   4015c:	b	3fe90 <GetDataSlab+0xbd34>
   40160:	ldr	r0, [sp, #80]	; 0x50
   40164:	cmp	r5, #1
   40168:	add	r8, r0, r7
   4016c:	bne	4d0a0 <GetDataSlab+0x18f44>
   40170:	ldr	r0, [sp, #76]	; 0x4c
   40174:	ldr	r3, [fp, #20]
   40178:	sub	r2, fp, #176	; 0xb0
   4017c:	cmp	r0, #1
   40180:	blt	5aed4 <GetDataSlab+0x26d78>
   40184:	orr	r2, r2, #4
   40188:	ldr	lr, [fp, #12]
   4018c:	sub	r0, fp, #136	; 0x88
   40190:	add	r3, r3, #4
   40194:	mov	ip, #0
   40198:	str	r2, [sp, #80]	; 0x50
   4019c:	ldr	r2, [fp, #24]
   401a0:	orr	r0, r0, #4
   401a4:	str	r3, [sp, #84]	; 0x54
   401a8:	sub	r2, r2, #1
   401ac:	str	r2, [sp, #64]	; 0x40
   401b0:	sub	r2, fp, #96	; 0x60
   401b4:	orr	r2, r2, #4
   401b8:	str	r2, [sp, #60]	; 0x3c
   401bc:	ldr	r2, [lr], #4
   401c0:	str	r2, [sp, #68]	; 0x44
   401c4:	b	401ec <GetDataSlab+0xc090>
   401c8:	ldr	r3, [sp, #60]	; 0x3c
   401cc:	ldr	r2, [r3, r2]
   401d0:	add	r8, r8, r2
   401d4:	add	r7, r2, r7
   401d8:	ldr	r2, [sp, #76]	; 0x4c
   401dc:	add	ip, r1, ip
   401e0:	cmp	ip, r2
   401e4:	mov	r2, #0
   401e8:	bge	5b6a0 <GetDataSlab+0x27544>
   401ec:	ldr	r4, [sp, #68]	; 0x44
   401f0:	ldr	r5, [fp, #20]
   401f4:	ldr	r2, [sp, #72]	; 0x48
   401f8:	cmp	r1, #1
   401fc:	add	r3, r4, r7
   40200:	add	r7, r8, r4
   40204:	blt	4023c <GetDataSlab+0xc0e0>
   40208:	ldr	r1, [sp, #88]	; 0x58
   4020c:	mov	r2, #0
   40210:	add	r4, r1, ip
   40214:	ldrb	r1, [r7, r2]
   40218:	strb	r1, [r4, r2]
   4021c:	add	r2, r2, #1
   40220:	ldr	r1, [r5]
   40224:	cmp	r2, r1
   40228:	blt	40214 <GetDataSlab+0xc0b8>
   4022c:	ldr	r2, [fp, #12]
   40230:	ldr	r4, [r2]
   40234:	ldr	r2, [fp, #8]
   40238:	ldr	r2, [r2]
   4023c:	str	r2, [sp, #72]	; 0x48
   40240:	sub	r2, r2, r4
   40244:	str	r4, [sp, #68]	; 0x44
   40248:	add	r8, r7, r2
   4024c:	add	r7, r3, r2
   40250:	ldr	r2, [fp, #24]
   40254:	cmp	r2, #2
   40258:	blt	401d8 <GetDataSlab+0xc07c>
   4025c:	ldr	r9, [sp, #64]	; 0x40
   40260:	mov	r2, #0
   40264:	b	40290 <GetDataSlab+0xc134>
   40268:	sub	r4, fp, #176	; 0xb0
   4026c:	ldr	sl, [lr, r2]
   40270:	sub	r3, r3, r5
   40274:	ldr	r6, [r4, r2]
   40278:	mla	r3, sl, r6, r3
   4027c:	add	r7, r3, r7
   40280:	add	r8, r8, r3
   40284:	subs	r9, r9, #1
   40288:	add	r2, r2, #4
   4028c:	beq	401d8 <GetDataSlab+0xc07c>
   40290:	ldr	r3, [r0, r2]
   40294:	ldr	r4, [sp, #84]	; 0x54
   40298:	add	r3, r3, #1
   4029c:	str	r3, [r0, r2]
   402a0:	ldr	r5, [r4, r2]
   402a4:	sdiv	r6, r3, r5
   402a8:	mls	r3, r6, r5, r3
   402ac:	cmp	r3, #0
   402b0:	bne	401c8 <GetDataSlab+0xc06c>
   402b4:	mov	r3, #0
   402b8:	str	r3, [r0, r2]
   402bc:	ldr	r3, [sp, #80]	; 0x50
   402c0:	ldr	r3, [r3, r2]
   402c4:	sdiv	r5, r7, r3
   402c8:	mls	r5, r5, r3, r7
   402cc:	cmp	r5, #0
   402d0:	bne	40268 <GetDataSlab+0xc10c>
   402d4:	ldr	r3, [lr, r2]
   402d8:	cmp	r3, #0
   402dc:	beq	40284 <GetDataSlab+0xc128>
   402e0:	sub	r4, fp, #176	; 0xb0
   402e4:	ldr	r5, [r4, r2]
   402e8:	mla	r7, r5, r3, r7
   402ec:	mla	r8, r5, r3, r8
   402f0:	subs	r9, r9, #1
   402f4:	add	r2, r2, #4
   402f8:	bne	40290 <GetDataSlab+0xc134>
   402fc:	b	401d8 <GetDataSlab+0xc07c>
   40300:	ldr	r0, [sp, #80]	; 0x50
   40304:	cmp	r5, #1
   40308:	add	r8, r0, r7
   4030c:	bne	4d258 <GetDataSlab+0x190fc>
   40310:	ldr	r0, [sp, #76]	; 0x4c
   40314:	ldr	r3, [fp, #20]
   40318:	sub	r2, fp, #176	; 0xb0
   4031c:	cmp	r0, #1
   40320:	blt	5aed4 <GetDataSlab+0x26d78>
   40324:	orr	r2, r2, #4
   40328:	ldr	lr, [fp, #12]
   4032c:	sub	r0, fp, #136	; 0x88
   40330:	add	r3, r3, #4
   40334:	mov	ip, #0
   40338:	str	r2, [sp, #80]	; 0x50
   4033c:	ldr	r2, [fp, #24]
   40340:	orr	r0, r0, #4
   40344:	str	r3, [sp, #84]	; 0x54
   40348:	sub	r2, r2, #1
   4034c:	str	r2, [sp, #64]	; 0x40
   40350:	sub	r2, fp, #96	; 0x60
   40354:	orr	r2, r2, #4
   40358:	str	r2, [sp, #60]	; 0x3c
   4035c:	ldr	r2, [lr], #4
   40360:	str	r2, [sp, #68]	; 0x44
   40364:	b	4038c <GetDataSlab+0xc230>
   40368:	ldr	r3, [sp, #60]	; 0x3c
   4036c:	ldr	r2, [r3, r2]
   40370:	add	r8, r8, r2
   40374:	add	r7, r2, r7
   40378:	ldr	r2, [sp, #76]	; 0x4c
   4037c:	add	ip, r1, ip
   40380:	cmp	ip, r2
   40384:	mov	r2, #0
   40388:	bge	5b6a0 <GetDataSlab+0x27544>
   4038c:	ldr	r4, [sp, #68]	; 0x44
   40390:	ldr	r5, [fp, #20]
   40394:	ldr	r2, [sp, #72]	; 0x48
   40398:	cmp	r1, #1
   4039c:	add	r3, r4, r7
   403a0:	add	r7, r8, r4
   403a4:	blt	403dc <GetDataSlab+0xc280>
   403a8:	ldr	r1, [sp, #88]	; 0x58
   403ac:	mov	r2, #0
   403b0:	add	r4, r1, ip
   403b4:	ldrb	r1, [r7, r2]
   403b8:	strb	r1, [r4, r2]
   403bc:	add	r2, r2, #1
   403c0:	ldr	r1, [r5]
   403c4:	cmp	r2, r1
   403c8:	blt	403b4 <GetDataSlab+0xc258>
   403cc:	ldr	r2, [fp, #12]
   403d0:	ldr	r4, [r2]
   403d4:	ldr	r2, [fp, #8]
   403d8:	ldr	r2, [r2]
   403dc:	str	r2, [sp, #72]	; 0x48
   403e0:	sub	r2, r2, r4
   403e4:	str	r4, [sp, #68]	; 0x44
   403e8:	add	r8, r7, r2
   403ec:	add	r7, r3, r2
   403f0:	ldr	r2, [fp, #24]
   403f4:	cmp	r2, #2
   403f8:	blt	40378 <GetDataSlab+0xc21c>
   403fc:	ldr	r9, [sp, #64]	; 0x40
   40400:	mov	r2, #0
   40404:	b	40430 <GetDataSlab+0xc2d4>
   40408:	sub	r4, fp, #176	; 0xb0
   4040c:	ldr	sl, [lr, r2]
   40410:	sub	r3, r3, r5
   40414:	ldr	r6, [r4, r2]
   40418:	mla	r3, sl, r6, r3
   4041c:	add	r7, r3, r7
   40420:	add	r8, r8, r3
   40424:	subs	r9, r9, #1
   40428:	add	r2, r2, #4
   4042c:	beq	40378 <GetDataSlab+0xc21c>
   40430:	ldr	r3, [r0, r2]
   40434:	ldr	r4, [sp, #84]	; 0x54
   40438:	add	r3, r3, #1
   4043c:	str	r3, [r0, r2]
   40440:	ldr	r5, [r4, r2]
   40444:	sdiv	r6, r3, r5
   40448:	mls	r3, r6, r5, r3
   4044c:	cmp	r3, #0
   40450:	bne	40368 <GetDataSlab+0xc20c>
   40454:	mov	r3, #0
   40458:	str	r3, [r0, r2]
   4045c:	ldr	r3, [sp, #80]	; 0x50
   40460:	ldr	r3, [r3, r2]
   40464:	sdiv	r5, r7, r3
   40468:	mls	r5, r5, r3, r7
   4046c:	cmp	r5, #0
   40470:	bne	40408 <GetDataSlab+0xc2ac>
   40474:	ldr	r3, [lr, r2]
   40478:	cmp	r3, #0
   4047c:	beq	40424 <GetDataSlab+0xc2c8>
   40480:	sub	r4, fp, #176	; 0xb0
   40484:	ldr	r5, [r4, r2]
   40488:	mla	r7, r5, r3, r7
   4048c:	mla	r8, r5, r3, r8
   40490:	subs	r9, r9, #1
   40494:	add	r2, r2, #4
   40498:	bne	40430 <GetDataSlab+0xc2d4>
   4049c:	b	40378 <GetDataSlab+0xc21c>
   404a0:	ldr	r0, [sp, #80]	; 0x50
   404a4:	cmp	r5, #1
   404a8:	add	sl, r0, r7
   404ac:	bne	4d410 <GetDataSlab+0x192b4>
   404b0:	ldr	r0, [sp, #76]	; 0x4c
   404b4:	ldr	r3, [fp, #20]
   404b8:	sub	r2, fp, #176	; 0xb0
   404bc:	cmp	r0, #1
   404c0:	blt	5b69c <GetDataSlab+0x27540>
   404c4:	orr	r2, r2, #4
   404c8:	ldr	lr, [fp, #12]
   404cc:	sub	r0, fp, #136	; 0x88
   404d0:	add	r4, r3, #4
   404d4:	str	r2, [sp, #84]	; 0x54
   404d8:	ldr	r2, [fp, #24]
   404dc:	orr	r0, r0, #4
   404e0:	sub	r2, r2, #1
   404e4:	str	r2, [sp, #68]	; 0x44
   404e8:	orr	r2, r8, #4
   404ec:	mov	r8, #0
   404f0:	str	r2, [sp, #64]	; 0x40
   404f4:	ldr	r2, [lr], #4
   404f8:	str	r2, [sp, #80]	; 0x50
   404fc:	b	40524 <GetDataSlab+0xc3c8>
   40500:	ldr	r3, [sp, #64]	; 0x40
   40504:	ldr	r2, [r3, r2]
   40508:	add	sl, sl, r2
   4050c:	add	r7, r2, r7
   40510:	ldr	r3, [sp, #76]	; 0x4c
   40514:	add	r8, r1, r8
   40518:	mov	r2, #0
   4051c:	cmp	r8, r3
   40520:	bge	5b6a0 <GetDataSlab+0x27544>
   40524:	ldr	r6, [sp, #80]	; 0x50
   40528:	ldr	r5, [fp, #20]
   4052c:	ldr	r2, [sp, #72]	; 0x48
   40530:	cmp	r1, #1
   40534:	sub	ip, fp, #176	; 0xb0
   40538:	add	r3, r6, r7
   4053c:	add	r7, sl, r6
   40540:	blt	40584 <GetDataSlab+0xc428>
   40544:	ldr	r1, [sp, #88]	; 0x58
   40548:	mov	r9, r4
   4054c:	mov	r2, #0
   40550:	add	r4, r1, r8, lsl #2
   40554:	add	r1, r7, r2
   40558:	ldrsb	r1, [r1]
   4055c:	str	r1, [r4, r2, lsl #2]
   40560:	add	r2, r2, #1
   40564:	ldr	r1, [r5]
   40568:	cmp	r2, r1
   4056c:	blt	40554 <GetDataSlab+0xc3f8>
   40570:	ldr	r2, [fp, #12]
   40574:	mov	r4, r9
   40578:	ldr	r6, [r2]
   4057c:	ldr	r2, [fp, #8]
   40580:	ldr	r2, [r2]
   40584:	str	r2, [sp, #72]	; 0x48
   40588:	sub	r2, r2, r6
   4058c:	str	r6, [sp, #80]	; 0x50
   40590:	add	sl, r7, r2
   40594:	add	r7, r3, r2
   40598:	ldr	r2, [fp, #24]
   4059c:	cmp	r2, #2
   405a0:	blt	40510 <GetDataSlab+0xc3b4>
   405a4:	ldr	r9, [sp, #68]	; 0x44
   405a8:	mov	r2, #0
   405ac:	b	405d8 <GetDataSlab+0xc47c>
   405b0:	ldr	r6, [ip, r2]
   405b4:	ldr	ip, [lr, r2]
   405b8:	sub	r3, r3, r5
   405bc:	mla	r3, ip, r6, r3
   405c0:	sub	ip, fp, #176	; 0xb0
   405c4:	add	r7, r3, r7
   405c8:	add	sl, sl, r3
   405cc:	subs	r9, r9, #1
   405d0:	add	r2, r2, #4
   405d4:	beq	40510 <GetDataSlab+0xc3b4>
   405d8:	ldr	r3, [r0, r2]
   405dc:	add	r3, r3, #1
   405e0:	str	r3, [r0, r2]
   405e4:	ldr	r5, [r4, r2]
   405e8:	sdiv	r6, r3, r5
   405ec:	mls	r3, r6, r5, r3
   405f0:	cmp	r3, #0
   405f4:	bne	40500 <GetDataSlab+0xc3a4>
   405f8:	mov	r3, #0
   405fc:	str	r3, [r0, r2]
   40600:	ldr	r3, [sp, #84]	; 0x54
   40604:	ldr	r3, [r3, r2]
   40608:	sdiv	r5, r7, r3
   4060c:	mls	r5, r5, r3, r7
   40610:	cmp	r5, #0
   40614:	bne	405b0 <GetDataSlab+0xc454>
   40618:	ldr	r3, [lr, r2]
   4061c:	cmp	r3, #0
   40620:	beq	405cc <GetDataSlab+0xc470>
   40624:	ldr	r6, [ip, r2]
   40628:	mla	r7, r6, r3, r7
   4062c:	mla	sl, r6, r3, sl
   40630:	subs	r9, r9, #1
   40634:	add	r2, r2, #4
   40638:	bne	405d8 <GetDataSlab+0xc47c>
   4063c:	b	40510 <GetDataSlab+0xc3b4>
   40640:	ldr	r0, [sp, #80]	; 0x50
   40644:	cmp	r5, #1
   40648:	add	sl, r0, r7
   4064c:	bne	4d5c8 <GetDataSlab+0x1946c>
   40650:	ldr	r0, [sp, #76]	; 0x4c
   40654:	ldr	r3, [fp, #20]
   40658:	sub	r2, fp, #176	; 0xb0
   4065c:	cmp	r0, #1
   40660:	blt	5b69c <GetDataSlab+0x27540>
   40664:	orr	r2, r2, #4
   40668:	ldr	lr, [fp, #12]
   4066c:	sub	r0, fp, #136	; 0x88
   40670:	add	r4, r3, #4
   40674:	str	r2, [sp, #84]	; 0x54
   40678:	ldr	r2, [fp, #24]
   4067c:	orr	r0, r0, #4
   40680:	sub	r2, r2, #1
   40684:	str	r2, [sp, #68]	; 0x44
   40688:	orr	r2, r8, #4
   4068c:	mov	r8, #0
   40690:	str	r2, [sp, #64]	; 0x40
   40694:	ldr	r2, [lr], #4
   40698:	str	r2, [sp, #80]	; 0x50
   4069c:	b	406c4 <GetDataSlab+0xc568>
   406a0:	ldr	r3, [sp, #64]	; 0x40
   406a4:	ldr	r2, [r3, r2]
   406a8:	add	sl, sl, r2
   406ac:	add	r7, r2, r7
   406b0:	ldr	r2, [sp, #76]	; 0x4c
   406b4:	add	r8, r1, r8
   406b8:	cmp	r8, r2
   406bc:	mov	r2, #0
   406c0:	bge	5b6a0 <GetDataSlab+0x27544>
   406c4:	ldr	r6, [sp, #80]	; 0x50
   406c8:	ldr	r5, [fp, #20]
   406cc:	ldr	r2, [sp, #72]	; 0x48
   406d0:	cmp	r1, #1
   406d4:	sub	ip, fp, #176	; 0xb0
   406d8:	add	r3, r6, r7
   406dc:	add	r7, sl, r6
   406e0:	blt	40724 <GetDataSlab+0xc5c8>
   406e4:	ldr	r1, [sp, #88]	; 0x58
   406e8:	mov	r9, r4
   406ec:	mov	r2, #0
   406f0:	add	r4, r1, r8, lsl #2
   406f4:	add	r1, r7, r2
   406f8:	ldrsb	r1, [r1]
   406fc:	str	r1, [r4, r2, lsl #2]
   40700:	add	r2, r2, #1
   40704:	ldr	r1, [r5]
   40708:	cmp	r2, r1
   4070c:	blt	406f4 <GetDataSlab+0xc598>
   40710:	ldr	r2, [fp, #12]
   40714:	mov	r4, r9
   40718:	ldr	r6, [r2]
   4071c:	ldr	r2, [fp, #8]
   40720:	ldr	r2, [r2]
   40724:	str	r2, [sp, #72]	; 0x48
   40728:	sub	r2, r2, r6
   4072c:	str	r6, [sp, #80]	; 0x50
   40730:	add	sl, r7, r2
   40734:	add	r7, r3, r2
   40738:	ldr	r2, [fp, #24]
   4073c:	cmp	r2, #2
   40740:	blt	406b0 <GetDataSlab+0xc554>
   40744:	ldr	r9, [sp, #68]	; 0x44
   40748:	mov	r2, #0
   4074c:	b	40778 <GetDataSlab+0xc61c>
   40750:	ldr	r6, [ip, r2]
   40754:	ldr	ip, [lr, r2]
   40758:	sub	r3, r3, r5
   4075c:	mla	r3, ip, r6, r3
   40760:	sub	ip, fp, #176	; 0xb0
   40764:	add	r7, r3, r7
   40768:	add	sl, sl, r3
   4076c:	subs	r9, r9, #1
   40770:	add	r2, r2, #4
   40774:	beq	406b0 <GetDataSlab+0xc554>
   40778:	ldr	r3, [r0, r2]
   4077c:	add	r3, r3, #1
   40780:	str	r3, [r0, r2]
   40784:	ldr	r5, [r4, r2]
   40788:	sdiv	r6, r3, r5
   4078c:	mls	r3, r6, r5, r3
   40790:	cmp	r3, #0
   40794:	bne	406a0 <GetDataSlab+0xc544>
   40798:	mov	r3, #0
   4079c:	str	r3, [r0, r2]
   407a0:	ldr	r3, [sp, #84]	; 0x54
   407a4:	ldr	r3, [r3, r2]
   407a8:	sdiv	r5, r7, r3
   407ac:	mls	r5, r5, r3, r7
   407b0:	cmp	r5, #0
   407b4:	bne	40750 <GetDataSlab+0xc5f4>
   407b8:	ldr	r3, [lr, r2]
   407bc:	cmp	r3, #0
   407c0:	beq	4076c <GetDataSlab+0xc610>
   407c4:	ldr	r6, [ip, r2]
   407c8:	mla	r7, r6, r3, r7
   407cc:	mla	sl, r6, r3, sl
   407d0:	subs	r9, r9, #1
   407d4:	add	r2, r2, #4
   407d8:	bne	40778 <GetDataSlab+0xc61c>
   407dc:	b	406b0 <GetDataSlab+0xc554>
   407e0:	ldr	r0, [sp, #80]	; 0x50
   407e4:	cmp	r9, #1
   407e8:	add	ip, r0, r7
   407ec:	bne	4d780 <GetDataSlab+0x19624>
   407f0:	ldr	r0, [sp, #76]	; 0x4c
   407f4:	ldr	r2, [fp, #12]
   407f8:	ldr	lr, [sp, #48]	; 0x30
   407fc:	sub	r3, fp, #96	; 0x60
   40800:	cmp	r0, #1
   40804:	ldr	r0, [sp, #72]	; 0x48
   40808:	blt	5b69c <GetDataSlab+0x27540>
   4080c:	sub	r0, r0, #2
   40810:	mov	r1, #1
   40814:	ldr	sl, [sp, #88]	; 0x58
   40818:	add	r1, r1, r0, lsr #1
   4081c:	lsr	r0, r0, #1
   40820:	str	r0, [sp, #28]
   40824:	mov	r0, #0
   40828:	and	r4, r1, #1
   4082c:	str	r0, [sp, #68]	; 0x44
   40830:	mov	r0, #0
   40834:	sub	r1, r1, r4
   40838:	str	r4, [sp, #36]	; 0x24
   4083c:	str	r0, [sp, #80]	; 0x50
   40840:	str	r1, [sp, #16]
   40844:	sub	r1, fp, #136	; 0x88
   40848:	orr	r4, r1, #4
   4084c:	ldr	r1, [fp, #20]
   40850:	add	r9, r1, #4
   40854:	sub	r1, fp, #176	; 0xb0
   40858:	orr	r8, r1, #4
   4085c:	add	r1, r2, #4
   40860:	orr	r2, r3, #4
   40864:	str	r9, [sp, #20]
   40868:	str	r1, [sp, #84]	; 0x54
   4086c:	ldr	r1, [fp, #24]
   40870:	str	r2, [sp, #40]	; 0x28
   40874:	str	r8, [sp, #24]
   40878:	sub	r1, r1, #1
   4087c:	str	r1, [sp, #52]	; 0x34
   40880:	ldr	r1, [sp, #72]	; 0x48
   40884:	lsl	r2, r1, #3
   40888:	str	r2, [sp, #64]	; 0x40
   4088c:	and	r2, r1, #1
   40890:	str	r2, [sp, #56]	; 0x38
   40894:	bic	r2, r1, #1
   40898:	str	r2, [sp, #32]
   4089c:	ldr	r6, [sp, #88]	; 0x58
   408a0:	ldr	r0, [fp, #12]
   408a4:	cmp	r1, #1
   408a8:	bge	40904 <GetDataSlab+0xc7a8>
   408ac:	b	40ab8 <GetDataSlab+0xc95c>
   408b0:	ldr	r0, [sp, #40]	; 0x28
   408b4:	ldr	r0, [r0, r2]
   408b8:	add	ip, ip, r0
   408bc:	add	r7, r0, r7
   408c0:	ldr	r0, [sp, #64]	; 0x40
   408c4:	ldr	r1, [sp, #72]	; 0x48
   408c8:	ldr	r3, [sp, #80]	; 0x50
   408cc:	mov	r2, #0
   408d0:	add	sl, sl, r0
   408d4:	ldr	r0, [sp, #68]	; 0x44
   408d8:	add	r3, r3, r1
   408dc:	str	r3, [sp, #80]	; 0x50
   408e0:	add	r0, r0, #1
   408e4:	str	r0, [sp, #68]	; 0x44
   408e8:	ldr	r0, [sp, #76]	; 0x4c
   408ec:	cmp	r3, r0
   408f0:	bge	5b6a0 <GetDataSlab+0x27544>
   408f4:	ldr	r6, [sp, #88]	; 0x58
   408f8:	ldr	r0, [fp, #12]
   408fc:	cmp	r1, #1
   40900:	blt	40ab8 <GetDataSlab+0xc95c>
   40904:	ldr	r5, [r0]
   40908:	ldr	r0, [sp, #80]	; 0x50
   4090c:	mov	r2, #0
   40910:	add	r0, r6, r0, lsl #3
   40914:	add	r3, ip, r5
   40918:	str	r0, [sp, #60]	; 0x3c
   4091c:	beq	40a30 <GetDataSlab+0xc8d4>
   40920:	ldr	r0, [sp, #64]	; 0x40
   40924:	ldr	r1, [sp, #68]	; 0x44
   40928:	mla	r0, r0, r1, r6
   4092c:	ldr	r1, [sp, #72]	; 0x48
   40930:	add	r1, ip, r1
   40934:	add	r1, r1, r5
   40938:	cmp	r0, r1
   4093c:	bcs	40958 <GetDataSlab+0xc7fc>
   40940:	ldr	r0, [sp, #64]	; 0x40
   40944:	ldr	r1, [sp, #68]	; 0x44
   40948:	mla	r0, r0, r1, r0
   4094c:	add	r0, r6, r0
   40950:	cmp	r3, r0
   40954:	bcc	40a30 <GetDataSlab+0xc8d4>
   40958:	ldr	r0, [sp, #28]
   4095c:	mov	r2, #0
   40960:	str	r5, [sp, #44]	; 0x2c
   40964:	cmp	r0, #0
   40968:	beq	409d4 <GetDataSlab+0xc878>
   4096c:	ldr	lr, [sp, #16]
   40970:	mov	r8, sl
   40974:	add	r5, sp, #528	; 0x210
   40978:	mov	r9, #32
   4097c:	sub	r6, fp, #384	; 0x180
   40980:	mov	r0, r3
   40984:	subs	lr, lr, #2
   40988:	ldrh	r1, [r0, r2]!
   4098c:	add	r2, r2, #4
   40990:	strh	r1, [r5, #140]	; 0x8c
   40994:	sub	r1, fp, #388	; 0x184
   40998:	vld1.16	{d16[0]}, [r1 :16]
   4099c:	add	r1, r8, #16
   409a0:	vmovl.s8	q8, d16
   409a4:	vmovl.s16	q8, d16
   409a8:	vmovl.s32	q8, d16
   409ac:	vst1.64	{d16-d17}, [r8], r9
   409b0:	ldrh	r0, [r0, #2]
   409b4:	strh	r0, [r5, #144]	; 0x90
   409b8:	vld1.16	{d16[0]}, [r6 :16]
   409bc:	vmovl.s8	q8, d16
   409c0:	vmovl.s16	q8, d16
   409c4:	vmovl.s32	q8, d16
   409c8:	vst1.64	{d16-d17}, [r1]
   409cc:	bne	40980 <GetDataSlab+0xc824>
   409d0:	b	409d8 <GetDataSlab+0xc87c>
   409d4:	add	r5, sp, #528	; 0x210
   409d8:	ldr	r0, [sp, #36]	; 0x24
   409dc:	ldr	lr, [sp, #48]	; 0x30
   409e0:	ldr	r8, [sp, #24]
   409e4:	ldr	r9, [sp, #20]
   409e8:	cmp	r0, #0
   409ec:	beq	40a1c <GetDataSlab+0xc8c0>
   409f0:	add	r0, r3, r2
   409f4:	ldrh	r0, [r0]
   409f8:	strh	r0, [r5, #136]	; 0x88
   409fc:	sub	r0, fp, #392	; 0x188
   40a00:	vld1.16	{d16[0]}, [r0 :16]
   40a04:	ldr	r0, [sp, #60]	; 0x3c
   40a08:	add	r0, r0, r2, lsl #3
   40a0c:	vmovl.s8	q8, d16
   40a10:	vmovl.s16	q8, d16
   40a14:	vmovl.s32	q8, d16
   40a18:	vst1.64	{d16-d17}, [r0]
   40a1c:	ldr	r0, [sp, #72]	; 0x48
   40a20:	ldr	r2, [sp, #32]
   40a24:	ldr	r5, [sp, #44]	; 0x2c
   40a28:	cmp	r0, r2
   40a2c:	beq	40ab8 <GetDataSlab+0xc95c>
   40a30:	ldr	r0, [sp, #56]	; 0x38
   40a34:	cmp	r0, #0
   40a38:	mov	r0, r2
   40a3c:	beq	40a5c <GetDataSlab+0xc900>
   40a40:	add	r0, r3, r2
   40a44:	ldr	r1, [sp, #60]	; 0x3c
   40a48:	ldrsb	r0, [r0]
   40a4c:	str	r0, [r1, r2, lsl #3]!
   40a50:	asr	r0, r0, #31
   40a54:	str	r0, [r1, #4]
   40a58:	orr	r0, r2, #1
   40a5c:	orr	r1, r2, #1
   40a60:	ldr	r2, [sp, #72]	; 0x48
   40a64:	cmp	r2, r1
   40a68:	beq	40ab8 <GetDataSlab+0xc95c>
   40a6c:	ldr	r1, [sp, #72]	; 0x48
   40a70:	sub	r2, r1, r0
   40a74:	add	r1, r0, r5
   40a78:	lsl	r0, r0, #3
   40a7c:	add	r1, ip, r1
   40a80:	add	r3, r1, #1
   40a84:	ldrsb	r1, [r3, #-1]
   40a88:	mov	r6, sl
   40a8c:	subs	r2, r2, #2
   40a90:	str	r1, [r6, r0]!
   40a94:	asr	r1, r1, #31
   40a98:	add	r0, r0, #16
   40a9c:	str	r1, [r6, #4]
   40aa0:	ldrsb	r1, [r3]
   40aa4:	add	r3, r3, #2
   40aa8:	str	r1, [r6, #8]
   40aac:	asr	r1, r1, #31
   40ab0:	str	r1, [r6, #12]
   40ab4:	bne	40a84 <GetDataSlab+0xc928>
   40ab8:	ldr	r0, [fp, #24]
   40abc:	add	ip, ip, lr
   40ac0:	add	r7, r7, lr
   40ac4:	cmp	r0, #2
   40ac8:	blt	408c0 <GetDataSlab+0xc764>
   40acc:	ldr	r3, [sp, #52]	; 0x34
   40ad0:	mov	r2, #0
   40ad4:	b	40b04 <GetDataSlab+0xc9a8>
   40ad8:	ldr	r5, [sp, #84]	; 0x54
   40adc:	sub	r6, fp, #176	; 0xb0
   40ae0:	sub	r0, r0, r1
   40ae4:	ldr	r6, [r6, r2]
   40ae8:	ldr	r5, [r5, r2]
   40aec:	mla	r0, r5, r6, r0
   40af0:	add	r7, r0, r7
   40af4:	add	ip, ip, r0
   40af8:	subs	r3, r3, #1
   40afc:	add	r2, r2, #4
   40b00:	beq	408c0 <GetDataSlab+0xc764>
   40b04:	ldr	r0, [r4, r2]
   40b08:	add	r0, r0, #1
   40b0c:	str	r0, [r4, r2]
   40b10:	ldr	r1, [r9, r2]
   40b14:	sdiv	r6, r0, r1
   40b18:	mls	r0, r6, r1, r0
   40b1c:	cmp	r0, #0
   40b20:	bne	408b0 <GetDataSlab+0xc754>
   40b24:	mov	r0, #0
   40b28:	str	r0, [r4, r2]
   40b2c:	ldr	r0, [r8, r2]
   40b30:	sdiv	r1, r7, r0
   40b34:	mls	r1, r1, r0, r7
   40b38:	cmp	r1, #0
   40b3c:	bne	40ad8 <GetDataSlab+0xc97c>
   40b40:	ldr	r0, [sp, #84]	; 0x54
   40b44:	ldr	r0, [r0, r2]
   40b48:	cmp	r0, #0
   40b4c:	beq	40af8 <GetDataSlab+0xc99c>
   40b50:	sub	r1, fp, #176	; 0xb0
   40b54:	ldr	r1, [r1, r2]
   40b58:	mla	r7, r1, r0, r7
   40b5c:	mla	ip, r1, r0, ip
   40b60:	subs	r3, r3, #1
   40b64:	add	r2, r2, #4
   40b68:	bne	40b04 <GetDataSlab+0xc9a8>
   40b6c:	b	408c0 <GetDataSlab+0xc764>
   40b70:	ldr	r0, [sp, #80]	; 0x50
   40b74:	cmp	r9, #1
   40b78:	add	ip, r0, r7
   40b7c:	bne	4d9a0 <GetDataSlab+0x19844>
   40b80:	ldr	r0, [sp, #76]	; 0x4c
   40b84:	ldr	r2, [fp, #12]
   40b88:	ldr	lr, [sp, #48]	; 0x30
   40b8c:	sub	r3, fp, #96	; 0x60
   40b90:	cmp	r0, #1
   40b94:	ldr	r0, [sp, #72]	; 0x48
   40b98:	blt	5b69c <GetDataSlab+0x27540>
   40b9c:	sub	r0, r0, #2
   40ba0:	mov	r1, #1
   40ba4:	ldr	sl, [sp, #88]	; 0x58
   40ba8:	add	r1, r1, r0, lsr #1
   40bac:	lsr	r0, r0, #1
   40bb0:	str	r0, [sp, #28]
   40bb4:	mov	r0, #0
   40bb8:	and	r4, r1, #1
   40bbc:	str	r0, [sp, #68]	; 0x44
   40bc0:	mov	r0, #0
   40bc4:	sub	r1, r1, r4
   40bc8:	str	r4, [sp, #36]	; 0x24
   40bcc:	str	r0, [sp, #80]	; 0x50
   40bd0:	str	r1, [sp, #16]
   40bd4:	sub	r1, fp, #136	; 0x88
   40bd8:	orr	r4, r1, #4
   40bdc:	ldr	r1, [fp, #20]
   40be0:	add	r9, r1, #4
   40be4:	sub	r1, fp, #176	; 0xb0
   40be8:	orr	r8, r1, #4
   40bec:	add	r1, r2, #4
   40bf0:	orr	r2, r3, #4
   40bf4:	str	r9, [sp, #20]
   40bf8:	str	r1, [sp, #84]	; 0x54
   40bfc:	ldr	r1, [fp, #24]
   40c00:	str	r2, [sp, #40]	; 0x28
   40c04:	str	r8, [sp, #24]
   40c08:	sub	r1, r1, #1
   40c0c:	str	r1, [sp, #52]	; 0x34
   40c10:	ldr	r1, [sp, #72]	; 0x48
   40c14:	lsl	r2, r1, #3
   40c18:	str	r2, [sp, #64]	; 0x40
   40c1c:	and	r2, r1, #1
   40c20:	str	r2, [sp, #56]	; 0x38
   40c24:	bic	r2, r1, #1
   40c28:	str	r2, [sp, #32]
   40c2c:	ldr	r6, [sp, #88]	; 0x58
   40c30:	ldr	r0, [fp, #12]
   40c34:	cmp	r1, #1
   40c38:	bge	40c94 <GetDataSlab+0xcb38>
   40c3c:	b	40e48 <GetDataSlab+0xccec>
   40c40:	ldr	r0, [sp, #40]	; 0x28
   40c44:	ldr	r0, [r0, r2]
   40c48:	add	ip, ip, r0
   40c4c:	add	r7, r0, r7
   40c50:	ldr	r0, [sp, #64]	; 0x40
   40c54:	ldr	r1, [sp, #72]	; 0x48
   40c58:	ldr	r3, [sp, #80]	; 0x50
   40c5c:	mov	r2, #0
   40c60:	add	sl, sl, r0
   40c64:	ldr	r0, [sp, #68]	; 0x44
   40c68:	add	r3, r3, r1
   40c6c:	str	r3, [sp, #80]	; 0x50
   40c70:	add	r0, r0, #1
   40c74:	str	r0, [sp, #68]	; 0x44
   40c78:	ldr	r0, [sp, #76]	; 0x4c
   40c7c:	cmp	r3, r0
   40c80:	bge	5b6a0 <GetDataSlab+0x27544>
   40c84:	ldr	r6, [sp, #88]	; 0x58
   40c88:	ldr	r0, [fp, #12]
   40c8c:	cmp	r1, #1
   40c90:	blt	40e48 <GetDataSlab+0xccec>
   40c94:	ldr	r5, [r0]
   40c98:	ldr	r0, [sp, #80]	; 0x50
   40c9c:	mov	r2, #0
   40ca0:	add	r0, r6, r0, lsl #3
   40ca4:	add	r3, ip, r5
   40ca8:	str	r0, [sp, #60]	; 0x3c
   40cac:	beq	40dc0 <GetDataSlab+0xcc64>
   40cb0:	ldr	r0, [sp, #64]	; 0x40
   40cb4:	ldr	r1, [sp, #68]	; 0x44
   40cb8:	mla	r0, r0, r1, r6
   40cbc:	ldr	r1, [sp, #72]	; 0x48
   40cc0:	add	r1, ip, r1
   40cc4:	add	r1, r1, r5
   40cc8:	cmp	r0, r1
   40ccc:	bcs	40ce8 <GetDataSlab+0xcb8c>
   40cd0:	ldr	r0, [sp, #64]	; 0x40
   40cd4:	ldr	r1, [sp, #68]	; 0x44
   40cd8:	mla	r0, r0, r1, r0
   40cdc:	add	r0, r6, r0
   40ce0:	cmp	r3, r0
   40ce4:	bcc	40dc0 <GetDataSlab+0xcc64>
   40ce8:	ldr	r0, [sp, #28]
   40cec:	mov	r2, #0
   40cf0:	str	r5, [sp, #44]	; 0x2c
   40cf4:	cmp	r0, #0
   40cf8:	beq	40d64 <GetDataSlab+0xcc08>
   40cfc:	ldr	lr, [sp, #16]
   40d00:	mov	r8, sl
   40d04:	add	r5, sp, #528	; 0x210
   40d08:	mov	r9, #32
   40d0c:	sub	r6, fp, #288	; 0x120
   40d10:	mov	r0, r3
   40d14:	subs	lr, lr, #2
   40d18:	ldrh	r1, [r0, r2]!
   40d1c:	add	r2, r2, #4
   40d20:	strh	r1, [r5, #236]	; 0xec
   40d24:	sub	r1, fp, #292	; 0x124
   40d28:	vld1.16	{d16[0]}, [r1 :16]
   40d2c:	add	r1, r8, #16
   40d30:	vmovl.s8	q8, d16
   40d34:	vmovl.s16	q8, d16
   40d38:	vmovl.s32	q8, d16
   40d3c:	vst1.64	{d16-d17}, [r8], r9
   40d40:	ldrh	r0, [r0, #2]
   40d44:	strh	r0, [r5, #240]	; 0xf0
   40d48:	vld1.16	{d16[0]}, [r6 :16]
   40d4c:	vmovl.s8	q8, d16
   40d50:	vmovl.s16	q8, d16
   40d54:	vmovl.s32	q8, d16
   40d58:	vst1.64	{d16-d17}, [r1]
   40d5c:	bne	40d10 <GetDataSlab+0xcbb4>
   40d60:	b	40d68 <GetDataSlab+0xcc0c>
   40d64:	add	r5, sp, #528	; 0x210
   40d68:	ldr	r0, [sp, #36]	; 0x24
   40d6c:	ldr	lr, [sp, #48]	; 0x30
   40d70:	ldr	r8, [sp, #24]
   40d74:	ldr	r9, [sp, #20]
   40d78:	cmp	r0, #0
   40d7c:	beq	40dac <GetDataSlab+0xcc50>
   40d80:	add	r0, r3, r2
   40d84:	ldrh	r0, [r0]
   40d88:	strh	r0, [r5, #232]	; 0xe8
   40d8c:	sub	r0, fp, #296	; 0x128
   40d90:	vld1.16	{d16[0]}, [r0 :16]
   40d94:	ldr	r0, [sp, #60]	; 0x3c
   40d98:	add	r0, r0, r2, lsl #3
   40d9c:	vmovl.s8	q8, d16
   40da0:	vmovl.s16	q8, d16
   40da4:	vmovl.s32	q8, d16
   40da8:	vst1.64	{d16-d17}, [r0]
   40dac:	ldr	r0, [sp, #72]	; 0x48
   40db0:	ldr	r2, [sp, #32]
   40db4:	ldr	r5, [sp, #44]	; 0x2c
   40db8:	cmp	r0, r2
   40dbc:	beq	40e48 <GetDataSlab+0xccec>
   40dc0:	ldr	r0, [sp, #56]	; 0x38
   40dc4:	cmp	r0, #0
   40dc8:	mov	r0, r2
   40dcc:	beq	40dec <GetDataSlab+0xcc90>
   40dd0:	add	r0, r3, r2
   40dd4:	ldr	r1, [sp, #60]	; 0x3c
   40dd8:	ldrsb	r0, [r0]
   40ddc:	str	r0, [r1, r2, lsl #3]!
   40de0:	asr	r0, r0, #31
   40de4:	str	r0, [r1, #4]
   40de8:	orr	r0, r2, #1
   40dec:	orr	r1, r2, #1
   40df0:	ldr	r2, [sp, #72]	; 0x48
   40df4:	cmp	r2, r1
   40df8:	beq	40e48 <GetDataSlab+0xccec>
   40dfc:	ldr	r1, [sp, #72]	; 0x48
   40e00:	sub	r2, r1, r0
   40e04:	add	r1, r0, r5
   40e08:	lsl	r0, r0, #3
   40e0c:	add	r1, ip, r1
   40e10:	add	r3, r1, #1
   40e14:	ldrsb	r1, [r3, #-1]
   40e18:	mov	r6, sl
   40e1c:	subs	r2, r2, #2
   40e20:	str	r1, [r6, r0]!
   40e24:	asr	r1, r1, #31
   40e28:	add	r0, r0, #16
   40e2c:	str	r1, [r6, #4]
   40e30:	ldrsb	r1, [r3]
   40e34:	add	r3, r3, #2
   40e38:	str	r1, [r6, #8]
   40e3c:	asr	r1, r1, #31
   40e40:	str	r1, [r6, #12]
   40e44:	bne	40e14 <GetDataSlab+0xccb8>
   40e48:	ldr	r0, [fp, #24]
   40e4c:	add	ip, ip, lr
   40e50:	add	r7, r7, lr
   40e54:	cmp	r0, #2
   40e58:	blt	40c50 <GetDataSlab+0xcaf4>
   40e5c:	ldr	r3, [sp, #52]	; 0x34
   40e60:	mov	r2, #0
   40e64:	b	40e94 <GetDataSlab+0xcd38>
   40e68:	ldr	r5, [sp, #84]	; 0x54
   40e6c:	sub	r6, fp, #176	; 0xb0
   40e70:	sub	r0, r0, r1
   40e74:	ldr	r6, [r6, r2]
   40e78:	ldr	r5, [r5, r2]
   40e7c:	mla	r0, r5, r6, r0
   40e80:	add	r7, r0, r7
   40e84:	add	ip, ip, r0
   40e88:	subs	r3, r3, #1
   40e8c:	add	r2, r2, #4
   40e90:	beq	40c50 <GetDataSlab+0xcaf4>
   40e94:	ldr	r0, [r4, r2]
   40e98:	add	r0, r0, #1
   40e9c:	str	r0, [r4, r2]
   40ea0:	ldr	r1, [r9, r2]
   40ea4:	sdiv	r6, r0, r1
   40ea8:	mls	r0, r6, r1, r0
   40eac:	cmp	r0, #0
   40eb0:	bne	40c40 <GetDataSlab+0xcae4>
   40eb4:	mov	r0, #0
   40eb8:	str	r0, [r4, r2]
   40ebc:	ldr	r0, [r8, r2]
   40ec0:	sdiv	r1, r7, r0
   40ec4:	mls	r1, r1, r0, r7
   40ec8:	cmp	r1, #0
   40ecc:	bne	40e68 <GetDataSlab+0xcd0c>
   40ed0:	ldr	r0, [sp, #84]	; 0x54
   40ed4:	ldr	r0, [r0, r2]
   40ed8:	cmp	r0, #0
   40edc:	beq	40e88 <GetDataSlab+0xcd2c>
   40ee0:	sub	r1, fp, #176	; 0xb0
   40ee4:	ldr	r1, [r1, r2]
   40ee8:	mla	r7, r1, r0, r7
   40eec:	mla	ip, r1, r0, ip
   40ef0:	subs	r3, r3, #1
   40ef4:	add	r2, r2, #4
   40ef8:	bne	40e94 <GetDataSlab+0xcd38>
   40efc:	b	40c50 <GetDataSlab+0xcaf4>
   40f00:	ldr	r0, [sp, #80]	; 0x50
   40f04:	cmp	sl, #1
   40f08:	add	r8, r0, r5
   40f0c:	bne	4dbc0 <GetDataSlab+0x19a64>
   40f10:	ldr	r0, [sp, #76]	; 0x4c
   40f14:	ldr	r2, [fp, #20]
   40f18:	cmp	r0, #1
   40f1c:	blt	5b69c <GetDataSlab+0x27540>
   40f20:	ldr	r3, [sp, #72]	; 0x48
   40f24:	mov	r1, #1
   40f28:	ldr	lr, [sp, #40]	; 0x28
   40f2c:	orr	sl, ip, #4
   40f30:	add	r9, r2, #4
   40f34:	str	sl, [sp, #20]
   40f38:	sub	r0, r3, #2
   40f3c:	add	r1, r1, r0, lsr #1
   40f40:	lsr	r0, r0, #1
   40f44:	str	r0, [sp, #24]
   40f48:	ldr	r0, [sp, #88]	; 0x58
   40f4c:	and	r7, r1, #1
   40f50:	sub	r1, r1, r7
   40f54:	str	r7, [sp, #32]
   40f58:	str	r1, [sp, #16]
   40f5c:	sub	r1, fp, #136	; 0x88
   40f60:	orr	r4, r1, #4
   40f64:	ldr	r1, [fp, #12]
   40f68:	str	r0, [sp, #64]	; 0x40
   40f6c:	mov	r0, #0
   40f70:	str	r0, [sp, #68]	; 0x44
   40f74:	mov	r0, #0
   40f78:	str	r0, [sp, #80]	; 0x50
   40f7c:	add	r1, r1, #4
   40f80:	str	r1, [sp, #84]	; 0x54
   40f84:	ldr	r1, [fp, #24]
   40f88:	sub	r1, r1, #1
   40f8c:	str	r1, [sp, #44]	; 0x2c
   40f90:	sub	r1, fp, #96	; 0x60
   40f94:	orr	r1, r1, #4
   40f98:	str	r1, [sp, #36]	; 0x24
   40f9c:	lsl	r1, r3, #3
   40fa0:	str	r1, [sp, #60]	; 0x3c
   40fa4:	and	r1, r3, #1
   40fa8:	str	r1, [sp, #48]	; 0x30
   40fac:	bic	r1, r3, #1
   40fb0:	str	r1, [sp, #28]
   40fb4:	cmp	r3, #1
   40fb8:	sub	ip, fp, #176	; 0xb0
   40fbc:	add	r6, sp, #528	; 0x210
   40fc0:	bge	41024 <GetDataSlab+0xcec8>
   40fc4:	b	411f0 <GetDataSlab+0xd094>
   40fc8:	ldr	r0, [sp, #36]	; 0x24
   40fcc:	ldr	r0, [r0, r2]
   40fd0:	add	r8, r8, r0
   40fd4:	add	r5, r0, r5
   40fd8:	ldr	r0, [sp, #60]	; 0x3c
   40fdc:	ldr	r1, [sp, #64]	; 0x40
   40fe0:	ldr	r3, [sp, #72]	; 0x48
   40fe4:	mov	r2, #0
   40fe8:	add	r1, r1, r0
   40fec:	ldr	r0, [sp, #68]	; 0x44
   40ff0:	str	r1, [sp, #64]	; 0x40
   40ff4:	ldr	r1, [sp, #80]	; 0x50
   40ff8:	add	r0, r0, #1
   40ffc:	str	r0, [sp, #68]	; 0x44
   41000:	ldr	r0, [sp, #76]	; 0x4c
   41004:	add	r1, r1, r3
   41008:	str	r1, [sp, #80]	; 0x50
   4100c:	cmp	r1, r0
   41010:	bge	5b6a0 <GetDataSlab+0x27544>
   41014:	cmp	r3, #1
   41018:	sub	ip, fp, #176	; 0xb0
   4101c:	add	r6, sp, #528	; 0x210
   41020:	blt	411f0 <GetDataSlab+0xd094>
   41024:	ldr	r0, [fp, #12]
   41028:	ldr	r1, [sp, #80]	; 0x50
   4102c:	ldr	r7, [r0]
   41030:	ldr	r0, [sp, #88]	; 0x58
   41034:	add	r1, r0, r1, lsl #3
   41038:	add	r3, r8, r7
   4103c:	str	r1, [sp, #56]	; 0x38
   41040:	mov	r1, #0
   41044:	beq	41168 <GetDataSlab+0xd00c>
   41048:	str	r7, [sp, #52]	; 0x34
   4104c:	ldr	r2, [sp, #60]	; 0x3c
   41050:	ldr	r7, [sp, #68]	; 0x44
   41054:	mla	r0, r2, r7, r0
   41058:	ldr	r2, [sp, #72]	; 0x48
   4105c:	ldr	r7, [sp, #52]	; 0x34
   41060:	add	r2, r8, r2
   41064:	add	r2, r2, r7
   41068:	cmp	r0, r2
   4106c:	bcs	4108c <GetDataSlab+0xcf30>
   41070:	ldr	r0, [sp, #60]	; 0x3c
   41074:	ldr	r2, [sp, #68]	; 0x44
   41078:	mla	r0, r0, r2, r0
   4107c:	ldr	r2, [sp, #88]	; 0x58
   41080:	add	r0, r2, r0
   41084:	cmp	r3, r0
   41088:	bcc	41168 <GetDataSlab+0xd00c>
   4108c:	ldr	r0, [sp, #24]
   41090:	mov	r2, #0
   41094:	cmp	r0, #0
   41098:	beq	41108 <GetDataSlab+0xcfac>
   4109c:	ldr	sl, [sp, #64]	; 0x40
   410a0:	ldr	r1, [sp, #16]
   410a4:	mov	ip, sl
   410a8:	mov	r0, r3
   410ac:	mov	r7, #32
   410b0:	subs	r1, r1, #2
   410b4:	ldrh	lr, [r0, r2]!
   410b8:	add	r2, r2, #4
   410bc:	strh	lr, [r6]
   410c0:	vld1.16	{d16[0]}, [r6 :16]
   410c4:	vmovl.u8	q8, d16
   410c8:	vmovl.u16	q0, d16
   410cc:	vcvt.f64.u32	d17, s1
   410d0:	vcvt.f64.u32	d16, s0
   410d4:	vst1.64	{d16-d17}, [ip], r7
   410d8:	ldrh	r0, [r0, #2]
   410dc:	strh	r0, [r6, #4]
   410e0:	sub	r0, fp, #524	; 0x20c
   410e4:	vld1.16	{d16[0]}, [r0 :16]
   410e8:	add	r0, sl, #16
   410ec:	mov	sl, ip
   410f0:	vmovl.u8	q8, d16
   410f4:	vmovl.u16	q0, d16
   410f8:	vcvt.f64.u32	d17, s1
   410fc:	vcvt.f64.u32	d16, s0
   41100:	vst1.64	{d16-d17}, [r0]
   41104:	bne	410a8 <GetDataSlab+0xcf4c>
   41108:	ldr	r0, [sp, #32]
   4110c:	ldr	lr, [sp, #40]	; 0x28
   41110:	ldr	sl, [sp, #20]
   41114:	ldr	r7, [sp, #52]	; 0x34
   41118:	sub	ip, fp, #176	; 0xb0
   4111c:	cmp	r0, #0
   41120:	beq	41158 <GetDataSlab+0xcffc>
   41124:	add	r0, r3, r2
   41128:	add	r1, sp, #272	; 0x110
   4112c:	ldrh	r0, [r0]
   41130:	strh	r0, [r1, #252]	; 0xfc
   41134:	add	r0, sp, #524	; 0x20c
   41138:	vld1.16	{d16[0]}, [r0 :16]
   4113c:	vmovl.u8	q8, d16
   41140:	vmovl.u16	q0, d16
   41144:	vcvt.f64.u32	d17, s1
   41148:	vcvt.f64.u32	d16, s0
   4114c:	ldr	r0, [sp, #56]	; 0x38
   41150:	add	r0, r0, r2, lsl #3
   41154:	vst1.64	{d16-d17}, [r0]
   41158:	ldr	r0, [sp, #72]	; 0x48
   4115c:	ldr	r1, [sp, #28]
   41160:	cmp	r0, r1
   41164:	beq	411f0 <GetDataSlab+0xd094>
   41168:	ldr	r0, [sp, #48]	; 0x30
   4116c:	cmp	r0, #0
   41170:	mov	r0, r1
   41174:	beq	41194 <GetDataSlab+0xd038>
   41178:	ldrb	r2, [r3, r1]
   4117c:	ldr	r0, [sp, #56]	; 0x38
   41180:	vmov	s0, r2
   41184:	add	r0, r0, r1, lsl #3
   41188:	vcvt.f64.u32	d16, s0
   4118c:	vstr	d16, [r0]
   41190:	orr	r0, r1, #1
   41194:	ldr	r2, [sp, #72]	; 0x48
   41198:	orr	r1, r1, #1
   4119c:	cmp	r2, r1
   411a0:	beq	411f0 <GetDataSlab+0xd094>
   411a4:	ldr	r1, [sp, #64]	; 0x40
   411a8:	ldr	r2, [sp, #72]	; 0x48
   411ac:	add	r1, r1, r0, lsl #3
   411b0:	sub	r2, r2, r0
   411b4:	add	r0, r0, r7
   411b8:	add	r0, r8, r0
   411bc:	add	r3, r0, #1
   411c0:	ldrb	r0, [r3, #-1]
   411c4:	subs	r2, r2, #2
   411c8:	vmov	s0, r0
   411cc:	vcvt.f64.u32	d16, s0
   411d0:	vstr	d16, [r1]
   411d4:	ldrb	r0, [r3]
   411d8:	add	r3, r3, #2
   411dc:	vmov	s0, r0
   411e0:	vcvt.f64.u32	d16, s0
   411e4:	vstr	d16, [r1, #8]
   411e8:	add	r1, r1, #16
   411ec:	bne	411c0 <GetDataSlab+0xd064>
   411f0:	ldr	r0, [fp, #24]
   411f4:	add	r8, r8, lr
   411f8:	add	r5, r5, lr
   411fc:	cmp	r0, #2
   41200:	blt	40fd8 <GetDataSlab+0xce7c>
   41204:	ldr	r3, [sp, #44]	; 0x2c
   41208:	mov	r2, #0
   4120c:	b	41238 <GetDataSlab+0xd0dc>
   41210:	ldr	r7, [sp, #84]	; 0x54
   41214:	ldr	r6, [ip, r2]
   41218:	sub	r0, r0, r1
   4121c:	ldr	r7, [r7, r2]
   41220:	mla	r0, r7, r6, r0
   41224:	add	r5, r0, r5
   41228:	add	r8, r8, r0
   4122c:	subs	r3, r3, #1
   41230:	add	r2, r2, #4
   41234:	beq	40fd8 <GetDataSlab+0xce7c>
   41238:	ldr	r0, [r4, r2]
   4123c:	add	r0, r0, #1
   41240:	str	r0, [r4, r2]
   41244:	ldr	r1, [r9, r2]
   41248:	sdiv	r6, r0, r1
   4124c:	mls	r0, r6, r1, r0
   41250:	cmp	r0, #0
   41254:	bne	40fc8 <GetDataSlab+0xce6c>
   41258:	mov	r0, #0
   4125c:	str	r0, [r4, r2]
   41260:	ldr	r0, [sl, r2]
   41264:	sdiv	r1, r5, r0
   41268:	mls	r1, r1, r0, r5
   4126c:	cmp	r1, #0
   41270:	bne	41210 <GetDataSlab+0xd0b4>
   41274:	ldr	r0, [sp, #84]	; 0x54
   41278:	ldr	r0, [r0, r2]
   4127c:	cmp	r0, #0
   41280:	beq	4122c <GetDataSlab+0xd0d0>
   41284:	ldr	r1, [ip, r2]
   41288:	mla	r5, r1, r0, r5
   4128c:	mla	r8, r1, r0, r8
   41290:	subs	r3, r3, #1
   41294:	add	r2, r2, #4
   41298:	bne	41238 <GetDataSlab+0xd0dc>
   4129c:	b	40fd8 <GetDataSlab+0xce7c>
   412a0:	ldr	r0, [sp, #80]	; 0x50
   412a4:	ldr	r6, [sp, #68]	; 0x44
   412a8:	add	r9, r0, r1, lsl #1
   412ac:	cmp	r6, #1
   412b0:	bne	4ddec <GetDataSlab+0x19c90>
   412b4:	ldr	r0, [sp, #76]	; 0x4c
   412b8:	ldr	r3, [fp, #12]
   412bc:	ldr	r8, [sp, #60]	; 0x3c
   412c0:	sub	r6, fp, #96	; 0x60
   412c4:	cmp	r0, #1
   412c8:	blt	5b69c <GetDataSlab+0x27540>
   412cc:	mov	r5, r3
   412d0:	ldr	r3, [sp, #72]	; 0x48
   412d4:	mov	r2, #1
   412d8:	sub	r0, r3, #2
   412dc:	add	r2, r2, r0, lsr #1
   412e0:	lsr	r0, r0, #1
   412e4:	str	r0, [sp, #40]	; 0x28
   412e8:	ldr	r0, [sp, #88]	; 0x58
   412ec:	and	r7, r2, #1
   412f0:	sub	r2, r2, r7
   412f4:	str	r7, [sp, #48]	; 0x30
   412f8:	ldr	r7, [fp, #20]
   412fc:	str	r2, [sp, #28]
   41300:	sub	r2, fp, #136	; 0x88
   41304:	orr	r4, r2, #4
   41308:	mov	r2, ip
   4130c:	str	r0, [sp, #84]	; 0x54
   41310:	mov	r0, #0
   41314:	orr	sl, r2, #4
   41318:	ldr	r2, [fp, #24]
   4131c:	str	r0, [sp, #80]	; 0x50
   41320:	add	ip, r7, #4
   41324:	str	sl, [sp, #36]	; 0x24
   41328:	sub	r2, r2, #1
   4132c:	str	r2, [sp, #56]	; 0x38
   41330:	orr	r2, r6, #4
   41334:	str	r2, [sp, #32]
   41338:	lsl	r2, r3, #3
   4133c:	str	r2, [sp, #68]	; 0x44
   41340:	bic	r2, r3, #1
   41344:	str	r2, [sp, #44]	; 0x2c
   41348:	ldr	r2, [r5], #4
   4134c:	str	r5, [sp, #92]	; 0x5c
   41350:	str	r2, [sp, #64]	; 0x40
   41354:	ldr	lr, [sp, #92]	; 0x5c
   41358:	cmp	r3, #1
   4135c:	bge	413b0 <GetDataSlab+0xd254>
   41360:	b	414d0 <GetDataSlab+0xd374>
   41364:	ldr	r0, [sp, #32]
   41368:	ldr	r0, [r0, r2]
   4136c:	add	r9, r9, r0, lsl #1
   41370:	add	r1, r0, r1
   41374:	ldr	r0, [sp, #68]	; 0x44
   41378:	ldr	r2, [sp, #84]	; 0x54
   4137c:	ldr	r3, [sp, #72]	; 0x48
   41380:	ldr	r7, [sp, #80]	; 0x50
   41384:	add	r2, r2, r0
   41388:	ldr	r0, [sp, #76]	; 0x4c
   4138c:	add	r7, r7, r3
   41390:	str	r2, [sp, #84]	; 0x54
   41394:	mov	r2, #0
   41398:	str	r7, [sp, #80]	; 0x50
   4139c:	cmp	r7, r0
   413a0:	bge	5b6a0 <GetDataSlab+0x27544>
   413a4:	ldr	lr, [sp, #92]	; 0x5c
   413a8:	cmp	r3, #1
   413ac:	blt	414d0 <GetDataSlab+0xd374>
   413b0:	mov	r0, #0
   413b4:	beq	4149c <GetDataSlab+0xd340>
   413b8:	ldr	r0, [sp, #64]	; 0x40
   413bc:	mov	r2, #0
   413c0:	add	r3, r9, r0, lsl #1
   413c4:	ldr	r0, [sp, #40]	; 0x28
   413c8:	str	r3, [sp, #52]	; 0x34
   413cc:	cmp	r0, #0
   413d0:	beq	4143c <GetDataSlab+0xd2e0>
   413d4:	ldr	r8, [sp, #84]	; 0x54
   413d8:	ldr	sl, [sp, #28]
   413dc:	add	r6, sp, #492	; 0x1ec
   413e0:	mov	r7, #32
   413e4:	add	r5, sp, #496	; 0x1f0
   413e8:	mov	lr, r8
   413ec:	ldr	r0, [r3]
   413f0:	subs	sl, sl, #2
   413f4:	add	r2, r2, #4
   413f8:	str	r0, [sp, #492]	; 0x1ec
   413fc:	vld1.32	{d16[0]}, [r6 :32]
   41400:	vmovl.s16	q0, d16
   41404:	vcvt.f64.s32	d17, s1
   41408:	vcvt.f64.s32	d16, s0
   4140c:	vst1.64	{d16-d17}, [lr], r7
   41410:	ldr	r0, [r3, #4]
   41414:	add	r3, r3, #8
   41418:	str	r0, [sp, #496]	; 0x1f0
   4141c:	add	r0, r8, #16
   41420:	mov	r8, lr
   41424:	vld1.32	{d16[0]}, [r5 :32]
   41428:	vmovl.s16	q0, d16
   4142c:	vcvt.f64.s32	d17, s1
   41430:	vcvt.f64.s32	d16, s0
   41434:	vst1.64	{d16-d17}, [r0]
   41438:	bne	413ec <GetDataSlab+0xd290>
   4143c:	ldr	r0, [sp, #48]	; 0x30
   41440:	ldr	lr, [sp, #92]	; 0x5c
   41444:	ldr	r8, [sp, #60]	; 0x3c
   41448:	ldr	sl, [sp, #36]	; 0x24
   4144c:	cmp	r0, #0
   41450:	ldr	r0, [sp, #88]	; 0x58
   41454:	beq	41488 <GetDataSlab+0xd32c>
   41458:	ldr	r3, [sp, #80]	; 0x50
   4145c:	add	r0, r0, r3, lsl #3
   41460:	ldr	r3, [sp, #52]	; 0x34
   41464:	add	r0, r0, r2, lsl #3
   41468:	ldr	r3, [r3, r2, lsl #1]
   4146c:	str	r3, [sp, #488]	; 0x1e8
   41470:	add	r3, sp, #488	; 0x1e8
   41474:	vld1.32	{d16[0]}, [r3 :32]
   41478:	vmovl.s16	q0, d16
   4147c:	vcvt.f64.s32	d17, s1
   41480:	vcvt.f64.s32	d16, s0
   41484:	vst1.64	{d16-d17}, [r0]
   41488:	ldr	r0, [sp, #72]	; 0x48
   4148c:	ldr	r2, [sp, #44]	; 0x2c
   41490:	cmp	r0, r2
   41494:	mov	r0, r2
   41498:	beq	414d0 <GetDataSlab+0xd374>
   4149c:	ldr	r5, [sp, #64]	; 0x40
   414a0:	ldr	r2, [sp, #84]	; 0x54
   414a4:	ldr	r3, [sp, #72]	; 0x48
   414a8:	add	r7, r9, r5, lsl #1
   414ac:	add	r2, r2, r0, lsl #3
   414b0:	sub	r3, r3, r0
   414b4:	add	r0, r7, r0, lsl #1
   414b8:	ldrsh	r7, [r0], #2
   414bc:	subs	r3, r3, #1
   414c0:	vmov	s0, r7
   414c4:	vcvt.f64.s32	d16, s0
   414c8:	vstmia	r2!, {d16}
   414cc:	bne	414b8 <GetDataSlab+0xd35c>
   414d0:	ldr	r0, [fp, #24]
   414d4:	add	r9, r9, r8, lsl #1
   414d8:	add	r1, r1, r8
   414dc:	cmp	r0, #2
   414e0:	blt	41374 <GetDataSlab+0xd218>
   414e4:	ldr	r3, [sp, #56]	; 0x38
   414e8:	mov	r2, #0
   414ec:	b	41518 <GetDataSlab+0xd3bc>
   414f0:	sub	r5, fp, #176	; 0xb0
   414f4:	sub	r0, r0, r7
   414f8:	ldr	r6, [r5, r2]
   414fc:	ldr	r5, [lr, r2]
   41500:	mla	r0, r5, r6, r0
   41504:	add	r1, r0, r1
   41508:	add	r9, r9, r0, lsl #1
   4150c:	subs	r3, r3, #1
   41510:	add	r2, r2, #4
   41514:	beq	41374 <GetDataSlab+0xd218>
   41518:	ldr	r0, [r4, r2]
   4151c:	add	r0, r0, #1
   41520:	str	r0, [r4, r2]
   41524:	ldr	r7, [ip, r2]
   41528:	sdiv	r6, r0, r7
   4152c:	mls	r0, r6, r7, r0
   41530:	cmp	r0, #0
   41534:	bne	41364 <GetDataSlab+0xd208>
   41538:	mov	r0, #0
   4153c:	str	r0, [r4, r2]
   41540:	ldr	r0, [sl, r2]
   41544:	sdiv	r7, r1, r0
   41548:	mls	r7, r7, r0, r1
   4154c:	cmp	r7, #0
   41550:	bne	414f0 <GetDataSlab+0xd394>
   41554:	ldr	r0, [lr, r2]
   41558:	cmp	r0, #0
   4155c:	beq	4150c <GetDataSlab+0xd3b0>
   41560:	sub	r5, fp, #176	; 0xb0
   41564:	ldr	r7, [r5, r2]
   41568:	mla	r1, r7, r0, r1
   4156c:	mul	r0, r7, r0
   41570:	b	41508 <GetDataSlab+0xd3ac>
   41574:	ldr	r0, [sp, #80]	; 0x50
   41578:	ldr	r6, [sp, #68]	; 0x44
   4157c:	add	r9, r0, r1, lsl #1
   41580:	cmp	r6, #1
   41584:	bne	4e00c <GetDataSlab+0x19eb0>
   41588:	ldr	r0, [sp, #76]	; 0x4c
   4158c:	ldr	r3, [fp, #12]
   41590:	ldr	r8, [sp, #60]	; 0x3c
   41594:	sub	r6, fp, #96	; 0x60
   41598:	cmp	r0, #1
   4159c:	blt	5b69c <GetDataSlab+0x27540>
   415a0:	mov	r5, r3
   415a4:	ldr	r3, [sp, #72]	; 0x48
   415a8:	mov	r2, #1
   415ac:	sub	r0, r3, #2
   415b0:	add	r2, r2, r0, lsr #1
   415b4:	lsr	r0, r0, #1
   415b8:	str	r0, [sp, #40]	; 0x28
   415bc:	ldr	r0, [sp, #88]	; 0x58
   415c0:	and	r7, r2, #1
   415c4:	sub	r2, r2, r7
   415c8:	str	r7, [sp, #48]	; 0x30
   415cc:	ldr	r7, [fp, #20]
   415d0:	str	r2, [sp, #28]
   415d4:	sub	r2, fp, #136	; 0x88
   415d8:	orr	r4, r2, #4
   415dc:	mov	r2, ip
   415e0:	str	r0, [sp, #84]	; 0x54
   415e4:	mov	r0, #0
   415e8:	orr	sl, r2, #4
   415ec:	ldr	r2, [fp, #24]
   415f0:	str	r0, [sp, #80]	; 0x50
   415f4:	add	ip, r7, #4
   415f8:	str	sl, [sp, #36]	; 0x24
   415fc:	sub	r2, r2, #1
   41600:	str	r2, [sp, #56]	; 0x38
   41604:	orr	r2, r6, #4
   41608:	str	r2, [sp, #32]
   4160c:	lsl	r2, r3, #3
   41610:	str	r2, [sp, #68]	; 0x44
   41614:	bic	r2, r3, #1
   41618:	str	r2, [sp, #44]	; 0x2c
   4161c:	ldr	r2, [r5], #4
   41620:	str	r5, [sp, #92]	; 0x5c
   41624:	str	r2, [sp, #64]	; 0x40
   41628:	ldr	lr, [sp, #92]	; 0x5c
   4162c:	cmp	r3, #1
   41630:	bge	41684 <GetDataSlab+0xd528>
   41634:	b	417a4 <GetDataSlab+0xd648>
   41638:	ldr	r0, [sp, #32]
   4163c:	ldr	r0, [r0, r2]
   41640:	add	r9, r9, r0, lsl #1
   41644:	add	r1, r0, r1
   41648:	ldr	r0, [sp, #68]	; 0x44
   4164c:	ldr	r2, [sp, #84]	; 0x54
   41650:	ldr	r3, [sp, #72]	; 0x48
   41654:	ldr	r7, [sp, #80]	; 0x50
   41658:	add	r2, r2, r0
   4165c:	ldr	r0, [sp, #76]	; 0x4c
   41660:	add	r7, r7, r3
   41664:	str	r2, [sp, #84]	; 0x54
   41668:	mov	r2, #0
   4166c:	str	r7, [sp, #80]	; 0x50
   41670:	cmp	r7, r0
   41674:	bge	5b6a0 <GetDataSlab+0x27544>
   41678:	ldr	lr, [sp, #92]	; 0x5c
   4167c:	cmp	r3, #1
   41680:	blt	417a4 <GetDataSlab+0xd648>
   41684:	mov	r0, #0
   41688:	beq	41770 <GetDataSlab+0xd614>
   4168c:	ldr	r0, [sp, #64]	; 0x40
   41690:	mov	r2, #0
   41694:	add	r3, r9, r0, lsl #1
   41698:	ldr	r0, [sp, #40]	; 0x28
   4169c:	str	r3, [sp, #52]	; 0x34
   416a0:	cmp	r0, #0
   416a4:	beq	41710 <GetDataSlab+0xd5b4>
   416a8:	ldr	r8, [sp, #84]	; 0x54
   416ac:	ldr	sl, [sp, #28]
   416b0:	add	r6, sp, #504	; 0x1f8
   416b4:	mov	r7, #32
   416b8:	add	r5, sp, #508	; 0x1fc
   416bc:	mov	lr, r8
   416c0:	ldr	r0, [r3]
   416c4:	subs	sl, sl, #2
   416c8:	add	r2, r2, #4
   416cc:	str	r0, [sp, #504]	; 0x1f8
   416d0:	vld1.32	{d16[0]}, [r6 :32]
   416d4:	vmovl.u16	q0, d16
   416d8:	vcvt.f64.u32	d17, s1
   416dc:	vcvt.f64.u32	d16, s0
   416e0:	vst1.64	{d16-d17}, [lr], r7
   416e4:	ldr	r0, [r3, #4]
   416e8:	add	r3, r3, #8
   416ec:	str	r0, [sp, #508]	; 0x1fc
   416f0:	add	r0, r8, #16
   416f4:	mov	r8, lr
   416f8:	vld1.32	{d16[0]}, [r5 :32]
   416fc:	vmovl.u16	q0, d16
   41700:	vcvt.f64.u32	d17, s1
   41704:	vcvt.f64.u32	d16, s0
   41708:	vst1.64	{d16-d17}, [r0]
   4170c:	bne	416c0 <GetDataSlab+0xd564>
   41710:	ldr	r0, [sp, #48]	; 0x30
   41714:	ldr	lr, [sp, #92]	; 0x5c
   41718:	ldr	r8, [sp, #60]	; 0x3c
   4171c:	ldr	sl, [sp, #36]	; 0x24
   41720:	cmp	r0, #0
   41724:	ldr	r0, [sp, #88]	; 0x58
   41728:	beq	4175c <GetDataSlab+0xd600>
   4172c:	ldr	r3, [sp, #80]	; 0x50
   41730:	add	r0, r0, r3, lsl #3
   41734:	ldr	r3, [sp, #52]	; 0x34
   41738:	add	r0, r0, r2, lsl #3
   4173c:	ldr	r3, [r3, r2, lsl #1]
   41740:	str	r3, [sp, #500]	; 0x1f4
   41744:	add	r3, sp, #500	; 0x1f4
   41748:	vld1.32	{d16[0]}, [r3 :32]
   4174c:	vmovl.u16	q0, d16
   41750:	vcvt.f64.u32	d17, s1
   41754:	vcvt.f64.u32	d16, s0
   41758:	vst1.64	{d16-d17}, [r0]
   4175c:	ldr	r0, [sp, #72]	; 0x48
   41760:	ldr	r2, [sp, #44]	; 0x2c
   41764:	cmp	r0, r2
   41768:	mov	r0, r2
   4176c:	beq	417a4 <GetDataSlab+0xd648>
   41770:	ldr	r5, [sp, #64]	; 0x40
   41774:	ldr	r2, [sp, #84]	; 0x54
   41778:	ldr	r3, [sp, #72]	; 0x48
   4177c:	add	r7, r9, r5, lsl #1
   41780:	add	r2, r2, r0, lsl #3
   41784:	sub	r3, r3, r0
   41788:	add	r0, r7, r0, lsl #1
   4178c:	ldrh	r7, [r0], #2
   41790:	subs	r3, r3, #1
   41794:	vmov	s0, r7
   41798:	vcvt.f64.u32	d16, s0
   4179c:	vstmia	r2!, {d16}
   417a0:	bne	4178c <GetDataSlab+0xd630>
   417a4:	ldr	r0, [fp, #24]
   417a8:	add	r9, r9, r8, lsl #1
   417ac:	add	r1, r1, r8
   417b0:	cmp	r0, #2
   417b4:	blt	41648 <GetDataSlab+0xd4ec>
   417b8:	ldr	r3, [sp, #56]	; 0x38
   417bc:	mov	r2, #0
   417c0:	b	417ec <GetDataSlab+0xd690>
   417c4:	sub	r5, fp, #176	; 0xb0
   417c8:	sub	r0, r0, r7
   417cc:	ldr	r6, [r5, r2]
   417d0:	ldr	r5, [lr, r2]
   417d4:	mla	r0, r5, r6, r0
   417d8:	add	r1, r0, r1
   417dc:	add	r9, r9, r0, lsl #1
   417e0:	subs	r3, r3, #1
   417e4:	add	r2, r2, #4
   417e8:	beq	41648 <GetDataSlab+0xd4ec>
   417ec:	ldr	r0, [r4, r2]
   417f0:	add	r0, r0, #1
   417f4:	str	r0, [r4, r2]
   417f8:	ldr	r7, [ip, r2]
   417fc:	sdiv	r6, r0, r7
   41800:	mls	r0, r6, r7, r0
   41804:	cmp	r0, #0
   41808:	bne	41638 <GetDataSlab+0xd4dc>
   4180c:	mov	r0, #0
   41810:	str	r0, [r4, r2]
   41814:	ldr	r0, [sl, r2]
   41818:	sdiv	r7, r1, r0
   4181c:	mls	r7, r7, r0, r1
   41820:	cmp	r7, #0
   41824:	bne	417c4 <GetDataSlab+0xd668>
   41828:	ldr	r0, [lr, r2]
   4182c:	cmp	r0, #0
   41830:	beq	417e0 <GetDataSlab+0xd684>
   41834:	sub	r5, fp, #176	; 0xb0
   41838:	ldr	r7, [r5, r2]
   4183c:	mla	r1, r7, r0, r1
   41840:	mul	r0, r7, r0
   41844:	b	417dc <GetDataSlab+0xd680>
   41848:	ldr	r0, [sp, #80]	; 0x50
   4184c:	ldr	r5, [sp, #56]	; 0x38
   41850:	add	r4, r0, r3, lsl #2
   41854:	cmp	r5, #1
   41858:	bne	4e22c <GetDataSlab+0x1a0d0>
   4185c:	ldr	r0, [sp, #76]	; 0x4c
   41860:	ldr	r2, [fp, #20]
   41864:	cmp	r0, #1
   41868:	ldr	r0, [sp, #68]	; 0x44
   4186c:	blt	5b69c <GetDataSlab+0x27540>
   41870:	sub	r0, r0, #2
   41874:	mov	r1, #1
   41878:	ldr	lr, [sp, #52]	; 0x34
   4187c:	add	sl, r2, #4
   41880:	orr	r2, ip, #4
   41884:	str	r8, [sp, #80]	; 0x50
   41888:	mov	r6, r4
   4188c:	add	r1, r1, r0, lsr #1
   41890:	lsr	r0, r0, #1
   41894:	mov	r8, r2
   41898:	str	sl, [sp, #32]
   4189c:	str	r0, [sp, #36]	; 0x24
   418a0:	mov	r0, #0
   418a4:	and	r7, r1, #1
   418a8:	str	r0, [sp, #72]	; 0x48
   418ac:	sub	r1, r1, r7
   418b0:	str	r7, [sp, #44]	; 0x2c
   418b4:	str	r1, [sp, #24]
   418b8:	sub	r1, fp, #136	; 0x88
   418bc:	orr	r9, r1, #4
   418c0:	ldr	r1, [fp, #12]
   418c4:	add	r1, r1, #4
   418c8:	str	r1, [sp, #84]	; 0x54
   418cc:	ldr	r1, [fp, #24]
   418d0:	sub	r1, r1, #1
   418d4:	str	r1, [sp, #56]	; 0x38
   418d8:	sub	r1, fp, #96	; 0x60
   418dc:	orr	r1, r1, #4
   418e0:	str	r1, [sp, #28]
   418e4:	ldr	r1, [sp, #68]	; 0x44
   418e8:	lsl	r7, r1, #3
   418ec:	str	r7, [sp, #64]	; 0x40
   418f0:	bic	r7, r1, #1
   418f4:	str	r7, [sp, #40]	; 0x28
   418f8:	b	41940 <GetDataSlab+0xd7e4>
   418fc:	ldr	r0, [sp, #28]
   41900:	ldr	r0, [r0, r2]
   41904:	add	r4, r4, r0, lsl #2
   41908:	add	r3, r0, r3
   4190c:	ldr	r0, [sp, #64]	; 0x40
   41910:	ldr	r1, [sp, #80]	; 0x50
   41914:	ldr	r7, [sp, #72]	; 0x48
   41918:	mov	r6, r4
   4191c:	mov	r2, #0
   41920:	add	r1, r1, r0
   41924:	ldr	r0, [sp, #76]	; 0x4c
   41928:	str	r1, [sp, #80]	; 0x50
   4192c:	ldr	r1, [sp, #68]	; 0x44
   41930:	add	r7, r7, r1
   41934:	cmp	r7, r0
   41938:	str	r7, [sp, #72]	; 0x48
   4193c:	bge	5b6a0 <GetDataSlab+0x27544>
   41940:	ldr	r0, [fp, #12]
   41944:	cmp	r1, #1
   41948:	sub	ip, fp, #176	; 0xb0
   4194c:	mov	r4, r6
   41950:	blt	41a60 <GetDataSlab+0xd904>
   41954:	ldr	r7, [r0]
   41958:	mov	r5, #0
   4195c:	beq	41a30 <GetDataSlab+0xd8d4>
   41960:	mov	r0, r7
   41964:	mov	r7, r8
   41968:	mov	r1, #0
   4196c:	add	sl, r4, r0, lsl #2
   41970:	str	r0, [sp, #60]	; 0x3c
   41974:	ldr	r0, [sp, #36]	; 0x24
   41978:	str	sl, [sp, #48]	; 0x30
   4197c:	cmp	r0, #0
   41980:	beq	419d4 <GetDataSlab+0xd878>
   41984:	ldr	ip, [sp, #80]	; 0x50
   41988:	ldr	r8, [sp, #24]
   4198c:	mov	lr, sl
   41990:	mov	r4, #16
   41994:	mov	r5, #32
   41998:	mov	r2, ip
   4199c:	vld1.32	{d0}, [lr], r4
   419a0:	add	r0, ip, #16
   419a4:	subs	r8, r8, #2
   419a8:	add	r1, r1, #4
   419ac:	vcvt.f64.s32	d17, s1
   419b0:	vcvt.f64.s32	d16, s0
   419b4:	vst1.64	{d16-d17}, [r2], r5
   419b8:	vldr	d0, [sl, #8]
   419bc:	mov	ip, r2
   419c0:	mov	sl, lr
   419c4:	vcvt.f64.s32	d17, s1
   419c8:	vcvt.f64.s32	d16, s0
   419cc:	vst1.64	{d16-d17}, [r0]
   419d0:	bne	4199c <GetDataSlab+0xd840>
   419d4:	ldr	r0, [sp, #44]	; 0x2c
   419d8:	ldr	lr, [sp, #52]	; 0x34
   419dc:	ldr	sl, [sp, #32]
   419e0:	sub	ip, fp, #176	; 0xb0
   419e4:	mov	r8, r7
   419e8:	cmp	r0, #0
   419ec:	ldr	r0, [sp, #88]	; 0x58
   419f0:	beq	41a18 <GetDataSlab+0xd8bc>
   419f4:	ldr	r2, [sp, #72]	; 0x48
   419f8:	add	r0, r0, r2, lsl #3
   419fc:	ldr	r2, [sp, #48]	; 0x30
   41a00:	add	r0, r0, r1, lsl #3
   41a04:	add	r2, r2, r1, lsl #2
   41a08:	vldr	d0, [r2]
   41a0c:	vcvt.f64.s32	d17, s1
   41a10:	vcvt.f64.s32	d16, s0
   41a14:	vst1.64	{d16-d17}, [r0]
   41a18:	ldr	r0, [sp, #68]	; 0x44
   41a1c:	ldr	r5, [sp, #40]	; 0x28
   41a20:	ldr	r7, [sp, #60]	; 0x3c
   41a24:	mov	r4, r6
   41a28:	cmp	r0, r5
   41a2c:	beq	41a60 <GetDataSlab+0xd904>
   41a30:	ldr	r0, [sp, #80]	; 0x50
   41a34:	add	r1, r0, r5, lsl #3
   41a38:	ldr	r0, [sp, #68]	; 0x44
   41a3c:	sub	r2, r0, r5
   41a40:	add	r0, r5, r7
   41a44:	add	r5, r4, r0, lsl #2
   41a48:	ldr	r0, [r5], #4
   41a4c:	subs	r2, r2, #1
   41a50:	vmov	s0, r0
   41a54:	vcvt.f64.s32	d16, s0
   41a58:	vstmia	r1!, {d16}
   41a5c:	bne	41a48 <GetDataSlab+0xd8ec>
   41a60:	ldr	r0, [fp, #24]
   41a64:	add	r4, r4, lr, lsl #2
   41a68:	add	r3, r3, lr
   41a6c:	cmp	r0, #2
   41a70:	blt	4190c <GetDataSlab+0xd7b0>
   41a74:	ldr	r1, [sp, #56]	; 0x38
   41a78:	mov	r2, #0
   41a7c:	b	41aa8 <GetDataSlab+0xd94c>
   41a80:	ldr	r7, [sp, #84]	; 0x54
   41a84:	ldr	r6, [ip, r2]
   41a88:	sub	r0, r5, r0
   41a8c:	ldr	r7, [r7, r2]
   41a90:	mla	r0, r7, r6, r0
   41a94:	add	r3, r0, r3
   41a98:	add	r4, r4, r0, lsl #2
   41a9c:	subs	r1, r1, #1
   41aa0:	add	r2, r2, #4
   41aa4:	beq	4190c <GetDataSlab+0xd7b0>
   41aa8:	ldr	r0, [r9, r2]
   41aac:	add	r0, r0, #1
   41ab0:	str	r0, [r9, r2]
   41ab4:	ldr	r5, [sl, r2]
   41ab8:	sdiv	r6, r0, r5
   41abc:	mls	r0, r6, r5, r0
   41ac0:	cmp	r0, #0
   41ac4:	bne	418fc <GetDataSlab+0xd7a0>
   41ac8:	ldr	r5, [r8, r2]
   41acc:	mov	r0, #0
   41ad0:	str	r0, [r9, r2]
   41ad4:	sdiv	r0, r3, r5
   41ad8:	mls	r0, r0, r5, r3
   41adc:	cmp	r0, #0
   41ae0:	bne	41a80 <GetDataSlab+0xd924>
   41ae4:	ldr	r0, [sp, #84]	; 0x54
   41ae8:	ldr	r0, [r0, r2]
   41aec:	cmp	r0, #0
   41af0:	beq	41a9c <GetDataSlab+0xd940>
   41af4:	ldr	r7, [ip, r2]
   41af8:	mla	r3, r7, r0, r3
   41afc:	mul	r0, r7, r0
   41b00:	b	41a98 <GetDataSlab+0xd93c>
   41b04:	ldr	r0, [sp, #80]	; 0x50
   41b08:	ldr	r5, [sp, #56]	; 0x38
   41b0c:	add	r4, r0, r3, lsl #2
   41b10:	cmp	r5, #1
   41b14:	bne	4e448 <GetDataSlab+0x1a2ec>
   41b18:	ldr	r0, [sp, #76]	; 0x4c
   41b1c:	ldr	r2, [fp, #20]
   41b20:	cmp	r0, #1
   41b24:	ldr	r0, [sp, #68]	; 0x44
   41b28:	blt	5b69c <GetDataSlab+0x27540>
   41b2c:	sub	r0, r0, #2
   41b30:	mov	r1, #1
   41b34:	ldr	lr, [sp, #52]	; 0x34
   41b38:	add	sl, r2, #4
   41b3c:	orr	r2, ip, #4
   41b40:	str	r8, [sp, #80]	; 0x50
   41b44:	mov	r6, r4
   41b48:	add	r1, r1, r0, lsr #1
   41b4c:	lsr	r0, r0, #1
   41b50:	mov	r8, r2
   41b54:	str	sl, [sp, #32]
   41b58:	str	r0, [sp, #36]	; 0x24
   41b5c:	mov	r0, #0
   41b60:	and	r7, r1, #1
   41b64:	str	r0, [sp, #72]	; 0x48
   41b68:	sub	r1, r1, r7
   41b6c:	str	r7, [sp, #44]	; 0x2c
   41b70:	str	r1, [sp, #24]
   41b74:	sub	r1, fp, #136	; 0x88
   41b78:	orr	r9, r1, #4
   41b7c:	ldr	r1, [fp, #12]
   41b80:	add	r1, r1, #4
   41b84:	str	r1, [sp, #84]	; 0x54
   41b88:	ldr	r1, [fp, #24]
   41b8c:	sub	r1, r1, #1
   41b90:	str	r1, [sp, #56]	; 0x38
   41b94:	sub	r1, fp, #96	; 0x60
   41b98:	orr	r1, r1, #4
   41b9c:	str	r1, [sp, #28]
   41ba0:	ldr	r1, [sp, #68]	; 0x44
   41ba4:	lsl	r7, r1, #3
   41ba8:	str	r7, [sp, #64]	; 0x40
   41bac:	bic	r7, r1, #1
   41bb0:	str	r7, [sp, #40]	; 0x28
   41bb4:	b	41bfc <GetDataSlab+0xdaa0>
   41bb8:	ldr	r0, [sp, #28]
   41bbc:	ldr	r0, [r0, r2]
   41bc0:	add	r4, r4, r0, lsl #2
   41bc4:	add	r3, r0, r3
   41bc8:	ldr	r0, [sp, #64]	; 0x40
   41bcc:	ldr	r1, [sp, #80]	; 0x50
   41bd0:	ldr	r7, [sp, #72]	; 0x48
   41bd4:	mov	r6, r4
   41bd8:	mov	r2, #0
   41bdc:	add	r1, r1, r0
   41be0:	ldr	r0, [sp, #76]	; 0x4c
   41be4:	str	r1, [sp, #80]	; 0x50
   41be8:	ldr	r1, [sp, #68]	; 0x44
   41bec:	add	r7, r7, r1
   41bf0:	cmp	r7, r0
   41bf4:	str	r7, [sp, #72]	; 0x48
   41bf8:	bge	5b6a0 <GetDataSlab+0x27544>
   41bfc:	ldr	r0, [fp, #12]
   41c00:	cmp	r1, #1
   41c04:	sub	ip, fp, #176	; 0xb0
   41c08:	mov	r4, r6
   41c0c:	blt	41d1c <GetDataSlab+0xdbc0>
   41c10:	ldr	r7, [r0]
   41c14:	mov	r5, #0
   41c18:	beq	41cec <GetDataSlab+0xdb90>
   41c1c:	mov	r0, r7
   41c20:	mov	r7, r8
   41c24:	mov	r1, #0
   41c28:	add	sl, r4, r0, lsl #2
   41c2c:	str	r0, [sp, #60]	; 0x3c
   41c30:	ldr	r0, [sp, #36]	; 0x24
   41c34:	str	sl, [sp, #48]	; 0x30
   41c38:	cmp	r0, #0
   41c3c:	beq	41c90 <GetDataSlab+0xdb34>
   41c40:	ldr	ip, [sp, #80]	; 0x50
   41c44:	ldr	r8, [sp, #24]
   41c48:	mov	lr, sl
   41c4c:	mov	r4, #16
   41c50:	mov	r5, #32
   41c54:	mov	r2, ip
   41c58:	vld1.32	{d0}, [lr], r4
   41c5c:	add	r0, ip, #16
   41c60:	subs	r8, r8, #2
   41c64:	add	r1, r1, #4
   41c68:	vcvt.f64.u32	d17, s1
   41c6c:	vcvt.f64.u32	d16, s0
   41c70:	vst1.64	{d16-d17}, [r2], r5
   41c74:	vldr	d0, [sl, #8]
   41c78:	mov	ip, r2
   41c7c:	mov	sl, lr
   41c80:	vcvt.f64.u32	d17, s1
   41c84:	vcvt.f64.u32	d16, s0
   41c88:	vst1.64	{d16-d17}, [r0]
   41c8c:	bne	41c58 <GetDataSlab+0xdafc>
   41c90:	ldr	r0, [sp, #44]	; 0x2c
   41c94:	ldr	lr, [sp, #52]	; 0x34
   41c98:	ldr	sl, [sp, #32]
   41c9c:	sub	ip, fp, #176	; 0xb0
   41ca0:	mov	r8, r7
   41ca4:	cmp	r0, #0
   41ca8:	ldr	r0, [sp, #88]	; 0x58
   41cac:	beq	41cd4 <GetDataSlab+0xdb78>
   41cb0:	ldr	r2, [sp, #72]	; 0x48
   41cb4:	add	r0, r0, r2, lsl #3
   41cb8:	ldr	r2, [sp, #48]	; 0x30
   41cbc:	add	r0, r0, r1, lsl #3
   41cc0:	add	r2, r2, r1, lsl #2
   41cc4:	vldr	d0, [r2]
   41cc8:	vcvt.f64.u32	d17, s1
   41ccc:	vcvt.f64.u32	d16, s0
   41cd0:	vst1.64	{d16-d17}, [r0]
   41cd4:	ldr	r0, [sp, #68]	; 0x44
   41cd8:	ldr	r5, [sp, #40]	; 0x28
   41cdc:	ldr	r7, [sp, #60]	; 0x3c
   41ce0:	mov	r4, r6
   41ce4:	cmp	r0, r5
   41ce8:	beq	41d1c <GetDataSlab+0xdbc0>
   41cec:	ldr	r0, [sp, #80]	; 0x50
   41cf0:	add	r1, r0, r5, lsl #3
   41cf4:	ldr	r0, [sp, #68]	; 0x44
   41cf8:	sub	r2, r0, r5
   41cfc:	add	r0, r5, r7
   41d00:	add	r5, r4, r0, lsl #2
   41d04:	ldr	r0, [r5], #4
   41d08:	subs	r2, r2, #1
   41d0c:	vmov	s0, r0
   41d10:	vcvt.f64.u32	d16, s0
   41d14:	vstmia	r1!, {d16}
   41d18:	bne	41d04 <GetDataSlab+0xdba8>
   41d1c:	ldr	r0, [fp, #24]
   41d20:	add	r4, r4, lr, lsl #2
   41d24:	add	r3, r3, lr
   41d28:	cmp	r0, #2
   41d2c:	blt	41bc8 <GetDataSlab+0xda6c>
   41d30:	ldr	r1, [sp, #56]	; 0x38
   41d34:	mov	r2, #0
   41d38:	b	41d64 <GetDataSlab+0xdc08>
   41d3c:	ldr	r7, [sp, #84]	; 0x54
   41d40:	ldr	r6, [ip, r2]
   41d44:	sub	r0, r5, r0
   41d48:	ldr	r7, [r7, r2]
   41d4c:	mla	r0, r7, r6, r0
   41d50:	add	r3, r0, r3
   41d54:	add	r4, r4, r0, lsl #2
   41d58:	subs	r1, r1, #1
   41d5c:	add	r2, r2, #4
   41d60:	beq	41bc8 <GetDataSlab+0xda6c>
   41d64:	ldr	r0, [r9, r2]
   41d68:	add	r0, r0, #1
   41d6c:	str	r0, [r9, r2]
   41d70:	ldr	r5, [sl, r2]
   41d74:	sdiv	r6, r0, r5
   41d78:	mls	r0, r6, r5, r0
   41d7c:	cmp	r0, #0
   41d80:	bne	41bb8 <GetDataSlab+0xda5c>
   41d84:	ldr	r5, [r8, r2]
   41d88:	mov	r0, #0
   41d8c:	str	r0, [r9, r2]
   41d90:	sdiv	r0, r3, r5
   41d94:	mls	r0, r0, r5, r3
   41d98:	cmp	r0, #0
   41d9c:	bne	41d3c <GetDataSlab+0xdbe0>
   41da0:	ldr	r0, [sp, #84]	; 0x54
   41da4:	ldr	r0, [r0, r2]
   41da8:	cmp	r0, #0
   41dac:	beq	41d58 <GetDataSlab+0xdbfc>
   41db0:	ldr	r7, [ip, r2]
   41db4:	mla	r3, r7, r0, r3
   41db8:	mul	r0, r7, r0
   41dbc:	b	41d54 <GetDataSlab+0xdbf8>
   41dc0:	ldr	r0, [sp, #80]	; 0x50
   41dc4:	add	r9, r0, r1, lsl #2
   41dc8:	ldr	r0, [sp, #40]	; 0x28
   41dcc:	cmp	r0, #1
   41dd0:	bne	4e664 <GetDataSlab+0x1a508>
   41dd4:	ldr	r0, [sp, #76]	; 0x4c
   41dd8:	ldr	lr, [sp, #64]	; 0x40
   41ddc:	ldr	sl, [sp, #60]	; 0x3c
   41de0:	cmp	r0, #1
   41de4:	blt	5b69c <GetDataSlab+0x27540>
   41de8:	sub	r0, lr, #2
   41dec:	mov	r2, #1
   41df0:	mov	r6, #32
   41df4:	add	r2, r2, r0, lsr #1
   41df8:	lsr	r0, r0, #1
   41dfc:	str	r0, [sp, #40]	; 0x28
   41e00:	ldr	r0, [sp, #88]	; 0x58
   41e04:	and	r3, r2, #1
   41e08:	sub	r2, r2, r3
   41e0c:	str	r3, [sp, #48]	; 0x30
   41e10:	ldr	r3, [fp, #20]
   41e14:	str	r2, [sp, #32]
   41e18:	sub	r2, fp, #136	; 0x88
   41e1c:	orr	r4, r2, #4
   41e20:	mov	r2, ip
   41e24:	str	r0, [sp, #84]	; 0x54
   41e28:	mov	r0, #0
   41e2c:	orr	r8, r2, #4
   41e30:	ldr	r2, [fp, #24]
   41e34:	str	r0, [sp, #80]	; 0x50
   41e38:	add	ip, r3, #4
   41e3c:	sub	r2, r2, #1
   41e40:	str	r2, [sp, #56]	; 0x38
   41e44:	sub	r2, fp, #96	; 0x60
   41e48:	orr	r2, r2, #4
   41e4c:	str	r2, [sp, #36]	; 0x24
   41e50:	lsl	r2, lr, #3
   41e54:	str	r2, [sp, #72]	; 0x48
   41e58:	bic	r2, lr, #1
   41e5c:	str	r2, [sp, #44]	; 0x2c
   41e60:	ldr	r2, [sp, #92]	; 0x5c
   41e64:	ldr	r3, [r2], #4
   41e68:	str	r2, [sp, #92]	; 0x5c
   41e6c:	str	r3, [sp, #68]	; 0x44
   41e70:	cmp	lr, #1
   41e74:	bge	41ec4 <GetDataSlab+0xdd68>
   41e78:	b	41fa8 <GetDataSlab+0xde4c>
   41e7c:	ldr	r2, [sp, #36]	; 0x24
   41e80:	mov	r6, #32
   41e84:	ldr	r0, [r2, r0]
   41e88:	add	r9, r9, r0, lsl #2
   41e8c:	add	r1, r0, r1
   41e90:	ldr	r0, [sp, #72]	; 0x48
   41e94:	ldr	r2, [sp, #84]	; 0x54
   41e98:	ldr	r3, [sp, #80]	; 0x50
   41e9c:	add	r2, r2, r0
   41ea0:	ldr	r0, [sp, #76]	; 0x4c
   41ea4:	add	r3, r3, lr
   41ea8:	str	r2, [sp, #84]	; 0x54
   41eac:	mov	r2, #0
   41eb0:	str	r3, [sp, #80]	; 0x50
   41eb4:	cmp	r3, r0
   41eb8:	bge	5b6a0 <GetDataSlab+0x27544>
   41ebc:	cmp	lr, #1
   41ec0:	blt	41fa8 <GetDataSlab+0xde4c>
   41ec4:	mov	r3, #0
   41ec8:	beq	41f74 <GetDataSlab+0xde18>
   41ecc:	ldr	r0, [sp, #68]	; 0x44
   41ed0:	add	lr, r9, r0, lsl #2
   41ed4:	ldr	r0, [sp, #40]	; 0x28
   41ed8:	str	lr, [sp, #52]	; 0x34
   41edc:	cmp	r0, #0
   41ee0:	mov	r0, #0
   41ee4:	beq	41f2c <GetDataSlab+0xddd0>
   41ee8:	ldr	r3, [sp, #84]	; 0x54
   41eec:	ldr	r2, [sp, #32]
   41ef0:	mov	sl, lr
   41ef4:	mov	r5, #16
   41ef8:	vld1.32	{d0}, [sl], r5
   41efc:	add	r7, r3, #16
   41f00:	subs	r2, r2, #2
   41f04:	add	r0, r0, #4
   41f08:	vcvt.f64.f32	d17, s1
   41f0c:	vcvt.f64.f32	d16, s0
   41f10:	vst1.64	{d16-d17}, [r3], r6
   41f14:	vldr	d0, [lr, #8]
   41f18:	mov	lr, sl
   41f1c:	vcvt.f64.f32	d17, s1
   41f20:	vcvt.f64.f32	d16, s0
   41f24:	vst1.64	{d16-d17}, [r7]
   41f28:	bne	41ef8 <GetDataSlab+0xdd9c>
   41f2c:	ldr	r2, [sp, #48]	; 0x30
   41f30:	ldr	sl, [sp, #60]	; 0x3c
   41f34:	cmp	r2, #0
   41f38:	beq	41f64 <GetDataSlab+0xde08>
   41f3c:	ldr	r2, [sp, #88]	; 0x58
   41f40:	ldr	r3, [sp, #80]	; 0x50
   41f44:	add	r2, r2, r3, lsl #3
   41f48:	ldr	r3, [sp, #52]	; 0x34
   41f4c:	add	r3, r3, r0, lsl #2
   41f50:	add	r0, r2, r0, lsl #3
   41f54:	vldr	d0, [r3]
   41f58:	vcvt.f64.f32	d17, s1
   41f5c:	vcvt.f64.f32	d16, s0
   41f60:	vst1.64	{d16-d17}, [r0]
   41f64:	ldr	lr, [sp, #64]	; 0x40
   41f68:	ldr	r3, [sp, #44]	; 0x2c
   41f6c:	cmp	lr, r3
   41f70:	beq	41fa8 <GetDataSlab+0xde4c>
   41f74:	ldr	r5, [sp, #68]	; 0x44
   41f78:	ldr	r0, [sp, #84]	; 0x54
   41f7c:	sub	r2, lr, r3
   41f80:	add	r7, r9, r5, lsl #2
   41f84:	add	r0, r0, r3, lsl #3
   41f88:	add	r3, r7, r3, lsl #2
   41f8c:	vldr	s0, [r3]
   41f90:	add	r3, r3, #4
   41f94:	subs	r2, r2, #1
   41f98:	vcvt.f64.f32	d16, s0
   41f9c:	vstr	d16, [r0]
   41fa0:	add	r0, r0, #8
   41fa4:	bne	41f8c <GetDataSlab+0xde30>
   41fa8:	ldr	r0, [fp, #24]
   41fac:	add	r9, r9, sl, lsl #2
   41fb0:	add	r1, r1, sl
   41fb4:	cmp	r0, #2
   41fb8:	blt	41e90 <GetDataSlab+0xdd34>
   41fbc:	ldr	r2, [sp, #56]	; 0x38
   41fc0:	mov	r0, #0
   41fc4:	b	41ff8 <GetDataSlab+0xde9c>
   41fc8:	ldr	r5, [sp, #92]	; 0x5c
   41fcc:	sub	r6, fp, #176	; 0xb0
   41fd0:	sub	r3, r3, r7
   41fd4:	ldr	r6, [r6, r0]
   41fd8:	ldr	r5, [r5, r0]
   41fdc:	mla	r3, r5, r6, r3
   41fe0:	add	r1, r3, r1
   41fe4:	add	r9, r9, r3, lsl #2
   41fe8:	mov	r6, #32
   41fec:	subs	r2, r2, #1
   41ff0:	add	r0, r0, #4
   41ff4:	beq	41e90 <GetDataSlab+0xdd34>
   41ff8:	ldr	r3, [r4, r0]
   41ffc:	add	r3, r3, #1
   42000:	str	r3, [r4, r0]
   42004:	ldr	r7, [ip, r0]
   42008:	sdiv	r6, r3, r7
   4200c:	mls	r3, r6, r7, r3
   42010:	cmp	r3, #0
   42014:	bne	41e7c <GetDataSlab+0xdd20>
   42018:	mov	r3, #0
   4201c:	str	r3, [r4, r0]
   42020:	ldr	r3, [r8, r0]
   42024:	sdiv	r7, r1, r3
   42028:	mls	r7, r7, r3, r1
   4202c:	cmp	r7, #0
   42030:	bne	41fc8 <GetDataSlab+0xde6c>
   42034:	ldr	r3, [sp, #92]	; 0x5c
   42038:	ldr	r3, [r3, r0]
   4203c:	cmp	r3, #0
   42040:	beq	41fe8 <GetDataSlab+0xde8c>
   42044:	sub	r7, fp, #176	; 0xb0
   42048:	ldr	r7, [r7, r0]
   4204c:	mla	r1, r7, r3, r1
   42050:	mul	r3, r7, r3
   42054:	b	41fe4 <GetDataSlab+0xde88>
   42058:	ldr	r0, [sp, #80]	; 0x50
   4205c:	add	r9, r0, r1, lsl #3
   42060:	ldr	r0, [sp, #44]	; 0x2c
   42064:	cmp	r0, #1
   42068:	bne	4e8ac <GetDataSlab+0x1a750>
   4206c:	ldr	r0, [sp, #76]	; 0x4c
   42070:	ldr	sl, [sp, #88]	; 0x58
   42074:	ldr	r3, [fp, #12]
   42078:	ldr	r8, [sp, #40]	; 0x28
   4207c:	sub	r7, fp, #96	; 0x60
   42080:	cmp	r0, #1
   42084:	blt	5b69c <GetDataSlab+0x27540>
   42088:	ldr	r6, [sp, #72]	; 0x48
   4208c:	mov	r2, #1
   42090:	mov	lr, #0
   42094:	sub	r0, r6, #2
   42098:	add	r2, r2, r0, lsr #1
   4209c:	lsr	r0, r0, #1
   420a0:	str	r0, [sp, #20]
   420a4:	and	r5, r2, #1
   420a8:	sub	r2, r2, r5
   420ac:	str	r5, [sp, #28]
   420b0:	mov	r5, #0
   420b4:	str	r2, [sp, #16]
   420b8:	sub	r2, fp, #136	; 0x88
   420bc:	orr	r4, r2, #4
   420c0:	ldr	r2, [fp, #20]
   420c4:	add	r2, r2, #4
   420c8:	str	r2, [sp, #84]	; 0x54
   420cc:	orr	r2, ip, #4
   420d0:	str	r2, [sp, #80]	; 0x50
   420d4:	ldr	r2, [fp, #24]
   420d8:	sub	r2, r2, #1
   420dc:	str	r2, [sp, #48]	; 0x30
   420e0:	orr	r2, r7, #4
   420e4:	str	r2, [sp, #32]
   420e8:	ldr	r2, [r3], #4
   420ec:	str	r3, [sp, #92]	; 0x5c
   420f0:	mov	r3, r6
   420f4:	add	r7, r6, r2
   420f8:	add	r0, r2, #1
   420fc:	str	r2, [sp, #56]	; 0x38
   42100:	str	r7, [sp, #44]	; 0x2c
   42104:	and	r7, r6, #1
   42108:	str	r0, [sp, #36]	; 0x24
   4210c:	str	r7, [sp, #52]	; 0x34
   42110:	bic	r7, r6, #1
   42114:	str	r7, [sp, #24]
   42118:	lsl	r7, r6, #3
   4211c:	str	r7, [sp, #64]	; 0x40
   42120:	b	4215c <GetDataSlab+0xe000>
   42124:	ldr	r2, [sp, #32]
   42128:	ldr	r0, [r2, r0]
   4212c:	add	r9, r9, r0, lsl #3
   42130:	add	r1, r0, r1
   42134:	ldr	r0, [sp, #64]	; 0x40
   42138:	ldr	r3, [sp, #72]	; 0x48
   4213c:	ldr	r5, [sp, #68]	; 0x44
   42140:	mov	r2, #0
   42144:	add	sl, sl, r0
   42148:	ldr	r0, [sp, #76]	; 0x4c
   4214c:	add	lr, lr, r3
   42150:	add	r5, r5, #1
   42154:	cmp	lr, r0
   42158:	bge	5b6a0 <GetDataSlab+0x27544>
   4215c:	ldr	r7, [sp, #88]	; 0x58
   42160:	ldr	ip, [sp, #92]	; 0x5c
   42164:	cmp	r3, #1
   42168:	str	r5, [sp, #68]	; 0x44
   4216c:	blt	422a8 <GetDataSlab+0xe14c>
   42170:	ldr	r0, [sp, #56]	; 0x38
   42174:	mov	r3, #0
   42178:	add	r2, r9, r0, lsl #3
   4217c:	add	r0, r7, lr, lsl #3
   42180:	str	r0, [sp, #60]	; 0x3c
   42184:	beq	42238 <GetDataSlab+0xe0dc>
   42188:	ldr	r0, [sp, #64]	; 0x40
   4218c:	mov	r6, r2
   42190:	ldr	r2, [sp, #44]	; 0x2c
   42194:	mla	r0, r0, r5, r7
   42198:	add	r2, r9, r2, lsl #3
   4219c:	cmp	r0, r2
   421a0:	mov	r2, r6
   421a4:	bcs	421bc <GetDataSlab+0xe060>
   421a8:	ldr	r0, [sp, #64]	; 0x40
   421ac:	mla	r0, r0, r5, r0
   421b0:	add	r0, r7, r0
   421b4:	cmp	r0, r2
   421b8:	bhi	42238 <GetDataSlab+0xe0dc>
   421bc:	ldr	r0, [sp, #20]
   421c0:	mov	r3, #0
   421c4:	cmp	r0, #0
   421c8:	beq	421fc <GetDataSlab+0xe0a0>
   421cc:	ldr	r0, [sp, #16]
   421d0:	mov	ip, sl
   421d4:	mov	r5, #32
   421d8:	add	r7, r2, #16
   421dc:	vld1.64	{d16-d17}, [r2], r5
   421e0:	add	r8, ip, #16
   421e4:	subs	r0, r0, #2
   421e8:	add	r3, r3, #4
   421ec:	vst1.64	{d16-d17}, [ip], r5
   421f0:	vld1.64	{d16-d17}, [r7]
   421f4:	vst1.64	{d16-d17}, [r8]
   421f8:	bne	421d8 <GetDataSlab+0xe07c>
   421fc:	ldr	r0, [sp, #28]
   42200:	mov	r2, r6
   42204:	cmp	r0, #0
   42208:	beq	42220 <GetDataSlab+0xe0c4>
   4220c:	add	r0, r2, r3, lsl #3
   42210:	vld1.64	{d16-d17}, [r0]
   42214:	ldr	r0, [sp, #60]	; 0x3c
   42218:	add	r0, r0, r3, lsl #3
   4221c:	vst1.64	{d16-d17}, [r0]
   42220:	ldr	r0, [sp, #72]	; 0x48
   42224:	ldr	r3, [sp, #24]
   42228:	ldr	ip, [sp, #92]	; 0x5c
   4222c:	ldr	r8, [sp, #40]	; 0x28
   42230:	cmp	r0, r3
   42234:	beq	422a8 <GetDataSlab+0xe14c>
   42238:	ldr	r0, [sp, #52]	; 0x34
   4223c:	mov	r7, r3
   42240:	cmp	r0, #0
   42244:	beq	42260 <GetDataSlab+0xe104>
   42248:	add	r0, r2, r3, lsl #3
   4224c:	orr	r7, r3, #1
   42250:	vldr	d16, [r0]
   42254:	ldr	r0, [sp, #60]	; 0x3c
   42258:	add	r0, r0, r3, lsl #3
   4225c:	vstr	d16, [r0]
   42260:	ldr	r2, [sp, #72]	; 0x48
   42264:	orr	r0, r3, #1
   42268:	cmp	r2, r0
   4226c:	beq	422a8 <GetDataSlab+0xe14c>
   42270:	ldr	r0, [sp, #36]	; 0x24
   42274:	ldr	r2, [sp, #72]	; 0x48
   42278:	lsl	r3, r7, #3
   4227c:	add	r0, r9, r0, lsl #3
   42280:	sub	r2, r2, r7
   42284:	add	r7, r0, r3
   42288:	add	r6, sl, r3
   4228c:	add	r3, r3, #16
   42290:	subs	r2, r2, #2
   42294:	vldr	d16, [r7, #-8]
   42298:	vstr	d16, [r6]
   4229c:	vldr	d16, [r7]
   422a0:	vstr	d16, [r6, #8]
   422a4:	bne	42284 <GetDataSlab+0xe128>
   422a8:	ldr	r0, [fp, #24]
   422ac:	add	r9, r9, r8, lsl #3
   422b0:	add	r1, r1, r8
   422b4:	cmp	r0, #2
   422b8:	blt	42134 <GetDataSlab+0xdfd8>
   422bc:	ldr	r2, [sp, #48]	; 0x30
   422c0:	mov	r0, #0
   422c4:	b	422f0 <GetDataSlab+0xe194>
   422c8:	sub	r5, fp, #176	; 0xb0
   422cc:	sub	r3, r3, r7
   422d0:	ldr	r6, [r5, r0]
   422d4:	ldr	r5, [ip, r0]
   422d8:	mla	r3, r5, r6, r3
   422dc:	add	r1, r3, r1
   422e0:	add	r9, r9, r3, lsl #3
   422e4:	subs	r2, r2, #1
   422e8:	add	r0, r0, #4
   422ec:	beq	42134 <GetDataSlab+0xdfd8>
   422f0:	ldr	r3, [r4, r0]
   422f4:	ldr	r5, [sp, #84]	; 0x54
   422f8:	add	r3, r3, #1
   422fc:	str	r3, [r4, r0]
   42300:	ldr	r7, [r5, r0]
   42304:	sdiv	r6, r3, r7
   42308:	mls	r3, r6, r7, r3
   4230c:	cmp	r3, #0
   42310:	bne	42124 <GetDataSlab+0xdfc8>
   42314:	mov	r3, #0
   42318:	str	r3, [r4, r0]
   4231c:	ldr	r3, [sp, #80]	; 0x50
   42320:	ldr	r3, [r3, r0]
   42324:	sdiv	r7, r1, r3
   42328:	mls	r7, r7, r3, r1
   4232c:	cmp	r7, #0
   42330:	bne	422c8 <GetDataSlab+0xe16c>
   42334:	ldr	r3, [ip, r0]
   42338:	cmp	r3, #0
   4233c:	beq	422e4 <GetDataSlab+0xe188>
   42340:	sub	r5, fp, #176	; 0xb0
   42344:	ldr	r7, [r5, r0]
   42348:	mla	r1, r7, r3, r1
   4234c:	mul	r3, r7, r3
   42350:	b	422e0 <GetDataSlab+0xe184>
   42354:	ldr	r0, [sp, #80]	; 0x50
   42358:	add	sl, r0, r7, lsl #3
   4235c:	ldr	r0, [sp, #20]
   42360:	cmp	r0, #1
   42364:	bne	4eae0 <GetDataSlab+0x1a984>
   42368:	ldr	r0, [sp, #60]	; 0x3c
   4236c:	ldr	r2, [sp, #88]	; 0x58
   42370:	ldr	r3, [fp, #12]
   42374:	sub	r6, fp, #96	; 0x60
   42378:	cmp	r0, #1
   4237c:	blt	4ed48 <GetDataSlab+0x1abec>
   42380:	ldr	r8, [sp, #52]	; 0x34
   42384:	mov	r1, #1
   42388:	ldr	r9, [sp, #16]
   4238c:	sub	r0, r8, #2
   42390:	add	r1, r1, r0, lsr #1
   42394:	lsr	r0, r0, #1
   42398:	str	r0, [sp, #8]
   4239c:	mov	r0, #0
   423a0:	and	r5, r1, #1
   423a4:	str	r0, [sp, #56]	; 0x38
   423a8:	sub	r1, r1, r5
   423ac:	str	r5, [sp, #20]
   423b0:	str	r1, [sp]
   423b4:	sub	r1, fp, #136	; 0x88
   423b8:	orr	r4, r1, #4
   423bc:	ldr	r1, [fp, #20]
   423c0:	str	r4, [sp, #32]
   423c4:	add	lr, r1, #4
   423c8:	orr	r1, ip, #4
   423cc:	str	r1, [sp, #68]	; 0x44
   423d0:	ldr	r1, [fp, #24]
   423d4:	str	lr, [sp, #28]
   423d8:	sub	r1, r1, #1
   423dc:	str	r1, [sp, #24]
   423e0:	orr	r1, r6, #4
   423e4:	mov	r6, r2
   423e8:	str	r1, [sp, #4]
   423ec:	lsl	r1, r8, #3
   423f0:	str	r1, [sp, #48]	; 0x30
   423f4:	bic	r1, r8, #1
   423f8:	str	r1, [sp, #12]
   423fc:	ldr	r1, [r3], #4
   42400:	str	r3, [sp, #64]	; 0x40
   42404:	str	r1, [sp, #44]	; 0x2c
   42408:	cmp	r8, #1
   4240c:	str	r6, [sp, #72]	; 0x48
   42410:	bge	42458 <GetDataSlab+0xe2fc>
   42414:	b	425bc <GetDataSlab+0xe460>
   42418:	ldr	r1, [sp, #4]
   4241c:	ldr	r6, [sp, #72]	; 0x48
   42420:	ldr	r0, [r1, r0]
   42424:	add	sl, sl, r0, lsl #3
   42428:	add	r7, r0, r7
   4242c:	ldr	r0, [sp, #48]	; 0x30
   42430:	ldr	r1, [sp, #56]	; 0x38
   42434:	add	r6, r6, r0
   42438:	ldr	r0, [sp, #60]	; 0x3c
   4243c:	add	r1, r1, r8
   42440:	str	r1, [sp, #56]	; 0x38
   42444:	cmp	r1, r0
   42448:	bge	4ed48 <GetDataSlab+0x1abec>
   4244c:	cmp	r8, #1
   42450:	str	r6, [sp, #72]	; 0x48
   42454:	blt	425bc <GetDataSlab+0xe460>
   42458:	ldr	r0, [sp, #44]	; 0x2c
   4245c:	add	r1, sl, r0, lsl #3
   42460:	mov	r0, #0
   42464:	str	r1, [sp, #76]	; 0x4c
   42468:	beq	4258c <GetDataSlab+0xe430>
   4246c:	ldr	r0, [sp, #8]
   42470:	str	sl, [sp, #40]	; 0x28
   42474:	mov	sl, #0
   42478:	str	r7, [sp, #36]	; 0x24
   4247c:	cmp	r0, #0
   42480:	beq	42518 <GetDataSlab+0xe3bc>
   42484:	ldr	r9, [sp]
   42488:	mov	r4, r6
   4248c:	mov	r6, r1
   42490:	mov	r5, r1
   42494:	mov	r8, r4
   42498:	mov	r7, #32
   4249c:	vld1.64	{d8-d9}, [r5], r7
   424a0:	vmov.32	r0, d9[0]
   424a4:	vmov.32	r1, d9[1]
   424a8:	bl	71540 <__aeabi_l2d>
   424ac:	vmov.32	r2, d8[0]
   424b0:	vmov.32	r3, d8[1]
   424b4:	vmov	d9, r0, r1
   424b8:	mov	r0, r2
   424bc:	mov	r1, r3
   424c0:	bl	71540 <__aeabi_l2d>
   424c4:	vmov	d8, r0, r1
   424c8:	add	r0, r6, #16
   424cc:	vst1.64	{d8-d9}, [r8], r7
   424d0:	vld1.64	{d8-d9}, [r0]
   424d4:	vmov.32	r0, d9[0]
   424d8:	vmov.32	r1, d9[1]
   424dc:	bl	71540 <__aeabi_l2d>
   424e0:	vmov.32	r2, d8[0]
   424e4:	vmov.32	r3, d8[1]
   424e8:	vmov	d9, r0, r1
   424ec:	mov	r0, r2
   424f0:	mov	r1, r3
   424f4:	bl	71540 <__aeabi_l2d>
   424f8:	vmov	d8, r0, r1
   424fc:	add	r0, r4, #16
   42500:	subs	r9, r9, #2
   42504:	add	sl, sl, #4
   42508:	mov	r4, r8
   4250c:	mov	r6, r5
   42510:	vst1.64	{d8-d9}, [r0]
   42514:	bne	42498 <GetDataSlab+0xe33c>
   42518:	ldr	r0, [sp, #20]
   4251c:	ldr	r9, [sp, #16]
   42520:	cmp	r0, #0
   42524:	ldr	r0, [sp, #88]	; 0x58
   42528:	beq	42570 <GetDataSlab+0xe414>
   4252c:	ldr	r1, [sp, #56]	; 0x38
   42530:	add	r4, r0, r1, lsl #3
   42534:	ldr	r0, [sp, #76]	; 0x4c
   42538:	add	r0, r0, sl, lsl #3
   4253c:	vld1.64	{d8-d9}, [r0]
   42540:	vmov.32	r0, d9[0]
   42544:	vmov.32	r1, d9[1]
   42548:	bl	71540 <__aeabi_l2d>
   4254c:	vmov.32	r2, d8[0]
   42550:	vmov.32	r3, d8[1]
   42554:	vmov	d9, r0, r1
   42558:	mov	r0, r2
   4255c:	mov	r1, r3
   42560:	bl	71540 <__aeabi_l2d>
   42564:	vmov	d8, r0, r1
   42568:	add	r0, r4, sl, lsl #3
   4256c:	vst1.64	{d8-d9}, [r0]
   42570:	ldr	r8, [sp, #52]	; 0x34
   42574:	ldr	r0, [sp, #12]
   42578:	ldr	sl, [sp, #40]	; 0x28
   4257c:	ldr	r6, [sp, #72]	; 0x48
   42580:	ldr	r7, [sp, #36]	; 0x24
   42584:	cmp	r8, r0
   42588:	beq	425bc <GetDataSlab+0xe460>
   4258c:	sub	r4, r8, r0
   42590:	lsl	r5, r0, #3
   42594:	ldr	r1, [sp, #76]	; 0x4c
   42598:	ldr	r0, [r1, r5]!
   4259c:	ldr	r1, [r1, #4]
   425a0:	bl	71540 <__aeabi_l2d>
   425a4:	mov	r2, r6
   425a8:	subs	r4, r4, #1
   425ac:	str	r0, [r2, r5]!
   425b0:	add	r5, r5, #8
   425b4:	str	r1, [r2, #4]
   425b8:	bne	42594 <GetDataSlab+0xe438>
   425bc:	ldr	r0, [fp, #24]
   425c0:	add	sl, sl, r9, lsl #3
   425c4:	add	r7, r7, r9
   425c8:	cmp	r0, #2
   425cc:	blt	4242c <GetDataSlab+0xe2d0>
   425d0:	sub	r4, fp, #176	; 0xb0
   425d4:	ldr	r1, [sp, #24]
   425d8:	ldr	lr, [sp, #28]
   425dc:	mov	r0, #0
   425e0:	mov	ip, r4
   425e4:	ldr	r4, [sp, #32]
   425e8:	b	42618 <GetDataSlab+0xe4bc>
   425ec:	ldr	r5, [sp, #64]	; 0x40
   425f0:	ldr	r6, [ip, r0]
   425f4:	sub	r2, r2, r3
   425f8:	ldr	r5, [r5, r0]
   425fc:	mla	r2, r5, r6, r2
   42600:	add	r7, r2, r7
   42604:	add	sl, sl, r2, lsl #3
   42608:	ldr	r6, [sp, #72]	; 0x48
   4260c:	subs	r1, r1, #1
   42610:	add	r0, r0, #4
   42614:	beq	4242c <GetDataSlab+0xe2d0>
   42618:	ldr	r2, [r4, r0]
   4261c:	add	r2, r2, #1
   42620:	str	r2, [r4, r0]
   42624:	ldr	r3, [lr, r0]
   42628:	sdiv	r6, r2, r3
   4262c:	mls	r2, r6, r3, r2
   42630:	cmp	r2, #0
   42634:	bne	42418 <GetDataSlab+0xe2bc>
   42638:	mov	r2, #0
   4263c:	str	r2, [r4, r0]
   42640:	ldr	r2, [sp, #68]	; 0x44
   42644:	ldr	r2, [r2, r0]
   42648:	sdiv	r3, r7, r2
   4264c:	mls	r3, r3, r2, r7
   42650:	cmp	r3, #0
   42654:	bne	425ec <GetDataSlab+0xe490>
   42658:	ldr	r2, [sp, #64]	; 0x40
   4265c:	ldr	r2, [r2, r0]
   42660:	cmp	r2, #0
   42664:	beq	42608 <GetDataSlab+0xe4ac>
   42668:	ldr	r3, [ip, r0]
   4266c:	mla	r7, r3, r2, r7
   42670:	mul	r2, r3, r2
   42674:	b	42604 <GetDataSlab+0xe4a8>
   42678:	ldr	r0, [sp, #80]	; 0x50
   4267c:	cmp	sl, #1
   42680:	add	ip, r0, r3
   42684:	bne	4f210 <GetDataSlab+0x1b0b4>
   42688:	ldr	r0, [sp, #76]	; 0x4c
   4268c:	ldr	r2, [fp, #12]
   42690:	sub	r7, fp, #96	; 0x60
   42694:	cmp	r0, #1
   42698:	blt	5b69c <GetDataSlab+0x27540>
   4269c:	ldr	lr, [sp, #60]	; 0x3c
   426a0:	mov	r1, #1
   426a4:	ldr	sl, [sp, #40]	; 0x28
   426a8:	mov	r6, #32
   426ac:	mov	r8, #0
   426b0:	sub	r0, lr, #4
   426b4:	add	r1, r1, r0, lsr #2
   426b8:	lsr	r0, r0, #2
   426bc:	str	r0, [sp, #24]
   426c0:	ldr	r0, [sp, #88]	; 0x58
   426c4:	and	r4, r1, #1
   426c8:	sub	r1, r1, r4
   426cc:	str	r4, [sp, #32]
   426d0:	str	r1, [sp, #16]
   426d4:	sub	r1, fp, #136	; 0x88
   426d8:	orr	r4, r1, #4
   426dc:	ldr	r1, [fp, #20]
   426e0:	str	r0, [sp, #68]	; 0x44
   426e4:	mov	r0, #0
   426e8:	str	r0, [sp, #72]	; 0x48
   426ec:	add	r9, r1, #4
   426f0:	sub	r1, fp, #176	; 0xb0
   426f4:	orr	r1, r1, #4
   426f8:	str	r9, [sp, #20]
   426fc:	str	r1, [sp, #84]	; 0x54
   42700:	add	r1, r2, #4
   42704:	str	r1, [sp, #80]	; 0x50
   42708:	ldr	r1, [fp, #24]
   4270c:	sub	r1, r1, #1
   42710:	str	r1, [sp, #44]	; 0x2c
   42714:	orr	r1, r7, #4
   42718:	str	r1, [sp, #36]	; 0x24
   4271c:	lsl	r1, lr, #2
   42720:	str	r1, [sp, #64]	; 0x40
   42724:	and	r1, lr, #1
   42728:	str	r1, [sp, #48]	; 0x30
   4272c:	bic	r1, lr, #3
   42730:	str	r1, [sp, #28]
   42734:	cmp	lr, #1
   42738:	bge	4278c <GetDataSlab+0xe630>
   4273c:	b	42930 <GetDataSlab+0xe7d4>
   42740:	ldr	r0, [sp, #36]	; 0x24
   42744:	mov	r6, #32
   42748:	ldr	r0, [r0, r1]
   4274c:	add	ip, ip, r0
   42750:	add	r3, r0, r3
   42754:	ldr	r0, [sp, #64]	; 0x40
   42758:	ldr	r1, [sp, #68]	; 0x44
   4275c:	add	r8, r8, lr
   42760:	mov	r2, #0
   42764:	add	r1, r1, r0
   42768:	ldr	r0, [sp, #72]	; 0x48
   4276c:	str	r1, [sp, #68]	; 0x44
   42770:	add	r0, r0, #1
   42774:	str	r0, [sp, #72]	; 0x48
   42778:	ldr	r0, [sp, #76]	; 0x4c
   4277c:	cmp	r8, r0
   42780:	bge	5b6a0 <GetDataSlab+0x27544>
   42784:	cmp	lr, #1
   42788:	blt	42930 <GetDataSlab+0xe7d4>
   4278c:	ldr	r0, [fp, #12]
   42790:	cmp	lr, #4
   42794:	ldr	r5, [r0]
   42798:	ldr	r0, [sp, #88]	; 0x58
   4279c:	add	r1, r0, r8, lsl #2
   427a0:	add	r2, ip, r5
   427a4:	str	r1, [sp, #52]	; 0x34
   427a8:	mov	r1, #0
   427ac:	bcc	428b0 <GetDataSlab+0xe754>
   427b0:	str	r5, [sp, #56]	; 0x38
   427b4:	ldr	r5, [sp, #64]	; 0x40
   427b8:	ldr	r7, [sp, #72]	; 0x48
   427bc:	mla	r0, r5, r7, r0
   427c0:	ldr	r5, [sp, #56]	; 0x38
   427c4:	add	r7, ip, lr
   427c8:	add	r7, r7, r5
   427cc:	cmp	r0, r7
   427d0:	bcs	427f4 <GetDataSlab+0xe698>
   427d4:	ldr	r0, [sp, #64]	; 0x40
   427d8:	ldr	r5, [sp, #72]	; 0x48
   427dc:	ldr	r7, [sp, #88]	; 0x58
   427e0:	mla	r0, r0, r5, r0
   427e4:	ldr	r5, [sp, #56]	; 0x38
   427e8:	add	r0, r7, r0
   427ec:	cmp	r2, r0
   427f0:	bcc	428b0 <GetDataSlab+0xe754>
   427f4:	ldr	r0, [sp, #24]
   427f8:	mov	r1, #0
   427fc:	cmp	r0, #0
   42800:	beq	42860 <GetDataSlab+0xe704>
   42804:	ldr	lr, [sp, #68]	; 0x44
   42808:	ldr	sl, [sp, #16]
   4280c:	sub	r5, fp, #468	; 0x1d4
   42810:	sub	r9, fp, #472	; 0x1d8
   42814:	mov	r0, r2
   42818:	subs	sl, sl, #2
   4281c:	ldr	r7, [r0, r1]!
   42820:	add	r1, r1, #8
   42824:	str	r7, [fp, #-472]	; 0xfffffe28
   42828:	add	r7, lr, #16
   4282c:	vld1.32	{d16[0]}, [r9 :32]
   42830:	vmovl.u8	q8, d16
   42834:	vmovl.u16	q8, d16
   42838:	vcvt.f32.u32	q8, q8
   4283c:	vst1.32	{d16-d17}, [lr], r6
   42840:	ldr	r0, [r0, #4]
   42844:	str	r0, [fp, #-468]	; 0xfffffe2c
   42848:	vld1.32	{d16[0]}, [r5 :32]
   4284c:	vmovl.u8	q8, d16
   42850:	vmovl.u16	q8, d16
   42854:	vcvt.f32.u32	q8, q8
   42858:	vst1.32	{d16-d17}, [r7]
   4285c:	bne	42814 <GetDataSlab+0xe6b8>
   42860:	ldr	r0, [sp, #32]
   42864:	ldr	sl, [sp, #40]	; 0x28
   42868:	ldr	r5, [sp, #56]	; 0x38
   4286c:	ldr	r9, [sp, #20]
   42870:	cmp	r0, #0
   42874:	beq	428a0 <GetDataSlab+0xe744>
   42878:	ldr	r0, [r2, r1]
   4287c:	str	r0, [fp, #-476]	; 0xfffffe24
   42880:	sub	r0, fp, #476	; 0x1dc
   42884:	vld1.32	{d16[0]}, [r0 :32]
   42888:	ldr	r0, [sp, #52]	; 0x34
   4288c:	add	r0, r0, r1, lsl #2
   42890:	vmovl.u8	q8, d16
   42894:	vmovl.u16	q8, d16
   42898:	vcvt.f32.u32	q8, q8
   4289c:	vst1.32	{d16-d17}, [r0]
   428a0:	ldr	lr, [sp, #60]	; 0x3c
   428a4:	ldr	r1, [sp, #28]
   428a8:	cmp	lr, r1
   428ac:	beq	42930 <GetDataSlab+0xe7d4>
   428b0:	ldr	r0, [sp, #48]	; 0x30
   428b4:	mov	r7, r1
   428b8:	cmp	r0, #0
   428bc:	beq	428dc <GetDataSlab+0xe780>
   428c0:	ldrb	r2, [r2, r1]
   428c4:	ldr	r0, [sp, #52]	; 0x34
   428c8:	orr	r7, r1, #1
   428cc:	vmov	s0, r2
   428d0:	add	r0, r0, r1, lsl #2
   428d4:	vcvt.f32.u32	s0, s0
   428d8:	vstr	s0, [r0]
   428dc:	orr	r0, r1, #1
   428e0:	cmp	lr, r0
   428e4:	beq	42930 <GetDataSlab+0xe7d4>
   428e8:	ldr	r0, [sp, #68]	; 0x44
   428ec:	sub	r2, lr, r7
   428f0:	add	r1, r0, r7, lsl #2
   428f4:	add	r0, r7, r5
   428f8:	add	r0, ip, r0
   428fc:	add	r7, r0, #1
   42900:	ldrb	r0, [r7, #-1]
   42904:	subs	r2, r2, #2
   42908:	vmov	s0, r0
   4290c:	vcvt.f32.u32	s0, s0
   42910:	vstr	s0, [r1]
   42914:	ldrb	r0, [r7]
   42918:	add	r7, r7, #2
   4291c:	vmov	s0, r0
   42920:	vcvt.f32.u32	s0, s0
   42924:	vstr	s0, [r1, #4]
   42928:	add	r1, r1, #8
   4292c:	bne	42900 <GetDataSlab+0xe7a4>
   42930:	ldr	r0, [fp, #24]
   42934:	add	ip, ip, sl
   42938:	add	r3, r3, sl
   4293c:	cmp	r0, #2
   42940:	blt	42754 <GetDataSlab+0xe5f8>
   42944:	ldr	r2, [sp, #44]	; 0x2c
   42948:	mov	r1, #0
   4294c:	b	42980 <GetDataSlab+0xe824>
   42950:	ldr	r5, [sp, #80]	; 0x50
   42954:	sub	r6, fp, #176	; 0xb0
   42958:	sub	r0, r7, r0
   4295c:	ldr	r6, [r6, r1]
   42960:	ldr	r5, [r5, r1]
   42964:	mla	r0, r5, r6, r0
   42968:	add	r3, r0, r3
   4296c:	add	ip, ip, r0
   42970:	mov	r6, #32
   42974:	subs	r2, r2, #1
   42978:	add	r1, r1, #4
   4297c:	beq	42754 <GetDataSlab+0xe5f8>
   42980:	ldr	r0, [r4, r1]
   42984:	add	r0, r0, #1
   42988:	str	r0, [r4, r1]
   4298c:	ldr	r7, [r9, r1]
   42990:	sdiv	r6, r0, r7
   42994:	mls	r0, r6, r7, r0
   42998:	cmp	r0, #0
   4299c:	bne	42740 <GetDataSlab+0xe5e4>
   429a0:	mov	r0, #0
   429a4:	str	r0, [r4, r1]
   429a8:	ldr	r0, [sp, #84]	; 0x54
   429ac:	ldr	r7, [r0, r1]
   429b0:	sdiv	r0, r3, r7
   429b4:	mls	r0, r0, r7, r3
   429b8:	cmp	r0, #0
   429bc:	bne	42950 <GetDataSlab+0xe7f4>
   429c0:	ldr	r0, [sp, #80]	; 0x50
   429c4:	ldr	r0, [r0, r1]
   429c8:	cmp	r0, #0
   429cc:	beq	42970 <GetDataSlab+0xe814>
   429d0:	sub	r7, fp, #176	; 0xb0
   429d4:	ldr	r7, [r7, r1]
   429d8:	mla	r3, r7, r0, r3
   429dc:	mla	ip, r7, r0, ip
   429e0:	mov	r6, #32
   429e4:	subs	r2, r2, #1
   429e8:	add	r1, r1, #4
   429ec:	bne	42980 <GetDataSlab+0xe824>
   429f0:	b	42754 <GetDataSlab+0xe5f8>
   429f4:	ldr	r0, [sp, #80]	; 0x50
   429f8:	ldr	r7, [sp, #68]	; 0x44
   429fc:	add	r9, r0, r1, lsl #1
   42a00:	cmp	r7, #1
   42a04:	bne	4f44c <GetDataSlab+0x1b2f0>
   42a08:	ldr	r0, [sp, #76]	; 0x4c
   42a0c:	ldr	r3, [fp, #12]
   42a10:	ldr	r7, [sp, #64]	; 0x40
   42a14:	cmp	r0, #1
   42a18:	blt	5b69c <GetDataSlab+0x27540>
   42a1c:	sub	r0, r7, #4
   42a20:	mov	r2, #1
   42a24:	ldr	r8, [sp, #48]	; 0x30
   42a28:	mov	lr, r7
   42a2c:	add	r2, r2, r0, lsr #2
   42a30:	lsr	r0, r0, #2
   42a34:	str	r0, [sp, #32]
   42a38:	mov	r0, #0
   42a3c:	and	r5, r2, #1
   42a40:	str	r0, [sp, #68]	; 0x44
   42a44:	sub	r2, r2, r5
   42a48:	str	r5, [sp, #40]	; 0x28
   42a4c:	str	r2, [sp, #24]
   42a50:	sub	r2, fp, #136	; 0x88
   42a54:	orr	r4, r2, #4
   42a58:	ldr	r2, [fp, #20]
   42a5c:	add	r2, r2, #4
   42a60:	str	r2, [sp, #84]	; 0x54
   42a64:	orr	r2, ip, #4
   42a68:	str	r2, [sp, #80]	; 0x50
   42a6c:	ldr	r2, [fp, #24]
   42a70:	sub	r2, r2, #1
   42a74:	str	r2, [sp, #52]	; 0x34
   42a78:	orr	r2, r6, #4
   42a7c:	str	r2, [sp, #28]
   42a80:	lsl	r2, r7, #2
   42a84:	str	r2, [sp, #60]	; 0x3c
   42a88:	bic	r2, r7, #3
   42a8c:	str	r2, [sp, #36]	; 0x24
   42a90:	ldr	r2, [r3], #4
   42a94:	str	r3, [sp, #92]	; 0x5c
   42a98:	ldr	r3, [sp, #88]	; 0x58
   42a9c:	str	r2, [sp, #56]	; 0x38
   42aa0:	cmp	lr, #1
   42aa4:	sub	ip, fp, #176	; 0xb0
   42aa8:	str	r3, [sp, #72]	; 0x48
   42aac:	bge	42afc <GetDataSlab+0xe9a0>
   42ab0:	b	42c08 <GetDataSlab+0xeaac>
   42ab4:	ldr	r0, [sp, #28]
   42ab8:	ldr	r0, [r0, r2]
   42abc:	add	r9, r9, r0, lsl #1
   42ac0:	add	r1, r0, r1
   42ac4:	ldr	r0, [sp, #60]	; 0x3c
   42ac8:	ldr	r3, [sp, #72]	; 0x48
   42acc:	ldr	r7, [sp, #68]	; 0x44
   42ad0:	mov	r2, #0
   42ad4:	add	r3, r3, r0
   42ad8:	ldr	r0, [sp, #76]	; 0x4c
   42adc:	add	r7, r7, lr
   42ae0:	str	r7, [sp, #68]	; 0x44
   42ae4:	cmp	r7, r0
   42ae8:	bge	5b6a0 <GetDataSlab+0x27544>
   42aec:	cmp	lr, #1
   42af0:	sub	ip, fp, #176	; 0xb0
   42af4:	str	r3, [sp, #72]	; 0x48
   42af8:	blt	42c08 <GetDataSlab+0xeaac>
   42afc:	mov	r0, #0
   42b00:	cmp	lr, #4
   42b04:	bcc	42bdc <GetDataSlab+0xea80>
   42b08:	ldr	r0, [sp, #56]	; 0x38
   42b0c:	mov	r2, #0
   42b10:	add	ip, r9, r0, lsl #1
   42b14:	ldr	r0, [sp, #32]
   42b18:	str	ip, [sp, #44]	; 0x2c
   42b1c:	cmp	r0, #0
   42b20:	beq	42b7c <GetDataSlab+0xea20>
   42b24:	ldr	sl, [sp, #24]
   42b28:	mov	lr, ip
   42b2c:	mov	r5, #16
   42b30:	sub	r6, fp, #512	; 0x200
   42b34:	vld1.16	{d16}, [lr], r5
   42b38:	mov	r7, #32
   42b3c:	add	r0, r3, #16
   42b40:	subs	sl, sl, #2
   42b44:	add	r2, r2, #8
   42b48:	vmovl.s16	q8, d16
   42b4c:	vcvt.f32.s32	q8, q8
   42b50:	vst1.32	{d16-d17}, [r3], r7
   42b54:	ldr	r8, [ip, #8]
   42b58:	ldr	r7, [ip, #12]
   42b5c:	mov	ip, lr
   42b60:	str	r7, [fp, #-508]	; 0xfffffe04
   42b64:	str	r8, [fp, #-512]	; 0xfffffe00
   42b68:	vld1.16	{d16}, [r6 :64]
   42b6c:	vmovl.s16	q8, d16
   42b70:	vcvt.f32.s32	q8, q8
   42b74:	vst1.32	{d16-d17}, [r0]
   42b78:	bne	42b34 <GetDataSlab+0xe9d8>
   42b7c:	ldr	r0, [sp, #40]	; 0x28
   42b80:	sub	ip, fp, #176	; 0xb0
   42b84:	cmp	r0, #0
   42b88:	ldr	r0, [sp, #88]	; 0x58
   42b8c:	beq	42bc4 <GetDataSlab+0xea68>
   42b90:	ldr	r3, [sp, #68]	; 0x44
   42b94:	ldr	r7, [sp, #44]	; 0x2c
   42b98:	add	r0, r0, r3, lsl #2
   42b9c:	ldr	r3, [r7, r2, lsl #1]!
   42ba0:	add	r0, r0, r2, lsl #2
   42ba4:	str	r3, [fp, #-520]	; 0xfffffdf8
   42ba8:	ldr	r3, [r7, #4]
   42bac:	str	r3, [fp, #-516]	; 0xfffffdfc
   42bb0:	sub	r3, fp, #520	; 0x208
   42bb4:	vld1.16	{d16}, [r3 :64]
   42bb8:	vmovl.s16	q8, d16
   42bbc:	vcvt.f32.s32	q8, q8
   42bc0:	vst1.32	{d16-d17}, [r0]
   42bc4:	ldr	lr, [sp, #64]	; 0x40
   42bc8:	ldr	r0, [sp, #36]	; 0x24
   42bcc:	ldr	r8, [sp, #48]	; 0x30
   42bd0:	ldr	r3, [sp, #72]	; 0x48
   42bd4:	cmp	lr, r0
   42bd8:	beq	42c08 <GetDataSlab+0xeaac>
   42bdc:	ldr	r5, [sp, #56]	; 0x38
   42be0:	add	r2, r3, r0, lsl #2
   42be4:	sub	r3, lr, r0
   42be8:	add	r7, r9, r5, lsl #1
   42bec:	add	r0, r7, r0, lsl #1
   42bf0:	ldrsh	r7, [r0], #2
   42bf4:	subs	r3, r3, #1
   42bf8:	vmov	s0, r7
   42bfc:	vcvt.f32.s32	s0, s0
   42c00:	vstmia	r2!, {s0}
   42c04:	bne	42bf0 <GetDataSlab+0xea94>
   42c08:	ldr	r0, [fp, #24]
   42c0c:	ldr	r5, [sp, #92]	; 0x5c
   42c10:	add	r9, r9, r8, lsl #1
   42c14:	add	r1, r1, r8
   42c18:	cmp	r0, #2
   42c1c:	blt	42ac4 <GetDataSlab+0xe968>
   42c20:	ldr	sl, [sp, #52]	; 0x34
   42c24:	mov	r2, #0
   42c28:	b	42c50 <GetDataSlab+0xeaf4>
   42c2c:	ldr	r7, [ip, r2]
   42c30:	ldr	r6, [r5, r2]
   42c34:	sub	r0, r0, r3
   42c38:	mla	r0, r6, r7, r0
   42c3c:	add	r1, r0, r1
   42c40:	add	r9, r9, r0, lsl #1
   42c44:	subs	sl, sl, #1
   42c48:	add	r2, r2, #4
   42c4c:	beq	42ac4 <GetDataSlab+0xe968>
   42c50:	ldr	r0, [r4, r2]
   42c54:	ldr	r3, [sp, #84]	; 0x54
   42c58:	add	r0, r0, #1
   42c5c:	str	r0, [r4, r2]
   42c60:	ldr	r3, [r3, r2]
   42c64:	sdiv	r7, r0, r3
   42c68:	mls	r0, r7, r3, r0
   42c6c:	cmp	r0, #0
   42c70:	bne	42ab4 <GetDataSlab+0xe958>
   42c74:	mov	r0, #0
   42c78:	str	r0, [r4, r2]
   42c7c:	ldr	r0, [sp, #80]	; 0x50
   42c80:	ldr	r0, [r0, r2]
   42c84:	sdiv	r3, r1, r0
   42c88:	mls	r3, r3, r0, r1
   42c8c:	cmp	r3, #0
   42c90:	bne	42c2c <GetDataSlab+0xead0>
   42c94:	ldr	r0, [r5, r2]
   42c98:	cmp	r0, #0
   42c9c:	beq	42c44 <GetDataSlab+0xeae8>
   42ca0:	ldr	r3, [ip, r2]
   42ca4:	mla	r1, r3, r0, r1
   42ca8:	mul	r0, r3, r0
   42cac:	b	42c40 <GetDataSlab+0xeae4>
   42cb0:	ldr	r0, [sp, #80]	; 0x50
   42cb4:	ldr	r7, [sp, #68]	; 0x44
   42cb8:	add	r9, r0, r1, lsl #1
   42cbc:	cmp	r7, #1
   42cc0:	bne	4f684 <GetDataSlab+0x1b528>
   42cc4:	ldr	r0, [sp, #76]	; 0x4c
   42cc8:	ldr	r3, [fp, #12]
   42ccc:	ldr	r7, [sp, #64]	; 0x40
   42cd0:	cmp	r0, #1
   42cd4:	blt	5b69c <GetDataSlab+0x27540>
   42cd8:	sub	r0, r7, #4
   42cdc:	mov	r2, #1
   42ce0:	ldr	r8, [sp, #48]	; 0x30
   42ce4:	mov	lr, r7
   42ce8:	add	r2, r2, r0, lsr #2
   42cec:	lsr	r0, r0, #2
   42cf0:	str	r0, [sp, #32]
   42cf4:	mov	r0, #0
   42cf8:	and	r5, r2, #1
   42cfc:	str	r0, [sp, #68]	; 0x44
   42d00:	sub	r2, r2, r5
   42d04:	str	r5, [sp, #40]	; 0x28
   42d08:	str	r2, [sp, #24]
   42d0c:	sub	r2, fp, #136	; 0x88
   42d10:	orr	r4, r2, #4
   42d14:	ldr	r2, [fp, #20]
   42d18:	add	r2, r2, #4
   42d1c:	str	r2, [sp, #84]	; 0x54
   42d20:	orr	r2, ip, #4
   42d24:	str	r2, [sp, #80]	; 0x50
   42d28:	ldr	r2, [fp, #24]
   42d2c:	sub	r2, r2, #1
   42d30:	str	r2, [sp, #52]	; 0x34
   42d34:	orr	r2, r6, #4
   42d38:	str	r2, [sp, #28]
   42d3c:	lsl	r2, r7, #2
   42d40:	str	r2, [sp, #60]	; 0x3c
   42d44:	bic	r2, r7, #3
   42d48:	str	r2, [sp, #36]	; 0x24
   42d4c:	ldr	r2, [r3], #4
   42d50:	str	r3, [sp, #92]	; 0x5c
   42d54:	ldr	r3, [sp, #88]	; 0x58
   42d58:	str	r2, [sp, #56]	; 0x38
   42d5c:	cmp	lr, #1
   42d60:	sub	ip, fp, #176	; 0xb0
   42d64:	str	r3, [sp, #72]	; 0x48
   42d68:	bge	42db8 <GetDataSlab+0xec5c>
   42d6c:	b	42ec4 <GetDataSlab+0xed68>
   42d70:	ldr	r0, [sp, #28]
   42d74:	ldr	r0, [r0, r2]
   42d78:	add	r9, r9, r0, lsl #1
   42d7c:	add	r1, r0, r1
   42d80:	ldr	r0, [sp, #60]	; 0x3c
   42d84:	ldr	r3, [sp, #72]	; 0x48
   42d88:	ldr	r7, [sp, #68]	; 0x44
   42d8c:	mov	r2, #0
   42d90:	add	r3, r3, r0
   42d94:	ldr	r0, [sp, #76]	; 0x4c
   42d98:	add	r7, r7, lr
   42d9c:	str	r7, [sp, #68]	; 0x44
   42da0:	cmp	r7, r0
   42da4:	bge	5b6a0 <GetDataSlab+0x27544>
   42da8:	cmp	lr, #1
   42dac:	sub	ip, fp, #176	; 0xb0
   42db0:	str	r3, [sp, #72]	; 0x48
   42db4:	blt	42ec4 <GetDataSlab+0xed68>
   42db8:	mov	r0, #0
   42dbc:	cmp	lr, #4
   42dc0:	bcc	42e98 <GetDataSlab+0xed3c>
   42dc4:	ldr	r0, [sp, #56]	; 0x38
   42dc8:	mov	r2, #0
   42dcc:	add	ip, r9, r0, lsl #1
   42dd0:	ldr	r0, [sp, #32]
   42dd4:	str	ip, [sp, #44]	; 0x2c
   42dd8:	cmp	r0, #0
   42ddc:	beq	42e38 <GetDataSlab+0xecdc>
   42de0:	ldr	sl, [sp, #24]
   42de4:	mov	lr, ip
   42de8:	mov	r5, #16
   42dec:	sub	r6, fp, #496	; 0x1f0
   42df0:	vld1.16	{d16}, [lr], r5
   42df4:	mov	r7, #32
   42df8:	add	r0, r3, #16
   42dfc:	subs	sl, sl, #2
   42e00:	add	r2, r2, #8
   42e04:	vmovl.u16	q8, d16
   42e08:	vcvt.f32.u32	q8, q8
   42e0c:	vst1.32	{d16-d17}, [r3], r7
   42e10:	ldr	r8, [ip, #8]
   42e14:	ldr	r7, [ip, #12]
   42e18:	mov	ip, lr
   42e1c:	str	r7, [fp, #-492]	; 0xfffffe14
   42e20:	str	r8, [fp, #-496]	; 0xfffffe10
   42e24:	vld1.16	{d16}, [r6 :64]
   42e28:	vmovl.u16	q8, d16
   42e2c:	vcvt.f32.u32	q8, q8
   42e30:	vst1.32	{d16-d17}, [r0]
   42e34:	bne	42df0 <GetDataSlab+0xec94>
   42e38:	ldr	r0, [sp, #40]	; 0x28
   42e3c:	sub	ip, fp, #176	; 0xb0
   42e40:	cmp	r0, #0
   42e44:	ldr	r0, [sp, #88]	; 0x58
   42e48:	beq	42e80 <GetDataSlab+0xed24>
   42e4c:	ldr	r3, [sp, #68]	; 0x44
   42e50:	ldr	r7, [sp, #44]	; 0x2c
   42e54:	add	r0, r0, r3, lsl #2
   42e58:	ldr	r3, [r7, r2, lsl #1]!
   42e5c:	add	r0, r0, r2, lsl #2
   42e60:	str	r3, [fp, #-504]	; 0xfffffe08
   42e64:	ldr	r3, [r7, #4]
   42e68:	str	r3, [fp, #-500]	; 0xfffffe0c
   42e6c:	sub	r3, fp, #504	; 0x1f8
   42e70:	vld1.16	{d16}, [r3 :64]
   42e74:	vmovl.u16	q8, d16
   42e78:	vcvt.f32.u32	q8, q8
   42e7c:	vst1.32	{d16-d17}, [r0]
   42e80:	ldr	lr, [sp, #64]	; 0x40
   42e84:	ldr	r0, [sp, #36]	; 0x24
   42e88:	ldr	r8, [sp, #48]	; 0x30
   42e8c:	ldr	r3, [sp, #72]	; 0x48
   42e90:	cmp	lr, r0
   42e94:	beq	42ec4 <GetDataSlab+0xed68>
   42e98:	ldr	r5, [sp, #56]	; 0x38
   42e9c:	add	r2, r3, r0, lsl #2
   42ea0:	sub	r3, lr, r0
   42ea4:	add	r7, r9, r5, lsl #1
   42ea8:	add	r0, r7, r0, lsl #1
   42eac:	ldrh	r7, [r0], #2
   42eb0:	subs	r3, r3, #1
   42eb4:	vmov	s0, r7
   42eb8:	vcvt.f32.u32	s0, s0
   42ebc:	vstmia	r2!, {s0}
   42ec0:	bne	42eac <GetDataSlab+0xed50>
   42ec4:	ldr	r0, [fp, #24]
   42ec8:	ldr	r5, [sp, #92]	; 0x5c
   42ecc:	add	r9, r9, r8, lsl #1
   42ed0:	add	r1, r1, r8
   42ed4:	cmp	r0, #2
   42ed8:	blt	42d80 <GetDataSlab+0xec24>
   42edc:	ldr	sl, [sp, #52]	; 0x34
   42ee0:	mov	r2, #0
   42ee4:	b	42f0c <GetDataSlab+0xedb0>
   42ee8:	ldr	r7, [ip, r2]
   42eec:	ldr	r6, [r5, r2]
   42ef0:	sub	r0, r0, r3
   42ef4:	mla	r0, r6, r7, r0
   42ef8:	add	r1, r0, r1
   42efc:	add	r9, r9, r0, lsl #1
   42f00:	subs	sl, sl, #1
   42f04:	add	r2, r2, #4
   42f08:	beq	42d80 <GetDataSlab+0xec24>
   42f0c:	ldr	r0, [r4, r2]
   42f10:	ldr	r3, [sp, #84]	; 0x54
   42f14:	add	r0, r0, #1
   42f18:	str	r0, [r4, r2]
   42f1c:	ldr	r3, [r3, r2]
   42f20:	sdiv	r7, r0, r3
   42f24:	mls	r0, r7, r3, r0
   42f28:	cmp	r0, #0
   42f2c:	bne	42d70 <GetDataSlab+0xec14>
   42f30:	mov	r0, #0
   42f34:	str	r0, [r4, r2]
   42f38:	ldr	r0, [sp, #80]	; 0x50
   42f3c:	ldr	r0, [r0, r2]
   42f40:	sdiv	r3, r1, r0
   42f44:	mls	r3, r3, r0, r1
   42f48:	cmp	r3, #0
   42f4c:	bne	42ee8 <GetDataSlab+0xed8c>
   42f50:	ldr	r0, [r5, r2]
   42f54:	cmp	r0, #0
   42f58:	beq	42f00 <GetDataSlab+0xeda4>
   42f5c:	ldr	r3, [ip, r2]
   42f60:	mla	r1, r3, r0, r1
   42f64:	mul	r0, r3, r0
   42f68:	b	42efc <GetDataSlab+0xeda0>
   42f6c:	ldr	r0, [sp, #80]	; 0x50
   42f70:	add	ip, r0, r3, lsl #2
   42f74:	ldr	r0, [sp, #52]	; 0x34
   42f78:	cmp	r0, #1
   42f7c:	bne	4f8bc <GetDataSlab+0x1b760>
   42f80:	ldr	r0, [sp, #76]	; 0x4c
   42f84:	ldr	lr, [sp, #88]	; 0x58
   42f88:	ldr	r2, [fp, #12]
   42f8c:	sub	r5, fp, #96	; 0x60
   42f90:	cmp	r0, #1
   42f94:	blt	5b69c <GetDataSlab+0x27540>
   42f98:	ldr	r6, [sp, #72]	; 0x48
   42f9c:	mov	r1, #1
   42fa0:	ldr	r8, [sp, #56]	; 0x38
   42fa4:	mov	r7, #32
   42fa8:	sub	r0, r6, #4
   42fac:	add	r1, r1, r0, lsr #2
   42fb0:	lsr	r0, r0, #2
   42fb4:	str	r0, [sp, #44]	; 0x2c
   42fb8:	mov	r0, #0
   42fbc:	and	r4, r1, #1
   42fc0:	str	r0, [sp, #80]	; 0x50
   42fc4:	sub	r1, r1, r4
   42fc8:	str	r4, [sp, #52]	; 0x34
   42fcc:	str	r1, [sp, #36]	; 0x24
   42fd0:	sub	r1, fp, #136	; 0x88
   42fd4:	orr	r4, r1, #4
   42fd8:	ldr	r1, [fp, #20]
   42fdc:	add	r9, r1, #4
   42fe0:	sub	r1, fp, #176	; 0xb0
   42fe4:	orr	r1, r1, #4
   42fe8:	str	r1, [sp, #64]	; 0x40
   42fec:	add	r1, r2, #4
   42ff0:	orr	r2, r5, #4
   42ff4:	str	r1, [sp, #84]	; 0x54
   42ff8:	ldr	r1, [fp, #24]
   42ffc:	str	r2, [sp, #40]	; 0x28
   43000:	lsl	r2, r6, #2
   43004:	str	r2, [sp, #68]	; 0x44
   43008:	bic	r2, r6, #3
   4300c:	str	r2, [sp, #48]	; 0x30
   43010:	sub	r1, r1, #1
   43014:	str	r1, [sp, #60]	; 0x3c
   43018:	mov	r1, r6
   4301c:	ldr	r0, [fp, #12]
   43020:	cmp	r1, #1
   43024:	bge	43070 <GetDataSlab+0xef14>
   43028:	b	43144 <GetDataSlab+0xefe8>
   4302c:	ldr	r0, [sp, #40]	; 0x28
   43030:	ldr	r0, [r0, r2]
   43034:	add	ip, ip, r0, lsl #2
   43038:	add	r3, r0, r3
   4303c:	ldr	r0, [sp, #68]	; 0x44
   43040:	ldr	r1, [sp, #72]	; 0x48
   43044:	ldr	r5, [sp, #80]	; 0x50
   43048:	mov	r2, #0
   4304c:	add	lr, lr, r0
   43050:	ldr	r0, [sp, #76]	; 0x4c
   43054:	add	r5, r5, r1
   43058:	str	r5, [sp, #80]	; 0x50
   4305c:	cmp	r5, r0
   43060:	bge	5b6a0 <GetDataSlab+0x27544>
   43064:	ldr	r0, [fp, #12]
   43068:	cmp	r1, #1
   4306c:	blt	43144 <GetDataSlab+0xefe8>
   43070:	ldr	r0, [r0]
   43074:	mov	r2, #0
   43078:	add	sl, ip, r0, lsl #2
   4307c:	ldr	r0, [sp, #72]	; 0x48
   43080:	cmp	r0, #4
   43084:	bcc	43118 <GetDataSlab+0xefbc>
   43088:	ldr	r0, [sp, #44]	; 0x2c
   4308c:	mov	r6, r9
   43090:	mov	r1, #0
   43094:	cmp	r0, #0
   43098:	beq	430d4 <GetDataSlab+0xef78>
   4309c:	ldr	r8, [sp, #36]	; 0x24
   430a0:	mov	r5, lr
   430a4:	mov	r2, sl
   430a8:	add	r0, r2, #16
   430ac:	vld1.32	{d16-d17}, [r2], r7
   430b0:	add	r9, r5, #16
   430b4:	subs	r8, r8, #2
   430b8:	add	r1, r1, #8
   430bc:	vcvt.f32.s32	q8, q8
   430c0:	vst1.32	{d16-d17}, [r5], r7
   430c4:	vld1.32	{d16-d17}, [r0]
   430c8:	vcvt.f32.s32	q8, q8
   430cc:	vst1.32	{d16-d17}, [r9]
   430d0:	bne	430a8 <GetDataSlab+0xef4c>
   430d4:	ldr	r0, [sp, #52]	; 0x34
   430d8:	cmp	r0, #0
   430dc:	ldr	r0, [sp, #88]	; 0x58
   430e0:	beq	43100 <GetDataSlab+0xefa4>
   430e4:	ldr	r2, [sp, #80]	; 0x50
   430e8:	add	r0, r0, r2, lsl #2
   430ec:	add	r2, sl, r1, lsl #2
   430f0:	vld1.32	{d16-d17}, [r2]
   430f4:	add	r0, r0, r1, lsl #2
   430f8:	vcvt.f32.s32	q8, q8
   430fc:	vst1.32	{d16-d17}, [r0]
   43100:	ldr	r0, [sp, #72]	; 0x48
   43104:	ldr	r2, [sp, #48]	; 0x30
   43108:	ldr	r8, [sp, #56]	; 0x38
   4310c:	mov	r9, r6
   43110:	cmp	r0, r2
   43114:	beq	43144 <GetDataSlab+0xefe8>
   43118:	ldr	r0, [sp, #72]	; 0x48
   4311c:	sub	r1, r0, r2
   43120:	lsl	r2, r2, #2
   43124:	add	r0, sl, r2
   43128:	subs	r1, r1, #1
   4312c:	vldr	s0, [r0]
   43130:	add	r0, lr, r2
   43134:	add	r2, r2, #4
   43138:	vcvt.f32.s32	s0, s0
   4313c:	vstr	s0, [r0]
   43140:	bne	43124 <GetDataSlab+0xefc8>
   43144:	ldr	r0, [fp, #24]
   43148:	add	ip, ip, r8, lsl #2
   4314c:	add	r3, r3, r8
   43150:	cmp	r0, #2
   43154:	blt	4303c <GetDataSlab+0xeee0>
   43158:	ldr	r1, [sp, #60]	; 0x3c
   4315c:	ldr	sl, [sp, #64]	; 0x40
   43160:	mov	r2, #0
   43164:	b	43198 <GetDataSlab+0xf03c>
   43168:	ldr	r7, [sp, #84]	; 0x54
   4316c:	sub	r6, fp, #176	; 0xb0
   43170:	sub	r0, r5, r0
   43174:	ldr	r6, [r6, r2]
   43178:	ldr	r7, [r7, r2]
   4317c:	mla	r0, r7, r6, r0
   43180:	mov	r7, #32
   43184:	add	r3, r0, r3
   43188:	add	ip, ip, r0, lsl #2
   4318c:	subs	r1, r1, #1
   43190:	add	r2, r2, #4
   43194:	beq	4303c <GetDataSlab+0xeee0>
   43198:	ldr	r0, [r4, r2]
   4319c:	add	r0, r0, #1
   431a0:	str	r0, [r4, r2]
   431a4:	ldr	r5, [r9, r2]
   431a8:	sdiv	r6, r0, r5
   431ac:	mls	r0, r6, r5, r0
   431b0:	cmp	r0, #0
   431b4:	bne	4302c <GetDataSlab+0xeed0>
   431b8:	ldr	r5, [sl, r2]
   431bc:	mov	r0, #0
   431c0:	str	r0, [r4, r2]
   431c4:	sdiv	r0, r3, r5
   431c8:	mls	r0, r0, r5, r3
   431cc:	cmp	r0, #0
   431d0:	bne	43168 <GetDataSlab+0xf00c>
   431d4:	ldr	r0, [sp, #84]	; 0x54
   431d8:	ldr	r0, [r0, r2]
   431dc:	cmp	r0, #0
   431e0:	beq	4318c <GetDataSlab+0xf030>
   431e4:	sub	r5, fp, #176	; 0xb0
   431e8:	ldr	r5, [r5, r2]
   431ec:	mla	r3, r5, r0, r3
   431f0:	mul	r0, r5, r0
   431f4:	b	43188 <GetDataSlab+0xf02c>
   431f8:	ldr	r0, [sp, #80]	; 0x50
   431fc:	add	ip, r0, r3, lsl #2
   43200:	ldr	r0, [sp, #52]	; 0x34
   43204:	cmp	r0, #1
   43208:	bne	4faf4 <GetDataSlab+0x1b998>
   4320c:	ldr	r0, [sp, #76]	; 0x4c
   43210:	ldr	lr, [sp, #88]	; 0x58
   43214:	ldr	r2, [fp, #12]
   43218:	sub	r5, fp, #96	; 0x60
   4321c:	cmp	r0, #1
   43220:	blt	5b69c <GetDataSlab+0x27540>
   43224:	ldr	r6, [sp, #72]	; 0x48
   43228:	mov	r1, #1
   4322c:	ldr	r8, [sp, #56]	; 0x38
   43230:	mov	r7, #32
   43234:	sub	r0, r6, #4
   43238:	add	r1, r1, r0, lsr #2
   4323c:	lsr	r0, r0, #2
   43240:	str	r0, [sp, #44]	; 0x2c
   43244:	mov	r0, #0
   43248:	and	r4, r1, #1
   4324c:	str	r0, [sp, #80]	; 0x50
   43250:	sub	r1, r1, r4
   43254:	str	r4, [sp, #52]	; 0x34
   43258:	str	r1, [sp, #36]	; 0x24
   4325c:	sub	r1, fp, #136	; 0x88
   43260:	orr	r4, r1, #4
   43264:	ldr	r1, [fp, #20]
   43268:	add	r9, r1, #4
   4326c:	sub	r1, fp, #176	; 0xb0
   43270:	orr	r1, r1, #4
   43274:	str	r1, [sp, #64]	; 0x40
   43278:	add	r1, r2, #4
   4327c:	orr	r2, r5, #4
   43280:	str	r1, [sp, #84]	; 0x54
   43284:	ldr	r1, [fp, #24]
   43288:	str	r2, [sp, #40]	; 0x28
   4328c:	lsl	r2, r6, #2
   43290:	str	r2, [sp, #68]	; 0x44
   43294:	bic	r2, r6, #3
   43298:	str	r2, [sp, #48]	; 0x30
   4329c:	sub	r1, r1, #1
   432a0:	str	r1, [sp, #60]	; 0x3c
   432a4:	mov	r1, r6
   432a8:	ldr	r0, [fp, #12]
   432ac:	cmp	r1, #1
   432b0:	bge	432fc <GetDataSlab+0xf1a0>
   432b4:	b	433d0 <GetDataSlab+0xf274>
   432b8:	ldr	r0, [sp, #40]	; 0x28
   432bc:	ldr	r0, [r0, r2]
   432c0:	add	ip, ip, r0, lsl #2
   432c4:	add	r3, r0, r3
   432c8:	ldr	r0, [sp, #68]	; 0x44
   432cc:	ldr	r1, [sp, #72]	; 0x48
   432d0:	ldr	r5, [sp, #80]	; 0x50
   432d4:	mov	r2, #0
   432d8:	add	lr, lr, r0
   432dc:	ldr	r0, [sp, #76]	; 0x4c
   432e0:	add	r5, r5, r1
   432e4:	str	r5, [sp, #80]	; 0x50
   432e8:	cmp	r5, r0
   432ec:	bge	5b6a0 <GetDataSlab+0x27544>
   432f0:	ldr	r0, [fp, #12]
   432f4:	cmp	r1, #1
   432f8:	blt	433d0 <GetDataSlab+0xf274>
   432fc:	ldr	r0, [r0]
   43300:	mov	r2, #0
   43304:	add	sl, ip, r0, lsl #2
   43308:	ldr	r0, [sp, #72]	; 0x48
   4330c:	cmp	r0, #4
   43310:	bcc	433a4 <GetDataSlab+0xf248>
   43314:	ldr	r0, [sp, #44]	; 0x2c
   43318:	mov	r6, r9
   4331c:	mov	r1, #0
   43320:	cmp	r0, #0
   43324:	beq	43360 <GetDataSlab+0xf204>
   43328:	ldr	r8, [sp, #36]	; 0x24
   4332c:	mov	r5, lr
   43330:	mov	r2, sl
   43334:	add	r0, r2, #16
   43338:	vld1.32	{d16-d17}, [r2], r7
   4333c:	add	r9, r5, #16
   43340:	subs	r8, r8, #2
   43344:	add	r1, r1, #8
   43348:	vcvt.f32.u32	q8, q8
   4334c:	vst1.32	{d16-d17}, [r5], r7
   43350:	vld1.32	{d16-d17}, [r0]
   43354:	vcvt.f32.u32	q8, q8
   43358:	vst1.32	{d16-d17}, [r9]
   4335c:	bne	43334 <GetDataSlab+0xf1d8>
   43360:	ldr	r0, [sp, #52]	; 0x34
   43364:	cmp	r0, #0
   43368:	ldr	r0, [sp, #88]	; 0x58
   4336c:	beq	4338c <GetDataSlab+0xf230>
   43370:	ldr	r2, [sp, #80]	; 0x50
   43374:	add	r0, r0, r2, lsl #2
   43378:	add	r2, sl, r1, lsl #2
   4337c:	vld1.32	{d16-d17}, [r2]
   43380:	add	r0, r0, r1, lsl #2
   43384:	vcvt.f32.u32	q8, q8
   43388:	vst1.32	{d16-d17}, [r0]
   4338c:	ldr	r0, [sp, #72]	; 0x48
   43390:	ldr	r2, [sp, #48]	; 0x30
   43394:	ldr	r8, [sp, #56]	; 0x38
   43398:	mov	r9, r6
   4339c:	cmp	r0, r2
   433a0:	beq	433d0 <GetDataSlab+0xf274>
   433a4:	ldr	r0, [sp, #72]	; 0x48
   433a8:	sub	r1, r0, r2
   433ac:	lsl	r2, r2, #2
   433b0:	add	r0, sl, r2
   433b4:	subs	r1, r1, #1
   433b8:	vldr	s0, [r0]
   433bc:	add	r0, lr, r2
   433c0:	add	r2, r2, #4
   433c4:	vcvt.f32.u32	s0, s0
   433c8:	vstr	s0, [r0]
   433cc:	bne	433b0 <GetDataSlab+0xf254>
   433d0:	ldr	r0, [fp, #24]
   433d4:	add	ip, ip, r8, lsl #2
   433d8:	add	r3, r3, r8
   433dc:	cmp	r0, #2
   433e0:	blt	432c8 <GetDataSlab+0xf16c>
   433e4:	ldr	r1, [sp, #60]	; 0x3c
   433e8:	ldr	sl, [sp, #64]	; 0x40
   433ec:	mov	r2, #0
   433f0:	b	43424 <GetDataSlab+0xf2c8>
   433f4:	ldr	r7, [sp, #84]	; 0x54
   433f8:	sub	r6, fp, #176	; 0xb0
   433fc:	sub	r0, r5, r0
   43400:	ldr	r6, [r6, r2]
   43404:	ldr	r7, [r7, r2]
   43408:	mla	r0, r7, r6, r0
   4340c:	mov	r7, #32
   43410:	add	r3, r0, r3
   43414:	add	ip, ip, r0, lsl #2
   43418:	subs	r1, r1, #1
   4341c:	add	r2, r2, #4
   43420:	beq	432c8 <GetDataSlab+0xf16c>
   43424:	ldr	r0, [r4, r2]
   43428:	add	r0, r0, #1
   4342c:	str	r0, [r4, r2]
   43430:	ldr	r5, [r9, r2]
   43434:	sdiv	r6, r0, r5
   43438:	mls	r0, r6, r5, r0
   4343c:	cmp	r0, #0
   43440:	bne	432b8 <GetDataSlab+0xf15c>
   43444:	ldr	r5, [sl, r2]
   43448:	mov	r0, #0
   4344c:	str	r0, [r4, r2]
   43450:	sdiv	r0, r3, r5
   43454:	mls	r0, r0, r5, r3
   43458:	cmp	r0, #0
   4345c:	bne	433f4 <GetDataSlab+0xf298>
   43460:	ldr	r0, [sp, #84]	; 0x54
   43464:	ldr	r0, [r0, r2]
   43468:	cmp	r0, #0
   4346c:	beq	43418 <GetDataSlab+0xf2bc>
   43470:	sub	r5, fp, #176	; 0xb0
   43474:	ldr	r5, [r5, r2]
   43478:	mla	r3, r5, r0, r3
   4347c:	mul	r0, r5, r0
   43480:	b	43414 <GetDataSlab+0xf2b8>
   43484:	ldr	r0, [sp, #80]	; 0x50
   43488:	add	r8, r0, r1, lsl #2
   4348c:	ldr	r0, [sp, #52]	; 0x34
   43490:	cmp	r0, #1
   43494:	bne	4fd2c <GetDataSlab+0x1bbd0>
   43498:	ldr	r0, [sp, #76]	; 0x4c
   4349c:	ldr	r3, [fp, #20]
   434a0:	ldr	r7, [sp, #64]	; 0x40
   434a4:	cmp	r0, #1
   434a8:	blt	5b69c <GetDataSlab+0x27540>
   434ac:	sub	r0, r7, #4
   434b0:	mov	r2, #1
   434b4:	ldr	sl, [sp, #88]	; 0x58
   434b8:	mov	r9, #0
   434bc:	mov	lr, r7
   434c0:	add	r2, r2, r0, lsr #2
   434c4:	lsr	r0, r0, #2
   434c8:	str	r0, [sp, #20]
   434cc:	and	r6, r2, #1
   434d0:	sub	r2, r2, r6
   434d4:	str	r6, [sp, #28]
   434d8:	str	r2, [sp, #16]
   434dc:	sub	r2, fp, #136	; 0x88
   434e0:	orr	r4, r2, #4
   434e4:	add	r2, r3, #4
   434e8:	str	r2, [sp, #84]	; 0x54
   434ec:	orr	r2, ip, #4
   434f0:	str	r2, [sp, #80]	; 0x50
   434f4:	ldr	r2, [fp, #24]
   434f8:	sub	r2, r2, #1
   434fc:	str	r2, [sp, #44]	; 0x2c
   43500:	sub	r2, fp, #96	; 0x60
   43504:	orr	r2, r2, #4
   43508:	str	r2, [sp, #32]
   4350c:	ldr	r2, [sp, #92]	; 0x5c
   43510:	ldr	r3, [r2], #4
   43514:	str	r2, [sp, #92]	; 0x5c
   43518:	add	r2, r7, r3
   4351c:	add	r0, r3, #1
   43520:	str	r3, [sp, #52]	; 0x34
   43524:	str	r2, [sp, #40]	; 0x28
   43528:	and	r2, r7, #1
   4352c:	str	r0, [sp, #36]	; 0x24
   43530:	mov	r0, #0
   43534:	str	r2, [sp, #48]	; 0x30
   43538:	bic	r2, r7, #3
   4353c:	str	r0, [sp, #72]	; 0x48
   43540:	str	r2, [sp, #24]
   43544:	lsl	r2, r7, #2
   43548:	str	r2, [sp, #68]	; 0x44
   4354c:	cmp	lr, #1
   43550:	sub	ip, fp, #176	; 0xb0
   43554:	bge	435a0 <GetDataSlab+0xf444>
   43558:	b	436d0 <GetDataSlab+0xf574>
   4355c:	ldr	r2, [sp, #32]
   43560:	ldr	r0, [r2, r0]
   43564:	add	r8, r8, r0, lsl #2
   43568:	add	r1, r0, r1
   4356c:	ldr	r0, [sp, #68]	; 0x44
   43570:	add	r9, r9, lr
   43574:	mov	r2, #0
   43578:	add	sl, sl, r0
   4357c:	ldr	r0, [sp, #72]	; 0x48
   43580:	add	r0, r0, #1
   43584:	str	r0, [sp, #72]	; 0x48
   43588:	ldr	r0, [sp, #76]	; 0x4c
   4358c:	cmp	r9, r0
   43590:	bge	5b6a0 <GetDataSlab+0x27544>
   43594:	cmp	lr, #1
   43598:	sub	ip, fp, #176	; 0xb0
   4359c:	blt	436d0 <GetDataSlab+0xf574>
   435a0:	ldr	r0, [sp, #52]	; 0x34
   435a4:	mov	r3, #0
   435a8:	cmp	lr, #4
   435ac:	add	r6, r8, r0, lsl #2
   435b0:	ldr	r0, [sp, #88]	; 0x58
   435b4:	add	r5, r0, r9, lsl #2
   435b8:	bcc	43674 <GetDataSlab+0xf518>
   435bc:	str	r5, [sp, #56]	; 0x38
   435c0:	ldr	r2, [sp, #68]	; 0x44
   435c4:	ldr	r5, [sp, #72]	; 0x48
   435c8:	mla	r0, r2, r5, r0
   435cc:	ldr	r2, [sp, #40]	; 0x28
   435d0:	ldr	r5, [sp, #56]	; 0x38
   435d4:	add	r2, r8, r2, lsl #2
   435d8:	cmp	r0, r2
   435dc:	bcs	435fc <GetDataSlab+0xf4a0>
   435e0:	ldr	r0, [sp, #68]	; 0x44
   435e4:	ldr	r2, [sp, #72]	; 0x48
   435e8:	mla	r0, r0, r2, r0
   435ec:	ldr	r2, [sp, #88]	; 0x58
   435f0:	add	r0, r2, r0
   435f4:	cmp	r0, r6
   435f8:	bhi	43674 <GetDataSlab+0xf518>
   435fc:	ldr	r0, [sp, #20]
   43600:	mov	r3, #0
   43604:	cmp	r0, #0
   43608:	beq	43640 <GetDataSlab+0xf4e4>
   4360c:	ldr	r2, [sp, #16]
   43610:	mov	lr, sl
   43614:	mov	r0, r6
   43618:	mov	r5, #32
   4361c:	add	r7, r0, #16
   43620:	vld1.32	{d16-d17}, [r0], r5
   43624:	add	ip, lr, #16
   43628:	subs	r2, r2, #2
   4362c:	add	r3, r3, #8
   43630:	vst1.32	{d16-d17}, [lr], r5
   43634:	vld1.32	{d16-d17}, [r7]
   43638:	vst1.32	{d16-d17}, [ip]
   4363c:	bne	4361c <GetDataSlab+0xf4c0>
   43640:	ldr	r0, [sp, #28]
   43644:	ldr	r5, [sp, #56]	; 0x38
   43648:	cmp	r0, #0
   4364c:	beq	43660 <GetDataSlab+0xf504>
   43650:	add	r0, r6, r3, lsl #2
   43654:	vld1.32	{d16-d17}, [r0]
   43658:	add	r0, r5, r3, lsl #2
   4365c:	vst1.32	{d16-d17}, [r0]
   43660:	ldr	lr, [sp, #64]	; 0x40
   43664:	ldr	r3, [sp, #24]
   43668:	sub	ip, fp, #176	; 0xb0
   4366c:	cmp	lr, r3
   43670:	beq	436d0 <GetDataSlab+0xf574>
   43674:	ldr	r0, [sp, #48]	; 0x30
   43678:	mov	r7, r3
   4367c:	cmp	r0, #0
   43680:	beq	43690 <GetDataSlab+0xf534>
   43684:	ldr	r0, [r6, r3, lsl #2]
   43688:	orr	r7, r3, #1
   4368c:	str	r0, [r5, r3, lsl #2]
   43690:	orr	r0, r3, #1
   43694:	cmp	lr, r0
   43698:	beq	436d0 <GetDataSlab+0xf574>
   4369c:	ldr	r0, [sp, #36]	; 0x24
   436a0:	sub	r2, lr, r7
   436a4:	lsl	r3, r7, #2
   436a8:	add	r0, r8, r0, lsl #2
   436ac:	add	r7, r0, r3
   436b0:	mov	r6, sl
   436b4:	subs	r2, r2, #2
   436b8:	ldr	r7, [r7, #-4]
   436bc:	str	r7, [r6, r3]!
   436c0:	ldr	r7, [r0, r3]
   436c4:	add	r3, r3, #8
   436c8:	str	r7, [r6, #4]
   436cc:	bne	436ac <GetDataSlab+0xf550>
   436d0:	ldr	r0, [sp, #60]	; 0x3c
   436d4:	add	r8, r8, r0, lsl #2
   436d8:	add	r1, r1, r0
   436dc:	ldr	r0, [fp, #24]
   436e0:	cmp	r0, #2
   436e4:	blt	4356c <GetDataSlab+0xf410>
   436e8:	ldr	r2, [sp, #44]	; 0x2c
   436ec:	mov	r0, #0
   436f0:	b	4371c <GetDataSlab+0xf5c0>
   436f4:	ldr	r5, [sp, #92]	; 0x5c
   436f8:	ldr	r6, [ip, r0]
   436fc:	sub	r3, r3, r7
   43700:	ldr	r5, [r5, r0]
   43704:	mla	r3, r5, r6, r3
   43708:	add	r1, r3, r1
   4370c:	add	r8, r8, r3, lsl #2
   43710:	subs	r2, r2, #1
   43714:	add	r0, r0, #4
   43718:	beq	4356c <GetDataSlab+0xf410>
   4371c:	ldr	r3, [r4, r0]
   43720:	ldr	r5, [sp, #84]	; 0x54
   43724:	add	r3, r3, #1
   43728:	str	r3, [r4, r0]
   4372c:	ldr	r7, [r5, r0]
   43730:	sdiv	r6, r3, r7
   43734:	mls	r3, r6, r7, r3
   43738:	cmp	r3, #0
   4373c:	bne	4355c <GetDataSlab+0xf400>
   43740:	mov	r3, #0
   43744:	str	r3, [r4, r0]
   43748:	ldr	r3, [sp, #80]	; 0x50
   4374c:	ldr	r3, [r3, r0]
   43750:	sdiv	r7, r1, r3
   43754:	mls	r7, r7, r3, r1
   43758:	cmp	r7, #0
   4375c:	bne	436f4 <GetDataSlab+0xf598>
   43760:	ldr	r3, [sp, #92]	; 0x5c
   43764:	ldr	r3, [r3, r0]
   43768:	cmp	r3, #0
   4376c:	beq	43710 <GetDataSlab+0xf5b4>
   43770:	ldr	r7, [ip, r0]
   43774:	mla	r1, r7, r3, r1
   43778:	mul	r3, r7, r3
   4377c:	b	4370c <GetDataSlab+0xf5b0>
   43780:	ldr	r0, [sp, #80]	; 0x50
   43784:	add	r9, r0, r1, lsl #3
   43788:	ldr	r0, [sp, #44]	; 0x2c
   4378c:	cmp	r0, #1
   43790:	bne	4ff44 <GetDataSlab+0x1bde8>
   43794:	ldr	r0, [sp, #76]	; 0x4c
   43798:	ldr	r3, [sp, #72]	; 0x48
   4379c:	ldr	sl, [sp, #60]	; 0x3c
   437a0:	cmp	r0, #1
   437a4:	blt	5b69c <GetDataSlab+0x27540>
   437a8:	sub	r0, r3, #2
   437ac:	mov	r2, #1
   437b0:	orr	r8, ip, #4
   437b4:	mov	r6, #16
   437b8:	add	r2, r2, r0, lsr #1
   437bc:	lsr	r0, r0, #1
   437c0:	str	r0, [sp, #40]	; 0x28
   437c4:	ldr	r0, [sp, #88]	; 0x58
   437c8:	and	r7, r2, #1
   437cc:	sub	r2, r2, r7
   437d0:	str	r7, [sp, #48]	; 0x30
   437d4:	str	r2, [sp, #32]
   437d8:	sub	r2, fp, #136	; 0x88
   437dc:	orr	r4, r2, #4
   437e0:	ldr	r2, [fp, #20]
   437e4:	str	r0, [sp, #84]	; 0x54
   437e8:	mov	r0, #0
   437ec:	str	r0, [sp, #80]	; 0x50
   437f0:	add	lr, r2, #4
   437f4:	ldr	r2, [fp, #24]
   437f8:	sub	r2, r2, #1
   437fc:	str	r2, [sp, #56]	; 0x38
   43800:	sub	r2, fp, #96	; 0x60
   43804:	orr	r2, r2, #4
   43808:	str	r2, [sp, #36]	; 0x24
   4380c:	lsl	r2, r3, #2
   43810:	str	r2, [sp, #68]	; 0x44
   43814:	bic	r2, r3, #1
   43818:	str	r2, [sp, #44]	; 0x2c
   4381c:	ldr	r2, [sp, #92]	; 0x5c
   43820:	ldr	r7, [r2], #4
   43824:	str	r2, [sp, #92]	; 0x5c
   43828:	str	r7, [sp, #64]	; 0x40
   4382c:	cmp	r3, #1
   43830:	sub	ip, fp, #176	; 0xb0
   43834:	bge	4388c <GetDataSlab+0xf730>
   43838:	b	43978 <GetDataSlab+0xf81c>
   4383c:	ldr	r2, [sp, #36]	; 0x24
   43840:	mov	r6, #16
   43844:	ldr	r0, [r2, r0]
   43848:	add	r9, r9, r0, lsl #3
   4384c:	add	r1, r0, r1
   43850:	ldr	r0, [sp, #68]	; 0x44
   43854:	ldr	r2, [sp, #84]	; 0x54
   43858:	ldr	r3, [sp, #72]	; 0x48
   4385c:	ldr	r7, [sp, #80]	; 0x50
   43860:	add	r2, r2, r0
   43864:	ldr	r0, [sp, #76]	; 0x4c
   43868:	add	r7, r7, r3
   4386c:	str	r2, [sp, #84]	; 0x54
   43870:	mov	r2, #0
   43874:	str	r7, [sp, #80]	; 0x50
   43878:	cmp	r7, r0
   4387c:	bge	5b6a0 <GetDataSlab+0x27544>
   43880:	cmp	r3, #1
   43884:	sub	ip, fp, #176	; 0xb0
   43888:	blt	43978 <GetDataSlab+0xf81c>
   4388c:	mov	r3, #0
   43890:	beq	43940 <GetDataSlab+0xf7e4>
   43894:	ldr	r0, [sp, #64]	; 0x40
   43898:	add	r3, r9, r0, lsl #3
   4389c:	ldr	r0, [sp, #40]	; 0x28
   438a0:	str	r3, [sp, #52]	; 0x34
   438a4:	cmp	r0, #0
   438a8:	mov	r0, #0
   438ac:	beq	438f4 <GetDataSlab+0xf798>
   438b0:	ldr	sl, [sp, #84]	; 0x54
   438b4:	ldr	r2, [sp, #32]
   438b8:	mov	r5, #32
   438bc:	mov	ip, sl
   438c0:	add	r7, r3, #16
   438c4:	vld1.64	{d16-d17}, [r3], r5
   438c8:	subs	r2, r2, #2
   438cc:	add	r0, r0, #4
   438d0:	vcvt.f32.f64	s1, d17
   438d4:	vcvt.f32.f64	s0, d16
   438d8:	vst1.32	{d0}, [ip], r6
   438dc:	vld1.64	{d16-d17}, [r7]
   438e0:	vcvt.f32.f64	s1, d17
   438e4:	vcvt.f32.f64	s0, d16
   438e8:	vstr	d0, [sl, #8]
   438ec:	mov	sl, ip
   438f0:	bne	438c0 <GetDataSlab+0xf764>
   438f4:	ldr	r2, [sp, #48]	; 0x30
   438f8:	ldr	sl, [sp, #60]	; 0x3c
   438fc:	sub	ip, fp, #176	; 0xb0
   43900:	cmp	r2, #0
   43904:	beq	43930 <GetDataSlab+0xf7d4>
   43908:	ldr	r2, [sp, #88]	; 0x58
   4390c:	ldr	r3, [sp, #80]	; 0x50
   43910:	add	r2, r2, r3, lsl #2
   43914:	ldr	r3, [sp, #52]	; 0x34
   43918:	add	r3, r3, r0, lsl #3
   4391c:	add	r0, r2, r0, lsl #2
   43920:	vld1.64	{d16-d17}, [r3]
   43924:	vcvt.f32.f64	s1, d17
   43928:	vcvt.f32.f64	s0, d16
   4392c:	vstr	d0, [r0]
   43930:	ldr	r0, [sp, #72]	; 0x48
   43934:	ldr	r3, [sp, #44]	; 0x2c
   43938:	cmp	r0, r3
   4393c:	beq	43978 <GetDataSlab+0xf81c>
   43940:	ldr	r5, [sp, #64]	; 0x40
   43944:	ldr	r0, [sp, #84]	; 0x54
   43948:	ldr	r2, [sp, #72]	; 0x48
   4394c:	add	r7, r9, r5, lsl #3
   43950:	add	r0, r0, r3, lsl #2
   43954:	sub	r2, r2, r3
   43958:	add	r3, r7, r3, lsl #3
   4395c:	vldr	d16, [r3]
   43960:	add	r3, r3, #8
   43964:	subs	r2, r2, #1
   43968:	vcvt.f32.f64	s0, d16
   4396c:	vstr	s0, [r0]
   43970:	add	r0, r0, #4
   43974:	bne	4395c <GetDataSlab+0xf800>
   43978:	ldr	r0, [fp, #24]
   4397c:	add	r9, r9, sl, lsl #3
   43980:	add	r1, r1, sl
   43984:	cmp	r0, #2
   43988:	blt	43850 <GetDataSlab+0xf6f4>
   4398c:	ldr	r2, [sp, #56]	; 0x38
   43990:	mov	r0, #0
   43994:	b	439c4 <GetDataSlab+0xf868>
   43998:	ldr	r5, [sp, #92]	; 0x5c
   4399c:	ldr	r6, [ip, r0]
   439a0:	sub	r3, r3, r7
   439a4:	ldr	r5, [r5, r0]
   439a8:	mla	r3, r5, r6, r3
   439ac:	add	r1, r3, r1
   439b0:	add	r9, r9, r3, lsl #3
   439b4:	mov	r6, #16
   439b8:	subs	r2, r2, #1
   439bc:	add	r0, r0, #4
   439c0:	beq	43850 <GetDataSlab+0xf6f4>
   439c4:	ldr	r3, [r4, r0]
   439c8:	add	r3, r3, #1
   439cc:	str	r3, [r4, r0]
   439d0:	ldr	r7, [lr, r0]
   439d4:	sdiv	r6, r3, r7
   439d8:	mls	r3, r6, r7, r3
   439dc:	cmp	r3, #0
   439e0:	bne	4383c <GetDataSlab+0xf6e0>
   439e4:	mov	r3, #0
   439e8:	str	r3, [r4, r0]
   439ec:	ldr	r3, [r8, r0]
   439f0:	sdiv	r7, r1, r3
   439f4:	mls	r7, r7, r3, r1
   439f8:	cmp	r7, #0
   439fc:	bne	43998 <GetDataSlab+0xf83c>
   43a00:	ldr	r3, [sp, #92]	; 0x5c
   43a04:	ldr	r3, [r3, r0]
   43a08:	cmp	r3, #0
   43a0c:	beq	439b4 <GetDataSlab+0xf858>
   43a10:	ldr	r7, [ip, r0]
   43a14:	mla	r1, r7, r3, r1
   43a18:	mul	r3, r7, r3
   43a1c:	b	439b0 <GetDataSlab+0xf854>
   43a20:	ldr	r0, [sp, #80]	; 0x50
   43a24:	add	sl, r0, r5, lsl #3
   43a28:	ldr	r0, [sp, #20]
   43a2c:	cmp	r0, #1
   43a30:	bne	5017c <GetDataSlab+0x1c020>
   43a34:	ldr	r0, [sp, #68]	; 0x44
   43a38:	ldr	r2, [sp, #88]	; 0x58
   43a3c:	ldr	r3, [fp, #12]
   43a40:	sub	r7, fp, #96	; 0x60
   43a44:	cmp	r0, #1
   43a48:	blt	503e0 <GetDataSlab+0x1c284>
   43a4c:	ldr	r8, [sp, #56]	; 0x38
   43a50:	mov	r1, #1
   43a54:	ldr	r9, [sp, #28]
   43a58:	str	r2, [sp, #64]	; 0x40
   43a5c:	sub	r0, r8, #2
   43a60:	add	r1, r1, r0, lsr #1
   43a64:	lsr	r0, r0, #1
   43a68:	str	r0, [sp, #12]
   43a6c:	mov	r0, #0
   43a70:	and	r6, r1, #1
   43a74:	str	r0, [sp, #60]	; 0x3c
   43a78:	sub	r1, r1, r6
   43a7c:	str	r6, [sp, #20]
   43a80:	str	r1, [sp, #4]
   43a84:	sub	r1, fp, #136	; 0x88
   43a88:	orr	r4, r1, #4
   43a8c:	ldr	r1, [fp, #20]
   43a90:	str	r4, [sp, #40]	; 0x28
   43a94:	add	lr, r1, #4
   43a98:	orr	r1, ip, #4
   43a9c:	str	r1, [sp, #76]	; 0x4c
   43aa0:	ldr	r1, [fp, #24]
   43aa4:	str	lr, [sp, #36]	; 0x24
   43aa8:	sub	r1, r1, #1
   43aac:	str	r1, [sp, #32]
   43ab0:	orr	r1, r7, #4
   43ab4:	str	r1, [sp, #8]
   43ab8:	lsl	r1, r8, #2
   43abc:	str	r1, [sp, #52]	; 0x34
   43ac0:	bic	r1, r8, #1
   43ac4:	str	r1, [sp, #16]
   43ac8:	ldr	r1, [r3], #4
   43acc:	str	r3, [sp, #72]	; 0x48
   43ad0:	str	r1, [sp, #48]	; 0x30
   43ad4:	cmp	r8, #1
   43ad8:	bge	43b20 <GetDataSlab+0xf9c4>
   43adc:	b	43c68 <GetDataSlab+0xfb0c>
   43ae0:	ldr	r1, [sp, #8]
   43ae4:	ldr	r0, [r1, r0]
   43ae8:	add	sl, sl, r0, lsl #3
   43aec:	add	r5, r0, r5
   43af0:	ldr	r0, [sp, #52]	; 0x34
   43af4:	ldr	r1, [sp, #64]	; 0x40
   43af8:	add	r1, r1, r0
   43afc:	ldr	r0, [sp, #68]	; 0x44
   43b00:	str	r1, [sp, #64]	; 0x40
   43b04:	ldr	r1, [sp, #60]	; 0x3c
   43b08:	add	r1, r1, r8
   43b0c:	cmp	r1, r0
   43b10:	str	r1, [sp, #60]	; 0x3c
   43b14:	bge	503e0 <GetDataSlab+0x1c284>
   43b18:	cmp	r8, #1
   43b1c:	blt	43c68 <GetDataSlab+0xfb0c>
   43b20:	mov	r0, #0
   43b24:	beq	43c38 <GetDataSlab+0xfadc>
   43b28:	ldr	r0, [sp, #48]	; 0x30
   43b2c:	mov	r6, #0
   43b30:	str	sl, [sp, #44]	; 0x2c
   43b34:	add	r4, sl, r0, lsl #3
   43b38:	ldr	r0, [sp, #12]
   43b3c:	str	r4, [sp, #24]
   43b40:	cmp	r0, #0
   43b44:	beq	43bd0 <GetDataSlab+0xfa74>
   43b48:	ldr	sl, [sp, #64]	; 0x40
   43b4c:	ldr	r8, [sp, #4]
   43b50:	mov	r9, r4
   43b54:	mov	r7, sl
   43b58:	mov	r0, #32
   43b5c:	vld1.64	{d8-d9}, [r9], r0
   43b60:	vmov.32	r0, d9[0]
   43b64:	vmov.32	r1, d9[1]
   43b68:	bl	71774 <__aeabi_l2f>
   43b6c:	vmov.32	r2, d8[0]
   43b70:	vmov.32	r1, d8[1]
   43b74:	vmov	s17, r0
   43b78:	mov	r0, r2
   43b7c:	bl	71774 <__aeabi_l2f>
   43b80:	vmov	s16, r0
   43b84:	mov	r0, #16
   43b88:	vst1.32	{d8}, [r7], r0
   43b8c:	add	r0, r4, #16
   43b90:	vld1.64	{d8-d9}, [r0]
   43b94:	vmov.32	r0, d9[0]
   43b98:	vmov.32	r1, d9[1]
   43b9c:	bl	71774 <__aeabi_l2f>
   43ba0:	vmov.32	r2, d8[0]
   43ba4:	vmov.32	r1, d8[1]
   43ba8:	vmov	s17, r0
   43bac:	mov	r0, r2
   43bb0:	bl	71774 <__aeabi_l2f>
   43bb4:	vmov	s16, r0
   43bb8:	subs	r8, r8, #2
   43bbc:	add	r6, r6, #4
   43bc0:	mov	r4, r9
   43bc4:	vstr	d8, [sl, #8]
   43bc8:	mov	sl, r7
   43bcc:	bne	43b58 <GetDataSlab+0xf9fc>
   43bd0:	ldr	r0, [sp, #20]
   43bd4:	ldr	r9, [sp, #28]
   43bd8:	cmp	r0, #0
   43bdc:	ldr	r0, [sp, #88]	; 0x58
   43be0:	beq	43c24 <GetDataSlab+0xfac8>
   43be4:	ldr	r1, [sp, #60]	; 0x3c
   43be8:	add	r4, r0, r1, lsl #2
   43bec:	ldr	r0, [sp, #24]
   43bf0:	add	r0, r0, r6, lsl #3
   43bf4:	vld1.64	{d8-d9}, [r0]
   43bf8:	vmov.32	r0, d9[0]
   43bfc:	vmov.32	r1, d9[1]
   43c00:	bl	71774 <__aeabi_l2f>
   43c04:	vmov.32	r2, d8[0]
   43c08:	vmov.32	r1, d8[1]
   43c0c:	vmov	s17, r0
   43c10:	mov	r0, r2
   43c14:	bl	71774 <__aeabi_l2f>
   43c18:	vmov	s16, r0
   43c1c:	add	r0, r4, r6, lsl #2
   43c20:	vstr	d8, [r0]
   43c24:	ldr	r8, [sp, #56]	; 0x38
   43c28:	ldr	r0, [sp, #16]
   43c2c:	ldr	sl, [sp, #44]	; 0x2c
   43c30:	cmp	r8, r0
   43c34:	beq	43c68 <GetDataSlab+0xfb0c>
   43c38:	ldr	r1, [sp, #64]	; 0x40
   43c3c:	sub	r6, r8, r0
   43c40:	add	r4, r1, r0, lsl #2
   43c44:	ldr	r1, [sp, #48]	; 0x30
   43c48:	add	r1, sl, r1, lsl #3
   43c4c:	add	r7, r1, r0, lsl #3
   43c50:	ldrd	r0, [r7]
   43c54:	bl	71774 <__aeabi_l2f>
   43c58:	str	r0, [r4], #4
   43c5c:	add	r7, r7, #8
   43c60:	subs	r6, r6, #1
   43c64:	bne	43c50 <GetDataSlab+0xfaf4>
   43c68:	ldr	r0, [fp, #24]
   43c6c:	add	sl, sl, r9, lsl #3
   43c70:	add	r5, r5, r9
   43c74:	cmp	r0, #2
   43c78:	blt	43af0 <GetDataSlab+0xf994>
   43c7c:	sub	r4, fp, #176	; 0xb0
   43c80:	ldr	r1, [sp, #32]
   43c84:	ldr	lr, [sp, #36]	; 0x24
   43c88:	mov	r0, #0
   43c8c:	mov	ip, r4
   43c90:	ldr	r4, [sp, #40]	; 0x28
   43c94:	b	43cc0 <GetDataSlab+0xfb64>
   43c98:	ldr	r6, [sp, #72]	; 0x48
   43c9c:	ldr	r7, [ip, r0]
   43ca0:	sub	r2, r2, r3
   43ca4:	ldr	r6, [r6, r0]
   43ca8:	mla	r2, r6, r7, r2
   43cac:	add	r5, r2, r5
   43cb0:	add	sl, sl, r2, lsl #3
   43cb4:	subs	r1, r1, #1
   43cb8:	add	r0, r0, #4
   43cbc:	beq	43af0 <GetDataSlab+0xf994>
   43cc0:	ldr	r2, [r4, r0]
   43cc4:	add	r2, r2, #1
   43cc8:	str	r2, [r4, r0]
   43ccc:	ldr	r3, [lr, r0]
   43cd0:	sdiv	r7, r2, r3
   43cd4:	mls	r2, r7, r3, r2
   43cd8:	cmp	r2, #0
   43cdc:	bne	43ae0 <GetDataSlab+0xf984>
   43ce0:	mov	r2, #0
   43ce4:	str	r2, [r4, r0]
   43ce8:	ldr	r2, [sp, #76]	; 0x4c
   43cec:	ldr	r2, [r2, r0]
   43cf0:	sdiv	r3, r5, r2
   43cf4:	mls	r3, r3, r2, r5
   43cf8:	cmp	r3, #0
   43cfc:	bne	43c98 <GetDataSlab+0xfb3c>
   43d00:	ldr	r2, [sp, #72]	; 0x48
   43d04:	ldr	r2, [r2, r0]
   43d08:	cmp	r2, #0
   43d0c:	beq	43cb4 <GetDataSlab+0xfb58>
   43d10:	ldr	r3, [ip, r0]
   43d14:	mla	r5, r3, r2, r5
   43d18:	mul	r2, r3, r2
   43d1c:	b	43cb0 <GetDataSlab+0xfb54>
   43d20:	ldr	r0, [sp, #80]	; 0x50
   43d24:	cmp	r5, #1
   43d28:	add	r8, r0, r7
   43d2c:	bne	508b4 <GetDataSlab+0x1c758>
   43d30:	ldr	r0, [sp, #76]	; 0x4c
   43d34:	ldr	r3, [fp, #20]
   43d38:	sub	r2, fp, #176	; 0xb0
   43d3c:	cmp	r0, #1
   43d40:	blt	5aed4 <GetDataSlab+0x26d78>
   43d44:	orr	r2, r2, #4
   43d48:	ldr	lr, [fp, #12]
   43d4c:	sub	r0, fp, #136	; 0x88
   43d50:	add	r3, r3, #4
   43d54:	mov	ip, #0
   43d58:	str	r2, [sp, #80]	; 0x50
   43d5c:	ldr	r2, [fp, #24]
   43d60:	orr	r0, r0, #4
   43d64:	str	r3, [sp, #84]	; 0x54
   43d68:	sub	r2, r2, #1
   43d6c:	str	r2, [sp, #64]	; 0x40
   43d70:	sub	r2, fp, #96	; 0x60
   43d74:	orr	r2, r2, #4
   43d78:	str	r2, [sp, #60]	; 0x3c
   43d7c:	ldr	r2, [lr], #4
   43d80:	str	r2, [sp, #68]	; 0x44
   43d84:	b	43dac <GetDataSlab+0xfc50>
   43d88:	ldr	r3, [sp, #60]	; 0x3c
   43d8c:	ldr	r2, [r3, r2]
   43d90:	add	r8, r8, r2
   43d94:	add	r7, r2, r7
   43d98:	ldr	r2, [sp, #76]	; 0x4c
   43d9c:	add	ip, r1, ip
   43da0:	cmp	ip, r2
   43da4:	mov	r2, #0
   43da8:	bge	5b6a0 <GetDataSlab+0x27544>
   43dac:	ldr	r4, [sp, #68]	; 0x44
   43db0:	ldr	r5, [fp, #20]
   43db4:	ldr	r2, [sp, #72]	; 0x48
   43db8:	cmp	r1, #1
   43dbc:	add	r3, r4, r7
   43dc0:	add	r7, r8, r4
   43dc4:	blt	43dfc <GetDataSlab+0xfca0>
   43dc8:	ldr	r1, [sp, #88]	; 0x58
   43dcc:	mov	r2, #0
   43dd0:	add	r4, r1, ip
   43dd4:	ldrb	r1, [r7, r2]
   43dd8:	strb	r1, [r4, r2]
   43ddc:	add	r2, r2, #1
   43de0:	ldr	r1, [r5]
   43de4:	cmp	r2, r1
   43de8:	blt	43dd4 <GetDataSlab+0xfc78>
   43dec:	ldr	r2, [fp, #12]
   43df0:	ldr	r4, [r2]
   43df4:	ldr	r2, [fp, #8]
   43df8:	ldr	r2, [r2]
   43dfc:	str	r2, [sp, #72]	; 0x48
   43e00:	sub	r2, r2, r4
   43e04:	str	r4, [sp, #68]	; 0x44
   43e08:	add	r8, r7, r2
   43e0c:	add	r7, r3, r2
   43e10:	ldr	r2, [fp, #24]
   43e14:	cmp	r2, #2
   43e18:	blt	43d98 <GetDataSlab+0xfc3c>
   43e1c:	ldr	r9, [sp, #64]	; 0x40
   43e20:	mov	r2, #0
   43e24:	b	43e50 <GetDataSlab+0xfcf4>
   43e28:	sub	r4, fp, #176	; 0xb0
   43e2c:	ldr	sl, [lr, r2]
   43e30:	sub	r3, r3, r5
   43e34:	ldr	r6, [r4, r2]
   43e38:	mla	r3, sl, r6, r3
   43e3c:	add	r7, r3, r7
   43e40:	add	r8, r8, r3
   43e44:	subs	r9, r9, #1
   43e48:	add	r2, r2, #4
   43e4c:	beq	43d98 <GetDataSlab+0xfc3c>
   43e50:	ldr	r3, [r0, r2]
   43e54:	ldr	r4, [sp, #84]	; 0x54
   43e58:	add	r3, r3, #1
   43e5c:	str	r3, [r0, r2]
   43e60:	ldr	r5, [r4, r2]
   43e64:	sdiv	r6, r3, r5
   43e68:	mls	r3, r6, r5, r3
   43e6c:	cmp	r3, #0
   43e70:	bne	43d88 <GetDataSlab+0xfc2c>
   43e74:	mov	r3, #0
   43e78:	str	r3, [r0, r2]
   43e7c:	ldr	r3, [sp, #80]	; 0x50
   43e80:	ldr	r3, [r3, r2]
   43e84:	sdiv	r5, r7, r3
   43e88:	mls	r5, r5, r3, r7
   43e8c:	cmp	r5, #0
   43e90:	bne	43e28 <GetDataSlab+0xfccc>
   43e94:	ldr	r3, [lr, r2]
   43e98:	cmp	r3, #0
   43e9c:	beq	43e44 <GetDataSlab+0xfce8>
   43ea0:	sub	r4, fp, #176	; 0xb0
   43ea4:	ldr	r5, [r4, r2]
   43ea8:	mla	r7, r5, r3, r7
   43eac:	mla	r8, r5, r3, r8
   43eb0:	subs	r9, r9, #1
   43eb4:	add	r2, r2, #4
   43eb8:	bne	43e50 <GetDataSlab+0xfcf4>
   43ebc:	b	43d98 <GetDataSlab+0xfc3c>
   43ec0:	ldr	r0, [sp, #80]	; 0x50
   43ec4:	cmp	r5, #1
   43ec8:	add	sl, r0, r7, lsl #1
   43ecc:	bne	50a6c <GetDataSlab+0x1c910>
   43ed0:	ldr	r0, [sp, #76]	; 0x4c
   43ed4:	ldr	r3, [fp, #20]
   43ed8:	sub	r2, fp, #176	; 0xb0
   43edc:	cmp	r0, #1
   43ee0:	blt	5aed4 <GetDataSlab+0x26d78>
   43ee4:	orr	r2, r2, #4
   43ee8:	ldr	lr, [fp, #12]
   43eec:	sub	r0, fp, #136	; 0x88
   43ef0:	add	r4, r3, #4
   43ef4:	str	r2, [sp, #84]	; 0x54
   43ef8:	ldr	r2, [fp, #24]
   43efc:	orr	r0, r0, #4
   43f00:	sub	r2, r2, #1
   43f04:	str	r2, [sp, #68]	; 0x44
   43f08:	orr	r2, r8, #4
   43f0c:	mov	r8, #0
   43f10:	str	r2, [sp, #64]	; 0x40
   43f14:	ldr	r2, [lr], #4
   43f18:	str	r2, [sp, #80]	; 0x50
   43f1c:	b	43f44 <GetDataSlab+0xfde8>
   43f20:	ldr	r3, [sp, #64]	; 0x40
   43f24:	ldr	r2, [r3, r2]
   43f28:	add	sl, sl, r2, lsl #1
   43f2c:	add	r7, r2, r7
   43f30:	ldr	r2, [sp, #76]	; 0x4c
   43f34:	add	r8, r1, r8
   43f38:	cmp	r8, r2
   43f3c:	mov	r2, #0
   43f40:	bge	5b6a0 <GetDataSlab+0x27544>
   43f44:	ldr	r5, [sp, #80]	; 0x50
   43f48:	ldr	r2, [sp, #72]	; 0x48
   43f4c:	cmp	r1, #1
   43f50:	sub	ip, fp, #176	; 0xb0
   43f54:	add	r9, sl, r5, lsl #1
   43f58:	add	r3, r5, r7
   43f5c:	blt	43fa4 <GetDataSlab+0xfe48>
   43f60:	ldr	r1, [sp, #88]	; 0x58
   43f64:	ldr	r5, [fp, #20]
   43f68:	mov	r6, r4
   43f6c:	mov	r2, #0
   43f70:	mov	r7, r9
   43f74:	add	r4, r1, r8
   43f78:	ldrb	r1, [r7], #2
   43f7c:	strb	r1, [r4, r2]
   43f80:	add	r2, r2, #1
   43f84:	ldr	r1, [r5]
   43f88:	cmp	r2, r1
   43f8c:	blt	43f78 <GetDataSlab+0xfe1c>
   43f90:	ldr	r2, [fp, #12]
   43f94:	mov	r4, r6
   43f98:	ldr	r5, [r2]
   43f9c:	ldr	r2, [fp, #8]
   43fa0:	ldr	r2, [r2]
   43fa4:	str	r2, [sp, #72]	; 0x48
   43fa8:	sub	r2, r2, r5
   43fac:	str	r5, [sp, #80]	; 0x50
   43fb0:	add	sl, r9, r2, lsl #1
   43fb4:	add	r7, r3, r2
   43fb8:	ldr	r2, [fp, #24]
   43fbc:	cmp	r2, #2
   43fc0:	blt	43f30 <GetDataSlab+0xfdd4>
   43fc4:	ldr	r9, [sp, #68]	; 0x44
   43fc8:	mov	r2, #0
   43fcc:	b	43ff8 <GetDataSlab+0xfe9c>
   43fd0:	ldr	r6, [ip, r2]
   43fd4:	ldr	ip, [lr, r2]
   43fd8:	sub	r3, r3, r5
   43fdc:	mla	r3, ip, r6, r3
   43fe0:	sub	ip, fp, #176	; 0xb0
   43fe4:	add	r7, r3, r7
   43fe8:	add	sl, sl, r3, lsl #1
   43fec:	subs	r9, r9, #1
   43ff0:	add	r2, r2, #4
   43ff4:	beq	43f30 <GetDataSlab+0xfdd4>
   43ff8:	ldr	r3, [r0, r2]
   43ffc:	add	r3, r3, #1
   44000:	str	r3, [r0, r2]
   44004:	ldr	r5, [r4, r2]
   44008:	sdiv	r6, r3, r5
   4400c:	mls	r3, r6, r5, r3
   44010:	cmp	r3, #0
   44014:	bne	43f20 <GetDataSlab+0xfdc4>
   44018:	mov	r3, #0
   4401c:	str	r3, [r0, r2]
   44020:	ldr	r3, [sp, #84]	; 0x54
   44024:	ldr	r3, [r3, r2]
   44028:	sdiv	r5, r7, r3
   4402c:	mls	r5, r5, r3, r7
   44030:	cmp	r5, #0
   44034:	bne	43fd0 <GetDataSlab+0xfe74>
   44038:	ldr	r3, [lr, r2]
   4403c:	cmp	r3, #0
   44040:	beq	43fec <GetDataSlab+0xfe90>
   44044:	ldr	r6, [ip, r2]
   44048:	mla	r7, r6, r3, r7
   4404c:	mul	r3, r6, r3
   44050:	b	43fe8 <GetDataSlab+0xfe8c>
   44054:	ldr	r0, [sp, #80]	; 0x50
   44058:	cmp	r5, #1
   4405c:	add	sl, r0, r7, lsl #1
   44060:	bne	50c18 <GetDataSlab+0x1cabc>
   44064:	ldr	r0, [sp, #76]	; 0x4c
   44068:	ldr	r3, [fp, #20]
   4406c:	sub	r2, fp, #176	; 0xb0
   44070:	cmp	r0, #1
   44074:	blt	5aed4 <GetDataSlab+0x26d78>
   44078:	orr	r2, r2, #4
   4407c:	ldr	lr, [fp, #12]
   44080:	sub	r0, fp, #136	; 0x88
   44084:	add	r4, r3, #4
   44088:	str	r2, [sp, #84]	; 0x54
   4408c:	ldr	r2, [fp, #24]
   44090:	orr	r0, r0, #4
   44094:	sub	r2, r2, #1
   44098:	str	r2, [sp, #68]	; 0x44
   4409c:	orr	r2, r8, #4
   440a0:	mov	r8, #0
   440a4:	str	r2, [sp, #64]	; 0x40
   440a8:	ldr	r2, [lr], #4
   440ac:	str	r2, [sp, #80]	; 0x50
   440b0:	b	440d8 <GetDataSlab+0xff7c>
   440b4:	ldr	r3, [sp, #64]	; 0x40
   440b8:	ldr	r2, [r3, r2]
   440bc:	add	sl, sl, r2, lsl #1
   440c0:	add	r7, r2, r7
   440c4:	ldr	r2, [sp, #76]	; 0x4c
   440c8:	add	r8, r1, r8
   440cc:	cmp	r8, r2
   440d0:	mov	r2, #0
   440d4:	bge	5b6a0 <GetDataSlab+0x27544>
   440d8:	ldr	r5, [sp, #80]	; 0x50
   440dc:	ldr	r2, [sp, #72]	; 0x48
   440e0:	cmp	r1, #1
   440e4:	sub	ip, fp, #176	; 0xb0
   440e8:	add	r9, sl, r5, lsl #1
   440ec:	add	r3, r5, r7
   440f0:	blt	44138 <GetDataSlab+0xffdc>
   440f4:	ldr	r1, [sp, #88]	; 0x58
   440f8:	ldr	r5, [fp, #20]
   440fc:	mov	r6, r4
   44100:	mov	r2, #0
   44104:	mov	r7, r9
   44108:	add	r4, r1, r8
   4410c:	ldrb	r1, [r7], #2
   44110:	strb	r1, [r4, r2]
   44114:	add	r2, r2, #1
   44118:	ldr	r1, [r5]
   4411c:	cmp	r2, r1
   44120:	blt	4410c <GetDataSlab+0xffb0>
   44124:	ldr	r2, [fp, #12]
   44128:	mov	r4, r6
   4412c:	ldr	r5, [r2]
   44130:	ldr	r2, [fp, #8]
   44134:	ldr	r2, [r2]
   44138:	str	r2, [sp, #72]	; 0x48
   4413c:	sub	r2, r2, r5
   44140:	str	r5, [sp, #80]	; 0x50
   44144:	add	sl, r9, r2, lsl #1
   44148:	add	r7, r3, r2
   4414c:	ldr	r2, [fp, #24]
   44150:	cmp	r2, #2
   44154:	blt	440c4 <GetDataSlab+0xff68>
   44158:	ldr	r9, [sp, #68]	; 0x44
   4415c:	mov	r2, #0
   44160:	b	4418c <GetDataSlab+0x10030>
   44164:	ldr	r6, [ip, r2]
   44168:	ldr	ip, [lr, r2]
   4416c:	sub	r3, r3, r5
   44170:	mla	r3, ip, r6, r3
   44174:	sub	ip, fp, #176	; 0xb0
   44178:	add	r7, r3, r7
   4417c:	add	sl, sl, r3, lsl #1
   44180:	subs	r9, r9, #1
   44184:	add	r2, r2, #4
   44188:	beq	440c4 <GetDataSlab+0xff68>
   4418c:	ldr	r3, [r0, r2]
   44190:	add	r3, r3, #1
   44194:	str	r3, [r0, r2]
   44198:	ldr	r5, [r4, r2]
   4419c:	sdiv	r6, r3, r5
   441a0:	mls	r3, r6, r5, r3
   441a4:	cmp	r3, #0
   441a8:	bne	440b4 <GetDataSlab+0xff58>
   441ac:	mov	r3, #0
   441b0:	str	r3, [r0, r2]
   441b4:	ldr	r3, [sp, #84]	; 0x54
   441b8:	ldr	r3, [r3, r2]
   441bc:	sdiv	r5, r7, r3
   441c0:	mls	r5, r5, r3, r7
   441c4:	cmp	r5, #0
   441c8:	bne	44164 <GetDataSlab+0x10008>
   441cc:	ldr	r3, [lr, r2]
   441d0:	cmp	r3, #0
   441d4:	beq	44180 <GetDataSlab+0x10024>
   441d8:	ldr	r6, [ip, r2]
   441dc:	mla	r7, r6, r3, r7
   441e0:	mul	r3, r6, r3
   441e4:	b	4417c <GetDataSlab+0x10020>
   441e8:	ldr	r0, [sp, #80]	; 0x50
   441ec:	cmp	r5, #1
   441f0:	add	r8, r0, r7, lsl #2
   441f4:	bne	50dc4 <GetDataSlab+0x1cc68>
   441f8:	ldr	r0, [sp, #76]	; 0x4c
   441fc:	ldr	r3, [fp, #20]
   44200:	sub	r2, fp, #176	; 0xb0
   44204:	cmp	r0, #1
   44208:	blt	5aed4 <GetDataSlab+0x26d78>
   4420c:	orr	r2, r2, #4
   44210:	ldr	lr, [fp, #12]
   44214:	sub	r0, fp, #136	; 0x88
   44218:	add	r3, r3, #4
   4421c:	mov	ip, #0
   44220:	str	r2, [sp, #80]	; 0x50
   44224:	ldr	r2, [fp, #24]
   44228:	orr	r0, r0, #4
   4422c:	str	r3, [sp, #84]	; 0x54
   44230:	sub	r2, r2, #1
   44234:	str	r2, [sp, #64]	; 0x40
   44238:	sub	r2, fp, #96	; 0x60
   4423c:	orr	r2, r2, #4
   44240:	str	r2, [sp, #60]	; 0x3c
   44244:	ldr	r2, [lr], #4
   44248:	str	r2, [sp, #68]	; 0x44
   4424c:	b	44274 <GetDataSlab+0x10118>
   44250:	ldr	r3, [sp, #60]	; 0x3c
   44254:	ldr	r2, [r3, r2]
   44258:	add	r8, r8, r2, lsl #2
   4425c:	add	r7, r2, r7
   44260:	ldr	r2, [sp, #76]	; 0x4c
   44264:	add	ip, r1, ip
   44268:	cmp	ip, r2
   4426c:	mov	r2, #0
   44270:	bge	5b6a0 <GetDataSlab+0x27544>
   44274:	ldr	r4, [sp, #68]	; 0x44
   44278:	ldr	r5, [fp, #20]
   4427c:	ldr	r2, [sp, #72]	; 0x48
   44280:	cmp	r1, #1
   44284:	add	r3, r4, r7
   44288:	add	r7, r8, r4, lsl #2
   4428c:	blt	442c4 <GetDataSlab+0x10168>
   44290:	ldr	r1, [sp, #88]	; 0x58
   44294:	mov	r2, #0
   44298:	add	r4, r1, ip
   4429c:	ldr	r1, [r7, r2, lsl #2]
   442a0:	strb	r1, [r4, r2]
   442a4:	add	r2, r2, #1
   442a8:	ldr	r1, [r5]
   442ac:	cmp	r2, r1
   442b0:	blt	4429c <GetDataSlab+0x10140>
   442b4:	ldr	r2, [fp, #12]
   442b8:	ldr	r4, [r2]
   442bc:	ldr	r2, [fp, #8]
   442c0:	ldr	r2, [r2]
   442c4:	str	r2, [sp, #72]	; 0x48
   442c8:	sub	r2, r2, r4
   442cc:	str	r4, [sp, #68]	; 0x44
   442d0:	add	r8, r7, r2, lsl #2
   442d4:	add	r7, r3, r2
   442d8:	ldr	r2, [fp, #24]
   442dc:	cmp	r2, #2
   442e0:	blt	44260 <GetDataSlab+0x10104>
   442e4:	ldr	r9, [sp, #64]	; 0x40
   442e8:	mov	r2, #0
   442ec:	b	44318 <GetDataSlab+0x101bc>
   442f0:	sub	r4, fp, #176	; 0xb0
   442f4:	ldr	sl, [lr, r2]
   442f8:	sub	r3, r3, r5
   442fc:	ldr	r6, [r4, r2]
   44300:	mla	r3, sl, r6, r3
   44304:	add	r7, r3, r7
   44308:	add	r8, r8, r3, lsl #2
   4430c:	subs	r9, r9, #1
   44310:	add	r2, r2, #4
   44314:	beq	44260 <GetDataSlab+0x10104>
   44318:	ldr	r3, [r0, r2]
   4431c:	ldr	r4, [sp, #84]	; 0x54
   44320:	add	r3, r3, #1
   44324:	str	r3, [r0, r2]
   44328:	ldr	r5, [r4, r2]
   4432c:	sdiv	r6, r3, r5
   44330:	mls	r3, r6, r5, r3
   44334:	cmp	r3, #0
   44338:	bne	44250 <GetDataSlab+0x100f4>
   4433c:	mov	r3, #0
   44340:	str	r3, [r0, r2]
   44344:	ldr	r3, [sp, #80]	; 0x50
   44348:	ldr	r3, [r3, r2]
   4434c:	sdiv	r5, r7, r3
   44350:	mls	r5, r5, r3, r7
   44354:	cmp	r5, #0
   44358:	bne	442f0 <GetDataSlab+0x10194>
   4435c:	ldr	r3, [lr, r2]
   44360:	cmp	r3, #0
   44364:	beq	4430c <GetDataSlab+0x101b0>
   44368:	sub	r4, fp, #176	; 0xb0
   4436c:	ldr	r5, [r4, r2]
   44370:	mla	r7, r5, r3, r7
   44374:	mul	r3, r5, r3
   44378:	b	44308 <GetDataSlab+0x101ac>
   4437c:	ldr	r0, [sp, #80]	; 0x50
   44380:	cmp	r5, #1
   44384:	add	r8, r0, r7, lsl #2
   44388:	bne	50f70 <GetDataSlab+0x1ce14>
   4438c:	ldr	r0, [sp, #76]	; 0x4c
   44390:	ldr	r3, [fp, #20]
   44394:	sub	r2, fp, #176	; 0xb0
   44398:	cmp	r0, #1
   4439c:	blt	5aed4 <GetDataSlab+0x26d78>
   443a0:	orr	r2, r2, #4
   443a4:	ldr	lr, [fp, #12]
   443a8:	sub	r0, fp, #136	; 0x88
   443ac:	add	r3, r3, #4
   443b0:	mov	ip, #0
   443b4:	str	r2, [sp, #80]	; 0x50
   443b8:	ldr	r2, [fp, #24]
   443bc:	orr	r0, r0, #4
   443c0:	str	r3, [sp, #84]	; 0x54
   443c4:	sub	r2, r2, #1
   443c8:	str	r2, [sp, #64]	; 0x40
   443cc:	sub	r2, fp, #96	; 0x60
   443d0:	orr	r2, r2, #4
   443d4:	str	r2, [sp, #60]	; 0x3c
   443d8:	ldr	r2, [lr], #4
   443dc:	str	r2, [sp, #68]	; 0x44
   443e0:	b	44408 <GetDataSlab+0x102ac>
   443e4:	ldr	r3, [sp, #60]	; 0x3c
   443e8:	ldr	r2, [r3, r2]
   443ec:	add	r8, r8, r2, lsl #2
   443f0:	add	r7, r2, r7
   443f4:	ldr	r2, [sp, #76]	; 0x4c
   443f8:	add	ip, r1, ip
   443fc:	cmp	ip, r2
   44400:	mov	r2, #0
   44404:	bge	5b6a0 <GetDataSlab+0x27544>
   44408:	ldr	r4, [sp, #68]	; 0x44
   4440c:	ldr	r5, [fp, #20]
   44410:	ldr	r2, [sp, #72]	; 0x48
   44414:	cmp	r1, #1
   44418:	add	r3, r4, r7
   4441c:	add	r7, r8, r4, lsl #2
   44420:	blt	44458 <GetDataSlab+0x102fc>
   44424:	ldr	r1, [sp, #88]	; 0x58
   44428:	mov	r2, #0
   4442c:	add	r4, r1, ip
   44430:	ldr	r1, [r7, r2, lsl #2]
   44434:	strb	r1, [r4, r2]
   44438:	add	r2, r2, #1
   4443c:	ldr	r1, [r5]
   44440:	cmp	r2, r1
   44444:	blt	44430 <GetDataSlab+0x102d4>
   44448:	ldr	r2, [fp, #12]
   4444c:	ldr	r4, [r2]
   44450:	ldr	r2, [fp, #8]
   44454:	ldr	r2, [r2]
   44458:	str	r2, [sp, #72]	; 0x48
   4445c:	sub	r2, r2, r4
   44460:	str	r4, [sp, #68]	; 0x44
   44464:	add	r8, r7, r2, lsl #2
   44468:	add	r7, r3, r2
   4446c:	ldr	r2, [fp, #24]
   44470:	cmp	r2, #2
   44474:	blt	443f4 <GetDataSlab+0x10298>
   44478:	ldr	r9, [sp, #64]	; 0x40
   4447c:	mov	r2, #0
   44480:	b	444ac <GetDataSlab+0x10350>
   44484:	sub	r4, fp, #176	; 0xb0
   44488:	ldr	sl, [lr, r2]
   4448c:	sub	r3, r3, r5
   44490:	ldr	r6, [r4, r2]
   44494:	mla	r3, sl, r6, r3
   44498:	add	r7, r3, r7
   4449c:	add	r8, r8, r3, lsl #2
   444a0:	subs	r9, r9, #1
   444a4:	add	r2, r2, #4
   444a8:	beq	443f4 <GetDataSlab+0x10298>
   444ac:	ldr	r3, [r0, r2]
   444b0:	ldr	r4, [sp, #84]	; 0x54
   444b4:	add	r3, r3, #1
   444b8:	str	r3, [r0, r2]
   444bc:	ldr	r5, [r4, r2]
   444c0:	sdiv	r6, r3, r5
   444c4:	mls	r3, r6, r5, r3
   444c8:	cmp	r3, #0
   444cc:	bne	443e4 <GetDataSlab+0x10288>
   444d0:	mov	r3, #0
   444d4:	str	r3, [r0, r2]
   444d8:	ldr	r3, [sp, #80]	; 0x50
   444dc:	ldr	r3, [r3, r2]
   444e0:	sdiv	r5, r7, r3
   444e4:	mls	r5, r5, r3, r7
   444e8:	cmp	r5, #0
   444ec:	bne	44484 <GetDataSlab+0x10328>
   444f0:	ldr	r3, [lr, r2]
   444f4:	cmp	r3, #0
   444f8:	beq	444a0 <GetDataSlab+0x10344>
   444fc:	sub	r4, fp, #176	; 0xb0
   44500:	ldr	r5, [r4, r2]
   44504:	mla	r7, r5, r3, r7
   44508:	mul	r3, r5, r3
   4450c:	b	4449c <GetDataSlab+0x10340>
   44510:	ldr	r0, [sp, #80]	; 0x50
   44514:	cmp	r5, #1
   44518:	add	sl, r0, r7, lsl #2
   4451c:	bne	5111c <GetDataSlab+0x1cfc0>
   44520:	ldr	r0, [sp, #76]	; 0x4c
   44524:	ldr	r3, [fp, #20]
   44528:	sub	r2, fp, #176	; 0xb0
   4452c:	cmp	r0, #1
   44530:	blt	5aed4 <GetDataSlab+0x26d78>
   44534:	orr	r2, r2, #4
   44538:	ldr	lr, [fp, #12]
   4453c:	sub	r0, fp, #136	; 0x88
   44540:	add	r4, r3, #4
   44544:	str	r2, [sp, #84]	; 0x54
   44548:	ldr	r2, [fp, #24]
   4454c:	orr	r0, r0, #4
   44550:	sub	r2, r2, #1
   44554:	str	r2, [sp, #68]	; 0x44
   44558:	orr	r2, r8, #4
   4455c:	mov	r8, #0
   44560:	str	r2, [sp, #64]	; 0x40
   44564:	ldr	r2, [lr], #4
   44568:	str	r2, [sp, #80]	; 0x50
   4456c:	b	44594 <GetDataSlab+0x10438>
   44570:	ldr	r3, [sp, #64]	; 0x40
   44574:	ldr	r2, [r3, r2]
   44578:	add	sl, sl, r2, lsl #2
   4457c:	add	r7, r2, r7
   44580:	ldr	r2, [sp, #76]	; 0x4c
   44584:	add	r8, r1, r8
   44588:	cmp	r8, r2
   4458c:	mov	r2, #0
   44590:	bge	5b6a0 <GetDataSlab+0x27544>
   44594:	ldr	r5, [sp, #80]	; 0x50
   44598:	ldr	r2, [sp, #72]	; 0x48
   4459c:	cmp	r1, #1
   445a0:	sub	ip, fp, #176	; 0xb0
   445a4:	add	r9, sl, r5, lsl #2
   445a8:	add	r3, r5, r7
   445ac:	blt	44600 <GetDataSlab+0x104a4>
   445b0:	ldr	r1, [sp, #88]	; 0x58
   445b4:	ldr	r5, [fp, #20]
   445b8:	mov	r6, r4
   445bc:	mov	r2, #0
   445c0:	mov	r7, r9
   445c4:	add	r4, r1, r8
   445c8:	vldr	s0, [r7]
   445cc:	add	r7, r7, #4
   445d0:	vcvt.s32.f32	s0, s0
   445d4:	vmov	r1, s0
   445d8:	strb	r1, [r4, r2]
   445dc:	add	r2, r2, #1
   445e0:	ldr	r1, [r5]
   445e4:	cmp	r2, r1
   445e8:	blt	445c8 <GetDataSlab+0x1046c>
   445ec:	ldr	r2, [fp, #12]
   445f0:	mov	r4, r6
   445f4:	ldr	r5, [r2]
   445f8:	ldr	r2, [fp, #8]
   445fc:	ldr	r2, [r2]
   44600:	str	r2, [sp, #72]	; 0x48
   44604:	sub	r2, r2, r5
   44608:	str	r5, [sp, #80]	; 0x50
   4460c:	add	sl, r9, r2, lsl #2
   44610:	add	r7, r3, r2
   44614:	ldr	r2, [fp, #24]
   44618:	cmp	r2, #2
   4461c:	blt	44580 <GetDataSlab+0x10424>
   44620:	ldr	r9, [sp, #68]	; 0x44
   44624:	mov	r2, #0
   44628:	b	44654 <GetDataSlab+0x104f8>
   4462c:	ldr	r6, [ip, r2]
   44630:	ldr	ip, [lr, r2]
   44634:	sub	r3, r3, r5
   44638:	mla	r3, ip, r6, r3
   4463c:	sub	ip, fp, #176	; 0xb0
   44640:	add	r7, r3, r7
   44644:	add	sl, sl, r3, lsl #2
   44648:	subs	r9, r9, #1
   4464c:	add	r2, r2, #4
   44650:	beq	44580 <GetDataSlab+0x10424>
   44654:	ldr	r3, [r0, r2]
   44658:	add	r3, r3, #1
   4465c:	str	r3, [r0, r2]
   44660:	ldr	r5, [r4, r2]
   44664:	sdiv	r6, r3, r5
   44668:	mls	r3, r6, r5, r3
   4466c:	cmp	r3, #0
   44670:	bne	44570 <GetDataSlab+0x10414>
   44674:	mov	r3, #0
   44678:	str	r3, [r0, r2]
   4467c:	ldr	r3, [sp, #84]	; 0x54
   44680:	ldr	r3, [r3, r2]
   44684:	sdiv	r5, r7, r3
   44688:	mls	r5, r5, r3, r7
   4468c:	cmp	r5, #0
   44690:	bne	4462c <GetDataSlab+0x104d0>
   44694:	ldr	r3, [lr, r2]
   44698:	cmp	r3, #0
   4469c:	beq	44648 <GetDataSlab+0x104ec>
   446a0:	ldr	r6, [ip, r2]
   446a4:	mla	r7, r6, r3, r7
   446a8:	mul	r3, r6, r3
   446ac:	b	44644 <GetDataSlab+0x104e8>
   446b0:	ldr	r0, [sp, #80]	; 0x50
   446b4:	cmp	r5, #1
   446b8:	add	sl, r0, r7, lsl #3
   446bc:	bne	512d0 <GetDataSlab+0x1d174>
   446c0:	ldr	r0, [sp, #76]	; 0x4c
   446c4:	ldr	r3, [fp, #20]
   446c8:	sub	r2, fp, #176	; 0xb0
   446cc:	cmp	r0, #1
   446d0:	blt	5aed4 <GetDataSlab+0x26d78>
   446d4:	orr	r2, r2, #4
   446d8:	ldr	lr, [fp, #12]
   446dc:	sub	r0, fp, #136	; 0x88
   446e0:	add	r4, r3, #4
   446e4:	str	r2, [sp, #84]	; 0x54
   446e8:	ldr	r2, [fp, #24]
   446ec:	orr	r0, r0, #4
   446f0:	sub	r2, r2, #1
   446f4:	str	r2, [sp, #68]	; 0x44
   446f8:	orr	r2, r8, #4
   446fc:	mov	r8, #0
   44700:	str	r2, [sp, #64]	; 0x40
   44704:	ldr	r2, [lr], #4
   44708:	str	r2, [sp, #80]	; 0x50
   4470c:	b	44734 <GetDataSlab+0x105d8>
   44710:	ldr	r3, [sp, #64]	; 0x40
   44714:	ldr	r2, [r3, r2]
   44718:	add	sl, sl, r2, lsl #3
   4471c:	add	r7, r2, r7
   44720:	ldr	r2, [sp, #76]	; 0x4c
   44724:	add	r8, r1, r8
   44728:	cmp	r8, r2
   4472c:	mov	r2, #0
   44730:	bge	5b6a0 <GetDataSlab+0x27544>
   44734:	ldr	r5, [sp, #80]	; 0x50
   44738:	ldr	r2, [sp, #72]	; 0x48
   4473c:	cmp	r1, #1
   44740:	sub	ip, fp, #176	; 0xb0
   44744:	add	r9, sl, r5, lsl #3
   44748:	add	r3, r5, r7
   4474c:	blt	447a0 <GetDataSlab+0x10644>
   44750:	ldr	r1, [sp, #88]	; 0x58
   44754:	ldr	r5, [fp, #20]
   44758:	mov	r6, r4
   4475c:	mov	r2, #0
   44760:	mov	r7, r9
   44764:	add	r4, r1, r8
   44768:	vldr	d16, [r7]
   4476c:	add	r7, r7, #8
   44770:	vcvt.s32.f64	s0, d16
   44774:	vmov	r1, s0
   44778:	strb	r1, [r4, r2]
   4477c:	add	r2, r2, #1
   44780:	ldr	r1, [r5]
   44784:	cmp	r2, r1
   44788:	blt	44768 <GetDataSlab+0x1060c>
   4478c:	ldr	r2, [fp, #12]
   44790:	mov	r4, r6
   44794:	ldr	r5, [r2]
   44798:	ldr	r2, [fp, #8]
   4479c:	ldr	r2, [r2]
   447a0:	str	r2, [sp, #72]	; 0x48
   447a4:	sub	r2, r2, r5
   447a8:	str	r5, [sp, #80]	; 0x50
   447ac:	add	sl, r9, r2, lsl #3
   447b0:	add	r7, r3, r2
   447b4:	ldr	r2, [fp, #24]
   447b8:	cmp	r2, #2
   447bc:	blt	44720 <GetDataSlab+0x105c4>
   447c0:	ldr	r9, [sp, #68]	; 0x44
   447c4:	mov	r2, #0
   447c8:	b	447f4 <GetDataSlab+0x10698>
   447cc:	ldr	r6, [ip, r2]
   447d0:	ldr	ip, [lr, r2]
   447d4:	sub	r3, r3, r5
   447d8:	mla	r3, ip, r6, r3
   447dc:	sub	ip, fp, #176	; 0xb0
   447e0:	add	r7, r3, r7
   447e4:	add	sl, sl, r3, lsl #3
   447e8:	subs	r9, r9, #1
   447ec:	add	r2, r2, #4
   447f0:	beq	44720 <GetDataSlab+0x105c4>
   447f4:	ldr	r3, [r0, r2]
   447f8:	add	r3, r3, #1
   447fc:	str	r3, [r0, r2]
   44800:	ldr	r5, [r4, r2]
   44804:	sdiv	r6, r3, r5
   44808:	mls	r3, r6, r5, r3
   4480c:	cmp	r3, #0
   44810:	bne	44710 <GetDataSlab+0x105b4>
   44814:	mov	r3, #0
   44818:	str	r3, [r0, r2]
   4481c:	ldr	r3, [sp, #84]	; 0x54
   44820:	ldr	r3, [r3, r2]
   44824:	sdiv	r5, r7, r3
   44828:	mls	r5, r5, r3, r7
   4482c:	cmp	r5, #0
   44830:	bne	447cc <GetDataSlab+0x10670>
   44834:	ldr	r3, [lr, r2]
   44838:	cmp	r3, #0
   4483c:	beq	447e8 <GetDataSlab+0x1068c>
   44840:	ldr	r6, [ip, r2]
   44844:	mla	r7, r6, r3, r7
   44848:	mul	r3, r6, r3
   4484c:	b	447e4 <GetDataSlab+0x10688>
   44850:	ldr	r0, [sp, #80]	; 0x50
   44854:	cmp	r7, #1
   44858:	add	r9, r0, r3, lsl #3
   4485c:	bne	51484 <GetDataSlab+0x1d328>
   44860:	ldr	r0, [sp, #68]	; 0x44
   44864:	sub	ip, fp, #176	; 0xb0
   44868:	cmp	r0, #1
   4486c:	blt	51624 <GetDataSlab+0x1d4c8>
   44870:	ldr	r2, [fp, #20]
   44874:	ldr	sl, [fp, #12]
   44878:	sub	r0, fp, #136	; 0x88
   4487c:	mov	lr, #0
   44880:	orr	r0, r0, #4
   44884:	add	r5, r2, #4
   44888:	orr	r2, ip, #4
   4488c:	ldr	r7, [sl], #4
   44890:	str	r2, [sp, #76]	; 0x4c
   44894:	ldr	r2, [fp, #24]
   44898:	sub	r2, r2, #1
   4489c:	str	r2, [sp, #60]	; 0x3c
   448a0:	orr	r2, r8, #4
   448a4:	str	r2, [sp, #56]	; 0x38
   448a8:	b	448d0 <GetDataSlab+0x10774>
   448ac:	ldr	r2, [sp, #56]	; 0x38
   448b0:	ldr	r2, [r2, r7]
   448b4:	add	r9, r9, r2, lsl #3
   448b8:	add	r3, r2, r3
   448bc:	ldr	r2, [sp, #68]	; 0x44
   448c0:	ldr	r7, [sp, #72]	; 0x48
   448c4:	add	lr, r1, lr
   448c8:	cmp	lr, r2
   448cc:	bge	51624 <GetDataSlab+0x1d4c8>
   448d0:	ldr	r2, [sp, #64]	; 0x40
   448d4:	add	r4, r9, r7, lsl #3
   448d8:	add	r8, r7, r3
   448dc:	cmp	r1, #1
   448e0:	blt	44928 <GetDataSlab+0x107cc>
   448e4:	ldr	r1, [sp, #88]	; 0x58
   448e8:	ldr	r2, [fp, #20]
   448ec:	mov	r6, r5
   448f0:	mov	r3, #0
   448f4:	mov	r5, r4
   448f8:	add	r7, r1, lr
   448fc:	ldrb	r1, [r5], #8
   44900:	strb	r1, [r7, r3]
   44904:	add	r3, r3, #1
   44908:	ldr	r1, [r2]
   4490c:	cmp	r3, r1
   44910:	blt	448fc <GetDataSlab+0x107a0>
   44914:	ldr	r2, [fp, #12]
   44918:	mov	r5, r6
   4491c:	ldr	r7, [r2]
   44920:	ldr	r2, [fp, #8]
   44924:	ldr	r2, [r2]
   44928:	str	r2, [sp, #64]	; 0x40
   4492c:	sub	r2, r2, r7
   44930:	str	r7, [sp, #72]	; 0x48
   44934:	add	r9, r4, r2, lsl #3
   44938:	add	r3, r8, r2
   4493c:	ldr	r2, [fp, #24]
   44940:	cmp	r2, #2
   44944:	blt	448bc <GetDataSlab+0x10760>
   44948:	ldr	r8, [sp, #60]	; 0x3c
   4494c:	mov	r7, #0
   44950:	b	4497c <GetDataSlab+0x10820>
   44954:	ldr	r4, [ip, r7]
   44958:	ldr	ip, [sl, r7]
   4495c:	sub	r2, r2, r6
   44960:	mla	r2, ip, r4, r2
   44964:	sub	ip, fp, #176	; 0xb0
   44968:	add	r3, r2, r3
   4496c:	add	r9, r9, r2, lsl #3
   44970:	subs	r8, r8, #1
   44974:	add	r7, r7, #4
   44978:	beq	448bc <GetDataSlab+0x10760>
   4497c:	ldr	r2, [r0, r7]
   44980:	add	r2, r2, #1
   44984:	str	r2, [r0, r7]
   44988:	ldr	r6, [r5, r7]
   4498c:	sdiv	r4, r2, r6
   44990:	mls	r2, r4, r6, r2
   44994:	cmp	r2, #0
   44998:	bne	448ac <GetDataSlab+0x10750>
   4499c:	mov	r2, #0
   449a0:	str	r2, [r0, r7]
   449a4:	ldr	r2, [sp, #76]	; 0x4c
   449a8:	ldr	r2, [r2, r7]
   449ac:	sdiv	r4, r3, r2
   449b0:	mls	r6, r4, r2, r3
   449b4:	cmp	r6, #0
   449b8:	bne	44954 <GetDataSlab+0x107f8>
   449bc:	ldr	r2, [sl, r7]
   449c0:	cmp	r2, #0
   449c4:	beq	44970 <GetDataSlab+0x10814>
   449c8:	ldr	r6, [ip, r7]
   449cc:	mla	r3, r6, r2, r3
   449d0:	mul	r2, r6, r2
   449d4:	b	4496c <GetDataSlab+0x10810>
   449d8:	ldr	r0, [sp, #80]	; 0x50
   449dc:	cmp	r5, #1
   449e0:	add	r8, r0, r7
   449e4:	bne	51980 <GetDataSlab+0x1d824>
   449e8:	ldr	r0, [sp, #76]	; 0x4c
   449ec:	ldr	r3, [fp, #20]
   449f0:	sub	r2, fp, #176	; 0xb0
   449f4:	cmp	r0, #1
   449f8:	blt	5aed4 <GetDataSlab+0x26d78>
   449fc:	orr	r2, r2, #4
   44a00:	ldr	lr, [fp, #12]
   44a04:	sub	r0, fp, #136	; 0x88
   44a08:	add	r3, r3, #4
   44a0c:	mov	ip, #0
   44a10:	str	r2, [sp, #80]	; 0x50
   44a14:	ldr	r2, [fp, #24]
   44a18:	orr	r0, r0, #4
   44a1c:	str	r3, [sp, #84]	; 0x54
   44a20:	sub	r2, r2, #1
   44a24:	str	r2, [sp, #64]	; 0x40
   44a28:	sub	r2, fp, #96	; 0x60
   44a2c:	orr	r2, r2, #4
   44a30:	str	r2, [sp, #60]	; 0x3c
   44a34:	ldr	r2, [lr], #4
   44a38:	str	r2, [sp, #68]	; 0x44
   44a3c:	b	44a64 <GetDataSlab+0x10908>
   44a40:	ldr	r3, [sp, #60]	; 0x3c
   44a44:	ldr	r2, [r3, r2]
   44a48:	add	r8, r8, r2
   44a4c:	add	r7, r2, r7
   44a50:	ldr	r2, [sp, #76]	; 0x4c
   44a54:	add	ip, r1, ip
   44a58:	cmp	ip, r2
   44a5c:	mov	r2, #0
   44a60:	bge	5b6a0 <GetDataSlab+0x27544>
   44a64:	ldr	r4, [sp, #68]	; 0x44
   44a68:	ldr	r5, [fp, #20]
   44a6c:	ldr	r2, [sp, #72]	; 0x48
   44a70:	cmp	r1, #1
   44a74:	add	r3, r4, r7
   44a78:	add	r7, r8, r4
   44a7c:	blt	44ab4 <GetDataSlab+0x10958>
   44a80:	ldr	r1, [sp, #88]	; 0x58
   44a84:	mov	r2, #0
   44a88:	add	r4, r1, ip
   44a8c:	ldrb	r1, [r7, r2]
   44a90:	strb	r1, [r4, r2]
   44a94:	add	r2, r2, #1
   44a98:	ldr	r1, [r5]
   44a9c:	cmp	r2, r1
   44aa0:	blt	44a8c <GetDataSlab+0x10930>
   44aa4:	ldr	r2, [fp, #12]
   44aa8:	ldr	r4, [r2]
   44aac:	ldr	r2, [fp, #8]
   44ab0:	ldr	r2, [r2]
   44ab4:	str	r2, [sp, #72]	; 0x48
   44ab8:	sub	r2, r2, r4
   44abc:	str	r4, [sp, #68]	; 0x44
   44ac0:	add	r8, r7, r2
   44ac4:	add	r7, r3, r2
   44ac8:	ldr	r2, [fp, #24]
   44acc:	cmp	r2, #2
   44ad0:	blt	44a50 <GetDataSlab+0x108f4>
   44ad4:	ldr	r9, [sp, #64]	; 0x40
   44ad8:	mov	r2, #0
   44adc:	b	44b08 <GetDataSlab+0x109ac>
   44ae0:	sub	r4, fp, #176	; 0xb0
   44ae4:	ldr	sl, [lr, r2]
   44ae8:	sub	r3, r3, r5
   44aec:	ldr	r6, [r4, r2]
   44af0:	mla	r3, sl, r6, r3
   44af4:	add	r7, r3, r7
   44af8:	add	r8, r8, r3
   44afc:	subs	r9, r9, #1
   44b00:	add	r2, r2, #4
   44b04:	beq	44a50 <GetDataSlab+0x108f4>
   44b08:	ldr	r3, [r0, r2]
   44b0c:	ldr	r4, [sp, #84]	; 0x54
   44b10:	add	r3, r3, #1
   44b14:	str	r3, [r0, r2]
   44b18:	ldr	r5, [r4, r2]
   44b1c:	sdiv	r6, r3, r5
   44b20:	mls	r3, r6, r5, r3
   44b24:	cmp	r3, #0
   44b28:	bne	44a40 <GetDataSlab+0x108e4>
   44b2c:	mov	r3, #0
   44b30:	str	r3, [r0, r2]
   44b34:	ldr	r3, [sp, #80]	; 0x50
   44b38:	ldr	r3, [r3, r2]
   44b3c:	sdiv	r5, r7, r3
   44b40:	mls	r5, r5, r3, r7
   44b44:	cmp	r5, #0
   44b48:	bne	44ae0 <GetDataSlab+0x10984>
   44b4c:	ldr	r3, [lr, r2]
   44b50:	cmp	r3, #0
   44b54:	beq	44afc <GetDataSlab+0x109a0>
   44b58:	sub	r4, fp, #176	; 0xb0
   44b5c:	ldr	r5, [r4, r2]
   44b60:	mla	r7, r5, r3, r7
   44b64:	mla	r8, r5, r3, r8
   44b68:	subs	r9, r9, #1
   44b6c:	add	r2, r2, #4
   44b70:	bne	44b08 <GetDataSlab+0x109ac>
   44b74:	b	44a50 <GetDataSlab+0x108f4>
   44b78:	ldr	r0, [sp, #80]	; 0x50
   44b7c:	cmp	r5, #1
   44b80:	add	sl, r0, r7, lsl #1
   44b84:	bne	51b38 <GetDataSlab+0x1d9dc>
   44b88:	ldr	r0, [sp, #76]	; 0x4c
   44b8c:	ldr	r3, [fp, #20]
   44b90:	sub	r2, fp, #176	; 0xb0
   44b94:	cmp	r0, #1
   44b98:	blt	5aed4 <GetDataSlab+0x26d78>
   44b9c:	orr	r2, r2, #4
   44ba0:	ldr	lr, [fp, #12]
   44ba4:	sub	r0, fp, #136	; 0x88
   44ba8:	add	r4, r3, #4
   44bac:	str	r2, [sp, #84]	; 0x54
   44bb0:	ldr	r2, [fp, #24]
   44bb4:	orr	r0, r0, #4
   44bb8:	sub	r2, r2, #1
   44bbc:	str	r2, [sp, #68]	; 0x44
   44bc0:	orr	r2, r8, #4
   44bc4:	mov	r8, #0
   44bc8:	str	r2, [sp, #64]	; 0x40
   44bcc:	ldr	r2, [lr], #4
   44bd0:	str	r2, [sp, #80]	; 0x50
   44bd4:	b	44bfc <GetDataSlab+0x10aa0>
   44bd8:	ldr	r3, [sp, #64]	; 0x40
   44bdc:	ldr	r2, [r3, r2]
   44be0:	add	sl, sl, r2, lsl #1
   44be4:	add	r7, r2, r7
   44be8:	ldr	r2, [sp, #76]	; 0x4c
   44bec:	add	r8, r1, r8
   44bf0:	cmp	r8, r2
   44bf4:	mov	r2, #0
   44bf8:	bge	5b6a0 <GetDataSlab+0x27544>
   44bfc:	ldr	r5, [sp, #80]	; 0x50
   44c00:	ldr	r2, [sp, #72]	; 0x48
   44c04:	cmp	r1, #1
   44c08:	sub	ip, fp, #176	; 0xb0
   44c0c:	add	r9, sl, r5, lsl #1
   44c10:	add	r3, r5, r7
   44c14:	blt	44c5c <GetDataSlab+0x10b00>
   44c18:	ldr	r1, [sp, #88]	; 0x58
   44c1c:	ldr	r5, [fp, #20]
   44c20:	mov	r6, r4
   44c24:	mov	r2, #0
   44c28:	mov	r7, r9
   44c2c:	add	r4, r1, r8
   44c30:	ldrb	r1, [r7], #2
   44c34:	strb	r1, [r4, r2]
   44c38:	add	r2, r2, #1
   44c3c:	ldr	r1, [r5]
   44c40:	cmp	r2, r1
   44c44:	blt	44c30 <GetDataSlab+0x10ad4>
   44c48:	ldr	r2, [fp, #12]
   44c4c:	mov	r4, r6
   44c50:	ldr	r5, [r2]
   44c54:	ldr	r2, [fp, #8]
   44c58:	ldr	r2, [r2]
   44c5c:	str	r2, [sp, #72]	; 0x48
   44c60:	sub	r2, r2, r5
   44c64:	str	r5, [sp, #80]	; 0x50
   44c68:	add	sl, r9, r2, lsl #1
   44c6c:	add	r7, r3, r2
   44c70:	ldr	r2, [fp, #24]
   44c74:	cmp	r2, #2
   44c78:	blt	44be8 <GetDataSlab+0x10a8c>
   44c7c:	ldr	r9, [sp, #68]	; 0x44
   44c80:	mov	r2, #0
   44c84:	b	44cb0 <GetDataSlab+0x10b54>
   44c88:	ldr	r6, [ip, r2]
   44c8c:	ldr	ip, [lr, r2]
   44c90:	sub	r3, r3, r5
   44c94:	mla	r3, ip, r6, r3
   44c98:	sub	ip, fp, #176	; 0xb0
   44c9c:	add	r7, r3, r7
   44ca0:	add	sl, sl, r3, lsl #1
   44ca4:	subs	r9, r9, #1
   44ca8:	add	r2, r2, #4
   44cac:	beq	44be8 <GetDataSlab+0x10a8c>
   44cb0:	ldr	r3, [r0, r2]
   44cb4:	add	r3, r3, #1
   44cb8:	str	r3, [r0, r2]
   44cbc:	ldr	r5, [r4, r2]
   44cc0:	sdiv	r6, r3, r5
   44cc4:	mls	r3, r6, r5, r3
   44cc8:	cmp	r3, #0
   44ccc:	bne	44bd8 <GetDataSlab+0x10a7c>
   44cd0:	mov	r3, #0
   44cd4:	str	r3, [r0, r2]
   44cd8:	ldr	r3, [sp, #84]	; 0x54
   44cdc:	ldr	r3, [r3, r2]
   44ce0:	sdiv	r5, r7, r3
   44ce4:	mls	r5, r5, r3, r7
   44ce8:	cmp	r5, #0
   44cec:	bne	44c88 <GetDataSlab+0x10b2c>
   44cf0:	ldr	r3, [lr, r2]
   44cf4:	cmp	r3, #0
   44cf8:	beq	44ca4 <GetDataSlab+0x10b48>
   44cfc:	ldr	r6, [ip, r2]
   44d00:	mla	r7, r6, r3, r7
   44d04:	mul	r3, r6, r3
   44d08:	b	44ca0 <GetDataSlab+0x10b44>
   44d0c:	ldr	r0, [sp, #80]	; 0x50
   44d10:	cmp	r5, #1
   44d14:	add	sl, r0, r7, lsl #1
   44d18:	bne	51ce4 <GetDataSlab+0x1db88>
   44d1c:	ldr	r0, [sp, #76]	; 0x4c
   44d20:	ldr	r3, [fp, #20]
   44d24:	sub	r2, fp, #176	; 0xb0
   44d28:	cmp	r0, #1
   44d2c:	blt	5aed4 <GetDataSlab+0x26d78>
   44d30:	orr	r2, r2, #4
   44d34:	ldr	lr, [fp, #12]
   44d38:	sub	r0, fp, #136	; 0x88
   44d3c:	add	r4, r3, #4
   44d40:	str	r2, [sp, #84]	; 0x54
   44d44:	ldr	r2, [fp, #24]
   44d48:	orr	r0, r0, #4
   44d4c:	sub	r2, r2, #1
   44d50:	str	r2, [sp, #68]	; 0x44
   44d54:	orr	r2, r8, #4
   44d58:	mov	r8, #0
   44d5c:	str	r2, [sp, #64]	; 0x40
   44d60:	ldr	r2, [lr], #4
   44d64:	str	r2, [sp, #80]	; 0x50
   44d68:	b	44d90 <GetDataSlab+0x10c34>
   44d6c:	ldr	r3, [sp, #64]	; 0x40
   44d70:	ldr	r2, [r3, r2]
   44d74:	add	sl, sl, r2, lsl #1
   44d78:	add	r7, r2, r7
   44d7c:	ldr	r2, [sp, #76]	; 0x4c
   44d80:	add	r8, r1, r8
   44d84:	cmp	r8, r2
   44d88:	mov	r2, #0
   44d8c:	bge	5b6a0 <GetDataSlab+0x27544>
   44d90:	ldr	r5, [sp, #80]	; 0x50
   44d94:	ldr	r2, [sp, #72]	; 0x48
   44d98:	cmp	r1, #1
   44d9c:	sub	ip, fp, #176	; 0xb0
   44da0:	add	r9, sl, r5, lsl #1
   44da4:	add	r3, r5, r7
   44da8:	blt	44df0 <GetDataSlab+0x10c94>
   44dac:	ldr	r1, [sp, #88]	; 0x58
   44db0:	ldr	r5, [fp, #20]
   44db4:	mov	r6, r4
   44db8:	mov	r2, #0
   44dbc:	mov	r7, r9
   44dc0:	add	r4, r1, r8
   44dc4:	ldrb	r1, [r7], #2
   44dc8:	strb	r1, [r4, r2]
   44dcc:	add	r2, r2, #1
   44dd0:	ldr	r1, [r5]
   44dd4:	cmp	r2, r1
   44dd8:	blt	44dc4 <GetDataSlab+0x10c68>
   44ddc:	ldr	r2, [fp, #12]
   44de0:	mov	r4, r6
   44de4:	ldr	r5, [r2]
   44de8:	ldr	r2, [fp, #8]
   44dec:	ldr	r2, [r2]
   44df0:	str	r2, [sp, #72]	; 0x48
   44df4:	sub	r2, r2, r5
   44df8:	str	r5, [sp, #80]	; 0x50
   44dfc:	add	sl, r9, r2, lsl #1
   44e00:	add	r7, r3, r2
   44e04:	ldr	r2, [fp, #24]
   44e08:	cmp	r2, #2
   44e0c:	blt	44d7c <GetDataSlab+0x10c20>
   44e10:	ldr	r9, [sp, #68]	; 0x44
   44e14:	mov	r2, #0
   44e18:	b	44e44 <GetDataSlab+0x10ce8>
   44e1c:	ldr	r6, [ip, r2]
   44e20:	ldr	ip, [lr, r2]
   44e24:	sub	r3, r3, r5
   44e28:	mla	r3, ip, r6, r3
   44e2c:	sub	ip, fp, #176	; 0xb0
   44e30:	add	r7, r3, r7
   44e34:	add	sl, sl, r3, lsl #1
   44e38:	subs	r9, r9, #1
   44e3c:	add	r2, r2, #4
   44e40:	beq	44d7c <GetDataSlab+0x10c20>
   44e44:	ldr	r3, [r0, r2]
   44e48:	add	r3, r3, #1
   44e4c:	str	r3, [r0, r2]
   44e50:	ldr	r5, [r4, r2]
   44e54:	sdiv	r6, r3, r5
   44e58:	mls	r3, r6, r5, r3
   44e5c:	cmp	r3, #0
   44e60:	bne	44d6c <GetDataSlab+0x10c10>
   44e64:	mov	r3, #0
   44e68:	str	r3, [r0, r2]
   44e6c:	ldr	r3, [sp, #84]	; 0x54
   44e70:	ldr	r3, [r3, r2]
   44e74:	sdiv	r5, r7, r3
   44e78:	mls	r5, r5, r3, r7
   44e7c:	cmp	r5, #0
   44e80:	bne	44e1c <GetDataSlab+0x10cc0>
   44e84:	ldr	r3, [lr, r2]
   44e88:	cmp	r3, #0
   44e8c:	beq	44e38 <GetDataSlab+0x10cdc>
   44e90:	ldr	r6, [ip, r2]
   44e94:	mla	r7, r6, r3, r7
   44e98:	mul	r3, r6, r3
   44e9c:	b	44e34 <GetDataSlab+0x10cd8>
   44ea0:	ldr	r0, [sp, #80]	; 0x50
   44ea4:	cmp	r5, #1
   44ea8:	add	r8, r0, r7, lsl #2
   44eac:	bne	51e90 <GetDataSlab+0x1dd34>
   44eb0:	ldr	r0, [sp, #76]	; 0x4c
   44eb4:	ldr	r3, [fp, #20]
   44eb8:	sub	r2, fp, #176	; 0xb0
   44ebc:	cmp	r0, #1
   44ec0:	blt	5aed4 <GetDataSlab+0x26d78>
   44ec4:	orr	r2, r2, #4
   44ec8:	ldr	lr, [fp, #12]
   44ecc:	sub	r0, fp, #136	; 0x88
   44ed0:	add	r3, r3, #4
   44ed4:	mov	ip, #0
   44ed8:	str	r2, [sp, #80]	; 0x50
   44edc:	ldr	r2, [fp, #24]
   44ee0:	orr	r0, r0, #4
   44ee4:	str	r3, [sp, #84]	; 0x54
   44ee8:	sub	r2, r2, #1
   44eec:	str	r2, [sp, #64]	; 0x40
   44ef0:	sub	r2, fp, #96	; 0x60
   44ef4:	orr	r2, r2, #4
   44ef8:	str	r2, [sp, #60]	; 0x3c
   44efc:	ldr	r2, [lr], #4
   44f00:	str	r2, [sp, #68]	; 0x44
   44f04:	b	44f2c <GetDataSlab+0x10dd0>
   44f08:	ldr	r3, [sp, #60]	; 0x3c
   44f0c:	ldr	r2, [r3, r2]
   44f10:	add	r8, r8, r2, lsl #2
   44f14:	add	r7, r2, r7
   44f18:	ldr	r2, [sp, #76]	; 0x4c
   44f1c:	add	ip, r1, ip
   44f20:	cmp	ip, r2
   44f24:	mov	r2, #0
   44f28:	bge	5b6a0 <GetDataSlab+0x27544>
   44f2c:	ldr	r4, [sp, #68]	; 0x44
   44f30:	ldr	r5, [fp, #20]
   44f34:	ldr	r2, [sp, #72]	; 0x48
   44f38:	cmp	r1, #1
   44f3c:	add	r3, r4, r7
   44f40:	add	r7, r8, r4, lsl #2
   44f44:	blt	44f7c <GetDataSlab+0x10e20>
   44f48:	ldr	r1, [sp, #88]	; 0x58
   44f4c:	mov	r2, #0
   44f50:	add	r4, r1, ip
   44f54:	ldr	r1, [r7, r2, lsl #2]
   44f58:	strb	r1, [r4, r2]
   44f5c:	add	r2, r2, #1
   44f60:	ldr	r1, [r5]
   44f64:	cmp	r2, r1
   44f68:	blt	44f54 <GetDataSlab+0x10df8>
   44f6c:	ldr	r2, [fp, #12]
   44f70:	ldr	r4, [r2]
   44f74:	ldr	r2, [fp, #8]
   44f78:	ldr	r2, [r2]
   44f7c:	str	r2, [sp, #72]	; 0x48
   44f80:	sub	r2, r2, r4
   44f84:	str	r4, [sp, #68]	; 0x44
   44f88:	add	r8, r7, r2, lsl #2
   44f8c:	add	r7, r3, r2
   44f90:	ldr	r2, [fp, #24]
   44f94:	cmp	r2, #2
   44f98:	blt	44f18 <GetDataSlab+0x10dbc>
   44f9c:	ldr	r9, [sp, #64]	; 0x40
   44fa0:	mov	r2, #0
   44fa4:	b	44fd0 <GetDataSlab+0x10e74>
   44fa8:	sub	r4, fp, #176	; 0xb0
   44fac:	ldr	sl, [lr, r2]
   44fb0:	sub	r3, r3, r5
   44fb4:	ldr	r6, [r4, r2]
   44fb8:	mla	r3, sl, r6, r3
   44fbc:	add	r7, r3, r7
   44fc0:	add	r8, r8, r3, lsl #2
   44fc4:	subs	r9, r9, #1
   44fc8:	add	r2, r2, #4
   44fcc:	beq	44f18 <GetDataSlab+0x10dbc>
   44fd0:	ldr	r3, [r0, r2]
   44fd4:	ldr	r4, [sp, #84]	; 0x54
   44fd8:	add	r3, r3, #1
   44fdc:	str	r3, [r0, r2]
   44fe0:	ldr	r5, [r4, r2]
   44fe4:	sdiv	r6, r3, r5
   44fe8:	mls	r3, r6, r5, r3
   44fec:	cmp	r3, #0
   44ff0:	bne	44f08 <GetDataSlab+0x10dac>
   44ff4:	mov	r3, #0
   44ff8:	str	r3, [r0, r2]
   44ffc:	ldr	r3, [sp, #80]	; 0x50
   45000:	ldr	r3, [r3, r2]
   45004:	sdiv	r5, r7, r3
   45008:	mls	r5, r5, r3, r7
   4500c:	cmp	r5, #0
   45010:	bne	44fa8 <GetDataSlab+0x10e4c>
   45014:	ldr	r3, [lr, r2]
   45018:	cmp	r3, #0
   4501c:	beq	44fc4 <GetDataSlab+0x10e68>
   45020:	sub	r4, fp, #176	; 0xb0
   45024:	ldr	r5, [r4, r2]
   45028:	mla	r7, r5, r3, r7
   4502c:	mul	r3, r5, r3
   45030:	b	44fc0 <GetDataSlab+0x10e64>
   45034:	ldr	r0, [sp, #80]	; 0x50
   45038:	cmp	r5, #1
   4503c:	add	r8, r0, r7, lsl #2
   45040:	bne	5203c <GetDataSlab+0x1dee0>
   45044:	ldr	r0, [sp, #76]	; 0x4c
   45048:	ldr	r3, [fp, #20]
   4504c:	sub	r2, fp, #176	; 0xb0
   45050:	cmp	r0, #1
   45054:	blt	5aed4 <GetDataSlab+0x26d78>
   45058:	orr	r2, r2, #4
   4505c:	ldr	lr, [fp, #12]
   45060:	sub	r0, fp, #136	; 0x88
   45064:	add	r3, r3, #4
   45068:	mov	ip, #0
   4506c:	str	r2, [sp, #80]	; 0x50
   45070:	ldr	r2, [fp, #24]
   45074:	orr	r0, r0, #4
   45078:	str	r3, [sp, #84]	; 0x54
   4507c:	sub	r2, r2, #1
   45080:	str	r2, [sp, #64]	; 0x40
   45084:	sub	r2, fp, #96	; 0x60
   45088:	orr	r2, r2, #4
   4508c:	str	r2, [sp, #60]	; 0x3c
   45090:	ldr	r2, [lr], #4
   45094:	str	r2, [sp, #68]	; 0x44
   45098:	b	450c0 <GetDataSlab+0x10f64>
   4509c:	ldr	r3, [sp, #60]	; 0x3c
   450a0:	ldr	r2, [r3, r2]
   450a4:	add	r8, r8, r2, lsl #2
   450a8:	add	r7, r2, r7
   450ac:	ldr	r2, [sp, #76]	; 0x4c
   450b0:	add	ip, r1, ip
   450b4:	cmp	ip, r2
   450b8:	mov	r2, #0
   450bc:	bge	5b6a0 <GetDataSlab+0x27544>
   450c0:	ldr	r4, [sp, #68]	; 0x44
   450c4:	ldr	r5, [fp, #20]
   450c8:	ldr	r2, [sp, #72]	; 0x48
   450cc:	cmp	r1, #1
   450d0:	add	r3, r4, r7
   450d4:	add	r7, r8, r4, lsl #2
   450d8:	blt	45110 <GetDataSlab+0x10fb4>
   450dc:	ldr	r1, [sp, #88]	; 0x58
   450e0:	mov	r2, #0
   450e4:	add	r4, r1, ip
   450e8:	ldr	r1, [r7, r2, lsl #2]
   450ec:	strb	r1, [r4, r2]
   450f0:	add	r2, r2, #1
   450f4:	ldr	r1, [r5]
   450f8:	cmp	r2, r1
   450fc:	blt	450e8 <GetDataSlab+0x10f8c>
   45100:	ldr	r2, [fp, #12]
   45104:	ldr	r4, [r2]
   45108:	ldr	r2, [fp, #8]
   4510c:	ldr	r2, [r2]
   45110:	str	r2, [sp, #72]	; 0x48
   45114:	sub	r2, r2, r4
   45118:	str	r4, [sp, #68]	; 0x44
   4511c:	add	r8, r7, r2, lsl #2
   45120:	add	r7, r3, r2
   45124:	ldr	r2, [fp, #24]
   45128:	cmp	r2, #2
   4512c:	blt	450ac <GetDataSlab+0x10f50>
   45130:	ldr	r9, [sp, #64]	; 0x40
   45134:	mov	r2, #0
   45138:	b	45164 <GetDataSlab+0x11008>
   4513c:	sub	r4, fp, #176	; 0xb0
   45140:	ldr	sl, [lr, r2]
   45144:	sub	r3, r3, r5
   45148:	ldr	r6, [r4, r2]
   4514c:	mla	r3, sl, r6, r3
   45150:	add	r7, r3, r7
   45154:	add	r8, r8, r3, lsl #2
   45158:	subs	r9, r9, #1
   4515c:	add	r2, r2, #4
   45160:	beq	450ac <GetDataSlab+0x10f50>
   45164:	ldr	r3, [r0, r2]
   45168:	ldr	r4, [sp, #84]	; 0x54
   4516c:	add	r3, r3, #1
   45170:	str	r3, [r0, r2]
   45174:	ldr	r5, [r4, r2]
   45178:	sdiv	r6, r3, r5
   4517c:	mls	r3, r6, r5, r3
   45180:	cmp	r3, #0
   45184:	bne	4509c <GetDataSlab+0x10f40>
   45188:	mov	r3, #0
   4518c:	str	r3, [r0, r2]
   45190:	ldr	r3, [sp, #80]	; 0x50
   45194:	ldr	r3, [r3, r2]
   45198:	sdiv	r5, r7, r3
   4519c:	mls	r5, r5, r3, r7
   451a0:	cmp	r5, #0
   451a4:	bne	4513c <GetDataSlab+0x10fe0>
   451a8:	ldr	r3, [lr, r2]
   451ac:	cmp	r3, #0
   451b0:	beq	45158 <GetDataSlab+0x10ffc>
   451b4:	sub	r4, fp, #176	; 0xb0
   451b8:	ldr	r5, [r4, r2]
   451bc:	mla	r7, r5, r3, r7
   451c0:	mul	r3, r5, r3
   451c4:	b	45154 <GetDataSlab+0x10ff8>
   451c8:	ldr	r0, [sp, #80]	; 0x50
   451cc:	cmp	r5, #1
   451d0:	add	sl, r0, r7, lsl #2
   451d4:	bne	521e8 <GetDataSlab+0x1e08c>
   451d8:	ldr	r0, [sp, #76]	; 0x4c
   451dc:	ldr	r3, [fp, #20]
   451e0:	sub	r2, fp, #176	; 0xb0
   451e4:	cmp	r0, #1
   451e8:	blt	5aed4 <GetDataSlab+0x26d78>
   451ec:	orr	r2, r2, #4
   451f0:	ldr	lr, [fp, #12]
   451f4:	sub	r0, fp, #136	; 0x88
   451f8:	add	r4, r3, #4
   451fc:	str	r2, [sp, #84]	; 0x54
   45200:	ldr	r2, [fp, #24]
   45204:	orr	r0, r0, #4
   45208:	sub	r2, r2, #1
   4520c:	str	r2, [sp, #68]	; 0x44
   45210:	orr	r2, r8, #4
   45214:	mov	r8, #0
   45218:	str	r2, [sp, #64]	; 0x40
   4521c:	ldr	r2, [lr], #4
   45220:	str	r2, [sp, #80]	; 0x50
   45224:	b	4524c <GetDataSlab+0x110f0>
   45228:	ldr	r3, [sp, #64]	; 0x40
   4522c:	ldr	r2, [r3, r2]
   45230:	add	sl, sl, r2, lsl #2
   45234:	add	r7, r2, r7
   45238:	ldr	r2, [sp, #76]	; 0x4c
   4523c:	add	r8, r1, r8
   45240:	cmp	r8, r2
   45244:	mov	r2, #0
   45248:	bge	5b6a0 <GetDataSlab+0x27544>
   4524c:	ldr	r5, [sp, #80]	; 0x50
   45250:	ldr	r2, [sp, #72]	; 0x48
   45254:	cmp	r1, #1
   45258:	sub	ip, fp, #176	; 0xb0
   4525c:	add	r9, sl, r5, lsl #2
   45260:	add	r3, r5, r7
   45264:	blt	452b8 <GetDataSlab+0x1115c>
   45268:	ldr	r1, [sp, #88]	; 0x58
   4526c:	ldr	r5, [fp, #20]
   45270:	mov	r6, r4
   45274:	mov	r2, #0
   45278:	mov	r7, r9
   4527c:	add	r4, r1, r8
   45280:	vldr	s0, [r7]
   45284:	add	r7, r7, #4
   45288:	vcvt.u32.f32	s0, s0
   4528c:	vmov	r1, s0
   45290:	strb	r1, [r4, r2]
   45294:	add	r2, r2, #1
   45298:	ldr	r1, [r5]
   4529c:	cmp	r2, r1
   452a0:	blt	45280 <GetDataSlab+0x11124>
   452a4:	ldr	r2, [fp, #12]
   452a8:	mov	r4, r6
   452ac:	ldr	r5, [r2]
   452b0:	ldr	r2, [fp, #8]
   452b4:	ldr	r2, [r2]
   452b8:	str	r2, [sp, #72]	; 0x48
   452bc:	sub	r2, r2, r5
   452c0:	str	r5, [sp, #80]	; 0x50
   452c4:	add	sl, r9, r2, lsl #2
   452c8:	add	r7, r3, r2
   452cc:	ldr	r2, [fp, #24]
   452d0:	cmp	r2, #2
   452d4:	blt	45238 <GetDataSlab+0x110dc>
   452d8:	ldr	r9, [sp, #68]	; 0x44
   452dc:	mov	r2, #0
   452e0:	b	4530c <GetDataSlab+0x111b0>
   452e4:	ldr	r6, [ip, r2]
   452e8:	ldr	ip, [lr, r2]
   452ec:	sub	r3, r3, r5
   452f0:	mla	r3, ip, r6, r3
   452f4:	sub	ip, fp, #176	; 0xb0
   452f8:	add	r7, r3, r7
   452fc:	add	sl, sl, r3, lsl #2
   45300:	subs	r9, r9, #1
   45304:	add	r2, r2, #4
   45308:	beq	45238 <GetDataSlab+0x110dc>
   4530c:	ldr	r3, [r0, r2]
   45310:	add	r3, r3, #1
   45314:	str	r3, [r0, r2]
   45318:	ldr	r5, [r4, r2]
   4531c:	sdiv	r6, r3, r5
   45320:	mls	r3, r6, r5, r3
   45324:	cmp	r3, #0
   45328:	bne	45228 <GetDataSlab+0x110cc>
   4532c:	mov	r3, #0
   45330:	str	r3, [r0, r2]
   45334:	ldr	r3, [sp, #84]	; 0x54
   45338:	ldr	r3, [r3, r2]
   4533c:	sdiv	r5, r7, r3
   45340:	mls	r5, r5, r3, r7
   45344:	cmp	r5, #0
   45348:	bne	452e4 <GetDataSlab+0x11188>
   4534c:	ldr	r3, [lr, r2]
   45350:	cmp	r3, #0
   45354:	beq	45300 <GetDataSlab+0x111a4>
   45358:	ldr	r6, [ip, r2]
   4535c:	mla	r7, r6, r3, r7
   45360:	mul	r3, r6, r3
   45364:	b	452fc <GetDataSlab+0x111a0>
   45368:	ldr	r0, [sp, #80]	; 0x50
   4536c:	cmp	r5, #1
   45370:	add	sl, r0, r7, lsl #3
   45374:	bne	5239c <GetDataSlab+0x1e240>
   45378:	ldr	r0, [sp, #76]	; 0x4c
   4537c:	ldr	r3, [fp, #20]
   45380:	sub	r2, fp, #176	; 0xb0
   45384:	cmp	r0, #1
   45388:	blt	5aed4 <GetDataSlab+0x26d78>
   4538c:	orr	r2, r2, #4
   45390:	ldr	lr, [fp, #12]
   45394:	sub	r0, fp, #136	; 0x88
   45398:	add	r4, r3, #4
   4539c:	str	r2, [sp, #84]	; 0x54
   453a0:	ldr	r2, [fp, #24]
   453a4:	orr	r0, r0, #4
   453a8:	sub	r2, r2, #1
   453ac:	str	r2, [sp, #68]	; 0x44
   453b0:	orr	r2, r8, #4
   453b4:	mov	r8, #0
   453b8:	str	r2, [sp, #64]	; 0x40
   453bc:	ldr	r2, [lr], #4
   453c0:	str	r2, [sp, #80]	; 0x50
   453c4:	b	453ec <GetDataSlab+0x11290>
   453c8:	ldr	r3, [sp, #64]	; 0x40
   453cc:	ldr	r2, [r3, r2]
   453d0:	add	sl, sl, r2, lsl #3
   453d4:	add	r7, r2, r7
   453d8:	ldr	r2, [sp, #76]	; 0x4c
   453dc:	add	r8, r1, r8
   453e0:	cmp	r8, r2
   453e4:	mov	r2, #0
   453e8:	bge	5b6a0 <GetDataSlab+0x27544>
   453ec:	ldr	r5, [sp, #80]	; 0x50
   453f0:	ldr	r2, [sp, #72]	; 0x48
   453f4:	cmp	r1, #1
   453f8:	sub	ip, fp, #176	; 0xb0
   453fc:	add	r9, sl, r5, lsl #3
   45400:	add	r3, r5, r7
   45404:	blt	45458 <GetDataSlab+0x112fc>
   45408:	ldr	r1, [sp, #88]	; 0x58
   4540c:	ldr	r5, [fp, #20]
   45410:	mov	r6, r4
   45414:	mov	r2, #0
   45418:	mov	r7, r9
   4541c:	add	r4, r1, r8
   45420:	vldr	d16, [r7]
   45424:	add	r7, r7, #8
   45428:	vcvt.u32.f64	s0, d16
   4542c:	vmov	r1, s0
   45430:	strb	r1, [r4, r2]
   45434:	add	r2, r2, #1
   45438:	ldr	r1, [r5]
   4543c:	cmp	r2, r1
   45440:	blt	45420 <GetDataSlab+0x112c4>
   45444:	ldr	r2, [fp, #12]
   45448:	mov	r4, r6
   4544c:	ldr	r5, [r2]
   45450:	ldr	r2, [fp, #8]
   45454:	ldr	r2, [r2]
   45458:	str	r2, [sp, #72]	; 0x48
   4545c:	sub	r2, r2, r5
   45460:	str	r5, [sp, #80]	; 0x50
   45464:	add	sl, r9, r2, lsl #3
   45468:	add	r7, r3, r2
   4546c:	ldr	r2, [fp, #24]
   45470:	cmp	r2, #2
   45474:	blt	453d8 <GetDataSlab+0x1127c>
   45478:	ldr	r9, [sp, #68]	; 0x44
   4547c:	mov	r2, #0
   45480:	b	454ac <GetDataSlab+0x11350>
   45484:	ldr	r6, [ip, r2]
   45488:	ldr	ip, [lr, r2]
   4548c:	sub	r3, r3, r5
   45490:	mla	r3, ip, r6, r3
   45494:	sub	ip, fp, #176	; 0xb0
   45498:	add	r7, r3, r7
   4549c:	add	sl, sl, r3, lsl #3
   454a0:	subs	r9, r9, #1
   454a4:	add	r2, r2, #4
   454a8:	beq	453d8 <GetDataSlab+0x1127c>
   454ac:	ldr	r3, [r0, r2]
   454b0:	add	r3, r3, #1
   454b4:	str	r3, [r0, r2]
   454b8:	ldr	r5, [r4, r2]
   454bc:	sdiv	r6, r3, r5
   454c0:	mls	r3, r6, r5, r3
   454c4:	cmp	r3, #0
   454c8:	bne	453c8 <GetDataSlab+0x1126c>
   454cc:	mov	r3, #0
   454d0:	str	r3, [r0, r2]
   454d4:	ldr	r3, [sp, #84]	; 0x54
   454d8:	ldr	r3, [r3, r2]
   454dc:	sdiv	r5, r7, r3
   454e0:	mls	r5, r5, r3, r7
   454e4:	cmp	r5, #0
   454e8:	bne	45484 <GetDataSlab+0x11328>
   454ec:	ldr	r3, [lr, r2]
   454f0:	cmp	r3, #0
   454f4:	beq	454a0 <GetDataSlab+0x11344>
   454f8:	ldr	r6, [ip, r2]
   454fc:	mla	r7, r6, r3, r7
   45500:	mul	r3, r6, r3
   45504:	b	4549c <GetDataSlab+0x11340>
   45508:	ldr	r0, [sp, #80]	; 0x50
   4550c:	cmp	r7, #1
   45510:	add	r9, r0, r3, lsl #3
   45514:	bne	52550 <GetDataSlab+0x1e3f4>
   45518:	ldr	r0, [sp, #68]	; 0x44
   4551c:	sub	ip, fp, #176	; 0xb0
   45520:	cmp	r0, #1
   45524:	blt	526f0 <GetDataSlab+0x1e594>
   45528:	ldr	r2, [fp, #20]
   4552c:	ldr	sl, [fp, #12]
   45530:	sub	r0, fp, #136	; 0x88
   45534:	mov	lr, #0
   45538:	orr	r0, r0, #4
   4553c:	add	r5, r2, #4
   45540:	orr	r2, ip, #4
   45544:	ldr	r7, [sl], #4
   45548:	str	r2, [sp, #76]	; 0x4c
   4554c:	ldr	r2, [fp, #24]
   45550:	sub	r2, r2, #1
   45554:	str	r2, [sp, #60]	; 0x3c
   45558:	orr	r2, r8, #4
   4555c:	str	r2, [sp, #56]	; 0x38
   45560:	b	45588 <GetDataSlab+0x1142c>
   45564:	ldr	r2, [sp, #56]	; 0x38
   45568:	ldr	r2, [r2, r7]
   4556c:	add	r9, r9, r2, lsl #3
   45570:	add	r3, r2, r3
   45574:	ldr	r2, [sp, #68]	; 0x44
   45578:	ldr	r7, [sp, #72]	; 0x48
   4557c:	add	lr, r1, lr
   45580:	cmp	lr, r2
   45584:	bge	526f0 <GetDataSlab+0x1e594>
   45588:	ldr	r2, [sp, #64]	; 0x40
   4558c:	add	r4, r9, r7, lsl #3
   45590:	add	r8, r7, r3
   45594:	cmp	r1, #1
   45598:	blt	455e0 <GetDataSlab+0x11484>
   4559c:	ldr	r1, [sp, #88]	; 0x58
   455a0:	ldr	r2, [fp, #20]
   455a4:	mov	r6, r5
   455a8:	mov	r3, #0
   455ac:	mov	r5, r4
   455b0:	add	r7, r1, lr
   455b4:	ldrb	r1, [r5], #8
   455b8:	strb	r1, [r7, r3]
   455bc:	add	r3, r3, #1
   455c0:	ldr	r1, [r2]
   455c4:	cmp	r3, r1
   455c8:	blt	455b4 <GetDataSlab+0x11458>
   455cc:	ldr	r2, [fp, #12]
   455d0:	mov	r5, r6
   455d4:	ldr	r7, [r2]
   455d8:	ldr	r2, [fp, #8]
   455dc:	ldr	r2, [r2]
   455e0:	str	r2, [sp, #64]	; 0x40
   455e4:	sub	r2, r2, r7
   455e8:	str	r7, [sp, #72]	; 0x48
   455ec:	add	r9, r4, r2, lsl #3
   455f0:	add	r3, r8, r2
   455f4:	ldr	r2, [fp, #24]
   455f8:	cmp	r2, #2
   455fc:	blt	45574 <GetDataSlab+0x11418>
   45600:	ldr	r8, [sp, #60]	; 0x3c
   45604:	mov	r7, #0
   45608:	b	45634 <GetDataSlab+0x114d8>
   4560c:	ldr	r4, [ip, r7]
   45610:	ldr	ip, [sl, r7]
   45614:	sub	r2, r2, r6
   45618:	mla	r2, ip, r4, r2
   4561c:	sub	ip, fp, #176	; 0xb0
   45620:	add	r3, r2, r3
   45624:	add	r9, r9, r2, lsl #3
   45628:	subs	r8, r8, #1
   4562c:	add	r7, r7, #4
   45630:	beq	45574 <GetDataSlab+0x11418>
   45634:	ldr	r2, [r0, r7]
   45638:	add	r2, r2, #1
   4563c:	str	r2, [r0, r7]
   45640:	ldr	r6, [r5, r7]
   45644:	sdiv	r4, r2, r6
   45648:	mls	r2, r4, r6, r2
   4564c:	cmp	r2, #0
   45650:	bne	45564 <GetDataSlab+0x11408>
   45654:	mov	r2, #0
   45658:	str	r2, [r0, r7]
   4565c:	ldr	r2, [sp, #76]	; 0x4c
   45660:	ldr	r2, [r2, r7]
   45664:	sdiv	r4, r3, r2
   45668:	mls	r6, r4, r2, r3
   4566c:	cmp	r6, #0
   45670:	bne	4560c <GetDataSlab+0x114b0>
   45674:	ldr	r2, [sl, r7]
   45678:	cmp	r2, #0
   4567c:	beq	45628 <GetDataSlab+0x114cc>
   45680:	ldr	r6, [ip, r7]
   45684:	mla	r3, r6, r2, r3
   45688:	mul	r2, r6, r2
   4568c:	b	45624 <GetDataSlab+0x114c8>
   45690:	ldr	r0, [sp, #80]	; 0x50
   45694:	cmp	sl, #1
   45698:	add	ip, r0, r3
   4569c:	bne	52a4c <GetDataSlab+0x1e8f0>
   456a0:	ldr	r0, [sp, #76]	; 0x4c
   456a4:	ldr	r2, [fp, #12]
   456a8:	sub	r7, fp, #96	; 0x60
   456ac:	cmp	r0, #1
   456b0:	blt	5b69c <GetDataSlab+0x27540>
   456b4:	ldr	lr, [sp, #56]	; 0x38
   456b8:	mov	r1, #1
   456bc:	ldr	r8, [sp, #88]	; 0x58
   456c0:	sub	r6, fp, #240	; 0xf0
   456c4:	sub	r0, lr, #8
   456c8:	add	r1, r1, r0, lsr #3
   456cc:	lsr	r0, r0, #3
   456d0:	str	r0, [sp, #20]
   456d4:	mov	r0, #0
   456d8:	and	r4, r1, #1
   456dc:	str	r0, [sp, #72]	; 0x48
   456e0:	sub	r1, r1, r4
   456e4:	str	r4, [sp, #28]
   456e8:	str	r1, [sp, #12]
   456ec:	sub	r1, fp, #136	; 0x88
   456f0:	orr	r4, r1, #4
   456f4:	ldr	r1, [fp, #20]
   456f8:	add	sl, r1, #4
   456fc:	sub	r1, fp, #176	; 0xb0
   45700:	orr	r1, r1, #4
   45704:	str	sl, [sp, #16]
   45708:	str	r1, [sp, #84]	; 0x54
   4570c:	add	r1, r2, #4
   45710:	str	r1, [sp, #80]	; 0x50
   45714:	ldr	r1, [fp, #24]
   45718:	sub	r1, r1, #1
   4571c:	str	r1, [sp, #40]	; 0x28
   45720:	orr	r1, r7, #4
   45724:	str	r1, [sp, #32]
   45728:	lsl	r1, lr, #1
   4572c:	str	r1, [sp, #64]	; 0x40
   45730:	and	r1, lr, #1
   45734:	str	r1, [sp, #44]	; 0x2c
   45738:	bic	r1, lr, #7
   4573c:	str	r1, [sp, #24]
   45740:	mov	r1, #0
   45744:	cmp	lr, #1
   45748:	str	r1, [sp, #68]	; 0x44
   4574c:	bge	457a0 <GetDataSlab+0x11644>
   45750:	b	45958 <GetDataSlab+0x117fc>
   45754:	ldr	r0, [sp, #32]
   45758:	mov	r6, r9
   4575c:	ldr	r0, [r0, r1]
   45760:	add	ip, ip, r0
   45764:	add	r3, r0, r3
   45768:	ldr	r0, [sp, #64]	; 0x40
   4576c:	ldr	r2, [sp, #72]	; 0x48
   45770:	ldr	r1, [sp, #68]	; 0x44
   45774:	add	r8, r8, r0
   45778:	ldr	r0, [sp, #76]	; 0x4c
   4577c:	add	r2, r2, lr
   45780:	add	r1, r1, #1
   45784:	str	r2, [sp, #72]	; 0x48
   45788:	cmp	r2, r0
   4578c:	mov	r2, #0
   45790:	bge	5b6a0 <GetDataSlab+0x27544>
   45794:	cmp	lr, #1
   45798:	str	r1, [sp, #68]	; 0x44
   4579c:	blt	45958 <GetDataSlab+0x117fc>
   457a0:	ldr	r0, [fp, #12]
   457a4:	str	r8, [sp, #60]	; 0x3c
   457a8:	mov	r8, lr
   457ac:	ldr	r5, [sp, #72]	; 0x48
   457b0:	mov	r9, #0
   457b4:	cmp	r8, #8
   457b8:	ldr	lr, [r0]
   457bc:	ldr	r0, [sp, #88]	; 0x58
   457c0:	add	r5, r0, r5, lsl #1
   457c4:	add	r2, ip, lr
   457c8:	str	r5, [sp, #48]	; 0x30
   457cc:	bcs	457f0 <GetDataSlab+0x11694>
   457d0:	mov	r5, lr
   457d4:	mov	lr, r8
   457d8:	ldr	r8, [sp, #60]	; 0x3c
   457dc:	ldr	r0, [sp, #44]	; 0x2c
   457e0:	mov	r7, r9
   457e4:	cmp	r0, #0
   457e8:	bne	45904 <GetDataSlab+0x117a8>
   457ec:	b	45918 <GetDataSlab+0x117bc>
   457f0:	ldr	r5, [sp, #64]	; 0x40
   457f4:	add	r7, ip, r8
   457f8:	add	r7, r7, lr
   457fc:	mla	r0, r5, r1, r0
   45800:	mov	r5, lr
   45804:	mov	lr, r8
   45808:	ldr	r8, [sp, #60]	; 0x3c
   4580c:	cmp	r0, r7
   45810:	bcs	4582c <GetDataSlab+0x116d0>
   45814:	ldr	r0, [sp, #64]	; 0x40
   45818:	ldr	r7, [sp, #88]	; 0x58
   4581c:	mla	r0, r0, r1, r0
   45820:	add	r0, r7, r0
   45824:	cmp	r2, r0
   45828:	bcc	458f4 <GetDataSlab+0x11798>
   4582c:	ldr	r0, [sp, #20]
   45830:	mov	r1, #0
   45834:	str	r5, [sp, #36]	; 0x24
   45838:	cmp	r0, #0
   4583c:	beq	4589c <GetDataSlab+0x11740>
   45840:	ldr	sl, [sp, #12]
   45844:	mov	lr, r8
   45848:	mov	r5, #32
   4584c:	sub	r8, fp, #232	; 0xe8
   45850:	mov	r0, r2
   45854:	subs	sl, sl, #2
   45858:	ldr	r7, [r0, r1]!
   4585c:	add	r1, r1, #16
   45860:	str	r7, [fp, #-240]	; 0xffffff10
   45864:	ldr	r7, [r0, #4]
   45868:	str	r7, [fp, #-236]	; 0xffffff14
   4586c:	add	r7, lr, #16
   45870:	vld1.8	{d16}, [r6 :64]
   45874:	vmovl.u8	q8, d16
   45878:	vst1.16	{d16-d17}, [lr], r5
   4587c:	ldr	r9, [r0, #8]
   45880:	ldr	r0, [r0, #12]
   45884:	str	r0, [fp, #-228]	; 0xffffff1c
   45888:	str	r9, [fp, #-232]	; 0xffffff18
   4588c:	vld1.8	{d16}, [r8 :64]
   45890:	vmovl.u8	q8, d16
   45894:	vst1.16	{d16-d17}, [r7]
   45898:	bne	45850 <GetDataSlab+0x116f4>
   4589c:	ldr	r0, [sp, #28]
   458a0:	ldr	sl, [sp, #16]
   458a4:	ldr	r5, [sp, #36]	; 0x24
   458a8:	cmp	r0, #0
   458ac:	beq	458dc <GetDataSlab+0x11780>
   458b0:	mov	r0, r2
   458b4:	ldr	r7, [r0, r1]!
   458b8:	str	r7, [fp, #-248]	; 0xffffff08
   458bc:	ldr	r0, [r0, #4]
   458c0:	str	r0, [fp, #-244]	; 0xffffff0c
   458c4:	sub	r0, fp, #248	; 0xf8
   458c8:	vld1.8	{d16}, [r0 :64]
   458cc:	ldr	r0, [sp, #48]	; 0x30
   458d0:	add	r0, r0, r1, lsl #1
   458d4:	vmovl.u8	q8, d16
   458d8:	vst1.16	{d16-d17}, [r0]
   458dc:	ldr	r1, [sp, #24]
   458e0:	ldr	lr, [sp, #56]	; 0x38
   458e4:	ldr	r8, [sp, #60]	; 0x3c
   458e8:	cmp	lr, r1
   458ec:	mov	r9, r1
   458f0:	beq	45958 <GetDataSlab+0x117fc>
   458f4:	ldr	r0, [sp, #44]	; 0x2c
   458f8:	mov	r7, r9
   458fc:	cmp	r0, #0
   45900:	beq	45918 <GetDataSlab+0x117bc>
   45904:	ldr	r1, [sp, #48]	; 0x30
   45908:	ldrb	r0, [r2, r9]
   4590c:	orr	r7, r9, #1
   45910:	add	r2, r1, r9, lsl #1
   45914:	strh	r0, [r2]
   45918:	orr	r0, r9, #1
   4591c:	cmp	lr, r0
   45920:	beq	45958 <GetDataSlab+0x117fc>
   45924:	add	r0, r7, r5
   45928:	add	r1, r8, r7, lsl #1
   4592c:	sub	r2, lr, r7
   45930:	add	r0, ip, r0
   45934:	add	r7, r0, #1
   45938:	ldrb	r0, [r7, #-1]
   4593c:	subs	r2, r2, #2
   45940:	strh	r0, [r1]
   45944:	ldrb	r0, [r7]
   45948:	add	r7, r7, #2
   4594c:	strh	r0, [r1, #2]
   45950:	add	r1, r1, #4
   45954:	bne	45938 <GetDataSlab+0x117dc>
   45958:	ldr	r0, [sp, #52]	; 0x34
   4595c:	add	ip, ip, r0
   45960:	add	r3, r3, r0
   45964:	ldr	r0, [fp, #24]
   45968:	cmp	r0, #2
   4596c:	blt	45768 <GetDataSlab+0x1160c>
   45970:	ldr	r2, [sp, #40]	; 0x28
   45974:	mov	r1, #0
   45978:	b	459ac <GetDataSlab+0x11850>
   4597c:	ldr	r5, [sp, #80]	; 0x50
   45980:	sub	r6, fp, #176	; 0xb0
   45984:	sub	r0, r7, r0
   45988:	ldr	r6, [r6, r1]
   4598c:	ldr	r5, [r5, r1]
   45990:	mla	r0, r5, r6, r0
   45994:	add	r3, r0, r3
   45998:	add	ip, ip, r0
   4599c:	mov	r6, r9
   459a0:	subs	r2, r2, #1
   459a4:	add	r1, r1, #4
   459a8:	beq	45768 <GetDataSlab+0x1160c>
   459ac:	ldr	r0, [r4, r1]
   459b0:	mov	r9, r6
   459b4:	add	r0, r0, #1
   459b8:	str	r0, [r4, r1]
   459bc:	ldr	r7, [sl, r1]
   459c0:	sdiv	r6, r0, r7
   459c4:	mls	r0, r6, r7, r0
   459c8:	cmp	r0, #0
   459cc:	bne	45754 <GetDataSlab+0x115f8>
   459d0:	mov	r0, #0
   459d4:	str	r0, [r4, r1]
   459d8:	ldr	r0, [sp, #84]	; 0x54
   459dc:	ldr	r7, [r0, r1]
   459e0:	sdiv	r0, r3, r7
   459e4:	mls	r0, r0, r7, r3
   459e8:	cmp	r0, #0
   459ec:	bne	4597c <GetDataSlab+0x11820>
   459f0:	ldr	r0, [sp, #80]	; 0x50
   459f4:	ldr	r0, [r0, r1]
   459f8:	cmp	r0, #0
   459fc:	beq	4599c <GetDataSlab+0x11840>
   45a00:	sub	r7, fp, #176	; 0xb0
   45a04:	ldr	r7, [r7, r1]
   45a08:	mla	r3, r7, r0, r3
   45a0c:	mla	ip, r7, r0, ip
   45a10:	mov	r6, r9
   45a14:	subs	r2, r2, #1
   45a18:	add	r1, r1, #4
   45a1c:	bne	459ac <GetDataSlab+0x11850>
   45a20:	b	45768 <GetDataSlab+0x1160c>
   45a24:	ldr	r0, [sp, #80]	; 0x50
   45a28:	ldr	r7, [sp, #68]	; 0x44
   45a2c:	add	lr, r0, r1, lsl #1
   45a30:	cmp	r7, #1
   45a34:	bne	52c6c <GetDataSlab+0x1eb10>
   45a38:	ldr	r0, [sp, #76]	; 0x4c
   45a3c:	ldr	r3, [fp, #12]
   45a40:	ldr	r5, [fp, #20]
   45a44:	ldr	r7, [sp, #64]	; 0x40
   45a48:	sub	r6, fp, #96	; 0x60
   45a4c:	cmp	r0, #1
   45a50:	blt	5b69c <GetDataSlab+0x27540>
   45a54:	sub	r0, r7, #8
   45a58:	mov	r2, #1
   45a5c:	ldr	sl, [sp, #88]	; 0x58
   45a60:	mov	r9, #0
   45a64:	mov	r8, r7
   45a68:	add	r2, r2, r0, lsr #3
   45a6c:	lsr	r0, r0, #3
   45a70:	str	r0, [sp, #20]
   45a74:	and	r4, r2, #1
   45a78:	sub	r2, r2, r4
   45a7c:	str	r4, [sp, #28]
   45a80:	str	r2, [sp, #16]
   45a84:	sub	r2, fp, #136	; 0x88
   45a88:	orr	r4, r2, #4
   45a8c:	add	r2, r5, #4
   45a90:	str	r2, [sp, #84]	; 0x54
   45a94:	orr	r2, ip, #4
   45a98:	str	r2, [sp, #80]	; 0x50
   45a9c:	ldr	r2, [fp, #24]
   45aa0:	sub	r2, r2, #1
   45aa4:	str	r2, [sp, #48]	; 0x30
   45aa8:	orr	r2, r6, #4
   45aac:	str	r2, [sp, #32]
   45ab0:	ldr	r2, [r3], #4
   45ab4:	str	r3, [sp, #92]	; 0x5c
   45ab8:	add	r3, r7, r2
   45abc:	add	r0, r2, #1
   45ac0:	str	r2, [sp, #56]	; 0x38
   45ac4:	str	r3, [sp, #44]	; 0x2c
   45ac8:	and	r3, r7, #1
   45acc:	str	r0, [sp, #36]	; 0x24
   45ad0:	mov	r0, #0
   45ad4:	str	r3, [sp, #52]	; 0x34
   45ad8:	bic	r3, r7, #7
   45adc:	str	r0, [sp, #72]	; 0x48
   45ae0:	str	r3, [sp, #24]
   45ae4:	lsl	r3, r7, #1
   45ae8:	str	r3, [sp, #68]	; 0x44
   45aec:	ldr	r7, [sp, #88]	; 0x58
   45af0:	ldr	ip, [sp, #92]	; 0x5c
   45af4:	cmp	r8, #1
   45af8:	bge	45b48 <GetDataSlab+0x119ec>
   45afc:	b	45c74 <GetDataSlab+0x11b18>
   45b00:	ldr	r2, [sp, #32]
   45b04:	ldr	r0, [r2, r0]
   45b08:	add	lr, lr, r0, lsl #1
   45b0c:	add	r1, r0, r1
   45b10:	ldr	r0, [sp, #68]	; 0x44
   45b14:	add	r9, r9, r8
   45b18:	mov	r2, #0
   45b1c:	add	sl, sl, r0
   45b20:	ldr	r0, [sp, #72]	; 0x48
   45b24:	add	r0, r0, #1
   45b28:	str	r0, [sp, #72]	; 0x48
   45b2c:	ldr	r0, [sp, #76]	; 0x4c
   45b30:	cmp	r9, r0
   45b34:	bge	5b6a0 <GetDataSlab+0x27544>
   45b38:	ldr	r7, [sp, #88]	; 0x58
   45b3c:	ldr	ip, [sp, #92]	; 0x5c
   45b40:	cmp	r8, #1
   45b44:	blt	45c74 <GetDataSlab+0x11b18>
   45b48:	ldr	r0, [sp, #56]	; 0x38
   45b4c:	add	r5, r7, r9, lsl #1
   45b50:	mov	r3, #0
   45b54:	cmp	r8, #8
   45b58:	add	r6, lr, r0, lsl #1
   45b5c:	bcc	45c10 <GetDataSlab+0x11ab4>
   45b60:	ldr	r0, [sp, #68]	; 0x44
   45b64:	ldr	r2, [sp, #72]	; 0x48
   45b68:	mla	r0, r0, r2, r7
   45b6c:	ldr	r2, [sp, #44]	; 0x2c
   45b70:	add	r2, lr, r2, lsl #1
   45b74:	cmp	r0, r2
   45b78:	bcs	45b94 <GetDataSlab+0x11a38>
   45b7c:	ldr	r0, [sp, #68]	; 0x44
   45b80:	ldr	r2, [sp, #72]	; 0x48
   45b84:	mla	r0, r0, r2, r0
   45b88:	add	r0, r7, r0
   45b8c:	cmp	r0, r6
   45b90:	bhi	45c10 <GetDataSlab+0x11ab4>
   45b94:	ldr	r0, [sp, #20]
   45b98:	mov	r3, #0
   45b9c:	str	r5, [sp, #40]	; 0x28
   45ba0:	cmp	r0, #0
   45ba4:	beq	45bdc <GetDataSlab+0x11a80>
   45ba8:	ldr	r2, [sp, #16]
   45bac:	mov	ip, sl
   45bb0:	mov	r0, r6
   45bb4:	mov	r5, #32
   45bb8:	add	r7, r0, #16
   45bbc:	vld1.16	{d16-d17}, [r0], r5
   45bc0:	add	r8, ip, #16
   45bc4:	subs	r2, r2, #2
   45bc8:	add	r3, r3, #16
   45bcc:	vst1.16	{d16-d17}, [ip], r5
   45bd0:	vld1.16	{d16-d17}, [r7]
   45bd4:	vst1.16	{d16-d17}, [r8]
   45bd8:	bne	45bb8 <GetDataSlab+0x11a5c>
   45bdc:	ldr	r0, [sp, #28]
   45be0:	ldr	r5, [sp, #40]	; 0x28
   45be4:	cmp	r0, #0
   45be8:	beq	45bfc <GetDataSlab+0x11aa0>
   45bec:	add	r0, r6, r3, lsl #1
   45bf0:	vld1.16	{d16-d17}, [r0]
   45bf4:	add	r0, r5, r3, lsl #1
   45bf8:	vst1.16	{d16-d17}, [r0]
   45bfc:	ldr	r8, [sp, #64]	; 0x40
   45c00:	ldr	r3, [sp, #24]
   45c04:	ldr	ip, [sp, #92]	; 0x5c
   45c08:	cmp	r8, r3
   45c0c:	beq	45c74 <GetDataSlab+0x11b18>
   45c10:	ldr	r0, [sp, #52]	; 0x34
   45c14:	mov	r7, r3
   45c18:	cmp	r0, #0
   45c1c:	beq	45c34 <GetDataSlab+0x11ad8>
   45c20:	add	r2, r6, r3, lsl #1
   45c24:	add	r0, r5, r3, lsl #1
   45c28:	orr	r7, r3, #1
   45c2c:	ldrh	r2, [r2]
   45c30:	strh	r2, [r0]
   45c34:	orr	r0, r3, #1
   45c38:	cmp	r8, r0
   45c3c:	beq	45c74 <GetDataSlab+0x11b18>
   45c40:	ldr	r0, [sp, #36]	; 0x24
   45c44:	sub	r2, r8, r7
   45c48:	lsl	r3, r7, #1
   45c4c:	add	r0, lr, r0, lsl #1
   45c50:	add	r7, r0, r3
   45c54:	mov	r5, sl
   45c58:	subs	r2, r2, #2
   45c5c:	ldrh	r6, [r7, #-2]
   45c60:	strh	r6, [r5, r3]!
   45c64:	ldrh	r7, [r7]
   45c68:	add	r3, r3, #4
   45c6c:	strh	r7, [r5, #2]
   45c70:	bne	45c50 <GetDataSlab+0x11af4>
   45c74:	ldr	r0, [sp, #60]	; 0x3c
   45c78:	add	lr, lr, r0, lsl #1
   45c7c:	add	r1, r1, r0
   45c80:	ldr	r0, [fp, #24]
   45c84:	cmp	r0, #2
   45c88:	blt	45b10 <GetDataSlab+0x119b4>
   45c8c:	ldr	r2, [sp, #48]	; 0x30
   45c90:	mov	r0, #0
   45c94:	b	45cc0 <GetDataSlab+0x11b64>
   45c98:	sub	r5, fp, #176	; 0xb0
   45c9c:	sub	r3, r3, r7
   45ca0:	ldr	r6, [r5, r0]
   45ca4:	ldr	r5, [ip, r0]
   45ca8:	mla	r3, r5, r6, r3
   45cac:	add	r1, r3, r1
   45cb0:	add	lr, lr, r3, lsl #1
   45cb4:	subs	r2, r2, #1
   45cb8:	add	r0, r0, #4
   45cbc:	beq	45b10 <GetDataSlab+0x119b4>
   45cc0:	ldr	r3, [r4, r0]
   45cc4:	ldr	r5, [sp, #84]	; 0x54
   45cc8:	add	r3, r3, #1
   45ccc:	str	r3, [r4, r0]
   45cd0:	ldr	r7, [r5, r0]
   45cd4:	sdiv	r6, r3, r7
   45cd8:	mls	r3, r6, r7, r3
   45cdc:	cmp	r3, #0
   45ce0:	bne	45b00 <GetDataSlab+0x119a4>
   45ce4:	mov	r3, #0
   45ce8:	str	r3, [r4, r0]
   45cec:	ldr	r3, [sp, #80]	; 0x50
   45cf0:	ldr	r3, [r3, r0]
   45cf4:	sdiv	r7, r1, r3
   45cf8:	mls	r7, r7, r3, r1
   45cfc:	cmp	r7, #0
   45d00:	bne	45c98 <GetDataSlab+0x11b3c>
   45d04:	ldr	r3, [ip, r0]
   45d08:	cmp	r3, #0
   45d0c:	beq	45cb4 <GetDataSlab+0x11b58>
   45d10:	sub	r5, fp, #176	; 0xb0
   45d14:	ldr	r7, [r5, r0]
   45d18:	mla	r1, r7, r3, r1
   45d1c:	mul	r3, r7, r3
   45d20:	b	45cb0 <GetDataSlab+0x11b54>
   45d24:	ldr	r0, [sp, #80]	; 0x50
   45d28:	ldr	r7, [sp, #68]	; 0x44
   45d2c:	add	lr, r0, r1, lsl #1
   45d30:	cmp	r7, #1
   45d34:	bne	52e90 <GetDataSlab+0x1ed34>
   45d38:	ldr	r0, [sp, #76]	; 0x4c
   45d3c:	ldr	r3, [fp, #12]
   45d40:	ldr	r5, [fp, #20]
   45d44:	ldr	r7, [sp, #64]	; 0x40
   45d48:	sub	r6, fp, #96	; 0x60
   45d4c:	cmp	r0, #1
   45d50:	blt	5b69c <GetDataSlab+0x27540>
   45d54:	sub	r0, r7, #8
   45d58:	mov	r2, #1
   45d5c:	ldr	sl, [sp, #88]	; 0x58
   45d60:	mov	r9, #0
   45d64:	mov	r8, r7
   45d68:	add	r2, r2, r0, lsr #3
   45d6c:	lsr	r0, r0, #3
   45d70:	str	r0, [sp, #20]
   45d74:	and	r4, r2, #1
   45d78:	sub	r2, r2, r4
   45d7c:	str	r4, [sp, #28]
   45d80:	str	r2, [sp, #16]
   45d84:	sub	r2, fp, #136	; 0x88
   45d88:	orr	r4, r2, #4
   45d8c:	add	r2, r5, #4
   45d90:	str	r2, [sp, #84]	; 0x54
   45d94:	orr	r2, ip, #4
   45d98:	str	r2, [sp, #80]	; 0x50
   45d9c:	ldr	r2, [fp, #24]
   45da0:	sub	r2, r2, #1
   45da4:	str	r2, [sp, #48]	; 0x30
   45da8:	orr	r2, r6, #4
   45dac:	str	r2, [sp, #32]
   45db0:	ldr	r2, [r3], #4
   45db4:	str	r3, [sp, #92]	; 0x5c
   45db8:	add	r3, r7, r2
   45dbc:	add	r0, r2, #1
   45dc0:	str	r2, [sp, #56]	; 0x38
   45dc4:	str	r3, [sp, #44]	; 0x2c
   45dc8:	and	r3, r7, #1
   45dcc:	str	r0, [sp, #36]	; 0x24
   45dd0:	mov	r0, #0
   45dd4:	str	r3, [sp, #52]	; 0x34
   45dd8:	bic	r3, r7, #7
   45ddc:	str	r0, [sp, #72]	; 0x48
   45de0:	str	r3, [sp, #24]
   45de4:	lsl	r3, r7, #1
   45de8:	str	r3, [sp, #68]	; 0x44
   45dec:	ldr	r7, [sp, #88]	; 0x58
   45df0:	ldr	ip, [sp, #92]	; 0x5c
   45df4:	cmp	r8, #1
   45df8:	bge	45e48 <GetDataSlab+0x11cec>
   45dfc:	b	45f74 <GetDataSlab+0x11e18>
   45e00:	ldr	r2, [sp, #32]
   45e04:	ldr	r0, [r2, r0]
   45e08:	add	lr, lr, r0, lsl #1
   45e0c:	add	r1, r0, r1
   45e10:	ldr	r0, [sp, #68]	; 0x44
   45e14:	add	r9, r9, r8
   45e18:	mov	r2, #0
   45e1c:	add	sl, sl, r0
   45e20:	ldr	r0, [sp, #72]	; 0x48
   45e24:	add	r0, r0, #1
   45e28:	str	r0, [sp, #72]	; 0x48
   45e2c:	ldr	r0, [sp, #76]	; 0x4c
   45e30:	cmp	r9, r0
   45e34:	bge	5b6a0 <GetDataSlab+0x27544>
   45e38:	ldr	r7, [sp, #88]	; 0x58
   45e3c:	ldr	ip, [sp, #92]	; 0x5c
   45e40:	cmp	r8, #1
   45e44:	blt	45f74 <GetDataSlab+0x11e18>
   45e48:	ldr	r0, [sp, #56]	; 0x38
   45e4c:	add	r5, r7, r9, lsl #1
   45e50:	mov	r3, #0
   45e54:	cmp	r8, #8
   45e58:	add	r6, lr, r0, lsl #1
   45e5c:	bcc	45f10 <GetDataSlab+0x11db4>
   45e60:	ldr	r0, [sp, #68]	; 0x44
   45e64:	ldr	r2, [sp, #72]	; 0x48
   45e68:	mla	r0, r0, r2, r7
   45e6c:	ldr	r2, [sp, #44]	; 0x2c
   45e70:	add	r2, lr, r2, lsl #1
   45e74:	cmp	r0, r2
   45e78:	bcs	45e94 <GetDataSlab+0x11d38>
   45e7c:	ldr	r0, [sp, #68]	; 0x44
   45e80:	ldr	r2, [sp, #72]	; 0x48
   45e84:	mla	r0, r0, r2, r0
   45e88:	add	r0, r7, r0
   45e8c:	cmp	r0, r6
   45e90:	bhi	45f10 <GetDataSlab+0x11db4>
   45e94:	ldr	r0, [sp, #20]
   45e98:	mov	r3, #0
   45e9c:	str	r5, [sp, #40]	; 0x28
   45ea0:	cmp	r0, #0
   45ea4:	beq	45edc <GetDataSlab+0x11d80>
   45ea8:	ldr	r2, [sp, #16]
   45eac:	mov	ip, sl
   45eb0:	mov	r0, r6
   45eb4:	mov	r5, #32
   45eb8:	add	r7, r0, #16
   45ebc:	vld1.16	{d16-d17}, [r0], r5
   45ec0:	add	r8, ip, #16
   45ec4:	subs	r2, r2, #2
   45ec8:	add	r3, r3, #16
   45ecc:	vst1.16	{d16-d17}, [ip], r5
   45ed0:	vld1.16	{d16-d17}, [r7]
   45ed4:	vst1.16	{d16-d17}, [r8]
   45ed8:	bne	45eb8 <GetDataSlab+0x11d5c>
   45edc:	ldr	r0, [sp, #28]
   45ee0:	ldr	r5, [sp, #40]	; 0x28
   45ee4:	cmp	r0, #0
   45ee8:	beq	45efc <GetDataSlab+0x11da0>
   45eec:	add	r0, r6, r3, lsl #1
   45ef0:	vld1.16	{d16-d17}, [r0]
   45ef4:	add	r0, r5, r3, lsl #1
   45ef8:	vst1.16	{d16-d17}, [r0]
   45efc:	ldr	r8, [sp, #64]	; 0x40
   45f00:	ldr	r3, [sp, #24]
   45f04:	ldr	ip, [sp, #92]	; 0x5c
   45f08:	cmp	r8, r3
   45f0c:	beq	45f74 <GetDataSlab+0x11e18>
   45f10:	ldr	r0, [sp, #52]	; 0x34
   45f14:	mov	r7, r3
   45f18:	cmp	r0, #0
   45f1c:	beq	45f34 <GetDataSlab+0x11dd8>
   45f20:	add	r2, r6, r3, lsl #1
   45f24:	add	r0, r5, r3, lsl #1
   45f28:	orr	r7, r3, #1
   45f2c:	ldrh	r2, [r2]
   45f30:	strh	r2, [r0]
   45f34:	orr	r0, r3, #1
   45f38:	cmp	r8, r0
   45f3c:	beq	45f74 <GetDataSlab+0x11e18>
   45f40:	ldr	r0, [sp, #36]	; 0x24
   45f44:	sub	r2, r8, r7
   45f48:	lsl	r3, r7, #1
   45f4c:	add	r0, lr, r0, lsl #1
   45f50:	add	r7, r0, r3
   45f54:	mov	r5, sl
   45f58:	subs	r2, r2, #2
   45f5c:	ldrh	r6, [r7, #-2]
   45f60:	strh	r6, [r5, r3]!
   45f64:	ldrh	r7, [r7]
   45f68:	add	r3, r3, #4
   45f6c:	strh	r7, [r5, #2]
   45f70:	bne	45f50 <GetDataSlab+0x11df4>
   45f74:	ldr	r0, [sp, #60]	; 0x3c
   45f78:	add	lr, lr, r0, lsl #1
   45f7c:	add	r1, r1, r0
   45f80:	ldr	r0, [fp, #24]
   45f84:	cmp	r0, #2
   45f88:	blt	45e10 <GetDataSlab+0x11cb4>
   45f8c:	ldr	r2, [sp, #48]	; 0x30
   45f90:	mov	r0, #0
   45f94:	b	45fc0 <GetDataSlab+0x11e64>
   45f98:	sub	r5, fp, #176	; 0xb0
   45f9c:	sub	r3, r3, r7
   45fa0:	ldr	r6, [r5, r0]
   45fa4:	ldr	r5, [ip, r0]
   45fa8:	mla	r3, r5, r6, r3
   45fac:	add	r1, r3, r1
   45fb0:	add	lr, lr, r3, lsl #1
   45fb4:	subs	r2, r2, #1
   45fb8:	add	r0, r0, #4
   45fbc:	beq	45e10 <GetDataSlab+0x11cb4>
   45fc0:	ldr	r3, [r4, r0]
   45fc4:	ldr	r5, [sp, #84]	; 0x54
   45fc8:	add	r3, r3, #1
   45fcc:	str	r3, [r4, r0]
   45fd0:	ldr	r7, [r5, r0]
   45fd4:	sdiv	r6, r3, r7
   45fd8:	mls	r3, r6, r7, r3
   45fdc:	cmp	r3, #0
   45fe0:	bne	45e00 <GetDataSlab+0x11ca4>
   45fe4:	mov	r3, #0
   45fe8:	str	r3, [r4, r0]
   45fec:	ldr	r3, [sp, #80]	; 0x50
   45ff0:	ldr	r3, [r3, r0]
   45ff4:	sdiv	r7, r1, r3
   45ff8:	mls	r7, r7, r3, r1
   45ffc:	cmp	r7, #0
   46000:	bne	45f98 <GetDataSlab+0x11e3c>
   46004:	ldr	r3, [ip, r0]
   46008:	cmp	r3, #0
   4600c:	beq	45fb4 <GetDataSlab+0x11e58>
   46010:	sub	r5, fp, #176	; 0xb0
   46014:	ldr	r7, [r5, r0]
   46018:	mla	r1, r7, r3, r1
   4601c:	mul	r3, r7, r3
   46020:	b	45fb0 <GetDataSlab+0x11e54>
   46024:	ldr	r0, [sp, #80]	; 0x50
   46028:	ldr	r5, [sp, #56]	; 0x38
   4602c:	add	r4, r0, r3, lsl #2
   46030:	cmp	r5, #1
   46034:	bne	530b4 <GetDataSlab+0x1ef58>
   46038:	ldr	r0, [sp, #76]	; 0x4c
   4603c:	ldr	r2, [fp, #20]
   46040:	ldr	sl, [sp, #60]	; 0x3c
   46044:	cmp	r0, #1
   46048:	ldr	r0, [sp, #72]	; 0x48
   4604c:	blt	5b69c <GetDataSlab+0x27540>
   46050:	sub	r0, r0, #4
   46054:	mov	r1, #1
   46058:	mov	r6, r4
   4605c:	add	r1, r1, r0, lsr #2
   46060:	lsr	r0, r0, #2
   46064:	str	r0, [sp, #40]	; 0x28
   46068:	mov	r0, #0
   4606c:	and	r7, r1, #1
   46070:	str	r0, [sp, #68]	; 0x44
   46074:	sub	r1, r1, r7
   46078:	str	r7, [sp, #48]	; 0x30
   4607c:	mov	r7, #16
   46080:	str	r1, [sp, #32]
   46084:	sub	r1, fp, #136	; 0x88
   46088:	orr	r9, r1, #4
   4608c:	add	r1, r2, #4
   46090:	str	r1, [sp, #56]	; 0x38
   46094:	orr	r1, ip, #4
   46098:	str	r1, [sp, #84]	; 0x54
   4609c:	ldr	r1, [fp, #12]
   460a0:	add	r1, r1, #4
   460a4:	str	r1, [sp, #80]	; 0x50
   460a8:	ldr	r1, [fp, #24]
   460ac:	sub	r1, r1, #1
   460b0:	str	r1, [sp, #52]	; 0x34
   460b4:	sub	r1, fp, #96	; 0x60
   460b8:	orr	r1, r1, #4
   460bc:	str	r1, [sp, #36]	; 0x24
   460c0:	ldr	r1, [sp, #72]	; 0x48
   460c4:	lsl	r2, r1, #1
   460c8:	str	r2, [sp, #64]	; 0x40
   460cc:	bic	r2, r1, #3
   460d0:	str	r2, [sp, #44]	; 0x2c
   460d4:	cmp	r1, #1
   460d8:	sub	ip, fp, #176	; 0xb0
   460dc:	bge	4612c <GetDataSlab+0x11fd0>
   460e0:	b	461fc <GetDataSlab+0x120a0>
   460e4:	ldr	r0, [sp, #36]	; 0x24
   460e8:	ldr	r0, [r0, r2]
   460ec:	add	r4, r4, r0, lsl #2
   460f0:	add	r3, r0, r3
   460f4:	ldr	r0, [sp, #64]	; 0x40
   460f8:	ldr	r1, [sp, #72]	; 0x48
   460fc:	ldr	r2, [sp, #68]	; 0x44
   46100:	mov	r6, r4
   46104:	add	r8, r8, r0
   46108:	ldr	r0, [sp, #76]	; 0x4c
   4610c:	add	r2, r2, r1
   46110:	str	r2, [sp, #68]	; 0x44
   46114:	cmp	r2, r0
   46118:	mov	r2, #0
   4611c:	bge	5b6a0 <GetDataSlab+0x27544>
   46120:	cmp	r1, #1
   46124:	sub	ip, fp, #176	; 0xb0
   46128:	blt	461fc <GetDataSlab+0x120a0>
   4612c:	ldr	r0, [fp, #12]
   46130:	mov	r2, #0
   46134:	ldr	r0, [r0]
   46138:	add	lr, r6, r0, lsl #2
   4613c:	ldr	r0, [sp, #72]	; 0x48
   46140:	cmp	r0, #4
   46144:	bcc	461d8 <GetDataSlab+0x1207c>
   46148:	ldr	r0, [sp, #40]	; 0x28
   4614c:	mov	r1, #0
   46150:	cmp	r0, #0
   46154:	beq	46194 <GetDataSlab+0x12038>
   46158:	ldr	sl, [sp, #32]
   4615c:	mov	ip, r8
   46160:	mov	r2, lr
   46164:	mov	r4, #32
   46168:	add	r0, r2, #16
   4616c:	vld1.32	{d16-d17}, [r2], r4
   46170:	add	r5, ip, #8
   46174:	subs	sl, sl, #2
   46178:	add	r1, r1, #8
   4617c:	vmovn.i32	d16, q8
   46180:	vst1.16	{d16}, [ip], r7
   46184:	vld1.32	{d16-d17}, [r0]
   46188:	vmovn.i32	d16, q8
   4618c:	vst1.16	{d16}, [r5]
   46190:	bne	46168 <GetDataSlab+0x1200c>
   46194:	ldr	r0, [sp, #48]	; 0x30
   46198:	ldr	sl, [sp, #60]	; 0x3c
   4619c:	sub	ip, fp, #176	; 0xb0
   461a0:	cmp	r0, #0
   461a4:	beq	461c8 <GetDataSlab+0x1206c>
   461a8:	ldr	r0, [sp, #88]	; 0x58
   461ac:	ldr	r2, [sp, #68]	; 0x44
   461b0:	add	r0, r0, r2, lsl #1
   461b4:	add	r2, lr, r1, lsl #2
   461b8:	vld1.32	{d16-d17}, [r2]
   461bc:	add	r0, r0, r1, lsl #1
   461c0:	vmovn.i32	d16, q8
   461c4:	vst1.16	{d16}, [r0]
   461c8:	ldr	r0, [sp, #72]	; 0x48
   461cc:	ldr	r2, [sp, #44]	; 0x2c
   461d0:	cmp	r0, r2
   461d4:	beq	461fc <GetDataSlab+0x120a0>
   461d8:	mov	r0, #0
   461dc:	sub	r1, r0, r2, lsl #1
   461e0:	ldr	r0, [sp, #72]	; 0x48
   461e4:	sub	r2, r0, r2
   461e8:	ldr	r0, [lr, -r1, lsl #1]
   461ec:	subs	r2, r2, #1
   461f0:	strh	r0, [r8, -r1]
   461f4:	sub	r1, r1, #2
   461f8:	bne	461e8 <GetDataSlab+0x1208c>
   461fc:	ldr	r0, [fp, #24]
   46200:	mov	r4, r6
   46204:	add	r4, r6, sl, lsl #2
   46208:	add	r3, r3, sl
   4620c:	cmp	r0, #2
   46210:	blt	460f4 <GetDataSlab+0x11f98>
   46214:	ldr	r1, [sp, #52]	; 0x34
   46218:	ldr	lr, [sp, #56]	; 0x38
   4621c:	mov	r2, #0
   46220:	b	46250 <GetDataSlab+0x120f4>
   46224:	ldr	r7, [sp, #80]	; 0x50
   46228:	ldr	r6, [ip, r2]
   4622c:	sub	r0, r5, r0
   46230:	ldr	r7, [r7, r2]
   46234:	mla	r0, r7, r6, r0
   46238:	mov	r7, #16
   4623c:	add	r3, r0, r3
   46240:	add	r4, r4, r0, lsl #2
   46244:	subs	r1, r1, #1
   46248:	add	r2, r2, #4
   4624c:	beq	460f4 <GetDataSlab+0x11f98>
   46250:	ldr	r0, [r9, r2]
   46254:	add	r0, r0, #1
   46258:	str	r0, [r9, r2]
   4625c:	ldr	r5, [lr, r2]
   46260:	sdiv	r6, r0, r5
   46264:	mls	r0, r6, r5, r0
   46268:	cmp	r0, #0
   4626c:	bne	460e4 <GetDataSlab+0x11f88>
   46270:	mov	r0, #0
   46274:	str	r0, [r9, r2]
   46278:	ldr	r0, [sp, #84]	; 0x54
   4627c:	ldr	r5, [r0, r2]
   46280:	sdiv	r0, r3, r5
   46284:	mls	r0, r0, r5, r3
   46288:	cmp	r0, #0
   4628c:	bne	46224 <GetDataSlab+0x120c8>
   46290:	ldr	r0, [sp, #80]	; 0x50
   46294:	ldr	r0, [r0, r2]
   46298:	cmp	r0, #0
   4629c:	beq	46244 <GetDataSlab+0x120e8>
   462a0:	ldr	r7, [ip, r2]
   462a4:	mla	r3, r7, r0, r3
   462a8:	mul	r0, r7, r0
   462ac:	mov	r7, #16
   462b0:	b	46240 <GetDataSlab+0x120e4>
   462b4:	ldr	r0, [sp, #80]	; 0x50
   462b8:	ldr	r5, [sp, #56]	; 0x38
   462bc:	add	r4, r0, r3, lsl #2
   462c0:	cmp	r5, #1
   462c4:	bne	532bc <GetDataSlab+0x1f160>
   462c8:	ldr	r0, [sp, #76]	; 0x4c
   462cc:	ldr	r2, [fp, #20]
   462d0:	ldr	sl, [sp, #60]	; 0x3c
   462d4:	cmp	r0, #1
   462d8:	ldr	r0, [sp, #72]	; 0x48
   462dc:	blt	5b69c <GetDataSlab+0x27540>
   462e0:	sub	r0, r0, #4
   462e4:	mov	r1, #1
   462e8:	mov	r6, r4
   462ec:	add	r1, r1, r0, lsr #2
   462f0:	lsr	r0, r0, #2
   462f4:	str	r0, [sp, #40]	; 0x28
   462f8:	mov	r0, #0
   462fc:	and	r7, r1, #1
   46300:	str	r0, [sp, #68]	; 0x44
   46304:	sub	r1, r1, r7
   46308:	str	r7, [sp, #48]	; 0x30
   4630c:	mov	r7, #16
   46310:	str	r1, [sp, #32]
   46314:	sub	r1, fp, #136	; 0x88
   46318:	orr	r9, r1, #4
   4631c:	add	r1, r2, #4
   46320:	str	r1, [sp, #56]	; 0x38
   46324:	orr	r1, ip, #4
   46328:	str	r1, [sp, #84]	; 0x54
   4632c:	ldr	r1, [fp, #12]
   46330:	add	r1, r1, #4
   46334:	str	r1, [sp, #80]	; 0x50
   46338:	ldr	r1, [fp, #24]
   4633c:	sub	r1, r1, #1
   46340:	str	r1, [sp, #52]	; 0x34
   46344:	sub	r1, fp, #96	; 0x60
   46348:	orr	r1, r1, #4
   4634c:	str	r1, [sp, #36]	; 0x24
   46350:	ldr	r1, [sp, #72]	; 0x48
   46354:	lsl	r2, r1, #1
   46358:	str	r2, [sp, #64]	; 0x40
   4635c:	bic	r2, r1, #3
   46360:	str	r2, [sp, #44]	; 0x2c
   46364:	cmp	r1, #1
   46368:	sub	ip, fp, #176	; 0xb0
   4636c:	bge	463bc <GetDataSlab+0x12260>
   46370:	b	4648c <GetDataSlab+0x12330>
   46374:	ldr	r0, [sp, #36]	; 0x24
   46378:	ldr	r0, [r0, r2]
   4637c:	add	r4, r4, r0, lsl #2
   46380:	add	r3, r0, r3
   46384:	ldr	r0, [sp, #64]	; 0x40
   46388:	ldr	r1, [sp, #72]	; 0x48
   4638c:	ldr	r2, [sp, #68]	; 0x44
   46390:	mov	r6, r4
   46394:	add	r8, r8, r0
   46398:	ldr	r0, [sp, #76]	; 0x4c
   4639c:	add	r2, r2, r1
   463a0:	str	r2, [sp, #68]	; 0x44
   463a4:	cmp	r2, r0
   463a8:	mov	r2, #0
   463ac:	bge	5b6a0 <GetDataSlab+0x27544>
   463b0:	cmp	r1, #1
   463b4:	sub	ip, fp, #176	; 0xb0
   463b8:	blt	4648c <GetDataSlab+0x12330>
   463bc:	ldr	r0, [fp, #12]
   463c0:	mov	r2, #0
   463c4:	ldr	r0, [r0]
   463c8:	add	lr, r6, r0, lsl #2
   463cc:	ldr	r0, [sp, #72]	; 0x48
   463d0:	cmp	r0, #4
   463d4:	bcc	46468 <GetDataSlab+0x1230c>
   463d8:	ldr	r0, [sp, #40]	; 0x28
   463dc:	mov	r1, #0
   463e0:	cmp	r0, #0
   463e4:	beq	46424 <GetDataSlab+0x122c8>
   463e8:	ldr	sl, [sp, #32]
   463ec:	mov	ip, r8
   463f0:	mov	r2, lr
   463f4:	mov	r4, #32
   463f8:	add	r0, r2, #16
   463fc:	vld1.32	{d16-d17}, [r2], r4
   46400:	add	r5, ip, #8
   46404:	subs	sl, sl, #2
   46408:	add	r1, r1, #8
   4640c:	vmovn.i32	d16, q8
   46410:	vst1.16	{d16}, [ip], r7
   46414:	vld1.32	{d16-d17}, [r0]
   46418:	vmovn.i32	d16, q8
   4641c:	vst1.16	{d16}, [r5]
   46420:	bne	463f8 <GetDataSlab+0x1229c>
   46424:	ldr	r0, [sp, #48]	; 0x30
   46428:	ldr	sl, [sp, #60]	; 0x3c
   4642c:	sub	ip, fp, #176	; 0xb0
   46430:	cmp	r0, #0
   46434:	beq	46458 <GetDataSlab+0x122fc>
   46438:	ldr	r0, [sp, #88]	; 0x58
   4643c:	ldr	r2, [sp, #68]	; 0x44
   46440:	add	r0, r0, r2, lsl #1
   46444:	add	r2, lr, r1, lsl #2
   46448:	vld1.32	{d16-d17}, [r2]
   4644c:	add	r0, r0, r1, lsl #1
   46450:	vmovn.i32	d16, q8
   46454:	vst1.16	{d16}, [r0]
   46458:	ldr	r0, [sp, #72]	; 0x48
   4645c:	ldr	r2, [sp, #44]	; 0x2c
   46460:	cmp	r0, r2
   46464:	beq	4648c <GetDataSlab+0x12330>
   46468:	mov	r0, #0
   4646c:	sub	r1, r0, r2, lsl #1
   46470:	ldr	r0, [sp, #72]	; 0x48
   46474:	sub	r2, r0, r2
   46478:	ldr	r0, [lr, -r1, lsl #1]
   4647c:	subs	r2, r2, #1
   46480:	strh	r0, [r8, -r1]
   46484:	sub	r1, r1, #2
   46488:	bne	46478 <GetDataSlab+0x1231c>
   4648c:	ldr	r0, [fp, #24]
   46490:	mov	r4, r6
   46494:	add	r4, r6, sl, lsl #2
   46498:	add	r3, r3, sl
   4649c:	cmp	r0, #2
   464a0:	blt	46384 <GetDataSlab+0x12228>
   464a4:	ldr	r1, [sp, #52]	; 0x34
   464a8:	ldr	lr, [sp, #56]	; 0x38
   464ac:	mov	r2, #0
   464b0:	b	464e0 <GetDataSlab+0x12384>
   464b4:	ldr	r7, [sp, #80]	; 0x50
   464b8:	ldr	r6, [ip, r2]
   464bc:	sub	r0, r5, r0
   464c0:	ldr	r7, [r7, r2]
   464c4:	mla	r0, r7, r6, r0
   464c8:	mov	r7, #16
   464cc:	add	r3, r0, r3
   464d0:	add	r4, r4, r0, lsl #2
   464d4:	subs	r1, r1, #1
   464d8:	add	r2, r2, #4
   464dc:	beq	46384 <GetDataSlab+0x12228>
   464e0:	ldr	r0, [r9, r2]
   464e4:	add	r0, r0, #1
   464e8:	str	r0, [r9, r2]
   464ec:	ldr	r5, [lr, r2]
   464f0:	sdiv	r6, r0, r5
   464f4:	mls	r0, r6, r5, r0
   464f8:	cmp	r0, #0
   464fc:	bne	46374 <GetDataSlab+0x12218>
   46500:	mov	r0, #0
   46504:	str	r0, [r9, r2]
   46508:	ldr	r0, [sp, #84]	; 0x54
   4650c:	ldr	r5, [r0, r2]
   46510:	sdiv	r0, r3, r5
   46514:	mls	r0, r0, r5, r3
   46518:	cmp	r0, #0
   4651c:	bne	464b4 <GetDataSlab+0x12358>
   46520:	ldr	r0, [sp, #80]	; 0x50
   46524:	ldr	r0, [r0, r2]
   46528:	cmp	r0, #0
   4652c:	beq	464d4 <GetDataSlab+0x12378>
   46530:	ldr	r7, [ip, r2]
   46534:	mla	r3, r7, r0, r3
   46538:	mul	r0, r7, r0
   4653c:	mov	r7, #16
   46540:	b	464d0 <GetDataSlab+0x12374>
   46544:	ldr	r0, [sp, #80]	; 0x50
   46548:	add	lr, r0, r1, lsl #2
   4654c:	ldr	r0, [sp, #40]	; 0x28
   46550:	cmp	r0, #1
   46554:	bne	534c4 <GetDataSlab+0x1f368>
   46558:	ldr	r0, [sp, #76]	; 0x4c
   4655c:	ldr	sl, [sp, #60]	; 0x3c
   46560:	cmp	r0, #1
   46564:	blt	5b69c <GetDataSlab+0x27540>
   46568:	ldr	r3, [sp, #64]	; 0x40
   4656c:	mov	r2, #1
   46570:	mov	r6, #16
   46574:	sub	r0, r3, #4
   46578:	add	r2, r2, r0, lsr #2
   4657c:	lsr	r0, r0, #2
   46580:	str	r0, [sp, #40]	; 0x28
   46584:	mov	r0, #0
   46588:	and	r4, r2, #1
   4658c:	str	r0, [sp, #80]	; 0x50
   46590:	sub	r2, r2, r4
   46594:	str	r4, [sp, #48]	; 0x30
   46598:	str	r2, [sp, #32]
   4659c:	sub	r2, fp, #136	; 0x88
   465a0:	orr	r4, r2, #4
   465a4:	ldr	r2, [fp, #20]
   465a8:	add	r8, r2, #4
   465ac:	orr	r2, ip, #4
   465b0:	ldr	ip, [sp, #88]	; 0x58
   465b4:	str	r2, [sp, #84]	; 0x54
   465b8:	ldr	r2, [fp, #24]
   465bc:	sub	r2, r2, #1
   465c0:	str	r2, [sp, #56]	; 0x38
   465c4:	sub	r2, fp, #96	; 0x60
   465c8:	orr	r2, r2, #4
   465cc:	str	r2, [sp, #36]	; 0x24
   465d0:	lsl	r2, r3, #1
   465d4:	str	r2, [sp, #72]	; 0x48
   465d8:	bic	r2, r3, #3
   465dc:	str	r2, [sp, #44]	; 0x2c
   465e0:	ldr	r2, [sp, #92]	; 0x5c
   465e4:	ldr	r7, [r2], #4
   465e8:	str	r2, [sp, #92]	; 0x5c
   465ec:	str	r7, [sp, #68]	; 0x44
   465f0:	cmp	r3, #1
   465f4:	mov	r9, r3
   465f8:	bge	46648 <GetDataSlab+0x124ec>
   465fc:	b	46734 <GetDataSlab+0x125d8>
   46600:	ldr	r2, [sp, #36]	; 0x24
   46604:	mov	r6, #16
   46608:	ldr	r0, [r2, r0]
   4660c:	add	lr, lr, r0, lsl #2
   46610:	add	r1, r0, r1
   46614:	ldr	r0, [sp, #72]	; 0x48
   46618:	ldr	r2, [sp, #80]	; 0x50
   4661c:	mov	r3, r9
   46620:	add	ip, ip, r0
   46624:	ldr	r0, [sp, #76]	; 0x4c
   46628:	add	r2, r2, r9
   4662c:	str	r2, [sp, #80]	; 0x50
   46630:	cmp	r2, r0
   46634:	mov	r2, #0
   46638:	bge	5b6a0 <GetDataSlab+0x27544>
   4663c:	cmp	r3, #1
   46640:	mov	r9, r3
   46644:	blt	46734 <GetDataSlab+0x125d8>
   46648:	mov	r3, #0
   4664c:	cmp	r9, #4
   46650:	bcc	466fc <GetDataSlab+0x125a0>
   46654:	ldr	r0, [sp, #68]	; 0x44
   46658:	mov	r2, #0
   4665c:	add	r5, lr, r0, lsl #2
   46660:	ldr	r0, [sp, #40]	; 0x28
   46664:	str	r5, [sp, #52]	; 0x34
   46668:	cmp	r0, #0
   4666c:	beq	466b4 <GetDataSlab+0x12558>
   46670:	ldr	sl, [sp, #32]
   46674:	mov	r0, r5
   46678:	mov	r3, ip
   4667c:	mov	r5, #32
   46680:	add	r7, r0, #16
   46684:	vld1.32	{d16-d17}, [r0], r5
   46688:	add	r9, r3, #8
   4668c:	subs	sl, sl, #2
   46690:	add	r2, r2, #8
   46694:	vcvt.s32.f32	q8, q8
   46698:	vmovn.i32	d16, q8
   4669c:	vst1.16	{d16}, [r3], r6
   466a0:	vld1.32	{d16-d17}, [r7]
   466a4:	vcvt.s32.f32	q8, q8
   466a8:	vmovn.i32	d16, q8
   466ac:	vst1.16	{d16}, [r9]
   466b0:	bne	46680 <GetDataSlab+0x12524>
   466b4:	ldr	r0, [sp, #48]	; 0x30
   466b8:	ldr	sl, [sp, #60]	; 0x3c
   466bc:	cmp	r0, #0
   466c0:	beq	466ec <GetDataSlab+0x12590>
   466c4:	ldr	r0, [sp, #88]	; 0x58
   466c8:	ldr	r3, [sp, #80]	; 0x50
   466cc:	add	r0, r0, r3, lsl #1
   466d0:	ldr	r3, [sp, #52]	; 0x34
   466d4:	add	r0, r0, r2, lsl #1
   466d8:	add	r3, r3, r2, lsl #2
   466dc:	vld1.32	{d16-d17}, [r3]
   466e0:	vcvt.s32.f32	q8, q8
   466e4:	vmovn.i32	d16, q8
   466e8:	vst1.16	{d16}, [r0]
   466ec:	ldr	r9, [sp, #64]	; 0x40
   466f0:	ldr	r3, [sp, #44]	; 0x2c
   466f4:	cmp	r9, r3
   466f8:	beq	46734 <GetDataSlab+0x125d8>
   466fc:	ldr	r5, [sp, #68]	; 0x44
   46700:	mov	r0, #0
   46704:	sub	r2, r9, r3
   46708:	sub	r0, r0, r3, lsl #1
   4670c:	add	r7, lr, r5, lsl #2
   46710:	add	r3, r7, r3, lsl #2
   46714:	vldr	s0, [r3]
   46718:	add	r3, r3, #4
   4671c:	subs	r2, r2, #1
   46720:	vcvt.s32.f32	s0, s0
   46724:	vmov	r7, s0
   46728:	strh	r7, [ip, -r0]
   4672c:	sub	r0, r0, #2
   46730:	bne	46714 <GetDataSlab+0x125b8>
   46734:	ldr	r0, [fp, #24]
   46738:	add	lr, lr, sl, lsl #2
   4673c:	add	r1, r1, sl
   46740:	cmp	r0, #2
   46744:	blt	46614 <GetDataSlab+0x124b8>
   46748:	ldr	r2, [sp, #56]	; 0x38
   4674c:	mov	r0, #0
   46750:	b	46784 <GetDataSlab+0x12628>
   46754:	sub	r5, fp, #176	; 0xb0
   46758:	sub	r3, r3, r7
   4675c:	ldr	r6, [r5, r0]
   46760:	ldr	r5, [sp, #92]	; 0x5c
   46764:	ldr	r5, [r5, r0]
   46768:	mla	r3, r5, r6, r3
   4676c:	add	r1, r3, r1
   46770:	add	lr, lr, r3, lsl #2
   46774:	mov	r6, #16
   46778:	subs	r2, r2, #1
   4677c:	add	r0, r0, #4
   46780:	beq	46614 <GetDataSlab+0x124b8>
   46784:	ldr	r3, [r4, r0]
   46788:	add	r3, r3, #1
   4678c:	str	r3, [r4, r0]
   46790:	ldr	r7, [r8, r0]
   46794:	sdiv	r6, r3, r7
   46798:	mls	r3, r6, r7, r3
   4679c:	cmp	r3, #0
   467a0:	bne	46600 <GetDataSlab+0x124a4>
   467a4:	mov	r3, #0
   467a8:	str	r3, [r4, r0]
   467ac:	ldr	r3, [sp, #84]	; 0x54
   467b0:	ldr	r3, [r3, r0]
   467b4:	sdiv	r6, r1, r3
   467b8:	mls	r7, r6, r3, r1
   467bc:	cmp	r7, #0
   467c0:	bne	46754 <GetDataSlab+0x125f8>
   467c4:	ldr	r3, [sp, #92]	; 0x5c
   467c8:	ldr	r3, [r3, r0]
   467cc:	cmp	r3, #0
   467d0:	beq	46774 <GetDataSlab+0x12618>
   467d4:	sub	r5, fp, #176	; 0xb0
   467d8:	ldr	r5, [r5, r0]
   467dc:	mla	r1, r5, r3, r1
   467e0:	mul	r3, r5, r3
   467e4:	b	46770 <GetDataSlab+0x12614>
   467e8:	ldr	r0, [sp, #80]	; 0x50
   467ec:	add	r9, r0, r1, lsl #3
   467f0:	ldr	r0, [sp, #40]	; 0x28
   467f4:	cmp	r0, #1
   467f8:	bne	53704 <GetDataSlab+0x1f5a8>
   467fc:	ldr	r0, [sp, #76]	; 0x4c
   46800:	ldr	r2, [sp, #88]	; 0x58
   46804:	ldr	r4, [fp, #12]
   46808:	sub	r6, fp, #96	; 0x60
   4680c:	cmp	r0, #1
   46810:	blt	5b69c <GetDataSlab+0x27540>
   46814:	mov	r3, ip
   46818:	ldr	r7, [fp, #20]
   4681c:	add	r2, r2, #2
   46820:	sub	r0, fp, #136	; 0x88
   46824:	mov	r8, #0
   46828:	orr	r3, r3, #4
   4682c:	str	r2, [sp, #84]	; 0x54
   46830:	ldr	r2, [r4], #4
   46834:	orr	r0, r0, #4
   46838:	str	r3, [sp, #92]	; 0x5c
   4683c:	ldr	r3, [fp, #24]
   46840:	add	ip, r7, #4
   46844:	str	r2, [sp, #56]	; 0x38
   46848:	add	r2, r2, #1
   4684c:	sub	r3, r3, #1
   46850:	str	r2, [sp, #52]	; 0x34
   46854:	str	r3, [sp, #60]	; 0x3c
   46858:	orr	r3, r6, #4
   4685c:	str	r3, [sp, #48]	; 0x30
   46860:	ldr	r3, [sp, #64]	; 0x40
   46864:	and	r7, r3, #1
   46868:	lsl	r5, r3, #1
   4686c:	sub	lr, r3, r7
   46870:	str	r7, [sp, #68]	; 0x44
   46874:	str	r5, [sp, #80]	; 0x50
   46878:	cmp	r3, #1
   4687c:	bge	468c4 <GetDataSlab+0x12768>
   46880:	b	46944 <GetDataSlab+0x127e8>
   46884:	ldr	r3, [sp, #48]	; 0x30
   46888:	ldr	r2, [r3, r2]
   4688c:	add	r9, r9, r2, lsl #3
   46890:	add	r1, r2, r1
   46894:	ldr	r2, [sp, #80]	; 0x50
   46898:	ldr	r3, [sp, #84]	; 0x54
   4689c:	add	r3, r3, r2
   468a0:	ldr	r2, [sp, #76]	; 0x4c
   468a4:	str	r3, [sp, #84]	; 0x54
   468a8:	ldr	r3, [sp, #64]	; 0x40
   468ac:	add	r8, r8, r3
   468b0:	cmp	r8, r2
   468b4:	mov	r2, #0
   468b8:	bge	5b6a0 <GetDataSlab+0x27544>
   468bc:	cmp	r3, #1
   468c0:	blt	46944 <GetDataSlab+0x127e8>
   468c4:	mov	r2, #0
   468c8:	beq	46910 <GetDataSlab+0x127b4>
   468cc:	ldr	r2, [sp, #52]	; 0x34
   468d0:	ldr	r6, [sp, #84]	; 0x54
   468d4:	add	r3, r9, r2, lsl #3
   468d8:	mov	r2, #0
   468dc:	vldr	d16, [r3, #-8]
   468e0:	add	r2, r2, #2
   468e4:	cmp	lr, r2
   468e8:	vcvt.s32.f64	s0, d16
   468ec:	vmov	r7, s0
   468f0:	strh	r7, [r6, #-2]
   468f4:	vldr	d16, [r3]
   468f8:	add	r3, r3, #16
   468fc:	vcvt.s32.f64	s0, d16
   46900:	vmov	r7, s0
   46904:	strh	r7, [r6]
   46908:	add	r6, r6, #4
   4690c:	bne	468dc <GetDataSlab+0x12780>
   46910:	ldr	r3, [sp, #68]	; 0x44
   46914:	cmp	r3, #0
   46918:	beq	46944 <GetDataSlab+0x127e8>
   4691c:	ldr	r3, [sp, #56]	; 0x38
   46920:	ldr	r5, [sp, #88]	; 0x58
   46924:	add	r3, r9, r3, lsl #3
   46928:	add	r6, r5, r8, lsl #1
   4692c:	add	r3, r3, r2, lsl #3
   46930:	add	r2, r6, r2, lsl #1
   46934:	vldr	d16, [r3]
   46938:	vcvt.s32.f64	s0, d16
   4693c:	vmov	r3, s0
   46940:	strh	r3, [r2]
   46944:	ldr	r2, [sp, #72]	; 0x48
   46948:	add	r9, r9, r2, lsl #3
   4694c:	add	r1, r1, r2
   46950:	ldr	r2, [fp, #24]
   46954:	cmp	r2, #2
   46958:	blt	46894 <GetDataSlab+0x12738>
   4695c:	ldr	r3, [sp, #60]	; 0x3c
   46960:	mov	r2, #0
   46964:	b	46990 <GetDataSlab+0x12834>
   46968:	sub	r5, fp, #176	; 0xb0
   4696c:	ldr	r7, [r4, r2]
   46970:	sub	r6, r6, sl
   46974:	ldr	r5, [r5, r2]
   46978:	mla	r5, r7, r5, r6
   4697c:	add	r1, r5, r1
   46980:	add	r9, r9, r5, lsl #3
   46984:	subs	r3, r3, #1
   46988:	add	r2, r2, #4
   4698c:	beq	46894 <GetDataSlab+0x12738>
   46990:	ldr	r6, [r0, r2]
   46994:	add	r6, r6, #1
   46998:	str	r6, [r0, r2]
   4699c:	ldr	r7, [ip, r2]
   469a0:	sdiv	r5, r6, r7
   469a4:	mls	r5, r5, r7, r6
   469a8:	cmp	r5, #0
   469ac:	bne	46884 <GetDataSlab+0x12728>
   469b0:	mov	r5, #0
   469b4:	str	r5, [r0, r2]
   469b8:	ldr	r5, [sp, #92]	; 0x5c
   469bc:	ldr	r6, [r5, r2]
   469c0:	sdiv	r5, r1, r6
   469c4:	mls	sl, r5, r6, r1
   469c8:	cmp	sl, #0
   469cc:	bne	46968 <GetDataSlab+0x1280c>
   469d0:	ldr	r6, [r4, r2]
   469d4:	cmp	r6, #0
   469d8:	beq	46984 <GetDataSlab+0x12828>
   469dc:	sub	r5, fp, #176	; 0xb0
   469e0:	ldr	r5, [r5, r2]
   469e4:	mla	r1, r5, r6, r1
   469e8:	mul	r5, r5, r6
   469ec:	b	46980 <GetDataSlab+0x12824>
   469f0:	ldr	r0, [sp, #80]	; 0x50
   469f4:	ldr	r7, [sp, #60]	; 0x3c
   469f8:	add	lr, r0, r1, lsl #3
   469fc:	cmp	r7, #1
   46a00:	bne	53948 <GetDataSlab+0x1f7ec>
   46a04:	ldr	r0, [sp, #68]	; 0x44
   46a08:	ldr	r3, [fp, #20]
   46a0c:	ldr	r9, [sp, #56]	; 0x38
   46a10:	cmp	r0, #1
   46a14:	blt	53b60 <GetDataSlab+0x1fa04>
   46a18:	sub	r0, r9, #2
   46a1c:	mov	r2, #1
   46a20:	ldr	sl, [sp, #44]	; 0x2c
   46a24:	add	r2, r2, r0, lsr #1
   46a28:	lsr	r0, r0, #1
   46a2c:	str	r0, [sp, #32]
   46a30:	mov	r0, #0
   46a34:	and	r4, r2, #1
   46a38:	str	r0, [sp, #64]	; 0x40
   46a3c:	sub	r2, r2, r4
   46a40:	str	r4, [sp, #40]	; 0x28
   46a44:	str	r2, [sp, #24]
   46a48:	sub	r2, fp, #136	; 0x88
   46a4c:	orr	r4, r2, #4
   46a50:	add	r2, r3, #4
   46a54:	mov	r3, #32
   46a58:	str	r2, [sp, #76]	; 0x4c
   46a5c:	orr	r2, ip, #4
   46a60:	mov	ip, r8
   46a64:	ldr	r8, [fp, #12]
   46a68:	str	r2, [sp, #72]	; 0x48
   46a6c:	ldr	r2, [fp, #24]
   46a70:	sub	r2, r2, #1
   46a74:	str	r2, [sp, #48]	; 0x30
   46a78:	sub	r2, fp, #96	; 0x60
   46a7c:	orr	r2, r2, #4
   46a80:	str	r2, [sp, #28]
   46a84:	lsl	r2, r9, #1
   46a88:	str	r2, [sp, #60]	; 0x3c
   46a8c:	bic	r2, r9, #1
   46a90:	str	r2, [sp, #36]	; 0x24
   46a94:	ldr	r2, [r8], #4
   46a98:	str	r2, [sp, #52]	; 0x34
   46a9c:	cmp	r9, #1
   46aa0:	bge	46ae4 <GetDataSlab+0x12988>
   46aa4:	b	46bc0 <GetDataSlab+0x12a64>
   46aa8:	ldr	r2, [sp, #28]
   46aac:	ldr	r0, [r2, r0]
   46ab0:	add	lr, lr, r0, lsl #3
   46ab4:	add	r1, r0, r1
   46ab8:	ldr	r0, [sp, #60]	; 0x3c
   46abc:	ldr	r2, [sp, #64]	; 0x40
   46ac0:	mov	r3, #32
   46ac4:	add	ip, ip, r0
   46ac8:	ldr	r0, [sp, #68]	; 0x44
   46acc:	add	r2, r2, r9
   46ad0:	str	r2, [sp, #64]	; 0x40
   46ad4:	cmp	r2, r0
   46ad8:	bge	53b60 <GetDataSlab+0x1fa04>
   46adc:	cmp	r9, #1
   46ae0:	blt	46bc0 <GetDataSlab+0x12a64>
   46ae4:	mov	r6, #0
   46ae8:	beq	46b94 <GetDataSlab+0x12a38>
   46aec:	ldr	r0, [sp, #52]	; 0x34
   46af0:	mov	r2, #0
   46af4:	add	r7, lr, r0, lsl #3
   46af8:	ldr	r0, [sp, #32]
   46afc:	cmp	r0, #0
   46b00:	beq	46b50 <GetDataSlab+0x129f4>
   46b04:	ldr	r0, [sp, #24]
   46b08:	mov	r6, ip
   46b0c:	mov	sl, r7
   46b10:	mov	r9, r7
   46b14:	vld1.64	{d16-d17}, [r9], r3
   46b18:	add	r5, sl, #16
   46b1c:	subs	r0, r0, #2
   46b20:	add	r2, r2, #4
   46b24:	mov	sl, r9
   46b28:	vmovn.i64	d16, q8
   46b2c:	vuzp.16	d16, d17
   46b30:	vst1.32	{d16[0]}, [r6]
   46b34:	vld1.64	{d16-d17}, [r5]
   46b38:	add	r5, r6, #4
   46b3c:	add	r6, r6, #8
   46b40:	vmovn.i64	d16, q8
   46b44:	vuzp.16	d16, d17
   46b48:	vst1.32	{d16[0]}, [r5]
   46b4c:	bne	46b14 <GetDataSlab+0x129b8>
   46b50:	ldr	r0, [sp, #40]	; 0x28
   46b54:	ldr	sl, [sp, #44]	; 0x2c
   46b58:	cmp	r0, #0
   46b5c:	beq	46b84 <GetDataSlab+0x12a28>
   46b60:	add	r5, r7, r2, lsl #3
   46b64:	ldr	r0, [sp, #88]	; 0x58
   46b68:	ldr	r3, [sp, #64]	; 0x40
   46b6c:	vld1.64	{d16-d17}, [r5]
   46b70:	add	r0, r0, r3, lsl #1
   46b74:	add	r0, r0, r2, lsl #1
   46b78:	vmovn.i64	d16, q8
   46b7c:	vuzp.16	d16, d17
   46b80:	vst1.32	{d16[0]}, [r0]
   46b84:	ldr	r9, [sp, #56]	; 0x38
   46b88:	ldr	r6, [sp, #36]	; 0x24
   46b8c:	cmp	r9, r6
   46b90:	beq	46bc0 <GetDataSlab+0x12a64>
   46b94:	ldr	r3, [sp, #52]	; 0x34
   46b98:	mov	r0, #0
   46b9c:	sub	r2, r9, r6
   46ba0:	sub	r0, r0, r6, lsl #1
   46ba4:	add	r5, lr, r3, lsl #3
   46ba8:	add	r6, r5, r6, lsl #3
   46bac:	ldrh	r5, [r6], #8
   46bb0:	subs	r2, r2, #1
   46bb4:	strh	r5, [ip, -r0]
   46bb8:	sub	r0, r0, #2
   46bbc:	bne	46bac <GetDataSlab+0x12a50>
   46bc0:	ldr	r0, [fp, #24]
   46bc4:	add	lr, lr, sl, lsl #3
   46bc8:	add	r1, r1, sl
   46bcc:	cmp	r0, #2
   46bd0:	blt	46ab8 <GetDataSlab+0x1295c>
   46bd4:	ldr	r2, [sp, #48]	; 0x30
   46bd8:	mov	r0, #0
   46bdc:	b	46c08 <GetDataSlab+0x12aac>
   46be0:	sub	r3, fp, #176	; 0xb0
   46be4:	sub	r5, r6, r5
   46be8:	ldr	r7, [r3, r0]
   46bec:	ldr	r3, [r8, r0]
   46bf0:	mla	r3, r3, r7, r5
   46bf4:	add	r1, r3, r1
   46bf8:	add	lr, lr, r3, lsl #3
   46bfc:	subs	r2, r2, #1
   46c00:	add	r0, r0, #4
   46c04:	beq	46ab8 <GetDataSlab+0x1295c>
   46c08:	ldr	r5, [r4, r0]
   46c0c:	ldr	r3, [sp, #76]	; 0x4c
   46c10:	add	r5, r5, #1
   46c14:	str	r5, [r4, r0]
   46c18:	ldr	r6, [r3, r0]
   46c1c:	sdiv	r7, r5, r6
   46c20:	mls	r5, r7, r6, r5
   46c24:	cmp	r5, #0
   46c28:	bne	46aa8 <GetDataSlab+0x1294c>
   46c2c:	mov	r3, #0
   46c30:	str	r3, [r4, r0]
   46c34:	ldr	r3, [sp, #72]	; 0x48
   46c38:	ldr	r6, [r3, r0]
   46c3c:	sdiv	r5, r1, r6
   46c40:	mls	r5, r5, r6, r1
   46c44:	cmp	r5, #0
   46c48:	bne	46be0 <GetDataSlab+0x12a84>
   46c4c:	ldr	r5, [r8, r0]
   46c50:	cmp	r5, #0
   46c54:	beq	46bfc <GetDataSlab+0x12aa0>
   46c58:	sub	r3, fp, #176	; 0xb0
   46c5c:	ldr	r3, [r3, r0]
   46c60:	mla	r1, r3, r5, r1
   46c64:	mul	r3, r3, r5
   46c68:	b	46bf8 <GetDataSlab+0x12a9c>
   46c6c:	ldr	r0, [sp, #80]	; 0x50
   46c70:	cmp	sl, #1
   46c74:	add	ip, r0, r3
   46c78:	bne	53fa4 <GetDataSlab+0x1fe48>
   46c7c:	ldr	r0, [sp, #76]	; 0x4c
   46c80:	ldr	r2, [fp, #12]
   46c84:	sub	r7, fp, #96	; 0x60
   46c88:	cmp	r0, #1
   46c8c:	blt	5aed4 <GetDataSlab+0x26d78>
   46c90:	ldr	lr, [sp, #56]	; 0x38
   46c94:	mov	r1, #1
   46c98:	ldr	r8, [sp, #88]	; 0x58
   46c9c:	sub	r6, fp, #192	; 0xc0
   46ca0:	sub	r0, lr, #8
   46ca4:	add	r1, r1, r0, lsr #3
   46ca8:	lsr	r0, r0, #3
   46cac:	str	r0, [sp, #20]
   46cb0:	mov	r0, #0
   46cb4:	and	r4, r1, #1
   46cb8:	str	r0, [sp, #72]	; 0x48
   46cbc:	sub	r1, r1, r4
   46cc0:	str	r4, [sp, #28]
   46cc4:	str	r1, [sp, #12]
   46cc8:	sub	r1, fp, #136	; 0x88
   46ccc:	orr	r4, r1, #4
   46cd0:	ldr	r1, [fp, #20]
   46cd4:	add	sl, r1, #4
   46cd8:	sub	r1, fp, #176	; 0xb0
   46cdc:	orr	r1, r1, #4
   46ce0:	str	sl, [sp, #16]
   46ce4:	str	r1, [sp, #84]	; 0x54
   46ce8:	add	r1, r2, #4
   46cec:	str	r1, [sp, #80]	; 0x50
   46cf0:	ldr	r1, [fp, #24]
   46cf4:	sub	r1, r1, #1
   46cf8:	str	r1, [sp, #40]	; 0x28
   46cfc:	orr	r1, r7, #4
   46d00:	str	r1, [sp, #32]
   46d04:	lsl	r1, lr, #1
   46d08:	str	r1, [sp, #64]	; 0x40
   46d0c:	and	r1, lr, #1
   46d10:	str	r1, [sp, #44]	; 0x2c
   46d14:	bic	r1, lr, #7
   46d18:	str	r1, [sp, #24]
   46d1c:	mov	r1, #0
   46d20:	cmp	lr, #1
   46d24:	str	r1, [sp, #68]	; 0x44
   46d28:	bge	46d7c <GetDataSlab+0x12c20>
   46d2c:	b	46f34 <GetDataSlab+0x12dd8>
   46d30:	ldr	r0, [sp, #32]
   46d34:	mov	r6, r9
   46d38:	ldr	r0, [r0, r1]
   46d3c:	add	ip, ip, r0
   46d40:	add	r3, r0, r3
   46d44:	ldr	r0, [sp, #64]	; 0x40
   46d48:	ldr	r2, [sp, #72]	; 0x48
   46d4c:	ldr	r1, [sp, #68]	; 0x44
   46d50:	add	r8, r8, r0
   46d54:	ldr	r0, [sp, #76]	; 0x4c
   46d58:	add	r2, r2, lr
   46d5c:	add	r1, r1, #1
   46d60:	str	r2, [sp, #72]	; 0x48
   46d64:	cmp	r2, r0
   46d68:	mov	r2, #0
   46d6c:	bge	5b6a0 <GetDataSlab+0x27544>
   46d70:	cmp	lr, #1
   46d74:	str	r1, [sp, #68]	; 0x44
   46d78:	blt	46f34 <GetDataSlab+0x12dd8>
   46d7c:	ldr	r0, [fp, #12]
   46d80:	str	r8, [sp, #60]	; 0x3c
   46d84:	mov	r8, lr
   46d88:	ldr	r5, [sp, #72]	; 0x48
   46d8c:	mov	r9, #0
   46d90:	cmp	r8, #8
   46d94:	ldr	lr, [r0]
   46d98:	ldr	r0, [sp, #88]	; 0x58
   46d9c:	add	r5, r0, r5, lsl #1
   46da0:	add	r2, ip, lr
   46da4:	str	r5, [sp, #48]	; 0x30
   46da8:	bcs	46dcc <GetDataSlab+0x12c70>
   46dac:	mov	r5, lr
   46db0:	mov	lr, r8
   46db4:	ldr	r8, [sp, #60]	; 0x3c
   46db8:	ldr	r0, [sp, #44]	; 0x2c
   46dbc:	mov	r7, r9
   46dc0:	cmp	r0, #0
   46dc4:	bne	46ee0 <GetDataSlab+0x12d84>
   46dc8:	b	46ef4 <GetDataSlab+0x12d98>
   46dcc:	ldr	r5, [sp, #64]	; 0x40
   46dd0:	add	r7, ip, r8
   46dd4:	add	r7, r7, lr
   46dd8:	mla	r0, r5, r1, r0
   46ddc:	mov	r5, lr
   46de0:	mov	lr, r8
   46de4:	ldr	r8, [sp, #60]	; 0x3c
   46de8:	cmp	r0, r7
   46dec:	bcs	46e08 <GetDataSlab+0x12cac>
   46df0:	ldr	r0, [sp, #64]	; 0x40
   46df4:	ldr	r7, [sp, #88]	; 0x58
   46df8:	mla	r0, r0, r1, r0
   46dfc:	add	r0, r7, r0
   46e00:	cmp	r2, r0
   46e04:	bcc	46ed0 <GetDataSlab+0x12d74>
   46e08:	ldr	r0, [sp, #20]
   46e0c:	mov	r1, #0
   46e10:	str	r5, [sp, #36]	; 0x24
   46e14:	cmp	r0, #0
   46e18:	beq	46e78 <GetDataSlab+0x12d1c>
   46e1c:	ldr	sl, [sp, #12]
   46e20:	mov	lr, r8
   46e24:	mov	r5, #32
   46e28:	sub	r8, fp, #184	; 0xb8
   46e2c:	mov	r0, r2
   46e30:	subs	sl, sl, #2
   46e34:	ldr	r7, [r0, r1]!
   46e38:	add	r1, r1, #16
   46e3c:	str	r7, [fp, #-192]	; 0xffffff40
   46e40:	ldr	r7, [r0, #4]
   46e44:	str	r7, [fp, #-188]	; 0xffffff44
   46e48:	add	r7, lr, #16
   46e4c:	vld1.8	{d16}, [r6 :64]
   46e50:	vmovl.u8	q8, d16
   46e54:	vst1.16	{d16-d17}, [lr], r5
   46e58:	ldr	r9, [r0, #8]
   46e5c:	ldr	r0, [r0, #12]
   46e60:	str	r0, [fp, #-180]	; 0xffffff4c
   46e64:	str	r9, [fp, #-184]	; 0xffffff48
   46e68:	vld1.8	{d16}, [r8 :64]
   46e6c:	vmovl.u8	q8, d16
   46e70:	vst1.16	{d16-d17}, [r7]
   46e74:	bne	46e2c <GetDataSlab+0x12cd0>
   46e78:	ldr	r0, [sp, #28]
   46e7c:	ldr	sl, [sp, #16]
   46e80:	ldr	r5, [sp, #36]	; 0x24
   46e84:	cmp	r0, #0
   46e88:	beq	46eb8 <GetDataSlab+0x12d5c>
   46e8c:	mov	r0, r2
   46e90:	ldr	r7, [r0, r1]!
   46e94:	str	r7, [fp, #-200]	; 0xffffff38
   46e98:	ldr	r0, [r0, #4]
   46e9c:	str	r0, [fp, #-196]	; 0xffffff3c
   46ea0:	sub	r0, fp, #200	; 0xc8
   46ea4:	vld1.8	{d16}, [r0 :64]
   46ea8:	ldr	r0, [sp, #48]	; 0x30
   46eac:	add	r0, r0, r1, lsl #1
   46eb0:	vmovl.u8	q8, d16
   46eb4:	vst1.16	{d16-d17}, [r0]
   46eb8:	ldr	r1, [sp, #24]
   46ebc:	ldr	lr, [sp, #56]	; 0x38
   46ec0:	ldr	r8, [sp, #60]	; 0x3c
   46ec4:	cmp	lr, r1
   46ec8:	mov	r9, r1
   46ecc:	beq	46f34 <GetDataSlab+0x12dd8>
   46ed0:	ldr	r0, [sp, #44]	; 0x2c
   46ed4:	mov	r7, r9
   46ed8:	cmp	r0, #0
   46edc:	beq	46ef4 <GetDataSlab+0x12d98>
   46ee0:	ldr	r1, [sp, #48]	; 0x30
   46ee4:	ldrb	r0, [r2, r9]
   46ee8:	orr	r7, r9, #1
   46eec:	add	r2, r1, r9, lsl #1
   46ef0:	strh	r0, [r2]
   46ef4:	orr	r0, r9, #1
   46ef8:	cmp	lr, r0
   46efc:	beq	46f34 <GetDataSlab+0x12dd8>
   46f00:	add	r0, r7, r5
   46f04:	add	r1, r8, r7, lsl #1
   46f08:	sub	r2, lr, r7
   46f0c:	add	r0, ip, r0
   46f10:	add	r7, r0, #1
   46f14:	ldrb	r0, [r7, #-1]
   46f18:	subs	r2, r2, #2
   46f1c:	strh	r0, [r1]
   46f20:	ldrb	r0, [r7]
   46f24:	add	r7, r7, #2
   46f28:	strh	r0, [r1, #2]
   46f2c:	add	r1, r1, #4
   46f30:	bne	46f14 <GetDataSlab+0x12db8>
   46f34:	ldr	r0, [sp, #52]	; 0x34
   46f38:	add	ip, ip, r0
   46f3c:	add	r3, r3, r0
   46f40:	ldr	r0, [fp, #24]
   46f44:	cmp	r0, #2
   46f48:	blt	46d44 <GetDataSlab+0x12be8>
   46f4c:	ldr	r2, [sp, #40]	; 0x28
   46f50:	mov	r1, #0
   46f54:	b	46f88 <GetDataSlab+0x12e2c>
   46f58:	ldr	r5, [sp, #80]	; 0x50
   46f5c:	sub	r6, fp, #176	; 0xb0
   46f60:	sub	r0, r7, r0
   46f64:	ldr	r6, [r6, r1]
   46f68:	ldr	r5, [r5, r1]
   46f6c:	mla	r0, r5, r6, r0
   46f70:	add	r3, r0, r3
   46f74:	add	ip, ip, r0
   46f78:	mov	r6, r9
   46f7c:	subs	r2, r2, #1
   46f80:	add	r1, r1, #4
   46f84:	beq	46d44 <GetDataSlab+0x12be8>
   46f88:	ldr	r0, [r4, r1]
   46f8c:	mov	r9, r6
   46f90:	add	r0, r0, #1
   46f94:	str	r0, [r4, r1]
   46f98:	ldr	r7, [sl, r1]
   46f9c:	sdiv	r6, r0, r7
   46fa0:	mls	r0, r6, r7, r0
   46fa4:	cmp	r0, #0
   46fa8:	bne	46d30 <GetDataSlab+0x12bd4>
   46fac:	mov	r0, #0
   46fb0:	str	r0, [r4, r1]
   46fb4:	ldr	r0, [sp, #84]	; 0x54
   46fb8:	ldr	r7, [r0, r1]
   46fbc:	sdiv	r0, r3, r7
   46fc0:	mls	r0, r0, r7, r3
   46fc4:	cmp	r0, #0
   46fc8:	bne	46f58 <GetDataSlab+0x12dfc>
   46fcc:	ldr	r0, [sp, #80]	; 0x50
   46fd0:	ldr	r0, [r0, r1]
   46fd4:	cmp	r0, #0
   46fd8:	beq	46f78 <GetDataSlab+0x12e1c>
   46fdc:	sub	r7, fp, #176	; 0xb0
   46fe0:	ldr	r7, [r7, r1]
   46fe4:	mla	r3, r7, r0, r3
   46fe8:	mla	ip, r7, r0, ip
   46fec:	mov	r6, r9
   46ff0:	subs	r2, r2, #1
   46ff4:	add	r1, r1, #4
   46ff8:	bne	46f88 <GetDataSlab+0x12e2c>
   46ffc:	b	46d44 <GetDataSlab+0x12be8>
   47000:	ldr	r0, [sp, #80]	; 0x50
   47004:	ldr	r7, [sp, #68]	; 0x44
   47008:	add	lr, r0, r1, lsl #1
   4700c:	cmp	r7, #1
   47010:	bne	541c4 <GetDataSlab+0x20068>
   47014:	ldr	r0, [sp, #76]	; 0x4c
   47018:	ldr	r3, [fp, #12]
   4701c:	ldr	r5, [fp, #20]
   47020:	ldr	r7, [sp, #64]	; 0x40
   47024:	sub	r6, fp, #96	; 0x60
   47028:	cmp	r0, #1
   4702c:	blt	5b69c <GetDataSlab+0x27540>
   47030:	sub	r0, r7, #8
   47034:	mov	r2, #1
   47038:	ldr	sl, [sp, #88]	; 0x58
   4703c:	mov	r9, #0
   47040:	mov	r8, r7
   47044:	add	r2, r2, r0, lsr #3
   47048:	lsr	r0, r0, #3
   4704c:	str	r0, [sp, #20]
   47050:	and	r4, r2, #1
   47054:	sub	r2, r2, r4
   47058:	str	r4, [sp, #28]
   4705c:	str	r2, [sp, #16]
   47060:	sub	r2, fp, #136	; 0x88
   47064:	orr	r4, r2, #4
   47068:	add	r2, r5, #4
   4706c:	str	r2, [sp, #84]	; 0x54
   47070:	orr	r2, ip, #4
   47074:	str	r2, [sp, #80]	; 0x50
   47078:	ldr	r2, [fp, #24]
   4707c:	sub	r2, r2, #1
   47080:	str	r2, [sp, #48]	; 0x30
   47084:	orr	r2, r6, #4
   47088:	str	r2, [sp, #32]
   4708c:	ldr	r2, [r3], #4
   47090:	str	r3, [sp, #92]	; 0x5c
   47094:	add	r3, r7, r2
   47098:	add	r0, r2, #1
   4709c:	str	r2, [sp, #56]	; 0x38
   470a0:	str	r3, [sp, #44]	; 0x2c
   470a4:	and	r3, r7, #1
   470a8:	str	r0, [sp, #36]	; 0x24
   470ac:	mov	r0, #0
   470b0:	str	r3, [sp, #52]	; 0x34
   470b4:	bic	r3, r7, #7
   470b8:	str	r0, [sp, #72]	; 0x48
   470bc:	str	r3, [sp, #24]
   470c0:	lsl	r3, r7, #1
   470c4:	str	r3, [sp, #68]	; 0x44
   470c8:	ldr	r7, [sp, #88]	; 0x58
   470cc:	ldr	ip, [sp, #92]	; 0x5c
   470d0:	cmp	r8, #1
   470d4:	bge	47124 <GetDataSlab+0x12fc8>
   470d8:	b	47250 <GetDataSlab+0x130f4>
   470dc:	ldr	r2, [sp, #32]
   470e0:	ldr	r0, [r2, r0]
   470e4:	add	lr, lr, r0, lsl #1
   470e8:	add	r1, r0, r1
   470ec:	ldr	r0, [sp, #68]	; 0x44
   470f0:	add	r9, r9, r8
   470f4:	mov	r2, #0
   470f8:	add	sl, sl, r0
   470fc:	ldr	r0, [sp, #72]	; 0x48
   47100:	add	r0, r0, #1
   47104:	str	r0, [sp, #72]	; 0x48
   47108:	ldr	r0, [sp, #76]	; 0x4c
   4710c:	cmp	r9, r0
   47110:	bge	5b6a0 <GetDataSlab+0x27544>
   47114:	ldr	r7, [sp, #88]	; 0x58
   47118:	ldr	ip, [sp, #92]	; 0x5c
   4711c:	cmp	r8, #1
   47120:	blt	47250 <GetDataSlab+0x130f4>
   47124:	ldr	r0, [sp, #56]	; 0x38
   47128:	add	r5, r7, r9, lsl #1
   4712c:	mov	r3, #0
   47130:	cmp	r8, #8
   47134:	add	r6, lr, r0, lsl #1
   47138:	bcc	471ec <GetDataSlab+0x13090>
   4713c:	ldr	r0, [sp, #68]	; 0x44
   47140:	ldr	r2, [sp, #72]	; 0x48
   47144:	mla	r0, r0, r2, r7
   47148:	ldr	r2, [sp, #44]	; 0x2c
   4714c:	add	r2, lr, r2, lsl #1
   47150:	cmp	r0, r2
   47154:	bcs	47170 <GetDataSlab+0x13014>
   47158:	ldr	r0, [sp, #68]	; 0x44
   4715c:	ldr	r2, [sp, #72]	; 0x48
   47160:	mla	r0, r0, r2, r0
   47164:	add	r0, r7, r0
   47168:	cmp	r0, r6
   4716c:	bhi	471ec <GetDataSlab+0x13090>
   47170:	ldr	r0, [sp, #20]
   47174:	mov	r3, #0
   47178:	str	r5, [sp, #40]	; 0x28
   4717c:	cmp	r0, #0
   47180:	beq	471b8 <GetDataSlab+0x1305c>
   47184:	ldr	r2, [sp, #16]
   47188:	mov	ip, sl
   4718c:	mov	r0, r6
   47190:	mov	r5, #32
   47194:	add	r7, r0, #16
   47198:	vld1.16	{d16-d17}, [r0], r5
   4719c:	add	r8, ip, #16
   471a0:	subs	r2, r2, #2
   471a4:	add	r3, r3, #16
   471a8:	vst1.16	{d16-d17}, [ip], r5
   471ac:	vld1.16	{d16-d17}, [r7]
   471b0:	vst1.16	{d16-d17}, [r8]
   471b4:	bne	47194 <GetDataSlab+0x13038>
   471b8:	ldr	r0, [sp, #28]
   471bc:	ldr	r5, [sp, #40]	; 0x28
   471c0:	cmp	r0, #0
   471c4:	beq	471d8 <GetDataSlab+0x1307c>
   471c8:	add	r0, r6, r3, lsl #1
   471cc:	vld1.16	{d16-d17}, [r0]
   471d0:	add	r0, r5, r3, lsl #1
   471d4:	vst1.16	{d16-d17}, [r0]
   471d8:	ldr	r8, [sp, #64]	; 0x40
   471dc:	ldr	r3, [sp, #24]
   471e0:	ldr	ip, [sp, #92]	; 0x5c
   471e4:	cmp	r8, r3
   471e8:	beq	47250 <GetDataSlab+0x130f4>
   471ec:	ldr	r0, [sp, #52]	; 0x34
   471f0:	mov	r7, r3
   471f4:	cmp	r0, #0
   471f8:	beq	47210 <GetDataSlab+0x130b4>
   471fc:	add	r2, r6, r3, lsl #1
   47200:	add	r0, r5, r3, lsl #1
   47204:	orr	r7, r3, #1
   47208:	ldrh	r2, [r2]
   4720c:	strh	r2, [r0]
   47210:	orr	r0, r3, #1
   47214:	cmp	r8, r0
   47218:	beq	47250 <GetDataSlab+0x130f4>
   4721c:	ldr	r0, [sp, #36]	; 0x24
   47220:	sub	r2, r8, r7
   47224:	lsl	r3, r7, #1
   47228:	add	r0, lr, r0, lsl #1
   4722c:	add	r7, r0, r3
   47230:	mov	r5, sl
   47234:	subs	r2, r2, #2
   47238:	ldrh	r6, [r7, #-2]
   4723c:	strh	r6, [r5, r3]!
   47240:	ldrh	r7, [r7]
   47244:	add	r3, r3, #4
   47248:	strh	r7, [r5, #2]
   4724c:	bne	4722c <GetDataSlab+0x130d0>
   47250:	ldr	r0, [sp, #60]	; 0x3c
   47254:	add	lr, lr, r0, lsl #1
   47258:	add	r1, r1, r0
   4725c:	ldr	r0, [fp, #24]
   47260:	cmp	r0, #2
   47264:	blt	470ec <GetDataSlab+0x12f90>
   47268:	ldr	r2, [sp, #48]	; 0x30
   4726c:	mov	r0, #0
   47270:	b	4729c <GetDataSlab+0x13140>
   47274:	sub	r5, fp, #176	; 0xb0
   47278:	sub	r3, r3, r7
   4727c:	ldr	r6, [r5, r0]
   47280:	ldr	r5, [ip, r0]
   47284:	mla	r3, r5, r6, r3
   47288:	add	r1, r3, r1
   4728c:	add	lr, lr, r3, lsl #1
   47290:	subs	r2, r2, #1
   47294:	add	r0, r0, #4
   47298:	beq	470ec <GetDataSlab+0x12f90>
   4729c:	ldr	r3, [r4, r0]
   472a0:	ldr	r5, [sp, #84]	; 0x54
   472a4:	add	r3, r3, #1
   472a8:	str	r3, [r4, r0]
   472ac:	ldr	r7, [r5, r0]
   472b0:	sdiv	r6, r3, r7
   472b4:	mls	r3, r6, r7, r3
   472b8:	cmp	r3, #0
   472bc:	bne	470dc <GetDataSlab+0x12f80>
   472c0:	mov	r3, #0
   472c4:	str	r3, [r4, r0]
   472c8:	ldr	r3, [sp, #80]	; 0x50
   472cc:	ldr	r3, [r3, r0]
   472d0:	sdiv	r7, r1, r3
   472d4:	mls	r7, r7, r3, r1
   472d8:	cmp	r7, #0
   472dc:	bne	47274 <GetDataSlab+0x13118>
   472e0:	ldr	r3, [ip, r0]
   472e4:	cmp	r3, #0
   472e8:	beq	47290 <GetDataSlab+0x13134>
   472ec:	sub	r5, fp, #176	; 0xb0
   472f0:	ldr	r7, [r5, r0]
   472f4:	mla	r1, r7, r3, r1
   472f8:	mul	r3, r7, r3
   472fc:	b	4728c <GetDataSlab+0x13130>
   47300:	ldr	r0, [sp, #80]	; 0x50
   47304:	ldr	r7, [sp, #68]	; 0x44
   47308:	add	lr, r0, r1, lsl #1
   4730c:	cmp	r7, #1
   47310:	bne	543e8 <GetDataSlab+0x2028c>
   47314:	ldr	r0, [sp, #76]	; 0x4c
   47318:	ldr	r3, [fp, #12]
   4731c:	ldr	r5, [fp, #20]
   47320:	ldr	r7, [sp, #64]	; 0x40
   47324:	sub	r6, fp, #96	; 0x60
   47328:	cmp	r0, #1
   4732c:	blt	5b69c <GetDataSlab+0x27540>
   47330:	sub	r0, r7, #8
   47334:	mov	r2, #1
   47338:	ldr	sl, [sp, #88]	; 0x58
   4733c:	mov	r9, #0
   47340:	mov	r8, r7
   47344:	add	r2, r2, r0, lsr #3
   47348:	lsr	r0, r0, #3
   4734c:	str	r0, [sp, #20]
   47350:	and	r4, r2, #1
   47354:	sub	r2, r2, r4
   47358:	str	r4, [sp, #28]
   4735c:	str	r2, [sp, #16]
   47360:	sub	r2, fp, #136	; 0x88
   47364:	orr	r4, r2, #4
   47368:	add	r2, r5, #4
   4736c:	str	r2, [sp, #84]	; 0x54
   47370:	orr	r2, ip, #4
   47374:	str	r2, [sp, #80]	; 0x50
   47378:	ldr	r2, [fp, #24]
   4737c:	sub	r2, r2, #1
   47380:	str	r2, [sp, #48]	; 0x30
   47384:	orr	r2, r6, #4
   47388:	str	r2, [sp, #32]
   4738c:	ldr	r2, [r3], #4
   47390:	str	r3, [sp, #92]	; 0x5c
   47394:	add	r3, r7, r2
   47398:	add	r0, r2, #1
   4739c:	str	r2, [sp, #56]	; 0x38
   473a0:	str	r3, [sp, #44]	; 0x2c
   473a4:	and	r3, r7, #1
   473a8:	str	r0, [sp, #36]	; 0x24
   473ac:	mov	r0, #0
   473b0:	str	r3, [sp, #52]	; 0x34
   473b4:	bic	r3, r7, #7
   473b8:	str	r0, [sp, #72]	; 0x48
   473bc:	str	r3, [sp, #24]
   473c0:	lsl	r3, r7, #1
   473c4:	str	r3, [sp, #68]	; 0x44
   473c8:	ldr	r7, [sp, #88]	; 0x58
   473cc:	ldr	ip, [sp, #92]	; 0x5c
   473d0:	cmp	r8, #1
   473d4:	bge	47424 <GetDataSlab+0x132c8>
   473d8:	b	47550 <GetDataSlab+0x133f4>
   473dc:	ldr	r2, [sp, #32]
   473e0:	ldr	r0, [r2, r0]
   473e4:	add	lr, lr, r0, lsl #1
   473e8:	add	r1, r0, r1
   473ec:	ldr	r0, [sp, #68]	; 0x44
   473f0:	add	r9, r9, r8
   473f4:	mov	r2, #0
   473f8:	add	sl, sl, r0
   473fc:	ldr	r0, [sp, #72]	; 0x48
   47400:	add	r0, r0, #1
   47404:	str	r0, [sp, #72]	; 0x48
   47408:	ldr	r0, [sp, #76]	; 0x4c
   4740c:	cmp	r9, r0
   47410:	bge	5b6a0 <GetDataSlab+0x27544>
   47414:	ldr	r7, [sp, #88]	; 0x58
   47418:	ldr	ip, [sp, #92]	; 0x5c
   4741c:	cmp	r8, #1
   47420:	blt	47550 <GetDataSlab+0x133f4>
   47424:	ldr	r0, [sp, #56]	; 0x38
   47428:	add	r5, r7, r9, lsl #1
   4742c:	mov	r3, #0
   47430:	cmp	r8, #8
   47434:	add	r6, lr, r0, lsl #1
   47438:	bcc	474ec <GetDataSlab+0x13390>
   4743c:	ldr	r0, [sp, #68]	; 0x44
   47440:	ldr	r2, [sp, #72]	; 0x48
   47444:	mla	r0, r0, r2, r7
   47448:	ldr	r2, [sp, #44]	; 0x2c
   4744c:	add	r2, lr, r2, lsl #1
   47450:	cmp	r0, r2
   47454:	bcs	47470 <GetDataSlab+0x13314>
   47458:	ldr	r0, [sp, #68]	; 0x44
   4745c:	ldr	r2, [sp, #72]	; 0x48
   47460:	mla	r0, r0, r2, r0
   47464:	add	r0, r7, r0
   47468:	cmp	r0, r6
   4746c:	bhi	474ec <GetDataSlab+0x13390>
   47470:	ldr	r0, [sp, #20]
   47474:	mov	r3, #0
   47478:	str	r5, [sp, #40]	; 0x28
   4747c:	cmp	r0, #0
   47480:	beq	474b8 <GetDataSlab+0x1335c>
   47484:	ldr	r2, [sp, #16]
   47488:	mov	ip, sl
   4748c:	mov	r0, r6
   47490:	mov	r5, #32
   47494:	add	r7, r0, #16
   47498:	vld1.16	{d16-d17}, [r0], r5
   4749c:	add	r8, ip, #16
   474a0:	subs	r2, r2, #2
   474a4:	add	r3, r3, #16
   474a8:	vst1.16	{d16-d17}, [ip], r5
   474ac:	vld1.16	{d16-d17}, [r7]
   474b0:	vst1.16	{d16-d17}, [r8]
   474b4:	bne	47494 <GetDataSlab+0x13338>
   474b8:	ldr	r0, [sp, #28]
   474bc:	ldr	r5, [sp, #40]	; 0x28
   474c0:	cmp	r0, #0
   474c4:	beq	474d8 <GetDataSlab+0x1337c>
   474c8:	add	r0, r6, r3, lsl #1
   474cc:	vld1.16	{d16-d17}, [r0]
   474d0:	add	r0, r5, r3, lsl #1
   474d4:	vst1.16	{d16-d17}, [r0]
   474d8:	ldr	r8, [sp, #64]	; 0x40
   474dc:	ldr	r3, [sp, #24]
   474e0:	ldr	ip, [sp, #92]	; 0x5c
   474e4:	cmp	r8, r3
   474e8:	beq	47550 <GetDataSlab+0x133f4>
   474ec:	ldr	r0, [sp, #52]	; 0x34
   474f0:	mov	r7, r3
   474f4:	cmp	r0, #0
   474f8:	beq	47510 <GetDataSlab+0x133b4>
   474fc:	add	r2, r6, r3, lsl #1
   47500:	add	r0, r5, r3, lsl #1
   47504:	orr	r7, r3, #1
   47508:	ldrh	r2, [r2]
   4750c:	strh	r2, [r0]
   47510:	orr	r0, r3, #1
   47514:	cmp	r8, r0
   47518:	beq	47550 <GetDataSlab+0x133f4>
   4751c:	ldr	r0, [sp, #36]	; 0x24
   47520:	sub	r2, r8, r7
   47524:	lsl	r3, r7, #1
   47528:	add	r0, lr, r0, lsl #1
   4752c:	add	r7, r0, r3
   47530:	mov	r5, sl
   47534:	subs	r2, r2, #2
   47538:	ldrh	r6, [r7, #-2]
   4753c:	strh	r6, [r5, r3]!
   47540:	ldrh	r7, [r7]
   47544:	add	r3, r3, #4
   47548:	strh	r7, [r5, #2]
   4754c:	bne	4752c <GetDataSlab+0x133d0>
   47550:	ldr	r0, [sp, #60]	; 0x3c
   47554:	add	lr, lr, r0, lsl #1
   47558:	add	r1, r1, r0
   4755c:	ldr	r0, [fp, #24]
   47560:	cmp	r0, #2
   47564:	blt	473ec <GetDataSlab+0x13290>
   47568:	ldr	r2, [sp, #48]	; 0x30
   4756c:	mov	r0, #0
   47570:	b	4759c <GetDataSlab+0x13440>
   47574:	sub	r5, fp, #176	; 0xb0
   47578:	sub	r3, r3, r7
   4757c:	ldr	r6, [r5, r0]
   47580:	ldr	r5, [ip, r0]
   47584:	mla	r3, r5, r6, r3
   47588:	add	r1, r3, r1
   4758c:	add	lr, lr, r3, lsl #1
   47590:	subs	r2, r2, #1
   47594:	add	r0, r0, #4
   47598:	beq	473ec <GetDataSlab+0x13290>
   4759c:	ldr	r3, [r4, r0]
   475a0:	ldr	r5, [sp, #84]	; 0x54
   475a4:	add	r3, r3, #1
   475a8:	str	r3, [r4, r0]
   475ac:	ldr	r7, [r5, r0]
   475b0:	sdiv	r6, r3, r7
   475b4:	mls	r3, r6, r7, r3
   475b8:	cmp	r3, #0
   475bc:	bne	473dc <GetDataSlab+0x13280>
   475c0:	mov	r3, #0
   475c4:	str	r3, [r4, r0]
   475c8:	ldr	r3, [sp, #80]	; 0x50
   475cc:	ldr	r3, [r3, r0]
   475d0:	sdiv	r7, r1, r3
   475d4:	mls	r7, r7, r3, r1
   475d8:	cmp	r7, #0
   475dc:	bne	47574 <GetDataSlab+0x13418>
   475e0:	ldr	r3, [ip, r0]
   475e4:	cmp	r3, #0
   475e8:	beq	47590 <GetDataSlab+0x13434>
   475ec:	sub	r5, fp, #176	; 0xb0
   475f0:	ldr	r7, [r5, r0]
   475f4:	mla	r1, r7, r3, r1
   475f8:	mul	r3, r7, r3
   475fc:	b	4758c <GetDataSlab+0x13430>
   47600:	ldr	r0, [sp, #80]	; 0x50
   47604:	ldr	r5, [sp, #56]	; 0x38
   47608:	add	r4, r0, r3, lsl #2
   4760c:	cmp	r5, #1
   47610:	bne	5460c <GetDataSlab+0x204b0>
   47614:	ldr	r0, [sp, #76]	; 0x4c
   47618:	ldr	r2, [fp, #20]
   4761c:	ldr	sl, [sp, #60]	; 0x3c
   47620:	cmp	r0, #1
   47624:	ldr	r0, [sp, #72]	; 0x48
   47628:	blt	5b69c <GetDataSlab+0x27540>
   4762c:	sub	r0, r0, #4
   47630:	mov	r1, #1
   47634:	mov	r6, r4
   47638:	add	r1, r1, r0, lsr #2
   4763c:	lsr	r0, r0, #2
   47640:	str	r0, [sp, #40]	; 0x28
   47644:	mov	r0, #0
   47648:	and	r7, r1, #1
   4764c:	str	r0, [sp, #68]	; 0x44
   47650:	sub	r1, r1, r7
   47654:	str	r7, [sp, #48]	; 0x30
   47658:	mov	r7, #16
   4765c:	str	r1, [sp, #32]
   47660:	sub	r1, fp, #136	; 0x88
   47664:	orr	r9, r1, #4
   47668:	add	r1, r2, #4
   4766c:	str	r1, [sp, #56]	; 0x38
   47670:	orr	r1, ip, #4
   47674:	str	r1, [sp, #84]	; 0x54
   47678:	ldr	r1, [fp, #12]
   4767c:	add	r1, r1, #4
   47680:	str	r1, [sp, #80]	; 0x50
   47684:	ldr	r1, [fp, #24]
   47688:	sub	r1, r1, #1
   4768c:	str	r1, [sp, #52]	; 0x34
   47690:	sub	r1, fp, #96	; 0x60
   47694:	orr	r1, r1, #4
   47698:	str	r1, [sp, #36]	; 0x24
   4769c:	ldr	r1, [sp, #72]	; 0x48
   476a0:	lsl	r2, r1, #1
   476a4:	str	r2, [sp, #64]	; 0x40
   476a8:	bic	r2, r1, #3
   476ac:	str	r2, [sp, #44]	; 0x2c
   476b0:	cmp	r1, #1
   476b4:	sub	ip, fp, #176	; 0xb0
   476b8:	bge	47708 <GetDataSlab+0x135ac>
   476bc:	b	477d8 <GetDataSlab+0x1367c>
   476c0:	ldr	r0, [sp, #36]	; 0x24
   476c4:	ldr	r0, [r0, r2]
   476c8:	add	r4, r4, r0, lsl #2
   476cc:	add	r3, r0, r3
   476d0:	ldr	r0, [sp, #64]	; 0x40
   476d4:	ldr	r1, [sp, #72]	; 0x48
   476d8:	ldr	r2, [sp, #68]	; 0x44
   476dc:	mov	r6, r4
   476e0:	add	r8, r8, r0
   476e4:	ldr	r0, [sp, #76]	; 0x4c
   476e8:	add	r2, r2, r1
   476ec:	str	r2, [sp, #68]	; 0x44
   476f0:	cmp	r2, r0
   476f4:	mov	r2, #0
   476f8:	bge	5b6a0 <GetDataSlab+0x27544>
   476fc:	cmp	r1, #1
   47700:	sub	ip, fp, #176	; 0xb0
   47704:	blt	477d8 <GetDataSlab+0x1367c>
   47708:	ldr	r0, [fp, #12]
   4770c:	mov	r2, #0
   47710:	ldr	r0, [r0]
   47714:	add	lr, r6, r0, lsl #2
   47718:	ldr	r0, [sp, #72]	; 0x48
   4771c:	cmp	r0, #4
   47720:	bcc	477b4 <GetDataSlab+0x13658>
   47724:	ldr	r0, [sp, #40]	; 0x28
   47728:	mov	r1, #0
   4772c:	cmp	r0, #0
   47730:	beq	47770 <GetDataSlab+0x13614>
   47734:	ldr	sl, [sp, #32]
   47738:	mov	ip, r8
   4773c:	mov	r2, lr
   47740:	mov	r4, #32
   47744:	add	r0, r2, #16
   47748:	vld1.32	{d16-d17}, [r2], r4
   4774c:	add	r5, ip, #8
   47750:	subs	sl, sl, #2
   47754:	add	r1, r1, #8
   47758:	vmovn.i32	d16, q8
   4775c:	vst1.16	{d16}, [ip], r7
   47760:	vld1.32	{d16-d17}, [r0]
   47764:	vmovn.i32	d16, q8
   47768:	vst1.16	{d16}, [r5]
   4776c:	bne	47744 <GetDataSlab+0x135e8>
   47770:	ldr	r0, [sp, #48]	; 0x30
   47774:	ldr	sl, [sp, #60]	; 0x3c
   47778:	sub	ip, fp, #176	; 0xb0
   4777c:	cmp	r0, #0
   47780:	beq	477a4 <GetDataSlab+0x13648>
   47784:	ldr	r0, [sp, #88]	; 0x58
   47788:	ldr	r2, [sp, #68]	; 0x44
   4778c:	add	r0, r0, r2, lsl #1
   47790:	add	r2, lr, r1, lsl #2
   47794:	vld1.32	{d16-d17}, [r2]
   47798:	add	r0, r0, r1, lsl #1
   4779c:	vmovn.i32	d16, q8
   477a0:	vst1.16	{d16}, [r0]
   477a4:	ldr	r0, [sp, #72]	; 0x48
   477a8:	ldr	r2, [sp, #44]	; 0x2c
   477ac:	cmp	r0, r2
   477b0:	beq	477d8 <GetDataSlab+0x1367c>
   477b4:	mov	r0, #0
   477b8:	sub	r1, r0, r2, lsl #1
   477bc:	ldr	r0, [sp, #72]	; 0x48
   477c0:	sub	r2, r0, r2
   477c4:	ldr	r0, [lr, -r1, lsl #1]
   477c8:	subs	r2, r2, #1
   477cc:	strh	r0, [r8, -r1]
   477d0:	sub	r1, r1, #2
   477d4:	bne	477c4 <GetDataSlab+0x13668>
   477d8:	ldr	r0, [fp, #24]
   477dc:	mov	r4, r6
   477e0:	add	r4, r6, sl, lsl #2
   477e4:	add	r3, r3, sl
   477e8:	cmp	r0, #2
   477ec:	blt	476d0 <GetDataSlab+0x13574>
   477f0:	ldr	r1, [sp, #52]	; 0x34
   477f4:	ldr	lr, [sp, #56]	; 0x38
   477f8:	mov	r2, #0
   477fc:	b	4782c <GetDataSlab+0x136d0>
   47800:	ldr	r7, [sp, #80]	; 0x50
   47804:	ldr	r6, [ip, r2]
   47808:	sub	r0, r5, r0
   4780c:	ldr	r7, [r7, r2]
   47810:	mla	r0, r7, r6, r0
   47814:	mov	r7, #16
   47818:	add	r3, r0, r3
   4781c:	add	r4, r4, r0, lsl #2
   47820:	subs	r1, r1, #1
   47824:	add	r2, r2, #4
   47828:	beq	476d0 <GetDataSlab+0x13574>
   4782c:	ldr	r0, [r9, r2]
   47830:	add	r0, r0, #1
   47834:	str	r0, [r9, r2]
   47838:	ldr	r5, [lr, r2]
   4783c:	sdiv	r6, r0, r5
   47840:	mls	r0, r6, r5, r0
   47844:	cmp	r0, #0
   47848:	bne	476c0 <GetDataSlab+0x13564>
   4784c:	mov	r0, #0
   47850:	str	r0, [r9, r2]
   47854:	ldr	r0, [sp, #84]	; 0x54
   47858:	ldr	r5, [r0, r2]
   4785c:	sdiv	r0, r3, r5
   47860:	mls	r0, r0, r5, r3
   47864:	cmp	r0, #0
   47868:	bne	47800 <GetDataSlab+0x136a4>
   4786c:	ldr	r0, [sp, #80]	; 0x50
   47870:	ldr	r0, [r0, r2]
   47874:	cmp	r0, #0
   47878:	beq	47820 <GetDataSlab+0x136c4>
   4787c:	ldr	r7, [ip, r2]
   47880:	mla	r3, r7, r0, r3
   47884:	mul	r0, r7, r0
   47888:	mov	r7, #16
   4788c:	b	4781c <GetDataSlab+0x136c0>
   47890:	ldr	r0, [sp, #80]	; 0x50
   47894:	ldr	r5, [sp, #56]	; 0x38
   47898:	add	r4, r0, r3, lsl #2
   4789c:	cmp	r5, #1
   478a0:	bne	54814 <GetDataSlab+0x206b8>
   478a4:	ldr	r0, [sp, #76]	; 0x4c
   478a8:	ldr	r2, [fp, #20]
   478ac:	ldr	sl, [sp, #60]	; 0x3c
   478b0:	cmp	r0, #1
   478b4:	ldr	r0, [sp, #72]	; 0x48
   478b8:	blt	5b69c <GetDataSlab+0x27540>
   478bc:	sub	r0, r0, #4
   478c0:	mov	r1, #1
   478c4:	mov	r6, r4
   478c8:	add	r1, r1, r0, lsr #2
   478cc:	lsr	r0, r0, #2
   478d0:	str	r0, [sp, #40]	; 0x28
   478d4:	mov	r0, #0
   478d8:	and	r7, r1, #1
   478dc:	str	r0, [sp, #68]	; 0x44
   478e0:	sub	r1, r1, r7
   478e4:	str	r7, [sp, #48]	; 0x30
   478e8:	mov	r7, #16
   478ec:	str	r1, [sp, #32]
   478f0:	sub	r1, fp, #136	; 0x88
   478f4:	orr	r9, r1, #4
   478f8:	add	r1, r2, #4
   478fc:	str	r1, [sp, #56]	; 0x38
   47900:	orr	r1, ip, #4
   47904:	str	r1, [sp, #84]	; 0x54
   47908:	ldr	r1, [fp, #12]
   4790c:	add	r1, r1, #4
   47910:	str	r1, [sp, #80]	; 0x50
   47914:	ldr	r1, [fp, #24]
   47918:	sub	r1, r1, #1
   4791c:	str	r1, [sp, #52]	; 0x34
   47920:	sub	r1, fp, #96	; 0x60
   47924:	orr	r1, r1, #4
   47928:	str	r1, [sp, #36]	; 0x24
   4792c:	ldr	r1, [sp, #72]	; 0x48
   47930:	lsl	r2, r1, #1
   47934:	str	r2, [sp, #64]	; 0x40
   47938:	bic	r2, r1, #3
   4793c:	str	r2, [sp, #44]	; 0x2c
   47940:	cmp	r1, #1
   47944:	sub	ip, fp, #176	; 0xb0
   47948:	bge	47998 <GetDataSlab+0x1383c>
   4794c:	b	47a68 <GetDataSlab+0x1390c>
   47950:	ldr	r0, [sp, #36]	; 0x24
   47954:	ldr	r0, [r0, r2]
   47958:	add	r4, r4, r0, lsl #2
   4795c:	add	r3, r0, r3
   47960:	ldr	r0, [sp, #64]	; 0x40
   47964:	ldr	r1, [sp, #72]	; 0x48
   47968:	ldr	r2, [sp, #68]	; 0x44
   4796c:	mov	r6, r4
   47970:	add	r8, r8, r0
   47974:	ldr	r0, [sp, #76]	; 0x4c
   47978:	add	r2, r2, r1
   4797c:	str	r2, [sp, #68]	; 0x44
   47980:	cmp	r2, r0
   47984:	mov	r2, #0
   47988:	bge	5b6a0 <GetDataSlab+0x27544>
   4798c:	cmp	r1, #1
   47990:	sub	ip, fp, #176	; 0xb0
   47994:	blt	47a68 <GetDataSlab+0x1390c>
   47998:	ldr	r0, [fp, #12]
   4799c:	mov	r2, #0
   479a0:	ldr	r0, [r0]
   479a4:	add	lr, r6, r0, lsl #2
   479a8:	ldr	r0, [sp, #72]	; 0x48
   479ac:	cmp	r0, #4
   479b0:	bcc	47a44 <GetDataSlab+0x138e8>
   479b4:	ldr	r0, [sp, #40]	; 0x28
   479b8:	mov	r1, #0
   479bc:	cmp	r0, #0
   479c0:	beq	47a00 <GetDataSlab+0x138a4>
   479c4:	ldr	sl, [sp, #32]
   479c8:	mov	ip, r8
   479cc:	mov	r2, lr
   479d0:	mov	r4, #32
   479d4:	add	r0, r2, #16
   479d8:	vld1.32	{d16-d17}, [r2], r4
   479dc:	add	r5, ip, #8
   479e0:	subs	sl, sl, #2
   479e4:	add	r1, r1, #8
   479e8:	vmovn.i32	d16, q8
   479ec:	vst1.16	{d16}, [ip], r7
   479f0:	vld1.32	{d16-d17}, [r0]
   479f4:	vmovn.i32	d16, q8
   479f8:	vst1.16	{d16}, [r5]
   479fc:	bne	479d4 <GetDataSlab+0x13878>
   47a00:	ldr	r0, [sp, #48]	; 0x30
   47a04:	ldr	sl, [sp, #60]	; 0x3c
   47a08:	sub	ip, fp, #176	; 0xb0
   47a0c:	cmp	r0, #0
   47a10:	beq	47a34 <GetDataSlab+0x138d8>
   47a14:	ldr	r0, [sp, #88]	; 0x58
   47a18:	ldr	r2, [sp, #68]	; 0x44
   47a1c:	add	r0, r0, r2, lsl #1
   47a20:	add	r2, lr, r1, lsl #2
   47a24:	vld1.32	{d16-d17}, [r2]
   47a28:	add	r0, r0, r1, lsl #1
   47a2c:	vmovn.i32	d16, q8
   47a30:	vst1.16	{d16}, [r0]
   47a34:	ldr	r0, [sp, #72]	; 0x48
   47a38:	ldr	r2, [sp, #44]	; 0x2c
   47a3c:	cmp	r0, r2
   47a40:	beq	47a68 <GetDataSlab+0x1390c>
   47a44:	mov	r0, #0
   47a48:	sub	r1, r0, r2, lsl #1
   47a4c:	ldr	r0, [sp, #72]	; 0x48
   47a50:	sub	r2, r0, r2
   47a54:	ldr	r0, [lr, -r1, lsl #1]
   47a58:	subs	r2, r2, #1
   47a5c:	strh	r0, [r8, -r1]
   47a60:	sub	r1, r1, #2
   47a64:	bne	47a54 <GetDataSlab+0x138f8>
   47a68:	ldr	r0, [fp, #24]
   47a6c:	mov	r4, r6
   47a70:	add	r4, r6, sl, lsl #2
   47a74:	add	r3, r3, sl
   47a78:	cmp	r0, #2
   47a7c:	blt	47960 <GetDataSlab+0x13804>
   47a80:	ldr	r1, [sp, #52]	; 0x34
   47a84:	ldr	lr, [sp, #56]	; 0x38
   47a88:	mov	r2, #0
   47a8c:	b	47abc <GetDataSlab+0x13960>
   47a90:	ldr	r7, [sp, #80]	; 0x50
   47a94:	ldr	r6, [ip, r2]
   47a98:	sub	r0, r5, r0
   47a9c:	ldr	r7, [r7, r2]
   47aa0:	mla	r0, r7, r6, r0
   47aa4:	mov	r7, #16
   47aa8:	add	r3, r0, r3
   47aac:	add	r4, r4, r0, lsl #2
   47ab0:	subs	r1, r1, #1
   47ab4:	add	r2, r2, #4
   47ab8:	beq	47960 <GetDataSlab+0x13804>
   47abc:	ldr	r0, [r9, r2]
   47ac0:	add	r0, r0, #1
   47ac4:	str	r0, [r9, r2]
   47ac8:	ldr	r5, [lr, r2]
   47acc:	sdiv	r6, r0, r5
   47ad0:	mls	r0, r6, r5, r0
   47ad4:	cmp	r0, #0
   47ad8:	bne	47950 <GetDataSlab+0x137f4>
   47adc:	mov	r0, #0
   47ae0:	str	r0, [r9, r2]
   47ae4:	ldr	r0, [sp, #84]	; 0x54
   47ae8:	ldr	r5, [r0, r2]
   47aec:	sdiv	r0, r3, r5
   47af0:	mls	r0, r0, r5, r3
   47af4:	cmp	r0, #0
   47af8:	bne	47a90 <GetDataSlab+0x13934>
   47afc:	ldr	r0, [sp, #80]	; 0x50
   47b00:	ldr	r0, [r0, r2]
   47b04:	cmp	r0, #0
   47b08:	beq	47ab0 <GetDataSlab+0x13954>
   47b0c:	ldr	r7, [ip, r2]
   47b10:	mla	r3, r7, r0, r3
   47b14:	mul	r0, r7, r0
   47b18:	mov	r7, #16
   47b1c:	b	47aac <GetDataSlab+0x13950>
   47b20:	ldr	r0, [sp, #80]	; 0x50
   47b24:	add	lr, r0, r1, lsl #2
   47b28:	ldr	r0, [sp, #40]	; 0x28
   47b2c:	cmp	r0, #1
   47b30:	bne	54a1c <GetDataSlab+0x208c0>
   47b34:	ldr	r0, [sp, #76]	; 0x4c
   47b38:	ldr	sl, [sp, #60]	; 0x3c
   47b3c:	cmp	r0, #1
   47b40:	blt	5b69c <GetDataSlab+0x27540>
   47b44:	ldr	r3, [sp, #64]	; 0x40
   47b48:	mov	r2, #1
   47b4c:	mov	r6, #16
   47b50:	sub	r0, r3, #4
   47b54:	add	r2, r2, r0, lsr #2
   47b58:	lsr	r0, r0, #2
   47b5c:	str	r0, [sp, #40]	; 0x28
   47b60:	mov	r0, #0
   47b64:	and	r4, r2, #1
   47b68:	str	r0, [sp, #80]	; 0x50
   47b6c:	sub	r2, r2, r4
   47b70:	str	r4, [sp, #48]	; 0x30
   47b74:	str	r2, [sp, #32]
   47b78:	sub	r2, fp, #136	; 0x88
   47b7c:	orr	r4, r2, #4
   47b80:	ldr	r2, [fp, #20]
   47b84:	add	r8, r2, #4
   47b88:	orr	r2, ip, #4
   47b8c:	ldr	ip, [sp, #88]	; 0x58
   47b90:	str	r2, [sp, #84]	; 0x54
   47b94:	ldr	r2, [fp, #24]
   47b98:	sub	r2, r2, #1
   47b9c:	str	r2, [sp, #56]	; 0x38
   47ba0:	sub	r2, fp, #96	; 0x60
   47ba4:	orr	r2, r2, #4
   47ba8:	str	r2, [sp, #36]	; 0x24
   47bac:	lsl	r2, r3, #1
   47bb0:	str	r2, [sp, #72]	; 0x48
   47bb4:	bic	r2, r3, #3
   47bb8:	str	r2, [sp, #44]	; 0x2c
   47bbc:	ldr	r2, [sp, #92]	; 0x5c
   47bc0:	ldr	r7, [r2], #4
   47bc4:	str	r2, [sp, #92]	; 0x5c
   47bc8:	str	r7, [sp, #68]	; 0x44
   47bcc:	cmp	r3, #1
   47bd0:	mov	r9, r3
   47bd4:	bge	47c24 <GetDataSlab+0x13ac8>
   47bd8:	b	47d10 <GetDataSlab+0x13bb4>
   47bdc:	ldr	r2, [sp, #36]	; 0x24
   47be0:	mov	r6, #16
   47be4:	ldr	r0, [r2, r0]
   47be8:	add	lr, lr, r0, lsl #2
   47bec:	add	r1, r0, r1
   47bf0:	ldr	r0, [sp, #72]	; 0x48
   47bf4:	ldr	r2, [sp, #80]	; 0x50
   47bf8:	mov	r3, r9
   47bfc:	add	ip, ip, r0
   47c00:	ldr	r0, [sp, #76]	; 0x4c
   47c04:	add	r2, r2, r9
   47c08:	str	r2, [sp, #80]	; 0x50
   47c0c:	cmp	r2, r0
   47c10:	mov	r2, #0
   47c14:	bge	5b6a0 <GetDataSlab+0x27544>
   47c18:	cmp	r3, #1
   47c1c:	mov	r9, r3
   47c20:	blt	47d10 <GetDataSlab+0x13bb4>
   47c24:	mov	r3, #0
   47c28:	cmp	r9, #4
   47c2c:	bcc	47cd8 <GetDataSlab+0x13b7c>
   47c30:	ldr	r0, [sp, #68]	; 0x44
   47c34:	mov	r2, #0
   47c38:	add	r5, lr, r0, lsl #2
   47c3c:	ldr	r0, [sp, #40]	; 0x28
   47c40:	str	r5, [sp, #52]	; 0x34
   47c44:	cmp	r0, #0
   47c48:	beq	47c90 <GetDataSlab+0x13b34>
   47c4c:	ldr	sl, [sp, #32]
   47c50:	mov	r0, r5
   47c54:	mov	r3, ip
   47c58:	mov	r5, #32
   47c5c:	add	r7, r0, #16
   47c60:	vld1.32	{d16-d17}, [r0], r5
   47c64:	add	r9, r3, #8
   47c68:	subs	sl, sl, #2
   47c6c:	add	r2, r2, #8
   47c70:	vcvt.u32.f32	q8, q8
   47c74:	vmovn.i32	d16, q8
   47c78:	vst1.16	{d16}, [r3], r6
   47c7c:	vld1.32	{d16-d17}, [r7]
   47c80:	vcvt.u32.f32	q8, q8
   47c84:	vmovn.i32	d16, q8
   47c88:	vst1.16	{d16}, [r9]
   47c8c:	bne	47c5c <GetDataSlab+0x13b00>
   47c90:	ldr	r0, [sp, #48]	; 0x30
   47c94:	ldr	sl, [sp, #60]	; 0x3c
   47c98:	cmp	r0, #0
   47c9c:	beq	47cc8 <GetDataSlab+0x13b6c>
   47ca0:	ldr	r0, [sp, #88]	; 0x58
   47ca4:	ldr	r3, [sp, #80]	; 0x50
   47ca8:	add	r0, r0, r3, lsl #1
   47cac:	ldr	r3, [sp, #52]	; 0x34
   47cb0:	add	r0, r0, r2, lsl #1
   47cb4:	add	r3, r3, r2, lsl #2
   47cb8:	vld1.32	{d16-d17}, [r3]
   47cbc:	vcvt.u32.f32	q8, q8
   47cc0:	vmovn.i32	d16, q8
   47cc4:	vst1.16	{d16}, [r0]
   47cc8:	ldr	r9, [sp, #64]	; 0x40
   47ccc:	ldr	r3, [sp, #44]	; 0x2c
   47cd0:	cmp	r9, r3
   47cd4:	beq	47d10 <GetDataSlab+0x13bb4>
   47cd8:	ldr	r5, [sp, #68]	; 0x44
   47cdc:	mov	r0, #0
   47ce0:	sub	r2, r9, r3
   47ce4:	sub	r0, r0, r3, lsl #1
   47ce8:	add	r7, lr, r5, lsl #2
   47cec:	add	r3, r7, r3, lsl #2
   47cf0:	vldr	s0, [r3]
   47cf4:	add	r3, r3, #4
   47cf8:	subs	r2, r2, #1
   47cfc:	vcvt.u32.f32	s0, s0
   47d00:	vmov	r7, s0
   47d04:	strh	r7, [ip, -r0]
   47d08:	sub	r0, r0, #2
   47d0c:	bne	47cf0 <GetDataSlab+0x13b94>
   47d10:	ldr	r0, [fp, #24]
   47d14:	add	lr, lr, sl, lsl #2
   47d18:	add	r1, r1, sl
   47d1c:	cmp	r0, #2
   47d20:	blt	47bf0 <GetDataSlab+0x13a94>
   47d24:	ldr	r2, [sp, #56]	; 0x38
   47d28:	mov	r0, #0
   47d2c:	b	47d60 <GetDataSlab+0x13c04>
   47d30:	sub	r5, fp, #176	; 0xb0
   47d34:	sub	r3, r3, r7
   47d38:	ldr	r6, [r5, r0]
   47d3c:	ldr	r5, [sp, #92]	; 0x5c
   47d40:	ldr	r5, [r5, r0]
   47d44:	mla	r3, r5, r6, r3
   47d48:	add	r1, r3, r1
   47d4c:	add	lr, lr, r3, lsl #2
   47d50:	mov	r6, #16
   47d54:	subs	r2, r2, #1
   47d58:	add	r0, r0, #4
   47d5c:	beq	47bf0 <GetDataSlab+0x13a94>
   47d60:	ldr	r3, [r4, r0]
   47d64:	add	r3, r3, #1
   47d68:	str	r3, [r4, r0]
   47d6c:	ldr	r7, [r8, r0]
   47d70:	sdiv	r6, r3, r7
   47d74:	mls	r3, r6, r7, r3
   47d78:	cmp	r3, #0
   47d7c:	bne	47bdc <GetDataSlab+0x13a80>
   47d80:	mov	r3, #0
   47d84:	str	r3, [r4, r0]
   47d88:	ldr	r3, [sp, #84]	; 0x54
   47d8c:	ldr	r3, [r3, r0]
   47d90:	sdiv	r6, r1, r3
   47d94:	mls	r7, r6, r3, r1
   47d98:	cmp	r7, #0
   47d9c:	bne	47d30 <GetDataSlab+0x13bd4>
   47da0:	ldr	r3, [sp, #92]	; 0x5c
   47da4:	ldr	r3, [r3, r0]
   47da8:	cmp	r3, #0
   47dac:	beq	47d50 <GetDataSlab+0x13bf4>
   47db0:	sub	r5, fp, #176	; 0xb0
   47db4:	ldr	r5, [r5, r0]
   47db8:	mla	r1, r5, r3, r1
   47dbc:	mul	r3, r5, r3
   47dc0:	b	47d4c <GetDataSlab+0x13bf0>
   47dc4:	ldr	r0, [sp, #80]	; 0x50
   47dc8:	add	r9, r0, r1, lsl #3
   47dcc:	ldr	r0, [sp, #40]	; 0x28
   47dd0:	cmp	r0, #1
   47dd4:	bne	54c5c <GetDataSlab+0x20b00>
   47dd8:	ldr	r0, [sp, #76]	; 0x4c
   47ddc:	ldr	r2, [sp, #88]	; 0x58
   47de0:	ldr	r4, [fp, #12]
   47de4:	sub	r6, fp, #96	; 0x60
   47de8:	cmp	r0, #1
   47dec:	blt	5b69c <GetDataSlab+0x27540>
   47df0:	mov	r3, ip
   47df4:	ldr	r7, [fp, #20]
   47df8:	add	r2, r2, #2
   47dfc:	sub	r0, fp, #136	; 0x88
   47e00:	mov	r8, #0
   47e04:	orr	r3, r3, #4
   47e08:	str	r2, [sp, #84]	; 0x54
   47e0c:	ldr	r2, [r4], #4
   47e10:	orr	r0, r0, #4
   47e14:	str	r3, [sp, #92]	; 0x5c
   47e18:	ldr	r3, [fp, #24]
   47e1c:	add	ip, r7, #4
   47e20:	str	r2, [sp, #56]	; 0x38
   47e24:	add	r2, r2, #1
   47e28:	sub	r3, r3, #1
   47e2c:	str	r2, [sp, #52]	; 0x34
   47e30:	str	r3, [sp, #60]	; 0x3c
   47e34:	orr	r3, r6, #4
   47e38:	str	r3, [sp, #48]	; 0x30
   47e3c:	ldr	r3, [sp, #64]	; 0x40
   47e40:	and	r7, r3, #1
   47e44:	lsl	r5, r3, #1
   47e48:	sub	lr, r3, r7
   47e4c:	str	r7, [sp, #68]	; 0x44
   47e50:	str	r5, [sp, #80]	; 0x50
   47e54:	cmp	r3, #1
   47e58:	bge	47ea0 <GetDataSlab+0x13d44>
   47e5c:	b	47f20 <GetDataSlab+0x13dc4>
   47e60:	ldr	r3, [sp, #48]	; 0x30
   47e64:	ldr	r2, [r3, r2]
   47e68:	add	r9, r9, r2, lsl #3
   47e6c:	add	r1, r2, r1
   47e70:	ldr	r2, [sp, #80]	; 0x50
   47e74:	ldr	r3, [sp, #84]	; 0x54
   47e78:	add	r3, r3, r2
   47e7c:	ldr	r2, [sp, #76]	; 0x4c
   47e80:	str	r3, [sp, #84]	; 0x54
   47e84:	ldr	r3, [sp, #64]	; 0x40
   47e88:	add	r8, r8, r3
   47e8c:	cmp	r8, r2
   47e90:	mov	r2, #0
   47e94:	bge	5b6a0 <GetDataSlab+0x27544>
   47e98:	cmp	r3, #1
   47e9c:	blt	47f20 <GetDataSlab+0x13dc4>
   47ea0:	mov	r2, #0
   47ea4:	beq	47eec <GetDataSlab+0x13d90>
   47ea8:	ldr	r2, [sp, #52]	; 0x34
   47eac:	ldr	r6, [sp, #84]	; 0x54
   47eb0:	add	r3, r9, r2, lsl #3
   47eb4:	mov	r2, #0
   47eb8:	vldr	d16, [r3, #-8]
   47ebc:	add	r2, r2, #2
   47ec0:	cmp	lr, r2
   47ec4:	vcvt.u32.f64	s0, d16
   47ec8:	vmov	r7, s0
   47ecc:	strh	r7, [r6, #-2]
   47ed0:	vldr	d16, [r3]
   47ed4:	add	r3, r3, #16
   47ed8:	vcvt.u32.f64	s0, d16
   47edc:	vmov	r7, s0
   47ee0:	strh	r7, [r6]
   47ee4:	add	r6, r6, #4
   47ee8:	bne	47eb8 <GetDataSlab+0x13d5c>
   47eec:	ldr	r3, [sp, #68]	; 0x44
   47ef0:	cmp	r3, #0
   47ef4:	beq	47f20 <GetDataSlab+0x13dc4>
   47ef8:	ldr	r3, [sp, #56]	; 0x38
   47efc:	ldr	r5, [sp, #88]	; 0x58
   47f00:	add	r3, r9, r3, lsl #3
   47f04:	add	r6, r5, r8, lsl #1
   47f08:	add	r3, r3, r2, lsl #3
   47f0c:	add	r2, r6, r2, lsl #1
   47f10:	vldr	d16, [r3]
   47f14:	vcvt.u32.f64	s0, d16
   47f18:	vmov	r3, s0
   47f1c:	strh	r3, [r2]
   47f20:	ldr	r2, [sp, #72]	; 0x48
   47f24:	add	r9, r9, r2, lsl #3
   47f28:	add	r1, r1, r2
   47f2c:	ldr	r2, [fp, #24]
   47f30:	cmp	r2, #2
   47f34:	blt	47e70 <GetDataSlab+0x13d14>
   47f38:	ldr	r3, [sp, #60]	; 0x3c
   47f3c:	mov	r2, #0
   47f40:	b	47f6c <GetDataSlab+0x13e10>
   47f44:	sub	r5, fp, #176	; 0xb0
   47f48:	ldr	r7, [r4, r2]
   47f4c:	sub	r6, r6, sl
   47f50:	ldr	r5, [r5, r2]
   47f54:	mla	r5, r7, r5, r6
   47f58:	add	r1, r5, r1
   47f5c:	add	r9, r9, r5, lsl #3
   47f60:	subs	r3, r3, #1
   47f64:	add	r2, r2, #4
   47f68:	beq	47e70 <GetDataSlab+0x13d14>
   47f6c:	ldr	r6, [r0, r2]
   47f70:	add	r6, r6, #1
   47f74:	str	r6, [r0, r2]
   47f78:	ldr	r7, [ip, r2]
   47f7c:	sdiv	r5, r6, r7
   47f80:	mls	r5, r5, r7, r6
   47f84:	cmp	r5, #0
   47f88:	bne	47e60 <GetDataSlab+0x13d04>
   47f8c:	mov	r5, #0
   47f90:	str	r5, [r0, r2]
   47f94:	ldr	r5, [sp, #92]	; 0x5c
   47f98:	ldr	r6, [r5, r2]
   47f9c:	sdiv	r5, r1, r6
   47fa0:	mls	sl, r5, r6, r1
   47fa4:	cmp	sl, #0
   47fa8:	bne	47f44 <GetDataSlab+0x13de8>
   47fac:	ldr	r6, [r4, r2]
   47fb0:	cmp	r6, #0
   47fb4:	beq	47f60 <GetDataSlab+0x13e04>
   47fb8:	sub	r5, fp, #176	; 0xb0
   47fbc:	ldr	r5, [r5, r2]
   47fc0:	mla	r1, r5, r6, r1
   47fc4:	mul	r5, r5, r6
   47fc8:	b	47f5c <GetDataSlab+0x13e00>
   47fcc:	ldr	r0, [sp, #80]	; 0x50
   47fd0:	ldr	r7, [sp, #60]	; 0x3c
   47fd4:	add	lr, r0, r1, lsl #3
   47fd8:	cmp	r7, #1
   47fdc:	bne	54ea0 <GetDataSlab+0x20d44>
   47fe0:	ldr	r0, [sp, #68]	; 0x44
   47fe4:	ldr	r3, [fp, #20]
   47fe8:	ldr	r9, [sp, #56]	; 0x38
   47fec:	cmp	r0, #1
   47ff0:	blt	550b8 <GetDataSlab+0x20f5c>
   47ff4:	sub	r0, r9, #2
   47ff8:	mov	r2, #1
   47ffc:	ldr	sl, [sp, #44]	; 0x2c
   48000:	add	r2, r2, r0, lsr #1
   48004:	lsr	r0, r0, #1
   48008:	str	r0, [sp, #32]
   4800c:	mov	r0, #0
   48010:	and	r4, r2, #1
   48014:	str	r0, [sp, #64]	; 0x40
   48018:	sub	r2, r2, r4
   4801c:	str	r4, [sp, #40]	; 0x28
   48020:	str	r2, [sp, #24]
   48024:	sub	r2, fp, #136	; 0x88
   48028:	orr	r4, r2, #4
   4802c:	add	r2, r3, #4
   48030:	mov	r3, #32
   48034:	str	r2, [sp, #76]	; 0x4c
   48038:	orr	r2, ip, #4
   4803c:	mov	ip, r8
   48040:	ldr	r8, [fp, #12]
   48044:	str	r2, [sp, #72]	; 0x48
   48048:	ldr	r2, [fp, #24]
   4804c:	sub	r2, r2, #1
   48050:	str	r2, [sp, #48]	; 0x30
   48054:	sub	r2, fp, #96	; 0x60
   48058:	orr	r2, r2, #4
   4805c:	str	r2, [sp, #28]
   48060:	lsl	r2, r9, #1
   48064:	str	r2, [sp, #60]	; 0x3c
   48068:	bic	r2, r9, #1
   4806c:	str	r2, [sp, #36]	; 0x24
   48070:	ldr	r2, [r8], #4
   48074:	str	r2, [sp, #52]	; 0x34
   48078:	cmp	r9, #1
   4807c:	bge	480c0 <GetDataSlab+0x13f64>
   48080:	b	4819c <GetDataSlab+0x14040>
   48084:	ldr	r2, [sp, #28]
   48088:	ldr	r0, [r2, r0]
   4808c:	add	lr, lr, r0, lsl #3
   48090:	add	r1, r0, r1
   48094:	ldr	r0, [sp, #60]	; 0x3c
   48098:	ldr	r2, [sp, #64]	; 0x40
   4809c:	mov	r3, #32
   480a0:	add	ip, ip, r0
   480a4:	ldr	r0, [sp, #68]	; 0x44
   480a8:	add	r2, r2, r9
   480ac:	str	r2, [sp, #64]	; 0x40
   480b0:	cmp	r2, r0
   480b4:	bge	550b8 <GetDataSlab+0x20f5c>
   480b8:	cmp	r9, #1
   480bc:	blt	4819c <GetDataSlab+0x14040>
   480c0:	mov	r6, #0
   480c4:	beq	48170 <GetDataSlab+0x14014>
   480c8:	ldr	r0, [sp, #52]	; 0x34
   480cc:	mov	r2, #0
   480d0:	add	r7, lr, r0, lsl #3
   480d4:	ldr	r0, [sp, #32]
   480d8:	cmp	r0, #0
   480dc:	beq	4812c <GetDataSlab+0x13fd0>
   480e0:	ldr	r0, [sp, #24]
   480e4:	mov	r6, ip
   480e8:	mov	sl, r7
   480ec:	mov	r9, r7
   480f0:	vld1.64	{d16-d17}, [r9], r3
   480f4:	add	r5, sl, #16
   480f8:	subs	r0, r0, #2
   480fc:	add	r2, r2, #4
   48100:	mov	sl, r9
   48104:	vmovn.i64	d16, q8
   48108:	vuzp.16	d16, d17
   4810c:	vst1.32	{d16[0]}, [r6]
   48110:	vld1.64	{d16-d17}, [r5]
   48114:	add	r5, r6, #4
   48118:	add	r6, r6, #8
   4811c:	vmovn.i64	d16, q8
   48120:	vuzp.16	d16, d17
   48124:	vst1.32	{d16[0]}, [r5]
   48128:	bne	480f0 <GetDataSlab+0x13f94>
   4812c:	ldr	r0, [sp, #40]	; 0x28
   48130:	ldr	sl, [sp, #44]	; 0x2c
   48134:	cmp	r0, #0
   48138:	beq	48160 <GetDataSlab+0x14004>
   4813c:	add	r5, r7, r2, lsl #3
   48140:	ldr	r0, [sp, #88]	; 0x58
   48144:	ldr	r3, [sp, #64]	; 0x40
   48148:	vld1.64	{d16-d17}, [r5]
   4814c:	add	r0, r0, r3, lsl #1
   48150:	add	r0, r0, r2, lsl #1
   48154:	vmovn.i64	d16, q8
   48158:	vuzp.16	d16, d17
   4815c:	vst1.32	{d16[0]}, [r0]
   48160:	ldr	r9, [sp, #56]	; 0x38
   48164:	ldr	r6, [sp, #36]	; 0x24
   48168:	cmp	r9, r6
   4816c:	beq	4819c <GetDataSlab+0x14040>
   48170:	ldr	r3, [sp, #52]	; 0x34
   48174:	mov	r0, #0
   48178:	sub	r2, r9, r6
   4817c:	sub	r0, r0, r6, lsl #1
   48180:	add	r5, lr, r3, lsl #3
   48184:	add	r6, r5, r6, lsl #3
   48188:	ldrh	r5, [r6], #8
   4818c:	subs	r2, r2, #1
   48190:	strh	r5, [ip, -r0]
   48194:	sub	r0, r0, #2
   48198:	bne	48188 <GetDataSlab+0x1402c>
   4819c:	ldr	r0, [fp, #24]
   481a0:	add	lr, lr, sl, lsl #3
   481a4:	add	r1, r1, sl
   481a8:	cmp	r0, #2
   481ac:	blt	48094 <GetDataSlab+0x13f38>
   481b0:	ldr	r2, [sp, #48]	; 0x30
   481b4:	mov	r0, #0
   481b8:	b	481e4 <GetDataSlab+0x14088>
   481bc:	sub	r3, fp, #176	; 0xb0
   481c0:	sub	r5, r6, r5
   481c4:	ldr	r7, [r3, r0]
   481c8:	ldr	r3, [r8, r0]
   481cc:	mla	r3, r3, r7, r5
   481d0:	add	r1, r3, r1
   481d4:	add	lr, lr, r3, lsl #3
   481d8:	subs	r2, r2, #1
   481dc:	add	r0, r0, #4
   481e0:	beq	48094 <GetDataSlab+0x13f38>
   481e4:	ldr	r5, [r4, r0]
   481e8:	ldr	r3, [sp, #76]	; 0x4c
   481ec:	add	r5, r5, #1
   481f0:	str	r5, [r4, r0]
   481f4:	ldr	r6, [r3, r0]
   481f8:	sdiv	r7, r5, r6
   481fc:	mls	r5, r7, r6, r5
   48200:	cmp	r5, #0
   48204:	bne	48084 <GetDataSlab+0x13f28>
   48208:	mov	r3, #0
   4820c:	str	r3, [r4, r0]
   48210:	ldr	r3, [sp, #72]	; 0x48
   48214:	ldr	r6, [r3, r0]
   48218:	sdiv	r5, r1, r6
   4821c:	mls	r5, r5, r6, r1
   48220:	cmp	r5, #0
   48224:	bne	481bc <GetDataSlab+0x14060>
   48228:	ldr	r5, [r8, r0]
   4822c:	cmp	r5, #0
   48230:	beq	481d8 <GetDataSlab+0x1407c>
   48234:	sub	r3, fp, #176	; 0xb0
   48238:	ldr	r3, [r3, r0]
   4823c:	mla	r1, r3, r5, r1
   48240:	mul	r3, r3, r5
   48244:	b	481d4 <GetDataSlab+0x14078>
   48248:	ldr	r0, [sp, #80]	; 0x50
   4824c:	cmp	r5, #1
   48250:	add	r8, r0, r7
   48254:	bne	554fc <GetDataSlab+0x213a0>
   48258:	ldr	r0, [sp, #76]	; 0x4c
   4825c:	ldr	r3, [fp, #20]
   48260:	sub	r2, fp, #176	; 0xb0
   48264:	cmp	r0, #1
   48268:	blt	5b69c <GetDataSlab+0x27540>
   4826c:	orr	r2, r2, #4
   48270:	ldr	lr, [fp, #12]
   48274:	sub	r0, fp, #136	; 0x88
   48278:	add	r3, r3, #4
   4827c:	mov	ip, #0
   48280:	str	r2, [sp, #80]	; 0x50
   48284:	ldr	r2, [fp, #24]
   48288:	orr	r0, r0, #4
   4828c:	str	r3, [sp, #84]	; 0x54
   48290:	sub	r2, r2, #1
   48294:	str	r2, [sp, #64]	; 0x40
   48298:	sub	r2, fp, #96	; 0x60
   4829c:	orr	r2, r2, #4
   482a0:	str	r2, [sp, #60]	; 0x3c
   482a4:	ldr	r2, [lr], #4
   482a8:	str	r2, [sp, #68]	; 0x44
   482ac:	b	482d4 <GetDataSlab+0x14178>
   482b0:	ldr	r3, [sp, #60]	; 0x3c
   482b4:	ldr	r2, [r3, r2]
   482b8:	add	r8, r8, r2
   482bc:	add	r7, r2, r7
   482c0:	ldr	r3, [sp, #76]	; 0x4c
   482c4:	add	ip, r1, ip
   482c8:	mov	r2, #0
   482cc:	cmp	ip, r3
   482d0:	bge	5b6a0 <GetDataSlab+0x27544>
   482d4:	ldr	r4, [sp, #68]	; 0x44
   482d8:	ldr	r5, [fp, #20]
   482dc:	ldr	r2, [sp, #72]	; 0x48
   482e0:	cmp	r1, #1
   482e4:	add	r3, r4, r7
   482e8:	add	r7, r8, r4
   482ec:	blt	48324 <GetDataSlab+0x141c8>
   482f0:	ldr	r1, [sp, #88]	; 0x58
   482f4:	mov	r2, #0
   482f8:	add	r4, r1, ip, lsl #2
   482fc:	ldrb	r1, [r7, r2]
   48300:	str	r1, [r4, r2, lsl #2]
   48304:	add	r2, r2, #1
   48308:	ldr	r1, [r5]
   4830c:	cmp	r2, r1
   48310:	blt	482fc <GetDataSlab+0x141a0>
   48314:	ldr	r2, [fp, #12]
   48318:	ldr	r4, [r2]
   4831c:	ldr	r2, [fp, #8]
   48320:	ldr	r2, [r2]
   48324:	str	r2, [sp, #72]	; 0x48
   48328:	sub	r2, r2, r4
   4832c:	str	r4, [sp, #68]	; 0x44
   48330:	add	r8, r7, r2
   48334:	add	r7, r3, r2
   48338:	ldr	r2, [fp, #24]
   4833c:	cmp	r2, #2
   48340:	blt	482c0 <GetDataSlab+0x14164>
   48344:	ldr	r9, [sp, #64]	; 0x40
   48348:	mov	r2, #0
   4834c:	b	48378 <GetDataSlab+0x1421c>
   48350:	sub	r4, fp, #176	; 0xb0
   48354:	ldr	sl, [lr, r2]
   48358:	sub	r3, r3, r5
   4835c:	ldr	r6, [r4, r2]
   48360:	mla	r3, sl, r6, r3
   48364:	add	r7, r3, r7
   48368:	add	r8, r8, r3
   4836c:	subs	r9, r9, #1
   48370:	add	r2, r2, #4
   48374:	beq	482c0 <GetDataSlab+0x14164>
   48378:	ldr	r3, [r0, r2]
   4837c:	ldr	r4, [sp, #84]	; 0x54
   48380:	add	r3, r3, #1
   48384:	str	r3, [r0, r2]
   48388:	ldr	r5, [r4, r2]
   4838c:	sdiv	r6, r3, r5
   48390:	mls	r3, r6, r5, r3
   48394:	cmp	r3, #0
   48398:	bne	482b0 <GetDataSlab+0x14154>
   4839c:	mov	r3, #0
   483a0:	str	r3, [r0, r2]
   483a4:	ldr	r3, [sp, #80]	; 0x50
   483a8:	ldr	r3, [r3, r2]
   483ac:	sdiv	r5, r7, r3
   483b0:	mls	r5, r5, r3, r7
   483b4:	cmp	r5, #0
   483b8:	bne	48350 <GetDataSlab+0x141f4>
   483bc:	ldr	r3, [lr, r2]
   483c0:	cmp	r3, #0
   483c4:	beq	4836c <GetDataSlab+0x14210>
   483c8:	sub	r4, fp, #176	; 0xb0
   483cc:	ldr	r5, [r4, r2]
   483d0:	mla	r7, r5, r3, r7
   483d4:	mla	r8, r5, r3, r8
   483d8:	subs	r9, r9, #1
   483dc:	add	r2, r2, #4
   483e0:	bne	48378 <GetDataSlab+0x1421c>
   483e4:	b	482c0 <GetDataSlab+0x14164>
   483e8:	ldr	r0, [sp, #80]	; 0x50
   483ec:	cmp	r5, #1
   483f0:	add	sl, r0, r7, lsl #1
   483f4:	bne	556b4 <GetDataSlab+0x21558>
   483f8:	ldr	r0, [sp, #76]	; 0x4c
   483fc:	ldr	r3, [fp, #20]
   48400:	sub	r2, fp, #176	; 0xb0
   48404:	cmp	r0, #1
   48408:	blt	5b69c <GetDataSlab+0x27540>
   4840c:	orr	r2, r2, #4
   48410:	ldr	lr, [fp, #12]
   48414:	sub	r0, fp, #136	; 0x88
   48418:	add	r4, r3, #4
   4841c:	str	r2, [sp, #84]	; 0x54
   48420:	ldr	r2, [fp, #24]
   48424:	orr	r0, r0, #4
   48428:	sub	r2, r2, #1
   4842c:	str	r2, [sp, #68]	; 0x44
   48430:	orr	r2, r8, #4
   48434:	mov	r8, #0
   48438:	str	r2, [sp, #64]	; 0x40
   4843c:	ldr	r2, [lr], #4
   48440:	str	r2, [sp, #80]	; 0x50
   48444:	b	4846c <GetDataSlab+0x14310>
   48448:	ldr	r3, [sp, #64]	; 0x40
   4844c:	ldr	r2, [r3, r2]
   48450:	add	sl, sl, r2, lsl #1
   48454:	add	r7, r2, r7
   48458:	ldr	r3, [sp, #76]	; 0x4c
   4845c:	add	r8, r1, r8
   48460:	mov	r2, #0
   48464:	cmp	r8, r3
   48468:	bge	5b6a0 <GetDataSlab+0x27544>
   4846c:	ldr	r5, [sp, #80]	; 0x50
   48470:	ldr	r2, [sp, #72]	; 0x48
   48474:	cmp	r1, #1
   48478:	sub	ip, fp, #176	; 0xb0
   4847c:	add	r9, sl, r5, lsl #1
   48480:	add	r3, r5, r7
   48484:	blt	484cc <GetDataSlab+0x14370>
   48488:	ldr	r1, [sp, #88]	; 0x58
   4848c:	ldr	r5, [fp, #20]
   48490:	mov	r6, r4
   48494:	mov	r2, #0
   48498:	mov	r7, r9
   4849c:	add	r4, r1, r8, lsl #2
   484a0:	ldrsh	r1, [r7], #2
   484a4:	str	r1, [r4, r2, lsl #2]
   484a8:	add	r2, r2, #1
   484ac:	ldr	r1, [r5]
   484b0:	cmp	r2, r1
   484b4:	blt	484a0 <GetDataSlab+0x14344>
   484b8:	ldr	r2, [fp, #12]
   484bc:	mov	r4, r6
   484c0:	ldr	r5, [r2]
   484c4:	ldr	r2, [fp, #8]
   484c8:	ldr	r2, [r2]
   484cc:	str	r2, [sp, #72]	; 0x48
   484d0:	sub	r2, r2, r5
   484d4:	str	r5, [sp, #80]	; 0x50
   484d8:	add	sl, r9, r2, lsl #1
   484dc:	add	r7, r3, r2
   484e0:	ldr	r2, [fp, #24]
   484e4:	cmp	r2, #2
   484e8:	blt	48458 <GetDataSlab+0x142fc>
   484ec:	ldr	r9, [sp, #68]	; 0x44
   484f0:	mov	r2, #0
   484f4:	b	48520 <GetDataSlab+0x143c4>
   484f8:	ldr	r6, [ip, r2]
   484fc:	ldr	ip, [lr, r2]
   48500:	sub	r3, r3, r5
   48504:	mla	r3, ip, r6, r3
   48508:	sub	ip, fp, #176	; 0xb0
   4850c:	add	r7, r3, r7
   48510:	add	sl, sl, r3, lsl #1
   48514:	subs	r9, r9, #1
   48518:	add	r2, r2, #4
   4851c:	beq	48458 <GetDataSlab+0x142fc>
   48520:	ldr	r3, [r0, r2]
   48524:	add	r3, r3, #1
   48528:	str	r3, [r0, r2]
   4852c:	ldr	r5, [r4, r2]
   48530:	sdiv	r6, r3, r5
   48534:	mls	r3, r6, r5, r3
   48538:	cmp	r3, #0
   4853c:	bne	48448 <GetDataSlab+0x142ec>
   48540:	mov	r3, #0
   48544:	str	r3, [r0, r2]
   48548:	ldr	r3, [sp, #84]	; 0x54
   4854c:	ldr	r3, [r3, r2]
   48550:	sdiv	r5, r7, r3
   48554:	mls	r5, r5, r3, r7
   48558:	cmp	r5, #0
   4855c:	bne	484f8 <GetDataSlab+0x1439c>
   48560:	ldr	r3, [lr, r2]
   48564:	cmp	r3, #0
   48568:	beq	48514 <GetDataSlab+0x143b8>
   4856c:	ldr	r6, [ip, r2]
   48570:	mla	r7, r6, r3, r7
   48574:	mul	r3, r6, r3
   48578:	b	48510 <GetDataSlab+0x143b4>
   4857c:	ldr	r0, [sp, #80]	; 0x50
   48580:	cmp	r5, #1
   48584:	add	sl, r0, r7, lsl #1
   48588:	bne	55860 <GetDataSlab+0x21704>
   4858c:	ldr	r0, [sp, #76]	; 0x4c
   48590:	ldr	r3, [fp, #20]
   48594:	sub	r2, fp, #176	; 0xb0
   48598:	cmp	r0, #1
   4859c:	blt	5b69c <GetDataSlab+0x27540>
   485a0:	orr	r2, r2, #4
   485a4:	ldr	lr, [fp, #12]
   485a8:	sub	r0, fp, #136	; 0x88
   485ac:	add	r4, r3, #4
   485b0:	str	r2, [sp, #84]	; 0x54
   485b4:	ldr	r2, [fp, #24]
   485b8:	orr	r0, r0, #4
   485bc:	sub	r2, r2, #1
   485c0:	str	r2, [sp, #68]	; 0x44
   485c4:	orr	r2, r8, #4
   485c8:	mov	r8, #0
   485cc:	str	r2, [sp, #64]	; 0x40
   485d0:	ldr	r2, [lr], #4
   485d4:	str	r2, [sp, #80]	; 0x50
   485d8:	b	48600 <GetDataSlab+0x144a4>
   485dc:	ldr	r3, [sp, #64]	; 0x40
   485e0:	ldr	r2, [r3, r2]
   485e4:	add	sl, sl, r2, lsl #1
   485e8:	add	r7, r2, r7
   485ec:	ldr	r3, [sp, #76]	; 0x4c
   485f0:	add	r8, r1, r8
   485f4:	mov	r2, #0
   485f8:	cmp	r8, r3
   485fc:	bge	5b6a0 <GetDataSlab+0x27544>
   48600:	ldr	r5, [sp, #80]	; 0x50
   48604:	ldr	r2, [sp, #72]	; 0x48
   48608:	cmp	r1, #1
   4860c:	sub	ip, fp, #176	; 0xb0
   48610:	add	r9, sl, r5, lsl #1
   48614:	add	r3, r5, r7
   48618:	blt	48660 <GetDataSlab+0x14504>
   4861c:	ldr	r1, [sp, #88]	; 0x58
   48620:	ldr	r5, [fp, #20]
   48624:	mov	r6, r4
   48628:	mov	r2, #0
   4862c:	mov	r7, r9
   48630:	add	r4, r1, r8, lsl #2
   48634:	ldrh	r1, [r7], #2
   48638:	str	r1, [r4, r2, lsl #2]
   4863c:	add	r2, r2, #1
   48640:	ldr	r1, [r5]
   48644:	cmp	r2, r1
   48648:	blt	48634 <GetDataSlab+0x144d8>
   4864c:	ldr	r2, [fp, #12]
   48650:	mov	r4, r6
   48654:	ldr	r5, [r2]
   48658:	ldr	r2, [fp, #8]
   4865c:	ldr	r2, [r2]
   48660:	str	r2, [sp, #72]	; 0x48
   48664:	sub	r2, r2, r5
   48668:	str	r5, [sp, #80]	; 0x50
   4866c:	add	sl, r9, r2, lsl #1
   48670:	add	r7, r3, r2
   48674:	ldr	r2, [fp, #24]
   48678:	cmp	r2, #2
   4867c:	blt	485ec <GetDataSlab+0x14490>
   48680:	ldr	r9, [sp, #68]	; 0x44
   48684:	mov	r2, #0
   48688:	b	486b4 <GetDataSlab+0x14558>
   4868c:	ldr	r6, [ip, r2]
   48690:	ldr	ip, [lr, r2]
   48694:	sub	r3, r3, r5
   48698:	mla	r3, ip, r6, r3
   4869c:	sub	ip, fp, #176	; 0xb0
   486a0:	add	r7, r3, r7
   486a4:	add	sl, sl, r3, lsl #1
   486a8:	subs	r9, r9, #1
   486ac:	add	r2, r2, #4
   486b0:	beq	485ec <GetDataSlab+0x14490>
   486b4:	ldr	r3, [r0, r2]
   486b8:	add	r3, r3, #1
   486bc:	str	r3, [r0, r2]
   486c0:	ldr	r5, [r4, r2]
   486c4:	sdiv	r6, r3, r5
   486c8:	mls	r3, r6, r5, r3
   486cc:	cmp	r3, #0
   486d0:	bne	485dc <GetDataSlab+0x14480>
   486d4:	mov	r3, #0
   486d8:	str	r3, [r0, r2]
   486dc:	ldr	r3, [sp, #84]	; 0x54
   486e0:	ldr	r3, [r3, r2]
   486e4:	sdiv	r5, r7, r3
   486e8:	mls	r5, r5, r3, r7
   486ec:	cmp	r5, #0
   486f0:	bne	4868c <GetDataSlab+0x14530>
   486f4:	ldr	r3, [lr, r2]
   486f8:	cmp	r3, #0
   486fc:	beq	486a8 <GetDataSlab+0x1454c>
   48700:	ldr	r6, [ip, r2]
   48704:	mla	r7, r6, r3, r7
   48708:	mul	r3, r6, r3
   4870c:	b	486a4 <GetDataSlab+0x14548>
   48710:	ldr	r0, [sp, #80]	; 0x50
   48714:	cmp	r5, #1
   48718:	add	r8, r0, r7, lsl #2
   4871c:	bne	55a0c <GetDataSlab+0x218b0>
   48720:	ldr	r0, [sp, #76]	; 0x4c
   48724:	ldr	r3, [fp, #20]
   48728:	sub	r2, fp, #176	; 0xb0
   4872c:	cmp	r0, #1
   48730:	blt	5b69c <GetDataSlab+0x27540>
   48734:	orr	r2, r2, #4
   48738:	ldr	lr, [fp, #12]
   4873c:	sub	r0, fp, #136	; 0x88
   48740:	add	r3, r3, #4
   48744:	mov	ip, #0
   48748:	str	r2, [sp, #80]	; 0x50
   4874c:	ldr	r2, [fp, #24]
   48750:	orr	r0, r0, #4
   48754:	str	r3, [sp, #84]	; 0x54
   48758:	sub	r2, r2, #1
   4875c:	str	r2, [sp, #64]	; 0x40
   48760:	sub	r2, fp, #96	; 0x60
   48764:	orr	r2, r2, #4
   48768:	str	r2, [sp, #60]	; 0x3c
   4876c:	ldr	r2, [lr], #4
   48770:	str	r2, [sp, #68]	; 0x44
   48774:	b	4879c <GetDataSlab+0x14640>
   48778:	ldr	r3, [sp, #60]	; 0x3c
   4877c:	ldr	r2, [r3, r2]
   48780:	add	r8, r8, r2, lsl #2
   48784:	add	r7, r2, r7
   48788:	ldr	r3, [sp, #76]	; 0x4c
   4878c:	add	ip, r1, ip
   48790:	mov	r2, #0
   48794:	cmp	ip, r3
   48798:	bge	5b6a0 <GetDataSlab+0x27544>
   4879c:	ldr	r4, [sp, #68]	; 0x44
   487a0:	ldr	r5, [fp, #20]
   487a4:	ldr	r2, [sp, #72]	; 0x48
   487a8:	cmp	r1, #1
   487ac:	add	r3, r4, r7
   487b0:	add	r7, r8, r4, lsl #2
   487b4:	blt	487ec <GetDataSlab+0x14690>
   487b8:	ldr	r1, [sp, #88]	; 0x58
   487bc:	mov	r2, #0
   487c0:	add	r4, r1, ip, lsl #2
   487c4:	ldr	r1, [r7, r2, lsl #2]
   487c8:	str	r1, [r4, r2, lsl #2]
   487cc:	add	r2, r2, #1
   487d0:	ldr	r1, [r5]
   487d4:	cmp	r2, r1
   487d8:	blt	487c4 <GetDataSlab+0x14668>
   487dc:	ldr	r2, [fp, #12]
   487e0:	ldr	r4, [r2]
   487e4:	ldr	r2, [fp, #8]
   487e8:	ldr	r2, [r2]
   487ec:	str	r2, [sp, #72]	; 0x48
   487f0:	sub	r2, r2, r4
   487f4:	str	r4, [sp, #68]	; 0x44
   487f8:	add	r8, r7, r2, lsl #2
   487fc:	add	r7, r3, r2
   48800:	ldr	r2, [fp, #24]
   48804:	cmp	r2, #2
   48808:	blt	48788 <GetDataSlab+0x1462c>
   4880c:	ldr	r9, [sp, #64]	; 0x40
   48810:	mov	r2, #0
   48814:	b	48840 <GetDataSlab+0x146e4>
   48818:	sub	r4, fp, #176	; 0xb0
   4881c:	ldr	sl, [lr, r2]
   48820:	sub	r3, r3, r5
   48824:	ldr	r6, [r4, r2]
   48828:	mla	r3, sl, r6, r3
   4882c:	add	r7, r3, r7
   48830:	add	r8, r8, r3, lsl #2
   48834:	subs	r9, r9, #1
   48838:	add	r2, r2, #4
   4883c:	beq	48788 <GetDataSlab+0x1462c>
   48840:	ldr	r3, [r0, r2]
   48844:	ldr	r4, [sp, #84]	; 0x54
   48848:	add	r3, r3, #1
   4884c:	str	r3, [r0, r2]
   48850:	ldr	r5, [r4, r2]
   48854:	sdiv	r6, r3, r5
   48858:	mls	r3, r6, r5, r3
   4885c:	cmp	r3, #0
   48860:	bne	48778 <GetDataSlab+0x1461c>
   48864:	mov	r3, #0
   48868:	str	r3, [r0, r2]
   4886c:	ldr	r3, [sp, #80]	; 0x50
   48870:	ldr	r3, [r3, r2]
   48874:	sdiv	r5, r7, r3
   48878:	mls	r5, r5, r3, r7
   4887c:	cmp	r5, #0
   48880:	bne	48818 <GetDataSlab+0x146bc>
   48884:	ldr	r3, [lr, r2]
   48888:	cmp	r3, #0
   4888c:	beq	48834 <GetDataSlab+0x146d8>
   48890:	sub	r4, fp, #176	; 0xb0
   48894:	ldr	r5, [r4, r2]
   48898:	mla	r7, r5, r3, r7
   4889c:	mul	r3, r5, r3
   488a0:	b	48830 <GetDataSlab+0x146d4>
   488a4:	ldr	r0, [sp, #80]	; 0x50
   488a8:	cmp	r5, #1
   488ac:	add	r8, r0, r7, lsl #2
   488b0:	bne	55bb8 <GetDataSlab+0x21a5c>
   488b4:	ldr	r0, [sp, #76]	; 0x4c
   488b8:	ldr	r3, [fp, #20]
   488bc:	sub	r2, fp, #176	; 0xb0
   488c0:	cmp	r0, #1
   488c4:	blt	5b69c <GetDataSlab+0x27540>
   488c8:	orr	r2, r2, #4
   488cc:	ldr	lr, [fp, #12]
   488d0:	sub	r0, fp, #136	; 0x88
   488d4:	add	r3, r3, #4
   488d8:	mov	ip, #0
   488dc:	str	r2, [sp, #80]	; 0x50
   488e0:	ldr	r2, [fp, #24]
   488e4:	orr	r0, r0, #4
   488e8:	str	r3, [sp, #84]	; 0x54
   488ec:	sub	r2, r2, #1
   488f0:	str	r2, [sp, #64]	; 0x40
   488f4:	sub	r2, fp, #96	; 0x60
   488f8:	orr	r2, r2, #4
   488fc:	str	r2, [sp, #60]	; 0x3c
   48900:	ldr	r2, [lr], #4
   48904:	str	r2, [sp, #68]	; 0x44
   48908:	b	48930 <GetDataSlab+0x147d4>
   4890c:	ldr	r3, [sp, #60]	; 0x3c
   48910:	ldr	r2, [r3, r2]
   48914:	add	r8, r8, r2, lsl #2
   48918:	add	r7, r2, r7
   4891c:	ldr	r3, [sp, #76]	; 0x4c
   48920:	add	ip, r1, ip
   48924:	mov	r2, #0
   48928:	cmp	ip, r3
   4892c:	bge	5b6a0 <GetDataSlab+0x27544>
   48930:	ldr	r4, [sp, #68]	; 0x44
   48934:	ldr	r5, [fp, #20]
   48938:	ldr	r2, [sp, #72]	; 0x48
   4893c:	cmp	r1, #1
   48940:	add	r3, r4, r7
   48944:	add	r7, r8, r4, lsl #2
   48948:	blt	48980 <GetDataSlab+0x14824>
   4894c:	ldr	r1, [sp, #88]	; 0x58
   48950:	mov	r2, #0
   48954:	add	r4, r1, ip, lsl #2
   48958:	ldr	r1, [r7, r2, lsl #2]
   4895c:	str	r1, [r4, r2, lsl #2]
   48960:	add	r2, r2, #1
   48964:	ldr	r1, [r5]
   48968:	cmp	r2, r1
   4896c:	blt	48958 <GetDataSlab+0x147fc>
   48970:	ldr	r2, [fp, #12]
   48974:	ldr	r4, [r2]
   48978:	ldr	r2, [fp, #8]
   4897c:	ldr	r2, [r2]
   48980:	str	r2, [sp, #72]	; 0x48
   48984:	sub	r2, r2, r4
   48988:	str	r4, [sp, #68]	; 0x44
   4898c:	add	r8, r7, r2, lsl #2
   48990:	add	r7, r3, r2
   48994:	ldr	r2, [fp, #24]
   48998:	cmp	r2, #2
   4899c:	blt	4891c <GetDataSlab+0x147c0>
   489a0:	ldr	r9, [sp, #64]	; 0x40
   489a4:	mov	r2, #0
   489a8:	b	489d4 <GetDataSlab+0x14878>
   489ac:	sub	r4, fp, #176	; 0xb0
   489b0:	ldr	sl, [lr, r2]
   489b4:	sub	r3, r3, r5
   489b8:	ldr	r6, [r4, r2]
   489bc:	mla	r3, sl, r6, r3
   489c0:	add	r7, r3, r7
   489c4:	add	r8, r8, r3, lsl #2
   489c8:	subs	r9, r9, #1
   489cc:	add	r2, r2, #4
   489d0:	beq	4891c <GetDataSlab+0x147c0>
   489d4:	ldr	r3, [r0, r2]
   489d8:	ldr	r4, [sp, #84]	; 0x54
   489dc:	add	r3, r3, #1
   489e0:	str	r3, [r0, r2]
   489e4:	ldr	r5, [r4, r2]
   489e8:	sdiv	r6, r3, r5
   489ec:	mls	r3, r6, r5, r3
   489f0:	cmp	r3, #0
   489f4:	bne	4890c <GetDataSlab+0x147b0>
   489f8:	mov	r3, #0
   489fc:	str	r3, [r0, r2]
   48a00:	ldr	r3, [sp, #80]	; 0x50
   48a04:	ldr	r3, [r3, r2]
   48a08:	sdiv	r5, r7, r3
   48a0c:	mls	r5, r5, r3, r7
   48a10:	cmp	r5, #0
   48a14:	bne	489ac <GetDataSlab+0x14850>
   48a18:	ldr	r3, [lr, r2]
   48a1c:	cmp	r3, #0
   48a20:	beq	489c8 <GetDataSlab+0x1486c>
   48a24:	sub	r4, fp, #176	; 0xb0
   48a28:	ldr	r5, [r4, r2]
   48a2c:	mla	r7, r5, r3, r7
   48a30:	mul	r3, r5, r3
   48a34:	b	489c4 <GetDataSlab+0x14868>
   48a38:	ldr	r0, [sp, #80]	; 0x50
   48a3c:	cmp	r5, #1
   48a40:	add	sl, r0, r7, lsl #2
   48a44:	bne	55d64 <GetDataSlab+0x21c08>
   48a48:	ldr	r0, [sp, #76]	; 0x4c
   48a4c:	ldr	r3, [fp, #20]
   48a50:	sub	r2, fp, #176	; 0xb0
   48a54:	cmp	r0, #1
   48a58:	blt	5b69c <GetDataSlab+0x27540>
   48a5c:	orr	r2, r2, #4
   48a60:	ldr	lr, [fp, #12]
   48a64:	sub	r0, fp, #136	; 0x88
   48a68:	add	r4, r3, #4
   48a6c:	str	r2, [sp, #84]	; 0x54
   48a70:	ldr	r2, [fp, #24]
   48a74:	orr	r0, r0, #4
   48a78:	sub	r2, r2, #1
   48a7c:	str	r2, [sp, #68]	; 0x44
   48a80:	orr	r2, r8, #4
   48a84:	mov	r8, #0
   48a88:	str	r2, [sp, #64]	; 0x40
   48a8c:	ldr	r2, [lr], #4
   48a90:	str	r2, [sp, #80]	; 0x50
   48a94:	b	48abc <GetDataSlab+0x14960>
   48a98:	ldr	r3, [sp, #64]	; 0x40
   48a9c:	ldr	r2, [r3, r2]
   48aa0:	add	sl, sl, r2, lsl #2
   48aa4:	add	r7, r2, r7
   48aa8:	ldr	r3, [sp, #76]	; 0x4c
   48aac:	add	r8, r1, r8
   48ab0:	mov	r2, #0
   48ab4:	cmp	r8, r3
   48ab8:	bge	5b6a0 <GetDataSlab+0x27544>
   48abc:	ldr	r5, [sp, #80]	; 0x50
   48ac0:	ldr	r2, [sp, #72]	; 0x48
   48ac4:	cmp	r1, #1
   48ac8:	sub	ip, fp, #176	; 0xb0
   48acc:	add	r9, sl, r5, lsl #2
   48ad0:	add	r3, r5, r7
   48ad4:	blt	48b28 <GetDataSlab+0x149cc>
   48ad8:	ldr	r1, [sp, #88]	; 0x58
   48adc:	ldr	r5, [fp, #20]
   48ae0:	mov	r6, r4
   48ae4:	mov	r2, #0
   48ae8:	mov	r7, r9
   48aec:	add	r4, r1, r8, lsl #2
   48af0:	vldr	s0, [r7]
   48af4:	add	r7, r7, #4
   48af8:	vcvt.s32.f32	s0, s0
   48afc:	vmov	r1, s0
   48b00:	str	r1, [r4, r2, lsl #2]
   48b04:	add	r2, r2, #1
   48b08:	ldr	r1, [r5]
   48b0c:	cmp	r2, r1
   48b10:	blt	48af0 <GetDataSlab+0x14994>
   48b14:	ldr	r2, [fp, #12]
   48b18:	mov	r4, r6
   48b1c:	ldr	r5, [r2]
   48b20:	ldr	r2, [fp, #8]
   48b24:	ldr	r2, [r2]
   48b28:	str	r2, [sp, #72]	; 0x48
   48b2c:	sub	r2, r2, r5
   48b30:	str	r5, [sp, #80]	; 0x50
   48b34:	add	sl, r9, r2, lsl #2
   48b38:	add	r7, r3, r2
   48b3c:	ldr	r2, [fp, #24]
   48b40:	cmp	r2, #2
   48b44:	blt	48aa8 <GetDataSlab+0x1494c>
   48b48:	ldr	r9, [sp, #68]	; 0x44
   48b4c:	mov	r2, #0
   48b50:	b	48b7c <GetDataSlab+0x14a20>
   48b54:	ldr	r6, [ip, r2]
   48b58:	ldr	ip, [lr, r2]
   48b5c:	sub	r3, r3, r5
   48b60:	mla	r3, ip, r6, r3
   48b64:	sub	ip, fp, #176	; 0xb0
   48b68:	add	r7, r3, r7
   48b6c:	add	sl, sl, r3, lsl #2
   48b70:	subs	r9, r9, #1
   48b74:	add	r2, r2, #4
   48b78:	beq	48aa8 <GetDataSlab+0x1494c>
   48b7c:	ldr	r3, [r0, r2]
   48b80:	add	r3, r3, #1
   48b84:	str	r3, [r0, r2]
   48b88:	ldr	r5, [r4, r2]
   48b8c:	sdiv	r6, r3, r5
   48b90:	mls	r3, r6, r5, r3
   48b94:	cmp	r3, #0
   48b98:	bne	48a98 <GetDataSlab+0x1493c>
   48b9c:	mov	r3, #0
   48ba0:	str	r3, [r0, r2]
   48ba4:	ldr	r3, [sp, #84]	; 0x54
   48ba8:	ldr	r3, [r3, r2]
   48bac:	sdiv	r5, r7, r3
   48bb0:	mls	r5, r5, r3, r7
   48bb4:	cmp	r5, #0
   48bb8:	bne	48b54 <GetDataSlab+0x149f8>
   48bbc:	ldr	r3, [lr, r2]
   48bc0:	cmp	r3, #0
   48bc4:	beq	48b70 <GetDataSlab+0x14a14>
   48bc8:	ldr	r6, [ip, r2]
   48bcc:	mla	r7, r6, r3, r7
   48bd0:	mul	r3, r6, r3
   48bd4:	b	48b6c <GetDataSlab+0x14a10>
   48bd8:	ldr	r0, [sp, #80]	; 0x50
   48bdc:	cmp	r5, #1
   48be0:	add	sl, r0, r7, lsl #3
   48be4:	bne	55f18 <GetDataSlab+0x21dbc>
   48be8:	ldr	r0, [sp, #76]	; 0x4c
   48bec:	ldr	r3, [fp, #20]
   48bf0:	sub	r2, fp, #176	; 0xb0
   48bf4:	cmp	r0, #1
   48bf8:	blt	5b69c <GetDataSlab+0x27540>
   48bfc:	orr	r2, r2, #4
   48c00:	ldr	lr, [fp, #12]
   48c04:	sub	r0, fp, #136	; 0x88
   48c08:	add	r4, r3, #4
   48c0c:	str	r2, [sp, #84]	; 0x54
   48c10:	ldr	r2, [fp, #24]
   48c14:	orr	r0, r0, #4
   48c18:	sub	r2, r2, #1
   48c1c:	str	r2, [sp, #68]	; 0x44
   48c20:	orr	r2, r8, #4
   48c24:	mov	r8, #0
   48c28:	str	r2, [sp, #64]	; 0x40
   48c2c:	ldr	r2, [lr], #4
   48c30:	str	r2, [sp, #80]	; 0x50
   48c34:	b	48c5c <GetDataSlab+0x14b00>
   48c38:	ldr	r3, [sp, #64]	; 0x40
   48c3c:	ldr	r2, [r3, r2]
   48c40:	add	sl, sl, r2, lsl #3
   48c44:	add	r7, r2, r7
   48c48:	ldr	r3, [sp, #76]	; 0x4c
   48c4c:	add	r8, r1, r8
   48c50:	mov	r2, #0
   48c54:	cmp	r8, r3
   48c58:	bge	5b6a0 <GetDataSlab+0x27544>
   48c5c:	ldr	r5, [sp, #80]	; 0x50
   48c60:	ldr	r2, [sp, #72]	; 0x48
   48c64:	cmp	r1, #1
   48c68:	sub	ip, fp, #176	; 0xb0
   48c6c:	add	r9, sl, r5, lsl #3
   48c70:	add	r3, r5, r7
   48c74:	blt	48cc8 <GetDataSlab+0x14b6c>
   48c78:	ldr	r1, [sp, #88]	; 0x58
   48c7c:	ldr	r5, [fp, #20]
   48c80:	mov	r6, r4
   48c84:	mov	r2, #0
   48c88:	mov	r7, r9
   48c8c:	add	r4, r1, r8, lsl #2
   48c90:	vldr	d16, [r7]
   48c94:	add	r7, r7, #8
   48c98:	vcvt.s32.f64	s0, d16
   48c9c:	vmov	r1, s0
   48ca0:	str	r1, [r4, r2, lsl #2]
   48ca4:	add	r2, r2, #1
   48ca8:	ldr	r1, [r5]
   48cac:	cmp	r2, r1
   48cb0:	blt	48c90 <GetDataSlab+0x14b34>
   48cb4:	ldr	r2, [fp, #12]
   48cb8:	mov	r4, r6
   48cbc:	ldr	r5, [r2]
   48cc0:	ldr	r2, [fp, #8]
   48cc4:	ldr	r2, [r2]
   48cc8:	str	r2, [sp, #72]	; 0x48
   48ccc:	sub	r2, r2, r5
   48cd0:	str	r5, [sp, #80]	; 0x50
   48cd4:	add	sl, r9, r2, lsl #3
   48cd8:	add	r7, r3, r2
   48cdc:	ldr	r2, [fp, #24]
   48ce0:	cmp	r2, #2
   48ce4:	blt	48c48 <GetDataSlab+0x14aec>
   48ce8:	ldr	r9, [sp, #68]	; 0x44
   48cec:	mov	r2, #0
   48cf0:	b	48d1c <GetDataSlab+0x14bc0>
   48cf4:	ldr	r6, [ip, r2]
   48cf8:	ldr	ip, [lr, r2]
   48cfc:	sub	r3, r3, r5
   48d00:	mla	r3, ip, r6, r3
   48d04:	sub	ip, fp, #176	; 0xb0
   48d08:	add	r7, r3, r7
   48d0c:	add	sl, sl, r3, lsl #3
   48d10:	subs	r9, r9, #1
   48d14:	add	r2, r2, #4
   48d18:	beq	48c48 <GetDataSlab+0x14aec>
   48d1c:	ldr	r3, [r0, r2]
   48d20:	add	r3, r3, #1
   48d24:	str	r3, [r0, r2]
   48d28:	ldr	r5, [r4, r2]
   48d2c:	sdiv	r6, r3, r5
   48d30:	mls	r3, r6, r5, r3
   48d34:	cmp	r3, #0
   48d38:	bne	48c38 <GetDataSlab+0x14adc>
   48d3c:	mov	r3, #0
   48d40:	str	r3, [r0, r2]
   48d44:	ldr	r3, [sp, #84]	; 0x54
   48d48:	ldr	r3, [r3, r2]
   48d4c:	sdiv	r5, r7, r3
   48d50:	mls	r5, r5, r3, r7
   48d54:	cmp	r5, #0
   48d58:	bne	48cf4 <GetDataSlab+0x14b98>
   48d5c:	ldr	r3, [lr, r2]
   48d60:	cmp	r3, #0
   48d64:	beq	48d10 <GetDataSlab+0x14bb4>
   48d68:	ldr	r6, [ip, r2]
   48d6c:	mla	r7, r6, r3, r7
   48d70:	mul	r3, r6, r3
   48d74:	b	48d0c <GetDataSlab+0x14bb0>
   48d78:	ldr	r0, [sp, #80]	; 0x50
   48d7c:	cmp	r7, #1
   48d80:	add	r9, r0, r3, lsl #3
   48d84:	bne	560cc <GetDataSlab+0x21f70>
   48d88:	ldr	r0, [sp, #68]	; 0x44
   48d8c:	sub	ip, fp, #176	; 0xb0
   48d90:	cmp	r0, #1
   48d94:	blt	5626c <GetDataSlab+0x22110>
   48d98:	ldr	r2, [fp, #20]
   48d9c:	ldr	sl, [fp, #12]
   48da0:	sub	r0, fp, #136	; 0x88
   48da4:	mov	lr, #0
   48da8:	orr	r0, r0, #4
   48dac:	add	r5, r2, #4
   48db0:	orr	r2, ip, #4
   48db4:	ldr	r7, [sl], #4
   48db8:	str	r2, [sp, #76]	; 0x4c
   48dbc:	ldr	r2, [fp, #24]
   48dc0:	sub	r2, r2, #1
   48dc4:	str	r2, [sp, #60]	; 0x3c
   48dc8:	orr	r2, r8, #4
   48dcc:	str	r2, [sp, #56]	; 0x38
   48dd0:	b	48df8 <GetDataSlab+0x14c9c>
   48dd4:	ldr	r2, [sp, #56]	; 0x38
   48dd8:	ldr	r2, [r2, r7]
   48ddc:	add	r9, r9, r2, lsl #3
   48de0:	add	r3, r2, r3
   48de4:	ldr	r2, [sp, #68]	; 0x44
   48de8:	ldr	r7, [sp, #72]	; 0x48
   48dec:	add	lr, r1, lr
   48df0:	cmp	lr, r2
   48df4:	bge	5626c <GetDataSlab+0x22110>
   48df8:	ldr	r2, [sp, #64]	; 0x40
   48dfc:	add	r4, r9, r7, lsl #3
   48e00:	add	r8, r7, r3
   48e04:	cmp	r1, #1
   48e08:	blt	48e50 <GetDataSlab+0x14cf4>
   48e0c:	ldr	r1, [sp, #88]	; 0x58
   48e10:	ldr	r2, [fp, #20]
   48e14:	mov	r6, r5
   48e18:	mov	r3, #0
   48e1c:	mov	r5, r4
   48e20:	add	r7, r1, lr, lsl #2
   48e24:	ldr	r1, [r5], #8
   48e28:	str	r1, [r7, r3, lsl #2]
   48e2c:	add	r3, r3, #1
   48e30:	ldr	r1, [r2]
   48e34:	cmp	r3, r1
   48e38:	blt	48e24 <GetDataSlab+0x14cc8>
   48e3c:	ldr	r2, [fp, #12]
   48e40:	mov	r5, r6
   48e44:	ldr	r7, [r2]
   48e48:	ldr	r2, [fp, #8]
   48e4c:	ldr	r2, [r2]
   48e50:	str	r2, [sp, #64]	; 0x40
   48e54:	sub	r2, r2, r7
   48e58:	str	r7, [sp, #72]	; 0x48
   48e5c:	add	r9, r4, r2, lsl #3
   48e60:	add	r3, r8, r2
   48e64:	ldr	r2, [fp, #24]
   48e68:	cmp	r2, #2
   48e6c:	blt	48de4 <GetDataSlab+0x14c88>
   48e70:	ldr	r8, [sp, #60]	; 0x3c
   48e74:	mov	r7, #0
   48e78:	b	48ea4 <GetDataSlab+0x14d48>
   48e7c:	ldr	r4, [ip, r7]
   48e80:	ldr	ip, [sl, r7]
   48e84:	sub	r2, r2, r6
   48e88:	mla	r2, ip, r4, r2
   48e8c:	sub	ip, fp, #176	; 0xb0
   48e90:	add	r3, r2, r3
   48e94:	add	r9, r9, r2, lsl #3
   48e98:	subs	r8, r8, #1
   48e9c:	add	r7, r7, #4
   48ea0:	beq	48de4 <GetDataSlab+0x14c88>
   48ea4:	ldr	r2, [r0, r7]
   48ea8:	add	r2, r2, #1
   48eac:	str	r2, [r0, r7]
   48eb0:	ldr	r6, [r5, r7]
   48eb4:	sdiv	r4, r2, r6
   48eb8:	mls	r2, r4, r6, r2
   48ebc:	cmp	r2, #0
   48ec0:	bne	48dd4 <GetDataSlab+0x14c78>
   48ec4:	mov	r2, #0
   48ec8:	str	r2, [r0, r7]
   48ecc:	ldr	r2, [sp, #76]	; 0x4c
   48ed0:	ldr	r2, [r2, r7]
   48ed4:	sdiv	r4, r3, r2
   48ed8:	mls	r6, r4, r2, r3
   48edc:	cmp	r6, #0
   48ee0:	bne	48e7c <GetDataSlab+0x14d20>
   48ee4:	ldr	r2, [sl, r7]
   48ee8:	cmp	r2, #0
   48eec:	beq	48e98 <GetDataSlab+0x14d3c>
   48ef0:	ldr	r6, [ip, r7]
   48ef4:	mla	r3, r6, r2, r3
   48ef8:	mul	r2, r6, r2
   48efc:	b	48e94 <GetDataSlab+0x14d38>
   48f00:	ldr	r0, [sp, #80]	; 0x50
   48f04:	cmp	r5, #1
   48f08:	add	r8, r0, r7
   48f0c:	bne	565c8 <GetDataSlab+0x2246c>
   48f10:	ldr	r0, [sp, #76]	; 0x4c
   48f14:	ldr	r3, [fp, #20]
   48f18:	sub	r2, fp, #176	; 0xb0
   48f1c:	cmp	r0, #1
   48f20:	blt	5b69c <GetDataSlab+0x27540>
   48f24:	orr	r2, r2, #4
   48f28:	ldr	lr, [fp, #12]
   48f2c:	sub	r0, fp, #136	; 0x88
   48f30:	add	r3, r3, #4
   48f34:	mov	ip, #0
   48f38:	str	r2, [sp, #80]	; 0x50
   48f3c:	ldr	r2, [fp, #24]
   48f40:	orr	r0, r0, #4
   48f44:	str	r3, [sp, #84]	; 0x54
   48f48:	sub	r2, r2, #1
   48f4c:	str	r2, [sp, #64]	; 0x40
   48f50:	sub	r2, fp, #96	; 0x60
   48f54:	orr	r2, r2, #4
   48f58:	str	r2, [sp, #60]	; 0x3c
   48f5c:	ldr	r2, [lr], #4
   48f60:	str	r2, [sp, #68]	; 0x44
   48f64:	b	48f8c <GetDataSlab+0x14e30>
   48f68:	ldr	r3, [sp, #60]	; 0x3c
   48f6c:	ldr	r2, [r3, r2]
   48f70:	add	r8, r8, r2
   48f74:	add	r7, r2, r7
   48f78:	ldr	r2, [sp, #76]	; 0x4c
   48f7c:	add	ip, r1, ip
   48f80:	cmp	ip, r2
   48f84:	mov	r2, #0
   48f88:	bge	5b6a0 <GetDataSlab+0x27544>
   48f8c:	ldr	r4, [sp, #68]	; 0x44
   48f90:	ldr	r5, [fp, #20]
   48f94:	ldr	r2, [sp, #72]	; 0x48
   48f98:	cmp	r1, #1
   48f9c:	add	r3, r4, r7
   48fa0:	add	r7, r8, r4
   48fa4:	blt	48fdc <GetDataSlab+0x14e80>
   48fa8:	ldr	r1, [sp, #88]	; 0x58
   48fac:	mov	r2, #0
   48fb0:	add	r4, r1, ip, lsl #2
   48fb4:	ldrb	r1, [r7, r2]
   48fb8:	str	r1, [r4, r2, lsl #2]
   48fbc:	add	r2, r2, #1
   48fc0:	ldr	r1, [r5]
   48fc4:	cmp	r2, r1
   48fc8:	blt	48fb4 <GetDataSlab+0x14e58>
   48fcc:	ldr	r2, [fp, #12]
   48fd0:	ldr	r4, [r2]
   48fd4:	ldr	r2, [fp, #8]
   48fd8:	ldr	r2, [r2]
   48fdc:	str	r2, [sp, #72]	; 0x48
   48fe0:	sub	r2, r2, r4
   48fe4:	str	r4, [sp, #68]	; 0x44
   48fe8:	add	r8, r7, r2
   48fec:	add	r7, r3, r2
   48ff0:	ldr	r2, [fp, #24]
   48ff4:	cmp	r2, #2
   48ff8:	blt	48f78 <GetDataSlab+0x14e1c>
   48ffc:	ldr	r9, [sp, #64]	; 0x40
   49000:	mov	r2, #0
   49004:	b	49030 <GetDataSlab+0x14ed4>
   49008:	sub	r4, fp, #176	; 0xb0
   4900c:	ldr	sl, [lr, r2]
   49010:	sub	r3, r3, r5
   49014:	ldr	r6, [r4, r2]
   49018:	mla	r3, sl, r6, r3
   4901c:	add	r7, r3, r7
   49020:	add	r8, r8, r3
   49024:	subs	r9, r9, #1
   49028:	add	r2, r2, #4
   4902c:	beq	48f78 <GetDataSlab+0x14e1c>
   49030:	ldr	r3, [r0, r2]
   49034:	ldr	r4, [sp, #84]	; 0x54
   49038:	add	r3, r3, #1
   4903c:	str	r3, [r0, r2]
   49040:	ldr	r5, [r4, r2]
   49044:	sdiv	r6, r3, r5
   49048:	mls	r3, r6, r5, r3
   4904c:	cmp	r3, #0
   49050:	bne	48f68 <GetDataSlab+0x14e0c>
   49054:	mov	r3, #0
   49058:	str	r3, [r0, r2]
   4905c:	ldr	r3, [sp, #80]	; 0x50
   49060:	ldr	r3, [r3, r2]
   49064:	sdiv	r5, r7, r3
   49068:	mls	r5, r5, r3, r7
   4906c:	cmp	r5, #0
   49070:	bne	49008 <GetDataSlab+0x14eac>
   49074:	ldr	r3, [lr, r2]
   49078:	cmp	r3, #0
   4907c:	beq	49024 <GetDataSlab+0x14ec8>
   49080:	sub	r4, fp, #176	; 0xb0
   49084:	ldr	r5, [r4, r2]
   49088:	mla	r7, r5, r3, r7
   4908c:	mla	r8, r5, r3, r8
   49090:	subs	r9, r9, #1
   49094:	add	r2, r2, #4
   49098:	bne	49030 <GetDataSlab+0x14ed4>
   4909c:	b	48f78 <GetDataSlab+0x14e1c>
   490a0:	ldr	r0, [sp, #80]	; 0x50
   490a4:	cmp	r5, #1
   490a8:	add	sl, r0, r7, lsl #1
   490ac:	bne	56780 <GetDataSlab+0x22624>
   490b0:	ldr	r0, [sp, #76]	; 0x4c
   490b4:	ldr	r3, [fp, #20]
   490b8:	sub	r2, fp, #176	; 0xb0
   490bc:	cmp	r0, #1
   490c0:	blt	5b69c <GetDataSlab+0x27540>
   490c4:	orr	r2, r2, #4
   490c8:	ldr	lr, [fp, #12]
   490cc:	sub	r0, fp, #136	; 0x88
   490d0:	add	r4, r3, #4
   490d4:	str	r2, [sp, #84]	; 0x54
   490d8:	ldr	r2, [fp, #24]
   490dc:	orr	r0, r0, #4
   490e0:	sub	r2, r2, #1
   490e4:	str	r2, [sp, #68]	; 0x44
   490e8:	orr	r2, r8, #4
   490ec:	mov	r8, #0
   490f0:	str	r2, [sp, #64]	; 0x40
   490f4:	ldr	r2, [lr], #4
   490f8:	str	r2, [sp, #80]	; 0x50
   490fc:	b	49124 <GetDataSlab+0x14fc8>
   49100:	ldr	r3, [sp, #64]	; 0x40
   49104:	ldr	r2, [r3, r2]
   49108:	add	sl, sl, r2, lsl #1
   4910c:	add	r7, r2, r7
   49110:	ldr	r3, [sp, #76]	; 0x4c
   49114:	add	r8, r1, r8
   49118:	mov	r2, #0
   4911c:	cmp	r8, r3
   49120:	bge	5b6a0 <GetDataSlab+0x27544>
   49124:	ldr	r5, [sp, #80]	; 0x50
   49128:	ldr	r2, [sp, #72]	; 0x48
   4912c:	cmp	r1, #1
   49130:	sub	ip, fp, #176	; 0xb0
   49134:	add	r9, sl, r5, lsl #1
   49138:	add	r3, r5, r7
   4913c:	blt	49184 <GetDataSlab+0x15028>
   49140:	ldr	r1, [sp, #88]	; 0x58
   49144:	ldr	r5, [fp, #20]
   49148:	mov	r6, r4
   4914c:	mov	r2, #0
   49150:	mov	r7, r9
   49154:	add	r4, r1, r8, lsl #2
   49158:	ldrsh	r1, [r7], #2
   4915c:	str	r1, [r4, r2, lsl #2]
   49160:	add	r2, r2, #1
   49164:	ldr	r1, [r5]
   49168:	cmp	r2, r1
   4916c:	blt	49158 <GetDataSlab+0x14ffc>
   49170:	ldr	r2, [fp, #12]
   49174:	mov	r4, r6
   49178:	ldr	r5, [r2]
   4917c:	ldr	r2, [fp, #8]
   49180:	ldr	r2, [r2]
   49184:	str	r2, [sp, #72]	; 0x48
   49188:	sub	r2, r2, r5
   4918c:	str	r5, [sp, #80]	; 0x50
   49190:	add	sl, r9, r2, lsl #1
   49194:	add	r7, r3, r2
   49198:	ldr	r2, [fp, #24]
   4919c:	cmp	r2, #2
   491a0:	blt	49110 <GetDataSlab+0x14fb4>
   491a4:	ldr	r9, [sp, #68]	; 0x44
   491a8:	mov	r2, #0
   491ac:	b	491d8 <GetDataSlab+0x1507c>
   491b0:	ldr	r6, [ip, r2]
   491b4:	ldr	ip, [lr, r2]
   491b8:	sub	r3, r3, r5
   491bc:	mla	r3, ip, r6, r3
   491c0:	sub	ip, fp, #176	; 0xb0
   491c4:	add	r7, r3, r7
   491c8:	add	sl, sl, r3, lsl #1
   491cc:	subs	r9, r9, #1
   491d0:	add	r2, r2, #4
   491d4:	beq	49110 <GetDataSlab+0x14fb4>
   491d8:	ldr	r3, [r0, r2]
   491dc:	add	r3, r3, #1
   491e0:	str	r3, [r0, r2]
   491e4:	ldr	r5, [r4, r2]
   491e8:	sdiv	r6, r3, r5
   491ec:	mls	r3, r6, r5, r3
   491f0:	cmp	r3, #0
   491f4:	bne	49100 <GetDataSlab+0x14fa4>
   491f8:	mov	r3, #0
   491fc:	str	r3, [r0, r2]
   49200:	ldr	r3, [sp, #84]	; 0x54
   49204:	ldr	r3, [r3, r2]
   49208:	sdiv	r5, r7, r3
   4920c:	mls	r5, r5, r3, r7
   49210:	cmp	r5, #0
   49214:	bne	491b0 <GetDataSlab+0x15054>
   49218:	ldr	r3, [lr, r2]
   4921c:	cmp	r3, #0
   49220:	beq	491cc <GetDataSlab+0x15070>
   49224:	ldr	r6, [ip, r2]
   49228:	mla	r7, r6, r3, r7
   4922c:	mul	r3, r6, r3
   49230:	b	491c8 <GetDataSlab+0x1506c>
   49234:	ldr	r0, [sp, #80]	; 0x50
   49238:	cmp	r5, #1
   4923c:	add	sl, r0, r7, lsl #1
   49240:	bne	5692c <GetDataSlab+0x227d0>
   49244:	ldr	r0, [sp, #76]	; 0x4c
   49248:	ldr	r3, [fp, #20]
   4924c:	sub	r2, fp, #176	; 0xb0
   49250:	cmp	r0, #1
   49254:	blt	5b69c <GetDataSlab+0x27540>
   49258:	orr	r2, r2, #4
   4925c:	ldr	lr, [fp, #12]
   49260:	sub	r0, fp, #136	; 0x88
   49264:	add	r4, r3, #4
   49268:	str	r2, [sp, #84]	; 0x54
   4926c:	ldr	r2, [fp, #24]
   49270:	orr	r0, r0, #4
   49274:	sub	r2, r2, #1
   49278:	str	r2, [sp, #68]	; 0x44
   4927c:	orr	r2, r8, #4
   49280:	mov	r8, #0
   49284:	str	r2, [sp, #64]	; 0x40
   49288:	ldr	r2, [lr], #4
   4928c:	str	r2, [sp, #80]	; 0x50
   49290:	b	492b8 <GetDataSlab+0x1515c>
   49294:	ldr	r3, [sp, #64]	; 0x40
   49298:	ldr	r2, [r3, r2]
   4929c:	add	sl, sl, r2, lsl #1
   492a0:	add	r7, r2, r7
   492a4:	ldr	r2, [sp, #76]	; 0x4c
   492a8:	add	r8, r1, r8
   492ac:	cmp	r8, r2
   492b0:	mov	r2, #0
   492b4:	bge	5b6a0 <GetDataSlab+0x27544>
   492b8:	ldr	r5, [sp, #80]	; 0x50
   492bc:	ldr	r2, [sp, #72]	; 0x48
   492c0:	cmp	r1, #1
   492c4:	sub	ip, fp, #176	; 0xb0
   492c8:	add	r9, sl, r5, lsl #1
   492cc:	add	r3, r5, r7
   492d0:	blt	49318 <GetDataSlab+0x151bc>
   492d4:	ldr	r1, [sp, #88]	; 0x58
   492d8:	ldr	r5, [fp, #20]
   492dc:	mov	r6, r4
   492e0:	mov	r2, #0
   492e4:	mov	r7, r9
   492e8:	add	r4, r1, r8, lsl #2
   492ec:	ldrh	r1, [r7], #2
   492f0:	str	r1, [r4, r2, lsl #2]
   492f4:	add	r2, r2, #1
   492f8:	ldr	r1, [r5]
   492fc:	cmp	r2, r1
   49300:	blt	492ec <GetDataSlab+0x15190>
   49304:	ldr	r2, [fp, #12]
   49308:	mov	r4, r6
   4930c:	ldr	r5, [r2]
   49310:	ldr	r2, [fp, #8]
   49314:	ldr	r2, [r2]
   49318:	str	r2, [sp, #72]	; 0x48
   4931c:	sub	r2, r2, r5
   49320:	str	r5, [sp, #80]	; 0x50
   49324:	add	sl, r9, r2, lsl #1
   49328:	add	r7, r3, r2
   4932c:	ldr	r2, [fp, #24]
   49330:	cmp	r2, #2
   49334:	blt	492a4 <GetDataSlab+0x15148>
   49338:	ldr	r9, [sp, #68]	; 0x44
   4933c:	mov	r2, #0
   49340:	b	4936c <GetDataSlab+0x15210>
   49344:	ldr	r6, [ip, r2]
   49348:	ldr	ip, [lr, r2]
   4934c:	sub	r3, r3, r5
   49350:	mla	r3, ip, r6, r3
   49354:	sub	ip, fp, #176	; 0xb0
   49358:	add	r7, r3, r7
   4935c:	add	sl, sl, r3, lsl #1
   49360:	subs	r9, r9, #1
   49364:	add	r2, r2, #4
   49368:	beq	492a4 <GetDataSlab+0x15148>
   4936c:	ldr	r3, [r0, r2]
   49370:	add	r3, r3, #1
   49374:	str	r3, [r0, r2]
   49378:	ldr	r5, [r4, r2]
   4937c:	sdiv	r6, r3, r5
   49380:	mls	r3, r6, r5, r3
   49384:	cmp	r3, #0
   49388:	bne	49294 <GetDataSlab+0x15138>
   4938c:	mov	r3, #0
   49390:	str	r3, [r0, r2]
   49394:	ldr	r3, [sp, #84]	; 0x54
   49398:	ldr	r3, [r3, r2]
   4939c:	sdiv	r5, r7, r3
   493a0:	mls	r5, r5, r3, r7
   493a4:	cmp	r5, #0
   493a8:	bne	49344 <GetDataSlab+0x151e8>
   493ac:	ldr	r3, [lr, r2]
   493b0:	cmp	r3, #0
   493b4:	beq	49360 <GetDataSlab+0x15204>
   493b8:	ldr	r6, [ip, r2]
   493bc:	mla	r7, r6, r3, r7
   493c0:	mul	r3, r6, r3
   493c4:	b	4935c <GetDataSlab+0x15200>
   493c8:	ldr	r0, [sp, #80]	; 0x50
   493cc:	cmp	r5, #1
   493d0:	add	r8, r0, r7, lsl #2
   493d4:	bne	56ad8 <GetDataSlab+0x2297c>
   493d8:	ldr	r0, [sp, #76]	; 0x4c
   493dc:	ldr	r3, [fp, #20]
   493e0:	sub	r2, fp, #176	; 0xb0
   493e4:	cmp	r0, #1
   493e8:	blt	5b69c <GetDataSlab+0x27540>
   493ec:	orr	r2, r2, #4
   493f0:	ldr	lr, [fp, #12]
   493f4:	sub	r0, fp, #136	; 0x88
   493f8:	add	r3, r3, #4
   493fc:	mov	ip, #0
   49400:	str	r2, [sp, #80]	; 0x50
   49404:	ldr	r2, [fp, #24]
   49408:	orr	r0, r0, #4
   4940c:	str	r3, [sp, #84]	; 0x54
   49410:	sub	r2, r2, #1
   49414:	str	r2, [sp, #64]	; 0x40
   49418:	sub	r2, fp, #96	; 0x60
   4941c:	orr	r2, r2, #4
   49420:	str	r2, [sp, #60]	; 0x3c
   49424:	ldr	r2, [lr], #4
   49428:	str	r2, [sp, #68]	; 0x44
   4942c:	b	49454 <GetDataSlab+0x152f8>
   49430:	ldr	r3, [sp, #60]	; 0x3c
   49434:	ldr	r2, [r3, r2]
   49438:	add	r8, r8, r2, lsl #2
   4943c:	add	r7, r2, r7
   49440:	ldr	r3, [sp, #76]	; 0x4c
   49444:	add	ip, r1, ip
   49448:	mov	r2, #0
   4944c:	cmp	ip, r3
   49450:	bge	5b6a0 <GetDataSlab+0x27544>
   49454:	ldr	r4, [sp, #68]	; 0x44
   49458:	ldr	r5, [fp, #20]
   4945c:	ldr	r2, [sp, #72]	; 0x48
   49460:	cmp	r1, #1
   49464:	add	r3, r4, r7
   49468:	add	r7, r8, r4, lsl #2
   4946c:	blt	494a4 <GetDataSlab+0x15348>
   49470:	ldr	r1, [sp, #88]	; 0x58
   49474:	mov	r2, #0
   49478:	add	r4, r1, ip, lsl #2
   4947c:	ldr	r1, [r7, r2, lsl #2]
   49480:	str	r1, [r4, r2, lsl #2]
   49484:	add	r2, r2, #1
   49488:	ldr	r1, [r5]
   4948c:	cmp	r2, r1
   49490:	blt	4947c <GetDataSlab+0x15320>
   49494:	ldr	r2, [fp, #12]
   49498:	ldr	r4, [r2]
   4949c:	ldr	r2, [fp, #8]
   494a0:	ldr	r2, [r2]
   494a4:	str	r2, [sp, #72]	; 0x48
   494a8:	sub	r2, r2, r4
   494ac:	str	r4, [sp, #68]	; 0x44
   494b0:	add	r8, r7, r2, lsl #2
   494b4:	add	r7, r3, r2
   494b8:	ldr	r2, [fp, #24]
   494bc:	cmp	r2, #2
   494c0:	blt	49440 <GetDataSlab+0x152e4>
   494c4:	ldr	r9, [sp, #64]	; 0x40
   494c8:	mov	r2, #0
   494cc:	b	494f8 <GetDataSlab+0x1539c>
   494d0:	sub	r4, fp, #176	; 0xb0
   494d4:	ldr	sl, [lr, r2]
   494d8:	sub	r3, r3, r5
   494dc:	ldr	r6, [r4, r2]
   494e0:	mla	r3, sl, r6, r3
   494e4:	add	r7, r3, r7
   494e8:	add	r8, r8, r3, lsl #2
   494ec:	subs	r9, r9, #1
   494f0:	add	r2, r2, #4
   494f4:	beq	49440 <GetDataSlab+0x152e4>
   494f8:	ldr	r3, [r0, r2]
   494fc:	ldr	r4, [sp, #84]	; 0x54
   49500:	add	r3, r3, #1
   49504:	str	r3, [r0, r2]
   49508:	ldr	r5, [r4, r2]
   4950c:	sdiv	r6, r3, r5
   49510:	mls	r3, r6, r5, r3
   49514:	cmp	r3, #0
   49518:	bne	49430 <GetDataSlab+0x152d4>
   4951c:	mov	r3, #0
   49520:	str	r3, [r0, r2]
   49524:	ldr	r3, [sp, #80]	; 0x50
   49528:	ldr	r3, [r3, r2]
   4952c:	sdiv	r5, r7, r3
   49530:	mls	r5, r5, r3, r7
   49534:	cmp	r5, #0
   49538:	bne	494d0 <GetDataSlab+0x15374>
   4953c:	ldr	r3, [lr, r2]
   49540:	cmp	r3, #0
   49544:	beq	494ec <GetDataSlab+0x15390>
   49548:	sub	r4, fp, #176	; 0xb0
   4954c:	ldr	r5, [r4, r2]
   49550:	mla	r7, r5, r3, r7
   49554:	mul	r3, r5, r3
   49558:	b	494e8 <GetDataSlab+0x1538c>
   4955c:	ldr	r0, [sp, #80]	; 0x50
   49560:	cmp	r5, #1
   49564:	add	r8, r0, r7, lsl #2
   49568:	bne	56c84 <GetDataSlab+0x22b28>
   4956c:	ldr	r0, [sp, #76]	; 0x4c
   49570:	ldr	r3, [fp, #20]
   49574:	sub	r2, fp, #176	; 0xb0
   49578:	cmp	r0, #1
   4957c:	blt	5b69c <GetDataSlab+0x27540>
   49580:	orr	r2, r2, #4
   49584:	ldr	lr, [fp, #12]
   49588:	sub	r0, fp, #136	; 0x88
   4958c:	add	r3, r3, #4
   49590:	mov	ip, #0
   49594:	str	r2, [sp, #80]	; 0x50
   49598:	ldr	r2, [fp, #24]
   4959c:	orr	r0, r0, #4
   495a0:	str	r3, [sp, #84]	; 0x54
   495a4:	sub	r2, r2, #1
   495a8:	str	r2, [sp, #64]	; 0x40
   495ac:	sub	r2, fp, #96	; 0x60
   495b0:	orr	r2, r2, #4
   495b4:	str	r2, [sp, #60]	; 0x3c
   495b8:	ldr	r2, [lr], #4
   495bc:	str	r2, [sp, #68]	; 0x44
   495c0:	b	495e8 <GetDataSlab+0x1548c>
   495c4:	ldr	r3, [sp, #60]	; 0x3c
   495c8:	ldr	r2, [r3, r2]
   495cc:	add	r8, r8, r2, lsl #2
   495d0:	add	r7, r2, r7
   495d4:	ldr	r3, [sp, #76]	; 0x4c
   495d8:	add	ip, r1, ip
   495dc:	mov	r2, #0
   495e0:	cmp	ip, r3
   495e4:	bge	5b6a0 <GetDataSlab+0x27544>
   495e8:	ldr	r4, [sp, #68]	; 0x44
   495ec:	ldr	r5, [fp, #20]
   495f0:	ldr	r2, [sp, #72]	; 0x48
   495f4:	cmp	r1, #1
   495f8:	add	r3, r4, r7
   495fc:	add	r7, r8, r4, lsl #2
   49600:	blt	49638 <GetDataSlab+0x154dc>
   49604:	ldr	r1, [sp, #88]	; 0x58
   49608:	mov	r2, #0
   4960c:	add	r4, r1, ip, lsl #2
   49610:	ldr	r1, [r7, r2, lsl #2]
   49614:	str	r1, [r4, r2, lsl #2]
   49618:	add	r2, r2, #1
   4961c:	ldr	r1, [r5]
   49620:	cmp	r2, r1
   49624:	blt	49610 <GetDataSlab+0x154b4>
   49628:	ldr	r2, [fp, #12]
   4962c:	ldr	r4, [r2]
   49630:	ldr	r2, [fp, #8]
   49634:	ldr	r2, [r2]
   49638:	str	r2, [sp, #72]	; 0x48
   4963c:	sub	r2, r2, r4
   49640:	str	r4, [sp, #68]	; 0x44
   49644:	add	r8, r7, r2, lsl #2
   49648:	add	r7, r3, r2
   4964c:	ldr	r2, [fp, #24]
   49650:	cmp	r2, #2
   49654:	blt	495d4 <GetDataSlab+0x15478>
   49658:	ldr	r9, [sp, #64]	; 0x40
   4965c:	mov	r2, #0
   49660:	b	4968c <GetDataSlab+0x15530>
   49664:	sub	r4, fp, #176	; 0xb0
   49668:	ldr	sl, [lr, r2]
   4966c:	sub	r3, r3, r5
   49670:	ldr	r6, [r4, r2]
   49674:	mla	r3, sl, r6, r3
   49678:	add	r7, r3, r7
   4967c:	add	r8, r8, r3, lsl #2
   49680:	subs	r9, r9, #1
   49684:	add	r2, r2, #4
   49688:	beq	495d4 <GetDataSlab+0x15478>
   4968c:	ldr	r3, [r0, r2]
   49690:	ldr	r4, [sp, #84]	; 0x54
   49694:	add	r3, r3, #1
   49698:	str	r3, [r0, r2]
   4969c:	ldr	r5, [r4, r2]
   496a0:	sdiv	r6, r3, r5
   496a4:	mls	r3, r6, r5, r3
   496a8:	cmp	r3, #0
   496ac:	bne	495c4 <GetDataSlab+0x15468>
   496b0:	mov	r3, #0
   496b4:	str	r3, [r0, r2]
   496b8:	ldr	r3, [sp, #80]	; 0x50
   496bc:	ldr	r3, [r3, r2]
   496c0:	sdiv	r5, r7, r3
   496c4:	mls	r5, r5, r3, r7
   496c8:	cmp	r5, #0
   496cc:	bne	49664 <GetDataSlab+0x15508>
   496d0:	ldr	r3, [lr, r2]
   496d4:	cmp	r3, #0
   496d8:	beq	49680 <GetDataSlab+0x15524>
   496dc:	sub	r4, fp, #176	; 0xb0
   496e0:	ldr	r5, [r4, r2]
   496e4:	mla	r7, r5, r3, r7
   496e8:	mul	r3, r5, r3
   496ec:	b	4967c <GetDataSlab+0x15520>
   496f0:	ldr	r0, [sp, #80]	; 0x50
   496f4:	cmp	r5, #1
   496f8:	add	sl, r0, r7, lsl #2
   496fc:	bne	56e30 <GetDataSlab+0x22cd4>
   49700:	ldr	r0, [sp, #76]	; 0x4c
   49704:	ldr	r3, [fp, #20]
   49708:	sub	r2, fp, #176	; 0xb0
   4970c:	cmp	r0, #1
   49710:	blt	5b69c <GetDataSlab+0x27540>
   49714:	orr	r2, r2, #4
   49718:	ldr	lr, [fp, #12]
   4971c:	sub	r0, fp, #136	; 0x88
   49720:	add	r4, r3, #4
   49724:	str	r2, [sp, #84]	; 0x54
   49728:	ldr	r2, [fp, #24]
   4972c:	orr	r0, r0, #4
   49730:	sub	r2, r2, #1
   49734:	str	r2, [sp, #68]	; 0x44
   49738:	orr	r2, r8, #4
   4973c:	mov	r8, #0
   49740:	str	r2, [sp, #64]	; 0x40
   49744:	ldr	r2, [lr], #4
   49748:	str	r2, [sp, #80]	; 0x50
   4974c:	b	49774 <GetDataSlab+0x15618>
   49750:	ldr	r3, [sp, #64]	; 0x40
   49754:	ldr	r2, [r3, r2]
   49758:	add	sl, sl, r2, lsl #2
   4975c:	add	r7, r2, r7
   49760:	ldr	r3, [sp, #76]	; 0x4c
   49764:	add	r8, r1, r8
   49768:	mov	r2, #0
   4976c:	cmp	r8, r3
   49770:	bge	5b6a0 <GetDataSlab+0x27544>
   49774:	ldr	r5, [sp, #80]	; 0x50
   49778:	ldr	r2, [sp, #72]	; 0x48
   4977c:	cmp	r1, #1
   49780:	sub	ip, fp, #176	; 0xb0
   49784:	add	r9, sl, r5, lsl #2
   49788:	add	r3, r5, r7
   4978c:	blt	497e0 <GetDataSlab+0x15684>
   49790:	ldr	r1, [sp, #88]	; 0x58
   49794:	ldr	r5, [fp, #20]
   49798:	mov	r6, r4
   4979c:	mov	r2, #0
   497a0:	mov	r7, r9
   497a4:	add	r4, r1, r8, lsl #2
   497a8:	vldr	s0, [r7]
   497ac:	add	r7, r7, #4
   497b0:	vcvt.u32.f32	s0, s0
   497b4:	vmov	r1, s0
   497b8:	str	r1, [r4, r2, lsl #2]
   497bc:	add	r2, r2, #1
   497c0:	ldr	r1, [r5]
   497c4:	cmp	r2, r1
   497c8:	blt	497a8 <GetDataSlab+0x1564c>
   497cc:	ldr	r2, [fp, #12]
   497d0:	mov	r4, r6
   497d4:	ldr	r5, [r2]
   497d8:	ldr	r2, [fp, #8]
   497dc:	ldr	r2, [r2]
   497e0:	str	r2, [sp, #72]	; 0x48
   497e4:	sub	r2, r2, r5
   497e8:	str	r5, [sp, #80]	; 0x50
   497ec:	add	sl, r9, r2, lsl #2
   497f0:	add	r7, r3, r2
   497f4:	ldr	r2, [fp, #24]
   497f8:	cmp	r2, #2
   497fc:	blt	49760 <GetDataSlab+0x15604>
   49800:	ldr	r9, [sp, #68]	; 0x44
   49804:	mov	r2, #0
   49808:	b	49834 <GetDataSlab+0x156d8>
   4980c:	ldr	r6, [ip, r2]
   49810:	ldr	ip, [lr, r2]
   49814:	sub	r3, r3, r5
   49818:	mla	r3, ip, r6, r3
   4981c:	sub	ip, fp, #176	; 0xb0
   49820:	add	r7, r3, r7
   49824:	add	sl, sl, r3, lsl #2
   49828:	subs	r9, r9, #1
   4982c:	add	r2, r2, #4
   49830:	beq	49760 <GetDataSlab+0x15604>
   49834:	ldr	r3, [r0, r2]
   49838:	add	r3, r3, #1
   4983c:	str	r3, [r0, r2]
   49840:	ldr	r5, [r4, r2]
   49844:	sdiv	r6, r3, r5
   49848:	mls	r3, r6, r5, r3
   4984c:	cmp	r3, #0
   49850:	bne	49750 <GetDataSlab+0x155f4>
   49854:	mov	r3, #0
   49858:	str	r3, [r0, r2]
   4985c:	ldr	r3, [sp, #84]	; 0x54
   49860:	ldr	r3, [r3, r2]
   49864:	sdiv	r5, r7, r3
   49868:	mls	r5, r5, r3, r7
   4986c:	cmp	r5, #0
   49870:	bne	4980c <GetDataSlab+0x156b0>
   49874:	ldr	r3, [lr, r2]
   49878:	cmp	r3, #0
   4987c:	beq	49828 <GetDataSlab+0x156cc>
   49880:	ldr	r6, [ip, r2]
   49884:	mla	r7, r6, r3, r7
   49888:	mul	r3, r6, r3
   4988c:	b	49824 <GetDataSlab+0x156c8>
   49890:	ldr	r0, [sp, #80]	; 0x50
   49894:	cmp	r5, #1
   49898:	add	sl, r0, r7, lsl #3
   4989c:	bne	56fe4 <GetDataSlab+0x22e88>
   498a0:	ldr	r0, [sp, #76]	; 0x4c
   498a4:	ldr	r3, [fp, #20]
   498a8:	sub	r2, fp, #176	; 0xb0
   498ac:	cmp	r0, #1
   498b0:	blt	5b69c <GetDataSlab+0x27540>
   498b4:	orr	r2, r2, #4
   498b8:	ldr	lr, [fp, #12]
   498bc:	sub	r0, fp, #136	; 0x88
   498c0:	add	r4, r3, #4
   498c4:	str	r2, [sp, #84]	; 0x54
   498c8:	ldr	r2, [fp, #24]
   498cc:	orr	r0, r0, #4
   498d0:	sub	r2, r2, #1
   498d4:	str	r2, [sp, #68]	; 0x44
   498d8:	orr	r2, r8, #4
   498dc:	mov	r8, #0
   498e0:	str	r2, [sp, #64]	; 0x40
   498e4:	ldr	r2, [lr], #4
   498e8:	str	r2, [sp, #80]	; 0x50
   498ec:	b	49914 <GetDataSlab+0x157b8>
   498f0:	ldr	r3, [sp, #64]	; 0x40
   498f4:	ldr	r2, [r3, r2]
   498f8:	add	sl, sl, r2, lsl #3
   498fc:	add	r7, r2, r7
   49900:	ldr	r3, [sp, #76]	; 0x4c
   49904:	add	r8, r1, r8
   49908:	mov	r2, #0
   4990c:	cmp	r8, r3
   49910:	bge	5b6a0 <GetDataSlab+0x27544>
   49914:	ldr	r5, [sp, #80]	; 0x50
   49918:	ldr	r2, [sp, #72]	; 0x48
   4991c:	cmp	r1, #1
   49920:	sub	ip, fp, #176	; 0xb0
   49924:	add	r9, sl, r5, lsl #3
   49928:	add	r3, r5, r7
   4992c:	blt	49980 <GetDataSlab+0x15824>
   49930:	ldr	r1, [sp, #88]	; 0x58
   49934:	ldr	r5, [fp, #20]
   49938:	mov	r6, r4
   4993c:	mov	r2, #0
   49940:	mov	r7, r9
   49944:	add	r4, r1, r8, lsl #2
   49948:	vldr	d16, [r7]
   4994c:	add	r7, r7, #8
   49950:	vcvt.u32.f64	s0, d16
   49954:	vmov	r1, s0
   49958:	str	r1, [r4, r2, lsl #2]
   4995c:	add	r2, r2, #1
   49960:	ldr	r1, [r5]
   49964:	cmp	r2, r1
   49968:	blt	49948 <GetDataSlab+0x157ec>
   4996c:	ldr	r2, [fp, #12]
   49970:	mov	r4, r6
   49974:	ldr	r5, [r2]
   49978:	ldr	r2, [fp, #8]
   4997c:	ldr	r2, [r2]
   49980:	str	r2, [sp, #72]	; 0x48
   49984:	sub	r2, r2, r5
   49988:	str	r5, [sp, #80]	; 0x50
   4998c:	add	sl, r9, r2, lsl #3
   49990:	add	r7, r3, r2
   49994:	ldr	r2, [fp, #24]
   49998:	cmp	r2, #2
   4999c:	blt	49900 <GetDataSlab+0x157a4>
   499a0:	ldr	r9, [sp, #68]	; 0x44
   499a4:	mov	r2, #0
   499a8:	b	499d4 <GetDataSlab+0x15878>
   499ac:	ldr	r6, [ip, r2]
   499b0:	ldr	ip, [lr, r2]
   499b4:	sub	r3, r3, r5
   499b8:	mla	r3, ip, r6, r3
   499bc:	sub	ip, fp, #176	; 0xb0
   499c0:	add	r7, r3, r7
   499c4:	add	sl, sl, r3, lsl #3
   499c8:	subs	r9, r9, #1
   499cc:	add	r2, r2, #4
   499d0:	beq	49900 <GetDataSlab+0x157a4>
   499d4:	ldr	r3, [r0, r2]
   499d8:	add	r3, r3, #1
   499dc:	str	r3, [r0, r2]
   499e0:	ldr	r5, [r4, r2]
   499e4:	sdiv	r6, r3, r5
   499e8:	mls	r3, r6, r5, r3
   499ec:	cmp	r3, #0
   499f0:	bne	498f0 <GetDataSlab+0x15794>
   499f4:	mov	r3, #0
   499f8:	str	r3, [r0, r2]
   499fc:	ldr	r3, [sp, #84]	; 0x54
   49a00:	ldr	r3, [r3, r2]
   49a04:	sdiv	r5, r7, r3
   49a08:	mls	r5, r5, r3, r7
   49a0c:	cmp	r5, #0
   49a10:	bne	499ac <GetDataSlab+0x15850>
   49a14:	ldr	r3, [lr, r2]
   49a18:	cmp	r3, #0
   49a1c:	beq	499c8 <GetDataSlab+0x1586c>
   49a20:	ldr	r6, [ip, r2]
   49a24:	mla	r7, r6, r3, r7
   49a28:	mul	r3, r6, r3
   49a2c:	b	499c4 <GetDataSlab+0x15868>
   49a30:	ldr	r0, [sp, #80]	; 0x50
   49a34:	cmp	r7, #1
   49a38:	add	r9, r0, r3, lsl #3
   49a3c:	bne	57198 <GetDataSlab+0x2303c>
   49a40:	ldr	r0, [sp, #68]	; 0x44
   49a44:	sub	ip, fp, #176	; 0xb0
   49a48:	cmp	r0, #1
   49a4c:	blt	57338 <GetDataSlab+0x231dc>
   49a50:	ldr	r2, [fp, #20]
   49a54:	ldr	sl, [fp, #12]
   49a58:	sub	r0, fp, #136	; 0x88
   49a5c:	mov	lr, #0
   49a60:	orr	r0, r0, #4
   49a64:	add	r5, r2, #4
   49a68:	orr	r2, ip, #4
   49a6c:	ldr	r7, [sl], #4
   49a70:	str	r2, [sp, #76]	; 0x4c
   49a74:	ldr	r2, [fp, #24]
   49a78:	sub	r2, r2, #1
   49a7c:	str	r2, [sp, #60]	; 0x3c
   49a80:	orr	r2, r8, #4
   49a84:	str	r2, [sp, #56]	; 0x38
   49a88:	b	49ab0 <GetDataSlab+0x15954>
   49a8c:	ldr	r2, [sp, #56]	; 0x38
   49a90:	ldr	r2, [r2, r7]
   49a94:	add	r9, r9, r2, lsl #3
   49a98:	add	r3, r2, r3
   49a9c:	ldr	r2, [sp, #68]	; 0x44
   49aa0:	ldr	r7, [sp, #72]	; 0x48
   49aa4:	add	lr, r1, lr
   49aa8:	cmp	lr, r2
   49aac:	bge	57338 <GetDataSlab+0x231dc>
   49ab0:	ldr	r2, [sp, #64]	; 0x40
   49ab4:	add	r4, r9, r7, lsl #3
   49ab8:	add	r8, r7, r3
   49abc:	cmp	r1, #1
   49ac0:	blt	49b08 <GetDataSlab+0x159ac>
   49ac4:	ldr	r1, [sp, #88]	; 0x58
   49ac8:	ldr	r2, [fp, #20]
   49acc:	mov	r6, r5
   49ad0:	mov	r3, #0
   49ad4:	mov	r5, r4
   49ad8:	add	r7, r1, lr, lsl #2
   49adc:	ldr	r1, [r5], #8
   49ae0:	str	r1, [r7, r3, lsl #2]
   49ae4:	add	r3, r3, #1
   49ae8:	ldr	r1, [r2]
   49aec:	cmp	r3, r1
   49af0:	blt	49adc <GetDataSlab+0x15980>
   49af4:	ldr	r2, [fp, #12]
   49af8:	mov	r5, r6
   49afc:	ldr	r7, [r2]
   49b00:	ldr	r2, [fp, #8]
   49b04:	ldr	r2, [r2]
   49b08:	str	r2, [sp, #64]	; 0x40
   49b0c:	sub	r2, r2, r7
   49b10:	str	r7, [sp, #72]	; 0x48
   49b14:	add	r9, r4, r2, lsl #3
   49b18:	add	r3, r8, r2
   49b1c:	ldr	r2, [fp, #24]
   49b20:	cmp	r2, #2
   49b24:	blt	49a9c <GetDataSlab+0x15940>
   49b28:	ldr	r8, [sp, #60]	; 0x3c
   49b2c:	mov	r7, #0
   49b30:	b	49b5c <GetDataSlab+0x15a00>
   49b34:	ldr	r4, [ip, r7]
   49b38:	ldr	ip, [sl, r7]
   49b3c:	sub	r2, r2, r6
   49b40:	mla	r2, ip, r4, r2
   49b44:	sub	ip, fp, #176	; 0xb0
   49b48:	add	r3, r2, r3
   49b4c:	add	r9, r9, r2, lsl #3
   49b50:	subs	r8, r8, #1
   49b54:	add	r7, r7, #4
   49b58:	beq	49a9c <GetDataSlab+0x15940>
   49b5c:	ldr	r2, [r0, r7]
   49b60:	add	r2, r2, #1
   49b64:	str	r2, [r0, r7]
   49b68:	ldr	r6, [r5, r7]
   49b6c:	sdiv	r4, r2, r6
   49b70:	mls	r2, r4, r6, r2
   49b74:	cmp	r2, #0
   49b78:	bne	49a8c <GetDataSlab+0x15930>
   49b7c:	mov	r2, #0
   49b80:	str	r2, [r0, r7]
   49b84:	ldr	r2, [sp, #76]	; 0x4c
   49b88:	ldr	r2, [r2, r7]
   49b8c:	sdiv	r4, r3, r2
   49b90:	mls	r6, r4, r2, r3
   49b94:	cmp	r6, #0
   49b98:	bne	49b34 <GetDataSlab+0x159d8>
   49b9c:	ldr	r2, [sl, r7]
   49ba0:	cmp	r2, #0
   49ba4:	beq	49b50 <GetDataSlab+0x159f4>
   49ba8:	ldr	r6, [ip, r7]
   49bac:	mla	r3, r6, r2, r3
   49bb0:	mul	r2, r6, r2
   49bb4:	b	49b4c <GetDataSlab+0x159f0>
   49bb8:	ldr	r0, [sp, #80]	; 0x50
   49bbc:	cmp	lr, #1
   49bc0:	add	r9, r0, r7
   49bc4:	bne	57694 <GetDataSlab+0x23538>
   49bc8:	ldr	r0, [sp, #72]	; 0x48
   49bcc:	ldr	r8, [sp, #88]	; 0x58
   49bd0:	sub	r2, fp, #176	; 0xb0
   49bd4:	cmp	r0, #1
   49bd8:	blt	5b69c <GetDataSlab+0x27540>
   49bdc:	ldr	r3, [sp, #68]	; 0x44
   49be0:	mov	r1, #1
   49be4:	ldr	lr, [sp, #40]	; 0x28
   49be8:	mov	sl, #0
   49bec:	sub	r0, r3, #2
   49bf0:	add	r1, r1, r0, lsr #1
   49bf4:	lsr	r0, r0, #1
   49bf8:	str	r0, [sp, #20]
   49bfc:	mov	r0, #0
   49c00:	and	r6, r1, #1
   49c04:	str	r0, [sp, #60]	; 0x3c
   49c08:	mov	r0, #0
   49c0c:	sub	r1, r1, r6
   49c10:	str	r6, [sp, #28]
   49c14:	str	r0, [sp, #64]	; 0x40
   49c18:	str	r1, [sp, #16]
   49c1c:	sub	r1, fp, #136	; 0x88
   49c20:	orr	r4, r1, #4
   49c24:	ldr	r1, [fp, #20]
   49c28:	add	r1, r1, #4
   49c2c:	str	r1, [sp, #84]	; 0x54
   49c30:	orr	r1, r2, #4
   49c34:	lsl	r2, r3, #3
   49c38:	str	r1, [sp, #80]	; 0x50
   49c3c:	ldr	r1, [fp, #12]
   49c40:	str	r2, [sp, #56]	; 0x38
   49c44:	and	r2, r3, #1
   49c48:	str	r2, [sp, #48]	; 0x30
   49c4c:	bic	r2, r3, #1
   49c50:	str	r2, [sp, #24]
   49c54:	add	r1, r1, #4
   49c58:	str	r1, [sp, #76]	; 0x4c
   49c5c:	ldr	r1, [fp, #24]
   49c60:	sub	r1, r1, #1
   49c64:	str	r1, [sp, #44]	; 0x2c
   49c68:	sub	r1, fp, #96	; 0x60
   49c6c:	orr	r1, r1, #4
   49c70:	str	r1, [sp, #32]
   49c74:	mov	r1, r3
   49c78:	cmp	r1, #1
   49c7c:	sub	ip, fp, #176	; 0xb0
   49c80:	bge	49cd8 <GetDataSlab+0x15b7c>
   49c84:	b	49e84 <GetDataSlab+0x15d28>
   49c88:	ldr	r0, [sp, #32]
   49c8c:	ldr	r0, [r0, r2]
   49c90:	add	r9, r9, r0
   49c94:	add	r7, r0, r7
   49c98:	ldr	r0, [sp, #56]	; 0x38
   49c9c:	ldr	r1, [sp, #68]	; 0x44
   49ca0:	ldr	r3, [sp, #64]	; 0x40
   49ca4:	mov	r2, #0
   49ca8:	add	r8, r8, r0
   49cac:	ldr	r0, [sp, #60]	; 0x3c
   49cb0:	add	r3, r3, r1
   49cb4:	str	r3, [sp, #64]	; 0x40
   49cb8:	add	r0, r0, #1
   49cbc:	str	r0, [sp, #60]	; 0x3c
   49cc0:	ldr	r0, [sp, #72]	; 0x48
   49cc4:	cmp	r3, r0
   49cc8:	bge	5b6a0 <GetDataSlab+0x27544>
   49ccc:	cmp	r1, #1
   49cd0:	sub	ip, fp, #176	; 0xb0
   49cd4:	blt	49e84 <GetDataSlab+0x15d28>
   49cd8:	ldr	r0, [fp, #12]
   49cdc:	ldr	r1, [sp, #64]	; 0x40
   49ce0:	mov	r2, #0
   49ce4:	ldr	r6, [r0]
   49ce8:	ldr	r0, [sp, #88]	; 0x58
   49cec:	add	r1, r0, r1, lsl #3
   49cf0:	add	r3, r9, r6
   49cf4:	str	r1, [sp, #52]	; 0x34
   49cf8:	beq	49e0c <GetDataSlab+0x15cb0>
   49cfc:	ldr	r1, [sp, #56]	; 0x38
   49d00:	ldr	r5, [sp, #60]	; 0x3c
   49d04:	mla	r0, r1, r5, r0
   49d08:	ldr	r1, [sp, #68]	; 0x44
   49d0c:	add	r1, r9, r1
   49d10:	add	r1, r1, r6
   49d14:	cmp	r0, r1
   49d18:	bcs	49d38 <GetDataSlab+0x15bdc>
   49d1c:	ldr	r0, [sp, #56]	; 0x38
   49d20:	ldr	r1, [sp, #60]	; 0x3c
   49d24:	mla	r0, r0, r1, r0
   49d28:	ldr	r1, [sp, #88]	; 0x58
   49d2c:	add	r0, r1, r0
   49d30:	cmp	r3, r0
   49d34:	bcc	49e0c <GetDataSlab+0x15cb0>
   49d38:	ldr	r0, [sp, #20]
   49d3c:	mov	r2, #0
   49d40:	str	r6, [sp, #36]	; 0x24
   49d44:	cmp	r0, #0
   49d48:	beq	49db4 <GetDataSlab+0x15c58>
   49d4c:	ldr	ip, [sp, #16]
   49d50:	mov	lr, r8
   49d54:	add	r5, sp, #528	; 0x210
   49d58:	mov	r0, r3
   49d5c:	mov	r6, #32
   49d60:	subs	ip, ip, #2
   49d64:	ldrh	r1, [r0, r2]!
   49d68:	add	r2, r2, #4
   49d6c:	strh	r1, [r5, #152]	; 0x98
   49d70:	sub	r1, fp, #376	; 0x178
   49d74:	vld1.16	{d16[0]}, [r1 :16]
   49d78:	add	r1, lr, #16
   49d7c:	vmovl.u8	q8, d16
   49d80:	vmovl.u16	q8, d16
   49d84:	vmovl.u32	q8, d16
   49d88:	vst1.64	{d16-d17}, [lr], r6
   49d8c:	ldrh	r0, [r0, #2]
   49d90:	strh	r0, [r5, #156]	; 0x9c
   49d94:	sub	r0, fp, #372	; 0x174
   49d98:	vld1.16	{d16[0]}, [r0 :16]
   49d9c:	vmovl.u8	q8, d16
   49da0:	vmovl.u16	q8, d16
   49da4:	vmovl.u32	q8, d16
   49da8:	vst1.64	{d16-d17}, [r1]
   49dac:	bne	49d58 <GetDataSlab+0x15bfc>
   49db0:	b	49db8 <GetDataSlab+0x15c5c>
   49db4:	add	r5, sp, #528	; 0x210
   49db8:	ldr	r0, [sp, #28]
   49dbc:	ldr	lr, [sp, #40]	; 0x28
   49dc0:	ldr	r6, [sp, #36]	; 0x24
   49dc4:	sub	ip, fp, #176	; 0xb0
   49dc8:	cmp	r0, #0
   49dcc:	beq	49dfc <GetDataSlab+0x15ca0>
   49dd0:	add	r0, r3, r2
   49dd4:	ldrh	r0, [r0]
   49dd8:	strh	r0, [r5, #148]	; 0x94
   49ddc:	sub	r0, fp, #380	; 0x17c
   49de0:	vld1.16	{d16[0]}, [r0 :16]
   49de4:	ldr	r0, [sp, #52]	; 0x34
   49de8:	add	r0, r0, r2, lsl #3
   49dec:	vmovl.u8	q8, d16
   49df0:	vmovl.u16	q8, d16
   49df4:	vmovl.u32	q8, d16
   49df8:	vst1.64	{d16-d17}, [r0]
   49dfc:	ldr	r0, [sp, #68]	; 0x44
   49e00:	ldr	r2, [sp, #24]
   49e04:	cmp	r0, r2
   49e08:	beq	49e84 <GetDataSlab+0x15d28>
   49e0c:	ldr	r0, [sp, #48]	; 0x30
   49e10:	cmp	r0, #0
   49e14:	mov	r0, r2
   49e18:	beq	49e30 <GetDataSlab+0x15cd4>
   49e1c:	ldrb	r0, [r3, r2]
   49e20:	ldr	r1, [sp, #52]	; 0x34
   49e24:	str	r0, [r1, r2, lsl #3]!
   49e28:	orr	r0, r2, #1
   49e2c:	str	sl, [r1, #4]
   49e30:	orr	r1, r2, #1
   49e34:	ldr	r2, [sp, #68]	; 0x44
   49e38:	cmp	r2, r1
   49e3c:	beq	49e84 <GetDataSlab+0x15d28>
   49e40:	ldr	r1, [sp, #68]	; 0x44
   49e44:	sub	r2, r1, r0
   49e48:	add	r1, r0, r6
   49e4c:	lsl	r0, r0, #3
   49e50:	add	r1, r9, r1
   49e54:	add	r3, r1, #1
   49e58:	ldrb	r1, [r3, #-1]
   49e5c:	mov	r6, r8
   49e60:	subs	r2, r2, #2
   49e64:	str	r1, [r6, r0]!
   49e68:	add	r0, r0, #16
   49e6c:	str	sl, [r6, #4]
   49e70:	ldrb	r1, [r3]
   49e74:	add	r3, r3, #2
   49e78:	str	sl, [r6, #12]
   49e7c:	str	r1, [r6, #8]
   49e80:	bne	49e58 <GetDataSlab+0x15cfc>
   49e84:	ldr	r0, [fp, #24]
   49e88:	add	r9, r9, lr
   49e8c:	add	r7, r7, lr
   49e90:	cmp	r0, #2
   49e94:	blt	49c98 <GetDataSlab+0x15b3c>
   49e98:	ldr	r3, [sp, #44]	; 0x2c
   49e9c:	mov	r2, #0
   49ea0:	b	49ecc <GetDataSlab+0x15d70>
   49ea4:	ldr	r5, [sp, #76]	; 0x4c
   49ea8:	ldr	r6, [ip, r2]
   49eac:	sub	r0, r0, r1
   49eb0:	ldr	r5, [r5, r2]
   49eb4:	mla	r0, r5, r6, r0
   49eb8:	add	r7, r0, r7
   49ebc:	add	r9, r9, r0
   49ec0:	subs	r3, r3, #1
   49ec4:	add	r2, r2, #4
   49ec8:	beq	49c98 <GetDataSlab+0x15b3c>
   49ecc:	ldr	r0, [r4, r2]
   49ed0:	ldr	r1, [sp, #84]	; 0x54
   49ed4:	add	r0, r0, #1
   49ed8:	str	r0, [r4, r2]
   49edc:	ldr	r1, [r1, r2]
   49ee0:	sdiv	r6, r0, r1
   49ee4:	mls	r0, r6, r1, r0
   49ee8:	cmp	r0, #0
   49eec:	bne	49c88 <GetDataSlab+0x15b2c>
   49ef0:	ldr	r0, [sp, #80]	; 0x50
   49ef4:	str	sl, [r4, r2]
   49ef8:	ldr	r0, [r0, r2]
   49efc:	sdiv	r1, r7, r0
   49f00:	mls	r1, r1, r0, r7
   49f04:	cmp	r1, #0
   49f08:	bne	49ea4 <GetDataSlab+0x15d48>
   49f0c:	ldr	r0, [sp, #76]	; 0x4c
   49f10:	ldr	r0, [r0, r2]
   49f14:	cmp	r0, #0
   49f18:	beq	49ec0 <GetDataSlab+0x15d64>
   49f1c:	ldr	r1, [ip, r2]
   49f20:	mla	r7, r1, r0, r7
   49f24:	mla	r9, r1, r0, r9
   49f28:	subs	r3, r3, #1
   49f2c:	add	r2, r2, #4
   49f30:	bne	49ecc <GetDataSlab+0x15d70>
   49f34:	b	49c98 <GetDataSlab+0x15b3c>
   49f38:	ldr	r0, [sp, #80]	; 0x50
   49f3c:	ldr	r7, [sp, #68]	; 0x44
   49f40:	add	r5, r0, r1, lsl #1
   49f44:	cmp	r7, #1
   49f48:	bne	578b0 <GetDataSlab+0x23754>
   49f4c:	ldr	r0, [sp, #76]	; 0x4c
   49f50:	ldr	ip, [fp, #12]
   49f54:	ldr	r3, [fp, #20]
   49f58:	ldr	lr, [sp, #60]	; 0x3c
   49f5c:	cmp	r0, #1
   49f60:	blt	5b69c <GetDataSlab+0x27540>
   49f64:	mov	r7, ip
   49f68:	mov	ip, r3
   49f6c:	ldr	r3, [sp, #72]	; 0x48
   49f70:	mov	r2, #1
   49f74:	ldr	r8, [sp, #88]	; 0x58
   49f78:	add	r9, ip, #4
   49f7c:	mov	ip, #0
   49f80:	str	r9, [sp, #36]	; 0x24
   49f84:	sub	r0, r3, #2
   49f88:	add	r2, r2, r0, lsr #1
   49f8c:	lsr	r0, r0, #1
   49f90:	str	r0, [sp, #40]	; 0x28
   49f94:	and	r4, r2, #1
   49f98:	sub	r2, r2, r4
   49f9c:	str	r4, [sp, #48]	; 0x30
   49fa0:	str	r2, [sp, #28]
   49fa4:	sub	r2, fp, #136	; 0x88
   49fa8:	orr	r4, r2, #4
   49fac:	sub	r2, fp, #176	; 0xb0
   49fb0:	orr	r2, r2, #4
   49fb4:	str	r2, [sp, #84]	; 0x54
   49fb8:	ldr	r2, [fp, #24]
   49fbc:	sub	r2, r2, #1
   49fc0:	str	r2, [sp, #56]	; 0x38
   49fc4:	orr	r2, r6, #4
   49fc8:	str	r2, [sp, #32]
   49fcc:	lsl	r2, r3, #3
   49fd0:	str	r2, [sp, #80]	; 0x50
   49fd4:	bic	r2, r3, #1
   49fd8:	str	r2, [sp, #44]	; 0x2c
   49fdc:	ldr	r2, [r7], #4
   49fe0:	str	r7, [sp, #92]	; 0x5c
   49fe4:	str	r2, [sp, #68]	; 0x44
   49fe8:	cmp	r3, #1
   49fec:	bge	4a02c <GetDataSlab+0x15ed0>
   49ff0:	b	4a140 <GetDataSlab+0x15fe4>
   49ff4:	ldr	r0, [sp, #32]
   49ff8:	ldr	r0, [r0, r2]
   49ffc:	add	r5, r5, r0, lsl #1
   4a000:	add	r1, r0, r1
   4a004:	ldr	r0, [sp, #80]	; 0x50
   4a008:	ldr	r3, [sp, #72]	; 0x48
   4a00c:	mov	r2, #0
   4a010:	add	r8, r8, r0
   4a014:	ldr	r0, [sp, #76]	; 0x4c
   4a018:	add	ip, ip, r3
   4a01c:	cmp	ip, r0
   4a020:	bge	5b6a0 <GetDataSlab+0x27544>
   4a024:	cmp	r3, #1
   4a028:	blt	4a140 <GetDataSlab+0x15fe4>
   4a02c:	mov	r0, #0
   4a030:	beq	4a104 <GetDataSlab+0x15fa8>
   4a034:	ldr	r0, [sp, #68]	; 0x44
   4a038:	mov	r2, #0
   4a03c:	str	ip, [sp, #64]	; 0x40
   4a040:	add	sl, r5, r0, lsl #1
   4a044:	ldr	r0, [sp, #40]	; 0x28
   4a048:	str	sl, [sp, #52]	; 0x34
   4a04c:	cmp	r0, #0
   4a050:	beq	4a0ac <GetDataSlab+0x15f50>
   4a054:	ldr	lr, [sp, #28]
   4a058:	mov	r3, r8
   4a05c:	sub	r7, fp, #412	; 0x19c
   4a060:	mov	ip, #32
   4a064:	sub	r6, fp, #408	; 0x198
   4a068:	ldr	r0, [sl]
   4a06c:	subs	lr, lr, #2
   4a070:	add	r2, r2, #4
   4a074:	str	r0, [fp, #-412]	; 0xfffffe64
   4a078:	add	r0, r3, #16
   4a07c:	vld1.32	{d16[0]}, [r7 :32]
   4a080:	vmovl.s16	q8, d16
   4a084:	vmovl.s32	q8, d16
   4a088:	vst1.64	{d16-d17}, [r3], ip
   4a08c:	ldr	r9, [sl, #4]
   4a090:	add	sl, sl, #8
   4a094:	str	r9, [fp, #-408]	; 0xfffffe68
   4a098:	vld1.32	{d16[0]}, [r6 :32]
   4a09c:	vmovl.s16	q8, d16
   4a0a0:	vmovl.s32	q8, d16
   4a0a4:	vst1.64	{d16-d17}, [r0]
   4a0a8:	bne	4a068 <GetDataSlab+0x15f0c>
   4a0ac:	ldr	r0, [sp, #48]	; 0x30
   4a0b0:	ldr	ip, [sp, #64]	; 0x40
   4a0b4:	cmp	r0, #0
   4a0b8:	beq	4a0e8 <GetDataSlab+0x15f8c>
   4a0bc:	ldr	r3, [sp, #52]	; 0x34
   4a0c0:	ldr	r0, [sp, #88]	; 0x58
   4a0c4:	ldr	r3, [r3, r2, lsl #1]
   4a0c8:	add	r0, r0, ip, lsl #3
   4a0cc:	add	r0, r0, r2, lsl #3
   4a0d0:	str	r3, [fp, #-416]	; 0xfffffe60
   4a0d4:	sub	r3, fp, #416	; 0x1a0
   4a0d8:	vld1.32	{d16[0]}, [r3 :32]
   4a0dc:	vmovl.s16	q8, d16
   4a0e0:	vmovl.s32	q8, d16
   4a0e4:	vst1.64	{d16-d17}, [r0]
   4a0e8:	ldr	r0, [sp, #72]	; 0x48
   4a0ec:	ldr	r2, [sp, #44]	; 0x2c
   4a0f0:	ldr	lr, [sp, #60]	; 0x3c
   4a0f4:	ldr	r9, [sp, #36]	; 0x24
   4a0f8:	cmp	r0, r2
   4a0fc:	mov	r0, r2
   4a100:	beq	4a140 <GetDataSlab+0x15fe4>
   4a104:	ldr	r6, [sp, #68]	; 0x44
   4a108:	ldr	r3, [sp, #72]	; 0x48
   4a10c:	mov	r2, #0
   4a110:	sub	r2, r2, r0, lsl #3
   4a114:	add	r7, r5, r6, lsl #1
   4a118:	sub	r3, r3, r0
   4a11c:	add	r0, r7, r0, lsl #1
   4a120:	ldrsh	r7, [r0], #2
   4a124:	mov	r6, r8
   4a128:	subs	r3, r3, #1
   4a12c:	str	r7, [r6, -r2]!
   4a130:	asr	r7, r7, #31
   4a134:	sub	r2, r2, #8
   4a138:	str	r7, [r6, #4]
   4a13c:	bne	4a120 <GetDataSlab+0x15fc4>
   4a140:	ldr	r0, [fp, #24]
   4a144:	add	r5, r5, lr, lsl #1
   4a148:	add	r1, r1, lr
   4a14c:	cmp	r0, #2
   4a150:	blt	4a004 <GetDataSlab+0x15ea8>
   4a154:	ldr	sl, [sp, #56]	; 0x38
   4a158:	mov	r2, #0
   4a15c:	b	4a18c <GetDataSlab+0x16030>
   4a160:	ldr	r6, [sp, #92]	; 0x5c
   4a164:	sub	r7, fp, #176	; 0xb0
   4a168:	sub	r0, r0, r3
   4a16c:	ldr	r7, [r7, r2]
   4a170:	ldr	r6, [r6, r2]
   4a174:	mla	r0, r6, r7, r0
   4a178:	add	r1, r0, r1
   4a17c:	add	r5, r5, r0, lsl #1
   4a180:	subs	sl, sl, #1
   4a184:	add	r2, r2, #4
   4a188:	beq	4a004 <GetDataSlab+0x15ea8>
   4a18c:	ldr	r0, [r4, r2]
   4a190:	add	r0, r0, #1
   4a194:	str	r0, [r4, r2]
   4a198:	ldr	r3, [r9, r2]
   4a19c:	sdiv	r7, r0, r3
   4a1a0:	mls	r0, r7, r3, r0
   4a1a4:	cmp	r0, #0
   4a1a8:	bne	49ff4 <GetDataSlab+0x15e98>
   4a1ac:	mov	r0, #0
   4a1b0:	str	r0, [r4, r2]
   4a1b4:	ldr	r0, [sp, #84]	; 0x54
   4a1b8:	ldr	r0, [r0, r2]
   4a1bc:	sdiv	r3, r1, r0
   4a1c0:	mls	r3, r3, r0, r1
   4a1c4:	cmp	r3, #0
   4a1c8:	bne	4a160 <GetDataSlab+0x16004>
   4a1cc:	ldr	r0, [sp, #92]	; 0x5c
   4a1d0:	ldr	r0, [r0, r2]
   4a1d4:	cmp	r0, #0
   4a1d8:	beq	4a180 <GetDataSlab+0x16024>
   4a1dc:	sub	r3, fp, #176	; 0xb0
   4a1e0:	ldr	r3, [r3, r2]
   4a1e4:	mla	r1, r3, r0, r1
   4a1e8:	mul	r0, r3, r0
   4a1ec:	b	4a17c <GetDataSlab+0x16020>
   4a1f0:	ldr	r0, [sp, #80]	; 0x50
   4a1f4:	ldr	r6, [sp, #68]	; 0x44
   4a1f8:	add	r0, r0, r1, lsl #1
   4a1fc:	cmp	r6, #1
   4a200:	str	r0, [sp, #44]	; 0x2c
   4a204:	bne	57adc <GetDataSlab+0x23980>
   4a208:	ldr	r0, [sp, #76]	; 0x4c
   4a20c:	ldr	r3, [fp, #12]
   4a210:	ldr	r8, [sp, #56]	; 0x38
   4a214:	sub	r7, fp, #96	; 0x60
   4a218:	cmp	r0, #1
   4a21c:	blt	5b69c <GetDataSlab+0x27540>
   4a220:	mov	r6, r3
   4a224:	ldr	r3, [sp, #72]	; 0x48
   4a228:	mov	r2, #1
   4a22c:	ldr	sl, [sp, #88]	; 0x58
   4a230:	mov	r4, #0
   4a234:	sub	r0, r3, #2
   4a238:	add	r2, r2, r0, lsr #1
   4a23c:	lsr	r0, r0, #1
   4a240:	str	r0, [sp, #32]
   4a244:	mov	r0, #0
   4a248:	and	r5, r2, #1
   4a24c:	str	r0, [sp, #68]	; 0x44
   4a250:	sub	r2, r2, r5
   4a254:	str	r5, [sp, #40]	; 0x28
   4a258:	str	r2, [sp, #24]
   4a25c:	sub	r2, fp, #136	; 0x88
   4a260:	orr	r9, r2, #4
   4a264:	ldr	r2, [fp, #20]
   4a268:	add	r2, r2, #4
   4a26c:	str	r2, [sp, #84]	; 0x54
   4a270:	orr	r2, ip, #4
   4a274:	ldr	ip, [sp, #44]	; 0x2c
   4a278:	str	r2, [sp, #80]	; 0x50
   4a27c:	ldr	r2, [fp, #24]
   4a280:	sub	r2, r2, #1
   4a284:	str	r2, [sp, #52]	; 0x34
   4a288:	orr	r2, r7, #4
   4a28c:	str	r2, [sp, #28]
   4a290:	lsl	r2, r3, #3
   4a294:	str	r2, [sp, #64]	; 0x40
   4a298:	bic	r2, r3, #1
   4a29c:	str	r2, [sp, #36]	; 0x24
   4a2a0:	ldr	r2, [r6], #4
   4a2a4:	str	r6, [sp, #92]	; 0x5c
   4a2a8:	str	r2, [sp, #60]	; 0x3c
   4a2ac:	ldr	lr, [sp, #92]	; 0x5c
   4a2b0:	cmp	r3, #1
   4a2b4:	bge	4a300 <GetDataSlab+0x161a4>
   4a2b8:	b	4a414 <GetDataSlab+0x162b8>
   4a2bc:	ldr	r0, [sp, #28]
   4a2c0:	ldr	r0, [r0, r2]
   4a2c4:	add	ip, ip, r0, lsl #1
   4a2c8:	add	r1, r0, r1
   4a2cc:	ldr	r0, [sp, #64]	; 0x40
   4a2d0:	ldr	r3, [sp, #72]	; 0x48
   4a2d4:	ldr	r7, [sp, #68]	; 0x44
   4a2d8:	mov	r2, #0
   4a2dc:	add	sl, sl, r0
   4a2e0:	ldr	r0, [sp, #76]	; 0x4c
   4a2e4:	add	r7, r7, r3
   4a2e8:	str	r7, [sp, #68]	; 0x44
   4a2ec:	cmp	r7, r0
   4a2f0:	bge	5b6a0 <GetDataSlab+0x27544>
   4a2f4:	ldr	lr, [sp, #92]	; 0x5c
   4a2f8:	cmp	r3, #1
   4a2fc:	blt	4a414 <GetDataSlab+0x162b8>
   4a300:	mov	r0, #0
   4a304:	beq	4a3e0 <GetDataSlab+0x16284>
   4a308:	ldr	r0, [sp, #60]	; 0x3c
   4a30c:	mov	r3, #0
   4a310:	str	ip, [sp, #44]	; 0x2c
   4a314:	add	r2, ip, r0, lsl #1
   4a318:	ldr	r0, [sp, #32]
   4a31c:	str	r2, [sp, #48]	; 0x30
   4a320:	cmp	r0, #0
   4a324:	beq	4a380 <GetDataSlab+0x16224>
   4a328:	ldr	lr, [sp, #24]
   4a32c:	mov	r8, sl
   4a330:	sub	r5, fp, #400	; 0x190
   4a334:	mov	r6, #32
   4a338:	sub	ip, fp, #396	; 0x18c
   4a33c:	ldr	r0, [r2]
   4a340:	subs	lr, lr, #2
   4a344:	add	r3, r3, #4
   4a348:	str	r0, [fp, #-400]	; 0xfffffe70
   4a34c:	add	r0, r8, #16
   4a350:	vld1.32	{d16[0]}, [r5 :32]
   4a354:	vmovl.u16	q8, d16
   4a358:	vmovl.u32	q8, d16
   4a35c:	vst1.64	{d16-d17}, [r8], r6
   4a360:	ldr	r7, [r2, #4]
   4a364:	add	r2, r2, #8
   4a368:	str	r7, [fp, #-396]	; 0xfffffe74
   4a36c:	vld1.32	{d16[0]}, [ip :32]
   4a370:	vmovl.u16	q8, d16
   4a374:	vmovl.u32	q8, d16
   4a378:	vst1.64	{d16-d17}, [r0]
   4a37c:	bne	4a33c <GetDataSlab+0x161e0>
   4a380:	ldr	r0, [sp, #40]	; 0x28
   4a384:	ldr	lr, [sp, #92]	; 0x5c
   4a388:	ldr	r8, [sp, #56]	; 0x38
   4a38c:	mov	r4, #0
   4a390:	cmp	r0, #0
   4a394:	ldr	r0, [sp, #88]	; 0x58
   4a398:	beq	4a3c8 <GetDataSlab+0x1626c>
   4a39c:	ldr	r2, [sp, #68]	; 0x44
   4a3a0:	add	r0, r0, r2, lsl #3
   4a3a4:	ldr	r2, [sp, #48]	; 0x30
   4a3a8:	add	r0, r0, r3, lsl #3
   4a3ac:	ldr	r2, [r2, r3, lsl #1]
   4a3b0:	str	r2, [fp, #-404]	; 0xfffffe6c
   4a3b4:	sub	r2, fp, #404	; 0x194
   4a3b8:	vld1.32	{d16[0]}, [r2 :32]
   4a3bc:	vmovl.u16	q8, d16
   4a3c0:	vmovl.u32	q8, d16
   4a3c4:	vst1.64	{d16-d17}, [r0]
   4a3c8:	ldr	r0, [sp, #72]	; 0x48
   4a3cc:	ldr	r2, [sp, #36]	; 0x24
   4a3d0:	ldr	ip, [sp, #44]	; 0x2c
   4a3d4:	cmp	r0, r2
   4a3d8:	mov	r0, r2
   4a3dc:	beq	4a414 <GetDataSlab+0x162b8>
   4a3e0:	ldr	r5, [sp, #60]	; 0x3c
   4a3e4:	ldr	r3, [sp, #72]	; 0x48
   4a3e8:	sub	r2, r4, r0, lsl #3
   4a3ec:	add	r7, ip, r5, lsl #1
   4a3f0:	sub	r3, r3, r0
   4a3f4:	add	r0, r7, r0, lsl #1
   4a3f8:	ldrh	r7, [r0], #2
   4a3fc:	mov	r6, sl
   4a400:	subs	r3, r3, #1
   4a404:	str	r7, [r6, -r2]!
   4a408:	sub	r2, r2, #8
   4a40c:	str	r4, [r6, #4]
   4a410:	bne	4a3f8 <GetDataSlab+0x1629c>
   4a414:	ldr	r0, [fp, #24]
   4a418:	add	ip, ip, r8, lsl #1
   4a41c:	add	r1, r1, r8
   4a420:	cmp	r0, #2
   4a424:	blt	4a2cc <GetDataSlab+0x16170>
   4a428:	ldr	r3, [sp, #52]	; 0x34
   4a42c:	mov	r2, #0
   4a430:	b	4a45c <GetDataSlab+0x16300>
   4a434:	sub	r5, fp, #176	; 0xb0
   4a438:	sub	r0, r0, r7
   4a43c:	ldr	r6, [r5, r2]
   4a440:	ldr	r5, [lr, r2]
   4a444:	mla	r0, r5, r6, r0
   4a448:	add	r1, r0, r1
   4a44c:	add	ip, ip, r0, lsl #1
   4a450:	subs	r3, r3, #1
   4a454:	add	r2, r2, #4
   4a458:	beq	4a2cc <GetDataSlab+0x16170>
   4a45c:	ldr	r0, [r9, r2]
   4a460:	ldr	r5, [sp, #84]	; 0x54
   4a464:	add	r0, r0, #1
   4a468:	str	r0, [r9, r2]
   4a46c:	ldr	r7, [r5, r2]
   4a470:	sdiv	r6, r0, r7
   4a474:	mls	r0, r6, r7, r0
   4a478:	cmp	r0, #0
   4a47c:	bne	4a2bc <GetDataSlab+0x16160>
   4a480:	ldr	r0, [sp, #80]	; 0x50
   4a484:	str	r4, [r9, r2]
   4a488:	ldr	r0, [r0, r2]
   4a48c:	sdiv	r7, r1, r0
   4a490:	mls	r7, r7, r0, r1
   4a494:	cmp	r7, #0
   4a498:	bne	4a434 <GetDataSlab+0x162d8>
   4a49c:	ldr	r0, [lr, r2]
   4a4a0:	cmp	r0, #0
   4a4a4:	beq	4a450 <GetDataSlab+0x162f4>
   4a4a8:	sub	r5, fp, #176	; 0xb0
   4a4ac:	ldr	r7, [r5, r2]
   4a4b0:	mla	r1, r7, r0, r1
   4a4b4:	mul	r0, r7, r0
   4a4b8:	b	4a44c <GetDataSlab+0x162f0>
   4a4bc:	ldr	r0, [sp, #80]	; 0x50
   4a4c0:	ldr	r4, [sp, #56]	; 0x38
   4a4c4:	mov	r2, lr
   4a4c8:	add	r8, r0, r3, lsl #2
   4a4cc:	cmp	r4, #1
   4a4d0:	bne	57cf0 <GetDataSlab+0x23b94>
   4a4d4:	ldr	r0, [sp, #76]	; 0x4c
   4a4d8:	ldr	r7, [fp, #20]
   4a4dc:	ldr	r9, [sp, #52]	; 0x34
   4a4e0:	cmp	r0, #1
   4a4e4:	ldr	r0, [sp, #72]	; 0x48
   4a4e8:	blt	5b69c <GetDataSlab+0x27540>
   4a4ec:	sub	r0, r0, #2
   4a4f0:	mov	r1, #1
   4a4f4:	ldr	lr, [sp, #88]	; 0x58
   4a4f8:	add	sl, r7, #4
   4a4fc:	sub	r7, fp, #456	; 0x1c8
   4a500:	add	r1, r1, r0, lsr #1
   4a504:	lsr	r0, r0, #1
   4a508:	str	sl, [sp, #32]
   4a50c:	str	r0, [sp, #36]	; 0x24
   4a510:	mov	r0, #0
   4a514:	and	r6, r1, #1
   4a518:	str	r0, [sp, #68]	; 0x44
   4a51c:	sub	r1, r1, r6
   4a520:	str	r6, [sp, #44]	; 0x2c
   4a524:	str	r1, [sp, #24]
   4a528:	sub	r1, fp, #136	; 0x88
   4a52c:	orr	r4, r1, #4
   4a530:	orr	r1, r2, #4
   4a534:	str	r1, [sp, #84]	; 0x54
   4a538:	ldr	r1, [fp, #12]
   4a53c:	add	r1, r1, #4
   4a540:	str	r1, [sp, #80]	; 0x50
   4a544:	ldr	r1, [fp, #24]
   4a548:	sub	r1, r1, #1
   4a54c:	str	r1, [sp, #56]	; 0x38
   4a550:	sub	r1, fp, #96	; 0x60
   4a554:	orr	r1, r1, #4
   4a558:	str	r1, [sp, #28]
   4a55c:	ldr	r1, [sp, #72]	; 0x48
   4a560:	lsl	r2, r1, #3
   4a564:	str	r2, [sp, #64]	; 0x40
   4a568:	bic	r2, r1, #1
   4a56c:	str	r2, [sp, #40]	; 0x28
   4a570:	cmp	r1, #1
   4a574:	sub	ip, fp, #176	; 0xb0
   4a578:	bge	4a5c4 <GetDataSlab+0x16468>
   4a57c:	b	4a6e0 <GetDataSlab+0x16584>
   4a580:	ldr	r0, [sp, #28]
   4a584:	ldr	r0, [r0, r2]
   4a588:	add	r8, r8, r0, lsl #2
   4a58c:	add	r3, r0, r3
   4a590:	ldr	r0, [sp, #64]	; 0x40
   4a594:	ldr	r1, [sp, #72]	; 0x48
   4a598:	ldr	r6, [sp, #68]	; 0x44
   4a59c:	mov	r2, #0
   4a5a0:	add	lr, lr, r0
   4a5a4:	ldr	r0, [sp, #76]	; 0x4c
   4a5a8:	add	r6, r6, r1
   4a5ac:	str	r6, [sp, #68]	; 0x44
   4a5b0:	cmp	r6, r0
   4a5b4:	bge	5b6a0 <GetDataSlab+0x27544>
   4a5b8:	cmp	r1, #1
   4a5bc:	sub	ip, fp, #176	; 0xb0
   4a5c0:	blt	4a6e0 <GetDataSlab+0x16584>
   4a5c4:	ldr	r0, [fp, #12]
   4a5c8:	mov	r5, #0
   4a5cc:	ldr	r6, [r0]
   4a5d0:	beq	4a6a8 <GetDataSlab+0x1654c>
   4a5d4:	ldr	r0, [sp, #36]	; 0x24
   4a5d8:	add	ip, r8, r6, lsl #2
   4a5dc:	mov	r1, #0
   4a5e0:	str	r6, [sp, #60]	; 0x3c
   4a5e4:	str	ip, [sp, #48]	; 0x30
   4a5e8:	cmp	r0, #0
   4a5ec:	beq	4a648 <GetDataSlab+0x164ec>
   4a5f0:	ldr	r2, [sp, #24]
   4a5f4:	mov	r9, lr
   4a5f8:	sub	r6, fp, #448	; 0x1c0
   4a5fc:	ldm	ip, {r0, r5}
   4a600:	str	r5, [fp, #-452]	; 0xfffffe3c
   4a604:	mov	r5, #32
   4a608:	subs	r2, r2, #2
   4a60c:	add	r1, r1, #4
   4a610:	str	r0, [fp, #-456]	; 0xfffffe38
   4a614:	add	r0, r9, #16
   4a618:	vld1.32	{d16}, [r7 :64]
   4a61c:	vmovl.s32	q8, d16
   4a620:	vst1.64	{d16-d17}, [r9], r5
   4a624:	ldr	r5, [ip, #8]
   4a628:	ldr	sl, [ip, #12]
   4a62c:	add	ip, ip, #16
   4a630:	str	sl, [fp, #-444]	; 0xfffffe44
   4a634:	str	r5, [fp, #-448]	; 0xfffffe40
   4a638:	vld1.32	{d16}, [r6 :64]
   4a63c:	vmovl.s32	q8, d16
   4a640:	vst1.64	{d16-d17}, [r0]
   4a644:	bne	4a5fc <GetDataSlab+0x164a0>
   4a648:	ldr	r0, [sp, #44]	; 0x2c
   4a64c:	sub	ip, fp, #176	; 0xb0
   4a650:	cmp	r0, #0
   4a654:	beq	4a68c <GetDataSlab+0x16530>
   4a658:	ldr	r0, [sp, #88]	; 0x58
   4a65c:	ldr	r2, [sp, #68]	; 0x44
   4a660:	ldr	r5, [sp, #48]	; 0x30
   4a664:	add	r0, r0, r2, lsl #3
   4a668:	ldr	r2, [r5, r1, lsl #2]!
   4a66c:	add	r0, r0, r1, lsl #3
   4a670:	str	r2, [fp, #-464]	; 0xfffffe30
   4a674:	ldr	r2, [r5, #4]
   4a678:	str	r2, [fp, #-460]	; 0xfffffe34
   4a67c:	sub	r2, fp, #464	; 0x1d0
   4a680:	vld1.32	{d16}, [r2 :64]
   4a684:	vmovl.s32	q8, d16
   4a688:	vst1.64	{d16-d17}, [r0]
   4a68c:	ldr	r0, [sp, #72]	; 0x48
   4a690:	ldr	r5, [sp, #40]	; 0x28
   4a694:	ldr	r9, [sp, #52]	; 0x34
   4a698:	ldr	sl, [sp, #32]
   4a69c:	ldr	r6, [sp, #60]	; 0x3c
   4a6a0:	cmp	r0, r5
   4a6a4:	beq	4a6e0 <GetDataSlab+0x16584>
   4a6a8:	mov	r0, #0
   4a6ac:	sub	r1, r0, r5, lsl #3
   4a6b0:	ldr	r0, [sp, #72]	; 0x48
   4a6b4:	sub	r2, r0, r5
   4a6b8:	add	r0, r5, r6
   4a6bc:	add	r5, r8, r0, lsl #2
   4a6c0:	ldr	r0, [r5], #4
   4a6c4:	mov	r6, lr
   4a6c8:	subs	r2, r2, #1
   4a6cc:	str	r0, [r6, -r1]!
   4a6d0:	asr	r0, r0, #31
   4a6d4:	sub	r1, r1, #8
   4a6d8:	str	r0, [r6, #4]
   4a6dc:	bne	4a6c0 <GetDataSlab+0x16564>
   4a6e0:	ldr	r0, [fp, #24]
   4a6e4:	add	r8, r8, r9, lsl #2
   4a6e8:	add	r3, r3, r9
   4a6ec:	cmp	r0, #2
   4a6f0:	blt	4a590 <GetDataSlab+0x16434>
   4a6f4:	ldr	r1, [sp, #56]	; 0x38
   4a6f8:	mov	r2, #0
   4a6fc:	b	4a72c <GetDataSlab+0x165d0>
   4a700:	ldr	r7, [sp, #80]	; 0x50
   4a704:	ldr	r6, [ip, r2]
   4a708:	sub	r0, r5, r0
   4a70c:	ldr	r7, [r7, r2]
   4a710:	mla	r0, r7, r6, r0
   4a714:	sub	r7, fp, #456	; 0x1c8
   4a718:	add	r3, r0, r3
   4a71c:	add	r8, r8, r0, lsl #2
   4a720:	subs	r1, r1, #1
   4a724:	add	r2, r2, #4
   4a728:	beq	4a590 <GetDataSlab+0x16434>
   4a72c:	ldr	r0, [r4, r2]
   4a730:	add	r0, r0, #1
   4a734:	str	r0, [r4, r2]
   4a738:	ldr	r6, [sl, r2]
   4a73c:	sdiv	r5, r0, r6
   4a740:	mls	r0, r5, r6, r0
   4a744:	cmp	r0, #0
   4a748:	bne	4a580 <GetDataSlab+0x16424>
   4a74c:	mov	r0, #0
   4a750:	str	r0, [r4, r2]
   4a754:	ldr	r0, [sp, #84]	; 0x54
   4a758:	ldr	r5, [r0, r2]
   4a75c:	sdiv	r0, r3, r5
   4a760:	mls	r0, r0, r5, r3
   4a764:	cmp	r0, #0
   4a768:	bne	4a700 <GetDataSlab+0x165a4>
   4a76c:	ldr	r0, [sp, #80]	; 0x50
   4a770:	ldr	r0, [r0, r2]
   4a774:	cmp	r0, #0
   4a778:	beq	4a720 <GetDataSlab+0x165c4>
   4a77c:	ldr	r7, [ip, r2]
   4a780:	mla	r3, r7, r0, r3
   4a784:	mul	r0, r7, r0
   4a788:	sub	r7, fp, #456	; 0x1c8
   4a78c:	b	4a71c <GetDataSlab+0x165c0>
   4a790:	ldr	r0, [sp, #80]	; 0x50
   4a794:	mov	r7, r2
   4a798:	add	sl, r0, r3, lsl #2
   4a79c:	ldr	r0, [sp, #48]	; 0x30
   4a7a0:	cmp	r0, #1
   4a7a4:	bne	57f20 <GetDataSlab+0x23dc4>
   4a7a8:	ldr	r0, [sp, #72]	; 0x48
   4a7ac:	ldr	r2, [fp, #12]
   4a7b0:	sub	r6, fp, #96	; 0x60
   4a7b4:	cmp	r0, #1
   4a7b8:	blt	5b69c <GetDataSlab+0x27540>
   4a7bc:	ldr	r5, [sp, #68]	; 0x44
   4a7c0:	mov	r1, #1
   4a7c4:	ldr	lr, [sp, #88]	; 0x58
   4a7c8:	ldr	r8, [sp, #52]	; 0x34
   4a7cc:	sub	r0, r5, #2
   4a7d0:	add	r1, r1, r0, lsr #1
   4a7d4:	lsr	r0, r0, #1
   4a7d8:	str	r0, [sp, #36]	; 0x24
   4a7dc:	mov	r0, #0
   4a7e0:	and	r4, r1, #1
   4a7e4:	str	r0, [sp, #76]	; 0x4c
   4a7e8:	sub	r1, r1, r4
   4a7ec:	str	r4, [sp, #44]	; 0x2c
   4a7f0:	str	r1, [sp, #24]
   4a7f4:	sub	r1, fp, #136	; 0x88
   4a7f8:	orr	r4, r1, #4
   4a7fc:	ldr	r1, [fp, #20]
   4a800:	add	r9, r1, #4
   4a804:	orr	r1, r7, #4
   4a808:	mov	r7, #0
   4a80c:	str	r1, [sp, #84]	; 0x54
   4a810:	add	r1, r2, #4
   4a814:	orr	r2, r6, #4
   4a818:	str	r9, [sp, #32]
   4a81c:	str	r1, [sp, #80]	; 0x50
   4a820:	ldr	r1, [fp, #24]
   4a824:	str	r2, [sp, #28]
   4a828:	lsl	r2, r5, #3
   4a82c:	str	r2, [sp, #64]	; 0x40
   4a830:	bic	r2, r5, #1
   4a834:	str	r2, [sp, #40]	; 0x28
   4a838:	sub	r1, r1, #1
   4a83c:	str	r1, [sp, #56]	; 0x38
   4a840:	mov	r1, r5
   4a844:	ldr	r0, [fp, #12]
   4a848:	cmp	r1, #1
   4a84c:	sub	ip, fp, #176	; 0xb0
   4a850:	bge	4a8a0 <GetDataSlab+0x16744>
   4a854:	b	4a9b4 <GetDataSlab+0x16858>
   4a858:	ldr	r0, [sp, #28]
   4a85c:	ldr	r0, [r0, r2]
   4a860:	add	sl, sl, r0, lsl #2
   4a864:	add	r3, r0, r3
   4a868:	ldr	r0, [sp, #64]	; 0x40
   4a86c:	ldr	r1, [sp, #68]	; 0x44
   4a870:	ldr	r6, [sp, #76]	; 0x4c
   4a874:	mov	r2, #0
   4a878:	add	lr, lr, r0
   4a87c:	ldr	r0, [sp, #72]	; 0x48
   4a880:	add	r6, r6, r1
   4a884:	str	r6, [sp, #76]	; 0x4c
   4a888:	cmp	r6, r0
   4a88c:	bge	5b6a0 <GetDataSlab+0x27544>
   4a890:	ldr	r0, [fp, #12]
   4a894:	cmp	r1, #1
   4a898:	sub	ip, fp, #176	; 0xb0
   4a89c:	blt	4a9b4 <GetDataSlab+0x16858>
   4a8a0:	ldr	r6, [r0]
   4a8a4:	mov	r5, #0
   4a8a8:	beq	4a984 <GetDataSlab+0x16828>
   4a8ac:	ldr	r0, [sp, #36]	; 0x24
   4a8b0:	add	ip, sl, r6, lsl #2
   4a8b4:	mov	r1, #0
   4a8b8:	str	r6, [sp, #60]	; 0x3c
   4a8bc:	str	ip, [sp, #48]	; 0x30
   4a8c0:	cmp	r0, #0
   4a8c4:	beq	4a924 <GetDataSlab+0x167c8>
   4a8c8:	ldr	r2, [sp, #24]
   4a8cc:	mov	r9, lr
   4a8d0:	sub	r6, fp, #424	; 0x1a8
   4a8d4:	ldm	ip, {r0, r5}
   4a8d8:	str	r5, [fp, #-428]	; 0xfffffe54
   4a8dc:	mov	r5, #32
   4a8e0:	subs	r2, r2, #2
   4a8e4:	add	r1, r1, #4
   4a8e8:	str	r0, [fp, #-432]	; 0xfffffe50
   4a8ec:	sub	r0, fp, #432	; 0x1b0
   4a8f0:	vld1.32	{d16}, [r0 :64]
   4a8f4:	add	r0, r9, #16
   4a8f8:	vmovl.u32	q8, d16
   4a8fc:	vst1.64	{d16-d17}, [r9], r5
   4a900:	ldr	r5, [ip, #8]
   4a904:	ldr	r8, [ip, #12]
   4a908:	add	ip, ip, #16
   4a90c:	str	r8, [fp, #-420]	; 0xfffffe5c
   4a910:	str	r5, [fp, #-424]	; 0xfffffe58
   4a914:	vld1.32	{d16}, [r6 :64]
   4a918:	vmovl.u32	q8, d16
   4a91c:	vst1.64	{d16-d17}, [r0]
   4a920:	bne	4a8d4 <GetDataSlab+0x16778>
   4a924:	ldr	r0, [sp, #44]	; 0x2c
   4a928:	ldr	r8, [sp, #52]	; 0x34
   4a92c:	ldr	r9, [sp, #32]
   4a930:	sub	ip, fp, #176	; 0xb0
   4a934:	cmp	r0, #0
   4a938:	ldr	r0, [sp, #88]	; 0x58
   4a93c:	beq	4a970 <GetDataSlab+0x16814>
   4a940:	ldr	r2, [sp, #76]	; 0x4c
   4a944:	ldr	r5, [sp, #48]	; 0x30
   4a948:	add	r0, r0, r2, lsl #3
   4a94c:	ldr	r2, [r5, r1, lsl #2]!
   4a950:	add	r0, r0, r1, lsl #3
   4a954:	str	r2, [fp, #-440]	; 0xfffffe48
   4a958:	ldr	r2, [r5, #4]
   4a95c:	str	r2, [fp, #-436]	; 0xfffffe4c
   4a960:	sub	r2, fp, #440	; 0x1b8
   4a964:	vld1.32	{d16}, [r2 :64]
   4a968:	vmovl.u32	q8, d16
   4a96c:	vst1.64	{d16-d17}, [r0]
   4a970:	ldr	r0, [sp, #68]	; 0x44
   4a974:	ldr	r5, [sp, #40]	; 0x28
   4a978:	ldr	r6, [sp, #60]	; 0x3c
   4a97c:	cmp	r0, r5
   4a980:	beq	4a9b4 <GetDataSlab+0x16858>
   4a984:	ldr	r0, [sp, #68]	; 0x44
   4a988:	sub	r1, r7, r5, lsl #3
   4a98c:	sub	r2, r0, r5
   4a990:	add	r0, r5, r6
   4a994:	add	r5, sl, r0, lsl #2
   4a998:	ldr	r0, [r5], #4
   4a99c:	mov	r6, lr
   4a9a0:	subs	r2, r2, #1
   4a9a4:	str	r0, [r6, -r1]!
   4a9a8:	sub	r1, r1, #8
   4a9ac:	str	r7, [r6, #4]
   4a9b0:	bne	4a998 <GetDataSlab+0x1683c>
   4a9b4:	ldr	r0, [fp, #24]
   4a9b8:	add	sl, sl, r8, lsl #2
   4a9bc:	add	r3, r3, r8
   4a9c0:	cmp	r0, #2
   4a9c4:	blt	4a868 <GetDataSlab+0x1670c>
   4a9c8:	ldr	r1, [sp, #56]	; 0x38
   4a9cc:	mov	r2, #0
   4a9d0:	b	4aa00 <GetDataSlab+0x168a4>
   4a9d4:	ldr	r7, [sp, #80]	; 0x50
   4a9d8:	ldr	r6, [ip, r2]
   4a9dc:	sub	r0, r5, r0
   4a9e0:	ldr	r7, [r7, r2]
   4a9e4:	mla	r0, r7, r6, r0
   4a9e8:	mov	r7, #0
   4a9ec:	add	r3, r0, r3
   4a9f0:	add	sl, sl, r0, lsl #2
   4a9f4:	subs	r1, r1, #1
   4a9f8:	add	r2, r2, #4
   4a9fc:	beq	4a868 <GetDataSlab+0x1670c>
   4aa00:	ldr	r0, [r4, r2]
   4aa04:	add	r0, r0, #1
   4aa08:	str	r0, [r4, r2]
   4aa0c:	ldr	r6, [r9, r2]
   4aa10:	sdiv	r5, r0, r6
   4aa14:	mls	r0, r5, r6, r0
   4aa18:	cmp	r0, #0
   4aa1c:	bne	4a858 <GetDataSlab+0x166fc>
   4aa20:	ldr	r0, [sp, #84]	; 0x54
   4aa24:	str	r7, [r4, r2]
   4aa28:	ldr	r5, [r0, r2]
   4aa2c:	sdiv	r0, r3, r5
   4aa30:	mls	r0, r0, r5, r3
   4aa34:	cmp	r0, #0
   4aa38:	bne	4a9d4 <GetDataSlab+0x16878>
   4aa3c:	ldr	r0, [sp, #80]	; 0x50
   4aa40:	ldr	r0, [r0, r2]
   4aa44:	cmp	r0, #0
   4aa48:	beq	4a9f4 <GetDataSlab+0x16898>
   4aa4c:	ldr	r7, [ip, r2]
   4aa50:	mla	r3, r7, r0, r3
   4aa54:	mul	r0, r7, r0
   4aa58:	mov	r7, #0
   4aa5c:	b	4a9f0 <GetDataSlab+0x16894>
   4aa60:	ldr	r0, [sp, #80]	; 0x50
   4aa64:	add	r5, r0, r8, lsl #2
   4aa68:	ldr	r0, [sp, #36]	; 0x24
   4aa6c:	cmp	r0, #1
   4aa70:	bne	58144 <GetDataSlab+0x23fe8>
   4aa74:	ldr	r0, [sp, #76]	; 0x4c
   4aa78:	ldr	lr, [sp, #68]	; 0x44
   4aa7c:	sub	r3, fp, #96	; 0x60
   4aa80:	cmp	r0, #1
   4aa84:	ldr	r0, [fp, #12]
   4aa88:	blt	5b69c <GetDataSlab+0x27540>
   4aa8c:	sub	r1, fp, #136	; 0x88
   4aa90:	orr	r9, r1, #4
   4aa94:	ldr	r1, [fp, #20]
   4aa98:	add	r1, r1, #4
   4aa9c:	str	r1, [sp, #48]	; 0x30
   4aaa0:	orr	r1, r2, #4
   4aaa4:	str	r1, [sp, #52]	; 0x34
   4aaa8:	ldr	r1, [fp, #24]
   4aaac:	sub	r1, r1, #1
   4aab0:	str	r1, [sp, #44]	; 0x2c
   4aab4:	orr	r1, r3, #4
   4aab8:	str	r1, [sp, #32]
   4aabc:	and	r1, lr, #1
   4aac0:	str	r1, [sp, #56]	; 0x38
   4aac4:	sub	r1, lr, r1
   4aac8:	str	r1, [sp, #64]	; 0x40
   4aacc:	lsl	r1, lr, #3
   4aad0:	str	r1, [sp, #60]	; 0x3c
   4aad4:	ldr	r1, [r0], #4
   4aad8:	str	r0, [sp, #92]	; 0x5c
   4aadc:	add	r0, r1, #1
   4aae0:	str	r1, [sp, #40]	; 0x28
   4aae4:	str	r0, [sp, #36]	; 0x24
   4aae8:	ldr	r0, [sp, #88]	; 0x58
   4aaec:	str	r0, [sp, #84]	; 0x54
   4aaf0:	mov	r0, #0
   4aaf4:	str	r0, [sp, #80]	; 0x50
   4aaf8:	ldr	r7, [sp, #64]	; 0x40
   4aafc:	cmp	lr, #1
   4ab00:	bge	4ab50 <GetDataSlab+0x169f4>
   4ab04:	b	4abd4 <GetDataSlab+0x16a78>
   4ab08:	ldr	r1, [sp, #32]
   4ab0c:	ldr	r0, [r1, r0]
   4ab10:	add	r5, r5, r0, lsl #2
   4ab14:	add	r8, r0, r8
   4ab18:	ldr	r0, [sp, #60]	; 0x3c
   4ab1c:	ldr	r1, [sp, #84]	; 0x54
   4ab20:	mov	r2, #0
   4ab24:	add	r1, r1, r0
   4ab28:	ldr	r0, [sp, #76]	; 0x4c
   4ab2c:	str	r1, [sp, #84]	; 0x54
   4ab30:	ldr	r1, [sp, #80]	; 0x50
   4ab34:	add	r1, r1, lr
   4ab38:	cmp	r1, r0
   4ab3c:	str	r1, [sp, #80]	; 0x50
   4ab40:	bge	5b6a0 <GetDataSlab+0x27544>
   4ab44:	ldr	r7, [sp, #64]	; 0x40
   4ab48:	cmp	lr, #1
   4ab4c:	blt	4abd4 <GetDataSlab+0x16a78>
   4ab50:	mov	r4, r8
   4ab54:	mov	sl, #0
   4ab58:	beq	4ab98 <GetDataSlab+0x16a3c>
   4ab5c:	ldr	r0, [sp, #36]	; 0x24
   4ab60:	ldr	r6, [sp, #84]	; 0x54
   4ab64:	mov	sl, #0
   4ab68:	add	r8, r5, r0, lsl #2
   4ab6c:	ldr	r0, [r8, #-4]
   4ab70:	bl	717f0 <__aeabi_f2lz>
   4ab74:	strd	r0, [r6]
   4ab78:	ldr	r0, [r8]
   4ab7c:	bl	717f0 <__aeabi_f2lz>
   4ab80:	add	sl, sl, #2
   4ab84:	strd	r0, [r6, #8]
   4ab88:	add	r6, r6, #16
   4ab8c:	add	r8, r8, #8
   4ab90:	cmp	r7, sl
   4ab94:	bne	4ab6c <GetDataSlab+0x16a10>
   4ab98:	ldr	r0, [sp, #56]	; 0x38
   4ab9c:	ldr	lr, [sp, #68]	; 0x44
   4aba0:	mov	r8, r4
   4aba4:	cmp	r0, #0
   4aba8:	beq	4abd4 <GetDataSlab+0x16a78>
   4abac:	ldr	r0, [sp, #40]	; 0x28
   4abb0:	ldr	r1, [sp, #88]	; 0x58
   4abb4:	ldr	r2, [sp, #80]	; 0x50
   4abb8:	add	r0, r5, r0, lsl #2
   4abbc:	add	r6, r1, r2, lsl #3
   4abc0:	ldr	r0, [r0, sl, lsl #2]
   4abc4:	bl	717f0 <__aeabi_f2lz>
   4abc8:	ldr	lr, [sp, #68]	; 0x44
   4abcc:	str	r0, [r6, sl, lsl #3]!
   4abd0:	str	r1, [r6, #4]
   4abd4:	ldr	r0, [sp, #72]	; 0x48
   4abd8:	add	r5, r5, r0, lsl #2
   4abdc:	add	r8, r8, r0
   4abe0:	ldr	r0, [fp, #24]
   4abe4:	cmp	r0, #2
   4abe8:	blt	4ab18 <GetDataSlab+0x169bc>
   4abec:	add	sl, sp, #44	; 0x2c
   4abf0:	ldr	ip, [sp, #92]	; 0x5c
   4abf4:	mov	r0, #0
   4abf8:	ldm	sl, {r1, r7, sl}
   4abfc:	b	4ac28 <GetDataSlab+0x16acc>
   4ac00:	sub	r6, fp, #176	; 0xb0
   4ac04:	ldr	r4, [ip, r0]
   4ac08:	sub	r2, r2, r3
   4ac0c:	ldr	r6, [r6, r0]
   4ac10:	mla	r2, r4, r6, r2
   4ac14:	add	r8, r2, r8
   4ac18:	add	r5, r5, r2, lsl #2
   4ac1c:	subs	r1, r1, #1
   4ac20:	add	r0, r0, #4
   4ac24:	beq	4ab18 <GetDataSlab+0x169bc>
   4ac28:	ldr	r2, [r9, r0]
   4ac2c:	add	r2, r2, #1
   4ac30:	str	r2, [r9, r0]
   4ac34:	ldr	r3, [r7, r0]
   4ac38:	sdiv	r6, r2, r3
   4ac3c:	mls	r2, r6, r3, r2
   4ac40:	cmp	r2, #0
   4ac44:	bne	4ab08 <GetDataSlab+0x169ac>
   4ac48:	mov	r2, #0
   4ac4c:	str	r2, [r9, r0]
   4ac50:	ldr	r2, [sl, r0]
   4ac54:	sdiv	r3, r8, r2
   4ac58:	mls	r3, r3, r2, r8
   4ac5c:	cmp	r3, #0
   4ac60:	bne	4ac00 <GetDataSlab+0x16aa4>
   4ac64:	ldr	r2, [ip, r0]
   4ac68:	cmp	r2, #0
   4ac6c:	beq	4ac1c <GetDataSlab+0x16ac0>
   4ac70:	sub	r3, fp, #176	; 0xb0
   4ac74:	ldr	r3, [r3, r0]
   4ac78:	mla	r8, r3, r2, r8
   4ac7c:	mul	r2, r3, r2
   4ac80:	b	4ac18 <GetDataSlab+0x16abc>
   4ac84:	ldr	r0, [sp, #80]	; 0x50
   4ac88:	add	r5, r0, r8, lsl #3
   4ac8c:	ldr	r0, [sp, #36]	; 0x24
   4ac90:	cmp	r0, #1
   4ac94:	bne	583a0 <GetDataSlab+0x24244>
   4ac98:	ldr	r0, [sp, #76]	; 0x4c
   4ac9c:	ldr	lr, [sp, #68]	; 0x44
   4aca0:	sub	r3, fp, #96	; 0x60
   4aca4:	cmp	r0, #1
   4aca8:	ldr	r0, [fp, #12]
   4acac:	blt	5b69c <GetDataSlab+0x27540>
   4acb0:	sub	r1, fp, #136	; 0x88
   4acb4:	orr	r9, r1, #4
   4acb8:	ldr	r1, [fp, #20]
   4acbc:	add	r1, r1, #4
   4acc0:	str	r1, [sp, #48]	; 0x30
   4acc4:	orr	r1, r2, #4
   4acc8:	str	r1, [sp, #52]	; 0x34
   4accc:	ldr	r1, [fp, #24]
   4acd0:	sub	r1, r1, #1
   4acd4:	str	r1, [sp, #44]	; 0x2c
   4acd8:	orr	r1, r3, #4
   4acdc:	str	r1, [sp, #32]
   4ace0:	and	r1, lr, #1
   4ace4:	str	r1, [sp, #56]	; 0x38
   4ace8:	sub	r1, lr, r1
   4acec:	str	r1, [sp, #64]	; 0x40
   4acf0:	lsl	r1, lr, #3
   4acf4:	str	r1, [sp, #60]	; 0x3c
   4acf8:	ldr	r1, [r0], #4
   4acfc:	str	r0, [sp, #92]	; 0x5c
   4ad00:	add	r0, r1, #1
   4ad04:	str	r1, [sp, #40]	; 0x28
   4ad08:	str	r0, [sp, #36]	; 0x24
   4ad0c:	ldr	r0, [sp, #88]	; 0x58
   4ad10:	str	r0, [sp, #84]	; 0x54
   4ad14:	mov	r0, #0
   4ad18:	str	r0, [sp, #80]	; 0x50
   4ad1c:	ldr	r7, [sp, #64]	; 0x40
   4ad20:	cmp	lr, #1
   4ad24:	bge	4ad74 <GetDataSlab+0x16c18>
   4ad28:	b	4ae08 <GetDataSlab+0x16cac>
   4ad2c:	ldr	r1, [sp, #32]
   4ad30:	ldr	r0, [r1, r0]
   4ad34:	add	r5, r5, r0, lsl #3
   4ad38:	add	r8, r0, r8
   4ad3c:	ldr	r0, [sp, #60]	; 0x3c
   4ad40:	ldr	r1, [sp, #84]	; 0x54
   4ad44:	mov	r2, #0
   4ad48:	add	r1, r1, r0
   4ad4c:	ldr	r0, [sp, #76]	; 0x4c
   4ad50:	str	r1, [sp, #84]	; 0x54
   4ad54:	ldr	r1, [sp, #80]	; 0x50
   4ad58:	add	r1, r1, lr
   4ad5c:	cmp	r1, r0
   4ad60:	str	r1, [sp, #80]	; 0x50
   4ad64:	bge	5b6a0 <GetDataSlab+0x27544>
   4ad68:	ldr	r7, [sp, #64]	; 0x40
   4ad6c:	cmp	lr, #1
   4ad70:	blt	4ae08 <GetDataSlab+0x16cac>
   4ad74:	mov	r4, r8
   4ad78:	mov	sl, #0
   4ad7c:	beq	4adc4 <GetDataSlab+0x16c68>
   4ad80:	ldr	r0, [sp, #36]	; 0x24
   4ad84:	ldr	r6, [sp, #84]	; 0x54
   4ad88:	mov	sl, #0
   4ad8c:	add	r8, r5, r0, lsl #3
   4ad90:	vldr	d16, [r8, #-8]
   4ad94:	vmov	r0, r1, d16
   4ad98:	bl	7181c <__aeabi_d2lz>
   4ad9c:	strd	r0, [r6]
   4ada0:	vldr	d16, [r8]
   4ada4:	vmov	r0, r1, d16
   4ada8:	bl	7181c <__aeabi_d2lz>
   4adac:	add	sl, sl, #2
   4adb0:	strd	r0, [r6, #8]
   4adb4:	add	r6, r6, #16
   4adb8:	add	r8, r8, #16
   4adbc:	cmp	r7, sl
   4adc0:	bne	4ad90 <GetDataSlab+0x16c34>
   4adc4:	ldr	r0, [sp, #56]	; 0x38
   4adc8:	ldr	lr, [sp, #68]	; 0x44
   4adcc:	mov	r8, r4
   4add0:	cmp	r0, #0
   4add4:	beq	4ae08 <GetDataSlab+0x16cac>
   4add8:	ldr	r0, [sp, #40]	; 0x28
   4addc:	ldr	r1, [sp, #88]	; 0x58
   4ade0:	ldr	r2, [sp, #80]	; 0x50
   4ade4:	add	r0, r5, r0, lsl #3
   4ade8:	add	r6, r1, r2, lsl #3
   4adec:	add	r0, r0, sl, lsl #3
   4adf0:	vldr	d16, [r0]
   4adf4:	vmov	r0, r1, d16
   4adf8:	bl	7181c <__aeabi_d2lz>
   4adfc:	ldr	lr, [sp, #68]	; 0x44
   4ae00:	str	r0, [r6, sl, lsl #3]!
   4ae04:	str	r1, [r6, #4]
   4ae08:	ldr	r0, [sp, #72]	; 0x48
   4ae0c:	add	r5, r5, r0, lsl #3
   4ae10:	add	r8, r8, r0
   4ae14:	ldr	r0, [fp, #24]
   4ae18:	cmp	r0, #2
   4ae1c:	blt	4ad3c <GetDataSlab+0x16be0>
   4ae20:	add	sl, sp, #44	; 0x2c
   4ae24:	ldr	ip, [sp, #92]	; 0x5c
   4ae28:	mov	r0, #0
   4ae2c:	ldm	sl, {r1, r7, sl}
   4ae30:	b	4ae5c <GetDataSlab+0x16d00>
   4ae34:	sub	r6, fp, #176	; 0xb0
   4ae38:	ldr	r4, [ip, r0]
   4ae3c:	sub	r2, r2, r3
   4ae40:	ldr	r6, [r6, r0]
   4ae44:	mla	r2, r4, r6, r2
   4ae48:	add	r8, r2, r8
   4ae4c:	add	r5, r5, r2, lsl #3
   4ae50:	subs	r1, r1, #1
   4ae54:	add	r0, r0, #4
   4ae58:	beq	4ad3c <GetDataSlab+0x16be0>
   4ae5c:	ldr	r2, [r9, r0]
   4ae60:	add	r2, r2, #1
   4ae64:	str	r2, [r9, r0]
   4ae68:	ldr	r3, [r7, r0]
   4ae6c:	sdiv	r6, r2, r3
   4ae70:	mls	r2, r6, r3, r2
   4ae74:	cmp	r2, #0
   4ae78:	bne	4ad2c <GetDataSlab+0x16bd0>
   4ae7c:	mov	r2, #0
   4ae80:	str	r2, [r9, r0]
   4ae84:	ldr	r2, [sl, r0]
   4ae88:	sdiv	r3, r8, r2
   4ae8c:	mls	r3, r3, r2, r8
   4ae90:	cmp	r3, #0
   4ae94:	bne	4ae34 <GetDataSlab+0x16cd8>
   4ae98:	ldr	r2, [ip, r0]
   4ae9c:	cmp	r2, #0
   4aea0:	beq	4ae50 <GetDataSlab+0x16cf4>
   4aea4:	sub	r3, fp, #176	; 0xb0
   4aea8:	ldr	r3, [r3, r0]
   4aeac:	mla	r8, r3, r2, r8
   4aeb0:	mul	r2, r3, r2
   4aeb4:	b	4ae4c <GetDataSlab+0x16cf0>
   4aeb8:	ldr	r0, [sp, #80]	; 0x50
   4aebc:	add	r7, r0, ip, lsl #3
   4aec0:	ldr	r0, [sp, #32]
   4aec4:	cmp	r0, #1
   4aec8:	bne	58610 <GetDataSlab+0x244b4>
   4aecc:	ldr	r0, [sp, #68]	; 0x44
   4aed0:	ldr	r8, [sp, #88]	; 0x58
   4aed4:	ldr	lr, [sp, #44]	; 0x2c
   4aed8:	cmp	r0, #1
   4aedc:	blt	58874 <GetDataSlab+0x24718>
   4aee0:	sub	r0, lr, #2
   4aee4:	mov	r2, #1
   4aee8:	ldr	sl, [sp, #24]
   4aeec:	str	r8, [sp, #52]	; 0x34
   4aef0:	add	r2, r2, r0, lsr #1
   4aef4:	lsr	r0, r0, #1
   4aef8:	str	r0, [sp, #4]
   4aefc:	mov	r0, #0
   4af00:	and	r1, r2, #1
   4af04:	str	r0, [sp, #56]	; 0x38
   4af08:	mov	r0, #0
   4af0c:	str	r1, [sp, #12]
   4af10:	sub	r1, r2, r1
   4af14:	sub	r2, fp, #136	; 0x88
   4af18:	str	r0, [sp, #64]	; 0x40
   4af1c:	str	r1, [sp]
   4af20:	ldr	r1, [fp, #20]
   4af24:	orr	r9, r2, #4
   4af28:	add	r4, r1, #4
   4af2c:	sub	r1, fp, #176	; 0xb0
   4af30:	orr	r1, r1, #4
   4af34:	str	r4, [sp, #32]
   4af38:	str	r1, [sp, #76]	; 0x4c
   4af3c:	ldr	r1, [fp, #24]
   4af40:	sub	r1, r1, #1
   4af44:	str	r1, [sp, #28]
   4af48:	sub	r1, fp, #96	; 0x60
   4af4c:	orr	r1, r1, #4
   4af50:	str	r1, [sp, #16]
   4af54:	ldr	r1, [fp, #12]
   4af58:	ldr	r2, [r1], #4
   4af5c:	str	r1, [sp, #72]	; 0x48
   4af60:	add	r1, lr, r2
   4af64:	str	r2, [sp, #40]	; 0x28
   4af68:	str	r1, [sp, #20]
   4af6c:	and	r1, lr, #1
   4af70:	str	r1, [sp, #36]	; 0x24
   4af74:	lsl	r1, lr, #3
   4af78:	str	r1, [sp, #48]	; 0x30
   4af7c:	bic	r1, lr, #1
   4af80:	str	r1, [sp, #8]
   4af84:	cmp	lr, #1
   4af88:	str	r7, [sp, #60]	; 0x3c
   4af8c:	bge	4afe4 <GetDataSlab+0x16e88>
   4af90:	b	4b124 <GetDataSlab+0x16fc8>
   4af94:	ldr	r0, [sp, #16]
   4af98:	ldr	r0, [r0, r2]
   4af9c:	add	r7, r7, r0, lsl #3
   4afa0:	add	ip, r0, ip
   4afa4:	ldr	r0, [sp, #48]	; 0x30
   4afa8:	ldr	r1, [sp, #52]	; 0x34
   4afac:	add	r1, r1, r0
   4afb0:	ldr	r0, [sp, #56]	; 0x38
   4afb4:	str	r1, [sp, #52]	; 0x34
   4afb8:	ldr	r1, [sp, #64]	; 0x40
   4afbc:	add	r0, r0, #1
   4afc0:	str	r0, [sp, #56]	; 0x38
   4afc4:	ldr	r0, [sp, #68]	; 0x44
   4afc8:	add	r1, r1, lr
   4afcc:	str	r1, [sp, #64]	; 0x40
   4afd0:	cmp	r1, r0
   4afd4:	bge	58874 <GetDataSlab+0x24718>
   4afd8:	cmp	lr, #1
   4afdc:	str	r7, [sp, #60]	; 0x3c
   4afe0:	blt	4b124 <GetDataSlab+0x16fc8>
   4afe4:	ldr	r0, [sp, #60]	; 0x3c
   4afe8:	ldr	r1, [sp, #40]	; 0x28
   4afec:	mov	r6, #0
   4aff0:	add	r2, r0, r1, lsl #3
   4aff4:	ldr	r1, [sp, #64]	; 0x40
   4aff8:	add	r4, r8, r1, lsl #3
   4affc:	beq	4b0ac <GetDataSlab+0x16f50>
   4b000:	ldr	r1, [sp, #48]	; 0x30
   4b004:	ldr	r3, [sp, #56]	; 0x38
   4b008:	mla	r3, r1, r3, r8
   4b00c:	ldr	r1, [sp, #20]
   4b010:	add	r5, r0, r1, lsl #3
   4b014:	cmp	r3, r5
   4b018:	bcs	4b034 <GetDataSlab+0x16ed8>
   4b01c:	ldr	r0, [sp, #48]	; 0x30
   4b020:	ldr	r1, [sp, #56]	; 0x38
   4b024:	mla	r3, r0, r1, r0
   4b028:	add	r3, r8, r3
   4b02c:	cmp	r3, r2
   4b030:	bhi	4b0ac <GetDataSlab+0x16f50>
   4b034:	ldr	r0, [sp, #4]
   4b038:	mov	lr, #0
   4b03c:	cmp	r0, #0
   4b040:	beq	4b078 <GetDataSlab+0x16f1c>
   4b044:	ldr	r3, [sp, #52]	; 0x34
   4b048:	ldr	r8, [sp]
   4b04c:	mov	r6, r2
   4b050:	mov	r0, #32
   4b054:	add	r5, r6, #16
   4b058:	vld1.64	{d16-d17}, [r6], r0
   4b05c:	add	sl, r3, #16
   4b060:	subs	r8, r8, #2
   4b064:	add	lr, lr, #4
   4b068:	vst1.64	{d16-d17}, [r3], r0
   4b06c:	vld1.64	{d16-d17}, [r5]
   4b070:	vst1.64	{d16-d17}, [sl]
   4b074:	bne	4b054 <GetDataSlab+0x16ef8>
   4b078:	ldr	r0, [sp, #12]
   4b07c:	ldr	r8, [sp, #88]	; 0x58
   4b080:	cmp	r0, #0
   4b084:	beq	4b098 <GetDataSlab+0x16f3c>
   4b088:	add	r3, r2, lr, lsl #3
   4b08c:	vld1.64	{d16-d17}, [r3]
   4b090:	add	r3, r4, lr, lsl #3
   4b094:	vst1.64	{d16-d17}, [r3]
   4b098:	ldr	lr, [sp, #44]	; 0x2c
   4b09c:	ldr	r6, [sp, #8]
   4b0a0:	ldr	sl, [sp, #24]
   4b0a4:	cmp	lr, r6
   4b0a8:	beq	4b124 <GetDataSlab+0x16fc8>
   4b0ac:	ldr	r0, [sp, #36]	; 0x24
   4b0b0:	mov	r3, r6
   4b0b4:	cmp	r0, #0
   4b0b8:	beq	4b0d4 <GetDataSlab+0x16f78>
   4b0bc:	mov	r3, r2
   4b0c0:	ldr	r5, [r3, r6, lsl #3]!
   4b0c4:	ldr	r3, [r3, #4]
   4b0c8:	str	r5, [r4, r6, lsl #3]!
   4b0cc:	str	r3, [r4, #4]
   4b0d0:	orr	r3, r6, #1
   4b0d4:	orr	r6, r6, #1
   4b0d8:	cmp	lr, r6
   4b0dc:	beq	4b124 <GetDataSlab+0x16fc8>
   4b0e0:	ldr	r5, [sp, #52]	; 0x34
   4b0e4:	sub	r6, lr, r3
   4b0e8:	lsl	r3, r3, #3
   4b0ec:	add	r0, r2, #16
   4b0f0:	ldr	r7, [r2, r3]!
   4b0f4:	add	r1, r5, #16
   4b0f8:	subs	r6, r6, #2
   4b0fc:	ldr	r4, [r2, #4]
   4b100:	str	r7, [r5, r3]!
   4b104:	str	r4, [r5, #4]
   4b108:	ldr	r7, [r2, #8]
   4b10c:	ldr	r2, [r2, #12]
   4b110:	str	r2, [r5, #12]
   4b114:	str	r7, [r5, #8]
   4b118:	mov	r2, r0
   4b11c:	mov	r5, r1
   4b120:	bne	4b0ec <GetDataSlab+0x16f90>
   4b124:	ldr	r7, [sp, #60]	; 0x3c
   4b128:	ldr	r0, [fp, #24]
   4b12c:	add	ip, ip, sl
   4b130:	add	r7, r7, sl, lsl #3
   4b134:	cmp	r0, #2
   4b138:	blt	4afa4 <GetDataSlab+0x16e48>
   4b13c:	ldr	r6, [sp, #28]
   4b140:	ldr	r4, [sp, #32]
   4b144:	mov	r2, #0
   4b148:	b	4b178 <GetDataSlab+0x1701c>
   4b14c:	ldr	r1, [sp, #72]	; 0x48
   4b150:	sub	r0, fp, #176	; 0xb0
   4b154:	sub	r3, r3, r5
   4b158:	ldr	r0, [r0, r2]
   4b15c:	ldr	r1, [r1, r2]
   4b160:	mla	r0, r1, r0, r3
   4b164:	add	ip, r0, ip
   4b168:	add	r7, r7, r0, lsl #3
   4b16c:	subs	r6, r6, #1
   4b170:	add	r2, r2, #4
   4b174:	beq	4afa4 <GetDataSlab+0x16e48>
   4b178:	ldr	r0, [r9, r2]
   4b17c:	add	r0, r0, #1
   4b180:	str	r0, [r9, r2]
   4b184:	ldr	r1, [r4, r2]
   4b188:	sdiv	r3, r0, r1
   4b18c:	mls	r0, r3, r1, r0
   4b190:	cmp	r0, #0
   4b194:	bne	4af94 <GetDataSlab+0x16e38>
   4b198:	mov	r0, #0
   4b19c:	str	r0, [r9, r2]
   4b1a0:	ldr	r0, [sp, #76]	; 0x4c
   4b1a4:	ldr	r3, [r0, r2]
   4b1a8:	sdiv	r0, ip, r3
   4b1ac:	mls	r5, r0, r3, ip
   4b1b0:	cmp	r5, #0
   4b1b4:	bne	4b14c <GetDataSlab+0x16ff0>
   4b1b8:	ldr	r0, [sp, #72]	; 0x48
   4b1bc:	ldr	r3, [r0, r2]
   4b1c0:	cmp	r3, #0
   4b1c4:	beq	4b16c <GetDataSlab+0x17010>
   4b1c8:	sub	r0, fp, #176	; 0xb0
   4b1cc:	ldr	r0, [r0, r2]
   4b1d0:	mla	ip, r0, r3, ip
   4b1d4:	mul	r0, r0, r3
   4b1d8:	b	4b168 <GetDataSlab+0x1700c>
   4b1dc:	ldr	r0, [sp, #80]	; 0x50
   4b1e0:	cmp	lr, #1
   4b1e4:	add	r9, r0, r7
   4b1e8:	bne	58d3c <GetDataSlab+0x24be0>
   4b1ec:	ldr	r0, [sp, #72]	; 0x48
   4b1f0:	ldr	r8, [sp, #88]	; 0x58
   4b1f4:	sub	r2, fp, #176	; 0xb0
   4b1f8:	cmp	r0, #1
   4b1fc:	blt	5b69c <GetDataSlab+0x27540>
   4b200:	ldr	r3, [sp, #68]	; 0x44
   4b204:	mov	r1, #1
   4b208:	ldr	lr, [sp, #40]	; 0x28
   4b20c:	mov	sl, #0
   4b210:	sub	r0, r3, #2
   4b214:	add	r1, r1, r0, lsr #1
   4b218:	lsr	r0, r0, #1
   4b21c:	str	r0, [sp, #20]
   4b220:	mov	r0, #0
   4b224:	and	r6, r1, #1
   4b228:	str	r0, [sp, #60]	; 0x3c
   4b22c:	mov	r0, #0
   4b230:	sub	r1, r1, r6
   4b234:	str	r6, [sp, #28]
   4b238:	str	r0, [sp, #64]	; 0x40
   4b23c:	str	r1, [sp, #16]
   4b240:	sub	r1, fp, #136	; 0x88
   4b244:	orr	r4, r1, #4
   4b248:	ldr	r1, [fp, #20]
   4b24c:	add	r1, r1, #4
   4b250:	str	r1, [sp, #84]	; 0x54
   4b254:	orr	r1, r2, #4
   4b258:	lsl	r2, r3, #3
   4b25c:	str	r1, [sp, #80]	; 0x50
   4b260:	ldr	r1, [fp, #12]
   4b264:	str	r2, [sp, #56]	; 0x38
   4b268:	and	r2, r3, #1
   4b26c:	str	r2, [sp, #48]	; 0x30
   4b270:	bic	r2, r3, #1
   4b274:	str	r2, [sp, #24]
   4b278:	add	r1, r1, #4
   4b27c:	str	r1, [sp, #76]	; 0x4c
   4b280:	ldr	r1, [fp, #24]
   4b284:	sub	r1, r1, #1
   4b288:	str	r1, [sp, #44]	; 0x2c
   4b28c:	sub	r1, fp, #96	; 0x60
   4b290:	orr	r1, r1, #4
   4b294:	str	r1, [sp, #32]
   4b298:	mov	r1, r3
   4b29c:	cmp	r1, #1
   4b2a0:	sub	ip, fp, #176	; 0xb0
   4b2a4:	bge	4b2fc <GetDataSlab+0x171a0>
   4b2a8:	b	4b4a8 <GetDataSlab+0x1734c>
   4b2ac:	ldr	r0, [sp, #32]
   4b2b0:	ldr	r0, [r0, r2]
   4b2b4:	add	r9, r9, r0
   4b2b8:	add	r7, r0, r7
   4b2bc:	ldr	r0, [sp, #56]	; 0x38
   4b2c0:	ldr	r1, [sp, #68]	; 0x44
   4b2c4:	ldr	r3, [sp, #64]	; 0x40
   4b2c8:	mov	r2, #0
   4b2cc:	add	r8, r8, r0
   4b2d0:	ldr	r0, [sp, #60]	; 0x3c
   4b2d4:	add	r3, r3, r1
   4b2d8:	str	r3, [sp, #64]	; 0x40
   4b2dc:	add	r0, r0, #1
   4b2e0:	str	r0, [sp, #60]	; 0x3c
   4b2e4:	ldr	r0, [sp, #72]	; 0x48
   4b2e8:	cmp	r3, r0
   4b2ec:	bge	5b6a0 <GetDataSlab+0x27544>
   4b2f0:	cmp	r1, #1
   4b2f4:	sub	ip, fp, #176	; 0xb0
   4b2f8:	blt	4b4a8 <GetDataSlab+0x1734c>
   4b2fc:	ldr	r0, [fp, #12]
   4b300:	ldr	r1, [sp, #64]	; 0x40
   4b304:	mov	r2, #0
   4b308:	ldr	r6, [r0]
   4b30c:	ldr	r0, [sp, #88]	; 0x58
   4b310:	add	r1, r0, r1, lsl #3
   4b314:	add	r3, r9, r6
   4b318:	str	r1, [sp, #52]	; 0x34
   4b31c:	beq	4b430 <GetDataSlab+0x172d4>
   4b320:	ldr	r1, [sp, #56]	; 0x38
   4b324:	ldr	r5, [sp, #60]	; 0x3c
   4b328:	mla	r0, r1, r5, r0
   4b32c:	ldr	r1, [sp, #68]	; 0x44
   4b330:	add	r1, r9, r1
   4b334:	add	r1, r1, r6
   4b338:	cmp	r0, r1
   4b33c:	bcs	4b35c <GetDataSlab+0x17200>
   4b340:	ldr	r0, [sp, #56]	; 0x38
   4b344:	ldr	r1, [sp, #60]	; 0x3c
   4b348:	mla	r0, r0, r1, r0
   4b34c:	ldr	r1, [sp, #88]	; 0x58
   4b350:	add	r0, r1, r0
   4b354:	cmp	r3, r0
   4b358:	bcc	4b430 <GetDataSlab+0x172d4>
   4b35c:	ldr	r0, [sp, #20]
   4b360:	mov	r2, #0
   4b364:	str	r6, [sp, #36]	; 0x24
   4b368:	cmp	r0, #0
   4b36c:	beq	4b3d8 <GetDataSlab+0x1727c>
   4b370:	ldr	ip, [sp, #16]
   4b374:	mov	lr, r8
   4b378:	add	r5, sp, #528	; 0x210
   4b37c:	mov	r0, r3
   4b380:	mov	r6, #32
   4b384:	subs	ip, ip, #2
   4b388:	ldrh	r1, [r0, r2]!
   4b38c:	add	r2, r2, #4
   4b390:	strh	r1, [r5, #248]	; 0xf8
   4b394:	sub	r1, fp, #280	; 0x118
   4b398:	vld1.16	{d16[0]}, [r1 :16]
   4b39c:	add	r1, lr, #16
   4b3a0:	vmovl.u8	q8, d16
   4b3a4:	vmovl.u16	q8, d16
   4b3a8:	vmovl.u32	q8, d16
   4b3ac:	vst1.64	{d16-d17}, [lr], r6
   4b3b0:	ldrh	r0, [r0, #2]
   4b3b4:	strh	r0, [r5, #252]	; 0xfc
   4b3b8:	sub	r0, fp, #276	; 0x114
   4b3bc:	vld1.16	{d16[0]}, [r0 :16]
   4b3c0:	vmovl.u8	q8, d16
   4b3c4:	vmovl.u16	q8, d16
   4b3c8:	vmovl.u32	q8, d16
   4b3cc:	vst1.64	{d16-d17}, [r1]
   4b3d0:	bne	4b37c <GetDataSlab+0x17220>
   4b3d4:	b	4b3dc <GetDataSlab+0x17280>
   4b3d8:	add	r5, sp, #528	; 0x210
   4b3dc:	ldr	r0, [sp, #28]
   4b3e0:	ldr	lr, [sp, #40]	; 0x28
   4b3e4:	ldr	r6, [sp, #36]	; 0x24
   4b3e8:	sub	ip, fp, #176	; 0xb0
   4b3ec:	cmp	r0, #0
   4b3f0:	beq	4b420 <GetDataSlab+0x172c4>
   4b3f4:	add	r0, r3, r2
   4b3f8:	ldrh	r0, [r0]
   4b3fc:	strh	r0, [r5, #244]	; 0xf4
   4b400:	sub	r0, fp, #284	; 0x11c
   4b404:	vld1.16	{d16[0]}, [r0 :16]
   4b408:	ldr	r0, [sp, #52]	; 0x34
   4b40c:	add	r0, r0, r2, lsl #3
   4b410:	vmovl.u8	q8, d16
   4b414:	vmovl.u16	q8, d16
   4b418:	vmovl.u32	q8, d16
   4b41c:	vst1.64	{d16-d17}, [r0]
   4b420:	ldr	r0, [sp, #68]	; 0x44
   4b424:	ldr	r2, [sp, #24]
   4b428:	cmp	r0, r2
   4b42c:	beq	4b4a8 <GetDataSlab+0x1734c>
   4b430:	ldr	r0, [sp, #48]	; 0x30
   4b434:	cmp	r0, #0
   4b438:	mov	r0, r2
   4b43c:	beq	4b454 <GetDataSlab+0x172f8>
   4b440:	ldrb	r0, [r3, r2]
   4b444:	ldr	r1, [sp, #52]	; 0x34
   4b448:	str	r0, [r1, r2, lsl #3]!
   4b44c:	orr	r0, r2, #1
   4b450:	str	sl, [r1, #4]
   4b454:	orr	r1, r2, #1
   4b458:	ldr	r2, [sp, #68]	; 0x44
   4b45c:	cmp	r2, r1
   4b460:	beq	4b4a8 <GetDataSlab+0x1734c>
   4b464:	ldr	r1, [sp, #68]	; 0x44
   4b468:	sub	r2, r1, r0
   4b46c:	add	r1, r0, r6
   4b470:	lsl	r0, r0, #3
   4b474:	add	r1, r9, r1
   4b478:	add	r3, r1, #1
   4b47c:	ldrb	r1, [r3, #-1]
   4b480:	mov	r6, r8
   4b484:	subs	r2, r2, #2
   4b488:	str	r1, [r6, r0]!
   4b48c:	add	r0, r0, #16
   4b490:	str	sl, [r6, #4]
   4b494:	ldrb	r1, [r3]
   4b498:	add	r3, r3, #2
   4b49c:	str	sl, [r6, #12]
   4b4a0:	str	r1, [r6, #8]
   4b4a4:	bne	4b47c <GetDataSlab+0x17320>
   4b4a8:	ldr	r0, [fp, #24]
   4b4ac:	add	r9, r9, lr
   4b4b0:	add	r7, r7, lr
   4b4b4:	cmp	r0, #2
   4b4b8:	blt	4b2bc <GetDataSlab+0x17160>
   4b4bc:	ldr	r3, [sp, #44]	; 0x2c
   4b4c0:	mov	r2, #0
   4b4c4:	b	4b4f0 <GetDataSlab+0x17394>
   4b4c8:	ldr	r5, [sp, #76]	; 0x4c
   4b4cc:	ldr	r6, [ip, r2]
   4b4d0:	sub	r0, r0, r1
   4b4d4:	ldr	r5, [r5, r2]
   4b4d8:	mla	r0, r5, r6, r0
   4b4dc:	add	r7, r0, r7
   4b4e0:	add	r9, r9, r0
   4b4e4:	subs	r3, r3, #1
   4b4e8:	add	r2, r2, #4
   4b4ec:	beq	4b2bc <GetDataSlab+0x17160>
   4b4f0:	ldr	r0, [r4, r2]
   4b4f4:	ldr	r1, [sp, #84]	; 0x54
   4b4f8:	add	r0, r0, #1
   4b4fc:	str	r0, [r4, r2]
   4b500:	ldr	r1, [r1, r2]
   4b504:	sdiv	r6, r0, r1
   4b508:	mls	r0, r6, r1, r0
   4b50c:	cmp	r0, #0
   4b510:	bne	4b2ac <GetDataSlab+0x17150>
   4b514:	ldr	r0, [sp, #80]	; 0x50
   4b518:	str	sl, [r4, r2]
   4b51c:	ldr	r0, [r0, r2]
   4b520:	sdiv	r1, r7, r0
   4b524:	mls	r1, r1, r0, r7
   4b528:	cmp	r1, #0
   4b52c:	bne	4b4c8 <GetDataSlab+0x1736c>
   4b530:	ldr	r0, [sp, #76]	; 0x4c
   4b534:	ldr	r0, [r0, r2]
   4b538:	cmp	r0, #0
   4b53c:	beq	4b4e4 <GetDataSlab+0x17388>
   4b540:	ldr	r1, [ip, r2]
   4b544:	mla	r7, r1, r0, r7
   4b548:	mla	r9, r1, r0, r9
   4b54c:	subs	r3, r3, #1
   4b550:	add	r2, r2, #4
   4b554:	bne	4b4f0 <GetDataSlab+0x17394>
   4b558:	b	4b2bc <GetDataSlab+0x17160>
   4b55c:	ldr	r0, [sp, #80]	; 0x50
   4b560:	ldr	r7, [sp, #68]	; 0x44
   4b564:	add	r5, r0, r1, lsl #1
   4b568:	cmp	r7, #1
   4b56c:	bne	58f58 <GetDataSlab+0x24dfc>
   4b570:	ldr	r0, [sp, #76]	; 0x4c
   4b574:	ldr	ip, [fp, #12]
   4b578:	ldr	r3, [fp, #20]
   4b57c:	ldr	lr, [sp, #60]	; 0x3c
   4b580:	cmp	r0, #1
   4b584:	blt	5b69c <GetDataSlab+0x27540>
   4b588:	mov	r7, ip
   4b58c:	mov	ip, r3
   4b590:	ldr	r3, [sp, #72]	; 0x48
   4b594:	mov	r2, #1
   4b598:	ldr	r8, [sp, #88]	; 0x58
   4b59c:	add	r9, ip, #4
   4b5a0:	mov	ip, #0
   4b5a4:	str	r9, [sp, #36]	; 0x24
   4b5a8:	sub	r0, r3, #2
   4b5ac:	add	r2, r2, r0, lsr #1
   4b5b0:	lsr	r0, r0, #1
   4b5b4:	str	r0, [sp, #40]	; 0x28
   4b5b8:	and	r4, r2, #1
   4b5bc:	sub	r2, r2, r4
   4b5c0:	str	r4, [sp, #48]	; 0x30
   4b5c4:	str	r2, [sp, #28]
   4b5c8:	sub	r2, fp, #136	; 0x88
   4b5cc:	orr	r4, r2, #4
   4b5d0:	sub	r2, fp, #176	; 0xb0
   4b5d4:	orr	r2, r2, #4
   4b5d8:	str	r2, [sp, #84]	; 0x54
   4b5dc:	ldr	r2, [fp, #24]
   4b5e0:	sub	r2, r2, #1
   4b5e4:	str	r2, [sp, #56]	; 0x38
   4b5e8:	orr	r2, r6, #4
   4b5ec:	str	r2, [sp, #32]
   4b5f0:	lsl	r2, r3, #3
   4b5f4:	str	r2, [sp, #80]	; 0x50
   4b5f8:	bic	r2, r3, #1
   4b5fc:	str	r2, [sp, #44]	; 0x2c
   4b600:	ldr	r2, [r7], #4
   4b604:	str	r7, [sp, #92]	; 0x5c
   4b608:	str	r2, [sp, #68]	; 0x44
   4b60c:	cmp	r3, #1
   4b610:	bge	4b650 <GetDataSlab+0x174f4>
   4b614:	b	4b764 <GetDataSlab+0x17608>
   4b618:	ldr	r0, [sp, #32]
   4b61c:	ldr	r0, [r0, r2]
   4b620:	add	r5, r5, r0, lsl #1
   4b624:	add	r1, r0, r1
   4b628:	ldr	r0, [sp, #80]	; 0x50
   4b62c:	ldr	r3, [sp, #72]	; 0x48
   4b630:	mov	r2, #0
   4b634:	add	r8, r8, r0
   4b638:	ldr	r0, [sp, #76]	; 0x4c
   4b63c:	add	ip, ip, r3
   4b640:	cmp	ip, r0
   4b644:	bge	5b6a0 <GetDataSlab+0x27544>
   4b648:	cmp	r3, #1
   4b64c:	blt	4b764 <GetDataSlab+0x17608>
   4b650:	mov	r0, #0
   4b654:	beq	4b728 <GetDataSlab+0x175cc>
   4b658:	ldr	r0, [sp, #68]	; 0x44
   4b65c:	mov	r2, #0
   4b660:	str	ip, [sp, #64]	; 0x40
   4b664:	add	sl, r5, r0, lsl #1
   4b668:	ldr	r0, [sp, #40]	; 0x28
   4b66c:	str	sl, [sp, #52]	; 0x34
   4b670:	cmp	r0, #0
   4b674:	beq	4b6d0 <GetDataSlab+0x17574>
   4b678:	ldr	lr, [sp, #28]
   4b67c:	mov	r3, r8
   4b680:	sub	r7, fp, #316	; 0x13c
   4b684:	mov	ip, #32
   4b688:	sub	r6, fp, #312	; 0x138
   4b68c:	ldr	r0, [sl]
   4b690:	subs	lr, lr, #2
   4b694:	add	r2, r2, #4
   4b698:	str	r0, [fp, #-316]	; 0xfffffec4
   4b69c:	add	r0, r3, #16
   4b6a0:	vld1.32	{d16[0]}, [r7 :32]
   4b6a4:	vmovl.s16	q8, d16
   4b6a8:	vmovl.s32	q8, d16
   4b6ac:	vst1.64	{d16-d17}, [r3], ip
   4b6b0:	ldr	r9, [sl, #4]
   4b6b4:	add	sl, sl, #8
   4b6b8:	str	r9, [fp, #-312]	; 0xfffffec8
   4b6bc:	vld1.32	{d16[0]}, [r6 :32]
   4b6c0:	vmovl.s16	q8, d16
   4b6c4:	vmovl.s32	q8, d16
   4b6c8:	vst1.64	{d16-d17}, [r0]
   4b6cc:	bne	4b68c <GetDataSlab+0x17530>
   4b6d0:	ldr	r0, [sp, #48]	; 0x30
   4b6d4:	ldr	ip, [sp, #64]	; 0x40
   4b6d8:	cmp	r0, #0
   4b6dc:	beq	4b70c <GetDataSlab+0x175b0>
   4b6e0:	ldr	r3, [sp, #52]	; 0x34
   4b6e4:	ldr	r0, [sp, #88]	; 0x58
   4b6e8:	ldr	r3, [r3, r2, lsl #1]
   4b6ec:	add	r0, r0, ip, lsl #3
   4b6f0:	add	r0, r0, r2, lsl #3
   4b6f4:	str	r3, [fp, #-320]	; 0xfffffec0
   4b6f8:	sub	r3, fp, #320	; 0x140
   4b6fc:	vld1.32	{d16[0]}, [r3 :32]
   4b700:	vmovl.s16	q8, d16
   4b704:	vmovl.s32	q8, d16
   4b708:	vst1.64	{d16-d17}, [r0]
   4b70c:	ldr	r0, [sp, #72]	; 0x48
   4b710:	ldr	r2, [sp, #44]	; 0x2c
   4b714:	ldr	lr, [sp, #60]	; 0x3c
   4b718:	ldr	r9, [sp, #36]	; 0x24
   4b71c:	cmp	r0, r2
   4b720:	mov	r0, r2
   4b724:	beq	4b764 <GetDataSlab+0x17608>
   4b728:	ldr	r6, [sp, #68]	; 0x44
   4b72c:	ldr	r3, [sp, #72]	; 0x48
   4b730:	mov	r2, #0
   4b734:	sub	r2, r2, r0, lsl #3
   4b738:	add	r7, r5, r6, lsl #1
   4b73c:	sub	r3, r3, r0
   4b740:	add	r0, r7, r0, lsl #1
   4b744:	ldrsh	r7, [r0], #2
   4b748:	mov	r6, r8
   4b74c:	subs	r3, r3, #1
   4b750:	str	r7, [r6, -r2]!
   4b754:	asr	r7, r7, #31
   4b758:	sub	r2, r2, #8
   4b75c:	str	r7, [r6, #4]
   4b760:	bne	4b744 <GetDataSlab+0x175e8>
   4b764:	ldr	r0, [fp, #24]
   4b768:	add	r5, r5, lr, lsl #1
   4b76c:	add	r1, r1, lr
   4b770:	cmp	r0, #2
   4b774:	blt	4b628 <GetDataSlab+0x174cc>
   4b778:	ldr	sl, [sp, #56]	; 0x38
   4b77c:	mov	r2, #0
   4b780:	b	4b7b0 <GetDataSlab+0x17654>
   4b784:	ldr	r6, [sp, #92]	; 0x5c
   4b788:	sub	r7, fp, #176	; 0xb0
   4b78c:	sub	r0, r0, r3
   4b790:	ldr	r7, [r7, r2]
   4b794:	ldr	r6, [r6, r2]
   4b798:	mla	r0, r6, r7, r0
   4b79c:	add	r1, r0, r1
   4b7a0:	add	r5, r5, r0, lsl #1
   4b7a4:	subs	sl, sl, #1
   4b7a8:	add	r2, r2, #4
   4b7ac:	beq	4b628 <GetDataSlab+0x174cc>
   4b7b0:	ldr	r0, [r4, r2]
   4b7b4:	add	r0, r0, #1
   4b7b8:	str	r0, [r4, r2]
   4b7bc:	ldr	r3, [r9, r2]
   4b7c0:	sdiv	r7, r0, r3
   4b7c4:	mls	r0, r7, r3, r0
   4b7c8:	cmp	r0, #0
   4b7cc:	bne	4b618 <GetDataSlab+0x174bc>
   4b7d0:	mov	r0, #0
   4b7d4:	str	r0, [r4, r2]
   4b7d8:	ldr	r0, [sp, #84]	; 0x54
   4b7dc:	ldr	r0, [r0, r2]
   4b7e0:	sdiv	r3, r1, r0
   4b7e4:	mls	r3, r3, r0, r1
   4b7e8:	cmp	r3, #0
   4b7ec:	bne	4b784 <GetDataSlab+0x17628>
   4b7f0:	ldr	r0, [sp, #92]	; 0x5c
   4b7f4:	ldr	r0, [r0, r2]
   4b7f8:	cmp	r0, #0
   4b7fc:	beq	4b7a4 <GetDataSlab+0x17648>
   4b800:	sub	r3, fp, #176	; 0xb0
   4b804:	ldr	r3, [r3, r2]
   4b808:	mla	r1, r3, r0, r1
   4b80c:	mul	r0, r3, r0
   4b810:	b	4b7a0 <GetDataSlab+0x17644>
   4b814:	ldr	r0, [sp, #80]	; 0x50
   4b818:	ldr	r6, [sp, #68]	; 0x44
   4b81c:	add	r0, r0, r1, lsl #1
   4b820:	cmp	r6, #1
   4b824:	str	r0, [sp, #44]	; 0x2c
   4b828:	bne	59184 <GetDataSlab+0x25028>
   4b82c:	ldr	r0, [sp, #76]	; 0x4c
   4b830:	ldr	r3, [fp, #12]
   4b834:	ldr	r8, [sp, #56]	; 0x38
   4b838:	sub	r7, fp, #96	; 0x60
   4b83c:	cmp	r0, #1
   4b840:	blt	5b69c <GetDataSlab+0x27540>
   4b844:	mov	r6, r3
   4b848:	ldr	r3, [sp, #72]	; 0x48
   4b84c:	mov	r2, #1
   4b850:	ldr	sl, [sp, #88]	; 0x58
   4b854:	mov	r4, #0
   4b858:	sub	r0, r3, #2
   4b85c:	add	r2, r2, r0, lsr #1
   4b860:	lsr	r0, r0, #1
   4b864:	str	r0, [sp, #32]
   4b868:	mov	r0, #0
   4b86c:	and	r5, r2, #1
   4b870:	str	r0, [sp, #68]	; 0x44
   4b874:	sub	r2, r2, r5
   4b878:	str	r5, [sp, #40]	; 0x28
   4b87c:	str	r2, [sp, #24]
   4b880:	sub	r2, fp, #136	; 0x88
   4b884:	orr	r9, r2, #4
   4b888:	ldr	r2, [fp, #20]
   4b88c:	add	r2, r2, #4
   4b890:	str	r2, [sp, #84]	; 0x54
   4b894:	orr	r2, ip, #4
   4b898:	ldr	ip, [sp, #44]	; 0x2c
   4b89c:	str	r2, [sp, #80]	; 0x50
   4b8a0:	ldr	r2, [fp, #24]
   4b8a4:	sub	r2, r2, #1
   4b8a8:	str	r2, [sp, #52]	; 0x34
   4b8ac:	orr	r2, r7, #4
   4b8b0:	str	r2, [sp, #28]
   4b8b4:	lsl	r2, r3, #3
   4b8b8:	str	r2, [sp, #64]	; 0x40
   4b8bc:	bic	r2, r3, #1
   4b8c0:	str	r2, [sp, #36]	; 0x24
   4b8c4:	ldr	r2, [r6], #4
   4b8c8:	str	r6, [sp, #92]	; 0x5c
   4b8cc:	str	r2, [sp, #60]	; 0x3c
   4b8d0:	ldr	lr, [sp, #92]	; 0x5c
   4b8d4:	cmp	r3, #1
   4b8d8:	bge	4b924 <GetDataSlab+0x177c8>
   4b8dc:	b	4ba38 <GetDataSlab+0x178dc>
   4b8e0:	ldr	r0, [sp, #28]
   4b8e4:	ldr	r0, [r0, r2]
   4b8e8:	add	ip, ip, r0, lsl #1
   4b8ec:	add	r1, r0, r1
   4b8f0:	ldr	r0, [sp, #64]	; 0x40
   4b8f4:	ldr	r3, [sp, #72]	; 0x48
   4b8f8:	ldr	r7, [sp, #68]	; 0x44
   4b8fc:	mov	r2, #0
   4b900:	add	sl, sl, r0
   4b904:	ldr	r0, [sp, #76]	; 0x4c
   4b908:	add	r7, r7, r3
   4b90c:	str	r7, [sp, #68]	; 0x44
   4b910:	cmp	r7, r0
   4b914:	bge	5b6a0 <GetDataSlab+0x27544>
   4b918:	ldr	lr, [sp, #92]	; 0x5c
   4b91c:	cmp	r3, #1
   4b920:	blt	4ba38 <GetDataSlab+0x178dc>
   4b924:	mov	r0, #0
   4b928:	beq	4ba04 <GetDataSlab+0x178a8>
   4b92c:	ldr	r0, [sp, #60]	; 0x3c
   4b930:	mov	r3, #0
   4b934:	str	ip, [sp, #44]	; 0x2c
   4b938:	add	r2, ip, r0, lsl #1
   4b93c:	ldr	r0, [sp, #32]
   4b940:	str	r2, [sp, #48]	; 0x30
   4b944:	cmp	r0, #0
   4b948:	beq	4b9a4 <GetDataSlab+0x17848>
   4b94c:	ldr	lr, [sp, #24]
   4b950:	mov	r8, sl
   4b954:	sub	r5, fp, #304	; 0x130
   4b958:	mov	r6, #32
   4b95c:	sub	ip, fp, #300	; 0x12c
   4b960:	ldr	r0, [r2]
   4b964:	subs	lr, lr, #2
   4b968:	add	r3, r3, #4
   4b96c:	str	r0, [fp, #-304]	; 0xfffffed0
   4b970:	add	r0, r8, #16
   4b974:	vld1.32	{d16[0]}, [r5 :32]
   4b978:	vmovl.u16	q8, d16
   4b97c:	vmovl.u32	q8, d16
   4b980:	vst1.64	{d16-d17}, [r8], r6
   4b984:	ldr	r7, [r2, #4]
   4b988:	add	r2, r2, #8
   4b98c:	str	r7, [fp, #-300]	; 0xfffffed4
   4b990:	vld1.32	{d16[0]}, [ip :32]
   4b994:	vmovl.u16	q8, d16
   4b998:	vmovl.u32	q8, d16
   4b99c:	vst1.64	{d16-d17}, [r0]
   4b9a0:	bne	4b960 <GetDataSlab+0x17804>
   4b9a4:	ldr	r0, [sp, #40]	; 0x28
   4b9a8:	ldr	lr, [sp, #92]	; 0x5c
   4b9ac:	ldr	r8, [sp, #56]	; 0x38
   4b9b0:	mov	r4, #0
   4b9b4:	cmp	r0, #0
   4b9b8:	ldr	r0, [sp, #88]	; 0x58
   4b9bc:	beq	4b9ec <GetDataSlab+0x17890>
   4b9c0:	ldr	r2, [sp, #68]	; 0x44
   4b9c4:	add	r0, r0, r2, lsl #3
   4b9c8:	ldr	r2, [sp, #48]	; 0x30
   4b9cc:	add	r0, r0, r3, lsl #3
   4b9d0:	ldr	r2, [r2, r3, lsl #1]
   4b9d4:	str	r2, [fp, #-308]	; 0xfffffecc
   4b9d8:	sub	r2, fp, #308	; 0x134
   4b9dc:	vld1.32	{d16[0]}, [r2 :32]
   4b9e0:	vmovl.u16	q8, d16
   4b9e4:	vmovl.u32	q8, d16
   4b9e8:	vst1.64	{d16-d17}, [r0]
   4b9ec:	ldr	r0, [sp, #72]	; 0x48
   4b9f0:	ldr	r2, [sp, #36]	; 0x24
   4b9f4:	ldr	ip, [sp, #44]	; 0x2c
   4b9f8:	cmp	r0, r2
   4b9fc:	mov	r0, r2
   4ba00:	beq	4ba38 <GetDataSlab+0x178dc>
   4ba04:	ldr	r5, [sp, #60]	; 0x3c
   4ba08:	ldr	r3, [sp, #72]	; 0x48
   4ba0c:	sub	r2, r4, r0, lsl #3
   4ba10:	add	r7, ip, r5, lsl #1
   4ba14:	sub	r3, r3, r0
   4ba18:	add	r0, r7, r0, lsl #1
   4ba1c:	ldrh	r7, [r0], #2
   4ba20:	mov	r6, sl
   4ba24:	subs	r3, r3, #1
   4ba28:	str	r7, [r6, -r2]!
   4ba2c:	sub	r2, r2, #8
   4ba30:	str	r4, [r6, #4]
   4ba34:	bne	4ba1c <GetDataSlab+0x178c0>
   4ba38:	ldr	r0, [fp, #24]
   4ba3c:	add	ip, ip, r8, lsl #1
   4ba40:	add	r1, r1, r8
   4ba44:	cmp	r0, #2
   4ba48:	blt	4b8f0 <GetDataSlab+0x17794>
   4ba4c:	ldr	r3, [sp, #52]	; 0x34
   4ba50:	mov	r2, #0
   4ba54:	b	4ba80 <GetDataSlab+0x17924>
   4ba58:	sub	r5, fp, #176	; 0xb0
   4ba5c:	sub	r0, r0, r7
   4ba60:	ldr	r6, [r5, r2]
   4ba64:	ldr	r5, [lr, r2]
   4ba68:	mla	r0, r5, r6, r0
   4ba6c:	add	r1, r0, r1
   4ba70:	add	ip, ip, r0, lsl #1
   4ba74:	subs	r3, r3, #1
   4ba78:	add	r2, r2, #4
   4ba7c:	beq	4b8f0 <GetDataSlab+0x17794>
   4ba80:	ldr	r0, [r9, r2]
   4ba84:	ldr	r5, [sp, #84]	; 0x54
   4ba88:	add	r0, r0, #1
   4ba8c:	str	r0, [r9, r2]
   4ba90:	ldr	r7, [r5, r2]
   4ba94:	sdiv	r6, r0, r7
   4ba98:	mls	r0, r6, r7, r0
   4ba9c:	cmp	r0, #0
   4baa0:	bne	4b8e0 <GetDataSlab+0x17784>
   4baa4:	ldr	r0, [sp, #80]	; 0x50
   4baa8:	str	r4, [r9, r2]
   4baac:	ldr	r0, [r0, r2]
   4bab0:	sdiv	r7, r1, r0
   4bab4:	mls	r7, r7, r0, r1
   4bab8:	cmp	r7, #0
   4babc:	bne	4ba58 <GetDataSlab+0x178fc>
   4bac0:	ldr	r0, [lr, r2]
   4bac4:	cmp	r0, #0
   4bac8:	beq	4ba74 <GetDataSlab+0x17918>
   4bacc:	sub	r5, fp, #176	; 0xb0
   4bad0:	ldr	r7, [r5, r2]
   4bad4:	mla	r1, r7, r0, r1
   4bad8:	mul	r0, r7, r0
   4badc:	b	4ba70 <GetDataSlab+0x17914>
   4bae0:	ldr	r0, [sp, #80]	; 0x50
   4bae4:	ldr	r4, [sp, #56]	; 0x38
   4bae8:	mov	r2, lr
   4baec:	add	r8, r0, r3, lsl #2
   4baf0:	cmp	r4, #1
   4baf4:	bne	59398 <GetDataSlab+0x2523c>
   4baf8:	ldr	r0, [sp, #76]	; 0x4c
   4bafc:	ldr	r7, [fp, #20]
   4bb00:	ldr	r9, [sp, #52]	; 0x34
   4bb04:	cmp	r0, #1
   4bb08:	ldr	r0, [sp, #72]	; 0x48
   4bb0c:	blt	5b69c <GetDataSlab+0x27540>
   4bb10:	sub	r0, r0, #2
   4bb14:	mov	r1, #1
   4bb18:	ldr	lr, [sp, #88]	; 0x58
   4bb1c:	add	sl, r7, #4
   4bb20:	sub	r7, fp, #360	; 0x168
   4bb24:	add	r1, r1, r0, lsr #1
   4bb28:	lsr	r0, r0, #1
   4bb2c:	str	sl, [sp, #32]
   4bb30:	str	r0, [sp, #36]	; 0x24
   4bb34:	mov	r0, #0
   4bb38:	and	r6, r1, #1
   4bb3c:	str	r0, [sp, #68]	; 0x44
   4bb40:	sub	r1, r1, r6
   4bb44:	str	r6, [sp, #44]	; 0x2c
   4bb48:	str	r1, [sp, #24]
   4bb4c:	sub	r1, fp, #136	; 0x88
   4bb50:	orr	r4, r1, #4
   4bb54:	orr	r1, r2, #4
   4bb58:	str	r1, [sp, #84]	; 0x54
   4bb5c:	ldr	r1, [fp, #12]
   4bb60:	add	r1, r1, #4
   4bb64:	str	r1, [sp, #80]	; 0x50
   4bb68:	ldr	r1, [fp, #24]
   4bb6c:	sub	r1, r1, #1
   4bb70:	str	r1, [sp, #56]	; 0x38
   4bb74:	sub	r1, fp, #96	; 0x60
   4bb78:	orr	r1, r1, #4
   4bb7c:	str	r1, [sp, #28]
   4bb80:	ldr	r1, [sp, #72]	; 0x48
   4bb84:	lsl	r2, r1, #3
   4bb88:	str	r2, [sp, #64]	; 0x40
   4bb8c:	bic	r2, r1, #1
   4bb90:	str	r2, [sp, #40]	; 0x28
   4bb94:	cmp	r1, #1
   4bb98:	sub	ip, fp, #176	; 0xb0
   4bb9c:	bge	4bbe8 <GetDataSlab+0x17a8c>
   4bba0:	b	4bd04 <GetDataSlab+0x17ba8>
   4bba4:	ldr	r0, [sp, #28]
   4bba8:	ldr	r0, [r0, r2]
   4bbac:	add	r8, r8, r0, lsl #2
   4bbb0:	add	r3, r0, r3
   4bbb4:	ldr	r0, [sp, #64]	; 0x40
   4bbb8:	ldr	r1, [sp, #72]	; 0x48
   4bbbc:	ldr	r6, [sp, #68]	; 0x44
   4bbc0:	mov	r2, #0
   4bbc4:	add	lr, lr, r0
   4bbc8:	ldr	r0, [sp, #76]	; 0x4c
   4bbcc:	add	r6, r6, r1
   4bbd0:	str	r6, [sp, #68]	; 0x44
   4bbd4:	cmp	r6, r0
   4bbd8:	bge	5b6a0 <GetDataSlab+0x27544>
   4bbdc:	cmp	r1, #1
   4bbe0:	sub	ip, fp, #176	; 0xb0
   4bbe4:	blt	4bd04 <GetDataSlab+0x17ba8>
   4bbe8:	ldr	r0, [fp, #12]
   4bbec:	mov	r5, #0
   4bbf0:	ldr	r6, [r0]
   4bbf4:	beq	4bccc <GetDataSlab+0x17b70>
   4bbf8:	ldr	r0, [sp, #36]	; 0x24
   4bbfc:	add	ip, r8, r6, lsl #2
   4bc00:	mov	r1, #0
   4bc04:	str	r6, [sp, #60]	; 0x3c
   4bc08:	str	ip, [sp, #48]	; 0x30
   4bc0c:	cmp	r0, #0
   4bc10:	beq	4bc6c <GetDataSlab+0x17b10>
   4bc14:	ldr	r2, [sp, #24]
   4bc18:	mov	r9, lr
   4bc1c:	sub	r6, fp, #352	; 0x160
   4bc20:	ldm	ip, {r0, r5}
   4bc24:	str	r5, [fp, #-356]	; 0xfffffe9c
   4bc28:	mov	r5, #32
   4bc2c:	subs	r2, r2, #2
   4bc30:	add	r1, r1, #4
   4bc34:	str	r0, [fp, #-360]	; 0xfffffe98
   4bc38:	add	r0, r9, #16
   4bc3c:	vld1.32	{d16}, [r7 :64]
   4bc40:	vmovl.s32	q8, d16
   4bc44:	vst1.64	{d16-d17}, [r9], r5
   4bc48:	ldr	r5, [ip, #8]
   4bc4c:	ldr	sl, [ip, #12]
   4bc50:	add	ip, ip, #16
   4bc54:	str	sl, [fp, #-348]	; 0xfffffea4
   4bc58:	str	r5, [fp, #-352]	; 0xfffffea0
   4bc5c:	vld1.32	{d16}, [r6 :64]
   4bc60:	vmovl.s32	q8, d16
   4bc64:	vst1.64	{d16-d17}, [r0]
   4bc68:	bne	4bc20 <GetDataSlab+0x17ac4>
   4bc6c:	ldr	r0, [sp, #44]	; 0x2c
   4bc70:	sub	ip, fp, #176	; 0xb0
   4bc74:	cmp	r0, #0
   4bc78:	beq	4bcb0 <GetDataSlab+0x17b54>
   4bc7c:	ldr	r0, [sp, #88]	; 0x58
   4bc80:	ldr	r2, [sp, #68]	; 0x44
   4bc84:	ldr	r5, [sp, #48]	; 0x30
   4bc88:	add	r0, r0, r2, lsl #3
   4bc8c:	ldr	r2, [r5, r1, lsl #2]!
   4bc90:	add	r0, r0, r1, lsl #3
   4bc94:	str	r2, [fp, #-368]	; 0xfffffe90
   4bc98:	ldr	r2, [r5, #4]
   4bc9c:	str	r2, [fp, #-364]	; 0xfffffe94
   4bca0:	sub	r2, fp, #368	; 0x170
   4bca4:	vld1.32	{d16}, [r2 :64]
   4bca8:	vmovl.s32	q8, d16
   4bcac:	vst1.64	{d16-d17}, [r0]
   4bcb0:	ldr	r0, [sp, #72]	; 0x48
   4bcb4:	ldr	r5, [sp, #40]	; 0x28
   4bcb8:	ldr	r9, [sp, #52]	; 0x34
   4bcbc:	ldr	sl, [sp, #32]
   4bcc0:	ldr	r6, [sp, #60]	; 0x3c
   4bcc4:	cmp	r0, r5
   4bcc8:	beq	4bd04 <GetDataSlab+0x17ba8>
   4bccc:	mov	r0, #0
   4bcd0:	sub	r1, r0, r5, lsl #3
   4bcd4:	ldr	r0, [sp, #72]	; 0x48
   4bcd8:	sub	r2, r0, r5
   4bcdc:	add	r0, r5, r6
   4bce0:	add	r5, r8, r0, lsl #2
   4bce4:	ldr	r0, [r5], #4
   4bce8:	mov	r6, lr
   4bcec:	subs	r2, r2, #1
   4bcf0:	str	r0, [r6, -r1]!
   4bcf4:	asr	r0, r0, #31
   4bcf8:	sub	r1, r1, #8
   4bcfc:	str	r0, [r6, #4]
   4bd00:	bne	4bce4 <GetDataSlab+0x17b88>
   4bd04:	ldr	r0, [fp, #24]
   4bd08:	add	r8, r8, r9, lsl #2
   4bd0c:	add	r3, r3, r9
   4bd10:	cmp	r0, #2
   4bd14:	blt	4bbb4 <GetDataSlab+0x17a58>
   4bd18:	ldr	r1, [sp, #56]	; 0x38
   4bd1c:	mov	r2, #0
   4bd20:	b	4bd50 <GetDataSlab+0x17bf4>
   4bd24:	ldr	r7, [sp, #80]	; 0x50
   4bd28:	ldr	r6, [ip, r2]
   4bd2c:	sub	r0, r5, r0
   4bd30:	ldr	r7, [r7, r2]
   4bd34:	mla	r0, r7, r6, r0
   4bd38:	sub	r7, fp, #360	; 0x168
   4bd3c:	add	r3, r0, r3
   4bd40:	add	r8, r8, r0, lsl #2
   4bd44:	subs	r1, r1, #1
   4bd48:	add	r2, r2, #4
   4bd4c:	beq	4bbb4 <GetDataSlab+0x17a58>
   4bd50:	ldr	r0, [r4, r2]
   4bd54:	add	r0, r0, #1
   4bd58:	str	r0, [r4, r2]
   4bd5c:	ldr	r6, [sl, r2]
   4bd60:	sdiv	r5, r0, r6
   4bd64:	mls	r0, r5, r6, r0
   4bd68:	cmp	r0, #0
   4bd6c:	bne	4bba4 <GetDataSlab+0x17a48>
   4bd70:	mov	r0, #0
   4bd74:	str	r0, [r4, r2]
   4bd78:	ldr	r0, [sp, #84]	; 0x54
   4bd7c:	ldr	r5, [r0, r2]
   4bd80:	sdiv	r0, r3, r5
   4bd84:	mls	r0, r0, r5, r3
   4bd88:	cmp	r0, #0
   4bd8c:	bne	4bd24 <GetDataSlab+0x17bc8>
   4bd90:	ldr	r0, [sp, #80]	; 0x50
   4bd94:	ldr	r0, [r0, r2]
   4bd98:	cmp	r0, #0
   4bd9c:	beq	4bd44 <GetDataSlab+0x17be8>
   4bda0:	ldr	r7, [ip, r2]
   4bda4:	mla	r3, r7, r0, r3
   4bda8:	mul	r0, r7, r0
   4bdac:	sub	r7, fp, #360	; 0x168
   4bdb0:	b	4bd40 <GetDataSlab+0x17be4>
   4bdb4:	ldr	r0, [sp, #80]	; 0x50
   4bdb8:	mov	r7, r2
   4bdbc:	add	sl, r0, r3, lsl #2
   4bdc0:	ldr	r0, [sp, #48]	; 0x30
   4bdc4:	cmp	r0, #1
   4bdc8:	bne	595c8 <GetDataSlab+0x2546c>
   4bdcc:	ldr	r0, [sp, #72]	; 0x48
   4bdd0:	ldr	r2, [fp, #12]
   4bdd4:	sub	r6, fp, #96	; 0x60
   4bdd8:	cmp	r0, #1
   4bddc:	blt	5b69c <GetDataSlab+0x27540>
   4bde0:	ldr	r5, [sp, #68]	; 0x44
   4bde4:	mov	r1, #1
   4bde8:	ldr	lr, [sp, #88]	; 0x58
   4bdec:	ldr	r8, [sp, #52]	; 0x34
   4bdf0:	sub	r0, r5, #2
   4bdf4:	add	r1, r1, r0, lsr #1
   4bdf8:	lsr	r0, r0, #1
   4bdfc:	str	r0, [sp, #36]	; 0x24
   4be00:	mov	r0, #0
   4be04:	and	r4, r1, #1
   4be08:	str	r0, [sp, #76]	; 0x4c
   4be0c:	sub	r1, r1, r4
   4be10:	str	r4, [sp, #44]	; 0x2c
   4be14:	str	r1, [sp, #24]
   4be18:	sub	r1, fp, #136	; 0x88
   4be1c:	orr	r4, r1, #4
   4be20:	ldr	r1, [fp, #20]
   4be24:	add	r9, r1, #4
   4be28:	orr	r1, r7, #4
   4be2c:	mov	r7, #0
   4be30:	str	r1, [sp, #84]	; 0x54
   4be34:	add	r1, r2, #4
   4be38:	orr	r2, r6, #4
   4be3c:	str	r9, [sp, #32]
   4be40:	str	r1, [sp, #80]	; 0x50
   4be44:	ldr	r1, [fp, #24]
   4be48:	str	r2, [sp, #28]
   4be4c:	lsl	r2, r5, #3
   4be50:	str	r2, [sp, #64]	; 0x40
   4be54:	bic	r2, r5, #1
   4be58:	str	r2, [sp, #40]	; 0x28
   4be5c:	sub	r1, r1, #1
   4be60:	str	r1, [sp, #56]	; 0x38
   4be64:	mov	r1, r5
   4be68:	ldr	r0, [fp, #12]
   4be6c:	cmp	r1, #1
   4be70:	sub	ip, fp, #176	; 0xb0
   4be74:	bge	4bec4 <GetDataSlab+0x17d68>
   4be78:	b	4bfd8 <GetDataSlab+0x17e7c>
   4be7c:	ldr	r0, [sp, #28]
   4be80:	ldr	r0, [r0, r2]
   4be84:	add	sl, sl, r0, lsl #2
   4be88:	add	r3, r0, r3
   4be8c:	ldr	r0, [sp, #64]	; 0x40
   4be90:	ldr	r1, [sp, #68]	; 0x44
   4be94:	ldr	r6, [sp, #76]	; 0x4c
   4be98:	mov	r2, #0
   4be9c:	add	lr, lr, r0
   4bea0:	ldr	r0, [sp, #72]	; 0x48
   4bea4:	add	r6, r6, r1
   4bea8:	str	r6, [sp, #76]	; 0x4c
   4beac:	cmp	r6, r0
   4beb0:	bge	5b6a0 <GetDataSlab+0x27544>
   4beb4:	ldr	r0, [fp, #12]
   4beb8:	cmp	r1, #1
   4bebc:	sub	ip, fp, #176	; 0xb0
   4bec0:	blt	4bfd8 <GetDataSlab+0x17e7c>
   4bec4:	ldr	r6, [r0]
   4bec8:	mov	r5, #0
   4becc:	beq	4bfa8 <GetDataSlab+0x17e4c>
   4bed0:	ldr	r0, [sp, #36]	; 0x24
   4bed4:	add	ip, sl, r6, lsl #2
   4bed8:	mov	r1, #0
   4bedc:	str	r6, [sp, #60]	; 0x3c
   4bee0:	str	ip, [sp, #48]	; 0x30
   4bee4:	cmp	r0, #0
   4bee8:	beq	4bf48 <GetDataSlab+0x17dec>
   4beec:	ldr	r2, [sp, #24]
   4bef0:	mov	r9, lr
   4bef4:	sub	r6, fp, #328	; 0x148
   4bef8:	ldm	ip, {r0, r5}
   4befc:	str	r5, [fp, #-332]	; 0xfffffeb4
   4bf00:	mov	r5, #32
   4bf04:	subs	r2, r2, #2
   4bf08:	add	r1, r1, #4
   4bf0c:	str	r0, [fp, #-336]	; 0xfffffeb0
   4bf10:	sub	r0, fp, #336	; 0x150
   4bf14:	vld1.32	{d16}, [r0 :64]
   4bf18:	add	r0, r9, #16
   4bf1c:	vmovl.u32	q8, d16
   4bf20:	vst1.64	{d16-d17}, [r9], r5
   4bf24:	ldr	r5, [ip, #8]
   4bf28:	ldr	r8, [ip, #12]
   4bf2c:	add	ip, ip, #16
   4bf30:	str	r8, [fp, #-324]	; 0xfffffebc
   4bf34:	str	r5, [fp, #-328]	; 0xfffffeb8
   4bf38:	vld1.32	{d16}, [r6 :64]
   4bf3c:	vmovl.u32	q8, d16
   4bf40:	vst1.64	{d16-d17}, [r0]
   4bf44:	bne	4bef8 <GetDataSlab+0x17d9c>
   4bf48:	ldr	r0, [sp, #44]	; 0x2c
   4bf4c:	ldr	r8, [sp, #52]	; 0x34
   4bf50:	ldr	r9, [sp, #32]
   4bf54:	sub	ip, fp, #176	; 0xb0
   4bf58:	cmp	r0, #0
   4bf5c:	ldr	r0, [sp, #88]	; 0x58
   4bf60:	beq	4bf94 <GetDataSlab+0x17e38>
   4bf64:	ldr	r2, [sp, #76]	; 0x4c
   4bf68:	ldr	r5, [sp, #48]	; 0x30
   4bf6c:	add	r0, r0, r2, lsl #3
   4bf70:	ldr	r2, [r5, r1, lsl #2]!
   4bf74:	add	r0, r0, r1, lsl #3
   4bf78:	str	r2, [fp, #-344]	; 0xfffffea8
   4bf7c:	ldr	r2, [r5, #4]
   4bf80:	str	r2, [fp, #-340]	; 0xfffffeac
   4bf84:	sub	r2, fp, #344	; 0x158
   4bf88:	vld1.32	{d16}, [r2 :64]
   4bf8c:	vmovl.u32	q8, d16
   4bf90:	vst1.64	{d16-d17}, [r0]
   4bf94:	ldr	r0, [sp, #68]	; 0x44
   4bf98:	ldr	r5, [sp, #40]	; 0x28
   4bf9c:	ldr	r6, [sp, #60]	; 0x3c
   4bfa0:	cmp	r0, r5
   4bfa4:	beq	4bfd8 <GetDataSlab+0x17e7c>
   4bfa8:	ldr	r0, [sp, #68]	; 0x44
   4bfac:	sub	r1, r7, r5, lsl #3
   4bfb0:	sub	r2, r0, r5
   4bfb4:	add	r0, r5, r6
   4bfb8:	add	r5, sl, r0, lsl #2
   4bfbc:	ldr	r0, [r5], #4
   4bfc0:	mov	r6, lr
   4bfc4:	subs	r2, r2, #1
   4bfc8:	str	r0, [r6, -r1]!
   4bfcc:	sub	r1, r1, #8
   4bfd0:	str	r7, [r6, #4]
   4bfd4:	bne	4bfbc <GetDataSlab+0x17e60>
   4bfd8:	ldr	r0, [fp, #24]
   4bfdc:	add	sl, sl, r8, lsl #2
   4bfe0:	add	r3, r3, r8
   4bfe4:	cmp	r0, #2
   4bfe8:	blt	4be8c <GetDataSlab+0x17d30>
   4bfec:	ldr	r1, [sp, #56]	; 0x38
   4bff0:	mov	r2, #0
   4bff4:	b	4c024 <GetDataSlab+0x17ec8>
   4bff8:	ldr	r7, [sp, #80]	; 0x50
   4bffc:	ldr	r6, [ip, r2]
   4c000:	sub	r0, r5, r0
   4c004:	ldr	r7, [r7, r2]
   4c008:	mla	r0, r7, r6, r0
   4c00c:	mov	r7, #0
   4c010:	add	r3, r0, r3
   4c014:	add	sl, sl, r0, lsl #2
   4c018:	subs	r1, r1, #1
   4c01c:	add	r2, r2, #4
   4c020:	beq	4be8c <GetDataSlab+0x17d30>
   4c024:	ldr	r0, [r4, r2]
   4c028:	add	r0, r0, #1
   4c02c:	str	r0, [r4, r2]
   4c030:	ldr	r6, [r9, r2]
   4c034:	sdiv	r5, r0, r6
   4c038:	mls	r0, r5, r6, r0
   4c03c:	cmp	r0, #0
   4c040:	bne	4be7c <GetDataSlab+0x17d20>
   4c044:	ldr	r0, [sp, #84]	; 0x54
   4c048:	str	r7, [r4, r2]
   4c04c:	ldr	r5, [r0, r2]
   4c050:	sdiv	r0, r3, r5
   4c054:	mls	r0, r0, r5, r3
   4c058:	cmp	r0, #0
   4c05c:	bne	4bff8 <GetDataSlab+0x17e9c>
   4c060:	ldr	r0, [sp, #80]	; 0x50
   4c064:	ldr	r0, [r0, r2]
   4c068:	cmp	r0, #0
   4c06c:	beq	4c018 <GetDataSlab+0x17ebc>
   4c070:	ldr	r7, [ip, r2]
   4c074:	mla	r3, r7, r0, r3
   4c078:	mul	r0, r7, r0
   4c07c:	mov	r7, #0
   4c080:	b	4c014 <GetDataSlab+0x17eb8>
   4c084:	ldr	r0, [sp, #80]	; 0x50
   4c088:	add	r5, r0, r8, lsl #2
   4c08c:	ldr	r0, [sp, #36]	; 0x24
   4c090:	cmp	r0, #1
   4c094:	bne	597ec <GetDataSlab+0x25690>
   4c098:	ldr	r0, [sp, #76]	; 0x4c
   4c09c:	ldr	lr, [sp, #68]	; 0x44
   4c0a0:	sub	r3, fp, #96	; 0x60
   4c0a4:	cmp	r0, #1
   4c0a8:	ldr	r0, [fp, #12]
   4c0ac:	blt	5b69c <GetDataSlab+0x27540>
   4c0b0:	sub	r1, fp, #136	; 0x88
   4c0b4:	orr	r9, r1, #4
   4c0b8:	ldr	r1, [fp, #20]
   4c0bc:	add	r1, r1, #4
   4c0c0:	str	r1, [sp, #48]	; 0x30
   4c0c4:	orr	r1, r2, #4
   4c0c8:	str	r1, [sp, #52]	; 0x34
   4c0cc:	ldr	r1, [fp, #24]
   4c0d0:	sub	r1, r1, #1
   4c0d4:	str	r1, [sp, #44]	; 0x2c
   4c0d8:	orr	r1, r3, #4
   4c0dc:	str	r1, [sp, #32]
   4c0e0:	and	r1, lr, #1
   4c0e4:	str	r1, [sp, #56]	; 0x38
   4c0e8:	sub	r1, lr, r1
   4c0ec:	str	r1, [sp, #64]	; 0x40
   4c0f0:	lsl	r1, lr, #3
   4c0f4:	str	r1, [sp, #60]	; 0x3c
   4c0f8:	ldr	r1, [r0], #4
   4c0fc:	str	r0, [sp, #92]	; 0x5c
   4c100:	add	r0, r1, #1
   4c104:	str	r1, [sp, #40]	; 0x28
   4c108:	str	r0, [sp, #36]	; 0x24
   4c10c:	ldr	r0, [sp, #88]	; 0x58
   4c110:	str	r0, [sp, #84]	; 0x54
   4c114:	mov	r0, #0
   4c118:	str	r0, [sp, #80]	; 0x50
   4c11c:	ldr	r7, [sp, #64]	; 0x40
   4c120:	cmp	lr, #1
   4c124:	bge	4c174 <GetDataSlab+0x18018>
   4c128:	b	4c1f8 <GetDataSlab+0x1809c>
   4c12c:	ldr	r1, [sp, #32]
   4c130:	ldr	r0, [r1, r0]
   4c134:	add	r5, r5, r0, lsl #2
   4c138:	add	r8, r0, r8
   4c13c:	ldr	r0, [sp, #60]	; 0x3c
   4c140:	ldr	r1, [sp, #84]	; 0x54
   4c144:	mov	r2, #0
   4c148:	add	r1, r1, r0
   4c14c:	ldr	r0, [sp, #76]	; 0x4c
   4c150:	str	r1, [sp, #84]	; 0x54
   4c154:	ldr	r1, [sp, #80]	; 0x50
   4c158:	add	r1, r1, lr
   4c15c:	cmp	r1, r0
   4c160:	str	r1, [sp, #80]	; 0x50
   4c164:	bge	5b6a0 <GetDataSlab+0x27544>
   4c168:	ldr	r7, [sp, #64]	; 0x40
   4c16c:	cmp	lr, #1
   4c170:	blt	4c1f8 <GetDataSlab+0x1809c>
   4c174:	mov	r4, r8
   4c178:	mov	sl, #0
   4c17c:	beq	4c1bc <GetDataSlab+0x18060>
   4c180:	ldr	r0, [sp, #36]	; 0x24
   4c184:	ldr	r6, [sp, #84]	; 0x54
   4c188:	mov	sl, #0
   4c18c:	add	r8, r5, r0, lsl #2
   4c190:	ldr	r0, [r8, #-4]
   4c194:	bl	71848 <__aeabi_f2ulz>
   4c198:	strd	r0, [r6]
   4c19c:	ldr	r0, [r8]
   4c1a0:	bl	71848 <__aeabi_f2ulz>
   4c1a4:	add	sl, sl, #2
   4c1a8:	strd	r0, [r6, #8]
   4c1ac:	add	r6, r6, #16
   4c1b0:	add	r8, r8, #8
   4c1b4:	cmp	r7, sl
   4c1b8:	bne	4c190 <GetDataSlab+0x18034>
   4c1bc:	ldr	r0, [sp, #56]	; 0x38
   4c1c0:	ldr	lr, [sp, #68]	; 0x44
   4c1c4:	mov	r8, r4
   4c1c8:	cmp	r0, #0
   4c1cc:	beq	4c1f8 <GetDataSlab+0x1809c>
   4c1d0:	ldr	r0, [sp, #40]	; 0x28
   4c1d4:	ldr	r1, [sp, #88]	; 0x58
   4c1d8:	ldr	r2, [sp, #80]	; 0x50
   4c1dc:	add	r0, r5, r0, lsl #2
   4c1e0:	add	r6, r1, r2, lsl #3
   4c1e4:	ldr	r0, [r0, sl, lsl #2]
   4c1e8:	bl	71848 <__aeabi_f2ulz>
   4c1ec:	ldr	lr, [sp, #68]	; 0x44
   4c1f0:	str	r0, [r6, sl, lsl #3]!
   4c1f4:	str	r1, [r6, #4]
   4c1f8:	ldr	r0, [sp, #72]	; 0x48
   4c1fc:	add	r5, r5, r0, lsl #2
   4c200:	add	r8, r8, r0
   4c204:	ldr	r0, [fp, #24]
   4c208:	cmp	r0, #2
   4c20c:	blt	4c13c <GetDataSlab+0x17fe0>
   4c210:	add	sl, sp, #44	; 0x2c
   4c214:	ldr	ip, [sp, #92]	; 0x5c
   4c218:	mov	r0, #0
   4c21c:	ldm	sl, {r1, r7, sl}
   4c220:	b	4c24c <GetDataSlab+0x180f0>
   4c224:	sub	r6, fp, #176	; 0xb0
   4c228:	ldr	r4, [ip, r0]
   4c22c:	sub	r2, r2, r3
   4c230:	ldr	r6, [r6, r0]
   4c234:	mla	r2, r4, r6, r2
   4c238:	add	r8, r2, r8
   4c23c:	add	r5, r5, r2, lsl #2
   4c240:	subs	r1, r1, #1
   4c244:	add	r0, r0, #4
   4c248:	beq	4c13c <GetDataSlab+0x17fe0>
   4c24c:	ldr	r2, [r9, r0]
   4c250:	add	r2, r2, #1
   4c254:	str	r2, [r9, r0]
   4c258:	ldr	r3, [r7, r0]
   4c25c:	sdiv	r6, r2, r3
   4c260:	mls	r2, r6, r3, r2
   4c264:	cmp	r2, #0
   4c268:	bne	4c12c <GetDataSlab+0x17fd0>
   4c26c:	mov	r2, #0
   4c270:	str	r2, [r9, r0]
   4c274:	ldr	r2, [sl, r0]
   4c278:	sdiv	r3, r8, r2
   4c27c:	mls	r3, r3, r2, r8
   4c280:	cmp	r3, #0
   4c284:	bne	4c224 <GetDataSlab+0x180c8>
   4c288:	ldr	r2, [ip, r0]
   4c28c:	cmp	r2, #0
   4c290:	beq	4c240 <GetDataSlab+0x180e4>
   4c294:	sub	r3, fp, #176	; 0xb0
   4c298:	ldr	r3, [r3, r0]
   4c29c:	mla	r8, r3, r2, r8
   4c2a0:	mul	r2, r3, r2
   4c2a4:	b	4c23c <GetDataSlab+0x180e0>
   4c2a8:	ldr	r0, [sp, #80]	; 0x50
   4c2ac:	add	r5, r0, r8, lsl #3
   4c2b0:	ldr	r0, [sp, #36]	; 0x24
   4c2b4:	cmp	r0, #1
   4c2b8:	bne	59a48 <GetDataSlab+0x258ec>
   4c2bc:	ldr	r0, [sp, #76]	; 0x4c
   4c2c0:	ldr	lr, [sp, #68]	; 0x44
   4c2c4:	sub	r3, fp, #96	; 0x60
   4c2c8:	cmp	r0, #1
   4c2cc:	ldr	r0, [fp, #12]
   4c2d0:	blt	5b69c <GetDataSlab+0x27540>
   4c2d4:	sub	r1, fp, #136	; 0x88
   4c2d8:	orr	r9, r1, #4
   4c2dc:	ldr	r1, [fp, #20]
   4c2e0:	add	r1, r1, #4
   4c2e4:	str	r1, [sp, #48]	; 0x30
   4c2e8:	orr	r1, r2, #4
   4c2ec:	str	r1, [sp, #52]	; 0x34
   4c2f0:	ldr	r1, [fp, #24]
   4c2f4:	sub	r1, r1, #1
   4c2f8:	str	r1, [sp, #44]	; 0x2c
   4c2fc:	orr	r1, r3, #4
   4c300:	str	r1, [sp, #32]
   4c304:	and	r1, lr, #1
   4c308:	str	r1, [sp, #56]	; 0x38
   4c30c:	sub	r1, lr, r1
   4c310:	str	r1, [sp, #64]	; 0x40
   4c314:	lsl	r1, lr, #3
   4c318:	str	r1, [sp, #60]	; 0x3c
   4c31c:	ldr	r1, [r0], #4
   4c320:	str	r0, [sp, #92]	; 0x5c
   4c324:	add	r0, r1, #1
   4c328:	str	r1, [sp, #40]	; 0x28
   4c32c:	str	r0, [sp, #36]	; 0x24
   4c330:	ldr	r0, [sp, #88]	; 0x58
   4c334:	str	r0, [sp, #84]	; 0x54
   4c338:	mov	r0, #0
   4c33c:	str	r0, [sp, #80]	; 0x50
   4c340:	ldr	r7, [sp, #64]	; 0x40
   4c344:	cmp	lr, #1
   4c348:	bge	4c398 <GetDataSlab+0x1823c>
   4c34c:	b	4c42c <GetDataSlab+0x182d0>
   4c350:	ldr	r1, [sp, #32]
   4c354:	ldr	r0, [r1, r0]
   4c358:	add	r5, r5, r0, lsl #3
   4c35c:	add	r8, r0, r8
   4c360:	ldr	r0, [sp, #60]	; 0x3c
   4c364:	ldr	r1, [sp, #84]	; 0x54
   4c368:	mov	r2, #0
   4c36c:	add	r1, r1, r0
   4c370:	ldr	r0, [sp, #76]	; 0x4c
   4c374:	str	r1, [sp, #84]	; 0x54
   4c378:	ldr	r1, [sp, #80]	; 0x50
   4c37c:	add	r1, r1, lr
   4c380:	cmp	r1, r0
   4c384:	str	r1, [sp, #80]	; 0x50
   4c388:	bge	5b6a0 <GetDataSlab+0x27544>
   4c38c:	ldr	r7, [sp, #64]	; 0x40
   4c390:	cmp	lr, #1
   4c394:	blt	4c42c <GetDataSlab+0x182d0>
   4c398:	mov	r4, r8
   4c39c:	mov	sl, #0
   4c3a0:	beq	4c3e8 <GetDataSlab+0x1828c>
   4c3a4:	ldr	r0, [sp, #36]	; 0x24
   4c3a8:	ldr	r6, [sp, #84]	; 0x54
   4c3ac:	mov	sl, #0
   4c3b0:	add	r8, r5, r0, lsl #3
   4c3b4:	vldr	d16, [r8, #-8]
   4c3b8:	vmov	r0, r1, d16
   4c3bc:	bl	71888 <__aeabi_d2ulz>
   4c3c0:	strd	r0, [r6]
   4c3c4:	vldr	d16, [r8]
   4c3c8:	vmov	r0, r1, d16
   4c3cc:	bl	71888 <__aeabi_d2ulz>
   4c3d0:	add	sl, sl, #2
   4c3d4:	strd	r0, [r6, #8]
   4c3d8:	add	r6, r6, #16
   4c3dc:	add	r8, r8, #16
   4c3e0:	cmp	r7, sl
   4c3e4:	bne	4c3b4 <GetDataSlab+0x18258>
   4c3e8:	ldr	r0, [sp, #56]	; 0x38
   4c3ec:	ldr	lr, [sp, #68]	; 0x44
   4c3f0:	mov	r8, r4
   4c3f4:	cmp	r0, #0
   4c3f8:	beq	4c42c <GetDataSlab+0x182d0>
   4c3fc:	ldr	r0, [sp, #40]	; 0x28
   4c400:	ldr	r1, [sp, #88]	; 0x58
   4c404:	ldr	r2, [sp, #80]	; 0x50
   4c408:	add	r0, r5, r0, lsl #3
   4c40c:	add	r6, r1, r2, lsl #3
   4c410:	add	r0, r0, sl, lsl #3
   4c414:	vldr	d16, [r0]
   4c418:	vmov	r0, r1, d16
   4c41c:	bl	71888 <__aeabi_d2ulz>
   4c420:	ldr	lr, [sp, #68]	; 0x44
   4c424:	str	r0, [r6, sl, lsl #3]!
   4c428:	str	r1, [r6, #4]
   4c42c:	ldr	r0, [sp, #72]	; 0x48
   4c430:	add	r5, r5, r0, lsl #3
   4c434:	add	r8, r8, r0
   4c438:	ldr	r0, [fp, #24]
   4c43c:	cmp	r0, #2
   4c440:	blt	4c360 <GetDataSlab+0x18204>
   4c444:	add	sl, sp, #44	; 0x2c
   4c448:	ldr	ip, [sp, #92]	; 0x5c
   4c44c:	mov	r0, #0
   4c450:	ldm	sl, {r1, r7, sl}
   4c454:	b	4c480 <GetDataSlab+0x18324>
   4c458:	sub	r6, fp, #176	; 0xb0
   4c45c:	ldr	r4, [ip, r0]
   4c460:	sub	r2, r2, r3
   4c464:	ldr	r6, [r6, r0]
   4c468:	mla	r2, r4, r6, r2
   4c46c:	add	r8, r2, r8
   4c470:	add	r5, r5, r2, lsl #3
   4c474:	subs	r1, r1, #1
   4c478:	add	r0, r0, #4
   4c47c:	beq	4c360 <GetDataSlab+0x18204>
   4c480:	ldr	r2, [r9, r0]
   4c484:	add	r2, r2, #1
   4c488:	str	r2, [r9, r0]
   4c48c:	ldr	r3, [r7, r0]
   4c490:	sdiv	r6, r2, r3
   4c494:	mls	r2, r6, r3, r2
   4c498:	cmp	r2, #0
   4c49c:	bne	4c350 <GetDataSlab+0x181f4>
   4c4a0:	mov	r2, #0
   4c4a4:	str	r2, [r9, r0]
   4c4a8:	ldr	r2, [sl, r0]
   4c4ac:	sdiv	r3, r8, r2
   4c4b0:	mls	r3, r3, r2, r8
   4c4b4:	cmp	r3, #0
   4c4b8:	bne	4c458 <GetDataSlab+0x182fc>
   4c4bc:	ldr	r2, [ip, r0]
   4c4c0:	cmp	r2, #0
   4c4c4:	beq	4c474 <GetDataSlab+0x18318>
   4c4c8:	sub	r3, fp, #176	; 0xb0
   4c4cc:	ldr	r3, [r3, r0]
   4c4d0:	mla	r8, r3, r2, r8
   4c4d4:	mul	r2, r3, r2
   4c4d8:	b	4c470 <GetDataSlab+0x18314>
   4c4dc:	ldr	r0, [sp, #80]	; 0x50
   4c4e0:	add	r7, r0, ip, lsl #3
   4c4e4:	ldr	r0, [sp, #32]
   4c4e8:	cmp	r0, #1
   4c4ec:	bne	59cb8 <GetDataSlab+0x25b5c>
   4c4f0:	ldr	r0, [sp, #68]	; 0x44
   4c4f4:	ldr	r8, [sp, #88]	; 0x58
   4c4f8:	ldr	lr, [sp, #44]	; 0x2c
   4c4fc:	cmp	r0, #1
   4c500:	blt	59f1c <GetDataSlab+0x25dc0>
   4c504:	sub	r0, lr, #2
   4c508:	mov	r2, #1
   4c50c:	ldr	sl, [sp, #24]
   4c510:	str	r8, [sp, #52]	; 0x34
   4c514:	add	r2, r2, r0, lsr #1
   4c518:	lsr	r0, r0, #1
   4c51c:	str	r0, [sp, #4]
   4c520:	mov	r0, #0
   4c524:	and	r1, r2, #1
   4c528:	str	r0, [sp, #56]	; 0x38
   4c52c:	mov	r0, #0
   4c530:	str	r1, [sp, #12]
   4c534:	sub	r1, r2, r1
   4c538:	sub	r2, fp, #136	; 0x88
   4c53c:	str	r0, [sp, #64]	; 0x40
   4c540:	str	r1, [sp]
   4c544:	ldr	r1, [fp, #20]
   4c548:	orr	r9, r2, #4
   4c54c:	add	r4, r1, #4
   4c550:	sub	r1, fp, #176	; 0xb0
   4c554:	orr	r1, r1, #4
   4c558:	str	r4, [sp, #32]
   4c55c:	str	r1, [sp, #76]	; 0x4c
   4c560:	ldr	r1, [fp, #24]
   4c564:	sub	r1, r1, #1
   4c568:	str	r1, [sp, #28]
   4c56c:	sub	r1, fp, #96	; 0x60
   4c570:	orr	r1, r1, #4
   4c574:	str	r1, [sp, #16]
   4c578:	ldr	r1, [fp, #12]
   4c57c:	ldr	r2, [r1], #4
   4c580:	str	r1, [sp, #72]	; 0x48
   4c584:	add	r1, lr, r2
   4c588:	str	r2, [sp, #40]	; 0x28
   4c58c:	str	r1, [sp, #20]
   4c590:	and	r1, lr, #1
   4c594:	str	r1, [sp, #36]	; 0x24
   4c598:	lsl	r1, lr, #3
   4c59c:	str	r1, [sp, #48]	; 0x30
   4c5a0:	bic	r1, lr, #1
   4c5a4:	str	r1, [sp, #8]
   4c5a8:	cmp	lr, #1
   4c5ac:	str	r7, [sp, #60]	; 0x3c
   4c5b0:	bge	4c608 <GetDataSlab+0x184ac>
   4c5b4:	b	4c748 <GetDataSlab+0x185ec>
   4c5b8:	ldr	r0, [sp, #16]
   4c5bc:	ldr	r0, [r0, r2]
   4c5c0:	add	r7, r7, r0, lsl #3
   4c5c4:	add	ip, r0, ip
   4c5c8:	ldr	r0, [sp, #48]	; 0x30
   4c5cc:	ldr	r1, [sp, #52]	; 0x34
   4c5d0:	add	r1, r1, r0
   4c5d4:	ldr	r0, [sp, #56]	; 0x38
   4c5d8:	str	r1, [sp, #52]	; 0x34
   4c5dc:	ldr	r1, [sp, #64]	; 0x40
   4c5e0:	add	r0, r0, #1
   4c5e4:	str	r0, [sp, #56]	; 0x38
   4c5e8:	ldr	r0, [sp, #68]	; 0x44
   4c5ec:	add	r1, r1, lr
   4c5f0:	str	r1, [sp, #64]	; 0x40
   4c5f4:	cmp	r1, r0
   4c5f8:	bge	59f1c <GetDataSlab+0x25dc0>
   4c5fc:	cmp	lr, #1
   4c600:	str	r7, [sp, #60]	; 0x3c
   4c604:	blt	4c748 <GetDataSlab+0x185ec>
   4c608:	ldr	r0, [sp, #60]	; 0x3c
   4c60c:	ldr	r1, [sp, #40]	; 0x28
   4c610:	mov	r6, #0
   4c614:	add	r2, r0, r1, lsl #3
   4c618:	ldr	r1, [sp, #64]	; 0x40
   4c61c:	add	r4, r8, r1, lsl #3
   4c620:	beq	4c6d0 <GetDataSlab+0x18574>
   4c624:	ldr	r1, [sp, #48]	; 0x30
   4c628:	ldr	r3, [sp, #56]	; 0x38
   4c62c:	mla	r3, r1, r3, r8
   4c630:	ldr	r1, [sp, #20]
   4c634:	add	r5, r0, r1, lsl #3
   4c638:	cmp	r3, r5
   4c63c:	bcs	4c658 <GetDataSlab+0x184fc>
   4c640:	ldr	r0, [sp, #48]	; 0x30
   4c644:	ldr	r1, [sp, #56]	; 0x38
   4c648:	mla	r3, r0, r1, r0
   4c64c:	add	r3, r8, r3
   4c650:	cmp	r3, r2
   4c654:	bhi	4c6d0 <GetDataSlab+0x18574>
   4c658:	ldr	r0, [sp, #4]
   4c65c:	mov	lr, #0
   4c660:	cmp	r0, #0
   4c664:	beq	4c69c <GetDataSlab+0x18540>
   4c668:	ldr	r3, [sp, #52]	; 0x34
   4c66c:	ldr	r8, [sp]
   4c670:	mov	r6, r2
   4c674:	mov	r0, #32
   4c678:	add	r5, r6, #16
   4c67c:	vld1.64	{d16-d17}, [r6], r0
   4c680:	add	sl, r3, #16
   4c684:	subs	r8, r8, #2
   4c688:	add	lr, lr, #4
   4c68c:	vst1.64	{d16-d17}, [r3], r0
   4c690:	vld1.64	{d16-d17}, [r5]
   4c694:	vst1.64	{d16-d17}, [sl]
   4c698:	bne	4c678 <GetDataSlab+0x1851c>
   4c69c:	ldr	r0, [sp, #12]
   4c6a0:	ldr	r8, [sp, #88]	; 0x58
   4c6a4:	cmp	r0, #0
   4c6a8:	beq	4c6bc <GetDataSlab+0x18560>
   4c6ac:	add	r3, r2, lr, lsl #3
   4c6b0:	vld1.64	{d16-d17}, [r3]
   4c6b4:	add	r3, r4, lr, lsl #3
   4c6b8:	vst1.64	{d16-d17}, [r3]
   4c6bc:	ldr	lr, [sp, #44]	; 0x2c
   4c6c0:	ldr	r6, [sp, #8]
   4c6c4:	ldr	sl, [sp, #24]
   4c6c8:	cmp	lr, r6
   4c6cc:	beq	4c748 <GetDataSlab+0x185ec>
   4c6d0:	ldr	r0, [sp, #36]	; 0x24
   4c6d4:	mov	r3, r6
   4c6d8:	cmp	r0, #0
   4c6dc:	beq	4c6f8 <GetDataSlab+0x1859c>
   4c6e0:	mov	r3, r2
   4c6e4:	ldr	r5, [r3, r6, lsl #3]!
   4c6e8:	ldr	r3, [r3, #4]
   4c6ec:	str	r5, [r4, r6, lsl #3]!
   4c6f0:	str	r3, [r4, #4]
   4c6f4:	orr	r3, r6, #1
   4c6f8:	orr	r6, r6, #1
   4c6fc:	cmp	lr, r6
   4c700:	beq	4c748 <GetDataSlab+0x185ec>
   4c704:	ldr	r5, [sp, #52]	; 0x34
   4c708:	sub	r6, lr, r3
   4c70c:	lsl	r3, r3, #3
   4c710:	add	r0, r2, #16
   4c714:	ldr	r7, [r2, r3]!
   4c718:	add	r1, r5, #16
   4c71c:	subs	r6, r6, #2
   4c720:	ldr	r4, [r2, #4]
   4c724:	str	r7, [r5, r3]!
   4c728:	str	r4, [r5, #4]
   4c72c:	ldr	r7, [r2, #8]
   4c730:	ldr	r2, [r2, #12]
   4c734:	str	r2, [r5, #12]
   4c738:	str	r7, [r5, #8]
   4c73c:	mov	r2, r0
   4c740:	mov	r5, r1
   4c744:	bne	4c710 <GetDataSlab+0x185b4>
   4c748:	ldr	r7, [sp, #60]	; 0x3c
   4c74c:	ldr	r0, [fp, #24]
   4c750:	add	ip, ip, sl
   4c754:	add	r7, r7, sl, lsl #3
   4c758:	cmp	r0, #2
   4c75c:	blt	4c5c8 <GetDataSlab+0x1846c>
   4c760:	ldr	r6, [sp, #28]
   4c764:	ldr	r4, [sp, #32]
   4c768:	mov	r2, #0
   4c76c:	b	4c79c <GetDataSlab+0x18640>
   4c770:	ldr	r1, [sp, #72]	; 0x48
   4c774:	sub	r0, fp, #176	; 0xb0
   4c778:	sub	r3, r3, r5
   4c77c:	ldr	r0, [r0, r2]
   4c780:	ldr	r1, [r1, r2]
   4c784:	mla	r0, r1, r0, r3
   4c788:	add	ip, r0, ip
   4c78c:	add	r7, r7, r0, lsl #3
   4c790:	subs	r6, r6, #1
   4c794:	add	r2, r2, #4
   4c798:	beq	4c5c8 <GetDataSlab+0x1846c>
   4c79c:	ldr	r0, [r9, r2]
   4c7a0:	add	r0, r0, #1
   4c7a4:	str	r0, [r9, r2]
   4c7a8:	ldr	r1, [r4, r2]
   4c7ac:	sdiv	r3, r0, r1
   4c7b0:	mls	r0, r3, r1, r0
   4c7b4:	cmp	r0, #0
   4c7b8:	bne	4c5b8 <GetDataSlab+0x1845c>
   4c7bc:	mov	r0, #0
   4c7c0:	str	r0, [r9, r2]
   4c7c4:	ldr	r0, [sp, #76]	; 0x4c
   4c7c8:	ldr	r3, [r0, r2]
   4c7cc:	sdiv	r0, ip, r3
   4c7d0:	mls	r5, r0, r3, ip
   4c7d4:	cmp	r5, #0
   4c7d8:	bne	4c770 <GetDataSlab+0x18614>
   4c7dc:	ldr	r0, [sp, #72]	; 0x48
   4c7e0:	ldr	r3, [r0, r2]
   4c7e4:	cmp	r3, #0
   4c7e8:	beq	4c790 <GetDataSlab+0x18634>
   4c7ec:	sub	r0, fp, #176	; 0xb0
   4c7f0:	ldr	r0, [r0, r2]
   4c7f4:	mla	ip, r0, r3, ip
   4c7f8:	mul	r0, r0, r3
   4c7fc:	b	4c78c <GetDataSlab+0x18630>
   4c800:	ldr	r0, [sp, #76]	; 0x4c
   4c804:	sub	r2, fp, #96	; 0x60
   4c808:	cmp	r0, #1
   4c80c:	ldr	r0, [fp, #12]
   4c810:	blt	5b69c <GetDataSlab+0x27540>
   4c814:	ldr	lr, [sp, #60]	; 0x3c
   4c818:	ldr	r1, [sp, #40]	; 0x28
   4c81c:	add	r0, r0, #4
   4c820:	mov	r6, #0
   4c824:	str	r0, [sp, #84]	; 0x54
   4c828:	ldr	r0, [fp, #24]
   4c82c:	mls	r1, lr, sl, r1
   4c830:	sub	r0, r0, #1
   4c834:	str	r0, [sp, #40]	; 0x28
   4c838:	orr	r0, r2, #4
   4c83c:	str	r1, [sp, #68]	; 0x44
   4c840:	mul	r1, lr, sl
   4c844:	str	r0, [sp, #32]
   4c848:	and	r0, lr, #1
   4c84c:	str	r0, [sp, #44]	; 0x2c
   4c850:	sub	r0, lr, r0
   4c854:	str	r0, [sp, #36]	; 0x24
   4c858:	lsl	r0, lr, #2
   4c85c:	str	r1, [sp, #48]	; 0x30
   4c860:	sub	r1, fp, #136	; 0x88
   4c864:	str	r0, [sp, #64]	; 0x40
   4c868:	ldr	r0, [sp, #88]	; 0x58
   4c86c:	orr	r4, r1, #4
   4c870:	ldr	r1, [fp, #20]
   4c874:	add	r1, r1, #4
   4c878:	str	r1, [sp, #52]	; 0x34
   4c87c:	sub	r1, fp, #176	; 0xb0
   4c880:	orr	r1, r1, #4
   4c884:	str	r1, [sp, #56]	; 0x38
   4c888:	add	r1, r0, #4
   4c88c:	b	4c8c8 <GetDataSlab+0x1876c>
   4c890:	ldr	r0, [sp, #32]
   4c894:	ldr	r0, [r0, r2]
   4c898:	add	ip, ip, r0
   4c89c:	add	r3, r0, r3
   4c8a0:	ldr	r0, [sp, #64]	; 0x40
   4c8a4:	ldr	r1, [sp, #80]	; 0x50
   4c8a8:	ldr	lr, [sp, #60]	; 0x3c
   4c8ac:	ldr	r6, [sp, #72]	; 0x48
   4c8b0:	mov	r2, #0
   4c8b4:	add	r1, r1, r0
   4c8b8:	ldr	r0, [sp, #76]	; 0x4c
   4c8bc:	add	r6, r6, lr
   4c8c0:	cmp	r6, r0
   4c8c4:	bge	5b6a0 <GetDataSlab+0x27544>
   4c8c8:	ldr	r0, [fp, #12]
   4c8cc:	cmp	lr, #1
   4c8d0:	str	r1, [sp, #80]	; 0x50
   4c8d4:	ldr	r9, [r0]
   4c8d8:	add	r5, ip, r9
   4c8dc:	blt	4c96c <GetDataSlab+0x18810>
   4c8e0:	mov	r7, #0
   4c8e4:	cmp	lr, #1
   4c8e8:	beq	4c92c <GetDataSlab+0x187d0>
   4c8ec:	ldr	r2, [sp, #36]	; 0x24
   4c8f0:	mov	r7, #0
   4c8f4:	mov	r0, r1
   4c8f8:	ldrsb	r1, [r5]
   4c8fc:	add	r7, r7, #2
   4c900:	cmp	r2, r7
   4c904:	vmov	s0, r1
   4c908:	vcvt.f32.s32	s0, s0
   4c90c:	vstr	s0, [r0, #-4]
   4c910:	ldrsb	r1, [r5, sl]!
   4c914:	add	r5, r5, sl
   4c918:	vmov	s0, r1
   4c91c:	vcvt.f32.s32	s0, s0
   4c920:	vstr	s0, [r0]
   4c924:	add	r0, r0, #8
   4c928:	bne	4c8f8 <GetDataSlab+0x1879c>
   4c92c:	ldr	r0, [sp, #48]	; 0x30
   4c930:	ldr	r1, [sp, #44]	; 0x2c
   4c934:	ldr	lr, [sp, #56]	; 0x38
   4c938:	ldr	r8, [sp, #52]	; 0x34
   4c93c:	add	r0, r0, r3
   4c940:	cmp	r1, #0
   4c944:	beq	4c964 <GetDataSlab+0x18808>
   4c948:	ldrsb	r3, [r5], sl
   4c94c:	ldr	r1, [sp, #88]	; 0x58
   4c950:	vmov	s0, r3
   4c954:	add	r1, r1, r6, lsl #2
   4c958:	add	r1, r1, r7, lsl #2
   4c95c:	vcvt.f32.s32	s0, s0
   4c960:	vstr	s0, [r1]
   4c964:	add	r0, r0, r9
   4c968:	b	4c978 <GetDataSlab+0x1881c>
   4c96c:	ldr	lr, [sp, #56]	; 0x38
   4c970:	ldr	r8, [sp, #52]	; 0x34
   4c974:	add	r0, r9, r3
   4c978:	ldr	r1, [sp, #68]	; 0x44
   4c97c:	str	r6, [sp, #72]	; 0x48
   4c980:	sub	r1, r1, r9
   4c984:	add	r3, r0, r1
   4c988:	ldr	r0, [fp, #24]
   4c98c:	add	ip, r5, r1
   4c990:	cmp	r0, #2
   4c994:	blt	4c8a0 <GetDataSlab+0x18744>
   4c998:	ldr	r9, [sp, #40]	; 0x28
   4c99c:	mov	r2, #0
   4c9a0:	b	4c9d0 <GetDataSlab+0x18874>
   4c9a4:	ldr	r5, [sp, #84]	; 0x54
   4c9a8:	sub	r1, fp, #176	; 0xb0
   4c9ac:	sub	r0, r0, r7
   4c9b0:	ldr	r1, [r1, r2]
   4c9b4:	ldr	r5, [r5, r2]
   4c9b8:	mla	r0, r5, r1, r0
   4c9bc:	add	r3, r0, r3
   4c9c0:	add	ip, ip, r0
   4c9c4:	subs	r9, r9, #1
   4c9c8:	add	r2, r2, #4
   4c9cc:	beq	4c8a0 <GetDataSlab+0x18744>
   4c9d0:	ldr	r0, [r4, r2]
   4c9d4:	add	r0, r0, #1
   4c9d8:	str	r0, [r4, r2]
   4c9dc:	ldr	r1, [r8, r2]
   4c9e0:	sdiv	r5, r0, r1
   4c9e4:	mls	r0, r5, r1, r0
   4c9e8:	cmp	r0, #0
   4c9ec:	bne	4c890 <GetDataSlab+0x18734>
   4c9f0:	mov	r0, #0
   4c9f4:	str	r0, [r4, r2]
   4c9f8:	ldr	r0, [lr, r2]
   4c9fc:	sdiv	r1, r3, r0
   4ca00:	mls	r7, r1, r0, r3
   4ca04:	cmp	r7, #0
   4ca08:	bne	4c9a4 <GetDataSlab+0x18848>
   4ca0c:	ldr	r0, [sp, #84]	; 0x54
   4ca10:	ldr	r0, [r0, r2]
   4ca14:	cmp	r0, #0
   4ca18:	beq	4c9c4 <GetDataSlab+0x18868>
   4ca1c:	sub	r1, fp, #176	; 0xb0
   4ca20:	ldr	r1, [r1, r2]
   4ca24:	mla	r3, r1, r0, r3
   4ca28:	mla	ip, r1, r0, ip
   4ca2c:	subs	r9, r9, #1
   4ca30:	add	r2, r2, #4
   4ca34:	bne	4c9d0 <GetDataSlab+0x18874>
   4ca38:	b	4c8a0 <GetDataSlab+0x18744>
   4ca3c:	ldr	r0, [sp, #76]	; 0x4c
   4ca40:	sub	r2, fp, #96	; 0x60
   4ca44:	cmp	r0, #1
   4ca48:	ldr	r0, [fp, #12]
   4ca4c:	blt	5b69c <GetDataSlab+0x27540>
   4ca50:	ldr	r6, [sp, #56]	; 0x38
   4ca54:	ldr	r1, [sp, #52]	; 0x34
   4ca58:	add	r0, r0, #4
   4ca5c:	str	r0, [sp, #84]	; 0x54
   4ca60:	ldr	r0, [fp, #24]
   4ca64:	mls	r1, r6, sl, r1
   4ca68:	mov	lr, r6
   4ca6c:	sub	r0, r0, #1
   4ca70:	str	r0, [sp, #44]	; 0x2c
   4ca74:	orr	r0, r2, #4
   4ca78:	str	r1, [sp, #68]	; 0x44
   4ca7c:	mul	r1, r6, sl
   4ca80:	str	r0, [sp, #36]	; 0x24
   4ca84:	and	r0, r6, #1
   4ca88:	str	r0, [sp, #48]	; 0x30
   4ca8c:	sub	r8, r6, r0
   4ca90:	lsl	r0, r6, #1
   4ca94:	mov	r6, #0
   4ca98:	str	r0, [sp, #64]	; 0x40
   4ca9c:	ldr	r0, [sp, #88]	; 0x58
   4caa0:	str	r1, [sp, #52]	; 0x34
   4caa4:	sub	r1, fp, #136	; 0x88
   4caa8:	orr	r4, r1, #4
   4caac:	ldr	r1, [fp, #20]
   4cab0:	add	r0, r0, #2
   4cab4:	str	r0, [sp, #80]	; 0x50
   4cab8:	add	r1, r1, #4
   4cabc:	str	r1, [sp, #40]	; 0x28
   4cac0:	sub	r1, fp, #176	; 0xb0
   4cac4:	orr	r1, r1, #4
   4cac8:	str	r1, [sp, #60]	; 0x3c
   4cacc:	b	4cb0c <GetDataSlab+0x189b0>
   4cad0:	ldr	r0, [sp, #36]	; 0x24
   4cad4:	ldr	r0, [r0, r2]
   4cad8:	add	ip, ip, r0
   4cadc:	add	r3, r0, r3
   4cae0:	ldr	r0, [sp, #64]	; 0x40
   4cae4:	ldr	r1, [sp, #80]	; 0x50
   4cae8:	ldr	lr, [sp, #56]	; 0x38
   4caec:	ldr	r6, [sp, #72]	; 0x48
   4caf0:	mov	r2, #0
   4caf4:	add	r1, r1, r0
   4caf8:	ldr	r0, [sp, #76]	; 0x4c
   4cafc:	add	r6, r6, lr
   4cb00:	str	r1, [sp, #80]	; 0x50
   4cb04:	cmp	r6, r0
   4cb08:	bge	5b6a0 <GetDataSlab+0x27544>
   4cb0c:	ldr	r0, [fp, #12]
   4cb10:	cmp	lr, #1
   4cb14:	ldr	r2, [r0]
   4cb18:	add	r5, ip, r2
   4cb1c:	blt	4cb8c <GetDataSlab+0x18a30>
   4cb20:	mov	r7, #0
   4cb24:	cmp	lr, #1
   4cb28:	beq	4cb58 <GetDataSlab+0x189fc>
   4cb2c:	ldr	r0, [sp, #80]	; 0x50
   4cb30:	mov	r7, #0
   4cb34:	ldrsb	r1, [r5]
   4cb38:	add	r7, r7, #2
   4cb3c:	cmp	r8, r7
   4cb40:	strh	r1, [r0, #-2]
   4cb44:	ldrsb	r1, [r5, sl]!
   4cb48:	add	r5, r5, sl
   4cb4c:	strh	r1, [r0]
   4cb50:	add	r0, r0, #4
   4cb54:	bne	4cb34 <GetDataSlab+0x189d8>
   4cb58:	ldr	r0, [sp, #52]	; 0x34
   4cb5c:	ldr	r1, [sp, #48]	; 0x30
   4cb60:	ldr	lr, [sp, #60]	; 0x3c
   4cb64:	add	r0, r0, r3
   4cb68:	cmp	r1, #0
   4cb6c:	beq	4cb84 <GetDataSlab+0x18a28>
   4cb70:	ldr	r1, [sp, #88]	; 0x58
   4cb74:	ldrsb	r3, [r5], sl
   4cb78:	add	r1, r1, r6, lsl #1
   4cb7c:	add	r1, r1, r7, lsl #1
   4cb80:	strh	r3, [r1]
   4cb84:	add	r0, r0, r2
   4cb88:	b	4cb94 <GetDataSlab+0x18a38>
   4cb8c:	ldr	lr, [sp, #60]	; 0x3c
   4cb90:	add	r0, r2, r3
   4cb94:	ldr	r1, [sp, #68]	; 0x44
   4cb98:	str	r6, [sp, #72]	; 0x48
   4cb9c:	sub	r1, r1, r2
   4cba0:	add	r3, r0, r1
   4cba4:	ldr	r0, [fp, #24]
   4cba8:	add	ip, r5, r1
   4cbac:	cmp	r0, #2
   4cbb0:	blt	4cae0 <GetDataSlab+0x18984>
   4cbb4:	ldr	r9, [sp, #44]	; 0x2c
   4cbb8:	ldr	r6, [sp, #40]	; 0x28
   4cbbc:	mov	r2, #0
   4cbc0:	b	4cbf0 <GetDataSlab+0x18a94>
   4cbc4:	ldr	r5, [sp, #84]	; 0x54
   4cbc8:	sub	r1, fp, #176	; 0xb0
   4cbcc:	sub	r0, r0, r7
   4cbd0:	ldr	r1, [r1, r2]
   4cbd4:	ldr	r5, [r5, r2]
   4cbd8:	mla	r0, r5, r1, r0
   4cbdc:	add	r3, r0, r3
   4cbe0:	add	ip, ip, r0
   4cbe4:	subs	r9, r9, #1
   4cbe8:	add	r2, r2, #4
   4cbec:	beq	4cae0 <GetDataSlab+0x18984>
   4cbf0:	ldr	r0, [r4, r2]
   4cbf4:	add	r0, r0, #1
   4cbf8:	str	r0, [r4, r2]
   4cbfc:	ldr	r1, [r6, r2]
   4cc00:	sdiv	r5, r0, r1
   4cc04:	mls	r0, r5, r1, r0
   4cc08:	cmp	r0, #0
   4cc0c:	bne	4cad0 <GetDataSlab+0x18974>
   4cc10:	mov	r0, #0
   4cc14:	str	r0, [r4, r2]
   4cc18:	ldr	r0, [lr, r2]
   4cc1c:	sdiv	r1, r3, r0
   4cc20:	mls	r7, r1, r0, r3
   4cc24:	cmp	r7, #0
   4cc28:	bne	4cbc4 <GetDataSlab+0x18a68>
   4cc2c:	ldr	r0, [sp, #84]	; 0x54
   4cc30:	ldr	r0, [r0, r2]
   4cc34:	cmp	r0, #0
   4cc38:	beq	4cbe4 <GetDataSlab+0x18a88>
   4cc3c:	sub	r1, fp, #176	; 0xb0
   4cc40:	ldr	r1, [r1, r2]
   4cc44:	mla	r3, r1, r0, r3
   4cc48:	mla	ip, r1, r0, ip
   4cc4c:	subs	r9, r9, #1
   4cc50:	add	r2, r2, #4
   4cc54:	bne	4cbf0 <GetDataSlab+0x18a94>
   4cc58:	b	4cae0 <GetDataSlab+0x18984>
   4cc5c:	ldr	r0, [sp, #76]	; 0x4c
   4cc60:	sub	r2, fp, #96	; 0x60
   4cc64:	cmp	r0, #1
   4cc68:	ldr	r0, [fp, #12]
   4cc6c:	blt	5b69c <GetDataSlab+0x27540>
   4cc70:	ldr	r6, [sp, #56]	; 0x38
   4cc74:	ldr	r1, [sp, #52]	; 0x34
   4cc78:	add	r0, r0, #4
   4cc7c:	str	r0, [sp, #84]	; 0x54
   4cc80:	ldr	r0, [fp, #24]
   4cc84:	mls	r1, r6, sl, r1
   4cc88:	mov	lr, r6
   4cc8c:	sub	r0, r0, #1
   4cc90:	str	r0, [sp, #44]	; 0x2c
   4cc94:	orr	r0, r2, #4
   4cc98:	str	r1, [sp, #68]	; 0x44
   4cc9c:	mul	r1, r6, sl
   4cca0:	str	r0, [sp, #36]	; 0x24
   4cca4:	and	r0, r6, #1
   4cca8:	str	r0, [sp, #48]	; 0x30
   4ccac:	sub	r8, r6, r0
   4ccb0:	lsl	r0, r6, #1
   4ccb4:	mov	r6, #0
   4ccb8:	str	r0, [sp, #64]	; 0x40
   4ccbc:	ldr	r0, [sp, #88]	; 0x58
   4ccc0:	str	r1, [sp, #52]	; 0x34
   4ccc4:	sub	r1, fp, #136	; 0x88
   4ccc8:	orr	r4, r1, #4
   4cccc:	ldr	r1, [fp, #20]
   4ccd0:	add	r0, r0, #2
   4ccd4:	str	r0, [sp, #80]	; 0x50
   4ccd8:	add	r1, r1, #4
   4ccdc:	str	r1, [sp, #40]	; 0x28
   4cce0:	sub	r1, fp, #176	; 0xb0
   4cce4:	orr	r1, r1, #4
   4cce8:	str	r1, [sp, #60]	; 0x3c
   4ccec:	b	4cd2c <GetDataSlab+0x18bd0>
   4ccf0:	ldr	r0, [sp, #36]	; 0x24
   4ccf4:	ldr	r0, [r0, r2]
   4ccf8:	add	ip, ip, r0
   4ccfc:	add	r3, r0, r3
   4cd00:	ldr	r0, [sp, #64]	; 0x40
   4cd04:	ldr	r1, [sp, #80]	; 0x50
   4cd08:	ldr	lr, [sp, #56]	; 0x38
   4cd0c:	ldr	r6, [sp, #72]	; 0x48
   4cd10:	mov	r2, #0
   4cd14:	add	r1, r1, r0
   4cd18:	ldr	r0, [sp, #76]	; 0x4c
   4cd1c:	add	r6, r6, lr
   4cd20:	str	r1, [sp, #80]	; 0x50
   4cd24:	cmp	r6, r0
   4cd28:	bge	5b6a0 <GetDataSlab+0x27544>
   4cd2c:	ldr	r0, [fp, #12]
   4cd30:	cmp	lr, #1
   4cd34:	ldr	r2, [r0]
   4cd38:	add	r5, ip, r2
   4cd3c:	blt	4cdac <GetDataSlab+0x18c50>
   4cd40:	mov	r7, #0
   4cd44:	cmp	lr, #1
   4cd48:	beq	4cd78 <GetDataSlab+0x18c1c>
   4cd4c:	ldr	r0, [sp, #80]	; 0x50
   4cd50:	mov	r7, #0
   4cd54:	ldrsb	r1, [r5]
   4cd58:	add	r7, r7, #2
   4cd5c:	cmp	r8, r7
   4cd60:	strh	r1, [r0, #-2]
   4cd64:	ldrsb	r1, [r5, sl]!
   4cd68:	add	r5, r5, sl
   4cd6c:	strh	r1, [r0]
   4cd70:	add	r0, r0, #4
   4cd74:	bne	4cd54 <GetDataSlab+0x18bf8>
   4cd78:	ldr	r0, [sp, #52]	; 0x34
   4cd7c:	ldr	r1, [sp, #48]	; 0x30
   4cd80:	ldr	lr, [sp, #60]	; 0x3c
   4cd84:	add	r0, r0, r3
   4cd88:	cmp	r1, #0
   4cd8c:	beq	4cda4 <GetDataSlab+0x18c48>
   4cd90:	ldr	r1, [sp, #88]	; 0x58
   4cd94:	ldrsb	r3, [r5], sl
   4cd98:	add	r1, r1, r6, lsl #1
   4cd9c:	add	r1, r1, r7, lsl #1
   4cda0:	strh	r3, [r1]
   4cda4:	add	r0, r0, r2
   4cda8:	b	4cdb4 <GetDataSlab+0x18c58>
   4cdac:	ldr	lr, [sp, #60]	; 0x3c
   4cdb0:	add	r0, r2, r3
   4cdb4:	ldr	r1, [sp, #68]	; 0x44
   4cdb8:	str	r6, [sp, #72]	; 0x48
   4cdbc:	sub	r1, r1, r2
   4cdc0:	add	r3, r0, r1
   4cdc4:	ldr	r0, [fp, #24]
   4cdc8:	add	ip, r5, r1
   4cdcc:	cmp	r0, #2
   4cdd0:	blt	4cd00 <GetDataSlab+0x18ba4>
   4cdd4:	ldr	r9, [sp, #44]	; 0x2c
   4cdd8:	ldr	r6, [sp, #40]	; 0x28
   4cddc:	mov	r2, #0
   4cde0:	b	4ce10 <GetDataSlab+0x18cb4>
   4cde4:	ldr	r5, [sp, #84]	; 0x54
   4cde8:	sub	r1, fp, #176	; 0xb0
   4cdec:	sub	r0, r0, r7
   4cdf0:	ldr	r1, [r1, r2]
   4cdf4:	ldr	r5, [r5, r2]
   4cdf8:	mla	r0, r5, r1, r0
   4cdfc:	add	r3, r0, r3
   4ce00:	add	ip, ip, r0
   4ce04:	subs	r9, r9, #1
   4ce08:	add	r2, r2, #4
   4ce0c:	beq	4cd00 <GetDataSlab+0x18ba4>
   4ce10:	ldr	r0, [r4, r2]
   4ce14:	add	r0, r0, #1
   4ce18:	str	r0, [r4, r2]
   4ce1c:	ldr	r1, [r6, r2]
   4ce20:	sdiv	r5, r0, r1
   4ce24:	mls	r0, r5, r1, r0
   4ce28:	cmp	r0, #0
   4ce2c:	bne	4ccf0 <GetDataSlab+0x18b94>
   4ce30:	mov	r0, #0
   4ce34:	str	r0, [r4, r2]
   4ce38:	ldr	r0, [lr, r2]
   4ce3c:	sdiv	r1, r3, r0
   4ce40:	mls	r7, r1, r0, r3
   4ce44:	cmp	r7, #0
   4ce48:	bne	4cde4 <GetDataSlab+0x18c88>
   4ce4c:	ldr	r0, [sp, #84]	; 0x54
   4ce50:	ldr	r0, [r0, r2]
   4ce54:	cmp	r0, #0
   4ce58:	beq	4ce04 <GetDataSlab+0x18ca8>
   4ce5c:	sub	r1, fp, #176	; 0xb0
   4ce60:	ldr	r1, [r1, r2]
   4ce64:	mla	r3, r1, r0, r3
   4ce68:	mla	ip, r1, r0, ip
   4ce6c:	subs	r9, r9, #1
   4ce70:	add	r2, r2, #4
   4ce74:	bne	4ce10 <GetDataSlab+0x18cb4>
   4ce78:	b	4cd00 <GetDataSlab+0x18ba4>
   4ce7c:	ldr	r0, [sp, #76]	; 0x4c
   4ce80:	ldr	r1, [fp, #20]
   4ce84:	ldr	r2, [sp, #44]	; 0x2c
   4ce88:	cmp	r0, #1
   4ce8c:	ldr	r0, [fp, #12]
   4ce90:	blt	5b69c <GetDataSlab+0x27540>
   4ce94:	add	r0, r0, #4
   4ce98:	ldr	r3, [sp, #72]	; 0x48
   4ce9c:	add	r8, r1, #4
   4cea0:	orr	r1, ip, #4
   4cea4:	mov	r6, #0
   4cea8:	str	r0, [sp, #44]	; 0x2c
   4ceac:	ldr	r0, [fp, #24]
   4ceb0:	str	r1, [sp, #84]	; 0x54
   4ceb4:	mls	r2, r3, sl, r2
   4ceb8:	mov	r1, r3
   4cebc:	sub	r0, r0, #1
   4cec0:	str	r0, [sp, #48]	; 0x30
   4cec4:	sub	r0, fp, #96	; 0x60
   4cec8:	orr	r0, r0, #4
   4cecc:	str	r2, [sp, #64]	; 0x40
   4ced0:	mul	r2, r3, sl
   4ced4:	str	r0, [sp, #40]	; 0x28
   4ced8:	and	r0, r3, #1
   4cedc:	str	r0, [sp, #52]	; 0x34
   4cee0:	sub	r9, r3, r0
   4cee4:	lsl	r0, r3, #3
   4cee8:	str	r0, [sp, #60]	; 0x3c
   4ceec:	ldr	r0, [sp, #88]	; 0x58
   4cef0:	str	r2, [sp, #56]	; 0x38
   4cef4:	sub	r2, fp, #136	; 0x88
   4cef8:	orr	r4, r2, #4
   4cefc:	add	r0, r0, #8
   4cf00:	str	r0, [sp, #80]	; 0x50
   4cf04:	b	4cf44 <GetDataSlab+0x18de8>
   4cf08:	ldr	r0, [sp, #40]	; 0x28
   4cf0c:	ldr	r0, [r0, r2]
   4cf10:	add	lr, lr, r0
   4cf14:	add	r7, r0, r7
   4cf18:	ldr	r0, [sp, #60]	; 0x3c
   4cf1c:	ldr	r1, [sp, #80]	; 0x50
   4cf20:	ldr	r6, [sp, #68]	; 0x44
   4cf24:	mov	r2, #0
   4cf28:	add	r1, r1, r0
   4cf2c:	ldr	r0, [sp, #76]	; 0x4c
   4cf30:	str	r1, [sp, #80]	; 0x50
   4cf34:	ldr	r1, [sp, #72]	; 0x48
   4cf38:	add	r6, r6, r1
   4cf3c:	cmp	r6, r0
   4cf40:	bge	5b6a0 <GetDataSlab+0x27544>
   4cf44:	ldr	r0, [fp, #12]
   4cf48:	cmp	r1, #1
   4cf4c:	ldr	r2, [r0]
   4cf50:	add	r5, lr, r2
   4cf54:	blt	4cfd8 <GetDataSlab+0x18e7c>
   4cf58:	mov	r0, #0
   4cf5c:	cmp	r1, #1
   4cf60:	beq	4cfa0 <GetDataSlab+0x18e44>
   4cf64:	ldr	r1, [sp, #80]	; 0x50
   4cf68:	mov	r0, #0
   4cf6c:	ldrsb	r3, [r5]
   4cf70:	add	r0, r0, #2
   4cf74:	cmp	r9, r0
   4cf78:	vmov	s0, r3
   4cf7c:	vcvt.f64.s32	d16, s0
   4cf80:	vstr	d16, [r1, #-8]
   4cf84:	ldrsb	r3, [r5, sl]!
   4cf88:	add	r5, r5, sl
   4cf8c:	vmov	s0, r3
   4cf90:	vcvt.f64.s32	d16, s0
   4cf94:	vstr	d16, [r1]
   4cf98:	add	r1, r1, #16
   4cf9c:	bne	4cf6c <GetDataSlab+0x18e10>
   4cfa0:	ldr	r1, [sp, #56]	; 0x38
   4cfa4:	ldr	r3, [sp, #52]	; 0x34
   4cfa8:	add	r1, r1, r7
   4cfac:	cmp	r3, #0
   4cfb0:	beq	4cfd0 <GetDataSlab+0x18e74>
   4cfb4:	ldr	r3, [sp, #88]	; 0x58
   4cfb8:	add	r3, r3, r6, lsl #3
   4cfbc:	add	r0, r3, r0, lsl #3
   4cfc0:	ldrsb	r3, [r5], sl
   4cfc4:	vmov	s0, r3
   4cfc8:	vcvt.f64.s32	d16, s0
   4cfcc:	vstr	d16, [r0]
   4cfd0:	add	r0, r1, r2
   4cfd4:	b	4cfdc <GetDataSlab+0x18e80>
   4cfd8:	add	r0, r2, r7
   4cfdc:	ldr	r1, [sp, #64]	; 0x40
   4cfe0:	str	r6, [sp, #68]	; 0x44
   4cfe4:	sub	r1, r1, r2
   4cfe8:	add	r7, r0, r1
   4cfec:	ldr	r0, [fp, #24]
   4cff0:	add	lr, r5, r1
   4cff4:	cmp	r0, #2
   4cff8:	blt	4cf18 <GetDataSlab+0x18dbc>
   4cffc:	ldr	ip, [sp, #48]	; 0x30
   4d000:	ldr	r6, [sp, #44]	; 0x2c
   4d004:	mov	r2, #0
   4d008:	b	4d034 <GetDataSlab+0x18ed8>
   4d00c:	sub	r3, fp, #176	; 0xb0
   4d010:	ldr	r5, [r6, r2]
   4d014:	sub	r0, r0, r1
   4d018:	ldr	r3, [r3, r2]
   4d01c:	mla	r0, r5, r3, r0
   4d020:	add	r7, r0, r7
   4d024:	add	lr, lr, r0
   4d028:	subs	ip, ip, #1
   4d02c:	add	r2, r2, #4
   4d030:	beq	4cf18 <GetDataSlab+0x18dbc>
   4d034:	ldr	r0, [r4, r2]
   4d038:	add	r0, r0, #1
   4d03c:	str	r0, [r4, r2]
   4d040:	ldr	r1, [r8, r2]
   4d044:	sdiv	r3, r0, r1
   4d048:	mls	r0, r3, r1, r0
   4d04c:	cmp	r0, #0
   4d050:	bne	4cf08 <GetDataSlab+0x18dac>
   4d054:	mov	r0, #0
   4d058:	str	r0, [r4, r2]
   4d05c:	ldr	r0, [sp, #84]	; 0x54
   4d060:	ldr	r0, [r0, r2]
   4d064:	sdiv	r1, r7, r0
   4d068:	mls	r1, r1, r0, r7
   4d06c:	cmp	r1, #0
   4d070:	bne	4d00c <GetDataSlab+0x18eb0>
   4d074:	ldr	r0, [r6, r2]
   4d078:	cmp	r0, #0
   4d07c:	beq	4d028 <GetDataSlab+0x18ecc>
   4d080:	sub	r1, fp, #176	; 0xb0
   4d084:	ldr	r1, [r1, r2]
   4d088:	mla	r7, r1, r0, r7
   4d08c:	mla	lr, r1, r0, lr
   4d090:	subs	ip, ip, #1
   4d094:	add	r2, r2, #4
   4d098:	bne	4d034 <GetDataSlab+0x18ed8>
   4d09c:	b	4cf18 <GetDataSlab+0x18dbc>
   4d0a0:	ldr	r0, [sp, #76]	; 0x4c
   4d0a4:	ldr	r2, [fp, #20]
   4d0a8:	cmp	r0, #1
   4d0ac:	sub	r0, fp, #176	; 0xb0
   4d0b0:	blt	5aed4 <GetDataSlab+0x26d78>
   4d0b4:	orr	r0, r0, #4
   4d0b8:	ldr	sl, [fp, #12]
   4d0bc:	sub	r3, fp, #136	; 0x88
   4d0c0:	add	r2, r2, #4
   4d0c4:	str	r0, [sp, #80]	; 0x50
   4d0c8:	ldr	r0, [fp, #24]
   4d0cc:	orr	lr, r3, #4
   4d0d0:	str	r2, [sp, #84]	; 0x54
   4d0d4:	sub	r0, r0, #1
   4d0d8:	str	r0, [sp, #60]	; 0x3c
   4d0dc:	sub	r0, fp, #96	; 0x60
   4d0e0:	orr	r0, r0, #4
   4d0e4:	str	r0, [sp, #56]	; 0x38
   4d0e8:	ldr	r0, [sl], #4
   4d0ec:	str	r0, [sp, #64]	; 0x40
   4d0f0:	mov	r0, #0
   4d0f4:	str	r0, [sp, #68]	; 0x44
   4d0f8:	b	4d12c <GetDataSlab+0x18fd0>
   4d0fc:	ldr	r0, [sp, #56]	; 0x38
   4d100:	ldr	r0, [r0, r2]
   4d104:	add	r8, r8, r0
   4d108:	add	r7, r0, r7
   4d10c:	ldr	r2, [sp, #68]	; 0x44
   4d110:	ldr	r0, [sp, #76]	; 0x4c
   4d114:	str	r6, [sp, #72]	; 0x48
   4d118:	add	r2, r1, r2
   4d11c:	str	r2, [sp, #68]	; 0x44
   4d120:	cmp	r2, r0
   4d124:	mov	r2, #0
   4d128:	bge	5b6a0 <GetDataSlab+0x27544>
   4d12c:	ldr	r0, [sp, #64]	; 0x40
   4d130:	cmp	r1, #1
   4d134:	add	r2, r0, r7
   4d138:	add	r7, r8, r0
   4d13c:	blt	4d190 <GetDataSlab+0x19034>
   4d140:	ldr	r0, [sp, #88]	; 0x58
   4d144:	ldr	r1, [sp, #68]	; 0x44
   4d148:	ldr	ip, [fp, #8]
   4d14c:	ldr	r6, [fp, #16]
   4d150:	mov	r3, #0
   4d154:	add	r4, r0, r1
   4d158:	ldr	r0, [fp, #20]
   4d15c:	ldrb	r1, [r7]
   4d160:	strb	r1, [r4, r3]
   4d164:	add	r3, r3, #1
   4d168:	ldr	r5, [r6]
   4d16c:	ldr	r1, [r0]
   4d170:	add	r2, r5, r2
   4d174:	add	r7, r7, r5
   4d178:	cmp	r3, r1
   4d17c:	blt	4d15c <GetDataSlab+0x19000>
   4d180:	ldr	r0, [fp, #12]
   4d184:	ldr	r6, [ip]
   4d188:	ldr	r0, [r0]
   4d18c:	b	4d194 <GetDataSlab+0x19038>
   4d190:	ldr	r6, [sp, #72]	; 0x48
   4d194:	mls	r3, r5, r1, r6
   4d198:	str	r0, [sp, #64]	; 0x40
   4d19c:	sub	r3, r3, r0
   4d1a0:	ldr	r0, [fp, #24]
   4d1a4:	add	r8, r7, r3
   4d1a8:	add	r7, r3, r2
   4d1ac:	cmp	r0, #2
   4d1b0:	blt	4d10c <GetDataSlab+0x18fb0>
   4d1b4:	ldr	r9, [sp, #60]	; 0x3c
   4d1b8:	mov	r2, #0
   4d1bc:	b	4d1e8 <GetDataSlab+0x1908c>
   4d1c0:	sub	r0, fp, #176	; 0xb0
   4d1c4:	ldr	r4, [sl, r2]
   4d1c8:	sub	r3, r3, ip
   4d1cc:	ldr	r0, [r0, r2]
   4d1d0:	mla	r0, r4, r0, r3
   4d1d4:	add	r7, r0, r7
   4d1d8:	add	r8, r8, r0
   4d1dc:	subs	r9, r9, #1
   4d1e0:	add	r2, r2, #4
   4d1e4:	beq	4d10c <GetDataSlab+0x18fb0>
   4d1e8:	ldr	r3, [lr, r2]
   4d1ec:	ldr	r0, [sp, #84]	; 0x54
   4d1f0:	add	r3, r3, #1
   4d1f4:	str	r3, [lr, r2]
   4d1f8:	ldr	r0, [r0, r2]
   4d1fc:	sdiv	r4, r3, r0
   4d200:	mls	r0, r4, r0, r3
   4d204:	cmp	r0, #0
   4d208:	bne	4d0fc <GetDataSlab+0x18fa0>
   4d20c:	mov	r0, #0
   4d210:	str	r0, [lr, r2]
   4d214:	ldr	r0, [sp, #80]	; 0x50
   4d218:	ldr	r3, [r0, r2]
   4d21c:	sdiv	r0, r7, r3
   4d220:	mls	ip, r0, r3, r7
   4d224:	cmp	ip, #0
   4d228:	bne	4d1c0 <GetDataSlab+0x19064>
   4d22c:	ldr	r3, [sl, r2]
   4d230:	cmp	r3, #0
   4d234:	beq	4d1dc <GetDataSlab+0x19080>
   4d238:	sub	r0, fp, #176	; 0xb0
   4d23c:	ldr	r0, [r0, r2]
   4d240:	mla	r7, r0, r3, r7
   4d244:	mla	r8, r0, r3, r8
   4d248:	subs	r9, r9, #1
   4d24c:	add	r2, r2, #4
   4d250:	bne	4d1e8 <GetDataSlab+0x1908c>
   4d254:	b	4d10c <GetDataSlab+0x18fb0>
   4d258:	ldr	r0, [sp, #76]	; 0x4c
   4d25c:	ldr	r2, [fp, #20]
   4d260:	cmp	r0, #1
   4d264:	sub	r0, fp, #176	; 0xb0
   4d268:	blt	5aed4 <GetDataSlab+0x26d78>
   4d26c:	orr	r0, r0, #4
   4d270:	ldr	sl, [fp, #12]
   4d274:	sub	r3, fp, #136	; 0x88
   4d278:	add	r2, r2, #4
   4d27c:	str	r0, [sp, #80]	; 0x50
   4d280:	ldr	r0, [fp, #24]
   4d284:	orr	lr, r3, #4
   4d288:	str	r2, [sp, #84]	; 0x54
   4d28c:	sub	r0, r0, #1
   4d290:	str	r0, [sp, #60]	; 0x3c
   4d294:	sub	r0, fp, #96	; 0x60
   4d298:	orr	r0, r0, #4
   4d29c:	str	r0, [sp, #56]	; 0x38
   4d2a0:	ldr	r0, [sl], #4
   4d2a4:	str	r0, [sp, #64]	; 0x40
   4d2a8:	mov	r0, #0
   4d2ac:	str	r0, [sp, #68]	; 0x44
   4d2b0:	b	4d2e4 <GetDataSlab+0x19188>
   4d2b4:	ldr	r0, [sp, #56]	; 0x38
   4d2b8:	ldr	r0, [r0, r2]
   4d2bc:	add	r8, r8, r0
   4d2c0:	add	r7, r0, r7
   4d2c4:	ldr	r2, [sp, #68]	; 0x44
   4d2c8:	ldr	r0, [sp, #76]	; 0x4c
   4d2cc:	str	r6, [sp, #72]	; 0x48
   4d2d0:	add	r2, r1, r2
   4d2d4:	str	r2, [sp, #68]	; 0x44
   4d2d8:	cmp	r2, r0
   4d2dc:	mov	r2, #0
   4d2e0:	bge	5b6a0 <GetDataSlab+0x27544>
   4d2e4:	ldr	r0, [sp, #64]	; 0x40
   4d2e8:	cmp	r1, #1
   4d2ec:	add	r2, r0, r7
   4d2f0:	add	r7, r8, r0
   4d2f4:	blt	4d348 <GetDataSlab+0x191ec>
   4d2f8:	ldr	r0, [sp, #88]	; 0x58
   4d2fc:	ldr	r1, [sp, #68]	; 0x44
   4d300:	ldr	ip, [fp, #8]
   4d304:	ldr	r6, [fp, #16]
   4d308:	mov	r3, #0
   4d30c:	add	r4, r0, r1
   4d310:	ldr	r0, [fp, #20]
   4d314:	ldrb	r1, [r7]
   4d318:	strb	r1, [r4, r3]
   4d31c:	add	r3, r3, #1
   4d320:	ldr	r5, [r6]
   4d324:	ldr	r1, [r0]
   4d328:	add	r2, r5, r2
   4d32c:	add	r7, r7, r5
   4d330:	cmp	r3, r1
   4d334:	blt	4d314 <GetDataSlab+0x191b8>
   4d338:	ldr	r0, [fp, #12]
   4d33c:	ldr	r6, [ip]
   4d340:	ldr	r0, [r0]
   4d344:	b	4d34c <GetDataSlab+0x191f0>
   4d348:	ldr	r6, [sp, #72]	; 0x48
   4d34c:	mls	r3, r5, r1, r6
   4d350:	str	r0, [sp, #64]	; 0x40
   4d354:	sub	r3, r3, r0
   4d358:	ldr	r0, [fp, #24]
   4d35c:	add	r8, r7, r3
   4d360:	add	r7, r3, r2
   4d364:	cmp	r0, #2
   4d368:	blt	4d2c4 <GetDataSlab+0x19168>
   4d36c:	ldr	r9, [sp, #60]	; 0x3c
   4d370:	mov	r2, #0
   4d374:	b	4d3a0 <GetDataSlab+0x19244>
   4d378:	sub	r0, fp, #176	; 0xb0
   4d37c:	ldr	r4, [sl, r2]
   4d380:	sub	r3, r3, ip
   4d384:	ldr	r0, [r0, r2]
   4d388:	mla	r0, r4, r0, r3
   4d38c:	add	r7, r0, r7
   4d390:	add	r8, r8, r0
   4d394:	subs	r9, r9, #1
   4d398:	add	r2, r2, #4
   4d39c:	beq	4d2c4 <GetDataSlab+0x19168>
   4d3a0:	ldr	r3, [lr, r2]
   4d3a4:	ldr	r0, [sp, #84]	; 0x54
   4d3a8:	add	r3, r3, #1
   4d3ac:	str	r3, [lr, r2]
   4d3b0:	ldr	r0, [r0, r2]
   4d3b4:	sdiv	r4, r3, r0
   4d3b8:	mls	r0, r4, r0, r3
   4d3bc:	cmp	r0, #0
   4d3c0:	bne	4d2b4 <GetDataSlab+0x19158>
   4d3c4:	mov	r0, #0
   4d3c8:	str	r0, [lr, r2]
   4d3cc:	ldr	r0, [sp, #80]	; 0x50
   4d3d0:	ldr	r3, [r0, r2]
   4d3d4:	sdiv	r0, r7, r3
   4d3d8:	mls	ip, r0, r3, r7
   4d3dc:	cmp	ip, #0
   4d3e0:	bne	4d378 <GetDataSlab+0x1921c>
   4d3e4:	ldr	r3, [sl, r2]
   4d3e8:	cmp	r3, #0
   4d3ec:	beq	4d394 <GetDataSlab+0x19238>
   4d3f0:	sub	r0, fp, #176	; 0xb0
   4d3f4:	ldr	r0, [r0, r2]
   4d3f8:	mla	r7, r0, r3, r7
   4d3fc:	mla	r8, r0, r3, r8
   4d400:	subs	r9, r9, #1
   4d404:	add	r2, r2, #4
   4d408:	bne	4d3a0 <GetDataSlab+0x19244>
   4d40c:	b	4d2c4 <GetDataSlab+0x19168>
   4d410:	ldr	r0, [sp, #76]	; 0x4c
   4d414:	ldr	r2, [fp, #20]
   4d418:	cmp	r0, #1
   4d41c:	sub	r0, fp, #176	; 0xb0
   4d420:	blt	5b69c <GetDataSlab+0x27540>
   4d424:	orr	r0, r0, #4
   4d428:	ldr	lr, [fp, #12]
   4d42c:	mov	r3, r8
   4d430:	sub	r6, fp, #136	; 0x88
   4d434:	add	r2, r2, #4
   4d438:	str	r0, [sp, #80]	; 0x50
   4d43c:	ldr	r0, [fp, #24]
   4d440:	orr	r8, r6, #4
   4d444:	str	r2, [sp, #84]	; 0x54
   4d448:	sub	r0, r0, #1
   4d44c:	str	r0, [sp, #60]	; 0x3c
   4d450:	orr	r0, r3, #4
   4d454:	str	r0, [sp, #56]	; 0x38
   4d458:	ldr	r0, [lr], #4
   4d45c:	str	r0, [sp, #64]	; 0x40
   4d460:	mov	r0, #0
   4d464:	str	r0, [sp, #68]	; 0x44
   4d468:	b	4d49c <GetDataSlab+0x19340>
   4d46c:	ldr	r0, [sp, #56]	; 0x38
   4d470:	ldr	r0, [r0, r2]
   4d474:	add	sl, sl, r0
   4d478:	add	r7, r0, r7
   4d47c:	ldr	r3, [sp, #68]	; 0x44
   4d480:	ldr	r0, [sp, #76]	; 0x4c
   4d484:	mov	r2, #0
   4d488:	str	r6, [sp, #72]	; 0x48
   4d48c:	add	r3, r1, r3
   4d490:	cmp	r3, r0
   4d494:	str	r3, [sp, #68]	; 0x44
   4d498:	bge	5b6a0 <GetDataSlab+0x27544>
   4d49c:	ldr	r0, [sp, #64]	; 0x40
   4d4a0:	cmp	r1, #1
   4d4a4:	add	r2, r0, r7
   4d4a8:	add	r7, sl, r0
   4d4ac:	blt	4d500 <GetDataSlab+0x193a4>
   4d4b0:	ldr	r0, [sp, #88]	; 0x58
   4d4b4:	ldr	r1, [sp, #68]	; 0x44
   4d4b8:	ldr	ip, [fp, #8]
   4d4bc:	ldr	r6, [fp, #16]
   4d4c0:	mov	r3, #0
   4d4c4:	add	r4, r0, r1, lsl #2
   4d4c8:	ldr	r0, [fp, #20]
   4d4cc:	ldrsb	r1, [r7]
   4d4d0:	str	r1, [r4, r3, lsl #2]
   4d4d4:	add	r3, r3, #1
   4d4d8:	ldr	r5, [r6]
   4d4dc:	ldr	r1, [r0]
   4d4e0:	add	r2, r5, r2
   4d4e4:	add	r7, r7, r5
   4d4e8:	cmp	r3, r1
   4d4ec:	blt	4d4cc <GetDataSlab+0x19370>
   4d4f0:	ldr	r0, [fp, #12]
   4d4f4:	ldr	r6, [ip]
   4d4f8:	ldr	r0, [r0]
   4d4fc:	b	4d504 <GetDataSlab+0x193a8>
   4d500:	ldr	r6, [sp, #72]	; 0x48
   4d504:	mls	r3, r5, r1, r6
   4d508:	str	r0, [sp, #64]	; 0x40
   4d50c:	sub	r3, r3, r0
   4d510:	ldr	r0, [fp, #24]
   4d514:	add	sl, r7, r3
   4d518:	add	r7, r3, r2
   4d51c:	cmp	r0, #2
   4d520:	blt	4d47c <GetDataSlab+0x19320>
   4d524:	ldr	r9, [sp, #60]	; 0x3c
   4d528:	mov	r2, #0
   4d52c:	b	4d558 <GetDataSlab+0x193fc>
   4d530:	sub	r0, fp, #176	; 0xb0
   4d534:	ldr	r4, [lr, r2]
   4d538:	sub	r3, r3, ip
   4d53c:	ldr	r0, [r0, r2]
   4d540:	mla	r0, r4, r0, r3
   4d544:	add	r7, r0, r7
   4d548:	add	sl, sl, r0
   4d54c:	subs	r9, r9, #1
   4d550:	add	r2, r2, #4
   4d554:	beq	4d47c <GetDataSlab+0x19320>
   4d558:	ldr	r3, [r8, r2]
   4d55c:	ldr	r0, [sp, #84]	; 0x54
   4d560:	add	r3, r3, #1
   4d564:	str	r3, [r8, r2]
   4d568:	ldr	r0, [r0, r2]
   4d56c:	sdiv	r4, r3, r0
   4d570:	mls	r0, r4, r0, r3
   4d574:	cmp	r0, #0
   4d578:	bne	4d46c <GetDataSlab+0x19310>
   4d57c:	mov	r0, #0
   4d580:	str	r0, [r8, r2]
   4d584:	ldr	r0, [sp, #80]	; 0x50
   4d588:	ldr	r3, [r0, r2]
   4d58c:	sdiv	r0, r7, r3
   4d590:	mls	ip, r0, r3, r7
   4d594:	cmp	ip, #0
   4d598:	bne	4d530 <GetDataSlab+0x193d4>
   4d59c:	ldr	r3, [lr, r2]
   4d5a0:	cmp	r3, #0
   4d5a4:	beq	4d54c <GetDataSlab+0x193f0>
   4d5a8:	sub	r0, fp, #176	; 0xb0
   4d5ac:	ldr	r0, [r0, r2]
   4d5b0:	mla	r7, r0, r3, r7
   4d5b4:	mla	sl, r0, r3, sl
   4d5b8:	subs	r9, r9, #1
   4d5bc:	add	r2, r2, #4
   4d5c0:	bne	4d558 <GetDataSlab+0x193fc>
   4d5c4:	b	4d47c <GetDataSlab+0x19320>
   4d5c8:	ldr	r0, [sp, #76]	; 0x4c
   4d5cc:	ldr	r2, [fp, #20]
   4d5d0:	cmp	r0, #1
   4d5d4:	sub	r0, fp, #176	; 0xb0
   4d5d8:	blt	5b69c <GetDataSlab+0x27540>
   4d5dc:	orr	r0, r0, #4
   4d5e0:	ldr	lr, [fp, #12]
   4d5e4:	mov	r3, r8
   4d5e8:	sub	r6, fp, #136	; 0x88
   4d5ec:	add	r2, r2, #4
   4d5f0:	str	r0, [sp, #80]	; 0x50
   4d5f4:	ldr	r0, [fp, #24]
   4d5f8:	orr	r8, r6, #4
   4d5fc:	str	r2, [sp, #84]	; 0x54
   4d600:	sub	r0, r0, #1
   4d604:	str	r0, [sp, #60]	; 0x3c
   4d608:	orr	r0, r3, #4
   4d60c:	str	r0, [sp, #56]	; 0x38
   4d610:	ldr	r0, [lr], #4
   4d614:	str	r0, [sp, #64]	; 0x40
   4d618:	mov	r0, #0
   4d61c:	str	r0, [sp, #68]	; 0x44
   4d620:	b	4d654 <GetDataSlab+0x194f8>
   4d624:	ldr	r0, [sp, #56]	; 0x38
   4d628:	ldr	r0, [r0, r2]
   4d62c:	add	sl, sl, r0
   4d630:	add	r7, r0, r7
   4d634:	ldr	r2, [sp, #68]	; 0x44
   4d638:	ldr	r0, [sp, #76]	; 0x4c
   4d63c:	str	r6, [sp, #72]	; 0x48
   4d640:	add	r2, r1, r2
   4d644:	str	r2, [sp, #68]	; 0x44
   4d648:	cmp	r2, r0
   4d64c:	mov	r2, #0
   4d650:	bge	5b6a0 <GetDataSlab+0x27544>
   4d654:	ldr	r0, [sp, #64]	; 0x40
   4d658:	cmp	r1, #1
   4d65c:	add	r2, r0, r7
   4d660:	add	r7, sl, r0
   4d664:	blt	4d6b8 <GetDataSlab+0x1955c>
   4d668:	ldr	r0, [sp, #88]	; 0x58
   4d66c:	ldr	r1, [sp, #68]	; 0x44
   4d670:	ldr	ip, [fp, #8]
   4d674:	ldr	r6, [fp, #16]
   4d678:	mov	r3, #0
   4d67c:	add	r4, r0, r1, lsl #2
   4d680:	ldr	r0, [fp, #20]
   4d684:	ldrsb	r1, [r7]
   4d688:	str	r1, [r4, r3, lsl #2]
   4d68c:	add	r3, r3, #1
   4d690:	ldr	r5, [r6]
   4d694:	ldr	r1, [r0]
   4d698:	add	r2, r5, r2
   4d69c:	add	r7, r7, r5
   4d6a0:	cmp	r3, r1
   4d6a4:	blt	4d684 <GetDataSlab+0x19528>
   4d6a8:	ldr	r0, [fp, #12]
   4d6ac:	ldr	r6, [ip]
   4d6b0:	ldr	r0, [r0]
   4d6b4:	b	4d6bc <GetDataSlab+0x19560>
   4d6b8:	ldr	r6, [sp, #72]	; 0x48
   4d6bc:	mls	r3, r5, r1, r6
   4d6c0:	str	r0, [sp, #64]	; 0x40
   4d6c4:	sub	r3, r3, r0
   4d6c8:	ldr	r0, [fp, #24]
   4d6cc:	add	sl, r7, r3
   4d6d0:	add	r7, r3, r2
   4d6d4:	cmp	r0, #2
   4d6d8:	blt	4d634 <GetDataSlab+0x194d8>
   4d6dc:	ldr	r9, [sp, #60]	; 0x3c
   4d6e0:	mov	r2, #0
   4d6e4:	b	4d710 <GetDataSlab+0x195b4>
   4d6e8:	sub	r0, fp, #176	; 0xb0
   4d6ec:	ldr	r4, [lr, r2]
   4d6f0:	sub	r3, r3, ip
   4d6f4:	ldr	r0, [r0, r2]
   4d6f8:	mla	r0, r4, r0, r3
   4d6fc:	add	r7, r0, r7
   4d700:	add	sl, sl, r0
   4d704:	subs	r9, r9, #1
   4d708:	add	r2, r2, #4
   4d70c:	beq	4d634 <GetDataSlab+0x194d8>
   4d710:	ldr	r3, [r8, r2]
   4d714:	ldr	r0, [sp, #84]	; 0x54
   4d718:	add	r3, r3, #1
   4d71c:	str	r3, [r8, r2]
   4d720:	ldr	r0, [r0, r2]
   4d724:	sdiv	r4, r3, r0
   4d728:	mls	r0, r4, r0, r3
   4d72c:	cmp	r0, #0
   4d730:	bne	4d624 <GetDataSlab+0x194c8>
   4d734:	mov	r0, #0
   4d738:	str	r0, [r8, r2]
   4d73c:	ldr	r0, [sp, #80]	; 0x50
   4d740:	ldr	r3, [r0, r2]
   4d744:	sdiv	r0, r7, r3
   4d748:	mls	ip, r0, r3, r7
   4d74c:	cmp	ip, #0
   4d750:	bne	4d6e8 <GetDataSlab+0x1958c>
   4d754:	ldr	r3, [lr, r2]
   4d758:	cmp	r3, #0
   4d75c:	beq	4d704 <GetDataSlab+0x195a8>
   4d760:	sub	r0, fp, #176	; 0xb0
   4d764:	ldr	r0, [r0, r2]
   4d768:	mla	r7, r0, r3, r7
   4d76c:	mla	sl, r0, r3, sl
   4d770:	subs	r9, r9, #1
   4d774:	add	r2, r2, #4
   4d778:	bne	4d710 <GetDataSlab+0x195b4>
   4d77c:	b	4d634 <GetDataSlab+0x194d8>
   4d780:	ldr	r0, [sp, #76]	; 0x4c
   4d784:	ldr	r1, [sp, #72]	; 0x48
   4d788:	ldr	r3, [sp, #48]	; 0x30
   4d78c:	sub	r2, fp, #96	; 0x60
   4d790:	cmp	r0, #1
   4d794:	ldr	r0, [fp, #12]
   4d798:	blt	5b69c <GetDataSlab+0x27540>
   4d79c:	mls	r3, r1, r9, r3
   4d7a0:	mul	r1, r1, r9
   4d7a4:	add	r0, r0, #4
   4d7a8:	mov	r6, #0
   4d7ac:	str	r0, [sp, #44]	; 0x2c
   4d7b0:	ldr	r0, [fp, #24]
   4d7b4:	str	r1, [sp, #56]	; 0x38
   4d7b8:	sub	r1, fp, #136	; 0x88
   4d7bc:	str	r3, [sp, #64]	; 0x40
   4d7c0:	orr	r4, r1, #4
   4d7c4:	ldr	r1, [fp, #20]
   4d7c8:	sub	r0, r0, #1
   4d7cc:	str	r0, [sp, #48]	; 0x30
   4d7d0:	orr	r0, r2, #4
   4d7d4:	str	r0, [sp, #40]	; 0x28
   4d7d8:	add	lr, r1, #4
   4d7dc:	sub	r1, fp, #176	; 0xb0
   4d7e0:	orr	r1, r1, #4
   4d7e4:	str	r1, [sp, #84]	; 0x54
   4d7e8:	ldr	r1, [sp, #72]	; 0x48
   4d7ec:	and	r0, r1, #1
   4d7f0:	sub	r8, r1, r0
   4d7f4:	str	r0, [sp, #52]	; 0x34
   4d7f8:	lsl	r0, r1, #3
   4d7fc:	str	r0, [sp, #60]	; 0x3c
   4d800:	ldr	r0, [sp, #88]	; 0x58
   4d804:	str	r0, [sp, #80]	; 0x50
   4d808:	b	4d848 <GetDataSlab+0x196ec>
   4d80c:	ldr	r0, [sp, #40]	; 0x28
   4d810:	ldr	r0, [r0, r2]
   4d814:	add	ip, ip, r0
   4d818:	add	r7, r0, r7
   4d81c:	ldr	r0, [sp, #60]	; 0x3c
   4d820:	ldr	r1, [sp, #80]	; 0x50
   4d824:	ldr	r6, [sp, #68]	; 0x44
   4d828:	mov	r2, #0
   4d82c:	add	r1, r1, r0
   4d830:	ldr	r0, [sp, #76]	; 0x4c
   4d834:	str	r1, [sp, #80]	; 0x50
   4d838:	ldr	r1, [sp, #72]	; 0x48
   4d83c:	add	r6, r6, r1
   4d840:	cmp	r6, r0
   4d844:	bge	5b6a0 <GetDataSlab+0x27544>
   4d848:	ldr	r0, [fp, #12]
   4d84c:	cmp	r1, #1
   4d850:	ldr	r2, [r0]
   4d854:	add	r5, ip, r2
   4d858:	blt	4d8d8 <GetDataSlab+0x1977c>
   4d85c:	mov	r0, #0
   4d860:	cmp	r1, #1
   4d864:	beq	4d8a4 <GetDataSlab+0x19748>
   4d868:	ldr	r1, [sp, #80]	; 0x50
   4d86c:	mov	r0, #0
   4d870:	ldrsb	r3, [r5]
   4d874:	add	r0, r0, #2
   4d878:	cmp	r8, r0
   4d87c:	str	r3, [r1]
   4d880:	asr	r3, r3, #31
   4d884:	str	r3, [r1, #4]
   4d888:	ldrsb	r3, [r5, r9]!
   4d88c:	add	r5, r5, r9
   4d890:	str	r3, [r1, #8]
   4d894:	asr	r3, r3, #31
   4d898:	str	r3, [r1, #12]
   4d89c:	add	r1, r1, #16
   4d8a0:	bne	4d870 <GetDataSlab+0x19714>
   4d8a4:	ldr	r1, [sp, #56]	; 0x38
   4d8a8:	ldr	r3, [sp, #52]	; 0x34
   4d8ac:	add	r1, r1, r7
   4d8b0:	cmp	r3, #0
   4d8b4:	beq	4d8d0 <GetDataSlab+0x19774>
   4d8b8:	ldr	r3, [sp, #88]	; 0x58
   4d8bc:	ldrsb	r7, [r5], r9
   4d8c0:	add	r3, r3, r6, lsl #3
   4d8c4:	str	r7, [r3, r0, lsl #3]!
   4d8c8:	asr	r0, r7, #31
   4d8cc:	str	r0, [r3, #4]
   4d8d0:	add	r0, r1, r2
   4d8d4:	b	4d8dc <GetDataSlab+0x19780>
   4d8d8:	add	r0, r2, r7
   4d8dc:	ldr	r1, [sp, #64]	; 0x40
   4d8e0:	str	r6, [sp, #68]	; 0x44
   4d8e4:	sub	r1, r1, r2
   4d8e8:	add	r7, r0, r1
   4d8ec:	ldr	r0, [fp, #24]
   4d8f0:	add	ip, r5, r1
   4d8f4:	cmp	r0, #2
   4d8f8:	blt	4d81c <GetDataSlab+0x196c0>
   4d8fc:	ldr	sl, [sp, #48]	; 0x30
   4d900:	ldr	r6, [sp, #44]	; 0x2c
   4d904:	mov	r2, #0
   4d908:	b	4d934 <GetDataSlab+0x197d8>
   4d90c:	sub	r3, fp, #176	; 0xb0
   4d910:	ldr	r5, [r6, r2]
   4d914:	sub	r0, r0, r1
   4d918:	ldr	r3, [r3, r2]
   4d91c:	mla	r0, r5, r3, r0
   4d920:	add	r7, r0, r7
   4d924:	add	ip, ip, r0
   4d928:	subs	sl, sl, #1
   4d92c:	add	r2, r2, #4
   4d930:	beq	4d81c <GetDataSlab+0x196c0>
   4d934:	ldr	r0, [r4, r2]
   4d938:	add	r0, r0, #1
   4d93c:	str	r0, [r4, r2]
   4d940:	ldr	r1, [lr, r2]
   4d944:	sdiv	r3, r0, r1
   4d948:	mls	r0, r3, r1, r0
   4d94c:	cmp	r0, #0
   4d950:	bne	4d80c <GetDataSlab+0x196b0>
   4d954:	mov	r0, #0
   4d958:	str	r0, [r4, r2]
   4d95c:	ldr	r0, [sp, #84]	; 0x54
   4d960:	ldr	r0, [r0, r2]
   4d964:	sdiv	r1, r7, r0
   4d968:	mls	r1, r1, r0, r7
   4d96c:	cmp	r1, #0
   4d970:	bne	4d90c <GetDataSlab+0x197b0>
   4d974:	ldr	r0, [r6, r2]
   4d978:	cmp	r0, #0
   4d97c:	beq	4d928 <GetDataSlab+0x197cc>
   4d980:	sub	r1, fp, #176	; 0xb0
   4d984:	ldr	r1, [r1, r2]
   4d988:	mla	r7, r1, r0, r7
   4d98c:	mla	ip, r1, r0, ip
   4d990:	subs	sl, sl, #1
   4d994:	add	r2, r2, #4
   4d998:	bne	4d934 <GetDataSlab+0x197d8>
   4d99c:	b	4d81c <GetDataSlab+0x196c0>
   4d9a0:	ldr	r0, [sp, #76]	; 0x4c
   4d9a4:	ldr	r1, [sp, #72]	; 0x48
   4d9a8:	ldr	r3, [sp, #48]	; 0x30
   4d9ac:	sub	r2, fp, #96	; 0x60
   4d9b0:	cmp	r0, #1
   4d9b4:	ldr	r0, [fp, #12]
   4d9b8:	blt	5b69c <GetDataSlab+0x27540>
   4d9bc:	mls	r3, r1, r9, r3
   4d9c0:	mul	r1, r1, r9
   4d9c4:	add	r0, r0, #4
   4d9c8:	mov	r6, #0
   4d9cc:	str	r0, [sp, #44]	; 0x2c
   4d9d0:	ldr	r0, [fp, #24]
   4d9d4:	str	r1, [sp, #56]	; 0x38
   4d9d8:	sub	r1, fp, #136	; 0x88
   4d9dc:	str	r3, [sp, #64]	; 0x40
   4d9e0:	orr	r4, r1, #4
   4d9e4:	ldr	r1, [fp, #20]
   4d9e8:	sub	r0, r0, #1
   4d9ec:	str	r0, [sp, #48]	; 0x30
   4d9f0:	orr	r0, r2, #4
   4d9f4:	str	r0, [sp, #40]	; 0x28
   4d9f8:	add	lr, r1, #4
   4d9fc:	sub	r1, fp, #176	; 0xb0
   4da00:	orr	r1, r1, #4
   4da04:	str	r1, [sp, #84]	; 0x54
   4da08:	ldr	r1, [sp, #72]	; 0x48
   4da0c:	and	r0, r1, #1
   4da10:	sub	r8, r1, r0
   4da14:	str	r0, [sp, #52]	; 0x34
   4da18:	lsl	r0, r1, #3
   4da1c:	str	r0, [sp, #60]	; 0x3c
   4da20:	ldr	r0, [sp, #88]	; 0x58
   4da24:	str	r0, [sp, #80]	; 0x50
   4da28:	b	4da68 <GetDataSlab+0x1990c>
   4da2c:	ldr	r0, [sp, #40]	; 0x28
   4da30:	ldr	r0, [r0, r2]
   4da34:	add	ip, ip, r0
   4da38:	add	r7, r0, r7
   4da3c:	ldr	r0, [sp, #60]	; 0x3c
   4da40:	ldr	r1, [sp, #80]	; 0x50
   4da44:	ldr	r6, [sp, #68]	; 0x44
   4da48:	mov	r2, #0
   4da4c:	add	r1, r1, r0
   4da50:	ldr	r0, [sp, #76]	; 0x4c
   4da54:	str	r1, [sp, #80]	; 0x50
   4da58:	ldr	r1, [sp, #72]	; 0x48
   4da5c:	add	r6, r6, r1
   4da60:	cmp	r6, r0
   4da64:	bge	5b6a0 <GetDataSlab+0x27544>
   4da68:	ldr	r0, [fp, #12]
   4da6c:	cmp	r1, #1
   4da70:	ldr	r2, [r0]
   4da74:	add	r5, ip, r2
   4da78:	blt	4daf8 <GetDataSlab+0x1999c>
   4da7c:	mov	r0, #0
   4da80:	cmp	r1, #1
   4da84:	beq	4dac4 <GetDataSlab+0x19968>
   4da88:	ldr	r1, [sp, #80]	; 0x50
   4da8c:	mov	r0, #0
   4da90:	ldrsb	r3, [r5]
   4da94:	add	r0, r0, #2
   4da98:	cmp	r8, r0
   4da9c:	str	r3, [r1]
   4daa0:	asr	r3, r3, #31
   4daa4:	str	r3, [r1, #4]
   4daa8:	ldrsb	r3, [r5, r9]!
   4daac:	add	r5, r5, r9
   4dab0:	str	r3, [r1, #8]
   4dab4:	asr	r3, r3, #31
   4dab8:	str	r3, [r1, #12]
   4dabc:	add	r1, r1, #16
   4dac0:	bne	4da90 <GetDataSlab+0x19934>
   4dac4:	ldr	r1, [sp, #56]	; 0x38
   4dac8:	ldr	r3, [sp, #52]	; 0x34
   4dacc:	add	r1, r1, r7
   4dad0:	cmp	r3, #0
   4dad4:	beq	4daf0 <GetDataSlab+0x19994>
   4dad8:	ldr	r3, [sp, #88]	; 0x58
   4dadc:	ldrsb	r7, [r5], r9
   4dae0:	add	r3, r3, r6, lsl #3
   4dae4:	str	r7, [r3, r0, lsl #3]!
   4dae8:	asr	r0, r7, #31
   4daec:	str	r0, [r3, #4]
   4daf0:	add	r0, r1, r2
   4daf4:	b	4dafc <GetDataSlab+0x199a0>
   4daf8:	add	r0, r2, r7
   4dafc:	ldr	r1, [sp, #64]	; 0x40
   4db00:	str	r6, [sp, #68]	; 0x44
   4db04:	sub	r1, r1, r2
   4db08:	add	r7, r0, r1
   4db0c:	ldr	r0, [fp, #24]
   4db10:	add	ip, r5, r1
   4db14:	cmp	r0, #2
   4db18:	blt	4da3c <GetDataSlab+0x198e0>
   4db1c:	ldr	sl, [sp, #48]	; 0x30
   4db20:	ldr	r6, [sp, #44]	; 0x2c
   4db24:	mov	r2, #0
   4db28:	b	4db54 <GetDataSlab+0x199f8>
   4db2c:	sub	r3, fp, #176	; 0xb0
   4db30:	ldr	r5, [r6, r2]
   4db34:	sub	r0, r0, r1
   4db38:	ldr	r3, [r3, r2]
   4db3c:	mla	r0, r5, r3, r0
   4db40:	add	r7, r0, r7
   4db44:	add	ip, ip, r0
   4db48:	subs	sl, sl, #1
   4db4c:	add	r2, r2, #4
   4db50:	beq	4da3c <GetDataSlab+0x198e0>
   4db54:	ldr	r0, [r4, r2]
   4db58:	add	r0, r0, #1
   4db5c:	str	r0, [r4, r2]
   4db60:	ldr	r1, [lr, r2]
   4db64:	sdiv	r3, r0, r1
   4db68:	mls	r0, r3, r1, r0
   4db6c:	cmp	r0, #0
   4db70:	bne	4da2c <GetDataSlab+0x198d0>
   4db74:	mov	r0, #0
   4db78:	str	r0, [r4, r2]
   4db7c:	ldr	r0, [sp, #84]	; 0x54
   4db80:	ldr	r0, [r0, r2]
   4db84:	sdiv	r1, r7, r0
   4db88:	mls	r1, r1, r0, r7
   4db8c:	cmp	r1, #0
   4db90:	bne	4db2c <GetDataSlab+0x199d0>
   4db94:	ldr	r0, [r6, r2]
   4db98:	cmp	r0, #0
   4db9c:	beq	4db48 <GetDataSlab+0x199ec>
   4dba0:	sub	r1, fp, #176	; 0xb0
   4dba4:	ldr	r1, [r1, r2]
   4dba8:	mla	r7, r1, r0, r7
   4dbac:	mla	ip, r1, r0, ip
   4dbb0:	subs	sl, sl, #1
   4dbb4:	add	r2, r2, #4
   4dbb8:	bne	4db54 <GetDataSlab+0x199f8>
   4dbbc:	b	4da3c <GetDataSlab+0x198e0>
   4dbc0:	ldr	r0, [sp, #76]	; 0x4c
   4dbc4:	cmp	r0, #1
   4dbc8:	ldr	r0, [fp, #20]
   4dbcc:	blt	5b69c <GetDataSlab+0x27540>
   4dbd0:	add	r6, r0, #4
   4dbd4:	orr	r0, ip, #4
   4dbd8:	ldr	r2, [sp, #72]	; 0x48
   4dbdc:	ldr	r1, [sp, #40]	; 0x28
   4dbe0:	str	r0, [sp, #84]	; 0x54
   4dbe4:	ldr	r0, [fp, #12]
   4dbe8:	mls	r1, r2, sl, r1
   4dbec:	add	lr, r0, #4
   4dbf0:	ldr	r0, [fp, #24]
   4dbf4:	str	r1, [sp, #64]	; 0x40
   4dbf8:	mul	r1, r2, sl
   4dbfc:	sub	r0, r0, #1
   4dc00:	str	r0, [sp, #48]	; 0x30
   4dc04:	sub	r0, fp, #96	; 0x60
   4dc08:	str	r1, [sp, #56]	; 0x38
   4dc0c:	sub	r1, fp, #136	; 0x88
   4dc10:	orr	r0, r0, #4
   4dc14:	orr	r4, r1, #4
   4dc18:	mov	r1, r2
   4dc1c:	str	r0, [sp, #44]	; 0x2c
   4dc20:	and	r0, r2, #1
   4dc24:	sub	r9, r2, r0
   4dc28:	str	r0, [sp, #52]	; 0x34
   4dc2c:	lsl	r0, r2, #3
   4dc30:	str	r0, [sp, #60]	; 0x3c
   4dc34:	ldr	r0, [sp, #88]	; 0x58
   4dc38:	add	r0, r0, #8
   4dc3c:	str	r0, [sp, #80]	; 0x50
   4dc40:	mov	r0, #0
   4dc44:	str	r0, [sp, #68]	; 0x44
   4dc48:	b	4dc8c <GetDataSlab+0x19b30>
   4dc4c:	ldr	r0, [sp, #44]	; 0x2c
   4dc50:	ldr	r0, [r0, r2]
   4dc54:	add	r8, r8, r0
   4dc58:	add	r5, r0, r5
   4dc5c:	ldr	r0, [sp, #60]	; 0x3c
   4dc60:	ldr	r1, [sp, #80]	; 0x50
   4dc64:	ldr	r3, [sp, #68]	; 0x44
   4dc68:	mov	r2, #0
   4dc6c:	add	r1, r1, r0
   4dc70:	ldr	r0, [sp, #76]	; 0x4c
   4dc74:	str	r1, [sp, #80]	; 0x50
   4dc78:	ldr	r1, [sp, #72]	; 0x48
   4dc7c:	add	r3, r3, r1
   4dc80:	cmp	r3, r0
   4dc84:	str	r3, [sp, #68]	; 0x44
   4dc88:	bge	5b6a0 <GetDataSlab+0x27544>
   4dc8c:	ldr	r0, [fp, #12]
   4dc90:	cmp	r1, #1
   4dc94:	ldr	r2, [r0]
   4dc98:	add	r7, r8, r2
   4dc9c:	blt	4dcb4 <GetDataSlab+0x19b58>
   4dca0:	mov	r0, #0
   4dca4:	cmp	r1, #1
   4dca8:	bne	4dcbc <GetDataSlab+0x19b60>
   4dcac:	ldr	ip, [sp, #88]	; 0x58
   4dcb0:	b	4dcfc <GetDataSlab+0x19ba0>
   4dcb4:	add	r0, r2, r5
   4dcb8:	b	4dd30 <GetDataSlab+0x19bd4>
   4dcbc:	ldr	r1, [sp, #80]	; 0x50
   4dcc0:	ldr	ip, [sp, #88]	; 0x58
   4dcc4:	mov	r0, #0
   4dcc8:	ldrb	r3, [r7]
   4dccc:	add	r0, r0, #2
   4dcd0:	cmp	r9, r0
   4dcd4:	vmov	s0, r3
   4dcd8:	vcvt.f64.u32	d16, s0
   4dcdc:	vstr	d16, [r1, #-8]
   4dce0:	ldrb	r3, [r7, sl]!
   4dce4:	add	r7, r7, sl
   4dce8:	vmov	s0, r3
   4dcec:	vcvt.f64.u32	d16, s0
   4dcf0:	vstr	d16, [r1]
   4dcf4:	add	r1, r1, #16
   4dcf8:	bne	4dcc8 <GetDataSlab+0x19b6c>
   4dcfc:	ldr	r1, [sp, #56]	; 0x38
   4dd00:	ldr	r3, [sp, #52]	; 0x34
   4dd04:	add	r1, r1, r5
   4dd08:	cmp	r3, #0
   4dd0c:	beq	4dd2c <GetDataSlab+0x19bd0>
   4dd10:	ldr	r3, [sp, #68]	; 0x44
   4dd14:	add	r3, ip, r3, lsl #3
   4dd18:	add	r0, r3, r0, lsl #3
   4dd1c:	ldrb	r3, [r7], sl
   4dd20:	vmov	s0, r3
   4dd24:	vcvt.f64.u32	d16, s0
   4dd28:	vstr	d16, [r0]
   4dd2c:	add	r0, r1, r2
   4dd30:	ldr	r1, [sp, #64]	; 0x40
   4dd34:	sub	r1, r1, r2
   4dd38:	add	r5, r0, r1
   4dd3c:	ldr	r0, [fp, #24]
   4dd40:	add	r8, r7, r1
   4dd44:	cmp	r0, #2
   4dd48:	blt	4dc5c <GetDataSlab+0x19b00>
   4dd4c:	ldr	ip, [sp, #48]	; 0x30
   4dd50:	mov	r2, #0
   4dd54:	b	4dd80 <GetDataSlab+0x19c24>
   4dd58:	sub	r3, fp, #176	; 0xb0
   4dd5c:	ldr	r7, [lr, r2]
   4dd60:	sub	r0, r0, r1
   4dd64:	ldr	r3, [r3, r2]
   4dd68:	mla	r0, r7, r3, r0
   4dd6c:	add	r5, r0, r5
   4dd70:	add	r8, r8, r0
   4dd74:	subs	ip, ip, #1
   4dd78:	add	r2, r2, #4
   4dd7c:	beq	4dc5c <GetDataSlab+0x19b00>
   4dd80:	ldr	r0, [r4, r2]
   4dd84:	add	r0, r0, #1
   4dd88:	str	r0, [r4, r2]
   4dd8c:	ldr	r1, [r6, r2]
   4dd90:	sdiv	r3, r0, r1
   4dd94:	mls	r0, r3, r1, r0
   4dd98:	cmp	r0, #0
   4dd9c:	bne	4dc4c <GetDataSlab+0x19af0>
   4dda0:	mov	r0, #0
   4dda4:	str	r0, [r4, r2]
   4dda8:	ldr	r0, [sp, #84]	; 0x54
   4ddac:	ldr	r0, [r0, r2]
   4ddb0:	sdiv	r1, r5, r0
   4ddb4:	mls	r1, r1, r0, r5
   4ddb8:	cmp	r1, #0
   4ddbc:	bne	4dd58 <GetDataSlab+0x19bfc>
   4ddc0:	ldr	r0, [lr, r2]
   4ddc4:	cmp	r0, #0
   4ddc8:	beq	4dd74 <GetDataSlab+0x19c18>
   4ddcc:	sub	r1, fp, #176	; 0xb0
   4ddd0:	ldr	r1, [r1, r2]
   4ddd4:	mla	r5, r1, r0, r5
   4ddd8:	mla	r8, r1, r0, r8
   4dddc:	subs	ip, ip, #1
   4dde0:	add	r2, r2, #4
   4dde4:	bne	4dd80 <GetDataSlab+0x19c24>
   4dde8:	b	4dc5c <GetDataSlab+0x19b00>
   4ddec:	ldr	r0, [sp, #76]	; 0x4c
   4ddf0:	ldr	r2, [fp, #12]
   4ddf4:	sub	r3, fp, #96	; 0x60
   4ddf8:	cmp	r0, #1
   4ddfc:	ldr	r0, [sp, #60]	; 0x3c
   4de00:	blt	5b69c <GetDataSlab+0x27540>
   4de04:	mov	r7, r3
   4de08:	ldr	r3, [sp, #72]	; 0x48
   4de0c:	ldr	r5, [r2], #4
   4de10:	lsl	sl, r6, #1
   4de14:	lsl	lr, r6, #2
   4de18:	str	r2, [sp, #92]	; 0x5c
   4de1c:	mls	r0, r3, r6, r0
   4de20:	str	r5, [sp, #60]	; 0x3c
   4de24:	sub	r0, r0, r5
   4de28:	str	r0, [sp, #56]	; 0x38
   4de2c:	sub	r0, fp, #136	; 0x88
   4de30:	orr	r4, r0, #4
   4de34:	ldr	r0, [fp, #20]
   4de38:	add	r0, r0, #4
   4de3c:	str	r0, [sp, #84]	; 0x54
   4de40:	orr	r0, ip, #4
   4de44:	str	r0, [sp, #80]	; 0x50
   4de48:	ldr	r0, [fp, #24]
   4de4c:	sub	r0, r0, #1
   4de50:	str	r0, [sp, #40]	; 0x28
   4de54:	orr	r0, r7, #4
   4de58:	str	r0, [sp, #36]	; 0x24
   4de5c:	mla	r0, r3, r6, r5
   4de60:	str	r0, [sp, #48]	; 0x30
   4de64:	and	r0, r3, #1
   4de68:	str	r0, [sp, #44]	; 0x2c
   4de6c:	sub	r8, r3, r0
   4de70:	lsl	r0, r3, #3
   4de74:	str	r0, [sp, #52]	; 0x34
   4de78:	ldr	r0, [sp, #88]	; 0x58
   4de7c:	add	r5, r0, #8
   4de80:	mov	r0, #0
   4de84:	str	r0, [sp, #68]	; 0x44
   4de88:	b	4dec8 <GetDataSlab+0x19d6c>
   4de8c:	ldr	r0, [sp, #36]	; 0x24
   4de90:	ldr	r0, [r0, r2]
   4de94:	add	r9, r9, r0, lsl #1
   4de98:	add	r1, r0, r1
   4de9c:	ldr	r0, [sp, #52]	; 0x34
   4dea0:	ldr	r5, [sp, #64]	; 0x40
   4dea4:	ldr	r3, [sp, #72]	; 0x48
   4dea8:	ldr	r7, [sp, #68]	; 0x44
   4deac:	mov	r2, #0
   4deb0:	add	r5, r5, r0
   4deb4:	ldr	r0, [sp, #76]	; 0x4c
   4deb8:	add	r7, r7, r3
   4debc:	str	r7, [sp, #68]	; 0x44
   4dec0:	cmp	r7, r0
   4dec4:	bge	5b6a0 <GetDataSlab+0x27544>
   4dec8:	ldr	ip, [sp, #60]	; 0x3c
   4decc:	cmp	r3, #1
   4ded0:	str	r5, [sp, #64]	; 0x40
   4ded4:	add	r2, r9, ip, lsl #1
   4ded8:	blt	4df54 <GetDataSlab+0x19df8>
   4dedc:	mov	r3, #0
   4dee0:	beq	4df20 <GetDataSlab+0x19dc4>
   4dee4:	mov	r3, #0
   4dee8:	ldrsh	r7, [r2]
   4deec:	add	r3, r3, #2
   4def0:	cmp	r8, r3
   4def4:	vmov	s0, r7
   4def8:	add	r7, r2, sl
   4defc:	add	r2, r2, lr
   4df00:	vcvt.f64.s32	d16, s0
   4df04:	vstr	d16, [r5, #-8]
   4df08:	ldrsh	r7, [r7]
   4df0c:	vmov	s0, r7
   4df10:	vcvt.f64.s32	d16, s0
   4df14:	vstr	d16, [r5]
   4df18:	add	r5, r5, #16
   4df1c:	bne	4dee8 <GetDataSlab+0x19d8c>
   4df20:	ldr	r0, [sp, #44]	; 0x2c
   4df24:	ldr	ip, [sp, #48]	; 0x30
   4df28:	cmp	r0, #0
   4df2c:	beq	4df54 <GetDataSlab+0x19df8>
   4df30:	ldr	r0, [sp, #88]	; 0x58
   4df34:	ldr	r7, [sp, #68]	; 0x44
   4df38:	add	r7, r0, r7, lsl #3
   4df3c:	add	r3, r7, r3, lsl #3
   4df40:	ldrsh	r7, [r2], sl
   4df44:	vmov	s0, r7
   4df48:	vcvt.f64.s32	d16, s0
   4df4c:	ldr	ip, [sp, #48]	; 0x30
   4df50:	vstr	d16, [r3]
   4df54:	ldr	r0, [sp, #56]	; 0x38
   4df58:	add	r1, ip, r1
   4df5c:	add	r9, r2, r0, lsl #1
   4df60:	add	r1, r1, r0
   4df64:	ldr	r0, [fp, #24]
   4df68:	cmp	r0, #2
   4df6c:	blt	4de9c <GetDataSlab+0x19d40>
   4df70:	ldr	r3, [sp, #40]	; 0x28
   4df74:	mov	r2, #0
   4df78:	sub	ip, fp, #176	; 0xb0
   4df7c:	b	4dfa8 <GetDataSlab+0x19e4c>
   4df80:	ldr	r0, [sp, #92]	; 0x5c
   4df84:	ldr	r5, [ip, r2]
   4df88:	sub	r7, r6, r7
   4df8c:	ldr	r0, [r0, r2]
   4df90:	mla	r0, r0, r5, r7
   4df94:	add	r1, r0, r1
   4df98:	add	r9, r9, r0, lsl #1
   4df9c:	subs	r3, r3, #1
   4dfa0:	add	r2, r2, #4
   4dfa4:	beq	4de9c <GetDataSlab+0x19d40>
   4dfa8:	ldr	r7, [r4, r2]
   4dfac:	ldr	r0, [sp, #84]	; 0x54
   4dfb0:	add	r7, r7, #1
   4dfb4:	str	r7, [r4, r2]
   4dfb8:	ldr	r6, [r0, r2]
   4dfbc:	sdiv	r5, r7, r6
   4dfc0:	mls	r7, r5, r6, r7
   4dfc4:	cmp	r7, #0
   4dfc8:	bne	4de8c <GetDataSlab+0x19d30>
   4dfcc:	mov	r0, #0
   4dfd0:	str	r0, [r4, r2]
   4dfd4:	ldr	r0, [sp, #80]	; 0x50
   4dfd8:	ldr	r6, [r0, r2]
   4dfdc:	sdiv	r7, r1, r6
   4dfe0:	mls	r7, r7, r6, r1
   4dfe4:	cmp	r7, #0
   4dfe8:	bne	4df80 <GetDataSlab+0x19e24>
   4dfec:	ldr	r0, [sp, #92]	; 0x5c
   4dff0:	ldr	r7, [r0, r2]
   4dff4:	cmp	r7, #0
   4dff8:	beq	4df9c <GetDataSlab+0x19e40>
   4dffc:	ldr	r0, [ip, r2]
   4e000:	mla	r1, r0, r7, r1
   4e004:	mul	r0, r0, r7
   4e008:	b	4df98 <GetDataSlab+0x19e3c>
   4e00c:	ldr	r0, [sp, #76]	; 0x4c
   4e010:	ldr	r2, [fp, #12]
   4e014:	sub	r3, fp, #96	; 0x60
   4e018:	cmp	r0, #1
   4e01c:	ldr	r0, [sp, #60]	; 0x3c
   4e020:	blt	5b69c <GetDataSlab+0x27540>
   4e024:	mov	r7, r3
   4e028:	ldr	r3, [sp, #72]	; 0x48
   4e02c:	ldr	r5, [r2], #4
   4e030:	lsl	sl, r6, #1
   4e034:	lsl	lr, r6, #2
   4e038:	str	r2, [sp, #92]	; 0x5c
   4e03c:	mls	r0, r3, r6, r0
   4e040:	str	r5, [sp, #60]	; 0x3c
   4e044:	sub	r0, r0, r5
   4e048:	str	r0, [sp, #56]	; 0x38
   4e04c:	sub	r0, fp, #136	; 0x88
   4e050:	orr	r4, r0, #4
   4e054:	ldr	r0, [fp, #20]
   4e058:	add	r0, r0, #4
   4e05c:	str	r0, [sp, #84]	; 0x54
   4e060:	orr	r0, ip, #4
   4e064:	str	r0, [sp, #80]	; 0x50
   4e068:	ldr	r0, [fp, #24]
   4e06c:	sub	r0, r0, #1
   4e070:	str	r0, [sp, #40]	; 0x28
   4e074:	orr	r0, r7, #4
   4e078:	str	r0, [sp, #36]	; 0x24
   4e07c:	mla	r0, r3, r6, r5
   4e080:	str	r0, [sp, #48]	; 0x30
   4e084:	and	r0, r3, #1
   4e088:	str	r0, [sp, #44]	; 0x2c
   4e08c:	sub	r8, r3, r0
   4e090:	lsl	r0, r3, #3
   4e094:	str	r0, [sp, #52]	; 0x34
   4e098:	ldr	r0, [sp, #88]	; 0x58
   4e09c:	add	r5, r0, #8
   4e0a0:	mov	r0, #0
   4e0a4:	str	r0, [sp, #68]	; 0x44
   4e0a8:	b	4e0e8 <GetDataSlab+0x19f8c>
   4e0ac:	ldr	r0, [sp, #36]	; 0x24
   4e0b0:	ldr	r0, [r0, r2]
   4e0b4:	add	r9, r9, r0, lsl #1
   4e0b8:	add	r1, r0, r1
   4e0bc:	ldr	r0, [sp, #52]	; 0x34
   4e0c0:	ldr	r5, [sp, #64]	; 0x40
   4e0c4:	ldr	r3, [sp, #72]	; 0x48
   4e0c8:	ldr	r7, [sp, #68]	; 0x44
   4e0cc:	mov	r2, #0
   4e0d0:	add	r5, r5, r0
   4e0d4:	ldr	r0, [sp, #76]	; 0x4c
   4e0d8:	add	r7, r7, r3
   4e0dc:	str	r7, [sp, #68]	; 0x44
   4e0e0:	cmp	r7, r0
   4e0e4:	bge	5b6a0 <GetDataSlab+0x27544>
   4e0e8:	ldr	ip, [sp, #60]	; 0x3c
   4e0ec:	cmp	r3, #1
   4e0f0:	str	r5, [sp, #64]	; 0x40
   4e0f4:	add	r2, r9, ip, lsl #1
   4e0f8:	blt	4e174 <GetDataSlab+0x1a018>
   4e0fc:	mov	r3, #0
   4e100:	beq	4e140 <GetDataSlab+0x19fe4>
   4e104:	mov	r3, #0
   4e108:	ldrh	r7, [r2]
   4e10c:	add	r3, r3, #2
   4e110:	cmp	r8, r3
   4e114:	vmov	s0, r7
   4e118:	add	r7, r2, sl
   4e11c:	add	r2, r2, lr
   4e120:	vcvt.f64.u32	d16, s0
   4e124:	vstr	d16, [r5, #-8]
   4e128:	ldrh	r7, [r7]
   4e12c:	vmov	s0, r7
   4e130:	vcvt.f64.u32	d16, s0
   4e134:	vstr	d16, [r5]
   4e138:	add	r5, r5, #16
   4e13c:	bne	4e108 <GetDataSlab+0x19fac>
   4e140:	ldr	r0, [sp, #44]	; 0x2c
   4e144:	ldr	ip, [sp, #48]	; 0x30
   4e148:	cmp	r0, #0
   4e14c:	beq	4e174 <GetDataSlab+0x1a018>
   4e150:	ldr	r0, [sp, #88]	; 0x58
   4e154:	ldr	r7, [sp, #68]	; 0x44
   4e158:	add	r7, r0, r7, lsl #3
   4e15c:	add	r3, r7, r3, lsl #3
   4e160:	ldrh	r7, [r2], sl
   4e164:	vmov	s0, r7
   4e168:	vcvt.f64.u32	d16, s0
   4e16c:	ldr	ip, [sp, #48]	; 0x30
   4e170:	vstr	d16, [r3]
   4e174:	ldr	r0, [sp, #56]	; 0x38
   4e178:	add	r1, ip, r1
   4e17c:	add	r9, r2, r0, lsl #1
   4e180:	add	r1, r1, r0
   4e184:	ldr	r0, [fp, #24]
   4e188:	cmp	r0, #2
   4e18c:	blt	4e0bc <GetDataSlab+0x19f60>
   4e190:	ldr	r3, [sp, #40]	; 0x28
   4e194:	mov	r2, #0
   4e198:	sub	ip, fp, #176	; 0xb0
   4e19c:	b	4e1c8 <GetDataSlab+0x1a06c>
   4e1a0:	ldr	r0, [sp, #92]	; 0x5c
   4e1a4:	ldr	r5, [ip, r2]
   4e1a8:	sub	r7, r6, r7
   4e1ac:	ldr	r0, [r0, r2]
   4e1b0:	mla	r0, r0, r5, r7
   4e1b4:	add	r1, r0, r1
   4e1b8:	add	r9, r9, r0, lsl #1
   4e1bc:	subs	r3, r3, #1
   4e1c0:	add	r2, r2, #4
   4e1c4:	beq	4e0bc <GetDataSlab+0x19f60>
   4e1c8:	ldr	r7, [r4, r2]
   4e1cc:	ldr	r0, [sp, #84]	; 0x54
   4e1d0:	add	r7, r7, #1
   4e1d4:	str	r7, [r4, r2]
   4e1d8:	ldr	r6, [r0, r2]
   4e1dc:	sdiv	r5, r7, r6
   4e1e0:	mls	r7, r5, r6, r7
   4e1e4:	cmp	r7, #0
   4e1e8:	bne	4e0ac <GetDataSlab+0x19f50>
   4e1ec:	mov	r0, #0
   4e1f0:	str	r0, [r4, r2]
   4e1f4:	ldr	r0, [sp, #80]	; 0x50
   4e1f8:	ldr	r6, [r0, r2]
   4e1fc:	sdiv	r7, r1, r6
   4e200:	mls	r7, r7, r6, r1
   4e204:	cmp	r7, #0
   4e208:	bne	4e1a0 <GetDataSlab+0x1a044>
   4e20c:	ldr	r0, [sp, #92]	; 0x5c
   4e210:	ldr	r7, [r0, r2]
   4e214:	cmp	r7, #0
   4e218:	beq	4e1bc <GetDataSlab+0x1a060>
   4e21c:	ldr	r0, [ip, r2]
   4e220:	mla	r1, r0, r7, r1
   4e224:	mul	r0, r0, r7
   4e228:	b	4e1b8 <GetDataSlab+0x1a05c>
   4e22c:	ldr	r0, [sp, #76]	; 0x4c
   4e230:	ldr	r1, [sp, #68]	; 0x44
   4e234:	cmp	r0, #1
   4e238:	ldr	r0, [fp, #20]
   4e23c:	blt	5b69c <GetDataSlab+0x27540>
   4e240:	ldr	r2, [sp, #52]	; 0x34
   4e244:	add	sl, r0, #4
   4e248:	mov	r0, r8
   4e24c:	add	r0, r0, #8
   4e250:	str	r0, [sp, #80]	; 0x50
   4e254:	mov	r0, #0
   4e258:	str	r0, [sp, #72]	; 0x48
   4e25c:	mls	r1, r1, r5, r2
   4e260:	str	r1, [sp, #64]	; 0x40
   4e264:	sub	r1, fp, #136	; 0x88
   4e268:	orr	r6, r1, #4
   4e26c:	orr	r1, ip, #4
   4e270:	lsl	ip, r5, #3
   4e274:	str	r1, [sp, #84]	; 0x54
   4e278:	ldr	r1, [fp, #12]
   4e27c:	add	r8, r1, #4
   4e280:	ldr	r1, [fp, #24]
   4e284:	sub	r1, r1, #1
   4e288:	str	r1, [sp, #44]	; 0x2c
   4e28c:	sub	r1, fp, #96	; 0x60
   4e290:	orr	r1, r1, #4
   4e294:	str	r1, [sp, #40]	; 0x28
   4e298:	ldr	r1, [sp, #68]	; 0x44
   4e29c:	mul	r2, r1, r5
   4e2a0:	str	r2, [sp, #52]	; 0x34
   4e2a4:	and	r2, r1, #1
   4e2a8:	sub	lr, r1, r2
   4e2ac:	str	r2, [sp, #48]	; 0x30
   4e2b0:	lsl	r2, r1, #3
   4e2b4:	str	r2, [sp, #60]	; 0x3c
   4e2b8:	b	4e2fc <GetDataSlab+0x1a1a0>
   4e2bc:	ldr	r0, [sp, #40]	; 0x28
   4e2c0:	ldr	r0, [r0, r2]
   4e2c4:	add	r4, r4, r0, lsl #2
   4e2c8:	add	r3, r0, r3
   4e2cc:	ldr	r0, [sp, #60]	; 0x3c
   4e2d0:	ldr	r1, [sp, #80]	; 0x50
   4e2d4:	ldr	r5, [sp, #72]	; 0x48
   4e2d8:	mov	r2, #0
   4e2dc:	add	r1, r1, r0
   4e2e0:	ldr	r0, [sp, #76]	; 0x4c
   4e2e4:	str	r1, [sp, #80]	; 0x50
   4e2e8:	ldr	r1, [sp, #68]	; 0x44
   4e2ec:	add	r5, r5, r1
   4e2f0:	cmp	r5, r0
   4e2f4:	str	r5, [sp, #72]	; 0x48
   4e2f8:	bge	5b6a0 <GetDataSlab+0x27544>
   4e2fc:	ldr	r0, [fp, #12]
   4e300:	cmp	r1, #1
   4e304:	ldr	r2, [r0]
   4e308:	add	r5, r4, r2, lsl #2
   4e30c:	blt	4e394 <GetDataSlab+0x1a238>
   4e310:	ldr	r4, [sp, #56]	; 0x38
   4e314:	mov	r7, #0
   4e318:	cmp	r1, #1
   4e31c:	beq	4e358 <GetDataSlab+0x1a1fc>
   4e320:	ldr	r0, [sp, #80]	; 0x50
   4e324:	mov	r7, #0
   4e328:	vldr	s0, [r5]
   4e32c:	add	r1, r5, r4, lsl #2
   4e330:	add	r7, r7, #2
   4e334:	add	r5, r5, ip
   4e338:	cmp	lr, r7
   4e33c:	vcvt.f64.s32	d16, s0
   4e340:	vstr	d16, [r0, #-8]
   4e344:	vldr	s0, [r1]
   4e348:	vcvt.f64.s32	d16, s0
   4e34c:	vstr	d16, [r0]
   4e350:	add	r0, r0, #16
   4e354:	bne	4e328 <GetDataSlab+0x1a1cc>
   4e358:	ldr	r0, [sp, #52]	; 0x34
   4e35c:	ldr	r1, [sp, #48]	; 0x30
   4e360:	add	r0, r0, r3
   4e364:	cmp	r1, #0
   4e368:	beq	4e38c <GetDataSlab+0x1a230>
   4e36c:	ldr	r1, [sp, #88]	; 0x58
   4e370:	ldr	r3, [sp, #72]	; 0x48
   4e374:	add	r1, r1, r3, lsl #3
   4e378:	ldr	r3, [r5], r4, lsl #2
   4e37c:	add	r1, r1, r7, lsl #3
   4e380:	vmov	s0, r3
   4e384:	vcvt.f64.s32	d16, s0
   4e388:	vstr	d16, [r1]
   4e38c:	add	r0, r0, r2
   4e390:	b	4e398 <GetDataSlab+0x1a23c>
   4e394:	add	r0, r2, r3
   4e398:	ldr	r1, [sp, #64]	; 0x40
   4e39c:	sub	r1, r1, r2
   4e3a0:	add	r3, r0, r1
   4e3a4:	ldr	r0, [fp, #24]
   4e3a8:	add	r4, r5, r1, lsl #2
   4e3ac:	cmp	r0, #2
   4e3b0:	blt	4e2cc <GetDataSlab+0x1a170>
   4e3b4:	ldr	r5, [sp, #44]	; 0x2c
   4e3b8:	mov	r2, #0
   4e3bc:	b	4e3e8 <GetDataSlab+0x1a28c>
   4e3c0:	sub	r1, fp, #176	; 0xb0
   4e3c4:	ldr	r7, [r8, r2]
   4e3c8:	sub	r0, r0, r9
   4e3cc:	ldr	r1, [r1, r2]
   4e3d0:	mla	r0, r7, r1, r0
   4e3d4:	add	r3, r0, r3
   4e3d8:	add	r4, r4, r0, lsl #2
   4e3dc:	subs	r5, r5, #1
   4e3e0:	add	r2, r2, #4
   4e3e4:	beq	4e2cc <GetDataSlab+0x1a170>
   4e3e8:	ldr	r0, [r6, r2]
   4e3ec:	add	r0, r0, #1
   4e3f0:	str	r0, [r6, r2]
   4e3f4:	ldr	r1, [sl, r2]
   4e3f8:	sdiv	r7, r0, r1
   4e3fc:	mls	r0, r7, r1, r0
   4e400:	cmp	r0, #0
   4e404:	bne	4e2bc <GetDataSlab+0x1a160>
   4e408:	mov	r0, #0
   4e40c:	str	r0, [r6, r2]
   4e410:	ldr	r0, [sp, #84]	; 0x54
   4e414:	ldr	r0, [r0, r2]
   4e418:	sdiv	r1, r3, r0
   4e41c:	mls	r9, r1, r0, r3
   4e420:	cmp	r9, #0
   4e424:	bne	4e3c0 <GetDataSlab+0x1a264>
   4e428:	ldr	r0, [r8, r2]
   4e42c:	cmp	r0, #0
   4e430:	beq	4e3dc <GetDataSlab+0x1a280>
   4e434:	sub	r1, fp, #176	; 0xb0
   4e438:	ldr	r1, [r1, r2]
   4e43c:	mla	r3, r1, r0, r3
   4e440:	mul	r0, r1, r0
   4e444:	b	4e3d8 <GetDataSlab+0x1a27c>
   4e448:	ldr	r0, [sp, #76]	; 0x4c
   4e44c:	ldr	r1, [sp, #68]	; 0x44
   4e450:	cmp	r0, #1
   4e454:	ldr	r0, [fp, #20]
   4e458:	blt	5b69c <GetDataSlab+0x27540>
   4e45c:	ldr	r2, [sp, #52]	; 0x34
   4e460:	add	sl, r0, #4
   4e464:	mov	r0, r8
   4e468:	add	r0, r0, #8
   4e46c:	str	r0, [sp, #80]	; 0x50
   4e470:	mov	r0, #0
   4e474:	str	r0, [sp, #72]	; 0x48
   4e478:	mls	r1, r1, r5, r2
   4e47c:	str	r1, [sp, #64]	; 0x40
   4e480:	sub	r1, fp, #136	; 0x88
   4e484:	orr	r6, r1, #4
   4e488:	orr	r1, ip, #4
   4e48c:	lsl	ip, r5, #3
   4e490:	str	r1, [sp, #84]	; 0x54
   4e494:	ldr	r1, [fp, #12]
   4e498:	add	r8, r1, #4
   4e49c:	ldr	r1, [fp, #24]
   4e4a0:	sub	r1, r1, #1
   4e4a4:	str	r1, [sp, #44]	; 0x2c
   4e4a8:	sub	r1, fp, #96	; 0x60
   4e4ac:	orr	r1, r1, #4
   4e4b0:	str	r1, [sp, #40]	; 0x28
   4e4b4:	ldr	r1, [sp, #68]	; 0x44
   4e4b8:	mul	r2, r1, r5
   4e4bc:	str	r2, [sp, #52]	; 0x34
   4e4c0:	and	r2, r1, #1
   4e4c4:	sub	lr, r1, r2
   4e4c8:	str	r2, [sp, #48]	; 0x30
   4e4cc:	lsl	r2, r1, #3
   4e4d0:	str	r2, [sp, #60]	; 0x3c
   4e4d4:	b	4e518 <GetDataSlab+0x1a3bc>
   4e4d8:	ldr	r0, [sp, #40]	; 0x28
   4e4dc:	ldr	r0, [r0, r2]
   4e4e0:	add	r4, r4, r0, lsl #2
   4e4e4:	add	r3, r0, r3
   4e4e8:	ldr	r0, [sp, #60]	; 0x3c
   4e4ec:	ldr	r1, [sp, #80]	; 0x50
   4e4f0:	ldr	r5, [sp, #72]	; 0x48
   4e4f4:	mov	r2, #0
   4e4f8:	add	r1, r1, r0
   4e4fc:	ldr	r0, [sp, #76]	; 0x4c
   4e500:	str	r1, [sp, #80]	; 0x50
   4e504:	ldr	r1, [sp, #68]	; 0x44
   4e508:	add	r5, r5, r1
   4e50c:	cmp	r5, r0
   4e510:	str	r5, [sp, #72]	; 0x48
   4e514:	bge	5b6a0 <GetDataSlab+0x27544>
   4e518:	ldr	r0, [fp, #12]
   4e51c:	cmp	r1, #1
   4e520:	ldr	r2, [r0]
   4e524:	add	r5, r4, r2, lsl #2
   4e528:	blt	4e5b0 <GetDataSlab+0x1a454>
   4e52c:	ldr	r4, [sp, #56]	; 0x38
   4e530:	mov	r7, #0
   4e534:	cmp	r1, #1
   4e538:	beq	4e574 <GetDataSlab+0x1a418>
   4e53c:	ldr	r0, [sp, #80]	; 0x50
   4e540:	mov	r7, #0
   4e544:	vldr	s0, [r5]
   4e548:	add	r1, r5, r4, lsl #2
   4e54c:	add	r7, r7, #2
   4e550:	add	r5, r5, ip
   4e554:	cmp	lr, r7
   4e558:	vcvt.f64.u32	d16, s0
   4e55c:	vstr	d16, [r0, #-8]
   4e560:	vldr	s0, [r1]
   4e564:	vcvt.f64.u32	d16, s0
   4e568:	vstr	d16, [r0]
   4e56c:	add	r0, r0, #16
   4e570:	bne	4e544 <GetDataSlab+0x1a3e8>
   4e574:	ldr	r0, [sp, #52]	; 0x34
   4e578:	ldr	r1, [sp, #48]	; 0x30
   4e57c:	add	r0, r0, r3
   4e580:	cmp	r1, #0
   4e584:	beq	4e5a8 <GetDataSlab+0x1a44c>
   4e588:	ldr	r1, [sp, #88]	; 0x58
   4e58c:	ldr	r3, [sp, #72]	; 0x48
   4e590:	add	r1, r1, r3, lsl #3
   4e594:	ldr	r3, [r5], r4, lsl #2
   4e598:	add	r1, r1, r7, lsl #3
   4e59c:	vmov	s0, r3
   4e5a0:	vcvt.f64.u32	d16, s0
   4e5a4:	vstr	d16, [r1]
   4e5a8:	add	r0, r0, r2
   4e5ac:	b	4e5b4 <GetDataSlab+0x1a458>
   4e5b0:	add	r0, r2, r3
   4e5b4:	ldr	r1, [sp, #64]	; 0x40
   4e5b8:	sub	r1, r1, r2
   4e5bc:	add	r3, r0, r1
   4e5c0:	ldr	r0, [fp, #24]
   4e5c4:	add	r4, r5, r1, lsl #2
   4e5c8:	cmp	r0, #2
   4e5cc:	blt	4e4e8 <GetDataSlab+0x1a38c>
   4e5d0:	ldr	r5, [sp, #44]	; 0x2c
   4e5d4:	mov	r2, #0
   4e5d8:	b	4e604 <GetDataSlab+0x1a4a8>
   4e5dc:	sub	r1, fp, #176	; 0xb0
   4e5e0:	ldr	r7, [r8, r2]
   4e5e4:	sub	r0, r0, r9
   4e5e8:	ldr	r1, [r1, r2]
   4e5ec:	mla	r0, r7, r1, r0
   4e5f0:	add	r3, r0, r3
   4e5f4:	add	r4, r4, r0, lsl #2
   4e5f8:	subs	r5, r5, #1
   4e5fc:	add	r2, r2, #4
   4e600:	beq	4e4e8 <GetDataSlab+0x1a38c>
   4e604:	ldr	r0, [r6, r2]
   4e608:	add	r0, r0, #1
   4e60c:	str	r0, [r6, r2]
   4e610:	ldr	r1, [sl, r2]
   4e614:	sdiv	r7, r0, r1
   4e618:	mls	r0, r7, r1, r0
   4e61c:	cmp	r0, #0
   4e620:	bne	4e4d8 <GetDataSlab+0x1a37c>
   4e624:	mov	r0, #0
   4e628:	str	r0, [r6, r2]
   4e62c:	ldr	r0, [sp, #84]	; 0x54
   4e630:	ldr	r0, [r0, r2]
   4e634:	sdiv	r1, r3, r0
   4e638:	mls	r9, r1, r0, r3
   4e63c:	cmp	r9, #0
   4e640:	bne	4e5dc <GetDataSlab+0x1a480>
   4e644:	ldr	r0, [r8, r2]
   4e648:	cmp	r0, #0
   4e64c:	beq	4e5f8 <GetDataSlab+0x1a49c>
   4e650:	sub	r1, fp, #176	; 0xb0
   4e654:	ldr	r1, [r1, r2]
   4e658:	mla	r3, r1, r0, r3
   4e65c:	mul	r0, r1, r0
   4e660:	b	4e5f4 <GetDataSlab+0x1a498>
   4e664:	ldr	r0, [sp, #76]	; 0x4c
   4e668:	ldr	lr, [sp, #64]	; 0x40
   4e66c:	cmp	r0, #1
   4e670:	ldr	r0, [sp, #60]	; 0x3c
   4e674:	blt	5b69c <GetDataSlab+0x27540>
   4e678:	ldr	r2, [sp, #92]	; 0x5c
   4e67c:	ldr	r3, [sp, #40]	; 0x28
   4e680:	ldr	r5, [r2], #4
   4e684:	mls	r0, lr, r3, r0
   4e688:	lsl	sl, r3, #2
   4e68c:	lsl	r8, r3, #3
   4e690:	str	r2, [sp, #92]	; 0x5c
   4e694:	sub	r0, r0, r5
   4e698:	str	r5, [sp, #60]	; 0x3c
   4e69c:	str	r0, [sp, #56]	; 0x38
   4e6a0:	sub	r0, fp, #136	; 0x88
   4e6a4:	orr	r4, r0, #4
   4e6a8:	ldr	r0, [fp, #20]
   4e6ac:	add	r0, r0, #4
   4e6b0:	str	r0, [sp, #84]	; 0x54
   4e6b4:	orr	r0, ip, #4
   4e6b8:	str	r0, [sp, #80]	; 0x50
   4e6bc:	ldr	r0, [fp, #24]
   4e6c0:	sub	r0, r0, #1
   4e6c4:	str	r0, [sp, #36]	; 0x24
   4e6c8:	sub	r0, fp, #96	; 0x60
   4e6cc:	orr	r0, r0, #4
   4e6d0:	str	r0, [sp, #32]
   4e6d4:	mla	r0, lr, r3, r5
   4e6d8:	str	r0, [sp, #48]	; 0x30
   4e6dc:	and	r0, lr, #1
   4e6e0:	sub	ip, lr, r0
   4e6e4:	str	r0, [sp, #44]	; 0x2c
   4e6e8:	lsl	r0, lr, #3
   4e6ec:	str	r0, [sp, #52]	; 0x34
   4e6f0:	ldr	r0, [sp, #88]	; 0x58
   4e6f4:	add	r0, r0, #8
   4e6f8:	str	r0, [sp, #72]	; 0x48
   4e6fc:	mov	r0, #0
   4e700:	str	r0, [sp, #68]	; 0x44
   4e704:	ldr	r0, [sp, #60]	; 0x3c
   4e708:	cmp	lr, #1
   4e70c:	add	r2, r9, r0, lsl #2
   4e710:	bge	4e758 <GetDataSlab+0x1a5fc>
   4e714:	b	4e7d4 <GetDataSlab+0x1a678>
   4e718:	ldr	lr, [sp, #64]	; 0x40
   4e71c:	ldr	r0, [sp, #52]	; 0x34
   4e720:	ldr	r2, [sp, #72]	; 0x48
   4e724:	ldr	r3, [sp, #68]	; 0x44
   4e728:	add	r2, r2, r0
   4e72c:	ldr	r0, [sp, #76]	; 0x4c
   4e730:	add	r3, r3, lr
   4e734:	str	r2, [sp, #72]	; 0x48
   4e738:	mov	r2, #0
   4e73c:	str	r3, [sp, #68]	; 0x44
   4e740:	cmp	r3, r0
   4e744:	bge	5b6a0 <GetDataSlab+0x27544>
   4e748:	ldr	r0, [sp, #60]	; 0x3c
   4e74c:	cmp	lr, #1
   4e750:	add	r2, r9, r0, lsl #2
   4e754:	blt	4e7d4 <GetDataSlab+0x1a678>
   4e758:	mov	r3, #0
   4e75c:	beq	4e798 <GetDataSlab+0x1a63c>
   4e760:	ldr	r5, [sp, #72]	; 0x48
   4e764:	mov	r3, #0
   4e768:	vldr	s0, [r2]
   4e76c:	add	r0, r2, sl
   4e770:	add	r3, r3, #2
   4e774:	add	r2, r2, r8
   4e778:	cmp	ip, r3
   4e77c:	vcvt.f64.f32	d16, s0
   4e780:	vstr	d16, [r5, #-8]
   4e784:	vldr	s0, [r0]
   4e788:	vcvt.f64.f32	d16, s0
   4e78c:	vstr	d16, [r5]
   4e790:	add	r5, r5, #16
   4e794:	bne	4e768 <GetDataSlab+0x1a60c>
   4e798:	ldr	r0, [sp, #44]	; 0x2c
   4e79c:	ldr	lr, [sp, #48]	; 0x30
   4e7a0:	cmp	r0, #0
   4e7a4:	beq	4e7d8 <GetDataSlab+0x1a67c>
   4e7a8:	vldr	s0, [r2]
   4e7ac:	ldr	r0, [sp, #88]	; 0x58
   4e7b0:	ldr	r7, [sp, #68]	; 0x44
   4e7b4:	ldr	lr, [sp, #48]	; 0x30
   4e7b8:	add	r0, r0, r7, lsl #3
   4e7bc:	vcvt.f64.f32	d16, s0
   4e7c0:	add	r0, r0, r3, lsl #3
   4e7c4:	vstr	d16, [r0]
   4e7c8:	ldr	r0, [sp, #40]	; 0x28
   4e7cc:	add	r2, r2, r0, lsl #2
   4e7d0:	b	4e7d8 <GetDataSlab+0x1a67c>
   4e7d4:	mov	lr, r0
   4e7d8:	ldr	r3, [sp, #56]	; 0x38
   4e7dc:	add	r0, lr, r1
   4e7e0:	add	r1, r0, r3
   4e7e4:	ldr	r0, [fp, #24]
   4e7e8:	add	r9, r2, r3, lsl #2
   4e7ec:	cmp	r0, #2
   4e7f0:	blt	4e718 <GetDataSlab+0x1a5bc>
   4e7f4:	ldr	r3, [sp, #36]	; 0x24
   4e7f8:	ldr	lr, [sp, #64]	; 0x40
   4e7fc:	mov	r2, #0
   4e800:	b	4e830 <GetDataSlab+0x1a6d4>
   4e804:	sub	r7, fp, #176	; 0xb0
   4e808:	sub	r0, r0, r6
   4e80c:	ldr	r5, [r7, r2]
   4e810:	ldr	r7, [sp, #92]	; 0x5c
   4e814:	ldr	r7, [r7, r2]
   4e818:	mla	r0, r7, r5, r0
   4e81c:	add	r1, r0, r1
   4e820:	add	r9, r9, r0, lsl #2
   4e824:	subs	r3, r3, #1
   4e828:	add	r2, r2, #4
   4e82c:	beq	4e71c <GetDataSlab+0x1a5c0>
   4e830:	ldr	r0, [r4, r2]
   4e834:	ldr	r5, [sp, #84]	; 0x54
   4e838:	add	r0, r0, #1
   4e83c:	str	r0, [r4, r2]
   4e840:	ldr	r6, [r5, r2]
   4e844:	sdiv	r5, r0, r6
   4e848:	mls	r0, r5, r6, r0
   4e84c:	cmp	r0, #0
   4e850:	bne	4e898 <GetDataSlab+0x1a73c>
   4e854:	mov	r0, #0
   4e858:	str	r0, [r4, r2]
   4e85c:	ldr	r0, [sp, #80]	; 0x50
   4e860:	ldr	r0, [r0, r2]
   4e864:	sdiv	r6, r1, r0
   4e868:	mls	r6, r6, r0, r1
   4e86c:	cmp	r6, #0
   4e870:	bne	4e804 <GetDataSlab+0x1a6a8>
   4e874:	ldr	r0, [sp, #92]	; 0x5c
   4e878:	ldr	r0, [r0, r2]
   4e87c:	cmp	r0, #0
   4e880:	beq	4e824 <GetDataSlab+0x1a6c8>
   4e884:	sub	r7, fp, #176	; 0xb0
   4e888:	ldr	r7, [r7, r2]
   4e88c:	mla	r1, r7, r0, r1
   4e890:	mul	r0, r7, r0
   4e894:	b	4e820 <GetDataSlab+0x1a6c4>
   4e898:	ldr	r0, [sp, #32]
   4e89c:	ldr	r0, [r0, r2]
   4e8a0:	add	r9, r9, r0, lsl #2
   4e8a4:	add	r1, r0, r1
   4e8a8:	b	4e71c <GetDataSlab+0x1a5c0>
   4e8ac:	ldr	r0, [sp, #76]	; 0x4c
   4e8b0:	ldr	r2, [sp, #88]	; 0x58
   4e8b4:	ldr	r3, [fp, #12]
   4e8b8:	sub	r7, fp, #96	; 0x60
   4e8bc:	cmp	r0, #1
   4e8c0:	ldr	r0, [sp, #40]	; 0x28
   4e8c4:	blt	5b69c <GetDataSlab+0x27540>
   4e8c8:	ldr	r5, [sp, #44]	; 0x2c
   4e8cc:	ldr	r6, [sp, #72]	; 0x48
   4e8d0:	mov	lr, r7
   4e8d4:	ldr	r7, [r3], #4
   4e8d8:	str	r3, [sp, #92]	; 0x5c
   4e8dc:	mls	r0, r6, r5, r0
   4e8e0:	mov	r3, r6
   4e8e4:	lsl	sl, r5, #3
   4e8e8:	lsl	r8, r5, #4
   4e8ec:	str	r7, [sp, #64]	; 0x40
   4e8f0:	sub	r0, r0, r7
   4e8f4:	str	r0, [sp, #60]	; 0x3c
   4e8f8:	sub	r0, fp, #136	; 0x88
   4e8fc:	orr	r4, r0, #4
   4e900:	ldr	r0, [fp, #20]
   4e904:	add	r0, r0, #4
   4e908:	str	r0, [sp, #40]	; 0x28
   4e90c:	orr	r0, ip, #4
   4e910:	str	r0, [sp, #84]	; 0x54
   4e914:	ldr	r0, [fp, #24]
   4e918:	sub	r0, r0, #1
   4e91c:	str	r0, [sp, #36]	; 0x24
   4e920:	orr	r0, lr, #4
   4e924:	str	r0, [sp, #32]
   4e928:	mla	r0, r6, r5, r7
   4e92c:	str	r0, [sp, #52]	; 0x34
   4e930:	and	r0, r6, #1
   4e934:	sub	ip, r6, r0
   4e938:	str	r0, [sp, #48]	; 0x30
   4e93c:	lsl	r0, r6, #3
   4e940:	str	r0, [sp, #56]	; 0x38
   4e944:	add	r0, r2, #8
   4e948:	str	r0, [sp, #80]	; 0x50
   4e94c:	mov	r0, #0
   4e950:	str	r0, [sp, #68]	; 0x44
   4e954:	ldr	lr, [sp, #64]	; 0x40
   4e958:	cmp	r3, #1
   4e95c:	add	r2, r9, lr, lsl #3
   4e960:	bge	4e9b8 <GetDataSlab+0x1a85c>
   4e964:	b	4ea24 <GetDataSlab+0x1a8c8>
   4e968:	ldr	r0, [sp, #32]
   4e96c:	ldr	r0, [r0, r2]
   4e970:	add	r9, r9, r0, lsl #3
   4e974:	add	r1, r0, r1
   4e978:	ldr	r0, [sp, #56]	; 0x38
   4e97c:	ldr	r2, [sp, #80]	; 0x50
   4e980:	ldr	r3, [sp, #72]	; 0x48
   4e984:	ldr	r7, [sp, #68]	; 0x44
   4e988:	add	r2, r2, r0
   4e98c:	ldr	r0, [sp, #76]	; 0x4c
   4e990:	add	r7, r7, r3
   4e994:	str	r2, [sp, #80]	; 0x50
   4e998:	mov	r2, #0
   4e99c:	str	r7, [sp, #68]	; 0x44
   4e9a0:	cmp	r7, r0
   4e9a4:	bge	5b6a0 <GetDataSlab+0x27544>
   4e9a8:	ldr	lr, [sp, #64]	; 0x40
   4e9ac:	cmp	r3, #1
   4e9b0:	add	r2, r9, lr, lsl #3
   4e9b4:	blt	4ea24 <GetDataSlab+0x1a8c8>
   4e9b8:	mov	r3, #0
   4e9bc:	beq	4e9f0 <GetDataSlab+0x1a894>
   4e9c0:	ldr	r5, [sp, #80]	; 0x50
   4e9c4:	mov	r3, #0
   4e9c8:	vldr	d16, [r2]
   4e9cc:	add	r0, r2, sl
   4e9d0:	add	r3, r3, #2
   4e9d4:	add	r2, r2, r8
   4e9d8:	cmp	ip, r3
   4e9dc:	vstr	d16, [r5, #-8]
   4e9e0:	vldr	d16, [r0]
   4e9e4:	vstr	d16, [r5]
   4e9e8:	add	r5, r5, #16
   4e9ec:	bne	4e9c8 <GetDataSlab+0x1a86c>
   4e9f0:	ldr	r0, [sp, #48]	; 0x30
   4e9f4:	ldr	lr, [sp, #52]	; 0x34
   4e9f8:	cmp	r0, #0
   4e9fc:	beq	4ea24 <GetDataSlab+0x1a8c8>
   4ea00:	ldr	r0, [sp, #88]	; 0x58
   4ea04:	ldr	r7, [sp, #68]	; 0x44
   4ea08:	vldr	d16, [r2]
   4ea0c:	ldr	lr, [sp, #52]	; 0x34
   4ea10:	add	r0, r0, r7, lsl #3
   4ea14:	add	r0, r0, r3, lsl #3
   4ea18:	vstr	d16, [r0]
   4ea1c:	ldr	r0, [sp, #44]	; 0x2c
   4ea20:	add	r2, r2, r0, lsl #3
   4ea24:	ldr	r3, [sp, #60]	; 0x3c
   4ea28:	add	r0, lr, r1
   4ea2c:	add	r1, r0, r3
   4ea30:	ldr	r0, [fp, #24]
   4ea34:	add	r9, r2, r3, lsl #3
   4ea38:	cmp	r0, #2
   4ea3c:	blt	4e978 <GetDataSlab+0x1a81c>
   4ea40:	ldr	r3, [sp, #36]	; 0x24
   4ea44:	ldr	lr, [sp, #40]	; 0x28
   4ea48:	mov	r2, #0
   4ea4c:	b	4ea7c <GetDataSlab+0x1a920>
   4ea50:	sub	r7, fp, #176	; 0xb0
   4ea54:	sub	r0, r0, r6
   4ea58:	ldr	r5, [r7, r2]
   4ea5c:	ldr	r7, [sp, #92]	; 0x5c
   4ea60:	ldr	r7, [r7, r2]
   4ea64:	mla	r0, r7, r5, r0
   4ea68:	add	r1, r0, r1
   4ea6c:	add	r9, r9, r0, lsl #3
   4ea70:	subs	r3, r3, #1
   4ea74:	add	r2, r2, #4
   4ea78:	beq	4e978 <GetDataSlab+0x1a81c>
   4ea7c:	ldr	r0, [r4, r2]
   4ea80:	add	r0, r0, #1
   4ea84:	str	r0, [r4, r2]
   4ea88:	ldr	r6, [lr, r2]
   4ea8c:	sdiv	r5, r0, r6
   4ea90:	mls	r0, r5, r6, r0
   4ea94:	cmp	r0, #0
   4ea98:	bne	4e968 <GetDataSlab+0x1a80c>
   4ea9c:	mov	r0, #0
   4eaa0:	str	r0, [r4, r2]
   4eaa4:	ldr	r0, [sp, #84]	; 0x54
   4eaa8:	ldr	r0, [r0, r2]
   4eaac:	sdiv	r6, r1, r0
   4eab0:	mls	r6, r6, r0, r1
   4eab4:	cmp	r6, #0
   4eab8:	bne	4ea50 <GetDataSlab+0x1a8f4>
   4eabc:	ldr	r0, [sp, #92]	; 0x5c
   4eac0:	ldr	r0, [r0, r2]
   4eac4:	cmp	r0, #0
   4eac8:	beq	4ea70 <GetDataSlab+0x1a914>
   4eacc:	sub	r7, fp, #176	; 0xb0
   4ead0:	ldr	r7, [r7, r2]
   4ead4:	mla	r1, r7, r0, r1
   4ead8:	mul	r0, r7, r0
   4eadc:	b	4ea6c <GetDataSlab+0x1a910>
   4eae0:	ldr	r0, [sp, #60]	; 0x3c
   4eae4:	ldr	r1, [sp, #88]	; 0x58
   4eae8:	ldr	r2, [fp, #12]
   4eaec:	sub	r3, fp, #96	; 0x60
   4eaf0:	cmp	r0, #1
   4eaf4:	blt	4ed48 <GetDataSlab+0x1abec>
   4eaf8:	ldr	r4, [sp, #20]
   4eafc:	ldr	lr, [sp, #52]	; 0x34
   4eb00:	ldr	r0, [sp, #16]
   4eb04:	mov	r9, r2
   4eb08:	add	r1, r1, #8
   4eb0c:	ldr	r2, [r9], #4
   4eb10:	str	r9, [sp, #32]
   4eb14:	mls	r0, lr, r4, r0
   4eb18:	lsl	r8, r4, #4
   4eb1c:	str	r2, [sp, #56]	; 0x38
   4eb20:	sub	r0, r0, r2
   4eb24:	str	r0, [sp, #48]	; 0x30
   4eb28:	sub	r0, fp, #136	; 0x88
   4eb2c:	orr	r5, r0, #4
   4eb30:	ldr	r0, [fp, #20]
   4eb34:	str	r5, [sp, #24]
   4eb38:	add	r0, r0, #4
   4eb3c:	str	r0, [sp, #76]	; 0x4c
   4eb40:	orr	r0, ip, #4
   4eb44:	str	r0, [sp, #72]	; 0x48
   4eb48:	ldr	r0, [fp, #24]
   4eb4c:	sub	r0, r0, #1
   4eb50:	str	r0, [sp, #16]
   4eb54:	orr	r0, r3, #4
   4eb58:	lsl	r3, lr, #3
   4eb5c:	str	r0, [sp, #8]
   4eb60:	mla	r0, lr, r4, r2
   4eb64:	str	r3, [sp, #40]	; 0x28
   4eb68:	lsl	r3, r4, #3
   4eb6c:	str	r3, [sp, #12]
   4eb70:	mov	r3, #0
   4eb74:	str	r3, [sp, #68]	; 0x44
   4eb78:	str	r0, [sp, #36]	; 0x24
   4eb7c:	and	r0, lr, #1
   4eb80:	str	r0, [sp, #28]
   4eb84:	sub	r0, lr, r0
   4eb88:	str	r0, [sp, #44]	; 0x2c
   4eb8c:	add	r6, sl, r2, lsl #3
   4eb90:	cmp	lr, #1
   4eb94:	str	r1, [sp, #64]	; 0x40
   4eb98:	bge	4ebec <GetDataSlab+0x1aa90>
   4eb9c:	b	4ec98 <GetDataSlab+0x1ab3c>
   4eba0:	ldr	r1, [sp, #8]
   4eba4:	ldr	r0, [r1, r0]
   4eba8:	add	sl, sl, r0, lsl #3
   4ebac:	add	r7, r0, r7
   4ebb0:	ldr	r0, [sp, #40]	; 0x28
   4ebb4:	ldr	r1, [sp, #64]	; 0x40
   4ebb8:	ldr	r2, [sp, #68]	; 0x44
   4ebbc:	add	r1, r1, r0
   4ebc0:	ldr	r0, [sp, #60]	; 0x3c
   4ebc4:	add	r2, r2, lr
   4ebc8:	str	r2, [sp, #68]	; 0x44
   4ebcc:	cmp	r2, r0
   4ebd0:	ldr	r2, [sp, #56]	; 0x38
   4ebd4:	ldr	r0, [sp, #44]	; 0x2c
   4ebd8:	bge	4ed48 <GetDataSlab+0x1abec>
   4ebdc:	add	r6, sl, r2, lsl #3
   4ebe0:	cmp	lr, #1
   4ebe4:	str	r1, [sp, #64]	; 0x40
   4ebe8:	blt	4ec98 <GetDataSlab+0x1ab3c>
   4ebec:	mov	r5, r8
   4ebf0:	mov	r4, #0
   4ebf4:	beq	4ec3c <GetDataSlab+0x1aae0>
   4ebf8:	ldr	r8, [sp, #12]
   4ebfc:	mov	r4, #0
   4ec00:	mov	r9, r1
   4ec04:	mov	sl, r0
   4ec08:	ldrd	r0, [r6]
   4ec0c:	bl	71540 <__aeabi_l2d>
   4ec10:	strd	r0, [r9, #-8]
   4ec14:	mov	r1, r6
   4ec18:	ldr	r0, [r1, r8]!
   4ec1c:	ldr	r1, [r1, #4]
   4ec20:	bl	71540 <__aeabi_l2d>
   4ec24:	add	r4, r4, #2
   4ec28:	strd	r0, [r9]
   4ec2c:	add	r6, r6, r5
   4ec30:	add	r9, r9, #16
   4ec34:	cmp	sl, r4
   4ec38:	bne	4ec08 <GetDataSlab+0x1aaac>
   4ec3c:	ldr	r0, [sp, #28]
   4ec40:	mov	r8, r5
   4ec44:	ldr	lr, [sp, #52]	; 0x34
   4ec48:	ldr	r9, [sp, #32]
   4ec4c:	ldr	r5, [sp, #24]
   4ec50:	sub	ip, fp, #176	; 0xb0
   4ec54:	cmp	r0, #0
   4ec58:	ldr	r0, [sp, #36]	; 0x24
   4ec5c:	beq	4ec9c <GetDataSlab+0x1ab40>
   4ec60:	ldr	r0, [sp, #88]	; 0x58
   4ec64:	ldr	r1, [sp, #68]	; 0x44
   4ec68:	add	r9, r0, r1, lsl #3
   4ec6c:	ldrd	r0, [r6]
   4ec70:	bl	71540 <__aeabi_l2d>
   4ec74:	str	r0, [r9, r4, lsl #3]!
   4ec78:	sub	ip, fp, #176	; 0xb0
   4ec7c:	ldr	r0, [sp, #20]
   4ec80:	ldr	lr, [sp, #52]	; 0x34
   4ec84:	str	r1, [r9, #4]
   4ec88:	ldr	r9, [sp, #32]
   4ec8c:	add	r6, r6, r0, lsl #3
   4ec90:	ldr	r0, [sp, #36]	; 0x24
   4ec94:	b	4ec9c <GetDataSlab+0x1ab40>
   4ec98:	mov	r0, r2
   4ec9c:	ldr	r1, [sp, #48]	; 0x30
   4eca0:	add	r0, r0, r7
   4eca4:	add	r7, r0, r1
   4eca8:	ldr	r0, [fp, #24]
   4ecac:	add	sl, r6, r1, lsl #3
   4ecb0:	cmp	r0, #2
   4ecb4:	blt	4ebb0 <GetDataSlab+0x1aa54>
   4ecb8:	ldr	r1, [sp, #16]
   4ecbc:	mov	r0, #0
   4ecc0:	b	4ece8 <GetDataSlab+0x1ab8c>
   4ecc4:	ldr	r6, [ip, r0]
   4ecc8:	ldr	r4, [r9, r0]
   4eccc:	sub	r2, r2, r3
   4ecd0:	mla	r2, r4, r6, r2
   4ecd4:	add	r7, r2, r7
   4ecd8:	add	sl, sl, r2, lsl #3
   4ecdc:	subs	r1, r1, #1
   4ece0:	add	r0, r0, #4
   4ece4:	beq	4ebb0 <GetDataSlab+0x1aa54>
   4ece8:	ldr	r2, [r5, r0]
   4ecec:	ldr	r3, [sp, #76]	; 0x4c
   4ecf0:	add	r2, r2, #1
   4ecf4:	str	r2, [r5, r0]
   4ecf8:	ldr	r3, [r3, r0]
   4ecfc:	sdiv	r6, r2, r3
   4ed00:	mls	r2, r6, r3, r2
   4ed04:	cmp	r2, #0
   4ed08:	bne	4eba0 <GetDataSlab+0x1aa44>
   4ed0c:	mov	r2, #0
   4ed10:	str	r2, [r5, r0]
   4ed14:	ldr	r2, [sp, #72]	; 0x48
   4ed18:	ldr	r2, [r2, r0]
   4ed1c:	sdiv	r3, r7, r2
   4ed20:	mls	r3, r3, r2, r7
   4ed24:	cmp	r3, #0
   4ed28:	bne	4ecc4 <GetDataSlab+0x1ab68>
   4ed2c:	ldr	r2, [r9, r0]
   4ed30:	cmp	r2, #0
   4ed34:	beq	4ecdc <GetDataSlab+0x1ab80>
   4ed38:	ldr	r3, [ip, r0]
   4ed3c:	mla	r7, r3, r2, r7
   4ed40:	mul	r2, r3, r2
   4ed44:	b	4ecd8 <GetDataSlab+0x1ab7c>
   4ed48:	mov	r2, #0
   4ed4c:	ldr	r0, [sp, #84]	; 0x54
   4ed50:	cmp	r0, #13
   4ed54:	bne	5b6a0 <GetDataSlab+0x27544>
   4ed58:	ldr	r0, [fp, #16]
   4ed5c:	ldr	r1, [fp, #8]
   4ed60:	ldr	r9, [fp, #20]
   4ed64:	mov	r8, #0
   4ed68:	sub	r6, fp, #176	; 0xb0
   4ed6c:	ldr	r0, [r0]
   4ed70:	str	r0, [sp, #36]	; 0x24
   4ed74:	sub	r0, r0, #1
   4ed78:	str	r0, [fp, #-96]	; 0xffffffa0
   4ed7c:	ldr	r0, [r1]
   4ed80:	str	r0, [fp, #-176]	; 0xffffff50
   4ed84:	str	r0, [sp, #44]	; 0x2c
   4ed88:	ldr	r0, [fp, #24]
   4ed8c:	ldr	r2, [r9]
   4ed90:	sub	r9, fp, #96	; 0x60
   4ed94:	cmp	r0, #2
   4ed98:	str	r2, [sp, #64]	; 0x40
   4ed9c:	str	r2, [sp, #76]	; 0x4c
   4eda0:	blt	4eeec <GetDataSlab+0x1ad90>
   4eda4:	ldr	r5, [sp, #44]	; 0x2c
   4eda8:	ldr	r2, [sp, #64]	; 0x40
   4edac:	sub	r0, r1, #4
   4edb0:	sub	ip, r1, #12
   4edb4:	mov	r4, #1
   4edb8:	mov	lr, #0
   4edbc:	mvn	r7, #15
   4edc0:	mov	r8, #0
   4edc4:	mov	sl, r5
   4edc8:	str	r2, [sp, #76]	; 0x4c
   4edcc:	b	4ee20 <GetDataSlab+0x1acc4>
   4edd0:	ldr	r2, [fp, #12]
   4edd4:	sub	r6, fp, #176	; 0xb0
   4edd8:	sub	r9, fp, #96	; 0x60
   4eddc:	add	ip, ip, #4
   4ede0:	str	r3, [r9, r4, lsl #2]
   4ede4:	str	r5, [r6, r4, lsl #2]
   4ede8:	ldr	r3, [sp, #76]	; 0x4c
   4edec:	ldr	r2, [r2, r4, lsl #2]
   4edf0:	mla	r8, r2, sl, r8
   4edf4:	ldr	r2, [fp, #20]
   4edf8:	mov	sl, r5
   4edfc:	mov	r5, r1
   4ee00:	ldr	r1, [fp, #8]
   4ee04:	ldr	r2, [r2, r4, lsl #2]
   4ee08:	add	r4, r4, #1
   4ee0c:	mul	r3, r2, r3
   4ee10:	ldr	r2, [fp, #24]
   4ee14:	str	r3, [sp, #76]	; 0x4c
   4ee18:	cmp	r4, r2
   4ee1c:	beq	4eeec <GetDataSlab+0x1ad90>
   4ee20:	ldr	r2, [fp, #16]
   4ee24:	add	lr, lr, #1
   4ee28:	cmp	lr, #4
   4ee2c:	ldr	r2, [r2, r4, lsl #2]
   4ee30:	str	r5, [r6, r4, lsl #2]
   4ee34:	sub	r3, r2, #1
   4ee38:	str	r3, [r9, r4, lsl #2]
   4ee3c:	ldr	r1, [r1, r4, lsl #2]
   4ee40:	bcs	4ee50 <GetDataSlab+0x1acf4>
   4ee44:	mov	r6, r1
   4ee48:	mov	r2, r4
   4ee4c:	b	4eed4 <GetDataSlab+0x1ad78>
   4ee50:	vmov.i32	q9, #1	; 0x00000001
   4ee54:	vmov.i32	q10, #1	; 0x00000001
   4ee58:	vmov.32	d23[1], r1
   4ee5c:	vmov.i32	q8, #1	; 0x00000001
   4ee60:	bic	r9, lr, #3
   4ee64:	bic	r6, r4, #3
   4ee68:	sub	r2, r4, r9
   4ee6c:	vmov.32	d18[0], r5
   4ee70:	vmov.32	d20[0], r3
   4ee74:	mov	r3, ip
   4ee78:	vorr	d16, d18, d18
   4ee7c:	vmov.i32	q9, #1	; 0x00000001
   4ee80:	vorr	d18, d20, d20
   4ee84:	vld1.32	{d20-d21}, [r3], r7
   4ee88:	subs	r6, r6, #4
   4ee8c:	vrev64.32	q12, q10
   4ee90:	vext.8	q12, q12, q12, #8
   4ee94:	vext.8	q11, q11, q12, #12
   4ee98:	vmul.i32	q9, q9, q12
   4ee9c:	vmul.i32	q8, q11, q8
   4eea0:	vorr	q11, q12, q12
   4eea4:	bne	4ee84 <GetDataSlab+0x1ad28>
   4eea8:	vext.8	q11, q9, q8, #8
   4eeac:	vext.8	q12, q8, q8, #8
   4eeb0:	cmp	lr, r9
   4eeb4:	vmul.i32	q0, q9, q11
   4eeb8:	vmul.i32	q1, q8, q12
   4eebc:	vmul.i32	q8, q0, d0[1]
   4eec0:	vmul.i32	q9, q1, d2[1]
   4eec4:	vmov.32	r3, d16[0]
   4eec8:	vmov.32	r5, d18[0]
   4eecc:	beq	4edd0 <GetDataSlab+0x1ac74>
   4eed0:	vmov.32	r6, d20[0]
   4eed4:	mul	r5, r6, r5
   4eed8:	ldr	r6, [r0, r2, lsl #2]
   4eedc:	subs	r2, r2, #1
   4eee0:	mul	r3, r3, r6
   4eee4:	bne	4eed4 <GetDataSlab+0x1ad78>
   4eee8:	b	4edd0 <GetDataSlab+0x1ac74>
   4eeec:	ldr	r0, [sp, #80]	; 0x50
   4eef0:	add	r5, r0, r8, lsl #3
   4eef4:	ldr	r0, [sp, #36]	; 0x24
   4eef8:	cmp	r0, #1
   4eefc:	bne	5a3e4 <GetDataSlab+0x26288>
   4ef00:	ldr	r0, [sp, #76]	; 0x4c
   4ef04:	ldr	r9, [sp, #64]	; 0x40
   4ef08:	ldr	sl, [sp, #44]	; 0x2c
   4ef0c:	cmp	r0, #1
   4ef10:	blt	5b69c <GetDataSlab+0x27540>
   4ef14:	sub	r0, r9, #2
   4ef18:	mov	r1, #1
   4ef1c:	str	r5, [sp, #72]	; 0x48
   4ef20:	add	r1, r1, r0, lsr #1
   4ef24:	lsr	r0, r0, #1
   4ef28:	str	r0, [sp, #20]
   4ef2c:	mov	r0, #0
   4ef30:	and	r2, r1, #1
   4ef34:	str	r0, [sp, #68]	; 0x44
   4ef38:	sub	r1, r1, r2
   4ef3c:	str	r2, [sp, #28]
   4ef40:	str	r1, [sp, #12]
   4ef44:	sub	r1, fp, #136	; 0x88
   4ef48:	orr	r1, r1, #4
   4ef4c:	str	r1, [sp, #40]	; 0x28
   4ef50:	ldr	r1, [fp, #20]
   4ef54:	add	r1, r1, #4
   4ef58:	str	r1, [sp, #36]	; 0x24
   4ef5c:	orr	r1, r6, #4
   4ef60:	ldr	r6, [sp, #88]	; 0x58
   4ef64:	str	r1, [sp, #84]	; 0x54
   4ef68:	ldr	r1, [fp, #24]
   4ef6c:	sub	r1, r1, #1
   4ef70:	str	r1, [sp, #32]
   4ef74:	sub	r1, fp, #96	; 0x60
   4ef78:	orr	r1, r1, #4
   4ef7c:	str	r1, [sp, #16]
   4ef80:	lsl	r1, r9, #3
   4ef84:	str	r1, [sp, #60]	; 0x3c
   4ef88:	bic	r1, r9, #1
   4ef8c:	str	r1, [sp, #24]
   4ef90:	ldr	r1, [sp, #92]	; 0x5c
   4ef94:	ldr	r2, [r1], #4
   4ef98:	str	r1, [sp, #92]	; 0x5c
   4ef9c:	str	r2, [sp, #56]	; 0x38
   4efa0:	cmp	r9, #1
   4efa4:	str	r6, [sp, #80]	; 0x50
   4efa8:	bge	4eff4 <GetDataSlab+0x1ae98>
   4efac:	b	4f150 <GetDataSlab+0x1aff4>
   4efb0:	ldr	r1, [sp, #16]
   4efb4:	ldr	r0, [r1, r0]
   4efb8:	add	r4, r4, r0, lsl #3
   4efbc:	add	r8, r0, r8
   4efc0:	ldr	r0, [sp, #60]	; 0x3c
   4efc4:	ldr	r1, [sp, #68]	; 0x44
   4efc8:	mov	r2, #0
   4efcc:	str	r4, [sp, #72]	; 0x48
   4efd0:	add	r6, r6, r0
   4efd4:	ldr	r0, [sp, #76]	; 0x4c
   4efd8:	add	r1, r1, r9
   4efdc:	str	r1, [sp, #68]	; 0x44
   4efe0:	cmp	r1, r0
   4efe4:	bge	5b6a0 <GetDataSlab+0x27544>
   4efe8:	cmp	r9, #1
   4efec:	str	r6, [sp, #80]	; 0x50
   4eff0:	blt	4f150 <GetDataSlab+0x1aff4>
   4eff4:	ldr	r0, [sp, #72]	; 0x48
   4eff8:	ldr	r1, [sp, #56]	; 0x38
   4effc:	add	r7, r0, r1, lsl #3
   4f000:	mov	r0, #0
   4f004:	beq	4f120 <GetDataSlab+0x1afc4>
   4f008:	ldr	r0, [sp, #20]
   4f00c:	mov	r4, #0
   4f010:	str	r8, [sp, #48]	; 0x30
   4f014:	str	r7, [sp, #52]	; 0x34
   4f018:	cmp	r0, #0
   4f01c:	beq	4f0b0 <GetDataSlab+0x1af54>
   4f020:	mov	r9, r6
   4f024:	ldr	r6, [sp, #12]
   4f028:	mov	r5, r7
   4f02c:	mov	sl, r9
   4f030:	mov	r8, #32
   4f034:	vld1.64	{d8-d9}, [r7], r8
   4f038:	vmov.32	r0, d9[0]
   4f03c:	vmov.32	r1, d9[1]
   4f040:	bl	7152c <__aeabi_ul2d>
   4f044:	vmov.32	r2, d8[0]
   4f048:	vmov.32	r3, d8[1]
   4f04c:	vmov	d9, r0, r1
   4f050:	mov	r0, r2
   4f054:	mov	r1, r3
   4f058:	bl	7152c <__aeabi_ul2d>
   4f05c:	vmov	d8, r0, r1
   4f060:	add	r0, r5, #16
   4f064:	vst1.64	{d8-d9}, [sl], r8
   4f068:	vld1.64	{d8-d9}, [r0]
   4f06c:	vmov.32	r0, d9[0]
   4f070:	vmov.32	r1, d9[1]
   4f074:	bl	7152c <__aeabi_ul2d>
   4f078:	vmov.32	r2, d8[0]
   4f07c:	vmov.32	r3, d8[1]
   4f080:	vmov	d9, r0, r1
   4f084:	mov	r0, r2
   4f088:	mov	r1, r3
   4f08c:	bl	7152c <__aeabi_ul2d>
   4f090:	vmov	d8, r0, r1
   4f094:	add	r0, r9, #16
   4f098:	subs	r6, r6, #2
   4f09c:	add	r4, r4, #4
   4f0a0:	mov	r9, sl
   4f0a4:	mov	r5, r7
   4f0a8:	vst1.64	{d8-d9}, [r0]
   4f0ac:	bne	4f030 <GetDataSlab+0x1aed4>
   4f0b0:	ldr	r0, [sp, #28]
   4f0b4:	ldr	sl, [sp, #44]	; 0x2c
   4f0b8:	ldr	r7, [sp, #52]	; 0x34
   4f0bc:	cmp	r0, #0
   4f0c0:	beq	4f108 <GetDataSlab+0x1afac>
   4f0c4:	ldr	r0, [sp, #88]	; 0x58
   4f0c8:	ldr	r1, [sp, #68]	; 0x44
   4f0cc:	add	r5, r0, r1, lsl #3
   4f0d0:	add	r0, r7, r4, lsl #3
   4f0d4:	vld1.64	{d8-d9}, [r0]
   4f0d8:	vmov.32	r0, d9[0]
   4f0dc:	vmov.32	r1, d9[1]
   4f0e0:	bl	7152c <__aeabi_ul2d>
   4f0e4:	vmov.32	r2, d8[0]
   4f0e8:	vmov.32	r3, d8[1]
   4f0ec:	vmov	d9, r0, r1
   4f0f0:	mov	r0, r2
   4f0f4:	mov	r1, r3
   4f0f8:	bl	7152c <__aeabi_ul2d>
   4f0fc:	vmov	d8, r0, r1
   4f100:	add	r0, r5, r4, lsl #3
   4f104:	vst1.64	{d8-d9}, [r0]
   4f108:	ldr	r9, [sp, #64]	; 0x40
   4f10c:	ldr	r0, [sp, #24]
   4f110:	ldr	r6, [sp, #80]	; 0x50
   4f114:	ldr	r8, [sp, #48]	; 0x30
   4f118:	cmp	r9, r0
   4f11c:	beq	4f150 <GetDataSlab+0x1aff4>
   4f120:	sub	r4, r9, r0
   4f124:	lsl	r5, r0, #3
   4f128:	mov	r1, r7
   4f12c:	ldr	r0, [r1, r5]!
   4f130:	ldr	r1, [r1, #4]
   4f134:	bl	7152c <__aeabi_ul2d>
   4f138:	mov	r2, r6
   4f13c:	subs	r4, r4, #1
   4f140:	str	r0, [r2, r5]!
   4f144:	add	r5, r5, #8
   4f148:	str	r1, [r2, #4]
   4f14c:	bne	4f128 <GetDataSlab+0x1afcc>
   4f150:	ldr	r4, [sp, #72]	; 0x48
   4f154:	ldr	r0, [fp, #24]
   4f158:	add	r8, r8, sl
   4f15c:	add	r4, r4, sl, lsl #3
   4f160:	cmp	r0, #2
   4f164:	blt	4efc0 <GetDataSlab+0x1ae64>
   4f168:	sub	r5, fp, #176	; 0xb0
   4f16c:	ldr	r1, [sp, #32]
   4f170:	ldr	lr, [sp, #36]	; 0x24
   4f174:	mov	r0, #0
   4f178:	mov	ip, r5
   4f17c:	ldr	r5, [sp, #40]	; 0x28
   4f180:	b	4f1b0 <GetDataSlab+0x1b054>
   4f184:	ldr	r6, [sp, #92]	; 0x5c
   4f188:	ldr	r7, [ip, r0]
   4f18c:	sub	r2, r2, r3
   4f190:	ldr	r6, [r6, r0]
   4f194:	mla	r2, r6, r7, r2
   4f198:	ldr	r6, [sp, #80]	; 0x50
   4f19c:	add	r8, r2, r8
   4f1a0:	add	r4, r4, r2, lsl #3
   4f1a4:	subs	r1, r1, #1
   4f1a8:	add	r0, r0, #4
   4f1ac:	beq	4efc0 <GetDataSlab+0x1ae64>
   4f1b0:	ldr	r2, [r5, r0]
   4f1b4:	add	r2, r2, #1
   4f1b8:	str	r2, [r5, r0]
   4f1bc:	ldr	r3, [lr, r0]
   4f1c0:	sdiv	r7, r2, r3
   4f1c4:	mls	r2, r7, r3, r2
   4f1c8:	cmp	r2, #0
   4f1cc:	bne	4efb0 <GetDataSlab+0x1ae54>
   4f1d0:	mov	r2, #0
   4f1d4:	str	r2, [r5, r0]
   4f1d8:	ldr	r2, [sp, #84]	; 0x54
   4f1dc:	ldr	r2, [r2, r0]
   4f1e0:	sdiv	r3, r8, r2
   4f1e4:	mls	r3, r3, r2, r8
   4f1e8:	cmp	r3, #0
   4f1ec:	bne	4f184 <GetDataSlab+0x1b028>
   4f1f0:	ldr	r2, [sp, #92]	; 0x5c
   4f1f4:	ldr	r2, [r2, r0]
   4f1f8:	cmp	r2, #0
   4f1fc:	beq	4f1a4 <GetDataSlab+0x1b048>
   4f200:	ldr	r3, [ip, r0]
   4f204:	mla	r8, r3, r2, r8
   4f208:	mul	r2, r3, r2
   4f20c:	b	4f1a0 <GetDataSlab+0x1b044>
   4f210:	ldr	r0, [sp, #76]	; 0x4c
   4f214:	sub	r2, fp, #96	; 0x60
   4f218:	cmp	r0, #1
   4f21c:	ldr	r0, [fp, #12]
   4f220:	blt	5b69c <GetDataSlab+0x27540>
   4f224:	ldr	lr, [sp, #60]	; 0x3c
   4f228:	ldr	r1, [sp, #40]	; 0x28
   4f22c:	add	r0, r0, #4
   4f230:	mov	r6, #0
   4f234:	str	r0, [sp, #84]	; 0x54
   4f238:	ldr	r0, [fp, #24]
   4f23c:	mls	r1, lr, sl, r1
   4f240:	sub	r0, r0, #1
   4f244:	str	r0, [sp, #40]	; 0x28
   4f248:	orr	r0, r2, #4
   4f24c:	str	r1, [sp, #68]	; 0x44
   4f250:	mul	r1, lr, sl
   4f254:	str	r0, [sp, #32]
   4f258:	and	r0, lr, #1
   4f25c:	str	r0, [sp, #44]	; 0x2c
   4f260:	sub	r0, lr, r0
   4f264:	str	r0, [sp, #36]	; 0x24
   4f268:	lsl	r0, lr, #2
   4f26c:	str	r1, [sp, #48]	; 0x30
   4f270:	sub	r1, fp, #136	; 0x88
   4f274:	str	r0, [sp, #64]	; 0x40
   4f278:	ldr	r0, [sp, #88]	; 0x58
   4f27c:	orr	r4, r1, #4
   4f280:	ldr	r1, [fp, #20]
   4f284:	add	r1, r1, #4
   4f288:	str	r1, [sp, #52]	; 0x34
   4f28c:	sub	r1, fp, #176	; 0xb0
   4f290:	orr	r1, r1, #4
   4f294:	str	r1, [sp, #56]	; 0x38
   4f298:	add	r1, r0, #4
   4f29c:	b	4f2d8 <GetDataSlab+0x1b17c>
   4f2a0:	ldr	r0, [sp, #32]
   4f2a4:	ldr	r0, [r0, r2]
   4f2a8:	add	ip, ip, r0
   4f2ac:	add	r3, r0, r3
   4f2b0:	ldr	r0, [sp, #64]	; 0x40
   4f2b4:	ldr	r1, [sp, #80]	; 0x50
   4f2b8:	ldr	lr, [sp, #60]	; 0x3c
   4f2bc:	ldr	r6, [sp, #72]	; 0x48
   4f2c0:	mov	r2, #0
   4f2c4:	add	r1, r1, r0
   4f2c8:	ldr	r0, [sp, #76]	; 0x4c
   4f2cc:	add	r6, r6, lr
   4f2d0:	cmp	r6, r0
   4f2d4:	bge	5b6a0 <GetDataSlab+0x27544>
   4f2d8:	ldr	r0, [fp, #12]
   4f2dc:	cmp	lr, #1
   4f2e0:	str	r1, [sp, #80]	; 0x50
   4f2e4:	ldr	r9, [r0]
   4f2e8:	add	r5, ip, r9
   4f2ec:	blt	4f37c <GetDataSlab+0x1b220>
   4f2f0:	mov	r7, #0
   4f2f4:	cmp	lr, #1
   4f2f8:	beq	4f33c <GetDataSlab+0x1b1e0>
   4f2fc:	ldr	r2, [sp, #36]	; 0x24
   4f300:	mov	r7, #0
   4f304:	mov	r0, r1
   4f308:	ldrb	r1, [r5]
   4f30c:	add	r7, r7, #2
   4f310:	cmp	r2, r7
   4f314:	vmov	s0, r1
   4f318:	vcvt.f32.u32	s0, s0
   4f31c:	vstr	s0, [r0, #-4]
   4f320:	ldrb	r1, [r5, sl]!
   4f324:	add	r5, r5, sl
   4f328:	vmov	s0, r1
   4f32c:	vcvt.f32.u32	s0, s0
   4f330:	vstr	s0, [r0]
   4f334:	add	r0, r0, #8
   4f338:	bne	4f308 <GetDataSlab+0x1b1ac>
   4f33c:	ldr	r0, [sp, #48]	; 0x30
   4f340:	ldr	r1, [sp, #44]	; 0x2c
   4f344:	ldr	lr, [sp, #56]	; 0x38
   4f348:	ldr	r8, [sp, #52]	; 0x34
   4f34c:	add	r0, r0, r3
   4f350:	cmp	r1, #0
   4f354:	beq	4f374 <GetDataSlab+0x1b218>
   4f358:	ldrb	r3, [r5], sl
   4f35c:	ldr	r1, [sp, #88]	; 0x58
   4f360:	vmov	s0, r3
   4f364:	add	r1, r1, r6, lsl #2
   4f368:	add	r1, r1, r7, lsl #2
   4f36c:	vcvt.f32.u32	s0, s0
   4f370:	vstr	s0, [r1]
   4f374:	add	r0, r0, r9
   4f378:	b	4f388 <GetDataSlab+0x1b22c>
   4f37c:	ldr	lr, [sp, #56]	; 0x38
   4f380:	ldr	r8, [sp, #52]	; 0x34
   4f384:	add	r0, r9, r3
   4f388:	ldr	r1, [sp, #68]	; 0x44
   4f38c:	str	r6, [sp, #72]	; 0x48
   4f390:	sub	r1, r1, r9
   4f394:	add	r3, r0, r1
   4f398:	ldr	r0, [fp, #24]
   4f39c:	add	ip, r5, r1
   4f3a0:	cmp	r0, #2
   4f3a4:	blt	4f2b0 <GetDataSlab+0x1b154>
   4f3a8:	ldr	r9, [sp, #40]	; 0x28
   4f3ac:	mov	r2, #0
   4f3b0:	b	4f3e0 <GetDataSlab+0x1b284>
   4f3b4:	ldr	r5, [sp, #84]	; 0x54
   4f3b8:	sub	r1, fp, #176	; 0xb0
   4f3bc:	sub	r0, r0, r7
   4f3c0:	ldr	r1, [r1, r2]
   4f3c4:	ldr	r5, [r5, r2]
   4f3c8:	mla	r0, r5, r1, r0
   4f3cc:	add	r3, r0, r3
   4f3d0:	add	ip, ip, r0
   4f3d4:	subs	r9, r9, #1
   4f3d8:	add	r2, r2, #4
   4f3dc:	beq	4f2b0 <GetDataSlab+0x1b154>
   4f3e0:	ldr	r0, [r4, r2]
   4f3e4:	add	r0, r0, #1
   4f3e8:	str	r0, [r4, r2]
   4f3ec:	ldr	r1, [r8, r2]
   4f3f0:	sdiv	r5, r0, r1
   4f3f4:	mls	r0, r5, r1, r0
   4f3f8:	cmp	r0, #0
   4f3fc:	bne	4f2a0 <GetDataSlab+0x1b144>
   4f400:	mov	r0, #0
   4f404:	str	r0, [r4, r2]
   4f408:	ldr	r0, [lr, r2]
   4f40c:	sdiv	r1, r3, r0
   4f410:	mls	r7, r1, r0, r3
   4f414:	cmp	r7, #0
   4f418:	bne	4f3b4 <GetDataSlab+0x1b258>
   4f41c:	ldr	r0, [sp, #84]	; 0x54
   4f420:	ldr	r0, [r0, r2]
   4f424:	cmp	r0, #0
   4f428:	beq	4f3d4 <GetDataSlab+0x1b278>
   4f42c:	sub	r1, fp, #176	; 0xb0
   4f430:	ldr	r1, [r1, r2]
   4f434:	mla	r3, r1, r0, r3
   4f438:	mla	ip, r1, r0, ip
   4f43c:	subs	r9, r9, #1
   4f440:	add	r2, r2, #4
   4f444:	bne	4f3e0 <GetDataSlab+0x1b284>
   4f448:	b	4f2b0 <GetDataSlab+0x1b154>
   4f44c:	ldr	r0, [sp, #76]	; 0x4c
   4f450:	ldr	r2, [fp, #12]
   4f454:	ldr	r3, [sp, #64]	; 0x40
   4f458:	cmp	r0, #1
   4f45c:	blt	5b69c <GetDataSlab+0x27540>
   4f460:	ldr	r0, [sp, #48]	; 0x30
   4f464:	ldr	r5, [r2], #4
   4f468:	lsl	lr, r7, #2
   4f46c:	str	r2, [sp, #92]	; 0x5c
   4f470:	mov	r2, #0
   4f474:	str	r2, [sp, #68]	; 0x44
   4f478:	mls	r0, r3, r7, r0
   4f47c:	str	r5, [sp, #60]	; 0x3c
   4f480:	sub	r0, r0, r5
   4f484:	str	r0, [sp, #56]	; 0x38
   4f488:	sub	r0, fp, #136	; 0x88
   4f48c:	orr	r4, r0, #4
   4f490:	ldr	r0, [fp, #20]
   4f494:	add	r0, r0, #4
   4f498:	str	r0, [sp, #84]	; 0x54
   4f49c:	orr	r0, ip, #4
   4f4a0:	lsl	ip, r7, #1
   4f4a4:	str	r0, [sp, #80]	; 0x50
   4f4a8:	ldr	r0, [fp, #24]
   4f4ac:	sub	r0, r0, #1
   4f4b0:	str	r0, [sp, #40]	; 0x28
   4f4b4:	orr	r0, r6, #4
   4f4b8:	str	r0, [sp, #36]	; 0x24
   4f4bc:	mla	r0, r3, r7, r5
   4f4c0:	str	r0, [sp, #48]	; 0x30
   4f4c4:	and	r0, r3, #1
   4f4c8:	str	r0, [sp, #44]	; 0x2c
   4f4cc:	sub	r8, r3, r0
   4f4d0:	lsl	r0, r3, #2
   4f4d4:	str	r0, [sp, #52]	; 0x34
   4f4d8:	ldr	r0, [sp, #88]	; 0x58
   4f4dc:	add	r0, r0, #4
   4f4e0:	str	r0, [sp, #72]	; 0x48
   4f4e4:	mov	r0, r3
   4f4e8:	ldr	r6, [sp, #60]	; 0x3c
   4f4ec:	cmp	r0, #1
   4f4f0:	add	r2, r9, r6, lsl #1
   4f4f4:	bge	4f54c <GetDataSlab+0x1b3f0>
   4f4f8:	b	4f5c8 <GetDataSlab+0x1b46c>
   4f4fc:	ldr	r0, [sp, #36]	; 0x24
   4f500:	ldr	r0, [r0, r2]
   4f504:	add	r9, r9, r0, lsl #1
   4f508:	add	r1, r0, r1
   4f50c:	ldr	r0, [sp, #52]	; 0x34
   4f510:	ldr	r2, [sp, #72]	; 0x48
   4f514:	ldr	r5, [sp, #68]	; 0x44
   4f518:	ldr	r3, [sp, #76]	; 0x4c
   4f51c:	add	r2, r2, r0
   4f520:	ldr	r0, [sp, #64]	; 0x40
   4f524:	str	r2, [sp, #72]	; 0x48
   4f528:	mov	r2, #0
   4f52c:	add	r5, r5, r0
   4f530:	cmp	r5, r3
   4f534:	str	r5, [sp, #68]	; 0x44
   4f538:	bge	5b6a0 <GetDataSlab+0x27544>
   4f53c:	ldr	r6, [sp, #60]	; 0x3c
   4f540:	cmp	r0, #1
   4f544:	add	r2, r9, r6, lsl #1
   4f548:	blt	4f5c8 <GetDataSlab+0x1b46c>
   4f54c:	mov	r3, #0
   4f550:	beq	4f594 <GetDataSlab+0x1b438>
   4f554:	ldr	r5, [sp, #72]	; 0x48
   4f558:	mov	r3, #0
   4f55c:	ldrsh	r6, [r2]
   4f560:	add	r3, r3, #2
   4f564:	cmp	r8, r3
   4f568:	vmov	s0, r6
   4f56c:	add	r6, r2, ip
   4f570:	add	r2, r2, lr
   4f574:	vcvt.f32.s32	s0, s0
   4f578:	vstr	s0, [r5, #-4]
   4f57c:	ldrsh	r6, [r6]
   4f580:	vmov	s0, r6
   4f584:	vcvt.f32.s32	s0, s0
   4f588:	vstr	s0, [r5]
   4f58c:	add	r5, r5, #8
   4f590:	bne	4f55c <GetDataSlab+0x1b400>
   4f594:	ldr	r0, [sp, #44]	; 0x2c
   4f598:	ldr	r6, [sp, #48]	; 0x30
   4f59c:	cmp	r0, #0
   4f5a0:	beq	4f5c8 <GetDataSlab+0x1b46c>
   4f5a4:	ldr	r0, [sp, #88]	; 0x58
   4f5a8:	ldr	r5, [sp, #68]	; 0x44
   4f5ac:	add	r5, r0, r5, lsl #2
   4f5b0:	add	r3, r5, r3, lsl #2
   4f5b4:	ldrsh	r5, [r2], ip
   4f5b8:	vmov	s0, r5
   4f5bc:	vcvt.f32.s32	s0, s0
   4f5c0:	ldr	r6, [sp, #48]	; 0x30
   4f5c4:	vstr	s0, [r3]
   4f5c8:	ldr	r0, [sp, #56]	; 0x38
   4f5cc:	add	r1, r6, r1
   4f5d0:	add	r9, r2, r0, lsl #1
   4f5d4:	add	r1, r1, r0
   4f5d8:	ldr	r0, [fp, #24]
   4f5dc:	cmp	r0, #2
   4f5e0:	blt	4f50c <GetDataSlab+0x1b3b0>
   4f5e4:	ldr	r3, [sp, #40]	; 0x28
   4f5e8:	mov	r2, #0
   4f5ec:	b	4f61c <GetDataSlab+0x1b4c0>
   4f5f0:	ldr	r5, [sp, #92]	; 0x5c
   4f5f4:	sub	r0, fp, #176	; 0xb0
   4f5f8:	sub	r6, r6, sl
   4f5fc:	ldr	r0, [r0, r2]
   4f600:	ldr	r7, [r5, r2]
   4f604:	mla	r0, r7, r0, r6
   4f608:	add	r1, r0, r1
   4f60c:	add	r9, r9, r0, lsl #1
   4f610:	subs	r3, r3, #1
   4f614:	add	r2, r2, #4
   4f618:	beq	4f50c <GetDataSlab+0x1b3b0>
   4f61c:	ldr	r6, [r4, r2]
   4f620:	ldr	r0, [sp, #84]	; 0x54
   4f624:	add	r6, r6, #1
   4f628:	str	r6, [r4, r2]
   4f62c:	ldr	r7, [r0, r2]
   4f630:	sdiv	r0, r6, r7
   4f634:	mls	r0, r0, r7, r6
   4f638:	cmp	r0, #0
   4f63c:	bne	4f4fc <GetDataSlab+0x1b3a0>
   4f640:	mov	r0, #0
   4f644:	str	r0, [r4, r2]
   4f648:	ldr	r0, [sp, #80]	; 0x50
   4f64c:	ldr	r6, [r0, r2]
   4f650:	sdiv	r0, r1, r6
   4f654:	mls	sl, r0, r6, r1
   4f658:	cmp	sl, #0
   4f65c:	bne	4f5f0 <GetDataSlab+0x1b494>
   4f660:	ldr	r0, [sp, #92]	; 0x5c
   4f664:	ldr	r6, [r0, r2]
   4f668:	cmp	r6, #0
   4f66c:	beq	4f610 <GetDataSlab+0x1b4b4>
   4f670:	sub	r0, fp, #176	; 0xb0
   4f674:	ldr	r0, [r0, r2]
   4f678:	mla	r1, r0, r6, r1
   4f67c:	mul	r0, r0, r6
   4f680:	b	4f60c <GetDataSlab+0x1b4b0>
   4f684:	ldr	r0, [sp, #76]	; 0x4c
   4f688:	ldr	r2, [fp, #12]
   4f68c:	ldr	r3, [sp, #64]	; 0x40
   4f690:	cmp	r0, #1
   4f694:	blt	5b69c <GetDataSlab+0x27540>
   4f698:	ldr	r0, [sp, #48]	; 0x30
   4f69c:	ldr	r5, [r2], #4
   4f6a0:	lsl	lr, r7, #2
   4f6a4:	str	r2, [sp, #92]	; 0x5c
   4f6a8:	mov	r2, #0
   4f6ac:	str	r2, [sp, #68]	; 0x44
   4f6b0:	mls	r0, r3, r7, r0
   4f6b4:	str	r5, [sp, #60]	; 0x3c
   4f6b8:	sub	r0, r0, r5
   4f6bc:	str	r0, [sp, #56]	; 0x38
   4f6c0:	sub	r0, fp, #136	; 0x88
   4f6c4:	orr	r4, r0, #4
   4f6c8:	ldr	r0, [fp, #20]
   4f6cc:	add	r0, r0, #4
   4f6d0:	str	r0, [sp, #84]	; 0x54
   4f6d4:	orr	r0, ip, #4
   4f6d8:	lsl	ip, r7, #1
   4f6dc:	str	r0, [sp, #80]	; 0x50
   4f6e0:	ldr	r0, [fp, #24]
   4f6e4:	sub	r0, r0, #1
   4f6e8:	str	r0, [sp, #40]	; 0x28
   4f6ec:	orr	r0, r6, #4
   4f6f0:	str	r0, [sp, #36]	; 0x24
   4f6f4:	mla	r0, r3, r7, r5
   4f6f8:	str	r0, [sp, #48]	; 0x30
   4f6fc:	and	r0, r3, #1
   4f700:	str	r0, [sp, #44]	; 0x2c
   4f704:	sub	r8, r3, r0
   4f708:	lsl	r0, r3, #2
   4f70c:	str	r0, [sp, #52]	; 0x34
   4f710:	ldr	r0, [sp, #88]	; 0x58
   4f714:	add	r0, r0, #4
   4f718:	str	r0, [sp, #72]	; 0x48
   4f71c:	mov	r0, r3
   4f720:	ldr	r6, [sp, #60]	; 0x3c
   4f724:	cmp	r0, #1
   4f728:	add	r2, r9, r6, lsl #1
   4f72c:	bge	4f784 <GetDataSlab+0x1b628>
   4f730:	b	4f800 <GetDataSlab+0x1b6a4>
   4f734:	ldr	r0, [sp, #36]	; 0x24
   4f738:	ldr	r0, [r0, r2]
   4f73c:	add	r9, r9, r0, lsl #1
   4f740:	add	r1, r0, r1
   4f744:	ldr	r0, [sp, #52]	; 0x34
   4f748:	ldr	r2, [sp, #72]	; 0x48
   4f74c:	ldr	r5, [sp, #68]	; 0x44
   4f750:	ldr	r3, [sp, #76]	; 0x4c
   4f754:	add	r2, r2, r0
   4f758:	ldr	r0, [sp, #64]	; 0x40
   4f75c:	str	r2, [sp, #72]	; 0x48
   4f760:	mov	r2, #0
   4f764:	add	r5, r5, r0
   4f768:	cmp	r5, r3
   4f76c:	str	r5, [sp, #68]	; 0x44
   4f770:	bge	5b6a0 <GetDataSlab+0x27544>
   4f774:	ldr	r6, [sp, #60]	; 0x3c
   4f778:	cmp	r0, #1
   4f77c:	add	r2, r9, r6, lsl #1
   4f780:	blt	4f800 <GetDataSlab+0x1b6a4>
   4f784:	mov	r3, #0
   4f788:	beq	4f7cc <GetDataSlab+0x1b670>
   4f78c:	ldr	r5, [sp, #72]	; 0x48
   4f790:	mov	r3, #0
   4f794:	ldrh	r6, [r2]
   4f798:	add	r3, r3, #2
   4f79c:	cmp	r8, r3
   4f7a0:	vmov	s0, r6
   4f7a4:	add	r6, r2, ip
   4f7a8:	add	r2, r2, lr
   4f7ac:	vcvt.f32.u32	s0, s0
   4f7b0:	vstr	s0, [r5, #-4]
   4f7b4:	ldrh	r6, [r6]
   4f7b8:	vmov	s0, r6
   4f7bc:	vcvt.f32.u32	s0, s0
   4f7c0:	vstr	s0, [r5]
   4f7c4:	add	r5, r5, #8
   4f7c8:	bne	4f794 <GetDataSlab+0x1b638>
   4f7cc:	ldr	r0, [sp, #44]	; 0x2c
   4f7d0:	ldr	r6, [sp, #48]	; 0x30
   4f7d4:	cmp	r0, #0
   4f7d8:	beq	4f800 <GetDataSlab+0x1b6a4>
   4f7dc:	ldr	r0, [sp, #88]	; 0x58
   4f7e0:	ldr	r5, [sp, #68]	; 0x44
   4f7e4:	add	r5, r0, r5, lsl #2
   4f7e8:	add	r3, r5, r3, lsl #2
   4f7ec:	ldrh	r5, [r2], ip
   4f7f0:	vmov	s0, r5
   4f7f4:	vcvt.f32.u32	s0, s0
   4f7f8:	ldr	r6, [sp, #48]	; 0x30
   4f7fc:	vstr	s0, [r3]
   4f800:	ldr	r0, [sp, #56]	; 0x38
   4f804:	add	r1, r6, r1
   4f808:	add	r9, r2, r0, lsl #1
   4f80c:	add	r1, r1, r0
   4f810:	ldr	r0, [fp, #24]
   4f814:	cmp	r0, #2
   4f818:	blt	4f744 <GetDataSlab+0x1b5e8>
   4f81c:	ldr	r3, [sp, #40]	; 0x28
   4f820:	mov	r2, #0
   4f824:	b	4f854 <GetDataSlab+0x1b6f8>
   4f828:	ldr	r5, [sp, #92]	; 0x5c
   4f82c:	sub	r0, fp, #176	; 0xb0
   4f830:	sub	r6, r6, sl
   4f834:	ldr	r0, [r0, r2]
   4f838:	ldr	r7, [r5, r2]
   4f83c:	mla	r0, r7, r0, r6
   4f840:	add	r1, r0, r1
   4f844:	add	r9, r9, r0, lsl #1
   4f848:	subs	r3, r3, #1
   4f84c:	add	r2, r2, #4
   4f850:	beq	4f744 <GetDataSlab+0x1b5e8>
   4f854:	ldr	r6, [r4, r2]
   4f858:	ldr	r0, [sp, #84]	; 0x54
   4f85c:	add	r6, r6, #1
   4f860:	str	r6, [r4, r2]
   4f864:	ldr	r7, [r0, r2]
   4f868:	sdiv	r0, r6, r7
   4f86c:	mls	r0, r0, r7, r6
   4f870:	cmp	r0, #0
   4f874:	bne	4f734 <GetDataSlab+0x1b5d8>
   4f878:	mov	r0, #0
   4f87c:	str	r0, [r4, r2]
   4f880:	ldr	r0, [sp, #80]	; 0x50
   4f884:	ldr	r6, [r0, r2]
   4f888:	sdiv	r0, r1, r6
   4f88c:	mls	sl, r0, r6, r1
   4f890:	cmp	sl, #0
   4f894:	bne	4f828 <GetDataSlab+0x1b6cc>
   4f898:	ldr	r0, [sp, #92]	; 0x5c
   4f89c:	ldr	r6, [r0, r2]
   4f8a0:	cmp	r6, #0
   4f8a4:	beq	4f848 <GetDataSlab+0x1b6ec>
   4f8a8:	sub	r0, fp, #176	; 0xb0
   4f8ac:	ldr	r0, [r0, r2]
   4f8b0:	mla	r1, r0, r6, r1
   4f8b4:	mul	r0, r0, r6
   4f8b8:	b	4f844 <GetDataSlab+0x1b6e8>
   4f8bc:	ldr	r0, [sp, #76]	; 0x4c
   4f8c0:	ldr	r1, [fp, #12]
   4f8c4:	sub	r7, fp, #96	; 0x60
   4f8c8:	cmp	r0, #1
   4f8cc:	ldr	r0, [sp, #88]	; 0x58
   4f8d0:	blt	5b69c <GetDataSlab+0x27540>
   4f8d4:	ldr	r4, [sp, #52]	; 0x34
   4f8d8:	ldr	r5, [sp, #72]	; 0x48
   4f8dc:	ldr	r2, [sp, #56]	; 0x38
   4f8e0:	add	r1, r1, #4
   4f8e4:	add	r0, r0, #4
   4f8e8:	str	r1, [sp, #84]	; 0x54
   4f8ec:	ldr	r1, [fp, #24]
   4f8f0:	mls	r2, r5, r4, r2
   4f8f4:	lsl	r8, r4, #3
   4f8f8:	sub	r1, r1, #1
   4f8fc:	str	r1, [sp, #40]	; 0x28
   4f900:	mov	r1, r5
   4f904:	str	r2, [sp, #64]	; 0x40
   4f908:	sub	r2, fp, #136	; 0x88
   4f90c:	orr	r6, r2, #4
   4f910:	ldr	r2, [fp, #20]
   4f914:	add	r9, r2, #4
   4f918:	sub	r2, fp, #176	; 0xb0
   4f91c:	orr	r2, r2, #4
   4f920:	str	r2, [sp, #56]	; 0x38
   4f924:	orr	r2, r7, #4
   4f928:	str	r2, [sp, #36]	; 0x24
   4f92c:	mul	r2, r5, r4
   4f930:	mov	r4, r0
   4f934:	mov	r0, #0
   4f938:	str	r0, [sp, #80]	; 0x50
   4f93c:	str	r2, [sp, #48]	; 0x30
   4f940:	and	r2, r5, #1
   4f944:	sub	sl, r5, r2
   4f948:	str	r2, [sp, #44]	; 0x2c
   4f94c:	lsl	r2, r5, #2
   4f950:	str	r2, [sp, #60]	; 0x3c
   4f954:	b	4f994 <GetDataSlab+0x1b838>
   4f958:	ldr	r0, [sp, #36]	; 0x24
   4f95c:	ldr	r0, [r0, r2]
   4f960:	add	ip, ip, r0, lsl #2
   4f964:	add	r3, r0, r3
   4f968:	ldr	r0, [sp, #60]	; 0x3c
   4f96c:	ldr	r4, [sp, #68]	; 0x44
   4f970:	ldr	r1, [sp, #72]	; 0x48
   4f974:	ldr	r7, [sp, #80]	; 0x50
   4f978:	mov	r2, #0
   4f97c:	add	r4, r4, r0
   4f980:	ldr	r0, [sp, #76]	; 0x4c
   4f984:	add	r7, r7, r1
   4f988:	str	r7, [sp, #80]	; 0x50
   4f98c:	cmp	r7, r0
   4f990:	bge	5b6a0 <GetDataSlab+0x27544>
   4f994:	ldr	r0, [fp, #12]
   4f998:	cmp	r1, #1
   4f99c:	str	r4, [sp, #68]	; 0x44
   4f9a0:	ldr	r2, [r0]
   4f9a4:	add	r5, ip, r2, lsl #2
   4f9a8:	blt	4f9c0 <GetDataSlab+0x1b864>
   4f9ac:	mov	r7, #0
   4f9b0:	cmp	r1, #1
   4f9b4:	bne	4f9c8 <GetDataSlab+0x1b86c>
   4f9b8:	ldr	r4, [sp, #52]	; 0x34
   4f9bc:	b	4fa04 <GetDataSlab+0x1b8a8>
   4f9c0:	add	r0, r2, r3
   4f9c4:	b	4fa3c <GetDataSlab+0x1b8e0>
   4f9c8:	mov	r0, r4
   4f9cc:	ldr	r4, [sp, #52]	; 0x34
   4f9d0:	mov	r7, #0
   4f9d4:	vldr	s0, [r5]
   4f9d8:	add	r1, r5, r4, lsl #2
   4f9dc:	add	r7, r7, #2
   4f9e0:	add	r5, r5, r8
   4f9e4:	cmp	sl, r7
   4f9e8:	vcvt.f32.s32	s0, s0
   4f9ec:	vstr	s0, [r0, #-4]
   4f9f0:	vldr	s0, [r1]
   4f9f4:	vcvt.f32.s32	s0, s0
   4f9f8:	vstr	s0, [r0]
   4f9fc:	add	r0, r0, #8
   4fa00:	bne	4f9d4 <GetDataSlab+0x1b878>
   4fa04:	ldr	r0, [sp, #48]	; 0x30
   4fa08:	ldr	r1, [sp, #44]	; 0x2c
   4fa0c:	add	r0, r0, r3
   4fa10:	cmp	r1, #0
   4fa14:	beq	4fa38 <GetDataSlab+0x1b8dc>
   4fa18:	ldr	r1, [sp, #88]	; 0x58
   4fa1c:	ldr	r3, [sp, #80]	; 0x50
   4fa20:	add	r1, r1, r3, lsl #2
   4fa24:	ldr	r3, [r5], r4, lsl #2
   4fa28:	add	r1, r1, r7, lsl #2
   4fa2c:	vmov	s0, r3
   4fa30:	vcvt.f32.s32	s0, s0
   4fa34:	vstr	s0, [r1]
   4fa38:	add	r0, r0, r2
   4fa3c:	ldr	r1, [sp, #64]	; 0x40
   4fa40:	ldr	r4, [sp, #56]	; 0x38
   4fa44:	sub	r1, r1, r2
   4fa48:	add	r3, r0, r1
   4fa4c:	ldr	r0, [fp, #24]
   4fa50:	add	ip, r5, r1, lsl #2
   4fa54:	cmp	r0, #2
   4fa58:	blt	4f968 <GetDataSlab+0x1b80c>
   4fa5c:	ldr	r5, [sp, #40]	; 0x28
   4fa60:	mov	r2, #0
   4fa64:	b	4fa94 <GetDataSlab+0x1b938>
   4fa68:	ldr	r7, [sp, #84]	; 0x54
   4fa6c:	sub	r1, fp, #176	; 0xb0
   4fa70:	sub	r0, r0, lr
   4fa74:	ldr	r1, [r1, r2]
   4fa78:	ldr	r7, [r7, r2]
   4fa7c:	mla	r0, r7, r1, r0
   4fa80:	add	r3, r0, r3
   4fa84:	add	ip, ip, r0, lsl #2
   4fa88:	subs	r5, r5, #1
   4fa8c:	add	r2, r2, #4
   4fa90:	beq	4f968 <GetDataSlab+0x1b80c>
   4fa94:	ldr	r0, [r6, r2]
   4fa98:	add	r0, r0, #1
   4fa9c:	str	r0, [r6, r2]
   4faa0:	ldr	r1, [r9, r2]
   4faa4:	sdiv	r7, r0, r1
   4faa8:	mls	r0, r7, r1, r0
   4faac:	cmp	r0, #0
   4fab0:	bne	4f958 <GetDataSlab+0x1b7fc>
   4fab4:	mov	r0, #0
   4fab8:	str	r0, [r6, r2]
   4fabc:	ldr	r0, [r4, r2]
   4fac0:	sdiv	r1, r3, r0
   4fac4:	mls	lr, r1, r0, r3
   4fac8:	cmp	lr, #0
   4facc:	bne	4fa68 <GetDataSlab+0x1b90c>
   4fad0:	ldr	r0, [sp, #84]	; 0x54
   4fad4:	ldr	r0, [r0, r2]
   4fad8:	cmp	r0, #0
   4fadc:	beq	4fa88 <GetDataSlab+0x1b92c>
   4fae0:	sub	r1, fp, #176	; 0xb0
   4fae4:	ldr	r1, [r1, r2]
   4fae8:	mla	r3, r1, r0, r3
   4faec:	mul	r0, r1, r0
   4faf0:	b	4fa84 <GetDataSlab+0x1b928>
   4faf4:	ldr	r0, [sp, #76]	; 0x4c
   4faf8:	ldr	r1, [fp, #12]
   4fafc:	sub	r7, fp, #96	; 0x60
   4fb00:	cmp	r0, #1
   4fb04:	ldr	r0, [sp, #88]	; 0x58
   4fb08:	blt	5b69c <GetDataSlab+0x27540>
   4fb0c:	ldr	r4, [sp, #52]	; 0x34
   4fb10:	ldr	r5, [sp, #72]	; 0x48
   4fb14:	ldr	r2, [sp, #56]	; 0x38
   4fb18:	add	r1, r1, #4
   4fb1c:	add	r0, r0, #4
   4fb20:	str	r1, [sp, #84]	; 0x54
   4fb24:	ldr	r1, [fp, #24]
   4fb28:	mls	r2, r5, r4, r2
   4fb2c:	lsl	r8, r4, #3
   4fb30:	sub	r1, r1, #1
   4fb34:	str	r1, [sp, #40]	; 0x28
   4fb38:	mov	r1, r5
   4fb3c:	str	r2, [sp, #64]	; 0x40
   4fb40:	sub	r2, fp, #136	; 0x88
   4fb44:	orr	r6, r2, #4
   4fb48:	ldr	r2, [fp, #20]
   4fb4c:	add	r9, r2, #4
   4fb50:	sub	r2, fp, #176	; 0xb0
   4fb54:	orr	r2, r2, #4
   4fb58:	str	r2, [sp, #56]	; 0x38
   4fb5c:	orr	r2, r7, #4
   4fb60:	str	r2, [sp, #36]	; 0x24
   4fb64:	mul	r2, r5, r4
   4fb68:	mov	r4, r0
   4fb6c:	mov	r0, #0
   4fb70:	str	r0, [sp, #80]	; 0x50
   4fb74:	str	r2, [sp, #48]	; 0x30
   4fb78:	and	r2, r5, #1
   4fb7c:	sub	sl, r5, r2
   4fb80:	str	r2, [sp, #44]	; 0x2c
   4fb84:	lsl	r2, r5, #2
   4fb88:	str	r2, [sp, #60]	; 0x3c
   4fb8c:	b	4fbcc <GetDataSlab+0x1ba70>
   4fb90:	ldr	r0, [sp, #36]	; 0x24
   4fb94:	ldr	r0, [r0, r2]
   4fb98:	add	ip, ip, r0, lsl #2
   4fb9c:	add	r3, r0, r3
   4fba0:	ldr	r0, [sp, #60]	; 0x3c
   4fba4:	ldr	r4, [sp, #68]	; 0x44
   4fba8:	ldr	r1, [sp, #72]	; 0x48
   4fbac:	ldr	r7, [sp, #80]	; 0x50
   4fbb0:	mov	r2, #0
   4fbb4:	add	r4, r4, r0
   4fbb8:	ldr	r0, [sp, #76]	; 0x4c
   4fbbc:	add	r7, r7, r1
   4fbc0:	str	r7, [sp, #80]	; 0x50
   4fbc4:	cmp	r7, r0
   4fbc8:	bge	5b6a0 <GetDataSlab+0x27544>
   4fbcc:	ldr	r0, [fp, #12]
   4fbd0:	cmp	r1, #1
   4fbd4:	str	r4, [sp, #68]	; 0x44
   4fbd8:	ldr	r2, [r0]
   4fbdc:	add	r5, ip, r2, lsl #2
   4fbe0:	blt	4fbf8 <GetDataSlab+0x1ba9c>
   4fbe4:	mov	r7, #0
   4fbe8:	cmp	r1, #1
   4fbec:	bne	4fc00 <GetDataSlab+0x1baa4>
   4fbf0:	ldr	r4, [sp, #52]	; 0x34
   4fbf4:	b	4fc3c <GetDataSlab+0x1bae0>
   4fbf8:	add	r0, r2, r3
   4fbfc:	b	4fc74 <GetDataSlab+0x1bb18>
   4fc00:	mov	r0, r4
   4fc04:	ldr	r4, [sp, #52]	; 0x34
   4fc08:	mov	r7, #0
   4fc0c:	vldr	s0, [r5]
   4fc10:	add	r1, r5, r4, lsl #2
   4fc14:	add	r7, r7, #2
   4fc18:	add	r5, r5, r8
   4fc1c:	cmp	sl, r7
   4fc20:	vcvt.f32.u32	s0, s0
   4fc24:	vstr	s0, [r0, #-4]
   4fc28:	vldr	s0, [r1]
   4fc2c:	vcvt.f32.u32	s0, s0
   4fc30:	vstr	s0, [r0]
   4fc34:	add	r0, r0, #8
   4fc38:	bne	4fc0c <GetDataSlab+0x1bab0>
   4fc3c:	ldr	r0, [sp, #48]	; 0x30
   4fc40:	ldr	r1, [sp, #44]	; 0x2c
   4fc44:	add	r0, r0, r3
   4fc48:	cmp	r1, #0
   4fc4c:	beq	4fc70 <GetDataSlab+0x1bb14>
   4fc50:	ldr	r1, [sp, #88]	; 0x58
   4fc54:	ldr	r3, [sp, #80]	; 0x50
   4fc58:	add	r1, r1, r3, lsl #2
   4fc5c:	ldr	r3, [r5], r4, lsl #2
   4fc60:	add	r1, r1, r7, lsl #2
   4fc64:	vmov	s0, r3
   4fc68:	vcvt.f32.u32	s0, s0
   4fc6c:	vstr	s0, [r1]
   4fc70:	add	r0, r0, r2
   4fc74:	ldr	r1, [sp, #64]	; 0x40
   4fc78:	ldr	r4, [sp, #56]	; 0x38
   4fc7c:	sub	r1, r1, r2
   4fc80:	add	r3, r0, r1
   4fc84:	ldr	r0, [fp, #24]
   4fc88:	add	ip, r5, r1, lsl #2
   4fc8c:	cmp	r0, #2
   4fc90:	blt	4fba0 <GetDataSlab+0x1ba44>
   4fc94:	ldr	r5, [sp, #40]	; 0x28
   4fc98:	mov	r2, #0
   4fc9c:	b	4fccc <GetDataSlab+0x1bb70>
   4fca0:	ldr	r7, [sp, #84]	; 0x54
   4fca4:	sub	r1, fp, #176	; 0xb0
   4fca8:	sub	r0, r0, lr
   4fcac:	ldr	r1, [r1, r2]
   4fcb0:	ldr	r7, [r7, r2]
   4fcb4:	mla	r0, r7, r1, r0
   4fcb8:	add	r3, r0, r3
   4fcbc:	add	ip, ip, r0, lsl #2
   4fcc0:	subs	r5, r5, #1
   4fcc4:	add	r2, r2, #4
   4fcc8:	beq	4fba0 <GetDataSlab+0x1ba44>
   4fccc:	ldr	r0, [r6, r2]
   4fcd0:	add	r0, r0, #1
   4fcd4:	str	r0, [r6, r2]
   4fcd8:	ldr	r1, [r9, r2]
   4fcdc:	sdiv	r7, r0, r1
   4fce0:	mls	r0, r7, r1, r0
   4fce4:	cmp	r0, #0
   4fce8:	bne	4fb90 <GetDataSlab+0x1ba34>
   4fcec:	mov	r0, #0
   4fcf0:	str	r0, [r6, r2]
   4fcf4:	ldr	r0, [r4, r2]
   4fcf8:	sdiv	r1, r3, r0
   4fcfc:	mls	lr, r1, r0, r3
   4fd00:	cmp	lr, #0
   4fd04:	bne	4fca0 <GetDataSlab+0x1bb44>
   4fd08:	ldr	r0, [sp, #84]	; 0x54
   4fd0c:	ldr	r0, [r0, r2]
   4fd10:	cmp	r0, #0
   4fd14:	beq	4fcc0 <GetDataSlab+0x1bb64>
   4fd18:	sub	r1, fp, #176	; 0xb0
   4fd1c:	ldr	r1, [r1, r2]
   4fd20:	mla	r3, r1, r0, r3
   4fd24:	mul	r0, r1, r0
   4fd28:	b	4fcbc <GetDataSlab+0x1bb60>
   4fd2c:	ldr	r3, [fp, #20]
   4fd30:	ldr	r0, [sp, #76]	; 0x4c
   4fd34:	mov	r7, r3
   4fd38:	ldr	r3, [sp, #64]	; 0x40
   4fd3c:	cmp	r0, #1
   4fd40:	blt	5b69c <GetDataSlab+0x27540>
   4fd44:	ldr	r2, [sp, #92]	; 0x5c
   4fd48:	ldr	r4, [sp, #52]	; 0x34
   4fd4c:	ldr	r0, [sp, #60]	; 0x3c
   4fd50:	orr	lr, ip, #4
   4fd54:	ldr	r5, [r2], #4
   4fd58:	mls	r0, r3, r4, r0
   4fd5c:	lsl	r9, r4, #3
   4fd60:	str	r2, [sp, #92]	; 0x5c
   4fd64:	ldr	r2, [fp, #24]
   4fd68:	sub	r0, r0, r5
   4fd6c:	str	r5, [sp, #72]	; 0x48
   4fd70:	sub	r2, r2, #1
   4fd74:	str	r0, [sp, #68]	; 0x44
   4fd78:	sub	r0, fp, #136	; 0x88
   4fd7c:	str	r2, [sp, #44]	; 0x2c
   4fd80:	sub	r2, fp, #96	; 0x60
   4fd84:	orr	r6, r0, #4
   4fd88:	add	r0, r7, #4
   4fd8c:	orr	r2, r2, #4
   4fd90:	str	r2, [sp, #40]	; 0x28
   4fd94:	mla	r2, r3, r4, r5
   4fd98:	str	r2, [sp, #56]	; 0x38
   4fd9c:	and	r2, r3, #1
   4fda0:	sub	sl, r3, r2
   4fda4:	str	r2, [sp, #48]	; 0x30
   4fda8:	lsl	r2, r3, #2
   4fdac:	str	r2, [sp, #60]	; 0x3c
   4fdb0:	ldr	r2, [sp, #88]	; 0x58
   4fdb4:	add	r2, r2, #4
   4fdb8:	str	r2, [sp, #84]	; 0x54
   4fdbc:	mov	r2, #0
   4fdc0:	str	r2, [sp, #80]	; 0x50
   4fdc4:	ldr	r7, [sp, #72]	; 0x48
   4fdc8:	cmp	r3, #1
   4fdcc:	add	r2, r8, r7, lsl #2
   4fdd0:	bge	4fe28 <GetDataSlab+0x1bccc>
   4fdd4:	b	4fe8c <GetDataSlab+0x1bd30>
   4fdd8:	ldr	r3, [sp, #40]	; 0x28
   4fddc:	ldr	r2, [r3, r2]
   4fde0:	add	r8, r8, r2, lsl #2
   4fde4:	add	r1, r2, r1
   4fde8:	ldr	r2, [sp, #60]	; 0x3c
   4fdec:	ldr	r3, [sp, #84]	; 0x54
   4fdf0:	ldr	r5, [sp, #80]	; 0x50
   4fdf4:	ldr	r7, [sp, #76]	; 0x4c
   4fdf8:	add	r3, r3, r2
   4fdfc:	mov	r2, #0
   4fe00:	str	r3, [sp, #84]	; 0x54
   4fe04:	ldr	r3, [sp, #64]	; 0x40
   4fe08:	add	r5, r5, r3
   4fe0c:	cmp	r5, r7
   4fe10:	str	r5, [sp, #80]	; 0x50
   4fe14:	bge	5b6a0 <GetDataSlab+0x27544>
   4fe18:	ldr	r7, [sp, #72]	; 0x48
   4fe1c:	cmp	r3, #1
   4fe20:	add	r2, r8, r7, lsl #2
   4fe24:	blt	4fe8c <GetDataSlab+0x1bd30>
   4fe28:	ldr	ip, [sp, #88]	; 0x58
   4fe2c:	ldr	r4, [sp, #52]	; 0x34
   4fe30:	mov	r7, #0
   4fe34:	beq	4fe64 <GetDataSlab+0x1bd08>
   4fe38:	ldr	r5, [sp, #84]	; 0x54
   4fe3c:	mov	r7, #0
   4fe40:	ldr	r3, [r2]
   4fe44:	add	r7, r7, #2
   4fe48:	cmp	sl, r7
   4fe4c:	str	r3, [r5, #-4]
   4fe50:	ldr	r3, [r2, r4, lsl #2]
   4fe54:	add	r2, r2, r9
   4fe58:	str	r3, [r5]
   4fe5c:	add	r5, r5, #8
   4fe60:	bne	4fe40 <GetDataSlab+0x1bce4>
   4fe64:	ldr	r3, [sp, #48]	; 0x30
   4fe68:	cmp	r3, #0
   4fe6c:	ldr	r3, [sp, #56]	; 0x38
   4fe70:	beq	4fe90 <GetDataSlab+0x1bd34>
   4fe74:	ldr	r3, [sp, #80]	; 0x50
   4fe78:	ldr	r5, [r2], r4, lsl #2
   4fe7c:	add	r3, ip, r3, lsl #2
   4fe80:	str	r5, [r3, r7, lsl #2]
   4fe84:	ldr	r3, [sp, #56]	; 0x38
   4fe88:	b	4fe90 <GetDataSlab+0x1bd34>
   4fe8c:	mov	r3, r7
   4fe90:	ldr	r7, [sp, #68]	; 0x44
   4fe94:	add	r1, r3, r1
   4fe98:	add	r8, r2, r7, lsl #2
   4fe9c:	ldr	r2, [fp, #24]
   4fea0:	add	r1, r1, r7
   4fea4:	cmp	r2, #2
   4fea8:	blt	4fde8 <GetDataSlab+0x1bc8c>
   4feac:	ldr	r7, [sp, #44]	; 0x2c
   4feb0:	mov	r2, #0
   4feb4:	b	4fee4 <GetDataSlab+0x1bd88>
   4feb8:	ldr	r5, [sp, #92]	; 0x5c
   4febc:	sub	r4, fp, #176	; 0xb0
   4fec0:	sub	r3, r3, ip
   4fec4:	ldr	r4, [r4, r2]
   4fec8:	ldr	r5, [r5, r2]
   4fecc:	mla	r3, r5, r4, r3
   4fed0:	add	r1, r3, r1
   4fed4:	add	r8, r8, r3, lsl #2
   4fed8:	subs	r7, r7, #1
   4fedc:	add	r2, r2, #4
   4fee0:	beq	4fde8 <GetDataSlab+0x1bc8c>
   4fee4:	ldr	r3, [r6, r2]
   4fee8:	add	r3, r3, #1
   4feec:	str	r3, [r6, r2]
   4fef0:	ldr	r5, [r0, r2]
   4fef4:	sdiv	r4, r3, r5
   4fef8:	mls	r3, r4, r5, r3
   4fefc:	cmp	r3, #0
   4ff00:	bne	4fdd8 <GetDataSlab+0x1bc7c>
   4ff04:	mov	r3, #0
   4ff08:	str	r3, [r6, r2]
   4ff0c:	ldr	r3, [lr, r2]
   4ff10:	sdiv	r5, r1, r3
   4ff14:	mls	ip, r5, r3, r1
   4ff18:	cmp	ip, #0
   4ff1c:	bne	4feb8 <GetDataSlab+0x1bd5c>
   4ff20:	ldr	r3, [sp, #92]	; 0x5c
   4ff24:	ldr	r3, [r3, r2]
   4ff28:	cmp	r3, #0
   4ff2c:	beq	4fed8 <GetDataSlab+0x1bd7c>
   4ff30:	sub	r5, fp, #176	; 0xb0
   4ff34:	ldr	r5, [r5, r2]
   4ff38:	mla	r1, r5, r3, r1
   4ff3c:	mul	r3, r5, r3
   4ff40:	b	4fed4 <GetDataSlab+0x1bd78>
   4ff44:	ldr	r0, [sp, #76]	; 0x4c
   4ff48:	ldr	r3, [sp, #72]	; 0x48
   4ff4c:	cmp	r0, #1
   4ff50:	ldr	r0, [sp, #60]	; 0x3c
   4ff54:	blt	5b69c <GetDataSlab+0x27540>
   4ff58:	ldr	r2, [sp, #92]	; 0x5c
   4ff5c:	ldr	r7, [sp, #44]	; 0x2c
   4ff60:	ldr	r6, [r2], #4
   4ff64:	mls	r0, r3, r7, r0
   4ff68:	lsl	sl, r7, #3
   4ff6c:	lsl	r8, r7, #4
   4ff70:	str	r2, [sp, #92]	; 0x5c
   4ff74:	sub	r0, r0, r6
   4ff78:	str	r6, [sp, #64]	; 0x40
   4ff7c:	str	r0, [sp, #60]	; 0x3c
   4ff80:	sub	r0, fp, #136	; 0x88
   4ff84:	orr	r4, r0, #4
   4ff88:	ldr	r0, [fp, #20]
   4ff8c:	add	r0, r0, #4
   4ff90:	str	r0, [sp, #40]	; 0x28
   4ff94:	orr	r0, ip, #4
   4ff98:	str	r0, [sp, #84]	; 0x54
   4ff9c:	ldr	r0, [fp, #24]
   4ffa0:	sub	r0, r0, #1
   4ffa4:	str	r0, [sp, #36]	; 0x24
   4ffa8:	sub	r0, fp, #96	; 0x60
   4ffac:	orr	r0, r0, #4
   4ffb0:	str	r0, [sp, #32]
   4ffb4:	mla	r0, r3, r7, r6
   4ffb8:	str	r0, [sp, #52]	; 0x34
   4ffbc:	and	r0, r3, #1
   4ffc0:	sub	ip, r3, r0
   4ffc4:	str	r0, [sp, #48]	; 0x30
   4ffc8:	lsl	r0, r3, #2
   4ffcc:	str	r0, [sp, #56]	; 0x38
   4ffd0:	ldr	r0, [sp, #88]	; 0x58
   4ffd4:	add	r0, r0, #4
   4ffd8:	str	r0, [sp, #80]	; 0x50
   4ffdc:	mov	r0, #0
   4ffe0:	str	r0, [sp, #68]	; 0x44
   4ffe4:	ldr	lr, [sp, #64]	; 0x40
   4ffe8:	cmp	r3, #1
   4ffec:	add	r2, r9, lr, lsl #3
   4fff0:	bge	50048 <GetDataSlab+0x1beec>
   4fff4:	b	500c0 <GetDataSlab+0x1bf64>
   4fff8:	ldr	r0, [sp, #32]
   4fffc:	ldr	r0, [r0, r2]
   50000:	add	r9, r9, r0, lsl #3
   50004:	add	r1, r0, r1
   50008:	ldr	r0, [sp, #56]	; 0x38
   5000c:	ldr	r2, [sp, #80]	; 0x50
   50010:	ldr	r3, [sp, #72]	; 0x48
   50014:	ldr	r7, [sp, #68]	; 0x44
   50018:	add	r2, r2, r0
   5001c:	ldr	r0, [sp, #76]	; 0x4c
   50020:	add	r7, r7, r3
   50024:	str	r2, [sp, #80]	; 0x50
   50028:	mov	r2, #0
   5002c:	str	r7, [sp, #68]	; 0x44
   50030:	cmp	r7, r0
   50034:	bge	5b6a0 <GetDataSlab+0x27544>
   50038:	ldr	lr, [sp, #64]	; 0x40
   5003c:	cmp	r3, #1
   50040:	add	r2, r9, lr, lsl #3
   50044:	blt	500c0 <GetDataSlab+0x1bf64>
   50048:	mov	r3, #0
   5004c:	beq	50088 <GetDataSlab+0x1bf2c>
   50050:	ldr	r5, [sp, #80]	; 0x50
   50054:	mov	r3, #0
   50058:	vldr	d16, [r2]
   5005c:	add	r0, r2, sl
   50060:	add	r3, r3, #2
   50064:	add	r2, r2, r8
   50068:	cmp	ip, r3
   5006c:	vcvt.f32.f64	s0, d16
   50070:	vstr	s0, [r5, #-4]
   50074:	vldr	d16, [r0]
   50078:	vcvt.f32.f64	s0, d16
   5007c:	vstr	s0, [r5]
   50080:	add	r5, r5, #8
   50084:	bne	50058 <GetDataSlab+0x1befc>
   50088:	ldr	r0, [sp, #48]	; 0x30
   5008c:	ldr	lr, [sp, #52]	; 0x34
   50090:	cmp	r0, #0
   50094:	beq	500c0 <GetDataSlab+0x1bf64>
   50098:	vldr	d16, [r2]
   5009c:	ldr	r0, [sp, #88]	; 0x58
   500a0:	ldr	r7, [sp, #68]	; 0x44
   500a4:	ldr	lr, [sp, #52]	; 0x34
   500a8:	add	r0, r0, r7, lsl #2
   500ac:	vcvt.f32.f64	s0, d16
   500b0:	add	r0, r0, r3, lsl #2
   500b4:	vstr	s0, [r0]
   500b8:	ldr	r0, [sp, #44]	; 0x2c
   500bc:	add	r2, r2, r0, lsl #3
   500c0:	ldr	r3, [sp, #60]	; 0x3c
   500c4:	add	r0, lr, r1
   500c8:	add	r1, r0, r3
   500cc:	ldr	r0, [fp, #24]
   500d0:	add	r9, r2, r3, lsl #3
   500d4:	cmp	r0, #2
   500d8:	blt	50008 <GetDataSlab+0x1beac>
   500dc:	ldr	r3, [sp, #36]	; 0x24
   500e0:	ldr	lr, [sp, #40]	; 0x28
   500e4:	mov	r2, #0
   500e8:	b	50118 <GetDataSlab+0x1bfbc>
   500ec:	sub	r7, fp, #176	; 0xb0
   500f0:	sub	r0, r0, r6
   500f4:	ldr	r5, [r7, r2]
   500f8:	ldr	r7, [sp, #92]	; 0x5c
   500fc:	ldr	r7, [r7, r2]
   50100:	mla	r0, r7, r5, r0
   50104:	add	r1, r0, r1
   50108:	add	r9, r9, r0, lsl #3
   5010c:	subs	r3, r3, #1
   50110:	add	r2, r2, #4
   50114:	beq	50008 <GetDataSlab+0x1beac>
   50118:	ldr	r0, [r4, r2]
   5011c:	add	r0, r0, #1
   50120:	str	r0, [r4, r2]
   50124:	ldr	r6, [lr, r2]
   50128:	sdiv	r5, r0, r6
   5012c:	mls	r0, r5, r6, r0
   50130:	cmp	r0, #0
   50134:	bne	4fff8 <GetDataSlab+0x1be9c>
   50138:	mov	r0, #0
   5013c:	str	r0, [r4, r2]
   50140:	ldr	r0, [sp, #84]	; 0x54
   50144:	ldr	r0, [r0, r2]
   50148:	sdiv	r6, r1, r0
   5014c:	mls	r6, r6, r0, r1
   50150:	cmp	r6, #0
   50154:	bne	500ec <GetDataSlab+0x1bf90>
   50158:	ldr	r0, [sp, #92]	; 0x5c
   5015c:	ldr	r0, [r0, r2]
   50160:	cmp	r0, #0
   50164:	beq	5010c <GetDataSlab+0x1bfb0>
   50168:	sub	r7, fp, #176	; 0xb0
   5016c:	ldr	r7, [r7, r2]
   50170:	mla	r1, r7, r0, r1
   50174:	mul	r0, r7, r0
   50178:	b	50108 <GetDataSlab+0x1bfac>
   5017c:	ldr	r0, [sp, #68]	; 0x44
   50180:	ldr	r1, [sp, #88]	; 0x58
   50184:	ldr	r2, [fp, #12]
   50188:	sub	r3, fp, #96	; 0x60
   5018c:	cmp	r0, #1
   50190:	blt	503e0 <GetDataSlab+0x1c284>
   50194:	ldr	r4, [sp, #20]
   50198:	ldr	lr, [sp, #56]	; 0x38
   5019c:	ldr	r0, [sp, #28]
   501a0:	mov	r9, r2
   501a4:	add	r1, r1, #4
   501a8:	ldr	r2, [r9], #4
   501ac:	str	r9, [sp, #32]
   501b0:	mls	r0, lr, r4, r0
   501b4:	lsl	r8, r4, #4
   501b8:	str	r2, [sp, #52]	; 0x34
   501bc:	sub	r0, r0, r2
   501c0:	str	r0, [sp, #48]	; 0x30
   501c4:	sub	r0, fp, #136	; 0x88
   501c8:	orr	r7, r0, #4
   501cc:	ldr	r0, [fp, #20]
   501d0:	str	r7, [sp, #24]
   501d4:	add	r0, r0, #4
   501d8:	str	r0, [sp, #76]	; 0x4c
   501dc:	orr	r0, ip, #4
   501e0:	str	r0, [sp, #72]	; 0x48
   501e4:	ldr	r0, [fp, #24]
   501e8:	sub	r0, r0, #1
   501ec:	str	r0, [sp, #16]
   501f0:	orr	r0, r3, #4
   501f4:	lsl	r3, lr, #2
   501f8:	str	r0, [sp, #8]
   501fc:	mla	r0, lr, r4, r2
   50200:	str	r3, [sp, #40]	; 0x28
   50204:	lsl	r3, r4, #3
   50208:	str	r3, [sp, #12]
   5020c:	mov	r3, #0
   50210:	str	r3, [sp, #64]	; 0x40
   50214:	str	r0, [sp, #36]	; 0x24
   50218:	and	r0, lr, #1
   5021c:	str	r0, [sp, #28]
   50220:	sub	r0, lr, r0
   50224:	str	r0, [sp, #44]	; 0x2c
   50228:	add	r4, sl, r2, lsl #3
   5022c:	cmp	lr, #1
   50230:	str	r1, [sp, #60]	; 0x3c
   50234:	bge	50288 <GetDataSlab+0x1c12c>
   50238:	b	50330 <GetDataSlab+0x1c1d4>
   5023c:	ldr	r1, [sp, #8]
   50240:	ldr	r0, [r1, r0]
   50244:	add	sl, sl, r0, lsl #3
   50248:	add	r5, r0, r5
   5024c:	ldr	r0, [sp, #40]	; 0x28
   50250:	ldr	r1, [sp, #60]	; 0x3c
   50254:	ldr	r2, [sp, #64]	; 0x40
   50258:	add	r1, r1, r0
   5025c:	ldr	r0, [sp, #68]	; 0x44
   50260:	add	r2, r2, lr
   50264:	str	r2, [sp, #64]	; 0x40
   50268:	cmp	r2, r0
   5026c:	ldr	r2, [sp, #52]	; 0x34
   50270:	ldr	r0, [sp, #44]	; 0x2c
   50274:	bge	503e0 <GetDataSlab+0x1c284>
   50278:	add	r4, sl, r2, lsl #3
   5027c:	cmp	lr, #1
   50280:	str	r1, [sp, #60]	; 0x3c
   50284:	blt	50330 <GetDataSlab+0x1c1d4>
   50288:	mov	r7, r8
   5028c:	mov	r6, #0
   50290:	beq	502d8 <GetDataSlab+0x1c17c>
   50294:	ldr	r8, [sp, #12]
   50298:	mov	r6, #0
   5029c:	mov	r9, r1
   502a0:	mov	sl, r0
   502a4:	ldrd	r0, [r4]
   502a8:	bl	71774 <__aeabi_l2f>
   502ac:	str	r0, [r9, #-4]
   502b0:	mov	r1, r4
   502b4:	ldr	r0, [r1, r8]!
   502b8:	ldr	r1, [r1, #4]
   502bc:	bl	71774 <__aeabi_l2f>
   502c0:	add	r6, r6, #2
   502c4:	str	r0, [r9]
   502c8:	add	r4, r4, r7
   502cc:	add	r9, r9, #8
   502d0:	cmp	sl, r6
   502d4:	bne	502a4 <GetDataSlab+0x1c148>
   502d8:	ldr	r0, [sp, #28]
   502dc:	mov	r8, r7
   502e0:	ldr	lr, [sp, #56]	; 0x38
   502e4:	ldr	r9, [sp, #32]
   502e8:	ldr	r7, [sp, #24]
   502ec:	sub	ip, fp, #176	; 0xb0
   502f0:	cmp	r0, #0
   502f4:	ldr	r0, [sp, #36]	; 0x24
   502f8:	beq	50334 <GetDataSlab+0x1c1d8>
   502fc:	ldr	r0, [sp, #88]	; 0x58
   50300:	ldr	r1, [sp, #64]	; 0x40
   50304:	add	r9, r0, r1, lsl #2
   50308:	ldrd	r0, [r4]
   5030c:	bl	71774 <__aeabi_l2f>
   50310:	str	r0, [r9, r6, lsl #2]
   50314:	ldr	r0, [sp, #20]
   50318:	ldr	r9, [sp, #32]
   5031c:	ldr	lr, [sp, #56]	; 0x38
   50320:	sub	ip, fp, #176	; 0xb0
   50324:	add	r4, r4, r0, lsl #3
   50328:	ldr	r0, [sp, #36]	; 0x24
   5032c:	b	50334 <GetDataSlab+0x1c1d8>
   50330:	mov	r0, r2
   50334:	ldr	r1, [sp, #48]	; 0x30
   50338:	add	r0, r0, r5
   5033c:	add	r5, r0, r1
   50340:	ldr	r0, [fp, #24]
   50344:	add	sl, r4, r1, lsl #3
   50348:	cmp	r0, #2
   5034c:	blt	5024c <GetDataSlab+0x1c0f0>
   50350:	ldr	r1, [sp, #16]
   50354:	mov	r0, #0
   50358:	b	50380 <GetDataSlab+0x1c224>
   5035c:	ldr	r6, [ip, r0]
   50360:	ldr	r4, [r9, r0]
   50364:	sub	r2, r2, r3
   50368:	mla	r2, r4, r6, r2
   5036c:	add	r5, r2, r5
   50370:	add	sl, sl, r2, lsl #3
   50374:	subs	r1, r1, #1
   50378:	add	r0, r0, #4
   5037c:	beq	5024c <GetDataSlab+0x1c0f0>
   50380:	ldr	r2, [r7, r0]
   50384:	ldr	r3, [sp, #76]	; 0x4c
   50388:	add	r2, r2, #1
   5038c:	str	r2, [r7, r0]
   50390:	ldr	r3, [r3, r0]
   50394:	sdiv	r6, r2, r3
   50398:	mls	r2, r6, r3, r2
   5039c:	cmp	r2, #0
   503a0:	bne	5023c <GetDataSlab+0x1c0e0>
   503a4:	mov	r2, #0
   503a8:	str	r2, [r7, r0]
   503ac:	ldr	r2, [sp, #72]	; 0x48
   503b0:	ldr	r2, [r2, r0]
   503b4:	sdiv	r3, r5, r2
   503b8:	mls	r3, r3, r2, r5
   503bc:	cmp	r3, #0
   503c0:	bne	5035c <GetDataSlab+0x1c200>
   503c4:	ldr	r2, [r9, r0]
   503c8:	cmp	r2, #0
   503cc:	beq	50374 <GetDataSlab+0x1c218>
   503d0:	ldr	r3, [ip, r0]
   503d4:	mla	r5, r3, r2, r5
   503d8:	mul	r2, r3, r2
   503dc:	b	50370 <GetDataSlab+0x1c214>
   503e0:	mov	r2, #0
   503e4:	ldr	r0, [sp, #84]	; 0x54
   503e8:	cmp	r0, #13
   503ec:	bne	5b6a0 <GetDataSlab+0x27544>
   503f0:	ldr	r0, [fp, #16]
   503f4:	ldr	r7, [fp, #8]
   503f8:	ldr	r9, [fp, #20]
   503fc:	sub	r2, fp, #176	; 0xb0
   50400:	ldr	r0, [r0]
   50404:	str	r0, [sp, #36]	; 0x24
   50408:	sub	r0, r0, #1
   5040c:	str	r0, [fp, #-96]	; 0xffffffa0
   50410:	ldr	r0, [r7]
   50414:	str	r0, [fp, #-176]	; 0xffffff50
   50418:	str	r0, [sp, #44]	; 0x2c
   5041c:	mov	r0, #0
   50420:	str	r0, [sp, #76]	; 0x4c
   50424:	ldr	r0, [fp, #24]
   50428:	ldr	r1, [r9]
   5042c:	sub	r9, fp, #96	; 0x60
   50430:	cmp	r0, #2
   50434:	str	r1, [sp, #56]	; 0x38
   50438:	str	r1, [sp, #72]	; 0x48
   5043c:	blt	50594 <GetDataSlab+0x1c438>
   50440:	ldr	r4, [sp, #44]	; 0x2c
   50444:	mov	r1, #0
   50448:	sub	r0, r7, #4
   5044c:	sub	sl, r7, #12
   50450:	mov	r3, #1
   50454:	mov	lr, #0
   50458:	mvn	ip, #15
   5045c:	str	r1, [sp, #76]	; 0x4c
   50460:	ldr	r1, [sp, #56]	; 0x38
   50464:	mov	r8, r4
   50468:	str	r1, [sp, #72]	; 0x48
   5046c:	b	504c8 <GetDataSlab+0x1c36c>
   50470:	ldr	r1, [fp, #12]
   50474:	sub	r2, fp, #176	; 0xb0
   50478:	sub	r9, fp, #96	; 0x60
   5047c:	ldr	r5, [sp, #76]	; 0x4c
   50480:	add	sl, sl, #4
   50484:	str	r6, [r9, r3, lsl #2]
   50488:	str	r4, [r2, r3, lsl #2]
   5048c:	ldr	r6, [sp, #72]	; 0x48
   50490:	ldr	r1, [r1, r3, lsl #2]
   50494:	mla	r5, r1, r8, r5
   50498:	ldr	r1, [fp, #20]
   5049c:	mov	r8, r4
   504a0:	mov	r4, r7
   504a4:	ldr	r7, [fp, #8]
   504a8:	str	r5, [sp, #76]	; 0x4c
   504ac:	ldr	r1, [r1, r3, lsl #2]
   504b0:	add	r3, r3, #1
   504b4:	mul	r6, r1, r6
   504b8:	ldr	r1, [fp, #24]
   504bc:	str	r6, [sp, #72]	; 0x48
   504c0:	cmp	r3, r1
   504c4:	beq	50594 <GetDataSlab+0x1c438>
   504c8:	ldr	r1, [fp, #16]
   504cc:	add	lr, lr, #1
   504d0:	cmp	lr, #4
   504d4:	ldr	r1, [r1, r3, lsl #2]
   504d8:	str	r4, [r2, r3, lsl #2]
   504dc:	sub	r6, r1, #1
   504e0:	str	r6, [r9, r3, lsl #2]
   504e4:	ldr	r7, [r7, r3, lsl #2]
   504e8:	bcs	504f8 <GetDataSlab+0x1c39c>
   504ec:	mov	r1, r7
   504f0:	mov	r2, r3
   504f4:	b	5057c <GetDataSlab+0x1c420>
   504f8:	vmov.i32	q9, #1	; 0x00000001
   504fc:	vmov.i32	q10, #1	; 0x00000001
   50500:	vmov.32	d23[1], r7
   50504:	vmov.i32	q8, #1	; 0x00000001
   50508:	bic	r9, lr, #3
   5050c:	bic	r1, r3, #3
   50510:	sub	r2, r3, r9
   50514:	vmov.32	d18[0], r4
   50518:	vmov.32	d20[0], r6
   5051c:	mov	r4, sl
   50520:	vorr	d16, d18, d18
   50524:	vmov.i32	q9, #1	; 0x00000001
   50528:	vorr	d18, d20, d20
   5052c:	vld1.32	{d20-d21}, [r4], ip
   50530:	subs	r1, r1, #4
   50534:	vrev64.32	q12, q10
   50538:	vext.8	q12, q12, q12, #8
   5053c:	vext.8	q11, q11, q12, #12
   50540:	vmul.i32	q9, q9, q12
   50544:	vmul.i32	q8, q11, q8
   50548:	vorr	q11, q12, q12
   5054c:	bne	5052c <GetDataSlab+0x1c3d0>
   50550:	vext.8	q11, q9, q8, #8
   50554:	vext.8	q12, q8, q8, #8
   50558:	cmp	lr, r9
   5055c:	vmul.i32	q0, q9, q11
   50560:	vmul.i32	q1, q8, q12
   50564:	vmul.i32	q8, q0, d0[1]
   50568:	vmul.i32	q9, q1, d2[1]
   5056c:	vmov.32	r6, d16[0]
   50570:	vmov.32	r4, d18[0]
   50574:	beq	50470 <GetDataSlab+0x1c314>
   50578:	vmov.32	r1, d20[0]
   5057c:	mul	r4, r1, r4
   50580:	ldr	r1, [r0, r2, lsl #2]
   50584:	subs	r2, r2, #1
   50588:	mul	r6, r6, r1
   5058c:	bne	5057c <GetDataSlab+0x1c420>
   50590:	b	50470 <GetDataSlab+0x1c314>
   50594:	ldr	r0, [sp, #80]	; 0x50
   50598:	ldr	r1, [sp, #76]	; 0x4c
   5059c:	mov	r7, r2
   505a0:	add	r4, r0, r1, lsl #3
   505a4:	ldr	r0, [sp, #36]	; 0x24
   505a8:	cmp	r0, #1
   505ac:	bne	5a648 <GetDataSlab+0x264ec>
   505b0:	ldr	r0, [sp, #72]	; 0x48
   505b4:	ldr	r2, [sp, #88]	; 0x58
   505b8:	ldr	r3, [fp, #12]
   505bc:	ldr	r8, [sp, #56]	; 0x38
   505c0:	ldr	r9, [sp, #44]	; 0x2c
   505c4:	sub	r6, fp, #96	; 0x60
   505c8:	cmp	r0, #1
   505cc:	blt	5b69c <GetDataSlab+0x27540>
   505d0:	sub	r0, r8, #2
   505d4:	mov	r1, #1
   505d8:	str	r4, [sp, #64]	; 0x40
   505dc:	str	r2, [sp, #68]	; 0x44
   505e0:	add	r1, r1, r0, lsr #1
   505e4:	lsr	r0, r0, #1
   505e8:	str	r0, [sp, #20]
   505ec:	mov	r0, #0
   505f0:	and	r5, r1, #1
   505f4:	str	r0, [sp, #60]	; 0x3c
   505f8:	sub	r1, r1, r5
   505fc:	str	r5, [sp, #32]
   50600:	str	r1, [sp, #12]
   50604:	sub	r1, fp, #136	; 0x88
   50608:	orr	sl, r1, #4
   5060c:	ldr	r1, [fp, #20]
   50610:	str	sl, [sp, #28]
   50614:	add	r1, r1, #4
   50618:	str	r1, [sp, #84]	; 0x54
   5061c:	orr	r1, r7, #4
   50620:	str	r1, [sp, #80]	; 0x50
   50624:	ldr	r1, [fp, #24]
   50628:	sub	r1, r1, #1
   5062c:	str	r1, [sp, #40]	; 0x28
   50630:	orr	r1, r6, #4
   50634:	str	r1, [sp, #16]
   50638:	lsl	r1, r8, #2
   5063c:	str	r1, [sp, #52]	; 0x34
   50640:	bic	r1, r8, #1
   50644:	str	r1, [sp, #24]
   50648:	ldr	r1, [r3], #4
   5064c:	str	r3, [sp, #92]	; 0x5c
   50650:	str	r1, [sp, #48]	; 0x30
   50654:	ldr	r5, [sp, #64]	; 0x40
   50658:	cmp	r8, #1
   5065c:	bge	506b4 <GetDataSlab+0x1c558>
   50660:	b	507fc <GetDataSlab+0x1c6a0>
   50664:	ldr	r1, [sp, #16]
   50668:	ldr	r0, [r1, r0]
   5066c:	add	r5, r5, r0, lsl #3
   50670:	add	r6, r0, r6
   50674:	ldr	r0, [sp, #52]	; 0x34
   50678:	ldr	r1, [sp, #68]	; 0x44
   5067c:	mov	r2, #0
   50680:	str	r6, [sp, #76]	; 0x4c
   50684:	str	r5, [sp, #64]	; 0x40
   50688:	add	r1, r1, r0
   5068c:	ldr	r0, [sp, #72]	; 0x48
   50690:	str	r1, [sp, #68]	; 0x44
   50694:	ldr	r1, [sp, #60]	; 0x3c
   50698:	add	r1, r1, r8
   5069c:	cmp	r1, r0
   506a0:	str	r1, [sp, #60]	; 0x3c
   506a4:	bge	5b6a0 <GetDataSlab+0x27544>
   506a8:	ldr	r5, [sp, #64]	; 0x40
   506ac:	cmp	r8, #1
   506b0:	blt	507fc <GetDataSlab+0x1c6a0>
   506b4:	mov	r0, #0
   506b8:	beq	507cc <GetDataSlab+0x1c670>
   506bc:	ldr	r0, [sp, #48]	; 0x30
   506c0:	mov	r8, #0
   506c4:	add	r9, r5, r0, lsl #3
   506c8:	ldr	r0, [sp, #20]
   506cc:	str	r9, [sp, #36]	; 0x24
   506d0:	cmp	r0, #0
   506d4:	beq	50760 <GetDataSlab+0x1c604>
   506d8:	ldr	r7, [sp, #68]	; 0x44
   506dc:	ldr	r4, [sp, #12]
   506e0:	mov	r6, r9
   506e4:	mov	r5, #16
   506e8:	mov	sl, r7
   506ec:	mov	r0, #32
   506f0:	vld1.64	{d8-d9}, [r6], r0
   506f4:	vmov.32	r0, d9[0]
   506f8:	vmov.32	r1, d9[1]
   506fc:	bl	71764 <__aeabi_ul2f>
   50700:	vmov.32	r2, d8[0]
   50704:	vmov.32	r1, d8[1]
   50708:	vmov	s17, r0
   5070c:	mov	r0, r2
   50710:	bl	71764 <__aeabi_ul2f>
   50714:	vmov	s16, r0
   50718:	add	r0, r9, #16
   5071c:	vst1.32	{d8}, [sl], r5
   50720:	vld1.64	{d8-d9}, [r0]
   50724:	vmov.32	r0, d9[0]
   50728:	vmov.32	r1, d9[1]
   5072c:	bl	71764 <__aeabi_ul2f>
   50730:	vmov.32	r2, d8[0]
   50734:	vmov.32	r1, d8[1]
   50738:	vmov	s17, r0
   5073c:	mov	r0, r2
   50740:	bl	71764 <__aeabi_ul2f>
   50744:	vmov	s16, r0
   50748:	subs	r4, r4, #2
   5074c:	add	r8, r8, #4
   50750:	mov	r9, r6
   50754:	vstr	d8, [r7, #8]
   50758:	mov	r7, sl
   5075c:	bne	506ec <GetDataSlab+0x1c590>
   50760:	ldr	r0, [sp, #32]
   50764:	ldr	r9, [sp, #44]	; 0x2c
   50768:	ldr	sl, [sp, #28]
   5076c:	cmp	r0, #0
   50770:	beq	507b8 <GetDataSlab+0x1c65c>
   50774:	ldr	r0, [sp, #88]	; 0x58
   50778:	ldr	r1, [sp, #60]	; 0x3c
   5077c:	add	r4, r0, r1, lsl #2
   50780:	ldr	r0, [sp, #36]	; 0x24
   50784:	add	r0, r0, r8, lsl #3
   50788:	vld1.64	{d8-d9}, [r0]
   5078c:	vmov.32	r0, d9[0]
   50790:	vmov.32	r1, d9[1]
   50794:	bl	71764 <__aeabi_ul2f>
   50798:	vmov.32	r2, d8[0]
   5079c:	vmov.32	r1, d8[1]
   507a0:	vmov	s17, r0
   507a4:	mov	r0, r2
   507a8:	bl	71764 <__aeabi_ul2f>
   507ac:	vmov	s16, r0
   507b0:	add	r0, r4, r8, lsl #2
   507b4:	vstr	d8, [r0]
   507b8:	ldr	r8, [sp, #56]	; 0x38
   507bc:	ldr	r0, [sp, #24]
   507c0:	ldr	r5, [sp, #64]	; 0x40
   507c4:	cmp	r8, r0
   507c8:	beq	507fc <GetDataSlab+0x1c6a0>
   507cc:	ldr	r1, [sp, #68]	; 0x44
   507d0:	sub	r6, r8, r0
   507d4:	add	r4, r1, r0, lsl #2
   507d8:	ldr	r1, [sp, #48]	; 0x30
   507dc:	add	r1, r5, r1, lsl #3
   507e0:	add	r7, r1, r0, lsl #3
   507e4:	ldrd	r0, [r7]
   507e8:	bl	71764 <__aeabi_ul2f>
   507ec:	str	r0, [r4], #4
   507f0:	add	r7, r7, #8
   507f4:	subs	r6, r6, #1
   507f8:	bne	507e4 <GetDataSlab+0x1c688>
   507fc:	ldr	r6, [sp, #76]	; 0x4c
   50800:	ldr	r0, [fp, #24]
   50804:	add	r5, r5, r9, lsl #3
   50808:	add	r6, r6, r9
   5080c:	cmp	r0, #2
   50810:	blt	50674 <GetDataSlab+0x1c518>
   50814:	ldr	r1, [sp, #40]	; 0x28
   50818:	ldr	lr, [sp, #92]	; 0x5c
   5081c:	mov	r0, #0
   50820:	sub	ip, fp, #176	; 0xb0
   50824:	b	50854 <GetDataSlab+0x1c6f8>
   50828:	mov	r4, r6
   5082c:	ldr	r7, [ip, r0]
   50830:	ldr	r6, [lr, r0]
   50834:	sub	r2, r2, r3
   50838:	mla	r2, r6, r7, r2
   5083c:	mov	r6, r4
   50840:	add	r6, r2, r4
   50844:	add	r5, r5, r2, lsl #3
   50848:	subs	r1, r1, #1
   5084c:	add	r0, r0, #4
   50850:	beq	50674 <GetDataSlab+0x1c518>
   50854:	ldr	r2, [sl, r0]
   50858:	ldr	r3, [sp, #84]	; 0x54
   5085c:	add	r2, r2, #1
   50860:	str	r2, [sl, r0]
   50864:	ldr	r3, [r3, r0]
   50868:	sdiv	r7, r2, r3
   5086c:	mls	r2, r7, r3, r2
   50870:	cmp	r2, #0
   50874:	bne	50664 <GetDataSlab+0x1c508>
   50878:	mov	r2, #0
   5087c:	str	r2, [sl, r0]
   50880:	ldr	r2, [sp, #80]	; 0x50
   50884:	ldr	r2, [r2, r0]
   50888:	sdiv	r3, r6, r2
   5088c:	mls	r3, r3, r2, r6
   50890:	cmp	r3, #0
   50894:	bne	50828 <GetDataSlab+0x1c6cc>
   50898:	ldr	r2, [lr, r0]
   5089c:	cmp	r2, #0
   508a0:	beq	50848 <GetDataSlab+0x1c6ec>
   508a4:	ldr	r3, [ip, r0]
   508a8:	mla	r6, r3, r2, r6
   508ac:	mul	r2, r3, r2
   508b0:	b	50844 <GetDataSlab+0x1c6e8>
   508b4:	ldr	r0, [sp, #76]	; 0x4c
   508b8:	ldr	r2, [fp, #20]
   508bc:	cmp	r0, #1
   508c0:	sub	r0, fp, #176	; 0xb0
   508c4:	blt	5aed4 <GetDataSlab+0x26d78>
   508c8:	orr	r0, r0, #4
   508cc:	ldr	sl, [fp, #12]
   508d0:	sub	r3, fp, #136	; 0x88
   508d4:	add	r2, r2, #4
   508d8:	str	r0, [sp, #80]	; 0x50
   508dc:	ldr	r0, [fp, #24]
   508e0:	orr	lr, r3, #4
   508e4:	str	r2, [sp, #84]	; 0x54
   508e8:	sub	r0, r0, #1
   508ec:	str	r0, [sp, #60]	; 0x3c
   508f0:	sub	r0, fp, #96	; 0x60
   508f4:	orr	r0, r0, #4
   508f8:	str	r0, [sp, #56]	; 0x38
   508fc:	ldr	r0, [sl], #4
   50900:	str	r0, [sp, #64]	; 0x40
   50904:	mov	r0, #0
   50908:	str	r0, [sp, #68]	; 0x44
   5090c:	b	50940 <GetDataSlab+0x1c7e4>
   50910:	ldr	r0, [sp, #56]	; 0x38
   50914:	ldr	r0, [r0, r2]
   50918:	add	r8, r8, r0
   5091c:	add	r7, r0, r7
   50920:	ldr	r2, [sp, #68]	; 0x44
   50924:	ldr	r0, [sp, #76]	; 0x4c
   50928:	str	r6, [sp, #72]	; 0x48
   5092c:	add	r2, r1, r2
   50930:	str	r2, [sp, #68]	; 0x44
   50934:	cmp	r2, r0
   50938:	mov	r2, #0
   5093c:	bge	5b6a0 <GetDataSlab+0x27544>
   50940:	ldr	r0, [sp, #64]	; 0x40
   50944:	cmp	r1, #1
   50948:	add	r2, r0, r7
   5094c:	add	r7, r8, r0
   50950:	blt	509a4 <GetDataSlab+0x1c848>
   50954:	ldr	r0, [sp, #88]	; 0x58
   50958:	ldr	r1, [sp, #68]	; 0x44
   5095c:	ldr	ip, [fp, #8]
   50960:	ldr	r6, [fp, #16]
   50964:	mov	r3, #0
   50968:	add	r4, r0, r1
   5096c:	ldr	r0, [fp, #20]
   50970:	ldrb	r1, [r7]
   50974:	strb	r1, [r4, r3]
   50978:	add	r3, r3, #1
   5097c:	ldr	r5, [r6]
   50980:	ldr	r1, [r0]
   50984:	add	r2, r5, r2
   50988:	add	r7, r7, r5
   5098c:	cmp	r3, r1
   50990:	blt	50970 <GetDataSlab+0x1c814>
   50994:	ldr	r0, [fp, #12]
   50998:	ldr	r6, [ip]
   5099c:	ldr	r0, [r0]
   509a0:	b	509a8 <GetDataSlab+0x1c84c>
   509a4:	ldr	r6, [sp, #72]	; 0x48
   509a8:	mls	r3, r5, r1, r6
   509ac:	str	r0, [sp, #64]	; 0x40
   509b0:	sub	r3, r3, r0
   509b4:	ldr	r0, [fp, #24]
   509b8:	add	r8, r7, r3
   509bc:	add	r7, r3, r2
   509c0:	cmp	r0, #2
   509c4:	blt	50920 <GetDataSlab+0x1c7c4>
   509c8:	ldr	r9, [sp, #60]	; 0x3c
   509cc:	mov	r2, #0
   509d0:	b	509fc <GetDataSlab+0x1c8a0>
   509d4:	sub	r0, fp, #176	; 0xb0
   509d8:	ldr	r4, [sl, r2]
   509dc:	sub	r3, r3, ip
   509e0:	ldr	r0, [r0, r2]
   509e4:	mla	r0, r4, r0, r3
   509e8:	add	r7, r0, r7
   509ec:	add	r8, r8, r0
   509f0:	subs	r9, r9, #1
   509f4:	add	r2, r2, #4
   509f8:	beq	50920 <GetDataSlab+0x1c7c4>
   509fc:	ldr	r3, [lr, r2]
   50a00:	ldr	r0, [sp, #84]	; 0x54
   50a04:	add	r3, r3, #1
   50a08:	str	r3, [lr, r2]
   50a0c:	ldr	r0, [r0, r2]
   50a10:	sdiv	r4, r3, r0
   50a14:	mls	r0, r4, r0, r3
   50a18:	cmp	r0, #0
   50a1c:	bne	50910 <GetDataSlab+0x1c7b4>
   50a20:	mov	r0, #0
   50a24:	str	r0, [lr, r2]
   50a28:	ldr	r0, [sp, #80]	; 0x50
   50a2c:	ldr	r3, [r0, r2]
   50a30:	sdiv	r0, r7, r3
   50a34:	mls	ip, r0, r3, r7
   50a38:	cmp	ip, #0
   50a3c:	bne	509d4 <GetDataSlab+0x1c878>
   50a40:	ldr	r3, [sl, r2]
   50a44:	cmp	r3, #0
   50a48:	beq	509f0 <GetDataSlab+0x1c894>
   50a4c:	sub	r0, fp, #176	; 0xb0
   50a50:	ldr	r0, [r0, r2]
   50a54:	mla	r7, r0, r3, r7
   50a58:	mla	r8, r0, r3, r8
   50a5c:	subs	r9, r9, #1
   50a60:	add	r2, r2, #4
   50a64:	bne	509fc <GetDataSlab+0x1c8a0>
   50a68:	b	50920 <GetDataSlab+0x1c7c4>
   50a6c:	ldr	r0, [sp, #76]	; 0x4c
   50a70:	ldr	r2, [fp, #20]
   50a74:	cmp	r0, #1
   50a78:	sub	r0, fp, #176	; 0xb0
   50a7c:	blt	5aed4 <GetDataSlab+0x26d78>
   50a80:	orr	r0, r0, #4
   50a84:	ldr	lr, [fp, #12]
   50a88:	mov	r3, r8
   50a8c:	sub	r6, fp, #136	; 0x88
   50a90:	add	r2, r2, #4
   50a94:	str	r0, [sp, #80]	; 0x50
   50a98:	ldr	r0, [fp, #24]
   50a9c:	orr	r8, r6, #4
   50aa0:	str	r2, [sp, #84]	; 0x54
   50aa4:	sub	r0, r0, #1
   50aa8:	str	r0, [sp, #60]	; 0x3c
   50aac:	orr	r0, r3, #4
   50ab0:	str	r0, [sp, #56]	; 0x38
   50ab4:	ldr	r0, [lr], #4
   50ab8:	str	r0, [sp, #64]	; 0x40
   50abc:	mov	r0, #0
   50ac0:	str	r0, [sp, #68]	; 0x44
   50ac4:	b	50af8 <GetDataSlab+0x1c99c>
   50ac8:	ldr	r0, [sp, #56]	; 0x38
   50acc:	ldr	r0, [r0, r2]
   50ad0:	add	sl, sl, r0, lsl #1
   50ad4:	add	r7, r0, r7
   50ad8:	ldr	r2, [sp, #68]	; 0x44
   50adc:	ldr	r0, [sp, #76]	; 0x4c
   50ae0:	str	r6, [sp, #72]	; 0x48
   50ae4:	add	r2, r1, r2
   50ae8:	str	r2, [sp, #68]	; 0x44
   50aec:	cmp	r2, r0
   50af0:	mov	r2, #0
   50af4:	bge	5b6a0 <GetDataSlab+0x27544>
   50af8:	ldr	r0, [sp, #64]	; 0x40
   50afc:	cmp	r1, #1
   50b00:	add	r2, r0, r7
   50b04:	add	r7, sl, r0, lsl #1
   50b08:	blt	50b5c <GetDataSlab+0x1ca00>
   50b0c:	ldr	r0, [sp, #88]	; 0x58
   50b10:	ldr	r1, [sp, #68]	; 0x44
   50b14:	ldr	ip, [fp, #8]
   50b18:	ldr	r6, [fp, #16]
   50b1c:	mov	r3, #0
   50b20:	add	r4, r0, r1
   50b24:	ldr	r0, [fp, #20]
   50b28:	ldrb	r1, [r7]
   50b2c:	strb	r1, [r4, r3]
   50b30:	add	r3, r3, #1
   50b34:	ldr	r5, [r6]
   50b38:	ldr	r1, [r0]
   50b3c:	add	r7, r7, r5, lsl #1
   50b40:	add	r2, r5, r2
   50b44:	cmp	r3, r1
   50b48:	blt	50b28 <GetDataSlab+0x1c9cc>
   50b4c:	ldr	r0, [fp, #12]
   50b50:	ldr	r6, [ip]
   50b54:	ldr	r0, [r0]
   50b58:	b	50b60 <GetDataSlab+0x1ca04>
   50b5c:	ldr	r6, [sp, #72]	; 0x48
   50b60:	mls	r3, r5, r1, r6
   50b64:	str	r0, [sp, #64]	; 0x40
   50b68:	sub	r3, r3, r0
   50b6c:	ldr	r0, [fp, #24]
   50b70:	add	sl, r7, r3, lsl #1
   50b74:	add	r7, r3, r2
   50b78:	cmp	r0, #2
   50b7c:	blt	50ad8 <GetDataSlab+0x1c97c>
   50b80:	ldr	r9, [sp, #60]	; 0x3c
   50b84:	mov	r2, #0
   50b88:	b	50bb4 <GetDataSlab+0x1ca58>
   50b8c:	sub	r0, fp, #176	; 0xb0
   50b90:	ldr	r4, [lr, r2]
   50b94:	sub	r3, r3, ip
   50b98:	ldr	r0, [r0, r2]
   50b9c:	mla	r0, r4, r0, r3
   50ba0:	add	r7, r0, r7
   50ba4:	add	sl, sl, r0, lsl #1
   50ba8:	subs	r9, r9, #1
   50bac:	add	r2, r2, #4
   50bb0:	beq	50ad8 <GetDataSlab+0x1c97c>
   50bb4:	ldr	r3, [r8, r2]
   50bb8:	ldr	r0, [sp, #84]	; 0x54
   50bbc:	add	r3, r3, #1
   50bc0:	str	r3, [r8, r2]
   50bc4:	ldr	r0, [r0, r2]
   50bc8:	sdiv	r4, r3, r0
   50bcc:	mls	r0, r4, r0, r3
   50bd0:	cmp	r0, #0
   50bd4:	bne	50ac8 <GetDataSlab+0x1c96c>
   50bd8:	mov	r0, #0
   50bdc:	str	r0, [r8, r2]
   50be0:	ldr	r0, [sp, #80]	; 0x50
   50be4:	ldr	r3, [r0, r2]
   50be8:	sdiv	r0, r7, r3
   50bec:	mls	ip, r0, r3, r7
   50bf0:	cmp	ip, #0
   50bf4:	bne	50b8c <GetDataSlab+0x1ca30>
   50bf8:	ldr	r3, [lr, r2]
   50bfc:	cmp	r3, #0
   50c00:	beq	50ba8 <GetDataSlab+0x1ca4c>
   50c04:	sub	r0, fp, #176	; 0xb0
   50c08:	ldr	r0, [r0, r2]
   50c0c:	mla	r7, r0, r3, r7
   50c10:	mul	r0, r0, r3
   50c14:	b	50ba4 <GetDataSlab+0x1ca48>
   50c18:	ldr	r0, [sp, #76]	; 0x4c
   50c1c:	ldr	r2, [fp, #20]
   50c20:	cmp	r0, #1
   50c24:	sub	r0, fp, #176	; 0xb0
   50c28:	blt	5aed4 <GetDataSlab+0x26d78>
   50c2c:	orr	r0, r0, #4
   50c30:	ldr	lr, [fp, #12]
   50c34:	mov	r3, r8
   50c38:	sub	r6, fp, #136	; 0x88
   50c3c:	add	r2, r2, #4
   50c40:	str	r0, [sp, #80]	; 0x50
   50c44:	ldr	r0, [fp, #24]
   50c48:	orr	r8, r6, #4
   50c4c:	str	r2, [sp, #84]	; 0x54
   50c50:	sub	r0, r0, #1
   50c54:	str	r0, [sp, #60]	; 0x3c
   50c58:	orr	r0, r3, #4
   50c5c:	str	r0, [sp, #56]	; 0x38
   50c60:	ldr	r0, [lr], #4
   50c64:	str	r0, [sp, #64]	; 0x40
   50c68:	mov	r0, #0
   50c6c:	str	r0, [sp, #68]	; 0x44
   50c70:	b	50ca4 <GetDataSlab+0x1cb48>
   50c74:	ldr	r0, [sp, #56]	; 0x38
   50c78:	ldr	r0, [r0, r2]
   50c7c:	add	sl, sl, r0, lsl #1
   50c80:	add	r7, r0, r7
   50c84:	ldr	r2, [sp, #68]	; 0x44
   50c88:	ldr	r0, [sp, #76]	; 0x4c
   50c8c:	str	r6, [sp, #72]	; 0x48
   50c90:	add	r2, r1, r2
   50c94:	str	r2, [sp, #68]	; 0x44
   50c98:	cmp	r2, r0
   50c9c:	mov	r2, #0
   50ca0:	bge	5b6a0 <GetDataSlab+0x27544>
   50ca4:	ldr	r0, [sp, #64]	; 0x40
   50ca8:	cmp	r1, #1
   50cac:	add	r2, r0, r7
   50cb0:	add	r7, sl, r0, lsl #1
   50cb4:	blt	50d08 <GetDataSlab+0x1cbac>
   50cb8:	ldr	r0, [sp, #88]	; 0x58
   50cbc:	ldr	r1, [sp, #68]	; 0x44
   50cc0:	ldr	ip, [fp, #8]
   50cc4:	ldr	r6, [fp, #16]
   50cc8:	mov	r3, #0
   50ccc:	add	r4, r0, r1
   50cd0:	ldr	r0, [fp, #20]
   50cd4:	ldrb	r1, [r7]
   50cd8:	strb	r1, [r4, r3]
   50cdc:	add	r3, r3, #1
   50ce0:	ldr	r5, [r6]
   50ce4:	ldr	r1, [r0]
   50ce8:	add	r7, r7, r5, lsl #1
   50cec:	add	r2, r5, r2
   50cf0:	cmp	r3, r1
   50cf4:	blt	50cd4 <GetDataSlab+0x1cb78>
   50cf8:	ldr	r0, [fp, #12]
   50cfc:	ldr	r6, [ip]
   50d00:	ldr	r0, [r0]
   50d04:	b	50d0c <GetDataSlab+0x1cbb0>
   50d08:	ldr	r6, [sp, #72]	; 0x48
   50d0c:	mls	r3, r5, r1, r6
   50d10:	str	r0, [sp, #64]	; 0x40
   50d14:	sub	r3, r3, r0
   50d18:	ldr	r0, [fp, #24]
   50d1c:	add	sl, r7, r3, lsl #1
   50d20:	add	r7, r3, r2
   50d24:	cmp	r0, #2
   50d28:	blt	50c84 <GetDataSlab+0x1cb28>
   50d2c:	ldr	r9, [sp, #60]	; 0x3c
   50d30:	mov	r2, #0
   50d34:	b	50d60 <GetDataSlab+0x1cc04>
   50d38:	sub	r0, fp, #176	; 0xb0
   50d3c:	ldr	r4, [lr, r2]
   50d40:	sub	r3, r3, ip
   50d44:	ldr	r0, [r0, r2]
   50d48:	mla	r0, r4, r0, r3
   50d4c:	add	r7, r0, r7
   50d50:	add	sl, sl, r0, lsl #1
   50d54:	subs	r9, r9, #1
   50d58:	add	r2, r2, #4
   50d5c:	beq	50c84 <GetDataSlab+0x1cb28>
   50d60:	ldr	r3, [r8, r2]
   50d64:	ldr	r0, [sp, #84]	; 0x54
   50d68:	add	r3, r3, #1
   50d6c:	str	r3, [r8, r2]
   50d70:	ldr	r0, [r0, r2]
   50d74:	sdiv	r4, r3, r0
   50d78:	mls	r0, r4, r0, r3
   50d7c:	cmp	r0, #0
   50d80:	bne	50c74 <GetDataSlab+0x1cb18>
   50d84:	mov	r0, #0
   50d88:	str	r0, [r8, r2]
   50d8c:	ldr	r0, [sp, #80]	; 0x50
   50d90:	ldr	r3, [r0, r2]
   50d94:	sdiv	r0, r7, r3
   50d98:	mls	ip, r0, r3, r7
   50d9c:	cmp	ip, #0
   50da0:	bne	50d38 <GetDataSlab+0x1cbdc>
   50da4:	ldr	r3, [lr, r2]
   50da8:	cmp	r3, #0
   50dac:	beq	50d54 <GetDataSlab+0x1cbf8>
   50db0:	sub	r0, fp, #176	; 0xb0
   50db4:	ldr	r0, [r0, r2]
   50db8:	mla	r7, r0, r3, r7
   50dbc:	mul	r0, r0, r3
   50dc0:	b	50d50 <GetDataSlab+0x1cbf4>
   50dc4:	ldr	r0, [sp, #76]	; 0x4c
   50dc8:	ldr	r2, [fp, #20]
   50dcc:	cmp	r0, #1
   50dd0:	sub	r0, fp, #176	; 0xb0
   50dd4:	blt	5aed4 <GetDataSlab+0x26d78>
   50dd8:	orr	r0, r0, #4
   50ddc:	ldr	sl, [fp, #12]
   50de0:	sub	r3, fp, #136	; 0x88
   50de4:	add	r2, r2, #4
   50de8:	str	r0, [sp, #80]	; 0x50
   50dec:	ldr	r0, [fp, #24]
   50df0:	orr	lr, r3, #4
   50df4:	str	r2, [sp, #84]	; 0x54
   50df8:	sub	r0, r0, #1
   50dfc:	str	r0, [sp, #60]	; 0x3c
   50e00:	sub	r0, fp, #96	; 0x60
   50e04:	orr	r0, r0, #4
   50e08:	str	r0, [sp, #56]	; 0x38
   50e0c:	ldr	r0, [sl], #4
   50e10:	str	r0, [sp, #64]	; 0x40
   50e14:	mov	r0, #0
   50e18:	str	r0, [sp, #68]	; 0x44
   50e1c:	b	50e50 <GetDataSlab+0x1ccf4>
   50e20:	ldr	r0, [sp, #56]	; 0x38
   50e24:	ldr	r0, [r0, r2]
   50e28:	add	r8, r8, r0, lsl #2
   50e2c:	add	r7, r0, r7
   50e30:	ldr	r2, [sp, #68]	; 0x44
   50e34:	ldr	r0, [sp, #76]	; 0x4c
   50e38:	str	r6, [sp, #72]	; 0x48
   50e3c:	add	r2, r1, r2
   50e40:	str	r2, [sp, #68]	; 0x44
   50e44:	cmp	r2, r0
   50e48:	mov	r2, #0
   50e4c:	bge	5b6a0 <GetDataSlab+0x27544>
   50e50:	ldr	r0, [sp, #64]	; 0x40
   50e54:	cmp	r1, #1
   50e58:	add	r2, r0, r7
   50e5c:	add	r7, r8, r0, lsl #2
   50e60:	blt	50eb4 <GetDataSlab+0x1cd58>
   50e64:	ldr	r0, [sp, #88]	; 0x58
   50e68:	ldr	r1, [sp, #68]	; 0x44
   50e6c:	ldr	ip, [fp, #8]
   50e70:	ldr	r6, [fp, #16]
   50e74:	mov	r3, #0
   50e78:	add	r4, r0, r1
   50e7c:	ldr	r0, [fp, #20]
   50e80:	ldr	r1, [r7]
   50e84:	strb	r1, [r4, r3]
   50e88:	add	r3, r3, #1
   50e8c:	ldr	r5, [r6]
   50e90:	ldr	r1, [r0]
   50e94:	add	r7, r7, r5, lsl #2
   50e98:	add	r2, r5, r2
   50e9c:	cmp	r3, r1
   50ea0:	blt	50e80 <GetDataSlab+0x1cd24>
   50ea4:	ldr	r0, [fp, #12]
   50ea8:	ldr	r6, [ip]
   50eac:	ldr	r0, [r0]
   50eb0:	b	50eb8 <GetDataSlab+0x1cd5c>
   50eb4:	ldr	r6, [sp, #72]	; 0x48
   50eb8:	mls	r3, r5, r1, r6
   50ebc:	str	r0, [sp, #64]	; 0x40
   50ec0:	sub	r3, r3, r0
   50ec4:	ldr	r0, [fp, #24]
   50ec8:	add	r8, r7, r3, lsl #2
   50ecc:	add	r7, r3, r2
   50ed0:	cmp	r0, #2
   50ed4:	blt	50e30 <GetDataSlab+0x1ccd4>
   50ed8:	ldr	r9, [sp, #60]	; 0x3c
   50edc:	mov	r2, #0
   50ee0:	b	50f0c <GetDataSlab+0x1cdb0>
   50ee4:	sub	r0, fp, #176	; 0xb0
   50ee8:	ldr	r4, [sl, r2]
   50eec:	sub	r3, r3, ip
   50ef0:	ldr	r0, [r0, r2]
   50ef4:	mla	r0, r4, r0, r3
   50ef8:	add	r7, r0, r7
   50efc:	add	r8, r8, r0, lsl #2
   50f00:	subs	r9, r9, #1
   50f04:	add	r2, r2, #4
   50f08:	beq	50e30 <GetDataSlab+0x1ccd4>
   50f0c:	ldr	r3, [lr, r2]
   50f10:	ldr	r0, [sp, #84]	; 0x54
   50f14:	add	r3, r3, #1
   50f18:	str	r3, [lr, r2]
   50f1c:	ldr	r0, [r0, r2]
   50f20:	sdiv	r4, r3, r0
   50f24:	mls	r0, r4, r0, r3
   50f28:	cmp	r0, #0
   50f2c:	bne	50e20 <GetDataSlab+0x1ccc4>
   50f30:	mov	r0, #0
   50f34:	str	r0, [lr, r2]
   50f38:	ldr	r0, [sp, #80]	; 0x50
   50f3c:	ldr	r3, [r0, r2]
   50f40:	sdiv	r0, r7, r3
   50f44:	mls	ip, r0, r3, r7
   50f48:	cmp	ip, #0
   50f4c:	bne	50ee4 <GetDataSlab+0x1cd88>
   50f50:	ldr	r3, [sl, r2]
   50f54:	cmp	r3, #0
   50f58:	beq	50f00 <GetDataSlab+0x1cda4>
   50f5c:	sub	r0, fp, #176	; 0xb0
   50f60:	ldr	r0, [r0, r2]
   50f64:	mla	r7, r0, r3, r7
   50f68:	mul	r0, r0, r3
   50f6c:	b	50efc <GetDataSlab+0x1cda0>
   50f70:	ldr	r0, [sp, #76]	; 0x4c
   50f74:	ldr	r2, [fp, #20]
   50f78:	cmp	r0, #1
   50f7c:	sub	r0, fp, #176	; 0xb0
   50f80:	blt	5aed4 <GetDataSlab+0x26d78>
   50f84:	orr	r0, r0, #4
   50f88:	ldr	sl, [fp, #12]
   50f8c:	sub	r3, fp, #136	; 0x88
   50f90:	add	r2, r2, #4
   50f94:	str	r0, [sp, #80]	; 0x50
   50f98:	ldr	r0, [fp, #24]
   50f9c:	orr	lr, r3, #4
   50fa0:	str	r2, [sp, #84]	; 0x54
   50fa4:	sub	r0, r0, #1
   50fa8:	str	r0, [sp, #60]	; 0x3c
   50fac:	sub	r0, fp, #96	; 0x60
   50fb0:	orr	r0, r0, #4
   50fb4:	str	r0, [sp, #56]	; 0x38
   50fb8:	ldr	r0, [sl], #4
   50fbc:	str	r0, [sp, #64]	; 0x40
   50fc0:	mov	r0, #0
   50fc4:	str	r0, [sp, #68]	; 0x44
   50fc8:	b	50ffc <GetDataSlab+0x1cea0>
   50fcc:	ldr	r0, [sp, #56]	; 0x38
   50fd0:	ldr	r0, [r0, r2]
   50fd4:	add	r8, r8, r0, lsl #2
   50fd8:	add	r7, r0, r7
   50fdc:	ldr	r2, [sp, #68]	; 0x44
   50fe0:	ldr	r0, [sp, #76]	; 0x4c
   50fe4:	str	r6, [sp, #72]	; 0x48
   50fe8:	add	r2, r1, r2
   50fec:	str	r2, [sp, #68]	; 0x44
   50ff0:	cmp	r2, r0
   50ff4:	mov	r2, #0
   50ff8:	bge	5b6a0 <GetDataSlab+0x27544>
   50ffc:	ldr	r0, [sp, #64]	; 0x40
   51000:	cmp	r1, #1
   51004:	add	r2, r0, r7
   51008:	add	r7, r8, r0, lsl #2
   5100c:	blt	51060 <GetDataSlab+0x1cf04>
   51010:	ldr	r0, [sp, #88]	; 0x58
   51014:	ldr	r1, [sp, #68]	; 0x44
   51018:	ldr	ip, [fp, #8]
   5101c:	ldr	r6, [fp, #16]
   51020:	mov	r3, #0
   51024:	add	r4, r0, r1
   51028:	ldr	r0, [fp, #20]
   5102c:	ldr	r1, [r7]
   51030:	strb	r1, [r4, r3]
   51034:	add	r3, r3, #1
   51038:	ldr	r5, [r6]
   5103c:	ldr	r1, [r0]
   51040:	add	r7, r7, r5, lsl #2
   51044:	add	r2, r5, r2
   51048:	cmp	r3, r1
   5104c:	blt	5102c <GetDataSlab+0x1ced0>
   51050:	ldr	r0, [fp, #12]
   51054:	ldr	r6, [ip]
   51058:	ldr	r0, [r0]
   5105c:	b	51064 <GetDataSlab+0x1cf08>
   51060:	ldr	r6, [sp, #72]	; 0x48
   51064:	mls	r3, r5, r1, r6
   51068:	str	r0, [sp, #64]	; 0x40
   5106c:	sub	r3, r3, r0
   51070:	ldr	r0, [fp, #24]
   51074:	add	r8, r7, r3, lsl #2
   51078:	add	r7, r3, r2
   5107c:	cmp	r0, #2
   51080:	blt	50fdc <GetDataSlab+0x1ce80>
   51084:	ldr	r9, [sp, #60]	; 0x3c
   51088:	mov	r2, #0
   5108c:	b	510b8 <GetDataSlab+0x1cf5c>
   51090:	sub	r0, fp, #176	; 0xb0
   51094:	ldr	r4, [sl, r2]
   51098:	sub	r3, r3, ip
   5109c:	ldr	r0, [r0, r2]
   510a0:	mla	r0, r4, r0, r3
   510a4:	add	r7, r0, r7
   510a8:	add	r8, r8, r0, lsl #2
   510ac:	subs	r9, r9, #1
   510b0:	add	r2, r2, #4
   510b4:	beq	50fdc <GetDataSlab+0x1ce80>
   510b8:	ldr	r3, [lr, r2]
   510bc:	ldr	r0, [sp, #84]	; 0x54
   510c0:	add	r3, r3, #1
   510c4:	str	r3, [lr, r2]
   510c8:	ldr	r0, [r0, r2]
   510cc:	sdiv	r4, r3, r0
   510d0:	mls	r0, r4, r0, r3
   510d4:	cmp	r0, #0
   510d8:	bne	50fcc <GetDataSlab+0x1ce70>
   510dc:	mov	r0, #0
   510e0:	str	r0, [lr, r2]
   510e4:	ldr	r0, [sp, #80]	; 0x50
   510e8:	ldr	r3, [r0, r2]
   510ec:	sdiv	r0, r7, r3
   510f0:	mls	ip, r0, r3, r7
   510f4:	cmp	ip, #0
   510f8:	bne	51090 <GetDataSlab+0x1cf34>
   510fc:	ldr	r3, [sl, r2]
   51100:	cmp	r3, #0
   51104:	beq	510ac <GetDataSlab+0x1cf50>
   51108:	sub	r0, fp, #176	; 0xb0
   5110c:	ldr	r0, [r0, r2]
   51110:	mla	r7, r0, r3, r7
   51114:	mul	r0, r0, r3
   51118:	b	510a8 <GetDataSlab+0x1cf4c>
   5111c:	ldr	r0, [sp, #76]	; 0x4c
   51120:	ldr	r2, [fp, #20]
   51124:	cmp	r0, #1
   51128:	sub	r0, fp, #176	; 0xb0
   5112c:	blt	5aed4 <GetDataSlab+0x26d78>
   51130:	orr	r0, r0, #4
   51134:	ldr	lr, [fp, #12]
   51138:	mov	r3, r8
   5113c:	sub	r6, fp, #136	; 0x88
   51140:	add	r2, r2, #4
   51144:	str	r0, [sp, #80]	; 0x50
   51148:	ldr	r0, [fp, #24]
   5114c:	orr	r8, r6, #4
   51150:	str	r2, [sp, #84]	; 0x54
   51154:	sub	r0, r0, #1
   51158:	str	r0, [sp, #60]	; 0x3c
   5115c:	orr	r0, r3, #4
   51160:	str	r0, [sp, #56]	; 0x38
   51164:	ldr	r0, [lr], #4
   51168:	str	r0, [sp, #64]	; 0x40
   5116c:	mov	r0, #0
   51170:	str	r0, [sp, #68]	; 0x44
   51174:	b	511a8 <GetDataSlab+0x1d04c>
   51178:	ldr	r0, [sp, #56]	; 0x38
   5117c:	ldr	r0, [r0, r2]
   51180:	add	sl, sl, r0, lsl #2
   51184:	add	r7, r0, r7
   51188:	ldr	r2, [sp, #68]	; 0x44
   5118c:	ldr	r0, [sp, #76]	; 0x4c
   51190:	str	r6, [sp, #72]	; 0x48
   51194:	add	r2, r1, r2
   51198:	str	r2, [sp, #68]	; 0x44
   5119c:	cmp	r2, r0
   511a0:	mov	r2, #0
   511a4:	bge	5b6a0 <GetDataSlab+0x27544>
   511a8:	ldr	r0, [sp, #64]	; 0x40
   511ac:	cmp	r1, #1
   511b0:	add	r2, r0, r7
   511b4:	add	r7, sl, r0, lsl #2
   511b8:	blt	51214 <GetDataSlab+0x1d0b8>
   511bc:	ldr	r0, [sp, #88]	; 0x58
   511c0:	ldr	r1, [sp, #68]	; 0x44
   511c4:	ldr	ip, [fp, #8]
   511c8:	ldr	r6, [fp, #16]
   511cc:	mov	r3, #0
   511d0:	add	r4, r0, r1
   511d4:	ldr	r0, [fp, #20]
   511d8:	vldr	s0, [r7]
   511dc:	vcvt.s32.f32	s0, s0
   511e0:	vmov	r1, s0
   511e4:	strb	r1, [r4, r3]
   511e8:	add	r3, r3, #1
   511ec:	ldr	r5, [r6]
   511f0:	ldr	r1, [r0]
   511f4:	add	r7, r7, r5, lsl #2
   511f8:	add	r2, r5, r2
   511fc:	cmp	r3, r1
   51200:	blt	511d8 <GetDataSlab+0x1d07c>
   51204:	ldr	r0, [fp, #12]
   51208:	ldr	r6, [ip]
   5120c:	ldr	r0, [r0]
   51210:	b	51218 <GetDataSlab+0x1d0bc>
   51214:	ldr	r6, [sp, #72]	; 0x48
   51218:	mls	r3, r5, r1, r6
   5121c:	str	r0, [sp, #64]	; 0x40
   51220:	sub	r3, r3, r0
   51224:	ldr	r0, [fp, #24]
   51228:	add	sl, r7, r3, lsl #2
   5122c:	add	r7, r3, r2
   51230:	cmp	r0, #2
   51234:	blt	51188 <GetDataSlab+0x1d02c>
   51238:	ldr	r9, [sp, #60]	; 0x3c
   5123c:	mov	r2, #0
   51240:	b	5126c <GetDataSlab+0x1d110>
   51244:	sub	r0, fp, #176	; 0xb0
   51248:	ldr	r4, [lr, r2]
   5124c:	sub	r3, r3, ip
   51250:	ldr	r0, [r0, r2]
   51254:	mla	r0, r4, r0, r3
   51258:	add	r7, r0, r7
   5125c:	add	sl, sl, r0, lsl #2
   51260:	subs	r9, r9, #1
   51264:	add	r2, r2, #4
   51268:	beq	51188 <GetDataSlab+0x1d02c>
   5126c:	ldr	r3, [r8, r2]
   51270:	ldr	r0, [sp, #84]	; 0x54
   51274:	add	r3, r3, #1
   51278:	str	r3, [r8, r2]
   5127c:	ldr	r0, [r0, r2]
   51280:	sdiv	r4, r3, r0
   51284:	mls	r0, r4, r0, r3
   51288:	cmp	r0, #0
   5128c:	bne	51178 <GetDataSlab+0x1d01c>
   51290:	mov	r0, #0
   51294:	str	r0, [r8, r2]
   51298:	ldr	r0, [sp, #80]	; 0x50
   5129c:	ldr	r3, [r0, r2]
   512a0:	sdiv	r0, r7, r3
   512a4:	mls	ip, r0, r3, r7
   512a8:	cmp	ip, #0
   512ac:	bne	51244 <GetDataSlab+0x1d0e8>
   512b0:	ldr	r3, [lr, r2]
   512b4:	cmp	r3, #0
   512b8:	beq	51260 <GetDataSlab+0x1d104>
   512bc:	sub	r0, fp, #176	; 0xb0
   512c0:	ldr	r0, [r0, r2]
   512c4:	mla	r7, r0, r3, r7
   512c8:	mul	r0, r0, r3
   512cc:	b	5125c <GetDataSlab+0x1d100>
   512d0:	ldr	r0, [sp, #76]	; 0x4c
   512d4:	ldr	r2, [fp, #20]
   512d8:	cmp	r0, #1
   512dc:	sub	r0, fp, #176	; 0xb0
   512e0:	blt	5aed4 <GetDataSlab+0x26d78>
   512e4:	orr	r0, r0, #4
   512e8:	ldr	lr, [fp, #12]
   512ec:	mov	r3, r8
   512f0:	sub	r6, fp, #136	; 0x88
   512f4:	add	r2, r2, #4
   512f8:	str	r0, [sp, #80]	; 0x50
   512fc:	ldr	r0, [fp, #24]
   51300:	orr	r8, r6, #4
   51304:	str	r2, [sp, #84]	; 0x54
   51308:	sub	r0, r0, #1
   5130c:	str	r0, [sp, #60]	; 0x3c
   51310:	orr	r0, r3, #4
   51314:	str	r0, [sp, #56]	; 0x38
   51318:	ldr	r0, [lr], #4
   5131c:	str	r0, [sp, #64]	; 0x40
   51320:	mov	r0, #0
   51324:	str	r0, [sp, #68]	; 0x44
   51328:	b	5135c <GetDataSlab+0x1d200>
   5132c:	ldr	r0, [sp, #56]	; 0x38
   51330:	ldr	r0, [r0, r2]
   51334:	add	sl, sl, r0, lsl #3
   51338:	add	r7, r0, r7
   5133c:	ldr	r2, [sp, #68]	; 0x44
   51340:	ldr	r0, [sp, #76]	; 0x4c
   51344:	str	r6, [sp, #72]	; 0x48
   51348:	add	r2, r1, r2
   5134c:	str	r2, [sp, #68]	; 0x44
   51350:	cmp	r2, r0
   51354:	mov	r2, #0
   51358:	bge	5b6a0 <GetDataSlab+0x27544>
   5135c:	ldr	r0, [sp, #64]	; 0x40
   51360:	cmp	r1, #1
   51364:	add	r2, r0, r7
   51368:	add	r7, sl, r0, lsl #3
   5136c:	blt	513c8 <GetDataSlab+0x1d26c>
   51370:	ldr	r0, [sp, #88]	; 0x58
   51374:	ldr	r1, [sp, #68]	; 0x44
   51378:	ldr	ip, [fp, #8]
   5137c:	ldr	r6, [fp, #16]
   51380:	mov	r3, #0
   51384:	add	r4, r0, r1
   51388:	ldr	r0, [fp, #20]
   5138c:	vldr	d16, [r7]
   51390:	vcvt.s32.f64	s0, d16
   51394:	vmov	r1, s0
   51398:	strb	r1, [r4, r3]
   5139c:	add	r3, r3, #1
   513a0:	ldr	r5, [r6]
   513a4:	ldr	r1, [r0]
   513a8:	add	r7, r7, r5, lsl #3
   513ac:	add	r2, r5, r2
   513b0:	cmp	r3, r1
   513b4:	blt	5138c <GetDataSlab+0x1d230>
   513b8:	ldr	r0, [fp, #12]
   513bc:	ldr	r6, [ip]
   513c0:	ldr	r0, [r0]
   513c4:	b	513cc <GetDataSlab+0x1d270>
   513c8:	ldr	r6, [sp, #72]	; 0x48
   513cc:	mls	r3, r5, r1, r6
   513d0:	str	r0, [sp, #64]	; 0x40
   513d4:	sub	r3, r3, r0
   513d8:	ldr	r0, [fp, #24]
   513dc:	add	sl, r7, r3, lsl #3
   513e0:	add	r7, r3, r2
   513e4:	cmp	r0, #2
   513e8:	blt	5133c <GetDataSlab+0x1d1e0>
   513ec:	ldr	r9, [sp, #60]	; 0x3c
   513f0:	mov	r2, #0
   513f4:	b	51420 <GetDataSlab+0x1d2c4>
   513f8:	sub	r0, fp, #176	; 0xb0
   513fc:	ldr	r4, [lr, r2]
   51400:	sub	r3, r3, ip
   51404:	ldr	r0, [r0, r2]
   51408:	mla	r0, r4, r0, r3
   5140c:	add	r7, r0, r7
   51410:	add	sl, sl, r0, lsl #3
   51414:	subs	r9, r9, #1
   51418:	add	r2, r2, #4
   5141c:	beq	5133c <GetDataSlab+0x1d1e0>
   51420:	ldr	r3, [r8, r2]
   51424:	ldr	r0, [sp, #84]	; 0x54
   51428:	add	r3, r3, #1
   5142c:	str	r3, [r8, r2]
   51430:	ldr	r0, [r0, r2]
   51434:	sdiv	r4, r3, r0
   51438:	mls	r0, r4, r0, r3
   5143c:	cmp	r0, #0
   51440:	bne	5132c <GetDataSlab+0x1d1d0>
   51444:	mov	r0, #0
   51448:	str	r0, [r8, r2]
   5144c:	ldr	r0, [sp, #80]	; 0x50
   51450:	ldr	r3, [r0, r2]
   51454:	sdiv	r0, r7, r3
   51458:	mls	ip, r0, r3, r7
   5145c:	cmp	ip, #0
   51460:	bne	513f8 <GetDataSlab+0x1d29c>
   51464:	ldr	r3, [lr, r2]
   51468:	cmp	r3, #0
   5146c:	beq	51414 <GetDataSlab+0x1d2b8>
   51470:	sub	r0, fp, #176	; 0xb0
   51474:	ldr	r0, [r0, r2]
   51478:	mla	r7, r0, r3, r7
   5147c:	mul	r0, r0, r3
   51480:	b	51410 <GetDataSlab+0x1d2b4>
   51484:	ldr	r0, [sp, #68]	; 0x44
   51488:	ldr	r6, [fp, #16]
   5148c:	cmp	r0, #1
   51490:	sub	r0, fp, #176	; 0xb0
   51494:	blt	51624 <GetDataSlab+0x1d4c8>
   51498:	ldr	ip, [fp, #12]
   5149c:	orr	r0, r0, #4
   514a0:	sub	r2, fp, #136	; 0x88
   514a4:	mov	r5, #0
   514a8:	str	r0, [sp, #72]	; 0x48
   514ac:	ldr	r0, [fp, #24]
   514b0:	orr	r8, r2, #4
   514b4:	ldr	r2, [fp, #20]
   514b8:	ldr	r4, [ip], #4
   514bc:	sub	r0, r0, #1
   514c0:	add	r2, r2, #4
   514c4:	str	r0, [sp, #52]	; 0x34
   514c8:	sub	r0, fp, #96	; 0x60
   514cc:	str	r2, [sp, #76]	; 0x4c
   514d0:	orr	r0, r0, #4
   514d4:	str	r0, [sp, #48]	; 0x30
   514d8:	b	5150c <GetDataSlab+0x1d3b0>
   514dc:	ldr	r0, [sp, #48]	; 0x30
   514e0:	ldr	r0, [r0, r2]
   514e4:	add	r9, r9, r0, lsl #3
   514e8:	add	r3, r0, r3
   514ec:	ldr	r5, [sp, #60]	; 0x3c
   514f0:	ldr	r0, [sp, #68]	; 0x44
   514f4:	str	r6, [sp, #64]	; 0x40
   514f8:	ldr	r6, [fp, #16]
   514fc:	ldr	r4, [sp, #56]	; 0x38
   51500:	add	r5, r1, r5
   51504:	cmp	r5, r0
   51508:	bge	51624 <GetDataSlab+0x1d4c8>
   5150c:	add	r2, r4, r3
   51510:	add	r3, r9, r4, lsl #3
   51514:	cmp	r1, #1
   51518:	str	r5, [sp, #60]	; 0x3c
   5151c:	blt	51568 <GetDataSlab+0x1d40c>
   51520:	ldr	r0, [sp, #88]	; 0x58
   51524:	mov	r4, #0
   51528:	add	r5, r0, r5
   5152c:	ldr	r0, [fp, #20]
   51530:	ldrb	r1, [r3]
   51534:	strb	r1, [r5, r4]
   51538:	add	r4, r4, #1
   5153c:	ldr	r7, [r6]
   51540:	ldr	r1, [r0]
   51544:	add	r3, r3, r7, lsl #3
   51548:	add	r2, r7, r2
   5154c:	cmp	r4, r1
   51550:	blt	51530 <GetDataSlab+0x1d3d4>
   51554:	ldr	r0, [fp, #12]
   51558:	ldr	r4, [r0]
   5155c:	ldr	r0, [fp, #8]
   51560:	ldr	r6, [r0]
   51564:	b	5156c <GetDataSlab+0x1d410>
   51568:	ldr	r6, [sp, #64]	; 0x40
   5156c:	mls	r5, r7, r1, r6
   51570:	ldr	r0, [fp, #24]
   51574:	str	r4, [sp, #56]	; 0x38
   51578:	sub	r4, r5, r4
   5157c:	add	r9, r3, r4, lsl #3
   51580:	add	r3, r4, r2
   51584:	cmp	r0, #2
   51588:	blt	514ec <GetDataSlab+0x1d390>
   5158c:	ldr	sl, [sp, #52]	; 0x34
   51590:	mov	r2, #0
   51594:	b	515c0 <GetDataSlab+0x1d464>
   51598:	sub	r0, fp, #176	; 0xb0
   5159c:	ldr	r5, [ip, r2]
   515a0:	sub	r4, r4, lr
   515a4:	ldr	r0, [r0, r2]
   515a8:	mla	r0, r5, r0, r4
   515ac:	add	r3, r0, r3
   515b0:	add	r9, r9, r0, lsl #3
   515b4:	subs	sl, sl, #1
   515b8:	add	r2, r2, #4
   515bc:	beq	514ec <GetDataSlab+0x1d390>
   515c0:	ldr	r4, [r8, r2]
   515c4:	ldr	r0, [sp, #76]	; 0x4c
   515c8:	add	r4, r4, #1
   515cc:	str	r4, [r8, r2]
   515d0:	ldr	r0, [r0, r2]
   515d4:	sdiv	r5, r4, r0
   515d8:	mls	r0, r5, r0, r4
   515dc:	cmp	r0, #0
   515e0:	bne	514dc <GetDataSlab+0x1d380>
   515e4:	mov	r0, #0
   515e8:	str	r0, [r8, r2]
   515ec:	ldr	r0, [sp, #72]	; 0x48
   515f0:	ldr	r4, [r0, r2]
   515f4:	sdiv	r0, r3, r4
   515f8:	mls	lr, r0, r4, r3
   515fc:	cmp	lr, #0
   51600:	bne	51598 <GetDataSlab+0x1d43c>
   51604:	ldr	r4, [ip, r2]
   51608:	cmp	r4, #0
   5160c:	beq	515b4 <GetDataSlab+0x1d458>
   51610:	sub	r0, fp, #176	; 0xb0
   51614:	ldr	r0, [r0, r2]
   51618:	mla	r3, r0, r4, r3
   5161c:	mul	r0, r0, r4
   51620:	b	515b0 <GetDataSlab+0x1d454>
   51624:	ldr	r7, [sp, #84]	; 0x54
   51628:	mov	r2, #0
   5162c:	cmp	r7, #13
   51630:	bne	5b6a0 <GetDataSlab+0x27544>
   51634:	ldr	r0, [fp, #16]
   51638:	mov	r7, #0
   5163c:	sub	r9, fp, #176	; 0xb0
   51640:	sub	r8, fp, #96	; 0x60
   51644:	ldr	r5, [r0]
   51648:	sub	r0, r5, #1
   5164c:	str	r0, [fp, #-96]	; 0xffffffa0
   51650:	ldr	r0, [fp, #8]
   51654:	ldr	r0, [r0]
   51658:	str	r0, [sp, #72]	; 0x48
   5165c:	str	r0, [fp, #-176]	; 0xffffff50
   51660:	ldr	r0, [fp, #20]
   51664:	ldr	r1, [r0]
   51668:	ldr	r0, [fp, #24]
   5166c:	cmp	r0, #2
   51670:	mov	r0, r1
   51674:	str	r1, [sp, #76]	; 0x4c
   51678:	blt	517ec <GetDataSlab+0x1d690>
   5167c:	ldr	r0, [fp, #8]
   51680:	ldr	r4, [sp, #72]	; 0x48
   51684:	mov	r3, #0
   51688:	mvn	ip, #15
   5168c:	mov	r7, #0
   51690:	str	r1, [sp, #76]	; 0x4c
   51694:	str	r3, [sp, #84]	; 0x54
   51698:	mov	r3, r1
   5169c:	mov	r2, r0
   516a0:	sub	r0, r0, #4
   516a4:	mov	r6, r4
   516a8:	sub	sl, r2, #12
   516ac:	mov	r2, #1
   516b0:	b	51704 <GetDataSlab+0x1d5a8>
   516b4:	sub	r8, fp, #96	; 0x60
   516b8:	ldr	r3, [fp, #12]
   516bc:	sub	r9, fp, #176	; 0xb0
   516c0:	str	lr, [r8, r2, lsl #2]
   516c4:	ldr	r6, [sp, #68]	; 0x44
   516c8:	add	sl, sl, #4
   516cc:	str	r4, [r9, r2, lsl #2]
   516d0:	ldr	r3, [r3, r2, lsl #2]
   516d4:	mla	r7, r3, r6, r7
   516d8:	ldr	r3, [fp, #20]
   516dc:	ldr	r6, [sp, #76]	; 0x4c
   516e0:	ldr	r3, [r3, r2, lsl #2]
   516e4:	add	r2, r2, #1
   516e8:	mul	r6, r3, r6
   516ec:	ldr	r3, [fp, #24]
   516f0:	str	r6, [sp, #76]	; 0x4c
   516f4:	mov	r6, r4
   516f8:	ldr	r4, [sp, #64]	; 0x40
   516fc:	cmp	r2, r3
   51700:	beq	517ec <GetDataSlab+0x1d690>
   51704:	ldr	r3, [fp, #16]
   51708:	str	r6, [sp, #68]	; 0x44
   5170c:	ldr	r3, [r3, r2, lsl #2]
   51710:	str	r4, [r9, r2, lsl #2]
   51714:	ldr	r9, [sp, #84]	; 0x54
   51718:	sub	lr, r3, #1
   5171c:	ldr	r3, [fp, #8]
   51720:	add	r9, r9, #1
   51724:	str	lr, [r8, r2, lsl #2]
   51728:	cmp	r9, #4
   5172c:	str	r9, [sp, #84]	; 0x54
   51730:	ldr	r6, [r3, r2, lsl #2]
   51734:	str	r6, [sp, #64]	; 0x40
   51738:	bcs	51744 <GetDataSlab+0x1d5e8>
   5173c:	mov	r3, r2
   51740:	b	517d4 <GetDataSlab+0x1d678>
   51744:	vmov.i32	q9, #1	; 0x00000001
   51748:	vmov.i32	q10, #1	; 0x00000001
   5174c:	vmov.32	d23[1], r6
   51750:	vmov.i32	q8, #1	; 0x00000001
   51754:	bic	r3, r9, #3
   51758:	bic	r8, r2, #3
   5175c:	mov	r6, sl
   51760:	str	r3, [sp, #60]	; 0x3c
   51764:	sub	r3, r2, r3
   51768:	vmov.32	d18[0], r4
   5176c:	vmov.32	d20[0], lr
   51770:	vorr	d16, d18, d18
   51774:	vmov.i32	q9, #1	; 0x00000001
   51778:	vorr	d18, d20, d20
   5177c:	vld1.32	{d20-d21}, [r6], ip
   51780:	subs	r8, r8, #4
   51784:	vrev64.32	q12, q10
   51788:	vext.8	q12, q12, q12, #8
   5178c:	vext.8	q11, q11, q12, #12
   51790:	vmul.i32	q9, q9, q12
   51794:	vmul.i32	q8, q11, q8
   51798:	vorr	q11, q12, q12
   5179c:	bne	5177c <GetDataSlab+0x1d620>
   517a0:	vext.8	q11, q9, q8, #8
   517a4:	vext.8	q12, q8, q8, #8
   517a8:	ldr	r6, [sp, #60]	; 0x3c
   517ac:	vmul.i32	q0, q9, q11
   517b0:	vmul.i32	q1, q8, q12
   517b4:	cmp	r9, r6
   517b8:	vmul.i32	q8, q0, d0[1]
   517bc:	vmul.i32	q9, q1, d2[1]
   517c0:	vmov.32	lr, d16[0]
   517c4:	vmov.32	r4, d18[0]
   517c8:	beq	516b4 <GetDataSlab+0x1d558>
   517cc:	vmov.32	r6, d20[0]
   517d0:	sub	r8, fp, #96	; 0x60
   517d4:	mul	r4, r6, r4
   517d8:	ldr	r6, [r0, r3, lsl #2]
   517dc:	subs	r3, r3, #1
   517e0:	mul	lr, lr, r6
   517e4:	bne	517d4 <GetDataSlab+0x1d678>
   517e8:	b	516b8 <GetDataSlab+0x1d55c>
   517ec:	ldr	r0, [sp, #80]	; 0x50
   517f0:	cmp	r5, #1
   517f4:	add	sl, r0, r7, lsl #3
   517f8:	bne	5a8a0 <GetDataSlab+0x26744>
   517fc:	ldr	r0, [sp, #76]	; 0x4c
   51800:	ldr	r3, [fp, #20]
   51804:	sub	r2, fp, #176	; 0xb0
   51808:	cmp	r0, #1
   5180c:	blt	5aed4 <GetDataSlab+0x26d78>
   51810:	orr	r2, r2, #4
   51814:	ldr	lr, [fp, #12]
   51818:	sub	r0, fp, #136	; 0x88
   5181c:	add	r4, r3, #4
   51820:	str	r2, [sp, #84]	; 0x54
   51824:	ldr	r2, [fp, #24]
   51828:	orr	r0, r0, #4
   5182c:	sub	r2, r2, #1
   51830:	str	r2, [sp, #68]	; 0x44
   51834:	orr	r2, r8, #4
   51838:	mov	r8, #0
   5183c:	str	r2, [sp, #64]	; 0x40
   51840:	ldr	r2, [lr], #4
   51844:	str	r2, [sp, #80]	; 0x50
   51848:	b	51870 <GetDataSlab+0x1d714>
   5184c:	ldr	r3, [sp, #64]	; 0x40
   51850:	ldr	r2, [r3, r2]
   51854:	add	sl, sl, r2, lsl #3
   51858:	add	r7, r2, r7
   5185c:	ldr	r2, [sp, #76]	; 0x4c
   51860:	add	r8, r1, r8
   51864:	cmp	r8, r2
   51868:	mov	r2, #0
   5186c:	bge	5b6a0 <GetDataSlab+0x27544>
   51870:	ldr	r5, [sp, #80]	; 0x50
   51874:	ldr	r2, [sp, #72]	; 0x48
   51878:	cmp	r1, #1
   5187c:	sub	ip, fp, #176	; 0xb0
   51880:	add	r9, sl, r5, lsl #3
   51884:	add	r3, r5, r7
   51888:	blt	518d0 <GetDataSlab+0x1d774>
   5188c:	ldr	r1, [sp, #88]	; 0x58
   51890:	ldr	r5, [fp, #20]
   51894:	mov	r6, r4
   51898:	mov	r2, #0
   5189c:	mov	r7, r9
   518a0:	add	r4, r1, r8
   518a4:	ldrb	r1, [r7], #8
   518a8:	strb	r1, [r4, r2]
   518ac:	add	r2, r2, #1
   518b0:	ldr	r1, [r5]
   518b4:	cmp	r2, r1
   518b8:	blt	518a4 <GetDataSlab+0x1d748>
   518bc:	ldr	r2, [fp, #12]
   518c0:	mov	r4, r6
   518c4:	ldr	r5, [r2]
   518c8:	ldr	r2, [fp, #8]
   518cc:	ldr	r2, [r2]
   518d0:	str	r2, [sp, #72]	; 0x48
   518d4:	sub	r2, r2, r5
   518d8:	str	r5, [sp, #80]	; 0x50
   518dc:	add	sl, r9, r2, lsl #3
   518e0:	add	r7, r3, r2
   518e4:	ldr	r2, [fp, #24]
   518e8:	cmp	r2, #2
   518ec:	blt	5185c <GetDataSlab+0x1d700>
   518f0:	ldr	r9, [sp, #68]	; 0x44
   518f4:	mov	r2, #0
   518f8:	b	51924 <GetDataSlab+0x1d7c8>
   518fc:	ldr	r6, [ip, r2]
   51900:	ldr	ip, [lr, r2]
   51904:	sub	r3, r3, r5
   51908:	mla	r3, ip, r6, r3
   5190c:	sub	ip, fp, #176	; 0xb0
   51910:	add	r7, r3, r7
   51914:	add	sl, sl, r3, lsl #3
   51918:	subs	r9, r9, #1
   5191c:	add	r2, r2, #4
   51920:	beq	5185c <GetDataSlab+0x1d700>
   51924:	ldr	r3, [r0, r2]
   51928:	add	r3, r3, #1
   5192c:	str	r3, [r0, r2]
   51930:	ldr	r5, [r4, r2]
   51934:	sdiv	r6, r3, r5
   51938:	mls	r3, r6, r5, r3
   5193c:	cmp	r3, #0
   51940:	bne	5184c <GetDataSlab+0x1d6f0>
   51944:	mov	r3, #0
   51948:	str	r3, [r0, r2]
   5194c:	ldr	r3, [sp, #84]	; 0x54
   51950:	ldr	r3, [r3, r2]
   51954:	sdiv	r5, r7, r3
   51958:	mls	r5, r5, r3, r7
   5195c:	cmp	r5, #0
   51960:	bne	518fc <GetDataSlab+0x1d7a0>
   51964:	ldr	r3, [lr, r2]
   51968:	cmp	r3, #0
   5196c:	beq	51918 <GetDataSlab+0x1d7bc>
   51970:	ldr	r6, [ip, r2]
   51974:	mla	r7, r6, r3, r7
   51978:	mul	r3, r6, r3
   5197c:	b	51914 <GetDataSlab+0x1d7b8>
   51980:	ldr	r0, [sp, #76]	; 0x4c
   51984:	ldr	r2, [fp, #20]
   51988:	cmp	r0, #1
   5198c:	sub	r0, fp, #176	; 0xb0
   51990:	blt	5aed4 <GetDataSlab+0x26d78>
   51994:	orr	r0, r0, #4
   51998:	ldr	sl, [fp, #12]
   5199c:	sub	r3, fp, #136	; 0x88
   519a0:	add	r2, r2, #4
   519a4:	str	r0, [sp, #80]	; 0x50
   519a8:	ldr	r0, [fp, #24]
   519ac:	orr	lr, r3, #4
   519b0:	str	r2, [sp, #84]	; 0x54
   519b4:	sub	r0, r0, #1
   519b8:	str	r0, [sp, #60]	; 0x3c
   519bc:	sub	r0, fp, #96	; 0x60
   519c0:	orr	r0, r0, #4
   519c4:	str	r0, [sp, #56]	; 0x38
   519c8:	ldr	r0, [sl], #4
   519cc:	str	r0, [sp, #64]	; 0x40
   519d0:	mov	r0, #0
   519d4:	str	r0, [sp, #68]	; 0x44
   519d8:	b	51a0c <GetDataSlab+0x1d8b0>
   519dc:	ldr	r0, [sp, #56]	; 0x38
   519e0:	ldr	r0, [r0, r2]
   519e4:	add	r8, r8, r0
   519e8:	add	r7, r0, r7
   519ec:	ldr	r2, [sp, #68]	; 0x44
   519f0:	ldr	r0, [sp, #76]	; 0x4c
   519f4:	str	r6, [sp, #72]	; 0x48
   519f8:	add	r2, r1, r2
   519fc:	str	r2, [sp, #68]	; 0x44
   51a00:	cmp	r2, r0
   51a04:	mov	r2, #0
   51a08:	bge	5b6a0 <GetDataSlab+0x27544>
   51a0c:	ldr	r0, [sp, #64]	; 0x40
   51a10:	cmp	r1, #1
   51a14:	add	r2, r0, r7
   51a18:	add	r7, r8, r0
   51a1c:	blt	51a70 <GetDataSlab+0x1d914>
   51a20:	ldr	r0, [sp, #88]	; 0x58
   51a24:	ldr	r1, [sp, #68]	; 0x44
   51a28:	ldr	ip, [fp, #8]
   51a2c:	ldr	r6, [fp, #16]
   51a30:	mov	r3, #0
   51a34:	add	r4, r0, r1
   51a38:	ldr	r0, [fp, #20]
   51a3c:	ldrb	r1, [r7]
   51a40:	strb	r1, [r4, r3]
   51a44:	add	r3, r3, #1
   51a48:	ldr	r5, [r6]
   51a4c:	ldr	r1, [r0]
   51a50:	add	r2, r5, r2
   51a54:	add	r7, r7, r5
   51a58:	cmp	r3, r1
   51a5c:	blt	51a3c <GetDataSlab+0x1d8e0>
   51a60:	ldr	r0, [fp, #12]
   51a64:	ldr	r6, [ip]
   51a68:	ldr	r0, [r0]
   51a6c:	b	51a74 <GetDataSlab+0x1d918>
   51a70:	ldr	r6, [sp, #72]	; 0x48
   51a74:	mls	r3, r5, r1, r6
   51a78:	str	r0, [sp, #64]	; 0x40
   51a7c:	sub	r3, r3, r0
   51a80:	ldr	r0, [fp, #24]
   51a84:	add	r8, r7, r3
   51a88:	add	r7, r3, r2
   51a8c:	cmp	r0, #2
   51a90:	blt	519ec <GetDataSlab+0x1d890>
   51a94:	ldr	r9, [sp, #60]	; 0x3c
   51a98:	mov	r2, #0
   51a9c:	b	51ac8 <GetDataSlab+0x1d96c>
   51aa0:	sub	r0, fp, #176	; 0xb0
   51aa4:	ldr	r4, [sl, r2]
   51aa8:	sub	r3, r3, ip
   51aac:	ldr	r0, [r0, r2]
   51ab0:	mla	r0, r4, r0, r3
   51ab4:	add	r7, r0, r7
   51ab8:	add	r8, r8, r0
   51abc:	subs	r9, r9, #1
   51ac0:	add	r2, r2, #4
   51ac4:	beq	519ec <GetDataSlab+0x1d890>
   51ac8:	ldr	r3, [lr, r2]
   51acc:	ldr	r0, [sp, #84]	; 0x54
   51ad0:	add	r3, r3, #1
   51ad4:	str	r3, [lr, r2]
   51ad8:	ldr	r0, [r0, r2]
   51adc:	sdiv	r4, r3, r0
   51ae0:	mls	r0, r4, r0, r3
   51ae4:	cmp	r0, #0
   51ae8:	bne	519dc <GetDataSlab+0x1d880>
   51aec:	mov	r0, #0
   51af0:	str	r0, [lr, r2]
   51af4:	ldr	r0, [sp, #80]	; 0x50
   51af8:	ldr	r3, [r0, r2]
   51afc:	sdiv	r0, r7, r3
   51b00:	mls	ip, r0, r3, r7
   51b04:	cmp	ip, #0
   51b08:	bne	51aa0 <GetDataSlab+0x1d944>
   51b0c:	ldr	r3, [sl, r2]
   51b10:	cmp	r3, #0
   51b14:	beq	51abc <GetDataSlab+0x1d960>
   51b18:	sub	r0, fp, #176	; 0xb0
   51b1c:	ldr	r0, [r0, r2]
   51b20:	mla	r7, r0, r3, r7
   51b24:	mla	r8, r0, r3, r8
   51b28:	subs	r9, r9, #1
   51b2c:	add	r2, r2, #4
   51b30:	bne	51ac8 <GetDataSlab+0x1d96c>
   51b34:	b	519ec <GetDataSlab+0x1d890>
   51b38:	ldr	r0, [sp, #76]	; 0x4c
   51b3c:	ldr	r2, [fp, #20]
   51b40:	cmp	r0, #1
   51b44:	sub	r0, fp, #176	; 0xb0
   51b48:	blt	5aed4 <GetDataSlab+0x26d78>
   51b4c:	orr	r0, r0, #4
   51b50:	ldr	lr, [fp, #12]
   51b54:	mov	r3, r8
   51b58:	sub	r6, fp, #136	; 0x88
   51b5c:	add	r2, r2, #4
   51b60:	str	r0, [sp, #80]	; 0x50
   51b64:	ldr	r0, [fp, #24]
   51b68:	orr	r8, r6, #4
   51b6c:	str	r2, [sp, #84]	; 0x54
   51b70:	sub	r0, r0, #1
   51b74:	str	r0, [sp, #60]	; 0x3c
   51b78:	orr	r0, r3, #4
   51b7c:	str	r0, [sp, #56]	; 0x38
   51b80:	ldr	r0, [lr], #4
   51b84:	str	r0, [sp, #64]	; 0x40
   51b88:	mov	r0, #0
   51b8c:	str	r0, [sp, #68]	; 0x44
   51b90:	b	51bc4 <GetDataSlab+0x1da68>
   51b94:	ldr	r0, [sp, #56]	; 0x38
   51b98:	ldr	r0, [r0, r2]
   51b9c:	add	sl, sl, r0, lsl #1
   51ba0:	add	r7, r0, r7
   51ba4:	ldr	r2, [sp, #68]	; 0x44
   51ba8:	ldr	r0, [sp, #76]	; 0x4c
   51bac:	str	r6, [sp, #72]	; 0x48
   51bb0:	add	r2, r1, r2
   51bb4:	str	r2, [sp, #68]	; 0x44
   51bb8:	cmp	r2, r0
   51bbc:	mov	r2, #0
   51bc0:	bge	5b6a0 <GetDataSlab+0x27544>
   51bc4:	ldr	r0, [sp, #64]	; 0x40
   51bc8:	cmp	r1, #1
   51bcc:	add	r2, r0, r7
   51bd0:	add	r7, sl, r0, lsl #1
   51bd4:	blt	51c28 <GetDataSlab+0x1dacc>
   51bd8:	ldr	r0, [sp, #88]	; 0x58
   51bdc:	ldr	r1, [sp, #68]	; 0x44
   51be0:	ldr	ip, [fp, #8]
   51be4:	ldr	r6, [fp, #16]
   51be8:	mov	r3, #0
   51bec:	add	r4, r0, r1
   51bf0:	ldr	r0, [fp, #20]
   51bf4:	ldrb	r1, [r7]
   51bf8:	strb	r1, [r4, r3]
   51bfc:	add	r3, r3, #1
   51c00:	ldr	r5, [r6]
   51c04:	ldr	r1, [r0]
   51c08:	add	r7, r7, r5, lsl #1
   51c0c:	add	r2, r5, r2
   51c10:	cmp	r3, r1
   51c14:	blt	51bf4 <GetDataSlab+0x1da98>
   51c18:	ldr	r0, [fp, #12]
   51c1c:	ldr	r6, [ip]
   51c20:	ldr	r0, [r0]
   51c24:	b	51c2c <GetDataSlab+0x1dad0>
   51c28:	ldr	r6, [sp, #72]	; 0x48
   51c2c:	mls	r3, r5, r1, r6
   51c30:	str	r0, [sp, #64]	; 0x40
   51c34:	sub	r3, r3, r0
   51c38:	ldr	r0, [fp, #24]
   51c3c:	add	sl, r7, r3, lsl #1
   51c40:	add	r7, r3, r2
   51c44:	cmp	r0, #2
   51c48:	blt	51ba4 <GetDataSlab+0x1da48>
   51c4c:	ldr	r9, [sp, #60]	; 0x3c
   51c50:	mov	r2, #0
   51c54:	b	51c80 <GetDataSlab+0x1db24>
   51c58:	sub	r0, fp, #176	; 0xb0
   51c5c:	ldr	r4, [lr, r2]
   51c60:	sub	r3, r3, ip
   51c64:	ldr	r0, [r0, r2]
   51c68:	mla	r0, r4, r0, r3
   51c6c:	add	r7, r0, r7
   51c70:	add	sl, sl, r0, lsl #1
   51c74:	subs	r9, r9, #1
   51c78:	add	r2, r2, #4
   51c7c:	beq	51ba4 <GetDataSlab+0x1da48>
   51c80:	ldr	r3, [r8, r2]
   51c84:	ldr	r0, [sp, #84]	; 0x54
   51c88:	add	r3, r3, #1
   51c8c:	str	r3, [r8, r2]
   51c90:	ldr	r0, [r0, r2]
   51c94:	sdiv	r4, r3, r0
   51c98:	mls	r0, r4, r0, r3
   51c9c:	cmp	r0, #0
   51ca0:	bne	51b94 <GetDataSlab+0x1da38>
   51ca4:	mov	r0, #0
   51ca8:	str	r0, [r8, r2]
   51cac:	ldr	r0, [sp, #80]	; 0x50
   51cb0:	ldr	r3, [r0, r2]
   51cb4:	sdiv	r0, r7, r3
   51cb8:	mls	ip, r0, r3, r7
   51cbc:	cmp	ip, #0
   51cc0:	bne	51c58 <GetDataSlab+0x1dafc>
   51cc4:	ldr	r3, [lr, r2]
   51cc8:	cmp	r3, #0
   51ccc:	beq	51c74 <GetDataSlab+0x1db18>
   51cd0:	sub	r0, fp, #176	; 0xb0
   51cd4:	ldr	r0, [r0, r2]
   51cd8:	mla	r7, r0, r3, r7
   51cdc:	mul	r0, r0, r3
   51ce0:	b	51c70 <GetDataSlab+0x1db14>
   51ce4:	ldr	r0, [sp, #76]	; 0x4c
   51ce8:	ldr	r2, [fp, #20]
   51cec:	cmp	r0, #1
   51cf0:	sub	r0, fp, #176	; 0xb0
   51cf4:	blt	5aed4 <GetDataSlab+0x26d78>
   51cf8:	orr	r0, r0, #4
   51cfc:	ldr	lr, [fp, #12]
   51d00:	mov	r3, r8
   51d04:	sub	r6, fp, #136	; 0x88
   51d08:	add	r2, r2, #4
   51d0c:	str	r0, [sp, #80]	; 0x50
   51d10:	ldr	r0, [fp, #24]
   51d14:	orr	r8, r6, #4
   51d18:	str	r2, [sp, #84]	; 0x54
   51d1c:	sub	r0, r0, #1
   51d20:	str	r0, [sp, #60]	; 0x3c
   51d24:	orr	r0, r3, #4
   51d28:	str	r0, [sp, #56]	; 0x38
   51d2c:	ldr	r0, [lr], #4
   51d30:	str	r0, [sp, #64]	; 0x40
   51d34:	mov	r0, #0
   51d38:	str	r0, [sp, #68]	; 0x44
   51d3c:	b	51d70 <GetDataSlab+0x1dc14>
   51d40:	ldr	r0, [sp, #56]	; 0x38
   51d44:	ldr	r0, [r0, r2]
   51d48:	add	sl, sl, r0, lsl #1
   51d4c:	add	r7, r0, r7
   51d50:	ldr	r2, [sp, #68]	; 0x44
   51d54:	ldr	r0, [sp, #76]	; 0x4c
   51d58:	str	r6, [sp, #72]	; 0x48
   51d5c:	add	r2, r1, r2
   51d60:	str	r2, [sp, #68]	; 0x44
   51d64:	cmp	r2, r0
   51d68:	mov	r2, #0
   51d6c:	bge	5b6a0 <GetDataSlab+0x27544>
   51d70:	ldr	r0, [sp, #64]	; 0x40
   51d74:	cmp	r1, #1
   51d78:	add	r2, r0, r7
   51d7c:	add	r7, sl, r0, lsl #1
   51d80:	blt	51dd4 <GetDataSlab+0x1dc78>
   51d84:	ldr	r0, [sp, #88]	; 0x58
   51d88:	ldr	r1, [sp, #68]	; 0x44
   51d8c:	ldr	ip, [fp, #8]
   51d90:	ldr	r6, [fp, #16]
   51d94:	mov	r3, #0
   51d98:	add	r4, r0, r1
   51d9c:	ldr	r0, [fp, #20]
   51da0:	ldrb	r1, [r7]
   51da4:	strb	r1, [r4, r3]
   51da8:	add	r3, r3, #1
   51dac:	ldr	r5, [r6]
   51db0:	ldr	r1, [r0]
   51db4:	add	r7, r7, r5, lsl #1
   51db8:	add	r2, r5, r2
   51dbc:	cmp	r3, r1
   51dc0:	blt	51da0 <GetDataSlab+0x1dc44>
   51dc4:	ldr	r0, [fp, #12]
   51dc8:	ldr	r6, [ip]
   51dcc:	ldr	r0, [r0]
   51dd0:	b	51dd8 <GetDataSlab+0x1dc7c>
   51dd4:	ldr	r6, [sp, #72]	; 0x48
   51dd8:	mls	r3, r5, r1, r6
   51ddc:	str	r0, [sp, #64]	; 0x40
   51de0:	sub	r3, r3, r0
   51de4:	ldr	r0, [fp, #24]
   51de8:	add	sl, r7, r3, lsl #1
   51dec:	add	r7, r3, r2
   51df0:	cmp	r0, #2
   51df4:	blt	51d50 <GetDataSlab+0x1dbf4>
   51df8:	ldr	r9, [sp, #60]	; 0x3c
   51dfc:	mov	r2, #0
   51e00:	b	51e2c <GetDataSlab+0x1dcd0>
   51e04:	sub	r0, fp, #176	; 0xb0
   51e08:	ldr	r4, [lr, r2]
   51e0c:	sub	r3, r3, ip
   51e10:	ldr	r0, [r0, r2]
   51e14:	mla	r0, r4, r0, r3
   51e18:	add	r7, r0, r7
   51e1c:	add	sl, sl, r0, lsl #1
   51e20:	subs	r9, r9, #1
   51e24:	add	r2, r2, #4
   51e28:	beq	51d50 <GetDataSlab+0x1dbf4>
   51e2c:	ldr	r3, [r8, r2]
   51e30:	ldr	r0, [sp, #84]	; 0x54
   51e34:	add	r3, r3, #1
   51e38:	str	r3, [r8, r2]
   51e3c:	ldr	r0, [r0, r2]
   51e40:	sdiv	r4, r3, r0
   51e44:	mls	r0, r4, r0, r3
   51e48:	cmp	r0, #0
   51e4c:	bne	51d40 <GetDataSlab+0x1dbe4>
   51e50:	mov	r0, #0
   51e54:	str	r0, [r8, r2]
   51e58:	ldr	r0, [sp, #80]	; 0x50
   51e5c:	ldr	r3, [r0, r2]
   51e60:	sdiv	r0, r7, r3
   51e64:	mls	ip, r0, r3, r7
   51e68:	cmp	ip, #0
   51e6c:	bne	51e04 <GetDataSlab+0x1dca8>
   51e70:	ldr	r3, [lr, r2]
   51e74:	cmp	r3, #0
   51e78:	beq	51e20 <GetDataSlab+0x1dcc4>
   51e7c:	sub	r0, fp, #176	; 0xb0
   51e80:	ldr	r0, [r0, r2]
   51e84:	mla	r7, r0, r3, r7
   51e88:	mul	r0, r0, r3
   51e8c:	b	51e1c <GetDataSlab+0x1dcc0>
   51e90:	ldr	r0, [sp, #76]	; 0x4c
   51e94:	ldr	r2, [fp, #20]
   51e98:	cmp	r0, #1
   51e9c:	sub	r0, fp, #176	; 0xb0
   51ea0:	blt	5aed4 <GetDataSlab+0x26d78>
   51ea4:	orr	r0, r0, #4
   51ea8:	ldr	sl, [fp, #12]
   51eac:	sub	r3, fp, #136	; 0x88
   51eb0:	add	r2, r2, #4
   51eb4:	str	r0, [sp, #80]	; 0x50
   51eb8:	ldr	r0, [fp, #24]
   51ebc:	orr	lr, r3, #4
   51ec0:	str	r2, [sp, #84]	; 0x54
   51ec4:	sub	r0, r0, #1
   51ec8:	str	r0, [sp, #60]	; 0x3c
   51ecc:	sub	r0, fp, #96	; 0x60
   51ed0:	orr	r0, r0, #4
   51ed4:	str	r0, [sp, #56]	; 0x38
   51ed8:	ldr	r0, [sl], #4
   51edc:	str	r0, [sp, #64]	; 0x40
   51ee0:	mov	r0, #0
   51ee4:	str	r0, [sp, #68]	; 0x44
   51ee8:	b	51f1c <GetDataSlab+0x1ddc0>
   51eec:	ldr	r0, [sp, #56]	; 0x38
   51ef0:	ldr	r0, [r0, r2]
   51ef4:	add	r8, r8, r0, lsl #2
   51ef8:	add	r7, r0, r7
   51efc:	ldr	r2, [sp, #68]	; 0x44
   51f00:	ldr	r0, [sp, #76]	; 0x4c
   51f04:	str	r6, [sp, #72]	; 0x48
   51f08:	add	r2, r1, r2
   51f0c:	str	r2, [sp, #68]	; 0x44
   51f10:	cmp	r2, r0
   51f14:	mov	r2, #0
   51f18:	bge	5b6a0 <GetDataSlab+0x27544>
   51f1c:	ldr	r0, [sp, #64]	; 0x40
   51f20:	cmp	r1, #1
   51f24:	add	r2, r0, r7
   51f28:	add	r7, r8, r0, lsl #2
   51f2c:	blt	51f80 <GetDataSlab+0x1de24>
   51f30:	ldr	r0, [sp, #88]	; 0x58
   51f34:	ldr	r1, [sp, #68]	; 0x44
   51f38:	ldr	ip, [fp, #8]
   51f3c:	ldr	r6, [fp, #16]
   51f40:	mov	r3, #0
   51f44:	add	r4, r0, r1
   51f48:	ldr	r0, [fp, #20]
   51f4c:	ldr	r1, [r7]
   51f50:	strb	r1, [r4, r3]
   51f54:	add	r3, r3, #1
   51f58:	ldr	r5, [r6]
   51f5c:	ldr	r1, [r0]
   51f60:	add	r7, r7, r5, lsl #2
   51f64:	add	r2, r5, r2
   51f68:	cmp	r3, r1
   51f6c:	blt	51f4c <GetDataSlab+0x1ddf0>
   51f70:	ldr	r0, [fp, #12]
   51f74:	ldr	r6, [ip]
   51f78:	ldr	r0, [r0]
   51f7c:	b	51f84 <GetDataSlab+0x1de28>
   51f80:	ldr	r6, [sp, #72]	; 0x48
   51f84:	mls	r3, r5, r1, r6
   51f88:	str	r0, [sp, #64]	; 0x40
   51f8c:	sub	r3, r3, r0
   51f90:	ldr	r0, [fp, #24]
   51f94:	add	r8, r7, r3, lsl #2
   51f98:	add	r7, r3, r2
   51f9c:	cmp	r0, #2
   51fa0:	blt	51efc <GetDataSlab+0x1dda0>
   51fa4:	ldr	r9, [sp, #60]	; 0x3c
   51fa8:	mov	r2, #0
   51fac:	b	51fd8 <GetDataSlab+0x1de7c>
   51fb0:	sub	r0, fp, #176	; 0xb0
   51fb4:	ldr	r4, [sl, r2]
   51fb8:	sub	r3, r3, ip
   51fbc:	ldr	r0, [r0, r2]
   51fc0:	mla	r0, r4, r0, r3
   51fc4:	add	r7, r0, r7
   51fc8:	add	r8, r8, r0, lsl #2
   51fcc:	subs	r9, r9, #1
   51fd0:	add	r2, r2, #4
   51fd4:	beq	51efc <GetDataSlab+0x1dda0>
   51fd8:	ldr	r3, [lr, r2]
   51fdc:	ldr	r0, [sp, #84]	; 0x54
   51fe0:	add	r3, r3, #1
   51fe4:	str	r3, [lr, r2]
   51fe8:	ldr	r0, [r0, r2]
   51fec:	sdiv	r4, r3, r0
   51ff0:	mls	r0, r4, r0, r3
   51ff4:	cmp	r0, #0
   51ff8:	bne	51eec <GetDataSlab+0x1dd90>
   51ffc:	mov	r0, #0
   52000:	str	r0, [lr, r2]
   52004:	ldr	r0, [sp, #80]	; 0x50
   52008:	ldr	r3, [r0, r2]
   5200c:	sdiv	r0, r7, r3
   52010:	mls	ip, r0, r3, r7
   52014:	cmp	ip, #0
   52018:	bne	51fb0 <GetDataSlab+0x1de54>
   5201c:	ldr	r3, [sl, r2]
   52020:	cmp	r3, #0
   52024:	beq	51fcc <GetDataSlab+0x1de70>
   52028:	sub	r0, fp, #176	; 0xb0
   5202c:	ldr	r0, [r0, r2]
   52030:	mla	r7, r0, r3, r7
   52034:	mul	r0, r0, r3
   52038:	b	51fc8 <GetDataSlab+0x1de6c>
   5203c:	ldr	r0, [sp, #76]	; 0x4c
   52040:	ldr	r2, [fp, #20]
   52044:	cmp	r0, #1
   52048:	sub	r0, fp, #176	; 0xb0
   5204c:	blt	5aed4 <GetDataSlab+0x26d78>
   52050:	orr	r0, r0, #4
   52054:	ldr	sl, [fp, #12]
   52058:	sub	r3, fp, #136	; 0x88
   5205c:	add	r2, r2, #4
   52060:	str	r0, [sp, #80]	; 0x50
   52064:	ldr	r0, [fp, #24]
   52068:	orr	lr, r3, #4
   5206c:	str	r2, [sp, #84]	; 0x54
   52070:	sub	r0, r0, #1
   52074:	str	r0, [sp, #60]	; 0x3c
   52078:	sub	r0, fp, #96	; 0x60
   5207c:	orr	r0, r0, #4
   52080:	str	r0, [sp, #56]	; 0x38
   52084:	ldr	r0, [sl], #4
   52088:	str	r0, [sp, #64]	; 0x40
   5208c:	mov	r0, #0
   52090:	str	r0, [sp, #68]	; 0x44
   52094:	b	520c8 <GetDataSlab+0x1df6c>
   52098:	ldr	r0, [sp, #56]	; 0x38
   5209c:	ldr	r0, [r0, r2]
   520a0:	add	r8, r8, r0, lsl #2
   520a4:	add	r7, r0, r7
   520a8:	ldr	r2, [sp, #68]	; 0x44
   520ac:	ldr	r0, [sp, #76]	; 0x4c
   520b0:	str	r6, [sp, #72]	; 0x48
   520b4:	add	r2, r1, r2
   520b8:	str	r2, [sp, #68]	; 0x44
   520bc:	cmp	r2, r0
   520c0:	mov	r2, #0
   520c4:	bge	5b6a0 <GetDataSlab+0x27544>
   520c8:	ldr	r0, [sp, #64]	; 0x40
   520cc:	cmp	r1, #1
   520d0:	add	r2, r0, r7
   520d4:	add	r7, r8, r0, lsl #2
   520d8:	blt	5212c <GetDataSlab+0x1dfd0>
   520dc:	ldr	r0, [sp, #88]	; 0x58
   520e0:	ldr	r1, [sp, #68]	; 0x44
   520e4:	ldr	ip, [fp, #8]
   520e8:	ldr	r6, [fp, #16]
   520ec:	mov	r3, #0
   520f0:	add	r4, r0, r1
   520f4:	ldr	r0, [fp, #20]
   520f8:	ldr	r1, [r7]
   520fc:	strb	r1, [r4, r3]
   52100:	add	r3, r3, #1
   52104:	ldr	r5, [r6]
   52108:	ldr	r1, [r0]
   5210c:	add	r7, r7, r5, lsl #2
   52110:	add	r2, r5, r2
   52114:	cmp	r3, r1
   52118:	blt	520f8 <GetDataSlab+0x1df9c>
   5211c:	ldr	r0, [fp, #12]
   52120:	ldr	r6, [ip]
   52124:	ldr	r0, [r0]
   52128:	b	52130 <GetDataSlab+0x1dfd4>
   5212c:	ldr	r6, [sp, #72]	; 0x48
   52130:	mls	r3, r5, r1, r6
   52134:	str	r0, [sp, #64]	; 0x40
   52138:	sub	r3, r3, r0
   5213c:	ldr	r0, [fp, #24]
   52140:	add	r8, r7, r3, lsl #2
   52144:	add	r7, r3, r2
   52148:	cmp	r0, #2
   5214c:	blt	520a8 <GetDataSlab+0x1df4c>
   52150:	ldr	r9, [sp, #60]	; 0x3c
   52154:	mov	r2, #0
   52158:	b	52184 <GetDataSlab+0x1e028>
   5215c:	sub	r0, fp, #176	; 0xb0
   52160:	ldr	r4, [sl, r2]
   52164:	sub	r3, r3, ip
   52168:	ldr	r0, [r0, r2]
   5216c:	mla	r0, r4, r0, r3
   52170:	add	r7, r0, r7
   52174:	add	r8, r8, r0, lsl #2
   52178:	subs	r9, r9, #1
   5217c:	add	r2, r2, #4
   52180:	beq	520a8 <GetDataSlab+0x1df4c>
   52184:	ldr	r3, [lr, r2]
   52188:	ldr	r0, [sp, #84]	; 0x54
   5218c:	add	r3, r3, #1
   52190:	str	r3, [lr, r2]
   52194:	ldr	r0, [r0, r2]
   52198:	sdiv	r4, r3, r0
   5219c:	mls	r0, r4, r0, r3
   521a0:	cmp	r0, #0
   521a4:	bne	52098 <GetDataSlab+0x1df3c>
   521a8:	mov	r0, #0
   521ac:	str	r0, [lr, r2]
   521b0:	ldr	r0, [sp, #80]	; 0x50
   521b4:	ldr	r3, [r0, r2]
   521b8:	sdiv	r0, r7, r3
   521bc:	mls	ip, r0, r3, r7
   521c0:	cmp	ip, #0
   521c4:	bne	5215c <GetDataSlab+0x1e000>
   521c8:	ldr	r3, [sl, r2]
   521cc:	cmp	r3, #0
   521d0:	beq	52178 <GetDataSlab+0x1e01c>
   521d4:	sub	r0, fp, #176	; 0xb0
   521d8:	ldr	r0, [r0, r2]
   521dc:	mla	r7, r0, r3, r7
   521e0:	mul	r0, r0, r3
   521e4:	b	52174 <GetDataSlab+0x1e018>
   521e8:	ldr	r0, [sp, #76]	; 0x4c
   521ec:	ldr	r2, [fp, #20]
   521f0:	cmp	r0, #1
   521f4:	sub	r0, fp, #176	; 0xb0
   521f8:	blt	5aed4 <GetDataSlab+0x26d78>
   521fc:	orr	r0, r0, #4
   52200:	ldr	lr, [fp, #12]
   52204:	mov	r3, r8
   52208:	sub	r6, fp, #136	; 0x88
   5220c:	add	r2, r2, #4
   52210:	str	r0, [sp, #80]	; 0x50
   52214:	ldr	r0, [fp, #24]
   52218:	orr	r8, r6, #4
   5221c:	str	r2, [sp, #84]	; 0x54
   52220:	sub	r0, r0, #1
   52224:	str	r0, [sp, #60]	; 0x3c
   52228:	orr	r0, r3, #4
   5222c:	str	r0, [sp, #56]	; 0x38
   52230:	ldr	r0, [lr], #4
   52234:	str	r0, [sp, #64]	; 0x40
   52238:	mov	r0, #0
   5223c:	str	r0, [sp, #68]	; 0x44
   52240:	b	52274 <GetDataSlab+0x1e118>
   52244:	ldr	r0, [sp, #56]	; 0x38
   52248:	ldr	r0, [r0, r2]
   5224c:	add	sl, sl, r0, lsl #2
   52250:	add	r7, r0, r7
   52254:	ldr	r2, [sp, #68]	; 0x44
   52258:	ldr	r0, [sp, #76]	; 0x4c
   5225c:	str	r6, [sp, #72]	; 0x48
   52260:	add	r2, r1, r2
   52264:	str	r2, [sp, #68]	; 0x44
   52268:	cmp	r2, r0
   5226c:	mov	r2, #0
   52270:	bge	5b6a0 <GetDataSlab+0x27544>
   52274:	ldr	r0, [sp, #64]	; 0x40
   52278:	cmp	r1, #1
   5227c:	add	r2, r0, r7
   52280:	add	r7, sl, r0, lsl #2
   52284:	blt	522e0 <GetDataSlab+0x1e184>
   52288:	ldr	r0, [sp, #88]	; 0x58
   5228c:	ldr	r1, [sp, #68]	; 0x44
   52290:	ldr	ip, [fp, #8]
   52294:	ldr	r6, [fp, #16]
   52298:	mov	r3, #0
   5229c:	add	r4, r0, r1
   522a0:	ldr	r0, [fp, #20]
   522a4:	vldr	s0, [r7]
   522a8:	vcvt.u32.f32	s0, s0
   522ac:	vmov	r1, s0
   522b0:	strb	r1, [r4, r3]
   522b4:	add	r3, r3, #1
   522b8:	ldr	r5, [r6]
   522bc:	ldr	r1, [r0]
   522c0:	add	r7, r7, r5, lsl #2
   522c4:	add	r2, r5, r2
   522c8:	cmp	r3, r1
   522cc:	blt	522a4 <GetDataSlab+0x1e148>
   522d0:	ldr	r0, [fp, #12]
   522d4:	ldr	r6, [ip]
   522d8:	ldr	r0, [r0]
   522dc:	b	522e4 <GetDataSlab+0x1e188>
   522e0:	ldr	r6, [sp, #72]	; 0x48
   522e4:	mls	r3, r5, r1, r6
   522e8:	str	r0, [sp, #64]	; 0x40
   522ec:	sub	r3, r3, r0
   522f0:	ldr	r0, [fp, #24]
   522f4:	add	sl, r7, r3, lsl #2
   522f8:	add	r7, r3, r2
   522fc:	cmp	r0, #2
   52300:	blt	52254 <GetDataSlab+0x1e0f8>
   52304:	ldr	r9, [sp, #60]	; 0x3c
   52308:	mov	r2, #0
   5230c:	b	52338 <GetDataSlab+0x1e1dc>
   52310:	sub	r0, fp, #176	; 0xb0
   52314:	ldr	r4, [lr, r2]
   52318:	sub	r3, r3, ip
   5231c:	ldr	r0, [r0, r2]
   52320:	mla	r0, r4, r0, r3
   52324:	add	r7, r0, r7
   52328:	add	sl, sl, r0, lsl #2
   5232c:	subs	r9, r9, #1
   52330:	add	r2, r2, #4
   52334:	beq	52254 <GetDataSlab+0x1e0f8>
   52338:	ldr	r3, [r8, r2]
   5233c:	ldr	r0, [sp, #84]	; 0x54
   52340:	add	r3, r3, #1
   52344:	str	r3, [r8, r2]
   52348:	ldr	r0, [r0, r2]
   5234c:	sdiv	r4, r3, r0
   52350:	mls	r0, r4, r0, r3
   52354:	cmp	r0, #0
   52358:	bne	52244 <GetDataSlab+0x1e0e8>
   5235c:	mov	r0, #0
   52360:	str	r0, [r8, r2]
   52364:	ldr	r0, [sp, #80]	; 0x50
   52368:	ldr	r3, [r0, r2]
   5236c:	sdiv	r0, r7, r3
   52370:	mls	ip, r0, r3, r7
   52374:	cmp	ip, #0
   52378:	bne	52310 <GetDataSlab+0x1e1b4>
   5237c:	ldr	r3, [lr, r2]
   52380:	cmp	r3, #0
   52384:	beq	5232c <GetDataSlab+0x1e1d0>
   52388:	sub	r0, fp, #176	; 0xb0
   5238c:	ldr	r0, [r0, r2]
   52390:	mla	r7, r0, r3, r7
   52394:	mul	r0, r0, r3
   52398:	b	52328 <GetDataSlab+0x1e1cc>
   5239c:	ldr	r0, [sp, #76]	; 0x4c
   523a0:	ldr	r2, [fp, #20]
   523a4:	cmp	r0, #1
   523a8:	sub	r0, fp, #176	; 0xb0
   523ac:	blt	5aed4 <GetDataSlab+0x26d78>
   523b0:	orr	r0, r0, #4
   523b4:	ldr	lr, [fp, #12]
   523b8:	mov	r3, r8
   523bc:	sub	r6, fp, #136	; 0x88
   523c0:	add	r2, r2, #4
   523c4:	str	r0, [sp, #80]	; 0x50
   523c8:	ldr	r0, [fp, #24]
   523cc:	orr	r8, r6, #4
   523d0:	str	r2, [sp, #84]	; 0x54
   523d4:	sub	r0, r0, #1
   523d8:	str	r0, [sp, #60]	; 0x3c
   523dc:	orr	r0, r3, #4
   523e0:	str	r0, [sp, #56]	; 0x38
   523e4:	ldr	r0, [lr], #4
   523e8:	str	r0, [sp, #64]	; 0x40
   523ec:	mov	r0, #0
   523f0:	str	r0, [sp, #68]	; 0x44
   523f4:	b	52428 <GetDataSlab+0x1e2cc>
   523f8:	ldr	r0, [sp, #56]	; 0x38
   523fc:	ldr	r0, [r0, r2]
   52400:	add	sl, sl, r0, lsl #3
   52404:	add	r7, r0, r7
   52408:	ldr	r2, [sp, #68]	; 0x44
   5240c:	ldr	r0, [sp, #76]	; 0x4c
   52410:	str	r6, [sp, #72]	; 0x48
   52414:	add	r2, r1, r2
   52418:	str	r2, [sp, #68]	; 0x44
   5241c:	cmp	r2, r0
   52420:	mov	r2, #0
   52424:	bge	5b6a0 <GetDataSlab+0x27544>
   52428:	ldr	r0, [sp, #64]	; 0x40
   5242c:	cmp	r1, #1
   52430:	add	r2, r0, r7
   52434:	add	r7, sl, r0, lsl #3
   52438:	blt	52494 <GetDataSlab+0x1e338>
   5243c:	ldr	r0, [sp, #88]	; 0x58
   52440:	ldr	r1, [sp, #68]	; 0x44
   52444:	ldr	ip, [fp, #8]
   52448:	ldr	r6, [fp, #16]
   5244c:	mov	r3, #0
   52450:	add	r4, r0, r1
   52454:	ldr	r0, [fp, #20]
   52458:	vldr	d16, [r7]
   5245c:	vcvt.u32.f64	s0, d16
   52460:	vmov	r1, s0
   52464:	strb	r1, [r4, r3]
   52468:	add	r3, r3, #1
   5246c:	ldr	r5, [r6]
   52470:	ldr	r1, [r0]
   52474:	add	r7, r7, r5, lsl #3
   52478:	add	r2, r5, r2
   5247c:	cmp	r3, r1
   52480:	blt	52458 <GetDataSlab+0x1e2fc>
   52484:	ldr	r0, [fp, #12]
   52488:	ldr	r6, [ip]
   5248c:	ldr	r0, [r0]
   52490:	b	52498 <GetDataSlab+0x1e33c>
   52494:	ldr	r6, [sp, #72]	; 0x48
   52498:	mls	r3, r5, r1, r6
   5249c:	str	r0, [sp, #64]	; 0x40
   524a0:	sub	r3, r3, r0
   524a4:	ldr	r0, [fp, #24]
   524a8:	add	sl, r7, r3, lsl #3
   524ac:	add	r7, r3, r2
   524b0:	cmp	r0, #2
   524b4:	blt	52408 <GetDataSlab+0x1e2ac>
   524b8:	ldr	r9, [sp, #60]	; 0x3c
   524bc:	mov	r2, #0
   524c0:	b	524ec <GetDataSlab+0x1e390>
   524c4:	sub	r0, fp, #176	; 0xb0
   524c8:	ldr	r4, [lr, r2]
   524cc:	sub	r3, r3, ip
   524d0:	ldr	r0, [r0, r2]
   524d4:	mla	r0, r4, r0, r3
   524d8:	add	r7, r0, r7
   524dc:	add	sl, sl, r0, lsl #3
   524e0:	subs	r9, r9, #1
   524e4:	add	r2, r2, #4
   524e8:	beq	52408 <GetDataSlab+0x1e2ac>
   524ec:	ldr	r3, [r8, r2]
   524f0:	ldr	r0, [sp, #84]	; 0x54
   524f4:	add	r3, r3, #1
   524f8:	str	r3, [r8, r2]
   524fc:	ldr	r0, [r0, r2]
   52500:	sdiv	r4, r3, r0
   52504:	mls	r0, r4, r0, r3
   52508:	cmp	r0, #0
   5250c:	bne	523f8 <GetDataSlab+0x1e29c>
   52510:	mov	r0, #0
   52514:	str	r0, [r8, r2]
   52518:	ldr	r0, [sp, #80]	; 0x50
   5251c:	ldr	r3, [r0, r2]
   52520:	sdiv	r0, r7, r3
   52524:	mls	ip, r0, r3, r7
   52528:	cmp	ip, #0
   5252c:	bne	524c4 <GetDataSlab+0x1e368>
   52530:	ldr	r3, [lr, r2]
   52534:	cmp	r3, #0
   52538:	beq	524e0 <GetDataSlab+0x1e384>
   5253c:	sub	r0, fp, #176	; 0xb0
   52540:	ldr	r0, [r0, r2]
   52544:	mla	r7, r0, r3, r7
   52548:	mul	r0, r0, r3
   5254c:	b	524dc <GetDataSlab+0x1e380>
   52550:	ldr	r0, [sp, #68]	; 0x44
   52554:	ldr	r6, [fp, #16]
   52558:	cmp	r0, #1
   5255c:	sub	r0, fp, #176	; 0xb0
   52560:	blt	526f0 <GetDataSlab+0x1e594>
   52564:	ldr	ip, [fp, #12]
   52568:	orr	r0, r0, #4
   5256c:	sub	r2, fp, #136	; 0x88
   52570:	mov	r5, #0
   52574:	str	r0, [sp, #72]	; 0x48
   52578:	ldr	r0, [fp, #24]
   5257c:	orr	r8, r2, #4
   52580:	ldr	r2, [fp, #20]
   52584:	ldr	r4, [ip], #4
   52588:	sub	r0, r0, #1
   5258c:	add	r2, r2, #4
   52590:	str	r0, [sp, #52]	; 0x34
   52594:	sub	r0, fp, #96	; 0x60
   52598:	str	r2, [sp, #76]	; 0x4c
   5259c:	orr	r0, r0, #4
   525a0:	str	r0, [sp, #48]	; 0x30
   525a4:	b	525d8 <GetDataSlab+0x1e47c>
   525a8:	ldr	r0, [sp, #48]	; 0x30
   525ac:	ldr	r0, [r0, r2]
   525b0:	add	r9, r9, r0, lsl #3
   525b4:	add	r3, r0, r3
   525b8:	ldr	r5, [sp, #60]	; 0x3c
   525bc:	ldr	r0, [sp, #68]	; 0x44
   525c0:	str	r6, [sp, #64]	; 0x40
   525c4:	ldr	r6, [fp, #16]
   525c8:	ldr	r4, [sp, #56]	; 0x38
   525cc:	add	r5, r1, r5
   525d0:	cmp	r5, r0
   525d4:	bge	526f0 <GetDataSlab+0x1e594>
   525d8:	add	r2, r4, r3
   525dc:	add	r3, r9, r4, lsl #3
   525e0:	cmp	r1, #1
   525e4:	str	r5, [sp, #60]	; 0x3c
   525e8:	blt	52634 <GetDataSlab+0x1e4d8>
   525ec:	ldr	r0, [sp, #88]	; 0x58
   525f0:	mov	r4, #0
   525f4:	add	r5, r0, r5
   525f8:	ldr	r0, [fp, #20]
   525fc:	ldrb	r1, [r3]
   52600:	strb	r1, [r5, r4]
   52604:	add	r4, r4, #1
   52608:	ldr	r7, [r6]
   5260c:	ldr	r1, [r0]
   52610:	add	r3, r3, r7, lsl #3
   52614:	add	r2, r7, r2
   52618:	cmp	r4, r1
   5261c:	blt	525fc <GetDataSlab+0x1e4a0>
   52620:	ldr	r0, [fp, #12]
   52624:	ldr	r4, [r0]
   52628:	ldr	r0, [fp, #8]
   5262c:	ldr	r6, [r0]
   52630:	b	52638 <GetDataSlab+0x1e4dc>
   52634:	ldr	r6, [sp, #64]	; 0x40
   52638:	mls	r5, r7, r1, r6
   5263c:	ldr	r0, [fp, #24]
   52640:	str	r4, [sp, #56]	; 0x38
   52644:	sub	r4, r5, r4
   52648:	add	r9, r3, r4, lsl #3
   5264c:	add	r3, r4, r2
   52650:	cmp	r0, #2
   52654:	blt	525b8 <GetDataSlab+0x1e45c>
   52658:	ldr	sl, [sp, #52]	; 0x34
   5265c:	mov	r2, #0
   52660:	b	5268c <GetDataSlab+0x1e530>
   52664:	sub	r0, fp, #176	; 0xb0
   52668:	ldr	r5, [ip, r2]
   5266c:	sub	r4, r4, lr
   52670:	ldr	r0, [r0, r2]
   52674:	mla	r0, r5, r0, r4
   52678:	add	r3, r0, r3
   5267c:	add	r9, r9, r0, lsl #3
   52680:	subs	sl, sl, #1
   52684:	add	r2, r2, #4
   52688:	beq	525b8 <GetDataSlab+0x1e45c>
   5268c:	ldr	r4, [r8, r2]
   52690:	ldr	r0, [sp, #76]	; 0x4c
   52694:	add	r4, r4, #1
   52698:	str	r4, [r8, r2]
   5269c:	ldr	r0, [r0, r2]
   526a0:	sdiv	r5, r4, r0
   526a4:	mls	r0, r5, r0, r4
   526a8:	cmp	r0, #0
   526ac:	bne	525a8 <GetDataSlab+0x1e44c>
   526b0:	mov	r0, #0
   526b4:	str	r0, [r8, r2]
   526b8:	ldr	r0, [sp, #72]	; 0x48
   526bc:	ldr	r4, [r0, r2]
   526c0:	sdiv	r0, r3, r4
   526c4:	mls	lr, r0, r4, r3
   526c8:	cmp	lr, #0
   526cc:	bne	52664 <GetDataSlab+0x1e508>
   526d0:	ldr	r4, [ip, r2]
   526d4:	cmp	r4, #0
   526d8:	beq	52680 <GetDataSlab+0x1e524>
   526dc:	sub	r0, fp, #176	; 0xb0
   526e0:	ldr	r0, [r0, r2]
   526e4:	mla	r3, r0, r4, r3
   526e8:	mul	r0, r0, r4
   526ec:	b	5267c <GetDataSlab+0x1e520>
   526f0:	ldr	r7, [sp, #84]	; 0x54
   526f4:	mov	r2, #0
   526f8:	cmp	r7, #13
   526fc:	bne	5b6a0 <GetDataSlab+0x27544>
   52700:	ldr	r0, [fp, #16]
   52704:	mov	r7, #0
   52708:	sub	r9, fp, #176	; 0xb0
   5270c:	sub	r8, fp, #96	; 0x60
   52710:	ldr	r5, [r0]
   52714:	sub	r0, r5, #1
   52718:	str	r0, [fp, #-96]	; 0xffffffa0
   5271c:	ldr	r0, [fp, #8]
   52720:	ldr	r0, [r0]
   52724:	str	r0, [sp, #72]	; 0x48
   52728:	str	r0, [fp, #-176]	; 0xffffff50
   5272c:	ldr	r0, [fp, #20]
   52730:	ldr	r1, [r0]
   52734:	ldr	r0, [fp, #24]
   52738:	cmp	r0, #2
   5273c:	mov	r0, r1
   52740:	str	r1, [sp, #76]	; 0x4c
   52744:	blt	528b8 <GetDataSlab+0x1e75c>
   52748:	ldr	r0, [fp, #8]
   5274c:	ldr	r4, [sp, #72]	; 0x48
   52750:	mov	r3, #0
   52754:	mvn	ip, #15
   52758:	mov	r7, #0
   5275c:	str	r1, [sp, #76]	; 0x4c
   52760:	str	r3, [sp, #84]	; 0x54
   52764:	mov	r3, r1
   52768:	mov	r2, r0
   5276c:	sub	r0, r0, #4
   52770:	mov	r6, r4
   52774:	sub	sl, r2, #12
   52778:	mov	r2, #1
   5277c:	b	527d0 <GetDataSlab+0x1e674>
   52780:	sub	r8, fp, #96	; 0x60
   52784:	ldr	r3, [fp, #12]
   52788:	sub	r9, fp, #176	; 0xb0
   5278c:	str	lr, [r8, r2, lsl #2]
   52790:	ldr	r6, [sp, #68]	; 0x44
   52794:	add	sl, sl, #4
   52798:	str	r4, [r9, r2, lsl #2]
   5279c:	ldr	r3, [r3, r2, lsl #2]
   527a0:	mla	r7, r3, r6, r7
   527a4:	ldr	r3, [fp, #20]
   527a8:	ldr	r6, [sp, #76]	; 0x4c
   527ac:	ldr	r3, [r3, r2, lsl #2]
   527b0:	add	r2, r2, #1
   527b4:	mul	r6, r3, r6
   527b8:	ldr	r3, [fp, #24]
   527bc:	str	r6, [sp, #76]	; 0x4c
   527c0:	mov	r6, r4
   527c4:	ldr	r4, [sp, #64]	; 0x40
   527c8:	cmp	r2, r3
   527cc:	beq	528b8 <GetDataSlab+0x1e75c>
   527d0:	ldr	r3, [fp, #16]
   527d4:	str	r6, [sp, #68]	; 0x44
   527d8:	ldr	r3, [r3, r2, lsl #2]
   527dc:	str	r4, [r9, r2, lsl #2]
   527e0:	ldr	r9, [sp, #84]	; 0x54
   527e4:	sub	lr, r3, #1
   527e8:	ldr	r3, [fp, #8]
   527ec:	add	r9, r9, #1
   527f0:	str	lr, [r8, r2, lsl #2]
   527f4:	cmp	r9, #4
   527f8:	str	r9, [sp, #84]	; 0x54
   527fc:	ldr	r6, [r3, r2, lsl #2]
   52800:	str	r6, [sp, #64]	; 0x40
   52804:	bcs	52810 <GetDataSlab+0x1e6b4>
   52808:	mov	r3, r2
   5280c:	b	528a0 <GetDataSlab+0x1e744>
   52810:	vmov.i32	q9, #1	; 0x00000001
   52814:	vmov.i32	q10, #1	; 0x00000001
   52818:	vmov.32	d23[1], r6
   5281c:	vmov.i32	q8, #1	; 0x00000001
   52820:	bic	r3, r9, #3
   52824:	bic	r8, r2, #3
   52828:	mov	r6, sl
   5282c:	str	r3, [sp, #60]	; 0x3c
   52830:	sub	r3, r2, r3
   52834:	vmov.32	d18[0], r4
   52838:	vmov.32	d20[0], lr
   5283c:	vorr	d16, d18, d18
   52840:	vmov.i32	q9, #1	; 0x00000001
   52844:	vorr	d18, d20, d20
   52848:	vld1.32	{d20-d21}, [r6], ip
   5284c:	subs	r8, r8, #4
   52850:	vrev64.32	q12, q10
   52854:	vext.8	q12, q12, q12, #8
   52858:	vext.8	q11, q11, q12, #12
   5285c:	vmul.i32	q9, q9, q12
   52860:	vmul.i32	q8, q11, q8
   52864:	vorr	q11, q12, q12
   52868:	bne	52848 <GetDataSlab+0x1e6ec>
   5286c:	vext.8	q11, q9, q8, #8
   52870:	vext.8	q12, q8, q8, #8
   52874:	ldr	r6, [sp, #60]	; 0x3c
   52878:	vmul.i32	q0, q9, q11
   5287c:	vmul.i32	q1, q8, q12
   52880:	cmp	r9, r6
   52884:	vmul.i32	q8, q0, d0[1]
   52888:	vmul.i32	q9, q1, d2[1]
   5288c:	vmov.32	lr, d16[0]
   52890:	vmov.32	r4, d18[0]
   52894:	beq	52780 <GetDataSlab+0x1e624>
   52898:	vmov.32	r6, d20[0]
   5289c:	sub	r8, fp, #96	; 0x60
   528a0:	mul	r4, r6, r4
   528a4:	ldr	r6, [r0, r3, lsl #2]
   528a8:	subs	r3, r3, #1
   528ac:	mul	lr, lr, r6
   528b0:	bne	528a0 <GetDataSlab+0x1e744>
   528b4:	b	52784 <GetDataSlab+0x1e628>
   528b8:	ldr	r0, [sp, #80]	; 0x50
   528bc:	cmp	r5, #1
   528c0:	add	sl, r0, r7, lsl #3
   528c4:	bne	5aa4c <GetDataSlab+0x268f0>
   528c8:	ldr	r0, [sp, #76]	; 0x4c
   528cc:	ldr	r3, [fp, #20]
   528d0:	sub	r2, fp, #176	; 0xb0
   528d4:	cmp	r0, #1
   528d8:	blt	5aed4 <GetDataSlab+0x26d78>
   528dc:	orr	r2, r2, #4
   528e0:	ldr	lr, [fp, #12]
   528e4:	sub	r0, fp, #136	; 0x88
   528e8:	add	r4, r3, #4
   528ec:	str	r2, [sp, #84]	; 0x54
   528f0:	ldr	r2, [fp, #24]
   528f4:	orr	r0, r0, #4
   528f8:	sub	r2, r2, #1
   528fc:	str	r2, [sp, #68]	; 0x44
   52900:	orr	r2, r8, #4
   52904:	mov	r8, #0
   52908:	str	r2, [sp, #64]	; 0x40
   5290c:	ldr	r2, [lr], #4
   52910:	str	r2, [sp, #80]	; 0x50
   52914:	b	5293c <GetDataSlab+0x1e7e0>
   52918:	ldr	r3, [sp, #64]	; 0x40
   5291c:	ldr	r2, [r3, r2]
   52920:	add	sl, sl, r2, lsl #3
   52924:	add	r7, r2, r7
   52928:	ldr	r2, [sp, #76]	; 0x4c
   5292c:	add	r8, r1, r8
   52930:	cmp	r8, r2
   52934:	mov	r2, #0
   52938:	bge	5b6a0 <GetDataSlab+0x27544>
   5293c:	ldr	r5, [sp, #80]	; 0x50
   52940:	ldr	r2, [sp, #72]	; 0x48
   52944:	cmp	r1, #1
   52948:	sub	ip, fp, #176	; 0xb0
   5294c:	add	r9, sl, r5, lsl #3
   52950:	add	r3, r5, r7
   52954:	blt	5299c <GetDataSlab+0x1e840>
   52958:	ldr	r1, [sp, #88]	; 0x58
   5295c:	ldr	r5, [fp, #20]
   52960:	mov	r6, r4
   52964:	mov	r2, #0
   52968:	mov	r7, r9
   5296c:	add	r4, r1, r8
   52970:	ldrb	r1, [r7], #8
   52974:	strb	r1, [r4, r2]
   52978:	add	r2, r2, #1
   5297c:	ldr	r1, [r5]
   52980:	cmp	r2, r1
   52984:	blt	52970 <GetDataSlab+0x1e814>
   52988:	ldr	r2, [fp, #12]
   5298c:	mov	r4, r6
   52990:	ldr	r5, [r2]
   52994:	ldr	r2, [fp, #8]
   52998:	ldr	r2, [r2]
   5299c:	str	r2, [sp, #72]	; 0x48
   529a0:	sub	r2, r2, r5
   529a4:	str	r5, [sp, #80]	; 0x50
   529a8:	add	sl, r9, r2, lsl #3
   529ac:	add	r7, r3, r2
   529b0:	ldr	r2, [fp, #24]
   529b4:	cmp	r2, #2
   529b8:	blt	52928 <GetDataSlab+0x1e7cc>
   529bc:	ldr	r9, [sp, #68]	; 0x44
   529c0:	mov	r2, #0
   529c4:	b	529f0 <GetDataSlab+0x1e894>
   529c8:	ldr	r6, [ip, r2]
   529cc:	ldr	ip, [lr, r2]
   529d0:	sub	r3, r3, r5
   529d4:	mla	r3, ip, r6, r3
   529d8:	sub	ip, fp, #176	; 0xb0
   529dc:	add	r7, r3, r7
   529e0:	add	sl, sl, r3, lsl #3
   529e4:	subs	r9, r9, #1
   529e8:	add	r2, r2, #4
   529ec:	beq	52928 <GetDataSlab+0x1e7cc>
   529f0:	ldr	r3, [r0, r2]
   529f4:	add	r3, r3, #1
   529f8:	str	r3, [r0, r2]
   529fc:	ldr	r5, [r4, r2]
   52a00:	sdiv	r6, r3, r5
   52a04:	mls	r3, r6, r5, r3
   52a08:	cmp	r3, #0
   52a0c:	bne	52918 <GetDataSlab+0x1e7bc>
   52a10:	mov	r3, #0
   52a14:	str	r3, [r0, r2]
   52a18:	ldr	r3, [sp, #84]	; 0x54
   52a1c:	ldr	r3, [r3, r2]
   52a20:	sdiv	r5, r7, r3
   52a24:	mls	r5, r5, r3, r7
   52a28:	cmp	r5, #0
   52a2c:	bne	529c8 <GetDataSlab+0x1e86c>
   52a30:	ldr	r3, [lr, r2]
   52a34:	cmp	r3, #0
   52a38:	beq	529e4 <GetDataSlab+0x1e888>
   52a3c:	ldr	r6, [ip, r2]
   52a40:	mla	r7, r6, r3, r7
   52a44:	mul	r3, r6, r3
   52a48:	b	529e0 <GetDataSlab+0x1e884>
   52a4c:	ldr	r0, [sp, #76]	; 0x4c
   52a50:	sub	r2, fp, #96	; 0x60
   52a54:	cmp	r0, #1
   52a58:	ldr	r0, [fp, #12]
   52a5c:	blt	5b69c <GetDataSlab+0x27540>
   52a60:	ldr	r6, [sp, #56]	; 0x38
   52a64:	ldr	r1, [sp, #52]	; 0x34
   52a68:	add	r0, r0, #4
   52a6c:	str	r0, [sp, #84]	; 0x54
   52a70:	ldr	r0, [fp, #24]
   52a74:	mls	r1, r6, sl, r1
   52a78:	mov	lr, r6
   52a7c:	sub	r0, r0, #1
   52a80:	str	r0, [sp, #44]	; 0x2c
   52a84:	orr	r0, r2, #4
   52a88:	str	r1, [sp, #68]	; 0x44
   52a8c:	mul	r1, r6, sl
   52a90:	str	r0, [sp, #36]	; 0x24
   52a94:	and	r0, r6, #1
   52a98:	str	r0, [sp, #48]	; 0x30
   52a9c:	sub	r8, r6, r0
   52aa0:	lsl	r0, r6, #1
   52aa4:	mov	r6, #0
   52aa8:	str	r0, [sp, #64]	; 0x40
   52aac:	ldr	r0, [sp, #88]	; 0x58
   52ab0:	str	r1, [sp, #52]	; 0x34
   52ab4:	sub	r1, fp, #136	; 0x88
   52ab8:	orr	r4, r1, #4
   52abc:	ldr	r1, [fp, #20]
   52ac0:	add	r0, r0, #2
   52ac4:	str	r0, [sp, #80]	; 0x50
   52ac8:	add	r1, r1, #4
   52acc:	str	r1, [sp, #40]	; 0x28
   52ad0:	sub	r1, fp, #176	; 0xb0
   52ad4:	orr	r1, r1, #4
   52ad8:	str	r1, [sp, #60]	; 0x3c
   52adc:	b	52b1c <GetDataSlab+0x1e9c0>
   52ae0:	ldr	r0, [sp, #36]	; 0x24
   52ae4:	ldr	r0, [r0, r2]
   52ae8:	add	ip, ip, r0
   52aec:	add	r3, r0, r3
   52af0:	ldr	r0, [sp, #64]	; 0x40
   52af4:	ldr	r1, [sp, #80]	; 0x50
   52af8:	ldr	lr, [sp, #56]	; 0x38
   52afc:	ldr	r6, [sp, #72]	; 0x48
   52b00:	mov	r2, #0
   52b04:	add	r1, r1, r0
   52b08:	ldr	r0, [sp, #76]	; 0x4c
   52b0c:	add	r6, r6, lr
   52b10:	str	r1, [sp, #80]	; 0x50
   52b14:	cmp	r6, r0
   52b18:	bge	5b6a0 <GetDataSlab+0x27544>
   52b1c:	ldr	r0, [fp, #12]
   52b20:	cmp	lr, #1
   52b24:	ldr	r2, [r0]
   52b28:	add	r5, ip, r2
   52b2c:	blt	52b9c <GetDataSlab+0x1ea40>
   52b30:	mov	r7, #0
   52b34:	cmp	lr, #1
   52b38:	beq	52b68 <GetDataSlab+0x1ea0c>
   52b3c:	ldr	r0, [sp, #80]	; 0x50
   52b40:	mov	r7, #0
   52b44:	ldrb	r1, [r5]
   52b48:	add	r7, r7, #2
   52b4c:	cmp	r8, r7
   52b50:	strh	r1, [r0, #-2]
   52b54:	ldrb	r1, [r5, sl]!
   52b58:	add	r5, r5, sl
   52b5c:	strh	r1, [r0]
   52b60:	add	r0, r0, #4
   52b64:	bne	52b44 <GetDataSlab+0x1e9e8>
   52b68:	ldr	r0, [sp, #52]	; 0x34
   52b6c:	ldr	r1, [sp, #48]	; 0x30
   52b70:	ldr	lr, [sp, #60]	; 0x3c
   52b74:	add	r0, r0, r3
   52b78:	cmp	r1, #0
   52b7c:	beq	52b94 <GetDataSlab+0x1ea38>
   52b80:	ldr	r1, [sp, #88]	; 0x58
   52b84:	ldrb	r3, [r5], sl
   52b88:	add	r1, r1, r6, lsl #1
   52b8c:	add	r1, r1, r7, lsl #1
   52b90:	strh	r3, [r1]
   52b94:	add	r0, r0, r2
   52b98:	b	52ba4 <GetDataSlab+0x1ea48>
   52b9c:	ldr	lr, [sp, #60]	; 0x3c
   52ba0:	add	r0, r2, r3
   52ba4:	ldr	r1, [sp, #68]	; 0x44
   52ba8:	str	r6, [sp, #72]	; 0x48
   52bac:	sub	r1, r1, r2
   52bb0:	add	r3, r0, r1
   52bb4:	ldr	r0, [fp, #24]
   52bb8:	add	ip, r5, r1
   52bbc:	cmp	r0, #2
   52bc0:	blt	52af0 <GetDataSlab+0x1e994>
   52bc4:	ldr	r9, [sp, #44]	; 0x2c
   52bc8:	ldr	r6, [sp, #40]	; 0x28
   52bcc:	mov	r2, #0
   52bd0:	b	52c00 <GetDataSlab+0x1eaa4>
   52bd4:	ldr	r5, [sp, #84]	; 0x54
   52bd8:	sub	r1, fp, #176	; 0xb0
   52bdc:	sub	r0, r0, r7
   52be0:	ldr	r1, [r1, r2]
   52be4:	ldr	r5, [r5, r2]
   52be8:	mla	r0, r5, r1, r0
   52bec:	add	r3, r0, r3
   52bf0:	add	ip, ip, r0
   52bf4:	subs	r9, r9, #1
   52bf8:	add	r2, r2, #4
   52bfc:	beq	52af0 <GetDataSlab+0x1e994>
   52c00:	ldr	r0, [r4, r2]
   52c04:	add	r0, r0, #1
   52c08:	str	r0, [r4, r2]
   52c0c:	ldr	r1, [r6, r2]
   52c10:	sdiv	r5, r0, r1
   52c14:	mls	r0, r5, r1, r0
   52c18:	cmp	r0, #0
   52c1c:	bne	52ae0 <GetDataSlab+0x1e984>
   52c20:	mov	r0, #0
   52c24:	str	r0, [r4, r2]
   52c28:	ldr	r0, [lr, r2]
   52c2c:	sdiv	r1, r3, r0
   52c30:	mls	r7, r1, r0, r3
   52c34:	cmp	r7, #0
   52c38:	bne	52bd4 <GetDataSlab+0x1ea78>
   52c3c:	ldr	r0, [sp, #84]	; 0x54
   52c40:	ldr	r0, [r0, r2]
   52c44:	cmp	r0, #0
   52c48:	beq	52bf4 <GetDataSlab+0x1ea98>
   52c4c:	sub	r1, fp, #176	; 0xb0
   52c50:	ldr	r1, [r1, r2]
   52c54:	mla	r3, r1, r0, r3
   52c58:	mla	ip, r1, r0, ip
   52c5c:	subs	r9, r9, #1
   52c60:	add	r2, r2, #4
   52c64:	bne	52c00 <GetDataSlab+0x1eaa4>
   52c68:	b	52af0 <GetDataSlab+0x1e994>
   52c6c:	ldr	r0, [sp, #76]	; 0x4c
   52c70:	ldr	r2, [fp, #12]
   52c74:	ldr	r3, [fp, #20]
   52c78:	ldr	r6, [sp, #64]	; 0x40
   52c7c:	sub	r5, fp, #96	; 0x60
   52c80:	cmp	r0, #1
   52c84:	blt	5b69c <GetDataSlab+0x27540>
   52c88:	ldr	r0, [sp, #60]	; 0x3c
   52c8c:	mov	r8, r5
   52c90:	ldr	r5, [r2], #4
   52c94:	lsl	r9, r7, #1
   52c98:	lsl	sl, r7, #2
   52c9c:	str	r2, [sp, #92]	; 0x5c
   52ca0:	mls	r0, r6, r7, r0
   52ca4:	str	r5, [sp, #60]	; 0x3c
   52ca8:	sub	r0, r0, r5
   52cac:	str	r0, [sp, #56]	; 0x38
   52cb0:	sub	r0, fp, #136	; 0x88
   52cb4:	orr	r4, r0, #4
   52cb8:	add	r0, r3, #4
   52cbc:	mov	r3, r6
   52cc0:	str	r0, [sp, #84]	; 0x54
   52cc4:	orr	r0, ip, #4
   52cc8:	str	r0, [sp, #80]	; 0x50
   52ccc:	ldr	r0, [fp, #24]
   52cd0:	sub	r0, r0, #1
   52cd4:	str	r0, [sp, #40]	; 0x28
   52cd8:	orr	r0, r8, #4
   52cdc:	str	r0, [sp, #36]	; 0x24
   52ce0:	mla	r0, r6, r7, r5
   52ce4:	str	r0, [sp, #48]	; 0x30
   52ce8:	and	r0, r6, #1
   52cec:	sub	r8, r6, r0
   52cf0:	str	r0, [sp, #44]	; 0x2c
   52cf4:	lsl	r0, r6, #1
   52cf8:	str	r0, [sp, #52]	; 0x34
   52cfc:	ldr	r0, [sp, #88]	; 0x58
   52d00:	add	r0, r0, #2
   52d04:	str	r0, [sp, #72]	; 0x48
   52d08:	mov	r0, #0
   52d0c:	str	r0, [sp, #68]	; 0x44
   52d10:	ldr	ip, [sp, #60]	; 0x3c
   52d14:	cmp	r3, #1
   52d18:	add	r2, lr, ip, lsl #1
   52d1c:	bge	52d74 <GetDataSlab+0x1ec18>
   52d20:	b	52dd8 <GetDataSlab+0x1ec7c>
   52d24:	ldr	r0, [sp, #36]	; 0x24
   52d28:	ldr	r0, [r0, r2]
   52d2c:	add	lr, lr, r0, lsl #1
   52d30:	add	r1, r0, r1
   52d34:	ldr	r0, [sp, #52]	; 0x34
   52d38:	ldr	r2, [sp, #72]	; 0x48
   52d3c:	ldr	r3, [sp, #64]	; 0x40
   52d40:	add	r2, r2, r0
   52d44:	ldr	r0, [sp, #76]	; 0x4c
   52d48:	str	r2, [sp, #72]	; 0x48
   52d4c:	ldr	r2, [sp, #68]	; 0x44
   52d50:	add	r2, r2, r3
   52d54:	str	r2, [sp, #68]	; 0x44
   52d58:	cmp	r2, r0
   52d5c:	mov	r2, #0
   52d60:	bge	5b6a0 <GetDataSlab+0x27544>
   52d64:	ldr	ip, [sp, #60]	; 0x3c
   52d68:	cmp	r3, #1
   52d6c:	add	r2, lr, ip, lsl #1
   52d70:	blt	52dd8 <GetDataSlab+0x1ec7c>
   52d74:	mov	r3, #0
   52d78:	beq	52dac <GetDataSlab+0x1ec50>
   52d7c:	ldr	r5, [sp, #72]	; 0x48
   52d80:	mov	r3, #0
   52d84:	ldrh	r0, [r2]
   52d88:	add	r3, r3, #2
   52d8c:	cmp	r8, r3
   52d90:	strh	r0, [r5, #-2]
   52d94:	add	r0, r2, r9
   52d98:	add	r2, r2, sl
   52d9c:	ldrh	r0, [r0]
   52da0:	strh	r0, [r5]
   52da4:	add	r5, r5, #4
   52da8:	bne	52d84 <GetDataSlab+0x1ec28>
   52dac:	ldr	r0, [sp, #44]	; 0x2c
   52db0:	ldr	ip, [sp, #48]	; 0x30
   52db4:	cmp	r0, #0
   52db8:	beq	52dd8 <GetDataSlab+0x1ec7c>
   52dbc:	ldr	r0, [sp, #88]	; 0x58
   52dc0:	ldr	r7, [sp, #68]	; 0x44
   52dc4:	ldrh	r6, [r2], r9
   52dc8:	ldr	ip, [sp, #48]	; 0x30
   52dcc:	add	r0, r0, r7, lsl #1
   52dd0:	add	r0, r0, r3, lsl #1
   52dd4:	strh	r6, [r0]
   52dd8:	ldr	r3, [sp, #56]	; 0x38
   52ddc:	add	r0, ip, r1
   52de0:	add	r1, r0, r3
   52de4:	ldr	r0, [fp, #24]
   52de8:	add	lr, r2, r3, lsl #1
   52dec:	cmp	r0, #2
   52df0:	blt	52d34 <GetDataSlab+0x1ebd8>
   52df4:	ldr	r3, [sp, #40]	; 0x28
   52df8:	mov	r2, #0
   52dfc:	sub	ip, fp, #176	; 0xb0
   52e00:	b	52e2c <GetDataSlab+0x1ecd0>
   52e04:	ldr	r7, [sp, #92]	; 0x5c
   52e08:	ldr	r5, [ip, r2]
   52e0c:	sub	r0, r0, r6
   52e10:	ldr	r7, [r7, r2]
   52e14:	mla	r0, r7, r5, r0
   52e18:	add	r1, r0, r1
   52e1c:	add	lr, lr, r0, lsl #1
   52e20:	subs	r3, r3, #1
   52e24:	add	r2, r2, #4
   52e28:	beq	52d34 <GetDataSlab+0x1ebd8>
   52e2c:	ldr	r0, [r4, r2]
   52e30:	ldr	r5, [sp, #84]	; 0x54
   52e34:	add	r0, r0, #1
   52e38:	str	r0, [r4, r2]
   52e3c:	ldr	r6, [r5, r2]
   52e40:	sdiv	r5, r0, r6
   52e44:	mls	r0, r5, r6, r0
   52e48:	cmp	r0, #0
   52e4c:	bne	52d24 <GetDataSlab+0x1ebc8>
   52e50:	mov	r0, #0
   52e54:	str	r0, [r4, r2]
   52e58:	ldr	r0, [sp, #80]	; 0x50
   52e5c:	ldr	r0, [r0, r2]
   52e60:	sdiv	r6, r1, r0
   52e64:	mls	r6, r6, r0, r1
   52e68:	cmp	r6, #0
   52e6c:	bne	52e04 <GetDataSlab+0x1eca8>
   52e70:	ldr	r0, [sp, #92]	; 0x5c
   52e74:	ldr	r0, [r0, r2]
   52e78:	cmp	r0, #0
   52e7c:	beq	52e20 <GetDataSlab+0x1ecc4>
   52e80:	ldr	r7, [ip, r2]
   52e84:	mla	r1, r7, r0, r1
   52e88:	mul	r0, r7, r0
   52e8c:	b	52e1c <GetDataSlab+0x1ecc0>
   52e90:	ldr	r0, [sp, #76]	; 0x4c
   52e94:	ldr	r2, [fp, #12]
   52e98:	ldr	r3, [fp, #20]
   52e9c:	ldr	r6, [sp, #64]	; 0x40
   52ea0:	sub	r5, fp, #96	; 0x60
   52ea4:	cmp	r0, #1
   52ea8:	blt	5b69c <GetDataSlab+0x27540>
   52eac:	ldr	r0, [sp, #60]	; 0x3c
   52eb0:	mov	r8, r5
   52eb4:	ldr	r5, [r2], #4
   52eb8:	lsl	r9, r7, #1
   52ebc:	lsl	sl, r7, #2
   52ec0:	str	r2, [sp, #92]	; 0x5c
   52ec4:	mls	r0, r6, r7, r0
   52ec8:	str	r5, [sp, #60]	; 0x3c
   52ecc:	sub	r0, r0, r5
   52ed0:	str	r0, [sp, #56]	; 0x38
   52ed4:	sub	r0, fp, #136	; 0x88
   52ed8:	orr	r4, r0, #4
   52edc:	add	r0, r3, #4
   52ee0:	mov	r3, r6
   52ee4:	str	r0, [sp, #84]	; 0x54
   52ee8:	orr	r0, ip, #4
   52eec:	str	r0, [sp, #80]	; 0x50
   52ef0:	ldr	r0, [fp, #24]
   52ef4:	sub	r0, r0, #1
   52ef8:	str	r0, [sp, #40]	; 0x28
   52efc:	orr	r0, r8, #4
   52f00:	str	r0, [sp, #36]	; 0x24
   52f04:	mla	r0, r6, r7, r5
   52f08:	str	r0, [sp, #48]	; 0x30
   52f0c:	and	r0, r6, #1
   52f10:	sub	r8, r6, r0
   52f14:	str	r0, [sp, #44]	; 0x2c
   52f18:	lsl	r0, r6, #1
   52f1c:	str	r0, [sp, #52]	; 0x34
   52f20:	ldr	r0, [sp, #88]	; 0x58
   52f24:	add	r0, r0, #2
   52f28:	str	r0, [sp, #72]	; 0x48
   52f2c:	mov	r0, #0
   52f30:	str	r0, [sp, #68]	; 0x44
   52f34:	ldr	ip, [sp, #60]	; 0x3c
   52f38:	cmp	r3, #1
   52f3c:	add	r2, lr, ip, lsl #1
   52f40:	bge	52f98 <GetDataSlab+0x1ee3c>
   52f44:	b	52ffc <GetDataSlab+0x1eea0>
   52f48:	ldr	r0, [sp, #36]	; 0x24
   52f4c:	ldr	r0, [r0, r2]
   52f50:	add	lr, lr, r0, lsl #1
   52f54:	add	r1, r0, r1
   52f58:	ldr	r0, [sp, #52]	; 0x34
   52f5c:	ldr	r2, [sp, #72]	; 0x48
   52f60:	ldr	r3, [sp, #64]	; 0x40
   52f64:	add	r2, r2, r0
   52f68:	ldr	r0, [sp, #76]	; 0x4c
   52f6c:	str	r2, [sp, #72]	; 0x48
   52f70:	ldr	r2, [sp, #68]	; 0x44
   52f74:	add	r2, r2, r3
   52f78:	str	r2, [sp, #68]	; 0x44
   52f7c:	cmp	r2, r0
   52f80:	mov	r2, #0
   52f84:	bge	5b6a0 <GetDataSlab+0x27544>
   52f88:	ldr	ip, [sp, #60]	; 0x3c
   52f8c:	cmp	r3, #1
   52f90:	add	r2, lr, ip, lsl #1
   52f94:	blt	52ffc <GetDataSlab+0x1eea0>
   52f98:	mov	r3, #0
   52f9c:	beq	52fd0 <GetDataSlab+0x1ee74>
   52fa0:	ldr	r5, [sp, #72]	; 0x48
   52fa4:	mov	r3, #0
   52fa8:	ldrh	r0, [r2]
   52fac:	add	r3, r3, #2
   52fb0:	cmp	r8, r3
   52fb4:	strh	r0, [r5, #-2]
   52fb8:	add	r0, r2, r9
   52fbc:	add	r2, r2, sl
   52fc0:	ldrh	r0, [r0]
   52fc4:	strh	r0, [r5]
   52fc8:	add	r5, r5, #4
   52fcc:	bne	52fa8 <GetDataSlab+0x1ee4c>
   52fd0:	ldr	r0, [sp, #44]	; 0x2c
   52fd4:	ldr	ip, [sp, #48]	; 0x30
   52fd8:	cmp	r0, #0
   52fdc:	beq	52ffc <GetDataSlab+0x1eea0>
   52fe0:	ldr	r0, [sp, #88]	; 0x58
   52fe4:	ldr	r7, [sp, #68]	; 0x44
   52fe8:	ldrh	r6, [r2], r9
   52fec:	ldr	ip, [sp, #48]	; 0x30
   52ff0:	add	r0, r0, r7, lsl #1
   52ff4:	add	r0, r0, r3, lsl #1
   52ff8:	strh	r6, [r0]
   52ffc:	ldr	r3, [sp, #56]	; 0x38
   53000:	add	r0, ip, r1
   53004:	add	r1, r0, r3
   53008:	ldr	r0, [fp, #24]
   5300c:	add	lr, r2, r3, lsl #1
   53010:	cmp	r0, #2
   53014:	blt	52f58 <GetDataSlab+0x1edfc>
   53018:	ldr	r3, [sp, #40]	; 0x28
   5301c:	mov	r2, #0
   53020:	sub	ip, fp, #176	; 0xb0
   53024:	b	53050 <GetDataSlab+0x1eef4>
   53028:	ldr	r7, [sp, #92]	; 0x5c
   5302c:	ldr	r5, [ip, r2]
   53030:	sub	r0, r0, r6
   53034:	ldr	r7, [r7, r2]
   53038:	mla	r0, r7, r5, r0
   5303c:	add	r1, r0, r1
   53040:	add	lr, lr, r0, lsl #1
   53044:	subs	r3, r3, #1
   53048:	add	r2, r2, #4
   5304c:	beq	52f58 <GetDataSlab+0x1edfc>
   53050:	ldr	r0, [r4, r2]
   53054:	ldr	r5, [sp, #84]	; 0x54
   53058:	add	r0, r0, #1
   5305c:	str	r0, [r4, r2]
   53060:	ldr	r6, [r5, r2]
   53064:	sdiv	r5, r0, r6
   53068:	mls	r0, r5, r6, r0
   5306c:	cmp	r0, #0
   53070:	bne	52f48 <GetDataSlab+0x1edec>
   53074:	mov	r0, #0
   53078:	str	r0, [r4, r2]
   5307c:	ldr	r0, [sp, #80]	; 0x50
   53080:	ldr	r0, [r0, r2]
   53084:	sdiv	r6, r1, r0
   53088:	mls	r6, r6, r0, r1
   5308c:	cmp	r6, #0
   53090:	bne	53028 <GetDataSlab+0x1eecc>
   53094:	ldr	r0, [sp, #92]	; 0x5c
   53098:	ldr	r0, [r0, r2]
   5309c:	cmp	r0, #0
   530a0:	beq	53044 <GetDataSlab+0x1eee8>
   530a4:	ldr	r7, [ip, r2]
   530a8:	mla	r1, r7, r0, r1
   530ac:	mul	r0, r7, r0
   530b0:	b	53040 <GetDataSlab+0x1eee4>
   530b4:	ldr	r0, [sp, #76]	; 0x4c
   530b8:	ldr	r1, [sp, #72]	; 0x48
   530bc:	ldr	r2, [sp, #60]	; 0x3c
   530c0:	cmp	r0, #1
   530c4:	ldr	r0, [fp, #20]
   530c8:	blt	5b69c <GetDataSlab+0x27540>
   530cc:	mls	r1, r1, r5, r2
   530d0:	add	sl, r0, #4
   530d4:	mov	r0, r8
   530d8:	add	r0, r0, #2
   530dc:	str	r0, [sp, #80]	; 0x50
   530e0:	mov	r0, #0
   530e4:	str	r1, [sp, #64]	; 0x40
   530e8:	sub	r1, fp, #136	; 0x88
   530ec:	str	r0, [sp, #68]	; 0x44
   530f0:	orr	r6, r1, #4
   530f4:	orr	r1, ip, #4
   530f8:	lsl	ip, r5, #3
   530fc:	str	r1, [sp, #84]	; 0x54
   53100:	ldr	r1, [fp, #12]
   53104:	add	r8, r1, #4
   53108:	ldr	r1, [fp, #24]
   5310c:	sub	r1, r1, #1
   53110:	str	r1, [sp, #44]	; 0x2c
   53114:	sub	r1, fp, #96	; 0x60
   53118:	orr	r1, r1, #4
   5311c:	str	r1, [sp, #40]	; 0x28
   53120:	ldr	r1, [sp, #72]	; 0x48
   53124:	mul	r2, r1, r5
   53128:	str	r2, [sp, #52]	; 0x34
   5312c:	and	r2, r1, #1
   53130:	sub	lr, r1, r2
   53134:	str	r2, [sp, #48]	; 0x30
   53138:	lsl	r2, r1, #1
   5313c:	str	r2, [sp, #60]	; 0x3c
   53140:	b	53184 <GetDataSlab+0x1f028>
   53144:	ldr	r0, [sp, #40]	; 0x28
   53148:	ldr	r0, [r0, r2]
   5314c:	add	r4, r4, r0, lsl #2
   53150:	add	r3, r0, r3
   53154:	ldr	r0, [sp, #60]	; 0x3c
   53158:	ldr	r1, [sp, #80]	; 0x50
   5315c:	ldr	r2, [sp, #68]	; 0x44
   53160:	add	r1, r1, r0
   53164:	ldr	r0, [sp, #76]	; 0x4c
   53168:	str	r1, [sp, #80]	; 0x50
   5316c:	ldr	r1, [sp, #72]	; 0x48
   53170:	add	r2, r2, r1
   53174:	str	r2, [sp, #68]	; 0x44
   53178:	cmp	r2, r0
   5317c:	mov	r2, #0
   53180:	bge	5b6a0 <GetDataSlab+0x27544>
   53184:	ldr	r0, [fp, #12]
   53188:	cmp	r1, #1
   5318c:	ldr	r2, [r0]
   53190:	add	r5, r4, r2, lsl #2
   53194:	blt	53208 <GetDataSlab+0x1f0ac>
   53198:	ldr	r4, [sp, #56]	; 0x38
   5319c:	mov	r7, #0
   531a0:	cmp	r1, #1
   531a4:	beq	531d4 <GetDataSlab+0x1f078>
   531a8:	ldr	r0, [sp, #80]	; 0x50
   531ac:	mov	r7, #0
   531b0:	ldr	r1, [r5]
   531b4:	add	r7, r7, #2
   531b8:	cmp	lr, r7
   531bc:	strh	r1, [r0, #-2]
   531c0:	ldr	r1, [r5, r4, lsl #2]
   531c4:	add	r5, r5, ip
   531c8:	strh	r1, [r0]
   531cc:	add	r0, r0, #4
   531d0:	bne	531b0 <GetDataSlab+0x1f054>
   531d4:	ldr	r0, [sp, #52]	; 0x34
   531d8:	ldr	r1, [sp, #48]	; 0x30
   531dc:	add	r0, r0, r3
   531e0:	cmp	r1, #0
   531e4:	beq	53200 <GetDataSlab+0x1f0a4>
   531e8:	ldr	r1, [sp, #88]	; 0x58
   531ec:	ldr	r3, [sp, #68]	; 0x44
   531f0:	add	r1, r1, r3, lsl #1
   531f4:	ldr	r3, [r5], r4, lsl #2
   531f8:	add	r1, r1, r7, lsl #1
   531fc:	strh	r3, [r1]
   53200:	add	r0, r0, r2
   53204:	b	5320c <GetDataSlab+0x1f0b0>
   53208:	add	r0, r2, r3
   5320c:	ldr	r1, [sp, #64]	; 0x40
   53210:	sub	r1, r1, r2
   53214:	add	r3, r0, r1
   53218:	ldr	r0, [fp, #24]
   5321c:	add	r4, r5, r1, lsl #2
   53220:	cmp	r0, #2
   53224:	blt	53154 <GetDataSlab+0x1eff8>
   53228:	ldr	r5, [sp, #44]	; 0x2c
   5322c:	mov	r2, #0
   53230:	b	5325c <GetDataSlab+0x1f100>
   53234:	sub	r1, fp, #176	; 0xb0
   53238:	ldr	r7, [r8, r2]
   5323c:	sub	r0, r0, r9
   53240:	ldr	r1, [r1, r2]
   53244:	mla	r0, r7, r1, r0
   53248:	add	r3, r0, r3
   5324c:	add	r4, r4, r0, lsl #2
   53250:	subs	r5, r5, #1
   53254:	add	r2, r2, #4
   53258:	beq	53154 <GetDataSlab+0x1eff8>
   5325c:	ldr	r0, [r6, r2]
   53260:	add	r0, r0, #1
   53264:	str	r0, [r6, r2]
   53268:	ldr	r1, [sl, r2]
   5326c:	sdiv	r7, r0, r1
   53270:	mls	r0, r7, r1, r0
   53274:	cmp	r0, #0
   53278:	bne	53144 <GetDataSlab+0x1efe8>
   5327c:	mov	r0, #0
   53280:	str	r0, [r6, r2]
   53284:	ldr	r0, [sp, #84]	; 0x54
   53288:	ldr	r0, [r0, r2]
   5328c:	sdiv	r1, r3, r0
   53290:	mls	r9, r1, r0, r3
   53294:	cmp	r9, #0
   53298:	bne	53234 <GetDataSlab+0x1f0d8>
   5329c:	ldr	r0, [r8, r2]
   532a0:	cmp	r0, #0
   532a4:	beq	53250 <GetDataSlab+0x1f0f4>
   532a8:	sub	r1, fp, #176	; 0xb0
   532ac:	ldr	r1, [r1, r2]
   532b0:	mla	r3, r1, r0, r3
   532b4:	mul	r0, r1, r0
   532b8:	b	5324c <GetDataSlab+0x1f0f0>
   532bc:	ldr	r0, [sp, #76]	; 0x4c
   532c0:	ldr	r1, [sp, #72]	; 0x48
   532c4:	ldr	r2, [sp, #60]	; 0x3c
   532c8:	cmp	r0, #1
   532cc:	ldr	r0, [fp, #20]
   532d0:	blt	5b69c <GetDataSlab+0x27540>
   532d4:	mls	r1, r1, r5, r2
   532d8:	add	sl, r0, #4
   532dc:	mov	r0, r8
   532e0:	add	r0, r0, #2
   532e4:	str	r0, [sp, #80]	; 0x50
   532e8:	mov	r0, #0
   532ec:	str	r1, [sp, #64]	; 0x40
   532f0:	sub	r1, fp, #136	; 0x88
   532f4:	str	r0, [sp, #68]	; 0x44
   532f8:	orr	r6, r1, #4
   532fc:	orr	r1, ip, #4
   53300:	lsl	ip, r5, #3
   53304:	str	r1, [sp, #84]	; 0x54
   53308:	ldr	r1, [fp, #12]
   5330c:	add	r8, r1, #4
   53310:	ldr	r1, [fp, #24]
   53314:	sub	r1, r1, #1
   53318:	str	r1, [sp, #44]	; 0x2c
   5331c:	sub	r1, fp, #96	; 0x60
   53320:	orr	r1, r1, #4
   53324:	str	r1, [sp, #40]	; 0x28
   53328:	ldr	r1, [sp, #72]	; 0x48
   5332c:	mul	r2, r1, r5
   53330:	str	r2, [sp, #52]	; 0x34
   53334:	and	r2, r1, #1
   53338:	sub	lr, r1, r2
   5333c:	str	r2, [sp, #48]	; 0x30
   53340:	lsl	r2, r1, #1
   53344:	str	r2, [sp, #60]	; 0x3c
   53348:	b	5338c <GetDataSlab+0x1f230>
   5334c:	ldr	r0, [sp, #40]	; 0x28
   53350:	ldr	r0, [r0, r2]
   53354:	add	r4, r4, r0, lsl #2
   53358:	add	r3, r0, r3
   5335c:	ldr	r0, [sp, #60]	; 0x3c
   53360:	ldr	r1, [sp, #80]	; 0x50
   53364:	ldr	r2, [sp, #68]	; 0x44
   53368:	add	r1, r1, r0
   5336c:	ldr	r0, [sp, #76]	; 0x4c
   53370:	str	r1, [sp, #80]	; 0x50
   53374:	ldr	r1, [sp, #72]	; 0x48
   53378:	add	r2, r2, r1
   5337c:	str	r2, [sp, #68]	; 0x44
   53380:	cmp	r2, r0
   53384:	mov	r2, #0
   53388:	bge	5b6a0 <GetDataSlab+0x27544>
   5338c:	ldr	r0, [fp, #12]
   53390:	cmp	r1, #1
   53394:	ldr	r2, [r0]
   53398:	add	r5, r4, r2, lsl #2
   5339c:	blt	53410 <GetDataSlab+0x1f2b4>
   533a0:	ldr	r4, [sp, #56]	; 0x38
   533a4:	mov	r7, #0
   533a8:	cmp	r1, #1
   533ac:	beq	533dc <GetDataSlab+0x1f280>
   533b0:	ldr	r0, [sp, #80]	; 0x50
   533b4:	mov	r7, #0
   533b8:	ldr	r1, [r5]
   533bc:	add	r7, r7, #2
   533c0:	cmp	lr, r7
   533c4:	strh	r1, [r0, #-2]
   533c8:	ldr	r1, [r5, r4, lsl #2]
   533cc:	add	r5, r5, ip
   533d0:	strh	r1, [r0]
   533d4:	add	r0, r0, #4
   533d8:	bne	533b8 <GetDataSlab+0x1f25c>
   533dc:	ldr	r0, [sp, #52]	; 0x34
   533e0:	ldr	r1, [sp, #48]	; 0x30
   533e4:	add	r0, r0, r3
   533e8:	cmp	r1, #0
   533ec:	beq	53408 <GetDataSlab+0x1f2ac>
   533f0:	ldr	r1, [sp, #88]	; 0x58
   533f4:	ldr	r3, [sp, #68]	; 0x44
   533f8:	add	r1, r1, r3, lsl #1
   533fc:	ldr	r3, [r5], r4, lsl #2
   53400:	add	r1, r1, r7, lsl #1
   53404:	strh	r3, [r1]
   53408:	add	r0, r0, r2
   5340c:	b	53414 <GetDataSlab+0x1f2b8>
   53410:	add	r0, r2, r3
   53414:	ldr	r1, [sp, #64]	; 0x40
   53418:	sub	r1, r1, r2
   5341c:	add	r3, r0, r1
   53420:	ldr	r0, [fp, #24]
   53424:	add	r4, r5, r1, lsl #2
   53428:	cmp	r0, #2
   5342c:	blt	5335c <GetDataSlab+0x1f200>
   53430:	ldr	r5, [sp, #44]	; 0x2c
   53434:	mov	r2, #0
   53438:	b	53464 <GetDataSlab+0x1f308>
   5343c:	sub	r1, fp, #176	; 0xb0
   53440:	ldr	r7, [r8, r2]
   53444:	sub	r0, r0, r9
   53448:	ldr	r1, [r1, r2]
   5344c:	mla	r0, r7, r1, r0
   53450:	add	r3, r0, r3
   53454:	add	r4, r4, r0, lsl #2
   53458:	subs	r5, r5, #1
   5345c:	add	r2, r2, #4
   53460:	beq	5335c <GetDataSlab+0x1f200>
   53464:	ldr	r0, [r6, r2]
   53468:	add	r0, r0, #1
   5346c:	str	r0, [r6, r2]
   53470:	ldr	r1, [sl, r2]
   53474:	sdiv	r7, r0, r1
   53478:	mls	r0, r7, r1, r0
   5347c:	cmp	r0, #0
   53480:	bne	5334c <GetDataSlab+0x1f1f0>
   53484:	mov	r0, #0
   53488:	str	r0, [r6, r2]
   5348c:	ldr	r0, [sp, #84]	; 0x54
   53490:	ldr	r0, [r0, r2]
   53494:	sdiv	r1, r3, r0
   53498:	mls	r9, r1, r0, r3
   5349c:	cmp	r9, #0
   534a0:	bne	5343c <GetDataSlab+0x1f2e0>
   534a4:	ldr	r0, [r8, r2]
   534a8:	cmp	r0, #0
   534ac:	beq	53458 <GetDataSlab+0x1f2fc>
   534b0:	sub	r1, fp, #176	; 0xb0
   534b4:	ldr	r1, [r1, r2]
   534b8:	mla	r3, r1, r0, r3
   534bc:	mul	r0, r1, r0
   534c0:	b	53454 <GetDataSlab+0x1f2f8>
   534c4:	ldr	r0, [sp, #76]	; 0x4c
   534c8:	cmp	r0, #1
   534cc:	ldr	r0, [sp, #60]	; 0x3c
   534d0:	blt	5b69c <GetDataSlab+0x27540>
   534d4:	ldr	r2, [sp, #92]	; 0x5c
   534d8:	ldr	r5, [sp, #40]	; 0x28
   534dc:	ldr	r3, [sp, #64]	; 0x40
   534e0:	ldr	r6, [r2], #4
   534e4:	mls	r0, r3, r5, r0
   534e8:	lsl	sl, r5, #3
   534ec:	str	r2, [sp, #92]	; 0x5c
   534f0:	sub	r0, r0, r6
   534f4:	str	r6, [sp, #60]	; 0x3c
   534f8:	str	r0, [sp, #56]	; 0x38
   534fc:	sub	r0, fp, #136	; 0x88
   53500:	orr	r4, r0, #4
   53504:	ldr	r0, [fp, #20]
   53508:	add	r0, r0, #4
   5350c:	str	r0, [sp, #84]	; 0x54
   53510:	orr	r0, ip, #4
   53514:	lsl	ip, r5, #2
   53518:	str	r0, [sp, #80]	; 0x50
   5351c:	ldr	r0, [fp, #24]
   53520:	sub	r0, r0, #1
   53524:	str	r0, [sp, #36]	; 0x24
   53528:	sub	r0, fp, #96	; 0x60
   5352c:	orr	r0, r0, #4
   53530:	str	r0, [sp, #32]
   53534:	mla	r0, r3, r5, r6
   53538:	str	r0, [sp, #48]	; 0x30
   5353c:	and	r0, r3, #1
   53540:	sub	r9, r3, r0
   53544:	str	r0, [sp, #44]	; 0x2c
   53548:	lsl	r0, r3, #1
   5354c:	str	r0, [sp, #52]	; 0x34
   53550:	ldr	r0, [sp, #88]	; 0x58
   53554:	add	r0, r0, #2
   53558:	str	r0, [sp, #72]	; 0x48
   5355c:	mov	r0, #0
   53560:	str	r0, [sp, #68]	; 0x44
   53564:	ldr	r8, [sp, #60]	; 0x3c
   53568:	cmp	r3, #1
   5356c:	add	r2, lr, r8, lsl #2
   53570:	bge	535c8 <GetDataSlab+0x1f46c>
   53574:	b	5364c <GetDataSlab+0x1f4f0>
   53578:	ldr	r0, [sp, #32]
   5357c:	ldr	r0, [r0, r2]
   53580:	add	lr, lr, r0, lsl #2
   53584:	add	r1, r0, r1
   53588:	ldr	r0, [sp, #52]	; 0x34
   5358c:	ldr	r2, [sp, #72]	; 0x48
   53590:	ldr	r3, [sp, #64]	; 0x40
   53594:	add	r2, r2, r0
   53598:	ldr	r0, [sp, #76]	; 0x4c
   5359c:	str	r2, [sp, #72]	; 0x48
   535a0:	ldr	r2, [sp, #68]	; 0x44
   535a4:	add	r2, r2, r3
   535a8:	str	r2, [sp, #68]	; 0x44
   535ac:	cmp	r2, r0
   535b0:	mov	r2, #0
   535b4:	bge	5b6a0 <GetDataSlab+0x27544>
   535b8:	ldr	r8, [sp, #60]	; 0x3c
   535bc:	cmp	r3, #1
   535c0:	add	r2, lr, r8, lsl #2
   535c4:	blt	5364c <GetDataSlab+0x1f4f0>
   535c8:	mov	r3, #0
   535cc:	beq	53610 <GetDataSlab+0x1f4b4>
   535d0:	ldr	r5, [sp, #72]	; 0x48
   535d4:	mov	r3, #0
   535d8:	vldr	s0, [r2]
   535dc:	add	r3, r3, #2
   535e0:	cmp	r9, r3
   535e4:	vcvt.s32.f32	s0, s0
   535e8:	vmov	r0, s0
   535ec:	strh	r0, [r5, #-2]
   535f0:	add	r0, r2, ip
   535f4:	add	r2, r2, sl
   535f8:	vldr	s0, [r0]
   535fc:	vcvt.s32.f32	s0, s0
   53600:	vmov	r0, s0
   53604:	strh	r0, [r5]
   53608:	add	r5, r5, #4
   5360c:	bne	535d8 <GetDataSlab+0x1f47c>
   53610:	ldr	r0, [sp, #44]	; 0x2c
   53614:	ldr	r8, [sp, #48]	; 0x30
   53618:	cmp	r0, #0
   5361c:	beq	5364c <GetDataSlab+0x1f4f0>
   53620:	vldr	s0, [r2]
   53624:	ldr	r0, [sp, #88]	; 0x58
   53628:	ldr	r7, [sp, #68]	; 0x44
   5362c:	add	r0, r0, r7, lsl #1
   53630:	vcvt.s32.f32	s0, s0
   53634:	ldr	r8, [sp, #48]	; 0x30
   53638:	add	r0, r0, r3, lsl #1
   5363c:	vmov	r3, s0
   53640:	strh	r3, [r0]
   53644:	ldr	r0, [sp, #40]	; 0x28
   53648:	add	r2, r2, r0, lsl #2
   5364c:	ldr	r3, [sp, #56]	; 0x38
   53650:	add	r0, r8, r1
   53654:	add	r1, r0, r3
   53658:	ldr	r0, [fp, #24]
   5365c:	add	lr, r2, r3, lsl #2
   53660:	cmp	r0, #2
   53664:	blt	53588 <GetDataSlab+0x1f42c>
   53668:	ldr	r3, [sp, #36]	; 0x24
   5366c:	ldr	r8, [sp, #92]	; 0x5c
   53670:	mov	r2, #0
   53674:	b	536a0 <GetDataSlab+0x1f544>
   53678:	sub	r5, fp, #176	; 0xb0
   5367c:	ldr	r7, [r8, r2]
   53680:	sub	r0, r0, r6
   53684:	ldr	r5, [r5, r2]
   53688:	mla	r0, r7, r5, r0
   5368c:	add	r1, r0, r1
   53690:	add	lr, lr, r0, lsl #2
   53694:	subs	r3, r3, #1
   53698:	add	r2, r2, #4
   5369c:	beq	53588 <GetDataSlab+0x1f42c>
   536a0:	ldr	r0, [r4, r2]
   536a4:	ldr	r5, [sp, #84]	; 0x54
   536a8:	add	r0, r0, #1
   536ac:	str	r0, [r4, r2]
   536b0:	ldr	r5, [r5, r2]
   536b4:	sdiv	r6, r0, r5
   536b8:	mls	r0, r6, r5, r0
   536bc:	cmp	r0, #0
   536c0:	bne	53578 <GetDataSlab+0x1f41c>
   536c4:	mov	r0, #0
   536c8:	str	r0, [r4, r2]
   536cc:	ldr	r0, [sp, #80]	; 0x50
   536d0:	ldr	r0, [r0, r2]
   536d4:	sdiv	r5, r1, r0
   536d8:	mls	r6, r5, r0, r1
   536dc:	cmp	r6, #0
   536e0:	bne	53678 <GetDataSlab+0x1f51c>
   536e4:	ldr	r0, [r8, r2]
   536e8:	cmp	r0, #0
   536ec:	beq	53694 <GetDataSlab+0x1f538>
   536f0:	sub	r5, fp, #176	; 0xb0
   536f4:	ldr	r5, [r5, r2]
   536f8:	mla	r1, r5, r0, r1
   536fc:	mul	r0, r5, r0
   53700:	b	53690 <GetDataSlab+0x1f534>
   53704:	ldr	r0, [sp, #76]	; 0x4c
   53708:	ldr	r2, [sp, #88]	; 0x58
   5370c:	ldr	r3, [fp, #12]
   53710:	sub	r6, fp, #96	; 0x60
   53714:	cmp	r0, #1
   53718:	blt	5b69c <GetDataSlab+0x27540>
   5371c:	ldr	r5, [sp, #40]	; 0x28
   53720:	ldr	r7, [sp, #64]	; 0x40
   53724:	ldr	r0, [sp, #72]	; 0x48
   53728:	ldr	r4, [r3], #4
   5372c:	str	r3, [sp, #92]	; 0x5c
   53730:	mls	r0, r7, r5, r0
   53734:	mov	r3, r7
   53738:	lsl	lr, r5, #4
   5373c:	str	r4, [sp, #60]	; 0x3c
   53740:	sub	r0, r0, r4
   53744:	str	r0, [sp, #56]	; 0x38
   53748:	sub	r0, fp, #136	; 0x88
   5374c:	orr	r7, r0, #4
   53750:	ldr	r0, [fp, #20]
   53754:	add	r0, r0, #4
   53758:	str	r0, [sp, #84]	; 0x54
   5375c:	orr	r0, ip, #4
   53760:	lsl	ip, r5, #3
   53764:	str	r0, [sp, #80]	; 0x50
   53768:	ldr	r0, [fp, #24]
   5376c:	sub	r0, r0, #1
   53770:	str	r0, [sp, #36]	; 0x24
   53774:	orr	r0, r6, #4
   53778:	str	r0, [sp, #32]
   5377c:	mla	r0, r3, r5, r4
   53780:	str	r0, [sp, #48]	; 0x30
   53784:	and	r0, r3, #1
   53788:	sub	sl, r3, r0
   5378c:	str	r0, [sp, #44]	; 0x2c
   53790:	lsl	r0, r3, #1
   53794:	str	r0, [sp, #52]	; 0x34
   53798:	add	r0, r2, #2
   5379c:	str	r0, [sp, #72]	; 0x48
   537a0:	mov	r0, #0
   537a4:	str	r0, [sp, #68]	; 0x44
   537a8:	ldr	r8, [sp, #60]	; 0x3c
   537ac:	cmp	r3, #1
   537b0:	add	r2, r9, r8, lsl #3
   537b4:	bge	5380c <GetDataSlab+0x1f6b0>
   537b8:	b	53890 <GetDataSlab+0x1f734>
   537bc:	ldr	r0, [sp, #32]
   537c0:	ldr	r0, [r0, r2]
   537c4:	add	r9, r9, r0, lsl #3
   537c8:	add	r1, r0, r1
   537cc:	ldr	r0, [sp, #52]	; 0x34
   537d0:	ldr	r2, [sp, #72]	; 0x48
   537d4:	ldr	r3, [sp, #64]	; 0x40
   537d8:	add	r2, r2, r0
   537dc:	ldr	r0, [sp, #76]	; 0x4c
   537e0:	str	r2, [sp, #72]	; 0x48
   537e4:	ldr	r2, [sp, #68]	; 0x44
   537e8:	add	r2, r2, r3
   537ec:	str	r2, [sp, #68]	; 0x44
   537f0:	cmp	r2, r0
   537f4:	mov	r2, #0
   537f8:	bge	5b6a0 <GetDataSlab+0x27544>
   537fc:	ldr	r8, [sp, #60]	; 0x3c
   53800:	cmp	r3, #1
   53804:	add	r2, r9, r8, lsl #3
   53808:	blt	53890 <GetDataSlab+0x1f734>
   5380c:	mov	r3, #0
   53810:	beq	53854 <GetDataSlab+0x1f6f8>
   53814:	ldr	r4, [sp, #72]	; 0x48
   53818:	mov	r3, #0
   5381c:	vldr	d16, [r2]
   53820:	add	r3, r3, #2
   53824:	cmp	sl, r3
   53828:	vcvt.s32.f64	s0, d16
   5382c:	vmov	r0, s0
   53830:	strh	r0, [r4, #-2]
   53834:	add	r0, r2, ip
   53838:	add	r2, r2, lr
   5383c:	vldr	d16, [r0]
   53840:	vcvt.s32.f64	s0, d16
   53844:	vmov	r0, s0
   53848:	strh	r0, [r4]
   5384c:	add	r4, r4, #4
   53850:	bne	5381c <GetDataSlab+0x1f6c0>
   53854:	ldr	r0, [sp, #44]	; 0x2c
   53858:	ldr	r8, [sp, #48]	; 0x30
   5385c:	cmp	r0, #0
   53860:	beq	53890 <GetDataSlab+0x1f734>
   53864:	vldr	d16, [r2]
   53868:	ldr	r0, [sp, #88]	; 0x58
   5386c:	ldr	r4, [sp, #68]	; 0x44
   53870:	add	r0, r0, r4, lsl #1
   53874:	vcvt.s32.f64	s0, d16
   53878:	ldr	r8, [sp, #48]	; 0x30
   5387c:	add	r0, r0, r3, lsl #1
   53880:	vmov	r3, s0
   53884:	strh	r3, [r0]
   53888:	ldr	r0, [sp, #40]	; 0x28
   5388c:	add	r2, r2, r0, lsl #3
   53890:	ldr	r3, [sp, #56]	; 0x38
   53894:	add	r0, r8, r1
   53898:	add	r1, r0, r3
   5389c:	ldr	r0, [fp, #24]
   538a0:	add	r9, r2, r3, lsl #3
   538a4:	cmp	r0, #2
   538a8:	blt	537cc <GetDataSlab+0x1f670>
   538ac:	ldr	r3, [sp, #36]	; 0x24
   538b0:	ldr	r8, [sp, #92]	; 0x5c
   538b4:	mov	r2, #0
   538b8:	b	538e4 <GetDataSlab+0x1f788>
   538bc:	sub	r4, fp, #176	; 0xb0
   538c0:	sub	r0, r5, r0
   538c4:	ldr	r6, [r4, r2]
   538c8:	ldr	r4, [r8, r2]
   538cc:	mla	r0, r4, r6, r0
   538d0:	add	r1, r0, r1
   538d4:	add	r9, r9, r0, lsl #3
   538d8:	subs	r3, r3, #1
   538dc:	add	r2, r2, #4
   538e0:	beq	537cc <GetDataSlab+0x1f670>
   538e4:	ldr	r0, [r7, r2]
   538e8:	ldr	r4, [sp, #84]	; 0x54
   538ec:	add	r0, r0, #1
   538f0:	str	r0, [r7, r2]
   538f4:	ldr	r5, [r4, r2]
   538f8:	sdiv	r6, r0, r5
   538fc:	mls	r0, r6, r5, r0
   53900:	cmp	r0, #0
   53904:	bne	537bc <GetDataSlab+0x1f660>
   53908:	mov	r0, #0
   5390c:	str	r0, [r7, r2]
   53910:	ldr	r0, [sp, #80]	; 0x50
   53914:	ldr	r5, [r0, r2]
   53918:	sdiv	r0, r1, r5
   5391c:	mls	r0, r0, r5, r1
   53920:	cmp	r0, #0
   53924:	bne	538bc <GetDataSlab+0x1f760>
   53928:	ldr	r0, [r8, r2]
   5392c:	cmp	r0, #0
   53930:	beq	538d8 <GetDataSlab+0x1f77c>
   53934:	sub	r4, fp, #176	; 0xb0
   53938:	ldr	r4, [r4, r2]
   5393c:	mla	r1, r4, r0, r1
   53940:	mul	r0, r4, r0
   53944:	b	538d4 <GetDataSlab+0x1f778>
   53948:	ldr	r0, [sp, #68]	; 0x44
   5394c:	ldr	r4, [fp, #20]
   53950:	ldr	r6, [sp, #56]	; 0x38
   53954:	cmp	r0, #1
   53958:	blt	53b60 <GetDataSlab+0x1fa04>
   5395c:	ldr	r2, [fp, #12]
   53960:	ldr	r0, [sp, #44]	; 0x2c
   53964:	mov	r5, r4
   53968:	add	r5, r5, #4
   5396c:	ldr	r4, [r2], #4
   53970:	mls	r0, r6, r7, r0
   53974:	str	r2, [sp, #72]	; 0x48
   53978:	mov	r2, #0
   5397c:	str	r2, [sp, #60]	; 0x3c
   53980:	sub	r0, r0, r4
   53984:	str	r4, [sp, #52]	; 0x34
   53988:	str	r0, [sp, #48]	; 0x30
   5398c:	sub	r0, fp, #136	; 0x88
   53990:	orr	r3, r0, #4
   53994:	orr	r0, ip, #4
   53998:	lsl	ip, r7, #3
   5399c:	str	r0, [sp, #76]	; 0x4c
   539a0:	ldr	r0, [fp, #24]
   539a4:	sub	r0, r0, #1
   539a8:	str	r0, [sp, #32]
   539ac:	sub	r0, fp, #96	; 0x60
   539b0:	orr	r0, r0, #4
   539b4:	str	r0, [sp, #28]
   539b8:	mla	r0, r6, r7, r4
   539bc:	mov	r4, r6
   539c0:	str	r0, [sp, #40]	; 0x28
   539c4:	and	r0, r6, #1
   539c8:	str	r0, [sp, #36]	; 0x24
   539cc:	sub	r9, r6, r0
   539d0:	lsl	r0, r6, #1
   539d4:	str	r0, [sp, #44]	; 0x2c
   539d8:	add	r0, r8, #2
   539dc:	str	r0, [sp, #64]	; 0x40
   539e0:	lsl	r0, r7, #4
   539e4:	ldr	r6, [sp, #52]	; 0x34
   539e8:	cmp	r4, #1
   539ec:	add	r2, lr, r6, lsl #3
   539f0:	bge	53a48 <GetDataSlab+0x1f8ec>
   539f4:	b	53aa8 <GetDataSlab+0x1f94c>
   539f8:	ldr	r4, [sp, #28]
   539fc:	ldr	r2, [r4, r2]
   53a00:	add	lr, lr, r2, lsl #3
   53a04:	add	r1, r2, r1
   53a08:	ldr	r2, [sp, #44]	; 0x2c
   53a0c:	ldr	r4, [sp, #64]	; 0x40
   53a10:	ldr	r6, [sp, #60]	; 0x3c
   53a14:	ldr	r8, [sp, #88]	; 0x58
   53a18:	add	r4, r4, r2
   53a1c:	ldr	r2, [sp, #68]	; 0x44
   53a20:	str	r4, [sp, #64]	; 0x40
   53a24:	ldr	r4, [sp, #56]	; 0x38
   53a28:	add	r6, r6, r4
   53a2c:	cmp	r6, r2
   53a30:	str	r6, [sp, #60]	; 0x3c
   53a34:	bge	53b60 <GetDataSlab+0x1fa04>
   53a38:	ldr	r6, [sp, #52]	; 0x34
   53a3c:	cmp	r4, #1
   53a40:	add	r2, lr, r6, lsl #3
   53a44:	blt	53aa8 <GetDataSlab+0x1f94c>
   53a48:	mov	r7, #0
   53a4c:	beq	53a80 <GetDataSlab+0x1f924>
   53a50:	ldr	r6, [sp, #64]	; 0x40
   53a54:	mov	r7, #0
   53a58:	ldrh	r4, [r2]
   53a5c:	add	r7, r7, #2
   53a60:	cmp	r9, r7
   53a64:	strh	r4, [r6, #-2]
   53a68:	add	r4, r2, ip
   53a6c:	add	r2, r2, r0
   53a70:	ldrh	r4, [r4]
   53a74:	strh	r4, [r6]
   53a78:	add	r6, r6, #4
   53a7c:	bne	53a58 <GetDataSlab+0x1f8fc>
   53a80:	ldr	r6, [sp, #36]	; 0x24
   53a84:	cmp	r6, #0
   53a88:	ldr	r6, [sp, #40]	; 0x28
   53a8c:	beq	53aa8 <GetDataSlab+0x1f94c>
   53a90:	ldr	r6, [sp, #60]	; 0x3c
   53a94:	ldrh	r4, [r2], ip
   53a98:	add	r6, r8, r6, lsl #1
   53a9c:	add	r7, r6, r7, lsl #1
   53aa0:	ldr	r6, [sp, #40]	; 0x28
   53aa4:	strh	r4, [r7]
   53aa8:	ldr	r4, [sp, #48]	; 0x30
   53aac:	add	r1, r6, r1
   53ab0:	add	lr, r2, r4, lsl #3
   53ab4:	ldr	r2, [fp, #24]
   53ab8:	add	r1, r1, r4
   53abc:	cmp	r2, #2
   53ac0:	blt	53a08 <GetDataSlab+0x1f8ac>
   53ac4:	ldr	r8, [sp, #32]
   53ac8:	mov	r2, #0
   53acc:	b	53afc <GetDataSlab+0x1f9a0>
   53ad0:	ldr	r7, [sp, #72]	; 0x48
   53ad4:	sub	r4, fp, #176	; 0xb0
   53ad8:	sub	r6, r6, sl
   53adc:	ldr	r4, [r4, r2]
   53ae0:	ldr	r7, [r7, r2]
   53ae4:	mla	r4, r7, r4, r6
   53ae8:	add	r1, r4, r1
   53aec:	add	lr, lr, r4, lsl #3
   53af0:	subs	r8, r8, #1
   53af4:	add	r2, r2, #4
   53af8:	beq	53a08 <GetDataSlab+0x1f8ac>
   53afc:	ldr	r4, [r3, r2]
   53b00:	add	r4, r4, #1
   53b04:	str	r4, [r3, r2]
   53b08:	ldr	r6, [r5, r2]
   53b0c:	sdiv	r7, r4, r6
   53b10:	mls	r4, r7, r6, r4
   53b14:	cmp	r4, #0
   53b18:	bne	539f8 <GetDataSlab+0x1f89c>
   53b1c:	mov	r4, #0
   53b20:	str	r4, [r3, r2]
   53b24:	ldr	r4, [sp, #76]	; 0x4c
   53b28:	ldr	r6, [r4, r2]
   53b2c:	sdiv	r4, r1, r6
   53b30:	mls	sl, r4, r6, r1
   53b34:	cmp	sl, #0
   53b38:	bne	53ad0 <GetDataSlab+0x1f974>
   53b3c:	ldr	r4, [sp, #72]	; 0x48
   53b40:	ldr	r6, [r4, r2]
   53b44:	cmp	r6, #0
   53b48:	beq	53af0 <GetDataSlab+0x1f994>
   53b4c:	sub	r4, fp, #176	; 0xb0
   53b50:	ldr	r4, [r4, r2]
   53b54:	mla	r1, r4, r6, r1
   53b58:	mul	r4, r4, r6
   53b5c:	b	53aec <GetDataSlab+0x1f990>
   53b60:	mov	r2, #0
   53b64:	ldr	r0, [sp, #84]	; 0x54
   53b68:	cmp	r0, #13
   53b6c:	bne	5b6a0 <GetDataSlab+0x27544>
   53b70:	ldr	r0, [fp, #16]
   53b74:	mov	r1, #0
   53b78:	sub	r5, fp, #176	; 0xb0
   53b7c:	sub	r6, fp, #96	; 0x60
   53b80:	ldr	r0, [r0]
   53b84:	str	r0, [sp, #64]	; 0x40
   53b88:	sub	r0, r0, #1
   53b8c:	str	r0, [fp, #-96]	; 0xffffffa0
   53b90:	ldr	r0, [fp, #8]
   53b94:	ldr	r0, [r0]
   53b98:	str	r0, [sp, #60]	; 0x3c
   53b9c:	str	r0, [fp, #-176]	; 0xffffff50
   53ba0:	ldr	r0, [fp, #20]
   53ba4:	ldr	r2, [r0]
   53ba8:	ldr	r0, [fp, #24]
   53bac:	cmp	r0, #2
   53bb0:	str	r2, [sp, #72]	; 0x48
   53bb4:	str	r2, [sp, #76]	; 0x4c
   53bb8:	blt	53d10 <GetDataSlab+0x1fbb4>
   53bbc:	ldr	r0, [fp, #8]
   53bc0:	ldr	r3, [sp, #60]	; 0x3c
   53bc4:	mov	r4, #1
   53bc8:	mov	r9, #0
   53bcc:	mvn	lr, #15
   53bd0:	mov	r1, #0
   53bd4:	sub	r7, r0, #4
   53bd8:	sub	ip, r0, #12
   53bdc:	ldr	r0, [sp, #72]	; 0x48
   53be0:	mov	sl, r3
   53be4:	str	r0, [sp, #76]	; 0x4c
   53be8:	b	53c38 <GetDataSlab+0x1fadc>
   53bec:	sub	r6, fp, #96	; 0x60
   53bf0:	sub	r5, fp, #176	; 0xb0
   53bf4:	ldr	r2, [sp, #76]	; 0x4c
   53bf8:	add	ip, ip, #4
   53bfc:	str	r0, [r6, r4, lsl #2]
   53c00:	ldr	r0, [fp, #12]
   53c04:	str	r3, [r5, r4, lsl #2]
   53c08:	ldr	r0, [r0, r4, lsl #2]
   53c0c:	mla	r1, r0, sl, r1
   53c10:	ldr	r0, [fp, #20]
   53c14:	mov	sl, r3
   53c18:	mov	r3, r8
   53c1c:	ldr	r0, [r0, r4, lsl #2]
   53c20:	add	r4, r4, #1
   53c24:	mul	r2, r0, r2
   53c28:	ldr	r0, [fp, #24]
   53c2c:	str	r2, [sp, #76]	; 0x4c
   53c30:	cmp	r4, r0
   53c34:	beq	53d10 <GetDataSlab+0x1fbb4>
   53c38:	ldr	r0, [fp, #16]
   53c3c:	add	r9, r9, #1
   53c40:	cmp	r9, #4
   53c44:	ldr	r0, [r0, r4, lsl #2]
   53c48:	str	r3, [r5, r4, lsl #2]
   53c4c:	sub	r0, r0, #1
   53c50:	str	r0, [r6, r4, lsl #2]
   53c54:	ldr	r6, [fp, #8]
   53c58:	ldr	r2, [r6, r4, lsl #2]
   53c5c:	bcs	53c70 <GetDataSlab+0x1fb14>
   53c60:	mov	r8, r2
   53c64:	mov	r6, r2
   53c68:	mov	r5, r4
   53c6c:	b	53cf8 <GetDataSlab+0x1fb9c>
   53c70:	vmov.i32	q9, #1	; 0x00000001
   53c74:	vmov.i32	q10, #1	; 0x00000001
   53c78:	vmov.32	d23[1], r2
   53c7c:	vmov.i32	q8, #1	; 0x00000001
   53c80:	bic	r6, r9, #3
   53c84:	bic	r8, r4, #3
   53c88:	sub	r5, r4, r6
   53c8c:	vmov.32	d18[0], r3
   53c90:	vmov.32	d20[0], r0
   53c94:	mov	r0, ip
   53c98:	vorr	d16, d18, d18
   53c9c:	vmov.i32	q9, #1	; 0x00000001
   53ca0:	vorr	d18, d20, d20
   53ca4:	vld1.32	{d20-d21}, [r0], lr
   53ca8:	subs	r8, r8, #4
   53cac:	vrev64.32	q12, q10
   53cb0:	vext.8	q12, q12, q12, #8
   53cb4:	vext.8	q11, q11, q12, #12
   53cb8:	vmul.i32	q9, q9, q12
   53cbc:	vmul.i32	q8, q11, q8
   53cc0:	vorr	q11, q12, q12
   53cc4:	bne	53ca4 <GetDataSlab+0x1fb48>
   53cc8:	vext.8	q11, q9, q8, #8
   53ccc:	vext.8	q12, q8, q8, #8
   53cd0:	mov	r8, r2
   53cd4:	cmp	r9, r6
   53cd8:	vmul.i32	q0, q9, q11
   53cdc:	vmul.i32	q1, q8, q12
   53ce0:	vmul.i32	q8, q0, d0[1]
   53ce4:	vmul.i32	q9, q1, d2[1]
   53ce8:	vmov.32	r0, d16[0]
   53cec:	vmov.32	r3, d18[0]
   53cf0:	beq	53bec <GetDataSlab+0x1fa90>
   53cf4:	vmov.32	r6, d20[0]
   53cf8:	mul	r3, r6, r3
   53cfc:	ldr	r6, [r7, r5, lsl #2]
   53d00:	subs	r5, r5, #1
   53d04:	mul	r0, r0, r6
   53d08:	bne	53cf8 <GetDataSlab+0x1fb9c>
   53d0c:	b	53bec <GetDataSlab+0x1fa90>
   53d10:	ldr	r0, [sp, #80]	; 0x50
   53d14:	ldr	r5, [sp, #64]	; 0x40
   53d18:	add	ip, r0, r1, lsl #3
   53d1c:	cmp	r5, #1
   53d20:	bne	5abf8 <GetDataSlab+0x26a9c>
   53d24:	ldr	r0, [sp, #76]	; 0x4c
   53d28:	ldr	r3, [fp, #20]
   53d2c:	ldr	sl, [sp, #60]	; 0x3c
   53d30:	cmp	r0, #1
   53d34:	blt	5b69c <GetDataSlab+0x27540>
   53d38:	mov	r7, r3
   53d3c:	ldr	r3, [sp, #72]	; 0x48
   53d40:	mov	r2, #1
   53d44:	ldr	lr, [sp, #88]	; 0x58
   53d48:	add	r9, r7, #4
   53d4c:	sub	r0, r3, #2
   53d50:	add	r2, r2, r0, lsr #1
   53d54:	lsr	r0, r0, #1
   53d58:	str	r0, [sp, #44]	; 0x2c
   53d5c:	mov	r0, #0
   53d60:	and	r6, r2, #1
   53d64:	str	r0, [sp, #80]	; 0x50
   53d68:	sub	r2, r2, r6
   53d6c:	str	r6, [sp, #52]	; 0x34
   53d70:	str	r2, [sp, #36]	; 0x24
   53d74:	sub	r2, fp, #136	; 0x88
   53d78:	orr	r4, r2, #4
   53d7c:	sub	r2, fp, #176	; 0xb0
   53d80:	orr	r2, r2, #4
   53d84:	str	r2, [sp, #84]	; 0x54
   53d88:	ldr	r2, [fp, #24]
   53d8c:	sub	r2, r2, #1
   53d90:	str	r2, [sp, #56]	; 0x38
   53d94:	sub	r2, fp, #96	; 0x60
   53d98:	orr	r2, r2, #4
   53d9c:	str	r2, [sp, #40]	; 0x28
   53da0:	lsl	r2, r3, #1
   53da4:	str	r2, [sp, #68]	; 0x44
   53da8:	bic	r2, r3, #1
   53dac:	str	r2, [sp, #48]	; 0x30
   53db0:	ldr	r2, [sp, #92]	; 0x5c
   53db4:	ldr	r7, [r2], #4
   53db8:	str	r2, [sp, #92]	; 0x5c
   53dbc:	str	r7, [sp, #64]	; 0x40
   53dc0:	ldr	r8, [sp, #92]	; 0x5c
   53dc4:	cmp	r3, #1
   53dc8:	bge	53e14 <GetDataSlab+0x1fcb8>
   53dcc:	b	53efc <GetDataSlab+0x1fda0>
   53dd0:	ldr	r2, [sp, #40]	; 0x28
   53dd4:	ldr	r0, [r2, r0]
   53dd8:	add	ip, ip, r0, lsl #3
   53ddc:	add	r1, r0, r1
   53de0:	ldr	r0, [sp, #68]	; 0x44
   53de4:	ldr	r3, [sp, #72]	; 0x48
   53de8:	ldr	r2, [sp, #80]	; 0x50
   53dec:	add	lr, lr, r0
   53df0:	ldr	r0, [sp, #76]	; 0x4c
   53df4:	add	r2, r2, r3
   53df8:	str	r2, [sp, #80]	; 0x50
   53dfc:	cmp	r2, r0
   53e00:	mov	r2, #0
   53e04:	bge	5b6a0 <GetDataSlab+0x27544>
   53e08:	ldr	r8, [sp, #92]	; 0x5c
   53e0c:	cmp	r3, #1
   53e10:	blt	53efc <GetDataSlab+0x1fda0>
   53e14:	mov	r3, #0
   53e18:	beq	53ecc <GetDataSlab+0x1fd70>
   53e1c:	ldr	r0, [sp, #64]	; 0x40
   53e20:	mov	r2, #0
   53e24:	add	r6, ip, r0, lsl #3
   53e28:	ldr	r0, [sp, #44]	; 0x2c
   53e2c:	cmp	r0, #0
   53e30:	beq	53e84 <GetDataSlab+0x1fd28>
   53e34:	ldr	r0, [sp, #36]	; 0x24
   53e38:	mov	r3, lr
   53e3c:	mov	sl, r6
   53e40:	mov	r8, r6
   53e44:	mov	r5, #32
   53e48:	vld1.64	{d16-d17}, [r8], r5
   53e4c:	add	r7, sl, #16
   53e50:	subs	r0, r0, #2
   53e54:	add	r2, r2, #4
   53e58:	mov	sl, r8
   53e5c:	vmovn.i64	d16, q8
   53e60:	vuzp.16	d16, d17
   53e64:	vst1.32	{d16[0]}, [r3]
   53e68:	vld1.64	{d16-d17}, [r7]
   53e6c:	add	r7, r3, #4
   53e70:	add	r3, r3, #8
   53e74:	vmovn.i64	d16, q8
   53e78:	vuzp.16	d16, d17
   53e7c:	vst1.32	{d16[0]}, [r7]
   53e80:	bne	53e48 <GetDataSlab+0x1fcec>
   53e84:	ldr	r0, [sp, #52]	; 0x34
   53e88:	ldr	r8, [sp, #92]	; 0x5c
   53e8c:	ldr	sl, [sp, #60]	; 0x3c
   53e90:	cmp	r0, #0
   53e94:	ldr	r0, [sp, #88]	; 0x58
   53e98:	beq	53ebc <GetDataSlab+0x1fd60>
   53e9c:	ldr	r3, [sp, #80]	; 0x50
   53ea0:	add	r0, r0, r3, lsl #1
   53ea4:	add	r3, r6, r2, lsl #3
   53ea8:	vld1.64	{d16-d17}, [r3]
   53eac:	add	r0, r0, r2, lsl #1
   53eb0:	vmovn.i64	d16, q8
   53eb4:	vuzp.16	d16, d17
   53eb8:	vst1.32	{d16[0]}, [r0]
   53ebc:	ldr	r0, [sp, #72]	; 0x48
   53ec0:	ldr	r3, [sp, #48]	; 0x30
   53ec4:	cmp	r0, r3
   53ec8:	beq	53efc <GetDataSlab+0x1fda0>
   53ecc:	ldr	r5, [sp, #64]	; 0x40
   53ed0:	ldr	r2, [sp, #72]	; 0x48
   53ed4:	mov	r0, #0
   53ed8:	sub	r0, r0, r3, lsl #1
   53edc:	add	r7, ip, r5, lsl #3
   53ee0:	sub	r2, r2, r3
   53ee4:	add	r3, r7, r3, lsl #3
   53ee8:	ldrh	r7, [r3], #8
   53eec:	subs	r2, r2, #1
   53ef0:	strh	r7, [lr, -r0]
   53ef4:	sub	r0, r0, #2
   53ef8:	bne	53ee8 <GetDataSlab+0x1fd8c>
   53efc:	ldr	r0, [fp, #24]
   53f00:	add	ip, ip, sl, lsl #3
   53f04:	add	r1, r1, sl
   53f08:	cmp	r0, #2
   53f0c:	blt	53de0 <GetDataSlab+0x1fc84>
   53f10:	ldr	r2, [sp, #56]	; 0x38
   53f14:	mov	r0, #0
   53f18:	b	53f44 <GetDataSlab+0x1fde8>
   53f1c:	sub	r5, fp, #176	; 0xb0
   53f20:	sub	r3, r3, r7
   53f24:	ldr	r6, [r5, r0]
   53f28:	ldr	r5, [r8, r0]
   53f2c:	mla	r3, r5, r6, r3
   53f30:	add	r1, r3, r1
   53f34:	add	ip, ip, r3, lsl #3
   53f38:	subs	r2, r2, #1
   53f3c:	add	r0, r0, #4
   53f40:	beq	53de0 <GetDataSlab+0x1fc84>
   53f44:	ldr	r3, [r4, r0]
   53f48:	add	r3, r3, #1
   53f4c:	str	r3, [r4, r0]
   53f50:	ldr	r7, [r9, r0]
   53f54:	sdiv	r6, r3, r7
   53f58:	mls	r3, r6, r7, r3
   53f5c:	cmp	r3, #0
   53f60:	bne	53dd0 <GetDataSlab+0x1fc74>
   53f64:	mov	r3, #0
   53f68:	str	r3, [r4, r0]
   53f6c:	ldr	r3, [sp, #84]	; 0x54
   53f70:	ldr	r3, [r3, r0]
   53f74:	sdiv	r6, r1, r3
   53f78:	mls	r7, r6, r3, r1
   53f7c:	cmp	r7, #0
   53f80:	bne	53f1c <GetDataSlab+0x1fdc0>
   53f84:	ldr	r3, [r8, r0]
   53f88:	cmp	r3, #0
   53f8c:	beq	53f38 <GetDataSlab+0x1fddc>
   53f90:	sub	r5, fp, #176	; 0xb0
   53f94:	ldr	r5, [r5, r0]
   53f98:	mla	r1, r5, r3, r1
   53f9c:	mul	r3, r5, r3
   53fa0:	b	53f34 <GetDataSlab+0x1fdd8>
   53fa4:	ldr	r0, [sp, #76]	; 0x4c
   53fa8:	sub	r2, fp, #96	; 0x60
   53fac:	cmp	r0, #1
   53fb0:	ldr	r0, [fp, #12]
   53fb4:	blt	5aed4 <GetDataSlab+0x26d78>
   53fb8:	ldr	r6, [sp, #56]	; 0x38
   53fbc:	ldr	r1, [sp, #52]	; 0x34
   53fc0:	add	r0, r0, #4
   53fc4:	str	r0, [sp, #84]	; 0x54
   53fc8:	ldr	r0, [fp, #24]
   53fcc:	mls	r1, r6, sl, r1
   53fd0:	mov	lr, r6
   53fd4:	sub	r0, r0, #1
   53fd8:	str	r0, [sp, #44]	; 0x2c
   53fdc:	orr	r0, r2, #4
   53fe0:	str	r1, [sp, #68]	; 0x44
   53fe4:	mul	r1, r6, sl
   53fe8:	str	r0, [sp, #36]	; 0x24
   53fec:	and	r0, r6, #1
   53ff0:	str	r0, [sp, #48]	; 0x30
   53ff4:	sub	r8, r6, r0
   53ff8:	lsl	r0, r6, #1
   53ffc:	mov	r6, #0
   54000:	str	r0, [sp, #64]	; 0x40
   54004:	ldr	r0, [sp, #88]	; 0x58
   54008:	str	r1, [sp, #52]	; 0x34
   5400c:	sub	r1, fp, #136	; 0x88
   54010:	orr	r4, r1, #4
   54014:	ldr	r1, [fp, #20]
   54018:	add	r0, r0, #2
   5401c:	str	r0, [sp, #80]	; 0x50
   54020:	add	r1, r1, #4
   54024:	str	r1, [sp, #40]	; 0x28
   54028:	sub	r1, fp, #176	; 0xb0
   5402c:	orr	r1, r1, #4
   54030:	str	r1, [sp, #60]	; 0x3c
   54034:	b	54074 <GetDataSlab+0x1ff18>
   54038:	ldr	r0, [sp, #36]	; 0x24
   5403c:	ldr	r0, [r0, r2]
   54040:	add	ip, ip, r0
   54044:	add	r3, r0, r3
   54048:	ldr	r0, [sp, #64]	; 0x40
   5404c:	ldr	r1, [sp, #80]	; 0x50
   54050:	ldr	lr, [sp, #56]	; 0x38
   54054:	ldr	r6, [sp, #72]	; 0x48
   54058:	mov	r2, #0
   5405c:	add	r1, r1, r0
   54060:	ldr	r0, [sp, #76]	; 0x4c
   54064:	add	r6, r6, lr
   54068:	str	r1, [sp, #80]	; 0x50
   5406c:	cmp	r6, r0
   54070:	bge	5b6a0 <GetDataSlab+0x27544>
   54074:	ldr	r0, [fp, #12]
   54078:	cmp	lr, #1
   5407c:	ldr	r2, [r0]
   54080:	add	r5, ip, r2
   54084:	blt	540f4 <GetDataSlab+0x1ff98>
   54088:	mov	r7, #0
   5408c:	cmp	lr, #1
   54090:	beq	540c0 <GetDataSlab+0x1ff64>
   54094:	ldr	r0, [sp, #80]	; 0x50
   54098:	mov	r7, #0
   5409c:	ldrb	r1, [r5]
   540a0:	add	r7, r7, #2
   540a4:	cmp	r8, r7
   540a8:	strh	r1, [r0, #-2]
   540ac:	ldrb	r1, [r5, sl]!
   540b0:	add	r5, r5, sl
   540b4:	strh	r1, [r0]
   540b8:	add	r0, r0, #4
   540bc:	bne	5409c <GetDataSlab+0x1ff40>
   540c0:	ldr	r0, [sp, #52]	; 0x34
   540c4:	ldr	r1, [sp, #48]	; 0x30
   540c8:	ldr	lr, [sp, #60]	; 0x3c
   540cc:	add	r0, r0, r3
   540d0:	cmp	r1, #0
   540d4:	beq	540ec <GetDataSlab+0x1ff90>
   540d8:	ldr	r1, [sp, #88]	; 0x58
   540dc:	ldrb	r3, [r5], sl
   540e0:	add	r1, r1, r6, lsl #1
   540e4:	add	r1, r1, r7, lsl #1
   540e8:	strh	r3, [r1]
   540ec:	add	r0, r0, r2
   540f0:	b	540fc <GetDataSlab+0x1ffa0>
   540f4:	ldr	lr, [sp, #60]	; 0x3c
   540f8:	add	r0, r2, r3
   540fc:	ldr	r1, [sp, #68]	; 0x44
   54100:	str	r6, [sp, #72]	; 0x48
   54104:	sub	r1, r1, r2
   54108:	add	r3, r0, r1
   5410c:	ldr	r0, [fp, #24]
   54110:	add	ip, r5, r1
   54114:	cmp	r0, #2
   54118:	blt	54048 <GetDataSlab+0x1feec>
   5411c:	ldr	r9, [sp, #44]	; 0x2c
   54120:	ldr	r6, [sp, #40]	; 0x28
   54124:	mov	r2, #0
   54128:	b	54158 <GetDataSlab+0x1fffc>
   5412c:	ldr	r5, [sp, #84]	; 0x54
   54130:	sub	r1, fp, #176	; 0xb0
   54134:	sub	r0, r0, r7
   54138:	ldr	r1, [r1, r2]
   5413c:	ldr	r5, [r5, r2]
   54140:	mla	r0, r5, r1, r0
   54144:	add	r3, r0, r3
   54148:	add	ip, ip, r0
   5414c:	subs	r9, r9, #1
   54150:	add	r2, r2, #4
   54154:	beq	54048 <GetDataSlab+0x1feec>
   54158:	ldr	r0, [r4, r2]
   5415c:	add	r0, r0, #1
   54160:	str	r0, [r4, r2]
   54164:	ldr	r1, [r6, r2]
   54168:	sdiv	r5, r0, r1
   5416c:	mls	r0, r5, r1, r0
   54170:	cmp	r0, #0
   54174:	bne	54038 <GetDataSlab+0x1fedc>
   54178:	mov	r0, #0
   5417c:	str	r0, [r4, r2]
   54180:	ldr	r0, [lr, r2]
   54184:	sdiv	r1, r3, r0
   54188:	mls	r7, r1, r0, r3
   5418c:	cmp	r7, #0
   54190:	bne	5412c <GetDataSlab+0x1ffd0>
   54194:	ldr	r0, [sp, #84]	; 0x54
   54198:	ldr	r0, [r0, r2]
   5419c:	cmp	r0, #0
   541a0:	beq	5414c <GetDataSlab+0x1fff0>
   541a4:	sub	r1, fp, #176	; 0xb0
   541a8:	ldr	r1, [r1, r2]
   541ac:	mla	r3, r1, r0, r3
   541b0:	mla	ip, r1, r0, ip
   541b4:	subs	r9, r9, #1
   541b8:	add	r2, r2, #4
   541bc:	bne	54158 <GetDataSlab+0x1fffc>
   541c0:	b	54048 <GetDataSlab+0x1feec>
   541c4:	ldr	r0, [sp, #76]	; 0x4c
   541c8:	ldr	r2, [fp, #12]
   541cc:	ldr	r3, [fp, #20]
   541d0:	ldr	r6, [sp, #64]	; 0x40
   541d4:	sub	r5, fp, #96	; 0x60
   541d8:	cmp	r0, #1
   541dc:	blt	5b69c <GetDataSlab+0x27540>
   541e0:	ldr	r0, [sp, #60]	; 0x3c
   541e4:	mov	r8, r5
   541e8:	ldr	r5, [r2], #4
   541ec:	lsl	r9, r7, #1
   541f0:	lsl	sl, r7, #2
   541f4:	str	r2, [sp, #92]	; 0x5c
   541f8:	mls	r0, r6, r7, r0
   541fc:	str	r5, [sp, #60]	; 0x3c
   54200:	sub	r0, r0, r5
   54204:	str	r0, [sp, #56]	; 0x38
   54208:	sub	r0, fp, #136	; 0x88
   5420c:	orr	r4, r0, #4
   54210:	add	r0, r3, #4
   54214:	mov	r3, r6
   54218:	str	r0, [sp, #84]	; 0x54
   5421c:	orr	r0, ip, #4
   54220:	str	r0, [sp, #80]	; 0x50
   54224:	ldr	r0, [fp, #24]
   54228:	sub	r0, r0, #1
   5422c:	str	r0, [sp, #40]	; 0x28
   54230:	orr	r0, r8, #4
   54234:	str	r0, [sp, #36]	; 0x24
   54238:	mla	r0, r6, r7, r5
   5423c:	str	r0, [sp, #48]	; 0x30
   54240:	and	r0, r6, #1
   54244:	sub	r8, r6, r0
   54248:	str	r0, [sp, #44]	; 0x2c
   5424c:	lsl	r0, r6, #1
   54250:	str	r0, [sp, #52]	; 0x34
   54254:	ldr	r0, [sp, #88]	; 0x58
   54258:	add	r0, r0, #2
   5425c:	str	r0, [sp, #72]	; 0x48
   54260:	mov	r0, #0
   54264:	str	r0, [sp, #68]	; 0x44
   54268:	ldr	ip, [sp, #60]	; 0x3c
   5426c:	cmp	r3, #1
   54270:	add	r2, lr, ip, lsl #1
   54274:	bge	542cc <GetDataSlab+0x20170>
   54278:	b	54330 <GetDataSlab+0x201d4>
   5427c:	ldr	r0, [sp, #36]	; 0x24
   54280:	ldr	r0, [r0, r2]
   54284:	add	lr, lr, r0, lsl #1
   54288:	add	r1, r0, r1
   5428c:	ldr	r0, [sp, #52]	; 0x34
   54290:	ldr	r2, [sp, #72]	; 0x48
   54294:	ldr	r3, [sp, #64]	; 0x40
   54298:	add	r2, r2, r0
   5429c:	ldr	r0, [sp, #76]	; 0x4c
   542a0:	str	r2, [sp, #72]	; 0x48
   542a4:	ldr	r2, [sp, #68]	; 0x44
   542a8:	add	r2, r2, r3
   542ac:	str	r2, [sp, #68]	; 0x44
   542b0:	cmp	r2, r0
   542b4:	mov	r2, #0
   542b8:	bge	5b6a0 <GetDataSlab+0x27544>
   542bc:	ldr	ip, [sp, #60]	; 0x3c
   542c0:	cmp	r3, #1
   542c4:	add	r2, lr, ip, lsl #1
   542c8:	blt	54330 <GetDataSlab+0x201d4>
   542cc:	mov	r3, #0
   542d0:	beq	54304 <GetDataSlab+0x201a8>
   542d4:	ldr	r5, [sp, #72]	; 0x48
   542d8:	mov	r3, #0
   542dc:	ldrh	r0, [r2]
   542e0:	add	r3, r3, #2
   542e4:	cmp	r8, r3
   542e8:	strh	r0, [r5, #-2]
   542ec:	add	r0, r2, r9
   542f0:	add	r2, r2, sl
   542f4:	ldrh	r0, [r0]
   542f8:	strh	r0, [r5]
   542fc:	add	r5, r5, #4
   54300:	bne	542dc <GetDataSlab+0x20180>
   54304:	ldr	r0, [sp, #44]	; 0x2c
   54308:	ldr	ip, [sp, #48]	; 0x30
   5430c:	cmp	r0, #0
   54310:	beq	54330 <GetDataSlab+0x201d4>
   54314:	ldr	r0, [sp, #88]	; 0x58
   54318:	ldr	r7, [sp, #68]	; 0x44
   5431c:	ldrh	r6, [r2], r9
   54320:	ldr	ip, [sp, #48]	; 0x30
   54324:	add	r0, r0, r7, lsl #1
   54328:	add	r0, r0, r3, lsl #1
   5432c:	strh	r6, [r0]
   54330:	ldr	r3, [sp, #56]	; 0x38
   54334:	add	r0, ip, r1
   54338:	add	r1, r0, r3
   5433c:	ldr	r0, [fp, #24]
   54340:	add	lr, r2, r3, lsl #1
   54344:	cmp	r0, #2
   54348:	blt	5428c <GetDataSlab+0x20130>
   5434c:	ldr	r3, [sp, #40]	; 0x28
   54350:	mov	r2, #0
   54354:	sub	ip, fp, #176	; 0xb0
   54358:	b	54384 <GetDataSlab+0x20228>
   5435c:	ldr	r7, [sp, #92]	; 0x5c
   54360:	ldr	r5, [ip, r2]
   54364:	sub	r0, r0, r6
   54368:	ldr	r7, [r7, r2]
   5436c:	mla	r0, r7, r5, r0
   54370:	add	r1, r0, r1
   54374:	add	lr, lr, r0, lsl #1
   54378:	subs	r3, r3, #1
   5437c:	add	r2, r2, #4
   54380:	beq	5428c <GetDataSlab+0x20130>
   54384:	ldr	r0, [r4, r2]
   54388:	ldr	r5, [sp, #84]	; 0x54
   5438c:	add	r0, r0, #1
   54390:	str	r0, [r4, r2]
   54394:	ldr	r6, [r5, r2]
   54398:	sdiv	r5, r0, r6
   5439c:	mls	r0, r5, r6, r0
   543a0:	cmp	r0, #0
   543a4:	bne	5427c <GetDataSlab+0x20120>
   543a8:	mov	r0, #0
   543ac:	str	r0, [r4, r2]
   543b0:	ldr	r0, [sp, #80]	; 0x50
   543b4:	ldr	r0, [r0, r2]
   543b8:	sdiv	r6, r1, r0
   543bc:	mls	r6, r6, r0, r1
   543c0:	cmp	r6, #0
   543c4:	bne	5435c <GetDataSlab+0x20200>
   543c8:	ldr	r0, [sp, #92]	; 0x5c
   543cc:	ldr	r0, [r0, r2]
   543d0:	cmp	r0, #0
   543d4:	beq	54378 <GetDataSlab+0x2021c>
   543d8:	ldr	r7, [ip, r2]
   543dc:	mla	r1, r7, r0, r1
   543e0:	mul	r0, r7, r0
   543e4:	b	54374 <GetDataSlab+0x20218>
   543e8:	ldr	r0, [sp, #76]	; 0x4c
   543ec:	ldr	r2, [fp, #12]
   543f0:	ldr	r3, [fp, #20]
   543f4:	ldr	r6, [sp, #64]	; 0x40
   543f8:	sub	r5, fp, #96	; 0x60
   543fc:	cmp	r0, #1
   54400:	blt	5b69c <GetDataSlab+0x27540>
   54404:	ldr	r0, [sp, #60]	; 0x3c
   54408:	mov	r8, r5
   5440c:	ldr	r5, [r2], #4
   54410:	lsl	r9, r7, #1
   54414:	lsl	sl, r7, #2
   54418:	str	r2, [sp, #92]	; 0x5c
   5441c:	mls	r0, r6, r7, r0
   54420:	str	r5, [sp, #60]	; 0x3c
   54424:	sub	r0, r0, r5
   54428:	str	r0, [sp, #56]	; 0x38
   5442c:	sub	r0, fp, #136	; 0x88
   54430:	orr	r4, r0, #4
   54434:	add	r0, r3, #4
   54438:	mov	r3, r6
   5443c:	str	r0, [sp, #84]	; 0x54
   54440:	orr	r0, ip, #4
   54444:	str	r0, [sp, #80]	; 0x50
   54448:	ldr	r0, [fp, #24]
   5444c:	sub	r0, r0, #1
   54450:	str	r0, [sp, #40]	; 0x28
   54454:	orr	r0, r8, #4
   54458:	str	r0, [sp, #36]	; 0x24
   5445c:	mla	r0, r6, r7, r5
   54460:	str	r0, [sp, #48]	; 0x30
   54464:	and	r0, r6, #1
   54468:	sub	r8, r6, r0
   5446c:	str	r0, [sp, #44]	; 0x2c
   54470:	lsl	r0, r6, #1
   54474:	str	r0, [sp, #52]	; 0x34
   54478:	ldr	r0, [sp, #88]	; 0x58
   5447c:	add	r0, r0, #2
   54480:	str	r0, [sp, #72]	; 0x48
   54484:	mov	r0, #0
   54488:	str	r0, [sp, #68]	; 0x44
   5448c:	ldr	ip, [sp, #60]	; 0x3c
   54490:	cmp	r3, #1
   54494:	add	r2, lr, ip, lsl #1
   54498:	bge	544f0 <GetDataSlab+0x20394>
   5449c:	b	54554 <GetDataSlab+0x203f8>
   544a0:	ldr	r0, [sp, #36]	; 0x24
   544a4:	ldr	r0, [r0, r2]
   544a8:	add	lr, lr, r0, lsl #1
   544ac:	add	r1, r0, r1
   544b0:	ldr	r0, [sp, #52]	; 0x34
   544b4:	ldr	r2, [sp, #72]	; 0x48
   544b8:	ldr	r3, [sp, #64]	; 0x40
   544bc:	add	r2, r2, r0
   544c0:	ldr	r0, [sp, #76]	; 0x4c
   544c4:	str	r2, [sp, #72]	; 0x48
   544c8:	ldr	r2, [sp, #68]	; 0x44
   544cc:	add	r2, r2, r3
   544d0:	str	r2, [sp, #68]	; 0x44
   544d4:	cmp	r2, r0
   544d8:	mov	r2, #0
   544dc:	bge	5b6a0 <GetDataSlab+0x27544>
   544e0:	ldr	ip, [sp, #60]	; 0x3c
   544e4:	cmp	r3, #1
   544e8:	add	r2, lr, ip, lsl #1
   544ec:	blt	54554 <GetDataSlab+0x203f8>
   544f0:	mov	r3, #0
   544f4:	beq	54528 <GetDataSlab+0x203cc>
   544f8:	ldr	r5, [sp, #72]	; 0x48
   544fc:	mov	r3, #0
   54500:	ldrh	r0, [r2]
   54504:	add	r3, r3, #2
   54508:	cmp	r8, r3
   5450c:	strh	r0, [r5, #-2]
   54510:	add	r0, r2, r9
   54514:	add	r2, r2, sl
   54518:	ldrh	r0, [r0]
   5451c:	strh	r0, [r5]
   54520:	add	r5, r5, #4
   54524:	bne	54500 <GetDataSlab+0x203a4>
   54528:	ldr	r0, [sp, #44]	; 0x2c
   5452c:	ldr	ip, [sp, #48]	; 0x30
   54530:	cmp	r0, #0
   54534:	beq	54554 <GetDataSlab+0x203f8>
   54538:	ldr	r0, [sp, #88]	; 0x58
   5453c:	ldr	r7, [sp, #68]	; 0x44
   54540:	ldrh	r6, [r2], r9
   54544:	ldr	ip, [sp, #48]	; 0x30
   54548:	add	r0, r0, r7, lsl #1
   5454c:	add	r0, r0, r3, lsl #1
   54550:	strh	r6, [r0]
   54554:	ldr	r3, [sp, #56]	; 0x38
   54558:	add	r0, ip, r1
   5455c:	add	r1, r0, r3
   54560:	ldr	r0, [fp, #24]
   54564:	add	lr, r2, r3, lsl #1
   54568:	cmp	r0, #2
   5456c:	blt	544b0 <GetDataSlab+0x20354>
   54570:	ldr	r3, [sp, #40]	; 0x28
   54574:	mov	r2, #0
   54578:	sub	ip, fp, #176	; 0xb0
   5457c:	b	545a8 <GetDataSlab+0x2044c>
   54580:	ldr	r7, [sp, #92]	; 0x5c
   54584:	ldr	r5, [ip, r2]
   54588:	sub	r0, r0, r6
   5458c:	ldr	r7, [r7, r2]
   54590:	mla	r0, r7, r5, r0
   54594:	add	r1, r0, r1
   54598:	add	lr, lr, r0, lsl #1
   5459c:	subs	r3, r3, #1
   545a0:	add	r2, r2, #4
   545a4:	beq	544b0 <GetDataSlab+0x20354>
   545a8:	ldr	r0, [r4, r2]
   545ac:	ldr	r5, [sp, #84]	; 0x54
   545b0:	add	r0, r0, #1
   545b4:	str	r0, [r4, r2]
   545b8:	ldr	r6, [r5, r2]
   545bc:	sdiv	r5, r0, r6
   545c0:	mls	r0, r5, r6, r0
   545c4:	cmp	r0, #0
   545c8:	bne	544a0 <GetDataSlab+0x20344>
   545cc:	mov	r0, #0
   545d0:	str	r0, [r4, r2]
   545d4:	ldr	r0, [sp, #80]	; 0x50
   545d8:	ldr	r0, [r0, r2]
   545dc:	sdiv	r6, r1, r0
   545e0:	mls	r6, r6, r0, r1
   545e4:	cmp	r6, #0
   545e8:	bne	54580 <GetDataSlab+0x20424>
   545ec:	ldr	r0, [sp, #92]	; 0x5c
   545f0:	ldr	r0, [r0, r2]
   545f4:	cmp	r0, #0
   545f8:	beq	5459c <GetDataSlab+0x20440>
   545fc:	ldr	r7, [ip, r2]
   54600:	mla	r1, r7, r0, r1
   54604:	mul	r0, r7, r0
   54608:	b	54598 <GetDataSlab+0x2043c>
   5460c:	ldr	r0, [sp, #76]	; 0x4c
   54610:	ldr	r1, [sp, #72]	; 0x48
   54614:	ldr	r2, [sp, #60]	; 0x3c
   54618:	cmp	r0, #1
   5461c:	ldr	r0, [fp, #20]
   54620:	blt	5b69c <GetDataSlab+0x27540>
   54624:	mls	r1, r1, r5, r2
   54628:	add	sl, r0, #4
   5462c:	mov	r0, r8
   54630:	add	r0, r0, #2
   54634:	str	r0, [sp, #80]	; 0x50
   54638:	mov	r0, #0
   5463c:	str	r1, [sp, #64]	; 0x40
   54640:	sub	r1, fp, #136	; 0x88
   54644:	str	r0, [sp, #68]	; 0x44
   54648:	orr	r6, r1, #4
   5464c:	orr	r1, ip, #4
   54650:	lsl	ip, r5, #3
   54654:	str	r1, [sp, #84]	; 0x54
   54658:	ldr	r1, [fp, #12]
   5465c:	add	r8, r1, #4
   54660:	ldr	r1, [fp, #24]
   54664:	sub	r1, r1, #1
   54668:	str	r1, [sp, #44]	; 0x2c
   5466c:	sub	r1, fp, #96	; 0x60
   54670:	orr	r1, r1, #4
   54674:	str	r1, [sp, #40]	; 0x28
   54678:	ldr	r1, [sp, #72]	; 0x48
   5467c:	mul	r2, r1, r5
   54680:	str	r2, [sp, #52]	; 0x34
   54684:	and	r2, r1, #1
   54688:	sub	lr, r1, r2
   5468c:	str	r2, [sp, #48]	; 0x30
   54690:	lsl	r2, r1, #1
   54694:	str	r2, [sp, #60]	; 0x3c
   54698:	b	546dc <GetDataSlab+0x20580>
   5469c:	ldr	r0, [sp, #40]	; 0x28
   546a0:	ldr	r0, [r0, r2]
   546a4:	add	r4, r4, r0, lsl #2
   546a8:	add	r3, r0, r3
   546ac:	ldr	r0, [sp, #60]	; 0x3c
   546b0:	ldr	r1, [sp, #80]	; 0x50
   546b4:	ldr	r2, [sp, #68]	; 0x44
   546b8:	add	r1, r1, r0
   546bc:	ldr	r0, [sp, #76]	; 0x4c
   546c0:	str	r1, [sp, #80]	; 0x50
   546c4:	ldr	r1, [sp, #72]	; 0x48
   546c8:	add	r2, r2, r1
   546cc:	str	r2, [sp, #68]	; 0x44
   546d0:	cmp	r2, r0
   546d4:	mov	r2, #0
   546d8:	bge	5b6a0 <GetDataSlab+0x27544>
   546dc:	ldr	r0, [fp, #12]
   546e0:	cmp	r1, #1
   546e4:	ldr	r2, [r0]
   546e8:	add	r5, r4, r2, lsl #2
   546ec:	blt	54760 <GetDataSlab+0x20604>
   546f0:	ldr	r4, [sp, #56]	; 0x38
   546f4:	mov	r7, #0
   546f8:	cmp	r1, #1
   546fc:	beq	5472c <GetDataSlab+0x205d0>
   54700:	ldr	r0, [sp, #80]	; 0x50
   54704:	mov	r7, #0
   54708:	ldr	r1, [r5]
   5470c:	add	r7, r7, #2
   54710:	cmp	lr, r7
   54714:	strh	r1, [r0, #-2]
   54718:	ldr	r1, [r5, r4, lsl #2]
   5471c:	add	r5, r5, ip
   54720:	strh	r1, [r0]
   54724:	add	r0, r0, #4
   54728:	bne	54708 <GetDataSlab+0x205ac>
   5472c:	ldr	r0, [sp, #52]	; 0x34
   54730:	ldr	r1, [sp, #48]	; 0x30
   54734:	add	r0, r0, r3
   54738:	cmp	r1, #0
   5473c:	beq	54758 <GetDataSlab+0x205fc>
   54740:	ldr	r1, [sp, #88]	; 0x58
   54744:	ldr	r3, [sp, #68]	; 0x44
   54748:	add	r1, r1, r3, lsl #1
   5474c:	ldr	r3, [r5], r4, lsl #2
   54750:	add	r1, r1, r7, lsl #1
   54754:	strh	r3, [r1]
   54758:	add	r0, r0, r2
   5475c:	b	54764 <GetDataSlab+0x20608>
   54760:	add	r0, r2, r3
   54764:	ldr	r1, [sp, #64]	; 0x40
   54768:	sub	r1, r1, r2
   5476c:	add	r3, r0, r1
   54770:	ldr	r0, [fp, #24]
   54774:	add	r4, r5, r1, lsl #2
   54778:	cmp	r0, #2
   5477c:	blt	546ac <GetDataSlab+0x20550>
   54780:	ldr	r5, [sp, #44]	; 0x2c
   54784:	mov	r2, #0
   54788:	b	547b4 <GetDataSlab+0x20658>
   5478c:	sub	r1, fp, #176	; 0xb0
   54790:	ldr	r7, [r8, r2]
   54794:	sub	r0, r0, r9
   54798:	ldr	r1, [r1, r2]
   5479c:	mla	r0, r7, r1, r0
   547a0:	add	r3, r0, r3
   547a4:	add	r4, r4, r0, lsl #2
   547a8:	subs	r5, r5, #1
   547ac:	add	r2, r2, #4
   547b0:	beq	546ac <GetDataSlab+0x20550>
   547b4:	ldr	r0, [r6, r2]
   547b8:	add	r0, r0, #1
   547bc:	str	r0, [r6, r2]
   547c0:	ldr	r1, [sl, r2]
   547c4:	sdiv	r7, r0, r1
   547c8:	mls	r0, r7, r1, r0
   547cc:	cmp	r0, #0
   547d0:	bne	5469c <GetDataSlab+0x20540>
   547d4:	mov	r0, #0
   547d8:	str	r0, [r6, r2]
   547dc:	ldr	r0, [sp, #84]	; 0x54
   547e0:	ldr	r0, [r0, r2]
   547e4:	sdiv	r1, r3, r0
   547e8:	mls	r9, r1, r0, r3
   547ec:	cmp	r9, #0
   547f0:	bne	5478c <GetDataSlab+0x20630>
   547f4:	ldr	r0, [r8, r2]
   547f8:	cmp	r0, #0
   547fc:	beq	547a8 <GetDataSlab+0x2064c>
   54800:	sub	r1, fp, #176	; 0xb0
   54804:	ldr	r1, [r1, r2]
   54808:	mla	r3, r1, r0, r3
   5480c:	mul	r0, r1, r0
   54810:	b	547a4 <GetDataSlab+0x20648>
   54814:	ldr	r0, [sp, #76]	; 0x4c
   54818:	ldr	r1, [sp, #72]	; 0x48
   5481c:	ldr	r2, [sp, #60]	; 0x3c
   54820:	cmp	r0, #1
   54824:	ldr	r0, [fp, #20]
   54828:	blt	5b69c <GetDataSlab+0x27540>
   5482c:	mls	r1, r1, r5, r2
   54830:	add	sl, r0, #4
   54834:	mov	r0, r8
   54838:	add	r0, r0, #2
   5483c:	str	r0, [sp, #80]	; 0x50
   54840:	mov	r0, #0
   54844:	str	r1, [sp, #64]	; 0x40
   54848:	sub	r1, fp, #136	; 0x88
   5484c:	str	r0, [sp, #68]	; 0x44
   54850:	orr	r6, r1, #4
   54854:	orr	r1, ip, #4
   54858:	lsl	ip, r5, #3
   5485c:	str	r1, [sp, #84]	; 0x54
   54860:	ldr	r1, [fp, #12]
   54864:	add	r8, r1, #4
   54868:	ldr	r1, [fp, #24]
   5486c:	sub	r1, r1, #1
   54870:	str	r1, [sp, #44]	; 0x2c
   54874:	sub	r1, fp, #96	; 0x60
   54878:	orr	r1, r1, #4
   5487c:	str	r1, [sp, #40]	; 0x28
   54880:	ldr	r1, [sp, #72]	; 0x48
   54884:	mul	r2, r1, r5
   54888:	str	r2, [sp, #52]	; 0x34
   5488c:	and	r2, r1, #1
   54890:	sub	lr, r1, r2
   54894:	str	r2, [sp, #48]	; 0x30
   54898:	lsl	r2, r1, #1
   5489c:	str	r2, [sp, #60]	; 0x3c
   548a0:	b	548e4 <GetDataSlab+0x20788>
   548a4:	ldr	r0, [sp, #40]	; 0x28
   548a8:	ldr	r0, [r0, r2]
   548ac:	add	r4, r4, r0, lsl #2
   548b0:	add	r3, r0, r3
   548b4:	ldr	r0, [sp, #60]	; 0x3c
   548b8:	ldr	r1, [sp, #80]	; 0x50
   548bc:	ldr	r2, [sp, #68]	; 0x44
   548c0:	add	r1, r1, r0
   548c4:	ldr	r0, [sp, #76]	; 0x4c
   548c8:	str	r1, [sp, #80]	; 0x50
   548cc:	ldr	r1, [sp, #72]	; 0x48
   548d0:	add	r2, r2, r1
   548d4:	str	r2, [sp, #68]	; 0x44
   548d8:	cmp	r2, r0
   548dc:	mov	r2, #0
   548e0:	bge	5b6a0 <GetDataSlab+0x27544>
   548e4:	ldr	r0, [fp, #12]
   548e8:	cmp	r1, #1
   548ec:	ldr	r2, [r0]
   548f0:	add	r5, r4, r2, lsl #2
   548f4:	blt	54968 <GetDataSlab+0x2080c>
   548f8:	ldr	r4, [sp, #56]	; 0x38
   548fc:	mov	r7, #0
   54900:	cmp	r1, #1
   54904:	beq	54934 <GetDataSlab+0x207d8>
   54908:	ldr	r0, [sp, #80]	; 0x50
   5490c:	mov	r7, #0
   54910:	ldr	r1, [r5]
   54914:	add	r7, r7, #2
   54918:	cmp	lr, r7
   5491c:	strh	r1, [r0, #-2]
   54920:	ldr	r1, [r5, r4, lsl #2]
   54924:	add	r5, r5, ip
   54928:	strh	r1, [r0]
   5492c:	add	r0, r0, #4
   54930:	bne	54910 <GetDataSlab+0x207b4>
   54934:	ldr	r0, [sp, #52]	; 0x34
   54938:	ldr	r1, [sp, #48]	; 0x30
   5493c:	add	r0, r0, r3
   54940:	cmp	r1, #0
   54944:	beq	54960 <GetDataSlab+0x20804>
   54948:	ldr	r1, [sp, #88]	; 0x58
   5494c:	ldr	r3, [sp, #68]	; 0x44
   54950:	add	r1, r1, r3, lsl #1
   54954:	ldr	r3, [r5], r4, lsl #2
   54958:	add	r1, r1, r7, lsl #1
   5495c:	strh	r3, [r1]
   54960:	add	r0, r0, r2
   54964:	b	5496c <GetDataSlab+0x20810>
   54968:	add	r0, r2, r3
   5496c:	ldr	r1, [sp, #64]	; 0x40
   54970:	sub	r1, r1, r2
   54974:	add	r3, r0, r1
   54978:	ldr	r0, [fp, #24]
   5497c:	add	r4, r5, r1, lsl #2
   54980:	cmp	r0, #2
   54984:	blt	548b4 <GetDataSlab+0x20758>
   54988:	ldr	r5, [sp, #44]	; 0x2c
   5498c:	mov	r2, #0
   54990:	b	549bc <GetDataSlab+0x20860>
   54994:	sub	r1, fp, #176	; 0xb0
   54998:	ldr	r7, [r8, r2]
   5499c:	sub	r0, r0, r9
   549a0:	ldr	r1, [r1, r2]
   549a4:	mla	r0, r7, r1, r0
   549a8:	add	r3, r0, r3
   549ac:	add	r4, r4, r0, lsl #2
   549b0:	subs	r5, r5, #1
   549b4:	add	r2, r2, #4
   549b8:	beq	548b4 <GetDataSlab+0x20758>
   549bc:	ldr	r0, [r6, r2]
   549c0:	add	r0, r0, #1
   549c4:	str	r0, [r6, r2]
   549c8:	ldr	r1, [sl, r2]
   549cc:	sdiv	r7, r0, r1
   549d0:	mls	r0, r7, r1, r0
   549d4:	cmp	r0, #0
   549d8:	bne	548a4 <GetDataSlab+0x20748>
   549dc:	mov	r0, #0
   549e0:	str	r0, [r6, r2]
   549e4:	ldr	r0, [sp, #84]	; 0x54
   549e8:	ldr	r0, [r0, r2]
   549ec:	sdiv	r1, r3, r0
   549f0:	mls	r9, r1, r0, r3
   549f4:	cmp	r9, #0
   549f8:	bne	54994 <GetDataSlab+0x20838>
   549fc:	ldr	r0, [r8, r2]
   54a00:	cmp	r0, #0
   54a04:	beq	549b0 <GetDataSlab+0x20854>
   54a08:	sub	r1, fp, #176	; 0xb0
   54a0c:	ldr	r1, [r1, r2]
   54a10:	mla	r3, r1, r0, r3
   54a14:	mul	r0, r1, r0
   54a18:	b	549ac <GetDataSlab+0x20850>
   54a1c:	ldr	r0, [sp, #76]	; 0x4c
   54a20:	cmp	r0, #1
   54a24:	ldr	r0, [sp, #60]	; 0x3c
   54a28:	blt	5b69c <GetDataSlab+0x27540>
   54a2c:	ldr	r2, [sp, #92]	; 0x5c
   54a30:	ldr	r5, [sp, #40]	; 0x28
   54a34:	ldr	r3, [sp, #64]	; 0x40
   54a38:	ldr	r6, [r2], #4
   54a3c:	mls	r0, r3, r5, r0
   54a40:	lsl	sl, r5, #3
   54a44:	str	r2, [sp, #92]	; 0x5c
   54a48:	sub	r0, r0, r6
   54a4c:	str	r6, [sp, #60]	; 0x3c
   54a50:	str	r0, [sp, #56]	; 0x38
   54a54:	sub	r0, fp, #136	; 0x88
   54a58:	orr	r4, r0, #4
   54a5c:	ldr	r0, [fp, #20]
   54a60:	add	r0, r0, #4
   54a64:	str	r0, [sp, #84]	; 0x54
   54a68:	orr	r0, ip, #4
   54a6c:	lsl	ip, r5, #2
   54a70:	str	r0, [sp, #80]	; 0x50
   54a74:	ldr	r0, [fp, #24]
   54a78:	sub	r0, r0, #1
   54a7c:	str	r0, [sp, #36]	; 0x24
   54a80:	sub	r0, fp, #96	; 0x60
   54a84:	orr	r0, r0, #4
   54a88:	str	r0, [sp, #32]
   54a8c:	mla	r0, r3, r5, r6
   54a90:	str	r0, [sp, #48]	; 0x30
   54a94:	and	r0, r3, #1
   54a98:	sub	r9, r3, r0
   54a9c:	str	r0, [sp, #44]	; 0x2c
   54aa0:	lsl	r0, r3, #1
   54aa4:	str	r0, [sp, #52]	; 0x34
   54aa8:	ldr	r0, [sp, #88]	; 0x58
   54aac:	add	r0, r0, #2
   54ab0:	str	r0, [sp, #72]	; 0x48
   54ab4:	mov	r0, #0
   54ab8:	str	r0, [sp, #68]	; 0x44
   54abc:	ldr	r8, [sp, #60]	; 0x3c
   54ac0:	cmp	r3, #1
   54ac4:	add	r2, lr, r8, lsl #2
   54ac8:	bge	54b20 <GetDataSlab+0x209c4>
   54acc:	b	54ba4 <GetDataSlab+0x20a48>
   54ad0:	ldr	r0, [sp, #32]
   54ad4:	ldr	r0, [r0, r2]
   54ad8:	add	lr, lr, r0, lsl #2
   54adc:	add	r1, r0, r1
   54ae0:	ldr	r0, [sp, #52]	; 0x34
   54ae4:	ldr	r2, [sp, #72]	; 0x48
   54ae8:	ldr	r3, [sp, #64]	; 0x40
   54aec:	add	r2, r2, r0
   54af0:	ldr	r0, [sp, #76]	; 0x4c
   54af4:	str	r2, [sp, #72]	; 0x48
   54af8:	ldr	r2, [sp, #68]	; 0x44
   54afc:	add	r2, r2, r3
   54b00:	str	r2, [sp, #68]	; 0x44
   54b04:	cmp	r2, r0
   54b08:	mov	r2, #0
   54b0c:	bge	5b6a0 <GetDataSlab+0x27544>
   54b10:	ldr	r8, [sp, #60]	; 0x3c
   54b14:	cmp	r3, #1
   54b18:	add	r2, lr, r8, lsl #2
   54b1c:	blt	54ba4 <GetDataSlab+0x20a48>
   54b20:	mov	r3, #0
   54b24:	beq	54b68 <GetDataSlab+0x20a0c>
   54b28:	ldr	r5, [sp, #72]	; 0x48
   54b2c:	mov	r3, #0
   54b30:	vldr	s0, [r2]
   54b34:	add	r3, r3, #2
   54b38:	cmp	r9, r3
   54b3c:	vcvt.u32.f32	s0, s0
   54b40:	vmov	r0, s0
   54b44:	strh	r0, [r5, #-2]
   54b48:	add	r0, r2, ip
   54b4c:	add	r2, r2, sl
   54b50:	vldr	s0, [r0]
   54b54:	vcvt.u32.f32	s0, s0
   54b58:	vmov	r0, s0
   54b5c:	strh	r0, [r5]
   54b60:	add	r5, r5, #4
   54b64:	bne	54b30 <GetDataSlab+0x209d4>
   54b68:	ldr	r0, [sp, #44]	; 0x2c
   54b6c:	ldr	r8, [sp, #48]	; 0x30
   54b70:	cmp	r0, #0
   54b74:	beq	54ba4 <GetDataSlab+0x20a48>
   54b78:	vldr	s0, [r2]
   54b7c:	ldr	r0, [sp, #88]	; 0x58
   54b80:	ldr	r7, [sp, #68]	; 0x44
   54b84:	add	r0, r0, r7, lsl #1
   54b88:	vcvt.u32.f32	s0, s0
   54b8c:	ldr	r8, [sp, #48]	; 0x30
   54b90:	add	r0, r0, r3, lsl #1
   54b94:	vmov	r3, s0
   54b98:	strh	r3, [r0]
   54b9c:	ldr	r0, [sp, #40]	; 0x28
   54ba0:	add	r2, r2, r0, lsl #2
   54ba4:	ldr	r3, [sp, #56]	; 0x38
   54ba8:	add	r0, r8, r1
   54bac:	add	r1, r0, r3
   54bb0:	ldr	r0, [fp, #24]
   54bb4:	add	lr, r2, r3, lsl #2
   54bb8:	cmp	r0, #2
   54bbc:	blt	54ae0 <GetDataSlab+0x20984>
   54bc0:	ldr	r3, [sp, #36]	; 0x24
   54bc4:	ldr	r8, [sp, #92]	; 0x5c
   54bc8:	mov	r2, #0
   54bcc:	b	54bf8 <GetDataSlab+0x20a9c>
   54bd0:	sub	r5, fp, #176	; 0xb0
   54bd4:	ldr	r7, [r8, r2]
   54bd8:	sub	r0, r0, r6
   54bdc:	ldr	r5, [r5, r2]
   54be0:	mla	r0, r7, r5, r0
   54be4:	add	r1, r0, r1
   54be8:	add	lr, lr, r0, lsl #2
   54bec:	subs	r3, r3, #1
   54bf0:	add	r2, r2, #4
   54bf4:	beq	54ae0 <GetDataSlab+0x20984>
   54bf8:	ldr	r0, [r4, r2]
   54bfc:	ldr	r5, [sp, #84]	; 0x54
   54c00:	add	r0, r0, #1
   54c04:	str	r0, [r4, r2]
   54c08:	ldr	r5, [r5, r2]
   54c0c:	sdiv	r6, r0, r5
   54c10:	mls	r0, r6, r5, r0
   54c14:	cmp	r0, #0
   54c18:	bne	54ad0 <GetDataSlab+0x20974>
   54c1c:	mov	r0, #0
   54c20:	str	r0, [r4, r2]
   54c24:	ldr	r0, [sp, #80]	; 0x50
   54c28:	ldr	r0, [r0, r2]
   54c2c:	sdiv	r5, r1, r0
   54c30:	mls	r6, r5, r0, r1
   54c34:	cmp	r6, #0
   54c38:	bne	54bd0 <GetDataSlab+0x20a74>
   54c3c:	ldr	r0, [r8, r2]
   54c40:	cmp	r0, #0
   54c44:	beq	54bec <GetDataSlab+0x20a90>
   54c48:	sub	r5, fp, #176	; 0xb0
   54c4c:	ldr	r5, [r5, r2]
   54c50:	mla	r1, r5, r0, r1
   54c54:	mul	r0, r5, r0
   54c58:	b	54be8 <GetDataSlab+0x20a8c>
   54c5c:	ldr	r0, [sp, #76]	; 0x4c
   54c60:	ldr	r2, [sp, #88]	; 0x58
   54c64:	ldr	r3, [fp, #12]
   54c68:	sub	r6, fp, #96	; 0x60
   54c6c:	cmp	r0, #1
   54c70:	blt	5b69c <GetDataSlab+0x27540>
   54c74:	ldr	r5, [sp, #40]	; 0x28
   54c78:	ldr	r7, [sp, #64]	; 0x40
   54c7c:	ldr	r0, [sp, #72]	; 0x48
   54c80:	ldr	r4, [r3], #4
   54c84:	str	r3, [sp, #92]	; 0x5c
   54c88:	mls	r0, r7, r5, r0
   54c8c:	mov	r3, r7
   54c90:	lsl	lr, r5, #4
   54c94:	str	r4, [sp, #60]	; 0x3c
   54c98:	sub	r0, r0, r4
   54c9c:	str	r0, [sp, #56]	; 0x38
   54ca0:	sub	r0, fp, #136	; 0x88
   54ca4:	orr	r7, r0, #4
   54ca8:	ldr	r0, [fp, #20]
   54cac:	add	r0, r0, #4
   54cb0:	str	r0, [sp, #84]	; 0x54
   54cb4:	orr	r0, ip, #4
   54cb8:	lsl	ip, r5, #3
   54cbc:	str	r0, [sp, #80]	; 0x50
   54cc0:	ldr	r0, [fp, #24]
   54cc4:	sub	r0, r0, #1
   54cc8:	str	r0, [sp, #36]	; 0x24
   54ccc:	orr	r0, r6, #4
   54cd0:	str	r0, [sp, #32]
   54cd4:	mla	r0, r3, r5, r4
   54cd8:	str	r0, [sp, #48]	; 0x30
   54cdc:	and	r0, r3, #1
   54ce0:	sub	sl, r3, r0
   54ce4:	str	r0, [sp, #44]	; 0x2c
   54ce8:	lsl	r0, r3, #1
   54cec:	str	r0, [sp, #52]	; 0x34
   54cf0:	add	r0, r2, #2
   54cf4:	str	r0, [sp, #72]	; 0x48
   54cf8:	mov	r0, #0
   54cfc:	str	r0, [sp, #68]	; 0x44
   54d00:	ldr	r8, [sp, #60]	; 0x3c
   54d04:	cmp	r3, #1
   54d08:	add	r2, r9, r8, lsl #3
   54d0c:	bge	54d64 <GetDataSlab+0x20c08>
   54d10:	b	54de8 <GetDataSlab+0x20c8c>
   54d14:	ldr	r0, [sp, #32]
   54d18:	ldr	r0, [r0, r2]
   54d1c:	add	r9, r9, r0, lsl #3
   54d20:	add	r1, r0, r1
   54d24:	ldr	r0, [sp, #52]	; 0x34
   54d28:	ldr	r2, [sp, #72]	; 0x48
   54d2c:	ldr	r3, [sp, #64]	; 0x40
   54d30:	add	r2, r2, r0
   54d34:	ldr	r0, [sp, #76]	; 0x4c
   54d38:	str	r2, [sp, #72]	; 0x48
   54d3c:	ldr	r2, [sp, #68]	; 0x44
   54d40:	add	r2, r2, r3
   54d44:	str	r2, [sp, #68]	; 0x44
   54d48:	cmp	r2, r0
   54d4c:	mov	r2, #0
   54d50:	bge	5b6a0 <GetDataSlab+0x27544>
   54d54:	ldr	r8, [sp, #60]	; 0x3c
   54d58:	cmp	r3, #1
   54d5c:	add	r2, r9, r8, lsl #3
   54d60:	blt	54de8 <GetDataSlab+0x20c8c>
   54d64:	mov	r3, #0
   54d68:	beq	54dac <GetDataSlab+0x20c50>
   54d6c:	ldr	r4, [sp, #72]	; 0x48
   54d70:	mov	r3, #0
   54d74:	vldr	d16, [r2]
   54d78:	add	r3, r3, #2
   54d7c:	cmp	sl, r3
   54d80:	vcvt.u32.f64	s0, d16
   54d84:	vmov	r0, s0
   54d88:	strh	r0, [r4, #-2]
   54d8c:	add	r0, r2, ip
   54d90:	add	r2, r2, lr
   54d94:	vldr	d16, [r0]
   54d98:	vcvt.u32.f64	s0, d16
   54d9c:	vmov	r0, s0
   54da0:	strh	r0, [r4]
   54da4:	add	r4, r4, #4
   54da8:	bne	54d74 <GetDataSlab+0x20c18>
   54dac:	ldr	r0, [sp, #44]	; 0x2c
   54db0:	ldr	r8, [sp, #48]	; 0x30
   54db4:	cmp	r0, #0
   54db8:	beq	54de8 <GetDataSlab+0x20c8c>
   54dbc:	vldr	d16, [r2]
   54dc0:	ldr	r0, [sp, #88]	; 0x58
   54dc4:	ldr	r4, [sp, #68]	; 0x44
   54dc8:	add	r0, r0, r4, lsl #1
   54dcc:	vcvt.u32.f64	s0, d16
   54dd0:	ldr	r8, [sp, #48]	; 0x30
   54dd4:	add	r0, r0, r3, lsl #1
   54dd8:	vmov	r3, s0
   54ddc:	strh	r3, [r0]
   54de0:	ldr	r0, [sp, #40]	; 0x28
   54de4:	add	r2, r2, r0, lsl #3
   54de8:	ldr	r3, [sp, #56]	; 0x38
   54dec:	add	r0, r8, r1
   54df0:	add	r1, r0, r3
   54df4:	ldr	r0, [fp, #24]
   54df8:	add	r9, r2, r3, lsl #3
   54dfc:	cmp	r0, #2
   54e00:	blt	54d24 <GetDataSlab+0x20bc8>
   54e04:	ldr	r3, [sp, #36]	; 0x24
   54e08:	ldr	r8, [sp, #92]	; 0x5c
   54e0c:	mov	r2, #0
   54e10:	b	54e3c <GetDataSlab+0x20ce0>
   54e14:	sub	r4, fp, #176	; 0xb0
   54e18:	sub	r0, r5, r0
   54e1c:	ldr	r6, [r4, r2]
   54e20:	ldr	r4, [r8, r2]
   54e24:	mla	r0, r4, r6, r0
   54e28:	add	r1, r0, r1
   54e2c:	add	r9, r9, r0, lsl #3
   54e30:	subs	r3, r3, #1
   54e34:	add	r2, r2, #4
   54e38:	beq	54d24 <GetDataSlab+0x20bc8>
   54e3c:	ldr	r0, [r7, r2]
   54e40:	ldr	r4, [sp, #84]	; 0x54
   54e44:	add	r0, r0, #1
   54e48:	str	r0, [r7, r2]
   54e4c:	ldr	r5, [r4, r2]
   54e50:	sdiv	r6, r0, r5
   54e54:	mls	r0, r6, r5, r0
   54e58:	cmp	r0, #0
   54e5c:	bne	54d14 <GetDataSlab+0x20bb8>
   54e60:	mov	r0, #0
   54e64:	str	r0, [r7, r2]
   54e68:	ldr	r0, [sp, #80]	; 0x50
   54e6c:	ldr	r5, [r0, r2]
   54e70:	sdiv	r0, r1, r5
   54e74:	mls	r0, r0, r5, r1
   54e78:	cmp	r0, #0
   54e7c:	bne	54e14 <GetDataSlab+0x20cb8>
   54e80:	ldr	r0, [r8, r2]
   54e84:	cmp	r0, #0
   54e88:	beq	54e30 <GetDataSlab+0x20cd4>
   54e8c:	sub	r4, fp, #176	; 0xb0
   54e90:	ldr	r4, [r4, r2]
   54e94:	mla	r1, r4, r0, r1
   54e98:	mul	r0, r4, r0
   54e9c:	b	54e2c <GetDataSlab+0x20cd0>
   54ea0:	ldr	r0, [sp, #68]	; 0x44
   54ea4:	ldr	r4, [fp, #20]
   54ea8:	ldr	r6, [sp, #56]	; 0x38
   54eac:	cmp	r0, #1
   54eb0:	blt	550b8 <GetDataSlab+0x20f5c>
   54eb4:	ldr	r2, [fp, #12]
   54eb8:	ldr	r0, [sp, #44]	; 0x2c
   54ebc:	mov	r5, r4
   54ec0:	add	r5, r5, #4
   54ec4:	ldr	r4, [r2], #4
   54ec8:	mls	r0, r6, r7, r0
   54ecc:	str	r2, [sp, #72]	; 0x48
   54ed0:	mov	r2, #0
   54ed4:	str	r2, [sp, #60]	; 0x3c
   54ed8:	sub	r0, r0, r4
   54edc:	str	r4, [sp, #52]	; 0x34
   54ee0:	str	r0, [sp, #48]	; 0x30
   54ee4:	sub	r0, fp, #136	; 0x88
   54ee8:	orr	r3, r0, #4
   54eec:	orr	r0, ip, #4
   54ef0:	lsl	ip, r7, #3
   54ef4:	str	r0, [sp, #76]	; 0x4c
   54ef8:	ldr	r0, [fp, #24]
   54efc:	sub	r0, r0, #1
   54f00:	str	r0, [sp, #32]
   54f04:	sub	r0, fp, #96	; 0x60
   54f08:	orr	r0, r0, #4
   54f0c:	str	r0, [sp, #28]
   54f10:	mla	r0, r6, r7, r4
   54f14:	mov	r4, r6
   54f18:	str	r0, [sp, #40]	; 0x28
   54f1c:	and	r0, r6, #1
   54f20:	str	r0, [sp, #36]	; 0x24
   54f24:	sub	r9, r6, r0
   54f28:	lsl	r0, r6, #1
   54f2c:	str	r0, [sp, #44]	; 0x2c
   54f30:	add	r0, r8, #2
   54f34:	str	r0, [sp, #64]	; 0x40
   54f38:	lsl	r0, r7, #4
   54f3c:	ldr	r6, [sp, #52]	; 0x34
   54f40:	cmp	r4, #1
   54f44:	add	r2, lr, r6, lsl #3
   54f48:	bge	54fa0 <GetDataSlab+0x20e44>
   54f4c:	b	55000 <GetDataSlab+0x20ea4>
   54f50:	ldr	r4, [sp, #28]
   54f54:	ldr	r2, [r4, r2]
   54f58:	add	lr, lr, r2, lsl #3
   54f5c:	add	r1, r2, r1
   54f60:	ldr	r2, [sp, #44]	; 0x2c
   54f64:	ldr	r4, [sp, #64]	; 0x40
   54f68:	ldr	r6, [sp, #60]	; 0x3c
   54f6c:	ldr	r8, [sp, #88]	; 0x58
   54f70:	add	r4, r4, r2
   54f74:	ldr	r2, [sp, #68]	; 0x44
   54f78:	str	r4, [sp, #64]	; 0x40
   54f7c:	ldr	r4, [sp, #56]	; 0x38
   54f80:	add	r6, r6, r4
   54f84:	cmp	r6, r2
   54f88:	str	r6, [sp, #60]	; 0x3c
   54f8c:	bge	550b8 <GetDataSlab+0x20f5c>
   54f90:	ldr	r6, [sp, #52]	; 0x34
   54f94:	cmp	r4, #1
   54f98:	add	r2, lr, r6, lsl #3
   54f9c:	blt	55000 <GetDataSlab+0x20ea4>
   54fa0:	mov	r7, #0
   54fa4:	beq	54fd8 <GetDataSlab+0x20e7c>
   54fa8:	ldr	r6, [sp, #64]	; 0x40
   54fac:	mov	r7, #0
   54fb0:	ldrh	r4, [r2]
   54fb4:	add	r7, r7, #2
   54fb8:	cmp	r9, r7
   54fbc:	strh	r4, [r6, #-2]
   54fc0:	add	r4, r2, ip
   54fc4:	add	r2, r2, r0
   54fc8:	ldrh	r4, [r4]
   54fcc:	strh	r4, [r6]
   54fd0:	add	r6, r6, #4
   54fd4:	bne	54fb0 <GetDataSlab+0x20e54>
   54fd8:	ldr	r6, [sp, #36]	; 0x24
   54fdc:	cmp	r6, #0
   54fe0:	ldr	r6, [sp, #40]	; 0x28
   54fe4:	beq	55000 <GetDataSlab+0x20ea4>
   54fe8:	ldr	r6, [sp, #60]	; 0x3c
   54fec:	ldrh	r4, [r2], ip
   54ff0:	add	r6, r8, r6, lsl #1
   54ff4:	add	r7, r6, r7, lsl #1
   54ff8:	ldr	r6, [sp, #40]	; 0x28
   54ffc:	strh	r4, [r7]
   55000:	ldr	r4, [sp, #48]	; 0x30
   55004:	add	r1, r6, r1
   55008:	add	lr, r2, r4, lsl #3
   5500c:	ldr	r2, [fp, #24]
   55010:	add	r1, r1, r4
   55014:	cmp	r2, #2
   55018:	blt	54f60 <GetDataSlab+0x20e04>
   5501c:	ldr	r8, [sp, #32]
   55020:	mov	r2, #0
   55024:	b	55054 <GetDataSlab+0x20ef8>
   55028:	ldr	r7, [sp, #72]	; 0x48
   5502c:	sub	r4, fp, #176	; 0xb0
   55030:	sub	r6, r6, sl
   55034:	ldr	r4, [r4, r2]
   55038:	ldr	r7, [r7, r2]
   5503c:	mla	r4, r7, r4, r6
   55040:	add	r1, r4, r1
   55044:	add	lr, lr, r4, lsl #3
   55048:	subs	r8, r8, #1
   5504c:	add	r2, r2, #4
   55050:	beq	54f60 <GetDataSlab+0x20e04>
   55054:	ldr	r4, [r3, r2]
   55058:	add	r4, r4, #1
   5505c:	str	r4, [r3, r2]
   55060:	ldr	r6, [r5, r2]
   55064:	sdiv	r7, r4, r6
   55068:	mls	r4, r7, r6, r4
   5506c:	cmp	r4, #0
   55070:	bne	54f50 <GetDataSlab+0x20df4>
   55074:	mov	r4, #0
   55078:	str	r4, [r3, r2]
   5507c:	ldr	r4, [sp, #76]	; 0x4c
   55080:	ldr	r6, [r4, r2]
   55084:	sdiv	r4, r1, r6
   55088:	mls	sl, r4, r6, r1
   5508c:	cmp	sl, #0
   55090:	bne	55028 <GetDataSlab+0x20ecc>
   55094:	ldr	r4, [sp, #72]	; 0x48
   55098:	ldr	r6, [r4, r2]
   5509c:	cmp	r6, #0
   550a0:	beq	55048 <GetDataSlab+0x20eec>
   550a4:	sub	r4, fp, #176	; 0xb0
   550a8:	ldr	r4, [r4, r2]
   550ac:	mla	r1, r4, r6, r1
   550b0:	mul	r4, r4, r6
   550b4:	b	55044 <GetDataSlab+0x20ee8>
   550b8:	mov	r2, #0
   550bc:	ldr	r0, [sp, #84]	; 0x54
   550c0:	cmp	r0, #13
   550c4:	bne	5b6a0 <GetDataSlab+0x27544>
   550c8:	ldr	r0, [fp, #16]
   550cc:	mov	r1, #0
   550d0:	sub	r5, fp, #176	; 0xb0
   550d4:	sub	r6, fp, #96	; 0x60
   550d8:	ldr	r0, [r0]
   550dc:	str	r0, [sp, #64]	; 0x40
   550e0:	sub	r0, r0, #1
   550e4:	str	r0, [fp, #-96]	; 0xffffffa0
   550e8:	ldr	r0, [fp, #8]
   550ec:	ldr	r0, [r0]
   550f0:	str	r0, [sp, #60]	; 0x3c
   550f4:	str	r0, [fp, #-176]	; 0xffffff50
   550f8:	ldr	r0, [fp, #20]
   550fc:	ldr	r2, [r0]
   55100:	ldr	r0, [fp, #24]
   55104:	cmp	r0, #2
   55108:	str	r2, [sp, #72]	; 0x48
   5510c:	str	r2, [sp, #76]	; 0x4c
   55110:	blt	55268 <GetDataSlab+0x2110c>
   55114:	ldr	r0, [fp, #8]
   55118:	ldr	r3, [sp, #60]	; 0x3c
   5511c:	mov	r4, #1
   55120:	mov	r9, #0
   55124:	mvn	lr, #15
   55128:	mov	r1, #0
   5512c:	sub	r7, r0, #4
   55130:	sub	ip, r0, #12
   55134:	ldr	r0, [sp, #72]	; 0x48
   55138:	mov	sl, r3
   5513c:	str	r0, [sp, #76]	; 0x4c
   55140:	b	55190 <GetDataSlab+0x21034>
   55144:	sub	r6, fp, #96	; 0x60
   55148:	sub	r5, fp, #176	; 0xb0
   5514c:	ldr	r2, [sp, #76]	; 0x4c
   55150:	add	ip, ip, #4
   55154:	str	r0, [r6, r4, lsl #2]
   55158:	ldr	r0, [fp, #12]
   5515c:	str	r3, [r5, r4, lsl #2]
   55160:	ldr	r0, [r0, r4, lsl #2]
   55164:	mla	r1, r0, sl, r1
   55168:	ldr	r0, [fp, #20]
   5516c:	mov	sl, r3
   55170:	mov	r3, r8
   55174:	ldr	r0, [r0, r4, lsl #2]
   55178:	add	r4, r4, #1
   5517c:	mul	r2, r0, r2
   55180:	ldr	r0, [fp, #24]
   55184:	str	r2, [sp, #76]	; 0x4c
   55188:	cmp	r4, r0
   5518c:	beq	55268 <GetDataSlab+0x2110c>
   55190:	ldr	r0, [fp, #16]
   55194:	add	r9, r9, #1
   55198:	cmp	r9, #4
   5519c:	ldr	r0, [r0, r4, lsl #2]
   551a0:	str	r3, [r5, r4, lsl #2]
   551a4:	sub	r0, r0, #1
   551a8:	str	r0, [r6, r4, lsl #2]
   551ac:	ldr	r6, [fp, #8]
   551b0:	ldr	r2, [r6, r4, lsl #2]
   551b4:	bcs	551c8 <GetDataSlab+0x2106c>
   551b8:	mov	r8, r2
   551bc:	mov	r6, r2
   551c0:	mov	r5, r4
   551c4:	b	55250 <GetDataSlab+0x210f4>
   551c8:	vmov.i32	q9, #1	; 0x00000001
   551cc:	vmov.i32	q10, #1	; 0x00000001
   551d0:	vmov.32	d23[1], r2
   551d4:	vmov.i32	q8, #1	; 0x00000001
   551d8:	bic	r6, r9, #3
   551dc:	bic	r8, r4, #3
   551e0:	sub	r5, r4, r6
   551e4:	vmov.32	d18[0], r3
   551e8:	vmov.32	d20[0], r0
   551ec:	mov	r0, ip
   551f0:	vorr	d16, d18, d18
   551f4:	vmov.i32	q9, #1	; 0x00000001
   551f8:	vorr	d18, d20, d20
   551fc:	vld1.32	{d20-d21}, [r0], lr
   55200:	subs	r8, r8, #4
   55204:	vrev64.32	q12, q10
   55208:	vext.8	q12, q12, q12, #8
   5520c:	vext.8	q11, q11, q12, #12
   55210:	vmul.i32	q9, q9, q12
   55214:	vmul.i32	q8, q11, q8
   55218:	vorr	q11, q12, q12
   5521c:	bne	551fc <GetDataSlab+0x210a0>
   55220:	vext.8	q11, q9, q8, #8
   55224:	vext.8	q12, q8, q8, #8
   55228:	mov	r8, r2
   5522c:	cmp	r9, r6
   55230:	vmul.i32	q0, q9, q11
   55234:	vmul.i32	q1, q8, q12
   55238:	vmul.i32	q8, q0, d0[1]
   5523c:	vmul.i32	q9, q1, d2[1]
   55240:	vmov.32	r0, d16[0]
   55244:	vmov.32	r3, d18[0]
   55248:	beq	55144 <GetDataSlab+0x20fe8>
   5524c:	vmov.32	r6, d20[0]
   55250:	mul	r3, r6, r3
   55254:	ldr	r6, [r7, r5, lsl #2]
   55258:	subs	r5, r5, #1
   5525c:	mul	r0, r0, r6
   55260:	bne	55250 <GetDataSlab+0x210f4>
   55264:	b	55144 <GetDataSlab+0x20fe8>
   55268:	ldr	r0, [sp, #80]	; 0x50
   5526c:	ldr	r5, [sp, #64]	; 0x40
   55270:	add	ip, r0, r1, lsl #3
   55274:	cmp	r5, #1
   55278:	bne	5ae1c <GetDataSlab+0x26cc0>
   5527c:	ldr	r0, [sp, #76]	; 0x4c
   55280:	ldr	r3, [fp, #20]
   55284:	ldr	sl, [sp, #60]	; 0x3c
   55288:	cmp	r0, #1
   5528c:	blt	5aed4 <GetDataSlab+0x26d78>
   55290:	mov	r7, r3
   55294:	ldr	r3, [sp, #72]	; 0x48
   55298:	mov	r2, #1
   5529c:	ldr	lr, [sp, #88]	; 0x58
   552a0:	add	r9, r7, #4
   552a4:	sub	r0, r3, #2
   552a8:	add	r2, r2, r0, lsr #1
   552ac:	lsr	r0, r0, #1
   552b0:	str	r0, [sp, #44]	; 0x2c
   552b4:	mov	r0, #0
   552b8:	and	r6, r2, #1
   552bc:	str	r0, [sp, #80]	; 0x50
   552c0:	sub	r2, r2, r6
   552c4:	str	r6, [sp, #52]	; 0x34
   552c8:	str	r2, [sp, #36]	; 0x24
   552cc:	sub	r2, fp, #136	; 0x88
   552d0:	orr	r4, r2, #4
   552d4:	sub	r2, fp, #176	; 0xb0
   552d8:	orr	r2, r2, #4
   552dc:	str	r2, [sp, #84]	; 0x54
   552e0:	ldr	r2, [fp, #24]
   552e4:	sub	r2, r2, #1
   552e8:	str	r2, [sp, #56]	; 0x38
   552ec:	sub	r2, fp, #96	; 0x60
   552f0:	orr	r2, r2, #4
   552f4:	str	r2, [sp, #40]	; 0x28
   552f8:	lsl	r2, r3, #1
   552fc:	str	r2, [sp, #68]	; 0x44
   55300:	bic	r2, r3, #1
   55304:	str	r2, [sp, #48]	; 0x30
   55308:	ldr	r2, [sp, #92]	; 0x5c
   5530c:	ldr	r7, [r2], #4
   55310:	str	r2, [sp, #92]	; 0x5c
   55314:	str	r7, [sp, #64]	; 0x40
   55318:	ldr	r8, [sp, #92]	; 0x5c
   5531c:	cmp	r3, #1
   55320:	bge	5536c <GetDataSlab+0x21210>
   55324:	b	55454 <GetDataSlab+0x212f8>
   55328:	ldr	r2, [sp, #40]	; 0x28
   5532c:	ldr	r0, [r2, r0]
   55330:	add	ip, ip, r0, lsl #3
   55334:	add	r1, r0, r1
   55338:	ldr	r0, [sp, #68]	; 0x44
   5533c:	ldr	r3, [sp, #72]	; 0x48
   55340:	ldr	r2, [sp, #80]	; 0x50
   55344:	add	lr, lr, r0
   55348:	ldr	r0, [sp, #76]	; 0x4c
   5534c:	add	r2, r2, r3
   55350:	str	r2, [sp, #80]	; 0x50
   55354:	cmp	r2, r0
   55358:	mov	r2, #0
   5535c:	bge	5b6a0 <GetDataSlab+0x27544>
   55360:	ldr	r8, [sp, #92]	; 0x5c
   55364:	cmp	r3, #1
   55368:	blt	55454 <GetDataSlab+0x212f8>
   5536c:	mov	r3, #0
   55370:	beq	55424 <GetDataSlab+0x212c8>
   55374:	ldr	r0, [sp, #64]	; 0x40
   55378:	mov	r2, #0
   5537c:	add	r6, ip, r0, lsl #3
   55380:	ldr	r0, [sp, #44]	; 0x2c
   55384:	cmp	r0, #0
   55388:	beq	553dc <GetDataSlab+0x21280>
   5538c:	ldr	r0, [sp, #36]	; 0x24
   55390:	mov	r3, lr
   55394:	mov	sl, r6
   55398:	mov	r8, r6
   5539c:	mov	r5, #32
   553a0:	vld1.64	{d16-d17}, [r8], r5
   553a4:	add	r7, sl, #16
   553a8:	subs	r0, r0, #2
   553ac:	add	r2, r2, #4
   553b0:	mov	sl, r8
   553b4:	vmovn.i64	d16, q8
   553b8:	vuzp.16	d16, d17
   553bc:	vst1.32	{d16[0]}, [r3]
   553c0:	vld1.64	{d16-d17}, [r7]
   553c4:	add	r7, r3, #4
   553c8:	add	r3, r3, #8
   553cc:	vmovn.i64	d16, q8
   553d0:	vuzp.16	d16, d17
   553d4:	vst1.32	{d16[0]}, [r7]
   553d8:	bne	553a0 <GetDataSlab+0x21244>
   553dc:	ldr	r0, [sp, #52]	; 0x34
   553e0:	ldr	r8, [sp, #92]	; 0x5c
   553e4:	ldr	sl, [sp, #60]	; 0x3c
   553e8:	cmp	r0, #0
   553ec:	ldr	r0, [sp, #88]	; 0x58
   553f0:	beq	55414 <GetDataSlab+0x212b8>
   553f4:	ldr	r3, [sp, #80]	; 0x50
   553f8:	add	r0, r0, r3, lsl #1
   553fc:	add	r3, r6, r2, lsl #3
   55400:	vld1.64	{d16-d17}, [r3]
   55404:	add	r0, r0, r2, lsl #1
   55408:	vmovn.i64	d16, q8
   5540c:	vuzp.16	d16, d17
   55410:	vst1.32	{d16[0]}, [r0]
   55414:	ldr	r0, [sp, #72]	; 0x48
   55418:	ldr	r3, [sp, #48]	; 0x30
   5541c:	cmp	r0, r3
   55420:	beq	55454 <GetDataSlab+0x212f8>
   55424:	ldr	r5, [sp, #64]	; 0x40
   55428:	ldr	r2, [sp, #72]	; 0x48
   5542c:	mov	r0, #0
   55430:	sub	r0, r0, r3, lsl #1
   55434:	add	r7, ip, r5, lsl #3
   55438:	sub	r2, r2, r3
   5543c:	add	r3, r7, r3, lsl #3
   55440:	ldrh	r7, [r3], #8
   55444:	subs	r2, r2, #1
   55448:	strh	r7, [lr, -r0]
   5544c:	sub	r0, r0, #2
   55450:	bne	55440 <GetDataSlab+0x212e4>
   55454:	ldr	r0, [fp, #24]
   55458:	add	ip, ip, sl, lsl #3
   5545c:	add	r1, r1, sl
   55460:	cmp	r0, #2
   55464:	blt	55338 <GetDataSlab+0x211dc>
   55468:	ldr	r2, [sp, #56]	; 0x38
   5546c:	mov	r0, #0
   55470:	b	5549c <GetDataSlab+0x21340>
   55474:	sub	r5, fp, #176	; 0xb0
   55478:	sub	r3, r3, r7
   5547c:	ldr	r6, [r5, r0]
   55480:	ldr	r5, [r8, r0]
   55484:	mla	r3, r5, r6, r3
   55488:	add	r1, r3, r1
   5548c:	add	ip, ip, r3, lsl #3
   55490:	subs	r2, r2, #1
   55494:	add	r0, r0, #4
   55498:	beq	55338 <GetDataSlab+0x211dc>
   5549c:	ldr	r3, [r4, r0]
   554a0:	add	r3, r3, #1
   554a4:	str	r3, [r4, r0]
   554a8:	ldr	r7, [r9, r0]
   554ac:	sdiv	r6, r3, r7
   554b0:	mls	r3, r6, r7, r3
   554b4:	cmp	r3, #0
   554b8:	bne	55328 <GetDataSlab+0x211cc>
   554bc:	mov	r3, #0
   554c0:	str	r3, [r4, r0]
   554c4:	ldr	r3, [sp, #84]	; 0x54
   554c8:	ldr	r3, [r3, r0]
   554cc:	sdiv	r6, r1, r3
   554d0:	mls	r7, r6, r3, r1
   554d4:	cmp	r7, #0
   554d8:	bne	55474 <GetDataSlab+0x21318>
   554dc:	ldr	r3, [r8, r0]
   554e0:	cmp	r3, #0
   554e4:	beq	55490 <GetDataSlab+0x21334>
   554e8:	sub	r5, fp, #176	; 0xb0
   554ec:	ldr	r5, [r5, r0]
   554f0:	mla	r1, r5, r3, r1
   554f4:	mul	r3, r5, r3
   554f8:	b	5548c <GetDataSlab+0x21330>
   554fc:	ldr	r0, [sp, #76]	; 0x4c
   55500:	ldr	r2, [fp, #20]
   55504:	cmp	r0, #1
   55508:	sub	r0, fp, #176	; 0xb0
   5550c:	blt	5b69c <GetDataSlab+0x27540>
   55510:	orr	r0, r0, #4
   55514:	ldr	sl, [fp, #12]
   55518:	sub	r3, fp, #136	; 0x88
   5551c:	add	r2, r2, #4
   55520:	str	r0, [sp, #80]	; 0x50
   55524:	ldr	r0, [fp, #24]
   55528:	orr	lr, r3, #4
   5552c:	str	r2, [sp, #84]	; 0x54
   55530:	sub	r0, r0, #1
   55534:	str	r0, [sp, #60]	; 0x3c
   55538:	sub	r0, fp, #96	; 0x60
   5553c:	orr	r0, r0, #4
   55540:	str	r0, [sp, #56]	; 0x38
   55544:	ldr	r0, [sl], #4
   55548:	str	r0, [sp, #64]	; 0x40
   5554c:	mov	r0, #0
   55550:	str	r0, [sp, #68]	; 0x44
   55554:	b	55588 <GetDataSlab+0x2142c>
   55558:	ldr	r0, [sp, #56]	; 0x38
   5555c:	ldr	r0, [r0, r2]
   55560:	add	r8, r8, r0
   55564:	add	r7, r0, r7
   55568:	ldr	r3, [sp, #68]	; 0x44
   5556c:	ldr	r0, [sp, #76]	; 0x4c
   55570:	mov	r2, #0
   55574:	str	r6, [sp, #72]	; 0x48
   55578:	add	r3, r1, r3
   5557c:	cmp	r3, r0
   55580:	str	r3, [sp, #68]	; 0x44
   55584:	bge	5b6a0 <GetDataSlab+0x27544>
   55588:	ldr	r0, [sp, #64]	; 0x40
   5558c:	cmp	r1, #1
   55590:	add	r2, r0, r7
   55594:	add	r7, r8, r0
   55598:	blt	555ec <GetDataSlab+0x21490>
   5559c:	ldr	r0, [sp, #88]	; 0x58
   555a0:	ldr	r1, [sp, #68]	; 0x44
   555a4:	ldr	ip, [fp, #8]
   555a8:	ldr	r6, [fp, #16]
   555ac:	mov	r3, #0
   555b0:	add	r4, r0, r1, lsl #2
   555b4:	ldr	r0, [fp, #20]
   555b8:	ldrb	r1, [r7]
   555bc:	str	r1, [r4, r3, lsl #2]
   555c0:	add	r3, r3, #1
   555c4:	ldr	r5, [r6]
   555c8:	ldr	r1, [r0]
   555cc:	add	r2, r5, r2
   555d0:	add	r7, r7, r5
   555d4:	cmp	r3, r1
   555d8:	blt	555b8 <GetDataSlab+0x2145c>
   555dc:	ldr	r0, [fp, #12]
   555e0:	ldr	r6, [ip]
   555e4:	ldr	r0, [r0]
   555e8:	b	555f0 <GetDataSlab+0x21494>
   555ec:	ldr	r6, [sp, #72]	; 0x48
   555f0:	mls	r3, r5, r1, r6
   555f4:	str	r0, [sp, #64]	; 0x40
   555f8:	sub	r3, r3, r0
   555fc:	ldr	r0, [fp, #24]
   55600:	add	r8, r7, r3
   55604:	add	r7, r3, r2
   55608:	cmp	r0, #2
   5560c:	blt	55568 <GetDataSlab+0x2140c>
   55610:	ldr	r9, [sp, #60]	; 0x3c
   55614:	mov	r2, #0
   55618:	b	55644 <GetDataSlab+0x214e8>
   5561c:	sub	r0, fp, #176	; 0xb0
   55620:	ldr	r4, [sl, r2]
   55624:	sub	r3, r3, ip
   55628:	ldr	r0, [r0, r2]
   5562c:	mla	r0, r4, r0, r3
   55630:	add	r7, r0, r7
   55634:	add	r8, r8, r0
   55638:	subs	r9, r9, #1
   5563c:	add	r2, r2, #4
   55640:	beq	55568 <GetDataSlab+0x2140c>
   55644:	ldr	r3, [lr, r2]
   55648:	ldr	r0, [sp, #84]	; 0x54
   5564c:	add	r3, r3, #1
   55650:	str	r3, [lr, r2]
   55654:	ldr	r0, [r0, r2]
   55658:	sdiv	r4, r3, r0
   5565c:	mls	r0, r4, r0, r3
   55660:	cmp	r0, #0
   55664:	bne	55558 <GetDataSlab+0x213fc>
   55668:	mov	r0, #0
   5566c:	str	r0, [lr, r2]
   55670:	ldr	r0, [sp, #80]	; 0x50
   55674:	ldr	r3, [r0, r2]
   55678:	sdiv	r0, r7, r3
   5567c:	mls	ip, r0, r3, r7
   55680:	cmp	ip, #0
   55684:	bne	5561c <GetDataSlab+0x214c0>
   55688:	ldr	r3, [sl, r2]
   5568c:	cmp	r3, #0
   55690:	beq	55638 <GetDataSlab+0x214dc>
   55694:	sub	r0, fp, #176	; 0xb0
   55698:	ldr	r0, [r0, r2]
   5569c:	mla	r7, r0, r3, r7
   556a0:	mla	r8, r0, r3, r8
   556a4:	subs	r9, r9, #1
   556a8:	add	r2, r2, #4
   556ac:	bne	55644 <GetDataSlab+0x214e8>
   556b0:	b	55568 <GetDataSlab+0x2140c>
   556b4:	ldr	r0, [sp, #76]	; 0x4c
   556b8:	ldr	r2, [fp, #20]
   556bc:	cmp	r0, #1
   556c0:	sub	r0, fp, #176	; 0xb0
   556c4:	blt	5b69c <GetDataSlab+0x27540>
   556c8:	orr	r0, r0, #4
   556cc:	ldr	lr, [fp, #12]
   556d0:	mov	r3, r8
   556d4:	sub	r6, fp, #136	; 0x88
   556d8:	add	r2, r2, #4
   556dc:	str	r0, [sp, #80]	; 0x50
   556e0:	ldr	r0, [fp, #24]
   556e4:	orr	r8, r6, #4
   556e8:	str	r2, [sp, #84]	; 0x54
   556ec:	sub	r0, r0, #1
   556f0:	str	r0, [sp, #60]	; 0x3c
   556f4:	orr	r0, r3, #4
   556f8:	str	r0, [sp, #56]	; 0x38
   556fc:	ldr	r0, [lr], #4
   55700:	str	r0, [sp, #64]	; 0x40
   55704:	mov	r0, #0
   55708:	str	r0, [sp, #68]	; 0x44
   5570c:	b	55740 <GetDataSlab+0x215e4>
   55710:	ldr	r0, [sp, #56]	; 0x38
   55714:	ldr	r0, [r0, r2]
   55718:	add	sl, sl, r0, lsl #1
   5571c:	add	r7, r0, r7
   55720:	ldr	r3, [sp, #68]	; 0x44
   55724:	ldr	r0, [sp, #76]	; 0x4c
   55728:	mov	r2, #0
   5572c:	str	r6, [sp, #72]	; 0x48
   55730:	add	r3, r1, r3
   55734:	cmp	r3, r0
   55738:	str	r3, [sp, #68]	; 0x44
   5573c:	bge	5b6a0 <GetDataSlab+0x27544>
   55740:	ldr	r0, [sp, #64]	; 0x40
   55744:	cmp	r1, #1
   55748:	add	r2, r0, r7
   5574c:	add	r7, sl, r0, lsl #1
   55750:	blt	557a4 <GetDataSlab+0x21648>
   55754:	ldr	r0, [sp, #88]	; 0x58
   55758:	ldr	r1, [sp, #68]	; 0x44
   5575c:	ldr	ip, [fp, #8]
   55760:	ldr	r6, [fp, #16]
   55764:	mov	r3, #0
   55768:	add	r4, r0, r1, lsl #2
   5576c:	ldr	r0, [fp, #20]
   55770:	ldrsh	r1, [r7]
   55774:	str	r1, [r4, r3, lsl #2]
   55778:	add	r3, r3, #1
   5577c:	ldr	r5, [r6]
   55780:	ldr	r1, [r0]
   55784:	add	r7, r7, r5, lsl #1
   55788:	add	r2, r5, r2
   5578c:	cmp	r3, r1
   55790:	blt	55770 <GetDataSlab+0x21614>
   55794:	ldr	r0, [fp, #12]
   55798:	ldr	r6, [ip]
   5579c:	ldr	r0, [r0]
   557a0:	b	557a8 <GetDataSlab+0x2164c>
   557a4:	ldr	r6, [sp, #72]	; 0x48
   557a8:	mls	r3, r5, r1, r6
   557ac:	str	r0, [sp, #64]	; 0x40
   557b0:	sub	r3, r3, r0
   557b4:	ldr	r0, [fp, #24]
   557b8:	add	sl, r7, r3, lsl #1
   557bc:	add	r7, r3, r2
   557c0:	cmp	r0, #2
   557c4:	blt	55720 <GetDataSlab+0x215c4>
   557c8:	ldr	r9, [sp, #60]	; 0x3c
   557cc:	mov	r2, #0
   557d0:	b	557fc <GetDataSlab+0x216a0>
   557d4:	sub	r0, fp, #176	; 0xb0
   557d8:	ldr	r4, [lr, r2]
   557dc:	sub	r3, r3, ip
   557e0:	ldr	r0, [r0, r2]
   557e4:	mla	r0, r4, r0, r3
   557e8:	add	r7, r0, r7
   557ec:	add	sl, sl, r0, lsl #1
   557f0:	subs	r9, r9, #1
   557f4:	add	r2, r2, #4
   557f8:	beq	55720 <GetDataSlab+0x215c4>
   557fc:	ldr	r3, [r8, r2]
   55800:	ldr	r0, [sp, #84]	; 0x54
   55804:	add	r3, r3, #1
   55808:	str	r3, [r8, r2]
   5580c:	ldr	r0, [r0, r2]
   55810:	sdiv	r4, r3, r0
   55814:	mls	r0, r4, r0, r3
   55818:	cmp	r0, #0
   5581c:	bne	55710 <GetDataSlab+0x215b4>
   55820:	mov	r0, #0
   55824:	str	r0, [r8, r2]
   55828:	ldr	r0, [sp, #80]	; 0x50
   5582c:	ldr	r3, [r0, r2]
   55830:	sdiv	r0, r7, r3
   55834:	mls	ip, r0, r3, r7
   55838:	cmp	ip, #0
   5583c:	bne	557d4 <GetDataSlab+0x21678>
   55840:	ldr	r3, [lr, r2]
   55844:	cmp	r3, #0
   55848:	beq	557f0 <GetDataSlab+0x21694>
   5584c:	sub	r0, fp, #176	; 0xb0
   55850:	ldr	r0, [r0, r2]
   55854:	mla	r7, r0, r3, r7
   55858:	mul	r0, r0, r3
   5585c:	b	557ec <GetDataSlab+0x21690>
   55860:	ldr	r0, [sp, #76]	; 0x4c
   55864:	ldr	r2, [fp, #20]
   55868:	cmp	r0, #1
   5586c:	sub	r0, fp, #176	; 0xb0
   55870:	blt	5b69c <GetDataSlab+0x27540>
   55874:	orr	r0, r0, #4
   55878:	ldr	lr, [fp, #12]
   5587c:	mov	r3, r8
   55880:	sub	r6, fp, #136	; 0x88
   55884:	add	r2, r2, #4
   55888:	str	r0, [sp, #80]	; 0x50
   5588c:	ldr	r0, [fp, #24]
   55890:	orr	r8, r6, #4
   55894:	str	r2, [sp, #84]	; 0x54
   55898:	sub	r0, r0, #1
   5589c:	str	r0, [sp, #60]	; 0x3c
   558a0:	orr	r0, r3, #4
   558a4:	str	r0, [sp, #56]	; 0x38
   558a8:	ldr	r0, [lr], #4
   558ac:	str	r0, [sp, #64]	; 0x40
   558b0:	mov	r0, #0
   558b4:	str	r0, [sp, #68]	; 0x44
   558b8:	b	558ec <GetDataSlab+0x21790>
   558bc:	ldr	r0, [sp, #56]	; 0x38
   558c0:	ldr	r0, [r0, r2]
   558c4:	add	sl, sl, r0, lsl #1
   558c8:	add	r7, r0, r7
   558cc:	ldr	r3, [sp, #68]	; 0x44
   558d0:	ldr	r0, [sp, #76]	; 0x4c
   558d4:	mov	r2, #0
   558d8:	str	r6, [sp, #72]	; 0x48
   558dc:	add	r3, r1, r3
   558e0:	cmp	r3, r0
   558e4:	str	r3, [sp, #68]	; 0x44
   558e8:	bge	5b6a0 <GetDataSlab+0x27544>
   558ec:	ldr	r0, [sp, #64]	; 0x40
   558f0:	cmp	r1, #1
   558f4:	add	r2, r0, r7
   558f8:	add	r7, sl, r0, lsl #1
   558fc:	blt	55950 <GetDataSlab+0x217f4>
   55900:	ldr	r0, [sp, #88]	; 0x58
   55904:	ldr	r1, [sp, #68]	; 0x44
   55908:	ldr	ip, [fp, #8]
   5590c:	ldr	r6, [fp, #16]
   55910:	mov	r3, #0
   55914:	add	r4, r0, r1, lsl #2
   55918:	ldr	r0, [fp, #20]
   5591c:	ldrh	r1, [r7]
   55920:	str	r1, [r4, r3, lsl #2]
   55924:	add	r3, r3, #1
   55928:	ldr	r5, [r6]
   5592c:	ldr	r1, [r0]
   55930:	add	r7, r7, r5, lsl #1
   55934:	add	r2, r5, r2
   55938:	cmp	r3, r1
   5593c:	blt	5591c <GetDataSlab+0x217c0>
   55940:	ldr	r0, [fp, #12]
   55944:	ldr	r6, [ip]
   55948:	ldr	r0, [r0]
   5594c:	b	55954 <GetDataSlab+0x217f8>
   55950:	ldr	r6, [sp, #72]	; 0x48
   55954:	mls	r3, r5, r1, r6
   55958:	str	r0, [sp, #64]	; 0x40
   5595c:	sub	r3, r3, r0
   55960:	ldr	r0, [fp, #24]
   55964:	add	sl, r7, r3, lsl #1
   55968:	add	r7, r3, r2
   5596c:	cmp	r0, #2
   55970:	blt	558cc <GetDataSlab+0x21770>
   55974:	ldr	r9, [sp, #60]	; 0x3c
   55978:	mov	r2, #0
   5597c:	b	559a8 <GetDataSlab+0x2184c>
   55980:	sub	r0, fp, #176	; 0xb0
   55984:	ldr	r4, [lr, r2]
   55988:	sub	r3, r3, ip
   5598c:	ldr	r0, [r0, r2]
   55990:	mla	r0, r4, r0, r3
   55994:	add	r7, r0, r7
   55998:	add	sl, sl, r0, lsl #1
   5599c:	subs	r9, r9, #1
   559a0:	add	r2, r2, #4
   559a4:	beq	558cc <GetDataSlab+0x21770>
   559a8:	ldr	r3, [r8, r2]
   559ac:	ldr	r0, [sp, #84]	; 0x54
   559b0:	add	r3, r3, #1
   559b4:	str	r3, [r8, r2]
   559b8:	ldr	r0, [r0, r2]
   559bc:	sdiv	r4, r3, r0
   559c0:	mls	r0, r4, r0, r3
   559c4:	cmp	r0, #0
   559c8:	bne	558bc <GetDataSlab+0x21760>
   559cc:	mov	r0, #0
   559d0:	str	r0, [r8, r2]
   559d4:	ldr	r0, [sp, #80]	; 0x50
   559d8:	ldr	r3, [r0, r2]
   559dc:	sdiv	r0, r7, r3
   559e0:	mls	ip, r0, r3, r7
   559e4:	cmp	ip, #0
   559e8:	bne	55980 <GetDataSlab+0x21824>
   559ec:	ldr	r3, [lr, r2]
   559f0:	cmp	r3, #0
   559f4:	beq	5599c <GetDataSlab+0x21840>
   559f8:	sub	r0, fp, #176	; 0xb0
   559fc:	ldr	r0, [r0, r2]
   55a00:	mla	r7, r0, r3, r7
   55a04:	mul	r0, r0, r3
   55a08:	b	55998 <GetDataSlab+0x2183c>
   55a0c:	ldr	r0, [sp, #76]	; 0x4c
   55a10:	ldr	r2, [fp, #20]
   55a14:	cmp	r0, #1
   55a18:	sub	r0, fp, #176	; 0xb0
   55a1c:	blt	5b69c <GetDataSlab+0x27540>
   55a20:	orr	r0, r0, #4
   55a24:	ldr	sl, [fp, #12]
   55a28:	sub	r3, fp, #136	; 0x88
   55a2c:	add	r2, r2, #4
   55a30:	str	r0, [sp, #80]	; 0x50
   55a34:	ldr	r0, [fp, #24]
   55a38:	orr	lr, r3, #4
   55a3c:	str	r2, [sp, #84]	; 0x54
   55a40:	sub	r0, r0, #1
   55a44:	str	r0, [sp, #60]	; 0x3c
   55a48:	sub	r0, fp, #96	; 0x60
   55a4c:	orr	r0, r0, #4
   55a50:	str	r0, [sp, #56]	; 0x38
   55a54:	ldr	r0, [sl], #4
   55a58:	str	r0, [sp, #64]	; 0x40
   55a5c:	mov	r0, #0
   55a60:	str	r0, [sp, #68]	; 0x44
   55a64:	b	55a98 <GetDataSlab+0x2193c>
   55a68:	ldr	r0, [sp, #56]	; 0x38
   55a6c:	ldr	r0, [r0, r2]
   55a70:	add	r8, r8, r0, lsl #2
   55a74:	add	r7, r0, r7
   55a78:	ldr	r3, [sp, #68]	; 0x44
   55a7c:	ldr	r0, [sp, #76]	; 0x4c
   55a80:	mov	r2, #0
   55a84:	str	r6, [sp, #72]	; 0x48
   55a88:	add	r3, r1, r3
   55a8c:	cmp	r3, r0
   55a90:	str	r3, [sp, #68]	; 0x44
   55a94:	bge	5b6a0 <GetDataSlab+0x27544>
   55a98:	ldr	r0, [sp, #64]	; 0x40
   55a9c:	cmp	r1, #1
   55aa0:	add	r2, r0, r7
   55aa4:	add	r7, r8, r0, lsl #2
   55aa8:	blt	55afc <GetDataSlab+0x219a0>
   55aac:	ldr	r0, [sp, #88]	; 0x58
   55ab0:	ldr	r1, [sp, #68]	; 0x44
   55ab4:	ldr	ip, [fp, #8]
   55ab8:	ldr	r6, [fp, #16]
   55abc:	mov	r3, #0
   55ac0:	add	r4, r0, r1, lsl #2
   55ac4:	ldr	r0, [fp, #20]
   55ac8:	ldr	r1, [r7]
   55acc:	str	r1, [r4, r3, lsl #2]
   55ad0:	add	r3, r3, #1
   55ad4:	ldr	r5, [r6]
   55ad8:	ldr	r1, [r0]
   55adc:	add	r7, r7, r5, lsl #2
   55ae0:	add	r2, r5, r2
   55ae4:	cmp	r3, r1
   55ae8:	blt	55ac8 <GetDataSlab+0x2196c>
   55aec:	ldr	r0, [fp, #12]
   55af0:	ldr	r6, [ip]
   55af4:	ldr	r0, [r0]
   55af8:	b	55b00 <GetDataSlab+0x219a4>
   55afc:	ldr	r6, [sp, #72]	; 0x48
   55b00:	mls	r3, r5, r1, r6
   55b04:	str	r0, [sp, #64]	; 0x40
   55b08:	sub	r3, r3, r0
   55b0c:	ldr	r0, [fp, #24]
   55b10:	add	r8, r7, r3, lsl #2
   55b14:	add	r7, r3, r2
   55b18:	cmp	r0, #2
   55b1c:	blt	55a78 <GetDataSlab+0x2191c>
   55b20:	ldr	r9, [sp, #60]	; 0x3c
   55b24:	mov	r2, #0
   55b28:	b	55b54 <GetDataSlab+0x219f8>
   55b2c:	sub	r0, fp, #176	; 0xb0
   55b30:	ldr	r4, [sl, r2]
   55b34:	sub	r3, r3, ip
   55b38:	ldr	r0, [r0, r2]
   55b3c:	mla	r0, r4, r0, r3
   55b40:	add	r7, r0, r7
   55b44:	add	r8, r8, r0, lsl #2
   55b48:	subs	r9, r9, #1
   55b4c:	add	r2, r2, #4
   55b50:	beq	55a78 <GetDataSlab+0x2191c>
   55b54:	ldr	r3, [lr, r2]
   55b58:	ldr	r0, [sp, #84]	; 0x54
   55b5c:	add	r3, r3, #1
   55b60:	str	r3, [lr, r2]
   55b64:	ldr	r0, [r0, r2]
   55b68:	sdiv	r4, r3, r0
   55b6c:	mls	r0, r4, r0, r3
   55b70:	cmp	r0, #0
   55b74:	bne	55a68 <GetDataSlab+0x2190c>
   55b78:	mov	r0, #0
   55b7c:	str	r0, [lr, r2]
   55b80:	ldr	r0, [sp, #80]	; 0x50
   55b84:	ldr	r3, [r0, r2]
   55b88:	sdiv	r0, r7, r3
   55b8c:	mls	ip, r0, r3, r7
   55b90:	cmp	ip, #0
   55b94:	bne	55b2c <GetDataSlab+0x219d0>
   55b98:	ldr	r3, [sl, r2]
   55b9c:	cmp	r3, #0
   55ba0:	beq	55b48 <GetDataSlab+0x219ec>
   55ba4:	sub	r0, fp, #176	; 0xb0
   55ba8:	ldr	r0, [r0, r2]
   55bac:	mla	r7, r0, r3, r7
   55bb0:	mul	r0, r0, r3
   55bb4:	b	55b44 <GetDataSlab+0x219e8>
   55bb8:	ldr	r0, [sp, #76]	; 0x4c
   55bbc:	ldr	r2, [fp, #20]
   55bc0:	cmp	r0, #1
   55bc4:	sub	r0, fp, #176	; 0xb0
   55bc8:	blt	5b69c <GetDataSlab+0x27540>
   55bcc:	orr	r0, r0, #4
   55bd0:	ldr	sl, [fp, #12]
   55bd4:	sub	r3, fp, #136	; 0x88
   55bd8:	add	r2, r2, #4
   55bdc:	str	r0, [sp, #80]	; 0x50
   55be0:	ldr	r0, [fp, #24]
   55be4:	orr	lr, r3, #4
   55be8:	str	r2, [sp, #84]	; 0x54
   55bec:	sub	r0, r0, #1
   55bf0:	str	r0, [sp, #60]	; 0x3c
   55bf4:	sub	r0, fp, #96	; 0x60
   55bf8:	orr	r0, r0, #4
   55bfc:	str	r0, [sp, #56]	; 0x38
   55c00:	ldr	r0, [sl], #4
   55c04:	str	r0, [sp, #64]	; 0x40
   55c08:	mov	r0, #0
   55c0c:	str	r0, [sp, #68]	; 0x44
   55c10:	b	55c44 <GetDataSlab+0x21ae8>
   55c14:	ldr	r0, [sp, #56]	; 0x38
   55c18:	ldr	r0, [r0, r2]
   55c1c:	add	r8, r8, r0, lsl #2
   55c20:	add	r7, r0, r7
   55c24:	ldr	r3, [sp, #68]	; 0x44
   55c28:	ldr	r0, [sp, #76]	; 0x4c
   55c2c:	mov	r2, #0
   55c30:	str	r6, [sp, #72]	; 0x48
   55c34:	add	r3, r1, r3
   55c38:	cmp	r3, r0
   55c3c:	str	r3, [sp, #68]	; 0x44
   55c40:	bge	5b6a0 <GetDataSlab+0x27544>
   55c44:	ldr	r0, [sp, #64]	; 0x40
   55c48:	cmp	r1, #1
   55c4c:	add	r2, r0, r7
   55c50:	add	r7, r8, r0, lsl #2
   55c54:	blt	55ca8 <GetDataSlab+0x21b4c>
   55c58:	ldr	r0, [sp, #88]	; 0x58
   55c5c:	ldr	r1, [sp, #68]	; 0x44
   55c60:	ldr	ip, [fp, #8]
   55c64:	ldr	r6, [fp, #16]
   55c68:	mov	r3, #0
   55c6c:	add	r4, r0, r1, lsl #2
   55c70:	ldr	r0, [fp, #20]
   55c74:	ldr	r1, [r7]
   55c78:	str	r1, [r4, r3, lsl #2]
   55c7c:	add	r3, r3, #1
   55c80:	ldr	r5, [r6]
   55c84:	ldr	r1, [r0]
   55c88:	add	r7, r7, r5, lsl #2
   55c8c:	add	r2, r5, r2
   55c90:	cmp	r3, r1
   55c94:	blt	55c74 <GetDataSlab+0x21b18>
   55c98:	ldr	r0, [fp, #12]
   55c9c:	ldr	r6, [ip]
   55ca0:	ldr	r0, [r0]
   55ca4:	b	55cac <GetDataSlab+0x21b50>
   55ca8:	ldr	r6, [sp, #72]	; 0x48
   55cac:	mls	r3, r5, r1, r6
   55cb0:	str	r0, [sp, #64]	; 0x40
   55cb4:	sub	r3, r3, r0
   55cb8:	ldr	r0, [fp, #24]
   55cbc:	add	r8, r7, r3, lsl #2
   55cc0:	add	r7, r3, r2
   55cc4:	cmp	r0, #2
   55cc8:	blt	55c24 <GetDataSlab+0x21ac8>
   55ccc:	ldr	r9, [sp, #60]	; 0x3c
   55cd0:	mov	r2, #0
   55cd4:	b	55d00 <GetDataSlab+0x21ba4>
   55cd8:	sub	r0, fp, #176	; 0xb0
   55cdc:	ldr	r4, [sl, r2]
   55ce0:	sub	r3, r3, ip
   55ce4:	ldr	r0, [r0, r2]
   55ce8:	mla	r0, r4, r0, r3
   55cec:	add	r7, r0, r7
   55cf0:	add	r8, r8, r0, lsl #2
   55cf4:	subs	r9, r9, #1
   55cf8:	add	r2, r2, #4
   55cfc:	beq	55c24 <GetDataSlab+0x21ac8>
   55d00:	ldr	r3, [lr, r2]
   55d04:	ldr	r0, [sp, #84]	; 0x54
   55d08:	add	r3, r3, #1
   55d0c:	str	r3, [lr, r2]
   55d10:	ldr	r0, [r0, r2]
   55d14:	sdiv	r4, r3, r0
   55d18:	mls	r0, r4, r0, r3
   55d1c:	cmp	r0, #0
   55d20:	bne	55c14 <GetDataSlab+0x21ab8>
   55d24:	mov	r0, #0
   55d28:	str	r0, [lr, r2]
   55d2c:	ldr	r0, [sp, #80]	; 0x50
   55d30:	ldr	r3, [r0, r2]
   55d34:	sdiv	r0, r7, r3
   55d38:	mls	ip, r0, r3, r7
   55d3c:	cmp	ip, #0
   55d40:	bne	55cd8 <GetDataSlab+0x21b7c>
   55d44:	ldr	r3, [sl, r2]
   55d48:	cmp	r3, #0
   55d4c:	beq	55cf4 <GetDataSlab+0x21b98>
   55d50:	sub	r0, fp, #176	; 0xb0
   55d54:	ldr	r0, [r0, r2]
   55d58:	mla	r7, r0, r3, r7
   55d5c:	mul	r0, r0, r3
   55d60:	b	55cf0 <GetDataSlab+0x21b94>
   55d64:	ldr	r0, [sp, #76]	; 0x4c
   55d68:	ldr	r2, [fp, #20]
   55d6c:	cmp	r0, #1
   55d70:	sub	r0, fp, #176	; 0xb0
   55d74:	blt	5b69c <GetDataSlab+0x27540>
   55d78:	orr	r0, r0, #4
   55d7c:	ldr	lr, [fp, #12]
   55d80:	mov	r3, r8
   55d84:	sub	r6, fp, #136	; 0x88
   55d88:	add	r2, r2, #4
   55d8c:	str	r0, [sp, #80]	; 0x50
   55d90:	ldr	r0, [fp, #24]
   55d94:	orr	r8, r6, #4
   55d98:	str	r2, [sp, #84]	; 0x54
   55d9c:	sub	r0, r0, #1
   55da0:	str	r0, [sp, #60]	; 0x3c
   55da4:	orr	r0, r3, #4
   55da8:	str	r0, [sp, #56]	; 0x38
   55dac:	ldr	r0, [lr], #4
   55db0:	str	r0, [sp, #64]	; 0x40
   55db4:	mov	r0, #0
   55db8:	str	r0, [sp, #68]	; 0x44
   55dbc:	b	55df0 <GetDataSlab+0x21c94>
   55dc0:	ldr	r0, [sp, #56]	; 0x38
   55dc4:	ldr	r0, [r0, r2]
   55dc8:	add	sl, sl, r0, lsl #2
   55dcc:	add	r7, r0, r7
   55dd0:	ldr	r3, [sp, #68]	; 0x44
   55dd4:	ldr	r0, [sp, #76]	; 0x4c
   55dd8:	mov	r2, #0
   55ddc:	str	r6, [sp, #72]	; 0x48
   55de0:	add	r3, r1, r3
   55de4:	cmp	r3, r0
   55de8:	str	r3, [sp, #68]	; 0x44
   55dec:	bge	5b6a0 <GetDataSlab+0x27544>
   55df0:	ldr	r0, [sp, #64]	; 0x40
   55df4:	cmp	r1, #1
   55df8:	add	r2, r0, r7
   55dfc:	add	r7, sl, r0, lsl #2
   55e00:	blt	55e5c <GetDataSlab+0x21d00>
   55e04:	ldr	r0, [sp, #88]	; 0x58
   55e08:	ldr	r1, [sp, #68]	; 0x44
   55e0c:	ldr	ip, [fp, #8]
   55e10:	ldr	r6, [fp, #16]
   55e14:	mov	r3, #0
   55e18:	add	r4, r0, r1, lsl #2
   55e1c:	ldr	r0, [fp, #20]
   55e20:	vldr	s0, [r7]
   55e24:	vcvt.s32.f32	s0, s0
   55e28:	vmov	r1, s0
   55e2c:	str	r1, [r4, r3, lsl #2]
   55e30:	add	r3, r3, #1
   55e34:	ldr	r5, [r6]
   55e38:	ldr	r1, [r0]
   55e3c:	add	r7, r7, r5, lsl #2
   55e40:	add	r2, r5, r2
   55e44:	cmp	r3, r1
   55e48:	blt	55e20 <GetDataSlab+0x21cc4>
   55e4c:	ldr	r0, [fp, #12]
   55e50:	ldr	r6, [ip]
   55e54:	ldr	r0, [r0]
   55e58:	b	55e60 <GetDataSlab+0x21d04>
   55e5c:	ldr	r6, [sp, #72]	; 0x48
   55e60:	mls	r3, r5, r1, r6
   55e64:	str	r0, [sp, #64]	; 0x40
   55e68:	sub	r3, r3, r0
   55e6c:	ldr	r0, [fp, #24]
   55e70:	add	sl, r7, r3, lsl #2
   55e74:	add	r7, r3, r2
   55e78:	cmp	r0, #2
   55e7c:	blt	55dd0 <GetDataSlab+0x21c74>
   55e80:	ldr	r9, [sp, #60]	; 0x3c
   55e84:	mov	r2, #0
   55e88:	b	55eb4 <GetDataSlab+0x21d58>
   55e8c:	sub	r0, fp, #176	; 0xb0
   55e90:	ldr	r4, [lr, r2]
   55e94:	sub	r3, r3, ip
   55e98:	ldr	r0, [r0, r2]
   55e9c:	mla	r0, r4, r0, r3
   55ea0:	add	r7, r0, r7
   55ea4:	add	sl, sl, r0, lsl #2
   55ea8:	subs	r9, r9, #1
   55eac:	add	r2, r2, #4
   55eb0:	beq	55dd0 <GetDataSlab+0x21c74>
   55eb4:	ldr	r3, [r8, r2]
   55eb8:	ldr	r0, [sp, #84]	; 0x54
   55ebc:	add	r3, r3, #1
   55ec0:	str	r3, [r8, r2]
   55ec4:	ldr	r0, [r0, r2]
   55ec8:	sdiv	r4, r3, r0
   55ecc:	mls	r0, r4, r0, r3
   55ed0:	cmp	r0, #0
   55ed4:	bne	55dc0 <GetDataSlab+0x21c64>
   55ed8:	mov	r0, #0
   55edc:	str	r0, [r8, r2]
   55ee0:	ldr	r0, [sp, #80]	; 0x50
   55ee4:	ldr	r3, [r0, r2]
   55ee8:	sdiv	r0, r7, r3
   55eec:	mls	ip, r0, r3, r7
   55ef0:	cmp	ip, #0
   55ef4:	bne	55e8c <GetDataSlab+0x21d30>
   55ef8:	ldr	r3, [lr, r2]
   55efc:	cmp	r3, #0
   55f00:	beq	55ea8 <GetDataSlab+0x21d4c>
   55f04:	sub	r0, fp, #176	; 0xb0
   55f08:	ldr	r0, [r0, r2]
   55f0c:	mla	r7, r0, r3, r7
   55f10:	mul	r0, r0, r3
   55f14:	b	55ea4 <GetDataSlab+0x21d48>
   55f18:	ldr	r0, [sp, #76]	; 0x4c
   55f1c:	ldr	r2, [fp, #20]
   55f20:	cmp	r0, #1
   55f24:	sub	r0, fp, #176	; 0xb0
   55f28:	blt	5b69c <GetDataSlab+0x27540>
   55f2c:	orr	r0, r0, #4
   55f30:	ldr	lr, [fp, #12]
   55f34:	mov	r3, r8
   55f38:	sub	r6, fp, #136	; 0x88
   55f3c:	add	r2, r2, #4
   55f40:	str	r0, [sp, #80]	; 0x50
   55f44:	ldr	r0, [fp, #24]
   55f48:	orr	r8, r6, #4
   55f4c:	str	r2, [sp, #84]	; 0x54
   55f50:	sub	r0, r0, #1
   55f54:	str	r0, [sp, #60]	; 0x3c
   55f58:	orr	r0, r3, #4
   55f5c:	str	r0, [sp, #56]	; 0x38
   55f60:	ldr	r0, [lr], #4
   55f64:	str	r0, [sp, #64]	; 0x40
   55f68:	mov	r0, #0
   55f6c:	str	r0, [sp, #68]	; 0x44
   55f70:	b	55fa4 <GetDataSlab+0x21e48>
   55f74:	ldr	r0, [sp, #56]	; 0x38
   55f78:	ldr	r0, [r0, r2]
   55f7c:	add	sl, sl, r0, lsl #3
   55f80:	add	r7, r0, r7
   55f84:	ldr	r3, [sp, #68]	; 0x44
   55f88:	ldr	r0, [sp, #76]	; 0x4c
   55f8c:	mov	r2, #0
   55f90:	str	r6, [sp, #72]	; 0x48
   55f94:	add	r3, r1, r3
   55f98:	cmp	r3, r0
   55f9c:	str	r3, [sp, #68]	; 0x44
   55fa0:	bge	5b6a0 <GetDataSlab+0x27544>
   55fa4:	ldr	r0, [sp, #64]	; 0x40
   55fa8:	cmp	r1, #1
   55fac:	add	r2, r0, r7
   55fb0:	add	r7, sl, r0, lsl #3
   55fb4:	blt	56010 <GetDataSlab+0x21eb4>
   55fb8:	ldr	r0, [sp, #88]	; 0x58
   55fbc:	ldr	r1, [sp, #68]	; 0x44
   55fc0:	ldr	ip, [fp, #8]
   55fc4:	ldr	r6, [fp, #16]
   55fc8:	mov	r3, #0
   55fcc:	add	r4, r0, r1, lsl #2
   55fd0:	ldr	r0, [fp, #20]
   55fd4:	vldr	d16, [r7]
   55fd8:	vcvt.s32.f64	s0, d16
   55fdc:	vmov	r1, s0
   55fe0:	str	r1, [r4, r3, lsl #2]
   55fe4:	add	r3, r3, #1
   55fe8:	ldr	r5, [r6]
   55fec:	ldr	r1, [r0]
   55ff0:	add	r7, r7, r5, lsl #3
   55ff4:	add	r2, r5, r2
   55ff8:	cmp	r3, r1
   55ffc:	blt	55fd4 <GetDataSlab+0x21e78>
   56000:	ldr	r0, [fp, #12]
   56004:	ldr	r6, [ip]
   56008:	ldr	r0, [r0]
   5600c:	b	56014 <GetDataSlab+0x21eb8>
   56010:	ldr	r6, [sp, #72]	; 0x48
   56014:	mls	r3, r5, r1, r6
   56018:	str	r0, [sp, #64]	; 0x40
   5601c:	sub	r3, r3, r0
   56020:	ldr	r0, [fp, #24]
   56024:	add	sl, r7, r3, lsl #3
   56028:	add	r7, r3, r2
   5602c:	cmp	r0, #2
   56030:	blt	55f84 <GetDataSlab+0x21e28>
   56034:	ldr	r9, [sp, #60]	; 0x3c
   56038:	mov	r2, #0
   5603c:	b	56068 <GetDataSlab+0x21f0c>
   56040:	sub	r0, fp, #176	; 0xb0
   56044:	ldr	r4, [lr, r2]
   56048:	sub	r3, r3, ip
   5604c:	ldr	r0, [r0, r2]
   56050:	mla	r0, r4, r0, r3
   56054:	add	r7, r0, r7
   56058:	add	sl, sl, r0, lsl #3
   5605c:	subs	r9, r9, #1
   56060:	add	r2, r2, #4
   56064:	beq	55f84 <GetDataSlab+0x21e28>
   56068:	ldr	r3, [r8, r2]
   5606c:	ldr	r0, [sp, #84]	; 0x54
   56070:	add	r3, r3, #1
   56074:	str	r3, [r8, r2]
   56078:	ldr	r0, [r0, r2]
   5607c:	sdiv	r4, r3, r0
   56080:	mls	r0, r4, r0, r3
   56084:	cmp	r0, #0
   56088:	bne	55f74 <GetDataSlab+0x21e18>
   5608c:	mov	r0, #0
   56090:	str	r0, [r8, r2]
   56094:	ldr	r0, [sp, #80]	; 0x50
   56098:	ldr	r3, [r0, r2]
   5609c:	sdiv	r0, r7, r3
   560a0:	mls	ip, r0, r3, r7
   560a4:	cmp	ip, #0
   560a8:	bne	56040 <GetDataSlab+0x21ee4>
   560ac:	ldr	r3, [lr, r2]
   560b0:	cmp	r3, #0
   560b4:	beq	5605c <GetDataSlab+0x21f00>
   560b8:	sub	r0, fp, #176	; 0xb0
   560bc:	ldr	r0, [r0, r2]
   560c0:	mla	r7, r0, r3, r7
   560c4:	mul	r0, r0, r3
   560c8:	b	56058 <GetDataSlab+0x21efc>
   560cc:	ldr	r0, [sp, #68]	; 0x44
   560d0:	ldr	r6, [fp, #16]
   560d4:	cmp	r0, #1
   560d8:	sub	r0, fp, #176	; 0xb0
   560dc:	blt	5626c <GetDataSlab+0x22110>
   560e0:	ldr	ip, [fp, #12]
   560e4:	orr	r0, r0, #4
   560e8:	sub	r2, fp, #136	; 0x88
   560ec:	mov	r5, #0
   560f0:	str	r0, [sp, #72]	; 0x48
   560f4:	ldr	r0, [fp, #24]
   560f8:	orr	r8, r2, #4
   560fc:	ldr	r2, [fp, #20]
   56100:	ldr	r4, [ip], #4
   56104:	sub	r0, r0, #1
   56108:	add	r2, r2, #4
   5610c:	str	r0, [sp, #52]	; 0x34
   56110:	sub	r0, fp, #96	; 0x60
   56114:	str	r2, [sp, #76]	; 0x4c
   56118:	orr	r0, r0, #4
   5611c:	str	r0, [sp, #48]	; 0x30
   56120:	b	56154 <GetDataSlab+0x21ff8>
   56124:	ldr	r0, [sp, #48]	; 0x30
   56128:	ldr	r0, [r0, r2]
   5612c:	add	r9, r9, r0, lsl #3
   56130:	add	r3, r0, r3
   56134:	ldr	r5, [sp, #60]	; 0x3c
   56138:	ldr	r0, [sp, #68]	; 0x44
   5613c:	str	r6, [sp, #64]	; 0x40
   56140:	ldr	r6, [fp, #16]
   56144:	ldr	r4, [sp, #56]	; 0x38
   56148:	add	r5, r1, r5
   5614c:	cmp	r5, r0
   56150:	bge	5626c <GetDataSlab+0x22110>
   56154:	add	r2, r4, r3
   56158:	add	r3, r9, r4, lsl #3
   5615c:	cmp	r1, #1
   56160:	str	r5, [sp, #60]	; 0x3c
   56164:	blt	561b0 <GetDataSlab+0x22054>
   56168:	ldr	r0, [sp, #88]	; 0x58
   5616c:	mov	r4, #0
   56170:	add	r5, r0, r5, lsl #2
   56174:	ldr	r0, [fp, #20]
   56178:	ldr	r1, [r3]
   5617c:	str	r1, [r5, r4, lsl #2]
   56180:	add	r4, r4, #1
   56184:	ldr	r7, [r6]
   56188:	ldr	r1, [r0]
   5618c:	add	r3, r3, r7, lsl #3
   56190:	add	r2, r7, r2
   56194:	cmp	r4, r1
   56198:	blt	56178 <GetDataSlab+0x2201c>
   5619c:	ldr	r0, [fp, #12]
   561a0:	ldr	r4, [r0]
   561a4:	ldr	r0, [fp, #8]
   561a8:	ldr	r6, [r0]
   561ac:	b	561b4 <GetDataSlab+0x22058>
   561b0:	ldr	r6, [sp, #64]	; 0x40
   561b4:	mls	r5, r7, r1, r6
   561b8:	ldr	r0, [fp, #24]
   561bc:	str	r4, [sp, #56]	; 0x38
   561c0:	sub	r4, r5, r4
   561c4:	add	r9, r3, r4, lsl #3
   561c8:	add	r3, r4, r2
   561cc:	cmp	r0, #2
   561d0:	blt	56134 <GetDataSlab+0x21fd8>
   561d4:	ldr	sl, [sp, #52]	; 0x34
   561d8:	mov	r2, #0
   561dc:	b	56208 <GetDataSlab+0x220ac>
   561e0:	sub	r0, fp, #176	; 0xb0
   561e4:	ldr	r5, [ip, r2]
   561e8:	sub	r4, r4, lr
   561ec:	ldr	r0, [r0, r2]
   561f0:	mla	r0, r5, r0, r4
   561f4:	add	r3, r0, r3
   561f8:	add	r9, r9, r0, lsl #3
   561fc:	subs	sl, sl, #1
   56200:	add	r2, r2, #4
   56204:	beq	56134 <GetDataSlab+0x21fd8>
   56208:	ldr	r4, [r8, r2]
   5620c:	ldr	r0, [sp, #76]	; 0x4c
   56210:	add	r4, r4, #1
   56214:	str	r4, [r8, r2]
   56218:	ldr	r0, [r0, r2]
   5621c:	sdiv	r5, r4, r0
   56220:	mls	r0, r5, r0, r4
   56224:	cmp	r0, #0
   56228:	bne	56124 <GetDataSlab+0x21fc8>
   5622c:	mov	r0, #0
   56230:	str	r0, [r8, r2]
   56234:	ldr	r0, [sp, #72]	; 0x48
   56238:	ldr	r4, [r0, r2]
   5623c:	sdiv	r0, r3, r4
   56240:	mls	lr, r0, r4, r3
   56244:	cmp	lr, #0
   56248:	bne	561e0 <GetDataSlab+0x22084>
   5624c:	ldr	r4, [ip, r2]
   56250:	cmp	r4, #0
   56254:	beq	561fc <GetDataSlab+0x220a0>
   56258:	sub	r0, fp, #176	; 0xb0
   5625c:	ldr	r0, [r0, r2]
   56260:	mla	r3, r0, r4, r3
   56264:	mul	r0, r0, r4
   56268:	b	561f8 <GetDataSlab+0x2209c>
   5626c:	ldr	r7, [sp, #84]	; 0x54
   56270:	mov	r2, #0
   56274:	cmp	r7, #13
   56278:	bne	5b6a0 <GetDataSlab+0x27544>
   5627c:	ldr	r0, [fp, #16]
   56280:	mov	r7, #0
   56284:	sub	r9, fp, #176	; 0xb0
   56288:	sub	r8, fp, #96	; 0x60
   5628c:	ldr	r5, [r0]
   56290:	sub	r0, r5, #1
   56294:	str	r0, [fp, #-96]	; 0xffffffa0
   56298:	ldr	r0, [fp, #8]
   5629c:	ldr	r0, [r0]
   562a0:	str	r0, [sp, #72]	; 0x48
   562a4:	str	r0, [fp, #-176]	; 0xffffff50
   562a8:	ldr	r0, [fp, #20]
   562ac:	ldr	r1, [r0]
   562b0:	ldr	r0, [fp, #24]
   562b4:	cmp	r0, #2
   562b8:	mov	r0, r1
   562bc:	str	r1, [sp, #76]	; 0x4c
   562c0:	blt	56434 <GetDataSlab+0x222d8>
   562c4:	ldr	r0, [fp, #8]
   562c8:	ldr	r4, [sp, #72]	; 0x48
   562cc:	mov	r3, #0
   562d0:	mvn	ip, #15
   562d4:	mov	r7, #0
   562d8:	str	r1, [sp, #76]	; 0x4c
   562dc:	str	r3, [sp, #84]	; 0x54
   562e0:	mov	r3, r1
   562e4:	mov	r2, r0
   562e8:	sub	r0, r0, #4
   562ec:	mov	r6, r4
   562f0:	sub	sl, r2, #12
   562f4:	mov	r2, #1
   562f8:	b	5634c <GetDataSlab+0x221f0>
   562fc:	sub	r8, fp, #96	; 0x60
   56300:	ldr	r3, [fp, #12]
   56304:	sub	r9, fp, #176	; 0xb0
   56308:	str	lr, [r8, r2, lsl #2]
   5630c:	ldr	r6, [sp, #68]	; 0x44
   56310:	add	sl, sl, #4
   56314:	str	r4, [r9, r2, lsl #2]
   56318:	ldr	r3, [r3, r2, lsl #2]
   5631c:	mla	r7, r3, r6, r7
   56320:	ldr	r3, [fp, #20]
   56324:	ldr	r6, [sp, #76]	; 0x4c
   56328:	ldr	r3, [r3, r2, lsl #2]
   5632c:	add	r2, r2, #1
   56330:	mul	r6, r3, r6
   56334:	ldr	r3, [fp, #24]
   56338:	str	r6, [sp, #76]	; 0x4c
   5633c:	mov	r6, r4
   56340:	ldr	r4, [sp, #64]	; 0x40
   56344:	cmp	r2, r3
   56348:	beq	56434 <GetDataSlab+0x222d8>
   5634c:	ldr	r3, [fp, #16]
   56350:	str	r6, [sp, #68]	; 0x44
   56354:	ldr	r3, [r3, r2, lsl #2]
   56358:	str	r4, [r9, r2, lsl #2]
   5635c:	ldr	r9, [sp, #84]	; 0x54
   56360:	sub	lr, r3, #1
   56364:	ldr	r3, [fp, #8]
   56368:	add	r9, r9, #1
   5636c:	str	lr, [r8, r2, lsl #2]
   56370:	cmp	r9, #4
   56374:	str	r9, [sp, #84]	; 0x54
   56378:	ldr	r6, [r3, r2, lsl #2]
   5637c:	str	r6, [sp, #64]	; 0x40
   56380:	bcs	5638c <GetDataSlab+0x22230>
   56384:	mov	r3, r2
   56388:	b	5641c <GetDataSlab+0x222c0>
   5638c:	vmov.i32	q9, #1	; 0x00000001
   56390:	vmov.i32	q10, #1	; 0x00000001
   56394:	vmov.32	d23[1], r6
   56398:	vmov.i32	q8, #1	; 0x00000001
   5639c:	bic	r3, r9, #3
   563a0:	bic	r8, r2, #3
   563a4:	mov	r6, sl
   563a8:	str	r3, [sp, #60]	; 0x3c
   563ac:	sub	r3, r2, r3
   563b0:	vmov.32	d18[0], r4
   563b4:	vmov.32	d20[0], lr
   563b8:	vorr	d16, d18, d18
   563bc:	vmov.i32	q9, #1	; 0x00000001
   563c0:	vorr	d18, d20, d20
   563c4:	vld1.32	{d20-d21}, [r6], ip
   563c8:	subs	r8, r8, #4
   563cc:	vrev64.32	q12, q10
   563d0:	vext.8	q12, q12, q12, #8
   563d4:	vext.8	q11, q11, q12, #12
   563d8:	vmul.i32	q9, q9, q12
   563dc:	vmul.i32	q8, q11, q8
   563e0:	vorr	q11, q12, q12
   563e4:	bne	563c4 <GetDataSlab+0x22268>
   563e8:	vext.8	q11, q9, q8, #8
   563ec:	vext.8	q12, q8, q8, #8
   563f0:	ldr	r6, [sp, #60]	; 0x3c
   563f4:	vmul.i32	q0, q9, q11
   563f8:	vmul.i32	q1, q8, q12
   563fc:	cmp	r9, r6
   56400:	vmul.i32	q8, q0, d0[1]
   56404:	vmul.i32	q9, q1, d2[1]
   56408:	vmov.32	lr, d16[0]
   5640c:	vmov.32	r4, d18[0]
   56410:	beq	562fc <GetDataSlab+0x221a0>
   56414:	vmov.32	r6, d20[0]
   56418:	sub	r8, fp, #96	; 0x60
   5641c:	mul	r4, r6, r4
   56420:	ldr	r6, [r0, r3, lsl #2]
   56424:	subs	r3, r3, #1
   56428:	mul	lr, lr, r6
   5642c:	bne	5641c <GetDataSlab+0x222c0>
   56430:	b	56300 <GetDataSlab+0x221a4>
   56434:	ldr	r0, [sp, #80]	; 0x50
   56438:	cmp	r5, #1
   5643c:	add	sl, r0, r7, lsl #3
   56440:	bne	5b048 <GetDataSlab+0x26eec>
   56444:	ldr	r0, [sp, #76]	; 0x4c
   56448:	ldr	r3, [fp, #20]
   5644c:	sub	r2, fp, #176	; 0xb0
   56450:	cmp	r0, #1
   56454:	blt	5b69c <GetDataSlab+0x27540>
   56458:	orr	r2, r2, #4
   5645c:	ldr	lr, [fp, #12]
   56460:	sub	r0, fp, #136	; 0x88
   56464:	add	r4, r3, #4
   56468:	str	r2, [sp, #84]	; 0x54
   5646c:	ldr	r2, [fp, #24]
   56470:	orr	r0, r0, #4
   56474:	sub	r2, r2, #1
   56478:	str	r2, [sp, #68]	; 0x44
   5647c:	orr	r2, r8, #4
   56480:	mov	r8, #0
   56484:	str	r2, [sp, #64]	; 0x40
   56488:	ldr	r2, [lr], #4
   5648c:	str	r2, [sp, #80]	; 0x50
   56490:	b	564b8 <GetDataSlab+0x2235c>
   56494:	ldr	r3, [sp, #64]	; 0x40
   56498:	ldr	r2, [r3, r2]
   5649c:	add	sl, sl, r2, lsl #3
   564a0:	add	r7, r2, r7
   564a4:	ldr	r3, [sp, #76]	; 0x4c
   564a8:	add	r8, r1, r8
   564ac:	mov	r2, #0
   564b0:	cmp	r8, r3
   564b4:	bge	5b6a0 <GetDataSlab+0x27544>
   564b8:	ldr	r5, [sp, #80]	; 0x50
   564bc:	ldr	r2, [sp, #72]	; 0x48
   564c0:	cmp	r1, #1
   564c4:	sub	ip, fp, #176	; 0xb0
   564c8:	add	r9, sl, r5, lsl #3
   564cc:	add	r3, r5, r7
   564d0:	blt	56518 <GetDataSlab+0x223bc>
   564d4:	ldr	r1, [sp, #88]	; 0x58
   564d8:	ldr	r5, [fp, #20]
   564dc:	mov	r6, r4
   564e0:	mov	r2, #0
   564e4:	mov	r7, r9
   564e8:	add	r4, r1, r8, lsl #2
   564ec:	ldr	r1, [r7], #8
   564f0:	str	r1, [r4, r2, lsl #2]
   564f4:	add	r2, r2, #1
   564f8:	ldr	r1, [r5]
   564fc:	cmp	r2, r1
   56500:	blt	564ec <GetDataSlab+0x22390>
   56504:	ldr	r2, [fp, #12]
   56508:	mov	r4, r6
   5650c:	ldr	r5, [r2]
   56510:	ldr	r2, [fp, #8]
   56514:	ldr	r2, [r2]
   56518:	str	r2, [sp, #72]	; 0x48
   5651c:	sub	r2, r2, r5
   56520:	str	r5, [sp, #80]	; 0x50
   56524:	add	sl, r9, r2, lsl #3
   56528:	add	r7, r3, r2
   5652c:	ldr	r2, [fp, #24]
   56530:	cmp	r2, #2
   56534:	blt	564a4 <GetDataSlab+0x22348>
   56538:	ldr	r9, [sp, #68]	; 0x44
   5653c:	mov	r2, #0
   56540:	b	5656c <GetDataSlab+0x22410>
   56544:	ldr	r6, [ip, r2]
   56548:	ldr	ip, [lr, r2]
   5654c:	sub	r3, r3, r5
   56550:	mla	r3, ip, r6, r3
   56554:	sub	ip, fp, #176	; 0xb0
   56558:	add	r7, r3, r7
   5655c:	add	sl, sl, r3, lsl #3
   56560:	subs	r9, r9, #1
   56564:	add	r2, r2, #4
   56568:	beq	564a4 <GetDataSlab+0x22348>
   5656c:	ldr	r3, [r0, r2]
   56570:	add	r3, r3, #1
   56574:	str	r3, [r0, r2]
   56578:	ldr	r5, [r4, r2]
   5657c:	sdiv	r6, r3, r5
   56580:	mls	r3, r6, r5, r3
   56584:	cmp	r3, #0
   56588:	bne	56494 <GetDataSlab+0x22338>
   5658c:	mov	r3, #0
   56590:	str	r3, [r0, r2]
   56594:	ldr	r3, [sp, #84]	; 0x54
   56598:	ldr	r3, [r3, r2]
   5659c:	sdiv	r5, r7, r3
   565a0:	mls	r5, r5, r3, r7
   565a4:	cmp	r5, #0
   565a8:	bne	56544 <GetDataSlab+0x223e8>
   565ac:	ldr	r3, [lr, r2]
   565b0:	cmp	r3, #0
   565b4:	beq	56560 <GetDataSlab+0x22404>
   565b8:	ldr	r6, [ip, r2]
   565bc:	mla	r7, r6, r3, r7
   565c0:	mul	r3, r6, r3
   565c4:	b	5655c <GetDataSlab+0x22400>
   565c8:	ldr	r0, [sp, #76]	; 0x4c
   565cc:	ldr	r2, [fp, #20]
   565d0:	cmp	r0, #1
   565d4:	sub	r0, fp, #176	; 0xb0
   565d8:	blt	5b69c <GetDataSlab+0x27540>
   565dc:	orr	r0, r0, #4
   565e0:	ldr	sl, [fp, #12]
   565e4:	sub	r3, fp, #136	; 0x88
   565e8:	add	r2, r2, #4
   565ec:	str	r0, [sp, #80]	; 0x50
   565f0:	ldr	r0, [fp, #24]
   565f4:	orr	lr, r3, #4
   565f8:	str	r2, [sp, #84]	; 0x54
   565fc:	sub	r0, r0, #1
   56600:	str	r0, [sp, #60]	; 0x3c
   56604:	sub	r0, fp, #96	; 0x60
   56608:	orr	r0, r0, #4
   5660c:	str	r0, [sp, #56]	; 0x38
   56610:	ldr	r0, [sl], #4
   56614:	str	r0, [sp, #64]	; 0x40
   56618:	mov	r0, #0
   5661c:	str	r0, [sp, #68]	; 0x44
   56620:	b	56654 <GetDataSlab+0x224f8>
   56624:	ldr	r0, [sp, #56]	; 0x38
   56628:	ldr	r0, [r0, r2]
   5662c:	add	r8, r8, r0
   56630:	add	r7, r0, r7
   56634:	ldr	r2, [sp, #68]	; 0x44
   56638:	ldr	r0, [sp, #76]	; 0x4c
   5663c:	str	r6, [sp, #72]	; 0x48
   56640:	add	r2, r1, r2
   56644:	str	r2, [sp, #68]	; 0x44
   56648:	cmp	r2, r0
   5664c:	mov	r2, #0
   56650:	bge	5b6a0 <GetDataSlab+0x27544>
   56654:	ldr	r0, [sp, #64]	; 0x40
   56658:	cmp	r1, #1
   5665c:	add	r2, r0, r7
   56660:	add	r7, r8, r0
   56664:	blt	566b8 <GetDataSlab+0x2255c>
   56668:	ldr	r0, [sp, #88]	; 0x58
   5666c:	ldr	r1, [sp, #68]	; 0x44
   56670:	ldr	ip, [fp, #8]
   56674:	ldr	r6, [fp, #16]
   56678:	mov	r3, #0
   5667c:	add	r4, r0, r1, lsl #2
   56680:	ldr	r0, [fp, #20]
   56684:	ldrb	r1, [r7]
   56688:	str	r1, [r4, r3, lsl #2]
   5668c:	add	r3, r3, #1
   56690:	ldr	r5, [r6]
   56694:	ldr	r1, [r0]
   56698:	add	r2, r5, r2
   5669c:	add	r7, r7, r5
   566a0:	cmp	r3, r1
   566a4:	blt	56684 <GetDataSlab+0x22528>
   566a8:	ldr	r0, [fp, #12]
   566ac:	ldr	r6, [ip]
   566b0:	ldr	r0, [r0]
   566b4:	b	566bc <GetDataSlab+0x22560>
   566b8:	ldr	r6, [sp, #72]	; 0x48
   566bc:	mls	r3, r5, r1, r6
   566c0:	str	r0, [sp, #64]	; 0x40
   566c4:	sub	r3, r3, r0
   566c8:	ldr	r0, [fp, #24]
   566cc:	add	r8, r7, r3
   566d0:	add	r7, r3, r2
   566d4:	cmp	r0, #2
   566d8:	blt	56634 <GetDataSlab+0x224d8>
   566dc:	ldr	r9, [sp, #60]	; 0x3c
   566e0:	mov	r2, #0
   566e4:	b	56710 <GetDataSlab+0x225b4>
   566e8:	sub	r0, fp, #176	; 0xb0
   566ec:	ldr	r4, [sl, r2]
   566f0:	sub	r3, r3, ip
   566f4:	ldr	r0, [r0, r2]
   566f8:	mla	r0, r4, r0, r3
   566fc:	add	r7, r0, r7
   56700:	add	r8, r8, r0
   56704:	subs	r9, r9, #1
   56708:	add	r2, r2, #4
   5670c:	beq	56634 <GetDataSlab+0x224d8>
   56710:	ldr	r3, [lr, r2]
   56714:	ldr	r0, [sp, #84]	; 0x54
   56718:	add	r3, r3, #1
   5671c:	str	r3, [lr, r2]
   56720:	ldr	r0, [r0, r2]
   56724:	sdiv	r4, r3, r0
   56728:	mls	r0, r4, r0, r3
   5672c:	cmp	r0, #0
   56730:	bne	56624 <GetDataSlab+0x224c8>
   56734:	mov	r0, #0
   56738:	str	r0, [lr, r2]
   5673c:	ldr	r0, [sp, #80]	; 0x50
   56740:	ldr	r3, [r0, r2]
   56744:	sdiv	r0, r7, r3
   56748:	mls	ip, r0, r3, r7
   5674c:	cmp	ip, #0
   56750:	bne	566e8 <GetDataSlab+0x2258c>
   56754:	ldr	r3, [sl, r2]
   56758:	cmp	r3, #0
   5675c:	beq	56704 <GetDataSlab+0x225a8>
   56760:	sub	r0, fp, #176	; 0xb0
   56764:	ldr	r0, [r0, r2]
   56768:	mla	r7, r0, r3, r7
   5676c:	mla	r8, r0, r3, r8
   56770:	subs	r9, r9, #1
   56774:	add	r2, r2, #4
   56778:	bne	56710 <GetDataSlab+0x225b4>
   5677c:	b	56634 <GetDataSlab+0x224d8>
   56780:	ldr	r0, [sp, #76]	; 0x4c
   56784:	ldr	r2, [fp, #20]
   56788:	cmp	r0, #1
   5678c:	sub	r0, fp, #176	; 0xb0
   56790:	blt	5b69c <GetDataSlab+0x27540>
   56794:	orr	r0, r0, #4
   56798:	ldr	lr, [fp, #12]
   5679c:	mov	r3, r8
   567a0:	sub	r6, fp, #136	; 0x88
   567a4:	add	r2, r2, #4
   567a8:	str	r0, [sp, #80]	; 0x50
   567ac:	ldr	r0, [fp, #24]
   567b0:	orr	r8, r6, #4
   567b4:	str	r2, [sp, #84]	; 0x54
   567b8:	sub	r0, r0, #1
   567bc:	str	r0, [sp, #60]	; 0x3c
   567c0:	orr	r0, r3, #4
   567c4:	str	r0, [sp, #56]	; 0x38
   567c8:	ldr	r0, [lr], #4
   567cc:	str	r0, [sp, #64]	; 0x40
   567d0:	mov	r0, #0
   567d4:	str	r0, [sp, #68]	; 0x44
   567d8:	b	5680c <GetDataSlab+0x226b0>
   567dc:	ldr	r0, [sp, #56]	; 0x38
   567e0:	ldr	r0, [r0, r2]
   567e4:	add	sl, sl, r0, lsl #1
   567e8:	add	r7, r0, r7
   567ec:	ldr	r3, [sp, #68]	; 0x44
   567f0:	ldr	r0, [sp, #76]	; 0x4c
   567f4:	mov	r2, #0
   567f8:	str	r6, [sp, #72]	; 0x48
   567fc:	add	r3, r1, r3
   56800:	cmp	r3, r0
   56804:	str	r3, [sp, #68]	; 0x44
   56808:	bge	5b6a0 <GetDataSlab+0x27544>
   5680c:	ldr	r0, [sp, #64]	; 0x40
   56810:	cmp	r1, #1
   56814:	add	r2, r0, r7
   56818:	add	r7, sl, r0, lsl #1
   5681c:	blt	56870 <GetDataSlab+0x22714>
   56820:	ldr	r0, [sp, #88]	; 0x58
   56824:	ldr	r1, [sp, #68]	; 0x44
   56828:	ldr	ip, [fp, #8]
   5682c:	ldr	r6, [fp, #16]
   56830:	mov	r3, #0
   56834:	add	r4, r0, r1, lsl #2
   56838:	ldr	r0, [fp, #20]
   5683c:	ldrsh	r1, [r7]
   56840:	str	r1, [r4, r3, lsl #2]
   56844:	add	r3, r3, #1
   56848:	ldr	r5, [r6]
   5684c:	ldr	r1, [r0]
   56850:	add	r7, r7, r5, lsl #1
   56854:	add	r2, r5, r2
   56858:	cmp	r3, r1
   5685c:	blt	5683c <GetDataSlab+0x226e0>
   56860:	ldr	r0, [fp, #12]
   56864:	ldr	r6, [ip]
   56868:	ldr	r0, [r0]
   5686c:	b	56874 <GetDataSlab+0x22718>
   56870:	ldr	r6, [sp, #72]	; 0x48
   56874:	mls	r3, r5, r1, r6
   56878:	str	r0, [sp, #64]	; 0x40
   5687c:	sub	r3, r3, r0
   56880:	ldr	r0, [fp, #24]
   56884:	add	sl, r7, r3, lsl #1
   56888:	add	r7, r3, r2
   5688c:	cmp	r0, #2
   56890:	blt	567ec <GetDataSlab+0x22690>
   56894:	ldr	r9, [sp, #60]	; 0x3c
   56898:	mov	r2, #0
   5689c:	b	568c8 <GetDataSlab+0x2276c>
   568a0:	sub	r0, fp, #176	; 0xb0
   568a4:	ldr	r4, [lr, r2]
   568a8:	sub	r3, r3, ip
   568ac:	ldr	r0, [r0, r2]
   568b0:	mla	r0, r4, r0, r3
   568b4:	add	r7, r0, r7
   568b8:	add	sl, sl, r0, lsl #1
   568bc:	subs	r9, r9, #1
   568c0:	add	r2, r2, #4
   568c4:	beq	567ec <GetDataSlab+0x22690>
   568c8:	ldr	r3, [r8, r2]
   568cc:	ldr	r0, [sp, #84]	; 0x54
   568d0:	add	r3, r3, #1
   568d4:	str	r3, [r8, r2]
   568d8:	ldr	r0, [r0, r2]
   568dc:	sdiv	r4, r3, r0
   568e0:	mls	r0, r4, r0, r3
   568e4:	cmp	r0, #0
   568e8:	bne	567dc <GetDataSlab+0x22680>
   568ec:	mov	r0, #0
   568f0:	str	r0, [r8, r2]
   568f4:	ldr	r0, [sp, #80]	; 0x50
   568f8:	ldr	r3, [r0, r2]
   568fc:	sdiv	r0, r7, r3
   56900:	mls	ip, r0, r3, r7
   56904:	cmp	ip, #0
   56908:	bne	568a0 <GetDataSlab+0x22744>
   5690c:	ldr	r3, [lr, r2]
   56910:	cmp	r3, #0
   56914:	beq	568bc <GetDataSlab+0x22760>
   56918:	sub	r0, fp, #176	; 0xb0
   5691c:	ldr	r0, [r0, r2]
   56920:	mla	r7, r0, r3, r7
   56924:	mul	r0, r0, r3
   56928:	b	568b8 <GetDataSlab+0x2275c>
   5692c:	ldr	r0, [sp, #76]	; 0x4c
   56930:	ldr	r2, [fp, #20]
   56934:	cmp	r0, #1
   56938:	sub	r0, fp, #176	; 0xb0
   5693c:	blt	5b69c <GetDataSlab+0x27540>
   56940:	orr	r0, r0, #4
   56944:	ldr	lr, [fp, #12]
   56948:	mov	r3, r8
   5694c:	sub	r6, fp, #136	; 0x88
   56950:	add	r2, r2, #4
   56954:	str	r0, [sp, #80]	; 0x50
   56958:	ldr	r0, [fp, #24]
   5695c:	orr	r8, r6, #4
   56960:	str	r2, [sp, #84]	; 0x54
   56964:	sub	r0, r0, #1
   56968:	str	r0, [sp, #60]	; 0x3c
   5696c:	orr	r0, r3, #4
   56970:	str	r0, [sp, #56]	; 0x38
   56974:	ldr	r0, [lr], #4
   56978:	str	r0, [sp, #64]	; 0x40
   5697c:	mov	r0, #0
   56980:	str	r0, [sp, #68]	; 0x44
   56984:	b	569b8 <GetDataSlab+0x2285c>
   56988:	ldr	r0, [sp, #56]	; 0x38
   5698c:	ldr	r0, [r0, r2]
   56990:	add	sl, sl, r0, lsl #1
   56994:	add	r7, r0, r7
   56998:	ldr	r2, [sp, #68]	; 0x44
   5699c:	ldr	r0, [sp, #76]	; 0x4c
   569a0:	str	r6, [sp, #72]	; 0x48
   569a4:	add	r2, r1, r2
   569a8:	str	r2, [sp, #68]	; 0x44
   569ac:	cmp	r2, r0
   569b0:	mov	r2, #0
   569b4:	bge	5b6a0 <GetDataSlab+0x27544>
   569b8:	ldr	r0, [sp, #64]	; 0x40
   569bc:	cmp	r1, #1
   569c0:	add	r2, r0, r7
   569c4:	add	r7, sl, r0, lsl #1
   569c8:	blt	56a1c <GetDataSlab+0x228c0>
   569cc:	ldr	r0, [sp, #88]	; 0x58
   569d0:	ldr	r1, [sp, #68]	; 0x44
   569d4:	ldr	ip, [fp, #8]
   569d8:	ldr	r6, [fp, #16]
   569dc:	mov	r3, #0
   569e0:	add	r4, r0, r1, lsl #2
   569e4:	ldr	r0, [fp, #20]
   569e8:	ldrh	r1, [r7]
   569ec:	str	r1, [r4, r3, lsl #2]
   569f0:	add	r3, r3, #1
   569f4:	ldr	r5, [r6]
   569f8:	ldr	r1, [r0]
   569fc:	add	r7, r7, r5, lsl #1
   56a00:	add	r2, r5, r2
   56a04:	cmp	r3, r1
   56a08:	blt	569e8 <GetDataSlab+0x2288c>
   56a0c:	ldr	r0, [fp, #12]
   56a10:	ldr	r6, [ip]
   56a14:	ldr	r0, [r0]
   56a18:	b	56a20 <GetDataSlab+0x228c4>
   56a1c:	ldr	r6, [sp, #72]	; 0x48
   56a20:	mls	r3, r5, r1, r6
   56a24:	str	r0, [sp, #64]	; 0x40
   56a28:	sub	r3, r3, r0
   56a2c:	ldr	r0, [fp, #24]
   56a30:	add	sl, r7, r3, lsl #1
   56a34:	add	r7, r3, r2
   56a38:	cmp	r0, #2
   56a3c:	blt	56998 <GetDataSlab+0x2283c>
   56a40:	ldr	r9, [sp, #60]	; 0x3c
   56a44:	mov	r2, #0
   56a48:	b	56a74 <GetDataSlab+0x22918>
   56a4c:	sub	r0, fp, #176	; 0xb0
   56a50:	ldr	r4, [lr, r2]
   56a54:	sub	r3, r3, ip
   56a58:	ldr	r0, [r0, r2]
   56a5c:	mla	r0, r4, r0, r3
   56a60:	add	r7, r0, r7
   56a64:	add	sl, sl, r0, lsl #1
   56a68:	subs	r9, r9, #1
   56a6c:	add	r2, r2, #4
   56a70:	beq	56998 <GetDataSlab+0x2283c>
   56a74:	ldr	r3, [r8, r2]
   56a78:	ldr	r0, [sp, #84]	; 0x54
   56a7c:	add	r3, r3, #1
   56a80:	str	r3, [r8, r2]
   56a84:	ldr	r0, [r0, r2]
   56a88:	sdiv	r4, r3, r0
   56a8c:	mls	r0, r4, r0, r3
   56a90:	cmp	r0, #0
   56a94:	bne	56988 <GetDataSlab+0x2282c>
   56a98:	mov	r0, #0
   56a9c:	str	r0, [r8, r2]
   56aa0:	ldr	r0, [sp, #80]	; 0x50
   56aa4:	ldr	r3, [r0, r2]
   56aa8:	sdiv	r0, r7, r3
   56aac:	mls	ip, r0, r3, r7
   56ab0:	cmp	ip, #0
   56ab4:	bne	56a4c <GetDataSlab+0x228f0>
   56ab8:	ldr	r3, [lr, r2]
   56abc:	cmp	r3, #0
   56ac0:	beq	56a68 <GetDataSlab+0x2290c>
   56ac4:	sub	r0, fp, #176	; 0xb0
   56ac8:	ldr	r0, [r0, r2]
   56acc:	mla	r7, r0, r3, r7
   56ad0:	mul	r0, r0, r3
   56ad4:	b	56a64 <GetDataSlab+0x22908>
   56ad8:	ldr	r0, [sp, #76]	; 0x4c
   56adc:	ldr	r2, [fp, #20]
   56ae0:	cmp	r0, #1
   56ae4:	sub	r0, fp, #176	; 0xb0
   56ae8:	blt	5b69c <GetDataSlab+0x27540>
   56aec:	orr	r0, r0, #4
   56af0:	ldr	sl, [fp, #12]
   56af4:	sub	r3, fp, #136	; 0x88
   56af8:	add	r2, r2, #4
   56afc:	str	r0, [sp, #80]	; 0x50
   56b00:	ldr	r0, [fp, #24]
   56b04:	orr	lr, r3, #4
   56b08:	str	r2, [sp, #84]	; 0x54
   56b0c:	sub	r0, r0, #1
   56b10:	str	r0, [sp, #60]	; 0x3c
   56b14:	sub	r0, fp, #96	; 0x60
   56b18:	orr	r0, r0, #4
   56b1c:	str	r0, [sp, #56]	; 0x38
   56b20:	ldr	r0, [sl], #4
   56b24:	str	r0, [sp, #64]	; 0x40
   56b28:	mov	r0, #0
   56b2c:	str	r0, [sp, #68]	; 0x44
   56b30:	b	56b64 <GetDataSlab+0x22a08>
   56b34:	ldr	r0, [sp, #56]	; 0x38
   56b38:	ldr	r0, [r0, r2]
   56b3c:	add	r8, r8, r0, lsl #2
   56b40:	add	r7, r0, r7
   56b44:	ldr	r3, [sp, #68]	; 0x44
   56b48:	ldr	r0, [sp, #76]	; 0x4c
   56b4c:	mov	r2, #0
   56b50:	str	r6, [sp, #72]	; 0x48
   56b54:	add	r3, r1, r3
   56b58:	cmp	r3, r0
   56b5c:	str	r3, [sp, #68]	; 0x44
   56b60:	bge	5b6a0 <GetDataSlab+0x27544>
   56b64:	ldr	r0, [sp, #64]	; 0x40
   56b68:	cmp	r1, #1
   56b6c:	add	r2, r0, r7
   56b70:	add	r7, r8, r0, lsl #2
   56b74:	blt	56bc8 <GetDataSlab+0x22a6c>
   56b78:	ldr	r0, [sp, #88]	; 0x58
   56b7c:	ldr	r1, [sp, #68]	; 0x44
   56b80:	ldr	ip, [fp, #8]
   56b84:	ldr	r6, [fp, #16]
   56b88:	mov	r3, #0
   56b8c:	add	r4, r0, r1, lsl #2
   56b90:	ldr	r0, [fp, #20]
   56b94:	ldr	r1, [r7]
   56b98:	str	r1, [r4, r3, lsl #2]
   56b9c:	add	r3, r3, #1
   56ba0:	ldr	r5, [r6]
   56ba4:	ldr	r1, [r0]
   56ba8:	add	r7, r7, r5, lsl #2
   56bac:	add	r2, r5, r2
   56bb0:	cmp	r3, r1
   56bb4:	blt	56b94 <GetDataSlab+0x22a38>
   56bb8:	ldr	r0, [fp, #12]
   56bbc:	ldr	r6, [ip]
   56bc0:	ldr	r0, [r0]
   56bc4:	b	56bcc <GetDataSlab+0x22a70>
   56bc8:	ldr	r6, [sp, #72]	; 0x48
   56bcc:	mls	r3, r5, r1, r6
   56bd0:	str	r0, [sp, #64]	; 0x40
   56bd4:	sub	r3, r3, r0
   56bd8:	ldr	r0, [fp, #24]
   56bdc:	add	r8, r7, r3, lsl #2
   56be0:	add	r7, r3, r2
   56be4:	cmp	r0, #2
   56be8:	blt	56b44 <GetDataSlab+0x229e8>
   56bec:	ldr	r9, [sp, #60]	; 0x3c
   56bf0:	mov	r2, #0
   56bf4:	b	56c20 <GetDataSlab+0x22ac4>
   56bf8:	sub	r0, fp, #176	; 0xb0
   56bfc:	ldr	r4, [sl, r2]
   56c00:	sub	r3, r3, ip
   56c04:	ldr	r0, [r0, r2]
   56c08:	mla	r0, r4, r0, r3
   56c0c:	add	r7, r0, r7
   56c10:	add	r8, r8, r0, lsl #2
   56c14:	subs	r9, r9, #1
   56c18:	add	r2, r2, #4
   56c1c:	beq	56b44 <GetDataSlab+0x229e8>
   56c20:	ldr	r3, [lr, r2]
   56c24:	ldr	r0, [sp, #84]	; 0x54
   56c28:	add	r3, r3, #1
   56c2c:	str	r3, [lr, r2]
   56c30:	ldr	r0, [r0, r2]
   56c34:	sdiv	r4, r3, r0
   56c38:	mls	r0, r4, r0, r3
   56c3c:	cmp	r0, #0
   56c40:	bne	56b34 <GetDataSlab+0x229d8>
   56c44:	mov	r0, #0
   56c48:	str	r0, [lr, r2]
   56c4c:	ldr	r0, [sp, #80]	; 0x50
   56c50:	ldr	r3, [r0, r2]
   56c54:	sdiv	r0, r7, r3
   56c58:	mls	ip, r0, r3, r7
   56c5c:	cmp	ip, #0
   56c60:	bne	56bf8 <GetDataSlab+0x22a9c>
   56c64:	ldr	r3, [sl, r2]
   56c68:	cmp	r3, #0
   56c6c:	beq	56c14 <GetDataSlab+0x22ab8>
   56c70:	sub	r0, fp, #176	; 0xb0
   56c74:	ldr	r0, [r0, r2]
   56c78:	mla	r7, r0, r3, r7
   56c7c:	mul	r0, r0, r3
   56c80:	b	56c10 <GetDataSlab+0x22ab4>
   56c84:	ldr	r0, [sp, #76]	; 0x4c
   56c88:	ldr	r2, [fp, #20]
   56c8c:	cmp	r0, #1
   56c90:	sub	r0, fp, #176	; 0xb0
   56c94:	blt	5b69c <GetDataSlab+0x27540>
   56c98:	orr	r0, r0, #4
   56c9c:	ldr	sl, [fp, #12]
   56ca0:	sub	r3, fp, #136	; 0x88
   56ca4:	add	r2, r2, #4
   56ca8:	str	r0, [sp, #80]	; 0x50
   56cac:	ldr	r0, [fp, #24]
   56cb0:	orr	lr, r3, #4
   56cb4:	str	r2, [sp, #84]	; 0x54
   56cb8:	sub	r0, r0, #1
   56cbc:	str	r0, [sp, #60]	; 0x3c
   56cc0:	sub	r0, fp, #96	; 0x60
   56cc4:	orr	r0, r0, #4
   56cc8:	str	r0, [sp, #56]	; 0x38
   56ccc:	ldr	r0, [sl], #4
   56cd0:	str	r0, [sp, #64]	; 0x40
   56cd4:	mov	r0, #0
   56cd8:	str	r0, [sp, #68]	; 0x44
   56cdc:	b	56d10 <GetDataSlab+0x22bb4>
   56ce0:	ldr	r0, [sp, #56]	; 0x38
   56ce4:	ldr	r0, [r0, r2]
   56ce8:	add	r8, r8, r0, lsl #2
   56cec:	add	r7, r0, r7
   56cf0:	ldr	r3, [sp, #68]	; 0x44
   56cf4:	ldr	r0, [sp, #76]	; 0x4c
   56cf8:	mov	r2, #0
   56cfc:	str	r6, [sp, #72]	; 0x48
   56d00:	add	r3, r1, r3
   56d04:	cmp	r3, r0
   56d08:	str	r3, [sp, #68]	; 0x44
   56d0c:	bge	5b6a0 <GetDataSlab+0x27544>
   56d10:	ldr	r0, [sp, #64]	; 0x40
   56d14:	cmp	r1, #1
   56d18:	add	r2, r0, r7
   56d1c:	add	r7, r8, r0, lsl #2
   56d20:	blt	56d74 <GetDataSlab+0x22c18>
   56d24:	ldr	r0, [sp, #88]	; 0x58
   56d28:	ldr	r1, [sp, #68]	; 0x44
   56d2c:	ldr	ip, [fp, #8]
   56d30:	ldr	r6, [fp, #16]
   56d34:	mov	r3, #0
   56d38:	add	r4, r0, r1, lsl #2
   56d3c:	ldr	r0, [fp, #20]
   56d40:	ldr	r1, [r7]
   56d44:	str	r1, [r4, r3, lsl #2]
   56d48:	add	r3, r3, #1
   56d4c:	ldr	r5, [r6]
   56d50:	ldr	r1, [r0]
   56d54:	add	r7, r7, r5, lsl #2
   56d58:	add	r2, r5, r2
   56d5c:	cmp	r3, r1
   56d60:	blt	56d40 <GetDataSlab+0x22be4>
   56d64:	ldr	r0, [fp, #12]
   56d68:	ldr	r6, [ip]
   56d6c:	ldr	r0, [r0]
   56d70:	b	56d78 <GetDataSlab+0x22c1c>
   56d74:	ldr	r6, [sp, #72]	; 0x48
   56d78:	mls	r3, r5, r1, r6
   56d7c:	str	r0, [sp, #64]	; 0x40
   56d80:	sub	r3, r3, r0
   56d84:	ldr	r0, [fp, #24]
   56d88:	add	r8, r7, r3, lsl #2
   56d8c:	add	r7, r3, r2
   56d90:	cmp	r0, #2
   56d94:	blt	56cf0 <GetDataSlab+0x22b94>
   56d98:	ldr	r9, [sp, #60]	; 0x3c
   56d9c:	mov	r2, #0
   56da0:	b	56dcc <GetDataSlab+0x22c70>
   56da4:	sub	r0, fp, #176	; 0xb0
   56da8:	ldr	r4, [sl, r2]
   56dac:	sub	r3, r3, ip
   56db0:	ldr	r0, [r0, r2]
   56db4:	mla	r0, r4, r0, r3
   56db8:	add	r7, r0, r7
   56dbc:	add	r8, r8, r0, lsl #2
   56dc0:	subs	r9, r9, #1
   56dc4:	add	r2, r2, #4
   56dc8:	beq	56cf0 <GetDataSlab+0x22b94>
   56dcc:	ldr	r3, [lr, r2]
   56dd0:	ldr	r0, [sp, #84]	; 0x54
   56dd4:	add	r3, r3, #1
   56dd8:	str	r3, [lr, r2]
   56ddc:	ldr	r0, [r0, r2]
   56de0:	sdiv	r4, r3, r0
   56de4:	mls	r0, r4, r0, r3
   56de8:	cmp	r0, #0
   56dec:	bne	56ce0 <GetDataSlab+0x22b84>
   56df0:	mov	r0, #0
   56df4:	str	r0, [lr, r2]
   56df8:	ldr	r0, [sp, #80]	; 0x50
   56dfc:	ldr	r3, [r0, r2]
   56e00:	sdiv	r0, r7, r3
   56e04:	mls	ip, r0, r3, r7
   56e08:	cmp	ip, #0
   56e0c:	bne	56da4 <GetDataSlab+0x22c48>
   56e10:	ldr	r3, [sl, r2]
   56e14:	cmp	r3, #0
   56e18:	beq	56dc0 <GetDataSlab+0x22c64>
   56e1c:	sub	r0, fp, #176	; 0xb0
   56e20:	ldr	r0, [r0, r2]
   56e24:	mla	r7, r0, r3, r7
   56e28:	mul	r0, r0, r3
   56e2c:	b	56dbc <GetDataSlab+0x22c60>
   56e30:	ldr	r0, [sp, #76]	; 0x4c
   56e34:	ldr	r2, [fp, #20]
   56e38:	cmp	r0, #1
   56e3c:	sub	r0, fp, #176	; 0xb0
   56e40:	blt	5b69c <GetDataSlab+0x27540>
   56e44:	orr	r0, r0, #4
   56e48:	ldr	lr, [fp, #12]
   56e4c:	mov	r3, r8
   56e50:	sub	r6, fp, #136	; 0x88
   56e54:	add	r2, r2, #4
   56e58:	str	r0, [sp, #80]	; 0x50
   56e5c:	ldr	r0, [fp, #24]
   56e60:	orr	r8, r6, #4
   56e64:	str	r2, [sp, #84]	; 0x54
   56e68:	sub	r0, r0, #1
   56e6c:	str	r0, [sp, #60]	; 0x3c
   56e70:	orr	r0, r3, #4
   56e74:	str	r0, [sp, #56]	; 0x38
   56e78:	ldr	r0, [lr], #4
   56e7c:	str	r0, [sp, #64]	; 0x40
   56e80:	mov	r0, #0
   56e84:	str	r0, [sp, #68]	; 0x44
   56e88:	b	56ebc <GetDataSlab+0x22d60>
   56e8c:	ldr	r0, [sp, #56]	; 0x38
   56e90:	ldr	r0, [r0, r2]
   56e94:	add	sl, sl, r0, lsl #2
   56e98:	add	r7, r0, r7
   56e9c:	ldr	r3, [sp, #68]	; 0x44
   56ea0:	ldr	r0, [sp, #76]	; 0x4c
   56ea4:	mov	r2, #0
   56ea8:	str	r6, [sp, #72]	; 0x48
   56eac:	add	r3, r1, r3
   56eb0:	cmp	r3, r0
   56eb4:	str	r3, [sp, #68]	; 0x44
   56eb8:	bge	5b6a0 <GetDataSlab+0x27544>
   56ebc:	ldr	r0, [sp, #64]	; 0x40
   56ec0:	cmp	r1, #1
   56ec4:	add	r2, r0, r7
   56ec8:	add	r7, sl, r0, lsl #2
   56ecc:	blt	56f28 <GetDataSlab+0x22dcc>
   56ed0:	ldr	r0, [sp, #88]	; 0x58
   56ed4:	ldr	r1, [sp, #68]	; 0x44
   56ed8:	ldr	ip, [fp, #8]
   56edc:	ldr	r6, [fp, #16]
   56ee0:	mov	r3, #0
   56ee4:	add	r4, r0, r1, lsl #2
   56ee8:	ldr	r0, [fp, #20]
   56eec:	vldr	s0, [r7]
   56ef0:	vcvt.u32.f32	s0, s0
   56ef4:	vmov	r1, s0
   56ef8:	str	r1, [r4, r3, lsl #2]
   56efc:	add	r3, r3, #1
   56f00:	ldr	r5, [r6]
   56f04:	ldr	r1, [r0]
   56f08:	add	r7, r7, r5, lsl #2
   56f0c:	add	r2, r5, r2
   56f10:	cmp	r3, r1
   56f14:	blt	56eec <GetDataSlab+0x22d90>
   56f18:	ldr	r0, [fp, #12]
   56f1c:	ldr	r6, [ip]
   56f20:	ldr	r0, [r0]
   56f24:	b	56f2c <GetDataSlab+0x22dd0>
   56f28:	ldr	r6, [sp, #72]	; 0x48
   56f2c:	mls	r3, r5, r1, r6
   56f30:	str	r0, [sp, #64]	; 0x40
   56f34:	sub	r3, r3, r0
   56f38:	ldr	r0, [fp, #24]
   56f3c:	add	sl, r7, r3, lsl #2
   56f40:	add	r7, r3, r2
   56f44:	cmp	r0, #2
   56f48:	blt	56e9c <GetDataSlab+0x22d40>
   56f4c:	ldr	r9, [sp, #60]	; 0x3c
   56f50:	mov	r2, #0
   56f54:	b	56f80 <GetDataSlab+0x22e24>
   56f58:	sub	r0, fp, #176	; 0xb0
   56f5c:	ldr	r4, [lr, r2]
   56f60:	sub	r3, r3, ip
   56f64:	ldr	r0, [r0, r2]
   56f68:	mla	r0, r4, r0, r3
   56f6c:	add	r7, r0, r7
   56f70:	add	sl, sl, r0, lsl #2
   56f74:	subs	r9, r9, #1
   56f78:	add	r2, r2, #4
   56f7c:	beq	56e9c <GetDataSlab+0x22d40>
   56f80:	ldr	r3, [r8, r2]
   56f84:	ldr	r0, [sp, #84]	; 0x54
   56f88:	add	r3, r3, #1
   56f8c:	str	r3, [r8, r2]
   56f90:	ldr	r0, [r0, r2]
   56f94:	sdiv	r4, r3, r0
   56f98:	mls	r0, r4, r0, r3
   56f9c:	cmp	r0, #0
   56fa0:	bne	56e8c <GetDataSlab+0x22d30>
   56fa4:	mov	r0, #0
   56fa8:	str	r0, [r8, r2]
   56fac:	ldr	r0, [sp, #80]	; 0x50
   56fb0:	ldr	r3, [r0, r2]
   56fb4:	sdiv	r0, r7, r3
   56fb8:	mls	ip, r0, r3, r7
   56fbc:	cmp	ip, #0
   56fc0:	bne	56f58 <GetDataSlab+0x22dfc>
   56fc4:	ldr	r3, [lr, r2]
   56fc8:	cmp	r3, #0
   56fcc:	beq	56f74 <GetDataSlab+0x22e18>
   56fd0:	sub	r0, fp, #176	; 0xb0
   56fd4:	ldr	r0, [r0, r2]
   56fd8:	mla	r7, r0, r3, r7
   56fdc:	mul	r0, r0, r3
   56fe0:	b	56f70 <GetDataSlab+0x22e14>
   56fe4:	ldr	r0, [sp, #76]	; 0x4c
   56fe8:	ldr	r2, [fp, #20]
   56fec:	cmp	r0, #1
   56ff0:	sub	r0, fp, #176	; 0xb0
   56ff4:	blt	5b69c <GetDataSlab+0x27540>
   56ff8:	orr	r0, r0, #4
   56ffc:	ldr	lr, [fp, #12]
   57000:	mov	r3, r8
   57004:	sub	r6, fp, #136	; 0x88
   57008:	add	r2, r2, #4
   5700c:	str	r0, [sp, #80]	; 0x50
   57010:	ldr	r0, [fp, #24]
   57014:	orr	r8, r6, #4
   57018:	str	r2, [sp, #84]	; 0x54
   5701c:	sub	r0, r0, #1
   57020:	str	r0, [sp, #60]	; 0x3c
   57024:	orr	r0, r3, #4
   57028:	str	r0, [sp, #56]	; 0x38
   5702c:	ldr	r0, [lr], #4
   57030:	str	r0, [sp, #64]	; 0x40
   57034:	mov	r0, #0
   57038:	str	r0, [sp, #68]	; 0x44
   5703c:	b	57070 <GetDataSlab+0x22f14>
   57040:	ldr	r0, [sp, #56]	; 0x38
   57044:	ldr	r0, [r0, r2]
   57048:	add	sl, sl, r0, lsl #3
   5704c:	add	r7, r0, r7
   57050:	ldr	r3, [sp, #68]	; 0x44
   57054:	ldr	r0, [sp, #76]	; 0x4c
   57058:	mov	r2, #0
   5705c:	str	r6, [sp, #72]	; 0x48
   57060:	add	r3, r1, r3
   57064:	cmp	r3, r0
   57068:	str	r3, [sp, #68]	; 0x44
   5706c:	bge	5b6a0 <GetDataSlab+0x27544>
   57070:	ldr	r0, [sp, #64]	; 0x40
   57074:	cmp	r1, #1
   57078:	add	r2, r0, r7
   5707c:	add	r7, sl, r0, lsl #3
   57080:	blt	570dc <GetDataSlab+0x22f80>
   57084:	ldr	r0, [sp, #88]	; 0x58
   57088:	ldr	r1, [sp, #68]	; 0x44
   5708c:	ldr	ip, [fp, #8]
   57090:	ldr	r6, [fp, #16]
   57094:	mov	r3, #0
   57098:	add	r4, r0, r1, lsl #2
   5709c:	ldr	r0, [fp, #20]
   570a0:	vldr	d16, [r7]
   570a4:	vcvt.u32.f64	s0, d16
   570a8:	vmov	r1, s0
   570ac:	str	r1, [r4, r3, lsl #2]
   570b0:	add	r3, r3, #1
   570b4:	ldr	r5, [r6]
   570b8:	ldr	r1, [r0]
   570bc:	add	r7, r7, r5, lsl #3
   570c0:	add	r2, r5, r2
   570c4:	cmp	r3, r1
   570c8:	blt	570a0 <GetDataSlab+0x22f44>
   570cc:	ldr	r0, [fp, #12]
   570d0:	ldr	r6, [ip]
   570d4:	ldr	r0, [r0]
   570d8:	b	570e0 <GetDataSlab+0x22f84>
   570dc:	ldr	r6, [sp, #72]	; 0x48
   570e0:	mls	r3, r5, r1, r6
   570e4:	str	r0, [sp, #64]	; 0x40
   570e8:	sub	r3, r3, r0
   570ec:	ldr	r0, [fp, #24]
   570f0:	add	sl, r7, r3, lsl #3
   570f4:	add	r7, r3, r2
   570f8:	cmp	r0, #2
   570fc:	blt	57050 <GetDataSlab+0x22ef4>
   57100:	ldr	r9, [sp, #60]	; 0x3c
   57104:	mov	r2, #0
   57108:	b	57134 <GetDataSlab+0x22fd8>
   5710c:	sub	r0, fp, #176	; 0xb0
   57110:	ldr	r4, [lr, r2]
   57114:	sub	r3, r3, ip
   57118:	ldr	r0, [r0, r2]
   5711c:	mla	r0, r4, r0, r3
   57120:	add	r7, r0, r7
   57124:	add	sl, sl, r0, lsl #3
   57128:	subs	r9, r9, #1
   5712c:	add	r2, r2, #4
   57130:	beq	57050 <GetDataSlab+0x22ef4>
   57134:	ldr	r3, [r8, r2]
   57138:	ldr	r0, [sp, #84]	; 0x54
   5713c:	add	r3, r3, #1
   57140:	str	r3, [r8, r2]
   57144:	ldr	r0, [r0, r2]
   57148:	sdiv	r4, r3, r0
   5714c:	mls	r0, r4, r0, r3
   57150:	cmp	r0, #0
   57154:	bne	57040 <GetDataSlab+0x22ee4>
   57158:	mov	r0, #0
   5715c:	str	r0, [r8, r2]
   57160:	ldr	r0, [sp, #80]	; 0x50
   57164:	ldr	r3, [r0, r2]
   57168:	sdiv	r0, r7, r3
   5716c:	mls	ip, r0, r3, r7
   57170:	cmp	ip, #0
   57174:	bne	5710c <GetDataSlab+0x22fb0>
   57178:	ldr	r3, [lr, r2]
   5717c:	cmp	r3, #0
   57180:	beq	57128 <GetDataSlab+0x22fcc>
   57184:	sub	r0, fp, #176	; 0xb0
   57188:	ldr	r0, [r0, r2]
   5718c:	mla	r7, r0, r3, r7
   57190:	mul	r0, r0, r3
   57194:	b	57124 <GetDataSlab+0x22fc8>
   57198:	ldr	r0, [sp, #68]	; 0x44
   5719c:	ldr	r6, [fp, #16]
   571a0:	cmp	r0, #1
   571a4:	sub	r0, fp, #176	; 0xb0
   571a8:	blt	57338 <GetDataSlab+0x231dc>
   571ac:	ldr	ip, [fp, #12]
   571b0:	orr	r0, r0, #4
   571b4:	sub	r2, fp, #136	; 0x88
   571b8:	mov	r5, #0
   571bc:	str	r0, [sp, #72]	; 0x48
   571c0:	ldr	r0, [fp, #24]
   571c4:	orr	r8, r2, #4
   571c8:	ldr	r2, [fp, #20]
   571cc:	ldr	r4, [ip], #4
   571d0:	sub	r0, r0, #1
   571d4:	add	r2, r2, #4
   571d8:	str	r0, [sp, #52]	; 0x34
   571dc:	sub	r0, fp, #96	; 0x60
   571e0:	str	r2, [sp, #76]	; 0x4c
   571e4:	orr	r0, r0, #4
   571e8:	str	r0, [sp, #48]	; 0x30
   571ec:	b	57220 <GetDataSlab+0x230c4>
   571f0:	ldr	r0, [sp, #48]	; 0x30
   571f4:	ldr	r0, [r0, r2]
   571f8:	add	r9, r9, r0, lsl #3
   571fc:	add	r3, r0, r3
   57200:	ldr	r5, [sp, #60]	; 0x3c
   57204:	ldr	r0, [sp, #68]	; 0x44
   57208:	str	r6, [sp, #64]	; 0x40
   5720c:	ldr	r6, [fp, #16]
   57210:	ldr	r4, [sp, #56]	; 0x38
   57214:	add	r5, r1, r5
   57218:	cmp	r5, r0
   5721c:	bge	57338 <GetDataSlab+0x231dc>
   57220:	add	r2, r4, r3
   57224:	add	r3, r9, r4, lsl #3
   57228:	cmp	r1, #1
   5722c:	str	r5, [sp, #60]	; 0x3c
   57230:	blt	5727c <GetDataSlab+0x23120>
   57234:	ldr	r0, [sp, #88]	; 0x58
   57238:	mov	r4, #0
   5723c:	add	r5, r0, r5, lsl #2
   57240:	ldr	r0, [fp, #20]
   57244:	ldr	r1, [r3]
   57248:	str	r1, [r5, r4, lsl #2]
   5724c:	add	r4, r4, #1
   57250:	ldr	r7, [r6]
   57254:	ldr	r1, [r0]
   57258:	add	r3, r3, r7, lsl #3
   5725c:	add	r2, r7, r2
   57260:	cmp	r4, r1
   57264:	blt	57244 <GetDataSlab+0x230e8>
   57268:	ldr	r0, [fp, #12]
   5726c:	ldr	r4, [r0]
   57270:	ldr	r0, [fp, #8]
   57274:	ldr	r6, [r0]
   57278:	b	57280 <GetDataSlab+0x23124>
   5727c:	ldr	r6, [sp, #64]	; 0x40
   57280:	mls	r5, r7, r1, r6
   57284:	ldr	r0, [fp, #24]
   57288:	str	r4, [sp, #56]	; 0x38
   5728c:	sub	r4, r5, r4
   57290:	add	r9, r3, r4, lsl #3
   57294:	add	r3, r4, r2
   57298:	cmp	r0, #2
   5729c:	blt	57200 <GetDataSlab+0x230a4>
   572a0:	ldr	sl, [sp, #52]	; 0x34
   572a4:	mov	r2, #0
   572a8:	b	572d4 <GetDataSlab+0x23178>
   572ac:	sub	r0, fp, #176	; 0xb0
   572b0:	ldr	r5, [ip, r2]
   572b4:	sub	r4, r4, lr
   572b8:	ldr	r0, [r0, r2]
   572bc:	mla	r0, r5, r0, r4
   572c0:	add	r3, r0, r3
   572c4:	add	r9, r9, r0, lsl #3
   572c8:	subs	sl, sl, #1
   572cc:	add	r2, r2, #4
   572d0:	beq	57200 <GetDataSlab+0x230a4>
   572d4:	ldr	r4, [r8, r2]
   572d8:	ldr	r0, [sp, #76]	; 0x4c
   572dc:	add	r4, r4, #1
   572e0:	str	r4, [r8, r2]
   572e4:	ldr	r0, [r0, r2]
   572e8:	sdiv	r5, r4, r0
   572ec:	mls	r0, r5, r0, r4
   572f0:	cmp	r0, #0
   572f4:	bne	571f0 <GetDataSlab+0x23094>
   572f8:	mov	r0, #0
   572fc:	str	r0, [r8, r2]
   57300:	ldr	r0, [sp, #72]	; 0x48
   57304:	ldr	r4, [r0, r2]
   57308:	sdiv	r0, r3, r4
   5730c:	mls	lr, r0, r4, r3
   57310:	cmp	lr, #0
   57314:	bne	572ac <GetDataSlab+0x23150>
   57318:	ldr	r4, [ip, r2]
   5731c:	cmp	r4, #0
   57320:	beq	572c8 <GetDataSlab+0x2316c>
   57324:	sub	r0, fp, #176	; 0xb0
   57328:	ldr	r0, [r0, r2]
   5732c:	mla	r3, r0, r4, r3
   57330:	mul	r0, r0, r4
   57334:	b	572c4 <GetDataSlab+0x23168>
   57338:	ldr	r7, [sp, #84]	; 0x54
   5733c:	mov	r2, #0
   57340:	cmp	r7, #13
   57344:	bne	5b6a0 <GetDataSlab+0x27544>
   57348:	ldr	r0, [fp, #16]
   5734c:	mov	r7, #0
   57350:	sub	r9, fp, #176	; 0xb0
   57354:	sub	r8, fp, #96	; 0x60
   57358:	ldr	r5, [r0]
   5735c:	sub	r0, r5, #1
   57360:	str	r0, [fp, #-96]	; 0xffffffa0
   57364:	ldr	r0, [fp, #8]
   57368:	ldr	r0, [r0]
   5736c:	str	r0, [sp, #72]	; 0x48
   57370:	str	r0, [fp, #-176]	; 0xffffff50
   57374:	ldr	r0, [fp, #20]
   57378:	ldr	r1, [r0]
   5737c:	ldr	r0, [fp, #24]
   57380:	cmp	r0, #2
   57384:	mov	r0, r1
   57388:	str	r1, [sp, #76]	; 0x4c
   5738c:	blt	57500 <GetDataSlab+0x233a4>
   57390:	ldr	r0, [fp, #8]
   57394:	ldr	r4, [sp, #72]	; 0x48
   57398:	mov	r3, #0
   5739c:	mvn	ip, #15
   573a0:	mov	r7, #0
   573a4:	str	r1, [sp, #76]	; 0x4c
   573a8:	str	r3, [sp, #84]	; 0x54
   573ac:	mov	r3, r1
   573b0:	mov	r2, r0
   573b4:	sub	r0, r0, #4
   573b8:	mov	r6, r4
   573bc:	sub	sl, r2, #12
   573c0:	mov	r2, #1
   573c4:	b	57418 <GetDataSlab+0x232bc>
   573c8:	sub	r8, fp, #96	; 0x60
   573cc:	ldr	r3, [fp, #12]
   573d0:	sub	r9, fp, #176	; 0xb0
   573d4:	str	lr, [r8, r2, lsl #2]
   573d8:	ldr	r6, [sp, #68]	; 0x44
   573dc:	add	sl, sl, #4
   573e0:	str	r4, [r9, r2, lsl #2]
   573e4:	ldr	r3, [r3, r2, lsl #2]
   573e8:	mla	r7, r3, r6, r7
   573ec:	ldr	r3, [fp, #20]
   573f0:	ldr	r6, [sp, #76]	; 0x4c
   573f4:	ldr	r3, [r3, r2, lsl #2]
   573f8:	add	r2, r2, #1
   573fc:	mul	r6, r3, r6
   57400:	ldr	r3, [fp, #24]
   57404:	str	r6, [sp, #76]	; 0x4c
   57408:	mov	r6, r4
   5740c:	ldr	r4, [sp, #64]	; 0x40
   57410:	cmp	r2, r3
   57414:	beq	57500 <GetDataSlab+0x233a4>
   57418:	ldr	r3, [fp, #16]
   5741c:	str	r6, [sp, #68]	; 0x44
   57420:	ldr	r3, [r3, r2, lsl #2]
   57424:	str	r4, [r9, r2, lsl #2]
   57428:	ldr	r9, [sp, #84]	; 0x54
   5742c:	sub	lr, r3, #1
   57430:	ldr	r3, [fp, #8]
   57434:	add	r9, r9, #1
   57438:	str	lr, [r8, r2, lsl #2]
   5743c:	cmp	r9, #4
   57440:	str	r9, [sp, #84]	; 0x54
   57444:	ldr	r6, [r3, r2, lsl #2]
   57448:	str	r6, [sp, #64]	; 0x40
   5744c:	bcs	57458 <GetDataSlab+0x232fc>
   57450:	mov	r3, r2
   57454:	b	574e8 <GetDataSlab+0x2338c>
   57458:	vmov.i32	q9, #1	; 0x00000001
   5745c:	vmov.i32	q10, #1	; 0x00000001
   57460:	vmov.32	d23[1], r6
   57464:	vmov.i32	q8, #1	; 0x00000001
   57468:	bic	r3, r9, #3
   5746c:	bic	r8, r2, #3
   57470:	mov	r6, sl
   57474:	str	r3, [sp, #60]	; 0x3c
   57478:	sub	r3, r2, r3
   5747c:	vmov.32	d18[0], r4
   57480:	vmov.32	d20[0], lr
   57484:	vorr	d16, d18, d18
   57488:	vmov.i32	q9, #1	; 0x00000001
   5748c:	vorr	d18, d20, d20
   57490:	vld1.32	{d20-d21}, [r6], ip
   57494:	subs	r8, r8, #4
   57498:	vrev64.32	q12, q10
   5749c:	vext.8	q12, q12, q12, #8
   574a0:	vext.8	q11, q11, q12, #12
   574a4:	vmul.i32	q9, q9, q12
   574a8:	vmul.i32	q8, q11, q8
   574ac:	vorr	q11, q12, q12
   574b0:	bne	57490 <GetDataSlab+0x23334>
   574b4:	vext.8	q11, q9, q8, #8
   574b8:	vext.8	q12, q8, q8, #8
   574bc:	ldr	r6, [sp, #60]	; 0x3c
   574c0:	vmul.i32	q0, q9, q11
   574c4:	vmul.i32	q1, q8, q12
   574c8:	cmp	r9, r6
   574cc:	vmul.i32	q8, q0, d0[1]
   574d0:	vmul.i32	q9, q1, d2[1]
   574d4:	vmov.32	lr, d16[0]
   574d8:	vmov.32	r4, d18[0]
   574dc:	beq	573c8 <GetDataSlab+0x2326c>
   574e0:	vmov.32	r6, d20[0]
   574e4:	sub	r8, fp, #96	; 0x60
   574e8:	mul	r4, r6, r4
   574ec:	ldr	r6, [r0, r3, lsl #2]
   574f0:	subs	r3, r3, #1
   574f4:	mul	lr, lr, r6
   574f8:	bne	574e8 <GetDataSlab+0x2338c>
   574fc:	b	573cc <GetDataSlab+0x23270>
   57500:	ldr	r0, [sp, #80]	; 0x50
   57504:	cmp	r5, #1
   57508:	add	sl, r0, r7, lsl #3
   5750c:	bne	5b1f4 <GetDataSlab+0x27098>
   57510:	ldr	r0, [sp, #76]	; 0x4c
   57514:	ldr	r3, [fp, #20]
   57518:	sub	r2, fp, #176	; 0xb0
   5751c:	cmp	r0, #1
   57520:	blt	5b69c <GetDataSlab+0x27540>
   57524:	orr	r2, r2, #4
   57528:	ldr	lr, [fp, #12]
   5752c:	sub	r0, fp, #136	; 0x88
   57530:	add	r4, r3, #4
   57534:	str	r2, [sp, #84]	; 0x54
   57538:	ldr	r2, [fp, #24]
   5753c:	orr	r0, r0, #4
   57540:	sub	r2, r2, #1
   57544:	str	r2, [sp, #68]	; 0x44
   57548:	orr	r2, r8, #4
   5754c:	mov	r8, #0
   57550:	str	r2, [sp, #64]	; 0x40
   57554:	ldr	r2, [lr], #4
   57558:	str	r2, [sp, #80]	; 0x50
   5755c:	b	57584 <GetDataSlab+0x23428>
   57560:	ldr	r3, [sp, #64]	; 0x40
   57564:	ldr	r2, [r3, r2]
   57568:	add	sl, sl, r2, lsl #3
   5756c:	add	r7, r2, r7
   57570:	ldr	r2, [sp, #76]	; 0x4c
   57574:	add	r8, r1, r8
   57578:	cmp	r8, r2
   5757c:	mov	r2, #0
   57580:	bge	5b6a0 <GetDataSlab+0x27544>
   57584:	ldr	r5, [sp, #80]	; 0x50
   57588:	ldr	r2, [sp, #72]	; 0x48
   5758c:	cmp	r1, #1
   57590:	sub	ip, fp, #176	; 0xb0
   57594:	add	r9, sl, r5, lsl #3
   57598:	add	r3, r5, r7
   5759c:	blt	575e4 <GetDataSlab+0x23488>
   575a0:	ldr	r1, [sp, #88]	; 0x58
   575a4:	ldr	r5, [fp, #20]
   575a8:	mov	r6, r4
   575ac:	mov	r2, #0
   575b0:	mov	r7, r9
   575b4:	add	r4, r1, r8, lsl #2
   575b8:	ldr	r1, [r7], #8
   575bc:	str	r1, [r4, r2, lsl #2]
   575c0:	add	r2, r2, #1
   575c4:	ldr	r1, [r5]
   575c8:	cmp	r2, r1
   575cc:	blt	575b8 <GetDataSlab+0x2345c>
   575d0:	ldr	r2, [fp, #12]
   575d4:	mov	r4, r6
   575d8:	ldr	r5, [r2]
   575dc:	ldr	r2, [fp, #8]
   575e0:	ldr	r2, [r2]
   575e4:	str	r2, [sp, #72]	; 0x48
   575e8:	sub	r2, r2, r5
   575ec:	str	r5, [sp, #80]	; 0x50
   575f0:	add	sl, r9, r2, lsl #3
   575f4:	add	r7, r3, r2
   575f8:	ldr	r2, [fp, #24]
   575fc:	cmp	r2, #2
   57600:	blt	57570 <GetDataSlab+0x23414>
   57604:	ldr	r9, [sp, #68]	; 0x44
   57608:	mov	r2, #0
   5760c:	b	57638 <GetDataSlab+0x234dc>
   57610:	ldr	r6, [ip, r2]
   57614:	ldr	ip, [lr, r2]
   57618:	sub	r3, r3, r5
   5761c:	mla	r3, ip, r6, r3
   57620:	sub	ip, fp, #176	; 0xb0
   57624:	add	r7, r3, r7
   57628:	add	sl, sl, r3, lsl #3
   5762c:	subs	r9, r9, #1
   57630:	add	r2, r2, #4
   57634:	beq	57570 <GetDataSlab+0x23414>
   57638:	ldr	r3, [r0, r2]
   5763c:	add	r3, r3, #1
   57640:	str	r3, [r0, r2]
   57644:	ldr	r5, [r4, r2]
   57648:	sdiv	r6, r3, r5
   5764c:	mls	r3, r6, r5, r3
   57650:	cmp	r3, #0
   57654:	bne	57560 <GetDataSlab+0x23404>
   57658:	mov	r3, #0
   5765c:	str	r3, [r0, r2]
   57660:	ldr	r3, [sp, #84]	; 0x54
   57664:	ldr	r3, [r3, r2]
   57668:	sdiv	r5, r7, r3
   5766c:	mls	r5, r5, r3, r7
   57670:	cmp	r5, #0
   57674:	bne	57610 <GetDataSlab+0x234b4>
   57678:	ldr	r3, [lr, r2]
   5767c:	cmp	r3, #0
   57680:	beq	5762c <GetDataSlab+0x234d0>
   57684:	ldr	r6, [ip, r2]
   57688:	mla	r7, r6, r3, r7
   5768c:	mul	r3, r6, r3
   57690:	b	57628 <GetDataSlab+0x234cc>
   57694:	ldr	r0, [sp, #72]	; 0x48
   57698:	sub	r1, fp, #176	; 0xb0
   5769c:	cmp	r0, #1
   576a0:	ldr	r0, [sp, #88]	; 0x58
   576a4:	blt	5b69c <GetDataSlab+0x27540>
   576a8:	ldr	r3, [sp, #68]	; 0x44
   576ac:	ldr	r2, [sp, #40]	; 0x28
   576b0:	orr	r1, r1, #4
   576b4:	str	r0, [sp, #76]	; 0x4c
   576b8:	mov	r0, #0
   576bc:	mov	sl, #0
   576c0:	str	r1, [sp, #84]	; 0x54
   576c4:	ldr	r1, [fp, #12]
   576c8:	str	r0, [sp, #64]	; 0x40
   576cc:	mls	r2, r3, lr, r2
   576d0:	add	r1, r1, #4
   576d4:	str	r1, [sp, #80]	; 0x50
   576d8:	ldr	r1, [fp, #24]
   576dc:	str	r2, [sp, #60]	; 0x3c
   576e0:	mul	r2, r3, lr
   576e4:	str	r2, [sp, #52]	; 0x34
   576e8:	sub	r2, fp, #136	; 0x88
   576ec:	sub	r1, r1, #1
   576f0:	orr	r4, r2, #4
   576f4:	ldr	r2, [fp, #20]
   576f8:	str	r1, [sp, #44]	; 0x2c
   576fc:	sub	r1, fp, #96	; 0x60
   57700:	orr	r1, r1, #4
   57704:	str	r1, [sp, #40]	; 0x28
   57708:	mov	r1, r3
   5770c:	add	r6, r2, #4
   57710:	and	r2, r3, #1
   57714:	sub	ip, r3, r2
   57718:	str	r2, [sp, #48]	; 0x30
   5771c:	lsl	r2, r3, #3
   57720:	str	r2, [sp, #56]	; 0x38
   57724:	b	57768 <GetDataSlab+0x2360c>
   57728:	ldr	r0, [sp, #40]	; 0x28
   5772c:	ldr	r0, [r0, r2]
   57730:	add	r9, r9, r0
   57734:	add	r7, r0, r7
   57738:	ldr	r0, [sp, #56]	; 0x38
   5773c:	ldr	r1, [sp, #76]	; 0x4c
   57740:	ldr	r3, [sp, #64]	; 0x40
   57744:	mov	r2, #0
   57748:	add	r1, r1, r0
   5774c:	ldr	r0, [sp, #72]	; 0x48
   57750:	str	r1, [sp, #76]	; 0x4c
   57754:	ldr	r1, [sp, #68]	; 0x44
   57758:	add	r3, r3, r1
   5775c:	cmp	r3, r0
   57760:	str	r3, [sp, #64]	; 0x40
   57764:	bge	5b6a0 <GetDataSlab+0x27544>
   57768:	ldr	r0, [fp, #12]
   5776c:	cmp	r1, #1
   57770:	ldr	r2, [r0]
   57774:	add	r5, r9, r2
   57778:	blt	577ec <GetDataSlab+0x23690>
   5777c:	ldr	r8, [sp, #88]	; 0x58
   57780:	mov	r0, #0
   57784:	cmp	r1, #1
   57788:	beq	577bc <GetDataSlab+0x23660>
   5778c:	ldr	r1, [sp, #76]	; 0x4c
   57790:	mov	r0, #0
   57794:	ldrb	r3, [r5]
   57798:	add	r0, r0, #2
   5779c:	cmp	ip, r0
   577a0:	stm	r1, {r3, sl}
   577a4:	ldrb	r3, [r5, lr]!
   577a8:	str	sl, [r1, #12]
   577ac:	add	r5, r5, lr
   577b0:	str	r3, [r1, #8]
   577b4:	add	r1, r1, #16
   577b8:	bne	57794 <GetDataSlab+0x23638>
   577bc:	ldr	r1, [sp, #52]	; 0x34
   577c0:	ldr	r3, [sp, #48]	; 0x30
   577c4:	add	r1, r1, r7
   577c8:	cmp	r3, #0
   577cc:	beq	577e4 <GetDataSlab+0x23688>
   577d0:	ldr	r3, [sp, #64]	; 0x40
   577d4:	ldrb	r7, [r5], lr
   577d8:	add	r3, r8, r3, lsl #3
   577dc:	str	r7, [r3, r0, lsl #3]!
   577e0:	str	sl, [r3, #4]
   577e4:	add	r0, r1, r2
   577e8:	b	577f0 <GetDataSlab+0x23694>
   577ec:	add	r0, r2, r7
   577f0:	ldr	r1, [sp, #60]	; 0x3c
   577f4:	sub	r1, r1, r2
   577f8:	add	r7, r0, r1
   577fc:	ldr	r0, [fp, #24]
   57800:	add	r9, r5, r1
   57804:	cmp	r0, #2
   57808:	blt	57738 <GetDataSlab+0x235dc>
   5780c:	ldr	r8, [sp, #44]	; 0x2c
   57810:	mov	r2, #0
   57814:	b	57844 <GetDataSlab+0x236e8>
   57818:	ldr	r5, [sp, #80]	; 0x50
   5781c:	sub	r3, fp, #176	; 0xb0
   57820:	sub	r0, r0, r1
   57824:	ldr	r3, [r3, r2]
   57828:	ldr	r5, [r5, r2]
   5782c:	mla	r0, r5, r3, r0
   57830:	add	r7, r0, r7
   57834:	add	r9, r9, r0
   57838:	subs	r8, r8, #1
   5783c:	add	r2, r2, #4
   57840:	beq	57738 <GetDataSlab+0x235dc>
   57844:	ldr	r0, [r4, r2]
   57848:	add	r0, r0, #1
   5784c:	str	r0, [r4, r2]
   57850:	ldr	r1, [r6, r2]
   57854:	sdiv	r3, r0, r1
   57858:	mls	r0, r3, r1, r0
   5785c:	cmp	r0, #0
   57860:	bne	57728 <GetDataSlab+0x235cc>
   57864:	ldr	r0, [sp, #84]	; 0x54
   57868:	str	sl, [r4, r2]
   5786c:	ldr	r0, [r0, r2]
   57870:	sdiv	r1, r7, r0
   57874:	mls	r1, r1, r0, r7
   57878:	cmp	r1, #0
   5787c:	bne	57818 <GetDataSlab+0x236bc>
   57880:	ldr	r0, [sp, #80]	; 0x50
   57884:	ldr	r0, [r0, r2]
   57888:	cmp	r0, #0
   5788c:	beq	57838 <GetDataSlab+0x236dc>
   57890:	sub	r1, fp, #176	; 0xb0
   57894:	ldr	r1, [r1, r2]
   57898:	mla	r7, r1, r0, r7
   5789c:	mla	r9, r1, r0, r9
   578a0:	subs	r8, r8, #1
   578a4:	add	r2, r2, #4
   578a8:	bne	57844 <GetDataSlab+0x236e8>
   578ac:	b	57738 <GetDataSlab+0x235dc>
   578b0:	ldr	r0, [sp, #76]	; 0x4c
   578b4:	ldr	r2, [fp, #12]
   578b8:	ldr	r3, [fp, #20]
   578bc:	cmp	r0, #1
   578c0:	ldr	r0, [sp, #60]	; 0x3c
   578c4:	blt	5b69c <GetDataSlab+0x27540>
   578c8:	mov	ip, r3
   578cc:	ldr	r3, [sp, #72]	; 0x48
   578d0:	ldr	r8, [r2], #4
   578d4:	lsl	sl, r7, #1
   578d8:	lsl	r9, r7, #2
   578dc:	add	lr, ip, #4
   578e0:	str	r2, [sp, #92]	; 0x5c
   578e4:	mls	r0, r3, r7, r0
   578e8:	str	r8, [sp, #64]	; 0x40
   578ec:	sub	r0, r0, r8
   578f0:	str	r0, [sp, #60]	; 0x3c
   578f4:	sub	r0, fp, #136	; 0x88
   578f8:	orr	r4, r0, #4
   578fc:	sub	r0, fp, #176	; 0xb0
   57900:	orr	r0, r0, #4
   57904:	str	r0, [sp, #84]	; 0x54
   57908:	ldr	r0, [fp, #24]
   5790c:	sub	r0, r0, #1
   57910:	str	r0, [sp, #44]	; 0x2c
   57914:	orr	r0, r6, #4
   57918:	str	r0, [sp, #40]	; 0x28
   5791c:	mla	r0, r3, r7, r8
   57920:	str	r0, [sp, #52]	; 0x34
   57924:	and	r0, r3, #1
   57928:	sub	r8, r3, r0
   5792c:	str	r0, [sp, #48]	; 0x30
   57930:	lsl	r0, r3, #3
   57934:	str	r0, [sp, #56]	; 0x38
   57938:	ldr	r0, [sp, #88]	; 0x58
   5793c:	str	r0, [sp, #80]	; 0x50
   57940:	mov	r0, #0
   57944:	str	r0, [sp, #68]	; 0x44
   57948:	ldr	r6, [sp, #64]	; 0x40
   5794c:	cmp	r3, #1
   57950:	add	r2, r5, r6, lsl #1
   57954:	bge	579ac <GetDataSlab+0x23850>
   57958:	b	57a24 <GetDataSlab+0x238c8>
   5795c:	ldr	r0, [sp, #40]	; 0x28
   57960:	ldr	r0, [r0, r2]
   57964:	add	r5, r5, r0, lsl #1
   57968:	add	r1, r0, r1
   5796c:	ldr	r0, [sp, #56]	; 0x38
   57970:	ldr	r2, [sp, #80]	; 0x50
   57974:	ldr	r3, [sp, #72]	; 0x48
   57978:	ldr	r7, [sp, #68]	; 0x44
   5797c:	add	r2, r2, r0
   57980:	ldr	r0, [sp, #76]	; 0x4c
   57984:	add	r7, r7, r3
   57988:	str	r2, [sp, #80]	; 0x50
   5798c:	mov	r2, #0
   57990:	str	r7, [sp, #68]	; 0x44
   57994:	cmp	r7, r0
   57998:	bge	5b6a0 <GetDataSlab+0x27544>
   5799c:	ldr	r6, [sp, #64]	; 0x40
   579a0:	cmp	r3, #1
   579a4:	add	r2, r5, r6, lsl #1
   579a8:	blt	57a24 <GetDataSlab+0x238c8>
   579ac:	mov	r3, #0
   579b0:	beq	579f4 <GetDataSlab+0x23898>
   579b4:	ldr	r5, [sp, #80]	; 0x50
   579b8:	mov	r3, #0
   579bc:	ldrsh	r6, [r2]
   579c0:	add	r3, r3, #2
   579c4:	cmp	r8, r3
   579c8:	str	r6, [r5]
   579cc:	asr	r6, r6, #31
   579d0:	str	r6, [r5, #4]
   579d4:	add	r6, r2, sl
   579d8:	add	r2, r2, r9
   579dc:	ldrsh	r6, [r6]
   579e0:	str	r6, [r5, #8]
   579e4:	asr	r6, r6, #31
   579e8:	str	r6, [r5, #12]
   579ec:	add	r5, r5, #16
   579f0:	bne	579bc <GetDataSlab+0x23860>
   579f4:	ldr	r0, [sp, #48]	; 0x30
   579f8:	ldr	r6, [sp, #52]	; 0x34
   579fc:	cmp	r0, #0
   57a00:	beq	57a24 <GetDataSlab+0x238c8>
   57a04:	ldr	r0, [sp, #88]	; 0x58
   57a08:	ldr	r7, [sp, #68]	; 0x44
   57a0c:	ldrsh	r5, [r2], sl
   57a10:	add	r6, r0, r7, lsl #3
   57a14:	str	r5, [r6, r3, lsl #3]!
   57a18:	asr	r3, r5, #31
   57a1c:	str	r3, [r6, #4]
   57a20:	ldr	r6, [sp, #52]	; 0x34
   57a24:	ldr	r0, [sp, #60]	; 0x3c
   57a28:	add	r1, r6, r1
   57a2c:	add	r5, r2, r0, lsl #1
   57a30:	add	r1, r1, r0
   57a34:	ldr	r0, [fp, #24]
   57a38:	cmp	r0, #2
   57a3c:	blt	5796c <GetDataSlab+0x23810>
   57a40:	ldr	r3, [sp, #44]	; 0x2c
   57a44:	mov	r2, #0
   57a48:	b	57a78 <GetDataSlab+0x2391c>
   57a4c:	ldr	r7, [sp, #92]	; 0x5c
   57a50:	sub	r0, fp, #176	; 0xb0
   57a54:	sub	r6, r6, ip
   57a58:	ldr	r0, [r0, r2]
   57a5c:	ldr	r7, [r7, r2]
   57a60:	mla	r0, r7, r0, r6
   57a64:	add	r1, r0, r1
   57a68:	add	r5, r5, r0, lsl #1
   57a6c:	subs	r3, r3, #1
   57a70:	add	r2, r2, #4
   57a74:	beq	5796c <GetDataSlab+0x23810>
   57a78:	ldr	r6, [r4, r2]
   57a7c:	add	r6, r6, #1
   57a80:	str	r6, [r4, r2]
   57a84:	ldr	r7, [lr, r2]
   57a88:	sdiv	r0, r6, r7
   57a8c:	mls	r0, r0, r7, r6
   57a90:	cmp	r0, #0
   57a94:	bne	5795c <GetDataSlab+0x23800>
   57a98:	mov	r0, #0
   57a9c:	str	r0, [r4, r2]
   57aa0:	ldr	r0, [sp, #84]	; 0x54
   57aa4:	ldr	r6, [r0, r2]
   57aa8:	sdiv	r0, r1, r6
   57aac:	mls	ip, r0, r6, r1
   57ab0:	cmp	ip, #0
   57ab4:	bne	57a4c <GetDataSlab+0x238f0>
   57ab8:	ldr	r0, [sp, #92]	; 0x5c
   57abc:	ldr	r6, [r0, r2]
   57ac0:	cmp	r6, #0
   57ac4:	beq	57a6c <GetDataSlab+0x23910>
   57ac8:	sub	r0, fp, #176	; 0xb0
   57acc:	ldr	r0, [r0, r2]
   57ad0:	mla	r1, r0, r6, r1
   57ad4:	mul	r0, r0, r6
   57ad8:	b	57a68 <GetDataSlab+0x2390c>
   57adc:	ldr	r0, [sp, #76]	; 0x4c
   57ae0:	ldr	r2, [fp, #12]
   57ae4:	sub	r3, fp, #96	; 0x60
   57ae8:	cmp	r0, #1
   57aec:	ldr	r0, [sp, #56]	; 0x38
   57af0:	blt	5b69c <GetDataSlab+0x27540>
   57af4:	ldr	r7, [sp, #72]	; 0x48
   57af8:	ldr	r5, [r2], #4
   57afc:	ldr	r4, [sp, #44]	; 0x2c
   57b00:	lsl	sl, r6, #1
   57b04:	lsl	r8, r6, #2
   57b08:	mov	lr, #0
   57b0c:	str	r2, [sp, #92]	; 0x5c
   57b10:	mls	r0, r7, r6, r0
   57b14:	mla	r2, r7, r6, r5
   57b18:	str	r5, [sp, #60]	; 0x3c
   57b1c:	sub	r0, r0, r5
   57b20:	str	r2, [sp, #48]	; 0x30
   57b24:	and	r2, r7, #1
   57b28:	ldr	r5, [sp, #88]	; 0x58
   57b2c:	str	r0, [sp, #56]	; 0x38
   57b30:	sub	r0, fp, #136	; 0x88
   57b34:	str	r2, [sp, #40]	; 0x28
   57b38:	sub	r2, r7, r2
   57b3c:	orr	r9, r0, #4
   57b40:	ldr	r0, [fp, #20]
   57b44:	str	r2, [sp, #32]
   57b48:	lsl	r2, r7, #3
   57b4c:	str	r2, [sp, #52]	; 0x34
   57b50:	mov	r2, #0
   57b54:	str	r2, [sp, #68]	; 0x44
   57b58:	add	r0, r0, #4
   57b5c:	str	r0, [sp, #84]	; 0x54
   57b60:	orr	r0, ip, #4
   57b64:	str	r0, [sp, #80]	; 0x50
   57b68:	ldr	r0, [fp, #24]
   57b6c:	sub	r0, r0, #1
   57b70:	str	r0, [sp, #36]	; 0x24
   57b74:	orr	r0, r3, #4
   57b78:	str	r0, [sp, #28]
   57b7c:	mov	r0, r7
   57b80:	b	57bc0 <GetDataSlab+0x23a64>
   57b84:	ldr	r0, [sp, #28]
   57b88:	ldr	r0, [r0, r2]
   57b8c:	add	r4, r4, r0, lsl #1
   57b90:	add	r1, r0, r1
   57b94:	ldr	r0, [sp, #52]	; 0x34
   57b98:	ldr	r5, [sp, #64]	; 0x40
   57b9c:	ldr	r7, [sp, #68]	; 0x44
   57ba0:	ldr	r3, [sp, #76]	; 0x4c
   57ba4:	mov	r2, #0
   57ba8:	add	r5, r5, r0
   57bac:	ldr	r0, [sp, #72]	; 0x48
   57bb0:	add	r7, r7, r0
   57bb4:	cmp	r7, r3
   57bb8:	str	r7, [sp, #68]	; 0x44
   57bbc:	bge	5b6a0 <GetDataSlab+0x27544>
   57bc0:	ldr	ip, [sp, #60]	; 0x3c
   57bc4:	cmp	r0, #1
   57bc8:	str	r5, [sp, #64]	; 0x40
   57bcc:	add	r2, r4, ip, lsl #1
   57bd0:	blt	57c3c <GetDataSlab+0x23ae0>
   57bd4:	mov	r3, #0
   57bd8:	beq	57c10 <GetDataSlab+0x23ab4>
   57bdc:	ldr	r0, [sp, #32]
   57be0:	mov	r3, #0
   57be4:	ldrh	r7, [r2]
   57be8:	add	r3, r3, #2
   57bec:	cmp	r0, r3
   57bf0:	stm	r5, {r7, lr}
   57bf4:	add	r7, r2, sl
   57bf8:	add	r2, r2, r8
   57bfc:	ldrh	r7, [r7]
   57c00:	str	lr, [r5, #12]
   57c04:	str	r7, [r5, #8]
   57c08:	add	r5, r5, #16
   57c0c:	bne	57be4 <GetDataSlab+0x23a88>
   57c10:	ldr	r0, [sp, #40]	; 0x28
   57c14:	ldr	ip, [sp, #48]	; 0x30
   57c18:	cmp	r0, #0
   57c1c:	beq	57c3c <GetDataSlab+0x23ae0>
   57c20:	ldr	r0, [sp, #88]	; 0x58
   57c24:	ldr	r7, [sp, #68]	; 0x44
   57c28:	ldrh	r6, [r2], sl
   57c2c:	add	r7, r0, r7, lsl #3
   57c30:	str	r6, [r7, r3, lsl #3]!
   57c34:	ldr	ip, [sp, #48]	; 0x30
   57c38:	str	lr, [r7, #4]
   57c3c:	ldr	r0, [sp, #56]	; 0x38
   57c40:	add	r1, ip, r1
   57c44:	add	r4, r2, r0, lsl #1
   57c48:	add	r1, r1, r0
   57c4c:	ldr	r0, [fp, #24]
   57c50:	cmp	r0, #2
   57c54:	blt	57b94 <GetDataSlab+0x23a38>
   57c58:	ldr	r3, [sp, #36]	; 0x24
   57c5c:	mov	r2, #0
   57c60:	sub	ip, fp, #176	; 0xb0
   57c64:	b	57c90 <GetDataSlab+0x23b34>
   57c68:	ldr	r0, [sp, #92]	; 0x5c
   57c6c:	ldr	r5, [ip, r2]
   57c70:	sub	r7, r6, r7
   57c74:	ldr	r0, [r0, r2]
   57c78:	mla	r0, r0, r5, r7
   57c7c:	add	r1, r0, r1
   57c80:	add	r4, r4, r0, lsl #1
   57c84:	subs	r3, r3, #1
   57c88:	add	r2, r2, #4
   57c8c:	beq	57b94 <GetDataSlab+0x23a38>
   57c90:	ldr	r7, [r9, r2]
   57c94:	ldr	r0, [sp, #84]	; 0x54
   57c98:	add	r7, r7, #1
   57c9c:	str	r7, [r9, r2]
   57ca0:	ldr	r6, [r0, r2]
   57ca4:	sdiv	r5, r7, r6
   57ca8:	mls	r7, r5, r6, r7
   57cac:	cmp	r7, #0
   57cb0:	bne	57b84 <GetDataSlab+0x23a28>
   57cb4:	ldr	r0, [sp, #80]	; 0x50
   57cb8:	str	lr, [r9, r2]
   57cbc:	ldr	r6, [r0, r2]
   57cc0:	sdiv	r7, r1, r6
   57cc4:	mls	r7, r7, r6, r1
   57cc8:	cmp	r7, #0
   57ccc:	bne	57c68 <GetDataSlab+0x23b0c>
   57cd0:	ldr	r0, [sp, #92]	; 0x5c
   57cd4:	ldr	r7, [r0, r2]
   57cd8:	cmp	r7, #0
   57cdc:	beq	57c84 <GetDataSlab+0x23b28>
   57ce0:	ldr	r0, [ip, r2]
   57ce4:	mla	r1, r0, r7, r1
   57ce8:	mul	r0, r0, r7
   57cec:	b	57c80 <GetDataSlab+0x23b24>
   57cf0:	ldr	r0, [sp, #76]	; 0x4c
   57cf4:	ldr	r1, [sp, #72]	; 0x48
   57cf8:	ldr	r7, [sp, #52]	; 0x34
   57cfc:	cmp	r0, #1
   57d00:	ldr	r0, [fp, #20]
   57d04:	blt	5b69c <GetDataSlab+0x27540>
   57d08:	add	lr, r0, #4
   57d0c:	ldr	r0, [fp, #12]
   57d10:	mls	r1, r1, r4, r7
   57d14:	orr	r2, r2, #4
   57d18:	lsl	r9, r4, #3
   57d1c:	str	r1, [sp, #64]	; 0x40
   57d20:	sub	r1, fp, #136	; 0x88
   57d24:	add	r0, r0, #4
   57d28:	orr	r6, r1, #4
   57d2c:	ldr	r1, [sp, #72]	; 0x48
   57d30:	str	r0, [sp, #84]	; 0x54
   57d34:	ldr	r0, [fp, #24]
   57d38:	sub	r0, r0, #1
   57d3c:	str	r0, [sp, #44]	; 0x2c
   57d40:	sub	r0, fp, #96	; 0x60
   57d44:	orr	r0, r0, #4
   57d48:	str	r0, [sp, #40]	; 0x28
   57d4c:	mul	r0, r1, r4
   57d50:	mov	r4, r2
   57d54:	str	r0, [sp, #52]	; 0x34
   57d58:	and	r0, r1, #1
   57d5c:	sub	ip, r1, r0
   57d60:	str	r0, [sp, #48]	; 0x30
   57d64:	lsl	r0, r1, #3
   57d68:	str	r0, [sp, #60]	; 0x3c
   57d6c:	ldr	r0, [sp, #88]	; 0x58
   57d70:	str	r0, [sp, #80]	; 0x50
   57d74:	mov	r0, #0
   57d78:	str	r0, [sp, #68]	; 0x44
   57d7c:	b	57dc0 <GetDataSlab+0x23c64>
   57d80:	ldr	r0, [sp, #40]	; 0x28
   57d84:	ldr	r0, [r0, r2]
   57d88:	add	r8, r8, r0, lsl #2
   57d8c:	add	r3, r0, r3
   57d90:	ldr	r0, [sp, #60]	; 0x3c
   57d94:	ldr	r1, [sp, #80]	; 0x50
   57d98:	ldr	r5, [sp, #68]	; 0x44
   57d9c:	mov	r2, #0
   57da0:	add	r1, r1, r0
   57da4:	ldr	r0, [sp, #76]	; 0x4c
   57da8:	str	r1, [sp, #80]	; 0x50
   57dac:	ldr	r1, [sp, #72]	; 0x48
   57db0:	add	r5, r5, r1
   57db4:	cmp	r5, r0
   57db8:	str	r5, [sp, #68]	; 0x44
   57dbc:	bge	5b6a0 <GetDataSlab+0x27544>
   57dc0:	ldr	r0, [fp, #12]
   57dc4:	cmp	r1, #1
   57dc8:	ldr	r2, [r0]
   57dcc:	add	r5, r8, r2, lsl #2
   57dd0:	blt	57df0 <GetDataSlab+0x23c94>
   57dd4:	mov	sl, r4
   57dd8:	ldr	r4, [sp, #56]	; 0x38
   57ddc:	mov	r7, #0
   57de0:	cmp	r1, #1
   57de4:	bne	57df8 <GetDataSlab+0x23c9c>
   57de8:	ldr	r8, [sp, #88]	; 0x58
   57dec:	b	57e38 <GetDataSlab+0x23cdc>
   57df0:	add	r0, r2, r3
   57df4:	b	57e6c <GetDataSlab+0x23d10>
   57df8:	ldr	r0, [sp, #80]	; 0x50
   57dfc:	ldr	r8, [sp, #88]	; 0x58
   57e00:	mov	r7, #0
   57e04:	ldr	r1, [r5]
   57e08:	add	r7, r7, #2
   57e0c:	cmp	ip, r7
   57e10:	str	r1, [r0]
   57e14:	asr	r1, r1, #31
   57e18:	str	r1, [r0, #4]
   57e1c:	ldr	r1, [r5, r4, lsl #2]
   57e20:	add	r5, r5, r9
   57e24:	str	r1, [r0, #8]
   57e28:	asr	r1, r1, #31
   57e2c:	str	r1, [r0, #12]
   57e30:	add	r0, r0, #16
   57e34:	bne	57e04 <GetDataSlab+0x23ca8>
   57e38:	ldr	r0, [sp, #52]	; 0x34
   57e3c:	ldr	r1, [sp, #48]	; 0x30
   57e40:	add	r0, r0, r3
   57e44:	cmp	r1, #0
   57e48:	beq	57e64 <GetDataSlab+0x23d08>
   57e4c:	ldr	r1, [sp, #68]	; 0x44
   57e50:	ldr	r3, [r5], r4, lsl #2
   57e54:	add	r1, r8, r1, lsl #3
   57e58:	str	r3, [r1, r7, lsl #3]!
   57e5c:	asr	r3, r3, #31
   57e60:	str	r3, [r1, #4]
   57e64:	add	r0, r0, r2
   57e68:	mov	r4, sl
   57e6c:	ldr	r1, [sp, #64]	; 0x40
   57e70:	sub	r1, r1, r2
   57e74:	add	r3, r0, r1
   57e78:	ldr	r0, [fp, #24]
   57e7c:	add	r8, r5, r1, lsl #2
   57e80:	cmp	r0, #2
   57e84:	blt	57d90 <GetDataSlab+0x23c34>
   57e88:	ldr	r5, [sp, #44]	; 0x2c
   57e8c:	mov	r2, #0
   57e90:	b	57ec0 <GetDataSlab+0x23d64>
   57e94:	ldr	r7, [sp, #84]	; 0x54
   57e98:	sub	r1, fp, #176	; 0xb0
   57e9c:	sub	r0, r0, sl
   57ea0:	ldr	r1, [r1, r2]
   57ea4:	ldr	r7, [r7, r2]
   57ea8:	mla	r0, r7, r1, r0
   57eac:	add	r3, r0, r3
   57eb0:	add	r8, r8, r0, lsl #2
   57eb4:	subs	r5, r5, #1
   57eb8:	add	r2, r2, #4
   57ebc:	beq	57d90 <GetDataSlab+0x23c34>
   57ec0:	ldr	r0, [r6, r2]
   57ec4:	add	r0, r0, #1
   57ec8:	str	r0, [r6, r2]
   57ecc:	ldr	r1, [lr, r2]
   57ed0:	sdiv	r7, r0, r1
   57ed4:	mls	r0, r7, r1, r0
   57ed8:	cmp	r0, #0
   57edc:	bne	57d80 <GetDataSlab+0x23c24>
   57ee0:	mov	r0, #0
   57ee4:	str	r0, [r6, r2]
   57ee8:	ldr	r0, [r4, r2]
   57eec:	sdiv	r1, r3, r0
   57ef0:	mls	sl, r1, r0, r3
   57ef4:	cmp	sl, #0
   57ef8:	bne	57e94 <GetDataSlab+0x23d38>
   57efc:	ldr	r0, [sp, #84]	; 0x54
   57f00:	ldr	r0, [r0, r2]
   57f04:	cmp	r0, #0
   57f08:	beq	57eb4 <GetDataSlab+0x23d58>
   57f0c:	sub	r1, fp, #176	; 0xb0
   57f10:	ldr	r1, [r1, r2]
   57f14:	mla	r3, r1, r0, r3
   57f18:	mul	r0, r1, r0
   57f1c:	b	57eb0 <GetDataSlab+0x23d54>
   57f20:	ldr	r0, [sp, #72]	; 0x48
   57f24:	sub	r1, fp, #96	; 0x60
   57f28:	cmp	r0, #1
   57f2c:	ldr	r0, [fp, #12]
   57f30:	blt	5b69c <GetDataSlab+0x27540>
   57f34:	add	r0, r0, #4
   57f38:	mov	ip, r1
   57f3c:	ldr	r5, [sp, #48]	; 0x30
   57f40:	ldr	r1, [sp, #68]	; 0x44
   57f44:	ldr	r2, [sp, #52]	; 0x34
   57f48:	str	r0, [sp, #76]	; 0x4c
   57f4c:	ldr	r0, [fp, #24]
   57f50:	ldr	r4, [sp, #76]	; 0x4c
   57f54:	mls	r2, r1, r5, r2
   57f58:	lsl	r9, r5, #3
   57f5c:	sub	r0, r0, #1
   57f60:	str	r0, [sp, #36]	; 0x24
   57f64:	orr	r0, ip, #4
   57f68:	mov	ip, #0
   57f6c:	str	r0, [sp, #32]
   57f70:	mul	r0, r1, r5
   57f74:	str	r2, [sp, #56]	; 0x38
   57f78:	sub	r2, fp, #136	; 0x88
   57f7c:	orr	r6, r2, #4
   57f80:	ldr	r2, [fp, #20]
   57f84:	str	r0, [sp, #44]	; 0x2c
   57f88:	and	r0, r1, #1
   57f8c:	sub	r8, r1, r0
   57f90:	str	r0, [sp, #40]	; 0x28
   57f94:	lsl	r0, r1, #3
   57f98:	str	r0, [sp, #52]	; 0x34
   57f9c:	ldr	r0, [sp, #88]	; 0x58
   57fa0:	add	r2, r2, #4
   57fa4:	str	r2, [sp, #84]	; 0x54
   57fa8:	orr	r2, r7, #4
   57fac:	str	r2, [sp, #80]	; 0x50
   57fb0:	str	r0, [sp, #64]	; 0x40
   57fb4:	mov	r0, #0
   57fb8:	str	r0, [sp, #60]	; 0x3c
   57fbc:	b	58000 <GetDataSlab+0x23ea4>
   57fc0:	ldr	r0, [sp, #32]
   57fc4:	ldr	r0, [r0, r2]
   57fc8:	add	sl, sl, r0, lsl #2
   57fcc:	add	r3, r0, r3
   57fd0:	ldr	r0, [sp, #52]	; 0x34
   57fd4:	ldr	r1, [sp, #64]	; 0x40
   57fd8:	ldr	r7, [sp, #60]	; 0x3c
   57fdc:	mov	r2, #0
   57fe0:	add	r1, r1, r0
   57fe4:	ldr	r0, [sp, #72]	; 0x48
   57fe8:	str	r1, [sp, #64]	; 0x40
   57fec:	ldr	r1, [sp, #68]	; 0x44
   57ff0:	add	r7, r7, r1
   57ff4:	cmp	r7, r0
   57ff8:	str	r7, [sp, #60]	; 0x3c
   57ffc:	bge	5b6a0 <GetDataSlab+0x27544>
   58000:	ldr	r0, [fp, #12]
   58004:	cmp	r1, #1
   58008:	ldr	r2, [r0]
   5800c:	add	r5, sl, r2, lsl #2
   58010:	blt	5808c <GetDataSlab+0x23f30>
   58014:	mov	r7, #0
   58018:	cmp	r1, #1
   5801c:	beq	58054 <GetDataSlab+0x23ef8>
   58020:	ldr	sl, [sp, #64]	; 0x40
   58024:	ldr	r1, [sp, #48]	; 0x30
   58028:	mov	r7, #0
   5802c:	ldr	r0, [r5]
   58030:	add	r7, r7, #2
   58034:	cmp	r8, r7
   58038:	stm	sl, {r0, ip}
   5803c:	ldr	r0, [r5, r1, lsl #2]
   58040:	str	ip, [sl, #12]
   58044:	add	r5, r5, r9
   58048:	str	r0, [sl, #8]
   5804c:	add	sl, sl, #16
   58050:	bne	5802c <GetDataSlab+0x23ed0>
   58054:	ldr	r0, [sp, #44]	; 0x2c
   58058:	add	r3, r0, r3
   5805c:	ldr	r0, [sp, #40]	; 0x28
   58060:	cmp	r0, #0
   58064:	beq	58084 <GetDataSlab+0x23f28>
   58068:	ldr	r0, [sp, #88]	; 0x58
   5806c:	ldr	r1, [sp, #60]	; 0x3c
   58070:	add	r0, r0, r1, lsl #3
   58074:	ldr	r1, [sp, #48]	; 0x30
   58078:	ldr	r1, [r5], r1, lsl #2
   5807c:	str	r1, [r0, r7, lsl #3]!
   58080:	str	ip, [r0, #4]
   58084:	add	r3, r3, r2
   58088:	b	58090 <GetDataSlab+0x23f34>
   5808c:	add	r3, r2, r3
   58090:	ldr	r0, [sp, #56]	; 0x38
   58094:	sub	r0, r0, r2
   58098:	add	sl, r5, r0, lsl #2
   5809c:	add	r3, r3, r0
   580a0:	ldr	r0, [fp, #24]
   580a4:	cmp	r0, #2
   580a8:	blt	57fd0 <GetDataSlab+0x23e74>
   580ac:	ldr	r5, [sp, #36]	; 0x24
   580b0:	mov	r2, #0
   580b4:	b	580e0 <GetDataSlab+0x23f84>
   580b8:	sub	r7, fp, #176	; 0xb0
   580bc:	ldr	lr, [r4, r2]
   580c0:	sub	r0, r0, r1
   580c4:	ldr	r7, [r7, r2]
   580c8:	mla	r0, lr, r7, r0
   580cc:	add	r3, r0, r3
   580d0:	add	sl, sl, r0, lsl #2
   580d4:	subs	r5, r5, #1
   580d8:	add	r2, r2, #4
   580dc:	beq	57fd0 <GetDataSlab+0x23e74>
   580e0:	ldr	r0, [r6, r2]
   580e4:	ldr	r1, [sp, #84]	; 0x54
   580e8:	add	r0, r0, #1
   580ec:	str	r0, [r6, r2]
   580f0:	ldr	r1, [r1, r2]
   580f4:	sdiv	r7, r0, r1
   580f8:	mls	r0, r7, r1, r0
   580fc:	cmp	r0, #0
   58100:	bne	57fc0 <GetDataSlab+0x23e64>
   58104:	ldr	r0, [sp, #80]	; 0x50
   58108:	str	ip, [r6, r2]
   5810c:	ldr	r0, [r0, r2]
   58110:	sdiv	r1, r3, r0
   58114:	mls	r1, r1, r0, r3
   58118:	cmp	r1, #0
   5811c:	bne	580b8 <GetDataSlab+0x23f5c>
   58120:	ldr	r0, [sp, #76]	; 0x4c
   58124:	ldr	r0, [r0, r2]
   58128:	cmp	r0, #0
   5812c:	beq	580d4 <GetDataSlab+0x23f78>
   58130:	sub	r1, fp, #176	; 0xb0
   58134:	ldr	r1, [r1, r2]
   58138:	mla	r3, r1, r0, r3
   5813c:	mul	r0, r1, r0
   58140:	b	580d0 <GetDataSlab+0x23f74>
   58144:	ldr	r0, [sp, #76]	; 0x4c
   58148:	ldr	r1, [fp, #12]
   5814c:	ldr	lr, [sp, #68]	; 0x44
   58150:	sub	r3, fp, #96	; 0x60
   58154:	cmp	r0, #1
   58158:	blt	5b69c <GetDataSlab+0x27540>
   5815c:	ldr	r6, [sp, #36]	; 0x24
   58160:	ldr	r0, [sp, #72]	; 0x48
   58164:	ldr	sl, [r1], #4
   58168:	str	r1, [sp, #92]	; 0x5c
   5816c:	sub	r1, fp, #136	; 0x88
   58170:	mls	r0, lr, r6, r0
   58174:	str	sl, [sp, #44]	; 0x2c
   58178:	sub	r0, r0, sl
   5817c:	str	r0, [sp, #60]	; 0x3c
   58180:	orr	r0, r1, #4
   58184:	ldr	r1, [sp, #88]	; 0x58
   58188:	str	r0, [sp, #52]	; 0x34
   5818c:	ldr	r0, [fp, #20]
   58190:	add	r0, r0, #4
   58194:	str	r0, [sp, #84]	; 0x54
   58198:	orr	r0, r2, #4
   5819c:	str	r0, [sp, #80]	; 0x50
   581a0:	ldr	r0, [fp, #24]
   581a4:	sub	r0, r0, #1
   581a8:	str	r0, [sp, #32]
   581ac:	orr	r0, r3, #4
   581b0:	str	r0, [sp, #16]
   581b4:	mla	r0, lr, r6, sl
   581b8:	str	r0, [sp, #48]	; 0x30
   581bc:	and	r0, lr, #1
   581c0:	str	r0, [sp, #40]	; 0x28
   581c4:	sub	r0, lr, r0
   581c8:	str	r0, [sp, #28]
   581cc:	lsl	r0, lr, #3
   581d0:	str	r0, [sp, #56]	; 0x38
   581d4:	lsl	r0, r6, #2
   581d8:	str	r0, [sp, #24]
   581dc:	lsl	r0, r6, #3
   581e0:	str	r0, [sp, #20]
   581e4:	mov	r0, #0
   581e8:	str	r0, [sp, #72]	; 0x48
   581ec:	add	r4, r5, sl, lsl #2
   581f0:	cmp	lr, #1
   581f4:	str	r1, [sp, #64]	; 0x40
   581f8:	bge	58248 <GetDataSlab+0x240ec>
   581fc:	b	582e0 <GetDataSlab+0x24184>
   58200:	ldr	r1, [sp, #16]
   58204:	ldr	r0, [r1, r0]
   58208:	add	r5, r5, r0, lsl #2
   5820c:	add	r8, r0, r8
   58210:	ldr	r0, [sp, #56]	; 0x38
   58214:	ldr	r1, [sp, #64]	; 0x40
   58218:	ldr	r3, [sp, #72]	; 0x48
   5821c:	mov	r2, #0
   58220:	add	r1, r1, r0
   58224:	ldr	r0, [sp, #76]	; 0x4c
   58228:	add	r3, r3, lr
   5822c:	str	r3, [sp, #72]	; 0x48
   58230:	cmp	r3, r0
   58234:	bge	5b6a0 <GetDataSlab+0x27544>
   58238:	add	r4, r5, sl, lsl #2
   5823c:	cmp	lr, #1
   58240:	str	r1, [sp, #64]	; 0x40
   58244:	blt	582e0 <GetDataSlab+0x24184>
   58248:	mov	r7, r8
   5824c:	mov	r6, #0
   58250:	beq	58294 <GetDataSlab+0x24138>
   58254:	ldr	r5, [sp, #28]
   58258:	ldr	r8, [sp, #24]
   5825c:	ldr	r9, [sp, #20]
   58260:	mov	r6, #0
   58264:	mov	sl, r1
   58268:	ldr	r0, [r4]
   5826c:	bl	717f0 <__aeabi_f2lz>
   58270:	strd	r0, [sl]
   58274:	ldr	r0, [r4, r8]
   58278:	bl	717f0 <__aeabi_f2lz>
   5827c:	add	r6, r6, #2
   58280:	strd	r0, [sl, #8]
   58284:	add	r4, r4, r9
   58288:	add	sl, sl, #16
   5828c:	cmp	r5, r6
   58290:	bne	58268 <GetDataSlab+0x2410c>
   58294:	ldr	r0, [sp, #40]	; 0x28
   58298:	ldr	lr, [sp, #68]	; 0x44
   5829c:	ldr	sl, [sp, #44]	; 0x2c
   582a0:	mov	r8, r7
   582a4:	cmp	r0, #0
   582a8:	ldr	r0, [sp, #48]	; 0x30
   582ac:	beq	582e4 <GetDataSlab+0x24188>
   582b0:	ldr	r0, [sp, #88]	; 0x58
   582b4:	ldr	r1, [sp, #72]	; 0x48
   582b8:	add	sl, r0, r1, lsl #3
   582bc:	ldr	r0, [sp, #36]	; 0x24
   582c0:	ldr	r0, [r4], r0, lsl #2
   582c4:	bl	717f0 <__aeabi_f2lz>
   582c8:	ldr	lr, [sp, #68]	; 0x44
   582cc:	str	r0, [sl, r6, lsl #3]!
   582d0:	ldr	r0, [sp, #48]	; 0x30
   582d4:	str	r1, [sl, #4]
   582d8:	ldr	sl, [sp, #44]	; 0x2c
   582dc:	b	582e4 <GetDataSlab+0x24188>
   582e0:	mov	r0, sl
   582e4:	ldr	r1, [sp, #60]	; 0x3c
   582e8:	add	r0, r0, r8
   582ec:	ldr	r7, [sp, #52]	; 0x34
   582f0:	mov	r9, #0
   582f4:	add	r8, r0, r1
   582f8:	ldr	r0, [fp, #24]
   582fc:	add	r5, r4, r1, lsl #2
   58300:	cmp	r0, #2
   58304:	blt	58210 <GetDataSlab+0x240b4>
   58308:	ldr	r1, [sp, #32]
   5830c:	mov	r0, #0
   58310:	sub	ip, fp, #176	; 0xb0
   58314:	b	58340 <GetDataSlab+0x241e4>
   58318:	ldr	r4, [sp, #92]	; 0x5c
   5831c:	ldr	r6, [ip, r0]
   58320:	sub	r2, r2, r3
   58324:	ldr	r4, [r4, r0]
   58328:	mla	r2, r4, r6, r2
   5832c:	add	r8, r2, r8
   58330:	add	r5, r5, r2, lsl #2
   58334:	subs	r1, r1, #1
   58338:	add	r0, r0, #4
   5833c:	beq	58210 <GetDataSlab+0x240b4>
   58340:	ldr	r2, [r7, r0]
   58344:	ldr	r3, [sp, #84]	; 0x54
   58348:	add	r2, r2, #1
   5834c:	str	r2, [r7, r0]
   58350:	ldr	r3, [r3, r0]
   58354:	sdiv	r6, r2, r3
   58358:	mls	r2, r6, r3, r2
   5835c:	cmp	r2, #0
   58360:	bne	58200 <GetDataSlab+0x240a4>
   58364:	ldr	r2, [sp, #80]	; 0x50
   58368:	str	r9, [r7, r0]
   5836c:	ldr	r2, [r2, r0]
   58370:	sdiv	r3, r8, r2
   58374:	mls	r3, r3, r2, r8
   58378:	cmp	r3, #0
   5837c:	bne	58318 <GetDataSlab+0x241bc>
   58380:	ldr	r2, [sp, #92]	; 0x5c
   58384:	ldr	r2, [r2, r0]
   58388:	cmp	r2, #0
   5838c:	beq	58334 <GetDataSlab+0x241d8>
   58390:	ldr	r3, [ip, r0]
   58394:	mla	r8, r3, r2, r8
   58398:	mul	r2, r3, r2
   5839c:	b	58330 <GetDataSlab+0x241d4>
   583a0:	ldr	r0, [sp, #76]	; 0x4c
   583a4:	ldr	r1, [fp, #12]
   583a8:	ldr	lr, [sp, #68]	; 0x44
   583ac:	sub	r3, fp, #96	; 0x60
   583b0:	cmp	r0, #1
   583b4:	blt	5b69c <GetDataSlab+0x27540>
   583b8:	ldr	r6, [sp, #36]	; 0x24
   583bc:	ldr	r0, [sp, #72]	; 0x48
   583c0:	ldr	sl, [r1], #4
   583c4:	str	r1, [sp, #92]	; 0x5c
   583c8:	sub	r1, fp, #136	; 0x88
   583cc:	mls	r0, lr, r6, r0
   583d0:	str	sl, [sp, #44]	; 0x2c
   583d4:	sub	r0, r0, sl
   583d8:	str	r0, [sp, #60]	; 0x3c
   583dc:	orr	r0, r1, #4
   583e0:	ldr	r1, [sp, #88]	; 0x58
   583e4:	str	r0, [sp, #52]	; 0x34
   583e8:	ldr	r0, [fp, #20]
   583ec:	add	r0, r0, #4
   583f0:	str	r0, [sp, #84]	; 0x54
   583f4:	orr	r0, r2, #4
   583f8:	str	r0, [sp, #80]	; 0x50
   583fc:	ldr	r0, [fp, #24]
   58400:	sub	r0, r0, #1
   58404:	str	r0, [sp, #32]
   58408:	orr	r0, r3, #4
   5840c:	str	r0, [sp, #16]
   58410:	mla	r0, lr, r6, sl
   58414:	str	r0, [sp, #48]	; 0x30
   58418:	and	r0, lr, #1
   5841c:	str	r0, [sp, #40]	; 0x28
   58420:	sub	r0, lr, r0
   58424:	str	r0, [sp, #28]
   58428:	lsl	r0, lr, #3
   5842c:	str	r0, [sp, #56]	; 0x38
   58430:	lsl	r0, r6, #3
   58434:	str	r0, [sp, #24]
   58438:	lsl	r0, r6, #4
   5843c:	str	r0, [sp, #20]
   58440:	mov	r0, #0
   58444:	str	r0, [sp, #72]	; 0x48
   58448:	add	r4, r5, sl, lsl #3
   5844c:	cmp	lr, #1
   58450:	str	r1, [sp, #64]	; 0x40
   58454:	bge	584a4 <GetDataSlab+0x24348>
   58458:	b	58550 <GetDataSlab+0x243f4>
   5845c:	ldr	r1, [sp, #16]
   58460:	ldr	r0, [r1, r0]
   58464:	add	r5, r5, r0, lsl #3
   58468:	add	r8, r0, r8
   5846c:	ldr	r0, [sp, #56]	; 0x38
   58470:	ldr	r1, [sp, #64]	; 0x40
   58474:	ldr	r3, [sp, #72]	; 0x48
   58478:	mov	r2, #0
   5847c:	add	r1, r1, r0
   58480:	ldr	r0, [sp, #76]	; 0x4c
   58484:	add	r3, r3, lr
   58488:	str	r3, [sp, #72]	; 0x48
   5848c:	cmp	r3, r0
   58490:	bge	5b6a0 <GetDataSlab+0x27544>
   58494:	add	r4, r5, sl, lsl #3
   58498:	cmp	lr, #1
   5849c:	str	r1, [sp, #64]	; 0x40
   584a0:	blt	58550 <GetDataSlab+0x243f4>
   584a4:	mov	r7, r8
   584a8:	mov	r6, #0
   584ac:	beq	584fc <GetDataSlab+0x243a0>
   584b0:	ldr	r5, [sp, #28]
   584b4:	ldr	r8, [sp, #24]
   584b8:	ldr	r9, [sp, #20]
   584bc:	mov	r6, #0
   584c0:	mov	sl, r1
   584c4:	vldr	d16, [r4]
   584c8:	vmov	r0, r1, d16
   584cc:	bl	7181c <__aeabi_d2lz>
   584d0:	strd	r0, [sl]
   584d4:	add	r0, r4, r8
   584d8:	vldr	d16, [r0]
   584dc:	vmov	r0, r1, d16
   584e0:	bl	7181c <__aeabi_d2lz>
   584e4:	add	r6, r6, #2
   584e8:	strd	r0, [sl, #8]
   584ec:	add	r4, r4, r9
   584f0:	add	sl, sl, #16
   584f4:	cmp	r5, r6
   584f8:	bne	584c4 <GetDataSlab+0x24368>
   584fc:	ldr	r0, [sp, #40]	; 0x28
   58500:	ldr	lr, [sp, #68]	; 0x44
   58504:	ldr	sl, [sp, #44]	; 0x2c
   58508:	mov	r8, r7
   5850c:	cmp	r0, #0
   58510:	ldr	r0, [sp, #48]	; 0x30
   58514:	beq	58554 <GetDataSlab+0x243f8>
   58518:	vldr	d16, [r4]
   5851c:	ldr	r0, [sp, #88]	; 0x58
   58520:	ldr	r1, [sp, #72]	; 0x48
   58524:	add	sl, r0, r1, lsl #3
   58528:	vmov	r0, r1, d16
   5852c:	bl	7181c <__aeabi_d2lz>
   58530:	ldr	lr, [sp, #68]	; 0x44
   58534:	str	r0, [sl, r6, lsl #3]!
   58538:	ldr	r0, [sp, #36]	; 0x24
   5853c:	str	r1, [sl, #4]
   58540:	ldr	sl, [sp, #44]	; 0x2c
   58544:	add	r4, r4, r0, lsl #3
   58548:	ldr	r0, [sp, #48]	; 0x30
   5854c:	b	58554 <GetDataSlab+0x243f8>
   58550:	mov	r0, sl
   58554:	ldr	r1, [sp, #60]	; 0x3c
   58558:	add	r0, r0, r8
   5855c:	ldr	r7, [sp, #52]	; 0x34
   58560:	mov	r9, #0
   58564:	add	r8, r0, r1
   58568:	ldr	r0, [fp, #24]
   5856c:	add	r5, r4, r1, lsl #3
   58570:	cmp	r0, #2
   58574:	blt	5846c <GetDataSlab+0x24310>
   58578:	ldr	r1, [sp, #32]
   5857c:	mov	r0, #0
   58580:	sub	ip, fp, #176	; 0xb0
   58584:	b	585b0 <GetDataSlab+0x24454>
   58588:	ldr	r4, [sp, #92]	; 0x5c
   5858c:	ldr	r6, [ip, r0]
   58590:	sub	r2, r2, r3
   58594:	ldr	r4, [r4, r0]
   58598:	mla	r2, r4, r6, r2
   5859c:	add	r8, r2, r8
   585a0:	add	r5, r5, r2, lsl #3
   585a4:	subs	r1, r1, #1
   585a8:	add	r0, r0, #4
   585ac:	beq	5846c <GetDataSlab+0x24310>
   585b0:	ldr	r2, [r7, r0]
   585b4:	ldr	r3, [sp, #84]	; 0x54
   585b8:	add	r2, r2, #1
   585bc:	str	r2, [r7, r0]
   585c0:	ldr	r3, [r3, r0]
   585c4:	sdiv	r6, r2, r3
   585c8:	mls	r2, r6, r3, r2
   585cc:	cmp	r2, #0
   585d0:	bne	5845c <GetDataSlab+0x24300>
   585d4:	ldr	r2, [sp, #80]	; 0x50
   585d8:	str	r9, [r7, r0]
   585dc:	ldr	r2, [r2, r0]
   585e0:	sdiv	r3, r8, r2
   585e4:	mls	r3, r3, r2, r8
   585e8:	cmp	r3, #0
   585ec:	bne	58588 <GetDataSlab+0x2442c>
   585f0:	ldr	r2, [sp, #92]	; 0x5c
   585f4:	ldr	r2, [r2, r0]
   585f8:	cmp	r2, #0
   585fc:	beq	585a4 <GetDataSlab+0x24448>
   58600:	ldr	r3, [ip, r0]
   58604:	mla	r8, r3, r2, r8
   58608:	mul	r2, r3, r2
   5860c:	b	585a0 <GetDataSlab+0x24444>
   58610:	ldr	r0, [sp, #68]	; 0x44
   58614:	ldr	r8, [sp, #88]	; 0x58
   58618:	ldr	r2, [sp, #44]	; 0x2c
   5861c:	cmp	r0, #1
   58620:	blt	58874 <GetDataSlab+0x24718>
   58624:	ldr	r1, [fp, #12]
   58628:	ldr	r3, [sp, #32]
   5862c:	ldr	r0, [sp, #24]
   58630:	str	r8, [sp, #64]	; 0x40
   58634:	ldr	r6, [r1], #4
   58638:	mls	r0, r2, r3, r0
   5863c:	lsl	r9, r3, #3
   58640:	lsl	sl, r3, #4
   58644:	str	r1, [sp, #72]	; 0x48
   58648:	mov	r1, #0
   5864c:	str	r1, [sp, #60]	; 0x3c
   58650:	sub	r0, r0, r6
   58654:	str	r6, [sp, #56]	; 0x38
   58658:	str	r0, [sp, #52]	; 0x34
   5865c:	sub	r0, fp, #136	; 0x88
   58660:	orr	r4, r0, #4
   58664:	ldr	r0, [fp, #20]
   58668:	add	r5, r0, #4
   5866c:	sub	r0, fp, #176	; 0xb0
   58670:	orr	r0, r0, #4
   58674:	str	r0, [sp, #76]	; 0x4c
   58678:	ldr	r0, [fp, #24]
   5867c:	sub	r0, r0, #1
   58680:	str	r0, [sp, #28]
   58684:	sub	r0, fp, #96	; 0x60
   58688:	orr	r0, r0, #4
   5868c:	str	r0, [sp, #24]
   58690:	mla	r0, r2, r3, r6
   58694:	str	r0, [sp, #40]	; 0x28
   58698:	and	r0, r2, #1
   5869c:	str	r0, [sp, #36]	; 0x24
   586a0:	sub	lr, r2, r0
   586a4:	lsl	r0, r2, #3
   586a8:	str	r0, [sp, #48]	; 0x30
   586ac:	mov	r0, r2
   586b0:	ldr	r6, [sp, #56]	; 0x38
   586b4:	cmp	r0, #1
   586b8:	add	r7, r7, r6, lsl #3
   586bc:	bge	58714 <GetDataSlab+0x245b8>
   586c0:	b	58734 <GetDataSlab+0x245d8>
   586c4:	ldr	r0, [sp, #24]
   586c8:	ldr	r0, [r0, r2]
   586cc:	add	r7, r7, r0, lsl #3
   586d0:	add	ip, r0, ip
   586d4:	ldr	r0, [sp, #48]	; 0x30
   586d8:	ldr	r1, [sp, #64]	; 0x40
   586dc:	ldr	r2, [sp, #60]	; 0x3c
   586e0:	ldr	r8, [sp, #88]	; 0x58
   586e4:	add	r1, r1, r0
   586e8:	ldr	r0, [sp, #44]	; 0x2c
   586ec:	str	r1, [sp, #64]	; 0x40
   586f0:	ldr	r1, [sp, #68]	; 0x44
   586f4:	add	r2, r2, r0
   586f8:	cmp	r2, r1
   586fc:	str	r2, [sp, #60]	; 0x3c
   58700:	bge	58874 <GetDataSlab+0x24718>
   58704:	ldr	r6, [sp, #56]	; 0x38
   58708:	cmp	r0, #1
   5870c:	add	r7, r7, r6, lsl #3
   58710:	blt	58734 <GetDataSlab+0x245d8>
   58714:	mov	r2, #0
   58718:	bne	5873c <GetDataSlab+0x245e0>
   5871c:	mov	r0, r7
   58720:	ldr	r1, [sp, #36]	; 0x24
   58724:	ldr	r6, [sp, #40]	; 0x28
   58728:	cmp	r1, #0
   5872c:	bne	58784 <GetDataSlab+0x24628>
   58730:	b	587a4 <GetDataSlab+0x24648>
   58734:	mov	r0, r7
   58738:	b	587a4 <GetDataSlab+0x24648>
   5873c:	ldr	r6, [sp, #64]	; 0x40
   58740:	mov	r2, #0
   58744:	ldrd	r0, [r7]
   58748:	add	r2, r2, #2
   5874c:	cmp	lr, r2
   58750:	stm	r6, {r0, r1}
   58754:	add	r0, r7, sl
   58758:	ldr	r1, [r7, r9]!
   5875c:	ldr	r7, [r7, #4]
   58760:	str	r1, [r6, #8]
   58764:	str	r7, [r6, #12]
   58768:	add	r6, r6, #16
   5876c:	mov	r7, r0
   58770:	bne	58744 <GetDataSlab+0x245e8>
   58774:	ldr	r1, [sp, #36]	; 0x24
   58778:	ldr	r6, [sp, #40]	; 0x28
   5877c:	cmp	r1, #0
   58780:	beq	587a4 <GetDataSlab+0x24648>
   58784:	ldr	r1, [sp, #60]	; 0x3c
   58788:	ldrd	r6, [r0]
   5878c:	add	r1, r8, r1, lsl #3
   58790:	str	r6, [r1, r2, lsl #3]!
   58794:	ldr	r6, [sp, #40]	; 0x28
   58798:	str	r7, [r1, #4]
   5879c:	ldr	r1, [sp, #32]
   587a0:	add	r0, r0, r1, lsl #3
   587a4:	ldr	r1, [sp, #52]	; 0x34
   587a8:	add	r7, r0, r1, lsl #3
   587ac:	add	r0, r6, ip
   587b0:	add	ip, r0, r1
   587b4:	ldr	r0, [fp, #24]
   587b8:	cmp	r0, #2
   587bc:	blt	586d4 <GetDataSlab+0x24578>
   587c0:	ldr	r8, [sp, #28]
   587c4:	mov	r2, #0
   587c8:	b	58800 <GetDataSlab+0x246a4>
   587cc:	mov	r3, r7
   587d0:	ldr	r7, [sp, #72]	; 0x48
   587d4:	sub	r1, fp, #176	; 0xb0
   587d8:	sub	r0, r0, r6
   587dc:	ldr	r1, [r1, r2]
   587e0:	ldr	r7, [r7, r2]
   587e4:	mla	r0, r7, r1, r0
   587e8:	mov	r7, r3
   587ec:	add	ip, r0, ip
   587f0:	add	r7, r3, r0, lsl #3
   587f4:	subs	r8, r8, #1
   587f8:	add	r2, r2, #4
   587fc:	beq	586d4 <GetDataSlab+0x24578>
   58800:	ldr	r0, [r4, r2]
   58804:	add	r0, r0, #1
   58808:	str	r0, [r4, r2]
   5880c:	ldr	r1, [r5, r2]
   58810:	sdiv	r6, r0, r1
   58814:	mls	r0, r6, r1, r0
   58818:	cmp	r0, #0
   5881c:	bne	586c4 <GetDataSlab+0x24568>
   58820:	mov	r0, #0
   58824:	str	r0, [r4, r2]
   58828:	ldr	r0, [sp, #76]	; 0x4c
   5882c:	ldr	r0, [r0, r2]
   58830:	sdiv	r1, ip, r0
   58834:	mls	r6, r1, r0, ip
   58838:	cmp	r6, #0
   5883c:	bne	587cc <GetDataSlab+0x24670>
   58840:	ldr	r0, [sp, #72]	; 0x48
   58844:	ldr	r0, [r0, r2]
   58848:	cmp	r0, #0
   5884c:	beq	587f4 <GetDataSlab+0x24698>
   58850:	sub	r1, fp, #176	; 0xb0
   58854:	ldr	r1, [r1, r2]
   58858:	mla	ip, r1, r0, ip
   5885c:	mul	r0, r1, r0
   58860:	add	r7, r7, r0, lsl #3
   58864:	subs	r8, r8, #1
   58868:	add	r2, r2, #4
   5886c:	bne	58800 <GetDataSlab+0x246a4>
   58870:	b	586d4 <GetDataSlab+0x24578>
   58874:	ldr	r3, [sp, #84]	; 0x54
   58878:	mov	r2, #0
   5887c:	cmp	r3, #13
   58880:	bne	5b6a0 <GetDataSlab+0x27544>
   58884:	ldr	r0, [fp, #16]
   58888:	ldr	r1, [fp, #8]
   5888c:	ldr	r9, [fp, #20]
   58890:	mov	sl, #0
   58894:	sub	r7, fp, #176	; 0xb0
   58898:	ldr	r0, [r0]
   5889c:	str	r0, [sp, #44]	; 0x2c
   588a0:	sub	r0, r0, #1
   588a4:	str	r0, [fp, #-96]	; 0xffffffa0
   588a8:	ldr	r0, [r1]
   588ac:	str	r0, [fp, #-176]	; 0xffffff50
   588b0:	str	r0, [sp, #40]	; 0x28
   588b4:	ldr	r0, [fp, #24]
   588b8:	ldr	r2, [r9]
   588bc:	sub	r9, fp, #96	; 0x60
   588c0:	cmp	r0, #2
   588c4:	str	r2, [sp, #72]	; 0x48
   588c8:	str	r2, [sp, #76]	; 0x4c
   588cc:	blt	58a18 <GetDataSlab+0x248bc>
   588d0:	ldr	r3, [sp, #40]	; 0x28
   588d4:	ldr	r2, [sp, #72]	; 0x48
   588d8:	sub	r0, r1, #4
   588dc:	sub	ip, r1, #12
   588e0:	mov	r6, #1
   588e4:	mov	lr, #0
   588e8:	mvn	r5, #15
   588ec:	mov	sl, #0
   588f0:	mov	r8, r3
   588f4:	str	r2, [sp, #76]	; 0x4c
   588f8:	b	5894c <GetDataSlab+0x247f0>
   588fc:	ldr	r2, [fp, #12]
   58900:	sub	r7, fp, #176	; 0xb0
   58904:	sub	r9, fp, #96	; 0x60
   58908:	add	ip, ip, #4
   5890c:	str	r4, [r9, r6, lsl #2]
   58910:	str	r3, [r7, r6, lsl #2]
   58914:	ldr	r4, [sp, #76]	; 0x4c
   58918:	ldr	r2, [r2, r6, lsl #2]
   5891c:	mla	sl, r2, r8, sl
   58920:	ldr	r2, [fp, #20]
   58924:	mov	r8, r3
   58928:	mov	r3, r1
   5892c:	ldr	r1, [fp, #8]
   58930:	ldr	r2, [r2, r6, lsl #2]
   58934:	add	r6, r6, #1
   58938:	mul	r4, r2, r4
   5893c:	ldr	r2, [fp, #24]
   58940:	str	r4, [sp, #76]	; 0x4c
   58944:	cmp	r6, r2
   58948:	beq	58a18 <GetDataSlab+0x248bc>
   5894c:	ldr	r2, [fp, #16]
   58950:	add	lr, lr, #1
   58954:	cmp	lr, #4
   58958:	ldr	r2, [r2, r6, lsl #2]
   5895c:	str	r3, [r7, r6, lsl #2]
   58960:	sub	r4, r2, #1
   58964:	str	r4, [r9, r6, lsl #2]
   58968:	ldr	r1, [r1, r6, lsl #2]
   5896c:	bcs	5897c <GetDataSlab+0x24820>
   58970:	mov	r2, r1
   58974:	mov	r7, r6
   58978:	b	58a00 <GetDataSlab+0x248a4>
   5897c:	vmov.i32	q9, #1	; 0x00000001
   58980:	vmov.i32	q10, #1	; 0x00000001
   58984:	vmov.32	d23[1], r1
   58988:	vmov.i32	q8, #1	; 0x00000001
   5898c:	bic	r9, lr, #3
   58990:	bic	r2, r6, #3
   58994:	sub	r7, r6, r9
   58998:	vmov.32	d18[0], r3
   5899c:	vmov.32	d20[0], r4
   589a0:	mov	r3, ip
   589a4:	vorr	d16, d18, d18
   589a8:	vmov.i32	q9, #1	; 0x00000001
   589ac:	vorr	d18, d20, d20
   589b0:	vld1.32	{d20-d21}, [r3], r5
   589b4:	subs	r2, r2, #4
   589b8:	vrev64.32	q12, q10
   589bc:	vext.8	q12, q12, q12, #8
   589c0:	vext.8	q11, q11, q12, #12
   589c4:	vmul.i32	q9, q9, q12
   589c8:	vmul.i32	q8, q11, q8
   589cc:	vorr	q11, q12, q12
   589d0:	bne	589b0 <GetDataSlab+0x24854>
   589d4:	vext.8	q11, q9, q8, #8
   589d8:	vext.8	q12, q8, q8, #8
   589dc:	cmp	lr, r9
   589e0:	vmul.i32	q0, q9, q11
   589e4:	vmul.i32	q1, q8, q12
   589e8:	vmul.i32	q8, q0, d0[1]
   589ec:	vmul.i32	q9, q1, d2[1]
   589f0:	vmov.32	r4, d16[0]
   589f4:	vmov.32	r3, d18[0]
   589f8:	beq	588fc <GetDataSlab+0x247a0>
   589fc:	vmov.32	r2, d20[0]
   58a00:	mul	r3, r2, r3
   58a04:	ldr	r2, [r0, r7, lsl #2]
   58a08:	subs	r7, r7, #1
   58a0c:	mul	r4, r4, r2
   58a10:	bne	58a00 <GetDataSlab+0x248a4>
   58a14:	b	588fc <GetDataSlab+0x247a0>
   58a18:	ldr	r0, [sp, #80]	; 0x50
   58a1c:	add	r4, r0, sl, lsl #3
   58a20:	ldr	r0, [sp, #44]	; 0x2c
   58a24:	cmp	r0, #1
   58a28:	bne	5b3a0 <GetDataSlab+0x27244>
   58a2c:	ldr	r0, [sp, #76]	; 0x4c
   58a30:	ldr	r1, [fp, #12]
   58a34:	ldr	r3, [sp, #72]	; 0x48
   58a38:	ldr	r8, [sp, #40]	; 0x28
   58a3c:	cmp	r0, #1
   58a40:	blt	5b69c <GetDataSlab+0x27540>
   58a44:	sub	r0, r3, #2
   58a48:	mov	r2, #1
   58a4c:	add	r2, r2, r0, lsr #1
   58a50:	lsr	r0, r0, #1
   58a54:	str	r0, [sp, #20]
   58a58:	ldr	r0, [sp, #88]	; 0x58
   58a5c:	and	r6, r2, #1
   58a60:	sub	r2, r2, r6
   58a64:	str	r6, [sp, #28]
   58a68:	str	r2, [sp, #16]
   58a6c:	sub	r2, fp, #136	; 0x88
   58a70:	orr	lr, r2, #4
   58a74:	ldr	r2, [fp, #20]
   58a78:	str	r0, [sp, #68]	; 0x44
   58a7c:	mov	r0, #0
   58a80:	str	r0, [sp, #80]	; 0x50
   58a84:	mov	r0, #0
   58a88:	str	r0, [sp, #84]	; 0x54
   58a8c:	add	r2, r2, #4
   58a90:	str	r2, [sp, #52]	; 0x34
   58a94:	orr	r2, r7, #4
   58a98:	str	r2, [sp, #48]	; 0x30
   58a9c:	ldr	r2, [fp, #24]
   58aa0:	sub	r2, r2, #1
   58aa4:	str	r2, [sp, #44]	; 0x2c
   58aa8:	sub	r2, fp, #96	; 0x60
   58aac:	orr	r2, r2, #4
   58ab0:	str	r2, [sp, #32]
   58ab4:	ldr	r2, [r1], #4
   58ab8:	str	r1, [sp, #92]	; 0x5c
   58abc:	add	r1, r3, r2
   58ac0:	str	r2, [sp, #60]	; 0x3c
   58ac4:	str	r1, [sp, #36]	; 0x24
   58ac8:	and	r1, r3, #1
   58acc:	str	r1, [sp, #56]	; 0x38
   58ad0:	lsl	r1, r3, #3
   58ad4:	str	r1, [sp, #64]	; 0x40
   58ad8:	bic	r1, r3, #1
   58adc:	str	r1, [sp, #24]
   58ae0:	b	58b34 <GetDataSlab+0x249d8>
   58ae4:	ldr	r1, [sp, #32]
   58ae8:	ldr	r0, [r1, r0]
   58aec:	add	r9, r9, r0, lsl #3
   58af0:	add	sl, r0, sl
   58af4:	ldr	r0, [sp, #64]	; 0x40
   58af8:	ldr	r1, [sp, #68]	; 0x44
   58afc:	ldr	r3, [sp, #72]	; 0x48
   58b00:	mov	r4, r9
   58b04:	mov	r2, #0
   58b08:	add	r1, r1, r0
   58b0c:	ldr	r0, [sp, #80]	; 0x50
   58b10:	str	r1, [sp, #68]	; 0x44
   58b14:	ldr	r1, [sp, #84]	; 0x54
   58b18:	add	r0, r0, #1
   58b1c:	str	r0, [sp, #80]	; 0x50
   58b20:	ldr	r0, [sp, #76]	; 0x4c
   58b24:	add	r1, r1, r3
   58b28:	str	r1, [sp, #84]	; 0x54
   58b2c:	cmp	r1, r0
   58b30:	bge	5b6a0 <GetDataSlab+0x27544>
   58b34:	ldr	r1, [sp, #88]	; 0x58
   58b38:	ldr	ip, [sp, #92]	; 0x5c
   58b3c:	cmp	r3, #1
   58b40:	mov	r9, r4
   58b44:	blt	58c90 <GetDataSlab+0x24b34>
   58b48:	ldr	r0, [sp, #60]	; 0x3c
   58b4c:	ldr	r2, [sp, #84]	; 0x54
   58b50:	mov	r3, #0
   58b54:	add	r0, r9, r0, lsl #3
   58b58:	add	r6, r1, r2, lsl #3
   58b5c:	beq	58c10 <GetDataSlab+0x24ab4>
   58b60:	ldr	r2, [sp, #64]	; 0x40
   58b64:	ldr	r5, [sp, #80]	; 0x50
   58b68:	mla	r2, r2, r5, r1
   58b6c:	ldr	r5, [sp, #36]	; 0x24
   58b70:	add	r7, r9, r5, lsl #3
   58b74:	cmp	r2, r7
   58b78:	bcs	58b94 <GetDataSlab+0x24a38>
   58b7c:	ldr	r2, [sp, #64]	; 0x40
   58b80:	ldr	r5, [sp, #80]	; 0x50
   58b84:	mla	r2, r2, r5, r2
   58b88:	add	r2, r1, r2
   58b8c:	cmp	r2, r0
   58b90:	bhi	58c10 <GetDataSlab+0x24ab4>
   58b94:	ldr	r1, [sp, #20]
   58b98:	mov	r3, #0
   58b9c:	cmp	r1, #0
   58ba0:	beq	58bd8 <GetDataSlab+0x24a7c>
   58ba4:	ldr	ip, [sp, #68]	; 0x44
   58ba8:	ldr	r9, [sp, #16]
   58bac:	mov	r2, r0
   58bb0:	mov	r1, #32
   58bb4:	add	r7, r2, #16
   58bb8:	vld1.64	{d16-d17}, [r2], r1
   58bbc:	add	r8, ip, #16
   58bc0:	subs	r9, r9, #2
   58bc4:	add	r3, r3, #4
   58bc8:	vst1.64	{d16-d17}, [ip], r1
   58bcc:	vld1.64	{d16-d17}, [r7]
   58bd0:	vst1.64	{d16-d17}, [r8]
   58bd4:	bne	58bb4 <GetDataSlab+0x24a58>
   58bd8:	ldr	r1, [sp, #28]
   58bdc:	ldr	r8, [sp, #40]	; 0x28
   58be0:	mov	r9, r4
   58be4:	cmp	r1, #0
   58be8:	beq	58bfc <GetDataSlab+0x24aa0>
   58bec:	add	r2, r0, r3, lsl #3
   58bf0:	vld1.64	{d16-d17}, [r2]
   58bf4:	add	r2, r6, r3, lsl #3
   58bf8:	vst1.64	{d16-d17}, [r2]
   58bfc:	ldr	r1, [sp, #72]	; 0x48
   58c00:	ldr	r3, [sp, #24]
   58c04:	ldr	ip, [sp, #92]	; 0x5c
   58c08:	cmp	r1, r3
   58c0c:	beq	58c90 <GetDataSlab+0x24b34>
   58c10:	ldr	r1, [sp, #56]	; 0x38
   58c14:	mov	r7, r3
   58c18:	cmp	r1, #0
   58c1c:	beq	58c38 <GetDataSlab+0x24adc>
   58c20:	mov	r2, r0
   58c24:	ldr	r7, [r2, r3, lsl #3]!
   58c28:	ldr	r2, [r2, #4]
   58c2c:	str	r7, [r6, r3, lsl #3]!
   58c30:	orr	r7, r3, #1
   58c34:	str	r2, [r6, #4]
   58c38:	ldr	r1, [sp, #72]	; 0x48
   58c3c:	orr	r2, r3, #1
   58c40:	cmp	r1, r2
   58c44:	beq	58c90 <GetDataSlab+0x24b34>
   58c48:	ldr	r1, [sp, #72]	; 0x48
   58c4c:	lsl	r3, r7, #3
   58c50:	sub	r2, r1, r7
   58c54:	ldr	r7, [sp, #68]	; 0x44
   58c58:	add	r6, r0, #16
   58c5c:	ldr	r5, [r0, r3]!
   58c60:	add	r1, r7, #16
   58c64:	subs	r2, r2, #2
   58c68:	ldr	r4, [r0, #4]
   58c6c:	str	r5, [r7, r3]!
   58c70:	str	r4, [r7, #4]
   58c74:	ldr	r5, [r0, #8]
   58c78:	ldr	r0, [r0, #12]
   58c7c:	str	r0, [r7, #12]
   58c80:	str	r5, [r7, #8]
   58c84:	mov	r0, r6
   58c88:	mov	r7, r1
   58c8c:	bne	58c58 <GetDataSlab+0x24afc>
   58c90:	ldr	r0, [fp, #24]
   58c94:	add	r9, r9, r8, lsl #3
   58c98:	add	sl, sl, r8
   58c9c:	cmp	r0, #2
   58ca0:	blt	58af4 <GetDataSlab+0x24998>
   58ca4:	ldr	r2, [sp, #44]	; 0x2c
   58ca8:	ldr	r4, [sp, #52]	; 0x34
   58cac:	ldr	r5, [sp, #48]	; 0x30
   58cb0:	mov	r0, #0
   58cb4:	b	58ce0 <GetDataSlab+0x24b84>
   58cb8:	sub	r1, fp, #176	; 0xb0
   58cbc:	ldr	r6, [ip, r0]
   58cc0:	sub	r3, r3, r7
   58cc4:	ldr	r1, [r1, r0]
   58cc8:	mla	r1, r6, r1, r3
   58ccc:	add	sl, r1, sl
   58cd0:	add	r9, r9, r1, lsl #3
   58cd4:	subs	r2, r2, #1
   58cd8:	add	r0, r0, #4
   58cdc:	beq	58af4 <GetDataSlab+0x24998>
   58ce0:	ldr	r1, [lr, r0]
   58ce4:	add	r1, r1, #1
   58ce8:	str	r1, [lr, r0]
   58cec:	ldr	r3, [r4, r0]
   58cf0:	sdiv	r7, r1, r3
   58cf4:	mls	r1, r7, r3, r1
   58cf8:	cmp	r1, #0
   58cfc:	bne	58ae4 <GetDataSlab+0x24988>
   58d00:	ldr	r3, [r5, r0]
   58d04:	mov	r1, #0
   58d08:	str	r1, [lr, r0]
   58d0c:	sdiv	r1, sl, r3
   58d10:	mls	r7, r1, r3, sl
   58d14:	cmp	r7, #0
   58d18:	bne	58cb8 <GetDataSlab+0x24b5c>
   58d1c:	ldr	r3, [ip, r0]
   58d20:	cmp	r3, #0
   58d24:	beq	58cd4 <GetDataSlab+0x24b78>
   58d28:	sub	r1, fp, #176	; 0xb0
   58d2c:	ldr	r1, [r1, r0]
   58d30:	mla	sl, r1, r3, sl
   58d34:	mul	r1, r1, r3
   58d38:	b	58cd0 <GetDataSlab+0x24b74>
   58d3c:	ldr	r0, [sp, #72]	; 0x48
   58d40:	sub	r1, fp, #176	; 0xb0
   58d44:	cmp	r0, #1
   58d48:	ldr	r0, [sp, #88]	; 0x58
   58d4c:	blt	5b69c <GetDataSlab+0x27540>
   58d50:	ldr	r3, [sp, #68]	; 0x44
   58d54:	ldr	r2, [sp, #40]	; 0x28
   58d58:	orr	r1, r1, #4
   58d5c:	str	r0, [sp, #76]	; 0x4c
   58d60:	mov	r0, #0
   58d64:	mov	sl, #0
   58d68:	str	r1, [sp, #84]	; 0x54
   58d6c:	ldr	r1, [fp, #12]
   58d70:	str	r0, [sp, #64]	; 0x40
   58d74:	mls	r2, r3, lr, r2
   58d78:	add	r1, r1, #4
   58d7c:	str	r1, [sp, #80]	; 0x50
   58d80:	ldr	r1, [fp, #24]
   58d84:	str	r2, [sp, #60]	; 0x3c
   58d88:	mul	r2, r3, lr
   58d8c:	str	r2, [sp, #52]	; 0x34
   58d90:	sub	r2, fp, #136	; 0x88
   58d94:	sub	r1, r1, #1
   58d98:	orr	r4, r2, #4
   58d9c:	ldr	r2, [fp, #20]
   58da0:	str	r1, [sp, #44]	; 0x2c
   58da4:	sub	r1, fp, #96	; 0x60
   58da8:	orr	r1, r1, #4
   58dac:	str	r1, [sp, #40]	; 0x28
   58db0:	mov	r1, r3
   58db4:	add	r6, r2, #4
   58db8:	and	r2, r3, #1
   58dbc:	sub	ip, r3, r2
   58dc0:	str	r2, [sp, #48]	; 0x30
   58dc4:	lsl	r2, r3, #3
   58dc8:	str	r2, [sp, #56]	; 0x38
   58dcc:	b	58e10 <GetDataSlab+0x24cb4>
   58dd0:	ldr	r0, [sp, #40]	; 0x28
   58dd4:	ldr	r0, [r0, r2]
   58dd8:	add	r9, r9, r0
   58ddc:	add	r7, r0, r7
   58de0:	ldr	r0, [sp, #56]	; 0x38
   58de4:	ldr	r1, [sp, #76]	; 0x4c
   58de8:	ldr	r3, [sp, #64]	; 0x40
   58dec:	mov	r2, #0
   58df0:	add	r1, r1, r0
   58df4:	ldr	r0, [sp, #72]	; 0x48
   58df8:	str	r1, [sp, #76]	; 0x4c
   58dfc:	ldr	r1, [sp, #68]	; 0x44
   58e00:	add	r3, r3, r1
   58e04:	cmp	r3, r0
   58e08:	str	r3, [sp, #64]	; 0x40
   58e0c:	bge	5b6a0 <GetDataSlab+0x27544>
   58e10:	ldr	r0, [fp, #12]
   58e14:	cmp	r1, #1
   58e18:	ldr	r2, [r0]
   58e1c:	add	r5, r9, r2
   58e20:	blt	58e94 <GetDataSlab+0x24d38>
   58e24:	ldr	r8, [sp, #88]	; 0x58
   58e28:	mov	r0, #0
   58e2c:	cmp	r1, #1
   58e30:	beq	58e64 <GetDataSlab+0x24d08>
   58e34:	ldr	r1, [sp, #76]	; 0x4c
   58e38:	mov	r0, #0
   58e3c:	ldrb	r3, [r5]
   58e40:	add	r0, r0, #2
   58e44:	cmp	ip, r0
   58e48:	stm	r1, {r3, sl}
   58e4c:	ldrb	r3, [r5, lr]!
   58e50:	str	sl, [r1, #12]
   58e54:	add	r5, r5, lr
   58e58:	str	r3, [r1, #8]
   58e5c:	add	r1, r1, #16
   58e60:	bne	58e3c <GetDataSlab+0x24ce0>
   58e64:	ldr	r1, [sp, #52]	; 0x34
   58e68:	ldr	r3, [sp, #48]	; 0x30
   58e6c:	add	r1, r1, r7
   58e70:	cmp	r3, #0
   58e74:	beq	58e8c <GetDataSlab+0x24d30>
   58e78:	ldr	r3, [sp, #64]	; 0x40
   58e7c:	ldrb	r7, [r5], lr
   58e80:	add	r3, r8, r3, lsl #3
   58e84:	str	r7, [r3, r0, lsl #3]!
   58e88:	str	sl, [r3, #4]
   58e8c:	add	r0, r1, r2
   58e90:	b	58e98 <GetDataSlab+0x24d3c>
   58e94:	add	r0, r2, r7
   58e98:	ldr	r1, [sp, #60]	; 0x3c
   58e9c:	sub	r1, r1, r2
   58ea0:	add	r7, r0, r1
   58ea4:	ldr	r0, [fp, #24]
   58ea8:	add	r9, r5, r1
   58eac:	cmp	r0, #2
   58eb0:	blt	58de0 <GetDataSlab+0x24c84>
   58eb4:	ldr	r8, [sp, #44]	; 0x2c
   58eb8:	mov	r2, #0
   58ebc:	b	58eec <GetDataSlab+0x24d90>
   58ec0:	ldr	r5, [sp, #80]	; 0x50
   58ec4:	sub	r3, fp, #176	; 0xb0
   58ec8:	sub	r0, r0, r1
   58ecc:	ldr	r3, [r3, r2]
   58ed0:	ldr	r5, [r5, r2]
   58ed4:	mla	r0, r5, r3, r0
   58ed8:	add	r7, r0, r7
   58edc:	add	r9, r9, r0
   58ee0:	subs	r8, r8, #1
   58ee4:	add	r2, r2, #4
   58ee8:	beq	58de0 <GetDataSlab+0x24c84>
   58eec:	ldr	r0, [r4, r2]
   58ef0:	add	r0, r0, #1
   58ef4:	str	r0, [r4, r2]
   58ef8:	ldr	r1, [r6, r2]
   58efc:	sdiv	r3, r0, r1
   58f00:	mls	r0, r3, r1, r0
   58f04:	cmp	r0, #0
   58f08:	bne	58dd0 <GetDataSlab+0x24c74>
   58f0c:	ldr	r0, [sp, #84]	; 0x54
   58f10:	str	sl, [r4, r2]
   58f14:	ldr	r0, [r0, r2]
   58f18:	sdiv	r1, r7, r0
   58f1c:	mls	r1, r1, r0, r7
   58f20:	cmp	r1, #0
   58f24:	bne	58ec0 <GetDataSlab+0x24d64>
   58f28:	ldr	r0, [sp, #80]	; 0x50
   58f2c:	ldr	r0, [r0, r2]
   58f30:	cmp	r0, #0
   58f34:	beq	58ee0 <GetDataSlab+0x24d84>
   58f38:	sub	r1, fp, #176	; 0xb0
   58f3c:	ldr	r1, [r1, r2]
   58f40:	mla	r7, r1, r0, r7
   58f44:	mla	r9, r1, r0, r9
   58f48:	subs	r8, r8, #1
   58f4c:	add	r2, r2, #4
   58f50:	bne	58eec <GetDataSlab+0x24d90>
   58f54:	b	58de0 <GetDataSlab+0x24c84>
   58f58:	ldr	r0, [sp, #76]	; 0x4c
   58f5c:	ldr	r2, [fp, #12]
   58f60:	ldr	r3, [fp, #20]
   58f64:	cmp	r0, #1
   58f68:	ldr	r0, [sp, #60]	; 0x3c
   58f6c:	blt	5b69c <GetDataSlab+0x27540>
   58f70:	mov	ip, r3
   58f74:	ldr	r3, [sp, #72]	; 0x48
   58f78:	ldr	r8, [r2], #4
   58f7c:	lsl	sl, r7, #1
   58f80:	lsl	r9, r7, #2
   58f84:	add	lr, ip, #4
   58f88:	str	r2, [sp, #92]	; 0x5c
   58f8c:	mls	r0, r3, r7, r0
   58f90:	str	r8, [sp, #64]	; 0x40
   58f94:	sub	r0, r0, r8
   58f98:	str	r0, [sp, #60]	; 0x3c
   58f9c:	sub	r0, fp, #136	; 0x88
   58fa0:	orr	r4, r0, #4
   58fa4:	sub	r0, fp, #176	; 0xb0
   58fa8:	orr	r0, r0, #4
   58fac:	str	r0, [sp, #84]	; 0x54
   58fb0:	ldr	r0, [fp, #24]
   58fb4:	sub	r0, r0, #1
   58fb8:	str	r0, [sp, #44]	; 0x2c
   58fbc:	orr	r0, r6, #4
   58fc0:	str	r0, [sp, #40]	; 0x28
   58fc4:	mla	r0, r3, r7, r8
   58fc8:	str	r0, [sp, #52]	; 0x34
   58fcc:	and	r0, r3, #1
   58fd0:	sub	r8, r3, r0
   58fd4:	str	r0, [sp, #48]	; 0x30
   58fd8:	lsl	r0, r3, #3
   58fdc:	str	r0, [sp, #56]	; 0x38
   58fe0:	ldr	r0, [sp, #88]	; 0x58
   58fe4:	str	r0, [sp, #80]	; 0x50
   58fe8:	mov	r0, #0
   58fec:	str	r0, [sp, #68]	; 0x44
   58ff0:	ldr	r6, [sp, #64]	; 0x40
   58ff4:	cmp	r3, #1
   58ff8:	add	r2, r5, r6, lsl #1
   58ffc:	bge	59054 <GetDataSlab+0x24ef8>
   59000:	b	590cc <GetDataSlab+0x24f70>
   59004:	ldr	r0, [sp, #40]	; 0x28
   59008:	ldr	r0, [r0, r2]
   5900c:	add	r5, r5, r0, lsl #1
   59010:	add	r1, r0, r1
   59014:	ldr	r0, [sp, #56]	; 0x38
   59018:	ldr	r2, [sp, #80]	; 0x50
   5901c:	ldr	r3, [sp, #72]	; 0x48
   59020:	ldr	r7, [sp, #68]	; 0x44
   59024:	add	r2, r2, r0
   59028:	ldr	r0, [sp, #76]	; 0x4c
   5902c:	add	r7, r7, r3
   59030:	str	r2, [sp, #80]	; 0x50
   59034:	mov	r2, #0
   59038:	str	r7, [sp, #68]	; 0x44
   5903c:	cmp	r7, r0
   59040:	bge	5b6a0 <GetDataSlab+0x27544>
   59044:	ldr	r6, [sp, #64]	; 0x40
   59048:	cmp	r3, #1
   5904c:	add	r2, r5, r6, lsl #1
   59050:	blt	590cc <GetDataSlab+0x24f70>
   59054:	mov	r3, #0
   59058:	beq	5909c <GetDataSlab+0x24f40>
   5905c:	ldr	r5, [sp, #80]	; 0x50
   59060:	mov	r3, #0
   59064:	ldrsh	r6, [r2]
   59068:	add	r3, r3, #2
   5906c:	cmp	r8, r3
   59070:	str	r6, [r5]
   59074:	asr	r6, r6, #31
   59078:	str	r6, [r5, #4]
   5907c:	add	r6, r2, sl
   59080:	add	r2, r2, r9
   59084:	ldrsh	r6, [r6]
   59088:	str	r6, [r5, #8]
   5908c:	asr	r6, r6, #31
   59090:	str	r6, [r5, #12]
   59094:	add	r5, r5, #16
   59098:	bne	59064 <GetDataSlab+0x24f08>
   5909c:	ldr	r0, [sp, #48]	; 0x30
   590a0:	ldr	r6, [sp, #52]	; 0x34
   590a4:	cmp	r0, #0
   590a8:	beq	590cc <GetDataSlab+0x24f70>
   590ac:	ldr	r0, [sp, #88]	; 0x58
   590b0:	ldr	r7, [sp, #68]	; 0x44
   590b4:	ldrsh	r5, [r2], sl
   590b8:	add	r6, r0, r7, lsl #3
   590bc:	str	r5, [r6, r3, lsl #3]!
   590c0:	asr	r3, r5, #31
   590c4:	str	r3, [r6, #4]
   590c8:	ldr	r6, [sp, #52]	; 0x34
   590cc:	ldr	r0, [sp, #60]	; 0x3c
   590d0:	add	r1, r6, r1
   590d4:	add	r5, r2, r0, lsl #1
   590d8:	add	r1, r1, r0
   590dc:	ldr	r0, [fp, #24]
   590e0:	cmp	r0, #2
   590e4:	blt	59014 <GetDataSlab+0x24eb8>
   590e8:	ldr	r3, [sp, #44]	; 0x2c
   590ec:	mov	r2, #0
   590f0:	b	59120 <GetDataSlab+0x24fc4>
   590f4:	ldr	r7, [sp, #92]	; 0x5c
   590f8:	sub	r0, fp, #176	; 0xb0
   590fc:	sub	r6, r6, ip
   59100:	ldr	r0, [r0, r2]
   59104:	ldr	r7, [r7, r2]
   59108:	mla	r0, r7, r0, r6
   5910c:	add	r1, r0, r1
   59110:	add	r5, r5, r0, lsl #1
   59114:	subs	r3, r3, #1
   59118:	add	r2, r2, #4
   5911c:	beq	59014 <GetDataSlab+0x24eb8>
   59120:	ldr	r6, [r4, r2]
   59124:	add	r6, r6, #1
   59128:	str	r6, [r4, r2]
   5912c:	ldr	r7, [lr, r2]
   59130:	sdiv	r0, r6, r7
   59134:	mls	r0, r0, r7, r6
   59138:	cmp	r0, #0
   5913c:	bne	59004 <GetDataSlab+0x24ea8>
   59140:	mov	r0, #0
   59144:	str	r0, [r4, r2]
   59148:	ldr	r0, [sp, #84]	; 0x54
   5914c:	ldr	r6, [r0, r2]
   59150:	sdiv	r0, r1, r6
   59154:	mls	ip, r0, r6, r1
   59158:	cmp	ip, #0
   5915c:	bne	590f4 <GetDataSlab+0x24f98>
   59160:	ldr	r0, [sp, #92]	; 0x5c
   59164:	ldr	r6, [r0, r2]
   59168:	cmp	r6, #0
   5916c:	beq	59114 <GetDataSlab+0x24fb8>
   59170:	sub	r0, fp, #176	; 0xb0
   59174:	ldr	r0, [r0, r2]
   59178:	mla	r1, r0, r6, r1
   5917c:	mul	r0, r0, r6
   59180:	b	59110 <GetDataSlab+0x24fb4>
   59184:	ldr	r0, [sp, #76]	; 0x4c
   59188:	ldr	r2, [fp, #12]
   5918c:	sub	r3, fp, #96	; 0x60
   59190:	cmp	r0, #1
   59194:	ldr	r0, [sp, #56]	; 0x38
   59198:	blt	5b69c <GetDataSlab+0x27540>
   5919c:	ldr	r7, [sp, #72]	; 0x48
   591a0:	ldr	r5, [r2], #4
   591a4:	ldr	r4, [sp, #44]	; 0x2c
   591a8:	lsl	sl, r6, #1
   591ac:	lsl	r8, r6, #2
   591b0:	mov	lr, #0
   591b4:	str	r2, [sp, #92]	; 0x5c
   591b8:	mls	r0, r7, r6, r0
   591bc:	mla	r2, r7, r6, r5
   591c0:	str	r5, [sp, #60]	; 0x3c
   591c4:	sub	r0, r0, r5
   591c8:	str	r2, [sp, #48]	; 0x30
   591cc:	and	r2, r7, #1
   591d0:	ldr	r5, [sp, #88]	; 0x58
   591d4:	str	r0, [sp, #56]	; 0x38
   591d8:	sub	r0, fp, #136	; 0x88
   591dc:	str	r2, [sp, #40]	; 0x28
   591e0:	sub	r2, r7, r2
   591e4:	orr	r9, r0, #4
   591e8:	ldr	r0, [fp, #20]
   591ec:	str	r2, [sp, #32]
   591f0:	lsl	r2, r7, #3
   591f4:	str	r2, [sp, #52]	; 0x34
   591f8:	mov	r2, #0
   591fc:	str	r2, [sp, #68]	; 0x44
   59200:	add	r0, r0, #4
   59204:	str	r0, [sp, #84]	; 0x54
   59208:	orr	r0, ip, #4
   5920c:	str	r0, [sp, #80]	; 0x50
   59210:	ldr	r0, [fp, #24]
   59214:	sub	r0, r0, #1
   59218:	str	r0, [sp, #36]	; 0x24
   5921c:	orr	r0, r3, #4
   59220:	str	r0, [sp, #28]
   59224:	mov	r0, r7
   59228:	b	59268 <GetDataSlab+0x2510c>
   5922c:	ldr	r0, [sp, #28]
   59230:	ldr	r0, [r0, r2]
   59234:	add	r4, r4, r0, lsl #1
   59238:	add	r1, r0, r1
   5923c:	ldr	r0, [sp, #52]	; 0x34
   59240:	ldr	r5, [sp, #64]	; 0x40
   59244:	ldr	r7, [sp, #68]	; 0x44
   59248:	ldr	r3, [sp, #76]	; 0x4c
   5924c:	mov	r2, #0
   59250:	add	r5, r5, r0
   59254:	ldr	r0, [sp, #72]	; 0x48
   59258:	add	r7, r7, r0
   5925c:	cmp	r7, r3
   59260:	str	r7, [sp, #68]	; 0x44
   59264:	bge	5b6a0 <GetDataSlab+0x27544>
   59268:	ldr	ip, [sp, #60]	; 0x3c
   5926c:	cmp	r0, #1
   59270:	str	r5, [sp, #64]	; 0x40
   59274:	add	r2, r4, ip, lsl #1
   59278:	blt	592e4 <GetDataSlab+0x25188>
   5927c:	mov	r3, #0
   59280:	beq	592b8 <GetDataSlab+0x2515c>
   59284:	ldr	r0, [sp, #32]
   59288:	mov	r3, #0
   5928c:	ldrh	r7, [r2]
   59290:	add	r3, r3, #2
   59294:	cmp	r0, r3
   59298:	stm	r5, {r7, lr}
   5929c:	add	r7, r2, sl
   592a0:	add	r2, r2, r8
   592a4:	ldrh	r7, [r7]
   592a8:	str	lr, [r5, #12]
   592ac:	str	r7, [r5, #8]
   592b0:	add	r5, r5, #16
   592b4:	bne	5928c <GetDataSlab+0x25130>
   592b8:	ldr	r0, [sp, #40]	; 0x28
   592bc:	ldr	ip, [sp, #48]	; 0x30
   592c0:	cmp	r0, #0
   592c4:	beq	592e4 <GetDataSlab+0x25188>
   592c8:	ldr	r0, [sp, #88]	; 0x58
   592cc:	ldr	r7, [sp, #68]	; 0x44
   592d0:	ldrh	r6, [r2], sl
   592d4:	add	r7, r0, r7, lsl #3
   592d8:	str	r6, [r7, r3, lsl #3]!
   592dc:	ldr	ip, [sp, #48]	; 0x30
   592e0:	str	lr, [r7, #4]
   592e4:	ldr	r0, [sp, #56]	; 0x38
   592e8:	add	r1, ip, r1
   592ec:	add	r4, r2, r0, lsl #1
   592f0:	add	r1, r1, r0
   592f4:	ldr	r0, [fp, #24]
   592f8:	cmp	r0, #2
   592fc:	blt	5923c <GetDataSlab+0x250e0>
   59300:	ldr	r3, [sp, #36]	; 0x24
   59304:	mov	r2, #0
   59308:	sub	ip, fp, #176	; 0xb0
   5930c:	b	59338 <GetDataSlab+0x251dc>
   59310:	ldr	r0, [sp, #92]	; 0x5c
   59314:	ldr	r5, [ip, r2]
   59318:	sub	r7, r6, r7
   5931c:	ldr	r0, [r0, r2]
   59320:	mla	r0, r0, r5, r7
   59324:	add	r1, r0, r1
   59328:	add	r4, r4, r0, lsl #1
   5932c:	subs	r3, r3, #1
   59330:	add	r2, r2, #4
   59334:	beq	5923c <GetDataSlab+0x250e0>
   59338:	ldr	r7, [r9, r2]
   5933c:	ldr	r0, [sp, #84]	; 0x54
   59340:	add	r7, r7, #1
   59344:	str	r7, [r9, r2]
   59348:	ldr	r6, [r0, r2]
   5934c:	sdiv	r5, r7, r6
   59350:	mls	r7, r5, r6, r7
   59354:	cmp	r7, #0
   59358:	bne	5922c <GetDataSlab+0x250d0>
   5935c:	ldr	r0, [sp, #80]	; 0x50
   59360:	str	lr, [r9, r2]
   59364:	ldr	r6, [r0, r2]
   59368:	sdiv	r7, r1, r6
   5936c:	mls	r7, r7, r6, r1
   59370:	cmp	r7, #0
   59374:	bne	59310 <GetDataSlab+0x251b4>
   59378:	ldr	r0, [sp, #92]	; 0x5c
   5937c:	ldr	r7, [r0, r2]
   59380:	cmp	r7, #0
   59384:	beq	5932c <GetDataSlab+0x251d0>
   59388:	ldr	r0, [ip, r2]
   5938c:	mla	r1, r0, r7, r1
   59390:	mul	r0, r0, r7
   59394:	b	59328 <GetDataSlab+0x251cc>
   59398:	ldr	r0, [sp, #76]	; 0x4c
   5939c:	ldr	r1, [sp, #72]	; 0x48
   593a0:	ldr	r7, [sp, #52]	; 0x34
   593a4:	cmp	r0, #1
   593a8:	ldr	r0, [fp, #20]
   593ac:	blt	5b69c <GetDataSlab+0x27540>
   593b0:	add	lr, r0, #4
   593b4:	ldr	r0, [fp, #12]
   593b8:	mls	r1, r1, r4, r7
   593bc:	orr	r2, r2, #4
   593c0:	lsl	r9, r4, #3
   593c4:	str	r1, [sp, #64]	; 0x40
   593c8:	sub	r1, fp, #136	; 0x88
   593cc:	add	r0, r0, #4
   593d0:	orr	r6, r1, #4
   593d4:	ldr	r1, [sp, #72]	; 0x48
   593d8:	str	r0, [sp, #84]	; 0x54
   593dc:	ldr	r0, [fp, #24]
   593e0:	sub	r0, r0, #1
   593e4:	str	r0, [sp, #44]	; 0x2c
   593e8:	sub	r0, fp, #96	; 0x60
   593ec:	orr	r0, r0, #4
   593f0:	str	r0, [sp, #40]	; 0x28
   593f4:	mul	r0, r1, r4
   593f8:	mov	r4, r2
   593fc:	str	r0, [sp, #52]	; 0x34
   59400:	and	r0, r1, #1
   59404:	sub	ip, r1, r0
   59408:	str	r0, [sp, #48]	; 0x30
   5940c:	lsl	r0, r1, #3
   59410:	str	r0, [sp, #60]	; 0x3c
   59414:	ldr	r0, [sp, #88]	; 0x58
   59418:	str	r0, [sp, #80]	; 0x50
   5941c:	mov	r0, #0
   59420:	str	r0, [sp, #68]	; 0x44
   59424:	b	59468 <GetDataSlab+0x2530c>
   59428:	ldr	r0, [sp, #40]	; 0x28
   5942c:	ldr	r0, [r0, r2]
   59430:	add	r8, r8, r0, lsl #2
   59434:	add	r3, r0, r3
   59438:	ldr	r0, [sp, #60]	; 0x3c
   5943c:	ldr	r1, [sp, #80]	; 0x50
   59440:	ldr	r5, [sp, #68]	; 0x44
   59444:	mov	r2, #0
   59448:	add	r1, r1, r0
   5944c:	ldr	r0, [sp, #76]	; 0x4c
   59450:	str	r1, [sp, #80]	; 0x50
   59454:	ldr	r1, [sp, #72]	; 0x48
   59458:	add	r5, r5, r1
   5945c:	cmp	r5, r0
   59460:	str	r5, [sp, #68]	; 0x44
   59464:	bge	5b6a0 <GetDataSlab+0x27544>
   59468:	ldr	r0, [fp, #12]
   5946c:	cmp	r1, #1
   59470:	ldr	r2, [r0]
   59474:	add	r5, r8, r2, lsl #2
   59478:	blt	59498 <GetDataSlab+0x2533c>
   5947c:	mov	sl, r4
   59480:	ldr	r4, [sp, #56]	; 0x38
   59484:	mov	r7, #0
   59488:	cmp	r1, #1
   5948c:	bne	594a0 <GetDataSlab+0x25344>
   59490:	ldr	r8, [sp, #88]	; 0x58
   59494:	b	594e0 <GetDataSlab+0x25384>
   59498:	add	r0, r2, r3
   5949c:	b	59514 <GetDataSlab+0x253b8>
   594a0:	ldr	r0, [sp, #80]	; 0x50
   594a4:	ldr	r8, [sp, #88]	; 0x58
   594a8:	mov	r7, #0
   594ac:	ldr	r1, [r5]
   594b0:	add	r7, r7, #2
   594b4:	cmp	ip, r7
   594b8:	str	r1, [r0]
   594bc:	asr	r1, r1, #31
   594c0:	str	r1, [r0, #4]
   594c4:	ldr	r1, [r5, r4, lsl #2]
   594c8:	add	r5, r5, r9
   594cc:	str	r1, [r0, #8]
   594d0:	asr	r1, r1, #31
   594d4:	str	r1, [r0, #12]
   594d8:	add	r0, r0, #16
   594dc:	bne	594ac <GetDataSlab+0x25350>
   594e0:	ldr	r0, [sp, #52]	; 0x34
   594e4:	ldr	r1, [sp, #48]	; 0x30
   594e8:	add	r0, r0, r3
   594ec:	cmp	r1, #0
   594f0:	beq	5950c <GetDataSlab+0x253b0>
   594f4:	ldr	r1, [sp, #68]	; 0x44
   594f8:	ldr	r3, [r5], r4, lsl #2
   594fc:	add	r1, r8, r1, lsl #3
   59500:	str	r3, [r1, r7, lsl #3]!
   59504:	asr	r3, r3, #31
   59508:	str	r3, [r1, #4]
   5950c:	add	r0, r0, r2
   59510:	mov	r4, sl
   59514:	ldr	r1, [sp, #64]	; 0x40
   59518:	sub	r1, r1, r2
   5951c:	add	r3, r0, r1
   59520:	ldr	r0, [fp, #24]
   59524:	add	r8, r5, r1, lsl #2
   59528:	cmp	r0, #2
   5952c:	blt	59438 <GetDataSlab+0x252dc>
   59530:	ldr	r5, [sp, #44]	; 0x2c
   59534:	mov	r2, #0
   59538:	b	59568 <GetDataSlab+0x2540c>
   5953c:	ldr	r7, [sp, #84]	; 0x54
   59540:	sub	r1, fp, #176	; 0xb0
   59544:	sub	r0, r0, sl
   59548:	ldr	r1, [r1, r2]
   5954c:	ldr	r7, [r7, r2]
   59550:	mla	r0, r7, r1, r0
   59554:	add	r3, r0, r3
   59558:	add	r8, r8, r0, lsl #2
   5955c:	subs	r5, r5, #1
   59560:	add	r2, r2, #4
   59564:	beq	59438 <GetDataSlab+0x252dc>
   59568:	ldr	r0, [r6, r2]
   5956c:	add	r0, r0, #1
   59570:	str	r0, [r6, r2]
   59574:	ldr	r1, [lr, r2]
   59578:	sdiv	r7, r0, r1
   5957c:	mls	r0, r7, r1, r0
   59580:	cmp	r0, #0
   59584:	bne	59428 <GetDataSlab+0x252cc>
   59588:	mov	r0, #0
   5958c:	str	r0, [r6, r2]
   59590:	ldr	r0, [r4, r2]
   59594:	sdiv	r1, r3, r0
   59598:	mls	sl, r1, r0, r3
   5959c:	cmp	sl, #0
   595a0:	bne	5953c <GetDataSlab+0x253e0>
   595a4:	ldr	r0, [sp, #84]	; 0x54
   595a8:	ldr	r0, [r0, r2]
   595ac:	cmp	r0, #0
   595b0:	beq	5955c <GetDataSlab+0x25400>
   595b4:	sub	r1, fp, #176	; 0xb0
   595b8:	ldr	r1, [r1, r2]
   595bc:	mla	r3, r1, r0, r3
   595c0:	mul	r0, r1, r0
   595c4:	b	59558 <GetDataSlab+0x253fc>
   595c8:	ldr	r0, [sp, #72]	; 0x48
   595cc:	sub	r1, fp, #96	; 0x60
   595d0:	cmp	r0, #1
   595d4:	ldr	r0, [fp, #12]
   595d8:	blt	5b69c <GetDataSlab+0x27540>
   595dc:	add	r0, r0, #4
   595e0:	mov	ip, r1
   595e4:	ldr	r5, [sp, #48]	; 0x30
   595e8:	ldr	r1, [sp, #68]	; 0x44
   595ec:	ldr	r2, [sp, #52]	; 0x34
   595f0:	str	r0, [sp, #76]	; 0x4c
   595f4:	ldr	r0, [fp, #24]
   595f8:	ldr	r4, [sp, #76]	; 0x4c
   595fc:	mls	r2, r1, r5, r2
   59600:	lsl	r9, r5, #3
   59604:	sub	r0, r0, #1
   59608:	str	r0, [sp, #36]	; 0x24
   5960c:	orr	r0, ip, #4
   59610:	mov	ip, #0
   59614:	str	r0, [sp, #32]
   59618:	mul	r0, r1, r5
   5961c:	str	r2, [sp, #56]	; 0x38
   59620:	sub	r2, fp, #136	; 0x88
   59624:	orr	r6, r2, #4
   59628:	ldr	r2, [fp, #20]
   5962c:	str	r0, [sp, #44]	; 0x2c
   59630:	and	r0, r1, #1
   59634:	sub	r8, r1, r0
   59638:	str	r0, [sp, #40]	; 0x28
   5963c:	lsl	r0, r1, #3
   59640:	str	r0, [sp, #52]	; 0x34
   59644:	ldr	r0, [sp, #88]	; 0x58
   59648:	add	r2, r2, #4
   5964c:	str	r2, [sp, #84]	; 0x54
   59650:	orr	r2, r7, #4
   59654:	str	r2, [sp, #80]	; 0x50
   59658:	str	r0, [sp, #64]	; 0x40
   5965c:	mov	r0, #0
   59660:	str	r0, [sp, #60]	; 0x3c
   59664:	b	596a8 <GetDataSlab+0x2554c>
   59668:	ldr	r0, [sp, #32]
   5966c:	ldr	r0, [r0, r2]
   59670:	add	sl, sl, r0, lsl #2
   59674:	add	r3, r0, r3
   59678:	ldr	r0, [sp, #52]	; 0x34
   5967c:	ldr	r1, [sp, #64]	; 0x40
   59680:	ldr	r7, [sp, #60]	; 0x3c
   59684:	mov	r2, #0
   59688:	add	r1, r1, r0
   5968c:	ldr	r0, [sp, #72]	; 0x48
   59690:	str	r1, [sp, #64]	; 0x40
   59694:	ldr	r1, [sp, #68]	; 0x44
   59698:	add	r7, r7, r1
   5969c:	cmp	r7, r0
   596a0:	str	r7, [sp, #60]	; 0x3c
   596a4:	bge	5b6a0 <GetDataSlab+0x27544>
   596a8:	ldr	r0, [fp, #12]
   596ac:	cmp	r1, #1
   596b0:	ldr	r2, [r0]
   596b4:	add	r5, sl, r2, lsl #2
   596b8:	blt	59734 <GetDataSlab+0x255d8>
   596bc:	mov	r7, #0
   596c0:	cmp	r1, #1
   596c4:	beq	596fc <GetDataSlab+0x255a0>
   596c8:	ldr	sl, [sp, #64]	; 0x40
   596cc:	ldr	r1, [sp, #48]	; 0x30
   596d0:	mov	r7, #0
   596d4:	ldr	r0, [r5]
   596d8:	add	r7, r7, #2
   596dc:	cmp	r8, r7
   596e0:	stm	sl, {r0, ip}
   596e4:	ldr	r0, [r5, r1, lsl #2]
   596e8:	str	ip, [sl, #12]
   596ec:	add	r5, r5, r9
   596f0:	str	r0, [sl, #8]
   596f4:	add	sl, sl, #16
   596f8:	bne	596d4 <GetDataSlab+0x25578>
   596fc:	ldr	r0, [sp, #44]	; 0x2c
   59700:	add	r3, r0, r3
   59704:	ldr	r0, [sp, #40]	; 0x28
   59708:	cmp	r0, #0
   5970c:	beq	5972c <GetDataSlab+0x255d0>
   59710:	ldr	r0, [sp, #88]	; 0x58
   59714:	ldr	r1, [sp, #60]	; 0x3c
   59718:	add	r0, r0, r1, lsl #3
   5971c:	ldr	r1, [sp, #48]	; 0x30
   59720:	ldr	r1, [r5], r1, lsl #2
   59724:	str	r1, [r0, r7, lsl #3]!
   59728:	str	ip, [r0, #4]
   5972c:	add	r3, r3, r2
   59730:	b	59738 <GetDataSlab+0x255dc>
   59734:	add	r3, r2, r3
   59738:	ldr	r0, [sp, #56]	; 0x38
   5973c:	sub	r0, r0, r2
   59740:	add	sl, r5, r0, lsl #2
   59744:	add	r3, r3, r0
   59748:	ldr	r0, [fp, #24]
   5974c:	cmp	r0, #2
   59750:	blt	59678 <GetDataSlab+0x2551c>
   59754:	ldr	r5, [sp, #36]	; 0x24
   59758:	mov	r2, #0
   5975c:	b	59788 <GetDataSlab+0x2562c>
   59760:	sub	r7, fp, #176	; 0xb0
   59764:	ldr	lr, [r4, r2]
   59768:	sub	r0, r0, r1
   5976c:	ldr	r7, [r7, r2]
   59770:	mla	r0, lr, r7, r0
   59774:	add	r3, r0, r3
   59778:	add	sl, sl, r0, lsl #2
   5977c:	subs	r5, r5, #1
   59780:	add	r2, r2, #4
   59784:	beq	59678 <GetDataSlab+0x2551c>
   59788:	ldr	r0, [r6, r2]
   5978c:	ldr	r1, [sp, #84]	; 0x54
   59790:	add	r0, r0, #1
   59794:	str	r0, [r6, r2]
   59798:	ldr	r1, [r1, r2]
   5979c:	sdiv	r7, r0, r1
   597a0:	mls	r0, r7, r1, r0
   597a4:	cmp	r0, #0
   597a8:	bne	59668 <GetDataSlab+0x2550c>
   597ac:	ldr	r0, [sp, #80]	; 0x50
   597b0:	str	ip, [r6, r2]
   597b4:	ldr	r0, [r0, r2]
   597b8:	sdiv	r1, r3, r0
   597bc:	mls	r1, r1, r0, r3
   597c0:	cmp	r1, #0
   597c4:	bne	59760 <GetDataSlab+0x25604>
   597c8:	ldr	r0, [sp, #76]	; 0x4c
   597cc:	ldr	r0, [r0, r2]
   597d0:	cmp	r0, #0
   597d4:	beq	5977c <GetDataSlab+0x25620>
   597d8:	sub	r1, fp, #176	; 0xb0
   597dc:	ldr	r1, [r1, r2]
   597e0:	mla	r3, r1, r0, r3
   597e4:	mul	r0, r1, r0
   597e8:	b	59778 <GetDataSlab+0x2561c>
   597ec:	ldr	r0, [sp, #76]	; 0x4c
   597f0:	ldr	r1, [fp, #12]
   597f4:	ldr	lr, [sp, #68]	; 0x44
   597f8:	sub	r3, fp, #96	; 0x60
   597fc:	cmp	r0, #1
   59800:	blt	5b69c <GetDataSlab+0x27540>
   59804:	ldr	r6, [sp, #36]	; 0x24
   59808:	ldr	r0, [sp, #72]	; 0x48
   5980c:	ldr	sl, [r1], #4
   59810:	str	r1, [sp, #92]	; 0x5c
   59814:	sub	r1, fp, #136	; 0x88
   59818:	mls	r0, lr, r6, r0
   5981c:	str	sl, [sp, #44]	; 0x2c
   59820:	sub	r0, r0, sl
   59824:	str	r0, [sp, #60]	; 0x3c
   59828:	orr	r0, r1, #4
   5982c:	ldr	r1, [sp, #88]	; 0x58
   59830:	str	r0, [sp, #52]	; 0x34
   59834:	ldr	r0, [fp, #20]
   59838:	add	r0, r0, #4
   5983c:	str	r0, [sp, #84]	; 0x54
   59840:	orr	r0, r2, #4
   59844:	str	r0, [sp, #80]	; 0x50
   59848:	ldr	r0, [fp, #24]
   5984c:	sub	r0, r0, #1
   59850:	str	r0, [sp, #32]
   59854:	orr	r0, r3, #4
   59858:	str	r0, [sp, #16]
   5985c:	mla	r0, lr, r6, sl
   59860:	str	r0, [sp, #48]	; 0x30
   59864:	and	r0, lr, #1
   59868:	str	r0, [sp, #40]	; 0x28
   5986c:	sub	r0, lr, r0
   59870:	str	r0, [sp, #28]
   59874:	lsl	r0, lr, #3
   59878:	str	r0, [sp, #56]	; 0x38
   5987c:	lsl	r0, r6, #2
   59880:	str	r0, [sp, #24]
   59884:	lsl	r0, r6, #3
   59888:	str	r0, [sp, #20]
   5988c:	mov	r0, #0
   59890:	str	r0, [sp, #72]	; 0x48
   59894:	add	r4, r5, sl, lsl #2
   59898:	cmp	lr, #1
   5989c:	str	r1, [sp, #64]	; 0x40
   598a0:	bge	598f0 <GetDataSlab+0x25794>
   598a4:	b	59988 <GetDataSlab+0x2582c>
   598a8:	ldr	r1, [sp, #16]
   598ac:	ldr	r0, [r1, r0]
   598b0:	add	r5, r5, r0, lsl #2
   598b4:	add	r8, r0, r8
   598b8:	ldr	r0, [sp, #56]	; 0x38
   598bc:	ldr	r1, [sp, #64]	; 0x40
   598c0:	ldr	r3, [sp, #72]	; 0x48
   598c4:	mov	r2, #0
   598c8:	add	r1, r1, r0
   598cc:	ldr	r0, [sp, #76]	; 0x4c
   598d0:	add	r3, r3, lr
   598d4:	str	r3, [sp, #72]	; 0x48
   598d8:	cmp	r3, r0
   598dc:	bge	5b6a0 <GetDataSlab+0x27544>
   598e0:	add	r4, r5, sl, lsl #2
   598e4:	cmp	lr, #1
   598e8:	str	r1, [sp, #64]	; 0x40
   598ec:	blt	59988 <GetDataSlab+0x2582c>
   598f0:	mov	r7, r8
   598f4:	mov	r6, #0
   598f8:	beq	5993c <GetDataSlab+0x257e0>
   598fc:	ldr	r5, [sp, #28]
   59900:	ldr	r8, [sp, #24]
   59904:	ldr	r9, [sp, #20]
   59908:	mov	r6, #0
   5990c:	mov	sl, r1
   59910:	ldr	r0, [r4]
   59914:	bl	71848 <__aeabi_f2ulz>
   59918:	strd	r0, [sl]
   5991c:	ldr	r0, [r4, r8]
   59920:	bl	71848 <__aeabi_f2ulz>
   59924:	add	r6, r6, #2
   59928:	strd	r0, [sl, #8]
   5992c:	add	r4, r4, r9
   59930:	add	sl, sl, #16
   59934:	cmp	r5, r6
   59938:	bne	59910 <GetDataSlab+0x257b4>
   5993c:	ldr	r0, [sp, #40]	; 0x28
   59940:	ldr	lr, [sp, #68]	; 0x44
   59944:	ldr	sl, [sp, #44]	; 0x2c
   59948:	mov	r8, r7
   5994c:	cmp	r0, #0
   59950:	ldr	r0, [sp, #48]	; 0x30
   59954:	beq	5998c <GetDataSlab+0x25830>
   59958:	ldr	r0, [sp, #88]	; 0x58
   5995c:	ldr	r1, [sp, #72]	; 0x48
   59960:	add	sl, r0, r1, lsl #3
   59964:	ldr	r0, [sp, #36]	; 0x24
   59968:	ldr	r0, [r4], r0, lsl #2
   5996c:	bl	71848 <__aeabi_f2ulz>
   59970:	ldr	lr, [sp, #68]	; 0x44
   59974:	str	r0, [sl, r6, lsl #3]!
   59978:	ldr	r0, [sp, #48]	; 0x30
   5997c:	str	r1, [sl, #4]
   59980:	ldr	sl, [sp, #44]	; 0x2c
   59984:	b	5998c <GetDataSlab+0x25830>
   59988:	mov	r0, sl
   5998c:	ldr	r1, [sp, #60]	; 0x3c
   59990:	add	r0, r0, r8
   59994:	ldr	r7, [sp, #52]	; 0x34
   59998:	mov	r9, #0
   5999c:	add	r8, r0, r1
   599a0:	ldr	r0, [fp, #24]
   599a4:	add	r5, r4, r1, lsl #2
   599a8:	cmp	r0, #2
   599ac:	blt	598b8 <GetDataSlab+0x2575c>
   599b0:	ldr	r1, [sp, #32]
   599b4:	mov	r0, #0
   599b8:	sub	ip, fp, #176	; 0xb0
   599bc:	b	599e8 <GetDataSlab+0x2588c>
   599c0:	ldr	r4, [sp, #92]	; 0x5c
   599c4:	ldr	r6, [ip, r0]
   599c8:	sub	r2, r2, r3
   599cc:	ldr	r4, [r4, r0]
   599d0:	mla	r2, r4, r6, r2
   599d4:	add	r8, r2, r8
   599d8:	add	r5, r5, r2, lsl #2
   599dc:	subs	r1, r1, #1
   599e0:	add	r0, r0, #4
   599e4:	beq	598b8 <GetDataSlab+0x2575c>
   599e8:	ldr	r2, [r7, r0]
   599ec:	ldr	r3, [sp, #84]	; 0x54
   599f0:	add	r2, r2, #1
   599f4:	str	r2, [r7, r0]
   599f8:	ldr	r3, [r3, r0]
   599fc:	sdiv	r6, r2, r3
   59a00:	mls	r2, r6, r3, r2
   59a04:	cmp	r2, #0
   59a08:	bne	598a8 <GetDataSlab+0x2574c>
   59a0c:	ldr	r2, [sp, #80]	; 0x50
   59a10:	str	r9, [r7, r0]
   59a14:	ldr	r2, [r2, r0]
   59a18:	sdiv	r3, r8, r2
   59a1c:	mls	r3, r3, r2, r8
   59a20:	cmp	r3, #0
   59a24:	bne	599c0 <GetDataSlab+0x25864>
   59a28:	ldr	r2, [sp, #92]	; 0x5c
   59a2c:	ldr	r2, [r2, r0]
   59a30:	cmp	r2, #0
   59a34:	beq	599dc <GetDataSlab+0x25880>
   59a38:	ldr	r3, [ip, r0]
   59a3c:	mla	r8, r3, r2, r8
   59a40:	mul	r2, r3, r2
   59a44:	b	599d8 <GetDataSlab+0x2587c>
   59a48:	ldr	r0, [sp, #76]	; 0x4c
   59a4c:	ldr	r1, [fp, #12]
   59a50:	ldr	lr, [sp, #68]	; 0x44
   59a54:	sub	r3, fp, #96	; 0x60
   59a58:	cmp	r0, #1
   59a5c:	blt	5b69c <GetDataSlab+0x27540>
   59a60:	ldr	r6, [sp, #36]	; 0x24
   59a64:	ldr	r0, [sp, #72]	; 0x48
   59a68:	ldr	sl, [r1], #4
   59a6c:	str	r1, [sp, #92]	; 0x5c
   59a70:	sub	r1, fp, #136	; 0x88
   59a74:	mls	r0, lr, r6, r0
   59a78:	str	sl, [sp, #44]	; 0x2c
   59a7c:	sub	r0, r0, sl
   59a80:	str	r0, [sp, #60]	; 0x3c
   59a84:	orr	r0, r1, #4
   59a88:	ldr	r1, [sp, #88]	; 0x58
   59a8c:	str	r0, [sp, #52]	; 0x34
   59a90:	ldr	r0, [fp, #20]
   59a94:	add	r0, r0, #4
   59a98:	str	r0, [sp, #84]	; 0x54
   59a9c:	orr	r0, r2, #4
   59aa0:	str	r0, [sp, #80]	; 0x50
   59aa4:	ldr	r0, [fp, #24]
   59aa8:	sub	r0, r0, #1
   59aac:	str	r0, [sp, #32]
   59ab0:	orr	r0, r3, #4
   59ab4:	str	r0, [sp, #16]
   59ab8:	mla	r0, lr, r6, sl
   59abc:	str	r0, [sp, #48]	; 0x30
   59ac0:	and	r0, lr, #1
   59ac4:	str	r0, [sp, #40]	; 0x28
   59ac8:	sub	r0, lr, r0
   59acc:	str	r0, [sp, #28]
   59ad0:	lsl	r0, lr, #3
   59ad4:	str	r0, [sp, #56]	; 0x38
   59ad8:	lsl	r0, r6, #3
   59adc:	str	r0, [sp, #24]
   59ae0:	lsl	r0, r6, #4
   59ae4:	str	r0, [sp, #20]
   59ae8:	mov	r0, #0
   59aec:	str	r0, [sp, #72]	; 0x48
   59af0:	add	r4, r5, sl, lsl #3
   59af4:	cmp	lr, #1
   59af8:	str	r1, [sp, #64]	; 0x40
   59afc:	bge	59b4c <GetDataSlab+0x259f0>
   59b00:	b	59bf8 <GetDataSlab+0x25a9c>
   59b04:	ldr	r1, [sp, #16]
   59b08:	ldr	r0, [r1, r0]
   59b0c:	add	r5, r5, r0, lsl #3
   59b10:	add	r8, r0, r8
   59b14:	ldr	r0, [sp, #56]	; 0x38
   59b18:	ldr	r1, [sp, #64]	; 0x40
   59b1c:	ldr	r3, [sp, #72]	; 0x48
   59b20:	mov	r2, #0
   59b24:	add	r1, r1, r0
   59b28:	ldr	r0, [sp, #76]	; 0x4c
   59b2c:	add	r3, r3, lr
   59b30:	str	r3, [sp, #72]	; 0x48
   59b34:	cmp	r3, r0
   59b38:	bge	5b6a0 <GetDataSlab+0x27544>
   59b3c:	add	r4, r5, sl, lsl #3
   59b40:	cmp	lr, #1
   59b44:	str	r1, [sp, #64]	; 0x40
   59b48:	blt	59bf8 <GetDataSlab+0x25a9c>
   59b4c:	mov	r7, r8
   59b50:	mov	r6, #0
   59b54:	beq	59ba4 <GetDataSlab+0x25a48>
   59b58:	ldr	r5, [sp, #28]
   59b5c:	ldr	r8, [sp, #24]
   59b60:	ldr	r9, [sp, #20]
   59b64:	mov	r6, #0
   59b68:	mov	sl, r1
   59b6c:	vldr	d16, [r4]
   59b70:	vmov	r0, r1, d16
   59b74:	bl	71888 <__aeabi_d2ulz>
   59b78:	strd	r0, [sl]
   59b7c:	add	r0, r4, r8
   59b80:	vldr	d16, [r0]
   59b84:	vmov	r0, r1, d16
   59b88:	bl	71888 <__aeabi_d2ulz>
   59b8c:	add	r6, r6, #2
   59b90:	strd	r0, [sl, #8]
   59b94:	add	r4, r4, r9
   59b98:	add	sl, sl, #16
   59b9c:	cmp	r5, r6
   59ba0:	bne	59b6c <GetDataSlab+0x25a10>
   59ba4:	ldr	r0, [sp, #40]	; 0x28
   59ba8:	ldr	lr, [sp, #68]	; 0x44
   59bac:	ldr	sl, [sp, #44]	; 0x2c
   59bb0:	mov	r8, r7
   59bb4:	cmp	r0, #0
   59bb8:	ldr	r0, [sp, #48]	; 0x30
   59bbc:	beq	59bfc <GetDataSlab+0x25aa0>
   59bc0:	vldr	d16, [r4]
   59bc4:	ldr	r0, [sp, #88]	; 0x58
   59bc8:	ldr	r1, [sp, #72]	; 0x48
   59bcc:	add	sl, r0, r1, lsl #3
   59bd0:	vmov	r0, r1, d16
   59bd4:	bl	71888 <__aeabi_d2ulz>
   59bd8:	ldr	lr, [sp, #68]	; 0x44
   59bdc:	str	r0, [sl, r6, lsl #3]!
   59be0:	ldr	r0, [sp, #36]	; 0x24
   59be4:	str	r1, [sl, #4]
   59be8:	ldr	sl, [sp, #44]	; 0x2c
   59bec:	add	r4, r4, r0, lsl #3
   59bf0:	ldr	r0, [sp, #48]	; 0x30
   59bf4:	b	59bfc <GetDataSlab+0x25aa0>
   59bf8:	mov	r0, sl
   59bfc:	ldr	r1, [sp, #60]	; 0x3c
   59c00:	add	r0, r0, r8
   59c04:	ldr	r7, [sp, #52]	; 0x34
   59c08:	mov	r9, #0
   59c0c:	add	r8, r0, r1
   59c10:	ldr	r0, [fp, #24]
   59c14:	add	r5, r4, r1, lsl #3
   59c18:	cmp	r0, #2
   59c1c:	blt	59b14 <GetDataSlab+0x259b8>
   59c20:	ldr	r1, [sp, #32]
   59c24:	mov	r0, #0
   59c28:	sub	ip, fp, #176	; 0xb0
   59c2c:	b	59c58 <GetDataSlab+0x25afc>
   59c30:	ldr	r4, [sp, #92]	; 0x5c
   59c34:	ldr	r6, [ip, r0]
   59c38:	sub	r2, r2, r3
   59c3c:	ldr	r4, [r4, r0]
   59c40:	mla	r2, r4, r6, r2
   59c44:	add	r8, r2, r8
   59c48:	add	r5, r5, r2, lsl #3
   59c4c:	subs	r1, r1, #1
   59c50:	add	r0, r0, #4
   59c54:	beq	59b14 <GetDataSlab+0x259b8>
   59c58:	ldr	r2, [r7, r0]
   59c5c:	ldr	r3, [sp, #84]	; 0x54
   59c60:	add	r2, r2, #1
   59c64:	str	r2, [r7, r0]
   59c68:	ldr	r3, [r3, r0]
   59c6c:	sdiv	r6, r2, r3
   59c70:	mls	r2, r6, r3, r2
   59c74:	cmp	r2, #0
   59c78:	bne	59b04 <GetDataSlab+0x259a8>
   59c7c:	ldr	r2, [sp, #80]	; 0x50
   59c80:	str	r9, [r7, r0]
   59c84:	ldr	r2, [r2, r0]
   59c88:	sdiv	r3, r8, r2
   59c8c:	mls	r3, r3, r2, r8
   59c90:	cmp	r3, #0
   59c94:	bne	59c30 <GetDataSlab+0x25ad4>
   59c98:	ldr	r2, [sp, #92]	; 0x5c
   59c9c:	ldr	r2, [r2, r0]
   59ca0:	cmp	r2, #0
   59ca4:	beq	59c4c <GetDataSlab+0x25af0>
   59ca8:	ldr	r3, [ip, r0]
   59cac:	mla	r8, r3, r2, r8
   59cb0:	mul	r2, r3, r2
   59cb4:	b	59c48 <GetDataSlab+0x25aec>
   59cb8:	ldr	r0, [sp, #68]	; 0x44
   59cbc:	ldr	r8, [sp, #88]	; 0x58
   59cc0:	ldr	r2, [sp, #44]	; 0x2c
   59cc4:	cmp	r0, #1
   59cc8:	blt	59f1c <GetDataSlab+0x25dc0>
   59ccc:	ldr	r1, [fp, #12]
   59cd0:	ldr	r3, [sp, #32]
   59cd4:	ldr	r0, [sp, #24]
   59cd8:	str	r8, [sp, #64]	; 0x40
   59cdc:	ldr	r6, [r1], #4
   59ce0:	mls	r0, r2, r3, r0
   59ce4:	lsl	r9, r3, #3
   59ce8:	lsl	sl, r3, #4
   59cec:	str	r1, [sp, #72]	; 0x48
   59cf0:	mov	r1, #0
   59cf4:	str	r1, [sp, #60]	; 0x3c
   59cf8:	sub	r0, r0, r6
   59cfc:	str	r6, [sp, #56]	; 0x38
   59d00:	str	r0, [sp, #52]	; 0x34
   59d04:	sub	r0, fp, #136	; 0x88
   59d08:	orr	r4, r0, #4
   59d0c:	ldr	r0, [fp, #20]
   59d10:	add	r5, r0, #4
   59d14:	sub	r0, fp, #176	; 0xb0
   59d18:	orr	r0, r0, #4
   59d1c:	str	r0, [sp, #76]	; 0x4c
   59d20:	ldr	r0, [fp, #24]
   59d24:	sub	r0, r0, #1
   59d28:	str	r0, [sp, #28]
   59d2c:	sub	r0, fp, #96	; 0x60
   59d30:	orr	r0, r0, #4
   59d34:	str	r0, [sp, #24]
   59d38:	mla	r0, r2, r3, r6
   59d3c:	str	r0, [sp, #40]	; 0x28
   59d40:	and	r0, r2, #1
   59d44:	str	r0, [sp, #36]	; 0x24
   59d48:	sub	lr, r2, r0
   59d4c:	lsl	r0, r2, #3
   59d50:	str	r0, [sp, #48]	; 0x30
   59d54:	mov	r0, r2
   59d58:	ldr	r6, [sp, #56]	; 0x38
   59d5c:	cmp	r0, #1
   59d60:	add	r7, r7, r6, lsl #3
   59d64:	bge	59dbc <GetDataSlab+0x25c60>
   59d68:	b	59ddc <GetDataSlab+0x25c80>
   59d6c:	ldr	r0, [sp, #24]
   59d70:	ldr	r0, [r0, r2]
   59d74:	add	r7, r7, r0, lsl #3
   59d78:	add	ip, r0, ip
   59d7c:	ldr	r0, [sp, #48]	; 0x30
   59d80:	ldr	r1, [sp, #64]	; 0x40
   59d84:	ldr	r2, [sp, #60]	; 0x3c
   59d88:	ldr	r8, [sp, #88]	; 0x58
   59d8c:	add	r1, r1, r0
   59d90:	ldr	r0, [sp, #44]	; 0x2c
   59d94:	str	r1, [sp, #64]	; 0x40
   59d98:	ldr	r1, [sp, #68]	; 0x44
   59d9c:	add	r2, r2, r0
   59da0:	cmp	r2, r1
   59da4:	str	r2, [sp, #60]	; 0x3c
   59da8:	bge	59f1c <GetDataSlab+0x25dc0>
   59dac:	ldr	r6, [sp, #56]	; 0x38
   59db0:	cmp	r0, #1
   59db4:	add	r7, r7, r6, lsl #3
   59db8:	blt	59ddc <GetDataSlab+0x25c80>
   59dbc:	mov	r2, #0
   59dc0:	bne	59de4 <GetDataSlab+0x25c88>
   59dc4:	mov	r0, r7
   59dc8:	ldr	r1, [sp, #36]	; 0x24
   59dcc:	ldr	r6, [sp, #40]	; 0x28
   59dd0:	cmp	r1, #0
   59dd4:	bne	59e2c <GetDataSlab+0x25cd0>
   59dd8:	b	59e4c <GetDataSlab+0x25cf0>
   59ddc:	mov	r0, r7
   59de0:	b	59e4c <GetDataSlab+0x25cf0>
   59de4:	ldr	r6, [sp, #64]	; 0x40
   59de8:	mov	r2, #0
   59dec:	ldrd	r0, [r7]
   59df0:	add	r2, r2, #2
   59df4:	cmp	lr, r2
   59df8:	stm	r6, {r0, r1}
   59dfc:	add	r0, r7, sl
   59e00:	ldr	r1, [r7, r9]!
   59e04:	ldr	r7, [r7, #4]
   59e08:	str	r1, [r6, #8]
   59e0c:	str	r7, [r6, #12]
   59e10:	add	r6, r6, #16
   59e14:	mov	r7, r0
   59e18:	bne	59dec <GetDataSlab+0x25c90>
   59e1c:	ldr	r1, [sp, #36]	; 0x24
   59e20:	ldr	r6, [sp, #40]	; 0x28
   59e24:	cmp	r1, #0
   59e28:	beq	59e4c <GetDataSlab+0x25cf0>
   59e2c:	ldr	r1, [sp, #60]	; 0x3c
   59e30:	ldrd	r6, [r0]
   59e34:	add	r1, r8, r1, lsl #3
   59e38:	str	r6, [r1, r2, lsl #3]!
   59e3c:	ldr	r6, [sp, #40]	; 0x28
   59e40:	str	r7, [r1, #4]
   59e44:	ldr	r1, [sp, #32]
   59e48:	add	r0, r0, r1, lsl #3
   59e4c:	ldr	r1, [sp, #52]	; 0x34
   59e50:	add	r7, r0, r1, lsl #3
   59e54:	add	r0, r6, ip
   59e58:	add	ip, r0, r1
   59e5c:	ldr	r0, [fp, #24]
   59e60:	cmp	r0, #2
   59e64:	blt	59d7c <GetDataSlab+0x25c20>
   59e68:	ldr	r8, [sp, #28]
   59e6c:	mov	r2, #0
   59e70:	b	59ea8 <GetDataSlab+0x25d4c>
   59e74:	mov	r3, r7
   59e78:	ldr	r7, [sp, #72]	; 0x48
   59e7c:	sub	r1, fp, #176	; 0xb0
   59e80:	sub	r0, r0, r6
   59e84:	ldr	r1, [r1, r2]
   59e88:	ldr	r7, [r7, r2]
   59e8c:	mla	r0, r7, r1, r0
   59e90:	mov	r7, r3
   59e94:	add	ip, r0, ip
   59e98:	add	r7, r3, r0, lsl #3
   59e9c:	subs	r8, r8, #1
   59ea0:	add	r2, r2, #4
   59ea4:	beq	59d7c <GetDataSlab+0x25c20>
   59ea8:	ldr	r0, [r4, r2]
   59eac:	add	r0, r0, #1
   59eb0:	str	r0, [r4, r2]
   59eb4:	ldr	r1, [r5, r2]
   59eb8:	sdiv	r6, r0, r1
   59ebc:	mls	r0, r6, r1, r0
   59ec0:	cmp	r0, #0
   59ec4:	bne	59d6c <GetDataSlab+0x25c10>
   59ec8:	mov	r0, #0
   59ecc:	str	r0, [r4, r2]
   59ed0:	ldr	r0, [sp, #76]	; 0x4c
   59ed4:	ldr	r0, [r0, r2]
   59ed8:	sdiv	r1, ip, r0
   59edc:	mls	r6, r1, r0, ip
   59ee0:	cmp	r6, #0
   59ee4:	bne	59e74 <GetDataSlab+0x25d18>
   59ee8:	ldr	r0, [sp, #72]	; 0x48
   59eec:	ldr	r0, [r0, r2]
   59ef0:	cmp	r0, #0
   59ef4:	beq	59e9c <GetDataSlab+0x25d40>
   59ef8:	sub	r1, fp, #176	; 0xb0
   59efc:	ldr	r1, [r1, r2]
   59f00:	mla	ip, r1, r0, ip
   59f04:	mul	r0, r1, r0
   59f08:	add	r7, r7, r0, lsl #3
   59f0c:	subs	r8, r8, #1
   59f10:	add	r2, r2, #4
   59f14:	bne	59ea8 <GetDataSlab+0x25d4c>
   59f18:	b	59d7c <GetDataSlab+0x25c20>
   59f1c:	ldr	r3, [sp, #84]	; 0x54
   59f20:	mov	r2, #0
   59f24:	cmp	r3, #13
   59f28:	bne	5b6a0 <GetDataSlab+0x27544>
   59f2c:	ldr	r0, [fp, #16]
   59f30:	ldr	r1, [fp, #8]
   59f34:	ldr	r9, [fp, #20]
   59f38:	mov	sl, #0
   59f3c:	sub	r7, fp, #176	; 0xb0
   59f40:	ldr	r0, [r0]
   59f44:	str	r0, [sp, #44]	; 0x2c
   59f48:	sub	r0, r0, #1
   59f4c:	str	r0, [fp, #-96]	; 0xffffffa0
   59f50:	ldr	r0, [r1]
   59f54:	str	r0, [fp, #-176]	; 0xffffff50
   59f58:	str	r0, [sp, #40]	; 0x28
   59f5c:	ldr	r0, [fp, #24]
   59f60:	ldr	r2, [r9]
   59f64:	sub	r9, fp, #96	; 0x60
   59f68:	cmp	r0, #2
   59f6c:	str	r2, [sp, #72]	; 0x48
   59f70:	str	r2, [sp, #76]	; 0x4c
   59f74:	blt	5a0c0 <GetDataSlab+0x25f64>
   59f78:	ldr	r3, [sp, #40]	; 0x28
   59f7c:	ldr	r2, [sp, #72]	; 0x48
   59f80:	sub	r0, r1, #4
   59f84:	sub	ip, r1, #12
   59f88:	mov	r6, #1
   59f8c:	mov	lr, #0
   59f90:	mvn	r5, #15
   59f94:	mov	sl, #0
   59f98:	mov	r8, r3
   59f9c:	str	r2, [sp, #76]	; 0x4c
   59fa0:	b	59ff4 <GetDataSlab+0x25e98>
   59fa4:	ldr	r2, [fp, #12]
   59fa8:	sub	r7, fp, #176	; 0xb0
   59fac:	sub	r9, fp, #96	; 0x60
   59fb0:	add	ip, ip, #4
   59fb4:	str	r4, [r9, r6, lsl #2]
   59fb8:	str	r3, [r7, r6, lsl #2]
   59fbc:	ldr	r4, [sp, #76]	; 0x4c
   59fc0:	ldr	r2, [r2, r6, lsl #2]
   59fc4:	mla	sl, r2, r8, sl
   59fc8:	ldr	r2, [fp, #20]
   59fcc:	mov	r8, r3
   59fd0:	mov	r3, r1
   59fd4:	ldr	r1, [fp, #8]
   59fd8:	ldr	r2, [r2, r6, lsl #2]
   59fdc:	add	r6, r6, #1
   59fe0:	mul	r4, r2, r4
   59fe4:	ldr	r2, [fp, #24]
   59fe8:	str	r4, [sp, #76]	; 0x4c
   59fec:	cmp	r6, r2
   59ff0:	beq	5a0c0 <GetDataSlab+0x25f64>
   59ff4:	ldr	r2, [fp, #16]
   59ff8:	add	lr, lr, #1
   59ffc:	cmp	lr, #4
   5a000:	ldr	r2, [r2, r6, lsl #2]
   5a004:	str	r3, [r7, r6, lsl #2]
   5a008:	sub	r4, r2, #1
   5a00c:	str	r4, [r9, r6, lsl #2]
   5a010:	ldr	r1, [r1, r6, lsl #2]
   5a014:	bcs	5a024 <GetDataSlab+0x25ec8>
   5a018:	mov	r2, r1
   5a01c:	mov	r7, r6
   5a020:	b	5a0a8 <GetDataSlab+0x25f4c>
   5a024:	vmov.i32	q9, #1	; 0x00000001
   5a028:	vmov.i32	q10, #1	; 0x00000001
   5a02c:	vmov.32	d23[1], r1
   5a030:	vmov.i32	q8, #1	; 0x00000001
   5a034:	bic	r9, lr, #3
   5a038:	bic	r2, r6, #3
   5a03c:	sub	r7, r6, r9
   5a040:	vmov.32	d18[0], r3
   5a044:	vmov.32	d20[0], r4
   5a048:	mov	r3, ip
   5a04c:	vorr	d16, d18, d18
   5a050:	vmov.i32	q9, #1	; 0x00000001
   5a054:	vorr	d18, d20, d20
   5a058:	vld1.32	{d20-d21}, [r3], r5
   5a05c:	subs	r2, r2, #4
   5a060:	vrev64.32	q12, q10
   5a064:	vext.8	q12, q12, q12, #8
   5a068:	vext.8	q11, q11, q12, #12
   5a06c:	vmul.i32	q9, q9, q12
   5a070:	vmul.i32	q8, q11, q8
   5a074:	vorr	q11, q12, q12
   5a078:	bne	5a058 <GetDataSlab+0x25efc>
   5a07c:	vext.8	q11, q9, q8, #8
   5a080:	vext.8	q12, q8, q8, #8
   5a084:	cmp	lr, r9
   5a088:	vmul.i32	q0, q9, q11
   5a08c:	vmul.i32	q1, q8, q12
   5a090:	vmul.i32	q8, q0, d0[1]
   5a094:	vmul.i32	q9, q1, d2[1]
   5a098:	vmov.32	r4, d16[0]
   5a09c:	vmov.32	r3, d18[0]
   5a0a0:	beq	59fa4 <GetDataSlab+0x25e48>
   5a0a4:	vmov.32	r2, d20[0]
   5a0a8:	mul	r3, r2, r3
   5a0ac:	ldr	r2, [r0, r7, lsl #2]
   5a0b0:	subs	r7, r7, #1
   5a0b4:	mul	r4, r4, r2
   5a0b8:	bne	5a0a8 <GetDataSlab+0x25f4c>
   5a0bc:	b	59fa4 <GetDataSlab+0x25e48>
   5a0c0:	ldr	r0, [sp, #80]	; 0x50
   5a0c4:	add	r4, r0, sl, lsl #3
   5a0c8:	ldr	r0, [sp, #44]	; 0x2c
   5a0cc:	cmp	r0, #1
   5a0d0:	bne	5b5ec <GetDataSlab+0x27490>
   5a0d4:	ldr	r0, [sp, #76]	; 0x4c
   5a0d8:	ldr	r1, [fp, #12]
   5a0dc:	ldr	r3, [sp, #72]	; 0x48
   5a0e0:	ldr	r8, [sp, #40]	; 0x28
   5a0e4:	cmp	r0, #1
   5a0e8:	blt	5b69c <GetDataSlab+0x27540>
   5a0ec:	sub	r0, r3, #2
   5a0f0:	mov	r2, #1
   5a0f4:	add	r2, r2, r0, lsr #1
   5a0f8:	lsr	r0, r0, #1
   5a0fc:	str	r0, [sp, #20]
   5a100:	ldr	r0, [sp, #88]	; 0x58
   5a104:	and	r6, r2, #1
   5a108:	sub	r2, r2, r6
   5a10c:	str	r6, [sp, #28]
   5a110:	str	r2, [sp, #16]
   5a114:	sub	r2, fp, #136	; 0x88
   5a118:	orr	lr, r2, #4
   5a11c:	ldr	r2, [fp, #20]
   5a120:	str	r0, [sp, #68]	; 0x44
   5a124:	mov	r0, #0
   5a128:	str	r0, [sp, #80]	; 0x50
   5a12c:	mov	r0, #0
   5a130:	str	r0, [sp, #84]	; 0x54
   5a134:	add	r2, r2, #4
   5a138:	str	r2, [sp, #52]	; 0x34
   5a13c:	orr	r2, r7, #4
   5a140:	str	r2, [sp, #48]	; 0x30
   5a144:	ldr	r2, [fp, #24]
   5a148:	sub	r2, r2, #1
   5a14c:	str	r2, [sp, #44]	; 0x2c
   5a150:	sub	r2, fp, #96	; 0x60
   5a154:	orr	r2, r2, #4
   5a158:	str	r2, [sp, #32]
   5a15c:	ldr	r2, [r1], #4
   5a160:	str	r1, [sp, #92]	; 0x5c
   5a164:	add	r1, r3, r2
   5a168:	str	r2, [sp, #60]	; 0x3c
   5a16c:	str	r1, [sp, #36]	; 0x24
   5a170:	and	r1, r3, #1
   5a174:	str	r1, [sp, #56]	; 0x38
   5a178:	lsl	r1, r3, #3
   5a17c:	str	r1, [sp, #64]	; 0x40
   5a180:	bic	r1, r3, #1
   5a184:	str	r1, [sp, #24]
   5a188:	b	5a1dc <GetDataSlab+0x26080>
   5a18c:	ldr	r1, [sp, #32]
   5a190:	ldr	r0, [r1, r0]
   5a194:	add	r9, r9, r0, lsl #3
   5a198:	add	sl, r0, sl
   5a19c:	ldr	r0, [sp, #64]	; 0x40
   5a1a0:	ldr	r1, [sp, #68]	; 0x44
   5a1a4:	ldr	r3, [sp, #72]	; 0x48
   5a1a8:	mov	r4, r9
   5a1ac:	mov	r2, #0
   5a1b0:	add	r1, r1, r0
   5a1b4:	ldr	r0, [sp, #80]	; 0x50
   5a1b8:	str	r1, [sp, #68]	; 0x44
   5a1bc:	ldr	r1, [sp, #84]	; 0x54
   5a1c0:	add	r0, r0, #1
   5a1c4:	str	r0, [sp, #80]	; 0x50
   5a1c8:	ldr	r0, [sp, #76]	; 0x4c
   5a1cc:	add	r1, r1, r3
   5a1d0:	str	r1, [sp, #84]	; 0x54
   5a1d4:	cmp	r1, r0
   5a1d8:	bge	5b6a0 <GetDataSlab+0x27544>
   5a1dc:	ldr	r1, [sp, #88]	; 0x58
   5a1e0:	ldr	ip, [sp, #92]	; 0x5c
   5a1e4:	cmp	r3, #1
   5a1e8:	mov	r9, r4
   5a1ec:	blt	5a338 <GetDataSlab+0x261dc>
   5a1f0:	ldr	r0, [sp, #60]	; 0x3c
   5a1f4:	ldr	r2, [sp, #84]	; 0x54
   5a1f8:	mov	r3, #0
   5a1fc:	add	r0, r9, r0, lsl #3
   5a200:	add	r6, r1, r2, lsl #3
   5a204:	beq	5a2b8 <GetDataSlab+0x2615c>
   5a208:	ldr	r2, [sp, #64]	; 0x40
   5a20c:	ldr	r5, [sp, #80]	; 0x50
   5a210:	mla	r2, r2, r5, r1
   5a214:	ldr	r5, [sp, #36]	; 0x24
   5a218:	add	r7, r9, r5, lsl #3
   5a21c:	cmp	r2, r7
   5a220:	bcs	5a23c <GetDataSlab+0x260e0>
   5a224:	ldr	r2, [sp, #64]	; 0x40
   5a228:	ldr	r5, [sp, #80]	; 0x50
   5a22c:	mla	r2, r2, r5, r2
   5a230:	add	r2, r1, r2
   5a234:	cmp	r2, r0
   5a238:	bhi	5a2b8 <GetDataSlab+0x2615c>
   5a23c:	ldr	r1, [sp, #20]
   5a240:	mov	r3, #0
   5a244:	cmp	r1, #0
   5a248:	beq	5a280 <GetDataSlab+0x26124>
   5a24c:	ldr	ip, [sp, #68]	; 0x44
   5a250:	ldr	r9, [sp, #16]
   5a254:	mov	r2, r0
   5a258:	mov	r1, #32
   5a25c:	add	r7, r2, #16
   5a260:	vld1.64	{d16-d17}, [r2], r1
   5a264:	add	r8, ip, #16
   5a268:	subs	r9, r9, #2
   5a26c:	add	r3, r3, #4
   5a270:	vst1.64	{d16-d17}, [ip], r1
   5a274:	vld1.64	{d16-d17}, [r7]
   5a278:	vst1.64	{d16-d17}, [r8]
   5a27c:	bne	5a25c <GetDataSlab+0x26100>
   5a280:	ldr	r1, [sp, #28]
   5a284:	ldr	r8, [sp, #40]	; 0x28
   5a288:	mov	r9, r4
   5a28c:	cmp	r1, #0
   5a290:	beq	5a2a4 <GetDataSlab+0x26148>
   5a294:	add	r2, r0, r3, lsl #3
   5a298:	vld1.64	{d16-d17}, [r2]
   5a29c:	add	r2, r6, r3, lsl #3
   5a2a0:	vst1.64	{d16-d17}, [r2]
   5a2a4:	ldr	r1, [sp, #72]	; 0x48
   5a2a8:	ldr	r3, [sp, #24]
   5a2ac:	ldr	ip, [sp, #92]	; 0x5c
   5a2b0:	cmp	r1, r3
   5a2b4:	beq	5a338 <GetDataSlab+0x261dc>
   5a2b8:	ldr	r1, [sp, #56]	; 0x38
   5a2bc:	mov	r7, r3
   5a2c0:	cmp	r1, #0
   5a2c4:	beq	5a2e0 <GetDataSlab+0x26184>
   5a2c8:	mov	r2, r0
   5a2cc:	ldr	r7, [r2, r3, lsl #3]!
   5a2d0:	ldr	r2, [r2, #4]
   5a2d4:	str	r7, [r6, r3, lsl #3]!
   5a2d8:	orr	r7, r3, #1
   5a2dc:	str	r2, [r6, #4]
   5a2e0:	ldr	r1, [sp, #72]	; 0x48
   5a2e4:	orr	r2, r3, #1
   5a2e8:	cmp	r1, r2
   5a2ec:	beq	5a338 <GetDataSlab+0x261dc>
   5a2f0:	ldr	r1, [sp, #72]	; 0x48
   5a2f4:	lsl	r3, r7, #3
   5a2f8:	sub	r2, r1, r7
   5a2fc:	ldr	r7, [sp, #68]	; 0x44
   5a300:	add	r6, r0, #16
   5a304:	ldr	r5, [r0, r3]!
   5a308:	add	r1, r7, #16
   5a30c:	subs	r2, r2, #2
   5a310:	ldr	r4, [r0, #4]
   5a314:	str	r5, [r7, r3]!
   5a318:	str	r4, [r7, #4]
   5a31c:	ldr	r5, [r0, #8]
   5a320:	ldr	r0, [r0, #12]
   5a324:	str	r0, [r7, #12]
   5a328:	str	r5, [r7, #8]
   5a32c:	mov	r0, r6
   5a330:	mov	r7, r1
   5a334:	bne	5a300 <GetDataSlab+0x261a4>
   5a338:	ldr	r0, [fp, #24]
   5a33c:	add	r9, r9, r8, lsl #3
   5a340:	add	sl, sl, r8
   5a344:	cmp	r0, #2
   5a348:	blt	5a19c <GetDataSlab+0x26040>
   5a34c:	ldr	r2, [sp, #44]	; 0x2c
   5a350:	ldr	r4, [sp, #52]	; 0x34
   5a354:	ldr	r5, [sp, #48]	; 0x30
   5a358:	mov	r0, #0
   5a35c:	b	5a388 <GetDataSlab+0x2622c>
   5a360:	sub	r1, fp, #176	; 0xb0
   5a364:	ldr	r6, [ip, r0]
   5a368:	sub	r3, r3, r7
   5a36c:	ldr	r1, [r1, r0]
   5a370:	mla	r1, r6, r1, r3
   5a374:	add	sl, r1, sl
   5a378:	add	r9, r9, r1, lsl #3
   5a37c:	subs	r2, r2, #1
   5a380:	add	r0, r0, #4
   5a384:	beq	5a19c <GetDataSlab+0x26040>
   5a388:	ldr	r1, [lr, r0]
   5a38c:	add	r1, r1, #1
   5a390:	str	r1, [lr, r0]
   5a394:	ldr	r3, [r4, r0]
   5a398:	sdiv	r7, r1, r3
   5a39c:	mls	r1, r7, r3, r1
   5a3a0:	cmp	r1, #0
   5a3a4:	bne	5a18c <GetDataSlab+0x26030>
   5a3a8:	ldr	r3, [r5, r0]
   5a3ac:	mov	r1, #0
   5a3b0:	str	r1, [lr, r0]
   5a3b4:	sdiv	r1, sl, r3
   5a3b8:	mls	r7, r1, r3, sl
   5a3bc:	cmp	r7, #0
   5a3c0:	bne	5a360 <GetDataSlab+0x26204>
   5a3c4:	ldr	r3, [ip, r0]
   5a3c8:	cmp	r3, #0
   5a3cc:	beq	5a37c <GetDataSlab+0x26220>
   5a3d0:	sub	r1, fp, #176	; 0xb0
   5a3d4:	ldr	r1, [r1, r0]
   5a3d8:	mla	sl, r1, r3, sl
   5a3dc:	mul	r1, r1, r3
   5a3e0:	b	5a378 <GetDataSlab+0x2621c>
   5a3e4:	ldr	r0, [sp, #76]	; 0x4c
   5a3e8:	ldr	lr, [sp, #64]	; 0x40
   5a3ec:	cmp	r0, #1
   5a3f0:	ldr	r0, [sp, #44]	; 0x2c
   5a3f4:	blt	5b69c <GetDataSlab+0x27540>
   5a3f8:	ldr	r1, [sp, #92]	; 0x5c
   5a3fc:	ldr	r2, [sp, #36]	; 0x24
   5a400:	ldr	r9, [r1], #4
   5a404:	mls	r0, lr, r2, r0
   5a408:	str	r1, [sp, #92]	; 0x5c
   5a40c:	sub	r0, r0, r9
   5a410:	str	r9, [sp, #44]	; 0x2c
   5a414:	str	r0, [sp, #60]	; 0x3c
   5a418:	sub	r0, fp, #136	; 0x88
   5a41c:	orr	r0, r0, #4
   5a420:	str	r0, [sp, #52]	; 0x34
   5a424:	ldr	r0, [fp, #20]
   5a428:	add	r0, r0, #4
   5a42c:	str	r0, [sp, #84]	; 0x54
   5a430:	orr	r0, r6, #4
   5a434:	str	r0, [sp, #80]	; 0x50
   5a438:	ldr	r0, [fp, #24]
   5a43c:	sub	r0, r0, #1
   5a440:	str	r0, [sp, #32]
   5a444:	sub	r0, fp, #96	; 0x60
   5a448:	orr	r0, r0, #4
   5a44c:	str	r0, [sp, #16]
   5a450:	mla	r0, lr, r2, r9
   5a454:	str	r0, [sp, #48]	; 0x30
   5a458:	and	r0, lr, #1
   5a45c:	str	r0, [sp, #40]	; 0x28
   5a460:	sub	r0, lr, r0
   5a464:	str	r0, [sp, #28]
   5a468:	lsl	r0, lr, #3
   5a46c:	str	r0, [sp, #56]	; 0x38
   5a470:	ldr	r0, [sp, #88]	; 0x58
   5a474:	add	r1, r0, #8
   5a478:	lsl	r0, r2, #3
   5a47c:	str	r0, [sp, #24]
   5a480:	lsl	r0, r2, #4
   5a484:	str	r0, [sp, #20]
   5a488:	mov	r0, #0
   5a48c:	str	r0, [sp, #72]	; 0x48
   5a490:	add	r7, r5, r9, lsl #3
   5a494:	cmp	lr, #1
   5a498:	str	r1, [sp, #68]	; 0x44
   5a49c:	bge	5a4ec <GetDataSlab+0x26390>
   5a4a0:	b	5a588 <GetDataSlab+0x2642c>
   5a4a4:	ldr	r1, [sp, #16]
   5a4a8:	ldr	r0, [r1, r0]
   5a4ac:	add	r5, r5, r0, lsl #3
   5a4b0:	add	r8, r0, r8
   5a4b4:	ldr	r0, [sp, #56]	; 0x38
   5a4b8:	ldr	r1, [sp, #68]	; 0x44
   5a4bc:	ldr	r3, [sp, #72]	; 0x48
   5a4c0:	mov	r2, #0
   5a4c4:	add	r1, r1, r0
   5a4c8:	ldr	r0, [sp, #76]	; 0x4c
   5a4cc:	add	r3, r3, lr
   5a4d0:	str	r3, [sp, #72]	; 0x48
   5a4d4:	cmp	r3, r0
   5a4d8:	bge	5b6a0 <GetDataSlab+0x27544>
   5a4dc:	add	r7, r5, r9, lsl #3
   5a4e0:	cmp	lr, #1
   5a4e4:	str	r1, [sp, #68]	; 0x44
   5a4e8:	blt	5a588 <GetDataSlab+0x2642c>
   5a4ec:	mov	r6, #0
   5a4f0:	beq	5a53c <GetDataSlab+0x263e0>
   5a4f4:	ldr	r5, [sp, #28]
   5a4f8:	ldr	sl, [sp, #24]
   5a4fc:	ldr	r4, [sp, #20]
   5a500:	mov	r6, #0
   5a504:	mov	r9, r1
   5a508:	ldrd	r0, [r7]
   5a50c:	bl	7152c <__aeabi_ul2d>
   5a510:	strd	r0, [r9, #-8]
   5a514:	mov	r1, r7
   5a518:	ldr	r0, [r1, sl]!
   5a51c:	ldr	r1, [r1, #4]
   5a520:	bl	7152c <__aeabi_ul2d>
   5a524:	add	r6, r6, #2
   5a528:	strd	r0, [r9]
   5a52c:	add	r7, r7, r4
   5a530:	add	r9, r9, #16
   5a534:	cmp	r5, r6
   5a538:	bne	5a508 <GetDataSlab+0x263ac>
   5a53c:	ldr	r0, [sp, #40]	; 0x28
   5a540:	ldr	lr, [sp, #64]	; 0x40
   5a544:	ldr	r9, [sp, #44]	; 0x2c
   5a548:	cmp	r0, #0
   5a54c:	ldr	r0, [sp, #48]	; 0x30
   5a550:	beq	5a58c <GetDataSlab+0x26430>
   5a554:	ldr	r0, [sp, #88]	; 0x58
   5a558:	ldr	r1, [sp, #72]	; 0x48
   5a55c:	add	r9, r0, r1, lsl #3
   5a560:	ldrd	r0, [r7]
   5a564:	bl	7152c <__aeabi_ul2d>
   5a568:	str	r0, [r9, r6, lsl #3]!
   5a56c:	ldr	r0, [sp, #36]	; 0x24
   5a570:	ldr	lr, [sp, #64]	; 0x40
   5a574:	str	r1, [r9, #4]
   5a578:	ldr	r9, [sp, #44]	; 0x2c
   5a57c:	add	r7, r7, r0, lsl #3
   5a580:	ldr	r0, [sp, #48]	; 0x30
   5a584:	b	5a58c <GetDataSlab+0x26430>
   5a588:	mov	r0, r9
   5a58c:	ldr	r1, [sp, #60]	; 0x3c
   5a590:	add	r0, r0, r8
   5a594:	ldr	r4, [sp, #52]	; 0x34
   5a598:	mov	sl, #0
   5a59c:	add	r8, r0, r1
   5a5a0:	ldr	r0, [fp, #24]
   5a5a4:	add	r5, r7, r1, lsl #3
   5a5a8:	cmp	r0, #2
   5a5ac:	blt	5a4b4 <GetDataSlab+0x26358>
   5a5b0:	ldr	r1, [sp, #32]
   5a5b4:	mov	r0, #0
   5a5b8:	sub	ip, fp, #176	; 0xb0
   5a5bc:	b	5a5e8 <GetDataSlab+0x2648c>
   5a5c0:	ldr	r6, [sp, #92]	; 0x5c
   5a5c4:	ldr	r7, [ip, r0]
   5a5c8:	sub	r2, r2, r3
   5a5cc:	ldr	r6, [r6, r0]
   5a5d0:	mla	r2, r6, r7, r2
   5a5d4:	add	r8, r2, r8
   5a5d8:	add	r5, r5, r2, lsl #3
   5a5dc:	subs	r1, r1, #1
   5a5e0:	add	r0, r0, #4
   5a5e4:	beq	5a4b4 <GetDataSlab+0x26358>
   5a5e8:	ldr	r2, [r4, r0]
   5a5ec:	ldr	r3, [sp, #84]	; 0x54
   5a5f0:	add	r2, r2, #1
   5a5f4:	str	r2, [r4, r0]
   5a5f8:	ldr	r3, [r3, r0]
   5a5fc:	sdiv	r7, r2, r3
   5a600:	mls	r2, r7, r3, r2
   5a604:	cmp	r2, #0
   5a608:	bne	5a4a4 <GetDataSlab+0x26348>
   5a60c:	ldr	r2, [sp, #80]	; 0x50
   5a610:	str	sl, [r4, r0]
   5a614:	ldr	r2, [r2, r0]
   5a618:	sdiv	r3, r8, r2
   5a61c:	mls	r3, r3, r2, r8
   5a620:	cmp	r3, #0
   5a624:	bne	5a5c0 <GetDataSlab+0x26464>
   5a628:	ldr	r2, [sp, #92]	; 0x5c
   5a62c:	ldr	r2, [r2, r0]
   5a630:	cmp	r2, #0
   5a634:	beq	5a5dc <GetDataSlab+0x26480>
   5a638:	ldr	r3, [ip, r0]
   5a63c:	mla	r8, r3, r2, r8
   5a640:	mul	r2, r3, r2
   5a644:	b	5a5d8 <GetDataSlab+0x2647c>
   5a648:	ldr	r0, [sp, #72]	; 0x48
   5a64c:	ldr	r1, [sp, #88]	; 0x58
   5a650:	ldr	r2, [fp, #12]
   5a654:	ldr	lr, [sp, #56]	; 0x38
   5a658:	sub	r3, fp, #96	; 0x60
   5a65c:	cmp	r0, #1
   5a660:	ldr	r0, [sp, #44]	; 0x2c
   5a664:	blt	5b69c <GetDataSlab+0x27540>
   5a668:	ldr	r6, [sp, #36]	; 0x24
   5a66c:	ldr	r8, [r2], #4
   5a670:	add	r1, r1, #4
   5a674:	str	r2, [sp, #92]	; 0x5c
   5a678:	mls	r0, lr, r6, r0
   5a67c:	lsl	sl, r6, #4
   5a680:	str	r8, [sp, #44]	; 0x2c
   5a684:	sub	r0, r0, r8
   5a688:	str	r0, [sp, #60]	; 0x3c
   5a68c:	sub	r0, fp, #136	; 0x88
   5a690:	orr	r9, r0, #4
   5a694:	ldr	r0, [fp, #20]
   5a698:	add	r0, r0, #4
   5a69c:	str	r0, [sp, #84]	; 0x54
   5a6a0:	orr	r0, r7, #4
   5a6a4:	str	r0, [sp, #80]	; 0x50
   5a6a8:	ldr	r0, [fp, #24]
   5a6ac:	sub	r0, r0, #1
   5a6b0:	str	r0, [sp, #32]
   5a6b4:	orr	r0, r3, #4
   5a6b8:	str	r0, [sp, #20]
   5a6bc:	mla	r0, lr, r6, r8
   5a6c0:	str	r0, [sp, #48]	; 0x30
   5a6c4:	and	r0, lr, #1
   5a6c8:	str	r0, [sp, #40]	; 0x28
   5a6cc:	sub	r0, lr, r0
   5a6d0:	str	r0, [sp, #28]
   5a6d4:	lsl	r0, lr, #2
   5a6d8:	str	r0, [sp, #52]	; 0x34
   5a6dc:	lsl	r0, r6, #3
   5a6e0:	str	r0, [sp, #24]
   5a6e4:	mov	r0, #0
   5a6e8:	str	r0, [sp, #68]	; 0x44
   5a6ec:	add	r7, r4, r8, lsl #3
   5a6f0:	cmp	lr, #1
   5a6f4:	str	r1, [sp, #64]	; 0x40
   5a6f8:	bge	5a74c <GetDataSlab+0x265f0>
   5a6fc:	b	5a7e0 <GetDataSlab+0x26684>
   5a700:	ldr	r1, [sp, #20]
   5a704:	ldr	r0, [r1, r0]
   5a708:	add	r4, r4, r0, lsl #3
   5a70c:	add	r5, r0, r5
   5a710:	ldr	r0, [sp, #52]	; 0x34
   5a714:	ldr	r1, [sp, #64]	; 0x40
   5a718:	ldr	r3, [sp, #68]	; 0x44
   5a71c:	mov	r2, #0
   5a720:	str	r5, [sp, #76]	; 0x4c
   5a724:	add	r1, r1, r0
   5a728:	ldr	r0, [sp, #72]	; 0x48
   5a72c:	add	r3, r3, lr
   5a730:	str	r3, [sp, #68]	; 0x44
   5a734:	cmp	r3, r0
   5a738:	bge	5b6a0 <GetDataSlab+0x27544>
   5a73c:	add	r7, r4, r8, lsl #3
   5a740:	cmp	lr, #1
   5a744:	str	r1, [sp, #64]	; 0x40
   5a748:	blt	5a7e0 <GetDataSlab+0x26684>
   5a74c:	mov	r6, #0
   5a750:	beq	5a798 <GetDataSlab+0x2663c>
   5a754:	ldr	r5, [sp, #28]
   5a758:	ldr	r4, [sp, #24]
   5a75c:	mov	r6, #0
   5a760:	mov	r8, r1
   5a764:	ldrd	r0, [r7]
   5a768:	bl	71764 <__aeabi_ul2f>
   5a76c:	str	r0, [r8, #-4]
   5a770:	mov	r1, r7
   5a774:	ldr	r0, [r1, r4]!
   5a778:	ldr	r1, [r1, #4]
   5a77c:	bl	71764 <__aeabi_ul2f>
   5a780:	add	r6, r6, #2
   5a784:	str	r0, [r8]
   5a788:	add	r7, r7, sl
   5a78c:	add	r8, r8, #8
   5a790:	cmp	r5, r6
   5a794:	bne	5a764 <GetDataSlab+0x26608>
   5a798:	ldr	r0, [sp, #40]	; 0x28
   5a79c:	ldr	lr, [sp, #56]	; 0x38
   5a7a0:	ldr	r8, [sp, #44]	; 0x2c
   5a7a4:	cmp	r0, #0
   5a7a8:	ldr	r0, [sp, #48]	; 0x30
   5a7ac:	beq	5a7e4 <GetDataSlab+0x26688>
   5a7b0:	ldr	r0, [sp, #88]	; 0x58
   5a7b4:	ldr	r1, [sp, #68]	; 0x44
   5a7b8:	add	r8, r0, r1, lsl #2
   5a7bc:	ldrd	r0, [r7]
   5a7c0:	bl	71764 <__aeabi_ul2f>
   5a7c4:	str	r0, [r8, r6, lsl #2]
   5a7c8:	ldr	r0, [sp, #36]	; 0x24
   5a7cc:	ldr	r8, [sp, #44]	; 0x2c
   5a7d0:	ldr	lr, [sp, #56]	; 0x38
   5a7d4:	add	r7, r7, r0, lsl #3
   5a7d8:	ldr	r0, [sp, #48]	; 0x30
   5a7dc:	b	5a7e4 <GetDataSlab+0x26688>
   5a7e0:	mov	r0, r8
   5a7e4:	ldr	r1, [sp, #76]	; 0x4c
   5a7e8:	ldr	r2, [sp, #60]	; 0x3c
   5a7ec:	add	r0, r0, r1
   5a7f0:	add	r4, r7, r2, lsl #3
   5a7f4:	add	r5, r0, r2
   5a7f8:	ldr	r0, [fp, #24]
   5a7fc:	cmp	r0, #2
   5a800:	blt	5a710 <GetDataSlab+0x265b4>
   5a804:	ldr	r1, [sp, #32]
   5a808:	ldr	ip, [sp, #92]	; 0x5c
   5a80c:	mov	r0, #0
   5a810:	b	5a83c <GetDataSlab+0x266e0>
   5a814:	sub	r7, fp, #176	; 0xb0
   5a818:	ldr	r6, [ip, r0]
   5a81c:	sub	r2, r2, r3
   5a820:	ldr	r7, [r7, r0]
   5a824:	mla	r2, r6, r7, r2
   5a828:	add	r5, r2, r5
   5a82c:	add	r4, r4, r2, lsl #3
   5a830:	subs	r1, r1, #1
   5a834:	add	r0, r0, #4
   5a838:	beq	5a710 <GetDataSlab+0x265b4>
   5a83c:	ldr	r2, [r9, r0]
   5a840:	ldr	r3, [sp, #84]	; 0x54
   5a844:	add	r2, r2, #1
   5a848:	str	r2, [r9, r0]
   5a84c:	ldr	r3, [r3, r0]
   5a850:	sdiv	r7, r2, r3
   5a854:	mls	r2, r7, r3, r2
   5a858:	cmp	r2, #0
   5a85c:	bne	5a700 <GetDataSlab+0x265a4>
   5a860:	mov	r2, #0
   5a864:	str	r2, [r9, r0]
   5a868:	ldr	r2, [sp, #80]	; 0x50
   5a86c:	ldr	r2, [r2, r0]
   5a870:	sdiv	r3, r5, r2
   5a874:	mls	r3, r3, r2, r5
   5a878:	cmp	r3, #0
   5a87c:	bne	5a814 <GetDataSlab+0x266b8>
   5a880:	ldr	r2, [ip, r0]
   5a884:	cmp	r2, #0
   5a888:	beq	5a830 <GetDataSlab+0x266d4>
   5a88c:	sub	r3, fp, #176	; 0xb0
   5a890:	ldr	r3, [r3, r0]
   5a894:	mla	r5, r3, r2, r5
   5a898:	mul	r2, r3, r2
   5a89c:	b	5a82c <GetDataSlab+0x266d0>
   5a8a0:	ldr	r0, [sp, #76]	; 0x4c
   5a8a4:	ldr	r2, [fp, #20]
   5a8a8:	cmp	r0, #1
   5a8ac:	sub	r0, fp, #176	; 0xb0
   5a8b0:	blt	5aed4 <GetDataSlab+0x26d78>
   5a8b4:	orr	r0, r0, #4
   5a8b8:	ldr	lr, [fp, #12]
   5a8bc:	mov	r3, r8
   5a8c0:	sub	r6, fp, #136	; 0x88
   5a8c4:	add	r2, r2, #4
   5a8c8:	str	r0, [sp, #80]	; 0x50
   5a8cc:	ldr	r0, [fp, #24]
   5a8d0:	orr	r8, r6, #4
   5a8d4:	str	r2, [sp, #84]	; 0x54
   5a8d8:	sub	r0, r0, #1
   5a8dc:	str	r0, [sp, #60]	; 0x3c
   5a8e0:	orr	r0, r3, #4
   5a8e4:	str	r0, [sp, #56]	; 0x38
   5a8e8:	ldr	r0, [lr], #4
   5a8ec:	str	r0, [sp, #64]	; 0x40
   5a8f0:	mov	r0, #0
   5a8f4:	str	r0, [sp, #68]	; 0x44
   5a8f8:	b	5a92c <GetDataSlab+0x267d0>
   5a8fc:	ldr	r0, [sp, #56]	; 0x38
   5a900:	ldr	r0, [r0, r2]
   5a904:	add	sl, sl, r0, lsl #3
   5a908:	add	r7, r0, r7
   5a90c:	ldr	r2, [sp, #68]	; 0x44
   5a910:	ldr	r0, [sp, #76]	; 0x4c
   5a914:	str	r6, [sp, #72]	; 0x48
   5a918:	add	r2, r1, r2
   5a91c:	str	r2, [sp, #68]	; 0x44
   5a920:	cmp	r2, r0
   5a924:	mov	r2, #0
   5a928:	bge	5b6a0 <GetDataSlab+0x27544>
   5a92c:	ldr	r0, [sp, #64]	; 0x40
   5a930:	cmp	r1, #1
   5a934:	add	r2, r0, r7
   5a938:	add	r7, sl, r0, lsl #3
   5a93c:	blt	5a990 <GetDataSlab+0x26834>
   5a940:	ldr	r0, [sp, #88]	; 0x58
   5a944:	ldr	r1, [sp, #68]	; 0x44
   5a948:	ldr	ip, [fp, #8]
   5a94c:	ldr	r6, [fp, #16]
   5a950:	mov	r3, #0
   5a954:	add	r4, r0, r1
   5a958:	ldr	r0, [fp, #20]
   5a95c:	ldrb	r1, [r7]
   5a960:	strb	r1, [r4, r3]
   5a964:	add	r3, r3, #1
   5a968:	ldr	r5, [r6]
   5a96c:	ldr	r1, [r0]
   5a970:	add	r7, r7, r5, lsl #3
   5a974:	add	r2, r5, r2
   5a978:	cmp	r3, r1
   5a97c:	blt	5a95c <GetDataSlab+0x26800>
   5a980:	ldr	r0, [fp, #12]
   5a984:	ldr	r6, [ip]
   5a988:	ldr	r0, [r0]
   5a98c:	b	5a994 <GetDataSlab+0x26838>
   5a990:	ldr	r6, [sp, #72]	; 0x48
   5a994:	mls	r3, r5, r1, r6
   5a998:	str	r0, [sp, #64]	; 0x40
   5a99c:	sub	r3, r3, r0
   5a9a0:	ldr	r0, [fp, #24]
   5a9a4:	add	sl, r7, r3, lsl #3
   5a9a8:	add	r7, r3, r2
   5a9ac:	cmp	r0, #2
   5a9b0:	blt	5a90c <GetDataSlab+0x267b0>
   5a9b4:	ldr	r9, [sp, #60]	; 0x3c
   5a9b8:	mov	r2, #0
   5a9bc:	b	5a9e8 <GetDataSlab+0x2688c>
   5a9c0:	sub	r0, fp, #176	; 0xb0
   5a9c4:	ldr	r4, [lr, r2]
   5a9c8:	sub	r3, r3, ip
   5a9cc:	ldr	r0, [r0, r2]
   5a9d0:	mla	r0, r4, r0, r3
   5a9d4:	add	r7, r0, r7
   5a9d8:	add	sl, sl, r0, lsl #3
   5a9dc:	subs	r9, r9, #1
   5a9e0:	add	r2, r2, #4
   5a9e4:	beq	5a90c <GetDataSlab+0x267b0>
   5a9e8:	ldr	r3, [r8, r2]
   5a9ec:	ldr	r0, [sp, #84]	; 0x54
   5a9f0:	add	r3, r3, #1
   5a9f4:	str	r3, [r8, r2]
   5a9f8:	ldr	r0, [r0, r2]
   5a9fc:	sdiv	r4, r3, r0
   5aa00:	mls	r0, r4, r0, r3
   5aa04:	cmp	r0, #0
   5aa08:	bne	5a8fc <GetDataSlab+0x267a0>
   5aa0c:	mov	r0, #0
   5aa10:	str	r0, [r8, r2]
   5aa14:	ldr	r0, [sp, #80]	; 0x50
   5aa18:	ldr	r3, [r0, r2]
   5aa1c:	sdiv	r0, r7, r3
   5aa20:	mls	ip, r0, r3, r7
   5aa24:	cmp	ip, #0
   5aa28:	bne	5a9c0 <GetDataSlab+0x26864>
   5aa2c:	ldr	r3, [lr, r2]
   5aa30:	cmp	r3, #0
   5aa34:	beq	5a9dc <GetDataSlab+0x26880>
   5aa38:	sub	r0, fp, #176	; 0xb0
   5aa3c:	ldr	r0, [r0, r2]
   5aa40:	mla	r7, r0, r3, r7
   5aa44:	mul	r0, r0, r3
   5aa48:	b	5a9d8 <GetDataSlab+0x2687c>
   5aa4c:	ldr	r0, [sp, #76]	; 0x4c
   5aa50:	ldr	r2, [fp, #20]
   5aa54:	cmp	r0, #1
   5aa58:	sub	r0, fp, #176	; 0xb0
   5aa5c:	blt	5aed4 <GetDataSlab+0x26d78>
   5aa60:	orr	r0, r0, #4
   5aa64:	ldr	lr, [fp, #12]
   5aa68:	mov	r3, r8
   5aa6c:	sub	r6, fp, #136	; 0x88
   5aa70:	add	r2, r2, #4
   5aa74:	str	r0, [sp, #80]	; 0x50
   5aa78:	ldr	r0, [fp, #24]
   5aa7c:	orr	r8, r6, #4
   5aa80:	str	r2, [sp, #84]	; 0x54
   5aa84:	sub	r0, r0, #1
   5aa88:	str	r0, [sp, #60]	; 0x3c
   5aa8c:	orr	r0, r3, #4
   5aa90:	str	r0, [sp, #56]	; 0x38
   5aa94:	ldr	r0, [lr], #4
   5aa98:	str	r0, [sp, #64]	; 0x40
   5aa9c:	mov	r0, #0
   5aaa0:	str	r0, [sp, #68]	; 0x44
   5aaa4:	b	5aad8 <GetDataSlab+0x2697c>
   5aaa8:	ldr	r0, [sp, #56]	; 0x38
   5aaac:	ldr	r0, [r0, r2]
   5aab0:	add	sl, sl, r0, lsl #3
   5aab4:	add	r7, r0, r7
   5aab8:	ldr	r2, [sp, #68]	; 0x44
   5aabc:	ldr	r0, [sp, #76]	; 0x4c
   5aac0:	str	r6, [sp, #72]	; 0x48
   5aac4:	add	r2, r1, r2
   5aac8:	str	r2, [sp, #68]	; 0x44
   5aacc:	cmp	r2, r0
   5aad0:	mov	r2, #0
   5aad4:	bge	5b6a0 <GetDataSlab+0x27544>
   5aad8:	ldr	r0, [sp, #64]	; 0x40
   5aadc:	cmp	r1, #1
   5aae0:	add	r2, r0, r7
   5aae4:	add	r7, sl, r0, lsl #3
   5aae8:	blt	5ab3c <GetDataSlab+0x269e0>
   5aaec:	ldr	r0, [sp, #88]	; 0x58
   5aaf0:	ldr	r1, [sp, #68]	; 0x44
   5aaf4:	ldr	ip, [fp, #8]
   5aaf8:	ldr	r6, [fp, #16]
   5aafc:	mov	r3, #0
   5ab00:	add	r4, r0, r1
   5ab04:	ldr	r0, [fp, #20]
   5ab08:	ldrb	r1, [r7]
   5ab0c:	strb	r1, [r4, r3]
   5ab10:	add	r3, r3, #1
   5ab14:	ldr	r5, [r6]
   5ab18:	ldr	r1, [r0]
   5ab1c:	add	r7, r7, r5, lsl #3
   5ab20:	add	r2, r5, r2
   5ab24:	cmp	r3, r1
   5ab28:	blt	5ab08 <GetDataSlab+0x269ac>
   5ab2c:	ldr	r0, [fp, #12]
   5ab30:	ldr	r6, [ip]
   5ab34:	ldr	r0, [r0]
   5ab38:	b	5ab40 <GetDataSlab+0x269e4>
   5ab3c:	ldr	r6, [sp, #72]	; 0x48
   5ab40:	mls	r3, r5, r1, r6
   5ab44:	str	r0, [sp, #64]	; 0x40
   5ab48:	sub	r3, r3, r0
   5ab4c:	ldr	r0, [fp, #24]
   5ab50:	add	sl, r7, r3, lsl #3
   5ab54:	add	r7, r3, r2
   5ab58:	cmp	r0, #2
   5ab5c:	blt	5aab8 <GetDataSlab+0x2695c>
   5ab60:	ldr	r9, [sp, #60]	; 0x3c
   5ab64:	mov	r2, #0
   5ab68:	b	5ab94 <GetDataSlab+0x26a38>
   5ab6c:	sub	r0, fp, #176	; 0xb0
   5ab70:	ldr	r4, [lr, r2]
   5ab74:	sub	r3, r3, ip
   5ab78:	ldr	r0, [r0, r2]
   5ab7c:	mla	r0, r4, r0, r3
   5ab80:	add	r7, r0, r7
   5ab84:	add	sl, sl, r0, lsl #3
   5ab88:	subs	r9, r9, #1
   5ab8c:	add	r2, r2, #4
   5ab90:	beq	5aab8 <GetDataSlab+0x2695c>
   5ab94:	ldr	r3, [r8, r2]
   5ab98:	ldr	r0, [sp, #84]	; 0x54
   5ab9c:	add	r3, r3, #1
   5aba0:	str	r3, [r8, r2]
   5aba4:	ldr	r0, [r0, r2]
   5aba8:	sdiv	r4, r3, r0
   5abac:	mls	r0, r4, r0, r3
   5abb0:	cmp	r0, #0
   5abb4:	bne	5aaa8 <GetDataSlab+0x2694c>
   5abb8:	mov	r0, #0
   5abbc:	str	r0, [r8, r2]
   5abc0:	ldr	r0, [sp, #80]	; 0x50
   5abc4:	ldr	r3, [r0, r2]
   5abc8:	sdiv	r0, r7, r3
   5abcc:	mls	ip, r0, r3, r7
   5abd0:	cmp	ip, #0
   5abd4:	bne	5ab6c <GetDataSlab+0x26a10>
   5abd8:	ldr	r3, [lr, r2]
   5abdc:	cmp	r3, #0
   5abe0:	beq	5ab88 <GetDataSlab+0x26a2c>
   5abe4:	sub	r0, fp, #176	; 0xb0
   5abe8:	ldr	r0, [r0, r2]
   5abec:	mla	r7, r0, r3, r7
   5abf0:	mul	r0, r0, r3
   5abf4:	b	5ab84 <GetDataSlab+0x26a28>
   5abf8:	ldr	r0, [sp, #76]	; 0x4c
   5abfc:	ldr	r3, [fp, #20]
   5ac00:	cmp	r0, #1
   5ac04:	ldr	r0, [sp, #60]	; 0x3c
   5ac08:	blt	5b69c <GetDataSlab+0x27540>
   5ac0c:	ldr	r2, [sp, #92]	; 0x5c
   5ac10:	mov	r7, r3
   5ac14:	ldr	r3, [sp, #72]	; 0x48
   5ac18:	lsl	r9, r5, #3
   5ac1c:	lsl	sl, r5, #4
   5ac20:	ldr	r6, [r2], #4
   5ac24:	mls	r0, r3, r5, r0
   5ac28:	str	r2, [sp, #92]	; 0x5c
   5ac2c:	sub	r0, r0, r6
   5ac30:	str	r6, [sp, #60]	; 0x3c
   5ac34:	str	r0, [sp, #56]	; 0x38
   5ac38:	sub	r0, fp, #136	; 0x88
   5ac3c:	orr	r4, r0, #4
   5ac40:	add	r0, r7, #4
   5ac44:	str	r0, [sp, #84]	; 0x54
   5ac48:	sub	r0, fp, #176	; 0xb0
   5ac4c:	orr	r0, r0, #4
   5ac50:	str	r0, [sp, #80]	; 0x50
   5ac54:	ldr	r0, [fp, #24]
   5ac58:	sub	r0, r0, #1
   5ac5c:	str	r0, [sp, #40]	; 0x28
   5ac60:	sub	r0, fp, #96	; 0x60
   5ac64:	orr	r0, r0, #4
   5ac68:	str	r0, [sp, #36]	; 0x24
   5ac6c:	mla	r0, r3, r5, r6
   5ac70:	str	r0, [sp, #48]	; 0x30
   5ac74:	and	r0, r3, #1
   5ac78:	sub	lr, r3, r0
   5ac7c:	str	r0, [sp, #44]	; 0x2c
   5ac80:	lsl	r0, r3, #1
   5ac84:	str	r0, [sp, #52]	; 0x34
   5ac88:	ldr	r0, [sp, #88]	; 0x58
   5ac8c:	add	r0, r0, #2
   5ac90:	str	r0, [sp, #68]	; 0x44
   5ac94:	mov	r0, #0
   5ac98:	str	r0, [sp, #64]	; 0x40
   5ac9c:	ldr	r8, [sp, #60]	; 0x3c
   5aca0:	cmp	r3, #1
   5aca4:	add	r2, ip, r8, lsl #3
   5aca8:	bge	5ad00 <GetDataSlab+0x26ba4>
   5acac:	b	5ad64 <GetDataSlab+0x26c08>
   5acb0:	ldr	r0, [sp, #36]	; 0x24
   5acb4:	ldr	r0, [r0, r2]
   5acb8:	add	ip, ip, r0, lsl #3
   5acbc:	add	r1, r0, r1
   5acc0:	ldr	r0, [sp, #52]	; 0x34
   5acc4:	ldr	r2, [sp, #68]	; 0x44
   5acc8:	ldr	r3, [sp, #72]	; 0x48
   5accc:	add	r2, r2, r0
   5acd0:	ldr	r0, [sp, #76]	; 0x4c
   5acd4:	str	r2, [sp, #68]	; 0x44
   5acd8:	ldr	r2, [sp, #64]	; 0x40
   5acdc:	add	r2, r2, r3
   5ace0:	str	r2, [sp, #64]	; 0x40
   5ace4:	cmp	r2, r0
   5ace8:	mov	r2, #0
   5acec:	bge	5b6a0 <GetDataSlab+0x27544>
   5acf0:	ldr	r8, [sp, #60]	; 0x3c
   5acf4:	cmp	r3, #1
   5acf8:	add	r2, ip, r8, lsl #3
   5acfc:	blt	5ad64 <GetDataSlab+0x26c08>
   5ad00:	mov	r3, #0
   5ad04:	beq	5ad38 <GetDataSlab+0x26bdc>
   5ad08:	ldr	r5, [sp, #68]	; 0x44
   5ad0c:	mov	r3, #0
   5ad10:	ldrh	r0, [r2]
   5ad14:	add	r3, r3, #2
   5ad18:	cmp	lr, r3
   5ad1c:	strh	r0, [r5, #-2]
   5ad20:	add	r0, r2, r9
   5ad24:	add	r2, r2, sl
   5ad28:	ldrh	r0, [r0]
   5ad2c:	strh	r0, [r5]
   5ad30:	add	r5, r5, #4
   5ad34:	bne	5ad10 <GetDataSlab+0x26bb4>
   5ad38:	ldr	r0, [sp, #44]	; 0x2c
   5ad3c:	ldr	r8, [sp, #48]	; 0x30
   5ad40:	cmp	r0, #0
   5ad44:	beq	5ad64 <GetDataSlab+0x26c08>
   5ad48:	ldr	r0, [sp, #88]	; 0x58
   5ad4c:	ldr	r7, [sp, #64]	; 0x40
   5ad50:	ldrh	r6, [r2], r9
   5ad54:	ldr	r8, [sp, #48]	; 0x30
   5ad58:	add	r0, r0, r7, lsl #1
   5ad5c:	add	r0, r0, r3, lsl #1
   5ad60:	strh	r6, [r0]
   5ad64:	ldr	r3, [sp, #56]	; 0x38
   5ad68:	add	r0, r8, r1
   5ad6c:	add	r1, r0, r3
   5ad70:	ldr	r0, [fp, #24]
   5ad74:	add	ip, r2, r3, lsl #3
   5ad78:	cmp	r0, #2
   5ad7c:	blt	5acc0 <GetDataSlab+0x26b64>
   5ad80:	ldr	r3, [sp, #40]	; 0x28
   5ad84:	ldr	r8, [sp, #92]	; 0x5c
   5ad88:	mov	r2, #0
   5ad8c:	b	5adb8 <GetDataSlab+0x26c5c>
   5ad90:	sub	r5, fp, #176	; 0xb0
   5ad94:	ldr	r7, [r8, r2]
   5ad98:	sub	r0, r0, r6
   5ad9c:	ldr	r5, [r5, r2]
   5ada0:	mla	r0, r7, r5, r0
   5ada4:	add	r1, r0, r1
   5ada8:	add	ip, ip, r0, lsl #3
   5adac:	subs	r3, r3, #1
   5adb0:	add	r2, r2, #4
   5adb4:	beq	5acc0 <GetDataSlab+0x26b64>
   5adb8:	ldr	r0, [r4, r2]
   5adbc:	ldr	r5, [sp, #84]	; 0x54
   5adc0:	add	r0, r0, #1
   5adc4:	str	r0, [r4, r2]
   5adc8:	ldr	r5, [r5, r2]
   5adcc:	sdiv	r6, r0, r5
   5add0:	mls	r0, r6, r5, r0
   5add4:	cmp	r0, #0
   5add8:	bne	5acb0 <GetDataSlab+0x26b54>
   5addc:	mov	r0, #0
   5ade0:	str	r0, [r4, r2]
   5ade4:	ldr	r0, [sp, #80]	; 0x50
   5ade8:	ldr	r0, [r0, r2]
   5adec:	sdiv	r5, r1, r0
   5adf0:	mls	r6, r5, r0, r1
   5adf4:	cmp	r6, #0
   5adf8:	bne	5ad90 <GetDataSlab+0x26c34>
   5adfc:	ldr	r0, [r8, r2]
   5ae00:	cmp	r0, #0
   5ae04:	beq	5adac <GetDataSlab+0x26c50>
   5ae08:	sub	r5, fp, #176	; 0xb0
   5ae0c:	ldr	r5, [r5, r2]
   5ae10:	mla	r1, r5, r0, r1
   5ae14:	mul	r0, r5, r0
   5ae18:	b	5ada8 <GetDataSlab+0x26c4c>
   5ae1c:	ldr	r0, [sp, #76]	; 0x4c
   5ae20:	ldr	r3, [fp, #20]
   5ae24:	cmp	r0, #1
   5ae28:	ldr	r0, [sp, #60]	; 0x3c
   5ae2c:	blt	5aed4 <GetDataSlab+0x26d78>
   5ae30:	ldr	r2, [sp, #92]	; 0x5c
   5ae34:	mov	r7, r3
   5ae38:	ldr	r3, [sp, #72]	; 0x48
   5ae3c:	lsl	r9, r5, #3
   5ae40:	lsl	sl, r5, #4
   5ae44:	ldr	r6, [r2], #4
   5ae48:	mls	r0, r3, r5, r0
   5ae4c:	str	r2, [sp, #92]	; 0x5c
   5ae50:	sub	r0, r0, r6
   5ae54:	str	r6, [sp, #60]	; 0x3c
   5ae58:	str	r0, [sp, #56]	; 0x38
   5ae5c:	sub	r0, fp, #136	; 0x88
   5ae60:	orr	r4, r0, #4
   5ae64:	add	r0, r7, #4
   5ae68:	str	r0, [sp, #84]	; 0x54
   5ae6c:	sub	r0, fp, #176	; 0xb0
   5ae70:	orr	r0, r0, #4
   5ae74:	str	r0, [sp, #80]	; 0x50
   5ae78:	ldr	r0, [fp, #24]
   5ae7c:	sub	r0, r0, #1
   5ae80:	str	r0, [sp, #40]	; 0x28
   5ae84:	sub	r0, fp, #96	; 0x60
   5ae88:	orr	r0, r0, #4
   5ae8c:	str	r0, [sp, #36]	; 0x24
   5ae90:	mla	r0, r3, r5, r6
   5ae94:	str	r0, [sp, #48]	; 0x30
   5ae98:	and	r0, r3, #1
   5ae9c:	sub	lr, r3, r0
   5aea0:	str	r0, [sp, #44]	; 0x2c
   5aea4:	lsl	r0, r3, #1
   5aea8:	str	r0, [sp, #52]	; 0x34
   5aeac:	ldr	r0, [sp, #88]	; 0x58
   5aeb0:	add	r0, r0, #2
   5aeb4:	str	r0, [sp, #68]	; 0x44
   5aeb8:	mov	r0, #0
   5aebc:	str	r0, [sp, #64]	; 0x40
   5aec0:	ldr	r8, [sp, #60]	; 0x3c
   5aec4:	cmp	r3, #1
   5aec8:	add	r2, ip, r8, lsl #3
   5aecc:	bge	5af2c <GetDataSlab+0x26dd0>
   5aed0:	b	5af90 <GetDataSlab+0x26e34>
   5aed4:	mov	r2, #0
   5aed8:	b	5b6a0 <GetDataSlab+0x27544>
   5aedc:	ldr	r0, [sp, #36]	; 0x24
   5aee0:	ldr	r0, [r0, r2]
   5aee4:	add	ip, ip, r0, lsl #3
   5aee8:	add	r1, r0, r1
   5aeec:	ldr	r0, [sp, #52]	; 0x34
   5aef0:	ldr	r2, [sp, #68]	; 0x44
   5aef4:	ldr	r3, [sp, #72]	; 0x48
   5aef8:	add	r2, r2, r0
   5aefc:	ldr	r0, [sp, #76]	; 0x4c
   5af00:	str	r2, [sp, #68]	; 0x44
   5af04:	ldr	r2, [sp, #64]	; 0x40
   5af08:	add	r2, r2, r3
   5af0c:	str	r2, [sp, #64]	; 0x40
   5af10:	cmp	r2, r0
   5af14:	mov	r2, #0
   5af18:	bge	5b6a0 <GetDataSlab+0x27544>
   5af1c:	ldr	r8, [sp, #60]	; 0x3c
   5af20:	cmp	r3, #1
   5af24:	add	r2, ip, r8, lsl #3
   5af28:	blt	5af90 <GetDataSlab+0x26e34>
   5af2c:	mov	r3, #0
   5af30:	beq	5af64 <GetDataSlab+0x26e08>
   5af34:	ldr	r5, [sp, #68]	; 0x44
   5af38:	mov	r3, #0
   5af3c:	ldrh	r0, [r2]
   5af40:	add	r3, r3, #2
   5af44:	cmp	lr, r3
   5af48:	strh	r0, [r5, #-2]
   5af4c:	add	r0, r2, r9
   5af50:	add	r2, r2, sl
   5af54:	ldrh	r0, [r0]
   5af58:	strh	r0, [r5]
   5af5c:	add	r5, r5, #4
   5af60:	bne	5af3c <GetDataSlab+0x26de0>
   5af64:	ldr	r0, [sp, #44]	; 0x2c
   5af68:	ldr	r8, [sp, #48]	; 0x30
   5af6c:	cmp	r0, #0
   5af70:	beq	5af90 <GetDataSlab+0x26e34>
   5af74:	ldr	r0, [sp, #88]	; 0x58
   5af78:	ldr	r7, [sp, #64]	; 0x40
   5af7c:	ldrh	r6, [r2], r9
   5af80:	ldr	r8, [sp, #48]	; 0x30
   5af84:	add	r0, r0, r7, lsl #1
   5af88:	add	r0, r0, r3, lsl #1
   5af8c:	strh	r6, [r0]
   5af90:	ldr	r3, [sp, #56]	; 0x38
   5af94:	add	r0, r8, r1
   5af98:	add	r1, r0, r3
   5af9c:	ldr	r0, [fp, #24]
   5afa0:	add	ip, r2, r3, lsl #3
   5afa4:	cmp	r0, #2
   5afa8:	blt	5aeec <GetDataSlab+0x26d90>
   5afac:	ldr	r3, [sp, #40]	; 0x28
   5afb0:	ldr	r8, [sp, #92]	; 0x5c
   5afb4:	mov	r2, #0
   5afb8:	b	5afe4 <GetDataSlab+0x26e88>
   5afbc:	sub	r5, fp, #176	; 0xb0
   5afc0:	ldr	r7, [r8, r2]
   5afc4:	sub	r0, r0, r6
   5afc8:	ldr	r5, [r5, r2]
   5afcc:	mla	r0, r7, r5, r0
   5afd0:	add	r1, r0, r1
   5afd4:	add	ip, ip, r0, lsl #3
   5afd8:	subs	r3, r3, #1
   5afdc:	add	r2, r2, #4
   5afe0:	beq	5aeec <GetDataSlab+0x26d90>
   5afe4:	ldr	r0, [r4, r2]
   5afe8:	ldr	r5, [sp, #84]	; 0x54
   5afec:	add	r0, r0, #1
   5aff0:	str	r0, [r4, r2]
   5aff4:	ldr	r5, [r5, r2]
   5aff8:	sdiv	r6, r0, r5
   5affc:	mls	r0, r6, r5, r0
   5b000:	cmp	r0, #0
   5b004:	bne	5aedc <GetDataSlab+0x26d80>
   5b008:	mov	r0, #0
   5b00c:	str	r0, [r4, r2]
   5b010:	ldr	r0, [sp, #80]	; 0x50
   5b014:	ldr	r0, [r0, r2]
   5b018:	sdiv	r5, r1, r0
   5b01c:	mls	r6, r5, r0, r1
   5b020:	cmp	r6, #0
   5b024:	bne	5afbc <GetDataSlab+0x26e60>
   5b028:	ldr	r0, [r8, r2]
   5b02c:	cmp	r0, #0
   5b030:	beq	5afd8 <GetDataSlab+0x26e7c>
   5b034:	sub	r5, fp, #176	; 0xb0
   5b038:	ldr	r5, [r5, r2]
   5b03c:	mla	r1, r5, r0, r1
   5b040:	mul	r0, r5, r0
   5b044:	b	5afd4 <GetDataSlab+0x26e78>
   5b048:	ldr	r0, [sp, #76]	; 0x4c
   5b04c:	ldr	r2, [fp, #20]
   5b050:	cmp	r0, #1
   5b054:	sub	r0, fp, #176	; 0xb0
   5b058:	blt	5b69c <GetDataSlab+0x27540>
   5b05c:	orr	r0, r0, #4
   5b060:	ldr	lr, [fp, #12]
   5b064:	mov	r3, r8
   5b068:	sub	r6, fp, #136	; 0x88
   5b06c:	add	r2, r2, #4
   5b070:	str	r0, [sp, #80]	; 0x50
   5b074:	ldr	r0, [fp, #24]
   5b078:	orr	r8, r6, #4
   5b07c:	str	r2, [sp, #84]	; 0x54
   5b080:	sub	r0, r0, #1
   5b084:	str	r0, [sp, #60]	; 0x3c
   5b088:	orr	r0, r3, #4
   5b08c:	str	r0, [sp, #56]	; 0x38
   5b090:	ldr	r0, [lr], #4
   5b094:	str	r0, [sp, #64]	; 0x40
   5b098:	mov	r0, #0
   5b09c:	str	r0, [sp, #68]	; 0x44
   5b0a0:	b	5b0d4 <GetDataSlab+0x26f78>
   5b0a4:	ldr	r0, [sp, #56]	; 0x38
   5b0a8:	ldr	r0, [r0, r2]
   5b0ac:	add	sl, sl, r0, lsl #3
   5b0b0:	add	r7, r0, r7
   5b0b4:	ldr	r3, [sp, #68]	; 0x44
   5b0b8:	ldr	r0, [sp, #76]	; 0x4c
   5b0bc:	mov	r2, #0
   5b0c0:	str	r6, [sp, #72]	; 0x48
   5b0c4:	add	r3, r1, r3
   5b0c8:	cmp	r3, r0
   5b0cc:	str	r3, [sp, #68]	; 0x44
   5b0d0:	bge	5b6a0 <GetDataSlab+0x27544>
   5b0d4:	ldr	r0, [sp, #64]	; 0x40
   5b0d8:	cmp	r1, #1
   5b0dc:	add	r2, r0, r7
   5b0e0:	add	r7, sl, r0, lsl #3
   5b0e4:	blt	5b138 <GetDataSlab+0x26fdc>
   5b0e8:	ldr	r0, [sp, #88]	; 0x58
   5b0ec:	ldr	r1, [sp, #68]	; 0x44
   5b0f0:	ldr	ip, [fp, #8]
   5b0f4:	ldr	r6, [fp, #16]
   5b0f8:	mov	r3, #0
   5b0fc:	add	r4, r0, r1, lsl #2
   5b100:	ldr	r0, [fp, #20]
   5b104:	ldr	r1, [r7]
   5b108:	str	r1, [r4, r3, lsl #2]
   5b10c:	add	r3, r3, #1
   5b110:	ldr	r5, [r6]
   5b114:	ldr	r1, [r0]
   5b118:	add	r7, r7, r5, lsl #3
   5b11c:	add	r2, r5, r2
   5b120:	cmp	r3, r1
   5b124:	blt	5b104 <GetDataSlab+0x26fa8>
   5b128:	ldr	r0, [fp, #12]
   5b12c:	ldr	r6, [ip]
   5b130:	ldr	r0, [r0]
   5b134:	b	5b13c <GetDataSlab+0x26fe0>
   5b138:	ldr	r6, [sp, #72]	; 0x48
   5b13c:	mls	r3, r5, r1, r6
   5b140:	str	r0, [sp, #64]	; 0x40
   5b144:	sub	r3, r3, r0
   5b148:	ldr	r0, [fp, #24]
   5b14c:	add	sl, r7, r3, lsl #3
   5b150:	add	r7, r3, r2
   5b154:	cmp	r0, #2
   5b158:	blt	5b0b4 <GetDataSlab+0x26f58>
   5b15c:	ldr	r9, [sp, #60]	; 0x3c
   5b160:	mov	r2, #0
   5b164:	b	5b190 <GetDataSlab+0x27034>
   5b168:	sub	r0, fp, #176	; 0xb0
   5b16c:	ldr	r4, [lr, r2]
   5b170:	sub	r3, r3, ip
   5b174:	ldr	r0, [r0, r2]
   5b178:	mla	r0, r4, r0, r3
   5b17c:	add	r7, r0, r7
   5b180:	add	sl, sl, r0, lsl #3
   5b184:	subs	r9, r9, #1
   5b188:	add	r2, r2, #4
   5b18c:	beq	5b0b4 <GetDataSlab+0x26f58>
   5b190:	ldr	r3, [r8, r2]
   5b194:	ldr	r0, [sp, #84]	; 0x54
   5b198:	add	r3, r3, #1
   5b19c:	str	r3, [r8, r2]
   5b1a0:	ldr	r0, [r0, r2]
   5b1a4:	sdiv	r4, r3, r0
   5b1a8:	mls	r0, r4, r0, r3
   5b1ac:	cmp	r0, #0
   5b1b0:	bne	5b0a4 <GetDataSlab+0x26f48>
   5b1b4:	mov	r0, #0
   5b1b8:	str	r0, [r8, r2]
   5b1bc:	ldr	r0, [sp, #80]	; 0x50
   5b1c0:	ldr	r3, [r0, r2]
   5b1c4:	sdiv	r0, r7, r3
   5b1c8:	mls	ip, r0, r3, r7
   5b1cc:	cmp	ip, #0
   5b1d0:	bne	5b168 <GetDataSlab+0x2700c>
   5b1d4:	ldr	r3, [lr, r2]
   5b1d8:	cmp	r3, #0
   5b1dc:	beq	5b184 <GetDataSlab+0x27028>
   5b1e0:	sub	r0, fp, #176	; 0xb0
   5b1e4:	ldr	r0, [r0, r2]
   5b1e8:	mla	r7, r0, r3, r7
   5b1ec:	mul	r0, r0, r3
   5b1f0:	b	5b180 <GetDataSlab+0x27024>
   5b1f4:	ldr	r0, [sp, #76]	; 0x4c
   5b1f8:	ldr	r2, [fp, #20]
   5b1fc:	cmp	r0, #1
   5b200:	sub	r0, fp, #176	; 0xb0
   5b204:	blt	5b69c <GetDataSlab+0x27540>
   5b208:	orr	r0, r0, #4
   5b20c:	ldr	lr, [fp, #12]
   5b210:	mov	r3, r8
   5b214:	sub	r6, fp, #136	; 0x88
   5b218:	add	r2, r2, #4
   5b21c:	str	r0, [sp, #80]	; 0x50
   5b220:	ldr	r0, [fp, #24]
   5b224:	orr	r8, r6, #4
   5b228:	str	r2, [sp, #84]	; 0x54
   5b22c:	sub	r0, r0, #1
   5b230:	str	r0, [sp, #60]	; 0x3c
   5b234:	orr	r0, r3, #4
   5b238:	str	r0, [sp, #56]	; 0x38
   5b23c:	ldr	r0, [lr], #4
   5b240:	str	r0, [sp, #64]	; 0x40
   5b244:	mov	r0, #0
   5b248:	str	r0, [sp, #68]	; 0x44
   5b24c:	b	5b280 <GetDataSlab+0x27124>
   5b250:	ldr	r0, [sp, #56]	; 0x38
   5b254:	ldr	r0, [r0, r2]
   5b258:	add	sl, sl, r0, lsl #3
   5b25c:	add	r7, r0, r7
   5b260:	ldr	r2, [sp, #68]	; 0x44
   5b264:	ldr	r0, [sp, #76]	; 0x4c
   5b268:	str	r6, [sp, #72]	; 0x48
   5b26c:	add	r2, r1, r2
   5b270:	str	r2, [sp, #68]	; 0x44
   5b274:	cmp	r2, r0
   5b278:	mov	r2, #0
   5b27c:	bge	5b6a0 <GetDataSlab+0x27544>
   5b280:	ldr	r0, [sp, #64]	; 0x40
   5b284:	cmp	r1, #1
   5b288:	add	r2, r0, r7
   5b28c:	add	r7, sl, r0, lsl #3
   5b290:	blt	5b2e4 <GetDataSlab+0x27188>
   5b294:	ldr	r0, [sp, #88]	; 0x58
   5b298:	ldr	r1, [sp, #68]	; 0x44
   5b29c:	ldr	ip, [fp, #8]
   5b2a0:	ldr	r6, [fp, #16]
   5b2a4:	mov	r3, #0
   5b2a8:	add	r4, r0, r1, lsl #2
   5b2ac:	ldr	r0, [fp, #20]
   5b2b0:	ldr	r1, [r7]
   5b2b4:	str	r1, [r4, r3, lsl #2]
   5b2b8:	add	r3, r3, #1
   5b2bc:	ldr	r5, [r6]
   5b2c0:	ldr	r1, [r0]
   5b2c4:	add	r7, r7, r5, lsl #3
   5b2c8:	add	r2, r5, r2
   5b2cc:	cmp	r3, r1
   5b2d0:	blt	5b2b0 <GetDataSlab+0x27154>
   5b2d4:	ldr	r0, [fp, #12]
   5b2d8:	ldr	r6, [ip]
   5b2dc:	ldr	r0, [r0]
   5b2e0:	b	5b2e8 <GetDataSlab+0x2718c>
   5b2e4:	ldr	r6, [sp, #72]	; 0x48
   5b2e8:	mls	r3, r5, r1, r6
   5b2ec:	str	r0, [sp, #64]	; 0x40
   5b2f0:	sub	r3, r3, r0
   5b2f4:	ldr	r0, [fp, #24]
   5b2f8:	add	sl, r7, r3, lsl #3
   5b2fc:	add	r7, r3, r2
   5b300:	cmp	r0, #2
   5b304:	blt	5b260 <GetDataSlab+0x27104>
   5b308:	ldr	r9, [sp, #60]	; 0x3c
   5b30c:	mov	r2, #0
   5b310:	b	5b33c <GetDataSlab+0x271e0>
   5b314:	sub	r0, fp, #176	; 0xb0
   5b318:	ldr	r4, [lr, r2]
   5b31c:	sub	r3, r3, ip
   5b320:	ldr	r0, [r0, r2]
   5b324:	mla	r0, r4, r0, r3
   5b328:	add	r7, r0, r7
   5b32c:	add	sl, sl, r0, lsl #3
   5b330:	subs	r9, r9, #1
   5b334:	add	r2, r2, #4
   5b338:	beq	5b260 <GetDataSlab+0x27104>
   5b33c:	ldr	r3, [r8, r2]
   5b340:	ldr	r0, [sp, #84]	; 0x54
   5b344:	add	r3, r3, #1
   5b348:	str	r3, [r8, r2]
   5b34c:	ldr	r0, [r0, r2]
   5b350:	sdiv	r4, r3, r0
   5b354:	mls	r0, r4, r0, r3
   5b358:	cmp	r0, #0
   5b35c:	bne	5b250 <GetDataSlab+0x270f4>
   5b360:	mov	r0, #0
   5b364:	str	r0, [r8, r2]
   5b368:	ldr	r0, [sp, #80]	; 0x50
   5b36c:	ldr	r3, [r0, r2]
   5b370:	sdiv	r0, r7, r3
   5b374:	mls	ip, r0, r3, r7
   5b378:	cmp	ip, #0
   5b37c:	bne	5b314 <GetDataSlab+0x271b8>
   5b380:	ldr	r3, [lr, r2]
   5b384:	cmp	r3, #0
   5b388:	beq	5b330 <GetDataSlab+0x271d4>
   5b38c:	sub	r0, fp, #176	; 0xb0
   5b390:	ldr	r0, [r0, r2]
   5b394:	mla	r7, r0, r3, r7
   5b398:	mul	r0, r0, r3
   5b39c:	b	5b32c <GetDataSlab+0x271d0>
   5b3a0:	ldr	r0, [sp, #76]	; 0x4c
   5b3a4:	ldr	r1, [fp, #12]
   5b3a8:	ldr	r3, [sp, #72]	; 0x48
   5b3ac:	cmp	r0, #1
   5b3b0:	ldr	r0, [sp, #40]	; 0x28
   5b3b4:	blt	5b69c <GetDataSlab+0x27540>
   5b3b8:	ldr	r6, [sp, #44]	; 0x2c
   5b3bc:	mov	r2, r1
   5b3c0:	mov	r1, r4
   5b3c4:	ldr	lr, [r2], #4
   5b3c8:	str	r2, [sp, #92]	; 0x5c
   5b3cc:	mls	r0, r3, r6, r0
   5b3d0:	lsl	r9, r6, #3
   5b3d4:	lsl	r8, r6, #4
   5b3d8:	sub	r0, r0, lr
   5b3dc:	str	r0, [sp, #60]	; 0x3c
   5b3e0:	sub	r0, fp, #136	; 0x88
   5b3e4:	orr	r4, r0, #4
   5b3e8:	ldr	r0, [fp, #20]
   5b3ec:	add	r0, r0, #4
   5b3f0:	str	r0, [sp, #84]	; 0x54
   5b3f4:	orr	r0, r7, #4
   5b3f8:	str	r0, [sp, #80]	; 0x50
   5b3fc:	ldr	r0, [fp, #24]
   5b400:	sub	r0, r0, #1
   5b404:	str	r0, [sp, #40]	; 0x28
   5b408:	sub	r0, fp, #96	; 0x60
   5b40c:	orr	r0, r0, #4
   5b410:	str	r0, [sp, #36]	; 0x24
   5b414:	mla	r0, r3, r6, lr
   5b418:	str	r0, [sp, #52]	; 0x34
   5b41c:	and	r0, r3, #1
   5b420:	sub	ip, r3, r0
   5b424:	str	r0, [sp, #48]	; 0x30
   5b428:	lsl	r0, r3, #3
   5b42c:	str	r0, [sp, #56]	; 0x38
   5b430:	ldr	r0, [sp, #88]	; 0x58
   5b434:	str	r0, [sp, #68]	; 0x44
   5b438:	mov	r0, #0
   5b43c:	str	r0, [sp, #64]	; 0x40
   5b440:	add	r5, r1, lr, lsl #3
   5b444:	cmp	r3, #1
   5b448:	bge	5b49c <GetDataSlab+0x27340>
   5b44c:	b	5b4b0 <GetDataSlab+0x27354>
   5b450:	ldr	r0, [sp, #36]	; 0x24
   5b454:	ldr	r0, [r0, r2]
   5b458:	add	r1, r1, r0, lsl #3
   5b45c:	add	sl, r0, sl
   5b460:	ldr	r0, [sp, #56]	; 0x38
   5b464:	ldr	r2, [sp, #68]	; 0x44
   5b468:	ldr	r3, [sp, #72]	; 0x48
   5b46c:	ldr	r5, [sp, #64]	; 0x40
   5b470:	add	r2, r2, r0
   5b474:	ldr	r0, [sp, #76]	; 0x4c
   5b478:	add	r5, r5, r3
   5b47c:	str	r2, [sp, #68]	; 0x44
   5b480:	mov	r2, #0
   5b484:	str	r5, [sp, #64]	; 0x40
   5b488:	cmp	r5, r0
   5b48c:	bge	5b6a0 <GetDataSlab+0x27544>
   5b490:	add	r5, r1, lr, lsl #3
   5b494:	cmp	r3, #1
   5b498:	blt	5b4b0 <GetDataSlab+0x27354>
   5b49c:	mov	r1, lr
   5b4a0:	mov	r2, #0
   5b4a4:	bne	5b4bc <GetDataSlab+0x27360>
   5b4a8:	mov	r3, r5
   5b4ac:	b	5b4f4 <GetDataSlab+0x27398>
   5b4b0:	mov	r6, lr
   5b4b4:	mov	r3, r5
   5b4b8:	b	5b530 <GetDataSlab+0x273d4>
   5b4bc:	ldr	lr, [sp, #68]	; 0x44
   5b4c0:	mov	r2, #0
   5b4c4:	ldm	r5, {r0, r3}
   5b4c8:	add	r2, r2, #2
   5b4cc:	cmp	ip, r2
   5b4d0:	stm	lr, {r0, r3}
   5b4d4:	add	r3, r5, r8
   5b4d8:	ldr	r0, [r5, r9]!
   5b4dc:	ldr	r5, [r5, #4]
   5b4e0:	str	r0, [lr, #8]
   5b4e4:	str	r5, [lr, #12]
   5b4e8:	add	lr, lr, #16
   5b4ec:	mov	r5, r3
   5b4f0:	bne	5b4c4 <GetDataSlab+0x27368>
   5b4f4:	ldr	r0, [sp, #48]	; 0x30
   5b4f8:	ldr	r6, [sp, #52]	; 0x34
   5b4fc:	mov	lr, r1
   5b500:	cmp	r0, #0
   5b504:	beq	5b530 <GetDataSlab+0x273d4>
   5b508:	ldr	r0, [sp, #88]	; 0x58
   5b50c:	ldr	r1, [sp, #64]	; 0x40
   5b510:	ldr	r6, [r3]
   5b514:	ldr	r5, [r3, #4]
   5b518:	add	r0, r0, r1, lsl #3
   5b51c:	str	r6, [r0, r2, lsl #3]!
   5b520:	ldr	r6, [sp, #52]	; 0x34
   5b524:	str	r5, [r0, #4]
   5b528:	ldr	r0, [sp, #44]	; 0x2c
   5b52c:	add	r3, r3, r0, lsl #3
   5b530:	ldr	r2, [sp, #60]	; 0x3c
   5b534:	add	r0, r6, sl
   5b538:	add	sl, r0, r2
   5b53c:	ldr	r0, [fp, #24]
   5b540:	add	r1, r3, r2, lsl #3
   5b544:	cmp	r0, #2
   5b548:	blt	5b460 <GetDataSlab+0x27304>
   5b54c:	ldr	r3, [sp, #40]	; 0x28
   5b550:	mov	r2, #0
   5b554:	b	5b584 <GetDataSlab+0x27428>
   5b558:	sub	r7, fp, #176	; 0xb0
   5b55c:	sub	r0, r6, r0
   5b560:	ldr	r5, [r7, r2]
   5b564:	ldr	r7, [sp, #92]	; 0x5c
   5b568:	ldr	r7, [r7, r2]
   5b56c:	mla	r0, r7, r5, r0
   5b570:	add	sl, r0, sl
   5b574:	add	r1, r1, r0, lsl #3
   5b578:	subs	r3, r3, #1
   5b57c:	add	r2, r2, #4
   5b580:	beq	5b460 <GetDataSlab+0x27304>
   5b584:	ldr	r0, [r4, r2]
   5b588:	ldr	r5, [sp, #84]	; 0x54
   5b58c:	add	r0, r0, #1
   5b590:	str	r0, [r4, r2]
   5b594:	ldr	r6, [r5, r2]
   5b598:	sdiv	r5, r0, r6
   5b59c:	mls	r0, r5, r6, r0
   5b5a0:	cmp	r0, #0
   5b5a4:	bne	5b450 <GetDataSlab+0x272f4>
   5b5a8:	mov	r0, #0
   5b5ac:	str	r0, [r4, r2]
   5b5b0:	ldr	r0, [sp, #80]	; 0x50
   5b5b4:	ldr	r6, [r0, r2]
   5b5b8:	sdiv	r0, sl, r6
   5b5bc:	mls	r0, r0, r6, sl
   5b5c0:	cmp	r0, #0
   5b5c4:	bne	5b558 <GetDataSlab+0x273fc>
   5b5c8:	ldr	r0, [sp, #92]	; 0x5c
   5b5cc:	ldr	r0, [r0, r2]
   5b5d0:	cmp	r0, #0
   5b5d4:	beq	5b578 <GetDataSlab+0x2741c>
   5b5d8:	sub	r7, fp, #176	; 0xb0
   5b5dc:	ldr	r7, [r7, r2]
   5b5e0:	mla	sl, r7, r0, sl
   5b5e4:	mul	r0, r7, r0
   5b5e8:	b	5b574 <GetDataSlab+0x27418>
   5b5ec:	ldr	r0, [sp, #76]	; 0x4c
   5b5f0:	ldr	r1, [fp, #12]
   5b5f4:	ldr	r3, [sp, #72]	; 0x48
   5b5f8:	cmp	r0, #1
   5b5fc:	ldr	r0, [sp, #40]	; 0x28
   5b600:	blt	5b69c <GetDataSlab+0x27540>
   5b604:	ldr	r6, [sp, #44]	; 0x2c
   5b608:	mov	r2, r1
   5b60c:	mov	r1, r4
   5b610:	ldr	lr, [r2], #4
   5b614:	str	r2, [sp, #92]	; 0x5c
   5b618:	mls	r0, r3, r6, r0
   5b61c:	lsl	r9, r6, #3
   5b620:	lsl	r8, r6, #4
   5b624:	sub	r0, r0, lr
   5b628:	str	r0, [sp, #60]	; 0x3c
   5b62c:	sub	r0, fp, #136	; 0x88
   5b630:	orr	r4, r0, #4
   5b634:	ldr	r0, [fp, #20]
   5b638:	add	r0, r0, #4
   5b63c:	str	r0, [sp, #84]	; 0x54
   5b640:	orr	r0, r7, #4
   5b644:	str	r0, [sp, #80]	; 0x50
   5b648:	ldr	r0, [fp, #24]
   5b64c:	sub	r0, r0, #1
   5b650:	str	r0, [sp, #40]	; 0x28
   5b654:	sub	r0, fp, #96	; 0x60
   5b658:	orr	r0, r0, #4
   5b65c:	str	r0, [sp, #36]	; 0x24
   5b660:	mla	r0, r3, r6, lr
   5b664:	str	r0, [sp, #52]	; 0x34
   5b668:	and	r0, r3, #1
   5b66c:	sub	ip, r3, r0
   5b670:	str	r0, [sp, #48]	; 0x30
   5b674:	lsl	r0, r3, #3
   5b678:	str	r0, [sp, #56]	; 0x38
   5b67c:	ldr	r0, [sp, #88]	; 0x58
   5b680:	str	r0, [sp, #68]	; 0x44
   5b684:	mov	r0, #0
   5b688:	str	r0, [sp, #64]	; 0x40
   5b68c:	add	r5, r1, lr, lsl #3
   5b690:	cmp	r3, #1
   5b694:	bge	5b700 <GetDataSlab+0x275a4>
   5b698:	b	5b714 <GetDataSlab+0x275b8>
   5b69c:	mov	r2, #0
   5b6a0:	mov	r0, r2
   5b6a4:	sub	sp, fp, #48	; 0x30
   5b6a8:	vpop	{d8-d9}
   5b6ac:	add	sp, sp, #4
   5b6b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5b6b4:	ldr	r0, [sp, #36]	; 0x24
   5b6b8:	ldr	r0, [r0, r2]
   5b6bc:	add	r1, r1, r0, lsl #3
   5b6c0:	add	sl, r0, sl
   5b6c4:	ldr	r0, [sp, #56]	; 0x38
   5b6c8:	ldr	r2, [sp, #68]	; 0x44
   5b6cc:	ldr	r3, [sp, #72]	; 0x48
   5b6d0:	ldr	r5, [sp, #64]	; 0x40
   5b6d4:	add	r2, r2, r0
   5b6d8:	ldr	r0, [sp, #76]	; 0x4c
   5b6dc:	add	r5, r5, r3
   5b6e0:	str	r2, [sp, #68]	; 0x44
   5b6e4:	mov	r2, #0
   5b6e8:	str	r5, [sp, #64]	; 0x40
   5b6ec:	cmp	r5, r0
   5b6f0:	bge	5b6a0 <GetDataSlab+0x27544>
   5b6f4:	add	r5, r1, lr, lsl #3
   5b6f8:	cmp	r3, #1
   5b6fc:	blt	5b714 <GetDataSlab+0x275b8>
   5b700:	mov	r1, lr
   5b704:	mov	r2, #0
   5b708:	bne	5b720 <GetDataSlab+0x275c4>
   5b70c:	mov	r3, r5
   5b710:	b	5b758 <GetDataSlab+0x275fc>
   5b714:	mov	r6, lr
   5b718:	mov	r3, r5
   5b71c:	b	5b794 <GetDataSlab+0x27638>
   5b720:	ldr	lr, [sp, #68]	; 0x44
   5b724:	mov	r2, #0
   5b728:	ldm	r5, {r0, r3}
   5b72c:	add	r2, r2, #2
   5b730:	cmp	ip, r2
   5b734:	stm	lr, {r0, r3}
   5b738:	add	r3, r5, r8
   5b73c:	ldr	r0, [r5, r9]!
   5b740:	ldr	r5, [r5, #4]
   5b744:	str	r0, [lr, #8]
   5b748:	str	r5, [lr, #12]
   5b74c:	add	lr, lr, #16
   5b750:	mov	r5, r3
   5b754:	bne	5b728 <GetDataSlab+0x275cc>
   5b758:	ldr	r0, [sp, #48]	; 0x30
   5b75c:	ldr	r6, [sp, #52]	; 0x34
   5b760:	mov	lr, r1
   5b764:	cmp	r0, #0
   5b768:	beq	5b794 <GetDataSlab+0x27638>
   5b76c:	ldr	r0, [sp, #88]	; 0x58
   5b770:	ldr	r1, [sp, #64]	; 0x40
   5b774:	ldr	r6, [r3]
   5b778:	ldr	r5, [r3, #4]
   5b77c:	add	r0, r0, r1, lsl #3
   5b780:	str	r6, [r0, r2, lsl #3]!
   5b784:	ldr	r6, [sp, #52]	; 0x34
   5b788:	str	r5, [r0, #4]
   5b78c:	ldr	r0, [sp, #44]	; 0x2c
   5b790:	add	r3, r3, r0, lsl #3
   5b794:	ldr	r2, [sp, #60]	; 0x3c
   5b798:	add	r0, r6, sl
   5b79c:	add	sl, r0, r2
   5b7a0:	ldr	r0, [fp, #24]
   5b7a4:	add	r1, r3, r2, lsl #3
   5b7a8:	cmp	r0, #2
   5b7ac:	blt	5b6c4 <GetDataSlab+0x27568>
   5b7b0:	ldr	r3, [sp, #40]	; 0x28
   5b7b4:	mov	r2, #0
   5b7b8:	b	5b7e8 <GetDataSlab+0x2768c>
   5b7bc:	sub	r7, fp, #176	; 0xb0
   5b7c0:	sub	r0, r6, r0
   5b7c4:	ldr	r5, [r7, r2]
   5b7c8:	ldr	r7, [sp, #92]	; 0x5c
   5b7cc:	ldr	r7, [r7, r2]
   5b7d0:	mla	r0, r7, r5, r0
   5b7d4:	add	sl, r0, sl
   5b7d8:	add	r1, r1, r0, lsl #3
   5b7dc:	subs	r3, r3, #1
   5b7e0:	add	r2, r2, #4
   5b7e4:	beq	5b6c4 <GetDataSlab+0x27568>
   5b7e8:	ldr	r0, [r4, r2]
   5b7ec:	ldr	r5, [sp, #84]	; 0x54
   5b7f0:	add	r0, r0, #1
   5b7f4:	str	r0, [r4, r2]
   5b7f8:	ldr	r6, [r5, r2]
   5b7fc:	sdiv	r5, r0, r6
   5b800:	mls	r0, r5, r6, r0
   5b804:	cmp	r0, #0
   5b808:	bne	5b6b4 <GetDataSlab+0x27558>
   5b80c:	mov	r0, #0
   5b810:	str	r0, [r4, r2]
   5b814:	ldr	r0, [sp, #80]	; 0x50
   5b818:	ldr	r6, [r0, r2]
   5b81c:	sdiv	r0, sl, r6
   5b820:	mls	r0, r0, r6, sl
   5b824:	cmp	r0, #0
   5b828:	bne	5b7bc <GetDataSlab+0x27660>
   5b82c:	ldr	r0, [sp, #92]	; 0x5c
   5b830:	ldr	r0, [r0, r2]
   5b834:	cmp	r0, #0
   5b838:	beq	5b7dc <GetDataSlab+0x27680>
   5b83c:	sub	r7, fp, #176	; 0xb0
   5b840:	ldr	r7, [r7, r2]
   5b844:	mla	sl, r7, r0, sl
   5b848:	mul	r0, r7, r0
   5b84c:	b	5b7d8 <GetDataSlab+0x2767c>
   5b850:	cmp	r3, #1
   5b854:	blt	35058 <GetDataSlab+0xefc>
   5b858:	cmp	r5, #1
   5b85c:	mov	r0, #0
   5b860:	blt	5b6a4 <GetDataSlab+0x27548>
   5b864:	ldr	r0, [sp, #72]	; 0x48
   5b868:	ldr	r2, [sp, #60]	; 0x3c
   5b86c:	ldr	r3, [sp, #56]	; 0x38
   5b870:	cmp	r5, #1
   5b874:	mov	r9, #32
   5b878:	mul	r0, r0, r8
   5b87c:	mla	r1, r3, r8, r2
   5b880:	str	r0, [sp, #72]	; 0x48
   5b884:	ldr	r0, [sp, #80]	; 0x50
   5b888:	str	r1, [sp, #52]	; 0x34
   5b88c:	add	r0, r0, r1
   5b890:	mov	r1, #1
   5b894:	str	r0, [sp, #92]	; 0x5c
   5b898:	sub	r0, r5, #2
   5b89c:	add	r1, r1, r0, lsr #1
   5b8a0:	lsr	r0, r0, #1
   5b8a4:	str	r0, [sp, #40]	; 0x28
   5b8a8:	and	r7, r1, #1
   5b8ac:	sub	r1, r1, r7
   5b8b0:	str	r7, [sp, #48]	; 0x30
   5b8b4:	str	r1, [sp, #36]	; 0x24
   5b8b8:	add	r1, r5, r2
   5b8bc:	mov	r2, #0
   5b8c0:	mla	r1, r3, r8, r1
   5b8c4:	str	r2, [sp, #84]	; 0x54
   5b8c8:	mov	r2, #0
   5b8cc:	movwhi	r2, #1
   5b8d0:	str	r1, [sp, #56]	; 0x38
   5b8d4:	ldr	r1, [sp, #68]	; 0x44
   5b8d8:	mov	r3, r1
   5b8dc:	sub	r1, r1, #1
   5b8e0:	clz	r1, r1
   5b8e4:	lsl	r4, r3, #1
   5b8e8:	lsr	r1, r1, #5
   5b8ec:	and	r1, r2, r1
   5b8f0:	str	r1, [sp, #64]	; 0x40
   5b8f4:	lsl	r1, r3, #2
   5b8f8:	str	r1, [sp, #32]
   5b8fc:	and	r1, r5, #1
   5b900:	str	r1, [sp, #60]	; 0x3c
   5b904:	bic	r1, r5, #1
   5b908:	str	r1, [sp, #44]	; 0x2c
   5b90c:	ldr	r0, [sp, #64]	; 0x40
   5b910:	cmp	r0, #0
   5b914:	bne	5b948 <GetDataSlab+0x277ec>
   5b918:	b	5b9dc <GetDataSlab+0x27880>
   5b91c:	ldr	r0, [sp, #72]	; 0x48
   5b920:	add	r8, r8, #1
   5b924:	cmp	r8, lr
   5b928:	str	r8, [sp, #84]	; 0x54
   5b92c:	add	ip, ip, r0
   5b930:	mov	r0, #0
   5b934:	str	ip, [sp, #92]	; 0x5c
   5b938:	beq	5b6a4 <GetDataSlab+0x27548>
   5b93c:	ldr	r0, [sp, #64]	; 0x40
   5b940:	cmp	r0, #0
   5b944:	beq	5b9dc <GetDataSlab+0x27880>
   5b948:	ldr	r0, [sp, #72]	; 0x48
   5b94c:	ldr	r8, [sp, #84]	; 0x54
   5b950:	ldr	r1, [sp, #56]	; 0x38
   5b954:	ldr	r3, [sp, #80]	; 0x50
   5b958:	ldr	r2, [sp, #88]	; 0x58
   5b95c:	ldr	lr, [sp, #76]	; 0x4c
   5b960:	ldr	ip, [sp, #92]	; 0x5c
   5b964:	add	r6, sp, #136	; 0x88
   5b968:	mul	r0, r0, r8
   5b96c:	add	r1, r1, r0
   5b970:	add	r1, r3, r1
   5b974:	cmp	r1, r2
   5b978:	bls	5ba5c <GetDataSlab+0x27900>
   5b97c:	add	r1, r2, r5, lsl #3
   5b980:	ldr	r2, [sp, #52]	; 0x34
   5b984:	add	r0, r2, r0
   5b988:	add	r0, r3, r0
   5b98c:	cmp	r0, r1
   5b990:	bcs	5ba5c <GetDataSlab+0x27900>
   5b994:	mov	r0, #0
   5b998:	ldr	r1, [sp, #60]	; 0x3c
   5b99c:	cmp	r1, #0
   5b9a0:	beq	5b9f8 <GetDataSlab+0x2789c>
   5b9a4:	ldr	r1, [sp, #68]	; 0x44
   5b9a8:	orr	r3, r0, #1
   5b9ac:	mul	r1, r0, r1
   5b9b0:	ldrb	r1, [ip, r1]
   5b9b4:	vmov	s0, r1
   5b9b8:	vcvt.f64.u32	d16, s0
   5b9bc:	ldr	r1, [sp, #88]	; 0x58
   5b9c0:	vstr	d16, [r1]
   5b9c4:	add	r1, r1, #8
   5b9c8:	str	r1, [sp, #88]	; 0x58
   5b9cc:	orr	r0, r0, #1
   5b9d0:	cmp	r5, r0
   5b9d4:	bne	5ba08 <GetDataSlab+0x278ac>
   5b9d8:	b	5b91c <GetDataSlab+0x277c0>
   5b9dc:	ldr	lr, [sp, #76]	; 0x4c
   5b9e0:	ldr	ip, [sp, #92]	; 0x5c
   5b9e4:	ldr	r8, [sp, #84]	; 0x54
   5b9e8:	mov	r0, #0
   5b9ec:	ldr	r1, [sp, #60]	; 0x3c
   5b9f0:	cmp	r1, #0
   5b9f4:	bne	5b9a4 <GetDataSlab+0x27848>
   5b9f8:	mov	r3, r0
   5b9fc:	orr	r0, r0, #1
   5ba00:	cmp	r5, r0
   5ba04:	beq	5b91c <GetDataSlab+0x277c0>
   5ba08:	ldr	r6, [sp, #68]	; 0x44
   5ba0c:	add	r2, r3, #1
   5ba10:	sub	r1, r5, r3
   5ba14:	mov	r7, ip
   5ba18:	mul	r0, r6, r3
   5ba1c:	mul	r3, r6, r2
   5ba20:	ldr	r6, [sp, #88]	; 0x58
   5ba24:	ldrb	r2, [r7, r0]
   5ba28:	subs	r1, r1, #2
   5ba2c:	vmov	s0, r2
   5ba30:	vcvt.f64.u32	d16, s0
   5ba34:	vstr	d16, [r6]
   5ba38:	ldrb	r2, [r7, r3]
   5ba3c:	add	r7, r7, r4
   5ba40:	vmov	s0, r2
   5ba44:	vcvt.f64.u32	d16, s0
   5ba48:	vstr	d16, [r6, #8]
   5ba4c:	add	r6, r6, #16
   5ba50:	bne	5ba24 <GetDataSlab+0x278c8>
   5ba54:	str	r6, [sp, #88]	; 0x58
   5ba58:	b	5b91c <GetDataSlab+0x277c0>
   5ba5c:	ldr	r0, [sp, #40]	; 0x28
   5ba60:	cmp	r0, #0
   5ba64:	beq	5bae8 <GetDataSlab+0x2798c>
   5ba68:	ldr	r1, [sp, #88]	; 0x58
   5ba6c:	mov	r3, ip
   5ba70:	ldr	sl, [sp, #36]	; 0x24
   5ba74:	ldr	ip, [sp, #32]
   5ba78:	mov	r8, r6
   5ba7c:	mov	r0, #0
   5ba80:	add	r6, sp, #140	; 0x8c
   5ba84:	mov	r7, r1
   5ba88:	ldrh	lr, [r3]
   5ba8c:	add	r2, r3, r4
   5ba90:	add	r1, r1, #16
   5ba94:	add	r3, r3, ip
   5ba98:	subs	sl, sl, #2
   5ba9c:	add	r0, r0, #4
   5baa0:	strh	lr, [sp, #136]	; 0x88
   5baa4:	vld1.16	{d16[0]}, [r8 :16]
   5baa8:	vmovl.u8	q8, d16
   5baac:	vmovl.u16	q0, d16
   5bab0:	vcvt.f64.u32	d17, s1
   5bab4:	vcvt.f64.u32	d16, s0
   5bab8:	vst1.64	{d16-d17}, [r7], r9
   5babc:	ldrh	r2, [r2]
   5bac0:	strh	r2, [sp, #140]	; 0x8c
   5bac4:	vld1.16	{d16[0]}, [r6 :16]
   5bac8:	vmovl.u8	q8, d16
   5bacc:	vmovl.u16	q0, d16
   5bad0:	vcvt.f64.u32	d17, s1
   5bad4:	vcvt.f64.u32	d16, s0
   5bad8:	vst1.64	{d16-d17}, [r1]
   5badc:	mov	r1, r7
   5bae0:	bne	5ba88 <GetDataSlab+0x2792c>
   5bae4:	b	5baec <GetDataSlab+0x27990>
   5bae8:	mov	r0, #0
   5baec:	ldr	r1, [sp, #48]	; 0x30
   5baf0:	ldr	ip, [sp, #92]	; 0x5c
   5baf4:	ldr	r8, [sp, #84]	; 0x54
   5baf8:	cmp	r1, #0
   5bafc:	beq	5bb34 <GetDataSlab+0x279d8>
   5bb00:	ldr	r1, [sp, #68]	; 0x44
   5bb04:	mla	r1, r0, r1, ip
   5bb08:	ldrh	r1, [r1]
   5bb0c:	strh	r1, [sp, #132]	; 0x84
   5bb10:	add	r1, sp, #132	; 0x84
   5bb14:	vld1.16	{d16[0]}, [r1 :16]
   5bb18:	vmovl.u8	q8, d16
   5bb1c:	vmovl.u16	q0, d16
   5bb20:	vcvt.f64.u32	d17, s1
   5bb24:	vcvt.f64.u32	d16, s0
   5bb28:	ldr	r1, [sp, #88]	; 0x58
   5bb2c:	add	r0, r1, r0, lsl #3
   5bb30:	vst1.64	{d16-d17}, [r0]
   5bb34:	ldr	r1, [sp, #44]	; 0x2c
   5bb38:	ldr	r0, [sp, #88]	; 0x58
   5bb3c:	ldr	lr, [sp, #76]	; 0x4c
   5bb40:	add	r0, r0, r1, lsl #3
   5bb44:	cmp	r5, r1
   5bb48:	str	r0, [sp, #88]	; 0x58
   5bb4c:	mov	r0, r1
   5bb50:	bne	5b9ec <GetDataSlab+0x27890>
   5bb54:	b	5b91c <GetDataSlab+0x277c0>
   5bb58:	cmp	r3, #1
   5bb5c:	blt	35058 <GetDataSlab+0xefc>
   5bb60:	cmp	r5, #1
   5bb64:	mov	r0, #0
   5bb68:	blt	5b6a4 <GetDataSlab+0x27548>
   5bb6c:	ldr	r0, [sp, #60]	; 0x3c
   5bb70:	ldr	r1, [sp, #56]	; 0x38
   5bb74:	cmp	r5, #1
   5bb78:	mla	r0, r1, r8, r0
   5bb7c:	ldr	r1, [sp, #80]	; 0x50
   5bb80:	add	r0, r1, r0, lsl #1
   5bb84:	mov	r1, #1
   5bb88:	str	r0, [sp, #92]	; 0x5c
   5bb8c:	sub	r0, r5, #2
   5bb90:	add	r1, r1, r0, lsr #1
   5bb94:	lsr	r0, r0, #1
   5bb98:	str	r0, [sp, #52]	; 0x34
   5bb9c:	and	r2, r1, #1
   5bba0:	sub	r1, r1, r2
   5bba4:	str	r2, [sp, #60]	; 0x3c
   5bba8:	mov	r2, #0
   5bbac:	str	r1, [sp, #44]	; 0x2c
   5bbb0:	ldr	r1, [sp, #68]	; 0x44
   5bbb4:	str	r2, [sp, #84]	; 0x54
   5bbb8:	mov	r2, #0
   5bbbc:	movwhi	r2, #1
   5bbc0:	mov	r3, r1
   5bbc4:	sub	r1, r1, #1
   5bbc8:	clz	r1, r1
   5bbcc:	lsr	r1, r1, #5
   5bbd0:	and	r1, r2, r1
   5bbd4:	str	r1, [sp, #80]	; 0x50
   5bbd8:	ldr	r1, [sp, #72]	; 0x48
   5bbdc:	mul	r1, r1, r8
   5bbe0:	lsl	r8, r3, #3
   5bbe4:	lsl	r1, r1, #1
   5bbe8:	str	r1, [sp, #72]	; 0x48
   5bbec:	lsl	r1, r3, #1
   5bbf0:	lsl	r3, r3, #2
   5bbf4:	str	r1, [sp, #48]	; 0x30
   5bbf8:	and	r1, r5, #1
   5bbfc:	str	r1, [sp, #64]	; 0x40
   5bc00:	bic	r1, r5, #1
   5bc04:	str	r1, [sp, #56]	; 0x38
   5bc08:	ldr	r0, [sp, #80]	; 0x50
   5bc0c:	cmp	r0, #0
   5bc10:	bne	5bc44 <GetDataSlab+0x27ae8>
   5bc14:	b	5bd28 <GetDataSlab+0x27bcc>
   5bc18:	ldr	r0, [sp, #72]	; 0x48
   5bc1c:	add	ip, ip, #1
   5bc20:	cmp	ip, lr
   5bc24:	str	ip, [sp, #84]	; 0x54
   5bc28:	add	r9, r9, r0
   5bc2c:	mov	r0, #0
   5bc30:	str	r9, [sp, #92]	; 0x5c
   5bc34:	beq	5b6a4 <GetDataSlab+0x27548>
   5bc38:	ldr	r0, [sp, #80]	; 0x50
   5bc3c:	cmp	r0, #0
   5bc40:	beq	5bd28 <GetDataSlab+0x27bcc>
   5bc44:	ldr	r0, [sp, #52]	; 0x34
   5bc48:	ldr	r1, [sp, #92]	; 0x5c
   5bc4c:	add	r2, sp, #100	; 0x64
   5bc50:	cmp	r0, #0
   5bc54:	mov	r0, #0
   5bc58:	beq	5bcc0 <GetDataSlab+0x27b64>
   5bc5c:	ldr	r6, [sp, #88]	; 0x58
   5bc60:	ldr	sl, [sp, #44]	; 0x2c
   5bc64:	mov	ip, #32
   5bc68:	add	r9, sp, #104	; 0x68
   5bc6c:	mov	r4, r6
   5bc70:	ldr	lr, [r1]
   5bc74:	subs	sl, sl, #2
   5bc78:	add	r0, r0, #4
   5bc7c:	str	lr, [sp, #100]	; 0x64
   5bc80:	vld1.32	{d16[0]}, [r2 :32]
   5bc84:	vmovl.s16	q0, d16
   5bc88:	vcvt.f64.s32	d17, s1
   5bc8c:	vcvt.f64.s32	d16, s0
   5bc90:	vst1.64	{d16-d17}, [r4], ip
   5bc94:	ldr	r7, [r1, r3]
   5bc98:	add	r1, r1, r8
   5bc9c:	str	r7, [sp, #104]	; 0x68
   5bca0:	add	r7, r6, #16
   5bca4:	mov	r6, r4
   5bca8:	vld1.32	{d16[0]}, [r9 :32]
   5bcac:	vmovl.s16	q0, d16
   5bcb0:	vcvt.f64.s32	d17, s1
   5bcb4:	vcvt.f64.s32	d16, s0
   5bcb8:	vst1.64	{d16-d17}, [r7]
   5bcbc:	bne	5bc70 <GetDataSlab+0x27b14>
   5bcc0:	ldr	r1, [sp, #60]	; 0x3c
   5bcc4:	ldr	r9, [sp, #92]	; 0x5c
   5bcc8:	cmp	r1, #0
   5bccc:	beq	5bd00 <GetDataSlab+0x27ba4>
   5bcd0:	ldr	r1, [sp, #68]	; 0x44
   5bcd4:	mul	r1, r0, r1
   5bcd8:	ldr	r1, [r9, r1, lsl #1]
   5bcdc:	str	r1, [sp, #96]	; 0x60
   5bce0:	add	r1, sp, #96	; 0x60
   5bce4:	vld1.32	{d16[0]}, [r1 :32]
   5bce8:	vmovl.s16	q0, d16
   5bcec:	vcvt.f64.s32	d17, s1
   5bcf0:	vcvt.f64.s32	d16, s0
   5bcf4:	ldr	r1, [sp, #88]	; 0x58
   5bcf8:	add	r0, r1, r0, lsl #3
   5bcfc:	vst1.64	{d16-d17}, [r0]
   5bd00:	ldr	r1, [sp, #56]	; 0x38
   5bd04:	ldr	r0, [sp, #88]	; 0x58
   5bd08:	ldr	lr, [sp, #76]	; 0x4c
   5bd0c:	ldr	ip, [sp, #84]	; 0x54
   5bd10:	add	r0, r0, r1, lsl #3
   5bd14:	cmp	r5, r1
   5bd18:	str	r0, [sp, #88]	; 0x58
   5bd1c:	mov	r0, r1
   5bd20:	beq	5bc18 <GetDataSlab+0x27abc>
   5bd24:	b	5bd38 <GetDataSlab+0x27bdc>
   5bd28:	ldr	lr, [sp, #76]	; 0x4c
   5bd2c:	ldr	ip, [sp, #84]	; 0x54
   5bd30:	ldr	r9, [sp, #92]	; 0x5c
   5bd34:	mov	r0, #0
   5bd38:	ldr	r1, [sp, #64]	; 0x40
   5bd3c:	cmp	r1, #0
   5bd40:	bne	5bd58 <GetDataSlab+0x27bfc>
   5bd44:	mov	r4, r0
   5bd48:	orr	r0, r0, #1
   5bd4c:	cmp	r5, r0
   5bd50:	beq	5bc18 <GetDataSlab+0x27abc>
   5bd54:	b	5bd90 <GetDataSlab+0x27c34>
   5bd58:	ldr	r1, [sp, #68]	; 0x44
   5bd5c:	orr	r4, r0, #1
   5bd60:	mul	r1, r0, r1
   5bd64:	add	r1, r9, r1, lsl #1
   5bd68:	ldrsh	r1, [r1]
   5bd6c:	vmov	s0, r1
   5bd70:	vcvt.f64.s32	d16, s0
   5bd74:	ldr	r1, [sp, #88]	; 0x58
   5bd78:	vstr	d16, [r1]
   5bd7c:	add	r1, r1, #8
   5bd80:	str	r1, [sp, #88]	; 0x58
   5bd84:	orr	r0, r0, #1
   5bd88:	cmp	r5, r0
   5bd8c:	beq	5bc18 <GetDataSlab+0x27abc>
   5bd90:	ldr	r2, [sp, #48]	; 0x30
   5bd94:	add	r7, r4, #1
   5bd98:	sub	r1, r5, r4
   5bd9c:	mov	r6, r9
   5bda0:	mul	r0, r2, r4
   5bda4:	mul	r4, r2, r7
   5bda8:	ldr	r2, [sp, #88]	; 0x58
   5bdac:	add	r7, r6, r0
   5bdb0:	subs	r1, r1, #2
   5bdb4:	ldrsh	r7, [r7]
   5bdb8:	vmov	s0, r7
   5bdbc:	add	r7, r6, r4
   5bdc0:	add	r6, r6, r3
   5bdc4:	vcvt.f64.s32	d16, s0
   5bdc8:	vstr	d16, [r2]
   5bdcc:	ldrsh	r7, [r7]
   5bdd0:	vmov	s0, r7
   5bdd4:	vcvt.f64.s32	d16, s0
   5bdd8:	vstr	d16, [r2, #8]
   5bddc:	add	r2, r2, #16
   5bde0:	bne	5bdac <GetDataSlab+0x27c50>
   5bde4:	str	r2, [sp, #88]	; 0x58
   5bde8:	b	5bc18 <GetDataSlab+0x27abc>
   5bdec:	cmp	r3, #1
   5bdf0:	blt	35058 <GetDataSlab+0xefc>
   5bdf4:	cmp	r5, #1
   5bdf8:	mov	r0, #0
   5bdfc:	blt	5b6a4 <GetDataSlab+0x27548>
   5be00:	ldr	r0, [sp, #60]	; 0x3c
   5be04:	ldr	r1, [sp, #56]	; 0x38
   5be08:	cmp	r5, #1
   5be0c:	mla	r0, r1, r8, r0
   5be10:	ldr	r1, [sp, #80]	; 0x50
   5be14:	add	r0, r1, r0, lsl #1
   5be18:	mov	r1, #1
   5be1c:	str	r0, [sp, #92]	; 0x5c
   5be20:	sub	r0, r5, #2
   5be24:	add	r1, r1, r0, lsr #1
   5be28:	lsr	r0, r0, #1
   5be2c:	str	r0, [sp, #52]	; 0x34
   5be30:	and	r2, r1, #1
   5be34:	sub	r1, r1, r2
   5be38:	str	r2, [sp, #60]	; 0x3c
   5be3c:	mov	r2, #0
   5be40:	str	r1, [sp, #44]	; 0x2c
   5be44:	ldr	r1, [sp, #68]	; 0x44
   5be48:	str	r2, [sp, #84]	; 0x54
   5be4c:	mov	r2, #0
   5be50:	movwhi	r2, #1
   5be54:	mov	r3, r1
   5be58:	sub	r1, r1, #1
   5be5c:	clz	r1, r1
   5be60:	lsr	r1, r1, #5
   5be64:	and	r1, r2, r1
   5be68:	str	r1, [sp, #80]	; 0x50
   5be6c:	ldr	r1, [sp, #72]	; 0x48
   5be70:	mul	r1, r1, r8
   5be74:	lsl	r8, r3, #3
   5be78:	lsl	r1, r1, #1
   5be7c:	str	r1, [sp, #72]	; 0x48
   5be80:	lsl	r1, r3, #1
   5be84:	lsl	r3, r3, #2
   5be88:	str	r1, [sp, #48]	; 0x30
   5be8c:	and	r1, r5, #1
   5be90:	str	r1, [sp, #64]	; 0x40
   5be94:	bic	r1, r5, #1
   5be98:	str	r1, [sp, #56]	; 0x38
   5be9c:	ldr	r0, [sp, #80]	; 0x50
   5bea0:	cmp	r0, #0
   5bea4:	bne	5bed8 <GetDataSlab+0x27d7c>
   5bea8:	b	5bfbc <GetDataSlab+0x27e60>
   5beac:	ldr	r0, [sp, #72]	; 0x48
   5beb0:	add	ip, ip, #1
   5beb4:	cmp	ip, lr
   5beb8:	str	ip, [sp, #84]	; 0x54
   5bebc:	add	r9, r9, r0
   5bec0:	mov	r0, #0
   5bec4:	str	r9, [sp, #92]	; 0x5c
   5bec8:	beq	5b6a4 <GetDataSlab+0x27548>
   5becc:	ldr	r0, [sp, #80]	; 0x50
   5bed0:	cmp	r0, #0
   5bed4:	beq	5bfbc <GetDataSlab+0x27e60>
   5bed8:	ldr	r0, [sp, #52]	; 0x34
   5bedc:	ldr	r1, [sp, #92]	; 0x5c
   5bee0:	add	r2, sp, #112	; 0x70
   5bee4:	cmp	r0, #0
   5bee8:	mov	r0, #0
   5beec:	beq	5bf54 <GetDataSlab+0x27df8>
   5bef0:	ldr	r6, [sp, #88]	; 0x58
   5bef4:	ldr	sl, [sp, #44]	; 0x2c
   5bef8:	mov	ip, #32
   5befc:	add	r9, sp, #116	; 0x74
   5bf00:	mov	r4, r6
   5bf04:	ldr	lr, [r1]
   5bf08:	subs	sl, sl, #2
   5bf0c:	add	r0, r0, #4
   5bf10:	str	lr, [sp, #112]	; 0x70
   5bf14:	vld1.32	{d16[0]}, [r2 :32]
   5bf18:	vmovl.u16	q0, d16
   5bf1c:	vcvt.f64.u32	d17, s1
   5bf20:	vcvt.f64.u32	d16, s0
   5bf24:	vst1.64	{d16-d17}, [r4], ip
   5bf28:	ldr	r7, [r1, r3]
   5bf2c:	add	r1, r1, r8
   5bf30:	str	r7, [sp, #116]	; 0x74
   5bf34:	add	r7, r6, #16
   5bf38:	mov	r6, r4
   5bf3c:	vld1.32	{d16[0]}, [r9 :32]
   5bf40:	vmovl.u16	q0, d16
   5bf44:	vcvt.f64.u32	d17, s1
   5bf48:	vcvt.f64.u32	d16, s0
   5bf4c:	vst1.64	{d16-d17}, [r7]
   5bf50:	bne	5bf04 <GetDataSlab+0x27da8>
   5bf54:	ldr	r1, [sp, #60]	; 0x3c
   5bf58:	ldr	r9, [sp, #92]	; 0x5c
   5bf5c:	cmp	r1, #0
   5bf60:	beq	5bf94 <GetDataSlab+0x27e38>
   5bf64:	ldr	r1, [sp, #68]	; 0x44
   5bf68:	mul	r1, r0, r1
   5bf6c:	ldr	r1, [r9, r1, lsl #1]
   5bf70:	str	r1, [sp, #108]	; 0x6c
   5bf74:	add	r1, sp, #108	; 0x6c
   5bf78:	vld1.32	{d16[0]}, [r1 :32]
   5bf7c:	vmovl.u16	q0, d16
   5bf80:	vcvt.f64.u32	d17, s1
   5bf84:	vcvt.f64.u32	d16, s0
   5bf88:	ldr	r1, [sp, #88]	; 0x58
   5bf8c:	add	r0, r1, r0, lsl #3
   5bf90:	vst1.64	{d16-d17}, [r0]
   5bf94:	ldr	r1, [sp, #56]	; 0x38
   5bf98:	ldr	r0, [sp, #88]	; 0x58
   5bf9c:	ldr	lr, [sp, #76]	; 0x4c
   5bfa0:	ldr	ip, [sp, #84]	; 0x54
   5bfa4:	add	r0, r0, r1, lsl #3
   5bfa8:	cmp	r5, r1
   5bfac:	str	r0, [sp, #88]	; 0x58
   5bfb0:	mov	r0, r1
   5bfb4:	beq	5beac <GetDataSlab+0x27d50>
   5bfb8:	b	5bfcc <GetDataSlab+0x27e70>
   5bfbc:	ldr	lr, [sp, #76]	; 0x4c
   5bfc0:	ldr	ip, [sp, #84]	; 0x54
   5bfc4:	ldr	r9, [sp, #92]	; 0x5c
   5bfc8:	mov	r0, #0
   5bfcc:	ldr	r1, [sp, #64]	; 0x40
   5bfd0:	cmp	r1, #0
   5bfd4:	bne	5bfec <GetDataSlab+0x27e90>
   5bfd8:	mov	r4, r0
   5bfdc:	orr	r0, r0, #1
   5bfe0:	cmp	r5, r0
   5bfe4:	beq	5beac <GetDataSlab+0x27d50>
   5bfe8:	b	5c024 <GetDataSlab+0x27ec8>
   5bfec:	ldr	r1, [sp, #68]	; 0x44
   5bff0:	orr	r4, r0, #1
   5bff4:	mul	r1, r0, r1
   5bff8:	add	r1, r9, r1, lsl #1
   5bffc:	ldrh	r1, [r1]
   5c000:	vmov	s0, r1
   5c004:	vcvt.f64.u32	d16, s0
   5c008:	ldr	r1, [sp, #88]	; 0x58
   5c00c:	vstr	d16, [r1]
   5c010:	add	r1, r1, #8
   5c014:	str	r1, [sp, #88]	; 0x58
   5c018:	orr	r0, r0, #1
   5c01c:	cmp	r5, r0
   5c020:	beq	5beac <GetDataSlab+0x27d50>
   5c024:	ldr	r2, [sp, #48]	; 0x30
   5c028:	add	r7, r4, #1
   5c02c:	sub	r1, r5, r4
   5c030:	mov	r6, r9
   5c034:	mul	r0, r2, r4
   5c038:	mul	r4, r2, r7
   5c03c:	ldr	r2, [sp, #88]	; 0x58
   5c040:	add	r7, r6, r0
   5c044:	subs	r1, r1, #2
   5c048:	ldrh	r7, [r7]
   5c04c:	vmov	s0, r7
   5c050:	add	r7, r6, r4
   5c054:	add	r6, r6, r3
   5c058:	vcvt.f64.u32	d16, s0
   5c05c:	vstr	d16, [r2]
   5c060:	ldrh	r7, [r7]
   5c064:	vmov	s0, r7
   5c068:	vcvt.f64.u32	d16, s0
   5c06c:	vstr	d16, [r2, #8]
   5c070:	add	r2, r2, #16
   5c074:	bne	5c040 <GetDataSlab+0x27ee4>
   5c078:	str	r2, [sp, #88]	; 0x58
   5c07c:	b	5beac <GetDataSlab+0x27d50>
   5c080:	cmp	r3, #1
   5c084:	blt	35058 <GetDataSlab+0xefc>
   5c088:	cmp	r5, #1
   5c08c:	mov	r0, #0
   5c090:	blt	5b6a4 <GetDataSlab+0x27548>
   5c094:	ldr	r0, [sp, #60]	; 0x3c
   5c098:	ldr	r1, [sp, #56]	; 0x38
   5c09c:	cmp	r5, #1
   5c0a0:	mov	r6, #0
   5c0a4:	mla	r0, r1, r8, r0
   5c0a8:	ldr	r1, [sp, #80]	; 0x50
   5c0ac:	add	r4, r1, r0, lsl #2
   5c0b0:	sub	r0, r5, #2
   5c0b4:	mov	r1, #1
   5c0b8:	add	r1, r1, r0, lsr #1
   5c0bc:	lsr	r0, r0, #1
   5c0c0:	str	r0, [sp, #64]	; 0x40
   5c0c4:	and	r2, r1, #1
   5c0c8:	sub	r1, r1, r2
   5c0cc:	str	r2, [sp, #60]	; 0x3c
   5c0d0:	mov	r2, #0
   5c0d4:	movwhi	r2, #1
   5c0d8:	str	r1, [sp, #52]	; 0x34
   5c0dc:	ldr	r1, [sp, #68]	; 0x44
   5c0e0:	mov	r3, r1
   5c0e4:	sub	r1, r1, #1
   5c0e8:	clz	r1, r1
   5c0ec:	lsl	lr, r3, #4
   5c0f0:	lsr	r1, r1, #5
   5c0f4:	and	r1, r2, r1
   5c0f8:	str	r1, [sp, #92]	; 0x5c
   5c0fc:	ldr	r1, [sp, #72]	; 0x48
   5c100:	mul	r1, r1, r8
   5c104:	lsl	r1, r1, #2
   5c108:	str	r1, [sp, #84]	; 0x54
   5c10c:	lsl	r1, r3, #2
   5c110:	lsl	r3, r3, #3
   5c114:	str	r1, [sp, #56]	; 0x38
   5c118:	and	r1, r5, #1
   5c11c:	str	r1, [sp, #80]	; 0x50
   5c120:	bic	r1, r5, #1
   5c124:	str	r1, [sp, #72]	; 0x48
   5c128:	ldr	r0, [sp, #92]	; 0x5c
   5c12c:	cmp	r0, #0
   5c130:	bne	5c16c <GetDataSlab+0x28010>
   5c134:	b	5c21c <GetDataSlab+0x280c0>
   5c138:	ldr	r0, [sp, #84]	; 0x54
   5c13c:	ldr	r1, [sp, #76]	; 0x4c
   5c140:	add	r8, r8, #1
   5c144:	str	r2, [sp, #88]	; 0x58
   5c148:	mov	r6, r8
   5c14c:	add	ip, ip, r0
   5c150:	mov	r0, #0
   5c154:	cmp	r8, r1
   5c158:	mov	r4, ip
   5c15c:	beq	5b6a4 <GetDataSlab+0x27548>
   5c160:	ldr	r0, [sp, #92]	; 0x5c
   5c164:	cmp	r0, #0
   5c168:	beq	5c21c <GetDataSlab+0x280c0>
   5c16c:	ldr	r0, [sp, #64]	; 0x40
   5c170:	ldr	sl, [sp, #88]	; 0x58
   5c174:	cmp	r0, #0
   5c178:	mov	r0, #0
   5c17c:	beq	5c1d0 <GetDataSlab+0x28074>
   5c180:	ldr	ip, [sp, #52]	; 0x34
   5c184:	mov	r1, r4
   5c188:	mov	r8, r4
   5c18c:	mov	r9, sl
   5c190:	mov	r2, #32
   5c194:	vld1.32	{d0}, [r8], lr
   5c198:	add	r1, r1, r3
   5c19c:	subs	ip, ip, #2
   5c1a0:	add	r0, r0, #4
   5c1a4:	vcvt.f64.s32	d17, s1
   5c1a8:	vcvt.f64.s32	d16, s0
   5c1ac:	vst1.64	{d16-d17}, [r9], r2
   5c1b0:	vldr	d0, [r1]
   5c1b4:	add	r1, sl, #16
   5c1b8:	mov	sl, r9
   5c1bc:	vcvt.f64.s32	d17, s1
   5c1c0:	vcvt.f64.s32	d16, s0
   5c1c4:	vst1.64	{d16-d17}, [r1]
   5c1c8:	mov	r1, r8
   5c1cc:	bne	5c194 <GetDataSlab+0x28038>
   5c1d0:	ldr	r1, [sp, #60]	; 0x3c
   5c1d4:	ldr	r2, [sp, #88]	; 0x58
   5c1d8:	mov	ip, r4
   5c1dc:	cmp	r1, #0
   5c1e0:	beq	5c204 <GetDataSlab+0x280a8>
   5c1e4:	ldr	r1, [sp, #68]	; 0x44
   5c1e8:	mul	r1, r0, r1
   5c1ec:	add	r0, r2, r0, lsl #3
   5c1f0:	add	r1, ip, r1, lsl #2
   5c1f4:	vldr	d0, [r1]
   5c1f8:	vcvt.f64.s32	d17, s1
   5c1fc:	vcvt.f64.s32	d16, s0
   5c200:	vst1.64	{d16-d17}, [r0]
   5c204:	ldr	r0, [sp, #72]	; 0x48
   5c208:	mov	r8, r6
   5c20c:	add	r2, r2, r0, lsl #3
   5c210:	cmp	r5, r0
   5c214:	beq	5c138 <GetDataSlab+0x27fdc>
   5c218:	b	5c22c <GetDataSlab+0x280d0>
   5c21c:	ldr	r2, [sp, #88]	; 0x58
   5c220:	mov	r0, #0
   5c224:	mov	ip, r4
   5c228:	mov	r8, r6
   5c22c:	ldr	r1, [sp, #80]	; 0x50
   5c230:	cmp	r1, #0
   5c234:	bne	5c24c <GetDataSlab+0x280f0>
   5c238:	mov	r6, r0
   5c23c:	orr	r0, r0, #1
   5c240:	cmp	r5, r0
   5c244:	beq	5c138 <GetDataSlab+0x27fdc>
   5c248:	b	5c278 <GetDataSlab+0x2811c>
   5c24c:	ldr	r1, [sp, #68]	; 0x44
   5c250:	orr	r6, r0, #1
   5c254:	mul	r1, r0, r1
   5c258:	add	r1, ip, r1, lsl #2
   5c25c:	vldr	s0, [r1]
   5c260:	vcvt.f64.s32	d16, s0
   5c264:	vstr	d16, [r2]
   5c268:	add	r2, r2, #8
   5c26c:	orr	r0, r0, #1
   5c270:	cmp	r5, r0
   5c274:	beq	5c138 <GetDataSlab+0x27fdc>
   5c278:	ldr	r4, [sp, #56]	; 0x38
   5c27c:	sub	r1, r5, r6
   5c280:	mul	r0, r4, r6
   5c284:	add	r6, r6, #1
   5c288:	mul	r6, r4, r6
   5c28c:	mov	r4, ip
   5c290:	add	r7, r4, r0
   5c294:	subs	r1, r1, #2
   5c298:	vldr	s0, [r7]
   5c29c:	add	r7, r4, r6
   5c2a0:	add	r4, r4, r3
   5c2a4:	vcvt.f64.s32	d16, s0
   5c2a8:	vstr	d16, [r2]
   5c2ac:	vldr	s0, [r7]
   5c2b0:	vcvt.f64.s32	d16, s0
   5c2b4:	vstr	d16, [r2, #8]
   5c2b8:	add	r2, r2, #16
   5c2bc:	bne	5c290 <GetDataSlab+0x28134>
   5c2c0:	b	5c138 <GetDataSlab+0x27fdc>
   5c2c4:	cmp	r3, #1
   5c2c8:	blt	35058 <GetDataSlab+0xefc>
   5c2cc:	cmp	r5, #1
   5c2d0:	mov	r0, #0
   5c2d4:	blt	5b6a4 <GetDataSlab+0x27548>
   5c2d8:	ldr	r0, [sp, #60]	; 0x3c
   5c2dc:	ldr	r1, [sp, #56]	; 0x38
   5c2e0:	cmp	r5, #1
   5c2e4:	mov	r6, #0
   5c2e8:	mla	r0, r1, r8, r0
   5c2ec:	ldr	r1, [sp, #80]	; 0x50
   5c2f0:	add	r4, r1, r0, lsl #2
   5c2f4:	sub	r0, r5, #2
   5c2f8:	mov	r1, #1
   5c2fc:	add	r1, r1, r0, lsr #1
   5c300:	lsr	r0, r0, #1
   5c304:	str	r0, [sp, #64]	; 0x40
   5c308:	and	r2, r1, #1
   5c30c:	sub	r1, r1, r2
   5c310:	str	r2, [sp, #60]	; 0x3c
   5c314:	mov	r2, #0
   5c318:	movwhi	r2, #1
   5c31c:	str	r1, [sp, #52]	; 0x34
   5c320:	ldr	r1, [sp, #68]	; 0x44
   5c324:	mov	r3, r1
   5c328:	sub	r1, r1, #1
   5c32c:	clz	r1, r1
   5c330:	lsl	lr, r3, #4
   5c334:	lsr	r1, r1, #5
   5c338:	and	r1, r2, r1
   5c33c:	str	r1, [sp, #92]	; 0x5c
   5c340:	ldr	r1, [sp, #72]	; 0x48
   5c344:	mul	r1, r1, r8
   5c348:	lsl	r1, r1, #2
   5c34c:	str	r1, [sp, #84]	; 0x54
   5c350:	lsl	r1, r3, #2
   5c354:	lsl	r3, r3, #3
   5c358:	str	r1, [sp, #56]	; 0x38
   5c35c:	and	r1, r5, #1
   5c360:	str	r1, [sp, #80]	; 0x50
   5c364:	bic	r1, r5, #1
   5c368:	str	r1, [sp, #72]	; 0x48
   5c36c:	ldr	r0, [sp, #92]	; 0x5c
   5c370:	cmp	r0, #0
   5c374:	bne	5c3b0 <GetDataSlab+0x28254>
   5c378:	b	5c460 <GetDataSlab+0x28304>
   5c37c:	ldr	r0, [sp, #84]	; 0x54
   5c380:	ldr	r1, [sp, #76]	; 0x4c
   5c384:	add	r8, r8, #1
   5c388:	str	r2, [sp, #88]	; 0x58
   5c38c:	mov	r6, r8
   5c390:	add	ip, ip, r0
   5c394:	mov	r0, #0
   5c398:	cmp	r8, r1
   5c39c:	mov	r4, ip
   5c3a0:	beq	5b6a4 <GetDataSlab+0x27548>
   5c3a4:	ldr	r0, [sp, #92]	; 0x5c
   5c3a8:	cmp	r0, #0
   5c3ac:	beq	5c460 <GetDataSlab+0x28304>
   5c3b0:	ldr	r0, [sp, #64]	; 0x40
   5c3b4:	ldr	sl, [sp, #88]	; 0x58
   5c3b8:	cmp	r0, #0
   5c3bc:	mov	r0, #0
   5c3c0:	beq	5c414 <GetDataSlab+0x282b8>
   5c3c4:	ldr	ip, [sp, #52]	; 0x34
   5c3c8:	mov	r1, r4
   5c3cc:	mov	r8, r4
   5c3d0:	mov	r9, sl
   5c3d4:	mov	r2, #32
   5c3d8:	vld1.32	{d0}, [r8], lr
   5c3dc:	add	r1, r1, r3
   5c3e0:	subs	ip, ip, #2
   5c3e4:	add	r0, r0, #4
   5c3e8:	vcvt.f64.u32	d17, s1
   5c3ec:	vcvt.f64.u32	d16, s0
   5c3f0:	vst1.64	{d16-d17}, [r9], r2
   5c3f4:	vldr	d0, [r1]
   5c3f8:	add	r1, sl, #16
   5c3fc:	mov	sl, r9
   5c400:	vcvt.f64.u32	d17, s1
   5c404:	vcvt.f64.u32	d16, s0
   5c408:	vst1.64	{d16-d17}, [r1]
   5c40c:	mov	r1, r8
   5c410:	bne	5c3d8 <GetDataSlab+0x2827c>
   5c414:	ldr	r1, [sp, #60]	; 0x3c
   5c418:	ldr	r2, [sp, #88]	; 0x58
   5c41c:	mov	ip, r4
   5c420:	cmp	r1, #0
   5c424:	beq	5c448 <GetDataSlab+0x282ec>
   5c428:	ldr	r1, [sp, #68]	; 0x44
   5c42c:	mul	r1, r0, r1
   5c430:	add	r0, r2, r0, lsl #3
   5c434:	add	r1, ip, r1, lsl #2
   5c438:	vldr	d0, [r1]
   5c43c:	vcvt.f64.u32	d17, s1
   5c440:	vcvt.f64.u32	d16, s0
   5c444:	vst1.64	{d16-d17}, [r0]
   5c448:	ldr	r0, [sp, #72]	; 0x48
   5c44c:	mov	r8, r6
   5c450:	add	r2, r2, r0, lsl #3
   5c454:	cmp	r5, r0
   5c458:	beq	5c37c <GetDataSlab+0x28220>
   5c45c:	b	5c470 <GetDataSlab+0x28314>
   5c460:	ldr	r2, [sp, #88]	; 0x58
   5c464:	mov	r0, #0
   5c468:	mov	ip, r4
   5c46c:	mov	r8, r6
   5c470:	ldr	r1, [sp, #80]	; 0x50
   5c474:	cmp	r1, #0
   5c478:	bne	5c490 <GetDataSlab+0x28334>
   5c47c:	mov	r6, r0
   5c480:	orr	r0, r0, #1
   5c484:	cmp	r5, r0
   5c488:	beq	5c37c <GetDataSlab+0x28220>
   5c48c:	b	5c4bc <GetDataSlab+0x28360>
   5c490:	ldr	r1, [sp, #68]	; 0x44
   5c494:	orr	r6, r0, #1
   5c498:	mul	r1, r0, r1
   5c49c:	add	r1, ip, r1, lsl #2
   5c4a0:	vldr	s0, [r1]
   5c4a4:	vcvt.f64.u32	d16, s0
   5c4a8:	vstr	d16, [r2]
   5c4ac:	add	r2, r2, #8
   5c4b0:	orr	r0, r0, #1
   5c4b4:	cmp	r5, r0
   5c4b8:	beq	5c37c <GetDataSlab+0x28220>
   5c4bc:	ldr	r4, [sp, #56]	; 0x38
   5c4c0:	sub	r1, r5, r6
   5c4c4:	mul	r0, r4, r6
   5c4c8:	add	r6, r6, #1
   5c4cc:	mul	r6, r4, r6
   5c4d0:	mov	r4, ip
   5c4d4:	add	r7, r4, r0
   5c4d8:	subs	r1, r1, #2
   5c4dc:	vldr	s0, [r7]
   5c4e0:	add	r7, r4, r6
   5c4e4:	add	r4, r4, r3
   5c4e8:	vcvt.f64.u32	d16, s0
   5c4ec:	vstr	d16, [r2]
   5c4f0:	vldr	s0, [r7]
   5c4f4:	vcvt.f64.u32	d16, s0
   5c4f8:	vstr	d16, [r2, #8]
   5c4fc:	add	r2, r2, #16
   5c500:	bne	5c4d4 <GetDataSlab+0x28378>
   5c504:	b	5c37c <GetDataSlab+0x28220>
   5c508:	cmp	r3, #1
   5c50c:	blt	35058 <GetDataSlab+0xefc>
   5c510:	cmp	r5, #1
   5c514:	mov	r0, #0
   5c518:	blt	5b6a4 <GetDataSlab+0x27548>
   5c51c:	ldr	r0, [sp, #60]	; 0x3c
   5c520:	ldr	r1, [sp, #56]	; 0x38
   5c524:	cmp	r5, #1
   5c528:	mov	sl, #0
   5c52c:	mla	r0, r1, r8, r0
   5c530:	ldr	r1, [sp, #80]	; 0x50
   5c534:	add	ip, r1, r0, lsl #2
   5c538:	sub	r0, r5, #2
   5c53c:	mov	r1, #1
   5c540:	add	r1, r1, r0, lsr #1
   5c544:	lsr	r0, r0, #1
   5c548:	str	r0, [sp, #64]	; 0x40
   5c54c:	and	r2, r1, #1
   5c550:	sub	r1, r1, r2
   5c554:	str	r2, [sp, #60]	; 0x3c
   5c558:	mov	r2, #0
   5c55c:	movwhi	r2, #1
   5c560:	str	r1, [sp, #52]	; 0x34
   5c564:	ldr	r1, [sp, #68]	; 0x44
   5c568:	mov	r3, r1
   5c56c:	sub	r1, r1, #1
   5c570:	clz	r1, r1
   5c574:	lsl	lr, r3, #4
   5c578:	lsr	r1, r1, #5
   5c57c:	and	r1, r2, r1
   5c580:	str	r1, [sp, #92]	; 0x5c
   5c584:	ldr	r1, [sp, #72]	; 0x48
   5c588:	mul	r1, r1, r8
   5c58c:	lsl	r1, r1, #2
   5c590:	str	r1, [sp, #84]	; 0x54
   5c594:	lsl	r1, r3, #2
   5c598:	lsl	r3, r3, #3
   5c59c:	str	r1, [sp, #56]	; 0x38
   5c5a0:	and	r1, r5, #1
   5c5a4:	str	r1, [sp, #80]	; 0x50
   5c5a8:	bic	r1, r5, #1
   5c5ac:	str	r1, [sp, #72]	; 0x48
   5c5b0:	ldr	r0, [sp, #92]	; 0x5c
   5c5b4:	cmp	r0, #0
   5c5b8:	bne	5c5ec <GetDataSlab+0x28490>
   5c5bc:	b	5c684 <GetDataSlab+0x28528>
   5c5c0:	ldr	r0, [sp, #84]	; 0x54
   5c5c4:	ldr	r1, [sp, #76]	; 0x4c
   5c5c8:	add	sl, sl, #1
   5c5cc:	str	r2, [sp, #88]	; 0x58
   5c5d0:	add	ip, ip, r0
   5c5d4:	mov	r0, #0
   5c5d8:	cmp	sl, r1
   5c5dc:	beq	5b6a4 <GetDataSlab+0x27548>
   5c5e0:	ldr	r0, [sp, #92]	; 0x5c
   5c5e4:	cmp	r0, #0
   5c5e8:	beq	5c684 <GetDataSlab+0x28528>
   5c5ec:	ldr	r0, [sp, #64]	; 0x40
   5c5f0:	ldr	r8, [sp, #88]	; 0x58
   5c5f4:	cmp	r0, #0
   5c5f8:	mov	r0, #0
   5c5fc:	beq	5c640 <GetDataSlab+0x284e4>
   5c600:	ldr	r9, [sp, #52]	; 0x34
   5c604:	mov	r1, ip
   5c608:	mov	r2, #32
   5c60c:	add	r4, r1, r3
   5c610:	vld1.32	{d0}, [r1], lr
   5c614:	add	r6, r8, #16
   5c618:	subs	r9, r9, #2
   5c61c:	add	r0, r0, #4
   5c620:	vcvt.f64.f32	d17, s1
   5c624:	vcvt.f64.f32	d16, s0
   5c628:	vst1.64	{d16-d17}, [r8], r2
   5c62c:	vldr	d0, [r4]
   5c630:	vcvt.f64.f32	d17, s1
   5c634:	vcvt.f64.f32	d16, s0
   5c638:	vst1.64	{d16-d17}, [r6]
   5c63c:	bne	5c60c <GetDataSlab+0x284b0>
   5c640:	ldr	r1, [sp, #60]	; 0x3c
   5c644:	ldr	r2, [sp, #88]	; 0x58
   5c648:	cmp	r1, #0
   5c64c:	beq	5c670 <GetDataSlab+0x28514>
   5c650:	ldr	r1, [sp, #68]	; 0x44
   5c654:	mul	r1, r0, r1
   5c658:	add	r0, r2, r0, lsl #3
   5c65c:	add	r1, ip, r1, lsl #2
   5c660:	vldr	d0, [r1]
   5c664:	vcvt.f64.f32	d17, s1
   5c668:	vcvt.f64.f32	d16, s0
   5c66c:	vst1.64	{d16-d17}, [r0]
   5c670:	ldr	r0, [sp, #72]	; 0x48
   5c674:	add	r2, r2, r0, lsl #3
   5c678:	cmp	r5, r0
   5c67c:	beq	5c5c0 <GetDataSlab+0x28464>
   5c680:	b	5c68c <GetDataSlab+0x28530>
   5c684:	ldr	r2, [sp, #88]	; 0x58
   5c688:	mov	r0, #0
   5c68c:	ldr	r1, [sp, #80]	; 0x50
   5c690:	cmp	r1, #0
   5c694:	bne	5c6ac <GetDataSlab+0x28550>
   5c698:	mov	r4, r0
   5c69c:	orr	r0, r0, #1
   5c6a0:	cmp	r5, r0
   5c6a4:	beq	5c5c0 <GetDataSlab+0x28464>
   5c6a8:	b	5c6d8 <GetDataSlab+0x2857c>
   5c6ac:	ldr	r1, [sp, #68]	; 0x44
   5c6b0:	orr	r4, r0, #1
   5c6b4:	mul	r1, r0, r1
   5c6b8:	add	r1, ip, r1, lsl #2
   5c6bc:	vldr	s0, [r1]
   5c6c0:	vcvt.f64.f32	d16, s0
   5c6c4:	vstr	d16, [r2]
   5c6c8:	add	r2, r2, #8
   5c6cc:	orr	r0, r0, #1
   5c6d0:	cmp	r5, r0
   5c6d4:	beq	5c5c0 <GetDataSlab+0x28464>
   5c6d8:	ldr	r6, [sp, #56]	; 0x38
   5c6dc:	sub	r1, r5, r4
   5c6e0:	mul	r0, r6, r4
   5c6e4:	add	r4, r4, #1
   5c6e8:	mul	r4, r6, r4
   5c6ec:	mov	r6, ip
   5c6f0:	add	r7, r6, r0
   5c6f4:	subs	r1, r1, #2
   5c6f8:	vldr	s0, [r7]
   5c6fc:	add	r7, r6, r4
   5c700:	add	r6, r6, r3
   5c704:	vcvt.f64.f32	d16, s0
   5c708:	vstr	d16, [r2]
   5c70c:	vldr	s0, [r7]
   5c710:	vcvt.f64.f32	d16, s0
   5c714:	vstr	d16, [r2, #8]
   5c718:	add	r2, r2, #16
   5c71c:	bne	5c6f0 <GetDataSlab+0x28594>
   5c720:	b	5c5c0 <GetDataSlab+0x28464>
   5c724:	cmp	r3, #1
   5c728:	blt	35058 <GetDataSlab+0xefc>
   5c72c:	cmp	r5, #1
   5c730:	mov	r0, #0
   5c734:	blt	5b6a4 <GetDataSlab+0x27548>
   5c738:	ldr	r0, [sp, #60]	; 0x3c
   5c73c:	ldr	r1, [sp, #56]	; 0x38
   5c740:	mov	r2, #1
   5c744:	cmp	r5, #1
   5c748:	mov	r4, #0
   5c74c:	mov	r9, #32
   5c750:	mla	r0, r1, r8, r0
   5c754:	ldr	r1, [sp, #80]	; 0x50
   5c758:	add	sl, r1, r0, lsl #3
   5c75c:	lsl	r1, r5, #3
   5c760:	add	r1, r1, r0, lsl #3
   5c764:	lsl	r0, r0, #3
   5c768:	str	r0, [sp, #56]	; 0x38
   5c76c:	ldr	r0, [sp, #68]	; 0x44
   5c770:	str	r1, [sp, #60]	; 0x3c
   5c774:	sub	r1, r5, #2
   5c778:	add	r2, r2, r1, lsr #1
   5c77c:	and	r3, r2, #1
   5c780:	sub	r2, r2, r3
   5c784:	str	r3, [sp, #52]	; 0x34
   5c788:	mov	r3, r0
   5c78c:	sub	r0, r0, #1
   5c790:	clz	r0, r0
   5c794:	str	r2, [sp, #40]	; 0x28
   5c798:	mov	r2, #0
   5c79c:	movwhi	r2, #1
   5c7a0:	lsl	ip, r3, #5
   5c7a4:	lsl	r6, r3, #4
   5c7a8:	lsr	r0, r0, #5
   5c7ac:	and	r0, r2, r0
   5c7b0:	str	r0, [sp, #84]	; 0x54
   5c7b4:	ldr	r0, [sp, #72]	; 0x48
   5c7b8:	mul	r0, r0, r8
   5c7bc:	lsl	r0, r0, #3
   5c7c0:	str	r0, [sp, #92]	; 0x5c
   5c7c4:	lsl	r0, r3, #3
   5c7c8:	str	r0, [sp, #64]	; 0x40
   5c7cc:	and	r0, r5, #1
   5c7d0:	str	r0, [sp, #72]	; 0x48
   5c7d4:	bic	r0, r5, #1
   5c7d8:	str	r0, [sp, #48]	; 0x30
   5c7dc:	lsr	r0, r1, #1
   5c7e0:	str	r0, [sp, #44]	; 0x2c
   5c7e4:	ldr	r0, [sp, #84]	; 0x54
   5c7e8:	cmp	r0, #0
   5c7ec:	bne	5c820 <GetDataSlab+0x286c4>
   5c7f0:	b	5c898 <GetDataSlab+0x2873c>
   5c7f4:	ldr	r0, [sp, #92]	; 0x5c
   5c7f8:	ldr	r1, [sp, #76]	; 0x4c
   5c7fc:	add	r4, r4, #1
   5c800:	str	lr, [sp, #88]	; 0x58
   5c804:	add	sl, sl, r0
   5c808:	mov	r0, #0
   5c80c:	cmp	r4, r1
   5c810:	beq	5b6a4 <GetDataSlab+0x27548>
   5c814:	ldr	r0, [sp, #84]	; 0x54
   5c818:	cmp	r0, #0
   5c81c:	beq	5c898 <GetDataSlab+0x2873c>
   5c820:	ldr	r0, [sp, #92]	; 0x5c
   5c824:	ldr	r1, [sp, #60]	; 0x3c
   5c828:	ldr	r2, [sp, #80]	; 0x50
   5c82c:	ldr	lr, [sp, #88]	; 0x58
   5c830:	mul	r0, r0, r4
   5c834:	add	r1, r1, r0
   5c838:	add	r1, r2, r1
   5c83c:	cmp	r1, lr
   5c840:	bls	5c900 <GetDataSlab+0x287a4>
   5c844:	ldr	r3, [sp, #56]	; 0x38
   5c848:	add	r1, lr, r5, lsl #3
   5c84c:	add	r0, r3, r0
   5c850:	add	r0, r2, r0
   5c854:	cmp	r0, r1
   5c858:	bcs	5c900 <GetDataSlab+0x287a4>
   5c85c:	mov	r0, #0
   5c860:	ldr	r1, [sp, #72]	; 0x48
   5c864:	cmp	r1, #0
   5c868:	beq	5c8ac <GetDataSlab+0x28750>
   5c86c:	ldr	r1, [sp, #68]	; 0x44
   5c870:	orr	r7, r0, #1
   5c874:	mul	r1, r0, r1
   5c878:	add	r1, sl, r1, lsl #3
   5c87c:	vldr	d16, [r1]
   5c880:	vstr	d16, [lr]
   5c884:	add	lr, lr, #8
   5c888:	orr	r0, r0, #1
   5c88c:	cmp	r5, r0
   5c890:	bne	5c8bc <GetDataSlab+0x28760>
   5c894:	b	5c7f4 <GetDataSlab+0x28698>
   5c898:	ldr	lr, [sp, #88]	; 0x58
   5c89c:	mov	r0, #0
   5c8a0:	ldr	r1, [sp, #72]	; 0x48
   5c8a4:	cmp	r1, #0
   5c8a8:	bne	5c86c <GetDataSlab+0x28710>
   5c8ac:	mov	r7, r0
   5c8b0:	orr	r0, r0, #1
   5c8b4:	cmp	r5, r0
   5c8b8:	beq	5c7f4 <GetDataSlab+0x28698>
   5c8bc:	ldr	r2, [sp, #64]	; 0x40
   5c8c0:	add	r3, r7, #1
   5c8c4:	sub	r1, r5, r7
   5c8c8:	mul	r0, r2, r7
   5c8cc:	mul	r7, r2, r3
   5c8d0:	mov	r3, sl
   5c8d4:	add	r2, r3, r0
   5c8d8:	subs	r1, r1, #2
   5c8dc:	vldr	d16, [r2]
   5c8e0:	add	r2, r3, r7
   5c8e4:	add	r3, r3, r6
   5c8e8:	vstr	d16, [lr]
   5c8ec:	vldr	d16, [r2]
   5c8f0:	vstr	d16, [lr, #8]
   5c8f4:	add	lr, lr, #16
   5c8f8:	bne	5c8d4 <GetDataSlab+0x28778>
   5c8fc:	b	5c7f4 <GetDataSlab+0x28698>
   5c900:	ldr	r0, [sp, #44]	; 0x2c
   5c904:	cmp	r0, #0
   5c908:	beq	5c940 <GetDataSlab+0x287e4>
   5c90c:	ldr	r8, [sp, #40]	; 0x28
   5c910:	mov	r0, #0
   5c914:	mov	r1, sl
   5c918:	add	r3, r1, r6
   5c91c:	vld1.64	{d16-d17}, [r1], ip
   5c920:	add	r7, lr, #16
   5c924:	subs	r8, r8, #2
   5c928:	add	r0, r0, #4
   5c92c:	vst1.64	{d16-d17}, [lr], r9
   5c930:	vld1.64	{d16-d17}, [r3]
   5c934:	vst1.64	{d16-d17}, [r7]
   5c938:	bne	5c918 <GetDataSlab+0x287bc>
   5c93c:	b	5c944 <GetDataSlab+0x287e8>
   5c940:	mov	r0, #0
   5c944:	ldr	r1, [sp, #52]	; 0x34
   5c948:	ldr	lr, [sp, #88]	; 0x58
   5c94c:	cmp	r1, #0
   5c950:	beq	5c96c <GetDataSlab+0x28810>
   5c954:	ldr	r1, [sp, #68]	; 0x44
   5c958:	mul	r1, r0, r1
   5c95c:	add	r0, lr, r0, lsl #3
   5c960:	add	r1, sl, r1, lsl #3
   5c964:	vld1.64	{d16-d17}, [r1]
   5c968:	vst1.64	{d16-d17}, [r0]
   5c96c:	ldr	r0, [sp, #48]	; 0x30
   5c970:	add	lr, lr, r0, lsl #3
   5c974:	cmp	r5, r0
   5c978:	bne	5c8a0 <GetDataSlab+0x28744>
   5c97c:	b	5c7f4 <GetDataSlab+0x28698>
   5c980:	cmp	r3, #1
   5c984:	blt	35058 <GetDataSlab+0xefc>
   5c988:	cmp	r5, #1
   5c98c:	mov	r0, #0
   5c990:	blt	5b6a4 <GetDataSlab+0x27548>
   5c994:	ldr	r0, [sp, #60]	; 0x3c
   5c998:	ldr	r1, [sp, #56]	; 0x38
   5c99c:	cmp	r5, #1
   5c9a0:	ldr	sl, [sp, #88]	; 0x58
   5c9a4:	mov	r6, #0
   5c9a8:	mla	r0, r1, r8, r0
   5c9ac:	ldr	r1, [sp, #80]	; 0x50
   5c9b0:	add	r9, r1, r0, lsl #3
   5c9b4:	sub	r0, r5, #2
   5c9b8:	mov	r1, #1
   5c9bc:	add	r1, r1, r0, lsr #1
   5c9c0:	lsr	r0, r0, #1
   5c9c4:	str	r0, [sp, #20]
   5c9c8:	and	r2, r1, #1
   5c9cc:	sub	r1, r1, r2
   5c9d0:	str	r2, [sp, #28]
   5c9d4:	mov	r2, #0
   5c9d8:	movwhi	r2, #1
   5c9dc:	str	r1, [sp, #12]
   5c9e0:	ldr	r1, [sp, #68]	; 0x44
   5c9e4:	mov	r7, r1
   5c9e8:	sub	r1, r1, #1
   5c9ec:	clz	r1, r1
   5c9f0:	lsl	r3, r7, #5
   5c9f4:	lsr	r1, r1, #5
   5c9f8:	str	r3, [sp, #52]	; 0x34
   5c9fc:	and	r1, r2, r1
   5ca00:	ldr	r2, [sp, #76]	; 0x4c
   5ca04:	str	r1, [sp, #44]	; 0x2c
   5ca08:	ldr	r1, [sp, #72]	; 0x48
   5ca0c:	mul	r1, r1, r8
   5ca10:	lsl	r1, r1, #3
   5ca14:	str	r1, [sp, #40]	; 0x28
   5ca18:	lsl	r1, r7, #3
   5ca1c:	str	r1, [sp, #16]
   5ca20:	lsl	r1, r7, #4
   5ca24:	ldr	r7, [sp, #84]	; 0x54
   5ca28:	str	r1, [sp, #92]	; 0x5c
   5ca2c:	and	r1, r5, #1
   5ca30:	str	r1, [sp, #32]
   5ca34:	bic	r1, r5, #1
   5ca38:	str	r1, [sp, #24]
   5ca3c:	ldr	r0, [sp, #44]	; 0x2c
   5ca40:	cmp	r0, #0
   5ca44:	bne	5ca6c <GetDataSlab+0x28910>
   5ca48:	b	5cb98 <GetDataSlab+0x28a3c>
   5ca4c:	ldr	r0, [sp, #40]	; 0x28
   5ca50:	add	r6, r6, #1
   5ca54:	cmp	r6, r2
   5ca58:	add	r9, r9, r0
   5ca5c:	beq	63aec <GetDataSlab+0x2f990>
   5ca60:	ldr	r0, [sp, #44]	; 0x2c
   5ca64:	cmp	r0, #0
   5ca68:	beq	5cb98 <GetDataSlab+0x28a3c>
   5ca6c:	ldr	r0, [sp, #20]
   5ca70:	mov	r7, #0
   5ca74:	str	r6, [sp, #48]	; 0x30
   5ca78:	str	sl, [sp, #88]	; 0x58
   5ca7c:	str	r9, [sp, #36]	; 0x24
   5ca80:	cmp	r0, #0
   5ca84:	beq	5cb1c <GetDataSlab+0x289c0>
   5ca88:	ldr	r4, [sp, #12]
   5ca8c:	mov	r6, r9
   5ca90:	mov	r8, sl
   5ca94:	vld1.64	{d8-d9}, [r9], r3
   5ca98:	vmov.32	r0, d9[0]
   5ca9c:	vmov.32	r1, d9[1]
   5caa0:	bl	71540 <__aeabi_l2d>
   5caa4:	vmov.32	r2, d8[0]
   5caa8:	vmov.32	r3, d8[1]
   5caac:	vmov	d9, r0, r1
   5cab0:	mov	r0, r2
   5cab4:	mov	r1, r3
   5cab8:	bl	71540 <__aeabi_l2d>
   5cabc:	vmov	d8, r0, r1
   5cac0:	mov	r0, #32
   5cac4:	vst1.64	{d8-d9}, [r8], r0
   5cac8:	ldr	r0, [sp, #92]	; 0x5c
   5cacc:	add	r0, r6, r0
   5cad0:	vld1.64	{d8-d9}, [r0]
   5cad4:	vmov.32	r0, d9[0]
   5cad8:	vmov.32	r1, d9[1]
   5cadc:	bl	71540 <__aeabi_l2d>
   5cae0:	vmov.32	r2, d8[0]
   5cae4:	vmov.32	r3, d8[1]
   5cae8:	vmov	d9, r0, r1
   5caec:	mov	r0, r2
   5caf0:	mov	r1, r3
   5caf4:	bl	71540 <__aeabi_l2d>
   5caf8:	vmov	d8, r0, r1
   5cafc:	ldr	r3, [sp, #52]	; 0x34
   5cb00:	add	r0, sl, #16
   5cb04:	subs	r4, r4, #2
   5cb08:	add	r7, r7, #4
   5cb0c:	mov	r6, r9
   5cb10:	mov	sl, r8
   5cb14:	vst1.64	{d8-d9}, [r0]
   5cb18:	bne	5ca94 <GetDataSlab+0x28938>
   5cb1c:	ldr	r0, [sp, #28]
   5cb20:	ldr	sl, [sp, #88]	; 0x58
   5cb24:	ldr	r8, [sp, #64]	; 0x40
   5cb28:	ldr	r9, [sp, #36]	; 0x24
   5cb2c:	cmp	r0, #0
   5cb30:	beq	5cb78 <GetDataSlab+0x28a1c>
   5cb34:	ldr	r0, [sp, #68]	; 0x44
   5cb38:	mul	r0, r7, r0
   5cb3c:	add	r0, r9, r0, lsl #3
   5cb40:	vld1.64	{d8-d9}, [r0]
   5cb44:	vmov.32	r0, d9[0]
   5cb48:	vmov.32	r1, d9[1]
   5cb4c:	bl	71540 <__aeabi_l2d>
   5cb50:	vmov.32	r2, d8[0]
   5cb54:	vmov.32	r3, d8[1]
   5cb58:	vmov	d9, r0, r1
   5cb5c:	mov	r0, r2
   5cb60:	mov	r1, r3
   5cb64:	bl	71540 <__aeabi_l2d>
   5cb68:	vmov	d8, r0, r1
   5cb6c:	ldr	r3, [sp, #52]	; 0x34
   5cb70:	add	r0, sl, r7, lsl #3
   5cb74:	vst1.64	{d8-d9}, [r0]
   5cb78:	ldr	r4, [sp, #24]
   5cb7c:	ldr	r2, [sp, #76]	; 0x4c
   5cb80:	ldr	r7, [sp, #84]	; 0x54
   5cb84:	ldr	r6, [sp, #48]	; 0x30
   5cb88:	add	sl, sl, r4, lsl #3
   5cb8c:	cmp	r5, r4
   5cb90:	beq	5ca4c <GetDataSlab+0x288f0>
   5cb94:	b	5cb9c <GetDataSlab+0x28a40>
   5cb98:	mov	r4, #0
   5cb9c:	ldr	r0, [sp, #32]
   5cba0:	cmp	r0, #0
   5cba4:	bne	5cbbc <GetDataSlab+0x28a60>
   5cba8:	mov	r0, r4
   5cbac:	orr	r1, r4, #1
   5cbb0:	cmp	r5, r1
   5cbb4:	beq	5ca4c <GetDataSlab+0x288f0>
   5cbb8:	b	5cbf8 <GetDataSlab+0x28a9c>
   5cbbc:	ldr	r0, [sp, #68]	; 0x44
   5cbc0:	mov	r1, r9
   5cbc4:	mul	r0, r4, r0
   5cbc8:	ldr	r0, [r1, r0, lsl #3]!
   5cbcc:	ldr	r1, [r1, #4]
   5cbd0:	bl	71540 <__aeabi_l2d>
   5cbd4:	ldr	r3, [sp, #52]	; 0x34
   5cbd8:	ldr	r7, [sp, #84]	; 0x54
   5cbdc:	ldr	r2, [sp, #76]	; 0x4c
   5cbe0:	strd	r0, [sl]
   5cbe4:	orr	r0, r4, #1
   5cbe8:	add	sl, sl, #8
   5cbec:	orr	r1, r4, #1
   5cbf0:	cmp	r5, r1
   5cbf4:	beq	5ca4c <GetDataSlab+0x288f0>
   5cbf8:	ldr	r1, [sp, #16]
   5cbfc:	str	r6, [sp, #48]	; 0x30
   5cc00:	sub	r6, r5, r0
   5cc04:	mov	r4, r9
   5cc08:	mul	r8, r1, r0
   5cc0c:	add	r0, r0, #1
   5cc10:	mul	r7, r1, r0
   5cc14:	mov	r1, r4
   5cc18:	ldr	r0, [r1, r8]!
   5cc1c:	ldr	r1, [r1, #4]
   5cc20:	bl	71540 <__aeabi_l2d>
   5cc24:	strd	r0, [sl]
   5cc28:	mov	r1, r4
   5cc2c:	ldr	r0, [r1, r7]!
   5cc30:	ldr	r1, [r1, #4]
   5cc34:	bl	71540 <__aeabi_l2d>
   5cc38:	strd	r0, [sl, #8]
   5cc3c:	add	sl, sl, #16
   5cc40:	subs	r6, r6, #2
   5cc44:	ldr	r0, [sp, #92]	; 0x5c
   5cc48:	add	r4, r4, r0
   5cc4c:	bne	5cc14 <GetDataSlab+0x28ab8>
   5cc50:	ldr	r2, [sp, #76]	; 0x4c
   5cc54:	ldr	r7, [sp, #84]	; 0x54
   5cc58:	ldr	r8, [sp, #64]	; 0x40
   5cc5c:	ldr	r6, [sp, #48]	; 0x30
   5cc60:	ldr	r3, [sp, #52]	; 0x34
   5cc64:	b	5ca4c <GetDataSlab+0x288f0>
   5cc68:	cmp	r3, #1
   5cc6c:	blt	35058 <GetDataSlab+0xefc>
   5cc70:	cmp	r5, #1
   5cc74:	mov	r0, #0
   5cc78:	blt	5b6a4 <GetDataSlab+0x27548>
   5cc7c:	ldr	r0, [sp, #72]	; 0x48
   5cc80:	ldr	r2, [sp, #60]	; 0x3c
   5cc84:	ldr	r3, [sp, #56]	; 0x38
   5cc88:	cmp	r5, #3
   5cc8c:	mov	r9, #32
   5cc90:	mul	r0, r0, r8
   5cc94:	mla	r1, r3, r8, r2
   5cc98:	str	r0, [sp, #72]	; 0x48
   5cc9c:	ldr	r0, [sp, #80]	; 0x50
   5cca0:	str	r1, [sp, #52]	; 0x34
   5cca4:	add	r0, r0, r1
   5cca8:	mov	r1, #1
   5ccac:	str	r0, [sp, #92]	; 0x5c
   5ccb0:	sub	r0, r5, #4
   5ccb4:	add	r1, r1, r0, lsr #2
   5ccb8:	lsr	r0, r0, #2
   5ccbc:	str	r0, [sp, #40]	; 0x28
   5ccc0:	and	r7, r1, #1
   5ccc4:	sub	r1, r1, r7
   5ccc8:	str	r7, [sp, #48]	; 0x30
   5cccc:	str	r1, [sp, #36]	; 0x24
   5ccd0:	add	r1, r5, r2
   5ccd4:	mov	r2, #0
   5ccd8:	mla	r1, r3, r8, r1
   5ccdc:	str	r2, [sp, #84]	; 0x54
   5cce0:	mov	r2, #0
   5cce4:	movwhi	r2, #1
   5cce8:	str	r1, [sp, #56]	; 0x38
   5ccec:	ldr	r1, [sp, #68]	; 0x44
   5ccf0:	mov	r3, r1
   5ccf4:	sub	r1, r1, #1
   5ccf8:	clz	r1, r1
   5ccfc:	lsr	r1, r1, #5
   5cd00:	and	r1, r2, r1
   5cd04:	lsl	r2, r3, #1
   5cd08:	str	r1, [sp, #64]	; 0x40
   5cd0c:	lsl	r1, r3, #3
   5cd10:	str	r1, [sp, #32]
   5cd14:	lsl	r1, r3, #2
   5cd18:	ldr	lr, [sp, #32]
   5cd1c:	str	r1, [sp, #28]
   5cd20:	and	r1, r5, #1
   5cd24:	str	r1, [sp, #60]	; 0x3c
   5cd28:	bic	r1, r5, #3
   5cd2c:	str	r1, [sp, #44]	; 0x2c
   5cd30:	ldr	r0, [sp, #64]	; 0x40
   5cd34:	cmp	r0, #0
   5cd38:	bne	5cd74 <GetDataSlab+0x28c18>
   5cd3c:	b	5cdfc <GetDataSlab+0x28ca0>
   5cd40:	ldr	r0, [sp, #72]	; 0x48
   5cd44:	ldr	r1, [sp, #76]	; 0x4c
   5cd48:	add	r6, r6, #1
   5cd4c:	str	sl, [sp, #88]	; 0x58
   5cd50:	str	r6, [sp, #84]	; 0x54
   5cd54:	add	ip, ip, r0
   5cd58:	mov	r0, #0
   5cd5c:	cmp	r6, r1
   5cd60:	str	ip, [sp, #92]	; 0x5c
   5cd64:	beq	5b6a4 <GetDataSlab+0x27548>
   5cd68:	ldr	r0, [sp, #64]	; 0x40
   5cd6c:	cmp	r0, #0
   5cd70:	beq	5cdfc <GetDataSlab+0x28ca0>
   5cd74:	ldr	r0, [sp, #72]	; 0x48
   5cd78:	ldr	r6, [sp, #84]	; 0x54
   5cd7c:	ldr	r1, [sp, #56]	; 0x38
   5cd80:	ldr	r3, [sp, #80]	; 0x50
   5cd84:	ldr	sl, [sp, #88]	; 0x58
   5cd88:	ldr	ip, [sp, #92]	; 0x5c
   5cd8c:	add	r7, sp, #192	; 0xc0
   5cd90:	mul	r0, r0, r6
   5cd94:	add	r1, r1, r0
   5cd98:	add	r1, r3, r1
   5cd9c:	cmp	r1, sl
   5cda0:	bls	5ce70 <GetDataSlab+0x28d14>
   5cda4:	ldr	r4, [sp, #52]	; 0x34
   5cda8:	add	r1, sl, r5, lsl #2
   5cdac:	add	r0, r4, r0
   5cdb0:	add	r0, r3, r0
   5cdb4:	cmp	r0, r1
   5cdb8:	bcs	5ce70 <GetDataSlab+0x28d14>
   5cdbc:	mov	r0, #0
   5cdc0:	ldr	r1, [sp, #60]	; 0x3c
   5cdc4:	cmp	r1, #0
   5cdc8:	beq	5ce14 <GetDataSlab+0x28cb8>
   5cdcc:	ldr	r1, [sp, #68]	; 0x44
   5cdd0:	orr	r3, r0, #1
   5cdd4:	mul	r1, r0, r1
   5cdd8:	ldrb	r1, [ip, r1]
   5cddc:	vmov	s0, r1
   5cde0:	vcvt.f32.u32	s0, s0
   5cde4:	vstr	s0, [sl]
   5cde8:	add	sl, sl, #4
   5cdec:	orr	r0, r0, #1
   5cdf0:	cmp	r5, r0
   5cdf4:	bne	5ce24 <GetDataSlab+0x28cc8>
   5cdf8:	b	5cd40 <GetDataSlab+0x28be4>
   5cdfc:	add	ip, sp, #84	; 0x54
   5ce00:	mov	r0, #0
   5ce04:	ldm	ip, {r6, sl, ip}
   5ce08:	ldr	r1, [sp, #60]	; 0x3c
   5ce0c:	cmp	r1, #0
   5ce10:	bne	5cdcc <GetDataSlab+0x28c70>
   5ce14:	mov	r3, r0
   5ce18:	orr	r0, r0, #1
   5ce1c:	cmp	r5, r0
   5ce20:	beq	5cd40 <GetDataSlab+0x28be4>
   5ce24:	ldr	r4, [sp, #68]	; 0x44
   5ce28:	sub	r1, r5, r3
   5ce2c:	mul	r0, r4, r3
   5ce30:	add	r3, r3, #1
   5ce34:	mul	r3, r4, r3
   5ce38:	mov	r4, ip
   5ce3c:	ldrb	r7, [r4, r0]
   5ce40:	subs	r1, r1, #2
   5ce44:	vmov	s0, r7
   5ce48:	vcvt.f32.u32	s0, s0
   5ce4c:	vstr	s0, [sl]
   5ce50:	ldrb	r7, [r4, r3]
   5ce54:	add	r4, r4, r2
   5ce58:	vmov	s0, r7
   5ce5c:	vcvt.f32.u32	s0, s0
   5ce60:	vstr	s0, [sl, #4]
   5ce64:	add	sl, sl, #8
   5ce68:	bne	5ce3c <GetDataSlab+0x28ce0>
   5ce6c:	b	5cd40 <GetDataSlab+0x28be4>
   5ce70:	ldr	r0, [sp, #40]	; 0x28
   5ce74:	cmp	r0, #0
   5ce78:	beq	5cee0 <GetDataSlab+0x28d84>
   5ce7c:	mov	r3, ip
   5ce80:	ldr	r1, [sp, #36]	; 0x24
   5ce84:	ldr	ip, [sp, #28]
   5ce88:	mov	r0, #0
   5ce8c:	add	r6, sp, #196	; 0xc4
   5ce90:	ldr	r4, [r3]
   5ce94:	subs	r1, r1, #2
   5ce98:	add	r0, r0, #8
   5ce9c:	str	r4, [sp, #192]	; 0xc0
   5cea0:	add	r4, sl, #16
   5cea4:	vld1.32	{d16[0]}, [r7 :32]
   5cea8:	vmovl.u8	q8, d16
   5ceac:	vmovl.u16	q8, d16
   5ceb0:	vcvt.f32.u32	q8, q8
   5ceb4:	vst1.32	{d16-d17}, [sl], r9
   5ceb8:	ldr	r8, [r3, ip]
   5cebc:	add	r3, r3, lr
   5cec0:	str	r8, [sp, #196]	; 0xc4
   5cec4:	vld1.32	{d16[0]}, [r6 :32]
   5cec8:	vmovl.u8	q8, d16
   5cecc:	vmovl.u16	q8, d16
   5ced0:	vcvt.f32.u32	q8, q8
   5ced4:	vst1.32	{d16-d17}, [r4]
   5ced8:	bne	5ce90 <GetDataSlab+0x28d34>
   5cedc:	b	5cee4 <GetDataSlab+0x28d88>
   5cee0:	mov	r0, #0
   5cee4:	add	ip, sp, #84	; 0x54
   5cee8:	ldr	r1, [sp, #48]	; 0x30
   5ceec:	ldm	ip, {r6, sl, ip}
   5cef0:	cmp	r1, #0
   5cef4:	beq	5cf24 <GetDataSlab+0x28dc8>
   5cef8:	ldr	r1, [sp, #68]	; 0x44
   5cefc:	mul	r1, r0, r1
   5cf00:	add	r0, sl, r0, lsl #2
   5cf04:	ldr	r1, [ip, r1]
   5cf08:	str	r1, [sp, #188]	; 0xbc
   5cf0c:	add	r1, sp, #188	; 0xbc
   5cf10:	vld1.32	{d16[0]}, [r1 :32]
   5cf14:	vmovl.u8	q8, d16
   5cf18:	vmovl.u16	q8, d16
   5cf1c:	vcvt.f32.u32	q8, q8
   5cf20:	vst1.32	{d16-d17}, [r0]
   5cf24:	ldr	r0, [sp, #44]	; 0x2c
   5cf28:	add	sl, sl, r0, lsl #2
   5cf2c:	cmp	r5, r0
   5cf30:	bne	5ce08 <GetDataSlab+0x28cac>
   5cf34:	b	5cd40 <GetDataSlab+0x28be4>
   5cf38:	cmp	r3, #1
   5cf3c:	blt	35058 <GetDataSlab+0xefc>
   5cf40:	cmp	r5, #1
   5cf44:	mov	r0, #0
   5cf48:	blt	5b6a4 <GetDataSlab+0x27548>
   5cf4c:	ldr	r0, [sp, #60]	; 0x3c
   5cf50:	ldr	r1, [sp, #56]	; 0x38
   5cf54:	cmp	r5, #3
   5cf58:	mla	r0, r1, r8, r0
   5cf5c:	ldr	r1, [sp, #80]	; 0x50
   5cf60:	add	r0, r1, r0, lsl #1
   5cf64:	mov	r1, #1
   5cf68:	str	r0, [sp, #92]	; 0x5c
   5cf6c:	sub	r0, r5, #4
   5cf70:	add	r1, r1, r0, lsr #2
   5cf74:	lsr	r0, r0, #2
   5cf78:	str	r0, [sp, #52]	; 0x34
   5cf7c:	and	r2, r1, #1
   5cf80:	sub	r1, r1, r2
   5cf84:	str	r2, [sp, #60]	; 0x3c
   5cf88:	mov	r2, #0
   5cf8c:	str	r1, [sp, #44]	; 0x2c
   5cf90:	ldr	r1, [sp, #68]	; 0x44
   5cf94:	str	r2, [sp, #84]	; 0x54
   5cf98:	mov	r2, #0
   5cf9c:	movwhi	r2, #1
   5cfa0:	mov	r7, r1
   5cfa4:	sub	r1, r1, #1
   5cfa8:	clz	r1, r1
   5cfac:	lsl	r3, r7, #2
   5cfb0:	lsl	lr, r7, #4
   5cfb4:	lsr	r1, r1, #5
   5cfb8:	and	r1, r2, r1
   5cfbc:	str	r1, [sp, #80]	; 0x50
   5cfc0:	ldr	r1, [sp, #72]	; 0x48
   5cfc4:	mul	r1, r1, r8
   5cfc8:	lsl	r8, r7, #3
   5cfcc:	lsl	r1, r1, #1
   5cfd0:	str	r1, [sp, #72]	; 0x48
   5cfd4:	lsl	r1, r7, #1
   5cfd8:	str	r1, [sp, #48]	; 0x30
   5cfdc:	and	r1, r5, #1
   5cfe0:	str	r1, [sp, #64]	; 0x40
   5cfe4:	bic	r1, r5, #3
   5cfe8:	str	r1, [sp, #56]	; 0x38
   5cfec:	ldr	r0, [sp, #80]	; 0x50
   5cff0:	cmp	r0, #0
   5cff4:	bne	5d02c <GetDataSlab+0x28ed0>
   5cff8:	b	5d108 <GetDataSlab+0x28fac>
   5cffc:	ldr	r0, [sp, #72]	; 0x48
   5d000:	ldr	r1, [sp, #76]	; 0x4c
   5d004:	add	ip, ip, #1
   5d008:	str	ip, [sp, #84]	; 0x54
   5d00c:	add	r6, r6, r0
   5d010:	mov	r0, #0
   5d014:	cmp	ip, r1
   5d018:	str	r6, [sp, #92]	; 0x5c
   5d01c:	beq	5b6a4 <GetDataSlab+0x27548>
   5d020:	ldr	r0, [sp, #80]	; 0x50
   5d024:	cmp	r0, #0
   5d028:	beq	5d108 <GetDataSlab+0x28fac>
   5d02c:	ldr	r0, [sp, #52]	; 0x34
   5d030:	ldr	r4, [sp, #92]	; 0x5c
   5d034:	mov	r2, #32
   5d038:	cmp	r0, #0
   5d03c:	mov	r0, #0
   5d040:	str	r4, [sp, #92]	; 0x5c
   5d044:	beq	5d09c <GetDataSlab+0x28f40>
   5d048:	ldr	sl, [sp, #88]	; 0x58
   5d04c:	ldr	r9, [sp, #44]	; 0x2c
   5d050:	mov	ip, r4
   5d054:	add	r6, sp, #152	; 0x98
   5d058:	vld1.16	{d16}, [ip], lr
   5d05c:	add	r1, sl, #16
   5d060:	subs	r9, r9, #2
   5d064:	add	r0, r0, #8
   5d068:	vmovl.s16	q8, d16
   5d06c:	vcvt.f32.s32	q8, q8
   5d070:	vst1.32	{d16-d17}, [sl], r2
   5d074:	ldr	r7, [r4, r8]!
   5d078:	str	r7, [sp, #152]	; 0x98
   5d07c:	ldr	r4, [r4, #4]
   5d080:	str	r4, [sp, #156]	; 0x9c
   5d084:	mov	r4, ip
   5d088:	vld1.16	{d16}, [r6 :64]
   5d08c:	vmovl.s16	q8, d16
   5d090:	vcvt.f32.s32	q8, q8
   5d094:	vst1.32	{d16-d17}, [r1]
   5d098:	bne	5d058 <GetDataSlab+0x28efc>
   5d09c:	ldr	r1, [sp, #60]	; 0x3c
   5d0a0:	ldr	r6, [sp, #92]	; 0x5c
   5d0a4:	cmp	r1, #0
   5d0a8:	beq	5d0e4 <GetDataSlab+0x28f88>
   5d0ac:	ldr	r1, [sp, #68]	; 0x44
   5d0b0:	mov	r7, r6
   5d0b4:	mul	r1, r0, r1
   5d0b8:	ldr	r1, [r7, r1, lsl #1]!
   5d0bc:	str	r1, [sp, #144]	; 0x90
   5d0c0:	ldr	r1, [r7, #4]
   5d0c4:	str	r1, [sp, #148]	; 0x94
   5d0c8:	add	r1, sp, #144	; 0x90
   5d0cc:	vld1.16	{d16}, [r1 :64]
   5d0d0:	ldr	r1, [sp, #88]	; 0x58
   5d0d4:	add	r0, r1, r0, lsl #2
   5d0d8:	vmovl.s16	q8, d16
   5d0dc:	vcvt.f32.s32	q8, q8
   5d0e0:	vst1.32	{d16-d17}, [r0]
   5d0e4:	ldr	r1, [sp, #56]	; 0x38
   5d0e8:	ldr	r0, [sp, #88]	; 0x58
   5d0ec:	ldr	ip, [sp, #84]	; 0x54
   5d0f0:	add	r0, r0, r1, lsl #2
   5d0f4:	cmp	r5, r1
   5d0f8:	str	r0, [sp, #88]	; 0x58
   5d0fc:	mov	r0, r1
   5d100:	beq	5cffc <GetDataSlab+0x28ea0>
   5d104:	b	5d114 <GetDataSlab+0x28fb8>
   5d108:	ldr	r6, [sp, #92]	; 0x5c
   5d10c:	ldr	ip, [sp, #84]	; 0x54
   5d110:	mov	r0, #0
   5d114:	ldr	r1, [sp, #64]	; 0x40
   5d118:	cmp	r1, #0
   5d11c:	bne	5d134 <GetDataSlab+0x28fd8>
   5d120:	mov	r1, r0
   5d124:	orr	r0, r0, #1
   5d128:	cmp	r5, r0
   5d12c:	beq	5cffc <GetDataSlab+0x28ea0>
   5d130:	b	5d16c <GetDataSlab+0x29010>
   5d134:	ldr	r1, [sp, #68]	; 0x44
   5d138:	mul	r1, r0, r1
   5d13c:	add	r1, r6, r1, lsl #1
   5d140:	ldrsh	r1, [r1]
   5d144:	vmov	s0, r1
   5d148:	orr	r1, r0, #1
   5d14c:	vcvt.f32.s32	s0, s0
   5d150:	ldr	r2, [sp, #88]	; 0x58
   5d154:	vstr	s0, [r2]
   5d158:	add	r2, r2, #4
   5d15c:	str	r2, [sp, #88]	; 0x58
   5d160:	orr	r0, r0, #1
   5d164:	cmp	r5, r0
   5d168:	beq	5cffc <GetDataSlab+0x28ea0>
   5d16c:	ldr	r2, [sp, #48]	; 0x30
   5d170:	sub	r4, r5, r1
   5d174:	mul	r0, r2, r1
   5d178:	add	r1, r1, #1
   5d17c:	mul	r7, r2, r1
   5d180:	mov	r1, r6
   5d184:	ldr	r6, [sp, #88]	; 0x58
   5d188:	add	r2, r1, r0
   5d18c:	subs	r4, r4, #2
   5d190:	ldrsh	r2, [r2]
   5d194:	vmov	s0, r2
   5d198:	add	r2, r1, r7
   5d19c:	add	r1, r1, r3
   5d1a0:	vcvt.f32.s32	s0, s0
   5d1a4:	vstr	s0, [r6]
   5d1a8:	ldrsh	r2, [r2]
   5d1ac:	vmov	s0, r2
   5d1b0:	vcvt.f32.s32	s0, s0
   5d1b4:	vstr	s0, [r6, #4]
   5d1b8:	add	r6, r6, #8
   5d1bc:	bne	5d188 <GetDataSlab+0x2902c>
   5d1c0:	str	r6, [sp, #88]	; 0x58
   5d1c4:	ldr	r6, [sp, #92]	; 0x5c
   5d1c8:	b	5cffc <GetDataSlab+0x28ea0>
   5d1cc:	cmp	r3, #1
   5d1d0:	blt	35058 <GetDataSlab+0xefc>
   5d1d4:	cmp	r5, #1
   5d1d8:	mov	r0, #0
   5d1dc:	blt	5b6a4 <GetDataSlab+0x27548>
   5d1e0:	ldr	r0, [sp, #60]	; 0x3c
   5d1e4:	ldr	r1, [sp, #56]	; 0x38
   5d1e8:	cmp	r5, #3
   5d1ec:	mla	r0, r1, r8, r0
   5d1f0:	ldr	r1, [sp, #80]	; 0x50
   5d1f4:	add	r0, r1, r0, lsl #1
   5d1f8:	mov	r1, #1
   5d1fc:	str	r0, [sp, #92]	; 0x5c
   5d200:	sub	r0, r5, #4
   5d204:	add	r1, r1, r0, lsr #2
   5d208:	lsr	r0, r0, #2
   5d20c:	str	r0, [sp, #52]	; 0x34
   5d210:	and	r2, r1, #1
   5d214:	sub	r1, r1, r2
   5d218:	str	r2, [sp, #60]	; 0x3c
   5d21c:	mov	r2, #0
   5d220:	str	r1, [sp, #44]	; 0x2c
   5d224:	ldr	r1, [sp, #68]	; 0x44
   5d228:	str	r2, [sp, #84]	; 0x54
   5d22c:	mov	r2, #0
   5d230:	movwhi	r2, #1
   5d234:	mov	r7, r1
   5d238:	sub	r1, r1, #1
   5d23c:	clz	r1, r1
   5d240:	lsl	r3, r7, #2
   5d244:	lsl	lr, r7, #4
   5d248:	lsr	r1, r1, #5
   5d24c:	and	r1, r2, r1
   5d250:	str	r1, [sp, #80]	; 0x50
   5d254:	ldr	r1, [sp, #72]	; 0x48
   5d258:	mul	r1, r1, r8
   5d25c:	lsl	r8, r7, #3
   5d260:	lsl	r1, r1, #1
   5d264:	str	r1, [sp, #72]	; 0x48
   5d268:	lsl	r1, r7, #1
   5d26c:	str	r1, [sp, #48]	; 0x30
   5d270:	and	r1, r5, #1
   5d274:	str	r1, [sp, #64]	; 0x40
   5d278:	bic	r1, r5, #3
   5d27c:	str	r1, [sp, #56]	; 0x38
   5d280:	ldr	r0, [sp, #80]	; 0x50
   5d284:	cmp	r0, #0
   5d288:	bne	5d2c0 <GetDataSlab+0x29164>
   5d28c:	b	5d39c <GetDataSlab+0x29240>
   5d290:	ldr	r0, [sp, #72]	; 0x48
   5d294:	ldr	r1, [sp, #76]	; 0x4c
   5d298:	add	ip, ip, #1
   5d29c:	str	ip, [sp, #84]	; 0x54
   5d2a0:	add	r6, r6, r0
   5d2a4:	mov	r0, #0
   5d2a8:	cmp	ip, r1
   5d2ac:	str	r6, [sp, #92]	; 0x5c
   5d2b0:	beq	5b6a4 <GetDataSlab+0x27548>
   5d2b4:	ldr	r0, [sp, #80]	; 0x50
   5d2b8:	cmp	r0, #0
   5d2bc:	beq	5d39c <GetDataSlab+0x29240>
   5d2c0:	ldr	r0, [sp, #52]	; 0x34
   5d2c4:	ldr	r4, [sp, #92]	; 0x5c
   5d2c8:	mov	r2, #32
   5d2cc:	cmp	r0, #0
   5d2d0:	mov	r0, #0
   5d2d4:	str	r4, [sp, #92]	; 0x5c
   5d2d8:	beq	5d330 <GetDataSlab+0x291d4>
   5d2dc:	ldr	sl, [sp, #88]	; 0x58
   5d2e0:	ldr	r9, [sp, #44]	; 0x2c
   5d2e4:	mov	ip, r4
   5d2e8:	add	r6, sp, #168	; 0xa8
   5d2ec:	vld1.16	{d16}, [ip], lr
   5d2f0:	add	r1, sl, #16
   5d2f4:	subs	r9, r9, #2
   5d2f8:	add	r0, r0, #8
   5d2fc:	vmovl.u16	q8, d16
   5d300:	vcvt.f32.u32	q8, q8
   5d304:	vst1.32	{d16-d17}, [sl], r2
   5d308:	ldr	r7, [r4, r8]!
   5d30c:	str	r7, [sp, #168]	; 0xa8
   5d310:	ldr	r4, [r4, #4]
   5d314:	str	r4, [sp, #172]	; 0xac
   5d318:	mov	r4, ip
   5d31c:	vld1.16	{d16}, [r6 :64]
   5d320:	vmovl.u16	q8, d16
   5d324:	vcvt.f32.u32	q8, q8
   5d328:	vst1.32	{d16-d17}, [r1]
   5d32c:	bne	5d2ec <GetDataSlab+0x29190>
   5d330:	ldr	r1, [sp, #60]	; 0x3c
   5d334:	ldr	r6, [sp, #92]	; 0x5c
   5d338:	cmp	r1, #0
   5d33c:	beq	5d378 <GetDataSlab+0x2921c>
   5d340:	ldr	r1, [sp, #68]	; 0x44
   5d344:	mov	r7, r6
   5d348:	mul	r1, r0, r1
   5d34c:	ldr	r1, [r7, r1, lsl #1]!
   5d350:	str	r1, [sp, #160]	; 0xa0
   5d354:	ldr	r1, [r7, #4]
   5d358:	str	r1, [sp, #164]	; 0xa4
   5d35c:	add	r1, sp, #160	; 0xa0
   5d360:	vld1.16	{d16}, [r1 :64]
   5d364:	ldr	r1, [sp, #88]	; 0x58
   5d368:	add	r0, r1, r0, lsl #2
   5d36c:	vmovl.u16	q8, d16
   5d370:	vcvt.f32.u32	q8, q8
   5d374:	vst1.32	{d16-d17}, [r0]
   5d378:	ldr	r1, [sp, #56]	; 0x38
   5d37c:	ldr	r0, [sp, #88]	; 0x58
   5d380:	ldr	ip, [sp, #84]	; 0x54
   5d384:	add	r0, r0, r1, lsl #2
   5d388:	cmp	r5, r1
   5d38c:	str	r0, [sp, #88]	; 0x58
   5d390:	mov	r0, r1
   5d394:	beq	5d290 <GetDataSlab+0x29134>
   5d398:	b	5d3a8 <GetDataSlab+0x2924c>
   5d39c:	ldr	r6, [sp, #92]	; 0x5c
   5d3a0:	ldr	ip, [sp, #84]	; 0x54
   5d3a4:	mov	r0, #0
   5d3a8:	ldr	r1, [sp, #64]	; 0x40
   5d3ac:	cmp	r1, #0
   5d3b0:	bne	5d3c8 <GetDataSlab+0x2926c>
   5d3b4:	mov	r1, r0
   5d3b8:	orr	r0, r0, #1
   5d3bc:	cmp	r5, r0
   5d3c0:	beq	5d290 <GetDataSlab+0x29134>
   5d3c4:	b	5d400 <GetDataSlab+0x292a4>
   5d3c8:	ldr	r1, [sp, #68]	; 0x44
   5d3cc:	mul	r1, r0, r1
   5d3d0:	add	r1, r6, r1, lsl #1
   5d3d4:	ldrh	r1, [r1]
   5d3d8:	vmov	s0, r1
   5d3dc:	orr	r1, r0, #1
   5d3e0:	vcvt.f32.u32	s0, s0
   5d3e4:	ldr	r2, [sp, #88]	; 0x58
   5d3e8:	vstr	s0, [r2]
   5d3ec:	add	r2, r2, #4
   5d3f0:	str	r2, [sp, #88]	; 0x58
   5d3f4:	orr	r0, r0, #1
   5d3f8:	cmp	r5, r0
   5d3fc:	beq	5d290 <GetDataSlab+0x29134>
   5d400:	ldr	r2, [sp, #48]	; 0x30
   5d404:	sub	r4, r5, r1
   5d408:	mul	r0, r2, r1
   5d40c:	add	r1, r1, #1
   5d410:	mul	r7, r2, r1
   5d414:	mov	r1, r6
   5d418:	ldr	r6, [sp, #88]	; 0x58
   5d41c:	add	r2, r1, r0
   5d420:	subs	r4, r4, #2
   5d424:	ldrh	r2, [r2]
   5d428:	vmov	s0, r2
   5d42c:	add	r2, r1, r7
   5d430:	add	r1, r1, r3
   5d434:	vcvt.f32.u32	s0, s0
   5d438:	vstr	s0, [r6]
   5d43c:	ldrh	r2, [r2]
   5d440:	vmov	s0, r2
   5d444:	vcvt.f32.u32	s0, s0
   5d448:	vstr	s0, [r6, #4]
   5d44c:	add	r6, r6, #8
   5d450:	bne	5d41c <GetDataSlab+0x292c0>
   5d454:	str	r6, [sp, #88]	; 0x58
   5d458:	ldr	r6, [sp, #92]	; 0x5c
   5d45c:	b	5d290 <GetDataSlab+0x29134>
   5d460:	cmp	r3, #1
   5d464:	blt	35058 <GetDataSlab+0xefc>
   5d468:	cmp	r5, #1
   5d46c:	mov	r0, #0
   5d470:	blt	5b6a4 <GetDataSlab+0x27548>
   5d474:	ldr	r0, [sp, #60]	; 0x3c
   5d478:	ldr	r1, [sp, #56]	; 0x38
   5d47c:	mov	r3, r8
   5d480:	cmp	r5, #3
   5d484:	mov	r6, #0
   5d488:	mla	r0, r1, r8, r0
   5d48c:	ldr	r1, [sp, #80]	; 0x50
   5d490:	add	r8, r1, r0, lsl #2
   5d494:	sub	r0, r5, #4
   5d498:	mov	r1, #1
   5d49c:	add	r1, r1, r0, lsr #2
   5d4a0:	lsr	r0, r0, #2
   5d4a4:	str	r0, [sp, #64]	; 0x40
   5d4a8:	and	r2, r1, #1
   5d4ac:	sub	r1, r1, r2
   5d4b0:	str	r2, [sp, #60]	; 0x3c
   5d4b4:	mov	r2, #0
   5d4b8:	movwhi	r2, #1
   5d4bc:	str	r1, [sp, #52]	; 0x34
   5d4c0:	ldr	r1, [sp, #68]	; 0x44
   5d4c4:	mov	r7, r1
   5d4c8:	sub	r1, r1, #1
   5d4cc:	clz	r1, r1
   5d4d0:	lsl	lr, r7, #5
   5d4d4:	lsl	ip, r7, #4
   5d4d8:	lsr	r1, r1, #5
   5d4dc:	and	r1, r2, r1
   5d4e0:	str	r1, [sp, #92]	; 0x5c
   5d4e4:	ldr	r1, [sp, #72]	; 0x48
   5d4e8:	mul	r1, r1, r3
   5d4ec:	lsl	r3, r7, #3
   5d4f0:	lsl	r1, r1, #2
   5d4f4:	str	r1, [sp, #84]	; 0x54
   5d4f8:	lsl	r1, r7, #2
   5d4fc:	str	r1, [sp, #56]	; 0x38
   5d500:	and	r1, r5, #1
   5d504:	str	r1, [sp, #80]	; 0x50
   5d508:	bic	r1, r5, #3
   5d50c:	str	r1, [sp, #72]	; 0x48
   5d510:	ldr	r0, [sp, #92]	; 0x5c
   5d514:	cmp	r0, #0
   5d518:	bne	5d54c <GetDataSlab+0x293f0>
   5d51c:	b	5d5e8 <GetDataSlab+0x2948c>
   5d520:	ldr	r0, [sp, #84]	; 0x54
   5d524:	ldr	r1, [sp, #76]	; 0x4c
   5d528:	add	r9, r9, #1
   5d52c:	mov	r6, r9
   5d530:	add	r8, r8, r0
   5d534:	mov	r0, #0
   5d538:	cmp	r9, r1
   5d53c:	beq	5b6a4 <GetDataSlab+0x27548>
   5d540:	ldr	r0, [sp, #92]	; 0x5c
   5d544:	cmp	r0, #0
   5d548:	beq	5d5e8 <GetDataSlab+0x2948c>
   5d54c:	ldr	r0, [sp, #64]	; 0x40
   5d550:	mov	r2, #32
   5d554:	cmp	r0, #0
   5d558:	mov	r0, #0
   5d55c:	beq	5d598 <GetDataSlab+0x2943c>
   5d560:	ldr	sl, [sp, #88]	; 0x58
   5d564:	ldr	r9, [sp, #52]	; 0x34
   5d568:	mov	r1, r8
   5d56c:	add	r4, r1, ip
   5d570:	vld1.32	{d16-d17}, [r1], lr
   5d574:	add	r7, sl, #16
   5d578:	subs	r9, r9, #2
   5d57c:	add	r0, r0, #8
   5d580:	vcvt.f32.s32	q8, q8
   5d584:	vst1.32	{d16-d17}, [sl], r2
   5d588:	vld1.32	{d16-d17}, [r4]
   5d58c:	vcvt.f32.s32	q8, q8
   5d590:	vst1.32	{d16-d17}, [r7]
   5d594:	bne	5d56c <GetDataSlab+0x29410>
   5d598:	ldr	r1, [sp, #60]	; 0x3c
   5d59c:	cmp	r1, #0
   5d5a0:	beq	5d5c4 <GetDataSlab+0x29468>
   5d5a4:	ldr	r1, [sp, #68]	; 0x44
   5d5a8:	mul	r1, r0, r1
   5d5ac:	add	r1, r8, r1, lsl #2
   5d5b0:	vld1.32	{d16-d17}, [r1]
   5d5b4:	ldr	r1, [sp, #88]	; 0x58
   5d5b8:	add	r0, r1, r0, lsl #2
   5d5bc:	vcvt.f32.s32	q8, q8
   5d5c0:	vst1.32	{d16-d17}, [r0]
   5d5c4:	ldr	r1, [sp, #72]	; 0x48
   5d5c8:	ldr	r0, [sp, #88]	; 0x58
   5d5cc:	mov	r9, r6
   5d5d0:	add	r0, r0, r1, lsl #2
   5d5d4:	cmp	r5, r1
   5d5d8:	str	r0, [sp, #88]	; 0x58
   5d5dc:	mov	r0, r1
   5d5e0:	beq	5d520 <GetDataSlab+0x293c4>
   5d5e4:	b	5d5f0 <GetDataSlab+0x29494>
   5d5e8:	mov	r0, #0
   5d5ec:	mov	r9, r6
   5d5f0:	ldr	r1, [sp, #80]	; 0x50
   5d5f4:	cmp	r1, #0
   5d5f8:	bne	5d610 <GetDataSlab+0x294b4>
   5d5fc:	mov	r4, r0
   5d600:	orr	r0, r0, #1
   5d604:	cmp	r5, r0
   5d608:	beq	5d520 <GetDataSlab+0x293c4>
   5d60c:	b	5d644 <GetDataSlab+0x294e8>
   5d610:	ldr	r1, [sp, #68]	; 0x44
   5d614:	orr	r4, r0, #1
   5d618:	mul	r1, r0, r1
   5d61c:	add	r1, r8, r1, lsl #2
   5d620:	vldr	s0, [r1]
   5d624:	vcvt.f32.s32	s0, s0
   5d628:	ldr	r1, [sp, #88]	; 0x58
   5d62c:	vstr	s0, [r1]
   5d630:	add	r1, r1, #4
   5d634:	str	r1, [sp, #88]	; 0x58
   5d638:	orr	r0, r0, #1
   5d63c:	cmp	r5, r0
   5d640:	beq	5d520 <GetDataSlab+0x293c4>
   5d644:	ldr	r2, [sp, #56]	; 0x38
   5d648:	sub	r1, r5, r4
   5d64c:	ldr	r6, [sp, #88]	; 0x58
   5d650:	mov	r7, r8
   5d654:	mul	r0, r2, r4
   5d658:	add	r4, r4, #1
   5d65c:	mul	r4, r2, r4
   5d660:	add	r2, r7, r0
   5d664:	subs	r1, r1, #2
   5d668:	vldr	s0, [r2]
   5d66c:	add	r2, r7, r4
   5d670:	add	r7, r7, r3
   5d674:	vcvt.f32.s32	s0, s0
   5d678:	vstr	s0, [r6]
   5d67c:	vldr	s0, [r2]
   5d680:	vcvt.f32.s32	s0, s0
   5d684:	vstr	s0, [r6, #4]
   5d688:	add	r6, r6, #8
   5d68c:	bne	5d660 <GetDataSlab+0x29504>
   5d690:	str	r6, [sp, #88]	; 0x58
   5d694:	b	5d520 <GetDataSlab+0x293c4>
   5d698:	cmp	r3, #1
   5d69c:	blt	35058 <GetDataSlab+0xefc>
   5d6a0:	cmp	r5, #1
   5d6a4:	mov	r0, #0
   5d6a8:	blt	5b6a4 <GetDataSlab+0x27548>
   5d6ac:	ldr	r0, [sp, #60]	; 0x3c
   5d6b0:	ldr	r1, [sp, #56]	; 0x38
   5d6b4:	mov	r3, r8
   5d6b8:	cmp	r5, #3
   5d6bc:	mov	r6, #0
   5d6c0:	mla	r0, r1, r8, r0
   5d6c4:	ldr	r1, [sp, #80]	; 0x50
   5d6c8:	add	r8, r1, r0, lsl #2
   5d6cc:	sub	r0, r5, #4
   5d6d0:	mov	r1, #1
   5d6d4:	add	r1, r1, r0, lsr #2
   5d6d8:	lsr	r0, r0, #2
   5d6dc:	str	r0, [sp, #64]	; 0x40
   5d6e0:	and	r2, r1, #1
   5d6e4:	sub	r1, r1, r2
   5d6e8:	str	r2, [sp, #60]	; 0x3c
   5d6ec:	mov	r2, #0
   5d6f0:	movwhi	r2, #1
   5d6f4:	str	r1, [sp, #52]	; 0x34
   5d6f8:	ldr	r1, [sp, #68]	; 0x44
   5d6fc:	mov	r7, r1
   5d700:	sub	r1, r1, #1
   5d704:	clz	r1, r1
   5d708:	lsl	lr, r7, #5
   5d70c:	lsl	ip, r7, #4
   5d710:	lsr	r1, r1, #5
   5d714:	and	r1, r2, r1
   5d718:	str	r1, [sp, #92]	; 0x5c
   5d71c:	ldr	r1, [sp, #72]	; 0x48
   5d720:	mul	r1, r1, r3
   5d724:	lsl	r3, r7, #3
   5d728:	lsl	r1, r1, #2
   5d72c:	str	r1, [sp, #84]	; 0x54
   5d730:	lsl	r1, r7, #2
   5d734:	str	r1, [sp, #56]	; 0x38
   5d738:	and	r1, r5, #1
   5d73c:	str	r1, [sp, #80]	; 0x50
   5d740:	bic	r1, r5, #3
   5d744:	str	r1, [sp, #72]	; 0x48
   5d748:	ldr	r0, [sp, #92]	; 0x5c
   5d74c:	cmp	r0, #0
   5d750:	bne	5d784 <GetDataSlab+0x29628>
   5d754:	b	5d820 <GetDataSlab+0x296c4>
   5d758:	ldr	r0, [sp, #84]	; 0x54
   5d75c:	ldr	r1, [sp, #76]	; 0x4c
   5d760:	add	r9, r9, #1
   5d764:	mov	r6, r9
   5d768:	add	r8, r8, r0
   5d76c:	mov	r0, #0
   5d770:	cmp	r9, r1
   5d774:	beq	5b6a4 <GetDataSlab+0x27548>
   5d778:	ldr	r0, [sp, #92]	; 0x5c
   5d77c:	cmp	r0, #0
   5d780:	beq	5d820 <GetDataSlab+0x296c4>
   5d784:	ldr	r0, [sp, #64]	; 0x40
   5d788:	mov	r2, #32
   5d78c:	cmp	r0, #0
   5d790:	mov	r0, #0
   5d794:	beq	5d7d0 <GetDataSlab+0x29674>
   5d798:	ldr	sl, [sp, #88]	; 0x58
   5d79c:	ldr	r9, [sp, #52]	; 0x34
   5d7a0:	mov	r1, r8
   5d7a4:	add	r4, r1, ip
   5d7a8:	vld1.32	{d16-d17}, [r1], lr
   5d7ac:	add	r7, sl, #16
   5d7b0:	subs	r9, r9, #2
   5d7b4:	add	r0, r0, #8
   5d7b8:	vcvt.f32.u32	q8, q8
   5d7bc:	vst1.32	{d16-d17}, [sl], r2
   5d7c0:	vld1.32	{d16-d17}, [r4]
   5d7c4:	vcvt.f32.u32	q8, q8
   5d7c8:	vst1.32	{d16-d17}, [r7]
   5d7cc:	bne	5d7a4 <GetDataSlab+0x29648>
   5d7d0:	ldr	r1, [sp, #60]	; 0x3c
   5d7d4:	cmp	r1, #0
   5d7d8:	beq	5d7fc <GetDataSlab+0x296a0>
   5d7dc:	ldr	r1, [sp, #68]	; 0x44
   5d7e0:	mul	r1, r0, r1
   5d7e4:	add	r1, r8, r1, lsl #2
   5d7e8:	vld1.32	{d16-d17}, [r1]
   5d7ec:	ldr	r1, [sp, #88]	; 0x58
   5d7f0:	add	r0, r1, r0, lsl #2
   5d7f4:	vcvt.f32.u32	q8, q8
   5d7f8:	vst1.32	{d16-d17}, [r0]
   5d7fc:	ldr	r1, [sp, #72]	; 0x48
   5d800:	ldr	r0, [sp, #88]	; 0x58
   5d804:	mov	r9, r6
   5d808:	add	r0, r0, r1, lsl #2
   5d80c:	cmp	r5, r1
   5d810:	str	r0, [sp, #88]	; 0x58
   5d814:	mov	r0, r1
   5d818:	beq	5d758 <GetDataSlab+0x295fc>
   5d81c:	b	5d828 <GetDataSlab+0x296cc>
   5d820:	mov	r0, #0
   5d824:	mov	r9, r6
   5d828:	ldr	r1, [sp, #80]	; 0x50
   5d82c:	cmp	r1, #0
   5d830:	bne	5d848 <GetDataSlab+0x296ec>
   5d834:	mov	r4, r0
   5d838:	orr	r0, r0, #1
   5d83c:	cmp	r5, r0
   5d840:	beq	5d758 <GetDataSlab+0x295fc>
   5d844:	b	5d87c <GetDataSlab+0x29720>
   5d848:	ldr	r1, [sp, #68]	; 0x44
   5d84c:	orr	r4, r0, #1
   5d850:	mul	r1, r0, r1
   5d854:	add	r1, r8, r1, lsl #2
   5d858:	vldr	s0, [r1]
   5d85c:	vcvt.f32.u32	s0, s0
   5d860:	ldr	r1, [sp, #88]	; 0x58
   5d864:	vstr	s0, [r1]
   5d868:	add	r1, r1, #4
   5d86c:	str	r1, [sp, #88]	; 0x58
   5d870:	orr	r0, r0, #1
   5d874:	cmp	r5, r0
   5d878:	beq	5d758 <GetDataSlab+0x295fc>
   5d87c:	ldr	r2, [sp, #56]	; 0x38
   5d880:	sub	r1, r5, r4
   5d884:	ldr	r6, [sp, #88]	; 0x58
   5d888:	mov	r7, r8
   5d88c:	mul	r0, r2, r4
   5d890:	add	r4, r4, #1
   5d894:	mul	r4, r2, r4
   5d898:	add	r2, r7, r0
   5d89c:	subs	r1, r1, #2
   5d8a0:	vldr	s0, [r2]
   5d8a4:	add	r2, r7, r4
   5d8a8:	add	r7, r7, r3
   5d8ac:	vcvt.f32.u32	s0, s0
   5d8b0:	vstr	s0, [r6]
   5d8b4:	vldr	s0, [r2]
   5d8b8:	vcvt.f32.u32	s0, s0
   5d8bc:	vstr	s0, [r6, #4]
   5d8c0:	add	r6, r6, #8
   5d8c4:	bne	5d898 <GetDataSlab+0x2973c>
   5d8c8:	str	r6, [sp, #88]	; 0x58
   5d8cc:	b	5d758 <GetDataSlab+0x295fc>
   5d8d0:	cmp	r3, #1
   5d8d4:	blt	35058 <GetDataSlab+0xefc>
   5d8d8:	cmp	r5, #1
   5d8dc:	mov	r0, #0
   5d8e0:	blt	5b6a4 <GetDataSlab+0x27548>
   5d8e4:	ldr	r7, [sp, #60]	; 0x3c
   5d8e8:	ldr	r3, [sp, #56]	; 0x38
   5d8ec:	ldr	r2, [sp, #80]	; 0x50
   5d8f0:	mla	r0, r3, r8, r7
   5d8f4:	add	r1, r2, r0, lsl #2
   5d8f8:	and	r0, r5, #1
   5d8fc:	str	r0, [sp, #92]	; 0x5c
   5d900:	sub	r9, r5, r0
   5d904:	mul	r0, r3, r8
   5d908:	ldr	r3, [sp, #68]	; 0x44
   5d90c:	lsl	r0, r0, #2
   5d910:	add	r0, r0, r3, lsl #2
   5d914:	lsl	sl, r3, #3
   5d918:	add	r0, r0, r7, lsl #2
   5d91c:	add	r7, r2, r0
   5d920:	ldr	r0, [sp, #72]	; 0x48
   5d924:	mul	r0, r0, r8
   5d928:	mov	r8, #0
   5d92c:	lsl	lr, r0, #2
   5d930:	cmp	r5, #1
   5d934:	beq	5d978 <GetDataSlab+0x2981c>
   5d938:	b	5d98c <GetDataSlab+0x29830>
   5d93c:	ldr	r2, [sp, #68]	; 0x44
   5d940:	mul	r0, r0, r2
   5d944:	ldr	r2, [sp, #88]	; 0x58
   5d948:	ldr	r0, [r1, r0, lsl #2]
   5d94c:	str	r0, [r2], #4
   5d950:	str	r2, [sp, #88]	; 0x58
   5d954:	ldr	r2, [sp, #76]	; 0x4c
   5d958:	add	r8, r8, #1
   5d95c:	add	r7, r7, lr
   5d960:	add	r1, r1, lr
   5d964:	mov	r0, #0
   5d968:	cmp	r8, r2
   5d96c:	beq	5b6a4 <GetDataSlab+0x27548>
   5d970:	cmp	r5, #1
   5d974:	bne	5d98c <GetDataSlab+0x29830>
   5d978:	mov	r0, #0
   5d97c:	ldr	r2, [sp, #92]	; 0x5c
   5d980:	cmp	r2, #0
   5d984:	beq	5d954 <GetDataSlab+0x297f8>
   5d988:	b	5d93c <GetDataSlab+0x297e0>
   5d98c:	ldr	ip, [sp, #88]	; 0x58
   5d990:	mov	r6, #0
   5d994:	mov	r0, #0
   5d998:	mov	r2, ip
   5d99c:	mov	r3, r2
   5d9a0:	ldr	r2, [r1, -r6]
   5d9a4:	mov	r4, ip
   5d9a8:	str	r2, [r4, r0, lsl #2]!
   5d9ac:	add	r0, r0, #2
   5d9b0:	ldr	r2, [r7, -r6]
   5d9b4:	sub	r6, r6, sl
   5d9b8:	cmp	r9, r0
   5d9bc:	str	r2, [r4, #4]
   5d9c0:	add	r2, r4, #8
   5d9c4:	bne	5d99c <GetDataSlab+0x29840>
   5d9c8:	add	r2, r3, #8
   5d9cc:	str	r2, [sp, #88]	; 0x58
   5d9d0:	ldr	r2, [sp, #92]	; 0x5c
   5d9d4:	cmp	r2, #0
   5d9d8:	bne	5d93c <GetDataSlab+0x297e0>
   5d9dc:	b	5d954 <GetDataSlab+0x297f8>
   5d9e0:	cmp	r3, #1
   5d9e4:	blt	35058 <GetDataSlab+0xefc>
   5d9e8:	cmp	r5, #1
   5d9ec:	mov	r0, #0
   5d9f0:	blt	5b6a4 <GetDataSlab+0x27548>
   5d9f4:	ldr	r0, [sp, #60]	; 0x3c
   5d9f8:	ldr	r1, [sp, #56]	; 0x38
   5d9fc:	cmp	r5, #1
   5da00:	mov	r6, #0
   5da04:	mla	r0, r1, r8, r0
   5da08:	ldr	r1, [sp, #80]	; 0x50
   5da0c:	add	ip, r1, r0, lsl #3
   5da10:	sub	r0, r5, #2
   5da14:	mov	r1, #1
   5da18:	add	r1, r1, r0, lsr #1
   5da1c:	lsr	r0, r0, #1
   5da20:	str	r0, [sp, #64]	; 0x40
   5da24:	and	r2, r1, #1
   5da28:	sub	r1, r1, r2
   5da2c:	str	r2, [sp, #60]	; 0x3c
   5da30:	mov	r2, #0
   5da34:	movwhi	r2, #1
   5da38:	str	r1, [sp, #52]	; 0x34
   5da3c:	ldr	r1, [sp, #68]	; 0x44
   5da40:	mov	r3, r1
   5da44:	sub	r1, r1, #1
   5da48:	clz	r1, r1
   5da4c:	lsl	lr, r3, #5
   5da50:	lsr	r1, r1, #5
   5da54:	and	r1, r2, r1
   5da58:	str	r1, [sp, #92]	; 0x5c
   5da5c:	ldr	r1, [sp, #72]	; 0x48
   5da60:	mul	r1, r1, r8
   5da64:	lsl	r1, r1, #3
   5da68:	str	r1, [sp, #84]	; 0x54
   5da6c:	lsl	r1, r3, #3
   5da70:	lsl	r3, r3, #4
   5da74:	str	r1, [sp, #56]	; 0x38
   5da78:	and	r1, r5, #1
   5da7c:	str	r1, [sp, #80]	; 0x50
   5da80:	bic	r1, r5, #1
   5da84:	str	r1, [sp, #72]	; 0x48
   5da88:	ldr	r0, [sp, #92]	; 0x5c
   5da8c:	cmp	r0, #0
   5da90:	bne	5dac8 <GetDataSlab+0x2996c>
   5da94:	b	5db68 <GetDataSlab+0x29a0c>
   5da98:	ldr	r0, [sp, #84]	; 0x54
   5da9c:	ldr	r1, [sp, #76]	; 0x4c
   5daa0:	add	r8, r8, #1
   5daa4:	str	r2, [sp, #88]	; 0x58
   5daa8:	mov	r6, r8
   5daac:	add	ip, ip, r0
   5dab0:	mov	r0, #0
   5dab4:	cmp	r8, r1
   5dab8:	beq	5b6a4 <GetDataSlab+0x27548>
   5dabc:	ldr	r0, [sp, #92]	; 0x5c
   5dac0:	cmp	r0, #0
   5dac4:	beq	5db68 <GetDataSlab+0x29a0c>
   5dac8:	ldr	r0, [sp, #64]	; 0x40
   5dacc:	ldr	sl, [sp, #88]	; 0x58
   5dad0:	cmp	r0, #0
   5dad4:	mov	r0, #0
   5dad8:	beq	5db20 <GetDataSlab+0x299c4>
   5dadc:	ldr	r8, [sp, #52]	; 0x34
   5dae0:	mov	r1, ip
   5dae4:	mov	r9, sl
   5dae8:	mov	r2, #16
   5daec:	add	r4, r1, r3
   5daf0:	vld1.64	{d16-d17}, [r1], lr
   5daf4:	subs	r8, r8, #2
   5daf8:	add	r0, r0, #4
   5dafc:	vcvt.f32.f64	s1, d17
   5db00:	vcvt.f32.f64	s0, d16
   5db04:	vst1.32	{d0}, [r9], r2
   5db08:	vld1.64	{d16-d17}, [r4]
   5db0c:	vcvt.f32.f64	s1, d17
   5db10:	vcvt.f32.f64	s0, d16
   5db14:	vstr	d0, [sl, #8]
   5db18:	mov	sl, r9
   5db1c:	bne	5daec <GetDataSlab+0x29990>
   5db20:	ldr	r1, [sp, #60]	; 0x3c
   5db24:	ldr	r2, [sp, #88]	; 0x58
   5db28:	cmp	r1, #0
   5db2c:	beq	5db50 <GetDataSlab+0x299f4>
   5db30:	ldr	r1, [sp, #68]	; 0x44
   5db34:	mul	r1, r0, r1
   5db38:	add	r0, r2, r0, lsl #2
   5db3c:	add	r1, ip, r1, lsl #3
   5db40:	vld1.64	{d16-d17}, [r1]
   5db44:	vcvt.f32.f64	s1, d17
   5db48:	vcvt.f32.f64	s0, d16
   5db4c:	vstr	d0, [r0]
   5db50:	ldr	r0, [sp, #72]	; 0x48
   5db54:	mov	r8, r6
   5db58:	add	r2, r2, r0, lsl #2
   5db5c:	cmp	r5, r0
   5db60:	beq	5da98 <GetDataSlab+0x2993c>
   5db64:	b	5db74 <GetDataSlab+0x29a18>
   5db68:	ldr	r2, [sp, #88]	; 0x58
   5db6c:	mov	r0, #0
   5db70:	mov	r8, r6
   5db74:	ldr	r1, [sp, #80]	; 0x50
   5db78:	cmp	r1, #0
   5db7c:	bne	5db94 <GetDataSlab+0x29a38>
   5db80:	mov	r4, r0
   5db84:	orr	r0, r0, #1
   5db88:	cmp	r5, r0
   5db8c:	beq	5da98 <GetDataSlab+0x2993c>
   5db90:	b	5dbc0 <GetDataSlab+0x29a64>
   5db94:	ldr	r1, [sp, #68]	; 0x44
   5db98:	orr	r4, r0, #1
   5db9c:	mul	r1, r0, r1
   5dba0:	add	r1, ip, r1, lsl #3
   5dba4:	vldr	d16, [r1]
   5dba8:	vcvt.f32.f64	s0, d16
   5dbac:	vstr	s0, [r2]
   5dbb0:	add	r2, r2, #4
   5dbb4:	orr	r0, r0, #1
   5dbb8:	cmp	r5, r0
   5dbbc:	beq	5da98 <GetDataSlab+0x2993c>
   5dbc0:	ldr	r6, [sp, #56]	; 0x38
   5dbc4:	sub	r1, r5, r4
   5dbc8:	mul	r0, r6, r4
   5dbcc:	add	r4, r4, #1
   5dbd0:	mul	r4, r6, r4
   5dbd4:	mov	r6, ip
   5dbd8:	add	r7, r6, r0
   5dbdc:	subs	r1, r1, #2
   5dbe0:	vldr	d16, [r7]
   5dbe4:	add	r7, r6, r4
   5dbe8:	add	r6, r6, r3
   5dbec:	vcvt.f32.f64	s0, d16
   5dbf0:	vstr	s0, [r2]
   5dbf4:	vldr	d16, [r7]
   5dbf8:	vcvt.f32.f64	s0, d16
   5dbfc:	vstr	s0, [r2, #4]
   5dc00:	add	r2, r2, #8
   5dc04:	bne	5dbd8 <GetDataSlab+0x29a7c>
   5dc08:	b	5da98 <GetDataSlab+0x2993c>
   5dc0c:	cmp	r3, #1
   5dc10:	blt	35058 <GetDataSlab+0xefc>
   5dc14:	cmp	r5, #1
   5dc18:	mov	r0, #0
   5dc1c:	blt	5b6a4 <GetDataSlab+0x27548>
   5dc20:	ldr	r0, [sp, #60]	; 0x3c
   5dc24:	ldr	r1, [sp, #56]	; 0x38
   5dc28:	cmp	r5, #1
   5dc2c:	ldr	r9, [sp, #88]	; 0x58
   5dc30:	mov	r6, #0
   5dc34:	mla	r0, r1, r8, r0
   5dc38:	ldr	r1, [sp, #80]	; 0x50
   5dc3c:	add	sl, r1, r0, lsl #3
   5dc40:	sub	r0, r5, #2
   5dc44:	mov	r1, #1
   5dc48:	add	r1, r1, r0, lsr #1
   5dc4c:	lsr	r0, r0, #1
   5dc50:	str	r0, [sp, #20]
   5dc54:	and	r2, r1, #1
   5dc58:	sub	r1, r1, r2
   5dc5c:	str	r2, [sp, #28]
   5dc60:	mov	r2, #0
   5dc64:	movwhi	r2, #1
   5dc68:	str	r1, [sp, #12]
   5dc6c:	ldr	r1, [sp, #68]	; 0x44
   5dc70:	mov	r7, r1
   5dc74:	sub	r1, r1, #1
   5dc78:	clz	r1, r1
   5dc7c:	lsl	r3, r7, #5
   5dc80:	lsr	r1, r1, #5
   5dc84:	str	r3, [sp, #52]	; 0x34
   5dc88:	and	r1, r2, r1
   5dc8c:	ldr	r2, [sp, #76]	; 0x4c
   5dc90:	str	r1, [sp, #44]	; 0x2c
   5dc94:	ldr	r1, [sp, #72]	; 0x48
   5dc98:	mul	r1, r1, r8
   5dc9c:	lsl	r1, r1, #3
   5dca0:	str	r1, [sp, #40]	; 0x28
   5dca4:	lsl	r1, r7, #3
   5dca8:	str	r1, [sp, #16]
   5dcac:	lsl	r1, r7, #4
   5dcb0:	ldr	r7, [sp, #84]	; 0x54
   5dcb4:	str	r1, [sp, #92]	; 0x5c
   5dcb8:	and	r1, r5, #1
   5dcbc:	str	r1, [sp, #32]
   5dcc0:	bic	r1, r5, #1
   5dcc4:	str	r1, [sp, #24]
   5dcc8:	ldr	r0, [sp, #44]	; 0x2c
   5dccc:	cmp	r0, #0
   5dcd0:	bne	5dcf8 <GetDataSlab+0x29b9c>
   5dcd4:	b	5de14 <GetDataSlab+0x29cb8>
   5dcd8:	ldr	r0, [sp, #40]	; 0x28
   5dcdc:	add	r6, r6, #1
   5dce0:	cmp	r6, r2
   5dce4:	add	sl, sl, r0
   5dce8:	beq	63dec <GetDataSlab+0x2fc90>
   5dcec:	ldr	r0, [sp, #44]	; 0x2c
   5dcf0:	cmp	r0, #0
   5dcf4:	beq	5de14 <GetDataSlab+0x29cb8>
   5dcf8:	ldr	r0, [sp, #20]
   5dcfc:	mov	r7, #0
   5dd00:	str	r6, [sp, #48]	; 0x30
   5dd04:	str	r9, [sp, #88]	; 0x58
   5dd08:	str	sl, [sp, #36]	; 0x24
   5dd0c:	cmp	r0, #0
   5dd10:	beq	5dd9c <GetDataSlab+0x29c40>
   5dd14:	ldr	r4, [sp, #12]
   5dd18:	mov	r6, sl
   5dd1c:	mov	r8, r9
   5dd20:	vld1.64	{d8-d9}, [r6], r3
   5dd24:	vmov.32	r0, d9[0]
   5dd28:	vmov.32	r1, d9[1]
   5dd2c:	bl	71774 <__aeabi_l2f>
   5dd30:	vmov.32	r2, d8[0]
   5dd34:	vmov.32	r1, d8[1]
   5dd38:	vmov	s17, r0
   5dd3c:	mov	r0, r2
   5dd40:	bl	71774 <__aeabi_l2f>
   5dd44:	vmov	s16, r0
   5dd48:	mov	r0, #16
   5dd4c:	vst1.32	{d8}, [r8], r0
   5dd50:	ldr	r0, [sp, #92]	; 0x5c
   5dd54:	add	r0, sl, r0
   5dd58:	vld1.64	{d8-d9}, [r0]
   5dd5c:	vmov.32	r0, d9[0]
   5dd60:	vmov.32	r1, d9[1]
   5dd64:	bl	71774 <__aeabi_l2f>
   5dd68:	vmov.32	r2, d8[0]
   5dd6c:	vmov.32	r1, d8[1]
   5dd70:	vmov	s17, r0
   5dd74:	mov	r0, r2
   5dd78:	bl	71774 <__aeabi_l2f>
   5dd7c:	vmov	s16, r0
   5dd80:	ldr	r3, [sp, #52]	; 0x34
   5dd84:	subs	r4, r4, #2
   5dd88:	add	r7, r7, #4
   5dd8c:	mov	sl, r6
   5dd90:	vstr	d8, [r9, #8]
   5dd94:	mov	r9, r8
   5dd98:	bne	5dd20 <GetDataSlab+0x29bc4>
   5dd9c:	ldr	r0, [sp, #28]
   5dda0:	ldr	r9, [sp, #88]	; 0x58
   5dda4:	ldr	r8, [sp, #64]	; 0x40
   5dda8:	ldr	sl, [sp, #36]	; 0x24
   5ddac:	cmp	r0, #0
   5ddb0:	beq	5ddf4 <GetDataSlab+0x29c98>
   5ddb4:	ldr	r0, [sp, #68]	; 0x44
   5ddb8:	mul	r0, r7, r0
   5ddbc:	add	r0, sl, r0, lsl #3
   5ddc0:	vld1.64	{d8-d9}, [r0]
   5ddc4:	vmov.32	r0, d9[0]
   5ddc8:	vmov.32	r1, d9[1]
   5ddcc:	bl	71774 <__aeabi_l2f>
   5ddd0:	vmov.32	r2, d8[0]
   5ddd4:	vmov.32	r1, d8[1]
   5ddd8:	vmov	s17, r0
   5dddc:	mov	r0, r2
   5dde0:	bl	71774 <__aeabi_l2f>
   5dde4:	vmov	s16, r0
   5dde8:	ldr	r3, [sp, #52]	; 0x34
   5ddec:	add	r0, r9, r7, lsl #2
   5ddf0:	vstr	d8, [r0]
   5ddf4:	ldr	r4, [sp, #24]
   5ddf8:	ldr	r2, [sp, #76]	; 0x4c
   5ddfc:	ldr	r7, [sp, #84]	; 0x54
   5de00:	ldr	r6, [sp, #48]	; 0x30
   5de04:	add	r9, r9, r4, lsl #2
   5de08:	cmp	r5, r4
   5de0c:	beq	5dcd8 <GetDataSlab+0x29b7c>
   5de10:	b	5de18 <GetDataSlab+0x29cbc>
   5de14:	mov	r4, #0
   5de18:	ldr	r0, [sp, #32]
   5de1c:	cmp	r0, #0
   5de20:	bne	5de38 <GetDataSlab+0x29cdc>
   5de24:	mov	r0, r4
   5de28:	orr	r1, r4, #1
   5de2c:	cmp	r5, r1
   5de30:	beq	5dcd8 <GetDataSlab+0x29b7c>
   5de34:	b	5de70 <GetDataSlab+0x29d14>
   5de38:	ldr	r0, [sp, #68]	; 0x44
   5de3c:	mov	r1, sl
   5de40:	mul	r0, r4, r0
   5de44:	ldr	r0, [r1, r0, lsl #3]!
   5de48:	ldr	r1, [r1, #4]
   5de4c:	bl	71774 <__aeabi_l2f>
   5de50:	ldr	r3, [sp, #52]	; 0x34
   5de54:	ldr	r7, [sp, #84]	; 0x54
   5de58:	ldr	r2, [sp, #76]	; 0x4c
   5de5c:	str	r0, [r9], #4
   5de60:	orr	r0, r4, #1
   5de64:	orr	r1, r4, #1
   5de68:	cmp	r5, r1
   5de6c:	beq	5dcd8 <GetDataSlab+0x29b7c>
   5de70:	ldr	r1, [sp, #16]
   5de74:	str	r6, [sp, #48]	; 0x30
   5de78:	sub	r6, r5, r0
   5de7c:	mov	r4, sl
   5de80:	mul	r8, r1, r0
   5de84:	add	r0, r0, #1
   5de88:	mul	r7, r1, r0
   5de8c:	mov	r1, r4
   5de90:	ldr	r0, [r1, r8]!
   5de94:	ldr	r1, [r1, #4]
   5de98:	bl	71774 <__aeabi_l2f>
   5de9c:	str	r0, [r9]
   5dea0:	mov	r1, r4
   5dea4:	ldr	r0, [r1, r7]!
   5dea8:	ldr	r1, [r1, #4]
   5deac:	bl	71774 <__aeabi_l2f>
   5deb0:	str	r0, [r9, #4]
   5deb4:	ldr	r0, [sp, #92]	; 0x5c
   5deb8:	add	r9, r9, #8
   5debc:	subs	r6, r6, #2
   5dec0:	add	r4, r4, r0
   5dec4:	bne	5de8c <GetDataSlab+0x29d30>
   5dec8:	ldr	r2, [sp, #76]	; 0x4c
   5decc:	ldr	r7, [sp, #84]	; 0x54
   5ded0:	ldr	r8, [sp, #64]	; 0x40
   5ded4:	ldr	r6, [sp, #48]	; 0x30
   5ded8:	ldr	r3, [sp, #52]	; 0x34
   5dedc:	b	5dcd8 <GetDataSlab+0x29b7c>
   5dee0:	cmp	r4, #1
   5dee4:	blt	35058 <GetDataSlab+0xefc>
   5dee8:	ldr	r0, [sp, #60]	; 0x3c
   5deec:	ldr	r1, [sp, #56]	; 0x38
   5def0:	ldr	r2, [sp, #80]	; 0x50
   5def4:	mov	r7, #0
   5def8:	mla	r0, r1, r8, r0
   5defc:	add	r2, r2, r0
   5df00:	cmp	r5, #1
   5df04:	bge	5df34 <GetDataSlab+0x29dd8>
   5df08:	ldr	r1, [sp, #76]	; 0x4c
   5df0c:	ldr	r0, [sp, #72]	; 0x48
   5df10:	mla	r2, r8, r0, r2
   5df14:	add	r7, r7, #1
   5df18:	str	r0, [sp, #72]	; 0x48
   5df1c:	mov	r0, #0
   5df20:	str	r1, [sp, #76]	; 0x4c
   5df24:	cmp	r7, r1
   5df28:	bge	5b6a4 <GetDataSlab+0x27548>
   5df2c:	cmp	r5, #1
   5df30:	blt	5df08 <GetDataSlab+0x29dac>
   5df34:	mov	r0, #0
   5df38:	ldr	r5, [sl]
   5df3c:	mul	r5, r5, r0
   5df40:	ldrb	r5, [r2, r5]
   5df44:	strb	r5, [r6, r0]
   5df48:	add	r0, r0, #1
   5df4c:	ldr	r5, [r9]
   5df50:	cmp	r0, r5
   5df54:	blt	5df38 <GetDataSlab+0x29ddc>
   5df58:	add	r6, r6, r0
   5df5c:	ldr	r1, [r3]
   5df60:	ldr	r8, [lr]
   5df64:	ldr	r0, [ip]
   5df68:	b	5df10 <GetDataSlab+0x29db4>
   5df6c:	cmp	r4, #1
   5df70:	blt	35058 <GetDataSlab+0xefc>
   5df74:	ldr	r0, [sp, #60]	; 0x3c
   5df78:	ldr	r1, [sp, #56]	; 0x38
   5df7c:	ldr	r2, [sp, #80]	; 0x50
   5df80:	mov	r7, #0
   5df84:	mla	r0, r1, r8, r0
   5df88:	add	r2, r2, r0, lsl #1
   5df8c:	cmp	r5, #1
   5df90:	bge	5dfc8 <GetDataSlab+0x29e6c>
   5df94:	ldr	r1, [sp, #76]	; 0x4c
   5df98:	ldr	r0, [sp, #72]	; 0x48
   5df9c:	mov	r4, r0
   5dfa0:	str	r0, [sp, #72]	; 0x48
   5dfa4:	mul	r0, r8, r0
   5dfa8:	add	r7, r7, #1
   5dfac:	str	r1, [sp, #76]	; 0x4c
   5dfb0:	cmp	r7, r1
   5dfb4:	add	r2, r2, r0, lsl #1
   5dfb8:	mov	r0, #0
   5dfbc:	bge	5b6a4 <GetDataSlab+0x27548>
   5dfc0:	cmp	r5, #1
   5dfc4:	blt	5df94 <GetDataSlab+0x29e38>
   5dfc8:	mov	r0, #0
   5dfcc:	ldr	r5, [sl]
   5dfd0:	mul	r5, r5, r0
   5dfd4:	ldrb	r5, [r2, r5, lsl #1]
   5dfd8:	strb	r5, [r6, r0]
   5dfdc:	add	r0, r0, #1
   5dfe0:	ldr	r5, [r9]
   5dfe4:	cmp	r0, r5
   5dfe8:	blt	5dfcc <GetDataSlab+0x29e70>
   5dfec:	add	r6, r6, r0
   5dff0:	ldr	r1, [r3]
   5dff4:	ldr	r8, [lr]
   5dff8:	ldr	r0, [ip]
   5dffc:	b	5df9c <GetDataSlab+0x29e40>
   5e000:	cmp	r4, #1
   5e004:	blt	35058 <GetDataSlab+0xefc>
   5e008:	ldr	r0, [sp, #60]	; 0x3c
   5e00c:	ldr	r1, [sp, #56]	; 0x38
   5e010:	ldr	r2, [sp, #80]	; 0x50
   5e014:	mov	r7, #0
   5e018:	mla	r0, r1, r8, r0
   5e01c:	add	r2, r2, r0, lsl #1
   5e020:	cmp	r5, #1
   5e024:	bge	5e05c <GetDataSlab+0x29f00>
   5e028:	ldr	r1, [sp, #76]	; 0x4c
   5e02c:	ldr	r0, [sp, #72]	; 0x48
   5e030:	mov	r4, r0
   5e034:	str	r0, [sp, #72]	; 0x48
   5e038:	mul	r0, r8, r0
   5e03c:	add	r7, r7, #1
   5e040:	str	r1, [sp, #76]	; 0x4c
   5e044:	cmp	r7, r1
   5e048:	add	r2, r2, r0, lsl #1
   5e04c:	mov	r0, #0
   5e050:	bge	5b6a4 <GetDataSlab+0x27548>
   5e054:	cmp	r5, #1
   5e058:	blt	5e028 <GetDataSlab+0x29ecc>
   5e05c:	mov	r0, #0
   5e060:	ldr	r5, [sl]
   5e064:	mul	r5, r5, r0
   5e068:	ldrb	r5, [r2, r5, lsl #1]
   5e06c:	strb	r5, [r6, r0]
   5e070:	add	r0, r0, #1
   5e074:	ldr	r5, [r9]
   5e078:	cmp	r0, r5
   5e07c:	blt	5e060 <GetDataSlab+0x29f04>
   5e080:	add	r6, r6, r0
   5e084:	ldr	r1, [r3]
   5e088:	ldr	r8, [lr]
   5e08c:	ldr	r0, [ip]
   5e090:	b	5e030 <GetDataSlab+0x29ed4>
   5e094:	cmp	r4, #1
   5e098:	blt	35058 <GetDataSlab+0xefc>
   5e09c:	ldr	r0, [sp, #60]	; 0x3c
   5e0a0:	ldr	r1, [sp, #56]	; 0x38
   5e0a4:	ldr	r2, [sp, #80]	; 0x50
   5e0a8:	mov	r7, #0
   5e0ac:	mla	r0, r1, r8, r0
   5e0b0:	add	r2, r2, r0, lsl #2
   5e0b4:	cmp	r5, #1
   5e0b8:	bge	5e0f0 <GetDataSlab+0x29f94>
   5e0bc:	ldr	r1, [sp, #76]	; 0x4c
   5e0c0:	ldr	r0, [sp, #72]	; 0x48
   5e0c4:	mov	r4, r0
   5e0c8:	str	r0, [sp, #72]	; 0x48
   5e0cc:	mul	r0, r8, r0
   5e0d0:	add	r7, r7, #1
   5e0d4:	str	r1, [sp, #76]	; 0x4c
   5e0d8:	cmp	r7, r1
   5e0dc:	add	r2, r2, r0, lsl #2
   5e0e0:	mov	r0, #0
   5e0e4:	bge	5b6a4 <GetDataSlab+0x27548>
   5e0e8:	cmp	r5, #1
   5e0ec:	blt	5e0bc <GetDataSlab+0x29f60>
   5e0f0:	mov	r0, #0
   5e0f4:	ldr	r5, [sl]
   5e0f8:	mul	r5, r5, r0
   5e0fc:	ldr	r5, [r2, r5, lsl #2]
   5e100:	strb	r5, [r6, r0]
   5e104:	add	r0, r0, #1
   5e108:	ldr	r5, [r9]
   5e10c:	cmp	r0, r5
   5e110:	blt	5e0f4 <GetDataSlab+0x29f98>
   5e114:	add	r6, r6, r0
   5e118:	ldr	r1, [r3]
   5e11c:	ldr	r8, [lr]
   5e120:	ldr	r0, [ip]
   5e124:	b	5e0c4 <GetDataSlab+0x29f68>
   5e128:	cmp	r4, #1
   5e12c:	blt	35058 <GetDataSlab+0xefc>
   5e130:	ldr	r0, [sp, #60]	; 0x3c
   5e134:	ldr	r1, [sp, #56]	; 0x38
   5e138:	ldr	r2, [sp, #80]	; 0x50
   5e13c:	mov	r7, #0
   5e140:	mla	r0, r1, r8, r0
   5e144:	add	r2, r2, r0, lsl #2
   5e148:	cmp	r5, #1
   5e14c:	bge	5e184 <GetDataSlab+0x2a028>
   5e150:	ldr	r1, [sp, #76]	; 0x4c
   5e154:	ldr	r0, [sp, #72]	; 0x48
   5e158:	mov	r4, r0
   5e15c:	str	r0, [sp, #72]	; 0x48
   5e160:	mul	r0, r8, r0
   5e164:	add	r7, r7, #1
   5e168:	str	r1, [sp, #76]	; 0x4c
   5e16c:	cmp	r7, r1
   5e170:	add	r2, r2, r0, lsl #2
   5e174:	mov	r0, #0
   5e178:	bge	5b6a4 <GetDataSlab+0x27548>
   5e17c:	cmp	r5, #1
   5e180:	blt	5e150 <GetDataSlab+0x29ff4>
   5e184:	mov	r0, #0
   5e188:	ldr	r5, [sl]
   5e18c:	mul	r5, r5, r0
   5e190:	ldr	r5, [r2, r5, lsl #2]
   5e194:	strb	r5, [r6, r0]
   5e198:	add	r0, r0, #1
   5e19c:	ldr	r5, [r9]
   5e1a0:	cmp	r0, r5
   5e1a4:	blt	5e188 <GetDataSlab+0x2a02c>
   5e1a8:	add	r6, r6, r0
   5e1ac:	ldr	r1, [r3]
   5e1b0:	ldr	r8, [lr]
   5e1b4:	ldr	r0, [ip]
   5e1b8:	b	5e158 <GetDataSlab+0x29ffc>
   5e1bc:	cmp	r4, #1
   5e1c0:	blt	35058 <GetDataSlab+0xefc>
   5e1c4:	ldr	r0, [sp, #60]	; 0x3c
   5e1c8:	ldr	r1, [sp, #56]	; 0x38
   5e1cc:	ldr	r2, [sp, #80]	; 0x50
   5e1d0:	mov	r7, #0
   5e1d4:	mla	r0, r1, r8, r0
   5e1d8:	add	r2, r2, r0, lsl #2
   5e1dc:	cmp	r5, #1
   5e1e0:	bge	5e218 <GetDataSlab+0x2a0bc>
   5e1e4:	ldr	r1, [sp, #76]	; 0x4c
   5e1e8:	ldr	r0, [sp, #72]	; 0x48
   5e1ec:	mov	r4, r0
   5e1f0:	str	r0, [sp, #72]	; 0x48
   5e1f4:	mul	r0, r8, r0
   5e1f8:	add	r7, r7, #1
   5e1fc:	str	r1, [sp, #76]	; 0x4c
   5e200:	cmp	r7, r1
   5e204:	add	r2, r2, r0, lsl #2
   5e208:	mov	r0, #0
   5e20c:	bge	5b6a4 <GetDataSlab+0x27548>
   5e210:	cmp	r5, #1
   5e214:	blt	5e1e4 <GetDataSlab+0x2a088>
   5e218:	mov	r0, #0
   5e21c:	ldr	r5, [sl]
   5e220:	mul	r5, r5, r0
   5e224:	add	r5, r2, r5, lsl #2
   5e228:	vldr	s0, [r5]
   5e22c:	vcvt.s32.f32	s0, s0
   5e230:	vmov	r5, s0
   5e234:	strb	r5, [r6, r0]
   5e238:	add	r0, r0, #1
   5e23c:	ldr	r5, [r9]
   5e240:	cmp	r0, r5
   5e244:	blt	5e21c <GetDataSlab+0x2a0c0>
   5e248:	add	r6, r6, r0
   5e24c:	ldr	r1, [r3]
   5e250:	ldr	r8, [lr]
   5e254:	ldr	r0, [ip]
   5e258:	b	5e1ec <GetDataSlab+0x2a090>
   5e25c:	cmp	r4, #1
   5e260:	blt	35058 <GetDataSlab+0xefc>
   5e264:	ldr	r0, [sp, #60]	; 0x3c
   5e268:	ldr	r1, [sp, #56]	; 0x38
   5e26c:	ldr	r2, [sp, #80]	; 0x50
   5e270:	mov	r7, #0
   5e274:	mla	r0, r1, r8, r0
   5e278:	add	r2, r2, r0, lsl #3
   5e27c:	cmp	r5, #1
   5e280:	bge	5e2b8 <GetDataSlab+0x2a15c>
   5e284:	ldr	r1, [sp, #76]	; 0x4c
   5e288:	ldr	r0, [sp, #72]	; 0x48
   5e28c:	mov	r4, r0
   5e290:	str	r0, [sp, #72]	; 0x48
   5e294:	mul	r0, r8, r0
   5e298:	add	r7, r7, #1
   5e29c:	str	r1, [sp, #76]	; 0x4c
   5e2a0:	cmp	r7, r1
   5e2a4:	add	r2, r2, r0, lsl #3
   5e2a8:	mov	r0, #0
   5e2ac:	bge	5b6a4 <GetDataSlab+0x27548>
   5e2b0:	cmp	r5, #1
   5e2b4:	blt	5e284 <GetDataSlab+0x2a128>
   5e2b8:	mov	r0, #0
   5e2bc:	ldr	r5, [sl]
   5e2c0:	mul	r5, r5, r0
   5e2c4:	add	r5, r2, r5, lsl #3
   5e2c8:	vldr	d16, [r5]
   5e2cc:	vcvt.s32.f64	s0, d16
   5e2d0:	vmov	r5, s0
   5e2d4:	strb	r5, [r6, r0]
   5e2d8:	add	r0, r0, #1
   5e2dc:	ldr	r5, [r9]
   5e2e0:	cmp	r0, r5
   5e2e4:	blt	5e2bc <GetDataSlab+0x2a160>
   5e2e8:	add	r6, r6, r0
   5e2ec:	ldr	r1, [r3]
   5e2f0:	ldr	r8, [lr]
   5e2f4:	ldr	r0, [ip]
   5e2f8:	b	5e28c <GetDataSlab+0x2a130>
   5e2fc:	cmp	r4, #1
   5e300:	blt	35058 <GetDataSlab+0xefc>
   5e304:	ldr	r0, [sp, #60]	; 0x3c
   5e308:	ldr	r1, [sp, #56]	; 0x38
   5e30c:	ldr	r2, [sp, #80]	; 0x50
   5e310:	mov	r7, r6
   5e314:	mla	r0, r1, r8, r0
   5e318:	add	r0, r2, r0, lsl #3
   5e31c:	mov	r2, #0
   5e320:	cmp	r5, #1
   5e324:	bge	5e34c <GetDataSlab+0x2a1f0>
   5e328:	ldr	r1, [sp, #72]	; 0x48
   5e32c:	mul	r6, r8, r1
   5e330:	add	r2, r2, #1
   5e334:	str	r1, [sp, #72]	; 0x48
   5e338:	cmp	r2, r4
   5e33c:	add	r0, r0, r6, lsl #3
   5e340:	bge	637ac <GetDataSlab+0x2f650>
   5e344:	cmp	r5, #1
   5e348:	blt	5e328 <GetDataSlab+0x2a1cc>
   5e34c:	mov	r6, #0
   5e350:	ldr	r5, [sl]
   5e354:	mul	r5, r5, r6
   5e358:	ldrb	r5, [r0, r5, lsl #3]
   5e35c:	strb	r5, [r7, r6]
   5e360:	add	r6, r6, #1
   5e364:	ldr	r5, [r9]
   5e368:	cmp	r6, r5
   5e36c:	blt	5e350 <GetDataSlab+0x2a1f4>
   5e370:	ldr	r4, [r3]
   5e374:	ldr	r8, [lr]
   5e378:	ldr	r1, [ip]
   5e37c:	add	r7, r7, r6
   5e380:	b	5e32c <GetDataSlab+0x2a1d0>
   5e384:	cmp	r4, #1
   5e388:	blt	35058 <GetDataSlab+0xefc>
   5e38c:	ldr	r0, [sp, #60]	; 0x3c
   5e390:	ldr	r1, [sp, #56]	; 0x38
   5e394:	ldr	r2, [sp, #80]	; 0x50
   5e398:	mov	r7, #0
   5e39c:	mla	r0, r1, r8, r0
   5e3a0:	add	r2, r2, r0
   5e3a4:	cmp	r5, #1
   5e3a8:	bge	5e3d8 <GetDataSlab+0x2a27c>
   5e3ac:	ldr	r1, [sp, #76]	; 0x4c
   5e3b0:	ldr	r0, [sp, #72]	; 0x48
   5e3b4:	mla	r2, r8, r0, r2
   5e3b8:	add	r7, r7, #1
   5e3bc:	str	r0, [sp, #72]	; 0x48
   5e3c0:	mov	r0, #0
   5e3c4:	str	r1, [sp, #76]	; 0x4c
   5e3c8:	cmp	r7, r1
   5e3cc:	bge	5b6a4 <GetDataSlab+0x27548>
   5e3d0:	cmp	r5, #1
   5e3d4:	blt	5e3ac <GetDataSlab+0x2a250>
   5e3d8:	mov	r0, #0
   5e3dc:	ldr	r5, [sl]
   5e3e0:	mul	r5, r5, r0
   5e3e4:	ldrb	r5, [r2, r5]
   5e3e8:	strb	r5, [r6, r0]
   5e3ec:	add	r0, r0, #1
   5e3f0:	ldr	r5, [r9]
   5e3f4:	cmp	r0, r5
   5e3f8:	blt	5e3dc <GetDataSlab+0x2a280>
   5e3fc:	add	r6, r6, r0
   5e400:	ldr	r1, [r3]
   5e404:	ldr	r8, [lr]
   5e408:	ldr	r0, [ip]
   5e40c:	b	5e3b4 <GetDataSlab+0x2a258>
   5e410:	cmp	r4, #1
   5e414:	blt	35058 <GetDataSlab+0xefc>
   5e418:	ldr	r0, [sp, #60]	; 0x3c
   5e41c:	ldr	r1, [sp, #56]	; 0x38
   5e420:	ldr	r2, [sp, #80]	; 0x50
   5e424:	mov	r7, #0
   5e428:	mla	r0, r1, r8, r0
   5e42c:	add	r2, r2, r0, lsl #1
   5e430:	cmp	r5, #1
   5e434:	bge	5e46c <GetDataSlab+0x2a310>
   5e438:	ldr	r1, [sp, #76]	; 0x4c
   5e43c:	ldr	r0, [sp, #72]	; 0x48
   5e440:	mov	r4, r0
   5e444:	str	r0, [sp, #72]	; 0x48
   5e448:	mul	r0, r8, r0
   5e44c:	add	r7, r7, #1
   5e450:	str	r1, [sp, #76]	; 0x4c
   5e454:	cmp	r7, r1
   5e458:	add	r2, r2, r0, lsl #1
   5e45c:	mov	r0, #0
   5e460:	bge	5b6a4 <GetDataSlab+0x27548>
   5e464:	cmp	r5, #1
   5e468:	blt	5e438 <GetDataSlab+0x2a2dc>
   5e46c:	mov	r0, #0
   5e470:	ldr	r5, [sl]
   5e474:	mul	r5, r5, r0
   5e478:	ldrb	r5, [r2, r5, lsl #1]
   5e47c:	strb	r5, [r6, r0]
   5e480:	add	r0, r0, #1
   5e484:	ldr	r5, [r9]
   5e488:	cmp	r0, r5
   5e48c:	blt	5e470 <GetDataSlab+0x2a314>
   5e490:	add	r6, r6, r0
   5e494:	ldr	r1, [r3]
   5e498:	ldr	r8, [lr]
   5e49c:	ldr	r0, [ip]
   5e4a0:	b	5e440 <GetDataSlab+0x2a2e4>
   5e4a4:	cmp	r4, #1
   5e4a8:	blt	35058 <GetDataSlab+0xefc>
   5e4ac:	ldr	r0, [sp, #60]	; 0x3c
   5e4b0:	ldr	r1, [sp, #56]	; 0x38
   5e4b4:	ldr	r2, [sp, #80]	; 0x50
   5e4b8:	mov	r7, #0
   5e4bc:	mla	r0, r1, r8, r0
   5e4c0:	add	r2, r2, r0, lsl #1
   5e4c4:	cmp	r5, #1
   5e4c8:	bge	5e500 <GetDataSlab+0x2a3a4>
   5e4cc:	ldr	r1, [sp, #76]	; 0x4c
   5e4d0:	ldr	r0, [sp, #72]	; 0x48
   5e4d4:	mov	r4, r0
   5e4d8:	str	r0, [sp, #72]	; 0x48
   5e4dc:	mul	r0, r8, r0
   5e4e0:	add	r7, r7, #1
   5e4e4:	str	r1, [sp, #76]	; 0x4c
   5e4e8:	cmp	r7, r1
   5e4ec:	add	r2, r2, r0, lsl #1
   5e4f0:	mov	r0, #0
   5e4f4:	bge	5b6a4 <GetDataSlab+0x27548>
   5e4f8:	cmp	r5, #1
   5e4fc:	blt	5e4cc <GetDataSlab+0x2a370>
   5e500:	mov	r0, #0
   5e504:	ldr	r5, [sl]
   5e508:	mul	r5, r5, r0
   5e50c:	ldrb	r5, [r2, r5, lsl #1]
   5e510:	strb	r5, [r6, r0]
   5e514:	add	r0, r0, #1
   5e518:	ldr	r5, [r9]
   5e51c:	cmp	r0, r5
   5e520:	blt	5e504 <GetDataSlab+0x2a3a8>
   5e524:	add	r6, r6, r0
   5e528:	ldr	r1, [r3]
   5e52c:	ldr	r8, [lr]
   5e530:	ldr	r0, [ip]
   5e534:	b	5e4d4 <GetDataSlab+0x2a378>
   5e538:	cmp	r4, #1
   5e53c:	blt	35058 <GetDataSlab+0xefc>
   5e540:	ldr	r0, [sp, #60]	; 0x3c
   5e544:	ldr	r1, [sp, #56]	; 0x38
   5e548:	ldr	r2, [sp, #80]	; 0x50
   5e54c:	mov	r7, #0
   5e550:	mla	r0, r1, r8, r0
   5e554:	add	r2, r2, r0, lsl #2
   5e558:	cmp	r5, #1
   5e55c:	bge	5e594 <GetDataSlab+0x2a438>
   5e560:	ldr	r1, [sp, #76]	; 0x4c
   5e564:	ldr	r0, [sp, #72]	; 0x48
   5e568:	mov	r4, r0
   5e56c:	str	r0, [sp, #72]	; 0x48
   5e570:	mul	r0, r8, r0
   5e574:	add	r7, r7, #1
   5e578:	str	r1, [sp, #76]	; 0x4c
   5e57c:	cmp	r7, r1
   5e580:	add	r2, r2, r0, lsl #2
   5e584:	mov	r0, #0
   5e588:	bge	5b6a4 <GetDataSlab+0x27548>
   5e58c:	cmp	r5, #1
   5e590:	blt	5e560 <GetDataSlab+0x2a404>
   5e594:	mov	r0, #0
   5e598:	ldr	r5, [sl]
   5e59c:	mul	r5, r5, r0
   5e5a0:	ldr	r5, [r2, r5, lsl #2]
   5e5a4:	strb	r5, [r6, r0]
   5e5a8:	add	r0, r0, #1
   5e5ac:	ldr	r5, [r9]
   5e5b0:	cmp	r0, r5
   5e5b4:	blt	5e598 <GetDataSlab+0x2a43c>
   5e5b8:	add	r6, r6, r0
   5e5bc:	ldr	r1, [r3]
   5e5c0:	ldr	r8, [lr]
   5e5c4:	ldr	r0, [ip]
   5e5c8:	b	5e568 <GetDataSlab+0x2a40c>
   5e5cc:	cmp	r4, #1
   5e5d0:	blt	35058 <GetDataSlab+0xefc>
   5e5d4:	ldr	r0, [sp, #60]	; 0x3c
   5e5d8:	ldr	r1, [sp, #56]	; 0x38
   5e5dc:	ldr	r2, [sp, #80]	; 0x50
   5e5e0:	mov	r7, #0
   5e5e4:	mla	r0, r1, r8, r0
   5e5e8:	add	r2, r2, r0, lsl #2
   5e5ec:	cmp	r5, #1
   5e5f0:	bge	5e628 <GetDataSlab+0x2a4cc>
   5e5f4:	ldr	r1, [sp, #76]	; 0x4c
   5e5f8:	ldr	r0, [sp, #72]	; 0x48
   5e5fc:	mov	r4, r0
   5e600:	str	r0, [sp, #72]	; 0x48
   5e604:	mul	r0, r8, r0
   5e608:	add	r7, r7, #1
   5e60c:	str	r1, [sp, #76]	; 0x4c
   5e610:	cmp	r7, r1
   5e614:	add	r2, r2, r0, lsl #2
   5e618:	mov	r0, #0
   5e61c:	bge	5b6a4 <GetDataSlab+0x27548>
   5e620:	cmp	r5, #1
   5e624:	blt	5e5f4 <GetDataSlab+0x2a498>
   5e628:	mov	r0, #0
   5e62c:	ldr	r5, [sl]
   5e630:	mul	r5, r5, r0
   5e634:	ldr	r5, [r2, r5, lsl #2]
   5e638:	strb	r5, [r6, r0]
   5e63c:	add	r0, r0, #1
   5e640:	ldr	r5, [r9]
   5e644:	cmp	r0, r5
   5e648:	blt	5e62c <GetDataSlab+0x2a4d0>
   5e64c:	add	r6, r6, r0
   5e650:	ldr	r1, [r3]
   5e654:	ldr	r8, [lr]
   5e658:	ldr	r0, [ip]
   5e65c:	b	5e5fc <GetDataSlab+0x2a4a0>
   5e660:	cmp	r4, #1
   5e664:	blt	35058 <GetDataSlab+0xefc>
   5e668:	ldr	r0, [sp, #60]	; 0x3c
   5e66c:	ldr	r1, [sp, #56]	; 0x38
   5e670:	ldr	r2, [sp, #80]	; 0x50
   5e674:	mov	r7, #0
   5e678:	mla	r0, r1, r8, r0
   5e67c:	add	r2, r2, r0, lsl #2
   5e680:	cmp	r5, #1
   5e684:	bge	5e6bc <GetDataSlab+0x2a560>
   5e688:	ldr	r1, [sp, #76]	; 0x4c
   5e68c:	ldr	r0, [sp, #72]	; 0x48
   5e690:	mov	r4, r0
   5e694:	str	r0, [sp, #72]	; 0x48
   5e698:	mul	r0, r8, r0
   5e69c:	add	r7, r7, #1
   5e6a0:	str	r1, [sp, #76]	; 0x4c
   5e6a4:	cmp	r7, r1
   5e6a8:	add	r2, r2, r0, lsl #2
   5e6ac:	mov	r0, #0
   5e6b0:	bge	5b6a4 <GetDataSlab+0x27548>
   5e6b4:	cmp	r5, #1
   5e6b8:	blt	5e688 <GetDataSlab+0x2a52c>
   5e6bc:	mov	r0, #0
   5e6c0:	ldr	r5, [sl]
   5e6c4:	mul	r5, r5, r0
   5e6c8:	add	r5, r2, r5, lsl #2
   5e6cc:	vldr	s0, [r5]
   5e6d0:	vcvt.u32.f32	s0, s0
   5e6d4:	vmov	r5, s0
   5e6d8:	strb	r5, [r6, r0]
   5e6dc:	add	r0, r0, #1
   5e6e0:	ldr	r5, [r9]
   5e6e4:	cmp	r0, r5
   5e6e8:	blt	5e6c0 <GetDataSlab+0x2a564>
   5e6ec:	add	r6, r6, r0
   5e6f0:	ldr	r1, [r3]
   5e6f4:	ldr	r8, [lr]
   5e6f8:	ldr	r0, [ip]
   5e6fc:	b	5e690 <GetDataSlab+0x2a534>
   5e700:	cmp	r4, #1
   5e704:	blt	35058 <GetDataSlab+0xefc>
   5e708:	ldr	r0, [sp, #60]	; 0x3c
   5e70c:	ldr	r1, [sp, #56]	; 0x38
   5e710:	ldr	r2, [sp, #80]	; 0x50
   5e714:	mov	r7, #0
   5e718:	mla	r0, r1, r8, r0
   5e71c:	add	r2, r2, r0, lsl #3
   5e720:	cmp	r5, #1
   5e724:	bge	5e75c <GetDataSlab+0x2a600>
   5e728:	ldr	r1, [sp, #76]	; 0x4c
   5e72c:	ldr	r0, [sp, #72]	; 0x48
   5e730:	mov	r4, r0
   5e734:	str	r0, [sp, #72]	; 0x48
   5e738:	mul	r0, r8, r0
   5e73c:	add	r7, r7, #1
   5e740:	str	r1, [sp, #76]	; 0x4c
   5e744:	cmp	r7, r1
   5e748:	add	r2, r2, r0, lsl #3
   5e74c:	mov	r0, #0
   5e750:	bge	5b6a4 <GetDataSlab+0x27548>
   5e754:	cmp	r5, #1
   5e758:	blt	5e728 <GetDataSlab+0x2a5cc>
   5e75c:	mov	r0, #0
   5e760:	ldr	r5, [sl]
   5e764:	mul	r5, r5, r0
   5e768:	add	r5, r2, r5, lsl #3
   5e76c:	vldr	d16, [r5]
   5e770:	vcvt.u32.f64	s0, d16
   5e774:	vmov	r5, s0
   5e778:	strb	r5, [r6, r0]
   5e77c:	add	r0, r0, #1
   5e780:	ldr	r5, [r9]
   5e784:	cmp	r0, r5
   5e788:	blt	5e760 <GetDataSlab+0x2a604>
   5e78c:	add	r6, r6, r0
   5e790:	ldr	r1, [r3]
   5e794:	ldr	r8, [lr]
   5e798:	ldr	r0, [ip]
   5e79c:	b	5e730 <GetDataSlab+0x2a5d4>
   5e7a0:	cmp	r4, #1
   5e7a4:	blt	35058 <GetDataSlab+0xefc>
   5e7a8:	ldr	r0, [sp, #60]	; 0x3c
   5e7ac:	ldr	r1, [sp, #56]	; 0x38
   5e7b0:	ldr	r2, [sp, #80]	; 0x50
   5e7b4:	mov	r7, r6
   5e7b8:	mla	r0, r1, r8, r0
   5e7bc:	add	r0, r2, r0, lsl #3
   5e7c0:	mov	r2, #0
   5e7c4:	cmp	r5, #1
   5e7c8:	bge	5e7f0 <GetDataSlab+0x2a694>
   5e7cc:	ldr	r1, [sp, #72]	; 0x48
   5e7d0:	mul	r6, r8, r1
   5e7d4:	add	r2, r2, #1
   5e7d8:	str	r1, [sp, #72]	; 0x48
   5e7dc:	cmp	r2, r4
   5e7e0:	add	r0, r0, r6, lsl #3
   5e7e4:	bge	637c4 <GetDataSlab+0x2f668>
   5e7e8:	cmp	r5, #1
   5e7ec:	blt	5e7cc <GetDataSlab+0x2a670>
   5e7f0:	mov	r6, #0
   5e7f4:	ldr	r5, [sl]
   5e7f8:	mul	r5, r5, r6
   5e7fc:	ldrb	r5, [r0, r5, lsl #3]
   5e800:	strb	r5, [r7, r6]
   5e804:	add	r6, r6, #1
   5e808:	ldr	r5, [r9]
   5e80c:	cmp	r6, r5
   5e810:	blt	5e7f4 <GetDataSlab+0x2a698>
   5e814:	ldr	r4, [r3]
   5e818:	ldr	r8, [lr]
   5e81c:	ldr	r1, [ip]
   5e820:	add	r7, r7, r6
   5e824:	b	5e7d0 <GetDataSlab+0x2a674>
   5e828:	cmp	r3, #1
   5e82c:	blt	35058 <GetDataSlab+0xefc>
   5e830:	cmp	r5, #1
   5e834:	mov	r0, #0
   5e838:	blt	5b6a4 <GetDataSlab+0x27548>
   5e83c:	ldr	r0, [sp, #72]	; 0x48
   5e840:	ldr	r3, [sp, #60]	; 0x3c
   5e844:	ldr	r7, [sp, #56]	; 0x38
   5e848:	mov	r2, r8
   5e84c:	mov	r2, #0
   5e850:	cmp	r5, #7
   5e854:	ldr	sl, [sp, #88]	; 0x58
   5e858:	str	r2, [sp, #84]	; 0x54
   5e85c:	mov	r2, #0
   5e860:	movwhi	r2, #1
   5e864:	mul	r0, r0, r8
   5e868:	mla	r1, r7, r8, r3
   5e86c:	str	r0, [sp, #72]	; 0x48
   5e870:	ldr	r0, [sp, #80]	; 0x50
   5e874:	str	r1, [sp, #52]	; 0x34
   5e878:	add	r0, r0, r1
   5e87c:	mov	r1, #1
   5e880:	str	r0, [sp, #92]	; 0x5c
   5e884:	sub	r0, r5, #8
   5e888:	add	r1, r1, r0, lsr #3
   5e88c:	lsr	r0, r0, #3
   5e890:	str	r0, [sp, #40]	; 0x28
   5e894:	and	r6, r1, #1
   5e898:	sub	r1, r1, r6
   5e89c:	str	r6, [sp, #48]	; 0x30
   5e8a0:	str	r1, [sp, #36]	; 0x24
   5e8a4:	add	r1, r5, r3
   5e8a8:	mla	r1, r7, r8, r1
   5e8ac:	str	r1, [sp, #56]	; 0x38
   5e8b0:	ldr	r1, [sp, #68]	; 0x44
   5e8b4:	mov	r3, r1
   5e8b8:	sub	r1, r1, #1
   5e8bc:	clz	r1, r1
   5e8c0:	lsr	r1, r1, #5
   5e8c4:	and	r1, r2, r1
   5e8c8:	lsl	r2, r3, #1
   5e8cc:	str	r1, [sp, #64]	; 0x40
   5e8d0:	lsl	r1, r3, #4
   5e8d4:	str	r1, [sp, #32]
   5e8d8:	lsl	r1, r3, #3
   5e8dc:	str	r1, [sp, #28]
   5e8e0:	ldr	r8, [sp, #32]
   5e8e4:	and	r1, r5, #1
   5e8e8:	ldr	lr, [sp, #28]
   5e8ec:	str	r1, [sp, #60]	; 0x3c
   5e8f0:	bic	r1, r5, #7
   5e8f4:	str	r1, [sp, #44]	; 0x2c
   5e8f8:	ldr	r0, [sp, #64]	; 0x40
   5e8fc:	cmp	r0, #0
   5e900:	bne	5e938 <GetDataSlab+0x2a7dc>
   5e904:	b	5e9ac <GetDataSlab+0x2a850>
   5e908:	ldr	r0, [sp, #72]	; 0x48
   5e90c:	ldr	r1, [sp, #76]	; 0x4c
   5e910:	add	r6, r6, #1
   5e914:	str	r6, [sp, #84]	; 0x54
   5e918:	add	ip, ip, r0
   5e91c:	mov	r0, #0
   5e920:	cmp	r6, r1
   5e924:	str	ip, [sp, #92]	; 0x5c
   5e928:	beq	5b6a4 <GetDataSlab+0x27548>
   5e92c:	ldr	r0, [sp, #64]	; 0x40
   5e930:	cmp	r0, #0
   5e934:	beq	5e9ac <GetDataSlab+0x2a850>
   5e938:	ldr	r0, [sp, #72]	; 0x48
   5e93c:	ldr	r6, [sp, #84]	; 0x54
   5e940:	ldr	r1, [sp, #56]	; 0x38
   5e944:	ldr	r3, [sp, #80]	; 0x50
   5e948:	ldr	ip, [sp, #92]	; 0x5c
   5e94c:	mul	r0, r0, r6
   5e950:	add	r1, r1, r0
   5e954:	add	r1, r3, r1
   5e958:	cmp	r1, sl
   5e95c:	bls	5ea10 <GetDataSlab+0x2a8b4>
   5e960:	ldr	r7, [sp, #52]	; 0x34
   5e964:	add	r1, sl, r5, lsl #1
   5e968:	add	r0, r7, r0
   5e96c:	add	r0, r3, r0
   5e970:	cmp	r0, r1
   5e974:	bcs	5ea10 <GetDataSlab+0x2a8b4>
   5e978:	mov	r0, #0
   5e97c:	ldr	r1, [sp, #60]	; 0x3c
   5e980:	cmp	r1, #0
   5e984:	beq	5e9c4 <GetDataSlab+0x2a868>
   5e988:	ldr	r1, [sp, #68]	; 0x44
   5e98c:	orr	r3, r0, #1
   5e990:	mul	r1, r0, r1
   5e994:	ldrb	r1, [ip, r1]
   5e998:	strh	r1, [sl], #2
   5e99c:	orr	r0, r0, #1
   5e9a0:	cmp	r5, r0
   5e9a4:	bne	5e9d4 <GetDataSlab+0x2a878>
   5e9a8:	b	5e908 <GetDataSlab+0x2a7ac>
   5e9ac:	ldr	ip, [sp, #92]	; 0x5c
   5e9b0:	ldr	r6, [sp, #84]	; 0x54
   5e9b4:	mov	r0, #0
   5e9b8:	ldr	r1, [sp, #60]	; 0x3c
   5e9bc:	cmp	r1, #0
   5e9c0:	bne	5e988 <GetDataSlab+0x2a82c>
   5e9c4:	mov	r3, r0
   5e9c8:	orr	r0, r0, #1
   5e9cc:	cmp	r5, r0
   5e9d0:	beq	5e908 <GetDataSlab+0x2a7ac>
   5e9d4:	ldr	r7, [sp, #68]	; 0x44
   5e9d8:	sub	r1, r5, r3
   5e9dc:	mov	r4, ip
   5e9e0:	mul	r0, r7, r3
   5e9e4:	add	r3, r3, #1
   5e9e8:	mul	r3, r7, r3
   5e9ec:	ldrb	r7, [r4, r0]
   5e9f0:	subs	r1, r1, #2
   5e9f4:	strh	r7, [sl]
   5e9f8:	ldrb	r7, [r4, r3]
   5e9fc:	add	r4, r4, r2
   5ea00:	strh	r7, [sl, #2]
   5ea04:	add	sl, sl, #4
   5ea08:	bne	5e9ec <GetDataSlab+0x2a890>
   5ea0c:	b	5e908 <GetDataSlab+0x2a7ac>
   5ea10:	ldr	r0, [sp, #40]	; 0x28
   5ea14:	cmp	r0, #0
   5ea18:	beq	5ea8c <GetDataSlab+0x2a930>
   5ea1c:	ldr	r1, [sp, #36]	; 0x24
   5ea20:	mov	r0, #0
   5ea24:	mov	r3, ip
   5ea28:	mov	r9, sl
   5ea2c:	ldr	r4, [r3]
   5ea30:	ldr	ip, [r3, #4]
   5ea34:	add	r7, sp, #424	; 0x1a8
   5ea38:	subs	r1, r1, #2
   5ea3c:	add	r0, r0, #16
   5ea40:	str	r4, [sp, #424]	; 0x1a8
   5ea44:	str	ip, [sp, #428]	; 0x1ac
   5ea48:	add	r4, r9, #16
   5ea4c:	vld1.8	{d16}, [r7 :64]
   5ea50:	mov	r7, #32
   5ea54:	vmovl.u8	q8, d16
   5ea58:	vst1.16	{d16-d17}, [r9], r7
   5ea5c:	add	r7, r3, r8
   5ea60:	ldr	r6, [r3, lr]!
   5ea64:	str	r6, [sp, #432]	; 0x1b0
   5ea68:	ldr	r3, [r3, #4]
   5ea6c:	str	r3, [sp, #436]	; 0x1b4
   5ea70:	add	r3, sp, #432	; 0x1b0
   5ea74:	vld1.8	{d16}, [r3 :64]
   5ea78:	mov	r3, r7
   5ea7c:	vmovl.u8	q8, d16
   5ea80:	vst1.16	{d16-d17}, [r4]
   5ea84:	bne	5ea2c <GetDataSlab+0x2a8d0>
   5ea88:	b	5ea90 <GetDataSlab+0x2a934>
   5ea8c:	mov	r0, #0
   5ea90:	ldr	r1, [sp, #48]	; 0x30
   5ea94:	ldr	ip, [sp, #92]	; 0x5c
   5ea98:	cmp	r1, #0
   5ea9c:	beq	5ead0 <GetDataSlab+0x2a974>
   5eaa0:	ldr	r1, [sp, #68]	; 0x44
   5eaa4:	mov	r3, ip
   5eaa8:	mul	r1, r0, r1
   5eaac:	add	r0, sl, r0, lsl #1
   5eab0:	ldr	r1, [r3, r1]!
   5eab4:	str	r1, [sp, #416]	; 0x1a0
   5eab8:	ldr	r1, [r3, #4]
   5eabc:	str	r1, [sp, #420]	; 0x1a4
   5eac0:	add	r1, sp, #416	; 0x1a0
   5eac4:	vld1.8	{d16}, [r1 :64]
   5eac8:	vmovl.u8	q8, d16
   5eacc:	vst1.16	{d16-d17}, [r0]
   5ead0:	ldr	r0, [sp, #44]	; 0x2c
   5ead4:	ldr	r6, [sp, #84]	; 0x54
   5ead8:	add	sl, sl, r0, lsl #1
   5eadc:	cmp	r5, r0
   5eae0:	bne	5e9b8 <GetDataSlab+0x2a85c>
   5eae4:	b	5e908 <GetDataSlab+0x2a7ac>
   5eae8:	cmp	r3, #1
   5eaec:	blt	35058 <GetDataSlab+0xefc>
   5eaf0:	cmp	r5, #1
   5eaf4:	mov	r0, #0
   5eaf8:	blt	5b6a4 <GetDataSlab+0x27548>
   5eafc:	ldr	r0, [sp, #60]	; 0x3c
   5eb00:	ldr	r1, [sp, #56]	; 0x38
   5eb04:	mov	r2, #1
   5eb08:	cmp	r5, #7
   5eb0c:	mov	r7, r8
   5eb10:	ldr	lr, [sp, #88]	; 0x58
   5eb14:	mla	r0, r1, r8, r0
   5eb18:	ldr	r1, [sp, #80]	; 0x50
   5eb1c:	add	r1, r1, r0, lsl #1
   5eb20:	str	r1, [sp, #92]	; 0x5c
   5eb24:	lsl	r1, r5, #1
   5eb28:	add	r1, r1, r0, lsl #1
   5eb2c:	lsl	r0, r0, #1
   5eb30:	str	r0, [sp, #48]	; 0x30
   5eb34:	ldr	r0, [sp, #68]	; 0x44
   5eb38:	str	r1, [sp, #56]	; 0x38
   5eb3c:	sub	r1, r5, #8
   5eb40:	add	r2, r2, r1, lsr #3
   5eb44:	and	r3, r2, #1
   5eb48:	sub	r2, r2, r3
   5eb4c:	str	r3, [sp, #44]	; 0x2c
   5eb50:	mov	r3, r0
   5eb54:	sub	r0, r0, #1
   5eb58:	clz	r0, r0
   5eb5c:	str	r2, [sp, #32]
   5eb60:	mov	r2, #0
   5eb64:	lsl	r6, r3, #2
   5eb68:	str	r2, [sp, #84]	; 0x54
   5eb6c:	mov	r2, #0
   5eb70:	lsr	r0, r0, #5
   5eb74:	movwhi	r2, #1
   5eb78:	and	r0, r2, r0
   5eb7c:	str	r0, [sp, #60]	; 0x3c
   5eb80:	ldr	r0, [sp, #72]	; 0x48
   5eb84:	mul	r0, r0, r8
   5eb88:	lsl	r0, r0, #1
   5eb8c:	str	r0, [sp, #72]	; 0x48
   5eb90:	lsl	r0, r3, #1
   5eb94:	str	r0, [sp, #52]	; 0x34
   5eb98:	lsl	r0, r3, #5
   5eb9c:	str	r0, [sp, #28]
   5eba0:	lsl	r0, r3, #4
   5eba4:	str	r0, [sp, #24]
   5eba8:	and	r0, r5, #1
   5ebac:	ldr	r8, [sp, #24]
   5ebb0:	str	r0, [sp, #64]	; 0x40
   5ebb4:	bic	r0, r5, #7
   5ebb8:	str	r0, [sp, #40]	; 0x28
   5ebbc:	lsr	r0, r1, #3
   5ebc0:	str	r0, [sp, #36]	; 0x24
   5ebc4:	ldr	r0, [sp, #60]	; 0x3c
   5ebc8:	cmp	r0, #0
   5ebcc:	bne	5ec04 <GetDataSlab+0x2aaa8>
   5ebd0:	b	5ec7c <GetDataSlab+0x2ab20>
   5ebd4:	ldr	r0, [sp, #72]	; 0x48
   5ebd8:	ldr	r1, [sp, #76]	; 0x4c
   5ebdc:	add	r4, r4, #1
   5ebe0:	str	r4, [sp, #84]	; 0x54
   5ebe4:	add	ip, ip, r0
   5ebe8:	mov	r0, #0
   5ebec:	cmp	r4, r1
   5ebf0:	str	ip, [sp, #92]	; 0x5c
   5ebf4:	beq	5b6a4 <GetDataSlab+0x27548>
   5ebf8:	ldr	r0, [sp, #60]	; 0x3c
   5ebfc:	cmp	r0, #0
   5ec00:	beq	5ec7c <GetDataSlab+0x2ab20>
   5ec04:	ldr	r0, [sp, #72]	; 0x48
   5ec08:	ldr	r4, [sp, #84]	; 0x54
   5ec0c:	ldr	r1, [sp, #56]	; 0x38
   5ec10:	ldr	r2, [sp, #80]	; 0x50
   5ec14:	ldr	ip, [sp, #92]	; 0x5c
   5ec18:	mul	r0, r0, r4
   5ec1c:	add	r1, r1, r0
   5ec20:	add	r1, r2, r1
   5ec24:	cmp	r1, lr
   5ec28:	bls	5ece8 <GetDataSlab+0x2ab8c>
   5ec2c:	ldr	r3, [sp, #48]	; 0x30
   5ec30:	add	r1, lr, r5, lsl #1
   5ec34:	add	r0, r3, r0
   5ec38:	add	r0, r2, r0
   5ec3c:	cmp	r0, r1
   5ec40:	bcs	5ece8 <GetDataSlab+0x2ab8c>
   5ec44:	mov	r0, #0
   5ec48:	ldr	r1, [sp, #64]	; 0x40
   5ec4c:	cmp	r1, #0
   5ec50:	beq	5ec94 <GetDataSlab+0x2ab38>
   5ec54:	ldr	r1, [sp, #68]	; 0x44
   5ec58:	orr	r3, r0, #1
   5ec5c:	mul	r1, r0, r1
   5ec60:	add	r1, ip, r1, lsl #1
   5ec64:	ldrh	r1, [r1]
   5ec68:	strh	r1, [lr], #2
   5ec6c:	orr	r0, r0, #1
   5ec70:	cmp	r5, r0
   5ec74:	bne	5eca4 <GetDataSlab+0x2ab48>
   5ec78:	b	5ebd4 <GetDataSlab+0x2aa78>
   5ec7c:	ldr	ip, [sp, #92]	; 0x5c
   5ec80:	ldr	r4, [sp, #84]	; 0x54
   5ec84:	mov	r0, #0
   5ec88:	ldr	r1, [sp, #64]	; 0x40
   5ec8c:	cmp	r1, #0
   5ec90:	bne	5ec54 <GetDataSlab+0x2aaf8>
   5ec94:	mov	r3, r0
   5ec98:	orr	r0, r0, #1
   5ec9c:	cmp	r5, r0
   5eca0:	beq	5ebd4 <GetDataSlab+0x2aa78>
   5eca4:	ldr	r2, [sp, #52]	; 0x34
   5eca8:	sub	r1, r5, r3
   5ecac:	mul	r0, r2, r3
   5ecb0:	add	r3, r3, #1
   5ecb4:	mul	r7, r2, r3
   5ecb8:	mov	r3, ip
   5ecbc:	add	r2, r3, r0
   5ecc0:	subs	r1, r1, #2
   5ecc4:	ldrh	r2, [r2]
   5ecc8:	strh	r2, [lr]
   5eccc:	add	r2, r3, r7
   5ecd0:	add	r3, r3, r6
   5ecd4:	ldrh	r2, [r2]
   5ecd8:	strh	r2, [lr, #2]
   5ecdc:	add	lr, lr, #4
   5ece0:	bne	5ecbc <GetDataSlab+0x2ab60>
   5ece4:	b	5ebd4 <GetDataSlab+0x2aa78>
   5ece8:	ldr	r0, [sp, #36]	; 0x24
   5ecec:	cmp	r0, #0
   5ecf0:	beq	5ed34 <GetDataSlab+0x2abd8>
   5ecf4:	ldr	r7, [sp, #32]
   5ecf8:	ldr	r2, [sp, #28]
   5ecfc:	mov	r1, ip
   5ed00:	mov	r0, #0
   5ed04:	mov	sl, lr
   5ed08:	mov	ip, #32
   5ed0c:	add	r3, r1, r8
   5ed10:	vld1.16	{d16-d17}, [r1], r2
   5ed14:	add	r9, sl, #16
   5ed18:	subs	r7, r7, #2
   5ed1c:	add	r0, r0, #16
   5ed20:	vst1.16	{d16-d17}, [sl], ip
   5ed24:	vld1.16	{d16-d17}, [r3]
   5ed28:	vst1.16	{d16-d17}, [r9]
   5ed2c:	bne	5ed0c <GetDataSlab+0x2abb0>
   5ed30:	b	5ed38 <GetDataSlab+0x2abdc>
   5ed34:	mov	r0, #0
   5ed38:	ldr	r1, [sp, #44]	; 0x2c
   5ed3c:	ldr	ip, [sp, #92]	; 0x5c
   5ed40:	ldr	r4, [sp, #84]	; 0x54
   5ed44:	cmp	r1, #0
   5ed48:	beq	5ed64 <GetDataSlab+0x2ac08>
   5ed4c:	ldr	r1, [sp, #68]	; 0x44
   5ed50:	mul	r1, r0, r1
   5ed54:	add	r0, lr, r0, lsl #1
   5ed58:	add	r1, ip, r1, lsl #1
   5ed5c:	vld1.16	{d16-d17}, [r1]
   5ed60:	vst1.16	{d16-d17}, [r0]
   5ed64:	ldr	r0, [sp, #40]	; 0x28
   5ed68:	add	lr, lr, r0, lsl #1
   5ed6c:	cmp	r5, r0
   5ed70:	bne	5ec88 <GetDataSlab+0x2ab2c>
   5ed74:	b	5ebd4 <GetDataSlab+0x2aa78>
   5ed78:	cmp	r3, #1
   5ed7c:	blt	35058 <GetDataSlab+0xefc>
   5ed80:	cmp	r5, #1
   5ed84:	mov	r0, #0
   5ed88:	blt	5b6a4 <GetDataSlab+0x27548>
   5ed8c:	ldr	r0, [sp, #60]	; 0x3c
   5ed90:	ldr	r1, [sp, #56]	; 0x38
   5ed94:	mov	r2, #1
   5ed98:	cmp	r5, #7
   5ed9c:	mov	r7, r8
   5eda0:	ldr	lr, [sp, #88]	; 0x58
   5eda4:	mla	r0, r1, r8, r0
   5eda8:	ldr	r1, [sp, #80]	; 0x50
   5edac:	add	r1, r1, r0, lsl #1
   5edb0:	str	r1, [sp, #92]	; 0x5c
   5edb4:	lsl	r1, r5, #1
   5edb8:	add	r1, r1, r0, lsl #1
   5edbc:	lsl	r0, r0, #1
   5edc0:	str	r0, [sp, #48]	; 0x30
   5edc4:	ldr	r0, [sp, #68]	; 0x44
   5edc8:	str	r1, [sp, #56]	; 0x38
   5edcc:	sub	r1, r5, #8
   5edd0:	add	r2, r2, r1, lsr #3
   5edd4:	and	r3, r2, #1
   5edd8:	sub	r2, r2, r3
   5eddc:	str	r3, [sp, #44]	; 0x2c
   5ede0:	mov	r3, r0
   5ede4:	sub	r0, r0, #1
   5ede8:	clz	r0, r0
   5edec:	str	r2, [sp, #32]
   5edf0:	mov	r2, #0
   5edf4:	lsl	r6, r3, #2
   5edf8:	str	r2, [sp, #84]	; 0x54
   5edfc:	mov	r2, #0
   5ee00:	lsr	r0, r0, #5
   5ee04:	movwhi	r2, #1
   5ee08:	and	r0, r2, r0
   5ee0c:	str	r0, [sp, #60]	; 0x3c
   5ee10:	ldr	r0, [sp, #72]	; 0x48
   5ee14:	mul	r0, r0, r8
   5ee18:	lsl	r0, r0, #1
   5ee1c:	str	r0, [sp, #72]	; 0x48
   5ee20:	lsl	r0, r3, #1
   5ee24:	str	r0, [sp, #52]	; 0x34
   5ee28:	lsl	r0, r3, #5
   5ee2c:	str	r0, [sp, #28]
   5ee30:	lsl	r0, r3, #4
   5ee34:	str	r0, [sp, #24]
   5ee38:	and	r0, r5, #1
   5ee3c:	ldr	r8, [sp, #24]
   5ee40:	str	r0, [sp, #64]	; 0x40
   5ee44:	bic	r0, r5, #7
   5ee48:	str	r0, [sp, #40]	; 0x28
   5ee4c:	lsr	r0, r1, #3
   5ee50:	str	r0, [sp, #36]	; 0x24
   5ee54:	ldr	r0, [sp, #60]	; 0x3c
   5ee58:	cmp	r0, #0
   5ee5c:	bne	5ee94 <GetDataSlab+0x2ad38>
   5ee60:	b	5ef0c <GetDataSlab+0x2adb0>
   5ee64:	ldr	r0, [sp, #72]	; 0x48
   5ee68:	ldr	r1, [sp, #76]	; 0x4c
   5ee6c:	add	r4, r4, #1
   5ee70:	str	r4, [sp, #84]	; 0x54
   5ee74:	add	ip, ip, r0
   5ee78:	mov	r0, #0
   5ee7c:	cmp	r4, r1
   5ee80:	str	ip, [sp, #92]	; 0x5c
   5ee84:	beq	5b6a4 <GetDataSlab+0x27548>
   5ee88:	ldr	r0, [sp, #60]	; 0x3c
   5ee8c:	cmp	r0, #0
   5ee90:	beq	5ef0c <GetDataSlab+0x2adb0>
   5ee94:	ldr	r0, [sp, #72]	; 0x48
   5ee98:	ldr	r4, [sp, #84]	; 0x54
   5ee9c:	ldr	r1, [sp, #56]	; 0x38
   5eea0:	ldr	r2, [sp, #80]	; 0x50
   5eea4:	ldr	ip, [sp, #92]	; 0x5c
   5eea8:	mul	r0, r0, r4
   5eeac:	add	r1, r1, r0
   5eeb0:	add	r1, r2, r1
   5eeb4:	cmp	r1, lr
   5eeb8:	bls	5ef78 <GetDataSlab+0x2ae1c>
   5eebc:	ldr	r3, [sp, #48]	; 0x30
   5eec0:	add	r1, lr, r5, lsl #1
   5eec4:	add	r0, r3, r0
   5eec8:	add	r0, r2, r0
   5eecc:	cmp	r0, r1
   5eed0:	bcs	5ef78 <GetDataSlab+0x2ae1c>
   5eed4:	mov	r0, #0
   5eed8:	ldr	r1, [sp, #64]	; 0x40
   5eedc:	cmp	r1, #0
   5eee0:	beq	5ef24 <GetDataSlab+0x2adc8>
   5eee4:	ldr	r1, [sp, #68]	; 0x44
   5eee8:	orr	r3, r0, #1
   5eeec:	mul	r1, r0, r1
   5eef0:	add	r1, ip, r1, lsl #1
   5eef4:	ldrh	r1, [r1]
   5eef8:	strh	r1, [lr], #2
   5eefc:	orr	r0, r0, #1
   5ef00:	cmp	r5, r0
   5ef04:	bne	5ef34 <GetDataSlab+0x2add8>
   5ef08:	b	5ee64 <GetDataSlab+0x2ad08>
   5ef0c:	ldr	ip, [sp, #92]	; 0x5c
   5ef10:	ldr	r4, [sp, #84]	; 0x54
   5ef14:	mov	r0, #0
   5ef18:	ldr	r1, [sp, #64]	; 0x40
   5ef1c:	cmp	r1, #0
   5ef20:	bne	5eee4 <GetDataSlab+0x2ad88>
   5ef24:	mov	r3, r0
   5ef28:	orr	r0, r0, #1
   5ef2c:	cmp	r5, r0
   5ef30:	beq	5ee64 <GetDataSlab+0x2ad08>
   5ef34:	ldr	r2, [sp, #52]	; 0x34
   5ef38:	sub	r1, r5, r3
   5ef3c:	mul	r0, r2, r3
   5ef40:	add	r3, r3, #1
   5ef44:	mul	r7, r2, r3
   5ef48:	mov	r3, ip
   5ef4c:	add	r2, r3, r0
   5ef50:	subs	r1, r1, #2
   5ef54:	ldrh	r2, [r2]
   5ef58:	strh	r2, [lr]
   5ef5c:	add	r2, r3, r7
   5ef60:	add	r3, r3, r6
   5ef64:	ldrh	r2, [r2]
   5ef68:	strh	r2, [lr, #2]
   5ef6c:	add	lr, lr, #4
   5ef70:	bne	5ef4c <GetDataSlab+0x2adf0>
   5ef74:	b	5ee64 <GetDataSlab+0x2ad08>
   5ef78:	ldr	r0, [sp, #36]	; 0x24
   5ef7c:	cmp	r0, #0
   5ef80:	beq	5efc4 <GetDataSlab+0x2ae68>
   5ef84:	ldr	r7, [sp, #32]
   5ef88:	ldr	r2, [sp, #28]
   5ef8c:	mov	r1, ip
   5ef90:	mov	r0, #0
   5ef94:	mov	sl, lr
   5ef98:	mov	ip, #32
   5ef9c:	add	r3, r1, r8
   5efa0:	vld1.16	{d16-d17}, [r1], r2
   5efa4:	add	r9, sl, #16
   5efa8:	subs	r7, r7, #2
   5efac:	add	r0, r0, #16
   5efb0:	vst1.16	{d16-d17}, [sl], ip
   5efb4:	vld1.16	{d16-d17}, [r3]
   5efb8:	vst1.16	{d16-d17}, [r9]
   5efbc:	bne	5ef9c <GetDataSlab+0x2ae40>
   5efc0:	b	5efc8 <GetDataSlab+0x2ae6c>
   5efc4:	mov	r0, #0
   5efc8:	ldr	r1, [sp, #44]	; 0x2c
   5efcc:	ldr	ip, [sp, #92]	; 0x5c
   5efd0:	ldr	r4, [sp, #84]	; 0x54
   5efd4:	cmp	r1, #0
   5efd8:	beq	5eff4 <GetDataSlab+0x2ae98>
   5efdc:	ldr	r1, [sp, #68]	; 0x44
   5efe0:	mul	r1, r0, r1
   5efe4:	add	r0, lr, r0, lsl #1
   5efe8:	add	r1, ip, r1, lsl #1
   5efec:	vld1.16	{d16-d17}, [r1]
   5eff0:	vst1.16	{d16-d17}, [r0]
   5eff4:	ldr	r0, [sp, #40]	; 0x28
   5eff8:	add	lr, lr, r0, lsl #1
   5effc:	cmp	r5, r0
   5f000:	bne	5ef18 <GetDataSlab+0x2adbc>
   5f004:	b	5ee64 <GetDataSlab+0x2ad08>
   5f008:	cmp	r3, #1
   5f00c:	blt	35058 <GetDataSlab+0xefc>
   5f010:	cmp	r5, #1
   5f014:	mov	r0, #0
   5f018:	blt	5b6a4 <GetDataSlab+0x27548>
   5f01c:	ldr	r0, [sp, #60]	; 0x3c
   5f020:	ldr	r1, [sp, #56]	; 0x38
   5f024:	cmp	r5, #3
   5f028:	ldr	r9, [sp, #88]	; 0x58
   5f02c:	mla	r0, r1, r8, r0
   5f030:	ldr	r1, [sp, #80]	; 0x50
   5f034:	add	sl, r1, r0, lsl #2
   5f038:	sub	r0, r5, #4
   5f03c:	mov	r1, #1
   5f040:	add	r1, r1, r0, lsr #2
   5f044:	lsr	r0, r0, #2
   5f048:	str	r0, [sp, #56]	; 0x38
   5f04c:	and	r2, r1, #1
   5f050:	sub	r1, r1, r2
   5f054:	str	r2, [sp, #60]	; 0x3c
   5f058:	mov	r2, #0
   5f05c:	str	r1, [sp, #48]	; 0x30
   5f060:	ldr	r1, [sp, #68]	; 0x44
   5f064:	str	r2, [sp, #92]	; 0x5c
   5f068:	mov	r2, #0
   5f06c:	movwhi	r2, #1
   5f070:	mov	r7, r1
   5f074:	sub	r1, r1, #1
   5f078:	clz	r1, r1
   5f07c:	lsl	r3, r7, #3
   5f080:	lsl	ip, r7, #5
   5f084:	lsl	r6, r7, #4
   5f088:	lsr	r1, r1, #5
   5f08c:	and	r1, r2, r1
   5f090:	str	r1, [sp, #84]	; 0x54
   5f094:	ldr	r1, [sp, #72]	; 0x48
   5f098:	mul	r1, r1, r8
   5f09c:	lsl	r1, r1, #2
   5f0a0:	str	r1, [sp, #80]	; 0x50
   5f0a4:	lsl	r1, r7, #2
   5f0a8:	str	r1, [sp, #52]	; 0x34
   5f0ac:	and	r1, r5, #1
   5f0b0:	str	r1, [sp, #72]	; 0x48
   5f0b4:	bic	r1, r5, #3
   5f0b8:	str	r1, [sp, #64]	; 0x40
   5f0bc:	ldr	r0, [sp, #84]	; 0x54
   5f0c0:	cmp	r0, #0
   5f0c4:	bne	5f0f4 <GetDataSlab+0x2af98>
   5f0c8:	b	5f184 <GetDataSlab+0x2b028>
   5f0cc:	ldr	r0, [sp, #80]	; 0x50
   5f0d0:	add	r8, r8, #1
   5f0d4:	cmp	r8, lr
   5f0d8:	str	r8, [sp, #92]	; 0x5c
   5f0dc:	add	sl, sl, r0
   5f0e0:	mov	r0, #0
   5f0e4:	beq	5b6a4 <GetDataSlab+0x27548>
   5f0e8:	ldr	r0, [sp, #84]	; 0x54
   5f0ec:	cmp	r0, #0
   5f0f0:	beq	5f184 <GetDataSlab+0x2b028>
   5f0f4:	ldr	r0, [sp, #56]	; 0x38
   5f0f8:	mov	r2, #16
   5f0fc:	cmp	r0, #0
   5f100:	mov	r0, #0
   5f104:	beq	5f140 <GetDataSlab+0x2afe4>
   5f108:	ldr	r4, [sp, #48]	; 0x30
   5f10c:	mov	r1, sl
   5f110:	mov	r8, r9
   5f114:	add	r7, r1, r6
   5f118:	vld1.32	{d16-d17}, [r1], ip
   5f11c:	add	lr, r8, #8
   5f120:	subs	r4, r4, #2
   5f124:	add	r0, r0, #8
   5f128:	vmovn.i32	d16, q8
   5f12c:	vst1.16	{d16}, [r8], r2
   5f130:	vld1.32	{d16-d17}, [r7]
   5f134:	vmovn.i32	d16, q8
   5f138:	vst1.16	{d16}, [lr]
   5f13c:	bne	5f114 <GetDataSlab+0x2afb8>
   5f140:	ldr	r1, [sp, #60]	; 0x3c
   5f144:	cmp	r1, #0
   5f148:	beq	5f168 <GetDataSlab+0x2b00c>
   5f14c:	ldr	r1, [sp, #68]	; 0x44
   5f150:	mul	r1, r0, r1
   5f154:	add	r0, r9, r0, lsl #1
   5f158:	add	r1, sl, r1, lsl #2
   5f15c:	vld1.32	{d16-d17}, [r1]
   5f160:	vmovn.i32	d16, q8
   5f164:	vst1.16	{d16}, [r0]
   5f168:	ldr	r0, [sp, #64]	; 0x40
   5f16c:	ldr	lr, [sp, #76]	; 0x4c
   5f170:	ldr	r8, [sp, #92]	; 0x5c
   5f174:	add	r9, r9, r0, lsl #1
   5f178:	cmp	r5, r0
   5f17c:	beq	5f0cc <GetDataSlab+0x2af70>
   5f180:	b	5f190 <GetDataSlab+0x2b034>
   5f184:	ldr	lr, [sp, #76]	; 0x4c
   5f188:	ldr	r8, [sp, #92]	; 0x5c
   5f18c:	mov	r0, #0
   5f190:	ldr	r1, [sp, #72]	; 0x48
   5f194:	cmp	r1, #0
   5f198:	bne	5f1b0 <GetDataSlab+0x2b054>
   5f19c:	mov	r4, r0
   5f1a0:	orr	r0, r0, #1
   5f1a4:	cmp	r5, r0
   5f1a8:	beq	5f0cc <GetDataSlab+0x2af70>
   5f1ac:	b	5f1d0 <GetDataSlab+0x2b074>
   5f1b0:	ldr	r1, [sp, #68]	; 0x44
   5f1b4:	orr	r4, r0, #1
   5f1b8:	mul	r1, r0, r1
   5f1bc:	ldr	r1, [sl, r1, lsl #2]
   5f1c0:	strh	r1, [r9], #2
   5f1c4:	orr	r0, r0, #1
   5f1c8:	cmp	r5, r0
   5f1cc:	beq	5f0cc <GetDataSlab+0x2af70>
   5f1d0:	ldr	r2, [sp, #52]	; 0x34
   5f1d4:	add	r7, r4, #1
   5f1d8:	sub	r1, r5, r4
   5f1dc:	mul	r0, r2, r4
   5f1e0:	mul	r4, r2, r7
   5f1e4:	mov	r7, sl
   5f1e8:	ldr	r2, [r7, r0]
   5f1ec:	subs	r1, r1, #2
   5f1f0:	strh	r2, [r9]
   5f1f4:	ldr	r2, [r7, r4]
   5f1f8:	add	r7, r7, r3
   5f1fc:	strh	r2, [r9, #2]
   5f200:	add	r9, r9, #4
   5f204:	bne	5f1e8 <GetDataSlab+0x2b08c>
   5f208:	b	5f0cc <GetDataSlab+0x2af70>
   5f20c:	cmp	r3, #1
   5f210:	blt	35058 <GetDataSlab+0xefc>
   5f214:	cmp	r5, #1
   5f218:	mov	r0, #0
   5f21c:	blt	5b6a4 <GetDataSlab+0x27548>
   5f220:	ldr	r0, [sp, #60]	; 0x3c
   5f224:	ldr	r1, [sp, #56]	; 0x38
   5f228:	cmp	r5, #3
   5f22c:	ldr	r9, [sp, #88]	; 0x58
   5f230:	mla	r0, r1, r8, r0
   5f234:	ldr	r1, [sp, #80]	; 0x50
   5f238:	add	sl, r1, r0, lsl #2
   5f23c:	sub	r0, r5, #4
   5f240:	mov	r1, #1
   5f244:	add	r1, r1, r0, lsr #2
   5f248:	lsr	r0, r0, #2
   5f24c:	str	r0, [sp, #56]	; 0x38
   5f250:	and	r2, r1, #1
   5f254:	sub	r1, r1, r2
   5f258:	str	r2, [sp, #60]	; 0x3c
   5f25c:	mov	r2, #0
   5f260:	str	r1, [sp, #48]	; 0x30
   5f264:	ldr	r1, [sp, #68]	; 0x44
   5f268:	str	r2, [sp, #92]	; 0x5c
   5f26c:	mov	r2, #0
   5f270:	movwhi	r2, #1
   5f274:	mov	r7, r1
   5f278:	sub	r1, r1, #1
   5f27c:	clz	r1, r1
   5f280:	lsl	r3, r7, #3
   5f284:	lsl	ip, r7, #5
   5f288:	lsl	r6, r7, #4
   5f28c:	lsr	r1, r1, #5
   5f290:	and	r1, r2, r1
   5f294:	str	r1, [sp, #84]	; 0x54
   5f298:	ldr	r1, [sp, #72]	; 0x48
   5f29c:	mul	r1, r1, r8
   5f2a0:	lsl	r1, r1, #2
   5f2a4:	str	r1, [sp, #80]	; 0x50
   5f2a8:	lsl	r1, r7, #2
   5f2ac:	str	r1, [sp, #52]	; 0x34
   5f2b0:	and	r1, r5, #1
   5f2b4:	str	r1, [sp, #72]	; 0x48
   5f2b8:	bic	r1, r5, #3
   5f2bc:	str	r1, [sp, #64]	; 0x40
   5f2c0:	ldr	r0, [sp, #84]	; 0x54
   5f2c4:	cmp	r0, #0
   5f2c8:	bne	5f2f8 <GetDataSlab+0x2b19c>
   5f2cc:	b	5f388 <GetDataSlab+0x2b22c>
   5f2d0:	ldr	r0, [sp, #80]	; 0x50
   5f2d4:	add	r8, r8, #1
   5f2d8:	cmp	r8, lr
   5f2dc:	str	r8, [sp, #92]	; 0x5c
   5f2e0:	add	sl, sl, r0
   5f2e4:	mov	r0, #0
   5f2e8:	beq	5b6a4 <GetDataSlab+0x27548>
   5f2ec:	ldr	r0, [sp, #84]	; 0x54
   5f2f0:	cmp	r0, #0
   5f2f4:	beq	5f388 <GetDataSlab+0x2b22c>
   5f2f8:	ldr	r0, [sp, #56]	; 0x38
   5f2fc:	mov	r2, #16
   5f300:	cmp	r0, #0
   5f304:	mov	r0, #0
   5f308:	beq	5f344 <GetDataSlab+0x2b1e8>
   5f30c:	ldr	r4, [sp, #48]	; 0x30
   5f310:	mov	r1, sl
   5f314:	mov	lr, r9
   5f318:	add	r7, r1, r6
   5f31c:	vld1.32	{d16-d17}, [r1], ip
   5f320:	add	r8, lr, #8
   5f324:	subs	r4, r4, #2
   5f328:	add	r0, r0, #8
   5f32c:	vmovn.i32	d16, q8
   5f330:	vst1.16	{d16}, [lr], r2
   5f334:	vld1.32	{d16-d17}, [r7]
   5f338:	vmovn.i32	d16, q8
   5f33c:	vst1.16	{d16}, [r8]
   5f340:	bne	5f318 <GetDataSlab+0x2b1bc>
   5f344:	ldr	r1, [sp, #60]	; 0x3c
   5f348:	cmp	r1, #0
   5f34c:	beq	5f36c <GetDataSlab+0x2b210>
   5f350:	ldr	r1, [sp, #68]	; 0x44
   5f354:	mul	r1, r0, r1
   5f358:	add	r0, r9, r0, lsl #1
   5f35c:	add	r1, sl, r1, lsl #2
   5f360:	vld1.32	{d16-d17}, [r1]
   5f364:	vmovn.i32	d16, q8
   5f368:	vst1.16	{d16}, [r0]
   5f36c:	ldr	r0, [sp, #64]	; 0x40
   5f370:	ldr	lr, [sp, #76]	; 0x4c
   5f374:	ldr	r8, [sp, #92]	; 0x5c
   5f378:	add	r9, r9, r0, lsl #1
   5f37c:	cmp	r5, r0
   5f380:	beq	5f2d0 <GetDataSlab+0x2b174>
   5f384:	b	5f394 <GetDataSlab+0x2b238>
   5f388:	ldr	lr, [sp, #76]	; 0x4c
   5f38c:	ldr	r8, [sp, #92]	; 0x5c
   5f390:	mov	r0, #0
   5f394:	ldr	r1, [sp, #72]	; 0x48
   5f398:	cmp	r1, #0
   5f39c:	bne	5f3b4 <GetDataSlab+0x2b258>
   5f3a0:	mov	r4, r0
   5f3a4:	orr	r0, r0, #1
   5f3a8:	cmp	r5, r0
   5f3ac:	beq	5f2d0 <GetDataSlab+0x2b174>
   5f3b0:	b	5f3d4 <GetDataSlab+0x2b278>
   5f3b4:	ldr	r1, [sp, #68]	; 0x44
   5f3b8:	orr	r4, r0, #1
   5f3bc:	mul	r1, r0, r1
   5f3c0:	ldr	r1, [sl, r1, lsl #2]
   5f3c4:	strh	r1, [r9], #2
   5f3c8:	orr	r0, r0, #1
   5f3cc:	cmp	r5, r0
   5f3d0:	beq	5f2d0 <GetDataSlab+0x2b174>
   5f3d4:	ldr	r2, [sp, #52]	; 0x34
   5f3d8:	add	r7, r4, #1
   5f3dc:	sub	r1, r5, r4
   5f3e0:	mul	r0, r2, r4
   5f3e4:	mul	r4, r2, r7
   5f3e8:	mov	r7, sl
   5f3ec:	ldr	r2, [r7, r0]
   5f3f0:	subs	r1, r1, #2
   5f3f4:	strh	r2, [r9]
   5f3f8:	ldr	r2, [r7, r4]
   5f3fc:	add	r7, r7, r3
   5f400:	strh	r2, [r9, #2]
   5f404:	add	r9, r9, #4
   5f408:	bne	5f3ec <GetDataSlab+0x2b290>
   5f40c:	b	5f2d0 <GetDataSlab+0x2b174>
   5f410:	cmp	r3, #1
   5f414:	blt	35058 <GetDataSlab+0xefc>
   5f418:	cmp	r5, #1
   5f41c:	mov	r0, #0
   5f420:	blt	5b6a4 <GetDataSlab+0x27548>
   5f424:	ldr	r0, [sp, #60]	; 0x3c
   5f428:	ldr	r1, [sp, #56]	; 0x38
   5f42c:	mov	r3, r8
   5f430:	cmp	r5, #3
   5f434:	mov	r6, #0
   5f438:	mla	r0, r1, r8, r0
   5f43c:	ldr	r1, [sp, #80]	; 0x50
   5f440:	add	r8, r1, r0, lsl #2
   5f444:	sub	r0, r5, #4
   5f448:	mov	r1, #1
   5f44c:	add	r1, r1, r0, lsr #2
   5f450:	lsr	r0, r0, #2
   5f454:	str	r0, [sp, #64]	; 0x40
   5f458:	and	r2, r1, #1
   5f45c:	sub	r1, r1, r2
   5f460:	str	r2, [sp, #60]	; 0x3c
   5f464:	mov	r2, #0
   5f468:	movwhi	r2, #1
   5f46c:	str	r1, [sp, #52]	; 0x34
   5f470:	ldr	r1, [sp, #68]	; 0x44
   5f474:	mov	r7, r1
   5f478:	sub	r1, r1, #1
   5f47c:	clz	r1, r1
   5f480:	lsl	lr, r7, #5
   5f484:	lsl	ip, r7, #4
   5f488:	lsr	r1, r1, #5
   5f48c:	and	r1, r2, r1
   5f490:	str	r1, [sp, #92]	; 0x5c
   5f494:	ldr	r1, [sp, #72]	; 0x48
   5f498:	mul	r1, r1, r3
   5f49c:	lsl	r3, r7, #3
   5f4a0:	lsl	r1, r1, #2
   5f4a4:	str	r1, [sp, #84]	; 0x54
   5f4a8:	lsl	r1, r7, #2
   5f4ac:	str	r1, [sp, #56]	; 0x38
   5f4b0:	and	r1, r5, #1
   5f4b4:	str	r1, [sp, #80]	; 0x50
   5f4b8:	bic	r1, r5, #3
   5f4bc:	str	r1, [sp, #72]	; 0x48
   5f4c0:	ldr	r0, [sp, #92]	; 0x5c
   5f4c4:	cmp	r0, #0
   5f4c8:	bne	5f4fc <GetDataSlab+0x2b3a0>
   5f4cc:	b	5f5a4 <GetDataSlab+0x2b448>
   5f4d0:	ldr	r0, [sp, #84]	; 0x54
   5f4d4:	ldr	r1, [sp, #76]	; 0x4c
   5f4d8:	add	r9, r9, #1
   5f4dc:	mov	r6, r9
   5f4e0:	add	r8, r8, r0
   5f4e4:	mov	r0, #0
   5f4e8:	cmp	r9, r1
   5f4ec:	beq	5b6a4 <GetDataSlab+0x27548>
   5f4f0:	ldr	r0, [sp, #92]	; 0x5c
   5f4f4:	cmp	r0, #0
   5f4f8:	beq	5f5a4 <GetDataSlab+0x2b448>
   5f4fc:	ldr	r0, [sp, #64]	; 0x40
   5f500:	mov	r2, #16
   5f504:	cmp	r0, #0
   5f508:	mov	r0, #0
   5f50c:	beq	5f550 <GetDataSlab+0x2b3f4>
   5f510:	ldr	sl, [sp, #88]	; 0x58
   5f514:	ldr	r9, [sp, #52]	; 0x34
   5f518:	mov	r1, r8
   5f51c:	add	r4, r1, ip
   5f520:	vld1.32	{d16-d17}, [r1], lr
   5f524:	add	r7, sl, #8
   5f528:	subs	r9, r9, #2
   5f52c:	add	r0, r0, #8
   5f530:	vcvt.s32.f32	q8, q8
   5f534:	vmovn.i32	d16, q8
   5f538:	vst1.16	{d16}, [sl], r2
   5f53c:	vld1.32	{d16-d17}, [r4]
   5f540:	vcvt.s32.f32	q8, q8
   5f544:	vmovn.i32	d16, q8
   5f548:	vst1.16	{d16}, [r7]
   5f54c:	bne	5f51c <GetDataSlab+0x2b3c0>
   5f550:	ldr	r1, [sp, #60]	; 0x3c
   5f554:	cmp	r1, #0
   5f558:	beq	5f580 <GetDataSlab+0x2b424>
   5f55c:	ldr	r1, [sp, #68]	; 0x44
   5f560:	mul	r1, r0, r1
   5f564:	add	r1, r8, r1, lsl #2
   5f568:	vld1.32	{d16-d17}, [r1]
   5f56c:	ldr	r1, [sp, #88]	; 0x58
   5f570:	add	r0, r1, r0, lsl #1
   5f574:	vcvt.s32.f32	q8, q8
   5f578:	vmovn.i32	d16, q8
   5f57c:	vst1.16	{d16}, [r0]
   5f580:	ldr	r1, [sp, #72]	; 0x48
   5f584:	ldr	r0, [sp, #88]	; 0x58
   5f588:	mov	r9, r6
   5f58c:	add	r0, r0, r1, lsl #1
   5f590:	cmp	r5, r1
   5f594:	str	r0, [sp, #88]	; 0x58
   5f598:	mov	r0, r1
   5f59c:	beq	5f4d0 <GetDataSlab+0x2b374>
   5f5a0:	b	5f5ac <GetDataSlab+0x2b450>
   5f5a4:	mov	r0, #0
   5f5a8:	mov	r9, r6
   5f5ac:	ldr	r1, [sp, #80]	; 0x50
   5f5b0:	cmp	r1, #0
   5f5b4:	bne	5f5cc <GetDataSlab+0x2b470>
   5f5b8:	mov	r4, r0
   5f5bc:	orr	r0, r0, #1
   5f5c0:	cmp	r5, r0
   5f5c4:	beq	5f4d0 <GetDataSlab+0x2b374>
   5f5c8:	b	5f600 <GetDataSlab+0x2b4a4>
   5f5cc:	ldr	r1, [sp, #68]	; 0x44
   5f5d0:	orr	r4, r0, #1
   5f5d4:	mul	r1, r0, r1
   5f5d8:	add	r1, r8, r1, lsl #2
   5f5dc:	vldr	s0, [r1]
   5f5e0:	vcvt.s32.f32	s0, s0
   5f5e4:	ldr	r2, [sp, #88]	; 0x58
   5f5e8:	vmov	r1, s0
   5f5ec:	strh	r1, [r2], #2
   5f5f0:	str	r2, [sp, #88]	; 0x58
   5f5f4:	orr	r0, r0, #1
   5f5f8:	cmp	r5, r0
   5f5fc:	beq	5f4d0 <GetDataSlab+0x2b374>
   5f600:	ldr	r2, [sp, #56]	; 0x38
   5f604:	sub	r1, r5, r4
   5f608:	ldr	r6, [sp, #88]	; 0x58
   5f60c:	mov	r7, r8
   5f610:	mul	r0, r2, r4
   5f614:	add	r4, r4, #1
   5f618:	mul	r4, r2, r4
   5f61c:	add	r2, r7, r0
   5f620:	subs	r1, r1, #2
   5f624:	vldr	s0, [r2]
   5f628:	vcvt.s32.f32	s0, s0
   5f62c:	vmov	r2, s0
   5f630:	strh	r2, [r6]
   5f634:	add	r2, r7, r4
   5f638:	add	r7, r7, r3
   5f63c:	vldr	s0, [r2]
   5f640:	vcvt.s32.f32	s0, s0
   5f644:	vmov	r2, s0
   5f648:	strh	r2, [r6, #2]
   5f64c:	add	r6, r6, #4
   5f650:	bne	5f61c <GetDataSlab+0x2b4c0>
   5f654:	str	r6, [sp, #88]	; 0x58
   5f658:	b	5f4d0 <GetDataSlab+0x2b374>
   5f65c:	cmp	r3, #1
   5f660:	blt	35058 <GetDataSlab+0xefc>
   5f664:	cmp	r5, #1
   5f668:	mov	r0, #0
   5f66c:	blt	5b6a4 <GetDataSlab+0x27548>
   5f670:	ldr	r0, [sp, #60]	; 0x3c
   5f674:	ldr	r1, [sp, #56]	; 0x38
   5f678:	mov	r2, r8
   5f67c:	and	ip, r5, #1
   5f680:	mov	r9, #0
   5f684:	sub	r3, r5, ip
   5f688:	mla	r0, r1, r8, r0
   5f68c:	ldr	r1, [sp, #80]	; 0x50
   5f690:	add	r8, r1, r0, lsl #3
   5f694:	ldr	r0, [sp, #72]	; 0x48
   5f698:	mul	r0, r0, r2
   5f69c:	lsl	lr, r0, #3
   5f6a0:	ldr	r0, [sp, #68]	; 0x44
   5f6a4:	lsl	r6, r0, #4
   5f6a8:	lsl	r4, r0, #3
   5f6ac:	mov	r0, #0
   5f6b0:	cmp	r5, #1
   5f6b4:	beq	5f724 <GetDataSlab+0x2b5c8>
   5f6b8:	b	5f6e0 <GetDataSlab+0x2b584>
   5f6bc:	ldr	r1, [sp, #76]	; 0x4c
   5f6c0:	add	r9, r9, #1
   5f6c4:	add	r8, r8, lr
   5f6c8:	mov	r0, #0
   5f6cc:	cmp	r9, r1
   5f6d0:	beq	5b6a4 <GetDataSlab+0x27548>
   5f6d4:	mov	r0, #0
   5f6d8:	cmp	r5, #1
   5f6dc:	beq	5f724 <GetDataSlab+0x2b5c8>
   5f6e0:	ldr	r2, [sp, #88]	; 0x58
   5f6e4:	mov	r1, r8
   5f6e8:	vldr	d16, [r1]
   5f6ec:	add	r0, r0, #2
   5f6f0:	cmp	r3, r0
   5f6f4:	vcvt.s32.f64	s0, d16
   5f6f8:	vmov	r7, s0
   5f6fc:	strh	r7, [r2]
   5f700:	add	r7, r1, r4
   5f704:	add	r1, r1, r6
   5f708:	vldr	d16, [r7]
   5f70c:	vcvt.s32.f64	s0, d16
   5f710:	vmov	r7, s0
   5f714:	strh	r7, [r2, #2]
   5f718:	add	r2, r2, #4
   5f71c:	bne	5f6e8 <GetDataSlab+0x2b58c>
   5f720:	str	r2, [sp, #88]	; 0x58
   5f724:	cmp	ip, #0
   5f728:	beq	5f6bc <GetDataSlab+0x2b560>
   5f72c:	ldr	r1, [sp, #68]	; 0x44
   5f730:	mul	r0, r0, r1
   5f734:	add	r0, r8, r0, lsl #3
   5f738:	vldr	d16, [r0]
   5f73c:	vcvt.s32.f64	s0, d16
   5f740:	ldr	r1, [sp, #88]	; 0x58
   5f744:	vmov	r0, s0
   5f748:	strh	r0, [r1], #2
   5f74c:	str	r1, [sp, #88]	; 0x58
   5f750:	b	5f6bc <GetDataSlab+0x2b560>
   5f754:	cmp	r3, #1
   5f758:	blt	35058 <GetDataSlab+0xefc>
   5f75c:	cmp	r5, #1
   5f760:	mov	r0, #0
   5f764:	blt	5b6a4 <GetDataSlab+0x27548>
   5f768:	ldr	r0, [sp, #60]	; 0x3c
   5f76c:	ldr	r1, [sp, #56]	; 0x38
   5f770:	cmp	r5, #1
   5f774:	ldr	ip, [sp, #88]	; 0x58
   5f778:	mov	lr, #0
   5f77c:	mla	r0, r1, r8, r0
   5f780:	ldr	r1, [sp, #80]	; 0x50
   5f784:	add	sl, r1, r0, lsl #3
   5f788:	sub	r0, r5, #2
   5f78c:	mov	r1, #1
   5f790:	add	r1, r1, r0, lsr #1
   5f794:	lsr	r0, r0, #1
   5f798:	str	r0, [sp, #44]	; 0x2c
   5f79c:	and	r2, r1, #1
   5f7a0:	sub	r1, r1, r2
   5f7a4:	str	r2, [sp, #52]	; 0x34
   5f7a8:	mov	r2, #0
   5f7ac:	movwhi	r2, #1
   5f7b0:	str	r1, [sp, #32]
   5f7b4:	ldr	r1, [sp, #68]	; 0x44
   5f7b8:	mov	r3, r1
   5f7bc:	sub	r1, r1, #1
   5f7c0:	clz	r1, r1
   5f7c4:	lsr	r1, r1, #5
   5f7c8:	and	r6, r2, r1
   5f7cc:	ldr	r1, [sp, #72]	; 0x48
   5f7d0:	lsl	r2, r3, #5
   5f7d4:	mul	r1, r1, r8
   5f7d8:	lsl	r7, r1, #3
   5f7dc:	lsl	r1, r3, #3
   5f7e0:	str	r1, [sp, #36]	; 0x24
   5f7e4:	lsl	r1, r3, #4
   5f7e8:	mov	r3, r7
   5f7ec:	and	r7, r5, #1
   5f7f0:	str	r7, [sp, #92]	; 0x5c
   5f7f4:	bic	r7, r5, #1
   5f7f8:	str	r3, [sp, #40]	; 0x28
   5f7fc:	str	r7, [sp, #48]	; 0x30
   5f800:	cmp	r6, #0
   5f804:	bne	5f828 <GetDataSlab+0x2b6cc>
   5f808:	b	5f8c8 <GetDataSlab+0x2b76c>
   5f80c:	ldr	r0, [sp, #76]	; 0x4c
   5f810:	add	lr, lr, #1
   5f814:	add	sl, sl, r3
   5f818:	cmp	lr, r0
   5f81c:	beq	640d8 <GetDataSlab+0x2ff7c>
   5f820:	cmp	r6, #0
   5f824:	beq	5f8c8 <GetDataSlab+0x2b76c>
   5f828:	ldr	r0, [sp, #44]	; 0x2c
   5f82c:	mov	r4, #0
   5f830:	cmp	r0, #0
   5f834:	beq	5f884 <GetDataSlab+0x2b728>
   5f838:	ldr	r9, [sp, #32]
   5f83c:	mov	r0, sl
   5f840:	mov	r7, ip
   5f844:	mov	r8, sl
   5f848:	vld1.64	{d16-d17}, [r8], r2
   5f84c:	add	r0, r0, r1
   5f850:	subs	r9, r9, #2
   5f854:	add	r4, r4, #4
   5f858:	vmovn.i64	d16, q8
   5f85c:	vuzp.16	d16, d17
   5f860:	vst1.32	{d16[0]}, [r7]
   5f864:	vld1.64	{d16-d17}, [r0]
   5f868:	add	r0, r7, #4
   5f86c:	add	r7, r7, #8
   5f870:	vmovn.i64	d16, q8
   5f874:	vuzp.16	d16, d17
   5f878:	vst1.32	{d16[0]}, [r0]
   5f87c:	mov	r0, r8
   5f880:	bne	5f848 <GetDataSlab+0x2b6ec>
   5f884:	ldr	r0, [sp, #52]	; 0x34
   5f888:	ldr	r8, [sp, #64]	; 0x40
   5f88c:	cmp	r0, #0
   5f890:	beq	5f8b4 <GetDataSlab+0x2b758>
   5f894:	ldr	r0, [sp, #68]	; 0x44
   5f898:	mul	r0, r4, r0
   5f89c:	add	r0, sl, r0, lsl #3
   5f8a0:	vld1.64	{d16-d17}, [r0]
   5f8a4:	add	r0, ip, r4, lsl #1
   5f8a8:	vmovn.i64	d16, q8
   5f8ac:	vuzp.16	d16, d17
   5f8b0:	vst1.32	{d16[0]}, [r0]
   5f8b4:	ldr	r4, [sp, #48]	; 0x30
   5f8b8:	add	ip, ip, r4, lsl #1
   5f8bc:	cmp	r5, r4
   5f8c0:	beq	5f80c <GetDataSlab+0x2b6b0>
   5f8c4:	b	5f8cc <GetDataSlab+0x2b770>
   5f8c8:	mov	r4, #0
   5f8cc:	ldr	r0, [sp, #92]	; 0x5c
   5f8d0:	cmp	r0, #0
   5f8d4:	bne	5f8ec <GetDataSlab+0x2b790>
   5f8d8:	mov	r0, r4
   5f8dc:	orr	r4, r4, #1
   5f8e0:	cmp	r5, r4
   5f8e4:	beq	5f80c <GetDataSlab+0x2b6b0>
   5f8e8:	b	5f910 <GetDataSlab+0x2b7b4>
   5f8ec:	ldr	r0, [sp, #68]	; 0x44
   5f8f0:	mul	r0, r4, r0
   5f8f4:	add	r0, sl, r0, lsl #3
   5f8f8:	ldrh	r0, [r0]
   5f8fc:	strh	r0, [ip], #2
   5f900:	orr	r0, r4, #1
   5f904:	orr	r4, r4, #1
   5f908:	cmp	r5, r4
   5f90c:	beq	5f80c <GetDataSlab+0x2b6b0>
   5f910:	ldr	r3, [sp, #36]	; 0x24
   5f914:	sub	r7, r5, r0
   5f918:	mov	r9, r6
   5f91c:	mov	r6, sl
   5f920:	mul	r4, r3, r0
   5f924:	add	r0, r0, #1
   5f928:	mul	r0, r3, r0
   5f92c:	add	r3, r6, r4
   5f930:	subs	r7, r7, #2
   5f934:	ldrh	r3, [r3]
   5f938:	strh	r3, [ip]
   5f93c:	add	r3, r6, r0
   5f940:	add	r6, r6, r1
   5f944:	ldrh	r3, [r3]
   5f948:	strh	r3, [ip, #2]
   5f94c:	add	ip, ip, #4
   5f950:	bne	5f92c <GetDataSlab+0x2b7d0>
   5f954:	ldr	r3, [sp, #40]	; 0x28
   5f958:	mov	r6, r9
   5f95c:	b	5f80c <GetDataSlab+0x2b6b0>
   5f960:	cmp	r3, #1
   5f964:	blt	35058 <GetDataSlab+0xefc>
   5f968:	cmp	r5, #1
   5f96c:	mov	r0, #0
   5f970:	blt	5b6a4 <GetDataSlab+0x27548>
   5f974:	ldr	r0, [sp, #72]	; 0x48
   5f978:	ldr	r3, [sp, #60]	; 0x3c
   5f97c:	ldr	r7, [sp, #56]	; 0x38
   5f980:	mov	r2, r8
   5f984:	mov	r2, #0
   5f988:	cmp	r5, #7
   5f98c:	ldr	sl, [sp, #88]	; 0x58
   5f990:	str	r2, [sp, #84]	; 0x54
   5f994:	mov	r2, #0
   5f998:	movwhi	r2, #1
   5f99c:	mul	r0, r0, r8
   5f9a0:	mla	r1, r7, r8, r3
   5f9a4:	str	r0, [sp, #72]	; 0x48
   5f9a8:	ldr	r0, [sp, #80]	; 0x50
   5f9ac:	str	r1, [sp, #52]	; 0x34
   5f9b0:	add	r0, r0, r1
   5f9b4:	mov	r1, #1
   5f9b8:	str	r0, [sp, #92]	; 0x5c
   5f9bc:	sub	r0, r5, #8
   5f9c0:	add	r1, r1, r0, lsr #3
   5f9c4:	lsr	r0, r0, #3
   5f9c8:	str	r0, [sp, #40]	; 0x28
   5f9cc:	and	r6, r1, #1
   5f9d0:	sub	r1, r1, r6
   5f9d4:	str	r6, [sp, #48]	; 0x30
   5f9d8:	str	r1, [sp, #36]	; 0x24
   5f9dc:	add	r1, r5, r3
   5f9e0:	mla	r1, r7, r8, r1
   5f9e4:	str	r1, [sp, #56]	; 0x38
   5f9e8:	ldr	r1, [sp, #68]	; 0x44
   5f9ec:	mov	r3, r1
   5f9f0:	sub	r1, r1, #1
   5f9f4:	clz	r1, r1
   5f9f8:	lsr	r1, r1, #5
   5f9fc:	and	r1, r2, r1
   5fa00:	lsl	r2, r3, #1
   5fa04:	str	r1, [sp, #64]	; 0x40
   5fa08:	lsl	r1, r3, #4
   5fa0c:	str	r1, [sp, #32]
   5fa10:	lsl	r1, r3, #3
   5fa14:	str	r1, [sp, #28]
   5fa18:	ldr	r8, [sp, #32]
   5fa1c:	and	r1, r5, #1
   5fa20:	ldr	lr, [sp, #28]
   5fa24:	str	r1, [sp, #60]	; 0x3c
   5fa28:	bic	r1, r5, #7
   5fa2c:	str	r1, [sp, #44]	; 0x2c
   5fa30:	ldr	r0, [sp, #64]	; 0x40
   5fa34:	cmp	r0, #0
   5fa38:	bne	5fa70 <GetDataSlab+0x2b914>
   5fa3c:	b	5fae4 <GetDataSlab+0x2b988>
   5fa40:	ldr	r0, [sp, #72]	; 0x48
   5fa44:	ldr	r1, [sp, #76]	; 0x4c
   5fa48:	add	r6, r6, #1
   5fa4c:	str	r6, [sp, #84]	; 0x54
   5fa50:	add	ip, ip, r0
   5fa54:	mov	r0, #0
   5fa58:	cmp	r6, r1
   5fa5c:	str	ip, [sp, #92]	; 0x5c
   5fa60:	beq	5b6a4 <GetDataSlab+0x27548>
   5fa64:	ldr	r0, [sp, #64]	; 0x40
   5fa68:	cmp	r0, #0
   5fa6c:	beq	5fae4 <GetDataSlab+0x2b988>
   5fa70:	ldr	r0, [sp, #72]	; 0x48
   5fa74:	ldr	r6, [sp, #84]	; 0x54
   5fa78:	ldr	r1, [sp, #56]	; 0x38
   5fa7c:	ldr	r3, [sp, #80]	; 0x50
   5fa80:	ldr	ip, [sp, #92]	; 0x5c
   5fa84:	mul	r0, r0, r6
   5fa88:	add	r1, r1, r0
   5fa8c:	add	r1, r3, r1
   5fa90:	cmp	r1, sl
   5fa94:	bls	5fb48 <GetDataSlab+0x2b9ec>
   5fa98:	ldr	r7, [sp, #52]	; 0x34
   5fa9c:	add	r1, sl, r5, lsl #1
   5faa0:	add	r0, r7, r0
   5faa4:	add	r0, r3, r0
   5faa8:	cmp	r0, r1
   5faac:	bcs	5fb48 <GetDataSlab+0x2b9ec>
   5fab0:	mov	r0, #0
   5fab4:	ldr	r1, [sp, #60]	; 0x3c
   5fab8:	cmp	r1, #0
   5fabc:	beq	5fafc <GetDataSlab+0x2b9a0>
   5fac0:	ldr	r1, [sp, #68]	; 0x44
   5fac4:	orr	r3, r0, #1
   5fac8:	mul	r1, r0, r1
   5facc:	ldrb	r1, [ip, r1]
   5fad0:	strh	r1, [sl], #2
   5fad4:	orr	r0, r0, #1
   5fad8:	cmp	r5, r0
   5fadc:	bne	5fb0c <GetDataSlab+0x2b9b0>
   5fae0:	b	5fa40 <GetDataSlab+0x2b8e4>
   5fae4:	ldr	ip, [sp, #92]	; 0x5c
   5fae8:	ldr	r6, [sp, #84]	; 0x54
   5faec:	mov	r0, #0
   5faf0:	ldr	r1, [sp, #60]	; 0x3c
   5faf4:	cmp	r1, #0
   5faf8:	bne	5fac0 <GetDataSlab+0x2b964>
   5fafc:	mov	r3, r0
   5fb00:	orr	r0, r0, #1
   5fb04:	cmp	r5, r0
   5fb08:	beq	5fa40 <GetDataSlab+0x2b8e4>
   5fb0c:	ldr	r7, [sp, #68]	; 0x44
   5fb10:	sub	r1, r5, r3
   5fb14:	mov	r4, ip
   5fb18:	mul	r0, r7, r3
   5fb1c:	add	r3, r3, #1
   5fb20:	mul	r3, r7, r3
   5fb24:	ldrb	r7, [r4, r0]
   5fb28:	subs	r1, r1, #2
   5fb2c:	strh	r7, [sl]
   5fb30:	ldrb	r7, [r4, r3]
   5fb34:	add	r4, r4, r2
   5fb38:	strh	r7, [sl, #2]
   5fb3c:	add	sl, sl, #4
   5fb40:	bne	5fb24 <GetDataSlab+0x2b9c8>
   5fb44:	b	5fa40 <GetDataSlab+0x2b8e4>
   5fb48:	ldr	r0, [sp, #40]	; 0x28
   5fb4c:	cmp	r0, #0
   5fb50:	beq	5fbc4 <GetDataSlab+0x2ba68>
   5fb54:	ldr	r1, [sp, #36]	; 0x24
   5fb58:	mov	r0, #0
   5fb5c:	mov	r3, ip
   5fb60:	mov	r9, sl
   5fb64:	ldr	r4, [r3]
   5fb68:	ldr	ip, [r3, #4]
   5fb6c:	add	r7, sp, #472	; 0x1d8
   5fb70:	subs	r1, r1, #2
   5fb74:	add	r0, r0, #16
   5fb78:	str	r4, [sp, #472]	; 0x1d8
   5fb7c:	str	ip, [sp, #476]	; 0x1dc
   5fb80:	add	r4, r9, #16
   5fb84:	vld1.8	{d16}, [r7 :64]
   5fb88:	mov	r7, #32
   5fb8c:	vmovl.u8	q8, d16
   5fb90:	vst1.16	{d16-d17}, [r9], r7
   5fb94:	add	r7, r3, r8
   5fb98:	ldr	r6, [r3, lr]!
   5fb9c:	str	r6, [sp, #480]	; 0x1e0
   5fba0:	ldr	r3, [r3, #4]
   5fba4:	str	r3, [sp, #484]	; 0x1e4
   5fba8:	add	r3, sp, #480	; 0x1e0
   5fbac:	vld1.8	{d16}, [r3 :64]
   5fbb0:	mov	r3, r7
   5fbb4:	vmovl.u8	q8, d16
   5fbb8:	vst1.16	{d16-d17}, [r4]
   5fbbc:	bne	5fb64 <GetDataSlab+0x2ba08>
   5fbc0:	b	5fbc8 <GetDataSlab+0x2ba6c>
   5fbc4:	mov	r0, #0
   5fbc8:	ldr	r1, [sp, #48]	; 0x30
   5fbcc:	ldr	ip, [sp, #92]	; 0x5c
   5fbd0:	cmp	r1, #0
   5fbd4:	beq	5fc08 <GetDataSlab+0x2baac>
   5fbd8:	ldr	r1, [sp, #68]	; 0x44
   5fbdc:	mov	r3, ip
   5fbe0:	mul	r1, r0, r1
   5fbe4:	add	r0, sl, r0, lsl #1
   5fbe8:	ldr	r1, [r3, r1]!
   5fbec:	str	r1, [sp, #464]	; 0x1d0
   5fbf0:	ldr	r1, [r3, #4]
   5fbf4:	str	r1, [sp, #468]	; 0x1d4
   5fbf8:	add	r1, sp, #464	; 0x1d0
   5fbfc:	vld1.8	{d16}, [r1 :64]
   5fc00:	vmovl.u8	q8, d16
   5fc04:	vst1.16	{d16-d17}, [r0]
   5fc08:	ldr	r0, [sp, #44]	; 0x2c
   5fc0c:	ldr	r6, [sp, #84]	; 0x54
   5fc10:	add	sl, sl, r0, lsl #1
   5fc14:	cmp	r5, r0
   5fc18:	bne	5faf0 <GetDataSlab+0x2b994>
   5fc1c:	b	5fa40 <GetDataSlab+0x2b8e4>
   5fc20:	cmp	r3, #1
   5fc24:	blt	35058 <GetDataSlab+0xefc>
   5fc28:	cmp	r5, #1
   5fc2c:	mov	r0, #0
   5fc30:	blt	5b6a4 <GetDataSlab+0x27548>
   5fc34:	ldr	r0, [sp, #60]	; 0x3c
   5fc38:	ldr	r1, [sp, #56]	; 0x38
   5fc3c:	mov	r2, #1
   5fc40:	cmp	r5, #7
   5fc44:	mov	r7, r8
   5fc48:	ldr	lr, [sp, #88]	; 0x58
   5fc4c:	mla	r0, r1, r8, r0
   5fc50:	ldr	r1, [sp, #80]	; 0x50
   5fc54:	add	r1, r1, r0, lsl #1
   5fc58:	str	r1, [sp, #92]	; 0x5c
   5fc5c:	lsl	r1, r5, #1
   5fc60:	add	r1, r1, r0, lsl #1
   5fc64:	lsl	r0, r0, #1
   5fc68:	str	r0, [sp, #48]	; 0x30
   5fc6c:	ldr	r0, [sp, #68]	; 0x44
   5fc70:	str	r1, [sp, #56]	; 0x38
   5fc74:	sub	r1, r5, #8
   5fc78:	add	r2, r2, r1, lsr #3
   5fc7c:	and	r3, r2, #1
   5fc80:	sub	r2, r2, r3
   5fc84:	str	r3, [sp, #44]	; 0x2c
   5fc88:	mov	r3, r0
   5fc8c:	sub	r0, r0, #1
   5fc90:	clz	r0, r0
   5fc94:	str	r2, [sp, #32]
   5fc98:	mov	r2, #0
   5fc9c:	lsl	r6, r3, #2
   5fca0:	str	r2, [sp, #84]	; 0x54
   5fca4:	mov	r2, #0
   5fca8:	lsr	r0, r0, #5
   5fcac:	movwhi	r2, #1
   5fcb0:	and	r0, r2, r0
   5fcb4:	str	r0, [sp, #60]	; 0x3c
   5fcb8:	ldr	r0, [sp, #72]	; 0x48
   5fcbc:	mul	r0, r0, r8
   5fcc0:	lsl	r0, r0, #1
   5fcc4:	str	r0, [sp, #72]	; 0x48
   5fcc8:	lsl	r0, r3, #1
   5fccc:	str	r0, [sp, #52]	; 0x34
   5fcd0:	lsl	r0, r3, #5
   5fcd4:	str	r0, [sp, #28]
   5fcd8:	lsl	r0, r3, #4
   5fcdc:	str	r0, [sp, #24]
   5fce0:	and	r0, r5, #1
   5fce4:	ldr	r8, [sp, #24]
   5fce8:	str	r0, [sp, #64]	; 0x40
   5fcec:	bic	r0, r5, #7
   5fcf0:	str	r0, [sp, #40]	; 0x28
   5fcf4:	lsr	r0, r1, #3
   5fcf8:	str	r0, [sp, #36]	; 0x24
   5fcfc:	ldr	r0, [sp, #60]	; 0x3c
   5fd00:	cmp	r0, #0
   5fd04:	bne	5fd3c <GetDataSlab+0x2bbe0>
   5fd08:	b	5fdb4 <GetDataSlab+0x2bc58>
   5fd0c:	ldr	r0, [sp, #72]	; 0x48
   5fd10:	ldr	r1, [sp, #76]	; 0x4c
   5fd14:	add	r4, r4, #1
   5fd18:	str	r4, [sp, #84]	; 0x54
   5fd1c:	add	ip, ip, r0
   5fd20:	mov	r0, #0
   5fd24:	cmp	r4, r1
   5fd28:	str	ip, [sp, #92]	; 0x5c
   5fd2c:	beq	5b6a4 <GetDataSlab+0x27548>
   5fd30:	ldr	r0, [sp, #60]	; 0x3c
   5fd34:	cmp	r0, #0
   5fd38:	beq	5fdb4 <GetDataSlab+0x2bc58>
   5fd3c:	ldr	r0, [sp, #72]	; 0x48
   5fd40:	ldr	r4, [sp, #84]	; 0x54
   5fd44:	ldr	r1, [sp, #56]	; 0x38
   5fd48:	ldr	r2, [sp, #80]	; 0x50
   5fd4c:	ldr	ip, [sp, #92]	; 0x5c
   5fd50:	mul	r0, r0, r4
   5fd54:	add	r1, r1, r0
   5fd58:	add	r1, r2, r1
   5fd5c:	cmp	r1, lr
   5fd60:	bls	5fe20 <GetDataSlab+0x2bcc4>
   5fd64:	ldr	r3, [sp, #48]	; 0x30
   5fd68:	add	r1, lr, r5, lsl #1
   5fd6c:	add	r0, r3, r0
   5fd70:	add	r0, r2, r0
   5fd74:	cmp	r0, r1
   5fd78:	bcs	5fe20 <GetDataSlab+0x2bcc4>
   5fd7c:	mov	r0, #0
   5fd80:	ldr	r1, [sp, #64]	; 0x40
   5fd84:	cmp	r1, #0
   5fd88:	beq	5fdcc <GetDataSlab+0x2bc70>
   5fd8c:	ldr	r1, [sp, #68]	; 0x44
   5fd90:	orr	r3, r0, #1
   5fd94:	mul	r1, r0, r1
   5fd98:	add	r1, ip, r1, lsl #1
   5fd9c:	ldrh	r1, [r1]
   5fda0:	strh	r1, [lr], #2
   5fda4:	orr	r0, r0, #1
   5fda8:	cmp	r5, r0
   5fdac:	bne	5fddc <GetDataSlab+0x2bc80>
   5fdb0:	b	5fd0c <GetDataSlab+0x2bbb0>
   5fdb4:	ldr	ip, [sp, #92]	; 0x5c
   5fdb8:	ldr	r4, [sp, #84]	; 0x54
   5fdbc:	mov	r0, #0
   5fdc0:	ldr	r1, [sp, #64]	; 0x40
   5fdc4:	cmp	r1, #0
   5fdc8:	bne	5fd8c <GetDataSlab+0x2bc30>
   5fdcc:	mov	r3, r0
   5fdd0:	orr	r0, r0, #1
   5fdd4:	cmp	r5, r0
   5fdd8:	beq	5fd0c <GetDataSlab+0x2bbb0>
   5fddc:	ldr	r2, [sp, #52]	; 0x34
   5fde0:	sub	r1, r5, r3
   5fde4:	mul	r0, r2, r3
   5fde8:	add	r3, r3, #1
   5fdec:	mul	r7, r2, r3
   5fdf0:	mov	r3, ip
   5fdf4:	add	r2, r3, r0
   5fdf8:	subs	r1, r1, #2
   5fdfc:	ldrh	r2, [r2]
   5fe00:	strh	r2, [lr]
   5fe04:	add	r2, r3, r7
   5fe08:	add	r3, r3, r6
   5fe0c:	ldrh	r2, [r2]
   5fe10:	strh	r2, [lr, #2]
   5fe14:	add	lr, lr, #4
   5fe18:	bne	5fdf4 <GetDataSlab+0x2bc98>
   5fe1c:	b	5fd0c <GetDataSlab+0x2bbb0>
   5fe20:	ldr	r0, [sp, #36]	; 0x24
   5fe24:	cmp	r0, #0
   5fe28:	beq	5fe6c <GetDataSlab+0x2bd10>
   5fe2c:	ldr	r7, [sp, #32]
   5fe30:	ldr	r2, [sp, #28]
   5fe34:	mov	r1, ip
   5fe38:	mov	r0, #0
   5fe3c:	mov	sl, lr
   5fe40:	mov	ip, #32
   5fe44:	add	r3, r1, r8
   5fe48:	vld1.16	{d16-d17}, [r1], r2
   5fe4c:	add	r9, sl, #16
   5fe50:	subs	r7, r7, #2
   5fe54:	add	r0, r0, #16
   5fe58:	vst1.16	{d16-d17}, [sl], ip
   5fe5c:	vld1.16	{d16-d17}, [r3]
   5fe60:	vst1.16	{d16-d17}, [r9]
   5fe64:	bne	5fe44 <GetDataSlab+0x2bce8>
   5fe68:	b	5fe70 <GetDataSlab+0x2bd14>
   5fe6c:	mov	r0, #0
   5fe70:	ldr	r1, [sp, #44]	; 0x2c
   5fe74:	ldr	ip, [sp, #92]	; 0x5c
   5fe78:	ldr	r4, [sp, #84]	; 0x54
   5fe7c:	cmp	r1, #0
   5fe80:	beq	5fe9c <GetDataSlab+0x2bd40>
   5fe84:	ldr	r1, [sp, #68]	; 0x44
   5fe88:	mul	r1, r0, r1
   5fe8c:	add	r0, lr, r0, lsl #1
   5fe90:	add	r1, ip, r1, lsl #1
   5fe94:	vld1.16	{d16-d17}, [r1]
   5fe98:	vst1.16	{d16-d17}, [r0]
   5fe9c:	ldr	r0, [sp, #40]	; 0x28
   5fea0:	add	lr, lr, r0, lsl #1
   5fea4:	cmp	r5, r0
   5fea8:	bne	5fdc0 <GetDataSlab+0x2bc64>
   5feac:	b	5fd0c <GetDataSlab+0x2bbb0>
   5feb0:	cmp	r3, #1
   5feb4:	blt	35058 <GetDataSlab+0xefc>
   5feb8:	cmp	r5, #1
   5febc:	mov	r0, #0
   5fec0:	blt	5b6a4 <GetDataSlab+0x27548>
   5fec4:	ldr	r0, [sp, #60]	; 0x3c
   5fec8:	ldr	r1, [sp, #56]	; 0x38
   5fecc:	mov	r2, #1
   5fed0:	cmp	r5, #7
   5fed4:	mov	r7, r8
   5fed8:	ldr	lr, [sp, #88]	; 0x58
   5fedc:	mla	r0, r1, r8, r0
   5fee0:	ldr	r1, [sp, #80]	; 0x50
   5fee4:	add	r1, r1, r0, lsl #1
   5fee8:	str	r1, [sp, #92]	; 0x5c
   5feec:	lsl	r1, r5, #1
   5fef0:	add	r1, r1, r0, lsl #1
   5fef4:	lsl	r0, r0, #1
   5fef8:	str	r0, [sp, #48]	; 0x30
   5fefc:	ldr	r0, [sp, #68]	; 0x44
   5ff00:	str	r1, [sp, #56]	; 0x38
   5ff04:	sub	r1, r5, #8
   5ff08:	add	r2, r2, r1, lsr #3
   5ff0c:	and	r3, r2, #1
   5ff10:	sub	r2, r2, r3
   5ff14:	str	r3, [sp, #44]	; 0x2c
   5ff18:	mov	r3, r0
   5ff1c:	sub	r0, r0, #1
   5ff20:	clz	r0, r0
   5ff24:	str	r2, [sp, #32]
   5ff28:	mov	r2, #0
   5ff2c:	lsl	r6, r3, #2
   5ff30:	str	r2, [sp, #84]	; 0x54
   5ff34:	mov	r2, #0
   5ff38:	lsr	r0, r0, #5
   5ff3c:	movwhi	r2, #1
   5ff40:	and	r0, r2, r0
   5ff44:	str	r0, [sp, #60]	; 0x3c
   5ff48:	ldr	r0, [sp, #72]	; 0x48
   5ff4c:	mul	r0, r0, r8
   5ff50:	lsl	r0, r0, #1
   5ff54:	str	r0, [sp, #72]	; 0x48
   5ff58:	lsl	r0, r3, #1
   5ff5c:	str	r0, [sp, #52]	; 0x34
   5ff60:	lsl	r0, r3, #5
   5ff64:	str	r0, [sp, #28]
   5ff68:	lsl	r0, r3, #4
   5ff6c:	str	r0, [sp, #24]
   5ff70:	and	r0, r5, #1
   5ff74:	ldr	r8, [sp, #24]
   5ff78:	str	r0, [sp, #64]	; 0x40
   5ff7c:	bic	r0, r5, #7
   5ff80:	str	r0, [sp, #40]	; 0x28
   5ff84:	lsr	r0, r1, #3
   5ff88:	str	r0, [sp, #36]	; 0x24
   5ff8c:	ldr	r0, [sp, #60]	; 0x3c
   5ff90:	cmp	r0, #0
   5ff94:	bne	5ffcc <GetDataSlab+0x2be70>
   5ff98:	b	60044 <GetDataSlab+0x2bee8>
   5ff9c:	ldr	r0, [sp, #72]	; 0x48
   5ffa0:	ldr	r1, [sp, #76]	; 0x4c
   5ffa4:	add	r4, r4, #1
   5ffa8:	str	r4, [sp, #84]	; 0x54
   5ffac:	add	ip, ip, r0
   5ffb0:	mov	r0, #0
   5ffb4:	cmp	r4, r1
   5ffb8:	str	ip, [sp, #92]	; 0x5c
   5ffbc:	beq	5b6a4 <GetDataSlab+0x27548>
   5ffc0:	ldr	r0, [sp, #60]	; 0x3c
   5ffc4:	cmp	r0, #0
   5ffc8:	beq	60044 <GetDataSlab+0x2bee8>
   5ffcc:	ldr	r0, [sp, #72]	; 0x48
   5ffd0:	ldr	r4, [sp, #84]	; 0x54
   5ffd4:	ldr	r1, [sp, #56]	; 0x38
   5ffd8:	ldr	r2, [sp, #80]	; 0x50
   5ffdc:	ldr	ip, [sp, #92]	; 0x5c
   5ffe0:	mul	r0, r0, r4
   5ffe4:	add	r1, r1, r0
   5ffe8:	add	r1, r2, r1
   5ffec:	cmp	r1, lr
   5fff0:	bls	600b0 <GetDataSlab+0x2bf54>
   5fff4:	ldr	r3, [sp, #48]	; 0x30
   5fff8:	add	r1, lr, r5, lsl #1
   5fffc:	add	r0, r3, r0
   60000:	add	r0, r2, r0
   60004:	cmp	r0, r1
   60008:	bcs	600b0 <GetDataSlab+0x2bf54>
   6000c:	mov	r0, #0
   60010:	ldr	r1, [sp, #64]	; 0x40
   60014:	cmp	r1, #0
   60018:	beq	6005c <GetDataSlab+0x2bf00>
   6001c:	ldr	r1, [sp, #68]	; 0x44
   60020:	orr	r3, r0, #1
   60024:	mul	r1, r0, r1
   60028:	add	r1, ip, r1, lsl #1
   6002c:	ldrh	r1, [r1]
   60030:	strh	r1, [lr], #2
   60034:	orr	r0, r0, #1
   60038:	cmp	r5, r0
   6003c:	bne	6006c <GetDataSlab+0x2bf10>
   60040:	b	5ff9c <GetDataSlab+0x2be40>
   60044:	ldr	ip, [sp, #92]	; 0x5c
   60048:	ldr	r4, [sp, #84]	; 0x54
   6004c:	mov	r0, #0
   60050:	ldr	r1, [sp, #64]	; 0x40
   60054:	cmp	r1, #0
   60058:	bne	6001c <GetDataSlab+0x2bec0>
   6005c:	mov	r3, r0
   60060:	orr	r0, r0, #1
   60064:	cmp	r5, r0
   60068:	beq	5ff9c <GetDataSlab+0x2be40>
   6006c:	ldr	r2, [sp, #52]	; 0x34
   60070:	sub	r1, r5, r3
   60074:	mul	r0, r2, r3
   60078:	add	r3, r3, #1
   6007c:	mul	r7, r2, r3
   60080:	mov	r3, ip
   60084:	add	r2, r3, r0
   60088:	subs	r1, r1, #2
   6008c:	ldrh	r2, [r2]
   60090:	strh	r2, [lr]
   60094:	add	r2, r3, r7
   60098:	add	r3, r3, r6
   6009c:	ldrh	r2, [r2]
   600a0:	strh	r2, [lr, #2]
   600a4:	add	lr, lr, #4
   600a8:	bne	60084 <GetDataSlab+0x2bf28>
   600ac:	b	5ff9c <GetDataSlab+0x2be40>
   600b0:	ldr	r0, [sp, #36]	; 0x24
   600b4:	cmp	r0, #0
   600b8:	beq	600fc <GetDataSlab+0x2bfa0>
   600bc:	ldr	r7, [sp, #32]
   600c0:	ldr	r2, [sp, #28]
   600c4:	mov	r1, ip
   600c8:	mov	r0, #0
   600cc:	mov	sl, lr
   600d0:	mov	ip, #32
   600d4:	add	r3, r1, r8
   600d8:	vld1.16	{d16-d17}, [r1], r2
   600dc:	add	r9, sl, #16
   600e0:	subs	r7, r7, #2
   600e4:	add	r0, r0, #16
   600e8:	vst1.16	{d16-d17}, [sl], ip
   600ec:	vld1.16	{d16-d17}, [r3]
   600f0:	vst1.16	{d16-d17}, [r9]
   600f4:	bne	600d4 <GetDataSlab+0x2bf78>
   600f8:	b	60100 <GetDataSlab+0x2bfa4>
   600fc:	mov	r0, #0
   60100:	ldr	r1, [sp, #44]	; 0x2c
   60104:	ldr	ip, [sp, #92]	; 0x5c
   60108:	ldr	r4, [sp, #84]	; 0x54
   6010c:	cmp	r1, #0
   60110:	beq	6012c <GetDataSlab+0x2bfd0>
   60114:	ldr	r1, [sp, #68]	; 0x44
   60118:	mul	r1, r0, r1
   6011c:	add	r0, lr, r0, lsl #1
   60120:	add	r1, ip, r1, lsl #1
   60124:	vld1.16	{d16-d17}, [r1]
   60128:	vst1.16	{d16-d17}, [r0]
   6012c:	ldr	r0, [sp, #40]	; 0x28
   60130:	add	lr, lr, r0, lsl #1
   60134:	cmp	r5, r0
   60138:	bne	60050 <GetDataSlab+0x2bef4>
   6013c:	b	5ff9c <GetDataSlab+0x2be40>
   60140:	cmp	r3, #1
   60144:	blt	35058 <GetDataSlab+0xefc>
   60148:	cmp	r5, #1
   6014c:	mov	r0, #0
   60150:	blt	5b6a4 <GetDataSlab+0x27548>
   60154:	ldr	r0, [sp, #60]	; 0x3c
   60158:	ldr	r1, [sp, #56]	; 0x38
   6015c:	cmp	r5, #3
   60160:	ldr	r9, [sp, #88]	; 0x58
   60164:	mla	r0, r1, r8, r0
   60168:	ldr	r1, [sp, #80]	; 0x50
   6016c:	add	sl, r1, r0, lsl #2
   60170:	sub	r0, r5, #4
   60174:	mov	r1, #1
   60178:	add	r1, r1, r0, lsr #2
   6017c:	lsr	r0, r0, #2
   60180:	str	r0, [sp, #56]	; 0x38
   60184:	and	r2, r1, #1
   60188:	sub	r1, r1, r2
   6018c:	str	r2, [sp, #60]	; 0x3c
   60190:	mov	r2, #0
   60194:	str	r1, [sp, #48]	; 0x30
   60198:	ldr	r1, [sp, #68]	; 0x44
   6019c:	str	r2, [sp, #92]	; 0x5c
   601a0:	mov	r2, #0
   601a4:	movwhi	r2, #1
   601a8:	mov	r7, r1
   601ac:	sub	r1, r1, #1
   601b0:	clz	r1, r1
   601b4:	lsl	r3, r7, #3
   601b8:	lsl	ip, r7, #5
   601bc:	lsl	r6, r7, #4
   601c0:	lsr	r1, r1, #5
   601c4:	and	r1, r2, r1
   601c8:	str	r1, [sp, #84]	; 0x54
   601cc:	ldr	r1, [sp, #72]	; 0x48
   601d0:	mul	r1, r1, r8
   601d4:	lsl	r1, r1, #2
   601d8:	str	r1, [sp, #80]	; 0x50
   601dc:	lsl	r1, r7, #2
   601e0:	str	r1, [sp, #52]	; 0x34
   601e4:	and	r1, r5, #1
   601e8:	str	r1, [sp, #72]	; 0x48
   601ec:	bic	r1, r5, #3
   601f0:	str	r1, [sp, #64]	; 0x40
   601f4:	ldr	r0, [sp, #84]	; 0x54
   601f8:	cmp	r0, #0
   601fc:	bne	6022c <GetDataSlab+0x2c0d0>
   60200:	b	602bc <GetDataSlab+0x2c160>
   60204:	ldr	r0, [sp, #80]	; 0x50
   60208:	add	r8, r8, #1
   6020c:	cmp	r8, lr
   60210:	str	r8, [sp, #92]	; 0x5c
   60214:	add	sl, sl, r0
   60218:	mov	r0, #0
   6021c:	beq	5b6a4 <GetDataSlab+0x27548>
   60220:	ldr	r0, [sp, #84]	; 0x54
   60224:	cmp	r0, #0
   60228:	beq	602bc <GetDataSlab+0x2c160>
   6022c:	ldr	r0, [sp, #56]	; 0x38
   60230:	mov	r2, #16
   60234:	cmp	r0, #0
   60238:	mov	r0, #0
   6023c:	beq	60278 <GetDataSlab+0x2c11c>
   60240:	ldr	r4, [sp, #48]	; 0x30
   60244:	mov	r1, sl
   60248:	mov	lr, r9
   6024c:	add	r7, r1, r6
   60250:	vld1.32	{d16-d17}, [r1], ip
   60254:	add	r8, lr, #8
   60258:	subs	r4, r4, #2
   6025c:	add	r0, r0, #8
   60260:	vmovn.i32	d16, q8
   60264:	vst1.16	{d16}, [lr], r2
   60268:	vld1.32	{d16-d17}, [r7]
   6026c:	vmovn.i32	d16, q8
   60270:	vst1.16	{d16}, [r8]
   60274:	bne	6024c <GetDataSlab+0x2c0f0>
   60278:	ldr	r1, [sp, #60]	; 0x3c
   6027c:	cmp	r1, #0
   60280:	beq	602a0 <GetDataSlab+0x2c144>
   60284:	ldr	r1, [sp, #68]	; 0x44
   60288:	mul	r1, r0, r1
   6028c:	add	r0, r9, r0, lsl #1
   60290:	add	r1, sl, r1, lsl #2
   60294:	vld1.32	{d16-d17}, [r1]
   60298:	vmovn.i32	d16, q8
   6029c:	vst1.16	{d16}, [r0]
   602a0:	ldr	r0, [sp, #64]	; 0x40
   602a4:	ldr	lr, [sp, #76]	; 0x4c
   602a8:	ldr	r8, [sp, #92]	; 0x5c
   602ac:	add	r9, r9, r0, lsl #1
   602b0:	cmp	r5, r0
   602b4:	beq	60204 <GetDataSlab+0x2c0a8>
   602b8:	b	602c8 <GetDataSlab+0x2c16c>
   602bc:	ldr	lr, [sp, #76]	; 0x4c
   602c0:	ldr	r8, [sp, #92]	; 0x5c
   602c4:	mov	r0, #0
   602c8:	ldr	r1, [sp, #72]	; 0x48
   602cc:	cmp	r1, #0
   602d0:	bne	602e8 <GetDataSlab+0x2c18c>
   602d4:	mov	r4, r0
   602d8:	orr	r0, r0, #1
   602dc:	cmp	r5, r0
   602e0:	beq	60204 <GetDataSlab+0x2c0a8>
   602e4:	b	60308 <GetDataSlab+0x2c1ac>
   602e8:	ldr	r1, [sp, #68]	; 0x44
   602ec:	orr	r4, r0, #1
   602f0:	mul	r1, r0, r1
   602f4:	ldr	r1, [sl, r1, lsl #2]
   602f8:	strh	r1, [r9], #2
   602fc:	orr	r0, r0, #1
   60300:	cmp	r5, r0
   60304:	beq	60204 <GetDataSlab+0x2c0a8>
   60308:	ldr	r2, [sp, #52]	; 0x34
   6030c:	add	r7, r4, #1
   60310:	sub	r1, r5, r4
   60314:	mul	r0, r2, r4
   60318:	mul	r4, r2, r7
   6031c:	mov	r7, sl
   60320:	ldr	r2, [r7, r0]
   60324:	subs	r1, r1, #2
   60328:	strh	r2, [r9]
   6032c:	ldr	r2, [r7, r4]
   60330:	add	r7, r7, r3
   60334:	strh	r2, [r9, #2]
   60338:	add	r9, r9, #4
   6033c:	bne	60320 <GetDataSlab+0x2c1c4>
   60340:	b	60204 <GetDataSlab+0x2c0a8>
   60344:	cmp	r3, #1
   60348:	blt	35058 <GetDataSlab+0xefc>
   6034c:	cmp	r5, #1
   60350:	mov	r0, #0
   60354:	blt	5b6a4 <GetDataSlab+0x27548>
   60358:	ldr	r0, [sp, #60]	; 0x3c
   6035c:	ldr	r1, [sp, #56]	; 0x38
   60360:	cmp	r5, #3
   60364:	ldr	r9, [sp, #88]	; 0x58
   60368:	mla	r0, r1, r8, r0
   6036c:	ldr	r1, [sp, #80]	; 0x50
   60370:	add	sl, r1, r0, lsl #2
   60374:	sub	r0, r5, #4
   60378:	mov	r1, #1
   6037c:	add	r1, r1, r0, lsr #2
   60380:	lsr	r0, r0, #2
   60384:	str	r0, [sp, #56]	; 0x38
   60388:	and	r2, r1, #1
   6038c:	sub	r1, r1, r2
   60390:	str	r2, [sp, #60]	; 0x3c
   60394:	mov	r2, #0
   60398:	str	r1, [sp, #48]	; 0x30
   6039c:	ldr	r1, [sp, #68]	; 0x44
   603a0:	str	r2, [sp, #92]	; 0x5c
   603a4:	mov	r2, #0
   603a8:	movwhi	r2, #1
   603ac:	mov	r7, r1
   603b0:	sub	r1, r1, #1
   603b4:	clz	r1, r1
   603b8:	lsl	r3, r7, #3
   603bc:	lsl	ip, r7, #5
   603c0:	lsl	r6, r7, #4
   603c4:	lsr	r1, r1, #5
   603c8:	and	r1, r2, r1
   603cc:	str	r1, [sp, #84]	; 0x54
   603d0:	ldr	r1, [sp, #72]	; 0x48
   603d4:	mul	r1, r1, r8
   603d8:	lsl	r1, r1, #2
   603dc:	str	r1, [sp, #80]	; 0x50
   603e0:	lsl	r1, r7, #2
   603e4:	str	r1, [sp, #52]	; 0x34
   603e8:	and	r1, r5, #1
   603ec:	str	r1, [sp, #72]	; 0x48
   603f0:	bic	r1, r5, #3
   603f4:	str	r1, [sp, #64]	; 0x40
   603f8:	ldr	r0, [sp, #84]	; 0x54
   603fc:	cmp	r0, #0
   60400:	bne	60430 <GetDataSlab+0x2c2d4>
   60404:	b	604c0 <GetDataSlab+0x2c364>
   60408:	ldr	r0, [sp, #80]	; 0x50
   6040c:	add	r8, r8, #1
   60410:	cmp	r8, lr
   60414:	str	r8, [sp, #92]	; 0x5c
   60418:	add	sl, sl, r0
   6041c:	mov	r0, #0
   60420:	beq	5b6a4 <GetDataSlab+0x27548>
   60424:	ldr	r0, [sp, #84]	; 0x54
   60428:	cmp	r0, #0
   6042c:	beq	604c0 <GetDataSlab+0x2c364>
   60430:	ldr	r0, [sp, #56]	; 0x38
   60434:	mov	r2, #16
   60438:	cmp	r0, #0
   6043c:	mov	r0, #0
   60440:	beq	6047c <GetDataSlab+0x2c320>
   60444:	ldr	r4, [sp, #48]	; 0x30
   60448:	mov	r1, sl
   6044c:	mov	lr, r9
   60450:	add	r7, r1, r6
   60454:	vld1.32	{d16-d17}, [r1], ip
   60458:	add	r8, lr, #8
   6045c:	subs	r4, r4, #2
   60460:	add	r0, r0, #8
   60464:	vmovn.i32	d16, q8
   60468:	vst1.16	{d16}, [lr], r2
   6046c:	vld1.32	{d16-d17}, [r7]
   60470:	vmovn.i32	d16, q8
   60474:	vst1.16	{d16}, [r8]
   60478:	bne	60450 <GetDataSlab+0x2c2f4>
   6047c:	ldr	r1, [sp, #60]	; 0x3c
   60480:	cmp	r1, #0
   60484:	beq	604a4 <GetDataSlab+0x2c348>
   60488:	ldr	r1, [sp, #68]	; 0x44
   6048c:	mul	r1, r0, r1
   60490:	add	r0, r9, r0, lsl #1
   60494:	add	r1, sl, r1, lsl #2
   60498:	vld1.32	{d16-d17}, [r1]
   6049c:	vmovn.i32	d16, q8
   604a0:	vst1.16	{d16}, [r0]
   604a4:	ldr	r0, [sp, #64]	; 0x40
   604a8:	ldr	lr, [sp, #76]	; 0x4c
   604ac:	ldr	r8, [sp, #92]	; 0x5c
   604b0:	add	r9, r9, r0, lsl #1
   604b4:	cmp	r5, r0
   604b8:	beq	60408 <GetDataSlab+0x2c2ac>
   604bc:	b	604cc <GetDataSlab+0x2c370>
   604c0:	ldr	lr, [sp, #76]	; 0x4c
   604c4:	ldr	r8, [sp, #92]	; 0x5c
   604c8:	mov	r0, #0
   604cc:	ldr	r1, [sp, #72]	; 0x48
   604d0:	cmp	r1, #0
   604d4:	bne	604ec <GetDataSlab+0x2c390>
   604d8:	mov	r4, r0
   604dc:	orr	r0, r0, #1
   604e0:	cmp	r5, r0
   604e4:	beq	60408 <GetDataSlab+0x2c2ac>
   604e8:	b	6050c <GetDataSlab+0x2c3b0>
   604ec:	ldr	r1, [sp, #68]	; 0x44
   604f0:	orr	r4, r0, #1
   604f4:	mul	r1, r0, r1
   604f8:	ldr	r1, [sl, r1, lsl #2]
   604fc:	strh	r1, [r9], #2
   60500:	orr	r0, r0, #1
   60504:	cmp	r5, r0
   60508:	beq	60408 <GetDataSlab+0x2c2ac>
   6050c:	ldr	r2, [sp, #52]	; 0x34
   60510:	add	r7, r4, #1
   60514:	sub	r1, r5, r4
   60518:	mul	r0, r2, r4
   6051c:	mul	r4, r2, r7
   60520:	mov	r7, sl
   60524:	ldr	r2, [r7, r0]
   60528:	subs	r1, r1, #2
   6052c:	strh	r2, [r9]
   60530:	ldr	r2, [r7, r4]
   60534:	add	r7, r7, r3
   60538:	strh	r2, [r9, #2]
   6053c:	add	r9, r9, #4
   60540:	bne	60524 <GetDataSlab+0x2c3c8>
   60544:	b	60408 <GetDataSlab+0x2c2ac>
   60548:	cmp	r3, #1
   6054c:	blt	35058 <GetDataSlab+0xefc>
   60550:	cmp	r5, #1
   60554:	mov	r0, #0
   60558:	blt	5b6a4 <GetDataSlab+0x27548>
   6055c:	ldr	r0, [sp, #60]	; 0x3c
   60560:	ldr	r1, [sp, #56]	; 0x38
   60564:	cmp	r5, #3
   60568:	ldr	r9, [sp, #88]	; 0x58
   6056c:	mla	r0, r1, r8, r0
   60570:	ldr	r1, [sp, #80]	; 0x50
   60574:	add	sl, r1, r0, lsl #2
   60578:	sub	r0, r5, #4
   6057c:	mov	r1, #1
   60580:	add	r1, r1, r0, lsr #2
   60584:	lsr	r0, r0, #2
   60588:	str	r0, [sp, #56]	; 0x38
   6058c:	and	r2, r1, #1
   60590:	sub	r1, r1, r2
   60594:	str	r2, [sp, #60]	; 0x3c
   60598:	mov	r2, #0
   6059c:	str	r1, [sp, #48]	; 0x30
   605a0:	ldr	r1, [sp, #68]	; 0x44
   605a4:	str	r2, [sp, #92]	; 0x5c
   605a8:	mov	r2, #0
   605ac:	movwhi	r2, #1
   605b0:	mov	r7, r1
   605b4:	sub	r1, r1, #1
   605b8:	clz	r1, r1
   605bc:	lsl	r3, r7, #3
   605c0:	lsl	ip, r7, #5
   605c4:	lsl	r6, r7, #4
   605c8:	lsr	r1, r1, #5
   605cc:	and	r1, r2, r1
   605d0:	str	r1, [sp, #84]	; 0x54
   605d4:	ldr	r1, [sp, #72]	; 0x48
   605d8:	mul	r1, r1, r8
   605dc:	lsl	r1, r1, #2
   605e0:	str	r1, [sp, #80]	; 0x50
   605e4:	lsl	r1, r7, #2
   605e8:	str	r1, [sp, #52]	; 0x34
   605ec:	and	r1, r5, #1
   605f0:	str	r1, [sp, #72]	; 0x48
   605f4:	bic	r1, r5, #3
   605f8:	str	r1, [sp, #64]	; 0x40
   605fc:	ldr	r0, [sp, #84]	; 0x54
   60600:	cmp	r0, #0
   60604:	bne	60634 <GetDataSlab+0x2c4d8>
   60608:	b	606d0 <GetDataSlab+0x2c574>
   6060c:	ldr	r0, [sp, #80]	; 0x50
   60610:	add	r8, r8, #1
   60614:	cmp	r8, lr
   60618:	str	r8, [sp, #92]	; 0x5c
   6061c:	add	sl, sl, r0
   60620:	mov	r0, #0
   60624:	beq	5b6a4 <GetDataSlab+0x27548>
   60628:	ldr	r0, [sp, #84]	; 0x54
   6062c:	cmp	r0, #0
   60630:	beq	606d0 <GetDataSlab+0x2c574>
   60634:	ldr	r0, [sp, #56]	; 0x38
   60638:	mov	r2, #16
   6063c:	cmp	r0, #0
   60640:	mov	r0, #0
   60644:	beq	60688 <GetDataSlab+0x2c52c>
   60648:	ldr	r4, [sp, #48]	; 0x30
   6064c:	mov	r1, sl
   60650:	mov	lr, r9
   60654:	add	r7, r1, r6
   60658:	vld1.32	{d16-d17}, [r1], ip
   6065c:	add	r8, lr, #8
   60660:	subs	r4, r4, #2
   60664:	add	r0, r0, #8
   60668:	vcvt.u32.f32	q8, q8
   6066c:	vmovn.i32	d16, q8
   60670:	vst1.16	{d16}, [lr], r2
   60674:	vld1.32	{d16-d17}, [r7]
   60678:	vcvt.u32.f32	q8, q8
   6067c:	vmovn.i32	d16, q8
   60680:	vst1.16	{d16}, [r8]
   60684:	bne	60654 <GetDataSlab+0x2c4f8>
   60688:	ldr	r1, [sp, #60]	; 0x3c
   6068c:	cmp	r1, #0
   60690:	beq	606b4 <GetDataSlab+0x2c558>
   60694:	ldr	r1, [sp, #68]	; 0x44
   60698:	mul	r1, r0, r1
   6069c:	add	r0, r9, r0, lsl #1
   606a0:	add	r1, sl, r1, lsl #2
   606a4:	vld1.32	{d16-d17}, [r1]
   606a8:	vcvt.u32.f32	q8, q8
   606ac:	vmovn.i32	d16, q8
   606b0:	vst1.16	{d16}, [r0]
   606b4:	ldr	r0, [sp, #64]	; 0x40
   606b8:	ldr	lr, [sp, #76]	; 0x4c
   606bc:	ldr	r8, [sp, #92]	; 0x5c
   606c0:	add	r9, r9, r0, lsl #1
   606c4:	cmp	r5, r0
   606c8:	beq	6060c <GetDataSlab+0x2c4b0>
   606cc:	b	606dc <GetDataSlab+0x2c580>
   606d0:	ldr	lr, [sp, #76]	; 0x4c
   606d4:	ldr	r8, [sp, #92]	; 0x5c
   606d8:	mov	r0, #0
   606dc:	ldr	r1, [sp, #72]	; 0x48
   606e0:	cmp	r1, #0
   606e4:	bne	606fc <GetDataSlab+0x2c5a0>
   606e8:	mov	r7, r0
   606ec:	orr	r0, r0, #1
   606f0:	cmp	r5, r0
   606f4:	beq	6060c <GetDataSlab+0x2c4b0>
   606f8:	b	60728 <GetDataSlab+0x2c5cc>
   606fc:	ldr	r1, [sp, #68]	; 0x44
   60700:	orr	r7, r0, #1
   60704:	mul	r1, r0, r1
   60708:	add	r1, sl, r1, lsl #2
   6070c:	vldr	s0, [r1]
   60710:	vcvt.u32.f32	s0, s0
   60714:	vmov	r1, s0
   60718:	strh	r1, [r9], #2
   6071c:	orr	r0, r0, #1
   60720:	cmp	r5, r0
   60724:	beq	6060c <GetDataSlab+0x2c4b0>
   60728:	ldr	r2, [sp, #52]	; 0x34
   6072c:	sub	r1, r5, r7
   60730:	mul	r0, r2, r7
   60734:	add	r7, r7, #1
   60738:	mul	r4, r2, r7
   6073c:	mov	r7, sl
   60740:	add	r2, r7, r0
   60744:	subs	r1, r1, #2
   60748:	vldr	s0, [r2]
   6074c:	vcvt.u32.f32	s0, s0
   60750:	vmov	r2, s0
   60754:	strh	r2, [r9]
   60758:	add	r2, r7, r4
   6075c:	add	r7, r7, r3
   60760:	vldr	s0, [r2]
   60764:	vcvt.u32.f32	s0, s0
   60768:	vmov	r2, s0
   6076c:	strh	r2, [r9, #2]
   60770:	add	r9, r9, #4
   60774:	bne	60740 <GetDataSlab+0x2c5e4>
   60778:	b	6060c <GetDataSlab+0x2c4b0>
   6077c:	cmp	r3, #1
   60780:	blt	35058 <GetDataSlab+0xefc>
   60784:	cmp	r5, #1
   60788:	mov	r0, #0
   6078c:	blt	5b6a4 <GetDataSlab+0x27548>
   60790:	ldr	r0, [sp, #60]	; 0x3c
   60794:	ldr	r1, [sp, #56]	; 0x38
   60798:	mov	r2, r8
   6079c:	ldr	r7, [sp, #88]	; 0x58
   607a0:	and	ip, r5, #1
   607a4:	mov	r9, #0
   607a8:	sub	r3, r5, ip
   607ac:	mla	r0, r1, r8, r0
   607b0:	ldr	r1, [sp, #80]	; 0x50
   607b4:	add	r8, r1, r0, lsl #3
   607b8:	ldr	r0, [sp, #72]	; 0x48
   607bc:	mul	r0, r0, r2
   607c0:	lsl	lr, r0, #3
   607c4:	ldr	r0, [sp, #68]	; 0x44
   607c8:	lsl	r6, r0, #4
   607cc:	lsl	r4, r0, #3
   607d0:	mov	r0, #0
   607d4:	cmp	r5, #1
   607d8:	beq	60840 <GetDataSlab+0x2c6e4>
   607dc:	b	60804 <GetDataSlab+0x2c6a8>
   607e0:	ldr	r1, [sp, #76]	; 0x4c
   607e4:	add	r9, r9, #1
   607e8:	add	r8, r8, lr
   607ec:	mov	r0, #0
   607f0:	cmp	r9, r1
   607f4:	beq	5b6a4 <GetDataSlab+0x27548>
   607f8:	mov	r0, #0
   607fc:	cmp	r5, #1
   60800:	beq	60840 <GetDataSlab+0x2c6e4>
   60804:	mov	r1, r8
   60808:	vldr	d16, [r1]
   6080c:	add	r0, r0, #2
   60810:	cmp	r3, r0
   60814:	vcvt.u32.f64	s0, d16
   60818:	vmov	r2, s0
   6081c:	strh	r2, [r7]
   60820:	add	r2, r1, r4
   60824:	add	r1, r1, r6
   60828:	vldr	d16, [r2]
   6082c:	vcvt.u32.f64	s0, d16
   60830:	vmov	r2, s0
   60834:	strh	r2, [r7, #2]
   60838:	add	r7, r7, #4
   6083c:	bne	60808 <GetDataSlab+0x2c6ac>
   60840:	cmp	ip, #0
   60844:	beq	607e0 <GetDataSlab+0x2c684>
   60848:	ldr	r1, [sp, #68]	; 0x44
   6084c:	mul	r0, r0, r1
   60850:	add	r0, r8, r0, lsl #3
   60854:	vldr	d16, [r0]
   60858:	vcvt.u32.f64	s0, d16
   6085c:	vmov	r0, s0
   60860:	strh	r0, [r7], #2
   60864:	b	607e0 <GetDataSlab+0x2c684>
   60868:	cmp	r3, #1
   6086c:	blt	35058 <GetDataSlab+0xefc>
   60870:	cmp	r5, #1
   60874:	mov	r0, #0
   60878:	blt	5b6a4 <GetDataSlab+0x27548>
   6087c:	ldr	r0, [sp, #60]	; 0x3c
   60880:	ldr	r1, [sp, #56]	; 0x38
   60884:	cmp	r5, #1
   60888:	ldr	ip, [sp, #88]	; 0x58
   6088c:	mov	lr, #0
   60890:	mla	r0, r1, r8, r0
   60894:	ldr	r1, [sp, #80]	; 0x50
   60898:	add	sl, r1, r0, lsl #3
   6089c:	sub	r0, r5, #2
   608a0:	mov	r1, #1
   608a4:	add	r1, r1, r0, lsr #1
   608a8:	lsr	r0, r0, #1
   608ac:	str	r0, [sp, #44]	; 0x2c
   608b0:	and	r2, r1, #1
   608b4:	sub	r1, r1, r2
   608b8:	str	r2, [sp, #52]	; 0x34
   608bc:	mov	r2, #0
   608c0:	movwhi	r2, #1
   608c4:	str	r1, [sp, #32]
   608c8:	ldr	r1, [sp, #68]	; 0x44
   608cc:	mov	r3, r1
   608d0:	sub	r1, r1, #1
   608d4:	clz	r1, r1
   608d8:	lsr	r1, r1, #5
   608dc:	and	r6, r2, r1
   608e0:	ldr	r1, [sp, #72]	; 0x48
   608e4:	lsl	r2, r3, #5
   608e8:	mul	r1, r1, r8
   608ec:	lsl	r7, r1, #3
   608f0:	lsl	r1, r3, #3
   608f4:	str	r1, [sp, #36]	; 0x24
   608f8:	lsl	r1, r3, #4
   608fc:	mov	r3, r7
   60900:	and	r7, r5, #1
   60904:	str	r7, [sp, #92]	; 0x5c
   60908:	bic	r7, r5, #1
   6090c:	str	r3, [sp, #40]	; 0x28
   60910:	str	r7, [sp, #48]	; 0x30
   60914:	cmp	r6, #0
   60918:	bne	6093c <GetDataSlab+0x2c7e0>
   6091c:	b	609dc <GetDataSlab+0x2c880>
   60920:	ldr	r0, [sp, #76]	; 0x4c
   60924:	add	lr, lr, #1
   60928:	add	sl, sl, r3
   6092c:	cmp	lr, r0
   60930:	beq	64314 <GetDataSlab+0x301b8>
   60934:	cmp	r6, #0
   60938:	beq	609dc <GetDataSlab+0x2c880>
   6093c:	ldr	r0, [sp, #44]	; 0x2c
   60940:	mov	r4, #0
   60944:	cmp	r0, #0
   60948:	beq	60998 <GetDataSlab+0x2c83c>
   6094c:	ldr	r9, [sp, #32]
   60950:	mov	r0, sl
   60954:	mov	r7, ip
   60958:	mov	r8, sl
   6095c:	vld1.64	{d16-d17}, [r8], r2
   60960:	add	r0, r0, r1
   60964:	subs	r9, r9, #2
   60968:	add	r4, r4, #4
   6096c:	vmovn.i64	d16, q8
   60970:	vuzp.16	d16, d17
   60974:	vst1.32	{d16[0]}, [r7]
   60978:	vld1.64	{d16-d17}, [r0]
   6097c:	add	r0, r7, #4
   60980:	add	r7, r7, #8
   60984:	vmovn.i64	d16, q8
   60988:	vuzp.16	d16, d17
   6098c:	vst1.32	{d16[0]}, [r0]
   60990:	mov	r0, r8
   60994:	bne	6095c <GetDataSlab+0x2c800>
   60998:	ldr	r0, [sp, #52]	; 0x34
   6099c:	ldr	r8, [sp, #64]	; 0x40
   609a0:	cmp	r0, #0
   609a4:	beq	609c8 <GetDataSlab+0x2c86c>
   609a8:	ldr	r0, [sp, #68]	; 0x44
   609ac:	mul	r0, r4, r0
   609b0:	add	r0, sl, r0, lsl #3
   609b4:	vld1.64	{d16-d17}, [r0]
   609b8:	add	r0, ip, r4, lsl #1
   609bc:	vmovn.i64	d16, q8
   609c0:	vuzp.16	d16, d17
   609c4:	vst1.32	{d16[0]}, [r0]
   609c8:	ldr	r4, [sp, #48]	; 0x30
   609cc:	add	ip, ip, r4, lsl #1
   609d0:	cmp	r5, r4
   609d4:	beq	60920 <GetDataSlab+0x2c7c4>
   609d8:	b	609e0 <GetDataSlab+0x2c884>
   609dc:	mov	r4, #0
   609e0:	ldr	r0, [sp, #92]	; 0x5c
   609e4:	cmp	r0, #0
   609e8:	bne	60a00 <GetDataSlab+0x2c8a4>
   609ec:	mov	r0, r4
   609f0:	orr	r4, r4, #1
   609f4:	cmp	r5, r4
   609f8:	beq	60920 <GetDataSlab+0x2c7c4>
   609fc:	b	60a24 <GetDataSlab+0x2c8c8>
   60a00:	ldr	r0, [sp, #68]	; 0x44
   60a04:	mul	r0, r4, r0
   60a08:	add	r0, sl, r0, lsl #3
   60a0c:	ldrh	r0, [r0]
   60a10:	strh	r0, [ip], #2
   60a14:	orr	r0, r4, #1
   60a18:	orr	r4, r4, #1
   60a1c:	cmp	r5, r4
   60a20:	beq	60920 <GetDataSlab+0x2c7c4>
   60a24:	ldr	r3, [sp, #36]	; 0x24
   60a28:	sub	r7, r5, r0
   60a2c:	mov	r9, r6
   60a30:	mov	r6, sl
   60a34:	mul	r4, r3, r0
   60a38:	add	r0, r0, #1
   60a3c:	mul	r0, r3, r0
   60a40:	add	r3, r6, r4
   60a44:	subs	r7, r7, #2
   60a48:	ldrh	r3, [r3]
   60a4c:	strh	r3, [ip]
   60a50:	add	r3, r6, r0
   60a54:	add	r6, r6, r1
   60a58:	ldrh	r3, [r3]
   60a5c:	strh	r3, [ip, #2]
   60a60:	add	ip, ip, #4
   60a64:	bne	60a40 <GetDataSlab+0x2c8e4>
   60a68:	ldr	r3, [sp, #40]	; 0x28
   60a6c:	mov	r6, r9
   60a70:	b	60920 <GetDataSlab+0x2c7c4>
   60a74:	cmp	r6, #1
   60a78:	blt	35058 <GetDataSlab+0xefc>
   60a7c:	ldr	r0, [sp, #60]	; 0x3c
   60a80:	ldr	r1, [sp, #56]	; 0x38
   60a84:	ldr	r2, [sp, #80]	; 0x50
   60a88:	mov	r7, #0
   60a8c:	mla	r0, r1, r8, r0
   60a90:	add	r2, r2, r0
   60a94:	cmp	r5, #1
   60a98:	bge	60ac8 <GetDataSlab+0x2c96c>
   60a9c:	ldr	r1, [sp, #76]	; 0x4c
   60aa0:	ldr	r0, [sp, #72]	; 0x48
   60aa4:	mla	r2, r8, r0, r2
   60aa8:	add	r7, r7, #1
   60aac:	str	r0, [sp, #72]	; 0x48
   60ab0:	mov	r0, #0
   60ab4:	str	r1, [sp, #76]	; 0x4c
   60ab8:	cmp	r7, r1
   60abc:	bge	5b6a4 <GetDataSlab+0x27548>
   60ac0:	cmp	r5, #1
   60ac4:	blt	60a9c <GetDataSlab+0x2c940>
   60ac8:	ldr	r4, [sp, #88]	; 0x58
   60acc:	mov	r0, #0
   60ad0:	mov	r6, #0
   60ad4:	ldr	r5, [sl]
   60ad8:	add	r0, r0, #4
   60adc:	mul	r5, r5, r6
   60ae0:	ldrb	r5, [r2, r5]
   60ae4:	str	r5, [r4, r6, lsl #2]
   60ae8:	add	r6, r6, #1
   60aec:	ldr	r5, [r9]
   60af0:	cmp	r6, r5
   60af4:	blt	60ad4 <GetDataSlab+0x2c978>
   60af8:	add	r4, r4, r0
   60afc:	ldr	r1, [r3]
   60b00:	ldr	r8, [lr]
   60b04:	ldr	r0, [ip]
   60b08:	str	r4, [sp, #88]	; 0x58
   60b0c:	b	60aa4 <GetDataSlab+0x2c948>
   60b10:	cmp	r6, #1
   60b14:	blt	35058 <GetDataSlab+0xefc>
   60b18:	ldr	r0, [sp, #60]	; 0x3c
   60b1c:	ldr	r1, [sp, #56]	; 0x38
   60b20:	ldr	r2, [sp, #80]	; 0x50
   60b24:	mov	r7, #0
   60b28:	mla	r0, r1, r8, r0
   60b2c:	add	r2, r2, r0, lsl #1
   60b30:	cmp	r5, #1
   60b34:	bge	60b6c <GetDataSlab+0x2ca10>
   60b38:	ldr	r1, [sp, #76]	; 0x4c
   60b3c:	ldr	r0, [sp, #72]	; 0x48
   60b40:	mov	r4, r0
   60b44:	str	r0, [sp, #72]	; 0x48
   60b48:	mul	r0, r8, r0
   60b4c:	add	r7, r7, #1
   60b50:	str	r1, [sp, #76]	; 0x4c
   60b54:	cmp	r7, r1
   60b58:	add	r2, r2, r0, lsl #1
   60b5c:	mov	r0, #0
   60b60:	bge	5b6a4 <GetDataSlab+0x27548>
   60b64:	cmp	r5, #1
   60b68:	blt	60b38 <GetDataSlab+0x2c9dc>
   60b6c:	ldr	r4, [sp, #88]	; 0x58
   60b70:	mov	r0, #0
   60b74:	mov	r6, #0
   60b78:	ldr	r5, [sl]
   60b7c:	add	r0, r0, #4
   60b80:	mul	r5, r5, r6
   60b84:	add	r5, r2, r5, lsl #1
   60b88:	ldrsh	r5, [r5]
   60b8c:	str	r5, [r4, r6, lsl #2]
   60b90:	add	r6, r6, #1
   60b94:	ldr	r5, [r9]
   60b98:	cmp	r6, r5
   60b9c:	blt	60b78 <GetDataSlab+0x2ca1c>
   60ba0:	add	r4, r4, r0
   60ba4:	ldr	r1, [r3]
   60ba8:	ldr	r8, [lr]
   60bac:	ldr	r0, [ip]
   60bb0:	str	r4, [sp, #88]	; 0x58
   60bb4:	b	60b40 <GetDataSlab+0x2c9e4>
   60bb8:	cmp	r6, #1
   60bbc:	blt	35058 <GetDataSlab+0xefc>
   60bc0:	ldr	r0, [sp, #60]	; 0x3c
   60bc4:	ldr	r1, [sp, #56]	; 0x38
   60bc8:	ldr	r2, [sp, #80]	; 0x50
   60bcc:	mov	r7, #0
   60bd0:	mla	r0, r1, r8, r0
   60bd4:	add	r2, r2, r0, lsl #1
   60bd8:	cmp	r5, #1
   60bdc:	bge	60c14 <GetDataSlab+0x2cab8>
   60be0:	ldr	r1, [sp, #76]	; 0x4c
   60be4:	ldr	r0, [sp, #72]	; 0x48
   60be8:	mov	r4, r0
   60bec:	str	r0, [sp, #72]	; 0x48
   60bf0:	mul	r0, r8, r0
   60bf4:	add	r7, r7, #1
   60bf8:	str	r1, [sp, #76]	; 0x4c
   60bfc:	cmp	r7, r1
   60c00:	add	r2, r2, r0, lsl #1
   60c04:	mov	r0, #0
   60c08:	bge	5b6a4 <GetDataSlab+0x27548>
   60c0c:	cmp	r5, #1
   60c10:	blt	60be0 <GetDataSlab+0x2ca84>
   60c14:	ldr	r4, [sp, #88]	; 0x58
   60c18:	mov	r0, #0
   60c1c:	mov	r6, #0
   60c20:	ldr	r5, [sl]
   60c24:	add	r0, r0, #4
   60c28:	mul	r5, r5, r6
   60c2c:	add	r5, r2, r5, lsl #1
   60c30:	ldrh	r5, [r5]
   60c34:	str	r5, [r4, r6, lsl #2]
   60c38:	add	r6, r6, #1
   60c3c:	ldr	r5, [r9]
   60c40:	cmp	r6, r5
   60c44:	blt	60c20 <GetDataSlab+0x2cac4>
   60c48:	add	r4, r4, r0
   60c4c:	ldr	r1, [r3]
   60c50:	ldr	r8, [lr]
   60c54:	ldr	r0, [ip]
   60c58:	str	r4, [sp, #88]	; 0x58
   60c5c:	b	60be8 <GetDataSlab+0x2ca8c>
   60c60:	cmp	r6, #1
   60c64:	blt	35058 <GetDataSlab+0xefc>
   60c68:	ldr	r0, [sp, #60]	; 0x3c
   60c6c:	ldr	r1, [sp, #56]	; 0x38
   60c70:	ldr	r2, [sp, #80]	; 0x50
   60c74:	mov	r7, #0
   60c78:	mla	r0, r1, r8, r0
   60c7c:	add	r2, r2, r0, lsl #2
   60c80:	cmp	r5, #1
   60c84:	bge	60cbc <GetDataSlab+0x2cb60>
   60c88:	ldr	r1, [sp, #76]	; 0x4c
   60c8c:	ldr	r0, [sp, #72]	; 0x48
   60c90:	mov	r4, r0
   60c94:	str	r0, [sp, #72]	; 0x48
   60c98:	mul	r0, r8, r0
   60c9c:	add	r7, r7, #1
   60ca0:	str	r1, [sp, #76]	; 0x4c
   60ca4:	cmp	r7, r1
   60ca8:	add	r2, r2, r0, lsl #2
   60cac:	mov	r0, #0
   60cb0:	bge	5b6a4 <GetDataSlab+0x27548>
   60cb4:	cmp	r5, #1
   60cb8:	blt	60c88 <GetDataSlab+0x2cb2c>
   60cbc:	ldr	r4, [sp, #88]	; 0x58
   60cc0:	mov	r0, #0
   60cc4:	mov	r6, #0
   60cc8:	ldr	r5, [sl]
   60ccc:	add	r0, r0, #4
   60cd0:	mul	r5, r5, r6
   60cd4:	ldr	r5, [r2, r5, lsl #2]
   60cd8:	str	r5, [r4, r6, lsl #2]
   60cdc:	add	r6, r6, #1
   60ce0:	ldr	r5, [r9]
   60ce4:	cmp	r6, r5
   60ce8:	blt	60cc8 <GetDataSlab+0x2cb6c>
   60cec:	add	r4, r4, r0
   60cf0:	ldr	r1, [r3]
   60cf4:	ldr	r8, [lr]
   60cf8:	ldr	r0, [ip]
   60cfc:	str	r4, [sp, #88]	; 0x58
   60d00:	b	60c90 <GetDataSlab+0x2cb34>
   60d04:	cmp	r6, #1
   60d08:	blt	35058 <GetDataSlab+0xefc>
   60d0c:	ldr	r0, [sp, #60]	; 0x3c
   60d10:	ldr	r1, [sp, #56]	; 0x38
   60d14:	ldr	r2, [sp, #80]	; 0x50
   60d18:	mov	r7, #0
   60d1c:	mla	r0, r1, r8, r0
   60d20:	add	r2, r2, r0, lsl #2
   60d24:	cmp	r5, #1
   60d28:	bge	60d60 <GetDataSlab+0x2cc04>
   60d2c:	ldr	r1, [sp, #76]	; 0x4c
   60d30:	ldr	r0, [sp, #72]	; 0x48
   60d34:	mov	r4, r0
   60d38:	str	r0, [sp, #72]	; 0x48
   60d3c:	mul	r0, r8, r0
   60d40:	add	r7, r7, #1
   60d44:	str	r1, [sp, #76]	; 0x4c
   60d48:	cmp	r7, r1
   60d4c:	add	r2, r2, r0, lsl #2
   60d50:	mov	r0, #0
   60d54:	bge	5b6a4 <GetDataSlab+0x27548>
   60d58:	cmp	r5, #1
   60d5c:	blt	60d2c <GetDataSlab+0x2cbd0>
   60d60:	ldr	r4, [sp, #88]	; 0x58
   60d64:	mov	r0, #0
   60d68:	mov	r6, #0
   60d6c:	ldr	r5, [sl]
   60d70:	add	r0, r0, #4
   60d74:	mul	r5, r5, r6
   60d78:	ldr	r5, [r2, r5, lsl #2]
   60d7c:	str	r5, [r4, r6, lsl #2]
   60d80:	add	r6, r6, #1
   60d84:	ldr	r5, [r9]
   60d88:	cmp	r6, r5
   60d8c:	blt	60d6c <GetDataSlab+0x2cc10>
   60d90:	add	r4, r4, r0
   60d94:	ldr	r1, [r3]
   60d98:	ldr	r8, [lr]
   60d9c:	ldr	r0, [ip]
   60da0:	str	r4, [sp, #88]	; 0x58
   60da4:	b	60d34 <GetDataSlab+0x2cbd8>
   60da8:	cmp	r6, #1
   60dac:	blt	35058 <GetDataSlab+0xefc>
   60db0:	ldr	r0, [sp, #60]	; 0x3c
   60db4:	ldr	r1, [sp, #56]	; 0x38
   60db8:	ldr	r2, [sp, #80]	; 0x50
   60dbc:	mov	r7, #0
   60dc0:	mla	r0, r1, r8, r0
   60dc4:	add	r2, r2, r0, lsl #2
   60dc8:	cmp	r5, #1
   60dcc:	bge	60e04 <GetDataSlab+0x2cca8>
   60dd0:	ldr	r1, [sp, #76]	; 0x4c
   60dd4:	ldr	r0, [sp, #72]	; 0x48
   60dd8:	mov	r4, r0
   60ddc:	str	r0, [sp, #72]	; 0x48
   60de0:	mul	r0, r8, r0
   60de4:	add	r7, r7, #1
   60de8:	str	r1, [sp, #76]	; 0x4c
   60dec:	cmp	r7, r1
   60df0:	add	r2, r2, r0, lsl #2
   60df4:	mov	r0, #0
   60df8:	bge	5b6a4 <GetDataSlab+0x27548>
   60dfc:	cmp	r5, #1
   60e00:	blt	60dd0 <GetDataSlab+0x2cc74>
   60e04:	ldr	r4, [sp, #88]	; 0x58
   60e08:	mov	r0, #0
   60e0c:	mov	r6, #0
   60e10:	ldr	r5, [sl]
   60e14:	add	r0, r0, #4
   60e18:	mul	r5, r5, r6
   60e1c:	add	r5, r2, r5, lsl #2
   60e20:	vldr	s0, [r5]
   60e24:	vcvt.s32.f32	s0, s0
   60e28:	vmov	r5, s0
   60e2c:	str	r5, [r4, r6, lsl #2]
   60e30:	add	r6, r6, #1
   60e34:	ldr	r5, [r9]
   60e38:	cmp	r6, r5
   60e3c:	blt	60e10 <GetDataSlab+0x2ccb4>
   60e40:	add	r4, r4, r0
   60e44:	ldr	r1, [r3]
   60e48:	ldr	r8, [lr]
   60e4c:	ldr	r0, [ip]
   60e50:	str	r4, [sp, #88]	; 0x58
   60e54:	b	60dd8 <GetDataSlab+0x2cc7c>
   60e58:	cmp	r6, #1
   60e5c:	blt	35058 <GetDataSlab+0xefc>
   60e60:	ldr	r0, [sp, #60]	; 0x3c
   60e64:	ldr	r1, [sp, #56]	; 0x38
   60e68:	ldr	r2, [sp, #80]	; 0x50
   60e6c:	mov	r7, #0
   60e70:	mla	r0, r1, r8, r0
   60e74:	add	r2, r2, r0, lsl #3
   60e78:	cmp	r5, #1
   60e7c:	bge	60eb4 <GetDataSlab+0x2cd58>
   60e80:	ldr	r1, [sp, #76]	; 0x4c
   60e84:	ldr	r0, [sp, #72]	; 0x48
   60e88:	mov	r4, r0
   60e8c:	str	r0, [sp, #72]	; 0x48
   60e90:	mul	r0, r8, r0
   60e94:	add	r7, r7, #1
   60e98:	str	r1, [sp, #76]	; 0x4c
   60e9c:	cmp	r7, r1
   60ea0:	add	r2, r2, r0, lsl #3
   60ea4:	mov	r0, #0
   60ea8:	bge	5b6a4 <GetDataSlab+0x27548>
   60eac:	cmp	r5, #1
   60eb0:	blt	60e80 <GetDataSlab+0x2cd24>
   60eb4:	ldr	r4, [sp, #88]	; 0x58
   60eb8:	mov	r0, #0
   60ebc:	mov	r6, #0
   60ec0:	ldr	r5, [sl]
   60ec4:	add	r0, r0, #4
   60ec8:	mul	r5, r5, r6
   60ecc:	add	r5, r2, r5, lsl #3
   60ed0:	vldr	d16, [r5]
   60ed4:	vcvt.s32.f64	s0, d16
   60ed8:	vmov	r5, s0
   60edc:	str	r5, [r4, r6, lsl #2]
   60ee0:	add	r6, r6, #1
   60ee4:	ldr	r5, [r9]
   60ee8:	cmp	r6, r5
   60eec:	blt	60ec0 <GetDataSlab+0x2cd64>
   60ef0:	add	r4, r4, r0
   60ef4:	ldr	r1, [r3]
   60ef8:	ldr	r8, [lr]
   60efc:	ldr	r0, [ip]
   60f00:	str	r4, [sp, #88]	; 0x58
   60f04:	b	60e88 <GetDataSlab+0x2cd2c>
   60f08:	cmp	r6, #1
   60f0c:	blt	35058 <GetDataSlab+0xefc>
   60f10:	ldr	r0, [sp, #60]	; 0x3c
   60f14:	ldr	r1, [sp, #56]	; 0x38
   60f18:	ldr	r2, [sp, #80]	; 0x50
   60f1c:	ldr	r4, [sp, #88]	; 0x58
   60f20:	mla	r0, r1, r8, r0
   60f24:	add	r0, r2, r0, lsl #3
   60f28:	mov	r2, #0
   60f2c:	cmp	r5, #1
   60f30:	bge	60f58 <GetDataSlab+0x2cdfc>
   60f34:	ldr	r1, [sp, #72]	; 0x48
   60f38:	mul	r7, r8, r1
   60f3c:	add	r2, r2, #1
   60f40:	str	r1, [sp, #72]	; 0x48
   60f44:	cmp	r2, r6
   60f48:	add	r0, r0, r7, lsl #3
   60f4c:	bge	637dc <GetDataSlab+0x2f680>
   60f50:	cmp	r5, #1
   60f54:	blt	60f34 <GetDataSlab+0x2cdd8>
   60f58:	mov	r7, #0
   60f5c:	mov	r6, #0
   60f60:	ldr	r5, [sl]
   60f64:	add	r7, r7, #4
   60f68:	mul	r5, r5, r6
   60f6c:	ldr	r5, [r0, r5, lsl #3]
   60f70:	str	r5, [r4, r6, lsl #2]
   60f74:	add	r6, r6, #1
   60f78:	ldr	r5, [r9]
   60f7c:	cmp	r6, r5
   60f80:	blt	60f60 <GetDataSlab+0x2ce04>
   60f84:	ldr	r6, [r3]
   60f88:	ldr	r8, [lr]
   60f8c:	ldr	r1, [ip]
   60f90:	add	r4, r4, r7
   60f94:	b	60f38 <GetDataSlab+0x2cddc>
   60f98:	cmp	r6, #1
   60f9c:	blt	35058 <GetDataSlab+0xefc>
   60fa0:	ldr	r0, [sp, #60]	; 0x3c
   60fa4:	ldr	r1, [sp, #56]	; 0x38
   60fa8:	ldr	r2, [sp, #80]	; 0x50
   60fac:	mov	r7, #0
   60fb0:	mla	r0, r1, r8, r0
   60fb4:	add	r2, r2, r0
   60fb8:	cmp	r5, #1
   60fbc:	bge	60fec <GetDataSlab+0x2ce90>
   60fc0:	ldr	r1, [sp, #76]	; 0x4c
   60fc4:	ldr	r0, [sp, #72]	; 0x48
   60fc8:	mla	r2, r8, r0, r2
   60fcc:	add	r7, r7, #1
   60fd0:	str	r0, [sp, #72]	; 0x48
   60fd4:	mov	r0, #0
   60fd8:	str	r1, [sp, #76]	; 0x4c
   60fdc:	cmp	r7, r1
   60fe0:	bge	5b6a4 <GetDataSlab+0x27548>
   60fe4:	cmp	r5, #1
   60fe8:	blt	60fc0 <GetDataSlab+0x2ce64>
   60fec:	ldr	r4, [sp, #88]	; 0x58
   60ff0:	mov	r0, #0
   60ff4:	mov	r6, #0
   60ff8:	ldr	r5, [sl]
   60ffc:	add	r0, r0, #4
   61000:	mul	r5, r5, r6
   61004:	ldrb	r5, [r2, r5]
   61008:	str	r5, [r4, r6, lsl #2]
   6100c:	add	r6, r6, #1
   61010:	ldr	r5, [r9]
   61014:	cmp	r6, r5
   61018:	blt	60ff8 <GetDataSlab+0x2ce9c>
   6101c:	add	r4, r4, r0
   61020:	ldr	r1, [r3]
   61024:	ldr	r8, [lr]
   61028:	ldr	r0, [ip]
   6102c:	str	r4, [sp, #88]	; 0x58
   61030:	b	60fc8 <GetDataSlab+0x2ce6c>
   61034:	cmp	r6, #1
   61038:	blt	35058 <GetDataSlab+0xefc>
   6103c:	ldr	r0, [sp, #60]	; 0x3c
   61040:	ldr	r1, [sp, #56]	; 0x38
   61044:	ldr	r2, [sp, #80]	; 0x50
   61048:	mov	r7, #0
   6104c:	mla	r0, r1, r8, r0
   61050:	add	r2, r2, r0, lsl #1
   61054:	cmp	r5, #1
   61058:	bge	61090 <GetDataSlab+0x2cf34>
   6105c:	ldr	r1, [sp, #76]	; 0x4c
   61060:	ldr	r0, [sp, #72]	; 0x48
   61064:	mov	r4, r0
   61068:	str	r0, [sp, #72]	; 0x48
   6106c:	mul	r0, r8, r0
   61070:	add	r7, r7, #1
   61074:	str	r1, [sp, #76]	; 0x4c
   61078:	cmp	r7, r1
   6107c:	add	r2, r2, r0, lsl #1
   61080:	mov	r0, #0
   61084:	bge	5b6a4 <GetDataSlab+0x27548>
   61088:	cmp	r5, #1
   6108c:	blt	6105c <GetDataSlab+0x2cf00>
   61090:	ldr	r4, [sp, #88]	; 0x58
   61094:	mov	r0, #0
   61098:	mov	r6, #0
   6109c:	ldr	r5, [sl]
   610a0:	add	r0, r0, #4
   610a4:	mul	r5, r5, r6
   610a8:	add	r5, r2, r5, lsl #1
   610ac:	ldrsh	r5, [r5]
   610b0:	str	r5, [r4, r6, lsl #2]
   610b4:	add	r6, r6, #1
   610b8:	ldr	r5, [r9]
   610bc:	cmp	r6, r5
   610c0:	blt	6109c <GetDataSlab+0x2cf40>
   610c4:	add	r4, r4, r0
   610c8:	ldr	r1, [r3]
   610cc:	ldr	r8, [lr]
   610d0:	ldr	r0, [ip]
   610d4:	str	r4, [sp, #88]	; 0x58
   610d8:	b	61064 <GetDataSlab+0x2cf08>
   610dc:	cmp	r6, #1
   610e0:	blt	35058 <GetDataSlab+0xefc>
   610e4:	ldr	r0, [sp, #60]	; 0x3c
   610e8:	ldr	r1, [sp, #56]	; 0x38
   610ec:	ldr	r2, [sp, #80]	; 0x50
   610f0:	mov	r7, #0
   610f4:	mla	r0, r1, r8, r0
   610f8:	add	r2, r2, r0, lsl #1
   610fc:	cmp	r5, #1
   61100:	bge	61138 <GetDataSlab+0x2cfdc>
   61104:	ldr	r1, [sp, #76]	; 0x4c
   61108:	ldr	r0, [sp, #72]	; 0x48
   6110c:	mov	r4, r0
   61110:	str	r0, [sp, #72]	; 0x48
   61114:	mul	r0, r8, r0
   61118:	add	r7, r7, #1
   6111c:	str	r1, [sp, #76]	; 0x4c
   61120:	cmp	r7, r1
   61124:	add	r2, r2, r0, lsl #1
   61128:	mov	r0, #0
   6112c:	bge	5b6a4 <GetDataSlab+0x27548>
   61130:	cmp	r5, #1
   61134:	blt	61104 <GetDataSlab+0x2cfa8>
   61138:	ldr	r4, [sp, #88]	; 0x58
   6113c:	mov	r0, #0
   61140:	mov	r6, #0
   61144:	ldr	r5, [sl]
   61148:	add	r0, r0, #4
   6114c:	mul	r5, r5, r6
   61150:	add	r5, r2, r5, lsl #1
   61154:	ldrh	r5, [r5]
   61158:	str	r5, [r4, r6, lsl #2]
   6115c:	add	r6, r6, #1
   61160:	ldr	r5, [r9]
   61164:	cmp	r6, r5
   61168:	blt	61144 <GetDataSlab+0x2cfe8>
   6116c:	add	r4, r4, r0
   61170:	ldr	r1, [r3]
   61174:	ldr	r8, [lr]
   61178:	ldr	r0, [ip]
   6117c:	str	r4, [sp, #88]	; 0x58
   61180:	b	6110c <GetDataSlab+0x2cfb0>
   61184:	cmp	r6, #1
   61188:	blt	35058 <GetDataSlab+0xefc>
   6118c:	ldr	r0, [sp, #60]	; 0x3c
   61190:	ldr	r1, [sp, #56]	; 0x38
   61194:	ldr	r2, [sp, #80]	; 0x50
   61198:	mov	r7, #0
   6119c:	mla	r0, r1, r8, r0
   611a0:	add	r2, r2, r0, lsl #2
   611a4:	cmp	r5, #1
   611a8:	bge	611e0 <GetDataSlab+0x2d084>
   611ac:	ldr	r1, [sp, #76]	; 0x4c
   611b0:	ldr	r0, [sp, #72]	; 0x48
   611b4:	mov	r4, r0
   611b8:	str	r0, [sp, #72]	; 0x48
   611bc:	mul	r0, r8, r0
   611c0:	add	r7, r7, #1
   611c4:	str	r1, [sp, #76]	; 0x4c
   611c8:	cmp	r7, r1
   611cc:	add	r2, r2, r0, lsl #2
   611d0:	mov	r0, #0
   611d4:	bge	5b6a4 <GetDataSlab+0x27548>
   611d8:	cmp	r5, #1
   611dc:	blt	611ac <GetDataSlab+0x2d050>
   611e0:	ldr	r4, [sp, #88]	; 0x58
   611e4:	mov	r0, #0
   611e8:	mov	r6, #0
   611ec:	ldr	r5, [sl]
   611f0:	add	r0, r0, #4
   611f4:	mul	r5, r5, r6
   611f8:	ldr	r5, [r2, r5, lsl #2]
   611fc:	str	r5, [r4, r6, lsl #2]
   61200:	add	r6, r6, #1
   61204:	ldr	r5, [r9]
   61208:	cmp	r6, r5
   6120c:	blt	611ec <GetDataSlab+0x2d090>
   61210:	add	r4, r4, r0
   61214:	ldr	r1, [r3]
   61218:	ldr	r8, [lr]
   6121c:	ldr	r0, [ip]
   61220:	str	r4, [sp, #88]	; 0x58
   61224:	b	611b4 <GetDataSlab+0x2d058>
   61228:	cmp	r6, #1
   6122c:	blt	35058 <GetDataSlab+0xefc>
   61230:	ldr	r0, [sp, #60]	; 0x3c
   61234:	ldr	r1, [sp, #56]	; 0x38
   61238:	ldr	r2, [sp, #80]	; 0x50
   6123c:	mov	r7, #0
   61240:	mla	r0, r1, r8, r0
   61244:	add	r2, r2, r0, lsl #2
   61248:	cmp	r5, #1
   6124c:	bge	61284 <GetDataSlab+0x2d128>
   61250:	ldr	r1, [sp, #76]	; 0x4c
   61254:	ldr	r0, [sp, #72]	; 0x48
   61258:	mov	r4, r0
   6125c:	str	r0, [sp, #72]	; 0x48
   61260:	mul	r0, r8, r0
   61264:	add	r7, r7, #1
   61268:	str	r1, [sp, #76]	; 0x4c
   6126c:	cmp	r7, r1
   61270:	add	r2, r2, r0, lsl #2
   61274:	mov	r0, #0
   61278:	bge	5b6a4 <GetDataSlab+0x27548>
   6127c:	cmp	r5, #1
   61280:	blt	61250 <GetDataSlab+0x2d0f4>
   61284:	ldr	r4, [sp, #88]	; 0x58
   61288:	mov	r0, #0
   6128c:	mov	r6, #0
   61290:	ldr	r5, [sl]
   61294:	add	r0, r0, #4
   61298:	mul	r5, r5, r6
   6129c:	ldr	r5, [r2, r5, lsl #2]
   612a0:	str	r5, [r4, r6, lsl #2]
   612a4:	add	r6, r6, #1
   612a8:	ldr	r5, [r9]
   612ac:	cmp	r6, r5
   612b0:	blt	61290 <GetDataSlab+0x2d134>
   612b4:	add	r4, r4, r0
   612b8:	ldr	r1, [r3]
   612bc:	ldr	r8, [lr]
   612c0:	ldr	r0, [ip]
   612c4:	str	r4, [sp, #88]	; 0x58
   612c8:	b	61258 <GetDataSlab+0x2d0fc>
   612cc:	cmp	r6, #1
   612d0:	blt	35058 <GetDataSlab+0xefc>
   612d4:	ldr	r0, [sp, #60]	; 0x3c
   612d8:	ldr	r1, [sp, #56]	; 0x38
   612dc:	ldr	r2, [sp, #80]	; 0x50
   612e0:	mov	r7, #0
   612e4:	mla	r0, r1, r8, r0
   612e8:	add	r2, r2, r0, lsl #2
   612ec:	cmp	r5, #1
   612f0:	bge	61328 <GetDataSlab+0x2d1cc>
   612f4:	ldr	r1, [sp, #76]	; 0x4c
   612f8:	ldr	r0, [sp, #72]	; 0x48
   612fc:	mov	r4, r0
   61300:	str	r0, [sp, #72]	; 0x48
   61304:	mul	r0, r8, r0
   61308:	add	r7, r7, #1
   6130c:	str	r1, [sp, #76]	; 0x4c
   61310:	cmp	r7, r1
   61314:	add	r2, r2, r0, lsl #2
   61318:	mov	r0, #0
   6131c:	bge	5b6a4 <GetDataSlab+0x27548>
   61320:	cmp	r5, #1
   61324:	blt	612f4 <GetDataSlab+0x2d198>
   61328:	ldr	r4, [sp, #88]	; 0x58
   6132c:	mov	r0, #0
   61330:	mov	r6, #0
   61334:	ldr	r5, [sl]
   61338:	add	r0, r0, #4
   6133c:	mul	r5, r5, r6
   61340:	add	r5, r2, r5, lsl #2
   61344:	vldr	s0, [r5]
   61348:	vcvt.u32.f32	s0, s0
   6134c:	vmov	r5, s0
   61350:	str	r5, [r4, r6, lsl #2]
   61354:	add	r6, r6, #1
   61358:	ldr	r5, [r9]
   6135c:	cmp	r6, r5
   61360:	blt	61334 <GetDataSlab+0x2d1d8>
   61364:	add	r4, r4, r0
   61368:	ldr	r1, [r3]
   6136c:	ldr	r8, [lr]
   61370:	ldr	r0, [ip]
   61374:	str	r4, [sp, #88]	; 0x58
   61378:	b	612fc <GetDataSlab+0x2d1a0>
   6137c:	cmp	r6, #1
   61380:	blt	35058 <GetDataSlab+0xefc>
   61384:	ldr	r0, [sp, #60]	; 0x3c
   61388:	ldr	r1, [sp, #56]	; 0x38
   6138c:	ldr	r2, [sp, #80]	; 0x50
   61390:	mov	r7, #0
   61394:	mla	r0, r1, r8, r0
   61398:	add	r2, r2, r0, lsl #3
   6139c:	cmp	r5, #1
   613a0:	bge	613d8 <GetDataSlab+0x2d27c>
   613a4:	ldr	r1, [sp, #76]	; 0x4c
   613a8:	ldr	r0, [sp, #72]	; 0x48
   613ac:	mov	r4, r0
   613b0:	str	r0, [sp, #72]	; 0x48
   613b4:	mul	r0, r8, r0
   613b8:	add	r7, r7, #1
   613bc:	str	r1, [sp, #76]	; 0x4c
   613c0:	cmp	r7, r1
   613c4:	add	r2, r2, r0, lsl #3
   613c8:	mov	r0, #0
   613cc:	bge	5b6a4 <GetDataSlab+0x27548>
   613d0:	cmp	r5, #1
   613d4:	blt	613a4 <GetDataSlab+0x2d248>
   613d8:	ldr	r4, [sp, #88]	; 0x58
   613dc:	mov	r0, #0
   613e0:	mov	r6, #0
   613e4:	ldr	r5, [sl]
   613e8:	add	r0, r0, #4
   613ec:	mul	r5, r5, r6
   613f0:	add	r5, r2, r5, lsl #3
   613f4:	vldr	d16, [r5]
   613f8:	vcvt.u32.f64	s0, d16
   613fc:	vmov	r5, s0
   61400:	str	r5, [r4, r6, lsl #2]
   61404:	add	r6, r6, #1
   61408:	ldr	r5, [r9]
   6140c:	cmp	r6, r5
   61410:	blt	613e4 <GetDataSlab+0x2d288>
   61414:	add	r4, r4, r0
   61418:	ldr	r1, [r3]
   6141c:	ldr	r8, [lr]
   61420:	ldr	r0, [ip]
   61424:	str	r4, [sp, #88]	; 0x58
   61428:	b	613ac <GetDataSlab+0x2d250>
   6142c:	cmp	r6, #1
   61430:	blt	35058 <GetDataSlab+0xefc>
   61434:	ldr	r0, [sp, #60]	; 0x3c
   61438:	ldr	r1, [sp, #56]	; 0x38
   6143c:	ldr	r2, [sp, #80]	; 0x50
   61440:	ldr	r4, [sp, #88]	; 0x58
   61444:	mla	r0, r1, r8, r0
   61448:	add	r0, r2, r0, lsl #3
   6144c:	mov	r2, #0
   61450:	cmp	r5, #1
   61454:	bge	6147c <GetDataSlab+0x2d320>
   61458:	ldr	r1, [sp, #72]	; 0x48
   6145c:	mul	r7, r8, r1
   61460:	add	r2, r2, #1
   61464:	str	r1, [sp, #72]	; 0x48
   61468:	cmp	r2, r6
   6146c:	add	r0, r0, r7, lsl #3
   61470:	bge	637f4 <GetDataSlab+0x2f698>
   61474:	cmp	r5, #1
   61478:	blt	61458 <GetDataSlab+0x2d2fc>
   6147c:	mov	r7, #0
   61480:	mov	r6, #0
   61484:	ldr	r5, [sl]
   61488:	add	r7, r7, #4
   6148c:	mul	r5, r5, r6
   61490:	ldr	r5, [r0, r5, lsl #3]
   61494:	str	r5, [r4, r6, lsl #2]
   61498:	add	r6, r6, #1
   6149c:	ldr	r5, [r9]
   614a0:	cmp	r6, r5
   614a4:	blt	61484 <GetDataSlab+0x2d328>
   614a8:	ldr	r6, [r3]
   614ac:	ldr	r8, [lr]
   614b0:	ldr	r1, [ip]
   614b4:	add	r4, r4, r7
   614b8:	b	6145c <GetDataSlab+0x2d300>
   614bc:	cmp	r3, #1
   614c0:	blt	35058 <GetDataSlab+0xefc>
   614c4:	cmp	r5, #1
   614c8:	mov	r0, #0
   614cc:	blt	5b6a4 <GetDataSlab+0x27548>
   614d0:	ldr	r0, [sp, #72]	; 0x48
   614d4:	ldr	r3, [sp, #60]	; 0x3c
   614d8:	ldr	r7, [sp, #56]	; 0x38
   614dc:	cmp	r5, #1
   614e0:	mov	r2, r8
   614e4:	mov	r2, #0
   614e8:	mov	r9, #0
   614ec:	movwhi	r2, #1
   614f0:	mul	r0, r0, r8
   614f4:	mla	r1, r7, r8, r3
   614f8:	str	r0, [sp, #72]	; 0x48
   614fc:	ldr	r0, [sp, #80]	; 0x50
   61500:	str	r1, [sp, #52]	; 0x34
   61504:	add	r0, r0, r1
   61508:	mov	r1, #1
   6150c:	str	r0, [sp, #92]	; 0x5c
   61510:	sub	r0, r5, #2
   61514:	add	r1, r1, r0, lsr #1
   61518:	lsr	r0, r0, #1
   6151c:	str	r0, [sp, #40]	; 0x28
   61520:	mov	r0, #0
   61524:	and	r6, r1, #1
   61528:	str	r0, [sp, #84]	; 0x54
   6152c:	sub	r1, r1, r6
   61530:	str	r6, [sp, #48]	; 0x30
   61534:	str	r1, [sp, #36]	; 0x24
   61538:	add	r1, r5, r3
   6153c:	mla	r1, r7, r8, r1
   61540:	str	r1, [sp, #56]	; 0x38
   61544:	ldr	r1, [sp, #68]	; 0x44
   61548:	mov	r3, r1
   6154c:	sub	r1, r1, #1
   61550:	clz	r1, r1
   61554:	lsr	r1, r1, #5
   61558:	and	r1, r2, r1
   6155c:	lsl	r2, r3, #1
   61560:	str	r1, [sp, #64]	; 0x40
   61564:	lsl	r1, r3, #2
   61568:	str	r1, [sp, #32]
   6156c:	and	r1, r5, #1
   61570:	str	r1, [sp, #60]	; 0x3c
   61574:	bic	r1, r5, #1
   61578:	str	r1, [sp, #44]	; 0x2c
   6157c:	ldr	r0, [sp, #64]	; 0x40
   61580:	cmp	r0, #0
   61584:	bne	615b8 <GetDataSlab+0x2d45c>
   61588:	b	61640 <GetDataSlab+0x2d4e4>
   6158c:	ldr	r0, [sp, #72]	; 0x48
   61590:	add	ip, ip, #1
   61594:	cmp	ip, lr
   61598:	str	ip, [sp, #84]	; 0x54
   6159c:	add	r8, r8, r0
   615a0:	mov	r0, #0
   615a4:	str	r8, [sp, #92]	; 0x5c
   615a8:	beq	5b6a4 <GetDataSlab+0x27548>
   615ac:	ldr	r0, [sp, #64]	; 0x40
   615b0:	cmp	r0, #0
   615b4:	beq	61640 <GetDataSlab+0x2d4e4>
   615b8:	ldr	r0, [sp, #72]	; 0x48
   615bc:	ldr	ip, [sp, #84]	; 0x54
   615c0:	ldr	r1, [sp, #56]	; 0x38
   615c4:	ldr	r7, [sp, #80]	; 0x50
   615c8:	ldr	r3, [sp, #88]	; 0x58
   615cc:	ldr	lr, [sp, #76]	; 0x4c
   615d0:	ldr	r8, [sp, #92]	; 0x5c
   615d4:	mul	r0, r0, ip
   615d8:	add	r1, r1, r0
   615dc:	add	r1, r7, r1
   615e0:	cmp	r1, r3
   615e4:	bls	616b4 <GetDataSlab+0x2d558>
   615e8:	add	r1, r3, r5, lsl #3
   615ec:	ldr	r3, [sp, #52]	; 0x34
   615f0:	add	r0, r3, r0
   615f4:	add	r0, r7, r0
   615f8:	cmp	r0, r1
   615fc:	bcs	616b4 <GetDataSlab+0x2d558>
   61600:	mov	r0, #0
   61604:	ldr	r1, [sp, #60]	; 0x3c
   61608:	cmp	r1, #0
   6160c:	beq	6165c <GetDataSlab+0x2d500>
   61610:	ldr	r1, [sp, #68]	; 0x44
   61614:	orr	r3, r0, #1
   61618:	mul	r1, r0, r1
   6161c:	ldrb	r4, [r8, r1]
   61620:	ldr	r1, [sp, #88]	; 0x58
   61624:	stm	r1, {r4, r9}
   61628:	add	r1, r1, #8
   6162c:	str	r1, [sp, #88]	; 0x58
   61630:	orr	r0, r0, #1
   61634:	cmp	r5, r0
   61638:	bne	6166c <GetDataSlab+0x2d510>
   6163c:	b	6158c <GetDataSlab+0x2d430>
   61640:	ldr	lr, [sp, #76]	; 0x4c
   61644:	ldr	r8, [sp, #92]	; 0x5c
   61648:	ldr	ip, [sp, #84]	; 0x54
   6164c:	mov	r0, #0
   61650:	ldr	r1, [sp, #60]	; 0x3c
   61654:	cmp	r1, #0
   61658:	bne	61610 <GetDataSlab+0x2d4b4>
   6165c:	mov	r3, r0
   61660:	orr	r0, r0, #1
   61664:	cmp	r5, r0
   61668:	beq	6158c <GetDataSlab+0x2d430>
   6166c:	ldr	r4, [sp, #68]	; 0x44
   61670:	sub	r1, r5, r3
   61674:	mov	r6, r8
   61678:	mul	r0, r4, r3
   6167c:	add	r3, r3, #1
   61680:	mul	r3, r4, r3
   61684:	ldr	r4, [sp, #88]	; 0x58
   61688:	ldrb	r7, [r6, r0]
   6168c:	subs	r1, r1, #2
   61690:	stm	r4, {r7, r9}
   61694:	ldrb	r7, [r6, r3]
   61698:	str	r9, [r4, #12]
   6169c:	add	r6, r6, r2
   616a0:	str	r7, [r4, #8]
   616a4:	add	r4, r4, #16
   616a8:	bne	61688 <GetDataSlab+0x2d52c>
   616ac:	str	r4, [sp, #88]	; 0x58
   616b0:	b	6158c <GetDataSlab+0x2d430>
   616b4:	ldr	r0, [sp, #40]	; 0x28
   616b8:	cmp	r0, #0
   616bc:	beq	61738 <GetDataSlab+0x2d5dc>
   616c0:	mov	r3, r8
   616c4:	ldr	r6, [sp, #88]	; 0x58
   616c8:	ldr	r1, [sp, #36]	; 0x24
   616cc:	ldr	r8, [sp, #32]
   616d0:	mov	r0, #0
   616d4:	add	ip, sp, #272	; 0x110
   616d8:	add	sl, sp, #292	; 0x124
   616dc:	ldrh	lr, [r3]
   616e0:	add	r7, sp, #288	; 0x120
   616e4:	mov	r4, #32
   616e8:	subs	r1, r1, #2
   616ec:	add	r0, r0, #4
   616f0:	strh	lr, [ip, #16]
   616f4:	vld1.16	{d16[0]}, [r7 :16]
   616f8:	add	r7, r6, #16
   616fc:	vmovl.u8	q8, d16
   61700:	vmovl.u16	q8, d16
   61704:	vmovl.u32	q8, d16
   61708:	vst1.64	{d16-d17}, [r6], r4
   6170c:	add	r4, r3, r2
   61710:	add	r3, r3, r8
   61714:	ldrh	r4, [r4]
   61718:	strh	r4, [ip, #20]
   6171c:	vld1.16	{d16[0]}, [sl :16]
   61720:	vmovl.u8	q8, d16
   61724:	vmovl.u16	q8, d16
   61728:	vmovl.u32	q8, d16
   6172c:	vst1.64	{d16-d17}, [r7]
   61730:	bne	616dc <GetDataSlab+0x2d580>
   61734:	b	61740 <GetDataSlab+0x2d5e4>
   61738:	mov	r0, #0
   6173c:	add	ip, sp, #272	; 0x110
   61740:	ldr	r1, [sp, #48]	; 0x30
   61744:	ldr	r8, [sp, #92]	; 0x5c
   61748:	cmp	r1, #0
   6174c:	beq	61780 <GetDataSlab+0x2d624>
   61750:	ldr	r1, [sp, #68]	; 0x44
   61754:	mla	r1, r0, r1, r8
   61758:	ldrh	r1, [r1]
   6175c:	strh	r1, [ip, #12]
   61760:	add	r1, sp, #284	; 0x11c
   61764:	vld1.16	{d16[0]}, [r1 :16]
   61768:	ldr	r1, [sp, #88]	; 0x58
   6176c:	add	r0, r1, r0, lsl #3
   61770:	vmovl.u8	q8, d16
   61774:	vmovl.u16	q8, d16
   61778:	vmovl.u32	q8, d16
   6177c:	vst1.64	{d16-d17}, [r0]
   61780:	ldr	r1, [sp, #44]	; 0x2c
   61784:	ldr	r0, [sp, #88]	; 0x58
   61788:	ldr	lr, [sp, #76]	; 0x4c
   6178c:	ldr	ip, [sp, #84]	; 0x54
   61790:	add	r0, r0, r1, lsl #3
   61794:	cmp	r5, r1
   61798:	str	r0, [sp, #88]	; 0x58
   6179c:	mov	r0, r1
   617a0:	bne	61650 <GetDataSlab+0x2d4f4>
   617a4:	b	6158c <GetDataSlab+0x2d430>
   617a8:	cmp	r3, #1
   617ac:	blt	35058 <GetDataSlab+0xefc>
   617b0:	cmp	r5, #1
   617b4:	mov	r0, #0
   617b8:	blt	5b6a4 <GetDataSlab+0x27548>
   617bc:	ldr	r0, [sp, #60]	; 0x3c
   617c0:	ldr	r1, [sp, #56]	; 0x38
   617c4:	cmp	r5, #1
   617c8:	mla	r0, r1, r8, r0
   617cc:	ldr	r1, [sp, #80]	; 0x50
   617d0:	add	r9, r1, r0, lsl #1
   617d4:	sub	r0, r5, #2
   617d8:	mov	r1, #1
   617dc:	add	r1, r1, r0, lsr #1
   617e0:	lsr	r0, r0, #1
   617e4:	str	r0, [sp, #56]	; 0x38
   617e8:	and	r2, r1, #1
   617ec:	sub	r1, r1, r2
   617f0:	str	r2, [sp, #60]	; 0x3c
   617f4:	mov	r2, #0
   617f8:	str	r1, [sp, #48]	; 0x30
   617fc:	ldr	r1, [sp, #68]	; 0x44
   61800:	str	r2, [sp, #92]	; 0x5c
   61804:	mov	r2, #0
   61808:	movwhi	r2, #1
   6180c:	mov	r3, r1
   61810:	sub	r1, r1, #1
   61814:	clz	r1, r1
   61818:	lsr	r1, r1, #5
   6181c:	and	r1, r2, r1
   61820:	str	r1, [sp, #84]	; 0x54
   61824:	ldr	r1, [sp, #72]	; 0x48
   61828:	mul	r1, r1, r8
   6182c:	lsl	r8, r3, #3
   61830:	lsl	r1, r1, #1
   61834:	str	r1, [sp, #80]	; 0x50
   61838:	lsl	r1, r3, #1
   6183c:	lsl	r3, r3, #2
   61840:	str	r1, [sp, #52]	; 0x34
   61844:	and	r1, r5, #1
   61848:	str	r1, [sp, #72]	; 0x48
   6184c:	bic	r1, r5, #1
   61850:	str	r1, [sp, #64]	; 0x40
   61854:	ldr	r0, [sp, #84]	; 0x54
   61858:	cmp	r0, #0
   6185c:	bne	6188c <GetDataSlab+0x2d730>
   61860:	b	61958 <GetDataSlab+0x2d7fc>
   61864:	ldr	r0, [sp, #80]	; 0x50
   61868:	add	ip, ip, #1
   6186c:	cmp	ip, lr
   61870:	str	ip, [sp, #92]	; 0x5c
   61874:	add	r9, r9, r0
   61878:	mov	r0, #0
   6187c:	beq	5b6a4 <GetDataSlab+0x27548>
   61880:	ldr	r0, [sp, #84]	; 0x54
   61884:	cmp	r0, #0
   61888:	beq	61958 <GetDataSlab+0x2d7fc>
   6188c:	ldr	r0, [sp, #56]	; 0x38
   61890:	add	r2, sp, #252	; 0xfc
   61894:	mov	r7, #32
   61898:	cmp	r0, #0
   6189c:	mov	r0, #0
   618a0:	beq	618f8 <GetDataSlab+0x2d79c>
   618a4:	ldr	sl, [sp, #88]	; 0x58
   618a8:	ldr	r4, [sp, #48]	; 0x30
   618ac:	mov	r1, r9
   618b0:	add	ip, sp, #256	; 0x100
   618b4:	ldr	r6, [r1]
   618b8:	subs	r4, r4, #2
   618bc:	add	r0, r0, #4
   618c0:	str	r6, [sp, #252]	; 0xfc
   618c4:	add	r6, sl, #16
   618c8:	vld1.32	{d16[0]}, [r2 :32]
   618cc:	vmovl.s16	q8, d16
   618d0:	vmovl.s32	q8, d16
   618d4:	vst1.64	{d16-d17}, [sl], r7
   618d8:	ldr	lr, [r1, r3]
   618dc:	add	r1, r1, r8
   618e0:	str	lr, [sp, #256]	; 0x100
   618e4:	vld1.32	{d16[0]}, [ip :32]
   618e8:	vmovl.s16	q8, d16
   618ec:	vmovl.s32	q8, d16
   618f0:	vst1.64	{d16-d17}, [r6]
   618f4:	bne	618b4 <GetDataSlab+0x2d758>
   618f8:	ldr	r1, [sp, #60]	; 0x3c
   618fc:	cmp	r1, #0
   61900:	beq	61930 <GetDataSlab+0x2d7d4>
   61904:	ldr	r1, [sp, #68]	; 0x44
   61908:	mul	r1, r0, r1
   6190c:	ldr	r1, [r9, r1, lsl #1]
   61910:	str	r1, [sp, #248]	; 0xf8
   61914:	add	r1, sp, #248	; 0xf8
   61918:	vld1.32	{d16[0]}, [r1 :32]
   6191c:	ldr	r1, [sp, #88]	; 0x58
   61920:	add	r0, r1, r0, lsl #3
   61924:	vmovl.s16	q8, d16
   61928:	vmovl.s32	q8, d16
   6192c:	vst1.64	{d16-d17}, [r0]
   61930:	ldr	r1, [sp, #64]	; 0x40
   61934:	ldr	r0, [sp, #88]	; 0x58
   61938:	ldr	lr, [sp, #76]	; 0x4c
   6193c:	ldr	ip, [sp, #92]	; 0x5c
   61940:	add	r0, r0, r1, lsl #3
   61944:	cmp	r5, r1
   61948:	str	r0, [sp, #88]	; 0x58
   6194c:	mov	r0, r1
   61950:	beq	61864 <GetDataSlab+0x2d708>
   61954:	b	61964 <GetDataSlab+0x2d808>
   61958:	ldr	lr, [sp, #76]	; 0x4c
   6195c:	ldr	ip, [sp, #92]	; 0x5c
   61960:	mov	r0, #0
   61964:	ldr	r1, [sp, #72]	; 0x48
   61968:	cmp	r1, #0
   6196c:	bne	61984 <GetDataSlab+0x2d828>
   61970:	mov	r4, r0
   61974:	orr	r0, r0, #1
   61978:	cmp	r5, r0
   6197c:	beq	61864 <GetDataSlab+0x2d708>
   61980:	b	619bc <GetDataSlab+0x2d860>
   61984:	ldr	r1, [sp, #68]	; 0x44
   61988:	ldr	r2, [sp, #88]	; 0x58
   6198c:	mul	r1, r0, r1
   61990:	add	r1, r9, r1, lsl #1
   61994:	ldrsh	r4, [r1]
   61998:	asr	r1, r4, #31
   6199c:	str	r4, [r2]
   619a0:	orr	r4, r0, #1
   619a4:	str	r1, [r2, #4]
   619a8:	add	r2, r2, #8
   619ac:	str	r2, [sp, #88]	; 0x58
   619b0:	orr	r0, r0, #1
   619b4:	cmp	r5, r0
   619b8:	beq	61864 <GetDataSlab+0x2d708>
   619bc:	ldr	r2, [sp, #52]	; 0x34
   619c0:	add	r6, r4, #1
   619c4:	sub	r1, r5, r4
   619c8:	mul	r0, r2, r4
   619cc:	mul	r4, r2, r6
   619d0:	ldr	r2, [sp, #88]	; 0x58
   619d4:	mov	r6, r9
   619d8:	add	r7, r6, r0
   619dc:	subs	r1, r1, #2
   619e0:	ldrsh	r7, [r7]
   619e4:	str	r7, [r2]
   619e8:	asr	r7, r7, #31
   619ec:	str	r7, [r2, #4]
   619f0:	add	r7, r6, r4
   619f4:	add	r6, r6, r3
   619f8:	ldrsh	r7, [r7]
   619fc:	str	r7, [r2, #8]
   61a00:	asr	r7, r7, #31
   61a04:	str	r7, [r2, #12]
   61a08:	add	r2, r2, #16
   61a0c:	bne	619d8 <GetDataSlab+0x2d87c>
   61a10:	str	r2, [sp, #88]	; 0x58
   61a14:	b	61864 <GetDataSlab+0x2d708>
   61a18:	cmp	r3, #1
   61a1c:	blt	35058 <GetDataSlab+0xefc>
   61a20:	cmp	r5, #1
   61a24:	mov	r0, #0
   61a28:	blt	5b6a4 <GetDataSlab+0x27548>
   61a2c:	ldr	r0, [sp, #60]	; 0x3c
   61a30:	ldr	r1, [sp, #56]	; 0x38
   61a34:	cmp	r5, #1
   61a38:	mla	r0, r1, r8, r0
   61a3c:	ldr	r1, [sp, #80]	; 0x50
   61a40:	add	r0, r1, r0, lsl #1
   61a44:	mov	r1, #1
   61a48:	str	r0, [sp, #92]	; 0x5c
   61a4c:	sub	r0, r5, #2
   61a50:	add	r1, r1, r0, lsr #1
   61a54:	lsr	r0, r0, #1
   61a58:	str	r0, [sp, #52]	; 0x34
   61a5c:	mov	r0, #0
   61a60:	and	r2, r1, #1
   61a64:	str	r0, [sp, #84]	; 0x54
   61a68:	sub	r1, r1, r2
   61a6c:	str	r2, [sp, #60]	; 0x3c
   61a70:	mov	r2, #0
   61a74:	movwhi	r2, #1
   61a78:	str	r1, [sp, #44]	; 0x2c
   61a7c:	ldr	r1, [sp, #68]	; 0x44
   61a80:	mov	r3, r1
   61a84:	sub	r1, r1, #1
   61a88:	clz	r1, r1
   61a8c:	lsr	r1, r1, #5
   61a90:	and	r1, r2, r1
   61a94:	str	r1, [sp, #80]	; 0x50
   61a98:	ldr	r1, [sp, #72]	; 0x48
   61a9c:	mul	r1, r1, r8
   61aa0:	lsl	r8, r3, #2
   61aa4:	lsl	r1, r1, #1
   61aa8:	str	r1, [sp, #72]	; 0x48
   61aac:	lsl	r1, r3, #1
   61ab0:	str	r1, [sp, #48]	; 0x30
   61ab4:	lsl	r1, r3, #3
   61ab8:	str	r1, [sp, #40]	; 0x28
   61abc:	and	r1, r5, #1
   61ac0:	ldr	r9, [sp, #40]	; 0x28
   61ac4:	str	r1, [sp, #64]	; 0x40
   61ac8:	bic	r1, r5, #1
   61acc:	str	r1, [sp, #56]	; 0x38
   61ad0:	ldr	r0, [sp, #80]	; 0x50
   61ad4:	cmp	r0, #0
   61ad8:	bne	61b0c <GetDataSlab+0x2d9b0>
   61adc:	b	61be0 <GetDataSlab+0x2da84>
   61ae0:	ldr	r0, [sp, #72]	; 0x48
   61ae4:	add	ip, ip, #1
   61ae8:	cmp	ip, lr
   61aec:	str	ip, [sp, #84]	; 0x54
   61af0:	add	sl, sl, r0
   61af4:	mov	r0, #0
   61af8:	str	sl, [sp, #92]	; 0x5c
   61afc:	beq	5b6a4 <GetDataSlab+0x27548>
   61b00:	ldr	r0, [sp, #80]	; 0x50
   61b04:	cmp	r0, #0
   61b08:	beq	61be0 <GetDataSlab+0x2da84>
   61b0c:	ldr	r0, [sp, #52]	; 0x34
   61b10:	ldr	r1, [sp, #92]	; 0x5c
   61b14:	cmp	r0, #0
   61b18:	mov	r0, #0
   61b1c:	beq	61b78 <GetDataSlab+0x2da1c>
   61b20:	ldr	r4, [sp, #88]	; 0x58
   61b24:	ldr	r6, [sp, #44]	; 0x2c
   61b28:	add	sl, sp, #264	; 0x108
   61b2c:	mov	r3, #32
   61b30:	add	ip, sp, #268	; 0x10c
   61b34:	ldr	lr, [r1]
   61b38:	add	r2, r4, #16
   61b3c:	subs	r6, r6, #2
   61b40:	add	r0, r0, #4
   61b44:	str	lr, [sp, #264]	; 0x108
   61b48:	vld1.32	{d16[0]}, [sl :32]
   61b4c:	vmovl.u16	q8, d16
   61b50:	vmovl.u32	q8, d16
   61b54:	vst1.64	{d16-d17}, [r4], r3
   61b58:	ldr	r7, [r1, r8]
   61b5c:	add	r1, r1, r9
   61b60:	str	r7, [sp, #268]	; 0x10c
   61b64:	vld1.32	{d16[0]}, [ip :32]
   61b68:	vmovl.u16	q8, d16
   61b6c:	vmovl.u32	q8, d16
   61b70:	vst1.64	{d16-d17}, [r2]
   61b74:	bne	61b34 <GetDataSlab+0x2d9d8>
   61b78:	ldr	r1, [sp, #60]	; 0x3c
   61b7c:	ldr	sl, [sp, #92]	; 0x5c
   61b80:	cmp	r1, #0
   61b84:	beq	61bb4 <GetDataSlab+0x2da58>
   61b88:	ldr	r1, [sp, #68]	; 0x44
   61b8c:	mul	r1, r0, r1
   61b90:	ldr	r1, [sl, r1, lsl #1]
   61b94:	str	r1, [sp, #260]	; 0x104
   61b98:	add	r1, sp, #260	; 0x104
   61b9c:	vld1.32	{d16[0]}, [r1 :32]
   61ba0:	ldr	r1, [sp, #88]	; 0x58
   61ba4:	add	r0, r1, r0, lsl #3
   61ba8:	vmovl.u16	q8, d16
   61bac:	vmovl.u32	q8, d16
   61bb0:	vst1.64	{d16-d17}, [r0]
   61bb4:	ldr	r1, [sp, #56]	; 0x38
   61bb8:	ldr	r0, [sp, #88]	; 0x58
   61bbc:	ldr	lr, [sp, #76]	; 0x4c
   61bc0:	ldr	ip, [sp, #84]	; 0x54
   61bc4:	mov	r3, #0
   61bc8:	add	r0, r0, r1, lsl #3
   61bcc:	cmp	r5, r1
   61bd0:	str	r0, [sp, #88]	; 0x58
   61bd4:	mov	r0, r1
   61bd8:	beq	61ae0 <GetDataSlab+0x2d984>
   61bdc:	b	61bf4 <GetDataSlab+0x2da98>
   61be0:	ldr	lr, [sp, #76]	; 0x4c
   61be4:	ldr	sl, [sp, #92]	; 0x5c
   61be8:	ldr	ip, [sp, #84]	; 0x54
   61bec:	mov	r0, #0
   61bf0:	mov	r3, #0
   61bf4:	ldr	r1, [sp, #64]	; 0x40
   61bf8:	cmp	r1, #0
   61bfc:	bne	61c14 <GetDataSlab+0x2dab8>
   61c00:	mov	r4, r0
   61c04:	orr	r0, r0, #1
   61c08:	cmp	r5, r0
   61c0c:	beq	61ae0 <GetDataSlab+0x2d984>
   61c10:	b	61c44 <GetDataSlab+0x2dae8>
   61c14:	ldr	r1, [sp, #68]	; 0x44
   61c18:	orr	r4, r0, #1
   61c1c:	mul	r1, r0, r1
   61c20:	add	r1, sl, r1, lsl #1
   61c24:	ldrh	r2, [r1]
   61c28:	ldr	r1, [sp, #88]	; 0x58
   61c2c:	strd	r2, [r1]
   61c30:	add	r1, r1, #8
   61c34:	str	r1, [sp, #88]	; 0x58
   61c38:	orr	r0, r0, #1
   61c3c:	cmp	r5, r0
   61c40:	beq	61ae0 <GetDataSlab+0x2d984>
   61c44:	ldr	r6, [sp, #48]	; 0x30
   61c48:	add	r2, r4, #1
   61c4c:	ldr	r7, [sp, #88]	; 0x58
   61c50:	sub	r1, r5, r4
   61c54:	mul	r0, r6, r4
   61c58:	mul	r4, r6, r2
   61c5c:	mov	r6, sl
   61c60:	add	r2, r6, r0
   61c64:	subs	r1, r1, #2
   61c68:	ldrh	r2, [r2]
   61c6c:	stm	r7, {r2, r3}
   61c70:	add	r2, r6, r4
   61c74:	add	r6, r6, r8
   61c78:	ldrh	r2, [r2]
   61c7c:	str	r3, [r7, #12]
   61c80:	str	r2, [r7, #8]
   61c84:	add	r7, r7, #16
   61c88:	bne	61c60 <GetDataSlab+0x2db04>
   61c8c:	str	r7, [sp, #88]	; 0x58
   61c90:	b	61ae0 <GetDataSlab+0x2d984>
   61c94:	cmp	r3, #1
   61c98:	blt	35058 <GetDataSlab+0xefc>
   61c9c:	cmp	r5, #1
   61ca0:	mov	r0, #0
   61ca4:	blt	5b6a4 <GetDataSlab+0x27548>
   61ca8:	ldr	r0, [sp, #60]	; 0x3c
   61cac:	ldr	r1, [sp, #56]	; 0x38
   61cb0:	cmp	r5, #1
   61cb4:	mla	r0, r1, r8, r0
   61cb8:	ldr	r1, [sp, #80]	; 0x50
   61cbc:	add	r0, r1, r0, lsl #2
   61cc0:	mov	r1, #1
   61cc4:	str	r0, [sp, #92]	; 0x5c
   61cc8:	sub	r0, r5, #2
   61ccc:	add	r1, r1, r0, lsr #1
   61cd0:	lsr	r0, r0, #1
   61cd4:	str	r0, [sp, #52]	; 0x34
   61cd8:	and	r2, r1, #1
   61cdc:	sub	r1, r1, r2
   61ce0:	str	r2, [sp, #60]	; 0x3c
   61ce4:	mov	r2, #0
   61ce8:	str	r1, [sp, #44]	; 0x2c
   61cec:	ldr	r1, [sp, #68]	; 0x44
   61cf0:	str	r2, [sp, #84]	; 0x54
   61cf4:	mov	r2, #0
   61cf8:	movwhi	r2, #1
   61cfc:	mov	r3, r1
   61d00:	sub	r1, r1, #1
   61d04:	clz	r1, r1
   61d08:	lsr	r1, r1, #5
   61d0c:	and	r1, r2, r1
   61d10:	str	r1, [sp, #80]	; 0x50
   61d14:	ldr	r1, [sp, #72]	; 0x48
   61d18:	mul	r1, r1, r8
   61d1c:	lsl	r8, r3, #4
   61d20:	lsl	r1, r1, #2
   61d24:	str	r1, [sp, #72]	; 0x48
   61d28:	lsl	r1, r3, #2
   61d2c:	lsl	r3, r3, #3
   61d30:	str	r1, [sp, #48]	; 0x30
   61d34:	and	r1, r5, #1
   61d38:	str	r1, [sp, #64]	; 0x40
   61d3c:	bic	r1, r5, #1
   61d40:	str	r1, [sp, #56]	; 0x38
   61d44:	ldr	r0, [sp, #80]	; 0x50
   61d48:	cmp	r0, #0
   61d4c:	bne	61d84 <GetDataSlab+0x2dc28>
   61d50:	b	61e60 <GetDataSlab+0x2dd04>
   61d54:	ldr	r0, [sp, #72]	; 0x48
   61d58:	ldr	r1, [sp, #76]	; 0x4c
   61d5c:	add	ip, ip, #1
   61d60:	str	ip, [sp, #84]	; 0x54
   61d64:	add	lr, lr, r0
   61d68:	mov	r0, #0
   61d6c:	cmp	ip, r1
   61d70:	str	lr, [sp, #92]	; 0x5c
   61d74:	beq	5b6a4 <GetDataSlab+0x27548>
   61d78:	ldr	r0, [sp, #80]	; 0x50
   61d7c:	cmp	r0, #0
   61d80:	beq	61e60 <GetDataSlab+0x2dd04>
   61d84:	ldr	r0, [sp, #52]	; 0x34
   61d88:	ldr	r1, [sp, #92]	; 0x5c
   61d8c:	add	r2, sp, #208	; 0xd0
   61d90:	cmp	r0, #0
   61d94:	mov	r0, #0
   61d98:	beq	61df8 <GetDataSlab+0x2dc9c>
   61d9c:	ldr	r9, [sp, #88]	; 0x58
   61da0:	ldr	sl, [sp, #44]	; 0x2c
   61da4:	mov	r7, #32
   61da8:	add	lr, sp, #216	; 0xd8
   61dac:	ldm	r1, {r4, r6}
   61db0:	str	r6, [sp, #212]	; 0xd4
   61db4:	add	r6, r1, r8
   61db8:	subs	sl, sl, #2
   61dbc:	add	r0, r0, #4
   61dc0:	str	r4, [sp, #208]	; 0xd0
   61dc4:	add	r4, r9, #16
   61dc8:	vld1.32	{d16}, [r2 :64]
   61dcc:	vmovl.s32	q8, d16
   61dd0:	vst1.64	{d16-d17}, [r9], r7
   61dd4:	ldr	ip, [r1, r3]!
   61dd8:	str	ip, [sp, #216]	; 0xd8
   61ddc:	ldr	r1, [r1, #4]
   61de0:	str	r1, [sp, #220]	; 0xdc
   61de4:	mov	r1, r6
   61de8:	vld1.32	{d16}, [lr :64]
   61dec:	vmovl.s32	q8, d16
   61df0:	vst1.64	{d16-d17}, [r4]
   61df4:	bne	61dac <GetDataSlab+0x2dc50>
   61df8:	ldr	r1, [sp, #60]	; 0x3c
   61dfc:	ldr	lr, [sp, #92]	; 0x5c
   61e00:	cmp	r1, #0
   61e04:	beq	61e3c <GetDataSlab+0x2dce0>
   61e08:	ldr	r1, [sp, #68]	; 0x44
   61e0c:	mov	r6, lr
   61e10:	mul	r1, r0, r1
   61e14:	ldr	r1, [r6, r1, lsl #2]!
   61e18:	str	r1, [sp, #200]	; 0xc8
   61e1c:	ldr	r1, [r6, #4]
   61e20:	str	r1, [sp, #204]	; 0xcc
   61e24:	add	r1, sp, #200	; 0xc8
   61e28:	vld1.32	{d16}, [r1 :64]
   61e2c:	ldr	r1, [sp, #88]	; 0x58
   61e30:	add	r0, r1, r0, lsl #3
   61e34:	vmovl.s32	q8, d16
   61e38:	vst1.64	{d16-d17}, [r0]
   61e3c:	ldr	r1, [sp, #56]	; 0x38
   61e40:	ldr	r0, [sp, #88]	; 0x58
   61e44:	ldr	ip, [sp, #84]	; 0x54
   61e48:	add	r0, r0, r1, lsl #3
   61e4c:	cmp	r5, r1
   61e50:	str	r0, [sp, #88]	; 0x58
   61e54:	mov	r0, r1
   61e58:	beq	61d54 <GetDataSlab+0x2dbf8>
   61e5c:	b	61e6c <GetDataSlab+0x2dd10>
   61e60:	ldr	ip, [sp, #84]	; 0x54
   61e64:	ldr	lr, [sp, #92]	; 0x5c
   61e68:	mov	r0, #0
   61e6c:	ldr	r1, [sp, #64]	; 0x40
   61e70:	cmp	r1, #0
   61e74:	bne	61e8c <GetDataSlab+0x2dd30>
   61e78:	mov	r4, r0
   61e7c:	orr	r0, r0, #1
   61e80:	cmp	r5, r0
   61e84:	beq	61d54 <GetDataSlab+0x2dbf8>
   61e88:	b	61ec0 <GetDataSlab+0x2dd64>
   61e8c:	ldr	r1, [sp, #68]	; 0x44
   61e90:	ldr	r2, [sp, #88]	; 0x58
   61e94:	mul	r1, r0, r1
   61e98:	ldr	r4, [lr, r1, lsl #2]
   61e9c:	asr	r1, r4, #31
   61ea0:	str	r4, [r2]
   61ea4:	orr	r4, r0, #1
   61ea8:	str	r1, [r2, #4]
   61eac:	add	r2, r2, #8
   61eb0:	str	r2, [sp, #88]	; 0x58
   61eb4:	orr	r0, r0, #1
   61eb8:	cmp	r5, r0
   61ebc:	beq	61d54 <GetDataSlab+0x2dbf8>
   61ec0:	ldr	r2, [sp, #48]	; 0x30
   61ec4:	add	r6, r4, #1
   61ec8:	sub	r1, r5, r4
   61ecc:	mul	r0, r2, r4
   61ed0:	mul	r6, r2, r6
   61ed4:	ldr	r2, [sp, #88]	; 0x58
   61ed8:	mov	r4, lr
   61edc:	ldr	r7, [r4, r0]
   61ee0:	subs	r1, r1, #2
   61ee4:	str	r7, [r2]
   61ee8:	asr	r7, r7, #31
   61eec:	str	r7, [r2, #4]
   61ef0:	ldr	r7, [r4, r6]
   61ef4:	add	r4, r4, r3
   61ef8:	str	r7, [r2, #8]
   61efc:	asr	r7, r7, #31
   61f00:	str	r7, [r2, #12]
   61f04:	add	r2, r2, #16
   61f08:	bne	61edc <GetDataSlab+0x2dd80>
   61f0c:	str	r2, [sp, #88]	; 0x58
   61f10:	b	61d54 <GetDataSlab+0x2dbf8>
   61f14:	cmp	r3, #1
   61f18:	blt	35058 <GetDataSlab+0xefc>
   61f1c:	cmp	r5, #1
   61f20:	mov	r0, #0
   61f24:	blt	5b6a4 <GetDataSlab+0x27548>
   61f28:	ldr	r0, [sp, #60]	; 0x3c
   61f2c:	ldr	r1, [sp, #56]	; 0x38
   61f30:	cmp	r5, #1
   61f34:	mla	r0, r1, r8, r0
   61f38:	ldr	r1, [sp, #80]	; 0x50
   61f3c:	add	r0, r1, r0, lsl #2
   61f40:	mov	r1, #1
   61f44:	str	r0, [sp, #92]	; 0x5c
   61f48:	sub	r0, r5, #2
   61f4c:	add	r1, r1, r0, lsr #1
   61f50:	lsr	r0, r0, #1
   61f54:	str	r0, [sp, #52]	; 0x34
   61f58:	mov	r0, #0
   61f5c:	and	r2, r1, #1
   61f60:	str	r0, [sp, #84]	; 0x54
   61f64:	sub	r1, r1, r2
   61f68:	str	r2, [sp, #60]	; 0x3c
   61f6c:	mov	r2, #0
   61f70:	movwhi	r2, #1
   61f74:	str	r1, [sp, #44]	; 0x2c
   61f78:	ldr	r1, [sp, #68]	; 0x44
   61f7c:	mov	r3, r1
   61f80:	sub	r1, r1, #1
   61f84:	clz	r1, r1
   61f88:	lsr	r1, r1, #5
   61f8c:	and	r1, r2, r1
   61f90:	str	r1, [sp, #80]	; 0x50
   61f94:	ldr	r1, [sp, #72]	; 0x48
   61f98:	mul	r1, r1, r8
   61f9c:	lsl	r8, r3, #3
   61fa0:	lsl	r1, r1, #2
   61fa4:	str	r1, [sp, #72]	; 0x48
   61fa8:	lsl	r1, r3, #2
   61fac:	str	r1, [sp, #48]	; 0x30
   61fb0:	lsl	r1, r3, #4
   61fb4:	str	r1, [sp, #40]	; 0x28
   61fb8:	and	r1, r5, #1
   61fbc:	ldr	r9, [sp, #40]	; 0x28
   61fc0:	str	r1, [sp, #64]	; 0x40
   61fc4:	bic	r1, r5, #1
   61fc8:	str	r1, [sp, #56]	; 0x38
   61fcc:	ldr	r0, [sp, #80]	; 0x50
   61fd0:	cmp	r0, #0
   61fd4:	bne	6200c <GetDataSlab+0x2deb0>
   61fd8:	b	620ec <GetDataSlab+0x2df90>
   61fdc:	ldr	r0, [sp, #72]	; 0x48
   61fe0:	ldr	r1, [sp, #76]	; 0x4c
   61fe4:	add	lr, lr, #1
   61fe8:	str	lr, [sp, #84]	; 0x54
   61fec:	add	ip, ip, r0
   61ff0:	mov	r0, #0
   61ff4:	cmp	lr, r1
   61ff8:	str	ip, [sp, #92]	; 0x5c
   61ffc:	beq	5b6a4 <GetDataSlab+0x27548>
   62000:	ldr	r0, [sp, #80]	; 0x50
   62004:	cmp	r0, #0
   62008:	beq	620ec <GetDataSlab+0x2df90>
   6200c:	ldr	r0, [sp, #52]	; 0x34
   62010:	ldr	r1, [sp, #92]	; 0x5c
   62014:	cmp	r0, #0
   62018:	mov	r0, #0
   6201c:	beq	62080 <GetDataSlab+0x2df24>
   62020:	ldr	sl, [sp, #88]	; 0x58
   62024:	ldr	r4, [sp, #44]	; 0x2c
   62028:	add	lr, sp, #232	; 0xe8
   6202c:	add	r3, sp, #240	; 0xf0
   62030:	ldm	r1, {r6, ip}
   62034:	str	ip, [sp, #236]	; 0xec
   62038:	mov	r2, #32
   6203c:	subs	r4, r4, #2
   62040:	add	r0, r0, #4
   62044:	str	r6, [sp, #232]	; 0xe8
   62048:	add	r6, sl, #16
   6204c:	vld1.32	{d16}, [lr :64]
   62050:	vmovl.u32	q8, d16
   62054:	vst1.64	{d16-d17}, [sl], r2
   62058:	add	r2, r1, r9
   6205c:	ldr	r7, [r1, r8]!
   62060:	str	r7, [sp, #240]	; 0xf0
   62064:	ldr	r1, [r1, #4]
   62068:	str	r1, [sp, #244]	; 0xf4
   6206c:	mov	r1, r2
   62070:	vld1.32	{d16}, [r3 :64]
   62074:	vmovl.u32	q8, d16
   62078:	vst1.64	{d16-d17}, [r6]
   6207c:	bne	62030 <GetDataSlab+0x2ded4>
   62080:	ldr	r1, [sp, #60]	; 0x3c
   62084:	ldr	ip, [sp, #92]	; 0x5c
   62088:	cmp	r1, #0
   6208c:	beq	620c4 <GetDataSlab+0x2df68>
   62090:	ldr	r1, [sp, #68]	; 0x44
   62094:	mov	r2, ip
   62098:	mul	r1, r0, r1
   6209c:	ldr	r1, [r2, r1, lsl #2]!
   620a0:	str	r1, [sp, #224]	; 0xe0
   620a4:	ldr	r1, [r2, #4]
   620a8:	str	r1, [sp, #228]	; 0xe4
   620ac:	add	r1, sp, #224	; 0xe0
   620b0:	vld1.32	{d16}, [r1 :64]
   620b4:	ldr	r1, [sp, #88]	; 0x58
   620b8:	add	r0, r1, r0, lsl #3
   620bc:	vmovl.u32	q8, d16
   620c0:	vst1.64	{d16-d17}, [r0]
   620c4:	ldr	r1, [sp, #56]	; 0x38
   620c8:	ldr	r0, [sp, #88]	; 0x58
   620cc:	ldr	lr, [sp, #84]	; 0x54
   620d0:	mov	r3, #0
   620d4:	add	r0, r0, r1, lsl #3
   620d8:	cmp	r5, r1
   620dc:	str	r0, [sp, #88]	; 0x58
   620e0:	mov	r0, r1
   620e4:	beq	61fdc <GetDataSlab+0x2de80>
   620e8:	b	620fc <GetDataSlab+0x2dfa0>
   620ec:	ldr	ip, [sp, #92]	; 0x5c
   620f0:	ldr	lr, [sp, #84]	; 0x54
   620f4:	mov	r0, #0
   620f8:	mov	r3, #0
   620fc:	ldr	r1, [sp, #64]	; 0x40
   62100:	cmp	r1, #0
   62104:	bne	6211c <GetDataSlab+0x2dfc0>
   62108:	mov	r4, r0
   6210c:	orr	r0, r0, #1
   62110:	cmp	r5, r0
   62114:	beq	61fdc <GetDataSlab+0x2de80>
   62118:	b	62148 <GetDataSlab+0x2dfec>
   6211c:	ldr	r1, [sp, #68]	; 0x44
   62120:	orr	r4, r0, #1
   62124:	mul	r1, r0, r1
   62128:	ldr	r2, [ip, r1, lsl #2]
   6212c:	ldr	r1, [sp, #88]	; 0x58
   62130:	strd	r2, [r1]
   62134:	add	r1, r1, #8
   62138:	str	r1, [sp, #88]	; 0x58
   6213c:	orr	r0, r0, #1
   62140:	cmp	r5, r0
   62144:	beq	61fdc <GetDataSlab+0x2de80>
   62148:	ldr	r6, [sp, #48]	; 0x30
   6214c:	add	r2, r4, #1
   62150:	ldr	r7, [sp, #88]	; 0x58
   62154:	sub	r1, r5, r4
   62158:	mul	r0, r6, r4
   6215c:	mul	r4, r6, r2
   62160:	mov	r6, ip
   62164:	ldr	r2, [r6, r0]
   62168:	subs	r1, r1, #2
   6216c:	stm	r7, {r2, r3}
   62170:	ldr	r2, [r6, r4]
   62174:	str	r3, [r7, #12]
   62178:	add	r6, r6, r8
   6217c:	str	r2, [r7, #8]
   62180:	add	r7, r7, #16
   62184:	bne	62164 <GetDataSlab+0x2e008>
   62188:	str	r7, [sp, #88]	; 0x58
   6218c:	b	61fdc <GetDataSlab+0x2de80>
   62190:	cmp	r3, #1
   62194:	blt	35058 <GetDataSlab+0xefc>
   62198:	cmp	r5, #1
   6219c:	mov	r0, #0
   621a0:	blt	5b6a4 <GetDataSlab+0x27548>
   621a4:	ldr	r0, [sp, #60]	; 0x3c
   621a8:	ldr	r1, [sp, #56]	; 0x38
   621ac:	mla	r0, r1, r8, r0
   621b0:	ldr	r1, [sp, #80]	; 0x50
   621b4:	add	r0, r1, r0, lsl #2
   621b8:	str	r0, [sp, #92]	; 0x5c
   621bc:	and	r0, r5, #1
   621c0:	str	r0, [sp, #80]	; 0x50
   621c4:	sub	r7, r5, r0
   621c8:	ldr	r0, [sp, #72]	; 0x48
   621cc:	mul	r0, r0, r8
   621d0:	lsl	r0, r0, #2
   621d4:	str	r0, [sp, #72]	; 0x48
   621d8:	ldr	r0, [sp, #68]	; 0x44
   621dc:	lsl	r6, r0, #3
   621e0:	lsl	r4, r0, #2
   621e4:	mov	r0, #0
   621e8:	str	r0, [sp, #84]	; 0x54
   621ec:	mov	r9, #0
   621f0:	cmp	r5, #1
   621f4:	beq	62268 <GetDataSlab+0x2e10c>
   621f8:	b	62230 <GetDataSlab+0x2e0d4>
   621fc:	ldr	r2, [sp, #84]	; 0x54
   62200:	ldr	r0, [sp, #72]	; 0x48
   62204:	ldr	r1, [sp, #76]	; 0x4c
   62208:	add	r2, r2, #1
   6220c:	add	r8, r8, r0
   62210:	mov	r0, #0
   62214:	cmp	r2, r1
   62218:	str	r8, [sp, #92]	; 0x5c
   6221c:	str	r2, [sp, #84]	; 0x54
   62220:	beq	5b6a4 <GetDataSlab+0x27548>
   62224:	mov	r9, #0
   62228:	cmp	r5, #1
   6222c:	beq	62268 <GetDataSlab+0x2e10c>
   62230:	ldr	sl, [sp, #92]	; 0x5c
   62234:	ldr	r8, [sp, #88]	; 0x58
   62238:	ldr	r0, [sl]
   6223c:	bl	717f0 <__aeabi_f2lz>
   62240:	strd	r0, [r8]
   62244:	ldr	r0, [sl, r4]
   62248:	bl	717f0 <__aeabi_f2lz>
   6224c:	add	r9, r9, #2
   62250:	strd	r0, [r8, #8]
   62254:	add	sl, sl, r6
   62258:	add	r8, r8, #16
   6225c:	cmp	r7, r9
   62260:	bne	62238 <GetDataSlab+0x2e0dc>
   62264:	str	r8, [sp, #88]	; 0x58
   62268:	ldr	r0, [sp, #80]	; 0x50
   6226c:	ldr	r8, [sp, #92]	; 0x5c
   62270:	cmp	r0, #0
   62274:	beq	621fc <GetDataSlab+0x2e0a0>
   62278:	ldr	r0, [sp, #68]	; 0x44
   6227c:	mul	r0, r9, r0
   62280:	ldr	r0, [r8, r0, lsl #2]
   62284:	bl	717f0 <__aeabi_f2lz>
   62288:	ldr	r2, [sp, #88]	; 0x58
   6228c:	strd	r0, [r2]
   62290:	add	r2, r2, #8
   62294:	str	r2, [sp, #88]	; 0x58
   62298:	b	621fc <GetDataSlab+0x2e0a0>
   6229c:	cmp	r3, #1
   622a0:	blt	35058 <GetDataSlab+0xefc>
   622a4:	cmp	r5, #1
   622a8:	mov	r0, #0
   622ac:	blt	5b6a4 <GetDataSlab+0x27548>
   622b0:	ldr	r0, [sp, #60]	; 0x3c
   622b4:	ldr	r1, [sp, #56]	; 0x38
   622b8:	mla	r0, r1, r8, r0
   622bc:	ldr	r1, [sp, #80]	; 0x50
   622c0:	add	r0, r1, r0, lsl #3
   622c4:	str	r0, [sp, #92]	; 0x5c
   622c8:	and	r0, r5, #1
   622cc:	str	r0, [sp, #80]	; 0x50
   622d0:	sub	r7, r5, r0
   622d4:	ldr	r0, [sp, #72]	; 0x48
   622d8:	mul	r0, r0, r8
   622dc:	lsl	r0, r0, #3
   622e0:	str	r0, [sp, #72]	; 0x48
   622e4:	ldr	r0, [sp, #68]	; 0x44
   622e8:	lsl	r6, r0, #4
   622ec:	lsl	r4, r0, #3
   622f0:	mov	r0, #0
   622f4:	str	r0, [sp, #84]	; 0x54
   622f8:	mov	r9, #0
   622fc:	cmp	r5, #1
   62300:	beq	62380 <GetDataSlab+0x2e224>
   62304:	b	6233c <GetDataSlab+0x2e1e0>
   62308:	ldr	r2, [sp, #84]	; 0x54
   6230c:	ldr	r0, [sp, #72]	; 0x48
   62310:	ldr	r1, [sp, #76]	; 0x4c
   62314:	add	r2, r2, #1
   62318:	add	r8, r8, r0
   6231c:	mov	r0, #0
   62320:	cmp	r2, r1
   62324:	str	r8, [sp, #92]	; 0x5c
   62328:	str	r2, [sp, #84]	; 0x54
   6232c:	beq	5b6a4 <GetDataSlab+0x27548>
   62330:	mov	r9, #0
   62334:	cmp	r5, #1
   62338:	beq	62380 <GetDataSlab+0x2e224>
   6233c:	ldr	sl, [sp, #92]	; 0x5c
   62340:	ldr	r8, [sp, #88]	; 0x58
   62344:	vldr	d16, [sl]
   62348:	vmov	r0, r1, d16
   6234c:	bl	7181c <__aeabi_d2lz>
   62350:	strd	r0, [r8]
   62354:	add	r0, sl, r4
   62358:	vldr	d16, [r0]
   6235c:	vmov	r0, r1, d16
   62360:	bl	7181c <__aeabi_d2lz>
   62364:	add	r9, r9, #2
   62368:	strd	r0, [r8, #8]
   6236c:	add	sl, sl, r6
   62370:	add	r8, r8, #16
   62374:	cmp	r7, r9
   62378:	bne	62344 <GetDataSlab+0x2e1e8>
   6237c:	str	r8, [sp, #88]	; 0x58
   62380:	ldr	r0, [sp, #80]	; 0x50
   62384:	ldr	r8, [sp, #92]	; 0x5c
   62388:	cmp	r0, #0
   6238c:	beq	62308 <GetDataSlab+0x2e1ac>
   62390:	ldr	r0, [sp, #68]	; 0x44
   62394:	mul	r0, r9, r0
   62398:	add	r0, r8, r0, lsl #3
   6239c:	vldr	d16, [r0]
   623a0:	vmov	r0, r1, d16
   623a4:	bl	7181c <__aeabi_d2lz>
   623a8:	ldr	r2, [sp, #88]	; 0x58
   623ac:	strd	r0, [r2]
   623b0:	add	r2, r2, #8
   623b4:	str	r2, [sp, #88]	; 0x58
   623b8:	b	62308 <GetDataSlab+0x2e1ac>
   623bc:	cmp	r3, #1
   623c0:	blt	35058 <GetDataSlab+0xefc>
   623c4:	cmp	r5, #1
   623c8:	mov	r0, #0
   623cc:	blt	5b6a4 <GetDataSlab+0x27548>
   623d0:	ldr	r0, [sp, #60]	; 0x3c
   623d4:	ldr	r1, [sp, #56]	; 0x38
   623d8:	lsl	r2, r5, #3
   623dc:	mov	r7, r8
   623e0:	mov	r3, #1
   623e4:	cmp	r5, #1
   623e8:	mov	r6, #0
   623ec:	mla	r1, r1, r8, r0
   623f0:	ldr	r0, [sp, #80]	; 0x50
   623f4:	add	r8, r0, r1, lsl #3
   623f8:	add	r0, r2, r1, lsl #3
   623fc:	sub	r2, r5, #2
   62400:	add	r3, r3, r2, lsr #1
   62404:	str	r0, [sp, #52]	; 0x34
   62408:	and	r0, r3, #1
   6240c:	str	r0, [sp, #36]	; 0x24
   62410:	sub	r0, r3, r0
   62414:	mov	r3, #0
   62418:	movwhi	r3, #1
   6241c:	str	r0, [sp, #20]
   62420:	lsl	r0, r1, #3
   62424:	str	r0, [sp, #40]	; 0x28
   62428:	ldr	r0, [sp, #68]	; 0x44
   6242c:	sub	r1, r0, #1
   62430:	lsl	sl, r0, #5
   62434:	lsl	ip, r0, #4
   62438:	clz	r1, r1
   6243c:	lsr	r1, r1, #5
   62440:	and	r4, r3, r1
   62444:	ldr	r1, [sp, #72]	; 0x48
   62448:	str	r4, [sp, #24]
   6244c:	mul	r1, r1, r7
   62450:	lsl	lr, r1, #3
   62454:	lsl	r1, r0, #3
   62458:	and	r0, r5, #1
   6245c:	str	r0, [sp, #92]	; 0x5c
   62460:	bic	r0, r5, #1
   62464:	str	r1, [sp, #44]	; 0x2c
   62468:	str	lr, [sp, #48]	; 0x30
   6246c:	str	r0, [sp, #32]
   62470:	lsr	r0, r2, #1
   62474:	str	r0, [sp, #28]
   62478:	cmp	r4, #0
   6247c:	bne	624a0 <GetDataSlab+0x2e344>
   62480:	b	62520 <GetDataSlab+0x2e3c4>
   62484:	ldr	r0, [sp, #76]	; 0x4c
   62488:	add	r6, r6, #1
   6248c:	add	r8, r8, lr
   62490:	cmp	r6, r0
   62494:	beq	64550 <GetDataSlab+0x303f4>
   62498:	cmp	r4, #0
   6249c:	beq	62520 <GetDataSlab+0x2e3c4>
   624a0:	ldr	r0, [sp, #52]	; 0x34
   624a4:	mul	r1, lr, r6
   624a8:	ldr	r3, [sp, #80]	; 0x50
   624ac:	add	r2, r0, r1
   624b0:	ldr	r0, [sp, #88]	; 0x58
   624b4:	add	r2, r3, r2
   624b8:	cmp	r2, r0
   624bc:	bls	625a8 <GetDataSlab+0x2e44c>
   624c0:	add	r2, r0, r5, lsl #3
   624c4:	ldr	r0, [sp, #40]	; 0x28
   624c8:	add	r1, r0, r1
   624cc:	add	r1, r3, r1
   624d0:	cmp	r1, r2
   624d4:	bcs	625a8 <GetDataSlab+0x2e44c>
   624d8:	mov	r2, #0
   624dc:	ldr	r0, [sp, #92]	; 0x5c
   624e0:	cmp	r0, #0
   624e4:	beq	62530 <GetDataSlab+0x2e3d4>
   624e8:	ldr	r0, [sp, #68]	; 0x44
   624ec:	mov	r1, r8
   624f0:	ldr	r3, [sp, #88]	; 0x58
   624f4:	mul	r0, r2, r0
   624f8:	ldr	r0, [r1, r0, lsl #3]!
   624fc:	ldr	r1, [r1, #4]
   62500:	strd	r0, [r3]
   62504:	orr	r1, r2, #1
   62508:	add	r3, r3, #8
   6250c:	str	r3, [sp, #88]	; 0x58
   62510:	orr	r0, r2, #1
   62514:	cmp	r5, r0
   62518:	bne	62540 <GetDataSlab+0x2e3e4>
   6251c:	b	62484 <GetDataSlab+0x2e328>
   62520:	mov	r2, #0
   62524:	ldr	r0, [sp, #92]	; 0x5c
   62528:	cmp	r0, #0
   6252c:	bne	624e8 <GetDataSlab+0x2e38c>
   62530:	mov	r1, r2
   62534:	orr	r0, r2, #1
   62538:	cmp	r5, r0
   6253c:	beq	62484 <GetDataSlab+0x2e328>
   62540:	ldr	r3, [sp, #44]	; 0x2c
   62544:	add	r0, r1, #1
   62548:	ldr	r7, [sp, #88]	; 0x58
   6254c:	mov	lr, r4
   62550:	sub	r4, r5, r1
   62554:	mul	r2, r3, r1
   62558:	mul	r9, r3, r0
   6255c:	mov	r1, r8
   62560:	mov	r0, r1
   62564:	subs	r4, r4, #2
   62568:	ldr	r3, [r0, r2]!
   6256c:	ldr	r0, [r0, #4]
   62570:	str	r3, [r7]
   62574:	str	r0, [r7, #4]
   62578:	add	r0, r1, ip
   6257c:	ldr	r3, [r1, r9]!
   62580:	ldr	r1, [r1, #4]
   62584:	str	r3, [r7, #8]
   62588:	str	r1, [r7, #12]
   6258c:	add	r7, r7, #16
   62590:	mov	r1, r0
   62594:	bne	62560 <GetDataSlab+0x2e404>
   62598:	mov	r4, lr
   6259c:	ldr	lr, [sp, #48]	; 0x30
   625a0:	str	r7, [sp, #88]	; 0x58
   625a4:	b	62484 <GetDataSlab+0x2e328>
   625a8:	ldr	r0, [sp, #28]
   625ac:	mov	r2, #0
   625b0:	cmp	r0, #0
   625b4:	beq	625ec <GetDataSlab+0x2e490>
   625b8:	ldr	r3, [sp, #88]	; 0x58
   625bc:	ldr	r1, [sp, #20]
   625c0:	mov	r4, r8
   625c4:	mov	r9, #32
   625c8:	add	r7, r4, ip
   625cc:	vld1.64	{d16-d17}, [r4], sl
   625d0:	add	r0, r3, #16
   625d4:	subs	r1, r1, #2
   625d8:	add	r2, r2, #4
   625dc:	vst1.64	{d16-d17}, [r3], r9
   625e0:	vld1.64	{d16-d17}, [r7]
   625e4:	vst1.64	{d16-d17}, [r0]
   625e8:	bne	625c8 <GetDataSlab+0x2e46c>
   625ec:	ldr	r0, [sp, #36]	; 0x24
   625f0:	cmp	r0, #0
   625f4:	beq	62614 <GetDataSlab+0x2e4b8>
   625f8:	ldr	r0, [sp, #68]	; 0x44
   625fc:	mul	r0, r2, r0
   62600:	add	r0, r8, r0, lsl #3
   62604:	vld1.64	{d16-d17}, [r0]
   62608:	ldr	r0, [sp, #88]	; 0x58
   6260c:	add	r0, r0, r2, lsl #3
   62610:	vst1.64	{d16-d17}, [r0]
   62614:	ldr	r2, [sp, #32]
   62618:	ldr	r0, [sp, #88]	; 0x58
   6261c:	ldr	r4, [sp, #24]
   62620:	add	r0, r0, r2, lsl #3
   62624:	cmp	r5, r2
   62628:	str	r0, [sp, #88]	; 0x58
   6262c:	bne	62524 <GetDataSlab+0x2e3c8>
   62630:	b	62484 <GetDataSlab+0x2e328>
   62634:	cmp	r3, #1
   62638:	blt	35058 <GetDataSlab+0xefc>
   6263c:	cmp	r5, #1
   62640:	mov	r0, #0
   62644:	blt	5b6a4 <GetDataSlab+0x27548>
   62648:	ldr	r0, [sp, #72]	; 0x48
   6264c:	ldr	r3, [sp, #60]	; 0x3c
   62650:	ldr	r7, [sp, #56]	; 0x38
   62654:	cmp	r5, #1
   62658:	mov	r2, r8
   6265c:	mov	r2, #0
   62660:	mov	r9, #0
   62664:	movwhi	r2, #1
   62668:	mul	r0, r0, r8
   6266c:	mla	r1, r7, r8, r3
   62670:	str	r0, [sp, #72]	; 0x48
   62674:	ldr	r0, [sp, #80]	; 0x50
   62678:	str	r1, [sp, #52]	; 0x34
   6267c:	add	r0, r0, r1
   62680:	mov	r1, #1
   62684:	str	r0, [sp, #92]	; 0x5c
   62688:	sub	r0, r5, #2
   6268c:	add	r1, r1, r0, lsr #1
   62690:	lsr	r0, r0, #1
   62694:	str	r0, [sp, #40]	; 0x28
   62698:	mov	r0, #0
   6269c:	and	r6, r1, #1
   626a0:	str	r0, [sp, #84]	; 0x54
   626a4:	sub	r1, r1, r6
   626a8:	str	r6, [sp, #48]	; 0x30
   626ac:	str	r1, [sp, #36]	; 0x24
   626b0:	add	r1, r5, r3
   626b4:	mla	r1, r7, r8, r1
   626b8:	str	r1, [sp, #56]	; 0x38
   626bc:	ldr	r1, [sp, #68]	; 0x44
   626c0:	mov	r3, r1
   626c4:	sub	r1, r1, #1
   626c8:	clz	r1, r1
   626cc:	lsr	r1, r1, #5
   626d0:	and	r1, r2, r1
   626d4:	lsl	r2, r3, #1
   626d8:	str	r1, [sp, #64]	; 0x40
   626dc:	lsl	r1, r3, #2
   626e0:	str	r1, [sp, #32]
   626e4:	and	r1, r5, #1
   626e8:	str	r1, [sp, #60]	; 0x3c
   626ec:	bic	r1, r5, #1
   626f0:	str	r1, [sp, #44]	; 0x2c
   626f4:	ldr	r0, [sp, #64]	; 0x40
   626f8:	cmp	r0, #0
   626fc:	bne	62730 <GetDataSlab+0x2e5d4>
   62700:	b	627b8 <GetDataSlab+0x2e65c>
   62704:	ldr	r0, [sp, #72]	; 0x48
   62708:	add	ip, ip, #1
   6270c:	cmp	ip, lr
   62710:	str	ip, [sp, #84]	; 0x54
   62714:	add	r8, r8, r0
   62718:	mov	r0, #0
   6271c:	str	r8, [sp, #92]	; 0x5c
   62720:	beq	5b6a4 <GetDataSlab+0x27548>
   62724:	ldr	r0, [sp, #64]	; 0x40
   62728:	cmp	r0, #0
   6272c:	beq	627b8 <GetDataSlab+0x2e65c>
   62730:	ldr	r0, [sp, #72]	; 0x48
   62734:	ldr	ip, [sp, #84]	; 0x54
   62738:	ldr	r1, [sp, #56]	; 0x38
   6273c:	ldr	r7, [sp, #80]	; 0x50
   62740:	ldr	r3, [sp, #88]	; 0x58
   62744:	ldr	lr, [sp, #76]	; 0x4c
   62748:	ldr	r8, [sp, #92]	; 0x5c
   6274c:	mul	r0, r0, ip
   62750:	add	r1, r1, r0
   62754:	add	r1, r7, r1
   62758:	cmp	r1, r3
   6275c:	bls	6282c <GetDataSlab+0x2e6d0>
   62760:	add	r1, r3, r5, lsl #3
   62764:	ldr	r3, [sp, #52]	; 0x34
   62768:	add	r0, r3, r0
   6276c:	add	r0, r7, r0
   62770:	cmp	r0, r1
   62774:	bcs	6282c <GetDataSlab+0x2e6d0>
   62778:	mov	r0, #0
   6277c:	ldr	r1, [sp, #60]	; 0x3c
   62780:	cmp	r1, #0
   62784:	beq	627d4 <GetDataSlab+0x2e678>
   62788:	ldr	r1, [sp, #68]	; 0x44
   6278c:	orr	r3, r0, #1
   62790:	mul	r1, r0, r1
   62794:	ldrb	r4, [r8, r1]
   62798:	ldr	r1, [sp, #88]	; 0x58
   6279c:	stm	r1, {r4, r9}
   627a0:	add	r1, r1, #8
   627a4:	str	r1, [sp, #88]	; 0x58
   627a8:	orr	r0, r0, #1
   627ac:	cmp	r5, r0
   627b0:	bne	627e4 <GetDataSlab+0x2e688>
   627b4:	b	62704 <GetDataSlab+0x2e5a8>
   627b8:	ldr	lr, [sp, #76]	; 0x4c
   627bc:	ldr	r8, [sp, #92]	; 0x5c
   627c0:	ldr	ip, [sp, #84]	; 0x54
   627c4:	mov	r0, #0
   627c8:	ldr	r1, [sp, #60]	; 0x3c
   627cc:	cmp	r1, #0
   627d0:	bne	62788 <GetDataSlab+0x2e62c>
   627d4:	mov	r3, r0
   627d8:	orr	r0, r0, #1
   627dc:	cmp	r5, r0
   627e0:	beq	62704 <GetDataSlab+0x2e5a8>
   627e4:	ldr	r4, [sp, #68]	; 0x44
   627e8:	sub	r1, r5, r3
   627ec:	mov	r6, r8
   627f0:	mul	r0, r4, r3
   627f4:	add	r3, r3, #1
   627f8:	mul	r3, r4, r3
   627fc:	ldr	r4, [sp, #88]	; 0x58
   62800:	ldrb	r7, [r6, r0]
   62804:	subs	r1, r1, #2
   62808:	stm	r4, {r7, r9}
   6280c:	ldrb	r7, [r6, r3]
   62810:	str	r9, [r4, #12]
   62814:	add	r6, r6, r2
   62818:	str	r7, [r4, #8]
   6281c:	add	r4, r4, #16
   62820:	bne	62800 <GetDataSlab+0x2e6a4>
   62824:	str	r4, [sp, #88]	; 0x58
   62828:	b	62704 <GetDataSlab+0x2e5a8>
   6282c:	ldr	r0, [sp, #40]	; 0x28
   62830:	cmp	r0, #0
   62834:	beq	628b0 <GetDataSlab+0x2e754>
   62838:	mov	r3, r8
   6283c:	ldr	r6, [sp, #88]	; 0x58
   62840:	ldr	r1, [sp, #36]	; 0x24
   62844:	ldr	r8, [sp, #32]
   62848:	mov	r0, #0
   6284c:	add	ip, sp, #272	; 0x110
   62850:	add	sl, sp, #388	; 0x184
   62854:	ldrh	lr, [r3]
   62858:	add	r7, sp, #384	; 0x180
   6285c:	mov	r4, #32
   62860:	subs	r1, r1, #2
   62864:	add	r0, r0, #4
   62868:	strh	lr, [ip, #112]	; 0x70
   6286c:	vld1.16	{d16[0]}, [r7 :16]
   62870:	add	r7, r6, #16
   62874:	vmovl.u8	q8, d16
   62878:	vmovl.u16	q8, d16
   6287c:	vmovl.u32	q8, d16
   62880:	vst1.64	{d16-d17}, [r6], r4
   62884:	add	r4, r3, r2
   62888:	add	r3, r3, r8
   6288c:	ldrh	r4, [r4]
   62890:	strh	r4, [ip, #116]	; 0x74
   62894:	vld1.16	{d16[0]}, [sl :16]
   62898:	vmovl.u8	q8, d16
   6289c:	vmovl.u16	q8, d16
   628a0:	vmovl.u32	q8, d16
   628a4:	vst1.64	{d16-d17}, [r7]
   628a8:	bne	62854 <GetDataSlab+0x2e6f8>
   628ac:	b	628b8 <GetDataSlab+0x2e75c>
   628b0:	mov	r0, #0
   628b4:	add	ip, sp, #272	; 0x110
   628b8:	ldr	r1, [sp, #48]	; 0x30
   628bc:	ldr	r8, [sp, #92]	; 0x5c
   628c0:	cmp	r1, #0
   628c4:	beq	628f8 <GetDataSlab+0x2e79c>
   628c8:	ldr	r1, [sp, #68]	; 0x44
   628cc:	mla	r1, r0, r1, r8
   628d0:	ldrh	r1, [r1]
   628d4:	strh	r1, [ip, #108]	; 0x6c
   628d8:	add	r1, sp, #380	; 0x17c
   628dc:	vld1.16	{d16[0]}, [r1 :16]
   628e0:	ldr	r1, [sp, #88]	; 0x58
   628e4:	add	r0, r1, r0, lsl #3
   628e8:	vmovl.u8	q8, d16
   628ec:	vmovl.u16	q8, d16
   628f0:	vmovl.u32	q8, d16
   628f4:	vst1.64	{d16-d17}, [r0]
   628f8:	ldr	r1, [sp, #44]	; 0x2c
   628fc:	ldr	r0, [sp, #88]	; 0x58
   62900:	ldr	lr, [sp, #76]	; 0x4c
   62904:	ldr	ip, [sp, #84]	; 0x54
   62908:	add	r0, r0, r1, lsl #3
   6290c:	cmp	r5, r1
   62910:	str	r0, [sp, #88]	; 0x58
   62914:	mov	r0, r1
   62918:	bne	627c8 <GetDataSlab+0x2e66c>
   6291c:	b	62704 <GetDataSlab+0x2e5a8>
   62920:	cmp	r3, #1
   62924:	blt	35058 <GetDataSlab+0xefc>
   62928:	cmp	r5, #1
   6292c:	mov	r0, #0
   62930:	blt	5b6a4 <GetDataSlab+0x27548>
   62934:	ldr	r0, [sp, #60]	; 0x3c
   62938:	ldr	r1, [sp, #56]	; 0x38
   6293c:	cmp	r5, #1
   62940:	mla	r0, r1, r8, r0
   62944:	ldr	r1, [sp, #80]	; 0x50
   62948:	add	r9, r1, r0, lsl #1
   6294c:	sub	r0, r5, #2
   62950:	mov	r1, #1
   62954:	add	r1, r1, r0, lsr #1
   62958:	lsr	r0, r0, #1
   6295c:	str	r0, [sp, #56]	; 0x38
   62960:	and	r2, r1, #1
   62964:	sub	r1, r1, r2
   62968:	str	r2, [sp, #60]	; 0x3c
   6296c:	mov	r2, #0
   62970:	str	r1, [sp, #48]	; 0x30
   62974:	ldr	r1, [sp, #68]	; 0x44
   62978:	str	r2, [sp, #92]	; 0x5c
   6297c:	mov	r2, #0
   62980:	movwhi	r2, #1
   62984:	mov	r3, r1
   62988:	sub	r1, r1, #1
   6298c:	clz	r1, r1
   62990:	lsr	r1, r1, #5
   62994:	and	r1, r2, r1
   62998:	str	r1, [sp, #84]	; 0x54
   6299c:	ldr	r1, [sp, #72]	; 0x48
   629a0:	mul	r1, r1, r8
   629a4:	lsl	r8, r3, #3
   629a8:	lsl	r1, r1, #1
   629ac:	str	r1, [sp, #80]	; 0x50
   629b0:	lsl	r1, r3, #1
   629b4:	lsl	r3, r3, #2
   629b8:	str	r1, [sp, #52]	; 0x34
   629bc:	and	r1, r5, #1
   629c0:	str	r1, [sp, #72]	; 0x48
   629c4:	bic	r1, r5, #1
   629c8:	str	r1, [sp, #64]	; 0x40
   629cc:	ldr	r0, [sp, #84]	; 0x54
   629d0:	cmp	r0, #0
   629d4:	bne	62a04 <GetDataSlab+0x2e8a8>
   629d8:	b	62ad0 <GetDataSlab+0x2e974>
   629dc:	ldr	r0, [sp, #80]	; 0x50
   629e0:	add	ip, ip, #1
   629e4:	cmp	ip, lr
   629e8:	str	ip, [sp, #92]	; 0x5c
   629ec:	add	r9, r9, r0
   629f0:	mov	r0, #0
   629f4:	beq	5b6a4 <GetDataSlab+0x27548>
   629f8:	ldr	r0, [sp, #84]	; 0x54
   629fc:	cmp	r0, #0
   62a00:	beq	62ad0 <GetDataSlab+0x2e974>
   62a04:	ldr	r0, [sp, #56]	; 0x38
   62a08:	add	r2, sp, #348	; 0x15c
   62a0c:	mov	r7, #32
   62a10:	cmp	r0, #0
   62a14:	mov	r0, #0
   62a18:	beq	62a70 <GetDataSlab+0x2e914>
   62a1c:	ldr	sl, [sp, #88]	; 0x58
   62a20:	ldr	r4, [sp, #48]	; 0x30
   62a24:	mov	r1, r9
   62a28:	add	ip, sp, #352	; 0x160
   62a2c:	ldr	r6, [r1]
   62a30:	subs	r4, r4, #2
   62a34:	add	r0, r0, #4
   62a38:	str	r6, [sp, #348]	; 0x15c
   62a3c:	add	r6, sl, #16
   62a40:	vld1.32	{d16[0]}, [r2 :32]
   62a44:	vmovl.s16	q8, d16
   62a48:	vmovl.s32	q8, d16
   62a4c:	vst1.64	{d16-d17}, [sl], r7
   62a50:	ldr	lr, [r1, r3]
   62a54:	add	r1, r1, r8
   62a58:	str	lr, [sp, #352]	; 0x160
   62a5c:	vld1.32	{d16[0]}, [ip :32]
   62a60:	vmovl.s16	q8, d16
   62a64:	vmovl.s32	q8, d16
   62a68:	vst1.64	{d16-d17}, [r6]
   62a6c:	bne	62a2c <GetDataSlab+0x2e8d0>
   62a70:	ldr	r1, [sp, #60]	; 0x3c
   62a74:	cmp	r1, #0
   62a78:	beq	62aa8 <GetDataSlab+0x2e94c>
   62a7c:	ldr	r1, [sp, #68]	; 0x44
   62a80:	mul	r1, r0, r1
   62a84:	ldr	r1, [r9, r1, lsl #1]
   62a88:	str	r1, [sp, #344]	; 0x158
   62a8c:	add	r1, sp, #344	; 0x158
   62a90:	vld1.32	{d16[0]}, [r1 :32]
   62a94:	ldr	r1, [sp, #88]	; 0x58
   62a98:	add	r0, r1, r0, lsl #3
   62a9c:	vmovl.s16	q8, d16
   62aa0:	vmovl.s32	q8, d16
   62aa4:	vst1.64	{d16-d17}, [r0]
   62aa8:	ldr	r1, [sp, #64]	; 0x40
   62aac:	ldr	r0, [sp, #88]	; 0x58
   62ab0:	ldr	lr, [sp, #76]	; 0x4c
   62ab4:	ldr	ip, [sp, #92]	; 0x5c
   62ab8:	add	r0, r0, r1, lsl #3
   62abc:	cmp	r5, r1
   62ac0:	str	r0, [sp, #88]	; 0x58
   62ac4:	mov	r0, r1
   62ac8:	beq	629dc <GetDataSlab+0x2e880>
   62acc:	b	62adc <GetDataSlab+0x2e980>
   62ad0:	ldr	lr, [sp, #76]	; 0x4c
   62ad4:	ldr	ip, [sp, #92]	; 0x5c
   62ad8:	mov	r0, #0
   62adc:	ldr	r1, [sp, #72]	; 0x48
   62ae0:	cmp	r1, #0
   62ae4:	bne	62afc <GetDataSlab+0x2e9a0>
   62ae8:	mov	r4, r0
   62aec:	orr	r0, r0, #1
   62af0:	cmp	r5, r0
   62af4:	beq	629dc <GetDataSlab+0x2e880>
   62af8:	b	62b34 <GetDataSlab+0x2e9d8>
   62afc:	ldr	r1, [sp, #68]	; 0x44
   62b00:	ldr	r2, [sp, #88]	; 0x58
   62b04:	mul	r1, r0, r1
   62b08:	add	r1, r9, r1, lsl #1
   62b0c:	ldrsh	r4, [r1]
   62b10:	asr	r1, r4, #31
   62b14:	str	r4, [r2]
   62b18:	orr	r4, r0, #1
   62b1c:	str	r1, [r2, #4]
   62b20:	add	r2, r2, #8
   62b24:	str	r2, [sp, #88]	; 0x58
   62b28:	orr	r0, r0, #1
   62b2c:	cmp	r5, r0
   62b30:	beq	629dc <GetDataSlab+0x2e880>
   62b34:	ldr	r2, [sp, #52]	; 0x34
   62b38:	add	r6, r4, #1
   62b3c:	sub	r1, r5, r4
   62b40:	mul	r0, r2, r4
   62b44:	mul	r4, r2, r6
   62b48:	ldr	r2, [sp, #88]	; 0x58
   62b4c:	mov	r6, r9
   62b50:	add	r7, r6, r0
   62b54:	subs	r1, r1, #2
   62b58:	ldrsh	r7, [r7]
   62b5c:	str	r7, [r2]
   62b60:	asr	r7, r7, #31
   62b64:	str	r7, [r2, #4]
   62b68:	add	r7, r6, r4
   62b6c:	add	r6, r6, r3
   62b70:	ldrsh	r7, [r7]
   62b74:	str	r7, [r2, #8]
   62b78:	asr	r7, r7, #31
   62b7c:	str	r7, [r2, #12]
   62b80:	add	r2, r2, #16
   62b84:	bne	62b50 <GetDataSlab+0x2e9f4>
   62b88:	str	r2, [sp, #88]	; 0x58
   62b8c:	b	629dc <GetDataSlab+0x2e880>
   62b90:	cmp	r3, #1
   62b94:	blt	35058 <GetDataSlab+0xefc>
   62b98:	cmp	r5, #1
   62b9c:	mov	r0, #0
   62ba0:	blt	5b6a4 <GetDataSlab+0x27548>
   62ba4:	ldr	r0, [sp, #60]	; 0x3c
   62ba8:	ldr	r1, [sp, #56]	; 0x38
   62bac:	cmp	r5, #1
   62bb0:	mla	r0, r1, r8, r0
   62bb4:	ldr	r1, [sp, #80]	; 0x50
   62bb8:	add	r0, r1, r0, lsl #1
   62bbc:	mov	r1, #1
   62bc0:	str	r0, [sp, #92]	; 0x5c
   62bc4:	sub	r0, r5, #2
   62bc8:	add	r1, r1, r0, lsr #1
   62bcc:	lsr	r0, r0, #1
   62bd0:	str	r0, [sp, #52]	; 0x34
   62bd4:	mov	r0, #0
   62bd8:	and	r2, r1, #1
   62bdc:	str	r0, [sp, #84]	; 0x54
   62be0:	sub	r1, r1, r2
   62be4:	str	r2, [sp, #60]	; 0x3c
   62be8:	mov	r2, #0
   62bec:	movwhi	r2, #1
   62bf0:	str	r1, [sp, #44]	; 0x2c
   62bf4:	ldr	r1, [sp, #68]	; 0x44
   62bf8:	mov	r3, r1
   62bfc:	sub	r1, r1, #1
   62c00:	clz	r1, r1
   62c04:	lsr	r1, r1, #5
   62c08:	and	r1, r2, r1
   62c0c:	str	r1, [sp, #80]	; 0x50
   62c10:	ldr	r1, [sp, #72]	; 0x48
   62c14:	mul	r1, r1, r8
   62c18:	lsl	r8, r3, #2
   62c1c:	lsl	r1, r1, #1
   62c20:	str	r1, [sp, #72]	; 0x48
   62c24:	lsl	r1, r3, #1
   62c28:	str	r1, [sp, #48]	; 0x30
   62c2c:	lsl	r1, r3, #3
   62c30:	str	r1, [sp, #40]	; 0x28
   62c34:	and	r1, r5, #1
   62c38:	ldr	r9, [sp, #40]	; 0x28
   62c3c:	str	r1, [sp, #64]	; 0x40
   62c40:	bic	r1, r5, #1
   62c44:	str	r1, [sp, #56]	; 0x38
   62c48:	ldr	r0, [sp, #80]	; 0x50
   62c4c:	cmp	r0, #0
   62c50:	bne	62c84 <GetDataSlab+0x2eb28>
   62c54:	b	62d58 <GetDataSlab+0x2ebfc>
   62c58:	ldr	r0, [sp, #72]	; 0x48
   62c5c:	add	ip, ip, #1
   62c60:	cmp	ip, lr
   62c64:	str	ip, [sp, #84]	; 0x54
   62c68:	add	sl, sl, r0
   62c6c:	mov	r0, #0
   62c70:	str	sl, [sp, #92]	; 0x5c
   62c74:	beq	5b6a4 <GetDataSlab+0x27548>
   62c78:	ldr	r0, [sp, #80]	; 0x50
   62c7c:	cmp	r0, #0
   62c80:	beq	62d58 <GetDataSlab+0x2ebfc>
   62c84:	ldr	r0, [sp, #52]	; 0x34
   62c88:	ldr	r1, [sp, #92]	; 0x5c
   62c8c:	cmp	r0, #0
   62c90:	mov	r0, #0
   62c94:	beq	62cf0 <GetDataSlab+0x2eb94>
   62c98:	ldr	r4, [sp, #88]	; 0x58
   62c9c:	ldr	r6, [sp, #44]	; 0x2c
   62ca0:	add	sl, sp, #360	; 0x168
   62ca4:	mov	r3, #32
   62ca8:	add	ip, sp, #364	; 0x16c
   62cac:	ldr	lr, [r1]
   62cb0:	add	r2, r4, #16
   62cb4:	subs	r6, r6, #2
   62cb8:	add	r0, r0, #4
   62cbc:	str	lr, [sp, #360]	; 0x168
   62cc0:	vld1.32	{d16[0]}, [sl :32]
   62cc4:	vmovl.u16	q8, d16
   62cc8:	vmovl.u32	q8, d16
   62ccc:	vst1.64	{d16-d17}, [r4], r3
   62cd0:	ldr	r7, [r1, r8]
   62cd4:	add	r1, r1, r9
   62cd8:	str	r7, [sp, #364]	; 0x16c
   62cdc:	vld1.32	{d16[0]}, [ip :32]
   62ce0:	vmovl.u16	q8, d16
   62ce4:	vmovl.u32	q8, d16
   62ce8:	vst1.64	{d16-d17}, [r2]
   62cec:	bne	62cac <GetDataSlab+0x2eb50>
   62cf0:	ldr	r1, [sp, #60]	; 0x3c
   62cf4:	ldr	sl, [sp, #92]	; 0x5c
   62cf8:	cmp	r1, #0
   62cfc:	beq	62d2c <GetDataSlab+0x2ebd0>
   62d00:	ldr	r1, [sp, #68]	; 0x44
   62d04:	mul	r1, r0, r1
   62d08:	ldr	r1, [sl, r1, lsl #1]
   62d0c:	str	r1, [sp, #356]	; 0x164
   62d10:	add	r1, sp, #356	; 0x164
   62d14:	vld1.32	{d16[0]}, [r1 :32]
   62d18:	ldr	r1, [sp, #88]	; 0x58
   62d1c:	add	r0, r1, r0, lsl #3
   62d20:	vmovl.u16	q8, d16
   62d24:	vmovl.u32	q8, d16
   62d28:	vst1.64	{d16-d17}, [r0]
   62d2c:	ldr	r1, [sp, #56]	; 0x38
   62d30:	ldr	r0, [sp, #88]	; 0x58
   62d34:	ldr	lr, [sp, #76]	; 0x4c
   62d38:	ldr	ip, [sp, #84]	; 0x54
   62d3c:	mov	r3, #0
   62d40:	add	r0, r0, r1, lsl #3
   62d44:	cmp	r5, r1
   62d48:	str	r0, [sp, #88]	; 0x58
   62d4c:	mov	r0, r1
   62d50:	beq	62c58 <GetDataSlab+0x2eafc>
   62d54:	b	62d6c <GetDataSlab+0x2ec10>
   62d58:	ldr	lr, [sp, #76]	; 0x4c
   62d5c:	ldr	sl, [sp, #92]	; 0x5c
   62d60:	ldr	ip, [sp, #84]	; 0x54
   62d64:	mov	r0, #0
   62d68:	mov	r3, #0
   62d6c:	ldr	r1, [sp, #64]	; 0x40
   62d70:	cmp	r1, #0
   62d74:	bne	62d8c <GetDataSlab+0x2ec30>
   62d78:	mov	r4, r0
   62d7c:	orr	r0, r0, #1
   62d80:	cmp	r5, r0
   62d84:	beq	62c58 <GetDataSlab+0x2eafc>
   62d88:	b	62dbc <GetDataSlab+0x2ec60>
   62d8c:	ldr	r1, [sp, #68]	; 0x44
   62d90:	orr	r4, r0, #1
   62d94:	mul	r1, r0, r1
   62d98:	add	r1, sl, r1, lsl #1
   62d9c:	ldrh	r2, [r1]
   62da0:	ldr	r1, [sp, #88]	; 0x58
   62da4:	strd	r2, [r1]
   62da8:	add	r1, r1, #8
   62dac:	str	r1, [sp, #88]	; 0x58
   62db0:	orr	r0, r0, #1
   62db4:	cmp	r5, r0
   62db8:	beq	62c58 <GetDataSlab+0x2eafc>
   62dbc:	ldr	r6, [sp, #48]	; 0x30
   62dc0:	add	r2, r4, #1
   62dc4:	ldr	r7, [sp, #88]	; 0x58
   62dc8:	sub	r1, r5, r4
   62dcc:	mul	r0, r6, r4
   62dd0:	mul	r4, r6, r2
   62dd4:	mov	r6, sl
   62dd8:	add	r2, r6, r0
   62ddc:	subs	r1, r1, #2
   62de0:	ldrh	r2, [r2]
   62de4:	stm	r7, {r2, r3}
   62de8:	add	r2, r6, r4
   62dec:	add	r6, r6, r8
   62df0:	ldrh	r2, [r2]
   62df4:	str	r3, [r7, #12]
   62df8:	str	r2, [r7, #8]
   62dfc:	add	r7, r7, #16
   62e00:	bne	62dd8 <GetDataSlab+0x2ec7c>
   62e04:	str	r7, [sp, #88]	; 0x58
   62e08:	b	62c58 <GetDataSlab+0x2eafc>
   62e0c:	cmp	r3, #1
   62e10:	blt	35058 <GetDataSlab+0xefc>
   62e14:	cmp	r5, #1
   62e18:	mov	r0, #0
   62e1c:	blt	5b6a4 <GetDataSlab+0x27548>
   62e20:	ldr	r0, [sp, #60]	; 0x3c
   62e24:	ldr	r1, [sp, #56]	; 0x38
   62e28:	cmp	r5, #1
   62e2c:	mla	r0, r1, r8, r0
   62e30:	ldr	r1, [sp, #80]	; 0x50
   62e34:	add	r0, r1, r0, lsl #2
   62e38:	mov	r1, #1
   62e3c:	str	r0, [sp, #92]	; 0x5c
   62e40:	sub	r0, r5, #2
   62e44:	add	r1, r1, r0, lsr #1
   62e48:	lsr	r0, r0, #1
   62e4c:	str	r0, [sp, #52]	; 0x34
   62e50:	and	r2, r1, #1
   62e54:	sub	r1, r1, r2
   62e58:	str	r2, [sp, #60]	; 0x3c
   62e5c:	mov	r2, #0
   62e60:	str	r1, [sp, #44]	; 0x2c
   62e64:	ldr	r1, [sp, #68]	; 0x44
   62e68:	str	r2, [sp, #84]	; 0x54
   62e6c:	mov	r2, #0
   62e70:	movwhi	r2, #1
   62e74:	mov	r3, r1
   62e78:	sub	r1, r1, #1
   62e7c:	clz	r1, r1
   62e80:	lsr	r1, r1, #5
   62e84:	and	r1, r2, r1
   62e88:	str	r1, [sp, #80]	; 0x50
   62e8c:	ldr	r1, [sp, #72]	; 0x48
   62e90:	mul	r1, r1, r8
   62e94:	lsl	r8, r3, #4
   62e98:	lsl	r1, r1, #2
   62e9c:	str	r1, [sp, #72]	; 0x48
   62ea0:	lsl	r1, r3, #2
   62ea4:	lsl	r3, r3, #3
   62ea8:	str	r1, [sp, #48]	; 0x30
   62eac:	and	r1, r5, #1
   62eb0:	str	r1, [sp, #64]	; 0x40
   62eb4:	bic	r1, r5, #1
   62eb8:	str	r1, [sp, #56]	; 0x38
   62ebc:	ldr	r0, [sp, #80]	; 0x50
   62ec0:	cmp	r0, #0
   62ec4:	bne	62efc <GetDataSlab+0x2eda0>
   62ec8:	b	62fd8 <GetDataSlab+0x2ee7c>
   62ecc:	ldr	r0, [sp, #72]	; 0x48
   62ed0:	ldr	r1, [sp, #76]	; 0x4c
   62ed4:	add	ip, ip, #1
   62ed8:	str	ip, [sp, #84]	; 0x54
   62edc:	add	lr, lr, r0
   62ee0:	mov	r0, #0
   62ee4:	cmp	ip, r1
   62ee8:	str	lr, [sp, #92]	; 0x5c
   62eec:	beq	5b6a4 <GetDataSlab+0x27548>
   62ef0:	ldr	r0, [sp, #80]	; 0x50
   62ef4:	cmp	r0, #0
   62ef8:	beq	62fd8 <GetDataSlab+0x2ee7c>
   62efc:	ldr	r0, [sp, #52]	; 0x34
   62f00:	ldr	r1, [sp, #92]	; 0x5c
   62f04:	add	r2, sp, #304	; 0x130
   62f08:	cmp	r0, #0
   62f0c:	mov	r0, #0
   62f10:	beq	62f70 <GetDataSlab+0x2ee14>
   62f14:	ldr	r9, [sp, #88]	; 0x58
   62f18:	ldr	sl, [sp, #44]	; 0x2c
   62f1c:	mov	r7, #32
   62f20:	add	lr, sp, #312	; 0x138
   62f24:	ldm	r1, {r4, r6}
   62f28:	str	r6, [sp, #308]	; 0x134
   62f2c:	add	r6, r1, r8
   62f30:	subs	sl, sl, #2
   62f34:	add	r0, r0, #4
   62f38:	str	r4, [sp, #304]	; 0x130
   62f3c:	add	r4, r9, #16
   62f40:	vld1.32	{d16}, [r2 :64]
   62f44:	vmovl.s32	q8, d16
   62f48:	vst1.64	{d16-d17}, [r9], r7
   62f4c:	ldr	ip, [r1, r3]!
   62f50:	str	ip, [sp, #312]	; 0x138
   62f54:	ldr	r1, [r1, #4]
   62f58:	str	r1, [sp, #316]	; 0x13c
   62f5c:	mov	r1, r6
   62f60:	vld1.32	{d16}, [lr :64]
   62f64:	vmovl.s32	q8, d16
   62f68:	vst1.64	{d16-d17}, [r4]
   62f6c:	bne	62f24 <GetDataSlab+0x2edc8>
   62f70:	ldr	r1, [sp, #60]	; 0x3c
   62f74:	ldr	lr, [sp, #92]	; 0x5c
   62f78:	cmp	r1, #0
   62f7c:	beq	62fb4 <GetDataSlab+0x2ee58>
   62f80:	ldr	r1, [sp, #68]	; 0x44
   62f84:	mov	r6, lr
   62f88:	mul	r1, r0, r1
   62f8c:	ldr	r1, [r6, r1, lsl #2]!
   62f90:	str	r1, [sp, #296]	; 0x128
   62f94:	ldr	r1, [r6, #4]
   62f98:	str	r1, [sp, #300]	; 0x12c
   62f9c:	add	r1, sp, #296	; 0x128
   62fa0:	vld1.32	{d16}, [r1 :64]
   62fa4:	ldr	r1, [sp, #88]	; 0x58
   62fa8:	add	r0, r1, r0, lsl #3
   62fac:	vmovl.s32	q8, d16
   62fb0:	vst1.64	{d16-d17}, [r0]
   62fb4:	ldr	r1, [sp, #56]	; 0x38
   62fb8:	ldr	r0, [sp, #88]	; 0x58
   62fbc:	ldr	ip, [sp, #84]	; 0x54
   62fc0:	add	r0, r0, r1, lsl #3
   62fc4:	cmp	r5, r1
   62fc8:	str	r0, [sp, #88]	; 0x58
   62fcc:	mov	r0, r1
   62fd0:	beq	62ecc <GetDataSlab+0x2ed70>
   62fd4:	b	62fe4 <GetDataSlab+0x2ee88>
   62fd8:	ldr	ip, [sp, #84]	; 0x54
   62fdc:	ldr	lr, [sp, #92]	; 0x5c
   62fe0:	mov	r0, #0
   62fe4:	ldr	r1, [sp, #64]	; 0x40
   62fe8:	cmp	r1, #0
   62fec:	bne	63004 <GetDataSlab+0x2eea8>
   62ff0:	mov	r4, r0
   62ff4:	orr	r0, r0, #1
   62ff8:	cmp	r5, r0
   62ffc:	beq	62ecc <GetDataSlab+0x2ed70>
   63000:	b	63038 <GetDataSlab+0x2eedc>
   63004:	ldr	r1, [sp, #68]	; 0x44
   63008:	ldr	r2, [sp, #88]	; 0x58
   6300c:	mul	r1, r0, r1
   63010:	ldr	r4, [lr, r1, lsl #2]
   63014:	asr	r1, r4, #31
   63018:	str	r4, [r2]
   6301c:	orr	r4, r0, #1
   63020:	str	r1, [r2, #4]
   63024:	add	r2, r2, #8
   63028:	str	r2, [sp, #88]	; 0x58
   6302c:	orr	r0, r0, #1
   63030:	cmp	r5, r0
   63034:	beq	62ecc <GetDataSlab+0x2ed70>
   63038:	ldr	r2, [sp, #48]	; 0x30
   6303c:	add	r6, r4, #1
   63040:	sub	r1, r5, r4
   63044:	mul	r0, r2, r4
   63048:	mul	r6, r2, r6
   6304c:	ldr	r2, [sp, #88]	; 0x58
   63050:	mov	r4, lr
   63054:	ldr	r7, [r4, r0]
   63058:	subs	r1, r1, #2
   6305c:	str	r7, [r2]
   63060:	asr	r7, r7, #31
   63064:	str	r7, [r2, #4]
   63068:	ldr	r7, [r4, r6]
   6306c:	add	r4, r4, r3
   63070:	str	r7, [r2, #8]
   63074:	asr	r7, r7, #31
   63078:	str	r7, [r2, #12]
   6307c:	add	r2, r2, #16
   63080:	bne	63054 <GetDataSlab+0x2eef8>
   63084:	str	r2, [sp, #88]	; 0x58
   63088:	b	62ecc <GetDataSlab+0x2ed70>
   6308c:	cmp	r3, #1
   63090:	blt	35058 <GetDataSlab+0xefc>
   63094:	cmp	r5, #1
   63098:	mov	r0, #0
   6309c:	blt	5b6a4 <GetDataSlab+0x27548>
   630a0:	ldr	r0, [sp, #60]	; 0x3c
   630a4:	ldr	r1, [sp, #56]	; 0x38
   630a8:	cmp	r5, #1
   630ac:	mla	r0, r1, r8, r0
   630b0:	ldr	r1, [sp, #80]	; 0x50
   630b4:	add	r0, r1, r0, lsl #2
   630b8:	mov	r1, #1
   630bc:	str	r0, [sp, #92]	; 0x5c
   630c0:	sub	r0, r5, #2
   630c4:	add	r1, r1, r0, lsr #1
   630c8:	lsr	r0, r0, #1
   630cc:	str	r0, [sp, #52]	; 0x34
   630d0:	mov	r0, #0
   630d4:	and	r2, r1, #1
   630d8:	str	r0, [sp, #84]	; 0x54
   630dc:	sub	r1, r1, r2
   630e0:	str	r2, [sp, #60]	; 0x3c
   630e4:	mov	r2, #0
   630e8:	movwhi	r2, #1
   630ec:	str	r1, [sp, #44]	; 0x2c
   630f0:	ldr	r1, [sp, #68]	; 0x44
   630f4:	mov	r3, r1
   630f8:	sub	r1, r1, #1
   630fc:	clz	r1, r1
   63100:	lsr	r1, r1, #5
   63104:	and	r1, r2, r1
   63108:	str	r1, [sp, #80]	; 0x50
   6310c:	ldr	r1, [sp, #72]	; 0x48
   63110:	mul	r1, r1, r8
   63114:	lsl	r8, r3, #3
   63118:	lsl	r1, r1, #2
   6311c:	str	r1, [sp, #72]	; 0x48
   63120:	lsl	r1, r3, #2
   63124:	str	r1, [sp, #48]	; 0x30
   63128:	lsl	r1, r3, #4
   6312c:	str	r1, [sp, #40]	; 0x28
   63130:	and	r1, r5, #1
   63134:	ldr	r9, [sp, #40]	; 0x28
   63138:	str	r1, [sp, #64]	; 0x40
   6313c:	bic	r1, r5, #1
   63140:	str	r1, [sp, #56]	; 0x38
   63144:	ldr	r0, [sp, #80]	; 0x50
   63148:	cmp	r0, #0
   6314c:	bne	63184 <GetDataSlab+0x2f028>
   63150:	b	63264 <GetDataSlab+0x2f108>
   63154:	ldr	r0, [sp, #72]	; 0x48
   63158:	ldr	r1, [sp, #76]	; 0x4c
   6315c:	add	lr, lr, #1
   63160:	str	lr, [sp, #84]	; 0x54
   63164:	add	ip, ip, r0
   63168:	mov	r0, #0
   6316c:	cmp	lr, r1
   63170:	str	ip, [sp, #92]	; 0x5c
   63174:	beq	5b6a4 <GetDataSlab+0x27548>
   63178:	ldr	r0, [sp, #80]	; 0x50
   6317c:	cmp	r0, #0
   63180:	beq	63264 <GetDataSlab+0x2f108>
   63184:	ldr	r0, [sp, #52]	; 0x34
   63188:	ldr	r1, [sp, #92]	; 0x5c
   6318c:	cmp	r0, #0
   63190:	mov	r0, #0
   63194:	beq	631f8 <GetDataSlab+0x2f09c>
   63198:	ldr	sl, [sp, #88]	; 0x58
   6319c:	ldr	r4, [sp, #44]	; 0x2c
   631a0:	add	lr, sp, #328	; 0x148
   631a4:	add	r3, sp, #336	; 0x150
   631a8:	ldm	r1, {r6, ip}
   631ac:	str	ip, [sp, #332]	; 0x14c
   631b0:	mov	r2, #32
   631b4:	subs	r4, r4, #2
   631b8:	add	r0, r0, #4
   631bc:	str	r6, [sp, #328]	; 0x148
   631c0:	add	r6, sl, #16
   631c4:	vld1.32	{d16}, [lr :64]
   631c8:	vmovl.u32	q8, d16
   631cc:	vst1.64	{d16-d17}, [sl], r2
   631d0:	add	r2, r1, r9
   631d4:	ldr	r7, [r1, r8]!
   631d8:	str	r7, [sp, #336]	; 0x150
   631dc:	ldr	r1, [r1, #4]
   631e0:	str	r1, [sp, #340]	; 0x154
   631e4:	mov	r1, r2
   631e8:	vld1.32	{d16}, [r3 :64]
   631ec:	vmovl.u32	q8, d16
   631f0:	vst1.64	{d16-d17}, [r6]
   631f4:	bne	631a8 <GetDataSlab+0x2f04c>
   631f8:	ldr	r1, [sp, #60]	; 0x3c
   631fc:	ldr	ip, [sp, #92]	; 0x5c
   63200:	cmp	r1, #0
   63204:	beq	6323c <GetDataSlab+0x2f0e0>
   63208:	ldr	r1, [sp, #68]	; 0x44
   6320c:	mov	r2, ip
   63210:	mul	r1, r0, r1
   63214:	ldr	r1, [r2, r1, lsl #2]!
   63218:	str	r1, [sp, #320]	; 0x140
   6321c:	ldr	r1, [r2, #4]
   63220:	str	r1, [sp, #324]	; 0x144
   63224:	add	r1, sp, #320	; 0x140
   63228:	vld1.32	{d16}, [r1 :64]
   6322c:	ldr	r1, [sp, #88]	; 0x58
   63230:	add	r0, r1, r0, lsl #3
   63234:	vmovl.u32	q8, d16
   63238:	vst1.64	{d16-d17}, [r0]
   6323c:	ldr	r1, [sp, #56]	; 0x38
   63240:	ldr	r0, [sp, #88]	; 0x58
   63244:	ldr	lr, [sp, #84]	; 0x54
   63248:	mov	r3, #0
   6324c:	add	r0, r0, r1, lsl #3
   63250:	cmp	r5, r1
   63254:	str	r0, [sp, #88]	; 0x58
   63258:	mov	r0, r1
   6325c:	beq	63154 <GetDataSlab+0x2eff8>
   63260:	b	63274 <GetDataSlab+0x2f118>
   63264:	ldr	ip, [sp, #92]	; 0x5c
   63268:	ldr	lr, [sp, #84]	; 0x54
   6326c:	mov	r0, #0
   63270:	mov	r3, #0
   63274:	ldr	r1, [sp, #64]	; 0x40
   63278:	cmp	r1, #0
   6327c:	bne	63294 <GetDataSlab+0x2f138>
   63280:	mov	r4, r0
   63284:	orr	r0, r0, #1
   63288:	cmp	r5, r0
   6328c:	beq	63154 <GetDataSlab+0x2eff8>
   63290:	b	632c0 <GetDataSlab+0x2f164>
   63294:	ldr	r1, [sp, #68]	; 0x44
   63298:	orr	r4, r0, #1
   6329c:	mul	r1, r0, r1
   632a0:	ldr	r2, [ip, r1, lsl #2]
   632a4:	ldr	r1, [sp, #88]	; 0x58
   632a8:	strd	r2, [r1]
   632ac:	add	r1, r1, #8
   632b0:	str	r1, [sp, #88]	; 0x58
   632b4:	orr	r0, r0, #1
   632b8:	cmp	r5, r0
   632bc:	beq	63154 <GetDataSlab+0x2eff8>
   632c0:	ldr	r6, [sp, #48]	; 0x30
   632c4:	add	r2, r4, #1
   632c8:	ldr	r7, [sp, #88]	; 0x58
   632cc:	sub	r1, r5, r4
   632d0:	mul	r0, r6, r4
   632d4:	mul	r4, r6, r2
   632d8:	mov	r6, ip
   632dc:	ldr	r2, [r6, r0]
   632e0:	subs	r1, r1, #2
   632e4:	stm	r7, {r2, r3}
   632e8:	ldr	r2, [r6, r4]
   632ec:	str	r3, [r7, #12]
   632f0:	add	r6, r6, r8
   632f4:	str	r2, [r7, #8]
   632f8:	add	r7, r7, #16
   632fc:	bne	632dc <GetDataSlab+0x2f180>
   63300:	str	r7, [sp, #88]	; 0x58
   63304:	b	63154 <GetDataSlab+0x2eff8>
   63308:	cmp	r3, #1
   6330c:	blt	35058 <GetDataSlab+0xefc>
   63310:	cmp	r5, #1
   63314:	mov	r0, #0
   63318:	blt	5b6a4 <GetDataSlab+0x27548>
   6331c:	ldr	r0, [sp, #60]	; 0x3c
   63320:	ldr	r1, [sp, #56]	; 0x38
   63324:	mla	r0, r1, r8, r0
   63328:	ldr	r1, [sp, #80]	; 0x50
   6332c:	add	r0, r1, r0, lsl #2
   63330:	str	r0, [sp, #92]	; 0x5c
   63334:	and	r0, r5, #1
   63338:	str	r0, [sp, #80]	; 0x50
   6333c:	sub	r7, r5, r0
   63340:	ldr	r0, [sp, #72]	; 0x48
   63344:	mul	r0, r0, r8
   63348:	lsl	r0, r0, #2
   6334c:	str	r0, [sp, #72]	; 0x48
   63350:	ldr	r0, [sp, #68]	; 0x44
   63354:	lsl	r6, r0, #3
   63358:	lsl	r4, r0, #2
   6335c:	mov	r0, #0
   63360:	str	r0, [sp, #84]	; 0x54
   63364:	mov	r9, #0
   63368:	cmp	r5, #1
   6336c:	beq	633e0 <GetDataSlab+0x2f284>
   63370:	b	633a8 <GetDataSlab+0x2f24c>
   63374:	ldr	r2, [sp, #84]	; 0x54
   63378:	ldr	r0, [sp, #72]	; 0x48
   6337c:	ldr	r1, [sp, #76]	; 0x4c
   63380:	add	r2, r2, #1
   63384:	add	r8, r8, r0
   63388:	mov	r0, #0
   6338c:	cmp	r2, r1
   63390:	str	r8, [sp, #92]	; 0x5c
   63394:	str	r2, [sp, #84]	; 0x54
   63398:	beq	5b6a4 <GetDataSlab+0x27548>
   6339c:	mov	r9, #0
   633a0:	cmp	r5, #1
   633a4:	beq	633e0 <GetDataSlab+0x2f284>
   633a8:	ldr	sl, [sp, #92]	; 0x5c
   633ac:	ldr	r8, [sp, #88]	; 0x58
   633b0:	ldr	r0, [sl]
   633b4:	bl	71848 <__aeabi_f2ulz>
   633b8:	strd	r0, [r8]
   633bc:	ldr	r0, [sl, r4]
   633c0:	bl	71848 <__aeabi_f2ulz>
   633c4:	add	r9, r9, #2
   633c8:	strd	r0, [r8, #8]
   633cc:	add	sl, sl, r6
   633d0:	add	r8, r8, #16
   633d4:	cmp	r7, r9
   633d8:	bne	633b0 <GetDataSlab+0x2f254>
   633dc:	str	r8, [sp, #88]	; 0x58
   633e0:	ldr	r0, [sp, #80]	; 0x50
   633e4:	ldr	r8, [sp, #92]	; 0x5c
   633e8:	cmp	r0, #0
   633ec:	beq	63374 <GetDataSlab+0x2f218>
   633f0:	ldr	r0, [sp, #68]	; 0x44
   633f4:	mul	r0, r9, r0
   633f8:	ldr	r0, [r8, r0, lsl #2]
   633fc:	bl	71848 <__aeabi_f2ulz>
   63400:	ldr	r2, [sp, #88]	; 0x58
   63404:	strd	r0, [r2]
   63408:	add	r2, r2, #8
   6340c:	str	r2, [sp, #88]	; 0x58
   63410:	b	63374 <GetDataSlab+0x2f218>
   63414:	cmp	r3, #1
   63418:	blt	35058 <GetDataSlab+0xefc>
   6341c:	cmp	r5, #1
   63420:	mov	r0, #0
   63424:	blt	5b6a4 <GetDataSlab+0x27548>
   63428:	ldr	r0, [sp, #60]	; 0x3c
   6342c:	ldr	r1, [sp, #56]	; 0x38
   63430:	mla	r0, r1, r8, r0
   63434:	ldr	r1, [sp, #80]	; 0x50
   63438:	add	r0, r1, r0, lsl #3
   6343c:	str	r0, [sp, #92]	; 0x5c
   63440:	and	r0, r5, #1
   63444:	str	r0, [sp, #80]	; 0x50
   63448:	sub	r7, r5, r0
   6344c:	ldr	r0, [sp, #72]	; 0x48
   63450:	mul	r0, r0, r8
   63454:	lsl	r0, r0, #3
   63458:	str	r0, [sp, #72]	; 0x48
   6345c:	ldr	r0, [sp, #68]	; 0x44
   63460:	lsl	r6, r0, #4
   63464:	lsl	r4, r0, #3
   63468:	mov	r0, #0
   6346c:	str	r0, [sp, #84]	; 0x54
   63470:	mov	r9, #0
   63474:	cmp	r5, #1
   63478:	beq	634f8 <GetDataSlab+0x2f39c>
   6347c:	b	634b4 <GetDataSlab+0x2f358>
   63480:	ldr	r2, [sp, #84]	; 0x54
   63484:	ldr	r0, [sp, #72]	; 0x48
   63488:	ldr	r1, [sp, #76]	; 0x4c
   6348c:	add	r2, r2, #1
   63490:	add	r8, r8, r0
   63494:	mov	r0, #0
   63498:	cmp	r2, r1
   6349c:	str	r8, [sp, #92]	; 0x5c
   634a0:	str	r2, [sp, #84]	; 0x54
   634a4:	beq	5b6a4 <GetDataSlab+0x27548>
   634a8:	mov	r9, #0
   634ac:	cmp	r5, #1
   634b0:	beq	634f8 <GetDataSlab+0x2f39c>
   634b4:	ldr	sl, [sp, #92]	; 0x5c
   634b8:	ldr	r8, [sp, #88]	; 0x58
   634bc:	vldr	d16, [sl]
   634c0:	vmov	r0, r1, d16
   634c4:	bl	71888 <__aeabi_d2ulz>
   634c8:	strd	r0, [r8]
   634cc:	add	r0, sl, r4
   634d0:	vldr	d16, [r0]
   634d4:	vmov	r0, r1, d16
   634d8:	bl	71888 <__aeabi_d2ulz>
   634dc:	add	r9, r9, #2
   634e0:	strd	r0, [r8, #8]
   634e4:	add	sl, sl, r6
   634e8:	add	r8, r8, #16
   634ec:	cmp	r7, r9
   634f0:	bne	634bc <GetDataSlab+0x2f360>
   634f4:	str	r8, [sp, #88]	; 0x58
   634f8:	ldr	r0, [sp, #80]	; 0x50
   634fc:	ldr	r8, [sp, #92]	; 0x5c
   63500:	cmp	r0, #0
   63504:	beq	63480 <GetDataSlab+0x2f324>
   63508:	ldr	r0, [sp, #68]	; 0x44
   6350c:	mul	r0, r9, r0
   63510:	add	r0, r8, r0, lsl #3
   63514:	vldr	d16, [r0]
   63518:	vmov	r0, r1, d16
   6351c:	bl	71888 <__aeabi_d2ulz>
   63520:	ldr	r2, [sp, #88]	; 0x58
   63524:	strd	r0, [r2]
   63528:	add	r2, r2, #8
   6352c:	str	r2, [sp, #88]	; 0x58
   63530:	b	63480 <GetDataSlab+0x2f324>
   63534:	cmp	r3, #1
   63538:	blt	35058 <GetDataSlab+0xefc>
   6353c:	cmp	r5, #1
   63540:	mov	r0, #0
   63544:	blt	5b6a4 <GetDataSlab+0x27548>
   63548:	ldr	r0, [sp, #60]	; 0x3c
   6354c:	ldr	r1, [sp, #56]	; 0x38
   63550:	lsl	r2, r5, #3
   63554:	mov	r7, r8
   63558:	mov	r3, #1
   6355c:	cmp	r5, #1
   63560:	mov	r6, #0
   63564:	mla	r1, r1, r8, r0
   63568:	ldr	r0, [sp, #80]	; 0x50
   6356c:	add	r8, r0, r1, lsl #3
   63570:	add	r0, r2, r1, lsl #3
   63574:	sub	r2, r5, #2
   63578:	add	r3, r3, r2, lsr #1
   6357c:	str	r0, [sp, #52]	; 0x34
   63580:	and	r0, r3, #1
   63584:	str	r0, [sp, #36]	; 0x24
   63588:	sub	r0, r3, r0
   6358c:	mov	r3, #0
   63590:	movwhi	r3, #1
   63594:	str	r0, [sp, #20]
   63598:	lsl	r0, r1, #3
   6359c:	str	r0, [sp, #40]	; 0x28
   635a0:	ldr	r0, [sp, #68]	; 0x44
   635a4:	sub	r1, r0, #1
   635a8:	lsl	sl, r0, #5
   635ac:	lsl	ip, r0, #4
   635b0:	clz	r1, r1
   635b4:	lsr	r1, r1, #5
   635b8:	and	r4, r3, r1
   635bc:	ldr	r1, [sp, #72]	; 0x48
   635c0:	str	r4, [sp, #24]
   635c4:	mul	r1, r1, r7
   635c8:	lsl	lr, r1, #3
   635cc:	lsl	r1, r0, #3
   635d0:	and	r0, r5, #1
   635d4:	str	r0, [sp, #92]	; 0x5c
   635d8:	bic	r0, r5, #1
   635dc:	str	r1, [sp, #44]	; 0x2c
   635e0:	str	lr, [sp, #48]	; 0x30
   635e4:	str	r0, [sp, #32]
   635e8:	lsr	r0, r2, #1
   635ec:	str	r0, [sp, #28]
   635f0:	cmp	r4, #0
   635f4:	bne	63618 <GetDataSlab+0x2f4bc>
   635f8:	b	63698 <GetDataSlab+0x2f53c>
   635fc:	ldr	r0, [sp, #76]	; 0x4c
   63600:	add	r6, r6, #1
   63604:	add	r8, r8, lr
   63608:	cmp	r6, r0
   6360c:	beq	6480c <GetDataSlab+0x306b0>
   63610:	cmp	r4, #0
   63614:	beq	63698 <GetDataSlab+0x2f53c>
   63618:	ldr	r0, [sp, #52]	; 0x34
   6361c:	mul	r1, lr, r6
   63620:	ldr	r3, [sp, #80]	; 0x50
   63624:	add	r2, r0, r1
   63628:	ldr	r0, [sp, #88]	; 0x58
   6362c:	add	r2, r3, r2
   63630:	cmp	r2, r0
   63634:	bls	63720 <GetDataSlab+0x2f5c4>
   63638:	add	r2, r0, r5, lsl #3
   6363c:	ldr	r0, [sp, #40]	; 0x28
   63640:	add	r1, r0, r1
   63644:	add	r1, r3, r1
   63648:	cmp	r1, r2
   6364c:	bcs	63720 <GetDataSlab+0x2f5c4>
   63650:	mov	r2, #0
   63654:	ldr	r0, [sp, #92]	; 0x5c
   63658:	cmp	r0, #0
   6365c:	beq	636a8 <GetDataSlab+0x2f54c>
   63660:	ldr	r0, [sp, #68]	; 0x44
   63664:	mov	r1, r8
   63668:	ldr	r3, [sp, #88]	; 0x58
   6366c:	mul	r0, r2, r0
   63670:	ldr	r0, [r1, r0, lsl #3]!
   63674:	ldr	r1, [r1, #4]
   63678:	strd	r0, [r3]
   6367c:	orr	r1, r2, #1
   63680:	add	r3, r3, #8
   63684:	str	r3, [sp, #88]	; 0x58
   63688:	orr	r0, r2, #1
   6368c:	cmp	r5, r0
   63690:	bne	636b8 <GetDataSlab+0x2f55c>
   63694:	b	635fc <GetDataSlab+0x2f4a0>
   63698:	mov	r2, #0
   6369c:	ldr	r0, [sp, #92]	; 0x5c
   636a0:	cmp	r0, #0
   636a4:	bne	63660 <GetDataSlab+0x2f504>
   636a8:	mov	r1, r2
   636ac:	orr	r0, r2, #1
   636b0:	cmp	r5, r0
   636b4:	beq	635fc <GetDataSlab+0x2f4a0>
   636b8:	ldr	r3, [sp, #44]	; 0x2c
   636bc:	add	r0, r1, #1
   636c0:	ldr	r7, [sp, #88]	; 0x58
   636c4:	mov	lr, r4
   636c8:	sub	r4, r5, r1
   636cc:	mul	r2, r3, r1
   636d0:	mul	r9, r3, r0
   636d4:	mov	r1, r8
   636d8:	mov	r0, r1
   636dc:	subs	r4, r4, #2
   636e0:	ldr	r3, [r0, r2]!
   636e4:	ldr	r0, [r0, #4]
   636e8:	str	r3, [r7]
   636ec:	str	r0, [r7, #4]
   636f0:	add	r0, r1, ip
   636f4:	ldr	r3, [r1, r9]!
   636f8:	ldr	r1, [r1, #4]
   636fc:	str	r3, [r7, #8]
   63700:	str	r1, [r7, #12]
   63704:	add	r7, r7, #16
   63708:	mov	r1, r0
   6370c:	bne	636d8 <GetDataSlab+0x2f57c>
   63710:	mov	r4, lr
   63714:	ldr	lr, [sp, #48]	; 0x30
   63718:	str	r7, [sp, #88]	; 0x58
   6371c:	b	635fc <GetDataSlab+0x2f4a0>
   63720:	ldr	r0, [sp, #28]
   63724:	mov	r2, #0
   63728:	cmp	r0, #0
   6372c:	beq	63764 <GetDataSlab+0x2f608>
   63730:	ldr	r3, [sp, #88]	; 0x58
   63734:	ldr	r1, [sp, #20]
   63738:	mov	r4, r8
   6373c:	mov	r9, #32
   63740:	add	r7, r4, ip
   63744:	vld1.64	{d16-d17}, [r4], sl
   63748:	add	r0, r3, #16
   6374c:	subs	r1, r1, #2
   63750:	add	r2, r2, #4
   63754:	vst1.64	{d16-d17}, [r3], r9
   63758:	vld1.64	{d16-d17}, [r7]
   6375c:	vst1.64	{d16-d17}, [r0]
   63760:	bne	63740 <GetDataSlab+0x2f5e4>
   63764:	ldr	r0, [sp, #36]	; 0x24
   63768:	cmp	r0, #0
   6376c:	beq	6378c <GetDataSlab+0x2f630>
   63770:	ldr	r0, [sp, #68]	; 0x44
   63774:	mul	r0, r2, r0
   63778:	add	r0, r8, r0, lsl #3
   6377c:	vld1.64	{d16-d17}, [r0]
   63780:	ldr	r0, [sp, #88]	; 0x58
   63784:	add	r0, r0, r2, lsl #3
   63788:	vst1.64	{d16-d17}, [r0]
   6378c:	ldr	r2, [sp, #32]
   63790:	ldr	r0, [sp, #88]	; 0x58
   63794:	ldr	r4, [sp, #24]
   63798:	add	r0, r0, r2, lsl #3
   6379c:	cmp	r5, r2
   637a0:	str	r0, [sp, #88]	; 0x58
   637a4:	bne	6369c <GetDataSlab+0x2f540>
   637a8:	b	635fc <GetDataSlab+0x2f4a0>
   637ac:	mov	r0, #0
   637b0:	mov	r6, r7
   637b4:	ldr	r1, [sp, #84]	; 0x54
   637b8:	cmp	r1, #13
   637bc:	bne	5b6a4 <GetDataSlab+0x27548>
   637c0:	b	6381c <GetDataSlab+0x2f6c0>
   637c4:	mov	r0, #0
   637c8:	mov	r6, r7
   637cc:	ldr	r1, [sp, #84]	; 0x54
   637d0:	cmp	r1, #13
   637d4:	bne	5b6a4 <GetDataSlab+0x27548>
   637d8:	b	638cc <GetDataSlab+0x2f770>
   637dc:	mov	r0, #0
   637e0:	str	r4, [sp, #88]	; 0x58
   637e4:	ldr	r1, [sp, #84]	; 0x54
   637e8:	cmp	r1, #13
   637ec:	bne	5b6a4 <GetDataSlab+0x27548>
   637f0:	b	6397c <GetDataSlab+0x2f820>
   637f4:	mov	r0, #0
   637f8:	str	r4, [sp, #88]	; 0x58
   637fc:	ldr	r1, [sp, #84]	; 0x54
   63800:	cmp	r1, #13
   63804:	bne	5b6a4 <GetDataSlab+0x27548>
   63808:	b	63a3c <GetDataSlab+0x2f8e0>
   6380c:	ldr	r4, [sp, #76]	; 0x4c
   63810:	ldr	r1, [sp, #84]	; 0x54
   63814:	cmp	r1, #13
   63818:	bne	5b6a4 <GetDataSlab+0x27548>
   6381c:	cmp	r4, #1
   63820:	mov	r0, r4
   63824:	blt	35058 <GetDataSlab+0xefc>
   63828:	ldr	r0, [fp, #12]
   6382c:	mov	r7, #0
   63830:	mov	r2, r0
   63834:	ldr	r0, [r0]
   63838:	ldr	r2, [r2, #4]
   6383c:	mla	r0, r8, r2, r0
   63840:	ldr	r2, [sp, #80]	; 0x50
   63844:	add	r2, r2, r0, lsl #3
   63848:	cmp	r5, #1
   6384c:	bge	63884 <GetDataSlab+0x2f728>
   63850:	ldr	r0, [sp, #72]	; 0x48
   63854:	mov	r1, r4
   63858:	mov	r4, r0
   6385c:	str	r0, [sp, #72]	; 0x48
   63860:	mul	r0, r8, r0
   63864:	add	r7, r7, #1
   63868:	mov	r4, r1
   6386c:	cmp	r7, r1
   63870:	add	r2, r2, r0, lsl #3
   63874:	mov	r0, #0
   63878:	bge	5b6a4 <GetDataSlab+0x27548>
   6387c:	cmp	r5, #1
   63880:	blt	63850 <GetDataSlab+0x2f6f4>
   63884:	mov	r0, #0
   63888:	ldr	r5, [sl]
   6388c:	mul	r5, r5, r0
   63890:	ldrb	r5, [r2, r5, lsl #3]
   63894:	strb	r5, [r6, r0]
   63898:	add	r0, r0, #1
   6389c:	ldr	r5, [r9]
   638a0:	cmp	r0, r5
   638a4:	blt	63888 <GetDataSlab+0x2f72c>
   638a8:	add	r6, r6, r0
   638ac:	ldr	r1, [r3]
   638b0:	ldr	r8, [lr]
   638b4:	ldr	r0, [ip]
   638b8:	b	63858 <GetDataSlab+0x2f6fc>
   638bc:	ldr	r4, [sp, #76]	; 0x4c
   638c0:	ldr	r1, [sp, #84]	; 0x54
   638c4:	cmp	r1, #13
   638c8:	bne	5b6a4 <GetDataSlab+0x27548>
   638cc:	cmp	r4, #1
   638d0:	mov	r0, r4
   638d4:	blt	35058 <GetDataSlab+0xefc>
   638d8:	ldr	r0, [fp, #12]
   638dc:	mov	r7, #0
   638e0:	mov	r2, r0
   638e4:	ldr	r0, [r0]
   638e8:	ldr	r2, [r2, #4]
   638ec:	mla	r0, r8, r2, r0
   638f0:	ldr	r2, [sp, #80]	; 0x50
   638f4:	add	r2, r2, r0, lsl #3
   638f8:	cmp	r5, #1
   638fc:	bge	63934 <GetDataSlab+0x2f7d8>
   63900:	ldr	r0, [sp, #72]	; 0x48
   63904:	mov	r1, r4
   63908:	mov	r4, r0
   6390c:	str	r0, [sp, #72]	; 0x48
   63910:	mul	r0, r8, r0
   63914:	add	r7, r7, #1
   63918:	mov	r4, r1
   6391c:	cmp	r7, r1
   63920:	add	r2, r2, r0, lsl #3
   63924:	mov	r0, #0
   63928:	bge	5b6a4 <GetDataSlab+0x27548>
   6392c:	cmp	r5, #1
   63930:	blt	63900 <GetDataSlab+0x2f7a4>
   63934:	mov	r0, #0
   63938:	ldr	r5, [sl]
   6393c:	mul	r5, r5, r0
   63940:	ldrb	r5, [r2, r5, lsl #3]
   63944:	strb	r5, [r6, r0]
   63948:	add	r0, r0, #1
   6394c:	ldr	r5, [r9]
   63950:	cmp	r0, r5
   63954:	blt	63938 <GetDataSlab+0x2f7dc>
   63958:	add	r6, r6, r0
   6395c:	ldr	r1, [r3]
   63960:	ldr	r8, [lr]
   63964:	ldr	r0, [ip]
   63968:	b	63908 <GetDataSlab+0x2f7ac>
   6396c:	ldr	r6, [sp, #76]	; 0x4c
   63970:	ldr	r1, [sp, #84]	; 0x54
   63974:	cmp	r1, #13
   63978:	bne	5b6a4 <GetDataSlab+0x27548>
   6397c:	cmp	r6, #1
   63980:	mov	r0, r6
   63984:	blt	35058 <GetDataSlab+0xefc>
   63988:	ldr	r0, [fp, #12]
   6398c:	mov	r7, #0
   63990:	mov	r2, r0
   63994:	ldr	r0, [r0]
   63998:	ldr	r2, [r2, #4]
   6399c:	mla	r0, r8, r2, r0
   639a0:	ldr	r2, [sp, #80]	; 0x50
   639a4:	add	r2, r2, r0, lsl #3
   639a8:	cmp	r5, #1
   639ac:	bge	639e4 <GetDataSlab+0x2f888>
   639b0:	ldr	r0, [sp, #72]	; 0x48
   639b4:	mov	r1, r6
   639b8:	mov	r4, r0
   639bc:	str	r0, [sp, #72]	; 0x48
   639c0:	mul	r0, r8, r0
   639c4:	add	r7, r7, #1
   639c8:	mov	r6, r1
   639cc:	cmp	r7, r1
   639d0:	add	r2, r2, r0, lsl #3
   639d4:	mov	r0, #0
   639d8:	bge	5b6a4 <GetDataSlab+0x27548>
   639dc:	cmp	r5, #1
   639e0:	blt	639b0 <GetDataSlab+0x2f854>
   639e4:	ldr	r4, [sp, #88]	; 0x58
   639e8:	mov	r0, #0
   639ec:	mov	r6, #0
   639f0:	ldr	r5, [sl]
   639f4:	add	r0, r0, #4
   639f8:	mul	r5, r5, r6
   639fc:	ldr	r5, [r2, r5, lsl #3]
   63a00:	str	r5, [r4, r6, lsl #2]
   63a04:	add	r6, r6, #1
   63a08:	ldr	r5, [r9]
   63a0c:	cmp	r6, r5
   63a10:	blt	639f0 <GetDataSlab+0x2f894>
   63a14:	add	r4, r4, r0
   63a18:	ldr	r1, [r3]
   63a1c:	ldr	r8, [lr]
   63a20:	ldr	r0, [ip]
   63a24:	str	r4, [sp, #88]	; 0x58
   63a28:	b	639b8 <GetDataSlab+0x2f85c>
   63a2c:	ldr	r6, [sp, #76]	; 0x4c
   63a30:	ldr	r1, [sp, #84]	; 0x54
   63a34:	cmp	r1, #13
   63a38:	bne	5b6a4 <GetDataSlab+0x27548>
   63a3c:	cmp	r6, #1
   63a40:	mov	r0, r6
   63a44:	blt	35058 <GetDataSlab+0xefc>
   63a48:	ldr	r0, [fp, #12]
   63a4c:	mov	r7, #0
   63a50:	mov	r2, r0
   63a54:	ldr	r0, [r0]
   63a58:	ldr	r2, [r2, #4]
   63a5c:	mla	r0, r8, r2, r0
   63a60:	ldr	r2, [sp, #80]	; 0x50
   63a64:	add	r2, r2, r0, lsl #3
   63a68:	cmp	r5, #1
   63a6c:	bge	63aa4 <GetDataSlab+0x2f948>
   63a70:	ldr	r0, [sp, #72]	; 0x48
   63a74:	mov	r1, r6
   63a78:	mov	r4, r0
   63a7c:	str	r0, [sp, #72]	; 0x48
   63a80:	mul	r0, r8, r0
   63a84:	add	r7, r7, #1
   63a88:	mov	r6, r1
   63a8c:	cmp	r7, r1
   63a90:	add	r2, r2, r0, lsl #3
   63a94:	mov	r0, #0
   63a98:	bge	5b6a4 <GetDataSlab+0x27548>
   63a9c:	cmp	r5, #1
   63aa0:	blt	63a70 <GetDataSlab+0x2f914>
   63aa4:	ldr	r4, [sp, #88]	; 0x58
   63aa8:	mov	r0, #0
   63aac:	mov	r6, #0
   63ab0:	ldr	r5, [sl]
   63ab4:	add	r0, r0, #4
   63ab8:	mul	r5, r5, r6
   63abc:	ldr	r5, [r2, r5, lsl #3]
   63ac0:	str	r5, [r4, r6, lsl #2]
   63ac4:	add	r6, r6, #1
   63ac8:	ldr	r5, [r9]
   63acc:	cmp	r6, r5
   63ad0:	blt	63ab0 <GetDataSlab+0x2f954>
   63ad4:	add	r4, r4, r0
   63ad8:	ldr	r1, [r3]
   63adc:	ldr	r8, [lr]
   63ae0:	ldr	r0, [ip]
   63ae4:	str	r4, [sp, #88]	; 0x58
   63ae8:	b	63a78 <GetDataSlab+0x2f91c>
   63aec:	mov	r0, #0
   63af0:	str	sl, [sp, #88]	; 0x58
   63af4:	cmp	r7, #13
   63af8:	bne	5b6a4 <GetDataSlab+0x27548>
   63afc:	ldr	r0, [sp, #76]	; 0x4c
   63b00:	cmp	r0, #1
   63b04:	blt	35058 <GetDataSlab+0xefc>
   63b08:	cmp	r5, #1
   63b0c:	mov	r0, #0
   63b10:	blt	5b6a4 <GetDataSlab+0x27548>
   63b14:	ldr	r0, [sp, #60]	; 0x3c
   63b18:	ldr	r1, [sp, #56]	; 0x38
   63b1c:	cmp	r5, #1
   63b20:	mla	r0, r1, r8, r0
   63b24:	ldr	r1, [sp, #80]	; 0x50
   63b28:	add	r0, r1, r0, lsl #3
   63b2c:	mov	r1, #1
   63b30:	str	r0, [sp, #80]	; 0x50
   63b34:	sub	r0, r5, #2
   63b38:	add	r1, r1, r0, lsr #1
   63b3c:	lsr	r0, r0, #1
   63b40:	str	r0, [sp, #44]	; 0x2c
   63b44:	and	r2, r1, #1
   63b48:	sub	r1, r1, r2
   63b4c:	str	r2, [sp, #52]	; 0x34
   63b50:	mov	r2, #0
   63b54:	str	r1, [sp, #36]	; 0x24
   63b58:	ldr	r1, [sp, #68]	; 0x44
   63b5c:	str	r2, [sp, #64]	; 0x40
   63b60:	mov	r2, #0
   63b64:	movwhi	r2, #1
   63b68:	mov	r3, r1
   63b6c:	sub	r1, r1, #1
   63b70:	clz	r1, r1
   63b74:	lsr	r1, r1, #5
   63b78:	and	r1, r2, r1
   63b7c:	str	r1, [sp, #60]	; 0x3c
   63b80:	ldr	r1, [sp, #72]	; 0x48
   63b84:	mul	r1, r1, r8
   63b88:	lsl	r1, r1, #3
   63b8c:	str	r1, [sp, #72]	; 0x48
   63b90:	lsl	r1, r3, #3
   63b94:	str	r1, [sp, #40]	; 0x28
   63b98:	lsl	r1, r3, #5
   63b9c:	str	r1, [sp, #84]	; 0x54
   63ba0:	lsl	r1, r3, #4
   63ba4:	str	r1, [sp, #92]	; 0x5c
   63ba8:	and	r1, r5, #1
   63bac:	str	r1, [sp, #56]	; 0x38
   63bb0:	bic	r1, r5, #1
   63bb4:	str	r1, [sp, #48]	; 0x30
   63bb8:	ldr	r0, [sp, #60]	; 0x3c
   63bbc:	cmp	r0, #0
   63bc0:	bne	63bf8 <GetDataSlab+0x2fa9c>
   63bc4:	b	63d18 <GetDataSlab+0x2fbbc>
   63bc8:	ldr	r1, [sp, #64]	; 0x40
   63bcc:	ldr	r0, [sp, #72]	; 0x48
   63bd0:	add	r1, r1, #1
   63bd4:	add	r7, r7, r0
   63bd8:	mov	r0, #0
   63bdc:	cmp	r1, r3
   63be0:	str	r7, [sp, #80]	; 0x50
   63be4:	str	r1, [sp, #64]	; 0x40
   63be8:	beq	5b6a4 <GetDataSlab+0x27548>
   63bec:	ldr	r0, [sp, #60]	; 0x3c
   63bf0:	cmp	r0, #0
   63bf4:	beq	63d18 <GetDataSlab+0x2fbbc>
   63bf8:	ldr	r0, [sp, #44]	; 0x2c
   63bfc:	ldr	r8, [sp, #80]	; 0x50
   63c00:	mov	r9, #0
   63c04:	cmp	r0, #0
   63c08:	beq	63ca4 <GetDataSlab+0x2fb48>
   63c0c:	ldr	sl, [sp, #88]	; 0x58
   63c10:	ldr	r6, [sp, #36]	; 0x24
   63c14:	mov	r7, r8
   63c18:	mov	r4, sl
   63c1c:	ldr	r0, [sp, #84]	; 0x54
   63c20:	vld1.64	{d8-d9}, [r7], r0
   63c24:	vmov.32	r0, d9[0]
   63c28:	vmov.32	r1, d9[1]
   63c2c:	bl	7152c <__aeabi_ul2d>
   63c30:	vmov.32	r2, d8[0]
   63c34:	vmov.32	r3, d8[1]
   63c38:	vmov	d9, r0, r1
   63c3c:	mov	r0, r2
   63c40:	mov	r1, r3
   63c44:	bl	7152c <__aeabi_ul2d>
   63c48:	vmov	d8, r0, r1
   63c4c:	mov	r0, #32
   63c50:	vst1.64	{d8-d9}, [r4], r0
   63c54:	ldr	r0, [sp, #92]	; 0x5c
   63c58:	add	r0, r8, r0
   63c5c:	vld1.64	{d8-d9}, [r0]
   63c60:	vmov.32	r0, d9[0]
   63c64:	vmov.32	r1, d9[1]
   63c68:	bl	7152c <__aeabi_ul2d>
   63c6c:	vmov.32	r2, d8[0]
   63c70:	vmov.32	r3, d8[1]
   63c74:	vmov	d9, r0, r1
   63c78:	mov	r0, r2
   63c7c:	mov	r1, r3
   63c80:	bl	7152c <__aeabi_ul2d>
   63c84:	vmov	d8, r0, r1
   63c88:	add	r0, sl, #16
   63c8c:	subs	r6, r6, #2
   63c90:	add	r9, r9, #4
   63c94:	mov	r8, r7
   63c98:	mov	sl, r4
   63c9c:	vst1.64	{d8-d9}, [r0]
   63ca0:	bne	63c1c <GetDataSlab+0x2fac0>
   63ca4:	ldr	r0, [sp, #52]	; 0x34
   63ca8:	ldr	r4, [sp, #88]	; 0x58
   63cac:	ldr	r7, [sp, #80]	; 0x50
   63cb0:	cmp	r0, #0
   63cb4:	beq	63cf8 <GetDataSlab+0x2fb9c>
   63cb8:	ldr	r0, [sp, #68]	; 0x44
   63cbc:	mul	r0, r9, r0
   63cc0:	add	r0, r7, r0, lsl #3
   63cc4:	vld1.64	{d8-d9}, [r0]
   63cc8:	vmov.32	r0, d9[0]
   63ccc:	vmov.32	r1, d9[1]
   63cd0:	bl	7152c <__aeabi_ul2d>
   63cd4:	vmov.32	r2, d8[0]
   63cd8:	vmov.32	r3, d8[1]
   63cdc:	vmov	d9, r0, r1
   63ce0:	mov	r0, r2
   63ce4:	mov	r1, r3
   63ce8:	bl	7152c <__aeabi_ul2d>
   63cec:	vmov	d8, r0, r1
   63cf0:	add	r0, r4, r9, lsl #3
   63cf4:	vst1.64	{d8-d9}, [r0]
   63cf8:	ldr	r0, [sp, #48]	; 0x30
   63cfc:	ldr	r3, [sp, #76]	; 0x4c
   63d00:	add	r4, r4, r0, lsl #3
   63d04:	cmp	r5, r0
   63d08:	str	r4, [sp, #88]	; 0x58
   63d0c:	mov	r4, r0
   63d10:	beq	63bc8 <GetDataSlab+0x2fa6c>
   63d14:	b	63d24 <GetDataSlab+0x2fbc8>
   63d18:	ldr	r3, [sp, #76]	; 0x4c
   63d1c:	ldr	r7, [sp, #80]	; 0x50
   63d20:	mov	r4, #0
   63d24:	ldr	r0, [sp, #56]	; 0x38
   63d28:	cmp	r0, #0
   63d2c:	bne	63d44 <GetDataSlab+0x2fbe8>
   63d30:	mov	r0, r4
   63d34:	orr	r1, r4, #1
   63d38:	cmp	r5, r1
   63d3c:	beq	63bc8 <GetDataSlab+0x2fa6c>
   63d40:	b	63d80 <GetDataSlab+0x2fc24>
   63d44:	ldr	r0, [sp, #68]	; 0x44
   63d48:	mov	r1, r7
   63d4c:	mul	r0, r4, r0
   63d50:	ldr	r0, [r1, r0, lsl #3]!
   63d54:	ldr	r1, [r1, #4]
   63d58:	bl	7152c <__aeabi_ul2d>
   63d5c:	ldr	r2, [sp, #88]	; 0x58
   63d60:	ldr	r3, [sp, #76]	; 0x4c
   63d64:	strd	r0, [r2]
   63d68:	orr	r0, r4, #1
   63d6c:	add	r2, r2, #8
   63d70:	str	r2, [sp, #88]	; 0x58
   63d74:	orr	r1, r4, #1
   63d78:	cmp	r5, r1
   63d7c:	beq	63bc8 <GetDataSlab+0x2fa6c>
   63d80:	ldr	r1, [sp, #40]	; 0x28
   63d84:	sub	r6, r5, r0
   63d88:	str	r7, [sp, #80]	; 0x50
   63d8c:	mov	r4, r7
   63d90:	ldr	r7, [sp, #88]	; 0x58
   63d94:	ldr	sl, [sp, #92]	; 0x5c
   63d98:	mul	r8, r1, r0
   63d9c:	add	r0, r0, #1
   63da0:	mul	r9, r1, r0
   63da4:	mov	r1, r4
   63da8:	ldr	r0, [r1, r8]!
   63dac:	ldr	r1, [r1, #4]
   63db0:	bl	7152c <__aeabi_ul2d>
   63db4:	strd	r0, [r7]
   63db8:	mov	r1, r4
   63dbc:	ldr	r0, [r1, r9]!
   63dc0:	ldr	r1, [r1, #4]
   63dc4:	bl	7152c <__aeabi_ul2d>
   63dc8:	strd	r0, [r7, #8]
   63dcc:	add	r4, r4, sl
   63dd0:	add	r7, r7, #16
   63dd4:	subs	r6, r6, #2
   63dd8:	bne	63da4 <GetDataSlab+0x2fc48>
   63ddc:	str	r7, [sp, #88]	; 0x58
   63de0:	ldr	r3, [sp, #76]	; 0x4c
   63de4:	ldr	r7, [sp, #80]	; 0x50
   63de8:	b	63bc8 <GetDataSlab+0x2fa6c>
   63dec:	mov	r0, #0
   63df0:	str	r9, [sp, #88]	; 0x58
   63df4:	cmp	r7, #13
   63df8:	bne	5b6a4 <GetDataSlab+0x27548>
   63dfc:	ldr	r0, [sp, #76]	; 0x4c
   63e00:	cmp	r0, #1
   63e04:	blt	35058 <GetDataSlab+0xefc>
   63e08:	cmp	r5, #1
   63e0c:	mov	r0, #0
   63e10:	blt	5b6a4 <GetDataSlab+0x27548>
   63e14:	ldr	r0, [sp, #60]	; 0x3c
   63e18:	ldr	r1, [sp, #56]	; 0x38
   63e1c:	cmp	r5, #1
   63e20:	mla	r0, r1, r8, r0
   63e24:	ldr	r1, [sp, #80]	; 0x50
   63e28:	add	r0, r1, r0, lsl #3
   63e2c:	mov	r1, #1
   63e30:	str	r0, [sp, #80]	; 0x50
   63e34:	sub	r0, r5, #2
   63e38:	add	r1, r1, r0, lsr #1
   63e3c:	lsr	r0, r0, #1
   63e40:	str	r0, [sp, #44]	; 0x2c
   63e44:	and	r2, r1, #1
   63e48:	sub	r1, r1, r2
   63e4c:	str	r2, [sp, #52]	; 0x34
   63e50:	mov	r2, #0
   63e54:	str	r1, [sp, #36]	; 0x24
   63e58:	ldr	r1, [sp, #68]	; 0x44
   63e5c:	str	r2, [sp, #64]	; 0x40
   63e60:	mov	r2, #0
   63e64:	movwhi	r2, #1
   63e68:	mov	r3, r1
   63e6c:	sub	r1, r1, #1
   63e70:	clz	r1, r1
   63e74:	lsr	r1, r1, #5
   63e78:	and	r1, r2, r1
   63e7c:	str	r1, [sp, #60]	; 0x3c
   63e80:	ldr	r1, [sp, #72]	; 0x48
   63e84:	mul	r1, r1, r8
   63e88:	lsl	r1, r1, #3
   63e8c:	str	r1, [sp, #72]	; 0x48
   63e90:	lsl	r1, r3, #3
   63e94:	str	r1, [sp, #40]	; 0x28
   63e98:	lsl	r1, r3, #5
   63e9c:	str	r1, [sp, #84]	; 0x54
   63ea0:	lsl	r1, r3, #4
   63ea4:	str	r1, [sp, #92]	; 0x5c
   63ea8:	and	r1, r5, #1
   63eac:	str	r1, [sp, #56]	; 0x38
   63eb0:	bic	r1, r5, #1
   63eb4:	str	r1, [sp, #48]	; 0x30
   63eb8:	ldr	r0, [sp, #60]	; 0x3c
   63ebc:	cmp	r0, #0
   63ec0:	bne	63ef8 <GetDataSlab+0x2fd9c>
   63ec4:	b	64008 <GetDataSlab+0x2feac>
   63ec8:	ldr	r1, [sp, #64]	; 0x40
   63ecc:	ldr	r0, [sp, #72]	; 0x48
   63ed0:	add	r1, r1, #1
   63ed4:	add	r7, r7, r0
   63ed8:	mov	r0, #0
   63edc:	cmp	r1, r2
   63ee0:	str	r7, [sp, #80]	; 0x50
   63ee4:	str	r1, [sp, #64]	; 0x40
   63ee8:	beq	5b6a4 <GetDataSlab+0x27548>
   63eec:	ldr	r0, [sp, #60]	; 0x3c
   63ef0:	cmp	r0, #0
   63ef4:	beq	64008 <GetDataSlab+0x2feac>
   63ef8:	ldr	r0, [sp, #44]	; 0x2c
   63efc:	ldr	r8, [sp, #80]	; 0x50
   63f00:	mov	r9, #0
   63f04:	cmp	r0, #0
   63f08:	beq	63f98 <GetDataSlab+0x2fe3c>
   63f0c:	ldr	sl, [sp, #88]	; 0x58
   63f10:	ldr	r6, [sp, #36]	; 0x24
   63f14:	mov	r7, r8
   63f18:	mov	r4, sl
   63f1c:	ldr	r0, [sp, #84]	; 0x54
   63f20:	vld1.64	{d8-d9}, [r7], r0
   63f24:	vmov.32	r0, d9[0]
   63f28:	vmov.32	r1, d9[1]
   63f2c:	bl	71764 <__aeabi_ul2f>
   63f30:	vmov.32	r2, d8[0]
   63f34:	vmov.32	r1, d8[1]
   63f38:	vmov	s17, r0
   63f3c:	mov	r0, r2
   63f40:	bl	71764 <__aeabi_ul2f>
   63f44:	vmov	s16, r0
   63f48:	mov	r0, #16
   63f4c:	vst1.32	{d8}, [r4], r0
   63f50:	ldr	r0, [sp, #92]	; 0x5c
   63f54:	add	r0, r8, r0
   63f58:	vld1.64	{d8-d9}, [r0]
   63f5c:	vmov.32	r0, d9[0]
   63f60:	vmov.32	r1, d9[1]
   63f64:	bl	71764 <__aeabi_ul2f>
   63f68:	vmov.32	r2, d8[0]
   63f6c:	vmov.32	r1, d8[1]
   63f70:	vmov	s17, r0
   63f74:	mov	r0, r2
   63f78:	bl	71764 <__aeabi_ul2f>
   63f7c:	vmov	s16, r0
   63f80:	subs	r6, r6, #2
   63f84:	add	r9, r9, #4
   63f88:	mov	r8, r7
   63f8c:	vstr	d8, [sl, #8]
   63f90:	mov	sl, r4
   63f94:	bne	63f1c <GetDataSlab+0x2fdc0>
   63f98:	ldr	r0, [sp, #52]	; 0x34
   63f9c:	ldr	r4, [sp, #88]	; 0x58
   63fa0:	ldr	r7, [sp, #80]	; 0x50
   63fa4:	cmp	r0, #0
   63fa8:	beq	63fe8 <GetDataSlab+0x2fe8c>
   63fac:	ldr	r0, [sp, #68]	; 0x44
   63fb0:	mul	r0, r9, r0
   63fb4:	add	r0, r7, r0, lsl #3
   63fb8:	vld1.64	{d8-d9}, [r0]
   63fbc:	vmov.32	r0, d9[0]
   63fc0:	vmov.32	r1, d9[1]
   63fc4:	bl	71764 <__aeabi_ul2f>
   63fc8:	vmov.32	r2, d8[0]
   63fcc:	vmov.32	r1, d8[1]
   63fd0:	vmov	s17, r0
   63fd4:	mov	r0, r2
   63fd8:	bl	71764 <__aeabi_ul2f>
   63fdc:	vmov	s16, r0
   63fe0:	add	r0, r4, r9, lsl #2
   63fe4:	vstr	d8, [r0]
   63fe8:	ldr	r0, [sp, #48]	; 0x30
   63fec:	ldr	r2, [sp, #76]	; 0x4c
   63ff0:	add	r4, r4, r0, lsl #2
   63ff4:	cmp	r5, r0
   63ff8:	str	r4, [sp, #88]	; 0x58
   63ffc:	mov	r4, r0
   64000:	beq	63ec8 <GetDataSlab+0x2fd6c>
   64004:	b	64014 <GetDataSlab+0x2feb8>
   64008:	ldr	r2, [sp, #76]	; 0x4c
   6400c:	ldr	r7, [sp, #80]	; 0x50
   64010:	mov	r4, #0
   64014:	ldr	r0, [sp, #56]	; 0x38
   64018:	cmp	r0, #0
   6401c:	bne	64034 <GetDataSlab+0x2fed8>
   64020:	mov	r0, r4
   64024:	orr	r1, r4, #1
   64028:	cmp	r5, r1
   6402c:	beq	63ec8 <GetDataSlab+0x2fd6c>
   64030:	b	6406c <GetDataSlab+0x2ff10>
   64034:	ldr	r0, [sp, #68]	; 0x44
   64038:	mov	r1, r7
   6403c:	mul	r0, r4, r0
   64040:	ldr	r0, [r1, r0, lsl #3]!
   64044:	ldr	r1, [r1, #4]
   64048:	bl	71764 <__aeabi_ul2f>
   6404c:	ldr	r1, [sp, #88]	; 0x58
   64050:	ldr	r2, [sp, #76]	; 0x4c
   64054:	str	r0, [r1], #4
   64058:	orr	r0, r4, #1
   6405c:	str	r1, [sp, #88]	; 0x58
   64060:	orr	r1, r4, #1
   64064:	cmp	r5, r1
   64068:	beq	63ec8 <GetDataSlab+0x2fd6c>
   6406c:	ldr	r1, [sp, #40]	; 0x28
   64070:	sub	r6, r5, r0
   64074:	str	r7, [sp, #80]	; 0x50
   64078:	mov	r4, r7
   6407c:	ldr	r7, [sp, #88]	; 0x58
   64080:	ldr	sl, [sp, #92]	; 0x5c
   64084:	mul	r8, r1, r0
   64088:	add	r0, r0, #1
   6408c:	mul	r9, r1, r0
   64090:	mov	r1, r4
   64094:	ldr	r0, [r1, r8]!
   64098:	ldr	r1, [r1, #4]
   6409c:	bl	71764 <__aeabi_ul2f>
   640a0:	str	r0, [r7]
   640a4:	mov	r1, r4
   640a8:	ldr	r0, [r1, r9]!
   640ac:	ldr	r1, [r1, #4]
   640b0:	bl	71764 <__aeabi_ul2f>
   640b4:	str	r0, [r7, #4]
   640b8:	add	r4, r4, sl
   640bc:	add	r7, r7, #8
   640c0:	subs	r6, r6, #2
   640c4:	bne	64090 <GetDataSlab+0x2ff34>
   640c8:	str	r7, [sp, #88]	; 0x58
   640cc:	ldr	r2, [sp, #76]	; 0x4c
   640d0:	ldr	r7, [sp, #80]	; 0x50
   640d4:	b	63ec8 <GetDataSlab+0x2fd6c>
   640d8:	mov	r0, #0
   640dc:	ldr	r1, [sp, #84]	; 0x54
   640e0:	cmp	r1, #13
   640e4:	bne	5b6a4 <GetDataSlab+0x27548>
   640e8:	ldr	r0, [sp, #76]	; 0x4c
   640ec:	cmp	r0, #1
   640f0:	blt	35058 <GetDataSlab+0xefc>
   640f4:	cmp	r5, #1
   640f8:	mov	r0, #0
   640fc:	blt	5b6a4 <GetDataSlab+0x27548>
   64100:	ldr	r0, [sp, #60]	; 0x3c
   64104:	ldr	r1, [sp, #56]	; 0x38
   64108:	cmp	r5, #1
   6410c:	mla	r0, r1, r8, r0
   64110:	ldr	r1, [sp, #80]	; 0x50
   64114:	add	sl, r1, r0, lsl #3
   64118:	sub	r0, r5, #2
   6411c:	mov	r1, #1
   64120:	add	r1, r1, r0, lsr #1
   64124:	lsr	r0, r0, #1
   64128:	str	r0, [sp, #60]	; 0x3c
   6412c:	and	r2, r1, #1
   64130:	sub	r1, r1, r2
   64134:	str	r2, [sp, #64]	; 0x40
   64138:	mov	r2, #0
   6413c:	str	r1, [sp, #52]	; 0x34
   64140:	ldr	r1, [sp, #68]	; 0x44
   64144:	str	r2, [sp, #92]	; 0x5c
   64148:	mov	r2, #0
   6414c:	movwhi	r2, #1
   64150:	mov	r3, r1
   64154:	sub	r1, r1, #1
   64158:	clz	r1, r1
   6415c:	lsr	r1, r1, #5
   64160:	and	r1, r2, r1
   64164:	lsl	r2, r3, #5
   64168:	str	r1, [sp, #88]	; 0x58
   6416c:	ldr	r1, [sp, #72]	; 0x48
   64170:	mul	r1, r1, r8
   64174:	lsl	r1, r1, #3
   64178:	str	r1, [sp, #84]	; 0x54
   6417c:	lsl	r1, r3, #3
   64180:	lsl	r3, r3, #4
   64184:	str	r1, [sp, #56]	; 0x38
   64188:	and	r1, r5, #1
   6418c:	str	r1, [sp, #80]	; 0x50
   64190:	bic	r1, r5, #1
   64194:	str	r1, [sp, #72]	; 0x48
   64198:	ldr	r0, [sp, #88]	; 0x58
   6419c:	cmp	r0, #0
   641a0:	bne	641d4 <GetDataSlab+0x30078>
   641a4:	b	64234 <GetDataSlab+0x300d8>
   641a8:	ldr	r1, [sp, #92]	; 0x5c
   641ac:	ldr	r0, [sp, #84]	; 0x54
   641b0:	add	r1, r1, #1
   641b4:	add	sl, sl, r0
   641b8:	mov	r0, #0
   641bc:	cmp	r1, lr
   641c0:	str	r1, [sp, #92]	; 0x5c
   641c4:	beq	5b6a4 <GetDataSlab+0x27548>
   641c8:	ldr	r0, [sp, #88]	; 0x58
   641cc:	cmp	r0, #0
   641d0:	beq	64234 <GetDataSlab+0x300d8>
   641d4:	ldr	r0, [sp, #60]	; 0x3c
   641d8:	cmp	r0, #0
   641dc:	beq	64270 <GetDataSlab+0x30114>
   641e0:	ldr	r8, [sp, #52]	; 0x34
   641e4:	mov	r0, #0
   641e8:	mov	r4, sl
   641ec:	mov	lr, ip
   641f0:	mov	r9, sl
   641f4:	vld1.64	{d16-d17}, [r9], r2
   641f8:	add	r1, r4, r3
   641fc:	subs	r8, r8, #2
   64200:	add	r0, r0, #4
   64204:	mov	r4, r9
   64208:	vmovn.i64	d16, q8
   6420c:	vuzp.16	d16, d17
   64210:	vst1.32	{d16[0]}, [lr]
   64214:	vld1.64	{d16-d17}, [r1]
   64218:	add	r1, lr, #4
   6421c:	add	lr, lr, #8
   64220:	vmovn.i64	d16, q8
   64224:	vuzp.16	d16, d17
   64228:	vst1.32	{d16[0]}, [r1]
   6422c:	bne	641f4 <GetDataSlab+0x30098>
   64230:	b	64274 <GetDataSlab+0x30118>
   64234:	ldr	lr, [sp, #76]	; 0x4c
   64238:	mov	r0, #0
   6423c:	ldr	r1, [sp, #80]	; 0x50
   64240:	cmp	r1, #0
   64244:	beq	642c0 <GetDataSlab+0x30164>
   64248:	ldr	r1, [sp, #68]	; 0x44
   6424c:	mul	r1, r0, r1
   64250:	add	r1, sl, r1, lsl #3
   64254:	ldrh	r1, [r1]
   64258:	strh	r1, [ip], #2
   6425c:	orr	r1, r0, #1
   64260:	orr	r0, r0, #1
   64264:	cmp	r5, r0
   64268:	bne	642d0 <GetDataSlab+0x30174>
   6426c:	b	641a8 <GetDataSlab+0x3004c>
   64270:	mov	r0, #0
   64274:	ldr	r1, [sp, #64]	; 0x40
   64278:	cmp	r1, #0
   6427c:	beq	642a0 <GetDataSlab+0x30144>
   64280:	ldr	r1, [sp, #68]	; 0x44
   64284:	mul	r1, r0, r1
   64288:	add	r0, ip, r0, lsl #1
   6428c:	add	r1, sl, r1, lsl #3
   64290:	vld1.64	{d16-d17}, [r1]
   64294:	vmovn.i64	d16, q8
   64298:	vuzp.16	d16, d17
   6429c:	vst1.32	{d16[0]}, [r0]
   642a0:	ldr	r0, [sp, #72]	; 0x48
   642a4:	ldr	lr, [sp, #76]	; 0x4c
   642a8:	add	ip, ip, r0, lsl #1
   642ac:	cmp	r5, r0
   642b0:	beq	641a8 <GetDataSlab+0x3004c>
   642b4:	ldr	r1, [sp, #80]	; 0x50
   642b8:	cmp	r1, #0
   642bc:	bne	64248 <GetDataSlab+0x300ec>
   642c0:	mov	r1, r0
   642c4:	orr	r0, r0, #1
   642c8:	cmp	r5, r0
   642cc:	beq	641a8 <GetDataSlab+0x3004c>
   642d0:	ldr	r6, [sp, #56]	; 0x38
   642d4:	sub	r4, r5, r1
   642d8:	mul	r0, r6, r1
   642dc:	add	r1, r1, #1
   642e0:	mul	r6, r6, r1
   642e4:	mov	r1, sl
   642e8:	add	r7, r1, r0
   642ec:	subs	r4, r4, #2
   642f0:	ldrh	r7, [r7]
   642f4:	strh	r7, [ip]
   642f8:	add	r7, r1, r6
   642fc:	add	r1, r1, r3
   64300:	ldrh	r7, [r7]
   64304:	strh	r7, [ip, #2]
   64308:	add	ip, ip, #4
   6430c:	bne	642e8 <GetDataSlab+0x3018c>
   64310:	b	641a8 <GetDataSlab+0x3004c>
   64314:	mov	r0, #0
   64318:	ldr	r1, [sp, #84]	; 0x54
   6431c:	cmp	r1, #13
   64320:	bne	5b6a4 <GetDataSlab+0x27548>
   64324:	ldr	r0, [sp, #76]	; 0x4c
   64328:	cmp	r0, #1
   6432c:	blt	35058 <GetDataSlab+0xefc>
   64330:	cmp	r5, #1
   64334:	mov	r0, #0
   64338:	blt	5b6a4 <GetDataSlab+0x27548>
   6433c:	ldr	r0, [sp, #60]	; 0x3c
   64340:	ldr	r1, [sp, #56]	; 0x38
   64344:	cmp	r5, #1
   64348:	mla	r0, r1, r8, r0
   6434c:	ldr	r1, [sp, #80]	; 0x50
   64350:	add	sl, r1, r0, lsl #3
   64354:	sub	r0, r5, #2
   64358:	mov	r1, #1
   6435c:	add	r1, r1, r0, lsr #1
   64360:	lsr	r0, r0, #1
   64364:	str	r0, [sp, #60]	; 0x3c
   64368:	and	r2, r1, #1
   6436c:	sub	r1, r1, r2
   64370:	str	r2, [sp, #64]	; 0x40
   64374:	mov	r2, #0
   64378:	str	r1, [sp, #52]	; 0x34
   6437c:	ldr	r1, [sp, #68]	; 0x44
   64380:	str	r2, [sp, #92]	; 0x5c
   64384:	mov	r2, #0
   64388:	movwhi	r2, #1
   6438c:	mov	r3, r1
   64390:	sub	r1, r1, #1
   64394:	clz	r1, r1
   64398:	lsr	r1, r1, #5
   6439c:	and	r1, r2, r1
   643a0:	lsl	r2, r3, #5
   643a4:	str	r1, [sp, #88]	; 0x58
   643a8:	ldr	r1, [sp, #72]	; 0x48
   643ac:	mul	r1, r1, r8
   643b0:	lsl	r1, r1, #3
   643b4:	str	r1, [sp, #84]	; 0x54
   643b8:	lsl	r1, r3, #3
   643bc:	lsl	r3, r3, #4
   643c0:	str	r1, [sp, #56]	; 0x38
   643c4:	and	r1, r5, #1
   643c8:	str	r1, [sp, #80]	; 0x50
   643cc:	bic	r1, r5, #1
   643d0:	str	r1, [sp, #72]	; 0x48
   643d4:	ldr	r0, [sp, #88]	; 0x58
   643d8:	cmp	r0, #0
   643dc:	bne	64410 <GetDataSlab+0x302b4>
   643e0:	b	64470 <GetDataSlab+0x30314>
   643e4:	ldr	r1, [sp, #92]	; 0x5c
   643e8:	ldr	r0, [sp, #84]	; 0x54
   643ec:	add	r1, r1, #1
   643f0:	add	sl, sl, r0
   643f4:	mov	r0, #0
   643f8:	cmp	r1, lr
   643fc:	str	r1, [sp, #92]	; 0x5c
   64400:	beq	5b6a4 <GetDataSlab+0x27548>
   64404:	ldr	r0, [sp, #88]	; 0x58
   64408:	cmp	r0, #0
   6440c:	beq	64470 <GetDataSlab+0x30314>
   64410:	ldr	r0, [sp, #60]	; 0x3c
   64414:	cmp	r0, #0
   64418:	beq	644ac <GetDataSlab+0x30350>
   6441c:	ldr	r8, [sp, #52]	; 0x34
   64420:	mov	r0, #0
   64424:	mov	r4, sl
   64428:	mov	lr, ip
   6442c:	mov	r9, sl
   64430:	vld1.64	{d16-d17}, [r9], r2
   64434:	add	r1, r4, r3
   64438:	subs	r8, r8, #2
   6443c:	add	r0, r0, #4
   64440:	mov	r4, r9
   64444:	vmovn.i64	d16, q8
   64448:	vuzp.16	d16, d17
   6444c:	vst1.32	{d16[0]}, [lr]
   64450:	vld1.64	{d16-d17}, [r1]
   64454:	add	r1, lr, #4
   64458:	add	lr, lr, #8
   6445c:	vmovn.i64	d16, q8
   64460:	vuzp.16	d16, d17
   64464:	vst1.32	{d16[0]}, [r1]
   64468:	bne	64430 <GetDataSlab+0x302d4>
   6446c:	b	644b0 <GetDataSlab+0x30354>
   64470:	ldr	lr, [sp, #76]	; 0x4c
   64474:	mov	r0, #0
   64478:	ldr	r1, [sp, #80]	; 0x50
   6447c:	cmp	r1, #0
   64480:	beq	644fc <GetDataSlab+0x303a0>
   64484:	ldr	r1, [sp, #68]	; 0x44
   64488:	mul	r1, r0, r1
   6448c:	add	r1, sl, r1, lsl #3
   64490:	ldrh	r1, [r1]
   64494:	strh	r1, [ip], #2
   64498:	orr	r1, r0, #1
   6449c:	orr	r0, r0, #1
   644a0:	cmp	r5, r0
   644a4:	bne	6450c <GetDataSlab+0x303b0>
   644a8:	b	643e4 <GetDataSlab+0x30288>
   644ac:	mov	r0, #0
   644b0:	ldr	r1, [sp, #64]	; 0x40
   644b4:	cmp	r1, #0
   644b8:	beq	644dc <GetDataSlab+0x30380>
   644bc:	ldr	r1, [sp, #68]	; 0x44
   644c0:	mul	r1, r0, r1
   644c4:	add	r0, ip, r0, lsl #1
   644c8:	add	r1, sl, r1, lsl #3
   644cc:	vld1.64	{d16-d17}, [r1]
   644d0:	vmovn.i64	d16, q8
   644d4:	vuzp.16	d16, d17
   644d8:	vst1.32	{d16[0]}, [r0]
   644dc:	ldr	r0, [sp, #72]	; 0x48
   644e0:	ldr	lr, [sp, #76]	; 0x4c
   644e4:	add	ip, ip, r0, lsl #1
   644e8:	cmp	r5, r0
   644ec:	beq	643e4 <GetDataSlab+0x30288>
   644f0:	ldr	r1, [sp, #80]	; 0x50
   644f4:	cmp	r1, #0
   644f8:	bne	64484 <GetDataSlab+0x30328>
   644fc:	mov	r1, r0
   64500:	orr	r0, r0, #1
   64504:	cmp	r5, r0
   64508:	beq	643e4 <GetDataSlab+0x30288>
   6450c:	ldr	r6, [sp, #56]	; 0x38
   64510:	sub	r4, r5, r1
   64514:	mul	r0, r6, r1
   64518:	add	r1, r1, #1
   6451c:	mul	r6, r6, r1
   64520:	mov	r1, sl
   64524:	add	r7, r1, r0
   64528:	subs	r4, r4, #2
   6452c:	ldrh	r7, [r7]
   64530:	strh	r7, [ip]
   64534:	add	r7, r1, r6
   64538:	add	r1, r1, r3
   6453c:	ldrh	r7, [r7]
   64540:	strh	r7, [ip, #2]
   64544:	add	ip, ip, #4
   64548:	bne	64524 <GetDataSlab+0x303c8>
   6454c:	b	643e4 <GetDataSlab+0x30288>
   64550:	ldr	r7, [sp, #84]	; 0x54
   64554:	ldr	r8, [sp, #64]	; 0x40
   64558:	mov	r0, #0
   6455c:	cmp	r7, #13
   64560:	bne	5b6a4 <GetDataSlab+0x27548>
   64564:	ldr	r0, [sp, #76]	; 0x4c
   64568:	cmp	r0, #1
   6456c:	blt	35058 <GetDataSlab+0xefc>
   64570:	cmp	r5, #1
   64574:	mov	r0, #0
   64578:	blt	5b6a4 <GetDataSlab+0x27548>
   6457c:	ldr	r0, [sp, #60]	; 0x3c
   64580:	ldr	r1, [sp, #56]	; 0x38
   64584:	mov	r7, r8
   64588:	mov	r2, #1
   6458c:	cmp	r5, #1
   64590:	mov	r9, #0
   64594:	mla	r0, r1, r8, r0
   64598:	ldr	r1, [sp, #80]	; 0x50
   6459c:	add	r8, r1, r0, lsl #3
   645a0:	lsl	r1, r5, #3
   645a4:	add	r1, r1, r0, lsl #3
   645a8:	lsl	r0, r0, #3
   645ac:	str	r0, [sp, #56]	; 0x38
   645b0:	ldr	r0, [sp, #68]	; 0x44
   645b4:	str	r1, [sp, #64]	; 0x40
   645b8:	sub	r1, r5, #2
   645bc:	add	r2, r2, r1, lsr #1
   645c0:	and	r3, r2, #1
   645c4:	sub	r2, r2, r3
   645c8:	str	r3, [sp, #52]	; 0x34
   645cc:	mov	r3, r0
   645d0:	sub	r0, r0, #1
   645d4:	clz	r0, r0
   645d8:	str	r2, [sp, #40]	; 0x28
   645dc:	mov	r2, #0
   645e0:	movwhi	r2, #1
   645e4:	lsl	ip, r3, #5
   645e8:	lsl	r6, r3, #4
   645ec:	lsr	r0, r0, #5
   645f0:	and	r0, r2, r0
   645f4:	str	r0, [sp, #84]	; 0x54
   645f8:	ldr	r0, [sp, #72]	; 0x48
   645fc:	mul	r0, r0, r7
   64600:	lsl	r0, r0, #3
   64604:	str	r0, [sp, #92]	; 0x5c
   64608:	lsl	r0, r3, #3
   6460c:	str	r0, [sp, #60]	; 0x3c
   64610:	and	r0, r5, #1
   64614:	str	r0, [sp, #72]	; 0x48
   64618:	bic	r0, r5, #1
   6461c:	str	r0, [sp, #48]	; 0x30
   64620:	lsr	r0, r1, #1
   64624:	str	r0, [sp, #44]	; 0x2c
   64628:	ldr	r0, [sp, #84]	; 0x54
   6462c:	cmp	r0, #0
   64630:	bne	6465c <GetDataSlab+0x30500>
   64634:	b	646b4 <GetDataSlab+0x30558>
   64638:	ldr	r0, [sp, #92]	; 0x5c
   6463c:	add	r9, r9, #1
   64640:	cmp	r9, lr
   64644:	add	r8, r8, r0
   64648:	mov	r0, #0
   6464c:	beq	5b6a4 <GetDataSlab+0x27548>
   64650:	ldr	r0, [sp, #84]	; 0x54
   64654:	cmp	r0, #0
   64658:	beq	646b4 <GetDataSlab+0x30558>
   6465c:	ldr	r0, [sp, #92]	; 0x5c
   64660:	ldr	r1, [sp, #64]	; 0x40
   64664:	ldr	r3, [sp, #80]	; 0x50
   64668:	ldr	r2, [sp, #88]	; 0x58
   6466c:	ldr	lr, [sp, #76]	; 0x4c
   64670:	mov	sl, #32
   64674:	mul	r0, r0, r9
   64678:	add	r1, r1, r0
   6467c:	add	r1, r3, r1
   64680:	cmp	r1, r2
   64684:	bls	64704 <GetDataSlab+0x305a8>
   64688:	add	r1, r2, r5, lsl #3
   6468c:	ldr	r2, [sp, #56]	; 0x38
   64690:	add	r0, r2, r0
   64694:	add	r0, r3, r0
   64698:	cmp	r0, r1
   6469c:	bcs	64704 <GetDataSlab+0x305a8>
   646a0:	mov	r0, #0
   646a4:	ldr	r1, [sp, #72]	; 0x48
   646a8:	cmp	r1, #0
   646ac:	bne	646c8 <GetDataSlab+0x3056c>
   646b0:	b	6479c <GetDataSlab+0x30640>
   646b4:	ldr	lr, [sp, #76]	; 0x4c
   646b8:	mov	r0, #0
   646bc:	ldr	r1, [sp, #72]	; 0x48
   646c0:	cmp	r1, #0
   646c4:	beq	6479c <GetDataSlab+0x30640>
   646c8:	ldr	r1, [sp, #68]	; 0x44
   646cc:	mov	r2, r8
   646d0:	mul	r1, r0, r1
   646d4:	ldr	r4, [r2, r1, lsl #3]!
   646d8:	ldr	r1, [r2, #4]
   646dc:	ldr	r2, [sp, #88]	; 0x58
   646e0:	str	r4, [r2]
   646e4:	str	r1, [r2, #4]
   646e8:	orr	r1, r0, #1
   646ec:	add	r2, r2, #8
   646f0:	str	r2, [sp, #88]	; 0x58
   646f4:	orr	r0, r0, #1
   646f8:	cmp	r5, r0
   646fc:	bne	647ac <GetDataSlab+0x30650>
   64700:	b	64638 <GetDataSlab+0x304dc>
   64704:	ldr	r0, [sp, #44]	; 0x2c
   64708:	cmp	r0, #0
   6470c:	beq	64748 <GetDataSlab+0x305ec>
   64710:	ldr	r7, [sp, #88]	; 0x58
   64714:	ldr	r3, [sp, #40]	; 0x28
   64718:	mov	r0, #0
   6471c:	mov	r1, r8
   64720:	add	r2, r1, r6
   64724:	vld1.64	{d16-d17}, [r1], ip
   64728:	add	r4, r7, #16
   6472c:	subs	r3, r3, #2
   64730:	add	r0, r0, #4
   64734:	vst1.64	{d16-d17}, [r7], sl
   64738:	vld1.64	{d16-d17}, [r2]
   6473c:	vst1.64	{d16-d17}, [r4]
   64740:	bne	64720 <GetDataSlab+0x305c4>
   64744:	b	6474c <GetDataSlab+0x305f0>
   64748:	mov	r0, #0
   6474c:	ldr	r1, [sp, #52]	; 0x34
   64750:	cmp	r1, #0
   64754:	beq	64774 <GetDataSlab+0x30618>
   64758:	ldr	r1, [sp, #68]	; 0x44
   6475c:	mul	r1, r0, r1
   64760:	add	r1, r8, r1, lsl #3
   64764:	vld1.64	{d16-d17}, [r1]
   64768:	ldr	r1, [sp, #88]	; 0x58
   6476c:	add	r0, r1, r0, lsl #3
   64770:	vst1.64	{d16-d17}, [r0]
   64774:	ldr	r1, [sp, #48]	; 0x30
   64778:	ldr	r0, [sp, #88]	; 0x58
   6477c:	add	r0, r0, r1, lsl #3
   64780:	cmp	r5, r1
   64784:	str	r0, [sp, #88]	; 0x58
   64788:	mov	r0, r1
   6478c:	beq	64638 <GetDataSlab+0x304dc>
   64790:	ldr	r1, [sp, #72]	; 0x48
   64794:	cmp	r1, #0
   64798:	bne	646c8 <GetDataSlab+0x3056c>
   6479c:	mov	r1, r0
   647a0:	orr	r0, r0, #1
   647a4:	cmp	r5, r0
   647a8:	beq	64638 <GetDataSlab+0x304dc>
   647ac:	ldr	r2, [sp, #60]	; 0x3c
   647b0:	sub	sl, r5, r1
   647b4:	ldr	r4, [sp, #88]	; 0x58
   647b8:	mul	r0, r2, r1
   647bc:	add	r1, r1, #1
   647c0:	mul	lr, r2, r1
   647c4:	mov	r1, r8
   647c8:	mov	r2, r1
   647cc:	subs	sl, sl, #2
   647d0:	ldr	r3, [r2, r0]!
   647d4:	ldr	r2, [r2, #4]
   647d8:	str	r3, [r4]
   647dc:	str	r2, [r4, #4]
   647e0:	add	r2, r1, r6
   647e4:	ldr	r3, [r1, lr]!
   647e8:	ldr	r1, [r1, #4]
   647ec:	str	r3, [r4, #8]
   647f0:	str	r1, [r4, #12]
   647f4:	add	r4, r4, #16
   647f8:	mov	r1, r2
   647fc:	bne	647c8 <GetDataSlab+0x3066c>
   64800:	ldr	lr, [sp, #76]	; 0x4c
   64804:	str	r4, [sp, #88]	; 0x58
   64808:	b	64638 <GetDataSlab+0x304dc>
   6480c:	ldr	r7, [sp, #84]	; 0x54
   64810:	ldr	r8, [sp, #64]	; 0x40
   64814:	mov	r0, #0
   64818:	cmp	r7, #13
   6481c:	bne	5b6a4 <GetDataSlab+0x27548>
   64820:	ldr	r0, [sp, #76]	; 0x4c
   64824:	cmp	r0, #1
   64828:	blt	35058 <GetDataSlab+0xefc>
   6482c:	cmp	r5, #1
   64830:	mov	r0, #0
   64834:	blt	5b6a4 <GetDataSlab+0x27548>
   64838:	ldr	r0, [sp, #60]	; 0x3c
   6483c:	ldr	r1, [sp, #56]	; 0x38
   64840:	mov	r7, r8
   64844:	mov	r2, #1
   64848:	cmp	r5, #1
   6484c:	mov	r9, #0
   64850:	mla	r0, r1, r8, r0
   64854:	ldr	r1, [sp, #80]	; 0x50
   64858:	add	r8, r1, r0, lsl #3
   6485c:	lsl	r1, r5, #3
   64860:	add	r1, r1, r0, lsl #3
   64864:	lsl	r0, r0, #3
   64868:	str	r0, [sp, #56]	; 0x38
   6486c:	ldr	r0, [sp, #68]	; 0x44
   64870:	str	r1, [sp, #64]	; 0x40
   64874:	sub	r1, r5, #2
   64878:	add	r2, r2, r1, lsr #1
   6487c:	and	r3, r2, #1
   64880:	sub	r2, r2, r3
   64884:	str	r3, [sp, #52]	; 0x34
   64888:	mov	r3, r0
   6488c:	sub	r0, r0, #1
   64890:	clz	r0, r0
   64894:	str	r2, [sp, #40]	; 0x28
   64898:	mov	r2, #0
   6489c:	movwhi	r2, #1
   648a0:	lsl	ip, r3, #5
   648a4:	lsl	r6, r3, #4
   648a8:	lsr	r0, r0, #5
   648ac:	and	r0, r2, r0
   648b0:	str	r0, [sp, #84]	; 0x54
   648b4:	ldr	r0, [sp, #72]	; 0x48
   648b8:	mul	r0, r0, r7
   648bc:	lsl	r0, r0, #3
   648c0:	str	r0, [sp, #92]	; 0x5c
   648c4:	lsl	r0, r3, #3
   648c8:	str	r0, [sp, #60]	; 0x3c
   648cc:	and	r0, r5, #1
   648d0:	str	r0, [sp, #72]	; 0x48
   648d4:	bic	r0, r5, #1
   648d8:	str	r0, [sp, #48]	; 0x30
   648dc:	lsr	r0, r1, #1
   648e0:	str	r0, [sp, #44]	; 0x2c
   648e4:	ldr	r0, [sp, #84]	; 0x54
   648e8:	cmp	r0, #0
   648ec:	bne	64918 <GetDataSlab+0x307bc>
   648f0:	b	64970 <GetDataSlab+0x30814>
   648f4:	ldr	r0, [sp, #92]	; 0x5c
   648f8:	add	r9, r9, #1
   648fc:	cmp	r9, lr
   64900:	add	r8, r8, r0
   64904:	mov	r0, #0
   64908:	beq	5b6a4 <GetDataSlab+0x27548>
   6490c:	ldr	r0, [sp, #84]	; 0x54
   64910:	cmp	r0, #0
   64914:	beq	64970 <GetDataSlab+0x30814>
   64918:	ldr	r0, [sp, #92]	; 0x5c
   6491c:	ldr	r1, [sp, #64]	; 0x40
   64920:	ldr	r3, [sp, #80]	; 0x50
   64924:	ldr	r2, [sp, #88]	; 0x58
   64928:	ldr	lr, [sp, #76]	; 0x4c
   6492c:	mov	sl, #32
   64930:	mul	r0, r0, r9
   64934:	add	r1, r1, r0
   64938:	add	r1, r3, r1
   6493c:	cmp	r1, r2
   64940:	bls	649c0 <GetDataSlab+0x30864>
   64944:	add	r1, r2, r5, lsl #3
   64948:	ldr	r2, [sp, #56]	; 0x38
   6494c:	add	r0, r2, r0
   64950:	add	r0, r3, r0
   64954:	cmp	r0, r1
   64958:	bcs	649c0 <GetDataSlab+0x30864>
   6495c:	mov	r0, #0
   64960:	ldr	r1, [sp, #72]	; 0x48
   64964:	cmp	r1, #0
   64968:	bne	64984 <GetDataSlab+0x30828>
   6496c:	b	64a58 <GetDataSlab+0x308fc>
   64970:	ldr	lr, [sp, #76]	; 0x4c
   64974:	mov	r0, #0
   64978:	ldr	r1, [sp, #72]	; 0x48
   6497c:	cmp	r1, #0
   64980:	beq	64a58 <GetDataSlab+0x308fc>
   64984:	ldr	r1, [sp, #68]	; 0x44
   64988:	mov	r2, r8
   6498c:	mul	r1, r0, r1
   64990:	ldr	r4, [r2, r1, lsl #3]!
   64994:	ldr	r1, [r2, #4]
   64998:	ldr	r2, [sp, #88]	; 0x58
   6499c:	str	r4, [r2]
   649a0:	str	r1, [r2, #4]
   649a4:	orr	r1, r0, #1
   649a8:	add	r2, r2, #8
   649ac:	str	r2, [sp, #88]	; 0x58
   649b0:	orr	r0, r0, #1
   649b4:	cmp	r5, r0
   649b8:	bne	64a68 <GetDataSlab+0x3090c>
   649bc:	b	648f4 <GetDataSlab+0x30798>
   649c0:	ldr	r0, [sp, #44]	; 0x2c
   649c4:	cmp	r0, #0
   649c8:	beq	64a04 <GetDataSlab+0x308a8>
   649cc:	ldr	r7, [sp, #88]	; 0x58
   649d0:	ldr	r3, [sp, #40]	; 0x28
   649d4:	mov	r0, #0
   649d8:	mov	r1, r8
   649dc:	add	r2, r1, r6
   649e0:	vld1.64	{d16-d17}, [r1], ip
   649e4:	add	r4, r7, #16
   649e8:	subs	r3, r3, #2
   649ec:	add	r0, r0, #4
   649f0:	vst1.64	{d16-d17}, [r7], sl
   649f4:	vld1.64	{d16-d17}, [r2]
   649f8:	vst1.64	{d16-d17}, [r4]
   649fc:	bne	649dc <GetDataSlab+0x30880>
   64a00:	b	64a08 <GetDataSlab+0x308ac>
   64a04:	mov	r0, #0
   64a08:	ldr	r1, [sp, #52]	; 0x34
   64a0c:	cmp	r1, #0
   64a10:	beq	64a30 <GetDataSlab+0x308d4>
   64a14:	ldr	r1, [sp, #68]	; 0x44
   64a18:	mul	r1, r0, r1
   64a1c:	add	r1, r8, r1, lsl #3
   64a20:	vld1.64	{d16-d17}, [r1]
   64a24:	ldr	r1, [sp, #88]	; 0x58
   64a28:	add	r0, r1, r0, lsl #3
   64a2c:	vst1.64	{d16-d17}, [r0]
   64a30:	ldr	r1, [sp, #48]	; 0x30
   64a34:	ldr	r0, [sp, #88]	; 0x58
   64a38:	add	r0, r0, r1, lsl #3
   64a3c:	cmp	r5, r1
   64a40:	str	r0, [sp, #88]	; 0x58
   64a44:	mov	r0, r1
   64a48:	beq	648f4 <GetDataSlab+0x30798>
   64a4c:	ldr	r1, [sp, #72]	; 0x48
   64a50:	cmp	r1, #0
   64a54:	bne	64984 <GetDataSlab+0x30828>
   64a58:	mov	r1, r0
   64a5c:	orr	r0, r0, #1
   64a60:	cmp	r5, r0
   64a64:	beq	648f4 <GetDataSlab+0x30798>
   64a68:	ldr	r2, [sp, #60]	; 0x3c
   64a6c:	sub	sl, r5, r1
   64a70:	ldr	r4, [sp, #88]	; 0x58
   64a74:	mul	r0, r2, r1
   64a78:	add	r1, r1, #1
   64a7c:	mul	lr, r2, r1
   64a80:	mov	r1, r8
   64a84:	mov	r2, r1
   64a88:	subs	sl, sl, #2
   64a8c:	ldr	r3, [r2, r0]!
   64a90:	ldr	r2, [r2, #4]
   64a94:	str	r3, [r4]
   64a98:	str	r2, [r4, #4]
   64a9c:	add	r2, r1, r6
   64aa0:	ldr	r3, [r1, lr]!
   64aa4:	ldr	r1, [r1, #4]
   64aa8:	str	r3, [r4, #8]
   64aac:	str	r1, [r4, #12]
   64ab0:	add	r4, r4, #16
   64ab4:	mov	r1, r2
   64ab8:	bne	64a84 <GetDataSlab+0x30928>
   64abc:	ldr	lr, [sp, #76]	; 0x4c
   64ac0:	str	r4, [sp, #88]	; 0x58
   64ac4:	b	648f4 <GetDataSlab+0x30798>

00064ac8 <Mat_VarReadDataLinear5>:
   64ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64acc:	add	fp, sp, #28
   64ad0:	sub	sp, sp, #84	; 0x54
   64ad4:	mov	r7, r0
   64ad8:	mov	r0, #1
   64adc:	mvn	r5, #0
   64ae0:	str	r0, [sp, #16]
   64ae4:	ldr	r0, [r7, #16]
   64ae8:	cmp	r0, #16
   64aec:	beq	64c2c <Mat_VarReadDataLinear5+0x164>
   64af0:	mov	r4, r1
   64af4:	ldr	r1, [r1, #52]	; 0x34
   64af8:	ldr	r0, [r7]
   64afc:	mov	r8, r2
   64b00:	mov	r2, #0
   64b04:	mov	r9, r3
   64b08:	mov	r6, #0
   64b0c:	ldr	r1, [r1]
   64b10:	bl	1a2c <fseek@plt>
   64b14:	ldr	r0, [r4, #48]	; 0x30
   64b18:	cmp	r0, #1
   64b1c:	beq	64b90 <Mat_VarReadDataLinear5+0xc8>
   64b20:	cmp	r0, #0
   64b24:	bne	64ce8 <Mat_VarReadDataLinear5+0x220>
   64b28:	ldr	r3, [r7]
   64b2c:	sub	r5, fp, #36	; 0x24
   64b30:	mov	r1, #4
   64b34:	mov	r2, #2
   64b38:	mov	r0, r5
   64b3c:	bl	18b8 <fread@plt>
   64b40:	ldr	r0, [r7, #20]
   64b44:	cmp	r0, #0
   64b48:	beq	64b5c <Mat_VarReadDataLinear5+0x94>
   64b4c:	mov	r0, r5
   64b50:	bl	1bf8 <Mat_int32Swap>
   64b54:	add	r0, r5, #4
   64b58:	bl	1bf8 <Mat_int32Swap>
   64b5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   64b60:	uxtb	r1, r0
   64b64:	cmp	r0, #65536	; 0x10000
   64b68:	str	r1, [r4, #8]
   64b6c:	bcc	64ce0 <Mat_VarReadDataLinear5+0x218>
   64b70:	ldr	r0, [r7]
   64b74:	mvn	r1, #3
   64b78:	mov	r2, #1
   64b7c:	bl	1a2c <fseek@plt>
   64b80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   64b84:	mov	r1, #4
   64b88:	add	r6, r1, r0, asr #16
   64b8c:	b	64ce8 <Mat_VarReadDataLinear5+0x220>
   64b90:	ldr	r0, [r4, #52]	; 0x34
   64b94:	ldr	r6, [r0, #16]
   64b98:	cmp	r6, #0
   64b9c:	beq	64bfc <Mat_VarReadDataLinear5+0x134>
   64ba0:	ldr	r0, [r4, #20]
   64ba4:	cmp	r0, #0
   64ba8:	beq	64c38 <Mat_VarReadDataLinear5+0x170>
   64bac:	ldr	r3, [r4, #8]
   64bb0:	ldr	r2, [r4, #16]
   64bb4:	ldr	r1, [r8]
   64bb8:	ldr	r0, [r6]
   64bbc:	ldr	sl, [fp, #8]
   64bc0:	ldr	r7, [fp, #12]
   64bc4:	str	r9, [sp]
   64bc8:	str	sl, [sp, #4]
   64bcc:	str	r7, [sp, #8]
   64bd0:	bl	64fb8 <GetDataLinear>
   64bd4:	mov	r5, r0
   64bd8:	cmp	r0, #0
   64bdc:	bne	64c2c <Mat_VarReadDataLinear5+0x164>
   64be0:	ldr	r3, [r4, #8]
   64be4:	ldr	r2, [r4, #16]
   64be8:	ldr	r1, [r8, #4]
   64bec:	ldr	r0, [r6, #4]
   64bf0:	stm	sp, {r9, sl}
   64bf4:	str	r7, [sp, #8]
   64bf8:	b	64c5c <Mat_VarReadDataLinear5+0x194>
   64bfc:	ldr	r1, [r0, #12]
   64c00:	mov	r0, #0
   64c04:	str	r0, [r1, #4]
   64c08:	add	r0, sp, #20
   64c0c:	bl	1948 <inflateCopy@plt>
   64c10:	cmp	r0, #0
   64c14:	beq	64c70 <Mat_VarReadDataLinear5+0x1a8>
   64c18:	bl	1888 <zError@plt>
   64c1c:	mov	r1, r0
   64c20:	ldr	r0, [pc, #900]	; 64fac <Mat_VarReadDataLinear5+0x4e4>
   64c24:	add	r0, pc, r0
   64c28:	bl	19b4 <Mat_Critical@plt>
   64c2c:	mov	r0, r5
   64c30:	sub	sp, fp, #28
   64c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64c38:	ldr	r0, [fp, #8]
   64c3c:	ldr	r3, [r4, #8]
   64c40:	ldr	r2, [r4, #16]
   64c44:	str	r9, [sp]
   64c48:	mov	r1, r8
   64c4c:	str	r0, [sp, #4]
   64c50:	ldr	r0, [fp, #12]
   64c54:	str	r0, [sp, #8]
   64c58:	mov	r0, r6
   64c5c:	bl	64fb8 <GetDataLinear>
   64c60:	mov	r5, r0
   64c64:	mov	r0, r5
   64c68:	sub	sp, fp, #28
   64c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64c70:	sub	r5, fp, #36	; 0x24
   64c74:	add	r1, sp, #20
   64c78:	mov	r0, r7
   64c7c:	mov	r2, r5
   64c80:	bl	336c <InflateDataType>
   64c84:	ldr	r0, [r7, #20]
   64c88:	cmp	r0, #0
   64c8c:	beq	64ca0 <Mat_VarReadDataLinear5+0x1d8>
   64c90:	mov	r0, r5
   64c94:	bl	1bf8 <Mat_int32Swap>
   64c98:	add	r0, r5, #4
   64c9c:	bl	1bf8 <Mat_int32Swap>
   64ca0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   64ca4:	uxtb	r1, r0
   64ca8:	str	r1, [r4, #8]
   64cac:	mov	r1, #0
   64cb0:	cmp	r1, r0, lsr #16
   64cb4:	bne	64b84 <Mat_VarReadDataLinear5+0xbc>
   64cb8:	add	r5, r5, #4
   64cbc:	add	r1, sp, #20
   64cc0:	mov	r0, r7
   64cc4:	mov	r2, r5
   64cc8:	bl	336c <InflateDataType>
   64ccc:	ldr	r0, [r7, #20]
   64cd0:	cmp	r0, #0
   64cd4:	beq	64ce0 <Mat_VarReadDataLinear5+0x218>
   64cd8:	mov	r0, r5
   64cdc:	bl	1bf8 <Mat_int32Swap>
   64ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   64ce4:	add	r6, r0, #8
   64ce8:	asr	r0, r6, #31
   64cec:	add	r0, r6, r0, lsr #29
   64cf0:	bic	r0, r0, #7
   64cf4:	subs	r1, r6, r0
   64cf8:	add	r1, sp, #16
   64cfc:	addne	r6, r0, #8
   64d00:	mov	r0, r4
   64d04:	bl	6be10 <SafeMulDims>
   64d08:	mov	sl, r0
   64d0c:	cmp	r0, #0
   64d10:	beq	64d20 <Mat_VarReadDataLinear5+0x258>
   64d14:	ldr	r0, [pc, #660]	; 64fb0 <Mat_VarReadDataLinear5+0x4e8>
   64d18:	add	r0, pc, r0
   64d1c:	bl	19b4 <Mat_Critical@plt>
   64d20:	ldr	ip, [fp, #12]
   64d24:	ldr	lr, [fp, #8]
   64d28:	ldr	r1, [sp, #16]
   64d2c:	mov	r5, #1
   64d30:	sub	r0, ip, #1
   64d34:	mla	r0, r0, lr, r9
   64d38:	add	r0, r0, #1
   64d3c:	cmp	r0, r1
   64d40:	bhi	64f88 <Mat_VarReadDataLinear5+0x4c0>
   64d44:	ldr	r0, [r4, #48]	; 0x30
   64d48:	cmp	r0, #1
   64d4c:	beq	64e18 <Mat_VarReadDataLinear5+0x350>
   64d50:	cmp	r0, #0
   64d54:	bne	64f30 <Mat_VarReadDataLinear5+0x468>
   64d58:	ldr	r0, [r4, #20]
   64d5c:	cmp	r0, #0
   64d60:	beq	64f38 <Mat_VarReadDataLinear5+0x470>
   64d64:	ldr	r3, [r4, #8]
   64d68:	ldr	r2, [r4, #16]
   64d6c:	ldr	r1, [r8]
   64d70:	mov	r0, r7
   64d74:	stm	sp, {r9, lr}
   64d78:	str	ip, [sp, #8]
   64d7c:	bl	2e334 <ReadDataSlab1>
   64d80:	ldr	r0, [r4, #52]	; 0x34
   64d84:	mov	r2, #0
   64d88:	ldr	r0, [r0]
   64d8c:	add	r1, r0, r6
   64d90:	ldr	r0, [r7]
   64d94:	bl	1a2c <fseek@plt>
   64d98:	ldr	r3, [r7]
   64d9c:	sub	r5, fp, #36	; 0x24
   64da0:	mov	r1, #4
   64da4:	mov	r2, #2
   64da8:	mov	r0, r5
   64dac:	bl	18b8 <fread@plt>
   64db0:	ldr	r0, [r7, #20]
   64db4:	cmp	r0, #0
   64db8:	beq	64dcc <Mat_VarReadDataLinear5+0x304>
   64dbc:	mov	r0, r5
   64dc0:	bl	1bf8 <Mat_int32Swap>
   64dc4:	add	r0, r5, #4
   64dc8:	bl	1bf8 <Mat_int32Swap>
   64dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   64dd0:	uxtb	r3, r0
   64dd4:	cmp	r0, #65536	; 0x10000
   64dd8:	str	r3, [r4, #8]
   64ddc:	bcc	64df4 <Mat_VarReadDataLinear5+0x32c>
   64de0:	ldr	r0, [r7]
   64de4:	mvn	r1, #3
   64de8:	mov	r2, #1
   64dec:	bl	1a2c <fseek@plt>
   64df0:	ldr	r3, [r4, #8]
   64df4:	ldr	r0, [fp, #8]
   64df8:	ldr	r2, [r4, #16]
   64dfc:	ldr	r1, [r8, #4]
   64e00:	str	r9, [sp]
   64e04:	str	r0, [sp, #4]
   64e08:	ldr	r0, [fp, #12]
   64e0c:	str	r0, [sp, #8]
   64e10:	mov	r0, r7
   64e14:	b	64f50 <Mat_VarReadDataLinear5+0x488>
   64e18:	ldr	r0, [r4, #20]
   64e1c:	cmp	r0, #0
   64e20:	beq	64f5c <Mat_VarReadDataLinear5+0x494>
   64e24:	ldr	r0, [r4, #8]
   64e28:	ldr	r2, [r8]
   64e2c:	ldr	r3, [r4, #16]
   64e30:	add	r5, sp, #20
   64e34:	mov	r1, r5
   64e38:	stm	sp, {r0, r9, lr}
   64e3c:	mov	r0, r7
   64e40:	str	ip, [sp, #12]
   64e44:	bl	2f850 <ReadCompressedDataSlab1>
   64e48:	ldr	r1, [r4, #52]	; 0x34
   64e4c:	ldr	r0, [r7]
   64e50:	mov	r2, #0
   64e54:	ldr	r1, [r1]
   64e58:	bl	1a2c <fseek@plt>
   64e5c:	mov	r0, r5
   64e60:	bl	193c <inflateEnd@plt>
   64e64:	ldr	r0, [r4, #52]	; 0x34
   64e68:	ldr	r1, [r0, #12]
   64e6c:	mov	r0, r5
   64e70:	bl	1948 <inflateCopy@plt>
   64e74:	mov	r5, r0
   64e78:	cmp	r0, #0
   64e7c:	beq	64e98 <Mat_VarReadDataLinear5+0x3d0>
   64e80:	mov	r0, r5
   64e84:	bl	1888 <zError@plt>
   64e88:	mov	r1, r0
   64e8c:	ldr	r0, [pc, #288]	; 64fb4 <Mat_VarReadDataLinear5+0x4ec>
   64e90:	add	r0, pc, r0
   64e94:	bl	19b4 <Mat_Critical@plt>
   64e98:	add	sl, sp, #20
   64e9c:	mov	r0, r7
   64ea0:	mov	r2, r6
   64ea4:	mov	r1, sl
   64ea8:	bl	256c <InflateSkip>
   64eac:	mov	r0, #0
   64eb0:	sub	r2, fp, #36	; 0x24
   64eb4:	mov	r1, sl
   64eb8:	str	r0, [sp, #24]
   64ebc:	mov	r0, r7
   64ec0:	bl	336c <InflateDataType>
   64ec4:	ldr	r0, [r7, #20]
   64ec8:	cmp	r0, #0
   64ecc:	beq	64ed8 <Mat_VarReadDataLinear5+0x410>
   64ed0:	sub	r0, fp, #36	; 0x24
   64ed4:	bl	1bf8 <Mat_int32Swap>
   64ed8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   64edc:	mov	r2, #0
   64ee0:	uxtb	r0, r1
   64ee4:	cmp	r2, r1, lsr #16
   64ee8:	str	r0, [r4, #8]
   64eec:	bne	64f04 <Mat_VarReadDataLinear5+0x43c>
   64ef0:	add	r1, sp, #20
   64ef4:	mov	r0, r7
   64ef8:	mov	r2, #4
   64efc:	bl	256c <InflateSkip>
   64f00:	ldr	r0, [r4, #8]
   64f04:	ldr	r3, [r4, #16]
   64f08:	ldr	r2, [r8, #4]
   64f0c:	stm	sp, {r0, r9}
   64f10:	ldr	r0, [fp, #8]
   64f14:	add	r1, sp, #20
   64f18:	str	r0, [sp, #8]
   64f1c:	ldr	r0, [fp, #12]
   64f20:	str	r0, [sp, #12]
   64f24:	mov	r0, r7
   64f28:	bl	2f850 <ReadCompressedDataSlab1>
   64f2c:	b	64f80 <Mat_VarReadDataLinear5+0x4b8>
   64f30:	mov	r5, sl
   64f34:	b	64f88 <Mat_VarReadDataLinear5+0x4c0>
   64f38:	ldr	r3, [r4, #8]
   64f3c:	ldr	r2, [r4, #16]
   64f40:	mov	r0, r7
   64f44:	mov	r1, r8
   64f48:	stm	sp, {r9, lr}
   64f4c:	str	ip, [sp, #8]
   64f50:	bl	2e334 <ReadDataSlab1>
   64f54:	mov	r5, sl
   64f58:	b	64f88 <Mat_VarReadDataLinear5+0x4c0>
   64f5c:	ldr	r0, [r4, #8]
   64f60:	ldr	r3, [r4, #16]
   64f64:	add	r1, sp, #20
   64f68:	mov	r2, r8
   64f6c:	stm	sp, {r0, r9, lr}
   64f70:	mov	r0, r7
   64f74:	str	ip, [sp, #12]
   64f78:	bl	2f850 <ReadCompressedDataSlab1>
   64f7c:	mov	r5, sl
   64f80:	add	r0, sp, #20
   64f84:	bl	193c <inflateEnd@plt>
   64f88:	ldr	r0, [r4, #16]
   64f8c:	bl	6bdec <ClassType2DataType>
   64f90:	str	r0, [r4, #8]
   64f94:	ldr	r0, [r4, #16]
   64f98:	bl	1a08 <Mat_SizeOfClass@plt>
   64f9c:	str	r0, [r4, #12]
   64fa0:	mov	r0, r5
   64fa4:	sub	sp, fp, #28
   64fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64fac:	.word	0x0000d277
   64fb0:	.word	0x0000cfd8
   64fb4:	.word	0x0000d00b

00064fb8 <GetDataLinear>:
   64fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64fbc:	add	fp, sp, #28
   64fc0:	sub	sp, sp, #12
   64fc4:	mov	r4, r0
   64fc8:	mov	r0, r3
   64fcc:	mov	r7, r2
   64fd0:	mov	r5, r1
   64fd4:	bl	1924 <Mat_SizeOf@plt>
   64fd8:	sub	r1, r7, #6
   64fdc:	cmp	r1, #9
   64fe0:	bhi	650bc <GetDataLinear+0x104>
   64fe4:	add	r2, pc, #16
   64fe8:	add	r8, fp, #8
   64fec:	mov	r9, r0
   64ff0:	ldm	r8, {r0, r3, r8}
   64ff4:	ldr	r1, [r2, r1, lsl #2]
   64ff8:	add	pc, r2, r1
   64ffc:	.word	0x00000028
   65000:	.word	0x000000d0
   65004:	.word	0x0000014c
   65008:	.word	0x000001c0
   6500c:	.word	0x000001f0
   65010:	.word	0x0000026c
   65014:	.word	0x00000304
   65018:	.word	0x00000380
   6501c:	.word	0x00000444
   65020:	.word	0x00000484
   65024:	add	r1, r4, r0, lsl #3
   65028:	cmp	r3, #0
   6502c:	beq	65414 <GetDataLinear+0x45c>
   65030:	cmp	r8, #1
   65034:	blt	65430 <GetDataLinear+0x478>
   65038:	and	r0, r8, #1
   6503c:	mov	r6, #0
   65040:	cmp	r8, #1
   65044:	mov	r4, #0
   65048:	beq	650a8 <GetDataLinear+0xf0>
   6504c:	sub	r8, r8, r0
   65050:	lsl	r6, r3, #4
   65054:	lsl	sl, r3, #3
   65058:	mov	r4, #0
   6505c:	mov	r7, r1
   65060:	str	r0, [sp, #4]
   65064:	str	r1, [sp, #8]
   65068:	mov	r0, r5
   6506c:	mov	r1, r7
   65070:	mov	r2, r9
   65074:	bl	181c <memcpy@plt>
   65078:	add	r1, r7, sl
   6507c:	add	r0, r5, #8
   65080:	mov	r2, r9
   65084:	bl	181c <memcpy@plt>
   65088:	add	r4, r4, #2
   6508c:	add	r7, r7, r6
   65090:	add	r5, r5, #16
   65094:	cmp	r8, r4
   65098:	bne	65068 <GetDataLinear+0xb0>
   6509c:	ldr	r3, [fp, #12]
   650a0:	ldmib	sp, {r0, r1}
   650a4:	mov	r6, #0
   650a8:	cmp	r0, #0
   650ac:	beq	65550 <GetDataLinear+0x598>
   650b0:	mul	r0, r4, r3
   650b4:	add	r1, r1, r0, lsl #3
   650b8:	b	65544 <GetDataLinear+0x58c>
   650bc:	mov	r6, #1
   650c0:	mov	r0, r6
   650c4:	sub	sp, fp, #28
   650c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   650cc:	add	r1, r4, r0, lsl #2
   650d0:	cmp	r3, #0
   650d4:	beq	65414 <GetDataLinear+0x45c>
   650d8:	cmp	r8, #1
   650dc:	blt	65430 <GetDataLinear+0x478>
   650e0:	and	r0, r8, #1
   650e4:	mov	r6, #0
   650e8:	cmp	r8, #1
   650ec:	mov	r4, #0
   650f0:	beq	65400 <GetDataLinear+0x448>
   650f4:	sub	r8, r8, r0
   650f8:	lsl	r6, r3, #3
   650fc:	lsl	sl, r3, #2
   65100:	mov	r4, #0
   65104:	mov	r7, r1
   65108:	str	r0, [sp, #4]
   6510c:	str	r1, [sp, #8]
   65110:	mov	r0, r5
   65114:	mov	r1, r7
   65118:	mov	r2, r9
   6511c:	bl	181c <memcpy@plt>
   65120:	add	r1, r7, sl
   65124:	add	r0, r5, #4
   65128:	mov	r2, r9
   6512c:	bl	181c <memcpy@plt>
   65130:	add	r4, r4, #2
   65134:	add	r7, r7, r6
   65138:	add	r5, r5, #8
   6513c:	cmp	r8, r4
   65140:	bne	65110 <GetDataLinear+0x158>
   65144:	b	653f4 <GetDataLinear+0x43c>
   65148:	add	r1, r4, r0
   6514c:	cmp	r3, #0
   65150:	beq	65414 <GetDataLinear+0x45c>
   65154:	cmp	r8, #1
   65158:	blt	65430 <GetDataLinear+0x478>
   6515c:	and	r2, r8, #1
   65160:	mov	r6, #0
   65164:	beq	651dc <GetDataLinear+0x224>
   65168:	sub	r8, r2, r8
   6516c:	lsl	sl, r3, #1
   65170:	mov	r6, #0
   65174:	mov	r7, r1
   65178:	str	r2, [sp, #4]
   6517c:	str	r1, [sp, #8]
   65180:	sub	r4, r5, r6
   65184:	mov	r1, r7
   65188:	mov	r2, r9
   6518c:	mov	r0, r4
   65190:	bl	181c <memcpy@plt>
   65194:	ldr	r0, [fp, #12]
   65198:	mov	r2, r9
   6519c:	add	r1, r7, r0
   651a0:	add	r0, r4, #1
   651a4:	bl	181c <memcpy@plt>
   651a8:	sub	r6, r6, #2
   651ac:	add	r7, r7, sl
   651b0:	cmp	r8, r6
   651b4:	bne	65180 <GetDataLinear+0x1c8>
   651b8:	b	65520 <GetDataLinear+0x568>
   651bc:	add	r1, r4, r0
   651c0:	cmp	r3, #0
   651c4:	beq	65414 <GetDataLinear+0x45c>
   651c8:	cmp	r8, #1
   651cc:	blt	65430 <GetDataLinear+0x478>
   651d0:	and	r2, r8, #1
   651d4:	mov	r6, #0
   651d8:	bne	654d0 <GetDataLinear+0x518>
   651dc:	mov	r0, #0
   651e0:	cmp	r2, #0
   651e4:	bne	65540 <GetDataLinear+0x588>
   651e8:	b	65550 <GetDataLinear+0x598>
   651ec:	add	r1, r4, r0, lsl #1
   651f0:	cmp	r3, #0
   651f4:	beq	65414 <GetDataLinear+0x45c>
   651f8:	cmp	r8, #1
   651fc:	blt	65430 <GetDataLinear+0x478>
   65200:	and	r0, r8, #1
   65204:	mov	r6, #0
   65208:	cmp	r8, #1
   6520c:	mov	r4, #0
   65210:	beq	652ec <GetDataLinear+0x334>
   65214:	sub	r8, r8, r0
   65218:	lsl	r6, r3, #2
   6521c:	lsl	sl, r3, #1
   65220:	mov	r4, #0
   65224:	mov	r7, r1
   65228:	str	r0, [sp, #4]
   6522c:	str	r1, [sp, #8]
   65230:	mov	r0, r5
   65234:	mov	r1, r7
   65238:	mov	r2, r9
   6523c:	bl	181c <memcpy@plt>
   65240:	add	r1, r7, sl
   65244:	add	r0, r5, #2
   65248:	mov	r2, r9
   6524c:	bl	181c <memcpy@plt>
   65250:	add	r4, r4, #2
   65254:	add	r7, r7, r6
   65258:	add	r5, r5, #4
   6525c:	cmp	r8, r4
   65260:	bne	65230 <GetDataLinear+0x278>
   65264:	b	652e0 <GetDataLinear+0x328>
   65268:	add	r1, r4, r0, lsl #1
   6526c:	cmp	r3, #0
   65270:	beq	65414 <GetDataLinear+0x45c>
   65274:	cmp	r8, #1
   65278:	blt	65430 <GetDataLinear+0x478>
   6527c:	and	r0, r8, #1
   65280:	mov	r6, #0
   65284:	cmp	r8, #1
   65288:	mov	r4, #0
   6528c:	beq	652ec <GetDataLinear+0x334>
   65290:	sub	r8, r8, r0
   65294:	lsl	r6, r3, #2
   65298:	lsl	sl, r3, #1
   6529c:	mov	r4, #0
   652a0:	mov	r7, r1
   652a4:	str	r0, [sp, #4]
   652a8:	str	r1, [sp, #8]
   652ac:	mov	r0, r5
   652b0:	mov	r1, r7
   652b4:	mov	r2, r9
   652b8:	bl	181c <memcpy@plt>
   652bc:	add	r1, r7, sl
   652c0:	add	r0, r5, #2
   652c4:	mov	r2, r9
   652c8:	bl	181c <memcpy@plt>
   652cc:	add	r4, r4, #2
   652d0:	add	r7, r7, r6
   652d4:	add	r5, r5, #4
   652d8:	cmp	r8, r4
   652dc:	bne	652ac <GetDataLinear+0x2f4>
   652e0:	ldr	r3, [fp, #12]
   652e4:	ldmib	sp, {r0, r1}
   652e8:	mov	r6, #0
   652ec:	cmp	r0, #0
   652f0:	beq	65550 <GetDataLinear+0x598>
   652f4:	mul	r0, r4, r3
   652f8:	add	r1, r1, r0, lsl #1
   652fc:	b	65544 <GetDataLinear+0x58c>
   65300:	add	r1, r4, r0, lsl #2
   65304:	cmp	r3, #0
   65308:	beq	65414 <GetDataLinear+0x45c>
   6530c:	cmp	r8, #1
   65310:	blt	65430 <GetDataLinear+0x478>
   65314:	and	r0, r8, #1
   65318:	mov	r6, #0
   6531c:	cmp	r8, #1
   65320:	mov	r4, #0
   65324:	beq	65400 <GetDataLinear+0x448>
   65328:	sub	r8, r8, r0
   6532c:	lsl	r6, r3, #3
   65330:	lsl	sl, r3, #2
   65334:	mov	r4, #0
   65338:	mov	r7, r1
   6533c:	str	r0, [sp, #4]
   65340:	str	r1, [sp, #8]
   65344:	mov	r0, r5
   65348:	mov	r1, r7
   6534c:	mov	r2, r9
   65350:	bl	181c <memcpy@plt>
   65354:	add	r1, r7, sl
   65358:	add	r0, r5, #4
   6535c:	mov	r2, r9
   65360:	bl	181c <memcpy@plt>
   65364:	add	r4, r4, #2
   65368:	add	r7, r7, r6
   6536c:	add	r5, r5, #8
   65370:	cmp	r8, r4
   65374:	bne	65344 <GetDataLinear+0x38c>
   65378:	b	653f4 <GetDataLinear+0x43c>
   6537c:	add	r1, r4, r0, lsl #2
   65380:	cmp	r3, #0
   65384:	beq	65414 <GetDataLinear+0x45c>
   65388:	cmp	r8, #1
   6538c:	blt	65430 <GetDataLinear+0x478>
   65390:	and	r0, r8, #1
   65394:	mov	r6, #0
   65398:	cmp	r8, #1
   6539c:	mov	r4, #0
   653a0:	beq	65400 <GetDataLinear+0x448>
   653a4:	sub	r8, r8, r0
   653a8:	lsl	r6, r3, #3
   653ac:	lsl	sl, r3, #2
   653b0:	mov	r4, #0
   653b4:	mov	r7, r1
   653b8:	str	r0, [sp, #4]
   653bc:	str	r1, [sp, #8]
   653c0:	mov	r0, r5
   653c4:	mov	r1, r7
   653c8:	mov	r2, r9
   653cc:	bl	181c <memcpy@plt>
   653d0:	add	r1, r7, sl
   653d4:	add	r0, r5, #4
   653d8:	mov	r2, r9
   653dc:	bl	181c <memcpy@plt>
   653e0:	add	r4, r4, #2
   653e4:	add	r7, r7, r6
   653e8:	add	r5, r5, #8
   653ec:	cmp	r8, r4
   653f0:	bne	653c0 <GetDataLinear+0x408>
   653f4:	ldr	r3, [fp, #12]
   653f8:	ldmib	sp, {r0, r1}
   653fc:	mov	r6, #0
   65400:	cmp	r0, #0
   65404:	beq	65550 <GetDataLinear+0x598>
   65408:	mul	r0, r4, r3
   6540c:	add	r1, r1, r0, lsl #2
   65410:	b	65544 <GetDataLinear+0x58c>
   65414:	mul	r2, r9, r8
   65418:	mov	r0, r5
   6541c:	bl	181c <memcpy@plt>
   65420:	mov	r6, #0
   65424:	mov	r0, r6
   65428:	sub	sp, fp, #28
   6542c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65430:	mov	r6, #0
   65434:	mov	r0, r6
   65438:	sub	sp, fp, #28
   6543c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65440:	add	r7, r4, r0, lsl #3
   65444:	cmp	r3, #0
   65448:	beq	654c0 <GetDataLinear+0x508>
   6544c:	mov	r6, #0
   65450:	cmp	r8, #1
   65454:	blt	65550 <GetDataLinear+0x598>
   65458:	lsl	r4, r3, #3
   6545c:	mov	r0, r5
   65460:	mov	r1, r7
   65464:	mov	r2, r9
   65468:	bl	181c <memcpy@plt>
   6546c:	add	r7, r7, r4
   65470:	subs	r8, r8, #1
   65474:	add	r5, r5, #8
   65478:	bne	6545c <GetDataLinear+0x4a4>
   6547c:	b	65550 <GetDataLinear+0x598>
   65480:	add	r7, r4, r0, lsl #3
   65484:	cmp	r3, #0
   65488:	beq	654c0 <GetDataLinear+0x508>
   6548c:	mov	r6, #0
   65490:	cmp	r8, #1
   65494:	blt	65550 <GetDataLinear+0x598>
   65498:	lsl	r4, r3, #3
   6549c:	mov	r0, r5
   654a0:	mov	r1, r7
   654a4:	mov	r2, r9
   654a8:	bl	181c <memcpy@plt>
   654ac:	add	r7, r7, r4
   654b0:	subs	r8, r8, #1
   654b4:	add	r5, r5, #8
   654b8:	bne	6549c <GetDataLinear+0x4e4>
   654bc:	b	65550 <GetDataLinear+0x598>
   654c0:	mul	r2, r9, r8
   654c4:	mov	r0, r5
   654c8:	mov	r1, r7
   654cc:	b	6541c <GetDataLinear+0x464>
   654d0:	sub	r8, r2, r8
   654d4:	lsl	sl, r3, #1
   654d8:	mov	r6, #0
   654dc:	mov	r7, r1
   654e0:	str	r2, [sp, #4]
   654e4:	str	r1, [sp, #8]
   654e8:	sub	r4, r5, r6
   654ec:	mov	r1, r7
   654f0:	mov	r2, r9
   654f4:	mov	r0, r4
   654f8:	bl	181c <memcpy@plt>
   654fc:	ldr	r0, [fp, #12]
   65500:	mov	r2, r9
   65504:	add	r1, r7, r0
   65508:	add	r0, r4, #1
   6550c:	bl	181c <memcpy@plt>
   65510:	sub	r6, r6, #2
   65514:	add	r7, r7, sl
   65518:	cmp	r8, r6
   6551c:	bne	654e8 <GetDataLinear+0x530>
   65520:	ldr	r3, [fp, #12]
   65524:	ldr	r1, [sp, #8]
   65528:	ldr	r2, [sp, #4]
   6552c:	sub	r5, r5, r6
   65530:	rsb	r0, r6, #0
   65534:	mov	r6, #0
   65538:	cmp	r2, #0
   6553c:	beq	65550 <GetDataLinear+0x598>
   65540:	mla	r1, r0, r3, r1
   65544:	mov	r0, r5
   65548:	mov	r2, r9
   6554c:	bl	181c <memcpy@plt>
   65550:	mov	r0, r6
   65554:	sub	sp, fp, #28
   65558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006555c <Mat_VarWrite5>:
   6555c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   65560:	add	fp, sp, #28
   65564:	sub	sp, sp, #52	; 0x34
   65568:	sub	sp, sp, #4096	; 0x1000
   6556c:	mov	r4, r0
   65570:	mov	r0, #6
   65574:	mov	r5, r1
   65578:	mov	r1, #14
   6557c:	mvn	r6, #0
   65580:	str	r0, [fp, #-40]	; 0xffffffd8
   65584:	mov	r0, #5
   65588:	cmp	r4, #0
   6558c:	str	r1, [fp, #-56]	; 0xffffffc8
   65590:	str	r0, [fp, #-44]	; 0xffffffd4
   65594:	mov	r0, #8
   65598:	str	r0, [fp, #-48]	; 0xffffffd0
   6559c:	mov	r0, #0
   655a0:	str	r0, [fp, #-52]	; 0xffffffcc
   655a4:	str	r0, [fp, #-64]	; 0xffffffc0
   655a8:	beq	65828 <Mat_VarWrite5+0x2cc>
   655ac:	ldr	r0, [r4]
   655b0:	mov	r7, r2
   655b4:	mov	r1, #0
   655b8:	mov	r2, #2
   655bc:	bl	1a2c <fseek@plt>
   655c0:	cmp	r5, #0
   655c4:	beq	65828 <Mat_VarWrite5+0x2cc>
   655c8:	ldr	r0, [r5, #36]	; 0x24
   655cc:	cmp	r0, #0
   655d0:	beq	65828 <Mat_VarWrite5+0x2cc>
   655d4:	cmp	r7, #1
   655d8:	beq	657bc <Mat_VarWrite5+0x260>
   655dc:	mov	r8, #0
   655e0:	cmp	r7, #0
   655e4:	bne	658f4 <Mat_VarWrite5+0x398>
   655e8:	ldr	r3, [r4]
   655ec:	sub	r0, fp, #56	; 0x38
   655f0:	mov	r1, #4
   655f4:	mov	r2, #1
   655f8:	bl	18ac <fwrite@plt>
   655fc:	ldr	r3, [r4]
   65600:	sub	r0, fp, #52	; 0x34
   65604:	mov	r1, #4
   65608:	mov	r2, #1
   6560c:	bl	18ac <fwrite@plt>
   65610:	ldr	r0, [r4]
   65614:	bl	1840 <ftell@plt>
   65618:	mov	r8, r0
   6561c:	ldr	r0, [r5, #16]
   65620:	ldr	r2, [r5, #20]
   65624:	uxtb	r1, r0
   65628:	cmp	r2, #0
   6562c:	str	r1, [fp, #-36]	; 0xffffffdc
   65630:	orrne	r1, r1, #2048	; 0x800
   65634:	strne	r1, [fp, #-36]	; 0xffffffdc
   65638:	ldr	r2, [r5, #24]
   6563c:	cmp	r2, #0
   65640:	orrne	r1, r1, #1024	; 0x400
   65644:	strne	r1, [fp, #-36]	; 0xffffffdc
   65648:	ldr	r2, [r5, #28]
   6564c:	cmp	r2, #0
   65650:	orrne	r1, r1, #512	; 0x200
   65654:	strne	r1, [fp, #-36]	; 0xffffffdc
   65658:	cmp	r0, #5
   6565c:	bne	6566c <Mat_VarWrite5+0x110>
   65660:	ldr	r0, [r5, #40]	; 0x28
   65664:	ldr	r0, [r0]
   65668:	str	r0, [fp, #-64]	; 0xffffffc0
   6566c:	ldr	r3, [r4]
   65670:	sub	r0, fp, #40	; 0x28
   65674:	mov	r1, #4
   65678:	mov	r2, #1
   6567c:	bl	18ac <fwrite@plt>
   65680:	ldr	r3, [r4]
   65684:	sub	r0, fp, #48	; 0x30
   65688:	mov	r1, #4
   6568c:	mov	r2, #1
   65690:	bl	18ac <fwrite@plt>
   65694:	ldr	r3, [r4]
   65698:	sub	r0, fp, #36	; 0x24
   6569c:	mov	r1, #4
   656a0:	mov	r2, #1
   656a4:	bl	18ac <fwrite@plt>
   656a8:	ldr	r3, [r4]
   656ac:	sub	r0, fp, #64	; 0x40
   656b0:	mov	r1, #4
   656b4:	mov	r2, #1
   656b8:	bl	18ac <fwrite@plt>
   656bc:	ldr	r0, [r5, #4]
   656c0:	mov	r1, #4
   656c4:	mov	r2, #1
   656c8:	lsl	r0, r0, #2
   656cc:	str	r0, [fp, #-60]	; 0xffffffc4
   656d0:	sub	r0, fp, #44	; 0x2c
   656d4:	ldr	r3, [r4]
   656d8:	bl	18ac <fwrite@plt>
   656dc:	ldr	r3, [r4]
   656e0:	sub	r0, fp, #60	; 0x3c
   656e4:	mov	r1, #4
   656e8:	mov	r2, #1
   656ec:	bl	18ac <fwrite@plt>
   656f0:	ldr	r0, [r5, #4]
   656f4:	cmp	r0, #1
   656f8:	blt	65734 <Mat_VarWrite5+0x1d8>
   656fc:	mov	r7, #0
   65700:	add	r6, sp, #2064	; 0x810
   65704:	ldr	r0, [r5, #32]
   65708:	mov	r1, #4
   6570c:	mov	r2, #1
   65710:	ldr	r0, [r0, r7, lsl #2]
   65714:	str	r0, [sp, #2064]	; 0x810
   65718:	mov	r0, r6
   6571c:	ldr	r3, [r4]
   65720:	bl	18ac <fwrite@plt>
   65724:	ldr	r0, [r5, #4]
   65728:	add	r7, r7, #1
   6572c:	cmp	r7, r0
   65730:	blt	65704 <Mat_VarWrite5+0x1a8>
   65734:	tst	r0, #1
   65738:	beq	65750 <Mat_VarWrite5+0x1f4>
   6573c:	ldr	r3, [r4]
   65740:	sub	r0, fp, #52	; 0x34
   65744:	mov	r1, #4
   65748:	mov	r2, #1
   6574c:	bl	18ac <fwrite@plt>
   65750:	ldr	r0, [r5, #36]	; 0x24
   65754:	bl	1954 <strlen@plt>
   65758:	mov	r6, r0
   6575c:	cmp	r0, #4
   65760:	bhi	65834 <Mat_VarWrite5+0x2d8>
   65764:	mov	r0, #1
   65768:	mov	r1, #4
   6576c:	mov	r2, #1
   65770:	orr	r0, r0, r6, lsl #16
   65774:	str	r0, [sp, #2064]	; 0x810
   65778:	add	r0, sp, #2064	; 0x810
   6577c:	ldr	r3, [r4]
   65780:	bl	18ac <fwrite@plt>
   65784:	ldr	r0, [r5, #36]	; 0x24
   65788:	ldr	r3, [r4]
   6578c:	mov	r1, #1
   65790:	mov	r2, r6
   65794:	bl	18ac <fwrite@plt>
   65798:	cmp	r6, #4
   6579c:	beq	658ac <Mat_VarWrite5+0x350>
   657a0:	ldr	r1, [r4]
   657a4:	mov	r0, #0
   657a8:	bl	19e4 <fputc@plt>
   657ac:	add	r6, r6, #1
   657b0:	cmp	r6, #4
   657b4:	blt	657a0 <Mat_VarWrite5+0x244>
   657b8:	b	658ac <Mat_VarWrite5+0x350>
   657bc:	add	r9, sp, #16
   657c0:	mov	r1, #0
   657c4:	mov	r2, #2048	; 0x800
   657c8:	mov	r0, r9
   657cc:	bl	1990 <memset@plt>
   657d0:	mov	r0, #1
   657d4:	mov	r1, #56	; 0x38
   657d8:	bl	1798 <calloc@plt>
   657dc:	cmp	r0, #0
   657e0:	beq	65828 <Mat_VarWrite5+0x2cc>
   657e4:	ldr	r2, [pc, #1636]	; 65e50 <Mat_VarWrite5+0x8f4>
   657e8:	mvn	r1, #0
   657ec:	mov	r3, #56	; 0x38
   657f0:	mov	r7, r0
   657f4:	add	r2, pc, r2
   657f8:	bl	18dc <deflateInit_@plt>
   657fc:	cmp	r0, #0
   65800:	beq	65978 <Mat_VarWrite5+0x41c>
   65804:	mov	r8, r0
   65808:	mov	r0, r7
   6580c:	bl	1804 <free@plt>
   65810:	mov	r0, r8
   65814:	bl	1888 <zError@plt>
   65818:	mov	r1, r0
   6581c:	ldr	r0, [pc, #1584]	; 65e54 <Mat_VarWrite5+0x8f8>
   65820:	add	r0, pc, r0
   65824:	bl	19b4 <Mat_Critical@plt>
   65828:	mov	r0, r6
   6582c:	sub	sp, fp, #28
   65830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65834:	mov	r0, #1
   65838:	str	r6, [sp, #16]
   6583c:	mov	r1, #4
   65840:	mov	r2, #1
   65844:	str	r0, [sp, #2064]	; 0x810
   65848:	add	r0, sp, #2064	; 0x810
   6584c:	ldr	r3, [r4]
   65850:	bl	18ac <fwrite@plt>
   65854:	ldr	r3, [r4]
   65858:	add	r0, sp, #16
   6585c:	mov	r1, #4
   65860:	mov	r2, #1
   65864:	bl	18ac <fwrite@plt>
   65868:	ldr	r6, [sp, #16]
   6586c:	ldr	r0, [r5, #36]	; 0x24
   65870:	ldr	r3, [r4]
   65874:	mov	r1, #1
   65878:	mov	r2, r6
   6587c:	bl	18ac <fwrite@plt>
   65880:	asr	r0, r6, #31
   65884:	add	r0, r6, r0, lsr #29
   65888:	bic	r0, r0, #7
   6588c:	subs	r0, r6, r0
   65890:	beq	658ac <Mat_VarWrite5+0x350>
   65894:	sub	r6, r0, #8
   65898:	ldr	r1, [r4]
   6589c:	mov	r0, #0
   658a0:	bl	19e4 <fputc@plt>
   658a4:	adds	r6, r6, #1
   658a8:	bcc	65898 <Mat_VarWrite5+0x33c>
   658ac:	ldr	r0, [r5, #52]	; 0x34
   658b0:	cmp	r0, #0
   658b4:	beq	658e0 <Mat_VarWrite5+0x384>
   658b8:	ldr	r0, [r4]
   658bc:	bl	1840 <ftell@plt>
   658c0:	ldr	r1, [r5, #52]	; 0x34
   658c4:	cmn	r0, #1
   658c8:	str	r0, [r1]
   658cc:	bne	658e8 <Mat_VarWrite5+0x38c>
   658d0:	ldr	r0, [pc, #1396]	; 65e4c <Mat_VarWrite5+0x8f0>
   658d4:	add	r0, pc, r0
   658d8:	bl	19b4 <Mat_Critical@plt>
   658dc:	b	658e8 <Mat_VarWrite5+0x38c>
   658e0:	mov	r0, #0
   658e4:	str	r0, [r5, #16]
   658e8:	mov	r0, r4
   658ec:	mov	r1, r5
   658f0:	bl	65e60 <WriteType>
   658f4:	ldr	r0, [r4]
   658f8:	bl	1840 <ftell@plt>
   658fc:	cmn	r8, #1
   65900:	movne	r5, r0
   65904:	cmnne	r0, #1
   65908:	bne	65928 <Mat_VarWrite5+0x3cc>
   6590c:	ldr	r0, [pc, #1352]	; 65e5c <Mat_VarWrite5+0x900>
   65910:	add	r0, pc, r0
   65914:	bl	19b4 <Mat_Critical@plt>
   65918:	mov	r6, #0
   6591c:	mov	r0, r6
   65920:	sub	sp, fp, #28
   65924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65928:	sub	r0, r5, r8
   6592c:	mvn	r1, #3
   65930:	mov	r2, #1
   65934:	str	r0, [fp, #-60]	; 0xffffffc4
   65938:	sub	r1, r1, r0
   6593c:	ldr	r0, [r4]
   65940:	bl	1a2c <fseek@plt>
   65944:	ldr	r3, [r4]
   65948:	sub	r0, fp, #60	; 0x3c
   6594c:	mov	r1, #4
   65950:	mov	r2, #1
   65954:	bl	18ac <fwrite@plt>
   65958:	ldr	r0, [r4]
   6595c:	mov	r1, r5
   65960:	mov	r2, #0
   65964:	mov	r6, #0
   65968:	bl	1a2c <fseek@plt>
   6596c:	mov	r0, r6
   65970:	sub	sp, fp, #28
   65974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65978:	mov	r0, #15
   6597c:	mov	r1, #4
   65980:	mov	r2, #1
   65984:	str	r0, [fp, #-56]	; 0xffffffc8
   65988:	sub	r0, fp, #56	; 0x38
   6598c:	ldr	r3, [r4]
   65990:	bl	18ac <fwrite@plt>
   65994:	ldr	r3, [r4]
   65998:	sub	r0, fp, #52	; 0x34
   6599c:	mov	r1, #4
   659a0:	mov	r2, #1
   659a4:	bl	18ac <fwrite@plt>
   659a8:	ldr	r0, [r4]
   659ac:	bl	1840 <ftell@plt>
   659b0:	str	r0, [sp, #12]
   659b4:	ldr	r0, [r5, #16]
   659b8:	ldr	r1, [r5, #20]
   659bc:	uxtb	r8, r0
   659c0:	cmp	r1, #0
   659c4:	str	r8, [fp, #-36]	; 0xffffffdc
   659c8:	orrne	r8, r8, #2048	; 0x800
   659cc:	strne	r8, [fp, #-36]	; 0xffffffdc
   659d0:	ldr	r1, [r5, #24]
   659d4:	cmp	r1, #0
   659d8:	orrne	r8, r8, #1024	; 0x400
   659dc:	strne	r8, [fp, #-36]	; 0xffffffdc
   659e0:	ldr	r1, [r5, #28]
   659e4:	cmp	r1, #0
   659e8:	mov	r1, #0
   659ec:	orrne	r8, r8, #512	; 0x200
   659f0:	strne	r8, [fp, #-36]	; 0xffffffdc
   659f4:	cmp	r0, #5
   659f8:	bne	65a08 <Mat_VarWrite5+0x4ac>
   659fc:	ldr	r0, [r5, #40]	; 0x28
   65a00:	ldr	r1, [r0]
   65a04:	str	r1, [fp, #-64]	; 0xffffffc0
   65a08:	mov	r0, #14
   65a0c:	mov	r6, #24
   65a10:	str	r1, [sp, #8]
   65a14:	str	r0, [sp, #16]
   65a18:	ldr	r0, [r5, #36]	; 0x24
   65a1c:	cmp	r0, #0
   65a20:	beq	65a40 <Mat_VarWrite5+0x4e4>
   65a24:	bl	1954 <strlen@plt>
   65a28:	cmp	r0, #5
   65a2c:	bcc	65a40 <Mat_VarWrite5+0x4e4>
   65a30:	ands	r1, r0, #7
   65a34:	sub	r1, r0, r1
   65a38:	addne	r0, r1, #8
   65a3c:	add	r6, r0, #24
   65a40:	mov	r0, r5
   65a44:	bl	69f84 <GetTypeBufSize>
   65a48:	add	r0, r0, r6
   65a4c:	str	r9, [r7]
   65a50:	mov	sl, #2048	; 0x800
   65a54:	str	r0, [sp, #20]
   65a58:	mov	r0, #8
   65a5c:	str	r0, [r7, #4]
   65a60:	orr	r0, r9, #4
   65a64:	add	r9, sp, #2064	; 0x810
   65a68:	str	r0, [sp, #4]
   65a6c:	mov	r0, r7
   65a70:	mov	r1, #0
   65a74:	str	r9, [r7, #12]
   65a78:	str	sl, [r7, #16]
   65a7c:	bl	1894 <deflate@plt>
   65a80:	ldr	r0, [r7, #16]
   65a84:	ldr	r3, [r4]
   65a88:	mov	r1, #1
   65a8c:	rsb	r2, r0, #2048	; 0x800
   65a90:	mov	r0, r9
   65a94:	bl	18ac <fwrite@plt>
   65a98:	ldr	r0, [r7, #16]
   65a9c:	cmp	r0, #0
   65aa0:	beq	65a6c <Mat_VarWrite5+0x510>
   65aa4:	ldr	r0, [sp, #8]
   65aa8:	mov	r1, #5
   65aac:	str	r0, [sp, #28]
   65ab0:	mov	r0, #8
   65ab4:	str	r8, [sp, #24]
   65ab8:	str	r0, [sp, #20]
   65abc:	mov	r0, #6
   65ac0:	str	r0, [sp, #16]
   65ac4:	ldr	r0, [r5, #4]
   65ac8:	str	r1, [sp, #32]
   65acc:	lsl	r1, r0, #2
   65ad0:	cmp	r0, #1
   65ad4:	str	r1, [sp, #36]	; 0x24
   65ad8:	str	r1, [fp, #-60]	; 0xffffffc4
   65adc:	blt	65b64 <Mat_VarWrite5+0x608>
   65ae0:	ldr	r6, [r5, #32]
   65ae4:	mov	r8, #0
   65ae8:	cmp	r0, #4
   65aec:	add	ip, sp, #16
   65af0:	bcc	65bb0 <Mat_VarWrite5+0x654>
   65af4:	add	r1, r6, r0, lsl #2
   65af8:	add	r3, ip, #24
   65afc:	cmp	r3, r1
   65b00:	addcc	r1, ip, r0, lsl #2
   65b04:	addcc	r1, r1, #24
   65b08:	cmpcc	r6, r1
   65b0c:	bcc	65bb0 <Mat_VarWrite5+0x654>
   65b10:	bic	r8, r0, #3
   65b14:	mov	r2, #1
   65b18:	str	r6, [sp, #8]
   65b1c:	subs	r1, r8, #4
   65b20:	add	r1, r2, r1, lsr #2
   65b24:	and	r2, r1, #1
   65b28:	str	r2, [sp]
   65b2c:	beq	65b78 <Mat_VarWrite5+0x61c>
   65b30:	sub	r2, r1, r2
   65b34:	mov	r1, #0
   65b38:	mov	sl, #32
   65b3c:	add	lr, r6, #16
   65b40:	vld1.32	{d16-d17}, [r6], sl
   65b44:	add	ip, r3, #16
   65b48:	subs	r2, r2, #2
   65b4c:	add	r1, r1, #8
   65b50:	vst1.32	{d16-d17}, [r3], sl
   65b54:	vld1.32	{d16-d17}, [lr]
   65b58:	vst1.64	{d16-d17}, [ip]
   65b5c:	bne	65b3c <Mat_VarWrite5+0x5e0>
   65b60:	b	65b7c <Mat_VarWrite5+0x620>
   65b64:	mov	r2, #0
   65b68:	add	ip, sp, #16
   65b6c:	tst	r0, #1
   65b70:	bne	65c14 <Mat_VarWrite5+0x6b8>
   65b74:	b	65c24 <Mat_VarWrite5+0x6c8>
   65b78:	mov	r1, #0
   65b7c:	ldr	r2, [sp]
   65b80:	ldr	r6, [sp, #8]
   65b84:	add	ip, sp, #16
   65b88:	cmp	r2, #0
   65b8c:	beq	65ba4 <Mat_VarWrite5+0x648>
   65b90:	add	r2, r6, r1, lsl #2
   65b94:	add	r1, ip, r1, lsl #2
   65b98:	vld1.32	{d16-d17}, [r2]
   65b9c:	add	r1, r1, #24
   65ba0:	vst1.64	{d16-d17}, [r1]
   65ba4:	cmp	r0, r8
   65ba8:	mov	r2, r0
   65bac:	beq	65c0c <Mat_VarWrite5+0x6b0>
   65bb0:	tst	r0, #1
   65bb4:	mov	r1, r8
   65bb8:	beq	65bcc <Mat_VarWrite5+0x670>
   65bbc:	ldr	r1, [r6, r8, lsl #2]
   65bc0:	add	r2, ip, r8, lsl #2
   65bc4:	str	r1, [r2, #24]
   65bc8:	orr	r1, r8, #1
   65bcc:	orr	r2, r8, #1
   65bd0:	cmp	r0, r2
   65bd4:	mov	r2, r0
   65bd8:	beq	65c0c <Mat_VarWrite5+0x6b0>
   65bdc:	add	r2, r6, r1, lsl #2
   65be0:	add	r2, r2, #4
   65be4:	ldr	r6, [r2, #-4]
   65be8:	add	r3, ip, r1, lsl #2
   65bec:	add	r1, r1, #2
   65bf0:	cmp	r0, r1
   65bf4:	str	r6, [r3, #24]
   65bf8:	ldr	r6, [r2]
   65bfc:	add	r2, r2, #8
   65c00:	str	r6, [r3, #28]
   65c04:	bne	65be4 <Mat_VarWrite5+0x688>
   65c08:	mov	r2, r0
   65c0c:	tst	r0, #1
   65c10:	beq	65c24 <Mat_VarWrite5+0x6c8>
   65c14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   65c18:	add	r0, ip, r2, lsl #2
   65c1c:	add	r2, r2, #1
   65c20:	str	r1, [r0, #24]
   65c24:	add	r0, ip, #8
   65c28:	mov	r6, #2048	; 0x800
   65c2c:	str	ip, [r7]
   65c30:	str	r0, [sp, #8]
   65c34:	mov	r0, #24
   65c38:	add	r0, r0, r2, lsl #2
   65c3c:	str	r0, [r7, #4]
   65c40:	mov	r0, r7
   65c44:	mov	r1, #0
   65c48:	str	r9, [r7, #12]
   65c4c:	str	r6, [r7, #16]
   65c50:	bl	1894 <deflate@plt>
   65c54:	ldr	r0, [r7, #16]
   65c58:	ldr	r3, [r4]
   65c5c:	mov	r1, #1
   65c60:	rsb	r2, r0, #2048	; 0x800
   65c64:	mov	r0, r9
   65c68:	bl	18ac <fwrite@plt>
   65c6c:	ldr	r0, [r7, #16]
   65c70:	cmp	r0, #0
   65c74:	beq	65c40 <Mat_VarWrite5+0x6e4>
   65c78:	ldr	r8, [r5, #36]	; 0x24
   65c7c:	mov	r0, r8
   65c80:	bl	1954 <strlen@plt>
   65c84:	mov	sl, r0
   65c88:	cmp	r0, #4
   65c8c:	bhi	65d04 <Mat_VarWrite5+0x7a8>
   65c90:	mov	r0, #0
   65c94:	sxth	r2, sl
   65c98:	mov	r1, r8
   65c9c:	str	r0, [sp, #20]
   65ca0:	mov	r0, #1
   65ca4:	orr	r0, r0, sl, lsl #16
   65ca8:	str	r0, [sp, #16]
   65cac:	ldr	r0, [sp, #4]
   65cb0:	bl	181c <memcpy@plt>
   65cb4:	add	r1, sp, #16
   65cb8:	mov	r6, #2048	; 0x800
   65cbc:	mov	r0, #8
   65cc0:	str	r1, [r7]
   65cc4:	str	r0, [r7, #4]
   65cc8:	mov	r0, r7
   65ccc:	mov	r1, #0
   65cd0:	str	r9, [r7, #12]
   65cd4:	str	r6, [r7, #16]
   65cd8:	bl	1894 <deflate@plt>
   65cdc:	ldr	r0, [r7, #16]
   65ce0:	ldr	r3, [r4]
   65ce4:	mov	r1, #1
   65ce8:	rsb	r2, r0, #2048	; 0x800
   65cec:	mov	r0, r9
   65cf0:	bl	18ac <fwrite@plt>
   65cf4:	ldr	r0, [r7, #16]
   65cf8:	cmp	r0, #0
   65cfc:	beq	65cc8 <Mat_VarWrite5+0x76c>
   65d00:	b	65d94 <Mat_VarWrite5+0x838>
   65d04:	ldr	r6, [sp, #8]
   65d08:	mov	r1, #0
   65d0c:	movw	r2, #2040	; 0x7f8
   65d10:	mov	r0, r6
   65d14:	bl	1990 <memset@plt>
   65d18:	mov	r0, #1
   65d1c:	str	sl, [sp, #20]
   65d20:	mov	r1, r8
   65d24:	mov	r2, sl
   65d28:	str	r0, [sp, #16]
   65d2c:	mov	r0, r6
   65d30:	bl	181c <memcpy@plt>
   65d34:	asr	r0, sl, #31
   65d38:	mov	r6, #2048	; 0x800
   65d3c:	add	r0, sl, r0, lsr #29
   65d40:	bic	r0, r0, #7
   65d44:	subs	r1, sl, r0
   65d48:	add	r1, sp, #16
   65d4c:	addne	sl, r0, #8
   65d50:	str	r1, [r7]
   65d54:	add	r0, sl, #8
   65d58:	str	r0, [r7, #4]
   65d5c:	mov	r0, r7
   65d60:	mov	r1, #0
   65d64:	str	r9, [r7, #12]
   65d68:	str	r6, [r7, #16]
   65d6c:	bl	1894 <deflate@plt>
   65d70:	ldr	r0, [r7, #16]
   65d74:	ldr	r3, [r4]
   65d78:	mov	r1, #1
   65d7c:	rsb	r2, r0, #2048	; 0x800
   65d80:	mov	r0, r9
   65d84:	bl	18ac <fwrite@plt>
   65d88:	ldr	r0, [r7, #16]
   65d8c:	cmp	r0, #0
   65d90:	beq	65d5c <Mat_VarWrite5+0x800>
   65d94:	ldr	r0, [r5, #52]	; 0x34
   65d98:	cmp	r0, #0
   65d9c:	beq	65dc8 <Mat_VarWrite5+0x86c>
   65da0:	ldr	r0, [r4]
   65da4:	bl	1840 <ftell@plt>
   65da8:	ldr	r1, [r5, #52]	; 0x34
   65dac:	cmn	r0, #1
   65db0:	str	r0, [r1]
   65db4:	bne	65dd0 <Mat_VarWrite5+0x874>
   65db8:	ldr	r0, [pc, #152]	; 65e58 <Mat_VarWrite5+0x8fc>
   65dbc:	add	r0, pc, r0
   65dc0:	bl	19b4 <Mat_Critical@plt>
   65dc4:	b	65dd0 <Mat_VarWrite5+0x874>
   65dc8:	mov	r0, #0
   65dcc:	str	r0, [r5, #16]
   65dd0:	mov	r0, r4
   65dd4:	mov	r1, r5
   65dd8:	mov	r2, r7
   65ddc:	bl	67260 <WriteCompressedType>
   65de0:	mov	r0, #0
   65de4:	mov	r8, #2048	; 0x800
   65de8:	str	r0, [r7]
   65dec:	str	r0, [r7, #4]
   65df0:	mov	r0, r7
   65df4:	mov	r1, #4
   65df8:	str	r9, [r7, #12]
   65dfc:	str	r8, [r7, #16]
   65e00:	bl	1894 <deflate@plt>
   65e04:	mov	r5, r0
   65e08:	ldr	r0, [r7, #16]
   65e0c:	ldr	r3, [r4]
   65e10:	mov	r1, #1
   65e14:	rsb	r2, r0, #2048	; 0x800
   65e18:	mov	r0, r9
   65e1c:	bl	18ac <fwrite@plt>
   65e20:	cmp	r5, #1
   65e24:	beq	65e34 <Mat_VarWrite5+0x8d8>
   65e28:	ldr	r0, [r7, #16]
   65e2c:	cmp	r0, #0
   65e30:	beq	65df0 <Mat_VarWrite5+0x894>
   65e34:	mov	r0, r7
   65e38:	bl	19c0 <deflateEnd@plt>
   65e3c:	mov	r0, r7
   65e40:	bl	1804 <free@plt>
   65e44:	ldr	r8, [sp, #12]
   65e48:	b	658f4 <Mat_VarWrite5+0x398>
   65e4c:	.word	0x0000c390
   65e50:	.word	0x0000c6c5
   65e54:	.word	0x0000c6a0
   65e58:	.word	0x0000bea8
   65e5c:	.word	0x0000c354

00065e60 <WriteType>:
   65e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   65e64:	add	fp, sp, #28
   65e68:	sub	sp, sp, #108	; 0x6c
   65e6c:	mov	r7, r1
   65e70:	mov	r4, r0
   65e74:	mov	r0, #1
   65e78:	add	r1, sp, #28
   65e7c:	strh	r0, [sp, #38]	; 0x26
   65e80:	str	r0, [sp, #28]
   65e84:	mov	r0, r7
   65e88:	bl	6be10 <SafeMulDims>
   65e8c:	ldr	r0, [r7, #16]
   65e90:	sub	r1, r0, #6
   65e94:	cmp	r1, #10
   65e98:	bcs	66038 <WriteType+0x1d8>
   65e9c:	ldr	r0, [r7, #20]
   65ea0:	ldr	r6, [r7, #40]	; 0x28
   65ea4:	cmp	r0, #0
   65ea8:	beq	660a8 <WriteType+0x248>
   65eac:	ldr	r5, [pc, #3732]	; 66d48 <WriteType+0xee8>
   65eb0:	cmp	r6, #0
   65eb4:	ldr	r0, [r7, #8]
   65eb8:	mov	r1, #0
   65ebc:	add	r5, pc, r5
   65ec0:	movne	r5, r6
   65ec4:	ldr	r6, [sp, #28]
   65ec8:	cmp	r4, #0
   65ecc:	ldr	r8, [r5]
   65ed0:	str	r0, [fp, #-32]	; 0xffffffe0
   65ed4:	str	r1, [fp, #-36]	; 0xffffffdc
   65ed8:	beq	65f48 <WriteType+0xe8>
   65edc:	ldr	r2, [r4]
   65ee0:	cmp	r2, #0
   65ee4:	beq	65f48 <WriteType+0xe8>
   65ee8:	bl	1924 <Mat_SizeOf@plt>
   65eec:	mov	r9, r0
   65ef0:	mul	r0, r0, r6
   65ef4:	mov	r1, #4
   65ef8:	mov	r2, #1
   65efc:	str	r0, [fp, #-36]	; 0xffffffdc
   65f00:	sub	r0, fp, #32
   65f04:	ldr	r3, [r4]
   65f08:	bl	18ac <fwrite@plt>
   65f0c:	ldr	r3, [r4]
   65f10:	sub	r0, fp, #36	; 0x24
   65f14:	mov	r1, #4
   65f18:	mov	r2, #1
   65f1c:	bl	18ac <fwrite@plt>
   65f20:	cmp	r8, #0
   65f24:	beq	65f44 <WriteType+0xe4>
   65f28:	cmp	r6, #1
   65f2c:	blt	65f44 <WriteType+0xe4>
   65f30:	ldr	r3, [r4]
   65f34:	mov	r0, r8
   65f38:	mov	r1, r9
   65f3c:	mov	r2, r6
   65f40:	bl	18ac <fwrite@plt>
   65f44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   65f48:	asr	r0, r1, #31
   65f4c:	str	r1, [sp, #32]
   65f50:	add	r0, r1, r0, lsr #29
   65f54:	bic	r0, r0, #7
   65f58:	subs	r0, r1, r0
   65f5c:	beq	65f78 <WriteType+0x118>
   65f60:	sub	r6, r0, #8
   65f64:	ldr	r1, [r4]
   65f68:	mov	r0, #0
   65f6c:	bl	19e4 <fputc@plt>
   65f70:	adds	r6, r6, #1
   65f74:	bcc	65f64 <WriteType+0x104>
   65f78:	ldr	r6, [r5, #4]
   65f7c:	ldr	r0, [r7, #8]
   65f80:	ldr	r5, [sp, #28]
   65f84:	mov	r1, #0
   65f88:	cmp	r4, #0
   65f8c:	str	r1, [fp, #-36]	; 0xffffffdc
   65f90:	str	r0, [fp, #-32]	; 0xffffffe0
   65f94:	beq	66004 <WriteType+0x1a4>
   65f98:	ldr	r2, [r4]
   65f9c:	cmp	r2, #0
   65fa0:	beq	66004 <WriteType+0x1a4>
   65fa4:	bl	1924 <Mat_SizeOf@plt>
   65fa8:	mov	r7, r0
   65fac:	mul	r0, r0, r5
   65fb0:	mov	r1, #4
   65fb4:	mov	r2, #1
   65fb8:	str	r0, [fp, #-36]	; 0xffffffdc
   65fbc:	sub	r0, fp, #32
   65fc0:	ldr	r3, [r4]
   65fc4:	bl	18ac <fwrite@plt>
   65fc8:	ldr	r3, [r4]
   65fcc:	sub	r0, fp, #36	; 0x24
   65fd0:	mov	r1, #4
   65fd4:	mov	r2, #1
   65fd8:	bl	18ac <fwrite@plt>
   65fdc:	cmp	r6, #0
   65fe0:	beq	66000 <WriteType+0x1a0>
   65fe4:	cmp	r5, #1
   65fe8:	blt	66000 <WriteType+0x1a0>
   65fec:	ldr	r3, [r4]
   65ff0:	mov	r0, r6
   65ff4:	mov	r1, r7
   65ff8:	mov	r2, r5
   65ffc:	bl	18ac <fwrite@plt>
   66000:	ldr	r1, [fp, #-36]	; 0xffffffdc
   66004:	asr	r0, r1, #31
   66008:	str	r1, [sp, #32]
   6600c:	add	r0, r1, r0, lsr #29
   66010:	bic	r0, r0, #7
   66014:	subs	r0, r1, r0
   66018:	beq	66160 <WriteType+0x300>
   6601c:	sub	r5, r0, #8
   66020:	ldr	r1, [r4]
   66024:	mov	r0, #0
   66028:	bl	19e4 <fputc@plt>
   6602c:	adds	r5, r5, #1
   66030:	bcc	66020 <WriteType+0x1c0>
   66034:	b	66160 <WriteType+0x300>
   66038:	sub	r0, r0, #1
   6603c:	cmp	r0, #4
   66040:	bhi	66160 <WriteType+0x300>
   66044:	add	r1, pc, #4
   66048:	ldr	r0, [r1, r0, lsl #2]
   6604c:	add	pc, r1, r0
   66050:	.word	0x00000014
   66054:	.word	0x00000118
   66058:	.word	0x00000110
   6605c:	.word	0x00000788
   66060:	.word	0x0000089c
   66064:	ldr	r0, [r7]
   66068:	cmp	r0, #0
   6606c:	beq	66160 <WriteType+0x300>
   66070:	ldr	r9, [r7, #40]	; 0x28
   66074:	cmp	r9, #0
   66078:	ldrne	r1, [r7, #12]
   6607c:	cmpne	r1, #0
   66080:	beq	66160 <WriteType+0x300>
   66084:	udiv	r2, r0, r1
   66088:	cmp	r1, r0
   6608c:	str	r2, [sp, #28]
   66090:	bhi	66160 <WriteType+0x300>
   66094:	mov	r5, #0
   66098:	mov	r7, #1
   6609c:	sub	sl, fp, #64	; 0x40
   660a0:	mov	r6, #0
   660a4:	b	66da4 <WriteType+0xf44>
   660a8:	ldr	r0, [r7, #8]
   660ac:	ldr	r5, [sp, #28]
   660b0:	mov	r1, #0
   660b4:	cmp	r4, #0
   660b8:	str	r1, [fp, #-36]	; 0xffffffdc
   660bc:	str	r0, [fp, #-32]	; 0xffffffe0
   660c0:	beq	66130 <WriteType+0x2d0>
   660c4:	ldr	r2, [r4]
   660c8:	cmp	r2, #0
   660cc:	beq	66130 <WriteType+0x2d0>
   660d0:	bl	1924 <Mat_SizeOf@plt>
   660d4:	mov	r7, r0
   660d8:	mul	r0, r0, r5
   660dc:	mov	r1, #4
   660e0:	mov	r2, #1
   660e4:	str	r0, [fp, #-36]	; 0xffffffdc
   660e8:	sub	r0, fp, #32
   660ec:	ldr	r3, [r4]
   660f0:	bl	18ac <fwrite@plt>
   660f4:	ldr	r3, [r4]
   660f8:	sub	r0, fp, #36	; 0x24
   660fc:	mov	r1, #4
   66100:	mov	r2, #1
   66104:	bl	18ac <fwrite@plt>
   66108:	cmp	r6, #0
   6610c:	beq	6612c <WriteType+0x2cc>
   66110:	cmp	r5, #1
   66114:	blt	6612c <WriteType+0x2cc>
   66118:	ldr	r3, [r4]
   6611c:	mov	r0, r6
   66120:	mov	r1, r7
   66124:	mov	r2, r5
   66128:	bl	18ac <fwrite@plt>
   6612c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   66130:	asr	r0, r1, #31
   66134:	str	r1, [sp, #32]
   66138:	add	r0, r1, r0, lsr #29
   6613c:	bic	r0, r0, #7
   66140:	subs	r0, r1, r0
   66144:	beq	66160 <WriteType+0x300>
   66148:	sub	r5, r0, #8
   6614c:	ldr	r1, [r4]
   66150:	mov	r0, #0
   66154:	bl	19e4 <fputc@plt>
   66158:	adds	r5, r5, #1
   6615c:	bcc	6614c <WriteType+0x2ec>
   66160:	sub	sp, fp, #28
   66164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   66168:	ldr	r0, [r7, #52]	; 0x34
   6616c:	ldr	r9, [r0, #4]
   66170:	cmp	r9, #0
   66174:	beq	66bfc <WriteType+0xd9c>
   66178:	ldr	sl, [r7, #40]	; 0x28
   6617c:	ldr	r8, [r0, #8]
   66180:	str	r7, [sp, #4]
   66184:	mov	r5, #0
   66188:	mov	r7, #0
   6618c:	ldr	r0, [r8, r7, lsl #2]
   66190:	mov	r6, r5
   66194:	bl	1954 <strlen@plt>
   66198:	cmp	r0, r5
   6619c:	add	r7, r7, #1
   661a0:	movhi	r5, r0
   661a4:	cmp	r9, r7
   661a8:	bne	6618c <WriteType+0x32c>
   661ac:	cmp	r0, r6
   661b0:	str	sl, [sp, #8]
   661b4:	movhi	r6, r0
   661b8:	add	r0, r6, #1
   661bc:	mul	r0, r9, r0
   661c0:	add	r1, r0, r9
   661c4:	tst	r0, #7
   661c8:	add	r5, r5, #1
   661cc:	mov	r0, r1
   661d0:	bne	661c0 <WriteType+0x360>
   661d4:	movw	r0, #5
   661d8:	str	r5, [sp, #24]
   661dc:	mov	r1, #4
   661e0:	mov	r2, #1
   661e4:	movt	r0, #4
   661e8:	str	r0, [sp, #16]
   661ec:	add	r0, sp, #16
   661f0:	ldr	r3, [r4]
   661f4:	bl	18ac <fwrite@plt>
   661f8:	ldr	r3, [r4]
   661fc:	add	r0, sp, #24
   66200:	mov	r1, #4
   66204:	mov	r2, #1
   66208:	bl	18ac <fwrite@plt>
   6620c:	ldr	r3, [r4]
   66210:	add	r0, sp, #38	; 0x26
   66214:	mov	r1, #2
   66218:	mov	r2, #1
   6621c:	bl	18ac <fwrite@plt>
   66220:	ldr	r1, [r4]
   66224:	mov	r0, #0
   66228:	mov	r8, #0
   6622c:	bl	19e4 <fputc@plt>
   66230:	ldr	r1, [r4]
   66234:	mov	r0, #0
   66238:	bl	19e4 <fputc@plt>
   6623c:	ldr	r5, [sp, #24]
   66240:	mov	r1, #4
   66244:	mov	r2, #1
   66248:	mul	r0, r5, r9
   6624c:	str	r0, [sp, #32]
   66250:	add	r0, sp, #32
   66254:	ldr	r3, [r4]
   66258:	bl	18ac <fwrite@plt>
   6625c:	mov	r0, r5
   66260:	mov	r1, #1
   66264:	str	r5, [sp, #12]
   66268:	bl	1798 <calloc@plt>
   6626c:	ldr	r6, [sp, #4]
   66270:	mov	sl, r0
   66274:	ldr	r0, [r6, #52]	; 0x34
   66278:	ldr	r0, [r0, #8]
   6627c:	ldr	r7, [r0, r8, lsl #2]
   66280:	mov	r0, r7
   66284:	bl	1954 <strlen@plt>
   66288:	ldr	r3, [r4]
   6628c:	mov	r5, r0
   66290:	mov	r0, r7
   66294:	mov	r1, #1
   66298:	mov	r2, r5
   6629c:	bl	18ac <fwrite@plt>
   662a0:	ldr	r0, [sp, #12]
   662a4:	ldr	r3, [r4]
   662a8:	mov	r1, #1
   662ac:	sub	r2, r0, r5
   662b0:	mov	r0, sl
   662b4:	bl	18ac <fwrite@plt>
   662b8:	add	r8, r8, #1
   662bc:	cmp	r9, r8
   662c0:	bne	66274 <WriteType+0x414>
   662c4:	mov	r0, sl
   662c8:	bl	1804 <free@plt>
   662cc:	ldr	r1, [sp, #28]
   662d0:	add	r0, sp, #20
   662d4:	mov	r2, r9
   662d8:	bl	6be6c <SafeMul>
   662dc:	ldr	r0, [sp, #20]
   662e0:	ldr	r7, [sp, #8]
   662e4:	cmp	r0, #0
   662e8:	beq	66160 <WriteType+0x300>
   662ec:	mov	r8, #0
   662f0:	mov	r6, #1
   662f4:	mov	r0, #6
   662f8:	mov	r1, #5
   662fc:	mov	r2, #8
   66300:	mov	r3, #14
   66304:	mov	r9, #0
   66308:	b	66370 <WriteType+0x510>
   6630c:	sub	r0, r5, sl
   66310:	mvn	r1, #3
   66314:	mov	r2, #1
   66318:	str	r0, [fp, #-36]	; 0xffffffdc
   6631c:	sub	r1, r1, r0
   66320:	ldr	r0, [r4]
   66324:	bl	1a2c <fseek@plt>
   66328:	ldr	r3, [r4]
   6632c:	sub	r0, fp, #36	; 0x24
   66330:	mov	r1, #4
   66334:	mov	r2, #1
   66338:	bl	18ac <fwrite@plt>
   6633c:	ldr	r0, [r4]
   66340:	mov	r1, r5
   66344:	mov	r2, #0
   66348:	bl	1a2c <fseek@plt>
   6634c:	ldr	r7, [sp, #8]
   66350:	ldr	r0, [sp, #20]
   66354:	add	r9, r9, #1
   66358:	mov	r1, #5
   6635c:	mov	r2, #8
   66360:	mov	r3, #14
   66364:	cmp	r9, r0
   66368:	mov	r0, #6
   6636c:	bcs	66160 <WriteType+0x300>
   66370:	ldr	r5, [r7, r9, lsl #2]
   66374:	str	r6, [sp, #64]	; 0x40
   66378:	str	r0, [sp, #60]	; 0x3c
   6637c:	str	r1, [sp, #56]	; 0x38
   66380:	str	r2, [sp, #52]	; 0x34
   66384:	str	r8, [sp, #48]	; 0x30
   66388:	str	r3, [sp, #44]	; 0x2c
   6638c:	str	r8, [sp, #40]	; 0x28
   66390:	cmp	r5, #0
   66394:	beq	66588 <WriteType+0x728>
   66398:	ldr	r3, [r4]
   6639c:	add	r0, sp, #44	; 0x2c
   663a0:	mov	r1, #4
   663a4:	mov	r2, #1
   663a8:	bl	18ac <fwrite@plt>
   663ac:	ldr	r3, [r4]
   663b0:	add	r0, sp, #48	; 0x30
   663b4:	mov	r1, #4
   663b8:	mov	r2, #1
   663bc:	bl	18ac <fwrite@plt>
   663c0:	ldr	r0, [r5, #16]
   663c4:	cmp	r0, #0
   663c8:	beq	66350 <WriteType+0x4f0>
   663cc:	ldr	r0, [r4]
   663d0:	bl	1840 <ftell@plt>
   663d4:	mov	sl, r0
   663d8:	ldr	r0, [r5, #16]
   663dc:	ldr	r2, [r5, #20]
   663e0:	sub	r6, fp, #32
   663e4:	sub	r7, fp, #40	; 0x28
   663e8:	uxtb	r1, r0
   663ec:	cmp	r2, #0
   663f0:	str	r1, [fp, #-32]	; 0xffffffe0
   663f4:	orrne	r1, r1, #2048	; 0x800
   663f8:	strne	r1, [fp, #-32]	; 0xffffffe0
   663fc:	ldr	r2, [r5, #24]
   66400:	cmp	r2, #0
   66404:	orrne	r1, r1, #1024	; 0x400
   66408:	strne	r1, [fp, #-32]	; 0xffffffe0
   6640c:	ldr	r2, [r5, #28]
   66410:	cmp	r2, #0
   66414:	orrne	r1, r1, #512	; 0x200
   66418:	strne	r1, [fp, #-32]	; 0xffffffe0
   6641c:	cmp	r0, #5
   66420:	bne	66430 <WriteType+0x5d0>
   66424:	ldr	r0, [r5, #40]	; 0x28
   66428:	ldr	r0, [r0]
   6642c:	str	r0, [sp, #40]	; 0x28
   66430:	ldr	r0, [r4, #20]
   66434:	cmp	r0, #0
   66438:	beq	66448 <WriteType+0x5e8>
   6643c:	mov	r0, r6
   66440:	bl	1bf8 <Mat_int32Swap>
   66444:	str	r0, [fp, #-32]	; 0xffffffe0
   66448:	ldr	r3, [r4]
   6644c:	add	r0, sp, #60	; 0x3c
   66450:	mov	r1, #4
   66454:	mov	r2, #1
   66458:	bl	18ac <fwrite@plt>
   6645c:	ldr	r3, [r4]
   66460:	add	r0, sp, #52	; 0x34
   66464:	mov	r1, #4
   66468:	mov	r2, #1
   6646c:	bl	18ac <fwrite@plt>
   66470:	ldr	r3, [r4]
   66474:	mov	r0, r6
   66478:	mov	r1, #4
   6647c:	mov	r2, #1
   66480:	bl	18ac <fwrite@plt>
   66484:	ldr	r3, [r4]
   66488:	add	r0, sp, #40	; 0x28
   6648c:	mov	r1, #4
   66490:	mov	r2, #1
   66494:	bl	18ac <fwrite@plt>
   66498:	ldr	r0, [r5, #4]
   6649c:	mov	r1, #4
   664a0:	mov	r2, #1
   664a4:	lsl	r0, r0, #2
   664a8:	str	r0, [fp, #-36]	; 0xffffffdc
   664ac:	add	r0, sp, #56	; 0x38
   664b0:	ldr	r3, [r4]
   664b4:	bl	18ac <fwrite@plt>
   664b8:	ldr	r3, [r4]
   664bc:	sub	r0, fp, #36	; 0x24
   664c0:	mov	r1, #4
   664c4:	mov	r2, #1
   664c8:	bl	18ac <fwrite@plt>
   664cc:	ldr	r0, [r5, #4]
   664d0:	cmp	r0, #1
   664d4:	blt	6650c <WriteType+0x6ac>
   664d8:	mov	r6, #0
   664dc:	ldr	r0, [r5, #32]
   664e0:	mov	r1, #4
   664e4:	mov	r2, #1
   664e8:	ldr	r0, [r0, r6, lsl #2]
   664ec:	str	r0, [fp, #-40]	; 0xffffffd8
   664f0:	mov	r0, r7
   664f4:	ldr	r3, [r4]
   664f8:	bl	18ac <fwrite@plt>
   664fc:	ldr	r0, [r5, #4]
   66500:	add	r6, r6, #1
   66504:	cmp	r6, r0
   66508:	blt	664dc <WriteType+0x67c>
   6650c:	tst	r0, #1
   66510:	beq	66528 <WriteType+0x6c8>
   66514:	ldr	r3, [r4]
   66518:	add	r0, sp, #48	; 0x30
   6651c:	mov	r1, #4
   66520:	mov	r2, #1
   66524:	bl	18ac <fwrite@plt>
   66528:	ldr	r3, [r4]
   6652c:	add	r0, sp, #64	; 0x40
   66530:	mov	r1, #4
   66534:	mov	r2, #1
   66538:	bl	18ac <fwrite@plt>
   6653c:	ldr	r3, [r4]
   66540:	add	r0, sp, #48	; 0x30
   66544:	mov	r1, #4
   66548:	mov	r2, #1
   6654c:	bl	18ac <fwrite@plt>
   66550:	mov	r0, r4
   66554:	mov	r1, r5
   66558:	bl	65e60 <WriteType>
   6655c:	ldr	r0, [r4]
   66560:	bl	1840 <ftell@plt>
   66564:	cmn	sl, #1
   66568:	mov	r6, #1
   6656c:	movne	r5, r0
   66570:	cmnne	r0, #1
   66574:	bne	6630c <WriteType+0x4ac>
   66578:	ldr	r0, [pc, #3284]	; 67254 <WriteType+0x13f4>
   6657c:	add	r0, pc, r0
   66580:	bl	19b4 <Mat_Critical@plt>
   66584:	b	6634c <WriteType+0x4ec>
   66588:	sub	ip, fp, #52	; 0x34
   6658c:	str	r1, [fp, #-56]	; 0xffffffc8
   66590:	str	r2, [fp, #-60]	; 0xffffffc4
   66594:	mov	r1, #4
   66598:	mov	r2, #1
   6659c:	stm	ip, {r0, r3, r6}
   665a0:	mov	r0, #0
   665a4:	mov	r6, #6
   665a8:	str	r0, [fp, #-64]	; 0xffffffc0
   665ac:	sub	r0, fp, #48	; 0x30
   665b0:	ldr	r3, [r4]
   665b4:	bl	18ac <fwrite@plt>
   665b8:	ldr	r3, [r4]
   665bc:	sub	r0, fp, #64	; 0x40
   665c0:	mov	r1, #4
   665c4:	mov	r2, #1
   665c8:	bl	18ac <fwrite@plt>
   665cc:	ldr	r0, [r4]
   665d0:	bl	1840 <ftell@plt>
   665d4:	str	r6, [fp, #-40]	; 0xffffffd8
   665d8:	mov	r5, r0
   665dc:	sub	r6, fp, #40	; 0x28
   665e0:	ldr	r0, [r4, #20]
   665e4:	cmp	r0, #0
   665e8:	beq	665f8 <WriteType+0x798>
   665ec:	mov	r0, r6
   665f0:	bl	1bf8 <Mat_int32Swap>
   665f4:	str	r0, [fp, #-40]	; 0xffffffd8
   665f8:	ldr	r3, [r4]
   665fc:	sub	r0, fp, #52	; 0x34
   66600:	mov	r1, #4
   66604:	mov	r2, #1
   66608:	bl	18ac <fwrite@plt>
   6660c:	ldr	r3, [r4]
   66610:	sub	r0, fp, #60	; 0x3c
   66614:	mov	r1, #4
   66618:	mov	r2, #1
   6661c:	bl	18ac <fwrite@plt>
   66620:	ldr	r3, [r4]
   66624:	mov	r0, r6
   66628:	mov	r1, #4
   6662c:	mov	r2, #1
   66630:	bl	18ac <fwrite@plt>
   66634:	ldr	r3, [r4]
   66638:	sub	r8, fp, #64	; 0x40
   6663c:	mov	r1, #4
   66640:	mov	r2, #1
   66644:	mov	r0, r8
   66648:	bl	18ac <fwrite@plt>
   6664c:	mov	r0, #8
   66650:	mov	r1, #4
   66654:	mov	r2, #1
   66658:	str	r0, [sp, #68]	; 0x44
   6665c:	sub	r0, fp, #56	; 0x38
   66660:	ldr	r3, [r4]
   66664:	bl	18ac <fwrite@plt>
   66668:	ldr	r3, [r4]
   6666c:	add	r0, sp, #68	; 0x44
   66670:	mov	r1, #4
   66674:	mov	r2, #1
   66678:	bl	18ac <fwrite@plt>
   6667c:	mov	r6, #0
   66680:	sub	sl, fp, #32
   66684:	mov	r1, #4
   66688:	mov	r2, #1
   6668c:	str	r6, [fp, #-32]	; 0xffffffe0
   66690:	mov	r0, sl
   66694:	ldr	r3, [r4]
   66698:	bl	18ac <fwrite@plt>
   6669c:	str	r6, [fp, #-32]	; 0xffffffe0
   666a0:	mov	r0, sl
   666a4:	mov	r1, #4
   666a8:	mov	r2, #1
   666ac:	ldr	r3, [r4]
   666b0:	bl	18ac <fwrite@plt>
   666b4:	ldr	r3, [r4]
   666b8:	sub	r0, fp, #44	; 0x2c
   666bc:	mov	r1, #4
   666c0:	mov	r2, #1
   666c4:	bl	18ac <fwrite@plt>
   666c8:	ldr	r3, [r4]
   666cc:	mov	r0, r8
   666d0:	mov	r1, #4
   666d4:	mov	r2, #1
   666d8:	bl	18ac <fwrite@plt>
   666dc:	mov	r0, #9
   666e0:	str	r6, [fp, #-36]	; 0xffffffdc
   666e4:	mov	r8, #0
   666e8:	str	r0, [fp, #-32]	; 0xffffffe0
   666ec:	ldr	r0, [r4]
   666f0:	cmp	r0, #0
   666f4:	beq	66730 <WriteType+0x8d0>
   666f8:	mov	r0, #9
   666fc:	bl	1924 <Mat_SizeOf@plt>
   66700:	str	r8, [fp, #-36]	; 0xffffffdc
   66704:	mov	r0, sl
   66708:	mov	r1, #4
   6670c:	mov	r2, #1
   66710:	ldr	r3, [r4]
   66714:	bl	18ac <fwrite@plt>
   66718:	ldr	r3, [r4]
   6671c:	sub	r0, fp, #36	; 0x24
   66720:	mov	r1, #4
   66724:	mov	r2, #1
   66728:	bl	18ac <fwrite@plt>
   6672c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   66730:	asr	r0, r6, #31
   66734:	str	r6, [sp, #68]	; 0x44
   66738:	add	r0, r6, r0, lsr #29
   6673c:	bic	r0, r0, #7
   66740:	subs	r0, r6, r0
   66744:	beq	66760 <WriteType+0x900>
   66748:	sub	r6, r0, #8
   6674c:	ldr	r1, [r4]
   66750:	mov	r0, #0
   66754:	bl	19e4 <fputc@plt>
   66758:	adds	r6, r6, #1
   6675c:	bcc	6674c <WriteType+0x8ec>
   66760:	ldr	r0, [r4]
   66764:	bl	1840 <ftell@plt>
   66768:	ldr	r7, [sp, #8]
   6676c:	cmn	r5, #1
   66770:	movne	r6, r0
   66774:	cmnne	r0, #1
   66778:	bne	66790 <WriteType+0x930>
   6677c:	ldr	r0, [pc, #2764]	; 67250 <WriteType+0x13f0>
   66780:	add	r0, pc, r0
   66784:	bl	19b4 <Mat_Critical@plt>
   66788:	mov	r6, #1
   6678c:	b	66350 <WriteType+0x4f0>
   66790:	sub	r0, r6, r5
   66794:	mvn	r1, #3
   66798:	mov	r2, #1
   6679c:	str	r0, [sp, #68]	; 0x44
   667a0:	sub	r1, r1, r0
   667a4:	ldr	r0, [r4]
   667a8:	bl	1a2c <fseek@plt>
   667ac:	ldr	r3, [r4]
   667b0:	add	r0, sp, #68	; 0x44
   667b4:	mov	r1, #4
   667b8:	mov	r2, #1
   667bc:	bl	18ac <fwrite@plt>
   667c0:	ldr	r0, [r4]
   667c4:	mov	r1, r6
   667c8:	mov	r2, #0
   667cc:	bl	1a2c <fseek@plt>
   667d0:	mov	r6, #1
   667d4:	b	66350 <WriteType+0x4f0>
   667d8:	ldr	r0, [r7, #8]
   667dc:	ldr	r5, [r7, #40]	; 0x28
   667e0:	ldr	r6, [sp, #28]
   667e4:	mov	r1, #0
   667e8:	str	r1, [fp, #-36]	; 0xffffffdc
   667ec:	cmp	r0, #16
   667f0:	str	r0, [fp, #-32]	; 0xffffffe0
   667f4:	bhi	6723c <WriteType+0x13dc>
   667f8:	add	r1, pc, #4
   667fc:	ldr	r0, [r1, r0, lsl #2]
   66800:	add	pc, r1, r0
   66804:	.word	0x000008e8
   66808:	.word	0x00000044
   6680c:	.word	0x00000044
   66810:	.word	0x00000a38
   66814:	.word	0x00000930
   66818:	.word	0x00000a38
   6681c:	.word	0x00000a38
   66820:	.word	0x00000a38
   66824:	.word	0x00000a38
   66828:	.word	0x00000a38
   6682c:	.word	0x00000a38
   66830:	.word	0x00000a38
   66834:	.word	0x00000a38
   66838:	.word	0x00000a38
   6683c:	.word	0x00000a38
   66840:	.word	0x00000a38
   66844:	.word	0x000009b8
   66848:	mov	r0, #4
   6684c:	mov	r1, #4
   66850:	mov	r2, #1
   66854:	str	r0, [fp, #-32]	; 0xffffffe0
   66858:	lsl	r0, r6, #1
   6685c:	str	r0, [fp, #-36]	; 0xffffffdc
   66860:	sub	r0, fp, #32
   66864:	ldr	r3, [r4]
   66868:	bl	18ac <fwrite@plt>
   6686c:	ldr	r3, [r4]
   66870:	sub	r0, fp, #36	; 0x24
   66874:	mov	r1, #4
   66878:	mov	r2, #1
   6687c:	bl	18ac <fwrite@plt>
   66880:	cmp	r5, #0
   66884:	beq	6723c <WriteType+0x13dc>
   66888:	cmp	r6, #1
   6688c:	blt	668b8 <WriteType+0xa58>
   66890:	sub	r7, fp, #40	; 0x28
   66894:	ldrb	r0, [r5], #1
   66898:	mov	r1, #2
   6689c:	mov	r2, #1
   668a0:	strh	r0, [fp, #-40]	; 0xffffffd8
   668a4:	mov	r0, r7
   668a8:	ldr	r3, [r4]
   668ac:	bl	18ac <fwrite@plt>
   668b0:	subs	r6, r6, #1
   668b4:	bne	66894 <WriteType+0xa34>
   668b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   668bc:	asr	r1, r0, #31
   668c0:	add	r1, r0, r1, lsr #29
   668c4:	bic	r1, r1, #7
   668c8:	subs	r0, r0, r1
   668cc:	beq	6723c <WriteType+0x13dc>
   668d0:	sub	r5, r0, #8
   668d4:	ldr	r1, [r4]
   668d8:	mov	r0, #0
   668dc:	bl	19e4 <fputc@plt>
   668e0:	adds	r5, r5, #1
   668e4:	bcc	668d4 <WriteType+0xa74>
   668e8:	b	6723c <WriteType+0x13dc>
   668ec:	ldr	r5, [r7, #40]	; 0x28
   668f0:	mov	r0, #5
   668f4:	cmp	r4, #0
   668f8:	ldr	r8, [r5, #4]
   668fc:	ldr	r6, [r5, #8]
   66900:	str	r0, [fp, #-32]	; 0xffffffe0
   66904:	mov	r0, #0
   66908:	str	r0, [fp, #-36]	; 0xffffffdc
   6690c:	beq	66980 <WriteType+0xb20>
   66910:	ldr	r1, [r4]
   66914:	cmp	r1, #0
   66918:	beq	66980 <WriteType+0xb20>
   6691c:	mov	r0, #5
   66920:	bl	1924 <Mat_SizeOf@plt>
   66924:	mov	r9, r0
   66928:	mul	r0, r0, r6
   6692c:	mov	r1, #4
   66930:	mov	r2, #1
   66934:	str	r0, [fp, #-36]	; 0xffffffdc
   66938:	sub	r0, fp, #32
   6693c:	ldr	r3, [r4]
   66940:	bl	18ac <fwrite@plt>
   66944:	ldr	r3, [r4]
   66948:	sub	r0, fp, #36	; 0x24
   6694c:	mov	r1, #4
   66950:	mov	r2, #1
   66954:	bl	18ac <fwrite@plt>
   66958:	cmp	r8, #0
   6695c:	beq	6697c <WriteType+0xb1c>
   66960:	cmp	r6, #1
   66964:	blt	6697c <WriteType+0xb1c>
   66968:	ldr	r3, [r4]
   6696c:	mov	r0, r8
   66970:	mov	r1, r9
   66974:	mov	r2, r6
   66978:	bl	18ac <fwrite@plt>
   6697c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66980:	asr	r1, r0, #31
   66984:	str	r0, [sp, #32]
   66988:	add	r1, r0, r1, lsr #29
   6698c:	bic	r1, r1, #7
   66990:	subs	r0, r0, r1
   66994:	beq	669b0 <WriteType+0xb50>
   66998:	sub	r6, r0, #8
   6699c:	ldr	r1, [r4]
   669a0:	mov	r0, #0
   669a4:	bl	19e4 <fputc@plt>
   669a8:	adds	r6, r6, #1
   669ac:	bcc	6699c <WriteType+0xb3c>
   669b0:	ldr	r8, [r5, #12]
   669b4:	ldr	r6, [r5, #16]
   669b8:	mov	r0, #5
   669bc:	cmp	r4, #0
   669c0:	str	r0, [fp, #-32]	; 0xffffffe0
   669c4:	mov	r0, #0
   669c8:	str	r0, [fp, #-36]	; 0xffffffdc
   669cc:	beq	66a40 <WriteType+0xbe0>
   669d0:	ldr	r1, [r4]
   669d4:	cmp	r1, #0
   669d8:	beq	66a40 <WriteType+0xbe0>
   669dc:	mov	r0, #5
   669e0:	bl	1924 <Mat_SizeOf@plt>
   669e4:	mov	r9, r0
   669e8:	mul	r0, r0, r6
   669ec:	mov	r1, #4
   669f0:	mov	r2, #1
   669f4:	str	r0, [fp, #-36]	; 0xffffffdc
   669f8:	sub	r0, fp, #32
   669fc:	ldr	r3, [r4]
   66a00:	bl	18ac <fwrite@plt>
   66a04:	ldr	r3, [r4]
   66a08:	sub	r0, fp, #36	; 0x24
   66a0c:	mov	r1, #4
   66a10:	mov	r2, #1
   66a14:	bl	18ac <fwrite@plt>
   66a18:	cmp	r8, #0
   66a1c:	beq	66a3c <WriteType+0xbdc>
   66a20:	cmp	r6, #1
   66a24:	blt	66a3c <WriteType+0xbdc>
   66a28:	ldr	r3, [r4]
   66a2c:	mov	r0, r8
   66a30:	mov	r1, r9
   66a34:	mov	r2, r6
   66a38:	bl	18ac <fwrite@plt>
   66a3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66a40:	asr	r1, r0, #31
   66a44:	str	r0, [sp, #32]
   66a48:	add	r1, r0, r1, lsr #29
   66a4c:	bic	r1, r1, #7
   66a50:	subs	r0, r0, r1
   66a54:	beq	66a70 <WriteType+0xc10>
   66a58:	sub	r6, r0, #8
   66a5c:	ldr	r1, [r4]
   66a60:	mov	r0, #0
   66a64:	bl	19e4 <fputc@plt>
   66a68:	adds	r6, r6, #1
   66a6c:	bcc	66a5c <WriteType+0xbfc>
   66a70:	ldr	r0, [r7, #20]
   66a74:	cmp	r0, #0
   66a78:	beq	66c88 <WriteType+0xe28>
   66a7c:	ldr	r8, [r5, #24]
   66a80:	ldr	r6, [r5, #20]
   66a84:	ldr	r0, [r7, #8]
   66a88:	mov	r1, #0
   66a8c:	cmp	r4, #0
   66a90:	ldr	sl, [r8]
   66a94:	str	r0, [fp, #-32]	; 0xffffffe0
   66a98:	str	r1, [fp, #-36]	; 0xffffffdc
   66a9c:	beq	66b0c <WriteType+0xcac>
   66aa0:	ldr	r2, [r4]
   66aa4:	cmp	r2, #0
   66aa8:	beq	66b0c <WriteType+0xcac>
   66aac:	bl	1924 <Mat_SizeOf@plt>
   66ab0:	mov	r9, r0
   66ab4:	mul	r0, r0, r6
   66ab8:	mov	r1, #4
   66abc:	mov	r2, #1
   66ac0:	str	r0, [fp, #-36]	; 0xffffffdc
   66ac4:	sub	r0, fp, #32
   66ac8:	ldr	r3, [r4]
   66acc:	bl	18ac <fwrite@plt>
   66ad0:	ldr	r3, [r4]
   66ad4:	sub	r0, fp, #36	; 0x24
   66ad8:	mov	r1, #4
   66adc:	mov	r2, #1
   66ae0:	bl	18ac <fwrite@plt>
   66ae4:	cmp	sl, #0
   66ae8:	beq	66b08 <WriteType+0xca8>
   66aec:	cmp	r6, #1
   66af0:	blt	66b08 <WriteType+0xca8>
   66af4:	ldr	r3, [r4]
   66af8:	mov	r0, sl
   66afc:	mov	r1, r9
   66b00:	mov	r2, r6
   66b04:	bl	18ac <fwrite@plt>
   66b08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   66b0c:	asr	r0, r1, #31
   66b10:	str	r1, [sp, #32]
   66b14:	add	r0, r1, r0, lsr #29
   66b18:	bic	r0, r0, #7
   66b1c:	subs	r0, r1, r0
   66b20:	beq	66b3c <WriteType+0xcdc>
   66b24:	sub	r6, r0, #8
   66b28:	ldr	r1, [r4]
   66b2c:	mov	r0, #0
   66b30:	bl	19e4 <fputc@plt>
   66b34:	adds	r6, r6, #1
   66b38:	bcc	66b28 <WriteType+0xcc8>
   66b3c:	ldr	r6, [r5, #20]
   66b40:	ldr	r5, [r8, #4]
   66b44:	ldr	r0, [r7, #8]
   66b48:	mov	r1, #0
   66b4c:	cmp	r4, #0
   66b50:	str	r1, [fp, #-36]	; 0xffffffdc
   66b54:	str	r0, [fp, #-32]	; 0xffffffe0
   66b58:	beq	66bc8 <WriteType+0xd68>
   66b5c:	ldr	r2, [r4]
   66b60:	cmp	r2, #0
   66b64:	beq	66bc8 <WriteType+0xd68>
   66b68:	bl	1924 <Mat_SizeOf@plt>
   66b6c:	mov	r7, r0
   66b70:	mul	r0, r0, r6
   66b74:	mov	r1, #4
   66b78:	mov	r2, #1
   66b7c:	str	r0, [fp, #-36]	; 0xffffffdc
   66b80:	sub	r0, fp, #32
   66b84:	ldr	r3, [r4]
   66b88:	bl	18ac <fwrite@plt>
   66b8c:	ldr	r3, [r4]
   66b90:	sub	r0, fp, #36	; 0x24
   66b94:	mov	r1, #4
   66b98:	mov	r2, #1
   66b9c:	bl	18ac <fwrite@plt>
   66ba0:	cmp	r5, #0
   66ba4:	beq	66bc4 <WriteType+0xd64>
   66ba8:	cmp	r6, #1
   66bac:	blt	66bc4 <WriteType+0xd64>
   66bb0:	ldr	r3, [r4]
   66bb4:	mov	r0, r5
   66bb8:	mov	r1, r7
   66bbc:	mov	r2, r6
   66bc0:	bl	18ac <fwrite@plt>
   66bc4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   66bc8:	asr	r0, r1, #31
   66bcc:	str	r1, [sp, #32]
   66bd0:	add	r0, r1, r0, lsr #29
   66bd4:	bic	r0, r0, #7
   66bd8:	subs	r0, r1, r0
   66bdc:	beq	66160 <WriteType+0x300>
   66be0:	sub	r5, r0, #8
   66be4:	ldr	r1, [r4]
   66be8:	mov	r0, #0
   66bec:	bl	19e4 <fputc@plt>
   66bf0:	adds	r5, r5, #1
   66bf4:	bcc	66be4 <WriteType+0xd84>
   66bf8:	b	66160 <WriteType+0x300>
   66bfc:	movw	r0, #5
   66c00:	mov	r1, #4
   66c04:	mov	r2, #1
   66c08:	mov	r5, #1
   66c0c:	movt	r0, #4
   66c10:	str	r0, [sp, #16]
   66c14:	add	r0, sp, #16
   66c18:	ldr	r3, [r4]
   66c1c:	bl	18ac <fwrite@plt>
   66c20:	str	r5, [sp, #24]
   66c24:	add	r0, sp, #24
   66c28:	mov	r1, #4
   66c2c:	mov	r2, #1
   66c30:	ldr	r3, [r4]
   66c34:	bl	18ac <fwrite@plt>
   66c38:	ldr	r3, [r4]
   66c3c:	add	r0, sp, #38	; 0x26
   66c40:	mov	r1, #2
   66c44:	mov	r2, #1
   66c48:	bl	18ac <fwrite@plt>
   66c4c:	ldr	r1, [r4]
   66c50:	mov	r0, #0
   66c54:	mov	r5, #0
   66c58:	bl	19e4 <fputc@plt>
   66c5c:	ldr	r1, [r4]
   66c60:	mov	r0, #0
   66c64:	bl	19e4 <fputc@plt>
   66c68:	str	r5, [sp, #32]
   66c6c:	add	r0, sp, #32
   66c70:	mov	r1, #4
   66c74:	mov	r2, #1
   66c78:	ldr	r3, [r4]
   66c7c:	bl	18ac <fwrite@plt>
   66c80:	sub	sp, fp, #28
   66c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   66c88:	ldr	r6, [r5, #20]
   66c8c:	ldr	r5, [r5, #24]
   66c90:	ldr	r0, [r7, #8]
   66c94:	mov	r1, #0
   66c98:	cmp	r4, #0
   66c9c:	str	r1, [fp, #-36]	; 0xffffffdc
   66ca0:	str	r0, [fp, #-32]	; 0xffffffe0
   66ca4:	beq	66d14 <WriteType+0xeb4>
   66ca8:	ldr	r2, [r4]
   66cac:	cmp	r2, #0
   66cb0:	beq	66d14 <WriteType+0xeb4>
   66cb4:	bl	1924 <Mat_SizeOf@plt>
   66cb8:	mov	r7, r0
   66cbc:	mul	r0, r0, r6
   66cc0:	mov	r1, #4
   66cc4:	mov	r2, #1
   66cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   66ccc:	sub	r0, fp, #32
   66cd0:	ldr	r3, [r4]
   66cd4:	bl	18ac <fwrite@plt>
   66cd8:	ldr	r3, [r4]
   66cdc:	sub	r0, fp, #36	; 0x24
   66ce0:	mov	r1, #4
   66ce4:	mov	r2, #1
   66ce8:	bl	18ac <fwrite@plt>
   66cec:	cmp	r5, #0
   66cf0:	beq	66d10 <WriteType+0xeb0>
   66cf4:	cmp	r6, #1
   66cf8:	blt	66d10 <WriteType+0xeb0>
   66cfc:	ldr	r3, [r4]
   66d00:	mov	r0, r5
   66d04:	mov	r1, r7
   66d08:	mov	r2, r6
   66d0c:	bl	18ac <fwrite@plt>
   66d10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   66d14:	asr	r0, r1, #31
   66d18:	str	r1, [sp, #32]
   66d1c:	add	r0, r1, r0, lsr #29
   66d20:	bic	r0, r0, #7
   66d24:	subs	r0, r1, r0
   66d28:	beq	66160 <WriteType+0x300>
   66d2c:	sub	r5, r0, #8
   66d30:	ldr	r1, [r4]
   66d34:	mov	r0, #0
   66d38:	bl	19e4 <fputc@plt>
   66d3c:	adds	r5, r5, #1
   66d40:	bcc	66d30 <WriteType+0xed0>
   66d44:	b	66160 <WriteType+0x300>
   66d48:	.word	0x0000c1f0
   66d4c:	sub	r0, r5, r7
   66d50:	mvn	r1, #3
   66d54:	mov	r2, #1
   66d58:	str	r0, [fp, #-56]	; 0xffffffc8
   66d5c:	sub	r1, r1, r0
   66d60:	ldr	r0, [r4]
   66d64:	bl	1a2c <fseek@plt>
   66d68:	ldr	r3, [r4]
   66d6c:	sub	r0, fp, #56	; 0x38
   66d70:	mov	r1, #4
   66d74:	mov	r2, #1
   66d78:	bl	18ac <fwrite@plt>
   66d7c:	ldr	r0, [r4]
   66d80:	mov	r1, r5
   66d84:	mov	r2, #0
   66d88:	bl	1a2c <fseek@plt>
   66d8c:	mov	r5, #0
   66d90:	mov	r7, #1
   66d94:	ldr	r0, [sp, #28]
   66d98:	add	r6, r6, #1
   66d9c:	cmp	r6, r0
   66da0:	bcs	66160 <WriteType+0x300>
   66da4:	ldr	r8, [r9, r6, lsl #2]
   66da8:	mov	r0, #6
   66dac:	cmp	r4, #0
   66db0:	strh	r7, [sp, #68]	; 0x44
   66db4:	str	r5, [fp, #-48]	; 0xffffffd0
   66db8:	str	r5, [fp, #-60]	; 0xffffffc4
   66dbc:	str	r0, [fp, #-36]	; 0xffffffdc
   66dc0:	mov	r0, #5
   66dc4:	str	r0, [fp, #-40]	; 0xffffffd8
   66dc8:	mov	r0, #8
   66dcc:	str	r0, [fp, #-44]	; 0xffffffd4
   66dd0:	mov	r0, #14
   66dd4:	cmpne	r8, #0
   66dd8:	str	r0, [fp, #-52]	; 0xffffffcc
   66ddc:	beq	66d94 <WriteType+0xf34>
   66de0:	ldr	r3, [r4]
   66de4:	sub	r0, fp, #52	; 0x34
   66de8:	mov	r1, #4
   66dec:	mov	r2, #1
   66df0:	bl	18ac <fwrite@plt>
   66df4:	ldr	r3, [r4]
   66df8:	sub	r0, fp, #48	; 0x30
   66dfc:	mov	r1, #4
   66e00:	mov	r2, #1
   66e04:	bl	18ac <fwrite@plt>
   66e08:	ldr	r0, [r8, #16]
   66e0c:	cmp	r0, #0
   66e10:	beq	66d94 <WriteType+0xf34>
   66e14:	ldr	r0, [r4]
   66e18:	bl	1840 <ftell@plt>
   66e1c:	mov	r7, r0
   66e20:	ldr	r0, [r8, #16]
   66e24:	ldr	r2, [r8, #20]
   66e28:	sub	r5, fp, #32
   66e2c:	uxtb	r1, r0
   66e30:	cmp	r2, #0
   66e34:	str	r1, [fp, #-32]	; 0xffffffe0
   66e38:	orrne	r1, r1, #2048	; 0x800
   66e3c:	strne	r1, [fp, #-32]	; 0xffffffe0
   66e40:	ldr	r2, [r8, #24]
   66e44:	cmp	r2, #0
   66e48:	orrne	r1, r1, #1024	; 0x400
   66e4c:	strne	r1, [fp, #-32]	; 0xffffffe0
   66e50:	ldr	r2, [r8, #28]
   66e54:	cmp	r2, #0
   66e58:	orrne	r1, r1, #512	; 0x200
   66e5c:	strne	r1, [fp, #-32]	; 0xffffffe0
   66e60:	cmp	r0, #5
   66e64:	bne	66e74 <WriteType+0x1014>
   66e68:	ldr	r0, [r8, #40]	; 0x28
   66e6c:	ldr	r0, [r0]
   66e70:	str	r0, [fp, #-60]	; 0xffffffc4
   66e74:	ldr	r0, [r4, #20]
   66e78:	cmp	r0, #0
   66e7c:	beq	66e8c <WriteType+0x102c>
   66e80:	mov	r0, r5
   66e84:	bl	1bf8 <Mat_int32Swap>
   66e88:	str	r0, [fp, #-32]	; 0xffffffe0
   66e8c:	ldr	r3, [r4]
   66e90:	sub	r0, fp, #36	; 0x24
   66e94:	mov	r1, #4
   66e98:	mov	r2, #1
   66e9c:	bl	18ac <fwrite@plt>
   66ea0:	ldr	r3, [r4]
   66ea4:	sub	r0, fp, #44	; 0x2c
   66ea8:	mov	r1, #4
   66eac:	mov	r2, #1
   66eb0:	bl	18ac <fwrite@plt>
   66eb4:	ldr	r3, [r4]
   66eb8:	mov	r0, r5
   66ebc:	mov	r1, #4
   66ec0:	mov	r2, #1
   66ec4:	bl	18ac <fwrite@plt>
   66ec8:	ldr	r3, [r4]
   66ecc:	sub	r0, fp, #60	; 0x3c
   66ed0:	mov	r1, #4
   66ed4:	mov	r2, #1
   66ed8:	bl	18ac <fwrite@plt>
   66edc:	ldr	r0, [r8, #4]
   66ee0:	mov	r1, #4
   66ee4:	mov	r2, #1
   66ee8:	lsl	r0, r0, #2
   66eec:	str	r0, [fp, #-56]	; 0xffffffc8
   66ef0:	sub	r0, fp, #40	; 0x28
   66ef4:	ldr	r3, [r4]
   66ef8:	bl	18ac <fwrite@plt>
   66efc:	ldr	r3, [r4]
   66f00:	sub	r0, fp, #56	; 0x38
   66f04:	mov	r1, #4
   66f08:	mov	r2, #1
   66f0c:	bl	18ac <fwrite@plt>
   66f10:	ldr	r0, [r8, #4]
   66f14:	cmp	r0, #1
   66f18:	blt	66f50 <WriteType+0x10f0>
   66f1c:	mov	r5, #0
   66f20:	ldr	r0, [r8, #32]
   66f24:	mov	r1, #4
   66f28:	mov	r2, #1
   66f2c:	ldr	r0, [r0, r5, lsl #2]
   66f30:	str	r0, [fp, #-64]	; 0xffffffc0
   66f34:	mov	r0, sl
   66f38:	ldr	r3, [r4]
   66f3c:	bl	18ac <fwrite@plt>
   66f40:	ldr	r0, [r8, #4]
   66f44:	add	r5, r5, #1
   66f48:	cmp	r5, r0
   66f4c:	blt	66f20 <WriteType+0x10c0>
   66f50:	tst	r0, #1
   66f54:	beq	66f6c <WriteType+0x110c>
   66f58:	ldr	r3, [r4]
   66f5c:	sub	r0, fp, #48	; 0x30
   66f60:	mov	r1, #4
   66f64:	mov	r2, #1
   66f68:	bl	18ac <fwrite@plt>
   66f6c:	ldr	r0, [r8, #36]	; 0x24
   66f70:	cmp	r0, #0
   66f74:	beq	66fec <WriteType+0x118c>
   66f78:	bl	1954 <strlen@plt>
   66f7c:	cmp	r0, #4
   66f80:	bhi	67030 <WriteType+0x11d0>
   66f84:	strh	r0, [fp, #-64]	; 0xffffffc0
   66f88:	add	r0, sp, #68	; 0x44
   66f8c:	mov	r1, #2
   66f90:	mov	r2, #1
   66f94:	ldr	r3, [r4]
   66f98:	bl	18ac <fwrite@plt>
   66f9c:	ldr	r3, [r4]
   66fa0:	mov	r0, sl
   66fa4:	mov	r1, #2
   66fa8:	mov	r2, #1
   66fac:	bl	18ac <fwrite@plt>
   66fb0:	ldrsh	r5, [fp, #-64]	; 0xffffffc0
   66fb4:	ldr	r0, [r8, #36]	; 0x24
   66fb8:	ldr	r3, [r4]
   66fbc:	mov	r1, #1
   66fc0:	mov	r2, r5
   66fc4:	bl	18ac <fwrite@plt>
   66fc8:	cmp	r5, #3
   66fcc:	bgt	670b8 <WriteType+0x1258>
   66fd0:	sub	r5, r5, #4
   66fd4:	ldr	r1, [r4]
   66fd8:	mov	r0, #0
   66fdc:	bl	19e4 <fputc@plt>
   66fe0:	adds	r5, r5, #1
   66fe4:	bcc	66fd4 <WriteType+0x1174>
   66fe8:	b	670b8 <WriteType+0x1258>
   66fec:	ldr	r3, [r4]
   66ff0:	add	r0, sp, #68	; 0x44
   66ff4:	mov	r1, #2
   66ff8:	mov	r2, #1
   66ffc:	bl	18ac <fwrite@plt>
   67000:	ldr	r1, [r4]
   67004:	mov	r0, #0
   67008:	bl	19e4 <fputc@plt>
   6700c:	ldr	r1, [r4]
   67010:	mov	r0, #0
   67014:	bl	19e4 <fputc@plt>
   67018:	ldr	r3, [r4]
   6701c:	sub	r0, fp, #48	; 0x30
   67020:	mov	r1, #4
   67024:	mov	r2, #1
   67028:	bl	18ac <fwrite@plt>
   6702c:	b	670b8 <WriteType+0x1258>
   67030:	str	r0, [fp, #-64]	; 0xffffffc0
   67034:	add	r0, sp, #68	; 0x44
   67038:	mov	r1, #2
   6703c:	mov	r2, #1
   67040:	ldr	r3, [r4]
   67044:	bl	18ac <fwrite@plt>
   67048:	ldr	r1, [r4]
   6704c:	mov	r0, #0
   67050:	bl	19e4 <fputc@plt>
   67054:	ldr	r1, [r4]
   67058:	mov	r0, #0
   6705c:	bl	19e4 <fputc@plt>
   67060:	ldr	r3, [r4]
   67064:	mov	r0, sl
   67068:	mov	r1, #4
   6706c:	mov	r2, #1
   67070:	bl	18ac <fwrite@plt>
   67074:	ldr	r5, [fp, #-64]	; 0xffffffc0
   67078:	ldr	r0, [r8, #36]	; 0x24
   6707c:	ldr	r3, [r4]
   67080:	mov	r1, #1
   67084:	mov	r2, r5
   67088:	bl	18ac <fwrite@plt>
   6708c:	asr	r0, r5, #31
   67090:	add	r0, r5, r0, lsr #29
   67094:	bic	r0, r0, #7
   67098:	subs	r0, r5, r0
   6709c:	beq	670b8 <WriteType+0x1258>
   670a0:	sub	r5, r0, #8
   670a4:	ldr	r1, [r4]
   670a8:	mov	r0, #0
   670ac:	bl	19e4 <fputc@plt>
   670b0:	adds	r5, r5, #1
   670b4:	bcc	670a4 <WriteType+0x1244>
   670b8:	mov	r0, r4
   670bc:	mov	r1, r8
   670c0:	bl	65e60 <WriteType>
   670c4:	ldr	r0, [r4]
   670c8:	bl	1840 <ftell@plt>
   670cc:	cmn	r7, #1
   670d0:	movne	r5, r0
   670d4:	cmnne	r0, #1
   670d8:	bne	66d4c <WriteType+0xeec>
   670dc:	ldr	r0, [pc, #360]	; 6724c <WriteType+0x13ec>
   670e0:	add	r0, pc, r0
   670e4:	bl	19b4 <Mat_Critical@plt>
   670e8:	b	66d8c <WriteType+0xf2c>
   670ec:	mov	r0, #4
   670f0:	mov	r1, #4
   670f4:	mov	r2, #1
   670f8:	str	r0, [fp, #-32]	; 0xffffffe0
   670fc:	lsl	r0, r6, #1
   67100:	str	r0, [fp, #-36]	; 0xffffffdc
   67104:	sub	r0, fp, #32
   67108:	ldr	r3, [r4]
   6710c:	bl	18ac <fwrite@plt>
   67110:	ldr	r3, [r4]
   67114:	sub	r0, fp, #36	; 0x24
   67118:	mov	r1, #4
   6711c:	mov	r2, #1
   67120:	bl	18ac <fwrite@plt>
   67124:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67128:	str	r0, [sp, #32]
   6712c:	sub	sp, fp, #28
   67130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67134:	lsl	r0, r6, #1
   67138:	mov	r1, #4
   6713c:	mov	r2, #1
   67140:	str	r0, [fp, #-36]	; 0xffffffdc
   67144:	sub	r0, fp, #32
   67148:	ldr	r3, [r4]
   6714c:	bl	18ac <fwrite@plt>
   67150:	ldr	r3, [r4]
   67154:	sub	r0, fp, #36	; 0x24
   67158:	mov	r1, #4
   6715c:	mov	r2, #1
   67160:	bl	18ac <fwrite@plt>
   67164:	cmp	r5, #0
   67168:	beq	67188 <WriteType+0x1328>
   6716c:	cmp	r6, #1
   67170:	blt	67188 <WriteType+0x1328>
   67174:	ldr	r3, [r4]
   67178:	mov	r0, r5
   6717c:	mov	r1, #2
   67180:	mov	r2, r6
   67184:	bl	18ac <fwrite@plt>
   67188:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6718c:	asr	r1, r0, #31
   67190:	add	r1, r0, r1, lsr #29
   67194:	bic	r1, r1, #7
   67198:	subs	r0, r0, r1
   6719c:	beq	6723c <WriteType+0x13dc>
   671a0:	sub	r5, r0, #8
   671a4:	ldr	r1, [r4]
   671a8:	mov	r0, #0
   671ac:	bl	19e4 <fputc@plt>
   671b0:	adds	r5, r5, #1
   671b4:	bcc	671a4 <WriteType+0x1344>
   671b8:	b	6723c <WriteType+0x13dc>
   671bc:	str	r6, [fp, #-36]	; 0xffffffdc
   671c0:	sub	r0, fp, #32
   671c4:	mov	r1, #4
   671c8:	mov	r2, #1
   671cc:	ldr	r3, [r4]
   671d0:	bl	18ac <fwrite@plt>
   671d4:	ldr	r3, [r4]
   671d8:	sub	r0, fp, #36	; 0x24
   671dc:	mov	r1, #4
   671e0:	mov	r2, #1
   671e4:	bl	18ac <fwrite@plt>
   671e8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   671ec:	cmp	r5, #0
   671f0:	beq	67210 <WriteType+0x13b0>
   671f4:	cmp	r6, #1
   671f8:	blt	67210 <WriteType+0x13b0>
   671fc:	ldr	r3, [r4]
   67200:	mov	r0, r5
   67204:	mov	r1, #1
   67208:	mov	r2, r6
   6720c:	bl	18ac <fwrite@plt>
   67210:	asr	r0, r6, #31
   67214:	add	r0, r6, r0, lsr #29
   67218:	bic	r0, r0, #7
   6721c:	subs	r0, r6, r0
   67220:	beq	6723c <WriteType+0x13dc>
   67224:	sub	r5, r0, #8
   67228:	ldr	r1, [r4]
   6722c:	mov	r0, #0
   67230:	bl	19e4 <fputc@plt>
   67234:	adds	r5, r5, #1
   67238:	bcc	67228 <WriteType+0x13c8>
   6723c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67240:	str	r0, [sp, #32]
   67244:	sub	sp, fp, #28
   67248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6724c:	.word	0x0000ab84
   67250:	.word	0x0000b4e4
   67254:	.word	0x0000b6e8
   67258:	.word	0xe320f000
   6725c:	.word	0xe320f000

00067260 <WriteCompressedType>:
   67260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   67264:	add	fp, sp, #28
   67268:	sub	sp, sp, #52	; 0x34
   6726c:	sub	sp, sp, #11264	; 0x2c00
   67270:	add	r5, sp, #40	; 0x28
   67274:	mov	r4, r2
   67278:	mov	r7, r1
   6727c:	mov	sl, r0
   67280:	mov	r1, #0
   67284:	mov	r2, #2048	; 0x800
   67288:	mov	r6, #0
   6728c:	mov	r0, r5
   67290:	bl	1990 <memset@plt>
   67294:	mov	r0, #1
   67298:	str	r0, [sp, #36]	; 0x24
   6729c:	ldr	r0, [r7, #16]
   672a0:	cmp	r0, #0
   672a4:	beq	673cc <WriteCompressedType+0x16c>
   672a8:	add	r1, sp, #36	; 0x24
   672ac:	mov	r0, r7
   672b0:	bl	6be10 <SafeMulDims>
   672b4:	ldr	r0, [r7, #16]
   672b8:	sub	r1, r0, #6
   672bc:	cmp	r1, #10
   672c0:	bcs	67330 <WriteCompressedType+0xd0>
   672c4:	ldr	r0, [r7, #20]
   672c8:	ldr	r2, [r7, #40]	; 0x28
   672cc:	cmp	r0, #0
   672d0:	beq	673b0 <WriteCompressedType+0x150>
   672d4:	ldr	r5, [pc, #2644]	; 67d30 <WriteCompressedType+0xad0>
   672d8:	cmp	r2, #0
   672dc:	ldr	r0, [r7, #8]
   672e0:	ldr	r3, [sp, #36]	; 0x24
   672e4:	mov	r1, r4
   672e8:	add	r5, pc, r5
   672ec:	movne	r5, r2
   672f0:	ldr	r2, [r5]
   672f4:	str	r0, [sp]
   672f8:	mov	r0, sl
   672fc:	bl	6a268 <WriteCompressedData>
   67300:	mov	r6, r0
   67304:	ldr	r0, [r7, #8]
   67308:	ldr	r2, [r5, #4]
   6730c:	ldr	r3, [sp, #36]	; 0x24
   67310:	mov	r1, r4
   67314:	str	r0, [sp]
   67318:	mov	r0, sl
   6731c:	bl	6a268 <WriteCompressedData>
   67320:	add	r6, r0, r6
   67324:	mov	r0, r6
   67328:	sub	sp, fp, #28
   6732c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67330:	sub	r0, r0, #1
   67334:	cmp	r0, #4
   67338:	bhi	673cc <WriteCompressedType+0x16c>
   6733c:	add	r1, pc, #4
   67340:	ldr	r0, [r1, r0, lsl #2]
   67344:	add	pc, r1, r0
   67348:	.word	0x00000014
   6734c:	.word	0x00000164
   67350:	.word	0x00000084
   67354:	.word	0x00000650
   67358:	.word	0x000007e8
   6735c:	ldr	r0, [r7]
   67360:	cmp	r0, #0
   67364:	beq	673cc <WriteCompressedType+0x16c>
   67368:	ldr	r1, [r7, #40]	; 0x28
   6736c:	cmp	r1, #0
   67370:	str	r1, [sp, #28]
   67374:	ldrne	r1, [r7, #12]
   67378:	cmpne	r1, #0
   6737c:	beq	673cc <WriteCompressedType+0x16c>
   67380:	udiv	r9, r0, r1
   67384:	cmp	r1, r0
   67388:	str	r9, [sp, #36]	; 0x24
   6738c:	bhi	673cc <WriteCompressedType+0x16c>
   67390:	cmp	r4, #0
   67394:	beq	67cec <WriteCompressedType+0xa8c>
   67398:	cmp	sl, #0
   6739c:	beq	67d04 <WriteCompressedType+0xaa4>
   673a0:	mov	r5, #0
   673a4:	mov	r8, #2048	; 0x800
   673a8:	sub	r7, fp, #2080	; 0x820
   673ac:	b	673e8 <WriteCompressedType+0x188>
   673b0:	ldr	r0, [r7, #8]
   673b4:	ldr	r3, [sp, #36]	; 0x24
   673b8:	mov	r1, r4
   673bc:	str	r0, [sp]
   673c0:	mov	r0, sl
   673c4:	bl	6a268 <WriteCompressedData>
   673c8:	mov	r6, r0
   673cc:	mov	r0, r6
   673d0:	sub	sp, fp, #28
   673d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   673d8:	add	r5, r5, #1
   673dc:	mov	r6, #0
   673e0:	cmp	r5, r9
   673e4:	bcs	673cc <WriteCompressedType+0x16c>
   673e8:	ldr	r0, [sp, #28]
   673ec:	sub	lr, fp, #4096	; 0x1000
   673f0:	mov	r1, #0
   673f4:	mov	r2, #2048	; 0x800
   673f8:	ldr	r6, [r0, r5, lsl #2]
   673fc:	sub	r0, lr, #32
   67400:	bl	1990 <memset@plt>
   67404:	cmp	r6, #0
   67408:	beq	673d8 <WriteCompressedType+0x178>
   6740c:	add	lr, sp, #5120	; 0x1400
   67410:	mov	r1, #14
   67414:	add	r0, lr, #40	; 0x28
   67418:	str	r1, [r0, #2056]	; 0x808
   6741c:	ldr	r0, [r6, #16]
   67420:	cmp	r0, #0
   67424:	beq	67438 <WriteCompressedType+0x1d8>
   67428:	mov	r0, r6
   6742c:	bl	69f84 <GetTypeBufSize>
   67430:	add	r0, r0, #24
   67434:	b	6743c <WriteCompressedType+0x1dc>
   67438:	mov	r0, #0
   6743c:	add	lr, sp, #5120	; 0x1400
   67440:	add	r1, lr, #40	; 0x28
   67444:	sub	lr, fp, #4096	; 0x1000
   67448:	str	r0, [r1, #2060]	; 0x80c
   6744c:	sub	r0, lr, #32
   67450:	str	r0, [r4]
   67454:	mov	r0, #8
   67458:	str	r0, [r4, #4]
   6745c:	mov	r0, r4
   67460:	mov	r1, #0
   67464:	str	r7, [r4, #12]
   67468:	str	r8, [r4, #16]
   6746c:	bl	1894 <deflate@plt>
   67470:	ldr	r0, [r4, #16]
   67474:	ldr	r3, [sl]
   67478:	mov	r1, #1
   6747c:	rsb	r2, r0, #2048	; 0x800
   67480:	mov	r0, r7
   67484:	bl	18ac <fwrite@plt>
   67488:	ldr	r0, [r4, #16]
   6748c:	cmp	r0, #0
   67490:	beq	6745c <WriteCompressedType+0x1fc>
   67494:	mov	r0, sl
   67498:	mov	r1, r6
   6749c:	mov	r2, r4
   674a0:	bl	6a3e4 <WriteCompressedTypeArrayFlags>
   674a4:	ldr	r9, [sp, #36]	; 0x24
   674a8:	b	673d8 <WriteCompressedType+0x178>
   674ac:	ldr	r0, [r7, #52]	; 0x34
   674b0:	ldr	r9, [r0, #4]
   674b4:	cmp	r9, #0
   674b8:	beq	67be0 <WriteCompressedType+0x980>
   674bc:	ldr	r1, [r7, #40]	; 0x28
   674c0:	ldr	r8, [r0, #8]
   674c4:	str	r7, [sp, #8]
   674c8:	mov	r7, #0
   674cc:	mov	r6, #0
   674d0:	str	r1, [sp, #4]
   674d4:	ldr	r0, [r8, r6, lsl #2]
   674d8:	mov	r5, r7
   674dc:	bl	1954 <strlen@plt>
   674e0:	cmp	r0, r7
   674e4:	add	r6, r6, #1
   674e8:	movhi	r7, r0
   674ec:	cmp	r9, r6
   674f0:	bne	674d4 <WriteCompressedType+0x274>
   674f4:	cmp	r0, r5
   674f8:	mov	r1, r5
   674fc:	mov	r3, #0
   67500:	movhi	r1, r0
   67504:	add	r1, r1, #1
   67508:	mul	r2, r9, r1
   6750c:	add	r1, r3, r9
   67510:	add	r3, r2, r3
   67514:	add	r7, r7, #1
   67518:	tst	r3, #7
   6751c:	mov	r3, r1
   67520:	bne	6750c <WriteCompressedType+0x2ac>
   67524:	cmp	r0, r5
   67528:	mov	r2, #1
   6752c:	str	r9, [sp, #16]
   67530:	str	r7, [sp, #28]
   67534:	movhi	r5, r0
   67538:	str	r2, [sp, #48]	; 0x30
   6753c:	movw	r2, #5
   67540:	str	r7, [sp, #44]	; 0x2c
   67544:	mla	r0, r9, r5, r1
   67548:	movt	r2, #4
   6754c:	mov	r1, #1
   67550:	str	r2, [sp, #40]	; 0x28
   67554:	str	r0, [sp, #52]	; 0x34
   67558:	mov	r0, r7
   6755c:	bl	1798 <calloc@plt>
   67560:	add	lr, sp, #2048	; 0x800
   67564:	str	r0, [sp, #12]
   67568:	add	r1, sp, #40	; 0x28
   6756c:	mov	r0, #16
   67570:	mov	r6, #0
   67574:	mov	r5, #2048	; 0x800
   67578:	add	r8, lr, #40	; 0x28
   6757c:	str	r1, [r4]
   67580:	str	r0, [r4, #4]
   67584:	mov	r0, r4
   67588:	mov	r1, #0
   6758c:	str	r8, [r4, #12]
   67590:	str	r5, [r4, #16]
   67594:	bl	1894 <deflate@plt>
   67598:	ldr	r0, [r4, #16]
   6759c:	ldr	r3, [sl]
   675a0:	mov	r1, #1
   675a4:	rsb	r2, r0, #2048	; 0x800
   675a8:	mov	r0, r8
   675ac:	bl	18ac <fwrite@plt>
   675b0:	add	r6, r0, r6
   675b4:	ldr	r0, [r4, #16]
   675b8:	cmp	r0, #0
   675bc:	beq	67584 <WriteCompressedType+0x324>
   675c0:	ldr	r7, [sp, #12]
   675c4:	mov	r5, #0
   675c8:	mov	r9, #2048	; 0x800
   675cc:	ldr	r0, [sp, #8]
   675d0:	ldr	r0, [r0, #52]	; 0x34
   675d4:	str	r0, [sp, #24]
   675d8:	ldr	r0, [r0, #8]
   675dc:	ldr	r0, [r0, r5, lsl #2]
   675e0:	bl	1954 <strlen@plt>
   675e4:	ldr	r2, [sp, #28]
   675e8:	str	r0, [sp, #20]
   675ec:	mov	r0, r7
   675f0:	mov	r1, #0
   675f4:	bl	1990 <memset@plt>
   675f8:	ldr	r0, [sp, #24]
   675fc:	ldr	r2, [sp, #20]
   67600:	ldr	r0, [r0, #8]
   67604:	ldr	r1, [r0, r5, lsl #2]
   67608:	mov	r0, r7
   6760c:	bl	181c <memcpy@plt>
   67610:	ldr	r0, [sp, #28]
   67614:	str	r7, [r4]
   67618:	str	r0, [r4, #4]
   6761c:	mov	r0, r4
   67620:	mov	r1, #0
   67624:	str	r8, [r4, #12]
   67628:	str	r9, [r4, #16]
   6762c:	bl	1894 <deflate@plt>
   67630:	ldr	r0, [r4, #16]
   67634:	ldr	r3, [sl]
   67638:	mov	r1, #1
   6763c:	rsb	r2, r0, #2048	; 0x800
   67640:	mov	r0, r8
   67644:	bl	18ac <fwrite@plt>
   67648:	add	r6, r0, r6
   6764c:	ldr	r0, [r4, #16]
   67650:	cmp	r0, #0
   67654:	beq	6761c <WriteCompressedType+0x3bc>
   67658:	ldr	r0, [sp, #16]
   6765c:	add	r5, r5, #1
   67660:	cmp	r5, r0
   67664:	bne	675cc <WriteCompressedType+0x36c>
   67668:	ldr	r0, [sp, #12]
   6766c:	bl	1804 <free@plt>
   67670:	ldr	r1, [sp, #36]	; 0x24
   67674:	ldr	r2, [sp, #16]
   67678:	add	r0, sp, #32
   6767c:	bl	6be6c <SafeMul>
   67680:	ldr	r0, [sp, #32]
   67684:	cmp	r0, #0
   67688:	beq	673cc <WriteCompressedType+0x16c>
   6768c:	sub	lr, fp, #4096	; 0x1000
   67690:	mov	r7, #2048	; 0x800
   67694:	sub	r8, fp, #2080	; 0x820
   67698:	mov	r5, #0
   6769c:	sub	r0, lr, #32
   676a0:	add	r1, r0, #8
   676a4:	add	r0, r0, #24
   676a8:	str	r1, [sp, #24]
   676ac:	str	r0, [sp, #20]
   676b0:	b	676d8 <WriteCompressedType+0x478>
   676b4:	mov	r7, #0
   676b8:	add	r0, r7, r5
   676bc:	mov	r7, #2048	; 0x800
   676c0:	ldr	r5, [sp, #28]
   676c4:	add	r6, r0, r6
   676c8:	ldr	r0, [sp, #32]
   676cc:	add	r5, r5, #1
   676d0:	cmp	r5, r0
   676d4:	bcs	673cc <WriteCompressedType+0x16c>
   676d8:	ldr	r0, [sp, #4]
   676dc:	add	lr, sp, #4096	; 0x1000
   676e0:	mov	r1, #0
   676e4:	mov	r2, #2048	; 0x800
   676e8:	ldr	r9, [r0, r5, lsl #2]
   676ec:	add	r0, lr, #1072	; 0x430
   676f0:	bl	1990 <memset@plt>
   676f4:	cmp	r9, #0
   676f8:	str	r5, [sp, #28]
   676fc:	beq	677a4 <WriteCompressedType+0x544>
   67700:	add	lr, sp, #5120	; 0x1400
   67704:	mov	r1, #14
   67708:	mov	r5, #0
   6770c:	add	r0, lr, #40	; 0x28
   67710:	str	r1, [r0, #8]
   67714:	ldr	r0, [r9, #16]
   67718:	cmp	r0, #0
   6771c:	mov	r0, #0
   67720:	beq	67730 <WriteCompressedType+0x4d0>
   67724:	mov	r0, r9
   67728:	bl	69f84 <GetTypeBufSize>
   6772c:	add	r0, r0, #24
   67730:	add	lr, sp, #5120	; 0x1400
   67734:	add	r1, lr, #40	; 0x28
   67738:	add	lr, sp, #4096	; 0x1000
   6773c:	str	r0, [r1, #12]
   67740:	add	r0, lr, #1072	; 0x430
   67744:	str	r0, [r4]
   67748:	mov	r0, #8
   6774c:	str	r0, [r4, #4]
   67750:	mov	r0, r4
   67754:	mov	r1, #0
   67758:	str	r8, [r4, #12]
   6775c:	str	r7, [r4, #16]
   67760:	bl	1894 <deflate@plt>
   67764:	ldr	r0, [r4, #16]
   67768:	ldr	r3, [sl]
   6776c:	mov	r1, #1
   67770:	rsb	r2, r0, #2048	; 0x800
   67774:	mov	r0, r8
   67778:	bl	18ac <fwrite@plt>
   6777c:	add	r5, r0, r5
   67780:	ldr	r0, [r4, #16]
   67784:	cmp	r0, #0
   67788:	beq	67750 <WriteCompressedType+0x4f0>
   6778c:	mov	r0, sl
   67790:	mov	r1, r9
   67794:	mov	r2, r4
   67798:	bl	6a3e4 <WriteCompressedTypeArrayFlags>
   6779c:	add	r0, r0, r5
   677a0:	b	676c0 <WriteCompressedType+0x460>
   677a4:	ldr	r0, [sp, #24]
   677a8:	mov	r1, #0
   677ac:	movw	r2, #2040	; 0x7f8
   677b0:	mov	r5, #0
   677b4:	bl	1990 <memset@plt>
   677b8:	add	lr, sp, #5120	; 0x1400
   677bc:	mov	r1, #14
   677c0:	add	r0, lr, #40	; 0x28
   677c4:	sub	lr, fp, #4096	; 0x1000
   677c8:	str	r1, [r0, #2056]	; 0x808
   677cc:	mov	r1, #48	; 0x30
   677d0:	str	r1, [r0, #2060]	; 0x80c
   677d4:	sub	r0, lr, #32
   677d8:	str	r0, [r4]
   677dc:	mov	r0, #8
   677e0:	str	r0, [r4, #4]
   677e4:	mov	r0, r4
   677e8:	mov	r1, #0
   677ec:	str	r8, [r4, #12]
   677f0:	str	r7, [r4, #16]
   677f4:	bl	1894 <deflate@plt>
   677f8:	ldr	r0, [r4, #16]
   677fc:	ldr	r3, [sl]
   67800:	mov	r1, #1
   67804:	rsb	r2, r0, #2048	; 0x800
   67808:	mov	r0, r8
   6780c:	bl	18ac <fwrite@plt>
   67810:	add	r5, r0, r5
   67814:	ldr	r0, [r4, #16]
   67818:	cmp	r0, #0
   6781c:	beq	677e4 <WriteCompressedType+0x584>
   67820:	add	r0, pc, #936	; 0x3a8
   67824:	sub	lr, fp, #4096	; 0x1000
   67828:	mov	r2, #20
   6782c:	mov	r9, #0
   67830:	vld1.64	{d16-d17}, [r0 :128]
   67834:	sub	r1, lr, #32
   67838:	add	lr, sp, #5120	; 0x1400
   6783c:	mov	r0, r1
   67840:	vst1.32	{d16-d17}, [r0], r2
   67844:	mov	r2, #8
   67848:	str	r2, [r0]
   6784c:	add	r0, lr, #40	; 0x28
   67850:	mov	r2, #5
   67854:	str	r2, [r0, #2072]	; 0x818
   67858:	ldr	r0, [sp, #20]
   6785c:	mov	r2, #0
   67860:	str	r2, [r0]
   67864:	str	r2, [r0, #4]
   67868:	mov	r0, #32
   6786c:	str	r1, [r4]
   67870:	str	r0, [r4, #4]
   67874:	mov	r0, r4
   67878:	mov	r1, #0
   6787c:	str	r8, [r4, #12]
   67880:	str	r7, [r4, #16]
   67884:	bl	1894 <deflate@plt>
   67888:	ldr	r0, [r4, #16]
   6788c:	ldr	r3, [sl]
   67890:	mov	r1, #1
   67894:	rsb	r2, r0, #2048	; 0x800
   67898:	mov	r0, r8
   6789c:	bl	18ac <fwrite@plt>
   678a0:	add	r5, r0, r5
   678a4:	ldr	r0, [r4, #16]
   678a8:	cmp	r0, #0
   678ac:	beq	67874 <WriteCompressedType+0x614>
   678b0:	add	lr, sp, #5120	; 0x1400
   678b4:	mov	r1, #1
   678b8:	add	r0, lr, #40	; 0x28
   678bc:	sub	lr, fp, #4096	; 0x1000
   678c0:	str	r1, [r0, #2056]	; 0x808
   678c4:	str	r9, [r0, #2060]	; 0x80c
   678c8:	sub	r0, lr, #32
   678cc:	str	r0, [r4]
   678d0:	mov	r0, #8
   678d4:	str	r0, [r4, #4]
   678d8:	mov	r0, r4
   678dc:	mov	r1, #0
   678e0:	str	r8, [r4, #12]
   678e4:	str	r7, [r4, #16]
   678e8:	bl	1894 <deflate@plt>
   678ec:	ldr	r0, [r4, #16]
   678f0:	ldr	r3, [sl]
   678f4:	mov	r1, #1
   678f8:	rsb	r2, r0, #2048	; 0x800
   678fc:	mov	r0, r8
   67900:	bl	18ac <fwrite@plt>
   67904:	add	r5, r0, r5
   67908:	ldr	r0, [r4, #16]
   6790c:	cmp	r0, #0
   67910:	beq	678d8 <WriteCompressedType+0x678>
   67914:	ldr	r0, [sl]
   67918:	cmp	r0, #0
   6791c:	beq	676b4 <WriteCompressedType+0x454>
   67920:	mov	r0, #9
   67924:	bl	1924 <Mat_SizeOf@plt>
   67928:	add	lr, sp, #5120	; 0x1400
   6792c:	mov	r1, #9
   67930:	mov	r7, #0
   67934:	add	r0, lr, #40	; 0x28
   67938:	add	lr, sp, #4096	; 0x1000
   6793c:	stm	r0, {r1, r7}
   67940:	str	r0, [r4]
   67944:	mov	r0, #8
   67948:	mov	r1, #1024	; 0x400
   6794c:	add	r9, lr, #40	; 0x28
   67950:	str	r0, [r4, #4]
   67954:	str	r9, [r4, #12]
   67958:	str	r1, [r4, #16]
   6795c:	mov	r0, r4
   67960:	mov	r1, #0
   67964:	bl	1894 <deflate@plt>
   67968:	ldr	r0, [r4, #16]
   6796c:	ldr	r3, [sl]
   67970:	mov	r1, #1
   67974:	rsb	r2, r0, #1024	; 0x400
   67978:	mov	r0, r9
   6797c:	bl	18ac <fwrite@plt>
   67980:	add	r7, r0, r7
   67984:	ldr	r0, [r4, #16]
   67988:	mov	r1, #1024	; 0x400
   6798c:	cmp	r0, #0
   67990:	beq	67954 <WriteCompressedType+0x6f4>
   67994:	b	676b8 <WriteCompressedType+0x458>
   67998:	ldr	r5, [r7, #8]
   6799c:	ldr	r2, [r7, #40]	; 0x28
   679a0:	ldr	r9, [sp, #36]	; 0x24
   679a4:	mov	r6, #0
   679a8:	cmp	sl, #0
   679ac:	str	r6, [fp, #-2076]	; 0xfffff7e4
   679b0:	str	r6, [fp, #-2080]	; 0xfffff7e0
   679b4:	beq	673cc <WriteCompressedType+0x16c>
   679b8:	ldr	r0, [sl]
   679bc:	cmp	r0, #0
   679c0:	beq	673cc <WriteCompressedType+0x16c>
   679c4:	cmp	r5, #17
   679c8:	bhi	673cc <WriteCompressedType+0x16c>
   679cc:	movw	r1, #20
   679d0:	mov	r0, #1
   679d4:	movt	r1, #3
   679d8:	tst	r1, r0, lsl r5
   679dc:	beq	67c74 <WriteCompressedType+0xa14>
   679e0:	mov	r0, r5
   679e4:	str	r2, [sp, #28]
   679e8:	bl	1924 <Mat_SizeOf@plt>
   679ec:	mul	r2, r0, r9
   679f0:	cmp	r5, #2
   679f4:	add	lr, sp, #5120	; 0x1400
   679f8:	mov	r6, #0
   679fc:	mov	r8, #1024	; 0x400
   67a00:	add	r0, lr, #40	; 0x28
   67a04:	movweq	r5, #16
   67a08:	add	lr, sp, #4096	; 0x1000
   67a0c:	str	r5, [r0]
   67a10:	mov	r1, r0
   67a14:	add	r7, lr, #40	; 0x28
   67a18:	str	r2, [r0, #4]
   67a1c:	mov	r5, r2
   67a20:	mov	r0, #8
   67a24:	str	r1, [r4]
   67a28:	str	r0, [r4, #4]
   67a2c:	mov	r0, r4
   67a30:	mov	r1, #0
   67a34:	str	r7, [r4, #12]
   67a38:	str	r8, [r4, #16]
   67a3c:	bl	1894 <deflate@plt>
   67a40:	ldr	r0, [r4, #16]
   67a44:	ldr	r3, [sl]
   67a48:	mov	r1, #1
   67a4c:	rsb	r2, r0, #1024	; 0x400
   67a50:	mov	r0, r7
   67a54:	bl	18ac <fwrite@plt>
   67a58:	add	r6, r0, r6
   67a5c:	ldr	r0, [r4, #16]
   67a60:	cmp	r0, #0
   67a64:	beq	67a2c <WriteCompressedType+0x7cc>
   67a68:	ldr	r0, [sp, #28]
   67a6c:	cmp	r0, #0
   67a70:	beq	673cc <WriteCompressedType+0x16c>
   67a74:	cmp	r9, #1
   67a78:	blt	673cc <WriteCompressedType+0x16c>
   67a7c:	str	r0, [r4]
   67a80:	mov	r8, r5
   67a84:	str	r5, [r4, #4]
   67a88:	mov	r5, #1024	; 0x400
   67a8c:	mov	r0, r4
   67a90:	mov	r1, #0
   67a94:	str	r7, [r4, #12]
   67a98:	str	r5, [r4, #16]
   67a9c:	bl	1894 <deflate@plt>
   67aa0:	ldr	r0, [r4, #16]
   67aa4:	ldr	r3, [sl]
   67aa8:	mov	r1, #1
   67aac:	rsb	r2, r0, #1024	; 0x400
   67ab0:	mov	r0, r7
   67ab4:	bl	18ac <fwrite@plt>
   67ab8:	add	r6, r0, r6
   67abc:	ldr	r0, [r4, #16]
   67ac0:	cmp	r0, #0
   67ac4:	beq	67a8c <WriteCompressedType+0x82c>
   67ac8:	asr	r0, r8, #31
   67acc:	add	r0, r8, r0, lsr #29
   67ad0:	bic	r0, r0, #7
   67ad4:	subs	r0, r8, r0
   67ad8:	beq	673cc <WriteCompressedType+0x16c>
   67adc:	sub	r1, fp, #2080	; 0x820
   67ae0:	mov	r5, #1024	; 0x400
   67ae4:	rsb	r0, r0, #8
   67ae8:	str	r1, [r4]
   67aec:	str	r0, [r4, #4]
   67af0:	mov	r0, r4
   67af4:	mov	r1, #0
   67af8:	str	r7, [r4, #12]
   67afc:	str	r5, [r4, #16]
   67b00:	bl	1894 <deflate@plt>
   67b04:	ldr	r0, [r4, #16]
   67b08:	ldr	r3, [sl]
   67b0c:	mov	r1, #1
   67b10:	rsb	r2, r0, #1024	; 0x400
   67b14:	mov	r0, r7
   67b18:	bl	18ac <fwrite@plt>
   67b1c:	add	r6, r0, r6
   67b20:	ldr	r0, [r4, #16]
   67b24:	cmp	r0, #0
   67b28:	beq	67af0 <WriteCompressedType+0x890>
   67b2c:	b	673cc <WriteCompressedType+0x16c>
   67b30:	ldr	r5, [r7, #40]	; 0x28
   67b34:	mov	r8, #5
   67b38:	mov	r0, sl
   67b3c:	mov	r1, r4
   67b40:	ldmib	r5, {r2, r3}
   67b44:	str	r8, [sp]
   67b48:	bl	6a268 <WriteCompressedData>
   67b4c:	ldr	r2, [r5, #12]
   67b50:	ldr	r3, [r5, #16]
   67b54:	mov	r6, r0
   67b58:	mov	r0, sl
   67b5c:	mov	r1, r4
   67b60:	str	r8, [sp]
   67b64:	bl	6a268 <WriteCompressedData>
   67b68:	add	r8, r0, r6
   67b6c:	ldr	r0, [r7, #20]
   67b70:	cmp	r0, #0
   67b74:	beq	67c48 <WriteCompressedType+0x9e8>
   67b78:	ldr	r6, [r5, #24]
   67b7c:	ldr	r0, [r7, #8]
   67b80:	ldr	r3, [r5, #20]
   67b84:	mov	r1, r4
   67b88:	ldr	r2, [r6]
   67b8c:	str	r0, [sp]
   67b90:	mov	r0, sl
   67b94:	bl	6a268 <WriteCompressedData>
   67b98:	ldr	r1, [r7, #8]
   67b9c:	ldr	r3, [r5, #20]
   67ba0:	ldr	r2, [r6, #4]
   67ba4:	add	r5, r0, r8
   67ba8:	mov	r0, sl
   67bac:	str	r1, [sp]
   67bb0:	mov	r1, r4
   67bb4:	bl	6a268 <WriteCompressedData>
   67bb8:	add	r6, r5, r0
   67bbc:	mov	r0, r6
   67bc0:	sub	sp, fp, #28
   67bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67bc8:	nop	{0}
   67bcc:	nop	{0}
   67bd0:	.word	0x00000006
   67bd4:	.word	0x00000008
   67bd8:	.word	0x00000006
   67bdc:	.word	0x00000000
   67be0:	add	r0, pc, #312	; 0x138
   67be4:	add	lr, sp, #2048	; 0x800
   67be8:	mov	r6, #0
   67bec:	vld1.64	{d16-d17}, [r0 :128]
   67bf0:	mov	r0, #16
   67bf4:	add	r7, lr, #40	; 0x28
   67bf8:	vst1.64	{d16-d17}, [r5]
   67bfc:	str	r5, [r4]
   67c00:	mov	r5, #2048	; 0x800
   67c04:	str	r0, [r4, #4]
   67c08:	mov	r0, r4
   67c0c:	mov	r1, #0
   67c10:	str	r7, [r4, #12]
   67c14:	str	r5, [r4, #16]
   67c18:	bl	1894 <deflate@plt>
   67c1c:	ldr	r0, [r4, #16]
   67c20:	ldr	r3, [sl]
   67c24:	mov	r1, #1
   67c28:	rsb	r2, r0, #2048	; 0x800
   67c2c:	mov	r0, r7
   67c30:	bl	18ac <fwrite@plt>
   67c34:	add	r6, r0, r6
   67c38:	ldr	r0, [r4, #16]
   67c3c:	cmp	r0, #0
   67c40:	beq	67c08 <WriteCompressedType+0x9a8>
   67c44:	b	673cc <WriteCompressedType+0x16c>
   67c48:	ldr	r0, [r7, #8]
   67c4c:	ldr	r3, [r5, #20]
   67c50:	ldr	r2, [r5, #24]
   67c54:	mov	r1, r4
   67c58:	str	r0, [sp]
   67c5c:	mov	r0, sl
   67c60:	bl	6a268 <WriteCompressedData>
   67c64:	add	r6, r0, r8
   67c68:	mov	r0, r6
   67c6c:	sub	sp, fp, #28
   67c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67c74:	cmp	r5, #0
   67c78:	bne	673cc <WriteCompressedType+0x16c>
   67c7c:	add	lr, sp, #5120	; 0x1400
   67c80:	mov	r0, #4
   67c84:	lsl	r1, r9, #1
   67c88:	mov	r6, #0
   67c8c:	mov	r5, #1024	; 0x400
   67c90:	add	r2, lr, #40	; 0x28
   67c94:	add	lr, sp, #4096	; 0x1000
   67c98:	stm	r2, {r0, r1}
   67c9c:	add	r7, lr, #40	; 0x28
   67ca0:	mov	r0, #8
   67ca4:	str	r2, [r4]
   67ca8:	str	r0, [r4, #4]
   67cac:	mov	r0, r4
   67cb0:	mov	r1, #0
   67cb4:	str	r7, [r4, #12]
   67cb8:	str	r5, [r4, #16]
   67cbc:	bl	1894 <deflate@plt>
   67cc0:	ldr	r0, [r4, #16]
   67cc4:	ldr	r3, [sl]
   67cc8:	mov	r1, #1
   67ccc:	rsb	r2, r0, #1024	; 0x400
   67cd0:	mov	r0, r7
   67cd4:	bl	18ac <fwrite@plt>
   67cd8:	add	r6, r0, r6
   67cdc:	ldr	r0, [r4, #16]
   67ce0:	cmp	r0, #0
   67ce4:	beq	67cac <WriteCompressedType+0xa4c>
   67ce8:	b	673cc <WriteCompressedType+0x16c>
   67cec:	mov	r6, #0
   67cf0:	mov	r0, #0
   67cf4:	add	r0, r0, #1
   67cf8:	cmp	r0, r9
   67cfc:	bcc	67cf4 <WriteCompressedType+0xa94>
   67d00:	b	673cc <WriteCompressedType+0x16c>
   67d04:	mov	r6, #0
   67d08:	mov	r0, #0
   67d0c:	add	r0, r0, #1
   67d10:	cmp	r0, r9
   67d14:	bcc	67d0c <WriteCompressedType+0xaac>
   67d18:	b	673cc <WriteCompressedType+0x16c>
   67d1c:	nop	{0}
   67d20:	.word	0x00040005
   67d24:	.word	0x00000001
   67d28:	.word	0x00000001
   67d2c:	.word	0x00000000
   67d30:	.word	0x0000adc4

00067d34 <Mat_VarReadNextInfo5>:
   67d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   67d38:	add	fp, sp, #28
   67d3c:	sub	sp, sp, #84	; 0x54
   67d40:	mov	r4, #0
   67d44:	cmp	r0, #0
   67d48:	beq	67e50 <Mat_VarReadNextInfo5+0x11c>
   67d4c:	mov	r5, r0
   67d50:	ldr	r0, [r0]
   67d54:	bl	1840 <ftell@plt>
   67d58:	cmn	r0, #1
   67d5c:	beq	67e5c <Mat_VarReadNextInfo5+0x128>
   67d60:	ldr	r3, [r5]
   67d64:	mov	r9, r0
   67d68:	sub	r0, fp, #36	; 0x24
   67d6c:	mov	r1, #4
   67d70:	mov	r2, #1
   67d74:	bl	18b8 <fread@plt>
   67d78:	cmp	r0, #0
   67d7c:	beq	67e50 <Mat_VarReadNextInfo5+0x11c>
   67d80:	ldr	r3, [r5]
   67d84:	sub	r0, fp, #40	; 0x28
   67d88:	mov	r1, #4
   67d8c:	mov	r2, #1
   67d90:	bl	18b8 <fread@plt>
   67d94:	ldr	r0, [r5, #20]
   67d98:	cmp	r0, #0
   67d9c:	beq	67db0 <Mat_VarReadNextInfo5+0x7c>
   67da0:	sub	r0, fp, #36	; 0x24
   67da4:	bl	1bf8 <Mat_int32Swap>
   67da8:	sub	r0, fp, #40	; 0x28
   67dac:	bl	1bf8 <Mat_int32Swap>
   67db0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   67db4:	cmp	r1, #14
   67db8:	beq	67e78 <Mat_VarReadNextInfo5+0x144>
   67dbc:	cmp	r1, #15
   67dc0:	bne	67f80 <Mat_VarReadNextInfo5+0x24c>
   67dc4:	vmov.i32	q8, #0	; 0x00000000
   67dc8:	add	r1, sp, #8
   67dcc:	mov	r0, #48	; 0x30
   67dd0:	mov	r2, r1
   67dd4:	vst1.64	{d16-d17}, [r2], r0
   67dd8:	add	r0, r1, #32
   67ddc:	vst1.64	{d16-d17}, [r0]
   67de0:	add	r0, r1, #16
   67de4:	vst1.64	{d16-d17}, [r2]
   67de8:	vst1.64	{d16-d17}, [r0]
   67dec:	bl	18a0 <Mat_VarCalloc@plt>
   67df0:	mov	r4, r0
   67df4:	mov	r0, #1
   67df8:	mov	r1, #56	; 0x38
   67dfc:	str	r0, [r4, #48]	; 0x30
   67e00:	mov	r0, #1
   67e04:	bl	1798 <calloc@plt>
   67e08:	ldr	r1, [r4, #52]	; 0x34
   67e0c:	mov	r2, #56	; 0x38
   67e10:	str	r0, [r1, #12]
   67e14:	ldr	r1, [pc, #1672]	; 684a4 <Mat_VarReadNextInfo5+0x770>
   67e18:	add	r1, pc, r1
   67e1c:	bl	19d8 <inflateInit_@plt>
   67e20:	cmp	r0, #0
   67e24:	beq	67ff4 <Mat_VarReadNextInfo5+0x2c0>
   67e28:	mov	r6, r0
   67e2c:	mov	r0, r4
   67e30:	bl	1918 <Mat_VarFree@plt>
   67e34:	mov	r0, r6
   67e38:	bl	1888 <zError@plt>
   67e3c:	mov	r1, r0
   67e40:	ldr	r0, [pc, #1632]	; 684a8 <Mat_VarReadNextInfo5+0x774>
   67e44:	add	r0, pc, r0
   67e48:	bl	19b4 <Mat_Critical@plt>
   67e4c:	mov	r4, #0
   67e50:	mov	r0, r4
   67e54:	sub	sp, fp, #28
   67e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67e5c:	ldr	r0, [pc, #1596]	; 684a0 <Mat_VarReadNextInfo5+0x76c>
   67e60:	add	r0, pc, r0
   67e64:	bl	19b4 <Mat_Critical@plt>
   67e68:	mov	r4, #0
   67e6c:	mov	r0, r4
   67e70:	sub	sp, fp, #28
   67e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67e78:	bl	18a0 <Mat_VarCalloc@plt>
   67e7c:	ldr	r3, [r5]
   67e80:	add	r7, sp, #8
   67e84:	mov	r4, r0
   67e88:	mov	r1, #4
   67e8c:	mov	r2, #6
   67e90:	mov	r0, r7
   67e94:	bl	18b8 <fread@plt>
   67e98:	ldr	r0, [r5, #20]
   67e9c:	cmp	r0, #0
   67ea0:	beq	67ed4 <Mat_VarReadNextInfo5+0x1a0>
   67ea4:	mov	r0, r7
   67ea8:	bl	1c0c <Mat_uint32Swap>
   67eac:	add	r0, r7, #4
   67eb0:	bl	1c0c <Mat_uint32Swap>
   67eb4:	add	r0, r7, #8
   67eb8:	bl	1c0c <Mat_uint32Swap>
   67ebc:	add	r0, r7, #12
   67ec0:	bl	1c0c <Mat_uint32Swap>
   67ec4:	add	r0, r7, #16
   67ec8:	bl	1c0c <Mat_uint32Swap>
   67ecc:	add	r0, r7, #20
   67ed0:	bl	1c0c <Mat_uint32Swap>
   67ed4:	ldr	r0, [sp, #8]
   67ed8:	cmp	r0, #6
   67edc:	bne	67f18 <Mat_VarReadNextInfo5+0x1e4>
   67ee0:	ldr	r0, [sp, #16]
   67ee4:	and	r1, r0, #512	; 0x200
   67ee8:	and	r2, r0, #1024	; 0x400
   67eec:	and	r3, r0, #2048	; 0x800
   67ef0:	uxtb	r0, r0
   67ef4:	cmp	r0, #18
   67ef8:	movcs	r0, #0
   67efc:	str	r0, [r4, #16]
   67f00:	str	r3, [r4, #20]
   67f04:	str	r2, [r4, #24]
   67f08:	str	r1, [r4, #28]
   67f0c:	cmp	r0, #5
   67f10:	ldreq	r0, [sp, #20]
   67f14:	streq	r0, [r4]
   67f18:	ldr	r2, [sp, #24]
   67f1c:	ldr	r3, [sp, #28]
   67f20:	mov	r0, r5
   67f24:	mov	r1, r4
   67f28:	bl	69e2c <ReadRankDims>
   67f2c:	ldr	r3, [r5]
   67f30:	add	r8, sp, #8
   67f34:	mov	r1, #4
   67f38:	mov	r2, #2
   67f3c:	mov	r0, r8
   67f40:	bl	18b8 <fread@plt>
   67f44:	ldr	r0, [r5, #20]
   67f48:	cmp	r0, #0
   67f4c:	beq	67f58 <Mat_VarReadNextInfo5+0x224>
   67f50:	add	r0, sp, #8
   67f54:	bl	1c0c <Mat_uint32Swap>
   67f58:	ldr	r0, [sp, #8]
   67f5c:	cmp	r0, #1
   67f60:	bne	67f98 <Mat_VarReadNextInfo5+0x264>
   67f64:	ldr	r0, [r5, #20]
   67f68:	cmp	r0, #0
   67f6c:	beq	680b8 <Mat_VarReadNextInfo5+0x384>
   67f70:	add	r0, r8, #4
   67f74:	bl	1c0c <Mat_uint32Swap>
   67f78:	mov	r6, r0
   67f7c:	b	680bc <Mat_VarReadNextInfo5+0x388>
   67f80:	ldr	r0, [pc, #1328]	; 684b8 <Mat_VarReadNextInfo5+0x784>
   67f84:	add	r0, pc, r0
   67f88:	bl	19b4 <Mat_Critical@plt>
   67f8c:	mov	r0, r4
   67f90:	sub	sp, fp, #28
   67f94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67f98:	lsr	r7, r0, #16
   67f9c:	cmp	r7, #4
   67fa0:	bhi	68158 <Mat_VarReadNextInfo5+0x424>
   67fa4:	uxth	r0, r0
   67fa8:	cmp	r0, #1
   67fac:	bne	68158 <Mat_VarReadNextInfo5+0x424>
   67fb0:	cmp	r7, #0
   67fb4:	beq	68158 <Mat_VarReadNextInfo5+0x424>
   67fb8:	add	r0, r7, #1
   67fbc:	bl	18d0 <malloc@plt>
   67fc0:	cmp	r0, #0
   67fc4:	str	r0, [r4, #36]	; 0x24
   67fc8:	beq	68158 <Mat_VarReadNextInfo5+0x424>
   67fcc:	add	r1, r8, #4
   67fd0:	mov	r2, r7
   67fd4:	bl	181c <memcpy@plt>
   67fd8:	ldr	r0, [r4, #36]	; 0x24
   67fdc:	mov	r1, #0
   67fe0:	strb	r1, [r0, r7]
   67fe4:	ldr	r0, [r4, #16]
   67fe8:	cmp	r0, #1
   67fec:	bne	68164 <Mat_VarReadNextInfo5+0x430>
   67ff0:	b	68184 <Mat_VarReadNextInfo5+0x450>
   67ff4:	add	r7, sp, #8
   67ff8:	mov	r0, r5
   67ffc:	mov	r1, r4
   68000:	mov	r2, r7
   68004:	bl	294c <InflateVarTag>
   68008:	mov	r6, r0
   6800c:	ldr	r0, [r5, #20]
   68010:	cmp	r0, #0
   68014:	beq	68028 <Mat_VarReadNextInfo5+0x2f4>
   68018:	mov	r0, r7
   6801c:	bl	1c0c <Mat_uint32Swap>
   68020:	orr	r0, r7, #4
   68024:	bl	1c0c <Mat_uint32Swap>
   68028:	ldr	r0, [sp, #8]
   6802c:	cmp	r0, #14
   68030:	bne	68118 <Mat_VarReadNextInfo5+0x3e4>
   68034:	add	r6, sp, #8
   68038:	mov	r0, r5
   6803c:	mov	r1, r4
   68040:	mov	r2, r6
   68044:	bl	2ab0 <InflateArrayFlags>
   68048:	ldr	r0, [r5, #20]
   6804c:	cmp	r0, #0
   68050:	beq	6806c <Mat_VarReadNextInfo5+0x338>
   68054:	mov	r0, r6
   68058:	bl	1c0c <Mat_uint32Swap>
   6805c:	add	r0, r6, #8
   68060:	bl	1c0c <Mat_uint32Swap>
   68064:	add	r0, r6, #12
   68068:	bl	1c0c <Mat_uint32Swap>
   6806c:	ldr	r0, [sp, #8]
   68070:	cmp	r0, #6
   68074:	bne	68208 <Mat_VarReadNextInfo5+0x4d4>
   68078:	ldr	r0, [sp, #16]
   6807c:	and	r1, r0, #512	; 0x200
   68080:	and	r2, r0, #1024	; 0x400
   68084:	and	r3, r0, #2048	; 0x800
   68088:	uxtb	r0, r0
   6808c:	cmp	r0, #18
   68090:	movcs	r0, #0
   68094:	cmp	r0, #5
   68098:	str	r0, [r4, #16]
   6809c:	str	r3, [r4, #20]
   680a0:	str	r2, [r4, #24]
   680a4:	str	r1, [r4, #28]
   680a8:	bne	6820c <Mat_VarReadNextInfo5+0x4d8>
   680ac:	ldr	r0, [sp, #20]
   680b0:	str	r0, [r4]
   680b4:	b	68214 <Mat_VarReadNextInfo5+0x4e0>
   680b8:	ldr	r6, [sp, #12]
   680bc:	ands	r0, r6, #7
   680c0:	mov	r7, r6
   680c4:	sub	r0, r6, r0
   680c8:	addne	r7, r0, #8
   680cc:	add	r0, r7, #1
   680d0:	bl	18d0 <malloc@plt>
   680d4:	cmp	r0, #0
   680d8:	str	r0, [r4, #36]	; 0x24
   680dc:	beq	68158 <Mat_VarReadNextInfo5+0x424>
   680e0:	ldr	r3, [r5]
   680e4:	mov	r1, #1
   680e8:	mov	r2, r7
   680ec:	bl	18b8 <fread@plt>
   680f0:	mov	r1, r0
   680f4:	ldr	r0, [r4, #36]	; 0x24
   680f8:	cmp	r1, r7
   680fc:	bne	68140 <Mat_VarReadNextInfo5+0x40c>
   68100:	mov	r1, #0
   68104:	strb	r1, [r0, r6]
   68108:	ldr	r0, [r4, #16]
   6810c:	cmp	r0, #1
   68110:	bne	68164 <Mat_VarReadNextInfo5+0x430>
   68114:	b	68184 <Mat_VarReadNextInfo5+0x450>
   68118:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6811c:	mov	r2, #1
   68120:	sub	r1, r0, r6
   68124:	ldr	r0, [r5]
   68128:	bl	1a2c <fseek@plt>
   6812c:	mov	r0, r4
   68130:	bl	1918 <Mat_VarFree@plt>
   68134:	ldr	r0, [pc, #880]	; 684ac <Mat_VarReadNextInfo5+0x778>
   68138:	add	r0, pc, r0
   6813c:	b	67e64 <Mat_VarReadNextInfo5+0x130>
   68140:	bl	1804 <free@plt>
   68144:	mov	r0, #0
   68148:	str	r0, [r4, #36]	; 0x24
   6814c:	ldr	r0, [pc, #864]	; 684b4 <Mat_VarReadNextInfo5+0x780>
   68150:	add	r0, pc, r0
   68154:	bl	19b4 <Mat_Critical@plt>
   68158:	ldr	r0, [r4, #16]
   6815c:	cmp	r0, #1
   68160:	beq	68184 <Mat_VarReadNextInfo5+0x450>
   68164:	cmp	r0, #16
   68168:	beq	68194 <Mat_VarReadNextInfo5+0x460>
   6816c:	cmp	r0, #2
   68170:	bne	68458 <Mat_VarReadNextInfo5+0x724>
   68174:	mov	r0, r5
   68178:	mov	r1, r4
   6817c:	bl	684bc <ReadNextStructField>
   68180:	b	68458 <Mat_VarReadNextInfo5+0x724>
   68184:	mov	r0, r5
   68188:	mov	r1, r4
   6818c:	bl	69358 <ReadNextCell>
   68190:	b	68458 <Mat_VarReadNextInfo5+0x724>
   68194:	mov	r0, #1
   68198:	sub	r1, fp, #32
   6819c:	str	r0, [fp, #-32]	; 0xffffffe0
   681a0:	mov	r0, r4
   681a4:	bl	6be10 <SafeMulDims>
   681a8:	mov	r0, #4
   681ac:	mov	r2, #4
   681b0:	str	r0, [r4, #12]
   681b4:	mov	r0, r4
   681b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   681bc:	bl	6be6c <SafeMul>
   681c0:	ldr	r0, [r4]
   681c4:	bl	18d0 <malloc@plt>
   681c8:	cmp	r0, #0
   681cc:	str	r0, [r4, #40]	; 0x28
   681d0:	beq	682ec <Mat_VarReadNextInfo5+0x5b8>
   681d4:	mov	r7, r0
   681d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   681dc:	cmp	r0, #0
   681e0:	beq	68458 <Mat_VarReadNextInfo5+0x724>
   681e4:	mov	r6, #0
   681e8:	mov	r0, r5
   681ec:	bl	1a50 <Mat_VarReadNextInfo@plt>
   681f0:	str	r0, [r7, r6, lsl #2]
   681f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   681f8:	add	r6, r6, #1
   681fc:	cmp	r6, r0
   68200:	bcc	681e8 <Mat_VarReadNextInfo5+0x4b4>
   68204:	b	68458 <Mat_VarReadNextInfo5+0x724>
   68208:	ldr	r0, [r4, #16]
   6820c:	cmp	r0, #17
   68210:	beq	6847c <Mat_VarReadNextInfo5+0x748>
   68214:	mov	r0, #0
   68218:	add	r6, sp, #8
   6821c:	mov	r1, r4
   68220:	mov	r3, #64	; 0x40
   68224:	str	r0, [fp, #-32]	; 0xffffffe0
   68228:	sub	r0, fp, #32
   6822c:	mov	r2, r6
   68230:	str	r0, [sp]
   68234:	mov	r0, r5
   68238:	bl	2c14 <InflateRankDims>
   6823c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68240:	mov	sl, #1
   68244:	orr	r8, r7, #4
   68248:	cmp	r0, #0
   6824c:	addeq	r0, r6, #8
   68250:	moveq	sl, #0
   68254:	streq	r0, [fp, #-32]	; 0xffffffe0
   68258:	ldr	r0, [r5, #20]
   6825c:	cmp	r0, #0
   68260:	beq	68274 <Mat_VarReadNextInfo5+0x540>
   68264:	add	r0, sp, #8
   68268:	bl	1c0c <Mat_uint32Swap>
   6826c:	mov	r0, r8
   68270:	bl	1c0c <Mat_uint32Swap>
   68274:	ldr	r0, [sp, #8]
   68278:	cmp	r0, #5
   6827c:	bne	68324 <Mat_VarReadNextInfo5+0x5f0>
   68280:	ldr	r0, [sp, #12]
   68284:	asr	r1, r0, #31
   68288:	add	r0, r0, r1, lsr #30
   6828c:	asr	r1, r0, #2
   68290:	bic	r0, r0, #3
   68294:	str	r1, [r4, #4]
   68298:	bl	18d0 <malloc@plt>
   6829c:	str	r0, [r4, #32]
   682a0:	ldr	r2, [r5, #20]
   682a4:	ldr	r1, [r4, #4]
   682a8:	cmp	r2, #0
   682ac:	beq	682fc <Mat_VarReadNextInfo5+0x5c8>
   682b0:	cmp	r1, #1
   682b4:	blt	68324 <Mat_VarReadNextInfo5+0x5f0>
   682b8:	mov	r6, #0
   682bc:	mov	r7, #0
   682c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   682c4:	add	r0, r0, r6
   682c8:	bl	1c0c <Mat_uint32Swap>
   682cc:	ldr	r1, [r4, #32]
   682d0:	add	r6, r6, #4
   682d4:	str	r0, [r1, r7, lsl #2]
   682d8:	add	r7, r7, #1
   682dc:	ldr	r0, [r4, #4]
   682e0:	cmp	r7, r0
   682e4:	blt	682c0 <Mat_VarReadNextInfo5+0x58c>
   682e8:	b	68324 <Mat_VarReadNextInfo5+0x5f0>
   682ec:	mov	r0, #0
   682f0:	str	r0, [r4]
   682f4:	str	r0, [r4, #12]
   682f8:	b	68458 <Mat_VarReadNextInfo5+0x724>
   682fc:	cmp	r1, #1
   68300:	blt	68324 <Mat_VarReadNextInfo5+0x5f0>
   68304:	ldr	r2, [fp, #-32]	; 0xffffffe0
   68308:	mov	r1, #0
   6830c:	ldr	r3, [r2, r1, lsl #2]
   68310:	str	r3, [r0, r1, lsl #2]
   68314:	add	r1, r1, #1
   68318:	ldr	r3, [r4, #4]
   6831c:	cmp	r1, r3
   68320:	blt	6830c <Mat_VarReadNextInfo5+0x5d8>
   68324:	cmp	sl, #0
   68328:	beq	68334 <Mat_VarReadNextInfo5+0x600>
   6832c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68330:	bl	1804 <free@plt>
   68334:	add	r2, sp, #8
   68338:	mov	r0, r5
   6833c:	mov	r1, r4
   68340:	bl	2f20 <InflateVarNameTag>
   68344:	ldr	r0, [r5, #20]
   68348:	cmp	r0, #0
   6834c:	beq	68358 <Mat_VarReadNextInfo5+0x624>
   68350:	add	r0, sp, #8
   68354:	bl	1c0c <Mat_uint32Swap>
   68358:	ldr	r0, [sp, #8]
   6835c:	cmp	r0, #1
   68360:	bne	68380 <Mat_VarReadNextInfo5+0x64c>
   68364:	ldr	r0, [r5, #20]
   68368:	cmp	r0, #0
   6836c:	beq	683c4 <Mat_VarReadNextInfo5+0x690>
   68370:	mov	r0, r8
   68374:	bl	1c0c <Mat_uint32Swap>
   68378:	mov	r7, r0
   6837c:	b	683c8 <Mat_VarReadNextInfo5+0x694>
   68380:	lsr	r7, r0, #16
   68384:	cmp	r7, #4
   68388:	bhi	6840c <Mat_VarReadNextInfo5+0x6d8>
   6838c:	uxth	r0, r0
   68390:	cmp	r0, #1
   68394:	bne	6840c <Mat_VarReadNextInfo5+0x6d8>
   68398:	cmp	r7, #0
   6839c:	beq	6840c <Mat_VarReadNextInfo5+0x6d8>
   683a0:	add	r0, r7, #1
   683a4:	bl	18d0 <malloc@plt>
   683a8:	cmp	r0, #0
   683ac:	str	r0, [r4, #36]	; 0x24
   683b0:	beq	6840c <Mat_VarReadNextInfo5+0x6d8>
   683b4:	mov	r1, r8
   683b8:	mov	r2, r7
   683bc:	bl	181c <memcpy@plt>
   683c0:	b	68400 <Mat_VarReadNextInfo5+0x6cc>
   683c4:	ldr	r7, [sp, #12]
   683c8:	ands	r0, r7, #7
   683cc:	mov	r6, r7
   683d0:	sub	r0, r7, r0
   683d4:	addne	r6, r0, #8
   683d8:	add	r0, r6, #1
   683dc:	bl	18d0 <malloc@plt>
   683e0:	cmp	r0, #0
   683e4:	str	r0, [r4, #36]	; 0x24
   683e8:	beq	6840c <Mat_VarReadNextInfo5+0x6d8>
   683ec:	mov	r2, r0
   683f0:	mov	r0, r5
   683f4:	mov	r1, r4
   683f8:	mov	r3, r6
   683fc:	bl	3084 <InflateVarName>
   68400:	ldr	r0, [r4, #36]	; 0x24
   68404:	mov	r1, #0
   68408:	strb	r1, [r0, r7]
   6840c:	ldr	r0, [r4, #16]
   68410:	cmp	r0, #1
   68414:	beq	68430 <Mat_VarReadNextInfo5+0x6fc>
   68418:	cmp	r0, #2
   6841c:	bne	6843c <Mat_VarReadNextInfo5+0x708>
   68420:	mov	r0, r5
   68424:	mov	r1, r4
   68428:	bl	684bc <ReadNextStructField>
   6842c:	b	6843c <Mat_VarReadNextInfo5+0x708>
   68430:	mov	r0, r5
   68434:	mov	r1, r4
   68438:	bl	69358 <ReadNextCell>
   6843c:	ldr	r1, [r4, #52]	; 0x34
   68440:	ldr	r0, [r5]
   68444:	mov	r2, #1
   68448:	ldr	r1, [r1, #12]
   6844c:	ldr	r1, [r1, #4]
   68450:	rsb	r1, r1, #0
   68454:	bl	1a2c <fseek@plt>
   68458:	ldr	r0, [r5]
   6845c:	bl	1840 <ftell@plt>
   68460:	ldr	r1, [r4, #52]	; 0x34
   68464:	cmn	r0, #1
   68468:	str	r0, [r1]
   6846c:	bne	6847c <Mat_VarReadNextInfo5+0x748>
   68470:	ldr	r0, [pc, #56]	; 684b0 <Mat_VarReadNextInfo5+0x77c>
   68474:	add	r0, pc, r0
   68478:	bl	19b4 <Mat_Critical@plt>
   6847c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   68480:	mov	r2, #0
   68484:	add	r0, r9, r0
   68488:	add	r1, r0, #8
   6848c:	ldr	r0, [r5]
   68490:	bl	1a2c <fseek@plt>
   68494:	mov	r0, r4
   68498:	sub	sp, fp, #28
   6849c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   684a0:	.word	0x00009e04
   684a4:	.word	0x0000a0a1
   684a8:	.word	0x0000a094
   684ac:	.word	0x00009e3f
   684b0:	.word	0x000097f0
   684b4:	.word	0x00009da0
   684b8:	.word	0x00009f96

000684bc <ReadNextStructField>:
   684bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   684c0:	add	fp, sp, #28
   684c4:	sub	sp, sp, #124	; 0x7c
   684c8:	mov	r9, r1
   684cc:	mov	r5, r0
   684d0:	mov	r0, #1
   684d4:	sub	r1, fp, #32
   684d8:	str	r0, [fp, #-32]	; 0xffffffe0
   684dc:	mov	r0, r9
   684e0:	bl	6be10 <SafeMulDims>
   684e4:	cmp	r0, #0
   684e8:	beq	68508 <ReadNextStructField+0x4c>
   684ec:	ldr	r0, [pc, #3632]	; 69324 <ReadNextStructField+0xe68>
   684f0:	add	r0, pc, r0
   684f4:	bl	19b4 <Mat_Critical@plt>
   684f8:	mov	r7, #0
   684fc:	mov	r0, r7
   68500:	sub	sp, fp, #28
   68504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   68508:	ldr	r0, [r9, #48]	; 0x30
   6850c:	str	r5, [sp, #36]	; 0x24
   68510:	cmp	r0, #1
   68514:	bne	685fc <ReadNextStructField+0x140>
   68518:	vmov.i32	q8, #0	; 0x00000000
   6851c:	add	r6, sp, #48	; 0x30
   68520:	mov	r0, #48	; 0x30
   68524:	mov	r1, r6
   68528:	mov	r2, r6
   6852c:	vst1.64	{d16-d17}, [r1], r0
   68530:	add	r0, r6, #32
   68534:	vst1.64	{d16-d17}, [r0]
   68538:	add	r0, r6, #16
   6853c:	vst1.64	{d16-d17}, [r1]
   68540:	mov	r1, r9
   68544:	vst1.64	{d16-d17}, [r0]
   68548:	mov	r0, r5
   6854c:	bl	3654 <InflateFieldNameLength>
   68550:	mov	r7, r0
   68554:	ldr	r0, [r5, #20]
   68558:	cmp	r0, #0
   6855c:	beq	68570 <ReadNextStructField+0xb4>
   68560:	mov	r0, r6
   68564:	bl	1c0c <Mat_uint32Swap>
   68568:	orr	r0, r6, #4
   6856c:	bl	1c0c <Mat_uint32Swap>
   68570:	ldrh	r0, [sp, #48]	; 0x30
   68574:	cmp	r0, #5
   68578:	bne	686b4 <ReadNextStructField+0x1f8>
   6857c:	ldr	r8, [sp, #52]	; 0x34
   68580:	mov	r0, r5
   68584:	mov	r1, r9
   68588:	mov	r2, r6
   6858c:	str	r7, [sp, #32]
   68590:	bl	37b8 <InflateFieldNamesTag>
   68594:	mov	r4, r0
   68598:	ldr	r0, [r5, #20]
   6859c:	orr	r6, r6, #4
   685a0:	cmp	r0, #0
   685a4:	beq	685b8 <ReadNextStructField+0xfc>
   685a8:	add	r0, sp, #48	; 0x30
   685ac:	bl	1c0c <Mat_uint32Swap>
   685b0:	mov	r0, r6
   685b4:	bl	1c0c <Mat_uint32Swap>
   685b8:	ldr	r0, [sp, #32]
   685bc:	ldr	r7, [sp, #52]	; 0x34
   685c0:	add	r0, r4, r0
   685c4:	udiv	r4, r7, r8
   685c8:	str	r0, [sp, #32]
   685cc:	mov	r0, #4
   685d0:	str	r0, [r9, #12]
   685d4:	mul	r0, r4, r8
   685d8:	ands	r5, r0, #7
   685dc:	rsbne	r5, r5, #8
   685e0:	cmp	r8, r7
   685e4:	bls	686cc <ReadNextStructField+0x210>
   685e8:	ldr	r0, [r9, #52]	; 0x34
   685ec:	mov	r1, #0
   685f0:	str	r1, [r0, #4]
   685f4:	str	r1, [r0, #8]
   685f8:	b	688a4 <ReadNextStructField+0x3e8>
   685fc:	ldr	r3, [r5]
   68600:	add	r6, sp, #48	; 0x30
   68604:	mov	r1, #4
   68608:	mov	r2, #2
   6860c:	mov	r0, r6
   68610:	bl	18b8 <fread@plt>
   68614:	mov	r7, r0
   68618:	ldr	r0, [r5, #20]
   6861c:	cmp	r0, #0
   68620:	beq	68634 <ReadNextStructField+0x178>
   68624:	mov	r0, r6
   68628:	bl	1c0c <Mat_uint32Swap>
   6862c:	add	r0, r6, #4
   68630:	bl	1c0c <Mat_uint32Swap>
   68634:	ldrh	r0, [sp, #48]	; 0x30
   68638:	cmp	r0, #5
   6863c:	bne	686c0 <ReadNextStructField+0x204>
   68640:	ldr	r3, [r5]
   68644:	ldr	r4, [sp, #52]	; 0x34
   68648:	mov	r0, r6
   6864c:	mov	r1, #4
   68650:	mov	r2, #2
   68654:	mov	r8, #4
   68658:	bl	18b8 <fread@plt>
   6865c:	mov	sl, r0
   68660:	ldr	r0, [r5, #20]
   68664:	add	r6, r6, #4
   68668:	cmp	r0, #0
   6866c:	beq	68680 <ReadNextStructField+0x1c4>
   68670:	add	r0, sp, #48	; 0x30
   68674:	bl	1c0c <Mat_uint32Swap>
   68678:	mov	r0, r6
   6867c:	bl	1c0c <Mat_uint32Swap>
   68680:	ldr	r0, [sp, #52]	; 0x34
   68684:	add	r7, sl, r7
   68688:	str	r8, [r9, #12]
   6868c:	str	r6, [sp, #28]
   68690:	ldr	r5, [r9, #52]	; 0x34
   68694:	udiv	sl, r0, r4
   68698:	cmp	r4, r0
   6869c:	str	r0, [sp, #20]
   686a0:	bls	68794 <ReadNextStructField+0x2d8>
   686a4:	mov	r0, #0
   686a8:	str	r0, [r5, #4]
   686ac:	str	r0, [r5, #8]
   686b0:	b	68820 <ReadNextStructField+0x364>
   686b4:	ldr	r5, [pc, #3180]	; 69328 <ReadNextStructField+0xe6c>
   686b8:	add	r5, pc, r5
   686bc:	b	688e0 <ReadNextStructField+0x424>
   686c0:	ldr	r0, [pc, #3212]	; 69354 <ReadNextStructField+0xe98>
   686c4:	add	r0, pc, r0
   686c8:	b	688e4 <ReadNextStructField+0x428>
   686cc:	add	r0, r5, r0
   686d0:	bl	18d0 <malloc@plt>
   686d4:	cmp	r0, #0
   686d8:	beq	688a4 <ReadNextStructField+0x3e8>
   686dc:	mov	r2, r0
   686e0:	ldr	r0, [sp, #36]	; 0x24
   686e4:	mov	r1, r9
   686e8:	mov	r3, r4
   686ec:	str	r6, [sp, #28]
   686f0:	str	r7, [sp, #24]
   686f4:	str	r8, [sp]
   686f8:	str	r5, [sp, #4]
   686fc:	mov	r6, r2
   68700:	bl	391c <InflateFieldNames>
   68704:	ldr	r5, [r9, #52]	; 0x34
   68708:	str	r0, [sp, #40]	; 0x28
   6870c:	mov	r0, r4
   68710:	mov	r1, #4
   68714:	str	r4, [r5, #4]
   68718:	bl	1798 <calloc@plt>
   6871c:	cmp	r0, #0
   68720:	str	r0, [r5, #8]
   68724:	beq	68884 <ReadNextStructField+0x3c8>
   68728:	sub	r5, r8, #1
   6872c:	mov	r7, r6
   68730:	mov	sl, #0
   68734:	b	68748 <ReadNextStructField+0x28c>
   68738:	add	sl, sl, #1
   6873c:	add	r7, r7, r8
   68740:	cmp	sl, r4
   68744:	bcs	68884 <ReadNextStructField+0x3c8>
   68748:	mov	r0, r8
   6874c:	bl	18d0 <malloc@plt>
   68750:	ldr	r1, [r9, #52]	; 0x34
   68754:	ldr	r1, [r1, #8]
   68758:	str	r0, [r1, sl, lsl #2]
   6875c:	ldr	r0, [r9, #52]	; 0x34
   68760:	ldr	r0, [r0, #8]
   68764:	ldr	r0, [r0, sl, lsl #2]
   68768:	cmp	r0, #0
   6876c:	beq	68738 <ReadNextStructField+0x27c>
   68770:	mov	r1, r7
   68774:	mov	r2, r8
   68778:	bl	181c <memcpy@plt>
   6877c:	ldr	r0, [r9, #52]	; 0x34
   68780:	mov	r1, #0
   68784:	ldr	r0, [r0, #8]
   68788:	ldr	r0, [r0, sl, lsl #2]
   6878c:	strb	r1, [r0, r5]
   68790:	b	68738 <ReadNextStructField+0x27c>
   68794:	mov	r0, sl
   68798:	mov	r1, #4
   6879c:	str	sl, [r5, #4]
   687a0:	bl	1798 <calloc@plt>
   687a4:	cmp	r0, #0
   687a8:	str	r0, [r5, #8]
   687ac:	beq	68820 <ReadNextStructField+0x364>
   687b0:	ldr	r5, [sp, #36]	; 0x24
   687b4:	sub	r6, r4, #1
   687b8:	mov	r8, #0
   687bc:	b	687cc <ReadNextStructField+0x310>
   687c0:	add	r8, r8, #1
   687c4:	cmp	r8, sl
   687c8:	bcs	68824 <ReadNextStructField+0x368>
   687cc:	mov	r0, r4
   687d0:	bl	18d0 <malloc@plt>
   687d4:	ldr	r1, [r9, #52]	; 0x34
   687d8:	ldr	r1, [r1, #8]
   687dc:	str	r0, [r1, r8, lsl #2]
   687e0:	ldr	r0, [r9, #52]	; 0x34
   687e4:	ldr	r0, [r0, #8]
   687e8:	ldr	r0, [r0, r8, lsl #2]
   687ec:	cmp	r0, #0
   687f0:	beq	687c0 <ReadNextStructField+0x304>
   687f4:	ldr	r3, [r5]
   687f8:	mov	r1, #1
   687fc:	mov	r2, r4
   68800:	bl	18b8 <fread@plt>
   68804:	ldr	r1, [r9, #52]	; 0x34
   68808:	add	r7, r0, r7
   6880c:	mov	r2, #0
   68810:	ldr	r1, [r1, #8]
   68814:	ldr	r1, [r1, r8, lsl #2]
   68818:	strb	r2, [r1, r6]
   6881c:	b	687c0 <ReadNextStructField+0x304>
   68820:	ldr	r5, [sp, #36]	; 0x24
   68824:	mul	r0, sl, r4
   68828:	ands	r1, r0, #7
   6882c:	beq	68848 <ReadNextStructField+0x38c>
   68830:	ldr	r0, [r5]
   68834:	rsb	r5, r1, #8
   68838:	mov	r2, #1
   6883c:	mov	r1, r5
   68840:	bl	1a2c <fseek@plt>
   68844:	add	r7, r7, r5
   68848:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6884c:	sub	r0, fp, #36	; 0x24
   68850:	mov	r2, sl
   68854:	bl	6be6c <SafeMul>
   68858:	cmp	r0, #0
   6885c:	bne	68878 <ReadNextStructField+0x3bc>
   68860:	ldr	r2, [r9, #12]
   68864:	ldr	r1, [fp, #-36]	; 0xffffffdc
   68868:	mov	r0, r9
   6886c:	bl	6be6c <SafeMul>
   68870:	cmp	r0, #0
   68874:	beq	688f4 <ReadNextStructField+0x438>
   68878:	ldr	r0, [pc, #2760]	; 69348 <ReadNextStructField+0xe8c>
   6887c:	add	r0, pc, r0
   68880:	b	688e4 <ReadNextStructField+0x428>
   68884:	ldr	r0, [sp, #32]
   68888:	ldr	r1, [sp, #40]	; 0x28
   6888c:	add	r0, r1, r0
   68890:	str	r0, [sp, #32]
   68894:	mov	r0, r6
   68898:	bl	1804 <free@plt>
   6889c:	ldr	r6, [sp, #28]
   688a0:	ldr	r7, [sp, #24]
   688a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   688a8:	sub	r0, fp, #36	; 0x24
   688ac:	mov	r2, r4
   688b0:	bl	6be6c <SafeMul>
   688b4:	ldr	r5, [pc, #2672]	; 6932c <ReadNextStructField+0xe70>
   688b8:	cmp	r0, #0
   688bc:	add	r5, pc, r5
   688c0:	bne	688dc <ReadNextStructField+0x420>
   688c4:	ldr	r2, [r9, #12]
   688c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   688cc:	mov	r0, r9
   688d0:	bl	6be6c <SafeMul>
   688d4:	cmp	r0, #0
   688d8:	beq	689ec <ReadNextStructField+0x530>
   688dc:	ldr	r7, [sp, #32]
   688e0:	mov	r0, r5
   688e4:	bl	19b4 <Mat_Critical@plt>
   688e8:	mov	r0, r7
   688ec:	sub	sp, fp, #28
   688f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   688f4:	ldr	r0, [r9]
   688f8:	cmp	r0, #0
   688fc:	beq	688e8 <ReadNextStructField+0x42c>
   68900:	bl	18d0 <malloc@plt>
   68904:	cmp	r0, #0
   68908:	str	r0, [r9, #40]	; 0x28
   6890c:	str	r0, [sp, #40]	; 0x28
   68910:	beq	688e8 <ReadNextStructField+0x42c>
   68914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68918:	str	r7, [sp, #32]
   6891c:	cmp	r0, #0
   68920:	beq	68af0 <ReadNextStructField+0x634>
   68924:	ldr	r1, [sp, #20]
   68928:	cmp	r4, r1
   6892c:	bhi	68970 <ReadNextStructField+0x4b4>
   68930:	ldr	r6, [sp, #40]	; 0x28
   68934:	mov	r1, #0
   68938:	mul	r5, r1, sl
   6893c:	mov	r7, #0
   68940:	str	r1, [sp, #24]
   68944:	add	r8, r7, r5
   68948:	bl	18a0 <Mat_VarCalloc@plt>
   6894c:	add	r7, r7, #1
   68950:	str	r0, [r6, r8, lsl #2]
   68954:	cmp	r7, sl
   68958:	bcc	68944 <ReadNextStructField+0x488>
   6895c:	ldr	r1, [sp, #24]
   68960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68964:	add	r1, r1, #1
   68968:	cmp	r1, r0
   6896c:	bcc	68938 <ReadNextStructField+0x47c>
   68970:	cmp	r0, #0
   68974:	ldrne	r0, [r9, #52]	; 0x34
   68978:	ldrne	r0, [r0, #8]
   6897c:	cmpne	r0, #0
   68980:	beq	68af0 <ReadNextStructField+0x634>
   68984:	ldr	r0, [sp, #20]
   68988:	cmp	r4, r0
   6898c:	bhi	68af0 <ReadNextStructField+0x634>
   68990:	ldr	r4, [sp, #40]	; 0x28
   68994:	mov	r8, #0
   68998:	b	689ac <ReadNextStructField+0x4f0>
   6899c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   689a0:	add	r8, r8, #1
   689a4:	cmp	r8, r0
   689a8:	bcs	68af0 <ReadNextStructField+0x634>
   689ac:	mul	r6, r8, sl
   689b0:	mov	r5, #0
   689b4:	b	689c4 <ReadNextStructField+0x508>
   689b8:	add	r5, r5, #1
   689bc:	cmp	r5, sl
   689c0:	bcs	6899c <ReadNextStructField+0x4e0>
   689c4:	ldr	r0, [r9, #52]	; 0x34
   689c8:	ldr	r0, [r0, #8]
   689cc:	ldr	r0, [r0, r5, lsl #2]
   689d0:	cmp	r0, #0
   689d4:	beq	689b8 <ReadNextStructField+0x4fc>
   689d8:	add	r7, r5, r6
   689dc:	bl	1864 <strdup@plt>
   689e0:	ldr	r1, [r4, r7, lsl #2]
   689e4:	str	r0, [r1, #36]	; 0x24
   689e8:	b	689b8 <ReadNextStructField+0x4fc>
   689ec:	ldr	r0, [r9]
   689f0:	cmp	r0, #0
   689f4:	beq	692cc <ReadNextStructField+0xe10>
   689f8:	ldr	r1, [r9, #12]
   689fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68a00:	bl	1798 <calloc@plt>
   68a04:	cmp	r0, #0
   68a08:	str	r0, [r9, #40]	; 0x28
   68a0c:	str	r0, [sp, #40]	; 0x28
   68a10:	beq	692dc <ReadNextStructField+0xe20>
   68a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68a18:	str	r6, [sp, #28]
   68a1c:	str	r8, [sp, #20]
   68a20:	str	r7, [sp, #24]
   68a24:	cmp	r0, #0
   68a28:	beq	68a6c <ReadNextStructField+0x5b0>
   68a2c:	cmp	r8, r7
   68a30:	bhi	68a6c <ReadNextStructField+0x5b0>
   68a34:	ldr	r8, [sp, #40]	; 0x28
   68a38:	mov	r7, #0
   68a3c:	mul	r5, r7, r4
   68a40:	mov	r6, #0
   68a44:	add	sl, r6, r5
   68a48:	bl	18a0 <Mat_VarCalloc@plt>
   68a4c:	add	r6, r6, #1
   68a50:	str	r0, [r8, sl, lsl #2]
   68a54:	cmp	r6, r4
   68a58:	bcc	68a44 <ReadNextStructField+0x588>
   68a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68a60:	add	r7, r7, #1
   68a64:	cmp	r7, r0
   68a68:	bcc	68a3c <ReadNextStructField+0x580>
   68a6c:	cmp	r0, #0
   68a70:	add	sl, sp, #48	; 0x30
   68a74:	ldrne	r0, [r9, #52]	; 0x34
   68a78:	ldrne	r0, [r0, #8]
   68a7c:	cmpne	r0, #0
   68a80:	beq	68d74 <ReadNextStructField+0x8b8>
   68a84:	ldr	r0, [sp, #20]
   68a88:	ldr	r1, [sp, #24]
   68a8c:	cmp	r0, r1
   68a90:	bhi	68d74 <ReadNextStructField+0x8b8>
   68a94:	mov	r8, #0
   68a98:	b	68aac <ReadNextStructField+0x5f0>
   68a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68aa0:	add	r8, r8, #1
   68aa4:	cmp	r8, r0
   68aa8:	bcs	68d74 <ReadNextStructField+0x8b8>
   68aac:	mul	r7, r8, r4
   68ab0:	mov	r5, #0
   68ab4:	b	68ac4 <ReadNextStructField+0x608>
   68ab8:	add	r5, r5, #1
   68abc:	cmp	r5, r4
   68ac0:	bcs	68a9c <ReadNextStructField+0x5e0>
   68ac4:	ldr	r0, [r9, #52]	; 0x34
   68ac8:	ldr	r0, [r0, #8]
   68acc:	ldr	r0, [r0, r5, lsl #2]
   68ad0:	cmp	r0, #0
   68ad4:	beq	68ab8 <ReadNextStructField+0x5fc>
   68ad8:	add	r6, r5, r7
   68adc:	bl	1864 <strdup@plt>
   68ae0:	ldr	r1, [sp, #40]	; 0x28
   68ae4:	ldr	r1, [r1, r6, lsl #2]
   68ae8:	str	r0, [r1, #36]	; 0x24
   68aec:	b	68ab8 <ReadNextStructField+0x5fc>
   68af0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68af4:	cmp	r0, #0
   68af8:	beq	692cc <ReadNextStructField+0xe10>
   68afc:	add	r8, sp, #48	; 0x30
   68b00:	ldr	r7, [sp, #32]
   68b04:	ldr	r9, [sp, #40]	; 0x28
   68b08:	mov	r5, #0
   68b0c:	add	r0, r8, #20
   68b10:	str	r0, [sp, #24]
   68b14:	add	r0, r8, #16
   68b18:	str	r0, [sp, #20]
   68b1c:	add	r0, r8, #12
   68b20:	str	r0, [sp, #16]
   68b24:	add	r0, r8, #8
   68b28:	str	r0, [sp, #12]
   68b2c:	b	68b5c <ReadNextStructField+0x6a0>
   68b30:	ldr	r9, [sp, #40]	; 0x28
   68b34:	ldr	r0, [r9, r5, lsl #2]
   68b38:	ldr	r0, [r0, #52]	; 0x34
   68b3c:	bl	1804 <free@plt>
   68b40:	ldr	r0, [r9, r5, lsl #2]
   68b44:	mov	r1, #0
   68b48:	str	r1, [r0, #52]	; 0x34
   68b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68b50:	add	r5, r5, #1
   68b54:	cmp	r5, r0
   68b58:	bcs	688e8 <ReadNextStructField+0x42c>
   68b5c:	ldr	r6, [sp, #36]	; 0x24
   68b60:	mov	r0, r8
   68b64:	mov	r1, #4
   68b68:	mov	r2, #2
   68b6c:	ldr	r3, [r6]
   68b70:	bl	18b8 <fread@plt>
   68b74:	mov	r4, r0
   68b78:	ldr	r0, [r6, #20]
   68b7c:	ldr	r6, [sp, #28]
   68b80:	cmp	r0, #0
   68b84:	beq	68b98 <ReadNextStructField+0x6dc>
   68b88:	mov	r0, r8
   68b8c:	bl	1c0c <Mat_uint32Swap>
   68b90:	mov	r0, r6
   68b94:	bl	1c0c <Mat_uint32Swap>
   68b98:	ldr	r0, [sp, #48]	; 0x30
   68b9c:	add	r7, r4, r7
   68ba0:	cmp	r0, #14
   68ba4:	bne	692e8 <ReadNextStructField+0xe2c>
   68ba8:	ldr	r4, [sp, #52]	; 0x34
   68bac:	cmp	r4, #0
   68bb0:	beq	68b30 <ReadNextStructField+0x674>
   68bb4:	ldr	r6, [sp, #36]	; 0x24
   68bb8:	mov	r0, r8
   68bbc:	mov	r1, #4
   68bc0:	mov	r2, #6
   68bc4:	ldr	r3, [r6]
   68bc8:	bl	18b8 <fread@plt>
   68bcc:	mov	r9, r0
   68bd0:	ldr	r0, [r6, #20]
   68bd4:	ldr	r6, [sp, #28]
   68bd8:	cmp	r0, #0
   68bdc:	beq	68c10 <ReadNextStructField+0x754>
   68be0:	mov	r0, r8
   68be4:	bl	1c0c <Mat_uint32Swap>
   68be8:	mov	r0, r6
   68bec:	bl	1c0c <Mat_uint32Swap>
   68bf0:	ldr	r0, [sp, #12]
   68bf4:	bl	1c0c <Mat_uint32Swap>
   68bf8:	ldr	r0, [sp, #16]
   68bfc:	bl	1c0c <Mat_uint32Swap>
   68c00:	ldr	r0, [sp, #20]
   68c04:	bl	1c0c <Mat_uint32Swap>
   68c08:	ldr	r0, [sp, #24]
   68c0c:	bl	1c0c <Mat_uint32Swap>
   68c10:	ldr	r0, [sp, #48]	; 0x30
   68c14:	add	r9, r9, r7
   68c18:	str	r4, [sp, #32]
   68c1c:	cmp	r0, #6
   68c20:	bne	68c70 <ReadNextStructField+0x7b4>
   68c24:	ldr	r0, [sp, #40]	; 0x28
   68c28:	mov	r6, #0
   68c2c:	ldr	sl, [sp, #40]	; 0x28
   68c30:	ldr	r1, [r0, r5, lsl #2]
   68c34:	ldr	r0, [sp, #56]	; 0x38
   68c38:	and	r2, r0, #512	; 0x200
   68c3c:	and	r3, r0, #1024	; 0x400
   68c40:	and	r7, r0, #2048	; 0x800
   68c44:	uxtb	r0, r0
   68c48:	cmp	r0, #18
   68c4c:	movcs	r0, r6
   68c50:	str	r0, [r1, #16]
   68c54:	str	r7, [r1, #20]
   68c58:	str	r3, [r1, #24]
   68c5c:	str	r2, [r1, #28]
   68c60:	cmp	r0, #5
   68c64:	ldreq	r0, [sp, #60]	; 0x3c
   68c68:	streq	r0, [r1]
   68c6c:	b	68c78 <ReadNextStructField+0x7bc>
   68c70:	ldr	sl, [sp, #40]	; 0x28
   68c74:	ldr	r1, [sl, r5, lsl #2]
   68c78:	ldr	r7, [sp, #36]	; 0x24
   68c7c:	ldr	r2, [sp, #64]	; 0x40
   68c80:	ldr	r3, [sp, #68]	; 0x44
   68c84:	mov	r0, r7
   68c88:	bl	69e2c <ReadRankDims>
   68c8c:	ldr	r3, [r7]
   68c90:	mov	r4, r0
   68c94:	mov	r0, r8
   68c98:	mov	r1, #1
   68c9c:	mov	r2, #8
   68ca0:	bl	18b8 <fread@plt>
   68ca4:	mov	r6, r0
   68ca8:	ldr	r0, [r7]
   68cac:	bl	1840 <ftell@plt>
   68cb0:	ldr	r1, [sl, r5, lsl #2]
   68cb4:	cmn	r0, #1
   68cb8:	ldr	r2, [r1, #52]	; 0x34
   68cbc:	str	r0, [r2]
   68cc0:	add	r2, r9, r4
   68cc4:	add	r7, r2, r6
   68cc8:	beq	68cf8 <ReadNextStructField+0x83c>
   68ccc:	ldr	r0, [r1, #16]
   68cd0:	cmp	r0, #1
   68cd4:	beq	68d1c <ReadNextStructField+0x860>
   68cd8:	ldr	r9, [sp, #32]
   68cdc:	cmp	r0, #2
   68ce0:	bne	68d34 <ReadNextStructField+0x878>
   68ce4:	ldr	r6, [sp, #36]	; 0x24
   68ce8:	mov	r0, r6
   68cec:	bl	684bc <ReadNextStructField>
   68cf0:	add	r7, r0, r7
   68cf4:	b	68d38 <ReadNextStructField+0x87c>
   68cf8:	ldr	r0, [pc, #1616]	; 69350 <ReadNextStructField+0xe94>
   68cfc:	add	r0, pc, r0
   68d00:	bl	19b4 <Mat_Critical@plt>
   68d04:	ldr	r9, [sp, #40]	; 0x28
   68d08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68d0c:	add	r5, r5, #1
   68d10:	cmp	r5, r0
   68d14:	bcc	68b5c <ReadNextStructField+0x6a0>
   68d18:	b	688e8 <ReadNextStructField+0x42c>
   68d1c:	ldr	r6, [sp, #36]	; 0x24
   68d20:	mov	r0, r6
   68d24:	bl	69358 <ReadNextCell>
   68d28:	ldr	r9, [sp, #32]
   68d2c:	add	r7, r0, r7
   68d30:	b	68d38 <ReadNextStructField+0x87c>
   68d34:	ldr	r6, [sp, #36]	; 0x24
   68d38:	sub	r0, r9, r4
   68d3c:	ldr	r9, [sp, #40]	; 0x28
   68d40:	mov	r2, #0
   68d44:	ldr	r1, [r9, r5, lsl #2]
   68d48:	ldr	r1, [r1, #52]	; 0x34
   68d4c:	ldr	r1, [r1]
   68d50:	add	r0, r0, r1
   68d54:	sub	r1, r0, #32
   68d58:	ldr	r0, [r6]
   68d5c:	bl	1a2c <fseek@plt>
   68d60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68d64:	add	r5, r5, #1
   68d68:	cmp	r5, r0
   68d6c:	bcc	68b5c <ReadNextStructField+0x6a0>
   68d70:	b	688e8 <ReadNextStructField+0x42c>
   68d74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68d78:	cmp	r0, #0
   68d7c:	beq	692cc <ReadNextStructField+0xe10>
   68d80:	ldr	r7, [sp, #32]
   68d84:	ldr	r8, [sp, #40]	; 0x28
   68d88:	add	r0, sl, #12
   68d8c:	mov	r5, #0
   68d90:	str	r0, [sp, #20]
   68d94:	add	r0, sl, #8
   68d98:	str	r0, [sp, #24]
   68d9c:	b	68dd0 <ReadNextStructField+0x914>
   68da0:	ldr	r0, [r8, r5, lsl #2]
   68da4:	bl	1918 <Mat_VarFree@plt>
   68da8:	mov	r0, #0
   68dac:	mov	r1, r5
   68db0:	str	r0, [r8, r5, lsl #2]
   68db4:	ldr	r0, [pc, #1400]	; 69334 <ReadNextStructField+0xe78>
   68db8:	add	r0, pc, r0
   68dbc:	bl	19b4 <Mat_Critical@plt>
   68dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68dc4:	add	r5, r5, #1
   68dc8:	cmp	r5, r0
   68dcc:	bcs	688e8 <ReadNextStructField+0x42c>
   68dd0:	ldr	r6, [sp, #36]	; 0x24
   68dd4:	mov	r1, r9
   68dd8:	mov	r2, sl
   68ddc:	mov	r0, r6
   68de0:	bl	294c <InflateVarTag>
   68de4:	mov	r4, r0
   68de8:	ldr	r0, [r6, #20]
   68dec:	cmp	r0, #0
   68df0:	beq	68e04 <ReadNextStructField+0x948>
   68df4:	mov	r0, sl
   68df8:	bl	1c0c <Mat_uint32Swap>
   68dfc:	ldr	r0, [sp, #28]
   68e00:	bl	1c0c <Mat_uint32Swap>
   68e04:	ldr	r0, [sp, #48]	; 0x30
   68e08:	add	r7, r4, r7
   68e0c:	cmp	r0, #14
   68e10:	bne	68da0 <ReadNextStructField+0x8e4>
   68e14:	ldr	sl, [sp, #52]	; 0x34
   68e18:	ldr	r0, [r8, r5, lsl #2]
   68e1c:	cmp	sl, #0
   68e20:	beq	68edc <ReadNextStructField+0xa20>
   68e24:	ldr	r6, [sp, #36]	; 0x24
   68e28:	mov	r1, #1
   68e2c:	add	r8, sp, #48	; 0x30
   68e30:	str	r1, [r0, #48]	; 0x30
   68e34:	mov	r1, r9
   68e38:	mov	r2, r8
   68e3c:	mov	r0, r6
   68e40:	bl	2ab0 <InflateArrayFlags>
   68e44:	mov	r4, r0
   68e48:	ldr	r0, [r6, #20]
   68e4c:	cmp	r0, #0
   68e50:	beq	68e74 <ReadNextStructField+0x9b8>
   68e54:	mov	r0, r8
   68e58:	bl	1c0c <Mat_uint32Swap>
   68e5c:	ldr	r0, [sp, #28]
   68e60:	bl	1c0c <Mat_uint32Swap>
   68e64:	ldr	r0, [sp, #24]
   68e68:	bl	1c0c <Mat_uint32Swap>
   68e6c:	ldr	r0, [sp, #20]
   68e70:	bl	1c0c <Mat_uint32Swap>
   68e74:	ldr	r1, [sp, #48]	; 0x30
   68e78:	add	r7, r4, r7
   68e7c:	sub	r8, sl, #16
   68e80:	cmp	r1, #6
   68e84:	bne	68f08 <ReadNextStructField+0xa4c>
   68e88:	ldr	r0, [sp, #40]	; 0x28
   68e8c:	mov	r4, r7
   68e90:	mov	r6, #0
   68e94:	ldr	r1, [r0, r5, lsl #2]
   68e98:	ldr	r0, [sp, #56]	; 0x38
   68e9c:	and	r2, r0, #512	; 0x200
   68ea0:	and	r3, r0, #1024	; 0x400
   68ea4:	and	r7, r0, #2048	; 0x800
   68ea8:	uxtb	r0, r0
   68eac:	cmp	r0, #18
   68eb0:	movcs	r0, r6
   68eb4:	cmp	r0, #5
   68eb8:	str	r0, [r1, #16]
   68ebc:	str	r7, [r1, #20]
   68ec0:	str	r3, [r1, #24]
   68ec4:	str	r2, [r1, #28]
   68ec8:	bne	68f44 <ReadNextStructField+0xa88>
   68ecc:	ldr	r0, [sp, #60]	; 0x3c
   68ed0:	mov	r7, r4
   68ed4:	str	r0, [r1]
   68ed8:	b	68f50 <ReadNextStructField+0xa94>
   68edc:	ldr	r0, [r0, #52]	; 0x34
   68ee0:	bl	1804 <free@plt>
   68ee4:	ldr	r0, [r8, r5, lsl #2]
   68ee8:	mov	r1, #0
   68eec:	add	sl, sp, #48	; 0x30
   68ef0:	str	r1, [r0, #52]	; 0x34
   68ef4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68ef8:	add	r5, r5, #1
   68efc:	cmp	r5, r0
   68f00:	bcc	68dd0 <ReadNextStructField+0x914>
   68f04:	b	688e8 <ReadNextStructField+0x42c>
   68f08:	ldr	r0, [pc, #1064]	; 69338 <ReadNextStructField+0xe7c>
   68f0c:	add	r0, pc, r0
   68f10:	bl	19b4 <Mat_Critical@plt>
   68f14:	ldr	r0, [r9, #52]	; 0x34
   68f18:	mov	r2, r8
   68f1c:	ldr	r1, [r0, #12]
   68f20:	ldr	r0, [sp, #36]	; 0x24
   68f24:	bl	256c <InflateSkip>
   68f28:	add	r7, r0, r7
   68f2c:	ldr	r0, [sp, #40]	; 0x28
   68f30:	ldr	r0, [r0, r5, lsl #2]
   68f34:	ldr	r0, [r0, #16]
   68f38:	cmp	r0, #17
   68f3c:	bne	68f50 <ReadNextStructField+0xa94>
   68f40:	b	69290 <ReadNextStructField+0xdd4>
   68f44:	mov	r7, r4
   68f48:	cmp	r0, #17
   68f4c:	beq	69290 <ReadNextStructField+0xdd4>
   68f50:	ldr	r4, [sp, #36]	; 0x24
   68f54:	mov	r0, #0
   68f58:	mov	r1, r9
   68f5c:	add	r2, sp, #48	; 0x30
   68f60:	mov	r3, #64	; 0x40
   68f64:	str	r0, [sp, #44]	; 0x2c
   68f68:	add	r0, sp, #44	; 0x2c
   68f6c:	str	r0, [sp]
   68f70:	mov	r0, r4
   68f74:	bl	2c14 <InflateRankDims>
   68f78:	mov	r6, r0
   68f7c:	ldr	r0, [sp, #44]	; 0x2c
   68f80:	mov	r1, #1
   68f84:	cmp	r0, #0
   68f88:	bne	68f98 <ReadNextStructField+0xadc>
   68f8c:	ldr	r0, [sp, #24]
   68f90:	mov	r1, #0
   68f94:	str	r0, [sp, #44]	; 0x2c
   68f98:	ldr	r0, [r4, #20]
   68f9c:	str	r1, [sp, #32]
   68fa0:	cmp	r0, #0
   68fa4:	beq	68fb8 <ReadNextStructField+0xafc>
   68fa8:	add	r0, sp, #48	; 0x30
   68fac:	bl	1c0c <Mat_uint32Swap>
   68fb0:	ldr	r0, [sp, #28]
   68fb4:	bl	1c0c <Mat_uint32Swap>
   68fb8:	ldr	r0, [sp, #48]	; 0x30
   68fbc:	sub	r8, sl, #24
   68fc0:	cmp	r0, #5
   68fc4:	bne	69060 <ReadNextStructField+0xba4>
   68fc8:	str	r6, [sp, #12]
   68fcc:	str	r7, [sp, #16]
   68fd0:	ldr	r7, [sp, #40]	; 0x28
   68fd4:	ldr	r6, [sp, #52]	; 0x34
   68fd8:	asr	r0, r6, #31
   68fdc:	ldr	r4, [r7, r5, lsl #2]
   68fe0:	add	r0, r6, r0, lsr #30
   68fe4:	asr	r1, r0, #2
   68fe8:	bic	r0, r0, #3
   68fec:	str	r1, [r4, #4]
   68ff0:	bl	18d0 <malloc@plt>
   68ff4:	str	r0, [r4, #32]
   68ff8:	ldr	r2, [sp, #36]	; 0x24
   68ffc:	sub	r8, r8, r6
   69000:	add	sl, sp, #48	; 0x30
   69004:	ldr	r1, [r7, r5, lsl #2]
   69008:	ldr	r2, [r2, #20]
   6900c:	ldr	r0, [r1, #4]
   69010:	cmp	r2, #0
   69014:	beq	69160 <ReadNextStructField+0xca4>
   69018:	ldr	r7, [sp, #16]
   6901c:	cmp	r0, #1
   69020:	blt	69190 <ReadNextStructField+0xcd4>
   69024:	mov	r6, #0
   69028:	mov	r4, #0
   6902c:	ldr	r0, [sp, #44]	; 0x2c
   69030:	add	r0, r0, r6
   69034:	bl	1c0c <Mat_uint32Swap>
   69038:	ldr	r1, [sp, #40]	; 0x28
   6903c:	add	r6, r6, #4
   69040:	ldr	r1, [r1, r5, lsl #2]
   69044:	ldr	r2, [r1, #32]
   69048:	str	r0, [r2, r4, lsl #2]
   6904c:	add	r4, r4, #1
   69050:	ldr	r0, [r1, #4]
   69054:	cmp	r4, r0
   69058:	blt	6902c <ReadNextStructField+0xb70>
   6905c:	b	69190 <ReadNextStructField+0xcd4>
   69060:	add	sl, sp, #48	; 0x30
   69064:	ldr	r0, [sp, #32]
   69068:	add	r6, r6, r7
   6906c:	cmp	r0, #0
   69070:	beq	6907c <ReadNextStructField+0xbc0>
   69074:	ldr	r0, [sp, #44]	; 0x2c
   69078:	bl	1804 <free@plt>
   6907c:	ldr	r0, [sp, #36]	; 0x24
   69080:	mov	r1, r9
   69084:	mov	r2, sl
   69088:	bl	2f20 <InflateVarNameTag>
   6908c:	mov	r4, r0
   69090:	mov	r0, #1
   69094:	mov	r1, #56	; 0x38
   69098:	bl	1798 <calloc@plt>
   6909c:	ldr	r2, [sp, #40]	; 0x28
   690a0:	add	r7, r6, r4
   690a4:	sub	r8, r8, #8
   690a8:	ldr	r1, [r2, r5, lsl #2]
   690ac:	ldr	r1, [r1, #52]	; 0x34
   690b0:	str	r0, [r1, #12]
   690b4:	ldr	r0, [r2, r5, lsl #2]
   690b8:	ldr	r0, [r0, #52]	; 0x34
   690bc:	ldr	r0, [r0, #12]
   690c0:	cmp	r0, #0
   690c4:	beq	690f4 <ReadNextStructField+0xc38>
   690c8:	ldr	r1, [r9, #52]	; 0x34
   690cc:	ldr	r1, [r1, #12]
   690d0:	bl	1948 <inflateCopy@plt>
   690d4:	cmp	r0, #0
   690d8:	beq	69104 <ReadNextStructField+0xc48>
   690dc:	bl	1888 <zError@plt>
   690e0:	mov	r1, r0
   690e4:	ldr	r0, [pc, #596]	; 69340 <ReadNextStructField+0xe84>
   690e8:	add	r0, pc, r0
   690ec:	bl	19b4 <Mat_Critical@plt>
   690f0:	b	69290 <ReadNextStructField+0xdd4>
   690f4:	ldr	r0, [pc, #584]	; 69344 <ReadNextStructField+0xe88>
   690f8:	add	r0, pc, r0
   690fc:	bl	19b4 <Mat_Critical@plt>
   69100:	b	69290 <ReadNextStructField+0xdd4>
   69104:	ldr	r0, [sp, #36]	; 0x24
   69108:	ldr	r0, [r0]
   6910c:	bl	1840 <ftell@plt>
   69110:	ldr	r1, [sp, #40]	; 0x28
   69114:	cmn	r0, #1
   69118:	ldr	r1, [r1, r5, lsl #2]
   6911c:	ldr	r2, [r1, #52]	; 0x34
   69120:	str	r0, [r2]
   69124:	beq	691b0 <ReadNextStructField+0xcf4>
   69128:	ldr	r3, [r9, #52]	; 0x34
   6912c:	ldr	r3, [r3, #12]
   69130:	ldr	r3, [r3, #4]
   69134:	sub	r0, r0, r3
   69138:	str	r0, [r2]
   6913c:	ldr	r0, [r1, #16]
   69140:	cmp	r0, #1
   69144:	beq	691c8 <ReadNextStructField+0xd0c>
   69148:	cmp	r0, #2
   6914c:	bne	691e0 <ReadNextStructField+0xd24>
   69150:	ldr	r6, [sp, #36]	; 0x24
   69154:	mov	r0, r6
   69158:	bl	684bc <ReadNextStructField>
   6915c:	b	691d4 <ReadNextStructField+0xd18>
   69160:	ldr	r7, [sp, #16]
   69164:	cmp	r0, #1
   69168:	blt	69190 <ReadNextStructField+0xcd4>
   6916c:	ldr	r2, [r1, #32]
   69170:	ldr	r6, [sp, #44]	; 0x2c
   69174:	mov	r3, #0
   69178:	ldr	r0, [r6, r3, lsl #2]
   6917c:	str	r0, [r2, r3, lsl #2]
   69180:	add	r3, r3, #1
   69184:	ldr	r0, [r1, #4]
   69188:	cmp	r3, r0
   6918c:	blt	69178 <ReadNextStructField+0xcbc>
   69190:	ldr	r6, [sp, #12]
   69194:	tst	r0, #1
   69198:	subne	r8, r8, #4
   6919c:	ldr	r0, [sp, #32]
   691a0:	add	r6, r6, r7
   691a4:	cmp	r0, #0
   691a8:	bne	69074 <ReadNextStructField+0xbb8>
   691ac:	b	6907c <ReadNextStructField+0xbc0>
   691b0:	ldr	r0, [pc, #388]	; 6933c <ReadNextStructField+0xe80>
   691b4:	mov	r4, r7
   691b8:	add	r0, pc, r0
   691bc:	bl	19b4 <Mat_Critical@plt>
   691c0:	ldr	r7, [sp, #40]	; 0x28
   691c4:	b	6923c <ReadNextStructField+0xd80>
   691c8:	ldr	r6, [sp, #36]	; 0x24
   691cc:	mov	r0, r6
   691d0:	bl	69358 <ReadNextCell>
   691d4:	add	r7, r0, r7
   691d8:	mov	r4, r7
   691dc:	b	69220 <ReadNextStructField+0xd64>
   691e0:	mov	r4, r7
   691e4:	cmp	r8, #32768	; 0x8000
   691e8:	bgt	6921c <ReadNextStructField+0xd60>
   691ec:	ldr	r6, [sp, #36]	; 0x24
   691f0:	mov	r0, r6
   691f4:	bl	31af0 <Mat_VarRead5>
   691f8:	ldr	r2, [sp, #40]	; 0x28
   691fc:	ldr	r0, [r2, r5, lsl #2]
   69200:	ldr	r1, [r0, #40]	; 0x28
   69204:	ldr	r0, [r0, #52]	; 0x34
   69208:	str	r1, [r0, #16]
   6920c:	mov	r1, #0
   69210:	ldr	r0, [r2, r5, lsl #2]
   69214:	str	r1, [r0, #40]	; 0x28
   69218:	b	69220 <ReadNextStructField+0xd64>
   6921c:	ldr	r6, [sp, #36]	; 0x24
   69220:	ldr	r7, [sp, #40]	; 0x28
   69224:	mov	r2, #0
   69228:	ldr	r0, [r7, r5, lsl #2]
   6922c:	ldr	r0, [r0, #52]	; 0x34
   69230:	ldr	r1, [r0]
   69234:	ldr	r0, [r6]
   69238:	bl	1a2c <fseek@plt>
   6923c:	ldr	r1, [r7, r5, lsl #2]
   69240:	ldr	r0, [r1, #52]	; 0x34
   69244:	ldr	r2, [r0, #16]
   69248:	cmp	r2, #0
   6924c:	bne	69260 <ReadNextStructField+0xda4>
   69250:	ldr	r1, [r1, #16]
   69254:	sub	r1, r1, #1
   69258:	cmp	r1, #1
   6925c:	bhi	692c4 <ReadNextStructField+0xe08>
   69260:	ldr	r0, [r0, #12]
   69264:	bl	193c <inflateEnd@plt>
   69268:	ldr	r6, [sp, #40]	; 0x28
   6926c:	ldr	r0, [r6, r5, lsl #2]
   69270:	ldr	r0, [r0, #52]	; 0x34
   69274:	ldr	r0, [r0, #12]
   69278:	bl	1804 <free@plt>
   6927c:	ldr	r0, [r6, r5, lsl #2]
   69280:	mov	r1, #0
   69284:	mov	r7, r4
   69288:	ldr	r0, [r0, #52]	; 0x34
   6928c:	str	r1, [r0, #12]
   69290:	ldr	r0, [r9, #52]	; 0x34
   69294:	mov	r2, r8
   69298:	ldr	r1, [r0, #12]
   6929c:	ldr	r0, [sp, #36]	; 0x24
   692a0:	bl	256c <InflateSkip>
   692a4:	ldr	r8, [sp, #40]	; 0x28
   692a8:	add	r7, r0, r7
   692ac:	add	sl, sp, #48	; 0x30
   692b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   692b4:	add	r5, r5, #1
   692b8:	cmp	r5, r0
   692bc:	bcc	68dd0 <ReadNextStructField+0x914>
   692c0:	b	688e8 <ReadNextStructField+0x42c>
   692c4:	mov	r7, r4
   692c8:	b	69290 <ReadNextStructField+0xdd4>
   692cc:	ldr	r7, [sp, #32]
   692d0:	mov	r0, r7
   692d4:	sub	sp, fp, #28
   692d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   692dc:	ldr	r5, [pc, #76]	; 69330 <ReadNextStructField+0xe74>
   692e0:	add	r5, pc, r5
   692e4:	b	688dc <ReadNextStructField+0x420>
   692e8:	ldr	r0, [r9, r5, lsl #2]
   692ec:	bl	1918 <Mat_VarFree@plt>
   692f0:	mov	r0, #0
   692f4:	str	r0, [r9, r5, lsl #2]
   692f8:	ldr	r0, [sp, #36]	; 0x24
   692fc:	ldr	r0, [r0]
   69300:	bl	1840 <ftell@plt>
   69304:	mov	r2, r0
   69308:	ldr	r0, [pc, #60]	; 6934c <ReadNextStructField+0xe90>
   6930c:	mov	r1, r5
   69310:	add	r0, pc, r0
   69314:	bl	19b4 <Mat_Critical@plt>
   69318:	mov	r0, r7
   6931c:	sub	sp, fp, #28
   69320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   69324:	.word	0x00009800
   69328:	.word	0x00009895
   6932c:	.word	0x00009434
   69330:	.word	0x00008a30
   69334:	.word	0x000091b2
   69338:	.word	0x0000908e
   6933c:	.word	0x00008aac
   69340:	.word	0x00008db3
   69344:	.word	0x00008ecf
   69348:	.word	0x00009474
   6934c:	.word	0x00008cd0
   69350:	.word	0x00008f68
   69354:	.word	0x00009889

00069358 <ReadNextCell>:
   69358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6935c:	add	fp, sp, #28
   69360:	sub	sp, sp, #116	; 0x74
   69364:	mov	r6, r1
   69368:	mov	r4, r0
   6936c:	mov	r0, #1
   69370:	sub	r1, fp, #32
   69374:	str	r0, [fp, #-32]	; 0xffffffe0
   69378:	mov	r0, r6
   6937c:	bl	6be10 <SafeMulDims>
   69380:	cmp	r0, #0
   69384:	bne	693a8 <ReadNextCell+0x50>
   69388:	mov	r0, #4
   6938c:	mov	r2, #4
   69390:	str	r0, [r6, #12]
   69394:	mov	r0, r6
   69398:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6939c:	bl	6be6c <SafeMul>
   693a0:	cmp	r0, #0
   693a4:	beq	693c4 <ReadNextCell+0x6c>
   693a8:	ldr	r0, [pc, #2640]	; 69e00 <ReadNextCell+0xaa8>
   693ac:	add	r0, pc, r0
   693b0:	bl	19b4 <Mat_Critical@plt>
   693b4:	mov	r9, #0
   693b8:	mov	r0, r9
   693bc:	sub	sp, fp, #28
   693c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   693c4:	ldr	r7, [fp, #-32]	; 0xffffffe0
   693c8:	ldr	r1, [r6, #12]
   693cc:	mov	r0, r7
   693d0:	bl	1798 <calloc@plt>
   693d4:	cmp	r0, #0
   693d8:	str	r0, [r6, #40]	; 0x28
   693dc:	str	r0, [sp, #36]	; 0x24
   693e0:	beq	69a58 <ReadNextCell+0x700>
   693e4:	ldr	r0, [r6, #48]	; 0x30
   693e8:	str	r4, [sp, #40]	; 0x28
   693ec:	cmp	r0, #1
   693f0:	bne	69a80 <ReadNextCell+0x728>
   693f4:	vmov.i32	q8, #0	; 0x00000000
   693f8:	add	r2, sp, #48	; 0x30
   693fc:	mov	r0, #48	; 0x30
   69400:	cmp	r7, #0
   69404:	mov	r1, r2
   69408:	vst1.64	{d16-d17}, [r1], r0
   6940c:	add	r0, r2, #32
   69410:	vst1.64	{d16-d17}, [r0]
   69414:	add	r0, r2, #16
   69418:	vst1.64	{d16-d17}, [r1]
   6941c:	vst1.64	{d16-d17}, [r0]
   69420:	beq	69d90 <ReadNextCell+0xa38>
   69424:	ldr	r5, [sp, #36]	; 0x24
   69428:	add	r0, r2, #12
   6942c:	mov	r9, #0
   69430:	mov	r8, #0
   69434:	str	r6, [sp, #20]
   69438:	str	r0, [sp, #12]
   6943c:	add	r0, r2, #8
   69440:	str	r0, [sp, #16]
   69444:	orr	r0, r2, #4
   69448:	str	r0, [sp, #32]
   6944c:	b	69488 <ReadNextCell+0x130>
   69450:	ldr	r0, [pc, #2500]	; 69e1c <ReadNextCell+0xac4>
   69454:	add	r0, pc, r0
   69458:	bl	19b4 <Mat_Critical@plt>
   6945c:	ldr	r0, [r6, #52]	; 0x34
   69460:	mov	r2, r9
   69464:	ldr	r1, [r0, #12]
   69468:	mov	r0, r4
   6946c:	bl	256c <InflateSkip>
   69470:	add	r9, r0, r5
   69474:	ldr	r5, [sp, #36]	; 0x24
   69478:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6947c:	add	r8, r8, #1
   69480:	cmp	r8, r0
   69484:	bcs	693b8 <ReadNextCell+0x60>
   69488:	bl	18a0 <Mat_VarCalloc@plt>
   6948c:	mov	sl, r5
   69490:	cmp	r0, #0
   69494:	str	r0, [sl, r8, lsl #2]!
   69498:	beq	695c0 <ReadNextCell+0x268>
   6949c:	mov	r0, #0
   694a0:	mov	r7, r4
   694a4:	mov	r1, r6
   694a8:	str	r0, [sp, #52]	; 0x34
   694ac:	str	r0, [sp, #48]	; 0x30
   694b0:	mov	r0, r4
   694b4:	add	r4, sp, #48	; 0x30
   694b8:	mov	r2, r4
   694bc:	bl	294c <InflateVarTag>
   694c0:	mov	r5, r0
   694c4:	ldr	r0, [r7, #20]
   694c8:	cmp	r0, #0
   694cc:	beq	694e0 <ReadNextCell+0x188>
   694d0:	mov	r0, r4
   694d4:	bl	1c0c <Mat_uint32Swap>
   694d8:	ldr	r0, [sp, #32]
   694dc:	bl	1c0c <Mat_uint32Swap>
   694e0:	ldr	r7, [sp, #52]	; 0x34
   694e4:	add	r9, r5, r9
   694e8:	cmp	r7, #0
   694ec:	beq	695e4 <ReadNextCell+0x28c>
   694f0:	ldr	r1, [sp, #48]	; 0x30
   694f4:	ldr	r0, [sl]
   694f8:	ldr	r2, [sp, #40]	; 0x28
   694fc:	cmp	r1, #14
   69500:	bne	69da0 <ReadNextCell+0xa48>
   69504:	mov	r1, #1
   69508:	add	r4, sp, #48	; 0x30
   6950c:	str	r1, [r0, #48]	; 0x30
   69510:	mov	r1, r6
   69514:	mov	r0, r2
   69518:	mov	r6, r2
   6951c:	mov	r2, r4
   69520:	bl	2ab0 <InflateArrayFlags>
   69524:	mov	r5, r0
   69528:	ldr	r0, [r6, #20]
   6952c:	cmp	r0, #0
   69530:	beq	69554 <ReadNextCell+0x1fc>
   69534:	mov	r0, r4
   69538:	bl	1c0c <Mat_uint32Swap>
   6953c:	ldr	r0, [sp, #32]
   69540:	bl	1c0c <Mat_uint32Swap>
   69544:	ldr	r0, [sp, #16]
   69548:	bl	1c0c <Mat_uint32Swap>
   6954c:	ldr	r0, [sp, #12]
   69550:	bl	1c0c <Mat_uint32Swap>
   69554:	ldr	r1, [sp, #48]	; 0x30
   69558:	add	r5, r5, r9
   6955c:	sub	r9, r7, #16
   69560:	cmp	r1, #6
   69564:	bne	69618 <ReadNextCell+0x2c0>
   69568:	ldr	r0, [sp, #56]	; 0x38
   6956c:	mov	ip, r5
   69570:	mov	r6, #0
   69574:	ldr	r1, [sl]
   69578:	ldr	r4, [sp, #40]	; 0x28
   6957c:	and	r2, r0, #512	; 0x200
   69580:	and	r3, r0, #1024	; 0x400
   69584:	and	r5, r0, #2048	; 0x800
   69588:	uxtb	r0, r0
   6958c:	cmp	r0, #18
   69590:	movcs	r0, r6
   69594:	ldr	r6, [sp, #20]
   69598:	cmp	r0, #5
   6959c:	str	r0, [r1, #16]
   695a0:	str	r5, [r1, #20]
   695a4:	str	r3, [r1, #24]
   695a8:	str	r2, [r1, #28]
   695ac:	bne	69658 <ReadNextCell+0x300>
   695b0:	ldr	r0, [sp, #60]	; 0x3c
   695b4:	mov	r5, ip
   695b8:	str	r0, [r1]
   695bc:	b	69664 <ReadNextCell+0x30c>
   695c0:	ldr	r0, [pc, #2112]	; 69e08 <ReadNextCell+0xab0>
   695c4:	mov	r1, r8
   695c8:	add	r0, pc, r0
   695cc:	bl	19b4 <Mat_Critical@plt>
   695d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   695d4:	add	r8, r8, #1
   695d8:	cmp	r8, r0
   695dc:	bcc	69488 <ReadNextCell+0x130>
   695e0:	b	693b8 <ReadNextCell+0x60>
   695e4:	ldr	r0, [sl]
   695e8:	ldr	r0, [r0, #52]	; 0x34
   695ec:	bl	1804 <free@plt>
   695f0:	ldr	r0, [sl]
   695f4:	ldr	r5, [sp, #36]	; 0x24
   695f8:	ldr	r4, [sp, #40]	; 0x28
   695fc:	mov	r1, #0
   69600:	str	r1, [r0, #52]	; 0x34
   69604:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69608:	add	r8, r8, #1
   6960c:	cmp	r8, r0
   69610:	bcc	69488 <ReadNextCell+0x130>
   69614:	b	693b8 <ReadNextCell+0x60>
   69618:	ldr	r0, [pc, #2032]	; 69e10 <ReadNextCell+0xab8>
   6961c:	add	r0, pc, r0
   69620:	bl	19b4 <Mat_Critical@plt>
   69624:	ldr	r6, [sp, #20]
   69628:	ldr	r4, [sp, #40]	; 0x28
   6962c:	mov	r2, r9
   69630:	ldr	r0, [r6, #52]	; 0x34
   69634:	ldr	r1, [r0, #12]
   69638:	mov	r0, r4
   6963c:	bl	256c <InflateSkip>
   69640:	add	r5, r0, r5
   69644:	ldr	r0, [sl]
   69648:	ldr	r0, [r0, #16]
   6964c:	cmp	r0, #17
   69650:	beq	6945c <ReadNextCell+0x104>
   69654:	b	69664 <ReadNextCell+0x30c>
   69658:	mov	r5, ip
   6965c:	cmp	r0, #17
   69660:	beq	6945c <ReadNextCell+0x104>
   69664:	mov	r0, #0
   69668:	str	r5, [sp, #24]
   6966c:	mov	r5, r4
   69670:	mov	r1, r6
   69674:	mov	r3, #64	; 0x40
   69678:	str	r0, [sp, #44]	; 0x2c
   6967c:	add	r0, sp, #44	; 0x2c
   69680:	str	r0, [sp]
   69684:	mov	r0, r4
   69688:	add	r4, sp, #48	; 0x30
   6968c:	mov	r2, r4
   69690:	bl	2c14 <InflateRankDims>
   69694:	mov	r9, r0
   69698:	ldr	r0, [sp, #44]	; 0x2c
   6969c:	mov	r1, #1
   696a0:	cmp	r0, #0
   696a4:	bne	696b4 <ReadNextCell+0x35c>
   696a8:	ldr	r0, [sp, #16]
   696ac:	mov	r1, #0
   696b0:	str	r0, [sp, #44]	; 0x2c
   696b4:	ldr	r0, [r5, #20]
   696b8:	cmp	r0, #0
   696bc:	beq	696d8 <ReadNextCell+0x380>
   696c0:	mov	r0, r4
   696c4:	mov	r5, r1
   696c8:	bl	1c0c <Mat_uint32Swap>
   696cc:	ldr	r0, [sp, #32]
   696d0:	bl	1c0c <Mat_uint32Swap>
   696d4:	mov	r1, r5
   696d8:	ldr	r0, [sp, #48]	; 0x30
   696dc:	sub	r7, r7, #24
   696e0:	cmp	r0, #5
   696e4:	bne	69770 <ReadNextCell+0x418>
   696e8:	ldr	r4, [sp, #52]	; 0x34
   696ec:	ldr	r5, [sl]
   696f0:	stmib	sp, {r1, r9}
   696f4:	asr	r0, r4, #31
   696f8:	add	r0, r4, r0, lsr #30
   696fc:	asr	r1, r0, #2
   69700:	bic	r0, r0, #3
   69704:	str	r1, [r5, #4]
   69708:	bl	18d0 <malloc@plt>
   6970c:	str	r0, [r5, #32]
   69710:	ldr	r3, [sp, #40]	; 0x28
   69714:	sub	r7, r7, r4
   69718:	ldr	r1, [sl]
   6971c:	mov	r4, r7
   69720:	ldr	r2, [r3, #20]
   69724:	ldr	r0, [r1, #4]
   69728:	cmp	r2, #0
   6972c:	beq	69784 <ReadNextCell+0x42c>
   69730:	cmp	r0, #1
   69734:	blt	697b0 <ReadNextCell+0x458>
   69738:	mov	r5, #0
   6973c:	mov	r9, #0
   69740:	ldr	r0, [sp, #44]	; 0x2c
   69744:	add	r0, r0, r5
   69748:	bl	1c0c <Mat_uint32Swap>
   6974c:	ldr	r1, [sl]
   69750:	add	r5, r5, #4
   69754:	ldr	r2, [r1, #32]
   69758:	str	r0, [r2, r9, lsl #2]
   6975c:	add	r9, r9, #1
   69760:	ldr	r0, [r1, #4]
   69764:	cmp	r9, r0
   69768:	blt	69740 <ReadNextCell+0x3e8>
   6976c:	b	697b0 <ReadNextCell+0x458>
   69770:	ldr	r5, [sp, #24]
   69774:	str	r7, [sp, #28]
   69778:	cmp	r1, #0
   6977c:	bne	697d0 <ReadNextCell+0x478>
   69780:	b	697d8 <ReadNextCell+0x480>
   69784:	cmp	r0, #1
   69788:	blt	697b0 <ReadNextCell+0x458>
   6978c:	ldr	r2, [r1, #32]
   69790:	ldr	r7, [sp, #44]	; 0x2c
   69794:	mov	r3, #0
   69798:	ldr	r0, [r7, r3, lsl #2]
   6979c:	str	r0, [r2, r3, lsl #2]
   697a0:	add	r3, r3, #1
   697a4:	ldr	r0, [r1, #4]
   697a8:	cmp	r3, r0
   697ac:	blt	69798 <ReadNextCell+0x440>
   697b0:	ldr	r5, [sp, #24]
   697b4:	tst	r0, #1
   697b8:	ldmib	sp, {r1, r9}
   697bc:	subne	r4, r4, #4
   697c0:	str	r4, [sp, #28]
   697c4:	add	r4, sp, #48	; 0x30
   697c8:	cmp	r1, #0
   697cc:	beq	697d8 <ReadNextCell+0x480>
   697d0:	ldr	r0, [sp, #44]	; 0x2c
   697d4:	bl	1804 <free@plt>
   697d8:	ldr	r7, [sp, #40]	; 0x28
   697dc:	mov	r1, r6
   697e0:	mov	r2, r4
   697e4:	add	r9, r9, r5
   697e8:	mov	r0, r7
   697ec:	bl	2f20 <InflateVarNameTag>
   697f0:	mov	r5, r0
   697f4:	ldr	r0, [r7, #20]
   697f8:	cmp	r0, #0
   697fc:	beq	69810 <ReadNextCell+0x4b8>
   69800:	mov	r0, r4
   69804:	bl	1c0c <Mat_uint32Swap>
   69808:	ldr	r0, [sp, #32]
   6980c:	bl	1c0c <Mat_uint32Swap>
   69810:	ldr	r7, [sp, #52]	; 0x34
   69814:	ldr	r0, [sp, #28]
   69818:	add	r5, r9, r5
   6981c:	sub	r9, r0, #8
   69820:	cmp	r7, #0
   69824:	beq	69890 <ReadNextCell+0x538>
   69828:	ldr	r0, [sp, #48]	; 0x30
   6982c:	cmp	r0, #1
   69830:	bne	69898 <ReadNextCell+0x540>
   69834:	ands	r0, r7, #7
   69838:	sub	r0, r7, r0
   6983c:	addne	r7, r0, #8
   69840:	add	r0, r7, #1
   69844:	bl	18d0 <malloc@plt>
   69848:	ldr	r1, [sl]
   6984c:	ldr	r4, [sp, #40]	; 0x28
   69850:	sub	r9, r9, r7
   69854:	str	r0, [r1, #36]	; 0x24
   69858:	ldr	r0, [sl]
   6985c:	ldr	r2, [r0, #36]	; 0x24
   69860:	cmp	r2, #0
   69864:	beq	698f8 <ReadNextCell+0x5a0>
   69868:	mov	r0, r4
   6986c:	mov	r1, r6
   69870:	mov	r3, r7
   69874:	bl	3084 <InflateVarName>
   69878:	ldr	r1, [sl]
   6987c:	mov	r2, #0
   69880:	add	r5, r0, r5
   69884:	ldr	r1, [r1, #36]	; 0x24
   69888:	strb	r2, [r1, r7]
   6988c:	b	698f8 <ReadNextCell+0x5a0>
   69890:	ldr	r4, [sp, #40]	; 0x28
   69894:	b	698f8 <ReadNextCell+0x5a0>
   69898:	ldr	r4, [sp, #40]	; 0x28
   6989c:	lsr	r7, r0, #16
   698a0:	cmp	r7, #4
   698a4:	bhi	698f8 <ReadNextCell+0x5a0>
   698a8:	uxth	r0, r0
   698ac:	cmp	r0, #1
   698b0:	bne	698f8 <ReadNextCell+0x5a0>
   698b4:	cmp	r7, #0
   698b8:	beq	698f8 <ReadNextCell+0x5a0>
   698bc:	add	r0, r7, #1
   698c0:	bl	18d0 <malloc@plt>
   698c4:	ldr	r1, [sl]
   698c8:	str	r0, [r1, #36]	; 0x24
   698cc:	ldr	r0, [sl]
   698d0:	ldr	r0, [r0, #36]	; 0x24
   698d4:	cmp	r0, #0
   698d8:	beq	698f8 <ReadNextCell+0x5a0>
   698dc:	ldr	r1, [sp, #32]
   698e0:	mov	r2, r7
   698e4:	bl	181c <memcpy@plt>
   698e8:	ldr	r0, [sl]
   698ec:	mov	r1, #0
   698f0:	ldr	r0, [r0, #36]	; 0x24
   698f4:	strb	r1, [r0, r7]
   698f8:	mov	r0, #1
   698fc:	mov	r1, #56	; 0x38
   69900:	bl	1798 <calloc@plt>
   69904:	ldr	r1, [sl]
   69908:	ldr	r1, [r1, #52]	; 0x34
   6990c:	str	r0, [r1, #12]
   69910:	ldr	r0, [sl]
   69914:	ldr	r0, [r0, #52]	; 0x34
   69918:	ldr	r0, [r0, #12]
   6991c:	cmp	r0, #0
   69920:	beq	69450 <ReadNextCell+0xf8>
   69924:	ldr	r1, [r6, #52]	; 0x34
   69928:	ldr	r1, [r1, #12]
   6992c:	bl	1948 <inflateCopy@plt>
   69930:	cmp	r0, #0
   69934:	beq	69950 <ReadNextCell+0x5f8>
   69938:	bl	1888 <zError@plt>
   6993c:	mov	r1, r0
   69940:	ldr	r0, [pc, #1232]	; 69e18 <ReadNextCell+0xac0>
   69944:	add	r0, pc, r0
   69948:	bl	19b4 <Mat_Critical@plt>
   6994c:	b	6945c <ReadNextCell+0x104>
   69950:	ldr	r0, [r4]
   69954:	bl	1840 <ftell@plt>
   69958:	ldr	r1, [sl]
   6995c:	cmn	r0, #1
   69960:	ldr	r2, [r1, #52]	; 0x34
   69964:	str	r0, [r2]
   69968:	beq	699a4 <ReadNextCell+0x64c>
   6996c:	ldr	r3, [r6, #52]	; 0x34
   69970:	ldr	r3, [r3, #12]
   69974:	ldr	r3, [r3, #4]
   69978:	sub	r0, r0, r3
   6997c:	str	r0, [r2]
   69980:	ldr	r0, [r1, #16]
   69984:	cmp	r0, #1
   69988:	beq	699b4 <ReadNextCell+0x65c>
   6998c:	cmp	r0, #2
   69990:	bne	699c4 <ReadNextCell+0x66c>
   69994:	mov	r0, r4
   69998:	bl	684bc <ReadNextStructField>
   6999c:	add	r5, r0, r5
   699a0:	b	699f0 <ReadNextCell+0x698>
   699a4:	ldr	r0, [pc, #1128]	; 69e14 <ReadNextCell+0xabc>
   699a8:	add	r0, pc, r0
   699ac:	bl	19b4 <Mat_Critical@plt>
   699b0:	b	69a08 <ReadNextCell+0x6b0>
   699b4:	mov	r0, r4
   699b8:	bl	69358 <ReadNextCell>
   699bc:	add	r5, r0, r5
   699c0:	b	699f0 <ReadNextCell+0x698>
   699c4:	cmp	r9, #32768	; 0x8000
   699c8:	bgt	699f0 <ReadNextCell+0x698>
   699cc:	mov	r0, r4
   699d0:	bl	31af0 <Mat_VarRead5>
   699d4:	ldr	r0, [sl]
   699d8:	ldr	r1, [r0, #40]	; 0x28
   699dc:	ldr	r0, [r0, #52]	; 0x34
   699e0:	str	r1, [r0, #16]
   699e4:	mov	r1, #0
   699e8:	ldr	r0, [sl]
   699ec:	str	r1, [r0, #40]	; 0x28
   699f0:	ldr	r1, [sl]
   699f4:	ldr	r0, [r4]
   699f8:	mov	r2, #0
   699fc:	ldr	r1, [r1, #52]	; 0x34
   69a00:	ldr	r1, [r1]
   69a04:	bl	1a2c <fseek@plt>
   69a08:	ldr	r1, [sl]
   69a0c:	ldr	r0, [r1, #52]	; 0x34
   69a10:	ldr	r2, [r0, #16]
   69a14:	cmp	r2, #0
   69a18:	bne	69a2c <ReadNextCell+0x6d4>
   69a1c:	ldr	r1, [r1, #16]
   69a20:	sub	r1, r1, #1
   69a24:	cmp	r1, #1
   69a28:	bhi	6945c <ReadNextCell+0x104>
   69a2c:	ldr	r0, [r0, #12]
   69a30:	bl	193c <inflateEnd@plt>
   69a34:	ldr	r0, [sl]
   69a38:	ldr	r0, [r0, #52]	; 0x34
   69a3c:	ldr	r0, [r0, #12]
   69a40:	bl	1804 <free@plt>
   69a44:	ldr	r0, [sl]
   69a48:	mov	r1, #0
   69a4c:	ldr	r0, [r0, #52]	; 0x34
   69a50:	str	r1, [r0, #12]
   69a54:	b	6945c <ReadNextCell+0x104>
   69a58:	ldr	r1, [r6, #36]	; 0x24
   69a5c:	mov	r9, #0
   69a60:	cmp	r1, #0
   69a64:	beq	693b8 <ReadNextCell+0x60>
   69a68:	ldr	r0, [pc, #916]	; 69e04 <ReadNextCell+0xaac>
   69a6c:	add	r0, pc, r0
   69a70:	bl	19b4 <Mat_Critical@plt>
   69a74:	mov	r0, r9
   69a78:	sub	sp, fp, #28
   69a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   69a80:	cmp	r7, #0
   69a84:	beq	69d90 <ReadNextCell+0xa38>
   69a88:	add	sl, sp, #48	; 0x30
   69a8c:	ldr	r7, [sp, #36]	; 0x24
   69a90:	mov	r9, #0
   69a94:	mov	r6, #0
   69a98:	add	r0, sl, #20
   69a9c:	str	r0, [sp, #28]
   69aa0:	add	r0, sl, #16
   69aa4:	str	r0, [sp, #24]
   69aa8:	add	r0, sl, #12
   69aac:	str	r0, [sp, #20]
   69ab0:	add	r0, sl, #8
   69ab4:	str	r0, [sp, #16]
   69ab8:	add	r0, sl, #4
   69abc:	str	r0, [sp, #32]
   69ac0:	bl	18a0 <Mat_VarCalloc@plt>
   69ac4:	cmp	r0, #0
   69ac8:	str	r0, [r7, r6, lsl #2]
   69acc:	bne	69b00 <ReadNextCell+0x7a8>
   69ad0:	ldr	r0, [pc, #840]	; 69e20 <ReadNextCell+0xac8>
   69ad4:	mov	r1, r6
   69ad8:	add	r0, pc, r0
   69adc:	bl	19b4 <Mat_Critical@plt>
   69ae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69ae4:	add	r6, r6, #1
   69ae8:	cmp	r6, r0
   69aec:	bcs	693b8 <ReadNextCell+0x60>
   69af0:	bl	18a0 <Mat_VarCalloc@plt>
   69af4:	cmp	r0, #0
   69af8:	str	r0, [r7, r6, lsl #2]
   69afc:	beq	69ad0 <ReadNextCell+0x778>
   69b00:	ldr	r3, [r4]
   69b04:	mov	r0, sl
   69b08:	mov	r1, #4
   69b0c:	mov	r2, #2
   69b10:	bl	18b8 <fread@plt>
   69b14:	cmp	r0, #0
   69b18:	beq	69ae0 <ReadNextCell+0x788>
   69b1c:	mov	r5, r0
   69b20:	ldr	r0, [r4, #20]
   69b24:	cmp	r0, #0
   69b28:	beq	69b3c <ReadNextCell+0x7e4>
   69b2c:	mov	r0, sl
   69b30:	bl	1c0c <Mat_uint32Swap>
   69b34:	ldr	r0, [sp, #32]
   69b38:	bl	1c0c <Mat_uint32Swap>
   69b3c:	ldr	r8, [sp, #52]	; 0x34
   69b40:	add	r9, r5, r9
   69b44:	cmp	r8, #0
   69b48:	beq	69c0c <ReadNextCell+0x8b4>
   69b4c:	ldr	r0, [sp, #48]	; 0x30
   69b50:	cmp	r0, #14
   69b54:	bne	69dc8 <ReadNextCell+0xa70>
   69b58:	ldr	r3, [r4]
   69b5c:	mov	r0, sl
   69b60:	mov	r1, #4
   69b64:	mov	r2, #6
   69b68:	bl	18b8 <fread@plt>
   69b6c:	mov	r2, r0
   69b70:	ldr	r0, [r4, #20]
   69b74:	mov	r5, sl
   69b78:	cmp	r0, #0
   69b7c:	beq	69bb8 <ReadNextCell+0x860>
   69b80:	mov	r0, r5
   69b84:	mov	sl, r2
   69b88:	bl	1c0c <Mat_uint32Swap>
   69b8c:	ldr	r0, [sp, #32]
   69b90:	bl	1c0c <Mat_uint32Swap>
   69b94:	ldr	r0, [sp, #16]
   69b98:	bl	1c0c <Mat_uint32Swap>
   69b9c:	ldr	r0, [sp, #20]
   69ba0:	bl	1c0c <Mat_uint32Swap>
   69ba4:	ldr	r0, [sp, #24]
   69ba8:	bl	1c0c <Mat_uint32Swap>
   69bac:	ldr	r0, [sp, #28]
   69bb0:	bl	1c0c <Mat_uint32Swap>
   69bb4:	mov	r2, sl
   69bb8:	ldr	r0, [sp, #48]	; 0x30
   69bbc:	mov	sl, r5
   69bc0:	cmp	r0, #6
   69bc4:	bne	69c38 <ReadNextCell+0x8e0>
   69bc8:	ldr	r0, [sp, #56]	; 0x38
   69bcc:	ldr	r1, [r7, r6, lsl #2]
   69bd0:	mov	r5, #0
   69bd4:	and	ip, r0, #512	; 0x200
   69bd8:	and	r3, r0, #1024	; 0x400
   69bdc:	and	r7, r0, #2048	; 0x800
   69be0:	uxtb	r0, r0
   69be4:	cmp	r0, #18
   69be8:	movcs	r0, r5
   69bec:	str	r0, [r1, #16]
   69bf0:	str	r7, [r1, #20]
   69bf4:	str	r3, [r1, #24]
   69bf8:	str	ip, [r1, #28]
   69bfc:	cmp	r0, #5
   69c00:	ldreq	r0, [sp, #60]	; 0x3c
   69c04:	streq	r0, [r1]
   69c08:	b	69c3c <ReadNextCell+0x8e4>
   69c0c:	ldr	r0, [r7, r6, lsl #2]
   69c10:	ldr	r0, [r0, #52]	; 0x34
   69c14:	bl	1804 <free@plt>
   69c18:	ldr	r0, [r7, r6, lsl #2]
   69c1c:	mov	r1, #0
   69c20:	str	r1, [r0, #52]	; 0x34
   69c24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69c28:	add	r6, r6, #1
   69c2c:	cmp	r6, r0
   69c30:	bcc	69af0 <ReadNextCell+0x798>
   69c34:	b	693b8 <ReadNextCell+0x60>
   69c38:	ldr	r1, [r7, r6, lsl #2]
   69c3c:	add	r7, r2, r9
   69c40:	ldr	r2, [sp, #64]	; 0x40
   69c44:	ldr	r3, [sp, #68]	; 0x44
   69c48:	mov	r0, r4
   69c4c:	bl	69e2c <ReadRankDims>
   69c50:	ldr	r3, [r4]
   69c54:	mov	r5, r0
   69c58:	mov	r0, sl
   69c5c:	mov	r1, #1
   69c60:	mov	r2, #8
   69c64:	bl	18b8 <fread@plt>
   69c68:	mov	r9, r0
   69c6c:	mov	r0, r4
   69c70:	sub	r4, r8, r5
   69c74:	ldr	r0, [r0, #20]
   69c78:	cmp	r0, #0
   69c7c:	beq	69c90 <ReadNextCell+0x938>
   69c80:	mov	r0, sl
   69c84:	bl	1c0c <Mat_uint32Swap>
   69c88:	ldr	r0, [sp, #32]
   69c8c:	bl	1c0c <Mat_uint32Swap>
   69c90:	add	r7, r7, r5
   69c94:	ldr	r5, [sp, #52]	; 0x34
   69c98:	sub	r8, r4, #32
   69c9c:	cmp	r5, #0
   69ca0:	beq	69ce4 <ReadNextCell+0x98c>
   69ca4:	ldr	r0, [sp, #48]	; 0x30
   69ca8:	cmp	r0, #1
   69cac:	bne	69ce4 <ReadNextCell+0x98c>
   69cb0:	asr	r0, r5, #31
   69cb4:	ldr	r4, [sp, #40]	; 0x28
   69cb8:	mov	r2, #1
   69cbc:	add	r0, r5, r0, lsr #29
   69cc0:	bic	r0, r0, #7
   69cc4:	sub	r1, r5, r0
   69cc8:	cmp	r1, #0
   69ccc:	addgt	r5, r0, #8
   69cd0:	ldr	r0, [r4]
   69cd4:	mov	r1, r5
   69cd8:	bl	1a2c <fseek@plt>
   69cdc:	sub	r8, r8, r5
   69ce0:	b	69ce8 <ReadNextCell+0x990>
   69ce4:	ldr	r4, [sp, #40]	; 0x28
   69ce8:	ldr	r0, [r4]
   69cec:	add	r9, r7, r9
   69cf0:	bl	1840 <ftell@plt>
   69cf4:	ldr	r7, [sp, #36]	; 0x24
   69cf8:	cmn	r0, #1
   69cfc:	ldr	r1, [r7, r6, lsl #2]
   69d00:	ldr	r2, [r1, #52]	; 0x34
   69d04:	str	r0, [r2]
   69d08:	beq	69d70 <ReadNextCell+0xa18>
   69d0c:	ldr	r0, [r1, #16]
   69d10:	cmp	r0, #2
   69d14:	bne	69d2c <ReadNextCell+0x9d4>
   69d18:	mov	r0, r4
   69d1c:	bl	684bc <ReadNextStructField>
   69d20:	ldr	r1, [r7, r6, lsl #2]
   69d24:	add	r9, r0, r9
   69d28:	ldr	r0, [r1, #16]
   69d2c:	cmp	r0, #1
   69d30:	bne	69d44 <ReadNextCell+0x9ec>
   69d34:	mov	r0, r4
   69d38:	bl	69358 <ReadNextCell>
   69d3c:	ldr	r1, [r7, r6, lsl #2]
   69d40:	add	r9, r0, r9
   69d44:	ldr	r0, [r1, #52]	; 0x34
   69d48:	mov	r2, #0
   69d4c:	ldr	r0, [r0]
   69d50:	add	r1, r0, r8
   69d54:	ldr	r0, [r4]
   69d58:	bl	1a2c <fseek@plt>
   69d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69d60:	add	r6, r6, #1
   69d64:	cmp	r6, r0
   69d68:	bcc	69af0 <ReadNextCell+0x798>
   69d6c:	b	693b8 <ReadNextCell+0x60>
   69d70:	ldr	r0, [pc, #176]	; 69e28 <ReadNextCell+0xad0>
   69d74:	add	r0, pc, r0
   69d78:	bl	19b4 <Mat_Critical@plt>
   69d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69d80:	add	r6, r6, #1
   69d84:	cmp	r6, r0
   69d88:	bcc	69af0 <ReadNextCell+0x798>
   69d8c:	b	693b8 <ReadNextCell+0x60>
   69d90:	mov	r9, #0
   69d94:	mov	r0, r9
   69d98:	sub	sp, fp, #28
   69d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   69da0:	bl	1918 <Mat_VarFree@plt>
   69da4:	mov	r0, #0
   69da8:	mov	r1, r8
   69dac:	str	r0, [sl]
   69db0:	ldr	r0, [pc, #84]	; 69e0c <ReadNextCell+0xab4>
   69db4:	add	r0, pc, r0
   69db8:	bl	19b4 <Mat_Critical@plt>
   69dbc:	mov	r0, r9
   69dc0:	sub	sp, fp, #28
   69dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   69dc8:	ldr	r0, [r7, r6, lsl #2]
   69dcc:	bl	1918 <Mat_VarFree@plt>
   69dd0:	mov	r0, #0
   69dd4:	str	r0, [r7, r6, lsl #2]
   69dd8:	ldr	r0, [r4]
   69ddc:	bl	1840 <ftell@plt>
   69de0:	mov	r2, r0
   69de4:	ldr	r0, [pc, #56]	; 69e24 <ReadNextCell+0xacc>
   69de8:	mov	r1, r6
   69dec:	add	r0, pc, r0
   69df0:	bl	19b4 <Mat_Critical@plt>
   69df4:	mov	r0, r9
   69df8:	sub	sp, fp, #28
   69dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   69e00:	.word	0x00008944
   69e04:	.word	0x0000859d
   69e08:	.word	0x00008a67
   69e0c:	.word	0x000082a1
   69e10:	.word	0x0000897e
   69e14:	.word	0x000082bc
   69e18:	.word	0x00008557
   69e1c:	.word	0x00008b73
   69e20:	.word	0x00008557
   69e24:	.word	0x00008298
   69e28:	.word	0x00007ef0

00069e2c <ReadRankDims>:
   69e2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   69e30:	add	fp, sp, #24
   69e34:	sub	sp, sp, #8
   69e38:	mov	r7, #0
   69e3c:	cmp	r2, #5
   69e40:	bne	69f60 <ReadRankDims+0x134>
   69e44:	mov	r9, r0
   69e48:	lsr	r5, r3, #2
   69e4c:	bic	r0, r3, #3
   69e50:	mov	r4, r1
   69e54:	str	r5, [r1, #4]
   69e58:	bl	18d0 <malloc@plt>
   69e5c:	cmp	r0, #0
   69e60:	str	r0, [r4, #32]
   69e64:	beq	69ed8 <ReadRankDims+0xac>
   69e68:	cmp	r5, #0
   69e6c:	beq	69ef8 <ReadRankDims+0xcc>
   69e70:	mov	r6, #0
   69e74:	add	r8, sp, #4
   69e78:	mov	r5, #0
   69e7c:	b	69ea4 <ReadRankDims+0x78>
   69e80:	ldr	r0, [sp, #4]
   69e84:	ldr	r1, [r4, #32]
   69e88:	add	r7, r6, #4
   69e8c:	add	r5, r5, #1
   69e90:	str	r0, [r1, r6]
   69e94:	mov	r6, r7
   69e98:	ldr	r0, [r4, #4]
   69e9c:	cmp	r5, r0
   69ea0:	bge	69f38 <ReadRankDims+0x10c>
   69ea4:	ldr	r3, [r9]
   69ea8:	mov	r0, r8
   69eac:	mov	r1, #4
   69eb0:	mov	r2, #1
   69eb4:	bl	18b8 <fread@plt>
   69eb8:	cmp	r0, #1
   69ebc:	bne	69f08 <ReadRankDims+0xdc>
   69ec0:	ldr	r0, [r9, #20]
   69ec4:	cmp	r0, #0
   69ec8:	beq	69e80 <ReadRankDims+0x54>
   69ecc:	mov	r0, r8
   69ed0:	bl	1c0c <Mat_uint32Swap>
   69ed4:	b	69e84 <ReadRankDims+0x58>
   69ed8:	mov	r7, #0
   69edc:	str	r7, [r4, #4]
   69ee0:	ldr	r0, [pc, #152]	; 69f80 <ReadRankDims+0x154>
   69ee4:	add	r0, pc, r0
   69ee8:	bl	19b4 <Mat_Critical@plt>
   69eec:	mov	r0, r7
   69ef0:	sub	sp, fp, #24
   69ef4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   69ef8:	mov	r7, #0
   69efc:	mov	r0, r7
   69f00:	sub	sp, fp, #24
   69f04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   69f08:	ldr	r0, [r4, #32]
   69f0c:	bl	1804 <free@plt>
   69f10:	mov	r0, #0
   69f14:	str	r0, [r4, #4]
   69f18:	str	r0, [r4, #32]
   69f1c:	ldr	r0, [pc, #88]	; 69f7c <ReadRankDims+0x150>
   69f20:	add	r0, pc, r0
   69f24:	bl	19b4 <Mat_Critical@plt>
   69f28:	mov	r7, r6
   69f2c:	mov	r0, r7
   69f30:	sub	sp, fp, #24
   69f34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   69f38:	tst	r0, #1
   69f3c:	beq	69f60 <ReadRankDims+0x134>
   69f40:	ldr	r3, [r9]
   69f44:	add	r0, sp, #4
   69f48:	mov	r1, #4
   69f4c:	mov	r2, #1
   69f50:	bl	18b8 <fread@plt>
   69f54:	cmp	r0, #1
   69f58:	bne	69f6c <ReadRankDims+0x140>
   69f5c:	add	r7, r7, #4
   69f60:	mov	r0, r7
   69f64:	sub	sp, fp, #24
   69f68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   69f6c:	ldr	r0, [pc, #4]	; 69f78 <ReadRankDims+0x14c>
   69f70:	add	r0, pc, r0
   69f74:	b	69ee8 <ReadRankDims+0xbc>
   69f78:	.word	0x00007f80
   69f7c:	.word	0x00007fd0
   69f80:	.word	0x00007b65

00069f84 <GetTypeBufSize>:
   69f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   69f88:	add	fp, sp, #28
   69f8c:	sub	sp, sp, #20
   69f90:	mov	r5, r0
   69f94:	mov	r0, #1
   69f98:	add	r1, sp, #12
   69f9c:	str	r0, [sp, #12]
   69fa0:	mov	r0, r5
   69fa4:	bl	6be10 <SafeMulDims>
   69fa8:	ldr	r9, [r5, #4]
   69fac:	ldr	r0, [r5, #16]
   69fb0:	mov	sl, #12
   69fb4:	tst	r9, #1
   69fb8:	sub	r0, r0, #1
   69fbc:	movweq	sl, #8
   69fc0:	cmp	r0, #4
   69fc4:	add	r4, sl, r9, lsl #2
   69fc8:	bhi	6a170 <GetTypeBufSize+0x1ec>
   69fcc:	add	r1, pc, #4
   69fd0:	ldr	r0, [r1, r0, lsl #2]
   69fd4:	add	pc, r1, r0
   69fd8:	.word	0x00000014
   69fdc:	.word	0x00000090
   69fe0:	.word	0x00000198
   69fe4:	.word	0x000001a0
   69fe8:	.word	0x000001e8
   69fec:	ldr	r0, [r5]
   69ff0:	cmp	r0, #0
   69ff4:	beq	6a25c <GetTypeBufSize+0x2d8>
   69ff8:	ldr	r2, [r5, #12]
   69ffc:	cmp	r2, #0
   6a000:	beq	6a25c <GetTypeBufSize+0x2d8>
   6a004:	udiv	r1, r0, r2
   6a008:	ldr	r5, [r5, #40]	; 0x28
   6a00c:	cmp	r5, #0
   6a010:	str	r1, [sp, #12]
   6a014:	beq	6a25c <GetTypeBufSize+0x2d8>
   6a018:	cmp	r2, r0
   6a01c:	bhi	6a25c <GetTypeBufSize+0x2d8>
   6a020:	mov	r6, #0
   6a024:	ldr	r0, [r5, r6, lsl #2]
   6a028:	mov	r2, #0
   6a02c:	cmp	r0, #0
   6a030:	bne	6a058 <GetTypeBufSize+0xd4>
   6a034:	add	r0, r4, r2
   6a038:	add	r6, r6, #1
   6a03c:	add	r4, r0, #8
   6a040:	cmp	r6, r1
   6a044:	bcs	6a25c <GetTypeBufSize+0x2d8>
   6a048:	ldr	r0, [r5, r6, lsl #2]
   6a04c:	mov	r2, #0
   6a050:	cmp	r0, #0
   6a054:	beq	6a034 <GetTypeBufSize+0xb0>
   6a058:	bl	69f84 <GetTypeBufSize>
   6a05c:	ldr	r1, [sp, #12]
   6a060:	add	r2, r0, #24
   6a064:	b	6a034 <GetTypeBufSize+0xb0>
   6a068:	ldr	r0, [r5, #40]	; 0x28
   6a06c:	mov	r4, #0
   6a070:	mov	r7, #0
   6a074:	str	r0, [sp, #4]
   6a078:	ldr	r0, [r5, #52]	; 0x34
   6a07c:	ldr	r8, [r0, #4]
   6a080:	cmp	r8, #0
   6a084:	beq	6a0d0 <GetTypeBufSize+0x14c>
   6a088:	ldr	r6, [r0, #8]
   6a08c:	mov	r7, #0
   6a090:	mov	r5, r8
   6a094:	ldr	r0, [r6]
   6a098:	cmp	r0, #0
   6a09c:	bne	6a0b8 <GetTypeBufSize+0x134>
   6a0a0:	add	r6, r6, #4
   6a0a4:	subs	r5, r5, #1
   6a0a8:	beq	6a0d0 <GetTypeBufSize+0x14c>
   6a0ac:	ldr	r0, [r6]
   6a0b0:	cmp	r0, #0
   6a0b4:	beq	6a0a0 <GetTypeBufSize+0x11c>
   6a0b8:	bl	1954 <strlen@plt>
   6a0bc:	cmp	r0, r7
   6a0c0:	movhi	r7, r0
   6a0c4:	add	r6, r6, #4
   6a0c8:	subs	r5, r5, #1
   6a0cc:	bne	6a0ac <GetTypeBufSize+0x128>
   6a0d0:	add	r0, r7, #1
   6a0d4:	mul	r0, r8, r0
   6a0d8:	add	r1, r0, r4
   6a0dc:	add	r4, r4, r8
   6a0e0:	tst	r1, #7
   6a0e4:	bne	6a0d8 <GetTypeBufSize+0x154>
   6a0e8:	mla	r0, r7, r8, sl
   6a0ec:	ldr	r6, [sp, #4]
   6a0f0:	add	r0, r0, r9, lsl #2
   6a0f4:	cmp	r6, #0
   6a0f8:	add	r0, r0, r4
   6a0fc:	cmpne	r8, #0
   6a100:	add	r4, r0, #16
   6a104:	beq	6a25c <GetTypeBufSize+0x2d8>
   6a108:	ldr	r1, [sp, #12]
   6a10c:	mov	r0, #1
   6a110:	mov	r2, r8
   6a114:	str	r0, [sp, #8]
   6a118:	add	r0, sp, #8
   6a11c:	bl	6be6c <SafeMul>
   6a120:	ldr	r1, [sp, #8]
   6a124:	cmp	r1, #0
   6a128:	beq	6a25c <GetTypeBufSize+0x2d8>
   6a12c:	mov	r5, #0
   6a130:	ldr	r0, [r6, r5, lsl #2]
   6a134:	cmp	r0, #0
   6a138:	beq	6a168 <GetTypeBufSize+0x1e4>
   6a13c:	bl	69f84 <GetTypeBufSize>
   6a140:	ldr	r1, [sp, #8]
   6a144:	add	r0, r0, #24
   6a148:	add	r0, r4, r0
   6a14c:	add	r5, r5, #1
   6a150:	add	r4, r0, #8
   6a154:	cmp	r5, r1
   6a158:	bcs	6a25c <GetTypeBufSize+0x2d8>
   6a15c:	ldr	r0, [r6, r5, lsl #2]
   6a160:	cmp	r0, #0
   6a164:	bne	6a13c <GetTypeBufSize+0x1b8>
   6a168:	mov	r0, #48	; 0x30
   6a16c:	b	6a148 <GetTypeBufSize+0x1c4>
   6a170:	ldr	r0, [r5, #8]
   6a174:	b	6a188 <GetTypeBufSize+0x204>
   6a178:	ldr	r0, [r5, #8]
   6a17c:	sub	r1, r0, #1
   6a180:	cmp	r1, #2
   6a184:	movwcc	r0, #4
   6a188:	ldr	r6, [sp, #12]
   6a18c:	bl	1924 <Mat_SizeOf@plt>
   6a190:	mov	r2, r0
   6a194:	add	r0, sp, #16
   6a198:	mov	r1, r6
   6a19c:	bl	6be6c <SafeMul>
   6a1a0:	ldr	r0, [sp, #16]
   6a1a4:	ands	r1, r0, #7
   6a1a8:	subne	r0, r0, r1
   6a1ac:	addne	r0, r0, #8
   6a1b0:	strne	r0, [sp, #16]
   6a1b4:	add	r0, r0, #8
   6a1b8:	add	r4, r0, r4
   6a1bc:	b	6a250 <GetTypeBufSize+0x2cc>
   6a1c0:	ldr	r6, [r5, #40]	; 0x28
   6a1c4:	add	r0, sp, #16
   6a1c8:	mov	r2, #4
   6a1cc:	ldr	r1, [r6, #8]
   6a1d0:	bl	6be6c <SafeMul>
   6a1d4:	ldr	r8, [sp, #16]
   6a1d8:	mov	r2, #4
   6a1dc:	ands	r0, r8, #7
   6a1e0:	subne	r0, r8, r0
   6a1e4:	addne	r8, r0, #8
   6a1e8:	add	r0, sp, #16
   6a1ec:	strne	r8, [sp, #16]
   6a1f0:	ldr	r1, [r6, #16]
   6a1f4:	bl	6be6c <SafeMul>
   6a1f8:	ldr	r7, [sp, #16]
   6a1fc:	ands	r0, r7, #7
   6a200:	subne	r0, r7, r0
   6a204:	addne	r7, r0, #8
   6a208:	strne	r7, [sp, #16]
   6a20c:	ldr	r0, [r5, #8]
   6a210:	ldr	r6, [r6, #20]
   6a214:	bl	1924 <Mat_SizeOf@plt>
   6a218:	mov	r2, r0
   6a21c:	add	r0, sp, #16
   6a220:	mov	r1, r6
   6a224:	bl	6be6c <SafeMul>
   6a228:	ldr	r0, [sp, #16]
   6a22c:	ands	r1, r0, #7
   6a230:	subne	r0, r0, r1
   6a234:	add	r1, r4, r8
   6a238:	addne	r0, r0, #8
   6a23c:	add	r1, r1, r7
   6a240:	strne	r0, [sp, #16]
   6a244:	add	r0, r0, #8
   6a248:	add	r1, r1, r0
   6a24c:	add	r4, r1, #16
   6a250:	ldr	r1, [r5, #20]
   6a254:	cmp	r1, #0
   6a258:	addne	r4, r4, r0
   6a25c:	mov	r0, r4
   6a260:	sub	sp, fp, #28
   6a264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006a268 <WriteCompressedData>:
   6a268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a26c:	add	fp, sp, #28
   6a270:	sub	sp, sp, #28
   6a274:	sub	sp, sp, #1024	; 0x400
   6a278:	mov	r6, #0
   6a27c:	cmp	r0, #0
   6a280:	str	r6, [sp, #12]
   6a284:	str	r6, [sp, #8]
   6a288:	beq	6a3d8 <WriteCompressedData+0x170>
   6a28c:	mov	r5, r0
   6a290:	ldr	r0, [r0]
   6a294:	cmp	r0, #0
   6a298:	beq	6a3d8 <WriteCompressedData+0x170>
   6a29c:	ldr	r6, [fp, #8]
   6a2a0:	mov	r9, r3
   6a2a4:	mov	r8, r2
   6a2a8:	mov	r4, r1
   6a2ac:	mov	r0, r6
   6a2b0:	bl	1924 <Mat_SizeOf@plt>
   6a2b4:	mul	r0, r0, r9
   6a2b8:	str	r6, [fp, #-40]	; 0xffffffd8
   6a2bc:	mov	r6, #0
   6a2c0:	mov	sl, #1024	; 0x400
   6a2c4:	add	r7, sp, #16
   6a2c8:	mov	r1, #8
   6a2cc:	str	r0, [sp, #4]
   6a2d0:	str	r0, [fp, #-36]	; 0xffffffdc
   6a2d4:	sub	r0, fp, #40	; 0x28
   6a2d8:	stm	r4, {r0, r1}
   6a2dc:	mov	r0, r4
   6a2e0:	mov	r1, #0
   6a2e4:	str	r7, [r4, #12]
   6a2e8:	str	sl, [r4, #16]
   6a2ec:	bl	1894 <deflate@plt>
   6a2f0:	ldr	r0, [r4, #16]
   6a2f4:	ldr	r3, [r5]
   6a2f8:	mov	r1, #1
   6a2fc:	rsb	r2, r0, #1024	; 0x400
   6a300:	mov	r0, r7
   6a304:	bl	18ac <fwrite@plt>
   6a308:	add	r6, r0, r6
   6a30c:	ldr	r0, [r4, #16]
   6a310:	cmp	r0, #0
   6a314:	beq	6a2dc <WriteCompressedData+0x74>
   6a318:	cmp	r8, #0
   6a31c:	beq	6a3d8 <WriteCompressedData+0x170>
   6a320:	cmp	r9, #1
   6a324:	blt	6a3d8 <WriteCompressedData+0x170>
   6a328:	ldr	r9, [sp, #4]
   6a32c:	str	r8, [r4]
   6a330:	mov	r8, #1024	; 0x400
   6a334:	str	r9, [r4, #4]
   6a338:	mov	r0, r4
   6a33c:	mov	r1, #0
   6a340:	str	r7, [r4, #12]
   6a344:	str	r8, [r4, #16]
   6a348:	bl	1894 <deflate@plt>
   6a34c:	ldr	r0, [r4, #16]
   6a350:	ldr	r3, [r5]
   6a354:	mov	r1, #1
   6a358:	rsb	r2, r0, #1024	; 0x400
   6a35c:	mov	r0, r7
   6a360:	bl	18ac <fwrite@plt>
   6a364:	add	r6, r0, r6
   6a368:	ldr	r0, [r4, #16]
   6a36c:	cmp	r0, #0
   6a370:	beq	6a338 <WriteCompressedData+0xd0>
   6a374:	asr	r0, r9, #31
   6a378:	add	r0, r9, r0, lsr #29
   6a37c:	bic	r0, r0, #7
   6a380:	subs	r0, r9, r0
   6a384:	beq	6a3d8 <WriteCompressedData+0x170>
   6a388:	add	r1, sp, #8
   6a38c:	mov	r8, #1024	; 0x400
   6a390:	rsb	r0, r0, #8
   6a394:	str	r1, [r4]
   6a398:	str	r0, [r4, #4]
   6a39c:	mov	r0, r4
   6a3a0:	mov	r1, #0
   6a3a4:	str	r7, [r4, #12]
   6a3a8:	str	r8, [r4, #16]
   6a3ac:	bl	1894 <deflate@plt>
   6a3b0:	ldr	r0, [r4, #16]
   6a3b4:	ldr	r3, [r5]
   6a3b8:	mov	r1, #1
   6a3bc:	rsb	r2, r0, #1024	; 0x400
   6a3c0:	mov	r0, r7
   6a3c4:	bl	18ac <fwrite@plt>
   6a3c8:	add	r6, r0, r6
   6a3cc:	ldr	r0, [r4, #16]
   6a3d0:	cmp	r0, #0
   6a3d4:	beq	6a39c <WriteCompressedData+0x134>
   6a3d8:	mov	r0, r6
   6a3dc:	sub	sp, fp, #28
   6a3e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006a3e4 <WriteCompressedTypeArrayFlags>:
   6a3e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a3e8:	add	fp, sp, #28
   6a3ec:	sub	sp, sp, #12
   6a3f0:	sub	sp, sp, #4096	; 0x1000
   6a3f4:	add	r8, sp, #8
   6a3f8:	mov	r4, r2
   6a3fc:	mov	r9, r1
   6a400:	mov	sl, r0
   6a404:	mov	r1, #0
   6a408:	mov	r2, #2048	; 0x800
   6a40c:	mov	r7, #0
   6a410:	mov	r0, r8
   6a414:	bl	1990 <memset@plt>
   6a418:	ldr	r1, [r9, #16]
   6a41c:	cmp	r1, #0
   6a420:	beq	6a6a0 <WriteCompressedTypeArrayFlags+0x2bc>
   6a424:	add	r7, r9, #20
   6a428:	uxtb	r0, r1
   6a42c:	ldm	r7, {r2, r3, r7}
   6a430:	cmp	r2, #0
   6a434:	orrne	r0, r0, #2048	; 0x800
   6a438:	cmp	r3, #0
   6a43c:	mov	r3, #0
   6a440:	orrne	r0, r0, #1024	; 0x400
   6a444:	cmp	r7, #0
   6a448:	orrne	r0, r0, #512	; 0x200
   6a44c:	cmp	r1, #5
   6a450:	mov	r1, #0
   6a454:	bne	6a460 <WriteCompressedTypeArrayFlags+0x7c>
   6a458:	ldr	r1, [r9, #40]	; 0x28
   6a45c:	ldr	r1, [r1]
   6a460:	str	r1, [sp, #20]
   6a464:	str	r0, [sp, #16]
   6a468:	mov	r0, #8
   6a46c:	mov	r1, #5
   6a470:	str	r0, [sp, #12]
   6a474:	mov	r0, #6
   6a478:	str	r0, [sp, #8]
   6a47c:	ldr	r0, [r9, #4]
   6a480:	str	r1, [sp, #24]
   6a484:	lsl	r1, r0, #2
   6a488:	cmp	r0, #1
   6a48c:	str	r1, [sp, #28]
   6a490:	blt	6a59c <WriteCompressedTypeArrayFlags+0x1b8>
   6a494:	ldr	ip, [r9, #32]
   6a498:	mov	r5, #0
   6a49c:	cmp	r0, #4
   6a4a0:	bcc	6a540 <WriteCompressedTypeArrayFlags+0x15c>
   6a4a4:	add	r1, ip, r0, lsl #2
   6a4a8:	add	r3, r8, #24
   6a4ac:	cmp	r3, r1
   6a4b0:	addcc	r1, r8, r0, lsl #2
   6a4b4:	addcc	r1, r1, #24
   6a4b8:	cmpcc	ip, r1
   6a4bc:	bcc	6a540 <WriteCompressedTypeArrayFlags+0x15c>
   6a4c0:	bic	r5, r0, #3
   6a4c4:	mov	r2, #1
   6a4c8:	subs	r1, r5, #4
   6a4cc:	add	r1, r2, r1, lsr #2
   6a4d0:	and	r2, r1, #1
   6a4d4:	stm	sp, {r2, ip}
   6a4d8:	beq	6a6ac <WriteCompressedTypeArrayFlags+0x2c8>
   6a4dc:	sub	r6, r1, r2
   6a4e0:	mov	r7, #0
   6a4e4:	mov	r2, #32
   6a4e8:	mov	r1, ip
   6a4ec:	add	ip, r1, #16
   6a4f0:	vld1.32	{d16-d17}, [r1], r2
   6a4f4:	add	lr, r3, #16
   6a4f8:	subs	r6, r6, #2
   6a4fc:	add	r7, r7, #8
   6a500:	vst1.32	{d16-d17}, [r3], r2
   6a504:	vld1.32	{d16-d17}, [ip]
   6a508:	vst1.32	{d16-d17}, [lr]
   6a50c:	bne	6a4ec <WriteCompressedTypeArrayFlags+0x108>
   6a510:	ldr	r1, [sp]
   6a514:	ldr	ip, [sp, #4]
   6a518:	cmp	r1, #0
   6a51c:	beq	6a534 <WriteCompressedTypeArrayFlags+0x150>
   6a520:	add	r1, ip, r7, lsl #2
   6a524:	vld1.32	{d16-d17}, [r1]
   6a528:	add	r1, r8, r7, lsl #2
   6a52c:	add	r1, r1, #24
   6a530:	vst1.32	{d16-d17}, [r1]
   6a534:	cmp	r0, r5
   6a538:	mov	r3, r0
   6a53c:	beq	6a59c <WriteCompressedTypeArrayFlags+0x1b8>
   6a540:	tst	r0, #1
   6a544:	mov	r2, r5
   6a548:	beq	6a55c <WriteCompressedTypeArrayFlags+0x178>
   6a54c:	ldr	r1, [ip, r5, lsl #2]
   6a550:	add	r2, r8, r5, lsl #2
   6a554:	str	r1, [r2, #24]
   6a558:	orr	r2, r5, #1
   6a55c:	orr	r1, r5, #1
   6a560:	mov	r3, r0
   6a564:	cmp	r0, r1
   6a568:	beq	6a59c <WriteCompressedTypeArrayFlags+0x1b8>
   6a56c:	add	r1, ip, r2, lsl #2
   6a570:	add	r1, r1, #4
   6a574:	ldr	r7, [r1, #-4]
   6a578:	add	r3, r8, r2, lsl #2
   6a57c:	add	r2, r2, #2
   6a580:	cmp	r0, r2
   6a584:	str	r7, [r3, #24]
   6a588:	ldr	r7, [r1]
   6a58c:	add	r1, r1, #8
   6a590:	str	r7, [r3, #28]
   6a594:	bne	6a574 <WriteCompressedTypeArrayFlags+0x190>
   6a598:	mov	r3, r0
   6a59c:	tst	r0, #1
   6a5a0:	add	lr, sp, #2048	; 0x800
   6a5a4:	mov	r5, #0
   6a5a8:	mov	r6, #2048	; 0x800
   6a5ac:	addne	r0, r8, r3, lsl #2
   6a5b0:	movne	r1, #0
   6a5b4:	addne	r3, r3, #1
   6a5b8:	add	r7, lr, #8
   6a5bc:	strne	r1, [r0, #24]
   6a5c0:	mov	r0, #24
   6a5c4:	str	r8, [r4]
   6a5c8:	add	r0, r0, r3, lsl #2
   6a5cc:	str	r0, [r4, #4]
   6a5d0:	mov	r0, r4
   6a5d4:	mov	r1, #0
   6a5d8:	str	r7, [r4, #12]
   6a5dc:	str	r6, [r4, #16]
   6a5e0:	bl	1894 <deflate@plt>
   6a5e4:	ldr	r0, [r4, #16]
   6a5e8:	ldr	r3, [sl]
   6a5ec:	mov	r1, #1
   6a5f0:	rsb	r2, r0, #2048	; 0x800
   6a5f4:	mov	r0, r7
   6a5f8:	bl	18ac <fwrite@plt>
   6a5fc:	add	r5, r0, r5
   6a600:	ldr	r0, [r4, #16]
   6a604:	cmp	r0, #0
   6a608:	beq	6a5d0 <WriteCompressedTypeArrayFlags+0x1ec>
   6a60c:	mov	r0, #0
   6a610:	mov	r6, #2048	; 0x800
   6a614:	str	r0, [sp, #12]
   6a618:	mov	r0, #1
   6a61c:	str	r0, [sp, #8]
   6a620:	mov	r0, #8
   6a624:	str	r8, [r4]
   6a628:	str	r0, [r4, #4]
   6a62c:	mov	r0, r4
   6a630:	mov	r1, #0
   6a634:	str	r7, [r4, #12]
   6a638:	str	r6, [r4, #16]
   6a63c:	bl	1894 <deflate@plt>
   6a640:	ldr	r0, [r4, #16]
   6a644:	ldr	r3, [sl]
   6a648:	mov	r1, #1
   6a64c:	rsb	r2, r0, #2048	; 0x800
   6a650:	mov	r0, r7
   6a654:	bl	18ac <fwrite@plt>
   6a658:	add	r5, r0, r5
   6a65c:	ldr	r0, [r4, #16]
   6a660:	cmp	r0, #0
   6a664:	beq	6a62c <WriteCompressedTypeArrayFlags+0x248>
   6a668:	ldr	r0, [sl]
   6a66c:	bl	1840 <ftell@plt>
   6a670:	ldr	r1, [r9, #52]	; 0x34
   6a674:	cmn	r0, #1
   6a678:	str	r0, [r1]
   6a67c:	bne	6a68c <WriteCompressedTypeArrayFlags+0x2a8>
   6a680:	ldr	r0, [pc, #60]	; 6a6c4 <WriteCompressedTypeArrayFlags+0x2e0>
   6a684:	add	r0, pc, r0
   6a688:	bl	19b4 <Mat_Critical@plt>
   6a68c:	mov	r0, sl
   6a690:	mov	r1, r9
   6a694:	mov	r2, r4
   6a698:	bl	67260 <WriteCompressedType>
   6a69c:	add	r7, r0, r5
   6a6a0:	mov	r0, r7
   6a6a4:	sub	sp, fp, #28
   6a6a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6a6ac:	mov	r7, #0
   6a6b0:	ldr	r1, [sp]
   6a6b4:	ldr	ip, [sp, #4]
   6a6b8:	cmp	r1, #0
   6a6bc:	bne	6a520 <WriteCompressedTypeArrayFlags+0x13c>
   6a6c0:	b	6a534 <WriteCompressedTypeArrayFlags+0x150>
   6a6c4:	.word	0x000075e0

0006a6c8 <Mat_Create4>:
   6a6c8:	push	{r4, r5, r6, r7, fp, lr}
   6a6cc:	add	fp, sp, #16
   6a6d0:	ldr	r1, [pc, #156]	; 6a774 <Mat_Create4+0xac>
   6a6d4:	mov	r5, r0
   6a6d8:	add	r1, pc, r1
   6a6dc:	bl	17e0 <fopen@plt>
   6a6e0:	mov	r4, #0
   6a6e4:	cmp	r0, #0
   6a6e8:	beq	6a750 <Mat_Create4+0x88>
   6a6ec:	mov	r7, r0
   6a6f0:	mov	r0, #44	; 0x2c
   6a6f4:	bl	18d0 <malloc@plt>
   6a6f8:	cmp	r0, #0
   6a6fc:	beq	6a758 <Mat_Create4+0x90>
   6a700:	mov	r4, #0
   6a704:	str	r7, [r0]
   6a708:	mov	r6, r0
   6a70c:	mov	r1, r5
   6a710:	str	r4, [r0, #4]
   6a714:	str	r4, [r0, #8]
   6a718:	ldr	r0, [pc, #92]	; 6a77c <Mat_Create4+0xb4>
   6a71c:	add	r0, pc, r0
   6a720:	bl	1da4 <strdup_printf>
   6a724:	vmov.i32	q8, #0	; 0x00000000
   6a728:	add	r1, r6, #20
   6a72c:	vst1.32	{d16-d17}, [r1]
   6a730:	str	r0, [r6, #12]
   6a734:	mov	r1, #16
   6a738:	mov	r0, r6
   6a73c:	str	r1, [r6, #16]
   6a740:	str	r4, [r6, #36]	; 0x24
   6a744:	str	r4, [r6, #40]	; 0x28
   6a748:	bl	1984 <Mat_Rewind@plt>
   6a74c:	mov	r4, r6
   6a750:	mov	r0, r4
   6a754:	pop	{r4, r5, r6, r7, fp, pc}
   6a758:	mov	r0, r7
   6a75c:	bl	19cc <fclose@plt>
   6a760:	ldr	r0, [pc, #16]	; 6a778 <Mat_Create4+0xb0>
   6a764:	add	r0, pc, r0
   6a768:	bl	19b4 <Mat_Critical@plt>
   6a76c:	mov	r0, r4
   6a770:	pop	{r4, r5, r6, r7, fp, pc}
   6a774:	.word	0x000075ad
   6a778:	.word	0x00007950
   6a77c:	.word	0x00007e87

0006a780 <Mat_VarWrite4>:
   6a780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a784:	add	fp, sp, #28
   6a788:	sub	sp, sp, #4
   6a78c:	vpush	{d8}
   6a790:	sub	sp, sp, #40	; 0x28
   6a794:	cmp	r0, #0
   6a798:	mvn	r6, #0
   6a79c:	movne	r5, r1
   6a7a0:	cmpne	r1, #0
   6a7a4:	bne	6a7bc <Mat_VarWrite4+0x3c>
   6a7a8:	mov	r0, r6
   6a7ac:	sub	sp, fp, #40	; 0x28
   6a7b0:	vpop	{d8}
   6a7b4:	add	sp, sp, #4
   6a7b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6a7bc:	mov	r9, r0
   6a7c0:	ldr	r0, [r5, #36]	; 0x24
   6a7c4:	cmp	r0, #0
   6a7c8:	beq	6a7a8 <Mat_VarWrite4+0x28>
   6a7cc:	ldr	r1, [r5, #4]
   6a7d0:	cmp	r1, #2
   6a7d4:	bne	6a7a8 <Mat_VarWrite4+0x28>
   6a7d8:	ldr	r1, [r5, #8]
   6a7dc:	mov	r6, #2
   6a7e0:	sub	r1, r1, #2
   6a7e4:	cmp	r1, #7
   6a7e8:	bhi	6a7a8 <Mat_VarWrite4+0x28>
   6a7ec:	uxtb	r2, r1
   6a7f0:	mov	r3, #175	; 0xaf
   6a7f4:	mov	r7, #1
   6a7f8:	tst	r7, r3, lsr r2
   6a7fc:	beq	6a7a8 <Mat_VarWrite4+0x28>
   6a800:	ldr	r2, [pc, #1496]	; 6ade0 <Mat_VarWrite4+0x660>
   6a804:	add	r2, pc, r2
   6a808:	ldr	r8, [r2, r1, lsl #2]
   6a80c:	str	r8, [sp, #20]
   6a810:	bl	1954 <strlen@plt>
   6a814:	add	r0, r0, #1
   6a818:	mov	r1, #0
   6a81c:	mov	r2, #2
   6a820:	mov	r6, #0
   6a824:	str	r0, [sp, #36]	; 0x24
   6a828:	ldr	r0, [r9]
   6a82c:	bl	1a2c <fseek@plt>
   6a830:	ldr	r0, [r5, #16]
   6a834:	cmp	r0, #12
   6a838:	bhi	6a7a8 <Mat_VarWrite4+0x28>
   6a83c:	mov	r7, #1
   6a840:	mov	r1, #7872	; 0x1ec0
   6a844:	tst	r1, r7, lsl r0
   6a848:	beq	6a870 <Mat_VarWrite4+0xf0>
   6a84c:	ldr	r8, [r5, #4]
   6a850:	ldr	sl, [r5, #32]
   6a854:	cmp	r8, #1
   6a858:	blt	6a98c <Mat_VarWrite4+0x20c>
   6a85c:	cmp	r8, #4
   6a860:	bcs	6a8b4 <Mat_VarWrite4+0x134>
   6a864:	mov	r2, #0
   6a868:	mov	r7, #1
   6a86c:	b	6a978 <Mat_VarWrite4+0x1f8>
   6a870:	cmp	r0, #4
   6a874:	beq	6aa1c <Mat_VarWrite4+0x29c>
   6a878:	cmp	r0, #5
   6a87c:	bne	6a7a8 <Mat_VarWrite4+0x28>
   6a880:	ldr	r0, [r5, #8]
   6a884:	bl	1924 <Mat_SizeOf@plt>
   6a888:	ldr	r7, [r5, #40]	; 0x28
   6a88c:	add	r1, r8, #2
   6a890:	str	r1, [sp, #20]
   6a894:	ldr	r2, [r7, #16]
   6a898:	cmp	r2, #1
   6a89c:	blt	6aa38 <Mat_VarWrite4+0x2b8>
   6a8a0:	ldr	r1, [r7, #12]
   6a8a4:	add	r1, r1, r2, lsl #2
   6a8a8:	ldr	r1, [r1, #-4]
   6a8ac:	add	r1, r1, #1
   6a8b0:	b	6aa3c <Mat_VarWrite4+0x2bc>
   6a8b4:	bic	r2, r8, #3
   6a8b8:	mov	r0, #1
   6a8bc:	vmov.i32	q8, #1	; 0x00000001
   6a8c0:	sub	r3, r2, #4
   6a8c4:	add	r0, r0, r3, lsr #2
   6a8c8:	cmp	r3, #12
   6a8cc:	and	r1, r0, #3
   6a8d0:	str	r1, [sp, #4]
   6a8d4:	bcs	6a8ec <Mat_VarWrite4+0x16c>
   6a8d8:	mov	r7, #0
   6a8dc:	ldr	r1, [sp, #4]
   6a8e0:	cmp	r1, #0
   6a8e4:	bne	6a948 <Mat_VarWrite4+0x1c8>
   6a8e8:	b	6a960 <Mat_VarWrite4+0x1e0>
   6a8ec:	sub	r4, r0, r1
   6a8f0:	mov	r7, #0
   6a8f4:	mov	lr, #64	; 0x40
   6a8f8:	mov	r0, sl
   6a8fc:	mov	r3, sl
   6a900:	vld1.32	{d18-d19}, [r3], lr
   6a904:	add	ip, r0, #16
   6a908:	add	r1, r0, #32
   6a90c:	add	r0, r0, #48	; 0x30
   6a910:	subs	r4, r4, #4
   6a914:	add	r7, r7, #16
   6a918:	vld1.32	{d20-d21}, [ip]
   6a91c:	vmul.i32	q8, q9, q8
   6a920:	vld1.32	{d18-d19}, [r1]
   6a924:	vmul.i32	q8, q10, q8
   6a928:	vld1.32	{d20-d21}, [r0]
   6a92c:	mov	r0, r3
   6a930:	vmul.i32	q8, q9, q8
   6a934:	vmul.i32	q8, q10, q8
   6a938:	bne	6a900 <Mat_VarWrite4+0x180>
   6a93c:	ldr	r1, [sp, #4]
   6a940:	cmp	r1, #0
   6a944:	beq	6a960 <Mat_VarWrite4+0x1e0>
   6a948:	add	r0, sl, r7, lsl #2
   6a94c:	rsb	r3, r1, #0
   6a950:	vld1.32	{d18-d19}, [r0]!
   6a954:	adds	r3, r3, #1
   6a958:	vmul.i32	q8, q9, q8
   6a95c:	bcc	6a950 <Mat_VarWrite4+0x1d0>
   6a960:	vext.8	q9, q8, q8, #8
   6a964:	cmp	r8, r2
   6a968:	vmul.i32	q0, q8, q9
   6a96c:	vmul.i32	q8, q0, d0[1]
   6a970:	vmov.32	r7, d16[0]
   6a974:	beq	6a98c <Mat_VarWrite4+0x20c>
   6a978:	ldr	r0, [sl, r2, lsl #2]
   6a97c:	add	r2, r2, #1
   6a980:	cmp	r2, r8
   6a984:	mul	r7, r0, r7
   6a988:	blt	6a978 <Mat_VarWrite4+0x1f8>
   6a98c:	ldm	sl, {r0, r1}
   6a990:	mov	r2, #1
   6a994:	str	r0, [sp, #24]
   6a998:	str	r1, [sp, #28]
   6a99c:	mov	r1, #20
   6a9a0:	ldr	r0, [r5, #20]
   6a9a4:	cmp	r0, #0
   6a9a8:	movwne	r0, #1
   6a9ac:	str	r0, [sp, #32]
   6a9b0:	add	r0, sp, #20
   6a9b4:	ldr	r3, [r9]
   6a9b8:	bl	18ac <fwrite@plt>
   6a9bc:	ldr	r0, [r5, #36]	; 0x24
   6a9c0:	ldr	r3, [r9]
   6a9c4:	ldr	r2, [sp, #36]	; 0x24
   6a9c8:	mov	r1, #1
   6a9cc:	bl	18ac <fwrite@plt>
   6a9d0:	ldr	r0, [r5, #20]
   6a9d4:	cmp	r0, #0
   6a9d8:	beq	6aa04 <Mat_VarWrite4+0x284>
   6a9dc:	ldr	r4, [r5, #40]	; 0x28
   6a9e0:	ldr	r3, [r9]
   6a9e4:	ldr	r1, [r5, #12]
   6a9e8:	mov	r2, r7
   6a9ec:	ldr	r0, [r4]
   6a9f0:	bl	18ac <fwrite@plt>
   6a9f4:	ldr	r0, [r4, #4]
   6a9f8:	ldr	r1, [r5, #12]
   6a9fc:	ldr	r3, [r9]
   6aa00:	b	6aa10 <Mat_VarWrite4+0x290>
   6aa04:	ldr	r3, [r9]
   6aa08:	ldr	r1, [r5, #12]
   6aa0c:	ldr	r0, [r5, #40]	; 0x28
   6aa10:	mov	r2, r7
   6aa14:	bl	18ac <fwrite@plt>
   6aa18:	b	6a7a8 <Mat_VarWrite4+0x28>
   6aa1c:	orr	r0, r8, #1
   6aa20:	str	r0, [sp, #20]
   6aa24:	ldr	r8, [r5, #4]
   6aa28:	ldr	sl, [r5, #32]
   6aa2c:	cmp	r8, #1
   6aa30:	bge	6a85c <Mat_VarWrite4+0xdc>
   6aa34:	b	6a98c <Mat_VarWrite4+0x20c>
   6aa38:	mov	r1, #1
   6aa3c:	str	r1, [sp, #24]
   6aa40:	mov	sl, r0
   6aa44:	mov	r6, #0
   6aa48:	mov	r1, #4
   6aa4c:	mov	r2, #1
   6aa50:	ldr	r0, [r5, #20]
   6aa54:	str	r6, [sp, #32]
   6aa58:	cmp	r0, #0
   6aa5c:	add	r0, sp, #20
   6aa60:	movweq	r1, #3
   6aa64:	str	r1, [sp, #28]
   6aa68:	mov	r1, #20
   6aa6c:	ldr	r3, [r9]
   6aa70:	bl	18ac <fwrite@plt>
   6aa74:	ldr	r0, [r5, #36]	; 0x24
   6aa78:	ldr	r3, [r9]
   6aa7c:	ldr	r2, [sp, #36]	; 0x24
   6aa80:	mov	r1, #1
   6aa84:	bl	18ac <fwrite@plt>
   6aa88:	ldr	r1, [r7, #16]
   6aa8c:	cmp	r1, #2
   6aa90:	blt	6ab14 <Mat_VarWrite4+0x394>
   6aa94:	ldr	r0, [r7, #12]
   6aa98:	add	r8, sp, #8
   6aa9c:	b	6aab0 <Mat_VarWrite4+0x330>
   6aaa0:	ldr	r1, [r7, #16]
   6aaa4:	sub	r2, r1, #1
   6aaa8:	cmp	r6, r2
   6aaac:	bge	6ab14 <Mat_VarWrite4+0x394>
   6aab0:	ldr	r4, [r0, r6, lsl #2]
   6aab4:	add	r6, r6, #1
   6aab8:	ldr	r2, [r0, r6, lsl #2]
   6aabc:	cmp	r4, r2
   6aac0:	bge	6aaa4 <Mat_VarWrite4+0x324>
   6aac4:	ldr	r1, [r7, #20]
   6aac8:	cmp	r4, r1
   6aacc:	bge	6aaa0 <Mat_VarWrite4+0x320>
   6aad0:	ldr	r0, [r7, #4]
   6aad4:	mov	r1, #8
   6aad8:	mov	r2, #1
   6aadc:	ldr	r0, [r0, r4, lsl #2]
   6aae0:	add	r0, r0, #1
   6aae4:	vmov	s0, r0
   6aae8:	mov	r0, r8
   6aaec:	vcvt.f64.s32	d16, s0
   6aaf0:	vstr	d16, [sp, #8]
   6aaf4:	ldr	r3, [r9]
   6aaf8:	bl	18ac <fwrite@plt>
   6aafc:	ldr	r0, [r7, #12]
   6ab00:	add	r4, r4, #1
   6ab04:	ldr	r1, [r0, r6, lsl #2]
   6ab08:	cmp	r4, r1
   6ab0c:	blt	6aac4 <Mat_VarWrite4+0x344>
   6ab10:	b	6aaa0 <Mat_VarWrite4+0x320>
   6ab14:	ldr	r0, [r5, #32]
   6ab18:	mov	r1, #8
   6ab1c:	mov	r2, #1
   6ab20:	vldr	s0, [r0]
   6ab24:	add	r0, sp, #8
   6ab28:	vcvt.f64.u32	d16, s0
   6ab2c:	vstr	d16, [sp, #8]
   6ab30:	ldr	r3, [r9]
   6ab34:	bl	18ac <fwrite@plt>
   6ab38:	ldr	r1, [r7, #16]
   6ab3c:	cmp	r1, #2
   6ab40:	blt	6abbc <Mat_VarWrite4+0x43c>
   6ab44:	ldr	r0, [r7, #12]
   6ab48:	mov	r6, #0
   6ab4c:	add	r8, sp, #8
   6ab50:	b	6ab64 <Mat_VarWrite4+0x3e4>
   6ab54:	ldr	r1, [r7, #16]
   6ab58:	sub	r2, r1, #1
   6ab5c:	cmp	r6, r2
   6ab60:	bge	6abbc <Mat_VarWrite4+0x43c>
   6ab64:	ldr	r4, [r0, r6, lsl #2]
   6ab68:	add	r6, r6, #1
   6ab6c:	ldr	r2, [r0, r6, lsl #2]
   6ab70:	cmp	r4, r2
   6ab74:	bge	6ab58 <Mat_VarWrite4+0x3d8>
   6ab78:	vmov	s0, r6
   6ab7c:	vcvt.f64.s32	d8, s0
   6ab80:	ldr	r1, [r7, #20]
   6ab84:	cmp	r4, r1
   6ab88:	bge	6ab54 <Mat_VarWrite4+0x3d4>
   6ab8c:	vstr	d8, [sp, #8]
   6ab90:	mov	r0, r8
   6ab94:	mov	r1, #8
   6ab98:	mov	r2, #1
   6ab9c:	ldr	r3, [r9]
   6aba0:	bl	18ac <fwrite@plt>
   6aba4:	ldr	r0, [r7, #12]
   6aba8:	add	r4, r4, #1
   6abac:	ldr	r1, [r0, r6, lsl #2]
   6abb0:	cmp	r4, r1
   6abb4:	blt	6ab80 <Mat_VarWrite4+0x400>
   6abb8:	b	6ab54 <Mat_VarWrite4+0x3d4>
   6abbc:	ldr	r0, [r5, #32]
   6abc0:	mov	r1, #8
   6abc4:	mov	r2, #1
   6abc8:	vldr	s0, [r0, #4]
   6abcc:	add	r0, sp, #8
   6abd0:	vcvt.f64.u32	d16, s0
   6abd4:	vstr	d16, [sp, #8]
   6abd8:	ldr	r3, [r9]
   6abdc:	bl	18ac <fwrite@plt>
   6abe0:	mov	r0, #0
   6abe4:	str	r0, [sp, #12]
   6abe8:	str	r0, [sp, #8]
   6abec:	ldr	r0, [r5, #20]
   6abf0:	cmp	r0, #0
   6abf4:	beq	6ad34 <Mat_VarWrite4+0x5b4>
   6abf8:	ldr	r0, [r7, #24]
   6abfc:	ldr	r1, [r7, #16]
   6ac00:	mov	r4, sl
   6ac04:	ldr	r2, [r0, #4]
   6ac08:	cmp	r1, #2
   6ac0c:	str	r2, [sp, #4]
   6ac10:	blt	6ac94 <Mat_VarWrite4+0x514>
   6ac14:	ldr	sl, [r0]
   6ac18:	ldr	r0, [r7, #12]
   6ac1c:	mov	r6, #0
   6ac20:	b	6ac34 <Mat_VarWrite4+0x4b4>
   6ac24:	ldr	r1, [r7, #16]
   6ac28:	sub	r2, r1, #1
   6ac2c:	cmp	r6, r2
   6ac30:	bge	6ac94 <Mat_VarWrite4+0x514>
   6ac34:	ldr	r8, [r0, r6, lsl #2]
   6ac38:	add	r6, r6, #1
   6ac3c:	ldr	r2, [r0, r6, lsl #2]
   6ac40:	cmp	r8, r2
   6ac44:	bge	6ac28 <Mat_VarWrite4+0x4a8>
   6ac48:	ldr	r1, [r7, #20]
   6ac4c:	cmp	r8, r1
   6ac50:	bge	6ac24 <Mat_VarWrite4+0x4a4>
   6ac54:	mla	r5, r4, r8, sl
   6ac58:	ldr	r3, [r9]
   6ac5c:	mov	r0, r5
   6ac60:	mov	r1, r4
   6ac64:	mov	r2, #1
   6ac68:	bl	18ac <fwrite@plt>
   6ac6c:	ldr	r0, [r7, #12]
   6ac70:	add	r8, r8, #1
   6ac74:	ldr	r1, [r0, r6, lsl #2]
   6ac78:	cmp	r8, r1
   6ac7c:	bge	6ac24 <Mat_VarWrite4+0x4a4>
   6ac80:	ldr	r1, [r7, #20]
   6ac84:	add	r5, r5, r4
   6ac88:	cmp	r8, r1
   6ac8c:	blt	6ac58 <Mat_VarWrite4+0x4d8>
   6ac90:	b	6ac24 <Mat_VarWrite4+0x4a4>
   6ac94:	ldr	r3, [r9]
   6ac98:	add	r0, sp, #8
   6ac9c:	mov	r1, r4
   6aca0:	mov	r2, #1
   6aca4:	bl	18ac <fwrite@plt>
   6aca8:	ldr	r1, [r7, #16]
   6acac:	ldr	sl, [sp, #4]
   6acb0:	cmp	r1, #2
   6acb4:	blt	6adc4 <Mat_VarWrite4+0x644>
   6acb8:	ldr	r0, [r7, #12]
   6acbc:	mov	r8, #0
   6acc0:	b	6acd4 <Mat_VarWrite4+0x554>
   6acc4:	ldr	r1, [r7, #16]
   6acc8:	sub	r2, r1, #1
   6accc:	cmp	r8, r2
   6acd0:	bge	6adc4 <Mat_VarWrite4+0x644>
   6acd4:	ldr	r6, [r0, r8, lsl #2]
   6acd8:	add	r8, r8, #1
   6acdc:	ldr	r2, [r0, r8, lsl #2]
   6ace0:	cmp	r6, r2
   6ace4:	bge	6acc8 <Mat_VarWrite4+0x548>
   6ace8:	ldr	r1, [r7, #20]
   6acec:	cmp	r6, r1
   6acf0:	bge	6acc4 <Mat_VarWrite4+0x544>
   6acf4:	mla	r5, r4, r6, sl
   6acf8:	ldr	r3, [r9]
   6acfc:	mov	r0, r5
   6ad00:	mov	r1, r4
   6ad04:	mov	r2, #1
   6ad08:	bl	18ac <fwrite@plt>
   6ad0c:	ldr	r0, [r7, #12]
   6ad10:	add	r6, r6, #1
   6ad14:	ldr	r1, [r0, r8, lsl #2]
   6ad18:	cmp	r6, r1
   6ad1c:	bge	6acc4 <Mat_VarWrite4+0x544>
   6ad20:	ldr	r1, [r7, #20]
   6ad24:	add	r5, r5, r4
   6ad28:	cmp	r6, r1
   6ad2c:	blt	6acf8 <Mat_VarWrite4+0x578>
   6ad30:	b	6acc4 <Mat_VarWrite4+0x544>
   6ad34:	ldr	r1, [r7, #16]
   6ad38:	mov	r4, sl
   6ad3c:	cmp	r1, #2
   6ad40:	blt	6adc4 <Mat_VarWrite4+0x644>
   6ad44:	ldr	r8, [r7, #24]
   6ad48:	ldr	r0, [r7, #12]
   6ad4c:	mov	sl, #0
   6ad50:	b	6ad64 <Mat_VarWrite4+0x5e4>
   6ad54:	ldr	r1, [r7, #16]
   6ad58:	sub	r2, r1, #1
   6ad5c:	cmp	sl, r2
   6ad60:	bge	6adc4 <Mat_VarWrite4+0x644>
   6ad64:	ldr	r6, [r0, sl, lsl #2]
   6ad68:	add	sl, sl, #1
   6ad6c:	ldr	r2, [r0, sl, lsl #2]
   6ad70:	cmp	r6, r2
   6ad74:	bge	6ad58 <Mat_VarWrite4+0x5d8>
   6ad78:	ldr	r1, [r7, #20]
   6ad7c:	cmp	r6, r1
   6ad80:	bge	6ad54 <Mat_VarWrite4+0x5d4>
   6ad84:	mla	r5, r4, r6, r8
   6ad88:	ldr	r3, [r9]
   6ad8c:	mov	r0, r5
   6ad90:	mov	r1, r4
   6ad94:	mov	r2, #1
   6ad98:	bl	18ac <fwrite@plt>
   6ad9c:	ldr	r0, [r7, #12]
   6ada0:	add	r6, r6, #1
   6ada4:	ldr	r1, [r0, sl, lsl #2]
   6ada8:	cmp	r6, r1
   6adac:	bge	6ad54 <Mat_VarWrite4+0x5d4>
   6adb0:	ldr	r1, [r7, #20]
   6adb4:	add	r5, r5, r4
   6adb8:	cmp	r6, r1
   6adbc:	blt	6ad88 <Mat_VarWrite4+0x608>
   6adc0:	b	6ad54 <Mat_VarWrite4+0x5d4>
   6adc4:	ldr	r3, [r9]
   6adc8:	add	r0, sp, #8
   6adcc:	mov	r1, r4
   6add0:	mov	r2, #1
   6add4:	bl	18ac <fwrite@plt>
   6add8:	mov	r6, #0
   6addc:	b	6a7a8 <Mat_VarWrite4+0x28>
   6ade0:	.word	0x000079c4
   6ade4:	.word	0xe320f000

0006ade8 <Mat_VarRead4>:
   6ade8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6adec:	add	fp, sp, #28
   6adf0:	sub	sp, sp, #20
   6adf4:	mov	r5, r1
   6adf8:	mov	sl, r0
   6adfc:	mov	r4, #1
   6ae00:	add	r1, sp, #16
   6ae04:	mov	r0, r5
   6ae08:	str	r4, [sp, #16]
   6ae0c:	bl	6be10 <SafeMulDims>
   6ae10:	ldr	r1, [r5, #52]	; 0x34
   6ae14:	ldr	r0, [sl]
   6ae18:	mov	r2, #0
   6ae1c:	ldr	r1, [r1]
   6ae20:	bl	1a2c <fseek@plt>
   6ae24:	ldr	r0, [r5, #16]
   6ae28:	cmp	r0, #4
   6ae2c:	beq	6ae98 <Mat_VarRead4+0xb0>
   6ae30:	cmp	r0, #5
   6ae34:	beq	6aedc <Mat_VarRead4+0xf4>
   6ae38:	cmp	r0, #6
   6ae3c:	bne	6b060 <Mat_VarRead4+0x278>
   6ae40:	mov	r0, #8
   6ae44:	mov	r2, #8
   6ae48:	str	r0, [r5, #12]
   6ae4c:	mov	r0, r5
   6ae50:	ldr	r1, [sp, #16]
   6ae54:	bl	6be6c <SafeMul>
   6ae58:	ldr	r1, [r5, #20]
   6ae5c:	ldr	r0, [r5]
   6ae60:	cmp	r1, #0
   6ae64:	beq	6b074 <Mat_VarRead4+0x28c>
   6ae68:	bl	6bd7c <ComplexMalloc>
   6ae6c:	cmp	r0, #0
   6ae70:	beq	6b0d8 <Mat_VarRead4+0x2f0>
   6ae74:	str	r0, [r5, #40]	; 0x28
   6ae78:	mov	r6, r0
   6ae7c:	ldr	r1, [r0]
   6ae80:	ldr	r2, [r5, #8]
   6ae84:	ldr	r3, [sp, #16]
   6ae88:	mov	r0, sl
   6ae8c:	bl	3a8c <ReadDoubleData>
   6ae90:	ldr	r1, [r6, #4]
   6ae94:	b	6b088 <Mat_VarRead4+0x2a0>
   6ae98:	str	r4, [r5, #12]
   6ae9c:	ldr	r6, [sp, #16]
   6aea0:	mov	r0, r6
   6aea4:	str	r6, [r5]
   6aea8:	bl	18d0 <malloc@plt>
   6aeac:	cmp	r0, #0
   6aeb0:	str	r0, [r5, #40]	; 0x28
   6aeb4:	beq	6b0a8 <Mat_VarRead4+0x2c0>
   6aeb8:	ldr	r2, [r5, #8]
   6aebc:	mov	r1, r0
   6aec0:	mov	r0, sl
   6aec4:	mov	r3, r6
   6aec8:	bl	222e8 <ReadUInt8Data>
   6aecc:	mov	r0, #2
   6aed0:	str	r0, [r5, #8]
   6aed4:	sub	sp, fp, #28
   6aed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6aedc:	mov	r0, #28
   6aee0:	str	r0, [r5, #12]
   6aee4:	mov	r0, #28
   6aee8:	bl	18d0 <malloc@plt>
   6aeec:	cmp	r0, #0
   6aef0:	str	r0, [r5, #40]	; 0x28
   6aef4:	beq	6b0c4 <Mat_VarRead4+0x2dc>
   6aef8:	mov	r6, r0
   6aefc:	ldr	r0, [r5, #32]
   6af00:	ldr	r1, [r0, #4]
   6af04:	sub	r1, r1, #4
   6af08:	clz	r1, r1
   6af0c:	lsr	r1, r1, #5
   6af10:	str	r1, [r5, #20]
   6af14:	ldr	r0, [r0]
   6af18:	sub	r7, r0, #1
   6af1c:	lsl	r0, r7, #2
   6af20:	str	r7, [r6]
   6af24:	str	r7, [r6, #8]
   6af28:	bl	18d0 <malloc@plt>
   6af2c:	cmp	r0, #0
   6af30:	str	r0, [r6, #4]
   6af34:	beq	6b0e4 <Mat_VarRead4+0x2fc>
   6af38:	mov	r1, r0
   6af3c:	mov	r0, sl
   6af40:	mov	r2, #9
   6af44:	mov	r3, r7
   6af48:	bl	11a80 <ReadInt32Data>
   6af4c:	ldr	r0, [r6, #8]
   6af50:	cmp	r0, #1
   6af54:	blt	6af7c <Mat_VarRead4+0x194>
   6af58:	ldr	r0, [r6, #4]
   6af5c:	mov	r1, #0
   6af60:	ldr	r2, [r0, r1, lsl #2]
   6af64:	sub	r2, r2, #1
   6af68:	str	r2, [r0, r1, lsl #2]
   6af6c:	add	r1, r1, #1
   6af70:	ldr	r2, [r6, #8]
   6af74:	cmp	r1, r2
   6af78:	blt	6af60 <Mat_VarRead4+0x178>
   6af7c:	add	r1, sp, #8
   6af80:	mov	r0, sl
   6af84:	mov	r2, #9
   6af88:	mov	r3, #1
   6af8c:	bl	3a8c <ReadDoubleData>
   6af90:	vldr	d16, [sp, #8]
   6af94:	ldr	r0, [r5, #32]
   6af98:	vcvt.u32.f64	s0, d16
   6af9c:	vstr	s0, [r0]
   6afa0:	ldr	r0, [sl]
   6afa4:	bl	1840 <ftell@plt>
   6afa8:	cmn	r0, #1
   6afac:	beq	6b108 <Mat_VarRead4+0x320>
   6afb0:	ldr	r7, [sl]
   6afb4:	ldr	r4, [r6, #8]
   6afb8:	mov	r8, r0
   6afbc:	mov	r0, #9
   6afc0:	bl	1924 <Mat_SizeOf@plt>
   6afc4:	mul	r1, r0, r4
   6afc8:	mov	r0, r7
   6afcc:	mov	r2, #1
   6afd0:	bl	1a2c <fseek@plt>
   6afd4:	add	r1, sp, #8
   6afd8:	mov	r0, sl
   6afdc:	mov	r2, #9
   6afe0:	mov	r3, #1
   6afe4:	bl	3a8c <ReadDoubleData>
   6afe8:	vldr	d16, [sp, #8]
   6afec:	vldr	d17, [pc, #980]	; 6b3c8 <Mat_VarRead4+0x5e0>
   6aff0:	vcmpe.f64	d16, d17
   6aff4:	vmrs	APSR_nzcv, fpscr
   6aff8:	bgt	6b150 <Mat_VarRead4+0x368>
   6affc:	vcmpe.f64	d16, #0.0
   6b000:	vmrs	APSR_nzcv, fpscr
   6b004:	bmi	6b150 <Mat_VarRead4+0x368>
   6b008:	ldr	r0, [r5, #32]
   6b00c:	vcvt.u32.f64	s0, d16
   6b010:	mov	r1, r8
   6b014:	mov	r2, #0
   6b018:	mov	r4, #0
   6b01c:	vstr	s0, [r0, #4]
   6b020:	ldr	r0, [sl]
   6b024:	bl	1a2c <fseek@plt>
   6b028:	ldr	r0, [r5, #32]
   6b02c:	ldr	r0, [r0, #4]
   6b030:	cmn	r0, #-2147483647	; 0x80000001
   6b034:	bcc	6b17c <Mat_VarRead4+0x394>
   6b038:	ldr	r0, [r6, #4]
   6b03c:	bl	1804 <free@plt>
   6b040:	ldr	r0, [r5, #40]	; 0x28
   6b044:	bl	1804 <free@plt>
   6b048:	str	r4, [r5, #40]	; 0x28
   6b04c:	ldr	r0, [pc, #1704]	; 6b6fc <Mat_VarRead4+0x914>
   6b050:	add	r0, pc, r0
   6b054:	bl	19b4 <Mat_Critical@plt>
   6b058:	sub	sp, fp, #28
   6b05c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b060:	ldr	r0, [pc, #1708]	; 6b714 <Mat_VarRead4+0x92c>
   6b064:	add	r0, pc, r0
   6b068:	bl	19b4 <Mat_Critical@plt>
   6b06c:	sub	sp, fp, #28
   6b070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b074:	bl	18d0 <malloc@plt>
   6b078:	cmp	r0, #0
   6b07c:	str	r0, [r5, #40]	; 0x28
   6b080:	beq	6b134 <Mat_VarRead4+0x34c>
   6b084:	mov	r1, r0
   6b088:	ldr	r2, [r5, #8]
   6b08c:	ldr	r3, [sp, #16]
   6b090:	mov	r0, sl
   6b094:	bl	3a8c <ReadDoubleData>
   6b098:	mov	r0, #9
   6b09c:	str	r0, [r5, #8]
   6b0a0:	sub	sp, fp, #28
   6b0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b0a8:	ldr	r0, [pc, #1600]	; 6b6f0 <Mat_VarRead4+0x908>
   6b0ac:	add	r0, pc, r0
   6b0b0:	bl	19b4 <Mat_Critical@plt>
   6b0b4:	mov	r0, #2
   6b0b8:	str	r0, [r5, #8]
   6b0bc:	sub	sp, fp, #28
   6b0c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b0c4:	ldr	r0, [pc, #1604]	; 6b710 <Mat_VarRead4+0x928>
   6b0c8:	add	r0, pc, r0
   6b0cc:	bl	19b4 <Mat_Critical@plt>
   6b0d0:	sub	sp, fp, #28
   6b0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b0d8:	ldr	r0, [pc, #1544]	; 6b6e8 <Mat_VarRead4+0x900>
   6b0dc:	add	r0, pc, r0
   6b0e0:	b	6b13c <Mat_VarRead4+0x354>
   6b0e4:	mov	r0, r6
   6b0e8:	bl	1804 <free@plt>
   6b0ec:	mov	r0, #0
   6b0f0:	str	r0, [r5, #40]	; 0x28
   6b0f4:	ldr	r0, [pc, #1564]	; 6b718 <Mat_VarRead4+0x930>
   6b0f8:	add	r0, pc, r0
   6b0fc:	bl	19b4 <Mat_Critical@plt>
   6b100:	sub	sp, fp, #28
   6b104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b108:	ldr	r0, [r6, #4]
   6b10c:	bl	1804 <free@plt>
   6b110:	ldr	r0, [r5, #40]	; 0x28
   6b114:	bl	1804 <free@plt>
   6b118:	mov	r0, #0
   6b11c:	str	r0, [r5, #40]	; 0x28
   6b120:	ldr	r0, [pc, #1484]	; 6b6f4 <Mat_VarRead4+0x90c>
   6b124:	add	r0, pc, r0
   6b128:	bl	19b4 <Mat_Critical@plt>
   6b12c:	sub	sp, fp, #28
   6b130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b134:	ldr	r0, [pc, #1456]	; 6b6ec <Mat_VarRead4+0x904>
   6b138:	add	r0, pc, r0
   6b13c:	bl	19b4 <Mat_Critical@plt>
   6b140:	mov	r0, #9
   6b144:	str	r0, [r5, #8]
   6b148:	sub	sp, fp, #28
   6b14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b150:	ldr	r0, [r6, #4]
   6b154:	bl	1804 <free@plt>
   6b158:	ldr	r0, [r5, #40]	; 0x28
   6b15c:	bl	1804 <free@plt>
   6b160:	mov	r0, #0
   6b164:	str	r0, [r5, #40]	; 0x28
   6b168:	ldr	r0, [pc, #1416]	; 6b6f8 <Mat_VarRead4+0x910>
   6b16c:	add	r0, pc, r0
   6b170:	bl	19b4 <Mat_Critical@plt>
   6b174:	sub	sp, fp, #28
   6b178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b17c:	add	r0, r0, #1
   6b180:	str	r0, [r6, #16]
   6b184:	lsl	r0, r0, #2
   6b188:	bl	18d0 <malloc@plt>
   6b18c:	cmp	r0, #0
   6b190:	str	r0, [r6, #12]
   6b194:	beq	6b320 <Mat_VarRead4+0x538>
   6b198:	ldr	r9, [r6, #8]
   6b19c:	mov	r8, r0
   6b1a0:	lsl	r0, r9, #2
   6b1a4:	bl	18d0 <malloc@plt>
   6b1a8:	cmp	r0, #0
   6b1ac:	beq	6b318 <Mat_VarRead4+0x530>
   6b1b0:	mov	r7, r0
   6b1b4:	mov	r4, #0
   6b1b8:	mov	r0, sl
   6b1bc:	mov	r2, #9
   6b1c0:	mov	r3, r9
   6b1c4:	mov	r1, r7
   6b1c8:	str	r4, [r8]
   6b1cc:	bl	11a80 <ReadInt32Data>
   6b1d0:	ldr	r0, [r6, #16]
   6b1d4:	cmp	r0, #3
   6b1d8:	blt	6b230 <Mat_VarRead4+0x448>
   6b1dc:	ldr	r0, [r6, #12]
   6b1e0:	mov	r1, #1
   6b1e4:	ldr	r2, [r6, #8]
   6b1e8:	cmp	r4, r2
   6b1ec:	blt	6b214 <Mat_VarRead4+0x42c>
   6b1f0:	str	r4, [r0, r1, lsl #2]
   6b1f4:	add	r1, r1, #1
   6b1f8:	ldr	r2, [r6, #16]
   6b1fc:	sub	r2, r2, #1
   6b200:	cmp	r1, r2
   6b204:	bge	6b230 <Mat_VarRead4+0x448>
   6b208:	ldr	r2, [r6, #8]
   6b20c:	cmp	r4, r2
   6b210:	bge	6b1f0 <Mat_VarRead4+0x408>
   6b214:	ldr	r3, [r7, r4, lsl #2]
   6b218:	cmp	r3, r1
   6b21c:	bgt	6b1f0 <Mat_VarRead4+0x408>
   6b220:	add	r4, r4, #1
   6b224:	cmp	r4, r2
   6b228:	blt	6b214 <Mat_VarRead4+0x42c>
   6b22c:	b	6b1f0 <Mat_VarRead4+0x408>
   6b230:	mov	r0, r7
   6b234:	bl	1804 <free@plt>
   6b238:	add	r2, r6, #8
   6b23c:	mov	r3, #1
   6b240:	ldm	r2, {r0, r1, r2}
   6b244:	add	r1, r1, r2, lsl #2
   6b248:	mov	r2, #9
   6b24c:	str	r0, [r1, #-4]
   6b250:	add	r1, sp, #8
   6b254:	mov	r0, sl
   6b258:	bl	3a8c <ReadDoubleData>
   6b25c:	ldr	r4, [r6, #8]
   6b260:	str	r4, [r6, #20]
   6b264:	ldr	r9, [r5, #8]
   6b268:	ldr	r7, [r5, #20]
   6b26c:	mov	r0, r9
   6b270:	bl	1924 <Mat_SizeOf@plt>
   6b274:	mul	r0, r0, r4
   6b278:	cmp	r7, #0
   6b27c:	beq	6b34c <Mat_VarRead4+0x564>
   6b280:	bl	6bd7c <ComplexMalloc>
   6b284:	cmp	r0, #0
   6b288:	beq	6b3d0 <Mat_VarRead4+0x5e8>
   6b28c:	mov	r8, r0
   6b290:	str	r0, [r6, #24]
   6b294:	sub	r0, r9, #2
   6b298:	cmp	r0, #7
   6b29c:	bhi	6b51c <Mat_VarRead4+0x734>
   6b2a0:	add	r1, pc, #4
   6b2a4:	ldr	r0, [r1, r0, lsl #2]
   6b2a8:	add	pc, r1, r0
   6b2ac:	.word	0x00000020
   6b2b0:	.word	0x0000018c
   6b2b4:	.word	0x000001d8
   6b2b8:	.word	0x00000224
   6b2bc:	.word	0x00000270
   6b2c0:	.word	0x00000288
   6b2c4:	.word	0x00000270
   6b2c8:	.word	0x000002d4
   6b2cc:	ldr	r3, [r6, #20]
   6b2d0:	ldr	r1, [r8]
   6b2d4:	mov	r0, sl
   6b2d8:	mov	r2, #2
   6b2dc:	bl	222e8 <ReadUInt8Data>
   6b2e0:	add	r5, sp, #4
   6b2e4:	mov	r0, sl
   6b2e8:	mov	r2, #2
   6b2ec:	mov	r3, #1
   6b2f0:	mov	r1, r5
   6b2f4:	bl	222e8 <ReadUInt8Data>
   6b2f8:	ldr	r1, [r8, #4]
   6b2fc:	ldr	r3, [r6, #20]
   6b300:	mov	r0, sl
   6b304:	mov	r2, #2
   6b308:	bl	222e8 <ReadUInt8Data>
   6b30c:	mov	r0, sl
   6b310:	mov	r1, r5
   6b314:	b	6b3b0 <Mat_VarRead4+0x5c8>
   6b318:	mov	r0, r8
   6b31c:	bl	1804 <free@plt>
   6b320:	ldr	r0, [r6, #4]
   6b324:	bl	1804 <free@plt>
   6b328:	ldr	r0, [r5, #40]	; 0x28
   6b32c:	bl	1804 <free@plt>
   6b330:	mov	r0, #0
   6b334:	str	r0, [r5, #40]	; 0x28
   6b338:	ldr	r0, [pc, #960]	; 6b700 <Mat_VarRead4+0x918>
   6b33c:	add	r0, pc, r0
   6b340:	bl	19b4 <Mat_Critical@plt>
   6b344:	sub	sp, fp, #28
   6b348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b34c:	bl	18d0 <malloc@plt>
   6b350:	cmp	r0, #0
   6b354:	str	r0, [r6, #24]
   6b358:	beq	6b404 <Mat_VarRead4+0x61c>
   6b35c:	mov	r1, r0
   6b360:	sub	r0, r9, #2
   6b364:	cmp	r0, #7
   6b368:	bhi	6b650 <Mat_VarRead4+0x868>
   6b36c:	add	r2, pc, #4
   6b370:	ldr	r0, [r2, r0, lsl #2]
   6b374:	add	pc, r2, r0
   6b378:	.word	0x00000020
   6b37c:	.word	0x00000254
   6b380:	.word	0x00000280
   6b384:	.word	0x000002ac
   6b388:	.word	0x000002d8
   6b38c:	.word	0x00000318
   6b390:	.word	0x000002d8
   6b394:	.word	0x00000344
   6b398:	ldr	r3, [r6, #20]
   6b39c:	mov	r0, sl
   6b3a0:	mov	r2, #2
   6b3a4:	bl	222e8 <ReadUInt8Data>
   6b3a8:	add	r1, sp, #4
   6b3ac:	mov	r0, sl
   6b3b0:	mov	r2, #2
   6b3b4:	mov	r3, #1
   6b3b8:	bl	222e8 <ReadUInt8Data>
   6b3bc:	sub	sp, fp, #28
   6b3c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b3c4:	nop	{0}
   6b3c8:	.word	0xff800000
   6b3cc:	.word	0x41dfffff
   6b3d0:	ldr	r0, [r6, #12]
   6b3d4:	bl	1804 <free@plt>
   6b3d8:	ldr	r0, [r6, #4]
   6b3dc:	bl	1804 <free@plt>
   6b3e0:	ldr	r0, [r5, #40]	; 0x28
   6b3e4:	bl	1804 <free@plt>
   6b3e8:	mov	r0, #0
   6b3ec:	str	r0, [r5, #40]	; 0x28
   6b3f0:	ldr	r0, [pc, #780]	; 6b704 <Mat_VarRead4+0x91c>
   6b3f4:	add	r0, pc, r0
   6b3f8:	bl	19b4 <Mat_Critical@plt>
   6b3fc:	sub	sp, fp, #28
   6b400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b404:	ldr	r0, [r6, #12]
   6b408:	bl	1804 <free@plt>
   6b40c:	ldr	r0, [r6, #4]
   6b410:	bl	1804 <free@plt>
   6b414:	ldr	r0, [r5, #40]	; 0x28
   6b418:	bl	1804 <free@plt>
   6b41c:	mov	r0, #0
   6b420:	str	r0, [r5, #40]	; 0x28
   6b424:	ldr	r0, [pc, #736]	; 6b70c <Mat_VarRead4+0x924>
   6b428:	add	r0, pc, r0
   6b42c:	bl	19b4 <Mat_Critical@plt>
   6b430:	sub	sp, fp, #28
   6b434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b438:	ldr	r3, [r6, #20]
   6b43c:	ldr	r1, [r8]
   6b440:	mov	r0, sl
   6b444:	mov	r2, #3
   6b448:	bl	192d0 <ReadInt16Data>
   6b44c:	add	r5, sp, #4
   6b450:	mov	r0, sl
   6b454:	mov	r2, #3
   6b458:	mov	r3, #1
   6b45c:	mov	r1, r5
   6b460:	bl	192d0 <ReadInt16Data>
   6b464:	ldr	r1, [r8, #4]
   6b468:	ldr	r3, [r6, #20]
   6b46c:	mov	r0, sl
   6b470:	mov	r2, #3
   6b474:	bl	192d0 <ReadInt16Data>
   6b478:	mov	r0, sl
   6b47c:	mov	r1, r5
   6b480:	b	6b5e4 <Mat_VarRead4+0x7fc>
   6b484:	ldr	r3, [r6, #20]
   6b488:	ldr	r1, [r8]
   6b48c:	mov	r0, sl
   6b490:	mov	r2, #4
   6b494:	bl	1c314 <ReadUInt16Data>
   6b498:	add	r5, sp, #4
   6b49c:	mov	r0, sl
   6b4a0:	mov	r2, #4
   6b4a4:	mov	r3, #1
   6b4a8:	mov	r1, r5
   6b4ac:	bl	1c314 <ReadUInt16Data>
   6b4b0:	ldr	r1, [r8, #4]
   6b4b4:	ldr	r3, [r6, #20]
   6b4b8:	mov	r0, sl
   6b4bc:	mov	r2, #4
   6b4c0:	bl	1c314 <ReadUInt16Data>
   6b4c4:	mov	r0, sl
   6b4c8:	mov	r1, r5
   6b4cc:	b	6b610 <Mat_VarRead4+0x828>
   6b4d0:	ldr	r3, [r6, #20]
   6b4d4:	ldr	r1, [r8]
   6b4d8:	mov	r0, sl
   6b4dc:	mov	r2, #5
   6b4e0:	bl	11a80 <ReadInt32Data>
   6b4e4:	add	r5, sp, #4
   6b4e8:	mov	r0, sl
   6b4ec:	mov	r2, #5
   6b4f0:	mov	r3, #1
   6b4f4:	mov	r1, r5
   6b4f8:	bl	11a80 <ReadInt32Data>
   6b4fc:	ldr	r1, [r8, #4]
   6b500:	ldr	r3, [r6, #20]
   6b504:	mov	r0, sl
   6b508:	mov	r2, #5
   6b50c:	bl	11a80 <ReadInt32Data>
   6b510:	mov	r0, sl
   6b514:	mov	r1, r5
   6b518:	b	6b63c <Mat_VarRead4+0x854>
   6b51c:	ldr	r0, [r8]
   6b520:	bl	1804 <free@plt>
   6b524:	ldr	r0, [r8, #4]
   6b528:	bl	1804 <free@plt>
   6b52c:	mov	r0, r8
   6b530:	b	6b654 <Mat_VarRead4+0x86c>
   6b534:	ldr	r3, [r6, #20]
   6b538:	ldr	r1, [r8]
   6b53c:	mov	r0, sl
   6b540:	mov	r2, #7
   6b544:	bl	8d54 <ReadSingleData>
   6b548:	add	r5, sp, #4
   6b54c:	mov	r0, sl
   6b550:	mov	r2, #7
   6b554:	mov	r3, #1
   6b558:	mov	r1, r5
   6b55c:	bl	8d54 <ReadSingleData>
   6b560:	ldr	r1, [r8, #4]
   6b564:	ldr	r3, [r6, #20]
   6b568:	mov	r0, sl
   6b56c:	mov	r2, #7
   6b570:	bl	8d54 <ReadSingleData>
   6b574:	mov	r0, sl
   6b578:	mov	r1, r5
   6b57c:	b	6b6a8 <Mat_VarRead4+0x8c0>
   6b580:	ldr	r3, [r6, #20]
   6b584:	ldr	r1, [r8]
   6b588:	mov	r0, sl
   6b58c:	mov	r2, #9
   6b590:	bl	3a8c <ReadDoubleData>
   6b594:	add	r5, sp, #8
   6b598:	mov	r0, sl
   6b59c:	mov	r2, #9
   6b5a0:	mov	r3, #1
   6b5a4:	mov	r1, r5
   6b5a8:	bl	3a8c <ReadDoubleData>
   6b5ac:	ldr	r1, [r8, #4]
   6b5b0:	ldr	r3, [r6, #20]
   6b5b4:	mov	r0, sl
   6b5b8:	mov	r2, #9
   6b5bc:	bl	3a8c <ReadDoubleData>
   6b5c0:	mov	r0, sl
   6b5c4:	mov	r1, r5
   6b5c8:	b	6b6d4 <Mat_VarRead4+0x8ec>
   6b5cc:	ldr	r3, [r6, #20]
   6b5d0:	mov	r0, sl
   6b5d4:	mov	r2, #3
   6b5d8:	bl	192d0 <ReadInt16Data>
   6b5dc:	add	r1, sp, #4
   6b5e0:	mov	r0, sl
   6b5e4:	mov	r2, #3
   6b5e8:	mov	r3, #1
   6b5ec:	bl	192d0 <ReadInt16Data>
   6b5f0:	sub	sp, fp, #28
   6b5f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b5f8:	ldr	r3, [r6, #20]
   6b5fc:	mov	r0, sl
   6b600:	mov	r2, #4
   6b604:	bl	1c314 <ReadUInt16Data>
   6b608:	add	r1, sp, #4
   6b60c:	mov	r0, sl
   6b610:	mov	r2, #4
   6b614:	mov	r3, #1
   6b618:	bl	1c314 <ReadUInt16Data>
   6b61c:	sub	sp, fp, #28
   6b620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b624:	ldr	r3, [r6, #20]
   6b628:	mov	r0, sl
   6b62c:	mov	r2, #5
   6b630:	bl	11a80 <ReadInt32Data>
   6b634:	add	r1, sp, #4
   6b638:	mov	r0, sl
   6b63c:	mov	r2, #5
   6b640:	mov	r3, #1
   6b644:	bl	11a80 <ReadInt32Data>
   6b648:	sub	sp, fp, #28
   6b64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b650:	mov	r0, r1
   6b654:	bl	1804 <free@plt>
   6b658:	ldr	r0, [r6, #12]
   6b65c:	bl	1804 <free@plt>
   6b660:	ldr	r0, [r6, #4]
   6b664:	bl	1804 <free@plt>
   6b668:	ldr	r0, [r5, #40]	; 0x28
   6b66c:	bl	1804 <free@plt>
   6b670:	mov	r0, #0
   6b674:	mov	r1, r9
   6b678:	str	r0, [r5, #40]	; 0x28
   6b67c:	ldr	r0, [pc, #132]	; 6b708 <Mat_VarRead4+0x920>
   6b680:	add	r0, pc, r0
   6b684:	bl	19b4 <Mat_Critical@plt>
   6b688:	sub	sp, fp, #28
   6b68c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b690:	ldr	r3, [r6, #20]
   6b694:	mov	r0, sl
   6b698:	mov	r2, #7
   6b69c:	bl	8d54 <ReadSingleData>
   6b6a0:	add	r1, sp, #4
   6b6a4:	mov	r0, sl
   6b6a8:	mov	r2, #7
   6b6ac:	mov	r3, #1
   6b6b0:	bl	8d54 <ReadSingleData>
   6b6b4:	sub	sp, fp, #28
   6b6b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b6bc:	ldr	r3, [r6, #20]
   6b6c0:	mov	r0, sl
   6b6c4:	mov	r2, #9
   6b6c8:	bl	3a8c <ReadDoubleData>
   6b6cc:	add	r1, sp, #8
   6b6d0:	mov	r0, sl
   6b6d4:	mov	r2, #9
   6b6d8:	mov	r3, #1
   6b6dc:	bl	3a8c <ReadDoubleData>
   6b6e0:	sub	sp, fp, #28
   6b6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b6e8:	.word	0x00006d91
   6b6ec:	.word	0x00006bd8
   6b6f0:	.word	0x00006c64
   6b6f4:	.word	0x00006b40
   6b6f8:	.word	0x00006fa4
   6b6fc:	.word	0x000070c0
   6b700:	.word	0x00006dff
   6b704:	.word	0x000069ed
   6b708:	.word	0x00006aef
   6b70c:	.word	0x000069ee
   6b710:	.word	0x00006c48
   6b714:	.word	0x0000714d
   6b718:	.word	0x00006fe6

0006b71c <Mat_VarReadData4>:
   6b71c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6b720:	add	fp, sp, #28
   6b724:	sub	sp, sp, #28
   6b728:	mov	r7, r1
   6b72c:	ldr	r1, [r1, #52]	; 0x34
   6b730:	mov	r4, r0
   6b734:	ldr	r0, [r0]
   6b738:	mov	r8, r2
   6b73c:	mov	r2, #0
   6b740:	mov	r5, r3
   6b744:	ldr	r1, [r1]
   6b748:	bl	1a2c <fseek@plt>
   6b74c:	ldr	r3, [r7, #8]
   6b750:	mov	r6, #1
   6b754:	cmp	r3, #9
   6b758:	bhi	6b854 <Mat_VarReadData4+0x138>
   6b75c:	mov	r0, #1
   6b760:	mov	r1, #700	; 0x2bc
   6b764:	tst	r1, r0, lsl r3
   6b768:	beq	6b854 <Mat_VarReadData4+0x138>
   6b76c:	ldr	r0, [r7, #4]
   6b770:	ldr	r9, [fp, #12]
   6b774:	ldr	sl, [fp, #8]
   6b778:	cmp	r0, #2
   6b77c:	bne	6b860 <Mat_VarReadData4+0x144>
   6b780:	ldr	r2, [r9]
   6b784:	ldr	r0, [r5]
   6b788:	ldr	r1, [sl]
   6b78c:	mov	r6, #1
   6b790:	sub	r2, r2, #1
   6b794:	mla	r0, r2, r1, r0
   6b798:	add	r1, r0, #1
   6b79c:	ldr	r0, [r7, #32]
   6b7a0:	ldr	r2, [r0]
   6b7a4:	cmp	r1, r2
   6b7a8:	bhi	6b7d4 <Mat_VarReadData4+0xb8>
   6b7ac:	ldr	r6, [r9, #4]
   6b7b0:	ldr	r1, [r5, #4]
   6b7b4:	ldr	r2, [sl, #4]
   6b7b8:	sub	r6, r6, #1
   6b7bc:	mla	r1, r6, r2, r1
   6b7c0:	ldr	r2, [r0, #4]
   6b7c4:	mov	r6, #0
   6b7c8:	add	r1, r1, #1
   6b7cc:	cmp	r1, r2
   6b7d0:	movwhi	r6, #1
   6b7d4:	ldr	r1, [r7, #20]
   6b7d8:	cmp	r1, #0
   6b7dc:	beq	6b900 <Mat_VarReadData4+0x1e4>
   6b7e0:	mov	r0, r3
   6b7e4:	bl	1924 <Mat_SizeOf@plt>
   6b7e8:	str	r0, [sp, #24]
   6b7ec:	add	r1, sp, #24
   6b7f0:	mov	r0, r7
   6b7f4:	bl	6be10 <SafeMulDims>
   6b7f8:	ldr	r0, [r7, #32]
   6b7fc:	ldr	r1, [r8]
   6b800:	ldr	r3, [r7, #8]
   6b804:	ldr	r2, [r7, #16]
   6b808:	stm	sp, {r0, r5, sl}
   6b80c:	mov	r0, r4
   6b810:	str	r9, [sp, #12]
   6b814:	bl	2e804 <ReadDataSlab2>
   6b818:	ldr	r0, [r7, #52]	; 0x34
   6b81c:	ldr	r1, [sp, #24]
   6b820:	mov	r2, #0
   6b824:	ldr	r0, [r0]
   6b828:	add	r1, r1, r0
   6b82c:	ldr	r0, [r4]
   6b830:	bl	1a2c <fseek@plt>
   6b834:	ldr	r0, [r7, #32]
   6b838:	ldr	r1, [r8, #4]
   6b83c:	ldr	r3, [r7, #8]
   6b840:	ldr	r2, [r7, #16]
   6b844:	stm	sp, {r0, r5, sl}
   6b848:	mov	r0, r4
   6b84c:	str	r9, [sp, #12]
   6b850:	bl	2e804 <ReadDataSlab2>
   6b854:	mov	r0, r6
   6b858:	sub	sp, fp, #28
   6b85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b860:	ldr	r1, [r7, #20]
   6b864:	cmp	r1, #0
   6b868:	beq	6b924 <Mat_VarReadData4+0x208>
   6b86c:	mov	r0, r3
   6b870:	bl	1924 <Mat_SizeOf@plt>
   6b874:	str	r0, [sp, #20]
   6b878:	add	r1, sp, #20
   6b87c:	mov	r0, r7
   6b880:	bl	6be10 <SafeMulDims>
   6b884:	ldr	r1, [r8]
   6b888:	ldmib	r7, {r0, r3}
   6b88c:	ldr	r2, [r7, #16]
   6b890:	ldr	r6, [r7, #32]
   6b894:	stm	sp, {r0, r6}
   6b898:	mov	r0, r4
   6b89c:	str	r5, [sp, #8]
   6b8a0:	str	sl, [sp, #12]
   6b8a4:	str	r9, [sp, #16]
   6b8a8:	bl	25508 <ReadDataSlabN>
   6b8ac:	ldr	r0, [r7, #52]	; 0x34
   6b8b0:	ldr	r1, [sp, #20]
   6b8b4:	mov	r2, #0
   6b8b8:	mov	r6, #0
   6b8bc:	ldr	r0, [r0]
   6b8c0:	add	r1, r1, r0
   6b8c4:	ldr	r0, [r4]
   6b8c8:	bl	1a2c <fseek@plt>
   6b8cc:	ldr	r1, [r8, #4]
   6b8d0:	ldmib	r7, {r0, r3}
   6b8d4:	ldr	r2, [r7, #16]
   6b8d8:	ldr	r7, [r7, #32]
   6b8dc:	stm	sp, {r0, r7}
   6b8e0:	mov	r0, r4
   6b8e4:	str	r5, [sp, #8]
   6b8e8:	str	sl, [sp, #12]
   6b8ec:	str	r9, [sp, #16]
   6b8f0:	bl	25508 <ReadDataSlabN>
   6b8f4:	mov	r0, r6
   6b8f8:	sub	sp, fp, #28
   6b8fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b900:	ldr	r2, [r7, #16]
   6b904:	stm	sp, {r0, r5, sl}
   6b908:	mov	r0, r4
   6b90c:	mov	r1, r8
   6b910:	str	r9, [sp, #12]
   6b914:	bl	2e804 <ReadDataSlab2>
   6b918:	mov	r0, r6
   6b91c:	sub	sp, fp, #28
   6b920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6b924:	ldr	r2, [r7, #16]
   6b928:	ldr	r1, [r7, #32]
   6b92c:	stm	sp, {r0, r1, r5, sl}
   6b930:	mov	r0, r4
   6b934:	mov	r1, r8
   6b938:	str	r9, [sp, #16]
   6b93c:	bl	25508 <ReadDataSlabN>
   6b940:	mov	r6, #0
   6b944:	mov	r0, r6
   6b948:	sub	sp, fp, #28
   6b94c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006b950 <Mat_VarReadDataLinear4>:
   6b950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6b954:	add	fp, sp, #28
   6b958:	sub	sp, sp, #28
   6b95c:	mov	r7, r1
   6b960:	mov	r9, r0
   6b964:	mov	r4, #1
   6b968:	add	r1, sp, #24
   6b96c:	mov	r5, r3
   6b970:	str	r2, [sp, #16]
   6b974:	mov	r0, r7
   6b978:	str	r4, [sp, #24]
   6b97c:	bl	6be10 <SafeMulDims>
   6b980:	ldr	r1, [r7, #52]	; 0x34
   6b984:	str	r0, [sp, #20]
   6b988:	ldr	r0, [r9]
   6b98c:	mov	r2, #0
   6b990:	ldr	r1, [r1]
   6b994:	bl	1a2c <fseek@plt>
   6b998:	ldr	r0, [r7, #8]
   6b99c:	bl	1924 <Mat_SizeOf@plt>
   6b9a0:	mov	ip, r5
   6b9a4:	ldr	r5, [fp, #12]
   6b9a8:	ldr	r6, [fp, #8]
   6b9ac:	str	r0, [r7, #12]
   6b9b0:	mov	sl, r0
   6b9b4:	ldr	r8, [sp, #24]
   6b9b8:	sub	r0, r5, #1
   6b9bc:	mla	r0, r0, r6, ip
   6b9c0:	add	r0, r0, #1
   6b9c4:	cmp	r0, r8
   6b9c8:	bhi	6ba50 <Mat_VarReadDataLinear4+0x100>
   6b9cc:	ldr	r0, [r7, #20]
   6b9d0:	cmp	r0, #0
   6b9d4:	beq	6ba28 <Mat_VarReadDataLinear4+0xd8>
   6b9d8:	ldr	r4, [sp, #16]
   6b9dc:	ldr	r3, [r7, #8]
   6b9e0:	ldr	r2, [r7, #16]
   6b9e4:	mov	r0, r9
   6b9e8:	ldr	r1, [r4]
   6b9ec:	str	r5, [sp, #8]
   6b9f0:	str	ip, [sp]
   6b9f4:	str	r6, [sp, #4]
   6b9f8:	mov	r5, ip
   6b9fc:	bl	2e334 <ReadDataSlab1>
   6ba00:	ldr	r0, [r7, #52]	; 0x34
   6ba04:	mov	r2, #0
   6ba08:	ldr	r0, [r0]
   6ba0c:	mla	r1, r8, sl, r0
   6ba10:	ldr	r0, [r9]
   6ba14:	bl	1a2c <fseek@plt>
   6ba18:	mov	ip, r5
   6ba1c:	ldr	r5, [fp, #12]
   6ba20:	ldr	r4, [r4, #4]
   6ba24:	b	6ba2c <Mat_VarReadDataLinear4+0xdc>
   6ba28:	ldr	r4, [sp, #16]
   6ba2c:	ldr	r3, [r7, #8]
   6ba30:	ldr	r2, [r7, #16]
   6ba34:	mov	r0, r9
   6ba38:	mov	r1, r4
   6ba3c:	str	ip, [sp]
   6ba40:	str	r6, [sp, #4]
   6ba44:	str	r5, [sp, #8]
   6ba48:	bl	2e334 <ReadDataSlab1>
   6ba4c:	ldr	r4, [sp, #20]
   6ba50:	mov	r0, r4
   6ba54:	sub	sp, fp, #28
   6ba58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6ba5c:	nop	{0}

0006ba60 <Mat_VarReadNextInfo4>:
   6ba60:	push	{r4, r5, r6, sl, fp, lr}
   6ba64:	add	fp, sp, #16
   6ba68:	sub	sp, sp, #8
   6ba6c:	cmp	r0, #0
   6ba70:	beq	6bd28 <Mat_VarReadNextInfo4+0x2c8>
   6ba74:	mov	r5, r0
   6ba78:	ldr	r0, [r0]
   6ba7c:	cmp	r0, #0
   6ba80:	beq	6bd28 <Mat_VarReadNextInfo4+0x2c8>
   6ba84:	bl	18a0 <Mat_VarCalloc@plt>
   6ba88:	cmp	r0, #0
   6ba8c:	beq	6bd28 <Mat_VarReadNextInfo4+0x2c8>
   6ba90:	ldr	r3, [r5]
   6ba94:	mov	r4, r0
   6ba98:	add	r0, sp, #4
   6ba9c:	mov	r1, #4
   6baa0:	mov	r2, #1
   6baa4:	bl	18b8 <fread@plt>
   6baa8:	cmp	r0, #0
   6baac:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bab0:	ldr	r0, [sp, #4]
   6bab4:	movw	r1, #4053	; 0xfd5
   6bab8:	cmp	r0, r1
   6babc:	bcc	6bad8 <Mat_VarReadNextInfo4+0x78>
   6bac0:	add	r0, sp, #4
   6bac4:	bl	1bf8 <Mat_int32Swap>
   6bac8:	movw	r1, #4052	; 0xfd4
   6bacc:	cmp	r0, r1
   6bad0:	bgt	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bad4:	ldr	r0, [sp, #4]
   6bad8:	vmov	s0, r0
   6badc:	vldr	d16, [pc, #636]	; 6bd60 <Mat_VarReadNextInfo4+0x300>
   6bae0:	movw	r2, #64536	; 0xfc18
   6bae4:	movt	r2, #65535	; 0xffff
   6bae8:	vcvt.f64.s32	d17, s0
   6baec:	vdiv.f64	d16, d17, d16
   6baf0:	vcvtm.s32.f64	s0, d16
   6baf4:	vldr	d16, [pc, #620]	; 6bd68 <Mat_VarReadNextInfo4+0x308>
   6baf8:	vmov	r1, s0
   6bafc:	mla	r0, r1, r2, r0
   6bb00:	mvn	r2, #99	; 0x63
   6bb04:	cmp	r1, #2
   6bb08:	vmov	s0, r0
   6bb0c:	vcvt.f64.s32	d17, s0
   6bb10:	vdiv.f64	d16, d17, d16
   6bb14:	vcvtm.s32.f64	s0, d16
   6bb18:	vmov.f64	d16, #36	; 0x41200000  10.0
   6bb1c:	vmov	r3, s0
   6bb20:	mla	r0, r3, r2, r0
   6bb24:	vmov	s0, r0
   6bb28:	vcvt.f64.s32	d17, s0
   6bb2c:	vdiv.f64	d16, d17, d16
   6bb30:	vcvtm.s32.f64	s0, d16
   6bb34:	vmov	r2, s0
   6bb38:	add	r6, r2, r2, lsl #2
   6bb3c:	rsb	r6, r6, #0
   6bb40:	add	r0, r0, r6, lsl #1
   6bb44:	str	r0, [sp, #4]
   6bb48:	bcs	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bb4c:	cmp	r3, #0
   6bb50:	str	r1, [r5, #20]
   6bb54:	bne	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bb58:	cmp	r2, #6
   6bb5c:	bcs	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bb60:	ldr	r1, [pc, #520]	; 6bd70 <Mat_VarReadNextInfo4+0x310>
   6bb64:	cmp	r0, #3
   6bb68:	add	r1, pc, r1
   6bb6c:	ldr	r1, [r1, r2, lsl #2]
   6bb70:	str	r1, [r4, #8]
   6bb74:	bcs	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bb78:	mov	r1, #2
   6bb7c:	str	r1, [r4, #4]
   6bb80:	ldr	r1, [pc, #492]	; 6bd74 <Mat_VarReadNextInfo4+0x314>
   6bb84:	add	r1, pc, r1
   6bb88:	ldr	r0, [r1, r0, lsl #2]
   6bb8c:	str	r0, [r4, #16]
   6bb90:	mov	r0, #8
   6bb94:	bl	18d0 <malloc@plt>
   6bb98:	cmp	r0, #0
   6bb9c:	str	r0, [r4, #32]
   6bba0:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bba4:	ldr	r3, [r5]
   6bba8:	add	r0, sp, #4
   6bbac:	mov	r1, #4
   6bbb0:	mov	r2, #1
   6bbb4:	bl	18b8 <fread@plt>
   6bbb8:	mov	r6, r0
   6bbbc:	ldr	r0, [r5, #20]
   6bbc0:	cmp	r0, #0
   6bbc4:	beq	6bbd0 <Mat_VarReadNextInfo4+0x170>
   6bbc8:	add	r0, sp, #4
   6bbcc:	bl	1bf8 <Mat_int32Swap>
   6bbd0:	ldr	r0, [r4, #32]
   6bbd4:	ldr	r1, [sp, #4]
   6bbd8:	cmp	r6, #0
   6bbdc:	str	r1, [r0]
   6bbe0:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bbe4:	ldr	r3, [r5]
   6bbe8:	add	r0, sp, #4
   6bbec:	mov	r1, #4
   6bbf0:	mov	r2, #1
   6bbf4:	bl	18b8 <fread@plt>
   6bbf8:	mov	r6, r0
   6bbfc:	ldr	r0, [r5, #20]
   6bc00:	cmp	r0, #0
   6bc04:	beq	6bc10 <Mat_VarReadNextInfo4+0x1b0>
   6bc08:	add	r0, sp, #4
   6bc0c:	bl	1bf8 <Mat_int32Swap>
   6bc10:	ldr	r0, [r4, #32]
   6bc14:	ldr	r1, [sp, #4]
   6bc18:	cmp	r6, #0
   6bc1c:	str	r1, [r0, #4]
   6bc20:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bc24:	ldr	r3, [r5]
   6bc28:	add	r6, r4, #20
   6bc2c:	mov	r1, #4
   6bc30:	mov	r2, #1
   6bc34:	mov	r0, r6
   6bc38:	bl	18b8 <fread@plt>
   6bc3c:	cmp	r0, #0
   6bc40:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bc44:	ldr	r0, [r6]
   6bc48:	cmp	r0, #0
   6bc4c:	beq	6bc5c <Mat_VarReadNextInfo4+0x1fc>
   6bc50:	ldr	r0, [r4, #16]
   6bc54:	cmp	r0, #4
   6bc58:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bc5c:	ldr	r3, [r5]
   6bc60:	add	r0, sp, #4
   6bc64:	mov	r1, #4
   6bc68:	mov	r2, #1
   6bc6c:	bl	18b8 <fread@plt>
   6bc70:	cmp	r0, #0
   6bc74:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bc78:	ldr	r0, [r5, #20]
   6bc7c:	cmp	r0, #0
   6bc80:	beq	6bc8c <Mat_VarReadNextInfo4+0x22c>
   6bc84:	add	r0, sp, #4
   6bc88:	bl	1bf8 <Mat_int32Swap>
   6bc8c:	ldr	r6, [sp, #4]
   6bc90:	cmp	r6, #0
   6bc94:	ble	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bc98:	mov	r0, r6
   6bc9c:	bl	18d0 <malloc@plt>
   6bca0:	cmp	r0, #0
   6bca4:	str	r0, [r4, #36]	; 0x24
   6bca8:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bcac:	ldr	r3, [r5]
   6bcb0:	mov	r1, #1
   6bcb4:	mov	r2, r6
   6bcb8:	bl	18b8 <fread@plt>
   6bcbc:	cmp	r0, #0
   6bcc0:	beq	6bd20 <Mat_VarReadNextInfo4+0x2c0>
   6bcc4:	ldr	r0, [r5]
   6bcc8:	bl	1840 <ftell@plt>
   6bccc:	ldr	r1, [r4, #52]	; 0x34
   6bcd0:	cmn	r0, #1
   6bcd4:	str	r0, [r1]
   6bcd8:	beq	6bd38 <Mat_VarReadNextInfo4+0x2d8>
   6bcdc:	ldr	r0, [r4, #8]
   6bce0:	bl	1924 <Mat_SizeOf@plt>
   6bce4:	str	r0, [sp]
   6bce8:	ldr	r1, [r4, #20]
   6bcec:	cmp	r1, #0
   6bcf0:	mov	r1, sp
   6bcf4:	lslne	r0, r0, #1
   6bcf8:	strne	r0, [sp]
   6bcfc:	mov	r0, r4
   6bd00:	bl	6be10 <SafeMulDims>
   6bd04:	ldr	r1, [sp]
   6bd08:	ldr	r0, [r5]
   6bd0c:	mov	r2, #1
   6bd10:	bl	1a2c <fseek@plt>
   6bd14:	mov	r0, r4
   6bd18:	sub	sp, fp, #16
   6bd1c:	pop	{r4, r5, r6, sl, fp, pc}
   6bd20:	mov	r0, r4
   6bd24:	bl	1918 <Mat_VarFree@plt>
   6bd28:	mov	r4, #0
   6bd2c:	mov	r0, r4
   6bd30:	sub	sp, fp, #16
   6bd34:	pop	{r4, r5, r6, sl, fp, pc}
   6bd38:	mov	r0, r4
   6bd3c:	bl	1918 <Mat_VarFree@plt>
   6bd40:	ldr	r0, [pc, #48]	; 6bd78 <Mat_VarReadNextInfo4+0x318>
   6bd44:	add	r0, pc, r0
   6bd48:	bl	19b4 <Mat_Critical@plt>
   6bd4c:	mov	r4, #0
   6bd50:	mov	r0, r4
   6bd54:	sub	sp, fp, #16
   6bd58:	pop	{r4, r5, r6, sl, fp, pc}
   6bd5c:	nop	{0}
   6bd60:	.word	0x00000000
   6bd64:	.word	0x408f4000
   6bd68:	.word	0x00000000
   6bd6c:	.word	0x40590000
   6bd70:	.word	0x00006680
   6bd74:	.word	0x0000667c
   6bd78:	.word	0x00005f20

0006bd7c <ComplexMalloc>:
   6bd7c:	push	{r4, r5, r6, sl, fp, lr}
   6bd80:	add	fp, sp, #16
   6bd84:	mov	r5, r0
   6bd88:	mov	r0, #8
   6bd8c:	bl	18d0 <malloc@plt>
   6bd90:	cmp	r0, #0
   6bd94:	beq	6bde0 <ComplexMalloc+0x64>
   6bd98:	mov	r4, r0
   6bd9c:	mov	r0, r5
   6bda0:	bl	18d0 <malloc@plt>
   6bda4:	cmp	r0, #0
   6bda8:	str	r0, [r4]
   6bdac:	beq	6bdd8 <ComplexMalloc+0x5c>
   6bdb0:	mov	r6, r0
   6bdb4:	mov	r0, r5
   6bdb8:	bl	18d0 <malloc@plt>
   6bdbc:	cmp	r0, #0
   6bdc0:	str	r0, [r4, #4]
   6bdc4:	beq	6bdd0 <ComplexMalloc+0x54>
   6bdc8:	mov	r0, r4
   6bdcc:	pop	{r4, r5, r6, sl, fp, pc}
   6bdd0:	mov	r0, r6
   6bdd4:	bl	1804 <free@plt>
   6bdd8:	mov	r0, r4
   6bddc:	bl	1804 <free@plt>
   6bde0:	mov	r4, #0
   6bde4:	mov	r0, r4
   6bde8:	pop	{r4, r5, r6, sl, fp, pc}

0006bdec <ClassType2DataType>:
   6bdec:	sub	r0, r0, #1
   6bdf0:	cmp	r0, #14
   6bdf4:	movhi	r0, #0
   6bdf8:	bxhi	lr
   6bdfc:	ldr	r1, [pc, #8]	; 6be0c <ClassType2DataType+0x20>
   6be00:	add	r1, pc, r1
   6be04:	ldr	r0, [r1, r0, lsl #2]
   6be08:	bx	lr
   6be0c:	.word	0x00006b28

0006be10 <SafeMulDims>:
   6be10:	push	{fp, lr}
   6be14:	mov	fp, sp
   6be18:	ldr	r2, [r0, #4]
   6be1c:	cmp	r2, #1
   6be20:	blt	6be54 <SafeMulDims+0x44>
   6be24:	ldr	lr, [r1]
   6be28:	ldr	ip, [r0, #32]
   6be2c:	mov	r3, #0
   6be30:	ldr	r2, [ip, r3, lsl #2]
   6be34:	umull	lr, r2, lr, r2
   6be38:	cmp	r2, #0
   6be3c:	str	lr, [r1]
   6be40:	bne	6be5c <SafeMulDims+0x4c>
   6be44:	ldr	r2, [r0, #4]
   6be48:	add	r3, r3, #1
   6be4c:	cmp	r3, r2
   6be50:	blt	6be30 <SafeMulDims+0x20>
   6be54:	mov	r0, #0
   6be58:	pop	{fp, pc}
   6be5c:	mov	r0, #0
   6be60:	str	r0, [r1]
   6be64:	mov	r0, #1
   6be68:	pop	{fp, pc}

0006be6c <SafeMul>:
   6be6c:	umull	r2, r1, r1, r2
   6be70:	cmp	r1, #0
   6be74:	movwne	r1, #1
   6be78:	cmp	r1, #0
   6be7c:	movwne	r2, #0
   6be80:	str	r2, [r0]
   6be84:	mov	r0, r1
   6be88:	bx	lr

0006be8c <Mat_GetLibraryVersion>:
   6be8c:	cmp	r0, #0
   6be90:	movne	r3, #1
   6be94:	strne	r3, [r0]
   6be98:	cmp	r1, #0
   6be9c:	movne	r0, #5
   6bea0:	strne	r0, [r1]
   6bea4:	cmp	r2, #0
   6bea8:	movne	r0, #15
   6beac:	strne	r0, [r2]
   6beb0:	bx	lr

0006beb4 <Mat_CreateVer>:
   6beb4:	cmp	r2, #256	; 0x100
   6beb8:	beq	6becc <Mat_CreateVer+0x18>
   6bebc:	cmp	r2, #16
   6bec0:	movne	r0, #0
   6bec4:	bxne	lr
   6bec8:	b	6a6c8 <Mat_Create4>
   6becc:	b	31910 <Mat_Create5>

0006bed0 <Mat_Open>:
   6bed0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   6bed4:	add	fp, sp, #24
   6bed8:	sub	sp, sp, #8
   6bedc:	mov	r9, r1
   6bee0:	mov	r8, r0
   6bee4:	tst	r1, #1
   6bee8:	bne	6bf0c <Mat_Open+0x3c>
   6beec:	ldr	r1, [pc, #912]	; 6c284 <Mat_Open+0x3b4>
   6bef0:	mov	r0, r8
   6bef4:	add	r1, pc, r1
   6bef8:	bl	17e0 <fopen@plt>
   6befc:	mov	r7, r0
   6bf00:	cmp	r0, #0
   6bf04:	bne	6bf28 <Mat_Open+0x58>
   6bf08:	b	6c274 <Mat_Open+0x3a4>
   6bf0c:	ldr	r1, [pc, #888]	; 6c28c <Mat_Open+0x3bc>
   6bf10:	mov	r0, r8
   6bf14:	add	r1, pc, r1
   6bf18:	bl	17e0 <fopen@plt>
   6bf1c:	mov	r7, r0
   6bf20:	cmp	r0, #0
   6bf24:	beq	6c040 <Mat_Open+0x170>
   6bf28:	mov	r0, #44	; 0x2c
   6bf2c:	bl	18d0 <malloc@plt>
   6bf30:	cmp	r0, #0
   6bf34:	beq	6c028 <Mat_Open+0x158>
   6bf38:	mov	r5, r0
   6bf3c:	str	r7, [r0]
   6bf40:	mov	r0, #128	; 0x80
   6bf44:	mov	r1, #1
   6bf48:	bl	1798 <calloc@plt>
   6bf4c:	cmp	r0, #0
   6bf50:	str	r0, [r5, #4]
   6bf54:	beq	6c070 <Mat_Open+0x1a0>
   6bf58:	mov	r4, r0
   6bf5c:	mov	r0, #8
   6bf60:	mov	r1, #1
   6bf64:	bl	1798 <calloc@plt>
   6bf68:	cmp	r0, #0
   6bf6c:	str	r0, [r5, #8]
   6bf70:	beq	6c090 <Mat_Open+0x1c0>
   6bf74:	mov	r6, #0
   6bf78:	mov	r0, r4
   6bf7c:	mov	r1, #1
   6bf80:	mov	r2, #116	; 0x74
   6bf84:	mov	r3, r7
   6bf88:	str	r6, [r5, #36]	; 0x24
   6bf8c:	str	r6, [r5, #40]	; 0x28
   6bf90:	str	r6, [r5, #12]
   6bf94:	str	r6, [r5, #16]
   6bf98:	str	r6, [r5, #20]
   6bf9c:	bl	18b8 <fread@plt>
   6bfa0:	mov	r4, r0
   6bfa4:	ldr	r0, [r5, #4]
   6bfa8:	mov	r1, #1
   6bfac:	mov	r2, #8
   6bfb0:	mov	r3, r7
   6bfb4:	strb	r6, [r0, #116]	; 0x74
   6bfb8:	ldr	r0, [r5, #8]
   6bfbc:	bl	18b8 <fread@plt>
   6bfc0:	add	r4, r0, r4
   6bfc4:	add	r0, sp, #4
   6bfc8:	mov	r1, #2
   6bfcc:	mov	r2, #1
   6bfd0:	mov	r3, r7
   6bfd4:	bl	18b8 <fread@plt>
   6bfd8:	add	r4, r4, r0, lsl #1
   6bfdc:	add	r0, sp, #6
   6bfe0:	mov	r1, #1
   6bfe4:	mov	r2, #2
   6bfe8:	mov	r3, r7
   6bfec:	bl	18b8 <fread@plt>
   6bff0:	add	r4, r4, r0
   6bff4:	cmp	r4, #128	; 0x80
   6bff8:	bne	6c124 <Mat_Open+0x254>
   6bffc:	mvn	r0, #0
   6c000:	movw	r1, #18765	; 0x494d
   6c004:	str	r0, [r5, #20]
   6c008:	ldrh	r0, [sp, #6]
   6c00c:	cmp	r0, r1
   6c010:	beq	6c0d4 <Mat_Open+0x204>
   6c014:	movw	r1, #19785	; 0x4d49
   6c018:	cmp	r0, r1
   6c01c:	moveq	r0, #0
   6c020:	streq	r0, [r5, #20]
   6c024:	b	6c0e4 <Mat_Open+0x214>
   6c028:	mov	r0, r7
   6c02c:	bl	19cc <fclose@plt>
   6c030:	ldr	r0, [pc, #592]	; 6c288 <Mat_Open+0x3b8>
   6c034:	add	r0, pc, r0
   6c038:	bl	19b4 <Mat_Critical@plt>
   6c03c:	b	6c274 <Mat_Open+0x3a4>
   6c040:	bic	r0, r9, #1
   6c044:	cmp	r0, #256	; 0x100
   6c048:	beq	6c0b8 <Mat_Open+0x1e8>
   6c04c:	mov	r5, #0
   6c050:	cmp	r0, #16
   6c054:	bne	6c278 <Mat_Open+0x3a8>
   6c058:	mov	r0, r8
   6c05c:	bl	6a6c8 <Mat_Create4>
   6c060:	mov	r5, r0
   6c064:	mov	r0, r5
   6c068:	sub	sp, fp, #24
   6c06c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   6c070:	mov	r0, r5
   6c074:	bl	1804 <free@plt>
   6c078:	mov	r0, r7
   6c07c:	bl	19cc <fclose@plt>
   6c080:	ldr	r0, [pc, #520]	; 6c290 <Mat_Open+0x3c0>
   6c084:	add	r0, pc, r0
   6c088:	bl	19b4 <Mat_Critical@plt>
   6c08c:	b	6c274 <Mat_Open+0x3a4>
   6c090:	mov	r0, r4
   6c094:	bl	1804 <free@plt>
   6c098:	mov	r0, r5
   6c09c:	bl	1804 <free@plt>
   6c0a0:	mov	r0, r7
   6c0a4:	bl	19cc <fclose@plt>
   6c0a8:	ldr	r0, [pc, #484]	; 6c294 <Mat_Open+0x3c4>
   6c0ac:	add	r0, pc, r0
   6c0b0:	bl	19b4 <Mat_Critical@plt>
   6c0b4:	b	6c274 <Mat_Open+0x3a4>
   6c0b8:	mov	r0, r8
   6c0bc:	mov	r1, #0
   6c0c0:	bl	31910 <Mat_Create5>
   6c0c4:	mov	r5, r0
   6c0c8:	mov	r0, r5
   6c0cc:	sub	sp, fp, #24
   6c0d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   6c0d4:	mov	r0, #1
   6c0d8:	str	r0, [r5, #20]
   6c0dc:	add	r0, sp, #4
   6c0e0:	bl	1c20 <Mat_int16Swap>
   6c0e4:	ldrh	r0, [sp, #4]
   6c0e8:	cmp	r0, #512	; 0x200
   6c0ec:	sxth	r1, r0
   6c0f0:	cmpne	r0, #256	; 0x100
   6c0f4:	str	r1, [r5, #16]
   6c0f8:	bne	6c134 <Mat_Open+0x264>
   6c0fc:	ldr	r0, [r5, #20]
   6c100:	cmn	r0, #1
   6c104:	beq	6c134 <Mat_Open+0x264>
   6c108:	ldr	r0, [r5]
   6c10c:	bl	1840 <ftell@plt>
   6c110:	cmn	r0, #1
   6c114:	str	r0, [r5, #28]
   6c118:	beq	6c1dc <Mat_Open+0x30c>
   6c11c:	mov	r0, #0
   6c120:	str	r0, [r5, #32]
   6c124:	ldr	r0, [r5, #16]
   6c128:	cmp	r0, #0
   6c12c:	bne	6c228 <Mat_Open+0x358>
   6c130:	b	6c13c <Mat_Open+0x26c>
   6c134:	mov	r0, #0
   6c138:	str	r0, [r5, #16]
   6c13c:	ldr	r0, [r5, #4]
   6c140:	bl	1804 <free@plt>
   6c144:	ldr	r0, [r5, #8]
   6c148:	bl	1804 <free@plt>
   6c14c:	mov	r1, #16
   6c150:	mov	r0, #0
   6c154:	mov	r2, #0
   6c158:	str	r1, [r5, #16]
   6c15c:	str	r0, [r5, #20]
   6c160:	str	r9, [r5, #24]
   6c164:	str	r0, [r5, #28]
   6c168:	str	r0, [r5, #32]
   6c16c:	str	r7, [r5]
   6c170:	str	r0, [r5, #4]
   6c174:	str	r0, [r5, #8]
   6c178:	mov	r0, r7
   6c17c:	mov	r1, #0
   6c180:	bl	1a2c <fseek@plt>
   6c184:	mov	r0, r5
   6c188:	bl	6ba60 <Mat_VarReadNextInfo4>
   6c18c:	cmp	r4, #0
   6c190:	beq	6c1b0 <Mat_Open+0x2e0>
   6c194:	cmp	r0, #0
   6c198:	bne	6c1b0 <Mat_Open+0x2e0>
   6c19c:	mov	r0, r5
   6c1a0:	bl	19a8 <Mat_Close@plt>
   6c1a4:	ldr	r0, [pc, #240]	; 6c29c <Mat_Open+0x3cc>
   6c1a8:	add	r0, pc, r0
   6c1ac:	b	6c26c <Mat_Open+0x39c>
   6c1b0:	bl	1918 <Mat_VarFree@plt>
   6c1b4:	ldr	r0, [r5, #16]
   6c1b8:	cmp	r0, #16
   6c1bc:	beq	6c20c <Mat_Open+0x33c>
   6c1c0:	cmp	r0, #512	; 0x200
   6c1c4:	beq	6c220 <Mat_Open+0x350>
   6c1c8:	cmp	r0, #256	; 0x100
   6c1cc:	bne	6c228 <Mat_Open+0x358>
   6c1d0:	ldr	r0, [r5]
   6c1d4:	mov	r1, #128	; 0x80
   6c1d8:	b	6c214 <Mat_Open+0x344>
   6c1dc:	ldr	r0, [r5, #4]
   6c1e0:	bl	1804 <free@plt>
   6c1e4:	ldr	r0, [r5, #8]
   6c1e8:	bl	1804 <free@plt>
   6c1ec:	mov	r0, r5
   6c1f0:	bl	1804 <free@plt>
   6c1f4:	mov	r0, r7
   6c1f8:	bl	19cc <fclose@plt>
   6c1fc:	ldr	r0, [pc, #148]	; 6c298 <Mat_Open+0x3c8>
   6c200:	add	r0, pc, r0
   6c204:	bl	19b4 <Mat_Critical@plt>
   6c208:	b	6c274 <Mat_Open+0x3a4>
   6c20c:	ldr	r0, [r5]
   6c210:	mov	r1, #0
   6c214:	mov	r2, #0
   6c218:	bl	1a2c <fseek@plt>
   6c21c:	b	6c228 <Mat_Open+0x358>
   6c220:	mov	r0, #0
   6c224:	str	r0, [r5, #32]
   6c228:	ldr	r0, [pc, #112]	; 6c2a0 <Mat_Open+0x3d0>
   6c22c:	mov	r1, r8
   6c230:	add	r0, pc, r0
   6c234:	bl	1da4 <strdup_printf>
   6c238:	str	r9, [r5, #24]
   6c23c:	str	r0, [r5, #12]
   6c240:	ldr	r0, [r5, #16]
   6c244:	cmp	r0, #512	; 0x200
   6c248:	bne	6c278 <Mat_Open+0x3a8>
   6c24c:	ldr	r0, [r5]
   6c250:	bl	19cc <fclose@plt>
   6c254:	mov	r0, #0
   6c258:	str	r0, [r5]
   6c25c:	mov	r0, r5
   6c260:	bl	19a8 <Mat_Close@plt>
   6c264:	ldr	r0, [pc, #56]	; 6c2a4 <Mat_Open+0x3d4>
   6c268:	add	r0, pc, r0
   6c26c:	mov	r1, r8
   6c270:	bl	19b4 <Mat_Critical@plt>
   6c274:	mov	r5, #0
   6c278:	mov	r0, r5
   6c27c:	sub	sp, fp, #24
   6c280:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   6c284:	.word	0x00006318
   6c288:	.word	0x00006080
   6c28c:	.word	0x000062fb
   6c290:	.word	0x0000618f
   6c294:	.word	0x00006198
   6c298:	.word	0x00005a64
   6c29c:	.word	0x000060d4
   6c2a0:	.word	0x00006373
   6c2a4:	.word	0x0000603e

0006c2a8 <Mat_Rewind>:
   6c2a8:	push	{r4, sl, fp, lr}
   6c2ac:	add	fp, sp, #8
   6c2b0:	ldr	r1, [r0, #16]
   6c2b4:	cmp	r1, #16
   6c2b8:	beq	6c2e0 <Mat_Rewind+0x38>
   6c2bc:	cmp	r1, #512	; 0x200
   6c2c0:	beq	6c2fc <Mat_Rewind+0x54>
   6c2c4:	mvn	r4, #0
   6c2c8:	cmp	r1, #256	; 0x100
   6c2cc:	bne	6c2f4 <Mat_Rewind+0x4c>
   6c2d0:	ldr	r0, [r0]
   6c2d4:	mov	r4, #0
   6c2d8:	mov	r1, #128	; 0x80
   6c2dc:	b	6c2ec <Mat_Rewind+0x44>
   6c2e0:	ldr	r0, [r0]
   6c2e4:	mov	r4, #0
   6c2e8:	mov	r1, #0
   6c2ec:	mov	r2, #0
   6c2f0:	bl	1a2c <fseek@plt>
   6c2f4:	mov	r0, r4
   6c2f8:	pop	{r4, sl, fp, pc}
   6c2fc:	mov	r4, #0
   6c300:	str	r4, [r0, #32]
   6c304:	mov	r0, r4
   6c308:	pop	{r4, sl, fp, pc}

0006c30c <Mat_Close>:
   6c30c:	cmp	r0, #0
   6c310:	beq	6c3cc <Mat_Close+0xc0>
   6c314:	push	{r4, r5, fp, lr}
   6c318:	add	fp, sp, #8
   6c31c:	mov	r4, r0
   6c320:	ldr	r0, [r0]
   6c324:	cmp	r0, #0
   6c328:	beq	6c330 <Mat_Close+0x24>
   6c32c:	bl	19cc <fclose@plt>
   6c330:	ldr	r0, [r4, #4]
   6c334:	cmp	r0, #0
   6c338:	beq	6c340 <Mat_Close+0x34>
   6c33c:	bl	1804 <free@plt>
   6c340:	ldr	r0, [r4, #8]
   6c344:	cmp	r0, #0
   6c348:	beq	6c350 <Mat_Close+0x44>
   6c34c:	bl	1804 <free@plt>
   6c350:	ldr	r0, [r4, #12]
   6c354:	cmp	r0, #0
   6c358:	beq	6c360 <Mat_Close+0x54>
   6c35c:	bl	1804 <free@plt>
   6c360:	ldr	r0, [r4, #40]	; 0x28
   6c364:	cmp	r0, #0
   6c368:	beq	6c3c0 <Mat_Close+0xb4>
   6c36c:	ldr	r2, [r4, #36]	; 0x24
   6c370:	cmp	r2, #0
   6c374:	beq	6c3bc <Mat_Close+0xb0>
   6c378:	mov	r5, #0
   6c37c:	ldr	r1, [r0, r5, lsl #2]
   6c380:	cmp	r1, #0
   6c384:	bne	6c3a0 <Mat_Close+0x94>
   6c388:	add	r5, r5, #1
   6c38c:	cmp	r5, r2
   6c390:	bcs	6c3bc <Mat_Close+0xb0>
   6c394:	ldr	r1, [r0, r5, lsl #2]
   6c398:	cmp	r1, #0
   6c39c:	beq	6c388 <Mat_Close+0x7c>
   6c3a0:	mov	r0, r1
   6c3a4:	bl	1804 <free@plt>
   6c3a8:	ldr	r2, [r4, #36]	; 0x24
   6c3ac:	ldr	r0, [r4, #40]	; 0x28
   6c3b0:	add	r5, r5, #1
   6c3b4:	cmp	r5, r2
   6c3b8:	bcc	6c394 <Mat_Close+0x88>
   6c3bc:	bl	1804 <free@plt>
   6c3c0:	mov	r0, r4
   6c3c4:	bl	1804 <free@plt>
   6c3c8:	pop	{r4, r5, fp, lr}
   6c3cc:	mov	r0, #0
   6c3d0:	bx	lr

0006c3d4 <Mat_VarFree>:
   6c3d4:	cmp	r0, #0
   6c3d8:	bxeq	lr
   6c3dc:	push	{r4, r5, r6, sl, fp, lr}
   6c3e0:	add	fp, sp, #16
   6c3e4:	mov	r4, r0
   6c3e8:	ldr	r0, [r0, #32]
   6c3ec:	cmp	r0, #0
   6c3f0:	beq	6c4d0 <Mat_VarFree+0xfc>
   6c3f4:	ldr	r1, [r4, #4]
   6c3f8:	mov	r6, #1
   6c3fc:	cmp	r1, #1
   6c400:	blt	6c424 <Mat_VarFree+0x50>
   6c404:	mov	r2, r0
   6c408:	ldr	r3, [r2]
   6c40c:	umull	r6, r3, r6, r3
   6c410:	cmp	r3, #0
   6c414:	bne	6c4e4 <Mat_VarFree+0x110>
   6c418:	add	r2, r2, #4
   6c41c:	subs	r1, r1, #1
   6c420:	bne	6c408 <Mat_VarFree+0x34>
   6c424:	bl	1804 <free@plt>
   6c428:	ldr	r5, [r4, #40]	; 0x28
   6c42c:	cmp	r5, #0
   6c430:	beq	6c5c8 <Mat_VarFree+0x1f4>
   6c434:	ldr	r0, [r4, #16]
   6c438:	sub	r0, r0, #1
   6c43c:	cmp	r0, #15
   6c440:	bhi	6c5c8 <Mat_VarFree+0x1f4>
   6c444:	add	r1, pc, #4
   6c448:	ldr	r0, [r1, r0, lsl #2]
   6c44c:	add	pc, r1, r0
   6c450:	.word	0x000000ac
   6c454:	.word	0x000000d4
   6c458:	.word	0x00000178
   6c45c:	.word	0x00000040
   6c460:	.word	0x00000114
   6c464:	.word	0x00000040
   6c468:	.word	0x00000040
   6c46c:	.word	0x00000040
   6c470:	.word	0x00000040
   6c474:	.word	0x00000040
   6c478:	.word	0x00000040
   6c47c:	.word	0x00000040
   6c480:	.word	0x00000040
   6c484:	.word	0x00000040
   6c488:	.word	0x00000040
   6c48c:	.word	0x0000016c
   6c490:	ldr	r0, [r4, #44]	; 0x2c
   6c494:	cmp	r0, #0
   6c498:	bne	6c5c8 <Mat_VarFree+0x1f4>
   6c49c:	ldr	r0, [r4, #20]
   6c4a0:	cmp	r0, #0
   6c4a4:	beq	6c4b8 <Mat_VarFree+0xe4>
   6c4a8:	ldr	r0, [r5]
   6c4ac:	bl	1804 <free@plt>
   6c4b0:	ldr	r0, [r5, #4]
   6c4b4:	bl	1804 <free@plt>
   6c4b8:	mov	r0, r5
   6c4bc:	bl	1804 <free@plt>
   6c4c0:	ldr	r0, [r4, #52]	; 0x34
   6c4c4:	cmp	r0, #0
   6c4c8:	bne	6c5d4 <Mat_VarFree+0x200>
   6c4cc:	b	6c704 <Mat_VarFree+0x330>
   6c4d0:	mov	r6, #0
   6c4d4:	ldr	r5, [r4, #40]	; 0x28
   6c4d8:	cmp	r5, #0
   6c4dc:	bne	6c434 <Mat_VarFree+0x60>
   6c4e0:	b	6c5c8 <Mat_VarFree+0x1f4>
   6c4e4:	mov	r6, #0
   6c4e8:	bl	1804 <free@plt>
   6c4ec:	ldr	r5, [r4, #40]	; 0x28
   6c4f0:	cmp	r5, #0
   6c4f4:	bne	6c434 <Mat_VarFree+0x60>
   6c4f8:	b	6c5c8 <Mat_VarFree+0x1f4>
   6c4fc:	ldr	r0, [r4, #44]	; 0x2c
   6c500:	cmp	r0, #0
   6c504:	bne	6c5c8 <Mat_VarFree+0x1f4>
   6c508:	cmp	r6, #0
   6c50c:	beq	6c4b8 <Mat_VarFree+0xe4>
   6c510:	ldr	r0, [r5], #4
   6c514:	bl	1918 <Mat_VarFree@plt>
   6c518:	subs	r6, r6, #1
   6c51c:	bne	6c510 <Mat_VarFree+0x13c>
   6c520:	b	6c55c <Mat_VarFree+0x188>
   6c524:	ldr	r0, [r4, #44]	; 0x2c
   6c528:	cmp	r0, #0
   6c52c:	bne	6c5c8 <Mat_VarFree+0x1f4>
   6c530:	ldr	r0, [r4, #52]	; 0x34
   6c534:	ldr	r0, [r0, #4]
   6c538:	umull	r6, r0, r6, r0
   6c53c:	cmp	r0, #0
   6c540:	bne	6c4b8 <Mat_VarFree+0xe4>
   6c544:	cmp	r6, #0
   6c548:	beq	6c4b8 <Mat_VarFree+0xe4>
   6c54c:	ldr	r0, [r5], #4
   6c550:	bl	1918 <Mat_VarFree@plt>
   6c554:	subs	r6, r6, #1
   6c558:	bne	6c54c <Mat_VarFree+0x178>
   6c55c:	ldr	r5, [r4, #40]	; 0x28
   6c560:	b	6c4b8 <Mat_VarFree+0xe4>
   6c564:	ldr	r0, [r4, #44]	; 0x2c
   6c568:	cmp	r0, #0
   6c56c:	bne	6c5c8 <Mat_VarFree+0x1f4>
   6c570:	ldr	r0, [r5, #4]
   6c574:	cmp	r0, #0
   6c578:	beq	6c580 <Mat_VarFree+0x1ac>
   6c57c:	bl	1804 <free@plt>
   6c580:	ldr	r0, [r5, #12]
   6c584:	cmp	r0, #0
   6c588:	beq	6c590 <Mat_VarFree+0x1bc>
   6c58c:	bl	1804 <free@plt>
   6c590:	ldr	r0, [r4, #20]
   6c594:	ldr	r6, [r5, #24]
   6c598:	cmp	r0, #0
   6c59c:	beq	6c720 <Mat_VarFree+0x34c>
   6c5a0:	cmp	r6, #0
   6c5a4:	beq	6c4b8 <Mat_VarFree+0xe4>
   6c5a8:	ldr	r0, [r6]
   6c5ac:	bl	1804 <free@plt>
   6c5b0:	ldr	r0, [r6, #4]
   6c5b4:	bl	1804 <free@plt>
   6c5b8:	b	6c728 <Mat_VarFree+0x354>
   6c5bc:	ldr	r0, [r4, #44]	; 0x2c
   6c5c0:	cmp	r0, #0
   6c5c4:	beq	6c4b8 <Mat_VarFree+0xe4>
   6c5c8:	ldr	r0, [r4, #52]	; 0x34
   6c5cc:	cmp	r0, #0
   6c5d0:	beq	6c704 <Mat_VarFree+0x330>
   6c5d4:	ldr	r1, [r4, #48]	; 0x30
   6c5d8:	cmp	r1, #1
   6c5dc:	bne	6c690 <Mat_VarFree+0x2bc>
   6c5e0:	ldr	r0, [r0, #12]
   6c5e4:	bl	193c <inflateEnd@plt>
   6c5e8:	ldr	r0, [r4, #52]	; 0x34
   6c5ec:	ldr	r0, [r0, #12]
   6c5f0:	bl	1804 <free@plt>
   6c5f4:	ldr	r0, [r4, #52]	; 0x34
   6c5f8:	ldr	r5, [r0, #16]
   6c5fc:	cmp	r5, #0
   6c600:	beq	6c690 <Mat_VarFree+0x2bc>
   6c604:	ldr	r0, [r4, #16]
   6c608:	cmp	r0, #5
   6c60c:	bne	6c65c <Mat_VarFree+0x288>
   6c610:	ldr	r0, [r5, #4]
   6c614:	cmp	r0, #0
   6c618:	beq	6c620 <Mat_VarFree+0x24c>
   6c61c:	bl	1804 <free@plt>
   6c620:	ldr	r0, [r5, #12]
   6c624:	cmp	r0, #0
   6c628:	beq	6c630 <Mat_VarFree+0x25c>
   6c62c:	bl	1804 <free@plt>
   6c630:	ldr	r0, [r4, #20]
   6c634:	ldr	r6, [r5, #24]
   6c638:	cmp	r0, #0
   6c63c:	beq	6c678 <Mat_VarFree+0x2a4>
   6c640:	cmp	r6, #0
   6c644:	beq	6c688 <Mat_VarFree+0x2b4>
   6c648:	ldr	r0, [r6]
   6c64c:	bl	1804 <free@plt>
   6c650:	ldr	r0, [r6, #4]
   6c654:	bl	1804 <free@plt>
   6c658:	b	6c680 <Mat_VarFree+0x2ac>
   6c65c:	ldr	r0, [r4, #20]
   6c660:	cmp	r0, #0
   6c664:	beq	6c688 <Mat_VarFree+0x2b4>
   6c668:	ldr	r0, [r5]
   6c66c:	bl	1804 <free@plt>
   6c670:	ldr	r0, [r5, #4]
   6c674:	b	6c684 <Mat_VarFree+0x2b0>
   6c678:	cmp	r6, #0
   6c67c:	beq	6c688 <Mat_VarFree+0x2b4>
   6c680:	mov	r0, r6
   6c684:	bl	1804 <free@plt>
   6c688:	mov	r0, r5
   6c68c:	bl	1804 <free@plt>
   6c690:	ldr	r0, [r4, #52]	; 0x34
   6c694:	ldr	r1, [r0, #8]
   6c698:	cmp	r1, #0
   6c69c:	beq	6c6f8 <Mat_VarFree+0x324>
   6c6a0:	ldr	r2, [r0, #4]
   6c6a4:	cmp	r2, #0
   6c6a8:	beq	6c6f8 <Mat_VarFree+0x324>
   6c6ac:	mov	r5, #0
   6c6b0:	ldr	r1, [r1, r5, lsl #2]
   6c6b4:	cmp	r1, #0
   6c6b8:	bne	6c6dc <Mat_VarFree+0x308>
   6c6bc:	ldr	r2, [r0, #4]
   6c6c0:	ldr	r1, [r0, #8]
   6c6c4:	add	r5, r5, #1
   6c6c8:	cmp	r5, r2
   6c6cc:	bcs	6c6ec <Mat_VarFree+0x318>
   6c6d0:	ldr	r1, [r1, r5, lsl #2]
   6c6d4:	cmp	r1, #0
   6c6d8:	beq	6c6bc <Mat_VarFree+0x2e8>
   6c6dc:	mov	r0, r1
   6c6e0:	bl	1804 <free@plt>
   6c6e4:	ldr	r0, [r4, #52]	; 0x34
   6c6e8:	b	6c6bc <Mat_VarFree+0x2e8>
   6c6ec:	mov	r0, r1
   6c6f0:	bl	1804 <free@plt>
   6c6f4:	ldr	r0, [r4, #52]	; 0x34
   6c6f8:	bl	1804 <free@plt>
   6c6fc:	mov	r0, #0
   6c700:	str	r0, [r4, #52]	; 0x34
   6c704:	ldr	r0, [r4, #36]	; 0x24
   6c708:	cmp	r0, #0
   6c70c:	beq	6c714 <Mat_VarFree+0x340>
   6c710:	bl	1804 <free@plt>
   6c714:	mov	r0, r4
   6c718:	pop	{r4, r5, r6, sl, fp, lr}
   6c71c:	b	1804 <free@plt>
   6c720:	cmp	r6, #0
   6c724:	beq	6c4b8 <Mat_VarFree+0xe4>
   6c728:	mov	r0, r6
   6c72c:	b	6c4b4 <Mat_VarFree+0xe0>

0006c730 <Mat_GetFilename>:
   6c730:	cmp	r0, #0
   6c734:	ldrne	r0, [r0, #12]
   6c738:	moveq	r0, #0
   6c73c:	bx	lr

0006c740 <Mat_GetHeader>:
   6c740:	cmp	r0, #0
   6c744:	ldrne	r0, [r0, #4]
   6c748:	moveq	r0, #0
   6c74c:	bx	lr

0006c750 <Mat_GetVersion>:
   6c750:	cmp	r0, #0
   6c754:	ldrne	r0, [r0, #16]
   6c758:	moveq	r0, #0
   6c75c:	bx	lr

0006c760 <Mat_GetDir>:
   6c760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6c764:	add	fp, sp, #28
   6c768:	sub	sp, sp, #4
   6c76c:	cmp	r1, #0
   6c770:	beq	6c7d4 <Mat_GetDir+0x74>
   6c774:	mov	r4, r1
   6c778:	mov	r5, r0
   6c77c:	cmp	r0, #0
   6c780:	beq	6c83c <Mat_GetDir+0xdc>
   6c784:	ldr	r0, [r5, #40]	; 0x28
   6c788:	ldr	r1, [r5, #16]
   6c78c:	cmp	r0, #0
   6c790:	beq	6c7e4 <Mat_GetDir+0x84>
   6c794:	cmp	r1, #512	; 0x200
   6c798:	bne	6c9d0 <Mat_GetDir+0x270>
   6c79c:	mov	r1, #0
   6c7a0:	str	r1, [r4]
   6c7a4:	ldr	r2, [r5, #36]	; 0x24
   6c7a8:	cmp	r2, #0
   6c7ac:	beq	6c82c <Mat_GetDir+0xcc>
   6c7b0:	ldr	r2, [r0, r1, lsl #2]
   6c7b4:	cmp	r2, #0
   6c7b8:	beq	6c82c <Mat_GetDir+0xcc>
   6c7bc:	add	r1, r1, #1
   6c7c0:	str	r1, [r4]
   6c7c4:	ldr	r2, [r5, #36]	; 0x24
   6c7c8:	cmp	r1, r2
   6c7cc:	bcc	6c7b0 <Mat_GetDir+0x50>
   6c7d0:	b	6c82c <Mat_GetDir+0xcc>
   6c7d4:	mov	r5, #0
   6c7d8:	mov	r0, r5
   6c7dc:	sub	sp, fp, #28
   6c7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6c7e4:	cmp	r1, #512	; 0x200
   6c7e8:	bne	6c850 <Mat_GetDir+0xf0>
   6c7ec:	ldr	r0, [r5, #36]	; 0x24
   6c7f0:	cmp	r0, #0
   6c7f4:	beq	6c83c <Mat_GetDir+0xdc>
   6c7f8:	ldr	r6, [r5, #32]
   6c7fc:	mov	r1, #4
   6c800:	bl	1798 <calloc@plt>
   6c804:	cmp	r0, #0
   6c808:	str	r0, [r5, #40]	; 0x28
   6c80c:	beq	6c990 <Mat_GetDir+0x230>
   6c810:	mov	r7, #0
   6c814:	str	r7, [r5, #32]
   6c818:	ldr	r0, [pc, #460]	; 6c9ec <Mat_GetDir+0x28c>
   6c81c:	add	r0, pc, r0
   6c820:	bl	19b4 <Mat_Critical@plt>
   6c824:	str	r6, [r5, #32]
   6c828:	str	r7, [r4]
   6c82c:	ldr	r5, [r5, #40]	; 0x28
   6c830:	mov	r0, r5
   6c834:	sub	sp, fp, #28
   6c838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6c83c:	mov	r5, #0
   6c840:	str	r5, [r4]
   6c844:	mov	r0, r5
   6c848:	sub	sp, fp, #28
   6c84c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6c850:	ldr	r0, [r5]
   6c854:	bl	1840 <ftell@plt>
   6c858:	cmn	r0, #1
   6c85c:	beq	6c970 <Mat_GetDir+0x210>
   6c860:	mov	r6, r0
   6c864:	ldr	r0, [r5]
   6c868:	ldr	r1, [r5, #28]
   6c86c:	mov	r2, #0
   6c870:	mov	r7, #0
   6c874:	bl	1a2c <fseek@plt>
   6c878:	str	r7, [r5, #36]	; 0x24
   6c87c:	mov	sl, #4
   6c880:	ldr	r8, [pc, #360]	; 6c9f0 <Mat_GetDir+0x290>
   6c884:	ldr	r9, [pc, #360]	; 6c9f4 <Mat_GetDir+0x294>
   6c888:	add	r8, pc, r8
   6c88c:	add	r9, pc, r9
   6c890:	ldr	r0, [r5, #16]
   6c894:	cmp	r0, #16
   6c898:	bne	6c8cc <Mat_GetDir+0x16c>
   6c89c:	b	6c918 <Mat_GetDir+0x1b8>
   6c8a0:	ldr	r0, [r5]
   6c8a4:	bl	190c <feof@plt>
   6c8a8:	cmp	r0, #0
   6c8ac:	beq	6c9b0 <Mat_GetDir+0x250>
   6c8b0:	ldr	r0, [r5]
   6c8b4:	bl	190c <feof@plt>
   6c8b8:	cmp	r0, #0
   6c8bc:	bne	6c9c0 <Mat_GetDir+0x260>
   6c8c0:	ldr	r0, [r5, #16]
   6c8c4:	cmp	r0, #16
   6c8c8:	beq	6c918 <Mat_GetDir+0x1b8>
   6c8cc:	cmp	r0, #256	; 0x100
   6c8d0:	bne	6c8a0 <Mat_GetDir+0x140>
   6c8d4:	mov	r0, r5
   6c8d8:	bl	67d34 <Mat_VarReadNextInfo5>
   6c8dc:	mov	r7, r0
   6c8e0:	cmp	r0, #0
   6c8e4:	beq	6c8a0 <Mat_GetDir+0x140>
   6c8e8:	ldr	r0, [r7, #36]	; 0x24
   6c8ec:	cmp	r0, #0
   6c8f0:	beq	6c964 <Mat_GetDir+0x204>
   6c8f4:	ldr	r0, [r5, #40]	; 0x28
   6c8f8:	cmp	r0, #0
   6c8fc:	beq	6c930 <Mat_GetDir+0x1d0>
   6c900:	ldr	r1, [r5, #36]	; 0x24
   6c904:	add	r1, sl, r1, lsl #2
   6c908:	bl	1870 <realloc@plt>
   6c90c:	cmp	r0, #0
   6c910:	bne	6c940 <Mat_GetDir+0x1e0>
   6c914:	b	6c9b8 <Mat_GetDir+0x258>
   6c918:	mov	r0, r5
   6c91c:	bl	6ba60 <Mat_VarReadNextInfo4>
   6c920:	mov	r7, r0
   6c924:	cmp	r0, #0
   6c928:	bne	6c8e8 <Mat_GetDir+0x188>
   6c92c:	b	6c8a0 <Mat_GetDir+0x140>
   6c930:	mov	r0, #4
   6c934:	bl	18d0 <malloc@plt>
   6c938:	cmp	r0, #0
   6c93c:	beq	6c9b8 <Mat_GetDir+0x258>
   6c940:	str	r0, [r5, #40]	; 0x28
   6c944:	mov	r0, r9
   6c948:	ldr	r1, [r7, #36]	; 0x24
   6c94c:	bl	1da4 <strdup_printf>
   6c950:	ldr	r1, [r5, #36]	; 0x24
   6c954:	ldr	r2, [r5, #40]	; 0x28
   6c958:	add	r3, r1, #1
   6c95c:	str	r3, [r5, #36]	; 0x24
   6c960:	str	r0, [r2, r1, lsl #2]
   6c964:	mov	r0, r7
   6c968:	bl	1918 <Mat_VarFree@plt>
   6c96c:	b	6c8b0 <Mat_GetDir+0x150>
   6c970:	mov	r5, #0
   6c974:	str	r5, [r4]
   6c978:	ldr	r0, [pc, #124]	; 6c9fc <Mat_GetDir+0x29c>
   6c97c:	add	r0, pc, r0
   6c980:	bl	19b4 <Mat_Critical@plt>
   6c984:	mov	r0, r5
   6c988:	sub	sp, fp, #28
   6c98c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6c990:	mov	r5, #0
   6c994:	str	r5, [r4]
   6c998:	ldr	r0, [pc, #72]	; 6c9e8 <Mat_GetDir+0x288>
   6c99c:	add	r0, pc, r0
   6c9a0:	bl	19b4 <Mat_Critical@plt>
   6c9a4:	mov	r0, r5
   6c9a8:	sub	sp, fp, #28
   6c9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6c9b0:	ldr	r8, [pc, #64]	; 6c9f8 <Mat_GetDir+0x298>
   6c9b4:	add	r8, pc, r8
   6c9b8:	mov	r0, r8
   6c9bc:	bl	19b4 <Mat_Critical@plt>
   6c9c0:	ldr	r0, [r5]
   6c9c4:	mov	r1, r6
   6c9c8:	mov	r2, #0
   6c9cc:	bl	1a2c <fseek@plt>
   6c9d0:	ldr	r0, [r5, #36]	; 0x24
   6c9d4:	str	r0, [r4]
   6c9d8:	ldr	r5, [r5, #40]	; 0x28
   6c9dc:	mov	r0, r5
   6c9e0:	sub	sp, fp, #28
   6c9e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6c9e8:	.word	0x0000594b
   6c9ec:	.word	0x000056d4
   6c9f0:	.word	0x00005a5f
   6c9f4:	.word	0x00005d17
   6c9f8:	.word	0x0000553c
   6c9fc:	.word	0x000052e8

0006ca00 <Mat_VarReadNextInfo>:
   6ca00:	cmp	r0, #0
   6ca04:	beq	6ca20 <Mat_VarReadNextInfo+0x20>
   6ca08:	ldr	r1, [r0, #16]
   6ca0c:	cmp	r1, #16
   6ca10:	beq	6ca28 <Mat_VarReadNextInfo+0x28>
   6ca14:	cmp	r1, #256	; 0x100
   6ca18:	bne	6ca20 <Mat_VarReadNextInfo+0x20>
   6ca1c:	b	67d34 <Mat_VarReadNextInfo5>
   6ca20:	mov	r0, #0
   6ca24:	bx	lr
   6ca28:	b	6ba60 <Mat_VarReadNextInfo4>

0006ca2c <Mat_SizeOfClass>:
   6ca2c:	sub	r0, r0, #4
   6ca30:	cmp	r0, #11
   6ca34:	movhi	r0, #0
   6ca38:	bxhi	lr
   6ca3c:	ldr	r1, [pc, #8]	; 6ca4c <Mat_SizeOfClass+0x20>
   6ca40:	add	r1, pc, r1
   6ca44:	ldr	r0, [r1, r0, lsl #2]
   6ca48:	bx	lr
   6ca4c:	.word	0x00005f24

0006ca50 <Mat_VarCalloc>:
   6ca50:	push	{r4, r5, r6, sl, fp, lr}
   6ca54:	add	fp, sp, #16
   6ca58:	vpush	{d8-d9}
   6ca5c:	mov	r0, #56	; 0x38
   6ca60:	bl	18d0 <malloc@plt>
   6ca64:	cmp	r0, #0
   6ca68:	beq	6cac4 <Mat_VarCalloc+0x74>
   6ca6c:	vmov.i32	q4, #0	; 0x00000000
   6ca70:	mov	r4, #0
   6ca74:	mov	r5, r0
   6ca78:	str	r4, [r0, #48]	; 0x30
   6ca7c:	add	r0, r0, #32
   6ca80:	mov	r6, r5
   6ca84:	vst1.32	{d8-d9}, [r0]
   6ca88:	add	r0, r5, #16
   6ca8c:	vst1.32	{d8-d9}, [r0]
   6ca90:	mov	r0, #52	; 0x34
   6ca94:	vst1.32	{d8-d9}, [r6], r0
   6ca98:	mov	r0, #20
   6ca9c:	bl	18d0 <malloc@plt>
   6caa0:	cmp	r0, #0
   6caa4:	str	r0, [r6]
   6caa8:	beq	6cad4 <Mat_VarCalloc+0x84>
   6caac:	vst1.32	{d8-d9}, [r0]!
   6cab0:	str	r4, [r0]
   6cab4:	mov	r4, r5
   6cab8:	mov	r0, r4
   6cabc:	vpop	{d8-d9}
   6cac0:	pop	{r4, r5, r6, sl, fp, pc}
   6cac4:	mov	r4, #0
   6cac8:	mov	r0, r4
   6cacc:	vpop	{d8-d9}
   6cad0:	pop	{r4, r5, r6, sl, fp, pc}
   6cad4:	mov	r0, r5
   6cad8:	bl	1804 <free@plt>
   6cadc:	mov	r0, r4
   6cae0:	vpop	{d8-d9}
   6cae4:	pop	{r4, r5, r6, sl, fp, pc}

0006cae8 <Mat_VarCreate>:
   6cae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6caec:	add	fp, sp, #28
   6caf0:	sub	sp, sp, #4
   6caf4:	vpush	{d8-d9}
   6caf8:	sub	sp, sp, #8
   6cafc:	ldr	sl, [fp, #8]
   6cb00:	mov	r8, #0
   6cb04:	cmp	sl, #0
   6cb08:	beq	6d08c <Mat_VarCreate+0x5a4>
   6cb0c:	mov	r7, r0
   6cb10:	mov	r0, #56	; 0x38
   6cb14:	mov	r6, r3
   6cb18:	mov	r9, r2
   6cb1c:	mov	r4, r1
   6cb20:	bl	18d0 <malloc@plt>
   6cb24:	cmp	r0, #0
   6cb28:	beq	6d08c <Mat_VarCreate+0x5a4>
   6cb2c:	vmov.i32	q4, #0	; 0x00000000
   6cb30:	str	r4, [sp, #4]
   6cb34:	mov	r4, #0
   6cb38:	mov	r8, r0
   6cb3c:	add	r1, r0, #32
   6cb40:	str	r4, [r0, #48]	; 0x30
   6cb44:	add	r0, r0, #16
   6cb48:	mov	r5, r8
   6cb4c:	vst1.32	{d8-d9}, [r0]
   6cb50:	mov	r0, #52	; 0x34
   6cb54:	vst1.32	{d8-d9}, [r1]
   6cb58:	vst1.32	{d8-d9}, [r5], r0
   6cb5c:	mov	r0, #20
   6cb60:	bl	18d0 <malloc@plt>
   6cb64:	cmp	r0, #0
   6cb68:	str	r0, [r5]
   6cb6c:	beq	6cbec <Mat_VarCreate+0x104>
   6cb70:	ldr	r2, [fp, #16]
   6cb74:	vst1.32	{d8-d9}, [r0]!
   6cb78:	cmp	r7, #0
   6cb7c:	str	r4, [r0]
   6cb80:	and	r0, r2, #512	; 0x200
   6cb84:	and	r1, r2, #1024	; 0x400
   6cb88:	and	r2, r2, #2048	; 0x800
   6cb8c:	str	r2, [r8, #20]
   6cb90:	str	r1, [r8, #24]
   6cb94:	str	r0, [r8, #28]
   6cb98:	str	r4, [r8, #48]	; 0x30
   6cb9c:	beq	6cbb4 <Mat_VarCreate+0xcc>
   6cba0:	ldr	r0, [pc, #1272]	; 6d0a0 <Mat_VarCreate+0x5b8>
   6cba4:	mov	r1, r7
   6cba8:	add	r0, pc, r0
   6cbac:	bl	1da4 <strdup_printf>
   6cbb0:	str	r0, [r8, #36]	; 0x24
   6cbb4:	lsl	r0, r6, #2
   6cbb8:	str	r6, [r8, #4]
   6cbbc:	bl	18d0 <malloc@plt>
   6cbc0:	ldr	r3, [sp, #4]
   6cbc4:	mov	r4, #1
   6cbc8:	cmp	r6, #1
   6cbcc:	mov	r7, #1
   6cbd0:	str	r0, [r8, #32]
   6cbd4:	blt	6ccb4 <Mat_VarCreate+0x1cc>
   6cbd8:	cmp	r6, #4
   6cbdc:	bcs	6cbfc <Mat_VarCreate+0x114>
   6cbe0:	mov	r7, #1
   6cbe4:	mov	r1, #0
   6cbe8:	b	6cc9c <Mat_VarCreate+0x1b4>
   6cbec:	mov	r0, r8
   6cbf0:	bl	1804 <free@plt>
   6cbf4:	mov	r8, #0
   6cbf8:	b	6d08c <Mat_VarCreate+0x5a4>
   6cbfc:	bic	r1, r6, #3
   6cc00:	mov	r3, #1
   6cc04:	vmov.i32	q8, #1	; 0x00000001
   6cc08:	subs	r2, r1, #4
   6cc0c:	add	r2, r3, r2, lsr #2
   6cc10:	and	r3, r2, #1
   6cc14:	str	r3, [sp]
   6cc18:	beq	6cdb0 <Mat_VarCreate+0x2c8>
   6cc1c:	sub	r7, r2, r3
   6cc20:	mov	r3, #0
   6cc24:	mov	lr, #32
   6cc28:	mov	r5, r0
   6cc2c:	mov	r4, sl
   6cc30:	add	r2, r4, #16
   6cc34:	vld1.32	{d18-d19}, [r4], lr
   6cc38:	add	ip, r5, #16
   6cc3c:	subs	r7, r7, #2
   6cc40:	add	r3, r3, #8
   6cc44:	vst1.32	{d18-d19}, [r5], lr
   6cc48:	vmul.i32	q8, q9, q8
   6cc4c:	vld1.32	{d20-d21}, [r2]
   6cc50:	vmul.i32	q8, q10, q8
   6cc54:	vst1.32	{d20-d21}, [ip]
   6cc58:	bne	6cc30 <Mat_VarCreate+0x148>
   6cc5c:	ldr	r2, [sp]
   6cc60:	cmp	r2, #0
   6cc64:	beq	6cc7c <Mat_VarCreate+0x194>
   6cc68:	add	r2, sl, r3, lsl #2
   6cc6c:	vld1.32	{d18-d19}, [r2]
   6cc70:	add	r2, r0, r3, lsl #2
   6cc74:	vmul.i32	q8, q9, q8
   6cc78:	vst1.32	{d18-d19}, [r2]
   6cc7c:	vext.8	q9, q8, q8, #8
   6cc80:	ldr	r3, [sp, #4]
   6cc84:	cmp	r1, r6
   6cc88:	mov	r4, #1
   6cc8c:	vmul.i32	q0, q8, q9
   6cc90:	vmul.i32	q8, q0, d0[1]
   6cc94:	vmov.32	r7, d16[0]
   6cc98:	beq	6ccb4 <Mat_VarCreate+0x1cc>
   6cc9c:	ldr	r2, [sl, r1, lsl #2]
   6cca0:	mul	r7, r2, r7
   6cca4:	str	r2, [r0, r1, lsl #2]
   6cca8:	add	r1, r1, #1
   6ccac:	cmp	r1, r6
   6ccb0:	blt	6cc9c <Mat_VarCreate+0x1b4>
   6ccb4:	sub	r0, r9, #1
   6ccb8:	str	r9, [r8, #8]
   6ccbc:	str	r3, [r8, #16]
   6ccc0:	cmp	r0, #21
   6ccc4:	bhi	6cdc4 <Mat_VarCreate+0x2dc>
   6ccc8:	add	r1, pc, #8
   6cccc:	ldr	r5, [fp, #12]
   6ccd0:	ldr	r0, [r1, r0, lsl #2]
   6ccd4:	add	pc, r1, r0
   6ccd8:	.word	0x000001ac
   6ccdc:	.word	0x000001ac
   6cce0:	.word	0x000000ac
   6cce4:	.word	0x000000ac
   6cce8:	.word	0x00000058
   6ccec:	.word	0x00000058
   6ccf0:	.word	0x00000058
   6ccf4:	.word	0x000000ec
   6ccf8:	.word	0x000000bc
   6ccfc:	.word	0x000000ec
   6cd00:	.word	0x000000ec
   6cd04:	.word	0x000000bc
   6cd08:	.word	0x000000bc
   6cd0c:	.word	0x000000ec
   6cd10:	.word	0x000000ec
   6cd14:	.word	0x000001ac
   6cd18:	.word	0x000000ac
   6cd1c:	.word	0x00000058
   6cd20:	.word	0x000000ec
   6cd24:	.word	0x000000ec
   6cd28:	.word	0x00000058
   6cd2c:	.word	0x00000108
   6cd30:	mov	r4, #4
   6cd34:	cmp	r3, #5
   6cd38:	beq	6ce8c <Mat_VarCreate+0x3a4>
   6cd3c:	umull	r6, r0, r7, r4
   6cd40:	str	r4, [r8, #12]
   6cd44:	cmp	r0, #0
   6cd48:	movwne	r0, #1
   6cd4c:	cmp	r0, #0
   6cd50:	movwne	r6, #0
   6cd54:	str	r6, [r8]
   6cd58:	cmp	r5, #0
   6cd5c:	bne	6cea0 <Mat_VarCreate+0x3b8>
   6cd60:	cmp	r3, #1
   6cd64:	bne	6cda4 <Mat_VarCreate+0x2bc>
   6cd68:	cmp	r7, #0
   6cd6c:	beq	6cda4 <Mat_VarCreate+0x2bc>
   6cd70:	mov	r0, r7
   6cd74:	mov	r1, #4
   6cd78:	bl	1798 <calloc@plt>
   6cd7c:	str	r0, [r8, #40]	; 0x28
   6cd80:	b	6d08c <Mat_VarCreate+0x5a4>
   6cd84:	mov	r4, #2
   6cd88:	cmp	r3, #5
   6cd8c:	beq	6ce8c <Mat_VarCreate+0x3a4>
   6cd90:	b	6cd3c <Mat_VarCreate+0x254>
   6cd94:	mov	r4, #8
   6cd98:	cmp	r3, #5
   6cd9c:	beq	6ce8c <Mat_VarCreate+0x3a4>
   6cda0:	b	6cd3c <Mat_VarCreate+0x254>
   6cda4:	mov	r0, #0
   6cda8:	str	r0, [r8, #40]	; 0x28
   6cdac:	b	6d08c <Mat_VarCreate+0x5a4>
   6cdb0:	mov	r3, #0
   6cdb4:	ldr	r2, [sp]
   6cdb8:	cmp	r2, #0
   6cdbc:	bne	6cc68 <Mat_VarCreate+0x180>
   6cdc0:	b	6cc7c <Mat_VarCreate+0x194>
   6cdc4:	mov	r0, r8
   6cdc8:	bl	1918 <Mat_VarFree@plt>
   6cdcc:	ldr	r0, [pc, #720]	; 6d0a4 <Mat_VarCreate+0x5bc>
   6cdd0:	add	r0, pc, r0
   6cdd4:	bl	19b4 <Mat_Critical@plt>
   6cdd8:	mov	r8, #0
   6cddc:	b	6d08c <Mat_VarCreate+0x5a4>
   6cde0:	mov	r4, #4
   6cde4:	cmp	r5, #0
   6cde8:	beq	6ce84 <Mat_VarCreate+0x39c>
   6cdec:	mov	r0, #0
   6cdf0:	ldr	r1, [r5, r0, lsl #2]
   6cdf4:	add	r0, r0, #1
   6cdf8:	cmp	r1, #0
   6cdfc:	bne	6cdf0 <Mat_VarCreate+0x308>
   6ce00:	sub	r6, r0, #1
   6ce04:	cmp	r7, #0
   6ce08:	beq	6ce10 <Mat_VarCreate+0x328>
   6ce0c:	udiv	r6, r6, r7
   6ce10:	ldr	r9, [r8, #52]	; 0x34
   6ce14:	cmp	r6, #0
   6ce18:	str	r6, [r9, #4]
   6ce1c:	beq	6ce80 <Mat_VarCreate+0x398>
   6ce20:	mov	r0, r6
   6ce24:	mov	r1, #4
   6ce28:	bl	1798 <calloc@plt>
   6ce2c:	mov	r4, #0
   6ce30:	str	r0, [r9, #8]
   6ce34:	ldr	r0, [r5, r4, lsl #2]
   6ce38:	ldr	r0, [r0, #36]	; 0x24
   6ce3c:	bl	1864 <strdup@plt>
   6ce40:	ldr	r1, [r8, #52]	; 0x34
   6ce44:	ldr	r1, [r1, #8]
   6ce48:	str	r0, [r1, r4, lsl #2]
   6ce4c:	add	r4, r4, #1
   6ce50:	cmp	r6, r4
   6ce54:	bne	6ce34 <Mat_VarCreate+0x34c>
   6ce58:	umull	r7, r0, r7, r6
   6ce5c:	ldr	r3, [r8, #16]
   6ce60:	mov	r4, #4
   6ce64:	cmp	r0, #0
   6ce68:	movwne	r0, #1
   6ce6c:	cmp	r0, #0
   6ce70:	movwne	r7, #0
   6ce74:	cmp	r3, #5
   6ce78:	beq	6ce8c <Mat_VarCreate+0x3a4>
   6ce7c:	b	6cd3c <Mat_VarCreate+0x254>
   6ce80:	ldr	r3, [sp, #4]
   6ce84:	cmp	r3, #5
   6ce88:	bne	6cd3c <Mat_VarCreate+0x254>
   6ce8c:	mov	r6, #28
   6ce90:	str	r6, [r8]
   6ce94:	str	r6, [r8, #12]
   6ce98:	cmp	r5, #0
   6ce9c:	beq	6cd60 <Mat_VarCreate+0x278>
   6cea0:	ldr	r0, [fp, #16]
   6cea4:	tst	r0, #1
   6cea8:	bne	6cfb0 <Mat_VarCreate+0x4c8>
   6ceac:	cmp	r3, #5
   6ceb0:	bne	6cfbc <Mat_VarCreate+0x4d4>
   6ceb4:	mov	r0, #28
   6ceb8:	mov	sl, r4
   6cebc:	bl	18d0 <malloc@plt>
   6cec0:	mov	r6, r0
   6cec4:	cmp	r0, #0
   6cec8:	beq	6d088 <Mat_VarCreate+0x5a0>
   6cecc:	ldr	r0, [r5]
   6ced0:	str	r0, [r6]
   6ced4:	ldr	r0, [r5, #8]
   6ced8:	str	r0, [r6, #8]
   6cedc:	lsl	r7, r0, #2
   6cee0:	ldr	r4, [r5, #16]
   6cee4:	ldr	r9, [r5, #20]
   6cee8:	mov	r0, r7
   6ceec:	str	r4, [r6, #16]
   6cef0:	str	r9, [r6, #20]
   6cef4:	bl	18d0 <malloc@plt>
   6cef8:	cmp	r0, #0
   6cefc:	str	r0, [r6, #4]
   6cf00:	beq	6cf10 <Mat_VarCreate+0x428>
   6cf04:	ldr	r1, [r5, #4]
   6cf08:	mov	r2, r7
   6cf0c:	bl	181c <memcpy@plt>
   6cf10:	lsl	r7, r4, #2
   6cf14:	mov	r0, r7
   6cf18:	bl	18d0 <malloc@plt>
   6cf1c:	cmp	r0, #0
   6cf20:	str	r0, [r6, #12]
   6cf24:	beq	6cf34 <Mat_VarCreate+0x44c>
   6cf28:	ldr	r1, [r5, #12]
   6cf2c:	mov	r2, r7
   6cf30:	bl	181c <memcpy@plt>
   6cf34:	ldr	r0, [r8, #20]
   6cf38:	cmp	r0, #0
   6cf3c:	beq	6d064 <Mat_VarCreate+0x57c>
   6cf40:	mov	r0, #8
   6cf44:	bl	18d0 <malloc@plt>
   6cf48:	cmp	r0, #0
   6cf4c:	str	r0, [r6, #24]
   6cf50:	beq	6d088 <Mat_VarCreate+0x5a0>
   6cf54:	mul	r4, r9, sl
   6cf58:	ldr	sl, [r5, #24]
   6cf5c:	mov	r7, r0
   6cf60:	mov	r0, r4
   6cf64:	bl	18d0 <malloc@plt>
   6cf68:	mov	r5, r0
   6cf6c:	str	r0, [r7]
   6cf70:	mov	r0, r4
   6cf74:	bl	18d0 <malloc@plt>
   6cf78:	mov	r9, r0
   6cf7c:	cmp	r5, #0
   6cf80:	str	r0, [r7, #4]
   6cf84:	beq	6cf98 <Mat_VarCreate+0x4b0>
   6cf88:	ldr	r1, [sl]
   6cf8c:	mov	r0, r5
   6cf90:	mov	r2, r4
   6cf94:	bl	181c <memcpy@plt>
   6cf98:	cmp	r9, #0
   6cf9c:	beq	6d088 <Mat_VarCreate+0x5a0>
   6cfa0:	ldr	r1, [sl, #4]
   6cfa4:	mov	r0, r9
   6cfa8:	mov	r2, r4
   6cfac:	b	6d084 <Mat_VarCreate+0x59c>
   6cfb0:	mov	r0, #1
   6cfb4:	str	r5, [r8, #40]	; 0x28
   6cfb8:	b	6d05c <Mat_VarCreate+0x574>
   6cfbc:	ldr	r0, [r8, #20]
   6cfc0:	cmp	r0, #0
   6cfc4:	beq	6d030 <Mat_VarCreate+0x548>
   6cfc8:	mov	r0, #8
   6cfcc:	bl	18d0 <malloc@plt>
   6cfd0:	cmp	r0, #0
   6cfd4:	str	r0, [r8, #40]	; 0x28
   6cfd8:	cmpne	r6, #0
   6cfdc:	beq	6d058 <Mat_VarCreate+0x570>
   6cfe0:	mov	r7, r0
   6cfe4:	mov	r0, r6
   6cfe8:	bl	18d0 <malloc@plt>
   6cfec:	mov	r9, r0
   6cff0:	str	r0, [r7]
   6cff4:	mov	r0, r6
   6cff8:	bl	18d0 <malloc@plt>
   6cffc:	mov	r4, r0
   6d000:	cmp	r9, #0
   6d004:	str	r0, [r7, #4]
   6d008:	beq	6d01c <Mat_VarCreate+0x534>
   6d00c:	ldr	r1, [r5]
   6d010:	mov	r0, r9
   6d014:	mov	r2, r6
   6d018:	bl	181c <memcpy@plt>
   6d01c:	cmp	r4, #0
   6d020:	beq	6d058 <Mat_VarCreate+0x570>
   6d024:	ldr	r1, [r5, #4]
   6d028:	mov	r0, r4
   6d02c:	b	6d050 <Mat_VarCreate+0x568>
   6d030:	cmp	r6, #0
   6d034:	beq	6d058 <Mat_VarCreate+0x570>
   6d038:	mov	r0, r6
   6d03c:	bl	18d0 <malloc@plt>
   6d040:	cmp	r0, #0
   6d044:	str	r0, [r8, #40]	; 0x28
   6d048:	beq	6d058 <Mat_VarCreate+0x570>
   6d04c:	mov	r1, r5
   6d050:	mov	r2, r6
   6d054:	bl	181c <memcpy@plt>
   6d058:	mov	r0, #0
   6d05c:	str	r0, [r8, #44]	; 0x2c
   6d060:	b	6d08c <Mat_VarCreate+0x5a4>
   6d064:	mul	r7, r9, sl
   6d068:	mov	r0, r7
   6d06c:	bl	18d0 <malloc@plt>
   6d070:	cmp	r0, #0
   6d074:	str	r0, [r6, #24]
   6d078:	beq	6d088 <Mat_VarCreate+0x5a0>
   6d07c:	ldr	r1, [r5, #24]
   6d080:	mov	r2, r7
   6d084:	bl	181c <memcpy@plt>
   6d088:	str	r6, [r8, #40]	; 0x28
   6d08c:	mov	r0, r8
   6d090:	sub	sp, fp, #48	; 0x30
   6d094:	vpop	{d8-d9}
   6d098:	add	sp, sp, #4
   6d09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d0a0:	.word	0x000059fb
   6d0a4:	.word	0x00005542

0006d0a8 <Mat_VarDelete>:
   6d0a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6d0ac:	add	fp, sp, #28
   6d0b0:	sub	sp, sp, #20
   6d0b4:	sub	sp, sp, #8192	; 0x2000
   6d0b8:	mov	r9, r0
   6d0bc:	movw	r0, #22616	; 0x5858
   6d0c0:	mov	r6, #1
   6d0c4:	movt	r0, #88	; 0x58
   6d0c8:	cmp	r9, #0
   6d0cc:	movne	r7, r1
   6d0d0:	cmpne	r1, #0
   6d0d4:	str	r0, [sp, #11]
   6d0d8:	movw	r0, #22616	; 0x5858
   6d0dc:	movt	r0, #22616	; 0x5858
   6d0e0:	str	r0, [sp, #8]
   6d0e4:	bne	6d0f4 <Mat_VarDelete+0x4c>
   6d0e8:	mov	r0, r6
   6d0ec:	sub	sp, fp, #28
   6d0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d0f4:	add	r0, sp, #8
   6d0f8:	bl	18e8 <mktemp@plt>
   6d0fc:	cmp	r0, #0
   6d100:	beq	6d16c <Mat_VarDelete+0xc4>
   6d104:	ldr	r1, [r9, #16]
   6d108:	mov	r8, r0
   6d10c:	cmp	r1, #512	; 0x200
   6d110:	mov	r0, r1
   6d114:	movwne	r0, #256	; 0x100
   6d118:	cmp	r1, #16
   6d11c:	moveq	r0, r1
   6d120:	cmp	r0, #256	; 0x100
   6d124:	beq	6d184 <Mat_VarDelete+0xdc>
   6d128:	cmp	r0, #16
   6d12c:	bne	6d0e8 <Mat_VarDelete+0x40>
   6d130:	mov	r0, r8
   6d134:	bl	6a6c8 <Mat_Create4>
   6d138:	mov	r5, r0
   6d13c:	cmp	r0, #0
   6d140:	beq	6d0e8 <Mat_VarDelete+0x40>
   6d144:	ldr	r0, [r9, #16]
   6d148:	cmp	r0, #16
   6d14c:	beq	6d1a0 <Mat_VarDelete+0xf8>
   6d150:	cmp	r0, #512	; 0x200
   6d154:	beq	6d214 <Mat_VarDelete+0x16c>
   6d158:	cmp	r0, #256	; 0x100
   6d15c:	bne	6d1b0 <Mat_VarDelete+0x108>
   6d160:	ldr	r0, [r9]
   6d164:	mov	r1, #128	; 0x80
   6d168:	b	6d1a8 <Mat_VarDelete+0x100>
   6d16c:	ldr	r0, [pc, #1152]	; 6d5f4 <Mat_VarDelete+0x54c>
   6d170:	add	r0, pc, r0
   6d174:	bl	19b4 <Mat_Critical@plt>
   6d178:	mov	r0, r6
   6d17c:	sub	sp, fp, #28
   6d180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d184:	ldr	r1, [r9, #4]
   6d188:	mov	r0, r8
   6d18c:	bl	31910 <Mat_Create5>
   6d190:	mov	r5, r0
   6d194:	cmp	r0, #0
   6d198:	bne	6d144 <Mat_VarDelete+0x9c>
   6d19c:	b	6d0e8 <Mat_VarDelete+0x40>
   6d1a0:	ldr	r0, [r9]
   6d1a4:	mov	r1, #0
   6d1a8:	mov	r2, #0
   6d1ac:	bl	1a2c <fseek@plt>
   6d1b0:	mov	r0, r9
   6d1b4:	bl	17a4 <Mat_VarReadNext@plt>
   6d1b8:	cmp	r0, #0
   6d1bc:	beq	6d22c <Mat_VarDelete+0x184>
   6d1c0:	mov	r6, r0
   6d1c4:	mov	r4, #1
   6d1c8:	b	6d1f8 <Mat_VarDelete+0x150>
   6d1cc:	ldr	r2, [r6, #48]	; 0x30
   6d1d0:	mov	r0, r5
   6d1d4:	mov	r1, r6
   6d1d8:	bl	1828 <Mat_VarWrite@plt>
   6d1dc:	mov	r0, r6
   6d1e0:	bl	1918 <Mat_VarFree@plt>
   6d1e4:	mov	r0, r9
   6d1e8:	bl	17a4 <Mat_VarReadNext@plt>
   6d1ec:	mov	r6, r0
   6d1f0:	cmp	r0, #0
   6d1f4:	beq	6d230 <Mat_VarDelete+0x188>
   6d1f8:	ldr	r0, [r6, #36]	; 0x24
   6d1fc:	mov	r1, r7
   6d200:	bl	17b0 <strcmp@plt>
   6d204:	cmp	r0, #0
   6d208:	bne	6d1cc <Mat_VarDelete+0x124>
   6d20c:	mov	r4, #0
   6d210:	b	6d1dc <Mat_VarDelete+0x134>
   6d214:	mov	r0, #0
   6d218:	str	r0, [r9, #32]
   6d21c:	mov	r0, r9
   6d220:	bl	17a4 <Mat_VarReadNext@plt>
   6d224:	cmp	r0, #0
   6d228:	bne	6d1c0 <Mat_VarDelete+0x118>
   6d22c:	mov	r4, #1
   6d230:	ldr	sl, [r5, #36]	; 0x24
   6d234:	ldr	r6, [r5, #40]	; 0x28
   6d238:	mov	r0, #0
   6d23c:	str	r0, [r5, #40]	; 0x28
   6d240:	mov	r0, r5
   6d244:	bl	19a8 <Mat_Close@plt>
   6d248:	cmp	r4, #0
   6d24c:	beq	6d284 <Mat_VarDelete+0x1dc>
   6d250:	mov	r0, r8
   6d254:	bl	19f0 <remove@plt>
   6d258:	mov	r6, r0
   6d25c:	cmn	r0, #1
   6d260:	bne	6d0e8 <Mat_VarDelete+0x40>
   6d264:	ldr	r0, [pc, #900]	; 6d5f0 <Mat_VarDelete+0x548>
   6d268:	mov	r1, r8
   6d26c:	add	r0, pc, r0
   6d270:	bl	19b4 <Mat_Critical@plt>
   6d274:	mvn	r6, #0
   6d278:	mov	r0, r6
   6d27c:	sub	sp, fp, #28
   6d280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d284:	ldr	r1, [r9, #12]
   6d288:	ldr	r0, [pc, #832]	; 6d5d0 <Mat_VarDelete+0x528>
   6d28c:	add	r0, pc, r0
   6d290:	bl	1da4 <strdup_printf>
   6d294:	mov	r7, r0
   6d298:	ldr	r0, [r9]
   6d29c:	cmp	r0, #0
   6d2a0:	beq	6d2b0 <Mat_VarDelete+0x208>
   6d2a4:	bl	19cc <fclose@plt>
   6d2a8:	mov	r0, #0
   6d2ac:	str	r0, [r9]
   6d2b0:	add	r0, sp, #16
   6d2b4:	mov	r1, #0
   6d2b8:	mov	r2, #8192	; 0x2000
   6d2bc:	bl	1990 <memset@plt>
   6d2c0:	ldr	r1, [pc, #780]	; 6d5d4 <Mat_VarDelete+0x52c>
   6d2c4:	mov	r0, r8
   6d2c8:	add	r1, pc, r1
   6d2cc:	bl	17e0 <fopen@plt>
   6d2d0:	cmp	r0, #0
   6d2d4:	beq	6d37c <Mat_VarDelete+0x2d4>
   6d2d8:	str	r6, [sp, #4]
   6d2dc:	mov	r5, r0
   6d2e0:	mov	r0, r7
   6d2e4:	ldr	r1, [pc, #752]	; 6d5dc <Mat_VarDelete+0x534>
   6d2e8:	add	r1, pc, r1
   6d2ec:	bl	17e0 <fopen@plt>
   6d2f0:	cmp	r0, #0
   6d2f4:	beq	6d398 <Mat_VarDelete+0x2f0>
   6d2f8:	str	r7, [sp]
   6d2fc:	mov	r6, r0
   6d300:	mov	r4, r8
   6d304:	add	r7, sp, #16
   6d308:	mov	r0, r7
   6d30c:	mov	r1, #1
   6d310:	mov	r2, #8192	; 0x2000
   6d314:	mov	r3, r5
   6d318:	bl	1a14 <fread_unlocked@plt>
   6d31c:	cmp	r0, #0
   6d320:	beq	6d430 <Mat_VarDelete+0x388>
   6d324:	mov	r8, r0
   6d328:	mov	r0, r7
   6d32c:	mov	r1, #1
   6d330:	mov	r3, r6
   6d334:	mov	r2, r8
   6d338:	bl	184c <fwrite_unlocked@plt>
   6d33c:	cmp	r8, r0
   6d340:	beq	6d308 <Mat_VarDelete+0x260>
   6d344:	mov	r0, r5
   6d348:	bl	19cc <fclose@plt>
   6d34c:	mov	r0, r6
   6d350:	bl	19cc <fclose@plt>
   6d354:	ldr	r0, [pc, #644]	; 6d5e0 <Mat_VarDelete+0x538>
   6d358:	ldr	r7, [sp]
   6d35c:	add	r0, pc, r0
   6d360:	mov	r1, r7
   6d364:	bl	19b4 <Mat_Critical@plt>
   6d368:	mov	r8, r4
   6d36c:	ldr	r6, [sp, #4]
   6d370:	cmp	r6, #0
   6d374:	bne	6d3bc <Mat_VarDelete+0x314>
   6d378:	b	6d404 <Mat_VarDelete+0x35c>
   6d37c:	ldr	r0, [pc, #596]	; 6d5d8 <Mat_VarDelete+0x530>
   6d380:	mov	r1, r8
   6d384:	add	r0, pc, r0
   6d388:	bl	19b4 <Mat_Critical@plt>
   6d38c:	cmp	r6, #0
   6d390:	bne	6d3bc <Mat_VarDelete+0x314>
   6d394:	b	6d404 <Mat_VarDelete+0x35c>
   6d398:	mov	r0, r5
   6d39c:	bl	19cc <fclose@plt>
   6d3a0:	ldr	r0, [pc, #592]	; 6d5f8 <Mat_VarDelete+0x550>
   6d3a4:	mov	r1, r7
   6d3a8:	add	r0, pc, r0
   6d3ac:	bl	19b4 <Mat_Critical@plt>
   6d3b0:	ldr	r6, [sp, #4]
   6d3b4:	cmp	r6, #0
   6d3b8:	beq	6d404 <Mat_VarDelete+0x35c>
   6d3bc:	cmp	sl, #0
   6d3c0:	beq	6d3fc <Mat_VarDelete+0x354>
   6d3c4:	mov	r4, r6
   6d3c8:	ldr	r0, [r4]
   6d3cc:	cmp	r0, #0
   6d3d0:	bne	6d3ec <Mat_VarDelete+0x344>
   6d3d4:	add	r4, r4, #4
   6d3d8:	subs	sl, sl, #1
   6d3dc:	beq	6d3fc <Mat_VarDelete+0x354>
   6d3e0:	ldr	r0, [r4]
   6d3e4:	cmp	r0, #0
   6d3e8:	beq	6d3d4 <Mat_VarDelete+0x32c>
   6d3ec:	bl	1804 <free@plt>
   6d3f0:	add	r4, r4, #4
   6d3f4:	subs	sl, sl, #1
   6d3f8:	bne	6d3e0 <Mat_VarDelete+0x338>
   6d3fc:	mov	r0, r6
   6d400:	bl	1804 <free@plt>
   6d404:	ldr	r0, [pc, #472]	; 6d5e4 <Mat_VarDelete+0x53c>
   6d408:	mov	r1, r8
   6d40c:	mov	r2, r7
   6d410:	add	r0, pc, r0
   6d414:	bl	19b4 <Mat_Critical@plt>
   6d418:	mvn	r6, #0
   6d41c:	mov	r0, r7
   6d420:	bl	1804 <free@plt>
   6d424:	mov	r0, r6
   6d428:	sub	sp, fp, #28
   6d42c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d430:	mov	r0, r5
   6d434:	bl	19cc <fclose@plt>
   6d438:	mov	r0, r6
   6d43c:	bl	19cc <fclose@plt>
   6d440:	mov	r0, r4
   6d444:	mov	r5, r4
   6d448:	bl	19f0 <remove@plt>
   6d44c:	cmn	r0, #1
   6d450:	beq	6d550 <Mat_VarDelete+0x4a8>
   6d454:	ldr	r7, [sp]
   6d458:	ldr	r1, [r9, #24]
   6d45c:	mov	r6, r0
   6d460:	mov	r0, r7
   6d464:	bl	17c8 <Mat_Open@plt>
   6d468:	cmp	r0, #0
   6d46c:	beq	6d5bc <Mat_VarDelete+0x514>
   6d470:	mov	r5, r0
   6d474:	ldr	r0, [r9, #4]
   6d478:	cmp	r0, #0
   6d47c:	beq	6d484 <Mat_VarDelete+0x3dc>
   6d480:	bl	1804 <free@plt>
   6d484:	ldr	r0, [r9, #8]
   6d488:	cmp	r0, #0
   6d48c:	beq	6d494 <Mat_VarDelete+0x3ec>
   6d490:	bl	1804 <free@plt>
   6d494:	ldr	r0, [r9, #12]
   6d498:	cmp	r0, #0
   6d49c:	beq	6d4a4 <Mat_VarDelete+0x3fc>
   6d4a0:	bl	1804 <free@plt>
   6d4a4:	ldr	r0, [r9, #40]	; 0x28
   6d4a8:	cmp	r0, #0
   6d4ac:	beq	6d504 <Mat_VarDelete+0x45c>
   6d4b0:	ldr	r2, [r9, #36]	; 0x24
   6d4b4:	cmp	r2, #0
   6d4b8:	beq	6d500 <Mat_VarDelete+0x458>
   6d4bc:	mov	r4, #0
   6d4c0:	ldr	r1, [r0, r4, lsl #2]
   6d4c4:	cmp	r1, #0
   6d4c8:	bne	6d4e4 <Mat_VarDelete+0x43c>
   6d4cc:	add	r4, r4, #1
   6d4d0:	cmp	r4, r2
   6d4d4:	bcs	6d500 <Mat_VarDelete+0x458>
   6d4d8:	ldr	r1, [r0, r4, lsl #2]
   6d4dc:	cmp	r1, #0
   6d4e0:	beq	6d4cc <Mat_VarDelete+0x424>
   6d4e4:	mov	r0, r1
   6d4e8:	bl	1804 <free@plt>
   6d4ec:	ldr	r2, [r9, #36]	; 0x24
   6d4f0:	ldr	r0, [r9, #40]	; 0x28
   6d4f4:	add	r4, r4, #1
   6d4f8:	cmp	r4, r2
   6d4fc:	bcc	6d4d8 <Mat_VarDelete+0x430>
   6d500:	bl	1804 <free@plt>
   6d504:	mov	r0, #28
   6d508:	mov	r1, r5
   6d50c:	mov	r4, r9
   6d510:	vld1.32	{d16-d17}, [r1], r0
   6d514:	add	r0, r5, #16
   6d518:	vld1.32	{d18-d19}, [r0]
   6d51c:	vld1.32	{d20-d21}, [r1]
   6d520:	add	r0, r9, #16
   6d524:	vst1.32	{d18-d19}, [r0]
   6d528:	add	r0, r9, #28
   6d52c:	vst1.32	{d20-d21}, [r0]
   6d530:	mov	r0, #40	; 0x28
   6d534:	vst1.32	{d16-d17}, [r4], r0
   6d538:	mov	r0, r5
   6d53c:	bl	1804 <free@plt>
   6d540:	ldr	r0, [sp, #4]
   6d544:	str	r0, [r4]
   6d548:	str	sl, [r9, #36]	; 0x24
   6d54c:	b	6d41c <Mat_VarDelete+0x374>
   6d550:	ldr	r6, [sp, #4]
   6d554:	cmp	r6, #0
   6d558:	beq	6d5a4 <Mat_VarDelete+0x4fc>
   6d55c:	cmp	sl, #0
   6d560:	beq	6d59c <Mat_VarDelete+0x4f4>
   6d564:	mov	r4, r6
   6d568:	ldr	r0, [r4]
   6d56c:	cmp	r0, #0
   6d570:	bne	6d58c <Mat_VarDelete+0x4e4>
   6d574:	add	r4, r4, #4
   6d578:	subs	sl, sl, #1
   6d57c:	beq	6d59c <Mat_VarDelete+0x4f4>
   6d580:	ldr	r0, [r4]
   6d584:	cmp	r0, #0
   6d588:	beq	6d574 <Mat_VarDelete+0x4cc>
   6d58c:	bl	1804 <free@plt>
   6d590:	add	r4, r4, #4
   6d594:	subs	sl, sl, #1
   6d598:	bne	6d580 <Mat_VarDelete+0x4d8>
   6d59c:	mov	r0, r6
   6d5a0:	bl	1804 <free@plt>
   6d5a4:	ldr	r0, [pc, #60]	; 6d5e8 <Mat_VarDelete+0x540>
   6d5a8:	mov	r1, r5
   6d5ac:	add	r0, pc, r0
   6d5b0:	bl	19b4 <Mat_Critical@plt>
   6d5b4:	ldr	r7, [sp]
   6d5b8:	b	6d418 <Mat_VarDelete+0x370>
   6d5bc:	ldr	r0, [pc, #40]	; 6d5ec <Mat_VarDelete+0x544>
   6d5c0:	mov	r1, r7
   6d5c4:	add	r0, pc, r0
   6d5c8:	bl	19b4 <Mat_Critical@plt>
   6d5cc:	b	6d41c <Mat_VarDelete+0x374>
   6d5d0:	.word	0x00005317
   6d5d4:	.word	0x00004f44
   6d5d8:	.word	0x000054bc
   6d5dc:	.word	0x0000557b
   6d5e0:	.word	0x0000552d
   6d5e4:	.word	0x00004f20
   6d5e8:	.word	0x00004da8
   6d5ec:	.word	0x00004da9
   6d5f0:	.word	0x000050e8
   6d5f4:	.word	0x00005214
   6d5f8:	.word	0x000054be

0006d5fc <Mat_VarReadNext>:
   6d5fc:	push	{r4, r5, r6, r7, fp, lr}
   6d600:	add	fp, sp, #16
   6d604:	mov	r5, r0
   6d608:	ldr	r0, [r0, #16]
   6d60c:	mov	r4, #0
   6d610:	cmp	r0, #512	; 0x200
   6d614:	beq	6d628 <Mat_VarReadNext+0x2c>
   6d618:	ldr	r0, [r5]
   6d61c:	bl	190c <feof@plt>
   6d620:	cmp	r0, #0
   6d624:	beq	6d630 <Mat_VarReadNext+0x34>
   6d628:	mov	r0, r4
   6d62c:	pop	{r4, r5, r6, r7, fp, pc}
   6d630:	ldr	r0, [r5]
   6d634:	bl	1840 <ftell@plt>
   6d638:	cmn	r0, #1
   6d63c:	beq	6d6a0 <Mat_VarReadNext+0xa4>
   6d640:	mov	r6, r0
   6d644:	ldr	r0, [r5, #16]
   6d648:	cmp	r0, #16
   6d64c:	beq	6d6b4 <Mat_VarReadNext+0xb8>
   6d650:	cmp	r0, #256	; 0x100
   6d654:	bne	6d6cc <Mat_VarReadNext+0xd0>
   6d658:	mov	r0, r5
   6d65c:	bl	67d34 <Mat_VarReadNextInfo5>
   6d660:	mov	r7, r0
   6d664:	cmp	r0, #0
   6d668:	beq	6d6c8 <Mat_VarReadNext+0xcc>
   6d66c:	ldr	r0, [r5]
   6d670:	cmp	r0, #0
   6d674:	beq	6d6f0 <Mat_VarReadNext+0xf4>
   6d678:	ldr	r0, [r5, #16]
   6d67c:	cmp	r0, #16
   6d680:	beq	6d6f8 <Mat_VarReadNext+0xfc>
   6d684:	cmp	r0, #256	; 0x100
   6d688:	bne	6d6f0 <Mat_VarReadNext+0xf4>
   6d68c:	mov	r0, r5
   6d690:	mov	r1, r7
   6d694:	bl	31af0 <Mat_VarRead5>
   6d698:	mov	r0, r7
   6d69c:	pop	{r4, r5, r6, r7, fp, pc}
   6d6a0:	ldr	r0, [pc, #100]	; 6d70c <Mat_VarReadNext+0x110>
   6d6a4:	add	r0, pc, r0
   6d6a8:	bl	19b4 <Mat_Critical@plt>
   6d6ac:	mov	r0, r4
   6d6b0:	pop	{r4, r5, r6, r7, fp, pc}
   6d6b4:	mov	r0, r5
   6d6b8:	bl	6ba60 <Mat_VarReadNextInfo4>
   6d6bc:	mov	r7, r0
   6d6c0:	cmp	r0, #0
   6d6c4:	bne	6d66c <Mat_VarReadNext+0x70>
   6d6c8:	ldr	r0, [r5, #16]
   6d6cc:	cmp	r0, #512	; 0x200
   6d6d0:	beq	6d628 <Mat_VarReadNext+0x2c>
   6d6d4:	ldr	r0, [r5]
   6d6d8:	mov	r1, r6
   6d6dc:	mov	r2, #0
   6d6e0:	mov	r4, #0
   6d6e4:	bl	1a2c <fseek@plt>
   6d6e8:	mov	r0, r4
   6d6ec:	pop	{r4, r5, r6, r7, fp, pc}
   6d6f0:	mov	r0, r7
   6d6f4:	pop	{r4, r5, r6, r7, fp, pc}
   6d6f8:	mov	r0, r5
   6d6fc:	mov	r1, r7
   6d700:	bl	6ade8 <Mat_VarRead4>
   6d704:	mov	r0, r7
   6d708:	pop	{r4, r5, r6, r7, fp, pc}
   6d70c:	.word	0x000045c0

0006d710 <Mat_VarWrite>:
   6d710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6d714:	add	fp, sp, #28
   6d718:	sub	sp, sp, #4
   6d71c:	mov	r9, r0
   6d720:	mvn	r0, #0
   6d724:	cmp	r9, #0
   6d728:	movne	sl, r1
   6d72c:	cmpne	r1, #0
   6d730:	bne	6d73c <Mat_VarWrite+0x2c>
   6d734:	sub	sp, fp, #28
   6d738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d73c:	ldr	r0, [r9, #40]	; 0x28
   6d740:	mov	r8, r2
   6d744:	cmp	r0, #0
   6d748:	beq	6d75c <Mat_VarWrite+0x4c>
   6d74c:	ldr	r6, [r9, #36]	; 0x24
   6d750:	cmp	r6, #0
   6d754:	bne	6d77c <Mat_VarWrite+0x6c>
   6d758:	b	6d7d0 <Mat_VarWrite+0xc0>
   6d75c:	mov	r0, #0
   6d760:	mov	r1, sp
   6d764:	str	r0, [sp]
   6d768:	mov	r0, r9
   6d76c:	bl	1930 <Mat_GetDir@plt>
   6d770:	ldr	r6, [r9, #36]	; 0x24
   6d774:	cmp	r6, #0
   6d778:	beq	6d7d0 <Mat_VarWrite+0xc0>
   6d77c:	ldr	r4, [r9, #40]	; 0x28
   6d780:	mov	r5, #0
   6d784:	ldr	r0, [r4, r5, lsl #2]
   6d788:	cmp	r0, #0
   6d78c:	bne	6d7a8 <Mat_VarWrite+0x98>
   6d790:	add	r5, r5, #1
   6d794:	cmp	r5, r6
   6d798:	bcs	6d7d0 <Mat_VarWrite+0xc0>
   6d79c:	ldr	r0, [r4, r5, lsl #2]
   6d7a0:	cmp	r0, #0
   6d7a4:	beq	6d790 <Mat_VarWrite+0x80>
   6d7a8:	ldr	r7, [sl, #36]	; 0x24
   6d7ac:	mov	r1, r7
   6d7b0:	bl	17b0 <strcmp@plt>
   6d7b4:	cmp	r0, #0
   6d7b8:	bne	6d790 <Mat_VarWrite+0x80>
   6d7bc:	ldr	r0, [pc, #284]	; 6d8e0 <Mat_VarWrite+0x1d0>
   6d7c0:	mov	r1, r7
   6d7c4:	add	r0, pc, r0
   6d7c8:	bl	19b4 <Mat_Critical@plt>
   6d7cc:	b	6d808 <Mat_VarWrite+0xf8>
   6d7d0:	ldr	r0, [r9, #16]
   6d7d4:	cmp	r0, #16
   6d7d8:	beq	6d814 <Mat_VarWrite+0x104>
   6d7dc:	cmp	r0, #512	; 0x200
   6d7e0:	beq	6d808 <Mat_VarWrite+0xf8>
   6d7e4:	cmp	r0, #256	; 0x100
   6d7e8:	bne	6d88c <Mat_VarWrite+0x17c>
   6d7ec:	mov	r0, r9
   6d7f0:	mov	r1, sl
   6d7f4:	mov	r2, r8
   6d7f8:	bl	6555c <Mat_VarWrite5>
   6d7fc:	cmp	r0, #0
   6d800:	bne	6d734 <Mat_VarWrite+0x24>
   6d804:	b	6d828 <Mat_VarWrite+0x118>
   6d808:	mov	r0, #1
   6d80c:	sub	sp, fp, #28
   6d810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d814:	mov	r0, r9
   6d818:	mov	r1, sl
   6d81c:	bl	6a780 <Mat_VarWrite4>
   6d820:	cmp	r0, #0
   6d824:	bne	6d734 <Mat_VarWrite+0x24>
   6d828:	ldr	r0, [r9, #40]	; 0x28
   6d82c:	cmp	r0, #0
   6d830:	beq	6d898 <Mat_VarWrite+0x188>
   6d834:	ldr	r1, [r9, #36]	; 0x24
   6d838:	mov	r2, #4
   6d83c:	add	r1, r2, r1, lsl #2
   6d840:	bl	1870 <realloc@plt>
   6d844:	mov	r2, r0
   6d848:	cmp	r0, #0
   6d84c:	beq	6d8ac <Mat_VarWrite+0x19c>
   6d850:	str	r2, [r9, #40]	; 0x28
   6d854:	ldr	r1, [sl, #36]	; 0x24
   6d858:	cmp	r1, #0
   6d85c:	beq	6d8c4 <Mat_VarWrite+0x1b4>
   6d860:	ldr	r0, [pc, #124]	; 6d8e4 <Mat_VarWrite+0x1d4>
   6d864:	add	r0, pc, r0
   6d868:	bl	1da4 <strdup_printf>
   6d86c:	ldr	r1, [r9, #36]	; 0x24
   6d870:	ldr	r2, [r9, #40]	; 0x28
   6d874:	add	r3, r1, #1
   6d878:	str	r3, [r9, #36]	; 0x24
   6d87c:	str	r0, [r2, r1, lsl #2]
   6d880:	mov	r0, #0
   6d884:	sub	sp, fp, #28
   6d888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d88c:	mov	r0, #2
   6d890:	sub	sp, fp, #28
   6d894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d898:	mov	r0, #4
   6d89c:	bl	18d0 <malloc@plt>
   6d8a0:	mov	r2, r0
   6d8a4:	cmp	r0, #0
   6d8a8:	bne	6d850 <Mat_VarWrite+0x140>
   6d8ac:	ldr	r0, [pc, #52]	; 6d8e8 <Mat_VarWrite+0x1d8>
   6d8b0:	add	r0, pc, r0
   6d8b4:	bl	19b4 <Mat_Critical@plt>
   6d8b8:	mov	r0, #3
   6d8bc:	sub	sp, fp, #28
   6d8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d8c4:	ldr	r1, [r9, #36]	; 0x24
   6d8c8:	add	r0, r1, #1
   6d8cc:	str	r0, [r9, #36]	; 0x24
   6d8d0:	mov	r0, #0
   6d8d4:	str	r0, [r2, r1, lsl #2]
   6d8d8:	sub	sp, fp, #28
   6d8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6d8e0:	.word	0x00005060
   6d8e4:	.word	0x00004d3f
   6d8e8:	.word	0x00004a37

0006d8ec <Mat_VarDuplicate>:
   6d8ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6d8f0:	add	fp, sp, #28
   6d8f4:	sub	sp, sp, #4
   6d8f8:	vpush	{d8-d9}
   6d8fc:	sub	sp, sp, #16
   6d900:	mov	sl, r0
   6d904:	mov	r0, #56	; 0x38
   6d908:	mov	r4, r1
   6d90c:	bl	18d0 <malloc@plt>
   6d910:	cmp	r0, #0
   6d914:	beq	6dc60 <Mat_VarDuplicate+0x374>
   6d918:	vmov.i32	q4, #0	; 0x00000000
   6d91c:	mov	r6, #0
   6d920:	mov	r9, r0
   6d924:	mov	r8, r4
   6d928:	str	r6, [r0, #48]	; 0x30
   6d92c:	add	r0, r0, #32
   6d930:	mov	r4, r9
   6d934:	add	r5, r9, #16
   6d938:	vst1.32	{d8-d9}, [r0]
   6d93c:	mov	r0, #52	; 0x34
   6d940:	vst1.32	{d8-d9}, [r5]
   6d944:	vst1.32	{d8-d9}, [r4], r0
   6d948:	mov	r0, #20
   6d94c:	bl	18d0 <malloc@plt>
   6d950:	cmp	r0, #0
   6d954:	str	r0, [r4]
   6d958:	beq	6dc68 <Mat_VarDuplicate+0x37c>
   6d95c:	mov	r7, r0
   6d960:	vst1.32	{d8-d9}, [r0]!
   6d964:	mov	r1, sl
   6d968:	mov	r2, r9
   6d96c:	str	r6, [r0]
   6d970:	mov	r0, #36	; 0x24
   6d974:	vld1.32	{d8-d9}, [r1], r0
   6d978:	mov	r0, #48	; 0x30
   6d97c:	vst1.32	{d8-d9}, [r2], r0
   6d980:	add	r0, sl, #16
   6d984:	vld1.32	{d16-d17}, [r0]
   6d988:	str	r0, [sp, #12]
   6d98c:	vst1.32	{d16-d17}, [r5]
   6d990:	ldr	r0, [sl, #44]	; 0x2c
   6d994:	ldr	r3, [sl, #48]	; 0x30
   6d998:	str	r0, [r9, #44]	; 0x2c
   6d99c:	str	r3, [r2]
   6d9a0:	ldr	r6, [r1]
   6d9a4:	cmp	r6, #0
   6d9a8:	beq	6d9d8 <Mat_VarDuplicate+0xec>
   6d9ac:	mov	r0, r6
   6d9b0:	bl	1954 <strlen@plt>
   6d9b4:	add	r5, r0, #1
   6d9b8:	mov	r0, r5
   6d9bc:	bl	18d0 <malloc@plt>
   6d9c0:	cmp	r0, #0
   6d9c4:	str	r0, [r9, #36]	; 0x24
   6d9c8:	beq	6d9d8 <Mat_VarDuplicate+0xec>
   6d9cc:	mov	r1, r6
   6d9d0:	mov	r2, r5
   6d9d4:	bl	181c <memcpy@plt>
   6d9d8:	vmov.32	r0, d8[1]
   6d9dc:	lsl	r6, r0, #2
   6d9e0:	mov	r0, r6
   6d9e4:	bl	18d0 <malloc@plt>
   6d9e8:	cmp	r0, #0
   6d9ec:	mov	r4, r8
   6d9f0:	str	r0, [r9, #32]
   6d9f4:	beq	6da04 <Mat_VarDuplicate+0x118>
   6d9f8:	ldr	r1, [sl, #32]
   6d9fc:	mov	r2, r6
   6da00:	bl	181c <memcpy@plt>
   6da04:	ldr	r5, [sl, #52]	; 0x34
   6da08:	cmp	r5, #0
   6da0c:	beq	6dc78 <Mat_VarDuplicate+0x38c>
   6da10:	ldr	r0, [r5]
   6da14:	mov	r1, #0
   6da18:	str	r1, [r7, #12]
   6da1c:	str	r1, [r7, #16]
   6da20:	str	r0, [r7]
   6da24:	ldr	r0, [r5, #4]
   6da28:	str	r0, [r7, #4]
   6da2c:	ldr	r0, [r5, #8]
   6da30:	cmp	r0, #0
   6da34:	beq	6dab4 <Mat_VarDuplicate+0x1c8>
   6da38:	ldr	r0, [r5, #4]
   6da3c:	cmp	r0, #0
   6da40:	beq	6dab4 <Mat_VarDuplicate+0x1c8>
   6da44:	mov	r1, #4
   6da48:	bl	1798 <calloc@plt>
   6da4c:	str	r0, [r7, #8]
   6da50:	ldr	r0, [r5, #4]
   6da54:	cmp	r0, #0
   6da58:	beq	6dab4 <Mat_VarDuplicate+0x1c8>
   6da5c:	mov	r6, #0
   6da60:	ldr	r0, [r5, #8]
   6da64:	ldr	r0, [r0, r6, lsl #2]
   6da68:	cmp	r0, #0
   6da6c:	bne	6da90 <Mat_VarDuplicate+0x1a4>
   6da70:	ldr	r0, [r5, #4]
   6da74:	add	r6, r6, #1
   6da78:	cmp	r6, r0
   6da7c:	bcs	6dab4 <Mat_VarDuplicate+0x1c8>
   6da80:	ldr	r0, [r5, #8]
   6da84:	ldr	r0, [r0, r6, lsl #2]
   6da88:	cmp	r0, #0
   6da8c:	beq	6da70 <Mat_VarDuplicate+0x184>
   6da90:	bl	1864 <strdup@plt>
   6da94:	ldr	r1, [r9, #52]	; 0x34
   6da98:	ldr	r1, [r1, #8]
   6da9c:	str	r0, [r1, r6, lsl #2]
   6daa0:	ldr	r5, [sl, #52]	; 0x34
   6daa4:	ldr	r0, [r5, #4]
   6daa8:	add	r6, r6, #1
   6daac:	cmp	r6, r0
   6dab0:	bcc	6da80 <Mat_VarDuplicate+0x194>
   6dab4:	ldr	r0, [r5, #12]
   6dab8:	cmp	r0, #0
   6dabc:	beq	6dae4 <Mat_VarDuplicate+0x1f8>
   6dac0:	mov	r0, #56	; 0x38
   6dac4:	bl	18d0 <malloc@plt>
   6dac8:	ldr	r1, [r9, #52]	; 0x34
   6dacc:	cmp	r0, #0
   6dad0:	str	r0, [r1, #12]
   6dad4:	beq	6dae4 <Mat_VarDuplicate+0x1f8>
   6dad8:	ldr	r1, [r5, #12]
   6dadc:	bl	1948 <inflateCopy@plt>
   6dae0:	ldr	r5, [sl, #52]	; 0x34
   6dae4:	ldr	r0, [r5, #16]
   6dae8:	cmp	r0, #0
   6daec:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6daf0:	ldr	r0, [sp, #12]
   6daf4:	ldr	r0, [r0]
   6daf8:	cmp	r0, #5
   6dafc:	bne	6dd14 <Mat_VarDuplicate+0x428>
   6db00:	mov	r0, #28
   6db04:	bl	18d0 <malloc@plt>
   6db08:	mov	r7, r0
   6db0c:	ldr	r0, [r9, #52]	; 0x34
   6db10:	cmp	r7, #0
   6db14:	str	r7, [r0, #16]
   6db18:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6db1c:	ldr	r5, [r5, #16]
   6db20:	ldr	r0, [r5]
   6db24:	str	r0, [r7]
   6db28:	ldr	r0, [r5, #8]
   6db2c:	str	r0, [r7, #8]
   6db30:	ldr	r0, [r5, #8]
   6db34:	lsl	r0, r0, #2
   6db38:	bl	18d0 <malloc@plt>
   6db3c:	cmp	r0, #0
   6db40:	str	r0, [r7, #4]
   6db44:	beq	6db54 <Mat_VarDuplicate+0x268>
   6db48:	ldmib	r5, {r1, r2}
   6db4c:	lsl	r2, r2, #2
   6db50:	bl	181c <memcpy@plt>
   6db54:	ldr	r0, [r5, #16]
   6db58:	str	r0, [r7, #16]
   6db5c:	ldr	r0, [r5, #16]
   6db60:	lsl	r0, r0, #2
   6db64:	bl	18d0 <malloc@plt>
   6db68:	cmp	r0, #0
   6db6c:	str	r0, [r7, #12]
   6db70:	beq	6db84 <Mat_VarDuplicate+0x298>
   6db74:	ldr	r2, [r5, #16]
   6db78:	ldr	r1, [r5, #12]
   6db7c:	lsl	r2, r2, #2
   6db80:	bl	181c <memcpy@plt>
   6db84:	ldr	r0, [r5, #20]
   6db88:	ldr	r1, [r9, #20]
   6db8c:	str	r0, [r7, #20]
   6db90:	cmp	r1, #0
   6db94:	ldr	r0, [r5, #24]
   6db98:	beq	6dfd0 <Mat_VarDuplicate+0x6e4>
   6db9c:	cmp	r0, #0
   6dba0:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dba4:	mov	r0, #8
   6dba8:	bl	18d0 <malloc@plt>
   6dbac:	cmp	r0, #0
   6dbb0:	str	r0, [r7, #24]
   6dbb4:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dbb8:	mov	r7, r0
   6dbbc:	ldr	r0, [r5, #24]
   6dbc0:	ldr	r4, [r5, #20]
   6dbc4:	str	r0, [sp, #8]
   6dbc8:	ldr	r0, [sl, #8]
   6dbcc:	bl	1924 <Mat_SizeOf@plt>
   6dbd0:	mul	r0, r0, r4
   6dbd4:	bl	18d0 <malloc@plt>
   6dbd8:	cmp	r0, #0
   6dbdc:	str	r0, [r7]
   6dbe0:	beq	6dc14 <Mat_VarDuplicate+0x328>
   6dbe4:	mov	r6, r0
   6dbe8:	ldr	r0, [sp, #8]
   6dbec:	str	r7, [sp, #4]
   6dbf0:	ldr	r4, [r5, #20]
   6dbf4:	ldr	r7, [r0]
   6dbf8:	ldr	r0, [sl, #8]
   6dbfc:	bl	1924 <Mat_SizeOf@plt>
   6dc00:	mul	r2, r0, r4
   6dc04:	mov	r1, r7
   6dc08:	ldr	r7, [sp, #4]
   6dc0c:	mov	r0, r6
   6dc10:	bl	181c <memcpy@plt>
   6dc14:	ldr	r0, [sl, #8]
   6dc18:	ldr	r4, [r5, #20]
   6dc1c:	bl	1924 <Mat_SizeOf@plt>
   6dc20:	mul	r0, r0, r4
   6dc24:	bl	18d0 <malloc@plt>
   6dc28:	cmp	r0, #0
   6dc2c:	mov	r4, r8
   6dc30:	str	r0, [r7, #4]
   6dc34:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dc38:	mov	r6, r0
   6dc3c:	ldr	r0, [sp, #8]
   6dc40:	ldr	r4, [r5, #20]
   6dc44:	ldr	r7, [r0, #4]
   6dc48:	ldr	r0, [sl, #8]
   6dc4c:	bl	1924 <Mat_SizeOf@plt>
   6dc50:	mul	r2, r0, r4
   6dc54:	mov	r0, r6
   6dc58:	mov	r1, r7
   6dc5c:	b	6e01c <Mat_VarDuplicate+0x730>
   6dc60:	mov	r9, #0
   6dc64:	b	6dfbc <Mat_VarDuplicate+0x6d0>
   6dc68:	mov	r0, r9
   6dc6c:	bl	1804 <free@plt>
   6dc70:	mov	r9, #0
   6dc74:	b	6dfbc <Mat_VarDuplicate+0x6d0>
   6dc78:	mov	r0, r7
   6dc7c:	bl	1804 <free@plt>
   6dc80:	mov	r0, #0
   6dc84:	str	r0, [r9, #52]	; 0x34
   6dc88:	ldr	r8, [sl, #40]	; 0x28
   6dc8c:	cmp	r4, #0
   6dc90:	beq	6dfb8 <Mat_VarDuplicate+0x6cc>
   6dc94:	cmp	r8, #0
   6dc98:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6dc9c:	ldr	r0, [sp, #12]
   6dca0:	ldr	r0, [r0]
   6dca4:	cmp	r0, #1
   6dca8:	beq	6dd80 <Mat_VarDuplicate+0x494>
   6dcac:	cmp	r0, #5
   6dcb0:	beq	6ddd8 <Mat_VarDuplicate+0x4ec>
   6dcb4:	cmp	r0, #2
   6dcb8:	bne	6df20 <Mat_VarDuplicate+0x634>
   6dcbc:	ldr	r5, [sl]
   6dcc0:	mov	r0, r5
   6dcc4:	bl	18d0 <malloc@plt>
   6dcc8:	cmp	r0, #0
   6dccc:	str	r0, [r9, #40]	; 0x28
   6dcd0:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6dcd4:	mov	r6, r0
   6dcd8:	ldr	r0, [sl, #12]
   6dcdc:	cmp	r0, #1
   6dce0:	blt	6dfbc <Mat_VarDuplicate+0x6d0>
   6dce4:	cmp	r0, r5
   6dce8:	bhi	6dfbc <Mat_VarDuplicate+0x6d0>
   6dcec:	udiv	r5, r5, r0
   6dcf0:	mov	r7, #0
   6dcf4:	ldr	r0, [r8, r7, lsl #2]
   6dcf8:	mov	r1, r4
   6dcfc:	bl	1a44 <Mat_VarDuplicate@plt>
   6dd00:	str	r0, [r6, r7, lsl #2]
   6dd04:	add	r7, r7, #1
   6dd08:	cmp	r7, r5
   6dd0c:	bcc	6dcf4 <Mat_VarDuplicate+0x408>
   6dd10:	b	6dfbc <Mat_VarDuplicate+0x6d0>
   6dd14:	ldr	r0, [r9, #20]
   6dd18:	cmp	r0, #0
   6dd1c:	beq	6df84 <Mat_VarDuplicate+0x698>
   6dd20:	mov	r0, #8
   6dd24:	bl	18d0 <malloc@plt>
   6dd28:	mov	r7, r0
   6dd2c:	ldr	r0, [r9, #52]	; 0x34
   6dd30:	cmp	r7, #0
   6dd34:	str	r7, [r0, #16]
   6dd38:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dd3c:	ldr	r6, [r9]
   6dd40:	ldr	r5, [r5, #16]
   6dd44:	mov	r0, r6
   6dd48:	bl	18d0 <malloc@plt>
   6dd4c:	cmp	r0, #0
   6dd50:	str	r0, [r7]
   6dd54:	beq	6dd64 <Mat_VarDuplicate+0x478>
   6dd58:	ldr	r1, [r5]
   6dd5c:	mov	r2, r6
   6dd60:	bl	181c <memcpy@plt>
   6dd64:	mov	r0, r6
   6dd68:	bl	18d0 <malloc@plt>
   6dd6c:	cmp	r0, #0
   6dd70:	str	r0, [r7, #4]
   6dd74:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dd78:	ldr	r1, [r5, #4]
   6dd7c:	b	6dfa4 <Mat_VarDuplicate+0x6b8>
   6dd80:	ldr	r5, [sl]
   6dd84:	mov	r0, r5
   6dd88:	bl	18d0 <malloc@plt>
   6dd8c:	cmp	r0, #0
   6dd90:	str	r0, [r9, #40]	; 0x28
   6dd94:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6dd98:	mov	r6, r0
   6dd9c:	ldr	r0, [sl, #12]
   6dda0:	cmp	r0, #1
   6dda4:	blt	6dfbc <Mat_VarDuplicate+0x6d0>
   6dda8:	cmp	r0, r5
   6ddac:	bhi	6dfbc <Mat_VarDuplicate+0x6d0>
   6ddb0:	udiv	r5, r5, r0
   6ddb4:	mov	r7, #0
   6ddb8:	ldr	r0, [r8, r7, lsl #2]
   6ddbc:	mov	r1, r4
   6ddc0:	bl	1a44 <Mat_VarDuplicate@plt>
   6ddc4:	str	r0, [r6, r7, lsl #2]
   6ddc8:	add	r7, r7, #1
   6ddcc:	cmp	r7, r5
   6ddd0:	bcc	6ddb8 <Mat_VarDuplicate+0x4cc>
   6ddd4:	b	6dfbc <Mat_VarDuplicate+0x6d0>
   6ddd8:	mov	r0, #28
   6dddc:	bl	18d0 <malloc@plt>
   6dde0:	cmp	r0, #0
   6dde4:	str	r0, [r9, #40]	; 0x28
   6dde8:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6ddec:	mov	r6, r0
   6ddf0:	ldr	r0, [r8]
   6ddf4:	str	r0, [r6]
   6ddf8:	ldr	r0, [r8, #8]
   6ddfc:	str	r0, [r6, #8]
   6de00:	ldr	r0, [r8, #8]
   6de04:	lsl	r0, r0, #2
   6de08:	bl	18d0 <malloc@plt>
   6de0c:	cmp	r0, #0
   6de10:	str	r0, [r6, #4]
   6de14:	beq	6de24 <Mat_VarDuplicate+0x538>
   6de18:	ldmib	r8, {r1, r2}
   6de1c:	lsl	r2, r2, #2
   6de20:	bl	181c <memcpy@plt>
   6de24:	ldr	r0, [r8, #16]
   6de28:	str	r0, [r6, #16]
   6de2c:	ldr	r0, [r8, #16]
   6de30:	lsl	r0, r0, #2
   6de34:	bl	18d0 <malloc@plt>
   6de38:	cmp	r0, #0
   6de3c:	str	r0, [r6, #12]
   6de40:	beq	6de54 <Mat_VarDuplicate+0x568>
   6de44:	ldr	r2, [r8, #16]
   6de48:	ldr	r1, [r8, #12]
   6de4c:	lsl	r2, r2, #2
   6de50:	bl	181c <memcpy@plt>
   6de54:	ldr	r0, [r8, #20]
   6de58:	ldr	r1, [r9, #20]
   6de5c:	str	r0, [r6, #20]
   6de60:	cmp	r1, #0
   6de64:	ldr	r0, [r8, #24]
   6de68:	beq	6e05c <Mat_VarDuplicate+0x770>
   6de6c:	cmp	r0, #0
   6de70:	beq	6e0a8 <Mat_VarDuplicate+0x7bc>
   6de74:	mov	r0, #8
   6de78:	bl	18d0 <malloc@plt>
   6de7c:	cmp	r0, #0
   6de80:	str	r0, [r6, #24]
   6de84:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6de88:	mov	r7, r0
   6de8c:	ldr	r0, [sl, #8]
   6de90:	ldr	r5, [r8, #20]
   6de94:	ldr	r4, [r8, #24]
   6de98:	bl	1924 <Mat_SizeOf@plt>
   6de9c:	mul	r0, r0, r5
   6dea0:	bl	18d0 <malloc@plt>
   6dea4:	cmp	r0, #0
   6dea8:	str	r0, [r7]
   6deac:	beq	6ded8 <Mat_VarDuplicate+0x5ec>
   6deb0:	mov	r6, r0
   6deb4:	ldr	r0, [r4]
   6deb8:	ldr	r5, [r8, #20]
   6debc:	str	r0, [sp, #12]
   6dec0:	ldr	r0, [sl, #8]
   6dec4:	bl	1924 <Mat_SizeOf@plt>
   6dec8:	ldr	r1, [sp, #12]
   6decc:	mul	r2, r0, r5
   6ded0:	mov	r0, r6
   6ded4:	bl	181c <memcpy@plt>
   6ded8:	ldr	r0, [sl, #8]
   6dedc:	mov	r5, r4
   6dee0:	ldr	r4, [r8, #20]
   6dee4:	bl	1924 <Mat_SizeOf@plt>
   6dee8:	mul	r0, r0, r4
   6deec:	bl	18d0 <malloc@plt>
   6def0:	cmp	r0, #0
   6def4:	str	r0, [r7, #4]
   6def8:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6defc:	mov	r6, r0
   6df00:	ldr	r0, [sl, #8]
   6df04:	ldr	r5, [r5, #4]
   6df08:	ldr	r4, [r8, #20]
   6df0c:	bl	1924 <Mat_SizeOf@plt>
   6df10:	mul	r2, r0, r4
   6df14:	mov	r0, r6
   6df18:	mov	r1, r5
   6df1c:	b	6e054 <Mat_VarDuplicate+0x768>
   6df20:	ldr	r0, [r9, #20]
   6df24:	cmp	r0, #0
   6df28:	beq	6e034 <Mat_VarDuplicate+0x748>
   6df2c:	mov	r0, #8
   6df30:	bl	18d0 <malloc@plt>
   6df34:	cmp	r0, #0
   6df38:	str	r0, [r9, #40]	; 0x28
   6df3c:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6df40:	ldr	r5, [r9]
   6df44:	mov	r6, r0
   6df48:	mov	r0, r5
   6df4c:	bl	18d0 <malloc@plt>
   6df50:	cmp	r0, #0
   6df54:	str	r0, [r6]
   6df58:	beq	6df68 <Mat_VarDuplicate+0x67c>
   6df5c:	ldr	r1, [r8]
   6df60:	mov	r2, r5
   6df64:	bl	181c <memcpy@plt>
   6df68:	mov	r0, r5
   6df6c:	bl	18d0 <malloc@plt>
   6df70:	cmp	r0, #0
   6df74:	str	r0, [r6, #4]
   6df78:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6df7c:	ldr	r1, [r8, #4]
   6df80:	b	6e050 <Mat_VarDuplicate+0x764>
   6df84:	ldr	r6, [sl]
   6df88:	mov	r0, r6
   6df8c:	bl	18d0 <malloc@plt>
   6df90:	ldr	r1, [r9, #52]	; 0x34
   6df94:	cmp	r0, #0
   6df98:	str	r0, [r1, #16]
   6df9c:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dfa0:	ldr	r1, [r5, #16]
   6dfa4:	mov	r2, r6
   6dfa8:	bl	181c <memcpy@plt>
   6dfac:	ldr	r8, [sl, #40]	; 0x28
   6dfb0:	cmp	r4, #0
   6dfb4:	bne	6dc94 <Mat_VarDuplicate+0x3a8>
   6dfb8:	str	r8, [r9, #40]	; 0x28
   6dfbc:	mov	r0, r9
   6dfc0:	sub	sp, fp, #48	; 0x30
   6dfc4:	vpop	{d8-d9}
   6dfc8:	add	sp, sp, #4
   6dfcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6dfd0:	cmp	r0, #0
   6dfd4:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dfd8:	ldr	r0, [sl, #8]
   6dfdc:	ldr	r4, [r5, #20]
   6dfe0:	bl	1924 <Mat_SizeOf@plt>
   6dfe4:	mul	r0, r0, r4
   6dfe8:	mov	r4, r8
   6dfec:	bl	18d0 <malloc@plt>
   6dff0:	cmp	r0, #0
   6dff4:	str	r0, [r7, #24]
   6dff8:	beq	6dc88 <Mat_VarDuplicate+0x39c>
   6dffc:	mov	r6, r0
   6e000:	ldr	r0, [sl, #8]
   6e004:	ldr	r4, [r5, #20]
   6e008:	ldr	r5, [r5, #24]
   6e00c:	bl	1924 <Mat_SizeOf@plt>
   6e010:	mul	r2, r0, r4
   6e014:	mov	r0, r6
   6e018:	mov	r1, r5
   6e01c:	mov	r4, r8
   6e020:	bl	181c <memcpy@plt>
   6e024:	ldr	r8, [sl, #40]	; 0x28
   6e028:	cmp	r4, #0
   6e02c:	bne	6dc94 <Mat_VarDuplicate+0x3a8>
   6e030:	b	6dfb8 <Mat_VarDuplicate+0x6cc>
   6e034:	ldr	r5, [sl]
   6e038:	mov	r0, r5
   6e03c:	bl	18d0 <malloc@plt>
   6e040:	cmp	r0, #0
   6e044:	str	r0, [r9, #40]	; 0x28
   6e048:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6e04c:	mov	r1, r8
   6e050:	mov	r2, r5
   6e054:	bl	181c <memcpy@plt>
   6e058:	b	6dfbc <Mat_VarDuplicate+0x6d0>
   6e05c:	cmp	r0, #0
   6e060:	beq	6e0a8 <Mat_VarDuplicate+0x7bc>
   6e064:	ldr	r0, [sl, #8]
   6e068:	ldr	r4, [r8, #20]
   6e06c:	bl	1924 <Mat_SizeOf@plt>
   6e070:	mul	r0, r0, r4
   6e074:	bl	18d0 <malloc@plt>
   6e078:	cmp	r0, #0
   6e07c:	str	r0, [r6, #24]
   6e080:	beq	6dfbc <Mat_VarDuplicate+0x6d0>
   6e084:	mov	r7, r0
   6e088:	ldr	r0, [sl, #8]
   6e08c:	ldr	r4, [r8, #20]
   6e090:	ldr	r5, [r8, #24]
   6e094:	bl	1924 <Mat_SizeOf@plt>
   6e098:	mul	r2, r0, r4
   6e09c:	mov	r0, r7
   6e0a0:	mov	r1, r5
   6e0a4:	b	6e054 <Mat_VarDuplicate+0x768>
   6e0a8:	mov	r0, #0
   6e0ac:	str	r0, [r6, #24]
   6e0b0:	b	6dfbc <Mat_VarDuplicate+0x6d0>

0006e0b4 <Mat_CalcSingleSubscript>:
   6e0b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6e0b8:	add	fp, sp, #28
   6e0bc:	sub	sp, sp, #12
   6e0c0:	cmp	r0, #1
   6e0c4:	blt	6e234 <Mat_CalcSingleSubscript+0x180>
   6e0c8:	mov	lr, #1
   6e0cc:	sub	r7, r1, #12
   6e0d0:	sub	r3, r1, #4
   6e0d4:	sub	r9, r1, #32
   6e0d8:	mov	sl, #0
   6e0dc:	mov	ip, #0
   6e0e0:	str	r2, [sp, #8]
   6e0e4:	vdup.32	q8, lr
   6e0e8:	str	r7, [sp, #4]
   6e0ec:	mvn	r7, #31
   6e0f0:	ldr	r6, [r2, sl, lsl #2]
   6e0f4:	ldr	r5, [r1, sl, lsl #2]
   6e0f8:	cmp	r6, r5
   6e0fc:	ble	6e12c <Mat_CalcSingleSubscript+0x78>
   6e100:	b	6e244 <Mat_CalcSingleSubscript+0x190>
   6e104:	ldr	r2, [sp, #8]
   6e108:	add	sl, sl, #1
   6e10c:	add	ip, r6, ip
   6e110:	add	r9, r9, #4
   6e114:	cmp	sl, r0
   6e118:	beq	6e238 <Mat_CalcSingleSubscript+0x184>
   6e11c:	ldr	r6, [r2, sl, lsl #2]
   6e120:	ldr	r5, [r1, sl, lsl #2]
   6e124:	cmp	r6, r5
   6e128:	bgt	6e244 <Mat_CalcSingleSubscript+0x190>
   6e12c:	cmp	r6, #1
   6e130:	blt	6e250 <Mat_CalcSingleSubscript+0x19c>
   6e134:	sub	r6, r6, #1
   6e138:	cmp	sl, #0
   6e13c:	beq	6e108 <Mat_CalcSingleSubscript+0x54>
   6e140:	cmp	sl, #4
   6e144:	bcs	6e150 <Mat_CalcSingleSubscript+0x9c>
   6e148:	mov	r5, sl
   6e14c:	b	6e210 <Mat_CalcSingleSubscript+0x15c>
   6e150:	vorr	d20, d16, d16
   6e154:	bic	r4, sl, #-2147483645	; 0x80000003
   6e158:	vorr	q9, q8, q8
   6e15c:	subs	r5, r4, #4
   6e160:	add	r5, lr, r5, lsr #2
   6e164:	vmov.32	d20[0], r6
   6e168:	and	r2, r5, #1
   6e16c:	vorr	d18, d20, d20
   6e170:	beq	6e224 <Mat_CalcSingleSubscript+0x170>
   6e174:	bic	r6, sl, #3
   6e178:	sub	r6, r6, #4
   6e17c:	add	r5, lr, r6, lsr #2
   6e180:	mvn	r6, r6, lsr #2
   6e184:	mov	lr, r9
   6e188:	and	r5, r5, #1
   6e18c:	add	r8, r6, r5
   6e190:	mov	r6, #0
   6e194:	add	r5, lr, #16
   6e198:	vld1.32	{d22-d23}, [lr], r7
   6e19c:	adds	r8, r8, #2
   6e1a0:	add	r6, r6, #8
   6e1a4:	vld1.32	{d20-d21}, [r5]
   6e1a8:	vrev64.32	q11, q11
   6e1ac:	vrev64.32	q10, q10
   6e1b0:	vext.8	q11, q11, q11, #8
   6e1b4:	vext.8	q10, q10, q10, #8
   6e1b8:	vmul.i32	q9, q10, q9
   6e1bc:	vmul.i32	q9, q11, q9
   6e1c0:	bne	6e194 <Mat_CalcSingleSubscript+0xe0>
   6e1c4:	cmp	r2, #0
   6e1c8:	beq	6e1ec <Mat_CalcSingleSubscript+0x138>
   6e1cc:	mvn	r2, r6
   6e1d0:	ldr	r6, [sp, #4]
   6e1d4:	add	r2, sl, r2
   6e1d8:	add	r2, r6, r2, lsl #2
   6e1dc:	vld1.32	{d20-d21}, [r2]
   6e1e0:	vrev64.32	q10, q10
   6e1e4:	vext.8	q10, q10, q10, #8
   6e1e8:	vmul.i32	q9, q10, q9
   6e1ec:	vext.8	q10, q9, q8, #8
   6e1f0:	cmp	sl, r4
   6e1f4:	mov	lr, #1
   6e1f8:	vmul.i32	q0, q9, q10
   6e1fc:	vmul.i32	q9, q0, d0[1]
   6e200:	vmov.32	r6, d18[0]
   6e204:	beq	6e104 <Mat_CalcSingleSubscript+0x50>
   6e208:	ldr	r2, [sp, #8]
   6e20c:	sub	r5, sl, r4
   6e210:	ldr	r4, [r3, r5, lsl #2]
   6e214:	subs	r5, r5, #1
   6e218:	mul	r6, r4, r6
   6e21c:	bne	6e210 <Mat_CalcSingleSubscript+0x15c>
   6e220:	b	6e108 <Mat_CalcSingleSubscript+0x54>
   6e224:	mov	r6, #0
   6e228:	cmp	r2, #0
   6e22c:	bne	6e1cc <Mat_CalcSingleSubscript+0x118>
   6e230:	b	6e1ec <Mat_CalcSingleSubscript+0x138>
   6e234:	mov	ip, #0
   6e238:	mov	r0, ip
   6e23c:	sub	sp, fp, #28
   6e240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6e244:	ldr	r0, [pc, #20]	; 6e260 <Mat_CalcSingleSubscript+0x1ac>
   6e248:	add	r0, pc, r0
   6e24c:	bl	19b4 <Mat_Critical@plt>
   6e250:	mvn	ip, #0
   6e254:	mov	r0, ip
   6e258:	sub	sp, fp, #28
   6e25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6e260:	.word	0x0000415e

0006e264 <Mat_CalcSingleSubscript2>:
   6e264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6e268:	add	fp, sp, #28
   6e26c:	sub	sp, sp, #12
   6e270:	cmp	r0, #1
   6e274:	blt	6e3e4 <Mat_CalcSingleSubscript2+0x180>
   6e278:	mov	lr, #1
   6e27c:	sub	r7, r1, #12
   6e280:	sub	ip, r1, #4
   6e284:	sub	r9, r1, #32
   6e288:	mov	sl, #0
   6e28c:	str	r2, [sp, #8]
   6e290:	vdup.32	q8, lr
   6e294:	str	r7, [sp, #4]
   6e298:	mvn	r7, #31
   6e29c:	ldr	r6, [r2, sl, lsl #2]
   6e2a0:	ldr	r5, [r1, sl, lsl #2]
   6e2a4:	cmp	r6, r5
   6e2a8:	bls	6e2dc <Mat_CalcSingleSubscript2+0x78>
   6e2ac:	b	6e3f0 <Mat_CalcSingleSubscript2+0x18c>
   6e2b0:	ldr	r5, [r3]
   6e2b4:	add	sl, sl, #1
   6e2b8:	add	r9, r9, #4
   6e2bc:	cmp	sl, r0
   6e2c0:	add	r6, r5, r6
   6e2c4:	str	r6, [r3]
   6e2c8:	beq	6e3e4 <Mat_CalcSingleSubscript2+0x180>
   6e2cc:	ldr	r6, [r2, sl, lsl #2]
   6e2d0:	ldr	r5, [r1, sl, lsl #2]
   6e2d4:	cmp	r6, r5
   6e2d8:	bhi	6e3f0 <Mat_CalcSingleSubscript2+0x18c>
   6e2dc:	cmp	r6, #0
   6e2e0:	beq	6e3fc <Mat_CalcSingleSubscript2+0x198>
   6e2e4:	sub	r6, r6, #1
   6e2e8:	cmp	sl, #0
   6e2ec:	beq	6e2b0 <Mat_CalcSingleSubscript2+0x4c>
   6e2f0:	cmp	sl, #4
   6e2f4:	bcs	6e300 <Mat_CalcSingleSubscript2+0x9c>
   6e2f8:	mov	r5, sl
   6e2fc:	b	6e3c0 <Mat_CalcSingleSubscript2+0x15c>
   6e300:	vorr	d20, d16, d16
   6e304:	bic	r4, sl, #-2147483645	; 0x80000003
   6e308:	vorr	q9, q8, q8
   6e30c:	subs	r5, r4, #4
   6e310:	add	r5, lr, r5, lsr #2
   6e314:	vmov.32	d20[0], r6
   6e318:	and	r2, r5, #1
   6e31c:	vorr	d18, d20, d20
   6e320:	beq	6e3d4 <Mat_CalcSingleSubscript2+0x170>
   6e324:	bic	r6, sl, #3
   6e328:	sub	r6, r6, #4
   6e32c:	add	r5, lr, r6, lsr #2
   6e330:	mvn	r6, r6, lsr #2
   6e334:	mov	lr, r9
   6e338:	and	r5, r5, #1
   6e33c:	add	r8, r6, r5
   6e340:	mov	r6, #0
   6e344:	add	r5, lr, #16
   6e348:	vld1.32	{d22-d23}, [lr], r7
   6e34c:	adds	r8, r8, #2
   6e350:	add	r6, r6, #8
   6e354:	vld1.32	{d20-d21}, [r5]
   6e358:	vrev64.32	q11, q11
   6e35c:	vrev64.32	q10, q10
   6e360:	vext.8	q11, q11, q11, #8
   6e364:	vext.8	q10, q10, q10, #8
   6e368:	vmul.i32	q9, q10, q9
   6e36c:	vmul.i32	q9, q11, q9
   6e370:	bne	6e344 <Mat_CalcSingleSubscript2+0xe0>
   6e374:	cmp	r2, #0
   6e378:	beq	6e39c <Mat_CalcSingleSubscript2+0x138>
   6e37c:	mvn	r2, r6
   6e380:	ldr	r6, [sp, #4]
   6e384:	add	r2, sl, r2
   6e388:	add	r2, r6, r2, lsl #2
   6e38c:	vld1.32	{d20-d21}, [r2]
   6e390:	vrev64.32	q10, q10
   6e394:	vext.8	q10, q10, q10, #8
   6e398:	vmul.i32	q9, q10, q9
   6e39c:	vext.8	q10, q9, q8, #8
   6e3a0:	ldr	r2, [sp, #8]
   6e3a4:	cmp	sl, r4
   6e3a8:	mov	lr, #1
   6e3ac:	vmul.i32	q0, q9, q10
   6e3b0:	vmul.i32	q9, q0, d0[1]
   6e3b4:	vmov.32	r6, d18[0]
   6e3b8:	beq	6e2b0 <Mat_CalcSingleSubscript2+0x4c>
   6e3bc:	sub	r5, sl, r4
   6e3c0:	ldr	r4, [ip, r5, lsl #2]
   6e3c4:	subs	r5, r5, #1
   6e3c8:	mul	r6, r4, r6
   6e3cc:	bne	6e3c0 <Mat_CalcSingleSubscript2+0x15c>
   6e3d0:	b	6e2b0 <Mat_CalcSingleSubscript2+0x4c>
   6e3d4:	mov	r6, #0
   6e3d8:	cmp	r2, #0
   6e3dc:	bne	6e37c <Mat_CalcSingleSubscript2+0x118>
   6e3e0:	b	6e39c <Mat_CalcSingleSubscript2+0x138>
   6e3e4:	mov	r0, #0
   6e3e8:	sub	sp, fp, #28
   6e3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6e3f0:	ldr	r0, [pc, #16]	; 6e408 <Mat_CalcSingleSubscript2+0x1a4>
   6e3f4:	add	r0, pc, r0
   6e3f8:	bl	19b4 <Mat_Critical@plt>
   6e3fc:	mov	r0, #1
   6e400:	sub	sp, fp, #28
   6e404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6e408:	.word	0x00003fdf

0006e40c <Mat_CalcSubscripts>:
   6e40c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6e410:	add	fp, sp, #28
   6e414:	sub	sp, sp, #12
   6e418:	mov	r9, r0
   6e41c:	lsl	r0, r0, #2
   6e420:	mov	r6, r2
   6e424:	mov	r4, r1
   6e428:	bl	18d0 <malloc@plt>
   6e42c:	cmp	r9, #0
   6e430:	str	r0, [sp, #8]
   6e434:	beq	6e5c4 <Mat_CalcSubscripts+0x1b8>
   6e438:	vmov	s0, r6
   6e43c:	add	r1, r4, r9, lsl #2
   6e440:	sub	r2, r9, #5
   6e444:	sub	r0, r4, #12
   6e448:	mov	r6, #0
   6e44c:	mvn	sl, #31
   6e450:	mov	r5, r9
   6e454:	sub	r8, r1, #36	; 0x24
   6e458:	vcvt.f64.s32	d16, s0
   6e45c:	str	r0, [sp]
   6e460:	str	r9, [sp, #4]
   6e464:	mov	r3, r5
   6e468:	mov	ip, #1
   6e46c:	subs	r5, r5, #1
   6e470:	bne	6e4cc <Mat_CalcSubscripts+0xc0>
   6e474:	mov	r3, #1
   6e478:	vmov	s0, r3
   6e47c:	sub	r2, r2, #1
   6e480:	sub	r8, r8, #4
   6e484:	add	r6, r6, #1
   6e488:	cmp	r5, #0
   6e48c:	vcvt.f64.s32	d17, s0
   6e490:	vdiv.f64	d17, d16, d17
   6e494:	vcvtm.s32.f64	s0, d17
   6e498:	vmov	r0, s0
   6e49c:	mul	r1, r3, r0
   6e4a0:	add	r0, r0, #1
   6e4a4:	vmov	s0, r1
   6e4a8:	vcvt.f64.s32	d17, s0
   6e4ac:	ldr	r1, [sp, #8]
   6e4b0:	str	r0, [r1, r5, lsl #2]
   6e4b4:	vsub.f64	d16, d16, d17
   6e4b8:	beq	6e5c4 <Mat_CalcSubscripts+0x1b8>
   6e4bc:	mov	r3, r5
   6e4c0:	mov	ip, #1
   6e4c4:	subs	r5, r5, #1
   6e4c8:	beq	6e474 <Mat_CalcSubscripts+0x68>
   6e4cc:	mvn	r7, r6
   6e4d0:	sub	lr, r3, #2
   6e4d4:	mov	r3, #1
   6e4d8:	add	r7, r7, r9
   6e4dc:	cmp	r7, #4
   6e4e0:	bcc	6e590 <Mat_CalcSubscripts+0x184>
   6e4e4:	sub	r3, r7, #4
   6e4e8:	add	r1, ip, r3, lsr #2
   6e4ec:	lsr	r3, r3, #2
   6e4f0:	cmp	r3, #0
   6e4f4:	and	r0, r1, #1
   6e4f8:	beq	6e5ac <Mat_CalcSubscripts+0x1a0>
   6e4fc:	add	r1, ip, r2, lsr #2
   6e500:	vmov.i32	q9, #1	; 0x00000001
   6e504:	mvn	r3, r2, lsr #2
   6e508:	and	r1, r1, #1
   6e50c:	add	ip, r3, r1
   6e510:	mov	r3, #0
   6e514:	mov	r1, r8
   6e518:	add	r9, r1, #16
   6e51c:	vld1.32	{d22-d23}, [r1], sl
   6e520:	adds	ip, ip, #2
   6e524:	add	r3, r3, #8
   6e528:	vld1.32	{d20-d21}, [r9]
   6e52c:	vrev64.32	q11, q11
   6e530:	vrev64.32	q10, q10
   6e534:	vext.8	q11, q11, q11, #8
   6e538:	vext.8	q10, q10, q10, #8
   6e53c:	vmul.i32	q9, q10, q9
   6e540:	vmul.i32	q9, q11, q9
   6e544:	bne	6e518 <Mat_CalcSubscripts+0x10c>
   6e548:	bic	r1, r7, #3
   6e54c:	cmp	r0, #0
   6e550:	beq	6e570 <Mat_CalcSubscripts+0x164>
   6e554:	sub	r0, lr, r3
   6e558:	ldr	r3, [sp]
   6e55c:	add	r0, r3, r0, lsl #2
   6e560:	vld1.32	{d20-d21}, [r0]
   6e564:	vrev64.32	q10, q10
   6e568:	vext.8	q10, q10, q10, #8
   6e56c:	vmul.i32	q9, q10, q9
   6e570:	vext.8	q10, q9, q8, #8
   6e574:	ldr	r9, [sp, #4]
   6e578:	cmp	r7, r1
   6e57c:	vmul.i32	q0, q9, q10
   6e580:	vmul.i32	q9, q0, d0[1]
   6e584:	vmov.32	r3, d18[0]
   6e588:	beq	6e478 <Mat_CalcSubscripts+0x6c>
   6e58c:	sub	lr, lr, r1
   6e590:	rsb	r1, lr, #0
   6e594:	ldr	r0, [r4, -r1, lsl #2]
   6e598:	add	r1, r1, #1
   6e59c:	cmp	r1, #1
   6e5a0:	mul	r3, r0, r3
   6e5a4:	bne	6e594 <Mat_CalcSubscripts+0x188>
   6e5a8:	b	6e478 <Mat_CalcSubscripts+0x6c>
   6e5ac:	vmov.i32	q9, #1	; 0x00000001
   6e5b0:	mov	r3, #0
   6e5b4:	bic	r1, r7, #3
   6e5b8:	cmp	r0, #0
   6e5bc:	bne	6e554 <Mat_CalcSubscripts+0x148>
   6e5c0:	b	6e570 <Mat_CalcSubscripts+0x164>
   6e5c4:	ldr	r0, [sp, #8]
   6e5c8:	sub	sp, fp, #28
   6e5cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006e5d0 <Mat_CalcSubscripts2>:
   6e5d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6e5d4:	add	fp, sp, #28
   6e5d8:	sub	sp, sp, #12
   6e5dc:	mov	r9, r0
   6e5e0:	lsl	r0, r0, #2
   6e5e4:	mov	r6, r2
   6e5e8:	mov	r4, r1
   6e5ec:	bl	18d0 <malloc@plt>
   6e5f0:	cmp	r9, #0
   6e5f4:	str	r0, [sp, #8]
   6e5f8:	beq	6e788 <Mat_CalcSubscripts2+0x1b8>
   6e5fc:	vmov	s0, r6
   6e600:	add	r1, r4, r9, lsl #2
   6e604:	sub	r2, r9, #5
   6e608:	sub	r0, r4, #12
   6e60c:	mov	r6, #0
   6e610:	mvn	sl, #31
   6e614:	mov	r5, r9
   6e618:	sub	r8, r1, #36	; 0x24
   6e61c:	vcvt.f64.u32	d16, s0
   6e620:	str	r0, [sp]
   6e624:	str	r9, [sp, #4]
   6e628:	mov	r3, r5
   6e62c:	mov	ip, #1
   6e630:	subs	r5, r5, #1
   6e634:	bne	6e690 <Mat_CalcSubscripts2+0xc0>
   6e638:	mov	r3, #1
   6e63c:	vmov	s0, r3
   6e640:	sub	r2, r2, #1
   6e644:	sub	r8, r8, #4
   6e648:	add	r6, r6, #1
   6e64c:	cmp	r5, #0
   6e650:	vcvt.f64.u32	d17, s0
   6e654:	vdiv.f64	d17, d16, d17
   6e658:	vcvtm.u32.f64	s0, d17
   6e65c:	vmov	r0, s0
   6e660:	mul	r1, r3, r0
   6e664:	add	r0, r0, #1
   6e668:	vmov	s0, r1
   6e66c:	vcvt.f64.u32	d17, s0
   6e670:	ldr	r1, [sp, #8]
   6e674:	str	r0, [r1, r5, lsl #2]
   6e678:	vsub.f64	d16, d16, d17
   6e67c:	beq	6e788 <Mat_CalcSubscripts2+0x1b8>
   6e680:	mov	r3, r5
   6e684:	mov	ip, #1
   6e688:	subs	r5, r5, #1
   6e68c:	beq	6e638 <Mat_CalcSubscripts2+0x68>
   6e690:	mvn	r7, r6
   6e694:	sub	lr, r3, #2
   6e698:	mov	r3, #1
   6e69c:	add	r7, r7, r9
   6e6a0:	cmp	r7, #4
   6e6a4:	bcc	6e754 <Mat_CalcSubscripts2+0x184>
   6e6a8:	sub	r3, r7, #4
   6e6ac:	add	r1, ip, r3, lsr #2
   6e6b0:	lsr	r3, r3, #2
   6e6b4:	cmp	r3, #0
   6e6b8:	and	r0, r1, #1
   6e6bc:	beq	6e770 <Mat_CalcSubscripts2+0x1a0>
   6e6c0:	add	r1, ip, r2, lsr #2
   6e6c4:	vmov.i32	q9, #1	; 0x00000001
   6e6c8:	mvn	r3, r2, lsr #2
   6e6cc:	and	r1, r1, #1
   6e6d0:	add	ip, r3, r1
   6e6d4:	mov	r3, #0
   6e6d8:	mov	r1, r8
   6e6dc:	add	r9, r1, #16
   6e6e0:	vld1.32	{d22-d23}, [r1], sl
   6e6e4:	adds	ip, ip, #2
   6e6e8:	add	r3, r3, #8
   6e6ec:	vld1.32	{d20-d21}, [r9]
   6e6f0:	vrev64.32	q11, q11
   6e6f4:	vrev64.32	q10, q10
   6e6f8:	vext.8	q11, q11, q11, #8
   6e6fc:	vext.8	q10, q10, q10, #8
   6e700:	vmul.i32	q9, q10, q9
   6e704:	vmul.i32	q9, q11, q9
   6e708:	bne	6e6dc <Mat_CalcSubscripts2+0x10c>
   6e70c:	bic	r1, r7, #3
   6e710:	cmp	r0, #0
   6e714:	beq	6e734 <Mat_CalcSubscripts2+0x164>
   6e718:	sub	r0, lr, r3
   6e71c:	ldr	r3, [sp]
   6e720:	add	r0, r3, r0, lsl #2
   6e724:	vld1.32	{d20-d21}, [r0]
   6e728:	vrev64.32	q10, q10
   6e72c:	vext.8	q10, q10, q10, #8
   6e730:	vmul.i32	q9, q10, q9
   6e734:	vext.8	q10, q9, q8, #8
   6e738:	ldr	r9, [sp, #4]
   6e73c:	cmp	r7, r1
   6e740:	vmul.i32	q0, q9, q10
   6e744:	vmul.i32	q9, q0, d0[1]
   6e748:	vmov.32	r3, d18[0]
   6e74c:	beq	6e63c <Mat_CalcSubscripts2+0x6c>
   6e750:	sub	lr, lr, r1
   6e754:	rsb	r1, lr, #0
   6e758:	ldr	r0, [r4, -r1, lsl #2]
   6e75c:	add	r1, r1, #1
   6e760:	cmp	r1, #1
   6e764:	mul	r3, r0, r3
   6e768:	bne	6e758 <Mat_CalcSubscripts2+0x188>
   6e76c:	b	6e63c <Mat_CalcSubscripts2+0x6c>
   6e770:	vmov.i32	q9, #1	; 0x00000001
   6e774:	mov	r3, #0
   6e778:	bic	r1, r7, #3
   6e77c:	cmp	r0, #0
   6e780:	bne	6e718 <Mat_CalcSubscripts2+0x148>
   6e784:	b	6e734 <Mat_CalcSubscripts2+0x164>
   6e788:	ldr	r0, [sp, #8]
   6e78c:	sub	sp, fp, #28
   6e790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006e794 <Mat_VarGetSize>:
   6e794:	push	{r4, r5, r6, r7, fp, lr}
   6e798:	add	fp, sp, #16
   6e79c:	ldr	r1, [r0, #16]
   6e7a0:	mov	r4, r0
   6e7a4:	cmp	r1, #1
   6e7a8:	beq	6e874 <Mat_VarGetSize+0xe0>
   6e7ac:	cmp	r1, #5
   6e7b0:	beq	6e8f0 <Mat_VarGetSize+0x15c>
   6e7b4:	cmp	r1, #2
   6e7b8:	bne	6e954 <Mat_VarGetSize+0x1c0>
   6e7bc:	ldr	r6, [r4, #40]	; 0x28
   6e7c0:	mov	r5, #0
   6e7c4:	cmp	r6, #0
   6e7c8:	beq	6e860 <Mat_VarGetSize+0xcc>
   6e7cc:	ldr	r1, [r4, #52]	; 0x34
   6e7d0:	ldr	r0, [r4, #4]
   6e7d4:	ldr	r7, [r1, #4]
   6e7d8:	cmp	r0, #1
   6e7dc:	blt	6e800 <Mat_VarGetSize+0x6c>
   6e7e0:	ldr	r1, [r4, #32]
   6e7e4:	ldr	r2, [r1]
   6e7e8:	umull	r7, r2, r7, r2
   6e7ec:	cmp	r2, #0
   6e7f0:	bne	6e860 <Mat_VarGetSize+0xcc>
   6e7f4:	add	r1, r1, #4
   6e7f8:	subs	r0, r0, #1
   6e7fc:	bne	6e7e4 <Mat_VarGetSize+0x50>
   6e800:	mov	r0, #60	; 0x3c
   6e804:	umull	r5, r0, r7, r0
   6e808:	cmp	r0, #0
   6e80c:	movwne	r0, #1
   6e810:	cmp	r0, #0
   6e814:	movwne	r5, #0
   6e818:	cmp	r7, #0
   6e81c:	bne	6e834 <Mat_VarGetSize+0xa0>
   6e820:	b	6e860 <Mat_VarGetSize+0xcc>
   6e824:	sub	r5, r5, #56	; 0x38
   6e828:	add	r6, r6, #4
   6e82c:	subs	r7, r7, #1
   6e830:	beq	6e860 <Mat_VarGetSize+0xcc>
   6e834:	ldr	r0, [r6]
   6e838:	cmp	r0, #0
   6e83c:	beq	6e828 <Mat_VarGetSize+0x94>
   6e840:	ldr	r1, [r0, #16]
   6e844:	cmp	r1, #0
   6e848:	beq	6e824 <Mat_VarGetSize+0x90>
   6e84c:	bl	1a20 <Mat_VarGetSize@plt>
   6e850:	add	r5, r0, r5
   6e854:	add	r6, r6, #4
   6e858:	subs	r7, r7, #1
   6e85c:	bne	6e834 <Mat_VarGetSize+0xa0>
   6e860:	ldr	r0, [r4, #52]	; 0x34
   6e864:	ldr	r0, [r0, #4]
   6e868:	add	r5, r5, r0, lsl #6
   6e86c:	mov	r0, r5
   6e870:	pop	{r4, r5, r6, r7, fp, pc}
   6e874:	ldr	r6, [r4, #40]	; 0x28
   6e878:	cmp	r6, #0
   6e87c:	beq	6e9a4 <Mat_VarGetSize+0x210>
   6e880:	ldr	r0, [r4]
   6e884:	ldr	r1, [r4, #12]
   6e888:	udiv	r4, r0, r1
   6e88c:	cmp	r1, r0
   6e890:	rsb	r2, r4, r4, lsl #4
   6e894:	lsl	r5, r2, #2
   6e898:	bhi	6e9d4 <Mat_VarGetSize+0x240>
   6e89c:	mov	r7, #0
   6e8a0:	ldr	r0, [r6, r7, lsl #2]
   6e8a4:	cmp	r0, #0
   6e8a8:	bne	6e8cc <Mat_VarGetSize+0x138>
   6e8ac:	b	6e8b4 <Mat_VarGetSize+0x120>
   6e8b0:	sub	r5, r5, #56	; 0x38
   6e8b4:	add	r7, r7, #1
   6e8b8:	cmp	r7, r4
   6e8bc:	bcs	6e9d4 <Mat_VarGetSize+0x240>
   6e8c0:	ldr	r0, [r6, r7, lsl #2]
   6e8c4:	cmp	r0, #0
   6e8c8:	beq	6e8b4 <Mat_VarGetSize+0x120>
   6e8cc:	ldr	r1, [r0, #16]
   6e8d0:	cmp	r1, #0
   6e8d4:	beq	6e8b0 <Mat_VarGetSize+0x11c>
   6e8d8:	bl	1a20 <Mat_VarGetSize@plt>
   6e8dc:	add	r5, r0, r5
   6e8e0:	add	r7, r7, #1
   6e8e4:	cmp	r7, r4
   6e8e8:	bcc	6e8c0 <Mat_VarGetSize+0x12c>
   6e8ec:	b	6e9d4 <Mat_VarGetSize+0x240>
   6e8f0:	ldr	r6, [r4, #40]	; 0x28
   6e8f4:	cmp	r6, #0
   6e8f8:	beq	6e9a4 <Mat_VarGetSize+0x210>
   6e8fc:	ldr	r0, [r4, #8]
   6e900:	ldr	r5, [r6, #20]
   6e904:	bl	1924 <Mat_SizeOf@plt>
   6e908:	mul	r1, r0, r5
   6e90c:	ldr	r2, [r4, #20]
   6e910:	ldr	r0, [r6, #8]
   6e914:	ldr	r3, [r6, #16]
   6e918:	cmp	r2, #0
   6e91c:	add	r7, r3, r0
   6e920:	movwne	r2, #1
   6e924:	lsl	r7, r7, #2
   6e928:	cmp	r3, #0
   6e92c:	add	r5, r7, r1, lsl r2
   6e930:	cmpne	r0, #0
   6e934:	bne	6e9c8 <Mat_VarGetSize+0x234>
   6e938:	ldr	r0, [r4, #28]
   6e93c:	mov	r1, #1
   6e940:	cmp	r0, #0
   6e944:	movweq	r1, #8
   6e948:	add	r5, r1, r5
   6e94c:	mov	r0, r5
   6e950:	pop	{r4, r5, r6, r7, fp, pc}
   6e954:	ldr	r0, [r4, #4]
   6e958:	cmp	r0, #1
   6e95c:	blt	6e9a4 <Mat_VarGetSize+0x210>
   6e960:	sub	r3, r1, #4
   6e964:	mov	r2, #0
   6e968:	mov	r1, #0
   6e96c:	cmp	r3, #11
   6e970:	bhi	6e980 <Mat_VarGetSize+0x1ec>
   6e974:	ldr	r1, [pc, #96]	; 6e9dc <Mat_VarGetSize+0x248>
   6e978:	add	r1, pc, r1
   6e97c:	ldr	r1, [r1, r3, lsl #2]
   6e980:	ldr	r3, [r4, #32]
   6e984:	ldr	r7, [r3, r2, lsl #2]
   6e988:	umull	r1, r7, r1, r7
   6e98c:	cmp	r7, #0
   6e990:	bne	6e9b0 <Mat_VarGetSize+0x21c>
   6e994:	add	r2, r2, #1
   6e998:	cmp	r2, r0
   6e99c:	blt	6e984 <Mat_VarGetSize+0x1f0>
   6e9a0:	b	6e9b4 <Mat_VarGetSize+0x220>
   6e9a4:	mov	r5, #0
   6e9a8:	mov	r0, r5
   6e9ac:	pop	{r4, r5, r6, r7, fp, pc}
   6e9b0:	mov	r1, #0
   6e9b4:	ldr	r0, [r4, #20]
   6e9b8:	cmp	r0, #0
   6e9bc:	movwne	r0, #1
   6e9c0:	lsl	r0, r1, r0
   6e9c4:	pop	{r4, r5, r6, r7, fp, pc}
   6e9c8:	ldr	r0, [r6, #20]
   6e9cc:	cmp	r0, #0
   6e9d0:	beq	6e938 <Mat_VarGetSize+0x1a4>
   6e9d4:	mov	r0, r5
   6e9d8:	pop	{r4, r5, r6, r7, fp, pc}
   6e9dc:	.word	0x00003fec

0006e9e0 <Mat_VarPrint>:
   6e9e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6e9e4:	add	fp, sp, #28
   6e9e8:	sub	sp, sp, #4
   6e9ec:	cmp	r0, #0
   6e9f0:	beq	6ece0 <Mat_VarPrint+0x300>
   6e9f4:	mov	r9, r1
   6e9f8:	ldr	r1, [r0, #36]	; 0x24
   6e9fc:	mov	sl, r0
   6ea00:	cmp	r1, #0
   6ea04:	beq	6ea14 <Mat_VarPrint+0x34>
   6ea08:	ldr	r0, [pc, #2140]	; 6f26c <Mat_VarPrint+0x88c>
   6ea0c:	add	r0, pc, r0
   6ea10:	bl	17d4 <printf@plt>
   6ea14:	ldr	r1, [sl, #4]
   6ea18:	ldr	r0, [pc, #2128]	; 6f270 <Mat_VarPrint+0x890>
   6ea1c:	add	r0, pc, r0
   6ea20:	bl	17d4 <printf@plt>
   6ea24:	ldr	r0, [sl, #4]
   6ea28:	cmp	r0, #1
   6ea2c:	blt	6ece0 <Mat_VarPrint+0x300>
   6ea30:	ldr	r1, [sl, #32]
   6ea34:	cmp	r1, #0
   6ea38:	beq	6ea64 <Mat_VarPrint+0x84>
   6ea3c:	mov	r7, #1
   6ea40:	mov	r2, #0
   6ea44:	ldr	r3, [r1, r2, lsl #2]
   6ea48:	umull	r7, r3, r7, r3
   6ea4c:	cmp	r3, #0
   6ea50:	bne	6ea6c <Mat_VarPrint+0x8c>
   6ea54:	add	r2, r2, #1
   6ea58:	cmp	r0, r2
   6ea5c:	bne	6ea44 <Mat_VarPrint+0x64>
   6ea60:	b	6ea70 <Mat_VarPrint+0x90>
   6ea64:	mov	r7, #0
   6ea68:	b	6eac0 <Mat_VarPrint+0xe0>
   6ea6c:	mov	r7, #0
   6ea70:	ldr	r1, [r1]
   6ea74:	ldr	r0, [pc, #2040]	; 6f274 <Mat_VarPrint+0x894>
   6ea78:	add	r0, pc, r0
   6ea7c:	bl	17d4 <printf@plt>
   6ea80:	ldr	r0, [sl, #4]
   6ea84:	cmp	r0, #2
   6ea88:	blt	6eab8 <Mat_VarPrint+0xd8>
   6ea8c:	ldr	r6, [pc, #2020]	; 6f278 <Mat_VarPrint+0x898>
   6ea90:	mov	r4, #1
   6ea94:	add	r6, pc, r6
   6ea98:	ldr	r0, [sl, #32]
   6ea9c:	ldr	r1, [r0, r4, lsl #2]
   6eaa0:	mov	r0, r6
   6eaa4:	bl	17d4 <printf@plt>
   6eaa8:	ldr	r0, [sl, #4]
   6eaac:	add	r4, r4, #1
   6eab0:	cmp	r4, r0
   6eab4:	blt	6ea98 <Mat_VarPrint+0xb8>
   6eab8:	mov	r0, #10
   6eabc:	bl	199c <putchar@plt>
   6eac0:	ldr	r0, [sl, #16]
   6eac4:	ldr	r1, [pc, #1968]	; 6f27c <Mat_VarPrint+0x89c>
   6eac8:	add	r1, pc, r1
   6eacc:	ldr	r1, [r1, r0, lsl #2]
   6ead0:	ldr	r0, [pc, #1960]	; 6f280 <Mat_VarPrint+0x8a0>
   6ead4:	add	r0, pc, r0
   6ead8:	bl	17d4 <printf@plt>
   6eadc:	ldr	r0, [sl, #20]
   6eae0:	cmp	r0, #0
   6eae4:	beq	6eaf4 <Mat_VarPrint+0x114>
   6eae8:	ldr	r0, [pc, #1940]	; 6f284 <Mat_VarPrint+0x8a4>
   6eaec:	add	r0, pc, r0
   6eaf0:	b	6eb08 <Mat_VarPrint+0x128>
   6eaf4:	ldr	r0, [sl, #28]
   6eaf8:	cmp	r0, #0
   6eafc:	beq	6eb0c <Mat_VarPrint+0x12c>
   6eb00:	ldr	r0, [pc, #1920]	; 6f288 <Mat_VarPrint+0x8a8>
   6eb04:	add	r0, pc, r0
   6eb08:	bl	17d4 <printf@plt>
   6eb0c:	mov	r0, #10
   6eb10:	bl	199c <putchar@plt>
   6eb14:	ldr	r0, [sl, #8]
   6eb18:	cmp	r0, #0
   6eb1c:	beq	6eb38 <Mat_VarPrint+0x158>
   6eb20:	ldr	r1, [pc, #1892]	; 6f28c <Mat_VarPrint+0x8ac>
   6eb24:	add	r1, pc, r1
   6eb28:	ldr	r1, [r1, r0, lsl #2]
   6eb2c:	ldr	r0, [pc, #1884]	; 6f290 <Mat_VarPrint+0x8b0>
   6eb30:	add	r0, pc, r0
   6eb34:	bl	17d4 <printf@plt>
   6eb38:	ldr	r0, [sl, #16]
   6eb3c:	cmp	r0, #2
   6eb40:	bne	6ebdc <Mat_VarPrint+0x1fc>
   6eb44:	ldr	r0, [sl, #52]	; 0x34
   6eb48:	ldr	r6, [r0, #4]
   6eb4c:	umull	r7, r0, r7, r6
   6eb50:	cmp	r0, #0
   6eb54:	bne	6ec54 <Mat_VarPrint+0x274>
   6eb58:	cmp	r7, #0
   6eb5c:	beq	6ec54 <Mat_VarPrint+0x274>
   6eb60:	ldr	r5, [sl, #40]	; 0x28
   6eb64:	ldr	r0, [pc, #1832]	; 6f294 <Mat_VarPrint+0x8b4>
   6eb68:	mov	r1, r7
   6eb6c:	add	r0, pc, r0
   6eb70:	bl	17d4 <printf@plt>
   6eb74:	ldr	r8, [pc, #1820]	; 6f298 <Mat_VarPrint+0x8b8>
   6eb78:	mov	r4, #0
   6eb7c:	add	r8, pc, r8
   6eb80:	ldr	r0, [r5, r4, lsl #2]
   6eb84:	cmp	r0, #0
   6eb88:	beq	6ebac <Mat_VarPrint+0x1cc>
   6eb8c:	mov	r1, r9
   6eb90:	bl	196c <Mat_VarPrint@plt>
   6eb94:	add	r4, r4, #1
   6eb98:	cmp	r7, r4
   6eb9c:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6eba0:	ldr	r0, [r5, r4, lsl #2]
   6eba4:	cmp	r0, #0
   6eba8:	bne	6eb8c <Mat_VarPrint+0x1ac>
   6ebac:	udiv	r0, r4, r6
   6ebb0:	ldr	r1, [sl, #52]	; 0x34
   6ebb4:	mov	r2, #0
   6ebb8:	ldr	r1, [r1, #8]
   6ebbc:	mls	r0, r0, r6, r4
   6ebc0:	ldr	r1, [r1, r0, lsl #2]
   6ebc4:	mov	r0, r8
   6ebc8:	bl	17d4 <printf@plt>
   6ebcc:	add	r4, r4, #1
   6ebd0:	cmp	r7, r4
   6ebd4:	bne	6eba0 <Mat_VarPrint+0x1c0>
   6ebd8:	b	6ec9c <Mat_VarPrint+0x2bc>
   6ebdc:	ldr	r5, [sl, #40]	; 0x28
   6ebe0:	cmp	r5, #0
   6ebe4:	beq	6ec38 <Mat_VarPrint+0x258>
   6ebe8:	ldr	r4, [sl, #12]
   6ebec:	cmp	r4, #0
   6ebf0:	ble	6ec38 <Mat_VarPrint+0x258>
   6ebf4:	cmp	r0, #1
   6ebf8:	bne	6ecb0 <Mat_VarPrint+0x2d0>
   6ebfc:	ldr	r6, [sl]
   6ec00:	ldr	r0, [pc, #1700]	; 6f2ac <Mat_VarPrint+0x8cc>
   6ec04:	add	r0, pc, r0
   6ec08:	bl	18c4 <puts@plt>
   6ec0c:	cmp	r4, r6
   6ec10:	bhi	6ec9c <Mat_VarPrint+0x2bc>
   6ec14:	udiv	r4, r6, r4
   6ec18:	mov	r6, #0
   6ec1c:	ldr	r0, [r5, r6, lsl #2]
   6ec20:	mov	r1, r9
   6ec24:	bl	196c <Mat_VarPrint@plt>
   6ec28:	add	r6, r6, #1
   6ec2c:	cmp	r6, r4
   6ec30:	bcc	6ec1c <Mat_VarPrint+0x23c>
   6ec34:	b	6ec9c <Mat_VarPrint+0x2bc>
   6ec38:	cmp	r9, #0
   6ec3c:	beq	6ece0 <Mat_VarPrint+0x300>
   6ec40:	ldr	r0, [pc, #1632]	; 6f2a8 <Mat_VarPrint+0x8c8>
   6ec44:	add	r0, pc, r0
   6ec48:	sub	sp, fp, #28
   6ec4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6ec50:	b	18c4 <puts@plt>
   6ec54:	ldr	r0, [pc, #1604]	; 6f2a0 <Mat_VarPrint+0x8c0>
   6ec58:	mov	r1, r6
   6ec5c:	add	r0, pc, r0
   6ec60:	bl	17d4 <printf@plt>
   6ec64:	cmp	r6, #0
   6ec68:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6ec6c:	ldr	r5, [pc, #1584]	; 6f2a4 <Mat_VarPrint+0x8c4>
   6ec70:	mov	r4, #0
   6ec74:	add	r5, pc, r5
   6ec78:	ldr	r0, [sl, #52]	; 0x34
   6ec7c:	mov	r2, #0
   6ec80:	ldr	r0, [r0, #8]
   6ec84:	ldr	r1, [r0, r4, lsl #2]
   6ec88:	mov	r0, r5
   6ec8c:	bl	17d4 <printf@plt>
   6ec90:	add	r4, r4, #1
   6ec94:	cmp	r6, r4
   6ec98:	bne	6ec78 <Mat_VarPrint+0x298>
   6ec9c:	ldr	r0, [pc, #1528]	; 6f29c <Mat_VarPrint+0x8bc>
   6eca0:	add	r0, pc, r0
   6eca4:	sub	sp, fp, #28
   6eca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6ecac:	b	18c4 <puts@plt>
   6ecb0:	cmp	r9, #0
   6ecb4:	beq	6ece0 <Mat_VarPrint+0x300>
   6ecb8:	ldr	r0, [pc, #1520]	; 6f2b0 <Mat_VarPrint+0x8d0>
   6ecbc:	add	r0, pc, r0
   6ecc0:	bl	18c4 <puts@plt>
   6ecc4:	ldr	r0, [sl, #4]
   6ecc8:	cmp	r0, #3
   6eccc:	blt	6ece8 <Mat_VarPrint+0x308>
   6ecd0:	ldr	r0, [pc, #1500]	; 6f2b4 <Mat_VarPrint+0x8d4>
   6ecd4:	add	r0, pc, r0
   6ecd8:	bl	18c4 <puts@plt>
   6ecdc:	b	6ec9c <Mat_VarPrint+0x2bc>
   6ece0:	sub	sp, fp, #28
   6ece4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6ece8:	cmp	r0, #2
   6ecec:	beq	6ed20 <Mat_VarPrint+0x340>
   6ecf0:	cmp	r0, #1
   6ecf4:	bne	6ec9c <Mat_VarPrint+0x2bc>
   6ecf8:	ldr	r0, [sl, #32]
   6ecfc:	cmp	r0, #0
   6ed00:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6ed04:	ldr	r0, [r0]
   6ed08:	cmp	r0, #16
   6ed0c:	bcc	6ec9c <Mat_VarPrint+0x2bc>
   6ed10:	ldr	r0, [pc, #1440]	; 6f2b8 <Mat_VarPrint+0x8d8>
   6ed14:	add	r0, pc, r0
   6ed18:	bl	18c4 <puts@plt>
   6ed1c:	b	6ec9c <Mat_VarPrint+0x2bc>
   6ed20:	ldr	r0, [sl, #32]
   6ed24:	cmp	r0, #0
   6ed28:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6ed2c:	ldr	r1, [sl, #16]
   6ed30:	sub	r2, r1, #6
   6ed34:	cmp	r2, #10
   6ed38:	bcs	6ef08 <Mat_VarPrint+0x528>
   6ed3c:	ldr	r0, [sl, #8]
   6ed40:	bl	1924 <Mat_SizeOf@plt>
   6ed44:	mov	r5, r0
   6ed48:	ldr	r0, [sl, #20]
   6ed4c:	cmp	r0, #0
   6ed50:	beq	6ee28 <Mat_VarPrint+0x448>
   6ed54:	ldr	r1, [sl, #32]
   6ed58:	ldr	r0, [r1]
   6ed5c:	cmp	r0, #0
   6ed60:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6ed64:	ldr	r2, [sl, #40]	; 0x28
   6ed68:	mov	r7, #0
   6ed6c:	ldm	r2, {r6, r8}
   6ed70:	ldr	r1, [r1, #4]
   6ed74:	cmp	r1, #0
   6ed78:	bne	6eda8 <Mat_VarPrint+0x3c8>
   6ed7c:	mov	r0, #10
   6ed80:	bl	199c <putchar@plt>
   6ed84:	ldr	r1, [sl, #32]
   6ed88:	add	r7, r7, #1
   6ed8c:	cmp	r7, #14
   6ed90:	ldr	r0, [r1]
   6ed94:	cmpls	r7, r0
   6ed98:	bcs	6ee1c <Mat_VarPrint+0x43c>
   6ed9c:	ldr	r1, [r1, #4]
   6eda0:	cmp	r1, #0
   6eda4:	beq	6ed7c <Mat_VarPrint+0x39c>
   6eda8:	mov	r9, #1
   6edac:	b	6edb8 <Mat_VarPrint+0x3d8>
   6edb0:	ldr	r0, [r0]
   6edb4:	add	r9, r9, #1
   6edb8:	sub	r1, r9, #1
   6edbc:	mla	r4, r0, r1, r7
   6edc0:	ldr	r0, [sl, #8]
   6edc4:	mla	r1, r4, r5, r6
   6edc8:	bl	6f2e8 <Mat_PrintNumber>
   6edcc:	ldr	r0, [pc, #1256]	; 6f2bc <Mat_VarPrint+0x8dc>
   6edd0:	add	r0, pc, r0
   6edd4:	bl	17d4 <printf@plt>
   6edd8:	ldr	r0, [sl, #8]
   6eddc:	mla	r1, r4, r5, r8
   6ede0:	bl	6f2e8 <Mat_PrintNumber>
   6ede4:	ldr	r0, [pc, #1236]	; 6f2c0 <Mat_VarPrint+0x8e0>
   6ede8:	add	r0, pc, r0
   6edec:	bl	17d4 <printf@plt>
   6edf0:	ldr	r0, [sl, #32]
   6edf4:	cmp	r9, #14
   6edf8:	ldr	r1, [r0, #4]
   6edfc:	cmpls	r9, r1
   6ee00:	bcc	6edb0 <Mat_VarPrint+0x3d0>
   6ee04:	cmp	r9, r1
   6ee08:	bcs	6ed7c <Mat_VarPrint+0x39c>
   6ee0c:	ldr	r0, [pc, #1200]	; 6f2c4 <Mat_VarPrint+0x8e4>
   6ee10:	add	r0, pc, r0
   6ee14:	bl	17d4 <printf@plt>
   6ee18:	b	6ed7c <Mat_VarPrint+0x39c>
   6ee1c:	cmp	r7, r0
   6ee20:	bcs	6ec9c <Mat_VarPrint+0x2bc>
   6ee24:	b	6f00c <Mat_VarPrint+0x62c>
   6ee28:	ldr	r0, [sl, #32]
   6ee2c:	ldr	r1, [r0]
   6ee30:	cmp	r1, #0
   6ee34:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6ee38:	ldr	r9, [sl, #40]	; 0x28
   6ee3c:	ldr	r8, [pc, #1160]	; 6f2cc <Mat_VarPrint+0x8ec>
   6ee40:	mov	r7, #0
   6ee44:	add	r8, pc, r8
   6ee48:	ldr	r0, [r0, #4]
   6ee4c:	cmp	r0, #0
   6ee50:	bne	6ee80 <Mat_VarPrint+0x4a0>
   6ee54:	mov	r0, #10
   6ee58:	bl	199c <putchar@plt>
   6ee5c:	ldr	r0, [sl, #32]
   6ee60:	add	r7, r7, #1
   6ee64:	cmp	r7, #14
   6ee68:	ldr	r1, [r0]
   6ee6c:	cmpls	r7, r1
   6ee70:	bcs	6f004 <Mat_VarPrint+0x624>
   6ee74:	ldr	r0, [r0, #4]
   6ee78:	cmp	r0, #0
   6ee7c:	beq	6ee54 <Mat_VarPrint+0x474>
   6ee80:	ldr	r0, [sl, #8]
   6ee84:	mla	r1, r7, r5, r9
   6ee88:	bl	6f2e8 <Mat_PrintNumber>
   6ee8c:	mov	r0, #32
   6ee90:	bl	199c <putchar@plt>
   6ee94:	ldr	r0, [sl, #32]
   6ee98:	mov	r1, #0
   6ee9c:	ldr	r2, [r0, #4]
   6eea0:	cmp	r2, #1
   6eea4:	movwhi	r1, #1
   6eea8:	cmp	r2, #2
   6eeac:	bcc	6eef4 <Mat_VarPrint+0x514>
   6eeb0:	mov	r6, #1
   6eeb4:	ldr	r0, [r0]
   6eeb8:	mla	r0, r0, r6, r7
   6eebc:	mla	r1, r0, r5, r9
   6eec0:	ldr	r0, [sl, #8]
   6eec4:	bl	6f2e8 <Mat_PrintNumber>
   6eec8:	mov	r0, #32
   6eecc:	bl	199c <putchar@plt>
   6eed0:	ldr	r0, [sl, #32]
   6eed4:	add	r6, r6, #1
   6eed8:	mov	r1, #0
   6eedc:	ldr	r2, [r0, #4]
   6eee0:	cmp	r6, r2
   6eee4:	movwcc	r1, #1
   6eee8:	cmp	r6, #14
   6eeec:	cmpls	r6, r2
   6eef0:	bcc	6eeb4 <Mat_VarPrint+0x4d4>
   6eef4:	cmp	r1, #0
   6eef8:	beq	6ee54 <Mat_VarPrint+0x474>
   6eefc:	mov	r0, r8
   6ef00:	bl	17d4 <printf@plt>
   6ef04:	b	6ee54 <Mat_VarPrint+0x474>
   6ef08:	cmp	r1, #4
   6ef0c:	beq	6f01c <Mat_VarPrint+0x63c>
   6ef10:	cmp	r1, #5
   6ef14:	bne	6ec9c <Mat_VarPrint+0x2bc>
   6ef18:	ldr	r0, [sl, #8]
   6ef1c:	bl	1924 <Mat_SizeOf@plt>
   6ef20:	str	r0, [sp]
   6ef24:	ldr	r0, [sl, #20]
   6ef28:	ldr	r5, [sl, #40]	; 0x28
   6ef2c:	cmp	r0, #0
   6ef30:	beq	6f12c <Mat_VarPrint+0x74c>
   6ef34:	ldr	r1, [r5, #16]
   6ef38:	cmp	r1, #1
   6ef3c:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6ef40:	ldr	r0, [r5, #24]
   6ef44:	mov	r6, #0
   6ef48:	ldm	r0, {r8, r9}
   6ef4c:	ldr	r0, [r5, #12]
   6ef50:	b	6ef64 <Mat_VarPrint+0x584>
   6ef54:	ldr	r1, [r5, #16]
   6ef58:	sub	r2, r1, #1
   6ef5c:	cmp	r6, r2
   6ef60:	bcs	6ec9c <Mat_VarPrint+0x2bc>
   6ef64:	ldr	r7, [r0, r6, lsl #2]
   6ef68:	add	r6, r6, #1
   6ef6c:	ldr	r2, [r0, r6, lsl #2]
   6ef70:	cmp	r7, r2
   6ef74:	bcs	6ef58 <Mat_VarPrint+0x578>
   6ef78:	ldr	r1, [r5, #20]
   6ef7c:	cmp	r7, r1
   6ef80:	bcs	6ef54 <Mat_VarPrint+0x574>
   6ef84:	ldr	r0, [sp]
   6ef88:	mul	r4, r0, r7
   6ef8c:	ldr	r0, [r5, #4]
   6ef90:	mov	r2, r6
   6ef94:	ldr	r0, [r0, r7, lsl #2]
   6ef98:	add	r1, r0, #1
   6ef9c:	ldr	r0, [pc, #820]	; 6f2d8 <Mat_VarPrint+0x8f8>
   6efa0:	add	r0, pc, r0
   6efa4:	bl	17d4 <printf@plt>
   6efa8:	ldr	r0, [sl, #8]
   6efac:	add	r1, r8, r4
   6efb0:	bl	6f2e8 <Mat_PrintNumber>
   6efb4:	ldr	r0, [pc, #800]	; 6f2dc <Mat_VarPrint+0x8fc>
   6efb8:	add	r0, pc, r0
   6efbc:	bl	17d4 <printf@plt>
   6efc0:	ldr	r0, [sl, #8]
   6efc4:	add	r1, r9, r4
   6efc8:	bl	6f2e8 <Mat_PrintNumber>
   6efcc:	ldr	r0, [pc, #780]	; 6f2e0 <Mat_VarPrint+0x900>
   6efd0:	add	r0, pc, r0
   6efd4:	bl	18c4 <puts@plt>
   6efd8:	ldr	r0, [r5, #12]
   6efdc:	add	r7, r7, #1
   6efe0:	ldr	r1, [r0, r6, lsl #2]
   6efe4:	cmp	r7, r1
   6efe8:	bcs	6ef54 <Mat_VarPrint+0x574>
   6efec:	ldr	r1, [sp]
   6eff0:	add	r4, r4, r1
   6eff4:	ldr	r1, [r5, #20]
   6eff8:	cmp	r7, r1
   6effc:	bcc	6ef8c <Mat_VarPrint+0x5ac>
   6f000:	b	6ef54 <Mat_VarPrint+0x574>
   6f004:	cmp	r7, r1
   6f008:	bcs	6ec9c <Mat_VarPrint+0x2bc>
   6f00c:	ldr	r0, [pc, #692]	; 6f2c8 <Mat_VarPrint+0x8e8>
   6f010:	add	r0, pc, r0
   6f014:	bl	18c4 <puts@plt>
   6f018:	b	6ec9c <Mat_VarPrint+0x2bc>
   6f01c:	ldr	r1, [sl, #8]
   6f020:	cmp	r1, #17
   6f024:	cmpne	r1, #4
   6f028:	bne	6f1e0 <Mat_VarPrint+0x800>
   6f02c:	ldr	r1, [r0]
   6f030:	cmp	r1, #0
   6f034:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6f038:	ldr	r7, [sl, #40]	; 0x28
   6f03c:	ldr	r4, [pc, #652]	; 6f2d0 <Mat_VarPrint+0x8f0>
   6f040:	mov	r5, #0
   6f044:	mov	r6, #2
   6f048:	mov	r9, #0
   6f04c:	add	r4, pc, r4
   6f050:	ldr	r0, [r0, #4]
   6f054:	cmp	r0, #0
   6f058:	bne	6f084 <Mat_VarPrint+0x6a4>
   6f05c:	mov	r0, #10
   6f060:	bl	199c <putchar@plt>
   6f064:	ldr	r0, [sl, #32]
   6f068:	add	r9, r9, #1
   6f06c:	ldr	r1, [r0]
   6f070:	cmp	r9, r1
   6f074:	bcs	6ec9c <Mat_VarPrint+0x2bc>
   6f078:	ldr	r0, [r0, #4]
   6f07c:	cmp	r0, #0
   6f080:	beq	6f05c <Mat_VarPrint+0x67c>
   6f084:	mov	r8, #1
   6f088:	sub	r0, r8, #1
   6f08c:	mla	r0, r1, r0, r9
   6f090:	add	r0, r7, r0, lsl #1
   6f094:	ldrh	r3, [r0]
   6f098:	cmp	r3, #127	; 0x7f
   6f09c:	bhi	6f0bc <Mat_VarPrint+0x6dc>
   6f0a0:	mov	r0, r3
   6f0a4:	bl	199c <putchar@plt>
   6f0a8:	ldr	r0, [sl, #32]
   6f0ac:	ldr	r1, [r0, #4]
   6f0b0:	cmp	r8, r1
   6f0b4:	bcc	6f120 <Mat_VarPrint+0x740>
   6f0b8:	b	6f05c <Mat_VarPrint+0x67c>
   6f0bc:	cmp	r5, r3, lsr #11
   6f0c0:	bne	6f0f4 <Mat_VarPrint+0x714>
   6f0c4:	mov	r0, #192	; 0xc0
   6f0c8:	orr	r1, r0, r3, lsr #6
   6f0cc:	ldr	r0, [pc, #512]	; 6f2d4 <Mat_VarPrint+0x8f4>
   6f0d0:	bfi	r3, r6, #6, #26
   6f0d4:	mov	r2, r3
   6f0d8:	add	r0, pc, r0
   6f0dc:	bl	17d4 <printf@plt>
   6f0e0:	ldr	r0, [sl, #32]
   6f0e4:	ldr	r1, [r0, #4]
   6f0e8:	cmp	r8, r1
   6f0ec:	bcc	6f120 <Mat_VarPrint+0x740>
   6f0f0:	b	6f05c <Mat_VarPrint+0x67c>
   6f0f4:	lsr	r2, r3, #6
   6f0f8:	mov	r0, #224	; 0xe0
   6f0fc:	orr	r1, r0, r3, lsr #12
   6f100:	bfi	r3, r6, #6, #26
   6f104:	bfi	r2, r6, #6, #26
   6f108:	mov	r0, r4
   6f10c:	bl	17d4 <printf@plt>
   6f110:	ldr	r0, [sl, #32]
   6f114:	ldr	r1, [r0, #4]
   6f118:	cmp	r8, r1
   6f11c:	bcs	6f05c <Mat_VarPrint+0x67c>
   6f120:	ldr	r1, [r0]
   6f124:	add	r8, r8, #1
   6f128:	b	6f088 <Mat_VarPrint+0x6a8>
   6f12c:	ldr	r1, [r5, #16]
   6f130:	cmp	r1, #1
   6f134:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6f138:	ldr	r9, [r5, #24]
   6f13c:	ldr	r0, [r5, #12]
   6f140:	ldr	r8, [pc, #412]	; 6f2e4 <Mat_VarPrint+0x904>
   6f144:	mov	r4, #0
   6f148:	add	r8, pc, r8
   6f14c:	b	6f160 <Mat_VarPrint+0x780>
   6f150:	ldr	r1, [r5, #16]
   6f154:	sub	r2, r1, #1
   6f158:	cmp	r4, r2
   6f15c:	bcs	6ec9c <Mat_VarPrint+0x2bc>
   6f160:	ldr	r6, [r0, r4, lsl #2]
   6f164:	add	r4, r4, #1
   6f168:	ldr	r2, [r0, r4, lsl #2]
   6f16c:	cmp	r6, r2
   6f170:	bcs	6f154 <Mat_VarPrint+0x774>
   6f174:	ldr	r1, [r5, #20]
   6f178:	cmp	r6, r1
   6f17c:	bcs	6f150 <Mat_VarPrint+0x770>
   6f180:	ldr	r0, [sp]
   6f184:	mla	r7, r0, r6, r9
   6f188:	ldr	r0, [r5, #4]
   6f18c:	mov	r2, r4
   6f190:	ldr	r0, [r0, r6, lsl #2]
   6f194:	add	r1, r0, #1
   6f198:	mov	r0, r8
   6f19c:	bl	17d4 <printf@plt>
   6f1a0:	ldr	r0, [sl, #8]
   6f1a4:	mov	r1, r7
   6f1a8:	bl	6f2e8 <Mat_PrintNumber>
   6f1ac:	mov	r0, #10
   6f1b0:	bl	199c <putchar@plt>
   6f1b4:	ldr	r0, [r5, #12]
   6f1b8:	add	r6, r6, #1
   6f1bc:	ldr	r1, [r0, r4, lsl #2]
   6f1c0:	cmp	r6, r1
   6f1c4:	bcs	6f150 <Mat_VarPrint+0x770>
   6f1c8:	ldr	r1, [sp]
   6f1cc:	add	r7, r7, r1
   6f1d0:	ldr	r1, [r5, #20]
   6f1d4:	cmp	r6, r1
   6f1d8:	bcc	6f188 <Mat_VarPrint+0x7a8>
   6f1dc:	b	6f150 <Mat_VarPrint+0x770>
   6f1e0:	ldr	r1, [r0]
   6f1e4:	cmp	r1, #0
   6f1e8:	beq	6ec9c <Mat_VarPrint+0x2bc>
   6f1ec:	ldr	r5, [sl, #40]	; 0x28
   6f1f0:	mov	r6, #0
   6f1f4:	ldr	r0, [r0, #4]
   6f1f8:	cmp	r0, #0
   6f1fc:	bne	6f228 <Mat_VarPrint+0x848>
   6f200:	mov	r0, #10
   6f204:	bl	199c <putchar@plt>
   6f208:	ldr	r0, [sl, #32]
   6f20c:	add	r6, r6, #1
   6f210:	ldr	r1, [r0]
   6f214:	cmp	r6, r1
   6f218:	bcs	6ec9c <Mat_VarPrint+0x2bc>
   6f21c:	ldr	r0, [r0, #4]
   6f220:	cmp	r0, #0
   6f224:	beq	6f200 <Mat_VarPrint+0x820>
   6f228:	ldrb	r0, [r5, r6]
   6f22c:	bl	199c <putchar@plt>
   6f230:	ldr	r0, [sl, #32]
   6f234:	ldr	r1, [r0, #4]
   6f238:	cmp	r1, #2
   6f23c:	bcc	6f200 <Mat_VarPrint+0x820>
   6f240:	mov	r4, #1
   6f244:	ldr	r0, [r0]
   6f248:	mla	r0, r0, r4, r6
   6f24c:	ldrb	r0, [r5, r0]
   6f250:	bl	199c <putchar@plt>
   6f254:	ldr	r0, [sl, #32]
   6f258:	add	r4, r4, #1
   6f25c:	ldr	r1, [r0, #4]
   6f260:	cmp	r4, r1
   6f264:	bcc	6f244 <Mat_VarPrint+0x864>
   6f268:	b	6f200 <Mat_VarPrint+0x820>
   6f26c:	.word	0x00003b64
   6f270:	.word	0x00003d66
   6f274:	.word	0x00003b08
   6f278:	.word	0x00003afc
   6f27c:	.word	0x00014384
   6f280:	.word	0x00003ac3
   6f284:	.word	0x00003aba
   6f288:	.word	0x00003aad
   6f28c:	.word	0x00014370
   6f290:	.word	0x00003c24
   6f294:	.word	0x00003bf8
   6f298:	.word	0x00003bf7
   6f29c:	.word	0x00003c86
   6f2a0:	.word	0x00003b08
   6f2a4:	.word	0x00003aff
   6f2a8:	.word	0x00003ce0
   6f2ac:	.word	0x00003d1e
   6f2b0:	.word	0x00003c66
   6f2b4:	.word	0x00003c29
   6f2b8:	.word	0x00003bb9
   6f2bc:	.word	0x000039c2
   6f2c0:	.word	0x000039ae
   6f2c4:	.word	0x00003989
   6f2c8:	.word	0x000038b7
   6f2cc:	.word	0x00003955
   6f2d0:	.word	0x00003751
   6f2d4:	.word	0x000036c7
   6f2d8:	.word	0x00003804
   6f2dc:	.word	0x000037da
   6f2e0:	.word	0x000038db
   6f2e4:	.word	0x0000365c

0006f2e8 <Mat_PrintNumber>:
   6f2e8:	sub	r0, r0, #1
   6f2ec:	cmp	r0, #12
   6f2f0:	bxhi	lr
   6f2f4:	add	r2, pc, #4
   6f2f8:	ldr	r0, [r2, r0, lsl #2]
   6f2fc:	add	pc, r2, r0
   6f300:	.word	0x00000034
   6f304:	.word	0x00000044
   6f308:	.word	0x00000054
   6f30c:	.word	0x00000064
   6f310:	.word	0x00000074
   6f314:	.word	0x00000084
   6f318:	.word	0x00000094
   6f31c:	.word	0x000000d4
   6f320:	.word	0x000000a0
   6f324:	.word	0x000000d4
   6f328:	.word	0x000000d4
   6f32c:	.word	0x000000b4
   6f330:	.word	0x000000c4
   6f334:	ldrsb	r1, [r1]
   6f338:	ldr	r0, [pc, #180]	; 6f3f4 <Mat_PrintNumber+0x10c>
   6f33c:	add	r0, pc, r0
   6f340:	b	17d4 <printf@plt>
   6f344:	ldrb	r1, [r1]
   6f348:	ldr	r0, [pc, #168]	; 6f3f8 <Mat_PrintNumber+0x110>
   6f34c:	add	r0, pc, r0
   6f350:	b	17d4 <printf@plt>
   6f354:	ldrsh	r1, [r1]
   6f358:	ldr	r0, [pc, #140]	; 6f3ec <Mat_PrintNumber+0x104>
   6f35c:	add	r0, pc, r0
   6f360:	b	17d4 <printf@plt>
   6f364:	ldrh	r1, [r1]
   6f368:	ldr	r0, [pc, #128]	; 6f3f0 <Mat_PrintNumber+0x108>
   6f36c:	add	r0, pc, r0
   6f370:	b	17d4 <printf@plt>
   6f374:	ldr	r1, [r1]
   6f378:	ldr	r0, [pc, #100]	; 6f3e4 <Mat_PrintNumber+0xfc>
   6f37c:	add	r0, pc, r0
   6f380:	b	17d4 <printf@plt>
   6f384:	ldr	r1, [r1]
   6f388:	ldr	r0, [pc, #88]	; 6f3e8 <Mat_PrintNumber+0x100>
   6f38c:	add	r0, pc, r0
   6f390:	b	17d4 <printf@plt>
   6f394:	vldr	s0, [r1]
   6f398:	vcvt.f64.f32	d16, s0
   6f39c:	b	6f3a4 <Mat_PrintNumber+0xbc>
   6f3a0:	vldr	d16, [r1]
   6f3a4:	ldr	r0, [pc, #44]	; 6f3d8 <Mat_PrintNumber+0xf0>
   6f3a8:	vmov	r2, r3, d16
   6f3ac:	add	r0, pc, r0
   6f3b0:	b	17d4 <printf@plt>
   6f3b4:	ldrd	r2, [r1]
   6f3b8:	ldr	r0, [pc, #28]	; 6f3dc <Mat_PrintNumber+0xf4>
   6f3bc:	add	r0, pc, r0
   6f3c0:	b	17d4 <printf@plt>
   6f3c4:	ldrd	r2, [r1]
   6f3c8:	ldr	r0, [pc, #16]	; 6f3e0 <Mat_PrintNumber+0xf8>
   6f3cc:	add	r0, pc, r0
   6f3d0:	b	17d4 <printf@plt>
   6f3d4:	bx	lr
   6f3d8:	.word	0x000034f9
   6f3dc:	.word	0x000034ec
   6f3e0:	.word	0x000034e1
   6f3e4:	.word	0x00002c48
   6f3e8:	.word	0x00003526
   6f3ec:	.word	0x00003559
   6f3f0:	.word	0x0000354d
   6f3f4:	.word	0x00003581
   6f3f8:	.word	0x00003576

0006f3fc <Mat_VarReadData>:
   6f3fc:	push	{fp, lr}
   6f400:	mov	fp, sp
   6f404:	ldr	ip, [r1, #16]
   6f408:	sub	lr, ip, #6
   6f40c:	mvn	ip, #0
   6f410:	cmp	lr, #9
   6f414:	bhi	6f454 <Mat_VarReadData+0x58>
   6f418:	ldr	ip, [r0, #16]
   6f41c:	cmp	ip, #16
   6f420:	beq	6f43c <Mat_VarReadData+0x40>
   6f424:	cmp	ip, #512	; 0x200
   6f428:	beq	6f444 <Mat_VarReadData+0x48>
   6f42c:	cmp	ip, #256	; 0x100
   6f430:	bne	6f450 <Mat_VarReadData+0x54>
   6f434:	pop	{fp, lr}
   6f438:	b	33934 <Mat_VarReadData5>
   6f43c:	pop	{fp, lr}
   6f440:	b	6b71c <Mat_VarReadData4>
   6f444:	mov	ip, #1
   6f448:	mov	r0, ip
   6f44c:	pop	{fp, pc}
   6f450:	mov	ip, #2
   6f454:	mov	r0, ip
   6f458:	pop	{fp, pc}

0006f45c <Mat_VarReadDataAll>:
   6f45c:	push	{r4, sl, fp, lr}
   6f460:	add	fp, sp, #8
   6f464:	cmp	r0, #0
   6f468:	mov	r4, #1
   6f46c:	cmpne	r1, #0
   6f470:	bne	6f47c <Mat_VarReadDataAll+0x20>
   6f474:	mov	r0, r4
   6f478:	pop	{r4, sl, fp, pc}
   6f47c:	ldr	r2, [r0]
   6f480:	mov	r4, #0
   6f484:	cmp	r2, #0
   6f488:	beq	6f474 <Mat_VarReadDataAll+0x18>
   6f48c:	ldr	r2, [r0, #16]
   6f490:	cmp	r2, #16
   6f494:	beq	6f4ac <Mat_VarReadDataAll+0x50>
   6f498:	cmp	r2, #256	; 0x100
   6f49c:	bne	6f474 <Mat_VarReadDataAll+0x18>
   6f4a0:	bl	31af0 <Mat_VarRead5>
   6f4a4:	mov	r0, r4
   6f4a8:	pop	{r4, sl, fp, pc}
   6f4ac:	bl	6ade8 <Mat_VarRead4>
   6f4b0:	mov	r0, r4
   6f4b4:	pop	{r4, sl, fp, pc}

0006f4b8 <Mat_VarReadDataLinear>:
   6f4b8:	push	{fp, lr}
   6f4bc:	mov	fp, sp
   6f4c0:	ldr	ip, [r1, #16]
   6f4c4:	sub	lr, ip, #6
   6f4c8:	mvn	ip, #0
   6f4cc:	cmp	lr, #9
   6f4d0:	bhi	6f510 <Mat_VarReadDataLinear+0x58>
   6f4d4:	ldr	ip, [r0, #16]
   6f4d8:	cmp	ip, #16
   6f4dc:	beq	6f4f8 <Mat_VarReadDataLinear+0x40>
   6f4e0:	cmp	ip, #512	; 0x200
   6f4e4:	beq	6f500 <Mat_VarReadDataLinear+0x48>
   6f4e8:	cmp	ip, #256	; 0x100
   6f4ec:	bne	6f50c <Mat_VarReadDataLinear+0x54>
   6f4f0:	pop	{fp, lr}
   6f4f4:	b	64ac8 <Mat_VarReadDataLinear5>
   6f4f8:	pop	{fp, lr}
   6f4fc:	b	6b950 <Mat_VarReadDataLinear4>
   6f500:	mov	ip, #1
   6f504:	mov	r0, ip
   6f508:	pop	{fp, pc}
   6f50c:	mov	ip, #2
   6f510:	mov	r0, ip
   6f514:	pop	{fp, pc}

0006f518 <Mat_VarReadInfo>:
   6f518:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   6f51c:	add	fp, sp, #24
   6f520:	cmp	r0, #0
   6f524:	mov	r6, #0
   6f528:	movne	r5, r1
   6f52c:	cmpne	r1, #0
   6f530:	bne	6f53c <Mat_VarReadInfo+0x24>
   6f534:	mov	r0, r6
   6f538:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   6f53c:	mov	r4, r0
   6f540:	ldr	r0, [r0, #16]
   6f544:	cmp	r0, #512	; 0x200
   6f548:	bne	6f5f0 <Mat_VarReadInfo+0xd8>
   6f54c:	ldr	r0, [r4, #36]	; 0x24
   6f550:	ldr	r8, [r4, #32]
   6f554:	mov	r6, #0
   6f558:	str	r6, [r4, #32]
   6f55c:	cmp	r0, #0
   6f560:	bne	6f588 <Mat_VarReadInfo+0x70>
   6f564:	mov	r0, r6
   6f568:	str	r8, [r4, #32]
   6f56c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   6f570:	mov	r0, r7
   6f574:	bl	1918 <Mat_VarFree@plt>
   6f578:	ldr	r0, [r4, #32]
   6f57c:	ldr	r1, [r4, #36]	; 0x24
   6f580:	cmp	r0, r1
   6f584:	bcs	6f564 <Mat_VarReadInfo+0x4c>
   6f588:	ldr	r0, [r4, #16]
   6f58c:	cmp	r0, #16
   6f590:	beq	6f5b4 <Mat_VarReadInfo+0x9c>
   6f594:	cmp	r0, #256	; 0x100
   6f598:	bne	6f6c0 <Mat_VarReadInfo+0x1a8>
   6f59c:	mov	r0, r4
   6f5a0:	bl	67d34 <Mat_VarReadNextInfo5>
   6f5a4:	mov	r7, r0
   6f5a8:	cmp	r0, #0
   6f5ac:	bne	6f5c8 <Mat_VarReadInfo+0xb0>
   6f5b0:	b	6f6c0 <Mat_VarReadInfo+0x1a8>
   6f5b4:	mov	r0, r4
   6f5b8:	bl	6ba60 <Mat_VarReadNextInfo4>
   6f5bc:	mov	r7, r0
   6f5c0:	cmp	r0, #0
   6f5c4:	beq	6f6c0 <Mat_VarReadInfo+0x1a8>
   6f5c8:	ldr	r0, [r7, #36]	; 0x24
   6f5cc:	cmp	r0, #0
   6f5d0:	beq	6f570 <Mat_VarReadInfo+0x58>
   6f5d4:	mov	r1, r5
   6f5d8:	bl	17b0 <strcmp@plt>
   6f5dc:	cmp	r0, #0
   6f5e0:	bne	6f570 <Mat_VarReadInfo+0x58>
   6f5e4:	mov	r0, r7
   6f5e8:	str	r8, [r4, #32]
   6f5ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   6f5f0:	ldr	r0, [r4]
   6f5f4:	bl	1840 <ftell@plt>
   6f5f8:	cmn	r0, #1
   6f5fc:	beq	6f6ac <Mat_VarReadInfo+0x194>
   6f600:	mov	r7, r0
   6f604:	ldr	r0, [r4]
   6f608:	ldr	r1, [r4, #28]
   6f60c:	mov	r2, #0
   6f610:	bl	1a2c <fseek@plt>
   6f614:	ldr	r0, [r4, #16]
   6f618:	cmp	r0, #16
   6f61c:	bne	6f650 <Mat_VarReadInfo+0x138>
   6f620:	b	6f694 <Mat_VarReadInfo+0x17c>
   6f624:	ldr	r0, [r4]
   6f628:	bl	190c <feof@plt>
   6f62c:	cmp	r0, #0
   6f630:	beq	6f6d8 <Mat_VarReadInfo+0x1c0>
   6f634:	ldr	r0, [r4]
   6f638:	bl	190c <feof@plt>
   6f63c:	cmp	r0, #0
   6f640:	bne	6f6e4 <Mat_VarReadInfo+0x1cc>
   6f644:	ldr	r0, [r4, #16]
   6f648:	cmp	r0, #16
   6f64c:	beq	6f694 <Mat_VarReadInfo+0x17c>
   6f650:	cmp	r0, #256	; 0x100
   6f654:	bne	6f624 <Mat_VarReadInfo+0x10c>
   6f658:	mov	r0, r4
   6f65c:	bl	67d34 <Mat_VarReadNextInfo5>
   6f660:	mov	r6, r0
   6f664:	cmp	r0, #0
   6f668:	beq	6f624 <Mat_VarReadInfo+0x10c>
   6f66c:	ldr	r0, [r6, #36]	; 0x24
   6f670:	cmp	r0, #0
   6f674:	beq	6f688 <Mat_VarReadInfo+0x170>
   6f678:	mov	r1, r5
   6f67c:	bl	17b0 <strcmp@plt>
   6f680:	cmp	r0, #0
   6f684:	beq	6f6e8 <Mat_VarReadInfo+0x1d0>
   6f688:	mov	r0, r6
   6f68c:	bl	1918 <Mat_VarFree@plt>
   6f690:	b	6f634 <Mat_VarReadInfo+0x11c>
   6f694:	mov	r0, r4
   6f698:	bl	6ba60 <Mat_VarReadNextInfo4>
   6f69c:	mov	r6, r0
   6f6a0:	cmp	r0, #0
   6f6a4:	bne	6f66c <Mat_VarReadInfo+0x154>
   6f6a8:	b	6f624 <Mat_VarReadInfo+0x10c>
   6f6ac:	ldr	r0, [pc, #84]	; 6f708 <Mat_VarReadInfo+0x1f0>
   6f6b0:	add	r0, pc, r0
   6f6b4:	bl	19b4 <Mat_Critical@plt>
   6f6b8:	mov	r0, r6
   6f6bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   6f6c0:	ldr	r0, [pc, #56]	; 6f700 <Mat_VarReadInfo+0x1e8>
   6f6c4:	add	r0, pc, r0
   6f6c8:	bl	19b4 <Mat_Critical@plt>
   6f6cc:	mov	r0, r6
   6f6d0:	str	r8, [r4, #32]
   6f6d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   6f6d8:	ldr	r0, [pc, #36]	; 6f704 <Mat_VarReadInfo+0x1ec>
   6f6dc:	add	r0, pc, r0
   6f6e0:	bl	19b4 <Mat_Critical@plt>
   6f6e4:	mov	r6, #0
   6f6e8:	ldr	r0, [r4]
   6f6ec:	mov	r1, r7
   6f6f0:	mov	r2, #0
   6f6f4:	bl	1a2c <fseek@plt>
   6f6f8:	mov	r0, r6
   6f6fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   6f700:	.word	0x0000282c
   6f704:	.word	0x00002814
   6f708:	.word	0x000025b4

0006f70c <Mat_VarRead>:
   6f70c:	push	{r4, r5, r6, r7, fp, lr}
   6f710:	add	fp, sp, #16
   6f714:	cmp	r0, #0
   6f718:	mov	r4, #0
   6f71c:	movne	r7, r1
   6f720:	cmpne	r1, #0
   6f724:	bne	6f730 <Mat_VarRead+0x24>
   6f728:	mov	r0, r4
   6f72c:	pop	{r4, r5, r6, r7, fp, pc}
   6f730:	mov	r5, r0
   6f734:	ldr	r0, [r0, #16]
   6f738:	cmp	r0, #512	; 0x200
   6f73c:	bne	6f79c <Mat_VarRead+0x90>
   6f740:	ldr	r6, [r5, #32]
   6f744:	mov	r0, #0
   6f748:	mov	r1, r7
   6f74c:	str	r0, [r5, #32]
   6f750:	mov	r0, r5
   6f754:	bl	187c <Mat_VarReadInfo@plt>
   6f758:	mov	r4, r0
   6f75c:	cmp	r0, #0
   6f760:	beq	6f790 <Mat_VarRead+0x84>
   6f764:	ldr	r0, [r5]
   6f768:	cmp	r0, #0
   6f76c:	beq	6f790 <Mat_VarRead+0x84>
   6f770:	ldr	r0, [r5, #16]
   6f774:	cmp	r0, #16
   6f778:	beq	6f80c <Mat_VarRead+0x100>
   6f77c:	cmp	r0, #256	; 0x100
   6f780:	bne	6f790 <Mat_VarRead+0x84>
   6f784:	mov	r0, r5
   6f788:	mov	r1, r4
   6f78c:	bl	31af0 <Mat_VarRead5>
   6f790:	str	r6, [r5, #32]
   6f794:	mov	r0, r4
   6f798:	pop	{r4, r5, r6, r7, fp, pc}
   6f79c:	ldr	r0, [r5]
   6f7a0:	bl	1840 <ftell@plt>
   6f7a4:	cmn	r0, #1
   6f7a8:	beq	6f7f8 <Mat_VarRead+0xec>
   6f7ac:	mov	r6, r0
   6f7b0:	mov	r0, r5
   6f7b4:	mov	r1, r7
   6f7b8:	bl	187c <Mat_VarReadInfo@plt>
   6f7bc:	mov	r4, r0
   6f7c0:	cmp	r0, #0
   6f7c4:	beq	6f830 <Mat_VarRead+0x124>
   6f7c8:	ldr	r0, [r5]
   6f7cc:	cmp	r0, #0
   6f7d0:	beq	6f830 <Mat_VarRead+0x124>
   6f7d4:	ldr	r0, [r5, #16]
   6f7d8:	cmp	r0, #16
   6f7dc:	beq	6f824 <Mat_VarRead+0x118>
   6f7e0:	cmp	r0, #256	; 0x100
   6f7e4:	bne	6f830 <Mat_VarRead+0x124>
   6f7e8:	mov	r0, r5
   6f7ec:	mov	r1, r4
   6f7f0:	bl	31af0 <Mat_VarRead5>
   6f7f4:	b	6f830 <Mat_VarRead+0x124>
   6f7f8:	ldr	r0, [pc, #72]	; 6f848 <Mat_VarRead+0x13c>
   6f7fc:	add	r0, pc, r0
   6f800:	bl	19b4 <Mat_Critical@plt>
   6f804:	mov	r0, r4
   6f808:	pop	{r4, r5, r6, r7, fp, pc}
   6f80c:	mov	r0, r5
   6f810:	mov	r1, r4
   6f814:	bl	6ade8 <Mat_VarRead4>
   6f818:	str	r6, [r5, #32]
   6f81c:	mov	r0, r4
   6f820:	pop	{r4, r5, r6, r7, fp, pc}
   6f824:	mov	r0, r5
   6f828:	mov	r1, r4
   6f82c:	bl	6ade8 <Mat_VarRead4>
   6f830:	ldr	r0, [r5]
   6f834:	mov	r1, r6
   6f838:	mov	r2, #0
   6f83c:	bl	1a2c <fseek@plt>
   6f840:	mov	r0, r4
   6f844:	pop	{r4, r5, r6, r7, fp, pc}
   6f848:	.word	0x00002468

0006f84c <Mat_VarWriteInfo>:
   6f84c:	push	{fp, lr}
   6f850:	mov	fp, sp
   6f854:	ldr	r0, [r0, #16]
   6f858:	ldr	r2, [pc, #36]	; 6f884 <Mat_VarWriteInfo+0x38>
   6f85c:	ldr	r1, [pc, #36]	; 6f888 <Mat_VarWriteInfo+0x3c>
   6f860:	cmp	r0, #512	; 0x200
   6f864:	ldr	r0, [pc, #32]	; 6f88c <Mat_VarWriteInfo+0x40>
   6f868:	add	r2, pc, r2
   6f86c:	add	r1, pc, r1
   6f870:	moveq	r1, r2
   6f874:	add	r0, pc, r0
   6f878:	bl	19b4 <Mat_Critical@plt>
   6f87c:	mov	r0, #1
   6f880:	pop	{fp, pc}
   6f884:	.word	0x00002f8f
   6f888:	.word	0x00002fab
   6f88c:	.word	0x00002f3f

0006f890 <Mat_VarWriteData>:
   6f890:	push	{fp, lr}
   6f894:	mov	fp, sp
   6f898:	ldr	r0, [r0, #16]
   6f89c:	ldr	r2, [pc, #36]	; 6f8c8 <Mat_VarWriteData+0x38>
   6f8a0:	ldr	r1, [pc, #36]	; 6f8cc <Mat_VarWriteData+0x3c>
   6f8a4:	cmp	r0, #512	; 0x200
   6f8a8:	ldr	r0, [pc, #32]	; 6f8d0 <Mat_VarWriteData+0x40>
   6f8ac:	add	r2, pc, r2
   6f8b0:	add	r1, pc, r1
   6f8b4:	moveq	r1, r2
   6f8b8:	add	r0, pc, r0
   6f8bc:	bl	19b4 <Mat_Critical@plt>
   6f8c0:	mov	r0, #1
   6f8c4:	pop	{fp, pc}
   6f8c8:	.word	0x00002f4b
   6f8cc:	.word	0x00002f67
   6f8d0:	.word	0x00002efb

0006f8d4 <Mat_VarWriteAppend>:
   6f8d4:	push	{r4, sl, fp, lr}
   6f8d8:	add	fp, sp, #8
   6f8dc:	sub	sp, sp, #8
   6f8e0:	mov	r4, r0
   6f8e4:	mvn	r0, #0
   6f8e8:	cmp	r4, #0
   6f8ec:	cmpne	r1, #0
   6f8f0:	bne	6f8fc <Mat_VarWriteAppend+0x28>
   6f8f4:	sub	sp, fp, #8
   6f8f8:	pop	{r4, sl, fp, pc}
   6f8fc:	ldr	r0, [r4, #40]	; 0x28
   6f900:	cmp	r0, #0
   6f904:	bne	6f91c <Mat_VarWriteAppend+0x48>
   6f908:	mov	r0, #0
   6f90c:	add	r1, sp, #4
   6f910:	str	r0, [sp, #4]
   6f914:	mov	r0, r4
   6f918:	bl	1930 <Mat_GetDir@plt>
   6f91c:	ldr	r1, [r4, #16]
   6f920:	mov	r0, #2
   6f924:	cmp	r1, #512	; 0x200
   6f928:	movweq	r0, #1
   6f92c:	sub	sp, fp, #8
   6f930:	pop	{r4, sl, fp, pc}

0006f934 <Mat_VarGetCell>:
   6f934:	push	{r4, r5, r6, sl, fp, lr}
   6f938:	add	fp, sp, #16
   6f93c:	sub	sp, sp, #8
   6f940:	mov	r6, r0
   6f944:	mov	r0, #1
   6f948:	mov	r4, #0
   6f94c:	cmp	r6, #0
   6f950:	str	r0, [sp, #4]
   6f954:	beq	6f984 <Mat_VarGetCell+0x50>
   6f958:	mov	r5, r1
   6f95c:	add	r1, sp, #4
   6f960:	mov	r0, r6
   6f964:	bl	6be10 <SafeMulDims>
   6f968:	cmp	r5, #0
   6f96c:	bmi	6f984 <Mat_VarGetCell+0x50>
   6f970:	ldr	r0, [sp, #4]
   6f974:	cmp	r0, r5
   6f978:	bls	6f984 <Mat_VarGetCell+0x50>
   6f97c:	ldr	r0, [r6, #40]	; 0x28
   6f980:	ldr	r4, [r0, r5, lsl #2]
   6f984:	mov	r0, r4
   6f988:	sub	sp, fp, #16
   6f98c:	pop	{r4, r5, r6, sl, fp, pc}

0006f990 <Mat_VarGetCells>:
   6f990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6f994:	add	fp, sp, #28
   6f998:	sub	sp, sp, #188	; 0xbc
   6f99c:	vmov.i32	q8, #0	; 0x00000000
   6f9a0:	mov	r8, r2
   6f9a4:	sub	r2, fp, #72	; 0x48
   6f9a8:	mov	r5, #36	; 0x24
   6f9ac:	mov	r7, r0
   6f9b0:	mov	r0, #0
   6f9b4:	mov	r6, r2
   6f9b8:	add	r2, r2, #16
   6f9bc:	cmp	r7, #0
   6f9c0:	str	r0, [fp, #-40]	; 0xffffffd8
   6f9c4:	str	r0, [sp, #136]	; 0x88
   6f9c8:	str	r0, [sp, #96]	; 0x60
   6f9cc:	cmpne	r1, #0
   6f9d0:	vst1.64	{d16-d17}, [r6], r5
   6f9d4:	vst1.64	{d16-d17}, [r2]
   6f9d8:	add	r2, sp, #104	; 0x68
   6f9dc:	str	r0, [r6]
   6f9e0:	add	r6, r2, #16
   6f9e4:	vst1.64	{d16-d17}, [r2], r5
   6f9e8:	str	r0, [r2]
   6f9ec:	add	r2, sp, #64	; 0x40
   6f9f0:	vst1.64	{d16-d17}, [r6]
   6f9f4:	add	r6, r2, #16
   6f9f8:	vst1.64	{d16-d17}, [r2], r5
   6f9fc:	vst1.64	{d16-d17}, [r6]
   6fa00:	str	r0, [r2]
   6fa04:	beq	6fa14 <Mat_VarGetCells+0x84>
   6fa08:	cmp	r8, #0
   6fa0c:	cmpne	r3, #0
   6fa10:	bne	6fa1c <Mat_VarGetCells+0x8c>
   6fa14:	sub	sp, fp, #28
   6fa18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6fa1c:	ldr	r9, [r7, #4]
   6fa20:	cmp	r9, #9
   6fa24:	bgt	6fa14 <Mat_VarGetCells+0x84>
   6fa28:	ldr	r6, [r7, #32]
   6fa2c:	cmp	r9, #2
   6fa30:	str	r7, [sp, #36]	; 0x24
   6fa34:	str	r3, [sp, #48]	; 0x30
   6fa38:	str	r1, [sp, #52]	; 0x34
   6fa3c:	ldr	r4, [r6]
   6fa40:	str	r4, [sp, #64]	; 0x40
   6fa44:	ldr	r0, [r3]
   6fa48:	ldr	sl, [r1]
   6fa4c:	str	sl, [fp, #-72]	; 0xffffffb8
   6fa50:	str	r0, [sp, #20]
   6fa54:	str	sl, [sp, #32]
   6fa58:	blt	6fac0 <Mat_VarGetCells+0x130>
   6fa5c:	ldr	r1, [sp, #52]	; 0x34
   6fa60:	mvn	r0, #3
   6fa64:	add	r2, r0, r9, lsl #2
   6fa68:	sub	r0, fp, #72	; 0x48
   6fa6c:	orr	r0, r0, #4
   6fa70:	add	r7, r1, #4
   6fa74:	mov	r1, r7
   6fa78:	bl	181c <memcpy@plt>
   6fa7c:	add	r0, sp, #64	; 0x40
   6fa80:	ldr	sl, [sp, #32]
   6fa84:	add	r5, r6, #4
   6fa88:	sub	r3, r9, #1
   6fa8c:	orr	r1, r0, #4
   6fa90:	ldr	r0, [sp, #48]	; 0x30
   6fa94:	add	r2, r0, #4
   6fa98:	ldr	r0, [sp, #20]
   6fa9c:	ldr	r6, [r7], #4
   6faa0:	subs	r3, r3, #1
   6faa4:	mla	sl, r4, r6, sl
   6faa8:	ldr	r6, [r5], #4
   6faac:	mul	r4, r6, r4
   6fab0:	str	r4, [r1], #4
   6fab4:	ldr	r6, [r2], #4
   6fab8:	mul	r0, r6, r0
   6fabc:	bne	6fa9c <Mat_VarGetCells+0x10c>
   6fac0:	str	r0, [sp, #28]
   6fac4:	lsl	r0, r0, #2
   6fac8:	bl	18d0 <malloc@plt>
   6facc:	ldr	r1, [sp, #28]
   6fad0:	cmp	r1, #1
   6fad4:	blt	6fa14 <Mat_VarGetCells+0x84>
   6fad8:	sub	r1, r9, #1
   6fadc:	ldr	lr, [sp, #20]
   6fae0:	str	r9, [sp, #16]
   6fae4:	str	r1, [sp, #56]	; 0x38
   6fae8:	ldr	r1, [r8, #4]
   6faec:	cmp	lr, #0
   6faf0:	str	r1, [sp, #24]
   6faf4:	ble	6fcec <Mat_VarGetCells+0x35c>
   6faf8:	and	r1, lr, #1
   6fafc:	sub	r4, r9, #2
   6fb00:	add	r7, sp, #104	; 0x68
   6fb04:	add	r5, sp, #64	; 0x40
   6fb08:	str	r1, [sp, #12]
   6fb0c:	sub	r1, lr, r1
   6fb10:	str	r1, [sp, #60]	; 0x3c
   6fb14:	ldr	r1, [sp, #48]	; 0x30
   6fb18:	add	r6, r1, #4
   6fb1c:	ldr	r1, [sp, #52]	; 0x34
   6fb20:	add	r1, r1, #4
   6fb24:	str	r1, [sp, #52]	; 0x34
   6fb28:	lsl	r1, lr, #2
   6fb2c:	stmib	sp, {r0, r1}
   6fb30:	ldr	r1, [sp, #36]	; 0x24
   6fb34:	add	r0, r0, #4
   6fb38:	str	r0, [sp, #40]	; 0x28
   6fb3c:	ldr	r0, [r8], #8
   6fb40:	str	r8, [sp, #44]	; 0x2c
   6fb44:	ldr	r8, [r1, #40]	; 0x28
   6fb48:	lsl	r3, r0, #1
   6fb4c:	str	r3, [sp, #48]	; 0x30
   6fb50:	add	ip, r8, r0, lsl #2
   6fb54:	mov	r0, #0
   6fb58:	str	r0, [sp, #36]	; 0x24
   6fb5c:	mov	r2, #0
   6fb60:	cmp	lr, #1
   6fb64:	beq	6fbd4 <Mat_VarGetCells+0x244>
   6fb68:	b	6fba8 <Mat_VarGetCells+0x218>
   6fb6c:	ldr	r9, [sp, #16]
   6fb70:	ldr	lr, [sp, #20]
   6fb74:	ldr	r0, [sp, #8]
   6fb78:	ldr	r1, [sp, #40]	; 0x28
   6fb7c:	add	r1, r1, r0
   6fb80:	ldr	r0, [sp, #28]
   6fb84:	str	r1, [sp, #40]	; 0x28
   6fb88:	ldr	r1, [sp, #36]	; 0x24
   6fb8c:	add	r1, r1, lr
   6fb90:	cmp	r1, r0
   6fb94:	str	r1, [sp, #36]	; 0x24
   6fb98:	bge	6fce0 <Mat_VarGetCells+0x350>
   6fb9c:	mov	r2, #0
   6fba0:	cmp	lr, #1
   6fba4:	beq	6fbd4 <Mat_VarGetCells+0x244>
   6fba8:	ldr	r0, [sp, #40]	; 0x28
   6fbac:	ldr	r1, [r8, sl, lsl #2]
   6fbb0:	add	r2, r2, #2
   6fbb4:	str	r1, [r0, #-4]
   6fbb8:	ldr	r1, [ip, sl, lsl #2]
   6fbbc:	add	sl, sl, r3
   6fbc0:	str	r1, [r0]
   6fbc4:	ldr	r1, [sp, #60]	; 0x3c
   6fbc8:	add	r0, r0, #8
   6fbcc:	cmp	r1, r2
   6fbd0:	bne	6fbac <Mat_VarGetCells+0x21c>
   6fbd4:	ldr	r0, [sp, #12]
   6fbd8:	cmp	r0, #0
   6fbdc:	beq	6fbf4 <Mat_VarGetCells+0x264>
   6fbe0:	ldr	r1, [sp, #36]	; 0x24
   6fbe4:	ldr	r0, [r8, sl, lsl #2]
   6fbe8:	add	r1, r2, r1
   6fbec:	ldr	r2, [sp, #4]
   6fbf0:	str	r0, [r2, r1, lsl #2]
   6fbf4:	ldr	sl, [sp, #32]
   6fbf8:	ldr	r0, [sp, #108]	; 0x6c
   6fbfc:	ldr	r1, [sp, #24]
   6fc00:	cmp	r9, #2
   6fc04:	str	sl, [fp, #-72]	; 0xffffffb8
   6fc08:	add	r2, r0, #1
   6fc0c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   6fc10:	str	r2, [sp, #108]	; 0x6c
   6fc14:	add	r0, r0, r1
   6fc18:	str	r0, [fp, #-68]	; 0xffffffbc
   6fc1c:	blt	6fb74 <Mat_VarGetCells+0x1e4>
   6fc20:	ldr	sl, [sp, #32]
   6fc24:	mov	r9, #0
   6fc28:	ldr	r0, [r6, r9, lsl #2]
   6fc2c:	add	lr, r9, #1
   6fc30:	cmp	r2, r0
   6fc34:	bne	6fca4 <Mat_VarGetCells+0x314>
   6fc38:	add	r1, r7, r9, lsl #2
   6fc3c:	mov	r0, #0
   6fc40:	ldr	r3, [sp, #56]	; 0x38
   6fc44:	str	r0, [r1, #4]
   6fc48:	ldr	r0, [sp, #52]	; 0x34
   6fc4c:	cmp	lr, r3
   6fc50:	ldr	r2, [r0, r9, lsl #2]
   6fc54:	sub	r0, fp, #72	; 0x48
   6fc58:	add	r0, r0, r9, lsl #2
   6fc5c:	str	r2, [r0, #4]
   6fc60:	bge	6fc8c <Mat_VarGetCells+0x2fc>
   6fc64:	ldr	r5, [r1, #8]
   6fc68:	add	r7, sp, #104	; 0x68
   6fc6c:	add	r5, r5, #1
   6fc70:	str	r5, [r1, #8]
   6fc74:	ldr	r1, [sp, #44]	; 0x2c
   6fc78:	ldr	r5, [r0, #8]
   6fc7c:	ldr	r1, [r1, r9, lsl #2]
   6fc80:	add	r1, r5, r1
   6fc84:	add	r5, sp, #64	; 0x40
   6fc88:	str	r1, [r0, #8]
   6fc8c:	ldr	r3, [sp, #48]	; 0x30
   6fc90:	ldr	r0, [r5, r9, lsl #2]
   6fc94:	cmp	r4, r9
   6fc98:	mla	sl, r0, r2, sl
   6fc9c:	bne	6fcc0 <Mat_VarGetCells+0x330>
   6fca0:	b	6fb6c <Mat_VarGetCells+0x1dc>
   6fca4:	sub	r0, fp, #72	; 0x48
   6fca8:	add	r0, r0, r9, lsl #2
   6fcac:	ldr	r2, [r0, #4]
   6fcb0:	ldr	r0, [r5, r9, lsl #2]
   6fcb4:	cmp	r4, r9
   6fcb8:	mla	sl, r0, r2, sl
   6fcbc:	beq	6fb6c <Mat_VarGetCells+0x1dc>
   6fcc0:	add	r0, r7, r9, lsl #2
   6fcc4:	mov	r9, lr
   6fcc8:	ldr	r2, [r0, #8]
   6fccc:	ldr	r0, [r6, r9, lsl #2]
   6fcd0:	add	lr, r9, #1
   6fcd4:	cmp	r2, r0
   6fcd8:	bne	6fca4 <Mat_VarGetCells+0x314>
   6fcdc:	b	6fc38 <Mat_VarGetCells+0x2a8>
   6fce0:	ldr	r0, [sp, #4]
   6fce4:	sub	sp, fp, #28
   6fce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6fcec:	mov	sl, r0
   6fcf0:	ldr	r0, [sp, #48]	; 0x30
   6fcf4:	ldr	r1, [sp, #52]	; 0x34
   6fcf8:	add	ip, r8, #8
   6fcfc:	mov	lr, #0
   6fd00:	mov	r8, #0
   6fd04:	add	r2, r0, #4
   6fd08:	mov	r0, r9
   6fd0c:	add	r9, r1, #4
   6fd10:	sub	r7, r0, #2
   6fd14:	mov	r0, #0
   6fd18:	ldr	r1, [sp, #32]
   6fd1c:	add	r4, r0, #1
   6fd20:	str	r4, [sp, #108]	; 0x6c
   6fd24:	str	r1, [fp, #-72]	; 0xffffffb8
   6fd28:	ldr	r1, [sp, #24]
   6fd2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   6fd30:	add	r0, r0, r1
   6fd34:	str	r0, [fp, #-68]	; 0xffffffbc
   6fd38:	ldr	r0, [sp, #16]
   6fd3c:	cmp	r0, #2
   6fd40:	blt	6fdc8 <Mat_VarGetCells+0x438>
   6fd44:	mov	r0, #0
   6fd48:	ldr	r1, [r2, r0, lsl #2]
   6fd4c:	add	r6, r0, #1
   6fd50:	cmp	r4, r1
   6fd54:	bne	6fd9c <Mat_VarGetCells+0x40c>
   6fd58:	add	r1, sp, #104	; 0x68
   6fd5c:	sub	r4, fp, #72	; 0x48
   6fd60:	add	r3, r1, r0, lsl #2
   6fd64:	add	r4, r4, r0, lsl #2
   6fd68:	str	lr, [r3, #4]
   6fd6c:	ldr	r1, [r9, r0, lsl #2]
   6fd70:	str	r1, [r4, #4]
   6fd74:	ldr	r1, [sp, #56]	; 0x38
   6fd78:	cmp	r6, r1
   6fd7c:	bge	6fd9c <Mat_VarGetCells+0x40c>
   6fd80:	ldr	r1, [r3, #8]
   6fd84:	add	r1, r1, #1
   6fd88:	str	r1, [r3, #8]
   6fd8c:	ldr	r3, [r4, #8]
   6fd90:	ldr	r1, [ip, r0, lsl #2]
   6fd94:	add	r1, r3, r1
   6fd98:	str	r1, [r4, #8]
   6fd9c:	cmp	r7, r0
   6fda0:	beq	6fdc8 <Mat_VarGetCells+0x438>
   6fda4:	add	r1, sp, #104	; 0x68
   6fda8:	add	r0, r1, r0, lsl #2
   6fdac:	ldr	r4, [r0, #8]
   6fdb0:	mov	r0, r6
   6fdb4:	ldr	r1, [r2, r0, lsl #2]
   6fdb8:	add	r6, r0, #1
   6fdbc:	cmp	r4, r1
   6fdc0:	beq	6fd58 <Mat_VarGetCells+0x3c8>
   6fdc4:	b	6fd9c <Mat_VarGetCells+0x40c>
   6fdc8:	ldr	r0, [sp, #20]
   6fdcc:	add	r8, r8, r0
   6fdd0:	ldr	r0, [sp, #28]
   6fdd4:	cmp	r8, r0
   6fdd8:	bge	6fde4 <Mat_VarGetCells+0x454>
   6fddc:	ldr	r0, [sp, #108]	; 0x6c
   6fde0:	b	6fd18 <Mat_VarGetCells+0x388>
   6fde4:	mov	r0, sl
   6fde8:	sub	sp, fp, #28
   6fdec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006fdf0 <Mat_VarGetCellsLinear>:
   6fdf0:	push	{r4, r5, r6, r7, fp, lr}
   6fdf4:	add	fp, sp, #16
   6fdf8:	cmp	r0, #0
   6fdfc:	beq	6fe7c <Mat_VarGetCellsLinear+0x8c>
   6fe00:	mov	r7, r0
   6fe04:	lsl	r0, r3, #2
   6fe08:	mov	r6, r3
   6fe0c:	mov	r5, r2
   6fe10:	mov	r4, r1
   6fe14:	bl	18d0 <malloc@plt>
   6fe18:	cmp	r6, #1
   6fe1c:	blt	6fe78 <Mat_VarGetCellsLinear+0x88>
   6fe20:	ldr	lr, [r7, #40]	; 0x28
   6fe24:	and	ip, r6, #1
   6fe28:	mov	r3, #0
   6fe2c:	cmp	r6, #1
   6fe30:	beq	6fe6c <Mat_VarGetCellsLinear+0x7c>
   6fe34:	add	r7, lr, r5, lsl #2
   6fe38:	sub	r6, r6, ip
   6fe3c:	add	r2, r0, #4
   6fe40:	mov	r3, #0
   6fe44:	ldr	r1, [lr, r4, lsl #2]
   6fe48:	add	r3, r3, #2
   6fe4c:	cmp	r6, r3
   6fe50:	str	r1, [r2, #-4]
   6fe54:	ldr	r1, [r7, r4, lsl #2]
   6fe58:	str	r1, [r2]
   6fe5c:	add	r1, r4, r5
   6fe60:	add	r2, r2, #8
   6fe64:	add	r4, r1, r5
   6fe68:	bne	6fe44 <Mat_VarGetCellsLinear+0x54>
   6fe6c:	cmp	ip, #0
   6fe70:	ldrne	r1, [lr, r4, lsl #2]
   6fe74:	strne	r1, [r0, r3, lsl #2]
   6fe78:	pop	{r4, r5, r6, r7, fp, pc}
   6fe7c:	mov	r0, #0
   6fe80:	pop	{r4, r5, r6, r7, fp, pc}

0006fe84 <Mat_VarSetCell>:
   6fe84:	push	{r4, r5, r6, r7, fp, lr}
   6fe88:	add	fp, sp, #16
   6fe8c:	sub	sp, sp, #8
   6fe90:	mov	r7, r0
   6fe94:	mov	r0, #1
   6fe98:	mov	r4, #0
   6fe9c:	cmp	r7, #0
   6fea0:	str	r0, [sp, #4]
   6fea4:	beq	6fee8 <Mat_VarSetCell+0x64>
   6fea8:	ldr	r0, [r7, #4]
   6feac:	cmp	r0, #1
   6feb0:	blt	6fee8 <Mat_VarSetCell+0x64>
   6feb4:	mov	r6, r1
   6feb8:	add	r1, sp, #4
   6febc:	mov	r0, r7
   6fec0:	mov	r5, r2
   6fec4:	bl	6be10 <SafeMulDims>
   6fec8:	cmp	r6, #0
   6fecc:	bmi	6fee8 <Mat_VarSetCell+0x64>
   6fed0:	ldr	r0, [sp, #4]
   6fed4:	cmp	r0, r6
   6fed8:	bls	6fee8 <Mat_VarSetCell+0x64>
   6fedc:	ldr	r0, [r7, #40]	; 0x28
   6fee0:	ldr	r4, [r0, r6, lsl #2]
   6fee4:	str	r5, [r0, r6, lsl #2]
   6fee8:	mov	r0, r4
   6feec:	sub	sp, fp, #16
   6fef0:	pop	{r4, r5, r6, r7, fp, pc}

0006fef4 <Mat_VarCreateStruct>:
   6fef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6fef8:	add	fp, sp, #28
   6fefc:	sub	sp, sp, #4
   6ff00:	mov	r5, #0
   6ff04:	cmp	r2, #0
   6ff08:	beq	70034 <Mat_VarCreateStruct+0x140>
   6ff0c:	mov	r9, r3
   6ff10:	mov	r6, r2
   6ff14:	mov	sl, r1
   6ff18:	mov	r7, r0
   6ff1c:	bl	18a0 <Mat_VarCalloc@plt>
   6ff20:	cmp	r0, #0
   6ff24:	beq	70034 <Mat_VarCreateStruct+0x140>
   6ff28:	mov	r4, r0
   6ff2c:	mov	r0, #0
   6ff30:	cmp	r7, #0
   6ff34:	str	r0, [r4, #48]	; 0x30
   6ff38:	beq	6ff48 <Mat_VarCreateStruct+0x54>
   6ff3c:	mov	r0, r7
   6ff40:	bl	1864 <strdup@plt>
   6ff44:	str	r0, [r4, #36]	; 0x24
   6ff48:	ldr	r8, [fp, #8]
   6ff4c:	lsl	r0, sl, #2
   6ff50:	str	sl, [r4, #4]
   6ff54:	bl	18d0 <malloc@plt>
   6ff58:	str	r0, [r4, #32]
   6ff5c:	mov	r7, #1
   6ff60:	ldr	r1, [r4, #4]
   6ff64:	cmp	r1, #1
   6ff68:	blt	6ff8c <Mat_VarCreateStruct+0x98>
   6ff6c:	mov	r1, #0
   6ff70:	ldr	r2, [r6, r1, lsl #2]
   6ff74:	str	r2, [r0, r1, lsl #2]
   6ff78:	mul	r7, r2, r7
   6ff7c:	add	r1, r1, #1
   6ff80:	ldr	r2, [r4, #4]
   6ff84:	cmp	r1, r2
   6ff88:	blt	6ff70 <Mat_VarCreateStruct+0x7c>
   6ff8c:	mov	r1, #22
   6ff90:	cmp	r8, #0
   6ff94:	mov	r0, #4
   6ff98:	mov	r2, #2
   6ff9c:	str	r1, [r4, #8]
   6ffa0:	str	r0, [r4, #12]
   6ffa4:	str	r2, [r4, #16]
   6ffa8:	beq	70030 <Mat_VarCreateStruct+0x13c>
   6ffac:	ldr	r0, [r4, #52]	; 0x34
   6ffb0:	str	r8, [r0, #4]
   6ffb4:	lsl	r0, r8, #2
   6ffb8:	bl	18d0 <malloc@plt>
   6ffbc:	ldr	r1, [r4, #52]	; 0x34
   6ffc0:	cmp	r0, #0
   6ffc4:	str	r0, [r1, #8]
   6ffc8:	beq	70040 <Mat_VarCreateStruct+0x14c>
   6ffcc:	mov	r5, #0
   6ffd0:	ldr	r0, [r9, r5, lsl #2]
   6ffd4:	cmp	r0, #0
   6ffd8:	beq	70040 <Mat_VarCreateStruct+0x14c>
   6ffdc:	bl	1864 <strdup@plt>
   6ffe0:	ldr	r1, [r4, #52]	; 0x34
   6ffe4:	ldr	r1, [r1, #8]
   6ffe8:	str	r0, [r1, r5, lsl #2]
   6ffec:	add	r5, r5, #1
   6fff0:	cmp	r8, r5
   6fff4:	bne	6ffd0 <Mat_VarCreateStruct+0xdc>
   6fff8:	cmp	r7, #0
   6fffc:	beq	70030 <Mat_VarCreateStruct+0x13c>
   70000:	mov	r0, sp
   70004:	mov	r1, r7
   70008:	mov	r2, r8
   7000c:	bl	6be6c <SafeMul>
   70010:	ldr	r2, [r4, #12]
   70014:	ldr	r1, [sp]
   70018:	mov	r0, r4
   7001c:	bl	6be6c <SafeMul>
   70020:	ldr	r1, [r4, #12]
   70024:	ldr	r0, [sp]
   70028:	bl	1798 <calloc@plt>
   7002c:	str	r0, [r4, #40]	; 0x28
   70030:	mov	r5, r4
   70034:	mov	r0, r5
   70038:	sub	sp, fp, #28
   7003c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70040:	mov	r0, r4
   70044:	bl	1918 <Mat_VarFree@plt>
   70048:	mov	r5, #0
   7004c:	mov	r0, r5
   70050:	sub	sp, fp, #28
   70054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00070058 <Mat_VarAddStructField>:
   70058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   7005c:	add	fp, sp, #28
   70060:	sub	sp, sp, #60	; 0x3c
   70064:	mov	r4, r0
   70068:	mov	r0, #1
   7006c:	mvn	r6, #0
   70070:	cmp	r4, #0
   70074:	str	r0, [fp, #-32]	; 0xffffffe0
   70078:	movne	r5, r1
   7007c:	cmpne	r1, #0
   70080:	bne	70090 <Mat_VarAddStructField+0x38>
   70084:	mov	r0, r6
   70088:	sub	sp, fp, #28
   7008c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70090:	sub	r1, fp, #32
   70094:	mov	r0, r4
   70098:	bl	6be10 <SafeMulDims>
   7009c:	ldr	r1, [r4, #52]	; 0x34
   700a0:	ldr	r8, [r1, #4]
   700a4:	ldr	r0, [r1, #8]
   700a8:	add	r7, r8, #1
   700ac:	str	r7, [r1, #4]
   700b0:	lsl	r1, r7, #2
   700b4:	bl	1870 <realloc@plt>
   700b8:	cmp	r0, #0
   700bc:	beq	70084 <Mat_VarAddStructField+0x2c>
   700c0:	ldr	r1, [r4, #52]	; 0x34
   700c4:	str	r0, [r1, #8]
   700c8:	mov	r0, r5
   700cc:	bl	1864 <strdup@plt>
   700d0:	ldr	r1, [r4, #52]	; 0x34
   700d4:	mov	r2, r7
   700d8:	ldr	r1, [r1, #8]
   700dc:	str	r0, [r1, r8, lsl #2]
   700e0:	sub	r0, fp, #36	; 0x24
   700e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   700e8:	bl	6be6c <SafeMul>
   700ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   700f0:	mov	r0, r4
   700f4:	mov	r2, #4
   700f8:	bl	6be6c <SafeMul>
   700fc:	ldr	r0, [r4]
   70100:	bl	18d0 <malloc@plt>
   70104:	cmp	r0, #0
   70108:	beq	70334 <Mat_VarAddStructField+0x2dc>
   7010c:	mov	r5, r0
   70110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   70114:	str	r4, [sp, #4]
   70118:	ldr	r4, [r4, #40]	; 0x28
   7011c:	cmp	r0, #0
   70120:	str	r0, [fp, #-40]	; 0xffffffd8
   70124:	beq	70364 <Mat_VarAddStructField+0x30c>
   70128:	cmp	r8, #0
   7012c:	beq	70348 <Mat_VarAddStructField+0x2f0>
   70130:	sub	r0, r8, #4
   70134:	mov	r1, #1
   70138:	mov	lr, #32
   7013c:	mov	r9, #0
   70140:	mov	sl, r4
   70144:	mov	r7, #0
   70148:	str	r4, [sp, #24]
   7014c:	add	r1, r1, r0, lsr #2
   70150:	lsr	r0, r0, #2
   70154:	str	r0, [sp, #16]
   70158:	and	r0, r8, #1
   7015c:	and	r2, r1, #1
   70160:	str	r0, [sp, #40]	; 0x28
   70164:	bic	r0, r8, #3
   70168:	sub	r1, r1, r2
   7016c:	str	r0, [sp, #12]
   70170:	sub	r0, r0, #1
   70174:	str	r2, [sp, #20]
   70178:	str	r1, [sp, #8]
   7017c:	add	r1, r5, r8, lsl #2
   70180:	str	r0, [sp]
   70184:	str	r1, [sp, #28]
   70188:	add	r1, r5, #4
   7018c:	str	r1, [sp, #32]
   70190:	lsl	r1, r8, #2
   70194:	str	r1, [sp, #44]	; 0x2c
   70198:	mov	r1, #0
   7019c:	mul	r3, r8, r7
   701a0:	cmp	r8, #4
   701a4:	bcc	70228 <Mat_VarAddStructField+0x1d0>
   701a8:	b	701e8 <Mat_VarAddStructField+0x190>
   701ac:	ldr	r0, [sp]
   701b0:	add	r1, r1, r0
   701b4:	mov	r0, #0
   701b8:	add	r7, r7, #1
   701bc:	add	r9, r9, r8
   701c0:	add	r1, r1, #2
   701c4:	str	r0, [r5, ip, lsl #2]
   701c8:	ldr	r0, [sp, #44]	; 0x2c
   701cc:	add	sl, sl, r0
   701d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   701d4:	cmp	r7, r0
   701d8:	bcs	70364 <Mat_VarAddStructField+0x30c>
   701dc:	mul	r3, r8, r7
   701e0:	cmp	r8, #4
   701e4:	bcc	70228 <Mat_VarAddStructField+0x1d0>
   701e8:	add	r0, r8, r3
   701ec:	add	r2, r5, r1, lsl #2
   701f0:	add	r0, r4, r0, lsl #2
   701f4:	cmp	r2, r0
   701f8:	bcs	702a0 <Mat_VarAddStructField+0x248>
   701fc:	mov	ip, r5
   70200:	add	r0, r4, r3, lsl #2
   70204:	mov	r5, r4
   70208:	mov	r4, r3
   7020c:	ldr	r3, [sp, #28]
   70210:	add	r6, r3, r1, lsl #2
   70214:	mov	r3, r4
   70218:	mov	r4, r5
   7021c:	mov	r5, ip
   70220:	cmp	r6, r0
   70224:	bls	702a0 <Mat_VarAddStructField+0x248>
   70228:	mov	r0, #0
   7022c:	ldr	r2, [sp, #40]	; 0x28
   70230:	mov	ip, r1
   70234:	cmp	r2, #0
   70238:	mov	r2, r0
   7023c:	beq	70254 <Mat_VarAddStructField+0x1fc>
   70240:	add	r2, r0, r3
   70244:	add	ip, r1, #1
   70248:	ldr	r2, [r4, r2, lsl #2]
   7024c:	str	r2, [r5, r1, lsl #2]
   70250:	orr	r2, r0, #1
   70254:	orr	r0, r0, #1
   70258:	cmp	r8, r0
   7025c:	beq	701b4 <Mat_VarAddStructField+0x15c>
   70260:	ldr	r0, [sp, #32]
   70264:	sub	r1, r8, r2
   70268:	add	r2, r2, r9
   7026c:	add	r2, r4, r2, lsl #2
   70270:	add	r0, r0, ip, lsl #2
   70274:	ldr	r3, [r2]
   70278:	subs	r1, r1, #2
   7027c:	add	ip, ip, #2
   70280:	str	r3, [r0, #-4]
   70284:	ldr	r3, [r2, #4]
   70288:	add	r2, r2, #8
   7028c:	str	r3, [r0]
   70290:	add	r0, r0, #8
   70294:	bne	70274 <Mat_VarAddStructField+0x21c>
   70298:	sub	r1, ip, #1
   7029c:	b	701b4 <Mat_VarAddStructField+0x15c>
   702a0:	ldr	r0, [sp, #16]
   702a4:	mov	ip, r5
   702a8:	str	r3, [sp, #36]	; 0x24
   702ac:	cmp	r0, #0
   702b0:	beq	702e8 <Mat_VarAddStructField+0x290>
   702b4:	ldr	r5, [sp, #8]
   702b8:	mov	r0, #0
   702bc:	mov	r6, sl
   702c0:	add	r3, r6, #16
   702c4:	vld1.32	{d16-d17}, [r6], lr
   702c8:	add	r4, r2, #16
   702cc:	subs	r5, r5, #2
   702d0:	add	r0, r0, #8
   702d4:	vst1.32	{d16-d17}, [r2], lr
   702d8:	vld1.32	{d16-d17}, [r3]
   702dc:	vst1.32	{d16-d17}, [r4]
   702e0:	bne	702c0 <Mat_VarAddStructField+0x268>
   702e4:	b	702ec <Mat_VarAddStructField+0x294>
   702e8:	mov	r0, #0
   702ec:	ldr	r2, [sp, #20]
   702f0:	ldr	r4, [sp, #24]
   702f4:	ldr	r3, [sp, #36]	; 0x24
   702f8:	mov	r5, ip
   702fc:	cmp	r2, #0
   70300:	beq	7031c <Mat_VarAddStructField+0x2c4>
   70304:	add	r2, r0, r3
   70308:	add	r0, r1, r0
   7030c:	add	r2, r4, r2, lsl #2
   70310:	add	r0, r5, r0, lsl #2
   70314:	vld1.32	{d16-d17}, [r2]
   70318:	vst1.32	{d16-d17}, [r0]
   7031c:	ldr	r0, [sp, #12]
   70320:	add	ip, r1, r0
   70324:	cmp	r8, r0
   70328:	beq	701ac <Mat_VarAddStructField+0x154>
   7032c:	mov	r1, ip
   70330:	b	7022c <Mat_VarAddStructField+0x1d4>
   70334:	mov	r0, #0
   70338:	str	r0, [r4]
   7033c:	mov	r0, r6
   70340:	sub	sp, fp, #28
   70344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70348:	ldr	r0, [fp, #-40]	; 0xffffffd8
   7034c:	mov	r1, #0
   70350:	cmp	r0, #1
   70354:	movls	r0, #1
   70358:	lsl	r2, r0, #2
   7035c:	mov	r0, r5
   70360:	bl	1990 <memset@plt>
   70364:	mov	r0, r4
   70368:	bl	1804 <free@plt>
   7036c:	ldr	r0, [sp, #4]
   70370:	mov	r6, #0
   70374:	str	r5, [r0, #40]	; 0x28
   70378:	mov	r0, r6
   7037c:	sub	sp, fp, #28
   70380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00070384 <Mat_VarGetNumberOfFields>:
   70384:	mov	r1, r0
   70388:	mov	r0, #0
   7038c:	cmp	r1, #0
   70390:	bxeq	lr
   70394:	ldr	r2, [r1, #16]
   70398:	cmp	r2, #2
   7039c:	bne	703ac <Mat_VarGetNumberOfFields+0x28>
   703a0:	ldr	r1, [r1, #52]	; 0x34
   703a4:	cmp	r1, #0
   703a8:	ldrne	r0, [r1, #4]
   703ac:	bx	lr

000703b0 <Mat_VarGetStructFieldnames>:
   703b0:	mov	r1, r0
   703b4:	mov	r0, #0
   703b8:	cmp	r1, #0
   703bc:	bxeq	lr
   703c0:	ldr	r2, [r1, #16]
   703c4:	cmp	r2, #2
   703c8:	bne	703d8 <Mat_VarGetStructFieldnames+0x28>
   703cc:	ldr	r1, [r1, #52]	; 0x34
   703d0:	cmp	r1, #0
   703d4:	ldrne	r0, [r1, #8]
   703d8:	bx	lr

000703dc <Mat_VarGetStructFieldByIndex>:
   703dc:	push	{r4, r5, r6, r7, fp, lr}
   703e0:	add	fp, sp, #16
   703e4:	sub	sp, sp, #8
   703e8:	mov	r7, r0
   703ec:	mov	r0, #1
   703f0:	mov	r4, #0
   703f4:	cmp	r7, #0
   703f8:	str	r0, [sp, #4]
   703fc:	beq	70478 <Mat_VarGetStructFieldByIndex+0x9c>
   70400:	ldr	r0, [r7, #16]
   70404:	cmp	r0, #2
   70408:	bne	70478 <Mat_VarGetStructFieldByIndex+0x9c>
   7040c:	ldr	r0, [r7, #12]
   70410:	cmp	r0, #0
   70414:	beq	70478 <Mat_VarGetStructFieldByIndex+0x9c>
   70418:	mov	r5, r1
   7041c:	add	r1, sp, #4
   70420:	mov	r0, r7
   70424:	mov	r6, r2
   70428:	bl	6be10 <SafeMulDims>
   7042c:	ldr	r0, [sp, #4]
   70430:	sub	r0, r0, #1
   70434:	cmp	r0, r6
   70438:	bcs	70454 <Mat_VarGetStructFieldByIndex+0x78>
   7043c:	ldr	r0, [pc, #92]	; 704a0 <Mat_VarGetStructFieldByIndex+0xc4>
   70440:	add	r0, pc, r0
   70444:	bl	19b4 <Mat_Critical@plt>
   70448:	mov	r0, r4
   7044c:	sub	sp, fp, #16
   70450:	pop	{r4, r5, r6, r7, fp, pc}
   70454:	ldr	r0, [r7, #52]	; 0x34
   70458:	ldr	r0, [r0, #4]
   7045c:	cmp	r0, #0
   70460:	beq	70478 <Mat_VarGetStructFieldByIndex+0x9c>
   70464:	cmp	r0, r5
   70468:	bcs	70484 <Mat_VarGetStructFieldByIndex+0xa8>
   7046c:	ldr	r0, [pc, #48]	; 704a4 <Mat_VarGetStructFieldByIndex+0xc8>
   70470:	add	r0, pc, r0
   70474:	bl	19b4 <Mat_Critical@plt>
   70478:	mov	r0, r4
   7047c:	sub	sp, fp, #16
   70480:	pop	{r4, r5, r6, r7, fp, pc}
   70484:	ldr	r1, [r7, #40]	; 0x28
   70488:	mul	r0, r0, r6
   7048c:	add	r0, r1, r0, lsl #2
   70490:	ldr	r4, [r0, r5, lsl #2]
   70494:	mov	r0, r4
   70498:	sub	sp, fp, #16
   7049c:	pop	{r4, r5, r6, r7, fp, pc}
   704a0:	.word	0x00002554
   704a4:	.word	0x00002559

000704a8 <Mat_VarGetStructFieldByName>:
   704a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   704ac:	add	fp, sp, #28
   704b0:	sub	sp, sp, #4
   704b4:	mov	r6, r0
   704b8:	mov	r0, #1
   704bc:	mov	sl, #0
   704c0:	cmp	r6, #0
   704c4:	str	r0, [sp]
   704c8:	beq	7055c <Mat_VarGetStructFieldByName+0xb4>
   704cc:	ldr	r0, [r6, #16]
   704d0:	cmp	r0, #2
   704d4:	bne	7055c <Mat_VarGetStructFieldByName+0xb4>
   704d8:	ldr	r0, [r6, #12]
   704dc:	cmp	r0, #0
   704e0:	beq	7055c <Mat_VarGetStructFieldByName+0xb4>
   704e4:	mov	r7, r1
   704e8:	mov	r1, sp
   704ec:	mov	r0, r6
   704f0:	mov	r9, r2
   704f4:	bl	6be10 <SafeMulDims>
   704f8:	ldr	r0, [r6, #52]	; 0x34
   704fc:	mvn	r4, #0
   70500:	ldr	r5, [r0, #4]
   70504:	cmp	r5, #1
   70508:	blt	70538 <Mat_VarGetStructFieldByName+0x90>
   7050c:	ldr	r8, [r0, #8]
   70510:	mov	r4, #0
   70514:	ldr	r0, [r8, r4, lsl #2]
   70518:	mov	r1, r7
   7051c:	bl	17b0 <strcmp@plt>
   70520:	cmp	r0, #0
   70524:	beq	70538 <Mat_VarGetStructFieldByName+0x90>
   70528:	add	r4, r4, #1
   7052c:	cmp	r5, r4
   70530:	bne	70514 <Mat_VarGetStructFieldByName+0x6c>
   70534:	mvn	r4, #0
   70538:	ldr	r0, [sp]
   7053c:	cmp	r0, r9
   70540:	bls	70568 <Mat_VarGetStructFieldByName+0xc0>
   70544:	cmp	r4, #0
   70548:	bmi	7055c <Mat_VarGetStructFieldByName+0xb4>
   7054c:	ldr	r1, [r6, #40]	; 0x28
   70550:	mul	r0, r5, r9
   70554:	add	r0, r1, r0, lsl #2
   70558:	ldr	sl, [r0, r4, lsl #2]
   7055c:	mov	r0, sl
   70560:	sub	sp, fp, #28
   70564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70568:	ldr	r0, [pc, #16]	; 70580 <Mat_VarGetStructFieldByName+0xd8>
   7056c:	add	r0, pc, r0
   70570:	bl	19b4 <Mat_Critical@plt>
   70574:	mov	r0, sl
   70578:	sub	sp, fp, #28
   7057c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70580:	.word	0x00002428

00070584 <Mat_VarGetStructField>:
   70584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   70588:	add	fp, sp, #28
   7058c:	sub	sp, sp, #12
   70590:	mov	r6, r0
   70594:	mov	r0, #1
   70598:	mov	r7, r1
   7059c:	mov	r1, sp
   705a0:	mov	r5, r3
   705a4:	mov	r4, r2
   705a8:	str	r0, [sp]
   705ac:	mov	r0, r6
   705b0:	bl	6be10 <SafeMulDims>
   705b4:	mov	r8, #0
   705b8:	cmp	r5, #0
   705bc:	bmi	705d0 <Mat_VarGetStructField+0x4c>
   705c0:	ldr	r0, [sp]
   705c4:	sub	r0, r0, #1
   705c8:	cmp	r0, r5
   705cc:	bcs	705dc <Mat_VarGetStructField+0x58>
   705d0:	mov	r0, r8
   705d4:	sub	sp, fp, #28
   705d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   705dc:	ldr	r0, [r6, #52]	; 0x34
   705e0:	cmp	r4, #2
   705e4:	ldr	r0, [r0, #4]
   705e8:	bne	70674 <Mat_VarGetStructField+0xf0>
   705ec:	cmp	r0, #1
   705f0:	blt	70674 <Mat_VarGetStructField+0xf0>
   705f4:	ldr	r4, [r7]
   705f8:	cmp	r4, #0
   705fc:	beq	705d0 <Mat_VarGetStructField+0x4c>
   70600:	mov	r0, #1
   70604:	mov	r8, #0
   70608:	str	r0, [sp, #4]
   7060c:	ldr	r0, [r6, #16]
   70610:	cmp	r0, #2
   70614:	bne	705d0 <Mat_VarGetStructField+0x4c>
   70618:	ldr	r0, [r6, #12]
   7061c:	cmp	r0, #0
   70620:	beq	705d0 <Mat_VarGetStructField+0x4c>
   70624:	add	r1, sp, #4
   70628:	mov	r0, r6
   7062c:	bl	6be10 <SafeMulDims>
   70630:	ldr	r0, [sp, #4]
   70634:	sub	r0, r0, #1
   70638:	cmp	r0, r5
   7063c:	bcc	70724 <Mat_VarGetStructField+0x1a0>
   70640:	ldr	r0, [r6, #52]	; 0x34
   70644:	ldr	r0, [r0, #4]
   70648:	cmp	r0, #0
   7064c:	beq	705d0 <Mat_VarGetStructField+0x4c>
   70650:	sub	r1, r4, #1
   70654:	cmp	r0, r1
   70658:	bcs	7073c <Mat_VarGetStructField+0x1b8>
   7065c:	ldr	r0, [pc, #248]	; 7075c <Mat_VarGetStructField+0x1d8>
   70660:	add	r0, pc, r0
   70664:	bl	19b4 <Mat_Critical@plt>
   70668:	mov	r0, r8
   7066c:	sub	sp, fp, #28
   70670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70674:	cmp	r4, #1
   70678:	bne	705d0 <Mat_VarGetStructField+0x4c>
   7067c:	cmp	r0, #1
   70680:	blt	705d0 <Mat_VarGetStructField+0x4c>
   70684:	mov	r0, #1
   70688:	mov	r8, #0
   7068c:	str	r0, [sp, #8]
   70690:	ldr	r0, [r6, #16]
   70694:	cmp	r0, #2
   70698:	bne	705d0 <Mat_VarGetStructField+0x4c>
   7069c:	ldr	r0, [r6, #12]
   706a0:	cmp	r0, #0
   706a4:	beq	705d0 <Mat_VarGetStructField+0x4c>
   706a8:	add	r1, sp, #8
   706ac:	mov	r0, r6
   706b0:	bl	6be10 <SafeMulDims>
   706b4:	ldr	r0, [r6, #52]	; 0x34
   706b8:	mvn	r4, #0
   706bc:	ldr	sl, [r0, #4]
   706c0:	cmp	sl, #1
   706c4:	blt	706f4 <Mat_VarGetStructField+0x170>
   706c8:	ldr	r9, [r0, #8]
   706cc:	mov	r4, #0
   706d0:	ldr	r0, [r9, r4, lsl #2]
   706d4:	mov	r1, r7
   706d8:	bl	17b0 <strcmp@plt>
   706dc:	cmp	r0, #0
   706e0:	beq	706f4 <Mat_VarGetStructField+0x170>
   706e4:	add	r4, r4, #1
   706e8:	cmp	sl, r4
   706ec:	bne	706d0 <Mat_VarGetStructField+0x14c>
   706f0:	mvn	r4, #0
   706f4:	ldr	r0, [sp, #8]
   706f8:	cmp	r0, r5
   706fc:	bls	70724 <Mat_VarGetStructField+0x1a0>
   70700:	cmp	r4, #0
   70704:	bmi	705d0 <Mat_VarGetStructField+0x4c>
   70708:	ldr	r1, [r6, #40]	; 0x28
   7070c:	mul	r0, sl, r5
   70710:	add	r0, r1, r0, lsl #2
   70714:	ldr	r8, [r0, r4, lsl #2]
   70718:	mov	r0, r8
   7071c:	sub	sp, fp, #28
   70720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70724:	ldr	r0, [pc, #44]	; 70758 <Mat_VarGetStructField+0x1d4>
   70728:	add	r0, pc, r0
   7072c:	bl	19b4 <Mat_Critical@plt>
   70730:	mov	r0, r8
   70734:	sub	sp, fp, #28
   70738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   7073c:	ldr	r2, [r6, #40]	; 0x28
   70740:	mul	r0, r0, r5
   70744:	add	r0, r2, r0, lsl #2
   70748:	ldr	r8, [r0, r1, lsl #2]
   7074c:	mov	r0, r8
   70750:	sub	sp, fp, #28
   70754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70758:	.word	0x0000226c
   7075c:	.word	0x00002369

00070760 <Mat_VarGetStructs>:
   70760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   70764:	add	fp, sp, #28
   70768:	sub	sp, sp, #212	; 0xd4
   7076c:	vmov.i32	q8, #0	; 0x00000000
   70770:	sub	r4, fp, #72	; 0x48
   70774:	mov	r7, r0
   70778:	mov	r9, r1
   7077c:	mov	r0, #36	; 0x24
   70780:	str	r2, [sp, #80]	; 0x50
   70784:	mov	r2, #0
   70788:	mov	r8, r3
   7078c:	sub	r3, fp, #112	; 0x70
   70790:	mov	r1, r4
   70794:	cmp	r7, #0
   70798:	str	r2, [fp, #-40]	; 0xffffffd8
   7079c:	str	r2, [fp, #-80]	; 0xffffffb0
   707a0:	str	r2, [sp, #120]	; 0x78
   707a4:	cmpne	r9, #0
   707a8:	vst1.64	{d16-d17}, [r1], r0
   707ac:	str	r2, [r1]
   707b0:	add	r1, r4, #16
   707b4:	vst1.64	{d16-d17}, [r1]
   707b8:	add	r1, r3, #16
   707bc:	vst1.64	{d16-d17}, [r1]
   707c0:	mov	r1, r3
   707c4:	add	r3, sp, #88	; 0x58
   707c8:	vst1.64	{d16-d17}, [r1], r0
   707cc:	str	r2, [r1]
   707d0:	add	r1, r3, #16
   707d4:	vst1.64	{d16-d17}, [r1]
   707d8:	mov	r1, r3
   707dc:	vst1.64	{d16-d17}, [r1], r0
   707e0:	str	r2, [r1]
   707e4:	beq	707f8 <Mat_VarGetStructs+0x98>
   707e8:	ldr	r0, [sp, #80]	; 0x50
   707ec:	cmp	r0, #0
   707f0:	cmpne	r8, #0
   707f4:	bne	70804 <Mat_VarGetStructs+0xa4>
   707f8:	mov	r0, r2
   707fc:	sub	sp, fp, #28
   70800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70804:	ldr	r0, [r7, #4]
   70808:	cmp	r0, #9
   7080c:	bgt	707f8 <Mat_VarGetStructs+0x98>
   70810:	ldr	r0, [r7, #16]
   70814:	cmp	r0, #2
   70818:	bne	707f8 <Mat_VarGetStructs+0x98>
   7081c:	ldr	r5, [fp, #8]
   70820:	mov	r0, r7
   70824:	mov	r1, #0
   70828:	bl	1a44 <Mat_VarDuplicate@plt>
   7082c:	cmp	r5, #0
   70830:	mov	r3, r0
   70834:	moveq	r0, #1
   70838:	str	r3, [sp, #4]
   7083c:	streq	r0, [r3, #44]	; 0x2c
   70840:	ldr	ip, [r7, #32]
   70844:	ldr	r1, [r7, #52]	; 0x34
   70848:	ldr	r2, [ip]
   7084c:	ldr	r0, [r1, #4]
   70850:	str	r2, [sp, #88]	; 0x58
   70854:	str	r0, [sp, #76]	; 0x4c
   70858:	ldr	r1, [r3, #32]
   7085c:	ldr	sl, [r8]
   70860:	ldr	r5, [r9]
   70864:	str	sl, [r1]
   70868:	ldr	r3, [r9]
   7086c:	str	r3, [fp, #-72]	; 0xffffffb8
   70870:	ldr	r3, [r7, #4]
   70874:	cmp	r3, #2
   70878:	blt	708c0 <Mat_VarGetStructs+0x160>
   7087c:	mov	r3, #1
   70880:	mov	lr, r4
   70884:	ldr	r6, [r9, r3, lsl #2]
   70888:	add	r0, sp, #88	; 0x58
   7088c:	str	r6, [lr, r3, lsl #2]
   70890:	mla	r5, r2, r6, r5
   70894:	ldr	r4, [ip, r3, lsl #2]
   70898:	mul	r4, r4, r2
   7089c:	str	r4, [r0, r3, lsl #2]
   708a0:	mov	r2, r4
   708a4:	ldr	r0, [r8, r3, lsl #2]
   708a8:	str	r0, [r1, r3, lsl #2]
   708ac:	mul	sl, r0, sl
   708b0:	add	r3, r3, #1
   708b4:	ldr	r0, [r7, #4]
   708b8:	cmp	r3, r0
   708bc:	blt	70884 <Mat_VarGetStructs+0x124>
   708c0:	ldr	r0, [sp, #76]	; 0x4c
   708c4:	ldr	r1, [sp, #4]
   708c8:	mul	r0, r0, sl
   708cc:	lsl	r0, r0, #2
   708d0:	str	r0, [r1]
   708d4:	bl	18d0 <malloc@plt>
   708d8:	ldr	r2, [sp, #4]
   708dc:	cmp	r0, #0
   708e0:	str	r0, [r2, #40]	; 0x28
   708e4:	beq	70cb0 <Mat_VarGetStructs+0x550>
   708e8:	cmp	sl, #0
   708ec:	beq	707f8 <Mat_VarGetStructs+0x98>
   708f0:	ldr	r6, [sp, #76]	; 0x4c
   708f4:	str	r0, [sp, #56]	; 0x38
   708f8:	mov	r1, #1
   708fc:	str	sl, [sp, #12]
   70900:	str	r8, [sp, #60]	; 0x3c
   70904:	str	r9, [sp, #16]
   70908:	sub	r0, r6, #4
   7090c:	lsl	ip, r6, #2
   70910:	add	r1, r1, r0, lsr #2
   70914:	lsr	r0, r0, #2
   70918:	str	ip, [sp, #72]	; 0x48
   7091c:	str	r0, [sp, #20]
   70920:	mov	r0, #0
   70924:	and	r2, r1, #1
   70928:	str	r0, [sp, #52]	; 0x34
   7092c:	sub	r1, r1, r2
   70930:	str	r2, [sp, #28]
   70934:	str	r1, [sp, #8]
   70938:	ldr	r1, [sp, #80]	; 0x50
   7093c:	add	r1, r1, #8
   70940:	str	r1, [sp, #40]	; 0x28
   70944:	add	r1, r9, #4
   70948:	str	r1, [sp, #64]	; 0x40
   7094c:	and	r1, r6, #1
   70950:	str	r1, [sp, #44]	; 0x2c
   70954:	bic	r1, r6, #3
   70958:	str	r1, [sp, #24]
   7095c:	mov	r1, r8
   70960:	ldr	lr, [r1], #4
   70964:	str	r1, [sp, #84]	; 0x54
   70968:	cmp	lr, #1
   7096c:	bge	7099c <Mat_VarGetStructs+0x23c>
   70970:	b	70bd8 <Mat_VarGetStructs+0x478>
   70974:	ldr	r6, [sp, #76]	; 0x4c
   70978:	ldr	ip, [sp, #72]	; 0x48
   7097c:	ldr	r1, [sp, #52]	; 0x34
   70980:	ldr	r0, [sp, #12]
   70984:	add	r1, lr, r1
   70988:	cmp	r1, r0
   7098c:	str	r1, [sp, #52]	; 0x34
   70990:	bcs	70cc8 <Mat_VarGetStructs+0x568>
   70994:	cmp	lr, #1
   70998:	blt	70bd8 <Mat_VarGetStructs+0x478>
   7099c:	cmp	r6, #0
   709a0:	beq	70bc8 <Mat_VarGetStructs+0x468>
   709a4:	ldr	r1, [sp, #52]	; 0x34
   709a8:	ldr	r0, [sp, #56]	; 0x38
   709ac:	mul	r9, r5, r6
   709b0:	mov	r5, #0
   709b4:	mla	sl, ip, r1, r0
   709b8:	mul	r0, ip, r1
   709bc:	mul	r8, r6, r1
   709c0:	str	r0, [sp, #36]	; 0x24
   709c4:	mov	r0, #4
   709c8:	add	r0, r0, r1, lsl #2
   709cc:	mul	r0, r6, r0
   709d0:	str	r0, [sp, #32]
   709d4:	ldr	r0, [fp, #8]
   709d8:	cmp	r0, #0
   709dc:	bne	70a18 <Mat_VarGetStructs+0x2b8>
   709e0:	b	70a50 <Mat_VarGetStructs+0x2f0>
   709e4:	ldr	lr, [sp, #68]	; 0x44
   709e8:	ldr	r0, [sp, #80]	; 0x50
   709ec:	add	r5, r5, #1
   709f0:	add	r8, r8, r6
   709f4:	add	sl, sl, ip
   709f8:	cmp	r5, lr
   709fc:	ldr	r0, [r0]
   70a00:	sub	r0, r0, #1
   70a04:	mla	r9, r0, r6, r9
   70a08:	bge	70bd8 <Mat_VarGetStructs+0x478>
   70a0c:	ldr	r0, [fp, #8]
   70a10:	cmp	r0, #0
   70a14:	beq	70a50 <Mat_VarGetStructs+0x2f0>
   70a18:	mov	r4, sl
   70a1c:	ldr	r0, [r7, #40]	; 0x28
   70a20:	mov	r1, #1
   70a24:	ldr	r0, [r0, r9, lsl #2]
   70a28:	bl	1a44 <Mat_VarDuplicate@plt>
   70a2c:	str	r0, [r4], #4
   70a30:	subs	r6, r6, #1
   70a34:	add	r9, r9, #1
   70a38:	bne	70a1c <Mat_VarGetStructs+0x2bc>
   70a3c:	ldr	r0, [sp, #60]	; 0x3c
   70a40:	ldr	r6, [sp, #76]	; 0x4c
   70a44:	ldr	ip, [sp, #72]	; 0x48
   70a48:	ldr	lr, [r0]
   70a4c:	b	709e8 <Mat_VarGetStructs+0x288>
   70a50:	ldr	r0, [sp, #52]	; 0x34
   70a54:	str	lr, [sp, #68]	; 0x44
   70a58:	ldr	lr, [r7, #40]	; 0x28
   70a5c:	mov	r3, #0
   70a60:	cmp	r6, #4
   70a64:	add	r0, r5, r0
   70a68:	mul	r2, r0, r6
   70a6c:	bcc	70b44 <Mat_VarGetStructs+0x3e4>
   70a70:	ldr	r0, [sp, #36]	; 0x24
   70a74:	ldr	r1, [sp, #56]	; 0x38
   70a78:	str	r2, [sp, #48]	; 0x30
   70a7c:	add	r2, lr, r6, lsl #2
   70a80:	add	r4, lr, r9, lsl #2
   70a84:	add	r2, r2, r9, lsl #2
   70a88:	mla	r0, ip, r5, r0
   70a8c:	add	r0, r1, r0
   70a90:	cmp	r0, r2
   70a94:	bcs	70ac0 <Mat_VarGetStructs+0x360>
   70a98:	ldr	r0, [sp, #32]
   70a9c:	mla	r0, ip, r5, r0
   70aa0:	add	r0, r1, r0
   70aa4:	cmp	r0, r4
   70aa8:	bls	70ac0 <Mat_VarGetStructs+0x360>
   70aac:	ldr	r2, [sp, #48]	; 0x30
   70ab0:	ldr	r0, [sp, #44]	; 0x2c
   70ab4:	cmp	r0, #0
   70ab8:	beq	70b50 <Mat_VarGetStructs+0x3f0>
   70abc:	b	70b64 <Mat_VarGetStructs+0x404>
   70ac0:	ldr	r0, [sp, #20]
   70ac4:	mov	r3, #0
   70ac8:	cmp	r0, #0
   70acc:	beq	70b00 <Mat_VarGetStructs+0x3a0>
   70ad0:	ldr	r2, [sp, #8]
   70ad4:	mov	r6, sl
   70ad8:	mov	r1, #32
   70adc:	add	r0, r4, #16
   70ae0:	vld1.32	{d16-d17}, [r4], r1
   70ae4:	add	ip, r6, #16
   70ae8:	subs	r2, r2, #2
   70aec:	add	r3, r3, #8
   70af0:	vst1.32	{d16-d17}, [r6], r1
   70af4:	vld1.32	{d16-d17}, [r0]
   70af8:	vst1.32	{d16-d17}, [ip]
   70afc:	bne	70adc <Mat_VarGetStructs+0x37c>
   70b00:	ldr	r0, [sp, #28]
   70b04:	ldr	r2, [sp, #48]	; 0x30
   70b08:	cmp	r0, #0
   70b0c:	beq	70b2c <Mat_VarGetStructs+0x3cc>
   70b10:	add	r0, r9, r3
   70b14:	ldr	r1, [sp, #56]	; 0x38
   70b18:	add	r0, lr, r0, lsl #2
   70b1c:	vld1.32	{d16-d17}, [r0]
   70b20:	add	r0, r3, r2
   70b24:	add	r0, r1, r0, lsl #2
   70b28:	vst1.32	{d16-d17}, [r0]
   70b2c:	ldr	r3, [sp, #24]
   70b30:	ldr	r6, [sp, #76]	; 0x4c
   70b34:	ldr	ip, [sp, #72]	; 0x48
   70b38:	add	r9, r9, r3
   70b3c:	cmp	r6, r3
   70b40:	beq	709e4 <Mat_VarGetStructs+0x284>
   70b44:	ldr	r0, [sp, #44]	; 0x2c
   70b48:	cmp	r0, #0
   70b4c:	bne	70b64 <Mat_VarGetStructs+0x404>
   70b50:	mov	r4, r3
   70b54:	orr	r0, r3, #1
   70b58:	cmp	r6, r0
   70b5c:	beq	709e4 <Mat_VarGetStructs+0x284>
   70b60:	b	70b88 <Mat_VarGetStructs+0x428>
   70b64:	ldr	r0, [lr, r9, lsl #2]
   70b68:	ldr	r1, [sp, #56]	; 0x38
   70b6c:	add	r2, r3, r2
   70b70:	orr	r4, r3, #1
   70b74:	add	r9, r9, #1
   70b78:	str	r0, [r1, r2, lsl #2]
   70b7c:	orr	r0, r3, #1
   70b80:	cmp	r6, r0
   70b84:	beq	709e4 <Mat_VarGetStructs+0x284>
   70b88:	ldr	r1, [sp, #56]	; 0x38
   70b8c:	add	r0, r4, r8
   70b90:	sub	r2, r6, r4
   70b94:	add	r3, r1, r0, lsl #2
   70b98:	add	r0, lr, r9, lsl #2
   70b9c:	add	r1, r0, #4
   70ba0:	ldr	r0, [r1, #-4]
   70ba4:	subs	r2, r2, #2
   70ba8:	add	r9, r9, #2
   70bac:	str	r0, [r3]
   70bb0:	ldr	r0, [r1]
   70bb4:	add	r1, r1, #8
   70bb8:	str	r0, [r3, #4]
   70bbc:	add	r3, r3, #8
   70bc0:	bne	70ba0 <Mat_VarGetStructs+0x440>
   70bc4:	b	709e4 <Mat_VarGetStructs+0x284>
   70bc8:	mov	r0, #0
   70bcc:	add	r0, r0, #1
   70bd0:	cmp	r0, lr
   70bd4:	blt	70bcc <Mat_VarGetStructs+0x46c>
   70bd8:	ldr	r0, [sp, #16]
   70bdc:	ldr	r5, [r0]
   70be0:	ldr	r0, [fp, #-108]	; 0xffffff94
   70be4:	add	r4, r0, #1
   70be8:	ldr	r0, [sp, #80]	; 0x50
   70bec:	str	r5, [fp, #-72]	; 0xffffffb8
   70bf0:	str	r4, [fp, #-108]	; 0xffffff94
   70bf4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   70bf8:	ldr	r0, [r0, #4]
   70bfc:	add	r0, r1, r0
   70c00:	str	r0, [fp, #-68]	; 0xffffffbc
   70c04:	ldr	r8, [r7, #4]
   70c08:	cmp	r8, #2
   70c0c:	blt	7097c <Mat_VarGetStructs+0x21c>
   70c10:	sub	ip, r8, #1
   70c14:	mov	r3, #0
   70c18:	sub	r9, fp, #72	; 0x48
   70c1c:	sub	sl, fp, #112	; 0x70
   70c20:	add	r1, sp, #88	; 0x58
   70c24:	ldr	r0, [sp, #84]	; 0x54
   70c28:	add	r6, r3, #1
   70c2c:	ldr	r0, [r0, r3, lsl #2]
   70c30:	cmp	r4, r0
   70c34:	bne	70c84 <Mat_VarGetStructs+0x524>
   70c38:	add	r2, sl, r3, lsl #2
   70c3c:	mov	r0, #0
   70c40:	cmp	r6, ip
   70c44:	str	r0, [r2, #4]
   70c48:	ldr	r0, [sp, #64]	; 0x40
   70c4c:	ldr	r4, [r0, r3, lsl #2]
   70c50:	add	r0, r9, r3, lsl #2
   70c54:	str	r4, [r0, #4]
   70c58:	bge	70c8c <Mat_VarGetStructs+0x52c>
   70c5c:	ldr	r1, [r2, #8]
   70c60:	add	r1, r1, #1
   70c64:	str	r1, [r2, #8]
   70c68:	ldr	r1, [sp, #40]	; 0x28
   70c6c:	ldr	r2, [r0, #8]
   70c70:	ldr	r1, [r1, r3, lsl #2]
   70c74:	add	r1, r2, r1
   70c78:	str	r1, [r0, #8]
   70c7c:	add	r1, sp, #88	; 0x58
   70c80:	b	70c8c <Mat_VarGetStructs+0x52c>
   70c84:	add	r0, r9, r3, lsl #2
   70c88:	ldr	r4, [r0, #4]
   70c8c:	ldr	r0, [r1, r3, lsl #2]
   70c90:	mla	r5, r0, r4, r5
   70c94:	add	r0, r3, #2
   70c98:	cmp	r0, r8
   70c9c:	bge	70974 <Mat_VarGetStructs+0x214>
   70ca0:	add	r0, sl, r3, lsl #2
   70ca4:	mov	r3, r6
   70ca8:	ldr	r4, [r0, #8]
   70cac:	b	70c24 <Mat_VarGetStructs+0x4c4>
   70cb0:	mov	r0, r2
   70cb4:	bl	1918 <Mat_VarFree@plt>
   70cb8:	mov	r2, #0
   70cbc:	mov	r0, r2
   70cc0:	sub	sp, fp, #28
   70cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70cc8:	ldr	r2, [sp, #4]
   70ccc:	mov	r0, r2
   70cd0:	sub	sp, fp, #28
   70cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00070cd8 <Mat_VarGetStructsLinear>:
   70cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   70cdc:	add	fp, sp, #28
   70ce0:	sub	sp, sp, #52	; 0x34
   70ce4:	mov	r4, #0
   70ce8:	cmp	r0, #0
   70cec:	beq	71024 <Mat_VarGetStructsLinear+0x34c>
   70cf0:	mov	r7, r0
   70cf4:	ldr	r0, [r0, #4]
   70cf8:	cmp	r0, #10
   70cfc:	bgt	71024 <Mat_VarGetStructsLinear+0x34c>
   70d00:	ldr	r8, [fp, #8]
   70d04:	mov	r5, r1
   70d08:	mov	r0, r7
   70d0c:	mov	r1, #0
   70d10:	mov	r6, r3
   70d14:	mov	r9, r2
   70d18:	bl	1a44 <Mat_VarDuplicate@plt>
   70d1c:	cmp	r8, #0
   70d20:	mov	r4, r0
   70d24:	moveq	r0, #1
   70d28:	streq	r0, [r4, #44]	; 0x2c
   70d2c:	ldr	r0, [r7, #52]	; 0x34
   70d30:	ldr	r8, [r0, #4]
   70d34:	mul	r0, r6, r8
   70d38:	lsl	r0, r0, #2
   70d3c:	str	r0, [r4]
   70d40:	bl	18d0 <malloc@plt>
   70d44:	cmp	r0, #0
   70d48:	str	r0, [r4, #40]	; 0x28
   70d4c:	beq	70e00 <Mat_VarGetStructsLinear+0x128>
   70d50:	mov	sl, r0
   70d54:	ldr	r0, [r4, #32]
   70d58:	cmp	r6, #1
   70d5c:	mov	r1, #1
   70d60:	str	r6, [r0]
   70d64:	str	r1, [r0, #4]
   70d68:	blt	71024 <Mat_VarGetStructsLinear+0x34c>
   70d6c:	sub	r0, r9, #1
   70d70:	mul	r5, r8, r5
   70d74:	str	r6, [fp, #-32]	; 0xffffffe0
   70d78:	mul	r0, r8, r0
   70d7c:	str	r0, [fp, #-36]	; 0xffffffdc
   70d80:	ldr	r0, [fp, #8]
   70d84:	cmp	r0, #0
   70d88:	beq	70e18 <Mat_VarGetStructsLinear+0x140>
   70d8c:	lsl	r0, r8, #2
   70d90:	mov	r9, #0
   70d94:	str	r4, [sp, #4]
   70d98:	str	r0, [sp, #40]	; 0x28
   70d9c:	cmp	r8, #0
   70da0:	mov	r6, sl
   70da4:	mov	r4, r8
   70da8:	bgt	70ddc <Mat_VarGetStructsLinear+0x104>
   70dac:	ldr	r0, [sp, #40]	; 0x28
   70db0:	add	r9, r9, #1
   70db4:	add	sl, sl, r0
   70db8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   70dbc:	add	r5, r5, r0
   70dc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   70dc4:	cmp	r9, r0
   70dc8:	beq	71020 <Mat_VarGetStructsLinear+0x348>
   70dcc:	cmp	r8, #0
   70dd0:	mov	r6, sl
   70dd4:	mov	r4, r8
   70dd8:	ble	70dac <Mat_VarGetStructsLinear+0xd4>
   70ddc:	ldr	r0, [r7, #40]	; 0x28
   70de0:	mov	r1, #1
   70de4:	ldr	r0, [r0, r5, lsl #2]
   70de8:	bl	1a44 <Mat_VarDuplicate@plt>
   70dec:	str	r0, [r6], #4
   70df0:	subs	r4, r4, #1
   70df4:	add	r5, r5, #1
   70df8:	bne	70ddc <Mat_VarGetStructsLinear+0x104>
   70dfc:	b	70dac <Mat_VarGetStructsLinear+0xd4>
   70e00:	mov	r0, r4
   70e04:	bl	1918 <Mat_VarFree@plt>
   70e08:	mov	r4, #0
   70e0c:	mov	r0, r4
   70e10:	sub	sp, fp, #28
   70e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   70e18:	cmp	r8, #1
   70e1c:	blt	71024 <Mat_VarGetStructsLinear+0x34c>
   70e20:	sub	r0, r8, #4
   70e24:	mov	r1, #1
   70e28:	ldr	r9, [r7, #40]	; 0x28
   70e2c:	mov	ip, #0
   70e30:	mov	lr, #32
   70e34:	mov	r3, #0
   70e38:	str	r4, [sp, #4]
   70e3c:	add	r1, r1, r0, lsr #2
   70e40:	lsr	r0, r0, #2
   70e44:	str	r0, [sp, #8]
   70e48:	and	r2, r1, #1
   70e4c:	sub	r1, r1, r2
   70e50:	str	r2, [sp, #16]
   70e54:	bic	r2, r8, #3
   70e58:	add	r0, r9, #4
   70e5c:	str	r9, [sp, #20]
   70e60:	str	r1, [sp]
   70e64:	add	r1, r9, r8, lsl #2
   70e68:	str	r2, [sp, #12]
   70e6c:	mov	r2, sl
   70e70:	str	r0, [sp, #24]
   70e74:	str	r1, [sp, #28]
   70e78:	and	r1, r8, #1
   70e7c:	str	r1, [sp, #32]
   70e80:	lsl	r1, r8, #2
   70e84:	str	r1, [sp, #40]	; 0x28
   70e88:	mul	r4, r3, r8
   70e8c:	cmp	r8, #4
   70e90:	bcs	70edc <Mat_VarGetStructsLinear+0x204>
   70e94:	b	70ec8 <Mat_VarGetStructsLinear+0x1f0>
   70e98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   70e9c:	ldr	r1, [sp, #40]	; 0x28
   70ea0:	add	r3, r3, #1
   70ea4:	add	ip, ip, r8
   70ea8:	add	r5, r5, r0
   70eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   70eb0:	add	r2, r2, r1
   70eb4:	cmp	r3, r0
   70eb8:	beq	71020 <Mat_VarGetStructsLinear+0x348>
   70ebc:	mul	r4, r3, r8
   70ec0:	cmp	r8, #4
   70ec4:	bcs	70edc <Mat_VarGetStructsLinear+0x204>
   70ec8:	mov	r7, #0
   70ecc:	ldr	r0, [sp, #32]
   70ed0:	cmp	r0, #0
   70ed4:	beq	70fb0 <Mat_VarGetStructsLinear+0x2d8>
   70ed8:	b	70fc4 <Mat_VarGetStructsLinear+0x2ec>
   70edc:	ldr	r0, [sp, #28]
   70ee0:	str	r4, [sp, #36]	; 0x24
   70ee4:	mul	r4, r1, r3
   70ee8:	add	r7, r9, r5, lsl #2
   70eec:	add	r6, r0, r5, lsl #2
   70ef0:	mov	r0, r1
   70ef4:	add	r1, sl, r4
   70ef8:	cmp	r1, r6
   70efc:	bcs	70f28 <Mat_VarGetStructsLinear+0x250>
   70f00:	add	r1, r0, r4
   70f04:	add	r1, sl, r1
   70f08:	cmp	r1, r7
   70f0c:	bls	70f28 <Mat_VarGetStructsLinear+0x250>
   70f10:	ldr	r4, [sp, #36]	; 0x24
   70f14:	mov	r7, #0
   70f18:	ldr	r0, [sp, #32]
   70f1c:	cmp	r0, #0
   70f20:	beq	70fb0 <Mat_VarGetStructsLinear+0x2d8>
   70f24:	b	70fc4 <Mat_VarGetStructsLinear+0x2ec>
   70f28:	ldr	r0, [sp, #8]
   70f2c:	mov	r9, #0
   70f30:	cmp	r0, #0
   70f34:	beq	70f64 <Mat_VarGetStructsLinear+0x28c>
   70f38:	ldr	r4, [sp]
   70f3c:	mov	r6, r2
   70f40:	add	r1, r7, #16
   70f44:	vld1.32	{d16-d17}, [r7], lr
   70f48:	add	r0, r6, #16
   70f4c:	subs	r4, r4, #2
   70f50:	add	r9, r9, #8
   70f54:	vst1.32	{d16-d17}, [r6], lr
   70f58:	vld1.32	{d16-d17}, [r1]
   70f5c:	vst1.32	{d16-d17}, [r0]
   70f60:	bne	70f40 <Mat_VarGetStructsLinear+0x268>
   70f64:	ldr	r0, [sp, #16]
   70f68:	ldr	r4, [sp, #36]	; 0x24
   70f6c:	cmp	r0, #0
   70f70:	beq	70f90 <Mat_VarGetStructsLinear+0x2b8>
   70f74:	ldr	r1, [sp, #20]
   70f78:	add	r0, r5, r9
   70f7c:	add	r0, r1, r0, lsl #2
   70f80:	vld1.32	{d16-d17}, [r0]
   70f84:	add	r0, r9, r4
   70f88:	add	r0, sl, r0, lsl #2
   70f8c:	vst1.32	{d16-d17}, [r0]
   70f90:	ldr	r7, [sp, #12]
   70f94:	ldr	r9, [sp, #20]
   70f98:	add	r5, r5, r7
   70f9c:	cmp	r8, r7
   70fa0:	beq	70e98 <Mat_VarGetStructsLinear+0x1c0>
   70fa4:	ldr	r0, [sp, #32]
   70fa8:	cmp	r0, #0
   70fac:	bne	70fc4 <Mat_VarGetStructsLinear+0x2ec>
   70fb0:	mov	r4, r7
   70fb4:	orr	r0, r7, #1
   70fb8:	cmp	r8, r0
   70fbc:	beq	70e98 <Mat_VarGetStructsLinear+0x1c0>
   70fc0:	b	70fe4 <Mat_VarGetStructsLinear+0x30c>
   70fc4:	ldr	r0, [r9, r5, lsl #2]
   70fc8:	add	r1, r7, r4
   70fcc:	orr	r4, r7, #1
   70fd0:	add	r5, r5, #1
   70fd4:	str	r0, [sl, r1, lsl #2]
   70fd8:	orr	r0, r7, #1
   70fdc:	cmp	r8, r0
   70fe0:	beq	70e98 <Mat_VarGetStructsLinear+0x1c0>
   70fe4:	ldr	r0, [sp, #24]
   70fe8:	add	r1, r4, ip
   70fec:	sub	r7, r8, r4
   70ff0:	add	r6, sl, r1, lsl #2
   70ff4:	add	r0, r0, r5, lsl #2
   70ff8:	ldr	r1, [r0, #-4]
   70ffc:	subs	r7, r7, #2
   71000:	add	r5, r5, #2
   71004:	str	r1, [r6]
   71008:	ldr	r1, [r0]
   7100c:	add	r0, r0, #8
   71010:	str	r1, [r6, #4]
   71014:	add	r6, r6, #8
   71018:	bne	70ff8 <Mat_VarGetStructsLinear+0x320>
   7101c:	b	70e98 <Mat_VarGetStructsLinear+0x1c0>
   71020:	ldr	r4, [sp, #4]
   71024:	mov	r0, r4
   71028:	sub	sp, fp, #28
   7102c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00071030 <Mat_VarSetStructFieldByIndex>:
   71030:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   71034:	add	fp, sp, #24
   71038:	sub	sp, sp, #8
   7103c:	mov	r7, r0
   71040:	mov	r0, #1
   71044:	mov	r4, #0
   71048:	cmp	r7, #0
   7104c:	str	r0, [sp, #4]
   71050:	beq	7109c <Mat_VarSetStructFieldByIndex+0x6c>
   71054:	ldr	r0, [r7, #16]
   71058:	cmp	r0, #2
   7105c:	bne	7109c <Mat_VarSetStructFieldByIndex+0x6c>
   71060:	ldr	r0, [r7, #40]	; 0x28
   71064:	cmp	r0, #0
   71068:	beq	7109c <Mat_VarSetStructFieldByIndex+0x6c>
   7106c:	mov	r6, r1
   71070:	add	r1, sp, #4
   71074:	mov	r0, r7
   71078:	mov	r8, r3
   7107c:	mov	r5, r2
   71080:	bl	6be10 <SafeMulDims>
   71084:	ldr	r0, [r7, #52]	; 0x34
   71088:	ldr	r0, [r0, #4]
   7108c:	cmp	r0, r6
   71090:	ldrhi	r1, [sp, #4]
   71094:	cmphi	r1, r5
   71098:	bhi	710a8 <Mat_VarSetStructFieldByIndex+0x78>
   7109c:	mov	r0, r4
   710a0:	sub	sp, fp, #24
   710a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   710a8:	ldr	r1, [r7, #40]	; 0x28
   710ac:	mla	r0, r0, r5, r6
   710b0:	ldr	r4, [r1, r0, lsl #2]
   710b4:	str	r8, [r1, r0, lsl #2]
   710b8:	ldr	r0, [r8, #36]	; 0x24
   710bc:	cmp	r0, #0
   710c0:	beq	710c8 <Mat_VarSetStructFieldByIndex+0x98>
   710c4:	bl	1804 <free@plt>
   710c8:	ldr	r0, [r7, #52]	; 0x34
   710cc:	ldr	r0, [r0, #8]
   710d0:	ldr	r0, [r0, r6, lsl #2]
   710d4:	bl	1864 <strdup@plt>
   710d8:	str	r0, [r8, #36]	; 0x24
   710dc:	mov	r0, r4
   710e0:	sub	sp, fp, #24
   710e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000710e8 <Mat_VarSetStructFieldByName>:
   710e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   710ec:	add	fp, sp, #28
   710f0:	sub	sp, sp, #12
   710f4:	mov	r8, r0
   710f8:	mov	r0, #1
   710fc:	mov	sl, #0
   71100:	cmp	r8, #0
   71104:	str	r0, [sp, #8]
   71108:	beq	711d4 <Mat_VarSetStructFieldByName+0xec>
   7110c:	ldr	r0, [r8, #16]
   71110:	cmp	r0, #2
   71114:	bne	711d4 <Mat_VarSetStructFieldByName+0xec>
   71118:	ldr	r0, [r8, #40]	; 0x28
   7111c:	cmp	r0, #0
   71120:	beq	711d4 <Mat_VarSetStructFieldByName+0xec>
   71124:	mov	r4, r1
   71128:	add	r1, sp, #8
   7112c:	mov	r0, r8
   71130:	mov	r5, r3
   71134:	mov	r9, r2
   71138:	bl	6be10 <SafeMulDims>
   7113c:	ldr	r0, [r8, #52]	; 0x34
   71140:	ldr	r6, [r0, #4]
   71144:	cmp	r6, #1
   71148:	blt	711d4 <Mat_VarSetStructFieldByName+0xec>
   7114c:	str	r5, [sp, #4]
   71150:	ldr	r5, [r0, #8]
   71154:	mov	r7, #0
   71158:	ldr	r0, [r5, r7, lsl #2]
   7115c:	mov	r1, r4
   71160:	bl	17b0 <strcmp@plt>
   71164:	cmp	r0, #0
   71168:	beq	71188 <Mat_VarSetStructFieldByName+0xa0>
   7116c:	add	r7, r7, #1
   71170:	cmp	r6, r7
   71174:	bne	71158 <Mat_VarSetStructFieldByName+0x70>
   71178:	mov	sl, #0
   7117c:	mov	r0, sl
   71180:	sub	sp, fp, #28
   71184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   71188:	ldr	r0, [sp, #8]
   7118c:	ldr	r4, [sp, #4]
   71190:	mov	sl, #0
   71194:	cmp	r0, r9
   71198:	bls	711d4 <Mat_VarSetStructFieldByName+0xec>
   7119c:	ldr	r1, [r8, #40]	; 0x28
   711a0:	mul	r0, r6, r9
   711a4:	add	r0, r1, r0, lsl #2
   711a8:	ldr	sl, [r0, r7, lsl #2]
   711ac:	str	r4, [r0, r7, lsl #2]
   711b0:	ldr	r0, [r4, #36]	; 0x24
   711b4:	cmp	r0, #0
   711b8:	beq	711c0 <Mat_VarSetStructFieldByName+0xd8>
   711bc:	bl	1804 <free@plt>
   711c0:	ldr	r0, [r8, #52]	; 0x34
   711c4:	ldr	r0, [r0, #8]
   711c8:	ldr	r0, [r0, r7, lsl #2]
   711cc:	bl	1864 <strdup@plt>
   711d0:	str	r0, [r4, #36]	; 0x24
   711d4:	mov	r0, sl
   711d8:	sub	sp, fp, #28
   711dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000711e0 <__aeabi_drsub>:
   711e0:	eor	r1, r1, #-2147483648	; 0x80000000
   711e4:	b	711ec <__adddf3>

000711e8 <__aeabi_dsub>:
   711e8:	eor	r3, r3, #-2147483648	; 0x80000000

000711ec <__adddf3>:
   711ec:	push	{r4, r5, lr}
   711f0:	lsl	r4, r1, #1
   711f4:	lsl	r5, r3, #1
   711f8:	teq	r4, r5
   711fc:	teqeq	r0, r2
   71200:	orrsne	ip, r4, r0
   71204:	orrsne	ip, r5, r2
   71208:	mvnsne	ip, r4, asr #21
   7120c:	mvnsne	ip, r5, asr #21
   71210:	beq	713fc <__adddf3+0x210>
   71214:	lsr	r4, r4, #21
   71218:	rsbs	r5, r4, r5, lsr #21
   7121c:	rsblt	r5, r5, #0
   71220:	ble	71240 <__adddf3+0x54>
   71224:	add	r4, r4, r5
   71228:	eor	r2, r0, r2
   7122c:	eor	r3, r1, r3
   71230:	eor	r0, r2, r0
   71234:	eor	r1, r3, r1
   71238:	eor	r2, r0, r2
   7123c:	eor	r3, r1, r3
   71240:	cmp	r5, #54	; 0x36
   71244:	pophi	{r4, r5, pc}
   71248:	tst	r1, #-2147483648	; 0x80000000
   7124c:	lsl	r1, r1, #12
   71250:	mov	ip, #1048576	; 0x100000
   71254:	orr	r1, ip, r1, lsr #12
   71258:	beq	71264 <__adddf3+0x78>
   7125c:	rsbs	r0, r0, #0
   71260:	rsc	r1, r1, #0
   71264:	tst	r3, #-2147483648	; 0x80000000
   71268:	lsl	r3, r3, #12
   7126c:	orr	r3, ip, r3, lsr #12
   71270:	beq	7127c <__adddf3+0x90>
   71274:	rsbs	r2, r2, #0
   71278:	rsc	r3, r3, #0
   7127c:	teq	r4, r5
   71280:	beq	713e4 <__adddf3+0x1f8>
   71284:	sub	r4, r4, #1
   71288:	rsbs	lr, r5, #32
   7128c:	blt	712a8 <__adddf3+0xbc>
   71290:	lsl	ip, r2, lr
   71294:	adds	r0, r0, r2, lsr r5
   71298:	adc	r1, r1, #0
   7129c:	adds	r0, r0, r3, lsl lr
   712a0:	adcs	r1, r1, r3, asr r5
   712a4:	b	712c4 <__adddf3+0xd8>
   712a8:	sub	r5, r5, #32
   712ac:	add	lr, lr, #32
   712b0:	cmp	r2, #1
   712b4:	lsl	ip, r3, lr
   712b8:	orrcs	ip, ip, #2
   712bc:	adds	r0, r0, r3, asr r5
   712c0:	adcs	r1, r1, r3, asr #31
   712c4:	and	r5, r1, #-2147483648	; 0x80000000
   712c8:	bpl	712d8 <__adddf3+0xec>
   712cc:	rsbs	ip, ip, #0
   712d0:	rscs	r0, r0, #0
   712d4:	rsc	r1, r1, #0
   712d8:	cmp	r1, #1048576	; 0x100000
   712dc:	bcc	7131c <__adddf3+0x130>
   712e0:	cmp	r1, #2097152	; 0x200000
   712e4:	bcc	71304 <__adddf3+0x118>
   712e8:	lsrs	r1, r1, #1
   712ec:	rrxs	r0, r0
   712f0:	rrx	ip, ip
   712f4:	add	r4, r4, #1
   712f8:	lsl	r2, r4, #21
   712fc:	cmn	r2, #4194304	; 0x400000
   71300:	bcs	7145c <__adddf3+0x270>
   71304:	cmp	ip, #-2147483648	; 0x80000000
   71308:	lsrseq	ip, r0, #1
   7130c:	adcs	r0, r0, #0
   71310:	adc	r1, r1, r4, lsl #20
   71314:	orr	r1, r1, r5
   71318:	pop	{r4, r5, pc}
   7131c:	lsls	ip, ip, #1
   71320:	adcs	r0, r0, r0
   71324:	adc	r1, r1, r1
   71328:	tst	r1, #1048576	; 0x100000
   7132c:	sub	r4, r4, #1
   71330:	bne	71304 <__adddf3+0x118>
   71334:	teq	r1, #0
   71338:	moveq	r1, r0
   7133c:	moveq	r0, #0
   71340:	clz	r3, r1
   71344:	addeq	r3, r3, #32
   71348:	sub	r3, r3, #11
   7134c:	subs	r2, r3, #32
   71350:	bge	71374 <__adddf3+0x188>
   71354:	adds	r2, r2, #12
   71358:	ble	71370 <__adddf3+0x184>
   7135c:	add	ip, r2, #20
   71360:	rsb	r2, r2, #12
   71364:	lsl	r0, r1, ip
   71368:	lsr	r1, r1, r2
   7136c:	b	71384 <__adddf3+0x198>
   71370:	add	r2, r2, #20
   71374:	rsble	ip, r2, #32
   71378:	lsl	r1, r1, r2
   7137c:	orrle	r1, r1, r0, lsr ip
   71380:	lslle	r0, r0, r2
   71384:	subs	r4, r4, r3
   71388:	addge	r1, r1, r4, lsl #20
   7138c:	orrge	r1, r1, r5
   71390:	popge	{r4, r5, pc}
   71394:	mvn	r4, r4
   71398:	subs	r4, r4, #31
   7139c:	bge	713d8 <__adddf3+0x1ec>
   713a0:	adds	r4, r4, #12
   713a4:	bgt	713c0 <__adddf3+0x1d4>
   713a8:	add	r4, r4, #20
   713ac:	rsb	r2, r4, #32
   713b0:	lsr	r0, r0, r4
   713b4:	orr	r0, r0, r1, lsl r2
   713b8:	orr	r1, r5, r1, lsr r4
   713bc:	pop	{r4, r5, pc}
   713c0:	rsb	r4, r4, #12
   713c4:	rsb	r2, r4, #32
   713c8:	lsr	r0, r0, r2
   713cc:	orr	r0, r0, r1, lsl r4
   713d0:	mov	r1, r5
   713d4:	pop	{r4, r5, pc}
   713d8:	lsr	r0, r1, r4
   713dc:	mov	r1, r5
   713e0:	pop	{r4, r5, pc}
   713e4:	teq	r4, #0
   713e8:	eor	r3, r3, #1048576	; 0x100000
   713ec:	eoreq	r1, r1, #1048576	; 0x100000
   713f0:	addeq	r4, r4, #1
   713f4:	subne	r5, r5, #1
   713f8:	b	71284 <__adddf3+0x98>
   713fc:	mvns	ip, r4, asr #21
   71400:	mvnsne	ip, r5, asr #21
   71404:	beq	7146c <__adddf3+0x280>
   71408:	teq	r4, r5
   7140c:	teqeq	r0, r2
   71410:	beq	71424 <__adddf3+0x238>
   71414:	orrs	ip, r4, r0
   71418:	moveq	r1, r3
   7141c:	moveq	r0, r2
   71420:	pop	{r4, r5, pc}
   71424:	teq	r1, r3
   71428:	movne	r1, #0
   7142c:	movne	r0, #0
   71430:	popne	{r4, r5, pc}
   71434:	lsrs	ip, r4, #21
   71438:	bne	7144c <__adddf3+0x260>
   7143c:	lsls	r0, r0, #1
   71440:	adcs	r1, r1, r1
   71444:	orrcs	r1, r1, #-2147483648	; 0x80000000
   71448:	pop	{r4, r5, pc}
   7144c:	adds	r4, r4, #4194304	; 0x400000
   71450:	addcc	r1, r1, #1048576	; 0x100000
   71454:	popcc	{r4, r5, pc}
   71458:	and	r5, r1, #-2147483648	; 0x80000000
   7145c:	orr	r1, r5, #2130706432	; 0x7f000000
   71460:	orr	r1, r1, #15728640	; 0xf00000
   71464:	mov	r0, #0
   71468:	pop	{r4, r5, pc}
   7146c:	mvns	ip, r4, asr #21
   71470:	movne	r1, r3
   71474:	movne	r0, r2
   71478:	mvnseq	ip, r5, asr #21
   7147c:	movne	r3, r1
   71480:	movne	r2, r0
   71484:	orrs	r4, r0, r1, lsl #12
   71488:	orrseq	r5, r2, r3, lsl #12
   7148c:	teqeq	r1, r3
   71490:	orrne	r1, r1, #524288	; 0x80000
   71494:	pop	{r4, r5, pc}

00071498 <__aeabi_ui2d>:
   71498:	teq	r0, #0
   7149c:	moveq	r1, #0
   714a0:	bxeq	lr
   714a4:	push	{r4, r5, lr}
   714a8:	mov	r4, #1024	; 0x400
   714ac:	add	r4, r4, #50	; 0x32
   714b0:	mov	r5, #0
   714b4:	mov	r1, #0
   714b8:	b	71334 <__adddf3+0x148>

000714bc <__aeabi_i2d>:
   714bc:	teq	r0, #0
   714c0:	moveq	r1, #0
   714c4:	bxeq	lr
   714c8:	push	{r4, r5, lr}
   714cc:	mov	r4, #1024	; 0x400
   714d0:	add	r4, r4, #50	; 0x32
   714d4:	ands	r5, r0, #-2147483648	; 0x80000000
   714d8:	rsbmi	r0, r0, #0
   714dc:	mov	r1, #0
   714e0:	b	71334 <__adddf3+0x148>

000714e4 <__aeabi_f2d>:
   714e4:	lsls	r2, r0, #1
   714e8:	asr	r1, r2, #3
   714ec:	rrx	r1, r1
   714f0:	lsl	r0, r2, #28
   714f4:	andsne	r3, r2, #-16777216	; 0xff000000
   714f8:	teqne	r3, #-16777216	; 0xff000000
   714fc:	eorne	r1, r1, #939524096	; 0x38000000
   71500:	bxne	lr
   71504:	bics	r2, r2, #-16777216	; 0xff000000
   71508:	bxeq	lr
   7150c:	teq	r3, #-16777216	; 0xff000000
   71510:	orreq	r1, r1, #524288	; 0x80000
   71514:	bxeq	lr
   71518:	push	{r4, r5, lr}
   7151c:	mov	r4, #896	; 0x380
   71520:	and	r5, r1, #-2147483648	; 0x80000000
   71524:	bic	r1, r1, #-2147483648	; 0x80000000
   71528:	b	71334 <__adddf3+0x148>

0007152c <__aeabi_ul2d>:
   7152c:	orrs	r2, r0, r1
   71530:	bxeq	lr
   71534:	push	{r4, r5, lr}
   71538:	mov	r5, #0
   7153c:	b	7155c <__aeabi_l2d+0x1c>

00071540 <__aeabi_l2d>:
   71540:	orrs	r2, r0, r1
   71544:	bxeq	lr
   71548:	push	{r4, r5, lr}
   7154c:	ands	r5, r1, #-2147483648	; 0x80000000
   71550:	bpl	7155c <__aeabi_l2d+0x1c>
   71554:	rsbs	r0, r0, #0
   71558:	rsc	r1, r1, #0
   7155c:	mov	r4, #1024	; 0x400
   71560:	add	r4, r4, #50	; 0x32
   71564:	lsrs	ip, r1, #22
   71568:	beq	712d8 <__adddf3+0xec>
   7156c:	mov	r2, #3
   71570:	lsrs	ip, ip, #3
   71574:	addne	r2, r2, #3
   71578:	lsrs	ip, ip, #3
   7157c:	addne	r2, r2, #3
   71580:	add	r2, r2, ip, lsr #3
   71584:	rsb	r3, r2, #32
   71588:	lsl	ip, r0, r3
   7158c:	lsr	r0, r0, r2
   71590:	orr	r0, r0, r1, lsl r3
   71594:	lsr	r1, r1, r2
   71598:	add	r4, r4, r2
   7159c:	b	712d8 <__adddf3+0xec>

000715a0 <__aeabi_frsub>:
   715a0:	eor	r0, r0, #-2147483648	; 0x80000000
   715a4:	b	715ac <__addsf3>

000715a8 <__aeabi_fsub>:
   715a8:	eor	r1, r1, #-2147483648	; 0x80000000

000715ac <__addsf3>:
   715ac:	lsls	r2, r0, #1
   715b0:	lslsne	r3, r1, #1
   715b4:	teqne	r2, r3
   715b8:	mvnsne	ip, r2, asr #24
   715bc:	mvnsne	ip, r3, asr #24
   715c0:	beq	716b8 <__addsf3+0x10c>
   715c4:	lsr	r2, r2, #24
   715c8:	rsbs	r3, r2, r3, lsr #24
   715cc:	addgt	r2, r2, r3
   715d0:	eorgt	r1, r0, r1
   715d4:	eorgt	r0, r1, r0
   715d8:	eorgt	r1, r0, r1
   715dc:	rsblt	r3, r3, #0
   715e0:	cmp	r3, #25
   715e4:	bxhi	lr
   715e8:	tst	r0, #-2147483648	; 0x80000000
   715ec:	orr	r0, r0, #8388608	; 0x800000
   715f0:	bic	r0, r0, #-16777216	; 0xff000000
   715f4:	rsbne	r0, r0, #0
   715f8:	tst	r1, #-2147483648	; 0x80000000
   715fc:	orr	r1, r1, #8388608	; 0x800000
   71600:	bic	r1, r1, #-16777216	; 0xff000000
   71604:	rsbne	r1, r1, #0
   71608:	teq	r2, r3
   7160c:	beq	716a0 <__addsf3+0xf4>
   71610:	sub	r2, r2, #1
   71614:	adds	r0, r0, r1, asr r3
   71618:	rsb	r3, r3, #32
   7161c:	lsl	r1, r1, r3
   71620:	and	r3, r0, #-2147483648	; 0x80000000
   71624:	bpl	71630 <__addsf3+0x84>
   71628:	rsbs	r1, r1, #0
   7162c:	rsc	r0, r0, #0
   71630:	cmp	r0, #8388608	; 0x800000
   71634:	bcc	71668 <__addsf3+0xbc>
   71638:	cmp	r0, #16777216	; 0x1000000
   7163c:	bcc	71654 <__addsf3+0xa8>
   71640:	lsrs	r0, r0, #1
   71644:	rrx	r1, r1
   71648:	add	r2, r2, #1
   7164c:	cmp	r2, #254	; 0xfe
   71650:	bcs	7170c <__addsf3+0x160>
   71654:	cmp	r1, #-2147483648	; 0x80000000
   71658:	adc	r0, r0, r2, lsl #23
   7165c:	biceq	r0, r0, #1
   71660:	orr	r0, r0, r3
   71664:	bx	lr
   71668:	lsls	r1, r1, #1
   7166c:	adc	r0, r0, r0
   71670:	tst	r0, #8388608	; 0x800000
   71674:	sub	r2, r2, #1
   71678:	bne	71654 <__addsf3+0xa8>
   7167c:	clz	ip, r0
   71680:	sub	ip, ip, #8
   71684:	subs	r2, r2, ip
   71688:	lsl	r0, r0, ip
   7168c:	addge	r0, r0, r2, lsl #23
   71690:	rsblt	r2, r2, #0
   71694:	orrge	r0, r0, r3
   71698:	orrlt	r0, r3, r0, lsr r2
   7169c:	bx	lr
   716a0:	teq	r2, #0
   716a4:	eor	r1, r1, #8388608	; 0x800000
   716a8:	eoreq	r0, r0, #8388608	; 0x800000
   716ac:	addeq	r2, r2, #1
   716b0:	subne	r3, r3, #1
   716b4:	b	71610 <__addsf3+0x64>
   716b8:	lsl	r3, r1, #1
   716bc:	mvns	ip, r2, asr #24
   716c0:	mvnsne	ip, r3, asr #24
   716c4:	beq	71718 <__addsf3+0x16c>
   716c8:	teq	r2, r3
   716cc:	beq	716dc <__addsf3+0x130>
   716d0:	teq	r2, #0
   716d4:	moveq	r0, r1
   716d8:	bx	lr
   716dc:	teq	r0, r1
   716e0:	movne	r0, #0
   716e4:	bxne	lr
   716e8:	tst	r2, #-16777216	; 0xff000000
   716ec:	bne	716fc <__addsf3+0x150>
   716f0:	lsls	r0, r0, #1
   716f4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   716f8:	bx	lr
   716fc:	adds	r2, r2, #33554432	; 0x2000000
   71700:	addcc	r0, r0, #8388608	; 0x800000
   71704:	bxcc	lr
   71708:	and	r3, r0, #-2147483648	; 0x80000000
   7170c:	orr	r0, r3, #2130706432	; 0x7f000000
   71710:	orr	r0, r0, #8388608	; 0x800000
   71714:	bx	lr
   71718:	mvns	r2, r2, asr #24
   7171c:	movne	r0, r1
   71720:	mvnseq	r3, r3, asr #24
   71724:	movne	r1, r0
   71728:	lsls	r2, r0, #9
   7172c:	lslseq	r3, r1, #9
   71730:	teqeq	r0, r1
   71734:	orrne	r0, r0, #4194304	; 0x400000
   71738:	bx	lr

0007173c <__aeabi_ui2f>:
   7173c:	mov	r3, #0
   71740:	b	7174c <__aeabi_i2f+0x8>

00071744 <__aeabi_i2f>:
   71744:	ands	r3, r0, #-2147483648	; 0x80000000
   71748:	rsbmi	r0, r0, #0
   7174c:	movs	ip, r0
   71750:	bxeq	lr
   71754:	orr	r3, r3, #1258291200	; 0x4b000000
   71758:	mov	r1, r0
   7175c:	mov	r0, #0
   71760:	b	717a4 <__aeabi_l2f+0x30>

00071764 <__aeabi_ul2f>:
   71764:	orrs	r2, r0, r1
   71768:	bxeq	lr
   7176c:	mov	r3, #0
   71770:	b	7178c <__aeabi_l2f+0x18>

00071774 <__aeabi_l2f>:
   71774:	orrs	r2, r0, r1
   71778:	bxeq	lr
   7177c:	ands	r3, r1, #-2147483648	; 0x80000000
   71780:	bpl	7178c <__aeabi_l2f+0x18>
   71784:	rsbs	r0, r0, #0
   71788:	rsc	r1, r1, #0
   7178c:	movs	ip, r1
   71790:	moveq	ip, r0
   71794:	moveq	r1, r0
   71798:	moveq	r0, #0
   7179c:	orr	r3, r3, #1526726656	; 0x5b000000
   717a0:	subeq	r3, r3, #268435456	; 0x10000000
   717a4:	sub	r3, r3, #8388608	; 0x800000
   717a8:	clz	r2, ip
   717ac:	subs	r2, r2, #8
   717b0:	sub	r3, r3, r2, lsl #23
   717b4:	blt	717d4 <__aeabi_l2f+0x60>
   717b8:	add	r3, r3, r1, lsl r2
   717bc:	lsl	ip, r0, r2
   717c0:	rsb	r2, r2, #32
   717c4:	cmp	ip, #-2147483648	; 0x80000000
   717c8:	adc	r0, r3, r0, lsr r2
   717cc:	biceq	r0, r0, #1
   717d0:	bx	lr
   717d4:	add	r2, r2, #32
   717d8:	lsl	ip, r1, r2
   717dc:	rsb	r2, r2, #32
   717e0:	orrs	r0, r0, ip, lsl #1
   717e4:	adc	r0, r3, r1, lsr r2
   717e8:	biceq	r0, r0, ip, lsr #31
   717ec:	bx	lr

000717f0 <__aeabi_f2lz>:
   717f0:	vmov	s15, r0
   717f4:	vcmpe.f32	s15, #0.0
   717f8:	vmrs	APSR_nzcv, fpscr
   717fc:	bmi	71804 <__aeabi_f2lz+0x14>
   71800:	b	71848 <__aeabi_f2ulz>
   71804:	push	{r4, lr}
   71808:	eor	r0, r0, #-2147483648	; 0x80000000
   7180c:	bl	71848 <__aeabi_f2ulz>
   71810:	rsbs	r0, r0, #0
   71814:	rsc	r1, r1, #0
   71818:	pop	{r4, pc}

0007181c <__aeabi_d2lz>:
   7181c:	vmov	d7, r0, r1
   71820:	vcmpe.f64	d7, #0.0
   71824:	vmrs	APSR_nzcv, fpscr
   71828:	bmi	71830 <__aeabi_d2lz+0x14>
   7182c:	b	71888 <__aeabi_d2ulz>
   71830:	push	{r4, lr}
   71834:	eor	r1, r1, #-2147483648	; 0x80000000
   71838:	bl	71888 <__aeabi_d2ulz>
   7183c:	rsbs	r0, r0, #0
   71840:	rsc	r1, r1, #0
   71844:	pop	{r4, pc}

00071848 <__aeabi_f2ulz>:
   71848:	vmov	s15, r0
   7184c:	vldr	d5, [pc, #36]	; 71878 <__aeabi_f2ulz+0x30>
   71850:	vcvt.f64.f32	d6, s15
   71854:	vldr	d7, [pc, #36]	; 71880 <__aeabi_f2ulz+0x38>
   71858:	vmul.f64	d7, d6, d7
   7185c:	vcvt.u32.f64	s14, d7
   71860:	vcvt.f64.u32	d4, s14
   71864:	vmov	r1, s14
   71868:	vmls.f64	d6, d4, d5
   7186c:	vcvt.u32.f64	s15, d6
   71870:	vmov	r0, s15
   71874:	bx	lr
   71878:	.word	0x00000000
   7187c:	.word	0x41f00000
   71880:	.word	0x00000000
   71884:	.word	0x3df00000

00071888 <__aeabi_d2ulz>:
   71888:	vmov	d6, r0, r1
   7188c:	vldr	d7, [pc, #36]	; 718b8 <__aeabi_d2ulz+0x30>
   71890:	vldr	d5, [pc, #40]	; 718c0 <__aeabi_d2ulz+0x38>
   71894:	vmul.f64	d7, d6, d7
   71898:	vcvt.u32.f64	s14, d7
   7189c:	vcvt.f64.u32	d4, s14
   718a0:	vmov	r1, s14
   718a4:	vmls.f64	d6, d4, d5
   718a8:	vcvt.u32.f64	s15, d6
   718ac:	vmov	r0, s15
   718b0:	bx	lr
   718b4:	nop			; (mov r0, r0)
   718b8:	.word	0x00000000
   718bc:	.word	0x3df00000
   718c0:	.word	0x00000000
   718c4:	.word	0x41f00000

Disassembly of section .fini:

000718c8 <_fini>:
   718c8:	push	{r3, lr}
   718cc:	pop	{r3, pc}
