
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000d10 <_init>:
 d10:	push	{r3, lr}
 d14:	bl	f1c <call_weak_fn>
 d18:	pop	{r3, pc}

Disassembly of section .plt:

00000d1c <.plt>:
 d1c:	push	{lr}		; (str lr, [sp, #-4]!)
 d20:	ldr	lr, [pc, #4]	; d2c <.plt+0x10>
 d24:	add	lr, pc, lr
 d28:	ldr	pc, [lr, #8]!
 d2c:	.word	0x000122d4

00000d30 <propagate_generic@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #724]!	; 0x2d4

00000d3c <make_conf@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #716]!	; 0x2cc

00000d48 <rb_current_time@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #708]!	; 0x2c4

00000d54 <add_to_resv_hash@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #700]!	; 0x2bc

00000d60 <sendto_match_servs@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #692]!	; 0x2b4

00000d6c <__cxa_finalize@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #684]!	; 0x2ac

00000d78 <strtol@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #676]!	; 0x2a4

00000d84 <sendto_one@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #668]!	; 0x29c

00000d90 <replace_old_ban@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #660]!	; 0x294

00000d9c <rb_outofmemory@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #652]!	; 0x28c

00000da8 <resv_nick_fnc@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #644]!	; 0x284

00000db4 <operhash_delete@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #636]!	; 0x27c

00000dc0 <sendto_realops_snomask@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #628]!	; 0x274

00000dcc <bandb_add@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #620]!	; 0x26c

00000dd8 <resv_chan_forcepart@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #612]!	; 0x264

00000de4 <deactivate_conf@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #604]!	; 0x25c

00000df0 <get_oper_name@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #596]!	; 0x254

00000dfc <rb_free_rb_dlink_node@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #588]!	; 0x24c

00000e08 <cluster_generic@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #580]!	; 0x244

00000e14 <operhash_add@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #572]!	; 0x23c

00000e20 <strcpy@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #564]!	; 0x234

00000e2c <sendto_server@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #556]!	; 0x22c

00000e38 <malloc@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #548]!	; 0x224

00000e44 <__gmon_start__@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #540]!	; 0x21c

00000e50 <free_conf@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #73728	; 0x12000
 e58:	ldr	pc, [ip, #532]!	; 0x214

00000e5c <rb_make_rb_dlink_node@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #73728	; 0x12000
 e64:	ldr	pc, [ip, #524]!	; 0x20c

00000e68 <strlen@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #73728	; 0x12000
 e70:	ldr	pc, [ip, #516]!	; 0x204

00000e74 <ilog@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #73728	; 0x12000
 e7c:	ldr	pc, [ip, #508]!	; 0x1fc

00000e80 <match@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #73728	; 0x12000
 e88:	ldr	pc, [ip, #500]!	; 0x1f4

00000e8c <del_from_resv_hash@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #73728	; 0x12000
 e94:	ldr	pc, [ip, #492]!	; 0x1ec

00000e98 <find_nick_resv_mask@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #73728	; 0x12000
 ea0:	ldr	pc, [ip, #484]!	; 0x1e4

00000ea4 <valid_temp_time@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #73728	; 0x12000
 eac:	ldr	pc, [ip, #476]!	; 0x1dc

00000eb0 <sendto_one_notice@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #73728	; 0x12000
 eb8:	ldr	pc, [ip, #468]!	; 0x1d4

00000ebc <bandb_del@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #73728	; 0x12000
 ec4:	ldr	pc, [ip, #460]!	; 0x1cc

00000ec8 <valid_wild_card_simple@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #73728	; 0x12000
 ed0:	ldr	pc, [ip, #452]!	; 0x1c4

00000ed4 <find_shared_conf@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #73728	; 0x12000
 edc:	ldr	pc, [ip, #444]!	; 0x1bc

00000ee0 <privilegeset_in_set@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #73728	; 0x12000
 ee8:	ldr	pc, [ip, #436]!	; 0x1b4

00000eec <hash_find_resv@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #73728	; 0x12000
 ef4:	ldr	pc, [ip, #428]!	; 0x1ac

00000ef8 <irccmp@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #73728	; 0x12000
 f00:	ldr	pc, [ip, #420]!	; 0x1a4

00000f04 <clean_resv_nick@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #73728	; 0x12000
 f0c:	ldr	pc, [ip, #412]!	; 0x19c

00000f10 <__assert_fail@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #73728	; 0x12000
 f18:	ldr	pc, [ip, #404]!	; 0x194

Disassembly of section .text:

00000f1c <call_weak_fn>:
     f1c:	ldr	r3, [pc, #20]	; f38 <call_weak_fn+0x1c>
     f20:	ldr	r2, [pc, #20]	; f3c <call_weak_fn+0x20>
     f24:	add	r3, pc, r3
     f28:	ldr	r2, [r3, r2]
     f2c:	cmp	r2, #0
     f30:	bxeq	lr
     f34:	b	e44 <__gmon_start__@plt>
     f38:	.word	0x000120d4
     f3c:	.word	0x000000cc

00000f40 <deregister_tm_clones>:
     f40:	ldr	r0, [pc, #44]	; f74 <deregister_tm_clones+0x34>
     f44:	ldr	r3, [pc, #44]	; f78 <deregister_tm_clones+0x38>
     f48:	add	r0, pc, r0
     f4c:	add	r3, pc, r3
     f50:	cmp	r3, r0
     f54:	ldr	r3, [pc, #32]	; f7c <deregister_tm_clones+0x3c>
     f58:	add	r3, pc, r3
     f5c:	bxeq	lr
     f60:	ldr	r2, [pc, #24]	; f80 <deregister_tm_clones+0x40>
     f64:	ldr	r3, [r3, r2]
     f68:	cmp	r3, #0
     f6c:	bxeq	lr
     f70:	bx	r3
     f74:	.word	0x00012258
     f78:	.word	0x00012254
     f7c:	.word	0x000120a0
     f80:	.word	0x000000b4

00000f84 <register_tm_clones>:
     f84:	ldr	r0, [pc, #56]	; fc4 <register_tm_clones+0x40>
     f88:	ldr	r3, [pc, #56]	; fc8 <register_tm_clones+0x44>
     f8c:	add	r0, pc, r0
     f90:	add	r3, pc, r3
     f94:	sub	r1, r3, r0
     f98:	ldr	r3, [pc, #44]	; fcc <register_tm_clones+0x48>
     f9c:	asr	r1, r1, #2
     fa0:	add	r3, pc, r3
     fa4:	add	r1, r1, r1, lsr #31
     fa8:	asrs	r1, r1, #1
     fac:	bxeq	lr
     fb0:	ldr	r2, [pc, #24]	; fd0 <register_tm_clones+0x4c>
     fb4:	ldr	r3, [r3, r2]
     fb8:	cmp	r3, #0
     fbc:	bxeq	lr
     fc0:	bx	r3
     fc4:	.word	0x00012214
     fc8:	.word	0x00012210
     fcc:	.word	0x00012058
     fd0:	.word	0x000000d8

00000fd4 <__do_global_dtors_aux>:
     fd4:	ldr	r3, [pc, #76]	; 1028 <__do_global_dtors_aux+0x54>
     fd8:	ldr	r2, [pc, #76]	; 102c <__do_global_dtors_aux+0x58>
     fdc:	add	r3, pc, r3
     fe0:	add	r2, pc, r2
     fe4:	ldrb	r3, [r3]
     fe8:	cmp	r3, #0
     fec:	bxne	lr
     ff0:	ldr	r3, [pc, #56]	; 1030 <__do_global_dtors_aux+0x5c>
     ff4:	push	{r4, lr}
     ff8:	ldr	r3, [r2, r3]
     ffc:	cmp	r3, #0
    1000:	beq	1010 <__do_global_dtors_aux+0x3c>
    1004:	ldr	r3, [pc, #40]	; 1034 <__do_global_dtors_aux+0x60>
    1008:	ldr	r0, [pc, r3]
    100c:	bl	d6c <__cxa_finalize@plt>
    1010:	bl	f40 <deregister_tm_clones>
    1014:	ldr	r3, [pc, #28]	; 1038 <__do_global_dtors_aux+0x64>
    1018:	mov	r2, #1
    101c:	add	r3, pc, r3
    1020:	strb	r2, [r3]
    1024:	pop	{r4, pc}
    1028:	.word	0x000121c4
    102c:	.word	0x00012018
    1030:	.word	0x000000b0
    1034:	.word	0x000120d8
    1038:	.word	0x00012184

0000103c <frame_dummy>:
    103c:	b	f84 <register_tm_clones>

00001040 <ms_resv>:
    1040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1044:	add	fp, sp, #28
    1048:	sub	sp, sp, #20
    104c:	ldr	r9, [pc, #184]	; 110c <ms_resv+0xcc>
    1050:	ldr	r8, [fp, #8]
    1054:	mov	r4, r2
    1058:	mov	r3, #0
    105c:	mov	sl, #0
    1060:	ldr	r9, [pc, r9]
    1064:	ldmib	r8, {r5, r6, r7}
    1068:	mov	r1, r5
    106c:	ldr	r2, [r9]
    1070:	ldr	r0, [pc, #152]	; 1110 <ms_resv+0xd0>
    1074:	add	r0, pc, r0
    1078:	stm	sp, {r0, r5, r6, r7}
    107c:	mov	r0, r4
    1080:	bl	d60 <sendto_match_servs@plt>
    1084:	ldr	r3, [r9]
    1088:	ldr	r0, [pc, #132]	; 1114 <ms_resv+0xd4>
    108c:	mov	r1, r5
    1090:	ldr	r0, [pc, r0]
    1094:	ldr	r2, [r0]
    1098:	ldr	r0, [pc, #120]	; 1118 <ms_resv+0xd8>
    109c:	add	r0, pc, r0
    10a0:	stm	sp, {r0, r5, sl}
    10a4:	mov	r0, r4
    10a8:	str	r6, [sp, #12]
    10ac:	str	r7, [sp, #16]
    10b0:	bl	d60 <sendto_match_servs@plt>
    10b4:	ldr	r0, [r8, #4]
    10b8:	ldr	r1, [pc, #92]	; 111c <ms_resv+0xdc>
    10bc:	ldr	r1, [pc, r1]
    10c0:	add	r1, r1, #88	; 0x58
    10c4:	bl	e80 <match@plt>
    10c8:	cmp	r0, #0
    10cc:	beq	1104 <ms_resv+0xc4>
    10d0:	ldrh	r0, [r4, #80]	; 0x50
    10d4:	cmp	r0, #64	; 0x40
    10d8:	bne	1104 <ms_resv+0xc4>
    10dc:	ldr	r0, [r4, #24]
    10e0:	cmp	r0, #0
    10e4:	beq	1104 <ms_resv+0xc4>
    10e8:	ldr	r1, [r8, #8]
    10ec:	ldr	r2, [r8, #12]
    10f0:	mov	r0, #0
    10f4:	mov	r3, #0
    10f8:	str	r0, [sp]
    10fc:	mov	r0, r4
    1100:	bl	1870 <parse_resv>
    1104:	sub	sp, fp, #28
    1108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    110c:	.word	0x00012058
    1110:	.word	0x00001656
    1114:	.word	0x00012048
    1118:	.word	0x0000163d
    111c:	.word	0x00012018

00001120 <me_resv>:
    1120:	push	{r4, r5, r6, r7, fp, lr}
    1124:	add	fp, sp, #16
    1128:	sub	sp, sp, #8
    112c:	ldrh	r0, [r2, #80]	; 0x50
    1130:	cmp	r0, #64	; 0x40
    1134:	bne	117c <me_resv+0x5c>
    1138:	ldr	r0, [r2, #24]
    113c:	mov	r4, r2
    1140:	cmp	r0, #0
    1144:	beq	117c <me_resv+0x5c>
    1148:	ldr	r1, [fp, #8]
    114c:	mov	r2, #10
    1150:	mov	r7, #0
    1154:	ldmib	r1, {r0, r5}
    1158:	ldr	r6, [r1, #16]
    115c:	mov	r1, #0
    1160:	bl	d78 <strtol@plt>
    1164:	mov	r3, r0
    1168:	mov	r0, r4
    116c:	mov	r1, r5
    1170:	mov	r2, r6
    1174:	str	r7, [sp]
    1178:	bl	1870 <parse_resv>
    117c:	sub	sp, fp, #16
    1180:	pop	{r4, r5, r6, r7, fp, pc}

00001184 <mo_resv>:
    1184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1188:	add	fp, sp, #28
    118c:	sub	sp, sp, #36	; 0x24
    1190:	ldr	r0, [r2, #24]
    1194:	mov	r4, r2
    1198:	cmp	r0, #0
    119c:	beq	128c <mo_resv+0x108>
    11a0:	ldr	r0, [r0, #36]	; 0x24
    11a4:	cmp	r0, #0
    11a8:	beq	128c <mo_resv+0x108>
    11ac:	ldr	r1, [pc, #940]	; 1560 <mo_resv+0x3dc>
    11b0:	mov	r7, r3
    11b4:	ldr	r1, [pc, r1]
    11b8:	ldr	r5, [fp, #8]
    11bc:	ldr	r6, [r1, #324]	; 0x144
    11c0:	ldr	r1, [pc, #924]	; 1564 <mo_resv+0x3e0>
    11c4:	add	r1, pc, r1
    11c8:	bl	ee0 <privilegeset_in_set@plt>
    11cc:	cmp	r0, #0
    11d0:	beq	128c <mo_resv+0x108>
    11d4:	ldr	r0, [r5, #4]
    11d8:	str	r6, [sp, #28]
    11dc:	bl	ea4 <valid_temp_time@plt>
    11e0:	mov	r6, #0
    11e4:	cmn	r0, #1
    11e8:	mov	r8, #1
    11ec:	movwgt	r8, #2
    11f0:	movle	r0, r6
    11f4:	str	r0, [sp, #24]
    11f8:	ldr	r0, [r5, r8, lsl #2]
    11fc:	add	sl, r8, #3
    1200:	add	r9, r8, #1
    1204:	cmp	sl, r7
    1208:	str	r0, [sp, #32]
    120c:	bgt	1228 <mo_resv+0xa4>
    1210:	ldr	r0, [r5, r9, lsl #2]
    1214:	ldr	r1, [pc, #856]	; 1574 <mo_resv+0x3f0>
    1218:	add	r1, pc, r1
    121c:	bl	ef8 <irccmp@plt>
    1220:	cmp	r0, #0
    1224:	beq	12c0 <mo_resv+0x13c>
    1228:	cmp	r9, r7
    122c:	bge	1308 <mo_resv+0x184>
    1230:	ldr	r7, [r5, r9, lsl #2]
    1234:	cmp	r7, #0
    1238:	beq	1308 <mo_resv+0x184>
    123c:	ldrb	r0, [r7]
    1240:	cmp	r0, #0
    1244:	beq	1308 <mo_resv+0x184>
    1248:	cmp	r6, #0
    124c:	beq	1348 <mo_resv+0x1c4>
    1250:	ldr	sl, [sp, #24]
    1254:	cmp	sl, #0
    1258:	beq	13f8 <mo_resv+0x274>
    125c:	ldr	r0, [pc, #824]	; 159c <mo_resv+0x418>
    1260:	mov	r1, r6
    1264:	mov	r3, #0
    1268:	ldr	r0, [pc, r0]
    126c:	ldr	r2, [r0]
    1270:	ldr	r0, [pc, #808]	; 15a0 <mo_resv+0x41c>
    1274:	add	r0, pc, r0
    1278:	stm	sp, {r0, r6, sl}
    127c:	ldr	r0, [sp, #32]
    1280:	str	r7, [sp, #16]
    1284:	str	r0, [sp, #12]
    1288:	b	1458 <mo_resv+0x2d4>
    128c:	ldr	r0, [pc, #724]	; 1568 <mo_resv+0x3e4>
    1290:	add	r0, pc, r0
    1294:	str	r0, [sp]
    1298:	add	r3, r4, #88	; 0x58
    129c:	ldr	r0, [pc, #712]	; 156c <mo_resv+0x3e8>
    12a0:	ldr	r0, [pc, r0]
    12a4:	ldr	r1, [pc, #708]	; 1570 <mo_resv+0x3ec>
    12a8:	add	r2, r0, #88	; 0x58
    12ac:	add	r1, pc, r1
    12b0:	mov	r0, r4
    12b4:	bl	d84 <sendto_one@plt>
    12b8:	sub	sp, fp, #28
    12bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12c0:	ldr	r0, [r4, #24]
    12c4:	cmp	r0, #0
    12c8:	beq	133c <mo_resv+0x1b8>
    12cc:	ldr	r0, [r0, #36]	; 0x24
    12d0:	cmp	r0, #0
    12d4:	beq	133c <mo_resv+0x1b8>
    12d8:	ldr	r1, [pc, #664]	; 1578 <mo_resv+0x3f4>
    12dc:	add	r1, pc, r1
    12e0:	bl	ee0 <privilegeset_in_set@plt>
    12e4:	cmp	r0, #0
    12e8:	beq	133c <mo_resv+0x1b8>
    12ec:	add	r0, r5, r8, lsl #2
    12f0:	mov	r9, sl
    12f4:	ldr	r6, [r0, #8]
    12f8:	mov	r0, #0
    12fc:	str	r0, [sp, #28]
    1300:	cmp	r9, r7
    1304:	blt	1230 <mo_resv+0xac>
    1308:	ldr	r0, [pc, #624]	; 1580 <mo_resv+0x3fc>
    130c:	add	r3, r4, #88	; 0x58
    1310:	add	r0, pc, r0
    1314:	str	r0, [sp]
    1318:	ldr	r0, [pc, #612]	; 1584 <mo_resv+0x400>
    131c:	ldr	r0, [pc, r0]
    1320:	ldr	r1, [pc, #608]	; 1588 <mo_resv+0x404>
    1324:	add	r2, r0, #88	; 0x58
    1328:	add	r1, pc, r1
    132c:	mov	r0, r4
    1330:	bl	d84 <sendto_one@plt>
    1334:	sub	sp, fp, #28
    1338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    133c:	ldr	r0, [pc, #568]	; 157c <mo_resv+0x3f8>
    1340:	add	r0, pc, r0
    1344:	b	1294 <mo_resv+0x110>
    1348:	ldr	r0, [sp, #28]
    134c:	ldr	sl, [sp, #24]
    1350:	cmp	r0, #0
    1354:	bne	147c <mo_resv+0x2f8>
    1358:	ldr	r0, [pc, #584]	; 15a8 <mo_resv+0x424>
    135c:	ldr	r0, [pc, r0]
    1360:	ldr	r1, [r0, #8]
    1364:	cmp	r1, #0
    1368:	beq	147c <mo_resv+0x2f8>
    136c:	ldr	r6, [r0]
    1370:	ldr	r0, [sp, #28]
    1374:	cmp	r6, #0
    1378:	beq	14a8 <mo_resv+0x324>
    137c:	cmp	sl, #0
    1380:	beq	14c8 <mo_resv+0x344>
    1384:	ldr	r8, [pc, #544]	; 15ac <mo_resv+0x428>
    1388:	ldr	r8, [pc, r8]
    138c:	ldr	r5, [pc, #540]	; 15b0 <mo_resv+0x42c>
    1390:	add	r5, pc, r5
    1394:	ldr	r0, [r6]
    1398:	ldrb	r1, [r0, #12]
    139c:	tst	r1, #128	; 0x80
    13a0:	bne	13c0 <mo_resv+0x23c>
    13a4:	ldr	r6, [r6, #8]
    13a8:	cmp	r6, #0
    13ac:	beq	147c <mo_resv+0x2f8>
    13b0:	ldr	r0, [r6]
    13b4:	ldrb	r1, [r0, #12]
    13b8:	tst	r1, #128	; 0x80
    13bc:	beq	13a4 <mo_resv+0x220>
    13c0:	ldr	r1, [r0, #8]
    13c4:	ldr	r2, [r8]
    13c8:	str	r5, [sp]
    13cc:	mov	r3, #0
    13d0:	stmib	sp, {r1, sl}
    13d4:	ldr	r0, [sp, #32]
    13d8:	str	r7, [sp, #16]
    13dc:	str	r0, [sp, #12]
    13e0:	mov	r0, r4
    13e4:	bl	d60 <sendto_match_servs@plt>
    13e8:	ldr	r6, [r6, #8]
    13ec:	cmp	r6, #0
    13f0:	bne	13b0 <mo_resv+0x22c>
    13f4:	b	147c <mo_resv+0x2f8>
    13f8:	ldr	r9, [pc, #396]	; 158c <mo_resv+0x408>
    13fc:	mov	r1, r6
    1400:	mov	r3, #0
    1404:	mov	r8, #0
    1408:	ldr	r9, [pc, r9]
    140c:	ldr	r2, [r9]
    1410:	ldr	r0, [pc, #376]	; 1590 <mo_resv+0x40c>
    1414:	add	r0, pc, r0
    1418:	stm	sp, {r0, r6}
    141c:	mov	r0, r4
    1420:	ldr	r5, [sp, #32]
    1424:	str	r7, [sp, #12]
    1428:	str	r5, [sp, #8]
    142c:	bl	d60 <sendto_match_servs@plt>
    1430:	ldr	r3, [r9]
    1434:	ldr	r0, [pc, #344]	; 1594 <mo_resv+0x410>
    1438:	mov	r1, r6
    143c:	ldr	r0, [pc, r0]
    1440:	ldr	r2, [r0]
    1444:	ldr	r0, [pc, #332]	; 1598 <mo_resv+0x414>
    1448:	add	r0, pc, r0
    144c:	stm	sp, {r0, r6, r8}
    1450:	str	r5, [sp, #12]
    1454:	str	r7, [sp, #16]
    1458:	mov	r0, r4
    145c:	bl	d60 <sendto_match_servs@plt>
    1460:	ldr	r0, [pc, #316]	; 15a4 <mo_resv+0x420>
    1464:	ldr	r0, [pc, r0]
    1468:	add	r1, r0, #88	; 0x58
    146c:	mov	r0, r6
    1470:	bl	e80 <match@plt>
    1474:	cmp	r0, #0
    1478:	beq	14c0 <mo_resv+0x33c>
    147c:	ldr	r0, [sp, #28]
    1480:	cmp	sl, #0
    1484:	bne	14a8 <mo_resv+0x324>
    1488:	cmp	r0, #0
    148c:	beq	14a8 <mo_resv+0x324>
    1490:	ldr	r1, [pc, #300]	; 15c4 <mo_resv+0x440>
    1494:	mov	r0, r4
    1498:	add	r1, pc, r1
    149c:	sub	sp, fp, #28
    14a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14a4:	b	eb0 <sendto_one_notice@plt>
    14a8:	str	r0, [sp]
    14ac:	mov	r0, r4
    14b0:	mov	r2, r7
    14b4:	mov	r3, sl
    14b8:	ldr	r1, [sp, #32]
    14bc:	bl	1870 <parse_resv>
    14c0:	sub	sp, fp, #28
    14c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14c8:	ldr	r9, [pc, #228]	; 15b4 <mo_resv+0x430>
    14cc:	ldr	r9, [pc, r9]
    14d0:	ldr	r8, [sp, #32]
    14d4:	ldr	r5, [r6]
    14d8:	ldrb	r0, [r5, #13]
    14dc:	tst	r0, #1
    14e0:	bne	1500 <mo_resv+0x37c>
    14e4:	ldr	r6, [r6, #8]
    14e8:	cmp	r6, #0
    14ec:	beq	147c <mo_resv+0x2f8>
    14f0:	ldr	r5, [r6]
    14f4:	ldrb	r0, [r5, #13]
    14f8:	tst	r0, #1
    14fc:	beq	14e4 <mo_resv+0x360>
    1500:	ldr	r2, [r9]
    1504:	ldr	r1, [r5, #8]
    1508:	ldr	r0, [pc, #168]	; 15b8 <mo_resv+0x434>
    150c:	mov	r3, #0
    1510:	add	r0, pc, r0
    1514:	stm	sp, {r0, r1, r8}
    1518:	mov	r0, r4
    151c:	str	r7, [sp, #12]
    1520:	bl	d60 <sendto_match_servs@plt>
    1524:	ldr	r3, [r9]
    1528:	ldr	r0, [pc, #140]	; 15bc <mo_resv+0x438>
    152c:	ldr	r0, [pc, r0]
    1530:	ldr	r1, [r5, #8]
    1534:	ldr	r2, [r0]
    1538:	ldr	r0, [pc, #128]	; 15c0 <mo_resv+0x43c>
    153c:	add	r0, pc, r0
    1540:	stm	sp, {r0, r1, r8}
    1544:	mov	r0, r4
    1548:	str	r7, [sp, #12]
    154c:	bl	d60 <sendto_match_servs@plt>
    1550:	ldr	r6, [r6, #8]
    1554:	cmp	r6, #0
    1558:	bne	14f0 <mo_resv+0x36c>
    155c:	b	147c <mo_resv+0x2f8>
    1560:	.word	0x00011f28
    1564:	.word	0x0000147b
    1568:	.word	0x00001604
    156c:	.word	0x00011e34
    1570:	.word	0x0000139d
    1574:	.word	0x00001458
    1578:	.word	0x00001397
    157c:	.word	0x00001338
    1580:	.word	0x0000132a
    1584:	.word	0x00011db8
    1588:	.word	0x0000135a
    158c:	.word	0x00011cb0
    1590:	.word	0x000012b6
    1594:	.word	0x00011c9c
    1598:	.word	0x00001291
    159c:	.word	0x00011e70
    15a0:	.word	0x00001465
    15a4:	.word	0x00011c70
    15a8:	.word	0x00011d6c
    15ac:	.word	0x00011d50
    15b0:	.word	0x00001349
    15b4:	.word	0x00011bec
    15b8:	.word	0x000011ba
    15bc:	.word	0x00011bac
    15c0:	.word	0x000011b7
    15c4:	.word	0x0000120f

000015c8 <ms_unresv>:
    15c8:	push	{r4, r5, fp, lr}
    15cc:	add	fp, sp, #8
    15d0:	sub	sp, sp, #8
    15d4:	ldr	r0, [pc, #172]	; 1688 <ms_unresv+0xc0>
    15d8:	mov	r4, r2
    15dc:	ldr	r0, [pc, r0]
    15e0:	ldr	r5, [fp, #8]
    15e4:	ldr	r3, [r0]
    15e8:	ldr	r2, [r5, #4]
    15ec:	ldr	r0, [r5, #8]
    15f0:	ldr	r1, [pc, #148]	; 168c <ms_unresv+0xc4>
    15f4:	add	r1, pc, r1
    15f8:	str	r0, [sp, #4]
    15fc:	mov	r0, r4
    1600:	str	r1, [sp]
    1604:	ldr	r1, [pc, #132]	; 1690 <ms_unresv+0xc8>
    1608:	add	r1, pc, r1
    160c:	bl	d30 <propagate_generic@plt>
    1610:	ldr	r0, [r5, #4]
    1614:	ldr	r1, [pc, #120]	; 1694 <ms_unresv+0xcc>
    1618:	ldr	r1, [pc, r1]
    161c:	add	r1, r1, #88	; 0x58
    1620:	bl	e80 <match@plt>
    1624:	cmp	r0, #0
    1628:	beq	1680 <ms_unresv+0xb8>
    162c:	ldrh	r0, [r4, #80]	; 0x50
    1630:	cmp	r0, #64	; 0x40
    1634:	bne	1680 <ms_unresv+0xb8>
    1638:	ldr	r0, [r4, #24]
    163c:	cmp	r0, #0
    1640:	beq	1680 <ms_unresv+0xb8>
    1644:	ldr	r2, [r4, #32]
    1648:	ldr	r5, [r5, #8]
    164c:	add	r0, r4, #152	; 0x98
    1650:	add	r1, r4, #163	; 0xa3
    1654:	mov	r3, #512	; 0x200
    1658:	add	r2, r2, #88	; 0x58
    165c:	bl	ed4 <find_shared_conf@plt>
    1660:	cmp	r0, #0
    1664:	beq	1680 <ms_unresv+0xb8>
    1668:	mov	r0, r4
    166c:	mov	r1, r5
    1670:	mov	r2, #0
    1674:	sub	sp, fp, #8
    1678:	pop	{r4, r5, fp, lr}
    167c:	b	2104 <remove_resv>
    1680:	sub	sp, fp, #8
    1684:	pop	{r4, r5, fp, pc}
    1688:	.word	0x00011adc
    168c:	.word	0x0000115d
    1690:	.word	0x00001030
    1694:	.word	0x00011abc

00001698 <me_unresv>:
    1698:	push	{r4, r5, fp, lr}
    169c:	add	fp, sp, #8
    16a0:	ldrh	r0, [r2, #80]	; 0x50
    16a4:	cmp	r0, #64	; 0x40
    16a8:	bne	16f8 <me_unresv+0x60>
    16ac:	ldr	r0, [r2, #24]
    16b0:	mov	r4, r2
    16b4:	cmp	r0, #0
    16b8:	popeq	{r4, r5, fp, pc}
    16bc:	ldr	r0, [fp, #8]
    16c0:	ldr	r2, [r4, #32]
    16c4:	add	r1, r4, #163	; 0xa3
    16c8:	mov	r3, #512	; 0x200
    16cc:	ldr	r5, [r0, #4]
    16d0:	add	r0, r4, #152	; 0x98
    16d4:	add	r2, r2, #88	; 0x58
    16d8:	bl	ed4 <find_shared_conf@plt>
    16dc:	cmp	r0, #0
    16e0:	beq	16f8 <me_unresv+0x60>
    16e4:	mov	r0, r4
    16e8:	mov	r1, r5
    16ec:	mov	r2, #0
    16f0:	pop	{r4, r5, fp, lr}
    16f4:	b	2104 <remove_resv>
    16f8:	pop	{r4, r5, fp, pc}

000016fc <mo_unresv>:
    16fc:	push	{r4, r5, r6, r7, fp, lr}
    1700:	add	fp, sp, #16
    1704:	sub	sp, sp, #8
    1708:	ldr	r0, [r2, #24]
    170c:	mov	r4, r2
    1710:	cmp	r0, #0
    1714:	beq	177c <mo_unresv+0x80>
    1718:	ldr	r0, [r0, #36]	; 0x24
    171c:	cmp	r0, #0
    1720:	beq	177c <mo_unresv+0x80>
    1724:	ldr	r7, [fp, #8]
    1728:	ldr	r1, [pc, #276]	; 1844 <mo_unresv+0x148>
    172c:	mov	r6, r3
    1730:	add	r1, pc, r1
    1734:	bl	ee0 <privilegeset_in_set@plt>
    1738:	cmp	r0, #0
    173c:	beq	177c <mo_unresv+0x80>
    1740:	mov	r5, #1
    1744:	cmp	r6, #4
    1748:	bne	1764 <mo_unresv+0x68>
    174c:	ldr	r0, [r7, #8]
    1750:	ldr	r1, [pc, #252]	; 1854 <mo_unresv+0x158>
    1754:	add	r1, pc, r1
    1758:	bl	ef8 <irccmp@plt>
    175c:	cmp	r0, #0
    1760:	beq	17b0 <mo_unresv+0xb4>
    1764:	ldr	r1, [r7, #4]
    1768:	mov	r0, r4
    176c:	mov	r2, r5
    1770:	sub	sp, fp, #16
    1774:	pop	{r4, r5, r6, r7, fp, lr}
    1778:	b	2104 <remove_resv>
    177c:	ldr	r0, [pc, #196]	; 1848 <mo_unresv+0x14c>
    1780:	add	r0, pc, r0
    1784:	str	r0, [sp]
    1788:	add	r3, r4, #88	; 0x58
    178c:	ldr	r0, [pc, #184]	; 184c <mo_unresv+0x150>
    1790:	ldr	r0, [pc, r0]
    1794:	ldr	r1, [pc, #180]	; 1850 <mo_unresv+0x154>
    1798:	add	r2, r0, #88	; 0x58
    179c:	add	r1, pc, r1
    17a0:	mov	r0, r4
    17a4:	bl	d84 <sendto_one@plt>
    17a8:	sub	sp, fp, #16
    17ac:	pop	{r4, r5, r6, r7, fp, pc}
    17b0:	ldr	r0, [r4, #24]
    17b4:	cmp	r0, #0
    17b8:	beq	1838 <mo_unresv+0x13c>
    17bc:	ldr	r0, [r0, #36]	; 0x24
    17c0:	cmp	r0, #0
    17c4:	beq	1838 <mo_unresv+0x13c>
    17c8:	ldr	r1, [pc, #136]	; 1858 <mo_unresv+0x15c>
    17cc:	add	r1, pc, r1
    17d0:	bl	ee0 <privilegeset_in_set@plt>
    17d4:	cmp	r0, #0
    17d8:	beq	1838 <mo_unresv+0x13c>
    17dc:	ldr	r0, [pc, #124]	; 1860 <mo_unresv+0x164>
    17e0:	ldr	r0, [pc, r0]
    17e4:	ldr	r2, [r7, #12]
    17e8:	ldr	r3, [r0]
    17ec:	ldr	r0, [r7, #4]
    17f0:	ldr	r1, [pc, #108]	; 1864 <mo_unresv+0x168>
    17f4:	add	r1, pc, r1
    17f8:	str	r0, [sp, #4]
    17fc:	mov	r0, r4
    1800:	str	r1, [sp]
    1804:	ldr	r1, [pc, #92]	; 1868 <mo_unresv+0x16c>
    1808:	add	r1, pc, r1
    180c:	bl	d30 <propagate_generic@plt>
    1810:	ldr	r0, [r7, #12]
    1814:	ldr	r1, [pc, #80]	; 186c <mo_unresv+0x170>
    1818:	ldr	r1, [pc, r1]
    181c:	add	r1, r1, #88	; 0x58
    1820:	bl	e80 <match@plt>
    1824:	mov	r5, #0
    1828:	cmp	r0, #0
    182c:	bne	1764 <mo_unresv+0x68>
    1830:	sub	sp, fp, #16
    1834:	pop	{r4, r5, r6, r7, fp, pc}
    1838:	ldr	r0, [pc, #28]	; 185c <mo_unresv+0x160>
    183c:	add	r0, pc, r0
    1840:	b	1784 <mo_unresv+0x88>
    1844:	.word	0x00000f0f
    1848:	.word	0x00001114
    184c:	.word	0x00011944
    1850:	.word	0x00000ead
    1854:	.word	0x00000f1c
    1858:	.word	0x00000ea7
    185c:	.word	0x00000e3c
    1860:	.word	0x000118d8
    1864:	.word	0x00000f5d
    1868:	.word	0x00000e30
    186c:	.word	0x000118bc

00001870 <parse_resv>:
    1870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1874:	add	fp, sp, #28
    1878:	sub	sp, sp, #28
    187c:	mov	r5, r0
    1880:	ldrb	r0, [r0, #65]	; 0x41
    1884:	ldr	r7, [fp, #8]
    1888:	mov	r4, r3
    188c:	mov	sl, r2
    1890:	mov	r6, r1
    1894:	tst	r0, #32
    1898:	beq	18a8 <parse_resv+0x38>
    189c:	ldrh	r0, [r5, #80]	; 0x50
    18a0:	cmp	r0, #64	; 0x40
    18a4:	beq	18d0 <parse_resv+0x60>
    18a8:	ldr	r2, [r5, #32]
    18ac:	cmp	r4, #0
    18b0:	mov	r3, #256	; 0x100
    18b4:	add	r0, r5, #152	; 0x98
    18b8:	add	r1, r5, #163	; 0xa3
    18bc:	movwgt	r3, #128	; 0x80
    18c0:	add	r2, r2, #88	; 0x58
    18c4:	bl	ed4 <find_shared_conf@plt>
    18c8:	cmp	r0, #0
    18cc:	beq	1940 <parse_resv+0xd0>
    18d0:	cmp	r6, #0
    18d4:	beq	18f4 <parse_resv+0x84>
    18d8:	ldrb	r0, [r6]
    18dc:	ldr	r1, [pc, #1932]	; 2070 <parse_resv+0x800>
    18e0:	ldr	r1, [pc, r1]
    18e4:	add	r0, r1, r0, lsl #2
    18e8:	ldrb	r0, [r0, #1]
    18ec:	tst	r0, #2
    18f0:	bne	1948 <parse_resv+0xd8>
    18f4:	mov	r0, r6
    18f8:	bl	f04 <clean_resv_nick@plt>
    18fc:	cmp	r0, #0
    1900:	beq	1964 <parse_resv+0xf4>
    1904:	mov	r0, r6
    1908:	bl	e68 <strlen@plt>
    190c:	cmp	r0, #65	; 0x41
    1910:	bcs	1980 <parse_resv+0x110>
    1914:	mov	r0, r6
    1918:	bl	ec8 <valid_wild_card_simple@plt>
    191c:	cmp	r0, #0
    1920:	beq	199c <parse_resv+0x12c>
    1924:	mov	r0, r6
    1928:	bl	e98 <find_nick_resv_mask@plt>
    192c:	cmp	r0, #0
    1930:	beq	1aa0 <parse_resv+0x230>
    1934:	ldr	r1, [pc, #1916]	; 20b8 <parse_resv+0x848>
    1938:	add	r1, pc, r1
    193c:	b	1988 <parse_resv+0x118>
    1940:	sub	sp, fp, #28
    1944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1948:	mov	r0, r6
    194c:	bl	eec <hash_find_resv@plt>
    1950:	cmp	r0, #0
    1954:	beq	1970 <parse_resv+0x100>
    1958:	ldr	r1, [pc, #1812]	; 2074 <parse_resv+0x804>
    195c:	add	r1, pc, r1
    1960:	b	1988 <parse_resv+0x118>
    1964:	ldr	r1, [pc, #1928]	; 20f4 <parse_resv+0x884>
    1968:	add	r1, pc, r1
    196c:	b	1988 <parse_resv+0x118>
    1970:	mov	r0, r6
    1974:	bl	e68 <strlen@plt>
    1978:	cmp	r0, #201	; 0xc9
    197c:	bcc	19c0 <parse_resv+0x150>
    1980:	ldr	r1, [pc, #1776]	; 2078 <parse_resv+0x808>
    1984:	add	r1, pc, r1
    1988:	mov	r0, r5
    198c:	mov	r2, r6
    1990:	sub	sp, fp, #28
    1994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1998:	b	eb0 <sendto_one_notice@plt>
    199c:	ldr	r0, [pc, #1804]	; 20b0 <parse_resv+0x840>
    19a0:	ldr	r0, [pc, r0]
    19a4:	ldr	r2, [r0, #240]	; 0xf0
    19a8:	ldr	r1, [pc, #1796]	; 20b4 <parse_resv+0x844>
    19ac:	mov	r0, r5
    19b0:	add	r1, pc, r1
    19b4:	sub	sp, fp, #28
    19b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19bc:	b	eb0 <sendto_one_notice@plt>
    19c0:	bl	d3c <make_conf@plt>
    19c4:	mov	r8, r0
    19c8:	mov	r0, #0
    19cc:	str	r0, [r8, #32]
    19d0:	mov	r0, #256	; 0x100
    19d4:	str	r0, [r8]
    19d8:	bl	d48 <rb_current_time@plt>
    19dc:	str	r0, [r8, #40]	; 0x28
    19e0:	mov	r0, r6
    19e4:	bl	e68 <strlen@plt>
    19e8:	add	r0, r0, #1
    19ec:	bl	e38 <malloc@plt>
    19f0:	cmp	r0, #0
    19f4:	beq	206c <parse_resv+0x7fc>
    19f8:	mov	r1, r6
    19fc:	bl	e20 <strcpy@plt>
    1a00:	str	r0, [r8, #16]
    1a04:	mov	r0, sl
    1a08:	bl	e68 <strlen@plt>
    1a0c:	add	r0, r0, #1
    1a10:	bl	e38 <malloc@plt>
    1a14:	cmp	r0, #0
    1a18:	beq	206c <parse_resv+0x7fc>
    1a1c:	mov	r1, sl
    1a20:	bl	e20 <strcpy@plt>
    1a24:	str	r0, [r8, #20]
    1a28:	mov	r0, r5
    1a2c:	bl	df0 <get_oper_name@plt>
    1a30:	bl	e14 <operhash_add@plt>
    1a34:	cmp	r7, #0
    1a38:	str	r0, [r8, #12]
    1a3c:	beq	1b80 <parse_resv+0x310>
    1a40:	ldr	r0, [r8, #4]
    1a44:	orr	r0, r0, #8912896	; 0x880000
    1a48:	str	r0, [r8, #4]
    1a4c:	bl	d48 <rb_current_time@plt>
    1a50:	add	r0, r0, r4
    1a54:	str	r0, [r8, #44]	; 0x2c
    1a58:	str	r0, [r8, #36]	; 0x24
    1a5c:	mov	r0, r8
    1a60:	bl	d90 <replace_old_ban@plt>
    1a64:	bl	e5c <rb_make_rb_dlink_node@plt>
    1a68:	cmp	r0, #0
    1a6c:	beq	204c <parse_resv+0x7dc>
    1a70:	mov	r1, #0
    1a74:	str	r1, [r0, #4]
    1a78:	str	r8, [r0]
    1a7c:	ldr	r1, [pc, #1528]	; 207c <parse_resv+0x80c>
    1a80:	ldr	r1, [pc, r1]
    1a84:	ldr	r2, [r1]
    1a88:	cmp	r2, #0
    1a8c:	str	r2, [r0, #8]
    1a90:	beq	1ca4 <parse_resv+0x434>
    1a94:	add	r2, r2, #4
    1a98:	str	r0, [r2]
    1a9c:	b	1cb4 <parse_resv+0x444>
    1aa0:	bl	d3c <make_conf@plt>
    1aa4:	mov	r8, r0
    1aa8:	mov	r0, #0
    1aac:	str	r0, [r8, #32]
    1ab0:	mov	r0, #512	; 0x200
    1ab4:	str	r0, [r8]
    1ab8:	bl	d48 <rb_current_time@plt>
    1abc:	str	r0, [r8, #40]	; 0x28
    1ac0:	mov	r0, r6
    1ac4:	bl	e68 <strlen@plt>
    1ac8:	add	r0, r0, #1
    1acc:	bl	e38 <malloc@plt>
    1ad0:	cmp	r0, #0
    1ad4:	beq	206c <parse_resv+0x7fc>
    1ad8:	mov	r1, r6
    1adc:	bl	e20 <strcpy@plt>
    1ae0:	str	r0, [r8, #16]
    1ae4:	mov	r0, sl
    1ae8:	bl	e68 <strlen@plt>
    1aec:	add	r0, r0, #1
    1af0:	bl	e38 <malloc@plt>
    1af4:	cmp	r0, #0
    1af8:	beq	206c <parse_resv+0x7fc>
    1afc:	mov	r1, sl
    1b00:	bl	e20 <strcpy@plt>
    1b04:	str	r0, [r8, #20]
    1b08:	mov	r0, r5
    1b0c:	bl	df0 <get_oper_name@plt>
    1b10:	bl	e14 <operhash_add@plt>
    1b14:	cmp	r7, #0
    1b18:	str	r0, [r8, #12]
    1b1c:	beq	1c0c <parse_resv+0x39c>
    1b20:	ldr	r0, [r8, #4]
    1b24:	orr	r0, r0, #8912896	; 0x880000
    1b28:	str	r0, [r8, #4]
    1b2c:	bl	d48 <rb_current_time@plt>
    1b30:	add	r0, r0, r4
    1b34:	str	r0, [r8, #44]	; 0x2c
    1b38:	str	r0, [r8, #36]	; 0x24
    1b3c:	mov	r0, r8
    1b40:	bl	d90 <replace_old_ban@plt>
    1b44:	bl	e5c <rb_make_rb_dlink_node@plt>
    1b48:	cmp	r0, #0
    1b4c:	beq	204c <parse_resv+0x7dc>
    1b50:	mov	r1, #0
    1b54:	str	r1, [r0, #4]
    1b58:	str	r8, [r0]
    1b5c:	ldr	r1, [pc, #1368]	; 20bc <parse_resv+0x84c>
    1b60:	ldr	r1, [pc, r1]
    1b64:	ldr	r2, [r1]
    1b68:	cmp	r2, #0
    1b6c:	str	r2, [r0, #8]
    1b70:	beq	1dc8 <parse_resv+0x558>
    1b74:	add	r2, r2, #4
    1b78:	str	r0, [r2]
    1b7c:	b	1dd8 <parse_resv+0x568>
    1b80:	cmp	r4, #1
    1b84:	blt	1f3c <parse_resv+0x6cc>
    1b88:	bl	d48 <rb_current_time@plt>
    1b8c:	add	r0, r0, r4
    1b90:	str	r0, [r8, #36]	; 0x24
    1b94:	mov	r0, r5
    1b98:	bl	df0 <get_oper_name@plt>
    1b9c:	mov	r3, r0
    1ba0:	movw	r0, #34953	; 0x8889
    1ba4:	movt	r0, #34952	; 0x8888
    1ba8:	umull	r0, r1, r4, r0
    1bac:	mov	r0, #256	; 0x100
    1bb0:	lsr	r9, r1, #5
    1bb4:	mov	r1, #0
    1bb8:	str	r9, [sp]
    1bbc:	stmib	sp, {r6, sl}
    1bc0:	ldr	r2, [pc, #1232]	; 2098 <parse_resv+0x828>
    1bc4:	add	r2, pc, r2
    1bc8:	bl	dc0 <sendto_realops_snomask@plt>
    1bcc:	mov	r0, r5
    1bd0:	bl	df0 <get_oper_name@plt>
    1bd4:	stm	sp, {r6, sl}
    1bd8:	mov	r2, r0
    1bdc:	mov	r0, #7
    1be0:	mov	r3, r9
    1be4:	ldr	r1, [pc, #1200]	; 209c <parse_resv+0x82c>
    1be8:	add	r1, pc, r1
    1bec:	bl	e74 <ilog@plt>
    1bf0:	ldr	r1, [pc, #1192]	; 20a0 <parse_resv+0x830>
    1bf4:	mov	r0, r5
    1bf8:	mov	r2, r9
    1bfc:	mov	r3, r6
    1c00:	add	r1, pc, r1
    1c04:	bl	eb0 <sendto_one_notice@plt>
    1c08:	b	1da4 <parse_resv+0x534>
    1c0c:	cmp	r4, #1
    1c10:	blt	1fc0 <parse_resv+0x750>
    1c14:	bl	d48 <rb_current_time@plt>
    1c18:	add	r0, r0, r4
    1c1c:	str	r0, [r8, #36]	; 0x24
    1c20:	mov	r0, r5
    1c24:	bl	df0 <get_oper_name@plt>
    1c28:	mov	r3, r0
    1c2c:	movw	r0, #34953	; 0x8889
    1c30:	movt	r0, #34952	; 0x8888
    1c34:	umull	r0, r1, r4, r0
    1c38:	mov	r0, #256	; 0x100
    1c3c:	lsr	r9, r1, #5
    1c40:	mov	r1, #0
    1c44:	str	r9, [sp]
    1c48:	stmib	sp, {r6, sl}
    1c4c:	ldr	r2, [pc, #1156]	; 20d8 <parse_resv+0x868>
    1c50:	add	r2, pc, r2
    1c54:	bl	dc0 <sendto_realops_snomask@plt>
    1c58:	mov	r0, r5
    1c5c:	bl	df0 <get_oper_name@plt>
    1c60:	stm	sp, {r6, sl}
    1c64:	mov	r2, r0
    1c68:	mov	r0, #7
    1c6c:	mov	r3, r9
    1c70:	ldr	r1, [pc, #1124]	; 20dc <parse_resv+0x86c>
    1c74:	add	r1, pc, r1
    1c78:	bl	e74 <ilog@plt>
    1c7c:	ldr	r1, [pc, #1116]	; 20e0 <parse_resv+0x870>
    1c80:	mov	r0, r5
    1c84:	mov	r2, r9
    1c88:	mov	r3, r6
    1c8c:	add	r1, pc, r1
    1c90:	bl	eb0 <sendto_one_notice@plt>
    1c94:	bl	e5c <rb_make_rb_dlink_node@plt>
    1c98:	cmp	r0, #0
    1c9c:	bne	1ed4 <parse_resv+0x664>
    1ca0:	b	204c <parse_resv+0x7dc>
    1ca4:	mov	r2, r1
    1ca8:	ldr	r3, [r2, #4]!
    1cac:	cmp	r3, #0
    1cb0:	streq	r0, [r2]
    1cb4:	str	r0, [r1]
    1cb8:	ldr	r0, [r1, #8]
    1cbc:	add	r0, r0, #1
    1cc0:	str	r0, [r1, #8]
    1cc4:	mov	r0, r5
    1cc8:	bl	df0 <get_oper_name@plt>
    1ccc:	mov	r3, r0
    1cd0:	movw	r0, #34953	; 0x8889
    1cd4:	movt	r0, #34952	; 0x8888
    1cd8:	smmla	r0, r4, r0, r4
    1cdc:	asr	r1, r0, #5
    1ce0:	add	r9, r1, r0, lsr #31
    1ce4:	mov	r0, #256	; 0x100
    1ce8:	mov	r1, #0
    1cec:	str	r9, [sp]
    1cf0:	stmib	sp, {r6, sl}
    1cf4:	ldr	r2, [pc, #900]	; 2080 <parse_resv+0x810>
    1cf8:	add	r2, pc, r2
    1cfc:	bl	dc0 <sendto_realops_snomask@plt>
    1d00:	mov	r0, r5
    1d04:	bl	df0 <get_oper_name@plt>
    1d08:	stm	sp, {r6, sl}
    1d0c:	mov	r2, r0
    1d10:	mov	r0, #7
    1d14:	mov	r3, r9
    1d18:	ldr	r1, [pc, #868]	; 2084 <parse_resv+0x814>
    1d1c:	add	r1, pc, r1
    1d20:	bl	e74 <ilog@plt>
    1d24:	ldr	r1, [pc, #860]	; 2088 <parse_resv+0x818>
    1d28:	mov	r0, r5
    1d2c:	mov	r2, r9
    1d30:	mov	r3, r6
    1d34:	add	r1, pc, r1
    1d38:	bl	eb0 <sendto_one_notice@plt>
    1d3c:	ldr	r0, [pc, #840]	; 208c <parse_resv+0x81c>
    1d40:	add	r5, r5, #396	; 0x18c
    1d44:	ldr	r0, [pc, r0]
    1d48:	ldr	r0, [r0]
    1d4c:	ldr	r1, [pc, #828]	; 2090 <parse_resv+0x820>
    1d50:	ldr	r1, [pc, r1]
    1d54:	ldr	r2, [r8, #16]
    1d58:	ldr	r3, [r8, #36]	; 0x24
    1d5c:	ldr	r7, [r8, #40]	; 0x28
    1d60:	ldr	r6, [r8, #44]	; 0x2c
    1d64:	ldr	r1, [r1]
    1d68:	ldr	ip, [pc, #804]	; 2094 <parse_resv+0x824>
    1d6c:	str	r2, [sp, #8]
    1d70:	sub	r3, r3, r7
    1d74:	add	r2, sp, #16
    1d78:	sub	r6, r6, r7
    1d7c:	str	r5, [sp, #4]
    1d80:	str	r7, [sp, #12]
    1d84:	add	ip, pc, ip
    1d88:	str	ip, [sp]
    1d8c:	stm	r2, {r3, r6, sl}
    1d90:	orr	r2, r0, r1
    1d94:	mov	r0, #0
    1d98:	mov	r1, #0
    1d9c:	mov	r3, #0
    1da0:	bl	e2c <sendto_server@plt>
    1da4:	ldr	r0, [r8, #16]
    1da8:	mov	r1, r8
    1dac:	bl	d54 <add_to_resv_hash@plt>
    1db0:	ldr	r0, [r8, #16]
    1db4:	ldr	r1, [r8, #20]
    1db8:	mov	r2, r4
    1dbc:	sub	sp, fp, #28
    1dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1dc4:	b	dd8 <resv_chan_forcepart@plt>
    1dc8:	mov	r2, r1
    1dcc:	ldr	r3, [r2, #4]!
    1dd0:	cmp	r3, #0
    1dd4:	streq	r0, [r2]
    1dd8:	str	r0, [r1]
    1ddc:	ldr	r0, [r1, #8]
    1de0:	add	r0, r0, #1
    1de4:	str	r0, [r1, #8]
    1de8:	mov	r0, r5
    1dec:	bl	df0 <get_oper_name@plt>
    1df0:	mov	r3, r0
    1df4:	movw	r0, #34953	; 0x8889
    1df8:	movt	r0, #34952	; 0x8888
    1dfc:	smmla	r0, r4, r0, r4
    1e00:	asr	r1, r0, #5
    1e04:	add	r9, r1, r0, lsr #31
    1e08:	mov	r0, #256	; 0x100
    1e0c:	mov	r1, #0
    1e10:	str	r9, [sp]
    1e14:	stmib	sp, {r6, sl}
    1e18:	ldr	r2, [pc, #672]	; 20c0 <parse_resv+0x850>
    1e1c:	add	r2, pc, r2
    1e20:	bl	dc0 <sendto_realops_snomask@plt>
    1e24:	mov	r0, r5
    1e28:	bl	df0 <get_oper_name@plt>
    1e2c:	stm	sp, {r6, sl}
    1e30:	mov	r2, r0
    1e34:	mov	r0, #7
    1e38:	mov	r3, r9
    1e3c:	ldr	r1, [pc, #640]	; 20c4 <parse_resv+0x854>
    1e40:	add	r1, pc, r1
    1e44:	bl	e74 <ilog@plt>
    1e48:	ldr	r1, [pc, #632]	; 20c8 <parse_resv+0x858>
    1e4c:	mov	r0, r5
    1e50:	mov	r2, r9
    1e54:	mov	r3, r6
    1e58:	add	r1, pc, r1
    1e5c:	bl	eb0 <sendto_one_notice@plt>
    1e60:	ldr	r0, [pc, #612]	; 20cc <parse_resv+0x85c>
    1e64:	add	r5, r5, #396	; 0x18c
    1e68:	ldr	r0, [pc, r0]
    1e6c:	ldr	r0, [r0]
    1e70:	ldr	r1, [pc, #600]	; 20d0 <parse_resv+0x860>
    1e74:	ldr	r1, [pc, r1]
    1e78:	ldr	r2, [r8, #16]
    1e7c:	ldr	r3, [r8, #36]	; 0x24
    1e80:	ldr	r7, [r8, #40]	; 0x28
    1e84:	ldr	r6, [r8, #44]	; 0x2c
    1e88:	ldr	r1, [r1]
    1e8c:	ldr	ip, [pc, #576]	; 20d4 <parse_resv+0x864>
    1e90:	str	r2, [sp, #8]
    1e94:	sub	r3, r3, r7
    1e98:	add	r2, sp, #16
    1e9c:	sub	r6, r6, r7
    1ea0:	str	r5, [sp, #4]
    1ea4:	str	r7, [sp, #12]
    1ea8:	add	ip, pc, ip
    1eac:	str	ip, [sp]
    1eb0:	stm	r2, {r3, r6, sl}
    1eb4:	orr	r2, r0, r1
    1eb8:	mov	r0, #0
    1ebc:	mov	r1, #0
    1ec0:	mov	r3, #0
    1ec4:	bl	e2c <sendto_server@plt>
    1ec8:	bl	e5c <rb_make_rb_dlink_node@plt>
    1ecc:	cmp	r0, #0
    1ed0:	beq	204c <parse_resv+0x7dc>
    1ed4:	mov	r1, #0
    1ed8:	str	r1, [r0, #4]
    1edc:	str	r8, [r0]
    1ee0:	ldr	r1, [pc, #520]	; 20f0 <parse_resv+0x880>
    1ee4:	ldr	r1, [pc, r1]
    1ee8:	ldr	r2, [r1]
    1eec:	cmp	r2, #0
    1ef0:	str	r2, [r0, #8]
    1ef4:	beq	1f04 <parse_resv+0x694>
    1ef8:	add	r2, r2, #4
    1efc:	str	r0, [r2]
    1f00:	b	1f14 <parse_resv+0x6a4>
    1f04:	mov	r2, r1
    1f08:	ldr	r3, [r2, #4]!
    1f0c:	cmp	r3, #0
    1f10:	streq	r0, [r2]
    1f14:	str	r0, [r1]
    1f18:	mov	r2, r4
    1f1c:	ldr	r0, [r1, #8]
    1f20:	add	r0, r0, #1
    1f24:	str	r0, [r1, #8]
    1f28:	ldr	r0, [r8, #16]
    1f2c:	ldr	r1, [r8, #20]
    1f30:	sub	sp, fp, #28
    1f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f38:	b	da8 <resv_nick_fnc@plt>
    1f3c:	mov	r0, r5
    1f40:	bl	df0 <get_oper_name@plt>
    1f44:	stm	sp, {r6, sl}
    1f48:	mov	r3, r0
    1f4c:	mov	r0, #256	; 0x100
    1f50:	mov	r1, #0
    1f54:	mov	r7, #0
    1f58:	ldr	r2, [pc, #324]	; 20a4 <parse_resv+0x834>
    1f5c:	add	r2, pc, r2
    1f60:	bl	dc0 <sendto_realops_snomask@plt>
    1f64:	mov	r0, r5
    1f68:	bl	df0 <get_oper_name@plt>
    1f6c:	str	sl, [sp]
    1f70:	mov	r2, r0
    1f74:	mov	r0, #7
    1f78:	mov	r3, r6
    1f7c:	ldr	r1, [pc, #292]	; 20a8 <parse_resv+0x838>
    1f80:	add	r1, pc, r1
    1f84:	bl	e74 <ilog@plt>
    1f88:	ldr	r1, [pc, #284]	; 20ac <parse_resv+0x83c>
    1f8c:	mov	r0, r5
    1f90:	mov	r2, r6
    1f94:	add	r1, pc, r1
    1f98:	bl	eb0 <sendto_one_notice@plt>
    1f9c:	ldr	r0, [r8, #20]
    1fa0:	ldr	r2, [r8, #16]
    1fa4:	mov	r1, r5
    1fa8:	mov	r3, #0
    1fac:	stm	sp, {r0, r7}
    1fb0:	mov	r0, #3
    1fb4:	str	r7, [sp, #8]
    1fb8:	bl	dcc <bandb_add@plt>
    1fbc:	b	1da4 <parse_resv+0x534>
    1fc0:	mov	r0, r5
    1fc4:	bl	df0 <get_oper_name@plt>
    1fc8:	stm	sp, {r6, sl}
    1fcc:	mov	r3, r0
    1fd0:	mov	r0, #256	; 0x100
    1fd4:	mov	r1, #0
    1fd8:	mov	r7, #0
    1fdc:	ldr	r2, [pc, #256]	; 20e4 <parse_resv+0x874>
    1fe0:	add	r2, pc, r2
    1fe4:	bl	dc0 <sendto_realops_snomask@plt>
    1fe8:	mov	r0, r5
    1fec:	bl	df0 <get_oper_name@plt>
    1ff0:	str	sl, [sp]
    1ff4:	mov	r2, r0
    1ff8:	mov	r0, #7
    1ffc:	mov	r3, r6
    2000:	ldr	r1, [pc, #224]	; 20e8 <parse_resv+0x878>
    2004:	add	r1, pc, r1
    2008:	bl	e74 <ilog@plt>
    200c:	ldr	r1, [pc, #216]	; 20ec <parse_resv+0x87c>
    2010:	mov	r0, r5
    2014:	mov	r2, r6
    2018:	add	r1, pc, r1
    201c:	bl	eb0 <sendto_one_notice@plt>
    2020:	ldr	r0, [r8, #20]
    2024:	ldr	r2, [r8, #16]
    2028:	mov	r1, r5
    202c:	mov	r3, #0
    2030:	stm	sp, {r0, r7}
    2034:	mov	r0, #3
    2038:	str	r7, [sp, #8]
    203c:	bl	dcc <bandb_add@plt>
    2040:	bl	e5c <rb_make_rb_dlink_node@plt>
    2044:	cmp	r0, #0
    2048:	bne	1ed4 <parse_resv+0x664>
    204c:	ldr	r0, [pc, #164]	; 20f8 <parse_resv+0x888>
    2050:	ldr	r1, [pc, #164]	; 20fc <parse_resv+0x88c>
    2054:	ldr	r3, [pc, #164]	; 2100 <parse_resv+0x890>
    2058:	mov	r2, #144	; 0x90
    205c:	add	r0, pc, r0
    2060:	add	r1, pc, r1
    2064:	add	r3, pc, r3
    2068:	bl	f10 <__assert_fail@plt>
    206c:	bl	d9c <rb_outofmemory@plt>
    2070:	.word	0x000117ec
    2074:	.word	0x00000db0
    2078:	.word	0x00000db7
    207c:	.word	0x00011634
    2080:	.word	0x00000a5c
    2084:	.word	0x00000a63
    2088:	.word	0x00000a59
    208c:	.word	0x0001137c
    2090:	.word	0x0001136c
    2094:	.word	0x00000a29
    2098:	.word	0x00000c08
    209c:	.word	0x00000b97
    20a0:	.word	0x00000bfa
    20a4:	.word	0x000008c1
    20a8:	.word	0x000008b9
    20ac:	.word	0x000008b2
    20b0:	.word	0x0001173c
    20b4:	.word	0x00000ea7
    20b8:	.word	0x00000f61
    20bc:	.word	0x00011554
    20c0:	.word	0x00000938
    20c4:	.word	0x0000093f
    20c8:	.word	0x00000935
    20cc:	.word	0x00011258
    20d0:	.word	0x00011248
    20d4:	.word	0x00000905
    20d8:	.word	0x00000b7c
    20dc:	.word	0x00000b0b
    20e0:	.word	0x00000b6e
    20e4:	.word	0x0000083d
    20e8:	.word	0x00000835
    20ec:	.word	0x0000082e
    20f0:	.word	0x000111cc
    20f4:	.word	0x00000f5d
    20f8:	.word	0x000008ea
    20fc:	.word	0x0000088f
    2100:	.word	0x000008a7

00002104 <remove_resv>:
    2104:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2108:	add	fp, sp, #24
    210c:	sub	sp, sp, #24
    2110:	mov	r5, r2
    2114:	mov	r6, r1
    2118:	mov	r8, r0
    211c:	cmp	r1, #0
    2120:	beq	2140 <remove_resv+0x3c>
    2124:	ldrb	r0, [r6]
    2128:	ldr	r1, [pc, #1160]	; 25b8 <remove_resv+0x4b4>
    212c:	ldr	r1, [pc, r1]
    2130:	add	r0, r1, r0, lsl #2
    2134:	ldrb	r0, [r0, #1]
    2138:	tst	r0, #2
    213c:	bne	217c <remove_resv+0x78>
    2140:	ldr	r9, [pc, #1200]	; 25f8 <remove_resv+0x4f4>
    2144:	ldr	r9, [pc, r9]
    2148:	ldr	r7, [r9]
    214c:	cmp	r7, #0
    2150:	beq	2224 <remove_resv+0x120>
    2154:	ldr	r4, [r7]
    2158:	mov	r1, r6
    215c:	ldr	r0, [r4, #16]
    2160:	bl	ef8 <irccmp@plt>
    2164:	cmp	r0, #0
    2168:	beq	21d4 <remove_resv+0xd0>
    216c:	ldr	r7, [r7, #8]
    2170:	cmp	r7, #0
    2174:	bne	2154 <remove_resv+0x50>
    2178:	b	2224 <remove_resv+0x120>
    217c:	mov	r0, r6
    2180:	bl	eec <hash_find_resv@plt>
    2184:	cmp	r0, #0
    2188:	beq	2224 <remove_resv+0x120>
    218c:	mov	r4, r0
    2190:	ldr	r0, [r0, #44]	; 0x2c
    2194:	cmp	r0, #0
    2198:	beq	2294 <remove_resv+0x190>
    219c:	cmp	r5, #0
    21a0:	beq	2288 <remove_resv+0x184>
    21a4:	ldr	r0, [pc, #1064]	; 25d4 <remove_resv+0x4d0>
    21a8:	ldr	r0, [pc, r0]
    21ac:	ldr	r7, [r0]
    21b0:	cmp	r7, #0
    21b4:	beq	221c <remove_resv+0x118>
    21b8:	ldr	r0, [r7]
    21bc:	cmp	r0, r4
    21c0:	beq	23bc <remove_resv+0x2b8>
    21c4:	ldr	r7, [r7, #8]
    21c8:	cmp	r7, #0
    21cc:	bne	21b8 <remove_resv+0xb4>
    21d0:	b	221c <remove_resv+0x118>
    21d4:	cmp	r4, #0
    21d8:	beq	2224 <remove_resv+0x120>
    21dc:	ldr	r0, [r4, #44]	; 0x2c
    21e0:	cmp	r0, #0
    21e4:	beq	2328 <remove_resv+0x224>
    21e8:	cmp	r5, #0
    21ec:	beq	2288 <remove_resv+0x184>
    21f0:	ldr	r0, [pc, #1028]	; 25fc <remove_resv+0x4f8>
    21f4:	ldr	r0, [pc, r0]
    21f8:	ldr	r7, [r0]
    21fc:	cmp	r7, #0
    2200:	beq	221c <remove_resv+0x118>
    2204:	ldr	r0, [r7]
    2208:	cmp	r0, r4
    220c:	beq	23bc <remove_resv+0x2b8>
    2210:	ldr	r7, [r7, #8]
    2214:	cmp	r7, #0
    2218:	bne	2204 <remove_resv+0x100>
    221c:	sub	sp, fp, #24
    2220:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2224:	cmp	r5, #0
    2228:	beq	226c <remove_resv+0x168>
    222c:	ldr	r0, [pc, #904]	; 25bc <remove_resv+0x4b8>
    2230:	ldr	r0, [pc, r0]
    2234:	ldr	r0, [r0, #8]
    2238:	cmp	r0, #0
    223c:	beq	226c <remove_resv+0x168>
    2240:	ldr	r0, [pc, #888]	; 25c0 <remove_resv+0x4bc>
    2244:	mov	r2, #512	; 0x200
    2248:	ldr	r0, [pc, r0]
    224c:	ldr	r3, [r0]
    2250:	ldr	r0, [pc, #876]	; 25c4 <remove_resv+0x4c0>
    2254:	add	r0, pc, r0
    2258:	stm	sp, {r0, r6}
    225c:	mov	r0, r8
    2260:	ldr	r1, [pc, #864]	; 25c8 <remove_resv+0x4c4>
    2264:	add	r1, pc, r1
    2268:	bl	e08 <cluster_generic@plt>
    226c:	ldr	r1, [pc, #856]	; 25cc <remove_resv+0x4c8>
    2270:	add	r1, pc, r1
    2274:	mov	r0, r8
    2278:	mov	r2, r6
    227c:	sub	sp, fp, #24
    2280:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    2284:	b	eb0 <sendto_one_notice@plt>
    2288:	ldr	r1, [pc, #832]	; 25d0 <remove_resv+0x4cc>
    228c:	add	r1, pc, r1
    2290:	b	2274 <remove_resv+0x170>
    2294:	cmp	r5, #0
    2298:	beq	22dc <remove_resv+0x1d8>
    229c:	ldr	r0, [pc, #820]	; 25d8 <remove_resv+0x4d4>
    22a0:	ldr	r0, [pc, r0]
    22a4:	ldr	r0, [r0, #8]
    22a8:	cmp	r0, #0
    22ac:	beq	22dc <remove_resv+0x1d8>
    22b0:	ldr	r0, [pc, #804]	; 25dc <remove_resv+0x4d8>
    22b4:	mov	r2, #512	; 0x200
    22b8:	ldr	r0, [pc, r0]
    22bc:	ldr	r3, [r0]
    22c0:	ldr	r0, [pc, #792]	; 25e0 <remove_resv+0x4dc>
    22c4:	add	r0, pc, r0
    22c8:	stm	sp, {r0, r6}
    22cc:	mov	r0, r8
    22d0:	ldr	r1, [pc, #780]	; 25e4 <remove_resv+0x4e0>
    22d4:	add	r1, pc, r1
    22d8:	bl	e08 <cluster_generic@plt>
    22dc:	ldr	r1, [pc, #772]	; 25e8 <remove_resv+0x4e4>
    22e0:	mov	r0, r8
    22e4:	mov	r2, r6
    22e8:	add	r1, pc, r1
    22ec:	bl	eb0 <sendto_one_notice@plt>
    22f0:	mov	r0, r8
    22f4:	bl	df0 <get_oper_name@plt>
    22f8:	ldr	r1, [pc, #748]	; 25ec <remove_resv+0x4e8>
    22fc:	mov	r2, r0
    2300:	mov	r0, #7
    2304:	mov	r3, r6
    2308:	add	r1, pc, r1
    230c:	bl	e74 <ilog@plt>
    2310:	ldr	r0, [r4, #36]	; 0x24
    2314:	cmp	r0, #0
    2318:	beq	24cc <remove_resv+0x3c8>
    231c:	ldr	r5, [pc, #716]	; 25f0 <remove_resv+0x4ec>
    2320:	add	r5, pc, r5
    2324:	b	24e4 <remove_resv+0x3e0>
    2328:	cmp	r5, #0
    232c:	beq	2370 <remove_resv+0x26c>
    2330:	ldr	r0, [pc, #736]	; 2618 <remove_resv+0x514>
    2334:	ldr	r0, [pc, r0]
    2338:	ldr	r0, [r0, #8]
    233c:	cmp	r0, #0
    2340:	beq	2370 <remove_resv+0x26c>
    2344:	ldr	r0, [pc, #720]	; 261c <remove_resv+0x518>
    2348:	mov	r2, #512	; 0x200
    234c:	ldr	r0, [pc, r0]
    2350:	ldr	r3, [r0]
    2354:	ldr	r0, [pc, #708]	; 2620 <remove_resv+0x51c>
    2358:	add	r0, pc, r0
    235c:	stm	sp, {r0, r6}
    2360:	mov	r0, r8
    2364:	ldr	r1, [pc, #696]	; 2624 <remove_resv+0x520>
    2368:	add	r1, pc, r1
    236c:	bl	e08 <cluster_generic@plt>
    2370:	ldr	r1, [pc, #688]	; 2628 <remove_resv+0x524>
    2374:	mov	r0, r8
    2378:	mov	r2, r6
    237c:	add	r1, pc, r1
    2380:	bl	eb0 <sendto_one_notice@plt>
    2384:	mov	r0, r8
    2388:	bl	df0 <get_oper_name@plt>
    238c:	ldr	r1, [pc, #664]	; 262c <remove_resv+0x528>
    2390:	mov	r2, r0
    2394:	mov	r0, #7
    2398:	mov	r3, r6
    239c:	add	r1, pc, r1
    23a0:	bl	e74 <ilog@plt>
    23a4:	ldr	r0, [r4, #36]	; 0x24
    23a8:	cmp	r0, #0
    23ac:	beq	2520 <remove_resv+0x41c>
    23b0:	ldr	r5, [pc, #632]	; 2630 <remove_resv+0x52c>
    23b4:	add	r5, pc, r5
    23b8:	b	2538 <remove_resv+0x434>
    23bc:	ldr	r1, [pc, #572]	; 2600 <remove_resv+0x4fc>
    23c0:	mov	r0, r8
    23c4:	mov	r2, r6
    23c8:	add	r1, pc, r1
    23cc:	bl	eb0 <sendto_one_notice@plt>
    23d0:	mov	r0, r8
    23d4:	bl	df0 <get_oper_name@plt>
    23d8:	str	r6, [sp]
    23dc:	mov	r3, r0
    23e0:	mov	r0, #256	; 0x100
    23e4:	mov	r1, #0
    23e8:	mov	r9, #0
    23ec:	ldr	r2, [pc, #528]	; 2604 <remove_resv+0x500>
    23f0:	add	r2, pc, r2
    23f4:	bl	dc0 <sendto_realops_snomask@plt>
    23f8:	mov	r0, r8
    23fc:	bl	df0 <get_oper_name@plt>
    2400:	ldr	r1, [pc, #512]	; 2608 <remove_resv+0x504>
    2404:	mov	r2, r0
    2408:	mov	r0, #7
    240c:	mov	r3, r6
    2410:	add	r1, pc, r1
    2414:	bl	e74 <ilog@plt>
    2418:	bl	d48 <rb_current_time@plt>
    241c:	ldr	r1, [r4, #40]	; 0x28
    2420:	mov	r5, r0
    2424:	ldr	r0, [r4, #12]
    2428:	mov	r2, r5
    242c:	cmp	r1, r5
    2430:	addge	r2, r1, #1
    2434:	str	r2, [r4, #36]	; 0x24
    2438:	str	r2, [r4, #40]	; 0x28
    243c:	bl	db4 <operhash_delete@plt>
    2440:	mov	r0, r8
    2444:	bl	df0 <get_oper_name@plt>
    2448:	bl	e14 <operhash_add@plt>
    244c:	str	r0, [r4, #12]
    2450:	add	r1, r8, #396	; 0x18c
    2454:	ldr	r0, [r4, #4]
    2458:	ldr	ip, [r4, #16]
    245c:	ldr	r2, [r4, #40]	; 0x28
    2460:	ldr	r3, [r4, #44]	; 0x2c
    2464:	orr	r0, r0, #8912896	; 0x880000
    2468:	sub	r3, r3, r2
    246c:	str	r0, [r4, #4]
    2470:	ldr	r0, [pc, #404]	; 260c <remove_resv+0x508>
    2474:	ldr	r0, [pc, r0]
    2478:	ldr	lr, [r0]
    247c:	ldr	r6, [pc, #396]	; 2610 <remove_resv+0x50c>
    2480:	ldr	r6, [pc, r6]
    2484:	ldr	r6, [r6]
    2488:	ldr	r0, [pc, #388]	; 2614 <remove_resv+0x510>
    248c:	add	r0, pc, r0
    2490:	stm	sp, {r0, r1, ip}
    2494:	str	r2, [sp, #12]
    2498:	str	r3, [sp, #20]
    249c:	orr	r2, r6, lr
    24a0:	mov	r0, #0
    24a4:	mov	r1, #0
    24a8:	mov	r3, #0
    24ac:	str	r9, [sp, #16]
    24b0:	bl	e2c <sendto_server@plt>
    24b4:	mov	r0, r4
    24b8:	mov	r1, r7
    24bc:	mov	r2, r5
    24c0:	sub	sp, fp, #24
    24c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    24c8:	b	de4 <deactivate_conf@plt>
    24cc:	ldr	r1, [r4, #16]
    24d0:	mov	r0, #3
    24d4:	mov	r2, #0
    24d8:	bl	ebc <bandb_del@plt>
    24dc:	ldr	r5, [pc, #272]	; 25f4 <remove_resv+0x4f0>
    24e0:	add	r5, pc, r5
    24e4:	mov	r0, r8
    24e8:	bl	df0 <get_oper_name@plt>
    24ec:	mov	r3, r0
    24f0:	mov	r0, #256	; 0x100
    24f4:	mov	r1, #0
    24f8:	mov	r2, r5
    24fc:	str	r6, [sp]
    2500:	bl	dc0 <sendto_realops_snomask@plt>
    2504:	mov	r0, r6
    2508:	mov	r1, r4
    250c:	bl	e8c <del_from_resv_hash@plt>
    2510:	mov	r0, r4
    2514:	sub	sp, fp, #24
    2518:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    251c:	b	e50 <free_conf@plt>
    2520:	ldr	r1, [r4, #16]
    2524:	mov	r0, #3
    2528:	mov	r2, #0
    252c:	bl	ebc <bandb_del@plt>
    2530:	ldr	r5, [pc, #252]	; 2634 <remove_resv+0x530>
    2534:	add	r5, pc, r5
    2538:	mov	r0, r8
    253c:	bl	df0 <get_oper_name@plt>
    2540:	mov	r3, r0
    2544:	mov	r0, #256	; 0x100
    2548:	mov	r1, #0
    254c:	mov	r2, r5
    2550:	str	r6, [sp]
    2554:	bl	dc0 <sendto_realops_snomask@plt>
    2558:	ldr	r0, [r7, #8]
    255c:	ldr	r1, [r7, #4]
    2560:	cmp	r0, #0
    2564:	beq	2574 <remove_resv+0x470>
    2568:	str	r1, [r0, #4]
    256c:	ldr	r1, [r7, #4]
    2570:	b	2578 <remove_resv+0x474>
    2574:	str	r1, [r9, #4]
    2578:	cmp	r1, #0
    257c:	mov	r2, r9
    2580:	addne	r2, r1, #8
    2584:	str	r0, [r2]
    2588:	mov	r0, #0
    258c:	str	r0, [r7, #4]
    2590:	str	r0, [r7, #8]
    2594:	ldr	r0, [r9, #8]
    2598:	sub	r0, r0, #1
    259c:	str	r0, [r9, #8]
    25a0:	mov	r0, r7
    25a4:	bl	dfc <rb_free_rb_dlink_node@plt>
    25a8:	mov	r0, r4
    25ac:	sub	sp, fp, #24
    25b0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    25b4:	b	e50 <free_conf@plt>
    25b8:	.word	0x00010fa0
    25bc:	.word	0x00010e98
    25c0:	.word	0x00010e70
    25c4:	.word	0x000004fd
    25c8:	.word	0x000003d4
    25cc:	.word	0x000006e0
    25d0:	.word	0x000006d4
    25d4:	.word	0x00010f0c
    25d8:	.word	0x00010e28
    25dc:	.word	0x00010e00
    25e0:	.word	0x0000048d
    25e4:	.word	0x00000364
    25e8:	.word	0x000006aa
    25ec:	.word	0x000006cd
    25f0:	.word	0x000006fe
    25f4:	.word	0x0000051c
    25f8:	.word	0x00010f6c
    25fc:	.word	0x00010ec0
    2600:	.word	0x000005ca
    2604:	.word	0x000005bc
    2608:	.word	0x000005c5
    260c:	.word	0x00010c48
    2610:	.word	0x00010c40
    2614:	.word	0x00000552
    2618:	.word	0x00010d94
    261c:	.word	0x00010d6c
    2620:	.word	0x000003f9
    2624:	.word	0x000002d0
    2628:	.word	0x00000616
    262c:	.word	0x00000639
    2630:	.word	0x0000066a
    2634:	.word	0x000004c8

Disassembly of section .fini:

00002638 <_fini>:
    2638:	push	{r3, lr}
    263c:	pop	{r3, pc}
