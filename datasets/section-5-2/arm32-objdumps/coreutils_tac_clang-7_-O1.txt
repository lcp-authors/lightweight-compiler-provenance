
../repos/coreutils/src/tac:     file format elf32-littlearm


Disassembly of section .init:

0001126c <.init>:
   1126c:	push	{r3, lr}
   11270:	bl	11628 <__mempcpy_chk@plt+0x48>
   11274:	pop	{r3, pc}

Disassembly of section .plt:

00011278 <pthread_mutex_unlock@plt-0x14>:
   11278:	push	{lr}		; (str lr, [sp, #-4]!)
   1127c:	ldr	lr, [pc, #4]	; 11288 <pthread_mutex_unlock@plt-0x4>
   11280:	add	lr, pc, lr
   11284:	ldr	pc, [lr, #8]!
   11288:	andeq	r2, r2, r8, ror sp

0001128c <pthread_mutex_unlock@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #139264	; 0x22000
   11294:	ldr	pc, [ip, #3448]!	; 0xd78

00011298 <fdopen@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #139264	; 0x22000
   112a0:	ldr	pc, [ip, #3440]!	; 0xd70

000112a4 <calloc@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #139264	; 0x22000
   112ac:	ldr	pc, [ip, #3432]!	; 0xd68

000112b0 <fputs_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #139264	; 0x22000
   112b8:	ldr	pc, [ip, #3424]!	; 0xd60

000112bc <wctype@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #139264	; 0x22000
   112c4:	ldr	pc, [ip, #3416]!	; 0xd58

000112c8 <raise@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #139264	; 0x22000
   112d0:	ldr	pc, [ip, #3408]!	; 0xd50

000112d4 <wcrtomb@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #139264	; 0x22000
   112dc:	ldr	pc, [ip, #3400]!	; 0xd48

000112e0 <iswctype@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #139264	; 0x22000
   112e8:	ldr	pc, [ip, #3392]!	; 0xd40

000112ec <strcmp@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #139264	; 0x22000
   112f4:	ldr	pc, [ip, #3384]!	; 0xd38

000112f8 <read@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #139264	; 0x22000
   11300:	ldr	pc, [ip, #3376]!	; 0xd30

00011304 <pthread_mutex_destroy@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #139264	; 0x22000
   1130c:	ldr	pc, [ip, #3368]!	; 0xd28

00011310 <fflush@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #139264	; 0x22000
   11318:	ldr	pc, [ip, #3360]!	; 0xd20

0001131c <memmove@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #139264	; 0x22000
   11324:	ldr	pc, [ip, #3352]!	; 0xd18

00011328 <free@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #139264	; 0x22000
   11330:	ldr	pc, [ip, #3344]!	; 0xd10

00011334 <pthread_mutex_lock@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #139264	; 0x22000
   1133c:	ldr	pc, [ip, #3336]!	; 0xd08

00011340 <_exit@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #139264	; 0x22000
   11348:	ldr	pc, [ip, #3328]!	; 0xd00

0001134c <memcpy@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #139264	; 0x22000
   11354:	ldr	pc, [ip, #3320]!	; 0xcf8

00011358 <tolower@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #139264	; 0x22000
   11360:	ldr	pc, [ip, #3312]!	; 0xcf0

00011364 <pthread_mutex_init@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #139264	; 0x22000
   1136c:	ldr	pc, [ip, #3304]!	; 0xce8

00011370 <towlower@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #139264	; 0x22000
   11378:	ldr	pc, [ip, #3296]!	; 0xce0

0001137c <mbsinit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #139264	; 0x22000
   11384:	ldr	pc, [ip, #3288]!	; 0xcd8

00011388 <ftruncate64@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #139264	; 0x22000
   11390:	ldr	pc, [ip, #3280]!	; 0xcd0

00011394 <fwrite_unlocked@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #139264	; 0x22000
   1139c:	ldr	pc, [ip, #3272]!	; 0xcc8

000113a0 <memcmp@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #139264	; 0x22000
   113a8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113ac <dcgettext@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #139264	; 0x22000
   113b4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113b8 <unlink@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #139264	; 0x22000
   113c0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113c4 <realloc@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #139264	; 0x22000
   113cc:	ldr	pc, [ip, #3240]!	; 0xca8

000113d0 <textdomain@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #139264	; 0x22000
   113d8:	ldr	pc, [ip, #3232]!	; 0xca0

000113dc <fflush_unlocked@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #139264	; 0x22000
   113e4:	ldr	pc, [ip, #3224]!	; 0xc98

000113e8 <iswprint@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #139264	; 0x22000
   113f0:	ldr	pc, [ip, #3216]!	; 0xc90

000113f4 <mkostemp64@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #139264	; 0x22000
   113fc:	ldr	pc, [ip, #3208]!	; 0xc88

00011400 <fwrite@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #139264	; 0x22000
   11408:	ldr	pc, [ip, #3200]!	; 0xc80

0001140c <lseek64@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #139264	; 0x22000
   11414:	ldr	pc, [ip, #3192]!	; 0xc78

00011418 <__ctype_get_mb_cur_max@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #139264	; 0x22000
   11420:	ldr	pc, [ip, #3184]!	; 0xc70

00011424 <__fpending@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #139264	; 0x22000
   1142c:	ldr	pc, [ip, #3176]!	; 0xc68

00011430 <ferror_unlocked@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #139264	; 0x22000
   11438:	ldr	pc, [ip, #3168]!	; 0xc60

0001143c <mbrtowc@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #139264	; 0x22000
   11444:	ldr	pc, [ip, #3160]!	; 0xc58

00011448 <error@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #139264	; 0x22000
   11450:	ldr	pc, [ip, #3152]!	; 0xc50

00011454 <open64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #139264	; 0x22000
   1145c:	ldr	pc, [ip, #3144]!	; 0xc48

00011460 <getenv@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #139264	; 0x22000
   11468:	ldr	pc, [ip, #3136]!	; 0xc40

0001146c <mkstemp64@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #139264	; 0x22000
   11474:	ldr	pc, [ip, #3128]!	; 0xc38

00011478 <malloc@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #139264	; 0x22000
   11480:	ldr	pc, [ip, #3120]!	; 0xc30

00011484 <__libc_start_main@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #139264	; 0x22000
   1148c:	ldr	pc, [ip, #3112]!	; 0xc28

00011490 <__freading@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #139264	; 0x22000
   11498:	ldr	pc, [ip, #3104]!	; 0xc20

0001149c <__gmon_start__@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #139264	; 0x22000
   114a4:	ldr	pc, [ip, #3096]!	; 0xc18

000114a8 <getopt_long@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #139264	; 0x22000
   114b0:	ldr	pc, [ip, #3088]!	; 0xc10

000114b4 <__ctype_b_loc@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #139264	; 0x22000
   114bc:	ldr	pc, [ip, #3080]!	; 0xc08

000114c0 <exit@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #139264	; 0x22000
   114c8:	ldr	pc, [ip, #3072]!	; 0xc00

000114cc <strlen@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #139264	; 0x22000
   114d4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114d8 <__errno_location@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #139264	; 0x22000
   114e0:	ldr	pc, [ip, #3056]!	; 0xbf0

000114e4 <iswalnum@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #139264	; 0x22000
   114ec:	ldr	pc, [ip, #3048]!	; 0xbe8

000114f0 <__cxa_atexit@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #139264	; 0x22000
   114f8:	ldr	pc, [ip, #3040]!	; 0xbe0

000114fc <memset@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #139264	; 0x22000
   11504:	ldr	pc, [ip, #3032]!	; 0xbd8

00011508 <btowc@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #139264	; 0x22000
   11510:	ldr	pc, [ip, #3024]!	; 0xbd0

00011514 <__printf_chk@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #139264	; 0x22000
   1151c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011520 <fileno@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #139264	; 0x22000
   11528:	ldr	pc, [ip, #3008]!	; 0xbc0

0001152c <__fprintf_chk@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #139264	; 0x22000
   11534:	ldr	pc, [ip, #3000]!	; 0xbb8

00011538 <fclose@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #139264	; 0x22000
   11540:	ldr	pc, [ip, #2992]!	; 0xbb0

00011544 <fseeko64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #139264	; 0x22000
   1154c:	ldr	pc, [ip, #2984]!	; 0xba8

00011550 <fcntl64@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #139264	; 0x22000
   11558:	ldr	pc, [ip, #2976]!	; 0xba0

0001155c <setlocale@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #139264	; 0x22000
   11564:	ldr	pc, [ip, #2968]!	; 0xb98

00011568 <toupper@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #139264	; 0x22000
   11570:	ldr	pc, [ip, #2960]!	; 0xb90

00011574 <strrchr@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #139264	; 0x22000
   1157c:	ldr	pc, [ip, #2952]!	; 0xb88

00011580 <nl_langinfo@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #139264	; 0x22000
   11588:	ldr	pc, [ip, #2944]!	; 0xb80

0001158c <clearerr_unlocked@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #139264	; 0x22000
   11594:	ldr	pc, [ip, #2936]!	; 0xb78

00011598 <bindtextdomain@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #139264	; 0x22000
   115a0:	ldr	pc, [ip, #2928]!	; 0xb70

000115a4 <isatty@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #139264	; 0x22000
   115ac:	ldr	pc, [ip, #2920]!	; 0xb68

000115b0 <towupper@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #139264	; 0x22000
   115b8:	ldr	pc, [ip, #2912]!	; 0xb60

000115bc <strncmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #139264	; 0x22000
   115c4:	ldr	pc, [ip, #2904]!	; 0xb58

000115c8 <abort@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #139264	; 0x22000
   115d0:	ldr	pc, [ip, #2896]!	; 0xb50

000115d4 <close@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #139264	; 0x22000
   115dc:	ldr	pc, [ip, #2888]!	; 0xb48

000115e0 <__mempcpy_chk@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #139264	; 0x22000
   115e8:	ldr	pc, [ip, #2880]!	; 0xb40

Disassembly of section .text:

000115ec <.text>:
   115ec:	mov	fp, #0
   115f0:	mov	lr, #0
   115f4:	pop	{r1}		; (ldr r1, [sp], #4)
   115f8:	mov	r2, sp
   115fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11600:	push	{r0}		; (str r0, [sp, #-4]!)
   11604:	ldr	ip, [pc, #16]	; 1161c <__mempcpy_chk@plt+0x3c>
   11608:	push	{ip}		; (str ip, [sp, #-4]!)
   1160c:	ldr	r0, [pc, #12]	; 11620 <__mempcpy_chk@plt+0x40>
   11610:	ldr	r3, [pc, #12]	; 11624 <__mempcpy_chk@plt+0x44>
   11614:	bl	11484 <__libc_start_main@plt>
   11618:	bl	115c8 <abort@plt>
   1161c:	muleq	r2, r0, ip
   11620:	ldrdeq	r1, [r1], -r0
   11624:	andeq	r2, r2, r0, lsr ip
   11628:	ldr	r3, [pc, #20]	; 11644 <__mempcpy_chk@plt+0x64>
   1162c:	ldr	r2, [pc, #20]	; 11648 <__mempcpy_chk@plt+0x68>
   11630:	add	r3, pc, r3
   11634:	ldr	r2, [r3, r2]
   11638:	cmp	r2, #0
   1163c:	bxeq	lr
   11640:	b	1149c <__gmon_start__@plt>
   11644:	andeq	r2, r2, r8, asr #19
   11648:	andeq	r0, r0, ip, lsr #2
   1164c:	ldr	r0, [pc, #24]	; 1166c <__mempcpy_chk@plt+0x8c>
   11650:	ldr	r3, [pc, #24]	; 11670 <__mempcpy_chk@plt+0x90>
   11654:	cmp	r3, r0
   11658:	bxeq	lr
   1165c:	ldr	r3, [pc, #16]	; 11674 <__mempcpy_chk@plt+0x94>
   11660:	cmp	r3, #0
   11664:	bxeq	lr
   11668:	bx	r3
   1166c:	andeq	r4, r3, r0, lsl #3
   11670:	andeq	r4, r3, r0, lsl #3
   11674:	andeq	r0, r0, r0
   11678:	ldr	r0, [pc, #36]	; 116a4 <__mempcpy_chk@plt+0xc4>
   1167c:	ldr	r1, [pc, #36]	; 116a8 <__mempcpy_chk@plt+0xc8>
   11680:	sub	r1, r1, r0
   11684:	asr	r1, r1, #2
   11688:	add	r1, r1, r1, lsr #31
   1168c:	asrs	r1, r1, #1
   11690:	bxeq	lr
   11694:	ldr	r3, [pc, #16]	; 116ac <__mempcpy_chk@plt+0xcc>
   11698:	cmp	r3, #0
   1169c:	bxeq	lr
   116a0:	bx	r3
   116a4:	andeq	r4, r3, r0, lsl #3
   116a8:	andeq	r4, r3, r0, lsl #3
   116ac:	andeq	r0, r0, r0
   116b0:	push	{r4, lr}
   116b4:	ldr	r4, [pc, #24]	; 116d4 <__mempcpy_chk@plt+0xf4>
   116b8:	ldrb	r3, [r4]
   116bc:	cmp	r3, #0
   116c0:	popne	{r4, pc}
   116c4:	bl	1164c <__mempcpy_chk@plt+0x6c>
   116c8:	mov	r3, #1
   116cc:	strb	r3, [r4]
   116d0:	pop	{r4, pc}
   116d4:	muleq	r3, ip, r1
   116d8:	b	11678 <__mempcpy_chk@plt+0x98>
   116dc:	push	{fp, lr}
   116e0:	mov	fp, sp
   116e4:	mov	r4, r0
   116e8:	cmp	r0, #0
   116ec:	bne	117a8 <__mempcpy_chk@plt+0x1c8>
   116f0:	movw	r1, #11491	; 0x2ce3
   116f4:	movt	r1, #2
   116f8:	mov	r0, #0
   116fc:	mov	r2, #5
   11700:	bl	113ac <dcgettext@plt>
   11704:	mov	r1, r0
   11708:	movw	r0, #25344	; 0x6300
   1170c:	movt	r0, #3
   11710:	ldr	r2, [r0]
   11714:	mov	r0, #1
   11718:	bl	11514 <__printf_chk@plt>
   1171c:	movw	r1, #11524	; 0x2d04
   11720:	movt	r1, #2
   11724:	mov	r0, #0
   11728:	mov	r2, #5
   1172c:	bl	113ac <dcgettext@plt>
   11730:	movw	r5, #16788	; 0x4194
   11734:	movt	r5, #3
   11738:	ldr	r1, [r5]
   1173c:	bl	112b0 <fputs_unlocked@plt>
   11740:	bl	117ec <__mempcpy_chk@plt+0x20c>
   11744:	bl	1181c <__mempcpy_chk@plt+0x23c>
   11748:	movw	r1, #11578	; 0x2d3a
   1174c:	movt	r1, #2
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	113ac <dcgettext@plt>
   1175c:	ldr	r1, [r5]
   11760:	bl	112b0 <fputs_unlocked@plt>
   11764:	movw	r1, #11800	; 0x2e18
   11768:	movt	r1, #2
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	bl	113ac <dcgettext@plt>
   11778:	ldr	r1, [r5]
   1177c:	bl	112b0 <fputs_unlocked@plt>
   11780:	movw	r1, #11845	; 0x2e45
   11784:	movt	r1, #2
   11788:	mov	r0, #0
   1178c:	mov	r2, #5
   11790:	bl	113ac <dcgettext@plt>
   11794:	ldr	r1, [r5]
   11798:	bl	112b0 <fputs_unlocked@plt>
   1179c:	bl	1184c <__mempcpy_chk@plt+0x26c>
   117a0:	mov	r0, r4
   117a4:	bl	114c0 <exit@plt>
   117a8:	movw	r0, #16784	; 0x4190
   117ac:	movt	r0, #3
   117b0:	ldr	r5, [r0]
   117b4:	movw	r1, #11452	; 0x2cbc
   117b8:	movt	r1, #2
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	bl	113ac <dcgettext@plt>
   117c8:	mov	r2, r0
   117cc:	movw	r0, #25344	; 0x6300
   117d0:	movt	r0, #3
   117d4:	ldr	r3, [r0]
   117d8:	mov	r0, r5
   117dc:	mov	r1, #1
   117e0:	bl	1152c <__fprintf_chk@plt>
   117e4:	mov	r0, r4
   117e8:	bl	114c0 <exit@plt>
   117ec:	push	{fp, lr}
   117f0:	mov	fp, sp
   117f4:	movw	r1, #12000	; 0x2ee0
   117f8:	movt	r1, #2
   117fc:	mov	r0, #0
   11800:	mov	r2, #5
   11804:	bl	113ac <dcgettext@plt>
   11808:	movw	r1, #16788	; 0x4194
   1180c:	movt	r1, #3
   11810:	ldr	r1, [r1]
   11814:	pop	{fp, lr}
   11818:	b	112b0 <fputs_unlocked@plt>
   1181c:	push	{fp, lr}
   11820:	mov	fp, sp
   11824:	movw	r1, #12056	; 0x2f18
   11828:	movt	r1, #2
   1182c:	mov	r0, #0
   11830:	mov	r2, #5
   11834:	bl	113ac <dcgettext@plt>
   11838:	movw	r1, #16788	; 0x4194
   1183c:	movt	r1, #3
   11840:	ldr	r1, [r1]
   11844:	pop	{fp, lr}
   11848:	b	112b0 <fputs_unlocked@plt>
   1184c:	push	{r4, r5, fp, lr}
   11850:	add	fp, sp, #8
   11854:	sub	sp, sp, #56	; 0x38
   11858:	movw	r0, #12856	; 0x3238
   1185c:	movt	r0, #2
   11860:	add	r1, r0, #32
   11864:	mov	r5, sp
   11868:	mov	r2, #48	; 0x30
   1186c:	vld1.64	{d16-d17}, [r1]
   11870:	add	r1, r5, #32
   11874:	add	r3, r0, #16
   11878:	vld1.64	{d18-d19}, [r0], r2
   1187c:	vld1.64	{d20-d21}, [r3]
   11880:	vldr	d22, [r0]
   11884:	vst1.64	{d16-d17}, [r1]
   11888:	add	r0, r5, #16
   1188c:	vst1.64	{d20-d21}, [r0]
   11890:	mov	r0, r5
   11894:	vst1.64	{d18-d19}, [r0], r2
   11898:	vstr	d22, [r0]
   1189c:	ldr	r1, [sp]
   118a0:	cmp	r1, #0
   118a4:	beq	118cc <__mempcpy_chk@plt+0x2ec>
   118a8:	mov	r5, sp
   118ac:	movw	r4, #11899	; 0x2e7b
   118b0:	movt	r4, #2
   118b4:	mov	r0, r4
   118b8:	bl	112ec <strcmp@plt>
   118bc:	cmp	r0, #0
   118c0:	ldrne	r1, [r5, #8]!
   118c4:	cmpne	r1, #0
   118c8:	bne	118b4 <__mempcpy_chk@plt+0x2d4>
   118cc:	ldr	r4, [r5, #4]
   118d0:	movw	r1, #12226	; 0x2fc2
   118d4:	movt	r1, #2
   118d8:	mov	r0, #0
   118dc:	mov	r2, #5
   118e0:	bl	113ac <dcgettext@plt>
   118e4:	mov	r1, r0
   118e8:	movw	r2, #11932	; 0x2e9c
   118ec:	movt	r2, #2
   118f0:	movw	r3, #12249	; 0x2fd9
   118f4:	movt	r3, #2
   118f8:	mov	r0, #1
   118fc:	bl	11514 <__printf_chk@plt>
   11900:	movw	r5, #11899	; 0x2e7b
   11904:	movt	r5, #2
   11908:	cmp	r4, #0
   1190c:	moveq	r4, r5
   11910:	mov	r0, #5
   11914:	mov	r1, #0
   11918:	bl	1155c <setlocale@plt>
   1191c:	cmp	r0, #0
   11920:	beq	11960 <__mempcpy_chk@plt+0x380>
   11924:	movw	r1, #12289	; 0x3001
   11928:	movt	r1, #2
   1192c:	mov	r2, #3
   11930:	bl	115bc <strncmp@plt>
   11934:	cmp	r0, #0
   11938:	beq	11960 <__mempcpy_chk@plt+0x380>
   1193c:	movw	r1, #12293	; 0x3005
   11940:	movt	r1, #2
   11944:	mov	r0, #0
   11948:	mov	r2, #5
   1194c:	bl	113ac <dcgettext@plt>
   11950:	movw	r1, #16788	; 0x4194
   11954:	movt	r1, #3
   11958:	ldr	r1, [r1]
   1195c:	bl	112b0 <fputs_unlocked@plt>
   11960:	movw	r1, #12364	; 0x304c
   11964:	movt	r1, #2
   11968:	mov	r0, #0
   1196c:	mov	r2, #5
   11970:	bl	113ac <dcgettext@plt>
   11974:	mov	r1, r0
   11978:	movw	r2, #12249	; 0x2fd9
   1197c:	movt	r2, #2
   11980:	mov	r0, #1
   11984:	mov	r3, r5
   11988:	bl	11514 <__printf_chk@plt>
   1198c:	movw	r1, #12391	; 0x3067
   11990:	movt	r1, #2
   11994:	mov	r0, #0
   11998:	mov	r2, #5
   1199c:	bl	113ac <dcgettext@plt>
   119a0:	mov	r1, r0
   119a4:	movw	r0, #12159	; 0x2f7f
   119a8:	movt	r0, #2
   119ac:	movw	r3, #12441	; 0x3099
   119b0:	movt	r3, #2
   119b4:	cmp	r4, r5
   119b8:	moveq	r3, r0
   119bc:	mov	r0, #1
   119c0:	mov	r2, r4
   119c4:	bl	11514 <__printf_chk@plt>
   119c8:	sub	sp, fp, #8
   119cc:	pop	{r4, r5, fp, pc}
   119d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119d4:	add	fp, sp, #28
   119d8:	sub	sp, sp, #12
   119dc:	mov	r9, r1
   119e0:	mov	sl, r0
   119e4:	ldr	r0, [r1]
   119e8:	bl	12c68 <__mempcpy_chk@plt+0x1688>
   119ec:	movw	r1, #12441	; 0x3099
   119f0:	movt	r1, #2
   119f4:	mov	r0, #6
   119f8:	bl	1155c <setlocale@plt>
   119fc:	movw	r6, #11936	; 0x2ea0
   11a00:	movt	r6, #2
   11a04:	movw	r1, #11903	; 0x2e7f
   11a08:	movt	r1, #2
   11a0c:	mov	r0, r6
   11a10:	bl	11598 <bindtextdomain@plt>
   11a14:	mov	r0, r6
   11a18:	bl	113d0 <textdomain@plt>
   11a1c:	movw	r0, #10708	; 0x29d4
   11a20:	movt	r0, #1
   11a24:	bl	22c94 <__mempcpy_chk@plt+0x116b4>
   11a28:	movw	r1, #16800	; 0x41a0
   11a2c:	movt	r1, #3
   11a30:	movw	r0, #12440	; 0x3098
   11a34:	movt	r0, #2
   11a38:	str	r0, [r1]
   11a3c:	movw	r4, #16804	; 0x41a4
   11a40:	movt	r4, #3
   11a44:	mov	r0, #1
   11a48:	str	r0, [r4]
   11a4c:	movw	r5, #16808	; 0x41a8
   11a50:	movt	r5, #3
   11a54:	strb	r0, [r5]
   11a58:	mov	r8, #0
   11a5c:	movw	r6, #11927	; 0x2e97
   11a60:	movt	r6, #2
   11a64:	movw	r7, #12760	; 0x31d8
   11a68:	movt	r7, #2
   11a6c:	b	11a88 <__mempcpy_chk@plt+0x4a8>
   11a70:	movw	r0, #16792	; 0x4198
   11a74:	movt	r0, #3
   11a78:	ldr	r0, [r0]
   11a7c:	movw	r1, #16800	; 0x41a0
   11a80:	movt	r1, #3
   11a84:	str	r0, [r1]
   11a88:	str	r8, [sp]
   11a8c:	mov	r0, sl
   11a90:	mov	r1, r9
   11a94:	mov	r2, r6
   11a98:	mov	r3, r7
   11a9c:	bl	114a8 <getopt_long@plt>
   11aa0:	cmp	r0, #97	; 0x61
   11aa4:	ble	11ad0 <__mempcpy_chk@plt+0x4f0>
   11aa8:	cmp	r0, #115	; 0x73
   11aac:	beq	11a70 <__mempcpy_chk@plt+0x490>
   11ab0:	cmp	r0, #114	; 0x72
   11ab4:	bne	11ac0 <__mempcpy_chk@plt+0x4e0>
   11ab8:	str	r8, [r4]
   11abc:	b	11a88 <__mempcpy_chk@plt+0x4a8>
   11ac0:	cmp	r0, #98	; 0x62
   11ac4:	bne	11d38 <__mempcpy_chk@plt+0x758>
   11ac8:	strb	r8, [r5]
   11acc:	b	11a88 <__mempcpy_chk@plt+0x4a8>
   11ad0:	cmn	r0, #1
   11ad4:	bne	11ccc <__mempcpy_chk@plt+0x6ec>
   11ad8:	movw	r8, #16800	; 0x41a0
   11adc:	movt	r8, #3
   11ae0:	ldr	r6, [r8]
   11ae4:	ldrb	r0, [r6]
   11ae8:	ldr	r1, [r4]
   11aec:	cmp	r1, #0
   11af0:	beq	11b08 <__mempcpy_chk@plt+0x528>
   11af4:	cmp	r0, #0
   11af8:	beq	11b5c <__mempcpy_chk@plt+0x57c>
   11afc:	mov	r0, r6
   11b00:	bl	114cc <strlen@plt>
   11b04:	b	11b60 <__mempcpy_chk@plt+0x580>
   11b08:	cmp	r0, #0
   11b0c:	beq	11d40 <__mempcpy_chk@plt+0x760>
   11b10:	movw	r7, #16812	; 0x41ac
   11b14:	movt	r7, #3
   11b18:	mov	r0, #0
   11b1c:	str	r0, [r7]
   11b20:	str	r0, [r7, #4]
   11b24:	movw	r1, #16844	; 0x41cc
   11b28:	movt	r1, #3
   11b2c:	str	r1, [r7, #16]
   11b30:	str	r0, [r7, #20]
   11b34:	mov	r0, r6
   11b38:	bl	114cc <strlen@plt>
   11b3c:	mov	r1, r0
   11b40:	mov	r0, r6
   11b44:	mov	r2, r7
   11b48:	bl	148b4 <__mempcpy_chk@plt+0x32d4>
   11b4c:	cmp	r0, #0
   11b50:	bne	11d64 <__mempcpy_chk@plt+0x784>
   11b54:	ldr	r0, [r4]
   11b58:	b	11b70 <__mempcpy_chk@plt+0x590>
   11b5c:	mov	r0, #1
   11b60:	movw	r1, #17100	; 0x42cc
   11b64:	movt	r1, #3
   11b68:	str	r0, [r1]
   11b6c:	str	r0, [r4]
   11b70:	movw	r2, #17104	; 0x42d0
   11b74:	movt	r2, #3
   11b78:	mov	r1, #8192	; 0x2000
   11b7c:	str	r1, [r2]
   11b80:	cmp	r0, #4096	; 0x1000
   11b84:	bcc	11bb8 <__mempcpy_chk@plt+0x5d8>
   11b88:	ldr	r0, [r4]
   11b8c:	mov	r3, #8192	; 0x2000
   11b90:	lsl	r1, r3, #1
   11b94:	bic	r3, r3, #-2147483647	; 0x80000001
   11b98:	cmp	r0, r3
   11b9c:	bcc	11bb4 <__mempcpy_chk@plt+0x5d4>
   11ba0:	cmn	r1, #1
   11ba4:	mov	r3, r1
   11ba8:	bgt	11b90 <__mempcpy_chk@plt+0x5b0>
   11bac:	str	r1, [r2]
   11bb0:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   11bb4:	str	r1, [r2]
   11bb8:	orr	r2, r1, #1
   11bbc:	add	r2, r2, r0
   11bc0:	lsl	r0, r2, #1
   11bc4:	movw	r3, #17108	; 0x42d4
   11bc8:	movt	r3, #3
   11bcc:	str	r0, [r3]
   11bd0:	cmp	r1, r2
   11bd4:	cmpcc	r2, r0
   11bd8:	bcc	11be0 <__mempcpy_chk@plt+0x600>
   11bdc:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   11be0:	bl	21ad0 <__mempcpy_chk@plt+0x104f0>
   11be4:	mov	r6, r0
   11be8:	movw	r5, #17112	; 0x42d8
   11bec:	movt	r5, #3
   11bf0:	str	r0, [r5]
   11bf4:	ldr	r4, [r4]
   11bf8:	mov	r7, #1
   11bfc:	cmp	r4, #0
   11c00:	mov	r0, #1
   11c04:	beq	11c1c <__mempcpy_chk@plt+0x63c>
   11c08:	ldr	r1, [r8]
   11c0c:	add	r2, r4, #1
   11c10:	mov	r0, r6
   11c14:	bl	1134c <memcpy@plt>
   11c18:	mov	r0, r4
   11c1c:	add	r0, r6, r0
   11c20:	str	r0, [r5]
   11c24:	movw	r0, #16776	; 0x4188
   11c28:	movt	r0, #3
   11c2c:	ldr	r4, [r0]
   11c30:	mov	r0, #1
   11c34:	mov	r1, #0
   11c38:	bl	21ec8 <__mempcpy_chk@plt+0x108e8>
   11c3c:	movw	r1, #12752	; 0x31d0
   11c40:	movt	r1, #2
   11c44:	cmp	r4, sl
   11c48:	addlt	r1, r9, r4, lsl #2
   11c4c:	ldr	r0, [r1]
   11c50:	cmp	r0, #0
   11c54:	beq	11c74 <__mempcpy_chk@plt+0x694>
   11c58:	add	r4, r1, #4
   11c5c:	mov	r7, #1
   11c60:	bl	11d7c <__mempcpy_chk@plt+0x79c>
   11c64:	and	r7, r7, r0
   11c68:	ldr	r0, [r4], #4
   11c6c:	cmp	r0, #0
   11c70:	bne	11c60 <__mempcpy_chk@plt+0x680>
   11c74:	mov	r0, #0
   11c78:	mov	r1, #0
   11c7c:	bl	11ef8 <__mempcpy_chk@plt+0x918>
   11c80:	movw	r0, #17116	; 0x42dc
   11c84:	movt	r0, #3
   11c88:	ldrb	r0, [r0]
   11c8c:	cmp	r0, #0
   11c90:	beq	11cc0 <__mempcpy_chk@plt+0x6e0>
   11c94:	mov	r0, #0
   11c98:	bl	115d4 <close@plt>
   11c9c:	cmn	r0, #1
   11ca0:	bgt	11cc0 <__mempcpy_chk@plt+0x6e0>
   11ca4:	bl	114d8 <__errno_location@plt>
   11ca8:	ldr	r1, [r0]
   11cac:	movw	r2, #13000	; 0x32c8
   11cb0:	movt	r2, #2
   11cb4:	mov	r0, #0
   11cb8:	bl	11448 <error@plt>
   11cbc:	mov	r7, #0
   11cc0:	eor	r0, r7, #1
   11cc4:	sub	sp, fp, #28
   11cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ccc:	cmn	r0, #3
   11cd0:	bne	11d28 <__mempcpy_chk@plt+0x748>
   11cd4:	movw	r0, #16696	; 0x4138
   11cd8:	movt	r0, #3
   11cdc:	ldr	r3, [r0]
   11ce0:	movw	r0, #16788	; 0x4194
   11ce4:	movt	r0, #3
   11ce8:	ldr	r0, [r0]
   11cec:	mov	r1, #0
   11cf0:	movw	r2, #11958	; 0x2eb6
   11cf4:	movt	r2, #2
   11cf8:	movw	r7, #11946	; 0x2eaa
   11cfc:	movt	r7, #2
   11d00:	str	r7, [sp]
   11d04:	str	r2, [sp, #4]
   11d08:	str	r1, [sp, #8]
   11d0c:	movw	r1, #11899	; 0x2e7b
   11d10:	movt	r1, #2
   11d14:	movw	r2, #11932	; 0x2e9c
   11d18:	movt	r2, #2
   11d1c:	bl	219c8 <__mempcpy_chk@plt+0x103e8>
   11d20:	mov	r0, #0
   11d24:	bl	114c0 <exit@plt>
   11d28:	cmn	r0, #2
   11d2c:	bne	11d38 <__mempcpy_chk@plt+0x758>
   11d30:	mov	r0, #0
   11d34:	bl	116dc <__mempcpy_chk@plt+0xfc>
   11d38:	mov	r0, #1
   11d3c:	bl	116dc <__mempcpy_chk@plt+0xfc>
   11d40:	movw	r1, #11974	; 0x2ec6
   11d44:	movt	r1, #2
   11d48:	mov	r0, #0
   11d4c:	mov	r2, #5
   11d50:	bl	113ac <dcgettext@plt>
   11d54:	mov	r2, r0
   11d58:	mov	r0, #1
   11d5c:	mov	r1, #0
   11d60:	bl	11448 <error@plt>
   11d64:	mov	r3, r0
   11d68:	movw	r2, #12931	; 0x3283
   11d6c:	movt	r2, #2
   11d70:	mov	r0, #1
   11d74:	mov	r1, #0
   11d78:	bl	11448 <error@plt>
   11d7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d80:	add	fp, sp, #24
   11d84:	sub	sp, sp, #8
   11d88:	mov	r4, r0
   11d8c:	movw	r1, #13000	; 0x32c8
   11d90:	movt	r1, #2
   11d94:	bl	112ec <strcmp@plt>
   11d98:	mov	r5, r0
   11d9c:	cmp	r0, #0
   11da0:	beq	11dc4 <__mempcpy_chk@plt+0x7e4>
   11da4:	mov	r6, #0
   11da8:	mov	r0, r4
   11dac:	mov	r1, #0
   11db0:	bl	11454 <open64@plt>
   11db4:	cmn	r0, #1
   11db8:	ble	11e44 <__mempcpy_chk@plt+0x864>
   11dbc:	mov	r7, r0
   11dc0:	b	11dfc <__mempcpy_chk@plt+0x81c>
   11dc4:	movw	r0, #17116	; 0x42dc
   11dc8:	movt	r0, #3
   11dcc:	mov	r1, #1
   11dd0:	strb	r1, [r0]
   11dd4:	mov	r7, #0
   11dd8:	movw	r1, #12478	; 0x30be
   11ddc:	movt	r1, #2
   11de0:	mov	r0, #0
   11de4:	mov	r2, #5
   11de8:	bl	113ac <dcgettext@plt>
   11dec:	mov	r4, r0
   11df0:	mov	r0, #0
   11df4:	mov	r1, #0
   11df8:	bl	21ec8 <__mempcpy_chk@plt+0x108e8>
   11dfc:	mov	r0, #2
   11e00:	str	r0, [sp]
   11e04:	mov	r0, r7
   11e08:	mov	r2, #0
   11e0c:	mov	r3, #0
   11e10:	bl	1140c <lseek64@plt>
   11e14:	cmp	r1, #0
   11e18:	blt	11e34 <__mempcpy_chk@plt+0x854>
   11e1c:	mov	r8, r0
   11e20:	mov	r6, r1
   11e24:	mov	r0, r7
   11e28:	bl	115a4 <isatty@plt>
   11e2c:	cmp	r0, #0
   11e30:	beq	11e74 <__mempcpy_chk@plt+0x894>
   11e34:	mov	r0, r7
   11e38:	mov	r1, r4
   11e3c:	bl	11fc8 <__mempcpy_chk@plt+0x9e8>
   11e40:	b	11e88 <__mempcpy_chk@plt+0x8a8>
   11e44:	bl	114d8 <__errno_location@plt>
   11e48:	ldr	r5, [r0]
   11e4c:	movw	r1, #12493	; 0x30cd
   11e50:	movt	r1, #2
   11e54:	mov	r0, #0
   11e58:	mov	r2, #5
   11e5c:	bl	113ac <dcgettext@plt>
   11e60:	mov	r7, r0
   11e64:	mov	r0, #4
   11e68:	mov	r1, r4
   11e6c:	bl	142ac <__mempcpy_chk@plt+0x2ccc>
   11e70:	b	11ed8 <__mempcpy_chk@plt+0x8f8>
   11e74:	mov	r0, r7
   11e78:	mov	r1, r4
   11e7c:	mov	r2, r8
   11e80:	mov	r3, r6
   11e84:	bl	12020 <__mempcpy_chk@plt+0xa40>
   11e88:	mov	r6, r0
   11e8c:	cmp	r5, #0
   11e90:	beq	11eec <__mempcpy_chk@plt+0x90c>
   11e94:	mov	r0, r7
   11e98:	bl	115d4 <close@plt>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11eec <__mempcpy_chk@plt+0x90c>
   11ea4:	bl	114d8 <__errno_location@plt>
   11ea8:	ldr	r5, [r0]
   11eac:	mov	r6, #0
   11eb0:	movw	r1, #12523	; 0x30eb
   11eb4:	movt	r1, #2
   11eb8:	mov	r0, #0
   11ebc:	mov	r2, #5
   11ec0:	bl	113ac <dcgettext@plt>
   11ec4:	mov	r7, r0
   11ec8:	mov	r0, #0
   11ecc:	mov	r1, #3
   11ed0:	mov	r2, r4
   11ed4:	bl	14360 <__mempcpy_chk@plt+0x2d80>
   11ed8:	mov	r3, r0
   11edc:	mov	r0, #0
   11ee0:	mov	r1, r5
   11ee4:	mov	r2, r7
   11ee8:	bl	11448 <error@plt>
   11eec:	mov	r0, r6
   11ef0:	sub	sp, fp, #24
   11ef4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11efc:	add	fp, sp, #28
   11f00:	sub	sp, sp, #4
   11f04:	movw	r8, #25332	; 0x62f4
   11f08:	movt	r8, #3
   11f0c:	ldr	r2, [r8]
   11f10:	cmp	r0, #0
   11f14:	beq	11f9c <__mempcpy_chk@plt+0x9bc>
   11f18:	mov	r4, r0
   11f1c:	sub	r5, r1, r0
   11f20:	rsb	r7, r2, #8192	; 0x2000
   11f24:	ldr	r6, [r8]
   11f28:	movw	sl, #17140	; 0x42f4
   11f2c:	movt	sl, #3
   11f30:	add	r0, sl, r6
   11f34:	cmp	r5, r7
   11f38:	bcc	11f88 <__mempcpy_chk@plt+0x9a8>
   11f3c:	movw	r9, #16788	; 0x4194
   11f40:	movt	r9, #3
   11f44:	mov	r6, #0
   11f48:	mov	r1, r4
   11f4c:	mov	r2, r7
   11f50:	bl	1134c <memcpy@plt>
   11f54:	ldr	r3, [r9]
   11f58:	mov	r0, sl
   11f5c:	mov	r1, #1
   11f60:	mov	r2, #8192	; 0x2000
   11f64:	bl	11394 <fwrite_unlocked@plt>
   11f68:	str	r6, [r8]
   11f6c:	sub	r5, r5, r7
   11f70:	add	r4, r4, r7
   11f74:	cmp	r6, r5, lsr #13
   11f78:	mov	r0, sl
   11f7c:	mov	r7, #8192	; 0x2000
   11f80:	bne	11f48 <__mempcpy_chk@plt+0x968>
   11f84:	mov	r0, sl
   11f88:	mov	r1, r4
   11f8c:	mov	r2, r5
   11f90:	bl	1134c <memcpy@plt>
   11f94:	add	r0, r6, r5
   11f98:	b	11fbc <__mempcpy_chk@plt+0x9dc>
   11f9c:	movw	r0, #16788	; 0x4194
   11fa0:	movt	r0, #3
   11fa4:	ldr	r3, [r0]
   11fa8:	movw	r0, #17140	; 0x42f4
   11fac:	movt	r0, #3
   11fb0:	mov	r1, #1
   11fb4:	bl	11394 <fwrite_unlocked@plt>
   11fb8:	mov	r0, #0
   11fbc:	str	r0, [r8]
   11fc0:	sub	sp, fp, #28
   11fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fc8:	push	{r4, r5, fp, lr}
   11fcc:	add	fp, sp, #8
   11fd0:	sub	sp, sp, #8
   11fd4:	mov	r3, r1
   11fd8:	mov	r2, r0
   11fdc:	add	r0, sp, #4
   11fe0:	mov	r1, sp
   11fe4:	bl	12654 <__mempcpy_chk@plt+0x1074>
   11fe8:	cmp	r1, #0
   11fec:	movlt	r0, #0
   11ff0:	sublt	sp, fp, #8
   11ff4:	poplt	{r4, r5, fp, pc}
   11ff8:	mov	r4, r0
   11ffc:	mov	r5, r1
   12000:	ldr	r0, [sp, #4]
   12004:	bl	11520 <fileno@plt>
   12008:	ldr	r1, [sp]
   1200c:	mov	r2, r4
   12010:	mov	r3, r5
   12014:	bl	12020 <__mempcpy_chk@plt+0xa40>
   12018:	sub	sp, fp, #8
   1201c:	pop	{r4, r5, fp, pc}
   12020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12024:	add	fp, sp, #28
   12028:	sub	sp, sp, #36	; 0x24
   1202c:	mov	r8, r3
   12030:	mov	r5, r2
   12034:	str	r1, [sp, #8]
   12038:	mov	r4, r0
   1203c:	movw	r7, #17104	; 0x42d0
   12040:	movt	r7, #3
   12044:	ldr	r2, [r7]
   12048:	mov	r6, #0
   1204c:	mov	r0, r5
   12050:	mov	r1, r3
   12054:	mov	r3, #0
   12058:	bl	22a24 <__mempcpy_chk@plt+0x11444>
   1205c:	movw	r0, #17100	; 0x42cc
   12060:	movt	r0, #3
   12064:	ldr	r0, [r0]
   12068:	str	r0, [sp, #28]
   1206c:	movw	r0, #16800	; 0x41a0
   12070:	movt	r0, #3
   12074:	ldr	r0, [r0]
   12078:	ldrb	r9, [r0], #1
   1207c:	str	r0, [sp, #12]
   12080:	cmp	r2, #0
   12084:	str	r4, [sp, #32]
   12088:	beq	12100 <__mempcpy_chk@plt+0xb20>
   1208c:	str	r6, [sp]
   12090:	subs	r5, r5, r2
   12094:	sbc	r8, r8, #0
   12098:	mov	r0, r4
   1209c:	mov	sl, r5
   120a0:	mov	r2, r5
   120a4:	mov	r3, r8
   120a8:	bl	1140c <lseek64@plt>
   120ac:	cmn	r1, #1
   120b0:	bgt	12104 <__mempcpy_chk@plt+0xb24>
   120b4:	bl	114d8 <__errno_location@plt>
   120b8:	ldr	r4, [r0]
   120bc:	movw	r1, #12678	; 0x3186
   120c0:	movt	r1, #2
   120c4:	mov	r0, #0
   120c8:	mov	r2, #5
   120cc:	bl	113ac <dcgettext@plt>
   120d0:	mov	r6, r0
   120d4:	mov	r0, #0
   120d8:	mov	r1, #3
   120dc:	ldr	r2, [sp, #8]
   120e0:	bl	14360 <__mempcpy_chk@plt+0x2d80>
   120e4:	mov	r3, r0
   120e8:	mov	r0, #0
   120ec:	mov	r1, r4
   120f0:	mov	r2, r6
   120f4:	ldr	r4, [sp, #32]
   120f8:	bl	11448 <error@plt>
   120fc:	b	12104 <__mempcpy_chk@plt+0xb24>
   12100:	mov	sl, r5
   12104:	ldr	r2, [r7]
   12108:	movw	r0, #17112	; 0x42d8
   1210c:	movt	r0, #3
   12110:	ldr	r1, [r0]
   12114:	mov	r0, r4
   12118:	bl	21504 <__mempcpy_chk@plt+0xff24>
   1211c:	mov	r6, r0
   12120:	mov	r5, r8
   12124:	orrs	r0, sl, r8
   12128:	beq	1220c <__mempcpy_chk@plt+0xc2c>
   1212c:	cmp	r6, #0
   12130:	bne	1220c <__mempcpy_chk@plt+0xc2c>
   12134:	mov	r8, #0
   12138:	ldr	r0, [r7]
   1213c:	mov	r1, #1
   12140:	str	r1, [sp]
   12144:	rsbs	r2, r0, #0
   12148:	sbc	r3, r8, #0
   1214c:	ldr	r4, [sp, #32]
   12150:	mov	r0, r4
   12154:	bl	1140c <lseek64@plt>
   12158:	cmn	r1, #1
   1215c:	bgt	121b0 <__mempcpy_chk@plt+0xbd0>
   12160:	bl	114d8 <__errno_location@plt>
   12164:	ldr	r7, [r0]
   12168:	mov	r0, #0
   1216c:	movw	r1, #12678	; 0x3186
   12170:	movt	r1, #2
   12174:	mov	r2, #5
   12178:	bl	113ac <dcgettext@plt>
   1217c:	mov	r6, r0
   12180:	mov	r0, #0
   12184:	mov	r1, #3
   12188:	ldr	r2, [sp, #8]
   1218c:	bl	14360 <__mempcpy_chk@plt+0x2d80>
   12190:	mov	r3, r0
   12194:	mov	r0, #0
   12198:	mov	r1, r7
   1219c:	movw	r7, #17104	; 0x42d0
   121a0:	movt	r7, #3
   121a4:	mov	r2, r6
   121a8:	ldr	r4, [sp, #32]
   121ac:	bl	11448 <error@plt>
   121b0:	movw	r0, #17112	; 0x42d8
   121b4:	movt	r0, #3
   121b8:	ldr	r1, [r0]
   121bc:	ldr	r7, [r7]
   121c0:	mov	r0, r4
   121c4:	mov	r2, r7
   121c8:	bl	21504 <__mempcpy_chk@plt+0xff24>
   121cc:	mov	r6, r0
   121d0:	mov	r1, sl
   121d4:	subs	r1, sl, r7
   121d8:	mov	r0, r5
   121dc:	sbc	r0, r5, #0
   121e0:	mov	r5, r0
   121e4:	mov	sl, r1
   121e8:	orrs	r0, r1, r0
   121ec:	beq	12204 <__mempcpy_chk@plt+0xc24>
   121f0:	cmp	r6, #0
   121f4:	movw	r7, #17104	; 0x42d0
   121f8:	movt	r7, #3
   121fc:	beq	12138 <__mempcpy_chk@plt+0xb58>
   12200:	b	1220c <__mempcpy_chk@plt+0xc2c>
   12204:	movw	r7, #17104	; 0x42d0
   12208:	movt	r7, #3
   1220c:	ldr	r2, [r7]
   12210:	cmp	r6, r2
   12214:	bne	12258 <__mempcpy_chk@plt+0xc78>
   12218:	movw	r0, #17112	; 0x42d8
   1221c:	movt	r0, #3
   12220:	ldr	r1, [r0]
   12224:	ldr	r0, [sp, #32]
   12228:	bl	21504 <__mempcpy_chk@plt+0xff24>
   1222c:	cmn	r0, #1
   12230:	beq	125bc <__mempcpy_chk@plt+0xfdc>
   12234:	cmp	r0, #0
   12238:	beq	12258 <__mempcpy_chk@plt+0xc78>
   1223c:	adds	sl, sl, r0
   12240:	adc	r5, r5, #0
   12244:	ldr	r2, [r7]
   12248:	cmp	r0, r2
   1224c:	mov	r6, r0
   12250:	beq	12218 <__mempcpy_chk@plt+0xc38>
   12254:	b	12264 <__mempcpy_chk@plt+0xc84>
   12258:	mov	r0, r6
   1225c:	cmn	r6, #1
   12260:	beq	125bc <__mempcpy_chk@plt+0xfdc>
   12264:	str	sl, [sp, #20]
   12268:	str	r5, [sp, #24]
   1226c:	ldr	r2, [sp, #28]
   12270:	sub	r6, r2, #1
   12274:	movw	r5, #17112	; 0x42d8
   12278:	movt	r5, #3
   1227c:	ldr	r1, [r5]
   12280:	add	r8, r1, r0
   12284:	rsb	r1, r2, #1
   12288:	movw	r0, #16804	; 0x41a4
   1228c:	movt	r0, #3
   12290:	ldr	r0, [r0]
   12294:	cmp	r0, #0
   12298:	mov	sl, r8
   1229c:	addne	sl, sl, r1
   122a0:	mov	r1, #1
   122a4:	str	r1, [sp, #28]
   122a8:	ldr	r4, [sp, #12]
   122ac:	cmp	r0, #0
   122b0:	bne	122c4 <__mempcpy_chk@plt+0xce4>
   122b4:	b	122f8 <__mempcpy_chk@plt+0xd18>
   122b8:	ldr	r0, [r1]
   122bc:	cmp	r0, #0
   122c0:	beq	122f8 <__mempcpy_chk@plt+0xd18>
   122c4:	sub	sl, sl, #1
   122c8:	mov	r0, sl
   122cc:	ldrb	r1, [r0], #1
   122d0:	cmp	r1, r9
   122d4:	bne	122c4 <__mempcpy_chk@plt+0xce4>
   122d8:	cmp	r6, #0
   122dc:	beq	12384 <__mempcpy_chk@plt+0xda4>
   122e0:	mov	r1, r4
   122e4:	mov	r2, r6
   122e8:	bl	115bc <strncmp@plt>
   122ec:	cmp	r0, #0
   122f0:	bne	122c4 <__mempcpy_chk@plt+0xce4>
   122f4:	b	12384 <__mempcpy_chk@plt+0xda4>
   122f8:	ldr	r1, [r5]
   122fc:	sub	r2, sl, r1
   12300:	cmn	r2, #1
   12304:	ble	12620 <__mempcpy_chk@plt+0x1040>
   12308:	cmp	r2, #0
   1230c:	beq	1237c <__mempcpy_chk@plt+0xd9c>
   12310:	rsb	r0, r2, #1
   12314:	str	r0, [sp]
   12318:	movw	r0, #17128	; 0x42e8
   1231c:	movt	r0, #3
   12320:	str	r0, [sp, #4]
   12324:	sub	r3, r2, #1
   12328:	movw	r0, #16812	; 0x41ac
   1232c:	movt	r0, #3
   12330:	bl	15d88 <__mempcpy_chk@plt+0x47a8>
   12334:	cmn	r0, #1
   12338:	beq	1237c <__mempcpy_chk@plt+0xd9c>
   1233c:	cmn	r0, #2
   12340:	beq	1262c <__mempcpy_chk@plt+0x104c>
   12344:	movw	r0, #17128	; 0x42e8
   12348:	movt	r0, #3
   1234c:	mov	r1, r0
   12350:	ldr	r0, [r0, #4]
   12354:	ldr	r1, [r1, #8]
   12358:	ldr	r0, [r0]
   1235c:	ldr	r1, [r1]
   12360:	sub	r1, r1, r0
   12364:	movw	r2, #17100	; 0x42cc
   12368:	movt	r2, #3
   1236c:	str	r1, [r2]
   12370:	ldr	r1, [r5]
   12374:	add	sl, r1, r0
   12378:	b	12384 <__mempcpy_chk@plt+0xda4>
   1237c:	ldr	r0, [r5]
   12380:	sub	sl, r0, #1
   12384:	ldr	r0, [r5]
   12388:	cmp	sl, r0
   1238c:	bcs	12434 <__mempcpy_chk@plt+0xe54>
   12390:	ldr	r5, [sp, #24]
   12394:	ldr	r4, [sp, #20]
   12398:	orrs	r1, r4, r5
   1239c:	beq	12608 <__mempcpy_chk@plt+0x1028>
   123a0:	sub	r8, r8, r0
   123a4:	ldr	r1, [r7]
   123a8:	cmp	r8, r1
   123ac:	bls	12414 <__mempcpy_chk@plt+0xe34>
   123b0:	lsl	r2, r1, #1
   123b4:	str	r2, [r7]
   123b8:	mov	r2, #2
   123bc:	orr	r1, r2, r1, lsl #2
   123c0:	movw	r2, #16804	; 0x41a4
   123c4:	movt	r2, #3
   123c8:	ldr	r7, [r2]
   123cc:	add	r1, r1, r7
   123d0:	movw	r2, #17108	; 0x42d4
   123d4:	movt	r2, #3
   123d8:	mov	r3, r2
   123dc:	ldr	r2, [r2]
   123e0:	str	r1, [r3]
   123e4:	cmp	r7, #0
   123e8:	movweq	r7, #1
   123ec:	cmp	r1, r2
   123f0:	bcc	12650 <__mempcpy_chk@plt+0x1070>
   123f4:	sub	r0, r0, r7
   123f8:	bl	21b10 <__mempcpy_chk@plt+0x10530>
   123fc:	add	r0, r0, r7
   12400:	movw	r1, #17112	; 0x42d8
   12404:	movt	r1, #3
   12408:	str	r0, [r1]
   1240c:	movw	r7, #17104	; 0x42d0
   12410:	movt	r7, #3
   12414:	ldr	r0, [r7]
   12418:	subs	r1, r4, r0
   1241c:	sbcs	r1, r5, #0
   12420:	bge	124d0 <__mempcpy_chk@plt+0xef0>
   12424:	str	r4, [r7]
   12428:	mov	r4, #0
   1242c:	mov	r5, #0
   12430:	b	124d8 <__mempcpy_chk@plt+0xef8>
   12434:	movw	r0, #16808	; 0x41a8
   12438:	movt	r0, #3
   1243c:	ldrb	r0, [r0]
   12440:	cmp	r0, #1
   12444:	bne	12488 <__mempcpy_chk@plt+0xea8>
   12448:	movw	r0, #17100	; 0x42cc
   1244c:	movt	r0, #3
   12450:	ldr	r0, [r0]
   12454:	mov	r2, r8
   12458:	add	r8, sl, r0
   1245c:	sub	r0, r8, r2
   12460:	clz	r0, r0
   12464:	lsr	r0, r0, #5
   12468:	mov	r7, #0
   1246c:	ldr	r1, [sp, #28]
   12470:	tst	r1, r0
   12474:	bne	1249c <__mempcpy_chk@plt+0xebc>
   12478:	mov	r0, r8
   1247c:	mov	r1, r2
   12480:	bl	11ef8 <__mempcpy_chk@plt+0x918>
   12484:	b	1249c <__mempcpy_chk@plt+0xebc>
   12488:	mov	r0, sl
   1248c:	mov	r1, r8
   12490:	bl	11ef8 <__mempcpy_chk@plt+0x918>
   12494:	ldr	r7, [sp, #28]
   12498:	mov	r8, sl
   1249c:	movw	r1, #16804	; 0x41a4
   124a0:	movt	r1, #3
   124a4:	ldr	r0, [r1]
   124a8:	cmp	r0, #0
   124ac:	movwne	r0, #17100	; 0x42cc
   124b0:	movtne	r0, #3
   124b4:	ldrne	r0, [r0]
   124b8:	rsbne	r0, r0, #1
   124bc:	addne	sl, sl, r0
   124c0:	str	r7, [sp, #28]
   124c4:	movw	r7, #17104	; 0x42d0
   124c8:	movt	r7, #3
   124cc:	b	122b8 <__mempcpy_chk@plt+0xcd8>
   124d0:	subs	r4, r4, r0
   124d4:	sbc	r5, r5, #0
   124d8:	str	r8, [sp, #16]
   124dc:	mov	r0, #0
   124e0:	str	r0, [sp]
   124e4:	ldr	r0, [sp, #32]
   124e8:	str	r4, [sp, #20]
   124ec:	mov	r2, r4
   124f0:	str	r5, [sp, #24]
   124f4:	mov	r3, r5
   124f8:	bl	1140c <lseek64@plt>
   124fc:	cmn	r1, #1
   12500:	bgt	12548 <__mempcpy_chk@plt+0xf68>
   12504:	bl	114d8 <__errno_location@plt>
   12508:	ldr	sl, [r0]
   1250c:	mov	r0, #0
   12510:	movw	r1, #12678	; 0x3186
   12514:	movt	r1, #2
   12518:	mov	r2, #5
   1251c:	bl	113ac <dcgettext@plt>
   12520:	mov	r8, r0
   12524:	mov	r0, #0
   12528:	mov	r1, #3
   1252c:	ldr	r2, [sp, #8]
   12530:	bl	14360 <__mempcpy_chk@plt+0x2d80>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	mov	r1, sl
   12540:	mov	r2, r8
   12544:	bl	11448 <error@plt>
   12548:	ldr	r8, [r7]
   1254c:	movw	r5, #17112	; 0x42d8
   12550:	movt	r5, #3
   12554:	ldr	r7, [r5]
   12558:	add	sl, r7, r8
   1255c:	mov	r0, sl
   12560:	mov	r1, r7
   12564:	ldr	r4, [sp, #16]
   12568:	mov	r2, r4
   1256c:	bl	1131c <memmove@plt>
   12570:	add	r3, sl, r4
   12574:	movw	r0, #16804	; 0x41a4
   12578:	movt	r0, #3
   1257c:	mov	r4, r0
   12580:	ldr	r0, [r0]
   12584:	cmp	r0, #0
   12588:	moveq	sl, r3
   1258c:	ldr	r0, [sp, #32]
   12590:	mov	r1, r7
   12594:	movw	r7, #17104	; 0x42d0
   12598:	movt	r7, #3
   1259c:	mov	r2, r8
   125a0:	mov	r8, r3
   125a4:	bl	21504 <__mempcpy_chk@plt+0xff24>
   125a8:	ldr	r1, [r7]
   125ac:	cmp	r0, r1
   125b0:	mov	r1, r4
   125b4:	ldr	r4, [sp, #12]
   125b8:	beq	122b8 <__mempcpy_chk@plt+0xcd8>
   125bc:	bl	114d8 <__errno_location@plt>
   125c0:	ldr	r5, [r0]
   125c4:	mov	r4, #0
   125c8:	movw	r1, #12523	; 0x30eb
   125cc:	movt	r1, #2
   125d0:	mov	r0, #0
   125d4:	mov	r2, #5
   125d8:	bl	113ac <dcgettext@plt>
   125dc:	mov	r6, r0
   125e0:	mov	r0, #0
   125e4:	mov	r1, #3
   125e8:	ldr	r2, [sp, #8]
   125ec:	bl	14360 <__mempcpy_chk@plt+0x2d80>
   125f0:	mov	r3, r0
   125f4:	mov	r0, #0
   125f8:	mov	r1, r5
   125fc:	mov	r2, r6
   12600:	bl	11448 <error@plt>
   12604:	b	12614 <__mempcpy_chk@plt+0x1034>
   12608:	mov	r1, r8
   1260c:	bl	11ef8 <__mempcpy_chk@plt+0x918>
   12610:	mov	r4, #1
   12614:	mov	r0, r4
   12618:	sub	sp, fp, #28
   1261c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12620:	movw	r1, #12694	; 0x3196
   12624:	movt	r1, #2
   12628:	b	12634 <__mempcpy_chk@plt+0x1054>
   1262c:	movw	r1, #12711	; 0x31a7
   12630:	movt	r1, #2
   12634:	mov	r0, #0
   12638:	mov	r2, #5
   1263c:	bl	113ac <dcgettext@plt>
   12640:	mov	r2, r0
   12644:	mov	r0, #1
   12648:	mov	r1, #0
   1264c:	bl	11448 <error@plt>
   12650:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   12654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12658:	add	fp, sp, #28
   1265c:	sub	sp, sp, #20
   12660:	mov	r4, r3
   12664:	mov	r5, r2
   12668:	mov	r6, r1
   1266c:	mov	r7, r0
   12670:	add	r0, sp, #16
   12674:	add	r1, sp, #12
   12678:	bl	127bc <__mempcpy_chk@plt+0x11dc>
   1267c:	mvn	r9, #0
   12680:	cmp	r0, #0
   12684:	beq	126fc <__mempcpy_chk@plt+0x111c>
   12688:	str	r7, [sp]
   1268c:	str	r6, [sp, #4]
   12690:	str	r4, [sp, #8]
   12694:	mov	r9, #0
   12698:	ldr	r6, [sp, #16]
   1269c:	movw	sl, #17104	; 0x42d0
   126a0:	movt	sl, #3
   126a4:	movw	r7, #17112	; 0x42d8
   126a8:	movt	r7, #3
   126ac:	mov	r4, #0
   126b0:	ldr	r2, [sl]
   126b4:	ldr	r1, [r7]
   126b8:	mov	r0, r5
   126bc:	bl	21504 <__mempcpy_chk@plt+0xff24>
   126c0:	cmp	r0, #0
   126c4:	beq	12704 <__mempcpy_chk@plt+0x1124>
   126c8:	mov	r8, r0
   126cc:	cmn	r0, #1
   126d0:	beq	12744 <__mempcpy_chk@plt+0x1164>
   126d4:	ldr	r0, [r7]
   126d8:	mov	r1, #1
   126dc:	mov	r2, r8
   126e0:	mov	r3, r6
   126e4:	bl	11394 <fwrite_unlocked@plt>
   126e8:	adds	r9, r9, r8
   126ec:	adc	r4, r4, #0
   126f0:	cmp	r0, r8
   126f4:	beq	126b0 <__mempcpy_chk@plt+0x10d0>
   126f8:	b	12714 <__mempcpy_chk@plt+0x1134>
   126fc:	mvn	r4, #0
   12700:	b	12790 <__mempcpy_chk@plt+0x11b0>
   12704:	ldr	r0, [sp, #16]
   12708:	bl	113dc <fflush_unlocked@plt>
   1270c:	cmp	r0, #0
   12710:	beq	127a0 <__mempcpy_chk@plt+0x11c0>
   12714:	bl	114d8 <__errno_location@plt>
   12718:	ldr	r4, [r0]
   1271c:	movw	r1, #12538	; 0x30fa
   12720:	movt	r1, #2
   12724:	mov	r0, #0
   12728:	mov	r2, #5
   1272c:	bl	113ac <dcgettext@plt>
   12730:	mov	r5, r0
   12734:	ldr	r2, [sp, #12]
   12738:	mov	r0, #0
   1273c:	mov	r1, #3
   12740:	b	12770 <__mempcpy_chk@plt+0x1190>
   12744:	bl	114d8 <__errno_location@plt>
   12748:	ldr	r4, [r0]
   1274c:	movw	r1, #12523	; 0x30eb
   12750:	movt	r1, #2
   12754:	mov	r0, #0
   12758:	mov	r2, #5
   1275c:	bl	113ac <dcgettext@plt>
   12760:	mov	r5, r0
   12764:	mov	r0, #0
   12768:	mov	r1, #3
   1276c:	ldr	r2, [sp, #8]
   12770:	bl	14360 <__mempcpy_chk@plt+0x2d80>
   12774:	mov	r3, r0
   12778:	mov	r0, #0
   1277c:	mov	r1, r4
   12780:	mov	r2, r5
   12784:	bl	11448 <error@plt>
   12788:	mvn	r4, #0
   1278c:	mvn	r9, #0
   12790:	mov	r0, r9
   12794:	mov	r1, r4
   12798:	sub	sp, fp, #28
   1279c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127a0:	ldr	r0, [sp, #16]
   127a4:	ldr	r1, [sp]
   127a8:	str	r0, [r1]
   127ac:	ldr	r0, [sp, #12]
   127b0:	ldr	r1, [sp, #4]
   127b4:	str	r0, [r1]
   127b8:	b	12790 <__mempcpy_chk@plt+0x11b0>
   127bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   127c0:	add	fp, sp, #24
   127c4:	sub	sp, sp, #8
   127c8:	mov	r4, r1
   127cc:	mov	r5, r0
   127d0:	movw	r8, #17120	; 0x42e0
   127d4:	movt	r8, #3
   127d8:	ldr	r0, [r8]
   127dc:	cmp	r0, #0
   127e0:	beq	12874 <__mempcpy_chk@plt+0x1294>
   127e4:	movw	r7, #17124	; 0x42e4
   127e8:	movt	r7, #3
   127ec:	ldr	r0, [r7]
   127f0:	bl	1158c <clearerr_unlocked@plt>
   127f4:	ldr	r0, [r7]
   127f8:	mov	r6, #0
   127fc:	str	r6, [sp]
   12800:	mov	r2, #0
   12804:	mov	r3, #0
   12808:	bl	12bc4 <__mempcpy_chk@plt+0x15e4>
   1280c:	cmp	r0, #0
   12810:	blt	12830 <__mempcpy_chk@plt+0x1250>
   12814:	ldr	r0, [r7]
   12818:	bl	11520 <fileno@plt>
   1281c:	mov	r2, #0
   12820:	mov	r3, #0
   12824:	bl	11388 <ftruncate64@plt>
   12828:	cmn	r0, #1
   1282c:	bgt	128e0 <__mempcpy_chk@plt+0x1300>
   12830:	bl	114d8 <__errno_location@plt>
   12834:	ldr	r4, [r0]
   12838:	movw	r1, #12647	; 0x3167
   1283c:	movt	r1, #2
   12840:	mov	r0, #0
   12844:	mov	r2, #5
   12848:	bl	113ac <dcgettext@plt>
   1284c:	mov	r5, r0
   12850:	ldr	r1, [r8]
   12854:	mov	r0, #4
   12858:	bl	142ac <__mempcpy_chk@plt+0x2ccc>
   1285c:	mov	r3, r0
   12860:	mov	r0, #0
   12864:	mov	r1, r4
   12868:	mov	r2, r5
   1286c:	bl	11448 <error@plt>
   12870:	b	129a4 <__mempcpy_chk@plt+0x13c4>
   12874:	movw	r0, #12554	; 0x310a
   12878:	movt	r0, #2
   1287c:	bl	11460 <getenv@plt>
   12880:	movw	r7, #12561	; 0x3111
   12884:	movt	r7, #2
   12888:	cmp	r0, #0
   1288c:	movne	r7, r0
   12890:	movw	r1, #12566	; 0x3116
   12894:	movt	r1, #2
   12898:	mov	r0, r7
   1289c:	mov	r2, #0
   128a0:	bl	12abc <__mempcpy_chk@plt+0x14dc>
   128a4:	str	r0, [r8]
   128a8:	bl	21598 <__mempcpy_chk@plt+0xffb8>
   128ac:	cmn	r0, #1
   128b0:	ble	12900 <__mempcpy_chk@plt+0x1320>
   128b4:	mov	r6, r0
   128b8:	movw	r1, #12614	; 0x3146
   128bc:	movt	r1, #2
   128c0:	bl	11298 <fdopen@plt>
   128c4:	movw	r1, #17124	; 0x42e4
   128c8:	movt	r1, #3
   128cc:	str	r0, [r1]
   128d0:	cmp	r0, #0
   128d4:	beq	12944 <__mempcpy_chk@plt+0x1364>
   128d8:	ldr	r0, [r8]
   128dc:	bl	129b0 <__mempcpy_chk@plt+0x13d0>
   128e0:	movw	r0, #17124	; 0x42e4
   128e4:	movt	r0, #3
   128e8:	ldr	r0, [r0]
   128ec:	str	r0, [r5]
   128f0:	ldr	r0, [r8]
   128f4:	str	r0, [r4]
   128f8:	mov	r6, #1
   128fc:	b	129a4 <__mempcpy_chk@plt+0x13c4>
   12900:	bl	114d8 <__errno_location@plt>
   12904:	ldr	r4, [r0]
   12908:	movw	r1, #12576	; 0x3120
   1290c:	movt	r1, #2
   12910:	mov	r0, #0
   12914:	mov	r2, #5
   12918:	bl	113ac <dcgettext@plt>
   1291c:	mov	r5, r0
   12920:	mov	r0, #4
   12924:	mov	r1, r7
   12928:	bl	142ac <__mempcpy_chk@plt+0x2ccc>
   1292c:	mov	r3, r0
   12930:	mov	r0, #0
   12934:	mov	r1, r4
   12938:	mov	r2, r5
   1293c:	bl	11448 <error@plt>
   12940:	b	12994 <__mempcpy_chk@plt+0x13b4>
   12944:	bl	114d8 <__errno_location@plt>
   12948:	ldr	r4, [r0]
   1294c:	movw	r1, #12617	; 0x3149
   12950:	movt	r1, #2
   12954:	mov	r0, #0
   12958:	mov	r2, #5
   1295c:	bl	113ac <dcgettext@plt>
   12960:	mov	r5, r0
   12964:	ldr	r1, [r8]
   12968:	mov	r0, #4
   1296c:	bl	142ac <__mempcpy_chk@plt+0x2ccc>
   12970:	mov	r3, r0
   12974:	mov	r0, #0
   12978:	mov	r1, r4
   1297c:	mov	r2, r5
   12980:	bl	11448 <error@plt>
   12984:	mov	r0, r6
   12988:	bl	115d4 <close@plt>
   1298c:	ldr	r0, [r8]
   12990:	bl	113b8 <unlink@plt>
   12994:	ldr	r0, [r8]
   12998:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1299c:	mov	r6, #0
   129a0:	str	r6, [r8]
   129a4:	mov	r0, r6
   129a8:	sub	sp, fp, #24
   129ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129b0:	b	113b8 <unlink@plt>
   129b4:	movw	r1, #25336	; 0x62f8
   129b8:	movt	r1, #3
   129bc:	str	r0, [r1]
   129c0:	bx	lr
   129c4:	movw	r1, #25340	; 0x62fc
   129c8:	movt	r1, #3
   129cc:	strb	r0, [r1]
   129d0:	bx	lr
   129d4:	push	{r4, r5, r6, sl, fp, lr}
   129d8:	add	fp, sp, #16
   129dc:	sub	sp, sp, #8
   129e0:	movw	r0, #16788	; 0x4194
   129e4:	movt	r0, #3
   129e8:	ldr	r0, [r0]
   129ec:	bl	2235c <__mempcpy_chk@plt+0x10d7c>
   129f0:	cmp	r0, #0
   129f4:	beq	12a1c <__mempcpy_chk@plt+0x143c>
   129f8:	movw	r0, #25340	; 0x62fc
   129fc:	movt	r0, #3
   12a00:	ldrb	r0, [r0]
   12a04:	cmp	r0, #0
   12a08:	beq	12a3c <__mempcpy_chk@plt+0x145c>
   12a0c:	bl	114d8 <__errno_location@plt>
   12a10:	ldr	r0, [r0]
   12a14:	cmp	r0, #32
   12a18:	bne	12a3c <__mempcpy_chk@plt+0x145c>
   12a1c:	movw	r0, #16784	; 0x4190
   12a20:	movt	r0, #3
   12a24:	ldr	r0, [r0]
   12a28:	bl	2235c <__mempcpy_chk@plt+0x10d7c>
   12a2c:	cmp	r0, #0
   12a30:	subeq	sp, fp, #16
   12a34:	popeq	{r4, r5, r6, sl, fp, pc}
   12a38:	b	12aac <__mempcpy_chk@plt+0x14cc>
   12a3c:	movw	r1, #12542	; 0x30fe
   12a40:	movt	r1, #2
   12a44:	mov	r0, #0
   12a48:	mov	r2, #5
   12a4c:	bl	113ac <dcgettext@plt>
   12a50:	mov	r4, r0
   12a54:	movw	r0, #25336	; 0x62f8
   12a58:	movt	r0, #3
   12a5c:	ldr	r6, [r0]
   12a60:	bl	114d8 <__errno_location@plt>
   12a64:	ldr	r5, [r0]
   12a68:	cmp	r6, #0
   12a6c:	bne	12a88 <__mempcpy_chk@plt+0x14a8>
   12a70:	movw	r2, #12931	; 0x3283
   12a74:	movt	r2, #2
   12a78:	mov	r0, #0
   12a7c:	mov	r1, r5
   12a80:	mov	r3, r4
   12a84:	b	12aa8 <__mempcpy_chk@plt+0x14c8>
   12a88:	mov	r0, r6
   12a8c:	bl	14350 <__mempcpy_chk@plt+0x2d70>
   12a90:	mov	r3, r0
   12a94:	str	r4, [sp]
   12a98:	movw	r2, #12927	; 0x327f
   12a9c:	movt	r2, #2
   12aa0:	mov	r0, #0
   12aa4:	mov	r1, r5
   12aa8:	bl	11448 <error@plt>
   12aac:	movw	r0, #16700	; 0x413c
   12ab0:	movt	r0, #3
   12ab4:	ldr	r0, [r0]
   12ab8:	bl	11340 <_exit@plt>
   12abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ac0:	add	fp, sp, #28
   12ac4:	push	{r2}		; (str r2, [sp, #-4]!)
   12ac8:	mov	sl, r1
   12acc:	mov	r7, r0
   12ad0:	bl	21fa4 <__mempcpy_chk@plt+0x109c4>
   12ad4:	sub	r4, r0, r7
   12ad8:	bl	21ff0 <__mempcpy_chk@plt+0x10a10>
   12adc:	mov	r6, r0
   12ae0:	add	r5, r4, r0
   12ae4:	mov	r0, sl
   12ae8:	bl	114cc <strlen@plt>
   12aec:	mov	r9, r0
   12af0:	cmp	r6, #0
   12af4:	beq	12b1c <__mempcpy_chk@plt+0x153c>
   12af8:	add	r0, r7, r5
   12afc:	ldrb	r0, [r0, #-1]
   12b00:	mov	r4, #0
   12b04:	cmp	r0, #47	; 0x2f
   12b08:	beq	12b2c <__mempcpy_chk@plt+0x154c>
   12b0c:	ldrb	r0, [sl]
   12b10:	subs	r4, r0, #47	; 0x2f
   12b14:	movwne	r4, #47	; 0x2f
   12b18:	b	12b2c <__mempcpy_chk@plt+0x154c>
   12b1c:	ldrb	r0, [sl]
   12b20:	mov	r4, #0
   12b24:	cmp	r0, #47	; 0x2f
   12b28:	movweq	r4, #46	; 0x2e
   12b2c:	add	r0, r9, r5
   12b30:	uxtb	r8, r4
   12b34:	cmp	r8, #0
   12b38:	movwne	r8, #1
   12b3c:	add	r0, r0, r8
   12b40:	add	r0, r0, #1
   12b44:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   12b48:	mov	r6, r0
   12b4c:	cmp	r0, #0
   12b50:	beq	12b90 <__mempcpy_chk@plt+0x15b0>
   12b54:	mov	r0, r6
   12b58:	mov	r1, r7
   12b5c:	mov	r2, r5
   12b60:	mvn	r3, #0
   12b64:	bl	115e0 <__mempcpy_chk@plt>
   12b68:	strb	r4, [r0], r8
   12b6c:	ldr	r1, [sp]
   12b70:	cmp	r1, #0
   12b74:	strne	r0, [r1]
   12b78:	mov	r1, sl
   12b7c:	mov	r2, r9
   12b80:	mvn	r3, #0
   12b84:	bl	115e0 <__mempcpy_chk@plt>
   12b88:	mov	r1, #0
   12b8c:	strb	r1, [r0]
   12b90:	mov	r0, r6
   12b94:	sub	sp, fp, #28
   12b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b9c:	push	{r4, r5, r6, sl, fp, lr}
   12ba0:	add	fp, sp, #16
   12ba4:	mov	r4, r0
   12ba8:	bl	114d8 <__errno_location@plt>
   12bac:	mov	r5, r0
   12bb0:	ldr	r6, [r0]
   12bb4:	mov	r0, r4
   12bb8:	bl	11328 <free@plt>
   12bbc:	str	r6, [r5]
   12bc0:	pop	{r4, r5, r6, sl, fp, pc}
   12bc4:	push	{r4, r5, r6, r7, fp, lr}
   12bc8:	add	fp, sp, #16
   12bcc:	sub	sp, sp, #8
   12bd0:	mov	r5, r3
   12bd4:	mov	r6, r2
   12bd8:	mov	r4, r0
   12bdc:	ldr	r0, [r0, #4]
   12be0:	ldr	r1, [r4, #8]
   12be4:	cmp	r1, r0
   12be8:	bne	12c04 <__mempcpy_chk@plt+0x1624>
   12bec:	ldrd	r0, [r4, #16]
   12bf0:	cmp	r1, r0
   12bf4:	bne	12c04 <__mempcpy_chk@plt+0x1624>
   12bf8:	ldr	r0, [r4, #36]	; 0x24
   12bfc:	cmp	r0, #0
   12c00:	beq	12c1c <__mempcpy_chk@plt+0x163c>
   12c04:	mov	r0, r4
   12c08:	mov	r2, r6
   12c0c:	mov	r3, r5
   12c10:	sub	sp, fp, #16
   12c14:	pop	{r4, r5, r6, r7, fp, lr}
   12c18:	b	11544 <fseeko64@plt>
   12c1c:	ldr	r7, [fp, #8]
   12c20:	mov	r0, r4
   12c24:	bl	11520 <fileno@plt>
   12c28:	str	r7, [sp]
   12c2c:	mov	r2, r6
   12c30:	mov	r3, r5
   12c34:	bl	1140c <lseek64@plt>
   12c38:	and	r2, r0, r1
   12c3c:	cmn	r2, #1
   12c40:	mvneq	r0, #0
   12c44:	subeq	sp, fp, #16
   12c48:	popeq	{r4, r5, r6, r7, fp, pc}
   12c4c:	strd	r0, [r4, #80]	; 0x50
   12c50:	ldr	r0, [r4]
   12c54:	bic	r0, r0, #16
   12c58:	str	r0, [r4]
   12c5c:	mov	r0, #0
   12c60:	sub	sp, fp, #16
   12c64:	pop	{r4, r5, r6, r7, fp, pc}
   12c68:	push	{r4, r5, fp, lr}
   12c6c:	add	fp, sp, #8
   12c70:	cmp	r0, #0
   12c74:	beq	12d08 <__mempcpy_chk@plt+0x1728>
   12c78:	mov	r4, r0
   12c7c:	mov	r1, #47	; 0x2f
   12c80:	bl	11574 <strrchr@plt>
   12c84:	cmp	r0, #0
   12c88:	mov	r5, r4
   12c8c:	addne	r5, r0, #1
   12c90:	sub	r0, r5, r4
   12c94:	cmp	r0, #7
   12c98:	blt	12cec <__mempcpy_chk@plt+0x170c>
   12c9c:	sub	r0, r5, #7
   12ca0:	movw	r1, #12990	; 0x32be
   12ca4:	movt	r1, #2
   12ca8:	mov	r2, #7
   12cac:	bl	115bc <strncmp@plt>
   12cb0:	cmp	r0, #0
   12cb4:	bne	12cec <__mempcpy_chk@plt+0x170c>
   12cb8:	movw	r1, #12998	; 0x32c6
   12cbc:	movt	r1, #2
   12cc0:	mov	r0, r5
   12cc4:	mov	r2, #3
   12cc8:	bl	115bc <strncmp@plt>
   12ccc:	cmp	r0, #0
   12cd0:	beq	12cdc <__mempcpy_chk@plt+0x16fc>
   12cd4:	mov	r4, r5
   12cd8:	b	12cec <__mempcpy_chk@plt+0x170c>
   12cdc:	add	r4, r5, #3
   12ce0:	movw	r0, #16768	; 0x4180
   12ce4:	movt	r0, #3
   12ce8:	str	r4, [r0]
   12cec:	movw	r0, #16772	; 0x4184
   12cf0:	movt	r0, #3
   12cf4:	str	r4, [r0]
   12cf8:	movw	r0, #25344	; 0x6300
   12cfc:	movt	r0, #3
   12d00:	str	r4, [r0]
   12d04:	pop	{r4, r5, fp, pc}
   12d08:	movw	r0, #16784	; 0x4190
   12d0c:	movt	r0, #3
   12d10:	ldr	r3, [r0]
   12d14:	movw	r0, #12934	; 0x3286
   12d18:	movt	r0, #2
   12d1c:	mov	r1, #55	; 0x37
   12d20:	mov	r2, #1
   12d24:	bl	11400 <fwrite@plt>
   12d28:	bl	115c8 <abort@plt>
   12d2c:	push	{r4, r5, r6, sl, fp, lr}
   12d30:	add	fp, sp, #16
   12d34:	mov	r4, r0
   12d38:	movw	r0, #25352	; 0x6308
   12d3c:	movt	r0, #3
   12d40:	cmp	r4, #0
   12d44:	moveq	r4, r0
   12d48:	bl	114d8 <__errno_location@plt>
   12d4c:	mov	r5, r0
   12d50:	ldr	r6, [r0]
   12d54:	mov	r0, r4
   12d58:	mov	r1, #48	; 0x30
   12d5c:	bl	21dc4 <__mempcpy_chk@plt+0x107e4>
   12d60:	str	r6, [r5]
   12d64:	pop	{r4, r5, r6, sl, fp, pc}
   12d68:	movw	r1, #25352	; 0x6308
   12d6c:	movt	r1, #3
   12d70:	cmp	r0, #0
   12d74:	movne	r1, r0
   12d78:	ldr	r0, [r1]
   12d7c:	bx	lr
   12d80:	movw	r2, #25352	; 0x6308
   12d84:	movt	r2, #3
   12d88:	cmp	r0, #0
   12d8c:	movne	r2, r0
   12d90:	str	r1, [r2]
   12d94:	bx	lr
   12d98:	movw	r3, #25352	; 0x6308
   12d9c:	movt	r3, #3
   12da0:	cmp	r0, #0
   12da4:	movne	r3, r0
   12da8:	ubfx	r0, r1, #5, #3
   12dac:	add	r0, r3, r0, lsl #2
   12db0:	ldr	r3, [r0, #8]
   12db4:	and	r1, r1, #31
   12db8:	eor	r2, r2, r3, lsr r1
   12dbc:	and	r2, r2, #1
   12dc0:	eor	r2, r3, r2, lsl r1
   12dc4:	str	r2, [r0, #8]
   12dc8:	mov	r0, #1
   12dcc:	and	r0, r0, r3, lsr r1
   12dd0:	bx	lr
   12dd4:	movw	r2, #25352	; 0x6308
   12dd8:	movt	r2, #3
   12ddc:	cmp	r0, #0
   12de0:	movne	r2, r0
   12de4:	ldr	r0, [r2, #4]
   12de8:	str	r1, [r2, #4]
   12dec:	bx	lr
   12df0:	movw	r3, #25352	; 0x6308
   12df4:	movt	r3, #3
   12df8:	cmp	r0, #0
   12dfc:	movne	r3, r0
   12e00:	mov	r0, #10
   12e04:	str	r0, [r3]
   12e08:	cmp	r1, #0
   12e0c:	cmpne	r2, #0
   12e10:	bne	12e20 <__mempcpy_chk@plt+0x1840>
   12e14:	push	{fp, lr}
   12e18:	mov	fp, sp
   12e1c:	bl	115c8 <abort@plt>
   12e20:	str	r1, [r3, #40]	; 0x28
   12e24:	str	r2, [r3, #44]	; 0x2c
   12e28:	bx	lr
   12e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e30:	add	fp, sp, #28
   12e34:	sub	sp, sp, #20
   12e38:	mov	r8, r3
   12e3c:	mov	r9, r2
   12e40:	mov	sl, r1
   12e44:	mov	r7, r0
   12e48:	ldr	r0, [fp, #8]
   12e4c:	movw	r5, #25352	; 0x6308
   12e50:	movt	r5, #3
   12e54:	cmp	r0, #0
   12e58:	movne	r5, r0
   12e5c:	bl	114d8 <__errno_location@plt>
   12e60:	mov	r4, r0
   12e64:	ldm	r5, {r0, r1}
   12e68:	ldr	r2, [r5, #40]	; 0x28
   12e6c:	ldr	r3, [r5, #44]	; 0x2c
   12e70:	ldr	r6, [r4]
   12e74:	add	r5, r5, #8
   12e78:	stm	sp, {r0, r1, r5}
   12e7c:	str	r2, [sp, #12]
   12e80:	str	r3, [sp, #16]
   12e84:	mov	r0, r7
   12e88:	mov	r1, sl
   12e8c:	mov	r2, r9
   12e90:	mov	r3, r8
   12e94:	bl	12ea4 <__mempcpy_chk@plt+0x18c4>
   12e98:	str	r6, [r4]
   12e9c:	sub	sp, fp, #28
   12ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea8:	add	fp, sp, #28
   12eac:	sub	sp, sp, #156	; 0x9c
   12eb0:	mov	r9, r3
   12eb4:	str	r2, [fp, #-84]	; 0xffffffac
   12eb8:	mov	r6, r1
   12ebc:	mov	r7, r0
   12ec0:	ldr	r0, [fp, #12]
   12ec4:	and	r1, r0, #4
   12ec8:	str	r1, [sp, #32]
   12ecc:	and	r1, r0, #1
   12ed0:	str	r1, [sp, #36]	; 0x24
   12ed4:	ubfx	sl, r0, #1, #1
   12ed8:	bl	11418 <__ctype_get_mb_cur_max@plt>
   12edc:	str	r0, [sp, #40]	; 0x28
   12ee0:	ldr	r0, [fp, #24]
   12ee4:	str	r0, [sp, #76]	; 0x4c
   12ee8:	ldr	r0, [fp, #20]
   12eec:	str	r0, [sp, #68]	; 0x44
   12ef0:	ldr	r0, [fp, #8]
   12ef4:	str	r0, [fp, #-60]	; 0xffffffc4
   12ef8:	mov	r0, #0
   12efc:	str	r0, [sp, #72]	; 0x48
   12f00:	mov	r0, #0
   12f04:	str	r0, [sp, #92]	; 0x5c
   12f08:	mov	r0, #0
   12f0c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f10:	mov	r0, #0
   12f14:	mov	r1, #0
   12f18:	str	r1, [fp, #-56]	; 0xffffffc8
   12f1c:	mov	r1, #0
   12f20:	str	r1, [sp, #56]	; 0x38
   12f24:	mov	r5, #1
   12f28:	str	r7, [sp, #80]	; 0x50
   12f2c:	mov	r4, r6
   12f30:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12f34:	cmp	r6, #10
   12f38:	bhi	13ea0 <__mempcpy_chk@plt+0x28c0>
   12f3c:	add	r1, pc, #20
   12f40:	mov	r8, #0
   12f44:	mov	r2, #1
   12f48:	mov	r3, #0
   12f4c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f50:	mov	lr, r9
   12f54:	ldr	pc, [r1, r6, lsl #2]
   12f58:	andeq	r3, r1, r0, lsr r0
   12f5c:	andeq	r3, r1, r0, rrx
   12f60:	andeq	r3, r1, r0, lsr #32
   12f64:	andeq	r3, r1, r8, lsl r0
   12f68:	andeq	r3, r1, r4, asr r0
   12f6c:	strheq	r3, [r1], -r4
   12f70:	andeq	r3, r1, r0, asr #32
   12f74:	andeq	r3, r1, r0, lsl r1
   12f78:	andeq	r2, r1, r4, lsl #31
   12f7c:	andeq	r2, r1, r4, lsl #31
   12f80:	andeq	r2, r1, ip, lsr #31
   12f84:	movw	r0, #13080	; 0x3318
   12f88:	movt	r0, #2
   12f8c:	mov	r1, r6
   12f90:	bl	144ac <__mempcpy_chk@plt+0x2ecc>
   12f94:	str	r0, [sp, #68]	; 0x44
   12f98:	movw	r0, #13082	; 0x331a
   12f9c:	movt	r0, #2
   12fa0:	mov	r1, r6
   12fa4:	bl	144ac <__mempcpy_chk@plt+0x2ecc>
   12fa8:	str	r0, [sp, #76]	; 0x4c
   12fac:	mov	r8, #0
   12fb0:	tst	sl, #1
   12fb4:	bne	12fec <__mempcpy_chk@plt+0x1a0c>
   12fb8:	ldr	r0, [sp, #68]	; 0x44
   12fbc:	ldrb	r0, [r0]
   12fc0:	cmp	r0, #0
   12fc4:	beq	12fec <__mempcpy_chk@plt+0x1a0c>
   12fc8:	ldr	r1, [sp, #68]	; 0x44
   12fcc:	add	r1, r1, #1
   12fd0:	mov	r8, #0
   12fd4:	cmp	r8, r4
   12fd8:	strbcc	r0, [r7, r8]
   12fdc:	ldrb	r0, [r1, r8]
   12fe0:	add	r8, r8, #1
   12fe4:	cmp	r0, #0
   12fe8:	bne	12fd4 <__mempcpy_chk@plt+0x19f4>
   12fec:	ldr	r6, [sp, #76]	; 0x4c
   12ff0:	mov	r0, r6
   12ff4:	bl	114cc <strlen@plt>
   12ff8:	str	r0, [fp, #-72]	; 0xffffffb8
   12ffc:	str	r6, [sp, #92]	; 0x5c
   13000:	mov	r2, #1
   13004:	mov	r3, sl
   13008:	ldr	ip, [fp, #-84]	; 0xffffffac
   1300c:	mov	lr, r9
   13010:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13014:	b	13110 <__mempcpy_chk@plt+0x1b30>
   13018:	mov	r0, #1
   1301c:	b	13060 <__mempcpy_chk@plt+0x1a80>
   13020:	tst	sl, #1
   13024:	bne	13060 <__mempcpy_chk@plt+0x1a80>
   13028:	mov	r2, r0
   1302c:	b	13088 <__mempcpy_chk@plt+0x1aa8>
   13030:	mov	r6, #0
   13034:	mov	r8, #0
   13038:	mov	r2, r0
   1303c:	b	1310c <__mempcpy_chk@plt+0x1b2c>
   13040:	mov	r0, #1
   13044:	str	r0, [fp, #-72]	; 0xffffffb8
   13048:	mov	r8, #0
   1304c:	mov	r6, #5
   13050:	b	130cc <__mempcpy_chk@plt+0x1aec>
   13054:	mov	r2, #1
   13058:	tst	sl, #1
   1305c:	beq	13088 <__mempcpy_chk@plt+0x1aa8>
   13060:	mov	r1, #1
   13064:	str	r1, [fp, #-72]	; 0xffffffb8
   13068:	mov	r8, #0
   1306c:	mov	r6, #2
   13070:	movw	r1, #13082	; 0x331a
   13074:	movt	r1, #2
   13078:	str	r1, [sp, #92]	; 0x5c
   1307c:	mov	r2, r0
   13080:	mov	r3, #1
   13084:	b	13110 <__mempcpy_chk@plt+0x1b30>
   13088:	mov	r8, #1
   1308c:	mov	r6, #2
   13090:	cmp	r4, #0
   13094:	movne	r0, #39	; 0x27
   13098:	strbne	r0, [r7]
   1309c:	movw	r0, #13082	; 0x331a
   130a0:	movt	r0, #2
   130a4:	str	r0, [sp, #92]	; 0x5c
   130a8:	mov	r0, #1
   130ac:	str	r0, [fp, #-72]	; 0xffffffb8
   130b0:	b	1310c <__mempcpy_chk@plt+0x1b2c>
   130b4:	mov	r6, #5
   130b8:	tst	sl, #1
   130bc:	beq	130e4 <__mempcpy_chk@plt+0x1b04>
   130c0:	mov	r0, #1
   130c4:	str	r0, [fp, #-72]	; 0xffffffb8
   130c8:	mov	r8, #0
   130cc:	movw	r0, #13078	; 0x3316
   130d0:	movt	r0, #2
   130d4:	str	r0, [sp, #92]	; 0x5c
   130d8:	mov	r2, #1
   130dc:	mov	r3, #1
   130e0:	b	13110 <__mempcpy_chk@plt+0x1b30>
   130e4:	cmp	r4, #0
   130e8:	movne	r0, #34	; 0x22
   130ec:	strbne	r0, [r7]
   130f0:	mov	r8, #1
   130f4:	movw	r0, #13078	; 0x3316
   130f8:	movt	r0, #2
   130fc:	str	r0, [sp, #92]	; 0x5c
   13100:	mov	r0, #1
   13104:	str	r0, [fp, #-72]	; 0xffffffb8
   13108:	mov	r2, #1
   1310c:	mov	r3, #0
   13110:	ldr	r0, [fp, #16]
   13114:	cmp	r0, #0
   13118:	movwne	r0, #1
   1311c:	and	r0, r0, r3
   13120:	str	r0, [fp, #-88]	; 0xffffffa8
   13124:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13128:	cmp	r0, #0
   1312c:	movwne	r0, #1
   13130:	and	r1, r0, r3
   13134:	and	r1, r2, r1
   13138:	str	r1, [sp, #48]	; 0x30
   1313c:	str	r6, [fp, #-60]	; 0xffffffc4
   13140:	subs	r6, r6, #2
   13144:	clz	r1, r6
   13148:	lsr	r1, r1, #5
   1314c:	and	r1, r1, r3
   13150:	str	r1, [sp, #60]	; 0x3c
   13154:	str	r6, [fp, #-80]	; 0xffffffb0
   13158:	mov	r1, r6
   1315c:	movwne	r1, #1
   13160:	str	r3, [fp, #-76]	; 0xffffffb4
   13164:	eor	r3, r3, #1
   13168:	str	r3, [sp, #88]	; 0x58
   1316c:	orr	r3, r1, r3
   13170:	str	r3, [sp, #64]	; 0x40
   13174:	and	r1, r1, r2
   13178:	str	r1, [fp, #-68]	; 0xffffffbc
   1317c:	and	r0, r0, r1
   13180:	str	r0, [fp, #-64]	; 0xffffffc0
   13184:	str	r2, [sp, #84]	; 0x54
   13188:	eor	r0, r2, #1
   1318c:	str	r0, [sp, #52]	; 0x34
   13190:	mov	r6, #0
   13194:	cmn	lr, #1
   13198:	beq	131a8 <__mempcpy_chk@plt+0x1bc8>
   1319c:	cmp	r6, lr
   131a0:	bne	131b4 <__mempcpy_chk@plt+0x1bd4>
   131a4:	b	13d20 <__mempcpy_chk@plt+0x2740>
   131a8:	ldrb	r0, [ip, r6]
   131ac:	cmp	r0, #0
   131b0:	beq	13d20 <__mempcpy_chk@plt+0x2740>
   131b4:	str	r5, [fp, #-48]	; 0xffffffd0
   131b8:	mov	sl, #0
   131bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   131c0:	cmp	r0, #0
   131c4:	beq	131f8 <__mempcpy_chk@plt+0x1c18>
   131c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   131cc:	add	r5, r6, r0
   131d0:	cmp	r0, #2
   131d4:	bcc	131f0 <__mempcpy_chk@plt+0x1c10>
   131d8:	cmn	lr, #1
   131dc:	bne	131f0 <__mempcpy_chk@plt+0x1c10>
   131e0:	mov	r0, ip
   131e4:	bl	114cc <strlen@plt>
   131e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   131ec:	mov	lr, r0
   131f0:	cmp	r5, lr
   131f4:	bls	13204 <__mempcpy_chk@plt+0x1c24>
   131f8:	mov	r0, #0
   131fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13200:	b	13250 <__mempcpy_chk@plt+0x1c70>
   13204:	mov	r5, r4
   13208:	mov	r4, lr
   1320c:	add	r0, ip, r6
   13210:	ldr	r1, [sp, #92]	; 0x5c
   13214:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13218:	bl	113a0 <memcmp@plt>
   1321c:	cmp	r0, #0
   13220:	mov	r1, r0
   13224:	movwne	r1, #1
   13228:	ldr	r2, [sp, #88]	; 0x58
   1322c:	orr	r1, r1, r2
   13230:	tst	r1, #1
   13234:	beq	13de4 <__mempcpy_chk@plt+0x2804>
   13238:	clz	r0, r0
   1323c:	lsr	r0, r0, #5
   13240:	str	r0, [fp, #-52]	; 0xffffffcc
   13244:	ldr	ip, [fp, #-84]	; 0xffffffac
   13248:	mov	lr, r4
   1324c:	mov	r4, r5
   13250:	ldrb	r5, [ip, r6]
   13254:	cmp	r5, #126	; 0x7e
   13258:	bhi	13614 <__mempcpy_chk@plt+0x2034>
   1325c:	mov	r9, #1
   13260:	mov	r2, #110	; 0x6e
   13264:	mov	r0, #97	; 0x61
   13268:	add	r3, pc, #4
   1326c:	mov	r1, #0
   13270:	ldr	pc, [r3, r5, lsl #2]
   13274:	andeq	r3, r1, ip, lsl #10
   13278:	andeq	r3, r1, r4, lsl r6
   1327c:	andeq	r3, r1, r4, lsl r6
   13280:	andeq	r3, r1, r4, lsl r6
   13284:	andeq	r3, r1, r4, lsl r6
   13288:	andeq	r3, r1, r4, lsl r6
   1328c:	andeq	r3, r1, r4, lsl r6
   13290:	ldrdeq	r3, [r1], -r8
   13294:	andeq	r3, r1, ip, ror #9
   13298:	andeq	r3, r1, r4, ror #9
   1329c:	strdeq	r3, [r1], -r8
   132a0:	andeq	r3, r1, ip, ror r5
   132a4:	ldrdeq	r3, [r1], -ip
   132a8:	strdeq	r3, [r1], -r4
   132ac:	andeq	r3, r1, r4, lsl r6
   132b0:	andeq	r3, r1, r4, lsl r6
   132b4:	andeq	r3, r1, r4, lsl r6
   132b8:	andeq	r3, r1, r4, lsl r6
   132bc:	andeq	r3, r1, r4, lsl r6
   132c0:	andeq	r3, r1, r4, lsl r6
   132c4:	andeq	r3, r1, r4, lsl r6
   132c8:	andeq	r3, r1, r4, lsl r6
   132cc:	andeq	r3, r1, r4, lsl r6
   132d0:	andeq	r3, r1, r4, lsl r6
   132d4:	andeq	r3, r1, r4, lsl r6
   132d8:	andeq	r3, r1, r4, lsl r6
   132dc:	andeq	r3, r1, r4, lsl r6
   132e0:	andeq	r3, r1, r4, lsl r6
   132e4:	andeq	r3, r1, r4, lsl r6
   132e8:	andeq	r3, r1, r4, lsl r6
   132ec:	andeq	r3, r1, r4, lsl r6
   132f0:	andeq	r3, r1, r4, lsl r6
   132f4:	andeq	r3, r1, r8, lsl #13
   132f8:	andeq	r3, r1, ip, lsl #13
   132fc:	andeq	r3, r1, ip, lsl #13
   13300:	andeq	r3, r1, r4, lsl #9
   13304:	andeq	r3, r1, ip, lsl #13
   13308:	andeq	r3, r1, r0, ror r4
   1330c:	andeq	r3, r1, ip, lsl #13
   13310:	andeq	r3, r1, r4, lsl #11
   13314:	andeq	r3, r1, ip, lsl #13
   13318:	andeq	r3, r1, ip, lsl #13
   1331c:	andeq	r3, r1, ip, lsl #13
   13320:	andeq	r3, r1, r0, ror r4
   13324:	andeq	r3, r1, r0, ror r4
   13328:	andeq	r3, r1, r0, ror r4
   1332c:	andeq	r3, r1, r0, ror r4
   13330:	andeq	r3, r1, r0, ror r4
   13334:	andeq	r3, r1, r0, ror r4
   13338:	andeq	r3, r1, r0, ror r4
   1333c:	andeq	r3, r1, r0, ror r4
   13340:	andeq	r3, r1, r0, ror r4
   13344:	andeq	r3, r1, r0, ror r4
   13348:	andeq	r3, r1, r0, ror r4
   1334c:	andeq	r3, r1, r0, ror r4
   13350:	andeq	r3, r1, r0, ror r4
   13354:	andeq	r3, r1, r0, ror r4
   13358:	andeq	r3, r1, r0, ror r4
   1335c:	andeq	r3, r1, r0, ror r4
   13360:	andeq	r3, r1, ip, lsl #13
   13364:	andeq	r3, r1, ip, lsl #13
   13368:	andeq	r3, r1, ip, lsl #13
   1336c:	andeq	r3, r1, ip, lsl #13
   13370:	andeq	r3, r1, ip, asr #10
   13374:	andeq	r3, r1, r4, lsl r6
   13378:	andeq	r3, r1, r0, ror r4
   1337c:	andeq	r3, r1, r0, ror r4
   13380:	andeq	r3, r1, r0, ror r4
   13384:	andeq	r3, r1, r0, ror r4
   13388:	andeq	r3, r1, r0, ror r4
   1338c:	andeq	r3, r1, r0, ror r4
   13390:	andeq	r3, r1, r0, ror r4
   13394:	andeq	r3, r1, r0, ror r4
   13398:	andeq	r3, r1, r0, ror r4
   1339c:	andeq	r3, r1, r0, ror r4
   133a0:	andeq	r3, r1, r0, ror r4
   133a4:	andeq	r3, r1, r0, ror r4
   133a8:	andeq	r3, r1, r0, ror r4
   133ac:	andeq	r3, r1, r0, ror r4
   133b0:	andeq	r3, r1, r0, ror r4
   133b4:	andeq	r3, r1, r0, ror r4
   133b8:	andeq	r3, r1, r0, ror r4
   133bc:	andeq	r3, r1, r0, ror r4
   133c0:	andeq	r3, r1, r0, ror r4
   133c4:	andeq	r3, r1, r0, ror r4
   133c8:	andeq	r3, r1, r0, ror r4
   133cc:	andeq	r3, r1, r0, ror r4
   133d0:	andeq	r3, r1, r0, ror r4
   133d4:	andeq	r3, r1, r0, ror r4
   133d8:	andeq	r3, r1, r0, ror r4
   133dc:	andeq	r3, r1, r0, ror r4
   133e0:	andeq	r3, r1, ip, lsl #13
   133e4:			; <UNDEFINED> instruction: 0x000134b8
   133e8:	andeq	r3, r1, r0, ror r4
   133ec:	andeq	r3, r1, ip, lsl #13
   133f0:	andeq	r3, r1, r0, ror r4
   133f4:	andeq	r3, r1, ip, lsl #13
   133f8:	andeq	r3, r1, r0, ror r4
   133fc:	andeq	r3, r1, r0, ror r4
   13400:	andeq	r3, r1, r0, ror r4
   13404:	andeq	r3, r1, r0, ror r4
   13408:	andeq	r3, r1, r0, ror r4
   1340c:	andeq	r3, r1, r0, ror r4
   13410:	andeq	r3, r1, r0, ror r4
   13414:	andeq	r3, r1, r0, ror r4
   13418:	andeq	r3, r1, r0, ror r4
   1341c:	andeq	r3, r1, r0, ror r4
   13420:	andeq	r3, r1, r0, ror r4
   13424:	andeq	r3, r1, r0, ror r4
   13428:	andeq	r3, r1, r0, ror r4
   1342c:	andeq	r3, r1, r0, ror r4
   13430:	andeq	r3, r1, r0, ror r4
   13434:	andeq	r3, r1, r0, ror r4
   13438:	andeq	r3, r1, r0, ror r4
   1343c:	andeq	r3, r1, r0, ror r4
   13440:	andeq	r3, r1, r0, ror r4
   13444:	andeq	r3, r1, r0, ror r4
   13448:	andeq	r3, r1, r0, ror r4
   1344c:	andeq	r3, r1, r0, ror r4
   13450:	andeq	r3, r1, r0, ror r4
   13454:	andeq	r3, r1, r0, ror r4
   13458:	andeq	r3, r1, r0, ror r4
   1345c:	andeq	r3, r1, r0, ror r4
   13460:	muleq	r1, r8, r4
   13464:	andeq	r3, r1, ip, lsl #13
   13468:	muleq	r1, r8, r4
   1346c:	andeq	r3, r1, r4, lsl #9
   13470:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13474:	cmp	r0, #0
   13478:	beq	136ec <__mempcpy_chk@plt+0x210c>
   1347c:	ldr	r0, [fp, #16]
   13480:	b	136f0 <__mempcpy_chk@plt+0x2110>
   13484:	mov	r9, #0
   13488:	cmp	r6, #0
   1348c:	beq	13688 <__mempcpy_chk@plt+0x20a8>
   13490:	mov	sl, #0
   13494:	b	13470 <__mempcpy_chk@plt+0x1e90>
   13498:	mov	r9, #0
   1349c:	cmn	lr, #1
   134a0:	beq	1366c <__mempcpy_chk@plt+0x208c>
   134a4:	cmp	r6, #0
   134a8:	bne	13490 <__mempcpy_chk@plt+0x1eb0>
   134ac:	cmp	lr, #1
   134b0:	beq	13688 <__mempcpy_chk@plt+0x20a8>
   134b4:	b	13490 <__mempcpy_chk@plt+0x1eb0>
   134b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134bc:	cmp	r0, #2
   134c0:	bne	136b4 <__mempcpy_chk@plt+0x20d4>
   134c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   134c8:	tst	r0, #1
   134cc:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   134d0:	mov	sl, #0
   134d4:	mov	r0, #92	; 0x5c
   134d8:	b	136c8 <__mempcpy_chk@plt+0x20e8>
   134dc:	mov	r0, #102	; 0x66
   134e0:	b	136d8 <__mempcpy_chk@plt+0x20f8>
   134e4:	mov	r2, #116	; 0x74
   134e8:	b	134f8 <__mempcpy_chk@plt+0x1f18>
   134ec:	mov	r0, #98	; 0x62
   134f0:	b	136d8 <__mempcpy_chk@plt+0x20f8>
   134f4:	mov	r2, #114	; 0x72
   134f8:	ldr	r0, [sp, #64]	; 0x40
   134fc:	tst	r0, #1
   13500:	mov	r0, r2
   13504:	bne	136d8 <__mempcpy_chk@plt+0x20f8>
   13508:	b	13dfc <__mempcpy_chk@plt+0x281c>
   1350c:	ldr	r0, [sp, #84]	; 0x54
   13510:	tst	r0, #1
   13514:	beq	137c8 <__mempcpy_chk@plt+0x21e8>
   13518:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1351c:	tst	r0, #1
   13520:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   13524:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13528:	cmp	r0, #2
   1352c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13530:	movwne	r0, #1
   13534:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13538:	orr	r0, r0, r2
   1353c:	tst	r0, #1
   13540:	beq	13bbc <__mempcpy_chk@plt+0x25dc>
   13544:	mov	r0, r8
   13548:	b	13bf0 <__mempcpy_chk@plt+0x2610>
   1354c:	mov	sl, #0
   13550:	mov	r5, #63	; 0x3f
   13554:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13558:	cmp	r0, #5
   1355c:	beq	1397c <__mempcpy_chk@plt+0x239c>
   13560:	cmp	r0, #2
   13564:	bne	13a1c <__mempcpy_chk@plt+0x243c>
   13568:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1356c:	tst	r0, #1
   13570:	mov	r9, #0
   13574:	beq	13470 <__mempcpy_chk@plt+0x1e90>
   13578:	b	13dfc <__mempcpy_chk@plt+0x281c>
   1357c:	mov	r0, #118	; 0x76
   13580:	b	136d8 <__mempcpy_chk@plt+0x20f8>
   13584:	mov	r5, #39	; 0x27
   13588:	mov	r0, #1
   1358c:	str	r0, [sp, #56]	; 0x38
   13590:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13594:	cmp	r0, #2
   13598:	bne	137e8 <__mempcpy_chk@plt+0x2208>
   1359c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   135a0:	tst	r0, #1
   135a4:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   135a8:	ldr	r2, [sp, #72]	; 0x48
   135ac:	cmp	r2, #0
   135b0:	mov	r0, r2
   135b4:	movwne	r0, #1
   135b8:	clz	r1, r4
   135bc:	lsr	r1, r1, #5
   135c0:	orrs	r0, r0, r1
   135c4:	moveq	r2, r4
   135c8:	str	r2, [sp, #72]	; 0x48
   135cc:	moveq	r4, r0
   135d0:	cmp	r8, r4
   135d4:	movcc	r0, #39	; 0x27
   135d8:	strbcc	r0, [r7, r8]
   135dc:	add	r0, r8, #1
   135e0:	cmp	r0, r4
   135e4:	movcc	r1, #92	; 0x5c
   135e8:	strbcc	r1, [r7, r0]
   135ec:	add	r0, r8, #2
   135f0:	cmp	r0, r4
   135f4:	movcc	r1, #39	; 0x27
   135f8:	strbcc	r1, [r7, r0]
   135fc:	add	r8, r8, #3
   13600:	mov	r0, #0
   13604:	str	r0, [fp, #-56]	; 0xffffffc8
   13608:	mov	sl, #0
   1360c:	mov	r9, #1
   13610:	b	13470 <__mempcpy_chk@plt+0x1e90>
   13614:	str	r4, [sp, #24]
   13618:	ldr	r0, [sp, #40]	; 0x28
   1361c:	cmp	r0, #1
   13620:	bne	137f0 <__mempcpy_chk@plt+0x2210>
   13624:	str	lr, [sp, #28]
   13628:	bl	114b4 <__ctype_b_loc@plt>
   1362c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13630:	ldr	r0, [r0]
   13634:	add	r0, r0, r5, lsl #1
   13638:	ldrb	r0, [r0, #1]
   1363c:	ubfx	r9, r0, #6, #1
   13640:	mov	r1, #1
   13644:	ldr	r4, [sp, #24]
   13648:	ldr	r0, [sp, #52]	; 0x34
   1364c:	orr	r0, r9, r0
   13650:	mov	r2, r1
   13654:	cmp	r1, #1
   13658:	bhi	13a24 <__mempcpy_chk@plt+0x2444>
   1365c:	tst	r0, #1
   13660:	beq	13a24 <__mempcpy_chk@plt+0x2444>
   13664:	ldr	lr, [sp, #28]
   13668:	b	13470 <__mempcpy_chk@plt+0x1e90>
   1366c:	cmp	r6, #0
   13670:	ldrbeq	r0, [ip, #1]
   13674:	cmpeq	r0, #0
   13678:	beq	13688 <__mempcpy_chk@plt+0x20a8>
   1367c:	mvn	lr, #0
   13680:	mov	sl, #0
   13684:	b	13470 <__mempcpy_chk@plt+0x1e90>
   13688:	mov	r1, #1
   1368c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13690:	cmp	r0, #2
   13694:	bne	136ac <__mempcpy_chk@plt+0x20cc>
   13698:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1369c:	tst	r0, #1
   136a0:	mov	r9, r1
   136a4:	beq	13470 <__mempcpy_chk@plt+0x1e90>
   136a8:	b	13dfc <__mempcpy_chk@plt+0x281c>
   136ac:	mov	r9, r1
   136b0:	b	13470 <__mempcpy_chk@plt+0x1e90>
   136b4:	mov	sl, #0
   136b8:	mov	r0, #92	; 0x5c
   136bc:	ldr	r1, [sp, #48]	; 0x30
   136c0:	cmp	r1, #0
   136c4:	beq	136d8 <__mempcpy_chk@plt+0x20f8>
   136c8:	mov	r9, #0
   136cc:	cmp	sl, #0
   136d0:	beq	13c88 <__mempcpy_chk@plt+0x26a8>
   136d4:	b	13cc4 <__mempcpy_chk@plt+0x26e4>
   136d8:	mov	r9, #0
   136dc:	ldr	r1, [sp, #84]	; 0x54
   136e0:	tst	r1, #1
   136e4:	mov	sl, #0
   136e8:	bne	13728 <__mempcpy_chk@plt+0x2148>
   136ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   136f0:	cmp	r0, #0
   136f4:	mov	r0, r5
   136f8:	beq	1371c <__mempcpy_chk@plt+0x213c>
   136fc:	ubfx	r0, r5, #5, #3
   13700:	ldr	r1, [fp, #16]
   13704:	ldr	r0, [r1, r0, lsl #2]
   13708:	and	r1, r5, #31
   1370c:	mov	r2, #1
   13710:	tst	r0, r2, lsl r1
   13714:	mov	r0, r5
   13718:	bne	13728 <__mempcpy_chk@plt+0x2148>
   1371c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13720:	cmp	r1, #0
   13724:	beq	13c80 <__mempcpy_chk@plt+0x26a0>
   13728:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1372c:	tst	r1, #1
   13730:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   13734:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13738:	cmp	r1, #2
   1373c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13740:	movwne	r1, #1
   13744:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13748:	orr	r1, r1, r2
   1374c:	tst	r1, #1
   13750:	beq	1375c <__mempcpy_chk@plt+0x217c>
   13754:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13758:	b	13798 <__mempcpy_chk@plt+0x21b8>
   1375c:	cmp	r8, r4
   13760:	movcc	r1, #39	; 0x27
   13764:	strbcc	r1, [r7, r8]
   13768:	add	r1, r8, #1
   1376c:	cmp	r1, r4
   13770:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13774:	movcc	r2, #36	; 0x24
   13778:	strbcc	r2, [r7, r1]
   1377c:	add	r1, r8, #2
   13780:	cmp	r1, r4
   13784:	movcc	r2, #39	; 0x27
   13788:	strbcc	r2, [r7, r1]
   1378c:	add	r8, r8, #3
   13790:	mov	r1, #1
   13794:	str	r1, [fp, #-56]	; 0xffffffc8
   13798:	cmp	r8, r4
   1379c:	movcc	r1, #92	; 0x5c
   137a0:	strbcc	r1, [r7, r8]
   137a4:	add	r8, r8, #1
   137a8:	cmp	r8, r4
   137ac:	strbcc	r0, [r7, r8]
   137b0:	and	r5, r5, r9
   137b4:	add	r8, r8, #1
   137b8:	add	r6, r6, #1
   137bc:	cmn	lr, #1
   137c0:	bne	1319c <__mempcpy_chk@plt+0x1bbc>
   137c4:	b	131a8 <__mempcpy_chk@plt+0x1bc8>
   137c8:	mov	r9, #0
   137cc:	ldr	r0, [sp, #36]	; 0x24
   137d0:	cmp	r0, #0
   137d4:	mov	sl, #0
   137d8:	mov	r5, #0
   137dc:	beq	136ec <__mempcpy_chk@plt+0x210c>
   137e0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   137e4:	b	137b8 <__mempcpy_chk@plt+0x21d8>
   137e8:	mov	r9, #1
   137ec:	b	13470 <__mempcpy_chk@plt+0x1e90>
   137f0:	mov	r0, #0
   137f4:	str	r0, [fp, #-36]	; 0xffffffdc
   137f8:	str	r0, [fp, #-40]	; 0xffffffd8
   137fc:	cmn	lr, #1
   13800:	bne	13814 <__mempcpy_chk@plt+0x2234>
   13804:	mov	r0, ip
   13808:	bl	114cc <strlen@plt>
   1380c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13810:	mov	lr, r0
   13814:	add	r0, ip, r6
   13818:	str	r0, [sp, #20]
   1381c:	mov	r9, #1
   13820:	mov	r7, #0
   13824:	sub	r4, fp, #40	; 0x28
   13828:	str	lr, [sp, #28]
   1382c:	str	r7, [sp, #44]	; 0x2c
   13830:	add	r7, r7, r6
   13834:	add	r1, ip, r7
   13838:	sub	r2, lr, r7
   1383c:	sub	r0, fp, #44	; 0x2c
   13840:	mov	r3, r4
   13844:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   13848:	cmp	r0, #0
   1384c:	beq	13d0c <__mempcpy_chk@plt+0x272c>
   13850:	cmn	r0, #1
   13854:	beq	13ccc <__mempcpy_chk@plt+0x26ec>
   13858:	cmn	r0, #2
   1385c:	ldr	lr, [sp, #28]
   13860:	beq	13cd4 <__mempcpy_chk@plt+0x26f4>
   13864:	cmp	r0, #2
   13868:	mov	r1, #0
   1386c:	movwcc	r1, #1
   13870:	ldr	r2, [sp, #60]	; 0x3c
   13874:	eor	r2, r2, #1
   13878:	orrs	r1, r2, r1
   1387c:	ldr	r4, [sp, #24]
   13880:	bne	13940 <__mempcpy_chk@plt+0x2360>
   13884:	ldr	r1, [sp, #44]	; 0x2c
   13888:	ldr	r2, [sp, #20]
   1388c:	add	r1, r2, r1
   13890:	mov	r2, #1
   13894:	ldrb	r3, [r1, r2]
   13898:	sub	r3, r3, #91	; 0x5b
   1389c:	cmp	r3, #33	; 0x21
   138a0:	bhi	13934 <__mempcpy_chk@plt+0x2354>
   138a4:	add	r7, pc, #0
   138a8:	ldr	pc, [r7, r3, lsl #2]
   138ac:	strdeq	r3, [r1], -r4
   138b0:	strdeq	r3, [r1], -r4
   138b4:	andeq	r3, r1, r4, lsr r9
   138b8:	strdeq	r3, [r1], -r4
   138bc:	andeq	r3, r1, r4, lsr r9
   138c0:	strdeq	r3, [r1], -r4
   138c4:	andeq	r3, r1, r4, lsr r9
   138c8:	andeq	r3, r1, r4, lsr r9
   138cc:	andeq	r3, r1, r4, lsr r9
   138d0:	andeq	r3, r1, r4, lsr r9
   138d4:	andeq	r3, r1, r4, lsr r9
   138d8:	andeq	r3, r1, r4, lsr r9
   138dc:	andeq	r3, r1, r4, lsr r9
   138e0:	andeq	r3, r1, r4, lsr r9
   138e4:	andeq	r3, r1, r4, lsr r9
   138e8:	andeq	r3, r1, r4, lsr r9
   138ec:	andeq	r3, r1, r4, lsr r9
   138f0:	andeq	r3, r1, r4, lsr r9
   138f4:	andeq	r3, r1, r4, lsr r9
   138f8:	andeq	r3, r1, r4, lsr r9
   138fc:	andeq	r3, r1, r4, lsr r9
   13900:	andeq	r3, r1, r4, lsr r9
   13904:	andeq	r3, r1, r4, lsr r9
   13908:	andeq	r3, r1, r4, lsr r9
   1390c:	andeq	r3, r1, r4, lsr r9
   13910:	andeq	r3, r1, r4, lsr r9
   13914:	andeq	r3, r1, r4, lsr r9
   13918:	andeq	r3, r1, r4, lsr r9
   1391c:	andeq	r3, r1, r4, lsr r9
   13920:	andeq	r3, r1, r4, lsr r9
   13924:	andeq	r3, r1, r4, lsr r9
   13928:	andeq	r3, r1, r4, lsr r9
   1392c:	andeq	r3, r1, r4, lsr r9
   13930:	strdeq	r3, [r1], -r4
   13934:	add	r2, r2, #1
   13938:	cmp	r2, r0
   1393c:	bcc	13894 <__mempcpy_chk@plt+0x22b4>
   13940:	ldr	r7, [sp, #44]	; 0x2c
   13944:	add	r7, r0, r7
   13948:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1394c:	bl	113e8 <iswprint@plt>
   13950:	cmp	r0, #0
   13954:	movwne	r0, #1
   13958:	and	r9, r9, r0
   1395c:	sub	r4, fp, #40	; 0x28
   13960:	mov	r0, r4
   13964:	bl	1137c <mbsinit@plt>
   13968:	ldr	lr, [sp, #28]
   1396c:	cmp	r0, #0
   13970:	ldr	ip, [fp, #-84]	; 0xffffffac
   13974:	beq	1382c <__mempcpy_chk@plt+0x224c>
   13978:	b	13d14 <__mempcpy_chk@plt+0x2734>
   1397c:	ldr	r0, [sp, #32]
   13980:	cmp	r0, #0
   13984:	beq	13a1c <__mempcpy_chk@plt+0x243c>
   13988:	add	r0, r6, #2
   1398c:	cmp	r0, lr
   13990:	bcs	13a1c <__mempcpy_chk@plt+0x243c>
   13994:	add	r1, ip, r6
   13998:	ldrb	r1, [r1, #1]
   1399c:	cmp	r1, #63	; 0x3f
   139a0:	bne	13a1c <__mempcpy_chk@plt+0x243c>
   139a4:	ldrb	r9, [ip, r0]
   139a8:	sub	r2, r9, #33	; 0x21
   139ac:	cmp	r2, #29
   139b0:	bhi	13a1c <__mempcpy_chk@plt+0x243c>
   139b4:	mov	r3, #1
   139b8:	movw	r1, #20929	; 0x51c1
   139bc:	movt	r1, #14336	; 0x3800
   139c0:	tst	r1, r3, lsl r2
   139c4:	beq	13a1c <__mempcpy_chk@plt+0x243c>
   139c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   139cc:	tst	r1, #1
   139d0:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   139d4:	cmp	r8, r4
   139d8:	movcc	r1, #63	; 0x3f
   139dc:	strbcc	r1, [r7, r8]
   139e0:	add	r2, r8, #1
   139e4:	cmp	r2, r4
   139e8:	movcc	r1, #34	; 0x22
   139ec:	strbcc	r1, [r7, r2]
   139f0:	add	r2, r8, #2
   139f4:	cmp	r2, r4
   139f8:	movcc	r1, #34	; 0x22
   139fc:	strbcc	r1, [r7, r2]
   13a00:	add	r2, r8, #3
   13a04:	cmp	r2, r4
   13a08:	movcc	r1, #63	; 0x3f
   13a0c:	strbcc	r1, [r7, r2]
   13a10:	add	r8, r8, #4
   13a14:	mov	r6, r0
   13a18:	mov	r5, r9
   13a1c:	mov	r9, #0
   13a20:	b	13470 <__mempcpy_chk@plt+0x1e90>
   13a24:	add	r1, r2, r6
   13a28:	str	r1, [sp, #44]	; 0x2c
   13a2c:	add	r1, r6, #1
   13a30:	mov	r3, #0
   13a34:	ldr	lr, [sp, #28]
   13a38:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13a3c:	tst	r0, #1
   13a40:	bne	13b34 <__mempcpy_chk@plt+0x2554>
   13a44:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13a48:	tst	r2, #1
   13a4c:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   13a50:	cmp	r6, #2
   13a54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a58:	movwne	r3, #1
   13a5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a60:	orr	r3, r3, r2
   13a64:	tst	r3, #1
   13a68:	bne	13aa4 <__mempcpy_chk@plt+0x24c4>
   13a6c:	cmp	r8, r4
   13a70:	movcc	r2, #39	; 0x27
   13a74:	strbcc	r2, [r7, r8]
   13a78:	add	r3, r8, #1
   13a7c:	cmp	r3, r4
   13a80:	movcc	r2, #36	; 0x24
   13a84:	strbcc	r2, [r7, r3]
   13a88:	add	r3, r8, #2
   13a8c:	cmp	r3, r4
   13a90:	movcc	r2, #39	; 0x27
   13a94:	strbcc	r2, [r7, r3]
   13a98:	add	r8, r8, #3
   13a9c:	mov	r2, #1
   13aa0:	str	r2, [fp, #-56]	; 0xffffffc8
   13aa4:	cmp	r8, r4
   13aa8:	movcc	r2, #92	; 0x5c
   13aac:	strbcc	r2, [r7, r8]
   13ab0:	add	r3, r8, #1
   13ab4:	cmp	r3, r4
   13ab8:	bcs	13ad8 <__mempcpy_chk@plt+0x24f8>
   13abc:	and	r7, r5, #192	; 0xc0
   13ac0:	mov	r2, #48	; 0x30
   13ac4:	orr	r7, r2, r7, lsr #6
   13ac8:	ldr	r6, [sp, #80]	; 0x50
   13acc:	strb	r7, [r6, r3]
   13ad0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13ad4:	ldr	r7, [sp, #80]	; 0x50
   13ad8:	add	r3, r8, #2
   13adc:	cmp	r3, r4
   13ae0:	bcs	13b00 <__mempcpy_chk@plt+0x2520>
   13ae4:	lsr	r7, r5, #3
   13ae8:	mov	r2, #6
   13aec:	bfi	r7, r2, #3, #29
   13af0:	ldr	r6, [sp, #80]	; 0x50
   13af4:	strb	r7, [r6, r3]
   13af8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13afc:	ldr	r7, [sp, #80]	; 0x50
   13b00:	mov	r2, #6
   13b04:	bfi	r5, r2, #3, #29
   13b08:	add	r8, r8, #3
   13b0c:	mov	r3, #1
   13b10:	b	13b58 <__mempcpy_chk@plt+0x2578>
   13b14:	ldr	r7, [sp, #80]	; 0x50
   13b18:	cmp	r8, r4
   13b1c:	strbcc	r5, [r7, r8]
   13b20:	ldrb	r5, [ip, r1]
   13b24:	add	r1, r1, #1
   13b28:	add	r8, r8, #1
   13b2c:	tst	r0, #1
   13b30:	beq	13a44 <__mempcpy_chk@plt+0x2464>
   13b34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13b38:	tst	r2, #1
   13b3c:	beq	13b50 <__mempcpy_chk@plt+0x2570>
   13b40:	cmp	r8, r4
   13b44:	movcc	r2, #92	; 0x5c
   13b48:	strbcc	r2, [r7, r8]
   13b4c:	add	r8, r8, #1
   13b50:	mov	r2, #0
   13b54:	str	r2, [fp, #-52]	; 0xffffffcc
   13b58:	and	sl, r3, #1
   13b5c:	ldr	r2, [sp, #44]	; 0x2c
   13b60:	cmp	r2, r1
   13b64:	bls	13c70 <__mempcpy_chk@plt+0x2690>
   13b68:	cmp	sl, #0
   13b6c:	movwne	sl, #1
   13b70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13b74:	mvn	r7, r2
   13b78:	orr	r7, r7, sl
   13b7c:	tst	r7, #1
   13b80:	bne	13b14 <__mempcpy_chk@plt+0x2534>
   13b84:	cmp	r8, r4
   13b88:	ldrcc	r7, [sp, #80]	; 0x50
   13b8c:	movcc	r2, #39	; 0x27
   13b90:	strbcc	r2, [r7, r8]
   13b94:	add	r7, r8, #1
   13b98:	cmp	r7, r4
   13b9c:	ldrcc	r6, [sp, #80]	; 0x50
   13ba0:	movcc	r2, #39	; 0x27
   13ba4:	strbcc	r2, [r6, r7]
   13ba8:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   13bac:	add	r8, r8, #2
   13bb0:	mov	r2, #0
   13bb4:	str	r2, [fp, #-56]	; 0xffffffc8
   13bb8:	b	13b14 <__mempcpy_chk@plt+0x2534>
   13bbc:	cmp	r8, r4
   13bc0:	movcc	r0, #39	; 0x27
   13bc4:	strbcc	r0, [r7, r8]
   13bc8:	add	r0, r8, #1
   13bcc:	cmp	r0, r4
   13bd0:	movcc	r1, #36	; 0x24
   13bd4:	strbcc	r1, [r7, r0]
   13bd8:	add	r0, r8, #2
   13bdc:	cmp	r0, r4
   13be0:	movcc	r1, #39	; 0x27
   13be4:	strbcc	r1, [r7, r0]
   13be8:	add	r0, r8, #3
   13bec:	mov	r2, #1
   13bf0:	cmp	r0, r4
   13bf4:	movcc	r1, #92	; 0x5c
   13bf8:	strbcc	r1, [r7, r0]
   13bfc:	str	r2, [fp, #-56]	; 0xffffffc8
   13c00:	add	r8, r0, #1
   13c04:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13c08:	cmp	r1, #2
   13c0c:	beq	13c60 <__mempcpy_chk@plt+0x2680>
   13c10:	add	r1, r6, #1
   13c14:	mov	r9, #0
   13c18:	mov	sl, #1
   13c1c:	mov	r5, #48	; 0x30
   13c20:	cmp	r1, lr
   13c24:	bcs	13470 <__mempcpy_chk@plt+0x1e90>
   13c28:	ldrb	r1, [ip, r1]
   13c2c:	sub	r1, r1, #48	; 0x30
   13c30:	uxtb	r1, r1
   13c34:	cmp	r1, #9
   13c38:	bhi	13470 <__mempcpy_chk@plt+0x1e90>
   13c3c:	cmp	r8, r4
   13c40:	movcc	r1, #48	; 0x30
   13c44:	strbcc	r1, [r7, r8]
   13c48:	add	r1, r0, #2
   13c4c:	cmp	r1, r4
   13c50:	movcc	r2, #48	; 0x30
   13c54:	strbcc	r2, [r7, r1]
   13c58:	add	r8, r0, #3
   13c5c:	b	13470 <__mempcpy_chk@plt+0x1e90>
   13c60:	mov	r0, #48	; 0x30
   13c64:	mov	sl, #1
   13c68:	mov	r9, #0
   13c6c:	b	1371c <__mempcpy_chk@plt+0x213c>
   13c70:	sub	r6, r1, #1
   13c74:	cmp	sl, #0
   13c78:	movwne	sl, #1
   13c7c:	mov	r0, r5
   13c80:	cmp	sl, #0
   13c84:	bne	13cc4 <__mempcpy_chk@plt+0x26e4>
   13c88:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13c8c:	tst	r1, #1
   13c90:	beq	13cc4 <__mempcpy_chk@plt+0x26e4>
   13c94:	cmp	r8, r4
   13c98:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13c9c:	movcc	r1, #39	; 0x27
   13ca0:	strbcc	r1, [r7, r8]
   13ca4:	add	r1, r8, #1
   13ca8:	cmp	r1, r4
   13cac:	movcc	r2, #39	; 0x27
   13cb0:	strbcc	r2, [r7, r1]
   13cb4:	add	r8, r8, #2
   13cb8:	mov	r1, #0
   13cbc:	str	r1, [fp, #-56]	; 0xffffffc8
   13cc0:	b	137a8 <__mempcpy_chk@plt+0x21c8>
   13cc4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13cc8:	b	137a8 <__mempcpy_chk@plt+0x21c8>
   13ccc:	mov	r9, #0
   13cd0:	b	13d0c <__mempcpy_chk@plt+0x272c>
   13cd4:	mov	r9, #0
   13cd8:	cmp	r7, lr
   13cdc:	bcs	13d0c <__mempcpy_chk@plt+0x272c>
   13ce0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ce4:	ldr	r7, [sp, #44]	; 0x2c
   13ce8:	ldr	r0, [sp, #20]
   13cec:	ldrb	r0, [r0, r7]
   13cf0:	cmp	r0, #0
   13cf4:	beq	13d14 <__mempcpy_chk@plt+0x2734>
   13cf8:	add	r7, r7, #1
   13cfc:	add	r0, r6, r7
   13d00:	cmp	r0, lr
   13d04:	bcc	13ce8 <__mempcpy_chk@plt+0x2708>
   13d08:	b	13d14 <__mempcpy_chk@plt+0x2734>
   13d0c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13d10:	ldr	r7, [sp, #44]	; 0x2c
   13d14:	mov	r1, r7
   13d18:	ldr	r7, [sp, #80]	; 0x50
   13d1c:	b	13644 <__mempcpy_chk@plt+0x2064>
   13d20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13d24:	eor	r0, r1, #2
   13d28:	orr	r0, r0, r8
   13d2c:	clz	r0, r0
   13d30:	lsr	r0, r0, #5
   13d34:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13d38:	tst	r2, r0
   13d3c:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   13d40:	cmp	r1, #2
   13d44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13d48:	movwne	r0, #1
   13d4c:	orr	r0, r2, r0
   13d50:	tst	r0, #1
   13d54:	ldreq	r0, [sp, #56]	; 0x38
   13d58:	eoreq	r0, r0, #1
   13d5c:	tsteq	r0, #1
   13d60:	bne	13d94 <__mempcpy_chk@plt+0x27b4>
   13d64:	mov	r9, lr
   13d68:	tst	r5, #1
   13d6c:	bne	13e64 <__mempcpy_chk@plt+0x2884>
   13d70:	ldr	r0, [sp, #72]	; 0x48
   13d74:	cmp	r0, #0
   13d78:	beq	13d94 <__mempcpy_chk@plt+0x27b4>
   13d7c:	mov	r5, #0
   13d80:	cmp	r4, #0
   13d84:	ldr	r0, [sp, #84]	; 0x54
   13d88:	mov	sl, r2
   13d8c:	ldr	r6, [sp, #72]	; 0x48
   13d90:	beq	12f2c <__mempcpy_chk@plt+0x194c>
   13d94:	ldr	r1, [sp, #92]	; 0x5c
   13d98:	clz	r0, r1
   13d9c:	lsr	r0, r0, #5
   13da0:	orr	r0, r0, r2
   13da4:	tst	r0, #1
   13da8:	bne	13dd4 <__mempcpy_chk@plt+0x27f4>
   13dac:	ldrb	r0, [r1]
   13db0:	cmp	r0, #0
   13db4:	beq	13dd4 <__mempcpy_chk@plt+0x27f4>
   13db8:	add	r1, r1, #1
   13dbc:	cmp	r8, r4
   13dc0:	strbcc	r0, [r7, r8]
   13dc4:	add	r8, r8, #1
   13dc8:	ldrb	r0, [r1], #1
   13dcc:	cmp	r0, #0
   13dd0:	bne	13dbc <__mempcpy_chk@plt+0x27dc>
   13dd4:	cmp	r8, r4
   13dd8:	movcc	r0, #0
   13ddc:	strbcc	r0, [r7, r8]
   13de0:	b	13e58 <__mempcpy_chk@plt+0x2878>
   13de4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13de8:	mov	lr, r4
   13dec:	mov	r4, r5
   13df0:	b	13dfc <__mempcpy_chk@plt+0x281c>
   13df4:	ldr	r7, [sp, #80]	; 0x50
   13df8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13dfc:	mov	r0, #0
   13e00:	ldr	r1, [fp, #12]
   13e04:	bic	r1, r1, #2
   13e08:	ldr	r2, [sp, #84]	; 0x54
   13e0c:	tst	r2, #1
   13e10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e14:	mov	r2, r3
   13e18:	movwne	r2, #4
   13e1c:	cmp	r3, #2
   13e20:	movne	r2, r3
   13e24:	str	r2, [sp]
   13e28:	str	r1, [sp, #4]
   13e2c:	str	r0, [sp, #8]
   13e30:	ldr	r0, [sp, #68]	; 0x44
   13e34:	str	r0, [sp, #12]
   13e38:	ldr	r0, [sp, #76]	; 0x4c
   13e3c:	str	r0, [sp, #16]
   13e40:	mov	r0, r7
   13e44:	mov	r1, r4
   13e48:	mov	r2, ip
   13e4c:	mov	r3, lr
   13e50:	bl	12ea4 <__mempcpy_chk@plt+0x18c4>
   13e54:	mov	r8, r0
   13e58:	mov	r0, r8
   13e5c:	sub	sp, fp, #28
   13e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e64:	mov	r0, #5
   13e68:	str	r0, [sp]
   13e6c:	ldr	r0, [fp, #12]
   13e70:	str	r0, [sp, #4]
   13e74:	ldr	r0, [fp, #16]
   13e78:	str	r0, [sp, #8]
   13e7c:	ldr	r0, [sp, #68]	; 0x44
   13e80:	str	r0, [sp, #12]
   13e84:	ldr	r0, [sp, #76]	; 0x4c
   13e88:	str	r0, [sp, #16]
   13e8c:	mov	r0, r7
   13e90:	ldr	r1, [sp, #72]	; 0x48
   13e94:	ldr	r2, [fp, #-84]	; 0xffffffac
   13e98:	mov	r3, r9
   13e9c:	b	13e50 <__mempcpy_chk@plt+0x2870>
   13ea0:	bl	115c8 <abort@plt>
   13ea4:	mov	r3, r2
   13ea8:	mov	r2, #0
   13eac:	b	13eb0 <__mempcpy_chk@plt+0x28d0>
   13eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb4:	add	fp, sp, #28
   13eb8:	sub	sp, sp, #36	; 0x24
   13ebc:	mov	r4, r2
   13ec0:	str	r2, [sp, #24]
   13ec4:	mov	r5, r1
   13ec8:	mov	r6, r0
   13ecc:	str	r0, [sp, #20]
   13ed0:	movw	r8, #25352	; 0x6308
   13ed4:	movt	r8, #3
   13ed8:	cmp	r3, #0
   13edc:	movne	r8, r3
   13ee0:	bl	114d8 <__errno_location@plt>
   13ee4:	str	r0, [sp, #28]
   13ee8:	ldm	r8, {r3, r9}
   13eec:	ldr	r1, [r8, #40]	; 0x28
   13ef0:	ldr	r2, [r8, #44]	; 0x2c
   13ef4:	ldr	r7, [r0]
   13ef8:	str	r7, [sp, #32]
   13efc:	add	sl, r8, #8
   13f00:	cmp	r4, #0
   13f04:	orreq	r9, r9, #1
   13f08:	stm	sp, {r3, r9, sl}
   13f0c:	str	r1, [sp, #12]
   13f10:	str	r2, [sp, #16]
   13f14:	mov	r0, #0
   13f18:	mov	r1, #0
   13f1c:	mov	r2, r6
   13f20:	mov	r3, r5
   13f24:	mov	r7, r5
   13f28:	bl	12ea4 <__mempcpy_chk@plt+0x18c4>
   13f2c:	mov	r5, r0
   13f30:	add	r4, r0, #1
   13f34:	mov	r0, r4
   13f38:	bl	21b0c <__mempcpy_chk@plt+0x1052c>
   13f3c:	mov	r6, r0
   13f40:	ldr	r0, [r8]
   13f44:	ldr	r1, [r8, #40]	; 0x28
   13f48:	ldr	r2, [r8, #44]	; 0x2c
   13f4c:	stm	sp, {r0, r9, sl}
   13f50:	str	r1, [sp, #12]
   13f54:	str	r2, [sp, #16]
   13f58:	mov	r0, r6
   13f5c:	mov	r1, r4
   13f60:	ldr	r2, [sp, #20]
   13f64:	mov	r3, r7
   13f68:	bl	12ea4 <__mempcpy_chk@plt+0x18c4>
   13f6c:	ldr	r0, [sp, #24]
   13f70:	ldr	r1, [sp, #32]
   13f74:	ldr	r2, [sp, #28]
   13f78:	str	r1, [r2]
   13f7c:	cmp	r0, #0
   13f80:	strne	r5, [r0]
   13f84:	mov	r0, r6
   13f88:	sub	sp, fp, #28
   13f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f94:	add	fp, sp, #24
   13f98:	movw	r8, #16704	; 0x4140
   13f9c:	movt	r8, #3
   13fa0:	ldr	r4, [r8]
   13fa4:	movw	r5, #16708	; 0x4144
   13fa8:	movt	r5, #3
   13fac:	ldr	r0, [r5]
   13fb0:	cmp	r0, #2
   13fb4:	blt	13fe0 <__mempcpy_chk@plt+0x2a00>
   13fb8:	add	r7, r4, #12
   13fbc:	mov	r6, #0
   13fc0:	ldr	r0, [r7, r6, lsl #3]
   13fc4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   13fc8:	add	r0, r6, #1
   13fcc:	ldr	r1, [r5]
   13fd0:	add	r2, r6, #2
   13fd4:	cmp	r2, r1
   13fd8:	mov	r6, r0
   13fdc:	blt	13fc0 <__mempcpy_chk@plt+0x29e0>
   13fe0:	ldr	r0, [r4, #4]
   13fe4:	movw	r7, #25400	; 0x6338
   13fe8:	movt	r7, #3
   13fec:	cmp	r0, r7
   13ff0:	beq	14008 <__mempcpy_chk@plt+0x2a28>
   13ff4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   13ff8:	movw	r0, #16712	; 0x4148
   13ffc:	movt	r0, #3
   14000:	mov	r6, #256	; 0x100
   14004:	strd	r6, [r0]
   14008:	movw	r6, #16712	; 0x4148
   1400c:	movt	r6, #3
   14010:	cmp	r4, r6
   14014:	beq	14024 <__mempcpy_chk@plt+0x2a44>
   14018:	mov	r0, r4
   1401c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   14020:	str	r6, [r8]
   14024:	mov	r0, #1
   14028:	str	r0, [r5]
   1402c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14030:	movw	r3, #25352	; 0x6308
   14034:	movt	r3, #3
   14038:	mvn	r2, #0
   1403c:	b	14040 <__mempcpy_chk@plt+0x2a60>
   14040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14044:	add	fp, sp, #28
   14048:	sub	sp, sp, #44	; 0x2c
   1404c:	mov	r7, r3
   14050:	str	r2, [sp, #36]	; 0x24
   14054:	str	r1, [sp, #32]
   14058:	mov	r5, r0
   1405c:	bl	114d8 <__errno_location@plt>
   14060:	cmp	r5, #0
   14064:	blt	141d0 <__mempcpy_chk@plt+0x2bf0>
   14068:	cmn	r5, #-2147483647	; 0x80000001
   1406c:	beq	141d0 <__mempcpy_chk@plt+0x2bf0>
   14070:	movw	r4, #16704	; 0x4140
   14074:	movt	r4, #3
   14078:	ldr	r6, [r4]
   1407c:	str	r0, [sp, #28]
   14080:	ldr	r0, [r0]
   14084:	str	r0, [sp, #24]
   14088:	movw	r8, #16708	; 0x4144
   1408c:	movt	r8, #3
   14090:	ldr	r1, [r8]
   14094:	cmp	r1, r5
   14098:	ble	140a4 <__mempcpy_chk@plt+0x2ac4>
   1409c:	mov	sl, r6
   140a0:	b	1410c <__mempcpy_chk@plt+0x2b2c>
   140a4:	str	r1, [fp, #-32]	; 0xffffffe0
   140a8:	mov	r0, #8
   140ac:	str	r0, [sp]
   140b0:	movw	r9, #16712	; 0x4148
   140b4:	movt	r9, #3
   140b8:	subs	r0, r6, r9
   140bc:	movne	r0, r6
   140c0:	add	r2, r5, #1
   140c4:	sub	r2, r2, r1
   140c8:	sub	r1, fp, #32
   140cc:	mvn	r3, #-2147483648	; 0x80000000
   140d0:	bl	21bf4 <__mempcpy_chk@plt+0x10614>
   140d4:	mov	sl, r0
   140d8:	str	r0, [r4]
   140dc:	cmp	r6, r9
   140e0:	ldrdeq	r0, [r9]
   140e4:	stmeq	sl, {r0, r1}
   140e8:	ldr	r1, [r8]
   140ec:	add	r0, sl, r1, lsl #3
   140f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140f4:	sub	r1, r2, r1
   140f8:	lsl	r2, r1, #3
   140fc:	mov	r1, #0
   14100:	bl	114fc <memset@plt>
   14104:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14108:	str	r0, [r8]
   1410c:	mov	r9, sl
   14110:	ldr	r6, [r9, r5, lsl #3]!
   14114:	ldr	r4, [r9, #4]!
   14118:	ldm	r7, {r0, r1}
   1411c:	ldr	r2, [r7, #40]	; 0x28
   14120:	ldr	r3, [r7, #44]	; 0x2c
   14124:	orr	r8, r1, #1
   14128:	add	r1, r7, #8
   1412c:	stm	sp, {r0, r8}
   14130:	str	r1, [sp, #20]
   14134:	add	r0, sp, #8
   14138:	stm	r0, {r1, r2, r3}
   1413c:	mov	r0, r4
   14140:	mov	r1, r6
   14144:	ldr	r2, [sp, #32]
   14148:	ldr	r3, [sp, #36]	; 0x24
   1414c:	bl	12ea4 <__mempcpy_chk@plt+0x18c4>
   14150:	cmp	r6, r0
   14154:	bhi	141b8 <__mempcpy_chk@plt+0x2bd8>
   14158:	add	r6, r0, #1
   1415c:	str	r6, [sl, r5, lsl #3]
   14160:	movw	r0, #25400	; 0x6338
   14164:	movt	r0, #3
   14168:	cmp	r4, r0
   1416c:	beq	14178 <__mempcpy_chk@plt+0x2b98>
   14170:	mov	r0, r4
   14174:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   14178:	mov	r0, r6
   1417c:	bl	21b0c <__mempcpy_chk@plt+0x1052c>
   14180:	mov	r4, r0
   14184:	str	r0, [r9]
   14188:	ldr	r0, [r7]
   1418c:	ldr	r1, [r7, #40]	; 0x28
   14190:	ldr	r2, [r7, #44]	; 0x2c
   14194:	stm	sp, {r0, r8}
   14198:	ldr	r0, [sp, #20]
   1419c:	add	r3, sp, #8
   141a0:	stm	r3, {r0, r1, r2}
   141a4:	mov	r0, r4
   141a8:	mov	r1, r6
   141ac:	ldr	r2, [sp, #32]
   141b0:	ldr	r3, [sp, #36]	; 0x24
   141b4:	bl	12ea4 <__mempcpy_chk@plt+0x18c4>
   141b8:	ldr	r0, [sp, #28]
   141bc:	ldr	r1, [sp, #24]
   141c0:	str	r1, [r0]
   141c4:	mov	r0, r4
   141c8:	sub	sp, fp, #28
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141d0:	bl	115c8 <abort@plt>
   141d4:	movw	r3, #25352	; 0x6308
   141d8:	movt	r3, #3
   141dc:	b	14040 <__mempcpy_chk@plt+0x2a60>
   141e0:	mov	r1, r0
   141e4:	mov	r0, #0
   141e8:	b	14030 <__mempcpy_chk@plt+0x2a50>
   141ec:	mov	r2, r1
   141f0:	mov	r1, r0
   141f4:	mov	r0, #0
   141f8:	b	141d4 <__mempcpy_chk@plt+0x2bf4>
   141fc:	push	{r4, r5, r6, sl, fp, lr}
   14200:	add	fp, sp, #16
   14204:	sub	sp, sp, #48	; 0x30
   14208:	mov	r4, r2
   1420c:	mov	r5, r0
   14210:	mov	r6, sp
   14214:	mov	r0, r6
   14218:	bl	14238 <__mempcpy_chk@plt+0x2c58>
   1421c:	mov	r0, r5
   14220:	mov	r1, r4
   14224:	mvn	r2, #0
   14228:	mov	r3, r6
   1422c:	bl	14040 <__mempcpy_chk@plt+0x2a60>
   14230:	sub	sp, fp, #16
   14234:	pop	{r4, r5, r6, sl, fp, pc}
   14238:	vmov.i32	q8, #0	; 0x00000000
   1423c:	mov	r2, #32
   14240:	mov	r3, r0
   14244:	vst1.32	{d16-d17}, [r3], r2
   14248:	vst1.32	{d16-d17}, [r3]
   1424c:	add	r2, r0, #16
   14250:	vst1.32	{d16-d17}, [r2]
   14254:	cmp	r1, #10
   14258:	strne	r1, [r0]
   1425c:	bxne	lr
   14260:	push	{fp, lr}
   14264:	mov	fp, sp
   14268:	bl	115c8 <abort@plt>
   1426c:	push	{r4, r5, r6, r7, fp, lr}
   14270:	add	fp, sp, #16
   14274:	sub	sp, sp, #48	; 0x30
   14278:	mov	r4, r3
   1427c:	mov	r5, r2
   14280:	mov	r6, r0
   14284:	mov	r7, sp
   14288:	mov	r0, r7
   1428c:	bl	14238 <__mempcpy_chk@plt+0x2c58>
   14290:	mov	r0, r6
   14294:	mov	r1, r5
   14298:	mov	r2, r4
   1429c:	mov	r3, r7
   142a0:	bl	14040 <__mempcpy_chk@plt+0x2a60>
   142a4:	sub	sp, fp, #16
   142a8:	pop	{r4, r5, r6, r7, fp, pc}
   142ac:	mov	r2, r1
   142b0:	mov	r1, r0
   142b4:	mov	r0, #0
   142b8:	b	141fc <__mempcpy_chk@plt+0x2c1c>
   142bc:	mov	r3, r2
   142c0:	mov	r2, r1
   142c4:	mov	r1, r0
   142c8:	mov	r0, #0
   142cc:	b	1426c <__mempcpy_chk@plt+0x2c8c>
   142d0:	push	{r4, r5, r6, sl, fp, lr}
   142d4:	add	fp, sp, #16
   142d8:	sub	sp, sp, #48	; 0x30
   142dc:	mov	r4, r1
   142e0:	mov	r5, r0
   142e4:	mov	r0, #32
   142e8:	movw	r1, #25352	; 0x6308
   142ec:	movt	r1, #3
   142f0:	add	r3, r1, #16
   142f4:	vld1.64	{d16-d17}, [r1], r0
   142f8:	mov	r6, sp
   142fc:	vld1.64	{d18-d19}, [r3]
   14300:	add	r3, r6, #16
   14304:	vld1.64	{d20-d21}, [r1]
   14308:	vst1.64	{d18-d19}, [r3]
   1430c:	mov	r1, r6
   14310:	vst1.64	{d16-d17}, [r1], r0
   14314:	vst1.64	{d20-d21}, [r1]
   14318:	mov	r0, r6
   1431c:	mov	r1, r2
   14320:	mov	r2, #1
   14324:	bl	12d98 <__mempcpy_chk@plt+0x17b8>
   14328:	mov	r0, #0
   1432c:	mov	r1, r5
   14330:	mov	r2, r4
   14334:	mov	r3, r6
   14338:	bl	14040 <__mempcpy_chk@plt+0x2a60>
   1433c:	sub	sp, fp, #16
   14340:	pop	{r4, r5, r6, sl, fp, pc}
   14344:	mov	r2, r1
   14348:	mvn	r1, #0
   1434c:	b	142d0 <__mempcpy_chk@plt+0x2cf0>
   14350:	mov	r1, #58	; 0x3a
   14354:	b	14344 <__mempcpy_chk@plt+0x2d64>
   14358:	mov	r2, #58	; 0x3a
   1435c:	b	142d0 <__mempcpy_chk@plt+0x2cf0>
   14360:	push	{r4, r5, r6, sl, fp, lr}
   14364:	add	fp, sp, #16
   14368:	sub	sp, sp, #48	; 0x30
   1436c:	mov	r4, r2
   14370:	mov	r5, r0
   14374:	mov	r6, sp
   14378:	mov	r0, r6
   1437c:	bl	14238 <__mempcpy_chk@plt+0x2c58>
   14380:	mov	r0, r6
   14384:	mov	r1, #58	; 0x3a
   14388:	mov	r2, #1
   1438c:	bl	12d98 <__mempcpy_chk@plt+0x17b8>
   14390:	mov	r0, r5
   14394:	mov	r1, r4
   14398:	mvn	r2, #0
   1439c:	mov	r3, r6
   143a0:	bl	14040 <__mempcpy_chk@plt+0x2a60>
   143a4:	sub	sp, fp, #16
   143a8:	pop	{r4, r5, r6, sl, fp, pc}
   143ac:	push	{fp, lr}
   143b0:	mov	fp, sp
   143b4:	sub	sp, sp, #8
   143b8:	mvn	ip, #0
   143bc:	str	ip, [sp]
   143c0:	bl	143cc <__mempcpy_chk@plt+0x2dec>
   143c4:	mov	sp, fp
   143c8:	pop	{fp, pc}
   143cc:	push	{r4, r5, r6, r7, fp, lr}
   143d0:	add	fp, sp, #16
   143d4:	sub	sp, sp, #48	; 0x30
   143d8:	mov	r7, r3
   143dc:	mov	r5, r0
   143e0:	mov	r0, #32
   143e4:	movw	r3, #25352	; 0x6308
   143e8:	movt	r3, #3
   143ec:	add	r4, r3, #16
   143f0:	vld1.64	{d16-d17}, [r3], r0
   143f4:	mov	r6, sp
   143f8:	vld1.64	{d18-d19}, [r4]
   143fc:	add	r4, r6, #16
   14400:	vld1.64	{d20-d21}, [r3]
   14404:	vst1.64	{d18-d19}, [r4]
   14408:	mov	r3, r6
   1440c:	vst1.64	{d16-d17}, [r3], r0
   14410:	vst1.64	{d20-d21}, [r3]
   14414:	mov	r0, r6
   14418:	bl	12df0 <__mempcpy_chk@plt+0x1810>
   1441c:	ldr	r2, [fp, #8]
   14420:	mov	r0, r5
   14424:	mov	r1, r7
   14428:	mov	r3, r6
   1442c:	bl	14040 <__mempcpy_chk@plt+0x2a60>
   14430:	sub	sp, fp, #16
   14434:	pop	{r4, r5, r6, r7, fp, pc}
   14438:	mov	r3, r2
   1443c:	mov	r2, r1
   14440:	mov	r1, r0
   14444:	mov	r0, #0
   14448:	b	143ac <__mempcpy_chk@plt+0x2dcc>
   1444c:	push	{fp, lr}
   14450:	mov	fp, sp
   14454:	sub	sp, sp, #8
   14458:	mov	ip, r2
   1445c:	mov	r2, r1
   14460:	mov	r1, r0
   14464:	str	r3, [sp]
   14468:	mov	r0, #0
   1446c:	mov	r3, ip
   14470:	bl	143cc <__mempcpy_chk@plt+0x2dec>
   14474:	mov	sp, fp
   14478:	pop	{fp, pc}
   1447c:	movw	r3, #16720	; 0x4150
   14480:	movt	r3, #3
   14484:	b	14040 <__mempcpy_chk@plt+0x2a60>
   14488:	mov	r2, r1
   1448c:	mov	r1, r0
   14490:	mov	r0, #0
   14494:	b	1447c <__mempcpy_chk@plt+0x2e9c>
   14498:	mvn	r2, #0
   1449c:	b	1447c <__mempcpy_chk@plt+0x2e9c>
   144a0:	mov	r1, r0
   144a4:	mov	r0, #0
   144a8:	b	14498 <__mempcpy_chk@plt+0x2eb8>
   144ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144b0:	add	fp, sp, #24
   144b4:	sub	sp, sp, #16
   144b8:	mov	r4, r1
   144bc:	mov	r5, r0
   144c0:	mov	r7, #0
   144c4:	mov	r0, #0
   144c8:	mov	r1, r5
   144cc:	mov	r2, #5
   144d0:	bl	113ac <dcgettext@plt>
   144d4:	cmp	r0, r5
   144d8:	beq	144e4 <__mempcpy_chk@plt+0x2f04>
   144dc:	sub	sp, fp, #24
   144e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144e4:	bl	22654 <__mempcpy_chk@plt+0x11074>
   144e8:	mov	r6, r0
   144ec:	mov	r8, #56	; 0x38
   144f0:	mov	r0, #45	; 0x2d
   144f4:	stm	sp, {r0, r8}
   144f8:	str	r7, [sp, #8]
   144fc:	str	r7, [sp, #12]
   14500:	mov	r0, r6
   14504:	mov	r1, #85	; 0x55
   14508:	mov	r2, #84	; 0x54
   1450c:	mov	r3, #70	; 0x46
   14510:	bl	145a8 <__mempcpy_chk@plt+0x2fc8>
   14514:	cmp	r0, #0
   14518:	beq	14534 <__mempcpy_chk@plt+0x2f54>
   1451c:	ldrb	r1, [r5]
   14520:	movw	r2, #13084	; 0x331c
   14524:	movt	r2, #2
   14528:	movw	r0, #13088	; 0x3320
   1452c:	movt	r0, #2
   14530:	b	14578 <__mempcpy_chk@plt+0x2f98>
   14534:	mov	r0, #48	; 0x30
   14538:	mov	r1, #51	; 0x33
   1453c:	str	r8, [sp]
   14540:	stmib	sp, {r0, r1}
   14544:	str	r0, [sp, #12]
   14548:	mov	r0, r6
   1454c:	mov	r1, #71	; 0x47
   14550:	mov	r2, #66	; 0x42
   14554:	mov	r3, #49	; 0x31
   14558:	bl	145a8 <__mempcpy_chk@plt+0x2fc8>
   1455c:	cmp	r0, #0
   14560:	beq	14588 <__mempcpy_chk@plt+0x2fa8>
   14564:	ldrb	r1, [r5]
   14568:	movw	r2, #13092	; 0x3324
   1456c:	movt	r2, #2
   14570:	movw	r0, #13096	; 0x3328
   14574:	movt	r0, #2
   14578:	cmp	r1, #96	; 0x60
   1457c:	moveq	r0, r2
   14580:	sub	sp, fp, #24
   14584:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14588:	movw	r1, #13078	; 0x3316
   1458c:	movt	r1, #2
   14590:	movw	r0, #13082	; 0x331a
   14594:	movt	r0, #2
   14598:	cmp	r4, #9
   1459c:	moveq	r0, r1
   145a0:	sub	sp, fp, #24
   145a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   145a8:	push	{r4, r5, r6, r7, fp, lr}
   145ac:	add	fp, sp, #16
   145b0:	sub	sp, sp, #16
   145b4:	mov	r4, r3
   145b8:	mov	r5, r2
   145bc:	mov	r7, r1
   145c0:	mov	r6, r0
   145c4:	mov	r0, r1
   145c8:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   145cc:	ldrb	r1, [r6]
   145d0:	cmp	r0, #0
   145d4:	andne	r1, r1, #223	; 0xdf
   145d8:	mov	r0, #0
   145dc:	cmp	r1, r7
   145e0:	bne	14620 <__mempcpy_chk@plt+0x3040>
   145e4:	cmp	r7, #0
   145e8:	moveq	r0, #1
   145ec:	subeq	sp, fp, #16
   145f0:	popeq	{r4, r5, r6, r7, fp, pc}
   145f4:	ldr	r0, [fp, #20]
   145f8:	ldr	r1, [fp, #16]
   145fc:	ldr	r2, [fp, #12]
   14600:	ldr	r3, [fp, #8]
   14604:	str	r2, [sp]
   14608:	str	r1, [sp, #4]
   1460c:	str	r0, [sp, #8]
   14610:	mov	r0, r6
   14614:	mov	r1, r5
   14618:	mov	r2, r4
   1461c:	bl	14628 <__mempcpy_chk@plt+0x3048>
   14620:	sub	sp, fp, #16
   14624:	pop	{r4, r5, r6, r7, fp, pc}
   14628:	push	{r4, r5, r6, r7, fp, lr}
   1462c:	add	fp, sp, #16
   14630:	sub	sp, sp, #8
   14634:	mov	r4, r3
   14638:	mov	r5, r2
   1463c:	mov	r7, r1
   14640:	mov	r6, r0
   14644:	mov	r0, r1
   14648:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   1464c:	ldrb	r1, [r6, #1]
   14650:	cmp	r0, #0
   14654:	andne	r1, r1, #223	; 0xdf
   14658:	mov	r0, #0
   1465c:	cmp	r1, r7
   14660:	bne	14698 <__mempcpy_chk@plt+0x30b8>
   14664:	cmp	r7, #0
   14668:	moveq	r0, #1
   1466c:	subeq	sp, fp, #16
   14670:	popeq	{r4, r5, r6, r7, fp, pc}
   14674:	ldr	r0, [fp, #16]
   14678:	ldr	r1, [fp, #12]
   1467c:	ldr	r3, [fp, #8]
   14680:	str	r1, [sp]
   14684:	str	r0, [sp, #4]
   14688:	mov	r0, r6
   1468c:	mov	r1, r5
   14690:	mov	r2, r4
   14694:	bl	146a0 <__mempcpy_chk@plt+0x30c0>
   14698:	sub	sp, fp, #16
   1469c:	pop	{r4, r5, r6, r7, fp, pc}
   146a0:	push	{r4, r5, r6, r7, fp, lr}
   146a4:	add	fp, sp, #16
   146a8:	sub	sp, sp, #8
   146ac:	mov	r4, r3
   146b0:	mov	r5, r2
   146b4:	mov	r7, r1
   146b8:	mov	r6, r0
   146bc:	mov	r0, r1
   146c0:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   146c4:	ldrb	r1, [r6, #2]
   146c8:	cmp	r0, #0
   146cc:	andne	r1, r1, #223	; 0xdf
   146d0:	mov	r0, #0
   146d4:	cmp	r1, r7
   146d8:	bne	14708 <__mempcpy_chk@plt+0x3128>
   146dc:	cmp	r7, #0
   146e0:	moveq	r0, #1
   146e4:	subeq	sp, fp, #16
   146e8:	popeq	{r4, r5, r6, r7, fp, pc}
   146ec:	ldr	r0, [fp, #12]
   146f0:	ldr	r3, [fp, #8]
   146f4:	str	r0, [sp]
   146f8:	mov	r0, r6
   146fc:	mov	r1, r5
   14700:	mov	r2, r4
   14704:	bl	14710 <__mempcpy_chk@plt+0x3130>
   14708:	sub	sp, fp, #16
   1470c:	pop	{r4, r5, r6, r7, fp, pc}
   14710:	push	{r4, r5, r6, r7, fp, lr}
   14714:	add	fp, sp, #16
   14718:	mov	r4, r3
   1471c:	mov	r5, r2
   14720:	mov	r7, r1
   14724:	mov	r6, r0
   14728:	mov	r0, r1
   1472c:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   14730:	ldrb	r1, [r6, #3]
   14734:	ldr	r3, [fp, #8]
   14738:	cmp	r0, #0
   1473c:	andne	r1, r1, #223	; 0xdf
   14740:	mov	r0, #0
   14744:	cmp	r1, r7
   14748:	popne	{r4, r5, r6, r7, fp, pc}
   1474c:	cmp	r7, #0
   14750:	beq	14768 <__mempcpy_chk@plt+0x3188>
   14754:	mov	r0, r6
   14758:	mov	r1, r5
   1475c:	mov	r2, r4
   14760:	pop	{r4, r5, r6, r7, fp, lr}
   14764:	b	14770 <__mempcpy_chk@plt+0x3190>
   14768:	mov	r0, #1
   1476c:	pop	{r4, r5, r6, r7, fp, pc}
   14770:	push	{r4, r5, r6, r7, fp, lr}
   14774:	add	fp, sp, #16
   14778:	mov	r4, r3
   1477c:	mov	r5, r2
   14780:	mov	r7, r1
   14784:	mov	r6, r0
   14788:	mov	r0, r1
   1478c:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   14790:	ldrb	r1, [r6, #4]
   14794:	cmp	r0, #0
   14798:	andne	r1, r1, #223	; 0xdf
   1479c:	mov	r0, #0
   147a0:	cmp	r1, r7
   147a4:	popne	{r4, r5, r6, r7, fp, pc}
   147a8:	cmp	r7, #0
   147ac:	beq	147c4 <__mempcpy_chk@plt+0x31e4>
   147b0:	mov	r0, r6
   147b4:	mov	r1, r5
   147b8:	mov	r2, r4
   147bc:	pop	{r4, r5, r6, r7, fp, lr}
   147c0:	b	147cc <__mempcpy_chk@plt+0x31ec>
   147c4:	mov	r0, #1
   147c8:	pop	{r4, r5, r6, r7, fp, pc}
   147cc:	push	{r4, r5, r6, sl, fp, lr}
   147d0:	add	fp, sp, #16
   147d4:	mov	r4, r2
   147d8:	mov	r6, r1
   147dc:	mov	r5, r0
   147e0:	mov	r0, r1
   147e4:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   147e8:	ldrb	r1, [r5, #5]
   147ec:	cmp	r0, #0
   147f0:	andne	r1, r1, #223	; 0xdf
   147f4:	mov	r0, #0
   147f8:	cmp	r1, r6
   147fc:	popne	{r4, r5, r6, sl, fp, pc}
   14800:	cmp	r6, #0
   14804:	beq	14818 <__mempcpy_chk@plt+0x3238>
   14808:	mov	r0, r5
   1480c:	mov	r1, r4
   14810:	pop	{r4, r5, r6, sl, fp, lr}
   14814:	b	14820 <__mempcpy_chk@plt+0x3240>
   14818:	mov	r0, #1
   1481c:	pop	{r4, r5, r6, sl, fp, pc}
   14820:	push	{r4, r5, fp, lr}
   14824:	add	fp, sp, #8
   14828:	mov	r5, r1
   1482c:	mov	r4, r0
   14830:	mov	r0, r1
   14834:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   14838:	ldrb	r1, [r4, #6]
   1483c:	cmp	r0, #0
   14840:	andne	r1, r1, #223	; 0xdf
   14844:	mov	r0, #0
   14848:	cmp	r1, r5
   1484c:	popne	{r4, r5, fp, pc}
   14850:	cmp	r5, #0
   14854:	beq	14864 <__mempcpy_chk@plt+0x3284>
   14858:	mov	r0, r4
   1485c:	pop	{r4, r5, fp, lr}
   14860:	b	1486c <__mempcpy_chk@plt+0x328c>
   14864:	mov	r0, #1
   14868:	pop	{r4, r5, fp, pc}
   1486c:	push	{r4, sl, fp, lr}
   14870:	add	fp, sp, #8
   14874:	mov	r4, r0
   14878:	mov	r0, #0
   1487c:	bl	222ec <__mempcpy_chk@plt+0x10d0c>
   14880:	ldrb	r1, [r4, #7]
   14884:	cmp	r0, #0
   14888:	beq	148a0 <__mempcpy_chk@plt+0x32c0>
   1488c:	tst	r1, #223	; 0xdf
   14890:	moveq	r0, #1
   14894:	popeq	{r4, sl, fp, pc}
   14898:	mov	r0, #0
   1489c:	pop	{r4, sl, fp, pc}
   148a0:	cmp	r1, #0
   148a4:	moveq	r0, #1
   148a8:	popeq	{r4, sl, fp, pc}
   148ac:	mov	r0, #0
   148b0:	pop	{r4, sl, fp, pc}
   148b4:	push	{fp, lr}
   148b8:	mov	fp, sp
   148bc:	mov	ip, r1
   148c0:	mov	lr, r0
   148c4:	movw	r0, #25660	; 0x643c
   148c8:	movt	r0, #3
   148cc:	ldr	r3, [r0]
   148d0:	mov	r0, #16
   148d4:	and	r0, r0, r3, lsr #21
   148d8:	ldrb	r1, [r2, #28]
   148dc:	and	r1, r1, #111	; 0x6f
   148e0:	orr	r0, r1, r0
   148e4:	orr	r0, r0, #128	; 0x80
   148e8:	strb	r0, [r2, #28]
   148ec:	mov	r0, r2
   148f0:	mov	r1, lr
   148f4:	mov	r2, ip
   148f8:	bl	14930 <__mempcpy_chk@plt+0x3350>
   148fc:	cmp	r0, #0
   14900:	moveq	r0, #0
   14904:	popeq	{fp, pc}
   14908:	movw	r1, #13568	; 0x3500
   1490c:	movt	r1, #2
   14910:	ldr	r0, [r1, r0, lsl #2]
   14914:	movw	r1, #13184	; 0x3380
   14918:	movt	r1, #2
   1491c:	add	r1, r1, r0
   14920:	mov	r0, #0
   14924:	mov	r2, #5
   14928:	pop	{fp, lr}
   1492c:	b	113ac <dcgettext@plt>
   14930:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14934:	add	fp, sp, #24
   14938:	sub	sp, sp, #96	; 0x60
   1493c:	mov	r6, r3
   14940:	mov	r7, r2
   14944:	mov	r8, r1
   14948:	mov	r4, r0
   1494c:	mov	r0, #0
   14950:	str	r0, [fp, #-28]	; 0xffffffe4
   14954:	str	r0, [r4, #8]
   14958:	str	r3, [r4, #12]
   1495c:	str	r0, [r4, #24]
   14960:	ldrb	r0, [r4, #28]
   14964:	and	r0, r0, #144	; 0x90
   14968:	strb	r0, [r4, #28]
   1496c:	ldr	r5, [r4]
   14970:	ldr	r0, [r4, #4]
   14974:	cmp	r0, #159	; 0x9f
   14978:	bls	14acc <__mempcpy_chk@plt+0x34ec>
   1497c:	mov	r0, #160	; 0xa0
   14980:	str	r0, [r4, #8]
   14984:	mov	r0, r5
   14988:	mov	r1, r7
   1498c:	bl	16044 <__mempcpy_chk@plt+0x4a64>
   14990:	str	r0, [fp, #-28]	; 0xffffffe4
   14994:	cmp	r0, #0
   14998:	bne	149cc <__mempcpy_chk@plt+0x33ec>
   1499c:	movw	r1, #0
   149a0:	movt	r1, #0
   149a4:	movw	r2, #0
   149a8:	movt	r2, #0
   149ac:	orrs	r1, r2, r1
   149b0:	beq	149cc <__mempcpy_chk@plt+0x33ec>
   149b4:	add	r0, r5, #136	; 0x88
   149b8:	mov	r1, #0
   149bc:	bl	11364 <pthread_mutex_init@plt>
   149c0:	cmp	r0, #0
   149c4:	bne	14af8 <__mempcpy_chk@plt+0x3518>
   149c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   149cc:	cmp	r0, #0
   149d0:	bne	14b00 <__mempcpy_chk@plt+0x3520>
   149d4:	ldr	r3, [r4, #20]
   149d8:	str	r5, [sp, #4]
   149dc:	ubfx	r0, r6, #22, #1
   149e0:	str	r0, [sp]
   149e4:	add	r0, sp, #8
   149e8:	mov	r1, r8
   149ec:	mov	r2, r7
   149f0:	bl	161f0 <__mempcpy_chk@plt+0x4c10>
   149f4:	str	r0, [fp, #-28]	; 0xffffffe4
   149f8:	cmp	r0, #0
   149fc:	bne	14a98 <__mempcpy_chk@plt+0x34b8>
   14a00:	mov	r0, #0
   14a04:	str	r0, [r4, #24]
   14a08:	add	r0, sp, #8
   14a0c:	sub	r3, fp, #28
   14a10:	mov	r1, r4
   14a14:	mov	r2, r6
   14a18:	bl	163c4 <__mempcpy_chk@plt+0x4de4>
   14a1c:	str	r0, [r5, #52]	; 0x34
   14a20:	cmp	r0, #0
   14a24:	beq	14a98 <__mempcpy_chk@plt+0x34b8>
   14a28:	mov	r0, r4
   14a2c:	bl	16498 <__mempcpy_chk@plt+0x4eb8>
   14a30:	str	r0, [fp, #-28]	; 0xffffffe4
   14a34:	cmp	r0, #0
   14a38:	bne	14a98 <__mempcpy_chk@plt+0x34b8>
   14a3c:	ands	r0, r6, #4194304	; 0x400000
   14a40:	bne	14a64 <__mempcpy_chk@plt+0x3484>
   14a44:	ldrb	r0, [r5, #88]	; 0x58
   14a48:	ands	r0, r0, #4
   14a4c:	beq	14a64 <__mempcpy_chk@plt+0x3484>
   14a50:	ldr	r0, [r4, #20]
   14a54:	cmp	r0, #0
   14a58:	bne	14a64 <__mempcpy_chk@plt+0x3484>
   14a5c:	mov	r0, r5
   14a60:	bl	166b4 <__mempcpy_chk@plt+0x50d4>
   14a64:	mov	r0, r5
   14a68:	bl	16850 <__mempcpy_chk@plt+0x5270>
   14a6c:	str	r0, [fp, #-28]	; 0xffffffe4
   14a70:	mov	r0, r4
   14a74:	bl	16340 <__mempcpy_chk@plt+0x4d60>
   14a78:	add	r0, sp, #8
   14a7c:	bl	16390 <__mempcpy_chk@plt+0x4db0>
   14a80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a84:	cmp	r0, #0
   14a88:	bne	14aa8 <__mempcpy_chk@plt+0x34c8>
   14a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a90:	sub	sp, fp, #24
   14a94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14a98:	mov	r0, r4
   14a9c:	bl	16340 <__mempcpy_chk@plt+0x4d60>
   14aa0:	add	r0, sp, #8
   14aa4:	bl	16390 <__mempcpy_chk@plt+0x4db0>
   14aa8:	movw	r0, #0
   14aac:	movt	r0, #0
   14ab0:	movw	r1, #0
   14ab4:	movt	r1, #0
   14ab8:	orrs	r0, r1, r0
   14abc:	beq	14b00 <__mempcpy_chk@plt+0x3520>
   14ac0:	add	r0, r5, #136	; 0x88
   14ac4:	bl	11304 <pthread_mutex_destroy@plt>
   14ac8:	b	14b00 <__mempcpy_chk@plt+0x3520>
   14acc:	mov	r9, #160	; 0xa0
   14ad0:	mov	r0, r5
   14ad4:	mov	r1, #160	; 0xa0
   14ad8:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   14adc:	cmp	r0, #0
   14ae0:	moveq	r0, #12
   14ae4:	subeq	sp, fp, #24
   14ae8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   14aec:	mov	r5, r0
   14af0:	stm	r4, {r0, r9}
   14af4:	b	1497c <__mempcpy_chk@plt+0x339c>
   14af8:	mov	r0, #12
   14afc:	str	r0, [fp, #-28]	; 0xffffffe4
   14b00:	mov	r0, r5
   14b04:	bl	15164 <__mempcpy_chk@plt+0x3b84>
   14b08:	mov	r0, #0
   14b0c:	str	r0, [r4]
   14b10:	str	r0, [r4, #4]
   14b14:	b	14a8c <__mempcpy_chk@plt+0x34ac>
   14b18:	movw	r2, #25660	; 0x643c
   14b1c:	movt	r2, #3
   14b20:	ldr	r1, [r2]
   14b24:	str	r0, [r2]
   14b28:	mov	r0, r1
   14b2c:	bx	lr
   14b30:	push	{r4, r5, r6, sl, fp, lr}
   14b34:	add	fp, sp, #16
   14b38:	mov	r4, r0
   14b3c:	ldr	r6, [r0]
   14b40:	ldr	r5, [r0, #16]
   14b44:	mov	r0, r5
   14b48:	mov	r1, #0
   14b4c:	mov	r2, #256	; 0x100
   14b50:	bl	114fc <memset@plt>
   14b54:	ldr	r1, [r6, #36]	; 0x24
   14b58:	mov	r0, r4
   14b5c:	mov	r2, r5
   14b60:	bl	14bcc <__mempcpy_chk@plt+0x35ec>
   14b64:	ldr	r0, [r6, #36]	; 0x24
   14b68:	ldr	r1, [r6, #40]	; 0x28
   14b6c:	cmp	r0, r1
   14b70:	beq	14b80 <__mempcpy_chk@plt+0x35a0>
   14b74:	mov	r0, r4
   14b78:	mov	r2, r5
   14b7c:	bl	14bcc <__mempcpy_chk@plt+0x35ec>
   14b80:	ldr	r0, [r6, #36]	; 0x24
   14b84:	ldr	r1, [r6, #44]	; 0x2c
   14b88:	cmp	r0, r1
   14b8c:	beq	14b9c <__mempcpy_chk@plt+0x35bc>
   14b90:	mov	r0, r4
   14b94:	mov	r2, r5
   14b98:	bl	14bcc <__mempcpy_chk@plt+0x35ec>
   14b9c:	ldr	r0, [r6, #36]	; 0x24
   14ba0:	ldr	r1, [r6, #48]	; 0x30
   14ba4:	cmp	r0, r1
   14ba8:	beq	14bb8 <__mempcpy_chk@plt+0x35d8>
   14bac:	mov	r0, r4
   14bb0:	mov	r2, r5
   14bb4:	bl	14bcc <__mempcpy_chk@plt+0x35ec>
   14bb8:	ldrb	r0, [r4, #28]
   14bbc:	orr	r0, r0, #8
   14bc0:	strb	r0, [r4, #28]
   14bc4:	mov	r0, #0
   14bc8:	pop	{r4, r5, r6, sl, fp, pc}
   14bcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bd0:	add	fp, sp, #28
   14bd4:	sub	sp, sp, #308	; 0x134
   14bd8:	str	r2, [sp, #28]
   14bdc:	str	r0, [sp, #16]
   14be0:	ldr	r8, [r0]
   14be4:	ldr	r0, [r8, #92]	; 0x5c
   14be8:	mov	sl, #0
   14bec:	cmp	r0, #1
   14bf0:	ldreq	r0, [sp, #16]
   14bf4:	ldrbeq	r0, [r0, #14]
   14bf8:	ubfxeq	sl, r0, #6, #1
   14bfc:	ldr	r0, [r1, #8]
   14c00:	cmp	r0, #1
   14c04:	blt	14f40 <__mempcpy_chk@plt+0x3960>
   14c08:	add	r0, sp, #32
   14c0c:	add	r0, r0, #1
   14c10:	str	r0, [sp]
   14c14:	mov	r4, #1
   14c18:	movw	r0, #1
   14c1c:	movt	r0, #32
   14c20:	add	r0, r0, #254	; 0xfe
   14c24:	str	r0, [sp, #4]
   14c28:	mov	r2, #0
   14c2c:	str	r1, [sp, #8]
   14c30:	str	r8, [sp, #20]
   14c34:	ldr	r0, [r1, #12]
   14c38:	str	r2, [sp, #12]
   14c3c:	ldr	r9, [r0, r2, lsl #2]
   14c40:	ldr	r0, [r8]
   14c44:	add	r1, r0, r9, lsl #3
   14c48:	ldrb	r5, [r1, #4]
   14c4c:	cmp	r5, #1
   14c50:	beq	14cd8 <__mempcpy_chk@plt+0x36f8>
   14c54:	cmp	r5, #6
   14c58:	beq	14dd8 <__mempcpy_chk@plt+0x37f8>
   14c5c:	cmp	r5, #3
   14c60:	bne	14e5c <__mempcpy_chk@plt+0x387c>
   14c64:	mov	r7, #0
   14c68:	ldr	r5, [sp, #28]
   14c6c:	mov	r6, #0
   14c70:	str	r9, [sp, #24]
   14c74:	ldr	r0, [r8]
   14c78:	ldr	r0, [r0, r9, lsl #3]
   14c7c:	ldr	r9, [r0, r6, lsl #2]
   14c80:	mov	r8, #0
   14c84:	b	14c9c <__mempcpy_chk@plt+0x36bc>
   14c88:	add	r0, r7, r8
   14c8c:	bl	11358 <tolower@plt>
   14c90:	ldr	r1, [sp, #28]
   14c94:	strb	r4, [r1, r0]
   14c98:	b	14cac <__mempcpy_chk@plt+0x36cc>
   14c9c:	tst	r9, r4, lsl r8
   14ca0:	strbne	r4, [r5, r8]
   14ca4:	cmpne	sl, #0
   14ca8:	bne	14c88 <__mempcpy_chk@plt+0x36a8>
   14cac:	add	r8, r8, #1
   14cb0:	cmp	r8, #32
   14cb4:	bne	14c9c <__mempcpy_chk@plt+0x36bc>
   14cb8:	add	r5, r5, #32
   14cbc:	add	r6, r6, #1
   14cc0:	add	r7, r7, #32
   14cc4:	cmp	r6, #8
   14cc8:	ldr	r8, [sp, #20]
   14ccc:	ldr	r9, [sp, #24]
   14cd0:	bne	14c74 <__mempcpy_chk@plt+0x3694>
   14cd4:	b	14f28 <__mempcpy_chk@plt+0x3948>
   14cd8:	ldrb	r0, [r0, r9, lsl #3]
   14cdc:	ldr	r1, [sp, #28]
   14ce0:	strb	r4, [r1, r0]
   14ce4:	cmp	sl, #0
   14ce8:	beq	14cf8 <__mempcpy_chk@plt+0x3718>
   14cec:	bl	11358 <tolower@plt>
   14cf0:	ldr	r1, [sp, #28]
   14cf4:	strb	r4, [r1, r0]
   14cf8:	ldr	r0, [sp, #16]
   14cfc:	ldrb	r0, [r0, #14]
   14d00:	tst	r0, #64	; 0x40
   14d04:	beq	14f28 <__mempcpy_chk@plt+0x3948>
   14d08:	ldr	r0, [r8, #92]	; 0x5c
   14d0c:	cmp	r0, #2
   14d10:	blt	14f28 <__mempcpy_chk@plt+0x3948>
   14d14:	ldr	r0, [r8]
   14d18:	ldrb	r0, [r0, r9, lsl #3]
   14d1c:	strb	r0, [sp, #32]
   14d20:	ldr	r0, [r8, #8]
   14d24:	add	r1, r9, #1
   14d28:	cmp	r1, r0
   14d2c:	ldr	r0, [sp]
   14d30:	add	r5, sp, #32
   14d34:	bcs	14d80 <__mempcpy_chk@plt+0x37a0>
   14d38:	ldr	r0, [sp]
   14d3c:	ldr	r1, [r8]
   14d40:	add	r1, r1, r9, lsl #3
   14d44:	ldr	r2, [r1, #12]
   14d48:	ldr	r3, [sp, #4]
   14d4c:	and	r2, r2, r3
   14d50:	movw	r3, #1
   14d54:	movt	r3, #32
   14d58:	cmp	r2, r3
   14d5c:	bne	14d80 <__mempcpy_chk@plt+0x37a0>
   14d60:	ldrb	r1, [r1, #8]
   14d64:	strb	r1, [r0], #1
   14d68:	add	r1, r9, #1
   14d6c:	ldr	r2, [r8, #8]
   14d70:	add	r3, r9, #2
   14d74:	cmp	r3, r2
   14d78:	mov	r9, r1
   14d7c:	bcc	14d3c <__mempcpy_chk@plt+0x375c>
   14d80:	mov	r1, #0
   14d84:	str	r1, [fp, #-44]	; 0xffffffd4
   14d88:	str	r1, [fp, #-48]	; 0xffffffd0
   14d8c:	sub	r6, r0, r5
   14d90:	sub	r0, fp, #36	; 0x24
   14d94:	mov	r1, r5
   14d98:	mov	r2, r6
   14d9c:	sub	r3, fp, #48	; 0x30
   14da0:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   14da4:	cmp	r0, r6
   14da8:	bne	14f28 <__mempcpy_chk@plt+0x3948>
   14dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14db0:	bl	11370 <towlower@plt>
   14db4:	mov	r1, r0
   14db8:	mov	r0, r5
   14dbc:	sub	r2, fp, #48	; 0x30
   14dc0:	bl	112d4 <wcrtomb@plt>
   14dc4:	cmn	r0, #1
   14dc8:	ldrbne	r0, [sp, #32]
   14dcc:	ldrne	r1, [sp, #28]
   14dd0:	strbne	r4, [r1, r0]
   14dd4:	b	14f28 <__mempcpy_chk@plt+0x3948>
   14dd8:	ldr	r6, [r0, r9, lsl #3]
   14ddc:	ldr	r0, [r8, #92]	; 0x5c
   14de0:	cmp	r0, #2
   14de4:	blt	14e74 <__mempcpy_chk@plt+0x3894>
   14de8:	ldr	r0, [r6, #36]	; 0x24
   14dec:	cmp	r0, #0
   14df0:	bne	14e08 <__mempcpy_chk@plt+0x3828>
   14df4:	ldrb	r0, [r6, #16]
   14df8:	tst	r0, #1
   14dfc:	ldreq	r0, [r6, #32]
   14e00:	cmpeq	r0, #0
   14e04:	beq	14e74 <__mempcpy_chk@plt+0x3894>
   14e08:	mov	r0, #0
   14e0c:	strb	r0, [fp, #-48]	; 0xffffffd0
   14e10:	add	r5, sp, #32
   14e14:	mov	r0, #0
   14e18:	str	r0, [sp, #36]	; 0x24
   14e1c:	str	r0, [sp, #32]
   14e20:	mov	r0, #0
   14e24:	sub	r1, fp, #48	; 0x30
   14e28:	mov	r2, #1
   14e2c:	mov	r3, r5
   14e30:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   14e34:	cmn	r0, #2
   14e38:	ldrbeq	r0, [fp, #-48]	; 0xffffffd0
   14e3c:	ldreq	r1, [sp, #28]
   14e40:	strbeq	r4, [r1, r0]
   14e44:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   14e48:	add	r0, r0, #1
   14e4c:	strb	r0, [fp, #-48]	; 0xffffffd0
   14e50:	tst	r0, #255	; 0xff
   14e54:	bne	14e14 <__mempcpy_chk@plt+0x3834>
   14e58:	b	14f28 <__mempcpy_chk@plt+0x3948>
   14e5c:	cmp	r5, #7
   14e60:	bhi	14f28 <__mempcpy_chk@plt+0x3948>
   14e64:	mov	r0, #164	; 0xa4
   14e68:	tst	r0, r4, lsl r5
   14e6c:	beq	14f28 <__mempcpy_chk@plt+0x3948>
   14e70:	b	14f48 <__mempcpy_chk@plt+0x3968>
   14e74:	ldr	r0, [r6, #20]
   14e78:	cmp	r0, #1
   14e7c:	blt	14f28 <__mempcpy_chk@plt+0x3948>
   14e80:	mov	r9, #0
   14e84:	mov	r0, #0
   14e88:	str	r0, [fp, #-44]	; 0xffffffd4
   14e8c:	str	r0, [fp, #-48]	; 0xffffffd0
   14e90:	ldr	r0, [r6]
   14e94:	ldr	r1, [r0, r9, lsl #2]
   14e98:	add	r5, sp, #32
   14e9c:	mov	r0, r5
   14ea0:	sub	r2, fp, #48	; 0x30
   14ea4:	bl	112d4 <wcrtomb@plt>
   14ea8:	cmn	r0, #1
   14eac:	beq	14ed0 <__mempcpy_chk@plt+0x38f0>
   14eb0:	ldrb	r0, [sp, #32]
   14eb4:	ldr	r1, [sp, #28]
   14eb8:	strb	r4, [r1, r0]
   14ebc:	cmp	sl, #0
   14ec0:	beq	14ed0 <__mempcpy_chk@plt+0x38f0>
   14ec4:	bl	11358 <tolower@plt>
   14ec8:	ldr	r1, [sp, #28]
   14ecc:	strb	r4, [r1, r0]
   14ed0:	ldr	r0, [sp, #16]
   14ed4:	ldrb	r0, [r0, #14]
   14ed8:	tst	r0, #64	; 0x40
   14edc:	beq	14f18 <__mempcpy_chk@plt+0x3938>
   14ee0:	ldr	r0, [r8, #92]	; 0x5c
   14ee4:	cmp	r0, #2
   14ee8:	blt	14f18 <__mempcpy_chk@plt+0x3938>
   14eec:	ldr	r0, [r6]
   14ef0:	ldr	r0, [r0, r9, lsl #2]
   14ef4:	bl	11370 <towlower@plt>
   14ef8:	mov	r1, r0
   14efc:	mov	r0, r5
   14f00:	sub	r2, fp, #48	; 0x30
   14f04:	bl	112d4 <wcrtomb@plt>
   14f08:	cmn	r0, #1
   14f0c:	ldrbne	r0, [sp, #32]
   14f10:	ldrne	r1, [sp, #28]
   14f14:	strbne	r4, [r1, r0]
   14f18:	add	r9, r9, #1
   14f1c:	ldr	r0, [r6, #20]
   14f20:	cmp	r9, r0
   14f24:	blt	14e84 <__mempcpy_chk@plt+0x38a4>
   14f28:	ldr	r1, [sp, #8]
   14f2c:	ldr	r0, [r1, #8]
   14f30:	ldr	r2, [sp, #12]
   14f34:	add	r2, r2, #1
   14f38:	cmp	r2, r0
   14f3c:	blt	14c34 <__mempcpy_chk@plt+0x3654>
   14f40:	sub	sp, fp, #28
   14f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f48:	ldr	r0, [sp, #28]
   14f4c:	mov	r1, #1
   14f50:	mov	r2, #256	; 0x100
   14f54:	bl	114fc <memset@plt>
   14f58:	cmp	r5, #2
   14f5c:	ldreq	r1, [sp, #16]
   14f60:	ldrbeq	r0, [r1, #28]
   14f64:	orreq	r0, r0, #1
   14f68:	strbeq	r0, [r1, #28]
   14f6c:	sub	sp, fp, #28
   14f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f78:	add	fp, sp, #24
   14f7c:	mov	r7, r2
   14f80:	mov	r8, r1
   14f84:	mov	r4, r0
   14f88:	mov	r0, #0
   14f8c:	str	r0, [r4]
   14f90:	str	r0, [r4, #4]
   14f94:	str	r0, [r4, #8]
   14f98:	mov	r0, #256	; 0x100
   14f9c:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   14fa0:	str	r0, [r4, #16]
   14fa4:	cmp	r0, #0
   14fa8:	beq	15058 <__mempcpy_chk@plt+0x3a78>
   14fac:	movw	r0, #45820	; 0xb2fc
   14fb0:	movt	r0, #3
   14fb4:	tst	r7, #1
   14fb8:	movweq	r0, #710	; 0x2c6
   14fbc:	movteq	r0, #257	; 0x101
   14fc0:	and	r1, r7, #2
   14fc4:	orr	r5, r0, r1, lsl #21
   14fc8:	tst	r7, #4
   14fcc:	bne	14fe0 <__mempcpy_chk@plt+0x3a00>
   14fd0:	ldrb	r0, [r4, #28]
   14fd4:	and	r0, r0, #127	; 0x7f
   14fd8:	strb	r0, [r4, #28]
   14fdc:	b	14ffc <__mempcpy_chk@plt+0x3a1c>
   14fe0:	ldrb	r0, [r4, #28]
   14fe4:	orr	r0, r0, #128	; 0x80
   14fe8:	strb	r0, [r4, #28]
   14fec:	movw	r0, #45758	; 0xb2be
   14ff0:	movt	r0, #323	; 0x143
   14ff4:	and	r0, r5, r0
   14ff8:	orr	r5, r0, #256	; 0x100
   14ffc:	mov	r6, #0
   15000:	str	r6, [r4, #20]
   15004:	and	r0, r7, #8
   15008:	ldrb	r1, [r4, #28]
   1500c:	and	r1, r1, #239	; 0xef
   15010:	orr	r0, r1, r0, lsl #1
   15014:	strb	r0, [r4, #28]
   15018:	mov	r0, r8
   1501c:	bl	114cc <strlen@plt>
   15020:	mov	r2, r0
   15024:	mov	r0, r4
   15028:	mov	r1, r8
   1502c:	mov	r3, r5
   15030:	bl	14930 <__mempcpy_chk@plt+0x3350>
   15034:	mov	r5, r0
   15038:	cmp	r0, #16
   1503c:	movweq	r5, #8
   15040:	cmp	r5, #0
   15044:	bne	15064 <__mempcpy_chk@plt+0x3a84>
   15048:	mov	r0, r4
   1504c:	bl	14b30 <__mempcpy_chk@plt+0x3550>
   15050:	mov	r0, r6
   15054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15058:	mov	r6, #12
   1505c:	mov	r0, r6
   15060:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15064:	ldr	r0, [r4, #16]
   15068:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1506c:	str	r6, [r4, #16]
   15070:	mov	r0, r5
   15074:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15078:	push	{r4, r5, r6, r7, fp, lr}
   1507c:	add	fp, sp, #16
   15080:	cmp	r0, #17
   15084:	bcs	150f8 <__mempcpy_chk@plt+0x3b18>
   15088:	mov	r5, r3
   1508c:	mov	r4, r2
   15090:	movw	r1, #13568	; 0x3500
   15094:	movt	r1, #2
   15098:	ldr	r0, [r1, r0, lsl #2]
   1509c:	movw	r1, #13184	; 0x3380
   150a0:	movt	r1, #2
   150a4:	add	r1, r1, r0
   150a8:	mov	r0, #0
   150ac:	mov	r2, #5
   150b0:	bl	113ac <dcgettext@plt>
   150b4:	mov	r6, r0
   150b8:	bl	114cc <strlen@plt>
   150bc:	add	r7, r0, #1
   150c0:	cmp	r5, #0
   150c4:	beq	150e0 <__mempcpy_chk@plt+0x3b00>
   150c8:	cmp	r7, r5
   150cc:	mov	r2, r7
   150d0:	bhi	150e8 <__mempcpy_chk@plt+0x3b08>
   150d4:	mov	r0, r4
   150d8:	mov	r1, r6
   150dc:	bl	1134c <memcpy@plt>
   150e0:	mov	r0, r7
   150e4:	pop	{r4, r5, r6, r7, fp, pc}
   150e8:	sub	r2, r5, #1
   150ec:	mov	r0, #0
   150f0:	strb	r0, [r4, r2]
   150f4:	b	150d4 <__mempcpy_chk@plt+0x3af4>
   150f8:	bl	115c8 <abort@plt>
   150fc:	push	{r4, r5, fp, lr}
   15100:	add	fp, sp, #8
   15104:	mov	r4, r0
   15108:	ldr	r5, [r0]
   1510c:	cmp	r5, #0
   15110:	beq	1513c <__mempcpy_chk@plt+0x3b5c>
   15114:	movw	r0, #0
   15118:	movt	r0, #0
   1511c:	movw	r1, #0
   15120:	movt	r1, #0
   15124:	orrs	r0, r1, r0
   15128:	beq	15134 <__mempcpy_chk@plt+0x3b54>
   1512c:	add	r0, r5, #136	; 0x88
   15130:	bl	11304 <pthread_mutex_destroy@plt>
   15134:	mov	r0, r5
   15138:	bl	15164 <__mempcpy_chk@plt+0x3b84>
   1513c:	mov	r5, #0
   15140:	str	r5, [r4]
   15144:	str	r5, [r4, #4]
   15148:	ldr	r0, [r4, #16]
   1514c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15150:	str	r5, [r4, #16]
   15154:	ldr	r0, [r4, #20]
   15158:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1515c:	str	r5, [r4, #20]
   15160:	pop	{r4, r5, fp, pc}
   15164:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15168:	add	fp, sp, #24
   1516c:	mov	r8, r0
   15170:	ldr	r0, [r0]
   15174:	cmp	r0, #0
   15178:	ldrne	r0, [r8, #8]
   1517c:	cmpne	r0, #0
   15180:	beq	151ac <__mempcpy_chk@plt+0x3bcc>
   15184:	mov	r5, #0
   15188:	mov	r6, #0
   1518c:	ldr	r0, [r8]
   15190:	add	r0, r0, r5
   15194:	bl	15f7c <__mempcpy_chk@plt+0x499c>
   15198:	add	r5, r5, #8
   1519c:	add	r6, r6, #1
   151a0:	ldr	r0, [r8, #8]
   151a4:	cmp	r6, r0
   151a8:	bcc	1518c <__mempcpy_chk@plt+0x3bac>
   151ac:	ldr	r0, [r8, #12]
   151b0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   151b4:	ldr	r0, [r8, #8]
   151b8:	cmp	r0, #0
   151bc:	beq	15218 <__mempcpy_chk@plt+0x3c38>
   151c0:	mov	r5, #0
   151c4:	mov	r6, #8
   151c8:	ldr	r0, [r8, #24]
   151cc:	cmp	r0, #0
   151d0:	beq	151dc <__mempcpy_chk@plt+0x3bfc>
   151d4:	ldr	r0, [r0, r6]
   151d8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   151dc:	ldr	r0, [r8, #28]
   151e0:	cmp	r0, #0
   151e4:	beq	151f0 <__mempcpy_chk@plt+0x3c10>
   151e8:	ldr	r0, [r0, r6]
   151ec:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   151f0:	ldr	r0, [r8, #20]
   151f4:	cmp	r0, #0
   151f8:	beq	15204 <__mempcpy_chk@plt+0x3c24>
   151fc:	ldr	r0, [r0, r6]
   15200:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15204:	add	r6, r6, #12
   15208:	add	r5, r5, #1
   1520c:	ldr	r0, [r8, #8]
   15210:	cmp	r5, r0
   15214:	bcc	151c8 <__mempcpy_chk@plt+0x3be8>
   15218:	ldr	r0, [r8, #20]
   1521c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15220:	ldr	r0, [r8, #24]
   15224:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15228:	ldr	r0, [r8, #28]
   1522c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15230:	ldr	r0, [r8]
   15234:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15238:	ldr	r0, [r8, #32]
   1523c:	cmp	r0, #0
   15240:	beq	1529c <__mempcpy_chk@plt+0x3cbc>
   15244:	mov	r5, #0
   15248:	ldr	r6, [r8, #32]
   1524c:	add	r0, r5, r5, lsl #1
   15250:	ldr	r0, [r6, r0, lsl #2]!
   15254:	add	r7, r6, #8
   15258:	cmp	r0, #1
   1525c:	blt	15280 <__mempcpy_chk@plt+0x3ca0>
   15260:	mov	r4, #0
   15264:	ldr	r0, [r7]
   15268:	ldr	r0, [r0, r4, lsl #2]
   1526c:	bl	15fac <__mempcpy_chk@plt+0x49cc>
   15270:	add	r4, r4, #1
   15274:	ldr	r0, [r6]
   15278:	cmp	r4, r0
   1527c:	blt	15264 <__mempcpy_chk@plt+0x3c84>
   15280:	ldr	r0, [r7]
   15284:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15288:	add	r0, r5, #1
   1528c:	ldr	r1, [r8, #68]	; 0x44
   15290:	cmp	r5, r1
   15294:	mov	r5, r0
   15298:	bcc	15248 <__mempcpy_chk@plt+0x3c68>
   1529c:	ldr	r0, [r8, #32]
   152a0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   152a4:	ldr	r0, [r8, #60]	; 0x3c
   152a8:	movw	r1, #13636	; 0x3544
   152ac:	movt	r1, #2
   152b0:	cmp	r0, r1
   152b4:	beq	152bc <__mempcpy_chk@plt+0x3cdc>
   152b8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   152bc:	ldr	r0, [r8, #132]	; 0x84
   152c0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   152c4:	mov	r0, r8
   152c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   152cc:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   152d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152d4:	add	fp, sp, #28
   152d8:	sub	sp, sp, #28
   152dc:	mov	r7, #2
   152e0:	ldr	sl, [fp, #8]
   152e4:	cmp	sl, #7
   152e8:	bhi	153bc <__mempcpy_chk@plt+0x3ddc>
   152ec:	mov	r6, r3
   152f0:	mov	r9, r2
   152f4:	mov	r4, r1
   152f8:	mov	r5, r0
   152fc:	ldr	r0, [r0]
   15300:	str	r0, [sp, #24]
   15304:	tst	sl, #4
   15308:	bne	15320 <__mempcpy_chk@plt+0x3d40>
   1530c:	mov	r0, r4
   15310:	bl	114cc <strlen@plt>
   15314:	mov	r7, r0
   15318:	mov	r8, #0
   1531c:	b	15328 <__mempcpy_chk@plt+0x3d48>
   15320:	ldr	r8, [r6]
   15324:	ldr	r7, [r6, #4]
   15328:	movw	r0, #0
   1532c:	movt	r0, #0
   15330:	movw	r1, #0
   15334:	movt	r1, #0
   15338:	orrs	r0, r1, r0
   1533c:	str	r0, [sp, #20]
   15340:	beq	15350 <__mempcpy_chk@plt+0x3d70>
   15344:	ldr	r0, [sp, #24]
   15348:	add	r0, r0, #136	; 0x88
   1534c:	bl	11334 <pthread_mutex_lock@plt>
   15350:	ldrb	r0, [r5, #28]
   15354:	tst	r0, #16
   15358:	bne	1536c <__mempcpy_chk@plt+0x3d8c>
   1535c:	str	r7, [sp]
   15360:	stmib	sp, {r7, r9}
   15364:	str	r6, [sp, #12]
   15368:	b	15380 <__mempcpy_chk@plt+0x3da0>
   1536c:	mov	r0, #0
   15370:	str	r7, [sp]
   15374:	str	r7, [sp, #4]
   15378:	str	r0, [sp, #8]
   1537c:	str	r0, [sp, #12]
   15380:	str	sl, [sp, #16]
   15384:	mov	r0, r5
   15388:	mov	r1, r4
   1538c:	mov	r2, r7
   15390:	mov	r3, r8
   15394:	bl	153c8 <__mempcpy_chk@plt+0x3de8>
   15398:	mov	r7, r0
   1539c:	ldr	r0, [sp, #20]
   153a0:	cmp	r0, #0
   153a4:	beq	153b4 <__mempcpy_chk@plt+0x3dd4>
   153a8:	ldr	r0, [sp, #24]
   153ac:	add	r0, r0, #136	; 0x88
   153b0:	bl	1128c <pthread_mutex_unlock@plt>
   153b4:	cmp	r7, #0
   153b8:	movwne	r7, #1
   153bc:	mov	r0, r7
   153c0:	sub	sp, fp, #28
   153c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153cc:	add	fp, sp, #28
   153d0:	sub	sp, sp, #212	; 0xd4
   153d4:	mov	r6, r3
   153d8:	str	r2, [sp, #60]	; 0x3c
   153dc:	str	r1, [sp, #36]	; 0x24
   153e0:	mov	sl, r0
   153e4:	ldr	r8, [r0]
   153e8:	add	r0, sp, #64	; 0x40
   153ec:	mov	r7, #0
   153f0:	mov	r1, #0
   153f4:	mov	r2, #136	; 0x88
   153f8:	bl	114fc <memset@plt>
   153fc:	str	r8, [sp, #148]	; 0x94
   15400:	ldr	r1, [sl, #16]
   15404:	ldr	r0, [fp, #16]
   15408:	ldr	ip, [fp, #8]
   1540c:	cmp	r1, #0
   15410:	mov	r5, #0
   15414:	beq	15430 <__mempcpy_chk@plt+0x3e50>
   15418:	ldrb	r2, [sl, #28]
   1541c:	and	r2, r2, #9
   15420:	cmp	r2, #8
   15424:	movne	r1, #0
   15428:	subs	r5, r6, ip
   1542c:	movne	r5, r1
   15430:	str	r6, [sp, #44]	; 0x2c
   15434:	ldr	r1, [sl, #8]
   15438:	ldr	r2, [sl, #24]
   1543c:	mvn	r3, r2
   15440:	cmp	r2, r0
   15444:	addcc	r7, r3, r0
   15448:	mov	r9, #1
   1544c:	cmp	r1, #0
   15450:	beq	1594c <__mempcpy_chk@plt+0x436c>
   15454:	ldr	r1, [r8, #36]	; 0x24
   15458:	cmp	r1, #0
   1545c:	ldrne	r2, [r8, #40]	; 0x28
   15460:	cmpne	r2, #0
   15464:	beq	1594c <__mempcpy_chk@plt+0x436c>
   15468:	ldr	r3, [r8, #44]	; 0x2c
   1546c:	cmp	r3, #0
   15470:	ldrne	r6, [r8, #48]	; 0x30
   15474:	cmpne	r6, #0
   15478:	beq	1594c <__mempcpy_chk@plt+0x436c>
   1547c:	ldr	lr, [sl, #20]
   15480:	ldr	r1, [r1, #8]
   15484:	cmp	r1, #0
   15488:	bne	15498 <__mempcpy_chk@plt+0x3eb8>
   1548c:	ldr	r1, [r2, #8]
   15490:	cmp	r1, #0
   15494:	beq	15a18 <__mempcpy_chk@plt+0x4438>
   15498:	mov	r6, ip
   1549c:	ldr	r0, [fp, #16]
   154a0:	mov	r4, r7
   154a4:	subs	r0, r0, r7
   154a8:	str	r0, [sp, #48]	; 0x30
   154ac:	mov	r0, #1
   154b0:	str	r0, [sp, #40]	; 0x28
   154b4:	bne	154c8 <__mempcpy_chk@plt+0x3ee8>
   154b8:	ldr	r0, [r8, #76]	; 0x4c
   154bc:	cmp	r0, #0
   154c0:	movwne	r0, #1
   154c4:	str	r0, [sp, #40]	; 0x28
   154c8:	ldr	r0, [r8, #8]
   154cc:	ldr	r1, [sl, #12]
   154d0:	str	r8, [sp, #8]
   154d4:	str	lr, [sp, #56]	; 0x38
   154d8:	str	lr, [sp]
   154dc:	ubfx	r1, r1, #22, #1
   154e0:	str	r1, [sp, #4]
   154e4:	add	r3, r0, #1
   154e8:	add	r0, sp, #64	; 0x40
   154ec:	ldr	r7, [sp, #36]	; 0x24
   154f0:	mov	r1, r7
   154f4:	ldr	r2, [sp, #60]	; 0x3c
   154f8:	bl	1bcb0 <__mempcpy_chk@plt+0xa6d0>
   154fc:	cmp	r0, #0
   15500:	bne	15b5c <__mempcpy_chk@plt+0x457c>
   15504:	ldr	r1, [fp, #24]
   15508:	ldr	r0, [fp, #12]
   1550c:	str	r0, [sp, #116]	; 0x74
   15510:	str	r0, [sp, #120]	; 0x78
   15514:	str	sl, [sp, #32]
   15518:	ldrb	r0, [sl, #28]
   1551c:	lsr	r0, r0, #7
   15520:	strb	r0, [sp, #141]	; 0x8d
   15524:	ldr	r0, [r8, #76]	; 0x4c
   15528:	lsl	r2, r0, #1
   1552c:	add	r0, sp, #64	; 0x40
   15530:	bl	1bd60 <__mempcpy_chk@plt+0xa780>
   15534:	cmp	r0, #0
   15538:	bne	15b5c <__mempcpy_chk@plt+0x457c>
   1553c:	ldr	r0, [sp, #48]	; 0x30
   15540:	cmp	r0, #1
   15544:	bhi	15554 <__mempcpy_chk@plt+0x3f74>
   15548:	ldrb	r0, [r8, #88]	; 0x58
   1554c:	tst	r0, #2
   15550:	beq	1557c <__mempcpy_chk@plt+0x3f9c>
   15554:	mov	r9, #12
   15558:	ldr	r0, [sp, #100]	; 0x64
   1555c:	cmn	r0, #-1073741822	; 0xc0000002
   15560:	bhi	1592c <__mempcpy_chk@plt+0x434c>
   15564:	mov	r1, #4
   15568:	add	r0, r1, r0, lsl #2
   1556c:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   15570:	str	r0, [sp, #164]	; 0xa4
   15574:	cmp	r0, #0
   15578:	beq	1592c <__mempcpy_chk@plt+0x434c>
   1557c:	str	r4, [sp, #16]
   15580:	ldr	r4, [sp, #44]	; 0x2c
   15584:	str	r4, [fp, #-36]	; 0xffffffdc
   15588:	mov	r0, #4
   1558c:	ldr	r1, [fp, #24]
   15590:	tst	r1, #1
   15594:	mov	r1, #4
   15598:	movweq	r1, #6
   1559c:	str	r1, [sp, #124]	; 0x7c
   155a0:	cmp	r6, r4
   155a4:	mov	lr, #1
   155a8:	mvnlt	lr, #0
   155ac:	mov	r1, r8
   155b0:	mov	r8, r6
   155b4:	movlt	r8, r4
   155b8:	mov	sl, r4
   155bc:	movlt	sl, r6
   155c0:	str	r1, [sp, #52]	; 0x34
   155c4:	ldr	ip, [r1, #92]	; 0x5c
   155c8:	cmp	r5, #0
   155cc:	beq	15618 <__mempcpy_chk@plt+0x4038>
   155d0:	cmp	ip, #1
   155d4:	ldr	r2, [sp, #60]	; 0x3c
   155d8:	ldr	r3, [sp, #56]	; 0x38
   155dc:	beq	155fc <__mempcpy_chk@plt+0x401c>
   155e0:	ldr	r0, [sp, #32]
   155e4:	ldr	r0, [r0, #12]
   155e8:	and	r0, r0, #4194304	; 0x400000
   155ec:	orr	r0, r3, r0
   155f0:	clz	r0, r0
   155f4:	lsr	r0, r0, #5
   155f8:	lsl	r0, r0, #2
   155fc:	cmp	r3, #0
   15600:	mov	r1, r3
   15604:	movwne	r1, #1
   15608:	cmp	r6, r4
   1560c:	orrge	r1, r1, #2
   15610:	orr	r0, r1, r0
   15614:	b	15624 <__mempcpy_chk@plt+0x4044>
   15618:	mov	r0, #8
   1561c:	ldr	r2, [sp, #60]	; 0x3c
   15620:	ldr	r3, [sp, #56]	; 0x38
   15624:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15628:	cmp	r1, sl
   1562c:	cmpge	r8, r1
   15630:	blt	15924 <__mempcpy_chk@plt+0x4344>
   15634:	sub	r1, fp, #36	; 0x24
   15638:	cmp	r6, r4
   1563c:	movwlt	r1, #0
   15640:	str	r1, [sp, #28]
   15644:	sub	r4, r0, #4
   15648:	add	r9, sp, #64	; 0x40
   1564c:	str	ip, [sp, #44]	; 0x2c
   15650:	str	lr, [sp, #24]
   15654:	str	r4, [sp, #20]
   15658:	cmp	r4, #4
   1565c:	bhi	156c0 <__mempcpy_chk@plt+0x40e0>
   15660:	add	r0, pc, #0
   15664:	ldr	pc, [r0, r4, lsl #2]
   15668:	andeq	r5, r1, ip, ror r6
   1566c:	andeq	r5, r1, ip, ror r6
   15670:	andeq	r5, r1, r4, asr #14
   15674:	andeq	r5, r1, r4, ror r7
   15678:			; <UNDEFINED> instruction: 0x000157b0
   1567c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15680:	cmp	r0, sl
   15684:	blt	15924 <__mempcpy_chk@plt+0x4344>
   15688:	mov	r1, #0
   1568c:	cmp	r0, r2
   15690:	ldrblt	r1, [r7, r0]
   15694:	cmp	r3, #0
   15698:	ldrbne	r1, [r3, r1]
   1569c:	ldrb	r1, [r5, r1]
   156a0:	cmp	r1, #0
   156a4:	bne	157b0 <__mempcpy_chk@plt+0x41d0>
   156a8:	sub	r1, r0, #1
   156ac:	str	r1, [fp, #-36]	; 0xffffffdc
   156b0:	cmp	r0, sl
   156b4:	mov	r0, r1
   156b8:	bgt	15688 <__mempcpy_chk@plt+0x40a8>
   156bc:	b	15924 <__mempcpy_chk@plt+0x4344>
   156c0:	ldr	r0, [sp, #88]	; 0x58
   156c4:	ldr	r2, [sp, #96]	; 0x60
   156c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   156cc:	sub	r0, r1, r0
   156d0:	cmp	r0, r2
   156d4:	bcs	15718 <__mempcpy_chk@plt+0x4138>
   156d8:	mov	r1, #0
   156dc:	ldr	r2, [sp, #92]	; 0x5c
   156e0:	cmp	r0, r2
   156e4:	ldrcc	r1, [sp, #68]	; 0x44
   156e8:	ldrbcc	r1, [r1, r0]
   156ec:	ldrb	r0, [r5, r1]
   156f0:	cmp	r0, #0
   156f4:	bne	157b0 <__mempcpy_chk@plt+0x41d0>
   156f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   156fc:	add	r0, r0, lr
   15700:	str	r0, [fp, #-36]	; 0xffffffdc
   15704:	cmp	r0, sl
   15708:	blt	15924 <__mempcpy_chk@plt+0x4344>
   1570c:	cmp	r0, r8
   15710:	ble	156c0 <__mempcpy_chk@plt+0x40e0>
   15714:	b	15924 <__mempcpy_chk@plt+0x4344>
   15718:	mov	r0, r9
   1571c:	ldr	r2, [fp, #24]
   15720:	bl	1bde8 <__mempcpy_chk@plt+0xa808>
   15724:	cmp	r0, #0
   15728:	bne	15b64 <__mempcpy_chk@plt+0x4584>
   1572c:	ldr	r0, [sp, #88]	; 0x58
   15730:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15734:	sub	r0, r1, r0
   15738:	add	r9, sp, #64	; 0x40
   1573c:	ldr	lr, [sp, #24]
   15740:	b	156d8 <__mempcpy_chk@plt+0x40f8>
   15744:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15748:	cmp	r0, r8
   1574c:	bge	157a4 <__mempcpy_chk@plt+0x41c4>
   15750:	ldrb	r1, [r7, r0]
   15754:	ldrb	r1, [r5, r1]
   15758:	cmp	r1, #0
   1575c:	bne	157a4 <__mempcpy_chk@plt+0x41c4>
   15760:	add	r0, r0, #1
   15764:	str	r0, [fp, #-36]	; 0xffffffdc
   15768:	cmp	r0, r8
   1576c:	blt	15750 <__mempcpy_chk@plt+0x4170>
   15770:	b	157a4 <__mempcpy_chk@plt+0x41c4>
   15774:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15778:	cmp	r0, r8
   1577c:	bge	157a4 <__mempcpy_chk@plt+0x41c4>
   15780:	ldrb	r1, [r7, r0]
   15784:	ldrb	r1, [r3, r1]
   15788:	ldrb	r1, [r5, r1]
   1578c:	cmp	r1, #0
   15790:	bne	157a4 <__mempcpy_chk@plt+0x41c4>
   15794:	add	r0, r0, #1
   15798:	str	r0, [fp, #-36]	; 0xffffffdc
   1579c:	cmp	r0, r8
   157a0:	blt	15780 <__mempcpy_chk@plt+0x41a0>
   157a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   157a8:	cmp	r1, r8
   157ac:	beq	15904 <__mempcpy_chk@plt+0x4324>
   157b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   157b4:	mov	r0, r9
   157b8:	ldr	r2, [fp, #24]
   157bc:	bl	1bde8 <__mempcpy_chk@plt+0xa808>
   157c0:	cmp	r0, #0
   157c4:	bne	15b64 <__mempcpy_chk@plt+0x4584>
   157c8:	ldr	r0, [sp, #44]	; 0x2c
   157cc:	cmp	r0, #1
   157d0:	add	r9, sp, #64	; 0x40
   157d4:	ldrne	r0, [sp, #92]	; 0x5c
   157d8:	cmpne	r0, #0
   157dc:	bne	15860 <__mempcpy_chk@plt+0x4280>
   157e0:	mov	r0, #0
   157e4:	str	r0, [sp, #172]	; 0xac
   157e8:	str	r0, [sp, #184]	; 0xb8
   157ec:	str	r0, [sp, #168]	; 0xa8
   157f0:	mov	r0, r9
   157f4:	ldr	r1, [sp, #40]	; 0x28
   157f8:	ldr	r2, [sp, #28]
   157fc:	bl	1c414 <__mempcpy_chk@plt+0xae34>
   15800:	cmn	r0, #1
   15804:	mov	r4, r9
   15808:	beq	158c8 <__mempcpy_chk@plt+0x42e8>
   1580c:	mov	r2, r0
   15810:	cmn	r0, #2
   15814:	beq	15b6c <__mempcpy_chk@plt+0x458c>
   15818:	str	r2, [sp, #156]	; 0x9c
   1581c:	ldr	r0, [sp, #48]	; 0x30
   15820:	cmp	r0, #2
   15824:	bcc	15874 <__mempcpy_chk@plt+0x4294>
   15828:	ldr	r0, [sp, #32]
   1582c:	ldrb	r0, [r0, #28]
   15830:	ands	r0, r0, #16
   15834:	bne	15874 <__mempcpy_chk@plt+0x4294>
   15838:	ldr	r0, [sp, #164]	; 0xa4
   1583c:	ldr	r1, [r0, r2, lsl #2]
   15840:	add	r0, sp, #64	; 0x40
   15844:	bl	1c788 <__mempcpy_chk@plt+0xb1a8>
   15848:	str	r0, [sp, #160]	; 0xa0
   1584c:	ldr	r0, [sp, #52]	; 0x34
   15850:	ldrb	r0, [r0, #88]	; 0x58
   15854:	tst	r0, #1
   15858:	beq	15898 <__mempcpy_chk@plt+0x42b8>
   1585c:	b	158a8 <__mempcpy_chk@plt+0x42c8>
   15860:	ldr	r0, [sp, #72]	; 0x48
   15864:	ldr	r0, [r0]
   15868:	cmn	r0, #1
   1586c:	bne	157e0 <__mempcpy_chk@plt+0x4200>
   15870:	b	158d4 <__mempcpy_chk@plt+0x42f4>
   15874:	ldr	r0, [sp, #52]	; 0x34
   15878:	ldr	r0, [r0, #76]	; 0x4c
   1587c:	cmp	r0, #0
   15880:	beq	15958 <__mempcpy_chk@plt+0x4378>
   15884:	ldr	r0, [sp, #164]	; 0xa4
   15888:	ldr	r1, [r0, r2, lsl #2]
   1588c:	add	r0, sp, #64	; 0x40
   15890:	bl	1c788 <__mempcpy_chk@plt+0xb1a8>
   15894:	str	r0, [sp, #160]	; 0xa0
   15898:	ldr	r0, [sp, #52]	; 0x34
   1589c:	ldr	r0, [r0, #76]	; 0x4c
   158a0:	cmp	r0, #0
   158a4:	beq	15958 <__mempcpy_chk@plt+0x4378>
   158a8:	add	r0, sp, #64	; 0x40
   158ac:	bl	1c800 <__mempcpy_chk@plt+0xb220>
   158b0:	cmp	r0, #0
   158b4:	beq	15958 <__mempcpy_chk@plt+0x4378>
   158b8:	mov	r9, r0
   158bc:	cmp	r0, #1
   158c0:	add	r4, sp, #64	; 0x40
   158c4:	bne	15928 <__mempcpy_chk@plt+0x4348>
   158c8:	mov	r0, r4
   158cc:	bl	1ca20 <__mempcpy_chk@plt+0xb440>
   158d0:	mov	r9, r4
   158d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   158d8:	ldr	lr, [sp, #24]
   158dc:	add	r0, r0, lr
   158e0:	str	r0, [fp, #-36]	; 0xffffffdc
   158e4:	cmp	r0, sl
   158e8:	blt	15924 <__mempcpy_chk@plt+0x4344>
   158ec:	cmp	r8, r0
   158f0:	ldr	r2, [sp, #60]	; 0x3c
   158f4:	ldr	r4, [sp, #20]
   158f8:	ldr	r3, [sp, #56]	; 0x38
   158fc:	bge	15658 <__mempcpy_chk@plt+0x4078>
   15900:	b	15924 <__mempcpy_chk@plt+0x4344>
   15904:	mov	r0, #0
   15908:	cmp	r1, r2
   1590c:	ldrblt	r0, [r7, r1]
   15910:	cmp	r3, #0
   15914:	ldrbne	r0, [r3, r0]
   15918:	ldrb	r0, [r5, r0]
   1591c:	cmp	r0, #0
   15920:	bne	157b0 <__mempcpy_chk@plt+0x41d0>
   15924:	mov	r9, #1
   15928:	ldr	r8, [sp, #52]	; 0x34
   1592c:	ldr	r0, [sp, #164]	; 0xa4
   15930:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15934:	ldr	r0, [r8, #76]	; 0x4c
   15938:	cmp	r0, #0
   1593c:	addne	r0, sp, #64	; 0x40
   15940:	blne	1cd48 <__mempcpy_chk@plt+0xb768>
   15944:	add	r0, sp, #64	; 0x40
   15948:	bl	16390 <__mempcpy_chk@plt+0x4db0>
   1594c:	mov	r0, r9
   15950:	sub	sp, fp, #28
   15954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15958:	ldr	sl, [sp, #48]	; 0x30
   1595c:	cmp	sl, #0
   15960:	beq	15a54 <__mempcpy_chk@plt+0x4474>
   15964:	cmp	sl, #1
   15968:	ldr	r8, [sp, #52]	; 0x34
   1596c:	ldr	r6, [sp, #16]
   15970:	ldr	r4, [fp, #16]
   15974:	beq	15994 <__mempcpy_chk@plt+0x43b4>
   15978:	mvn	r0, r6
   1597c:	add	r0, r0, r4
   15980:	lsl	r2, r0, #3
   15984:	ldr	r0, [fp, #20]
   15988:	add	r0, r0, #8
   1598c:	mov	r1, #255	; 0xff
   15990:	bl	114fc <memset@plt>
   15994:	mov	r0, #0
   15998:	ldr	r1, [sp, #156]	; 0x9c
   1599c:	ldr	r2, [fp, #20]
   159a0:	stm	r2, {r0, r1}
   159a4:	cmp	sl, #2
   159a8:	bcc	159fc <__mempcpy_chk@plt+0x441c>
   159ac:	ldr	r0, [sp, #32]
   159b0:	ldrb	r0, [r0, #28]
   159b4:	ands	r0, r0, #16
   159b8:	bne	159fc <__mempcpy_chk@plt+0x441c>
   159bc:	ldrb	r1, [r8, #88]	; 0x58
   159c0:	mov	r0, #0
   159c4:	tst	r1, #1
   159c8:	beq	159dc <__mempcpy_chk@plt+0x43fc>
   159cc:	ldr	r1, [r8, #76]	; 0x4c
   159d0:	mov	r0, #0
   159d4:	cmp	r1, #0
   159d8:	movwgt	r0, #1
   159dc:	str	r0, [sp]
   159e0:	add	r1, sp, #64	; 0x40
   159e4:	ldr	r0, [sp, #32]
   159e8:	mov	r2, sl
   159ec:	ldr	r3, [fp, #20]
   159f0:	bl	1cac8 <__mempcpy_chk@plt+0xb4e8>
   159f4:	cmp	r0, #0
   159f8:	bne	15b5c <__mempcpy_chk@plt+0x457c>
   159fc:	ldr	r0, [fp, #20]
   15a00:	add	r0, r0, #4
   15a04:	add	r1, sp, #64	; 0x40
   15a08:	add	lr, r1, #32
   15a0c:	ldrb	r2, [sp, #140]	; 0x8c
   15a10:	mov	r3, r4
   15a14:	b	15aa0 <__mempcpy_chk@plt+0x44c0>
   15a18:	ldr	r1, [r3, #8]
   15a1c:	cmp	r1, #0
   15a20:	beq	15a30 <__mempcpy_chk@plt+0x4450>
   15a24:	ldrsb	r1, [sl, #28]
   15a28:	cmp	r1, #0
   15a2c:	blt	15498 <__mempcpy_chk@plt+0x3eb8>
   15a30:	mov	r6, #0
   15a34:	ldr	r0, [sp, #44]	; 0x2c
   15a38:	cmp	r0, #0
   15a3c:	beq	15a5c <__mempcpy_chk@plt+0x447c>
   15a40:	cmp	ip, #0
   15a44:	mov	r0, #0
   15a48:	str	r0, [sp, #44]	; 0x2c
   15a4c:	bne	1594c <__mempcpy_chk@plt+0x436c>
   15a50:	b	1549c <__mempcpy_chk@plt+0x3ebc>
   15a54:	mov	r9, #0
   15a58:	b	15928 <__mempcpy_chk@plt+0x4348>
   15a5c:	mov	r0, #0
   15a60:	str	r0, [sp, #44]	; 0x2c
   15a64:	b	1549c <__mempcpy_chk@plt+0x3ebc>
   15a68:	ldr	ip, [sp, #76]	; 0x4c
   15a6c:	ldr	r5, [sp, #92]	; 0x5c
   15a70:	cmp	r7, r5
   15a74:	mov	r1, lr
   15a78:	addne	r1, ip, r7, lsl #2
   15a7c:	ldr	r1, [r1]
   15a80:	str	r1, [r0, #-4]
   15a84:	ldr	r1, [r0]
   15a88:	cmp	r1, r5
   15a8c:	mov	r4, lr
   15a90:	addne	r4, ip, r1, lsl #2
   15a94:	ldr	r1, [r4]
   15a98:	str	r1, [r0]
   15a9c:	b	15ab4 <__mempcpy_chk@plt+0x44d4>
   15aa0:	ldr	r7, [r0, #-4]
   15aa4:	cmn	r7, #1
   15aa8:	beq	15ac8 <__mempcpy_chk@plt+0x44e8>
   15aac:	cmp	r2, #0
   15ab0:	bne	15a68 <__mempcpy_chk@plt+0x4488>
   15ab4:	ldmda	r0, {r1, r7}
   15ab8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15abc:	add	r1, r1, r5
   15ac0:	add	r7, r7, r5
   15ac4:	stmda	r0, {r1, r7}
   15ac8:	add	r0, r0, #8
   15acc:	sub	r3, r3, #1
   15ad0:	cmp	r6, r3
   15ad4:	bne	15aa0 <__mempcpy_chk@plt+0x44c0>
   15ad8:	cmp	r6, #0
   15adc:	ldr	r4, [fp, #20]
   15ae0:	ble	15af4 <__mempcpy_chk@plt+0x4514>
   15ae4:	add	r0, r4, sl, lsl #3
   15ae8:	lsl	r2, r6, #3
   15aec:	mov	r1, #255	; 0xff
   15af0:	bl	114fc <memset@plt>
   15af4:	ldr	r0, [r8, #132]	; 0x84
   15af8:	mov	r9, #0
   15afc:	cmp	r0, #0
   15b00:	beq	1592c <__mempcpy_chk@plt+0x434c>
   15b04:	cmp	sl, #2
   15b08:	bcc	1592c <__mempcpy_chk@plt+0x434c>
   15b0c:	ldr	r1, [fp, #16]
   15b10:	sub	r1, r1, #1
   15b14:	sub	r1, r1, r6
   15b18:	mov	r2, #0
   15b1c:	ldr	r3, [r0, r2, lsl #2]
   15b20:	cmp	r2, r3
   15b24:	beq	15b48 <__mempcpy_chk@plt+0x4568>
   15b28:	add	r7, r4, r2, lsl #3
   15b2c:	add	r3, r4, r3, lsl #3
   15b30:	ldr	r3, [r3, #8]
   15b34:	str	r3, [r7, #8]
   15b38:	ldr	r3, [r0, r2, lsl #2]
   15b3c:	add	r3, r4, r3, lsl #3
   15b40:	ldr	r3, [r3, #12]
   15b44:	str	r3, [r7, #12]
   15b48:	add	r2, r2, #1
   15b4c:	cmp	r1, r2
   15b50:	bne	15b1c <__mempcpy_chk@plt+0x453c>
   15b54:	mov	r9, #0
   15b58:	b	1592c <__mempcpy_chk@plt+0x434c>
   15b5c:	mov	r9, r0
   15b60:	b	1592c <__mempcpy_chk@plt+0x434c>
   15b64:	mov	r9, r0
   15b68:	b	15928 <__mempcpy_chk@plt+0x4348>
   15b6c:	mov	r9, #12
   15b70:	b	15928 <__mempcpy_chk@plt+0x4348>
   15b74:	push	{fp, lr}
   15b78:	mov	fp, sp
   15b7c:	sub	sp, sp, #16
   15b80:	mov	ip, #1
   15b84:	str	ip, [sp, #12]
   15b88:	str	r2, [sp, #4]
   15b8c:	mov	ip, #0
   15b90:	str	ip, [sp]
   15b94:	ldr	ip, [fp, #8]
   15b98:	str	ip, [sp, #8]
   15b9c:	bl	15ba8 <__mempcpy_chk@plt+0x45c8>
   15ba0:	mov	sp, fp
   15ba4:	pop	{fp, pc}
   15ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bac:	add	fp, sp, #28
   15bb0:	sub	sp, sp, #36	; 0x24
   15bb4:	mvn	r7, #0
   15bb8:	cmp	r3, #0
   15bbc:	blt	15d58 <__mempcpy_chk@plt+0x4778>
   15bc0:	mov	r9, r3
   15bc4:	mov	r8, r2
   15bc8:	cmp	r3, r2
   15bcc:	bgt	15d58 <__mempcpy_chk@plt+0x4778>
   15bd0:	mov	r5, r0
   15bd4:	str	r1, [sp, #28]
   15bd8:	ldr	r0, [fp, #8]
   15bdc:	add	r0, r0, r9
   15be0:	ldr	r4, [r5]
   15be4:	cmp	r0, r8
   15be8:	mov	r6, r8
   15bec:	bicle	r6, r0, r0, asr #31
   15bf0:	movw	r0, #0
   15bf4:	movt	r0, #0
   15bf8:	movw	r1, #0
   15bfc:	movt	r1, #0
   15c00:	orrs	r0, r1, r0
   15c04:	str	r0, [sp, #32]
   15c08:	beq	15c14 <__mempcpy_chk@plt+0x4634>
   15c0c:	add	r0, r4, #136	; 0x88
   15c10:	bl	11334 <pthread_mutex_lock@plt>
   15c14:	str	r4, [sp, #20]
   15c18:	ldr	r4, [fp, #16]
   15c1c:	ldrb	r0, [r5, #28]
   15c20:	ubfx	r1, r0, #5, #2
   15c24:	str	r1, [sp, #24]
   15c28:	cmp	r6, r9
   15c2c:	ble	15c48 <__mempcpy_chk@plt+0x4668>
   15c30:	tst	r0, #8
   15c34:	bne	15c48 <__mempcpy_chk@plt+0x4668>
   15c38:	ldr	r0, [r5, #16]
   15c3c:	cmp	r0, #0
   15c40:	movne	r0, r5
   15c44:	blne	14b30 <__mempcpy_chk@plt+0x3550>
   15c48:	mov	r7, #1
   15c4c:	mov	sl, #0
   15c50:	cmp	r4, #0
   15c54:	beq	15c8c <__mempcpy_chk@plt+0x46ac>
   15c58:	ldrb	r0, [r5, #28]
   15c5c:	ands	r1, r0, #16
   15c60:	bne	15c8c <__mempcpy_chk@plt+0x46ac>
   15c64:	and	r0, r0, #6
   15c68:	cmp	r0, #4
   15c6c:	bne	15c80 <__mempcpy_chk@plt+0x46a0>
   15c70:	ldr	r7, [r4]
   15c74:	ldr	r0, [r5, #24]
   15c78:	cmp	r7, r0
   15c7c:	bls	15d78 <__mempcpy_chk@plt+0x4798>
   15c80:	ldr	r0, [r5, #24]
   15c84:	add	r7, r0, #1
   15c88:	mov	sl, r4
   15c8c:	lsl	r0, r7, #3
   15c90:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   15c94:	cmp	r0, #0
   15c98:	beq	15d64 <__mempcpy_chk@plt+0x4784>
   15c9c:	mov	r4, r0
   15ca0:	ldr	r0, [fp, #12]
   15ca4:	str	r6, [sp]
   15ca8:	stmib	sp, {r0, r7}
   15cac:	str	r4, [sp, #12]
   15cb0:	ldr	r0, [sp, #24]
   15cb4:	str	r0, [sp, #16]
   15cb8:	mov	r0, r5
   15cbc:	ldr	r1, [sp, #28]
   15cc0:	mov	r2, r8
   15cc4:	mov	r3, r9
   15cc8:	bl	153c8 <__mempcpy_chk@plt+0x3de8>
   15ccc:	cmp	r0, #0
   15cd0:	beq	15ce4 <__mempcpy_chk@plt+0x4704>
   15cd4:	mvn	r7, #1
   15cd8:	cmp	r0, #1
   15cdc:	mvneq	r7, #0
   15ce0:	b	15d38 <__mempcpy_chk@plt+0x4758>
   15ce4:	cmp	sl, #0
   15ce8:	beq	15d1c <__mempcpy_chk@plt+0x473c>
   15cec:	ldrb	r0, [r5, #28]
   15cf0:	ubfx	r3, r0, #1, #2
   15cf4:	mov	r0, sl
   15cf8:	mov	r1, r4
   15cfc:	mov	r2, r7
   15d00:	bl	1bb58 <__mempcpy_chk@plt+0xa578>
   15d04:	ldrb	r1, [r5, #28]
   15d08:	and	r1, r1, #249	; 0xf9
   15d0c:	bfi	r1, r0, #1, #2
   15d10:	strb	r1, [r5, #28]
   15d14:	tst	r0, #3
   15d18:	beq	15d34 <__mempcpy_chk@plt+0x4754>
   15d1c:	ldr	r0, [fp, #20]
   15d20:	cmp	r0, #0
   15d24:	ldreq	r7, [r4]
   15d28:	ldrne	r0, [r4, #4]
   15d2c:	subne	r7, r0, r9
   15d30:	b	15d38 <__mempcpy_chk@plt+0x4758>
   15d34:	mvn	r7, #1
   15d38:	ldr	r5, [sp, #32]
   15d3c:	mov	r0, r4
   15d40:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15d44:	cmp	r5, #0
   15d48:	beq	15d58 <__mempcpy_chk@plt+0x4778>
   15d4c:	ldr	r0, [sp, #20]
   15d50:	add	r0, r0, #136	; 0x88
   15d54:	bl	1128c <pthread_mutex_unlock@plt>
   15d58:	mov	r0, r7
   15d5c:	sub	sp, fp, #28
   15d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d64:	mvn	r7, #1
   15d68:	ldr	r5, [sp, #32]
   15d6c:	cmp	r5, #0
   15d70:	bne	15d4c <__mempcpy_chk@plt+0x476c>
   15d74:	b	15d58 <__mempcpy_chk@plt+0x4778>
   15d78:	cmp	r7, #1
   15d7c:	movwlt	r4, #0
   15d80:	movwlt	r7, #1
   15d84:	b	15c88 <__mempcpy_chk@plt+0x46a8>
   15d88:	push	{fp, lr}
   15d8c:	mov	fp, sp
   15d90:	sub	sp, sp, #16
   15d94:	mov	ip, #0
   15d98:	str	ip, [sp, #12]
   15d9c:	str	r2, [sp, #4]
   15da0:	ldr	ip, [fp, #12]
   15da4:	str	ip, [sp, #8]
   15da8:	ldr	ip, [fp, #8]
   15dac:	str	ip, [sp]
   15db0:	bl	15ba8 <__mempcpy_chk@plt+0x45c8>
   15db4:	mov	sp, fp
   15db8:	pop	{fp, pc}
   15dbc:	push	{fp, lr}
   15dc0:	mov	fp, sp
   15dc4:	sub	sp, sp, #24
   15dc8:	mov	ip, #1
   15dcc:	str	ip, [sp, #20]
   15dd0:	mov	ip, #0
   15dd4:	str	ip, [sp, #8]
   15dd8:	ldr	ip, [fp, #20]
   15ddc:	str	ip, [sp, #16]
   15de0:	ldr	ip, [fp, #16]
   15de4:	str	ip, [sp, #12]
   15de8:	ldr	ip, [fp, #12]
   15dec:	str	ip, [sp, #4]
   15df0:	ldr	ip, [fp, #8]
   15df4:	str	ip, [sp]
   15df8:	bl	15e04 <__mempcpy_chk@plt+0x4824>
   15dfc:	mov	sp, fp
   15e00:	pop	{fp, pc}
   15e04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e08:	add	fp, sp, #28
   15e0c:	sub	sp, sp, #20
   15e10:	mov	r6, r2
   15e14:	mov	r8, r1
   15e18:	mov	r1, r0
   15e1c:	ldr	r4, [fp, #8]
   15e20:	orr	r0, r4, r2
   15e24:	ldr	r2, [fp, #24]
   15e28:	orr	r0, r0, r2
   15e2c:	cmp	r0, #0
   15e30:	blt	15ee4 <__mempcpy_chk@plt+0x4904>
   15e34:	adds	sl, r6, r4
   15e38:	bvs	15ee4 <__mempcpy_chk@plt+0x4904>
   15e3c:	mov	r5, #0
   15e40:	cmp	r4, #1
   15e44:	blt	15e98 <__mempcpy_chk@plt+0x48b8>
   15e48:	mov	r9, r3
   15e4c:	cmp	r6, #1
   15e50:	blt	15ea0 <__mempcpy_chk@plt+0x48c0>
   15e54:	mov	r0, sl
   15e58:	mov	r5, r1
   15e5c:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   15e60:	cmp	r0, #0
   15e64:	beq	15ee4 <__mempcpy_chk@plt+0x4904>
   15e68:	mov	r7, r0
   15e6c:	mov	r1, r8
   15e70:	mov	r2, r6
   15e74:	bl	1134c <memcpy@plt>
   15e78:	add	r0, r7, r6
   15e7c:	mov	r1, r9
   15e80:	mov	r2, r4
   15e84:	bl	1134c <memcpy@plt>
   15e88:	ldr	r2, [fp, #24]
   15e8c:	mov	r1, r5
   15e90:	mov	r5, r7
   15e94:	b	15ea4 <__mempcpy_chk@plt+0x48c4>
   15e98:	mov	r7, r8
   15e9c:	b	15ea4 <__mempcpy_chk@plt+0x48c4>
   15ea0:	mov	r7, r9
   15ea4:	ldr	r0, [fp, #28]
   15ea8:	add	r6, fp, #12
   15eac:	ldm	r6, {r3, r4, r6}
   15eb0:	str	r4, [sp]
   15eb4:	stmib	sp, {r2, r6}
   15eb8:	str	r0, [sp, #12]
   15ebc:	mov	r0, r1
   15ec0:	mov	r1, r7
   15ec4:	mov	r2, sl
   15ec8:	bl	15ba8 <__mempcpy_chk@plt+0x45c8>
   15ecc:	mov	r4, r0
   15ed0:	mov	r0, r5
   15ed4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15ed8:	mov	r0, r4
   15edc:	sub	sp, fp, #28
   15ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ee4:	mvn	r0, #1
   15ee8:	sub	sp, fp, #28
   15eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ef0:	push	{fp, lr}
   15ef4:	mov	fp, sp
   15ef8:	sub	sp, sp, #24
   15efc:	mov	ip, #0
   15f00:	str	ip, [sp, #20]
   15f04:	ldr	ip, [fp, #24]
   15f08:	str	ip, [sp, #16]
   15f0c:	ldr	ip, [fp, #20]
   15f10:	str	ip, [sp, #12]
   15f14:	ldr	ip, [fp, #16]
   15f18:	str	ip, [sp, #8]
   15f1c:	ldr	ip, [fp, #12]
   15f20:	str	ip, [sp, #4]
   15f24:	ldr	ip, [fp, #8]
   15f28:	str	ip, [sp]
   15f2c:	bl	15e04 <__mempcpy_chk@plt+0x4824>
   15f30:	mov	sp, fp
   15f34:	pop	{fp, pc}
   15f38:	ldrb	ip, [r0, #28]
   15f3c:	bic	ip, ip, #6
   15f40:	cmp	r2, #0
   15f44:	beq	15f64 <__mempcpy_chk@plt+0x4984>
   15f48:	push	{fp, lr}
   15f4c:	mov	fp, sp
   15f50:	ldr	lr, [fp, #8]
   15f54:	orr	ip, ip, #2
   15f58:	strb	ip, [r0, #28]
   15f5c:	stm	r1, {r2, r3, lr}
   15f60:	pop	{fp, pc}
   15f64:	strb	ip, [r0, #28]
   15f68:	mov	r0, #0
   15f6c:	str	r0, [r1]
   15f70:	str	r0, [r1, #4]
   15f74:	str	r0, [r1, #8]
   15f78:	bx	lr
   15f7c:	ldr	r1, [r0, #4]
   15f80:	movw	r2, #255	; 0xff
   15f84:	movt	r2, #4
   15f88:	and	r1, r1, r2
   15f8c:	cmp	r1, #6
   15f90:	bne	15f9c <__mempcpy_chk@plt+0x49bc>
   15f94:	ldr	r0, [r0]
   15f98:	b	1600c <__mempcpy_chk@plt+0x4a2c>
   15f9c:	cmp	r1, #3
   15fa0:	bxne	lr
   15fa4:	ldr	r0, [r0]
   15fa8:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   15fac:	push	{r4, sl, fp, lr}
   15fb0:	add	fp, sp, #8
   15fb4:	mov	r4, r0
   15fb8:	ldr	r0, [r0, #24]
   15fbc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15fc0:	ldr	r0, [r4, #36]	; 0x24
   15fc4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15fc8:	ldr	r0, [r4, #40]	; 0x28
   15fcc:	add	r1, r4, #4
   15fd0:	cmp	r0, r1
   15fd4:	beq	15fe8 <__mempcpy_chk@plt+0x4a08>
   15fd8:	ldr	r0, [r0, #8]
   15fdc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15fe0:	ldr	r0, [r4, #40]	; 0x28
   15fe4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15fe8:	ldr	r0, [r4, #12]
   15fec:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15ff0:	ldr	r0, [r4, #48]	; 0x30
   15ff4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   15ff8:	ldr	r0, [r4, #44]	; 0x2c
   15ffc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16000:	mov	r0, r4
   16004:	pop	{r4, sl, fp, lr}
   16008:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   1600c:	push	{r4, sl, fp, lr}
   16010:	add	fp, sp, #8
   16014:	mov	r4, r0
   16018:	ldr	r0, [r0]
   1601c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16020:	ldr	r0, [r4, #4]
   16024:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16028:	ldr	r0, [r4, #8]
   1602c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16030:	ldr	r0, [r4, #12]
   16034:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16038:	mov	r0, r4
   1603c:	pop	{r4, sl, fp, lr}
   16040:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   16044:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16048:	add	fp, sp, #24
   1604c:	mov	r5, r1
   16050:	mov	r9, r0
   16054:	mov	r1, #0
   16058:	mov	r2, #160	; 0xa0
   1605c:	bl	114fc <memset@plt>
   16060:	mov	r0, #31
   16064:	str	r0, [r9, #64]	; 0x40
   16068:	movw	r0, #43689	; 0xaaa9
   1606c:	movt	r0, #2730	; 0xaaa
   16070:	cmp	r5, r0
   16074:	bhi	161e8 <__mempcpy_chk@plt+0x4c08>
   16078:	add	r0, r5, #1
   1607c:	str	r0, [r9, #4]
   16080:	lsl	r0, r0, #3
   16084:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   16088:	str	r0, [r9]
   1608c:	mov	r0, #1
   16090:	mov	r6, r0
   16094:	lsl	r0, r0, #1
   16098:	cmp	r6, r5
   1609c:	bls	16090 <__mempcpy_chk@plt+0x4ab0>
   160a0:	mov	r0, #12
   160a4:	mov	r1, r6
   160a8:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   160ac:	str	r0, [r9, #32]
   160b0:	sub	r0, r6, #1
   160b4:	str	r0, [r9, #68]	; 0x44
   160b8:	bl	11418 <__ctype_get_mb_cur_max@plt>
   160bc:	str	r0, [r9, #92]	; 0x5c
   160c0:	mov	r0, #14
   160c4:	bl	11580 <nl_langinfo@plt>
   160c8:	ldrb	r1, [r0]
   160cc:	orr	r1, r1, #32
   160d0:	cmp	r1, #117	; 0x75
   160d4:	bne	16120 <__mempcpy_chk@plt+0x4b40>
   160d8:	ldrb	r1, [r0, #1]
   160dc:	orr	r1, r1, #32
   160e0:	cmp	r1, #116	; 0x74
   160e4:	bne	16120 <__mempcpy_chk@plt+0x4b40>
   160e8:	ldrb	r1, [r0, #2]
   160ec:	orr	r1, r1, #32
   160f0:	cmp	r1, #102	; 0x66
   160f4:	bne	16120 <__mempcpy_chk@plt+0x4b40>
   160f8:	ldrb	r1, [r0, #3]!
   160fc:	cmp	r1, #45	; 0x2d
   16100:	addeq	r0, r0, #1
   16104:	movw	r1, #13684	; 0x3574
   16108:	movt	r1, #2
   1610c:	bl	112ec <strcmp@plt>
   16110:	cmp	r0, #0
   16114:	ldrbeq	r0, [r9, #88]	; 0x58
   16118:	orreq	r0, r0, #4
   1611c:	strbeq	r0, [r9, #88]	; 0x58
   16120:	ldrb	r0, [r9, #88]	; 0x58
   16124:	and	r1, r0, #247	; 0xf7
   16128:	strb	r1, [r9, #88]	; 0x58
   1612c:	ldr	r1, [r9, #92]	; 0x5c
   16130:	cmp	r1, #2
   16134:	blt	161cc <__mempcpy_chk@plt+0x4bec>
   16138:	tst	r0, #4
   1613c:	bne	161c0 <__mempcpy_chk@plt+0x4be0>
   16140:	mov	r8, #1
   16144:	mov	r0, #32
   16148:	mov	r1, #1
   1614c:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   16150:	str	r0, [r9, #60]	; 0x3c
   16154:	cmp	r0, #0
   16158:	beq	161e8 <__mempcpy_chk@plt+0x4c08>
   1615c:	mov	r7, #0
   16160:	mov	r6, #0
   16164:	mov	r4, #0
   16168:	add	r5, r7, r4
   1616c:	mov	r0, r5
   16170:	bl	11508 <btowc@plt>
   16174:	cmn	r0, #1
   16178:	ldrne	r1, [r9, #60]	; 0x3c
   1617c:	ldrne	r2, [r1, r6, lsl #2]
   16180:	orrne	r2, r2, r8, lsl r4
   16184:	strne	r2, [r1, r6, lsl #2]
   16188:	cmp	r5, #127	; 0x7f
   1618c:	bhi	161a0 <__mempcpy_chk@plt+0x4bc0>
   16190:	cmp	r5, r0
   16194:	ldrbne	r0, [r9, #88]	; 0x58
   16198:	orrne	r0, r0, #8
   1619c:	strbne	r0, [r9, #88]	; 0x58
   161a0:	add	r4, r4, #1
   161a4:	cmp	r4, #32
   161a8:	bne	16168 <__mempcpy_chk@plt+0x4b88>
   161ac:	add	r6, r6, #1
   161b0:	add	r7, r7, #32
   161b4:	cmp	r6, #8
   161b8:	bne	16164 <__mempcpy_chk@plt+0x4b84>
   161bc:	b	161cc <__mempcpy_chk@plt+0x4bec>
   161c0:	movw	r0, #13636	; 0x3544
   161c4:	movt	r0, #2
   161c8:	str	r0, [r9, #60]	; 0x3c
   161cc:	ldr	r0, [r9]
   161d0:	cmp	r0, #0
   161d4:	ldrne	r1, [r9, #32]
   161d8:	movne	r0, #0
   161dc:	cmpne	r1, #0
   161e0:	moveq	r0, #12
   161e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161e8:	mov	r0, #12
   161ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   161f4:	add	fp, sp, #24
   161f8:	sub	sp, sp, #8
   161fc:	mov	r8, r3
   16200:	mov	r5, r2
   16204:	mov	r7, r1
   16208:	mov	r4, r0
   1620c:	vmov.i32	q8, #0	; 0x00000000
   16210:	mov	r0, #80	; 0x50
   16214:	mov	r1, r4
   16218:	vst1.32	{d16-d17}, [r1], r0
   1621c:	mov	r0, #0
   16220:	str	r0, [r1]
   16224:	add	r0, r4, #64	; 0x40
   16228:	vst1.32	{d16-d17}, [r0]
   1622c:	add	r0, r4, #48	; 0x30
   16230:	vst1.32	{d16-d17}, [r0]
   16234:	add	r0, r4, #32
   16238:	vst1.32	{d16-d17}, [r0]
   1623c:	add	r0, r4, #16
   16240:	vst1.32	{d16-d17}, [r0]
   16244:	ldr	r6, [fp, #12]
   16248:	str	r6, [sp, #4]
   1624c:	ldr	r9, [fp, #8]
   16250:	str	r9, [sp]
   16254:	mov	r0, r7
   16258:	mov	r1, r2
   1625c:	mov	r2, r4
   16260:	bl	16a34 <__mempcpy_chk@plt+0x5454>
   16264:	cmp	r5, #1
   16268:	blt	16280 <__mempcpy_chk@plt+0x4ca0>
   1626c:	add	r1, r5, #1
   16270:	mov	r0, r4
   16274:	bl	16a8c <__mempcpy_chk@plt+0x54ac>
   16278:	cmp	r0, #0
   1627c:	bne	16338 <__mempcpy_chk@plt+0x4d58>
   16280:	ldrb	r0, [r4, #75]	; 0x4b
   16284:	cmp	r0, #0
   16288:	ldrne	r7, [r4, #4]
   1628c:	str	r7, [r4, #4]
   16290:	ldr	r0, [r6, #92]	; 0x5c
   16294:	cmp	r9, #0
   16298:	beq	162f4 <__mempcpy_chk@plt+0x4d14>
   1629c:	cmp	r0, #2
   162a0:	blt	16308 <__mempcpy_chk@plt+0x4d28>
   162a4:	mov	r0, r4
   162a8:	bl	16b30 <__mempcpy_chk@plt+0x5550>
   162ac:	cmp	r0, #0
   162b0:	bne	16338 <__mempcpy_chk@plt+0x4d58>
   162b4:	ldr	r1, [r4, #32]
   162b8:	mov	r0, #0
   162bc:	cmp	r1, r5
   162c0:	bge	16338 <__mempcpy_chk@plt+0x4d58>
   162c4:	ldr	r2, [r4, #28]
   162c8:	ldr	r1, [r4, #36]	; 0x24
   162cc:	ldr	r3, [r6, #92]	; 0x5c
   162d0:	add	r2, r3, r2
   162d4:	cmp	r1, r2
   162d8:	bgt	16338 <__mempcpy_chk@plt+0x4d58>
   162dc:	lsl	r1, r1, #1
   162e0:	mov	r0, r4
   162e4:	bl	16a8c <__mempcpy_chk@plt+0x54ac>
   162e8:	cmp	r0, #0
   162ec:	beq	162a4 <__mempcpy_chk@plt+0x4cc4>
   162f0:	b	16338 <__mempcpy_chk@plt+0x4d58>
   162f4:	cmp	r0, #2
   162f8:	blt	16314 <__mempcpy_chk@plt+0x4d34>
   162fc:	mov	r0, r4
   16300:	bl	17164 <__mempcpy_chk@plt+0x5b84>
   16304:	b	16334 <__mempcpy_chk@plt+0x4d54>
   16308:	mov	r0, r4
   1630c:	bl	170f8 <__mempcpy_chk@plt+0x5b18>
   16310:	b	16334 <__mempcpy_chk@plt+0x4d54>
   16314:	cmp	r8, #0
   16318:	beq	16328 <__mempcpy_chk@plt+0x4d48>
   1631c:	mov	r0, r4
   16320:	bl	172f4 <__mempcpy_chk@plt+0x5d14>
   16324:	b	16334 <__mempcpy_chk@plt+0x4d54>
   16328:	ldr	r0, [r4, #36]	; 0x24
   1632c:	str	r0, [r4, #28]
   16330:	str	r0, [r4, #32]
   16334:	mov	r0, #0
   16338:	sub	sp, fp, #24
   1633c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16340:	push	{r4, r5, fp, lr}
   16344:	add	fp, sp, #8
   16348:	ldr	r4, [r0]
   1634c:	ldr	r0, [r4, #56]	; 0x38
   16350:	cmp	r0, #0
   16354:	beq	1636c <__mempcpy_chk@plt+0x4d8c>
   16358:	ldr	r5, [r0]
   1635c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16360:	cmp	r5, #0
   16364:	mov	r0, r5
   16368:	bne	16358 <__mempcpy_chk@plt+0x4d78>
   1636c:	mov	r0, #31
   16370:	str	r0, [r4, #64]	; 0x40
   16374:	mov	r5, #0
   16378:	str	r5, [r4, #52]	; 0x34
   1637c:	str	r5, [r4, #56]	; 0x38
   16380:	ldr	r0, [r4, #16]
   16384:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16388:	str	r5, [r4, #16]
   1638c:	pop	{r4, r5, fp, pc}
   16390:	push	{r4, sl, fp, lr}
   16394:	add	fp, sp, #8
   16398:	mov	r4, r0
   1639c:	ldr	r0, [r0, #8]
   163a0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   163a4:	ldr	r0, [r4, #12]
   163a8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   163ac:	ldrb	r0, [r4, #75]	; 0x4b
   163b0:	cmp	r0, #0
   163b4:	popeq	{r4, sl, fp, pc}
   163b8:	ldr	r0, [r4, #4]
   163bc:	pop	{r4, sl, fp, lr}
   163c0:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   163c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163c8:	add	fp, sp, #28
   163cc:	sub	sp, sp, #20
   163d0:	mov	r8, r3
   163d4:	mov	r4, r2
   163d8:	mov	r7, r1
   163dc:	mov	r5, r0
   163e0:	ldr	r9, [r1]
   163e4:	str	r2, [r9, #128]	; 0x80
   163e8:	orr	r2, r2, #8388608	; 0x800000
   163ec:	add	sl, sp, #12
   163f0:	mov	r0, sl
   163f4:	mov	r1, r5
   163f8:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   163fc:	mov	r6, #0
   16400:	stm	sp, {r6, r8}
   16404:	mov	r0, r5
   16408:	mov	r1, r7
   1640c:	mov	r2, sl
   16410:	mov	r3, r4
   16414:	bl	17374 <__mempcpy_chk@plt+0x5d94>
   16418:	mov	r7, r0
   1641c:	cmp	r0, #0
   16420:	bne	16430 <__mempcpy_chk@plt+0x4e50>
   16424:	ldr	r0, [r8]
   16428:	cmp	r0, #0
   1642c:	bne	1647c <__mempcpy_chk@plt+0x4e9c>
   16430:	mov	r0, r9
   16434:	mov	r1, #0
   16438:	mov	r2, #0
   1643c:	mov	r3, #2
   16440:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   16444:	mov	r4, r0
   16448:	cmp	r7, #0
   1644c:	beq	1646c <__mempcpy_chk@plt+0x4e8c>
   16450:	mov	r0, r9
   16454:	mov	r1, r7
   16458:	mov	r2, r4
   1645c:	mov	r3, #16
   16460:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   16464:	mov	r6, r0
   16468:	b	16470 <__mempcpy_chk@plt+0x4e90>
   1646c:	mov	r6, r4
   16470:	cmp	r4, #0
   16474:	cmpne	r6, #0
   16478:	beq	16488 <__mempcpy_chk@plt+0x4ea8>
   1647c:	mov	r0, r6
   16480:	sub	sp, fp, #28
   16484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16488:	mov	r0, #12
   1648c:	str	r0, [r8]
   16490:	mov	r6, #0
   16494:	b	1647c <__mempcpy_chk@plt+0x4e9c>
   16498:	push	{r4, r5, r6, r7, fp, lr}
   1649c:	add	fp, sp, #16
   164a0:	mov	r6, r0
   164a4:	ldr	r4, [r0]
   164a8:	ldr	r0, [r4, #4]
   164ac:	lsl	r0, r0, #2
   164b0:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   164b4:	str	r0, [r4, #12]
   164b8:	ldr	r0, [r4, #4]
   164bc:	lsl	r0, r0, #2
   164c0:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   164c4:	str	r0, [r4, #16]
   164c8:	ldr	r0, [r4, #4]
   164cc:	add	r0, r0, r0, lsl #1
   164d0:	lsl	r0, r0, #2
   164d4:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   164d8:	str	r0, [r4, #20]
   164dc:	ldr	r0, [r4, #4]
   164e0:	add	r0, r0, r0, lsl #1
   164e4:	lsl	r0, r0, #2
   164e8:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   164ec:	str	r0, [r4, #24]
   164f0:	ldr	r1, [r4, #12]
   164f4:	mov	r7, #12
   164f8:	cmp	r1, #0
   164fc:	ldrne	r1, [r4, #16]
   16500:	cmpne	r1, #0
   16504:	beq	16518 <__mempcpy_chk@plt+0x4f38>
   16508:	cmp	r0, #0
   1650c:	ldrne	r0, [r4, #20]
   16510:	cmpne	r0, #0
   16514:	bne	16520 <__mempcpy_chk@plt+0x4f40>
   16518:	mov	r0, r7
   1651c:	pop	{r4, r5, r6, r7, fp, pc}
   16520:	ldr	r0, [r6, #24]
   16524:	lsl	r0, r0, #2
   16528:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1652c:	str	r0, [r4, #132]	; 0x84
   16530:	cmp	r0, #0
   16534:	beq	165d8 <__mempcpy_chk@plt+0x4ff8>
   16538:	ldr	r0, [r6, #24]
   1653c:	cmp	r0, #0
   16540:	beq	16560 <__mempcpy_chk@plt+0x4f80>
   16544:	ldr	r0, [r4, #132]	; 0x84
   16548:	mov	r1, #0
   1654c:	str	r1, [r0, r1, lsl #2]
   16550:	add	r1, r1, #1
   16554:	ldr	r2, [r6, #24]
   16558:	cmp	r1, r2
   1655c:	bcc	1654c <__mempcpy_chk@plt+0x4f6c>
   16560:	ldr	r0, [r4, #52]	; 0x34
   16564:	movw	r1, #42096	; 0xa470
   16568:	movt	r1, #1
   1656c:	mov	r2, r4
   16570:	bl	1a3f0 <__mempcpy_chk@plt+0x8e10>
   16574:	ldr	r1, [r6, #24]
   16578:	mov	r0, #0
   1657c:	cmp	r1, #0
   16580:	beq	165bc <__mempcpy_chk@plt+0x4fdc>
   16584:	ldr	r2, [r4, #132]	; 0x84
   16588:	ldr	r3, [r2]
   1658c:	cmp	r3, #0
   16590:	bne	165c0 <__mempcpy_chk@plt+0x4fe0>
   16594:	mov	r3, #1
   16598:	mov	r0, r3
   1659c:	ldr	r1, [r6, #24]
   165a0:	cmp	r3, r1
   165a4:	bcs	165c0 <__mempcpy_chk@plt+0x4fe0>
   165a8:	ldr	r5, [r2, r0, lsl #2]
   165ac:	add	r3, r0, #1
   165b0:	cmp	r0, r5
   165b4:	beq	16598 <__mempcpy_chk@plt+0x4fb8>
   165b8:	b	165c0 <__mempcpy_chk@plt+0x4fe0>
   165bc:	mov	r1, #0
   165c0:	cmp	r0, r1
   165c4:	bne	165d8 <__mempcpy_chk@plt+0x4ff8>
   165c8:	ldr	r0, [r4, #132]	; 0x84
   165cc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   165d0:	mov	r0, #0
   165d4:	str	r0, [r4, #132]	; 0x84
   165d8:	ldr	r0, [r4, #52]	; 0x34
   165dc:	movw	r1, #42248	; 0xa508
   165e0:	movt	r1, #1
   165e4:	mov	r2, r6
   165e8:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   165ec:	cmp	r0, #0
   165f0:	bne	166b0 <__mempcpy_chk@plt+0x50d0>
   165f4:	ldr	r0, [r4, #52]	; 0x34
   165f8:	movw	r1, #42384	; 0xa590
   165fc:	movt	r1, #1
   16600:	mov	r2, r4
   16604:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   16608:	cmp	r0, #0
   1660c:	bne	166b0 <__mempcpy_chk@plt+0x50d0>
   16610:	ldr	r0, [r4, #52]	; 0x34
   16614:	movw	r1, #42524	; 0xa61c
   16618:	movt	r1, #1
   1661c:	mov	r2, r4
   16620:	bl	1a3f0 <__mempcpy_chk@plt+0x8e10>
   16624:	ldr	r0, [r4, #52]	; 0x34
   16628:	movw	r1, #42624	; 0xa680
   1662c:	movt	r1, #1
   16630:	mov	r2, r4
   16634:	bl	1a3f0 <__mempcpy_chk@plt+0x8e10>
   16638:	cmp	r0, #0
   1663c:	bne	166b0 <__mempcpy_chk@plt+0x50d0>
   16640:	mov	r0, r4
   16644:	bl	1a794 <__mempcpy_chk@plt+0x91b4>
   16648:	cmp	r0, #0
   1664c:	popne	{r4, r5, r6, r7, fp, pc}
   16650:	ldrb	r0, [r6, #28]
   16654:	tst	r0, #16
   16658:	bne	16670 <__mempcpy_chk@plt+0x5090>
   1665c:	ldr	r0, [r6, #24]
   16660:	cmp	r0, #0
   16664:	ldrbne	r0, [r4, #88]	; 0x58
   16668:	tstne	r0, #1
   1666c:	bne	1667c <__mempcpy_chk@plt+0x509c>
   16670:	ldr	r0, [r4, #76]	; 0x4c
   16674:	cmp	r0, #0
   16678:	beq	166a4 <__mempcpy_chk@plt+0x50c4>
   1667c:	ldr	r0, [r4, #8]
   16680:	add	r0, r0, r0, lsl #1
   16684:	lsl	r0, r0, #2
   16688:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1668c:	str	r0, [r4, #28]
   16690:	cmp	r0, #0
   16694:	beq	16518 <__mempcpy_chk@plt+0x4f38>
   16698:	mov	r0, r4
   1669c:	pop	{r4, r5, r6, r7, fp, lr}
   166a0:	b	1a850 <__mempcpy_chk@plt+0x9270>
   166a4:	mov	r7, #0
   166a8:	mov	r0, r7
   166ac:	pop	{r4, r5, r6, r7, fp, pc}
   166b0:	pop	{r4, r5, r6, r7, fp, pc}
   166b4:	push	{r4, r5, r6, r7, fp, lr}
   166b8:	add	fp, sp, #16
   166bc:	ldr	r1, [r0, #8]
   166c0:	cmp	r1, #0
   166c4:	beq	167a4 <__mempcpy_chk@plt+0x51c4>
   166c8:	ldr	r3, [r0]
   166cc:	mov	r5, #0
   166d0:	mov	ip, #1
   166d4:	mov	lr, #139	; 0x8b
   166d8:	mov	r2, #0
   166dc:	mov	r4, #0
   166e0:	add	r1, r3, r4, lsl #3
   166e4:	ldrb	r6, [r1, #4]
   166e8:	sub	r6, r6, #1
   166ec:	cmp	r6, #11
   166f0:	bhi	1684c <__mempcpy_chk@plt+0x526c>
   166f4:	add	r7, pc, #0
   166f8:	ldr	pc, [r7, r6, lsl #2]
   166fc:	andeq	r6, r1, r4, lsl #15
   16700:	andeq	r6, r1, ip, lsr #14
   16704:	andeq	r6, r1, r0, asr #14
   16708:	andeq	r6, r1, ip, lsr #14
   1670c:	muleq	r1, ip, r7
   16710:	andeq	r6, r1, r8, asr #16
   16714:	andeq	r6, r1, ip, asr #16
   16718:	andeq	r6, r1, ip, lsr #14
   1671c:	andeq	r6, r1, ip, lsr #14
   16720:	andeq	r6, r1, ip, lsr #14
   16724:	andeq	r6, r1, ip, lsr #14
   16728:	andeq	r6, r1, r4, ror #14
   1672c:	ldr	r1, [r0, #8]
   16730:	add	r4, r4, #1
   16734:	cmp	r4, r1
   16738:	bcc	166e0 <__mempcpy_chk@plt+0x5100>
   1673c:	b	167ac <__mempcpy_chk@plt+0x51cc>
   16740:	ldr	r1, [r3, r4, lsl #3]
   16744:	mov	r6, #4
   16748:	ldr	r7, [r1, r6, lsl #2]
   1674c:	cmp	r7, #0
   16750:	popne	{r4, r5, r6, r7, fp, pc}
   16754:	add	r6, r6, #1
   16758:	cmp	r6, #7
   1675c:	bls	16748 <__mempcpy_chk@plt+0x5168>
   16760:	b	1672c <__mempcpy_chk@plt+0x514c>
   16764:	ldr	r1, [r3, r4, lsl #3]
   16768:	sub	r1, r1, #16
   1676c:	ror	r1, r1, #4
   16770:	cmp	r1, #7
   16774:	bhi	16848 <__mempcpy_chk@plt+0x5268>
   16778:	tst	lr, ip, lsl r1
   1677c:	bne	1672c <__mempcpy_chk@plt+0x514c>
   16780:	b	16848 <__mempcpy_chk@plt+0x5268>
   16784:	ldrsb	r1, [r1]
   16788:	cmp	r1, #0
   1678c:	mov	r1, #0
   16790:	movwlt	r1, #1
   16794:	orr	r2, r2, r1
   16798:	b	1672c <__mempcpy_chk@plt+0x514c>
   1679c:	mov	r5, #1
   167a0:	b	1672c <__mempcpy_chk@plt+0x514c>
   167a4:	mov	r2, #0
   167a8:	mov	r5, #0
   167ac:	tst	r2, #1
   167b0:	tsteq	r5, #1
   167b4:	beq	16818 <__mempcpy_chk@plt+0x5238>
   167b8:	ldr	r1, [r0, #8]
   167bc:	cmp	r1, #0
   167c0:	beq	16818 <__mempcpy_chk@plt+0x5238>
   167c4:	mov	r2, #0
   167c8:	mov	r3, #7
   167cc:	ldr	r1, [r0]
   167d0:	add	r4, r1, r2, lsl #3
   167d4:	ldr	r1, [r4, #4]
   167d8:	uxtb	r6, r1
   167dc:	cmp	r6, #5
   167e0:	beq	16800 <__mempcpy_chk@plt+0x5220>
   167e4:	cmp	r6, #1
   167e8:	bne	16808 <__mempcpy_chk@plt+0x5228>
   167ec:	ldrsb	r7, [r4]
   167f0:	cmn	r7, #1
   167f4:	bgt	16808 <__mempcpy_chk@plt+0x5228>
   167f8:	bic	r1, r1, #2097152	; 0x200000
   167fc:	b	16804 <__mempcpy_chk@plt+0x5224>
   16800:	bfi	r1, r3, #0, #8
   16804:	str	r1, [r4, #4]
   16808:	ldr	r1, [r0, #8]
   1680c:	add	r2, r2, #1
   16810:	cmp	r2, r1
   16814:	bcc	167cc <__mempcpy_chk@plt+0x51ec>
   16818:	mov	r1, #1
   1681c:	str	r1, [r0, #92]	; 0x5c
   16820:	ldr	r1, [r0, #76]	; 0x4c
   16824:	mov	r2, #0
   16828:	cmp	r1, #0
   1682c:	movwgt	r2, #1
   16830:	orr	r1, r5, r2
   16834:	and	r1, r1, #1
   16838:	ldrb	r2, [r0, #88]	; 0x58
   1683c:	and	r2, r2, #249	; 0xf9
   16840:	orr	r1, r2, r1, lsl #1
   16844:	strb	r1, [r0, #88]	; 0x58
   16848:	pop	{r4, r5, r6, r7, fp, pc}
   1684c:	bl	115c8 <abort@plt>
   16850:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16854:	add	fp, sp, #24
   16858:	sub	sp, sp, #16
   1685c:	mov	r9, r0
   16860:	ldr	r0, [r0, #24]
   16864:	ldr	r1, [r9, #52]	; 0x34
   16868:	ldr	r1, [r1, #12]
   1686c:	ldr	r1, [r1, #28]
   16870:	str	r1, [r9, #72]	; 0x48
   16874:	add	r1, r1, r1, lsl #1
   16878:	add	r1, r0, r1, lsl #2
   1687c:	mov	r0, sp
   16880:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   16884:	str	r0, [sp, #12]
   16888:	cmp	r0, #0
   1688c:	bne	16a2c <__mempcpy_chk@plt+0x544c>
   16890:	ldr	r0, [r9, #76]	; 0x4c
   16894:	cmp	r0, #1
   16898:	ldrge	r0, [sp, #4]
   1689c:	cmpge	r0, #1
   168a0:	blt	1696c <__mempcpy_chk@plt+0x538c>
   168a4:	mov	r7, #0
   168a8:	mov	r8, sp
   168ac:	ldr	r3, [sp, #8]
   168b0:	ldr	r1, [r3, r7, lsl #2]
   168b4:	ldr	r6, [r9]
   168b8:	add	r2, r6, r1, lsl #3
   168bc:	ldrb	ip, [r2, #4]
   168c0:	cmp	ip, #4
   168c4:	bne	1695c <__mempcpy_chk@plt+0x537c>
   168c8:	mov	r5, #0
   168cc:	cmp	r0, #1
   168d0:	blt	16904 <__mempcpy_chk@plt+0x5324>
   168d4:	ldr	r4, [r3, r5, lsl #2]
   168d8:	add	r2, r6, r4, lsl #3
   168dc:	ldrb	r2, [r2, #4]
   168e0:	cmp	r2, #9
   168e4:	bne	168f8 <__mempcpy_chk@plt+0x5318>
   168e8:	ldr	r2, [r6, r1, lsl #3]
   168ec:	ldr	r4, [r6, r4, lsl #3]
   168f0:	cmp	r4, r2
   168f4:	beq	16904 <__mempcpy_chk@plt+0x5324>
   168f8:	add	r5, r5, #1
   168fc:	cmp	r5, r0
   16900:	blt	168d4 <__mempcpy_chk@plt+0x52f4>
   16904:	cmp	r5, r0
   16908:	beq	1695c <__mempcpy_chk@plt+0x537c>
   1690c:	cmp	ip, #4
   16910:	bne	1695c <__mempcpy_chk@plt+0x537c>
   16914:	ldr	r0, [r9, #20]
   16918:	add	r1, r1, r1, lsl #1
   1691c:	add	r0, r0, r1, lsl #2
   16920:	ldr	r0, [r0, #8]
   16924:	ldr	r6, [r0]
   16928:	mov	r0, r8
   1692c:	mov	r1, r6
   16930:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   16934:	cmp	r0, #0
   16938:	bne	1695c <__mempcpy_chk@plt+0x537c>
   1693c:	ldr	r0, [r9, #24]
   16940:	add	r1, r6, r6, lsl #1
   16944:	add	r1, r0, r1, lsl #2
   16948:	mov	r0, r8
   1694c:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   16950:	mov	r7, #0
   16954:	cmp	r0, #0
   16958:	bne	16a2c <__mempcpy_chk@plt+0x544c>
   1695c:	add	r7, r7, #1
   16960:	ldr	r0, [sp, #4]
   16964:	cmp	r7, r0
   16968:	blt	168ac <__mempcpy_chk@plt+0x52cc>
   1696c:	add	r0, sp, #12
   16970:	mov	r2, sp
   16974:	mov	r1, r9
   16978:	mov	r3, #0
   1697c:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   16980:	str	r0, [r9, #36]	; 0x24
   16984:	cmp	r0, #0
   16988:	beq	16a08 <__mempcpy_chk@plt+0x5428>
   1698c:	ldrsb	r1, [r0, #52]	; 0x34
   16990:	cmn	r1, #1
   16994:	ble	169a8 <__mempcpy_chk@plt+0x53c8>
   16998:	str	r0, [r9, #40]	; 0x28
   1699c:	str	r0, [r9, #44]	; 0x2c
   169a0:	str	r0, [r9, #48]	; 0x30
   169a4:	b	16a20 <__mempcpy_chk@plt+0x5440>
   169a8:	add	r5, sp, #12
   169ac:	mov	r6, sp
   169b0:	mov	r0, r5
   169b4:	mov	r1, r9
   169b8:	mov	r2, r6
   169bc:	mov	r3, #1
   169c0:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   169c4:	str	r0, [r9, #40]	; 0x28
   169c8:	mov	r0, r5
   169cc:	mov	r1, r9
   169d0:	mov	r2, r6
   169d4:	mov	r3, #2
   169d8:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   169dc:	str	r0, [r9, #44]	; 0x2c
   169e0:	mov	r0, r5
   169e4:	mov	r1, r9
   169e8:	mov	r2, r6
   169ec:	mov	r3, #6
   169f0:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   169f4:	str	r0, [r9, #48]	; 0x30
   169f8:	ldr	r1, [r9, #40]	; 0x28
   169fc:	cmp	r1, #0
   16a00:	cmpne	r0, #0
   16a04:	bne	16a14 <__mempcpy_chk@plt+0x5434>
   16a08:	ldr	r0, [sp, #12]
   16a0c:	sub	sp, fp, #24
   16a10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16a14:	ldr	r0, [r9, #44]	; 0x2c
   16a18:	cmp	r0, #0
   16a1c:	beq	16a08 <__mempcpy_chk@plt+0x5428>
   16a20:	ldr	r0, [sp, #8]
   16a24:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   16a28:	mov	r0, #0
   16a2c:	sub	sp, fp, #24
   16a30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16a34:	str	r1, [r2, #48]	; 0x30
   16a38:	str	r0, [r2]
   16a3c:	str	r1, [r2, #44]	; 0x2c
   16a40:	str	r3, [r2, #64]	; 0x40
   16a44:	ldr	r0, [sp]
   16a48:	strb	r0, [r2, #72]	; 0x48
   16a4c:	cmp	r3, #0
   16a50:	movwne	r3, #1
   16a54:	orr	r0, r3, r0
   16a58:	strb	r0, [r2, #75]	; 0x4b
   16a5c:	ldr	r0, [sp, #4]
   16a60:	ldr	r3, [r0, #92]	; 0x5c
   16a64:	str	r3, [r2, #80]	; 0x50
   16a68:	ldrb	r3, [r0, #88]	; 0x58
   16a6c:	ubfx	r3, r3, #2, #1
   16a70:	strb	r3, [r2, #73]	; 0x49
   16a74:	ldrb	r0, [r0, #88]	; 0x58
   16a78:	str	r1, [r2, #56]	; 0x38
   16a7c:	str	r1, [r2, #52]	; 0x34
   16a80:	ubfx	r0, r0, #3, #1
   16a84:	strb	r0, [r2, #74]	; 0x4a
   16a88:	bx	lr
   16a8c:	push	{r4, r5, r6, r7, fp, lr}
   16a90:	add	fp, sp, #16
   16a94:	mov	r4, r1
   16a98:	mov	r5, r0
   16a9c:	ldr	r0, [r0, #80]	; 0x50
   16aa0:	cmp	r0, #2
   16aa4:	blt	16af0 <__mempcpy_chk@plt+0x5510>
   16aa8:	mov	r6, #12
   16aac:	cmn	r4, #-1073741823	; 0xc0000001
   16ab0:	bhi	16b1c <__mempcpy_chk@plt+0x553c>
   16ab4:	ldr	r0, [r5, #8]
   16ab8:	lsl	r7, r4, #2
   16abc:	mov	r1, r7
   16ac0:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   16ac4:	cmp	r0, #0
   16ac8:	beq	16b1c <__mempcpy_chk@plt+0x553c>
   16acc:	str	r0, [r5, #8]
   16ad0:	ldr	r0, [r5, #12]
   16ad4:	cmp	r0, #0
   16ad8:	beq	16af0 <__mempcpy_chk@plt+0x5510>
   16adc:	mov	r1, r7
   16ae0:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   16ae4:	cmp	r0, #0
   16ae8:	beq	16b1c <__mempcpy_chk@plt+0x553c>
   16aec:	str	r0, [r5, #12]
   16af0:	ldrb	r0, [r5, #75]	; 0x4b
   16af4:	cmp	r0, #0
   16af8:	beq	16b14 <__mempcpy_chk@plt+0x5534>
   16afc:	ldr	r0, [r5, #4]
   16b00:	mov	r1, r4
   16b04:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   16b08:	cmp	r0, #0
   16b0c:	beq	16b24 <__mempcpy_chk@plt+0x5544>
   16b10:	str	r0, [r5, #4]
   16b14:	str	r4, [r5, #36]	; 0x24
   16b18:	mov	r6, #0
   16b1c:	mov	r0, r6
   16b20:	pop	{r4, r5, r6, r7, fp, pc}
   16b24:	mov	r6, #12
   16b28:	mov	r0, r6
   16b2c:	pop	{r4, r5, r6, r7, fp, pc}
   16b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b34:	add	fp, sp, #28
   16b38:	sub	sp, sp, #92	; 0x5c
   16b3c:	mov	r6, r0
   16b40:	ldrb	r0, [r0, #74]	; 0x4a
   16b44:	ldr	sl, [r6, #28]
   16b48:	ldr	r5, [r6, #36]	; 0x24
   16b4c:	ldr	r1, [r6, #48]	; 0x30
   16b50:	cmp	r5, r1
   16b54:	movgt	r5, r1
   16b58:	cmp	r0, #0
   16b5c:	str	r6, [sp]
   16b60:	bne	16b7c <__mempcpy_chk@plt+0x559c>
   16b64:	ldr	r0, [r6, #64]	; 0x40
   16b68:	cmp	r0, #0
   16b6c:	bne	16b7c <__mempcpy_chk@plt+0x559c>
   16b70:	ldrb	r0, [r6, #76]	; 0x4c
   16b74:	cmp	r0, #0
   16b78:	beq	16b84 <__mempcpy_chk@plt+0x55a4>
   16b7c:	ldr	ip, [r6, #32]
   16b80:	b	16d9c <__mempcpy_chk@plt+0x57bc>
   16b84:	cmp	r5, sl
   16b88:	ble	16b98 <__mempcpy_chk@plt+0x55b8>
   16b8c:	add	r8, r6, #16
   16b90:	mov	r9, r5
   16b94:	b	16bf0 <__mempcpy_chk@plt+0x5610>
   16b98:	mov	ip, sl
   16b9c:	b	170c4 <__mempcpy_chk@plt+0x5ae4>
   16ba0:	add	r0, r4, #1
   16ba4:	cmp	r0, #2
   16ba8:	bcc	16bc0 <__mempcpy_chk@plt+0x55e0>
   16bac:	ldr	r1, [sp]
   16bb0:	ldr	r0, [r1, #36]	; 0x24
   16bb4:	ldr	r1, [r1, #48]	; 0x30
   16bb8:	cmp	r0, r1
   16bbc:	blt	16d58 <__mempcpy_chk@plt+0x5778>
   16bc0:	ldr	r1, [sp]
   16bc4:	ldr	r0, [r1, #4]
   16bc8:	strb	r6, [r0, r7]
   16bcc:	ldr	r0, [r1, #8]
   16bd0:	str	r6, [r0, r7, lsl #2]
   16bd4:	add	sl, r7, #1
   16bd8:	cmn	r4, #1
   16bdc:	bne	16d34 <__mempcpy_chk@plt+0x5754>
   16be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16be4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16be8:	stm	r8, {r0, r1}
   16bec:	b	16d34 <__mempcpy_chk@plt+0x5754>
   16bf0:	ldr	r0, [r6]
   16bf4:	ldr	r1, [r6, #24]
   16bf8:	add	r1, r1, sl
   16bfc:	ldrb	r6, [r0, r1]
   16c00:	tst	r6, #128	; 0x80
   16c04:	bne	16c4c <__mempcpy_chk@plt+0x566c>
   16c08:	mov	r0, r8
   16c0c:	mov	r4, sl
   16c10:	bl	1137c <mbsinit@plt>
   16c14:	cmp	r0, #0
   16c18:	beq	16c4c <__mempcpy_chk@plt+0x566c>
   16c1c:	mov	r0, r6
   16c20:	bl	115b0 <towupper@plt>
   16c24:	mov	sl, r4
   16c28:	cmp	r0, #127	; 0x7f
   16c2c:	bhi	16c4c <__mempcpy_chk@plt+0x566c>
   16c30:	ldr	r2, [sp]
   16c34:	ldr	r1, [r2, #4]
   16c38:	strb	r0, [r1, sl]
   16c3c:	ldr	r1, [r2, #8]
   16c40:	str	r0, [r1, sl, lsl #2]
   16c44:	add	sl, sl, #1
   16c48:	b	16d34 <__mempcpy_chk@plt+0x5754>
   16c4c:	ldm	r8, {r0, r1}
   16c50:	str	r1, [fp, #-36]	; 0xffffffdc
   16c54:	str	r0, [fp, #-40]	; 0xffffffd8
   16c58:	sub	r2, r5, sl
   16c5c:	ldr	r1, [sp]
   16c60:	ldr	r0, [r1]
   16c64:	ldr	r1, [r1, #24]
   16c68:	add	r0, r0, r1
   16c6c:	mov	r7, sl
   16c70:	add	r1, r0, sl
   16c74:	add	r0, sp, #12
   16c78:	mov	r3, r8
   16c7c:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   16c80:	mov	r4, r0
   16c84:	sub	r0, r0, #1
   16c88:	cmn	r0, #4
   16c8c:	bhi	16ba0 <__mempcpy_chk@plt+0x55c0>
   16c90:	ldr	r0, [sp, #12]
   16c94:	bl	115b0 <towupper@plt>
   16c98:	mov	r6, r0
   16c9c:	ldr	r0, [sp, #12]
   16ca0:	cmp	r6, r0
   16ca4:	add	sl, sp, #16
   16ca8:	bne	16ccc <__mempcpy_chk@plt+0x56ec>
   16cac:	ldr	r5, [sp]
   16cb0:	ldr	r1, [r5]
   16cb4:	ldr	r0, [r5, #4]
   16cb8:	ldr	r2, [r5, #24]
   16cbc:	add	r0, r0, r7
   16cc0:	add	r1, r1, r2
   16cc4:	add	r1, r1, r7
   16cc8:	b	16cf4 <__mempcpy_chk@plt+0x5714>
   16ccc:	mov	r0, sl
   16cd0:	mov	r1, r6
   16cd4:	sub	r2, fp, #40	; 0x28
   16cd8:	bl	112d4 <wcrtomb@plt>
   16cdc:	cmp	r4, r0
   16ce0:	bne	16d48 <__mempcpy_chk@plt+0x5768>
   16ce4:	ldr	r5, [sp]
   16ce8:	ldr	r0, [r5, #4]
   16cec:	add	r0, r0, r7
   16cf0:	mov	r1, sl
   16cf4:	mov	r2, r4
   16cf8:	bl	1134c <memcpy@plt>
   16cfc:	ldr	r0, [r5, #8]
   16d00:	str	r6, [r0, r7, lsl #2]
   16d04:	add	r6, r4, r7
   16d08:	add	sl, r7, #1
   16d0c:	cmp	sl, r6
   16d10:	mov	r5, r9
   16d14:	bge	16d34 <__mempcpy_chk@plt+0x5754>
   16d18:	mvn	r1, #3
   16d1c:	add	r2, r1, r4, lsl #2
   16d20:	add	r0, r0, r7, lsl #2
   16d24:	add	r0, r0, #4
   16d28:	mov	r1, #255	; 0xff
   16d2c:	bl	114fc <memset@plt>
   16d30:	mov	sl, r6
   16d34:	cmp	r5, sl
   16d38:	mov	ip, sl
   16d3c:	ldr	r6, [sp]
   16d40:	bgt	16bf0 <__mempcpy_chk@plt+0x5610>
   16d44:	b	170c4 <__mempcpy_chk@plt+0x5ae4>
   16d48:	mov	ip, r7
   16d4c:	mov	sl, r7
   16d50:	ldr	r6, [sp]
   16d54:	b	16da4 <__mempcpy_chk@plt+0x57c4>
   16d58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16d60:	stm	r8, {r0, r1}
   16d64:	mov	ip, r7
   16d68:	mov	sl, r7
   16d6c:	ldr	r6, [sp]
   16d70:	b	170c4 <__mempcpy_chk@plt+0x5ae4>
   16d74:	mvn	r1, #3
   16d78:	add	r2, r1, r5, lsl #2
   16d7c:	add	r0, r0, sl, lsl #2
   16d80:	add	r0, r0, #4
   16d84:	mov	r1, #255	; 0xff
   16d88:	mov	r5, ip
   16d8c:	bl	114fc <memset@plt>
   16d90:	mov	ip, r5
   16d94:	mov	sl, r4
   16d98:	ldr	r5, [sp, #4]
   16d9c:	cmp	sl, r5
   16da0:	bge	170c4 <__mempcpy_chk@plt+0x5ae4>
   16da4:	mov	r3, r6
   16da8:	ldr	r0, [r6, #16]!
   16dac:	ldr	r1, [r6, #4]
   16db0:	str	r0, [fp, #-40]	; 0xffffffd8
   16db4:	str	r1, [fp, #-36]	; 0xffffffdc
   16db8:	str	r5, [sp, #4]
   16dbc:	sub	r2, r5, sl
   16dc0:	ldr	r0, [r6, #48]	; 0x30
   16dc4:	cmp	r0, #0
   16dc8:	bne	16e90 <__mempcpy_chk@plt+0x58b0>
   16dcc:	ldr	r0, [r3]
   16dd0:	ldr	r1, [r3, #24]
   16dd4:	add	r0, r0, r1
   16dd8:	add	r4, r0, ip
   16ddc:	mov	r9, ip
   16de0:	add	r0, sp, #8
   16de4:	mov	r1, r4
   16de8:	mov	r3, r6
   16dec:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   16df0:	mov	r5, r0
   16df4:	sub	r8, r0, #1
   16df8:	cmn	r8, #4
   16dfc:	bhi	16eec <__mempcpy_chk@plt+0x590c>
   16e00:	ldr	r0, [sp, #8]
   16e04:	bl	115b0 <towupper@plt>
   16e08:	mov	r7, r0
   16e0c:	ldr	r0, [sp, #8]
   16e10:	cmp	r7, r0
   16e14:	bne	16e2c <__mempcpy_chk@plt+0x584c>
   16e18:	ldr	r6, [sp]
   16e1c:	ldr	r0, [r6, #4]
   16e20:	add	r0, r0, sl
   16e24:	mov	r1, r4
   16e28:	b	16e54 <__mempcpy_chk@plt+0x5874>
   16e2c:	add	r0, sp, #16
   16e30:	sub	r2, fp, #40	; 0x28
   16e34:	mov	r1, r7
   16e38:	bl	112d4 <wcrtomb@plt>
   16e3c:	cmp	r0, r5
   16e40:	bne	16f68 <__mempcpy_chk@plt+0x5988>
   16e44:	ldr	r6, [sp]
   16e48:	ldr	r0, [r6, #4]
   16e4c:	add	r0, r0, sl
   16e50:	add	r1, sp, #16
   16e54:	mov	r2, r5
   16e58:	bl	1134c <memcpy@plt>
   16e5c:	ldrb	r0, [r6, #76]	; 0x4c
   16e60:	cmp	r0, #0
   16e64:	mov	ip, r9
   16e68:	bne	17090 <__mempcpy_chk@plt+0x5ab0>
   16e6c:	ldr	r0, [r6, #8]
   16e70:	str	r7, [r0, sl, lsl #2]
   16e74:	add	r4, r5, sl
   16e78:	add	ip, r5, ip
   16e7c:	add	r1, sl, #1
   16e80:	cmp	r1, r4
   16e84:	blt	16d74 <__mempcpy_chk@plt+0x5794>
   16e88:	mov	sl, r1
   16e8c:	b	16d98 <__mempcpy_chk@plt+0x57b8>
   16e90:	add	r4, sp, #16
   16e94:	cmp	r2, #1
   16e98:	ldrge	r1, [sp]
   16e9c:	ldrge	r1, [r1, #80]	; 0x50
   16ea0:	cmpge	r1, #1
   16ea4:	blt	16ddc <__mempcpy_chk@plt+0x57fc>
   16ea8:	mov	r1, #0
   16eac:	add	r4, sp, #16
   16eb0:	ldr	r5, [sp]
   16eb4:	ldr	r3, [r5]
   16eb8:	ldr	r7, [r5, #24]
   16ebc:	add	r3, r3, r7
   16ec0:	add	r3, r3, ip
   16ec4:	ldrb	r3, [r3, r1]
   16ec8:	ldrb	r3, [r0, r3]
   16ecc:	strb	r3, [r4, r1]
   16ed0:	add	r1, r1, #1
   16ed4:	cmp	r1, r2
   16ed8:	bge	16ddc <__mempcpy_chk@plt+0x57fc>
   16edc:	ldr	r3, [r5, #80]	; 0x50
   16ee0:	cmp	r1, r3
   16ee4:	blt	16eb4 <__mempcpy_chk@plt+0x58d4>
   16ee8:	b	16ddc <__mempcpy_chk@plt+0x57fc>
   16eec:	add	r0, r5, #1
   16ef0:	cmp	r0, #2
   16ef4:	mov	ip, r9
   16ef8:	ldr	r3, [sp]
   16efc:	bcc	16f10 <__mempcpy_chk@plt+0x5930>
   16f00:	ldr	r0, [r3, #36]	; 0x24
   16f04:	ldr	r1, [r3, #48]	; 0x30
   16f08:	cmp	r0, r1
   16f0c:	blt	170b4 <__mempcpy_chk@plt+0x5ad4>
   16f10:	ldr	r0, [r3]
   16f14:	ldr	r2, [r3, #24]
   16f18:	ldr	r1, [r3, #64]	; 0x40
   16f1c:	add	r2, r2, ip
   16f20:	ldrb	r0, [r0, r2]
   16f24:	cmp	r1, #0
   16f28:	ldrbne	r0, [r1, r0]
   16f2c:	ldr	r2, [sp]
   16f30:	ldr	r1, [r2, #4]
   16f34:	strb	r0, [r1, sl]
   16f38:	ldrb	r1, [r2, #76]	; 0x4c
   16f3c:	cmp	r1, #0
   16f40:	ldrne	r1, [r2, #12]
   16f44:	strne	ip, [r1, sl, lsl #2]
   16f48:	ldr	r1, [r2, #8]
   16f4c:	str	r0, [r1, sl, lsl #2]
   16f50:	add	sl, sl, #1
   16f54:	add	ip, ip, #1
   16f58:	cmn	r5, #1
   16f5c:	beq	170e4 <__mempcpy_chk@plt+0x5b04>
   16f60:	ldr	r6, [sp]
   16f64:	b	16d98 <__mempcpy_chk@plt+0x57b8>
   16f68:	mov	r2, r0
   16f6c:	cmn	r0, #1
   16f70:	beq	16e18 <__mempcpy_chk@plt+0x5838>
   16f74:	mov	ip, r9
   16f78:	add	r1, r2, sl
   16f7c:	ldr	r3, [sp]
   16f80:	ldr	r0, [r3, #36]	; 0x24
   16f84:	cmp	r1, r0
   16f88:	bhi	170b4 <__mempcpy_chk@plt+0x5ad4>
   16f8c:	str	r1, [sp, #4]
   16f90:	ldr	r1, [r3, #12]
   16f94:	cmp	r1, #0
   16f98:	mov	r6, r3
   16f9c:	bne	16fbc <__mempcpy_chk@plt+0x59dc>
   16fa0:	lsl	r0, r0, #2
   16fa4:	mov	r4, r2
   16fa8:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   16fac:	mov	r2, r4
   16fb0:	str	r0, [r6, #12]
   16fb4:	cmp	r0, #0
   16fb8:	beq	170d8 <__mempcpy_chk@plt+0x5af8>
   16fbc:	ldrb	r0, [r6, #76]	; 0x4c
   16fc0:	cmp	r0, #0
   16fc4:	bne	16ff0 <__mempcpy_chk@plt+0x5a10>
   16fc8:	cmp	sl, #0
   16fcc:	beq	16fe8 <__mempcpy_chk@plt+0x5a08>
   16fd0:	ldr	r0, [r6, #12]
   16fd4:	mov	r1, #0
   16fd8:	str	r1, [r0, r1, lsl #2]
   16fdc:	add	r1, r1, #1
   16fe0:	cmp	sl, r1
   16fe4:	bne	16fd8 <__mempcpy_chk@plt+0x59f8>
   16fe8:	mov	r0, #1
   16fec:	strb	r0, [r6, #76]	; 0x4c
   16ff0:	ldr	r0, [r6, #4]
   16ff4:	add	r0, r0, sl
   16ff8:	add	r1, sp, #16
   16ffc:	mov	r4, r2
   17000:	bl	1134c <memcpy@plt>
   17004:	ldr	r1, [r6, #8]
   17008:	str	r7, [r1, sl, lsl #2]
   1700c:	ldr	r0, [r6, #12]
   17010:	mov	ip, r9
   17014:	str	r9, [r0, sl, lsl #2]
   17018:	cmp	r4, #2
   1701c:	bcc	17054 <__mempcpy_chk@plt+0x5a74>
   17020:	add	r0, r0, sl, lsl #2
   17024:	add	r1, r1, sl, lsl #2
   17028:	mov	r2, #1
   1702c:	mvn	r3, #0
   17030:	cmp	r2, r5
   17034:	mov	r7, r8
   17038:	movcc	r7, r2
   1703c:	add	r7, r7, ip
   17040:	str	r7, [r0, r2, lsl #2]
   17044:	str	r3, [r1, r2, lsl #2]
   17048:	add	r2, r2, #1
   1704c:	cmp	r4, r2
   17050:	bne	17030 <__mempcpy_chk@plt+0x5a50>
   17054:	sub	r1, r4, r5
   17058:	ldr	r0, [r6, #48]	; 0x30
   1705c:	ldr	r2, [r6, #52]	; 0x34
   17060:	add	r0, r0, r1
   17064:	str	r0, [r6, #48]	; 0x30
   17068:	cmp	r2, ip
   1706c:	ldrgt	r2, [r6, #56]	; 0x38
   17070:	addgt	r1, r2, r1
   17074:	strgt	r1, [r6, #56]	; 0x38
   17078:	add	ip, r5, ip
   1707c:	ldr	r5, [r6, #36]	; 0x24
   17080:	cmp	r5, r0
   17084:	movgt	r5, r0
   17088:	ldr	sl, [sp, #4]
   1708c:	b	16d9c <__mempcpy_chk@plt+0x57bc>
   17090:	ldr	r0, [r6, #12]
   17094:	add	r0, r0, sl, lsl #2
   17098:	mov	r1, ip
   1709c:	mov	r2, r5
   170a0:	str	r1, [r0], #4
   170a4:	add	r1, r1, #1
   170a8:	subs	r2, r2, #1
   170ac:	bne	170a0 <__mempcpy_chk@plt+0x5ac0>
   170b0:	b	16e6c <__mempcpy_chk@plt+0x588c>
   170b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   170b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   170bc:	stm	r6, {r0, r1}
   170c0:	mov	r6, r3
   170c4:	str	sl, [r6, #28]
   170c8:	str	ip, [r6, #32]
   170cc:	mov	r0, #0
   170d0:	sub	sp, fp, #28
   170d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170d8:	mov	r0, #12
   170dc:	sub	sp, fp, #28
   170e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   170e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   170ec:	stm	r6, {r0, r1}
   170f0:	ldr	r6, [sp]
   170f4:	b	16d98 <__mempcpy_chk@plt+0x57b8>
   170f8:	push	{r4, r5, r6, sl, fp, lr}
   170fc:	add	fp, sp, #16
   17100:	mov	r4, r0
   17104:	ldr	r5, [r0, #28]
   17108:	ldr	r6, [r0, #36]	; 0x24
   1710c:	ldr	r0, [r0, #48]	; 0x30
   17110:	cmp	r6, r0
   17114:	movgt	r6, r0
   17118:	cmp	r5, r6
   1711c:	bge	17158 <__mempcpy_chk@plt+0x5b78>
   17120:	ldr	r0, [r4]
   17124:	ldr	r2, [r4, #24]
   17128:	ldr	r1, [r4, #64]	; 0x40
   1712c:	add	r0, r0, r2
   17130:	ldrb	r0, [r0, r5]
   17134:	cmp	r1, #0
   17138:	ldrbne	r0, [r1, r0]
   1713c:	bl	11568 <toupper@plt>
   17140:	ldr	r1, [r4, #4]
   17144:	strb	r0, [r1, r5]
   17148:	add	r5, r5, #1
   1714c:	cmp	r5, r6
   17150:	blt	17120 <__mempcpy_chk@plt+0x5b40>
   17154:	mov	r5, r6
   17158:	str	r5, [r4, #28]
   1715c:	str	r5, [r4, #32]
   17160:	pop	{r4, r5, r6, sl, fp, pc}
   17164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17168:	add	fp, sp, #28
   1716c:	sub	sp, sp, #68	; 0x44
   17170:	mov	r4, r0
   17174:	ldr	r6, [r0, #28]
   17178:	ldr	r7, [r0, #36]	; 0x24
   1717c:	ldr	r0, [r0, #48]	; 0x30
   17180:	cmp	r7, r0
   17184:	movgt	r7, r0
   17188:	cmp	r7, r6
   1718c:	ble	172e0 <__mempcpy_chk@plt+0x5d00>
   17190:	add	r8, r4, #16
   17194:	mov	r5, sp
   17198:	sub	r2, r7, r6
   1719c:	ldm	r8, {r9, sl}
   171a0:	ldr	r0, [r4, #64]	; 0x40
   171a4:	cmp	r0, #0
   171a8:	bne	17268 <__mempcpy_chk@plt+0x5c88>
   171ac:	ldr	r0, [r4]
   171b0:	ldr	r1, [r4, #24]
   171b4:	add	r0, r0, r1
   171b8:	add	r1, r0, r6
   171bc:	mov	r0, r5
   171c0:	mov	r3, r8
   171c4:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   171c8:	add	r1, r0, #1
   171cc:	cmp	r1, #2
   171d0:	bcc	171ec <__mempcpy_chk@plt+0x5c0c>
   171d4:	cmn	r0, #2
   171d8:	bne	17218 <__mempcpy_chk@plt+0x5c38>
   171dc:	ldr	r0, [r4, #36]	; 0x24
   171e0:	ldr	r1, [r4, #48]	; 0x30
   171e4:	cmp	r0, r1
   171e8:	blt	172dc <__mempcpy_chk@plt+0x5cfc>
   171ec:	ldr	r0, [r4]
   171f0:	ldr	r1, [r4, #24]
   171f4:	add	r1, r1, r6
   171f8:	ldrb	r0, [r0, r1]
   171fc:	str	r0, [sp]
   17200:	ldr	r1, [r4, #64]	; 0x40
   17204:	cmp	r1, #0
   17208:	ldrbne	r0, [r1, r0]
   1720c:	strne	r0, [sp]
   17210:	stm	r8, {r9, sl}
   17214:	mov	r0, #1
   17218:	mov	r9, r5
   1721c:	ldr	r3, [r4, #8]
   17220:	ldr	r1, [sp]
   17224:	str	r1, [r3, r6, lsl #2]
   17228:	add	r5, r0, r6
   1722c:	add	r1, r6, #1
   17230:	cmp	r1, r5
   17234:	bge	17254 <__mempcpy_chk@plt+0x5c74>
   17238:	mvn	r1, #3
   1723c:	add	r2, r1, r0, lsl #2
   17240:	add	r0, r3, r6, lsl #2
   17244:	add	r0, r0, #4
   17248:	mov	r1, #255	; 0xff
   1724c:	bl	114fc <memset@plt>
   17250:	mov	r1, r5
   17254:	cmp	r7, r1
   17258:	mov	r6, r1
   1725c:	mov	r5, r9
   17260:	bgt	17198 <__mempcpy_chk@plt+0x5bb8>
   17264:	b	172e4 <__mempcpy_chk@plt+0x5d04>
   17268:	cmp	r2, #1
   1726c:	add	r1, sp, #4
   17270:	blt	171bc <__mempcpy_chk@plt+0x5bdc>
   17274:	ldr	r0, [r4, #80]	; 0x50
   17278:	cmp	r0, #1
   1727c:	add	r1, sp, #4
   17280:	blt	171bc <__mempcpy_chk@plt+0x5bdc>
   17284:	mov	lr, r5
   17288:	mov	r0, #0
   1728c:	ldm	r4, {r1, ip}
   17290:	ldr	r5, [r4, #24]
   17294:	ldr	r3, [r4, #64]	; 0x40
   17298:	add	r1, r1, r5
   1729c:	add	r1, r1, r6
   172a0:	ldrb	r1, [r1, r0]
   172a4:	ldrb	r1, [r3, r1]
   172a8:	add	r3, ip, r6
   172ac:	strb	r1, [r3, r0]
   172b0:	add	r3, sp, #4
   172b4:	strb	r1, [r3, r0]
   172b8:	add	r0, r0, #1
   172bc:	cmp	r0, r2
   172c0:	bge	172d0 <__mempcpy_chk@plt+0x5cf0>
   172c4:	ldr	r1, [r4, #80]	; 0x50
   172c8:	cmp	r0, r1
   172cc:	blt	1728c <__mempcpy_chk@plt+0x5cac>
   172d0:	add	r1, sp, #4
   172d4:	mov	r5, lr
   172d8:	b	171bc <__mempcpy_chk@plt+0x5bdc>
   172dc:	stm	r8, {r9, sl}
   172e0:	mov	r1, r6
   172e4:	str	r1, [r4, #28]
   172e8:	str	r1, [r4, #32]
   172ec:	sub	sp, fp, #28
   172f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172f4:	ldr	r1, [r0, #28]
   172f8:	ldr	ip, [r0, #36]	; 0x24
   172fc:	ldr	r3, [r0, #48]	; 0x30
   17300:	cmp	ip, r3
   17304:	movgt	ip, r3
   17308:	cmp	r1, ip
   1730c:	bge	17348 <__mempcpy_chk@plt+0x5d68>
   17310:	push	{r4, sl, fp, lr}
   17314:	add	fp, sp, #8
   17318:	ldm	r0, {r3, lr}
   1731c:	ldr	r2, [r0, #24]
   17320:	ldr	r4, [r0, #64]	; 0x40
   17324:	add	r2, r3, r2
   17328:	ldrb	r2, [r2, r1]
   1732c:	ldrb	r2, [r4, r2]
   17330:	strb	r2, [lr, r1]
   17334:	add	r1, r1, #1
   17338:	cmp	r1, ip
   1733c:	blt	17318 <__mempcpy_chk@plt+0x5d38>
   17340:	mov	r1, ip
   17344:	pop	{r4, sl, fp, lr}
   17348:	str	r1, [r0, #28]
   1734c:	str	r1, [r0, #32]
   17350:	bx	lr
   17354:	push	{r4, sl, fp, lr}
   17358:	add	fp, sp, #8
   1735c:	mov	r4, r1
   17360:	bl	17518 <__mempcpy_chk@plt+0x5f38>
   17364:	ldr	r1, [r4, #40]	; 0x28
   17368:	add	r0, r1, r0
   1736c:	str	r0, [r4, #40]	; 0x28
   17370:	pop	{r4, sl, fp, pc}
   17374:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17378:	add	fp, sp, #28
   1737c:	sub	sp, sp, #28
   17380:	mov	r5, r2
   17384:	mov	sl, r0
   17388:	ldr	r4, [r1]
   1738c:	ldr	r0, [r4, #84]	; 0x54
   17390:	str	r0, [sp, #12]
   17394:	ldr	r7, [fp, #12]
   17398:	str	r7, [sp, #4]
   1739c:	ldr	r8, [fp, #8]
   173a0:	str	r8, [sp]
   173a4:	mov	r0, sl
   173a8:	str	r1, [sp, #16]
   173ac:	str	r3, [sp, #20]
   173b0:	bl	17da8 <__mempcpy_chk@plt+0x67c8>
   173b4:	mov	r6, r0
   173b8:	cmp	r0, #0
   173bc:	bne	173cc <__mempcpy_chk@plt+0x5dec>
   173c0:	ldr	r0, [r7]
   173c4:	cmp	r0, #0
   173c8:	bne	174b4 <__mempcpy_chk@plt+0x5ed4>
   173cc:	ldr	r0, [sp, #20]
   173d0:	orr	r7, r0, #8388608	; 0x800000
   173d4:	ldrb	r0, [r5, #4]
   173d8:	cmp	r0, #10
   173dc:	bne	17498 <__mempcpy_chk@plt+0x5eb8>
   173e0:	mov	r0, r5
   173e4:	mov	r1, sl
   173e8:	mov	r2, r7
   173ec:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   173f0:	ldrb	r0, [r5, #4]
   173f4:	orr	r1, r0, #8
   173f8:	mov	r2, #0
   173fc:	cmp	r1, #10
   17400:	bne	17424 <__mempcpy_chk@plt+0x5e44>
   17404:	mov	r0, r4
   17408:	mov	r1, r6
   1740c:	mov	r3, #10
   17410:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   17414:	mov	r6, r0
   17418:	cmp	r0, #0
   1741c:	bne	173d4 <__mempcpy_chk@plt+0x5df4>
   17420:	b	174a8 <__mempcpy_chk@plt+0x5ec8>
   17424:	cmp	r8, #0
   17428:	beq	17434 <__mempcpy_chk@plt+0x5e54>
   1742c:	cmp	r0, #9
   17430:	beq	17404 <__mempcpy_chk@plt+0x5e24>
   17434:	ldr	r0, [r4, #84]	; 0x54
   17438:	str	r0, [sp, #24]
   1743c:	ldr	r0, [sp, #12]
   17440:	str	r0, [r4, #84]	; 0x54
   17444:	mov	r9, r8
   17448:	str	r8, [sp]
   1744c:	ldr	r8, [fp, #12]
   17450:	str	r8, [sp, #4]
   17454:	mov	r0, sl
   17458:	ldr	r1, [sp, #16]
   1745c:	mov	r2, r5
   17460:	ldr	r3, [sp, #20]
   17464:	bl	17da8 <__mempcpy_chk@plt+0x67c8>
   17468:	mov	r2, r0
   1746c:	cmp	r0, #0
   17470:	bne	17480 <__mempcpy_chk@plt+0x5ea0>
   17474:	ldr	r0, [r8]
   17478:	cmp	r0, #0
   1747c:	bne	174bc <__mempcpy_chk@plt+0x5edc>
   17480:	ldr	r0, [r4, #84]	; 0x54
   17484:	ldr	r1, [sp, #24]
   17488:	orr	r0, r0, r1
   1748c:	str	r0, [r4, #84]	; 0x54
   17490:	mov	r8, r9
   17494:	b	17404 <__mempcpy_chk@plt+0x5e24>
   17498:	mov	r4, r6
   1749c:	mov	r0, r4
   174a0:	sub	sp, fp, #28
   174a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174a8:	mov	r0, #12
   174ac:	ldr	r1, [fp, #12]
   174b0:	str	r0, [r1]
   174b4:	mov	r4, #0
   174b8:	b	1749c <__mempcpy_chk@plt+0x5ebc>
   174bc:	cmp	r6, #0
   174c0:	beq	174b4 <__mempcpy_chk@plt+0x5ed4>
   174c4:	movw	r1, #32656	; 0x7f90
   174c8:	movt	r1, #1
   174cc:	mov	r4, #0
   174d0:	mov	r0, r6
   174d4:	mov	r2, #0
   174d8:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   174dc:	b	1749c <__mempcpy_chk@plt+0x5ebc>
   174e0:	push	{fp, lr}
   174e4:	mov	fp, sp
   174e8:	sub	sp, sp, #8
   174ec:	mov	ip, #0
   174f0:	str	ip, [sp]
   174f4:	uxtb	ip, r3
   174f8:	ldr	r3, [sp, #4]
   174fc:	bfc	r3, #0, #23
   17500:	orr	r3, r3, ip
   17504:	str	r3, [sp, #4]
   17508:	mov	r3, sp
   1750c:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   17510:	mov	sp, fp
   17514:	pop	{fp, pc}
   17518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1751c:	add	fp, sp, #28
   17520:	sub	sp, sp, #12
   17524:	mov	r7, r1
   17528:	mov	sl, r0
   1752c:	ldr	r0, [r1, #40]	; 0x28
   17530:	ldr	r1, [r1, #56]	; 0x38
   17534:	cmp	r1, r0
   17538:	ble	17614 <__mempcpy_chk@plt+0x6034>
   1753c:	mov	r9, r2
   17540:	ldr	r1, [r7, #4]
   17544:	ldrb	r6, [r1, r0]
   17548:	mov	r5, sl
   1754c:	strb	r6, [r5], #4
   17550:	ldr	r4, [r5]
   17554:	bic	r0, r4, #6291456	; 0x600000
   17558:	str	r0, [r5]
   1755c:	ldr	r0, [r7, #80]	; 0x50
   17560:	movw	r8, #65280	; 0xff00
   17564:	movt	r8, #65439	; 0xff9f
   17568:	cmp	r0, #2
   1756c:	blt	17590 <__mempcpy_chk@plt+0x5fb0>
   17570:	ldr	r1, [r7, #28]
   17574:	ldr	r0, [r7, #40]	; 0x28
   17578:	cmp	r0, r1
   1757c:	beq	17590 <__mempcpy_chk@plt+0x5fb0>
   17580:	ldr	r1, [r7, #8]
   17584:	ldr	r0, [r1, r0, lsl #2]
   17588:	cmn	r0, #1
   1758c:	beq	17a48 <__mempcpy_chk@plt+0x6468>
   17590:	cmp	r6, #92	; 0x5c
   17594:	bne	17624 <__mempcpy_chk@plt+0x6044>
   17598:	ldr	r0, [r7, #40]	; 0x28
   1759c:	ldr	r1, [r7, #48]	; 0x30
   175a0:	add	r0, r0, #1
   175a4:	cmp	r0, r1
   175a8:	bge	17678 <__mempcpy_chk@plt+0x6098>
   175ac:	mov	r0, r7
   175b0:	bl	17ccc <__mempcpy_chk@plt+0x66ec>
   175b4:	mov	r6, r0
   175b8:	strb	r0, [sl]
   175bc:	and	r0, r4, r8
   175c0:	orr	r4, r0, #1
   175c4:	str	r4, [sl, #4]
   175c8:	ldr	r0, [r7, #80]	; 0x50
   175cc:	cmp	r0, #2
   175d0:	blt	1789c <__mempcpy_chk@plt+0x62bc>
   175d4:	ldr	r0, [r7, #40]	; 0x28
   175d8:	add	r1, r0, #1
   175dc:	mov	r0, r7
   175e0:	bl	17d8c <__mempcpy_chk@plt+0x67ac>
   175e4:	mov	r7, r0
   175e8:	bl	114e4 <iswalnum@plt>
   175ec:	cmp	r0, #0
   175f0:	movwne	r0, #1
   175f4:	sub	r1, r7, #95	; 0x5f
   175f8:	clz	r1, r1
   175fc:	lsr	r1, r1, #5
   17600:	orr	r0, r1, r0
   17604:	ldr	r1, [r5]
   17608:	bic	r1, r1, #4194304	; 0x400000
   1760c:	orr	r0, r1, r0, lsl #22
   17610:	b	178bc <__mempcpy_chk@plt+0x62dc>
   17614:	mov	r0, #2
   17618:	strb	r0, [sl, #4]
   1761c:	mov	r8, #0
   17620:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17624:	and	r0, r4, r8
   17628:	orr	r4, r0, #1
   1762c:	str	r4, [r5]
   17630:	ldr	r0, [r7, #80]	; 0x50
   17634:	cmp	r0, #2
   17638:	blt	17684 <__mempcpy_chk@plt+0x60a4>
   1763c:	ldr	r1, [r7, #40]	; 0x28
   17640:	mov	r0, r7
   17644:	bl	17d8c <__mempcpy_chk@plt+0x67ac>
   17648:	mov	r4, r0
   1764c:	bl	114e4 <iswalnum@plt>
   17650:	cmp	r0, #0
   17654:	movwne	r0, #1
   17658:	sub	r1, r4, #95	; 0x5f
   1765c:	clz	r1, r1
   17660:	lsr	r1, r1, #5
   17664:	orr	r0, r1, r0
   17668:	ldr	r1, [r5]
   1766c:	bic	r1, r1, #4194304	; 0x400000
   17670:	orr	r0, r1, r0, lsl #22
   17674:	b	176a4 <__mempcpy_chk@plt+0x60c4>
   17678:	and	r0, r4, r8
   1767c:	orr	r0, r0, #36	; 0x24
   17680:	b	17a54 <__mempcpy_chk@plt+0x6474>
   17684:	bl	114b4 <__ctype_b_loc@plt>
   17688:	ldr	r0, [r0]
   1768c:	add	r0, r0, r6, lsl #1
   17690:	ldrh	r0, [r0]
   17694:	ubfx	r0, r0, #3, #1
   17698:	cmp	r6, #95	; 0x5f
   1769c:	movweq	r0, #1
   176a0:	orr	r0, r4, r0, lsl #22
   176a4:	str	r0, [r5]
   176a8:	sub	r1, r6, #10
   176ac:	mov	r8, #1
   176b0:	cmp	r1, #115	; 0x73
   176b4:	bhi	17cc0 <__mempcpy_chk@plt+0x66e0>
   176b8:	add	r2, pc, #0
   176bc:	ldr	pc, [r2, r1, lsl #2]
   176c0:	muleq	r1, r0, r8
   176c4:	andeq	r7, r1, r0, asr #25
   176c8:	andeq	r7, r1, r0, asr #25
   176cc:	andeq	r7, r1, r0, asr #25
   176d0:	andeq	r7, r1, r0, asr #25
   176d4:	andeq	r7, r1, r0, asr #25
   176d8:	andeq	r7, r1, r0, asr #25
   176dc:	andeq	r7, r1, r0, asr #25
   176e0:	andeq	r7, r1, r0, asr #25
   176e4:	andeq	r7, r1, r0, asr #25
   176e8:	andeq	r7, r1, r0, asr #25
   176ec:	andeq	r7, r1, r0, asr #25
   176f0:	andeq	r7, r1, r0, asr #25
   176f4:	andeq	r7, r1, r0, asr #25
   176f8:	andeq	r7, r1, r0, asr #25
   176fc:	andeq	r7, r1, r0, asr #25
   17700:	andeq	r7, r1, r0, asr #25
   17704:	andeq	r7, r1, r0, asr #25
   17708:	andeq	r7, r1, r0, asr #25
   1770c:	andeq	r7, r1, r0, asr #25
   17710:	andeq	r7, r1, r0, asr #25
   17714:	andeq	r7, r1, r0, asr #25
   17718:	andeq	r7, r1, r0, asr #25
   1771c:	andeq	r7, r1, r0, asr #25
   17720:	andeq	r7, r1, r0, asr #25
   17724:	andeq	r7, r1, r0, asr #25
   17728:	andeq	r7, r1, r0, ror #20
   1772c:	andeq	r7, r1, r0, asr #25
   17730:	andeq	r7, r1, r0, asr #25
   17734:	andeq	r7, r1, r0, asr #25
   17738:	andeq	r7, r1, r0, asr #21
   1773c:	andeq	r7, r1, ip, asr #21
   17740:	ldrdeq	r7, [r1], -r8
   17744:	andeq	r7, r1, r0, ror #21
   17748:	andeq	r7, r1, r0, asr #25
   1774c:	andeq	r7, r1, r0, asr #25
   17750:	strdeq	r7, [r1], -r0
   17754:	andeq	r7, r1, r0, asr #25
   17758:	andeq	r7, r1, r0, asr #25
   1775c:	andeq	r7, r1, r0, asr #25
   17760:	andeq	r7, r1, r0, asr #25
   17764:	andeq	r7, r1, r0, asr #25
   17768:	andeq	r7, r1, r0, asr #25
   1776c:	andeq	r7, r1, r0, asr #25
   17770:	andeq	r7, r1, r0, asr #25
   17774:	andeq	r7, r1, r0, asr #25
   17778:	andeq	r7, r1, r0, asr #25
   1777c:	andeq	r7, r1, r0, asr #25
   17780:	andeq	r7, r1, r0, asr #25
   17784:	andeq	r7, r1, r0, asr #25
   17788:	andeq	r7, r1, r0, asr #25
   1778c:	andeq	r7, r1, r0, asr #25
   17790:	andeq	r7, r1, r0, asr #25
   17794:	strdeq	r7, [r1], -r8
   17798:	andeq	r7, r1, r0, asr #25
   1779c:	andeq	r7, r1, r0, asr #25
   177a0:	andeq	r7, r1, r0, asr #25
   177a4:	andeq	r7, r1, r0, asr #25
   177a8:	andeq	r7, r1, r0, asr #25
   177ac:	andeq	r7, r1, r0, asr #25
   177b0:	andeq	r7, r1, r0, asr #25
   177b4:	andeq	r7, r1, r0, asr #25
   177b8:	andeq	r7, r1, r0, asr #25
   177bc:	andeq	r7, r1, r0, asr #25
   177c0:	andeq	r7, r1, r0, asr #25
   177c4:	andeq	r7, r1, r0, asr #25
   177c8:	andeq	r7, r1, r0, asr #25
   177cc:	andeq	r7, r1, r0, asr #25
   177d0:	andeq	r7, r1, r0, asr #25
   177d4:	andeq	r7, r1, r0, asr #25
   177d8:	andeq	r7, r1, r0, asr #25
   177dc:	andeq	r7, r1, r0, asr #25
   177e0:	andeq	r7, r1, r0, asr #25
   177e4:	andeq	r7, r1, r0, asr #25
   177e8:	andeq	r7, r1, r0, asr #25
   177ec:	andeq	r7, r1, r0, asr #25
   177f0:	andeq	r7, r1, r0, asr #25
   177f4:	andeq	r7, r1, r0, asr #25
   177f8:	andeq	r7, r1, r0, asr #25
   177fc:	andeq	r7, r1, r0, asr #25
   17800:	andeq	r7, r1, r0, asr #25
   17804:	andeq	r7, r1, r8, lsl #22
   17808:	andeq	r7, r1, r0, asr #25
   1780c:	andeq	r7, r1, r0, asr #25
   17810:	andeq	r7, r1, r0, lsl fp
   17814:	andeq	r7, r1, r0, asr #25
   17818:	andeq	r7, r1, r0, asr #25
   1781c:	andeq	r7, r1, r0, asr #25
   17820:	andeq	r7, r1, r0, asr #25
   17824:	andeq	r7, r1, r0, asr #25
   17828:	andeq	r7, r1, r0, asr #25
   1782c:	andeq	r7, r1, r0, asr #25
   17830:	andeq	r7, r1, r0, asr #25
   17834:	andeq	r7, r1, r0, asr #25
   17838:	andeq	r7, r1, r0, asr #25
   1783c:	andeq	r7, r1, r0, asr #25
   17840:	andeq	r7, r1, r0, asr #25
   17844:	andeq	r7, r1, r0, asr #25
   17848:	andeq	r7, r1, r0, asr #25
   1784c:	andeq	r7, r1, r0, asr #25
   17850:	andeq	r7, r1, r0, asr #25
   17854:	andeq	r7, r1, r0, asr #25
   17858:	andeq	r7, r1, r0, asr #25
   1785c:	andeq	r7, r1, r0, asr #25
   17860:	andeq	r7, r1, r0, asr #25
   17864:	andeq	r7, r1, r0, asr #25
   17868:	andeq	r7, r1, r0, asr #25
   1786c:	andeq	r7, r1, r0, asr #25
   17870:	andeq	r7, r1, r0, asr #25
   17874:	andeq	r7, r1, r0, asr #25
   17878:	andeq	r7, r1, r0, asr #25
   1787c:	andeq	r7, r1, r0, asr #25
   17880:	andeq	r7, r1, r0, asr #25
   17884:	andeq	r7, r1, r8, lsr fp
   17888:	andeq	r7, r1, r8, asr #22
   1788c:	andeq	r7, r1, ip, asr fp
   17890:	tst	r9, #2048	; 0x800
   17894:	bne	17b54 <__mempcpy_chk@plt+0x6574>
   17898:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   1789c:	bl	114b4 <__ctype_b_loc@plt>
   178a0:	ldr	r0, [r0]
   178a4:	add	r0, r0, r6, lsl #1
   178a8:	ldrh	r0, [r0]
   178ac:	ubfx	r0, r0, #3, #1
   178b0:	cmp	r6, #95	; 0x5f
   178b4:	movweq	r0, #1
   178b8:	orr	r0, r4, r0, lsl #22
   178bc:	str	r0, [r5]
   178c0:	sub	r1, r6, #39	; 0x27
   178c4:	mov	r8, #2
   178c8:	cmp	r1, #86	; 0x56
   178cc:	bhi	17cc0 <__mempcpy_chk@plt+0x66e0>
   178d0:	add	r2, pc, #0
   178d4:	ldr	pc, [r2, r1, lsl #2]
   178d8:	muleq	r1, r8, fp
   178dc:	andeq	r7, r1, r8, lsr #23
   178e0:			; <UNDEFINED> instruction: 0x00017bb8
   178e4:	andeq	r7, r1, r0, asr #25
   178e8:	andeq	r7, r1, r8, asr #23
   178ec:	andeq	r7, r1, r0, asr #25
   178f0:	andeq	r7, r1, r0, asr #25
   178f4:	andeq	r7, r1, r0, asr #25
   178f8:	andeq	r7, r1, r0, asr #25
   178fc:	andeq	r7, r1, r0, asr #25
   17900:	andeq	r7, r1, r4, lsr sl
   17904:	andeq	r7, r1, r4, lsr sl
   17908:	andeq	r7, r1, r4, lsr sl
   1790c:	andeq	r7, r1, r4, lsr sl
   17910:	andeq	r7, r1, r4, lsr sl
   17914:	andeq	r7, r1, r4, lsr sl
   17918:	andeq	r7, r1, r4, lsr sl
   1791c:	andeq	r7, r1, r4, lsr sl
   17920:	andeq	r7, r1, r4, lsr sl
   17924:	andeq	r7, r1, r0, asr #25
   17928:	andeq	r7, r1, r0, asr #25
   1792c:	andeq	r7, r1, r0, ror #23
   17930:	andeq	r7, r1, r0, asr #25
   17934:	strdeq	r7, [r1], -r0
   17938:	andeq	r7, r1, r0, lsl #24
   1793c:	andeq	r7, r1, r0, asr #25
   17940:	andeq	r7, r1, r0, asr #25
   17944:	andeq	r7, r1, r8, lsl ip
   17948:	andeq	r7, r1, r0, asr #25
   1794c:	andeq	r7, r1, r0, asr #25
   17950:	andeq	r7, r1, r0, asr #25
   17954:	andeq	r7, r1, r0, asr #25
   17958:	andeq	r7, r1, r0, asr #25
   1795c:	andeq	r7, r1, r0, asr #25
   17960:	andeq	r7, r1, r0, asr #25
   17964:	andeq	r7, r1, r0, asr #25
   17968:	andeq	r7, r1, r0, asr #25
   1796c:	andeq	r7, r1, r0, asr #25
   17970:	andeq	r7, r1, r0, asr #25
   17974:	andeq	r7, r1, r0, asr #25
   17978:	andeq	r7, r1, r0, asr #25
   1797c:	andeq	r7, r1, r0, asr #25
   17980:	andeq	r7, r1, r0, asr #25
   17984:	andeq	r7, r1, r0, asr #25
   17988:	andeq	r7, r1, r8, lsr #24
   1798c:	andeq	r7, r1, r0, asr #25
   17990:	andeq	r7, r1, r0, asr #25
   17994:	andeq	r7, r1, r0, asr #25
   17998:	andeq	r7, r1, r8, lsr ip
   1799c:	andeq	r7, r1, r0, asr #25
   179a0:	andeq	r7, r1, r0, asr #25
   179a4:	andeq	r7, r1, r0, asr #25
   179a8:	andeq	r7, r1, r0, asr #25
   179ac:	andeq	r7, r1, r0, asr #25
   179b0:	andeq	r7, r1, r0, asr #25
   179b4:	andeq	r7, r1, r0, asr #25
   179b8:	andeq	r7, r1, r0, asr #25
   179bc:	andeq	r7, r1, r8, asr #24
   179c0:	andeq	r7, r1, r0, asr #25
   179c4:	andeq	r7, r1, r8, asr ip
   179c8:	andeq	r7, r1, r0, asr #25
   179cc:	andeq	r7, r1, r0, asr #25
   179d0:	andeq	r7, r1, r0, asr #25
   179d4:	andeq	r7, r1, r0, asr #25
   179d8:	andeq	r7, r1, r0, asr #25
   179dc:	andeq	r7, r1, r0, asr #25
   179e0:	andeq	r7, r1, r0, asr #25
   179e4:	andeq	r7, r1, r0, asr #25
   179e8:	andeq	r7, r1, r0, asr #25
   179ec:	andeq	r7, r1, r0, asr #25
   179f0:	andeq	r7, r1, r0, asr #25
   179f4:	andeq	r7, r1, r0, asr #25
   179f8:	andeq	r7, r1, r0, asr #25
   179fc:	andeq	r7, r1, r0, asr #25
   17a00:	andeq	r7, r1, r0, asr #25
   17a04:	andeq	r7, r1, r0, asr #25
   17a08:	andeq	r7, r1, r8, ror #24
   17a0c:	andeq	r7, r1, r0, asr #25
   17a10:	andeq	r7, r1, r0, asr #25
   17a14:	andeq	r7, r1, r0, asr #25
   17a18:	andeq	r7, r1, r8, ror ip
   17a1c:	andeq	r7, r1, r0, asr #25
   17a20:	andeq	r7, r1, r0, asr #25
   17a24:	andeq	r7, r1, r0, asr #25
   17a28:	andeq	r7, r1, r8, lsl #25
   17a2c:	muleq	r1, ip, ip
   17a30:	andeq	r7, r1, r8, lsr #25
   17a34:	tst	r9, #16384	; 0x4000
   17a38:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17a3c:	sub	r1, r6, #49	; 0x31
   17a40:	mov	r2, #4
   17a44:	b	17b28 <__mempcpy_chk@plt+0x6548>
   17a48:	and	r0, r4, r8
   17a4c:	orr	r0, r0, #1
   17a50:	orr	r0, r0, #2097152	; 0x200000
   17a54:	str	r0, [r5]
   17a58:	mov	r8, #1
   17a5c:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17a60:	tst	r9, #8
   17a64:	bne	17aac <__mempcpy_chk@plt+0x64cc>
   17a68:	ldr	r0, [r7, #40]	; 0x28
   17a6c:	ldr	r1, [r7, #48]	; 0x30
   17a70:	add	r0, r0, #1
   17a74:	cmp	r0, r1
   17a78:	beq	17aac <__mempcpy_chk@plt+0x64cc>
   17a7c:	str	r0, [r7, #40]	; 0x28
   17a80:	add	r0, sp, #4
   17a84:	mov	r1, r7
   17a88:	mov	r2, r9
   17a8c:	bl	17518 <__mempcpy_chk@plt+0x5f38>
   17a90:	ldr	r0, [r7, #40]	; 0x28
   17a94:	sub	r0, r0, #1
   17a98:	str	r0, [r7, #40]	; 0x28
   17a9c:	ldrb	r0, [sp, #8]
   17aa0:	sub	r0, r0, #9
   17aa4:	cmp	r0, #1
   17aa8:	bhi	17cc0 <__mempcpy_chk@plt+0x66e0>
   17aac:	mov	r0, #32
   17ab0:	str	r0, [sl]
   17ab4:	mov	r0, #12
   17ab8:	strb	r0, [sl, #4]
   17abc:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17ac0:	tst	r9, #8192	; 0x2000
   17ac4:	bne	17bb0 <__mempcpy_chk@plt+0x65d0>
   17ac8:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17acc:	tst	r9, #8192	; 0x2000
   17ad0:	bne	17bc0 <__mempcpy_chk@plt+0x65e0>
   17ad4:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17ad8:	mov	r1, #11
   17adc:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17ae0:	movw	r1, #1026	; 0x402
   17ae4:	tst	r9, r1
   17ae8:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17aec:	b	17bd8 <__mempcpy_chk@plt+0x65f8>
   17af0:	mov	r1, #5
   17af4:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17af8:	movw	r1, #1026	; 0x402
   17afc:	tst	r9, r1
   17b00:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b04:	b	17c10 <__mempcpy_chk@plt+0x6630>
   17b08:	mov	r1, #20
   17b0c:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17b10:	movw	r1, #8
   17b14:	movt	r1, #128	; 0x80
   17b18:	tst	r9, r1
   17b1c:	beq	17b6c <__mempcpy_chk@plt+0x658c>
   17b20:	mov	r1, #16
   17b24:	mov	r2, #12
   17b28:	bfi	r0, r2, #0, #8
   17b2c:	str	r1, [sl]
   17b30:	str	r0, [sl, #4]
   17b34:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b38:	and	r1, r9, #4608	; 0x1200
   17b3c:	cmp	r1, #4608	; 0x1200
   17b40:	beq	17c94 <__mempcpy_chk@plt+0x66b4>
   17b44:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b48:	and	r1, r9, #33792	; 0x8400
   17b4c:	cmp	r1, #32768	; 0x8000
   17b50:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b54:	mov	r1, #10
   17b58:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17b5c:	and	r1, r9, #4608	; 0x1200
   17b60:	cmp	r1, #4608	; 0x1200
   17b64:	beq	17cb4 <__mempcpy_chk@plt+0x66d4>
   17b68:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b6c:	ldr	r1, [r7, #40]	; 0x28
   17b70:	cmp	r1, #0
   17b74:	beq	17b20 <__mempcpy_chk@plt+0x6540>
   17b78:	tst	r9, #2048	; 0x800
   17b7c:	beq	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b80:	ldr	r2, [r7, #4]
   17b84:	add	r1, r2, r1
   17b88:	ldrb	r1, [r1, #-1]
   17b8c:	cmp	r1, #10
   17b90:	beq	17b20 <__mempcpy_chk@plt+0x6540>
   17b94:	b	17cc0 <__mempcpy_chk@plt+0x66e0>
   17b98:	tst	r9, #524288	; 0x80000
   17b9c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17ba0:	mov	r1, #128	; 0x80
   17ba4:	b	17b24 <__mempcpy_chk@plt+0x6544>
   17ba8:	tst	r9, #8192	; 0x2000
   17bac:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17bb0:	mov	r1, #8
   17bb4:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17bb8:	tst	r9, #8192	; 0x2000
   17bbc:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17bc0:	mov	r1, #9
   17bc4:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17bc8:	movw	r1, #1026	; 0x402
   17bcc:	and	r1, r9, r1
   17bd0:	cmp	r1, #2
   17bd4:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17bd8:	mov	r1, #18
   17bdc:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17be0:	tst	r9, #524288	; 0x80000
   17be4:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17be8:	mov	r1, #6
   17bec:	b	17b24 <__mempcpy_chk@plt+0x6544>
   17bf0:	tst	r9, #524288	; 0x80000
   17bf4:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17bf8:	mov	r1, #9
   17bfc:	b	17b24 <__mempcpy_chk@plt+0x6544>
   17c00:	movw	r1, #1026	; 0x402
   17c04:	and	r1, r9, r1
   17c08:	cmp	r1, #2
   17c0c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c10:	mov	r1, #19
   17c14:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17c18:	tst	r9, #524288	; 0x80000
   17c1c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c20:	mov	r1, #512	; 0x200
   17c24:	b	17b24 <__mempcpy_chk@plt+0x6544>
   17c28:	tst	r9, #524288	; 0x80000
   17c2c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c30:	mov	r1, #35	; 0x23
   17c34:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17c38:	tst	r9, #524288	; 0x80000
   17c3c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c40:	mov	r1, #33	; 0x21
   17c44:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17c48:	tst	r9, #524288	; 0x80000
   17c4c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c50:	mov	r1, #64	; 0x40
   17c54:	b	17b24 <__mempcpy_chk@plt+0x6544>
   17c58:	tst	r9, #524288	; 0x80000
   17c5c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c60:	mov	r1, #256	; 0x100
   17c64:	b	17b24 <__mempcpy_chk@plt+0x6544>
   17c68:	tst	r9, #524288	; 0x80000
   17c6c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c70:	mov	r1, #34	; 0x22
   17c74:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17c78:	tst	r9, #524288	; 0x80000
   17c7c:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c80:	mov	r1, #32
   17c84:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17c88:	and	r1, r9, #4608	; 0x1200
   17c8c:	cmp	r1, #512	; 0x200
   17c90:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17c94:	mov	r1, #23
   17c98:	b	17cb8 <__mempcpy_chk@plt+0x66d8>
   17c9c:	tst	r9, #33792	; 0x8400
   17ca0:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17ca4:	b	17b54 <__mempcpy_chk@plt+0x6574>
   17ca8:	and	r1, r9, #4608	; 0x1200
   17cac:	cmp	r1, #512	; 0x200
   17cb0:	bne	17cc0 <__mempcpy_chk@plt+0x66e0>
   17cb4:	mov	r1, #24
   17cb8:	bfi	r0, r1, #0, #8
   17cbc:	str	r0, [r5]
   17cc0:	mov	r0, r8
   17cc4:	sub	sp, fp, #28
   17cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ccc:	ldrb	r1, [r0, #75]	; 0x4b
   17cd0:	cmp	r1, #0
   17cd4:	bne	17cf4 <__mempcpy_chk@plt+0x6714>
   17cd8:	ldr	r1, [r0, #4]
   17cdc:	ldr	r0, [r0, #40]	; 0x28
   17ce0:	add	r0, r1, r0
   17ce4:	add	r0, r0, #1
   17ce8:	ldrb	r3, [r0]
   17cec:	uxtb	r0, r3
   17cf0:	bx	lr
   17cf4:	ldr	r1, [r0, #80]	; 0x50
   17cf8:	cmp	r1, #2
   17cfc:	blt	17d34 <__mempcpy_chk@plt+0x6754>
   17d00:	ldr	r2, [r0, #8]
   17d04:	ldr	r3, [r0, #40]	; 0x28
   17d08:	add	ip, r3, #1
   17d0c:	ldr	r1, [r2, ip, lsl #2]
   17d10:	cmn	r1, #1
   17d14:	beq	17d80 <__mempcpy_chk@plt+0x67a0>
   17d18:	ldr	r1, [r0, #28]
   17d1c:	add	r3, r3, #2
   17d20:	cmp	r1, r3
   17d24:	beq	17d34 <__mempcpy_chk@plt+0x6754>
   17d28:	ldr	r1, [r2, r3, lsl #2]
   17d2c:	cmn	r1, #1
   17d30:	beq	17d80 <__mempcpy_chk@plt+0x67a0>
   17d34:	push	{fp, lr}
   17d38:	mov	fp, sp
   17d3c:	ldrb	lr, [r0, #76]	; 0x4c
   17d40:	ldr	r1, [r0, #40]	; 0x28
   17d44:	add	ip, r1, #1
   17d48:	cmp	lr, #0
   17d4c:	mov	r3, ip
   17d50:	ldrne	r3, [r0, #12]
   17d54:	ldrne	r3, [r3, ip, lsl #2]
   17d58:	ldr	r1, [r0]
   17d5c:	ldr	r2, [r0, #24]
   17d60:	add	r2, r2, r3
   17d64:	add	r1, r1, r2
   17d68:	ldrsb	r3, [r1]
   17d6c:	cmp	lr, #0
   17d70:	pop	{fp, lr}
   17d74:	beq	17cec <__mempcpy_chk@plt+0x670c>
   17d78:	cmn	r3, #1
   17d7c:	bgt	17cec <__mempcpy_chk@plt+0x670c>
   17d80:	ldr	r0, [r0, #4]
   17d84:	add	r0, r0, ip
   17d88:	b	17ce8 <__mempcpy_chk@plt+0x6708>
   17d8c:	ldr	r2, [r0, #80]	; 0x50
   17d90:	cmp	r2, #1
   17d94:	ldrne	r0, [r0, #8]
   17d98:	ldrne	r0, [r0, r1, lsl #2]
   17d9c:	ldreq	r0, [r0, #4]
   17da0:	ldrbeq	r0, [r0, r1]
   17da4:	bx	lr
   17da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dac:	add	fp, sp, #28
   17db0:	sub	sp, sp, #20
   17db4:	mov	r6, r2
   17db8:	mov	r7, r1
   17dbc:	mov	r1, r0
   17dc0:	ldr	r0, [r7]
   17dc4:	str	r0, [sp, #8]
   17dc8:	ldr	r5, [fp, #12]
   17dcc:	str	r5, [sp, #4]
   17dd0:	ldr	r4, [fp, #8]
   17dd4:	str	r4, [sp]
   17dd8:	str	r1, [sp, #12]
   17ddc:	mov	r0, r1
   17de0:	mov	r1, r7
   17de4:	str	r3, [sp, #16]
   17de8:	bl	17fa8 <__mempcpy_chk@plt+0x69c8>
   17dec:	cmp	r0, #0
   17df0:	bne	17e18 <__mempcpy_chk@plt+0x6838>
   17df4:	ldr	r1, [r5]
   17df8:	cmp	r1, #0
   17dfc:	beq	17e18 <__mempcpy_chk@plt+0x6838>
   17e00:	mov	r6, #0
   17e04:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   17e08:	cmp	r5, #0
   17e0c:	movne	r8, r5
   17e10:	mov	r0, r8
   17e14:	mov	r4, r9
   17e18:	mov	r5, r0
   17e1c:	ldrb	r0, [r6, #4]
   17e20:	orr	r1, r0, #8
   17e24:	cmp	r1, #10
   17e28:	beq	17ee0 <__mempcpy_chk@plt+0x6900>
   17e2c:	cmp	r4, #0
   17e30:	beq	17e3c <__mempcpy_chk@plt+0x685c>
   17e34:	cmp	r0, #9
   17e38:	beq	17ee0 <__mempcpy_chk@plt+0x6900>
   17e3c:	mov	r9, r4
   17e40:	str	r4, [sp]
   17e44:	ldr	sl, [fp, #12]
   17e48:	str	sl, [sp, #4]
   17e4c:	ldr	r0, [sp, #12]
   17e50:	mov	r1, r7
   17e54:	mov	r2, r6
   17e58:	ldr	r3, [sp, #16]
   17e5c:	bl	17fa8 <__mempcpy_chk@plt+0x69c8>
   17e60:	mov	r8, r0
   17e64:	cmp	r0, #0
   17e68:	bne	17e78 <__mempcpy_chk@plt+0x6898>
   17e6c:	ldr	r0, [sl]
   17e70:	cmp	r0, #0
   17e74:	bne	17ef0 <__mempcpy_chk@plt+0x6910>
   17e78:	cmp	r5, #0
   17e7c:	cmpne	r8, #0
   17e80:	beq	17e08 <__mempcpy_chk@plt+0x6828>
   17e84:	ldr	r0, [sp, #8]
   17e88:	mov	r1, r5
   17e8c:	mov	r2, r8
   17e90:	mov	r3, #16
   17e94:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   17e98:	cmp	r0, #0
   17e9c:	mov	r4, r9
   17ea0:	bne	17e18 <__mempcpy_chk@plt+0x6838>
   17ea4:	movw	r4, #32656	; 0x7f90
   17ea8:	movt	r4, #1
   17eac:	mov	r6, #0
   17eb0:	mov	r0, r8
   17eb4:	mov	r1, r4
   17eb8:	mov	r2, #0
   17ebc:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   17ec0:	mov	r0, r5
   17ec4:	mov	r1, r4
   17ec8:	mov	r2, #0
   17ecc:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   17ed0:	mov	r0, #12
   17ed4:	ldr	r1, [fp, #12]
   17ed8:	str	r0, [r1]
   17edc:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   17ee0:	mov	r6, r5
   17ee4:	mov	r0, r6
   17ee8:	sub	sp, fp, #28
   17eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ef0:	cmp	r5, #0
   17ef4:	mov	r6, #0
   17ef8:	beq	17ee4 <__mempcpy_chk@plt+0x6904>
   17efc:	movw	r1, #32656	; 0x7f90
   17f00:	movt	r1, #1
   17f04:	mov	r6, #0
   17f08:	mov	r0, r5
   17f0c:	mov	r2, #0
   17f10:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   17f14:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   17f18:	push	{r4, r5, r6, sl, fp, lr}
   17f1c:	add	fp, sp, #16
   17f20:	mov	r4, r2
   17f24:	mov	r5, r1
   17f28:	b	17f30 <__mempcpy_chk@plt+0x6950>
   17f2c:	ldr	r0, [r6, #8]
   17f30:	mov	r6, r0
   17f34:	ldr	r0, [r0, #4]
   17f38:	cmp	r0, #0
   17f3c:	bne	17f30 <__mempcpy_chk@plt+0x6950>
   17f40:	ldr	r0, [r6, #8]
   17f44:	cmp	r0, #0
   17f48:	bne	17f2c <__mempcpy_chk@plt+0x694c>
   17f4c:	mov	r0, r4
   17f50:	mov	r1, r6
   17f54:	blx	r5
   17f58:	cmp	r0, #0
   17f5c:	bne	17f8c <__mempcpy_chk@plt+0x69ac>
   17f60:	ldr	r1, [r6]
   17f64:	cmp	r1, #0
   17f68:	popeq	{r4, r5, r6, sl, fp, pc}
   17f6c:	ldr	r0, [r1, #8]
   17f70:	cmp	r0, r6
   17f74:	mov	r6, r1
   17f78:	beq	17f4c <__mempcpy_chk@plt+0x696c>
   17f7c:	cmp	r0, #0
   17f80:	mov	r6, r1
   17f84:	beq	17f4c <__mempcpy_chk@plt+0x696c>
   17f88:	b	17f30 <__mempcpy_chk@plt+0x6950>
   17f8c:	pop	{r4, r5, r6, sl, fp, pc}
   17f90:	push	{fp, lr}
   17f94:	mov	fp, sp
   17f98:	add	r0, r1, #20
   17f9c:	bl	15f7c <__mempcpy_chk@plt+0x499c>
   17fa0:	mov	r0, #0
   17fa4:	pop	{fp, pc}
   17fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fac:	add	fp, sp, #28
   17fb0:	sub	sp, sp, #12
   17fb4:	mov	r9, r3
   17fb8:	mov	r5, r2
   17fbc:	mov	r6, r1
   17fc0:	mov	sl, r0
   17fc4:	and	ip, r3, #16
   17fc8:	and	r8, r3, #32
   17fcc:	and	r0, r3, #16777216	; 0x1000000
   17fd0:	str	r0, [sp, #8]
   17fd4:	ldr	r3, [fp, #12]
   17fd8:	ldr	r4, [fp, #8]
   17fdc:	mvn	r1, #0
   17fe0:	b	18004 <__mempcpy_chk@plt+0x6a24>
   17fe4:	mov	r0, r5
   17fe8:	mov	r1, sl
   17fec:	mov	r2, r9
   17ff0:	mov	r7, ip
   17ff4:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   17ff8:	mvn	r1, #0
   17ffc:	mov	ip, r7
   18000:	ldr	r3, [fp, #12]
   18004:	ldr	r0, [r5, #4]
   18008:	uxtab	r1, r1, r0
   1800c:	ldr	r7, [r6]
   18010:	cmp	r1, #35	; 0x23
   18014:	bhi	180bc <__mempcpy_chk@plt+0x6adc>
   18018:	add	r2, pc, #0
   1801c:	ldr	pc, [r2, r1, lsl #2]
   18020:	andeq	r8, r1, r4, lsl #3
   18024:	andeq	r8, r1, ip, lsr r5
   18028:	strheq	r8, [r1], -ip
   1802c:	andeq	r8, r1, r0, asr #4
   18030:	muleq	r1, ip, r2
   18034:	strheq	r8, [r1], -ip
   18038:	strheq	r8, [r1], -ip
   1803c:	andeq	r8, r1, r0, ror #5
   18040:	andeq	r8, r1, ip, asr #1
   18044:	andeq	r8, r1, ip, lsr r5
   18048:	strheq	r8, [r1], -ip
   1804c:	andeq	r8, r1, r8, lsl #6
   18050:	strheq	r8, [r1], -ip
   18054:	strheq	r8, [r1], -ip
   18058:	strheq	r8, [r1], -ip
   1805c:	strheq	r8, [r1], -ip
   18060:	strheq	r8, [r1], -ip
   18064:	strheq	r8, [r1], -ip
   18068:	strheq	r8, [r1], -ip
   1806c:	andeq	r8, r1, r8, asr #6
   18070:	strheq	r8, [r1], -ip
   18074:	strheq	r8, [r1], -ip
   18078:	strheq	r8, [r1], -r0
   1807c:	ldrdeq	r8, [r1], -ip
   18080:	strheq	r8, [r1], -ip
   18084:	strheq	r8, [r1], -ip
   18088:	strheq	r8, [r1], -ip
   1808c:	strheq	r8, [r1], -ip
   18090:	strheq	r8, [r1], -ip
   18094:	strheq	r8, [r1], -ip
   18098:	strheq	r8, [r1], -ip
   1809c:	andeq	r8, r1, r4, lsl r1
   180a0:	andeq	r8, r1, r4, lsl r1
   180a4:	andeq	r8, r1, r8, asr #2
   180a8:	andeq	r8, r1, r8, asr #2
   180ac:	andeq	r8, r1, r0, asr #8
   180b0:	ldr	r1, [sp, #8]
   180b4:	cmp	r1, #0
   180b8:	bne	1850c <__mempcpy_chk@plt+0x6f2c>
   180bc:	cmp	r8, #0
   180c0:	bne	1850c <__mempcpy_chk@plt+0x6f2c>
   180c4:	cmp	ip, #0
   180c8:	bne	17fe4 <__mempcpy_chk@plt+0x6a04>
   180cc:	tst	r9, #131072	; 0x20000
   180d0:	uxtbeq	r1, r0
   180d4:	cmpeq	r1, #9
   180d8:	beq	1844c <__mempcpy_chk@plt+0x6e6c>
   180dc:	mov	r1, #1
   180e0:	bfi	r0, r1, #0, #8
   180e4:	str	r0, [r5, #4]
   180e8:	mov	r4, #0
   180ec:	mov	r0, r7
   180f0:	mov	r1, #0
   180f4:	mov	r2, #0
   180f8:	mov	r3, r5
   180fc:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18100:	mov	r6, r0
   18104:	cmp	r0, #0
   18108:	mov	r8, sl
   1810c:	bne	18380 <__mempcpy_chk@plt+0x6da0>
   18110:	b	184c0 <__mempcpy_chk@plt+0x6ee0>
   18114:	mov	r8, sl
   18118:	ldr	r1, [sl, #64]	; 0x40
   1811c:	mvn	r2, #32
   18120:	uxtab	r0, r2, r0
   18124:	clz	r0, r0
   18128:	lsr	r0, r0, #5
   1812c:	stm	sp, {r0, r3}
   18130:	movw	r2, #13686	; 0x3576
   18134:	movt	r2, #2
   18138:	mov	r4, r3
   1813c:	movw	r3, #12291	; 0x3003
   18140:	movt	r3, #2
   18144:	b	18178 <__mempcpy_chk@plt+0x6b98>
   18148:	mov	r8, sl
   1814c:	ldr	r1, [sl, #64]	; 0x40
   18150:	mvn	r2, #34	; 0x22
   18154:	uxtab	r0, r2, r0
   18158:	clz	r0, r0
   1815c:	lsr	r0, r0, #5
   18160:	stm	sp, {r0, r3}
   18164:	movw	r2, #13692	; 0x357c
   18168:	movt	r2, #2
   1816c:	mov	r4, r3
   18170:	movw	r3, #12441	; 0x3099
   18174:	movt	r3, #2
   18178:	mov	r0, r7
   1817c:	bl	18d14 <__mempcpy_chk@plt+0x7734>
   18180:	b	18368 <__mempcpy_chk@plt+0x6d88>
   18184:	mov	r4, #0
   18188:	mov	r0, r7
   1818c:	mov	r1, #0
   18190:	mov	r2, #0
   18194:	mov	r3, r5
   18198:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   1819c:	cmp	r0, #0
   181a0:	beq	184c0 <__mempcpy_chk@plt+0x6ee0>
   181a4:	mov	r6, r0
   181a8:	ldr	r0, [r7, #92]	; 0x5c
   181ac:	cmp	r0, #2
   181b0:	mov	r8, sl
   181b4:	blt	18380 <__mempcpy_chk@plt+0x6da0>
   181b8:	ldr	r0, [r8, #40]	; 0x28
   181bc:	ldr	r1, [r8, #56]	; 0x38
   181c0:	cmp	r1, r0
   181c4:	ble	18380 <__mempcpy_chk@plt+0x6da0>
   181c8:	ldr	r1, [r8, #28]
   181cc:	cmp	r0, r1
   181d0:	beq	18380 <__mempcpy_chk@plt+0x6da0>
   181d4:	ldr	r1, [r8, #8]
   181d8:	ldr	r0, [r1, r0, lsl #2]
   181dc:	cmn	r0, #1
   181e0:	bne	18380 <__mempcpy_chk@plt+0x6da0>
   181e4:	mov	r0, r5
   181e8:	mov	r1, r8
   181ec:	mov	r2, r9
   181f0:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   181f4:	mov	r0, r7
   181f8:	mov	r1, #0
   181fc:	mov	r2, #0
   18200:	mov	r3, r5
   18204:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18208:	mov	r4, r0
   1820c:	mov	r0, r7
   18210:	mov	r1, r6
   18214:	mov	r2, r4
   18218:	mov	r3, #16
   1821c:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   18220:	cmp	r4, #0
   18224:	ldr	r1, [fp, #12]
   18228:	movne	r6, r0
   1822c:	cmpne	r0, #0
   18230:	bne	181b8 <__mempcpy_chk@plt+0x6bd8>
   18234:	mov	r0, #12
   18238:	str	r0, [r1]
   1823c:	b	1853c <__mempcpy_chk@plt+0x6f5c>
   18240:	ldr	r0, [r5]
   18244:	mov	r1, #1
   18248:	ldr	r2, [r7, #84]	; 0x54
   1824c:	tst	r2, r1, lsl r0
   18250:	beq	1854c <__mempcpy_chk@plt+0x6f6c>
   18254:	lsl	r0, r1, r0
   18258:	ldr	r1, [r7, #80]	; 0x50
   1825c:	orr	r0, r1, r0
   18260:	str	r0, [r7, #80]	; 0x50
   18264:	mov	r4, #0
   18268:	mov	r0, r7
   1826c:	mov	r1, #0
   18270:	mov	r2, #0
   18274:	mov	r3, r5
   18278:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   1827c:	cmp	r0, #0
   18280:	beq	184c0 <__mempcpy_chk@plt+0x6ee0>
   18284:	mov	r6, r0
   18288:	mov	r8, sl
   1828c:	ldr	r0, [r7, #76]	; 0x4c
   18290:	add	r0, r0, #1
   18294:	str	r0, [r7, #76]	; 0x4c
   18298:	b	182d0 <__mempcpy_chk@plt+0x6cf0>
   1829c:	mov	r4, #0
   182a0:	mov	r0, r7
   182a4:	mov	r1, #0
   182a8:	mov	r2, #0
   182ac:	mov	r3, r5
   182b0:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   182b4:	cmp	r0, #0
   182b8:	beq	184c0 <__mempcpy_chk@plt+0x6ee0>
   182bc:	mov	r6, r0
   182c0:	ldr	r0, [r7, #92]	; 0x5c
   182c4:	cmp	r0, #2
   182c8:	mov	r8, sl
   182cc:	blt	18380 <__mempcpy_chk@plt+0x6da0>
   182d0:	ldrb	r0, [r7, #88]	; 0x58
   182d4:	orr	r0, r0, #2
   182d8:	strb	r0, [r7, #88]	; 0x58
   182dc:	b	18380 <__mempcpy_chk@plt+0x6da0>
   182e0:	add	r0, r4, #1
   182e4:	stm	sp, {r0, r3}
   182e8:	mov	r8, sl
   182ec:	mov	r0, sl
   182f0:	mov	r1, r6
   182f4:	mov	r2, r5
   182f8:	mov	r4, r3
   182fc:	mov	r3, r9
   18300:	bl	18600 <__mempcpy_chk@plt+0x7020>
   18304:	b	18368 <__mempcpy_chk@plt+0x6d88>
   18308:	ldr	r0, [r5]
   1830c:	movw	r1, #783	; 0x30f
   18310:	tst	r0, r1
   18314:	beq	1832c <__mempcpy_chk@plt+0x6d4c>
   18318:	ldrb	r0, [r7, #88]	; 0x58
   1831c:	tst	r0, #16
   18320:	moveq	r0, r7
   18324:	bleq	18c38 <__mempcpy_chk@plt+0x7658>
   18328:	ldr	r0, [r5]
   1832c:	cmp	r0, #256	; 0x100
   18330:	beq	18458 <__mempcpy_chk@plt+0x6e78>
   18334:	cmp	r0, #512	; 0x200
   18338:	bne	184d0 <__mempcpy_chk@plt+0x6ef0>
   1833c:	mov	r6, #10
   18340:	mov	r0, #5
   18344:	b	18460 <__mempcpy_chk@plt+0x6e80>
   18348:	str	r3, [sp]
   1834c:	mov	r8, sl
   18350:	mov	r0, sl
   18354:	mov	r1, r7
   18358:	mov	r2, r5
   1835c:	mov	r4, r3
   18360:	mov	r3, r9
   18364:	bl	18714 <__mempcpy_chk@plt+0x7134>
   18368:	mov	r6, r0
   1836c:	cmp	r0, #0
   18370:	bne	18380 <__mempcpy_chk@plt+0x6da0>
   18374:	ldr	r0, [r4]
   18378:	cmp	r0, #0
   1837c:	bne	1853c <__mempcpy_chk@plt+0x6f5c>
   18380:	mov	r0, r5
   18384:	mov	r1, r8
   18388:	mov	r2, r9
   1838c:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   18390:	mov	r4, #1
   18394:	movw	r8, #2048	; 0x800
   18398:	movt	r8, #140	; 0x8c
   1839c:	ldr	r2, [fp, #12]
   183a0:	ldrb	r0, [r5, #4]
   183a4:	cmp	r0, #23
   183a8:	bhi	18438 <__mempcpy_chk@plt+0x6e58>
   183ac:	tst	r8, r4, lsl r0
   183b0:	beq	18438 <__mempcpy_chk@plt+0x6e58>
   183b4:	str	r9, [sp]
   183b8:	str	r2, [sp, #4]
   183bc:	mov	r0, r6
   183c0:	mov	r1, sl
   183c4:	mov	r2, r7
   183c8:	mov	r3, r5
   183cc:	bl	18f04 <__mempcpy_chk@plt+0x7924>
   183d0:	ldr	r2, [fp, #12]
   183d4:	cmp	r0, #0
   183d8:	bne	183e8 <__mempcpy_chk@plt+0x6e08>
   183dc:	ldr	r1, [r2]
   183e0:	cmp	r1, #0
   183e4:	bne	18518 <__mempcpy_chk@plt+0x6f38>
   183e8:	ldr	r1, [sp, #8]
   183ec:	cmp	r1, #0
   183f0:	mov	r6, r0
   183f4:	beq	183a0 <__mempcpy_chk@plt+0x6dc0>
   183f8:	ldrb	r1, [r5, #4]
   183fc:	cmp	r1, #23
   18400:	beq	18410 <__mempcpy_chk@plt+0x6e30>
   18404:	cmp	r1, #11
   18408:	mov	r6, r0
   1840c:	bne	183a0 <__mempcpy_chk@plt+0x6dc0>
   18410:	cmp	r0, #0
   18414:	beq	1842c <__mempcpy_chk@plt+0x6e4c>
   18418:	movw	r1, #32656	; 0x7f90
   1841c:	movt	r1, #1
   18420:	mov	r2, #0
   18424:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   18428:	ldr	r2, [fp, #12]
   1842c:	mov	r0, #13
   18430:	str	r0, [r2]
   18434:	b	1853c <__mempcpy_chk@plt+0x6f5c>
   18438:	mov	r4, r6
   1843c:	b	18540 <__mempcpy_chk@plt+0x6f60>
   18440:	mov	r0, #5
   18444:	str	r0, [r3]
   18448:	b	1853c <__mempcpy_chk@plt+0x6f5c>
   1844c:	mov	r0, #16
   18450:	str	r0, [r3]
   18454:	b	1853c <__mempcpy_chk@plt+0x6f5c>
   18458:	mov	r6, #9
   1845c:	mov	r0, #6
   18460:	str	r0, [r5]
   18464:	mov	r4, #0
   18468:	mov	r0, r7
   1846c:	mov	r1, #0
   18470:	mov	r2, #0
   18474:	mov	r3, r5
   18478:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   1847c:	mov	r8, r0
   18480:	str	r6, [r5]
   18484:	mov	r0, r7
   18488:	mov	r1, #0
   1848c:	mov	r2, #0
   18490:	mov	r3, r5
   18494:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18498:	mov	r1, r0
   1849c:	mov	r0, r7
   184a0:	mov	r7, r1
   184a4:	mov	r1, r8
   184a8:	mov	r2, r7
   184ac:	mov	r3, #10
   184b0:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   184b4:	cmp	r8, #0
   184b8:	cmpne	r7, #0
   184bc:	bne	184e8 <__mempcpy_chk@plt+0x6f08>
   184c0:	mov	r0, #12
   184c4:	ldr	r1, [fp, #12]
   184c8:	str	r0, [r1]
   184cc:	b	18540 <__mempcpy_chk@plt+0x6f60>
   184d0:	mov	r4, #0
   184d4:	mov	r0, r7
   184d8:	mov	r1, #0
   184dc:	mov	r2, #0
   184e0:	mov	r3, r5
   184e4:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   184e8:	mov	r6, r0
   184ec:	cmp	r0, #0
   184f0:	beq	184c0 <__mempcpy_chk@plt+0x6ee0>
   184f4:	mov	r0, r5
   184f8:	mov	r1, sl
   184fc:	mov	r2, r9
   18500:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   18504:	mov	r4, r6
   18508:	b	18540 <__mempcpy_chk@plt+0x6f60>
   1850c:	mov	r0, #13
   18510:	str	r0, [r3]
   18514:	b	1853c <__mempcpy_chk@plt+0x6f5c>
   18518:	cmp	r6, #0
   1851c:	beq	1853c <__mempcpy_chk@plt+0x6f5c>
   18520:	movw	r1, #32656	; 0x7f90
   18524:	movt	r1, #1
   18528:	mov	r4, #0
   1852c:	mov	r0, r6
   18530:	mov	r2, #0
   18534:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   18538:	b	18540 <__mempcpy_chk@plt+0x6f60>
   1853c:	mov	r4, #0
   18540:	mov	r0, r4
   18544:	sub	sp, fp, #28
   18548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1854c:	mov	r0, #6
   18550:	ldr	r1, [fp, #12]
   18554:	b	18238 <__mempcpy_chk@plt+0x6c58>
   18558:	push	{r4, r5, r6, r7, fp, lr}
   1855c:	add	fp, sp, #16
   18560:	mov	r6, r3
   18564:	mov	r4, r2
   18568:	mov	r5, r1
   1856c:	mov	r7, r0
   18570:	ldr	r0, [r0, #64]	; 0x40
   18574:	cmp	r0, #31
   18578:	beq	185d4 <__mempcpy_chk@plt+0x6ff4>
   1857c:	ldr	r0, [r7, #56]	; 0x38
   18580:	ldr	r1, [r7, #64]	; 0x40
   18584:	add	r2, r1, #1
   18588:	str	r2, [r7, #64]	; 0x40
   1858c:	add	r0, r0, r1, lsl #5
   18590:	mov	r1, #0
   18594:	str	r1, [r0, #4]!
   18598:	str	r5, [r0, #4]
   1859c:	str	r4, [r0, #8]
   185a0:	ldm	r6, {r2, r3}
   185a4:	str	r1, [r0, #12]
   185a8:	str	r1, [r0, #16]
   185ac:	mvn	r1, #0
   185b0:	str	r1, [r0, #28]
   185b4:	str	r2, [r0, #20]
   185b8:	bic	r1, r3, #786432	; 0xc0000
   185bc:	str	r1, [r0, #24]
   185c0:	cmp	r5, #0
   185c4:	strne	r0, [r5]
   185c8:	cmp	r4, #0
   185cc:	strne	r0, [r4]
   185d0:	pop	{r4, r5, r6, r7, fp, pc}
   185d4:	mov	r0, #996	; 0x3e4
   185d8:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   185dc:	cmp	r0, #0
   185e0:	moveq	r0, #0
   185e4:	popeq	{r4, r5, r6, r7, fp, pc}
   185e8:	ldr	r1, [r7, #56]	; 0x38
   185ec:	str	r1, [r0]
   185f0:	mov	r1, #0
   185f4:	str	r1, [r7, #64]	; 0x40
   185f8:	str	r0, [r7, #56]	; 0x38
   185fc:	b	1857c <__mempcpy_chk@plt+0x6f9c>
   18600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18604:	add	fp, sp, #28
   18608:	sub	sp, sp, #12
   1860c:	mov	r5, r3
   18610:	mov	r6, r2
   18614:	mov	r7, r1
   18618:	mov	r4, r0
   1861c:	ldr	r8, [r1]
   18620:	ldr	sl, [r1, #24]
   18624:	add	r0, sl, #1
   18628:	str	r0, [r1, #24]
   1862c:	orr	r2, r3, #8388608	; 0x800000
   18630:	mov	r0, r6
   18634:	mov	r1, r4
   18638:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   1863c:	ldrb	r0, [r6, #4]
   18640:	mov	r1, #0
   18644:	ldr	r9, [fp, #12]
   18648:	cmp	r0, #9
   1864c:	beq	18698 <__mempcpy_chk@plt+0x70b8>
   18650:	ldr	r0, [fp, #8]
   18654:	stm	sp, {r0, r9}
   18658:	mov	r0, r4
   1865c:	mov	r1, r7
   18660:	mov	r2, r6
   18664:	mov	r3, r5
   18668:	bl	17374 <__mempcpy_chk@plt+0x5d94>
   1866c:	mov	r1, r0
   18670:	ldr	r0, [r9]
   18674:	mov	r5, #0
   18678:	cmp	r0, #0
   1867c:	bne	186d0 <__mempcpy_chk@plt+0x70f0>
   18680:	ldrb	r0, [r6, #4]
   18684:	cmp	r0, #9
   18688:	bne	186e8 <__mempcpy_chk@plt+0x7108>
   1868c:	ldr	r0, [r9]
   18690:	cmp	r0, #0
   18694:	bne	186d0 <__mempcpy_chk@plt+0x70f0>
   18698:	cmp	sl, #8
   1869c:	ldrls	r0, [r8, #84]	; 0x54
   186a0:	movls	r2, #1
   186a4:	orrls	r0, r0, r2, lsl sl
   186a8:	strls	r0, [r8, #84]	; 0x54
   186ac:	mov	r5, #0
   186b0:	mov	r0, r8
   186b4:	mov	r2, #0
   186b8:	mov	r3, #17
   186bc:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   186c0:	cmp	r0, #0
   186c4:	beq	186dc <__mempcpy_chk@plt+0x70fc>
   186c8:	str	sl, [r0, #20]
   186cc:	mov	r5, r0
   186d0:	mov	r0, r5
   186d4:	sub	sp, fp, #28
   186d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186dc:	mov	r0, #12
   186e0:	str	r0, [r9]
   186e4:	b	186d0 <__mempcpy_chk@plt+0x70f0>
   186e8:	cmp	r1, #0
   186ec:	beq	18708 <__mempcpy_chk@plt+0x7128>
   186f0:	movw	r2, #32656	; 0x7f90
   186f4:	movt	r2, #1
   186f8:	mov	r0, r1
   186fc:	mov	r1, r2
   18700:	mov	r2, #0
   18704:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   18708:	mov	r0, #8
   1870c:	str	r0, [r9]
   18710:	b	186d0 <__mempcpy_chk@plt+0x70f0>
   18714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18718:	add	fp, sp, #28
   1871c:	sub	sp, sp, #124	; 0x7c
   18720:	mov	r8, r3
   18724:	mov	r6, r2
   18728:	mov	r9, r1
   1872c:	mov	r7, r0
   18730:	mov	r5, #0
   18734:	str	r5, [fp, #-32]	; 0xffffffe0
   18738:	str	r5, [fp, #-36]	; 0xffffffdc
   1873c:	mov	r0, #32
   18740:	mov	r1, #1
   18744:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   18748:	mov	r4, r0
   1874c:	mov	r0, #40	; 0x28
   18750:	mov	r1, #1
   18754:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   18758:	mov	sl, r0
   1875c:	cmp	r4, #0
   18760:	cmpne	sl, #0
   18764:	beq	18bf0 <__mempcpy_chk@plt+0x7610>
   18768:	mov	r0, r6
   1876c:	mov	r1, r7
   18770:	mov	r2, r8
   18774:	bl	19238 <__mempcpy_chk@plt+0x7c58>
   18778:	mov	r5, r0
   1877c:	ldrb	r0, [r6, #4]
   18780:	cmp	r0, #25
   18784:	beq	18798 <__mempcpy_chk@plt+0x71b8>
   18788:	cmp	r0, #2
   1878c:	beq	18be8 <__mempcpy_chk@plt+0x7608>
   18790:	mov	r0, #0
   18794:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18798:	ldrb	r0, [sl, #16]
   1879c:	orr	r0, r0, #1
   187a0:	strb	r0, [sl, #16]
   187a4:	tst	r8, #256	; 0x100
   187a8:	beq	187b8 <__mempcpy_chk@plt+0x71d8>
   187ac:	mov	r0, r4
   187b0:	mov	r1, #10
   187b4:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   187b8:	ldr	r0, [r7, #40]	; 0x28
   187bc:	add	r0, r0, r5
   187c0:	str	r0, [r7, #40]	; 0x28
   187c4:	mov	r0, r6
   187c8:	mov	r1, r7
   187cc:	mov	r2, r8
   187d0:	bl	19238 <__mempcpy_chk@plt+0x7c58>
   187d4:	mov	r5, r0
   187d8:	ldrb	r0, [r6, #4]
   187dc:	cmp	r0, #2
   187e0:	beq	18be8 <__mempcpy_chk@plt+0x7608>
   187e4:	mov	r0, #1
   187e8:	str	r0, [sp, #20]
   187ec:	ldr	r0, [r6, #4]
   187f0:	uxtb	r1, r0
   187f4:	cmp	r1, #21
   187f8:	moveq	r1, #1
   187fc:	bfieq	r0, r1, #0, #8
   18800:	streq	r0, [r6, #4]
   18804:	str	sl, [sp, #24]
   18808:	mov	r0, #3
   1880c:	str	r0, [fp, #-44]	; 0xffffffd4
   18810:	add	r0, sp, #68	; 0x44
   18814:	str	r0, [fp, #-40]	; 0xffffffd8
   18818:	mov	r0, #1
   1881c:	str	r8, [sp]
   18820:	str	r0, [sp, #4]
   18824:	sub	r0, fp, #44	; 0x2c
   18828:	mov	r1, r7
   1882c:	mov	r2, r6
   18830:	mov	r3, r5
   18834:	bl	193d0 <__mempcpy_chk@plt+0x7df0>
   18838:	cmp	r0, #0
   1883c:	bne	18bd8 <__mempcpy_chk@plt+0x75f8>
   18840:	mov	r0, #0
   18844:	str	r0, [sp, #16]
   18848:	mov	r0, r6
   1884c:	mov	r1, r7
   18850:	mov	r2, r8
   18854:	bl	19238 <__mempcpy_chk@plt+0x7c58>
   18858:	mov	sl, r0
   1885c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   18860:	cmp	r5, #2
   18864:	beq	188cc <__mempcpy_chk@plt+0x72ec>
   18868:	cmp	r5, #4
   1886c:	bne	18890 <__mempcpy_chk@plt+0x72b0>
   18870:	ldr	r0, [r7, #64]	; 0x40
   18874:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18878:	stm	sp, {r1, r8}
   1887c:	mov	r1, r4
   18880:	ldr	r2, [sp, #24]
   18884:	sub	r3, fp, #36	; 0x24
   18888:	bl	1976c <__mempcpy_chk@plt+0x818c>
   1888c:	b	188d8 <__mempcpy_chk@plt+0x72f8>
   18890:	ldrb	r0, [r6, #4]
   18894:	cmp	r0, #22
   18898:	beq	18938 <__mempcpy_chk@plt+0x7358>
   1889c:	cmp	r0, #2
   188a0:	beq	18bd4 <__mempcpy_chk@plt+0x75f4>
   188a4:	cmp	r5, #1
   188a8:	beq	189f8 <__mempcpy_chk@plt+0x7418>
   188ac:	cmp	r5, #2
   188b0:	beq	188cc <__mempcpy_chk@plt+0x72ec>
   188b4:	cmp	r5, #3
   188b8:	bne	18a28 <__mempcpy_chk@plt+0x7448>
   188bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   188c0:	mov	r0, r4
   188c4:	bl	19734 <__mempcpy_chk@plt+0x8154>
   188c8:	b	188d8 <__mempcpy_chk@plt+0x72f8>
   188cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   188d0:	mov	r0, r4
   188d4:	bl	196fc <__mempcpy_chk@plt+0x811c>
   188d8:	ldr	r1, [fp, #8]
   188dc:	str	r0, [r1]
   188e0:	cmp	r0, #0
   188e4:	bne	18be0 <__mempcpy_chk@plt+0x7600>
   188e8:	ldrb	r0, [r6, #4]
   188ec:	cmp	r0, #21
   188f0:	beq	18a60 <__mempcpy_chk@plt+0x7480>
   188f4:	cmp	r0, #2
   188f8:	beq	18bd4 <__mempcpy_chk@plt+0x75f4>
   188fc:	mov	r0, #3
   18900:	str	r0, [fp, #-44]	; 0xffffffd4
   18904:	add	r0, sp, #68	; 0x44
   18908:	str	r0, [fp, #-40]	; 0xffffffd8
   1890c:	str	r8, [sp]
   18910:	mov	r0, #0
   18914:	str	r0, [sp, #4]
   18918:	sub	r0, fp, #44	; 0x2c
   1891c:	mov	r1, r7
   18920:	mov	r2, r6
   18924:	mov	r3, sl
   18928:	bl	193d0 <__mempcpy_chk@plt+0x7df0>
   1892c:	cmp	r0, #0
   18930:	beq	18848 <__mempcpy_chk@plt+0x7268>
   18934:	b	18bd8 <__mempcpy_chk@plt+0x75f8>
   18938:	ldr	r0, [r7, #40]	; 0x28
   1893c:	add	r0, r0, sl
   18940:	str	r0, [r7, #40]	; 0x28
   18944:	add	r0, sp, #28
   18948:	mov	r1, r7
   1894c:	mov	r2, r8
   18950:	bl	19238 <__mempcpy_chk@plt+0x7c58>
   18954:	mov	r3, r0
   18958:	ldrb	r0, [sp, #32]
   1895c:	cmp	r0, #21
   18960:	beq	189dc <__mempcpy_chk@plt+0x73fc>
   18964:	cmp	r0, #2
   18968:	sub	r1, fp, #52	; 0x34
   1896c:	beq	18bd4 <__mempcpy_chk@plt+0x75f4>
   18970:	mov	r0, #3
   18974:	str	r0, [fp, #-52]	; 0xffffffcc
   18978:	add	r0, sp, #36	; 0x24
   1897c:	str	r0, [fp, #-48]	; 0xffffffd0
   18980:	str	r8, [sp]
   18984:	mov	r0, #1
   18988:	str	r0, [sp, #4]
   1898c:	mov	r0, r1
   18990:	mov	r5, r1
   18994:	mov	r1, r7
   18998:	add	r2, sp, #28
   1899c:	bl	193d0 <__mempcpy_chk@plt+0x7df0>
   189a0:	cmp	r0, #0
   189a4:	bne	18bd8 <__mempcpy_chk@plt+0x75f8>
   189a8:	mov	r0, r6
   189ac:	mov	r1, r7
   189b0:	mov	r2, r8
   189b4:	bl	19238 <__mempcpy_chk@plt+0x7c58>
   189b8:	mov	sl, r0
   189bc:	stm	sp, {r5, r9}
   189c0:	str	r8, [sp, #8]
   189c4:	mov	r0, r4
   189c8:	ldr	r1, [sp, #24]
   189cc:	sub	r2, fp, #32
   189d0:	sub	r3, fp, #44	; 0x2c
   189d4:	bl	194d8 <__mempcpy_chk@plt+0x7ef8>
   189d8:	b	188d8 <__mempcpy_chk@plt+0x72f8>
   189dc:	ldr	r0, [r7, #40]	; 0x28
   189e0:	sub	r0, r0, sl
   189e4:	str	r0, [r7, #40]	; 0x28
   189e8:	mov	r0, #1
   189ec:	strb	r0, [r6, #4]
   189f0:	cmp	r5, #1
   189f4:	bne	188ac <__mempcpy_chk@plt+0x72cc>
   189f8:	ldr	r5, [sp, #24]
   189fc:	ldr	r0, [r5, #20]
   18a00:	ldr	r1, [sp, #16]
   18a04:	cmp	r1, r0
   18a08:	beq	18a38 <__mempcpy_chk@plt+0x7458>
   18a0c:	ldr	r0, [r5]
   18a10:	ldr	r1, [r5, #20]
   18a14:	add	r2, r1, #1
   18a18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a1c:	str	r2, [r5, #20]
   18a20:	str	r3, [r0, r1, lsl #2]
   18a24:	b	188e8 <__mempcpy_chk@plt+0x7308>
   18a28:	ldrb	r1, [fp, #-40]	; 0xffffffd8
   18a2c:	mov	r0, r4
   18a30:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   18a34:	b	188e8 <__mempcpy_chk@plt+0x7308>
   18a38:	mov	r1, #1
   18a3c:	orr	r0, r1, r0, lsl #1
   18a40:	str	r0, [sp, #16]
   18a44:	lsl	r1, r0, #2
   18a48:	ldr	r0, [r5]
   18a4c:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   18a50:	cmp	r0, #0
   18a54:	beq	18c10 <__mempcpy_chk@plt+0x7630>
   18a58:	str	r0, [r5]
   18a5c:	b	18a0c <__mempcpy_chk@plt+0x742c>
   18a60:	ldr	r0, [r7, #40]	; 0x28
   18a64:	add	r0, r0, sl
   18a68:	str	r0, [r7, #40]	; 0x28
   18a6c:	ldr	r0, [sp, #20]
   18a70:	cmp	r0, #0
   18a74:	movne	r0, r4
   18a78:	blne	19fd4 <__mempcpy_chk@plt+0x89f4>
   18a7c:	ldr	r0, [r9, #92]	; 0x5c
   18a80:	cmp	r0, #2
   18a84:	ldr	sl, [sp, #24]
   18a88:	blt	18a98 <__mempcpy_chk@plt+0x74b8>
   18a8c:	ldr	r1, [r9, #60]	; 0x3c
   18a90:	mov	r0, r4
   18a94:	bl	19ff4 <__mempcpy_chk@plt+0x8a14>
   18a98:	ldr	r0, [sl, #20]
   18a9c:	cmp	r0, #0
   18aa0:	bne	18ac8 <__mempcpy_chk@plt+0x74e8>
   18aa4:	ldr	r0, [sl, #24]
   18aa8:	cmp	r0, #0
   18aac:	bne	18ac8 <__mempcpy_chk@plt+0x74e8>
   18ab0:	ldr	r0, [sl, #28]
   18ab4:	cmp	r0, #0
   18ab8:	bne	18ac8 <__mempcpy_chk@plt+0x74e8>
   18abc:	ldr	r0, [sl, #32]
   18ac0:	cmp	r0, #0
   18ac4:	beq	18b84 <__mempcpy_chk@plt+0x75a4>
   18ac8:	ldrb	r0, [r9, #88]	; 0x58
   18acc:	orr	r0, r0, #2
   18ad0:	strb	r0, [r9, #88]	; 0x58
   18ad4:	str	sl, [sp, #68]	; 0x44
   18ad8:	ldr	r7, [sp, #72]	; 0x48
   18adc:	mov	r0, #6
   18ae0:	strb	r0, [sp, #72]	; 0x48
   18ae4:	mov	r6, #0
   18ae8:	add	r3, sp, #68	; 0x44
   18aec:	mov	r0, r9
   18af0:	mov	r1, #0
   18af4:	mov	r2, #0
   18af8:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18afc:	cmp	r0, #0
   18b00:	beq	18c14 <__mempcpy_chk@plt+0x7634>
   18b04:	mov	r5, r0
   18b08:	bic	r0, r7, #255	; 0xff
   18b0c:	ldr	r1, [r4, r6, lsl #2]
   18b10:	cmp	r1, #0
   18b14:	bne	18b30 <__mempcpy_chk@plt+0x7550>
   18b18:	add	r6, r6, #1
   18b1c:	cmp	r6, #7
   18b20:	bls	18b0c <__mempcpy_chk@plt+0x752c>
   18b24:	mov	r0, r4
   18b28:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18b2c:	b	18b78 <__mempcpy_chk@plt+0x7598>
   18b30:	str	r4, [sp, #68]	; 0x44
   18b34:	orr	r0, r0, #3
   18b38:	str	r0, [sp, #72]	; 0x48
   18b3c:	add	r3, sp, #68	; 0x44
   18b40:	mov	r0, r9
   18b44:	mov	r1, #0
   18b48:	mov	r2, #0
   18b4c:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18b50:	cmp	r0, #0
   18b54:	beq	18c14 <__mempcpy_chk@plt+0x7634>
   18b58:	mov	r1, r0
   18b5c:	mov	r0, r9
   18b60:	mov	r2, r5
   18b64:	mov	r3, #10
   18b68:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   18b6c:	mov	r5, r0
   18b70:	cmp	r0, #0
   18b74:	beq	18c14 <__mempcpy_chk@plt+0x7634>
   18b78:	mov	r0, r5
   18b7c:	sub	sp, fp, #28
   18b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b84:	ldr	r0, [r9, #92]	; 0x5c
   18b88:	cmp	r0, #2
   18b8c:	blt	18ba8 <__mempcpy_chk@plt+0x75c8>
   18b90:	ldr	r0, [sl, #36]	; 0x24
   18b94:	cmp	r0, #0
   18b98:	bne	18ac8 <__mempcpy_chk@plt+0x74e8>
   18b9c:	ldrb	r0, [sl, #16]
   18ba0:	tst	r0, #1
   18ba4:	bne	18ac8 <__mempcpy_chk@plt+0x74e8>
   18ba8:	mov	r0, sl
   18bac:	bl	1600c <__mempcpy_chk@plt+0x4a2c>
   18bb0:	str	r4, [sp, #68]	; 0x44
   18bb4:	mov	r0, #3
   18bb8:	strb	r0, [sp, #72]	; 0x48
   18bbc:	add	r3, sp, #68	; 0x44
   18bc0:	mov	r0, r9
   18bc4:	mov	r1, #0
   18bc8:	mov	r2, #0
   18bcc:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18bd0:	b	18b6c <__mempcpy_chk@plt+0x758c>
   18bd4:	mov	r0, #7
   18bd8:	ldr	r1, [fp, #8]
   18bdc:	str	r0, [r1]
   18be0:	ldr	sl, [sp, #24]
   18be4:	b	18c20 <__mempcpy_chk@plt+0x7640>
   18be8:	mov	r0, #2
   18bec:	b	18c18 <__mempcpy_chk@plt+0x7638>
   18bf0:	mov	r0, r4
   18bf4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18bf8:	mov	r0, sl
   18bfc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18c00:	mov	r0, #12
   18c04:	ldr	r1, [fp, #8]
   18c08:	str	r0, [r1]
   18c0c:	b	18b78 <__mempcpy_chk@plt+0x7598>
   18c10:	mov	sl, r5
   18c14:	mov	r0, #12
   18c18:	ldr	r1, [fp, #8]
   18c1c:	str	r0, [r1]
   18c20:	mov	r0, r4
   18c24:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18c28:	mov	r0, sl
   18c2c:	bl	1600c <__mempcpy_chk@plt+0x4a2c>
   18c30:	mov	r5, #0
   18c34:	b	18b78 <__mempcpy_chk@plt+0x7598>
   18c38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18c3c:	add	fp, sp, #24
   18c40:	mov	r4, r0
   18c44:	ldrb	r0, [r0, #88]	; 0x58
   18c48:	orr	r1, r0, #16
   18c4c:	strb	r1, [r4, #88]	; 0x58
   18c50:	tst	r0, #8
   18c54:	bne	18c90 <__mempcpy_chk@plt+0x76b0>
   18c58:	movw	r1, #0
   18c5c:	movt	r1, #1023	; 0x3ff
   18c60:	mov	r2, #0
   18c64:	mvn	r3, #2013265921	; 0x78000001
   18c68:	mvn	r7, #-134217727	; 0xf8000001
   18c6c:	str	r2, [r4, #96]	; 0x60
   18c70:	add	r2, r4, #100	; 0x64
   18c74:	stm	r2, {r1, r3, r7}
   18c78:	tst	r0, #4
   18c7c:	beq	18c9c <__mempcpy_chk@plt+0x76bc>
   18c80:	vmov.i32	q8, #0	; 0x00000000
   18c84:	add	r0, r4, #112	; 0x70
   18c88:	vst1.32	{d16-d17}, [r0]
   18c8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18c90:	mov	r5, #0
   18c94:	mov	r8, #0
   18c98:	b	18ca4 <__mempcpy_chk@plt+0x76c4>
   18c9c:	mov	r8, #4
   18ca0:	mov	r5, #128	; 0x80
   18ca4:	bl	114b4 <__ctype_b_loc@plt>
   18ca8:	ldr	r0, [r0]
   18cac:	add	r6, r0, r5, lsl #1
   18cb0:	mov	r1, #1
   18cb4:	b	18ccc <__mempcpy_chk@plt+0x76ec>
   18cb8:	add	r6, r6, #64	; 0x40
   18cbc:	add	r8, r8, #1
   18cc0:	add	r5, r5, #32
   18cc4:	cmp	r8, #8
   18cc8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   18ccc:	add	r0, r4, r8, lsl #2
   18cd0:	add	r2, r0, #96	; 0x60
   18cd4:	mov	r3, #0
   18cd8:	mov	r0, r6
   18cdc:	add	r7, r5, r3
   18ce0:	cmp	r7, #95	; 0x5f
   18ce4:	beq	18cf4 <__mempcpy_chk@plt+0x7714>
   18ce8:	ldrh	r7, [r0]
   18cec:	ands	r7, r7, #8
   18cf0:	beq	18d00 <__mempcpy_chk@plt+0x7720>
   18cf4:	ldr	r7, [r2]
   18cf8:	orr	r7, r7, r1, lsl r3
   18cfc:	str	r7, [r2]
   18d00:	add	r0, r0, #2
   18d04:	add	r3, r3, #1
   18d08:	cmp	r3, #32
   18d0c:	bne	18cdc <__mempcpy_chk@plt+0x76fc>
   18d10:	b	18cb8 <__mempcpy_chk@plt+0x76d8>
   18d14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d18:	add	fp, sp, #28
   18d1c:	sub	sp, sp, #20
   18d20:	mov	r8, r3
   18d24:	mov	r6, r2
   18d28:	mov	r4, r1
   18d2c:	mov	r9, r0
   18d30:	mov	r7, #0
   18d34:	str	r7, [sp, #16]
   18d38:	mov	r0, #32
   18d3c:	mov	r1, #1
   18d40:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   18d44:	ldr	r1, [fp, #12]
   18d48:	cmp	r0, #0
   18d4c:	beq	18ebc <__mempcpy_chk@plt+0x78dc>
   18d50:	mov	r5, r0
   18d54:	mov	r0, #40	; 0x28
   18d58:	mov	r1, #1
   18d5c:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   18d60:	cmp	r0, #0
   18d64:	beq	18ec8 <__mempcpy_chk@plt+0x78e8>
   18d68:	mov	sl, r0
   18d6c:	ldr	r1, [fp, #8]
   18d70:	ldrb	r0, [r0, #16]
   18d74:	and	r0, r0, #254	; 0xfe
   18d78:	orr	r0, r0, r1
   18d7c:	strb	r0, [sl, #16]
   18d80:	mov	r7, #0
   18d84:	stm	sp, {r6, r7}
   18d88:	add	r3, sp, #16
   18d8c:	mov	r0, r4
   18d90:	mov	r1, r5
   18d94:	mov	r2, sl
   18d98:	bl	1976c <__mempcpy_chk@plt+0x818c>
   18d9c:	cmp	r0, #0
   18da0:	bne	18ee4 <__mempcpy_chk@plt+0x7904>
   18da4:	ldrb	r0, [r8]
   18da8:	cmp	r0, #0
   18dac:	beq	18dcc <__mempcpy_chk@plt+0x77ec>
   18db0:	add	r4, r8, #1
   18db4:	uxtb	r1, r0
   18db8:	mov	r0, r5
   18dbc:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   18dc0:	ldrb	r0, [r4], #1
   18dc4:	cmp	r0, #0
   18dc8:	bne	18db4 <__mempcpy_chk@plt+0x77d4>
   18dcc:	ldr	r0, [fp, #8]
   18dd0:	cmp	r0, #0
   18dd4:	movne	r0, r5
   18dd8:	blne	19fd4 <__mempcpy_chk@plt+0x89f4>
   18ddc:	ldr	r0, [r9, #92]	; 0x5c
   18de0:	cmp	r0, #2
   18de4:	blt	18df4 <__mempcpy_chk@plt+0x7814>
   18de8:	ldr	r1, [r9, #60]	; 0x3c
   18dec:	mov	r0, r5
   18df0:	bl	19ff4 <__mempcpy_chk@plt+0x8a14>
   18df4:	str	r5, [sp, #8]
   18df8:	ldr	r4, [sp, #12]
   18dfc:	bfc	r4, #0, #23
   18e00:	orr	r0, r4, #3
   18e04:	str	r0, [sp, #12]
   18e08:	mov	r7, #0
   18e0c:	add	r3, sp, #8
   18e10:	mov	r0, r9
   18e14:	mov	r1, #0
   18e18:	mov	r2, #0
   18e1c:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18e20:	cmp	r0, #0
   18e24:	beq	18ea0 <__mempcpy_chk@plt+0x78c0>
   18e28:	mov	r6, r0
   18e2c:	ldr	r0, [r9, #92]	; 0x5c
   18e30:	cmp	r0, #2
   18e34:	blt	18e88 <__mempcpy_chk@plt+0x78a8>
   18e38:	str	sl, [sp, #8]
   18e3c:	orr	r0, r4, #6
   18e40:	str	r0, [sp, #12]
   18e44:	ldrb	r0, [r9, #88]	; 0x58
   18e48:	orr	r0, r0, #2
   18e4c:	strb	r0, [r9, #88]	; 0x58
   18e50:	add	r3, sp, #8
   18e54:	mov	r0, r9
   18e58:	mov	r1, #0
   18e5c:	mov	r2, #0
   18e60:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   18e64:	cmp	r0, #0
   18e68:	beq	18ea0 <__mempcpy_chk@plt+0x78c0>
   18e6c:	mov	r2, r0
   18e70:	mov	r0, r9
   18e74:	mov	r1, r6
   18e78:	mov	r3, #10
   18e7c:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   18e80:	mov	r7, r0
   18e84:	b	18e94 <__mempcpy_chk@plt+0x78b4>
   18e88:	mov	r0, sl
   18e8c:	bl	1600c <__mempcpy_chk@plt+0x4a2c>
   18e90:	mov	r7, r6
   18e94:	mov	r0, r7
   18e98:	sub	sp, fp, #28
   18e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ea0:	mov	r0, r5
   18ea4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18ea8:	mov	r0, sl
   18eac:	bl	1600c <__mempcpy_chk@plt+0x4a2c>
   18eb0:	mov	r0, #12
   18eb4:	ldr	r1, [fp, #12]
   18eb8:	b	18ec0 <__mempcpy_chk@plt+0x78e0>
   18ebc:	mov	r0, #12
   18ec0:	str	r0, [r1]
   18ec4:	b	18e94 <__mempcpy_chk@plt+0x78b4>
   18ec8:	mov	r0, r5
   18ecc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18ed0:	mov	r0, #12
   18ed4:	ldr	r1, [fp, #12]
   18ed8:	str	r0, [r1]
   18edc:	mov	r7, #0
   18ee0:	b	18e94 <__mempcpy_chk@plt+0x78b4>
   18ee4:	mov	r6, r0
   18ee8:	mov	r0, r5
   18eec:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   18ef0:	mov	r0, sl
   18ef4:	bl	1600c <__mempcpy_chk@plt+0x4a2c>
   18ef8:	ldr	r0, [fp, #12]
   18efc:	str	r6, [r0]
   18f00:	b	18e94 <__mempcpy_chk@plt+0x78b4>
   18f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f08:	add	fp, sp, #28
   18f0c:	sub	sp, sp, #20
   18f10:	mov	r7, r3
   18f14:	mov	r5, r2
   18f18:	mov	r8, r1
   18f1c:	mov	r4, r0
   18f20:	ldrb	r0, [r3, #4]
   18f24:	ldr	r1, [fp, #12]
   18f28:	str	r1, [sp, #16]
   18f2c:	ldr	sl, [fp, #8]
   18f30:	cmp	r0, #23
   18f34:	bne	18f8c <__mempcpy_chk@plt+0x79ac>
   18f38:	ldr	r0, [r7]
   18f3c:	str	r0, [sp, #12]
   18f40:	ldr	r0, [r7, #4]
   18f44:	str	r0, [sp, #8]
   18f48:	ldr	r0, [r8, #40]	; 0x28
   18f4c:	str	r0, [sp, #4]
   18f50:	mov	r0, r8
   18f54:	mov	r1, r7
   18f58:	mov	r2, sl
   18f5c:	bl	1a248 <__mempcpy_chk@plt+0x8c68>
   18f60:	cmn	r0, #1
   18f64:	bne	18fa8 <__mempcpy_chk@plt+0x79c8>
   18f68:	ldrb	r0, [r7, #4]
   18f6c:	cmp	r0, #1
   18f70:	bne	18f84 <__mempcpy_chk@plt+0x79a4>
   18f74:	ldrb	r0, [r7]
   18f78:	mov	r6, #0
   18f7c:	cmp	r0, #44	; 0x2c
   18f80:	beq	18fb4 <__mempcpy_chk@plt+0x79d4>
   18f84:	mov	r0, #10
   18f88:	b	191fc <__mempcpy_chk@plt+0x7c1c>
   18f8c:	mvn	r9, #0
   18f90:	cmp	r0, #19
   18f94:	movweq	r9, #1
   18f98:	sub	r0, r0, #18
   18f9c:	clz	r0, r0
   18fa0:	lsr	r6, r0, #5
   18fa4:	b	1904c <__mempcpy_chk@plt+0x7a6c>
   18fa8:	mov	r6, r0
   18fac:	cmn	r0, #2
   18fb0:	beq	18fd4 <__mempcpy_chk@plt+0x79f4>
   18fb4:	ldrb	r0, [r7, #4]
   18fb8:	cmp	r0, #24
   18fbc:	mov	r9, r6
   18fc0:	beq	1901c <__mempcpy_chk@plt+0x7a3c>
   18fc4:	cmp	r0, #1
   18fc8:	ldrbeq	r0, [r7]
   18fcc:	cmpeq	r0, #44	; 0x2c
   18fd0:	beq	19000 <__mempcpy_chk@plt+0x7a20>
   18fd4:	tst	sl, #2097152	; 0x200000
   18fd8:	beq	19214 <__mempcpy_chk@plt+0x7c34>
   18fdc:	ldr	r0, [sp, #4]
   18fe0:	str	r0, [r8, #40]	; 0x28
   18fe4:	ldr	r0, [sp, #12]
   18fe8:	str	r0, [r7]
   18fec:	ldr	r0, [sp, #8]
   18ff0:	str	r0, [r7, #4]
   18ff4:	mov	r0, #1
   18ff8:	strb	r0, [r7, #4]
   18ffc:	b	19208 <__mempcpy_chk@plt+0x7c28>
   19000:	mov	r0, r8
   19004:	mov	r1, r7
   19008:	mov	r2, sl
   1900c:	bl	1a248 <__mempcpy_chk@plt+0x8c68>
   19010:	mov	r9, r0
   19014:	cmn	r0, #2
   19018:	beq	18fd4 <__mempcpy_chk@plt+0x79f4>
   1901c:	cmn	r9, #1
   19020:	beq	1902c <__mempcpy_chk@plt+0x7a4c>
   19024:	cmp	r6, r9
   19028:	bgt	18f84 <__mempcpy_chk@plt+0x79a4>
   1902c:	ldrb	r0, [r7, #4]
   19030:	cmp	r0, #24
   19034:	bne	18f84 <__mempcpy_chk@plt+0x79a4>
   19038:	cmn	r9, #1
   1903c:	mov	r0, r9
   19040:	moveq	r0, r6
   19044:	cmp	r0, #32768	; 0x8000
   19048:	bge	19230 <__mempcpy_chk@plt+0x7c50>
   1904c:	mov	r0, r7
   19050:	mov	r1, r8
   19054:	mov	r2, sl
   19058:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   1905c:	cmp	r4, #0
   19060:	beq	19204 <__mempcpy_chk@plt+0x7c24>
   19064:	orrs	r0, r9, r6
   19068:	beq	1915c <__mempcpy_chk@plt+0x7b7c>
   1906c:	mov	r8, #0
   19070:	cmp	r6, #1
   19074:	bge	19174 <__mempcpy_chk@plt+0x7b94>
   19078:	ldrb	r0, [r4, #24]
   1907c:	cmp	r0, #17
   19080:	bne	19098 <__mempcpy_chk@plt+0x7ab8>
   19084:	ldr	r2, [r4, #20]
   19088:	movw	r1, #41932	; 0xa3cc
   1908c:	movt	r1, #1
   19090:	mov	r0, r4
   19094:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   19098:	mov	r3, #10
   1909c:	cmn	r9, #1
   190a0:	movweq	r3, #11
   190a4:	mov	r0, r5
   190a8:	mov	r1, r4
   190ac:	mov	r2, #0
   190b0:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   190b4:	cmp	r0, #0
   190b8:	beq	191f8 <__mempcpy_chk@plt+0x7c18>
   190bc:	mov	r7, r0
   190c0:	add	r0, r6, #2
   190c4:	cmp	r0, r9
   190c8:	ble	190f0 <__mempcpy_chk@plt+0x7b10>
   190cc:	cmp	r8, #0
   190d0:	beq	19154 <__mempcpy_chk@plt+0x7b74>
   190d4:	mov	r0, r5
   190d8:	mov	r1, r8
   190dc:	mov	r2, r7
   190e0:	mov	r3, #16
   190e4:	sub	sp, fp, #28
   190e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190ec:	b	174e0 <__mempcpy_chk@plt+0x5f00>
   190f0:	add	r6, r6, #1
   190f4:	mov	r0, r4
   190f8:	mov	r1, r5
   190fc:	bl	1a2f0 <__mempcpy_chk@plt+0x8d10>
   19100:	mov	r4, r0
   19104:	mov	r0, r5
   19108:	mov	r1, r7
   1910c:	mov	r2, r4
   19110:	mov	r3, #16
   19114:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   19118:	cmp	r4, #0
   1911c:	movne	r1, r0
   19120:	cmpne	r0, #0
   19124:	beq	191f8 <__mempcpy_chk@plt+0x7c18>
   19128:	mov	r0, r5
   1912c:	mov	r2, #0
   19130:	mov	r3, #10
   19134:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   19138:	cmp	r0, #0
   1913c:	beq	191f8 <__mempcpy_chk@plt+0x7c18>
   19140:	mov	r7, r0
   19144:	add	r6, r6, #1
   19148:	cmp	r6, r9
   1914c:	blt	190f4 <__mempcpy_chk@plt+0x7b14>
   19150:	b	190cc <__mempcpy_chk@plt+0x7aec>
   19154:	mov	r4, r7
   19158:	b	19208 <__mempcpy_chk@plt+0x7c28>
   1915c:	movw	r1, #32656	; 0x7f90
   19160:	movt	r1, #1
   19164:	mov	r0, r4
   19168:	mov	r2, #0
   1916c:	bl	17f18 <__mempcpy_chk@plt+0x6938>
   19170:	b	19204 <__mempcpy_chk@plt+0x7c24>
   19174:	bne	191a0 <__mempcpy_chk@plt+0x7bc0>
   19178:	mov	r8, r4
   1917c:	cmp	r6, r9
   19180:	beq	191f0 <__mempcpy_chk@plt+0x7c10>
   19184:	mov	r0, r4
   19188:	mov	r1, r5
   1918c:	bl	1a2f0 <__mempcpy_chk@plt+0x8d10>
   19190:	mov	r4, r0
   19194:	cmp	r0, #0
   19198:	bne	19078 <__mempcpy_chk@plt+0x7a98>
   1919c:	b	191f8 <__mempcpy_chk@plt+0x7c18>
   191a0:	mov	r7, #1
   191a4:	mov	r8, r4
   191a8:	mov	r0, r4
   191ac:	mov	r1, r5
   191b0:	bl	1a2f0 <__mempcpy_chk@plt+0x8d10>
   191b4:	mov	r4, r0
   191b8:	mov	r0, r5
   191bc:	mov	r1, r8
   191c0:	mov	r2, r4
   191c4:	mov	r3, #16
   191c8:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   191cc:	cmp	r4, #0
   191d0:	movne	r8, r0
   191d4:	cmpne	r0, #0
   191d8:	beq	191f8 <__mempcpy_chk@plt+0x7c18>
   191dc:	add	r7, r7, #1
   191e0:	cmp	r7, r6
   191e4:	blt	191a8 <__mempcpy_chk@plt+0x7bc8>
   191e8:	cmp	r6, r9
   191ec:	bne	19184 <__mempcpy_chk@plt+0x7ba4>
   191f0:	mov	r4, r8
   191f4:	b	19208 <__mempcpy_chk@plt+0x7c28>
   191f8:	mov	r0, #12
   191fc:	ldr	r1, [sp, #16]
   19200:	str	r0, [r1]
   19204:	mov	r4, #0
   19208:	mov	r0, r4
   1920c:	sub	sp, fp, #28
   19210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19214:	ldrb	r0, [r7, #4]
   19218:	mov	r1, #10
   1921c:	cmp	r0, #2
   19220:	movweq	r1, #9
   19224:	ldr	r0, [sp, #16]
   19228:	str	r1, [r0]
   1922c:	b	19204 <__mempcpy_chk@plt+0x7c24>
   19230:	mov	r0, #15
   19234:	b	191fc <__mempcpy_chk@plt+0x7c1c>
   19238:	push	{r4, sl, fp, lr}
   1923c:	add	fp, sp, #8
   19240:	ldr	ip, [r1, #40]	; 0x28
   19244:	ldr	r3, [r1, #56]	; 0x38
   19248:	cmp	r3, ip
   1924c:	ble	192cc <__mempcpy_chk@plt+0x7cec>
   19250:	ldr	r3, [r1, #4]
   19254:	ldrb	ip, [r3, ip]
   19258:	strb	ip, [r0]
   1925c:	ldr	r3, [r1, #80]	; 0x50
   19260:	cmp	r3, #2
   19264:	blt	19288 <__mempcpy_chk@plt+0x7ca8>
   19268:	ldr	lr, [r1, #28]
   1926c:	ldr	r4, [r1, #40]	; 0x28
   19270:	cmp	r4, lr
   19274:	beq	19288 <__mempcpy_chk@plt+0x7ca8>
   19278:	ldr	r3, [r1, #8]
   1927c:	ldr	r3, [r3, r4, lsl #2]
   19280:	cmn	r3, #1
   19284:	beq	19378 <__mempcpy_chk@plt+0x7d98>
   19288:	tst	r2, #1
   1928c:	beq	192e0 <__mempcpy_chk@plt+0x7d00>
   19290:	cmp	ip, #92	; 0x5c
   19294:	bne	192e0 <__mempcpy_chk@plt+0x7d00>
   19298:	ldr	r2, [r1, #40]	; 0x28
   1929c:	ldr	r3, [r1, #48]	; 0x30
   192a0:	add	r2, r2, #1
   192a4:	cmp	r2, r3
   192a8:	bge	19378 <__mempcpy_chk@plt+0x7d98>
   192ac:	str	r2, [r1, #40]	; 0x28
   192b0:	ldr	r1, [r1, #4]
   192b4:	ldrb	r2, [r1, r2]
   192b8:	mov	r1, #1
   192bc:	strb	r1, [r0, #4]
   192c0:	strb	r2, [r0]
   192c4:	mov	r0, r1
   192c8:	pop	{r4, sl, fp, pc}
   192cc:	mov	r1, #2
   192d0:	strb	r1, [r0, #4]
   192d4:	mov	r1, #0
   192d8:	mov	r0, r1
   192dc:	pop	{r4, sl, fp, pc}
   192e0:	cmp	ip, #92	; 0x5c
   192e4:	bgt	19338 <__mempcpy_chk@plt+0x7d58>
   192e8:	cmp	ip, #45	; 0x2d
   192ec:	beq	19350 <__mempcpy_chk@plt+0x7d70>
   192f0:	cmp	ip, #91	; 0x5b
   192f4:	bne	19378 <__mempcpy_chk@plt+0x7d98>
   192f8:	ldr	r3, [r1, #40]	; 0x28
   192fc:	ldr	r4, [r1, #48]	; 0x30
   19300:	add	r3, r3, #1
   19304:	cmp	r3, r4
   19308:	bge	1936c <__mempcpy_chk@plt+0x7d8c>
   1930c:	ldr	r1, [r1, #4]
   19310:	ldrb	r1, [r1, r3]
   19314:	strb	r1, [r0]
   19318:	cmp	r1, #61	; 0x3d
   1931c:	beq	19388 <__mempcpy_chk@plt+0x7da8>
   19320:	cmp	r1, #58	; 0x3a
   19324:	beq	19390 <__mempcpy_chk@plt+0x7db0>
   19328:	cmp	r1, #46	; 0x2e
   1932c:	bne	19374 <__mempcpy_chk@plt+0x7d94>
   19330:	mov	r1, #26
   19334:	b	1939c <__mempcpy_chk@plt+0x7dbc>
   19338:	cmp	ip, #93	; 0x5d
   1933c:	beq	19358 <__mempcpy_chk@plt+0x7d78>
   19340:	cmp	ip, #94	; 0x5e
   19344:	bne	19378 <__mempcpy_chk@plt+0x7d98>
   19348:	mov	r1, #25
   1934c:	b	1935c <__mempcpy_chk@plt+0x7d7c>
   19350:	mov	r1, #22
   19354:	b	1935c <__mempcpy_chk@plt+0x7d7c>
   19358:	mov	r1, #21
   1935c:	strb	r1, [r0, #4]
   19360:	mov	r1, #1
   19364:	mov	r0, r1
   19368:	pop	{r4, sl, fp, pc}
   1936c:	mov	r1, #0
   19370:	strb	r1, [r0]
   19374:	strb	ip, [r0]
   19378:	mov	r1, #1
   1937c:	strb	r1, [r0, #4]
   19380:	mov	r0, r1
   19384:	pop	{r4, sl, fp, pc}
   19388:	mov	r1, #28
   1938c:	b	1939c <__mempcpy_chk@plt+0x7dbc>
   19390:	tst	r2, #4
   19394:	beq	19374 <__mempcpy_chk@plt+0x7d94>
   19398:	mov	r1, #30
   1939c:	strb	r1, [r0, #4]
   193a0:	mov	r1, #2
   193a4:	mov	r0, r1
   193a8:	pop	{r4, sl, fp, pc}
   193ac:	asr	r2, r1, #31
   193b0:	add	r2, r1, r2, lsr #27
   193b4:	asr	r2, r2, #5
   193b8:	ldr	ip, [r0, r2, lsl #2]
   193bc:	and	r1, r1, #31
   193c0:	mov	r3, #1
   193c4:	orr	r1, ip, r3, lsl r1
   193c8:	str	r1, [r0, r2, lsl #2]
   193cc:	bx	lr
   193d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   193d4:	add	fp, sp, #24
   193d8:	sub	sp, sp, #8
   193dc:	mov	r5, r3
   193e0:	mov	r8, r2
   193e4:	mov	r6, r1
   193e8:	mov	r9, r0
   193ec:	ldr	r7, [r1, #40]	; 0x28
   193f0:	mov	r0, r1
   193f4:	mov	r1, r7
   193f8:	bl	1a018 <__mempcpy_chk@plt+0x8a38>
   193fc:	cmp	r0, #2
   19400:	blt	19438 <__mempcpy_chk@plt+0x7e58>
   19404:	mov	r4, r0
   19408:	mov	r0, #1
   1940c:	str	r0, [r9]
   19410:	mov	r0, r6
   19414:	mov	r1, r7
   19418:	bl	17d8c <__mempcpy_chk@plt+0x67ac>
   1941c:	str	r0, [r9, #4]
   19420:	ldr	r0, [r6, #40]	; 0x28
   19424:	add	r0, r0, r4
   19428:	str	r0, [r6, #40]	; 0x28
   1942c:	mov	r0, #0
   19430:	sub	sp, fp, #24
   19434:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19438:	ldr	r0, [fp, #12]
   1943c:	ldr	r2, [fp, #8]
   19440:	add	r1, r7, r5
   19444:	str	r1, [r6, #40]	; 0x28
   19448:	ldrb	r1, [r8, #4]
   1944c:	sub	r1, r1, #22
   19450:	cmp	r1, #8
   19454:	bhi	194c0 <__mempcpy_chk@plt+0x7ee0>
   19458:	add	r3, pc, #0
   1945c:	ldr	pc, [r3, r1, lsl #2]
   19460:	muleq	r1, ip, r4
   19464:	andeq	r9, r1, r0, asr #9
   19468:	andeq	r9, r1, r0, asr #9
   1946c:	andeq	r9, r1, r0, asr #9
   19470:	andeq	r9, r1, r4, lsl #9
   19474:	andeq	r9, r1, r0, asr #9
   19478:	andeq	r9, r1, r4, lsl #9
   1947c:	andeq	r9, r1, r0, asr #9
   19480:	andeq	r9, r1, r4, lsl #9
   19484:	mov	r0, r9
   19488:	mov	r1, r6
   1948c:	mov	r2, r8
   19490:	sub	sp, fp, #24
   19494:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   19498:	b	1a074 <__mempcpy_chk@plt+0x8a94>
   1949c:	cmp	r0, #0
   194a0:	bne	194c0 <__mempcpy_chk@plt+0x7ee0>
   194a4:	mov	r0, sp
   194a8:	mov	r1, r6
   194ac:	bl	19238 <__mempcpy_chk@plt+0x7c58>
   194b0:	ldrb	r1, [sp, #4]
   194b4:	mov	r0, #11
   194b8:	cmp	r1, #21
   194bc:	bne	194d0 <__mempcpy_chk@plt+0x7ef0>
   194c0:	mov	r0, #0
   194c4:	str	r0, [r9]
   194c8:	ldrb	r1, [r8]
   194cc:	strb	r1, [r9, #4]
   194d0:	sub	sp, fp, #24
   194d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   194d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194dc:	add	fp, sp, #28
   194e0:	sub	sp, sp, #12
   194e4:	mov	sl, r0
   194e8:	ldr	r7, [r3]
   194ec:	mov	r0, #11
   194f0:	cmp	r7, #2
   194f4:	cmpne	r7, #4
   194f8:	beq	19510 <__mempcpy_chk@plt+0x7f30>
   194fc:	ldr	r8, [fp, #8]
   19500:	ldr	r5, [r8]
   19504:	cmp	r5, #2
   19508:	cmpne	r5, #4
   1950c:	bne	19518 <__mempcpy_chk@plt+0x7f38>
   19510:	sub	sp, fp, #28
   19514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19518:	mov	r6, r3
   1951c:	mov	r9, r2
   19520:	mov	r4, r1
   19524:	cmp	r7, #3
   19528:	bne	1953c <__mempcpy_chk@plt+0x7f5c>
   1952c:	ldr	r0, [r6, #4]
   19530:	bl	114cc <strlen@plt>
   19534:	cmp	r0, #1
   19538:	bhi	19684 <__mempcpy_chk@plt+0x80a4>
   1953c:	cmp	r5, #3
   19540:	bne	19554 <__mempcpy_chk@plt+0x7f74>
   19544:	ldr	r0, [r8, #4]
   19548:	bl	114cc <strlen@plt>
   1954c:	cmp	r0, #1
   19550:	bhi	19684 <__mempcpy_chk@plt+0x80a4>
   19554:	cmp	r7, #3
   19558:	beq	1956c <__mempcpy_chk@plt+0x7f8c>
   1955c:	mov	r0, #0
   19560:	cmp	r7, #0
   19564:	ldrbeq	r0, [r6, #4]
   19568:	b	19574 <__mempcpy_chk@plt+0x7f94>
   1956c:	ldr	r0, [r6, #4]
   19570:	ldrb	r0, [r0]
   19574:	stmib	sp, {r4, r9}
   19578:	cmp	r5, #3
   1957c:	beq	19590 <__mempcpy_chk@plt+0x7fb0>
   19580:	mov	r9, #0
   19584:	cmp	r5, #0
   19588:	ldrbeq	r9, [r8, #4]
   1958c:	b	19598 <__mempcpy_chk@plt+0x7fb8>
   19590:	ldr	r1, [r8, #4]
   19594:	ldrb	r9, [r1]
   19598:	ldr	r4, [fp, #12]
   1959c:	cmp	r7, #3
   195a0:	cmpne	r7, #0
   195a4:	bne	195b8 <__mempcpy_chk@plt+0x7fd8>
   195a8:	mov	r1, r4
   195ac:	bl	1a238 <__mempcpy_chk@plt+0x8c58>
   195b0:	mov	r7, r0
   195b4:	b	195bc <__mempcpy_chk@plt+0x7fdc>
   195b8:	ldr	r7, [r6, #4]
   195bc:	ldr	r0, [r8]
   195c0:	cmp	r0, #3
   195c4:	cmpne	r0, #0
   195c8:	bne	195e0 <__mempcpy_chk@plt+0x8000>
   195cc:	mov	r0, r9
   195d0:	mov	r1, r4
   195d4:	bl	1a238 <__mempcpy_chk@plt+0x8c58>
   195d8:	mov	r6, r0
   195dc:	b	195e4 <__mempcpy_chk@plt+0x8004>
   195e0:	ldr	r6, [r8, #4]
   195e4:	ldr	r1, [sp, #8]
   195e8:	ldr	r5, [sp, #4]
   195ec:	mov	r0, #3
   195f0:	cmn	r7, #1
   195f4:	cmnne	r6, #1
   195f8:	beq	19510 <__mempcpy_chk@plt+0x7f30>
   195fc:	ldr	r0, [fp, #16]
   19600:	tst	r0, #65536	; 0x10000
   19604:	beq	19614 <__mempcpy_chk@plt+0x8034>
   19608:	cmp	r7, r6
   1960c:	mov	r0, #11
   19610:	bhi	19510 <__mempcpy_chk@plt+0x7f30>
   19614:	ldr	r0, [r4, #92]	; 0x5c
   19618:	cmp	r0, #2
   1961c:	blt	19650 <__mempcpy_chk@plt+0x8070>
   19620:	ldr	r0, [r5, #32]
   19624:	ldr	r1, [r1]
   19628:	cmp	r1, r0
   1962c:	beq	19690 <__mempcpy_chk@plt+0x80b0>
   19630:	ldr	r0, [r5, #4]
   19634:	ldr	r1, [r5, #32]
   19638:	str	r7, [r0, r1, lsl #2]
   1963c:	ldr	r0, [r5, #8]
   19640:	ldr	r1, [r5, #32]
   19644:	add	r2, r1, #1
   19648:	str	r2, [r5, #32]
   1964c:	str	r6, [r0, r1, lsl #2]
   19650:	mov	r5, #0
   19654:	cmp	r7, r5
   19658:	cmpls	r5, r6
   1965c:	bhi	1966c <__mempcpy_chk@plt+0x808c>
   19660:	mov	r0, sl
   19664:	mov	r1, r5
   19668:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   1966c:	add	r5, r5, #1
   19670:	cmp	r5, #256	; 0x100
   19674:	bne	19654 <__mempcpy_chk@plt+0x8074>
   19678:	mov	r0, #0
   1967c:	sub	sp, fp, #28
   19680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19684:	mov	r0, #3
   19688:	sub	sp, fp, #28
   1968c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19690:	mov	r1, #1
   19694:	orr	r8, r1, r0, lsl #1
   19698:	lsl	r4, r8, #2
   1969c:	ldr	r0, [r5, #4]
   196a0:	mov	r1, r4
   196a4:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   196a8:	mov	r9, r0
   196ac:	ldr	r0, [r5, #8]
   196b0:	mov	r1, r4
   196b4:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   196b8:	mov	r4, r0
   196bc:	cmp	r9, #0
   196c0:	cmpne	r4, #0
   196c4:	bne	196e4 <__mempcpy_chk@plt+0x8104>
   196c8:	mov	r0, r9
   196cc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   196d0:	mov	r0, r4
   196d4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   196d8:	mov	r0, #12
   196dc:	sub	sp, fp, #28
   196e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196e4:	ldr	r5, [sp, #4]
   196e8:	str	r9, [r5, #4]
   196ec:	str	r4, [r5, #8]
   196f0:	ldr	r0, [sp, #8]
   196f4:	str	r8, [r0]
   196f8:	b	19630 <__mempcpy_chk@plt+0x8050>
   196fc:	push	{r4, r5, fp, lr}
   19700:	add	fp, sp, #8
   19704:	mov	r5, r1
   19708:	mov	r4, r0
   1970c:	mov	r0, r1
   19710:	bl	114cc <strlen@plt>
   19714:	cmp	r0, #1
   19718:	movne	r0, #3
   1971c:	popne	{r4, r5, fp, pc}
   19720:	ldrb	r1, [r5]
   19724:	mov	r0, r4
   19728:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   1972c:	mov	r0, #0
   19730:	pop	{r4, r5, fp, pc}
   19734:	push	{r4, r5, fp, lr}
   19738:	add	fp, sp, #8
   1973c:	mov	r5, r1
   19740:	mov	r4, r0
   19744:	mov	r0, r1
   19748:	bl	114cc <strlen@plt>
   1974c:	cmp	r0, #1
   19750:	movne	r0, #3
   19754:	popne	{r4, r5, fp, pc}
   19758:	ldrb	r1, [r5]
   1975c:	mov	r0, r4
   19760:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19764:	mov	r0, #0
   19768:	pop	{r4, r5, fp, pc}
   1976c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19770:	add	fp, sp, #24
   19774:	mov	r5, r3
   19778:	mov	r7, r2
   1977c:	mov	r4, r1
   19780:	mov	r8, r0
   19784:	ldr	r6, [fp, #8]
   19788:	ldrb	r0, [fp, #14]
   1978c:	tst	r0, #64	; 0x40
   19790:	beq	197cc <__mempcpy_chk@plt+0x81ec>
   19794:	movw	r1, #13698	; 0x3582
   19798:	movt	r1, #2
   1979c:	mov	r0, r6
   197a0:	bl	112ec <strcmp@plt>
   197a4:	cmp	r0, #0
   197a8:	beq	197c4 <__mempcpy_chk@plt+0x81e4>
   197ac:	movw	r1, #13704	; 0x3588
   197b0:	movt	r1, #2
   197b4:	mov	r0, r6
   197b8:	bl	112ec <strcmp@plt>
   197bc:	cmp	r0, #0
   197c0:	bne	197cc <__mempcpy_chk@plt+0x81ec>
   197c4:	movw	r6, #13710	; 0x358e
   197c8:	movt	r6, #2
   197cc:	ldr	r0, [r7, #36]	; 0x24
   197d0:	ldr	r1, [r5]
   197d4:	cmp	r1, r0
   197d8:	beq	19ce8 <__mempcpy_chk@plt+0x8708>
   197dc:	mov	r0, r6
   197e0:	bl	112bc <wctype@plt>
   197e4:	ldr	r1, [r7, #12]
   197e8:	ldr	r2, [r7, #36]	; 0x24
   197ec:	add	r3, r2, #1
   197f0:	str	r3, [r7, #36]	; 0x24
   197f4:	str	r0, [r1, r2, lsl #2]
   197f8:	movw	r1, #13686	; 0x3576
   197fc:	movt	r1, #2
   19800:	mov	r0, r6
   19804:	bl	112ec <strcmp@plt>
   19808:	cmp	r0, #0
   1980c:	beq	19970 <__mempcpy_chk@plt+0x8390>
   19810:	movw	r1, #13716	; 0x3594
   19814:	movt	r1, #2
   19818:	mov	r0, r6
   1981c:	bl	112ec <strcmp@plt>
   19820:	cmp	r0, #0
   19824:	beq	199c0 <__mempcpy_chk@plt+0x83e0>
   19828:	movw	r1, #13704	; 0x3588
   1982c:	movt	r1, #2
   19830:	mov	r0, r6
   19834:	bl	112ec <strcmp@plt>
   19838:	cmp	r0, #0
   1983c:	beq	19a10 <__mempcpy_chk@plt+0x8430>
   19840:	movw	r1, #13692	; 0x357c
   19844:	movt	r1, #2
   19848:	mov	r0, r6
   1984c:	bl	112ec <strcmp@plt>
   19850:	cmp	r0, #0
   19854:	beq	19a64 <__mempcpy_chk@plt+0x8484>
   19858:	movw	r1, #13710	; 0x358e
   1985c:	movt	r1, #2
   19860:	mov	r0, r6
   19864:	bl	112ec <strcmp@plt>
   19868:	cmp	r0, #0
   1986c:	beq	19ab8 <__mempcpy_chk@plt+0x84d8>
   19870:	movw	r1, #13747	; 0x35b3
   19874:	movt	r1, #2
   19878:	mov	r0, r6
   1987c:	bl	112ec <strcmp@plt>
   19880:	cmp	r0, #0
   19884:	beq	19b0c <__mempcpy_chk@plt+0x852c>
   19888:	movw	r1, #13722	; 0x359a
   1988c:	movt	r1, #2
   19890:	mov	r0, r6
   19894:	bl	112ec <strcmp@plt>
   19898:	cmp	r0, #0
   1989c:	beq	19b60 <__mempcpy_chk@plt+0x8580>
   198a0:	movw	r1, #13698	; 0x3582
   198a4:	movt	r1, #2
   198a8:	mov	r0, r6
   198ac:	bl	112ec <strcmp@plt>
   198b0:	cmp	r0, #0
   198b4:	beq	19bb0 <__mempcpy_chk@plt+0x85d0>
   198b8:	movw	r1, #13728	; 0x35a0
   198bc:	movt	r1, #2
   198c0:	mov	r0, r6
   198c4:	bl	112ec <strcmp@plt>
   198c8:	cmp	r0, #0
   198cc:	beq	19c00 <__mempcpy_chk@plt+0x8620>
   198d0:	movw	r1, #13734	; 0x35a6
   198d4:	movt	r1, #2
   198d8:	mov	r0, r6
   198dc:	bl	112ec <strcmp@plt>
   198e0:	cmp	r0, #0
   198e4:	beq	19c4c <__mempcpy_chk@plt+0x866c>
   198e8:	movw	r1, #13740	; 0x35ac
   198ec:	movt	r1, #2
   198f0:	mov	r0, r6
   198f4:	bl	112ec <strcmp@plt>
   198f8:	cmp	r0, #0
   198fc:	beq	19c9c <__mempcpy_chk@plt+0x86bc>
   19900:	movw	r1, #13746	; 0x35b2
   19904:	movt	r1, #2
   19908:	mov	r0, r6
   1990c:	bl	112ec <strcmp@plt>
   19910:	mov	r1, r0
   19914:	mov	r0, #4
   19918:	cmp	r1, #0
   1991c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   19920:	bl	114b4 <__ctype_b_loc@plt>
   19924:	mov	r6, r0
   19928:	cmp	r8, #0
   1992c:	bne	19f24 <__mempcpy_chk@plt+0x8944>
   19930:	mov	r7, #0
   19934:	mov	r5, #0
   19938:	ldr	r0, [r6]
   1993c:	add	r0, r0, r7
   19940:	ldrb	r0, [r0, #1]
   19944:	tst	r0, #16
   19948:	beq	19958 <__mempcpy_chk@plt+0x8378>
   1994c:	mov	r0, r4
   19950:	mov	r1, r5
   19954:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19958:	add	r7, r7, #2
   1995c:	add	r5, r5, #1
   19960:	mov	r0, #0
   19964:	cmp	r5, #256	; 0x100
   19968:	bne	19938 <__mempcpy_chk@plt+0x8358>
   1996c:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19970:	bl	114b4 <__ctype_b_loc@plt>
   19974:	mov	r6, r0
   19978:	cmp	r8, #0
   1997c:	bne	19d14 <__mempcpy_chk@plt+0x8734>
   19980:	mov	r7, #0
   19984:	mov	r5, #0
   19988:	b	199a0 <__mempcpy_chk@plt+0x83c0>
   1998c:	add	r7, r7, #2
   19990:	add	r5, r5, #1
   19994:	cmp	r5, #256	; 0x100
   19998:	moveq	r0, #0
   1999c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   199a0:	ldr	r0, [r6]
   199a4:	ldrb	r0, [r0, r7]
   199a8:	tst	r0, #8
   199ac:	beq	1998c <__mempcpy_chk@plt+0x83ac>
   199b0:	mov	r0, r4
   199b4:	mov	r1, r5
   199b8:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   199bc:	b	1998c <__mempcpy_chk@plt+0x83ac>
   199c0:	bl	114b4 <__ctype_b_loc@plt>
   199c4:	mov	r6, r0
   199c8:	cmp	r8, #0
   199cc:	bne	19d4c <__mempcpy_chk@plt+0x876c>
   199d0:	mov	r7, #0
   199d4:	mov	r5, #0
   199d8:	b	199f0 <__mempcpy_chk@plt+0x8410>
   199dc:	add	r7, r7, #2
   199e0:	add	r5, r5, #1
   199e4:	cmp	r5, #256	; 0x100
   199e8:	moveq	r0, #0
   199ec:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   199f0:	ldr	r0, [r6]
   199f4:	ldrb	r0, [r0, r7]
   199f8:	tst	r0, #2
   199fc:	beq	199dc <__mempcpy_chk@plt+0x83fc>
   19a00:	mov	r0, r4
   19a04:	mov	r1, r5
   19a08:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19a0c:	b	199dc <__mempcpy_chk@plt+0x83fc>
   19a10:	bl	114b4 <__ctype_b_loc@plt>
   19a14:	mov	r6, r0
   19a18:	cmp	r8, #0
   19a1c:	bne	19d84 <__mempcpy_chk@plt+0x87a4>
   19a20:	mov	r7, #0
   19a24:	mov	r5, #0
   19a28:	b	19a40 <__mempcpy_chk@plt+0x8460>
   19a2c:	add	r7, r7, #2
   19a30:	add	r5, r5, #1
   19a34:	cmp	r5, #256	; 0x100
   19a38:	moveq	r0, #0
   19a3c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a40:	ldr	r0, [r6]
   19a44:	add	r0, r0, r7
   19a48:	ldrb	r0, [r0, #1]
   19a4c:	tst	r0, #2
   19a50:	beq	19a2c <__mempcpy_chk@plt+0x844c>
   19a54:	mov	r0, r4
   19a58:	mov	r1, r5
   19a5c:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19a60:	b	19a2c <__mempcpy_chk@plt+0x844c>
   19a64:	bl	114b4 <__ctype_b_loc@plt>
   19a68:	mov	r6, r0
   19a6c:	cmp	r8, #0
   19a70:	bne	19dc0 <__mempcpy_chk@plt+0x87e0>
   19a74:	mov	r7, #0
   19a78:	mov	r5, #0
   19a7c:	b	19a94 <__mempcpy_chk@plt+0x84b4>
   19a80:	add	r7, r7, #2
   19a84:	add	r5, r5, #1
   19a88:	cmp	r5, #256	; 0x100
   19a8c:	moveq	r0, #0
   19a90:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a94:	ldr	r0, [r6]
   19a98:	add	r0, r0, r7
   19a9c:	ldrb	r0, [r0, #1]
   19aa0:	tst	r0, #32
   19aa4:	beq	19a80 <__mempcpy_chk@plt+0x84a0>
   19aa8:	mov	r0, r4
   19aac:	mov	r1, r5
   19ab0:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19ab4:	b	19a80 <__mempcpy_chk@plt+0x84a0>
   19ab8:	bl	114b4 <__ctype_b_loc@plt>
   19abc:	mov	r6, r0
   19ac0:	cmp	r8, #0
   19ac4:	bne	19dfc <__mempcpy_chk@plt+0x881c>
   19ac8:	mov	r7, #0
   19acc:	mov	r5, #0
   19ad0:	b	19ae8 <__mempcpy_chk@plt+0x8508>
   19ad4:	add	r7, r7, #2
   19ad8:	add	r5, r5, #1
   19adc:	cmp	r5, #256	; 0x100
   19ae0:	moveq	r0, #0
   19ae4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19ae8:	ldr	r0, [r6]
   19aec:	add	r0, r0, r7
   19af0:	ldrb	r0, [r0, #1]
   19af4:	tst	r0, #4
   19af8:	beq	19ad4 <__mempcpy_chk@plt+0x84f4>
   19afc:	mov	r0, r4
   19b00:	mov	r1, r5
   19b04:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19b08:	b	19ad4 <__mempcpy_chk@plt+0x84f4>
   19b0c:	bl	114b4 <__ctype_b_loc@plt>
   19b10:	mov	r6, r0
   19b14:	cmp	r8, #0
   19b18:	bne	19e38 <__mempcpy_chk@plt+0x8858>
   19b1c:	mov	r7, #0
   19b20:	mov	r5, #0
   19b24:	b	19b3c <__mempcpy_chk@plt+0x855c>
   19b28:	add	r7, r7, #2
   19b2c:	add	r5, r5, #1
   19b30:	cmp	r5, #256	; 0x100
   19b34:	moveq	r0, #0
   19b38:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b3c:	ldr	r0, [r6]
   19b40:	add	r0, r0, r7
   19b44:	ldrb	r0, [r0, #1]
   19b48:	tst	r0, #8
   19b4c:	beq	19b28 <__mempcpy_chk@plt+0x8548>
   19b50:	mov	r0, r4
   19b54:	mov	r1, r5
   19b58:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19b5c:	b	19b28 <__mempcpy_chk@plt+0x8548>
   19b60:	bl	114b4 <__ctype_b_loc@plt>
   19b64:	mov	r6, r0
   19b68:	cmp	r8, #0
   19b6c:	bne	19e74 <__mempcpy_chk@plt+0x8894>
   19b70:	mov	r7, #0
   19b74:	mov	r5, #0
   19b78:	ldr	r0, [r6]
   19b7c:	add	r0, r0, r7
   19b80:	ldrb	r0, [r0, #1]
   19b84:	tst	r0, #64	; 0x40
   19b88:	beq	19b98 <__mempcpy_chk@plt+0x85b8>
   19b8c:	mov	r0, r4
   19b90:	mov	r1, r5
   19b94:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19b98:	add	r7, r7, #2
   19b9c:	add	r5, r5, #1
   19ba0:	mov	r0, #0
   19ba4:	cmp	r5, #256	; 0x100
   19ba8:	bne	19b78 <__mempcpy_chk@plt+0x8598>
   19bac:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19bb0:	bl	114b4 <__ctype_b_loc@plt>
   19bb4:	mov	r6, r0
   19bb8:	cmp	r8, #0
   19bbc:	bne	19eb0 <__mempcpy_chk@plt+0x88d0>
   19bc0:	mov	r7, #0
   19bc4:	mov	r5, #0
   19bc8:	ldr	r0, [r6]
   19bcc:	add	r0, r0, r7
   19bd0:	ldrb	r0, [r0, #1]
   19bd4:	tst	r0, #1
   19bd8:	beq	19be8 <__mempcpy_chk@plt+0x8608>
   19bdc:	mov	r0, r4
   19be0:	mov	r1, r5
   19be4:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19be8:	add	r7, r7, #2
   19bec:	add	r5, r5, #1
   19bf0:	mov	r0, #0
   19bf4:	cmp	r5, #256	; 0x100
   19bf8:	bne	19bc8 <__mempcpy_chk@plt+0x85e8>
   19bfc:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19c00:	bl	114b4 <__ctype_b_loc@plt>
   19c04:	mov	r6, r0
   19c08:	cmp	r8, #0
   19c0c:	bne	19eec <__mempcpy_chk@plt+0x890c>
   19c10:	mov	r7, #0
   19c14:	mov	r5, #0
   19c18:	ldr	r0, [r6]
   19c1c:	ldrb	r0, [r0, r7]
   19c20:	tst	r0, #1
   19c24:	beq	19c34 <__mempcpy_chk@plt+0x8654>
   19c28:	mov	r0, r4
   19c2c:	mov	r1, r5
   19c30:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19c34:	add	r7, r7, #2
   19c38:	add	r5, r5, #1
   19c3c:	mov	r0, #0
   19c40:	cmp	r5, #256	; 0x100
   19c44:	bne	19c18 <__mempcpy_chk@plt+0x8638>
   19c48:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19c4c:	bl	114b4 <__ctype_b_loc@plt>
   19c50:	mov	r6, r0
   19c54:	cmp	r8, #0
   19c58:	bne	19f60 <__mempcpy_chk@plt+0x8980>
   19c5c:	mov	r7, #0
   19c60:	mov	r5, #0
   19c64:	ldr	r0, [r6]
   19c68:	add	r0, r0, r7
   19c6c:	ldrsh	r0, [r0]
   19c70:	cmn	r0, #1
   19c74:	bgt	19c84 <__mempcpy_chk@plt+0x86a4>
   19c78:	mov	r0, r4
   19c7c:	mov	r1, r5
   19c80:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19c84:	add	r7, r7, #2
   19c88:	add	r5, r5, #1
   19c8c:	mov	r0, #0
   19c90:	cmp	r5, #256	; 0x100
   19c94:	bne	19c64 <__mempcpy_chk@plt+0x8684>
   19c98:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19c9c:	bl	114b4 <__ctype_b_loc@plt>
   19ca0:	mov	r6, r0
   19ca4:	cmp	r8, #0
   19ca8:	bne	19f9c <__mempcpy_chk@plt+0x89bc>
   19cac:	mov	r7, #0
   19cb0:	mov	r5, #0
   19cb4:	ldr	r0, [r6]
   19cb8:	ldrb	r0, [r0, r7]
   19cbc:	tst	r0, #4
   19cc0:	beq	19cd0 <__mempcpy_chk@plt+0x86f0>
   19cc4:	mov	r0, r4
   19cc8:	mov	r1, r5
   19ccc:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19cd0:	add	r7, r7, #2
   19cd4:	add	r5, r5, #1
   19cd8:	mov	r0, #0
   19cdc:	cmp	r5, #256	; 0x100
   19ce0:	bne	19cb4 <__mempcpy_chk@plt+0x86d4>
   19ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19ce8:	mov	r1, #1
   19cec:	orr	r9, r1, r0, lsl #1
   19cf0:	lsl	r1, r9, #2
   19cf4:	ldr	r0, [r7, #12]
   19cf8:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   19cfc:	cmp	r0, #0
   19d00:	moveq	r0, #12
   19d04:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19d08:	str	r0, [r7, #12]
   19d0c:	str	r9, [r5]
   19d10:	b	197dc <__mempcpy_chk@plt+0x81fc>
   19d14:	mov	r5, #0
   19d18:	ldr	r0, [r6]
   19d1c:	ldrb	r0, [r0, r5]
   19d20:	tst	r0, #8
   19d24:	beq	19d34 <__mempcpy_chk@plt+0x8754>
   19d28:	ldrb	r1, [r8]
   19d2c:	mov	r0, r4
   19d30:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19d34:	add	r8, r8, #1
   19d38:	add	r5, r5, #2
   19d3c:	mov	r0, #0
   19d40:	cmp	r5, #512	; 0x200
   19d44:	bne	19d18 <__mempcpy_chk@plt+0x8738>
   19d48:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19d4c:	mov	r5, #0
   19d50:	ldr	r0, [r6]
   19d54:	ldrb	r0, [r0, r5]
   19d58:	tst	r0, #2
   19d5c:	beq	19d6c <__mempcpy_chk@plt+0x878c>
   19d60:	ldrb	r1, [r8]
   19d64:	mov	r0, r4
   19d68:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19d6c:	add	r8, r8, #1
   19d70:	add	r5, r5, #2
   19d74:	mov	r0, #0
   19d78:	cmp	r5, #512	; 0x200
   19d7c:	bne	19d50 <__mempcpy_chk@plt+0x8770>
   19d80:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19d84:	mov	r5, #0
   19d88:	ldr	r0, [r6]
   19d8c:	add	r0, r0, r5
   19d90:	ldrb	r0, [r0, #1]
   19d94:	tst	r0, #2
   19d98:	beq	19da8 <__mempcpy_chk@plt+0x87c8>
   19d9c:	ldrb	r1, [r8]
   19da0:	mov	r0, r4
   19da4:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19da8:	add	r8, r8, #1
   19dac:	add	r5, r5, #2
   19db0:	mov	r0, #0
   19db4:	cmp	r5, #512	; 0x200
   19db8:	bne	19d88 <__mempcpy_chk@plt+0x87a8>
   19dbc:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19dc0:	mov	r5, #0
   19dc4:	ldr	r0, [r6]
   19dc8:	add	r0, r0, r5
   19dcc:	ldrb	r0, [r0, #1]
   19dd0:	tst	r0, #32
   19dd4:	beq	19de4 <__mempcpy_chk@plt+0x8804>
   19dd8:	ldrb	r1, [r8]
   19ddc:	mov	r0, r4
   19de0:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19de4:	add	r8, r8, #1
   19de8:	add	r5, r5, #2
   19dec:	mov	r0, #0
   19df0:	cmp	r5, #512	; 0x200
   19df4:	bne	19dc4 <__mempcpy_chk@plt+0x87e4>
   19df8:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19dfc:	mov	r5, #0
   19e00:	ldr	r0, [r6]
   19e04:	add	r0, r0, r5
   19e08:	ldrb	r0, [r0, #1]
   19e0c:	tst	r0, #4
   19e10:	beq	19e20 <__mempcpy_chk@plt+0x8840>
   19e14:	ldrb	r1, [r8]
   19e18:	mov	r0, r4
   19e1c:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19e20:	add	r8, r8, #1
   19e24:	add	r5, r5, #2
   19e28:	mov	r0, #0
   19e2c:	cmp	r5, #512	; 0x200
   19e30:	bne	19e00 <__mempcpy_chk@plt+0x8820>
   19e34:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19e38:	mov	r5, #0
   19e3c:	ldr	r0, [r6]
   19e40:	add	r0, r0, r5
   19e44:	ldrb	r0, [r0, #1]
   19e48:	tst	r0, #8
   19e4c:	beq	19e5c <__mempcpy_chk@plt+0x887c>
   19e50:	ldrb	r1, [r8]
   19e54:	mov	r0, r4
   19e58:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19e5c:	add	r8, r8, #1
   19e60:	add	r5, r5, #2
   19e64:	mov	r0, #0
   19e68:	cmp	r5, #512	; 0x200
   19e6c:	bne	19e3c <__mempcpy_chk@plt+0x885c>
   19e70:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19e74:	mov	r5, #0
   19e78:	ldr	r0, [r6]
   19e7c:	add	r0, r0, r5
   19e80:	ldrb	r0, [r0, #1]
   19e84:	tst	r0, #64	; 0x40
   19e88:	beq	19e98 <__mempcpy_chk@plt+0x88b8>
   19e8c:	ldrb	r1, [r8]
   19e90:	mov	r0, r4
   19e94:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19e98:	add	r8, r8, #1
   19e9c:	add	r5, r5, #2
   19ea0:	mov	r0, #0
   19ea4:	cmp	r5, #512	; 0x200
   19ea8:	bne	19e78 <__mempcpy_chk@plt+0x8898>
   19eac:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19eb0:	mov	r5, #0
   19eb4:	ldr	r0, [r6]
   19eb8:	add	r0, r0, r5
   19ebc:	ldrb	r0, [r0, #1]
   19ec0:	tst	r0, #1
   19ec4:	beq	19ed4 <__mempcpy_chk@plt+0x88f4>
   19ec8:	ldrb	r1, [r8]
   19ecc:	mov	r0, r4
   19ed0:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19ed4:	add	r8, r8, #1
   19ed8:	add	r5, r5, #2
   19edc:	mov	r0, #0
   19ee0:	cmp	r5, #512	; 0x200
   19ee4:	bne	19eb4 <__mempcpy_chk@plt+0x88d4>
   19ee8:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19eec:	mov	r5, #0
   19ef0:	ldr	r0, [r6]
   19ef4:	ldrb	r0, [r0, r5]
   19ef8:	tst	r0, #1
   19efc:	beq	19f0c <__mempcpy_chk@plt+0x892c>
   19f00:	ldrb	r1, [r8]
   19f04:	mov	r0, r4
   19f08:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19f0c:	add	r8, r8, #1
   19f10:	add	r5, r5, #2
   19f14:	mov	r0, #0
   19f18:	cmp	r5, #512	; 0x200
   19f1c:	bne	19ef0 <__mempcpy_chk@plt+0x8910>
   19f20:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19f24:	mov	r5, #0
   19f28:	ldr	r0, [r6]
   19f2c:	add	r0, r0, r5
   19f30:	ldrb	r0, [r0, #1]
   19f34:	tst	r0, #16
   19f38:	beq	19f48 <__mempcpy_chk@plt+0x8968>
   19f3c:	ldrb	r1, [r8]
   19f40:	mov	r0, r4
   19f44:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19f48:	add	r8, r8, #1
   19f4c:	add	r5, r5, #2
   19f50:	mov	r0, #0
   19f54:	cmp	r5, #512	; 0x200
   19f58:	bne	19f28 <__mempcpy_chk@plt+0x8948>
   19f5c:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19f60:	mov	r5, #0
   19f64:	ldr	r0, [r6]
   19f68:	add	r0, r0, r5
   19f6c:	ldrsh	r0, [r0]
   19f70:	cmn	r0, #1
   19f74:	bgt	19f84 <__mempcpy_chk@plt+0x89a4>
   19f78:	ldrb	r1, [r8]
   19f7c:	mov	r0, r4
   19f80:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19f84:	add	r8, r8, #1
   19f88:	add	r5, r5, #2
   19f8c:	mov	r0, #0
   19f90:	cmp	r5, #512	; 0x200
   19f94:	bne	19f64 <__mempcpy_chk@plt+0x8984>
   19f98:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19f9c:	mov	r5, #0
   19fa0:	ldr	r0, [r6]
   19fa4:	ldrb	r0, [r0, r5]
   19fa8:	tst	r0, #4
   19fac:	beq	19fbc <__mempcpy_chk@plt+0x89dc>
   19fb0:	ldrb	r1, [r8]
   19fb4:	mov	r0, r4
   19fb8:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   19fbc:	add	r8, r8, #1
   19fc0:	add	r5, r5, #2
   19fc4:	mov	r0, #0
   19fc8:	cmp	r5, #512	; 0x200
   19fcc:	bne	19fa0 <__mempcpy_chk@plt+0x89c0>
   19fd0:	b	19ce4 <__mempcpy_chk@plt+0x8704>
   19fd4:	mov	r1, #0
   19fd8:	ldr	r2, [r0, r1, lsl #2]
   19fdc:	mvn	r2, r2
   19fe0:	str	r2, [r0, r1, lsl #2]
   19fe4:	add	r1, r1, #1
   19fe8:	cmp	r1, #8
   19fec:	bne	19fd8 <__mempcpy_chk@plt+0x89f8>
   19ff0:	bx	lr
   19ff4:	mov	r2, #0
   19ff8:	ldr	ip, [r1, r2, lsl #2]
   19ffc:	ldr	r3, [r0, r2, lsl #2]
   1a000:	and	r3, r3, ip
   1a004:	str	r3, [r0, r2, lsl #2]
   1a008:	add	r2, r2, #1
   1a00c:	cmp	r2, #8
   1a010:	bne	19ff8 <__mempcpy_chk@plt+0x8a18>
   1a014:	bx	lr
   1a018:	push	{fp, lr}
   1a01c:	mov	fp, sp
   1a020:	mov	lr, r0
   1a024:	ldr	r3, [r0, #80]	; 0x50
   1a028:	mov	r0, #1
   1a02c:	cmp	r3, #1
   1a030:	beq	1a070 <__mempcpy_chk@plt+0x8a90>
   1a034:	ldr	ip, [lr, #28]
   1a038:	add	r3, r1, #1
   1a03c:	cmp	r3, ip
   1a040:	bge	1a070 <__mempcpy_chk@plt+0x8a90>
   1a044:	ldr	r0, [lr, #8]
   1a048:	add	ip, r0, r1, lsl #2
   1a04c:	mov	r0, #1
   1a050:	ldr	r3, [ip, r0, lsl #2]
   1a054:	cmn	r3, #1
   1a058:	popne	{fp, pc}
   1a05c:	add	r0, r0, #1
   1a060:	add	r3, r1, r0
   1a064:	ldr	r2, [lr, #28]
   1a068:	cmp	r3, r2
   1a06c:	blt	1a050 <__mempcpy_chk@plt+0x8a70>
   1a070:	pop	{fp, pc}
   1a074:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a078:	add	fp, sp, #24
   1a07c:	mov	r7, r1
   1a080:	mov	r9, r0
   1a084:	ldr	r0, [r1, #40]	; 0x28
   1a088:	ldr	r1, [r1, #56]	; 0x38
   1a08c:	mov	r8, #7
   1a090:	cmp	r1, r0
   1a094:	ble	1a15c <__mempcpy_chk@plt+0x8b7c>
   1a098:	mov	r6, r2
   1a09c:	ldrb	r5, [r2]
   1a0a0:	mov	r4, #0
   1a0a4:	ldrb	r0, [r6, #4]
   1a0a8:	cmp	r0, #30
   1a0ac:	bne	1a0bc <__mempcpy_chk@plt+0x8adc>
   1a0b0:	mov	r0, r7
   1a0b4:	bl	1a164 <__mempcpy_chk@plt+0x8b84>
   1a0b8:	b	1a0d0 <__mempcpy_chk@plt+0x8af0>
   1a0bc:	ldr	r0, [r7, #4]
   1a0c0:	ldr	r1, [r7, #40]	; 0x28
   1a0c4:	add	r2, r1, #1
   1a0c8:	str	r2, [r7, #40]	; 0x28
   1a0cc:	ldrb	r0, [r0, r1]
   1a0d0:	ldr	r1, [r7, #40]	; 0x28
   1a0d4:	ldr	r2, [r7, #56]	; 0x38
   1a0d8:	cmp	r2, r1
   1a0dc:	ble	1a15c <__mempcpy_chk@plt+0x8b7c>
   1a0e0:	cmp	r0, r5
   1a0e4:	bne	1a0f8 <__mempcpy_chk@plt+0x8b18>
   1a0e8:	ldr	r2, [r7, #4]
   1a0ec:	ldrb	r2, [r2, r1]
   1a0f0:	cmp	r2, #93	; 0x5d
   1a0f4:	beq	1a114 <__mempcpy_chk@plt+0x8b34>
   1a0f8:	ldr	r1, [r9, #4]
   1a0fc:	strb	r0, [r1, r4]
   1a100:	add	r0, r4, #1
   1a104:	cmp	r4, #30
   1a108:	mov	r4, r0
   1a10c:	bls	1a0a4 <__mempcpy_chk@plt+0x8ac4>
   1a110:	b	1a15c <__mempcpy_chk@plt+0x8b7c>
   1a114:	add	r0, r1, #1
   1a118:	str	r0, [r7, #40]	; 0x28
   1a11c:	ldr	r0, [r9, #4]
   1a120:	mov	r8, #0
   1a124:	strb	r8, [r0, r4]
   1a128:	ldrb	r0, [r6, #4]
   1a12c:	cmp	r0, #30
   1a130:	beq	1a14c <__mempcpy_chk@plt+0x8b6c>
   1a134:	cmp	r0, #28
   1a138:	beq	1a154 <__mempcpy_chk@plt+0x8b74>
   1a13c:	cmp	r0, #26
   1a140:	bne	1a15c <__mempcpy_chk@plt+0x8b7c>
   1a144:	mov	r0, #3
   1a148:	b	1a158 <__mempcpy_chk@plt+0x8b78>
   1a14c:	mov	r0, #4
   1a150:	b	1a158 <__mempcpy_chk@plt+0x8b78>
   1a154:	mov	r0, #2
   1a158:	str	r0, [r9]
   1a15c:	mov	r0, r8
   1a160:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a164:	push	{r4, r5, r6, sl, fp, lr}
   1a168:	add	fp, sp, #16
   1a16c:	mov	r4, r0
   1a170:	ldrb	r0, [r0, #75]	; 0x4b
   1a174:	cmp	r0, #0
   1a178:	bne	1a198 <__mempcpy_chk@plt+0x8bb8>
   1a17c:	ldr	r0, [r4, #4]
   1a180:	ldr	r1, [r4, #40]	; 0x28
   1a184:	add	r2, r1, #1
   1a188:	str	r2, [r4, #40]	; 0x28
   1a18c:	ldrb	r6, [r0, r1]
   1a190:	uxtb	r0, r6
   1a194:	pop	{r4, r5, r6, sl, fp, pc}
   1a198:	ldrb	r0, [r4, #76]	; 0x4c
   1a19c:	cmp	r0, #0
   1a1a0:	beq	1a204 <__mempcpy_chk@plt+0x8c24>
   1a1a4:	ldr	r0, [r4, #28]
   1a1a8:	ldr	r5, [r4, #40]	; 0x28
   1a1ac:	cmp	r5, r0
   1a1b0:	beq	1a1c4 <__mempcpy_chk@plt+0x8be4>
   1a1b4:	ldr	r0, [r4, #8]
   1a1b8:	ldr	r0, [r0, r5, lsl #2]
   1a1bc:	cmn	r0, #1
   1a1c0:	beq	1a220 <__mempcpy_chk@plt+0x8c40>
   1a1c4:	ldr	r0, [r4]
   1a1c8:	ldr	r1, [r4, #12]
   1a1cc:	ldr	r2, [r4, #24]
   1a1d0:	ldr	r1, [r1, r5, lsl #2]
   1a1d4:	add	r1, r2, r1
   1a1d8:	add	r0, r0, r1
   1a1dc:	ldrsb	r6, [r0]
   1a1e0:	cmn	r6, #1
   1a1e4:	ble	1a220 <__mempcpy_chk@plt+0x8c40>
   1a1e8:	mov	r0, r4
   1a1ec:	mov	r1, r5
   1a1f0:	bl	1a018 <__mempcpy_chk@plt+0x8a38>
   1a1f4:	add	r0, r0, r5
   1a1f8:	str	r0, [r4, #40]	; 0x28
   1a1fc:	uxtb	r0, r6
   1a200:	pop	{r4, r5, r6, sl, fp, pc}
   1a204:	ldr	r0, [r4]
   1a208:	ldr	r1, [r4, #24]
   1a20c:	ldr	r2, [r4, #40]	; 0x28
   1a210:	add	r3, r2, #1
   1a214:	str	r3, [r4, #40]	; 0x28
   1a218:	add	r1, r2, r1
   1a21c:	b	1a18c <__mempcpy_chk@plt+0x8bac>
   1a220:	add	r0, r5, #1
   1a224:	str	r0, [r4, #40]	; 0x28
   1a228:	ldr	r0, [r4, #4]
   1a22c:	ldrb	r6, [r0, r5]
   1a230:	uxtb	r0, r6
   1a234:	pop	{r4, r5, r6, sl, fp, pc}
   1a238:	ldr	r1, [r1, #92]	; 0x5c
   1a23c:	cmp	r1, #2
   1a240:	bxlt	lr
   1a244:	b	11508 <btowc@plt>
   1a248:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a24c:	add	fp, sp, #24
   1a250:	mov	r4, r2
   1a254:	mov	r5, r1
   1a258:	mov	r6, r0
   1a25c:	mvn	r0, #0
   1a260:	movw	r8, #32816	; 0x8030
   1a264:	b	1a27c <__mempcpy_chk@plt+0x8c9c>
   1a268:	add	r0, r7, r7, lsl #2
   1a26c:	add	r1, r1, r0, lsl #1
   1a270:	sub	r0, r1, #48	; 0x30
   1a274:	cmp	r1, r8
   1a278:	movwgt	r0, #32768	; 0x8000
   1a27c:	mov	r7, r0
   1a280:	mov	r0, r5
   1a284:	mov	r1, r6
   1a288:	mov	r2, r4
   1a28c:	bl	17354 <__mempcpy_chk@plt+0x5d74>
   1a290:	ldrb	r2, [r5, #4]
   1a294:	cmp	r2, #24
   1a298:	beq	1a2e8 <__mempcpy_chk@plt+0x8d08>
   1a29c:	cmp	r2, #2
   1a2a0:	beq	1a2e4 <__mempcpy_chk@plt+0x8d04>
   1a2a4:	ldrb	r1, [r5]
   1a2a8:	cmp	r1, #44	; 0x2c
   1a2ac:	beq	1a2e8 <__mempcpy_chk@plt+0x8d08>
   1a2b0:	mvn	r0, #1
   1a2b4:	cmp	r1, #48	; 0x30
   1a2b8:	bcc	1a27c <__mempcpy_chk@plt+0x8c9c>
   1a2bc:	cmp	r2, #1
   1a2c0:	bne	1a27c <__mempcpy_chk@plt+0x8c9c>
   1a2c4:	cmn	r7, #2
   1a2c8:	beq	1a27c <__mempcpy_chk@plt+0x8c9c>
   1a2cc:	cmp	r1, #57	; 0x39
   1a2d0:	bhi	1a27c <__mempcpy_chk@plt+0x8c9c>
   1a2d4:	cmn	r7, #1
   1a2d8:	bne	1a268 <__mempcpy_chk@plt+0x8c88>
   1a2dc:	sub	r0, r1, #48	; 0x30
   1a2e0:	b	1a27c <__mempcpy_chk@plt+0x8c9c>
   1a2e4:	mvn	r7, #1
   1a2e8:	mov	r0, r7
   1a2ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a2f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a2f4:	add	fp, sp, #24
   1a2f8:	sub	sp, sp, #8
   1a2fc:	mov	r8, r1
   1a300:	mov	r5, r0
   1a304:	mov	r3, r0
   1a308:	ldr	r7, [r3], #20
   1a30c:	mov	r6, #0
   1a310:	mov	r0, r1
   1a314:	mov	r1, #0
   1a318:	mov	r2, #0
   1a31c:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   1a320:	str	r0, [sp, #4]
   1a324:	cmp	r0, #0
   1a328:	beq	1a3c0 <__mempcpy_chk@plt+0x8de0>
   1a32c:	add	r4, sp, #4
   1a330:	mov	r6, #0
   1a334:	str	r7, [r0]
   1a338:	ldr	r0, [r4]
   1a33c:	ldr	r1, [r0, #24]
   1a340:	orr	r1, r1, #262144	; 0x40000
   1a344:	str	r1, [r0, #24]
   1a348:	ldr	r0, [r5, #4]
   1a34c:	ldr	r7, [r4]
   1a350:	cmp	r0, #0
   1a354:	beq	1a364 <__mempcpy_chk@plt+0x8d84>
   1a358:	add	r4, r7, #4
   1a35c:	mov	r5, r0
   1a360:	b	1a398 <__mempcpy_chk@plt+0x8db8>
   1a364:	mov	r1, #0
   1a368:	mov	r0, r5
   1a36c:	ldr	r5, [r5, #8]
   1a370:	cmp	r5, r1
   1a374:	cmpne	r5, #0
   1a378:	bne	1a394 <__mempcpy_chk@plt+0x8db4>
   1a37c:	ldr	r7, [r7]
   1a380:	ldr	r5, [r0]
   1a384:	cmp	r5, #0
   1a388:	mov	r1, r0
   1a38c:	bne	1a368 <__mempcpy_chk@plt+0x8d88>
   1a390:	b	1a3bc <__mempcpy_chk@plt+0x8ddc>
   1a394:	add	r4, r7, #8
   1a398:	add	r3, r5, #20
   1a39c:	mov	r0, r8
   1a3a0:	mov	r1, #0
   1a3a4:	mov	r2, #0
   1a3a8:	bl	18558 <__mempcpy_chk@plt+0x6f78>
   1a3ac:	str	r0, [r4]
   1a3b0:	cmp	r0, #0
   1a3b4:	bne	1a334 <__mempcpy_chk@plt+0x8d54>
   1a3b8:	b	1a3c0 <__mempcpy_chk@plt+0x8de0>
   1a3bc:	ldr	r6, [sp, #4]
   1a3c0:	mov	r0, r6
   1a3c4:	sub	sp, fp, #24
   1a3c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a3cc:	ldr	r2, [r1, #24]
   1a3d0:	uxtb	r3, r2
   1a3d4:	cmp	r3, #17
   1a3d8:	ldreq	r3, [r1, #20]
   1a3dc:	cmpeq	r3, r0
   1a3e0:	orreq	r0, r2, #524288	; 0x80000
   1a3e4:	streq	r0, [r1, #24]
   1a3e8:	mov	r0, #0
   1a3ec:	bx	lr
   1a3f0:	push	{r4, r5, r6, r7, fp, lr}
   1a3f4:	add	fp, sp, #16
   1a3f8:	mov	r4, r2
   1a3fc:	mov	r5, r1
   1a400:	mov	r6, r0
   1a404:	mov	r0, r2
   1a408:	mov	r1, r6
   1a40c:	blx	r5
   1a410:	cmp	r0, #0
   1a414:	popne	{r4, r5, r6, r7, fp, pc}
   1a418:	ldr	r7, [r6, #4]
   1a41c:	cmp	r7, #0
   1a420:	bne	1a454 <__mempcpy_chk@plt+0x8e74>
   1a424:	mov	r1, #0
   1a428:	b	1a440 <__mempcpy_chk@plt+0x8e60>
   1a42c:	ldr	r6, [r0]
   1a430:	cmp	r6, #0
   1a434:	mov	r1, r0
   1a438:	moveq	r0, #0
   1a43c:	popeq	{r4, r5, r6, r7, fp, pc}
   1a440:	mov	r0, r6
   1a444:	ldr	r7, [r6, #8]
   1a448:	cmp	r7, r1
   1a44c:	cmpne	r7, #0
   1a450:	beq	1a42c <__mempcpy_chk@plt+0x8e4c>
   1a454:	mov	r0, r4
   1a458:	mov	r1, r7
   1a45c:	blx	r5
   1a460:	cmp	r0, #0
   1a464:	mov	r6, r7
   1a468:	beq	1a418 <__mempcpy_chk@plt+0x8e38>
   1a46c:	pop	{r4, r5, r6, r7, fp, pc}
   1a470:	ldrb	r2, [r1, #24]
   1a474:	cmp	r2, #17
   1a478:	beq	1a4ac <__mempcpy_chk@plt+0x8ecc>
   1a47c:	cmp	r2, #4
   1a480:	bne	1a500 <__mempcpy_chk@plt+0x8f20>
   1a484:	ldr	r2, [r0, #132]	; 0x84
   1a488:	cmp	r2, #0
   1a48c:	beq	1a500 <__mempcpy_chk@plt+0x8f20>
   1a490:	ldr	r3, [r1, #20]
   1a494:	ldr	r2, [r2, r3, lsl #2]
   1a498:	str	r2, [r1, #20]
   1a49c:	ldr	r1, [r0, #80]	; 0x50
   1a4a0:	mov	r3, #1
   1a4a4:	orr	r1, r1, r3, lsl r2
   1a4a8:	b	1a4fc <__mempcpy_chk@plt+0x8f1c>
   1a4ac:	ldr	r2, [r1, #4]
   1a4b0:	cmp	r2, #0
   1a4b4:	beq	1a500 <__mempcpy_chk@plt+0x8f20>
   1a4b8:	ldrb	r3, [r2, #24]
   1a4bc:	cmp	r3, #17
   1a4c0:	bne	1a500 <__mempcpy_chk@plt+0x8f20>
   1a4c4:	ldr	r3, [r2, #4]
   1a4c8:	ldr	r2, [r2, #20]
   1a4cc:	str	r3, [r1, #4]
   1a4d0:	cmp	r3, #0
   1a4d4:	strne	r1, [r3]
   1a4d8:	ldr	r1, [r1, #20]
   1a4dc:	ldr	r3, [r0, #132]	; 0x84
   1a4e0:	ldr	r1, [r3, r1, lsl #2]
   1a4e4:	str	r1, [r3, r2, lsl #2]
   1a4e8:	cmp	r2, #31
   1a4ec:	bgt	1a500 <__mempcpy_chk@plt+0x8f20>
   1a4f0:	ldr	r1, [r0, #80]	; 0x50
   1a4f4:	mov	r3, #1
   1a4f8:	bic	r1, r1, r3, lsl r2
   1a4fc:	str	r1, [r0, #80]	; 0x50
   1a500:	mov	r0, #0
   1a504:	bx	lr
   1a508:	push	{r4, r5, fp, lr}
   1a50c:	add	fp, sp, #8
   1a510:	sub	sp, sp, #8
   1a514:	mov	r4, r1
   1a518:	mov	r5, r0
   1a51c:	mov	r0, #0
   1a520:	str	r0, [sp, #4]
   1a524:	ldr	r2, [r1, #4]
   1a528:	cmp	r2, #0
   1a52c:	beq	1a554 <__mempcpy_chk@plt+0x8f74>
   1a530:	ldrb	r0, [r2, #24]
   1a534:	cmp	r0, #17
   1a538:	bne	1a554 <__mempcpy_chk@plt+0x8f74>
   1a53c:	add	r0, sp, #4
   1a540:	mov	r1, r5
   1a544:	bl	1a918 <__mempcpy_chk@plt+0x9338>
   1a548:	str	r0, [r4, #4]
   1a54c:	cmp	r0, #0
   1a550:	strne	r4, [r0]
   1a554:	ldr	r2, [r4, #8]
   1a558:	cmp	r2, #0
   1a55c:	beq	1a584 <__mempcpy_chk@plt+0x8fa4>
   1a560:	ldrb	r0, [r2, #24]
   1a564:	cmp	r0, #17
   1a568:	bne	1a584 <__mempcpy_chk@plt+0x8fa4>
   1a56c:	add	r0, sp, #4
   1a570:	mov	r1, r5
   1a574:	bl	1a918 <__mempcpy_chk@plt+0x9338>
   1a578:	str	r0, [r4, #8]
   1a57c:	cmp	r0, #0
   1a580:	strne	r4, [r0]
   1a584:	ldr	r0, [sp, #4]
   1a588:	sub	sp, fp, #8
   1a58c:	pop	{r4, r5, fp, pc}
   1a590:	push	{r4, r5, fp, lr}
   1a594:	add	fp, sp, #8
   1a598:	mov	r4, r1
   1a59c:	mov	r5, r0
   1a5a0:	ldr	r2, [r1, #24]
   1a5a4:	uxtb	r0, r2
   1a5a8:	cmp	r0, #16
   1a5ac:	bne	1a5cc <__mempcpy_chk@plt+0x8fec>
   1a5b0:	ldr	r0, [r4, #4]
   1a5b4:	ldr	r1, [r0, #12]
   1a5b8:	str	r1, [r4, #12]
   1a5bc:	ldr	r0, [r0, #28]
   1a5c0:	str	r0, [r4, #28]
   1a5c4:	mov	r0, #0
   1a5c8:	pop	{r4, r5, fp, pc}
   1a5cc:	str	r4, [r4, #12]
   1a5d0:	ldr	r1, [r4, #20]
   1a5d4:	mov	r0, r5
   1a5d8:	bl	1aa34 <__mempcpy_chk@plt+0x9454>
   1a5dc:	str	r0, [r4, #28]
   1a5e0:	cmn	r0, #1
   1a5e4:	moveq	r0, #12
   1a5e8:	popeq	{r4, r5, fp, pc}
   1a5ec:	mov	r1, r0
   1a5f0:	ldrb	r2, [r4, #24]
   1a5f4:	mov	r0, #0
   1a5f8:	cmp	r2, #12
   1a5fc:	popne	{r4, r5, fp, pc}
   1a600:	ldr	r2, [r5]
   1a604:	add	r1, r2, r1, lsl #3
   1a608:	ldr	r2, [r1, #4]
   1a60c:	ldr	r3, [r4, #20]
   1a610:	bfi	r2, r3, #8, #10
   1a614:	str	r2, [r1, #4]
   1a618:	pop	{r4, r5, fp, pc}
   1a61c:	ldrb	r0, [r1, #24]
   1a620:	cmp	r0, #16
   1a624:	beq	1a638 <__mempcpy_chk@plt+0x9058>
   1a628:	cmp	r0, #11
   1a62c:	bne	1a654 <__mempcpy_chk@plt+0x9074>
   1a630:	ldr	r0, [r1, #4]
   1a634:	b	1a674 <__mempcpy_chk@plt+0x9094>
   1a638:	ldmib	r1, {r0, r2}
   1a63c:	ldr	r3, [r2, #12]
   1a640:	str	r3, [r0, #16]
   1a644:	ldr	r0, [r1, #16]
   1a648:	str	r0, [r2, #16]
   1a64c:	mov	r0, #0
   1a650:	bx	lr
   1a654:	ldr	r0, [r1, #4]
   1a658:	cmp	r0, #0
   1a65c:	ldrne	r2, [r1, #16]
   1a660:	strne	r2, [r0, #16]
   1a664:	ldr	r0, [r1, #8]
   1a668:	cmp	r0, #0
   1a66c:	beq	1a678 <__mempcpy_chk@plt+0x9098>
   1a670:	ldr	r1, [r1, #16]
   1a674:	str	r1, [r0, #16]
   1a678:	mov	r0, #0
   1a67c:	bx	lr
   1a680:	ldr	ip, [r1, #28]
   1a684:	ldrb	r2, [r1, #24]
   1a688:	sub	r2, r2, #2
   1a68c:	cmp	r2, #14
   1a690:	bhi	1a748 <__mempcpy_chk@plt+0x9168>
   1a694:	add	r3, pc, #0
   1a698:	ldr	pc, [r3, r2, lsl #2]
   1a69c:	andeq	sl, r1, ip, lsl #15
   1a6a0:	andeq	sl, r1, r8, asr #14
   1a6a4:	andeq	sl, r1, ip, asr r7
   1a6a8:	andeq	sl, r1, r8, asr #14
   1a6ac:	andeq	sl, r1, r8, asr #14
   1a6b0:	andeq	sl, r1, r8, asr #14
   1a6b4:	ldrdeq	sl, [r1], -r8
   1a6b8:	ldrdeq	sl, [r1], -r8
   1a6bc:	strdeq	sl, [r1], -r0
   1a6c0:	strdeq	sl, [r1], -r0
   1a6c4:	ldrdeq	sl, [r1], -r8
   1a6c8:	andeq	sl, r1, r8, asr #14
   1a6cc:	andeq	sl, r1, r8, asr #14
   1a6d0:	andeq	sl, r1, r8, asr #14
   1a6d4:	andeq	sl, r1, ip, lsl #15
   1a6d8:	ldr	r0, [r0, #20]
   1a6dc:	add	r2, ip, ip, lsl #1
   1a6e0:	add	r0, r0, r2, lsl #2
   1a6e4:	ldr	r1, [r1, #16]
   1a6e8:	ldr	r1, [r1, #28]
   1a6ec:	b	1ac7c <__mempcpy_chk@plt+0x969c>
   1a6f0:	push	{fp, lr}
   1a6f4:	mov	fp, sp
   1a6f8:	ldrb	r2, [r0, #88]	; 0x58
   1a6fc:	orr	r2, r2, #1
   1a700:	strb	r2, [r0, #88]	; 0x58
   1a704:	add	r3, r1, #16
   1a708:	ldr	lr, [r1, #4]
   1a70c:	ldr	r1, [r1, #8]
   1a710:	cmp	r1, #0
   1a714:	mov	r2, r3
   1a718:	addne	r2, r1, #12
   1a71c:	ldr	r1, [r2]
   1a720:	ldr	r2, [r1, #28]
   1a724:	cmp	lr, #0
   1a728:	addne	r3, lr, #12
   1a72c:	ldr	r1, [r3]
   1a730:	ldr	r1, [r1, #28]
   1a734:	ldr	r0, [r0, #20]
   1a738:	add	r3, ip, ip, lsl #1
   1a73c:	add	r0, r0, r3, lsl #2
   1a740:	pop	{fp, lr}
   1a744:	b	1ac04 <__mempcpy_chk@plt+0x9624>
   1a748:	ldr	r0, [r0, #12]
   1a74c:	ldr	r1, [r1, #16]
   1a750:	ldr	r1, [r1, #28]
   1a754:	str	r1, [r0, ip, lsl #2]
   1a758:	b	1a78c <__mempcpy_chk@plt+0x91ac>
   1a75c:	ldr	r3, [r0, #12]
   1a760:	ldr	r2, [r1, #16]
   1a764:	ldr	r2, [r2, #28]
   1a768:	str	r2, [r3, ip, lsl #2]
   1a76c:	ldrb	r1, [r1, #24]
   1a770:	cmp	r1, #4
   1a774:	bne	1a78c <__mempcpy_chk@plt+0x91ac>
   1a778:	ldr	r0, [r0, #20]
   1a77c:	add	r1, ip, ip, lsl #1
   1a780:	add	r0, r0, r1, lsl #2
   1a784:	mov	r1, r2
   1a788:	b	1ac7c <__mempcpy_chk@plt+0x969c>
   1a78c:	mov	r0, #0
   1a790:	bx	lr
   1a794:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a798:	add	fp, sp, #24
   1a79c:	sub	sp, sp, #16
   1a7a0:	mov	r4, r0
   1a7a4:	ldr	r0, [r0, #8]
   1a7a8:	cmp	r0, #0
   1a7ac:	beq	1a844 <__mempcpy_chk@plt+0x9264>
   1a7b0:	mov	r7, #0
   1a7b4:	add	r8, sp, #4
   1a7b8:	mov	r6, #0
   1a7bc:	ldr	r0, [r4, #24]
   1a7c0:	add	r5, r6, r6, lsl #1
   1a7c4:	add	r0, r0, r5, lsl #2
   1a7c8:	ldr	r0, [r0, #4]
   1a7cc:	cmp	r0, #0
   1a7d0:	beq	1a7dc <__mempcpy_chk@plt+0x91fc>
   1a7d4:	mov	r0, r7
   1a7d8:	b	1a81c <__mempcpy_chk@plt+0x923c>
   1a7dc:	mov	r0, r8
   1a7e0:	mov	r1, r4
   1a7e4:	mov	r2, r6
   1a7e8:	mov	r3, #1
   1a7ec:	bl	1acc8 <__mempcpy_chk@plt+0x96e8>
   1a7f0:	cmp	r0, #0
   1a7f4:	bne	1a848 <__mempcpy_chk@plt+0x9268>
   1a7f8:	ldr	r0, [r4, #24]
   1a7fc:	add	r0, r0, r5, lsl #2
   1a800:	ldr	r0, [r0, #4]
   1a804:	cmp	r0, #0
   1a808:	mov	r0, r7
   1a80c:	bne	1a81c <__mempcpy_chk@plt+0x923c>
   1a810:	ldr	r0, [sp, #12]
   1a814:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1a818:	mov	r0, #1
   1a81c:	ldr	r1, [r4, #8]
   1a820:	add	r2, r6, #1
   1a824:	subs	r3, r2, r1
   1a828:	mov	r6, r3
   1a82c:	movne	r6, r2
   1a830:	movwne	r3, #1
   1a834:	and	r7, r0, r3
   1a838:	tst	r0, #1
   1a83c:	cmpeq	r2, r1
   1a840:	bne	1a7bc <__mempcpy_chk@plt+0x91dc>
   1a844:	mov	r0, #0
   1a848:	sub	sp, fp, #24
   1a84c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a850:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a854:	add	fp, sp, #24
   1a858:	mov	r4, r0
   1a85c:	ldr	r0, [r0, #8]
   1a860:	cmp	r0, #0
   1a864:	beq	1a910 <__mempcpy_chk@plt+0x9330>
   1a868:	mov	r0, #0
   1a86c:	mov	r1, #0
   1a870:	mov	r2, #0
   1a874:	ldr	r3, [r4, #28]
   1a878:	str	r0, [r3, r1]!
   1a87c:	str	r0, [r3, #4]
   1a880:	str	r0, [r3, #8]
   1a884:	add	r1, r1, #12
   1a888:	add	r2, r2, #1
   1a88c:	ldr	r3, [r4, #8]
   1a890:	cmp	r2, r3
   1a894:	bcc	1a874 <__mempcpy_chk@plt+0x9294>
   1a898:	cmp	r3, #0
   1a89c:	beq	1a910 <__mempcpy_chk@plt+0x9330>
   1a8a0:	mov	r5, #0
   1a8a4:	ldr	r0, [r4, #24]
   1a8a8:	add	r8, r5, r5, lsl #1
   1a8ac:	add	r0, r0, r8, lsl #2
   1a8b0:	ldr	r1, [r0, #4]
   1a8b4:	cmp	r1, #1
   1a8b8:	blt	1a900 <__mempcpy_chk@plt+0x9320>
   1a8bc:	ldr	r7, [r0, #8]
   1a8c0:	mov	r6, #0
   1a8c4:	ldr	r0, [r7, r6, lsl #2]
   1a8c8:	add	r0, r0, r0, lsl #1
   1a8cc:	ldr	r1, [r4, #28]
   1a8d0:	add	r0, r1, r0, lsl #2
   1a8d4:	mov	r1, r5
   1a8d8:	bl	1b534 <__mempcpy_chk@plt+0x9f54>
   1a8dc:	cmp	r0, #0
   1a8e0:	moveq	r0, #12
   1a8e4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a8e8:	add	r6, r6, #1
   1a8ec:	ldr	r0, [r4, #24]
   1a8f0:	add	r0, r0, r8, lsl #2
   1a8f4:	ldr	r0, [r0, #4]
   1a8f8:	cmp	r6, r0
   1a8fc:	blt	1a8c4 <__mempcpy_chk@plt+0x92e4>
   1a900:	add	r5, r5, #1
   1a904:	ldr	r0, [r4, #8]
   1a908:	cmp	r5, r0
   1a90c:	bcc	1a8a4 <__mempcpy_chk@plt+0x92c4>
   1a910:	mov	r0, #0
   1a914:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a91c:	add	fp, sp, #28
   1a920:	sub	sp, sp, #4
   1a924:	mov	r9, r2
   1a928:	mov	r8, r0
   1a92c:	ldr	r5, [r2, #4]
   1a930:	ldr	r6, [r1]
   1a934:	cmp	r5, #0
   1a938:	ldrbne	r0, [r1, #28]
   1a93c:	andsne	r0, r0, #16
   1a940:	bne	1aa0c <__mempcpy_chk@plt+0x942c>
   1a944:	mov	r0, r6
   1a948:	mov	r1, #0
   1a94c:	mov	r2, #0
   1a950:	mov	r3, #8
   1a954:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   1a958:	mov	sl, r0
   1a95c:	mov	r0, r6
   1a960:	mov	r1, #0
   1a964:	mov	r2, #0
   1a968:	mov	r3, #9
   1a96c:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   1a970:	mov	r4, r0
   1a974:	cmp	r5, #0
   1a978:	mov	r7, r0
   1a97c:	beq	1a998 <__mempcpy_chk@plt+0x93b8>
   1a980:	mov	r0, r6
   1a984:	mov	r1, r5
   1a988:	mov	r2, r4
   1a98c:	mov	r3, #16
   1a990:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   1a994:	mov	r7, r0
   1a998:	mov	r0, r6
   1a99c:	mov	r1, sl
   1a9a0:	mov	r2, r7
   1a9a4:	mov	r3, #16
   1a9a8:	bl	174e0 <__mempcpy_chk@plt+0x5f00>
   1a9ac:	cmp	r4, #0
   1a9b0:	beq	1a9c0 <__mempcpy_chk@plt+0x93e0>
   1a9b4:	cmp	sl, #0
   1a9b8:	cmpne	r7, #0
   1a9bc:	bne	1a9d0 <__mempcpy_chk@plt+0x93f0>
   1a9c0:	mov	r0, #12
   1a9c4:	str	r0, [r8]
   1a9c8:	mov	r5, #0
   1a9cc:	b	1aa28 <__mempcpy_chk@plt+0x9448>
   1a9d0:	mov	r5, r0
   1a9d4:	cmp	r0, #0
   1a9d8:	beq	1a9c0 <__mempcpy_chk@plt+0x93e0>
   1a9dc:	ldr	r0, [r9, #20]
   1a9e0:	str	r0, [r4, #20]
   1a9e4:	str	r0, [sl, #20]
   1a9e8:	ldr	r0, [r4, #24]
   1a9ec:	ldr	r1, [r9, #24]
   1a9f0:	lsr	r1, r1, #19
   1a9f4:	bfi	r0, r1, #19, #1
   1a9f8:	str	r0, [r4, #24]
   1a9fc:	ldr	r0, [sl, #24]
   1aa00:	bfi	r0, r1, #19, #1
   1aa04:	str	r0, [sl, #24]
   1aa08:	b	1aa28 <__mempcpy_chk@plt+0x9448>
   1aa0c:	ldr	r0, [r9, #20]
   1aa10:	cmp	r0, #31
   1aa14:	bgt	1aa28 <__mempcpy_chk@plt+0x9448>
   1aa18:	ldr	r1, [r6, #80]	; 0x50
   1aa1c:	mov	r2, #1
   1aa20:	tst	r1, r2, lsl r0
   1aa24:	bne	1a944 <__mempcpy_chk@plt+0x9364>
   1aa28:	mov	r0, r5
   1aa2c:	sub	sp, fp, #28
   1aa30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa38:	add	fp, sp, #28
   1aa3c:	sub	sp, sp, #12
   1aa40:	mov	r5, r2
   1aa44:	mov	r9, r1
   1aa48:	mov	r4, r0
   1aa4c:	ldr	r7, [r0, #4]
   1aa50:	ldr	r0, [r0, #8]
   1aa54:	cmp	r0, r7
   1aa58:	bcs	1ab28 <__mempcpy_chk@plt+0x9548>
   1aa5c:	ldr	r0, [r4]
   1aa60:	ldr	r1, [r4, #8]
   1aa64:	str	r9, [r0, r1, lsl #3]!
   1aa68:	str	r5, [r0, #4]
   1aa6c:	ldr	r0, [r4]
   1aa70:	ldr	r1, [r4, #8]
   1aa74:	add	r0, r0, r1, lsl #3
   1aa78:	ldr	r1, [r0, #4]
   1aa7c:	bfc	r1, #8, #10
   1aa80:	str	r1, [r0, #4]
   1aa84:	uxtb	r1, r5
   1aa88:	cmp	r1, #5
   1aa8c:	bne	1aaa0 <__mempcpy_chk@plt+0x94c0>
   1aa90:	ldr	r2, [r4, #92]	; 0x5c
   1aa94:	mov	r0, #1048576	; 0x100000
   1aa98:	cmp	r2, #1
   1aa9c:	bgt	1aab0 <__mempcpy_chk@plt+0x94d0>
   1aaa0:	sub	r0, r1, #6
   1aaa4:	clz	r0, r0
   1aaa8:	lsr	r0, r0, #5
   1aaac:	lsl	r0, r0, #20
   1aab0:	ldr	r1, [r4]
   1aab4:	ldr	r2, [r4, #8]
   1aab8:	add	r1, r1, r2, lsl #3
   1aabc:	ldr	r2, [r1, #4]
   1aac0:	bic	r2, r2, #1048576	; 0x100000
   1aac4:	orr	r0, r2, r0
   1aac8:	str	r0, [r1, #4]
   1aacc:	ldr	r0, [r4, #8]
   1aad0:	ldr	r1, [r4, #12]
   1aad4:	mvn	r2, #0
   1aad8:	str	r2, [r1, r0, lsl #2]
   1aadc:	ldr	r0, [r4, #8]
   1aae0:	ldr	r1, [r4, #20]
   1aae4:	add	r0, r0, r0, lsl #1
   1aae8:	mov	r2, #0
   1aaec:	str	r2, [r1, r0, lsl #2]!
   1aaf0:	str	r2, [r1, #4]
   1aaf4:	str	r2, [r1, #8]
   1aaf8:	ldr	r0, [r4, #8]
   1aafc:	ldr	r1, [r4, #24]
   1ab00:	add	r0, r0, r0, lsl #1
   1ab04:	str	r2, [r1, r0, lsl #2]!
   1ab08:	str	r2, [r1, #4]
   1ab0c:	str	r2, [r1, #8]
   1ab10:	ldr	r6, [r4, #8]
   1ab14:	add	r0, r6, #1
   1ab18:	str	r0, [r4, #8]
   1ab1c:	mov	r0, r6
   1ab20:	sub	sp, fp, #28
   1ab24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab28:	lsl	r1, r7, #1
   1ab2c:	mvn	r6, #0
   1ab30:	movw	r0, #21845	; 0x5555
   1ab34:	movt	r0, #5461	; 0x1555
   1ab38:	cmp	r1, r0
   1ab3c:	bhi	1ab1c <__mempcpy_chk@plt+0x953c>
   1ab40:	str	r1, [sp, #8]
   1ab44:	ldr	r0, [r4]
   1ab48:	lsl	r1, r7, #4
   1ab4c:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1ab50:	cmp	r0, #0
   1ab54:	beq	1ab1c <__mempcpy_chk@plt+0x953c>
   1ab58:	str	r0, [r4]
   1ab5c:	ldr	r0, [r4, #12]
   1ab60:	lsl	r8, r7, #3
   1ab64:	mov	r1, r8
   1ab68:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1ab6c:	str	r0, [sp, #4]
   1ab70:	ldr	r0, [r4, #16]
   1ab74:	mov	r1, r8
   1ab78:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1ab7c:	mov	r2, r0
   1ab80:	ldr	r0, [r4, #20]
   1ab84:	add	r1, r7, r7, lsl #1
   1ab88:	mov	r7, r2
   1ab8c:	lsl	r8, r1, #3
   1ab90:	mov	r1, r8
   1ab94:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1ab98:	mov	sl, r0
   1ab9c:	ldr	r0, [r4, #24]
   1aba0:	mov	r1, r8
   1aba4:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1aba8:	mov	r8, r0
   1abac:	ldr	r0, [sp, #4]
   1abb0:	cmp	r0, #0
   1abb4:	beq	1abc4 <__mempcpy_chk@plt+0x95e4>
   1abb8:	cmp	r7, #0
   1abbc:	cmpne	sl, #0
   1abc0:	bne	1abe4 <__mempcpy_chk@plt+0x9604>
   1abc4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1abc8:	mov	r0, r7
   1abcc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1abd0:	mov	r0, sl
   1abd4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1abd8:	mov	r0, r8
   1abdc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1abe0:	b	1ab1c <__mempcpy_chk@plt+0x953c>
   1abe4:	cmp	r8, #0
   1abe8:	beq	1abc4 <__mempcpy_chk@plt+0x95e4>
   1abec:	add	r1, r4, #12
   1abf0:	stm	r1, {r0, r7, sl}
   1abf4:	str	r8, [r4, #24]
   1abf8:	ldr	r0, [sp, #8]
   1abfc:	str	r0, [r4, #4]
   1ac00:	b	1aa5c <__mempcpy_chk@plt+0x947c>
   1ac04:	push	{r4, r5, r6, sl, fp, lr}
   1ac08:	add	fp, sp, #16
   1ac0c:	mov	r5, r2
   1ac10:	mov	r4, r1
   1ac14:	mov	r6, r0
   1ac18:	mov	r0, #2
   1ac1c:	str	r0, [r6]
   1ac20:	mov	r0, #8
   1ac24:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1ac28:	str	r0, [r6, #8]
   1ac2c:	cmp	r0, #0
   1ac30:	moveq	r0, #12
   1ac34:	popeq	{r4, r5, r6, sl, fp, pc}
   1ac38:	cmp	r4, r5
   1ac3c:	bne	1ac58 <__mempcpy_chk@plt+0x9678>
   1ac40:	mov	r0, #1
   1ac44:	str	r0, [r6, #4]
   1ac48:	ldr	r0, [r6, #8]
   1ac4c:	str	r4, [r0]
   1ac50:	mov	r0, #0
   1ac54:	pop	{r4, r5, r6, sl, fp, pc}
   1ac58:	mov	r0, #2
   1ac5c:	str	r0, [r6, #4]
   1ac60:	ldr	r0, [r6, #8]
   1ac64:	cmp	r4, r5
   1ac68:	stmlt	r0, {r4, r5}
   1ac6c:	strge	r5, [r0]
   1ac70:	strge	r4, [r0, #4]
   1ac74:	mov	r0, #0
   1ac78:	pop	{r4, r5, r6, sl, fp, pc}
   1ac7c:	push	{r4, r5, fp, lr}
   1ac80:	add	fp, sp, #8
   1ac84:	mov	r5, r1
   1ac88:	mov	r4, r0
   1ac8c:	mov	r0, #1
   1ac90:	str	r0, [r4]
   1ac94:	str	r0, [r4, #4]
   1ac98:	mov	r0, #4
   1ac9c:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1aca0:	str	r0, [r4, #8]
   1aca4:	cmp	r0, #0
   1aca8:	strne	r5, [r0]
   1acac:	movne	r0, #0
   1acb0:	popne	{r4, r5, fp, pc}
   1acb4:	mov	r0, #0
   1acb8:	str	r0, [r4]
   1acbc:	str	r0, [r4, #4]
   1acc0:	mov	r0, #12
   1acc4:	pop	{r4, r5, fp, pc}
   1acc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1accc:	add	fp, sp, #28
   1acd0:	sub	sp, sp, #44	; 0x2c
   1acd4:	mov	r8, r3
   1acd8:	mov	r6, r2
   1acdc:	mov	r5, r1
   1ace0:	mov	r7, r0
   1ace4:	ldr	r0, [r1, #20]
   1ace8:	add	r4, r2, r2, lsl #1
   1acec:	add	r0, r0, r4, lsl #2
   1acf0:	ldr	r0, [r0, #4]
   1acf4:	add	r1, r0, #1
   1acf8:	add	r0, sp, #32
   1acfc:	bl	1aed4 <__mempcpy_chk@plt+0x98f4>
   1ad00:	cmp	r0, #0
   1ad04:	bne	1aecc <__mempcpy_chk@plt+0x98ec>
   1ad08:	ldr	r0, [sp, #36]	; 0x24
   1ad0c:	ldr	r1, [sp, #40]	; 0x28
   1ad10:	add	r2, r0, #1
   1ad14:	str	r2, [sp, #36]	; 0x24
   1ad18:	str	r6, [r1, r0, lsl #2]
   1ad1c:	ldr	r0, [r5, #24]
   1ad20:	add	r0, r0, r4, lsl #2
   1ad24:	mvn	r1, #0
   1ad28:	str	r1, [r0, #4]
   1ad2c:	ldr	r1, [r5]
   1ad30:	add	r0, r1, r6, lsl #3
   1ad34:	ldr	r0, [r0, #4]
   1ad38:	ubfx	r0, r0, #8, #10
   1ad3c:	cmp	r0, #0
   1ad40:	beq	1ad90 <__mempcpy_chk@plt+0x97b0>
   1ad44:	ldr	r2, [r5, #20]
   1ad48:	add	r2, r2, r4, lsl #2
   1ad4c:	ldr	r3, [r2, #4]
   1ad50:	cmp	r3, #0
   1ad54:	beq	1ad90 <__mempcpy_chk@plt+0x97b0>
   1ad58:	ldr	r2, [r2, #8]
   1ad5c:	ldr	r2, [r2]
   1ad60:	add	r1, r1, r2, lsl #3
   1ad64:	ldrb	r1, [r1, #6]
   1ad68:	tst	r1, #4
   1ad6c:	bne	1ad90 <__mempcpy_chk@plt+0x97b0>
   1ad70:	str	r0, [sp]
   1ad74:	mov	r0, r5
   1ad78:	mov	r1, r6
   1ad7c:	mov	r2, r6
   1ad80:	mov	r3, r6
   1ad84:	bl	1af04 <__mempcpy_chk@plt+0x9924>
   1ad88:	cmp	r0, #0
   1ad8c:	bne	1aecc <__mempcpy_chk@plt+0x98ec>
   1ad90:	ldr	r0, [r5]
   1ad94:	add	r0, r0, r6, lsl #3
   1ad98:	ldrb	r0, [r0, #4]
   1ad9c:	tst	r0, #8
   1ada0:	beq	1aea0 <__mempcpy_chk@plt+0x98c0>
   1ada4:	ldr	r0, [r5, #20]
   1ada8:	add	r1, r0, r4, lsl #2
   1adac:	ldr	r1, [r1, #4]
   1adb0:	cmp	r1, #1
   1adb4:	blt	1aea0 <__mempcpy_chk@plt+0x98c0>
   1adb8:	str	r8, [sp, #8]
   1adbc:	str	r7, [sp, #12]
   1adc0:	mov	r8, #0
   1adc4:	add	r7, sp, #16
   1adc8:	add	sl, sp, #32
   1adcc:	mov	r6, #0
   1add0:	add	r0, r0, r4, lsl #2
   1add4:	ldr	r0, [r0, #8]
   1add8:	ldr	r2, [r0, r6, lsl #2]
   1addc:	add	r9, r2, r2, lsl #1
   1ade0:	ldr	r0, [r5, #24]
   1ade4:	add	r0, r0, r9, lsl #2
   1ade8:	ldr	r1, [r0, #4]
   1adec:	cmn	r1, #1
   1adf0:	beq	1ae58 <__mempcpy_chk@plt+0x9878>
   1adf4:	cmp	r1, #0
   1adf8:	bne	1ae18 <__mempcpy_chk@plt+0x9838>
   1adfc:	mov	r0, r7
   1ae00:	mov	r1, r5
   1ae04:	mov	r3, #0
   1ae08:	bl	1acc8 <__mempcpy_chk@plt+0x96e8>
   1ae0c:	cmp	r0, #0
   1ae10:	beq	1ae28 <__mempcpy_chk@plt+0x9848>
   1ae14:	b	1aecc <__mempcpy_chk@plt+0x98ec>
   1ae18:	vldr	d16, [r0]
   1ae1c:	ldr	r0, [r0, #8]
   1ae20:	str	r0, [sp, #24]
   1ae24:	vstr	d16, [sp, #16]
   1ae28:	mov	r0, sl
   1ae2c:	mov	r1, r7
   1ae30:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   1ae34:	cmp	r0, #0
   1ae38:	bne	1aecc <__mempcpy_chk@plt+0x98ec>
   1ae3c:	ldr	r0, [r5, #24]
   1ae40:	add	r0, r0, r9, lsl #2
   1ae44:	ldr	r0, [r0, #4]
   1ae48:	cmp	r0, #0
   1ae4c:	bne	1ae5c <__mempcpy_chk@plt+0x987c>
   1ae50:	ldr	r0, [sp, #24]
   1ae54:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ae58:	mov	r8, #1
   1ae5c:	ldr	r0, [r5, #20]
   1ae60:	add	r1, r0, r4, lsl #2
   1ae64:	ldr	r1, [r1, #4]
   1ae68:	add	r6, r6, #1
   1ae6c:	cmp	r6, r1
   1ae70:	blt	1add0 <__mempcpy_chk@plt+0x97f0>
   1ae74:	tst	r8, #1
   1ae78:	ldr	r7, [sp, #12]
   1ae7c:	ldr	r0, [sp, #8]
   1ae80:	beq	1aea0 <__mempcpy_chk@plt+0x98c0>
   1ae84:	cmp	r0, #0
   1ae88:	bne	1aea0 <__mempcpy_chk@plt+0x98c0>
   1ae8c:	ldr	r0, [r5, #24]
   1ae90:	add	r0, r0, r4, lsl #2
   1ae94:	mov	r1, #0
   1ae98:	str	r1, [r0, #4]
   1ae9c:	b	1aeb8 <__mempcpy_chk@plt+0x98d8>
   1aea0:	ldr	r0, [r5, #24]
   1aea4:	vldr	d16, [sp, #32]
   1aea8:	add	r0, r0, r4, lsl #2
   1aeac:	ldr	r1, [sp, #40]	; 0x28
   1aeb0:	str	r1, [r0, #8]
   1aeb4:	vstr	d16, [r0]
   1aeb8:	ldr	r0, [sp, #40]	; 0x28
   1aebc:	vldr	d16, [sp, #32]
   1aec0:	str	r0, [r7, #8]
   1aec4:	vstr	d16, [r7]
   1aec8:	mov	r0, #0
   1aecc:	sub	sp, fp, #28
   1aed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aed4:	push	{r4, r5, fp, lr}
   1aed8:	add	fp, sp, #8
   1aedc:	mov	r4, r0
   1aee0:	mov	r5, #0
   1aee4:	stm	r0, {r1, r5}
   1aee8:	lsl	r0, r1, #2
   1aeec:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1aef0:	str	r0, [r4, #8]
   1aef4:	cmp	r0, #0
   1aef8:	movweq	r5, #12
   1aefc:	mov	r0, r5
   1af00:	pop	{r4, r5, fp, pc}
   1af04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af08:	add	fp, sp, #28
   1af0c:	sub	sp, sp, #20
   1af10:	str	r3, [sp, #8]
   1af14:	mov	r8, r2
   1af18:	mov	sl, r1
   1af1c:	mov	r5, r0
   1af20:	ldr	r0, [fp, #8]
   1af24:	str	r0, [sp, #16]
   1af28:	ldr	r0, [r5]
   1af2c:	add	r0, r0, sl, lsl #3
   1af30:	ldrb	r1, [r0, #4]!
   1af34:	cmp	r1, #4
   1af38:	bne	1afb4 <__mempcpy_chk@plt+0x99d4>
   1af3c:	ldr	r0, [r5, #12]
   1af40:	ldr	r1, [r5, #20]
   1af44:	ldr	r4, [r0, sl, lsl #2]
   1af48:	add	r6, r8, r8, lsl #1
   1af4c:	add	r0, r1, r6, lsl #2
   1af50:	mov	r1, #0
   1af54:	str	r1, [r0, #4]
   1af58:	mov	r0, r5
   1af5c:	mov	r1, r4
   1af60:	ldr	r2, [sp, #16]
   1af64:	bl	1b324 <__mempcpy_chk@plt+0x9d44>
   1af68:	mov	r9, #12
   1af6c:	cmn	r0, #1
   1af70:	beq	1b174 <__mempcpy_chk@plt+0x9b94>
   1af74:	mov	r7, r0
   1af78:	ldr	r0, [r5, #12]
   1af7c:	ldr	r1, [r0, sl, lsl #2]
   1af80:	str	r1, [r0, r8, lsl #2]
   1af84:	ldr	r0, [r5, #20]
   1af88:	add	r0, r0, r6, lsl #2
   1af8c:	mov	r1, r7
   1af90:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1af94:	mov	r1, #0
   1af98:	cmp	r0, #0
   1af9c:	mov	sl, r4
   1afa0:	mov	r8, r7
   1afa4:	beq	1b174 <__mempcpy_chk@plt+0x9b94>
   1afa8:	cmp	r1, #0
   1afac:	beq	1af28 <__mempcpy_chk@plt+0x9948>
   1afb0:	b	1b154 <__mempcpy_chk@plt+0x9b74>
   1afb4:	ldr	r1, [r5, #20]
   1afb8:	add	r7, sl, sl, lsl #1
   1afbc:	add	r3, r1, r7, lsl #2
   1afc0:	ldr	r2, [r3, #4]
   1afc4:	cmp	r2, #0
   1afc8:	beq	1b164 <__mempcpy_chk@plt+0x9b84>
   1afcc:	ldr	r3, [r3, #8]
   1afd0:	ldr	r9, [r3]
   1afd4:	add	r4, r8, r8, lsl #1
   1afd8:	add	r6, r1, r4, lsl #2
   1afdc:	mov	r1, #0
   1afe0:	str	r1, [r6, #4]
   1afe4:	cmp	r2, #1
   1afe8:	bne	1b024 <__mempcpy_chk@plt+0x9a44>
   1afec:	ldr	r1, [sp, #8]
   1aff0:	cmp	sl, r1
   1aff4:	bne	1b05c <__mempcpy_chk@plt+0x9a7c>
   1aff8:	cmp	r8, sl
   1affc:	beq	1b05c <__mempcpy_chk@plt+0x9a7c>
   1b000:	mov	r0, r6
   1b004:	mov	r1, r9
   1b008:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1b00c:	cmp	r0, #0
   1b010:	mov	r1, #1
   1b014:	movwne	r1, #2
   1b018:	cmp	r1, #0
   1b01c:	beq	1af28 <__mempcpy_chk@plt+0x9948>
   1b020:	b	1b154 <__mempcpy_chk@plt+0x9b74>
   1b024:	str	r4, [sp, #12]
   1b028:	mov	r0, r5
   1b02c:	mov	r1, r9
   1b030:	ldr	r4, [sp, #16]
   1b034:	mov	r2, r4
   1b038:	bl	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b03c:	cmn	r0, #1
   1b040:	beq	1b09c <__mempcpy_chk@plt+0x9abc>
   1b044:	mov	r1, r0
   1b048:	mov	r0, r6
   1b04c:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1b050:	cmp	r0, #0
   1b054:	bne	1b100 <__mempcpy_chk@plt+0x9b20>
   1b058:	b	1b188 <__mempcpy_chk@plt+0x9ba8>
   1b05c:	ldr	r0, [r0]
   1b060:	ubfx	r0, r0, #8, #10
   1b064:	ldr	r2, [sp, #16]
   1b068:	orr	r2, r0, r2
   1b06c:	mov	r0, r5
   1b070:	mov	r1, r9
   1b074:	str	r2, [sp, #16]
   1b078:	bl	1b324 <__mempcpy_chk@plt+0x9d44>
   1b07c:	mov	sl, r9
   1b080:	mov	r9, #12
   1b084:	cmn	r0, #1
   1b088:	beq	1b174 <__mempcpy_chk@plt+0x9b94>
   1b08c:	mov	r8, r0
   1b090:	ldr	r0, [r5, #20]
   1b094:	add	r0, r0, r4, lsl #2
   1b098:	b	1b13c <__mempcpy_chk@plt+0x9b5c>
   1b09c:	mov	r0, r5
   1b0a0:	mov	r8, r9
   1b0a4:	mov	r1, r9
   1b0a8:	mov	r2, r4
   1b0ac:	bl	1b324 <__mempcpy_chk@plt+0x9d44>
   1b0b0:	mov	r9, #12
   1b0b4:	cmn	r0, #1
   1b0b8:	beq	1b174 <__mempcpy_chk@plt+0x9b94>
   1b0bc:	mov	r6, r0
   1b0c0:	ldr	r0, [r5, #20]
   1b0c4:	ldr	r1, [sp, #12]
   1b0c8:	add	r0, r0, r1, lsl #2
   1b0cc:	mov	r1, r6
   1b0d0:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1b0d4:	cmp	r0, #0
   1b0d8:	beq	1b174 <__mempcpy_chk@plt+0x9b94>
   1b0dc:	ldr	r4, [sp, #16]
   1b0e0:	str	r4, [sp]
   1b0e4:	mov	r0, r5
   1b0e8:	mov	r1, r8
   1b0ec:	mov	r2, r6
   1b0f0:	ldr	r3, [sp, #8]
   1b0f4:	bl	1af04 <__mempcpy_chk@plt+0x9924>
   1b0f8:	cmp	r0, #0
   1b0fc:	bne	1b180 <__mempcpy_chk@plt+0x9ba0>
   1b100:	ldr	r0, [r5, #20]
   1b104:	add	r0, r0, r7, lsl #2
   1b108:	ldr	r0, [r0, #8]
   1b10c:	ldr	sl, [r0, #4]
   1b110:	mov	r0, r5
   1b114:	mov	r1, sl
   1b118:	mov	r2, r4
   1b11c:	bl	1b324 <__mempcpy_chk@plt+0x9d44>
   1b120:	mov	r9, #12
   1b124:	cmn	r0, #1
   1b128:	beq	1b174 <__mempcpy_chk@plt+0x9b94>
   1b12c:	mov	r8, r0
   1b130:	ldr	r0, [r5, #20]
   1b134:	ldr	r1, [sp, #12]
   1b138:	add	r0, r0, r1, lsl #2
   1b13c:	mov	r1, r8
   1b140:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1b144:	mov	r1, #0
   1b148:	cmp	r0, #0
   1b14c:	bne	1afa8 <__mempcpy_chk@plt+0x99c8>
   1b150:	b	1b174 <__mempcpy_chk@plt+0x9b94>
   1b154:	mov	r9, #12
   1b158:	cmp	r1, #2
   1b15c:	moveq	r9, #0
   1b160:	b	1b174 <__mempcpy_chk@plt+0x9b94>
   1b164:	ldr	r0, [r5, #12]
   1b168:	ldr	r1, [r0, sl, lsl #2]
   1b16c:	str	r1, [r0, r8, lsl #2]
   1b170:	mov	r9, #0
   1b174:	mov	r0, r9
   1b178:	sub	sp, fp, #28
   1b17c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b180:	mov	r9, r0
   1b184:	b	1b174 <__mempcpy_chk@plt+0x9b94>
   1b188:	mov	r9, #12
   1b18c:	b	1b174 <__mempcpy_chk@plt+0x9b94>
   1b190:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b194:	add	fp, sp, #24
   1b198:	mov	r8, #0
   1b19c:	cmp	r1, #0
   1b1a0:	beq	1b2fc <__mempcpy_chk@plt+0x9d1c>
   1b1a4:	mov	r6, r1
   1b1a8:	ldr	r1, [r1, #4]
   1b1ac:	cmp	r1, #0
   1b1b0:	beq	1b2fc <__mempcpy_chk@plt+0x9d1c>
   1b1b4:	mov	r9, r0
   1b1b8:	ldr	r2, [r0]
   1b1bc:	ldr	r0, [r0, #4]
   1b1c0:	add	r3, r0, r1, lsl #1
   1b1c4:	cmp	r2, r3
   1b1c8:	bge	1b1f4 <__mempcpy_chk@plt+0x9c14>
   1b1cc:	add	r7, r2, r1
   1b1d0:	lsl	r1, r7, #3
   1b1d4:	ldr	r0, [r9, #8]
   1b1d8:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1b1dc:	cmp	r0, #0
   1b1e0:	beq	1b318 <__mempcpy_chk@plt+0x9d38>
   1b1e4:	str	r0, [r9, #8]
   1b1e8:	lsl	r0, r7, #1
   1b1ec:	str	r0, [r9]
   1b1f0:	ldr	r0, [r9, #4]
   1b1f4:	ldr	r2, [r6, #4]
   1b1f8:	cmp	r0, #0
   1b1fc:	beq	1b304 <__mempcpy_chk@plt+0x9d24>
   1b200:	add	r7, r0, r2, lsl #1
   1b204:	sub	r1, r0, #1
   1b208:	sub	r0, r2, #1
   1b20c:	orr	r2, r0, r1
   1b210:	cmp	r2, #0
   1b214:	blt	1b260 <__mempcpy_chk@plt+0x9c80>
   1b218:	ldr	r2, [r6, #8]
   1b21c:	ldr	r3, [r9, #8]
   1b220:	ldr	r4, [r2, r0, lsl #2]
   1b224:	ldr	r5, [r3, r1, lsl #2]
   1b228:	cmp	r5, r4
   1b22c:	bne	1b23c <__mempcpy_chk@plt+0x9c5c>
   1b230:	sub	r1, r1, #1
   1b234:	sub	r0, r0, #1
   1b238:	b	1b254 <__mempcpy_chk@plt+0x9c74>
   1b23c:	bge	1b250 <__mempcpy_chk@plt+0x9c70>
   1b240:	sub	r7, r7, #1
   1b244:	str	r4, [r3, r7, lsl #2]
   1b248:	sub	r0, r0, #1
   1b24c:	b	1b254 <__mempcpy_chk@plt+0x9c74>
   1b250:	sub	r1, r1, #1
   1b254:	orr	r5, r0, r1
   1b258:	cmn	r5, #1
   1b25c:	bgt	1b220 <__mempcpy_chk@plt+0x9c40>
   1b260:	cmp	r0, #0
   1b264:	blt	1b284 <__mempcpy_chk@plt+0x9ca4>
   1b268:	add	r2, r0, #1
   1b26c:	sub	r7, r7, r2
   1b270:	ldr	r0, [r9, #8]
   1b274:	add	r0, r0, r7, lsl #2
   1b278:	ldr	r1, [r6, #8]
   1b27c:	lsl	r2, r2, #2
   1b280:	bl	1134c <memcpy@plt>
   1b284:	ldr	r1, [r6, #4]
   1b288:	ldr	r0, [r9, #4]
   1b28c:	add	r1, r0, r1, lsl #1
   1b290:	sub	r1, r1, #1
   1b294:	sub	r2, r1, r7
   1b298:	adds	r2, r2, #1
   1b29c:	beq	1b2fc <__mempcpy_chk@plt+0x9d1c>
   1b2a0:	add	r3, r2, r0
   1b2a4:	str	r3, [r9, #4]
   1b2a8:	sub	r3, r0, #1
   1b2ac:	ldr	r0, [r9, #8]
   1b2b0:	ldr	r6, [r0, r3, lsl #2]
   1b2b4:	ldr	r5, [r0, r1, lsl #2]
   1b2b8:	cmp	r5, r6
   1b2bc:	ble	1b2d8 <__mempcpy_chk@plt+0x9cf8>
   1b2c0:	add	r6, r2, r3
   1b2c4:	str	r5, [r0, r6, lsl #2]
   1b2c8:	subs	r2, r2, #1
   1b2cc:	sub	r1, r1, #1
   1b2d0:	bne	1b2b0 <__mempcpy_chk@plt+0x9cd0>
   1b2d4:	b	1b2fc <__mempcpy_chk@plt+0x9d1c>
   1b2d8:	add	r5, r2, r3
   1b2dc:	str	r6, [r0, r5, lsl #2]
   1b2e0:	sub	r6, r3, #1
   1b2e4:	cmp	r3, #0
   1b2e8:	mov	r3, r6
   1b2ec:	bgt	1b2b0 <__mempcpy_chk@plt+0x9cd0>
   1b2f0:	add	r1, r0, r7, lsl #2
   1b2f4:	lsl	r2, r2, #2
   1b2f8:	bl	1134c <memcpy@plt>
   1b2fc:	mov	r0, r8
   1b300:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b304:	str	r2, [r9, #4]
   1b308:	ldr	r0, [r9, #8]
   1b30c:	ldr	r2, [r6, #4]
   1b310:	ldr	r1, [r6, #8]
   1b314:	b	1b2f4 <__mempcpy_chk@plt+0x9d14>
   1b318:	mov	r8, #12
   1b31c:	mov	r0, r8
   1b320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b324:	push	{r4, r5, r6, sl, fp, lr}
   1b328:	add	fp, sp, #16
   1b32c:	mov	r6, r2
   1b330:	mov	r4, r1
   1b334:	mov	r5, r0
   1b338:	ldr	r0, [r0]
   1b33c:	ldr	r1, [r0, r1, lsl #3]!
   1b340:	ldr	r2, [r0, #4]
   1b344:	mov	r0, r5
   1b348:	bl	1aa34 <__mempcpy_chk@plt+0x9454>
   1b34c:	cmn	r0, #1
   1b350:	ldrne	r1, [r5]
   1b354:	addne	r1, r1, r0, lsl #3
   1b358:	ldrne	r2, [r1, #4]
   1b35c:	bfine	r2, r6, #8, #10
   1b360:	strne	r2, [r1, #4]
   1b364:	ldrne	r1, [r5]
   1b368:	addne	r2, r1, r4, lsl #3
   1b36c:	ldrne	r2, [r2, #4]
   1b370:	movwne	r3, #65280	; 0xff00
   1b374:	movtne	r3, #3
   1b378:	andne	r2, r2, r3
   1b37c:	addne	r1, r1, r0, lsl #3
   1b380:	ldrne	r3, [r1, #4]
   1b384:	orrne	r2, r2, r3
   1b388:	strne	r2, [r1, #4]
   1b38c:	ldrne	r1, [r5]
   1b390:	addne	r1, r1, r0, lsl #3
   1b394:	ldrne	r2, [r1, #4]
   1b398:	orrne	r2, r2, #262144	; 0x40000
   1b39c:	strne	r2, [r1, #4]
   1b3a0:	ldrne	r1, [r5, #16]
   1b3a4:	strne	r4, [r1, r0, lsl #2]
   1b3a8:	pop	{r4, r5, r6, sl, fp, pc}
   1b3ac:	push	{r4, r5, fp, lr}
   1b3b0:	add	fp, sp, #8
   1b3b4:	mov	r5, r1
   1b3b8:	mov	r4, r0
   1b3bc:	ldr	r2, [r0]
   1b3c0:	cmp	r2, #0
   1b3c4:	beq	1b3f0 <__mempcpy_chk@plt+0x9e10>
   1b3c8:	ldr	r1, [r4, #4]
   1b3cc:	cmp	r1, #0
   1b3d0:	bne	1b408 <__mempcpy_chk@plt+0x9e28>
   1b3d4:	ldr	r0, [r4, #8]
   1b3d8:	str	r5, [r0]
   1b3dc:	ldr	r0, [r4, #4]
   1b3e0:	add	r0, r0, #1
   1b3e4:	str	r0, [r4, #4]
   1b3e8:	mov	r0, #1
   1b3ec:	pop	{r4, r5, fp, pc}
   1b3f0:	mov	r0, r4
   1b3f4:	mov	r1, r5
   1b3f8:	bl	1ac7c <__mempcpy_chk@plt+0x969c>
   1b3fc:	clz	r0, r0
   1b400:	lsr	r0, r0, #5
   1b404:	pop	{r4, r5, fp, pc}
   1b408:	cmp	r2, r1
   1b40c:	bne	1b438 <__mempcpy_chk@plt+0x9e58>
   1b410:	lsl	r0, r2, #1
   1b414:	str	r0, [r4]
   1b418:	ldr	r0, [r4, #8]
   1b41c:	lsl	r1, r2, #3
   1b420:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1b424:	cmp	r0, #0
   1b428:	moveq	r0, #0
   1b42c:	popeq	{r4, r5, fp, pc}
   1b430:	str	r0, [r4, #8]
   1b434:	ldr	r1, [r4, #4]
   1b438:	ldr	ip, [r4, #8]
   1b43c:	ldr	r2, [ip]
   1b440:	cmp	r2, r5
   1b444:	ble	1b47c <__mempcpy_chk@plt+0x9e9c>
   1b448:	cmp	r1, #1
   1b44c:	blt	1b4ac <__mempcpy_chk@plt+0x9ecc>
   1b450:	add	r2, ip, r1, lsl #2
   1b454:	add	r1, r1, #1
   1b458:	mov	r3, r2
   1b45c:	ldr	r0, [r3, #-4]!
   1b460:	str	r0, [r2]
   1b464:	sub	r1, r1, #1
   1b468:	cmp	r1, #1
   1b46c:	mov	r2, r3
   1b470:	bgt	1b45c <__mempcpy_chk@plt+0x9e7c>
   1b474:	sub	r1, r1, #1
   1b478:	b	1b4ac <__mempcpy_chk@plt+0x9ecc>
   1b47c:	add	r2, ip, r1, lsl #2
   1b480:	ldr	r3, [r2, #-4]
   1b484:	cmp	r3, r5
   1b488:	ble	1b4ac <__mempcpy_chk@plt+0x9ecc>
   1b48c:	sub	r1, r1, #2
   1b490:	str	r3, [r2]
   1b494:	ldr	r3, [r2, #-8]
   1b498:	sub	r2, r2, #4
   1b49c:	sub	r1, r1, #1
   1b4a0:	cmp	r3, r5
   1b4a4:	bgt	1b490 <__mempcpy_chk@plt+0x9eb0>
   1b4a8:	add	r1, r1, #2
   1b4ac:	str	r5, [ip, r1, lsl #2]
   1b4b0:	b	1b3dc <__mempcpy_chk@plt+0x9dfc>
   1b4b4:	push	{r4, r5, fp, lr}
   1b4b8:	add	fp, sp, #8
   1b4bc:	mov	ip, r0
   1b4c0:	ldr	r3, [r0, #8]
   1b4c4:	sub	lr, r3, #1
   1b4c8:	mvn	r0, #0
   1b4cc:	cmp	lr, #1
   1b4d0:	blt	1b528 <__mempcpy_chk@plt+0x9f48>
   1b4d4:	ldr	r4, [ip]
   1b4d8:	add	r4, r4, lr, lsl #3
   1b4dc:	ldr	r5, [r4, #4]
   1b4e0:	ands	r4, r5, #262144	; 0x40000
   1b4e4:	beq	1b528 <__mempcpy_chk@plt+0x9f48>
   1b4e8:	ldr	r4, [ip, #16]
   1b4ec:	sub	lr, r4, #4
   1b4f0:	ldr	r4, [lr, r3, lsl #2]
   1b4f4:	cmp	r4, r1
   1b4f8:	ubfxeq	r4, r5, #8, #10
   1b4fc:	cmpeq	r4, r2
   1b500:	beq	1b52c <__mempcpy_chk@plt+0x9f4c>
   1b504:	sub	r4, r3, #2
   1b508:	cmp	r4, #1
   1b50c:	poplt	{r4, r5, fp, pc}
   1b510:	ldr	r4, [ip]
   1b514:	add	r4, r4, r3, lsl #3
   1b518:	ldr	r5, [r4, #-12]
   1b51c:	ands	r4, r5, #262144	; 0x40000
   1b520:	sub	r3, r3, #1
   1b524:	bne	1b4f0 <__mempcpy_chk@plt+0x9f10>
   1b528:	pop	{r4, r5, fp, pc}
   1b52c:	sub	r0, r3, #1
   1b530:	pop	{r4, r5, fp, pc}
   1b534:	push	{r4, r5, fp, lr}
   1b538:	add	fp, sp, #8
   1b53c:	mov	r4, r1
   1b540:	mov	r5, r0
   1b544:	ldr	r0, [r0]
   1b548:	ldr	r1, [r5, #4]
   1b54c:	cmp	r0, r1
   1b550:	bne	1b57c <__mempcpy_chk@plt+0x9f9c>
   1b554:	mov	r1, #2
   1b558:	add	r0, r1, r0, lsl #1
   1b55c:	str	r0, [r5]
   1b560:	lsl	r1, r0, #2
   1b564:	ldr	r0, [r5, #8]
   1b568:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1b56c:	cmp	r0, #0
   1b570:	moveq	r0, #0
   1b574:	popeq	{r4, r5, fp, pc}
   1b578:	str	r0, [r5, #8]
   1b57c:	ldmib	r5, {r0, r1}
   1b580:	add	r2, r0, #1
   1b584:	str	r2, [r5, #4]
   1b588:	str	r4, [r1, r0, lsl #2]
   1b58c:	mov	r0, #1
   1b590:	pop	{r4, r5, fp, pc}
   1b594:	push	{r4, r5, fp, lr}
   1b598:	add	fp, sp, #8
   1b59c:	mov	r5, r1
   1b5a0:	mov	r4, r0
   1b5a4:	ldr	r0, [r1, #4]
   1b5a8:	str	r0, [r4, #4]
   1b5ac:	ldr	r1, [r1, #4]
   1b5b0:	cmp	r1, #1
   1b5b4:	blt	1b5e8 <__mempcpy_chk@plt+0xa008>
   1b5b8:	str	r0, [r4]
   1b5bc:	lsl	r0, r0, #2
   1b5c0:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1b5c4:	str	r0, [r4, #8]
   1b5c8:	cmp	r0, #0
   1b5cc:	beq	1b5fc <__mempcpy_chk@plt+0xa01c>
   1b5d0:	ldr	r2, [r5, #4]
   1b5d4:	ldr	r1, [r5, #8]
   1b5d8:	lsl	r2, r2, #2
   1b5dc:	bl	1134c <memcpy@plt>
   1b5e0:	mov	r0, #0
   1b5e4:	pop	{r4, r5, fp, pc}
   1b5e8:	mov	r0, #0
   1b5ec:	str	r0, [r4]
   1b5f0:	str	r0, [r4, #4]
   1b5f4:	str	r0, [r4, #8]
   1b5f8:	pop	{r4, r5, fp, pc}
   1b5fc:	mov	r0, #0
   1b600:	str	r0, [r4]
   1b604:	str	r0, [r4, #4]
   1b608:	mov	r0, #12
   1b60c:	pop	{r4, r5, fp, pc}
   1b610:	mov	ip, r0
   1b614:	ldr	r0, [r0, #4]
   1b618:	cmp	r0, #1
   1b61c:	movlt	r0, #0
   1b620:	bxlt	lr
   1b624:	push	{r4, r5, r6, r7, fp, lr}
   1b628:	add	fp, sp, #16
   1b62c:	subs	r2, r0, #1
   1b630:	mov	r0, #0
   1b634:	mov	r3, #0
   1b638:	beq	1b668 <__mempcpy_chk@plt+0xa088>
   1b63c:	ldr	lr, [ip, #8]
   1b640:	mov	r3, #0
   1b644:	mov	r4, #1
   1b648:	add	r5, r2, r3
   1b64c:	lsr	r6, r5, #1
   1b650:	ldr	r7, [lr, r6, lsl #2]
   1b654:	cmp	r7, r1
   1b658:	movge	r2, r6
   1b65c:	addlt	r3, r4, r5, lsr #1
   1b660:	cmp	r3, r2
   1b664:	bcc	1b648 <__mempcpy_chk@plt+0xa068>
   1b668:	ldr	r2, [ip, #8]
   1b66c:	ldr	r2, [r2, r3, lsl #2]
   1b670:	cmp	r2, r1
   1b674:	addeq	r0, r3, #1
   1b678:	pop	{r4, r5, r6, r7, fp, pc}
   1b67c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b680:	add	fp, sp, #28
   1b684:	sub	sp, sp, #12
   1b688:	mov	r6, r1
   1b68c:	ldr	r1, [r2, #4]
   1b690:	cmp	r1, #0
   1b694:	beq	1b75c <__mempcpy_chk@plt+0xa17c>
   1b698:	mov	r5, r3
   1b69c:	mov	sl, r2
   1b6a0:	str	r0, [sp, #4]
   1b6a4:	mov	r0, r2
   1b6a8:	mov	r1, r3
   1b6ac:	bl	1b770 <__mempcpy_chk@plt+0xa190>
   1b6b0:	mov	r4, r0
   1b6b4:	ldr	r0, [r6, #32]
   1b6b8:	str	r6, [sp, #8]
   1b6bc:	ldr	r1, [r6, #68]	; 0x44
   1b6c0:	and	r1, r1, r4
   1b6c4:	add	r1, r1, r1, lsl #1
   1b6c8:	mov	r6, r0
   1b6cc:	ldr	r2, [r6, r1, lsl #2]!
   1b6d0:	cmp	r2, #1
   1b6d4:	blt	1b728 <__mempcpy_chk@plt+0xa148>
   1b6d8:	add	r0, r0, r1, lsl #2
   1b6dc:	ldr	r8, [r0, #8]
   1b6e0:	mov	r9, #0
   1b6e4:	ldr	r7, [r8, r9, lsl #2]
   1b6e8:	ldr	r0, [r7]
   1b6ec:	cmp	r0, r4
   1b6f0:	bne	1b718 <__mempcpy_chk@plt+0xa138>
   1b6f4:	ldrb	r0, [r7, #52]	; 0x34
   1b6f8:	and	r0, r0, #15
   1b6fc:	cmp	r0, r5
   1b700:	bne	1b718 <__mempcpy_chk@plt+0xa138>
   1b704:	ldr	r0, [r7, #40]	; 0x28
   1b708:	mov	r1, sl
   1b70c:	bl	1b79c <__mempcpy_chk@plt+0xa1bc>
   1b710:	cmp	r0, #0
   1b714:	bne	1b764 <__mempcpy_chk@plt+0xa184>
   1b718:	ldr	r0, [r6]
   1b71c:	add	r9, r9, #1
   1b720:	cmp	r9, r0
   1b724:	blt	1b6e4 <__mempcpy_chk@plt+0xa104>
   1b728:	ldr	r0, [sp, #8]
   1b72c:	mov	r1, sl
   1b730:	mov	r2, r5
   1b734:	mov	r3, r4
   1b738:	bl	1b7fc <__mempcpy_chk@plt+0xa21c>
   1b73c:	mov	r7, r0
   1b740:	cmp	r0, #0
   1b744:	bne	1b764 <__mempcpy_chk@plt+0xa184>
   1b748:	mov	r0, #12
   1b74c:	ldr	r1, [sp, #4]
   1b750:	str	r0, [r1]
   1b754:	mov	r7, #0
   1b758:	b	1b764 <__mempcpy_chk@plt+0xa184>
   1b75c:	mov	r7, #0
   1b760:	str	r7, [r0]
   1b764:	mov	r0, r7
   1b768:	sub	sp, fp, #28
   1b76c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b770:	mov	r2, r0
   1b774:	ldr	r3, [r0, #4]
   1b778:	add	r0, r3, r1
   1b77c:	cmp	r3, #1
   1b780:	bxlt	lr
   1b784:	ldr	r1, [r2, #8]
   1b788:	ldr	r2, [r1], #4
   1b78c:	add	r0, r2, r0
   1b790:	subs	r3, r3, #1
   1b794:	bne	1b788 <__mempcpy_chk@plt+0xa1a8>
   1b798:	bx	lr
   1b79c:	push	{fp, lr}
   1b7a0:	mov	fp, sp
   1b7a4:	mov	lr, r0
   1b7a8:	mov	r0, #0
   1b7ac:	cmp	lr, #0
   1b7b0:	cmpne	r1, #0
   1b7b4:	beq	1b7f8 <__mempcpy_chk@plt+0xa218>
   1b7b8:	ldr	ip, [lr, #4]
   1b7bc:	ldr	r3, [r1, #4]
   1b7c0:	cmp	ip, r3
   1b7c4:	popne	{fp, pc}
   1b7c8:	sub	r3, ip, #1
   1b7cc:	add	r2, r3, #1
   1b7d0:	cmp	r2, #1
   1b7d4:	movlt	r0, #1
   1b7d8:	poplt	{fp, pc}
   1b7dc:	ldr	r2, [r1, #8]
   1b7e0:	ldr	ip, [r2, r3, lsl #2]
   1b7e4:	ldr	r2, [lr, #8]
   1b7e8:	ldr	r2, [r2, r3, lsl #2]
   1b7ec:	sub	r3, r3, #1
   1b7f0:	cmp	r2, ip
   1b7f4:	beq	1b7cc <__mempcpy_chk@plt+0xa1ec>
   1b7f8:	pop	{fp, pc}
   1b7fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b800:	add	fp, sp, #28
   1b804:	sub	sp, sp, #20
   1b808:	mov	r8, r3
   1b80c:	mov	r9, r2
   1b810:	mov	r7, r1
   1b814:	mov	r6, r0
   1b818:	mov	r0, #56	; 0x38
   1b81c:	mov	r1, #1
   1b820:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1b824:	cmp	r0, #0
   1b828:	beq	1b9f4 <__mempcpy_chk@plt+0xa414>
   1b82c:	mov	r4, r0
   1b830:	add	r5, r0, #4
   1b834:	mov	r0, r5
   1b838:	mov	r1, r7
   1b83c:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   1b840:	cmp	r0, #0
   1b844:	bne	1b9fc <__mempcpy_chk@plt+0xa41c>
   1b848:	str	r8, [sp, #4]
   1b84c:	str	r5, [r4, #40]	; 0x28
   1b850:	and	r0, r9, #15
   1b854:	ldrb	r1, [r4, #52]	; 0x34
   1b858:	and	r1, r1, #240	; 0xf0
   1b85c:	orr	r0, r1, r0
   1b860:	strb	r0, [r4, #52]	; 0x34
   1b864:	ldr	r0, [r7, #4]
   1b868:	cmp	r0, #1
   1b86c:	blt	1b9c8 <__mempcpy_chk@plt+0xa3e8>
   1b870:	mov	r3, r5
   1b874:	and	r0, r9, #4
   1b878:	str	r0, [sp]
   1b87c:	and	r0, r9, #2
   1b880:	str	r0, [sp, #8]
   1b884:	and	r0, r9, #1
   1b888:	str	r0, [sp, #16]
   1b88c:	mov	r8, #0
   1b890:	movw	r0, #65280	; 0xff00
   1b894:	movt	r0, #3
   1b898:	add	sl, r0, #255	; 0xff
   1b89c:	mov	r9, #0
   1b8a0:	str	r5, [sp, #12]
   1b8a4:	ldr	r0, [r7, #8]
   1b8a8:	ldr	r0, [r0, r8, lsl #2]
   1b8ac:	ldr	r1, [r6]
   1b8b0:	add	r0, r1, r0, lsl #3
   1b8b4:	ldr	r5, [r0, #4]
   1b8b8:	and	r0, r5, sl
   1b8bc:	cmp	r0, #1
   1b8c0:	beq	1b9b8 <__mempcpy_chk@plt+0xa3d8>
   1b8c4:	movw	r0, #65280	; 0xff00
   1b8c8:	movt	r0, #3
   1b8cc:	and	r0, r5, r0
   1b8d0:	mov	r1, #32
   1b8d4:	and	r1, r1, r5, lsr #15
   1b8d8:	ldrb	r2, [r4, #52]	; 0x34
   1b8dc:	orr	r1, r2, r1
   1b8e0:	strb	r1, [r4, #52]	; 0x34
   1b8e4:	uxtb	r2, r5
   1b8e8:	cmp	r2, #2
   1b8ec:	beq	1b900 <__mempcpy_chk@plt+0xa320>
   1b8f0:	cmp	r2, #4
   1b8f4:	bne	1b90c <__mempcpy_chk@plt+0xa32c>
   1b8f8:	mov	r2, #64	; 0x40
   1b8fc:	b	1b904 <__mempcpy_chk@plt+0xa324>
   1b900:	mov	r2, #16
   1b904:	orr	r1, r1, r2
   1b908:	strb	r1, [r4, #52]	; 0x34
   1b90c:	cmp	r0, #0
   1b910:	beq	1b9b8 <__mempcpy_chk@plt+0xa3d8>
   1b914:	ldr	r0, [r4, #40]	; 0x28
   1b918:	cmp	r0, r3
   1b91c:	bne	1b958 <__mempcpy_chk@plt+0xa378>
   1b920:	mov	r0, #12
   1b924:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1b928:	cmp	r0, #0
   1b92c:	beq	1b9ec <__mempcpy_chk@plt+0xa40c>
   1b930:	str	r0, [r4, #40]	; 0x28
   1b934:	mov	r1, r7
   1b938:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   1b93c:	cmp	r0, #0
   1b940:	bne	1b9ec <__mempcpy_chk@plt+0xa40c>
   1b944:	ldrb	r0, [r4, #52]	; 0x34
   1b948:	orr	r0, r0, #128	; 0x80
   1b94c:	strb	r0, [r4, #52]	; 0x34
   1b950:	mov	r9, #0
   1b954:	ldr	r3, [sp, #12]
   1b958:	ldr	r0, [sp, #16]
   1b95c:	cmp	r0, #0
   1b960:	bne	1b96c <__mempcpy_chk@plt+0xa38c>
   1b964:	ands	r0, r5, #256	; 0x100
   1b968:	bne	1b9a4 <__mempcpy_chk@plt+0xa3c4>
   1b96c:	ldr	r0, [sp, #16]
   1b970:	cmp	r0, #0
   1b974:	andsne	r0, r5, #512	; 0x200
   1b978:	bne	1b9a4 <__mempcpy_chk@plt+0xa3c4>
   1b97c:	ldr	r0, [sp, #8]
   1b980:	cmp	r0, #0
   1b984:	bne	1b990 <__mempcpy_chk@plt+0xa3b0>
   1b988:	ands	r0, r5, #4096	; 0x1000
   1b98c:	bne	1b9a4 <__mempcpy_chk@plt+0xa3c4>
   1b990:	ldr	r0, [sp]
   1b994:	cmp	r0, #0
   1b998:	bne	1b9b8 <__mempcpy_chk@plt+0xa3d8>
   1b99c:	ands	r0, r5, #16384	; 0x4000
   1b9a0:	beq	1b9b8 <__mempcpy_chk@plt+0xa3d8>
   1b9a4:	sub	r1, r8, r9
   1b9a8:	mov	r0, r3
   1b9ac:	bl	1ba08 <__mempcpy_chk@plt+0xa428>
   1b9b0:	ldr	r3, [sp, #12]
   1b9b4:	add	r9, r9, #1
   1b9b8:	ldr	r0, [r7, #4]
   1b9bc:	add	r8, r8, #1
   1b9c0:	cmp	r8, r0
   1b9c4:	blt	1b8a4 <__mempcpy_chk@plt+0xa2c4>
   1b9c8:	mov	r0, r6
   1b9cc:	mov	r1, r4
   1b9d0:	ldr	r2, [sp, #4]
   1b9d4:	bl	1ba50 <__mempcpy_chk@plt+0xa470>
   1b9d8:	cmp	r0, #0
   1b9dc:	bne	1b9ec <__mempcpy_chk@plt+0xa40c>
   1b9e0:	mov	r0, r4
   1b9e4:	sub	sp, fp, #28
   1b9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9ec:	mov	r0, r4
   1b9f0:	bl	15fac <__mempcpy_chk@plt+0x49cc>
   1b9f4:	mov	r4, #0
   1b9f8:	b	1b9e0 <__mempcpy_chk@plt+0xa400>
   1b9fc:	mov	r0, r4
   1ba00:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ba04:	b	1b9f4 <__mempcpy_chk@plt+0xa414>
   1ba08:	cmp	r1, #0
   1ba0c:	ldrge	r2, [r0, #4]
   1ba10:	cmpge	r2, r1
   1ba14:	bgt	1ba1c <__mempcpy_chk@plt+0xa43c>
   1ba18:	bx	lr
   1ba1c:	sub	r2, r2, #1
   1ba20:	str	r2, [r0, #4]
   1ba24:	cmp	r2, r1
   1ba28:	bxle	lr
   1ba2c:	ldr	r2, [r0, #8]
   1ba30:	add	r3, r2, r1, lsl #2
   1ba34:	ldr	r3, [r3, #4]
   1ba38:	str	r3, [r2, r1, lsl #2]
   1ba3c:	add	r1, r1, #1
   1ba40:	ldr	r3, [r0, #4]
   1ba44:	cmp	r1, r3
   1ba48:	blt	1ba30 <__mempcpy_chk@plt+0xa450>
   1ba4c:	b	1ba18 <__mempcpy_chk@plt+0xa438>
   1ba50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba54:	add	fp, sp, #28
   1ba58:	sub	sp, sp, #4
   1ba5c:	mov	r9, r2
   1ba60:	mov	r4, r1
   1ba64:	mov	r7, r0
   1ba68:	str	r2, [r1]
   1ba6c:	ldr	r1, [r1, #8]
   1ba70:	add	r5, r4, #16
   1ba74:	mov	r0, r5
   1ba78:	bl	1aed4 <__mempcpy_chk@plt+0x98f4>
   1ba7c:	mov	r8, #12
   1ba80:	cmp	r0, #0
   1ba84:	bne	1bb18 <__mempcpy_chk@plt+0xa538>
   1ba88:	ldr	r0, [r4, #8]
   1ba8c:	cmp	r0, #1
   1ba90:	blt	1bad4 <__mempcpy_chk@plt+0xa4f4>
   1ba94:	mov	r6, #0
   1ba98:	ldr	r0, [r4, #12]
   1ba9c:	ldr	r1, [r0, r6, lsl #2]
   1baa0:	ldr	r0, [r7]
   1baa4:	add	r0, r0, r1, lsl #3
   1baa8:	ldrb	r0, [r0, #4]
   1baac:	tst	r0, #8
   1bab0:	bne	1bac4 <__mempcpy_chk@plt+0xa4e4>
   1bab4:	mov	r0, r5
   1bab8:	bl	1b534 <__mempcpy_chk@plt+0x9f54>
   1babc:	cmp	r0, #0
   1bac0:	beq	1bb18 <__mempcpy_chk@plt+0xa538>
   1bac4:	ldr	r0, [r4, #8]
   1bac8:	add	r6, r6, #1
   1bacc:	cmp	r6, r0
   1bad0:	blt	1ba98 <__mempcpy_chk@plt+0xa4b8>
   1bad4:	ldr	sl, [r7, #32]
   1bad8:	ldr	r0, [r7, #68]	; 0x44
   1badc:	and	r0, r0, r9
   1bae0:	add	r7, r0, r0, lsl #1
   1bae4:	mov	r6, sl
   1bae8:	ldr	r1, [r6, r7, lsl #2]!
   1baec:	mov	r5, r6
   1baf0:	ldr	r0, [r5, #4]!
   1baf4:	cmp	r0, r1
   1baf8:	ble	1bb24 <__mempcpy_chk@plt+0xa544>
   1bafc:	add	r0, sl, r7, lsl #2
   1bb00:	ldr	r0, [r0, #8]
   1bb04:	ldr	r1, [r6]
   1bb08:	add	r2, r1, #1
   1bb0c:	str	r2, [r6]
   1bb10:	str	r4, [r0, r1, lsl #2]
   1bb14:	mov	r8, #0
   1bb18:	mov	r0, r8
   1bb1c:	sub	sp, fp, #28
   1bb20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb24:	add	r9, sl, r7, lsl #2
   1bb28:	ldr	r0, [r9, #8]!
   1bb2c:	mov	r2, #2
   1bb30:	add	r1, r2, r1, lsl #1
   1bb34:	str	r1, [sp]
   1bb38:	lsl	r1, r1, #2
   1bb3c:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1bb40:	cmp	r0, #0
   1bb44:	beq	1bb18 <__mempcpy_chk@plt+0xa538>
   1bb48:	str	r0, [r9]
   1bb4c:	ldr	r0, [sp]
   1bb50:	str	r0, [r5]
   1bb54:	b	1bafc <__mempcpy_chk@plt+0xa51c>
   1bb58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb5c:	add	fp, sp, #28
   1bb60:	sub	sp, sp, #4
   1bb64:	mov	r5, r2
   1bb68:	mov	sl, r1
   1bb6c:	mov	r4, r0
   1bb70:	add	r8, r2, #1
   1bb74:	cmp	r3, #1
   1bb78:	beq	1bbcc <__mempcpy_chk@plt+0xa5ec>
   1bb7c:	mov	r6, #2
   1bb80:	cmp	r3, #0
   1bb84:	bne	1bbdc <__mempcpy_chk@plt+0xa5fc>
   1bb88:	lsl	r6, r8, #2
   1bb8c:	mov	r0, r6
   1bb90:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1bb94:	str	r0, [r4, #4]
   1bb98:	mov	r7, #0
   1bb9c:	cmp	r0, #0
   1bba0:	beq	1bc90 <__mempcpy_chk@plt+0xa6b0>
   1bba4:	mov	r0, r6
   1bba8:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1bbac:	str	r0, [r4, #8]
   1bbb0:	cmp	r0, #0
   1bbb4:	beq	1bc9c <__mempcpy_chk@plt+0xa6bc>
   1bbb8:	str	r8, [r4]
   1bbbc:	mov	r6, #1
   1bbc0:	cmp	r5, #1
   1bbc4:	bge	1bbe4 <__mempcpy_chk@plt+0xa604>
   1bbc8:	b	1bc5c <__mempcpy_chk@plt+0xa67c>
   1bbcc:	ldr	r0, [r4]
   1bbd0:	mov	r6, #1
   1bbd4:	cmp	r8, r0
   1bbd8:	bhi	1bc10 <__mempcpy_chk@plt+0xa630>
   1bbdc:	cmp	r5, #1
   1bbe0:	blt	1bc5c <__mempcpy_chk@plt+0xa67c>
   1bbe4:	add	r0, sl, #4
   1bbe8:	ldmib	r4, {r1, r2}
   1bbec:	mov	r3, r5
   1bbf0:	ldr	r7, [r0, #-4]
   1bbf4:	str	r7, [r1], #4
   1bbf8:	ldr	r7, [r0]
   1bbfc:	str	r7, [r2], #4
   1bc00:	add	r0, r0, #8
   1bc04:	subs	r3, r3, #1
   1bc08:	bne	1bbf0 <__mempcpy_chk@plt+0xa610>
   1bc0c:	b	1bc60 <__mempcpy_chk@plt+0xa680>
   1bc10:	ldr	r0, [r4, #4]
   1bc14:	lsl	r9, r8, #2
   1bc18:	mov	r1, r9
   1bc1c:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1bc20:	mov	r7, #0
   1bc24:	str	r0, [sp]
   1bc28:	cmp	r0, #0
   1bc2c:	beq	1bc90 <__mempcpy_chk@plt+0xa6b0>
   1bc30:	ldr	r0, [r4, #8]
   1bc34:	mov	r1, r9
   1bc38:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1bc3c:	cmp	r0, #0
   1bc40:	beq	1bca8 <__mempcpy_chk@plt+0xa6c8>
   1bc44:	str	r8, [r4]
   1bc48:	ldr	r1, [sp]
   1bc4c:	str	r1, [r4, #4]
   1bc50:	str	r0, [r4, #8]
   1bc54:	cmp	r5, #1
   1bc58:	bge	1bbe4 <__mempcpy_chk@plt+0xa604>
   1bc5c:	mov	r5, #0
   1bc60:	ldr	r0, [r4]
   1bc64:	cmp	r5, r0
   1bc68:	bcs	1bc8c <__mempcpy_chk@plt+0xa6ac>
   1bc6c:	ldmib	r4, {r0, r1}
   1bc70:	mvn	r2, #0
   1bc74:	str	r2, [r1, r5, lsl #2]
   1bc78:	str	r2, [r0, r5, lsl #2]
   1bc7c:	add	r5, r5, #1
   1bc80:	ldr	r3, [r4]
   1bc84:	cmp	r5, r3
   1bc88:	bcc	1bc74 <__mempcpy_chk@plt+0xa694>
   1bc8c:	mov	r7, r6
   1bc90:	mov	r0, r7
   1bc94:	sub	sp, fp, #28
   1bc98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc9c:	ldr	r0, [r4, #4]
   1bca0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1bca4:	b	1bc90 <__mempcpy_chk@plt+0xa6b0>
   1bca8:	ldr	r0, [sp]
   1bcac:	b	1bca0 <__mempcpy_chk@plt+0xa6c0>
   1bcb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1bcb4:	add	fp, sp, #24
   1bcb8:	sub	sp, sp, #8
   1bcbc:	mov	r7, r3
   1bcc0:	mov	r4, r2
   1bcc4:	mov	r8, r1
   1bcc8:	mov	r5, r0
   1bccc:	ldr	r9, [fp, #16]
   1bcd0:	ldr	r6, [r9, #92]	; 0x5c
   1bcd4:	str	r9, [sp, #4]
   1bcd8:	ldr	r0, [fp, #12]
   1bcdc:	str	r0, [sp]
   1bce0:	ldr	r3, [fp, #8]
   1bce4:	mov	r0, r1
   1bce8:	mov	r1, r2
   1bcec:	mov	r2, r5
   1bcf0:	bl	16a34 <__mempcpy_chk@plt+0x5454>
   1bcf4:	cmp	r6, r7
   1bcf8:	movgt	r7, r6
   1bcfc:	add	r1, r4, #1
   1bd00:	cmp	r1, r7
   1bd04:	movge	r1, r7
   1bd08:	mov	r0, r5
   1bd0c:	bl	16a8c <__mempcpy_chk@plt+0x54ac>
   1bd10:	cmp	r0, #0
   1bd14:	bne	1bd58 <__mempcpy_chk@plt+0xa778>
   1bd18:	add	r1, r9, #96	; 0x60
   1bd1c:	str	r1, [r5, #68]	; 0x44
   1bd20:	ldrb	r1, [r9, #88]	; 0x58
   1bd24:	ubfx	r1, r1, #4, #1
   1bd28:	strb	r1, [r5, #78]	; 0x4e
   1bd2c:	ldrb	r1, [r5, #75]	; 0x4b
   1bd30:	cmp	r1, #0
   1bd34:	beq	1bd40 <__mempcpy_chk@plt+0xa760>
   1bd38:	mov	r4, #0
   1bd3c:	b	1bd50 <__mempcpy_chk@plt+0xa770>
   1bd40:	str	r8, [r5, #4]
   1bd44:	ldr	r1, [r9, #92]	; 0x5c
   1bd48:	cmp	r1, #1
   1bd4c:	movwgt	r4, #0
   1bd50:	str	r4, [r5, #28]
   1bd54:	str	r4, [r5, #32]
   1bd58:	sub	sp, fp, #24
   1bd5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1bd60:	push	{r4, r5, r6, sl, fp, lr}
   1bd64:	add	fp, sp, #16
   1bd68:	mov	r4, r2
   1bd6c:	mov	r5, r0
   1bd70:	mvn	r0, #0
   1bd74:	str	r1, [r5, #88]	; 0x58
   1bd78:	str	r0, [r5, #92]	; 0x5c
   1bd7c:	cmp	r2, #1
   1bd80:	blt	1bdcc <__mempcpy_chk@plt+0xa7ec>
   1bd84:	mov	r6, #12
   1bd88:	movw	r0, #43690	; 0xaaaa
   1bd8c:	movt	r0, #2730	; 0xaaa
   1bd90:	cmp	r4, r0
   1bd94:	bhi	1bdc4 <__mempcpy_chk@plt+0xa7e4>
   1bd98:	add	r0, r4, r4, lsl #1
   1bd9c:	lsl	r0, r0, #3
   1bda0:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1bda4:	str	r0, [r5, #116]	; 0x74
   1bda8:	lsl	r0, r4, #2
   1bdac:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1bdb0:	str	r0, [r5, #132]	; 0x84
   1bdb4:	cmp	r0, #0
   1bdb8:	ldrne	r0, [r5, #116]	; 0x74
   1bdbc:	cmpne	r0, #0
   1bdc0:	bne	1bdcc <__mempcpy_chk@plt+0xa7ec>
   1bdc4:	mov	r0, r6
   1bdc8:	pop	{r4, r5, r6, sl, fp, pc}
   1bdcc:	mov	r0, #1
   1bdd0:	str	r0, [r5, #120]	; 0x78
   1bdd4:	str	r4, [r5, #112]	; 0x70
   1bdd8:	str	r4, [r5, #128]	; 0x80
   1bddc:	mov	r6, #0
   1bde0:	mov	r0, r6
   1bde4:	pop	{r4, r5, r6, sl, fp, pc}
   1bde8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bdec:	add	fp, sp, #28
   1bdf0:	sub	sp, sp, #28
   1bdf4:	mov	r6, r2
   1bdf8:	mov	r7, r1
   1bdfc:	mov	r4, r0
   1be00:	ldr	r0, [r0, #24]
   1be04:	cmp	r0, r1
   1be08:	ble	1bf74 <__mempcpy_chk@plt+0xa994>
   1be0c:	ldr	r0, [r4, #80]	; 0x50
   1be10:	cmp	r0, #2
   1be14:	movge	r0, #0
   1be18:	strge	r0, [r4, #16]
   1be1c:	strge	r0, [r4, #20]
   1be20:	mov	r0, #0
   1be24:	str	r0, [r4, #24]
   1be28:	str	r0, [r4, #28]
   1be2c:	str	r0, [r4, #32]
   1be30:	strb	r0, [r4, #76]	; 0x4c
   1be34:	mov	r0, #4
   1be38:	tst	r6, #1
   1be3c:	movweq	r0, #6
   1be40:	ldr	r1, [r4, #44]	; 0x2c
   1be44:	ldr	r2, [r4, #52]	; 0x34
   1be48:	str	r1, [r4, #48]	; 0x30
   1be4c:	str	r2, [r4, #56]	; 0x38
   1be50:	str	r0, [r4, #60]	; 0x3c
   1be54:	ldrb	r0, [r4, #75]	; 0x4b
   1be58:	cmp	r0, #0
   1be5c:	mov	r5, r7
   1be60:	ldreq	r0, [r4]
   1be64:	streq	r0, [r4, #4]
   1be68:	moveq	r5, r7
   1be6c:	cmp	r5, #0
   1be70:	beq	1befc <__mempcpy_chk@plt+0xa91c>
   1be74:	ldr	r0, [r4, #32]
   1be78:	cmp	r5, r0
   1be7c:	bge	1bf84 <__mempcpy_chk@plt+0xa9a4>
   1be80:	ldrb	r0, [r4, #76]	; 0x4c
   1be84:	cmp	r0, #0
   1be88:	bne	1c0b8 <__mempcpy_chk@plt+0xaad8>
   1be8c:	sub	r1, r5, #1
   1be90:	mov	r0, r4
   1be94:	mov	r2, r6
   1be98:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1be9c:	str	r0, [r4, #60]	; 0x3c
   1bea0:	ldr	r0, [r4, #80]	; 0x50
   1bea4:	cmp	r0, #2
   1bea8:	blt	1bec4 <__mempcpy_chk@plt+0xa8e4>
   1beac:	ldr	r0, [r4, #8]
   1beb0:	ldr	r2, [r4, #28]
   1beb4:	add	r1, r0, r5, lsl #2
   1beb8:	sub	r2, r2, r5
   1bebc:	lsl	r2, r2, #2
   1bec0:	bl	1131c <memmove@plt>
   1bec4:	ldrb	r0, [r4, #75]	; 0x4b
   1bec8:	cmp	r0, #0
   1becc:	bne	1c1ac <__mempcpy_chk@plt+0xabcc>
   1bed0:	ldr	r0, [r4, #28]
   1bed4:	ldr	r1, [r4, #32]
   1bed8:	sub	r0, r0, r5
   1bedc:	sub	r1, r1, r5
   1bee0:	str	r0, [r4, #28]
   1bee4:	str	r1, [r4, #32]
   1bee8:	ldrb	r0, [r4, #75]	; 0x4b
   1beec:	cmp	r0, #0
   1bef0:	ldreq	r0, [r4, #4]
   1bef4:	addeq	r0, r0, r5
   1bef8:	streq	r0, [r4, #4]
   1befc:	str	r7, [r4, #24]
   1bf00:	ldr	r0, [r4, #48]	; 0x30
   1bf04:	ldr	r1, [r4, #56]	; 0x38
   1bf08:	ldr	r2, [r4, #80]	; 0x50
   1bf0c:	sub	r0, r0, r5
   1bf10:	str	r0, [r4, #48]	; 0x30
   1bf14:	sub	r1, r1, r5
   1bf18:	str	r1, [r4, #56]	; 0x38
   1bf1c:	cmp	r2, #2
   1bf20:	blt	1bf48 <__mempcpy_chk@plt+0xa968>
   1bf24:	ldrb	r0, [r4, #72]	; 0x48
   1bf28:	cmp	r0, #0
   1bf2c:	beq	1bf5c <__mempcpy_chk@plt+0xa97c>
   1bf30:	mov	r0, r4
   1bf34:	bl	16b30 <__mempcpy_chk@plt+0x5550>
   1bf38:	cmp	r0, #0
   1bf3c:	beq	1bf64 <__mempcpy_chk@plt+0xa984>
   1bf40:	sub	sp, fp, #28
   1bf44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf48:	ldrb	r1, [r4, #75]	; 0x4b
   1bf4c:	cmp	r1, #0
   1bf50:	bne	1c1c4 <__mempcpy_chk@plt+0xabe4>
   1bf54:	str	r0, [r4, #28]
   1bf58:	b	1bf64 <__mempcpy_chk@plt+0xa984>
   1bf5c:	mov	r0, r4
   1bf60:	bl	17164 <__mempcpy_chk@plt+0x5b84>
   1bf64:	mov	r0, #0
   1bf68:	str	r0, [r4, #40]	; 0x28
   1bf6c:	sub	sp, fp, #28
   1bf70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf74:	sub	r5, r7, r0
   1bf78:	cmp	r5, #0
   1bf7c:	bne	1be74 <__mempcpy_chk@plt+0xa894>
   1bf80:	b	1befc <__mempcpy_chk@plt+0xa91c>
   1bf84:	ldr	r9, [r4, #28]
   1bf88:	ldrb	r0, [r4, #76]	; 0x4c
   1bf8c:	cmp	r0, #0
   1bf90:	bne	1c33c <__mempcpy_chk@plt+0xad5c>
   1bf94:	mov	r0, #0
   1bf98:	str	r0, [r4, #28]
   1bf9c:	ldr	r1, [r4, #80]	; 0x50
   1bfa0:	cmp	r1, #2
   1bfa4:	blt	1c1dc <__mempcpy_chk@plt+0xabfc>
   1bfa8:	mvn	r0, #0
   1bfac:	str	r0, [sp, #24]
   1bfb0:	ldrb	r0, [r4, #73]	; 0x49
   1bfb4:	cmp	r0, #0
   1bfb8:	beq	1c06c <__mempcpy_chk@plt+0xaa8c>
   1bfbc:	ldr	r2, [r4]
   1bfc0:	ldr	r0, [r4, #24]
   1bfc4:	add	r0, r2, r0
   1bfc8:	add	r8, r0, r5
   1bfcc:	sub	r1, r5, r1
   1bfd0:	add	r1, r0, r1
   1bfd4:	cmp	r1, r2
   1bfd8:	movcc	r1, r2
   1bfdc:	mov	sl, r8
   1bfe0:	sub	sl, sl, #1
   1bfe4:	cmp	sl, r1
   1bfe8:	bcc	1c060 <__mempcpy_chk@plt+0xaa80>
   1bfec:	ldrb	r2, [sl]
   1bff0:	and	r2, r2, #192	; 0xc0
   1bff4:	cmp	r2, #128	; 0x80
   1bff8:	beq	1bfe0 <__mempcpy_chk@plt+0xaa00>
   1bffc:	ldr	r1, [r4, #48]	; 0x30
   1c000:	add	r3, r0, r1
   1c004:	sub	r2, r3, sl
   1c008:	ldr	r0, [r4, #64]	; 0x40
   1c00c:	cmp	r0, #0
   1c010:	mov	r1, sl
   1c014:	bne	1c3c4 <__mempcpy_chk@plt+0xade4>
   1c018:	mov	r0, #0
   1c01c:	str	r0, [sp, #20]
   1c020:	str	r0, [sp, #16]
   1c024:	add	r0, sp, #12
   1c028:	add	r3, sp, #16
   1c02c:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   1c030:	sub	r1, r8, sl
   1c034:	cmp	r0, r1
   1c038:	bcc	1c060 <__mempcpy_chk@plt+0xaa80>
   1c03c:	cmn	r0, #3
   1c040:	bhi	1c060 <__mempcpy_chk@plt+0xaa80>
   1c044:	mov	r2, #0
   1c048:	str	r2, [r4, #16]
   1c04c:	str	r2, [r4, #20]
   1c050:	sub	r0, r0, r1
   1c054:	str	r0, [r4, #28]
   1c058:	ldr	r0, [sp, #12]
   1c05c:	str	r0, [sp, #24]
   1c060:	ldr	r8, [sp, #24]
   1c064:	cmn	r8, #1
   1c068:	bne	1c090 <__mempcpy_chk@plt+0xaab0>
   1c06c:	add	r2, sp, #24
   1c070:	mov	r0, r4
   1c074:	mov	r1, r7
   1c078:	bl	1ce38 <__mempcpy_chk@plt+0xb858>
   1c07c:	sub	r0, r0, r7
   1c080:	str	r0, [r4, #28]
   1c084:	ldr	r8, [sp, #24]
   1c088:	cmn	r8, #1
   1c08c:	beq	1c300 <__mempcpy_chk@plt+0xad20>
   1c090:	ldrb	r0, [r4, #78]	; 0x4e
   1c094:	cmp	r0, #0
   1c098:	bne	1c3a0 <__mempcpy_chk@plt+0xadc0>
   1c09c:	mov	r0, #0
   1c0a0:	cmp	r8, #10
   1c0a4:	bne	1c310 <__mempcpy_chk@plt+0xad30>
   1c0a8:	ldrb	r0, [r4, #77]	; 0x4d
   1c0ac:	cmp	r0, #0
   1c0b0:	movwne	r0, #2
   1c0b4:	b	1c310 <__mempcpy_chk@plt+0xad30>
   1c0b8:	ldr	r8, [r4, #12]
   1c0bc:	ldr	r9, [r4, #28]
   1c0c0:	mov	r0, #0
   1c0c4:	mov	r1, r9
   1c0c8:	add	r2, r0, r1
   1c0cc:	add	r2, r2, r2, lsr #31
   1c0d0:	asr	sl, r2, #1
   1c0d4:	ldr	r2, [r8, sl, lsl #2]
   1c0d8:	cmp	r2, r5
   1c0dc:	mov	r3, sl
   1c0e0:	bgt	1c0f0 <__mempcpy_chk@plt+0xab10>
   1c0e4:	bge	1c0fc <__mempcpy_chk@plt+0xab1c>
   1c0e8:	add	r0, sl, #1
   1c0ec:	mov	r3, r1
   1c0f0:	cmp	r0, r3
   1c0f4:	mov	r1, r3
   1c0f8:	blt	1c0c8 <__mempcpy_chk@plt+0xaae8>
   1c0fc:	cmp	r2, r5
   1c100:	addlt	sl, sl, #1
   1c104:	sub	r1, sl, #1
   1c108:	mov	r0, r4
   1c10c:	mov	r2, r6
   1c110:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1c114:	str	r0, [r4, #60]	; 0x3c
   1c118:	cmp	r9, r5
   1c11c:	ble	1c130 <__mempcpy_chk@plt+0xab50>
   1c120:	cmp	sl, r5
   1c124:	ldreq	r0, [r8, sl, lsl #2]
   1c128:	cmpeq	r0, r5
   1c12c:	beq	1c28c <__mempcpy_chk@plt+0xacac>
   1c130:	mov	r0, #0
   1c134:	strb	r0, [r4, #76]	; 0x4c
   1c138:	sub	r0, r5, r7
   1c13c:	ldr	r1, [r4, #44]	; 0x2c
   1c140:	ldr	r2, [r4, #52]	; 0x34
   1c144:	add	r1, r0, r1
   1c148:	str	r1, [r4, #48]	; 0x30
   1c14c:	add	r0, r0, r2
   1c150:	str	r0, [r4, #56]	; 0x38
   1c154:	sub	r1, r8, #4
   1c158:	mov	r0, sl
   1c15c:	cmp	sl, #1
   1c160:	blt	1c174 <__mempcpy_chk@plt+0xab94>
   1c164:	ldr	r2, [r1, r0, lsl #2]
   1c168:	sub	sl, r0, #1
   1c16c:	cmp	r2, r5
   1c170:	beq	1c158 <__mempcpy_chk@plt+0xab78>
   1c174:	cmp	r0, r9
   1c178:	bge	1c198 <__mempcpy_chk@plt+0xabb8>
   1c17c:	ldr	r1, [r4, #8]
   1c180:	ldr	r2, [r1, r0, lsl #2]
   1c184:	cmn	r2, #1
   1c188:	bne	1c198 <__mempcpy_chk@plt+0xabb8>
   1c18c:	add	r0, r0, #1
   1c190:	cmp	r0, r9
   1c194:	blt	1c180 <__mempcpy_chk@plt+0xaba0>
   1c198:	cmp	r0, r9
   1c19c:	bne	1c228 <__mempcpy_chk@plt+0xac48>
   1c1a0:	mov	r0, #0
   1c1a4:	str	r0, [r4, #28]
   1c1a8:	b	1c320 <__mempcpy_chk@plt+0xad40>
   1c1ac:	ldr	r0, [r4, #4]
   1c1b0:	ldr	r2, [r4, #28]
   1c1b4:	add	r1, r0, r5
   1c1b8:	sub	r2, r2, r5
   1c1bc:	bl	1131c <memmove@plt>
   1c1c0:	b	1bed0 <__mempcpy_chk@plt+0xa8f0>
   1c1c4:	ldrb	r0, [r4, #72]	; 0x48
   1c1c8:	cmp	r0, #0
   1c1cc:	beq	1c274 <__mempcpy_chk@plt+0xac94>
   1c1d0:	mov	r0, r4
   1c1d4:	bl	170f8 <__mempcpy_chk@plt+0x5b18>
   1c1d8:	b	1bf64 <__mempcpy_chk@plt+0xa984>
   1c1dc:	ldr	r2, [r4]
   1c1e0:	ldr	r3, [r4, #24]
   1c1e4:	ldr	r1, [r4, #64]	; 0x40
   1c1e8:	add	r3, r5, r3
   1c1ec:	add	r2, r2, r3
   1c1f0:	ldrb	r6, [r2, #-1]
   1c1f4:	str	r0, [r4, #32]
   1c1f8:	cmp	r1, #0
   1c1fc:	ldrbne	r6, [r1, r6]
   1c200:	ldr	r0, [r4, #68]	; 0x44
   1c204:	mov	r1, r6
   1c208:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1c20c:	mov	r1, #1
   1c210:	cmp	r0, #0
   1c214:	moveq	r1, #0
   1c218:	cmpeq	r6, #10
   1c21c:	beq	1c32c <__mempcpy_chk@plt+0xad4c>
   1c220:	str	r1, [r4, #60]	; 0x3c
   1c224:	b	1bee8 <__mempcpy_chk@plt+0xa908>
   1c228:	ldr	r0, [r8, r0, lsl #2]
   1c22c:	subs	r0, r0, r5
   1c230:	str	r0, [r4, #28]
   1c234:	beq	1c320 <__mempcpy_chk@plt+0xad40>
   1c238:	ldr	r2, [r4, #28]
   1c23c:	cmp	r2, #1
   1c240:	blt	1c264 <__mempcpy_chk@plt+0xac84>
   1c244:	ldr	r0, [r4, #8]
   1c248:	mov	r1, #0
   1c24c:	mvn	r3, #0
   1c250:	str	r3, [r0, r1, lsl #2]
   1c254:	add	r1, r1, #1
   1c258:	ldr	r2, [r4, #28]
   1c25c:	cmp	r1, r2
   1c260:	blt	1c250 <__mempcpy_chk@plt+0xac70>
   1c264:	ldr	r0, [r4, #4]
   1c268:	mov	r1, #255	; 0xff
   1c26c:	bl	114fc <memset@plt>
   1c270:	b	1c320 <__mempcpy_chk@plt+0xad40>
   1c274:	ldr	r0, [r4, #64]	; 0x40
   1c278:	cmp	r0, #0
   1c27c:	beq	1bf64 <__mempcpy_chk@plt+0xa984>
   1c280:	mov	r0, r4
   1c284:	bl	172f4 <__mempcpy_chk@plt+0x5d14>
   1c288:	b	1bf64 <__mempcpy_chk@plt+0xa984>
   1c28c:	ldr	r0, [r4, #8]
   1c290:	add	r1, r0, r5, lsl #2
   1c294:	sub	r2, r9, r5
   1c298:	lsl	r2, r2, #2
   1c29c:	bl	1131c <memmove@plt>
   1c2a0:	ldr	r0, [r4, #4]
   1c2a4:	ldr	r2, [r4, #28]
   1c2a8:	add	r1, r0, r5
   1c2ac:	sub	r2, r2, r5
   1c2b0:	bl	1131c <memmove@plt>
   1c2b4:	ldr	r0, [r4, #28]
   1c2b8:	ldr	r1, [r4, #32]
   1c2bc:	sub	r0, r0, r5
   1c2c0:	sub	r1, r1, r5
   1c2c4:	str	r0, [r4, #28]
   1c2c8:	str	r1, [r4, #32]
   1c2cc:	cmp	r0, #1
   1c2d0:	blt	1bee8 <__mempcpy_chk@plt+0xa908>
   1c2d4:	ldr	r0, [r4, #12]
   1c2d8:	add	r1, r0, r5, lsl #2
   1c2dc:	mov	r2, #0
   1c2e0:	ldr	r3, [r1, r2, lsl #2]
   1c2e4:	sub	r3, r3, r5
   1c2e8:	str	r3, [r0, r2, lsl #2]
   1c2ec:	add	r2, r2, #1
   1c2f0:	ldr	r3, [r4, #28]
   1c2f4:	cmp	r2, r3
   1c2f8:	blt	1c2e0 <__mempcpy_chk@plt+0xad00>
   1c2fc:	b	1bee8 <__mempcpy_chk@plt+0xa908>
   1c300:	sub	r1, r9, #1
   1c304:	mov	r0, r4
   1c308:	mov	r2, r6
   1c30c:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1c310:	str	r0, [r4, #60]	; 0x3c
   1c314:	ldr	r0, [r4, #28]
   1c318:	cmp	r0, #0
   1c31c:	bne	1c364 <__mempcpy_chk@plt+0xad84>
   1c320:	ldr	r0, [r4, #28]
   1c324:	str	r0, [r4, #32]
   1c328:	b	1bee8 <__mempcpy_chk@plt+0xa908>
   1c32c:	ldrb	r1, [r4, #77]	; 0x4d
   1c330:	cmp	r1, #0
   1c334:	movwne	r1, #2
   1c338:	b	1c220 <__mempcpy_chk@plt+0xac40>
   1c33c:	mov	r0, #0
   1c340:	strb	r0, [r4, #76]	; 0x4c
   1c344:	sub	r0, r5, r7
   1c348:	ldr	r1, [r4, #44]	; 0x2c
   1c34c:	ldr	r2, [r4, #52]	; 0x34
   1c350:	add	r1, r0, r1
   1c354:	str	r1, [r4, #48]	; 0x30
   1c358:	add	r0, r0, r2
   1c35c:	str	r0, [r4, #56]	; 0x38
   1c360:	b	1bf94 <__mempcpy_chk@plt+0xa9b4>
   1c364:	ldr	r2, [r4, #28]
   1c368:	cmp	r2, #1
   1c36c:	blt	1c390 <__mempcpy_chk@plt+0xadb0>
   1c370:	ldr	r0, [r4, #8]
   1c374:	mov	r1, #0
   1c378:	mvn	r3, #0
   1c37c:	str	r3, [r0, r1, lsl #2]
   1c380:	add	r1, r1, #1
   1c384:	ldr	r2, [r4, #28]
   1c388:	cmp	r1, r2
   1c38c:	blt	1c37c <__mempcpy_chk@plt+0xad9c>
   1c390:	ldrb	r0, [r4, #75]	; 0x4b
   1c394:	cmp	r0, #0
   1c398:	bne	1c264 <__mempcpy_chk@plt+0xac84>
   1c39c:	b	1c320 <__mempcpy_chk@plt+0xad40>
   1c3a0:	mov	r0, r8
   1c3a4:	bl	114e4 <iswalnum@plt>
   1c3a8:	mov	r1, r0
   1c3ac:	mov	r0, #1
   1c3b0:	cmp	r8, #95	; 0x5f
   1c3b4:	beq	1c310 <__mempcpy_chk@plt+0xad30>
   1c3b8:	cmp	r1, #0
   1c3bc:	beq	1c09c <__mempcpy_chk@plt+0xaabc>
   1c3c0:	b	1c310 <__mempcpy_chk@plt+0xad30>
   1c3c4:	cmp	r2, #1
   1c3c8:	blt	1c40c <__mempcpy_chk@plt+0xae2c>
   1c3cc:	sub	r1, sl, #1
   1c3d0:	sub	r1, r1, r3
   1c3d4:	cmn	r1, #7
   1c3d8:	mvnle	r1, #6
   1c3dc:	mvn	r3, #1
   1c3e0:	sub	ip, r3, r1
   1c3e4:	add	r1, sp, #6
   1c3e8:	ldrb	r3, [sl, ip]
   1c3ec:	ldrb	r3, [r0, r3]
   1c3f0:	strb	r3, [r1, ip]
   1c3f4:	sub	lr, ip, #1
   1c3f8:	add	r3, ip, #1
   1c3fc:	cmp	r3, #1
   1c400:	mov	ip, lr
   1c404:	bgt	1c3e8 <__mempcpy_chk@plt+0xae08>
   1c408:	b	1c018 <__mempcpy_chk@plt+0xaa38>
   1c40c:	add	r1, sp, #6
   1c410:	b	1c018 <__mempcpy_chk@plt+0xaa38>
   1c414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c418:	add	fp, sp, #28
   1c41c:	sub	sp, sp, #20
   1c420:	mov	sl, r2
   1c424:	str	r1, [sp, #12]
   1c428:	mov	r7, r0
   1c42c:	ldr	r5, [r0, #84]	; 0x54
   1c430:	ldr	r8, [r0, #40]	; 0x28
   1c434:	mov	r0, #0
   1c438:	str	r0, [sp, #16]
   1c43c:	cmp	r2, #0
   1c440:	str	r2, [sp, #4]
   1c444:	movwne	sl, #1
   1c448:	ldr	r4, [r5, #36]	; 0x24
   1c44c:	ldrsb	r0, [r4, #52]	; 0x34
   1c450:	cmn	r0, #1
   1c454:	bgt	1c4c0 <__mempcpy_chk@plt+0xaee0>
   1c458:	ldr	r2, [r7, #88]	; 0x58
   1c45c:	sub	r1, r8, #1
   1c460:	mov	r0, r7
   1c464:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1c468:	tst	r0, #1
   1c46c:	bne	1c4bc <__mempcpy_chk@plt+0xaedc>
   1c470:	mov	r3, r0
   1c474:	cmp	r0, #0
   1c478:	beq	1c4c0 <__mempcpy_chk@plt+0xaee0>
   1c47c:	ands	r1, r3, #2
   1c480:	and	r0, r3, #4
   1c484:	cmpne	r0, #0
   1c488:	bne	1c518 <__mempcpy_chk@plt+0xaf38>
   1c48c:	cmp	r1, #0
   1c490:	bne	1c528 <__mempcpy_chk@plt+0xaf48>
   1c494:	cmp	r0, #0
   1c498:	beq	1c4c0 <__mempcpy_chk@plt+0xaee0>
   1c49c:	ldr	r2, [r4, #40]	; 0x28
   1c4a0:	add	r0, sp, #16
   1c4a4:	mov	r1, r5
   1c4a8:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1c4ac:	mov	r4, r0
   1c4b0:	cmp	r4, #0
   1c4b4:	bne	1c4c8 <__mempcpy_chk@plt+0xaee8>
   1c4b8:	b	1c6cc <__mempcpy_chk@plt+0xb0ec>
   1c4bc:	ldr	r4, [r5, #40]	; 0x28
   1c4c0:	cmp	r4, #0
   1c4c4:	beq	1c6cc <__mempcpy_chk@plt+0xb0ec>
   1c4c8:	ldr	r0, [r7, #100]	; 0x64
   1c4cc:	cmp	r0, #0
   1c4d0:	beq	1c4e4 <__mempcpy_chk@plt+0xaf04>
   1c4d4:	str	r4, [r0, r8, lsl #2]
   1c4d8:	ldr	r0, [r5, #76]	; 0x4c
   1c4dc:	cmp	r0, #0
   1c4e0:	bne	1c6fc <__mempcpy_chk@plt+0xb11c>
   1c4e4:	ldrb	r0, [r4, #52]	; 0x34
   1c4e8:	tst	r0, #16
   1c4ec:	bne	1c6d4 <__mempcpy_chk@plt+0xb0f4>
   1c4f0:	mov	r0, #0
   1c4f4:	str	r0, [sp, #8]
   1c4f8:	mvn	r6, #0
   1c4fc:	str	r8, [sp]
   1c500:	ldr	r0, [r7, #40]	; 0x28
   1c504:	ldr	r1, [r7, #56]	; 0x38
   1c508:	cmp	r1, r0
   1c50c:	ble	1c6a8 <__mempcpy_chk@plt+0xb0c8>
   1c510:	add	r8, sp, #16
   1c514:	b	1c594 <__mempcpy_chk@plt+0xafb4>
   1c518:	ldr	r4, [r5, #48]	; 0x30
   1c51c:	cmp	r4, #0
   1c520:	bne	1c4c8 <__mempcpy_chk@plt+0xaee8>
   1c524:	b	1c6cc <__mempcpy_chk@plt+0xb0ec>
   1c528:	ldr	r4, [r5, #44]	; 0x2c
   1c52c:	cmp	r4, #0
   1c530:	bne	1c4c8 <__mempcpy_chk@plt+0xaee8>
   1c534:	b	1c6cc <__mempcpy_chk@plt+0xb0ec>
   1c538:	ldr	r2, [r7, #48]	; 0x30
   1c53c:	cmp	r1, r2
   1c540:	bge	1c5a8 <__mempcpy_chk@plt+0xafc8>
   1c544:	b	1c554 <__mempcpy_chk@plt+0xaf74>
   1c548:	ldr	r2, [r7, #48]	; 0x30
   1c54c:	cmp	r1, r2
   1c550:	bge	1c5b4 <__mempcpy_chk@plt+0xafd4>
   1c554:	add	r1, r0, #2
   1c558:	mov	r0, r7
   1c55c:	bl	1d290 <__mempcpy_chk@plt+0xbcb0>
   1c560:	str	r0, [sp, #16]
   1c564:	cmp	r0, #0
   1c568:	beq	1c5b4 <__mempcpy_chk@plt+0xafd4>
   1c56c:	b	1c6cc <__mempcpy_chk@plt+0xb0ec>
   1c570:	cmp	r9, r4
   1c574:	ldr	r0, [sp]
   1c578:	moveq	r0, r5
   1c57c:	str	r0, [sp]
   1c580:	sub	r0, r9, r4
   1c584:	clz	r0, r0
   1c588:	lsr	r0, r0, #5
   1c58c:	and	sl, sl, r0
   1c590:	b	1c648 <__mempcpy_chk@plt+0xb068>
   1c594:	mov	r9, r4
   1c598:	add	r5, r0, #1
   1c59c:	ldr	r1, [r7, #36]	; 0x24
   1c5a0:	cmp	r5, r1
   1c5a4:	bge	1c538 <__mempcpy_chk@plt+0xaf58>
   1c5a8:	ldr	r1, [r7, #28]
   1c5ac:	cmp	r5, r1
   1c5b0:	bge	1c548 <__mempcpy_chk@plt+0xaf68>
   1c5b4:	mov	r0, r8
   1c5b8:	mov	r1, r7
   1c5bc:	mov	r2, r9
   1c5c0:	bl	1d364 <__mempcpy_chk@plt+0xbd84>
   1c5c4:	mov	r4, r0
   1c5c8:	ldr	r0, [r7, #100]	; 0x64
   1c5cc:	cmp	r0, #0
   1c5d0:	beq	1c5e8 <__mempcpy_chk@plt+0xb008>
   1c5d4:	mov	r0, r8
   1c5d8:	mov	r1, r7
   1c5dc:	mov	r2, r4
   1c5e0:	bl	1d414 <__mempcpy_chk@plt+0xbe34>
   1c5e4:	mov	r4, r0
   1c5e8:	cmp	r4, #0
   1c5ec:	bne	1c63c <__mempcpy_chk@plt+0xb05c>
   1c5f0:	ldr	r0, [sp, #16]
   1c5f4:	cmp	r0, #0
   1c5f8:	bne	1c6cc <__mempcpy_chk@plt+0xb0ec>
   1c5fc:	ldr	r0, [sp, #8]
   1c600:	clz	r0, r0
   1c604:	lsr	r0, r0, #5
   1c608:	ldr	r1, [sp, #12]
   1c60c:	orr	r0, r0, r1
   1c610:	cmp	r0, #1
   1c614:	bne	1c6a8 <__mempcpy_chk@plt+0xb0c8>
   1c618:	ldr	r0, [r7, #100]	; 0x64
   1c61c:	cmp	r0, #0
   1c620:	beq	1c6a8 <__mempcpy_chk@plt+0xb0c8>
   1c624:	mov	r0, r8
   1c628:	mov	r1, r7
   1c62c:	bl	1d560 <__mempcpy_chk@plt+0xbf80>
   1c630:	mov	r4, r0
   1c634:	cmp	r0, #0
   1c638:	beq	1c6a8 <__mempcpy_chk@plt+0xb0c8>
   1c63c:	tst	sl, #1
   1c640:	bne	1c570 <__mempcpy_chk@plt+0xaf90>
   1c644:	mov	sl, #0
   1c648:	ldrb	r0, [r4, #52]	; 0x34
   1c64c:	tst	r0, #16
   1c650:	beq	1c698 <__mempcpy_chk@plt+0xb0b8>
   1c654:	sxtb	r0, r0
   1c658:	cmn	r0, #1
   1c65c:	bgt	1c678 <__mempcpy_chk@plt+0xb098>
   1c660:	ldr	r2, [r7, #40]	; 0x28
   1c664:	mov	r0, r7
   1c668:	mov	r1, r4
   1c66c:	bl	1c788 <__mempcpy_chk@plt+0xb1a8>
   1c670:	cmp	r0, #0
   1c674:	beq	1c698 <__mempcpy_chk@plt+0xb0b8>
   1c678:	ldr	r6, [r7, #40]	; 0x28
   1c67c:	ldr	r0, [sp, #12]
   1c680:	cmp	r0, #0
   1c684:	beq	1c6c0 <__mempcpy_chk@plt+0xb0e0>
   1c688:	mov	r0, #0
   1c68c:	str	r0, [sp, #4]
   1c690:	mov	r0, #1
   1c694:	str	r0, [sp, #8]
   1c698:	ldr	r0, [r7, #40]	; 0x28
   1c69c:	ldr	r1, [r7, #56]	; 0x38
   1c6a0:	cmp	r1, r0
   1c6a4:	bgt	1c594 <__mempcpy_chk@plt+0xafb4>
   1c6a8:	ldr	r2, [sp, #4]
   1c6ac:	cmp	r2, #0
   1c6b0:	ldrne	r0, [r2]
   1c6b4:	ldrne	r1, [sp]
   1c6b8:	addne	r0, r0, r1
   1c6bc:	strne	r0, [r2]
   1c6c0:	mov	r0, r6
   1c6c4:	sub	sp, fp, #28
   1c6c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c6cc:	mvn	r6, #1
   1c6d0:	b	1c6c0 <__mempcpy_chk@plt+0xb0e0>
   1c6d4:	sxtb	r0, r0
   1c6d8:	cmn	r0, #1
   1c6dc:	ble	1c74c <__mempcpy_chk@plt+0xb16c>
   1c6e0:	mov	r0, #1
   1c6e4:	str	r0, [sp, #8]
   1c6e8:	ldr	r0, [sp, #12]
   1c6ec:	cmp	r0, #0
   1c6f0:	mov	r6, r8
   1c6f4:	bne	1c4fc <__mempcpy_chk@plt+0xaf1c>
   1c6f8:	b	1c780 <__mempcpy_chk@plt+0xb1a0>
   1c6fc:	add	r5, r4, #4
   1c700:	mov	sl, #0
   1c704:	mov	r0, r7
   1c708:	mov	r1, r5
   1c70c:	mov	r2, #0
   1c710:	bl	1cf0c <__mempcpy_chk@plt+0xb92c>
   1c714:	str	r0, [sp, #16]
   1c718:	cmp	r0, #0
   1c71c:	bne	1c744 <__mempcpy_chk@plt+0xb164>
   1c720:	ldrb	r0, [r4, #52]	; 0x34
   1c724:	tst	r0, #64	; 0x40
   1c728:	beq	1c4e4 <__mempcpy_chk@plt+0xaf04>
   1c72c:	mov	r0, r7
   1c730:	mov	r1, r5
   1c734:	bl	1cf98 <__mempcpy_chk@plt+0xb9b8>
   1c738:	str	r0, [sp, #16]
   1c73c:	cmp	r0, #0
   1c740:	beq	1c4e4 <__mempcpy_chk@plt+0xaf04>
   1c744:	mov	r6, r0
   1c748:	b	1c6c0 <__mempcpy_chk@plt+0xb0e0>
   1c74c:	mov	r0, r7
   1c750:	mov	r1, r4
   1c754:	mov	r2, r8
   1c758:	bl	1c788 <__mempcpy_chk@plt+0xb1a8>
   1c75c:	cmp	r0, #0
   1c760:	mov	r6, r8
   1c764:	mvneq	r6, #0
   1c768:	movwne	r0, #1
   1c76c:	str	r0, [sp, #8]
   1c770:	beq	1c4fc <__mempcpy_chk@plt+0xaf1c>
   1c774:	ldr	r0, [sp, #12]
   1c778:	cmp	r0, #0
   1c77c:	bne	1c4fc <__mempcpy_chk@plt+0xaf1c>
   1c780:	mov	r6, r8
   1c784:	b	1c6c0 <__mempcpy_chk@plt+0xb0e0>
   1c788:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c78c:	add	fp, sp, #24
   1c790:	mov	r3, r2
   1c794:	mov	r8, r1
   1c798:	mov	r6, r0
   1c79c:	ldr	r2, [r0, #88]	; 0x58
   1c7a0:	mov	r1, r3
   1c7a4:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1c7a8:	mov	r9, r0
   1c7ac:	ldr	r0, [r8, #8]
   1c7b0:	cmp	r0, #1
   1c7b4:	blt	1c7f4 <__mempcpy_chk@plt+0xb214>
   1c7b8:	ldr	r4, [r8, #12]
   1c7bc:	ldr	r6, [r6, #84]	; 0x54
   1c7c0:	mov	r5, #0
   1c7c4:	ldr	r7, [r4, r5, lsl #2]
   1c7c8:	mov	r0, r6
   1c7cc:	mov	r1, r7
   1c7d0:	mov	r2, r9
   1c7d4:	bl	1fc30 <__mempcpy_chk@plt+0xe650>
   1c7d8:	cmp	r0, #0
   1c7dc:	movne	r0, r7
   1c7e0:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c7e4:	add	r5, r5, #1
   1c7e8:	ldr	r0, [r8, #8]
   1c7ec:	cmp	r5, r0
   1c7f0:	blt	1c7c4 <__mempcpy_chk@plt+0xb1e4>
   1c7f4:	mov	r7, #0
   1c7f8:	mov	r0, r7
   1c7fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c804:	add	fp, sp, #28
   1c808:	sub	sp, sp, #44	; 0x2c
   1c80c:	ldr	r7, [r0, #92]	; 0x5c
   1c810:	cmn	r7, #-1073741822	; 0xc0000002
   1c814:	bhi	1ca10 <__mempcpy_chk@plt+0xb430>
   1c818:	ldr	r5, [r0, #84]	; 0x54
   1c81c:	str	r0, [sp, #12]
   1c820:	ldr	sl, [r0, #96]	; 0x60
   1c824:	mov	r0, #4
   1c828:	add	r6, r0, r7, lsl #2
   1c82c:	mov	r0, r6
   1c830:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1c834:	mov	r4, #12
   1c838:	cmp	r0, #0
   1c83c:	beq	1c9e0 <__mempcpy_chk@plt+0xb400>
   1c840:	mov	r9, r0
   1c844:	ldr	r0, [r5, #76]	; 0x4c
   1c848:	cmp	r0, #0
   1c84c:	beq	1c874 <__mempcpy_chk@plt+0xb294>
   1c850:	mov	r0, r6
   1c854:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1c858:	cmp	r0, #0
   1c85c:	beq	1c9e4 <__mempcpy_chk@plt+0xb404>
   1c860:	mov	r8, r0
   1c864:	str	r5, [sp, #8]
   1c868:	add	r4, sp, #16
   1c86c:	mov	r5, sl
   1c870:	b	1c8dc <__mempcpy_chk@plt+0xb2fc>
   1c874:	str	r7, [sp]
   1c878:	add	r4, sp, #16
   1c87c:	mov	r8, #0
   1c880:	mov	r0, r4
   1c884:	mov	r1, r9
   1c888:	mov	r2, #0
   1c88c:	mov	r3, sl
   1c890:	bl	1fca4 <__mempcpy_chk@plt+0xe6c4>
   1c894:	ldr	r0, [sp, #12]
   1c898:	mov	r1, r4
   1c89c:	bl	1fcc4 <__mempcpy_chk@plt+0xe6e4>
   1c8a0:	mov	r4, r0
   1c8a4:	ldr	r0, [sp, #40]	; 0x28
   1c8a8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1c8ac:	cmp	r4, #0
   1c8b0:	bne	1c9e8 <__mempcpy_chk@plt+0xb408>
   1c8b4:	ldr	r0, [r9]
   1c8b8:	cmp	r0, #0
   1c8bc:	bne	1c9c4 <__mempcpy_chk@plt+0xb3e4>
   1c8c0:	mov	r4, #1
   1c8c4:	b	1c9e8 <__mempcpy_chk@plt+0xb408>
   1c8c8:	mov	r0, sl
   1c8cc:	mov	r2, r7
   1c8d0:	bl	1c788 <__mempcpy_chk@plt+0xb1a8>
   1c8d4:	mov	r4, r5
   1c8d8:	mov	r5, r0
   1c8dc:	add	sl, r7, #1
   1c8e0:	lsl	r2, sl, #2
   1c8e4:	mov	r0, r8
   1c8e8:	mov	r1, #0
   1c8ec:	bl	114fc <memset@plt>
   1c8f0:	str	r7, [sp]
   1c8f4:	mov	r0, r4
   1c8f8:	mov	r1, r9
   1c8fc:	mov	r6, r8
   1c900:	mov	r2, r8
   1c904:	mov	r8, r5
   1c908:	mov	r3, r5
   1c90c:	bl	1fca4 <__mempcpy_chk@plt+0xe6c4>
   1c910:	ldr	r0, [sp, #12]
   1c914:	mov	r5, r4
   1c918:	mov	r1, r4
   1c91c:	bl	1fcc4 <__mempcpy_chk@plt+0xe6e4>
   1c920:	mov	r4, r0
   1c924:	ldr	r0, [sp, #40]	; 0x28
   1c928:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1c92c:	cmp	r4, #0
   1c930:	bne	1ca18 <__mempcpy_chk@plt+0xb438>
   1c934:	mov	r1, r9
   1c938:	ldr	r0, [r9]
   1c93c:	cmp	r0, #0
   1c940:	ldreq	r0, [r6]
   1c944:	cmpeq	r0, #0
   1c948:	bne	1c998 <__mempcpy_chk@plt+0xb3b8>
   1c94c:	mov	r4, #1
   1c950:	cmp	r7, #1
   1c954:	blt	1ca04 <__mempcpy_chk@plt+0xb424>
   1c958:	sub	r7, r7, #1
   1c95c:	ldr	sl, [sp, #12]
   1c960:	ldr	r0, [sl, #100]	; 0x64
   1c964:	mov	r9, r1
   1c968:	mov	r8, r6
   1c96c:	ldr	r1, [r0, r7, lsl #2]
   1c970:	cmp	r1, #0
   1c974:	ldrbne	r2, [r1, #52]	; 0x34
   1c978:	tstne	r2, #16
   1c97c:	bne	1c8c8 <__mempcpy_chk@plt+0xb2e8>
   1c980:	sub	r1, r7, #1
   1c984:	add	r2, r7, #1
   1c988:	cmp	r2, #2
   1c98c:	mov	r7, r1
   1c990:	bge	1c96c <__mempcpy_chk@plt+0xb38c>
   1c994:	b	1c9e8 <__mempcpy_chk@plt+0xb408>
   1c998:	ldr	r0, [sp, #8]
   1c99c:	mov	r9, r1
   1c9a0:	mov	r2, r6
   1c9a4:	mov	r3, sl
   1c9a8:	bl	1fdd0 <__mempcpy_chk@plt+0xe7f0>
   1c9ac:	mov	r4, r0
   1c9b0:	mov	r0, r6
   1c9b4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1c9b8:	cmp	r4, #0
   1c9bc:	mov	sl, r8
   1c9c0:	bne	1c9e4 <__mempcpy_chk@plt+0xb404>
   1c9c4:	ldr	r4, [sp, #12]
   1c9c8:	ldr	r0, [r4, #100]	; 0x64
   1c9cc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1c9d0:	str	r7, [r4, #92]	; 0x5c
   1c9d4:	str	sl, [r4, #96]	; 0x60
   1c9d8:	str	r9, [r4, #100]	; 0x64
   1c9dc:	mov	r4, #0
   1c9e0:	mov	r9, #0
   1c9e4:	mov	r8, #0
   1c9e8:	mov	r0, r9
   1c9ec:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1c9f0:	mov	r0, r8
   1c9f4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1c9f8:	mov	r0, r4
   1c9fc:	sub	sp, fp, #28
   1ca00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca04:	mov	r9, r1
   1ca08:	mov	r8, r6
   1ca0c:	b	1c9e8 <__mempcpy_chk@plt+0xb408>
   1ca10:	mov	r4, #12
   1ca14:	b	1c9f8 <__mempcpy_chk@plt+0xb418>
   1ca18:	mov	r8, r6
   1ca1c:	b	1c9e8 <__mempcpy_chk@plt+0xb408>
   1ca20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ca24:	add	fp, sp, #24
   1ca28:	mov	r8, r0
   1ca2c:	ldr	r0, [r0, #124]	; 0x7c
   1ca30:	cmp	r0, #1
   1ca34:	blt	1cab8 <__mempcpy_chk@plt+0xb4d8>
   1ca38:	mov	r7, #0
   1ca3c:	ldr	r0, [r8, #132]	; 0x84
   1ca40:	ldr	r5, [r0, r7, lsl #2]
   1ca44:	ldr	r0, [r5, #16]
   1ca48:	cmp	r0, #1
   1ca4c:	blt	1ca7c <__mempcpy_chk@plt+0xb49c>
   1ca50:	mov	r4, #0
   1ca54:	ldr	r0, [r5, #20]
   1ca58:	ldr	r6, [r0, r4, lsl #2]
   1ca5c:	ldr	r0, [r6, #16]
   1ca60:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ca64:	mov	r0, r6
   1ca68:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ca6c:	add	r4, r4, #1
   1ca70:	ldr	r0, [r5, #16]
   1ca74:	cmp	r4, r0
   1ca78:	blt	1ca54 <__mempcpy_chk@plt+0xb474>
   1ca7c:	ldr	r0, [r5, #20]
   1ca80:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ca84:	ldr	r0, [r5, #8]
   1ca88:	cmp	r0, #0
   1ca8c:	beq	1caa0 <__mempcpy_chk@plt+0xb4c0>
   1ca90:	ldr	r0, [r0, #8]
   1ca94:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ca98:	ldr	r0, [r5, #8]
   1ca9c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1caa0:	mov	r0, r5
   1caa4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1caa8:	add	r7, r7, #1
   1caac:	ldr	r0, [r8, #124]	; 0x7c
   1cab0:	cmp	r7, r0
   1cab4:	blt	1ca3c <__mempcpy_chk@plt+0xb45c>
   1cab8:	mov	r0, #0
   1cabc:	str	r0, [r8, #108]	; 0x6c
   1cac0:	str	r0, [r8, #124]	; 0x7c
   1cac4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cacc:	add	fp, sp, #28
   1cad0:	sub	sp, sp, #204	; 0xcc
   1cad4:	mov	r5, r3
   1cad8:	mov	r6, r2
   1cadc:	mov	r8, r1
   1cae0:	ldr	r4, [r0]
   1cae4:	movw	r0, #13672	; 0x3568
   1cae8:	movt	r0, #2
   1caec:	vldr	d16, [r0]
   1caf0:	ldr	r0, [r0, #8]
   1caf4:	str	r0, [fp, #-56]	; 0xffffffc8
   1caf8:	vstr	d16, [fp, #-64]	; 0xffffffc0
   1cafc:	add	r0, sp, #28
   1cb00:	bl	20e6c <__mempcpy_chk@plt+0xf88c>
   1cb04:	mov	r7, #0
   1cb08:	ldr	r0, [fp, #8]
   1cb0c:	cmp	r0, #0
   1cb10:	mov	r9, #0
   1cb14:	beq	1cb38 <__mempcpy_chk@plt+0xb558>
   1cb18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cb1c:	add	r0, r0, r0, lsl #1
   1cb20:	lsl	r0, r0, #3
   1cb24:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1cb28:	str	r0, [fp, #-56]	; 0xffffffc8
   1cb2c:	cmp	r0, #0
   1cb30:	beq	1cd3c <__mempcpy_chk@plt+0xb75c>
   1cb34:	sub	r9, fp, #64	; 0x40
   1cb38:	ldr	sl, [r4, #72]	; 0x48
   1cb3c:	str	r7, [fp, #-44]	; 0xffffffd4
   1cb40:	str	r7, [fp, #-48]	; 0xffffffd0
   1cb44:	str	r7, [fp, #-40]	; 0xffffffd8
   1cb48:	add	r0, sp, #28
   1cb4c:	mov	r1, r6
   1cb50:	bl	20e84 <__mempcpy_chk@plt+0xf8a4>
   1cb54:	cmp	r0, #0
   1cb58:	beq	1cd2c <__mempcpy_chk@plt+0xb74c>
   1cb5c:	str	r4, [sp, #20]
   1cb60:	str	r8, [sp, #24]
   1cb64:	add	r0, sp, #28
   1cb68:	bl	20f5c <__mempcpy_chk@plt+0xf97c>
   1cb6c:	mov	r4, r0
   1cb70:	lsl	r2, r6, #3
   1cb74:	mov	r1, r5
   1cb78:	bl	1134c <memcpy@plt>
   1cb7c:	ldr	r8, [r5]
   1cb80:	ldr	r0, [r5, #4]
   1cb84:	str	r8, [fp, #-32]	; 0xffffffe0
   1cb88:	cmp	r8, r0
   1cb8c:	bgt	1cd00 <__mempcpy_chk@plt+0xb720>
   1cb90:	clz	r0, r6
   1cb94:	lsr	r0, r0, #5
   1cb98:	clz	r1, r9
   1cb9c:	lsr	r1, r1, #5
   1cba0:	orr	r0, r1, r0
   1cba4:	str	r0, [sp, #16]
   1cba8:	ldr	r7, [sp, #24]
   1cbac:	str	r8, [sp]
   1cbb0:	str	r6, [sp, #4]
   1cbb4:	ldr	r0, [sp, #20]
   1cbb8:	mov	r1, r5
   1cbbc:	mov	r2, r4
   1cbc0:	mov	r3, sl
   1cbc4:	bl	20f64 <__mempcpy_chk@plt+0xf984>
   1cbc8:	ldr	r0, [r5, #4]
   1cbcc:	cmp	r8, r0
   1cbd0:	ldreq	r0, [r7, #96]	; 0x60
   1cbd4:	cmpeq	sl, r0
   1cbd8:	beq	1cbf8 <__mempcpy_chk@plt+0xb618>
   1cbdc:	cmp	r9, #0
   1cbe0:	beq	1cc60 <__mempcpy_chk@plt+0xb680>
   1cbe4:	sub	r0, fp, #48	; 0x30
   1cbe8:	mov	r1, sl
   1cbec:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1cbf0:	cmp	r0, #0
   1cbf4:	beq	1cc60 <__mempcpy_chk@plt+0xb680>
   1cbf8:	ldr	r0, [sp, #16]
   1cbfc:	cmp	r0, #0
   1cc00:	bne	1cd00 <__mempcpy_chk@plt+0xb720>
   1cc04:	mov	r0, #0
   1cc08:	ldr	r1, [r5, r0, lsl #3]
   1cc0c:	cmp	r1, #0
   1cc10:	blt	1cc24 <__mempcpy_chk@plt+0xb644>
   1cc14:	add	r1, r5, r0, lsl #3
   1cc18:	ldr	r1, [r1, #4]
   1cc1c:	cmn	r1, #1
   1cc20:	beq	1cc34 <__mempcpy_chk@plt+0xb654>
   1cc24:	add	r0, r0, #1
   1cc28:	cmp	r0, r6
   1cc2c:	bcc	1cc08 <__mempcpy_chk@plt+0xb628>
   1cc30:	b	1cd00 <__mempcpy_chk@plt+0xb720>
   1cc34:	str	r4, [sp]
   1cc38:	sub	r0, fp, #48	; 0x30
   1cc3c:	str	r0, [sp, #4]
   1cc40:	mov	r0, r9
   1cc44:	sub	r1, fp, #32
   1cc48:	mov	r2, r6
   1cc4c:	mov	r3, r5
   1cc50:	bl	21018 <__mempcpy_chk@plt+0xfa38>
   1cc54:	mov	sl, r0
   1cc58:	cmn	r0, #1
   1cc5c:	ble	1cd00 <__mempcpy_chk@plt+0xb720>
   1cc60:	sub	r0, fp, #32
   1cc64:	stm	sp, {r0, sl}
   1cc68:	sub	r0, fp, #48	; 0x30
   1cc6c:	str	r0, [sp, #8]
   1cc70:	str	r9, [sp, #12]
   1cc74:	mov	r0, r7
   1cc78:	mov	r1, r6
   1cc7c:	mov	r2, r5
   1cc80:	mov	r3, r4
   1cc84:	bl	210d0 <__mempcpy_chk@plt+0xfaf0>
   1cc88:	mov	sl, r0
   1cc8c:	cmn	r0, #1
   1cc90:	ble	1cca8 <__mempcpy_chk@plt+0xb6c8>
   1cc94:	ldr	r0, [r5, #4]
   1cc98:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1cc9c:	cmp	r8, r0
   1cca0:	ble	1cbac <__mempcpy_chk@plt+0xb5cc>
   1cca4:	b	1cd00 <__mempcpy_chk@plt+0xb720>
   1cca8:	cmn	sl, #2
   1ccac:	beq	1cd24 <__mempcpy_chk@plt+0xb744>
   1ccb0:	str	r4, [sp]
   1ccb4:	sub	r0, fp, #48	; 0x30
   1ccb8:	str	r0, [sp, #4]
   1ccbc:	mov	r0, r9
   1ccc0:	sub	r1, fp, #32
   1ccc4:	mov	r2, r6
   1ccc8:	mov	r3, r5
   1cccc:	bl	21018 <__mempcpy_chk@plt+0xfa38>
   1ccd0:	mov	sl, r0
   1ccd4:	cmn	r0, #1
   1ccd8:	bgt	1cc94 <__mempcpy_chk@plt+0xb6b4>
   1ccdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cce0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1cce4:	add	r0, sp, #28
   1cce8:	bl	20ed8 <__mempcpy_chk@plt+0xf8f8>
   1ccec:	mov	r0, r9
   1ccf0:	bl	20ef4 <__mempcpy_chk@plt+0xf914>
   1ccf4:	mov	r0, #1
   1ccf8:	sub	sp, fp, #28
   1ccfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd04:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1cd08:	add	r0, sp, #28
   1cd0c:	bl	20ed8 <__mempcpy_chk@plt+0xf8f8>
   1cd10:	mov	r0, r9
   1cd14:	bl	20ef4 <__mempcpy_chk@plt+0xf914>
   1cd18:	mov	r0, #0
   1cd1c:	sub	sp, fp, #28
   1cd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd28:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1cd2c:	add	r0, sp, #28
   1cd30:	bl	20ed8 <__mempcpy_chk@plt+0xf8f8>
   1cd34:	mov	r0, r9
   1cd38:	bl	20ef4 <__mempcpy_chk@plt+0xf914>
   1cd3c:	mov	r0, #12
   1cd40:	sub	sp, fp, #28
   1cd44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd48:	push	{r4, sl, fp, lr}
   1cd4c:	add	fp, sp, #8
   1cd50:	mov	r4, r0
   1cd54:	bl	1ca20 <__mempcpy_chk@plt+0xb440>
   1cd58:	ldr	r0, [r4, #132]	; 0x84
   1cd5c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1cd60:	ldr	r0, [r4, #116]	; 0x74
   1cd64:	pop	{r4, sl, fp, lr}
   1cd68:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   1cd6c:	push	{r4, r5, fp, lr}
   1cd70:	add	fp, sp, #8
   1cd74:	mov	r4, r0
   1cd78:	cmn	r1, #1
   1cd7c:	ldrle	r0, [r4, #60]	; 0x3c
   1cd80:	pople	{r4, r5, fp, pc}
   1cd84:	ldr	r0, [r4, #48]	; 0x30
   1cd88:	cmp	r0, r1
   1cd8c:	beq	1ce2c <__mempcpy_chk@plt+0xb84c>
   1cd90:	ldr	r0, [r4, #80]	; 0x50
   1cd94:	cmp	r0, #2
   1cd98:	blt	1cdec <__mempcpy_chk@plt+0xb80c>
   1cd9c:	ldr	r0, [r4, #8]
   1cda0:	b	1cdb8 <__mempcpy_chk@plt+0xb7d8>
   1cda4:	sub	r2, r1, #1
   1cda8:	cmp	r1, #0
   1cdac:	mov	r1, r2
   1cdb0:	ldrle	r0, [r4, #60]	; 0x3c
   1cdb4:	pople	{r4, r5, fp, pc}
   1cdb8:	ldr	r5, [r0, r1, lsl #2]
   1cdbc:	cmn	r5, #1
   1cdc0:	beq	1cda4 <__mempcpy_chk@plt+0xb7c4>
   1cdc4:	ldrb	r0, [r4, #78]	; 0x4e
   1cdc8:	cmp	r0, #0
   1cdcc:	beq	1ce10 <__mempcpy_chk@plt+0xb830>
   1cdd0:	mov	r0, r5
   1cdd4:	bl	114e4 <iswalnum@plt>
   1cdd8:	mov	r1, r0
   1cddc:	mov	r0, #1
   1cde0:	cmp	r5, #95	; 0x5f
   1cde4:	bne	1ce08 <__mempcpy_chk@plt+0xb828>
   1cde8:	b	1ce28 <__mempcpy_chk@plt+0xb848>
   1cdec:	ldr	r2, [r4, #4]
   1cdf0:	ldr	r0, [r4, #68]	; 0x44
   1cdf4:	ldrb	r5, [r2, r1]
   1cdf8:	mov	r1, r5
   1cdfc:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1ce00:	mov	r1, r0
   1ce04:	mov	r0, #1
   1ce08:	cmp	r1, #0
   1ce0c:	bne	1ce28 <__mempcpy_chk@plt+0xb848>
   1ce10:	mov	r0, #0
   1ce14:	cmp	r5, #10
   1ce18:	popne	{r4, r5, fp, pc}
   1ce1c:	ldrb	r0, [r4, #77]	; 0x4d
   1ce20:	cmp	r0, #0
   1ce24:	movwne	r0, #2
   1ce28:	pop	{r4, r5, fp, pc}
   1ce2c:	and	r0, r2, #2
   1ce30:	eor	r0, r0, #10
   1ce34:	pop	{r4, r5, fp, pc}
   1ce38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce3c:	add	fp, sp, #28
   1ce40:	sub	sp, sp, #12
   1ce44:	str	r2, [sp, #4]
   1ce48:	mov	sl, r1
   1ce4c:	mov	r7, r0
   1ce50:	ldr	r0, [r0, #24]
   1ce54:	ldr	r1, [r7, #32]
   1ce58:	add	r5, r1, r0
   1ce5c:	mvn	r1, #0
   1ce60:	cmp	r5, sl
   1ce64:	bge	1ced0 <__mempcpy_chk@plt+0xb8f0>
   1ce68:	add	r4, r7, #16
   1ce6c:	b	1ce90 <__mempcpy_chk@plt+0xb8b0>
   1ce70:	mov	r1, #0
   1ce74:	cmp	r6, #0
   1ce78:	cmpne	r0, #0
   1ce7c:	ldrne	r0, [r7]
   1ce80:	ldrbne	r1, [r0, r5]
   1ce84:	stm	r4, {r8, r9}
   1ce88:	mov	r0, #1
   1ce8c:	b	1cec4 <__mempcpy_chk@plt+0xb8e4>
   1ce90:	ldr	r0, [r7]
   1ce94:	ldr	r2, [r7, #44]	; 0x2c
   1ce98:	add	r1, r0, r5
   1ce9c:	sub	r6, r2, r5
   1cea0:	ldm	r4, {r8, r9}
   1cea4:	add	r0, sp, #8
   1cea8:	mov	r2, r6
   1ceac:	mov	r3, r4
   1ceb0:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   1ceb4:	sub	r1, r0, #1
   1ceb8:	cmn	r1, #3
   1cebc:	bcs	1ce70 <__mempcpy_chk@plt+0xb890>
   1cec0:	ldr	r1, [sp, #8]
   1cec4:	add	r5, r0, r5
   1cec8:	cmp	r5, sl
   1cecc:	blt	1ce90 <__mempcpy_chk@plt+0xb8b0>
   1ced0:	ldr	r0, [sp, #4]
   1ced4:	str	r1, [r0]
   1ced8:	mov	r0, r5
   1cedc:	sub	sp, fp, #28
   1cee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cee4:	asr	r2, r1, #31
   1cee8:	add	r2, r1, r2, lsr #27
   1ceec:	asr	r2, r2, #5
   1cef0:	ldr	r0, [r0, r2, lsl #2]
   1cef4:	and	r1, r1, #31
   1cef8:	mov	r2, #1
   1cefc:	and	r0, r0, r2, lsl r1
   1cf00:	cmp	r0, #0
   1cf04:	movwne	r0, #1
   1cf08:	bx	lr
   1cf0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cf10:	add	fp, sp, #24
   1cf14:	mov	r6, r0
   1cf18:	ldr	r0, [r1, #4]
   1cf1c:	cmp	r0, #1
   1cf20:	blt	1cf90 <__mempcpy_chk@plt+0xb9b0>
   1cf24:	mov	r8, r2
   1cf28:	mov	r5, r1
   1cf2c:	ldr	r7, [r6, #84]	; 0x54
   1cf30:	mov	r4, #0
   1cf34:	mov	r9, #1
   1cf38:	ldr	r0, [r5, #8]
   1cf3c:	ldr	r1, [r0, r4, lsl #2]
   1cf40:	ldr	r0, [r7]
   1cf44:	add	r2, r0, r1, lsl #3
   1cf48:	ldrb	r2, [r2, #4]
   1cf4c:	cmp	r2, #8
   1cf50:	bne	1cf80 <__mempcpy_chk@plt+0xb9a0>
   1cf54:	ldr	r0, [r0, r1, lsl #3]
   1cf58:	cmp	r0, #31
   1cf5c:	bgt	1cf80 <__mempcpy_chk@plt+0xb9a0>
   1cf60:	ldr	r2, [r7, #80]	; 0x50
   1cf64:	tst	r2, r9, lsl r0
   1cf68:	beq	1cf80 <__mempcpy_chk@plt+0xb9a0>
   1cf6c:	mov	r0, r6
   1cf70:	mov	r2, r8
   1cf74:	bl	1d5d4 <__mempcpy_chk@plt+0xbff4>
   1cf78:	cmp	r0, #0
   1cf7c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cf80:	add	r4, r4, #1
   1cf84:	ldr	r0, [r5, #4]
   1cf88:	cmp	r4, r0
   1cf8c:	blt	1cf38 <__mempcpy_chk@plt+0xb958>
   1cf90:	mov	r0, #0
   1cf94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cf98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf9c:	add	fp, sp, #28
   1cfa0:	sub	sp, sp, #52	; 0x34
   1cfa4:	mov	r5, r0
   1cfa8:	ldr	r0, [r1, #4]
   1cfac:	cmp	r0, #1
   1cfb0:	blt	1d270 <__mempcpy_chk@plt+0xbc90>
   1cfb4:	mov	r8, r1
   1cfb8:	ldr	r9, [r5, #84]	; 0x54
   1cfbc:	ldr	r0, [r5, #40]	; 0x28
   1cfc0:	str	r0, [sp, #32]
   1cfc4:	mov	sl, #0
   1cfc8:	str	r1, [sp, #4]
   1cfcc:	str	r9, [sp, #16]
   1cfd0:	ldr	r0, [r8, #8]
   1cfd4:	ldr	r4, [r0, sl, lsl #2]
   1cfd8:	ldr	r0, [r9]
   1cfdc:	add	r0, r0, r4, lsl #3
   1cfe0:	ldr	r6, [r0, #4]
   1cfe4:	uxtb	r0, r6
   1cfe8:	cmp	r0, #4
   1cfec:	bne	1d260 <__mempcpy_chk@plt+0xbc80>
   1cff0:	movw	r0, #65280	; 0xff00
   1cff4:	movt	r0, #3
   1cff8:	tst	r6, r0
   1cffc:	beq	1d050 <__mempcpy_chk@plt+0xba70>
   1d000:	ldr	r2, [r5, #88]	; 0x58
   1d004:	mov	r0, r5
   1d008:	ldr	r1, [sp, #32]
   1d00c:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1d010:	and	r1, r0, #1
   1d014:	tst	r6, #1024	; 0x400
   1d018:	beq	1d024 <__mempcpy_chk@plt+0xba44>
   1d01c:	cmp	r1, #0
   1d020:	beq	1d260 <__mempcpy_chk@plt+0xbc80>
   1d024:	tst	r6, #2048	; 0x800
   1d028:	cmpne	r1, #0
   1d02c:	bne	1d260 <__mempcpy_chk@plt+0xbc80>
   1d030:	tst	r6, #8192	; 0x2000
   1d034:	beq	1d040 <__mempcpy_chk@plt+0xba60>
   1d038:	ands	r1, r0, #2
   1d03c:	beq	1d260 <__mempcpy_chk@plt+0xbc80>
   1d040:	tst	r6, #32768	; 0x8000
   1d044:	beq	1d050 <__mempcpy_chk@plt+0xba70>
   1d048:	ands	r0, r0, #8
   1d04c:	beq	1d260 <__mempcpy_chk@plt+0xbc80>
   1d050:	ldr	r6, [r5, #108]	; 0x6c
   1d054:	mov	r0, r5
   1d058:	mov	r1, r4
   1d05c:	ldr	r2, [sp, #32]
   1d060:	bl	1d660 <__mempcpy_chk@plt+0xc080>
   1d064:	str	r0, [fp, #-32]	; 0xffffffe0
   1d068:	cmp	r0, #0
   1d06c:	bne	1d278 <__mempcpy_chk@plt+0xbc98>
   1d070:	ldr	r0, [r5, #108]	; 0x6c
   1d074:	cmp	r6, r0
   1d078:	bge	1d260 <__mempcpy_chk@plt+0xbc80>
   1d07c:	add	r0, r6, r6, lsl #1
   1d080:	lsl	r7, r0, #3
   1d084:	str	r4, [sp, #8]
   1d088:	ldr	r0, [r5, #116]	; 0x74
   1d08c:	ldr	r1, [r0, r7]
   1d090:	cmp	r1, r4
   1d094:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d098:	add	r0, r0, r7
   1d09c:	ldr	r1, [r0, #4]
   1d0a0:	ldr	r2, [sp, #32]
   1d0a4:	cmp	r1, r2
   1d0a8:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d0ac:	ldr	r2, [r0, #8]
   1d0b0:	ldr	r3, [r0, #12]
   1d0b4:	ldr	r0, [r9, #24]
   1d0b8:	str	r0, [sp, #28]
   1d0bc:	cmp	r3, r2
   1d0c0:	bne	1d0d8 <__mempcpy_chk@plt+0xbaf8>
   1d0c4:	ldr	r0, [r9, #20]
   1d0c8:	add	r1, r4, r4, lsl #1
   1d0cc:	add	r0, r0, r1, lsl #2
   1d0d0:	ldr	r0, [r0, #8]
   1d0d4:	b	1d0e0 <__mempcpy_chk@plt+0xbb00>
   1d0d8:	ldr	r0, [r9, #12]
   1d0dc:	add	r0, r0, r4, lsl #2
   1d0e0:	ldr	r0, [r0]
   1d0e4:	add	r9, r0, r0, lsl #1
   1d0e8:	ldr	r4, [sp, #32]
   1d0ec:	str	r3, [sp, #20]
   1d0f0:	add	r0, r3, r4
   1d0f4:	str	r2, [sp, #24]
   1d0f8:	sub	r8, r0, r2
   1d0fc:	sub	r1, r8, #1
   1d100:	ldr	r2, [r5, #88]	; 0x58
   1d104:	mov	r0, r5
   1d108:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1d10c:	mov	r3, r0
   1d110:	ldr	r0, [r5, #100]	; 0x64
   1d114:	ldr	r1, [r0, r4, lsl #2]
   1d118:	ldr	r0, [r0, r8, lsl #2]
   1d11c:	cmp	r1, #0
   1d120:	ldrne	r1, [r1, #8]
   1d124:	moveq	r1, #0
   1d128:	str	r1, [sp, #12]
   1d12c:	add	r4, sp, #36	; 0x24
   1d130:	ldr	r1, [sp, #28]
   1d134:	add	r2, r1, r9, lsl #2
   1d138:	cmp	r0, #0
   1d13c:	str	r2, [sp, #28]
   1d140:	beq	1d1b0 <__mempcpy_chk@plt+0xbbd0>
   1d144:	mov	r9, r3
   1d148:	ldr	r1, [r0, #40]	; 0x28
   1d14c:	mov	r0, r4
   1d150:	bl	1da10 <__mempcpy_chk@plt+0xc430>
   1d154:	str	r0, [fp, #-32]	; 0xffffffe0
   1d158:	cmp	r0, #0
   1d15c:	ldr	r1, [sp, #16]
   1d160:	bne	1d284 <__mempcpy_chk@plt+0xbca4>
   1d164:	sub	r0, fp, #32
   1d168:	mov	r2, r4
   1d16c:	mov	r3, r9
   1d170:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1d174:	ldr	r1, [r5, #100]	; 0x64
   1d178:	str	r0, [r1, r8, lsl #2]
   1d17c:	ldr	r0, [sp, #44]	; 0x2c
   1d180:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1d184:	ldr	r0, [r5, #100]	; 0x64
   1d188:	ldr	r0, [r0, r8, lsl #2]
   1d18c:	cmp	r0, #0
   1d190:	bne	1d1a0 <__mempcpy_chk@plt+0xbbc0>
   1d194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d198:	cmp	r0, #0
   1d19c:	bne	1d278 <__mempcpy_chk@plt+0xbc98>
   1d1a0:	ldr	r8, [sp, #4]
   1d1a4:	ldr	r4, [sp, #8]
   1d1a8:	ldr	r9, [sp, #16]
   1d1ac:	b	1d1ec <__mempcpy_chk@plt+0xbc0c>
   1d1b0:	sub	r0, fp, #32
   1d1b4:	ldr	r9, [sp, #16]
   1d1b8:	mov	r1, r9
   1d1bc:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1d1c0:	ldr	r1, [r5, #100]	; 0x64
   1d1c4:	str	r0, [r1, r8, lsl #2]
   1d1c8:	ldr	r0, [r5, #100]	; 0x64
   1d1cc:	ldr	r0, [r0, r8, lsl #2]
   1d1d0:	cmp	r0, #0
   1d1d4:	ldr	r8, [sp, #4]
   1d1d8:	ldr	r4, [sp, #8]
   1d1dc:	bne	1d1ec <__mempcpy_chk@plt+0xbc0c>
   1d1e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d1e4:	cmp	r0, #0
   1d1e8:	bne	1d278 <__mempcpy_chk@plt+0xbc98>
   1d1ec:	ldr	r0, [sp, #24]
   1d1f0:	ldr	r1, [sp, #20]
   1d1f4:	cmp	r1, r0
   1d1f8:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d1fc:	ldr	r0, [r5, #100]	; 0x64
   1d200:	ldr	r1, [sp, #32]
   1d204:	ldr	r0, [r0, r1, lsl #2]
   1d208:	ldr	r0, [r0, #8]
   1d20c:	ldr	r1, [sp, #12]
   1d210:	cmp	r0, r1
   1d214:	ble	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d218:	mov	r0, r5
   1d21c:	ldr	r1, [sp, #28]
   1d220:	ldr	r2, [sp, #32]
   1d224:	bl	1cf0c <__mempcpy_chk@plt+0xb92c>
   1d228:	str	r0, [fp, #-32]	; 0xffffffe0
   1d22c:	cmp	r0, #0
   1d230:	bne	1d278 <__mempcpy_chk@plt+0xbc98>
   1d234:	mov	r0, r5
   1d238:	ldr	r1, [sp, #28]
   1d23c:	bl	1cf98 <__mempcpy_chk@plt+0xb9b8>
   1d240:	str	r0, [fp, #-32]	; 0xffffffe0
   1d244:	cmp	r0, #0
   1d248:	bne	1d278 <__mempcpy_chk@plt+0xbc98>
   1d24c:	add	r7, r7, #24
   1d250:	add	r6, r6, #1
   1d254:	ldr	r0, [r5, #108]	; 0x6c
   1d258:	cmp	r6, r0
   1d25c:	blt	1d088 <__mempcpy_chk@plt+0xbaa8>
   1d260:	ldr	r0, [r8, #4]
   1d264:	add	sl, sl, #1
   1d268:	cmp	sl, r0
   1d26c:	blt	1cfd0 <__mempcpy_chk@plt+0xb9f0>
   1d270:	mov	r0, #0
   1d274:	str	r0, [fp, #-32]	; 0xffffffe0
   1d278:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d27c:	sub	sp, fp, #28
   1d280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d284:	ldr	r0, [sp, #44]	; 0x2c
   1d288:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1d28c:	b	1d278 <__mempcpy_chk@plt+0xbc98>
   1d290:	push	{r4, r5, fp, lr}
   1d294:	add	fp, sp, #8
   1d298:	mov	r4, r0
   1d29c:	ldr	r0, [r0, #36]	; 0x24
   1d2a0:	mov	r5, #12
   1d2a4:	cmn	r0, #-536870910	; 0xe0000002
   1d2a8:	bhi	1d35c <__mempcpy_chk@plt+0xbd7c>
   1d2ac:	ldr	r2, [r4, #48]	; 0x30
   1d2b0:	cmp	r2, r0, lsl #1
   1d2b4:	lslge	r2, r0, #1
   1d2b8:	cmp	r2, r1
   1d2bc:	movle	r2, r1
   1d2c0:	mov	r0, r4
   1d2c4:	mov	r1, r2
   1d2c8:	bl	16a8c <__mempcpy_chk@plt+0x54ac>
   1d2cc:	cmp	r0, #0
   1d2d0:	popne	{r4, r5, fp, pc}
   1d2d4:	ldr	r0, [r4, #100]	; 0x64
   1d2d8:	cmp	r0, #0
   1d2dc:	beq	1d2fc <__mempcpy_chk@plt+0xbd1c>
   1d2e0:	ldr	r1, [r4, #36]	; 0x24
   1d2e4:	mov	r2, #4
   1d2e8:	add	r1, r2, r1, lsl #2
   1d2ec:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1d2f0:	cmp	r0, #0
   1d2f4:	beq	1d35c <__mempcpy_chk@plt+0xbd7c>
   1d2f8:	str	r0, [r4, #100]	; 0x64
   1d2fc:	ldr	r0, [r4, #80]	; 0x50
   1d300:	ldrb	r1, [r4, #72]	; 0x48
   1d304:	cmp	r1, #0
   1d308:	beq	1d328 <__mempcpy_chk@plt+0xbd48>
   1d30c:	cmp	r0, #2
   1d310:	blt	1d33c <__mempcpy_chk@plt+0xbd5c>
   1d314:	mov	r0, r4
   1d318:	bl	16b30 <__mempcpy_chk@plt+0x5550>
   1d31c:	cmp	r0, #0
   1d320:	popne	{r4, r5, fp, pc}
   1d324:	b	1d358 <__mempcpy_chk@plt+0xbd78>
   1d328:	cmp	r0, #2
   1d32c:	blt	1d348 <__mempcpy_chk@plt+0xbd68>
   1d330:	mov	r0, r4
   1d334:	bl	17164 <__mempcpy_chk@plt+0x5b84>
   1d338:	b	1d358 <__mempcpy_chk@plt+0xbd78>
   1d33c:	mov	r0, r4
   1d340:	bl	170f8 <__mempcpy_chk@plt+0x5b18>
   1d344:	b	1d358 <__mempcpy_chk@plt+0xbd78>
   1d348:	ldr	r0, [r4, #64]	; 0x40
   1d34c:	cmp	r0, #0
   1d350:	movne	r0, r4
   1d354:	blne	172f4 <__mempcpy_chk@plt+0x5d14>
   1d358:	mov	r5, #0
   1d35c:	mov	r0, r5
   1d360:	pop	{r4, r5, fp, pc}
   1d364:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d368:	add	fp, sp, #24
   1d36c:	mov	r6, r2
   1d370:	mov	r4, r1
   1d374:	mov	r5, r0
   1d378:	ldrb	r0, [r2, #52]	; 0x34
   1d37c:	tst	r0, #32
   1d380:	bne	1d3f8 <__mempcpy_chk@plt+0xbe18>
   1d384:	ldr	r0, [r4, #4]
   1d388:	ldr	r1, [r4, #40]	; 0x28
   1d38c:	add	r2, r1, #1
   1d390:	str	r2, [r4, #40]	; 0x28
   1d394:	ldrb	r7, [r0, r1]
   1d398:	ldr	r0, [r6, #44]	; 0x2c
   1d39c:	cmp	r0, #0
   1d3a0:	ldrne	r0, [r0, r7, lsl #2]
   1d3a4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d3a8:	ldr	r8, [r6, #48]	; 0x30
   1d3ac:	cmp	r8, #0
   1d3b0:	bne	1d3d8 <__mempcpy_chk@plt+0xbdf8>
   1d3b4:	ldr	r0, [r4, #84]	; 0x54
   1d3b8:	mov	r1, r6
   1d3bc:	bl	1f1bc <__mempcpy_chk@plt+0xdbdc>
   1d3c0:	cmp	r0, #0
   1d3c4:	bne	1d398 <__mempcpy_chk@plt+0xbdb8>
   1d3c8:	mov	r0, #12
   1d3cc:	str	r0, [r5]
   1d3d0:	mov	r0, #0
   1d3d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d3d8:	ldr	r0, [r4, #40]	; 0x28
   1d3dc:	ldr	r2, [r4, #88]	; 0x58
   1d3e0:	sub	r1, r0, #1
   1d3e4:	mov	r0, r4
   1d3e8:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1d3ec:	bfi	r7, r0, #8, #1
   1d3f0:	ldr	r0, [r8, r7, lsl #2]
   1d3f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d3f8:	mov	r0, r4
   1d3fc:	mov	r1, r6
   1d400:	bl	1eff8 <__mempcpy_chk@plt+0xda18>
   1d404:	str	r0, [r5]
   1d408:	cmp	r0, #0
   1d40c:	beq	1d384 <__mempcpy_chk@plt+0xbda4>
   1d410:	b	1d3d0 <__mempcpy_chk@plt+0xbdf0>
   1d414:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d418:	add	fp, sp, #24
   1d41c:	sub	sp, sp, #16
   1d420:	mov	r7, r2
   1d424:	mov	r4, r1
   1d428:	mov	r8, r0
   1d42c:	ldr	r5, [r1, #40]	; 0x28
   1d430:	ldr	r6, [r1, #84]	; 0x54
   1d434:	ldr	r0, [r1, #100]	; 0x64
   1d438:	ldr	r1, [r1, #104]	; 0x68
   1d43c:	cmp	r5, r1
   1d440:	ble	1d450 <__mempcpy_chk@plt+0xbe70>
   1d444:	str	r7, [r0, r5, lsl #2]
   1d448:	str	r5, [r4, #104]	; 0x68
   1d44c:	b	1d4ec <__mempcpy_chk@plt+0xbf0c>
   1d450:	ldr	r1, [r0, r5, lsl #2]
   1d454:	cmp	r1, #0
   1d458:	beq	1d48c <__mempcpy_chk@plt+0xbeac>
   1d45c:	ldr	r0, [r0, r5, lsl #2]
   1d460:	ldr	r2, [r0, #40]	; 0x28
   1d464:	cmp	r7, #0
   1d468:	beq	1d494 <__mempcpy_chk@plt+0xbeb4>
   1d46c:	ldr	r9, [r7, #40]	; 0x28
   1d470:	mov	r0, sp
   1d474:	mov	r1, r9
   1d478:	bl	1da10 <__mempcpy_chk@plt+0xc430>
   1d47c:	str	r0, [r8]
   1d480:	cmp	r0, #0
   1d484:	beq	1d4a8 <__mempcpy_chk@plt+0xbec8>
   1d488:	b	1d558 <__mempcpy_chk@plt+0xbf78>
   1d48c:	str	r7, [r0, r5, lsl #2]
   1d490:	b	1d4ec <__mempcpy_chk@plt+0xbf0c>
   1d494:	vldr	d16, [r2]
   1d498:	ldr	r0, [r2, #8]
   1d49c:	str	r0, [sp, #8]
   1d4a0:	vstr	d16, [sp]
   1d4a4:	mov	r9, #0
   1d4a8:	ldr	r0, [r4, #40]	; 0x28
   1d4ac:	ldr	r2, [r4, #88]	; 0x58
   1d4b0:	sub	r1, r0, #1
   1d4b4:	mov	r0, r4
   1d4b8:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1d4bc:	mov	r3, r0
   1d4c0:	mov	r2, sp
   1d4c4:	mov	r0, r8
   1d4c8:	mov	r1, r6
   1d4cc:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1d4d0:	mov	r7, r0
   1d4d4:	ldr	r0, [r4, #100]	; 0x64
   1d4d8:	str	r7, [r0, r5, lsl #2]
   1d4dc:	cmp	r9, #0
   1d4e0:	beq	1d4ec <__mempcpy_chk@plt+0xbf0c>
   1d4e4:	ldr	r0, [sp, #8]
   1d4e8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1d4ec:	cmp	r7, #0
   1d4f0:	ldrne	r0, [r6, #76]	; 0x4c
   1d4f4:	cmpne	r0, #0
   1d4f8:	bne	1d508 <__mempcpy_chk@plt+0xbf28>
   1d4fc:	mov	r0, r7
   1d500:	sub	sp, fp, #24
   1d504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d508:	add	r6, r7, #4
   1d50c:	mov	r0, r4
   1d510:	mov	r1, r6
   1d514:	mov	r2, r5
   1d518:	bl	1cf0c <__mempcpy_chk@plt+0xb92c>
   1d51c:	str	r0, [r8]
   1d520:	cmp	r0, #0
   1d524:	bne	1d558 <__mempcpy_chk@plt+0xbf78>
   1d528:	ldrb	r0, [r7, #52]	; 0x34
   1d52c:	tst	r0, #64	; 0x40
   1d530:	beq	1d4fc <__mempcpy_chk@plt+0xbf1c>
   1d534:	mov	r0, r4
   1d538:	mov	r1, r6
   1d53c:	bl	1cf98 <__mempcpy_chk@plt+0xb9b8>
   1d540:	str	r0, [r8]
   1d544:	cmp	r0, #0
   1d548:	mov	r7, #0
   1d54c:	ldreq	r0, [r4, #100]	; 0x64
   1d550:	ldreq	r7, [r0, r5, lsl #2]
   1d554:	b	1d4fc <__mempcpy_chk@plt+0xbf1c>
   1d558:	mov	r7, #0
   1d55c:	b	1d4fc <__mempcpy_chk@plt+0xbf1c>
   1d560:	push	{r4, r5, r6, sl, fp, lr}
   1d564:	add	fp, sp, #16
   1d568:	mov	r4, r1
   1d56c:	mov	r6, r0
   1d570:	b	1d594 <__mempcpy_chk@plt+0xbfb4>
   1d574:	mov	r0, r6
   1d578:	mov	r1, r4
   1d57c:	mov	r2, #0
   1d580:	bl	1d414 <__mempcpy_chk@plt+0xbe34>
   1d584:	cmp	r0, #0
   1d588:	ldreq	r1, [r6]
   1d58c:	cmpeq	r1, #0
   1d590:	popne	{r4, r5, r6, sl, fp, pc}
   1d594:	ldr	r1, [r4, #40]	; 0x28
   1d598:	ldr	r0, [r4, #104]	; 0x68
   1d59c:	cmp	r1, r0
   1d5a0:	movge	r0, #0
   1d5a4:	popge	{r4, r5, r6, sl, fp, pc}
   1d5a8:	add	r2, r1, #1
   1d5ac:	ldr	r3, [r4, #40]	; 0x28
   1d5b0:	ldr	r5, [r4, #100]	; 0x64
   1d5b4:	add	r3, r3, #1
   1d5b8:	str	r3, [r4, #40]	; 0x28
   1d5bc:	add	r1, r5, r1, lsl #2
   1d5c0:	ldr	r1, [r1, #4]
   1d5c4:	cmp	r1, #0
   1d5c8:	mov	r1, r2
   1d5cc:	beq	1d59c <__mempcpy_chk@plt+0xbfbc>
   1d5d0:	b	1d574 <__mempcpy_chk@plt+0xbf94>
   1d5d4:	push	{r4, r5, r6, r7, fp, lr}
   1d5d8:	add	fp, sp, #16
   1d5dc:	mov	r4, r2
   1d5e0:	mov	r6, r1
   1d5e4:	mov	r5, r0
   1d5e8:	ldr	r0, [r0, #124]	; 0x7c
   1d5ec:	ldr	r7, [r5, #128]	; 0x80
   1d5f0:	cmp	r0, r7
   1d5f4:	beq	1d63c <__mempcpy_chk@plt+0xc05c>
   1d5f8:	mov	r0, #1
   1d5fc:	mov	r1, #24
   1d600:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1d604:	ldr	r1, [r5, #124]	; 0x7c
   1d608:	ldr	r2, [r5, #132]	; 0x84
   1d60c:	str	r0, [r2, r1, lsl #2]
   1d610:	ldr	r0, [r5, #132]	; 0x84
   1d614:	ldr	r0, [r0, r1, lsl #2]
   1d618:	cmp	r0, #0
   1d61c:	strne	r6, [r0, #4]
   1d620:	addne	r1, r1, #1
   1d624:	strne	r1, [r5, #124]	; 0x7c
   1d628:	strne	r4, [r0]
   1d62c:	movne	r0, #0
   1d630:	popne	{r4, r5, r6, r7, fp, pc}
   1d634:	mov	r0, #12
   1d638:	pop	{r4, r5, r6, r7, fp, pc}
   1d63c:	ldr	r0, [r5, #132]	; 0x84
   1d640:	lsl	r1, r7, #3
   1d644:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1d648:	cmp	r0, #0
   1d64c:	beq	1d634 <__mempcpy_chk@plt+0xc054>
   1d650:	lsl	r1, r7, #1
   1d654:	str	r1, [r5, #128]	; 0x80
   1d658:	str	r0, [r5, #132]	; 0x84
   1d65c:	b	1d5f8 <__mempcpy_chk@plt+0xc018>
   1d660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d664:	add	fp, sp, #28
   1d668:	sub	sp, sp, #52	; 0x34
   1d66c:	str	r1, [sp, #36]	; 0x24
   1d670:	mov	r4, r0
   1d674:	ldr	r5, [r0, #4]
   1d678:	ldr	r6, [r0, #84]	; 0x54
   1d67c:	str	r2, [fp, #-36]	; 0xffffffdc
   1d680:	mov	r1, r2
   1d684:	bl	1dc40 <__mempcpy_chk@plt+0xc660>
   1d688:	cmn	r0, #1
   1d68c:	beq	1d6bc <__mempcpy_chk@plt+0xc0dc>
   1d690:	ldr	r1, [r4, #116]	; 0x74
   1d694:	add	r0, r0, r0, lsl #1
   1d698:	add	r0, r1, r0, lsl #3
   1d69c:	ldr	r2, [sp, #36]	; 0x24
   1d6a0:	ldr	r1, [r0]
   1d6a4:	cmp	r1, r2
   1d6a8:	beq	1d9f0 <__mempcpy_chk@plt+0xc410>
   1d6ac:	ldrb	r1, [r0, #20]
   1d6b0:	add	r0, r0, #24
   1d6b4:	cmp	r1, #0
   1d6b8:	bne	1d6a0 <__mempcpy_chk@plt+0xc0c0>
   1d6bc:	ldr	r0, [r4, #124]	; 0x7c
   1d6c0:	cmp	r0, #1
   1d6c4:	blt	1d9f0 <__mempcpy_chk@plt+0xc410>
   1d6c8:	mov	ip, r6
   1d6cc:	ldr	r0, [r6]
   1d6d0:	ldr	r1, [sp, #36]	; 0x24
   1d6d4:	ldr	r2, [r0, r1, lsl #3]
   1d6d8:	mov	r6, #0
   1d6dc:	str	r4, [sp, #28]
   1d6e0:	mov	r3, r5
   1d6e4:	str	ip, [sp, #24]
   1d6e8:	str	r2, [sp, #20]
   1d6ec:	b	1d898 <__mempcpy_chk@plt+0xc2b8>
   1d6f0:	ldr	ip, [sp, #24]
   1d6f4:	ldr	r2, [sp, #20]
   1d6f8:	b	1d738 <__mempcpy_chk@plt+0xc158>
   1d6fc:	ldr	r0, [r4, #48]	; 0x30
   1d700:	cmp	r6, r0
   1d704:	bge	1d9dc <__mempcpy_chk@plt+0xc3fc>
   1d708:	mov	r9, r6
   1d70c:	add	r1, r6, #1
   1d710:	mov	r0, r4
   1d714:	bl	1d290 <__mempcpy_chk@plt+0xbcb0>
   1d718:	cmp	r0, #0
   1d71c:	bne	1da00 <__mempcpy_chk@plt+0xc420>
   1d720:	ldr	r3, [r4, #4]
   1d724:	ldr	r7, [sp, #32]
   1d728:	mov	r6, r9
   1d72c:	ldr	ip, [sp, #24]
   1d730:	ldr	r2, [sp, #20]
   1d734:	b	1d750 <__mempcpy_chk@plt+0xc170>
   1d738:	ldr	r0, [r7]
   1d73c:	cmp	r5, r0
   1d740:	ble	1d768 <__mempcpy_chk@plt+0xc188>
   1d744:	ldr	r0, [r4, #28]
   1d748:	cmp	r6, r0
   1d74c:	bge	1d6fc <__mempcpy_chk@plt+0xc11c>
   1d750:	ldrb	r0, [r3, r6]
   1d754:	add	r1, r3, r5
   1d758:	ldrb	r1, [r1, #-1]
   1d75c:	cmp	r0, r1
   1d760:	bne	1d9dc <__mempcpy_chk@plt+0xc3fc>
   1d764:	add	r6, r6, #1
   1d768:	ldr	r0, [r4, #100]	; 0x64
   1d76c:	ldr	r0, [r0, r5, lsl #2]
   1d770:	cmp	r0, #0
   1d774:	beq	1d87c <__mempcpy_chk@plt+0xc29c>
   1d778:	mov	r9, r6
   1d77c:	mov	sl, r3
   1d780:	add	r1, r0, #4
   1d784:	mov	r0, ip
   1d788:	mov	r3, #9
   1d78c:	bl	1ddf8 <__mempcpy_chk@plt+0xc818>
   1d790:	cmn	r0, #1
   1d794:	beq	1d868 <__mempcpy_chk@plt+0xc288>
   1d798:	mov	r4, r0
   1d79c:	ldr	r1, [sp, #32]
   1d7a0:	ldr	r0, [r1, #8]
   1d7a4:	cmp	r0, #0
   1d7a8:	bne	1d7d4 <__mempcpy_chk@plt+0xc1f4>
   1d7ac:	ldr	r0, [r1]
   1d7b0:	sub	r0, r5, r0
   1d7b4:	add	r1, r0, #1
   1d7b8:	mov	r8, #12
   1d7bc:	mov	r0, #12
   1d7c0:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1d7c4:	ldr	r1, [sp, #32]
   1d7c8:	str	r0, [r1, #8]
   1d7cc:	cmp	r0, #0
   1d7d0:	beq	1d9f4 <__mempcpy_chk@plt+0xc414>
   1d7d4:	ldr	r3, [r1]
   1d7d8:	ldr	r2, [r1, #4]
   1d7dc:	ldr	r1, [r1, #8]
   1d7e0:	stm	sp, {r4, r5}
   1d7e4:	mov	r0, #9
   1d7e8:	str	r0, [sp, #8]
   1d7ec:	ldr	r0, [sp, #28]
   1d7f0:	bl	1de4c <__mempcpy_chk@plt+0xc86c>
   1d7f4:	ldr	r7, [sp, #32]
   1d7f8:	cmp	r0, #1
   1d7fc:	mov	r3, sl
   1d800:	mov	r6, r9
   1d804:	ldr	ip, [sp, #24]
   1d808:	ldr	r2, [sp, #20]
   1d80c:	beq	1d87c <__mempcpy_chk@plt+0xc29c>
   1d810:	mov	r8, r0
   1d814:	cmp	r0, #0
   1d818:	bne	1d9f4 <__mempcpy_chk@plt+0xc414>
   1d81c:	mov	r0, r7
   1d820:	mov	r1, r4
   1d824:	mov	r2, r5
   1d828:	bl	1e220 <__mempcpy_chk@plt+0xcc40>
   1d82c:	cmp	r0, #0
   1d830:	beq	1da08 <__mempcpy_chk@plt+0xc428>
   1d834:	mov	r2, r0
   1d838:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d83c:	str	r0, [sp]
   1d840:	ldr	r4, [sp, #28]
   1d844:	mov	r0, r4
   1d848:	mov	r1, r7
   1d84c:	ldr	r3, [sp, #36]	; 0x24
   1d850:	bl	1dd60 <__mempcpy_chk@plt+0xc780>
   1d854:	cmp	r0, #1
   1d858:	bhi	1da00 <__mempcpy_chk@plt+0xc420>
   1d85c:	ldr	r3, [r4, #4]
   1d860:	ldr	r7, [sp, #32]
   1d864:	b	1d870 <__mempcpy_chk@plt+0xc290>
   1d868:	ldr	r7, [sp, #32]
   1d86c:	mov	r3, sl
   1d870:	mov	r6, r9
   1d874:	ldr	ip, [sp, #24]
   1d878:	ldr	r2, [sp, #20]
   1d87c:	add	r1, r5, #1
   1d880:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d884:	cmp	r5, r0
   1d888:	mov	r5, r1
   1d88c:	ldr	r4, [sp, #28]
   1d890:	blt	1d738 <__mempcpy_chk@plt+0xc158>
   1d894:	b	1d9dc <__mempcpy_chk@plt+0xc3fc>
   1d898:	ldr	r0, [r4, #132]	; 0x84
   1d89c:	ldr	r7, [r0, r6, lsl #2]
   1d8a0:	ldr	r0, [r7, #4]
   1d8a4:	ldr	r1, [ip]
   1d8a8:	ldr	r0, [r1, r0, lsl #3]
   1d8ac:	cmp	r0, r2
   1d8b0:	str	r6, [sp, #16]
   1d8b4:	bne	1d9dc <__mempcpy_chk@plt+0xc3fc>
   1d8b8:	ldr	r5, [r7]
   1d8bc:	ldr	r0, [r7, #16]
   1d8c0:	cmp	r0, #1
   1d8c4:	str	r7, [sp, #32]
   1d8c8:	mov	sl, #0
   1d8cc:	blt	1d8dc <__mempcpy_chk@plt+0xc2fc>
   1d8d0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1d8d4:	mov	r9, r5
   1d8d8:	b	1d910 <__mempcpy_chk@plt+0xc330>
   1d8dc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1d8e0:	b	1d9b4 <__mempcpy_chk@plt+0xc3d4>
   1d8e4:	ldr	r0, [r4, #48]	; 0x30
   1d8e8:	cmp	r1, r0
   1d8ec:	bgt	1d9b0 <__mempcpy_chk@plt+0xc3d0>
   1d8f0:	mov	r7, r6
   1d8f4:	mov	r0, r4
   1d8f8:	bl	1dccc <__mempcpy_chk@plt+0xc6ec>
   1d8fc:	cmp	r0, #0
   1d900:	bne	1da00 <__mempcpy_chk@plt+0xc420>
   1d904:	ldr	r3, [r4, #4]
   1d908:	mov	r6, r7
   1d90c:	b	1d940 <__mempcpy_chk@plt+0xc360>
   1d910:	ldr	r0, [r7, #20]
   1d914:	ldr	r2, [r0, sl, lsl #2]
   1d918:	ldr	r0, [r2, #4]
   1d91c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d920:	sub	r5, r0, r9
   1d924:	cmp	r5, #1
   1d928:	blt	1d96c <__mempcpy_chk@plt+0xc38c>
   1d92c:	add	r1, r5, r6
   1d930:	ldr	r0, [r4, #28]
   1d934:	cmp	r1, r0
   1d938:	str	r2, [sp, #40]	; 0x28
   1d93c:	bgt	1d8e4 <__mempcpy_chk@plt+0xc304>
   1d940:	add	r0, r3, r6
   1d944:	add	r1, r3, r9
   1d948:	mov	r8, r6
   1d94c:	mov	r2, r5
   1d950:	mov	r7, r3
   1d954:	bl	113a0 <memcmp@plt>
   1d958:	mov	r3, r7
   1d95c:	cmp	r0, #0
   1d960:	ldr	r7, [sp, #32]
   1d964:	ldr	r2, [sp, #40]	; 0x28
   1d968:	bne	1d9b0 <__mempcpy_chk@plt+0xc3d0>
   1d96c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d970:	str	r0, [sp]
   1d974:	mov	r0, r4
   1d978:	mov	r1, r7
   1d97c:	ldr	r3, [sp, #36]	; 0x24
   1d980:	bl	1dd60 <__mempcpy_chk@plt+0xc780>
   1d984:	cmp	r0, #1
   1d988:	bhi	1da00 <__mempcpy_chk@plt+0xc420>
   1d98c:	add	r6, r5, r6
   1d990:	add	sl, sl, #1
   1d994:	ldr	r3, [r4, #4]
   1d998:	ldr	r0, [r7, #16]
   1d99c:	cmp	sl, r0
   1d9a0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1d9a4:	mov	r9, r5
   1d9a8:	blt	1d910 <__mempcpy_chk@plt+0xc330>
   1d9ac:	b	1d9b4 <__mempcpy_chk@plt+0xc3d4>
   1d9b0:	mov	r5, r9
   1d9b4:	ldr	r0, [r7, #16]
   1d9b8:	cmp	sl, r0
   1d9bc:	blt	1d9d4 <__mempcpy_chk@plt+0xc3f4>
   1d9c0:	cmp	sl, #0
   1d9c4:	addne	r5, r5, #1
   1d9c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d9cc:	cmp	r5, r0
   1d9d0:	ble	1d6f0 <__mempcpy_chk@plt+0xc110>
   1d9d4:	ldr	ip, [sp, #24]
   1d9d8:	ldr	r2, [sp, #20]
   1d9dc:	ldr	r6, [sp, #16]
   1d9e0:	add	r6, r6, #1
   1d9e4:	ldr	r0, [r4, #124]	; 0x7c
   1d9e8:	cmp	r6, r0
   1d9ec:	blt	1d898 <__mempcpy_chk@plt+0xc2b8>
   1d9f0:	mov	r8, #0
   1d9f4:	mov	r0, r8
   1d9f8:	sub	sp, fp, #28
   1d9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da00:	mov	r8, r0
   1da04:	b	1d9f4 <__mempcpy_chk@plt+0xc414>
   1da08:	mov	r8, #12
   1da0c:	b	1d9f4 <__mempcpy_chk@plt+0xc414>
   1da10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da14:	add	fp, sp, #28
   1da18:	sub	sp, sp, #4
   1da1c:	mov	sl, r2
   1da20:	mov	r8, r0
   1da24:	cmp	r1, #0
   1da28:	beq	1da60 <__mempcpy_chk@plt+0xc480>
   1da2c:	mov	r6, r1
   1da30:	ldr	r0, [r1, #4]
   1da34:	cmp	sl, #0
   1da38:	beq	1da4c <__mempcpy_chk@plt+0xc46c>
   1da3c:	cmp	r0, #1
   1da40:	ldrge	r1, [sl, #4]
   1da44:	cmpge	r1, #1
   1da48:	bge	1daa0 <__mempcpy_chk@plt+0xc4c0>
   1da4c:	cmp	r0, #1
   1da50:	blt	1da60 <__mempcpy_chk@plt+0xc480>
   1da54:	mov	r0, r8
   1da58:	mov	r1, r6
   1da5c:	b	1da7c <__mempcpy_chk@plt+0xc49c>
   1da60:	cmp	sl, #0
   1da64:	beq	1da88 <__mempcpy_chk@plt+0xc4a8>
   1da68:	ldr	r0, [sl, #4]
   1da6c:	cmp	r0, #1
   1da70:	blt	1da88 <__mempcpy_chk@plt+0xc4a8>
   1da74:	mov	r0, r8
   1da78:	mov	r1, sl
   1da7c:	sub	sp, fp, #28
   1da80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da84:	b	1b594 <__mempcpy_chk@plt+0x9fb4>
   1da88:	mov	r0, #0
   1da8c:	str	r0, [r8]
   1da90:	str	r0, [r8, #4]
   1da94:	str	r0, [r8, #8]
   1da98:	sub	sp, fp, #28
   1da9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1daa0:	add	r0, r1, r0
   1daa4:	str	r0, [r8]
   1daa8:	lsl	r0, r0, #2
   1daac:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   1dab0:	str	r0, [r8, #8]
   1dab4:	cmp	r0, #0
   1dab8:	beq	1dc34 <__mempcpy_chk@plt+0xc654>
   1dabc:	ldr	r2, [sl, #4]
   1dac0:	mov	r4, #0
   1dac4:	cmp	r2, #0
   1dac8:	mov	r0, #0
   1dacc:	movwgt	r0, #1
   1dad0:	ldr	r3, [r6, #4]
   1dad4:	cmp	r3, #1
   1dad8:	blt	1db98 <__mempcpy_chk@plt+0xc5b8>
   1dadc:	mov	r9, #0
   1dae0:	cmp	r2, #1
   1dae4:	blt	1dba8 <__mempcpy_chk@plt+0xc5c8>
   1dae8:	mov	ip, #0
   1daec:	mov	r0, #0
   1daf0:	mov	r4, ip
   1daf4:	mov	r7, r0
   1daf8:	ldr	r0, [sl, #8]
   1dafc:	ldr	r1, [r0, r4, lsl #2]
   1db00:	ldr	r0, [r6, #8]
   1db04:	ldr	r5, [r0, r9, lsl #2]
   1db08:	cmp	r5, r1
   1db0c:	ble	1db4c <__mempcpy_chk@plt+0xc56c>
   1db10:	ldr	r0, [r8, #8]
   1db14:	str	r1, [r0, r7, lsl #2]
   1db18:	ldr	r2, [sl, #4]
   1db1c:	add	r1, r4, #1
   1db20:	cmp	r2, r1
   1db24:	mov	r0, #0
   1db28:	movwgt	r0, #1
   1db2c:	ldr	r3, [r6, #4]
   1db30:	cmp	r3, r9
   1db34:	ble	1dbd4 <__mempcpy_chk@plt+0xc5f4>
   1db38:	add	r7, r7, #1
   1db3c:	cmp	r2, r1
   1db40:	mov	r4, r1
   1db44:	bgt	1daf8 <__mempcpy_chk@plt+0xc518>
   1db48:	b	1dbac <__mempcpy_chk@plt+0xc5cc>
   1db4c:	ldr	r0, [r8, #8]
   1db50:	str	r5, [r0, r7, lsl #2]
   1db54:	add	lr, r4, #1
   1db58:	cmp	r5, r1
   1db5c:	mov	ip, r4
   1db60:	moveq	ip, lr
   1db64:	ldr	r2, [sl, #4]
   1db68:	cmp	r2, ip
   1db6c:	mov	r0, #0
   1db70:	movwgt	r0, #1
   1db74:	add	r9, r9, #1
   1db78:	ldr	r3, [r6, #4]
   1db7c:	cmp	r3, r9
   1db80:	ble	1dc1c <__mempcpy_chk@plt+0xc63c>
   1db84:	add	r0, r7, #1
   1db88:	cmp	r2, ip
   1db8c:	bgt	1daf0 <__mempcpy_chk@plt+0xc510>
   1db90:	add	r7, r7, #1
   1db94:	b	1dbac <__mempcpy_chk@plt+0xc5cc>
   1db98:	mov	r6, #0
   1db9c:	cmp	r0, #0
   1dba0:	bne	1dbe4 <__mempcpy_chk@plt+0xc604>
   1dba4:	b	1dc0c <__mempcpy_chk@plt+0xc62c>
   1dba8:	mov	r7, #0
   1dbac:	ldr	r0, [r8, #8]
   1dbb0:	add	r0, r0, r7, lsl #2
   1dbb4:	ldr	r1, [r6, #8]
   1dbb8:	add	r1, r1, r9, lsl #2
   1dbbc:	sub	r2, r3, r9
   1dbc0:	lsl	r2, r2, #2
   1dbc4:	bl	1134c <memcpy@plt>
   1dbc8:	sub	r0, r7, r9
   1dbcc:	ldr	r1, [r6, #4]
   1dbd0:	b	1dc08 <__mempcpy_chk@plt+0xc628>
   1dbd4:	add	r6, r7, #1
   1dbd8:	add	r4, r4, #1
   1dbdc:	cmp	r0, #0
   1dbe0:	beq	1dc0c <__mempcpy_chk@plt+0xc62c>
   1dbe4:	ldr	r0, [r8, #8]
   1dbe8:	add	r0, r0, r6, lsl #2
   1dbec:	ldr	r1, [sl, #8]
   1dbf0:	add	r1, r1, r4, lsl #2
   1dbf4:	sub	r2, r2, r4
   1dbf8:	lsl	r2, r2, #2
   1dbfc:	bl	1134c <memcpy@plt>
   1dc00:	sub	r0, r6, r4
   1dc04:	ldr	r1, [sl, #4]
   1dc08:	add	r6, r0, r1
   1dc0c:	str	r6, [r8, #4]
   1dc10:	mov	r0, #0
   1dc14:	sub	sp, fp, #28
   1dc18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc1c:	cmp	r5, r1
   1dc20:	moveq	r4, lr
   1dc24:	add	r6, r7, #1
   1dc28:	cmp	r0, #0
   1dc2c:	bne	1dbe4 <__mempcpy_chk@plt+0xc604>
   1dc30:	b	1dc0c <__mempcpy_chk@plt+0xc62c>
   1dc34:	mov	r0, #12
   1dc38:	sub	sp, fp, #28
   1dc3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc40:	push	{r4, r5, r6, r7, fp, lr}
   1dc44:	add	fp, sp, #16
   1dc48:	mov	ip, r0
   1dc4c:	ldr	lr, [r0, #108]	; 0x6c
   1dc50:	cmp	lr, #1
   1dc54:	blt	1dcb8 <__mempcpy_chk@plt+0xc6d8>
   1dc58:	ldr	r2, [ip, #116]	; 0x74
   1dc5c:	mov	r0, #0
   1dc60:	mov	r3, #1
   1dc64:	mov	r4, lr
   1dc68:	add	r5, r0, r4
   1dc6c:	add	r5, r5, r5, lsr #31
   1dc70:	asr	r6, r5, #1
   1dc74:	add	r7, r6, r6, lsl #1
   1dc78:	add	r7, r2, r7, lsl #3
   1dc7c:	ldr	r7, [r7, #4]
   1dc80:	cmp	r7, r1
   1dc84:	addlt	r0, r3, r5, asr #1
   1dc88:	movge	r4, r6
   1dc8c:	cmp	r0, r4
   1dc90:	blt	1dc68 <__mempcpy_chk@plt+0xc688>
   1dc94:	cmp	r0, lr
   1dc98:	bge	1dcc4 <__mempcpy_chk@plt+0xc6e4>
   1dc9c:	ldr	r2, [ip, #116]	; 0x74
   1dca0:	add	r3, r0, r0, lsl #1
   1dca4:	add	r2, r2, r3, lsl #3
   1dca8:	ldr	r2, [r2, #4]
   1dcac:	cmp	r2, r1
   1dcb0:	mvnne	r0, #0
   1dcb4:	pop	{r4, r5, r6, r7, fp, pc}
   1dcb8:	mov	r0, #0
   1dcbc:	cmp	r0, lr
   1dcc0:	blt	1dc9c <__mempcpy_chk@plt+0xc6bc>
   1dcc4:	mvn	r0, #0
   1dcc8:	pop	{r4, r5, r6, r7, fp, pc}
   1dccc:	push	{r4, r5, r6, r7, fp, lr}
   1dcd0:	add	fp, sp, #16
   1dcd4:	mov	r4, r1
   1dcd8:	mov	r5, r0
   1dcdc:	ldr	r0, [r0, #36]	; 0x24
   1dce0:	ldr	r7, [r5, #104]	; 0x68
   1dce4:	cmp	r0, r1
   1dce8:	ldrle	r1, [r5, #48]	; 0x30
   1dcec:	cmple	r0, r1
   1dcf0:	blt	1dd40 <__mempcpy_chk@plt+0xc760>
   1dcf4:	ldr	r0, [r5, #28]
   1dcf8:	cmp	r0, r4
   1dcfc:	ldrle	r1, [r5, #48]	; 0x30
   1dd00:	cmple	r0, r1
   1dd04:	blt	1dd40 <__mempcpy_chk@plt+0xc760>
   1dd08:	mov	r6, #0
   1dd0c:	cmp	r7, r4
   1dd10:	bge	1dd58 <__mempcpy_chk@plt+0xc778>
   1dd14:	sub	r0, r4, r7
   1dd18:	lsl	r2, r0, #2
   1dd1c:	ldr	r0, [r5, #100]	; 0x64
   1dd20:	add	r0, r0, r7, lsl #2
   1dd24:	add	r0, r0, #4
   1dd28:	mov	r6, #0
   1dd2c:	mov	r1, #0
   1dd30:	bl	114fc <memset@plt>
   1dd34:	str	r4, [r5, #104]	; 0x68
   1dd38:	mov	r0, r6
   1dd3c:	pop	{r4, r5, r6, r7, fp, pc}
   1dd40:	add	r1, r4, #1
   1dd44:	mov	r0, r5
   1dd48:	bl	1d290 <__mempcpy_chk@plt+0xbcb0>
   1dd4c:	mov	r6, r0
   1dd50:	cmp	r0, #0
   1dd54:	beq	1dd08 <__mempcpy_chk@plt+0xc728>
   1dd58:	mov	r0, r6
   1dd5c:	pop	{r4, r5, r6, r7, fp, pc}
   1dd60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dd64:	add	fp, sp, #24
   1dd68:	sub	sp, sp, #16
   1dd6c:	mov	r7, r3
   1dd70:	mov	r6, r2
   1dd74:	mov	r8, r1
   1dd78:	mov	r4, r0
   1dd7c:	ldr	r2, [r2]
   1dd80:	ldr	r3, [r6, #4]
   1dd84:	mov	r0, #8
   1dd88:	str	r0, [sp, #8]
   1dd8c:	ldr	r5, [fp, #8]
   1dd90:	str	r5, [sp, #4]
   1dd94:	str	r7, [sp]
   1dd98:	add	r1, r6, #8
   1dd9c:	mov	r0, r4
   1dda0:	bl	1de4c <__mempcpy_chk@plt+0xc86c>
   1dda4:	cmp	r0, #0
   1dda8:	beq	1ddb4 <__mempcpy_chk@plt+0xc7d4>
   1ddac:	sub	sp, fp, #24
   1ddb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ddb4:	ldr	r3, [r8]
   1ddb8:	ldr	r0, [r6, #4]
   1ddbc:	str	r0, [sp]
   1ddc0:	mov	r0, r4
   1ddc4:	mov	r1, r7
   1ddc8:	mov	r2, r5
   1ddcc:	bl	1e2a0 <__mempcpy_chk@plt+0xccc0>
   1ddd0:	cmp	r0, #0
   1ddd4:	bne	1ddac <__mempcpy_chk@plt+0xc7cc>
   1ddd8:	ldr	r0, [r6, #4]
   1dddc:	add	r0, r0, r5
   1dde0:	ldr	r1, [r8]
   1dde4:	sub	r1, r0, r1
   1dde8:	mov	r0, r4
   1ddec:	sub	sp, fp, #24
   1ddf0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ddf4:	b	1dccc <__mempcpy_chk@plt+0xc6ec>
   1ddf8:	push	{r4, r5, fp, lr}
   1ddfc:	add	fp, sp, #8
   1de00:	ldr	r4, [r1, #4]
   1de04:	cmp	r4, #1
   1de08:	blt	1de44 <__mempcpy_chk@plt+0xc864>
   1de0c:	ldr	ip, [r0]
   1de10:	ldr	lr, [r1, #8]
   1de14:	mov	r4, #0
   1de18:	ldr	r0, [lr, r4, lsl #2]
   1de1c:	add	r5, ip, r0, lsl #3
   1de20:	ldrb	r5, [r5, #4]
   1de24:	cmp	r5, r3
   1de28:	ldreq	r5, [ip, r0, lsl #3]
   1de2c:	cmpeq	r5, r2
   1de30:	popeq	{r4, r5, fp, pc}
   1de34:	add	r4, r4, #1
   1de38:	ldr	r0, [r1, #4]
   1de3c:	cmp	r4, r0
   1de40:	blt	1de18 <__mempcpy_chk@plt+0xc838>
   1de44:	mvn	r0, #0
   1de48:	pop	{r4, r5, fp, pc}
   1de4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de50:	add	fp, sp, #28
   1de54:	sub	sp, sp, #44	; 0x2c
   1de58:	mov	sl, r3
   1de5c:	mov	r8, r2
   1de60:	mov	r7, r1
   1de64:	mov	r4, r0
   1de68:	ldr	r1, [r0, #84]	; 0x54
   1de6c:	mov	r0, #0
   1de70:	str	r0, [fp, #-32]	; 0xffffffe0
   1de74:	str	r1, [sp, #20]
   1de78:	ldr	r0, [r1]
   1de7c:	ldr	r0, [r0, r2, lsl #3]
   1de80:	str	r0, [sp, #16]
   1de84:	ldr	r0, [r4, #120]	; 0x78
   1de88:	ldr	r1, [fp, #12]
   1de8c:	add	r0, r0, r1
   1de90:	ldr	r5, [r7, #4]
   1de94:	cmp	r5, r0
   1de98:	ble	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1de9c:	ldr	r0, [r4, #40]	; 0x28
   1dea0:	str	r0, [sp, #12]
   1dea4:	ldr	r2, [r4, #88]	; 0x58
   1dea8:	ldr	r0, [r4, #100]	; 0x64
   1deac:	str	r0, [sp, #8]
   1deb0:	ldr	r6, [r7]
   1deb4:	ldr	r0, [r7, #8]
   1deb8:	str	r0, [r4, #100]	; 0x64
   1debc:	cmp	r6, #0
   1dec0:	moveq	r6, sl
   1dec4:	str	r6, [r4, #40]	; 0x28
   1dec8:	sub	r1, r6, #1
   1decc:	mov	r0, r4
   1ded0:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1ded4:	mov	r9, r0
   1ded8:	cmp	r6, sl
   1dedc:	mov	r5, r4
   1dee0:	bne	1df20 <__mempcpy_chk@plt+0xc940>
   1dee4:	add	r0, sp, #24
   1dee8:	mov	r1, r8
   1deec:	bl	1ac7c <__mempcpy_chk@plt+0x969c>
   1def0:	str	r0, [fp, #-32]	; 0xffffffe0
   1def4:	cmp	r0, #0
   1def8:	bne	1e218 <__mempcpy_chk@plt+0xcc38>
   1defc:	add	r1, sp, #24
   1df00:	ldr	r0, [sp, #20]
   1df04:	ldr	r2, [sp, #16]
   1df08:	ldr	r3, [fp, #16]
   1df0c:	bl	1e39c <__mempcpy_chk@plt+0xcdbc>
   1df10:	str	r0, [fp, #-32]	; 0xffffffe0
   1df14:	cmp	r0, #0
   1df18:	beq	1df88 <__mempcpy_chk@plt+0xc9a8>
   1df1c:	b	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1df20:	ldr	r0, [r5, #100]	; 0x64
   1df24:	ldr	r8, [r0, r6, lsl #2]
   1df28:	cmp	r8, #0
   1df2c:	beq	1df50 <__mempcpy_chk@plt+0xc970>
   1df30:	ldrb	r0, [r8, #52]	; 0x34
   1df34:	tst	r0, #64	; 0x40
   1df38:	bne	1df64 <__mempcpy_chk@plt+0xc984>
   1df3c:	mov	r0, #0
   1df40:	str	r0, [sp, #28]
   1df44:	str	r0, [sp, #24]
   1df48:	str	r0, [sp, #32]
   1df4c:	b	1df7c <__mempcpy_chk@plt+0xc99c>
   1df50:	mov	r8, #0
   1df54:	str	r8, [sp, #28]
   1df58:	str	r8, [sp, #24]
   1df5c:	str	r8, [sp, #32]
   1df60:	b	1dff0 <__mempcpy_chk@plt+0xca10>
   1df64:	add	r1, r8, #4
   1df68:	add	r0, sp, #24
   1df6c:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   1df70:	str	r0, [fp, #-32]	; 0xffffffe0
   1df74:	cmp	r0, #0
   1df78:	bne	1e218 <__mempcpy_chk@plt+0xcc38>
   1df7c:	ldrb	r0, [r8, #52]	; 0x34
   1df80:	tst	r0, #64	; 0x40
   1df84:	beq	1dff0 <__mempcpy_chk@plt+0xca10>
   1df88:	ldr	r0, [sp, #28]
   1df8c:	cmp	r0, #0
   1df90:	beq	1dfbc <__mempcpy_chk@plt+0xc9dc>
   1df94:	ldr	r0, [fp, #16]
   1df98:	str	r0, [sp]
   1df9c:	add	r1, sp, #24
   1dfa0:	mov	r0, r5
   1dfa4:	mov	r2, r6
   1dfa8:	ldr	r3, [sp, #16]
   1dfac:	bl	1e494 <__mempcpy_chk@plt+0xceb4>
   1dfb0:	str	r0, [fp, #-32]	; 0xffffffe0
   1dfb4:	cmp	r0, #0
   1dfb8:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1dfbc:	sub	r0, fp, #32
   1dfc0:	add	r2, sp, #24
   1dfc4:	ldr	r1, [sp, #20]
   1dfc8:	mov	r3, r9
   1dfcc:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1dfd0:	mov	r8, r0
   1dfd4:	cmp	r0, #0
   1dfd8:	bne	1dfe8 <__mempcpy_chk@plt+0xca08>
   1dfdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dfe0:	cmp	r0, #0
   1dfe4:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1dfe8:	ldr	r0, [r5, #100]	; 0x64
   1dfec:	str	r8, [r0, r6, lsl #2]
   1dff0:	ldr	r0, [fp, #12]
   1dff4:	cmp	r6, r0
   1dff8:	bge	1e14c <__mempcpy_chk@plt+0xcb6c>
   1dffc:	str	r7, [sp, #4]
   1e000:	add	r7, r6, #1
   1e004:	add	r4, sp, #24
   1e008:	mov	sl, #0
   1e00c:	sub	r6, r7, #1
   1e010:	ldr	r0, [r5, #120]	; 0x78
   1e014:	cmp	sl, r0
   1e018:	bgt	1e148 <__mempcpy_chk@plt+0xcb68>
   1e01c:	mov	r0, #0
   1e020:	str	r0, [sp, #28]
   1e024:	ldr	r0, [r5, #100]	; 0x64
   1e028:	ldr	r0, [r0, r7, lsl #2]
   1e02c:	cmp	r0, #0
   1e030:	beq	1e04c <__mempcpy_chk@plt+0xca6c>
   1e034:	add	r1, r0, #4
   1e038:	mov	r0, r4
   1e03c:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   1e040:	str	r0, [fp, #-32]	; 0xffffffe0
   1e044:	cmp	r0, #0
   1e048:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1e04c:	cmp	r8, #0
   1e050:	beq	1e074 <__mempcpy_chk@plt+0xca94>
   1e054:	add	r2, r8, #16
   1e058:	mov	r0, r5
   1e05c:	mov	r1, r6
   1e060:	mov	r3, r4
   1e064:	bl	1e728 <__mempcpy_chk@plt+0xd148>
   1e068:	str	r0, [fp, #-32]	; 0xffffffe0
   1e06c:	cmp	r0, #0
   1e070:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1e074:	ldr	r0, [sp, #28]
   1e078:	cmp	r0, #0
   1e07c:	beq	1e0dc <__mempcpy_chk@plt+0xcafc>
   1e080:	mov	r8, r6
   1e084:	mov	r9, r5
   1e088:	ldr	r0, [sp, #20]
   1e08c:	mov	r1, r4
   1e090:	ldr	r6, [sp, #16]
   1e094:	mov	r2, r6
   1e098:	ldr	r5, [fp, #16]
   1e09c:	mov	r3, r5
   1e0a0:	bl	1e39c <__mempcpy_chk@plt+0xcdbc>
   1e0a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0a8:	cmp	r0, #0
   1e0ac:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1e0b0:	str	r5, [sp]
   1e0b4:	mov	r5, r9
   1e0b8:	mov	r0, r9
   1e0bc:	mov	r1, r4
   1e0c0:	mov	r2, r7
   1e0c4:	mov	r3, r6
   1e0c8:	bl	1e494 <__mempcpy_chk@plt+0xceb4>
   1e0cc:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0d0:	cmp	r0, #0
   1e0d4:	mov	r6, r8
   1e0d8:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1e0dc:	ldr	r2, [r5, #88]	; 0x58
   1e0e0:	mov	r0, r5
   1e0e4:	mov	r1, r6
   1e0e8:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1e0ec:	mov	r3, r0
   1e0f0:	sub	r0, fp, #32
   1e0f4:	ldr	r1, [sp, #20]
   1e0f8:	mov	r2, r4
   1e0fc:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1e100:	mov	r8, r0
   1e104:	cmp	r0, #0
   1e108:	bne	1e118 <__mempcpy_chk@plt+0xcb38>
   1e10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e110:	cmp	r0, #0
   1e114:	bne	1e1a8 <__mempcpy_chk@plt+0xcbc8>
   1e118:	ldr	r0, [r5, #100]	; 0x64
   1e11c:	str	r8, [r0, r7, lsl #2]
   1e120:	cmp	r8, #0
   1e124:	mov	r1, #0
   1e128:	addeq	r1, sl, #1
   1e12c:	add	r0, r7, #1
   1e130:	ldr	r2, [fp, #12]
   1e134:	cmp	r7, r2
   1e138:	mov	r7, r0
   1e13c:	mov	sl, r1
   1e140:	blt	1e00c <__mempcpy_chk@plt+0xca2c>
   1e144:	sub	r6, r0, #1
   1e148:	ldr	r7, [sp, #4]
   1e14c:	ldr	r0, [sp, #32]
   1e150:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e154:	ldr	r0, [r5, #100]	; 0x64
   1e158:	ldr	r1, [fp, #12]
   1e15c:	ldr	r0, [r0, r1, lsl #2]
   1e160:	str	r6, [r7]
   1e164:	ldr	r1, [sp, #12]
   1e168:	str	r1, [r5, #40]	; 0x28
   1e16c:	ldr	r1, [sp, #8]
   1e170:	str	r1, [r5, #100]	; 0x64
   1e174:	cmp	r0, #0
   1e178:	beq	1e198 <__mempcpy_chk@plt+0xcbb8>
   1e17c:	ldr	r1, [fp, #8]
   1e180:	add	r0, r0, #4
   1e184:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1e188:	mov	r4, #0
   1e18c:	cmp	r0, #0
   1e190:	moveq	r4, #1
   1e194:	b	1e19c <__mempcpy_chk@plt+0xcbbc>
   1e198:	mov	r4, #1
   1e19c:	mov	r0, r4
   1e1a0:	sub	sp, fp, #28
   1e1a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1a8:	ldr	r0, [sp, #32]
   1e1ac:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e1b0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1e1b4:	b	1e19c <__mempcpy_chk@plt+0xcbbc>
   1e1b8:	str	r4, [sp, #12]
   1e1bc:	mvn	r1, #-2147483648	; 0x80000000
   1e1c0:	sub	r1, r1, r5
   1e1c4:	mov	r4, #12
   1e1c8:	cmp	r1, r0
   1e1cc:	ble	1e19c <__mempcpy_chk@plt+0xcbbc>
   1e1d0:	add	r6, r0, #1
   1e1d4:	add	r1, r6, r5
   1e1d8:	cmn	r1, #-1073741823	; 0xc0000001
   1e1dc:	bhi	1e19c <__mempcpy_chk@plt+0xcbbc>
   1e1e0:	ldr	r0, [r7, #8]
   1e1e4:	mov	r9, r1
   1e1e8:	lsl	r1, r1, #2
   1e1ec:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1e1f0:	cmp	r0, #0
   1e1f4:	beq	1e19c <__mempcpy_chk@plt+0xcbbc>
   1e1f8:	str	r9, [r7, #4]
   1e1fc:	str	r0, [r7, #8]
   1e200:	add	r0, r0, r5, lsl #2
   1e204:	lsl	r2, r6, #2
   1e208:	mov	r1, #0
   1e20c:	bl	114fc <memset@plt>
   1e210:	ldr	r4, [sp, #12]
   1e214:	b	1de9c <__mempcpy_chk@plt+0xc8bc>
   1e218:	mov	r4, r0
   1e21c:	b	1e19c <__mempcpy_chk@plt+0xcbbc>
   1e220:	push	{r4, r5, r6, r7, fp, lr}
   1e224:	add	fp, sp, #16
   1e228:	mov	r5, r2
   1e22c:	mov	r6, r1
   1e230:	mov	r4, r0
   1e234:	ldr	r0, [r0, #12]
   1e238:	ldr	r1, [r4, #16]
   1e23c:	cmp	r1, r0
   1e240:	beq	1e274 <__mempcpy_chk@plt+0xcc94>
   1e244:	mov	r0, #1
   1e248:	mov	r1, #20
   1e24c:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1e250:	cmp	r0, #0
   1e254:	ldrne	r1, [r4, #16]
   1e258:	ldrne	r2, [r4, #20]
   1e25c:	strne	r0, [r2, r1, lsl #2]
   1e260:	strne	r6, [r0]
   1e264:	strne	r5, [r0, #4]
   1e268:	addne	r1, r1, #1
   1e26c:	strne	r1, [r4, #16]
   1e270:	pop	{r4, r5, r6, r7, fp, pc}
   1e274:	mov	r1, #1
   1e278:	orr	r7, r1, r0, lsl #1
   1e27c:	lsl	r1, r7, #2
   1e280:	ldr	r0, [r4, #20]
   1e284:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1e288:	cmp	r0, #0
   1e28c:	moveq	r0, #0
   1e290:	popeq	{r4, r5, r6, r7, fp, pc}
   1e294:	str	r7, [r4, #12]
   1e298:	str	r0, [r4, #20]
   1e29c:	b	1e244 <__mempcpy_chk@plt+0xcc64>
   1e2a0:	push	{r4, r5, r6, r7, fp, lr}
   1e2a4:	add	fp, sp, #16
   1e2a8:	mov	r5, r3
   1e2ac:	mov	r6, r2
   1e2b0:	mov	r7, r1
   1e2b4:	mov	r4, r0
   1e2b8:	ldr	r1, [r0, #108]	; 0x6c
   1e2bc:	ldr	r2, [r0, #112]	; 0x70
   1e2c0:	cmp	r1, r2
   1e2c4:	blt	1e314 <__mempcpy_chk@plt+0xcd34>
   1e2c8:	ldr	r0, [r4, #116]	; 0x74
   1e2cc:	add	r1, r2, r2, lsl #1
   1e2d0:	lsl	r1, r1, #4
   1e2d4:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   1e2d8:	cmp	r0, #0
   1e2dc:	beq	1e38c <__mempcpy_chk@plt+0xcdac>
   1e2e0:	str	r0, [r4, #116]	; 0x74
   1e2e4:	ldr	r1, [r4, #108]	; 0x6c
   1e2e8:	ldr	r2, [r4, #112]	; 0x70
   1e2ec:	add	r1, r1, r1, lsl #1
   1e2f0:	add	r0, r0, r1, lsl #3
   1e2f4:	add	r1, r2, r2, lsl #1
   1e2f8:	lsl	r2, r1, #3
   1e2fc:	mov	r1, #0
   1e300:	bl	114fc <memset@plt>
   1e304:	ldr	r1, [r4, #108]	; 0x6c
   1e308:	ldr	r0, [r4, #112]	; 0x70
   1e30c:	lsl	r0, r0, #1
   1e310:	str	r0, [r4, #112]	; 0x70
   1e314:	ldr	r2, [fp, #8]
   1e318:	cmp	r1, #1
   1e31c:	blt	1e340 <__mempcpy_chk@plt+0xcd60>
   1e320:	ldr	r0, [r4, #116]	; 0x74
   1e324:	sub	r3, r1, #1
   1e328:	add	r3, r3, r3, lsl #1
   1e32c:	add	r0, r0, r3, lsl #3
   1e330:	ldr	r3, [r0, #4]
   1e334:	cmp	r3, r6
   1e338:	moveq	r3, #1
   1e33c:	strbeq	r3, [r0, #20]
   1e340:	ldr	r3, [r4, #116]	; 0x74
   1e344:	add	r0, r1, r1, lsl #1
   1e348:	str	r7, [r3, r0, lsl #3]!
   1e34c:	mov	r0, #0
   1e350:	cmp	r2, r5
   1e354:	mov	r7, #0
   1e358:	mvneq	r7, #0
   1e35c:	str	r6, [r3, #4]
   1e360:	str	r5, [r3, #8]
   1e364:	str	r2, [r3, #12]
   1e368:	str	r7, [r3, #16]
   1e36c:	add	r1, r1, #1
   1e370:	str	r1, [r4, #108]	; 0x6c
   1e374:	strb	r0, [r3, #20]
   1e378:	sub	r1, r2, r5
   1e37c:	ldr	r2, [r4, #120]	; 0x78
   1e380:	cmp	r2, r1
   1e384:	strlt	r1, [r4, #120]	; 0x78
   1e388:	pop	{r4, r5, r6, r7, fp, pc}
   1e38c:	ldr	r0, [r4, #116]	; 0x74
   1e390:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e394:	mov	r0, #12
   1e398:	pop	{r4, r5, r6, r7, fp, pc}
   1e39c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3a0:	add	fp, sp, #28
   1e3a4:	sub	sp, sp, #20
   1e3a8:	mov	r9, r3
   1e3ac:	mov	sl, r2
   1e3b0:	mov	r4, r1
   1e3b4:	mov	r7, r0
   1e3b8:	ldr	r1, [r1, #4]
   1e3bc:	add	r0, sp, #8
   1e3c0:	bl	1aed4 <__mempcpy_chk@plt+0x98f4>
   1e3c4:	cmp	r0, #0
   1e3c8:	bne	1e48c <__mempcpy_chk@plt+0xceac>
   1e3cc:	ldr	r0, [r4, #4]
   1e3d0:	cmp	r0, #1
   1e3d4:	blt	1e454 <__mempcpy_chk@plt+0xce74>
   1e3d8:	mov	r8, #0
   1e3dc:	ldr	r0, [r4, #8]
   1e3e0:	ldr	r5, [r0, r8, lsl #2]
   1e3e4:	add	r0, r5, r5, lsl #1
   1e3e8:	ldr	r1, [r7, #24]
   1e3ec:	add	r6, r1, r0, lsl #2
   1e3f0:	mov	r0, r7
   1e3f4:	mov	r1, r6
   1e3f8:	mov	r2, sl
   1e3fc:	mov	r3, r9
   1e400:	bl	1ddf8 <__mempcpy_chk@plt+0xc818>
   1e404:	cmn	r0, #1
   1e408:	beq	1e430 <__mempcpy_chk@plt+0xce50>
   1e40c:	str	r9, [sp]
   1e410:	mov	r0, r7
   1e414:	add	r1, sp, #8
   1e418:	mov	r2, r5
   1e41c:	mov	r3, sl
   1e420:	bl	1e8e4 <__mempcpy_chk@plt+0xd304>
   1e424:	cmp	r0, #0
   1e428:	beq	1e444 <__mempcpy_chk@plt+0xce64>
   1e42c:	b	1e47c <__mempcpy_chk@plt+0xce9c>
   1e430:	add	r0, sp, #8
   1e434:	mov	r1, r6
   1e438:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   1e43c:	cmp	r0, #0
   1e440:	bne	1e47c <__mempcpy_chk@plt+0xce9c>
   1e444:	ldr	r0, [r4, #4]
   1e448:	add	r8, r8, #1
   1e44c:	cmp	r8, r0
   1e450:	blt	1e3dc <__mempcpy_chk@plt+0xcdfc>
   1e454:	ldr	r0, [r4, #8]
   1e458:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e45c:	vldr	d16, [sp, #8]
   1e460:	ldr	r0, [sp, #16]
   1e464:	str	r0, [r4, #8]
   1e468:	vstr	d16, [r4]
   1e46c:	mov	r5, #0
   1e470:	mov	r0, r5
   1e474:	sub	sp, fp, #28
   1e478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e47c:	mov	r5, r0
   1e480:	ldr	r0, [sp, #16]
   1e484:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e488:	b	1e470 <__mempcpy_chk@plt+0xce90>
   1e48c:	mov	r5, r0
   1e490:	b	1e470 <__mempcpy_chk@plt+0xce90>
   1e494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e498:	add	fp, sp, #28
   1e49c:	sub	sp, sp, #44	; 0x2c
   1e4a0:	str	r3, [sp, #8]
   1e4a4:	mov	r6, r2
   1e4a8:	mov	r7, r1
   1e4ac:	ldr	r8, [r0, #84]	; 0x54
   1e4b0:	str	r0, [sp, #20]
   1e4b4:	mov	r1, r2
   1e4b8:	bl	1dc40 <__mempcpy_chk@plt+0xc660>
   1e4bc:	mov	r1, #0
   1e4c0:	cmn	r0, #1
   1e4c4:	beq	1e71c <__mempcpy_chk@plt+0xd13c>
   1e4c8:	add	r1, r0, r0, lsl #1
   1e4cc:	add	sl, sp, #28
   1e4d0:	str	r8, [sp, #12]
   1e4d4:	str	r7, [sp, #24]
   1e4d8:	str	r1, [sp, #4]
   1e4dc:	b	1e4e4 <__mempcpy_chk@plt+0xcf04>
   1e4e0:	ldr	r1, [sp, #4]
   1e4e4:	ldr	r0, [sp, #20]
   1e4e8:	ldr	r0, [r0, #116]	; 0x74
   1e4ec:	add	r0, r0, r1, lsl #3
   1e4f0:	add	r0, r0, #12
   1e4f4:	mov	r9, r0
   1e4f8:	ldr	r1, [r0, #-12]
   1e4fc:	mov	r0, r7
   1e500:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1e504:	cmp	r0, #0
   1e508:	beq	1e6cc <__mempcpy_chk@plt+0xd0ec>
   1e50c:	ldmda	r9, {r0, r1}
   1e510:	add	r1, r1, r6
   1e514:	sub	r5, r1, r0
   1e518:	cmp	r5, r6
   1e51c:	bne	1e5bc <__mempcpy_chk@plt+0xcfdc>
   1e520:	mov	r5, r6
   1e524:	ldr	r0, [r8, #20]
   1e528:	ldr	r1, [r9, #-12]
   1e52c:	add	r1, r1, r1, lsl #1
   1e530:	add	r0, r0, r1, lsl #2
   1e534:	ldr	r0, [r0, #8]
   1e538:	ldr	r4, [r0]
   1e53c:	mov	r0, r7
   1e540:	mov	r1, r4
   1e544:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1e548:	mov	r1, #4
   1e54c:	cmp	r0, #0
   1e550:	bne	1e5ac <__mempcpy_chk@plt+0xcfcc>
   1e554:	mov	r6, r8
   1e558:	mov	r0, sl
   1e55c:	mov	r1, r4
   1e560:	bl	1ac7c <__mempcpy_chk@plt+0x969c>
   1e564:	mov	r8, r0
   1e568:	str	r0, [fp, #-32]	; 0xffffffe0
   1e56c:	mov	r0, r6
   1e570:	mov	r1, sl
   1e574:	ldr	r2, [sp, #8]
   1e578:	ldr	r3, [fp, #8]
   1e57c:	bl	1e39c <__mempcpy_chk@plt+0xcdbc>
   1e580:	mov	r6, r0
   1e584:	mov	r0, r7
   1e588:	mov	r1, sl
   1e58c:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   1e590:	mov	r4, r0
   1e594:	ldr	r0, [sp, #36]	; 0x24
   1e598:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e59c:	orr	r0, r6, r8
   1e5a0:	orrs	r0, r0, r4
   1e5a4:	mov	r1, #2
   1e5a8:	bne	1e6e0 <__mempcpy_chk@plt+0xd100>
   1e5ac:	ldr	r8, [sp, #12]
   1e5b0:	mov	r6, r5
   1e5b4:	add	sl, sp, #28
   1e5b8:	b	1e6bc <__mempcpy_chk@plt+0xd0dc>
   1e5bc:	ldr	r0, [sp, #20]
   1e5c0:	ldr	r0, [r0, #100]	; 0x64
   1e5c4:	ldr	r0, [r0, r5, lsl #2]
   1e5c8:	ldr	r1, [r9, #-12]
   1e5cc:	ldr	r2, [r8, #12]
   1e5d0:	ldr	r7, [r2, r1, lsl #2]
   1e5d4:	cmp	r0, #0
   1e5d8:	beq	1e64c <__mempcpy_chk@plt+0xd06c>
   1e5dc:	add	r4, r0, #4
   1e5e0:	mov	r0, r4
   1e5e4:	mov	r1, r7
   1e5e8:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1e5ec:	mov	r1, #4
   1e5f0:	add	sl, sp, #28
   1e5f4:	cmp	r0, #0
   1e5f8:	bne	1e6bc <__mempcpy_chk@plt+0xd0dc>
   1e5fc:	mov	r0, sl
   1e600:	mov	r1, r4
   1e604:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   1e608:	mov	r4, r0
   1e60c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e610:	mov	r0, sl
   1e614:	mov	r1, r7
   1e618:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1e61c:	cmp	r4, #0
   1e620:	bne	1e62c <__mempcpy_chk@plt+0xd04c>
   1e624:	cmp	r0, #0
   1e628:	bne	1e668 <__mempcpy_chk@plt+0xd088>
   1e62c:	ldr	r0, [sp, #36]	; 0x24
   1e630:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e634:	cmp	r4, #0
   1e638:	movweq	r4, #12
   1e63c:	str	r4, [fp, #-32]	; 0xffffffe0
   1e640:	mov	r1, #1
   1e644:	str	r4, [sp, #16]
   1e648:	b	1e6bc <__mempcpy_chk@plt+0xd0dc>
   1e64c:	add	sl, sp, #28
   1e650:	mov	r0, sl
   1e654:	mov	r1, r7
   1e658:	bl	1ac7c <__mempcpy_chk@plt+0x969c>
   1e65c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e660:	cmp	r0, #0
   1e664:	bne	1e700 <__mempcpy_chk@plt+0xd120>
   1e668:	sub	r0, fp, #32
   1e66c:	mov	r1, r8
   1e670:	mov	r2, sl
   1e674:	bl	1e9ec <__mempcpy_chk@plt+0xd40c>
   1e678:	ldr	r4, [sp, #20]
   1e67c:	ldr	r1, [r4, #100]	; 0x64
   1e680:	str	r0, [r1, r5, lsl #2]
   1e684:	ldr	r0, [sp, #36]	; 0x24
   1e688:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e68c:	ldr	r0, [r4, #100]	; 0x64
   1e690:	ldr	r0, [r0, r5, lsl #2]
   1e694:	clz	r0, r0
   1e698:	lsr	r0, r0, #5
   1e69c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e6a0:	cmp	r2, #0
   1e6a4:	mov	r1, r2
   1e6a8:	movwne	r1, #1
   1e6ac:	ands	r1, r0, r1
   1e6b0:	ldr	r0, [sp, #16]
   1e6b4:	movne	r0, r2
   1e6b8:	str	r0, [sp, #16]
   1e6bc:	ldr	r7, [sp, #24]
   1e6c0:	cmp	r1, #0
   1e6c4:	cmpne	r1, #4
   1e6c8:	bne	1e708 <__mempcpy_chk@plt+0xd128>
   1e6cc:	add	r0, r9, #24
   1e6d0:	ldrb	r1, [r9, #8]
   1e6d4:	cmp	r1, #0
   1e6d8:	bne	1e4f4 <__mempcpy_chk@plt+0xcf14>
   1e6dc:	b	1e718 <__mempcpy_chk@plt+0xd138>
   1e6e0:	cmp	r6, #0
   1e6e4:	movne	r4, r6
   1e6e8:	cmp	r8, #0
   1e6ec:	movne	r4, r8
   1e6f0:	str	r4, [fp, #-32]	; 0xffffffe0
   1e6f4:	mov	r1, #1
   1e6f8:	str	r4, [sp, #16]
   1e6fc:	b	1e5ac <__mempcpy_chk@plt+0xcfcc>
   1e700:	mov	r1, #1
   1e704:	b	1e6b8 <__mempcpy_chk@plt+0xd0d8>
   1e708:	cmp	r1, #2
   1e70c:	beq	1e4e0 <__mempcpy_chk@plt+0xcf00>
   1e710:	ldr	r1, [sp, #16]
   1e714:	b	1e71c <__mempcpy_chk@plt+0xd13c>
   1e718:	mov	r1, #0
   1e71c:	mov	r0, r1
   1e720:	sub	sp, fp, #28
   1e724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e72c:	add	fp, sp, #28
   1e730:	sub	sp, sp, #36	; 0x24
   1e734:	str	r0, [sp, #12]
   1e738:	ldr	r5, [r0, #84]	; 0x54
   1e73c:	mov	r0, #0
   1e740:	str	r0, [sp, #32]
   1e744:	str	r0, [sp, #20]
   1e748:	str	r0, [sp, #16]
   1e74c:	str	r0, [sp, #24]
   1e750:	ldr	r0, [r2, #4]
   1e754:	cmp	r0, #1
   1e758:	blt	1e8a4 <__mempcpy_chk@plt+0xd2c4>
   1e75c:	mov	sl, r3
   1e760:	mov	r4, r2
   1e764:	mov	r6, r1
   1e768:	mov	r7, #0
   1e76c:	str	r1, [sp, #8]
   1e770:	str	r2, [sp, #4]
   1e774:	str	r3, [sp]
   1e778:	ldr	r0, [r4, #8]
   1e77c:	ldr	r8, [r0, r7, lsl #2]
   1e780:	ldr	r0, [r5]
   1e784:	add	r0, r0, r8, lsl #3
   1e788:	ldrb	r0, [r0, #6]
   1e78c:	tst	r0, #16
   1e790:	bne	1e7b4 <__mempcpy_chk@plt+0xd1d4>
   1e794:	ldr	r0, [r5]
   1e798:	add	r1, r0, r8, lsl #3
   1e79c:	ldr	r0, [sp, #12]
   1e7a0:	mov	r2, r6
   1e7a4:	bl	1eec4 <__mempcpy_chk@plt+0xd8e4>
   1e7a8:	cmp	r0, #0
   1e7ac:	bne	1e87c <__mempcpy_chk@plt+0xd29c>
   1e7b0:	b	1e894 <__mempcpy_chk@plt+0xd2b4>
   1e7b4:	mov	r0, r5
   1e7b8:	mov	r1, r8
   1e7bc:	ldr	r9, [sp, #12]
   1e7c0:	mov	r2, r9
   1e7c4:	mov	r3, r6
   1e7c8:	bl	1ebf0 <__mempcpy_chk@plt+0xd610>
   1e7cc:	cmp	r0, #2
   1e7d0:	blt	1e874 <__mempcpy_chk@plt+0xd294>
   1e7d4:	add	r4, r0, r6
   1e7d8:	ldr	r0, [r9, #100]	; 0x64
   1e7dc:	ldr	r0, [r0, r4, lsl #2]
   1e7e0:	ldr	r1, [r5, #12]
   1e7e4:	ldr	r2, [r1, r8, lsl #2]
   1e7e8:	mov	r1, #0
   1e7ec:	str	r1, [sp, #20]
   1e7f0:	cmp	r0, #0
   1e7f4:	mov	sl, r9
   1e7f8:	add	r6, sp, #16
   1e7fc:	beq	1e820 <__mempcpy_chk@plt+0xd240>
   1e800:	add	r1, r0, #4
   1e804:	mov	r0, r6
   1e808:	mov	r9, r2
   1e80c:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   1e810:	mov	r2, r9
   1e814:	str	r0, [sp, #32]
   1e818:	cmp	r0, #0
   1e81c:	bne	1e8cc <__mempcpy_chk@plt+0xd2ec>
   1e820:	mov	r0, r6
   1e824:	mov	r1, r2
   1e828:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1e82c:	cmp	r0, #0
   1e830:	beq	1e8b8 <__mempcpy_chk@plt+0xd2d8>
   1e834:	mov	r2, r6
   1e838:	add	r0, sp, #32
   1e83c:	mov	r1, r5
   1e840:	bl	1e9ec <__mempcpy_chk@plt+0xd40c>
   1e844:	ldr	r1, [sl, #100]	; 0x64
   1e848:	str	r0, [r1, r4, lsl #2]
   1e84c:	ldr	r0, [sl, #100]	; 0x64
   1e850:	ldr	r0, [r0, r4, lsl #2]
   1e854:	cmp	r0, #0
   1e858:	ldr	sl, [sp]
   1e85c:	ldmib	sp, {r4, r6}
   1e860:	bne	1e87c <__mempcpy_chk@plt+0xd29c>
   1e864:	ldr	r9, [sp, #32]
   1e868:	cmp	r9, #0
   1e86c:	beq	1e87c <__mempcpy_chk@plt+0xd29c>
   1e870:	b	1e8d0 <__mempcpy_chk@plt+0xd2f0>
   1e874:	cmp	r0, #0
   1e878:	beq	1e794 <__mempcpy_chk@plt+0xd1b4>
   1e87c:	ldr	r0, [r5, #12]
   1e880:	ldr	r1, [r0, r8, lsl #2]
   1e884:	mov	r0, sl
   1e888:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1e88c:	cmp	r0, #0
   1e890:	beq	1e8b8 <__mempcpy_chk@plt+0xd2d8>
   1e894:	ldr	r0, [r4, #4]
   1e898:	add	r7, r7, #1
   1e89c:	cmp	r7, r0
   1e8a0:	blt	1e778 <__mempcpy_chk@plt+0xd198>
   1e8a4:	ldr	r0, [sp, #24]
   1e8a8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e8ac:	mov	r0, #0
   1e8b0:	sub	sp, fp, #28
   1e8b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8b8:	ldr	r0, [sp, #24]
   1e8bc:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e8c0:	mov	r0, #12
   1e8c4:	sub	sp, fp, #28
   1e8c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8cc:	mov	r9, r0
   1e8d0:	ldr	r0, [sp, #24]
   1e8d4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1e8d8:	mov	r0, r9
   1e8dc:	sub	sp, fp, #28
   1e8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e8e8:	add	fp, sp, #24
   1e8ec:	sub	sp, sp, #8
   1e8f0:	mov	r5, r3
   1e8f4:	mov	r7, r2
   1e8f8:	mov	r4, r1
   1e8fc:	mov	r6, r0
   1e900:	mov	r0, r1
   1e904:	mov	r1, r2
   1e908:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1e90c:	cmp	r0, #0
   1e910:	beq	1e920 <__mempcpy_chk@plt+0xd340>
   1e914:	mov	r0, #0
   1e918:	sub	sp, fp, #24
   1e91c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e920:	ldr	r8, [fp, #8]
   1e924:	ldr	r0, [r6]
   1e928:	add	r1, r0, r7, lsl #3
   1e92c:	ldrb	r1, [r1, #4]
   1e930:	cmp	r1, r8
   1e934:	ldreq	r0, [r0, r7, lsl #3]
   1e938:	cmpeq	r0, r5
   1e93c:	beq	1e9c4 <__mempcpy_chk@plt+0xd3e4>
   1e940:	mov	r0, r4
   1e944:	mov	r1, r7
   1e948:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1e94c:	cmp	r0, #0
   1e950:	beq	1e9e0 <__mempcpy_chk@plt+0xd400>
   1e954:	ldr	r0, [r6, #20]
   1e958:	add	r7, r7, r7, lsl #1
   1e95c:	add	r0, r0, r7, lsl #2
   1e960:	ldr	r1, [r0, #4]
   1e964:	cmp	r1, #2
   1e968:	beq	1e978 <__mempcpy_chk@plt+0xd398>
   1e96c:	cmp	r1, #0
   1e970:	bne	1e99c <__mempcpy_chk@plt+0xd3bc>
   1e974:	b	1e914 <__mempcpy_chk@plt+0xd334>
   1e978:	ldr	r0, [r0, #8]
   1e97c:	ldr	r2, [r0, #4]
   1e980:	str	r8, [sp]
   1e984:	mov	r0, r6
   1e988:	mov	r1, r4
   1e98c:	mov	r3, r5
   1e990:	bl	1e8e4 <__mempcpy_chk@plt+0xd304>
   1e994:	cmp	r0, #0
   1e998:	bne	1e918 <__mempcpy_chk@plt+0xd338>
   1e99c:	ldr	r0, [r6, #20]
   1e9a0:	add	r0, r0, r7, lsl #2
   1e9a4:	ldr	r0, [r0, #8]
   1e9a8:	ldr	r7, [r0]
   1e9ac:	mov	r0, r4
   1e9b0:	mov	r1, r7
   1e9b4:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   1e9b8:	cmp	r0, #0
   1e9bc:	beq	1e924 <__mempcpy_chk@plt+0xd344>
   1e9c0:	b	1e914 <__mempcpy_chk@plt+0xd334>
   1e9c4:	cmp	r8, #9
   1e9c8:	bne	1e914 <__mempcpy_chk@plt+0xd334>
   1e9cc:	mov	r0, r4
   1e9d0:	mov	r1, r7
   1e9d4:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1e9d8:	cmp	r0, #0
   1e9dc:	bne	1e914 <__mempcpy_chk@plt+0xd334>
   1e9e0:	mov	r0, #12
   1e9e4:	sub	sp, fp, #24
   1e9e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e9ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9f0:	add	fp, sp, #28
   1e9f4:	sub	sp, sp, #4
   1e9f8:	mov	r9, r1
   1e9fc:	ldr	r1, [r2, #4]
   1ea00:	cmp	r1, #0
   1ea04:	beq	1eaa8 <__mempcpy_chk@plt+0xd4c8>
   1ea08:	mov	sl, r2
   1ea0c:	str	r0, [sp]
   1ea10:	mov	r6, #0
   1ea14:	mov	r0, r2
   1ea18:	mov	r1, #0
   1ea1c:	bl	1b770 <__mempcpy_chk@plt+0xa190>
   1ea20:	mov	r7, r0
   1ea24:	ldr	r0, [r9, #32]
   1ea28:	ldr	r1, [r9, #68]	; 0x44
   1ea2c:	and	r1, r1, r7
   1ea30:	add	r1, r1, r1, lsl #1
   1ea34:	mov	r5, r0
   1ea38:	ldr	r2, [r5, r1, lsl #2]!
   1ea3c:	cmp	r2, #1
   1ea40:	blt	1ea80 <__mempcpy_chk@plt+0xd4a0>
   1ea44:	add	r0, r0, r1, lsl #2
   1ea48:	ldr	r8, [r0, #8]
   1ea4c:	ldr	r4, [r8, r6, lsl #2]
   1ea50:	ldr	r0, [r4]
   1ea54:	cmp	r7, r0
   1ea58:	bne	1ea70 <__mempcpy_chk@plt+0xd490>
   1ea5c:	add	r0, r4, #4
   1ea60:	mov	r1, sl
   1ea64:	bl	1b79c <__mempcpy_chk@plt+0xa1bc>
   1ea68:	cmp	r0, #0
   1ea6c:	bne	1ea9c <__mempcpy_chk@plt+0xd4bc>
   1ea70:	ldr	r0, [r5]
   1ea74:	add	r6, r6, #1
   1ea78:	cmp	r6, r0
   1ea7c:	blt	1ea4c <__mempcpy_chk@plt+0xd46c>
   1ea80:	mov	r0, r9
   1ea84:	mov	r1, sl
   1ea88:	mov	r2, r7
   1ea8c:	bl	1eac8 <__mempcpy_chk@plt+0xd4e8>
   1ea90:	mov	r4, r0
   1ea94:	cmp	r0, #0
   1ea98:	beq	1eab4 <__mempcpy_chk@plt+0xd4d4>
   1ea9c:	mov	r0, r4
   1eaa0:	sub	sp, fp, #28
   1eaa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eaa8:	mov	r4, #0
   1eaac:	str	r4, [r0]
   1eab0:	b	1ea9c <__mempcpy_chk@plt+0xd4bc>
   1eab4:	mov	r0, #12
   1eab8:	ldr	r1, [sp]
   1eabc:	str	r0, [r1]
   1eac0:	mov	r4, #0
   1eac4:	b	1ea9c <__mempcpy_chk@plt+0xd4bc>
   1eac8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1eacc:	add	fp, sp, #24
   1ead0:	mov	r8, r2
   1ead4:	mov	r7, r1
   1ead8:	mov	r9, r0
   1eadc:	mov	r0, #56	; 0x38
   1eae0:	mov	r1, #1
   1eae4:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1eae8:	cmp	r0, #0
   1eaec:	beq	1ebe4 <__mempcpy_chk@plt+0xd604>
   1eaf0:	mov	r4, r0
   1eaf4:	add	r5, r0, #4
   1eaf8:	mov	r0, r5
   1eafc:	mov	r1, r7
   1eb00:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   1eb04:	cmp	r0, #0
   1eb08:	bne	1ebd0 <__mempcpy_chk@plt+0xd5f0>
   1eb0c:	str	r5, [r4, #40]	; 0x28
   1eb10:	ldr	r0, [r7, #4]
   1eb14:	cmp	r0, #1
   1eb18:	blt	1ebb0 <__mempcpy_chk@plt+0xd5d0>
   1eb1c:	mov	r0, #0
   1eb20:	movw	ip, #65280	; 0xff00
   1eb24:	movt	ip, #3
   1eb28:	add	r2, ip, #255	; 0xff
   1eb2c:	mov	lr, #32
   1eb30:	ldr	r1, [r7, #8]
   1eb34:	ldr	r1, [r1, r0, lsl #2]
   1eb38:	ldr	r3, [r9]
   1eb3c:	add	r5, r3, r1, lsl #3
   1eb40:	ldr	r3, [r5, #4]!
   1eb44:	and	r1, r3, r2
   1eb48:	cmp	r1, #1
   1eb4c:	beq	1eba0 <__mempcpy_chk@plt+0xd5c0>
   1eb50:	and	r1, lr, r3, lsr #15
   1eb54:	ldrb	r6, [r4, #52]	; 0x34
   1eb58:	orr	r1, r6, r1
   1eb5c:	strb	r1, [r4, #52]	; 0x34
   1eb60:	uxtb	r3, r3
   1eb64:	cmp	r3, #12
   1eb68:	beq	1eb98 <__mempcpy_chk@plt+0xd5b8>
   1eb6c:	cmp	r3, #4
   1eb70:	beq	1eb84 <__mempcpy_chk@plt+0xd5a4>
   1eb74:	cmp	r3, #2
   1eb78:	bne	1eb8c <__mempcpy_chk@plt+0xd5ac>
   1eb7c:	orr	r1, r1, #16
   1eb80:	b	1eb9c <__mempcpy_chk@plt+0xd5bc>
   1eb84:	orr	r1, r1, #64	; 0x40
   1eb88:	b	1eb9c <__mempcpy_chk@plt+0xd5bc>
   1eb8c:	ldr	r3, [r5]
   1eb90:	tst	r3, ip
   1eb94:	beq	1eba0 <__mempcpy_chk@plt+0xd5c0>
   1eb98:	orr	r1, r1, #128	; 0x80
   1eb9c:	strb	r1, [r4, #52]	; 0x34
   1eba0:	ldr	r1, [r7, #4]
   1eba4:	add	r0, r0, #1
   1eba8:	cmp	r0, r1
   1ebac:	blt	1eb30 <__mempcpy_chk@plt+0xd550>
   1ebb0:	mov	r0, r9
   1ebb4:	mov	r1, r4
   1ebb8:	mov	r2, r8
   1ebbc:	bl	1ba50 <__mempcpy_chk@plt+0xa470>
   1ebc0:	cmp	r0, #0
   1ebc4:	bne	1ebdc <__mempcpy_chk@plt+0xd5fc>
   1ebc8:	mov	r0, r4
   1ebcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ebd0:	mov	r0, r4
   1ebd4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1ebd8:	b	1ebe4 <__mempcpy_chk@plt+0xd604>
   1ebdc:	mov	r0, r4
   1ebe0:	bl	15fac <__mempcpy_chk@plt+0x49cc>
   1ebe4:	mov	r4, #0
   1ebe8:	mov	r0, r4
   1ebec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ebf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ebf4:	add	fp, sp, #28
   1ebf8:	sub	sp, sp, #4
   1ebfc:	mov	sl, r3
   1ec00:	mov	r7, r2
   1ec04:	mov	r5, r0
   1ec08:	ldr	r6, [r0]
   1ec0c:	add	r0, r6, r1, lsl #3
   1ec10:	ldrb	r8, [r0, #4]
   1ec14:	cmp	r8, #7
   1ec18:	beq	1edb8 <__mempcpy_chk@plt+0xd7d8>
   1ec1c:	mov	r4, r1
   1ec20:	mov	r0, r7
   1ec24:	mov	r1, sl
   1ec28:	bl	1a018 <__mempcpy_chk@plt+0x8a38>
   1ec2c:	mov	r9, r0
   1ec30:	mov	r2, #0
   1ec34:	cmp	r8, #5
   1ec38:	bne	1ec7c <__mempcpy_chk@plt+0xd69c>
   1ec3c:	cmp	r9, #2
   1ec40:	blt	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ec44:	ldr	r0, [r5, #128]	; 0x80
   1ec48:	tst	r0, #64	; 0x40
   1ec4c:	bne	1ec60 <__mempcpy_chk@plt+0xd680>
   1ec50:	ldr	r1, [r7, #4]
   1ec54:	ldrb	r1, [r1, sl]
   1ec58:	cmp	r1, #10
   1ec5c:	beq	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ec60:	tst	r0, #128	; 0x80
   1ec64:	beq	1eda0 <__mempcpy_chk@plt+0xd7c0>
   1ec68:	ldr	r0, [r7, #4]
   1ec6c:	ldrb	r0, [r0, sl]
   1ec70:	cmp	r0, #0
   1ec74:	movne	r2, r9
   1ec78:	b	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ec7c:	cmp	r8, #6
   1ec80:	bne	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ec84:	cmp	r9, #2
   1ec88:	blt	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ec8c:	ldr	r4, [r6, r4, lsl #3]
   1ec90:	ldr	r0, [r4, #32]
   1ec94:	cmp	r0, #0
   1ec98:	bne	1ecb4 <__mempcpy_chk@plt+0xd6d4>
   1ec9c:	ldr	r0, [r4, #36]	; 0x24
   1eca0:	cmp	r0, #0
   1eca4:	bne	1ecb4 <__mempcpy_chk@plt+0xd6d4>
   1eca8:	ldr	r0, [r4, #20]
   1ecac:	cmp	r0, #0
   1ecb0:	beq	1edb0 <__mempcpy_chk@plt+0xd7d0>
   1ecb4:	mov	r0, r7
   1ecb8:	mov	r1, sl
   1ecbc:	bl	17d8c <__mempcpy_chk@plt+0x67ac>
   1ecc0:	mov	r6, r0
   1ecc4:	ldr	r0, [r4, #20]
   1ecc8:	cmp	r0, #1
   1eccc:	blt	1ecf4 <__mempcpy_chk@plt+0xd714>
   1ecd0:	ldr	r0, [r4]
   1ecd4:	mov	r1, #0
   1ecd8:	ldr	r2, [r0, r1, lsl #2]
   1ecdc:	cmp	r6, r2
   1ece0:	beq	1ed74 <__mempcpy_chk@plt+0xd794>
   1ece4:	add	r1, r1, #1
   1ece8:	ldr	r2, [r4, #20]
   1ecec:	cmp	r1, r2
   1ecf0:	blt	1ecd8 <__mempcpy_chk@plt+0xd6f8>
   1ecf4:	ldr	r0, [r4, #36]	; 0x24
   1ecf8:	cmp	r0, #1
   1ecfc:	blt	1ed2c <__mempcpy_chk@plt+0xd74c>
   1ed00:	mov	r5, #0
   1ed04:	ldr	r0, [r4, #12]
   1ed08:	ldr	r1, [r0, r5, lsl #2]
   1ed0c:	mov	r0, r6
   1ed10:	bl	112e0 <iswctype@plt>
   1ed14:	cmp	r0, #0
   1ed18:	bne	1ed74 <__mempcpy_chk@plt+0xd794>
   1ed1c:	add	r5, r5, #1
   1ed20:	ldr	r0, [r4, #36]	; 0x24
   1ed24:	cmp	r5, r0
   1ed28:	blt	1ed04 <__mempcpy_chk@plt+0xd724>
   1ed2c:	ldr	r0, [r4, #32]
   1ed30:	cmp	r0, #1
   1ed34:	blt	1ed6c <__mempcpy_chk@plt+0xd78c>
   1ed38:	ldr	r0, [r4, #4]
   1ed3c:	mov	r1, #0
   1ed40:	ldr	r2, [r0, r1, lsl #2]
   1ed44:	cmp	r2, r6
   1ed48:	bhi	1ed5c <__mempcpy_chk@plt+0xd77c>
   1ed4c:	ldr	r2, [r4, #8]
   1ed50:	ldr	r2, [r2, r1, lsl #2]
   1ed54:	cmp	r6, r2
   1ed58:	bls	1ed74 <__mempcpy_chk@plt+0xd794>
   1ed5c:	add	r1, r1, #1
   1ed60:	ldr	r2, [r4, #32]
   1ed64:	cmp	r1, r2
   1ed68:	blt	1ed40 <__mempcpy_chk@plt+0xd760>
   1ed6c:	mov	r0, #0
   1ed70:	b	1ed78 <__mempcpy_chk@plt+0xd798>
   1ed74:	mov	r0, r9
   1ed78:	ldrb	r1, [r4, #16]
   1ed7c:	tst	r1, #1
   1ed80:	mov	r2, #0
   1ed84:	bne	1ed90 <__mempcpy_chk@plt+0xd7b0>
   1ed88:	mov	r2, r0
   1ed8c:	b	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ed90:	cmp	r0, #0
   1ed94:	bgt	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ed98:	cmp	r9, #1
   1ed9c:	movle	r9, #1
   1eda0:	mov	r2, r9
   1eda4:	mov	r0, r2
   1eda8:	sub	sp, fp, #28
   1edac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edb0:	mov	r6, #0
   1edb4:	b	1ecc4 <__mempcpy_chk@plt+0xd6e4>
   1edb8:	ldr	r0, [r7, #4]
   1edbc:	ldrb	r5, [r0, sl]
   1edc0:	mov	r2, #0
   1edc4:	cmp	r5, #194	; 0xc2
   1edc8:	bcc	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1edcc:	ldr	r1, [r7, #48]	; 0x30
   1edd0:	add	r2, sl, #2
   1edd4:	cmp	r2, r1
   1edd8:	ble	1ede4 <__mempcpy_chk@plt+0xd804>
   1eddc:	mov	r2, #0
   1ede0:	b	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ede4:	add	r0, r0, sl
   1ede8:	ldrb	r3, [r0, #1]
   1edec:	cmp	r5, #223	; 0xdf
   1edf0:	bhi	1ee10 <__mempcpy_chk@plt+0xd830>
   1edf4:	mov	r2, #2
   1edf8:	cmp	r3, #191	; 0xbf
   1edfc:	movwhi	r2, #0
   1ee00:	sxtb	r0, r3
   1ee04:	cmn	r0, #1
   1ee08:	movwgt	r2, #0
   1ee0c:	b	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1ee10:	cmp	r5, #239	; 0xef
   1ee14:	bhi	1ee30 <__mempcpy_chk@plt+0xd850>
   1ee18:	mov	r2, #3
   1ee1c:	cmp	r5, #224	; 0xe0
   1ee20:	bne	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee24:	cmp	r3, #160	; 0xa0
   1ee28:	bcc	1eddc <__mempcpy_chk@plt+0xd7fc>
   1ee2c:	b	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee30:	cmp	r5, #247	; 0xf7
   1ee34:	bhi	1ee50 <__mempcpy_chk@plt+0xd870>
   1ee38:	mov	r2, #4
   1ee3c:	cmp	r5, #240	; 0xf0
   1ee40:	bne	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee44:	cmp	r3, #144	; 0x90
   1ee48:	bcc	1eddc <__mempcpy_chk@plt+0xd7fc>
   1ee4c:	b	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee50:	cmp	r5, #251	; 0xfb
   1ee54:	bhi	1ee70 <__mempcpy_chk@plt+0xd890>
   1ee58:	mov	r2, #5
   1ee5c:	cmp	r5, #248	; 0xf8
   1ee60:	bne	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee64:	cmp	r3, #136	; 0x88
   1ee68:	bcc	1eddc <__mempcpy_chk@plt+0xd7fc>
   1ee6c:	b	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee70:	cmp	r5, #253	; 0xfd
   1ee74:	bhi	1eddc <__mempcpy_chk@plt+0xd7fc>
   1ee78:	mov	r2, #6
   1ee7c:	cmp	r5, #252	; 0xfc
   1ee80:	bne	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee84:	cmp	r3, #132	; 0x84
   1ee88:	bcc	1eddc <__mempcpy_chk@plt+0xd7fc>
   1ee8c:	add	r3, r2, sl
   1ee90:	cmp	r3, r1
   1ee94:	bgt	1eddc <__mempcpy_chk@plt+0xd7fc>
   1ee98:	mov	r1, #1
   1ee9c:	ldrb	r3, [r0, r1]
   1eea0:	sxtb	r7, r3
   1eea4:	cmn	r7, #1
   1eea8:	bgt	1eddc <__mempcpy_chk@plt+0xd7fc>
   1eeac:	cmp	r3, #191	; 0xbf
   1eeb0:	bhi	1eddc <__mempcpy_chk@plt+0xd7fc>
   1eeb4:	add	r1, r1, #1
   1eeb8:	cmp	r1, r2
   1eebc:	bcc	1ee9c <__mempcpy_chk@plt+0xd8bc>
   1eec0:	b	1eda4 <__mempcpy_chk@plt+0xd7c4>
   1eec4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1eec8:	add	fp, sp, #24
   1eecc:	mov	r6, r0
   1eed0:	ldr	r7, [r1, #4]
   1eed4:	mvn	r0, #0
   1eed8:	uxtab	r0, r0, r7
   1eedc:	mov	r8, #0
   1eee0:	cmp	r0, #6
   1eee4:	bhi	1eff0 <__mempcpy_chk@plt+0xda10>
   1eee8:	mov	r5, r2
   1eeec:	ldr	r2, [r6, #4]
   1eef0:	ldrb	r2, [r2, r5]
   1eef4:	sxtb	r3, r2
   1eef8:	add	r4, pc, #0
   1eefc:	ldr	pc, [r4, r0, lsl #2]
   1ef00:	andeq	lr, r1, ip, lsl pc
   1ef04:	strdeq	lr, [r1], -r0
   1ef08:	andeq	lr, r1, r0, lsr pc
   1ef0c:	strdeq	lr, [r1], -r0
   1ef10:	andeq	lr, r1, r0, asr pc
   1ef14:	strdeq	lr, [r1], -r0
   1ef18:	andeq	lr, r1, r8, asr #30
   1ef1c:	ldrb	r0, [r1]
   1ef20:	uxtb	r1, r3
   1ef24:	cmp	r0, r1
   1ef28:	beq	1ef84 <__mempcpy_chk@plt+0xd9a4>
   1ef2c:	b	1eff0 <__mempcpy_chk@plt+0xda10>
   1ef30:	ldr	r0, [r1]
   1ef34:	mov	r1, r2
   1ef38:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1ef3c:	cmp	r0, #0
   1ef40:	bne	1ef84 <__mempcpy_chk@plt+0xd9a4>
   1ef44:	b	1eff0 <__mempcpy_chk@plt+0xda10>
   1ef48:	cmp	r3, #0
   1ef4c:	blt	1eff0 <__mempcpy_chk@plt+0xda10>
   1ef50:	cmp	r2, #0
   1ef54:	beq	1ef74 <__mempcpy_chk@plt+0xd994>
   1ef58:	cmp	r2, #10
   1ef5c:	bne	1ef84 <__mempcpy_chk@plt+0xd9a4>
   1ef60:	ldr	r0, [r6, #84]	; 0x54
   1ef64:	ldrb	r0, [r0, #128]	; 0x80
   1ef68:	tst	r0, #64	; 0x40
   1ef6c:	bne	1ef84 <__mempcpy_chk@plt+0xd9a4>
   1ef70:	b	1eff0 <__mempcpy_chk@plt+0xda10>
   1ef74:	ldr	r0, [r6, #84]	; 0x54
   1ef78:	ldrb	r0, [r0, #128]	; 0x80
   1ef7c:	tst	r0, #128	; 0x80
   1ef80:	bne	1eff0 <__mempcpy_chk@plt+0xda10>
   1ef84:	movw	r0, #65280	; 0xff00
   1ef88:	movt	r0, #3
   1ef8c:	tst	r7, r0
   1ef90:	beq	1efec <__mempcpy_chk@plt+0xda0c>
   1ef94:	ldr	r2, [r6, #88]	; 0x58
   1ef98:	mov	r0, r6
   1ef9c:	mov	r1, r5
   1efa0:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1efa4:	and	r1, r0, #1
   1efa8:	tst	r7, #1024	; 0x400
   1efac:	beq	1efb8 <__mempcpy_chk@plt+0xd9d8>
   1efb0:	cmp	r1, #0
   1efb4:	beq	1eff0 <__mempcpy_chk@plt+0xda10>
   1efb8:	tst	r7, #2048	; 0x800
   1efbc:	cmpne	r1, #0
   1efc0:	bne	1eff0 <__mempcpy_chk@plt+0xda10>
   1efc4:	tst	r7, #8192	; 0x2000
   1efc8:	beq	1efd4 <__mempcpy_chk@plt+0xd9f4>
   1efcc:	ands	r1, r0, #2
   1efd0:	beq	1eff0 <__mempcpy_chk@plt+0xda10>
   1efd4:	and	r1, r7, #32768	; 0x8000
   1efd8:	mov	r2, #1
   1efdc:	eor	r1, r2, r1, lsr #15
   1efe0:	and	r0, r0, #8
   1efe4:	orr	r0, r1, r0, lsr #3
   1efe8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1efec:	mov	r8, #1
   1eff0:	mov	r0, r8
   1eff4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1effc:	add	fp, sp, #28
   1f000:	sub	sp, sp, #20
   1f004:	mov	r5, r0
   1f008:	ldr	r0, [r1, #8]
   1f00c:	cmp	r0, #1
   1f010:	blt	1f1b0 <__mempcpy_chk@plt+0xdbd0>
   1f014:	mov	r4, r1
   1f018:	ldr	sl, [r5, #84]	; 0x54
   1f01c:	mov	r8, #0
   1f020:	movw	r9, #65280	; 0xff00
   1f024:	movt	r9, #3
   1f028:	ldr	r0, [r4, #12]
   1f02c:	ldr	r7, [r0, r8, lsl #2]
   1f030:	ldr	r0, [sl]
   1f034:	add	r0, r0, r7, lsl #3
   1f038:	ldr	r6, [r0, #4]
   1f03c:	tst	r6, #1048576	; 0x100000
   1f040:	beq	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f044:	tst	r6, r9
   1f048:	beq	1f09c <__mempcpy_chk@plt+0xdabc>
   1f04c:	ldr	r1, [r5, #40]	; 0x28
   1f050:	ldr	r2, [r5, #88]	; 0x58
   1f054:	mov	r0, r5
   1f058:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1f05c:	and	r1, r0, #1
   1f060:	tst	r6, #1024	; 0x400
   1f064:	beq	1f070 <__mempcpy_chk@plt+0xda90>
   1f068:	cmp	r1, #0
   1f06c:	beq	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f070:	tst	r6, #2048	; 0x800
   1f074:	cmpne	r1, #0
   1f078:	bne	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f07c:	tst	r6, #8192	; 0x2000
   1f080:	beq	1f08c <__mempcpy_chk@plt+0xdaac>
   1f084:	ands	r1, r0, #2
   1f088:	beq	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f08c:	tst	r6, #32768	; 0x8000
   1f090:	beq	1f09c <__mempcpy_chk@plt+0xdabc>
   1f094:	ands	r0, r0, #8
   1f098:	beq	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f09c:	ldr	r3, [r5, #40]	; 0x28
   1f0a0:	mov	r0, sl
   1f0a4:	mov	r1, r7
   1f0a8:	mov	r2, r5
   1f0ac:	bl	1ebf0 <__mempcpy_chk@plt+0xd610>
   1f0b0:	cmp	r0, #0
   1f0b4:	beq	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f0b8:	ldr	r1, [r5, #40]	; 0x28
   1f0bc:	ldr	r2, [r5, #120]	; 0x78
   1f0c0:	cmp	r2, r0
   1f0c4:	movlt	r2, r0
   1f0c8:	str	r2, [r5, #120]	; 0x78
   1f0cc:	add	r6, r1, r0
   1f0d0:	mov	r0, r5
   1f0d4:	mov	r1, r6
   1f0d8:	bl	1dccc <__mempcpy_chk@plt+0xc6ec>
   1f0dc:	str	r0, [sp, #16]
   1f0e0:	cmp	r0, #0
   1f0e4:	bne	1f1b4 <__mempcpy_chk@plt+0xdbd4>
   1f0e8:	ldr	r0, [r5, #100]	; 0x64
   1f0ec:	ldr	r9, [r0, r6, lsl #2]
   1f0f0:	ldr	r0, [sl, #12]
   1f0f4:	ldr	r1, [sl, #24]
   1f0f8:	ldr	r0, [r0, r7, lsl #2]
   1f0fc:	add	r0, r0, r0, lsl #1
   1f100:	add	r2, r1, r0, lsl #2
   1f104:	cmp	r9, #0
   1f108:	beq	1f12c <__mempcpy_chk@plt+0xdb4c>
   1f10c:	ldr	r1, [r9, #40]	; 0x28
   1f110:	mov	r7, sp
   1f114:	mov	r0, r7
   1f118:	bl	1da10 <__mempcpy_chk@plt+0xc430>
   1f11c:	str	r0, [sp, #16]
   1f120:	cmp	r0, #0
   1f124:	beq	1f140 <__mempcpy_chk@plt+0xdb60>
   1f128:	b	1f1b4 <__mempcpy_chk@plt+0xdbd4>
   1f12c:	vldr	d16, [r2]
   1f130:	ldr	r0, [r2, #8]
   1f134:	str	r0, [sp, #8]
   1f138:	vstr	d16, [sp]
   1f13c:	mov	r7, sp
   1f140:	ldr	r2, [r5, #88]	; 0x58
   1f144:	sub	r1, r6, #1
   1f148:	mov	r0, r5
   1f14c:	bl	1cd6c <__mempcpy_chk@plt+0xb78c>
   1f150:	mov	r3, r0
   1f154:	add	r0, sp, #16
   1f158:	mov	r1, sl
   1f15c:	mov	r2, r7
   1f160:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1f164:	ldr	r1, [r5, #100]	; 0x64
   1f168:	str	r0, [r1, r6, lsl #2]
   1f16c:	cmp	r9, #0
   1f170:	beq	1f17c <__mempcpy_chk@plt+0xdb9c>
   1f174:	ldr	r0, [sp, #8]
   1f178:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1f17c:	ldr	r0, [r5, #100]	; 0x64
   1f180:	ldr	r0, [r0, r6, lsl #2]
   1f184:	cmp	r0, #0
   1f188:	movw	r9, #65280	; 0xff00
   1f18c:	movt	r9, #3
   1f190:	bne	1f1a0 <__mempcpy_chk@plt+0xdbc0>
   1f194:	ldr	r0, [sp, #16]
   1f198:	cmp	r0, #0
   1f19c:	bne	1f1b4 <__mempcpy_chk@plt+0xdbd4>
   1f1a0:	add	r8, r8, #1
   1f1a4:	ldr	r0, [r4, #8]
   1f1a8:	cmp	r8, r0
   1f1ac:	blt	1f028 <__mempcpy_chk@plt+0xda48>
   1f1b0:	mov	r0, #0
   1f1b4:	sub	sp, fp, #28
   1f1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1c0:	add	fp, sp, #28
   1f1c4:	sub	sp, sp, #68	; 0x44
   1f1c8:	sub	sp, sp, #14336	; 0x3800
   1f1cc:	mov	r4, r1
   1f1d0:	mov	r7, r0
   1f1d4:	mov	r6, #0
   1f1d8:	str	r6, [r1, #44]	; 0x2c
   1f1dc:	str	r6, [r1, #48]	; 0x30
   1f1e0:	sub	lr, fp, #4096	; 0x1000
   1f1e4:	sub	r2, lr, #2128	; 0x850
   1f1e8:	add	r3, sp, #16
   1f1ec:	bl	1f66c <__mempcpy_chk@plt+0xe08c>
   1f1f0:	cmp	r0, #0
   1f1f4:	ble	1f584 <__mempcpy_chk@plt+0xdfa4>
   1f1f8:	mov	r5, r0
   1f1fc:	str	r4, [sp, #4]
   1f200:	add	r1, r0, #1
   1f204:	sub	r0, fp, #3120	; 0xc30
   1f208:	bl	1aed4 <__mempcpy_chk@plt+0x98f4>
   1f20c:	str	r0, [fp, #-36]	; 0xffffffdc
   1f210:	cmp	r0, #0
   1f214:	bne	1f550 <__mempcpy_chk@plt+0xdf70>
   1f218:	sub	r0, fp, #3152	; 0xc50
   1f21c:	bl	1fb9c <__mempcpy_chk@plt+0xe5bc>
   1f220:	sub	r9, fp, #3120	; 0xc30
   1f224:	sub	lr, fp, #1024	; 0x400
   1f228:	sub	r6, lr, #36	; 0x24
   1f22c:	mov	sl, #0
   1f230:	mov	r0, #0
   1f234:	str	r0, [sp, #8]
   1f238:	str	r5, [sp, #12]
   1f23c:	mov	r0, #0
   1f240:	str	r0, [fp, #-3116]	; 0xfffff3d4
   1f244:	add	r0, sl, sl, lsl #1
   1f248:	sub	lr, fp, #4096	; 0x1000
   1f24c:	sub	r1, lr, #2128	; 0x850
   1f250:	add	r0, r1, r0, lsl #2
   1f254:	mov	r4, r0
   1f258:	ldr	r1, [r4, #4]!
   1f25c:	cmp	r1, #1
   1f260:	blt	1f2c4 <__mempcpy_chk@plt+0xdce4>
   1f264:	ldr	r5, [r0, #8]
   1f268:	mov	r6, #0
   1f26c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f270:	ldr	r0, [r5, r6, lsl #2]
   1f274:	ldr	r2, [r7, #12]
   1f278:	ldr	r0, [r2, r0, lsl #2]
   1f27c:	cmn	r0, #1
   1f280:	beq	1f2a4 <__mempcpy_chk@plt+0xdcc4>
   1f284:	ldr	r1, [r7, #24]
   1f288:	add	r0, r0, r0, lsl #1
   1f28c:	add	r1, r1, r0, lsl #2
   1f290:	mov	r0, r9
   1f294:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   1f298:	mov	r1, #0
   1f29c:	cmp	r0, #0
   1f2a0:	bne	1f548 <__mempcpy_chk@plt+0xdf68>
   1f2a4:	ldr	r0, [r4]
   1f2a8:	add	r6, r6, #1
   1f2ac:	cmp	r6, r0
   1f2b0:	blt	1f270 <__mempcpy_chk@plt+0xdc90>
   1f2b4:	str	r1, [fp, #-36]	; 0xffffffdc
   1f2b8:	ldr	r5, [sp, #12]
   1f2bc:	sub	lr, fp, #1024	; 0x400
   1f2c0:	sub	r6, lr, #36	; 0x24
   1f2c4:	sub	r0, fp, #36	; 0x24
   1f2c8:	mov	r1, r7
   1f2cc:	mov	r2, r9
   1f2d0:	mov	r3, #0
   1f2d4:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1f2d8:	mov	r8, r0
   1f2dc:	str	r0, [r6, sl, lsl #2]
   1f2e0:	cmp	r0, #0
   1f2e4:	bne	1f2f4 <__mempcpy_chk@plt+0xdd14>
   1f2e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f2ec:	cmp	r0, #0
   1f2f0:	bne	1f550 <__mempcpy_chk@plt+0xdf70>
   1f2f4:	ldrsb	r0, [r8, #52]	; 0x34
   1f2f8:	cmn	r0, #1
   1f2fc:	ble	1f320 <__mempcpy_chk@plt+0xdd40>
   1f300:	sub	lr, fp, #2048	; 0x800
   1f304:	sub	r0, lr, #36	; 0x24
   1f308:	str	r8, [r0, sl, lsl #2]
   1f30c:	ldr	r0, [r6, sl, lsl #2]
   1f310:	sub	lr, fp, #3072	; 0xc00
   1f314:	sub	r1, lr, #36	; 0x24
   1f318:	str	r0, [r1, sl, lsl #2]
   1f31c:	b	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f320:	sub	r0, fp, #36	; 0x24
   1f324:	mov	r1, r7
   1f328:	mov	r2, r9
   1f32c:	mov	r3, #1
   1f330:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1f334:	sub	lr, fp, #2048	; 0x800
   1f338:	sub	r1, lr, #36	; 0x24
   1f33c:	str	r0, [r1, sl, lsl #2]
   1f340:	cmp	r0, #0
   1f344:	bne	1f354 <__mempcpy_chk@plt+0xdd74>
   1f348:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f34c:	cmp	r1, #0
   1f350:	bne	1f550 <__mempcpy_chk@plt+0xdf70>
   1f354:	cmp	r8, r0
   1f358:	beq	1f378 <__mempcpy_chk@plt+0xdd98>
   1f35c:	ldr	r0, [r7, #92]	; 0x5c
   1f360:	cmp	r0, #1
   1f364:	mov	r0, #0
   1f368:	movwgt	r0, #1
   1f36c:	ldr	r1, [sp, #8]
   1f370:	orr	r1, r1, r0
   1f374:	str	r1, [sp, #8]
   1f378:	sub	r0, fp, #36	; 0x24
   1f37c:	mov	r1, r7
   1f380:	mov	r2, r9
   1f384:	mov	r3, #2
   1f388:	bl	1b67c <__mempcpy_chk@plt+0xa09c>
   1f38c:	sub	lr, fp, #3072	; 0xc00
   1f390:	sub	r1, lr, #36	; 0x24
   1f394:	str	r0, [r1, sl, lsl #2]
   1f398:	cmp	r0, #0
   1f39c:	bne	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f3a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f3a4:	cmp	r0, #0
   1f3a8:	bne	1f550 <__mempcpy_chk@plt+0xdf70>
   1f3ac:	add	r0, sp, #16
   1f3b0:	add	r1, r0, sl, lsl #5
   1f3b4:	sub	r0, fp, #3152	; 0xc50
   1f3b8:	bl	1fbac <__mempcpy_chk@plt+0xe5cc>
   1f3bc:	add	sl, sl, #1
   1f3c0:	cmp	sl, r5
   1f3c4:	blt	1f23c <__mempcpy_chk@plt+0xdc5c>
   1f3c8:	ldr	r0, [sp, #8]
   1f3cc:	tst	r0, #1
   1f3d0:	bne	1f5a8 <__mempcpy_chk@plt+0xdfc8>
   1f3d4:	mov	r0, #4
   1f3d8:	mov	r1, #256	; 0x100
   1f3dc:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1f3e0:	mov	r8, r0
   1f3e4:	ldr	r0, [sp, #4]
   1f3e8:	str	r8, [r0, #44]	; 0x2c
   1f3ec:	cmp	r8, #0
   1f3f0:	beq	1f550 <__mempcpy_chk@plt+0xdf70>
   1f3f4:	mov	r0, #0
   1f3f8:	mov	r1, #0
   1f3fc:	add	r5, sp, #16
   1f400:	mov	r9, r5
   1f404:	sub	r2, fp, #3152	; 0xc50
   1f408:	ldr	r2, [r2, r1, lsl #2]
   1f40c:	cmp	r2, #0
   1f410:	beq	1f488 <__mempcpy_chk@plt+0xdea8>
   1f414:	add	r3, r7, r1, lsl #2
   1f418:	add	ip, r3, #96	; 0x60
   1f41c:	lsl	r4, r1, #5
   1f420:	mov	r6, #1
   1f424:	b	1f468 <__mempcpy_chk@plt+0xde88>
   1f428:	mov	lr, #0
   1f42c:	ldr	r3, [r9, lr, lsl #3]
   1f430:	add	lr, lr, #4
   1f434:	tst	r3, r6
   1f438:	beq	1f42c <__mempcpy_chk@plt+0xde4c>
   1f43c:	ldr	r3, [ip]
   1f440:	tst	r3, r6
   1f444:	sub	r3, fp, #2048	; 0x800
   1f448:	sub	r3, r3, #36	; 0x24
   1f44c:	sub	r5, fp, #1024	; 0x400
   1f450:	sub	r5, r5, #36	; 0x24
   1f454:	moveq	r3, r5
   1f458:	add	r3, r3, lr
   1f45c:	ldr	r3, [r3, #-4]
   1f460:	str	r3, [r8, r4, lsl #2]
   1f464:	b	1f470 <__mempcpy_chk@plt+0xde90>
   1f468:	tst	r2, #1
   1f46c:	bne	1f428 <__mempcpy_chk@plt+0xde48>
   1f470:	add	r4, r4, #1
   1f474:	lsr	r3, r2, #1
   1f478:	lsl	r6, r6, #1
   1f47c:	cmp	r0, r2, lsr #1
   1f480:	mov	r2, r3
   1f484:	bne	1f468 <__mempcpy_chk@plt+0xde88>
   1f488:	add	r9, r9, #4
   1f48c:	add	r1, r1, #1
   1f490:	cmp	r1, #8
   1f494:	bne	1f404 <__mempcpy_chk@plt+0xde24>
   1f498:	sub	r0, fp, #3152	; 0xc50
   1f49c:	mov	r1, #10
   1f4a0:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1f4a4:	cmp	r0, #0
   1f4a8:	beq	1f508 <__mempcpy_chk@plt+0xdf28>
   1f4ac:	ldr	r0, [sp, #12]
   1f4b0:	cmp	r0, #1
   1f4b4:	blt	1f508 <__mempcpy_chk@plt+0xdf28>
   1f4b8:	mov	r4, #0
   1f4bc:	add	r5, sp, #16
   1f4c0:	mov	r0, r5
   1f4c4:	mov	r1, #10
   1f4c8:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1f4cc:	cmp	r0, #0
   1f4d0:	bne	1f4ec <__mempcpy_chk@plt+0xdf0c>
   1f4d4:	add	r5, r5, #32
   1f4d8:	add	r4, r4, #1
   1f4dc:	ldr	r0, [sp, #12]
   1f4e0:	cmp	r4, r0
   1f4e4:	blt	1f4c0 <__mempcpy_chk@plt+0xdee0>
   1f4e8:	b	1f508 <__mempcpy_chk@plt+0xdf28>
   1f4ec:	sub	lr, fp, #3072	; 0xc00
   1f4f0:	sub	r0, lr, #36	; 0x24
   1f4f4:	ldr	r0, [r0, r4, lsl #2]
   1f4f8:	str	r0, [r8, #40]	; 0x28
   1f4fc:	ldr	r1, [sp, #8]
   1f500:	tst	r1, #1
   1f504:	strne	r0, [r8, #1064]	; 0x428
   1f508:	ldr	r0, [fp, #-3112]	; 0xfffff3d8
   1f50c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1f510:	mov	r6, #1
   1f514:	ldr	r5, [sp, #12]
   1f518:	cmp	r5, #1
   1f51c:	blt	1f53c <__mempcpy_chk@plt+0xdf5c>
   1f520:	sub	lr, fp, #4096	; 0x1000
   1f524:	sub	r0, lr, #2128	; 0x850
   1f528:	add	r4, r0, #8
   1f52c:	ldr	r0, [r4], #12
   1f530:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1f534:	subs	r5, r5, #1
   1f538:	bne	1f52c <__mempcpy_chk@plt+0xdf4c>
   1f53c:	mov	r0, r6
   1f540:	sub	sp, fp, #28
   1f544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f548:	str	r0, [fp, #-36]	; 0xffffffdc
   1f54c:	ldr	r5, [sp, #12]
   1f550:	ldr	r0, [fp, #-3112]	; 0xfffff3d8
   1f554:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1f558:	mov	r6, #0
   1f55c:	cmp	r5, #1
   1f560:	blt	1f53c <__mempcpy_chk@plt+0xdf5c>
   1f564:	sub	lr, fp, #4096	; 0x1000
   1f568:	sub	r0, lr, #2128	; 0x850
   1f56c:	add	r4, r0, #8
   1f570:	ldr	r0, [r4], #12
   1f574:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1f578:	subs	r5, r5, #1
   1f57c:	bne	1f570 <__mempcpy_chk@plt+0xdf90>
   1f580:	b	1f53c <__mempcpy_chk@plt+0xdf5c>
   1f584:	bne	1f53c <__mempcpy_chk@plt+0xdf5c>
   1f588:	mov	r0, #4
   1f58c:	mov	r1, #256	; 0x100
   1f590:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1f594:	mov	r6, r0
   1f598:	str	r0, [r4, #44]	; 0x2c
   1f59c:	cmp	r0, #0
   1f5a0:	movwne	r6, #1
   1f5a4:	b	1f53c <__mempcpy_chk@plt+0xdf5c>
   1f5a8:	mov	r0, #4
   1f5ac:	mov	r1, #512	; 0x200
   1f5b0:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   1f5b4:	mov	r8, r0
   1f5b8:	ldr	r0, [sp, #4]
   1f5bc:	str	r8, [r0, #48]	; 0x30
   1f5c0:	cmp	r8, #0
   1f5c4:	beq	1f550 <__mempcpy_chk@plt+0xdf70>
   1f5c8:	sub	ip, r6, #4
   1f5cc:	sub	lr, fp, #2048	; 0x800
   1f5d0:	sub	r0, lr, #36	; 0x24
   1f5d4:	sub	lr, r0, #4
   1f5d8:	mov	r2, #0
   1f5dc:	add	r3, sp, #16
   1f5e0:	mov	r7, #0
   1f5e4:	sub	r0, fp, #3152	; 0xc50
   1f5e8:	ldr	r5, [r0, r7, lsl #2]
   1f5ec:	cmp	r5, #0
   1f5f0:	beq	1f658 <__mempcpy_chk@plt+0xe078>
   1f5f4:	lsl	r0, r7, #5
   1f5f8:	mov	r1, #1
   1f5fc:	b	1f638 <__mempcpy_chk@plt+0xe058>
   1f600:	mov	r4, r3
   1f604:	mov	sl, ip
   1f608:	mov	r9, lr
   1f60c:	add	sl, sl, #4
   1f610:	add	r9, r9, #4
   1f614:	ldr	r6, [r4], #32
   1f618:	tst	r6, r1
   1f61c:	beq	1f60c <__mempcpy_chk@plt+0xe02c>
   1f620:	ldr	r4, [sl]
   1f624:	mov	r6, r8
   1f628:	str	r4, [r6, r0, lsl #2]!
   1f62c:	ldr	r4, [r9]
   1f630:	str	r4, [r6, #1024]	; 0x400
   1f634:	b	1f640 <__mempcpy_chk@plt+0xe060>
   1f638:	tst	r5, #1
   1f63c:	bne	1f600 <__mempcpy_chk@plt+0xe020>
   1f640:	add	r0, r0, #1
   1f644:	lsr	r4, r5, #1
   1f648:	lsl	r1, r1, #1
   1f64c:	cmp	r2, r5, lsr #1
   1f650:	mov	r5, r4
   1f654:	bne	1f638 <__mempcpy_chk@plt+0xe058>
   1f658:	add	r3, r3, #4
   1f65c:	add	r7, r7, #1
   1f660:	cmp	r7, #8
   1f664:	bne	1f5e4 <__mempcpy_chk@plt+0xe004>
   1f668:	b	1f498 <__mempcpy_chk@plt+0xdeb8>
   1f66c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f670:	add	fp, sp, #28
   1f674:	sub	sp, sp, #148	; 0x94
   1f678:	str	r3, [sp, #40]	; 0x28
   1f67c:	str	r2, [sp, #36]	; 0x24
   1f680:	mov	r8, r1
   1f684:	mov	sl, r0
   1f688:	sub	r7, fp, #64	; 0x40
   1f68c:	mov	r0, r7
   1f690:	bl	1fb9c <__mempcpy_chk@plt+0xe5bc>
   1f694:	ldr	r0, [r8, #8]
   1f698:	cmp	r0, #1
   1f69c:	blt	1fb58 <__mempcpy_chk@plt+0xe578>
   1f6a0:	add	r4, sl, #96	; 0x60
   1f6a4:	mov	r6, #0
   1f6a8:	add	r5, sp, #80	; 0x50
   1f6ac:	mov	r0, #0
   1f6b0:	str	r0, [sp, #44]	; 0x2c
   1f6b4:	str	r8, [sp, #16]
   1f6b8:	stm	sp, {r4, sl}
   1f6bc:	ldr	r0, [r8, #12]
   1f6c0:	ldr	r0, [r0, r6, lsl #2]
   1f6c4:	ldr	r1, [sl]
   1f6c8:	add	r3, r1, r0, lsl #3
   1f6cc:	ldr	r9, [r3, #4]!
   1f6d0:	uxtb	r2, r9
   1f6d4:	cmp	r2, #1
   1f6d8:	str	r2, [sp, #32]
   1f6dc:	bne	1f7b8 <__mempcpy_chk@plt+0xe1d8>
   1f6e0:	str	r3, [sp, #12]
   1f6e4:	str	r0, [sp, #28]
   1f6e8:	str	r1, [sp, #24]
   1f6ec:	ldrb	r1, [r1, r0, lsl #3]
   1f6f0:	mov	r0, r7
   1f6f4:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   1f6f8:	movw	r0, #65280	; 0xff00
   1f6fc:	movt	r0, #3
   1f700:	ands	r0, r9, r0
   1f704:	beq	1f954 <__mempcpy_chk@plt+0xe374>
   1f708:	tst	r9, #8192	; 0x2000
   1f70c:	beq	1f740 <__mempcpy_chk@plt+0xe160>
   1f710:	mov	r0, r7
   1f714:	mov	r1, #10
   1f718:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1f71c:	str	r0, [sp, #8]
   1f720:	mov	r0, r7
   1f724:	bl	1fb9c <__mempcpy_chk@plt+0xe5bc>
   1f728:	ldr	r0, [sp, #8]
   1f72c:	cmp	r0, #0
   1f730:	beq	1fb30 <__mempcpy_chk@plt+0xe550>
   1f734:	mov	r0, r7
   1f738:	mov	r1, #10
   1f73c:	bl	193ac <__mempcpy_chk@plt+0x7dcc>
   1f740:	tst	r9, #32768	; 0x8000
   1f744:	bne	1f914 <__mempcpy_chk@plt+0xe334>
   1f748:	tst	r9, #1024	; 0x400
   1f74c:	beq	1f8a8 <__mempcpy_chk@plt+0xe2c8>
   1f750:	ldr	r0, [sp, #32]
   1f754:	cmp	r0, #1
   1f758:	bne	1f76c <__mempcpy_chk@plt+0xe18c>
   1f75c:	ldr	r0, [sp, #12]
   1f760:	ldrb	r0, [r0, #2]
   1f764:	tst	r0, #64	; 0x40
   1f768:	beq	1f914 <__mempcpy_chk@plt+0xe334>
   1f76c:	mov	ip, r6
   1f770:	ldr	r0, [sl, #92]	; 0x5c
   1f774:	cmp	r0, #1
   1f778:	ble	1f874 <__mempcpy_chk@plt+0xe294>
   1f77c:	ldr	r1, [sl, #60]	; 0x3c
   1f780:	mov	r0, #0
   1f784:	mov	r2, #0
   1f788:	ldr	r3, [r4, r2, lsl #2]
   1f78c:	ldr	r6, [r1, r2, lsl #2]
   1f790:	mvn	r6, r6
   1f794:	orr	r3, r3, r6
   1f798:	ldr	r6, [r7, r2, lsl #2]
   1f79c:	and	r3, r6, r3
   1f7a0:	str	r3, [r7, r2, lsl #2]
   1f7a4:	orr	r0, r3, r0
   1f7a8:	add	r2, r2, #1
   1f7ac:	cmp	r2, #8
   1f7b0:	bne	1f788 <__mempcpy_chk@plt+0xe1a8>
   1f7b4:	b	1f89c <__mempcpy_chk@plt+0xe2bc>
   1f7b8:	cmp	r2, #7
   1f7bc:	beq	1f7ec <__mempcpy_chk@plt+0xe20c>
   1f7c0:	cmp	r2, #5
   1f7c4:	beq	1f810 <__mempcpy_chk@plt+0xe230>
   1f7c8:	cmp	r2, #3
   1f7cc:	bne	1fb30 <__mempcpy_chk@plt+0xe550>
   1f7d0:	str	r3, [sp, #12]
   1f7d4:	str	r0, [sp, #28]
   1f7d8:	str	r1, [sp, #24]
   1f7dc:	ldr	r1, [r1, r0, lsl #3]
   1f7e0:	mov	r0, r7
   1f7e4:	bl	1fbac <__mempcpy_chk@plt+0xe5cc>
   1f7e8:	b	1f6f8 <__mempcpy_chk@plt+0xe118>
   1f7ec:	str	r3, [sp, #12]
   1f7f0:	str	r1, [sp, #24]
   1f7f4:	str	r0, [sp, #28]
   1f7f8:	mvn	r0, #0
   1f7fc:	str	r0, [fp, #-52]	; 0xffffffcc
   1f800:	str	r0, [fp, #-56]	; 0xffffffc8
   1f804:	str	r0, [fp, #-60]	; 0xffffffc4
   1f808:	str	r0, [fp, #-64]	; 0xffffffc0
   1f80c:	b	1f840 <__mempcpy_chk@plt+0xe260>
   1f810:	str	r3, [sp, #12]
   1f814:	str	r1, [sp, #24]
   1f818:	str	r0, [sp, #28]
   1f81c:	ldr	r0, [sl, #92]	; 0x5c
   1f820:	cmp	r0, #2
   1f824:	blt	1f838 <__mempcpy_chk@plt+0xe258>
   1f828:	ldr	r1, [sl, #60]	; 0x3c
   1f82c:	mov	r0, r7
   1f830:	bl	1fbac <__mempcpy_chk@plt+0xe5cc>
   1f834:	b	1f840 <__mempcpy_chk@plt+0xe260>
   1f838:	mov	r0, r7
   1f83c:	bl	1fbd0 <__mempcpy_chk@plt+0xe5f0>
   1f840:	ldrb	r0, [sl, #128]	; 0x80
   1f844:	tst	r0, #64	; 0x40
   1f848:	bne	1f858 <__mempcpy_chk@plt+0xe278>
   1f84c:	mov	r0, r7
   1f850:	mov	r1, #10
   1f854:	bl	1fbf8 <__mempcpy_chk@plt+0xe618>
   1f858:	ldrb	r0, [sl, #128]	; 0x80
   1f85c:	tst	r0, #128	; 0x80
   1f860:	beq	1f6f8 <__mempcpy_chk@plt+0xe118>
   1f864:	mov	r0, r7
   1f868:	mov	r1, #0
   1f86c:	bl	1fbf8 <__mempcpy_chk@plt+0xe618>
   1f870:	b	1f6f8 <__mempcpy_chk@plt+0xe118>
   1f874:	mov	r0, #0
   1f878:	mov	r1, #0
   1f87c:	ldr	r2, [r4, r1, lsl #2]
   1f880:	ldr	r3, [r7, r1, lsl #2]
   1f884:	and	r2, r3, r2
   1f888:	str	r2, [r7, r1, lsl #2]
   1f88c:	orr	r0, r2, r0
   1f890:	add	r1, r1, #1
   1f894:	cmp	r1, #8
   1f898:	bne	1f87c <__mempcpy_chk@plt+0xe29c>
   1f89c:	cmp	r0, #0
   1f8a0:	mov	r6, ip
   1f8a4:	beq	1fb30 <__mempcpy_chk@plt+0xe550>
   1f8a8:	tst	r9, #2048	; 0x800
   1f8ac:	beq	1f954 <__mempcpy_chk@plt+0xe374>
   1f8b0:	ldr	r0, [sp, #32]
   1f8b4:	cmp	r0, #1
   1f8b8:	bne	1f8cc <__mempcpy_chk@plt+0xe2ec>
   1f8bc:	ldr	r0, [sp, #12]
   1f8c0:	ldrb	r0, [r0, #2]
   1f8c4:	tst	r0, #64	; 0x40
   1f8c8:	bne	1f914 <__mempcpy_chk@plt+0xe334>
   1f8cc:	ldr	r0, [sl, #92]	; 0x5c
   1f8d0:	mov	ip, r6
   1f8d4:	cmp	r0, #1
   1f8d8:	ble	1f920 <__mempcpy_chk@plt+0xe340>
   1f8dc:	ldr	r1, [sl, #60]	; 0x3c
   1f8e0:	mov	r0, #0
   1f8e4:	mov	r2, #0
   1f8e8:	ldr	r3, [r4, r2, lsl #2]
   1f8ec:	ldr	r6, [r1, r2, lsl #2]
   1f8f0:	and	r3, r6, r3
   1f8f4:	ldr	r6, [r7, r2, lsl #2]
   1f8f8:	bic	r3, r6, r3
   1f8fc:	str	r3, [r7, r2, lsl #2]
   1f900:	orr	r0, r3, r0
   1f904:	add	r2, r2, #1
   1f908:	cmp	r2, #8
   1f90c:	bne	1f8e8 <__mempcpy_chk@plt+0xe308>
   1f910:	b	1f948 <__mempcpy_chk@plt+0xe368>
   1f914:	mov	r0, r7
   1f918:	bl	1fb9c <__mempcpy_chk@plt+0xe5bc>
   1f91c:	b	1fb30 <__mempcpy_chk@plt+0xe550>
   1f920:	mov	r0, #0
   1f924:	mov	r1, #0
   1f928:	ldr	r2, [r4, r1, lsl #2]
   1f92c:	ldr	r3, [r7, r1, lsl #2]
   1f930:	bic	r2, r3, r2
   1f934:	str	r2, [r7, r1, lsl #2]
   1f938:	orr	r0, r2, r0
   1f93c:	add	r1, r1, #1
   1f940:	cmp	r1, #8
   1f944:	bne	1f928 <__mempcpy_chk@plt+0xe348>
   1f948:	cmp	r0, #0
   1f94c:	mov	r6, ip
   1f950:	beq	1fb30 <__mempcpy_chk@plt+0xe550>
   1f954:	str	r6, [sp, #20]
   1f958:	ldr	r9, [sp, #44]	; 0x2c
   1f95c:	mov	r6, #0
   1f960:	cmp	r9, #1
   1f964:	blt	1fab8 <__mempcpy_chk@plt+0xe4d8>
   1f968:	ldr	sl, [sp, #40]	; 0x28
   1f96c:	ldr	r4, [sp, #32]
   1f970:	cmp	r4, #1
   1f974:	bne	1f998 <__mempcpy_chk@plt+0xe3b8>
   1f978:	ldr	r0, [sp, #28]
   1f97c:	ldr	r1, [sp, #24]
   1f980:	ldrb	r1, [r1, r0, lsl #3]
   1f984:	ldr	r0, [sp, #40]	; 0x28
   1f988:	add	r0, r0, r6, lsl #5
   1f98c:	bl	1cee4 <__mempcpy_chk@plt+0xb904>
   1f990:	cmp	r0, #0
   1f994:	beq	1faa8 <__mempcpy_chk@plt+0xe4c8>
   1f998:	mov	r0, #0
   1f99c:	mov	r1, #0
   1f9a0:	ldr	r2, [r7, r1, lsl #2]
   1f9a4:	ldr	r3, [sl, r1, lsl #2]
   1f9a8:	and	r2, r3, r2
   1f9ac:	str	r2, [r5, r1, lsl #2]
   1f9b0:	orr	r0, r2, r0
   1f9b4:	add	r1, r1, #1
   1f9b8:	cmp	r1, #8
   1f9bc:	bne	1f9a0 <__mempcpy_chk@plt+0xe3c0>
   1f9c0:	cmp	r0, #0
   1f9c4:	beq	1faa8 <__mempcpy_chk@plt+0xe4c8>
   1f9c8:	mov	r8, r9
   1f9cc:	mov	r9, #0
   1f9d0:	mov	r0, #0
   1f9d4:	mov	r1, #0
   1f9d8:	add	r5, sp, #48	; 0x30
   1f9dc:	ldr	r2, [r7, r1, lsl #2]
   1f9e0:	ldr	r3, [sl, r1, lsl #2]
   1f9e4:	bic	r4, r3, r2
   1f9e8:	str	r4, [r5, r1, lsl #2]
   1f9ec:	bic	r2, r2, r3
   1f9f0:	str	r2, [r7, r1, lsl #2]
   1f9f4:	orr	r9, r2, r9
   1f9f8:	orr	r0, r4, r0
   1f9fc:	add	r1, r1, #1
   1fa00:	cmp	r1, #8
   1fa04:	bne	1f9dc <__mempcpy_chk@plt+0xe3fc>
   1fa08:	cmp	r0, #0
   1fa0c:	beq	1fa5c <__mempcpy_chk@plt+0xe47c>
   1fa10:	ldr	r4, [sp, #40]	; 0x28
   1fa14:	add	r0, r4, r8, lsl #5
   1fa18:	add	r1, sp, #48	; 0x30
   1fa1c:	bl	1fc1c <__mempcpy_chk@plt+0xe63c>
   1fa20:	add	r0, r4, r6, lsl #5
   1fa24:	add	r5, sp, #80	; 0x50
   1fa28:	mov	r1, r5
   1fa2c:	bl	1fc1c <__mempcpy_chk@plt+0xe63c>
   1fa30:	add	r0, r8, r8, lsl #1
   1fa34:	ldr	r2, [sp, #36]	; 0x24
   1fa38:	add	r0, r2, r0, lsl #2
   1fa3c:	add	r1, r6, r6, lsl #1
   1fa40:	add	r1, r2, r1, lsl #2
   1fa44:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   1fa48:	cmp	r0, #0
   1fa4c:	bne	1fb6c <__mempcpy_chk@plt+0xe58c>
   1fa50:	add	r8, r8, #1
   1fa54:	str	r8, [sp, #44]	; 0x2c
   1fa58:	b	1fa64 <__mempcpy_chk@plt+0xe484>
   1fa5c:	str	r8, [sp, #44]	; 0x2c
   1fa60:	add	r5, sp, #80	; 0x50
   1fa64:	ldr	r8, [sp, #16]
   1fa68:	ldr	r0, [r8, #12]
   1fa6c:	ldr	r1, [sp, #20]
   1fa70:	ldr	r1, [r0, r1, lsl #2]
   1fa74:	add	r0, r6, r6, lsl #1
   1fa78:	ldr	r2, [sp, #36]	; 0x24
   1fa7c:	add	r0, r2, r0, lsl #2
   1fa80:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1fa84:	cmp	r0, #0
   1fa88:	beq	1fb70 <__mempcpy_chk@plt+0xe590>
   1fa8c:	cmp	r9, #0
   1fa90:	mov	r0, #0
   1fa94:	movweq	r0, #17
   1fa98:	cmp	r0, #0
   1fa9c:	bne	1fb10 <__mempcpy_chk@plt+0xe530>
   1faa0:	ldr	r9, [sp, #44]	; 0x2c
   1faa4:	ldr	r4, [sp, #32]
   1faa8:	add	sl, sl, #32
   1faac:	add	r6, r6, #1
   1fab0:	cmp	r6, r9
   1fab4:	blt	1f970 <__mempcpy_chk@plt+0xe390>
   1fab8:	cmp	r6, r9
   1fabc:	bne	1fb24 <__mempcpy_chk@plt+0xe544>
   1fac0:	ldr	r0, [sp, #40]	; 0x28
   1fac4:	add	r0, r0, r9, lsl #5
   1fac8:	mov	r1, r7
   1facc:	bl	1fc1c <__mempcpy_chk@plt+0xe63c>
   1fad0:	ldr	r0, [r8, #12]
   1fad4:	ldr	r6, [sp, #20]
   1fad8:	ldr	r1, [r0, r6, lsl #2]
   1fadc:	add	r0, r9, r9, lsl #1
   1fae0:	ldr	r2, [sp, #36]	; 0x24
   1fae4:	add	r0, r2, r0, lsl #2
   1fae8:	bl	1ac7c <__mempcpy_chk@plt+0x969c>
   1faec:	cmp	r0, #0
   1faf0:	ldr	sl, [sp, #4]
   1faf4:	bne	1fb74 <__mempcpy_chk@plt+0xe594>
   1faf8:	mov	r0, r7
   1fafc:	bl	1fb9c <__mempcpy_chk@plt+0xe5bc>
   1fb00:	add	r9, r9, #1
   1fb04:	str	r9, [sp, #44]	; 0x2c
   1fb08:	ldr	r4, [sp]
   1fb0c:	b	1fb30 <__mempcpy_chk@plt+0xe550>
   1fb10:	cmp	r0, #17
   1fb14:	bne	1fb44 <__mempcpy_chk@plt+0xe564>
   1fb18:	ldr	r9, [sp, #44]	; 0x2c
   1fb1c:	cmp	r6, r9
   1fb20:	beq	1fac0 <__mempcpy_chk@plt+0xe4e0>
   1fb24:	str	r9, [sp, #44]	; 0x2c
   1fb28:	ldm	sp, {r4, sl}
   1fb2c:	ldr	r6, [sp, #20]
   1fb30:	ldr	r0, [r8, #8]
   1fb34:	add	r6, r6, #1
   1fb38:	cmp	r6, r0
   1fb3c:	blt	1f6bc <__mempcpy_chk@plt+0xe0dc>
   1fb40:	b	1fb60 <__mempcpy_chk@plt+0xe580>
   1fb44:	cmp	r9, #0
   1fb48:	ldm	sp, {r4, sl}
   1fb4c:	ldr	r6, [sp, #20]
   1fb50:	bne	1fb30 <__mempcpy_chk@plt+0xe550>
   1fb54:	b	1fb60 <__mempcpy_chk@plt+0xe580>
   1fb58:	mov	r0, #0
   1fb5c:	str	r0, [sp, #44]	; 0x2c
   1fb60:	ldr	r0, [sp, #44]	; 0x2c
   1fb64:	sub	sp, fp, #28
   1fb68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb6c:	str	r8, [sp, #44]	; 0x2c
   1fb70:	ldr	r9, [sp, #44]	; 0x2c
   1fb74:	cmp	r9, #1
   1fb78:	blt	1fb94 <__mempcpy_chk@plt+0xe5b4>
   1fb7c:	ldr	r0, [sp, #36]	; 0x24
   1fb80:	add	r5, r0, #8
   1fb84:	ldr	r0, [r5], #12
   1fb88:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1fb8c:	subs	r9, r9, #1
   1fb90:	bne	1fb84 <__mempcpy_chk@plt+0xe5a4>
   1fb94:	mvn	r0, #0
   1fb98:	b	1fb5c <__mempcpy_chk@plt+0xe57c>
   1fb9c:	vmov.i32	q8, #0	; 0x00000000
   1fba0:	vst1.32	{d16-d17}, [r0]!
   1fba4:	vst1.32	{d16-d17}, [r0]
   1fba8:	bx	lr
   1fbac:	mov	r2, #0
   1fbb0:	ldr	ip, [r1, r2, lsl #2]
   1fbb4:	ldr	r3, [r0, r2, lsl #2]
   1fbb8:	orr	r3, r3, ip
   1fbbc:	str	r3, [r0, r2, lsl #2]
   1fbc0:	add	r2, r2, #1
   1fbc4:	cmp	r2, #8
   1fbc8:	bne	1fbb0 <__mempcpy_chk@plt+0xe5d0>
   1fbcc:	bx	lr
   1fbd0:	mvn	r1, #0
   1fbd4:	str	r1, [r0]
   1fbd8:	str	r1, [r0, #4]
   1fbdc:	str	r1, [r0, #8]
   1fbe0:	str	r1, [r0, #12]
   1fbe4:	str	r1, [r0, #16]
   1fbe8:	str	r1, [r0, #20]
   1fbec:	str	r1, [r0, #24]
   1fbf0:	str	r1, [r0, #28]
   1fbf4:	bx	lr
   1fbf8:	asr	r2, r1, #31
   1fbfc:	add	r2, r1, r2, lsr #27
   1fc00:	asr	r2, r2, #5
   1fc04:	ldr	ip, [r0, r2, lsl #2]
   1fc08:	and	r1, r1, #31
   1fc0c:	mov	r3, #1
   1fc10:	bic	r1, ip, r3, lsl r1
   1fc14:	str	r1, [r0, r2, lsl #2]
   1fc18:	bx	lr
   1fc1c:	vld1.32	{d16-d17}, [r1]!
   1fc20:	vld1.32	{d18-d19}, [r1]
   1fc24:	vst1.32	{d16-d17}, [r0]!
   1fc28:	vst1.32	{d18-d19}, [r0]
   1fc2c:	bx	lr
   1fc30:	ldr	r0, [r0]
   1fc34:	add	r0, r0, r1, lsl #3
   1fc38:	ldr	r1, [r0, #4]
   1fc3c:	uxtb	r3, r1
   1fc40:	mov	r0, #0
   1fc44:	cmp	r3, #2
   1fc48:	bne	1fca0 <__mempcpy_chk@plt+0xe6c0>
   1fc4c:	movw	r3, #65280	; 0xff00
   1fc50:	movt	r3, #3
   1fc54:	tst	r1, r3
   1fc58:	moveq	r0, #1
   1fc5c:	bxeq	lr
   1fc60:	ands	ip, r2, #1
   1fc64:	bne	1fc70 <__mempcpy_chk@plt+0xe690>
   1fc68:	ands	r3, r1, #1024	; 0x400
   1fc6c:	bne	1fca0 <__mempcpy_chk@plt+0xe6c0>
   1fc70:	cmp	ip, #0
   1fc74:	andsne	r3, r1, #2048	; 0x800
   1fc78:	bne	1fca0 <__mempcpy_chk@plt+0xe6c0>
   1fc7c:	tst	r2, #2
   1fc80:	bne	1fc8c <__mempcpy_chk@plt+0xe6ac>
   1fc84:	ands	r3, r1, #8192	; 0x2000
   1fc88:	bxne	lr
   1fc8c:	and	r0, r1, #32768	; 0x8000
   1fc90:	mov	r1, #1
   1fc94:	eor	r0, r1, r0, lsr #15
   1fc98:	and	r1, r2, #8
   1fc9c:	orr	r0, r0, r1, lsr #3
   1fca0:	bx	lr
   1fca4:	stm	r0, {r1, r2, r3}
   1fca8:	mov	r1, #0
   1fcac:	str	r1, [r0, #24]
   1fcb0:	str	r1, [r0, #20]
   1fcb4:	str	r1, [r0, #16]
   1fcb8:	ldr	r1, [sp]
   1fcbc:	str	r1, [r0, #12]
   1fcc0:	bx	lr
   1fcc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcc8:	add	fp, sp, #28
   1fccc:	sub	sp, sp, #12
   1fcd0:	mov	sl, r1
   1fcd4:	mov	r6, r0
   1fcd8:	ldr	r1, [r1, #8]
   1fcdc:	ldr	r5, [sl, #12]
   1fce0:	mov	r0, sp
   1fce4:	bl	1ac7c <__mempcpy_chk@plt+0x969c>
   1fce8:	cmp	r0, #0
   1fcec:	bne	1fdc8 <__mempcpy_chk@plt+0xe7e8>
   1fcf0:	mov	r3, sp
   1fcf4:	mov	r0, r6
   1fcf8:	mov	r1, sl
   1fcfc:	mov	r2, r5
   1fd00:	bl	1fe7c <__mempcpy_chk@plt+0xe89c>
   1fd04:	cmp	r0, #0
   1fd08:	bne	1fd94 <__mempcpy_chk@plt+0xe7b4>
   1fd0c:	mov	r9, #0
   1fd10:	mov	r8, sp
   1fd14:	mov	r1, #0
   1fd18:	cmp	r5, #1
   1fd1c:	blt	1fd9c <__mempcpy_chk@plt+0xe7bc>
   1fd20:	ldr	r0, [sl]
   1fd24:	ldr	r2, [r0, r5, lsl #2]
   1fd28:	cmp	r2, #0
   1fd2c:	mov	r4, #0
   1fd30:	addeq	r4, r1, #1
   1fd34:	ldr	r1, [r6, #120]	; 0x78
   1fd38:	cmp	r4, r1
   1fd3c:	bgt	1fda4 <__mempcpy_chk@plt+0xe7c4>
   1fd40:	str	r9, [sp, #4]
   1fd44:	ldr	r0, [r6, #100]	; 0x64
   1fd48:	sub	r5, r5, #1
   1fd4c:	ldr	r0, [r0, r5, lsl #2]
   1fd50:	cmp	r0, #0
   1fd54:	beq	1fd74 <__mempcpy_chk@plt+0xe794>
   1fd58:	mov	r0, r6
   1fd5c:	mov	r1, sl
   1fd60:	mov	r2, r5
   1fd64:	mov	r3, r8
   1fd68:	bl	1ffa4 <__mempcpy_chk@plt+0xe9c4>
   1fd6c:	cmp	r0, #0
   1fd70:	bne	1fd94 <__mempcpy_chk@plt+0xe7b4>
   1fd74:	mov	r0, r6
   1fd78:	mov	r1, sl
   1fd7c:	mov	r2, r5
   1fd80:	mov	r3, r8
   1fd84:	bl	1fe7c <__mempcpy_chk@plt+0xe89c>
   1fd88:	cmp	r0, #0
   1fd8c:	mov	r1, r4
   1fd90:	beq	1fd18 <__mempcpy_chk@plt+0xe738>
   1fd94:	mov	r7, r0
   1fd98:	b	1fdb4 <__mempcpy_chk@plt+0xe7d4>
   1fd9c:	mov	r7, #0
   1fda0:	b	1fdb4 <__mempcpy_chk@plt+0xe7d4>
   1fda4:	lsl	r2, r5, #2
   1fda8:	mov	r7, #0
   1fdac:	mov	r1, #0
   1fdb0:	bl	114fc <memset@plt>
   1fdb4:	ldr	r0, [sp, #8]
   1fdb8:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1fdbc:	mov	r0, r7
   1fdc0:	sub	sp, fp, #28
   1fdc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdc8:	mov	r7, r0
   1fdcc:	b	1fdbc <__mempcpy_chk@plt+0xe7dc>
   1fdd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fdd4:	add	fp, sp, #28
   1fdd8:	sub	sp, sp, #20
   1fddc:	cmp	r3, #1
   1fde0:	blt	1fe70 <__mempcpy_chk@plt+0xe890>
   1fde4:	mov	r4, r3
   1fde8:	mov	r5, r2
   1fdec:	mov	r6, r1
   1fdf0:	mov	sl, r0
   1fdf4:	mov	r7, #0
   1fdf8:	add	r8, sp, #4
   1fdfc:	add	r9, sp, #16
   1fe00:	ldr	r0, [r5, r7, lsl #2]
   1fe04:	ldr	r1, [r6, r7, lsl #2]
   1fe08:	cmp	r1, #0
   1fe0c:	beq	1fe60 <__mempcpy_chk@plt+0xe880>
   1fe10:	cmp	r0, #0
   1fe14:	beq	1fe64 <__mempcpy_chk@plt+0xe884>
   1fe18:	add	r1, r1, #4
   1fe1c:	add	r2, r0, #4
   1fe20:	mov	r0, r8
   1fe24:	bl	1da10 <__mempcpy_chk@plt+0xc430>
   1fe28:	str	r0, [sp, #16]
   1fe2c:	cmp	r0, #0
   1fe30:	bne	1fe74 <__mempcpy_chk@plt+0xe894>
   1fe34:	mov	r0, r9
   1fe38:	mov	r1, sl
   1fe3c:	mov	r2, r8
   1fe40:	bl	1e9ec <__mempcpy_chk@plt+0xd40c>
   1fe44:	str	r0, [r6, r7, lsl #2]
   1fe48:	ldr	r0, [sp, #12]
   1fe4c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   1fe50:	ldr	r0, [sp, #16]
   1fe54:	cmp	r0, #0
   1fe58:	beq	1fe64 <__mempcpy_chk@plt+0xe884>
   1fe5c:	b	1fe74 <__mempcpy_chk@plt+0xe894>
   1fe60:	str	r0, [r6, r7, lsl #2]
   1fe64:	add	r7, r7, #1
   1fe68:	cmp	r7, r4
   1fe6c:	blt	1fe00 <__mempcpy_chk@plt+0xe820>
   1fe70:	mov	r0, #0
   1fe74:	sub	sp, fp, #28
   1fe78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe80:	add	fp, sp, #28
   1fe84:	sub	sp, sp, #12
   1fe88:	mov	sl, r2
   1fe8c:	mov	r8, r1
   1fe90:	mov	r6, r0
   1fe94:	ldr	r9, [r0, #84]	; 0x54
   1fe98:	mov	r0, #0
   1fe9c:	str	r0, [sp, #8]
   1fea0:	ldr	r1, [r6, #100]	; 0x64
   1fea4:	ldr	r7, [r1, r2, lsl #2]
   1fea8:	cmp	r7, #0
   1feac:	mov	r4, r7
   1feb0:	addne	r4, r4, #4
   1feb4:	ldr	r1, [r3, #4]
   1feb8:	cmp	r1, #0
   1febc:	beq	1ff4c <__mempcpy_chk@plt+0xe96c>
   1fec0:	mov	r5, r3
   1fec4:	cmp	r7, #0
   1fec8:	beq	1ff1c <__mempcpy_chk@plt+0xe93c>
   1fecc:	mov	r0, r9
   1fed0:	mov	r1, r5
   1fed4:	mov	r2, r4
   1fed8:	bl	200e8 <__mempcpy_chk@plt+0xeb08>
   1fedc:	str	r0, [sp, #8]
   1fee0:	cmp	r0, #0
   1fee4:	bne	1ff74 <__mempcpy_chk@plt+0xe994>
   1fee8:	ldr	r0, [r8, #20]
   1feec:	cmp	r0, #0
   1fef0:	beq	1ff1c <__mempcpy_chk@plt+0xe93c>
   1fef4:	ldr	r0, [r6, #116]	; 0x74
   1fef8:	stm	sp, {r0, sl}
   1fefc:	add	r3, r8, #16
   1ff00:	mov	r0, r9
   1ff04:	mov	r1, r5
   1ff08:	mov	r2, r4
   1ff0c:	bl	201c0 <__mempcpy_chk@plt+0xebe0>
   1ff10:	str	r0, [sp, #8]
   1ff14:	cmp	r0, #0
   1ff18:	bne	1ff74 <__mempcpy_chk@plt+0xe994>
   1ff1c:	add	r0, sp, #8
   1ff20:	mov	r1, r9
   1ff24:	mov	r2, r5
   1ff28:	bl	1e9ec <__mempcpy_chk@plt+0xd40c>
   1ff2c:	ldr	r1, [r8]
   1ff30:	str	r0, [r1, sl, lsl #2]
   1ff34:	ldr	r0, [sp, #8]
   1ff38:	cmp	r0, #0
   1ff3c:	bne	1ff74 <__mempcpy_chk@plt+0xe994>
   1ff40:	cmp	r7, #0
   1ff44:	bne	1ff5c <__mempcpy_chk@plt+0xe97c>
   1ff48:	b	1ff70 <__mempcpy_chk@plt+0xe990>
   1ff4c:	ldr	r1, [r8]
   1ff50:	str	r0, [r1, sl, lsl #2]
   1ff54:	cmp	r7, #0
   1ff58:	beq	1ff70 <__mempcpy_chk@plt+0xe990>
   1ff5c:	ldr	r0, [r6, #100]	; 0x64
   1ff60:	ldr	r0, [r0, sl, lsl #2]
   1ff64:	ldrb	r0, [r0, #52]	; 0x34
   1ff68:	tst	r0, #64	; 0x40
   1ff6c:	bne	1ff7c <__mempcpy_chk@plt+0xe99c>
   1ff70:	mov	r0, #0
   1ff74:	sub	sp, fp, #28
   1ff78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff7c:	mov	r0, r6
   1ff80:	mov	r1, r8
   1ff84:	mov	r2, sl
   1ff88:	mov	r3, r4
   1ff8c:	bl	20404 <__mempcpy_chk@plt+0xee24>
   1ff90:	str	r0, [sp, #8]
   1ff94:	cmp	r0, #0
   1ff98:	moveq	r0, #0
   1ff9c:	sub	sp, fp, #28
   1ffa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ffa8:	add	fp, sp, #28
   1ffac:	sub	sp, sp, #20
   1ffb0:	str	r3, [sp, #12]
   1ffb4:	mov	sl, r0
   1ffb8:	ldr	r0, [r0, #100]	; 0x64
   1ffbc:	ldr	r7, [r0, r2, lsl #2]
   1ffc0:	ldr	r0, [r7, #20]
   1ffc4:	cmp	r0, #1
   1ffc8:	blt	200d0 <__mempcpy_chk@plt+0xeaf0>
   1ffcc:	mov	r5, r2
   1ffd0:	mov	r6, r1
   1ffd4:	ldr	r8, [sl, #84]	; 0x54
   1ffd8:	add	r0, r1, #16
   1ffdc:	str	r0, [sp, #8]
   1ffe0:	add	r0, r2, #1
   1ffe4:	str	r0, [sp, #16]
   1ffe8:	mov	r9, #0
   1ffec:	ldr	r0, [r7, #24]
   1fff0:	ldr	r4, [r0, r9, lsl #2]
   1fff4:	ldr	r0, [r8]
   1fff8:	add	r0, r0, r4, lsl #3
   1fffc:	ldrb	r0, [r0, #6]
   20000:	tst	r0, #16
   20004:	beq	2002c <__mempcpy_chk@plt+0xea4c>
   20008:	ldr	r0, [r6, #12]
   2000c:	str	r0, [sp]
   20010:	mov	r0, sl
   20014:	mov	r1, r6
   20018:	mov	r2, r4
   2001c:	mov	r3, r5
   20020:	bl	20dec <__mempcpy_chk@plt+0xf80c>
   20024:	cmp	r0, #0
   20028:	bne	2007c <__mempcpy_chk@plt+0xea9c>
   2002c:	ldr	r0, [r8]
   20030:	add	r1, r0, r4, lsl #3
   20034:	mov	r0, sl
   20038:	mov	r2, r5
   2003c:	bl	1eec4 <__mempcpy_chk@plt+0xd8e4>
   20040:	cmp	r0, #0
   20044:	beq	200c0 <__mempcpy_chk@plt+0xeae0>
   20048:	ldr	r0, [r6]
   2004c:	ldr	r1, [sp, #16]
   20050:	ldr	r0, [r0, r1, lsl #2]
   20054:	cmp	r0, #0
   20058:	beq	200c0 <__mempcpy_chk@plt+0xeae0>
   2005c:	ldr	r1, [r8, #12]
   20060:	ldr	r1, [r1, r4, lsl #2]
   20064:	add	r0, r0, #4
   20068:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   2006c:	mov	r1, r0
   20070:	mov	r0, #1
   20074:	cmp	r1, #0
   20078:	beq	200c0 <__mempcpy_chk@plt+0xeae0>
   2007c:	ldr	r1, [r6, #20]
   20080:	cmp	r1, #0
   20084:	beq	200ac <__mempcpy_chk@plt+0xeacc>
   20088:	ldr	r1, [r8, #12]
   2008c:	ldr	r2, [r1, r4, lsl #2]
   20090:	stm	sp, {r4, r5}
   20094:	add	r3, r0, r5
   20098:	mov	r0, sl
   2009c:	ldr	r1, [sp, #8]
   200a0:	bl	20a84 <__mempcpy_chk@plt+0xf4a4>
   200a4:	cmp	r0, #0
   200a8:	bne	200c0 <__mempcpy_chk@plt+0xeae0>
   200ac:	ldr	r0, [sp, #12]
   200b0:	mov	r1, r4
   200b4:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   200b8:	cmp	r0, #0
   200bc:	beq	200dc <__mempcpy_chk@plt+0xeafc>
   200c0:	add	r9, r9, #1
   200c4:	ldr	r0, [r7, #20]
   200c8:	cmp	r9, r0
   200cc:	blt	1ffec <__mempcpy_chk@plt+0xea0c>
   200d0:	mov	r0, #0
   200d4:	sub	sp, fp, #28
   200d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200dc:	mov	r0, #12
   200e0:	sub	sp, fp, #28
   200e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   200ec:	add	fp, sp, #24
   200f0:	sub	sp, sp, #8
   200f4:	mov	r8, r2
   200f8:	mov	r5, r1
   200fc:	mov	r6, r0
   20100:	mov	r0, #0
   20104:	str	r0, [sp, #4]
   20108:	add	r0, sp, #4
   2010c:	mov	r1, r6
   20110:	mov	r2, r5
   20114:	bl	1e9ec <__mempcpy_chk@plt+0xd40c>
   20118:	ldr	r9, [sp, #4]
   2011c:	cmp	r9, #0
   20120:	bne	201ac <__mempcpy_chk@plt+0xebcc>
   20124:	mov	r7, r0
   20128:	ldr	r0, [r7, #28]!
   2012c:	cmp	r0, #0
   20130:	bne	20198 <__mempcpy_chk@plt+0xebb8>
   20134:	ldr	r1, [r5, #4]
   20138:	mov	r0, r7
   2013c:	bl	1aed4 <__mempcpy_chk@plt+0x98f4>
   20140:	str	r0, [sp, #4]
   20144:	mov	r9, #12
   20148:	cmp	r0, #0
   2014c:	bne	201ac <__mempcpy_chk@plt+0xebcc>
   20150:	ldr	r0, [r5, #4]
   20154:	cmp	r0, #1
   20158:	blt	20198 <__mempcpy_chk@plt+0xebb8>
   2015c:	mov	r4, #0
   20160:	ldr	r0, [r5, #8]
   20164:	ldr	r0, [r0, r4, lsl #2]
   20168:	add	r0, r0, r0, lsl #1
   2016c:	ldr	r1, [r6, #28]
   20170:	add	r1, r1, r0, lsl #2
   20174:	mov	r0, r7
   20178:	bl	1b190 <__mempcpy_chk@plt+0x9bb0>
   2017c:	cmp	r0, #0
   20180:	bne	201b8 <__mempcpy_chk@plt+0xebd8>
   20184:	add	r4, r4, #1
   20188:	ldr	r1, [r5, #4]
   2018c:	cmp	r4, r1
   20190:	blt	20160 <__mempcpy_chk@plt+0xeb80>
   20194:	str	r0, [sp, #4]
   20198:	mov	r0, r5
   2019c:	mov	r1, r8
   201a0:	mov	r2, r7
   201a4:	bl	206f0 <__mempcpy_chk@plt+0xf110>
   201a8:	mov	r9, r0
   201ac:	mov	r0, r9
   201b0:	sub	sp, fp, #24
   201b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   201b8:	str	r0, [sp, #4]
   201bc:	b	201ac <__mempcpy_chk@plt+0xebcc>
   201c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201c4:	add	fp, sp, #28
   201c8:	sub	sp, sp, #12
   201cc:	str	r2, [sp, #4]
   201d0:	mov	r6, r0
   201d4:	ldr	r0, [r3, #4]
   201d8:	cmp	r0, #1
   201dc:	blt	203f8 <__mempcpy_chk@plt+0xee18>
   201e0:	mov	r4, r3
   201e4:	mov	r9, r1
   201e8:	mov	r8, #0
   201ec:	str	r6, [sp]
   201f0:	str	r3, [sp, #8]
   201f4:	ldr	r0, [r4, #8]
   201f8:	ldr	r0, [r0, r8, lsl #2]
   201fc:	add	r0, r0, r0, lsl #1
   20200:	ldr	r1, [fp, #8]
   20204:	add	r1, r1, r0, lsl #3
   20208:	ldr	r2, [r1, #8]
   2020c:	ldr	r3, [fp, #12]
   20210:	cmp	r2, r3
   20214:	bge	203e8 <__mempcpy_chk@plt+0xee08>
   20218:	ldr	r1, [r1, #4]
   2021c:	ldr	r2, [fp, #12]
   20220:	cmp	r1, r2
   20224:	blt	203e8 <__mempcpy_chk@plt+0xee08>
   20228:	ldr	r1, [fp, #8]
   2022c:	ldr	r2, [r1, r0, lsl #3]!
   20230:	ldr	r0, [r6]
   20234:	ldr	sl, [r0, r2, lsl #3]
   20238:	ldr	r1, [r1, #12]
   2023c:	ldr	r2, [fp, #12]
   20240:	cmp	r1, r2
   20244:	bne	20378 <__mempcpy_chk@plt+0xed98>
   20248:	ldr	r1, [r9, #4]
   2024c:	cmp	r1, #1
   20250:	blt	203e8 <__mempcpy_chk@plt+0xee08>
   20254:	ldmib	r9, {r2, r3}
   20258:	mvn	ip, #0
   2025c:	mov	r7, #0
   20260:	mvn	r1, #0
   20264:	ldr	r5, [r3, r7, lsl #2]
   20268:	add	r4, r0, r5, lsl #3
   2026c:	ldrb	r4, [r4, #4]
   20270:	cmp	r4, #9
   20274:	beq	20290 <__mempcpy_chk@plt+0xecb0>
   20278:	cmp	r4, #8
   2027c:	bne	2029c <__mempcpy_chk@plt+0xecbc>
   20280:	ldr	r4, [r0, r5, lsl #3]
   20284:	cmp	sl, r4
   20288:	moveq	r1, r5
   2028c:	b	2029c <__mempcpy_chk@plt+0xecbc>
   20290:	ldr	r4, [r0, r5, lsl #3]
   20294:	cmp	sl, r4
   20298:	moveq	ip, r5
   2029c:	add	r7, r7, #1
   202a0:	cmp	r7, r2
   202a4:	blt	20264 <__mempcpy_chk@plt+0xec84>
   202a8:	cmp	r1, #0
   202ac:	blt	202d4 <__mempcpy_chk@plt+0xecf4>
   202b0:	mov	r0, r6
   202b4:	mov	r2, r9
   202b8:	ldr	r3, [sp, #4]
   202bc:	mov	r4, ip
   202c0:	bl	208dc <__mempcpy_chk@plt+0xf2fc>
   202c4:	mov	ip, r4
   202c8:	ldr	r6, [sp]
   202cc:	cmp	r0, #0
   202d0:	bne	203fc <__mempcpy_chk@plt+0xee1c>
   202d4:	cmp	ip, #0
   202d8:	ldr	r4, [sp, #8]
   202dc:	ldrge	r0, [r9, #4]
   202e0:	cmpge	r0, #1
   202e4:	blt	203e8 <__mempcpy_chk@plt+0xee08>
   202e8:	mov	sl, #0
   202ec:	ldr	r0, [r9, #8]
   202f0:	ldr	r4, [r0, sl, lsl #2]
   202f4:	add	r5, r4, r4, lsl #1
   202f8:	ldr	r0, [r6, #28]
   202fc:	add	r0, r0, r5, lsl #2
   20300:	mov	r1, ip
   20304:	mov	r7, ip
   20308:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   2030c:	cmp	r0, #0
   20310:	beq	2031c <__mempcpy_chk@plt+0xed3c>
   20314:	mov	ip, r7
   20318:	b	20360 <__mempcpy_chk@plt+0xed80>
   2031c:	ldr	r0, [r6, #24]
   20320:	add	r0, r0, r5, lsl #2
   20324:	mov	r5, r7
   20328:	mov	r1, r7
   2032c:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   20330:	cmp	r0, #0
   20334:	bne	2035c <__mempcpy_chk@plt+0xed7c>
   20338:	mov	r0, r6
   2033c:	mov	r1, r4
   20340:	mov	r2, r9
   20344:	ldr	r3, [sp, #4]
   20348:	bl	208dc <__mempcpy_chk@plt+0xf2fc>
   2034c:	cmp	r0, #0
   20350:	bne	203fc <__mempcpy_chk@plt+0xee1c>
   20354:	sub	sl, sl, #1
   20358:	ldr	r6, [sp]
   2035c:	mov	ip, r5
   20360:	ldr	r0, [r9, #4]
   20364:	add	sl, sl, #1
   20368:	cmp	sl, r0
   2036c:	ldr	r4, [sp, #8]
   20370:	blt	202ec <__mempcpy_chk@plt+0xed0c>
   20374:	b	203e8 <__mempcpy_chk@plt+0xee08>
   20378:	ldr	r0, [r9, #4]
   2037c:	cmp	r0, #1
   20380:	blt	203e8 <__mempcpy_chk@plt+0xee08>
   20384:	mov	r5, #0
   20388:	ldr	r0, [r9, #8]
   2038c:	ldr	r1, [r0, r5, lsl #2]
   20390:	ldr	r0, [r6]
   20394:	add	r2, r0, r1, lsl #3
   20398:	ldr	r2, [r2, #4]
   2039c:	and	r2, r2, #254	; 0xfe
   203a0:	orr	r2, r2, #1
   203a4:	cmp	r2, #9
   203a8:	ldreq	r0, [r0, r1, lsl #3]
   203ac:	cmpeq	sl, r0
   203b0:	beq	203c8 <__mempcpy_chk@plt+0xede8>
   203b4:	ldr	r0, [r9, #4]
   203b8:	add	r5, r5, #1
   203bc:	cmp	r5, r0
   203c0:	blt	20388 <__mempcpy_chk@plt+0xeda8>
   203c4:	b	203e8 <__mempcpy_chk@plt+0xee08>
   203c8:	mov	r0, r6
   203cc:	mov	r2, r9
   203d0:	ldr	r3, [sp, #4]
   203d4:	bl	208dc <__mempcpy_chk@plt+0xf2fc>
   203d8:	ldr	r6, [sp]
   203dc:	cmp	r0, #0
   203e0:	beq	203b4 <__mempcpy_chk@plt+0xedd4>
   203e4:	b	203fc <__mempcpy_chk@plt+0xee1c>
   203e8:	add	r8, r8, #1
   203ec:	ldr	r0, [r4, #4]
   203f0:	cmp	r8, r0
   203f4:	blt	201f4 <__mempcpy_chk@plt+0xec14>
   203f8:	mov	r0, #0
   203fc:	sub	sp, fp, #28
   20400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20408:	add	fp, sp, #28
   2040c:	sub	sp, sp, #84	; 0x54
   20410:	mov	r4, r3
   20414:	mov	r7, r2
   20418:	str	r1, [sp, #52]	; 0x34
   2041c:	ldr	r1, [r0, #84]	; 0x54
   20420:	str	r1, [sp, #48]	; 0x30
   20424:	str	r0, [sp, #44]	; 0x2c
   20428:	mov	r1, r2
   2042c:	bl	1dc40 <__mempcpy_chk@plt+0xc660>
   20430:	str	r0, [sp, #20]
   20434:	mov	sl, #0
   20438:	cmn	r0, #1
   2043c:	beq	206d4 <__mempcpy_chk@plt+0xf0f4>
   20440:	str	sl, [sp, #56]	; 0x38
   20444:	str	r4, [sp, #24]
   20448:	ldr	r0, [r4, #4]
   2044c:	cmp	r0, #1
   20450:	blt	206d4 <__mempcpy_chk@plt+0xf0f4>
   20454:	add	r0, r7, #1
   20458:	str	r0, [sp, #8]
   2045c:	add	r0, sp, #56	; 0x38
   20460:	add	r0, r0, #16
   20464:	str	r0, [sp, #28]
   20468:	ldr	r2, [sp, #52]	; 0x34
   2046c:	add	r0, r2, #16
   20470:	str	r0, [sp, #32]
   20474:	ldr	r0, [sp, #20]
   20478:	add	r0, r0, r0, lsl #1
   2047c:	str	r0, [sp, #16]
   20480:	lsl	r0, r0, #3
   20484:	str	r0, [sp, #12]
   20488:	mov	r1, #0
   2048c:	ldr	sl, [sp, #24]
   20490:	ldr	r3, [sp, #48]	; 0x30
   20494:	str	r7, [sp, #40]	; 0x28
   20498:	ldr	r0, [sl, #8]
   2049c:	str	r1, [sp, #36]	; 0x24
   204a0:	ldr	r9, [r0, r1, lsl #2]
   204a4:	ldr	r0, [r3]
   204a8:	add	r0, r0, r9, lsl #3
   204ac:	ldrb	r0, [r0, #4]
   204b0:	ldr	r1, [r2, #8]
   204b4:	cmp	r9, r1
   204b8:	bne	204d4 <__mempcpy_chk@plt+0xeef4>
   204bc:	cmp	r0, #4
   204c0:	bne	206a8 <__mempcpy_chk@plt+0xf0c8>
   204c4:	ldr	r0, [r2, #12]
   204c8:	cmp	r0, r7
   204cc:	bne	204dc <__mempcpy_chk@plt+0xeefc>
   204d0:	b	206a8 <__mempcpy_chk@plt+0xf0c8>
   204d4:	cmp	r0, #4
   204d8:	bne	206a8 <__mempcpy_chk@plt+0xf0c8>
   204dc:	ldr	r0, [sp, #44]	; 0x2c
   204e0:	ldr	r0, [r0, #116]	; 0x74
   204e4:	ldr	r1, [sp, #16]
   204e8:	add	r5, r0, r1, lsl #3
   204ec:	ldr	r4, [sp, #12]
   204f0:	ldr	r8, [sp, #20]
   204f4:	b	2050c <__mempcpy_chk@plt+0xef2c>
   204f8:	mov	r0, r5
   204fc:	ldr	r7, [sp, #40]	; 0x28
   20500:	ldr	r2, [sp, #52]	; 0x34
   20504:	ldr	r3, [sp, #48]	; 0x30
   20508:	b	20690 <__mempcpy_chk@plt+0xf0b0>
   2050c:	ldr	r0, [r5]
   20510:	cmp	r0, r9
   20514:	bne	2068c <__mempcpy_chk@plt+0xf0ac>
   20518:	ldr	r0, [r5, #8]
   2051c:	ldr	r1, [r5, #12]
   20520:	subs	r0, r1, r0
   20524:	add	r6, r0, r7
   20528:	beq	20538 <__mempcpy_chk@plt+0xef58>
   2052c:	ldr	r0, [r3, #12]
   20530:	add	r0, r0, r9, lsl #2
   20534:	b	20548 <__mempcpy_chk@plt+0xef68>
   20538:	ldr	r0, [r3, #20]
   2053c:	add	r1, r9, r9, lsl #1
   20540:	add	r0, r0, r1, lsl #2
   20544:	ldr	r0, [r0, #8]
   20548:	ldr	r1, [r2, #12]
   2054c:	cmp	r6, r1
   20550:	bgt	2068c <__mempcpy_chk@plt+0xf0ac>
   20554:	ldr	r1, [r2]
   20558:	ldr	r1, [r1, r6, lsl #2]
   2055c:	cmp	r1, #0
   20560:	beq	2068c <__mempcpy_chk@plt+0xf0ac>
   20564:	ldr	r7, [r0]
   20568:	add	r0, r1, #4
   2056c:	mov	r1, r7
   20570:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   20574:	cmp	r0, #0
   20578:	beq	204f8 <__mempcpy_chk@plt+0xef18>
   2057c:	str	r7, [sp]
   20580:	str	r6, [sp, #4]
   20584:	ldr	r0, [sp, #44]	; 0x2c
   20588:	ldr	r1, [sp, #32]
   2058c:	mov	r2, r9
   20590:	ldr	r7, [sp, #40]	; 0x28
   20594:	mov	r3, r7
   20598:	bl	20a84 <__mempcpy_chk@plt+0xf4a4>
   2059c:	cmp	r0, #0
   205a0:	mov	r0, r5
   205a4:	ldr	r2, [sp, #52]	; 0x34
   205a8:	ldr	r3, [sp, #48]	; 0x30
   205ac:	bne	20690 <__mempcpy_chk@plt+0xf0b0>
   205b0:	ldr	r0, [sp, #56]	; 0x38
   205b4:	cmp	r0, #0
   205b8:	bne	205ec <__mempcpy_chk@plt+0xf00c>
   205bc:	mov	r0, r2
   205c0:	mov	r1, #12
   205c4:	vld1.32	{d16-d17}, [r0], r1
   205c8:	vld1.32	{d18-d19}, [r0]
   205cc:	add	r0, sp, #56	; 0x38
   205d0:	vst1.64	{d16-d17}, [r0], r1
   205d4:	vst1.32	{d18-d19}, [r0]
   205d8:	ldr	r0, [sp, #28]
   205dc:	ldr	r1, [sp, #32]
   205e0:	bl	1b594 <__mempcpy_chk@plt+0x9fb4>
   205e4:	cmp	r0, #0
   205e8:	bne	206e0 <__mempcpy_chk@plt+0xf100>
   205ec:	str	r7, [sp, #68]	; 0x44
   205f0:	str	r9, [sp, #64]	; 0x40
   205f4:	ldr	r0, [sp, #28]
   205f8:	mov	r1, r8
   205fc:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   20600:	cmp	r0, #0
   20604:	beq	206e8 <__mempcpy_chk@plt+0xf108>
   20608:	mov	r0, r7
   2060c:	ldr	r7, [sp, #56]	; 0x38
   20610:	ldr	r5, [r7, r0, lsl #2]
   20614:	ldr	r0, [sp, #44]	; 0x2c
   20618:	add	r1, sp, #56	; 0x38
   2061c:	bl	1fcc4 <__mempcpy_chk@plt+0xe6e4>
   20620:	cmp	r0, #0
   20624:	bne	206e0 <__mempcpy_chk@plt+0xf100>
   20628:	ldr	r0, [sp, #52]	; 0x34
   2062c:	ldr	r1, [r0, #4]
   20630:	cmp	r1, #0
   20634:	beq	20650 <__mempcpy_chk@plt+0xf070>
   20638:	ldr	r0, [sp, #48]	; 0x30
   2063c:	mov	r2, r7
   20640:	ldr	r3, [sp, #8]
   20644:	bl	1fdd0 <__mempcpy_chk@plt+0xe7f0>
   20648:	cmp	r0, #0
   2064c:	bne	206e0 <__mempcpy_chk@plt+0xf100>
   20650:	ldr	r0, [sp, #40]	; 0x28
   20654:	str	r5, [r7, r0, lsl #2]
   20658:	mov	r7, r0
   2065c:	ldr	r5, [sp, #28]
   20660:	mov	r0, r5
   20664:	mov	r1, r8
   20668:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   2066c:	sub	r1, r0, #1
   20670:	mov	r0, r5
   20674:	bl	1ba08 <__mempcpy_chk@plt+0xa428>
   20678:	ldr	r0, [sp, #44]	; 0x2c
   2067c:	ldr	r0, [r0, #116]	; 0x74
   20680:	add	r0, r0, r4
   20684:	ldr	sl, [sp, #24]
   20688:	b	20500 <__mempcpy_chk@plt+0xef20>
   2068c:	mov	r0, r5
   20690:	add	r4, r4, #24
   20694:	add	r5, r0, #24
   20698:	add	r8, r8, #1
   2069c:	ldrb	r0, [r0, #20]
   206a0:	cmp	r0, #0
   206a4:	bne	2050c <__mempcpy_chk@plt+0xef2c>
   206a8:	ldr	r1, [sp, #36]	; 0x24
   206ac:	add	r1, r1, #1
   206b0:	ldr	r0, [sl, #4]
   206b4:	cmp	r1, r0
   206b8:	blt	20498 <__mempcpy_chk@plt+0xeeb8>
   206bc:	mov	sl, #0
   206c0:	ldr	r0, [sp, #56]	; 0x38
   206c4:	cmp	r0, #0
   206c8:	beq	206d4 <__mempcpy_chk@plt+0xf0f4>
   206cc:	ldr	r0, [sp, #80]	; 0x50
   206d0:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   206d4:	mov	r0, sl
   206d8:	sub	sp, fp, #28
   206dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   206e0:	mov	sl, r0
   206e4:	b	206c0 <__mempcpy_chk@plt+0xf0e0>
   206e8:	mov	sl, #12
   206ec:	b	206c0 <__mempcpy_chk@plt+0xf0e0>
   206f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206f4:	add	fp, sp, #28
   206f8:	sub	sp, sp, #4
   206fc:	mov	r9, r2
   20700:	mov	r8, r0
   20704:	ldr	r2, [r1, #4]
   20708:	mov	r0, #0
   2070c:	cmp	r2, #0
   20710:	beq	208c8 <__mempcpy_chk@plt+0xf2e8>
   20714:	mov	sl, r1
   20718:	ldr	r1, [r9, #4]
   2071c:	cmp	r1, #0
   20720:	beq	208c8 <__mempcpy_chk@plt+0xf2e8>
   20724:	add	r0, r1, r2
   20728:	ldm	r8, {r1, r2}
   2072c:	add	r2, r2, r0
   20730:	cmp	r2, r1
   20734:	ble	20758 <__mempcpy_chk@plt+0xf178>
   20738:	add	r4, r1, r0
   2073c:	lsl	r1, r4, #2
   20740:	ldr	r0, [r8, #8]
   20744:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   20748:	cmp	r0, #0
   2074c:	beq	208d0 <__mempcpy_chk@plt+0xf2f0>
   20750:	str	r4, [r8]
   20754:	str	r0, [r8, #8]
   20758:	ldr	r1, [r8, #4]
   2075c:	ldr	r6, [sl, #4]
   20760:	ldr	r0, [sl, #8]
   20764:	add	r3, r6, r1
   20768:	ldr	r5, [r9, #4]
   2076c:	ldr	r2, [r9, #8]
   20770:	add	ip, r3, r5
   20774:	sub	r7, r1, #1
   20778:	sub	r3, r5, #1
   2077c:	sub	r4, r6, #1
   20780:	ldr	r1, [r2, r3, lsl #2]
   20784:	ldr	r6, [r0, r4, lsl #2]
   20788:	cmp	r6, r1
   2078c:	beq	207a8 <__mempcpy_chk@plt+0xf1c8>
   20790:	blt	207d8 <__mempcpy_chk@plt+0xf1f8>
   20794:	sub	r1, r4, #1
   20798:	cmp	r4, #0
   2079c:	mov	r4, r1
   207a0:	bgt	20780 <__mempcpy_chk@plt+0xf1a0>
   207a4:	b	20828 <__mempcpy_chk@plt+0xf248>
   207a8:	cmp	r7, #0
   207ac:	blt	20808 <__mempcpy_chk@plt+0xf228>
   207b0:	ldr	r5, [r8, #8]
   207b4:	mov	r1, r7
   207b8:	ldr	r7, [r5, r1, lsl #2]
   207bc:	cmp	r7, r6
   207c0:	ble	207e4 <__mempcpy_chk@plt+0xf204>
   207c4:	sub	r7, r1, #1
   207c8:	cmp	r1, #0
   207cc:	mov	r1, r7
   207d0:	bgt	207b8 <__mempcpy_chk@plt+0xf1d8>
   207d4:	b	20808 <__mempcpy_chk@plt+0xf228>
   207d8:	subs	r3, r3, #1
   207dc:	bge	20780 <__mempcpy_chk@plt+0xf1a0>
   207e0:	b	20828 <__mempcpy_chk@plt+0xf248>
   207e4:	ldr	r7, [r8, #8]
   207e8:	ldr	r7, [r7, r1, lsl #2]
   207ec:	cmp	r7, r6
   207f0:	mov	r7, r1
   207f4:	bne	20808 <__mempcpy_chk@plt+0xf228>
   207f8:	mov	r7, r1
   207fc:	cmp	r4, #1
   20800:	bge	2081c <__mempcpy_chk@plt+0xf23c>
   20804:	b	20828 <__mempcpy_chk@plt+0xf248>
   20808:	ldr	r1, [r8, #8]
   2080c:	sub	ip, ip, #1
   20810:	str	r6, [r1, ip, lsl #2]
   20814:	cmp	r4, #1
   20818:	blt	20828 <__mempcpy_chk@plt+0xf248>
   2081c:	subs	r3, r3, #1
   20820:	sub	r4, r4, #1
   20824:	bge	20780 <__mempcpy_chk@plt+0xf1a0>
   20828:	ldr	r1, [sl, #4]
   2082c:	ldr	r7, [r8, #4]
   20830:	add	r0, r7, r1
   20834:	ldr	r3, [r9, #4]
   20838:	add	r0, r0, r3
   2083c:	sub	r0, r0, #1
   20840:	sub	r6, r0, ip
   20844:	add	r2, r6, #1
   20848:	add	r5, r2, r7
   2084c:	str	r5, [r8, #4]
   20850:	cmp	r7, #1
   20854:	cmpge	r6, #0
   20858:	blt	208b4 <__mempcpy_chk@plt+0xf2d4>
   2085c:	add	r3, r7, r3
   20860:	add	r1, r3, r1
   20864:	sub	r3, r1, ip
   20868:	ldr	r1, [r8, #8]
   2086c:	add	r3, r1, r3, lsl #2
   20870:	sub	r7, r7, #1
   20874:	ldr	r6, [r1, r7, lsl #2]
   20878:	ldr	r5, [r1, r0, lsl #2]
   2087c:	cmp	r5, r6
   20880:	bgt	2089c <__mempcpy_chk@plt+0xf2bc>
   20884:	str	r6, [r3, r7, lsl #2]
   20888:	sub	r6, r7, #1
   2088c:	cmp	r7, #0
   20890:	mov	r7, r6
   20894:	bgt	20874 <__mempcpy_chk@plt+0xf294>
   20898:	b	208b4 <__mempcpy_chk@plt+0xf2d4>
   2089c:	str	r5, [r3, r7, lsl #2]
   208a0:	sub	r3, r3, #4
   208a4:	subs	r2, r2, #1
   208a8:	sub	r0, r0, #1
   208ac:	bne	20874 <__mempcpy_chk@plt+0xf294>
   208b0:	mov	r2, #0
   208b4:	ldr	r0, [r8, #8]
   208b8:	add	r1, r0, ip, lsl #2
   208bc:	lsl	r2, r2, #2
   208c0:	bl	1134c <memcpy@plt>
   208c4:	mov	r0, #0
   208c8:	sub	sp, fp, #28
   208cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208d0:	mov	r0, #12
   208d4:	sub	sp, fp, #28
   208d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   208e0:	add	fp, sp, #28
   208e4:	sub	sp, sp, #28
   208e8:	str	r3, [sp]
   208ec:	mov	r7, r1
   208f0:	str	r0, [sp, #12]
   208f4:	ldr	r0, [r0, #28]
   208f8:	mov	r8, #0
   208fc:	str	r8, [sp, #20]
   20900:	str	r8, [sp, #16]
   20904:	str	r8, [sp, #24]
   20908:	add	r1, r1, r1, lsl #1
   2090c:	add	r1, r0, r1, lsl #2
   20910:	mov	r4, r1
   20914:	ldr	r0, [r4, #4]!
   20918:	cmp	r0, #1
   2091c:	blt	20a68 <__mempcpy_chk@plt+0xf488>
   20920:	str	r2, [sp, #4]
   20924:	str	r1, [sp, #8]
   20928:	add	r9, r1, #8
   2092c:	mov	r6, #0
   20930:	ldr	r0, [r9]
   20934:	ldr	r0, [r0, r6, lsl #2]
   20938:	cmp	r0, r7
   2093c:	beq	209fc <__mempcpy_chk@plt+0xf41c>
   20940:	ldr	r1, [sp, #12]
   20944:	ldr	r1, [r1]
   20948:	add	r1, r1, r0, lsl #3
   2094c:	ldrb	r1, [r1, #4]
   20950:	tst	r1, #8
   20954:	beq	209fc <__mempcpy_chk@plt+0xf41c>
   20958:	ldr	r1, [sp, #12]
   2095c:	ldr	r1, [r1, #20]
   20960:	add	r5, r0, r0, lsl #1
   20964:	add	r0, r1, r5, lsl #2
   20968:	ldr	r1, [r0, #4]
   2096c:	ldr	r0, [r0, #8]
   20970:	ldr	r8, [r0]
   20974:	mvn	sl, #0
   20978:	cmp	r1, #2
   2097c:	ldrge	sl, [r0, #4]
   20980:	ldr	r0, [sp, #8]
   20984:	mov	r1, r8
   20988:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   2098c:	cmp	r0, #0
   20990:	beq	209c8 <__mempcpy_chk@plt+0xf3e8>
   20994:	cmp	sl, #1
   20998:	blt	209fc <__mempcpy_chk@plt+0xf41c>
   2099c:	ldr	r0, [sp, #8]
   209a0:	mov	r1, sl
   209a4:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   209a8:	cmp	r0, #0
   209ac:	bne	209fc <__mempcpy_chk@plt+0xf41c>
   209b0:	ldr	r0, [sp, #4]
   209b4:	mov	r1, sl
   209b8:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   209bc:	cmp	r0, #0
   209c0:	bne	209dc <__mempcpy_chk@plt+0xf3fc>
   209c4:	b	209fc <__mempcpy_chk@plt+0xf41c>
   209c8:	ldr	r0, [sp, #4]
   209cc:	mov	r1, r8
   209d0:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   209d4:	cmp	r0, #0
   209d8:	beq	20994 <__mempcpy_chk@plt+0xf3b4>
   209dc:	ldr	r0, [sp, #12]
   209e0:	ldr	r0, [r0, #28]
   209e4:	add	r2, r0, r5, lsl #2
   209e8:	add	r0, sp, #16
   209ec:	ldr	r1, [sp]
   209f0:	bl	206f0 <__mempcpy_chk@plt+0xf110>
   209f4:	cmp	r0, #0
   209f8:	bne	20a7c <__mempcpy_chk@plt+0xf49c>
   209fc:	add	r6, r6, #1
   20a00:	ldr	r0, [r4]
   20a04:	cmp	r6, r0
   20a08:	blt	20930 <__mempcpy_chk@plt+0xf350>
   20a0c:	cmp	r0, #1
   20a10:	mov	r8, #0
   20a14:	ldr	r5, [sp, #4]
   20a18:	blt	20a68 <__mempcpy_chk@plt+0xf488>
   20a1c:	mov	r7, #0
   20a20:	add	sl, sp, #16
   20a24:	ldr	r0, [r9]
   20a28:	ldr	r6, [r0, r7, lsl #2]
   20a2c:	mov	r0, sl
   20a30:	mov	r1, r6
   20a34:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   20a38:	cmp	r0, #0
   20a3c:	bne	20a58 <__mempcpy_chk@plt+0xf478>
   20a40:	mov	r0, r5
   20a44:	mov	r1, r6
   20a48:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   20a4c:	sub	r1, r0, #1
   20a50:	mov	r0, r5
   20a54:	bl	1ba08 <__mempcpy_chk@plt+0xa428>
   20a58:	ldr	r0, [r4]
   20a5c:	add	r7, r7, #1
   20a60:	cmp	r7, r0
   20a64:	blt	20a24 <__mempcpy_chk@plt+0xf444>
   20a68:	ldr	r0, [sp, #24]
   20a6c:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   20a70:	mov	r0, r8
   20a74:	sub	sp, fp, #28
   20a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a7c:	mov	r8, r0
   20a80:	b	20a68 <__mempcpy_chk@plt+0xf488>
   20a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a88:	add	fp, sp, #28
   20a8c:	sub	sp, sp, #20
   20a90:	str	r2, [sp, #12]
   20a94:	mov	r6, r1
   20a98:	mov	r7, r0
   20a9c:	str	r3, [sp, #16]
   20aa0:	mov	r1, r3
   20aa4:	bl	1dc40 <__mempcpy_chk@plt+0xc660>
   20aa8:	str	r0, [sp, #8]
   20aac:	ldr	r1, [fp, #12]
   20ab0:	mov	r0, r7
   20ab4:	bl	1dc40 <__mempcpy_chk@plt+0xc660>
   20ab8:	mov	r4, r0
   20abc:	ldr	r0, [r6, #4]
   20ac0:	cmp	r0, #1
   20ac4:	blt	20b48 <__mempcpy_chk@plt+0xf568>
   20ac8:	ldr	sl, [r7, #84]	; 0x54
   20acc:	mov	r5, #0
   20ad0:	ldr	r0, [r6, #8]
   20ad4:	ldr	r1, [r0, r5, lsl #2]
   20ad8:	add	r0, r1, r1, lsl #1
   20adc:	ldr	r2, [r7, #116]	; 0x74
   20ae0:	ldr	r0, [r2, r0, lsl #3]
   20ae4:	ldr	r2, [sl]
   20ae8:	ldr	r9, [r2, r0, lsl #3]
   20aec:	ldr	r0, [sp, #16]
   20af0:	str	r0, [sp]
   20af4:	ldr	r0, [sp, #8]
   20af8:	str	r0, [sp, #4]
   20afc:	mov	r0, r7
   20b00:	mov	r2, r9
   20b04:	ldr	r3, [sp, #12]
   20b08:	bl	20b60 <__mempcpy_chk@plt+0xf580>
   20b0c:	mov	r8, r0
   20b10:	ldr	r0, [r6, #8]
   20b14:	ldr	r1, [r0, r5, lsl #2]
   20b18:	ldr	r0, [fp, #12]
   20b1c:	stm	sp, {r0, r4}
   20b20:	mov	r0, r7
   20b24:	mov	r2, r9
   20b28:	ldr	r3, [fp, #8]
   20b2c:	bl	20b60 <__mempcpy_chk@plt+0xf580>
   20b30:	cmp	r0, r8
   20b34:	bne	20b54 <__mempcpy_chk@plt+0xf574>
   20b38:	add	r5, r5, #1
   20b3c:	ldr	r0, [r6, #4]
   20b40:	cmp	r5, r0
   20b44:	blt	20ad0 <__mempcpy_chk@plt+0xf4f0>
   20b48:	mov	r0, #0
   20b4c:	sub	sp, fp, #28
   20b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b54:	mov	r0, #1
   20b58:	sub	sp, fp, #28
   20b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b60:	push	{r4, r5, fp, lr}
   20b64:	add	fp, sp, #8
   20b68:	sub	sp, sp, #8
   20b6c:	ldr	r4, [r0, #116]	; 0x74
   20b70:	add	r1, r1, r1, lsl #1
   20b74:	add	r4, r4, r1, lsl #3
   20b78:	ldr	ip, [r4, #8]
   20b7c:	mvn	r1, #0
   20b80:	ldr	lr, [fp, #8]
   20b84:	cmp	ip, lr
   20b88:	bgt	20bd8 <__mempcpy_chk@plt+0xf5f8>
   20b8c:	ldr	r4, [r4, #12]
   20b90:	mov	r1, #1
   20b94:	cmp	r4, lr
   20b98:	blt	20bd8 <__mempcpy_chk@plt+0xf5f8>
   20b9c:	sub	r1, r4, lr
   20ba0:	clz	r1, r1
   20ba4:	lsr	r4, r1, #5
   20ba8:	mov	r5, #1
   20bac:	lsl	r1, r4, #1
   20bb0:	cmp	ip, lr
   20bb4:	orreq	r1, r5, r4, lsl #1
   20bb8:	cmp	r1, #0
   20bbc:	beq	20bd4 <__mempcpy_chk@plt+0xf5f4>
   20bc0:	ldr	r5, [fp, #12]
   20bc4:	str	r5, [sp]
   20bc8:	bl	20be4 <__mempcpy_chk@plt+0xf604>
   20bcc:	sub	sp, fp, #8
   20bd0:	pop	{r4, r5, fp, pc}
   20bd4:	mov	r1, #0
   20bd8:	mov	r0, r1
   20bdc:	sub	sp, fp, #8
   20be0:	pop	{r4, r5, fp, pc}
   20be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20be8:	add	fp, sp, #28
   20bec:	sub	sp, sp, #36	; 0x24
   20bf0:	mov	r6, r2
   20bf4:	mov	r5, r1
   20bf8:	mov	r7, r0
   20bfc:	ldr	r4, [r0, #84]	; 0x54
   20c00:	ldr	r0, [r4, #24]
   20c04:	str	r3, [sp, #32]
   20c08:	add	r1, r3, r3, lsl #1
   20c0c:	add	r0, r0, r1, lsl #2
   20c10:	mov	r2, r0
   20c14:	ldr	r1, [r2, #4]!
   20c18:	str	r2, [sp, #24]
   20c1c:	cmp	r1, #1
   20c20:	blt	20db8 <__mempcpy_chk@plt+0xf7d8>
   20c24:	mov	r1, #1
   20c28:	mvn	r2, r1, lsl r6
   20c2c:	str	r2, [sp, #16]
   20c30:	lsl	r1, r1, r6
   20c34:	str	r1, [sp, #20]
   20c38:	mov	sl, #0
   20c3c:	cmp	r6, #31
   20c40:	mov	r1, #0
   20c44:	movwgt	r1, #1
   20c48:	and	r2, r5, #2
   20c4c:	str	r2, [sp, #8]
   20c50:	orr	r1, r1, r2, lsr #1
   20c54:	str	r1, [sp, #12]
   20c58:	add	r0, r0, #8
   20c5c:	str	r0, [sp, #28]
   20c60:	and	r0, r5, #1
   20c64:	str	r0, [sp, #4]
   20c68:	ldr	r0, [sp, #28]
   20c6c:	ldr	r0, [r0]
   20c70:	ldr	r8, [r0, sl, lsl #2]
   20c74:	ldr	r0, [r4]
   20c78:	add	r1, r0, r8, lsl #3
   20c7c:	ldrb	r1, [r1, #4]
   20c80:	cmp	r1, #9
   20c84:	beq	20d70 <__mempcpy_chk@plt+0xf790>
   20c88:	cmp	r1, #8
   20c8c:	beq	20d8c <__mempcpy_chk@plt+0xf7ac>
   20c90:	cmp	r1, #4
   20c94:	bne	20da4 <__mempcpy_chk@plt+0xf7c4>
   20c98:	ldr	r0, [fp, #8]
   20c9c:	cmn	r0, #1
   20ca0:	beq	20da4 <__mempcpy_chk@plt+0xf7c4>
   20ca4:	ldr	r0, [r7, #116]	; 0x74
   20ca8:	ldr	r1, [fp, #8]
   20cac:	add	r1, r1, r1, lsl #1
   20cb0:	add	r0, r0, r1, lsl #3
   20cb4:	add	r9, r0, #16
   20cb8:	ldr	r0, [r9, #-16]
   20cbc:	cmp	r0, r8
   20cc0:	bne	20d5c <__mempcpy_chk@plt+0xf77c>
   20cc4:	cmp	r6, #31
   20cc8:	bgt	20cdc <__mempcpy_chk@plt+0xf6fc>
   20ccc:	ldr	r0, [r9]
   20cd0:	ldr	r1, [sp, #20]
   20cd4:	tst	r0, r1
   20cd8:	beq	20d5c <__mempcpy_chk@plt+0xf77c>
   20cdc:	ldr	r0, [r4, #20]
   20ce0:	add	r1, r8, r8, lsl #1
   20ce4:	add	r0, r0, r1, lsl #2
   20ce8:	ldr	r0, [r0, #8]
   20cec:	ldr	r3, [r0]
   20cf0:	ldr	r0, [sp, #32]
   20cf4:	cmp	r3, r0
   20cf8:	beq	20dc4 <__mempcpy_chk@plt+0xf7e4>
   20cfc:	ldr	r0, [fp, #8]
   20d00:	str	r0, [sp]
   20d04:	mov	r0, r7
   20d08:	mov	r1, r5
   20d0c:	mov	r2, r6
   20d10:	bl	20be4 <__mempcpy_chk@plt+0xf604>
   20d14:	cmp	r0, #0
   20d18:	beq	20d30 <__mempcpy_chk@plt+0xf750>
   20d1c:	cmn	r0, #1
   20d20:	beq	20dd8 <__mempcpy_chk@plt+0xf7f8>
   20d24:	cmp	r6, #31
   20d28:	ble	20d4c <__mempcpy_chk@plt+0xf76c>
   20d2c:	b	20d5c <__mempcpy_chk@plt+0xf77c>
   20d30:	ldr	r0, [sp, #12]
   20d34:	cmp	r0, #0
   20d38:	beq	20d4c <__mempcpy_chk@plt+0xf76c>
   20d3c:	ldr	r0, [sp, #8]
   20d40:	cmp	r0, #0
   20d44:	beq	20d5c <__mempcpy_chk@plt+0xf77c>
   20d48:	b	20dd4 <__mempcpy_chk@plt+0xf7f4>
   20d4c:	ldr	r0, [r9]
   20d50:	ldr	r1, [sp, #16]
   20d54:	and	r0, r0, r1
   20d58:	str	r0, [r9]
   20d5c:	ldrb	r0, [r9, #4]
   20d60:	add	r9, r9, #24
   20d64:	cmp	r0, #0
   20d68:	bne	20cb8 <__mempcpy_chk@plt+0xf6d8>
   20d6c:	b	20da4 <__mempcpy_chk@plt+0xf7c4>
   20d70:	ldr	r1, [sp, #8]
   20d74:	cmp	r1, #0
   20d78:	beq	20da4 <__mempcpy_chk@plt+0xf7c4>
   20d7c:	ldr	r0, [r0, r8, lsl #3]
   20d80:	cmp	r0, r6
   20d84:	bne	20da4 <__mempcpy_chk@plt+0xf7c4>
   20d88:	b	20dd4 <__mempcpy_chk@plt+0xf7f4>
   20d8c:	ldr	r1, [sp, #4]
   20d90:	cmp	r1, #0
   20d94:	beq	20da4 <__mempcpy_chk@plt+0xf7c4>
   20d98:	ldr	r0, [r0, r8, lsl #3]
   20d9c:	cmp	r0, r6
   20da0:	beq	20de0 <__mempcpy_chk@plt+0xf800>
   20da4:	ldr	r0, [sp, #24]
   20da8:	ldr	r0, [r0]
   20dac:	add	sl, sl, #1
   20db0:	cmp	sl, r0
   20db4:	blt	20c68 <__mempcpy_chk@plt+0xf688>
   20db8:	ubfx	r0, r5, #1, #1
   20dbc:	sub	sp, fp, #28
   20dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20dc4:	ldr	r0, [sp, #4]
   20dc8:	rsb	r0, r0, #0
   20dcc:	sub	sp, fp, #28
   20dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20dd4:	mov	r0, #0
   20dd8:	sub	sp, fp, #28
   20ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20de0:	mvn	r0, #0
   20de4:	sub	sp, fp, #28
   20de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20dec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20df0:	add	fp, sp, #24
   20df4:	mov	r7, r3
   20df8:	mov	r5, r2
   20dfc:	mov	r8, r1
   20e00:	mov	r2, r0
   20e04:	ldr	r6, [r0, #84]	; 0x54
   20e08:	mov	r0, r6
   20e0c:	mov	r1, r5
   20e10:	bl	1ebf0 <__mempcpy_chk@plt+0xd610>
   20e14:	mov	r4, r0
   20e18:	cmp	r0, #1
   20e1c:	blt	20e58 <__mempcpy_chk@plt+0xf878>
   20e20:	ldr	r1, [fp, #8]
   20e24:	add	r0, r4, r7
   20e28:	cmp	r0, r1
   20e2c:	bgt	20e58 <__mempcpy_chk@plt+0xf878>
   20e30:	ldr	r1, [r8]
   20e34:	ldr	r0, [r1, r0, lsl #2]
   20e38:	cmp	r0, #0
   20e3c:	beq	20e60 <__mempcpy_chk@plt+0xf880>
   20e40:	ldr	r1, [r6, #12]
   20e44:	ldr	r1, [r1, r5, lsl #2]
   20e48:	add	r0, r0, #4
   20e4c:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   20e50:	cmp	r0, #0
   20e54:	moveq	r4, #0
   20e58:	mov	r0, r4
   20e5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20e60:	mov	r4, #0
   20e64:	mov	r0, r4
   20e68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20e6c:	mov	r1, #16
   20e70:	mov	r2, #0
   20e74:	add	r3, r0, #12
   20e78:	str	r2, [r0]
   20e7c:	stmib	r0, {r1, r3}
   20e80:	bx	lr
   20e84:	push	{r4, sl, fp, lr}
   20e88:	add	fp, sp, #8
   20e8c:	mov	r4, r0
   20e90:	ldr	r0, [r0]
   20e94:	cmp	r0, r1
   20e98:	bcs	20ecc <__mempcpy_chk@plt+0xf8ec>
   20e9c:	add	r2, r4, #12
   20ea0:	mov	r0, r4
   20ea4:	mov	r3, #8
   20ea8:	bl	223e4 <__mempcpy_chk@plt+0x10e04>
   20eac:	mov	r1, r0
   20eb0:	mov	r0, #1
   20eb4:	cmp	r1, #0
   20eb8:	popne	{r4, sl, fp, pc}
   20ebc:	mov	r0, r4
   20ec0:	bl	213d4 <__mempcpy_chk@plt+0xfdf4>
   20ec4:	mov	r0, #0
   20ec8:	pop	{r4, sl, fp, pc}
   20ecc:	str	r1, [r4]
   20ed0:	mov	r0, #1
   20ed4:	pop	{r4, sl, fp, pc}
   20ed8:	push	{r4, sl, fp, lr}
   20edc:	add	fp, sp, #8
   20ee0:	mov	r4, r0
   20ee4:	bl	213fc <__mempcpy_chk@plt+0xfe1c>
   20ee8:	mov	r0, r4
   20eec:	pop	{r4, sl, fp, lr}
   20ef0:	b	20e6c <__mempcpy_chk@plt+0xf88c>
   20ef4:	cmp	r0, #0
   20ef8:	bxeq	lr
   20efc:	push	{r4, r5, r6, sl, fp, lr}
   20f00:	add	fp, sp, #16
   20f04:	mov	r4, r0
   20f08:	ldr	r1, [r0]
   20f0c:	ldr	r0, [r0, #8]
   20f10:	cmp	r1, #1
   20f14:	blt	20f54 <__mempcpy_chk@plt+0xf974>
   20f18:	mov	r5, #0
   20f1c:	mov	r6, #0
   20f20:	add	r0, r0, r5
   20f24:	ldr	r0, [r0, #20]
   20f28:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   20f2c:	ldr	r0, [r4, #8]
   20f30:	add	r0, r0, r5
   20f34:	ldr	r0, [r0, #8]
   20f38:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   20f3c:	add	r5, r5, #24
   20f40:	add	r6, r6, #1
   20f44:	ldr	r1, [r4]
   20f48:	ldr	r0, [r4, #8]
   20f4c:	cmp	r6, r1
   20f50:	blt	20f20 <__mempcpy_chk@plt+0xf940>
   20f54:	pop	{r4, r5, r6, sl, fp, lr}
   20f58:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   20f5c:	ldr	r0, [r0, #8]
   20f60:	bx	lr
   20f64:	push	{r4, r5, fp, lr}
   20f68:	add	fp, sp, #8
   20f6c:	ldr	r4, [r0]
   20f70:	add	r0, r4, r3, lsl #3
   20f74:	ldr	r0, [r0, #4]
   20f78:	uxtb	r5, r0
   20f7c:	ldr	lr, [fp, #12]
   20f80:	ldr	ip, [fp, #8]
   20f84:	cmp	r5, #9
   20f88:	beq	20fb4 <__mempcpy_chk@plt+0xf9d4>
   20f8c:	cmp	r5, #8
   20f90:	bne	20fb0 <__mempcpy_chk@plt+0xf9d0>
   20f94:	ldr	r0, [r4, r3, lsl #3]
   20f98:	add	r0, r0, #1
   20f9c:	cmp	r0, lr
   20fa0:	strlt	ip, [r1, r0, lsl #3]!
   20fa4:	mvnlt	r0, #0
   20fa8:	strlt	r0, [r1, #4]
   20fac:	poplt	{r4, r5, fp, pc}
   20fb0:	pop	{r4, r5, fp, pc}
   20fb4:	ldr	r3, [r4, r3, lsl #3]
   20fb8:	add	r3, r3, #1
   20fbc:	cmp	r3, lr
   20fc0:	popge	{r4, r5, fp, pc}
   20fc4:	ldr	r4, [r1, r3, lsl #3]
   20fc8:	cmp	r4, ip
   20fcc:	bge	20fec <__mempcpy_chk@plt+0xfa0c>
   20fd0:	add	r0, r1, r3, lsl #3
   20fd4:	str	ip, [r0, #4]
   20fd8:	lsl	r3, lr, #3
   20fdc:	mov	r0, r2
   20fe0:	mov	r2, r3
   20fe4:	pop	{r4, r5, fp, lr}
   20fe8:	b	1134c <memcpy@plt>
   20fec:	tst	r0, #524288	; 0x80000
   20ff0:	ldrne	r0, [r2, r3, lsl #3]
   20ff4:	cmnne	r0, #1
   20ff8:	bne	21008 <__mempcpy_chk@plt+0xfa28>
   20ffc:	add	r0, r1, r3, lsl #3
   21000:	str	ip, [r0, #4]
   21004:	pop	{r4, r5, fp, pc}
   21008:	lsl	r3, lr, #3
   2100c:	mov	r0, r1
   21010:	mov	r1, r2
   21014:	b	20fe0 <__mempcpy_chk@plt+0xfa00>
   21018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2101c:	add	fp, sp, #24
   21020:	mov	r4, r0
   21024:	mvn	r0, #0
   21028:	cmp	r4, #0
   2102c:	beq	210cc <__mempcpy_chk@plt+0xfaec>
   21030:	mov	r5, r2
   21034:	ldr	r2, [r4]
   21038:	cmp	r2, #0
   2103c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   21040:	ldr	r9, [fp, #12]
   21044:	ldr	r8, [fp, #8]
   21048:	sub	r0, r2, #1
   2104c:	str	r0, [r4]
   21050:	ldr	r2, [r4, #8]
   21054:	add	r6, r0, r0, lsl #1
   21058:	ldr	r0, [r2, r6, lsl #3]!
   2105c:	str	r0, [r1]
   21060:	ldr	r1, [r2, #8]
   21064:	lsl	r7, r5, #3
   21068:	mov	r0, r3
   2106c:	mov	r2, r7
   21070:	bl	1134c <memcpy@plt>
   21074:	ldr	r0, [r4, #8]
   21078:	add	r0, r0, r6, lsl #3
   2107c:	ldr	r0, [r0, #8]
   21080:	add	r1, r0, r5, lsl #3
   21084:	mov	r0, r8
   21088:	mov	r2, r7
   2108c:	bl	1134c <memcpy@plt>
   21090:	ldr	r0, [r9, #8]
   21094:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   21098:	ldr	r0, [r4, #8]
   2109c:	add	r0, r0, r6, lsl #3
   210a0:	ldr	r0, [r0, #8]
   210a4:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   210a8:	ldr	r0, [r4, #8]
   210ac:	add	r0, r0, r6, lsl #3
   210b0:	vldr	d16, [r0, #12]
   210b4:	ldr	r0, [r0, #20]
   210b8:	str	r0, [r9, #8]
   210bc:	vstr	d16, [r9]
   210c0:	ldr	r0, [r4, #8]
   210c4:	add	r0, r0, r6, lsl #3
   210c8:	ldr	r0, [r0, #4]
   210cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   210d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210d4:	add	fp, sp, #28
   210d8:	sub	sp, sp, #20
   210dc:	mov	r9, r3
   210e0:	mov	r5, r0
   210e4:	ldr	r4, [r0, #84]	; 0x54
   210e8:	ldr	r3, [r4]
   210ec:	ldr	sl, [fp, #12]
   210f0:	add	r0, r3, sl, lsl #3
   210f4:	ldr	r7, [r0, #4]
   210f8:	ldr	r0, [fp, #16]
   210fc:	ldr	r6, [fp, #8]
   21100:	tst	r7, #8
   21104:	bne	211c0 <__mempcpy_chk@plt+0xfbe0>
   21108:	tst	r7, #1048576	; 0x100000
   2110c:	bne	21260 <__mempcpy_chk@plt+0xfc80>
   21110:	mov	ip, r1
   21114:	mov	r9, r6
   21118:	uxtb	r1, r7
   2111c:	cmp	r1, #4
   21120:	bne	21284 <__mempcpy_chk@plt+0xfca4>
   21124:	ldr	r0, [r3, sl, lsl #3]
   21128:	add	r0, r0, #1
   2112c:	mov	r7, #0
   21130:	mov	r6, ip
   21134:	cmp	r0, ip
   21138:	mov	r3, r2
   2113c:	movlt	r1, r3
   21140:	ldrlt	r2, [r1, r0, lsl #3]!
   21144:	ldrlt	r1, [r1, #4]
   21148:	sublt	r7, r1, r2
   2114c:	ldr	r1, [fp, #20]
   21150:	cmp	r1, #0
   21154:	beq	21308 <__mempcpy_chk@plt+0xfd28>
   21158:	mvn	r8, #0
   2115c:	cmp	r0, r6
   21160:	bge	21374 <__mempcpy_chk@plt+0xfd94>
   21164:	ldr	r1, [r3, r0, lsl #3]
   21168:	cmn	r1, #1
   2116c:	beq	21374 <__mempcpy_chk@plt+0xfd94>
   21170:	add	r0, r3, r0, lsl #3
   21174:	ldr	r0, [r0, #4]
   21178:	cmn	r0, #1
   2117c:	beq	21374 <__mempcpy_chk@plt+0xfd94>
   21180:	cmp	r7, #0
   21184:	beq	21380 <__mempcpy_chk@plt+0xfda0>
   21188:	mov	r0, r9
   2118c:	ldr	r2, [r9]
   21190:	ldr	r0, [r5, #28]
   21194:	sub	r0, r0, r2
   21198:	cmp	r0, r7
   2119c:	blt	21374 <__mempcpy_chk@plt+0xfd94>
   211a0:	ldr	r3, [r5, #4]
   211a4:	add	r0, r3, r1
   211a8:	add	r1, r3, r2
   211ac:	mov	r2, r7
   211b0:	bl	113a0 <memcmp@plt>
   211b4:	cmp	r0, #0
   211b8:	bne	21374 <__mempcpy_chk@plt+0xfd94>
   211bc:	b	21310 <__mempcpy_chk@plt+0xfd30>
   211c0:	str	r1, [sp, #12]
   211c4:	str	r2, [sp, #16]
   211c8:	ldr	r2, [r6]
   211cc:	ldr	r1, [r5, #100]	; 0x64
   211d0:	ldr	r5, [r1, r2, lsl #2]
   211d4:	ldr	r4, [r4, #20]
   211d8:	mov	r1, sl
   211dc:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   211e0:	cmp	r0, #0
   211e4:	bne	21200 <__mempcpy_chk@plt+0xfc20>
   211e8:	ldr	r0, [fp, #16]
   211ec:	mov	r1, sl
   211f0:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   211f4:	mvn	r8, #1
   211f8:	cmp	r0, #0
   211fc:	beq	21374 <__mempcpy_chk@plt+0xfd94>
   21200:	add	r0, sl, sl, lsl #1
   21204:	add	r1, r4, r0, lsl #2
   21208:	mov	r0, r1
   2120c:	ldr	r2, [r0, #4]!
   21210:	cmp	r2, #1
   21214:	blt	212ac <__mempcpy_chk@plt+0xfccc>
   21218:	add	sl, r5, #4
   2121c:	ldr	r7, [r1, #8]
   21220:	ldr	r6, [r0]
   21224:	mov	r5, #0
   21228:	mvn	r8, #0
   2122c:	ldr	r4, [r7, r5, lsl #2]
   21230:	mov	r0, sl
   21234:	mov	r1, r4
   21238:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   2123c:	cmp	r0, #0
   21240:	beq	21250 <__mempcpy_chk@plt+0xfc70>
   21244:	cmn	r8, #1
   21248:	bne	212b4 <__mempcpy_chk@plt+0xfcd4>
   2124c:	mov	r8, r4
   21250:	add	r5, r5, #1
   21254:	cmp	r5, r6
   21258:	blt	2122c <__mempcpy_chk@plt+0xfc4c>
   2125c:	b	21374 <__mempcpy_chk@plt+0xfd94>
   21260:	mov	r9, r6
   21264:	ldr	r3, [r6]
   21268:	mov	r0, r4
   2126c:	mov	r1, sl
   21270:	mov	r2, r5
   21274:	bl	1ebf0 <__mempcpy_chk@plt+0xd610>
   21278:	mov	r7, r0
   2127c:	cmp	r0, #0
   21280:	bne	21310 <__mempcpy_chk@plt+0xfd30>
   21284:	ldr	r0, [r4]
   21288:	add	r1, r0, sl, lsl #3
   2128c:	ldr	r2, [r9]
   21290:	mov	r0, r5
   21294:	bl	1eec4 <__mempcpy_chk@plt+0xd8e4>
   21298:	mvn	r8, #0
   2129c:	mov	r7, #1
   212a0:	cmp	r0, #0
   212a4:	bne	21310 <__mempcpy_chk@plt+0xfd30>
   212a8:	b	21374 <__mempcpy_chk@plt+0xfd94>
   212ac:	mvn	r8, #0
   212b0:	b	21374 <__mempcpy_chk@plt+0xfd94>
   212b4:	ldr	r5, [fp, #16]
   212b8:	mov	r0, r5
   212bc:	mov	r1, r8
   212c0:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   212c4:	cmp	r0, #0
   212c8:	bne	21370 <__mempcpy_chk@plt+0xfd90>
   212cc:	ldr	r0, [fp, #20]
   212d0:	cmp	r0, #0
   212d4:	beq	21374 <__mempcpy_chk@plt+0xfd94>
   212d8:	ldr	r1, [fp, #8]
   212dc:	ldr	r1, [r1]
   212e0:	ldr	r2, [sp, #16]
   212e4:	stm	sp, {r2, r9}
   212e8:	str	r5, [sp, #8]
   212ec:	mov	r2, r4
   212f0:	ldr	r3, [sp, #12]
   212f4:	bl	21414 <__mempcpy_chk@plt+0xfe34>
   212f8:	mvn	r4, #1
   212fc:	cmp	r0, #0
   21300:	movne	r8, r4
   21304:	b	21374 <__mempcpy_chk@plt+0xfd94>
   21308:	cmp	r7, #0
   2130c:	beq	21380 <__mempcpy_chk@plt+0xfda0>
   21310:	ldr	r0, [r4, #12]
   21314:	ldr	r4, [r0, sl, lsl #2]
   21318:	ldr	r0, [r9]
   2131c:	add	r0, r0, r7
   21320:	str	r0, [r9]
   21324:	ldr	r1, [fp, #20]
   21328:	cmp	r1, #0
   2132c:	beq	21364 <__mempcpy_chk@plt+0xfd84>
   21330:	ldr	r1, [r5, #92]	; 0x5c
   21334:	mvn	r8, #0
   21338:	cmp	r0, r1
   2133c:	bgt	21374 <__mempcpy_chk@plt+0xfd94>
   21340:	ldr	r1, [r5, #100]	; 0x64
   21344:	ldr	r0, [r1, r0, lsl #2]
   21348:	cmp	r0, #0
   2134c:	beq	21374 <__mempcpy_chk@plt+0xfd94>
   21350:	add	r0, r0, #4
   21354:	mov	r1, r4
   21358:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   2135c:	cmp	r0, #0
   21360:	beq	21374 <__mempcpy_chk@plt+0xfd94>
   21364:	mov	r0, #0
   21368:	ldr	r1, [fp, #16]
   2136c:	str	r0, [r1, #4]
   21370:	mov	r8, r4
   21374:	mov	r0, r8
   21378:	sub	sp, fp, #28
   2137c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21380:	ldr	r0, [fp, #16]
   21384:	mov	r1, sl
   21388:	bl	1b3ac <__mempcpy_chk@plt+0x9dcc>
   2138c:	cmp	r0, #0
   21390:	beq	213cc <__mempcpy_chk@plt+0xfdec>
   21394:	ldr	r0, [r4, #20]
   21398:	add	r1, sl, sl, lsl #1
   2139c:	add	r0, r0, r1, lsl #2
   213a0:	ldr	r0, [r0, #8]
   213a4:	ldr	r8, [r0]
   213a8:	ldr	r0, [r9]
   213ac:	ldr	r1, [r5, #100]	; 0x64
   213b0:	ldr	r0, [r1, r0, lsl #2]
   213b4:	add	r0, r0, #4
   213b8:	mov	r1, r8
   213bc:	bl	1b610 <__mempcpy_chk@plt+0xa030>
   213c0:	cmp	r0, #0
   213c4:	bne	21374 <__mempcpy_chk@plt+0xfd94>
   213c8:	b	21284 <__mempcpy_chk@plt+0xfca4>
   213cc:	mvn	r8, #1
   213d0:	b	21374 <__mempcpy_chk@plt+0xfd94>
   213d4:	push	{r4, sl, fp, lr}
   213d8:	add	fp, sp, #8
   213dc:	mov	r4, r0
   213e0:	bl	213fc <__mempcpy_chk@plt+0xfe1c>
   213e4:	mov	r0, #0
   213e8:	add	r1, r4, #12
   213ec:	mvn	r2, #0
   213f0:	stm	r4, {r0, r2}
   213f4:	str	r1, [r4, #8]
   213f8:	pop	{r4, sl, fp, pc}
   213fc:	mov	r1, r0
   21400:	ldr	r0, [r0, #8]
   21404:	add	r1, r1, #12
   21408:	cmp	r0, r1
   2140c:	bxeq	lr
   21410:	b	12b9c <__mempcpy_chk@plt+0x15bc>
   21414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21418:	add	fp, sp, #28
   2141c:	sub	sp, sp, #12
   21420:	mov	r6, r3
   21424:	mov	r9, r2
   21428:	mov	r5, r1
   2142c:	mov	r4, r0
   21430:	ldr	r7, [r0]
   21434:	ldr	r1, [r0, #4]
   21438:	add	r0, r7, #1
   2143c:	str	r0, [r4]
   21440:	ldr	r2, [fp, #16]
   21444:	str	r2, [sp, #8]
   21448:	ldr	r2, [fp, #12]
   2144c:	str	r2, [sp, #4]
   21450:	ldr	sl, [fp, #8]
   21454:	cmp	r0, r1
   21458:	bne	21484 <__mempcpy_chk@plt+0xfea4>
   2145c:	ldr	r0, [r4, #8]
   21460:	add	r1, r1, r1, lsl #1
   21464:	lsl	r1, r1, #4
   21468:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   2146c:	cmp	r0, #0
   21470:	beq	214f8 <__mempcpy_chk@plt+0xff18>
   21474:	str	r0, [r4, #8]
   21478:	ldr	r0, [r4, #4]
   2147c:	lsl	r0, r0, #1
   21480:	str	r0, [r4, #4]
   21484:	ldr	r0, [r4, #8]
   21488:	add	r8, r7, r7, lsl #1
   2148c:	str	r5, [r0, r8, lsl #3]!
   21490:	str	r9, [r0, #4]
   21494:	lsl	r0, r6, #4
   21498:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   2149c:	ldr	r1, [r4, #8]
   214a0:	add	r1, r1, r8, lsl #3
   214a4:	str	r0, [r1, #8]
   214a8:	cmp	r0, #0
   214ac:	beq	214f8 <__mempcpy_chk@plt+0xff18>
   214b0:	lsl	r5, r6, #3
   214b4:	mov	r1, sl
   214b8:	mov	r2, r5
   214bc:	bl	1134c <memcpy@plt>
   214c0:	ldr	r0, [r4, #8]
   214c4:	add	r0, r0, r8, lsl #3
   214c8:	ldr	r0, [r0, #8]
   214cc:	add	r0, r0, r6, lsl #3
   214d0:	ldr	r1, [sp, #4]
   214d4:	mov	r2, r5
   214d8:	bl	1134c <memcpy@plt>
   214dc:	ldr	r0, [r4, #8]
   214e0:	add	r0, r0, r8, lsl #3
   214e4:	add	r0, r0, #12
   214e8:	ldr	r1, [sp, #8]
   214ec:	sub	sp, fp, #28
   214f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   214f4:	b	1b594 <__mempcpy_chk@plt+0x9fb4>
   214f8:	mov	r0, #12
   214fc:	sub	sp, fp, #28
   21500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21504:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21508:	add	fp, sp, #24
   2150c:	mov	r7, r2
   21510:	mov	r5, r1
   21514:	mov	r6, r0
   21518:	movw	r9, #0
   2151c:	movt	r9, #32752	; 0x7ff0
   21520:	mov	r0, r6
   21524:	mov	r1, r5
   21528:	mov	r2, r7
   2152c:	bl	112f8 <read@plt>
   21530:	mov	r4, r0
   21534:	cmn	r0, #1
   21538:	movgt	r0, r4
   2153c:	popgt	{r4, r5, r6, r7, r8, r9, fp, pc}
   21540:	bl	114d8 <__errno_location@plt>
   21544:	ldr	r0, [r0]
   21548:	cmp	r0, #4
   2154c:	beq	21520 <__mempcpy_chk@plt+0xff40>
   21550:	cmp	r7, r9
   21554:	mov	r1, #0
   21558:	movwhi	r1, #1
   2155c:	sub	r2, r0, #22
   21560:	clz	r2, r2
   21564:	lsr	r2, r2, #5
   21568:	ands	r1, r1, r2
   2156c:	moveq	r8, r4
   21570:	mov	r1, r7
   21574:	movwne	r1, #0
   21578:	movtne	r1, #32752	; 0x7ff0
   2157c:	cmp	r7, r9
   21580:	bls	21590 <__mempcpy_chk@plt+0xffb0>
   21584:	cmp	r0, #22
   21588:	mov	r7, r1
   2158c:	beq	21520 <__mempcpy_chk@plt+0xff40>
   21590:	mov	r0, r8
   21594:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21598:	push	{fp, lr}
   2159c:	mov	fp, sp
   215a0:	bl	1146c <mkstemp64@plt>
   215a4:	pop	{fp, lr}
   215a8:	b	215c8 <__mempcpy_chk@plt+0xffe8>
   215ac:	push	{r4, sl, fp, lr}
   215b0:	add	fp, sp, #8
   215b4:	mov	r4, r1
   215b8:	bl	113f4 <mkostemp64@plt>
   215bc:	mov	r1, r4
   215c0:	pop	{r4, sl, fp, lr}
   215c4:	b	22544 <__mempcpy_chk@plt+0x10f64>
   215c8:	push	{r4, r5, r6, r7, fp, lr}
   215cc:	add	fp, sp, #16
   215d0:	mov	r4, r0
   215d4:	cmp	r0, #2
   215d8:	movhi	r0, r4
   215dc:	pophi	{r4, r5, r6, r7, fp, pc}
   215e0:	mov	r0, r4
   215e4:	bl	22728 <__mempcpy_chk@plt+0x11148>
   215e8:	mov	r5, r0
   215ec:	bl	114d8 <__errno_location@plt>
   215f0:	mov	r6, r0
   215f4:	ldr	r7, [r0]
   215f8:	mov	r0, r4
   215fc:	bl	115d4 <close@plt>
   21600:	str	r7, [r6]
   21604:	mov	r0, r5
   21608:	pop	{r4, r5, r6, r7, fp, pc}
   2160c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21610:	add	fp, sp, #24
   21614:	sub	sp, sp, #32
   21618:	mov	r4, r2
   2161c:	mov	r8, r0
   21620:	ldr	r6, [fp, #12]
   21624:	ldr	r7, [fp, #8]
   21628:	cmp	r1, #0
   2162c:	beq	21654 <__mempcpy_chk@plt+0x10074>
   21630:	mov	r5, r1
   21634:	str	r4, [sp]
   21638:	str	r3, [sp, #4]
   2163c:	movw	r2, #13753	; 0x35b9
   21640:	movt	r2, #2
   21644:	mov	r0, r8
   21648:	mov	r1, #1
   2164c:	mov	r3, r5
   21650:	b	2166c <__mempcpy_chk@plt+0x1008c>
   21654:	str	r3, [sp]
   21658:	movw	r2, #13765	; 0x35c5
   2165c:	movt	r2, #2
   21660:	mov	r0, r8
   21664:	mov	r1, #1
   21668:	mov	r3, r4
   2166c:	bl	1152c <__fprintf_chk@plt>
   21670:	movw	r1, #13772	; 0x35cc
   21674:	movt	r1, #2
   21678:	mov	r0, #0
   2167c:	mov	r2, #5
   21680:	bl	113ac <dcgettext@plt>
   21684:	mov	r3, r0
   21688:	movw	r0, #2022	; 0x7e6
   2168c:	str	r0, [sp]
   21690:	movw	r2, #14490	; 0x389a
   21694:	movt	r2, #2
   21698:	mov	r0, r8
   2169c:	mov	r1, #1
   216a0:	bl	1152c <__fprintf_chk@plt>
   216a4:	movw	r4, #12440	; 0x3098
   216a8:	movt	r4, #2
   216ac:	mov	r0, r4
   216b0:	mov	r1, r8
   216b4:	bl	112b0 <fputs_unlocked@plt>
   216b8:	movw	r1, #13776	; 0x35d0
   216bc:	movt	r1, #2
   216c0:	mov	r0, #0
   216c4:	mov	r2, #5
   216c8:	bl	113ac <dcgettext@plt>
   216cc:	mov	r2, r0
   216d0:	movw	r3, #13947	; 0x367b
   216d4:	movt	r3, #2
   216d8:	mov	r0, r8
   216dc:	mov	r1, #1
   216e0:	bl	1152c <__fprintf_chk@plt>
   216e4:	mov	r0, r4
   216e8:	mov	r1, r8
   216ec:	bl	112b0 <fputs_unlocked@plt>
   216f0:	cmp	r6, #9
   216f4:	bhi	21730 <__mempcpy_chk@plt+0x10150>
   216f8:	add	r0, pc, #0
   216fc:	ldr	pc, [r0, r6, lsl #2]
   21700:	andeq	r1, r2, r8, lsr #14
   21704:	andeq	r1, r2, ip, lsr r7
   21708:	andeq	r1, r2, ip, ror #14
   2170c:	muleq	r2, r4, r7
   21710:			; <UNDEFINED> instruction: 0x000217bc
   21714:	andeq	r1, r2, r4, ror #15
   21718:	andeq	r1, r2, ip, lsl #16
   2171c:	andeq	r1, r2, r4, asr #16
   21720:	andeq	r1, r2, r4, ror #17
   21724:	andeq	r1, r2, ip, lsl #17
   21728:	sub	sp, fp, #24
   2172c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21730:	movw	r1, #14300	; 0x37dc
   21734:	movt	r1, #2
   21738:	b	21894 <__mempcpy_chk@plt+0x102b4>
   2173c:	movw	r1, #13981	; 0x369d
   21740:	movt	r1, #2
   21744:	mov	r0, #0
   21748:	mov	r2, #5
   2174c:	bl	113ac <dcgettext@plt>
   21750:	mov	r2, r0
   21754:	ldr	r3, [r7]
   21758:	mov	r0, r8
   2175c:	mov	r1, #1
   21760:	sub	sp, fp, #24
   21764:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   21768:	b	1152c <__fprintf_chk@plt>
   2176c:	movw	r1, #13997	; 0x36ad
   21770:	movt	r1, #2
   21774:	mov	r0, #0
   21778:	mov	r2, #5
   2177c:	bl	113ac <dcgettext@plt>
   21780:	mov	r2, r0
   21784:	ldr	r3, [r7]
   21788:	ldr	r0, [r7, #4]
   2178c:	str	r0, [sp]
   21790:	b	21880 <__mempcpy_chk@plt+0x102a0>
   21794:	movw	r1, #14020	; 0x36c4
   21798:	movt	r1, #2
   2179c:	mov	r0, #0
   217a0:	mov	r2, #5
   217a4:	bl	113ac <dcgettext@plt>
   217a8:	mov	r2, r0
   217ac:	ldr	r3, [r7]
   217b0:	ldmib	r7, {r0, r1}
   217b4:	stm	sp, {r0, r1}
   217b8:	b	21880 <__mempcpy_chk@plt+0x102a0>
   217bc:	movw	r1, #14048	; 0x36e0
   217c0:	movt	r1, #2
   217c4:	mov	r0, #0
   217c8:	mov	r2, #5
   217cc:	bl	113ac <dcgettext@plt>
   217d0:	mov	r2, r0
   217d4:	ldr	r3, [r7]
   217d8:	ldmib	r7, {r0, r1, r7}
   217dc:	stm	sp, {r0, r1, r7}
   217e0:	b	21880 <__mempcpy_chk@plt+0x102a0>
   217e4:	movw	r1, #14080	; 0x3700
   217e8:	movt	r1, #2
   217ec:	mov	r0, #0
   217f0:	mov	r2, #5
   217f4:	bl	113ac <dcgettext@plt>
   217f8:	mov	r2, r0
   217fc:	ldr	r3, [r7]
   21800:	ldmib	r7, {r0, r1, r6, r7}
   21804:	stm	sp, {r0, r1, r6, r7}
   21808:	b	21880 <__mempcpy_chk@plt+0x102a0>
   2180c:	movw	r1, #14116	; 0x3724
   21810:	movt	r1, #2
   21814:	mov	r0, #0
   21818:	mov	r2, #5
   2181c:	bl	113ac <dcgettext@plt>
   21820:	mov	r2, r0
   21824:	ldr	r3, [r7]
   21828:	ldmib	r7, {r0, r1, r6}
   2182c:	ldr	r5, [r7, #16]
   21830:	ldr	r7, [r7, #20]
   21834:	stm	sp, {r0, r1, r6}
   21838:	str	r5, [sp, #12]
   2183c:	str	r7, [sp, #16]
   21840:	b	21880 <__mempcpy_chk@plt+0x102a0>
   21844:	movw	r1, #14156	; 0x374c
   21848:	movt	r1, #2
   2184c:	mov	r0, #0
   21850:	mov	r2, #5
   21854:	bl	113ac <dcgettext@plt>
   21858:	mov	r2, r0
   2185c:	ldr	r3, [r7]
   21860:	ldmib	r7, {r0, r1, r6}
   21864:	ldr	r5, [r7, #16]
   21868:	ldr	r4, [r7, #20]
   2186c:	ldr	r7, [r7, #24]
   21870:	stm	sp, {r0, r1, r6}
   21874:	str	r5, [sp, #12]
   21878:	str	r4, [sp, #16]
   2187c:	str	r7, [sp, #20]
   21880:	mov	r0, r8
   21884:	mov	r1, #1
   21888:	b	21934 <__mempcpy_chk@plt+0x10354>
   2188c:	movw	r1, #14248	; 0x37a8
   21890:	movt	r1, #2
   21894:	mov	r0, #0
   21898:	mov	r2, #5
   2189c:	bl	113ac <dcgettext@plt>
   218a0:	mov	ip, r0
   218a4:	ldr	r3, [r7]
   218a8:	ldr	r0, [r7, #4]
   218ac:	ldr	r1, [r7, #8]
   218b0:	ldr	r6, [r7, #12]
   218b4:	ldr	r5, [r7, #16]
   218b8:	ldr	r4, [r7, #20]
   218bc:	ldr	r2, [r7, #24]
   218c0:	ldr	lr, [r7, #28]
   218c4:	ldr	r7, [r7, #32]
   218c8:	stm	sp, {r0, r1, r6}
   218cc:	str	r5, [sp, #12]
   218d0:	str	r4, [sp, #16]
   218d4:	str	r2, [sp, #20]
   218d8:	str	lr, [sp, #24]
   218dc:	str	r7, [sp, #28]
   218e0:	b	21928 <__mempcpy_chk@plt+0x10348>
   218e4:	movw	r1, #14200	; 0x3778
   218e8:	movt	r1, #2
   218ec:	mov	r0, #0
   218f0:	mov	r2, #5
   218f4:	bl	113ac <dcgettext@plt>
   218f8:	mov	ip, r0
   218fc:	ldr	r3, [r7]
   21900:	ldmib	r7, {r0, r1, r6}
   21904:	ldr	r5, [r7, #16]
   21908:	ldr	r4, [r7, #20]
   2190c:	ldr	r2, [r7, #24]
   21910:	ldr	r7, [r7, #28]
   21914:	stm	sp, {r0, r1, r6}
   21918:	str	r5, [sp, #12]
   2191c:	str	r4, [sp, #16]
   21920:	str	r2, [sp, #20]
   21924:	str	r7, [sp, #24]
   21928:	mov	r0, r8
   2192c:	mov	r1, #1
   21930:	mov	r2, ip
   21934:	bl	1152c <__fprintf_chk@plt>
   21938:	sub	sp, fp, #24
   2193c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21940:	push	{r4, sl, fp, lr}
   21944:	add	fp, sp, #8
   21948:	sub	sp, sp, #8
   2194c:	mov	lr, #0
   21950:	ldr	ip, [fp, #8]
   21954:	ldr	r4, [ip, lr, lsl #2]
   21958:	add	lr, lr, #1
   2195c:	cmp	r4, #0
   21960:	bne	21954 <__mempcpy_chk@plt+0x10374>
   21964:	sub	r4, lr, #1
   21968:	str	ip, [sp]
   2196c:	str	r4, [sp, #4]
   21970:	bl	2160c <__mempcpy_chk@plt+0x1002c>
   21974:	sub	sp, fp, #8
   21978:	pop	{r4, sl, fp, pc}
   2197c:	push	{r4, r5, fp, lr}
   21980:	add	fp, sp, #8
   21984:	sub	sp, sp, #48	; 0x30
   21988:	mov	ip, #0
   2198c:	ldr	r4, [fp, #8]
   21990:	add	lr, sp, #8
   21994:	ldr	r5, [r4]
   21998:	str	r5, [lr, ip, lsl #2]
   2199c:	cmp	r5, #0
   219a0:	beq	219b4 <__mempcpy_chk@plt+0x103d4>
   219a4:	add	ip, ip, #1
   219a8:	add	r4, r4, #4
   219ac:	cmp	ip, #10
   219b0:	bcc	21994 <__mempcpy_chk@plt+0x103b4>
   219b4:	str	lr, [sp]
   219b8:	str	ip, [sp, #4]
   219bc:	bl	2160c <__mempcpy_chk@plt+0x1002c>
   219c0:	sub	sp, fp, #8
   219c4:	pop	{r4, r5, fp, pc}
   219c8:	push	{fp, lr}
   219cc:	mov	fp, sp
   219d0:	sub	sp, sp, #8
   219d4:	add	ip, fp, #8
   219d8:	str	ip, [sp, #4]
   219dc:	str	ip, [sp]
   219e0:	bl	2197c <__mempcpy_chk@plt+0x1039c>
   219e4:	mov	sp, fp
   219e8:	pop	{fp, pc}
   219ec:	push	{fp, lr}
   219f0:	mov	fp, sp
   219f4:	movw	r0, #16788	; 0x4194
   219f8:	movt	r0, #3
   219fc:	ldr	r1, [r0]
   21a00:	movw	r0, #12440	; 0x3098
   21a04:	movt	r0, #2
   21a08:	bl	112b0 <fputs_unlocked@plt>
   21a0c:	movw	r1, #14360	; 0x3818
   21a10:	movt	r1, #2
   21a14:	mov	r0, #0
   21a18:	mov	r2, #5
   21a1c:	bl	113ac <dcgettext@plt>
   21a20:	mov	r1, r0
   21a24:	movw	r2, #14380	; 0x382c
   21a28:	movt	r2, #2
   21a2c:	mov	r0, #1
   21a30:	bl	11514 <__printf_chk@plt>
   21a34:	movw	r1, #14402	; 0x3842
   21a38:	movt	r1, #2
   21a3c:	mov	r0, #0
   21a40:	mov	r2, #5
   21a44:	bl	113ac <dcgettext@plt>
   21a48:	mov	r1, r0
   21a4c:	movw	r2, #11932	; 0x2e9c
   21a50:	movt	r2, #2
   21a54:	movw	r3, #12249	; 0x2fd9
   21a58:	movt	r3, #2
   21a5c:	mov	r0, #1
   21a60:	bl	11514 <__printf_chk@plt>
   21a64:	movw	r1, #14422	; 0x3856
   21a68:	movt	r1, #2
   21a6c:	mov	r0, #0
   21a70:	mov	r2, #5
   21a74:	bl	113ac <dcgettext@plt>
   21a78:	mov	r1, r0
   21a7c:	movw	r2, #14461	; 0x387d
   21a80:	movt	r2, #2
   21a84:	mov	r0, #1
   21a88:	pop	{fp, lr}
   21a8c:	b	11514 <__printf_chk@plt>
   21a90:	b	21a94 <__mempcpy_chk@plt+0x104b4>
   21a94:	push	{r4, r5, r6, sl, fp, lr}
   21a98:	add	fp, sp, #16
   21a9c:	mov	r4, r2
   21aa0:	mov	r5, r1
   21aa4:	mov	r6, r0
   21aa8:	bl	226ec <__mempcpy_chk@plt+0x1110c>
   21aac:	cmp	r0, #0
   21ab0:	popne	{r4, r5, r6, sl, fp, pc}
   21ab4:	cmp	r6, #0
   21ab8:	beq	21acc <__mempcpy_chk@plt+0x104ec>
   21abc:	cmp	r5, #0
   21ac0:	cmpne	r4, #0
   21ac4:	bne	21acc <__mempcpy_chk@plt+0x104ec>
   21ac8:	pop	{r4, r5, r6, sl, fp, pc}
   21acc:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   21ad0:	push	{fp, lr}
   21ad4:	mov	fp, sp
   21ad8:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   21adc:	bl	21ae4 <__mempcpy_chk@plt+0x10504>
   21ae0:	pop	{fp, pc}
   21ae4:	cmp	r0, #0
   21ae8:	bxne	lr
   21aec:	push	{fp, lr}
   21af0:	mov	fp, sp
   21af4:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   21af8:	push	{fp, lr}
   21afc:	mov	fp, sp
   21b00:	bl	22620 <__mempcpy_chk@plt+0x11040>
   21b04:	bl	21ae4 <__mempcpy_chk@plt+0x10504>
   21b08:	pop	{fp, pc}
   21b0c:	b	21ad0 <__mempcpy_chk@plt+0x104f0>
   21b10:	push	{r4, r5, fp, lr}
   21b14:	add	fp, sp, #8
   21b18:	mov	r4, r1
   21b1c:	mov	r5, r0
   21b20:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   21b24:	cmp	r0, #0
   21b28:	popne	{r4, r5, fp, pc}
   21b2c:	cmp	r5, #0
   21b30:	beq	21b40 <__mempcpy_chk@plt+0x10560>
   21b34:	cmp	r4, #0
   21b38:	bne	21b40 <__mempcpy_chk@plt+0x10560>
   21b3c:	pop	{r4, r5, fp, pc}
   21b40:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   21b44:	push	{fp, lr}
   21b48:	mov	fp, sp
   21b4c:	bl	22624 <__mempcpy_chk@plt+0x11044>
   21b50:	bl	21ae4 <__mempcpy_chk@plt+0x10504>
   21b54:	pop	{fp, pc}
   21b58:	push	{fp, lr}
   21b5c:	mov	fp, sp
   21b60:	bl	22634 <__mempcpy_chk@plt+0x11054>
   21b64:	bl	21ae4 <__mempcpy_chk@plt+0x10504>
   21b68:	pop	{fp, pc}
   21b6c:	push	{fp, lr}
   21b70:	mov	fp, sp
   21b74:	mov	r2, r1
   21b78:	mov	r1, r0
   21b7c:	mov	r0, #0
   21b80:	bl	21a94 <__mempcpy_chk@plt+0x104b4>
   21b84:	pop	{fp, pc}
   21b88:	mov	r2, r1
   21b8c:	mov	r1, r0
   21b90:	mov	r0, #0
   21b94:	b	21b58 <__mempcpy_chk@plt+0x10578>
   21b98:	mov	r2, #1
   21b9c:	b	21ba0 <__mempcpy_chk@plt+0x105c0>
   21ba0:	push	{r4, r5, fp, lr}
   21ba4:	add	fp, sp, #8
   21ba8:	mov	r4, r1
   21bac:	ldr	r5, [r1]
   21bb0:	cmp	r0, #0
   21bb4:	beq	21bcc <__mempcpy_chk@plt+0x105ec>
   21bb8:	mov	r1, #1
   21bbc:	add	r1, r1, r5, lsr #1
   21bc0:	adds	r5, r5, r1
   21bc4:	bcc	21be4 <__mempcpy_chk@plt+0x10604>
   21bc8:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   21bcc:	cmp	r5, #0
   21bd0:	bne	21be4 <__mempcpy_chk@plt+0x10604>
   21bd4:	mov	r1, #64	; 0x40
   21bd8:	udiv	r5, r1, r2
   21bdc:	cmp	r2, #64	; 0x40
   21be0:	addhi	r5, r5, #1
   21be4:	mov	r1, r5
   21be8:	bl	21a94 <__mempcpy_chk@plt+0x104b4>
   21bec:	str	r5, [r4]
   21bf0:	pop	{r4, r5, fp, pc}
   21bf4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21bf8:	add	fp, sp, #24
   21bfc:	mov	r8, r1
   21c00:	ldr	r6, [r1]
   21c04:	add	r1, r6, r6, asr #1
   21c08:	cmp	r1, r6
   21c0c:	mvnvs	r1, #-2147483648	; 0x80000000
   21c10:	cmp	r1, r3
   21c14:	mov	r5, r1
   21c18:	movgt	r5, r3
   21c1c:	cmn	r3, #1
   21c20:	movle	r5, r1
   21c24:	ldr	r4, [fp, #8]
   21c28:	cmn	r4, #1
   21c2c:	ble	21c54 <__mempcpy_chk@plt+0x10674>
   21c30:	cmp	r4, #0
   21c34:	beq	21ca8 <__mempcpy_chk@plt+0x106c8>
   21c38:	cmn	r5, #1
   21c3c:	ble	21c7c <__mempcpy_chk@plt+0x1069c>
   21c40:	mvn	r7, #-2147483648	; 0x80000000
   21c44:	udiv	r1, r7, r4
   21c48:	cmp	r1, r5
   21c4c:	bge	21ca8 <__mempcpy_chk@plt+0x106c8>
   21c50:	b	21cb8 <__mempcpy_chk@plt+0x106d8>
   21c54:	cmn	r5, #1
   21c58:	ble	21c98 <__mempcpy_chk@plt+0x106b8>
   21c5c:	cmn	r4, #1
   21c60:	beq	21ca8 <__mempcpy_chk@plt+0x106c8>
   21c64:	mov	r1, #-2147483648	; 0x80000000
   21c68:	sdiv	r1, r1, r4
   21c6c:	mvn	r7, #-2147483648	; 0x80000000
   21c70:	cmp	r1, r5
   21c74:	bge	21ca8 <__mempcpy_chk@plt+0x106c8>
   21c78:	b	21cb8 <__mempcpy_chk@plt+0x106d8>
   21c7c:	beq	21ca8 <__mempcpy_chk@plt+0x106c8>
   21c80:	mov	r1, #-2147483648	; 0x80000000
   21c84:	sdiv	r1, r1, r5
   21c88:	mvn	r7, #-2147483648	; 0x80000000
   21c8c:	cmp	r1, r4
   21c90:	bge	21ca8 <__mempcpy_chk@plt+0x106c8>
   21c94:	b	21cb8 <__mempcpy_chk@plt+0x106d8>
   21c98:	mvn	r7, #-2147483648	; 0x80000000
   21c9c:	sdiv	r1, r7, r4
   21ca0:	cmp	r5, r1
   21ca4:	blt	21cb8 <__mempcpy_chk@plt+0x106d8>
   21ca8:	mul	r1, r5, r4
   21cac:	mov	r7, #64	; 0x40
   21cb0:	cmp	r1, #63	; 0x3f
   21cb4:	bgt	21cc0 <__mempcpy_chk@plt+0x106e0>
   21cb8:	sdiv	r5, r7, r4
   21cbc:	mul	r1, r5, r4
   21cc0:	cmp	r0, #0
   21cc4:	moveq	r7, #0
   21cc8:	streq	r7, [r8]
   21ccc:	sub	r7, r5, r6
   21cd0:	cmp	r7, r2
   21cd4:	bge	21d80 <__mempcpy_chk@plt+0x107a0>
   21cd8:	add	r5, r6, r2
   21cdc:	mov	r1, #0
   21ce0:	cmp	r5, r3
   21ce4:	mov	r2, #0
   21ce8:	movwgt	r2, #1
   21cec:	cmn	r3, #1
   21cf0:	movwgt	r1, #1
   21cf4:	cmp	r5, r6
   21cf8:	bvs	21d68 <__mempcpy_chk@plt+0x10788>
   21cfc:	ands	r1, r1, r2
   21d00:	bne	21d68 <__mempcpy_chk@plt+0x10788>
   21d04:	cmn	r4, #1
   21d08:	ble	21d30 <__mempcpy_chk@plt+0x10750>
   21d0c:	cmp	r4, #0
   21d10:	beq	21d7c <__mempcpy_chk@plt+0x1079c>
   21d14:	cmn	r5, #1
   21d18:	ble	21d54 <__mempcpy_chk@plt+0x10774>
   21d1c:	mvn	r1, #-2147483648	; 0x80000000
   21d20:	udiv	r1, r1, r4
   21d24:	cmp	r1, r5
   21d28:	bge	21d7c <__mempcpy_chk@plt+0x1079c>
   21d2c:	b	21d68 <__mempcpy_chk@plt+0x10788>
   21d30:	cmn	r5, #1
   21d34:	ble	21d6c <__mempcpy_chk@plt+0x1078c>
   21d38:	cmn	r4, #1
   21d3c:	beq	21d7c <__mempcpy_chk@plt+0x1079c>
   21d40:	mov	r1, #-2147483648	; 0x80000000
   21d44:	sdiv	r1, r1, r4
   21d48:	cmp	r1, r5
   21d4c:	bge	21d7c <__mempcpy_chk@plt+0x1079c>
   21d50:	b	21d68 <__mempcpy_chk@plt+0x10788>
   21d54:	beq	21d7c <__mempcpy_chk@plt+0x1079c>
   21d58:	mov	r1, #-2147483648	; 0x80000000
   21d5c:	sdiv	r1, r1, r5
   21d60:	cmp	r1, r4
   21d64:	bge	21d7c <__mempcpy_chk@plt+0x1079c>
   21d68:	bl	21e80 <__mempcpy_chk@plt+0x108a0>
   21d6c:	mvn	r1, #-2147483648	; 0x80000000
   21d70:	sdiv	r1, r1, r4
   21d74:	cmp	r5, r1
   21d78:	blt	21d68 <__mempcpy_chk@plt+0x10788>
   21d7c:	mul	r1, r5, r4
   21d80:	bl	21b10 <__mempcpy_chk@plt+0x10530>
   21d84:	str	r5, [r8]
   21d88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21d8c:	mov	r1, #1
   21d90:	b	21d94 <__mempcpy_chk@plt+0x107b4>
   21d94:	push	{fp, lr}
   21d98:	mov	fp, sp
   21d9c:	bl	21ecc <__mempcpy_chk@plt+0x108ec>
   21da0:	bl	21ae4 <__mempcpy_chk@plt+0x10504>
   21da4:	pop	{fp, pc}
   21da8:	mov	r1, #1
   21dac:	b	21db0 <__mempcpy_chk@plt+0x107d0>
   21db0:	push	{fp, lr}
   21db4:	mov	fp, sp
   21db8:	bl	22630 <__mempcpy_chk@plt+0x11050>
   21dbc:	bl	21ae4 <__mempcpy_chk@plt+0x10504>
   21dc0:	pop	{fp, pc}
   21dc4:	push	{r4, r5, r6, sl, fp, lr}
   21dc8:	add	fp, sp, #16
   21dcc:	mov	r4, r1
   21dd0:	mov	r5, r0
   21dd4:	mov	r0, r1
   21dd8:	bl	21ad0 <__mempcpy_chk@plt+0x104f0>
   21ddc:	mov	r6, r0
   21de0:	mov	r1, r5
   21de4:	mov	r2, r4
   21de8:	bl	1134c <memcpy@plt>
   21dec:	mov	r0, r6
   21df0:	pop	{r4, r5, r6, sl, fp, pc}
   21df4:	push	{r4, r5, r6, sl, fp, lr}
   21df8:	add	fp, sp, #16
   21dfc:	mov	r4, r1
   21e00:	mov	r5, r0
   21e04:	mov	r0, r1
   21e08:	bl	21af8 <__mempcpy_chk@plt+0x10518>
   21e0c:	mov	r6, r0
   21e10:	mov	r1, r5
   21e14:	mov	r2, r4
   21e18:	bl	1134c <memcpy@plt>
   21e1c:	mov	r0, r6
   21e20:	pop	{r4, r5, r6, sl, fp, pc}
   21e24:	push	{r4, r5, r6, sl, fp, lr}
   21e28:	add	fp, sp, #16
   21e2c:	mov	r4, r1
   21e30:	mov	r5, r0
   21e34:	add	r0, r1, #1
   21e38:	bl	21af8 <__mempcpy_chk@plt+0x10518>
   21e3c:	mov	r6, r0
   21e40:	mov	r0, #0
   21e44:	strb	r0, [r6, r4]
   21e48:	mov	r0, r6
   21e4c:	mov	r1, r5
   21e50:	mov	r2, r4
   21e54:	bl	1134c <memcpy@plt>
   21e58:	mov	r0, r6
   21e5c:	pop	{r4, r5, r6, sl, fp, pc}
   21e60:	push	{r4, sl, fp, lr}
   21e64:	add	fp, sp, #8
   21e68:	mov	r4, r0
   21e6c:	bl	114cc <strlen@plt>
   21e70:	add	r1, r0, #1
   21e74:	mov	r0, r4
   21e78:	pop	{r4, sl, fp, lr}
   21e7c:	b	21dc4 <__mempcpy_chk@plt+0x107e4>
   21e80:	push	{fp, lr}
   21e84:	mov	fp, sp
   21e88:	movw	r0, #16700	; 0x413c
   21e8c:	movt	r0, #3
   21e90:	ldr	r4, [r0]
   21e94:	movw	r1, #14537	; 0x38c9
   21e98:	movt	r1, #2
   21e9c:	mov	r0, #0
   21ea0:	mov	r2, #5
   21ea4:	bl	113ac <dcgettext@plt>
   21ea8:	mov	r3, r0
   21eac:	movw	r2, #12931	; 0x3283
   21eb0:	movt	r2, #2
   21eb4:	mov	r0, r4
   21eb8:	mov	r1, #0
   21ebc:	bl	11448 <error@plt>
   21ec0:	bl	115c8 <abort@plt>
   21ec4:	bx	lr
   21ec8:	b	22030 <__mempcpy_chk@plt+0x10a50>
   21ecc:	clz	r2, r1
   21ed0:	lsr	r2, r2, #5
   21ed4:	clz	r3, r0
   21ed8:	lsr	r3, r3, #5
   21edc:	orrs	r2, r3, r2
   21ee0:	movwne	r1, #1
   21ee4:	movwne	r0, #1
   21ee8:	cmp	r1, #0
   21eec:	beq	21f1c <__mempcpy_chk@plt+0x1093c>
   21ef0:	mvn	r2, #-2147483648	; 0x80000000
   21ef4:	udiv	r2, r2, r1
   21ef8:	cmp	r2, r0
   21efc:	bcs	21f1c <__mempcpy_chk@plt+0x1093c>
   21f00:	push	{fp, lr}
   21f04:	mov	fp, sp
   21f08:	bl	114d8 <__errno_location@plt>
   21f0c:	mov	r1, #12
   21f10:	str	r1, [r0]
   21f14:	mov	r0, #0
   21f18:	pop	{fp, pc}
   21f1c:	b	112a4 <calloc@plt>
   21f20:	cmp	r0, #0
   21f24:	movweq	r0, #1
   21f28:	cmn	r0, #1
   21f2c:	ble	21f34 <__mempcpy_chk@plt+0x10954>
   21f30:	b	11478 <malloc@plt>
   21f34:	push	{fp, lr}
   21f38:	mov	fp, sp
   21f3c:	bl	114d8 <__errno_location@plt>
   21f40:	mov	r1, #12
   21f44:	str	r1, [r0]
   21f48:	mov	r0, #0
   21f4c:	pop	{fp, pc}
   21f50:	push	{fp, lr}
   21f54:	mov	fp, sp
   21f58:	cmp	r0, #0
   21f5c:	beq	21f78 <__mempcpy_chk@plt+0x10998>
   21f60:	cmp	r1, #0
   21f64:	beq	21f84 <__mempcpy_chk@plt+0x109a4>
   21f68:	cmn	r1, #1
   21f6c:	ble	21f90 <__mempcpy_chk@plt+0x109b0>
   21f70:	pop	{fp, lr}
   21f74:	b	113c4 <realloc@plt>
   21f78:	mov	r0, r1
   21f7c:	pop	{fp, lr}
   21f80:	b	21f20 <__mempcpy_chk@plt+0x10940>
   21f84:	bl	12b9c <__mempcpy_chk@plt+0x15bc>
   21f88:	mov	r0, #0
   21f8c:	pop	{fp, pc}
   21f90:	bl	114d8 <__errno_location@plt>
   21f94:	mov	r1, #12
   21f98:	str	r1, [r0]
   21f9c:	mov	r0, #0
   21fa0:	pop	{fp, pc}
   21fa4:	sub	r0, r0, #1
   21fa8:	ldrb	r3, [r0, #1]!
   21fac:	cmp	r3, #47	; 0x2f
   21fb0:	beq	21fa8 <__mempcpy_chk@plt+0x109c8>
   21fb4:	mov	r2, #0
   21fb8:	mov	r1, r0
   21fbc:	b	21fd8 <__mempcpy_chk@plt+0x109f8>
   21fc0:	cmp	r3, #0
   21fc4:	bxeq	lr
   21fc8:	tst	r2, #1
   21fcc:	movne	r0, r1
   21fd0:	mov	r2, #0
   21fd4:	ldrb	r3, [r1, #1]!
   21fd8:	uxtb	r3, r3
   21fdc:	cmp	r3, #47	; 0x2f
   21fe0:	bne	21fc0 <__mempcpy_chk@plt+0x109e0>
   21fe4:	mov	r2, #1
   21fe8:	ldrb	r3, [r1, #1]!
   21fec:	b	21fd8 <__mempcpy_chk@plt+0x109f8>
   21ff0:	push	{r4, sl, fp, lr}
   21ff4:	add	fp, sp, #8
   21ff8:	mov	r4, r0
   21ffc:	bl	114cc <strlen@plt>
   22000:	mov	r1, r0
   22004:	sub	r2, r4, #1
   22008:	mov	r0, r1
   2200c:	cmp	r1, #2
   22010:	popcc	{r4, sl, fp, pc}
   22014:	ldrb	r3, [r2, r0]
   22018:	sub	r1, r0, #1
   2201c:	cmp	r3, #47	; 0x2f
   22020:	beq	22008 <__mempcpy_chk@plt+0x10a28>
   22024:	pop	{r4, sl, fp, pc}
   22028:	mov	r0, #0
   2202c:	bx	lr
   22030:	mov	r0, #0
   22034:	bx	lr
   22038:	mov	r1, r0
   2203c:	sub	r2, r0, #65	; 0x41
   22040:	mov	r0, #1
   22044:	cmp	r2, #26
   22048:	subcs	r2, r1, #97	; 0x61
   2204c:	cmpcs	r2, #26
   22050:	bcs	22058 <__mempcpy_chk@plt+0x10a78>
   22054:	bx	lr
   22058:	sub	r1, r1, #48	; 0x30
   2205c:	cmp	r1, #10
   22060:	movcs	r0, #0
   22064:	bx	lr
   22068:	mov	r1, r0
   2206c:	sub	r2, r0, #65	; 0x41
   22070:	mov	r0, #1
   22074:	cmp	r2, #26
   22078:	subcs	r1, r1, #97	; 0x61
   2207c:	cmpcs	r1, #26
   22080:	movcs	r0, #0
   22084:	bx	lr
   22088:	mov	r1, #0
   2208c:	cmp	r0, #128	; 0x80
   22090:	movwcc	r1, #1
   22094:	mov	r0, r1
   22098:	bx	lr
   2209c:	sub	r1, r0, #9
   220a0:	clz	r1, r1
   220a4:	lsr	r1, r1, #5
   220a8:	sub	r0, r0, #32
   220ac:	clz	r0, r0
   220b0:	lsr	r0, r0, #5
   220b4:	orr	r0, r0, r1
   220b8:	bx	lr
   220bc:	mov	r1, r0
   220c0:	mov	r0, #1
   220c4:	cmp	r1, #32
   220c8:	bxcc	lr
   220cc:	cmp	r1, #127	; 0x7f
   220d0:	movne	r0, #0
   220d4:	bx	lr
   220d8:	sub	r1, r0, #48	; 0x30
   220dc:	mov	r0, #0
   220e0:	cmp	r1, #10
   220e4:	movwcc	r0, #1
   220e8:	bx	lr
   220ec:	sub	r1, r0, #33	; 0x21
   220f0:	mov	r0, #0
   220f4:	cmp	r1, #94	; 0x5e
   220f8:	movwcc	r0, #1
   220fc:	bx	lr
   22100:	sub	r1, r0, #97	; 0x61
   22104:	mov	r0, #0
   22108:	cmp	r1, #26
   2210c:	movwcc	r0, #1
   22110:	bx	lr
   22114:	sub	r1, r0, #32
   22118:	mov	r0, #0
   2211c:	cmp	r1, #95	; 0x5f
   22120:	movwcc	r0, #1
   22124:	bx	lr
   22128:	sub	r1, r0, #33	; 0x21
   2212c:	cmp	r1, #93	; 0x5d
   22130:	bhi	222bc <__mempcpy_chk@plt+0x10cdc>
   22134:	mov	r0, #1
   22138:	add	r2, pc, #0
   2213c:	ldr	pc, [r2, r1, lsl #2]
   22140:			; <UNDEFINED> instruction: 0x000222b8
   22144:			; <UNDEFINED> instruction: 0x000222b8
   22148:			; <UNDEFINED> instruction: 0x000222b8
   2214c:			; <UNDEFINED> instruction: 0x000222b8
   22150:			; <UNDEFINED> instruction: 0x000222b8
   22154:			; <UNDEFINED> instruction: 0x000222b8
   22158:			; <UNDEFINED> instruction: 0x000222b8
   2215c:			; <UNDEFINED> instruction: 0x000222b8
   22160:			; <UNDEFINED> instruction: 0x000222b8
   22164:			; <UNDEFINED> instruction: 0x000222b8
   22168:			; <UNDEFINED> instruction: 0x000222b8
   2216c:			; <UNDEFINED> instruction: 0x000222b8
   22170:			; <UNDEFINED> instruction: 0x000222b8
   22174:			; <UNDEFINED> instruction: 0x000222b8
   22178:			; <UNDEFINED> instruction: 0x000222b8
   2217c:			; <UNDEFINED> instruction: 0x000222bc
   22180:			; <UNDEFINED> instruction: 0x000222bc
   22184:			; <UNDEFINED> instruction: 0x000222bc
   22188:			; <UNDEFINED> instruction: 0x000222bc
   2218c:			; <UNDEFINED> instruction: 0x000222bc
   22190:			; <UNDEFINED> instruction: 0x000222bc
   22194:			; <UNDEFINED> instruction: 0x000222bc
   22198:			; <UNDEFINED> instruction: 0x000222bc
   2219c:			; <UNDEFINED> instruction: 0x000222bc
   221a0:			; <UNDEFINED> instruction: 0x000222bc
   221a4:			; <UNDEFINED> instruction: 0x000222b8
   221a8:			; <UNDEFINED> instruction: 0x000222b8
   221ac:			; <UNDEFINED> instruction: 0x000222b8
   221b0:			; <UNDEFINED> instruction: 0x000222b8
   221b4:			; <UNDEFINED> instruction: 0x000222b8
   221b8:			; <UNDEFINED> instruction: 0x000222b8
   221bc:			; <UNDEFINED> instruction: 0x000222b8
   221c0:			; <UNDEFINED> instruction: 0x000222bc
   221c4:			; <UNDEFINED> instruction: 0x000222bc
   221c8:			; <UNDEFINED> instruction: 0x000222bc
   221cc:			; <UNDEFINED> instruction: 0x000222bc
   221d0:			; <UNDEFINED> instruction: 0x000222bc
   221d4:			; <UNDEFINED> instruction: 0x000222bc
   221d8:			; <UNDEFINED> instruction: 0x000222bc
   221dc:			; <UNDEFINED> instruction: 0x000222bc
   221e0:			; <UNDEFINED> instruction: 0x000222bc
   221e4:			; <UNDEFINED> instruction: 0x000222bc
   221e8:			; <UNDEFINED> instruction: 0x000222bc
   221ec:			; <UNDEFINED> instruction: 0x000222bc
   221f0:			; <UNDEFINED> instruction: 0x000222bc
   221f4:			; <UNDEFINED> instruction: 0x000222bc
   221f8:			; <UNDEFINED> instruction: 0x000222bc
   221fc:			; <UNDEFINED> instruction: 0x000222bc
   22200:			; <UNDEFINED> instruction: 0x000222bc
   22204:			; <UNDEFINED> instruction: 0x000222bc
   22208:			; <UNDEFINED> instruction: 0x000222bc
   2220c:			; <UNDEFINED> instruction: 0x000222bc
   22210:			; <UNDEFINED> instruction: 0x000222bc
   22214:			; <UNDEFINED> instruction: 0x000222bc
   22218:			; <UNDEFINED> instruction: 0x000222bc
   2221c:			; <UNDEFINED> instruction: 0x000222bc
   22220:			; <UNDEFINED> instruction: 0x000222bc
   22224:			; <UNDEFINED> instruction: 0x000222bc
   22228:			; <UNDEFINED> instruction: 0x000222b8
   2222c:			; <UNDEFINED> instruction: 0x000222b8
   22230:			; <UNDEFINED> instruction: 0x000222b8
   22234:			; <UNDEFINED> instruction: 0x000222b8
   22238:			; <UNDEFINED> instruction: 0x000222b8
   2223c:			; <UNDEFINED> instruction: 0x000222b8
   22240:			; <UNDEFINED> instruction: 0x000222bc
   22244:			; <UNDEFINED> instruction: 0x000222bc
   22248:			; <UNDEFINED> instruction: 0x000222bc
   2224c:			; <UNDEFINED> instruction: 0x000222bc
   22250:			; <UNDEFINED> instruction: 0x000222bc
   22254:			; <UNDEFINED> instruction: 0x000222bc
   22258:			; <UNDEFINED> instruction: 0x000222bc
   2225c:			; <UNDEFINED> instruction: 0x000222bc
   22260:			; <UNDEFINED> instruction: 0x000222bc
   22264:			; <UNDEFINED> instruction: 0x000222bc
   22268:			; <UNDEFINED> instruction: 0x000222bc
   2226c:			; <UNDEFINED> instruction: 0x000222bc
   22270:			; <UNDEFINED> instruction: 0x000222bc
   22274:			; <UNDEFINED> instruction: 0x000222bc
   22278:			; <UNDEFINED> instruction: 0x000222bc
   2227c:			; <UNDEFINED> instruction: 0x000222bc
   22280:			; <UNDEFINED> instruction: 0x000222bc
   22284:			; <UNDEFINED> instruction: 0x000222bc
   22288:			; <UNDEFINED> instruction: 0x000222bc
   2228c:			; <UNDEFINED> instruction: 0x000222bc
   22290:			; <UNDEFINED> instruction: 0x000222bc
   22294:			; <UNDEFINED> instruction: 0x000222bc
   22298:			; <UNDEFINED> instruction: 0x000222bc
   2229c:			; <UNDEFINED> instruction: 0x000222bc
   222a0:			; <UNDEFINED> instruction: 0x000222bc
   222a4:			; <UNDEFINED> instruction: 0x000222bc
   222a8:			; <UNDEFINED> instruction: 0x000222b8
   222ac:			; <UNDEFINED> instruction: 0x000222b8
   222b0:			; <UNDEFINED> instruction: 0x000222b8
   222b4:			; <UNDEFINED> instruction: 0x000222b8
   222b8:	bx	lr
   222bc:	mov	r0, #0
   222c0:	bx	lr
   222c4:	sub	r0, r0, #9
   222c8:	cmp	r0, #23
   222cc:	movhi	r0, #0
   222d0:	bxhi	lr
   222d4:	bic	r0, r0, #-16777216	; 0xff000000
   222d8:	movw	r1, #31
   222dc:	movt	r1, #128	; 0x80
   222e0:	mov	r2, #1
   222e4:	and	r0, r2, r1, lsr r0
   222e8:	bx	lr
   222ec:	sub	r1, r0, #65	; 0x41
   222f0:	mov	r0, #0
   222f4:	cmp	r1, #26
   222f8:	movwcc	r0, #1
   222fc:	bx	lr
   22300:	mov	r1, r0
   22304:	sub	r2, r0, #48	; 0x30
   22308:	mov	r0, #1
   2230c:	cmp	r2, #22
   22310:	bhi	22328 <__mempcpy_chk@plt+0x10d48>
   22314:	mov	ip, #1
   22318:	movw	r3, #1023	; 0x3ff
   2231c:	movt	r3, #126	; 0x7e
   22320:	tst	r3, ip, lsl r2
   22324:	bxne	lr
   22328:	sub	r1, r1, #97	; 0x61
   2232c:	cmp	r1, #6
   22330:	movcs	r0, #0
   22334:	bxcs	lr
   22338:	bx	lr
   2233c:	sub	r1, r0, #65	; 0x41
   22340:	cmp	r1, #26
   22344:	addcc	r0, r0, #32
   22348:	bx	lr
   2234c:	sub	r1, r0, #97	; 0x61
   22350:	cmp	r1, #26
   22354:	subcc	r0, r0, #32
   22358:	bx	lr
   2235c:	push	{r4, r5, r6, sl, fp, lr}
   22360:	add	fp, sp, #16
   22364:	mov	r4, r0
   22368:	bl	11424 <__fpending@plt>
   2236c:	mov	r5, r0
   22370:	mov	r0, r4
   22374:	bl	11430 <ferror_unlocked@plt>
   22378:	mov	r6, r0
   2237c:	mov	r0, r4
   22380:	bl	224a4 <__mempcpy_chk@plt+0x10ec4>
   22384:	cmp	r6, #0
   22388:	beq	223a8 <__mempcpy_chk@plt+0x10dc8>
   2238c:	mvn	r4, #0
   22390:	cmp	r0, #0
   22394:	bne	223dc <__mempcpy_chk@plt+0x10dfc>
   22398:	bl	114d8 <__errno_location@plt>
   2239c:	mov	r1, #0
   223a0:	str	r1, [r0]
   223a4:	b	223dc <__mempcpy_chk@plt+0x10dfc>
   223a8:	cmp	r0, #0
   223ac:	mov	r4, r0
   223b0:	mvnne	r4, #0
   223b4:	cmp	r5, #0
   223b8:	bne	223dc <__mempcpy_chk@plt+0x10dfc>
   223bc:	cmp	r0, #0
   223c0:	beq	223dc <__mempcpy_chk@plt+0x10dfc>
   223c4:	bl	114d8 <__errno_location@plt>
   223c8:	ldr	r0, [r0]
   223cc:	subs	r4, r0, #9
   223d0:	mvnne	r4, #0
   223d4:	mov	r0, r4
   223d8:	pop	{r4, r5, r6, sl, fp, pc}
   223dc:	mov	r0, r4
   223e0:	pop	{r4, r5, r6, sl, fp, pc}
   223e4:	push	{r4, r5, r6, r7, fp, lr}
   223e8:	add	fp, sp, #16
   223ec:	mov	r5, r1
   223f0:	mov	r4, r0
   223f4:	ldr	r0, [r0, #4]
   223f8:	cmp	r0, r1
   223fc:	strcs	r5, [r4]
   22400:	movcs	r0, #1
   22404:	popcs	{r4, r5, r6, r7, fp, pc}
   22408:	mov	r6, r3
   2240c:	cmp	r3, #0
   22410:	beq	22438 <__mempcpy_chk@plt+0x10e58>
   22414:	mvn	r0, #0
   22418:	udiv	r0, r0, r6
   2241c:	cmp	r0, r5
   22420:	bcs	22438 <__mempcpy_chk@plt+0x10e58>
   22424:	bl	114d8 <__errno_location@plt>
   22428:	mov	r1, #12
   2242c:	str	r1, [r0]
   22430:	mov	r0, #0
   22434:	pop	{r4, r5, r6, r7, fp, pc}
   22438:	mul	r1, r6, r5
   2243c:	ldr	r0, [r4, #8]
   22440:	cmp	r0, r2
   22444:	beq	2245c <__mempcpy_chk@plt+0x10e7c>
   22448:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   2244c:	mov	r7, r0
   22450:	cmp	r0, #0
   22454:	bne	2248c <__mempcpy_chk@plt+0x10eac>
   22458:	b	2249c <__mempcpy_chk@plt+0x10ebc>
   2245c:	mov	r0, r1
   22460:	bl	21f20 <__mempcpy_chk@plt+0x10940>
   22464:	cmp	r0, #0
   22468:	beq	2249c <__mempcpy_chk@plt+0x10ebc>
   2246c:	mov	r7, r0
   22470:	ldr	r1, [r4, #8]
   22474:	cmp	r1, #0
   22478:	beq	2248c <__mempcpy_chk@plt+0x10eac>
   2247c:	ldr	r0, [r4]
   22480:	mul	r2, r0, r6
   22484:	mov	r0, r7
   22488:	bl	1134c <memcpy@plt>
   2248c:	str	r5, [r4]
   22490:	stmib	r4, {r5, r7}
   22494:	mov	r0, #1
   22498:	pop	{r4, r5, r6, r7, fp, pc}
   2249c:	mov	r0, #0
   224a0:	pop	{r4, r5, r6, r7, fp, pc}
   224a4:	push	{r4, r5, fp, lr}
   224a8:	add	fp, sp, #8
   224ac:	sub	sp, sp, #8
   224b0:	mov	r4, r0
   224b4:	bl	11520 <fileno@plt>
   224b8:	cmn	r0, #1
   224bc:	ble	22534 <__mempcpy_chk@plt+0x10f54>
   224c0:	mov	r0, r4
   224c4:	bl	11490 <__freading@plt>
   224c8:	cmp	r0, #0
   224cc:	beq	224f8 <__mempcpy_chk@plt+0x10f18>
   224d0:	mov	r0, r4
   224d4:	bl	11520 <fileno@plt>
   224d8:	mov	r1, #1
   224dc:	str	r1, [sp]
   224e0:	mov	r2, #0
   224e4:	mov	r3, #0
   224e8:	bl	1140c <lseek64@plt>
   224ec:	and	r0, r0, r1
   224f0:	cmn	r0, #1
   224f4:	beq	22534 <__mempcpy_chk@plt+0x10f54>
   224f8:	mov	r0, r4
   224fc:	bl	2259c <__mempcpy_chk@plt+0x10fbc>
   22500:	cmp	r0, #0
   22504:	beq	22534 <__mempcpy_chk@plt+0x10f54>
   22508:	bl	114d8 <__errno_location@plt>
   2250c:	ldr	r5, [r0]
   22510:	mov	r0, r4
   22514:	bl	11538 <fclose@plt>
   22518:	cmp	r5, #0
   2251c:	beq	2252c <__mempcpy_chk@plt+0x10f4c>
   22520:	bl	114d8 <__errno_location@plt>
   22524:	str	r5, [r0]
   22528:	mvn	r0, #0
   2252c:	sub	sp, fp, #8
   22530:	pop	{r4, r5, fp, pc}
   22534:	mov	r0, r4
   22538:	sub	sp, fp, #8
   2253c:	pop	{r4, r5, fp, lr}
   22540:	b	11538 <fclose@plt>
   22544:	push	{r4, r5, r6, r7, fp, lr}
   22548:	add	fp, sp, #16
   2254c:	mov	r4, r0
   22550:	cmp	r0, #2
   22554:	movhi	r0, r4
   22558:	pophi	{r4, r5, r6, r7, fp, pc}
   2255c:	mov	r0, r4
   22560:	bl	22588 <__mempcpy_chk@plt+0x10fa8>
   22564:	mov	r5, r0
   22568:	bl	114d8 <__errno_location@plt>
   2256c:	mov	r6, r0
   22570:	ldr	r7, [r0]
   22574:	mov	r0, r4
   22578:	bl	115d4 <close@plt>
   2257c:	str	r7, [r6]
   22580:	mov	r0, r5
   22584:	pop	{r4, r5, r6, r7, fp, pc}
   22588:	lsl	r1, r1, #12
   2258c:	movw	r2, #1030	; 0x406
   22590:	and	r1, r2, r1, asr #31
   22594:	mov	r2, #3
   22598:	b	22734 <__mempcpy_chk@plt+0x11154>
   2259c:	push	{r4, sl, fp, lr}
   225a0:	add	fp, sp, #8
   225a4:	mov	r4, r0
   225a8:	cmp	r0, #0
   225ac:	beq	225c4 <__mempcpy_chk@plt+0x10fe4>
   225b0:	mov	r0, r4
   225b4:	bl	11490 <__freading@plt>
   225b8:	cmp	r0, #0
   225bc:	movne	r0, r4
   225c0:	blne	225d0 <__mempcpy_chk@plt+0x10ff0>
   225c4:	mov	r0, r4
   225c8:	pop	{r4, sl, fp, lr}
   225cc:	b	11310 <fflush@plt>
   225d0:	ldrb	r1, [r0, #1]
   225d4:	tst	r1, #1
   225d8:	bxeq	lr
   225dc:	push	{fp, lr}
   225e0:	mov	fp, sp
   225e4:	sub	sp, sp, #8
   225e8:	mov	r1, #1
   225ec:	str	r1, [sp]
   225f0:	mov	r2, #0
   225f4:	mov	r3, #0
   225f8:	bl	12bc4 <__mempcpy_chk@plt+0x15e4>
   225fc:	mov	sp, fp
   22600:	pop	{fp, pc}
   22604:	push	{fp, lr}
   22608:	mov	fp, sp
   2260c:	bl	114d8 <__errno_location@plt>
   22610:	mov	r1, #12
   22614:	str	r1, [r0]
   22618:	mov	r0, #0
   2261c:	pop	{fp, pc}
   22620:	b	21f20 <__mempcpy_chk@plt+0x10940>
   22624:	cmp	r1, #0
   22628:	orreq	r1, r1, #1
   2262c:	b	21f50 <__mempcpy_chk@plt+0x10970>
   22630:	b	21ecc <__mempcpy_chk@plt+0x108ec>
   22634:	clz	r3, r2
   22638:	lsr	ip, r3, #5
   2263c:	clz	r3, r1
   22640:	lsr	r3, r3, #5
   22644:	orrs	r3, r3, ip
   22648:	movwne	r1, #1
   2264c:	movwne	r2, #1
   22650:	b	226ec <__mempcpy_chk@plt+0x1110c>
   22654:	push	{fp, lr}
   22658:	mov	fp, sp
   2265c:	mov	r0, #14
   22660:	bl	11580 <nl_langinfo@plt>
   22664:	movw	r1, #12441	; 0x3099
   22668:	movt	r1, #2
   2266c:	cmp	r0, #0
   22670:	movne	r1, r0
   22674:	ldrb	r2, [r1]
   22678:	movw	r0, #14554	; 0x38da
   2267c:	movt	r0, #2
   22680:	cmp	r2, #0
   22684:	movne	r0, r1
   22688:	pop	{fp, pc}
   2268c:	push	{r4, r5, r6, r7, fp, lr}
   22690:	add	fp, sp, #16
   22694:	sub	sp, sp, #8
   22698:	mov	r7, r2
   2269c:	mov	r4, r1
   226a0:	add	r5, sp, #4
   226a4:	cmp	r0, #0
   226a8:	movne	r5, r0
   226ac:	mov	r0, r5
   226b0:	bl	1143c <mbrtowc@plt>
   226b4:	mov	r6, r0
   226b8:	cmp	r7, #0
   226bc:	beq	226e0 <__mempcpy_chk@plt+0x11100>
   226c0:	cmn	r6, #2
   226c4:	bcc	226e0 <__mempcpy_chk@plt+0x11100>
   226c8:	mov	r0, #0
   226cc:	bl	22918 <__mempcpy_chk@plt+0x11338>
   226d0:	cmp	r0, #0
   226d4:	ldrbeq	r0, [r4]
   226d8:	streq	r0, [r5]
   226dc:	moveq	r6, #1
   226e0:	mov	r0, r6
   226e4:	sub	sp, fp, #16
   226e8:	pop	{r4, r5, r6, r7, fp, pc}
   226ec:	cmp	r2, #0
   226f0:	beq	22720 <__mempcpy_chk@plt+0x11140>
   226f4:	mvn	r3, #0
   226f8:	udiv	r3, r3, r2
   226fc:	cmp	r3, r1
   22700:	bcs	22720 <__mempcpy_chk@plt+0x11140>
   22704:	push	{fp, lr}
   22708:	mov	fp, sp
   2270c:	bl	114d8 <__errno_location@plt>
   22710:	mov	r1, #12
   22714:	str	r1, [r0]
   22718:	mov	r0, #0
   2271c:	pop	{fp, pc}
   22720:	mul	r1, r2, r1
   22724:	b	21f50 <__mempcpy_chk@plt+0x10970>
   22728:	mov	r1, #0
   2272c:	mov	r2, #3
   22730:	b	22734 <__mempcpy_chk@plt+0x11154>
   22734:	sub	sp, sp, #8
   22738:	push	{fp, lr}
   2273c:	mov	fp, sp
   22740:	sub	sp, sp, #8
   22744:	str	r3, [fp, #12]
   22748:	str	r2, [fp, #8]
   2274c:	add	r2, fp, #8
   22750:	str	r2, [sp, #4]
   22754:	cmp	r1, #11
   22758:	bhi	22798 <__mempcpy_chk@plt+0x111b8>
   2275c:	mov	r2, #1
   22760:	movw	r3, #1300	; 0x514
   22764:	tst	r3, r2, lsl r1
   22768:	bne	227e8 <__mempcpy_chk@plt+0x11208>
   2276c:	movw	r3, #2570	; 0xa0a
   22770:	tst	r3, r2, lsl r1
   22774:	bne	227c0 <__mempcpy_chk@plt+0x111e0>
   22778:	cmp	r1, #0
   2277c:	bne	22798 <__mempcpy_chk@plt+0x111b8>
   22780:	ldr	r1, [sp, #4]
   22784:	add	r2, r1, #4
   22788:	str	r2, [sp, #4]
   2278c:	ldr	r1, [r1]
   22790:	bl	2280c <__mempcpy_chk@plt+0x1122c>
   22794:	b	227fc <__mempcpy_chk@plt+0x1121c>
   22798:	sub	r2, r1, #1024	; 0x400
   2279c:	cmp	r2, #10
   227a0:	bhi	227e8 <__mempcpy_chk@plt+0x11208>
   227a4:	mov	ip, #1
   227a8:	movw	r3, #645	; 0x285
   227ac:	tst	r3, ip, lsl r2
   227b0:	bne	227e8 <__mempcpy_chk@plt+0x11208>
   227b4:	movw	r3, #1282	; 0x502
   227b8:	tst	r3, ip, lsl r2
   227bc:	beq	227c8 <__mempcpy_chk@plt+0x111e8>
   227c0:	bl	11550 <fcntl64@plt>
   227c4:	b	227fc <__mempcpy_chk@plt+0x1121c>
   227c8:	cmp	r2, #6
   227cc:	bne	227e8 <__mempcpy_chk@plt+0x11208>
   227d0:	ldr	r1, [sp, #4]
   227d4:	add	r2, r1, #4
   227d8:	str	r2, [sp, #4]
   227dc:	ldr	r1, [r1]
   227e0:	bl	22818 <__mempcpy_chk@plt+0x11238>
   227e4:	b	227fc <__mempcpy_chk@plt+0x1121c>
   227e8:	ldr	r2, [sp, #4]
   227ec:	add	r3, r2, #4
   227f0:	str	r3, [sp, #4]
   227f4:	ldr	r2, [r2]
   227f8:	bl	11550 <fcntl64@plt>
   227fc:	mov	sp, fp
   22800:	pop	{fp, lr}
   22804:	add	sp, sp, #8
   22808:	bx	lr
   2280c:	mov	r2, r1
   22810:	mov	r1, #0
   22814:	b	11550 <fcntl64@plt>
   22818:	push	{r4, r5, r6, r7, fp, lr}
   2281c:	add	fp, sp, #16
   22820:	mov	r5, r1
   22824:	mov	r6, r0
   22828:	movw	r7, #25656	; 0x6438
   2282c:	movt	r7, #3
   22830:	ldr	r0, [r7]
   22834:	cmp	r0, #0
   22838:	blt	2289c <__mempcpy_chk@plt+0x112bc>
   2283c:	mov	r0, r6
   22840:	movw	r1, #1030	; 0x406
   22844:	mov	r2, r5
   22848:	bl	11550 <fcntl64@plt>
   2284c:	mov	r4, r0
   22850:	cmn	r0, #1
   22854:	bgt	22888 <__mempcpy_chk@plt+0x112a8>
   22858:	bl	114d8 <__errno_location@plt>
   2285c:	ldr	r0, [r0]
   22860:	cmp	r0, #22
   22864:	bne	22888 <__mempcpy_chk@plt+0x112a8>
   22868:	mov	r0, r6
   2286c:	mov	r1, r5
   22870:	bl	2280c <__mempcpy_chk@plt+0x1122c>
   22874:	mov	r4, r0
   22878:	cmp	r0, #0
   2287c:	blt	228ec <__mempcpy_chk@plt+0x1130c>
   22880:	mvn	r0, #0
   22884:	b	2288c <__mempcpy_chk@plt+0x112ac>
   22888:	mov	r0, #1
   2288c:	str	r0, [r7]
   22890:	cmp	r4, #0
   22894:	bge	228b4 <__mempcpy_chk@plt+0x112d4>
   22898:	b	228ec <__mempcpy_chk@plt+0x1130c>
   2289c:	mov	r0, r6
   228a0:	mov	r1, r5
   228a4:	bl	2280c <__mempcpy_chk@plt+0x1122c>
   228a8:	mov	r4, r0
   228ac:	cmp	r4, #0
   228b0:	blt	228ec <__mempcpy_chk@plt+0x1130c>
   228b4:	ldr	r0, [r7]
   228b8:	cmn	r0, #1
   228bc:	bne	228ec <__mempcpy_chk@plt+0x1130c>
   228c0:	mov	r0, r4
   228c4:	mov	r1, #1
   228c8:	bl	11550 <fcntl64@plt>
   228cc:	cmp	r0, #0
   228d0:	blt	228f4 <__mempcpy_chk@plt+0x11314>
   228d4:	orr	r2, r0, #1
   228d8:	mov	r0, r4
   228dc:	mov	r1, #2
   228e0:	bl	11550 <fcntl64@plt>
   228e4:	cmn	r0, #1
   228e8:	beq	228f4 <__mempcpy_chk@plt+0x11314>
   228ec:	mov	r0, r4
   228f0:	pop	{r4, r5, r6, r7, fp, pc}
   228f4:	bl	114d8 <__errno_location@plt>
   228f8:	mov	r5, r0
   228fc:	ldr	r6, [r0]
   22900:	mov	r0, r4
   22904:	bl	115d4 <close@plt>
   22908:	str	r6, [r5]
   2290c:	mvn	r4, #0
   22910:	mov	r0, r4
   22914:	pop	{r4, r5, r6, r7, fp, pc}
   22918:	push	{r4, sl, fp, lr}
   2291c:	add	fp, sp, #8
   22920:	sub	sp, sp, #264	; 0x108
   22924:	add	r1, sp, #7
   22928:	movw	r2, #257	; 0x101
   2292c:	bl	2297c <__mempcpy_chk@plt+0x1139c>
   22930:	mov	r4, #0
   22934:	cmp	r0, #0
   22938:	bne	22970 <__mempcpy_chk@plt+0x11390>
   2293c:	add	r0, sp, #7
   22940:	movw	r1, #14560	; 0x38e0
   22944:	movt	r1, #2
   22948:	bl	112ec <strcmp@plt>
   2294c:	cmp	r0, #0
   22950:	beq	22970 <__mempcpy_chk@plt+0x11390>
   22954:	add	r0, sp, #7
   22958:	movw	r1, #14562	; 0x38e2
   2295c:	movt	r1, #2
   22960:	bl	112ec <strcmp@plt>
   22964:	mov	r4, r0
   22968:	cmp	r0, #0
   2296c:	movwne	r4, #1
   22970:	mov	r0, r4
   22974:	sub	sp, fp, #8
   22978:	pop	{r4, sl, fp, pc}
   2297c:	b	22980 <__mempcpy_chk@plt+0x113a0>
   22980:	push	{r4, r5, r6, r7, fp, lr}
   22984:	add	fp, sp, #16
   22988:	mov	r6, r2
   2298c:	mov	r4, r1
   22990:	bl	22a1c <__mempcpy_chk@plt+0x1143c>
   22994:	cmp	r0, #0
   22998:	beq	229c8 <__mempcpy_chk@plt+0x113e8>
   2299c:	mov	r7, r0
   229a0:	bl	114cc <strlen@plt>
   229a4:	cmp	r0, r6
   229a8:	bcs	229e8 <__mempcpy_chk@plt+0x11408>
   229ac:	add	r2, r0, #1
   229b0:	mov	r0, r4
   229b4:	mov	r1, r7
   229b8:	bl	1134c <memcpy@plt>
   229bc:	mov	r5, #0
   229c0:	mov	r0, r5
   229c4:	pop	{r4, r5, r6, r7, fp, pc}
   229c8:	mov	r5, #22
   229cc:	cmp	r6, #0
   229d0:	movne	r0, #0
   229d4:	strbne	r0, [r4]
   229d8:	movne	r0, r5
   229dc:	popne	{r4, r5, r6, r7, fp, pc}
   229e0:	mov	r0, r5
   229e4:	pop	{r4, r5, r6, r7, fp, pc}
   229e8:	mov	r5, #34	; 0x22
   229ec:	cmp	r6, #0
   229f0:	beq	22a10 <__mempcpy_chk@plt+0x11430>
   229f4:	sub	r6, r6, #1
   229f8:	mov	r0, r4
   229fc:	mov	r1, r7
   22a00:	mov	r2, r6
   22a04:	bl	1134c <memcpy@plt>
   22a08:	mov	r0, #0
   22a0c:	strb	r0, [r4, r6]
   22a10:	mov	r0, r5
   22a14:	pop	{r4, r5, r6, r7, fp, pc}
   22a18:	b	22a1c <__mempcpy_chk@plt+0x1143c>
   22a1c:	mov	r1, #0
   22a20:	b	1155c <setlocale@plt>
   22a24:	cmp	r3, #0
   22a28:	cmpeq	r2, #0
   22a2c:	bne	22a50 <__mempcpy_chk@plt+0x11470>
   22a30:	cmp	r1, #0
   22a34:	movlt	r1, #-2147483648	; 0x80000000
   22a38:	movlt	r0, #0
   22a3c:	blt	22a4c <__mempcpy_chk@plt+0x1146c>
   22a40:	cmpeq	r0, #0
   22a44:	mvnne	r1, #-2147483648	; 0x80000000
   22a48:	mvnne	r0, #0
   22a4c:	b	22af8 <__mempcpy_chk@plt+0x11518>
   22a50:	sub	sp, sp, #8
   22a54:	push	{sp, lr}
   22a58:	cmp	r1, #0
   22a5c:	blt	22a7c <__mempcpy_chk@plt+0x1149c>
   22a60:	cmp	r3, #0
   22a64:	blt	22ab0 <__mempcpy_chk@plt+0x114d0>
   22a68:	bl	22b08 <__mempcpy_chk@plt+0x11528>
   22a6c:	ldr	lr, [sp, #4]
   22a70:	add	sp, sp, #8
   22a74:	pop	{r2, r3}
   22a78:	bx	lr
   22a7c:	rsbs	r0, r0, #0
   22a80:	sbc	r1, r1, r1, lsl #1
   22a84:	cmp	r3, #0
   22a88:	blt	22ad4 <__mempcpy_chk@plt+0x114f4>
   22a8c:	bl	22b08 <__mempcpy_chk@plt+0x11528>
   22a90:	ldr	lr, [sp, #4]
   22a94:	add	sp, sp, #8
   22a98:	pop	{r2, r3}
   22a9c:	rsbs	r0, r0, #0
   22aa0:	sbc	r1, r1, r1, lsl #1
   22aa4:	rsbs	r2, r2, #0
   22aa8:	sbc	r3, r3, r3, lsl #1
   22aac:	bx	lr
   22ab0:	rsbs	r2, r2, #0
   22ab4:	sbc	r3, r3, r3, lsl #1
   22ab8:	bl	22b08 <__mempcpy_chk@plt+0x11528>
   22abc:	ldr	lr, [sp, #4]
   22ac0:	add	sp, sp, #8
   22ac4:	pop	{r2, r3}
   22ac8:	rsbs	r0, r0, #0
   22acc:	sbc	r1, r1, r1, lsl #1
   22ad0:	bx	lr
   22ad4:	rsbs	r2, r2, #0
   22ad8:	sbc	r3, r3, r3, lsl #1
   22adc:	bl	22b08 <__mempcpy_chk@plt+0x11528>
   22ae0:	ldr	lr, [sp, #4]
   22ae4:	add	sp, sp, #8
   22ae8:	pop	{r2, r3}
   22aec:	rsbs	r2, r2, #0
   22af0:	sbc	r3, r3, r3, lsl #1
   22af4:	bx	lr
   22af8:	push	{r1, lr}
   22afc:	mov	r0, #8
   22b00:	bl	112c8 <raise@plt>
   22b04:	pop	{r1, pc}
   22b08:	cmp	r1, r3
   22b0c:	cmpeq	r0, r2
   22b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b14:	mov	r4, r0
   22b18:	movcc	r0, #0
   22b1c:	mov	r5, r1
   22b20:	ldr	lr, [sp, #36]	; 0x24
   22b24:	movcc	r1, r0
   22b28:	bcc	22c24 <__mempcpy_chk@plt+0x11644>
   22b2c:	cmp	r3, #0
   22b30:	clzeq	ip, r2
   22b34:	clzne	ip, r3
   22b38:	addeq	ip, ip, #32
   22b3c:	cmp	r5, #0
   22b40:	clzeq	r1, r4
   22b44:	addeq	r1, r1, #32
   22b48:	clzne	r1, r5
   22b4c:	sub	ip, ip, r1
   22b50:	sub	sl, ip, #32
   22b54:	lsl	r9, r3, ip
   22b58:	rsb	fp, ip, #32
   22b5c:	orr	r9, r9, r2, lsl sl
   22b60:	orr	r9, r9, r2, lsr fp
   22b64:	lsl	r8, r2, ip
   22b68:	cmp	r5, r9
   22b6c:	cmpeq	r4, r8
   22b70:	movcc	r0, #0
   22b74:	movcc	r1, r0
   22b78:	bcc	22b94 <__mempcpy_chk@plt+0x115b4>
   22b7c:	mov	r0, #1
   22b80:	subs	r4, r4, r8
   22b84:	lsl	r1, r0, sl
   22b88:	orr	r1, r1, r0, lsr fp
   22b8c:	lsl	r0, r0, ip
   22b90:	sbc	r5, r5, r9
   22b94:	cmp	ip, #0
   22b98:	beq	22c24 <__mempcpy_chk@plt+0x11644>
   22b9c:	lsr	r6, r8, #1
   22ba0:	orr	r6, r6, r9, lsl #31
   22ba4:	lsr	r7, r9, #1
   22ba8:	mov	r2, ip
   22bac:	b	22bd0 <__mempcpy_chk@plt+0x115f0>
   22bb0:	subs	r3, r4, r6
   22bb4:	sbc	r8, r5, r7
   22bb8:	adds	r3, r3, r3
   22bbc:	adc	r8, r8, r8
   22bc0:	adds	r4, r3, #1
   22bc4:	adc	r5, r8, #0
   22bc8:	subs	r2, r2, #1
   22bcc:	beq	22bec <__mempcpy_chk@plt+0x1160c>
   22bd0:	cmp	r5, r7
   22bd4:	cmpeq	r4, r6
   22bd8:	bcs	22bb0 <__mempcpy_chk@plt+0x115d0>
   22bdc:	adds	r4, r4, r4
   22be0:	adc	r5, r5, r5
   22be4:	subs	r2, r2, #1
   22be8:	bne	22bd0 <__mempcpy_chk@plt+0x115f0>
   22bec:	lsr	r3, r4, ip
   22bf0:	orr	r3, r3, r5, lsl fp
   22bf4:	lsr	r2, r5, ip
   22bf8:	orr	r3, r3, r5, lsr sl
   22bfc:	adds	r0, r0, r4
   22c00:	mov	r4, r3
   22c04:	lsl	r3, r2, ip
   22c08:	orr	r3, r3, r4, lsl sl
   22c0c:	lsl	ip, r4, ip
   22c10:	orr	r3, r3, r4, lsr fp
   22c14:	adc	r1, r1, r5
   22c18:	subs	r0, r0, ip
   22c1c:	mov	r5, r2
   22c20:	sbc	r1, r1, r3
   22c24:	cmp	lr, #0
   22c28:	strdne	r4, [lr]
   22c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22c34:	mov	r7, r0
   22c38:	ldr	r6, [pc, #72]	; 22c88 <__mempcpy_chk@plt+0x116a8>
   22c3c:	ldr	r5, [pc, #72]	; 22c8c <__mempcpy_chk@plt+0x116ac>
   22c40:	add	r6, pc, r6
   22c44:	add	r5, pc, r5
   22c48:	sub	r6, r6, r5
   22c4c:	mov	r8, r1
   22c50:	mov	r9, r2
   22c54:	bl	1126c <pthread_mutex_unlock@plt-0x20>
   22c58:	asrs	r6, r6, #2
   22c5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22c60:	mov	r4, #0
   22c64:	add	r4, r4, #1
   22c68:	ldr	r3, [r5], #4
   22c6c:	mov	r2, r9
   22c70:	mov	r1, r8
   22c74:	mov	r0, r7
   22c78:	blx	r3
   22c7c:	cmp	r6, r4
   22c80:	bne	22c64 <__mempcpy_chk@plt+0x11684>
   22c84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22c88:	andeq	r1, r1, r4, asr #5
   22c8c:			; <UNDEFINED> instruction: 0x000112bc
   22c90:	bx	lr
   22c94:	ldr	r3, [pc, #12]	; 22ca8 <__mempcpy_chk@plt+0x116c8>
   22c98:	mov	r1, #0
   22c9c:	add	r3, pc, r3
   22ca0:	ldr	r2, [r3]
   22ca4:	b	114f0 <__cxa_atexit@plt>
   22ca8:	muleq	r1, r0, r4

Disassembly of section .fini:

00022cac <.fini>:
   22cac:	push	{r3, lr}
   22cb0:	pop	{r3, pc}
