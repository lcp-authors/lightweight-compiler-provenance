
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00012600 <.init>:
   12600:	push	{r3, lr}
   12604:	bl	1284c <_start@@Base+0x3c>
   12608:	pop	{r3, pc}

Disassembly of section .plt:

0001260c <fdopen@plt-0x14>:
   1260c:	push	{lr}		; (str lr, [sp, #-4]!)
   12610:	ldr	lr, [pc, #4]	; 1261c <fdopen@plt-0x4>
   12614:	add	lr, pc, lr
   12618:	ldr	pc, [lr, #8]!
   1261c:	andeq	sp, r1, r4, ror #19

00012620 <fdopen@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #118784	; 0x1d000
   12628:	ldr	pc, [ip, #2532]!	; 0x9e4

0001262c <strtol@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #118784	; 0x1d000
   12634:	ldr	pc, [ip, #2524]!	; 0x9dc

00012638 <longjmp@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #118784	; 0x1d000
   12640:	ldr	pc, [ip, #2516]!	; 0x9d4

00012644 <fflush@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #118784	; 0x1d000
   1264c:	ldr	pc, [ip, #2508]!	; 0x9cc

00012650 <_setjmp@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #118784	; 0x1d000
   12658:	ldr	pc, [ip, #2500]!	; 0x9c4

0001265c <free@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #118784	; 0x1d000
   12664:	ldr	pc, [ip, #2492]!	; 0x9bc

00012668 <__isnanf@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #118784	; 0x1d000
   12670:	ldr	pc, [ip, #2484]!	; 0x9b4

00012674 <memcpy@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #118784	; 0x1d000
   1267c:	ldr	pc, [ip, #2476]!	; 0x9ac

00012680 <mmap64@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #118784	; 0x1d000
   12688:	ldr	pc, [ip, #2468]!	; 0x9a4

0001268c <ftell@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #118784	; 0x1d000
   12694:	ldr	pc, [ip, #2460]!	; 0x99c

00012698 <uname@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #118784	; 0x1d000
   126a0:	ldr	pc, [ip, #2452]!	; 0x994

000126a4 <strdup@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #118784	; 0x1d000
   126ac:	ldr	pc, [ip, #2444]!	; 0x98c

000126b0 <__isinff@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #118784	; 0x1d000
   126b8:	ldr	pc, [ip, #2436]!	; 0x984

000126bc <realloc@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #118784	; 0x1d000
   126c4:	ldr	pc, [ip, #2428]!	; 0x97c

000126c8 <fwrite@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #118784	; 0x1d000
   126d0:	ldr	pc, [ip, #2420]!	; 0x974

000126d4 <open64@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #118784	; 0x1d000
   126dc:	ldr	pc, [ip, #2412]!	; 0x96c

000126e0 <getenv@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #118784	; 0x1d000
   126e8:	ldr	pc, [ip, #2404]!	; 0x964

000126ec <malloc@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #118784	; 0x1d000
   126f4:	ldr	pc, [ip, #2396]!	; 0x95c

000126f8 <__libc_start_main@plt>:
   126f8:	add	ip, pc, #0, 12
   126fc:	add	ip, ip, #118784	; 0x1d000
   12700:	ldr	pc, [ip, #2388]!	; 0x954

00012704 <strerror@plt>:
   12704:	add	ip, pc, #0, 12
   12708:	add	ip, ip, #118784	; 0x1d000
   1270c:	ldr	pc, [ip, #2380]!	; 0x94c

00012710 <__gmon_start__@plt>:
   12710:	add	ip, pc, #0, 12
   12714:	add	ip, ip, #118784	; 0x1d000
   12718:	ldr	pc, [ip, #2372]!	; 0x944

0001271c <getpid@plt>:
   1271c:	add	ip, pc, #0, 12
   12720:	add	ip, ip, #118784	; 0x1d000
   12724:	ldr	pc, [ip, #2364]!	; 0x93c

00012728 <exit@plt>:
   12728:	add	ip, pc, #0, 12
   1272c:	add	ip, ip, #118784	; 0x1d000
   12730:	ldr	pc, [ip, #2356]!	; 0x934

00012734 <strlen@plt>:
   12734:	add	ip, pc, #0, 12
   12738:	add	ip, ip, #118784	; 0x1d000
   1273c:	ldr	pc, [ip, #2348]!	; 0x92c

00012740 <strchr@plt>:
   12740:	add	ip, pc, #0, 12
   12744:	add	ip, ip, #118784	; 0x1d000
   12748:	ldr	pc, [ip, #2340]!	; 0x924

0001274c <fprintf@plt>:
   1274c:	add	ip, pc, #0, 12
   12750:	add	ip, ip, #118784	; 0x1d000
   12754:	ldr	pc, [ip, #2332]!	; 0x91c

00012758 <__errno_location@plt>:
   12758:	add	ip, pc, #0, 12
   1275c:	add	ip, ip, #118784	; 0x1d000
   12760:	ldr	pc, [ip, #2324]!	; 0x914

00012764 <__cxa_atexit@plt>:
   12764:	add	ip, pc, #0, 12
   12768:	add	ip, ip, #118784	; 0x1d000
   1276c:	ldr	pc, [ip, #2316]!	; 0x90c

00012770 <mkdir@plt>:
   12770:	add	ip, pc, #0, 12
   12774:	add	ip, ip, #118784	; 0x1d000
   12778:	ldr	pc, [ip, #2308]!	; 0x904

0001277c <memset@plt>:
   1277c:	add	ip, pc, #0, 12
   12780:	add	ip, ip, #118784	; 0x1d000
   12784:	ldr	pc, [ip, #2300]!	; 0x8fc

00012788 <strncpy@plt>:
   12788:	add	ip, pc, #0, 12
   1278c:	add	ip, ip, #118784	; 0x1d000
   12790:	ldr	pc, [ip, #2292]!	; 0x8f4

00012794 <prctl@plt>:
   12794:	add	ip, pc, #0, 12
   12798:	add	ip, ip, #118784	; 0x1d000
   1279c:	ldr	pc, [ip, #2284]!	; 0x8ec

000127a0 <fileno@plt>:
   127a0:	add	ip, pc, #0, 12
   127a4:	add	ip, ip, #118784	; 0x1d000
   127a8:	ldr	pc, [ip, #2276]!	; 0x8e4

000127ac <fclose@plt>:
   127ac:	add	ip, pc, #0, 12
   127b0:	add	ip, ip, #118784	; 0x1d000
   127b4:	ldr	pc, [ip, #2268]!	; 0x8dc

000127b8 <munmap@plt>:
   127b8:	add	ip, pc, #0, 12
   127bc:	add	ip, ip, #118784	; 0x1d000
   127c0:	ldr	pc, [ip, #2260]!	; 0x8d4

000127c4 <fcntl64@plt>:
   127c4:	add	ip, pc, #0, 12
   127c8:	add	ip, ip, #118784	; 0x1d000
   127cc:	ldr	pc, [ip, #2252]!	; 0x8cc

000127d0 <strrchr@plt>:
   127d0:	add	ip, pc, #0, 12
   127d4:	add	ip, ip, #118784	; 0x1d000
   127d8:	ldr	pc, [ip, #2244]!	; 0x8c4

000127dc <msync@plt>:
   127dc:	add	ip, pc, #0, 12
   127e0:	add	ip, ip, #118784	; 0x1d000
   127e4:	ldr	pc, [ip, #2236]!	; 0x8bc

000127e8 <putc@plt>:
   127e8:	add	ip, pc, #0, 12
   127ec:	add	ip, ip, #118784	; 0x1d000
   127f0:	ldr	pc, [ip, #2228]!	; 0x8b4

000127f4 <fseek@plt>:
   127f4:	add	ip, pc, #0, 12
   127f8:	add	ip, ip, #118784	; 0x1d000
   127fc:	ldr	pc, [ip, #2220]!	; 0x8ac

00012800 <abort@plt>:
   12800:	add	ip, pc, #0, 12
   12804:	add	ip, ip, #118784	; 0x1d000
   12808:	ldr	pc, [ip, #2212]!	; 0x8a4

Disassembly of section .text:

00012810 <_start@@Base>:
   12810:	mov	fp, #0
   12814:	mov	lr, #0
   12818:	pop	{r1}		; (ldr r1, [sp], #4)
   1281c:	mov	r2, sp
   12820:	push	{r2}		; (str r2, [sp, #-4]!)
   12824:	push	{r0}		; (str r0, [sp, #-4]!)
   12828:	ldr	ip, [pc, #16]	; 12840 <_start@@Base+0x30>
   1282c:	push	{ip}		; (str ip, [sp, #-4]!)
   12830:	ldr	r0, [pc, #12]	; 12844 <_start@@Base+0x34>
   12834:	ldr	r3, [pc, #12]	; 12848 <_start@@Base+0x38>
   12838:	bl	126f8 <__libc_start_main@plt>
   1283c:	bl	12800 <abort@plt>
   12840:	andeq	sp, r1, r0, lsl #16
   12844:	andeq	r3, r1, r0, asr pc
   12848:	andeq	sp, r1, r0, lsr #15
   1284c:	ldr	r3, [pc, #20]	; 12868 <_start@@Base+0x58>
   12850:	ldr	r2, [pc, #20]	; 1286c <_start@@Base+0x5c>
   12854:	add	r3, pc, r3
   12858:	ldr	r2, [r3, r2]
   1285c:	cmp	r2, #0
   12860:	bxeq	lr
   12864:	b	12710 <__gmon_start__@plt>
   12868:	andeq	sp, r1, r4, lsr #15
   1286c:	andeq	r0, r0, r0, asr #1
   12870:	ldr	r0, [pc, #24]	; 12890 <_start@@Base+0x80>
   12874:	ldr	r3, [pc, #24]	; 12894 <_start@@Base+0x84>
   12878:	cmp	r3, r0
   1287c:	bxeq	lr
   12880:	ldr	r3, [pc, #16]	; 12898 <_start@@Base+0x88>
   12884:	cmp	r3, #0
   12888:	bxeq	lr
   1288c:	bx	r3
   12890:	ldrdeq	r0, [r3], -r4
   12894:	ldrdeq	r0, [r3], -r4
   12898:	andeq	r0, r0, r0
   1289c:	ldr	r0, [pc, #36]	; 128c8 <_start@@Base+0xb8>
   128a0:	ldr	r1, [pc, #36]	; 128cc <_start@@Base+0xbc>
   128a4:	sub	r1, r1, r0
   128a8:	asr	r1, r1, #2
   128ac:	add	r1, r1, r1, lsr #31
   128b0:	asrs	r1, r1, #1
   128b4:	bxeq	lr
   128b8:	ldr	r3, [pc, #16]	; 128d0 <_start@@Base+0xc0>
   128bc:	cmp	r3, #0
   128c0:	bxeq	lr
   128c4:	bx	r3
   128c8:	ldrdeq	r0, [r3], -r4
   128cc:	ldrdeq	r0, [r3], -r4
   128d0:	andeq	r0, r0, r0
   128d4:	push	{r4, lr}
   128d8:	ldr	r4, [pc, #24]	; 128f8 <_start@@Base+0xe8>
   128dc:	ldrb	r3, [r4]
   128e0:	cmp	r3, #0
   128e4:	popne	{r4, pc}
   128e8:	bl	12870 <_start@@Base+0x60>
   128ec:	mov	r3, #1
   128f0:	strb	r3, [r4]
   128f4:	pop	{r4, pc}
   128f8:	andeq	r0, r3, r8, ror #1
   128fc:	b	1289c <_start@@Base+0x8c>

00012900 <simple_file_only_main@@Base>:
   12900:	push	{r4, r5, fp, lr}
   12904:	add	fp, sp, #8
   12908:	sub	sp, sp, #16
   1290c:	movw	r0, #240	; 0xf0
   12910:	add	r1, pc, #376	; 0x178
   12914:	add	r4, sp, #4
   12918:	movt	r0, #3
   1291c:	vld1.64	{d16-d17}, [r1 :128]
   12920:	movw	r1, #55348	; 0xd834
   12924:	movt	r1, #1
   12928:	vld1.64	{d18-d19}, [r0 :128]
   1292c:	vadd.i64	q8, q9, q8
   12930:	vst1.64	{d16-d17}, [r0 :128]
   12934:	mov	r0, r4
   12938:	bl	18b20 <init_lexer@@Base>
   1293c:	mov	r0, r4
   12940:	bl	18e60 <next@@Base>
   12944:	ldr	r1, [r0]
   12948:	mov	r5, #148	; 0x94
   1294c:	mov	r0, #0
   12950:	mov	r2, #0
   12954:	mov	r3, #23
   12958:	str	r5, [sp]
   1295c:	bl	155cc <UnityAssertEqualNumber@@Base>
   12960:	mov	r0, r4
   12964:	bl	18e60 <next@@Base>
   12968:	ldr	r1, [r0]
   1296c:	mov	r0, #2
   12970:	mov	r2, #0
   12974:	mov	r3, #25
   12978:	str	r5, [sp]
   1297c:	bl	155cc <UnityAssertEqualNumber@@Base>
   12980:	mov	r0, r4
   12984:	bl	18e60 <next@@Base>
   12988:	ldr	r1, [r0]
   1298c:	mov	r0, #3
   12990:	mov	r2, #0
   12994:	mov	r3, #27
   12998:	str	r5, [sp]
   1299c:	bl	155cc <UnityAssertEqualNumber@@Base>
   129a0:	mov	r0, r4
   129a4:	bl	18e60 <next@@Base>
   129a8:	ldr	r1, [r0]
   129ac:	mov	r0, #4
   129b0:	mov	r2, #0
   129b4:	mov	r3, #29
   129b8:	str	r5, [sp]
   129bc:	bl	155cc <UnityAssertEqualNumber@@Base>
   129c0:	mov	r0, r4
   129c4:	bl	18e60 <next@@Base>
   129c8:	ldr	r1, [r0]
   129cc:	mov	r0, #5
   129d0:	mov	r2, #0
   129d4:	mov	r3, #31
   129d8:	str	r5, [sp]
   129dc:	bl	155cc <UnityAssertEqualNumber@@Base>
   129e0:	mov	r0, r4
   129e4:	bl	18e60 <next@@Base>
   129e8:	ldr	r1, [r0]
   129ec:	mov	r0, #7
   129f0:	mov	r2, #0
   129f4:	mov	r3, #33	; 0x21
   129f8:	str	r5, [sp]
   129fc:	bl	155cc <UnityAssertEqualNumber@@Base>
   12a00:	mov	r0, r4
   12a04:	bl	18e60 <next@@Base>
   12a08:	ldr	r1, [r0]
   12a0c:	mov	r0, #1
   12a10:	mov	r2, #0
   12a14:	mov	r3, #35	; 0x23
   12a18:	str	r5, [sp]
   12a1c:	bl	155cc <UnityAssertEqualNumber@@Base>
   12a20:	mov	r0, r4
   12a24:	bl	18e60 <next@@Base>
   12a28:	ldr	r1, [r0]
   12a2c:	mov	r0, #8
   12a30:	mov	r2, #0
   12a34:	mov	r3, #37	; 0x25
   12a38:	str	r5, [sp]
   12a3c:	bl	155cc <UnityAssertEqualNumber@@Base>
   12a40:	mov	r0, r4
   12a44:	bl	18e60 <next@@Base>
   12a48:	ldr	r1, [r0]
   12a4c:	mov	r0, #6
   12a50:	mov	r2, #0
   12a54:	mov	r3, #39	; 0x27
   12a58:	str	r5, [sp]
   12a5c:	bl	155cc <UnityAssertEqualNumber@@Base>
   12a60:	mov	r0, r4
   12a64:	bl	18e60 <next@@Base>
   12a68:	ldr	r1, [r0]
   12a6c:	mov	r0, #9
   12a70:	mov	r2, #0
   12a74:	mov	r3, #41	; 0x29
   12a78:	str	r5, [sp]
   12a7c:	bl	155cc <UnityAssertEqualNumber@@Base>
   12a80:	mov	r0, r4
   12a84:	bl	18b60 <destroy_lexer@@Base>
   12a88:	sub	sp, fp, #8
   12a8c:	pop	{r4, r5, fp, pc}
   12a90:	andeq	r0, r0, r1
   12a94:	andeq	r0, r0, r0
   12a98:	andeq	r0, r0, r1
   12a9c:	andeq	r0, r0, r0

00012aa0 <push_token_to_stack@@Base>:
   12aa0:	push	{r4, r5, fp, lr}
   12aa4:	add	fp, sp, #8
   12aa8:	sub	sp, sp, #16
   12aac:	movw	r0, #240	; 0xf0
   12ab0:	add	r1, pc, #120	; 0x78
   12ab4:	add	r4, sp, #4
   12ab8:	movt	r0, #3
   12abc:	vld1.64	{d16-d17}, [r1 :128]
   12ac0:	movw	r1, #55348	; 0xd834
   12ac4:	movt	r1, #1
   12ac8:	add	r0, r0, #16
   12acc:	vld1.64	{d18-d19}, [r0 :128]
   12ad0:	vadd.i64	q8, q9, q8
   12ad4:	vst1.64	{d16-d17}, [r0 :128]
   12ad8:	mov	r0, r4
   12adc:	bl	18b20 <init_lexer@@Base>
   12ae0:	mov	r0, #8
   12ae4:	bl	126ec <malloc@plt>
   12ae8:	mov	r5, r0
   12aec:	mov	r0, r4
   12af0:	mov	r1, r5
   12af4:	bl	18c40 <push_back@@Base>
   12af8:	ldr	r0, [sp, #8]
   12afc:	mov	r1, #148	; 0x94
   12b00:	mov	r2, #0
   12b04:	mov	r3, #62	; 0x3e
   12b08:	ldr	r0, [r0, #4]
   12b0c:	str	r1, [sp]
   12b10:	mov	r1, r5
   12b14:	bl	155cc <UnityAssertEqualNumber@@Base>
   12b18:	mov	r0, r4
   12b1c:	bl	18b60 <destroy_lexer@@Base>
   12b20:	mov	r0, r5
   12b24:	bl	1265c <free@plt>
   12b28:	sub	sp, fp, #8
   12b2c:	pop	{r4, r5, fp, pc}
   12b30:	andeq	r0, r0, r1
   12b34:	andeq	r0, r0, r0
   12b38:	andeq	r0, r0, r1
   12b3c:	andeq	r0, r0, r0

00012b40 <push_two_tokens_to_stack@@Base>:
   12b40:	push	{r4, r5, r6, r7, fp, lr}
   12b44:	add	fp, sp, #16
   12b48:	sub	sp, sp, #16
   12b4c:	movw	r0, #240	; 0xf0
   12b50:	add	r1, pc, #184	; 0xb8
   12b54:	add	r4, sp, #4
   12b58:	movt	r0, #3
   12b5c:	vld1.64	{d16-d17}, [r1 :128]
   12b60:	movw	r1, #55348	; 0xd834
   12b64:	movt	r1, #1
   12b68:	add	r0, r0, #32
   12b6c:	vld1.64	{d18-d19}, [r0 :128]
   12b70:	vadd.i64	q8, q9, q8
   12b74:	vst1.64	{d16-d17}, [r0 :128]
   12b78:	mov	r0, r4
   12b7c:	bl	18b20 <init_lexer@@Base>
   12b80:	mov	r0, #8
   12b84:	bl	126ec <malloc@plt>
   12b88:	mov	r5, r0
   12b8c:	mov	r0, #8
   12b90:	bl	126ec <malloc@plt>
   12b94:	mov	r6, r0
   12b98:	mov	r0, r4
   12b9c:	mov	r1, r5
   12ba0:	bl	18c40 <push_back@@Base>
   12ba4:	ldr	r0, [sp, #8]
   12ba8:	mov	r7, #148	; 0x94
   12bac:	mov	r1, r5
   12bb0:	mov	r2, #0
   12bb4:	mov	r3, #86	; 0x56
   12bb8:	ldr	r0, [r0, #4]
   12bbc:	str	r7, [sp]
   12bc0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12bc4:	mov	r0, r4
   12bc8:	mov	r1, r6
   12bcc:	bl	18c40 <push_back@@Base>
   12bd0:	ldr	r0, [sp, #8]
   12bd4:	mov	r1, r6
   12bd8:	mov	r2, #0
   12bdc:	mov	r3, #88	; 0x58
   12be0:	ldr	r0, [r0, #4]
   12be4:	str	r7, [sp]
   12be8:	bl	155cc <UnityAssertEqualNumber@@Base>
   12bec:	mov	r0, r4
   12bf0:	bl	18b60 <destroy_lexer@@Base>
   12bf4:	mov	r0, r5
   12bf8:	bl	1265c <free@plt>
   12bfc:	mov	r0, r6
   12c00:	bl	1265c <free@plt>
   12c04:	sub	sp, fp, #16
   12c08:	pop	{r4, r5, r6, r7, fp, pc}
   12c0c:	nop	{0}
   12c10:	andeq	r0, r0, r1
   12c14:	andeq	r0, r0, r0
   12c18:	andeq	r0, r0, r1
   12c1c:	andeq	r0, r0, r0

00012c20 <push_token_and_call_next@@Base>:
   12c20:	push	{r4, r5, fp, lr}
   12c24:	add	fp, sp, #8
   12c28:	sub	sp, sp, #16
   12c2c:	movw	r0, #240	; 0xf0
   12c30:	add	r1, pc, #136	; 0x88
   12c34:	add	r4, sp, #4
   12c38:	movt	r0, #3
   12c3c:	vld1.64	{d16-d17}, [r1 :128]
   12c40:	movw	r1, #55348	; 0xd834
   12c44:	movt	r1, #1
   12c48:	add	r0, r0, #48	; 0x30
   12c4c:	vld1.64	{d18-d19}, [r0 :128]
   12c50:	vadd.i64	q8, q9, q8
   12c54:	vst1.64	{d16-d17}, [r0 :128]
   12c58:	mov	r0, r4
   12c5c:	bl	18b20 <init_lexer@@Base>
   12c60:	mov	r0, #8
   12c64:	bl	126ec <malloc@plt>
   12c68:	mov	r5, r0
   12c6c:	mov	r0, r4
   12c70:	mov	r1, r5
   12c74:	bl	18c40 <push_back@@Base>
   12c78:	mov	r0, r4
   12c7c:	bl	18e60 <next@@Base>
   12c80:	mov	r1, r0
   12c84:	mov	r0, #148	; 0x94
   12c88:	mov	r2, #0
   12c8c:	mov	r3, #113	; 0x71
   12c90:	str	r0, [sp]
   12c94:	mov	r0, r5
   12c98:	bl	155cc <UnityAssertEqualNumber@@Base>
   12c9c:	mov	r0, r4
   12ca0:	bl	18b60 <destroy_lexer@@Base>
   12ca4:	mov	r0, r5
   12ca8:	bl	1265c <free@plt>
   12cac:	sub	sp, fp, #8
   12cb0:	pop	{r4, r5, fp, pc}
   12cb4:	nop	{0}
   12cb8:	nop	{0}
   12cbc:	nop	{0}
   12cc0:	andeq	r0, r0, r1
   12cc4:	andeq	r0, r0, r0
   12cc8:	andeq	r0, r0, r1
   12ccc:	andeq	r0, r0, r0

00012cd0 <if_without_else@@Base>:
   12cd0:	push	{r4, r5, fp, lr}
   12cd4:	add	fp, sp, #8
   12cd8:	sub	sp, sp, #16
   12cdc:	movw	r0, #240	; 0xf0
   12ce0:	add	r1, pc, #744	; 0x2e8
   12ce4:	add	r4, sp, #4
   12ce8:	movt	r0, #3
   12cec:	vld1.64	{d16-d17}, [r1 :128]
   12cf0:	movw	r1, #55374	; 0xd84e
   12cf4:	movt	r1, #1
   12cf8:	add	r0, r0, #64	; 0x40
   12cfc:	vld1.64	{d18-d19}, [r0 :128]
   12d00:	vadd.i64	q8, q9, q8
   12d04:	vst1.64	{d16-d17}, [r0 :128]
   12d08:	mov	r0, r4
   12d0c:	bl	18b20 <init_lexer@@Base>
   12d10:	mov	r0, r4
   12d14:	bl	18e60 <next@@Base>
   12d18:	ldr	r1, [r0]
   12d1c:	mov	r5, #148	; 0x94
   12d20:	mov	r0, #0
   12d24:	mov	r2, #0
   12d28:	mov	r3, #140	; 0x8c
   12d2c:	str	r5, [sp]
   12d30:	bl	155cc <UnityAssertEqualNumber@@Base>
   12d34:	mov	r0, r4
   12d38:	bl	18e60 <next@@Base>
   12d3c:	ldr	r1, [r0]
   12d40:	mov	r0, #2
   12d44:	mov	r2, #0
   12d48:	mov	r3, #142	; 0x8e
   12d4c:	str	r5, [sp]
   12d50:	bl	155cc <UnityAssertEqualNumber@@Base>
   12d54:	mov	r0, r4
   12d58:	bl	18e60 <next@@Base>
   12d5c:	ldr	r1, [r0]
   12d60:	mov	r0, #3
   12d64:	mov	r2, #0
   12d68:	mov	r3, #144	; 0x90
   12d6c:	str	r5, [sp]
   12d70:	bl	155cc <UnityAssertEqualNumber@@Base>
   12d74:	mov	r0, r4
   12d78:	bl	18e60 <next@@Base>
   12d7c:	ldr	r1, [r0]
   12d80:	mov	r0, #4
   12d84:	mov	r2, #0
   12d88:	mov	r3, #146	; 0x92
   12d8c:	str	r5, [sp]
   12d90:	bl	155cc <UnityAssertEqualNumber@@Base>
   12d94:	mov	r0, r4
   12d98:	bl	18e60 <next@@Base>
   12d9c:	ldr	r1, [r0]
   12da0:	mov	r0, #5
   12da4:	mov	r2, #0
   12da8:	mov	r3, #148	; 0x94
   12dac:	str	r5, [sp]
   12db0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12db4:	mov	r0, r4
   12db8:	bl	18e60 <next@@Base>
   12dbc:	ldr	r1, [r0]
   12dc0:	mov	r0, #10
   12dc4:	mov	r2, #0
   12dc8:	mov	r3, #150	; 0x96
   12dcc:	str	r5, [sp]
   12dd0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12dd4:	mov	r0, r4
   12dd8:	bl	18e60 <next@@Base>
   12ddc:	ldr	r1, [r0]
   12de0:	mov	r0, #3
   12de4:	mov	r2, #0
   12de8:	mov	r3, #152	; 0x98
   12dec:	str	r5, [sp]
   12df0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12df4:	mov	r0, r4
   12df8:	bl	18e60 <next@@Base>
   12dfc:	ldr	r1, [r0]
   12e00:	mov	r0, #1
   12e04:	mov	r2, #0
   12e08:	mov	r3, #154	; 0x9a
   12e0c:	str	r5, [sp]
   12e10:	bl	155cc <UnityAssertEqualNumber@@Base>
   12e14:	mov	r0, r4
   12e18:	bl	18e60 <next@@Base>
   12e1c:	ldr	r1, [r0]
   12e20:	mov	r0, #12
   12e24:	mov	r2, #0
   12e28:	mov	r3, #156	; 0x9c
   12e2c:	str	r5, [sp]
   12e30:	bl	155cc <UnityAssertEqualNumber@@Base>
   12e34:	mov	r0, r4
   12e38:	bl	18e60 <next@@Base>
   12e3c:	ldr	r1, [r0]
   12e40:	mov	r0, #1
   12e44:	mov	r2, #0
   12e48:	mov	r3, #158	; 0x9e
   12e4c:	str	r5, [sp]
   12e50:	bl	155cc <UnityAssertEqualNumber@@Base>
   12e54:	mov	r0, r4
   12e58:	bl	18e60 <next@@Base>
   12e5c:	ldr	r1, [r0]
   12e60:	mov	r0, #4
   12e64:	mov	r2, #0
   12e68:	mov	r3, #160	; 0xa0
   12e6c:	str	r5, [sp]
   12e70:	bl	155cc <UnityAssertEqualNumber@@Base>
   12e74:	mov	r0, r4
   12e78:	bl	18e60 <next@@Base>
   12e7c:	ldr	r1, [r0]
   12e80:	mov	r0, #5
   12e84:	mov	r2, #0
   12e88:	mov	r3, #162	; 0xa2
   12e8c:	str	r5, [sp]
   12e90:	bl	155cc <UnityAssertEqualNumber@@Base>
   12e94:	mov	r0, r4
   12e98:	bl	18e60 <next@@Base>
   12e9c:	ldr	r1, [r0]
   12ea0:	mov	r0, #7
   12ea4:	mov	r2, #0
   12ea8:	mov	r3, #164	; 0xa4
   12eac:	str	r5, [sp]
   12eb0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12eb4:	mov	r0, r4
   12eb8:	bl	18e60 <next@@Base>
   12ebc:	ldr	r1, [r0]
   12ec0:	mov	r0, #1
   12ec4:	mov	r2, #0
   12ec8:	mov	r3, #166	; 0xa6
   12ecc:	str	r5, [sp]
   12ed0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12ed4:	mov	r0, r4
   12ed8:	bl	18e60 <next@@Base>
   12edc:	ldr	r1, [r0]
   12ee0:	mov	r0, #8
   12ee4:	mov	r2, #0
   12ee8:	mov	r3, #168	; 0xa8
   12eec:	str	r5, [sp]
   12ef0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12ef4:	mov	r0, r4
   12ef8:	bl	18e60 <next@@Base>
   12efc:	ldr	r1, [r0]
   12f00:	mov	r0, #6
   12f04:	mov	r2, #0
   12f08:	mov	r3, #170	; 0xaa
   12f0c:	str	r5, [sp]
   12f10:	bl	155cc <UnityAssertEqualNumber@@Base>
   12f14:	mov	r0, r4
   12f18:	bl	18e60 <next@@Base>
   12f1c:	ldr	r1, [r0]
   12f20:	mov	r0, #7
   12f24:	mov	r2, #0
   12f28:	mov	r3, #172	; 0xac
   12f2c:	str	r5, [sp]
   12f30:	bl	155cc <UnityAssertEqualNumber@@Base>
   12f34:	mov	r0, r4
   12f38:	bl	18e60 <next@@Base>
   12f3c:	ldr	r1, [r0]
   12f40:	mov	r0, #1
   12f44:	mov	r2, #0
   12f48:	mov	r3, #174	; 0xae
   12f4c:	str	r5, [sp]
   12f50:	bl	155cc <UnityAssertEqualNumber@@Base>
   12f54:	mov	r0, r4
   12f58:	bl	18e60 <next@@Base>
   12f5c:	ldr	r1, [r0]
   12f60:	mov	r0, #8
   12f64:	mov	r2, #0
   12f68:	mov	r3, #176	; 0xb0
   12f6c:	str	r5, [sp]
   12f70:	bl	155cc <UnityAssertEqualNumber@@Base>
   12f74:	mov	r0, r4
   12f78:	bl	18e60 <next@@Base>
   12f7c:	ldr	r1, [r0]
   12f80:	mov	r0, #6
   12f84:	mov	r2, #0
   12f88:	mov	r3, #178	; 0xb2
   12f8c:	str	r5, [sp]
   12f90:	bl	155cc <UnityAssertEqualNumber@@Base>
   12f94:	mov	r0, r4
   12f98:	bl	18e60 <next@@Base>
   12f9c:	ldr	r1, [r0]
   12fa0:	mov	r0, #9
   12fa4:	mov	r2, #0
   12fa8:	mov	r3, #180	; 0xb4
   12fac:	str	r5, [sp]
   12fb0:	bl	155cc <UnityAssertEqualNumber@@Base>
   12fb4:	mov	r0, r4
   12fb8:	bl	18b60 <destroy_lexer@@Base>
   12fbc:	sub	sp, fp, #8
   12fc0:	pop	{r4, r5, fp, pc}
   12fc4:	nop	{0}
   12fc8:	nop	{0}
   12fcc:	nop	{0}
   12fd0:	andeq	r0, r0, r1
   12fd4:	andeq	r0, r0, r0
   12fd8:	andeq	r0, r0, r1
   12fdc:	andeq	r0, r0, r0

00012fe0 <if_with_else@@Base>:
   12fe0:	push	{r4, r5, fp, lr}
   12fe4:	add	fp, sp, #8
   12fe8:	sub	sp, sp, #16
   12fec:	movw	r0, #240	; 0xf0
   12ff0:	add	r1, pc, #936	; 0x3a8
   12ff4:	add	r4, sp, #4
   12ff8:	movt	r0, #3
   12ffc:	vld1.64	{d16-d17}, [r1 :128]
   13000:	movw	r1, #55431	; 0xd887
   13004:	movt	r1, #1
   13008:	add	r0, r0, #80	; 0x50
   1300c:	vld1.64	{d18-d19}, [r0 :128]
   13010:	vadd.i64	q8, q9, q8
   13014:	vst1.64	{d16-d17}, [r0 :128]
   13018:	mov	r0, r4
   1301c:	bl	18b20 <init_lexer@@Base>
   13020:	mov	r0, r4
   13024:	bl	18e60 <next@@Base>
   13028:	ldr	r1, [r0]
   1302c:	mov	r5, #148	; 0x94
   13030:	mov	r0, #0
   13034:	mov	r2, #0
   13038:	mov	r3, #210	; 0xd2
   1303c:	str	r5, [sp]
   13040:	bl	155cc <UnityAssertEqualNumber@@Base>
   13044:	mov	r0, r4
   13048:	bl	18e60 <next@@Base>
   1304c:	ldr	r1, [r0]
   13050:	mov	r0, #2
   13054:	mov	r2, #0
   13058:	mov	r3, #212	; 0xd4
   1305c:	str	r5, [sp]
   13060:	bl	155cc <UnityAssertEqualNumber@@Base>
   13064:	mov	r0, r4
   13068:	bl	18e60 <next@@Base>
   1306c:	ldr	r1, [r0]
   13070:	mov	r0, #3
   13074:	mov	r2, #0
   13078:	mov	r3, #214	; 0xd6
   1307c:	str	r5, [sp]
   13080:	bl	155cc <UnityAssertEqualNumber@@Base>
   13084:	mov	r0, r4
   13088:	bl	18e60 <next@@Base>
   1308c:	ldr	r1, [r0]
   13090:	mov	r0, #4
   13094:	mov	r2, #0
   13098:	mov	r3, #216	; 0xd8
   1309c:	str	r5, [sp]
   130a0:	bl	155cc <UnityAssertEqualNumber@@Base>
   130a4:	mov	r0, r4
   130a8:	bl	18e60 <next@@Base>
   130ac:	ldr	r1, [r0]
   130b0:	mov	r0, #5
   130b4:	mov	r2, #0
   130b8:	mov	r3, #218	; 0xda
   130bc:	str	r5, [sp]
   130c0:	bl	155cc <UnityAssertEqualNumber@@Base>
   130c4:	mov	r0, r4
   130c8:	bl	18e60 <next@@Base>
   130cc:	ldr	r1, [r0]
   130d0:	mov	r0, #10
   130d4:	mov	r2, #0
   130d8:	mov	r3, #220	; 0xdc
   130dc:	str	r5, [sp]
   130e0:	bl	155cc <UnityAssertEqualNumber@@Base>
   130e4:	mov	r0, r4
   130e8:	bl	18e60 <next@@Base>
   130ec:	ldr	r1, [r0]
   130f0:	mov	r0, #3
   130f4:	mov	r2, #0
   130f8:	mov	r3, #222	; 0xde
   130fc:	str	r5, [sp]
   13100:	bl	155cc <UnityAssertEqualNumber@@Base>
   13104:	mov	r0, r4
   13108:	bl	18e60 <next@@Base>
   1310c:	ldr	r1, [r0]
   13110:	mov	r0, #1
   13114:	mov	r2, #0
   13118:	mov	r3, #224	; 0xe0
   1311c:	str	r5, [sp]
   13120:	bl	155cc <UnityAssertEqualNumber@@Base>
   13124:	mov	r0, r4
   13128:	bl	18e60 <next@@Base>
   1312c:	ldr	r1, [r0]
   13130:	mov	r0, #12
   13134:	mov	r2, #0
   13138:	mov	r3, #226	; 0xe2
   1313c:	str	r5, [sp]
   13140:	bl	155cc <UnityAssertEqualNumber@@Base>
   13144:	mov	r0, r4
   13148:	bl	18e60 <next@@Base>
   1314c:	ldr	r1, [r0]
   13150:	mov	r0, #1
   13154:	mov	r2, #0
   13158:	mov	r3, #228	; 0xe4
   1315c:	str	r5, [sp]
   13160:	bl	155cc <UnityAssertEqualNumber@@Base>
   13164:	mov	r0, r4
   13168:	bl	18e60 <next@@Base>
   1316c:	ldr	r1, [r0]
   13170:	mov	r0, #4
   13174:	mov	r2, #0
   13178:	mov	r3, #230	; 0xe6
   1317c:	str	r5, [sp]
   13180:	bl	155cc <UnityAssertEqualNumber@@Base>
   13184:	mov	r0, r4
   13188:	bl	18e60 <next@@Base>
   1318c:	ldr	r1, [r0]
   13190:	mov	r0, #5
   13194:	mov	r2, #0
   13198:	mov	r3, #232	; 0xe8
   1319c:	str	r5, [sp]
   131a0:	bl	155cc <UnityAssertEqualNumber@@Base>
   131a4:	mov	r0, r4
   131a8:	bl	18e60 <next@@Base>
   131ac:	ldr	r1, [r0]
   131b0:	mov	r0, #7
   131b4:	mov	r2, #0
   131b8:	mov	r3, #234	; 0xea
   131bc:	str	r5, [sp]
   131c0:	bl	155cc <UnityAssertEqualNumber@@Base>
   131c4:	mov	r0, r4
   131c8:	bl	18e60 <next@@Base>
   131cc:	ldr	r1, [r0]
   131d0:	mov	r0, #1
   131d4:	mov	r2, #0
   131d8:	mov	r3, #236	; 0xec
   131dc:	str	r5, [sp]
   131e0:	bl	155cc <UnityAssertEqualNumber@@Base>
   131e4:	mov	r0, r4
   131e8:	bl	18e60 <next@@Base>
   131ec:	ldr	r1, [r0]
   131f0:	mov	r0, #8
   131f4:	mov	r2, #0
   131f8:	mov	r3, #238	; 0xee
   131fc:	str	r5, [sp]
   13200:	bl	155cc <UnityAssertEqualNumber@@Base>
   13204:	mov	r0, r4
   13208:	bl	18e60 <next@@Base>
   1320c:	ldr	r1, [r0]
   13210:	mov	r0, #6
   13214:	mov	r2, #0
   13218:	mov	r3, #240	; 0xf0
   1321c:	str	r5, [sp]
   13220:	bl	155cc <UnityAssertEqualNumber@@Base>
   13224:	mov	r0, r4
   13228:	bl	18e60 <next@@Base>
   1322c:	ldr	r1, [r0]
   13230:	mov	r0, #11
   13234:	mov	r2, #0
   13238:	mov	r3, #242	; 0xf2
   1323c:	str	r5, [sp]
   13240:	bl	155cc <UnityAssertEqualNumber@@Base>
   13244:	mov	r0, r4
   13248:	bl	18e60 <next@@Base>
   1324c:	ldr	r1, [r0]
   13250:	mov	r0, #5
   13254:	mov	r2, #0
   13258:	mov	r3, #244	; 0xf4
   1325c:	str	r5, [sp]
   13260:	bl	155cc <UnityAssertEqualNumber@@Base>
   13264:	mov	r0, r4
   13268:	bl	18e60 <next@@Base>
   1326c:	ldr	r1, [r0]
   13270:	mov	r0, #7
   13274:	mov	r2, #0
   13278:	mov	r3, #246	; 0xf6
   1327c:	str	r5, [sp]
   13280:	bl	155cc <UnityAssertEqualNumber@@Base>
   13284:	mov	r0, r4
   13288:	bl	18e60 <next@@Base>
   1328c:	ldr	r1, [r0]
   13290:	mov	r0, #1
   13294:	mov	r2, #0
   13298:	mov	r3, #248	; 0xf8
   1329c:	str	r5, [sp]
   132a0:	bl	155cc <UnityAssertEqualNumber@@Base>
   132a4:	mov	r0, r4
   132a8:	bl	18e60 <next@@Base>
   132ac:	ldr	r1, [r0]
   132b0:	mov	r0, #8
   132b4:	mov	r2, #0
   132b8:	mov	r3, #250	; 0xfa
   132bc:	str	r5, [sp]
   132c0:	bl	155cc <UnityAssertEqualNumber@@Base>
   132c4:	mov	r0, r4
   132c8:	bl	18e60 <next@@Base>
   132cc:	ldr	r1, [r0]
   132d0:	mov	r0, #6
   132d4:	mov	r2, #0
   132d8:	mov	r3, #252	; 0xfc
   132dc:	str	r5, [sp]
   132e0:	bl	155cc <UnityAssertEqualNumber@@Base>
   132e4:	mov	r0, r4
   132e8:	bl	18e60 <next@@Base>
   132ec:	ldr	r1, [r0]
   132f0:	mov	r0, #7
   132f4:	mov	r2, #0
   132f8:	mov	r3, #254	; 0xfe
   132fc:	str	r5, [sp]
   13300:	bl	155cc <UnityAssertEqualNumber@@Base>
   13304:	mov	r0, r4
   13308:	bl	18e60 <next@@Base>
   1330c:	ldr	r1, [r0]
   13310:	mov	r0, #1
   13314:	mov	r2, #0
   13318:	mov	r3, #256	; 0x100
   1331c:	str	r5, [sp]
   13320:	bl	155cc <UnityAssertEqualNumber@@Base>
   13324:	mov	r0, r4
   13328:	bl	18e60 <next@@Base>
   1332c:	ldr	r1, [r0]
   13330:	mov	r0, #8
   13334:	mov	r2, #0
   13338:	movw	r3, #258	; 0x102
   1333c:	str	r5, [sp]
   13340:	bl	155cc <UnityAssertEqualNumber@@Base>
   13344:	mov	r0, r4
   13348:	bl	18e60 <next@@Base>
   1334c:	ldr	r1, [r0]
   13350:	mov	r0, #6
   13354:	mov	r2, #0
   13358:	mov	r3, #260	; 0x104
   1335c:	str	r5, [sp]
   13360:	bl	155cc <UnityAssertEqualNumber@@Base>
   13364:	mov	r0, r4
   13368:	bl	18e60 <next@@Base>
   1336c:	ldr	r1, [r0]
   13370:	mov	r0, #9
   13374:	mov	r2, #0
   13378:	movw	r3, #262	; 0x106
   1337c:	str	r5, [sp]
   13380:	bl	155cc <UnityAssertEqualNumber@@Base>
   13384:	mov	r0, r4
   13388:	bl	18b60 <destroy_lexer@@Base>
   1338c:	sub	sp, fp, #8
   13390:	pop	{r4, r5, fp, pc}
   13394:	nop	{0}
   13398:	nop	{0}
   1339c:	nop	{0}
   133a0:	andeq	r0, r0, r1
   133a4:	andeq	r0, r0, r0
   133a8:	andeq	r0, r0, r1
   133ac:	andeq	r0, r0, r0

000133b0 <read_token_int_type@@Base>:
   133b0:	push	{r4, sl, fp, lr}
   133b4:	add	fp, sp, #8
   133b8:	sub	sp, sp, #16
   133bc:	movw	r0, #240	; 0xf0
   133c0:	add	r1, pc, #104	; 0x68
   133c4:	add	r4, sp, #4
   133c8:	movt	r0, #3
   133cc:	vld1.64	{d16-d17}, [r1 :128]
   133d0:	movw	r1, #58621	; 0xe4fd
   133d4:	movt	r1, #1
   133d8:	add	r0, r0, #96	; 0x60
   133dc:	vld1.64	{d18-d19}, [r0 :128]
   133e0:	vadd.i64	q8, q9, q8
   133e4:	vst1.64	{d16-d17}, [r0 :128]
   133e8:	mov	r0, r4
   133ec:	bl	18b20 <init_lexer@@Base>
   133f0:	mov	r0, r4
   133f4:	bl	18e60 <next@@Base>
   133f8:	ldr	r1, [r0]
   133fc:	mov	r0, #148	; 0x94
   13400:	mov	r2, #0
   13404:	movw	r3, #279	; 0x117
   13408:	str	r0, [sp]
   1340c:	mov	r0, #0
   13410:	bl	155cc <UnityAssertEqualNumber@@Base>
   13414:	mov	r0, r4
   13418:	bl	18b60 <destroy_lexer@@Base>
   1341c:	sub	sp, fp, #8
   13420:	pop	{r4, sl, fp, pc}
   13424:	nop	{0}
   13428:	nop	{0}
   1342c:	nop	{0}
   13430:	andeq	r0, r0, r1
   13434:	andeq	r0, r0, r0
   13438:	andeq	r0, r0, r1
   1343c:	andeq	r0, r0, r0

00013440 <read_token_int_value@@Base>:
   13440:	push	{r4, sl, fp, lr}
   13444:	add	fp, sp, #8
   13448:	sub	sp, sp, #16
   1344c:	movw	r0, #352	; 0x160
   13450:	add	r1, pc, #88	; 0x58
   13454:	add	r4, sp, #4
   13458:	movt	r0, #3
   1345c:	vld1.64	{d16-d17}, [r1 :128]
   13460:	movw	r1, #55512	; 0xd8d8
   13464:	movt	r1, #1
   13468:	vld1.64	{d18-d19}, [r0 :128]
   1346c:	vadd.i64	q8, q9, q8
   13470:	vst1.64	{d16-d17}, [r0 :128]
   13474:	mov	r0, r4
   13478:	bl	18b20 <init_lexer@@Base>
   1347c:	mov	r0, r4
   13480:	bl	18e60 <next@@Base>
   13484:	ldr	r1, [r0]
   13488:	mov	r0, #148	; 0x94
   1348c:	mov	r2, #0
   13490:	mov	r3, #296	; 0x128
   13494:	str	r0, [sp]
   13498:	mov	r0, #1
   1349c:	bl	155cc <UnityAssertEqualNumber@@Base>
   134a0:	mov	r0, r4
   134a4:	bl	18b60 <destroy_lexer@@Base>
   134a8:	sub	sp, fp, #8
   134ac:	pop	{r4, sl, fp, pc}
   134b0:	andeq	r0, r0, r1
   134b4:	andeq	r0, r0, r0
   134b8:	andeq	r0, r0, r1
   134bc:	andeq	r0, r0, r0

000134c0 <read_token_function@@Base>:
   134c0:	push	{r4, sl, fp, lr}
   134c4:	add	fp, sp, #8
   134c8:	sub	sp, sp, #16
   134cc:	movw	r0, #352	; 0x160
   134d0:	add	r1, pc, #104	; 0x68
   134d4:	add	r4, sp, #4
   134d8:	movt	r0, #3
   134dc:	vld1.64	{d16-d17}, [r1 :128]
   134e0:	movw	r1, #55735	; 0xd9b7
   134e4:	movt	r1, #1
   134e8:	add	r0, r0, #16
   134ec:	vld1.64	{d18-d19}, [r0 :128]
   134f0:	vadd.i64	q8, q9, q8
   134f4:	vst1.64	{d16-d17}, [r0 :128]
   134f8:	mov	r0, r4
   134fc:	bl	18b20 <init_lexer@@Base>
   13500:	mov	r0, r4
   13504:	bl	18e60 <next@@Base>
   13508:	ldr	r1, [r0]
   1350c:	mov	r0, #148	; 0x94
   13510:	mov	r2, #0
   13514:	movw	r3, #313	; 0x139
   13518:	str	r0, [sp]
   1351c:	mov	r0, #2
   13520:	bl	155cc <UnityAssertEqualNumber@@Base>
   13524:	mov	r0, r4
   13528:	bl	18b60 <destroy_lexer@@Base>
   1352c:	sub	sp, fp, #8
   13530:	pop	{r4, sl, fp, pc}
   13534:	nop	{0}
   13538:	nop	{0}
   1353c:	nop	{0}
   13540:	andeq	r0, r0, r1
   13544:	andeq	r0, r0, r0
   13548:	andeq	r0, r0, r1
   1354c:	andeq	r0, r0, r0

00013550 <read_token_opar@@Base>:
   13550:	push	{r4, sl, fp, lr}
   13554:	add	fp, sp, #8
   13558:	sub	sp, sp, #16
   1355c:	movw	r0, #352	; 0x160
   13560:	add	r1, pc, #104	; 0x68
   13564:	add	r4, sp, #4
   13568:	movt	r0, #3
   1356c:	vld1.64	{d16-d17}, [r1 :128]
   13570:	movw	r1, #55517	; 0xd8dd
   13574:	movt	r1, #1
   13578:	add	r0, r0, #32
   1357c:	vld1.64	{d18-d19}, [r0 :128]
   13580:	vadd.i64	q8, q9, q8
   13584:	vst1.64	{d16-d17}, [r0 :128]
   13588:	mov	r0, r4
   1358c:	bl	18b20 <init_lexer@@Base>
   13590:	mov	r0, r4
   13594:	bl	18e60 <next@@Base>
   13598:	ldr	r1, [r0]
   1359c:	mov	r0, #148	; 0x94
   135a0:	mov	r2, #0
   135a4:	movw	r3, #330	; 0x14a
   135a8:	str	r0, [sp]
   135ac:	mov	r0, #3
   135b0:	bl	155cc <UnityAssertEqualNumber@@Base>
   135b4:	mov	r0, r4
   135b8:	bl	18b60 <destroy_lexer@@Base>
   135bc:	sub	sp, fp, #8
   135c0:	pop	{r4, sl, fp, pc}
   135c4:	nop	{0}
   135c8:	nop	{0}
   135cc:	nop	{0}
   135d0:	andeq	r0, r0, r1
   135d4:	andeq	r0, r0, r0
   135d8:	andeq	r0, r0, r1
   135dc:	andeq	r0, r0, r0

000135e0 <read_token_cpar@@Base>:
   135e0:	push	{r4, sl, fp, lr}
   135e4:	add	fp, sp, #8
   135e8:	sub	sp, sp, #16
   135ec:	movw	r0, #352	; 0x160
   135f0:	add	r1, pc, #104	; 0x68
   135f4:	add	r4, sp, #4
   135f8:	movt	r0, #3
   135fc:	vld1.64	{d16-d17}, [r1 :128]
   13600:	movw	r1, #55519	; 0xd8df
   13604:	movt	r1, #1
   13608:	add	r0, r0, #48	; 0x30
   1360c:	vld1.64	{d18-d19}, [r0 :128]
   13610:	vadd.i64	q8, q9, q8
   13614:	vst1.64	{d16-d17}, [r0 :128]
   13618:	mov	r0, r4
   1361c:	bl	18b20 <init_lexer@@Base>
   13620:	mov	r0, r4
   13624:	bl	18e60 <next@@Base>
   13628:	ldr	r1, [r0]
   1362c:	mov	r0, #148	; 0x94
   13630:	mov	r2, #0
   13634:	movw	r3, #347	; 0x15b
   13638:	str	r0, [sp]
   1363c:	mov	r0, #4
   13640:	bl	155cc <UnityAssertEqualNumber@@Base>
   13644:	mov	r0, r4
   13648:	bl	18b60 <destroy_lexer@@Base>
   1364c:	sub	sp, fp, #8
   13650:	pop	{r4, sl, fp, pc}
   13654:	nop	{0}
   13658:	nop	{0}
   1365c:	nop	{0}
   13660:	andeq	r0, r0, r1
   13664:	andeq	r0, r0, r0
   13668:	andeq	r0, r0, r1
   1366c:	andeq	r0, r0, r0

00013670 <read_token_obra@@Base>:
   13670:	push	{r4, sl, fp, lr}
   13674:	add	fp, sp, #8
   13678:	sub	sp, sp, #16
   1367c:	movw	r0, #352	; 0x160
   13680:	add	r1, pc, #104	; 0x68
   13684:	add	r4, sp, #4
   13688:	movt	r0, #3
   1368c:	vld1.64	{d16-d17}, [r1 :128]
   13690:	movw	r1, #55521	; 0xd8e1
   13694:	movt	r1, #1
   13698:	add	r0, r0, #64	; 0x40
   1369c:	vld1.64	{d18-d19}, [r0 :128]
   136a0:	vadd.i64	q8, q9, q8
   136a4:	vst1.64	{d16-d17}, [r0 :128]
   136a8:	mov	r0, r4
   136ac:	bl	18b20 <init_lexer@@Base>
   136b0:	mov	r0, r4
   136b4:	bl	18e60 <next@@Base>
   136b8:	ldr	r1, [r0]
   136bc:	mov	r0, #148	; 0x94
   136c0:	mov	r2, #0
   136c4:	mov	r3, #364	; 0x16c
   136c8:	str	r0, [sp]
   136cc:	mov	r0, #5
   136d0:	bl	155cc <UnityAssertEqualNumber@@Base>
   136d4:	mov	r0, r4
   136d8:	bl	18b60 <destroy_lexer@@Base>
   136dc:	sub	sp, fp, #8
   136e0:	pop	{r4, sl, fp, pc}
   136e4:	nop	{0}
   136e8:	nop	{0}
   136ec:	nop	{0}
   136f0:	andeq	r0, r0, r1
   136f4:	andeq	r0, r0, r0
   136f8:	andeq	r0, r0, r1
   136fc:	andeq	r0, r0, r0

00013700 <read_token_cbra@@Base>:
   13700:	push	{r4, sl, fp, lr}
   13704:	add	fp, sp, #8
   13708:	sub	sp, sp, #16
   1370c:	movw	r0, #352	; 0x160
   13710:	add	r1, pc, #104	; 0x68
   13714:	add	r4, sp, #4
   13718:	movt	r0, #3
   1371c:	vld1.64	{d16-d17}, [r1 :128]
   13720:	movw	r1, #55372	; 0xd84c
   13724:	movt	r1, #1
   13728:	add	r0, r0, #80	; 0x50
   1372c:	vld1.64	{d18-d19}, [r0 :128]
   13730:	vadd.i64	q8, q9, q8
   13734:	vst1.64	{d16-d17}, [r0 :128]
   13738:	mov	r0, r4
   1373c:	bl	18b20 <init_lexer@@Base>
   13740:	mov	r0, r4
   13744:	bl	18e60 <next@@Base>
   13748:	ldr	r1, [r0]
   1374c:	mov	r0, #148	; 0x94
   13750:	mov	r2, #0
   13754:	movw	r3, #382	; 0x17e
   13758:	str	r0, [sp]
   1375c:	mov	r0, #6
   13760:	bl	155cc <UnityAssertEqualNumber@@Base>
   13764:	mov	r0, r4
   13768:	bl	18b60 <destroy_lexer@@Base>
   1376c:	sub	sp, fp, #8
   13770:	pop	{r4, sl, fp, pc}
   13774:	nop	{0}
   13778:	nop	{0}
   1377c:	nop	{0}
   13780:	andeq	r0, r0, r1
   13784:	andeq	r0, r0, r0
   13788:	andeq	r0, r0, r1
   1378c:	andeq	r0, r0, r0

00013790 <read_token_return@@Base>:
   13790:	push	{r4, sl, fp, lr}
   13794:	add	fp, sp, #8
   13798:	sub	sp, sp, #16
   1379c:	movw	r0, #352	; 0x160
   137a0:	add	r1, pc, #104	; 0x68
   137a4:	add	r4, sp, #4
   137a8:	movt	r0, #3
   137ac:	vld1.64	{d16-d17}, [r1 :128]
   137b0:	movw	r1, #55975	; 0xdaa7
   137b4:	movt	r1, #1
   137b8:	add	r0, r0, #96	; 0x60
   137bc:	vld1.64	{d18-d19}, [r0 :128]
   137c0:	vadd.i64	q8, q9, q8
   137c4:	vst1.64	{d16-d17}, [r0 :128]
   137c8:	mov	r0, r4
   137cc:	bl	18b20 <init_lexer@@Base>
   137d0:	mov	r0, r4
   137d4:	bl	18e60 <next@@Base>
   137d8:	ldr	r1, [r0]
   137dc:	mov	r0, #148	; 0x94
   137e0:	mov	r2, #0
   137e4:	movw	r3, #399	; 0x18f
   137e8:	str	r0, [sp]
   137ec:	mov	r0, #7
   137f0:	bl	155cc <UnityAssertEqualNumber@@Base>
   137f4:	mov	r0, r4
   137f8:	bl	18b60 <destroy_lexer@@Base>
   137fc:	sub	sp, fp, #8
   13800:	pop	{r4, sl, fp, pc}
   13804:	nop	{0}
   13808:	nop	{0}
   1380c:	nop	{0}
   13810:	andeq	r0, r0, r1
   13814:	andeq	r0, r0, r0
   13818:	andeq	r0, r0, r1
   1381c:	andeq	r0, r0, r0

00013820 <read_token_semicolon@@Base>:
   13820:	push	{r4, sl, fp, lr}
   13824:	add	fp, sp, #8
   13828:	sub	sp, sp, #16
   1382c:	movw	r0, #464	; 0x1d0
   13830:	add	r1, pc, #88	; 0x58
   13834:	add	r4, sp, #4
   13838:	movt	r0, #3
   1383c:	vld1.64	{d16-d17}, [r1 :128]
   13840:	movw	r1, #55523	; 0xd8e3
   13844:	movt	r1, #1
   13848:	vld1.64	{d18-d19}, [r0 :128]
   1384c:	vadd.i64	q8, q9, q8
   13850:	vst1.64	{d16-d17}, [r0 :128]
   13854:	mov	r0, r4
   13858:	bl	18b20 <init_lexer@@Base>
   1385c:	mov	r0, r4
   13860:	bl	18e60 <next@@Base>
   13864:	ldr	r1, [r0]
   13868:	mov	r0, #148	; 0x94
   1386c:	mov	r2, #0
   13870:	mov	r3, #416	; 0x1a0
   13874:	str	r0, [sp]
   13878:	mov	r0, #8
   1387c:	bl	155cc <UnityAssertEqualNumber@@Base>
   13880:	mov	r0, r4
   13884:	bl	18b60 <destroy_lexer@@Base>
   13888:	sub	sp, fp, #8
   1388c:	pop	{r4, sl, fp, pc}
   13890:	andeq	r0, r0, r1
   13894:	andeq	r0, r0, r0
   13898:	andeq	r0, r0, r1
   1389c:	andeq	r0, r0, r0

000138a0 <read_token_eof@@Base>:
   138a0:	push	{r4, sl, fp, lr}
   138a4:	add	fp, sp, #8
   138a8:	sub	sp, sp, #16
   138ac:	movw	r0, #464	; 0x1d0
   138b0:	add	r1, pc, #104	; 0x68
   138b4:	add	r4, sp, #4
   138b8:	movt	r0, #3
   138bc:	vld1.64	{d16-d17}, [r1 :128]
   138c0:	movw	r1, #61206	; 0xef16
   138c4:	movt	r1, #1
   138c8:	add	r0, r0, #16
   138cc:	vld1.64	{d18-d19}, [r0 :128]
   138d0:	vadd.i64	q8, q9, q8
   138d4:	vst1.64	{d16-d17}, [r0 :128]
   138d8:	mov	r0, r4
   138dc:	bl	18b20 <init_lexer@@Base>
   138e0:	mov	r0, r4
   138e4:	bl	18e60 <next@@Base>
   138e8:	ldr	r1, [r0]
   138ec:	mov	r0, #148	; 0x94
   138f0:	mov	r2, #0
   138f4:	movw	r3, #433	; 0x1b1
   138f8:	str	r0, [sp]
   138fc:	mov	r0, #9
   13900:	bl	155cc <UnityAssertEqualNumber@@Base>
   13904:	mov	r0, r4
   13908:	bl	18b60 <destroy_lexer@@Base>
   1390c:	sub	sp, fp, #8
   13910:	pop	{r4, sl, fp, pc}
   13914:	nop	{0}
   13918:	nop	{0}
   1391c:	nop	{0}
   13920:	andeq	r0, r0, r1
   13924:	andeq	r0, r0, r0
   13928:	andeq	r0, r0, r1
   1392c:	andeq	r0, r0, r0

00013930 <read_token_if@@Base>:
   13930:	push	{r4, sl, fp, lr}
   13934:	add	fp, sp, #8
   13938:	sub	sp, sp, #16
   1393c:	movw	r0, #464	; 0x1d0
   13940:	add	r1, pc, #104	; 0x68
   13944:	add	r4, sp, #4
   13948:	movt	r0, #3
   1394c:	vld1.64	{d16-d17}, [r1 :128]
   13950:	movw	r1, #56029	; 0xdadd
   13954:	movt	r1, #1
   13958:	add	r0, r0, #32
   1395c:	vld1.64	{d18-d19}, [r0 :128]
   13960:	vadd.i64	q8, q9, q8
   13964:	vst1.64	{d16-d17}, [r0 :128]
   13968:	mov	r0, r4
   1396c:	bl	18b20 <init_lexer@@Base>
   13970:	mov	r0, r4
   13974:	bl	18e60 <next@@Base>
   13978:	ldr	r1, [r0]
   1397c:	mov	r0, #148	; 0x94
   13980:	mov	r2, #0
   13984:	movw	r3, #450	; 0x1c2
   13988:	str	r0, [sp]
   1398c:	mov	r0, #10
   13990:	bl	155cc <UnityAssertEqualNumber@@Base>
   13994:	mov	r0, r4
   13998:	bl	18b60 <destroy_lexer@@Base>
   1399c:	sub	sp, fp, #8
   139a0:	pop	{r4, sl, fp, pc}
   139a4:	nop	{0}
   139a8:	nop	{0}
   139ac:	nop	{0}
   139b0:	andeq	r0, r0, r1
   139b4:	andeq	r0, r0, r0
   139b8:	andeq	r0, r0, r1
   139bc:	andeq	r0, r0, r0

000139c0 <read_token_else@@Base>:
   139c0:	push	{r4, sl, fp, lr}
   139c4:	add	fp, sp, #8
   139c8:	sub	sp, sp, #16
   139cc:	movw	r0, #464	; 0x1d0
   139d0:	add	r1, pc, #104	; 0x68
   139d4:	add	r4, sp, #4
   139d8:	movt	r0, #3
   139dc:	vld1.64	{d16-d17}, [r1 :128]
   139e0:	movw	r1, #55834	; 0xda1a
   139e4:	movt	r1, #1
   139e8:	add	r0, r0, #48	; 0x30
   139ec:	vld1.64	{d18-d19}, [r0 :128]
   139f0:	vadd.i64	q8, q9, q8
   139f4:	vst1.64	{d16-d17}, [r0 :128]
   139f8:	mov	r0, r4
   139fc:	bl	18b20 <init_lexer@@Base>
   13a00:	mov	r0, r4
   13a04:	bl	18e60 <next@@Base>
   13a08:	ldr	r1, [r0]
   13a0c:	mov	r0, #148	; 0x94
   13a10:	mov	r2, #0
   13a14:	movw	r3, #467	; 0x1d3
   13a18:	str	r0, [sp]
   13a1c:	mov	r0, #11
   13a20:	bl	155cc <UnityAssertEqualNumber@@Base>
   13a24:	mov	r0, r4
   13a28:	bl	18b60 <destroy_lexer@@Base>
   13a2c:	sub	sp, fp, #8
   13a30:	pop	{r4, sl, fp, pc}
   13a34:	nop	{0}
   13a38:	nop	{0}
   13a3c:	nop	{0}
   13a40:	andeq	r0, r0, r1
   13a44:	andeq	r0, r0, r0
   13a48:	andeq	r0, r0, r1
   13a4c:	andeq	r0, r0, r0

00013a50 <read_token_equalequal@@Base>:
   13a50:	push	{r4, sl, fp, lr}
   13a54:	add	fp, sp, #8
   13a58:	sub	sp, sp, #16
   13a5c:	movw	r0, #464	; 0x1d0
   13a60:	add	r1, pc, #104	; 0x68
   13a64:	add	r4, sp, #4
   13a68:	movt	r0, #3
   13a6c:	vld1.64	{d16-d17}, [r1 :128]
   13a70:	movw	r1, #55525	; 0xd8e5
   13a74:	movt	r1, #1
   13a78:	add	r0, r0, #64	; 0x40
   13a7c:	vld1.64	{d18-d19}, [r0 :128]
   13a80:	vadd.i64	q8, q9, q8
   13a84:	vst1.64	{d16-d17}, [r0 :128]
   13a88:	mov	r0, r4
   13a8c:	bl	18b20 <init_lexer@@Base>
   13a90:	mov	r0, r4
   13a94:	bl	18e60 <next@@Base>
   13a98:	ldr	r1, [r0]
   13a9c:	mov	r0, #148	; 0x94
   13aa0:	mov	r2, #0
   13aa4:	mov	r3, #484	; 0x1e4
   13aa8:	str	r0, [sp]
   13aac:	mov	r0, #12
   13ab0:	bl	155cc <UnityAssertEqualNumber@@Base>
   13ab4:	mov	r0, r4
   13ab8:	bl	18b60 <destroy_lexer@@Base>
   13abc:	sub	sp, fp, #8
   13ac0:	pop	{r4, sl, fp, pc}
   13ac4:	nop	{0}
   13ac8:	nop	{0}
   13acc:	nop	{0}
   13ad0:	andeq	r0, r0, r1
   13ad4:	andeq	r0, r0, r0
   13ad8:	andeq	r0, r0, r1
   13adc:	andeq	r0, r0, r0

00013ae0 <read_token_notequal@@Base>:
   13ae0:	push	{r4, sl, fp, lr}
   13ae4:	add	fp, sp, #8
   13ae8:	sub	sp, sp, #16
   13aec:	movw	r0, #464	; 0x1d0
   13af0:	add	r1, pc, #104	; 0x68
   13af4:	add	r4, sp, #4
   13af8:	movt	r0, #3
   13afc:	vld1.64	{d16-d17}, [r1 :128]
   13b00:	movw	r1, #55528	; 0xd8e8
   13b04:	movt	r1, #1
   13b08:	add	r0, r0, #80	; 0x50
   13b0c:	vld1.64	{d18-d19}, [r0 :128]
   13b10:	vadd.i64	q8, q9, q8
   13b14:	vst1.64	{d16-d17}, [r0 :128]
   13b18:	mov	r0, r4
   13b1c:	bl	18b20 <init_lexer@@Base>
   13b20:	mov	r0, r4
   13b24:	bl	18e60 <next@@Base>
   13b28:	ldr	r1, [r0]
   13b2c:	mov	r0, #148	; 0x94
   13b30:	mov	r2, #0
   13b34:	movw	r3, #501	; 0x1f5
   13b38:	str	r0, [sp]
   13b3c:	mov	r0, #12
   13b40:	bl	155cc <UnityAssertEqualNumber@@Base>
   13b44:	mov	r0, r4
   13b48:	bl	18b60 <destroy_lexer@@Base>
   13b4c:	sub	sp, fp, #8
   13b50:	pop	{r4, sl, fp, pc}
   13b54:	nop	{0}
   13b58:	nop	{0}
   13b5c:	nop	{0}
   13b60:	andeq	r0, r0, r1
   13b64:	andeq	r0, r0, r0
   13b68:	andeq	r0, r0, r1
   13b6c:	andeq	r0, r0, r0

00013b70 <read_token_lessequalthan@@Base>:
   13b70:	push	{r4, sl, fp, lr}
   13b74:	add	fp, sp, #8
   13b78:	sub	sp, sp, #16
   13b7c:	movw	r0, #464	; 0x1d0
   13b80:	add	r1, pc, #104	; 0x68
   13b84:	add	r4, sp, #4
   13b88:	movt	r0, #3
   13b8c:	vld1.64	{d16-d17}, [r1 :128]
   13b90:	movw	r1, #55531	; 0xd8eb
   13b94:	movt	r1, #1
   13b98:	add	r0, r0, #96	; 0x60
   13b9c:	vld1.64	{d18-d19}, [r0 :128]
   13ba0:	vadd.i64	q8, q9, q8
   13ba4:	vst1.64	{d16-d17}, [r0 :128]
   13ba8:	mov	r0, r4
   13bac:	bl	18b20 <init_lexer@@Base>
   13bb0:	mov	r0, r4
   13bb4:	bl	18e60 <next@@Base>
   13bb8:	ldr	r1, [r0]
   13bbc:	mov	r0, #148	; 0x94
   13bc0:	mov	r2, #0
   13bc4:	movw	r3, #518	; 0x206
   13bc8:	str	r0, [sp]
   13bcc:	mov	r0, #12
   13bd0:	bl	155cc <UnityAssertEqualNumber@@Base>
   13bd4:	mov	r0, r4
   13bd8:	bl	18b60 <destroy_lexer@@Base>
   13bdc:	sub	sp, fp, #8
   13be0:	pop	{r4, sl, fp, pc}
   13be4:	nop	{0}
   13be8:	nop	{0}
   13bec:	nop	{0}
   13bf0:	andeq	r0, r0, r1
   13bf4:	andeq	r0, r0, r0
   13bf8:	andeq	r0, r0, r1
   13bfc:	andeq	r0, r0, r0

00013c00 <read_token_oror@@Base>:
   13c00:	push	{r4, sl, fp, lr}
   13c04:	add	fp, sp, #8
   13c08:	sub	sp, sp, #16
   13c0c:	movw	r0, #576	; 0x240
   13c10:	add	r1, pc, #88	; 0x58
   13c14:	add	r4, sp, #4
   13c18:	movt	r0, #3
   13c1c:	vld1.64	{d16-d17}, [r1 :128]
   13c20:	movw	r1, #55534	; 0xd8ee
   13c24:	movt	r1, #1
   13c28:	vld1.64	{d18-d19}, [r0 :128]
   13c2c:	vadd.i64	q8, q9, q8
   13c30:	vst1.64	{d16-d17}, [r0 :128]
   13c34:	mov	r0, r4
   13c38:	bl	18b20 <init_lexer@@Base>
   13c3c:	mov	r0, r4
   13c40:	bl	18e60 <next@@Base>
   13c44:	ldr	r1, [r0]
   13c48:	mov	r0, #148	; 0x94
   13c4c:	mov	r2, #0
   13c50:	movw	r3, #535	; 0x217
   13c54:	str	r0, [sp]
   13c58:	mov	r0, #12
   13c5c:	bl	155cc <UnityAssertEqualNumber@@Base>
   13c60:	mov	r0, r4
   13c64:	bl	18b60 <destroy_lexer@@Base>
   13c68:	sub	sp, fp, #8
   13c6c:	pop	{r4, sl, fp, pc}
   13c70:	andeq	r0, r0, r1
   13c74:	andeq	r0, r0, r0
   13c78:	andeq	r0, r0, r1
   13c7c:	andeq	r0, r0, r0

00013c80 <read_token_andand@@Base>:
   13c80:	push	{r4, sl, fp, lr}
   13c84:	add	fp, sp, #8
   13c88:	sub	sp, sp, #16
   13c8c:	movw	r0, #576	; 0x240
   13c90:	add	r1, pc, #104	; 0x68
   13c94:	add	r4, sp, #4
   13c98:	movt	r0, #3
   13c9c:	vld1.64	{d16-d17}, [r1 :128]
   13ca0:	movw	r1, #55537	; 0xd8f1
   13ca4:	movt	r1, #1
   13ca8:	add	r0, r0, #16
   13cac:	vld1.64	{d18-d19}, [r0 :128]
   13cb0:	vadd.i64	q8, q9, q8
   13cb4:	vst1.64	{d16-d17}, [r0 :128]
   13cb8:	mov	r0, r4
   13cbc:	bl	18b20 <init_lexer@@Base>
   13cc0:	mov	r0, r4
   13cc4:	bl	18e60 <next@@Base>
   13cc8:	ldr	r1, [r0]
   13ccc:	mov	r0, #148	; 0x94
   13cd0:	mov	r2, #0
   13cd4:	mov	r3, #552	; 0x228
   13cd8:	str	r0, [sp]
   13cdc:	mov	r0, #12
   13ce0:	bl	155cc <UnityAssertEqualNumber@@Base>
   13ce4:	mov	r0, r4
   13ce8:	bl	18b60 <destroy_lexer@@Base>
   13cec:	sub	sp, fp, #8
   13cf0:	pop	{r4, sl, fp, pc}
   13cf4:	nop	{0}
   13cf8:	nop	{0}
   13cfc:	nop	{0}
   13d00:	andeq	r0, r0, r1
   13d04:	andeq	r0, r0, r0
   13d08:	andeq	r0, r0, r1
   13d0c:	andeq	r0, r0, r0

00013d10 <read_token_greaterequalthan@@Base>:
   13d10:	push	{r4, sl, fp, lr}
   13d14:	add	fp, sp, #8
   13d18:	sub	sp, sp, #16
   13d1c:	movw	r0, #576	; 0x240
   13d20:	add	r1, pc, #104	; 0x68
   13d24:	add	r4, sp, #4
   13d28:	movt	r0, #3
   13d2c:	vld1.64	{d16-d17}, [r1 :128]
   13d30:	movw	r1, #55540	; 0xd8f4
   13d34:	movt	r1, #1
   13d38:	add	r0, r0, #32
   13d3c:	vld1.64	{d18-d19}, [r0 :128]
   13d40:	vadd.i64	q8, q9, q8
   13d44:	vst1.64	{d16-d17}, [r0 :128]
   13d48:	mov	r0, r4
   13d4c:	bl	18b20 <init_lexer@@Base>
   13d50:	mov	r0, r4
   13d54:	bl	18e60 <next@@Base>
   13d58:	ldr	r1, [r0]
   13d5c:	mov	r0, #148	; 0x94
   13d60:	mov	r2, #0
   13d64:	movw	r3, #569	; 0x239
   13d68:	str	r0, [sp]
   13d6c:	mov	r0, #12
   13d70:	bl	155cc <UnityAssertEqualNumber@@Base>
   13d74:	mov	r0, r4
   13d78:	bl	18b60 <destroy_lexer@@Base>
   13d7c:	sub	sp, fp, #8
   13d80:	pop	{r4, sl, fp, pc}
   13d84:	nop	{0}
   13d88:	nop	{0}
   13d8c:	nop	{0}
   13d90:	andeq	r0, r0, r1
   13d94:	andeq	r0, r0, r0
   13d98:	andeq	r0, r0, r1
   13d9c:	andeq	r0, r0, r0

00013da0 <read_token_lessthan@@Base>:
   13da0:	push	{r4, sl, fp, lr}
   13da4:	add	fp, sp, #8
   13da8:	sub	sp, sp, #16
   13dac:	movw	r0, #576	; 0x240
   13db0:	add	r1, pc, #104	; 0x68
   13db4:	add	r4, sp, #4
   13db8:	movt	r0, #3
   13dbc:	vld1.64	{d16-d17}, [r1 :128]
   13dc0:	movw	r1, #55543	; 0xd8f7
   13dc4:	movt	r1, #1
   13dc8:	add	r0, r0, #48	; 0x30
   13dcc:	vld1.64	{d18-d19}, [r0 :128]
   13dd0:	vadd.i64	q8, q9, q8
   13dd4:	vst1.64	{d16-d17}, [r0 :128]
   13dd8:	mov	r0, r4
   13ddc:	bl	18b20 <init_lexer@@Base>
   13de0:	mov	r0, r4
   13de4:	bl	18e60 <next@@Base>
   13de8:	ldr	r1, [r0]
   13dec:	mov	r0, #148	; 0x94
   13df0:	mov	r2, #0
   13df4:	movw	r3, #586	; 0x24a
   13df8:	str	r0, [sp]
   13dfc:	mov	r0, #12
   13e00:	bl	155cc <UnityAssertEqualNumber@@Base>
   13e04:	mov	r0, r4
   13e08:	bl	18b60 <destroy_lexer@@Base>
   13e0c:	sub	sp, fp, #8
   13e10:	pop	{r4, sl, fp, pc}
   13e14:	nop	{0}
   13e18:	nop	{0}
   13e1c:	nop	{0}
   13e20:	andeq	r0, r0, r1
   13e24:	andeq	r0, r0, r0
   13e28:	andeq	r0, r0, r1
   13e2c:	andeq	r0, r0, r0

00013e30 <read_token_greaterthan@@Base>:
   13e30:	push	{r4, sl, fp, lr}
   13e34:	add	fp, sp, #8
   13e38:	sub	sp, sp, #16
   13e3c:	movw	r0, #576	; 0x240
   13e40:	add	r1, pc, #104	; 0x68
   13e44:	add	r4, sp, #4
   13e48:	movt	r0, #3
   13e4c:	vld1.64	{d16-d17}, [r1 :128]
   13e50:	movw	r1, #55545	; 0xd8f9
   13e54:	movt	r1, #1
   13e58:	add	r0, r0, #64	; 0x40
   13e5c:	vld1.64	{d18-d19}, [r0 :128]
   13e60:	vadd.i64	q8, q9, q8
   13e64:	vst1.64	{d16-d17}, [r0 :128]
   13e68:	mov	r0, r4
   13e6c:	bl	18b20 <init_lexer@@Base>
   13e70:	mov	r0, r4
   13e74:	bl	18e60 <next@@Base>
   13e78:	ldr	r1, [r0]
   13e7c:	mov	r0, #148	; 0x94
   13e80:	mov	r2, #0
   13e84:	movw	r3, #603	; 0x25b
   13e88:	str	r0, [sp]
   13e8c:	mov	r0, #12
   13e90:	bl	155cc <UnityAssertEqualNumber@@Base>
   13e94:	mov	r0, r4
   13e98:	bl	18b60 <destroy_lexer@@Base>
   13e9c:	sub	sp, fp, #8
   13ea0:	pop	{r4, sl, fp, pc}
   13ea4:	nop	{0}
   13ea8:	nop	{0}
   13eac:	nop	{0}
   13eb0:	andeq	r0, r0, r1
   13eb4:	andeq	r0, r0, r0
   13eb8:	andeq	r0, r0, r1
   13ebc:	andeq	r0, r0, r0

00013ec0 <read_token_not@@Base>:
   13ec0:	push	{r4, sl, fp, lr}
   13ec4:	add	fp, sp, #8
   13ec8:	sub	sp, sp, #16
   13ecc:	movw	r0, #576	; 0x240
   13ed0:	add	r1, pc, #104	; 0x68
   13ed4:	add	r4, sp, #4
   13ed8:	movt	r0, #3
   13edc:	vld1.64	{d16-d17}, [r1 :128]
   13ee0:	movw	r1, #55547	; 0xd8fb
   13ee4:	movt	r1, #1
   13ee8:	add	r0, r0, #80	; 0x50
   13eec:	vld1.64	{d18-d19}, [r0 :128]
   13ef0:	vadd.i64	q8, q9, q8
   13ef4:	vst1.64	{d16-d17}, [r0 :128]
   13ef8:	mov	r0, r4
   13efc:	bl	18b20 <init_lexer@@Base>
   13f00:	mov	r0, r4
   13f04:	bl	18e60 <next@@Base>
   13f08:	ldr	r1, [r0]
   13f0c:	mov	r0, #148	; 0x94
   13f10:	mov	r2, #0
   13f14:	mov	r3, #620	; 0x26c
   13f18:	str	r0, [sp]
   13f1c:	mov	r0, #12
   13f20:	bl	155cc <UnityAssertEqualNumber@@Base>
   13f24:	mov	r0, r4
   13f28:	bl	18b60 <destroy_lexer@@Base>
   13f2c:	sub	sp, fp, #8
   13f30:	pop	{r4, sl, fp, pc}
   13f34:	nop	{0}
   13f38:	nop	{0}
   13f3c:	nop	{0}
   13f40:	andeq	r0, r0, r1
   13f44:	andeq	r0, r0, r0
   13f48:	andeq	r0, r0, r1
   13f4c:	andeq	r0, r0, r0

00013f50 <main@@Base>:
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	movw	r0, #576	; 0x240
   13f5c:	add	r1, pc, #700	; 0x2bc
   13f60:	movt	r0, #3
   13f64:	vld1.64	{d16-d17}, [r1 :128]
   13f68:	add	r0, r0, #96	; 0x60
   13f6c:	vld1.64	{d18-d19}, [r0 :128]
   13f70:	vadd.i64	q8, q9, q8
   13f74:	vst1.64	{d16-d17}, [r0 :128]
   13f78:	movw	r0, #55549	; 0xd8fd
   13f7c:	movt	r0, #1
   13f80:	bl	17be0 <UnityBegin@@Base>
   13f84:	movw	r0, #10496	; 0x2900
   13f88:	movw	r1, #55718	; 0xd9a6
   13f8c:	movw	r2, #629	; 0x275
   13f90:	movt	r0, #1
   13f94:	movt	r1, #1
   13f98:	bl	17af0 <UnityDefaultTestRun@@Base>
   13f9c:	movw	r0, #10912	; 0x2aa0
   13fa0:	movw	r1, #55740	; 0xd9bc
   13fa4:	movw	r2, #630	; 0x276
   13fa8:	movt	r0, #1
   13fac:	movt	r1, #1
   13fb0:	bl	17af0 <UnityDefaultTestRun@@Base>
   13fb4:	movw	r0, #11072	; 0x2b40
   13fb8:	movw	r1, #55760	; 0xd9d0
   13fbc:	movw	r2, #631	; 0x277
   13fc0:	movt	r0, #1
   13fc4:	movt	r1, #1
   13fc8:	bl	17af0 <UnityDefaultTestRun@@Base>
   13fcc:	movw	r0, #11296	; 0x2c20
   13fd0:	movw	r1, #55785	; 0xd9e9
   13fd4:	mov	r2, #632	; 0x278
   13fd8:	movt	r0, #1
   13fdc:	movt	r1, #1
   13fe0:	bl	17af0 <UnityDefaultTestRun@@Base>
   13fe4:	movw	r0, #11472	; 0x2cd0
   13fe8:	movw	r1, #55810	; 0xda02
   13fec:	movw	r2, #633	; 0x279
   13ff0:	movt	r0, #1
   13ff4:	movt	r1, #1
   13ff8:	bl	17af0 <UnityDefaultTestRun@@Base>
   13ffc:	movw	r0, #12256	; 0x2fe0
   14000:	movw	r1, #55826	; 0xda12
   14004:	movw	r2, #634	; 0x27a
   14008:	movt	r0, #1
   1400c:	movt	r1, #1
   14010:	bl	17af0 <UnityDefaultTestRun@@Base>
   14014:	movw	r0, #13232	; 0x33b0
   14018:	movw	r1, #55839	; 0xda1f
   1401c:	movw	r2, #635	; 0x27b
   14020:	movt	r0, #1
   14024:	movt	r1, #1
   14028:	bl	17af0 <UnityDefaultTestRun@@Base>
   1402c:	movw	r0, #13376	; 0x3440
   14030:	movw	r1, #55859	; 0xda33
   14034:	mov	r2, #636	; 0x27c
   14038:	movt	r0, #1
   1403c:	movt	r1, #1
   14040:	bl	17af0 <UnityDefaultTestRun@@Base>
   14044:	movw	r0, #13504	; 0x34c0
   14048:	movw	r1, #55880	; 0xda48
   1404c:	movw	r2, #637	; 0x27d
   14050:	movt	r0, #1
   14054:	movt	r1, #1
   14058:	bl	17af0 <UnityDefaultTestRun@@Base>
   1405c:	movw	r0, #13648	; 0x3550
   14060:	movw	r1, #55900	; 0xda5c
   14064:	movw	r2, #638	; 0x27e
   14068:	movt	r0, #1
   1406c:	movt	r1, #1
   14070:	bl	17af0 <UnityDefaultTestRun@@Base>
   14074:	movw	r0, #13792	; 0x35e0
   14078:	movw	r1, #55916	; 0xda6c
   1407c:	movw	r2, #639	; 0x27f
   14080:	movt	r0, #1
   14084:	movt	r1, #1
   14088:	bl	17af0 <UnityDefaultTestRun@@Base>
   1408c:	movw	r0, #13936	; 0x3670
   14090:	movw	r1, #55932	; 0xda7c
   14094:	mov	r2, #640	; 0x280
   14098:	movt	r0, #1
   1409c:	movt	r1, #1
   140a0:	bl	17af0 <UnityDefaultTestRun@@Base>
   140a4:	movw	r0, #14080	; 0x3700
   140a8:	movw	r1, #55948	; 0xda8c
   140ac:	movw	r2, #641	; 0x281
   140b0:	movt	r0, #1
   140b4:	movt	r1, #1
   140b8:	bl	17af0 <UnityDefaultTestRun@@Base>
   140bc:	movw	r0, #14224	; 0x3790
   140c0:	movw	r1, #55964	; 0xda9c
   140c4:	movw	r2, #642	; 0x282
   140c8:	movt	r0, #1
   140cc:	movt	r1, #1
   140d0:	bl	17af0 <UnityDefaultTestRun@@Base>
   140d4:	movw	r0, #14368	; 0x3820
   140d8:	movw	r1, #55982	; 0xdaae
   140dc:	movw	r2, #643	; 0x283
   140e0:	movt	r0, #1
   140e4:	movt	r1, #1
   140e8:	bl	17af0 <UnityDefaultTestRun@@Base>
   140ec:	movw	r0, #14496	; 0x38a0
   140f0:	movw	r1, #56003	; 0xdac3
   140f4:	mov	r2, #644	; 0x284
   140f8:	movt	r0, #1
   140fc:	movt	r1, #1
   14100:	bl	17af0 <UnityDefaultTestRun@@Base>
   14104:	movw	r0, #14640	; 0x3930
   14108:	movw	r1, #56018	; 0xdad2
   1410c:	movw	r2, #645	; 0x285
   14110:	movt	r0, #1
   14114:	movt	r1, #1
   14118:	bl	17af0 <UnityDefaultTestRun@@Base>
   1411c:	movw	r0, #14784	; 0x39c0
   14120:	movw	r1, #56032	; 0xdae0
   14124:	movw	r2, #646	; 0x286
   14128:	movt	r0, #1
   1412c:	movt	r1, #1
   14130:	bl	17af0 <UnityDefaultTestRun@@Base>
   14134:	movw	r0, #14928	; 0x3a50
   14138:	movw	r1, #56048	; 0xdaf0
   1413c:	movw	r2, #647	; 0x287
   14140:	movt	r0, #1
   14144:	movt	r1, #1
   14148:	bl	17af0 <UnityDefaultTestRun@@Base>
   1414c:	movw	r0, #15072	; 0x3ae0
   14150:	movw	r1, #56070	; 0xdb06
   14154:	mov	r2, #648	; 0x288
   14158:	movt	r0, #1
   1415c:	movt	r1, #1
   14160:	bl	17af0 <UnityDefaultTestRun@@Base>
   14164:	movw	r0, #15216	; 0x3b70
   14168:	movw	r1, #56090	; 0xdb1a
   1416c:	movw	r2, #649	; 0x289
   14170:	movt	r0, #1
   14174:	movt	r1, #1
   14178:	bl	17af0 <UnityDefaultTestRun@@Base>
   1417c:	movw	r0, #15632	; 0x3d10
   14180:	movw	r1, #56149	; 0xdb55
   14184:	movw	r2, #650	; 0x28a
   14188:	movt	r0, #1
   1418c:	movt	r1, #1
   14190:	bl	17af0 <UnityDefaultTestRun@@Base>
   14194:	movw	r0, #15360	; 0x3c00
   14198:	movw	r1, #56115	; 0xdb33
   1419c:	movw	r2, #651	; 0x28b
   141a0:	movt	r0, #1
   141a4:	movt	r1, #1
   141a8:	bl	17af0 <UnityDefaultTestRun@@Base>
   141ac:	movw	r0, #15488	; 0x3c80
   141b0:	movw	r1, #56131	; 0xdb43
   141b4:	mov	r2, #652	; 0x28c
   141b8:	movt	r0, #1
   141bc:	movt	r1, #1
   141c0:	bl	17af0 <UnityDefaultTestRun@@Base>
   141c4:	movw	r0, #15776	; 0x3da0
   141c8:	movw	r1, #56177	; 0xdb71
   141cc:	movw	r2, #653	; 0x28d
   141d0:	movt	r0, #1
   141d4:	movt	r1, #1
   141d8:	bl	17af0 <UnityDefaultTestRun@@Base>
   141dc:	movw	r0, #15920	; 0x3e30
   141e0:	movw	r1, #56197	; 0xdb85
   141e4:	movw	r2, #654	; 0x28e
   141e8:	movt	r0, #1
   141ec:	movt	r1, #1
   141f0:	bl	17af0 <UnityDefaultTestRun@@Base>
   141f4:	movw	r0, #16064	; 0x3ec0
   141f8:	movw	r1, #56220	; 0xdb9c
   141fc:	movw	r2, #655	; 0x28f
   14200:	movt	r0, #1
   14204:	movt	r1, #1
   14208:	bl	17af0 <UnityDefaultTestRun@@Base>
   1420c:	pop	{fp, lr}
   14210:	b	17c40 <UnityEnd@@Base>
   14214:	nop	{0}
   14218:	nop	{0}
   1421c:	nop	{0}
   14220:	andeq	r0, r0, r1
   14224:	andeq	r0, r0, r0
   14228:	andeq	r0, r0, r1
   1422c:	andeq	r0, r0, r0
   14230:	push	{r4, r5, r6, lr}
   14234:	sub	sp, sp, #8
   14238:	movw	r0, #55615	; 0xd93f
   1423c:	movw	r1, #55713	; 0xd9a1
   14240:	movw	r2, #13578	; 0x350a
   14244:	movt	r0, #1
   14248:	movt	r1, #1
   1424c:	movt	r2, #46656	; 0xb640
   14250:	bl	1a7e8 <next@@Base+0x1988>
   14254:	movw	r0, #56800	; 0xdde0
   14258:	movw	r6, #56240	; 0xdbb0
   1425c:	mov	r5, #0
   14260:	movt	r0, #1
   14264:	movt	r6, #1
   14268:	add	r4, r0, #4
   1426c:	mov	r3, r6
   14270:	ldr	r0, [r3, r5]!
   14274:	ldr	r1, [r3, #16]
   14278:	str	r1, [sp]
   1427c:	ldmib	r3, {r1, r2}
   14280:	ldrb	r3, [r3, #12]
   14284:	bl	1af08 <next@@Base+0x20a8>
   14288:	ldrd	r0, [r4, #-4]
   1428c:	bl	1b7bc <next@@Base+0x295c>
   14290:	add	r5, r5, #20
   14294:	add	r4, r4, #8
   14298:	cmp	r5, #560	; 0x230
   1429c:	bne	1426c <main@@Base+0x31c>
   142a0:	bl	1bf44 <next@@Base+0x30e4>
   142a4:	add	sp, sp, #8
   142a8:	pop	{r4, r5, r6, lr}
   142ac:	b	1ccb0 <next@@Base+0x3e50>
   142b0:	push	{fp, lr}
   142b4:	bl	14230 <main@@Base+0x2e0>
   142b8:	movw	r0, #240	; 0xf0
   142bc:	vmov.i32	q8, #0	; 0x00000000
   142c0:	movt	r0, #3
   142c4:	add	r1, r0, #80	; 0x50
   142c8:	vst1.64	{d16-d17}, [r1 :128]
   142cc:	add	r1, r0, #64	; 0x40
   142d0:	vst1.64	{d16-d17}, [r1 :128]
   142d4:	add	r1, r0, #48	; 0x30
   142d8:	vst1.64	{d16-d17}, [r1 :128]
   142dc:	add	r1, r0, #32
   142e0:	vst1.64	{d16-d17}, [r1 :128]
   142e4:	add	r1, r0, #16
   142e8:	vst1.64	{d16-d17}, [r1 :128]
   142ec:	movw	r1, #352	; 0x160
   142f0:	movt	r1, #3
   142f4:	add	r2, r1, #80	; 0x50
   142f8:	vst1.64	{d16-d17}, [r2 :128]
   142fc:	add	r2, r1, #64	; 0x40
   14300:	vst1.64	{d16-d17}, [r2 :128]
   14304:	add	r2, r1, #48	; 0x30
   14308:	vst1.64	{d16-d17}, [r2 :128]
   1430c:	add	r2, r1, #32
   14310:	vst1.64	{d16-d17}, [r2 :128]
   14314:	add	r2, r1, #16
   14318:	vst1.64	{d16-d17}, [r2 :128]
   1431c:	movw	r2, #464	; 0x1d0
   14320:	movt	r2, #3
   14324:	add	r3, r2, #80	; 0x50
   14328:	vst1.64	{d16-d17}, [r3 :128]
   1432c:	add	r3, r2, #64	; 0x40
   14330:	vst1.64	{d16-d17}, [r3 :128]
   14334:	add	r3, r2, #48	; 0x30
   14338:	vst1.64	{d16-d17}, [r3 :128]
   1433c:	add	r3, r2, #32
   14340:	vst1.64	{d16-d17}, [r3 :128]
   14344:	add	r3, r2, #16
   14348:	vst1.64	{d16-d17}, [r3 :128]
   1434c:	mov	r3, #96	; 0x60
   14350:	vst1.64	{d16-d17}, [r0 :128], r3
   14354:	vst1.64	{d16-d17}, [r1 :128], r3
   14358:	vst1.64	{d16-d17}, [r2 :128], r3
   1435c:	vst1.64	{d16-d17}, [r0 :128]
   14360:	movw	r0, #576	; 0x240
   14364:	vst1.64	{d16-d17}, [r1 :128]
   14368:	vst1.64	{d16-d17}, [r2 :128]
   1436c:	movt	r0, #3
   14370:	add	r1, r0, #80	; 0x50
   14374:	vst1.64	{d16-d17}, [r1 :128]
   14378:	add	r1, r0, #64	; 0x40
   1437c:	vst1.64	{d16-d17}, [r1 :128]
   14380:	add	r1, r0, #48	; 0x30
   14384:	vst1.64	{d16-d17}, [r1 :128]
   14388:	add	r1, r0, #32
   1438c:	vst1.64	{d16-d17}, [r1 :128]
   14390:	add	r1, r0, #16
   14394:	vst1.64	{d16-d17}, [r1 :128]
   14398:	vst1.64	{d16-d17}, [r0 :128], r3
   1439c:	vst1.64	{d16-d17}, [r0 :128]
   143a0:	pop	{fp, pc}
   143a4:	movw	r0, #16944	; 0x4230
   143a8:	movw	r1, #17072	; 0x42b0
   143ac:	movt	r0, #1
   143b0:	movt	r1, #1
   143b4:	b	1d164 <__gcov_flush@@Base+0xb8>
	...

000143c0 <UnityPrint@@Base>:
   143c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143c4:	add	fp, sp, #28
   143c8:	sub	sp, sp, #4
   143cc:	vpush	{d8-d9}
   143d0:	sub	sp, sp, #8
   143d4:	movw	r4, #688	; 0x2b0
   143d8:	movt	r4, #3
   143dc:	ldrd	r2, [r4]
   143e0:	adds	r2, r2, #1
   143e4:	adc	r3, r3, #0
   143e8:	cmp	r0, #0
   143ec:	strd	r2, [r4]
   143f0:	beq	145e0 <UnityPrint@@Base+0x220>
   143f4:	ldrd	r2, [r4, #8]
   143f8:	adds	r2, r2, #1
   143fc:	adc	r3, r3, #0
   14400:	strd	r2, [r4, #8]
   14404:	add	r2, r4, #32
   14408:	ldrb	r1, [r0]
   1440c:	cmp	r1, #0
   14410:	beq	145ec <UnityPrint@@Base+0x22c>
   14414:	movw	r5, #3936	; 0xf60
   14418:	movw	sl, #228	; 0xe4
   1441c:	add	r6, r0, #1
   14420:	add	r0, r4, #72	; 0x48
   14424:	add	r7, r4, #48	; 0x30
   14428:	add	r9, r4, #64	; 0x40
   1442c:	str	r2, [sp]
   14430:	movt	r5, #3
   14434:	movt	sl, #3
   14438:	str	r0, [sp, #4]
   1443c:	b	144b8 <UnityPrint@@Base+0xf8>
   14440:	add	r0, pc, #472	; 0x1d8
   14444:	vld1.64	{d16-d17}, [r5 :128]
   14448:	vld1.64	{d8-d9}, [r0 :128]
   1444c:	ldrd	r0, [r4, #80]	; 0x50
   14450:	adds	r0, r0, #1
   14454:	adc	r1, r1, #0
   14458:	vadd.i64	q8, q8, q4
   1445c:	strd	r0, [r4, #80]	; 0x50
   14460:	ldr	r1, [sl]
   14464:	mov	r0, #92	; 0x5c
   14468:	vst1.64	{d16-d17}, [r5 :128]
   1446c:	bl	127e8 <putc@plt>
   14470:	vld1.64	{d16-d17}, [r5 :128]
   14474:	ldr	r1, [sl]
   14478:	mov	r0, #114	; 0x72
   1447c:	vadd.i64	q8, q8, q4
   14480:	vst1.64	{d16-d17}, [r5 :128]
   14484:	bl	127e8 <putc@plt>
   14488:	add	r0, r4, #96	; 0x60
   1448c:	ldrd	r2, [r0]
   14490:	adds	r2, r2, #1
   14494:	adc	r3, r3, #0
   14498:	strd	r2, [r0]
   1449c:	ldrd	r0, [r4, #136]	; 0x88
   144a0:	adds	r0, r0, #1
   144a4:	adc	r1, r1, #0
   144a8:	strd	r0, [r4, #136]	; 0x88
   144ac:	ldrb	r1, [r6], #1
   144b0:	cmp	r1, #0
   144b4:	beq	145e8 <UnityPrint@@Base+0x228>
   144b8:	ldr	r0, [r4, #24]
   144bc:	ldr	r3, [r4, #28]
   144c0:	adds	r0, r0, #1
   144c4:	str	r0, [r4, #24]
   144c8:	uxtb	r0, r1
   144cc:	adc	r3, r3, #0
   144d0:	mov	r1, r7
   144d4:	str	r3, [r4, #28]
   144d8:	cmp	r0, #126	; 0x7e
   144dc:	bhi	14530 <UnityPrint@@Base+0x170>
   144e0:	ldrd	r2, [r4, #40]	; 0x28
   144e4:	mov	r1, r9
   144e8:	adds	r2, r2, #1
   144ec:	adc	r3, r3, #0
   144f0:	cmp	r0, #32
   144f4:	strd	r2, [r4, #40]	; 0x28
   144f8:	bcc	14530 <UnityPrint@@Base+0x170>
   144fc:	add	r1, pc, #284	; 0x11c
   14500:	vld1.64	{d18-d19}, [r5 :128]
   14504:	ldrd	r2, [r4, #56]	; 0x38
   14508:	vld1.64	{d16-d17}, [r1 :128]
   1450c:	ldr	r1, [sl]
   14510:	adds	r2, r2, #1
   14514:	adc	r3, r3, #0
   14518:	vadd.i64	q8, q9, q8
   1451c:	strd	r2, [r4, #56]	; 0x38
   14520:	vst1.64	{d16-d17}, [r5 :128]
   14524:	bl	127e8 <putc@plt>
   14528:	ldr	r0, [sp, #4]
   1452c:	b	1448c <UnityPrint@@Base+0xcc>
   14530:	ldm	r1, {r0, r3}
   14534:	adds	r0, r0, #1
   14538:	adc	r3, r3, #0
   1453c:	stm	r1, {r0, r3}
   14540:	ldrb	r8, [r6, #-1]
   14544:	cmp	r8, #13
   14548:	beq	14440 <UnityPrint@@Base+0x80>
   1454c:	add	r0, pc, #204	; 0xcc
   14550:	vld1.64	{d18-d19}, [r5 :128]
   14554:	vld1.64	{d16-d17}, [r0 :128]
   14558:	ldrd	r0, [r4, #88]	; 0x58
   1455c:	adds	r0, r0, #1
   14560:	adc	r1, r1, #0
   14564:	vadd.i64	q8, q9, q8
   14568:	strd	r0, [r4, #88]	; 0x58
   1456c:	ldr	r1, [sl]
   14570:	mov	r0, #92	; 0x5c
   14574:	vst1.64	{d16-d17}, [r5 :128]
   14578:	bl	127e8 <putc@plt>
   1457c:	cmp	r8, #10
   14580:	bne	145bc <UnityPrint@@Base+0x1fc>
   14584:	add	r0, pc, #148	; 0x94
   14588:	vld1.64	{d18-d19}, [r5 :128]
   1458c:	vld1.64	{d16-d17}, [r0 :128]
   14590:	ldrd	r0, [r4, #104]	; 0x68
   14594:	adds	r0, r0, #1
   14598:	adc	r1, r1, #0
   1459c:	vadd.i64	q8, q9, q8
   145a0:	strd	r0, [r4, #104]	; 0x68
   145a4:	ldr	r1, [sl]
   145a8:	mov	r0, #110	; 0x6e
   145ac:	vst1.64	{d16-d17}, [r5 :128]
   145b0:	bl	127e8 <putc@plt>
   145b4:	add	r0, r4, #120	; 0x78
   145b8:	b	1448c <UnityPrint@@Base+0xcc>
   145bc:	ldrd	r0, [r4, #112]	; 0x70
   145c0:	adds	r0, r0, #1
   145c4:	adc	r1, r1, #0
   145c8:	strd	r0, [r4, #112]	; 0x70
   145cc:	mov	r1, #2
   145d0:	ldrb	r0, [r6, #-1]
   145d4:	bl	14630 <UnityPrintNumberHex@@Base>
   145d8:	add	r0, r4, #128	; 0x80
   145dc:	b	1448c <UnityPrint@@Base+0xcc>
   145e0:	add	r2, r4, #16
   145e4:	b	145ec <UnityPrint@@Base+0x22c>
   145e8:	ldr	r2, [sp]
   145ec:	ldrd	r0, [r2]
   145f0:	adds	r0, r0, #1
   145f4:	adc	r1, r1, #0
   145f8:	strd	r0, [r2]
   145fc:	ldrd	r0, [r4, #144]	; 0x90
   14600:	adds	r0, r0, #1
   14604:	adc	r1, r1, #0
   14608:	strd	r0, [r4, #144]	; 0x90
   1460c:	sub	sp, fp, #48	; 0x30
   14610:	vpop	{d8-d9}
   14614:	add	sp, sp, #4
   14618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1461c:	nop	{0}
   14620:	andeq	r0, r0, r1
   14624:	andeq	r0, r0, r0
   14628:	andeq	r0, r0, r1
   1462c:	andeq	r0, r0, r0

00014630 <UnityPrintNumberHex@@Base>:
   14630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14634:	add	fp, sp, #28
   14638:	sub	sp, sp, #4
   1463c:	vpush	{d8-d9}
   14640:	movw	r6, #848	; 0x350
   14644:	movw	r7, #3936	; 0xf60
   14648:	mov	r5, r0
   1464c:	add	r0, pc, #348	; 0x15c
   14650:	mov	r4, r1
   14654:	movw	r8, #228	; 0xe4
   14658:	movt	r6, #3
   1465c:	movt	r7, #3
   14660:	vld1.64	{d8-d9}, [r0 :128]
   14664:	movt	r8, #3
   14668:	ldrd	r0, [r6]
   1466c:	vld1.64	{d16-d17}, [r7 :128]
   14670:	adds	r0, r0, #1
   14674:	adc	r1, r1, #0
   14678:	vadd.i64	q8, q8, q4
   1467c:	strd	r0, [r6]
   14680:	ldr	r1, [r8]
   14684:	mov	r0, #48	; 0x30
   14688:	vst1.64	{d16-d17}, [r7 :128]
   1468c:	bl	127e8 <putc@plt>
   14690:	vld1.64	{d16-d17}, [r7 :128]
   14694:	ldr	r1, [r8]
   14698:	mov	r0, #120	; 0x78
   1469c:	vadd.i64	q8, q8, q4
   146a0:	vst1.64	{d16-d17}, [r7 :128]
   146a4:	bl	127e8 <putc@plt>
   146a8:	ldrd	r0, [r6, #8]
   146ac:	adds	r0, r0, #1
   146b0:	adc	r1, r1, #0
   146b4:	cmp	r4, #0
   146b8:	strd	r0, [r6, #8]
   146bc:	beq	14778 <UnityPrintNumberHex@@Base+0x148>
   146c0:	add	sl, r6, #48	; 0x30
   146c4:	add	r9, r6, #56	; 0x38
   146c8:	b	14730 <UnityPrintNumberHex@@Base+0x100>
   146cc:	ldrd	r2, [r6, #40]	; 0x28
   146d0:	add	r0, r0, #55	; 0x37
   146d4:	mov	r8, r9
   146d8:	adds	r2, r2, #1
   146dc:	adc	r3, r3, #0
   146e0:	strd	r2, [r6, #40]	; 0x28
   146e4:	add	r1, pc, #196	; 0xc4
   146e8:	vld1.64	{d18-d19}, [r7 :128]
   146ec:	vld1.64	{d16-d17}, [r1 :128]
   146f0:	movw	r1, #228	; 0xe4
   146f4:	movt	r1, #3
   146f8:	ldr	r1, [r1]
   146fc:	vadd.i64	q8, q9, q8
   14700:	vst1.64	{d16-d17}, [r7 :128]
   14704:	bl	127e8 <putc@plt>
   14708:	ldrd	r0, [r8]
   1470c:	adds	r0, r0, #1
   14710:	adc	r1, r1, #0
   14714:	strd	r0, [r8]
   14718:	ldrd	r0, [r6, #64]	; 0x40
   1471c:	adds	r0, r0, #1
   14720:	adc	r1, r1, #0
   14724:	tst	r4, #255	; 0xff
   14728:	strd	r0, [r6, #64]	; 0x40
   1472c:	beq	14778 <UnityPrintNumberHex@@Base+0x148>
   14730:	ldrd	r0, [r6, #16]
   14734:	sub	r4, r4, #1
   14738:	adds	r0, r0, #1
   1473c:	adc	r1, r1, #0
   14740:	strd	r0, [r6, #16]
   14744:	uxtb	r0, r4
   14748:	mov	r1, #15
   1474c:	lsl	r0, r0, #2
   14750:	and	r0, r1, r5, lsr r0
   14754:	cmp	r0, #9
   14758:	bhi	146cc <UnityPrintNumberHex@@Base+0x9c>
   1475c:	ldrd	r2, [r6, #32]
   14760:	orr	r0, r0, #48	; 0x30
   14764:	mov	r8, sl
   14768:	adds	r2, r2, #1
   1476c:	adc	r3, r3, #0
   14770:	strd	r2, [r6, #32]
   14774:	b	146e4 <UnityPrintNumberHex@@Base+0xb4>
   14778:	ldrd	r0, [r6, #24]
   1477c:	ldrd	r2, [r6, #72]	; 0x48
   14780:	adds	r0, r0, #1
   14784:	adc	r1, r1, #0
   14788:	adds	r2, r2, #1
   1478c:	str	r2, [r6, #72]	; 0x48
   14790:	strd	r0, [r6, #24]
   14794:	adc	r0, r3, #0
   14798:	str	r0, [r6, #76]	; 0x4c
   1479c:	vpop	{d8-d9}
   147a0:	add	sp, sp, #4
   147a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147a8:	nop	{0}
   147ac:	nop	{0}
   147b0:	andeq	r0, r0, r1
   147b4:	andeq	r0, r0, r0
   147b8:	andeq	r0, r0, r1
   147bc:	andeq	r0, r0, r0

000147c0 <UnityPrintLen@@Base>:
   147c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147c4:	add	fp, sp, #28
   147c8:	sub	sp, sp, #4
   147cc:	vpush	{d8-d9}
   147d0:	sub	sp, sp, #24
   147d4:	movw	r6, #928	; 0x3a0
   147d8:	mov	r4, r1
   147dc:	mov	sl, r0
   147e0:	movt	r6, #3
   147e4:	ldrd	r0, [r6]
   147e8:	adds	r0, r0, #1
   147ec:	adc	r1, r1, #0
   147f0:	cmp	sl, #0
   147f4:	strd	r0, [r6]
   147f8:	beq	14a0c <UnityPrintLen@@Base+0x24c>
   147fc:	ldrd	r0, [r6, #8]
   14800:	add	r2, r6, #32
   14804:	adds	r0, r0, #1
   14808:	adc	r1, r1, #0
   1480c:	strd	r0, [r6, #8]
   14810:	ldrb	r0, [sl]
   14814:	cmp	r0, #0
   14818:	beq	14a20 <UnityPrintLen@@Base+0x260>
   1481c:	add	r1, r6, #48	; 0x30
   14820:	movw	r8, #3936	; 0xf60
   14824:	movw	r7, #228	; 0xe4
   14828:	mov	r5, sl
   1482c:	str	r2, [sp, #8]
   14830:	str	r1, [sp, #4]
   14834:	add	r1, r6, #64	; 0x40
   14838:	movt	r8, #3
   1483c:	movt	r7, #3
   14840:	str	r1, [sp, #20]
   14844:	add	r1, r6, #80	; 0x50
   14848:	str	r1, [sp, #16]
   1484c:	add	r1, r6, #88	; 0x58
   14850:	str	r1, [sp, #12]
   14854:	b	148d0 <UnityPrintLen@@Base+0x110>
   14858:	add	r0, pc, #496	; 0x1f0
   1485c:	vld1.64	{d16-d17}, [r8 :128]
   14860:	vld1.64	{d8-d9}, [r0 :128]
   14864:	ldrd	r0, [r6, #96]	; 0x60
   14868:	adds	r0, r0, #1
   1486c:	adc	r1, r1, #0
   14870:	vadd.i64	q8, q8, q4
   14874:	strd	r0, [r6, #96]	; 0x60
   14878:	ldr	r1, [r7]
   1487c:	mov	r0, #92	; 0x5c
   14880:	vst1.64	{d16-d17}, [r8 :128]
   14884:	bl	127e8 <putc@plt>
   14888:	vld1.64	{d16-d17}, [r8 :128]
   1488c:	ldr	r1, [r7]
   14890:	mov	r0, #114	; 0x72
   14894:	vadd.i64	q8, q8, q4
   14898:	vst1.64	{d16-d17}, [r8 :128]
   1489c:	bl	127e8 <putc@plt>
   148a0:	add	r0, r6, #112	; 0x70
   148a4:	ldrd	r2, [r0]
   148a8:	adds	r2, r2, #1
   148ac:	adc	r3, r3, #0
   148b0:	strd	r2, [r0]
   148b4:	ldrd	r0, [r6, #152]	; 0x98
   148b8:	adds	r0, r0, #1
   148bc:	adc	r1, r1, #0
   148c0:	strd	r0, [r6, #152]	; 0x98
   148c4:	ldrb	r0, [r5, #1]!
   148c8:	cmp	r0, #0
   148cc:	beq	14a14 <UnityPrintLen@@Base+0x254>
   148d0:	ldrd	r2, [r6, #24]
   148d4:	sub	r1, r5, sl
   148d8:	adds	r2, r2, #1
   148dc:	adc	r3, r3, #0
   148e0:	cmp	r1, r4
   148e4:	strd	r2, [r6, #24]
   148e8:	bcs	14a1c <UnityPrintLen@@Base+0x25c>
   148ec:	ldrd	r2, [r6, #40]	; 0x28
   148f0:	ldr	r1, [sp, #20]
   148f4:	uxtb	r0, r0
   148f8:	adds	r2, r2, #1
   148fc:	adc	r3, r3, #0
   14900:	cmp	r0, #126	; 0x7e
   14904:	strd	r2, [r6, #40]	; 0x28
   14908:	bhi	1495c <UnityPrintLen@@Base+0x19c>
   1490c:	ldrd	r2, [r6, #56]	; 0x38
   14910:	ldr	r1, [sp, #16]
   14914:	adds	r2, r2, #1
   14918:	adc	r3, r3, #0
   1491c:	cmp	r0, #32
   14920:	strd	r2, [r6, #56]	; 0x38
   14924:	bcc	1495c <UnityPrintLen@@Base+0x19c>
   14928:	add	r1, pc, #288	; 0x120
   1492c:	vld1.64	{d18-d19}, [r8 :128]
   14930:	ldrd	r2, [r6, #72]	; 0x48
   14934:	vld1.64	{d16-d17}, [r1 :128]
   14938:	ldr	r1, [r7]
   1493c:	adds	r2, r2, #1
   14940:	adc	r3, r3, #0
   14944:	vadd.i64	q8, q9, q8
   14948:	strd	r2, [r6, #72]	; 0x48
   1494c:	vst1.64	{d16-d17}, [r8 :128]
   14950:	bl	127e8 <putc@plt>
   14954:	ldr	r0, [sp, #12]
   14958:	b	148a4 <UnityPrintLen@@Base+0xe4>
   1495c:	ldm	r1, {r0, r3}
   14960:	adds	r0, r0, #1
   14964:	adc	r3, r3, #0
   14968:	stm	r1, {r0, r3}
   1496c:	ldrb	r9, [r5]
   14970:	cmp	r9, #13
   14974:	beq	14858 <UnityPrintLen@@Base+0x98>
   14978:	add	r0, pc, #208	; 0xd0
   1497c:	vld1.64	{d18-d19}, [r8 :128]
   14980:	vld1.64	{d16-d17}, [r0 :128]
   14984:	ldrd	r0, [r6, #104]	; 0x68
   14988:	adds	r0, r0, #1
   1498c:	adc	r1, r1, #0
   14990:	vadd.i64	q8, q9, q8
   14994:	strd	r0, [r6, #104]	; 0x68
   14998:	ldr	r1, [r7]
   1499c:	mov	r0, #92	; 0x5c
   149a0:	vst1.64	{d16-d17}, [r8 :128]
   149a4:	bl	127e8 <putc@plt>
   149a8:	cmp	r9, #10
   149ac:	bne	149e8 <UnityPrintLen@@Base+0x228>
   149b0:	add	r0, pc, #152	; 0x98
   149b4:	vld1.64	{d18-d19}, [r8 :128]
   149b8:	vld1.64	{d16-d17}, [r0 :128]
   149bc:	ldrd	r0, [r6, #120]	; 0x78
   149c0:	adds	r0, r0, #1
   149c4:	adc	r1, r1, #0
   149c8:	vadd.i64	q8, q9, q8
   149cc:	strd	r0, [r6, #120]	; 0x78
   149d0:	ldr	r1, [r7]
   149d4:	mov	r0, #110	; 0x6e
   149d8:	vst1.64	{d16-d17}, [r8 :128]
   149dc:	bl	127e8 <putc@plt>
   149e0:	add	r0, r6, #136	; 0x88
   149e4:	b	148a4 <UnityPrintLen@@Base+0xe4>
   149e8:	ldrd	r0, [r6, #128]	; 0x80
   149ec:	adds	r0, r0, #1
   149f0:	adc	r1, r1, #0
   149f4:	strd	r0, [r6, #128]	; 0x80
   149f8:	mov	r1, #2
   149fc:	ldrb	r0, [r5]
   14a00:	bl	14630 <UnityPrintNumberHex@@Base>
   14a04:	add	r0, r6, #144	; 0x90
   14a08:	b	148a4 <UnityPrintLen@@Base+0xe4>
   14a0c:	add	r2, r6, #16
   14a10:	b	14a20 <UnityPrintLen@@Base+0x260>
   14a14:	ldr	r2, [sp, #8]
   14a18:	b	14a20 <UnityPrintLen@@Base+0x260>
   14a1c:	ldr	r2, [sp, #4]
   14a20:	ldrd	r0, [r2]
   14a24:	adds	r0, r0, #1
   14a28:	adc	r1, r1, #0
   14a2c:	strd	r0, [r2]
   14a30:	ldrd	r0, [r6, #160]	; 0xa0
   14a34:	adds	r0, r0, #1
   14a38:	adc	r1, r1, #0
   14a3c:	strd	r0, [r6, #160]	; 0xa0
   14a40:	sub	sp, fp, #48	; 0x30
   14a44:	vpop	{d8-d9}
   14a48:	add	sp, sp, #4
   14a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a50:	andeq	r0, r0, r1
   14a54:	andeq	r0, r0, r0
   14a58:	andeq	r0, r0, r1
   14a5c:	andeq	r0, r0, r0

00014a60 <UnityPrintNumberByStyle@@Base>:
   14a60:	push	{r4, r6, r7, sl, fp, lr}
   14a64:	add	fp, sp, #16
   14a68:	movw	r4, #1104	; 0x450
   14a6c:	movt	r4, #3
   14a70:	ldrd	r2, [r4]
   14a74:	adds	r2, r2, #1
   14a78:	adc	r3, r3, #0
   14a7c:	tst	r1, #16
   14a80:	strd	r2, [r4]
   14a84:	bne	14ac4 <UnityPrintNumberByStyle@@Base+0x64>
   14a88:	ldrd	r2, [r4, #16]
   14a8c:	adds	r2, r2, #1
   14a90:	adc	r3, r3, #0
   14a94:	tst	r1, #32
   14a98:	strd	r2, [r4, #16]
   14a9c:	and	r2, r1, #15
   14aa0:	bne	14ae0 <UnityPrintNumberByStyle@@Base+0x80>
   14aa4:	ldrd	r6, [r4, #40]	; 0x28
   14aa8:	lsl	r1, r2, #1
   14aac:	adds	r6, r6, #1
   14ab0:	adc	r7, r7, #0
   14ab4:	strd	r6, [r4, #40]	; 0x28
   14ab8:	bl	14630 <UnityPrintNumberHex@@Base>
   14abc:	add	r0, r4, #56	; 0x38
   14ac0:	b	14b0c <UnityPrintNumberByStyle@@Base+0xac>
   14ac4:	ldrd	r2, [r4, #8]
   14ac8:	adds	r2, r2, #1
   14acc:	adc	r3, r3, #0
   14ad0:	strd	r2, [r4, #8]
   14ad4:	bl	14b30 <UnityPrintNumber@@Base>
   14ad8:	add	r0, r4, #24
   14adc:	b	14b0c <UnityPrintNumberByStyle@@Base+0xac>
   14ae0:	movw	r1, #57480	; 0xe088
   14ae4:	ldrd	r6, [r4, #32]
   14ae8:	movt	r1, #1
   14aec:	add	r1, r1, r2, lsl #2
   14af0:	adds	r6, r6, #1
   14af4:	ldr	r1, [r1, #-4]
   14af8:	adc	r7, r7, #0
   14afc:	strd	r6, [r4, #32]
   14b00:	and	r0, r1, r0
   14b04:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   14b08:	add	r0, r4, #48	; 0x30
   14b0c:	ldrd	r2, [r0]
   14b10:	adds	r2, r2, #1
   14b14:	adc	r3, r3, #0
   14b18:	strd	r2, [r0]
   14b1c:	ldrd	r0, [r4, #64]	; 0x40
   14b20:	adds	r0, r0, #1
   14b24:	adc	r1, r1, #0
   14b28:	strd	r0, [r4, #64]	; 0x40
   14b2c:	pop	{r4, r6, r7, sl, fp, pc}

00014b30 <UnityPrintNumber@@Base>:
   14b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b34:	add	fp, sp, #28
   14b38:	sub	sp, sp, #4
   14b3c:	movw	r4, #1184	; 0x4a0
   14b40:	mov	sl, r0
   14b44:	movw	r9, #3936	; 0xf60
   14b48:	movw	r8, #228	; 0xe4
   14b4c:	movt	r4, #3
   14b50:	movt	r9, #3
   14b54:	movt	r8, #3
   14b58:	ldrd	r0, [r4]
   14b5c:	adds	r0, r0, #1
   14b60:	adc	r1, r1, #0
   14b64:	cmn	sl, #1
   14b68:	strd	r0, [r4]
   14b6c:	ble	14b88 <UnityPrintNumber@@Base+0x58>
   14b70:	ldrd	r0, [r4, #16]
   14b74:	adds	r0, r0, #1
   14b78:	adc	r1, r1, #0
   14b7c:	strd	r0, [r4, #16]
   14b80:	add	r0, r4, #32
   14b84:	b	14bc0 <UnityPrintNumber@@Base+0x90>
   14b88:	add	r0, pc, #432	; 0x1b0
   14b8c:	vld1.64	{d18-d19}, [r9 :128]
   14b90:	vld1.64	{d16-d17}, [r0 :128]
   14b94:	ldrd	r0, [r4, #8]
   14b98:	adds	r0, r0, #1
   14b9c:	adc	r1, r1, #0
   14ba0:	vadd.i64	q8, q9, q8
   14ba4:	strd	r0, [r4, #8]
   14ba8:	ldr	r1, [r8]
   14bac:	mov	r0, #45	; 0x2d
   14bb0:	vst1.64	{d16-d17}, [r9 :128]
   14bb4:	bl	127e8 <putc@plt>
   14bb8:	add	r0, r4, #24
   14bbc:	rsb	sl, sl, #0
   14bc0:	ldrd	r2, [r0]
   14bc4:	adds	r2, r2, #1
   14bc8:	adc	r3, r3, #0
   14bcc:	strd	r2, [r0]
   14bd0:	ldrd	r0, [r4, #40]	; 0x28
   14bd4:	adds	r0, r0, #1
   14bd8:	adc	r1, r1, #0
   14bdc:	cmp	sl, #10
   14be0:	strd	r0, [r4, #40]	; 0x28
   14be4:	bcc	14c58 <UnityPrintNumber@@Base+0x128>
   14be8:	ldrd	r2, [r4, #48]	; 0x30
   14bec:	mov	r7, #1
   14bf0:	add	lr, r4, #72	; 0x48
   14bf4:	add	ip, r4, #56	; 0x38
   14bf8:	add	r6, r7, r7, lsl #2
   14bfc:	adds	r2, r2, #1
   14c00:	adc	r3, r3, #0
   14c04:	cmp	r7, r6, lsl #1
   14c08:	bcs	14c50 <UnityPrintNumber@@Base+0x120>
   14c0c:	lsl	r7, r6, #1
   14c10:	ldr	r6, [r4, #64]	; 0x40
   14c14:	ldr	r1, [r4, #68]	; 0x44
   14c18:	ldr	r0, [r4, #80]	; 0x50
   14c1c:	ldr	r5, [r4, #84]	; 0x54
   14c20:	adds	r6, r6, #1
   14c24:	adc	r1, r1, #0
   14c28:	adds	r0, r0, #1
   14c2c:	str	r0, [r4, #80]	; 0x50
   14c30:	adc	r0, r5, #0
   14c34:	str	r6, [r4, #64]	; 0x40
   14c38:	str	r1, [r4, #68]	; 0x44
   14c3c:	str	r0, [r4, #84]	; 0x54
   14c40:	udiv	r0, sl, r7
   14c44:	cmp	r0, #9
   14c48:	bhi	14bf8 <UnityPrintNumber@@Base+0xc8>
   14c4c:	mov	lr, ip
   14c50:	strd	r2, [r4, #48]	; 0x30
   14c54:	b	14c60 <UnityPrintNumber@@Base+0x130>
   14c58:	add	lr, r4, #56	; 0x38
   14c5c:	mov	r7, #1
   14c60:	ldrd	r0, [lr]
   14c64:	movw	r6, #52429	; 0xcccd
   14c68:	movt	r6, #52428	; 0xcccc
   14c6c:	adds	r0, r0, #1
   14c70:	adc	r1, r1, #0
   14c74:	strd	r0, [lr]
   14c78:	add	r0, pc, #192	; 0xc0
   14c7c:	vld1.64	{d18-d19}, [r9 :128]
   14c80:	vld1.64	{d16-d17}, [r0 :128]
   14c84:	ldrd	r0, [r4, #88]	; 0x58
   14c88:	adds	r0, r0, #1
   14c8c:	adc	r1, r1, #0
   14c90:	vadd.i64	q8, q9, q8
   14c94:	strd	r0, [r4, #88]	; 0x58
   14c98:	udiv	r0, sl, r7
   14c9c:	vst1.64	{d16-d17}, [r9 :128]
   14ca0:	umull	r1, r2, r0, r6
   14ca4:	lsr	r1, r2, #3
   14ca8:	add	r1, r1, r1, lsl #2
   14cac:	sub	r0, r0, r1, lsl #1
   14cb0:	ldr	r1, [r8]
   14cb4:	orr	r0, r0, #48	; 0x30
   14cb8:	bl	127e8 <putc@plt>
   14cbc:	cmp	r7, #10
   14cc0:	bcc	14d1c <UnityPrintNumber@@Base+0x1ec>
   14cc4:	add	r0, pc, #116	; 0x74
   14cc8:	vld1.64	{d18-d19}, [r9 :128]
   14ccc:	vld1.64	{d16-d17}, [r0 :128]
   14cd0:	ldrd	r0, [r4, #96]	; 0x60
   14cd4:	adds	r0, r0, #1
   14cd8:	adc	r1, r1, #0
   14cdc:	vadd.i64	q8, q9, q8
   14ce0:	strd	r0, [r4, #96]	; 0x60
   14ce4:	umull	r0, r1, r7, r6
   14ce8:	vst1.64	{d16-d17}, [r9 :128]
   14cec:	lsr	r5, r1, #3
   14cf0:	udiv	r0, sl, r5
   14cf4:	umull	r1, r2, r0, r6
   14cf8:	lsr	r1, r2, #3
   14cfc:	add	r1, r1, r1, lsl #2
   14d00:	sub	r0, r0, r1, lsl #1
   14d04:	ldr	r1, [r8]
   14d08:	orr	r0, r0, #48	; 0x30
   14d0c:	bl	127e8 <putc@plt>
   14d10:	cmp	r7, #99	; 0x63
   14d14:	mov	r7, r5
   14d18:	bhi	14cc4 <UnityPrintNumber@@Base+0x194>
   14d1c:	add	r1, pc, #28
   14d20:	add	r0, r4, #104	; 0x68
   14d24:	vld1.64	{d16-d17}, [r1 :128]
   14d28:	vld1.64	{d18-d19}, [r0]
   14d2c:	vadd.i64	q8, q9, q8
   14d30:	vst1.64	{d16-d17}, [r0]
   14d34:	sub	sp, fp, #28
   14d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d3c:	nop	{0}
   14d40:	andeq	r0, r0, r1
   14d44:	andeq	r0, r0, r0
   14d48:	andeq	r0, r0, r1
   14d4c:	andeq	r0, r0, r0

00014d50 <UnityPrintNumberUnsigned@@Base>:
   14d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d54:	add	fp, sp, #28
   14d58:	sub	sp, sp, #4
   14d5c:	movw	sl, #1312	; 0x520
   14d60:	mov	r8, r0
   14d64:	add	r0, pc, #388	; 0x184
   14d68:	mov	r5, #1
   14d6c:	movt	sl, #3
   14d70:	vld1.64	{d16-d17}, [r0 :128]
   14d74:	mov	r0, #24
   14d78:	cmp	r8, #10
   14d7c:	vld1.64	{d18-d19}, [sl :128]
   14d80:	mov	r1, sl
   14d84:	vadd.i64	q8, q9, q8
   14d88:	vst1.64	{d16-d17}, [r1 :128], r0
   14d8c:	bcc	14dfc <UnityPrintNumberUnsigned@@Base+0xac>
   14d90:	ldrd	r2, [sl, #16]
   14d94:	mov	r5, #1
   14d98:	add	r1, sl, #40	; 0x28
   14d9c:	add	ip, sl, #24
   14da0:	add	r7, r5, r5, lsl #2
   14da4:	adds	r2, r2, #1
   14da8:	adc	r3, r3, #0
   14dac:	cmp	r5, r7, lsl #1
   14db0:	bcs	14df8 <UnityPrintNumberUnsigned@@Base+0xa8>
   14db4:	ldr	r4, [sl, #32]
   14db8:	lsl	r5, r7, #1
   14dbc:	ldr	r7, [sl, #36]	; 0x24
   14dc0:	ldr	r0, [sl, #48]	; 0x30
   14dc4:	ldr	r9, [sl, #52]	; 0x34
   14dc8:	adds	r4, r4, #1
   14dcc:	adc	r7, r7, #0
   14dd0:	adds	r0, r0, #1
   14dd4:	str	r0, [sl, #48]	; 0x30
   14dd8:	adc	r0, r9, #0
   14ddc:	str	r4, [sl, #32]
   14de0:	str	r7, [sl, #36]	; 0x24
   14de4:	str	r0, [sl, #52]	; 0x34
   14de8:	udiv	r0, r8, r5
   14dec:	cmp	r0, #9
   14df0:	bhi	14da0 <UnityPrintNumberUnsigned@@Base+0x50>
   14df4:	mov	r1, ip
   14df8:	strd	r2, [sl, #16]
   14dfc:	ldm	r1, {r0, r3}
   14e00:	movw	r4, #52429	; 0xcccd
   14e04:	movw	r7, #3936	; 0xf60
   14e08:	movw	r9, #228	; 0xe4
   14e0c:	movt	r4, #52428	; 0xcccc
   14e10:	movt	r7, #3
   14e14:	movt	r9, #3
   14e18:	adds	r0, r0, #1
   14e1c:	adc	r3, r3, #0
   14e20:	stm	r1, {r0, r3}
   14e24:	add	r0, pc, #196	; 0xc4
   14e28:	vld1.64	{d18-d19}, [r7 :128]
   14e2c:	vld1.64	{d16-d17}, [r0 :128]
   14e30:	ldrd	r0, [sl, #56]	; 0x38
   14e34:	adds	r0, r0, #1
   14e38:	adc	r1, r1, #0
   14e3c:	vadd.i64	q8, q9, q8
   14e40:	strd	r0, [sl, #56]	; 0x38
   14e44:	udiv	r0, r8, r5
   14e48:	vst1.64	{d16-d17}, [r7 :128]
   14e4c:	umull	r1, r2, r0, r4
   14e50:	lsr	r1, r2, #3
   14e54:	add	r1, r1, r1, lsl #2
   14e58:	sub	r0, r0, r1, lsl #1
   14e5c:	ldr	r1, [r9]
   14e60:	orr	r0, r0, #48	; 0x30
   14e64:	bl	127e8 <putc@plt>
   14e68:	cmp	r5, #10
   14e6c:	bcc	14ec8 <UnityPrintNumberUnsigned@@Base+0x178>
   14e70:	add	r0, pc, #120	; 0x78
   14e74:	vld1.64	{d18-d19}, [r7 :128]
   14e78:	vld1.64	{d16-d17}, [r0 :128]
   14e7c:	ldrd	r0, [sl, #64]	; 0x40
   14e80:	adds	r0, r0, #1
   14e84:	adc	r1, r1, #0
   14e88:	vadd.i64	q8, q9, q8
   14e8c:	strd	r0, [sl, #64]	; 0x40
   14e90:	umull	r0, r1, r5, r4
   14e94:	vst1.64	{d16-d17}, [r7 :128]
   14e98:	lsr	r6, r1, #3
   14e9c:	udiv	r0, r8, r6
   14ea0:	umull	r1, r2, r0, r4
   14ea4:	lsr	r1, r2, #3
   14ea8:	add	r1, r1, r1, lsl #2
   14eac:	sub	r0, r0, r1, lsl #1
   14eb0:	ldr	r1, [r9]
   14eb4:	orr	r0, r0, #48	; 0x30
   14eb8:	bl	127e8 <putc@plt>
   14ebc:	cmp	r5, #99	; 0x63
   14ec0:	mov	r5, r6
   14ec4:	bhi	14e70 <UnityPrintNumberUnsigned@@Base+0x120>
   14ec8:	add	r1, pc, #32
   14ecc:	add	r0, sl, #72	; 0x48
   14ed0:	vld1.64	{d16-d17}, [r1 :128]
   14ed4:	vld1.64	{d18-d19}, [r0]
   14ed8:	vadd.i64	q8, q9, q8
   14edc:	vst1.64	{d16-d17}, [r0]
   14ee0:	sub	sp, fp, #28
   14ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ee8:	nop	{0}
   14eec:	nop	{0}
   14ef0:	andeq	r0, r0, r1
   14ef4:	andeq	r0, r0, r0
   14ef8:	andeq	r0, r0, r1
   14efc:	andeq	r0, r0, r0

00014f00 <UnityPrintMask@@Base>:
   14f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f04:	add	fp, sp, #28
   14f08:	sub	sp, sp, #12
   14f0c:	movw	r6, #1408	; 0x580
   14f10:	mov	sl, r0
   14f14:	add	r0, pc, #324	; 0x144
   14f18:	movw	r5, #3936	; 0xf60
   14f1c:	mov	r8, r1
   14f20:	mov	r7, #-2147483648	; 0x80000000
   14f24:	mov	r4, #32
   14f28:	movt	r6, #3
   14f2c:	vld1.64	{d16-d17}, [r0 :128]
   14f30:	movt	r5, #3
   14f34:	vld1.64	{d18-d19}, [r6 :128]
   14f38:	add	r0, r6, #80	; 0x50
   14f3c:	str	r0, [sp, #4]
   14f40:	add	r0, r6, #72	; 0x48
   14f44:	str	r0, [sp]
   14f48:	add	r0, r6, #64	; 0x40
   14f4c:	str	r0, [sp, #8]
   14f50:	vadd.i64	q8, q9, q8
   14f54:	vst1.64	{d16-d17}, [r6 :128]
   14f58:	b	14fc4 <UnityPrintMask@@Base+0xc4>
   14f5c:	ldrd	r0, [r6, #40]	; 0x28
   14f60:	ldr	r9, [sp, #4]
   14f64:	adds	r0, r0, #1
   14f68:	adc	r1, r1, #0
   14f6c:	strd	r0, [r6, #40]	; 0x28
   14f70:	mov	r0, #88	; 0x58
   14f74:	add	r1, pc, #228	; 0xe4
   14f78:	vld1.64	{d18-d19}, [r5 :128]
   14f7c:	vld1.64	{d16-d17}, [r1 :128]
   14f80:	movw	r1, #228	; 0xe4
   14f84:	movt	r1, #3
   14f88:	ldr	r1, [r1]
   14f8c:	vadd.i64	q8, q9, q8
   14f90:	vst1.64	{d16-d17}, [r5 :128]
   14f94:	bl	127e8 <putc@plt>
   14f98:	ldrd	r0, [r9]
   14f9c:	lsr	r7, r7, #1
   14fa0:	adds	r0, r0, #1
   14fa4:	adc	r1, r1, #0
   14fa8:	strd	r0, [r9]
   14fac:	ldrd	r0, [r6, #88]	; 0x58
   14fb0:	adds	r0, r0, #1
   14fb4:	adc	r1, r1, #0
   14fb8:	subs	r4, r4, #1
   14fbc:	strd	r0, [r6, #88]	; 0x58
   14fc0:	beq	1502c <UnityPrintMask@@Base+0x12c>
   14fc4:	ldrd	r0, [r6, #16]
   14fc8:	adds	r0, r0, #1
   14fcc:	adc	r1, r1, #0
   14fd0:	tst	r7, sl
   14fd4:	strd	r0, [r6, #16]
   14fd8:	beq	14f5c <UnityPrintMask@@Base+0x5c>
   14fdc:	ldrd	r0, [r6, #32]
   14fe0:	adds	r0, r0, #1
   14fe4:	adc	r1, r1, #0
   14fe8:	tst	r7, r8
   14fec:	strd	r0, [r6, #32]
   14ff0:	beq	15010 <UnityPrintMask@@Base+0x110>
   14ff4:	ldrd	r0, [r6, #48]	; 0x30
   14ff8:	ldr	r9, [sp, #8]
   14ffc:	adds	r0, r0, #1
   15000:	adc	r1, r1, #0
   15004:	strd	r0, [r6, #48]	; 0x30
   15008:	mov	r0, #49	; 0x31
   1500c:	b	14f74 <UnityPrintMask@@Base+0x74>
   15010:	ldrd	r0, [r6, #56]	; 0x38
   15014:	ldr	r9, [sp]
   15018:	adds	r0, r0, #1
   1501c:	adc	r1, r1, #0
   15020:	strd	r0, [r6, #56]	; 0x38
   15024:	mov	r0, #48	; 0x30
   15028:	b	14f74 <UnityPrintMask@@Base+0x74>
   1502c:	ldrd	r0, [r6, #24]
   15030:	ldrd	r2, [r6, #96]	; 0x60
   15034:	adds	r0, r0, #1
   15038:	adc	r1, r1, #0
   1503c:	adds	r2, r2, #1
   15040:	str	r2, [r6, #96]	; 0x60
   15044:	strd	r0, [r6, #24]
   15048:	adc	r0, r3, #0
   1504c:	str	r0, [r6, #100]	; 0x64
   15050:	sub	sp, fp, #28
   15054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15058:	nop	{0}
   1505c:	nop	{0}
   15060:	andeq	r0, r0, r1
   15064:	andeq	r0, r0, r0
   15068:	andeq	r0, r0, r1
   1506c:	andeq	r0, r0, r0

00015070 <UnityPrintFail@@Base>:
   15070:	movw	r0, #3936	; 0xf60
   15074:	add	r1, pc, #36	; 0x24
   15078:	movt	r0, #3
   1507c:	vld1.64	{d16-d17}, [r1 :128]
   15080:	add	r0, r0, #16
   15084:	vld1.64	{d18-d19}, [r0 :128]
   15088:	vadd.i64	q8, q9, q8
   1508c:	vst1.64	{d16-d17}, [r0 :128]
   15090:	movw	r0, #57032	; 0xdec8
   15094:	movt	r0, #1
   15098:	b	143c0 <UnityPrint@@Base>
   1509c:	nop	{0}
   150a0:	andeq	r0, r0, r1
   150a4:	andeq	r0, r0, r0
   150a8:	andeq	r0, r0, r1
   150ac:	andeq	r0, r0, r0

000150b0 <UnityPrintOk@@Base>:
   150b0:	movw	r0, #3936	; 0xf60
   150b4:	add	r1, pc, #36	; 0x24
   150b8:	movt	r0, #3
   150bc:	vld1.64	{d16-d17}, [r1 :128]
   150c0:	add	r0, r0, #32
   150c4:	vld1.64	{d18-d19}, [r0 :128]
   150c8:	vadd.i64	q8, q9, q8
   150cc:	vst1.64	{d16-d17}, [r0 :128]
   150d0:	movw	r0, #57024	; 0xdec0
   150d4:	movt	r0, #1
   150d8:	b	143c0 <UnityPrint@@Base>
   150dc:	nop	{0}
   150e0:	andeq	r0, r0, r1
   150e4:	andeq	r0, r0, r0
   150e8:	andeq	r0, r0, r1
   150ec:	andeq	r0, r0, r0

000150f0 <UnityConcludeTest@@Base>:
   150f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150f4:	add	fp, sp, #24
   150f8:	vpush	{d8-d9}
   150fc:	movw	r5, #1520	; 0x5f0
   15100:	movw	r7, #5952	; 0x1740
   15104:	movw	r4, #3936	; 0xf60
   15108:	movw	r6, #228	; 0xe4
   1510c:	movt	r5, #3
   15110:	movt	r7, #3
   15114:	movt	r4, #3
   15118:	movt	r6, #3
   1511c:	ldrd	r0, [r5]
   15120:	adds	r0, r0, #1
   15124:	adc	r1, r1, #0
   15128:	strd	r0, [r5]
   1512c:	ldr	r0, [r7, #36]	; 0x24
   15130:	cmp	r0, #0
   15134:	beq	1515c <UnityConcludeTest@@Base+0x6c>
   15138:	ldrd	r0, [r5, #8]
   1513c:	ldr	r2, [r7, #28]
   15140:	adds	r0, r0, #1
   15144:	add	r2, r2, #1
   15148:	adc	r1, r1, #0
   1514c:	str	r2, [r7, #28]
   15150:	strd	r0, [r5, #8]
   15154:	add	r0, r5, #24
   15158:	b	15238 <UnityConcludeTest@@Base+0x148>
   1515c:	ldrd	r0, [r5, #16]
   15160:	adds	r0, r0, #1
   15164:	adc	r1, r1, #0
   15168:	strd	r0, [r5, #16]
   1516c:	ldr	r0, [r7, #32]
   15170:	cmp	r0, #0
   15174:	beq	1519c <UnityConcludeTest@@Base+0xac>
   15178:	ldrd	r0, [r5, #32]
   1517c:	ldr	r2, [r7, #24]
   15180:	adds	r0, r0, #1
   15184:	add	r2, r2, #1
   15188:	adc	r1, r1, #0
   1518c:	str	r2, [r7, #24]
   15190:	strd	r0, [r5, #32]
   15194:	add	r0, r5, #56	; 0x38
   15198:	b	15238 <UnityConcludeTest@@Base+0x148>
   1519c:	add	r1, pc, #236	; 0xec
   151a0:	add	r0, r4, #48	; 0x30
   151a4:	ldrd	r2, [r5, #40]	; 0x28
   151a8:	ldr	r8, [r7, #16]
   151ac:	vld1.64	{d8-d9}, [r1 :128]
   151b0:	vld1.64	{d16-d17}, [r0 :128]
   151b4:	adds	r2, r2, #1
   151b8:	adc	r3, r3, #0
   151bc:	vadd.i64	q8, q8, q4
   151c0:	strd	r2, [r5, #40]	; 0x28
   151c4:	vst1.64	{d16-d17}, [r0 :128]
   151c8:	ldr	r0, [r7]
   151cc:	bl	143c0 <UnityPrint@@Base>
   151d0:	vld1.64	{d16-d17}, [r4 :128]
   151d4:	ldr	r1, [r6]
   151d8:	mov	r0, #58	; 0x3a
   151dc:	vadd.i64	q8, q8, q4
   151e0:	vst1.64	{d16-d17}, [r4 :128]
   151e4:	bl	127e8 <putc@plt>
   151e8:	mov	r0, r8
   151ec:	bl	14b30 <UnityPrintNumber@@Base>
   151f0:	vld1.64	{d16-d17}, [r4 :128]
   151f4:	ldr	r1, [r6]
   151f8:	mov	r0, #58	; 0x3a
   151fc:	vadd.i64	q8, q8, q4
   15200:	vst1.64	{d16-d17}, [r4 :128]
   15204:	bl	127e8 <putc@plt>
   15208:	ldr	r0, [r7, #4]
   1520c:	bl	143c0 <UnityPrint@@Base>
   15210:	vld1.64	{d16-d17}, [r4 :128]
   15214:	ldr	r1, [r6]
   15218:	mov	r0, #58	; 0x3a
   1521c:	vadd.i64	q8, q8, q4
   15220:	vst1.64	{d16-d17}, [r4 :128]
   15224:	bl	127e8 <putc@plt>
   15228:	movw	r0, #57027	; 0xdec3
   1522c:	movt	r0, #1
   15230:	bl	143c0 <UnityPrint@@Base>
   15234:	add	r0, r5, #48	; 0x30
   15238:	ldrd	r2, [r0]
   1523c:	adds	r2, r2, #1
   15240:	adc	r3, r3, #0
   15244:	strd	r2, [r0]
   15248:	add	r0, pc, #64	; 0x40
   1524c:	vld1.64	{d18-d19}, [r4 :128]
   15250:	vld1.64	{d16-d17}, [r0 :128]
   15254:	mov	r0, #0
   15258:	str	r0, [r7, #32]
   1525c:	str	r0, [r7, #36]	; 0x24
   15260:	ldrd	r0, [r5, #64]	; 0x40
   15264:	adds	r0, r0, #1
   15268:	vadd.i64	q8, q9, q8
   1526c:	adc	r1, r1, #0
   15270:	strd	r0, [r5, #64]	; 0x40
   15274:	ldr	r1, [r6]
   15278:	mov	r0, #10
   1527c:	vst1.64	{d16-d17}, [r4 :128]
   15280:	vpop	{d8-d9}
   15284:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15288:	b	127e8 <putc@plt>
   1528c:	nop	{0}
   15290:	andeq	r0, r0, r1
   15294:	andeq	r0, r0, r0
   15298:	andeq	r0, r0, r1
   1529c:	andeq	r0, r0, r0

000152a0 <UnityAssertBits@@Base>:
   152a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152a4:	add	fp, sp, #24
   152a8:	mov	r7, r1
   152ac:	movw	r1, #4048	; 0xfd0
   152b0:	mov	r6, r0
   152b4:	mov	r8, r3
   152b8:	movw	r4, #5952	; 0x1740
   152bc:	movt	r1, #3
   152c0:	movt	r4, #3
   152c4:	ldr	r0, [r1, #16]
   152c8:	ldr	r3, [r1, #20]
   152cc:	adds	r0, r0, #1
   152d0:	adc	r3, r3, #0
   152d4:	str	r0, [r1, #16]
   152d8:	ldr	r0, [r4, #32]
   152dc:	str	r3, [r1, #20]
   152e0:	ldr	r3, [r4, #36]	; 0x24
   152e4:	orrs	r0, r3, r0
   152e8:	beq	152f4 <UnityAssertBits@@Base+0x54>
   152ec:	add	r0, r1, #24
   152f0:	b	15320 <UnityAssertBits@@Base+0x80>
   152f4:	ldr	r0, [r1, #32]
   152f8:	ldr	r3, [r1, #36]	; 0x24
   152fc:	mov	r5, r2
   15300:	adds	r0, r0, #1
   15304:	str	r0, [r1, #32]
   15308:	eor	r0, r2, r7
   1530c:	adc	r3, r3, #0
   15310:	tst	r0, r6
   15314:	str	r3, [r1, #36]	; 0x24
   15318:	bne	1534c <UnityAssertBits@@Base+0xac>
   1531c:	add	r0, r1, #48	; 0x30
   15320:	ldrd	r2, [r0]
   15324:	adds	r2, r2, #1
   15328:	adc	r3, r3, #0
   1532c:	strd	r2, [r0]
   15330:	ldr	r0, [r1, #56]	; 0x38
   15334:	ldr	r3, [r1, #60]	; 0x3c
   15338:	adds	r0, r0, #1
   1533c:	adc	r3, r3, #0
   15340:	str	r0, [r1, #56]	; 0x38
   15344:	str	r3, [r1, #60]	; 0x3c
   15348:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1534c:	ldrd	r2, [r1, #40]	; 0x28
   15350:	ldr	r0, [fp, #8]
   15354:	adds	r2, r2, #1
   15358:	adc	r3, r3, #0
   1535c:	strd	r2, [r1, #40]	; 0x28
   15360:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15364:	movw	r0, #57052	; 0xdedc
   15368:	movt	r0, #1
   1536c:	bl	143c0 <UnityPrint@@Base>
   15370:	mov	r0, r6
   15374:	mov	r1, r7
   15378:	bl	14f00 <UnityPrintMask@@Base>
   1537c:	movw	r0, #57063	; 0xdee7
   15380:	movt	r0, #1
   15384:	bl	143c0 <UnityPrint@@Base>
   15388:	mov	r0, r6
   1538c:	mov	r1, r5
   15390:	bl	14f00 <UnityPrintMask@@Base>
   15394:	mov	r0, r8
   15398:	bl	154a0 <UnityAssertBits@@Base+0x200>
   1539c:	mov	r0, #1
   153a0:	mov	r1, #1
   153a4:	str	r0, [r4, #32]
   153a8:	add	r0, r4, #40	; 0x28
   153ac:	bl	12638 <longjmp@plt>
   153b0:	push	{r4, r5, r6, r7, fp, lr}
   153b4:	add	fp, sp, #16
   153b8:	vpush	{d8-d9}
   153bc:	movw	r5, #3936	; 0xf60
   153c0:	mov	r4, r0
   153c4:	add	r0, pc, #196	; 0xc4
   153c8:	movw	r7, #5952	; 0x1740
   153cc:	movt	r5, #3
   153d0:	vld1.64	{d8-d9}, [r0 :128]
   153d4:	movt	r7, #3
   153d8:	add	r0, r5, #48	; 0x30
   153dc:	add	r1, r5, #64	; 0x40
   153e0:	vld1.64	{d16-d17}, [r1 :128]
   153e4:	vld1.64	{d18-d19}, [r0 :128]
   153e8:	vadd.i64	q8, q8, q4
   153ec:	vadd.i64	q9, q9, q4
   153f0:	vst1.64	{d16-d17}, [r1 :128]
   153f4:	vst1.64	{d18-d19}, [r0 :128]
   153f8:	ldr	r0, [r7]
   153fc:	bl	143c0 <UnityPrint@@Base>
   15400:	vld1.64	{d16-d17}, [r5 :128]
   15404:	movw	r6, #228	; 0xe4
   15408:	mov	r0, #58	; 0x3a
   1540c:	movt	r6, #3
   15410:	ldr	r1, [r6]
   15414:	vadd.i64	q8, q8, q4
   15418:	vst1.64	{d16-d17}, [r5 :128]
   1541c:	bl	127e8 <putc@plt>
   15420:	mov	r0, r4
   15424:	bl	14b30 <UnityPrintNumber@@Base>
   15428:	vld1.64	{d16-d17}, [r5 :128]
   1542c:	ldr	r1, [r6]
   15430:	mov	r0, #58	; 0x3a
   15434:	vadd.i64	q8, q8, q4
   15438:	vst1.64	{d16-d17}, [r5 :128]
   1543c:	bl	127e8 <putc@plt>
   15440:	ldr	r0, [r7, #4]
   15444:	bl	143c0 <UnityPrint@@Base>
   15448:	vld1.64	{d16-d17}, [r5 :128]
   1544c:	ldr	r1, [r6]
   15450:	mov	r0, #58	; 0x3a
   15454:	vadd.i64	q8, q8, q4
   15458:	vst1.64	{d16-d17}, [r5 :128]
   1545c:	bl	127e8 <putc@plt>
   15460:	movw	r0, #57032	; 0xdec8
   15464:	movt	r0, #1
   15468:	bl	143c0 <UnityPrint@@Base>
   1546c:	vld1.64	{d16-d17}, [r5 :128]
   15470:	ldr	r1, [r6]
   15474:	mov	r0, #58	; 0x3a
   15478:	vadd.i64	q8, q8, q4
   1547c:	vst1.64	{d16-d17}, [r5 :128]
   15480:	vpop	{d8-d9}
   15484:	pop	{r4, r5, r6, r7, fp, lr}
   15488:	b	127e8 <putc@plt>
   1548c:	nop	{0}
   15490:	andeq	r0, r0, r1
   15494:	andeq	r0, r0, r0
   15498:	andeq	r0, r0, r1
   1549c:	andeq	r0, r0, r0
   154a0:	push	{r4, r5, r6, sl, fp, lr}
   154a4:	add	fp, sp, #16
   154a8:	movw	r5, #1600	; 0x640
   154ac:	mov	r4, r0
   154b0:	movt	r5, #3
   154b4:	ldrd	r0, [r5]
   154b8:	adds	r0, r0, #1
   154bc:	adc	r1, r1, #0
   154c0:	cmp	r4, #0
   154c4:	strd	r0, [r5]
   154c8:	beq	15558 <UnityAssertBits@@Base+0x2b8>
   154cc:	ldrd	r0, [r5, #8]
   154d0:	adds	r0, r0, #1
   154d4:	adc	r1, r1, #0
   154d8:	strd	r0, [r5, #8]
   154dc:	movw	r0, #57049	; 0xded9
   154e0:	movt	r0, #1
   154e4:	bl	143c0 <UnityPrint@@Base>
   154e8:	movw	r6, #5952	; 0x1740
   154ec:	movt	r6, #3
   154f0:	ldr	r0, [r6, #8]
   154f4:	cmp	r0, #0
   154f8:	beq	15560 <UnityAssertBits@@Base+0x2c0>
   154fc:	ldrd	r0, [r5, #24]
   15500:	adds	r0, r0, #1
   15504:	adc	r1, r1, #0
   15508:	strd	r0, [r5, #24]
   1550c:	movw	r0, #57457	; 0xe071
   15510:	movt	r0, #1
   15514:	bl	143c0 <UnityPrint@@Base>
   15518:	ldr	r0, [r6, #8]
   1551c:	bl	143c0 <UnityPrint@@Base>
   15520:	ldr	r0, [r6, #12]
   15524:	cmp	r0, #0
   15528:	beq	15568 <UnityAssertBits@@Base+0x2c8>
   1552c:	ldrd	r0, [r5, #40]	; 0x28
   15530:	adds	r0, r0, #1
   15534:	adc	r1, r1, #0
   15538:	strd	r0, [r5, #40]	; 0x28
   1553c:	movw	r0, #57467	; 0xe07b
   15540:	movt	r0, #1
   15544:	bl	143c0 <UnityPrint@@Base>
   15548:	ldr	r0, [r6, #12]
   1554c:	bl	143c0 <UnityPrint@@Base>
   15550:	add	r0, r5, #56	; 0x38
   15554:	b	1556c <UnityAssertBits@@Base+0x2cc>
   15558:	add	r0, r5, #16
   1555c:	b	155a8 <UnityAssertBits@@Base+0x308>
   15560:	add	r0, r5, #32
   15564:	b	1558c <UnityAssertBits@@Base+0x2ec>
   15568:	add	r0, r5, #48	; 0x30
   1556c:	ldrd	r2, [r0]
   15570:	adds	r2, r2, #1
   15574:	adc	r3, r3, #0
   15578:	strd	r2, [r0]
   1557c:	movw	r0, #57049	; 0xded9
   15580:	movt	r0, #1
   15584:	bl	143c0 <UnityPrint@@Base>
   15588:	add	r0, r5, #64	; 0x40
   1558c:	ldrd	r2, [r0]
   15590:	adds	r2, r2, #1
   15594:	adc	r3, r3, #0
   15598:	strd	r2, [r0]
   1559c:	mov	r0, r4
   155a0:	bl	143c0 <UnityPrint@@Base>
   155a4:	add	r0, r5, #72	; 0x48
   155a8:	ldrd	r2, [r0]
   155ac:	adds	r2, r2, #1
   155b0:	adc	r3, r3, #0
   155b4:	strd	r2, [r0]
   155b8:	ldrd	r0, [r5, #80]	; 0x50
   155bc:	adds	r0, r0, #1
   155c0:	adc	r1, r1, #0
   155c4:	strd	r0, [r5, #80]	; 0x50
   155c8:	pop	{r4, r5, r6, sl, fp, pc}

000155cc <UnityAssertEqualNumber@@Base>:
   155cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155d0:	add	fp, sp, #24
   155d4:	mov	r6, r0
   155d8:	movw	r0, #4048	; 0xfd0
   155dc:	mov	r4, r2
   155e0:	mov	r5, r1
   155e4:	movw	r7, #5952	; 0x1740
   155e8:	movt	r0, #3
   155ec:	movt	r7, #3
   155f0:	ldr	r2, [r0, #64]	; 0x40
   155f4:	ldr	r1, [r0, #68]	; 0x44
   155f8:	adds	r2, r2, #1
   155fc:	adc	r1, r1, #0
   15600:	str	r2, [r0, #64]	; 0x40
   15604:	ldr	r2, [r7, #32]
   15608:	str	r1, [r0, #68]	; 0x44
   1560c:	ldr	r1, [r7, #36]	; 0x24
   15610:	orrs	r1, r1, r2
   15614:	beq	15620 <UnityAssertEqualNumber@@Base+0x54>
   15618:	add	r1, r0, #72	; 0x48
   1561c:	b	15644 <UnityAssertEqualNumber@@Base+0x78>
   15620:	ldr	r2, [r0, #80]	; 0x50
   15624:	ldr	r1, [r0, #84]	; 0x54
   15628:	adds	r2, r2, #1
   1562c:	adc	r1, r1, #0
   15630:	cmp	r6, r5
   15634:	str	r2, [r0, #80]	; 0x50
   15638:	str	r1, [r0, #84]	; 0x54
   1563c:	bne	15668 <UnityAssertEqualNumber@@Base+0x9c>
   15640:	add	r1, r0, #96	; 0x60
   15644:	ldrd	r2, [r1]
   15648:	adds	r2, r2, #1
   1564c:	adc	r3, r3, #0
   15650:	strd	r2, [r1]
   15654:	ldrd	r2, [r0, #104]	; 0x68
   15658:	adds	r2, r2, #1
   1565c:	adc	r3, r3, #0
   15660:	strd	r2, [r0, #104]	; 0x68
   15664:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15668:	ldr	r2, [r0, #88]	; 0x58
   1566c:	ldr	r1, [r0, #92]	; 0x5c
   15670:	ldr	r8, [fp, #8]
   15674:	adds	r2, r2, #1
   15678:	adc	r1, r1, #0
   1567c:	str	r2, [r0, #88]	; 0x58
   15680:	str	r1, [r0, #92]	; 0x5c
   15684:	mov	r0, r3
   15688:	bl	153b0 <UnityAssertBits@@Base+0x110>
   1568c:	movw	r0, #57052	; 0xdedc
   15690:	movt	r0, #1
   15694:	bl	143c0 <UnityPrint@@Base>
   15698:	mov	r0, r6
   1569c:	mov	r1, r8
   156a0:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   156a4:	movw	r0, #57063	; 0xdee7
   156a8:	movt	r0, #1
   156ac:	bl	143c0 <UnityPrint@@Base>
   156b0:	mov	r0, r5
   156b4:	mov	r1, r8
   156b8:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   156bc:	mov	r0, r4
   156c0:	bl	154a0 <UnityAssertBits@@Base+0x200>
   156c4:	mov	r0, #1
   156c8:	mov	r1, #1
   156cc:	str	r0, [r7, #32]
   156d0:	add	r0, r7, #40	; 0x28
   156d4:	bl	12638 <longjmp@plt>
   156d8:	nop	{0}
   156dc:	nop	{0}

000156e0 <UnityAssertEqualIntArray@@Base>:
   156e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156e4:	add	fp, sp, #28
   156e8:	sub	sp, sp, #4
   156ec:	movw	r9, #1696	; 0x6a0
   156f0:	mov	r5, r1
   156f4:	mov	r7, r0
   156f8:	movw	r4, #5952	; 0x1740
   156fc:	movt	r9, #3
   15700:	movt	r4, #3
   15704:	ldrd	r0, [r9]
   15708:	adds	r0, r0, #1
   1570c:	adc	r1, r1, #0
   15710:	strd	r0, [r9]
   15714:	ldrd	r0, [r4, #32]
   15718:	orrs	r0, r1, r0
   1571c:	beq	15738 <UnityAssertEqualIntArray@@Base+0x58>
   15720:	ldrd	r0, [r9, #8]
   15724:	adds	r0, r0, #1
   15728:	adc	r1, r1, #0
   1572c:	strd	r0, [r9, #8]
   15730:	add	r0, r9, #24
   15734:	b	15a18 <UnityAssertEqualIntArray@@Base+0x338>
   15738:	ldrd	r0, [r9, #16]
   1573c:	mov	r8, r2
   15740:	ldr	r2, [fp, #8]
   15744:	mov	sl, r3
   15748:	adds	r0, r0, #1
   1574c:	adc	r1, r1, #0
   15750:	cmp	r8, #0
   15754:	strd	r0, [r9, #16]
   15758:	beq	15b84 <UnityAssertEqualIntArray@@Base+0x4a4>
   1575c:	ldrd	r0, [r9, #40]	; 0x28
   15760:	mov	r3, sl
   15764:	adds	r0, r0, #1
   15768:	adc	r1, r1, #0
   1576c:	strd	r0, [r9, #40]	; 0x28
   15770:	mov	r0, r7
   15774:	mov	r1, r5
   15778:	bl	15be0 <UnityAssertEqualIntArray@@Base+0x500>
   1577c:	cmp	r0, #1
   15780:	bne	1579c <UnityAssertEqualIntArray@@Base+0xbc>
   15784:	ldrd	r0, [r9, #48]	; 0x30
   15788:	adds	r0, r0, #1
   1578c:	adc	r1, r1, #0
   15790:	strd	r0, [r9, #48]	; 0x30
   15794:	add	r0, r9, #64	; 0x40
   15798:	b	15a18 <UnityAssertEqualIntArray@@Base+0x338>
   1579c:	ldrd	r0, [r9, #56]	; 0x38
   157a0:	ldr	lr, [fp, #12]
   157a4:	adds	r0, r0, #1
   157a8:	adc	r1, r1, #0
   157ac:	strd	r0, [r9, #56]	; 0x38
   157b0:	bic	r0, lr, #128	; 0x80
   157b4:	sub	r0, r0, #17
   157b8:	cmp	r0, #49	; 0x31
   157bc:	bhi	159a0 <UnityAssertEqualIntArray@@Base+0x2c0>
   157c0:	add	r1, pc, #0
   157c4:	ldr	pc, [r1, r0, lsl #2]
   157c8:	muleq	r1, r0, r8
   157cc:	andeq	r5, r1, r8, lsl r9
   157d0:	andeq	r5, r1, r0, lsr #19
   157d4:	andeq	r5, r1, r0, lsr #19
   157d8:	andeq	r5, r1, r0, lsr #19
   157dc:	andeq	r5, r1, r0, lsr #19
   157e0:	andeq	r5, r1, r0, lsr #19
   157e4:	andeq	r5, r1, r0, lsr #19
   157e8:	andeq	r5, r1, r0, lsr #19
   157ec:	andeq	r5, r1, r0, lsr #19
   157f0:	andeq	r5, r1, r0, lsr #19
   157f4:	andeq	r5, r1, r0, lsr #19
   157f8:	andeq	r5, r1, r0, lsr #19
   157fc:	andeq	r5, r1, r0, lsr #19
   15800:	andeq	r5, r1, r0, lsr #19
   15804:	andeq	r5, r1, r0, lsr #19
   15808:	muleq	r1, r0, r8
   1580c:	andeq	r5, r1, r8, lsl r9
   15810:	andeq	r5, r1, r0, lsr #19
   15814:	andeq	r5, r1, r0, lsr #19
   15818:	andeq	r5, r1, r0, lsr #19
   1581c:	andeq	r5, r1, r0, lsr #19
   15820:	andeq	r5, r1, r0, lsr #19
   15824:	andeq	r5, r1, r0, lsr #19
   15828:	andeq	r5, r1, r0, lsr #19
   1582c:	andeq	r5, r1, r0, lsr #19
   15830:	andeq	r5, r1, r0, lsr #19
   15834:	andeq	r5, r1, r0, lsr #19
   15838:	andeq	r5, r1, r0, lsr #19
   1583c:	andeq	r5, r1, r0, lsr #19
   15840:	andeq	r5, r1, r0, lsr #19
   15844:	andeq	r5, r1, r0, lsr #19
   15848:	andeq	r5, r1, r0, lsr #19
   1584c:	andeq	r5, r1, r0, lsr #19
   15850:	andeq	r5, r1, r0, lsr #19
   15854:	andeq	r5, r1, r0, lsr #19
   15858:	andeq	r5, r1, r0, lsr #19
   1585c:	andeq	r5, r1, r0, lsr #19
   15860:	andeq	r5, r1, r0, lsr #19
   15864:	andeq	r5, r1, r0, lsr #19
   15868:	andeq	r5, r1, r0, lsr #19
   1586c:	andeq	r5, r1, r0, lsr #19
   15870:	andeq	r5, r1, r0, lsr #19
   15874:	andeq	r5, r1, r0, lsr #19
   15878:	andeq	r5, r1, r0, lsr #19
   1587c:	andeq	r5, r1, r0, lsr #19
   15880:	andeq	r5, r1, r0, lsr #19
   15884:	andeq	r5, r1, r0, lsr #19
   15888:	muleq	r1, r0, r8
   1588c:	andeq	r5, r1, r8, lsl r9
   15890:	ldrd	r0, [r9, #96]	; 0x60
   15894:	ldr	r2, [r9, #128]	; 0x80
   15898:	ldr	r3, [r9, #132]	; 0x84
   1589c:	mov	r4, #0
   158a0:	add	ip, r9, #144	; 0x90
   158a4:	adds	r0, r0, #1
   158a8:	adc	r1, r1, #0
   158ac:	adds	r2, r2, #1
   158b0:	str	r2, [r9, #128]	; 0x80
   158b4:	strd	r0, [r9, #96]	; 0x60
   158b8:	adc	r0, r3, #0
   158bc:	add	r3, r9, #160	; 0xa0
   158c0:	str	r0, [r9, #132]	; 0x84
   158c4:	ldr	r1, [r9, #140]	; 0x8c
   158c8:	ldr	r2, [r9, #136]	; 0x88
   158cc:	adds	r2, r2, #1
   158d0:	adc	r1, r1, #0
   158d4:	str	r2, [r9, #136]	; 0x88
   158d8:	str	r1, [r9, #140]	; 0x8c
   158dc:	ldrb	r0, [r5]
   158e0:	ldrb	r6, [r7]
   158e4:	cmp	r6, r0
   158e8:	bne	15a48 <UnityAssertEqualIntArray@@Base+0x368>
   158ec:	add	r0, pc, #732	; 0x2dc
   158f0:	vld1.64	{d18-d19}, [r3 :128]
   158f4:	add	r4, r4, #1
   158f8:	add	r5, r5, #1
   158fc:	add	r7, r7, #1
   15900:	vld1.64	{d16-d17}, [r0 :128]
   15904:	cmp	r8, r4
   15908:	vadd.i64	q8, q9, q8
   1590c:	vst1.64	{d16-d17}, [r3 :128]
   15910:	bne	158cc <UnityAssertEqualIntArray@@Base+0x1ec>
   15914:	b	15a04 <UnityAssertEqualIntArray@@Base+0x324>
   15918:	ldrd	r0, [r9, #120]	; 0x78
   1591c:	ldr	r2, [r9, #176]	; 0xb0
   15920:	ldr	r3, [r9, #180]	; 0xb4
   15924:	mov	r4, #0
   15928:	add	ip, r9, #192	; 0xc0
   1592c:	adds	r0, r0, #1
   15930:	adc	r1, r1, #0
   15934:	adds	r2, r2, #1
   15938:	str	r2, [r9, #176]	; 0xb0
   1593c:	strd	r0, [r9, #120]	; 0x78
   15940:	adc	r0, r3, #0
   15944:	add	r3, r9, #208	; 0xd0
   15948:	str	r0, [r9, #180]	; 0xb4
   1594c:	ldr	r1, [r9, #188]	; 0xbc
   15950:	ldr	r2, [r9, #184]	; 0xb8
   15954:	adds	r2, r2, #1
   15958:	adc	r1, r1, #0
   1595c:	str	r2, [r9, #184]	; 0xb8
   15960:	str	r1, [r9, #188]	; 0xbc
   15964:	ldrh	r0, [r5]
   15968:	ldrh	r6, [r7]
   1596c:	cmp	r6, r0
   15970:	bne	15aa4 <UnityAssertEqualIntArray@@Base+0x3c4>
   15974:	add	r0, pc, #596	; 0x254
   15978:	vld1.64	{d18-d19}, [r3 :128]
   1597c:	add	r4, r4, #1
   15980:	add	r5, r5, #2
   15984:	add	r7, r7, #2
   15988:	vld1.64	{d16-d17}, [r0 :128]
   1598c:	cmp	r8, r4
   15990:	vadd.i64	q8, q9, q8
   15994:	vst1.64	{d16-d17}, [r3 :128]
   15998:	bne	15954 <UnityAssertEqualIntArray@@Base+0x274>
   1599c:	b	15a04 <UnityAssertEqualIntArray@@Base+0x324>
   159a0:	ldrd	r0, [r9, #72]	; 0x48
   159a4:	ldrd	r2, [r9, #224]	; 0xe0
   159a8:	mov	r4, #0
   159ac:	add	ip, r9, #232	; 0xe8
   159b0:	adds	r0, r0, #1
   159b4:	adc	r1, r1, #0
   159b8:	strd	r0, [r9, #72]	; 0x48
   159bc:	add	r1, r9, #248	; 0xf8
   159c0:	adds	r2, r2, #1
   159c4:	adc	r3, r3, #0
   159c8:	strd	r2, [r9, #224]	; 0xe0
   159cc:	ldr	r0, [r5]
   159d0:	ldr	r6, [r7]
   159d4:	cmp	r6, r0
   159d8:	bne	15b00 <UnityAssertEqualIntArray@@Base+0x420>
   159dc:	add	r0, pc, #492	; 0x1ec
   159e0:	vld1.64	{d18-d19}, [r1]
   159e4:	add	r4, r4, #1
   159e8:	add	r5, r5, #4
   159ec:	add	r7, r7, #4
   159f0:	vld1.64	{d16-d17}, [r0 :128]
   159f4:	cmp	r8, r4
   159f8:	vadd.i64	q8, q9, q8
   159fc:	vst1.64	{d16-d17}, [r1]
   15a00:	bne	159c0 <UnityAssertEqualIntArray@@Base+0x2e0>
   15a04:	ldrd	r0, [ip]
   15a08:	adds	r0, r0, #1
   15a0c:	adc	r1, r1, #0
   15a10:	strd	r0, [ip]
   15a14:	add	r0, r9, #264	; 0x108
   15a18:	ldrd	r2, [r0]
   15a1c:	adds	r2, r2, #1
   15a20:	adc	r3, r3, #0
   15a24:	strd	r2, [r0]
   15a28:	ldr	r0, [r9, #272]	; 0x110
   15a2c:	ldr	r1, [r9, #276]	; 0x114
   15a30:	adds	r0, r0, #1
   15a34:	adc	r1, r1, #0
   15a38:	str	r0, [r9, #272]	; 0x110
   15a3c:	str	r1, [r9, #276]	; 0x114
   15a40:	sub	sp, fp, #28
   15a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a48:	ldrd	r0, [r9, #152]	; 0x98
   15a4c:	mov	r6, lr
   15a50:	adds	r0, r0, #1
   15a54:	adc	r1, r1, #0
   15a58:	strd	r0, [r9, #152]	; 0x98
   15a5c:	ldr	r0, [fp, #8]
   15a60:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15a64:	movw	r0, #57074	; 0xdef2
   15a68:	movt	r0, #1
   15a6c:	bl	143c0 <UnityPrint@@Base>
   15a70:	mov	r0, r4
   15a74:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   15a78:	movw	r0, #57052	; 0xdedc
   15a7c:	movt	r0, #1
   15a80:	bl	143c0 <UnityPrint@@Base>
   15a84:	ldrsb	r0, [r7]
   15a88:	mov	r1, r6
   15a8c:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   15a90:	movw	r0, #57063	; 0xdee7
   15a94:	movt	r0, #1
   15a98:	bl	143c0 <UnityPrint@@Base>
   15a9c:	ldrsb	r0, [r5]
   15aa0:	b	15b58 <UnityAssertEqualIntArray@@Base+0x478>
   15aa4:	ldrd	r0, [r9, #200]	; 0xc8
   15aa8:	mov	r6, lr
   15aac:	adds	r0, r0, #1
   15ab0:	adc	r1, r1, #0
   15ab4:	strd	r0, [r9, #200]	; 0xc8
   15ab8:	ldr	r0, [fp, #8]
   15abc:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15ac0:	movw	r0, #57074	; 0xdef2
   15ac4:	movt	r0, #1
   15ac8:	bl	143c0 <UnityPrint@@Base>
   15acc:	mov	r0, r4
   15ad0:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   15ad4:	movw	r0, #57052	; 0xdedc
   15ad8:	movt	r0, #1
   15adc:	bl	143c0 <UnityPrint@@Base>
   15ae0:	ldrsh	r0, [r7]
   15ae4:	mov	r1, r6
   15ae8:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   15aec:	movw	r0, #57063	; 0xdee7
   15af0:	movt	r0, #1
   15af4:	bl	143c0 <UnityPrint@@Base>
   15af8:	ldrsh	r0, [r5]
   15afc:	b	15b58 <UnityAssertEqualIntArray@@Base+0x478>
   15b00:	ldrd	r0, [r9, #240]	; 0xf0
   15b04:	mov	r6, lr
   15b08:	adds	r0, r0, #1
   15b0c:	adc	r1, r1, #0
   15b10:	strd	r0, [r9, #240]	; 0xf0
   15b14:	ldr	r0, [fp, #8]
   15b18:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15b1c:	movw	r0, #57074	; 0xdef2
   15b20:	movt	r0, #1
   15b24:	bl	143c0 <UnityPrint@@Base>
   15b28:	mov	r0, r4
   15b2c:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   15b30:	movw	r0, #57052	; 0xdedc
   15b34:	movt	r0, #1
   15b38:	bl	143c0 <UnityPrint@@Base>
   15b3c:	ldr	r0, [r7]
   15b40:	mov	r1, r6
   15b44:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   15b48:	movw	r0, #57063	; 0xdee7
   15b4c:	movt	r0, #1
   15b50:	bl	143c0 <UnityPrint@@Base>
   15b54:	ldr	r0, [r5]
   15b58:	mov	r1, r6
   15b5c:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   15b60:	mov	r0, sl
   15b64:	bl	154a0 <UnityAssertBits@@Base+0x200>
   15b68:	movw	r1, #5952	; 0x1740
   15b6c:	mov	r0, #1
   15b70:	movt	r1, #3
   15b74:	str	r0, [r1, #32]
   15b78:	add	r0, r1, #40	; 0x28
   15b7c:	mov	r1, #1
   15b80:	bl	12638 <longjmp@plt>
   15b84:	ldrd	r0, [r9, #32]
   15b88:	adds	r0, r0, #1
   15b8c:	adc	r1, r1, #0
   15b90:	strd	r0, [r9, #32]
   15b94:	mov	r0, r2
   15b98:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15b9c:	movw	r0, #57135	; 0xdf2f
   15ba0:	movt	r0, #1
   15ba4:	bl	143c0 <UnityPrint@@Base>
   15ba8:	mov	r0, sl
   15bac:	bl	154a0 <UnityAssertBits@@Base+0x200>
   15bb0:	mov	r0, #1
   15bb4:	mov	r1, #1
   15bb8:	str	r0, [r4, #32]
   15bbc:	add	r0, r4, #40	; 0x28
   15bc0:	bl	12638 <longjmp@plt>
   15bc4:	nop	{0}
   15bc8:	nop	{0}
   15bcc:	nop	{0}
   15bd0:	andeq	r0, r0, r1
   15bd4:	andeq	r0, r0, r0
   15bd8:	andeq	r0, r0, r1
   15bdc:	andeq	r0, r0, r0
   15be0:	push	{r4, r5, r6, r7, fp, lr}
   15be4:	add	fp, sp, #16
   15be8:	mov	r4, r3
   15bec:	movw	r3, #1984	; 0x7c0
   15bf0:	movt	r3, #3
   15bf4:	ldrd	r6, [r3]
   15bf8:	adds	r6, r6, #1
   15bfc:	adc	r7, r7, #0
   15c00:	strd	r6, [r3]
   15c04:	orrs	r7, r0, r1
   15c08:	bne	15c1c <UnityAssertEqualIntArray@@Base+0x53c>
   15c0c:	add	r1, r3, #24
   15c10:	add	r2, r3, #8
   15c14:	mov	r0, #1
   15c18:	b	15c60 <UnityAssertEqualIntArray@@Base+0x580>
   15c1c:	ldrd	r6, [r3, #16]
   15c20:	adds	r6, r6, #1
   15c24:	adc	r7, r7, #0
   15c28:	cmp	r0, #0
   15c2c:	strd	r6, [r3, #16]
   15c30:	beq	15c9c <UnityAssertEqualIntArray@@Base+0x5bc>
   15c34:	ldr	r0, [r3, #40]	; 0x28
   15c38:	ldr	r5, [r3, #44]	; 0x2c
   15c3c:	adds	r0, r0, #1
   15c40:	adc	r5, r5, #0
   15c44:	cmp	r1, #0
   15c48:	str	r0, [r3, #40]	; 0x28
   15c4c:	str	r5, [r3, #44]	; 0x2c
   15c50:	beq	15cc0 <UnityAssertEqualIntArray@@Base+0x5e0>
   15c54:	add	r1, r3, #64	; 0x40
   15c58:	add	r2, r3, #56	; 0x38
   15c5c:	mov	r0, #0
   15c60:	ldrd	r4, [r2]
   15c64:	adds	r4, r4, #1
   15c68:	adc	r5, r5, #0
   15c6c:	strd	r4, [r2]
   15c70:	ldm	r1, {r2, r5}
   15c74:	adds	r2, r2, #1
   15c78:	adc	r5, r5, #0
   15c7c:	stm	r1, {r2, r5}
   15c80:	ldr	r2, [r3, #72]	; 0x48
   15c84:	ldr	r1, [r3, #76]	; 0x4c
   15c88:	adds	r2, r2, #1
   15c8c:	adc	r1, r1, #0
   15c90:	str	r2, [r3, #72]	; 0x48
   15c94:	str	r1, [r3, #76]	; 0x4c
   15c98:	pop	{r4, r5, r6, r7, fp, pc}
   15c9c:	ldrd	r0, [r3, #32]
   15ca0:	adds	r0, r0, #1
   15ca4:	adc	r1, r1, #0
   15ca8:	strd	r0, [r3, #32]
   15cac:	mov	r0, r2
   15cb0:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15cb4:	movw	r0, #57190	; 0xdf66
   15cb8:	movt	r0, #1
   15cbc:	b	15ce0 <UnityAssertEqualIntArray@@Base+0x600>
   15cc0:	ldrd	r0, [r3, #48]	; 0x30
   15cc4:	adds	r0, r0, #1
   15cc8:	adc	r1, r1, #0
   15ccc:	strd	r0, [r3, #48]	; 0x30
   15cd0:	mov	r0, r2
   15cd4:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15cd8:	movw	r0, #57219	; 0xdf83
   15cdc:	movt	r0, #1
   15ce0:	bl	143c0 <UnityPrint@@Base>
   15ce4:	mov	r0, r4
   15ce8:	bl	154a0 <UnityAssertBits@@Base+0x200>
   15cec:	movw	r0, #5952	; 0x1740
   15cf0:	mov	r1, #1
   15cf4:	movt	r0, #3
   15cf8:	str	r1, [r0, #32]
   15cfc:	add	r0, r0, #40	; 0x28
   15d00:	mov	r1, #1
   15d04:	bl	12638 <longjmp@plt>
   15d08:	nop	{0}
   15d0c:	nop	{0}

00015d10 <UnityAssertEqualFloatArray@@Base>:
   15d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d14:	add	fp, sp, #28
   15d18:	sub	sp, sp, #12
   15d1c:	movw	r8, #2064	; 0x810
   15d20:	mov	r7, r1
   15d24:	mov	r5, r0
   15d28:	movw	r9, #5952	; 0x1740
   15d2c:	movt	r8, #3
   15d30:	movt	r9, #3
   15d34:	ldrd	r0, [r8]
   15d38:	adds	r0, r0, #1
   15d3c:	adc	r1, r1, #0
   15d40:	strd	r0, [r8]
   15d44:	ldrd	r0, [r9, #32]
   15d48:	orrs	r0, r1, r0
   15d4c:	beq	15d68 <UnityAssertEqualFloatArray@@Base+0x58>
   15d50:	ldrd	r0, [r8, #8]
   15d54:	adds	r0, r0, #1
   15d58:	adc	r1, r1, #0
   15d5c:	strd	r0, [r8, #8]
   15d60:	add	r0, r8, #24
   15d64:	b	15f1c <UnityAssertEqualFloatArray@@Base+0x20c>
   15d68:	ldrd	r0, [r8, #16]
   15d6c:	mov	r6, r2
   15d70:	ldr	r2, [fp, #8]
   15d74:	mov	r4, r3
   15d78:	adds	r0, r0, #1
   15d7c:	adc	r1, r1, #0
   15d80:	cmp	r6, #0
   15d84:	strd	r0, [r8, #16]
   15d88:	beq	15fac <UnityAssertEqualFloatArray@@Base+0x29c>
   15d8c:	ldrd	r0, [r8, #40]	; 0x28
   15d90:	mov	r3, r4
   15d94:	adds	r0, r0, #1
   15d98:	adc	r1, r1, #0
   15d9c:	strd	r0, [r8, #40]	; 0x28
   15da0:	mov	r0, r5
   15da4:	mov	r1, r7
   15da8:	bl	15be0 <UnityAssertEqualIntArray@@Base+0x500>
   15dac:	cmp	r0, #1
   15db0:	bne	15dcc <UnityAssertEqualFloatArray@@Base+0xbc>
   15db4:	ldrd	r0, [r8, #48]	; 0x30
   15db8:	adds	r0, r0, #1
   15dbc:	adc	r1, r1, #0
   15dc0:	strd	r0, [r8, #48]	; 0x30
   15dc4:	add	r0, r8, #64	; 0x40
   15dc8:	b	15f1c <UnityAssertEqualFloatArray@@Base+0x20c>
   15dcc:	ldrd	r2, [r8, #56]	; 0x38
   15dd0:	vldr	s0, [pc, #552]	; 16000 <UnityAssertEqualFloatArray@@Base+0x2f0>
   15dd4:	vldr	s2, [pc, #552]	; 16004 <UnityAssertEqualFloatArray@@Base+0x2f4>
   15dd8:	ldr	r0, [r8, #72]	; 0x48
   15ddc:	ldr	r9, [r8, #76]	; 0x4c
   15de0:	add	r1, r8, #96	; 0x60
   15de4:	str	r4, [sp]
   15de8:	mov	r4, #0
   15dec:	add	lr, r8, #120	; 0x78
   15df0:	add	sl, r8, #128	; 0x80
   15df4:	str	r1, [sp, #8]
   15df8:	add	r1, r8, #104	; 0x68
   15dfc:	str	r1, [sp, #4]
   15e00:	adds	r2, r2, #1
   15e04:	adc	r3, r3, #0
   15e08:	strd	r2, [r8, #56]	; 0x38
   15e0c:	adds	r0, r0, #1
   15e10:	adc	r9, r9, #0
   15e14:	str	r0, [r8, #72]	; 0x48
   15e18:	str	r9, [r8, #76]	; 0x4c
   15e1c:	vldr	s4, [r7]
   15e20:	vldr	s6, [r5]
   15e24:	vsub.f32	s4, s6, s4
   15e28:	vcmpe.f32	s4, #0.0
   15e2c:	vmrs	APSR_nzcv, fpscr
   15e30:	bpl	15e50 <UnityAssertEqualFloatArray@@Base+0x140>
   15e34:	ldrd	r2, [r8, #88]	; 0x58
   15e38:	vsub.f32	s4, s0, s4
   15e3c:	ldr	ip, [sp, #4]
   15e40:	adds	r2, r2, #1
   15e44:	adc	r3, r3, #0
   15e48:	strd	r2, [r8, #88]	; 0x58
   15e4c:	b	15e54 <UnityAssertEqualFloatArray@@Base+0x144>
   15e50:	ldr	ip, [sp, #8]
   15e54:	ldrd	r2, [ip]
   15e58:	adds	r2, r2, #1
   15e5c:	adc	r3, r3, #0
   15e60:	strd	r2, [ip]
   15e64:	vldr	s6, [r5]
   15e68:	vmul.f32	s6, s6, s2
   15e6c:	vcmpe.f32	s6, #0.0
   15e70:	vmrs	APSR_nzcv, fpscr
   15e74:	bpl	15e94 <UnityAssertEqualFloatArray@@Base+0x184>
   15e78:	ldrd	r2, [r8, #112]	; 0x70
   15e7c:	vsub.f32	s6, s0, s6
   15e80:	adds	r2, r2, #1
   15e84:	adc	r3, r3, #0
   15e88:	strd	r2, [r8, #112]	; 0x70
   15e8c:	mov	r2, sl
   15e90:	b	15e98 <UnityAssertEqualFloatArray@@Base+0x188>
   15e94:	mov	r2, lr
   15e98:	vmul.f32	s8, s4, s0
   15e9c:	ldr	r3, [r2]
   15ea0:	ldr	r1, [r2, #4]
   15ea4:	adds	r3, r3, #1
   15ea8:	vcmp.f32	s8, #0.0
   15eac:	adc	r1, r1, #0
   15eb0:	str	r3, [r2]
   15eb4:	str	r1, [r2, #4]
   15eb8:	vmrs	APSR_nzcv, fpscr
   15ebc:	bne	15f44 <UnityAssertEqualFloatArray@@Base+0x234>
   15ec0:	ldrd	r2, [r8, #144]	; 0x90
   15ec4:	vcmpe.f32	s4, s6
   15ec8:	adds	r2, r2, #1
   15ecc:	adc	r3, r3, #0
   15ed0:	vmrs	APSR_nzcv, fpscr
   15ed4:	strd	r2, [r8, #144]	; 0x90
   15ed8:	bgt	15f4c <UnityAssertEqualFloatArray@@Base+0x23c>
   15edc:	add	r2, pc, #268	; 0x10c
   15ee0:	add	r1, r8, #160	; 0xa0
   15ee4:	add	r4, r4, #1
   15ee8:	add	r7, r7, #4
   15eec:	add	r5, r5, #4
   15ef0:	vld1.64	{d16-d17}, [r2 :128]
   15ef4:	vld1.64	{d18-d19}, [r1 :128]
   15ef8:	cmp	r6, r4
   15efc:	vadd.i64	q8, q9, q8
   15f00:	vst1.64	{d16-d17}, [r1 :128]
   15f04:	bne	15e0c <UnityAssertEqualFloatArray@@Base+0xfc>
   15f08:	ldrd	r0, [r8, #80]	; 0x50
   15f0c:	adds	r0, r0, #1
   15f10:	adc	r1, r1, #0
   15f14:	strd	r0, [r8, #80]	; 0x50
   15f18:	add	r0, r8, #176	; 0xb0
   15f1c:	ldrd	r2, [r0]
   15f20:	adds	r2, r2, #1
   15f24:	adc	r3, r3, #0
   15f28:	strd	r2, [r0]
   15f2c:	ldrd	r0, [r8, #184]	; 0xb8
   15f30:	adds	r0, r0, #1
   15f34:	adc	r1, r1, #0
   15f38:	strd	r0, [r8, #184]	; 0xb8
   15f3c:	sub	sp, fp, #28
   15f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f44:	add	r0, r8, #136	; 0x88
   15f48:	b	15f50 <UnityAssertEqualFloatArray@@Base+0x240>
   15f4c:	add	r0, r8, #152	; 0x98
   15f50:	ldrd	r2, [r0]
   15f54:	adds	r2, r2, #1
   15f58:	adc	r3, r3, #0
   15f5c:	strd	r2, [r0]
   15f60:	ldr	r0, [fp, #8]
   15f64:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15f68:	movw	r0, #57074	; 0xdef2
   15f6c:	movt	r0, #1
   15f70:	bl	143c0 <UnityPrint@@Base>
   15f74:	mov	r0, r4
   15f78:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   15f7c:	movw	r0, #57109	; 0xdf15
   15f80:	movt	r0, #1
   15f84:	bl	143c0 <UnityPrint@@Base>
   15f88:	ldr	r0, [sp]
   15f8c:	bl	154a0 <UnityAssertBits@@Base+0x200>
   15f90:	movw	r1, #5952	; 0x1740
   15f94:	mov	r0, #1
   15f98:	movt	r1, #3
   15f9c:	str	r0, [r1, #32]
   15fa0:	add	r0, r1, #40	; 0x28
   15fa4:	mov	r1, #1
   15fa8:	bl	12638 <longjmp@plt>
   15fac:	ldrd	r0, [r8, #32]
   15fb0:	adds	r0, r0, #1
   15fb4:	adc	r1, r1, #0
   15fb8:	strd	r0, [r8, #32]
   15fbc:	mov	r0, r2
   15fc0:	bl	153b0 <UnityAssertBits@@Base+0x110>
   15fc4:	movw	r0, #57135	; 0xdf2f
   15fc8:	movt	r0, #1
   15fcc:	bl	143c0 <UnityPrint@@Base>
   15fd0:	mov	r0, r4
   15fd4:	bl	154a0 <UnityAssertBits@@Base+0x200>
   15fd8:	mov	r0, #1
   15fdc:	mov	r1, #1
   15fe0:	str	r0, [r9, #32]
   15fe4:	add	r0, r9, #40	; 0x28
   15fe8:	bl	12638 <longjmp@plt>
   15fec:	nop	{0}
   15ff0:	andeq	r0, r0, r1
   15ff4:	andeq	r0, r0, r0
   15ff8:	andeq	r0, r0, r1
	...
   16004:	strcc	ip, [r7, -ip, lsr #11]!

00016008 <UnityAssertFloatsWithin@@Base>:
   16008:	push	{r4, r5, r6, r7, fp, lr}
   1600c:	add	fp, sp, #16
   16010:	mov	r4, r0
   16014:	movw	r0, #2256	; 0x8d0
   16018:	movw	r5, #5952	; 0x1740
   1601c:	movt	r0, #3
   16020:	movt	r5, #3
   16024:	ldrd	r2, [r0]
   16028:	adds	r2, r2, #1
   1602c:	adc	r3, r3, #0
   16030:	strd	r2, [r0]
   16034:	ldrd	r2, [r5, #32]
   16038:	orrs	r2, r3, r2
   1603c:	beq	1604c <UnityAssertFloatsWithin@@Base+0x44>
   16040:	add	r1, r0, #24
   16044:	add	r2, r0, #8
   16048:	b	16118 <UnityAssertFloatsWithin@@Base+0x110>
   1604c:	vsub.f32	s2, s2, s1
   16050:	ldrd	r2, [r0, #16]
   16054:	adds	r2, r2, #1
   16058:	vcmpe.f32	s2, #0.0
   1605c:	adc	r3, r3, #0
   16060:	strd	r2, [r0, #16]
   16064:	vmrs	APSR_nzcv, fpscr
   16068:	bpl	1608c <UnityAssertFloatsWithin@@Base+0x84>
   1606c:	vldr	s4, [pc, #292]	; 16198 <UnityAssertFloatsWithin@@Base+0x190>
   16070:	ldrd	r2, [r0, #32]
   16074:	adds	r2, r2, #1
   16078:	vsub.f32	s2, s4, s2
   1607c:	adc	r3, r3, #0
   16080:	strd	r2, [r0, #32]
   16084:	add	r2, r0, #48	; 0x30
   16088:	b	16090 <UnityAssertFloatsWithin@@Base+0x88>
   1608c:	add	r2, r0, #40	; 0x28
   16090:	ldrd	r6, [r2]
   16094:	vcmpe.f32	s0, #0.0
   16098:	adds	r6, r6, #1
   1609c:	adc	r7, r7, #0
   160a0:	vmrs	APSR_nzcv, fpscr
   160a4:	strd	r6, [r2]
   160a8:	bpl	160cc <UnityAssertFloatsWithin@@Base+0xc4>
   160ac:	vldr	s4, [pc, #228]	; 16198 <UnityAssertFloatsWithin@@Base+0x190>
   160b0:	ldrd	r2, [r0, #56]	; 0x38
   160b4:	adds	r2, r2, #1
   160b8:	vsub.f32	s0, s4, s0
   160bc:	adc	r3, r3, #0
   160c0:	strd	r2, [r0, #56]	; 0x38
   160c4:	add	r2, r0, #72	; 0x48
   160c8:	b	160d0 <UnityAssertFloatsWithin@@Base+0xc8>
   160cc:	add	r2, r0, #64	; 0x40
   160d0:	vldr	s4, [pc, #192]	; 16198 <UnityAssertFloatsWithin@@Base+0x190>
   160d4:	ldrd	r6, [r2]
   160d8:	adds	r6, r6, #1
   160dc:	vmul.f32	s4, s2, s4
   160e0:	adc	r7, r7, #0
   160e4:	strd	r6, [r2]
   160e8:	vcmp.f32	s4, #0.0
   160ec:	vmrs	APSR_nzcv, fpscr
   160f0:	bne	1614c <UnityAssertFloatsWithin@@Base+0x144>
   160f4:	ldrd	r2, [r0, #88]	; 0x58
   160f8:	vcmpe.f32	s0, s2
   160fc:	adds	r2, r2, #1
   16100:	adc	r3, r3, #0
   16104:	vmrs	APSR_nzcv, fpscr
   16108:	strd	r2, [r0, #88]	; 0x58
   1610c:	bmi	16154 <UnityAssertFloatsWithin@@Base+0x14c>
   16110:	add	r1, r0, #112	; 0x70
   16114:	add	r2, r0, #104	; 0x68
   16118:	ldrd	r4, [r2]
   1611c:	adds	r4, r4, #1
   16120:	adc	r5, r5, #0
   16124:	strd	r4, [r2]
   16128:	ldrd	r2, [r1]
   1612c:	adds	r2, r2, #1
   16130:	adc	r3, r3, #0
   16134:	strd	r2, [r1]
   16138:	ldrd	r2, [r0, #120]	; 0x78
   1613c:	adds	r2, r2, #1
   16140:	adc	r3, r3, #0
   16144:	strd	r2, [r0, #120]	; 0x78
   16148:	pop	{r4, r5, r6, r7, fp, pc}
   1614c:	add	r0, r0, #80	; 0x50
   16150:	b	16158 <UnityAssertFloatsWithin@@Base+0x150>
   16154:	add	r0, r0, #96	; 0x60
   16158:	ldrd	r2, [r0]
   1615c:	adds	r2, r2, #1
   16160:	adc	r3, r3, #0
   16164:	strd	r2, [r0]
   16168:	mov	r0, r1
   1616c:	bl	153b0 <UnityAssertBits@@Base+0x110>
   16170:	movw	r0, #57109	; 0xdf15
   16174:	movt	r0, #1
   16178:	bl	143c0 <UnityPrint@@Base>
   1617c:	mov	r0, r4
   16180:	bl	154a0 <UnityAssertBits@@Base+0x200>
   16184:	mov	r0, #1
   16188:	mov	r1, #1
   1618c:	str	r0, [r5, #32]
   16190:	add	r0, r5, #40	; 0x28
   16194:	bl	12638 <longjmp@plt>
   16198:	andeq	r0, r0, r0

0001619c <UnityAssertFloatSpecial@@Base>:
   1619c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161a0:	add	fp, sp, #28
   161a4:	sub	sp, sp, #4
   161a8:	vpush	{d8}
   161ac:	sub	sp, sp, #16
   161b0:	movw	r7, #2384	; 0x950
   161b4:	mov	r5, r1
   161b8:	mov	r8, r0
   161bc:	movw	sl, #5952	; 0x1740
   161c0:	mov	r4, sp
   161c4:	movt	r7, #3
   161c8:	movt	sl, #3
   161cc:	ldrd	r0, [r7]
   161d0:	adds	r0, r0, #1
   161d4:	adc	r1, r1, #0
   161d8:	strd	r0, [r7]
   161dc:	movw	r0, #57512	; 0xe0a8
   161e0:	movt	r0, #1
   161e4:	vld1.64	{d16-d17}, [r0]
   161e8:	ldrd	r0, [sl, #32]
   161ec:	orrs	r0, r1, r0
   161f0:	vst1.64	{d16-d17}, [r4]
   161f4:	beq	16210 <UnityAssertFloatSpecial@@Base+0x74>
   161f8:	ldrd	r0, [r7, #8]
   161fc:	adds	r0, r0, #1
   16200:	adc	r1, r1, #0
   16204:	strd	r0, [r7, #8]
   16208:	add	r0, r7, #24
   1620c:	b	163ac <UnityAssertFloatSpecial@@Base+0x210>
   16210:	ldrd	r0, [r7, #16]
   16214:	and	r9, r2, #1
   16218:	adds	r0, r0, #1
   1621c:	adc	r1, r1, #0
   16220:	cmp	r2, #7
   16224:	strd	r0, [r7, #16]
   16228:	bhi	16338 <UnityAssertFloatSpecial@@Base+0x19c>
   1622c:	add	r0, pc, #4
   16230:	vmov.f32	s16, s0
   16234:	ldr	pc, [r0, r2, lsl #2]
   16238:	andeq	r6, r1, r8, asr r2
   1623c:	andeq	r6, r1, r8, asr r2
   16240:	andeq	r6, r1, r0, lsl #6
   16244:	andeq	r6, r1, r0, lsl #6
   16248:	muleq	r1, r0, r2
   1624c:	muleq	r1, r0, r2
   16250:			; <UNDEFINED> instruction: 0x000162b4
   16254:			; <UNDEFINED> instruction: 0x000162b4
   16258:	ldrd	r0, [r7, #48]	; 0x30
   1625c:	vmov.f32	s0, s16
   16260:	vcmpe.f32	s16, #0.0
   16264:	mov	r6, #0
   16268:	adds	r0, r0, #1
   1626c:	adc	r1, r1, #0
   16270:	vmrs	APSR_nzcv, fpscr
   16274:	movwgt	r6, #1
   16278:	strd	r0, [r7, #48]	; 0x30
   1627c:	bl	126b0 <__isinff@plt>
   16280:	and	r0, r0, r6
   16284:	mov	r1, #0
   16288:	add	r6, r7, #104	; 0x68
   1628c:	b	16380 <UnityAssertFloatSpecial@@Base+0x1e4>
   16290:	ldrd	r0, [r7, #80]	; 0x50
   16294:	vmov.f32	s0, s16
   16298:	add	r6, r7, #120	; 0x78
   1629c:	adds	r0, r0, #1
   162a0:	adc	r1, r1, #0
   162a4:	strd	r0, [r7, #80]	; 0x50
   162a8:	bl	12668 <__isnanf@plt>
   162ac:	mov	r1, #2
   162b0:	b	16380 <UnityAssertFloatSpecial@@Base+0x1e4>
   162b4:	ldrd	r0, [r7, #96]	; 0x60
   162b8:	vmov.f32	s0, s16
   162bc:	adds	r0, r0, #1
   162c0:	adc	r1, r1, #0
   162c4:	strd	r0, [r7, #96]	; 0x60
   162c8:	bl	126b0 <__isinff@plt>
   162cc:	vmov.f32	s0, s16
   162d0:	mov	r6, r0
   162d4:	bl	12668 <__isnanf@plt>
   162d8:	orrs	r0, r0, r6
   162dc:	beq	16364 <UnityAssertFloatSpecial@@Base+0x1c8>
   162e0:	ldrd	r0, [r7, #128]	; 0x80
   162e4:	add	r6, r7, #144	; 0x90
   162e8:	adds	r0, r0, #1
   162ec:	adc	r1, r1, #0
   162f0:	strd	r0, [r7, #128]	; 0x80
   162f4:	mov	r1, #3
   162f8:	mov	r0, #0
   162fc:	b	16380 <UnityAssertFloatSpecial@@Base+0x1e4>
   16300:	ldrd	r0, [r7, #64]	; 0x40
   16304:	vmov.f32	s0, s16
   16308:	vcmpe.f32	s16, #0.0
   1630c:	mov	r6, #0
   16310:	adds	r0, r0, #1
   16314:	adc	r1, r1, #0
   16318:	vmrs	APSR_nzcv, fpscr
   1631c:	movwmi	r6, #1
   16320:	strd	r0, [r7, #64]	; 0x40
   16324:	bl	126b0 <__isinff@plt>
   16328:	and	r0, r0, r6
   1632c:	add	r6, r7, #112	; 0x70
   16330:	mov	r1, #1
   16334:	b	16380 <UnityAssertFloatSpecial@@Base+0x1e4>
   16338:	ldrd	r2, [r7, #32]
   1633c:	movw	r1, #57292	; 0xdfcc
   16340:	eor	r0, r9, #1
   16344:	add	r6, r7, #160	; 0xa0
   16348:	movt	r1, #1
   1634c:	str	r1, [sp]
   16350:	mov	r1, #0
   16354:	adds	r2, r2, #1
   16358:	adc	r3, r3, #0
   1635c:	strd	r2, [r7, #32]
   16360:	b	16380 <UnityAssertFloatSpecial@@Base+0x1e4>
   16364:	ldrd	r0, [r7, #136]	; 0x88
   16368:	add	r6, r7, #152	; 0x98
   1636c:	adds	r0, r0, #1
   16370:	adc	r1, r1, #0
   16374:	strd	r0, [r7, #136]	; 0x88
   16378:	mov	r1, #3
   1637c:	mov	r0, #1
   16380:	ldrd	r2, [r6]
   16384:	adds	r2, r2, #1
   16388:	adc	r3, r3, #0
   1638c:	cmp	r0, r9
   16390:	strd	r2, [r6]
   16394:	bne	163dc <UnityAssertFloatSpecial@@Base+0x240>
   16398:	ldrd	r0, [r7, #176]	; 0xb0
   1639c:	adds	r0, r0, #1
   163a0:	adc	r1, r1, #0
   163a4:	strd	r0, [r7, #176]	; 0xb0
   163a8:	add	r0, r7, #232	; 0xe8
   163ac:	ldrd	r2, [r0]
   163b0:	adds	r2, r2, #1
   163b4:	adc	r3, r3, #0
   163b8:	strd	r2, [r0]
   163bc:	ldrd	r0, [r7, #240]	; 0xf0
   163c0:	adds	r0, r0, #1
   163c4:	adc	r1, r1, #0
   163c8:	strd	r0, [r7, #240]	; 0xf0
   163cc:	sub	sp, fp, #40	; 0x28
   163d0:	vpop	{d8}
   163d4:	add	sp, sp, #4
   163d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163dc:	mov	r6, r1
   163e0:	ldrd	r0, [r7, #168]	; 0xa8
   163e4:	adds	r0, r0, #1
   163e8:	adc	r1, r1, #0
   163ec:	strd	r0, [r7, #168]	; 0xa8
   163f0:	mov	r0, r5
   163f4:	bl	153b0 <UnityAssertBits@@Base+0x110>
   163f8:	movw	r0, #57052	; 0xdedc
   163fc:	movt	r0, #1
   16400:	bl	143c0 <UnityPrint@@Base>
   16404:	cmp	r9, #0
   16408:	beq	16414 <UnityAssertFloatSpecial@@Base+0x278>
   1640c:	add	r0, r7, #184	; 0xb8
   16410:	b	16434 <UnityAssertFloatSpecial@@Base+0x298>
   16414:	ldrd	r0, [r7, #192]	; 0xc0
   16418:	adds	r0, r0, #1
   1641c:	adc	r1, r1, #0
   16420:	strd	r0, [r7, #192]	; 0xc0
   16424:	movw	r0, #57244	; 0xdf9c
   16428:	movt	r0, #1
   1642c:	bl	143c0 <UnityPrint@@Base>
   16430:	add	r0, r7, #200	; 0xc8
   16434:	ldrd	r2, [r0]
   16438:	ldr	r5, [r4, r6, lsl #2]
   1643c:	adds	r2, r2, #1
   16440:	adc	r3, r3, #0
   16444:	strd	r2, [r0]
   16448:	mov	r0, r5
   1644c:	bl	143c0 <UnityPrint@@Base>
   16450:	movw	r0, #57063	; 0xdee7
   16454:	movt	r0, #1
   16458:	bl	143c0 <UnityPrint@@Base>
   1645c:	cmp	r9, #0
   16460:	beq	16488 <UnityAssertFloatSpecial@@Base+0x2ec>
   16464:	ldrd	r0, [r7, #208]	; 0xd0
   16468:	adds	r0, r0, #1
   1646c:	adc	r1, r1, #0
   16470:	strd	r0, [r7, #208]	; 0xd0
   16474:	movw	r0, #57244	; 0xdf9c
   16478:	movt	r0, #1
   1647c:	bl	143c0 <UnityPrint@@Base>
   16480:	add	r0, r7, #224	; 0xe0
   16484:	b	1648c <UnityAssertFloatSpecial@@Base+0x2f0>
   16488:	add	r0, r7, #216	; 0xd8
   1648c:	ldrd	r2, [r0]
   16490:	adds	r2, r2, #1
   16494:	adc	r3, r3, #0
   16498:	strd	r2, [r0]
   1649c:	mov	r0, r5
   164a0:	bl	143c0 <UnityPrint@@Base>
   164a4:	mov	r0, r8
   164a8:	bl	154a0 <UnityAssertBits@@Base+0x200>
   164ac:	mov	r0, #1
   164b0:	mov	r1, #1
   164b4:	str	r0, [sl, #32]
   164b8:	add	r0, sl, #40	; 0x28
   164bc:	bl	12638 <longjmp@plt>

000164c0 <UnityAssertNumbersWithin@@Base>:
   164c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164c4:	add	fp, sp, #28
   164c8:	sub	sp, sp, #4
   164cc:	mov	r6, r1
   164d0:	movw	r1, #2640	; 0xa50
   164d4:	mov	r9, r3
   164d8:	mov	r7, r0
   164dc:	movw	sl, #5952	; 0x1740
   164e0:	movt	r1, #3
   164e4:	movt	sl, #3
   164e8:	ldm	r1, {r0, r3}
   164ec:	adds	r0, r0, #1
   164f0:	adc	r3, r3, #0
   164f4:	stm	r1, {r0, r3}
   164f8:	ldr	r0, [sl, #32]
   164fc:	ldr	r3, [sl, #36]	; 0x24
   16500:	orrs	r0, r3, r0
   16504:	beq	16510 <UnityAssertNumbersWithin@@Base+0x50>
   16508:	add	r0, r1, #8
   1650c:	b	16630 <UnityAssertNumbersWithin@@Base+0x170>
   16510:	ldr	r0, [r1, #16]
   16514:	ldr	r8, [fp, #12]
   16518:	ldr	r3, [r1, #20]
   1651c:	mov	r4, r2
   16520:	adds	r0, r0, #1
   16524:	adc	r3, r3, #0
   16528:	tst	r8, #16
   1652c:	str	r0, [r1, #16]
   16530:	str	r3, [r1, #20]
   16534:	bne	1657c <UnityAssertNumbersWithin@@Base+0xbc>
   16538:	ldr	r0, [r1, #32]
   1653c:	ldr	r3, [r1, #36]	; 0x24
   16540:	adds	r0, r0, #1
   16544:	adc	r3, r3, #0
   16548:	cmp	r4, r6
   1654c:	str	r0, [r1, #32]
   16550:	str	r3, [r1, #36]	; 0x24
   16554:	bls	165c0 <UnityAssertNumbersWithin@@Base+0x100>
   16558:	ldr	r0, [r1, #72]	; 0x48
   1655c:	ldr	r3, [r1, #76]	; 0x4c
   16560:	add	r2, r1, #88	; 0x58
   16564:	adds	r0, r0, #1
   16568:	adc	r3, r3, #0
   1656c:	str	r0, [r1, #72]	; 0x48
   16570:	sub	r0, r4, r6
   16574:	str	r3, [r1, #76]	; 0x4c
   16578:	b	16604 <UnityAssertNumbersWithin@@Base+0x144>
   1657c:	ldr	r0, [r1, #24]
   16580:	ldr	r3, [r1, #28]
   16584:	adds	r0, r0, #1
   16588:	adc	r3, r3, #0
   1658c:	cmp	r4, r6
   16590:	str	r0, [r1, #24]
   16594:	str	r3, [r1, #28]
   16598:	ble	165e4 <UnityAssertNumbersWithin@@Base+0x124>
   1659c:	ldr	r0, [r1, #40]	; 0x28
   165a0:	ldr	r3, [r1, #44]	; 0x2c
   165a4:	add	r2, r1, #56	; 0x38
   165a8:	adds	r0, r0, #1
   165ac:	adc	r3, r3, #0
   165b0:	str	r0, [r1, #40]	; 0x28
   165b4:	sub	r0, r4, r6
   165b8:	str	r3, [r1, #44]	; 0x2c
   165bc:	b	16604 <UnityAssertNumbersWithin@@Base+0x144>
   165c0:	ldr	r0, [r1, #80]	; 0x50
   165c4:	ldr	r3, [r1, #84]	; 0x54
   165c8:	add	r2, r1, #96	; 0x60
   165cc:	adds	r0, r0, #1
   165d0:	str	r0, [r1, #80]	; 0x50
   165d4:	adc	r3, r3, #0
   165d8:	sub	r0, r6, r4
   165dc:	str	r3, [r1, #84]	; 0x54
   165e0:	b	16604 <UnityAssertNumbersWithin@@Base+0x144>
   165e4:	ldr	r0, [r1, #48]	; 0x30
   165e8:	ldr	r3, [r1, #52]	; 0x34
   165ec:	add	r2, r1, #64	; 0x40
   165f0:	adds	r0, r0, #1
   165f4:	adc	r3, r3, #0
   165f8:	str	r0, [r1, #48]	; 0x30
   165fc:	sub	r0, r6, r4
   16600:	str	r3, [r1, #52]	; 0x34
   16604:	cmp	r0, r7
   16608:	mov	r3, #0
   1660c:	movwhi	r3, #1
   16610:	str	r3, [sl, #32]
   16614:	ldm	r2, {r3, r5}
   16618:	adds	r3, r3, #1
   1661c:	adc	r5, r5, #0
   16620:	cmp	r0, r7
   16624:	stm	r2, {r3, r5}
   16628:	bhi	16660 <UnityAssertNumbersWithin@@Base+0x1a0>
   1662c:	add	r0, r1, #112	; 0x70
   16630:	ldrd	r2, [r0]
   16634:	adds	r2, r2, #1
   16638:	adc	r3, r3, #0
   1663c:	strd	r2, [r0]
   16640:	ldr	r0, [r1, #120]	; 0x78
   16644:	ldr	r3, [r1, #124]	; 0x7c
   16648:	adds	r0, r0, #1
   1664c:	adc	r3, r3, #0
   16650:	str	r0, [r1, #120]	; 0x78
   16654:	str	r3, [r1, #124]	; 0x7c
   16658:	sub	sp, fp, #28
   1665c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16660:	ldrd	r2, [r1, #104]	; 0x68
   16664:	ldr	r0, [fp, #8]
   16668:	adds	r2, r2, #1
   1666c:	adc	r3, r3, #0
   16670:	strd	r2, [r1, #104]	; 0x68
   16674:	bl	153b0 <UnityAssertBits@@Base+0x110>
   16678:	movw	r0, #57109	; 0xdf15
   1667c:	movt	r0, #1
   16680:	bl	143c0 <UnityPrint@@Base>
   16684:	mov	r0, r7
   16688:	mov	r1, r8
   1668c:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   16690:	movw	r0, #57052	; 0xdedc
   16694:	movt	r0, #1
   16698:	bl	143c0 <UnityPrint@@Base>
   1669c:	mov	r0, r6
   166a0:	mov	r1, r8
   166a4:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   166a8:	movw	r0, #57063	; 0xdee7
   166ac:	movt	r0, #1
   166b0:	bl	143c0 <UnityPrint@@Base>
   166b4:	mov	r0, r4
   166b8:	mov	r1, r8
   166bc:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   166c0:	mov	r0, r9
   166c4:	bl	154a0 <UnityAssertBits@@Base+0x200>
   166c8:	mov	r0, #1
   166cc:	mov	r1, #1
   166d0:	str	r0, [sl, #32]
   166d4:	add	r0, sl, #40	; 0x28
   166d8:	bl	12638 <longjmp@plt>

000166dc <UnityAssertEqualString@@Base>:
   166dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166e0:	add	fp, sp, #28
   166e4:	sub	sp, sp, #20
   166e8:	movw	lr, #2768	; 0xad0
   166ec:	mov	r6, r2
   166f0:	mov	sl, r1
   166f4:	movw	r7, #5952	; 0x1740
   166f8:	movt	lr, #3
   166fc:	movt	r7, #3
   16700:	ldr	r2, [lr]
   16704:	ldr	r1, [lr, #4]
   16708:	adds	r2, r2, #1
   1670c:	adc	r1, r1, #0
   16710:	str	r2, [lr]
   16714:	ldr	r2, [r7, #32]
   16718:	str	r1, [lr, #4]
   1671c:	ldr	r1, [r7, #36]	; 0x24
   16720:	orrs	r1, r1, r2
   16724:	beq	16734 <UnityAssertEqualString@@Base+0x58>
   16728:	add	r1, lr, #24
   1672c:	add	r2, lr, #8
   16730:	b	16864 <UnityAssertEqualString@@Base+0x188>
   16734:	ldrd	r4, [lr, #16]
   16738:	mov	r8, r0
   1673c:	adds	r4, r4, #1
   16740:	adc	r5, r5, #0
   16744:	cmp	r0, #0
   16748:	cmpne	sl, #0
   1674c:	strd	r4, [lr, #16]
   16750:	bne	16774 <UnityAssertEqualString@@Base+0x98>
   16754:	ldrd	r0, [lr, #40]	; 0x28
   16758:	adds	r0, r0, #1
   1675c:	adc	r1, r1, #0
   16760:	cmp	r8, sl
   16764:	strd	r0, [lr, #40]	; 0x28
   16768:	bne	1689c <UnityAssertEqualString@@Base+0x1c0>
   1676c:	add	r9, lr, #128	; 0x80
   16770:	b	16844 <UnityAssertEqualString@@Base+0x168>
   16774:	ldrd	r4, [lr, #32]
   16778:	add	r0, lr, #104	; 0x68
   1677c:	str	r6, [sp, #16]
   16780:	add	r7, lr, #72	; 0x48
   16784:	add	r9, lr, #80	; 0x50
   16788:	add	ip, lr, #112	; 0x70
   1678c:	mov	r6, r8
   16790:	str	sl, [sp, #12]
   16794:	str	r0, [sp, #8]
   16798:	add	r0, lr, #88	; 0x58
   1679c:	str	r0, [sp, #4]
   167a0:	adds	r4, r4, #1
   167a4:	adc	r5, r5, #0
   167a8:	strd	r4, [lr, #32]
   167ac:	add	r5, lr, #48	; 0x30
   167b0:	add	r4, lr, #56	; 0x38
   167b4:	ldrd	r0, [r5]
   167b8:	adds	r0, r0, #1
   167bc:	adc	r1, r1, #0
   167c0:	strd	r0, [r5]
   167c4:	mov	r5, r4
   167c8:	ldrb	r0, [r6]
   167cc:	cmp	r0, #0
   167d0:	bne	167f4 <UnityAssertEqualString@@Base+0x118>
   167d4:	ldrd	r0, [lr, #64]	; 0x40
   167d8:	mov	r5, r7
   167dc:	adds	r0, r0, #1
   167e0:	adc	r1, r1, #0
   167e4:	strd	r0, [lr, #64]	; 0x40
   167e8:	ldrb	r0, [sl]
   167ec:	cmp	r0, #0
   167f0:	beq	16834 <UnityAssertEqualString@@Base+0x158>
   167f4:	ldrd	r0, [r5]
   167f8:	adds	r0, r0, #1
   167fc:	adc	r1, r1, #0
   16800:	strd	r0, [r5]
   16804:	ldrb	r0, [sl]
   16808:	ldrb	r1, [r6]
   1680c:	cmp	r1, r0
   16810:	bne	168b4 <UnityAssertEqualString@@Base+0x1d8>
   16814:	ldrd	r0, [lr, #96]	; 0x60
   16818:	add	r6, r6, #1
   1681c:	add	sl, sl, #1
   16820:	mov	r5, ip
   16824:	adds	r0, r0, #1
   16828:	adc	r1, r1, #0
   1682c:	strd	r0, [lr, #96]	; 0x60
   16830:	b	167b4 <UnityAssertEqualString@@Base+0xd8>
   16834:	ldr	r6, [sp, #16]
   16838:	ldr	sl, [sp, #12]
   1683c:	movw	r7, #5952	; 0x1740
   16840:	movt	r7, #3
   16844:	ldrd	r0, [r9]
   16848:	adds	r0, r0, #1
   1684c:	adc	r1, r1, #0
   16850:	cmp	r2, #0
   16854:	strd	r0, [r9]
   16858:	bne	168f4 <UnityAssertEqualString@@Base+0x218>
   1685c:	add	r1, lr, #160	; 0xa0
   16860:	add	r2, lr, #152	; 0x98
   16864:	ldm	r2, {r0, r3}
   16868:	adds	r0, r0, #1
   1686c:	adc	r3, r3, #0
   16870:	stm	r2, {r0, r3}
   16874:	ldm	r1, {r0, r3}
   16878:	adds	r0, r0, #1
   1687c:	adc	r3, r3, #0
   16880:	stm	r1, {r0, r3}
   16884:	ldrd	r0, [lr, #168]	; 0xa8
   16888:	adds	r0, r0, #1
   1688c:	adc	r1, r1, #0
   16890:	strd	r0, [lr, #168]	; 0xa8
   16894:	sub	sp, fp, #28
   16898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1689c:	add	r0, lr, #136	; 0x88
   168a0:	str	sl, [sp, #12]
   168a4:	str	r6, [sp, #16]
   168a8:	str	r0, [sp, #8]
   168ac:	add	r0, lr, #120	; 0x78
   168b0:	str	r0, [sp, #4]
   168b4:	ldr	r2, [sp, #4]
   168b8:	movw	r7, #5952	; 0x1740
   168bc:	ldr	r6, [sp, #16]
   168c0:	ldr	sl, [sp, #12]
   168c4:	movt	r7, #3
   168c8:	ldrd	r0, [r2]
   168cc:	adds	r0, r0, #1
   168d0:	adc	r1, r1, #0
   168d4:	strd	r0, [r2]
   168d8:	ldr	r2, [sp, #8]
   168dc:	mov	r0, #1
   168e0:	str	r0, [r7, #32]
   168e4:	ldrd	r0, [r2]
   168e8:	adds	r0, r0, #1
   168ec:	adc	r1, r1, #0
   168f0:	strd	r0, [r2]
   168f4:	ldrd	r0, [lr, #144]	; 0x90
   168f8:	adds	r0, r0, #1
   168fc:	adc	r1, r1, #0
   16900:	strd	r0, [lr, #144]	; 0x90
   16904:	mov	r0, r3
   16908:	bl	153b0 <UnityAssertBits@@Base+0x110>
   1690c:	mov	r0, r8
   16910:	mov	r1, sl
   16914:	bl	16940 <UnityAssertEqualString@@Base+0x264>
   16918:	mov	r0, r6
   1691c:	bl	154a0 <UnityAssertBits@@Base+0x200>
   16920:	mov	r0, #1
   16924:	mov	r1, #1
   16928:	str	r0, [r7, #32]
   1692c:	add	r0, r7, #40	; 0x28
   16930:	bl	12638 <longjmp@plt>
   16934:	nop	{0}
   16938:	nop	{0}
   1693c:	nop	{0}
   16940:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16944:	add	fp, sp, #24
   16948:	vpush	{d8-d9}
   1694c:	movw	r6, #2944	; 0xb80
   16950:	mov	r4, r1
   16954:	mov	r5, r0
   16958:	movt	r6, #3
   1695c:	ldrd	r0, [r6]
   16960:	adds	r0, r0, #1
   16964:	adc	r1, r1, #0
   16968:	strd	r0, [r6]
   1696c:	movw	r0, #57052	; 0xdedc
   16970:	movt	r0, #1
   16974:	bl	143c0 <UnityPrint@@Base>
   16978:	movw	r7, #3936	; 0xf60
   1697c:	movw	r8, #228	; 0xe4
   16980:	cmp	r5, #0
   16984:	movt	r7, #3
   16988:	movt	r8, #3
   1698c:	beq	169e8 <UnityAssertEqualString@@Base+0x30c>
   16990:	add	r0, pc, #312	; 0x138
   16994:	vld1.64	{d16-d17}, [r7 :128]
   16998:	vld1.64	{d8-d9}, [r0 :128]
   1699c:	ldrd	r0, [r6, #8]
   169a0:	adds	r0, r0, #1
   169a4:	adc	r1, r1, #0
   169a8:	vadd.i64	q8, q8, q4
   169ac:	strd	r0, [r6, #8]
   169b0:	ldr	r1, [r8]
   169b4:	mov	r0, #39	; 0x27
   169b8:	vst1.64	{d16-d17}, [r7 :128]
   169bc:	bl	127e8 <putc@plt>
   169c0:	mov	r0, r5
   169c4:	bl	143c0 <UnityPrint@@Base>
   169c8:	vld1.64	{d16-d17}, [r7 :128]
   169cc:	ldr	r1, [r8]
   169d0:	mov	r0, #39	; 0x27
   169d4:	vadd.i64	q8, q8, q4
   169d8:	vst1.64	{d16-d17}, [r7 :128]
   169dc:	bl	127e8 <putc@plt>
   169e0:	add	r0, r6, #24
   169e4:	b	16a08 <UnityAssertEqualString@@Base+0x32c>
   169e8:	ldrd	r0, [r6, #16]
   169ec:	adds	r0, r0, #1
   169f0:	adc	r1, r1, #0
   169f4:	strd	r0, [r6, #16]
   169f8:	movw	r0, #57044	; 0xded4
   169fc:	movt	r0, #1
   16a00:	bl	143c0 <UnityPrint@@Base>
   16a04:	add	r0, r6, #32
   16a08:	ldrd	r2, [r0]
   16a0c:	adds	r2, r2, #1
   16a10:	adc	r3, r3, #0
   16a14:	strd	r2, [r0]
   16a18:	movw	r0, #57063	; 0xdee7
   16a1c:	movt	r0, #1
   16a20:	bl	143c0 <UnityPrint@@Base>
   16a24:	cmp	r4, #0
   16a28:	beq	16a84 <UnityAssertEqualString@@Base+0x3a8>
   16a2c:	add	r0, pc, #156	; 0x9c
   16a30:	vld1.64	{d16-d17}, [r7 :128]
   16a34:	vld1.64	{d8-d9}, [r0 :128]
   16a38:	ldrd	r0, [r6, #40]	; 0x28
   16a3c:	adds	r0, r0, #1
   16a40:	adc	r1, r1, #0
   16a44:	vadd.i64	q8, q8, q4
   16a48:	strd	r0, [r6, #40]	; 0x28
   16a4c:	ldr	r1, [r8]
   16a50:	mov	r0, #39	; 0x27
   16a54:	vst1.64	{d16-d17}, [r7 :128]
   16a58:	bl	127e8 <putc@plt>
   16a5c:	mov	r0, r4
   16a60:	bl	143c0 <UnityPrint@@Base>
   16a64:	vld1.64	{d16-d17}, [r7 :128]
   16a68:	ldr	r1, [r8]
   16a6c:	mov	r0, #39	; 0x27
   16a70:	vadd.i64	q8, q8, q4
   16a74:	vst1.64	{d16-d17}, [r7 :128]
   16a78:	bl	127e8 <putc@plt>
   16a7c:	add	r0, r6, #56	; 0x38
   16a80:	b	16aa4 <UnityAssertEqualString@@Base+0x3c8>
   16a84:	ldrd	r0, [r6, #48]	; 0x30
   16a88:	adds	r0, r0, #1
   16a8c:	adc	r1, r1, #0
   16a90:	strd	r0, [r6, #48]	; 0x30
   16a94:	movw	r0, #57044	; 0xded4
   16a98:	movt	r0, #1
   16a9c:	bl	143c0 <UnityPrint@@Base>
   16aa0:	add	r0, r6, #64	; 0x40
   16aa4:	ldrd	r2, [r0]
   16aa8:	adds	r2, r2, #1
   16aac:	adc	r3, r3, #0
   16ab0:	strd	r2, [r0]
   16ab4:	ldrd	r0, [r6, #72]	; 0x48
   16ab8:	adds	r0, r0, #1
   16abc:	adc	r1, r1, #0
   16ac0:	strd	r0, [r6, #72]	; 0x48
   16ac4:	vpop	{d8-d9}
   16ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16acc:	nop	{0}
   16ad0:	andeq	r0, r0, r1
   16ad4:	andeq	r0, r0, r0
   16ad8:	andeq	r0, r0, r1
   16adc:	andeq	r0, r0, r0

00016ae0 <UnityAssertEqualStringLen@@Base>:
   16ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ae4:	add	fp, sp, #28
   16ae8:	sub	sp, sp, #28
   16aec:	mov	r4, r1
   16af0:	movw	r1, #3024	; 0xbd0
   16af4:	mov	r7, r3
   16af8:	mov	r8, r2
   16afc:	movw	r6, #5952	; 0x1740
   16b00:	movt	r1, #3
   16b04:	movt	r6, #3
   16b08:	ldrd	r2, [r1]
   16b0c:	ldr	sl, [r6, #32]
   16b10:	adds	r2, r2, #1
   16b14:	adc	r3, r3, #0
   16b18:	strd	r2, [r1]
   16b1c:	ldr	r3, [r6, #36]	; 0x24
   16b20:	orrs	r2, r3, sl
   16b24:	beq	16b34 <UnityAssertEqualStringLen@@Base+0x54>
   16b28:	add	r0, r1, #24
   16b2c:	add	r2, r1, #8
   16b30:	b	16ca8 <UnityAssertEqualStringLen@@Base+0x1c8>
   16b34:	ldrd	r2, [r1, #16]
   16b38:	str	r0, [sp, #12]
   16b3c:	adds	r2, r2, #1
   16b40:	adc	r3, r3, #0
   16b44:	cmp	r0, #0
   16b48:	cmpne	r4, #0
   16b4c:	strd	r2, [r1, #16]
   16b50:	bne	16b74 <UnityAssertEqualStringLen@@Base+0x94>
   16b54:	ldrd	r2, [r1, #40]	; 0x28
   16b58:	adds	r2, r2, #1
   16b5c:	adc	r3, r3, #0
   16b60:	cmp	r0, r4
   16b64:	strd	r2, [r1, #40]	; 0x28
   16b68:	bne	16ce8 <UnityAssertEqualStringLen@@Base+0x208>
   16b6c:	add	r3, r1, #144	; 0x90
   16b70:	b	16c88 <UnityAssertEqualStringLen@@Base+0x1a8>
   16b74:	ldrd	r2, [r1, #32]
   16b78:	str	r7, [sp, #24]
   16b7c:	add	r7, r1, #96	; 0x60
   16b80:	add	ip, r1, #48	; 0x30
   16b84:	add	r9, r1, #72	; 0x48
   16b88:	add	lr, r1, #128	; 0x80
   16b8c:	mov	r6, r4
   16b90:	str	r4, [sp, #16]
   16b94:	str	r8, [sp, #20]
   16b98:	str	r7, [sp, #8]
   16b9c:	add	r7, r1, #120	; 0x78
   16ba0:	str	r7, [sp, #4]
   16ba4:	add	r7, r1, #104	; 0x68
   16ba8:	str	r7, [sp]
   16bac:	mov	r7, r0
   16bb0:	adds	r2, r2, #1
   16bb4:	adc	r3, r3, #0
   16bb8:	strd	r2, [r1, #32]
   16bbc:	add	r2, r1, #56	; 0x38
   16bc0:	add	r3, r1, #80	; 0x50
   16bc4:	ldrd	r4, [ip]
   16bc8:	adds	r4, r4, #1
   16bcc:	adc	r5, r5, #0
   16bd0:	strd	r4, [ip]
   16bd4:	mov	r4, r2
   16bd8:	ldrb	r5, [r7]
   16bdc:	cmp	r5, #0
   16be0:	bne	16c04 <UnityAssertEqualStringLen@@Base+0x124>
   16be4:	ldrd	r4, [r1, #64]	; 0x40
   16be8:	adds	r4, r4, #1
   16bec:	adc	r5, r5, #0
   16bf0:	strd	r4, [r1, #64]	; 0x40
   16bf4:	mov	r4, r9
   16bf8:	ldrb	r5, [r6]
   16bfc:	cmp	r5, #0
   16c00:	beq	16c74 <UnityAssertEqualStringLen@@Base+0x194>
   16c04:	ldm	r4, {r0, r5}
   16c08:	adds	r0, r0, #1
   16c0c:	adc	r5, r5, #0
   16c10:	cmp	r8, #0
   16c14:	stm	r4, {r0, r5}
   16c18:	beq	16c70 <UnityAssertEqualStringLen@@Base+0x190>
   16c1c:	ldr	r0, [r1, #88]	; 0x58
   16c20:	ldr	r5, [r1, #92]	; 0x5c
   16c24:	adds	r0, r0, #1
   16c28:	adc	r5, r5, #0
   16c2c:	str	r0, [r1, #88]	; 0x58
   16c30:	str	r5, [r1, #92]	; 0x5c
   16c34:	ldrb	r0, [r6]
   16c38:	ldrb	r5, [r7]
   16c3c:	cmp	r5, r0
   16c40:	bne	16d04 <UnityAssertEqualStringLen@@Base+0x224>
   16c44:	ldr	r0, [r1, #112]	; 0x70
   16c48:	ldr	r5, [r1, #116]	; 0x74
   16c4c:	add	r7, r7, #1
   16c50:	add	r6, r6, #1
   16c54:	sub	r8, r8, #1
   16c58:	mov	ip, lr
   16c5c:	adds	r0, r0, #1
   16c60:	adc	r5, r5, #0
   16c64:	str	r0, [r1, #112]	; 0x70
   16c68:	str	r5, [r1, #116]	; 0x74
   16c6c:	b	16bc4 <UnityAssertEqualStringLen@@Base+0xe4>
   16c70:	ldr	r3, [sp, #8]
   16c74:	ldr	r7, [sp, #24]
   16c78:	ldr	r8, [sp, #20]
   16c7c:	ldr	r4, [sp, #16]
   16c80:	movw	r6, #5952	; 0x1740
   16c84:	movt	r6, #3
   16c88:	ldm	r3, {r0, r5}
   16c8c:	adds	r0, r0, #1
   16c90:	adc	r5, r5, #0
   16c94:	cmp	sl, #0
   16c98:	stm	r3, {r0, r5}
   16c9c:	bne	16d48 <UnityAssertEqualStringLen@@Base+0x268>
   16ca0:	add	r0, r1, #176	; 0xb0
   16ca4:	add	r2, r1, #168	; 0xa8
   16ca8:	ldrd	r4, [r2]
   16cac:	adds	r4, r4, #1
   16cb0:	adc	r5, r5, #0
   16cb4:	strd	r4, [r2]
   16cb8:	ldrd	r2, [r0]
   16cbc:	adds	r2, r2, #1
   16cc0:	adc	r3, r3, #0
   16cc4:	strd	r2, [r0]
   16cc8:	ldr	r0, [r1, #184]	; 0xb8
   16ccc:	ldr	r3, [r1, #188]	; 0xbc
   16cd0:	adds	r0, r0, #1
   16cd4:	adc	r3, r3, #0
   16cd8:	str	r0, [r1, #184]	; 0xb8
   16cdc:	str	r3, [r1, #188]	; 0xbc
   16ce0:	sub	sp, fp, #28
   16ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ce8:	add	r0, r1, #152	; 0x98
   16cec:	str	r4, [sp, #16]
   16cf0:	str	r8, [sp, #20]
   16cf4:	str	r7, [sp, #24]
   16cf8:	str	r0, [sp, #4]
   16cfc:	add	r0, r1, #136	; 0x88
   16d00:	str	r0, [sp]
   16d04:	ldr	r2, [sp]
   16d08:	movw	r6, #5952	; 0x1740
   16d0c:	ldr	r7, [sp, #24]
   16d10:	ldr	r8, [sp, #20]
   16d14:	ldr	r4, [sp, #16]
   16d18:	movt	r6, #3
   16d1c:	ldm	r2, {r0, r3}
   16d20:	adds	r0, r0, #1
   16d24:	adc	r3, r3, #0
   16d28:	stm	r2, {r0, r3}
   16d2c:	ldr	r2, [sp, #4]
   16d30:	mov	r0, #1
   16d34:	str	r0, [r6, #32]
   16d38:	ldm	r2, {r0, r3}
   16d3c:	adds	r0, r0, #1
   16d40:	adc	r3, r3, #0
   16d44:	stm	r2, {r0, r3}
   16d48:	ldrd	r2, [r1, #160]	; 0xa0
   16d4c:	ldr	r0, [fp, #8]
   16d50:	adds	r2, r2, #1
   16d54:	adc	r3, r3, #0
   16d58:	strd	r2, [r1, #160]	; 0xa0
   16d5c:	bl	153b0 <UnityAssertBits@@Base+0x110>
   16d60:	ldr	r0, [sp, #12]
   16d64:	mov	r1, r4
   16d68:	mov	r2, r8
   16d6c:	bl	16d90 <UnityAssertEqualStringLen@@Base+0x2b0>
   16d70:	mov	r0, r7
   16d74:	bl	154a0 <UnityAssertBits@@Base+0x200>
   16d78:	mov	r0, #1
   16d7c:	mov	r1, #1
   16d80:	str	r0, [r6, #32]
   16d84:	add	r0, r6, #40	; 0x28
   16d88:	bl	12638 <longjmp@plt>
   16d8c:	nop	{0}
   16d90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d94:	add	fp, sp, #24
   16d98:	vpush	{d8-d9}
   16d9c:	movw	r7, #3216	; 0xc90
   16da0:	mov	r5, r1
   16da4:	mov	r6, r0
   16da8:	mov	r8, r2
   16dac:	movt	r7, #3
   16db0:	ldrd	r0, [r7]
   16db4:	adds	r0, r0, #1
   16db8:	adc	r1, r1, #0
   16dbc:	strd	r0, [r7]
   16dc0:	movw	r0, #57052	; 0xdedc
   16dc4:	movt	r0, #1
   16dc8:	bl	143c0 <UnityPrint@@Base>
   16dcc:	movw	r4, #3936	; 0xf60
   16dd0:	movw	r9, #228	; 0xe4
   16dd4:	cmp	r6, #0
   16dd8:	movt	r4, #3
   16ddc:	movt	r9, #3
   16de0:	beq	16e40 <UnityAssertEqualStringLen@@Base+0x360>
   16de4:	add	r0, pc, #324	; 0x144
   16de8:	vld1.64	{d16-d17}, [r4 :128]
   16dec:	vld1.64	{d8-d9}, [r0 :128]
   16df0:	ldrd	r0, [r7, #8]
   16df4:	adds	r0, r0, #1
   16df8:	adc	r1, r1, #0
   16dfc:	vadd.i64	q8, q8, q4
   16e00:	strd	r0, [r7, #8]
   16e04:	ldr	r1, [r9]
   16e08:	mov	r0, #39	; 0x27
   16e0c:	vst1.64	{d16-d17}, [r4 :128]
   16e10:	bl	127e8 <putc@plt>
   16e14:	mov	r0, r6
   16e18:	mov	r1, r8
   16e1c:	bl	147c0 <UnityPrintLen@@Base>
   16e20:	vld1.64	{d16-d17}, [r4 :128]
   16e24:	ldr	r1, [r9]
   16e28:	mov	r0, #39	; 0x27
   16e2c:	vadd.i64	q8, q8, q4
   16e30:	vst1.64	{d16-d17}, [r4 :128]
   16e34:	bl	127e8 <putc@plt>
   16e38:	add	r0, r7, #24
   16e3c:	b	16e60 <UnityAssertEqualStringLen@@Base+0x380>
   16e40:	ldrd	r0, [r7, #16]
   16e44:	adds	r0, r0, #1
   16e48:	adc	r1, r1, #0
   16e4c:	strd	r0, [r7, #16]
   16e50:	movw	r0, #57044	; 0xded4
   16e54:	movt	r0, #1
   16e58:	bl	143c0 <UnityPrint@@Base>
   16e5c:	add	r0, r7, #32
   16e60:	ldrd	r2, [r0]
   16e64:	adds	r2, r2, #1
   16e68:	adc	r3, r3, #0
   16e6c:	strd	r2, [r0]
   16e70:	movw	r0, #57063	; 0xdee7
   16e74:	movt	r0, #1
   16e78:	bl	143c0 <UnityPrint@@Base>
   16e7c:	cmp	r5, #0
   16e80:	beq	16ee0 <UnityAssertEqualStringLen@@Base+0x400>
   16e84:	add	r0, pc, #164	; 0xa4
   16e88:	vld1.64	{d16-d17}, [r4 :128]
   16e8c:	vld1.64	{d8-d9}, [r0 :128]
   16e90:	ldrd	r0, [r7, #40]	; 0x28
   16e94:	adds	r0, r0, #1
   16e98:	adc	r1, r1, #0
   16e9c:	vadd.i64	q8, q8, q4
   16ea0:	strd	r0, [r7, #40]	; 0x28
   16ea4:	ldr	r1, [r9]
   16ea8:	mov	r0, #39	; 0x27
   16eac:	vst1.64	{d16-d17}, [r4 :128]
   16eb0:	bl	127e8 <putc@plt>
   16eb4:	mov	r0, r5
   16eb8:	mov	r1, r8
   16ebc:	bl	147c0 <UnityPrintLen@@Base>
   16ec0:	vld1.64	{d16-d17}, [r4 :128]
   16ec4:	ldr	r1, [r9]
   16ec8:	mov	r0, #39	; 0x27
   16ecc:	vadd.i64	q8, q8, q4
   16ed0:	vst1.64	{d16-d17}, [r4 :128]
   16ed4:	bl	127e8 <putc@plt>
   16ed8:	add	r0, r7, #56	; 0x38
   16edc:	b	16f00 <UnityAssertEqualStringLen@@Base+0x420>
   16ee0:	ldrd	r0, [r7, #48]	; 0x30
   16ee4:	adds	r0, r0, #1
   16ee8:	adc	r1, r1, #0
   16eec:	strd	r0, [r7, #48]	; 0x30
   16ef0:	movw	r0, #57044	; 0xded4
   16ef4:	movt	r0, #1
   16ef8:	bl	143c0 <UnityPrint@@Base>
   16efc:	add	r0, r7, #64	; 0x40
   16f00:	ldrd	r2, [r0]
   16f04:	adds	r2, r2, #1
   16f08:	adc	r3, r3, #0
   16f0c:	strd	r2, [r0]
   16f10:	ldrd	r0, [r7, #72]	; 0x48
   16f14:	adds	r0, r0, #1
   16f18:	adc	r1, r1, #0
   16f1c:	strd	r0, [r7, #72]	; 0x48
   16f20:	vpop	{d8-d9}
   16f24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16f28:	nop	{0}
   16f2c:	nop	{0}
   16f30:	andeq	r0, r0, r1
   16f34:	andeq	r0, r0, r0
   16f38:	andeq	r0, r0, r1
   16f3c:	andeq	r0, r0, r0

00016f40 <UnityAssertEqualStringArray@@Base>:
   16f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f44:	add	fp, sp, #28
   16f48:	sub	sp, sp, #20
   16f4c:	movw	r8, #3296	; 0xce0
   16f50:	mov	r6, r1
   16f54:	mov	r5, r0
   16f58:	movw	r9, #5952	; 0x1740
   16f5c:	movt	r8, #3
   16f60:	movt	r9, #3
   16f64:	ldrd	r0, [r8]
   16f68:	adds	r0, r0, #1
   16f6c:	adc	r1, r1, #0
   16f70:	strd	r0, [r8]
   16f74:	ldrd	r0, [r9, #32]
   16f78:	orrs	r0, r1, r0
   16f7c:	beq	16f98 <UnityAssertEqualStringArray@@Base+0x58>
   16f80:	ldrd	r0, [r8, #8]
   16f84:	adds	r0, r0, #1
   16f88:	adc	r1, r1, #0
   16f8c:	strd	r0, [r8, #8]
   16f90:	add	r0, r8, #24
   16f94:	b	171b8 <UnityAssertEqualStringArray@@Base+0x278>
   16f98:	ldrd	r0, [r8, #16]
   16f9c:	mov	r7, r2
   16fa0:	ldr	r2, [fp, #8]
   16fa4:	mov	r4, r3
   16fa8:	adds	r0, r0, #1
   16fac:	adc	r1, r1, #0
   16fb0:	cmp	r7, #0
   16fb4:	strd	r0, [r8, #16]
   16fb8:	beq	172c0 <UnityAssertEqualStringArray@@Base+0x380>
   16fbc:	ldrd	r0, [r8, #40]	; 0x28
   16fc0:	mov	r3, r4
   16fc4:	adds	r0, r0, #1
   16fc8:	adc	r1, r1, #0
   16fcc:	strd	r0, [r8, #40]	; 0x28
   16fd0:	mov	r0, r5
   16fd4:	mov	r1, r6
   16fd8:	bl	15be0 <UnityAssertEqualIntArray@@Base+0x500>
   16fdc:	cmp	r0, #1
   16fe0:	bne	16ffc <UnityAssertEqualStringArray@@Base+0xbc>
   16fe4:	ldrd	r0, [r8, #48]	; 0x30
   16fe8:	adds	r0, r0, #1
   16fec:	adc	r1, r1, #0
   16ff0:	strd	r0, [r8, #48]	; 0x30
   16ff4:	add	r0, r8, #64	; 0x40
   16ff8:	b	171b8 <UnityAssertEqualStringArray@@Base+0x278>
   16ffc:	add	r0, r8, #192	; 0xc0
   17000:	str	r4, [sp]
   17004:	add	r3, r8, #56	; 0x38
   17008:	mov	r4, #0
   1700c:	add	r2, r8, #80	; 0x50
   17010:	add	sl, r8, #240	; 0xf0
   17014:	add	ip, r8, #96	; 0x60
   17018:	add	lr, r8, #112	; 0x70
   1701c:	str	r0, [sp, #8]
   17020:	add	r0, r8, #176	; 0xb0
   17024:	str	r0, [sp, #4]
   17028:	add	r0, r8, #184	; 0xb8
   1702c:	str	r0, [sp, #16]
   17030:	add	r0, r8, #104	; 0x68
   17034:	str	r0, [sp, #12]
   17038:	ldm	r3, {r0, r9}
   1703c:	adds	r0, r0, #1
   17040:	adc	r9, r9, #0
   17044:	stm	r3, {r0, r9}
   17048:	ldr	r0, [r5, r4, lsl #2]
   1704c:	cmp	r0, #0
   17050:	mov	r0, r2
   17054:	beq	17134 <UnityAssertEqualStringArray@@Base+0x1f4>
   17058:	ldr	r0, [r8, #72]	; 0x48
   1705c:	ldr	r3, [r8, #76]	; 0x4c
   17060:	adds	r0, r0, #1
   17064:	adc	r3, r3, #0
   17068:	str	r0, [r8, #72]	; 0x48
   1706c:	str	r3, [r8, #76]	; 0x4c
   17070:	ldr	r0, [r6, r4, lsl #2]
   17074:	cmp	r0, #0
   17078:	mov	r0, ip
   1707c:	beq	17134 <UnityAssertEqualStringArray@@Base+0x1f4>
   17080:	ldr	r0, [r8, #88]	; 0x58
   17084:	ldr	r3, [r8, #92]	; 0x5c
   17088:	mov	r9, #0
   1708c:	adds	r0, r0, #1
   17090:	str	r0, [r8, #88]	; 0x58
   17094:	ldr	r0, [sp, #12]
   17098:	adc	r3, r3, #0
   1709c:	str	r3, [r8, #92]	; 0x5c
   170a0:	ldr	r3, [r0]
   170a4:	ldr	r1, [r0, #4]
   170a8:	adds	r3, r3, #1
   170ac:	adc	r1, r1, #0
   170b0:	str	r3, [r0]
   170b4:	str	r1, [r0, #4]
   170b8:	ldr	r0, [r5, r4, lsl #2]
   170bc:	ldrb	r0, [r0, r9]
   170c0:	cmp	r0, #0
   170c4:	mov	r0, lr
   170c8:	bne	170f0 <UnityAssertEqualStringArray@@Base+0x1b0>
   170cc:	ldrd	r0, [r8, #120]	; 0x78
   170d0:	adds	r0, r0, #1
   170d4:	adc	r1, r1, #0
   170d8:	strd	r0, [r8, #120]	; 0x78
   170dc:	ldr	r0, [r6, r4, lsl #2]
   170e0:	ldrb	r0, [r0, r9]
   170e4:	cmp	r0, #0
   170e8:	beq	1715c <UnityAssertEqualStringArray@@Base+0x21c>
   170ec:	add	r0, r8, #128	; 0x80
   170f0:	ldm	r0, {r1, r3}
   170f4:	adds	r1, r1, #1
   170f8:	adc	r3, r3, #0
   170fc:	stm	r0, {r1, r3}
   17100:	ldr	r0, [r6, r4, lsl #2]
   17104:	ldr	r1, [r5, r4, lsl #2]
   17108:	ldrb	r0, [r0, r9]
   1710c:	ldrb	r1, [r1, r9]
   17110:	cmp	r1, r0
   17114:	bne	171e8 <UnityAssertEqualStringArray@@Base+0x2a8>
   17118:	ldrd	r0, [r8, #152]	; 0x98
   1711c:	add	r9, r9, #1
   17120:	adds	r0, r0, #1
   17124:	adc	r1, r1, #0
   17128:	strd	r0, [r8, #152]	; 0x98
   1712c:	add	r0, r8, #168	; 0xa8
   17130:	b	170a0 <UnityAssertEqualStringArray@@Base+0x160>
   17134:	ldm	r0, {r1, r3}
   17138:	adds	r1, r1, #1
   1713c:	adc	r3, r3, #0
   17140:	stm	r0, {r1, r3}
   17144:	ldr	r0, [r6, r4, lsl #2]
   17148:	ldr	r1, [r5, r4, lsl #2]
   1714c:	cmp	r1, r0
   17150:	ldr	r0, [sp, #16]
   17154:	beq	17160 <UnityAssertEqualStringArray@@Base+0x220>
   17158:	b	171f8 <UnityAssertEqualStringArray@@Base+0x2b8>
   1715c:	add	r0, r8, #136	; 0x88
   17160:	movw	r1, #5952	; 0x1740
   17164:	ldm	r0, {r3, r9}
   17168:	movt	r1, #3
   1716c:	ldr	r1, [r1, #32]
   17170:	adds	r3, r3, #1
   17174:	adc	r9, r9, #0
   17178:	stm	r0, {r3, r9}
   1717c:	cmp	r1, #0
   17180:	bne	17230 <UnityAssertEqualStringArray@@Base+0x2f0>
   17184:	ldrd	r0, [r8, #208]	; 0xd0
   17188:	add	r4, r4, #1
   1718c:	mov	r3, sl
   17190:	adds	r0, r0, #1
   17194:	adc	r1, r1, #0
   17198:	cmp	r4, r7
   1719c:	strd	r0, [r8, #208]	; 0xd0
   171a0:	bne	17038 <UnityAssertEqualStringArray@@Base+0xf8>
   171a4:	ldrd	r0, [r8, #248]	; 0xf8
   171a8:	adds	r0, r0, #1
   171ac:	adc	r1, r1, #0
   171b0:	strd	r0, [r8, #248]	; 0xf8
   171b4:	add	r0, r8, #256	; 0x100
   171b8:	ldrd	r2, [r0]
   171bc:	adds	r2, r2, #1
   171c0:	adc	r3, r3, #0
   171c4:	strd	r2, [r0]
   171c8:	ldr	r0, [r8, #264]	; 0x108
   171cc:	ldr	r1, [r8, #268]	; 0x10c
   171d0:	adds	r0, r0, #1
   171d4:	adc	r1, r1, #0
   171d8:	str	r0, [r8, #264]	; 0x108
   171dc:	str	r1, [r8, #268]	; 0x10c
   171e0:	sub	sp, fp, #28
   171e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171e8:	add	r0, r8, #160	; 0xa0
   171ec:	str	r0, [sp, #8]
   171f0:	add	r0, r8, #144	; 0x90
   171f4:	str	r0, [sp, #4]
   171f8:	ldr	r2, [sp, #4]
   171fc:	ldrd	r0, [r2]
   17200:	adds	r0, r0, #1
   17204:	adc	r1, r1, #0
   17208:	strd	r0, [r2]
   1720c:	ldr	r2, [sp, #8]
   17210:	movw	r1, #5952	; 0x1740
   17214:	mov	r0, #1
   17218:	movt	r1, #3
   1721c:	str	r0, [r1, #32]
   17220:	ldrd	r0, [r2]
   17224:	adds	r0, r0, #1
   17228:	adc	r1, r1, #0
   1722c:	strd	r0, [r2]
   17230:	ldrd	r0, [r8, #200]	; 0xc8
   17234:	adds	r0, r0, #1
   17238:	adc	r1, r1, #0
   1723c:	strd	r0, [r8, #200]	; 0xc8
   17240:	ldr	r0, [fp, #8]
   17244:	bl	153b0 <UnityAssertBits@@Base+0x110>
   17248:	cmp	r7, #2
   1724c:	bcc	1727c <UnityAssertEqualStringArray@@Base+0x33c>
   17250:	ldrd	r0, [r8, #216]	; 0xd8
   17254:	adds	r0, r0, #1
   17258:	adc	r1, r1, #0
   1725c:	strd	r0, [r8, #216]	; 0xd8
   17260:	movw	r0, #57074	; 0xdef2
   17264:	movt	r0, #1
   17268:	bl	143c0 <UnityPrint@@Base>
   1726c:	mov	r0, r4
   17270:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   17274:	add	r0, r8, #232	; 0xe8
   17278:	b	17280 <UnityAssertEqualStringArray@@Base+0x340>
   1727c:	add	r0, r8, #224	; 0xe0
   17280:	ldrd	r2, [r0]
   17284:	adds	r2, r2, #1
   17288:	adc	r3, r3, #0
   1728c:	strd	r2, [r0]
   17290:	ldr	r1, [r6, r4, lsl #2]
   17294:	ldr	r0, [r5, r4, lsl #2]
   17298:	bl	16940 <UnityAssertEqualString@@Base+0x264>
   1729c:	ldr	r0, [sp]
   172a0:	bl	154a0 <UnityAssertBits@@Base+0x200>
   172a4:	movw	r1, #5952	; 0x1740
   172a8:	mov	r0, #1
   172ac:	movt	r1, #3
   172b0:	str	r0, [r1, #32]
   172b4:	add	r0, r1, #40	; 0x28
   172b8:	mov	r1, #1
   172bc:	bl	12638 <longjmp@plt>
   172c0:	ldrd	r0, [r8, #32]
   172c4:	adds	r0, r0, #1
   172c8:	adc	r1, r1, #0
   172cc:	strd	r0, [r8, #32]
   172d0:	mov	r0, r2
   172d4:	bl	153b0 <UnityAssertBits@@Base+0x110>
   172d8:	movw	r0, #57135	; 0xdf2f
   172dc:	movt	r0, #1
   172e0:	bl	143c0 <UnityPrint@@Base>
   172e4:	mov	r0, r4
   172e8:	bl	154a0 <UnityAssertBits@@Base+0x200>
   172ec:	mov	r0, #1
   172f0:	mov	r1, #1
   172f4:	str	r0, [r9, #32]
   172f8:	add	r0, r9, #40	; 0x28
   172fc:	bl	12638 <longjmp@plt>

00017300 <UnityAssertEqualMemory@@Base>:
   17300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17304:	add	fp, sp, #28
   17308:	sub	sp, sp, #28
   1730c:	movw	r8, #3568	; 0xdf0
   17310:	mov	sl, r1
   17314:	mov	r6, r0
   17318:	movw	r4, #5952	; 0x1740
   1731c:	movt	r8, #3
   17320:	movt	r4, #3
   17324:	ldrd	r0, [r8]
   17328:	adds	r0, r0, #1
   1732c:	adc	r1, r1, #0
   17330:	strd	r0, [r8]
   17334:	ldrd	r0, [r4, #32]
   17338:	orrs	r0, r1, r0
   1733c:	beq	1737c <UnityAssertEqualMemory@@Base+0x7c>
   17340:	ldrd	r0, [r8, #8]
   17344:	adds	r0, r0, #1
   17348:	adc	r1, r1, #0
   1734c:	strd	r0, [r8, #8]
   17350:	add	r0, r8, #24
   17354:	ldrd	r2, [r0]
   17358:	adds	r2, r2, #1
   1735c:	adc	r3, r3, #0
   17360:	strd	r2, [r0]
   17364:	ldrd	r0, [r8, #168]	; 0xa8
   17368:	adds	r0, r0, #1
   1736c:	adc	r1, r1, #0
   17370:	strd	r0, [r8, #168]	; 0xa8
   17374:	sub	sp, fp, #28
   17378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1737c:	ldrd	r0, [r8, #16]
   17380:	mov	r5, r2
   17384:	ldr	r2, [fp, #12]
   17388:	ldr	r9, [fp, #8]
   1738c:	adds	r0, r0, #1
   17390:	adc	r1, r1, #0
   17394:	cmp	r5, #0
   17398:	movne	r7, r3
   1739c:	cmpne	r3, #0
   173a0:	strd	r0, [r8, #16]
   173a4:	bne	173e8 <UnityAssertEqualMemory@@Base+0xe8>
   173a8:	ldrd	r0, [r8, #32]
   173ac:	adds	r0, r0, #1
   173b0:	adc	r1, r1, #0
   173b4:	strd	r0, [r8, #32]
   173b8:	mov	r0, r2
   173bc:	bl	153b0 <UnityAssertBits@@Base+0x110>
   173c0:	movw	r0, #57135	; 0xdf2f
   173c4:	movt	r0, #1
   173c8:	bl	143c0 <UnityPrint@@Base>
   173cc:	mov	r0, r9
   173d0:	bl	154a0 <UnityAssertBits@@Base+0x200>
   173d4:	mov	r0, #1
   173d8:	mov	r1, #1
   173dc:	str	r0, [r4, #32]
   173e0:	add	r0, r4, #40	; 0x28
   173e4:	bl	12638 <longjmp@plt>
   173e8:	ldrd	r0, [r8, #40]	; 0x28
   173ec:	mov	r3, r9
   173f0:	adds	r0, r0, #1
   173f4:	adc	r1, r1, #0
   173f8:	strd	r0, [r8, #40]	; 0x28
   173fc:	mov	r0, r6
   17400:	mov	r1, sl
   17404:	bl	15be0 <UnityAssertEqualIntArray@@Base+0x500>
   17408:	cmp	r0, #1
   1740c:	bne	17428 <UnityAssertEqualMemory@@Base+0x128>
   17410:	ldrd	r0, [r8, #48]	; 0x30
   17414:	adds	r0, r0, #1
   17418:	adc	r1, r1, #0
   1741c:	strd	r0, [r8, #48]	; 0x30
   17420:	add	r0, r8, #64	; 0x40
   17424:	b	17354 <UnityAssertEqualMemory@@Base+0x54>
   17428:	ldrd	r0, [r8, #56]	; 0x38
   1742c:	mov	lr, r5
   17430:	ldr	r3, [r8, #72]	; 0x48
   17434:	ldr	r5, [r8, #76]	; 0x4c
   17438:	add	r9, r8, #88	; 0x58
   1743c:	str	r7, [sp, #4]
   17440:	mov	r2, r7
   17444:	adds	r0, r0, #1
   17448:	adc	r1, r1, #0
   1744c:	strd	r0, [r8, #56]	; 0x38
   17450:	ldm	r9, {r0, r1, r4, r9}
   17454:	adds	r0, r0, #1
   17458:	str	r2, [sp, #8]
   1745c:	sub	r2, r2, #1
   17460:	mov	r7, #0
   17464:	adc	r1, r1, #0
   17468:	adds	r3, r3, #1
   1746c:	str	r0, [sp, #16]
   17470:	adc	r5, r5, #0
   17474:	strd	r0, [r8, #88]	; 0x58
   17478:	str	r3, [r8, #72]	; 0x48
   1747c:	str	r1, [sp, #12]
   17480:	str	r3, [sp, #24]
   17484:	str	r5, [sp, #20]
   17488:	str	r5, [r8, #76]	; 0x4c
   1748c:	adds	r4, r4, #1
   17490:	adc	r9, r9, #0
   17494:	str	r4, [r8, #96]	; 0x60
   17498:	str	r9, [r8, #100]	; 0x64
   1749c:	ldrb	r3, [sl]
   174a0:	ldrb	ip, [r6]
   174a4:	cmp	ip, r3
   174a8:	bne	17538 <UnityAssertEqualMemory@@Base+0x238>
   174ac:	ldr	r3, [r8, #120]	; 0x78
   174b0:	ldr	r1, [r8, #124]	; 0x7c
   174b4:	ldr	r0, [r8, #152]	; 0x98
   174b8:	ldr	r5, [r8, #156]	; 0x9c
   174bc:	add	r7, r7, #1
   174c0:	add	sl, sl, #1
   174c4:	add	r6, r6, #1
   174c8:	adds	r3, r3, #1
   174cc:	adc	r1, r1, #0
   174d0:	adds	r0, r0, #1
   174d4:	str	r0, [r8, #152]	; 0x98
   174d8:	adc	r0, r5, #0
   174dc:	cmp	lr, r7
   174e0:	str	r3, [r8, #120]	; 0x78
   174e4:	str	r1, [r8, #124]	; 0x7c
   174e8:	str	r0, [r8, #156]	; 0x9c
   174ec:	bne	1748c <UnityAssertEqualMemory@@Base+0x18c>
   174f0:	ldr	r7, [r8, #104]	; 0x68
   174f4:	ldr	r3, [r8, #108]	; 0x6c
   174f8:	ldr	r5, [sp, #20]
   174fc:	ldr	r0, [sp, #16]
   17500:	ldr	r1, [sp, #12]
   17504:	adds	r7, r7, #1
   17508:	adc	r3, r3, #0
   1750c:	str	r7, [r8, #104]	; 0x68
   17510:	cmp	r2, #0
   17514:	str	r3, [r8, #108]	; 0x6c
   17518:	ldr	r3, [sp, #24]
   1751c:	bne	17454 <UnityAssertEqualMemory@@Base+0x154>
   17520:	ldrd	r0, [r8, #80]	; 0x50
   17524:	adds	r0, r0, #1
   17528:	adc	r1, r1, #0
   1752c:	strd	r0, [r8, #80]	; 0x50
   17530:	add	r0, r8, #160	; 0xa0
   17534:	b	17354 <UnityAssertEqualMemory@@Base+0x54>
   17538:	ldrd	r0, [r8, #112]	; 0x70
   1753c:	adds	r0, r0, #1
   17540:	adc	r1, r1, #0
   17544:	strd	r0, [r8, #112]	; 0x70
   17548:	ldr	r0, [fp, #12]
   1754c:	bl	153b0 <UnityAssertBits@@Base+0x110>
   17550:	movw	r0, #57091	; 0xdf03
   17554:	movt	r0, #1
   17558:	bl	143c0 <UnityPrint@@Base>
   1755c:	ldr	r0, [sp, #4]
   17560:	cmp	r0, #2
   17564:	bcc	17598 <UnityAssertEqualMemory@@Base+0x298>
   17568:	ldrd	r0, [r8, #128]	; 0x80
   1756c:	adds	r0, r0, #1
   17570:	adc	r1, r1, #0
   17574:	strd	r0, [r8, #128]	; 0x80
   17578:	movw	r0, #57074	; 0xdef2
   1757c:	movt	r0, #1
   17580:	bl	143c0 <UnityPrint@@Base>
   17584:	ldmib	sp, {r0, r1}
   17588:	sub	r0, r0, r1
   1758c:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   17590:	add	r0, r8, #144	; 0x90
   17594:	b	1759c <UnityAssertEqualMemory@@Base+0x29c>
   17598:	add	r0, r8, #136	; 0x88
   1759c:	ldrd	r2, [r0]
   175a0:	adds	r2, r2, #1
   175a4:	adc	r3, r3, #0
   175a8:	strd	r2, [r0]
   175ac:	movw	r0, #57084	; 0xdefc
   175b0:	movt	r0, #1
   175b4:	bl	143c0 <UnityPrint@@Base>
   175b8:	mov	r0, r7
   175bc:	bl	14d50 <UnityPrintNumberUnsigned@@Base>
   175c0:	movw	r0, #57052	; 0xdedc
   175c4:	movt	r0, #1
   175c8:	bl	143c0 <UnityPrint@@Base>
   175cc:	ldrb	r0, [r6]
   175d0:	mov	r1, #65	; 0x41
   175d4:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   175d8:	movw	r0, #57063	; 0xdee7
   175dc:	movt	r0, #1
   175e0:	bl	143c0 <UnityPrint@@Base>
   175e4:	ldrb	r0, [sl]
   175e8:	mov	r1, #65	; 0x41
   175ec:	bl	14a60 <UnityPrintNumberByStyle@@Base>
   175f0:	ldr	r0, [fp, #8]
   175f4:	bl	154a0 <UnityAssertBits@@Base+0x200>
   175f8:	movw	r1, #5952	; 0x1740
   175fc:	mov	r0, #1
   17600:	movt	r1, #3
   17604:	str	r0, [r1, #32]
   17608:	add	r0, r1, #40	; 0x28
   1760c:	mov	r1, #1
   17610:	bl	12638 <longjmp@plt>
   17614:	nop	{0}
   17618:	nop	{0}
   1761c:	nop	{0}

00017620 <UnityFail@@Base>:
   17620:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17624:	add	fp, sp, #24
   17628:	vpush	{d8-d9}
   1762c:	movw	r6, #3744	; 0xea0
   17630:	mov	r5, r1
   17634:	mov	r4, r0
   17638:	movw	r7, #5952	; 0x1740
   1763c:	movt	r6, #3
   17640:	movt	r7, #3
   17644:	ldrd	r0, [r6]
   17648:	adds	r0, r0, #1
   1764c:	adc	r1, r1, #0
   17650:	strd	r0, [r6]
   17654:	ldrd	r0, [r7, #32]
   17658:	orrs	r0, r1, r0
   1765c:	beq	1768c <UnityFail@@Base+0x6c>
   17660:	ldrd	r0, [r6, #8]
   17664:	ldrd	r2, [r6, #24]
   17668:	adds	r0, r0, #1
   1766c:	adc	r1, r1, #0
   17670:	adds	r2, r2, #1
   17674:	str	r2, [r6, #24]
   17678:	strd	r0, [r6, #8]
   1767c:	adc	r0, r3, #0
   17680:	str	r0, [r6, #28]
   17684:	vpop	{d8-d9}
   17688:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1768c:	movw	r8, #3936	; 0xf60
   17690:	add	r1, pc, #536	; 0x218
   17694:	ldrd	r2, [r6, #16]
   17698:	movt	r8, #3
   1769c:	vld1.64	{d8-d9}, [r1 :128]
   176a0:	add	r0, r8, #48	; 0x30
   176a4:	vld1.64	{d16-d17}, [r0 :128]
   176a8:	adds	r2, r2, #1
   176ac:	adc	r3, r3, #0
   176b0:	strd	r2, [r6, #16]
   176b4:	vadd.i64	q8, q8, q4
   176b8:	vst1.64	{d16-d17}, [r0 :128]
   176bc:	ldr	r0, [r7]
   176c0:	bl	143c0 <UnityPrint@@Base>
   176c4:	vld1.64	{d16-d17}, [r8 :128]
   176c8:	movw	r9, #228	; 0xe4
   176cc:	mov	r0, #58	; 0x3a
   176d0:	movt	r9, #3
   176d4:	ldr	r1, [r9]
   176d8:	vadd.i64	q8, q8, q4
   176dc:	vst1.64	{d16-d17}, [r8 :128]
   176e0:	bl	127e8 <putc@plt>
   176e4:	mov	r0, r5
   176e8:	bl	14b30 <UnityPrintNumber@@Base>
   176ec:	vld1.64	{d16-d17}, [r8 :128]
   176f0:	ldr	r1, [r9]
   176f4:	mov	r0, #58	; 0x3a
   176f8:	vadd.i64	q8, q8, q4
   176fc:	vst1.64	{d16-d17}, [r8 :128]
   17700:	bl	127e8 <putc@plt>
   17704:	ldr	r0, [r7, #4]
   17708:	bl	143c0 <UnityPrint@@Base>
   1770c:	vld1.64	{d16-d17}, [r8 :128]
   17710:	ldr	r1, [r9]
   17714:	mov	r0, #58	; 0x3a
   17718:	mov	r5, r8
   1771c:	vadd.i64	q8, q8, q4
   17720:	vst1.64	{d16-d17}, [r5 :128]!
   17724:	bl	127e8 <putc@plt>
   17728:	vld1.64	{d16-d17}, [r5 :128]
   1772c:	movw	r0, #57032	; 0xdec8
   17730:	movt	r0, #1
   17734:	vadd.i64	q8, q8, q4
   17738:	vst1.64	{d16-d17}, [r5 :128]
   1773c:	bl	143c0 <UnityPrint@@Base>
   17740:	cmp	r4, #0
   17744:	bne	17750 <UnityFail@@Base+0x130>
   17748:	add	r0, r6, #40	; 0x28
   1774c:	b	17888 <UnityFail@@Base+0x268>
   17750:	add	r0, pc, #344	; 0x158
   17754:	vld1.64	{d18-d19}, [r8 :128]
   17758:	vld1.64	{d16-d17}, [r0 :128]
   1775c:	ldrd	r0, [r6, #32]
   17760:	adds	r0, r0, #1
   17764:	adc	r1, r1, #0
   17768:	vadd.i64	q8, q9, q8
   1776c:	strd	r0, [r6, #32]
   17770:	ldr	r1, [r9]
   17774:	mov	r0, #58	; 0x3a
   17778:	vst1.64	{d16-d17}, [r8 :128]
   1777c:	bl	127e8 <putc@plt>
   17780:	ldr	r0, [r7, #8]
   17784:	cmp	r0, #0
   17788:	bne	17794 <UnityFail@@Base+0x174>
   1778c:	add	r0, r6, #56	; 0x38
   17790:	b	17814 <UnityFail@@Base+0x1f4>
   17794:	ldrd	r0, [r6, #48]	; 0x30
   17798:	adds	r0, r0, #1
   1779c:	adc	r1, r1, #0
   177a0:	strd	r0, [r6, #48]	; 0x30
   177a4:	movw	r0, #57457	; 0xe071
   177a8:	movt	r0, #1
   177ac:	bl	143c0 <UnityPrint@@Base>
   177b0:	ldr	r0, [r7, #8]
   177b4:	bl	143c0 <UnityPrint@@Base>
   177b8:	ldr	r0, [r7, #12]
   177bc:	cmp	r0, #0
   177c0:	bne	177cc <UnityFail@@Base+0x1ac>
   177c4:	add	r0, r6, #72	; 0x48
   177c8:	b	177f4 <UnityFail@@Base+0x1d4>
   177cc:	ldrd	r0, [r6, #64]	; 0x40
   177d0:	adds	r0, r0, #1
   177d4:	adc	r1, r1, #0
   177d8:	strd	r0, [r6, #64]	; 0x40
   177dc:	movw	r0, #57467	; 0xe07b
   177e0:	movt	r0, #1
   177e4:	bl	143c0 <UnityPrint@@Base>
   177e8:	ldr	r0, [r7, #12]
   177ec:	bl	143c0 <UnityPrint@@Base>
   177f0:	add	r0, r6, #80	; 0x50
   177f4:	ldrd	r2, [r0]
   177f8:	adds	r2, r2, #1
   177fc:	adc	r3, r3, #0
   17800:	strd	r2, [r0]
   17804:	movw	r0, #57049	; 0xded9
   17808:	movt	r0, #1
   1780c:	bl	143c0 <UnityPrint@@Base>
   17810:	add	r0, r6, #88	; 0x58
   17814:	ldrd	r2, [r0]
   17818:	adds	r2, r2, #1
   1781c:	adc	r3, r3, #0
   17820:	strd	r2, [r0]
   17824:	ldrb	r0, [r4]
   17828:	cmp	r0, #32
   1782c:	bne	17838 <UnityFail@@Base+0x218>
   17830:	add	r0, r6, #104	; 0x68
   17834:	b	1786c <UnityFail@@Base+0x24c>
   17838:	add	r0, pc, #112	; 0x70
   1783c:	vld1.64	{d18-d19}, [r8 :128]
   17840:	vld1.64	{d16-d17}, [r0 :128]
   17844:	ldrd	r0, [r6, #96]	; 0x60
   17848:	adds	r0, r0, #1
   1784c:	adc	r1, r1, #0
   17850:	vadd.i64	q8, q9, q8
   17854:	strd	r0, [r6, #96]	; 0x60
   17858:	ldr	r1, [r9]
   1785c:	mov	r0, #32
   17860:	vst1.64	{d16-d17}, [r8 :128]
   17864:	bl	127e8 <putc@plt>
   17868:	add	r0, r6, #112	; 0x70
   1786c:	ldrd	r2, [r0]
   17870:	adds	r2, r2, #1
   17874:	adc	r3, r3, #0
   17878:	strd	r2, [r0]
   1787c:	mov	r0, r4
   17880:	bl	143c0 <UnityPrint@@Base>
   17884:	add	r0, r6, #120	; 0x78
   17888:	ldrd	r2, [r0]
   1788c:	mov	r1, #1
   17890:	adds	r2, r2, #1
   17894:	adc	r3, r3, #0
   17898:	strd	r2, [r0]
   1789c:	mov	r0, #1
   178a0:	str	r0, [r7, #32]
   178a4:	add	r0, r7, #40	; 0x28
   178a8:	bl	12638 <longjmp@plt>
   178ac:	nop	{0}
   178b0:	andeq	r0, r0, r1
   178b4:	andeq	r0, r0, r0
   178b8:	andeq	r0, r0, r1
   178bc:	andeq	r0, r0, r0

000178c0 <UnityIgnore@@Base>:
   178c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   178c4:	add	fp, sp, #24
   178c8:	vpush	{d8-d9}
   178cc:	movw	r6, #4160	; 0x1040
   178d0:	mov	r5, r1
   178d4:	mov	r4, r0
   178d8:	movw	r7, #5952	; 0x1740
   178dc:	movt	r6, #3
   178e0:	movt	r7, #3
   178e4:	ldrd	r0, [r6, #48]	; 0x30
   178e8:	adds	r0, r0, #1
   178ec:	adc	r1, r1, #0
   178f0:	strd	r0, [r6, #48]	; 0x30
   178f4:	ldrd	r0, [r7, #32]
   178f8:	orrs	r0, r1, r0
   178fc:	beq	1792c <UnityIgnore@@Base+0x6c>
   17900:	ldrd	r0, [r6, #56]	; 0x38
   17904:	ldrd	r2, [r6, #72]	; 0x48
   17908:	adds	r0, r0, #1
   1790c:	adc	r1, r1, #0
   17910:	adds	r2, r2, #1
   17914:	str	r2, [r6, #72]	; 0x48
   17918:	strd	r0, [r6, #56]	; 0x38
   1791c:	adc	r0, r3, #0
   17920:	str	r0, [r6, #76]	; 0x4c
   17924:	vpop	{d8-d9}
   17928:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1792c:	movw	r8, #3936	; 0xf60
   17930:	add	r1, pc, #296	; 0x128
   17934:	ldrd	r2, [r6, #64]	; 0x40
   17938:	movt	r8, #3
   1793c:	vld1.64	{d8-d9}, [r1 :128]
   17940:	add	r0, r8, #48	; 0x30
   17944:	vld1.64	{d16-d17}, [r0 :128]
   17948:	adds	r2, r2, #1
   1794c:	adc	r3, r3, #0
   17950:	strd	r2, [r6, #64]	; 0x40
   17954:	vadd.i64	q8, q8, q4
   17958:	vst1.64	{d16-d17}, [r0 :128]
   1795c:	ldr	r0, [r7]
   17960:	bl	143c0 <UnityPrint@@Base>
   17964:	vld1.64	{d16-d17}, [r8 :128]
   17968:	movw	r9, #228	; 0xe4
   1796c:	mov	r0, #58	; 0x3a
   17970:	movt	r9, #3
   17974:	ldr	r1, [r9]
   17978:	vadd.i64	q8, q8, q4
   1797c:	vst1.64	{d16-d17}, [r8 :128]
   17980:	bl	127e8 <putc@plt>
   17984:	mov	r0, r5
   17988:	bl	14b30 <UnityPrintNumber@@Base>
   1798c:	vld1.64	{d16-d17}, [r8 :128]
   17990:	ldr	r1, [r9]
   17994:	mov	r0, #58	; 0x3a
   17998:	vadd.i64	q8, q8, q4
   1799c:	vst1.64	{d16-d17}, [r8 :128]
   179a0:	bl	127e8 <putc@plt>
   179a4:	ldr	r0, [r7, #4]
   179a8:	bl	143c0 <UnityPrint@@Base>
   179ac:	vld1.64	{d16-d17}, [r8 :128]
   179b0:	ldr	r1, [r9]
   179b4:	mov	r0, #58	; 0x3a
   179b8:	vadd.i64	q8, q8, q4
   179bc:	vst1.64	{d16-d17}, [r8 :128]
   179c0:	bl	127e8 <putc@plt>
   179c4:	movw	r0, #57037	; 0xdecd
   179c8:	movt	r0, #1
   179cc:	bl	143c0 <UnityPrint@@Base>
   179d0:	cmp	r4, #0
   179d4:	bne	179e0 <UnityIgnore@@Base+0x120>
   179d8:	add	r0, r6, #88	; 0x58
   179dc:	b	17a34 <UnityIgnore@@Base+0x174>
   179e0:	add	r0, pc, #120	; 0x78
   179e4:	vld1.64	{d16-d17}, [r8 :128]
   179e8:	vld1.64	{d8-d9}, [r0 :128]
   179ec:	ldrd	r0, [r6, #80]	; 0x50
   179f0:	adds	r0, r0, #1
   179f4:	adc	r1, r1, #0
   179f8:	vadd.i64	q8, q8, q4
   179fc:	strd	r0, [r6, #80]	; 0x50
   17a00:	ldr	r1, [r9]
   17a04:	mov	r0, #58	; 0x3a
   17a08:	vst1.64	{d16-d17}, [r8 :128]
   17a0c:	bl	127e8 <putc@plt>
   17a10:	vld1.64	{d16-d17}, [r8 :128]
   17a14:	ldr	r1, [r9]
   17a18:	mov	r0, #32
   17a1c:	vadd.i64	q8, q8, q4
   17a20:	vst1.64	{d16-d17}, [r8 :128]
   17a24:	bl	127e8 <putc@plt>
   17a28:	mov	r0, r4
   17a2c:	bl	143c0 <UnityPrint@@Base>
   17a30:	add	r0, r6, #96	; 0x60
   17a34:	ldrd	r2, [r0]
   17a38:	mov	r1, #1
   17a3c:	adds	r2, r2, #1
   17a40:	adc	r3, r3, #0
   17a44:	strd	r2, [r0]
   17a48:	mov	r0, #1
   17a4c:	str	r0, [r7, #36]	; 0x24
   17a50:	add	r0, r7, #40	; 0x28
   17a54:	bl	12638 <longjmp@plt>
   17a58:	nop	{0}
   17a5c:	nop	{0}
   17a60:	andeq	r0, r0, r1
   17a64:	andeq	r0, r0, r0
   17a68:	andeq	r0, r0, r1
   17a6c:	andeq	r0, r0, r0

00017a70 <setUp@@Base>:
   17a70:	movw	r0, #3936	; 0xf60
   17a74:	add	r1, pc, #36	; 0x24
   17a78:	movt	r0, #3
   17a7c:	vld1.64	{d16-d17}, [r1 :128]
   17a80:	add	r0, r0, #80	; 0x50
   17a84:	vld1.64	{d18-d19}, [r0 :128]
   17a88:	vadd.i64	q8, q9, q8
   17a8c:	vst1.64	{d16-d17}, [r0 :128]
   17a90:	bx	lr
   17a94:	nop	{0}
   17a98:	nop	{0}
   17a9c:	nop	{0}
   17aa0:	andeq	r0, r0, r1
   17aa4:	andeq	r0, r0, r0
   17aa8:	andeq	r0, r0, r1
   17aac:	andeq	r0, r0, r0

00017ab0 <tearDown@@Base>:
   17ab0:	movw	r0, #3936	; 0xf60
   17ab4:	add	r1, pc, #36	; 0x24
   17ab8:	movt	r0, #3
   17abc:	vld1.64	{d16-d17}, [r1 :128]
   17ac0:	add	r0, r0, #96	; 0x60
   17ac4:	vld1.64	{d18-d19}, [r0 :128]
   17ac8:	vadd.i64	q8, q9, q8
   17acc:	vst1.64	{d16-d17}, [r0 :128]
   17ad0:	bx	lr
   17ad4:	nop	{0}
   17ad8:	nop	{0}
   17adc:	nop	{0}
   17ae0:	andeq	r0, r0, r1
   17ae4:	andeq	r0, r0, r0
   17ae8:	andeq	r0, r0, r1
   17aec:	andeq	r0, r0, r0

00017af0 <UnityDefaultTestRun@@Base>:
   17af0:	push	{r4, r5, r6, r7, fp, lr}
   17af4:	add	fp, sp, #16
   17af8:	movw	r7, #5952	; 0x1740
   17afc:	movw	r6, #3872	; 0xf20
   17b00:	mov	r4, r0
   17b04:	mov	r0, #0
   17b08:	movt	r7, #3
   17b0c:	movt	r6, #3
   17b10:	str	r2, [r7, #16]
   17b14:	str	r1, [r7, #4]
   17b18:	str	r0, [r7, #12]
   17b1c:	str	r0, [r7, #8]
   17b20:	ldrd	r0, [r6]
   17b24:	add	r5, r7, #40	; 0x28
   17b28:	ldr	r2, [r7, #20]
   17b2c:	adds	r0, r0, #1
   17b30:	adc	r1, r1, #0
   17b34:	add	r2, r2, #1
   17b38:	strd	r0, [r6]
   17b3c:	mov	r0, r5
   17b40:	str	r2, [r7, #20]
   17b44:	bl	12650 <_setjmp@plt>
   17b48:	cmp	r0, #0
   17b4c:	beq	17b58 <UnityDefaultTestRun@@Base+0x68>
   17b50:	add	r0, r6, #16
   17b54:	b	17b74 <UnityDefaultTestRun@@Base+0x84>
   17b58:	ldrd	r0, [r6, #8]
   17b5c:	adds	r0, r0, #1
   17b60:	adc	r1, r1, #0
   17b64:	strd	r0, [r6, #8]
   17b68:	bl	17a70 <setUp@@Base>
   17b6c:	blx	r4
   17b70:	add	r0, r6, #24
   17b74:	ldrd	r2, [r0]
   17b78:	adds	r2, r2, #1
   17b7c:	adc	r3, r3, #0
   17b80:	strd	r2, [r0]
   17b84:	mov	r0, r5
   17b88:	bl	12650 <_setjmp@plt>
   17b8c:	ldr	r1, [r7, #36]	; 0x24
   17b90:	orrs	r0, r1, r0
   17b94:	beq	17ba0 <UnityDefaultTestRun@@Base+0xb0>
   17b98:	add	r0, r6, #32
   17b9c:	b	17bb8 <UnityDefaultTestRun@@Base+0xc8>
   17ba0:	ldrd	r0, [r6, #40]	; 0x28
   17ba4:	adds	r0, r0, #1
   17ba8:	adc	r1, r1, #0
   17bac:	strd	r0, [r6, #40]	; 0x28
   17bb0:	bl	17ab0 <tearDown@@Base>
   17bb4:	add	r0, r6, #48	; 0x30
   17bb8:	ldrd	r2, [r0]
   17bbc:	adds	r2, r2, #1
   17bc0:	adc	r3, r3, #0
   17bc4:	strd	r2, [r0]
   17bc8:	ldrd	r0, [r6, #56]	; 0x38
   17bcc:	adds	r0, r0, #1
   17bd0:	adc	r1, r1, #0
   17bd4:	strd	r0, [r6, #56]	; 0x38
   17bd8:	bl	150f0 <UnityConcludeTest@@Base>
   17bdc:	pop	{r4, r5, r6, r7, fp, pc}

00017be0 <UnityBegin@@Base>:
   17be0:	movw	r1, #4048	; 0xfd0
   17be4:	add	r2, pc, #68	; 0x44
   17be8:	vmov.i32	q10, #0	; 0x00000000
   17bec:	movt	r1, #3
   17bf0:	vld1.64	{d16-d17}, [r2 :128]
   17bf4:	movw	r2, #5952	; 0x1740
   17bf8:	movt	r2, #3
   17bfc:	vld1.64	{d18-d19}, [r1 :128]
   17c00:	str	r0, [r2]
   17c04:	mov	r0, #0
   17c08:	str	r0, [r2, #36]	; 0x24
   17c0c:	add	r0, r2, #4
   17c10:	vst1.32	{d20-d21}, [r0]
   17c14:	add	r0, r2, #20
   17c18:	vst1.32	{d20-d21}, [r0]
   17c1c:	vadd.i64	q8, q9, q8
   17c20:	vst1.64	{d16-d17}, [r1 :128]
   17c24:	bx	lr
   17c28:	nop	{0}
   17c2c:	nop	{0}
   17c30:	andeq	r0, r0, r1
   17c34:	andeq	r0, r0, r0
   17c38:	andeq	r0, r0, r1
   17c3c:	andeq	r0, r0, r0

00017c40 <UnityEnd@@Base>:
   17c40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c44:	add	fp, sp, #24
   17c48:	vpush	{d8-d9}
   17c4c:	movw	r4, #4160	; 0x1040
   17c50:	movw	r5, #3936	; 0xf60
   17c54:	add	r0, pc, #388	; 0x184
   17c58:	movw	r8, #228	; 0xe4
   17c5c:	movt	r4, #3
   17c60:	movt	r5, #3
   17c64:	vld1.64	{d8-d9}, [r0 :128]
   17c68:	movt	r8, #3
   17c6c:	ldrd	r0, [r4]
   17c70:	vld1.64	{d16-d17}, [r5 :128]
   17c74:	adds	r0, r0, #1
   17c78:	adc	r1, r1, #0
   17c7c:	vadd.i64	q8, q8, q4
   17c80:	strd	r0, [r4]
   17c84:	ldr	r1, [r8]
   17c88:	mov	r0, #10
   17c8c:	vst1.64	{d16-d17}, [r5 :128]
   17c90:	bl	127e8 <putc@plt>
   17c94:	movw	r0, #57404	; 0xe03c
   17c98:	movt	r0, #1
   17c9c:	bl	143c0 <UnityPrint@@Base>
   17ca0:	vld1.64	{d16-d17}, [r5 :128]
   17ca4:	ldr	r1, [r8]
   17ca8:	mov	r0, #10
   17cac:	vadd.i64	q8, q8, q4
   17cb0:	vst1.64	{d16-d17}, [r5 :128]
   17cb4:	bl	127e8 <putc@plt>
   17cb8:	movw	r7, #5952	; 0x1740
   17cbc:	movt	r7, #3
   17cc0:	ldr	r0, [r7, #20]
   17cc4:	bl	14b30 <UnityPrintNumber@@Base>
   17cc8:	movw	r0, #57428	; 0xe054
   17ccc:	movt	r0, #1
   17cd0:	bl	143c0 <UnityPrint@@Base>
   17cd4:	ldr	r0, [r7, #24]
   17cd8:	bl	14b30 <UnityPrintNumber@@Base>
   17cdc:	movw	r0, #57436	; 0xe05c
   17ce0:	movt	r0, #1
   17ce4:	bl	143c0 <UnityPrint@@Base>
   17ce8:	ldr	r0, [r7, #28]
   17cec:	bl	14b30 <UnityPrintNumber@@Base>
   17cf0:	movw	r0, #57447	; 0xe067
   17cf4:	movt	r0, #1
   17cf8:	bl	143c0 <UnityPrint@@Base>
   17cfc:	vld1.64	{d16-d17}, [r5 :128]
   17d00:	ldr	r1, [r8]
   17d04:	mov	r0, #10
   17d08:	vadd.i64	q8, q8, q4
   17d0c:	vst1.64	{d16-d17}, [r5 :128]
   17d10:	bl	127e8 <putc@plt>
   17d14:	ldr	r0, [r7, #24]
   17d18:	cmp	r0, #0
   17d1c:	beq	17d48 <UnityEnd@@Base+0x108>
   17d20:	ldrd	r0, [r4, #16]
   17d24:	add	r6, r4, #32
   17d28:	add	r2, r5, #16
   17d2c:	adds	r0, r0, #1
   17d30:	adc	r1, r1, #0
   17d34:	strd	r0, [r4, #16]
   17d38:	movw	r0, #57032	; 0xdec8
   17d3c:	add	r1, r5, #24
   17d40:	movt	r0, #1
   17d44:	b	17d6c <UnityEnd@@Base+0x12c>
   17d48:	ldrd	r0, [r4, #8]
   17d4c:	add	r6, r4, #24
   17d50:	add	r2, r5, #32
   17d54:	adds	r0, r0, #1
   17d58:	adc	r1, r1, #0
   17d5c:	strd	r0, [r4, #8]
   17d60:	movw	r0, #57024	; 0xdec0
   17d64:	add	r1, r5, #40	; 0x28
   17d68:	movt	r0, #1
   17d6c:	ldm	r2, {r3, r9}
   17d70:	adds	r3, r3, #1
   17d74:	adc	r9, r9, #0
   17d78:	stm	r2, {r3, r9}
   17d7c:	ldrd	r2, [r1]
   17d80:	adds	r2, r2, #1
   17d84:	adc	r3, r3, #0
   17d88:	strd	r2, [r1]
   17d8c:	bl	143c0 <UnityPrint@@Base>
   17d90:	ldrd	r0, [r6]
   17d94:	adds	r0, r0, #1
   17d98:	adc	r1, r1, #0
   17d9c:	strd	r0, [r6]
   17da0:	add	r0, pc, #56	; 0x38
   17da4:	vld1.64	{d18-d19}, [r5 :128]
   17da8:	vld1.64	{d16-d17}, [r0 :128]
   17dac:	ldrd	r0, [r4, #40]	; 0x28
   17db0:	adds	r0, r0, #1
   17db4:	adc	r1, r1, #0
   17db8:	vadd.i64	q8, q9, q8
   17dbc:	strd	r0, [r4, #40]	; 0x28
   17dc0:	ldr	r1, [r8]
   17dc4:	mov	r0, #10
   17dc8:	vst1.64	{d16-d17}, [r5 :128]
   17dcc:	bl	127e8 <putc@plt>
   17dd0:	ldr	r0, [r7, #24]
   17dd4:	vpop	{d8-d9}
   17dd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ddc:	nop	{0}
   17de0:	andeq	r0, r0, r1
   17de4:	andeq	r0, r0, r0
   17de8:	andeq	r0, r0, r1
   17dec:	andeq	r0, r0, r0
   17df0:	push	{r4, r5, r6, lr}
   17df4:	sub	sp, sp, #8
   17df8:	movw	r0, #58520	; 0xe498
   17dfc:	movw	r1, #55713	; 0xd9a1
   17e00:	movw	r2, #50507	; 0xc54b
   17e04:	movt	r0, #1
   17e08:	movt	r1, #1
   17e0c:	movt	r2, #17914	; 0x45fa
   17e10:	bl	1a7e8 <next@@Base+0x1988>
   17e14:	movw	r0, #58240	; 0xe380
   17e18:	movw	r6, #57536	; 0xe0c0
   17e1c:	mov	r5, #0
   17e20:	movt	r0, #1
   17e24:	movt	r6, #1
   17e28:	add	r4, r0, #4
   17e2c:	mov	r3, r6
   17e30:	ldr	r0, [r3, r5]!
   17e34:	ldr	r1, [r3, #16]
   17e38:	str	r1, [sp]
   17e3c:	ldmib	r3, {r1, r2}
   17e40:	ldrb	r3, [r3, #12]
   17e44:	bl	1af08 <next@@Base+0x20a8>
   17e48:	ldrd	r0, [r4, #-4]
   17e4c:	bl	1b7bc <next@@Base+0x295c>
   17e50:	add	r5, r5, #20
   17e54:	add	r4, r4, #8
   17e58:	cmp	r5, #700	; 0x2bc
   17e5c:	bne	17e2c <UnityEnd@@Base+0x1ec>
   17e60:	bl	1bf44 <next@@Base+0x30e4>
   17e64:	add	sp, sp, #8
   17e68:	pop	{r4, r5, r6, lr}
   17e6c:	b	1ccb0 <next@@Base+0x3e50>
   17e70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17e74:	vpush	{d8-d9}
   17e78:	bl	17df0 <UnityEnd@@Base+0x1b0>
   17e7c:	movw	r0, #688	; 0x2b0
   17e80:	mov	r1, #0
   17e84:	mov	r2, #152	; 0x98
   17e88:	mov	r4, #0
   17e8c:	movt	r0, #3
   17e90:	bl	1277c <memset@plt>
   17e94:	movw	r0, #848	; 0x350
   17e98:	vmov.i32	q4, #0	; 0x00000000
   17e9c:	movw	r9, #3936	; 0xf60
   17ea0:	mov	r8, #64	; 0x40
   17ea4:	mov	r2, #168	; 0xa8
   17ea8:	movt	r0, #3
   17eac:	movt	r9, #3
   17eb0:	add	r1, r0, #16
   17eb4:	mov	r6, r9
   17eb8:	vst1.64	{d8-d9}, [r1 :128]
   17ebc:	add	r1, r0, #32
   17ec0:	vst1.64	{d8-d9}, [r1 :128]
   17ec4:	add	r1, r0, #48	; 0x30
   17ec8:	vst1.64	{d8-d9}, [r0 :128], r8
   17ecc:	vst1.64	{d8-d9}, [r0 :128]
   17ed0:	mov	r0, #96	; 0x60
   17ed4:	vst1.64	{d8-d9}, [r1 :128]
   17ed8:	mov	r1, #0
   17edc:	vst1.64	{d8-d9}, [r6 :128], r0
   17ee0:	movw	r0, #928	; 0x3a0
   17ee4:	movt	r0, #3
   17ee8:	bl	1277c <memset@plt>
   17eec:	movw	r0, #1104	; 0x450
   17ef0:	movw	r2, #1184	; 0x4a0
   17ef4:	movw	r3, #1312	; 0x520
   17ef8:	movw	r7, #4048	; 0xfd0
   17efc:	movt	r0, #3
   17f00:	movt	r2, #3
   17f04:	movt	r3, #3
   17f08:	movt	r7, #3
   17f0c:	add	r1, r0, #16
   17f10:	str	r4, [r0, #64]	; 0x40
   17f14:	str	r4, [r2, #112]	; 0x70
   17f18:	str	r4, [r3, #80]	; 0x50
   17f1c:	vst1.64	{d8-d9}, [r1 :128]
   17f20:	add	r1, r0, #32
   17f24:	vst1.64	{d8-d9}, [r1 :128]
   17f28:	add	r1, r0, #48	; 0x30
   17f2c:	vst1.64	{d8-d9}, [r1 :128]
   17f30:	add	r1, r2, #16
   17f34:	vst1.64	{d8-d9}, [r1 :128]
   17f38:	add	r1, r2, #32
   17f3c:	vst1.64	{d8-d9}, [r1 :128]
   17f40:	add	r1, r2, #48	; 0x30
   17f44:	vst1.64	{d8-d9}, [r1 :128]
   17f48:	add	r1, r2, #64	; 0x40
   17f4c:	vst1.64	{d8-d9}, [r1 :128]
   17f50:	add	r1, r2, #80	; 0x50
   17f54:	vst1.64	{d8-d9}, [r1 :128]
   17f58:	add	r1, r2, #96	; 0x60
   17f5c:	vst1.64	{d8-d9}, [r1 :128]
   17f60:	add	r1, r3, #16
   17f64:	vst1.64	{d8-d9}, [r1 :128]
   17f68:	add	r1, r3, #32
   17f6c:	vst1.64	{d8-d9}, [r1 :128]
   17f70:	add	r1, r3, #48	; 0x30
   17f74:	vst1.64	{d8-d9}, [r1 :128]
   17f78:	add	r1, r3, #64	; 0x40
   17f7c:	vst1.64	{d8-d9}, [r1 :128]
   17f80:	mov	r1, #68	; 0x44
   17f84:	vst1.64	{d8-d9}, [r0 :128], r1
   17f88:	str	r4, [r0]
   17f8c:	mov	r0, #116	; 0x74
   17f90:	vst1.64	{d8-d9}, [r2 :128], r0
   17f94:	mov	r0, #84	; 0x54
   17f98:	str	r4, [r2]
   17f9c:	movw	r2, #1408	; 0x580
   17fa0:	vst1.64	{d8-d9}, [r3 :128], r0
   17fa4:	movt	r2, #3
   17fa8:	str	r4, [r3]
   17fac:	add	r3, r2, #80	; 0x50
   17fb0:	str	r4, [r2, #96]	; 0x60
   17fb4:	vst1.64	{d8-d9}, [r3 :128]
   17fb8:	add	r3, r2, #64	; 0x40
   17fbc:	vst1.64	{d8-d9}, [r3 :128]
   17fc0:	add	r3, r2, #48	; 0x30
   17fc4:	vst1.64	{d8-d9}, [r3 :128]
   17fc8:	add	r3, r2, #32
   17fcc:	vst1.64	{d8-d9}, [r3 :128]
   17fd0:	add	r3, r2, #16
   17fd4:	vst1.64	{d8-d9}, [r3 :128]
   17fd8:	mov	r3, #100	; 0x64
   17fdc:	vst1.64	{d8-d9}, [r2 :128], r3
   17fe0:	str	r4, [r2]
   17fe4:	add	r2, r9, #32
   17fe8:	vst1.64	{d8-d9}, [r2 :128]
   17fec:	add	r2, r9, #16
   17ff0:	vst1.64	{d8-d9}, [r2 :128]
   17ff4:	movw	r2, #1520	; 0x5f0
   17ff8:	movt	r2, #3
   17ffc:	add	r3, r2, #48	; 0x30
   18000:	str	r4, [r2, #64]	; 0x40
   18004:	vst1.64	{d8-d9}, [r3 :128]
   18008:	add	r3, r2, #32
   1800c:	vst1.64	{d8-d9}, [r3 :128]
   18010:	add	r3, r2, #16
   18014:	vst1.64	{d8-d9}, [r2 :128], r1
   18018:	add	r1, r9, #48	; 0x30
   1801c:	vst1.64	{d8-d9}, [r1 :128]
   18020:	add	r1, r7, #48	; 0x30
   18024:	str	r4, [r2]
   18028:	vst1.64	{d8-d9}, [r3 :128]
   1802c:	vst1.64	{d8-d9}, [r1 :128]
   18030:	add	r1, r7, #32
   18034:	vst1.64	{d8-d9}, [r1 :128]
   18038:	add	r1, r7, #16
   1803c:	vst1.64	{d8-d9}, [r1 :128]
   18040:	add	r1, r9, #64	; 0x40
   18044:	vst1.64	{d8-d9}, [r1 :128]
   18048:	movw	r1, #1600	; 0x640
   1804c:	movt	r1, #3
   18050:	add	r2, r1, #64	; 0x40
   18054:	str	r4, [r1, #80]	; 0x50
   18058:	vst1.64	{d8-d9}, [r2 :128]
   1805c:	add	r2, r1, #48	; 0x30
   18060:	vst1.64	{d8-d9}, [r2 :128]
   18064:	add	r2, r1, #32
   18068:	vst1.64	{d8-d9}, [r2 :128]
   1806c:	add	r2, r1, #16
   18070:	vst1.64	{d8-d9}, [r1 :128], r0
   18074:	add	r0, r7, #96	; 0x60
   18078:	vst1.64	{d8-d9}, [r0 :128]
   1807c:	add	r0, r7, #80	; 0x50
   18080:	vst1.64	{d8-d9}, [r2 :128]
   18084:	str	r4, [r1]
   18088:	mov	r1, #0
   1808c:	mov	r2, #280	; 0x118
   18090:	vst1.64	{d8-d9}, [r0 :128]
   18094:	add	r0, r7, #64	; 0x40
   18098:	vst1.64	{d8-d9}, [r0 :128]
   1809c:	movw	r0, #1696	; 0x6a0
   180a0:	movt	r0, #3
   180a4:	bl	1277c <memset@plt>
   180a8:	movw	r0, #1984	; 0x7c0
   180ac:	mov	r2, #192	; 0xc0
   180b0:	movt	r0, #3
   180b4:	add	r1, r0, #16
   180b8:	vst1.64	{d8-d9}, [r1 :128]
   180bc:	add	r1, r0, #32
   180c0:	vst1.64	{d8-d9}, [r1 :128]
   180c4:	add	r1, r0, #48	; 0x30
   180c8:	vst1.64	{d8-d9}, [r0 :128], r8
   180cc:	vst1.64	{d8-d9}, [r0 :128]
   180d0:	movw	r0, #2064	; 0x810
   180d4:	vst1.64	{d8-d9}, [r1 :128]
   180d8:	mov	r1, #0
   180dc:	movt	r0, #3
   180e0:	bl	1277c <memset@plt>
   180e4:	movw	r0, #2256	; 0x8d0
   180e8:	mov	r5, #112	; 0x70
   180ec:	mov	r2, #248	; 0xf8
   180f0:	movt	r0, #3
   180f4:	add	r1, r0, #16
   180f8:	vst1.64	{d8-d9}, [r1 :128]
   180fc:	add	r1, r0, #32
   18100:	vst1.64	{d8-d9}, [r1 :128]
   18104:	add	r1, r0, #48	; 0x30
   18108:	vst1.64	{d8-d9}, [r1 :128]
   1810c:	add	r1, r0, #64	; 0x40
   18110:	vst1.64	{d8-d9}, [r1 :128]
   18114:	add	r1, r0, #80	; 0x50
   18118:	vst1.64	{d8-d9}, [r1 :128]
   1811c:	add	r1, r0, #96	; 0x60
   18120:	vst1.64	{d8-d9}, [r0 :128], r5
   18124:	vst1.64	{d8-d9}, [r0 :128]
   18128:	movw	r0, #2384	; 0x950
   1812c:	vst1.64	{d8-d9}, [r1 :128]
   18130:	mov	r1, #0
   18134:	movt	r0, #3
   18138:	bl	1277c <memset@plt>
   1813c:	movw	r0, #2640	; 0xa50
   18140:	mov	r2, #176	; 0xb0
   18144:	movt	r0, #3
   18148:	add	r1, r0, #16
   1814c:	vst1.64	{d8-d9}, [r1 :128]
   18150:	add	r1, r0, #32
   18154:	vst1.64	{d8-d9}, [r1 :128]
   18158:	add	r1, r0, #48	; 0x30
   1815c:	vst1.64	{d8-d9}, [r1 :128]
   18160:	add	r1, r0, #64	; 0x40
   18164:	vst1.64	{d8-d9}, [r1 :128]
   18168:	add	r1, r0, #80	; 0x50
   1816c:	vst1.64	{d8-d9}, [r1 :128]
   18170:	add	r1, r0, #96	; 0x60
   18174:	vst1.64	{d8-d9}, [r0 :128], r5
   18178:	vst1.64	{d8-d9}, [r0 :128]
   1817c:	movw	r0, #2768	; 0xad0
   18180:	vst1.64	{d8-d9}, [r1 :128]
   18184:	mov	r1, #0
   18188:	movt	r0, #3
   1818c:	bl	1277c <memset@plt>
   18190:	movw	r0, #2944	; 0xb80
   18194:	mov	r2, #192	; 0xc0
   18198:	movt	r0, #3
   1819c:	add	r1, r0, #16
   181a0:	vst1.64	{d8-d9}, [r1 :128]
   181a4:	add	r1, r0, #32
   181a8:	vst1.64	{d8-d9}, [r1 :128]
   181ac:	add	r1, r0, #48	; 0x30
   181b0:	vst1.64	{d8-d9}, [r0 :128], r8
   181b4:	vst1.64	{d8-d9}, [r0 :128]
   181b8:	movw	r0, #3024	; 0xbd0
   181bc:	vst1.64	{d8-d9}, [r1 :128]
   181c0:	mov	r1, #0
   181c4:	movt	r0, #3
   181c8:	bl	1277c <memset@plt>
   181cc:	movw	r0, #3216	; 0xc90
   181d0:	mov	r2, #272	; 0x110
   181d4:	movt	r0, #3
   181d8:	add	r1, r0, #16
   181dc:	vst1.64	{d8-d9}, [r1 :128]
   181e0:	add	r1, r0, #32
   181e4:	vst1.64	{d8-d9}, [r1 :128]
   181e8:	add	r1, r0, #48	; 0x30
   181ec:	vst1.64	{d8-d9}, [r0 :128], r8
   181f0:	vst1.64	{d8-d9}, [r0 :128]
   181f4:	movw	r0, #3296	; 0xce0
   181f8:	vst1.64	{d8-d9}, [r1 :128]
   181fc:	mov	r1, #0
   18200:	movt	r0, #3
   18204:	bl	1277c <memset@plt>
   18208:	movw	r0, #3568	; 0xdf0
   1820c:	mov	r1, #0
   18210:	mov	r2, #176	; 0xb0
   18214:	movt	r0, #3
   18218:	bl	1277c <memset@plt>
   1821c:	movw	r1, #3872	; 0xf20
   18220:	mov	r0, #48	; 0x30
   18224:	vst1.64	{d8-d9}, [r6 :128]
   18228:	vst1.64	{d8-d9}, [r7 :128]
   1822c:	movt	r1, #3
   18230:	mov	r2, r1
   18234:	vst1.64	{d8-d9}, [r2 :128], r0
   18238:	movw	r0, #3744	; 0xea0
   1823c:	movt	r0, #3
   18240:	vst1.64	{d8-d9}, [r2 :128]
   18244:	add	r2, r0, #16
   18248:	vst1.64	{d8-d9}, [r2 :128]
   1824c:	add	r2, r0, #32
   18250:	vst1.64	{d8-d9}, [r2 :128]
   18254:	add	r2, r0, #48	; 0x30
   18258:	vst1.64	{d8-d9}, [r2 :128]
   1825c:	add	r2, r0, #64	; 0x40
   18260:	vst1.64	{d8-d9}, [r2 :128]
   18264:	add	r2, r0, #80	; 0x50
   18268:	vst1.64	{d8-d9}, [r2 :128]
   1826c:	add	r2, r0, #96	; 0x60
   18270:	vst1.64	{d8-d9}, [r0 :128], r5
   18274:	vst1.64	{d8-d9}, [r2 :128]
   18278:	movw	r2, #4160	; 0x1040
   1827c:	vst1.64	{d8-d9}, [r0 :128]
   18280:	movt	r2, #3
   18284:	add	r3, r2, #48	; 0x30
   18288:	add	r0, r2, #16
   1828c:	str	r4, [r2, #96]	; 0x60
   18290:	str	r4, [r2, #100]	; 0x64
   18294:	vst1.64	{d8-d9}, [r3 :128]
   18298:	add	r3, r2, #64	; 0x40
   1829c:	vst1.64	{d8-d9}, [r3 :128]
   182a0:	add	r3, r2, #80	; 0x50
   182a4:	vst1.64	{d8-d9}, [r3 :128]
   182a8:	add	r3, r9, #80	; 0x50
   182ac:	vst1.64	{d8-d9}, [r0 :128]
   182b0:	mov	r0, #32
   182b4:	vst1.64	{d8-d9}, [r3 :128]
   182b8:	add	r3, r1, #16
   182bc:	add	r1, r1, #32
   182c0:	vst1.64	{d8-d9}, [r2 :128], r0
   182c4:	vst1.64	{d8-d9}, [r3 :128]
   182c8:	vst1.64	{d8-d9}, [r1 :128]
   182cc:	vst1.64	{d8-d9}, [r2 :128]
   182d0:	vpop	{d8-d9}
   182d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   182d8:	movw	r0, #32240	; 0x7df0
   182dc:	movw	r1, #32368	; 0x7e70
   182e0:	movt	r0, #1
   182e4:	movt	r1, #1
   182e8:	b	1d164 <__gcov_flush@@Base+0xb8>
   182ec:	andeq	r0, r0, r0

000182f0 <init_token_int_type@@Base>:
   182f0:	movw	r1, #4272	; 0x10b0
   182f4:	add	r2, pc, #36	; 0x24
   182f8:	movt	r1, #3
   182fc:	vld1.64	{d16-d17}, [r2 :128]
   18300:	vld1.64	{d18-d19}, [r1 :128]
   18304:	vadd.i64	q8, q9, q8
   18308:	vst1.64	{d16-d17}, [r1 :128]
   1830c:	mov	r1, #0
   18310:	str	r1, [r0]
   18314:	bx	lr
   18318:	nop	{0}
   1831c:	nop	{0}
   18320:	andeq	r0, r0, r1
   18324:	andeq	r0, r0, r0
   18328:	andeq	r0, r0, r1
   1832c:	andeq	r0, r0, r0

00018330 <init_token_int_value@@Base>:
   18330:	movw	r2, #4272	; 0x10b0
   18334:	add	r3, pc, #36	; 0x24
   18338:	movt	r2, #3
   1833c:	vld1.64	{d16-d17}, [r3 :128]
   18340:	add	r2, r2, #16
   18344:	vld1.64	{d18-d19}, [r2 :128]
   18348:	vadd.i64	q8, q9, q8
   1834c:	vst1.64	{d16-d17}, [r2 :128]
   18350:	mov	r2, #1
   18354:	str	r2, [r0]
   18358:	str	r1, [r0, #4]
   1835c:	bx	lr
   18360:	andeq	r0, r0, r1
   18364:	andeq	r0, r0, r0
   18368:	andeq	r0, r0, r1
   1836c:	andeq	r0, r0, r0

00018370 <init_token_function@@Base>:
   18370:	movw	r2, #4272	; 0x10b0
   18374:	add	r3, pc, #36	; 0x24
   18378:	movt	r2, #3
   1837c:	vld1.64	{d16-d17}, [r3 :128]
   18380:	add	r2, r2, #32
   18384:	vld1.64	{d18-d19}, [r2 :128]
   18388:	vadd.i64	q8, q9, q8
   1838c:	vst1.64	{d16-d17}, [r2 :128]
   18390:	mov	r2, #2
   18394:	str	r2, [r0]
   18398:	str	r1, [r0, #4]
   1839c:	bx	lr
   183a0:	andeq	r0, r0, r1
   183a4:	andeq	r0, r0, r0
   183a8:	andeq	r0, r0, r1
   183ac:	andeq	r0, r0, r0

000183b0 <init_token_opar@@Base>:
   183b0:	movw	r1, #4272	; 0x10b0
   183b4:	add	r2, pc, #36	; 0x24
   183b8:	movt	r1, #3
   183bc:	vld1.64	{d16-d17}, [r2 :128]
   183c0:	add	r1, r1, #48	; 0x30
   183c4:	vld1.64	{d18-d19}, [r1 :128]
   183c8:	vadd.i64	q8, q9, q8
   183cc:	vst1.64	{d16-d17}, [r1 :128]
   183d0:	mov	r1, #3
   183d4:	str	r1, [r0]
   183d8:	bx	lr
   183dc:	nop	{0}
   183e0:	andeq	r0, r0, r1
   183e4:	andeq	r0, r0, r0
   183e8:	andeq	r0, r0, r1
   183ec:	andeq	r0, r0, r0

000183f0 <init_token_cpar@@Base>:
   183f0:	movw	r1, #4272	; 0x10b0
   183f4:	add	r2, pc, #36	; 0x24
   183f8:	movt	r1, #3
   183fc:	vld1.64	{d16-d17}, [r2 :128]
   18400:	add	r1, r1, #64	; 0x40
   18404:	vld1.64	{d18-d19}, [r1 :128]
   18408:	vadd.i64	q8, q9, q8
   1840c:	vst1.64	{d16-d17}, [r1 :128]
   18410:	mov	r1, #4
   18414:	str	r1, [r0]
   18418:	bx	lr
   1841c:	nop	{0}
   18420:	andeq	r0, r0, r1
   18424:	andeq	r0, r0, r0
   18428:	andeq	r0, r0, r1
   1842c:	andeq	r0, r0, r0

00018430 <init_token_obra@@Base>:
   18430:	movw	r1, #4272	; 0x10b0
   18434:	add	r2, pc, #36	; 0x24
   18438:	movt	r1, #3
   1843c:	vld1.64	{d16-d17}, [r2 :128]
   18440:	add	r1, r1, #80	; 0x50
   18444:	vld1.64	{d18-d19}, [r1 :128]
   18448:	vadd.i64	q8, q9, q8
   1844c:	vst1.64	{d16-d17}, [r1 :128]
   18450:	mov	r1, #5
   18454:	str	r1, [r0]
   18458:	bx	lr
   1845c:	nop	{0}
   18460:	andeq	r0, r0, r1
   18464:	andeq	r0, r0, r0
   18468:	andeq	r0, r0, r1
   1846c:	andeq	r0, r0, r0

00018470 <init_token_cbra@@Base>:
   18470:	movw	r1, #4272	; 0x10b0
   18474:	add	r2, pc, #36	; 0x24
   18478:	movt	r1, #3
   1847c:	vld1.64	{d16-d17}, [r2 :128]
   18480:	add	r1, r1, #96	; 0x60
   18484:	vld1.64	{d18-d19}, [r1 :128]
   18488:	vadd.i64	q8, q9, q8
   1848c:	vst1.64	{d16-d17}, [r1 :128]
   18490:	mov	r1, #6
   18494:	str	r1, [r0]
   18498:	bx	lr
   1849c:	nop	{0}
   184a0:	andeq	r0, r0, r1
   184a4:	andeq	r0, r0, r0
   184a8:	andeq	r0, r0, r1
   184ac:	andeq	r0, r0, r0

000184b0 <init_token_return@@Base>:
   184b0:	movw	r1, #4384	; 0x1120
   184b4:	add	r2, pc, #36	; 0x24
   184b8:	movt	r1, #3
   184bc:	vld1.64	{d16-d17}, [r2 :128]
   184c0:	vld1.64	{d18-d19}, [r1 :128]
   184c4:	vadd.i64	q8, q9, q8
   184c8:	vst1.64	{d16-d17}, [r1 :128]
   184cc:	mov	r1, #7
   184d0:	str	r1, [r0]
   184d4:	bx	lr
   184d8:	nop	{0}
   184dc:	nop	{0}
   184e0:	andeq	r0, r0, r1
   184e4:	andeq	r0, r0, r0
   184e8:	andeq	r0, r0, r1
   184ec:	andeq	r0, r0, r0

000184f0 <init_token_semicolon@@Base>:
   184f0:	movw	r1, #4384	; 0x1120
   184f4:	add	r2, pc, #36	; 0x24
   184f8:	movt	r1, #3
   184fc:	vld1.64	{d16-d17}, [r2 :128]
   18500:	add	r1, r1, #16
   18504:	vld1.64	{d18-d19}, [r1 :128]
   18508:	vadd.i64	q8, q9, q8
   1850c:	vst1.64	{d16-d17}, [r1 :128]
   18510:	mov	r1, #8
   18514:	str	r1, [r0]
   18518:	bx	lr
   1851c:	nop	{0}
   18520:	andeq	r0, r0, r1
   18524:	andeq	r0, r0, r0
   18528:	andeq	r0, r0, r1
   1852c:	andeq	r0, r0, r0

00018530 <init_token_eof@@Base>:
   18530:	movw	r1, #4384	; 0x1120
   18534:	add	r2, pc, #36	; 0x24
   18538:	movt	r1, #3
   1853c:	vld1.64	{d16-d17}, [r2 :128]
   18540:	add	r1, r1, #32
   18544:	vld1.64	{d18-d19}, [r1 :128]
   18548:	vadd.i64	q8, q9, q8
   1854c:	vst1.64	{d16-d17}, [r1 :128]
   18550:	mov	r1, #9
   18554:	str	r1, [r0]
   18558:	bx	lr
   1855c:	nop	{0}
   18560:	andeq	r0, r0, r1
   18564:	andeq	r0, r0, r0
   18568:	andeq	r0, r0, r1
   1856c:	andeq	r0, r0, r0

00018570 <init_token_if@@Base>:
   18570:	movw	r1, #4384	; 0x1120
   18574:	add	r2, pc, #36	; 0x24
   18578:	movt	r1, #3
   1857c:	vld1.64	{d16-d17}, [r2 :128]
   18580:	add	r1, r1, #48	; 0x30
   18584:	vld1.64	{d18-d19}, [r1 :128]
   18588:	vadd.i64	q8, q9, q8
   1858c:	vst1.64	{d16-d17}, [r1 :128]
   18590:	mov	r1, #10
   18594:	str	r1, [r0]
   18598:	bx	lr
   1859c:	nop	{0}
   185a0:	andeq	r0, r0, r1
   185a4:	andeq	r0, r0, r0
   185a8:	andeq	r0, r0, r1
   185ac:	andeq	r0, r0, r0

000185b0 <init_token_else@@Base>:
   185b0:	movw	r1, #4384	; 0x1120
   185b4:	add	r2, pc, #36	; 0x24
   185b8:	movt	r1, #3
   185bc:	vld1.64	{d16-d17}, [r2 :128]
   185c0:	add	r1, r1, #64	; 0x40
   185c4:	vld1.64	{d18-d19}, [r1 :128]
   185c8:	vadd.i64	q8, q9, q8
   185cc:	vst1.64	{d16-d17}, [r1 :128]
   185d0:	mov	r1, #11
   185d4:	str	r1, [r0]
   185d8:	bx	lr
   185dc:	nop	{0}
   185e0:	andeq	r0, r0, r1
   185e4:	andeq	r0, r0, r0
   185e8:	andeq	r0, r0, r1
   185ec:	andeq	r0, r0, r0

000185f0 <init_token_boolean_op@@Base>:
   185f0:	movw	r2, #4384	; 0x1120
   185f4:	add	r3, pc, #36	; 0x24
   185f8:	movt	r2, #3
   185fc:	vld1.64	{d16-d17}, [r3 :128]
   18600:	add	r2, r2, #80	; 0x50
   18604:	vld1.64	{d18-d19}, [r2 :128]
   18608:	vadd.i64	q8, q9, q8
   1860c:	vst1.64	{d16-d17}, [r2 :128]
   18610:	mov	r2, #12
   18614:	str	r2, [r0]
   18618:	str	r1, [r0, #4]
   1861c:	bx	lr
   18620:	andeq	r0, r0, r1
   18624:	andeq	r0, r0, r0
   18628:	andeq	r0, r0, r1
   1862c:	andeq	r0, r0, r0

00018630 <free_token_int_type@@Base>:
   18630:	movw	r1, #4384	; 0x1120
   18634:	add	r2, pc, #36	; 0x24
   18638:	movt	r1, #3
   1863c:	vld1.64	{d16-d17}, [r2 :128]
   18640:	add	r1, r1, #96	; 0x60
   18644:	vld1.64	{d18-d19}, [r1 :128]
   18648:	vadd.i64	q8, q9, q8
   1864c:	vst1.64	{d16-d17}, [r1 :128]
   18650:	b	1265c <free@plt>
   18654:	nop	{0}
   18658:	nop	{0}
   1865c:	nop	{0}
   18660:	andeq	r0, r0, r1
   18664:	andeq	r0, r0, r0
   18668:	andeq	r0, r0, r1
   1866c:	andeq	r0, r0, r0

00018670 <free_token_int_value@@Base>:
   18670:	movw	r1, #4496	; 0x1190
   18674:	add	r2, pc, #20
   18678:	movt	r1, #3
   1867c:	vld1.64	{d16-d17}, [r2 :128]
   18680:	vld1.64	{d18-d19}, [r1 :128]
   18684:	vadd.i64	q8, q9, q8
   18688:	vst1.64	{d16-d17}, [r1 :128]
   1868c:	b	1265c <free@plt>
   18690:	andeq	r0, r0, r1
   18694:	andeq	r0, r0, r0
   18698:	andeq	r0, r0, r1
   1869c:	andeq	r0, r0, r0

000186a0 <free_token_function@@Base>:
   186a0:	movw	r1, #4496	; 0x1190
   186a4:	add	r2, pc, #36	; 0x24
   186a8:	movt	r1, #3
   186ac:	vld1.64	{d16-d17}, [r2 :128]
   186b0:	add	r1, r1, #16
   186b4:	vld1.64	{d18-d19}, [r1 :128]
   186b8:	vadd.i64	q8, q9, q8
   186bc:	vst1.64	{d16-d17}, [r1 :128]
   186c0:	b	1265c <free@plt>
   186c4:	nop	{0}
   186c8:	nop	{0}
   186cc:	nop	{0}
   186d0:	andeq	r0, r0, r1
   186d4:	andeq	r0, r0, r0
   186d8:	andeq	r0, r0, r1
   186dc:	andeq	r0, r0, r0

000186e0 <free_token_opar@@Base>:
   186e0:	movw	r1, #4496	; 0x1190
   186e4:	add	r2, pc, #36	; 0x24
   186e8:	movt	r1, #3
   186ec:	vld1.64	{d16-d17}, [r2 :128]
   186f0:	add	r1, r1, #32
   186f4:	vld1.64	{d18-d19}, [r1 :128]
   186f8:	vadd.i64	q8, q9, q8
   186fc:	vst1.64	{d16-d17}, [r1 :128]
   18700:	b	1265c <free@plt>
   18704:	nop	{0}
   18708:	nop	{0}
   1870c:	nop	{0}
   18710:	andeq	r0, r0, r1
   18714:	andeq	r0, r0, r0
   18718:	andeq	r0, r0, r1
   1871c:	andeq	r0, r0, r0

00018720 <free_token_cpar@@Base>:
   18720:	movw	r1, #4496	; 0x1190
   18724:	add	r2, pc, #36	; 0x24
   18728:	movt	r1, #3
   1872c:	vld1.64	{d16-d17}, [r2 :128]
   18730:	add	r1, r1, #48	; 0x30
   18734:	vld1.64	{d18-d19}, [r1 :128]
   18738:	vadd.i64	q8, q9, q8
   1873c:	vst1.64	{d16-d17}, [r1 :128]
   18740:	b	1265c <free@plt>
   18744:	nop	{0}
   18748:	nop	{0}
   1874c:	nop	{0}
   18750:	andeq	r0, r0, r1
   18754:	andeq	r0, r0, r0
   18758:	andeq	r0, r0, r1
   1875c:	andeq	r0, r0, r0

00018760 <free_token_obra@@Base>:
   18760:	movw	r1, #4496	; 0x1190
   18764:	add	r2, pc, #36	; 0x24
   18768:	movt	r1, #3
   1876c:	vld1.64	{d16-d17}, [r2 :128]
   18770:	add	r1, r1, #64	; 0x40
   18774:	vld1.64	{d18-d19}, [r1 :128]
   18778:	vadd.i64	q8, q9, q8
   1877c:	vst1.64	{d16-d17}, [r1 :128]
   18780:	b	1265c <free@plt>
   18784:	nop	{0}
   18788:	nop	{0}
   1878c:	nop	{0}
   18790:	andeq	r0, r0, r1
   18794:	andeq	r0, r0, r0
   18798:	andeq	r0, r0, r1
   1879c:	andeq	r0, r0, r0

000187a0 <free_token_cbra@@Base>:
   187a0:	movw	r1, #4496	; 0x1190
   187a4:	add	r2, pc, #36	; 0x24
   187a8:	movt	r1, #3
   187ac:	vld1.64	{d16-d17}, [r2 :128]
   187b0:	add	r1, r1, #80	; 0x50
   187b4:	vld1.64	{d18-d19}, [r1 :128]
   187b8:	vadd.i64	q8, q9, q8
   187bc:	vst1.64	{d16-d17}, [r1 :128]
   187c0:	b	1265c <free@plt>
   187c4:	nop	{0}
   187c8:	nop	{0}
   187cc:	nop	{0}
   187d0:	andeq	r0, r0, r1
   187d4:	andeq	r0, r0, r0
   187d8:	andeq	r0, r0, r1
   187dc:	andeq	r0, r0, r0

000187e0 <free_token_return@@Base>:
   187e0:	movw	r1, #4496	; 0x1190
   187e4:	add	r2, pc, #36	; 0x24
   187e8:	movt	r1, #3
   187ec:	vld1.64	{d16-d17}, [r2 :128]
   187f0:	add	r1, r1, #96	; 0x60
   187f4:	vld1.64	{d18-d19}, [r1 :128]
   187f8:	vadd.i64	q8, q9, q8
   187fc:	vst1.64	{d16-d17}, [r1 :128]
   18800:	b	1265c <free@plt>
   18804:	nop	{0}
   18808:	nop	{0}
   1880c:	nop	{0}
   18810:	andeq	r0, r0, r1
   18814:	andeq	r0, r0, r0
   18818:	andeq	r0, r0, r1
   1881c:	andeq	r0, r0, r0

00018820 <free_token_semicolon@@Base>:
   18820:	movw	r1, #4608	; 0x1200
   18824:	add	r2, pc, #20
   18828:	movt	r1, #3
   1882c:	vld1.64	{d16-d17}, [r2 :128]
   18830:	vld1.64	{d18-d19}, [r1 :128]
   18834:	vadd.i64	q8, q9, q8
   18838:	vst1.64	{d16-d17}, [r1 :128]
   1883c:	b	1265c <free@plt>
   18840:	andeq	r0, r0, r1
   18844:	andeq	r0, r0, r0
   18848:	andeq	r0, r0, r1
   1884c:	andeq	r0, r0, r0

00018850 <free_token_eof@@Base>:
   18850:	movw	r1, #4608	; 0x1200
   18854:	add	r2, pc, #36	; 0x24
   18858:	movt	r1, #3
   1885c:	vld1.64	{d16-d17}, [r2 :128]
   18860:	add	r1, r1, #16
   18864:	vld1.64	{d18-d19}, [r1 :128]
   18868:	vadd.i64	q8, q9, q8
   1886c:	vst1.64	{d16-d17}, [r1 :128]
   18870:	b	1265c <free@plt>
   18874:	nop	{0}
   18878:	nop	{0}
   1887c:	nop	{0}
   18880:	andeq	r0, r0, r1
   18884:	andeq	r0, r0, r0
   18888:	andeq	r0, r0, r1
   1888c:	andeq	r0, r0, r0

00018890 <free_token_if@@Base>:
   18890:	movw	r1, #4608	; 0x1200
   18894:	add	r2, pc, #36	; 0x24
   18898:	movt	r1, #3
   1889c:	vld1.64	{d16-d17}, [r2 :128]
   188a0:	add	r1, r1, #32
   188a4:	vld1.64	{d18-d19}, [r1 :128]
   188a8:	vadd.i64	q8, q9, q8
   188ac:	vst1.64	{d16-d17}, [r1 :128]
   188b0:	b	1265c <free@plt>
   188b4:	nop	{0}
   188b8:	nop	{0}
   188bc:	nop	{0}
   188c0:	andeq	r0, r0, r1
   188c4:	andeq	r0, r0, r0
   188c8:	andeq	r0, r0, r1
   188cc:	andeq	r0, r0, r0

000188d0 <free_token_else@@Base>:
   188d0:	movw	r1, #4608	; 0x1200
   188d4:	add	r2, pc, #36	; 0x24
   188d8:	movt	r1, #3
   188dc:	vld1.64	{d16-d17}, [r2 :128]
   188e0:	add	r1, r1, #48	; 0x30
   188e4:	vld1.64	{d18-d19}, [r1 :128]
   188e8:	vadd.i64	q8, q9, q8
   188ec:	vst1.64	{d16-d17}, [r1 :128]
   188f0:	b	1265c <free@plt>
   188f4:	nop	{0}
   188f8:	nop	{0}
   188fc:	nop	{0}
   18900:	andeq	r0, r0, r1
   18904:	andeq	r0, r0, r0
   18908:	andeq	r0, r0, r1
   1890c:	andeq	r0, r0, r0

00018910 <free_token_boolean_op@@Base>:
   18910:	push	{r4, r5, fp, lr}
   18914:	add	fp, sp, #8
   18918:	movw	r5, #4608	; 0x1200
   1891c:	mov	r4, r0
   18920:	movt	r5, #3
   18924:	ldrd	r0, [r5, #64]	; 0x40
   18928:	adds	r0, r0, #1
   1892c:	adc	r1, r1, #0
   18930:	strd	r0, [r5, #64]	; 0x40
   18934:	ldr	r0, [r4, #4]
   18938:	cmp	r0, #0
   1893c:	beq	1895c <free_token_boolean_op@@Base+0x4c>
   18940:	ldrd	r2, [r5, #72]	; 0x48
   18944:	adds	r2, r2, #1
   18948:	adc	r3, r3, #0
   1894c:	strd	r2, [r5, #72]	; 0x48
   18950:	bl	1265c <free@plt>
   18954:	add	r0, r5, #88	; 0x58
   18958:	b	18960 <free_token_boolean_op@@Base+0x50>
   1895c:	add	r0, r5, #80	; 0x50
   18960:	ldrd	r2, [r0]
   18964:	adds	r2, r2, #1
   18968:	adc	r3, r3, #0
   1896c:	strd	r2, [r0]
   18970:	ldrd	r0, [r5, #96]	; 0x60
   18974:	adds	r0, r0, #1
   18978:	adc	r1, r1, #0
   1897c:	strd	r0, [r5, #96]	; 0x60
   18980:	mov	r0, r4
   18984:	pop	{r4, r5, fp, lr}
   18988:	b	1265c <free@plt>
   1898c:	push	{r4, r5, r6, lr}
   18990:	sub	sp, sp, #8
   18994:	movw	r0, #59303	; 0xe7a7
   18998:	movw	r1, #55713	; 0xd9a1
   1899c:	movw	r2, #23366	; 0x5b46
   189a0:	movt	r0, #1
   189a4:	movt	r1, #1
   189a8:	movt	r2, #47030	; 0xb7b6
   189ac:	bl	1a7e8 <next@@Base+0x1988>
   189b0:	movw	r0, #60384	; 0xebe0
   189b4:	movw	r6, #59856	; 0xe9d0
   189b8:	mov	r5, #0
   189bc:	movt	r0, #1
   189c0:	movt	r6, #1
   189c4:	add	r4, r0, #4
   189c8:	mov	r3, r6
   189cc:	ldr	r0, [r3, r5]!
   189d0:	ldr	r1, [r3, #16]
   189d4:	str	r1, [sp]
   189d8:	ldmib	r3, {r1, r2}
   189dc:	ldrb	r3, [r3, #12]
   189e0:	bl	1af08 <next@@Base+0x20a8>
   189e4:	ldrd	r0, [r4, #-4]
   189e8:	bl	1b7bc <next@@Base+0x295c>
   189ec:	add	r5, r5, #20
   189f0:	add	r4, r4, #8
   189f4:	cmp	r5, #520	; 0x208
   189f8:	bne	189c8 <free_token_boolean_op@@Base+0xb8>
   189fc:	bl	1bf44 <next@@Base+0x30e4>
   18a00:	add	sp, sp, #8
   18a04:	pop	{r4, r5, r6, lr}
   18a08:	b	1ccb0 <next@@Base+0x3e50>
   18a0c:	push	{fp, lr}
   18a10:	bl	1898c <free_token_boolean_op@@Base+0x7c>
   18a14:	movw	r0, #4272	; 0x10b0
   18a18:	vmov.i32	q8, #0	; 0x00000000
   18a1c:	movt	r0, #3
   18a20:	add	r1, r0, #80	; 0x50
   18a24:	vst1.64	{d16-d17}, [r1 :128]
   18a28:	add	r1, r0, #64	; 0x40
   18a2c:	vst1.64	{d16-d17}, [r1 :128]
   18a30:	add	r1, r0, #48	; 0x30
   18a34:	vst1.64	{d16-d17}, [r1 :128]
   18a38:	add	r1, r0, #32
   18a3c:	vst1.64	{d16-d17}, [r1 :128]
   18a40:	add	r1, r0, #16
   18a44:	vst1.64	{d16-d17}, [r1 :128]
   18a48:	movw	r1, #4384	; 0x1120
   18a4c:	movt	r1, #3
   18a50:	add	r2, r1, #80	; 0x50
   18a54:	vst1.64	{d16-d17}, [r2 :128]
   18a58:	add	r2, r1, #64	; 0x40
   18a5c:	vst1.64	{d16-d17}, [r2 :128]
   18a60:	add	r2, r1, #48	; 0x30
   18a64:	vst1.64	{d16-d17}, [r2 :128]
   18a68:	add	r2, r1, #32
   18a6c:	vst1.64	{d16-d17}, [r2 :128]
   18a70:	add	r2, r1, #16
   18a74:	vst1.64	{d16-d17}, [r2 :128]
   18a78:	movw	r2, #4496	; 0x1190
   18a7c:	movt	r2, #3
   18a80:	add	r3, r2, #80	; 0x50
   18a84:	vst1.64	{d16-d17}, [r3 :128]
   18a88:	add	r3, r2, #64	; 0x40
   18a8c:	vst1.64	{d16-d17}, [r3 :128]
   18a90:	add	r3, r2, #48	; 0x30
   18a94:	vst1.64	{d16-d17}, [r3 :128]
   18a98:	add	r3, r2, #32
   18a9c:	vst1.64	{d16-d17}, [r3 :128]
   18aa0:	add	r3, r2, #16
   18aa4:	vst1.64	{d16-d17}, [r3 :128]
   18aa8:	mov	r3, #96	; 0x60
   18aac:	vst1.64	{d16-d17}, [r0 :128], r3
   18ab0:	vst1.64	{d16-d17}, [r1 :128], r3
   18ab4:	vst1.64	{d16-d17}, [r2 :128], r3
   18ab8:	vst1.64	{d16-d17}, [r0 :128]
   18abc:	movw	r0, #4608	; 0x1200
   18ac0:	vst1.64	{d16-d17}, [r1 :128]
   18ac4:	vst1.64	{d16-d17}, [r2 :128]
   18ac8:	movt	r0, #3
   18acc:	add	r1, r0, #48	; 0x30
   18ad0:	mov	r2, r0
   18ad4:	vst1.64	{d16-d17}, [r1 :128]
   18ad8:	add	r1, r0, #32
   18adc:	vst1.64	{d16-d17}, [r1 :128]
   18ae0:	add	r1, r0, #16
   18ae4:	vst1.64	{d16-d17}, [r1 :128]
   18ae8:	mov	r1, #80	; 0x50
   18aec:	vst1.64	{d16-d17}, [r2 :128], r1
   18af0:	add	r1, r0, #64	; 0x40
   18af4:	vst1.64	{d16-d17}, [r1 :128]
   18af8:	mov	r1, #0
   18afc:	vst1.64	{d16-d17}, [r2 :128]
   18b00:	str	r1, [r0, #96]	; 0x60
   18b04:	str	r1, [r0, #100]	; 0x64
   18b08:	pop	{fp, pc}
   18b0c:	movw	r0, #35212	; 0x898c
   18b10:	movw	r1, #35340	; 0x8a0c
   18b14:	movt	r0, #1
   18b18:	movt	r1, #1
   18b1c:	b	1d164 <__gcov_flush@@Base+0xb8>

00018b20 <init_lexer@@Base>:
   18b20:	movw	r2, #5728	; 0x1660
   18b24:	add	r3, pc, #36	; 0x24
   18b28:	movt	r2, #3
   18b2c:	vld1.64	{d16-d17}, [r3 :128]
   18b30:	vld1.64	{d18-d19}, [r2 :128]
   18b34:	vadd.i64	q8, q9, q8
   18b38:	vst1.64	{d16-d17}, [r2 :128]
   18b3c:	mov	r2, #0
   18b40:	stm	r0, {r1, r2}
   18b44:	str	r2, [r0, #8]
   18b48:	bx	lr
   18b4c:	nop	{0}
   18b50:	andeq	r0, r0, r1
   18b54:	andeq	r0, r0, r0
   18b58:	andeq	r0, r0, r1
   18b5c:	andeq	r0, r0, r0

00018b60 <destroy_lexer@@Base>:
   18b60:	push	{r4, sl, fp, lr}
   18b64:	add	fp, sp, #8
   18b68:	movw	r4, #5824	; 0x16c0
   18b6c:	movt	r4, #3
   18b70:	ldrd	r2, [r4, #32]
   18b74:	adds	r2, r2, #1
   18b78:	adc	r3, r3, #0
   18b7c:	strd	r2, [r4, #32]
   18b80:	ldr	r0, [r0, #4]
   18b84:	cmp	r0, #0
   18b88:	beq	18bc8 <destroy_lexer@@Base+0x68>
   18b8c:	movw	r1, #5728	; 0x1660
   18b90:	add	r2, pc, #88	; 0x58
   18b94:	movt	r1, #3
   18b98:	vld1.64	{d16-d17}, [r2 :128]
   18b9c:	ldrd	r2, [r4, #40]	; 0x28
   18ba0:	add	r1, r1, #16
   18ba4:	vld1.64	{d18-d19}, [r1 :128]
   18ba8:	adds	r2, r2, #1
   18bac:	adc	r3, r3, #0
   18bb0:	strd	r2, [r4, #40]	; 0x28
   18bb4:	vadd.i64	q8, q9, q8
   18bb8:	vst1.64	{d16-d17}, [r1 :128]
   18bbc:	bl	1265c <free@plt>
   18bc0:	add	r0, r4, #56	; 0x38
   18bc4:	b	18bcc <destroy_lexer@@Base+0x6c>
   18bc8:	add	r0, r4, #48	; 0x30
   18bcc:	ldrd	r2, [r0]
   18bd0:	adds	r2, r2, #1
   18bd4:	adc	r3, r3, #0
   18bd8:	strd	r2, [r0]
   18bdc:	ldrd	r0, [r4, #64]	; 0x40
   18be0:	adds	r0, r0, #1
   18be4:	adc	r1, r1, #0
   18be8:	strd	r0, [r4, #64]	; 0x40
   18bec:	pop	{r4, sl, fp, pc}
   18bf0:	andeq	r0, r0, r1
   18bf4:	andeq	r0, r0, r0
   18bf8:	andeq	r0, r0, r1
   18bfc:	andeq	r0, r0, r0

00018c00 <free_stack_base@@Base>:
   18c00:	movw	r1, #5728	; 0x1660
   18c04:	add	r2, pc, #36	; 0x24
   18c08:	movt	r1, #3
   18c0c:	vld1.64	{d16-d17}, [r2 :128]
   18c10:	add	r1, r1, #16
   18c14:	vld1.64	{d18-d19}, [r1 :128]
   18c18:	vadd.i64	q8, q9, q8
   18c1c:	vst1.64	{d16-d17}, [r1 :128]
   18c20:	b	1265c <free@plt>
   18c24:	nop	{0}
   18c28:	nop	{0}
   18c2c:	nop	{0}
   18c30:	andeq	r0, r0, r1
   18c34:	andeq	r0, r0, r0
   18c38:	andeq	r0, r0, r1
   18c3c:	andeq	r0, r0, r0

00018c40 <push_back@@Base>:
   18c40:	push	{r4, r5, fp, lr}
   18c44:	add	fp, sp, #8
   18c48:	mov	r5, r0
   18c4c:	movw	r0, #5728	; 0x1660
   18c50:	mov	r4, r1
   18c54:	add	r1, pc, #52	; 0x34
   18c58:	movt	r0, #3
   18c5c:	vld1.64	{d16-d17}, [r1 :128]
   18c60:	add	r0, r0, #32
   18c64:	vld1.64	{d18-d19}, [r0 :128]
   18c68:	vadd.i64	q8, q9, q8
   18c6c:	vst1.64	{d16-d17}, [r0 :128]
   18c70:	mov	r0, #8
   18c74:	bl	126ec <malloc@plt>
   18c78:	ldr	r1, [r5, #4]
   18c7c:	stm	r0, {r1, r4}
   18c80:	str	r0, [r5, #4]
   18c84:	pop	{r4, r5, fp, pc}
   18c88:	nop	{0}
   18c8c:	nop	{0}
   18c90:	andeq	r0, r0, r1
   18c94:	andeq	r0, r0, r0
   18c98:	andeq	r0, r0, r1
   18c9c:	andeq	r0, r0, r0

00018ca0 <get_char@@Base>:
   18ca0:	movw	r1, #5728	; 0x1660
   18ca4:	add	r2, pc, #52	; 0x34
   18ca8:	movt	r1, #3
   18cac:	vld1.64	{d16-d17}, [r2 :128]
   18cb0:	add	r1, r1, #48	; 0x30
   18cb4:	vld1.64	{d18-d19}, [r1 :128]
   18cb8:	vadd.i64	q8, q9, q8
   18cbc:	vst1.64	{d16-d17}, [r1 :128]
   18cc0:	ldr	r2, [r0, #8]
   18cc4:	ldr	r1, [r0]
   18cc8:	add	r3, r2, #1
   18ccc:	str	r3, [r0, #8]
   18cd0:	ldrb	r0, [r1, r2]
   18cd4:	bx	lr
   18cd8:	nop	{0}
   18cdc:	nop	{0}
   18ce0:	andeq	r0, r0, r1
   18ce4:	andeq	r0, r0, r0
   18ce8:	andeq	r0, r0, r1
   18cec:	andeq	r0, r0, r0

00018cf0 <push_back_chars@@Base>:
   18cf0:	push	{r4, r5, r6, r7, fp, lr}
   18cf4:	add	fp, sp, #16
   18cf8:	movw	r2, #5824	; 0x16c0
   18cfc:	movt	r2, #3
   18d00:	ldrd	r4, [r2]
   18d04:	adds	r4, r4, #1
   18d08:	adc	r5, r5, #0
   18d0c:	strd	r4, [r2]
   18d10:	ldr	r3, [r0, #8]
   18d14:	cmp	r3, r1
   18d18:	bcc	18d4c <push_back_chars@@Base+0x5c>
   18d1c:	ldrd	r4, [r2, #8]
   18d20:	ldrd	r6, [r2, #24]
   18d24:	sub	r1, r3, r1
   18d28:	adds	r4, r4, #1
   18d2c:	adc	r5, r5, #0
   18d30:	adds	r6, r6, #1
   18d34:	adc	r7, r7, #0
   18d38:	str	r6, [r2, #24]
   18d3c:	strd	r4, [r2, #8]
   18d40:	str	r7, [r2, #28]
   18d44:	str	r1, [r0, #8]
   18d48:	pop	{r4, r5, r6, r7, fp, pc}
   18d4c:	ldrd	r0, [r2, #16]
   18d50:	adds	r0, r0, #1
   18d54:	adc	r1, r1, #0
   18d58:	strd	r0, [r2, #16]
   18d5c:	movw	r0, #224	; 0xe0
   18d60:	mov	r1, #32
   18d64:	mov	r2, #1
   18d68:	movt	r0, #3
   18d6c:	ldr	r3, [r0]
   18d70:	movw	r0, #60592	; 0xecb0
   18d74:	movt	r0, #1
   18d78:	bl	126c8 <fwrite@plt>
   18d7c:	mov	r0, #1
   18d80:	bl	12728 <exit@plt>
   18d84:	nop	{0}
   18d88:	nop	{0}
   18d8c:	nop	{0}

00018d90 <push_back_one_char@@Base>:
   18d90:	push	{r4, r5, r6, r7, fp, lr}
   18d94:	add	fp, sp, #16
   18d98:	movw	r1, #5728	; 0x1660
   18d9c:	add	r3, pc, #172	; 0xac
   18da0:	movt	r1, #3
   18da4:	vld1.64	{d16-d17}, [r3 :128]
   18da8:	add	r2, r1, #64	; 0x40
   18dac:	movw	r1, #5824	; 0x16c0
   18db0:	movt	r1, #3
   18db4:	vld1.64	{d18-d19}, [r2 :128]
   18db8:	ldrd	r4, [r1]
   18dbc:	vadd.i64	q8, q9, q8
   18dc0:	adds	r4, r4, #1
   18dc4:	adc	r5, r5, #0
   18dc8:	strd	r4, [r1]
   18dcc:	vst1.64	{d16-d17}, [r2 :128]
   18dd0:	ldr	r2, [r0, #8]
   18dd4:	cmp	r2, #0
   18dd8:	beq	18e0c <push_back_one_char@@Base+0x7c>
   18ddc:	ldrd	r4, [r1, #8]
   18de0:	ldrd	r6, [r1, #24]
   18de4:	adds	r4, r4, #1
   18de8:	adc	r5, r5, #0
   18dec:	adds	r3, r6, #1
   18df0:	str	r3, [r1, #24]
   18df4:	adc	r3, r7, #0
   18df8:	strd	r4, [r1, #8]
   18dfc:	str	r3, [r1, #28]
   18e00:	sub	r1, r2, #1
   18e04:	str	r1, [r0, #8]
   18e08:	pop	{r4, r5, r6, r7, fp, pc}
   18e0c:	ldr	r0, [r1, #16]
   18e10:	ldr	r3, [r1, #20]
   18e14:	mov	r2, #1
   18e18:	adds	r0, r0, #1
   18e1c:	str	r0, [r1, #16]
   18e20:	movw	r0, #224	; 0xe0
   18e24:	adc	r3, r3, #0
   18e28:	movt	r0, #3
   18e2c:	str	r3, [r1, #20]
   18e30:	mov	r1, #32
   18e34:	ldr	r3, [r0]
   18e38:	movw	r0, #60592	; 0xecb0
   18e3c:	movt	r0, #1
   18e40:	bl	126c8 <fwrite@plt>
   18e44:	mov	r0, #1
   18e48:	bl	12728 <exit@plt>
   18e4c:	nop	{0}
   18e50:	andeq	r0, r0, r1
   18e54:	andeq	r0, r0, r0
   18e58:	andeq	r0, r0, r1
   18e5c:	andeq	r0, r0, r0

00018e60 <next@@Base>:
   18e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e64:	add	fp, sp, #28
   18e68:	sub	sp, sp, #524	; 0x20c
   18e6c:	movw	r7, #4720	; 0x1270
   18e70:	mov	r4, r0
   18e74:	movw	r5, #5728	; 0x1660
   18e78:	movt	r7, #3
   18e7c:	movt	r5, #3
   18e80:	ldrd	r0, [r7]
   18e84:	adds	r0, r0, #1
   18e88:	adc	r1, r1, #0
   18e8c:	strd	r0, [r7]
   18e90:	ldr	r0, [r4, #4]
   18e94:	cmp	r0, #0
   18e98:	beq	18ee4 <next@@Base+0x84>
   18e9c:	ldrd	r2, [r7, #8]
   18ea0:	adds	r2, r2, #1
   18ea4:	adc	r3, r3, #0
   18ea8:	strd	r2, [r7, #8]
   18eac:	ldr	r1, [r0]
   18eb0:	str	r1, [r4, #4]
   18eb4:	mov	r1, #0
   18eb8:	ldr	r6, [r0, #4]
   18ebc:	str	r1, [r0, #4]
   18ec0:	add	r2, pc, #888	; 0x378
   18ec4:	add	r1, r5, #16
   18ec8:	vld1.64	{d16-d17}, [r2 :128]
   18ecc:	vld1.64	{d18-d19}, [r1 :128]
   18ed0:	vadd.i64	q8, q9, q8
   18ed4:	vst1.64	{d16-d17}, [r1 :128]
   18ed8:	bl	1265c <free@plt>
   18edc:	add	r0, r7, #24
   18ee0:	b	193dc <next@@Base+0x57c>
   18ee4:	add	r1, pc, #852	; 0x354
   18ee8:	add	lr, r5, #48	; 0x30
   18eec:	ldrd	r2, [r7, #16]
   18ef0:	vld1.64	{d16-d17}, [r1 :128]
   18ef4:	vld1.64	{d18-d19}, [lr :128]
   18ef8:	adds	r2, r2, #1
   18efc:	adc	r3, r3, #0
   18f00:	vadd.i64	q8, q9, q8
   18f04:	strd	r2, [r7, #16]
   18f08:	vst1.64	{d16-d17}, [lr :128]
   18f0c:	ldr	r2, [r4, #8]
   18f10:	ldr	r1, [r4]
   18f14:	add	r3, r2, #1
   18f18:	str	r3, [r4, #8]
   18f1c:	ldrb	r9, [r1, r2]
   18f20:	ldrd	r2, [r7, #32]
   18f24:	adds	r2, r2, #1
   18f28:	adc	r3, r3, #0
   18f2c:	cmp	r9, #0
   18f30:	strd	r2, [r7, #32]
   18f34:	beq	193b8 <next@@Base+0x558>
   18f38:	mov	r2, #0
   18f3c:	add	sl, r7, #56	; 0x38
   18f40:	add	r3, r7, #112	; 0x70
   18f44:	add	ip, sp, #8
   18f48:	mov	r8, #0
   18f4c:	b	18f84 <next@@Base+0x124>
   18f50:	mov	r1, sl
   18f54:	ldm	r1, {r0, r5}
   18f58:	adds	r0, r0, #1
   18f5c:	adc	r5, r5, #0
   18f60:	stm	r1, {r0, r5}
   18f64:	ldr	r0, [r7, #984]	; 0x3d8
   18f68:	ldr	r1, [r7, #988]	; 0x3dc
   18f6c:	adds	r0, r0, #1
   18f70:	adc	r1, r1, #0
   18f74:	tst	r9, #255	; 0xff
   18f78:	str	r0, [r7, #984]	; 0x3d8
   18f7c:	str	r1, [r7, #988]	; 0x3dc
   18f80:	beq	193b8 <next@@Base+0x558>
   18f84:	ldr	r1, [r7, #40]	; 0x28
   18f88:	ldr	r5, [r7, #44]	; 0x2c
   18f8c:	adds	r1, r1, #1
   18f90:	adc	r5, r5, #0
   18f94:	cmp	r2, #5
   18f98:	str	r1, [r7, #40]	; 0x28
   18f9c:	str	r5, [r7, #44]	; 0x2c
   18fa0:	bhi	18f50 <next@@Base+0xf0>
   18fa4:	add	r1, pc, #0
   18fa8:	ldr	pc, [r1, r2, lsl #2]
   18fac:	andeq	r8, r1, r4, asr #31
   18fb0:	andeq	r9, r1, r0, lsl r4
   18fb4:	andeq	r9, r1, r8, ror #15
   18fb8:	andeq	r9, r1, r8, asr #9
   18fbc:	andeq	r9, r1, ip, lsl #12
   18fc0:	andeq	r9, r1, ip, lsl #17
   18fc4:	ldr	r2, [r7, #64]	; 0x40
   18fc8:	ldr	r1, [r7, #68]	; 0x44
   18fcc:	adds	r2, r2, #1
   18fd0:	str	r2, [r7, #64]	; 0x40
   18fd4:	uxtb	r2, r9
   18fd8:	adc	r1, r1, #0
   18fdc:	str	r1, [r7, #68]	; 0x44
   18fe0:	mov	r1, r3
   18fe4:	cmp	r2, #9
   18fe8:	beq	19038 <next@@Base+0x1d8>
   18fec:	ldr	r1, [r7, #120]	; 0x78
   18ff0:	ldr	r5, [r7, #124]	; 0x7c
   18ff4:	adds	r1, r1, #1
   18ff8:	adc	r5, r5, #0
   18ffc:	cmp	r2, #32
   19000:	str	r1, [r7, #120]	; 0x78
   19004:	str	r5, [r7, #124]	; 0x7c
   19008:	bne	19014 <next@@Base+0x1b4>
   1900c:	add	r1, r7, #128	; 0x80
   19010:	b	19038 <next@@Base+0x1d8>
   19014:	ldr	r1, [r7, #136]	; 0x88
   19018:	ldr	r5, [r7, #140]	; 0x8c
   1901c:	adds	r1, r1, #1
   19020:	adc	r5, r5, #0
   19024:	cmp	r2, #10
   19028:	str	r1, [r7, #136]	; 0x88
   1902c:	str	r5, [r7, #140]	; 0x8c
   19030:	bne	19080 <next@@Base+0x220>
   19034:	add	r1, r7, #144	; 0x90
   19038:	ldm	r1, {r2, r5}
   1903c:	adds	r2, r2, #1
   19040:	adc	r5, r5, #0
   19044:	stm	r1, {r2, r5}
   19048:	add	r1, pc, #496	; 0x1f0
   1904c:	vld1.64	{d18-d19}, [lr :128]
   19050:	vld1.64	{d16-d17}, [r1 :128]
   19054:	vadd.i64	q8, q9, q8
   19058:	vst1.64	{d16-d17}, [lr :128]
   1905c:	ldr	r5, [r4, #8]
   19060:	ldr	r2, [r4]
   19064:	add	r1, r5, #1
   19068:	add	r5, r2, r5
   1906c:	mov	r2, #0
   19070:	str	r1, [r4, #8]
   19074:	add	r1, r7, #160	; 0xa0
   19078:	ldrb	r9, [r5]
   1907c:	b	18f54 <next@@Base+0xf4>
   19080:	ldr	r1, [r7, #152]	; 0x98
   19084:	ldr	r5, [r7, #156]	; 0x9c
   19088:	adds	r1, r1, #1
   1908c:	adc	r5, r5, #0
   19090:	cmp	r2, #48	; 0x30
   19094:	str	r1, [r7, #152]	; 0x98
   19098:	str	r5, [r7, #156]	; 0x9c
   1909c:	beq	19ab8 <next@@Base+0xc58>
   190a0:	ldr	r1, [r7, #176]	; 0xb0
   190a4:	ldr	r5, [r7, #180]	; 0xb4
   190a8:	adds	r1, r1, #1
   190ac:	adc	r5, r5, #0
   190b0:	cmp	r2, #49	; 0x31
   190b4:	str	r1, [r7, #176]	; 0xb0
   190b8:	str	r5, [r7, #180]	; 0xb4
   190bc:	bcc	19ae4 <next@@Base+0xc84>
   190c0:	ldr	r1, [r7, #192]	; 0xc0
   190c4:	ldr	r5, [r7, #196]	; 0xc4
   190c8:	adds	r1, r1, #1
   190cc:	adc	r5, r5, #0
   190d0:	cmp	r2, #57	; 0x39
   190d4:	str	r1, [r7, #192]	; 0xc0
   190d8:	str	r5, [r7, #196]	; 0xc4
   190dc:	bhi	19134 <next@@Base+0x2d4>
   190e0:	add	r1, pc, #344	; 0x158
   190e4:	vld1.64	{d18-d19}, [lr :128]
   190e8:	ldr	r2, [r7, #208]	; 0xd0
   190ec:	strb	r9, [ip, r8]
   190f0:	add	r8, r8, #1
   190f4:	vld1.64	{d16-d17}, [r1 :128]
   190f8:	ldr	r1, [r7, #212]	; 0xd4
   190fc:	adds	r2, r2, #1
   19100:	adc	r1, r1, #0
   19104:	str	r2, [r7, #208]	; 0xd0
   19108:	vadd.i64	q8, q9, q8
   1910c:	str	r1, [r7, #212]	; 0xd4
   19110:	vst1.64	{d16-d17}, [lr :128]
   19114:	ldr	r5, [r4, #8]
   19118:	ldr	r2, [r4]
   1911c:	add	r1, r5, #1
   19120:	add	r5, r2, r5
   19124:	mov	r2, #1
   19128:	str	r1, [r4, #8]
   1912c:	add	r1, r7, #224	; 0xe0
   19130:	b	19078 <next@@Base+0x218>
   19134:	ldrd	r0, [r7, #240]	; 0xf0
   19138:	ldr	r6, [r7, #216]	; 0xd8
   1913c:	ldr	r5, [r7, #220]	; 0xdc
   19140:	adds	r0, r0, #1
   19144:	str	r0, [r7, #240]	; 0xf0
   19148:	adc	r1, r1, #0
   1914c:	adds	r6, r6, #1
   19150:	ldr	r0, [r7, #264]	; 0x108
   19154:	adc	r5, r5, #0
   19158:	adds	r0, r0, #1
   1915c:	str	r0, [r7, #264]	; 0x108
   19160:	str	r6, [r7, #216]	; 0xd8
   19164:	str	r5, [r7, #220]	; 0xdc
   19168:	str	r1, [r7, #244]	; 0xf4
   1916c:	ldr	r0, [r7, #268]	; 0x10c
   19170:	adc	r0, r0, #0
   19174:	cmp	r2, #123	; 0x7b
   19178:	str	r0, [r7, #268]	; 0x10c
   1917c:	beq	19b7c <next@@Base+0xd1c>
   19180:	ldr	r0, [r7, #288]	; 0x120
   19184:	ldr	r1, [r7, #292]	; 0x124
   19188:	adds	r0, r0, #1
   1918c:	adc	r1, r1, #0
   19190:	cmp	r2, #125	; 0x7d
   19194:	str	r0, [r7, #288]	; 0x120
   19198:	str	r1, [r7, #292]	; 0x124
   1919c:	beq	19bac <next@@Base+0xd4c>
   191a0:	ldr	r0, [r7, #312]	; 0x138
   191a4:	ldr	r1, [r7, #316]	; 0x13c
   191a8:	adds	r0, r0, #1
   191ac:	adc	r1, r1, #0
   191b0:	cmp	r2, #59	; 0x3b
   191b4:	str	r0, [r7, #312]	; 0x138
   191b8:	str	r1, [r7, #316]	; 0x13c
   191bc:	beq	19bf0 <next@@Base+0xd90>
   191c0:	ldr	r0, [r7, #336]	; 0x150
   191c4:	ldr	r1, [r7, #340]	; 0x154
   191c8:	adds	r0, r0, #1
   191cc:	adc	r1, r1, #0
   191d0:	cmp	r2, #101	; 0x65
   191d4:	str	r0, [r7, #336]	; 0x150
   191d8:	str	r1, [r7, #340]	; 0x154
   191dc:	bne	19250 <next@@Base+0x3f0>
   191e0:	add	r0, pc, #88	; 0x58
   191e4:	vld1.64	{d18-d19}, [lr :128]
   191e8:	ldr	r1, [r7, #356]	; 0x164
   191ec:	vld1.64	{d16-d17}, [r0 :128]
   191f0:	mov	r0, #101	; 0x65
   191f4:	strb	r0, [ip, r8]
   191f8:	ldr	r0, [r7, #352]	; 0x160
   191fc:	add	r8, r8, #1
   19200:	vadd.i64	q8, q9, q8
   19204:	adds	r0, r0, #1
   19208:	adc	r1, r1, #0
   1920c:	str	r0, [r7, #352]	; 0x160
   19210:	str	r1, [r7, #356]	; 0x164
   19214:	vst1.64	{d16-d17}, [lr :128]
   19218:	ldr	r2, [r4, #8]
   1921c:	ldr	r0, [r4]
   19220:	add	r1, r2, #1
   19224:	add	r5, r0, r2
   19228:	mov	r2, #5
   1922c:	str	r1, [r4, #8]
   19230:	add	r1, r7, #368	; 0x170
   19234:	b	19078 <next@@Base+0x218>
   19238:	nop	{0}
   1923c:	nop	{0}
   19240:	andeq	r0, r0, r1
   19244:	andeq	r0, r0, r0
   19248:	andeq	r0, r0, r1
   1924c:	andeq	r0, r0, r0
   19250:	ldr	r0, [r7, #360]	; 0x168
   19254:	ldr	r1, [r7, #364]	; 0x16c
   19258:	mov	r5, #109	; 0x6d
   1925c:	mov	r6, #114	; 0x72
   19260:	adds	r0, r0, #1
   19264:	adc	r1, r1, #0
   19268:	cmp	r2, #105	; 0x69
   1926c:	str	r0, [r7, #360]	; 0x168
   19270:	str	r1, [r7, #364]	; 0x16c
   19274:	mov	r1, #105	; 0x69
   19278:	bne	192d0 <next@@Base+0x470>
   1927c:	sub	r0, pc, #68	; 0x44
   19280:	vld1.64	{d18-d19}, [lr :128]
   19284:	strb	r1, [ip, r8]
   19288:	ldr	r1, [r7, #380]	; 0x17c
   1928c:	add	r8, r8, #1
   19290:	vld1.64	{d16-d17}, [r0 :128]
   19294:	ldr	r0, [r7, #376]	; 0x178
   19298:	adds	r0, r0, #1
   1929c:	vadd.i64	q8, q9, q8
   192a0:	adc	r1, r1, #0
   192a4:	str	r0, [r7, #376]	; 0x178
   192a8:	str	r1, [r7, #380]	; 0x17c
   192ac:	vst1.64	{d16-d17}, [lr :128]
   192b0:	ldr	r2, [r4, #8]
   192b4:	ldr	r0, [r4]
   192b8:	add	r1, r2, #1
   192bc:	add	r5, r0, r2
   192c0:	mov	r2, #2
   192c4:	str	r1, [r4, #8]
   192c8:	add	r1, r7, #392	; 0x188
   192cc:	b	19078 <next@@Base+0x218>
   192d0:	ldr	r0, [r7, #384]	; 0x180
   192d4:	ldr	r1, [r7, #388]	; 0x184
   192d8:	adds	r0, r0, #1
   192dc:	adc	r1, r1, #0
   192e0:	cmp	r2, #109	; 0x6d
   192e4:	str	r0, [r7, #384]	; 0x180
   192e8:	str	r1, [r7, #388]	; 0x184
   192ec:	bne	19344 <next@@Base+0x4e4>
   192f0:	sub	r0, pc, #184	; 0xb8
   192f4:	vld1.64	{d18-d19}, [lr :128]
   192f8:	ldr	r1, [r7, #404]	; 0x194
   192fc:	strb	r5, [ip, r8]
   19300:	add	r8, r8, #1
   19304:	vld1.64	{d16-d17}, [r0 :128]
   19308:	ldr	r0, [r7, #400]	; 0x190
   1930c:	adds	r0, r0, #1
   19310:	vadd.i64	q8, q9, q8
   19314:	adc	r1, r1, #0
   19318:	str	r0, [r7, #400]	; 0x190
   1931c:	str	r1, [r7, #404]	; 0x194
   19320:	vst1.64	{d16-d17}, [lr :128]
   19324:	ldr	r2, [r4, #8]
   19328:	ldr	r0, [r4]
   1932c:	add	r1, r2, #1
   19330:	add	r5, r0, r2
   19334:	mov	r2, #3
   19338:	str	r1, [r4, #8]
   1933c:	add	r1, r7, #416	; 0x1a0
   19340:	b	19078 <next@@Base+0x218>
   19344:	ldr	r0, [r7, #408]	; 0x198
   19348:	ldr	r1, [r7, #412]	; 0x19c
   1934c:	adds	r0, r0, #1
   19350:	adc	r1, r1, #0
   19354:	cmp	r2, #114	; 0x72
   19358:	str	r0, [r7, #408]	; 0x198
   1935c:	str	r1, [r7, #412]	; 0x19c
   19360:	bne	19f8c <next@@Base+0x112c>
   19364:	sub	r0, pc, #300	; 0x12c
   19368:	vld1.64	{d18-d19}, [lr :128]
   1936c:	ldr	r1, [r7, #428]	; 0x1ac
   19370:	strb	r6, [ip, r8]
   19374:	add	r8, r8, #1
   19378:	vld1.64	{d16-d17}, [r0 :128]
   1937c:	ldr	r0, [r7, #424]	; 0x1a8
   19380:	adds	r0, r0, #1
   19384:	vadd.i64	q8, q9, q8
   19388:	adc	r1, r1, #0
   1938c:	str	r0, [r7, #424]	; 0x1a8
   19390:	str	r1, [r7, #428]	; 0x1ac
   19394:	vst1.64	{d16-d17}, [lr :128]
   19398:	ldr	r2, [r4, #8]
   1939c:	ldr	r0, [r4]
   193a0:	add	r1, r2, #1
   193a4:	add	r5, r0, r2
   193a8:	mov	r2, #4
   193ac:	str	r1, [r4, #8]
   193b0:	add	r1, r7, #440	; 0x1b8
   193b4:	b	19078 <next@@Base+0x218>
   193b8:	ldrd	r0, [r7, #48]	; 0x30
   193bc:	adds	r0, r0, #1
   193c0:	adc	r1, r1, #0
   193c4:	strd	r0, [r7, #48]	; 0x30
   193c8:	mov	r0, #4
   193cc:	bl	126ec <malloc@plt>
   193d0:	mov	r6, r0
   193d4:	bl	18530 <init_token_eof@@Base>
   193d8:	add	r0, r7, #992	; 0x3e0
   193dc:	ldrd	r2, [r0]
   193e0:	adds	r2, r2, #1
   193e4:	adc	r3, r3, #0
   193e8:	strd	r2, [r0]
   193ec:	ldr	r0, [r7, #1000]	; 0x3e8
   193f0:	ldr	r1, [r7, #1004]	; 0x3ec
   193f4:	adds	r0, r0, #1
   193f8:	adc	r1, r1, #0
   193fc:	str	r0, [r7, #1000]	; 0x3e8
   19400:	mov	r0, r6
   19404:	str	r1, [r7, #1004]	; 0x3ec
   19408:	sub	sp, fp, #28
   1940c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19410:	ldrd	r0, [r7, #72]	; 0x48
   19414:	movw	r5, #5728	; 0x1660
   19418:	movt	r5, #3
   1941c:	adds	r0, r0, #1
   19420:	adc	r1, r1, #0
   19424:	strd	r0, [r7, #72]	; 0x48
   19428:	sub	r0, r9, #48	; 0x30
   1942c:	uxtb	r0, r0
   19430:	cmp	r0, #9
   19434:	bhi	1999c <next@@Base+0xb3c>
   19438:	ldrd	r0, [r5, #48]	; 0x30
   1943c:	mov	sl, ip
   19440:	ldr	r2, [r7, #696]	; 0x2b8
   19444:	adds	r0, r0, #1
   19448:	ldr	r3, [r7, #700]	; 0x2bc
   1944c:	strb	r9, [sl, r8]
   19450:	add	r8, r8, #1
   19454:	adc	r1, r1, #0
   19458:	str	r0, [r5, #48]	; 0x30
   1945c:	str	r1, [r5, #52]	; 0x34
   19460:	ldr	r6, [r5, #56]	; 0x38
   19464:	adds	r2, r2, #1
   19468:	str	r2, [r7, #696]	; 0x2b8
   1946c:	adc	r2, r3, #0
   19470:	ldr	r3, [r5, #60]	; 0x3c
   19474:	str	r2, [r7, #700]	; 0x2bc
   19478:	adds	r6, r6, #1
   1947c:	str	r6, [r5, #56]	; 0x38
   19480:	adc	r2, r3, #0
   19484:	str	r2, [r5, #60]	; 0x3c
   19488:	ldr	r3, [r4, #8]
   1948c:	ldr	r2, [r4]
   19490:	add	r6, r3, #1
   19494:	str	r6, [r4, #8]
   19498:	ldrb	r9, [r2, r3]
   1949c:	ldr	r2, [r7, #712]	; 0x2c8
   194a0:	ldr	r3, [r7, #716]	; 0x2cc
   194a4:	adds	r2, r2, #1
   194a8:	str	r2, [r7, #712]	; 0x2c8
   194ac:	sub	r2, r9, #48	; 0x30
   194b0:	adc	r3, r3, #0
   194b4:	uxtb	r2, r2
   194b8:	str	r3, [r7, #716]	; 0x2cc
   194bc:	cmp	r2, #10
   194c0:	bcc	19440 <next@@Base+0x5e0>
   194c4:	b	199a0 <next@@Base+0xb40>
   194c8:	ldrd	r0, [r7, #88]	; 0x58
   194cc:	adds	r0, r0, #1
   194d0:	adc	r1, r1, #0
   194d4:	strd	r0, [r7, #88]	; 0x58
   194d8:	uxtb	r0, r9
   194dc:	cmp	r0, #97	; 0x61
   194e0:	bne	1a2fc <next@@Base+0x149c>
   194e4:	sub	r0, pc, #684	; 0x2ac
   194e8:	vld1.64	{d16-d17}, [lr :128]
   194ec:	ldr	r1, [r7, #796]	; 0x31c
   194f0:	movw	r6, #5728	; 0x1660
   194f4:	vld1.64	{d18-d19}, [r0 :128]
   194f8:	mov	r0, #97	; 0x61
   194fc:	movt	r6, #3
   19500:	strb	r0, [ip, r8]
   19504:	ldr	r0, [r7, #792]	; 0x318
   19508:	vadd.i64	q9, q8, q9
   1950c:	adds	r0, r0, #1
   19510:	adc	r1, r1, #0
   19514:	str	r0, [r7, #792]	; 0x318
   19518:	str	r1, [r7, #796]	; 0x31c
   1951c:	vst1.64	{d18-d19}, [lr :128]
   19520:	ldr	r1, [r4, #8]
   19524:	ldr	r0, [r4]
   19528:	add	r2, r1, #1
   1952c:	str	r2, [r4, #8]
   19530:	ldrb	r0, [r0, r1]
   19534:	cmp	r0, #105	; 0x69
   19538:	bne	1a31c <next@@Base+0x14bc>
   1953c:	add	r0, r8, ip
   19540:	mov	r1, #105	; 0x69
   19544:	ldr	r2, [r7, #812]	; 0x32c
   19548:	mov	r5, ip
   1954c:	strb	r1, [r0, #1]
   19550:	vmov.32	r1, d16[0]
   19554:	adds	r1, r1, #2
   19558:	str	r1, [r6, #48]	; 0x30
   1955c:	vmov.32	r1, d16[1]
   19560:	adc	r1, r1, #0
   19564:	str	r1, [r6, #52]	; 0x34
   19568:	ldr	r1, [r7, #808]	; 0x328
   1956c:	adds	r1, r1, #1
   19570:	str	r1, [r7, #808]	; 0x328
   19574:	adc	r1, r2, #0
   19578:	ldrd	r2, [r6, #56]	; 0x38
   1957c:	str	r1, [r7, #812]	; 0x32c
   19580:	adds	r2, r2, #1
   19584:	adc	r1, r3, #0
   19588:	str	r2, [r6, #56]	; 0x38
   1958c:	str	r1, [r6, #60]	; 0x3c
   19590:	ldr	r2, [r4, #8]
   19594:	ldr	r1, [r4]
   19598:	add	r3, r2, #1
   1959c:	str	r3, [r4, #8]
   195a0:	ldrb	r1, [r1, r2]
   195a4:	cmp	r1, #110	; 0x6e
   195a8:	bne	1a33c <next@@Base+0x14dc>
   195ac:	mov	r1, #110	; 0x6e
   195b0:	strh	r1, [r0, #2]
   195b4:	ldr	r0, [r7, #824]	; 0x338
   195b8:	ldr	r1, [r7, #828]	; 0x33c
   195bc:	adds	r0, r0, #1
   195c0:	adc	r1, r1, #0
   195c4:	str	r0, [r7, #824]	; 0x338
   195c8:	add	r0, r8, #4
   195cc:	str	r1, [r7, #828]	; 0x33c
   195d0:	bl	126ec <malloc@plt>
   195d4:	add	r6, r8, #3
   195d8:	mov	r1, r5
   195dc:	mov	r4, r0
   195e0:	mov	r2, r6
   195e4:	bl	12788 <strncpy@plt>
   195e8:	mov	r0, #0
   195ec:	strb	r0, [r4, r6]
   195f0:	mov	r0, #8
   195f4:	bl	126ec <malloc@plt>
   195f8:	mov	r1, r4
   195fc:	mov	r6, r0
   19600:	bl	18370 <init_token_function@@Base>
   19604:	add	r0, r7, #832	; 0x340
   19608:	b	193dc <next@@Base+0x57c>
   1960c:	ldrd	r0, [r7, #96]	; 0x60
   19610:	adds	r0, r0, #1
   19614:	adc	r1, r1, #0
   19618:	strd	r0, [r7, #96]	; 0x60
   1961c:	uxtb	r0, r9
   19620:	cmp	r0, #101	; 0x65
   19624:	bne	1a35c <next@@Base+0x14fc>
   19628:	sub	r0, pc, #1008	; 0x3f0
   1962c:	vld1.64	{d16-d17}, [lr :128]
   19630:	ldr	r1, [r7, #852]	; 0x354
   19634:	mov	r3, ip
   19638:	vld1.64	{d18-d19}, [r0 :128]
   1963c:	mov	r0, #101	; 0x65
   19640:	strb	r0, [ip, r8]
   19644:	ldr	r0, [r7, #848]	; 0x350
   19648:	movw	ip, #5728	; 0x1660
   1964c:	movt	ip, #3
   19650:	vadd.i64	q9, q8, q9
   19654:	adds	r0, r0, #1
   19658:	adc	r1, r1, #0
   1965c:	str	r0, [r7, #848]	; 0x350
   19660:	str	r1, [r7, #852]	; 0x354
   19664:	vst1.64	{d18-d19}, [lr :128]
   19668:	ldr	r1, [r4, #8]
   1966c:	ldr	r0, [r4]
   19670:	add	r2, r1, #1
   19674:	str	r2, [r4, #8]
   19678:	ldrb	r0, [r0, r1]
   1967c:	cmp	r0, #116	; 0x74
   19680:	bne	1a37c <next@@Base+0x151c>
   19684:	vmov.32	r2, d16[0]
   19688:	add	r0, r8, r3
   1968c:	mov	r1, #116	; 0x74
   19690:	ldr	r6, [r7, #868]	; 0x364
   19694:	strb	r1, [r0, #1]
   19698:	adds	r1, r2, #2
   1969c:	str	r1, [ip, #48]	; 0x30
   196a0:	vmov.32	r1, d16[1]
   196a4:	adc	r3, r1, #0
   196a8:	str	r3, [ip, #52]	; 0x34
   196ac:	ldr	r3, [r7, #864]	; 0x360
   196b0:	ldr	r5, [ip, #60]	; 0x3c
   196b4:	adds	r3, r3, #1
   196b8:	str	r3, [r7, #864]	; 0x360
   196bc:	adc	r3, r6, #0
   196c0:	ldr	r6, [ip, #56]	; 0x38
   196c4:	str	r3, [r7, #868]	; 0x364
   196c8:	adds	r6, r6, #1
   196cc:	adc	r3, r5, #0
   196d0:	str	r6, [ip, #56]	; 0x38
   196d4:	str	r3, [ip, #60]	; 0x3c
   196d8:	ldr	r6, [r4, #8]
   196dc:	ldr	r3, [r4]
   196e0:	add	r5, r6, #1
   196e4:	str	r5, [r4, #8]
   196e8:	ldrb	r3, [r3, r6]
   196ec:	cmp	r3, #117	; 0x75
   196f0:	bne	1a39c <next@@Base+0x153c>
   196f4:	adds	r3, r2, #3
   196f8:	ldr	r6, [r7, #884]	; 0x374
   196fc:	str	r3, [ip, #48]	; 0x30
   19700:	mov	r3, #117	; 0x75
   19704:	strb	r3, [r0, #2]
   19708:	adc	r3, r1, #0
   1970c:	str	r3, [ip, #52]	; 0x34
   19710:	ldr	r3, [r7, #880]	; 0x370
   19714:	ldr	r5, [ip, #60]	; 0x3c
   19718:	adds	r3, r3, #1
   1971c:	str	r3, [r7, #880]	; 0x370
   19720:	adc	r3, r6, #0
   19724:	ldr	r6, [ip, #56]	; 0x38
   19728:	str	r3, [r7, #884]	; 0x374
   1972c:	adds	r6, r6, #1
   19730:	adc	r3, r5, #0
   19734:	str	r6, [ip, #56]	; 0x38
   19738:	str	r3, [ip, #60]	; 0x3c
   1973c:	ldr	r6, [r4, #8]
   19740:	ldr	r3, [r4]
   19744:	add	r5, r6, #1
   19748:	str	r5, [r4, #8]
   1974c:	ldrb	r3, [r3, r6]
   19750:	cmp	r3, #114	; 0x72
   19754:	bne	1a3bc <next@@Base+0x155c>
   19758:	adds	r2, r2, #4
   1975c:	str	r2, [ip, #48]	; 0x30
   19760:	mov	r2, #114	; 0x72
   19764:	strb	r2, [r0, #3]
   19768:	adc	r0, r1, #0
   1976c:	ldr	r1, [r7, #900]	; 0x384
   19770:	str	r0, [ip, #52]	; 0x34
   19774:	ldr	r0, [r7, #896]	; 0x380
   19778:	ldrd	r2, [ip, #56]	; 0x38
   1977c:	adds	r0, r0, #1
   19780:	str	r0, [r7, #896]	; 0x380
   19784:	adc	r0, r1, #0
   19788:	adds	r1, r2, #1
   1978c:	str	r0, [r7, #900]	; 0x384
   19790:	adc	r0, r3, #0
   19794:	str	r1, [ip, #56]	; 0x38
   19798:	str	r0, [ip, #60]	; 0x3c
   1979c:	ldr	r1, [r4, #8]
   197a0:	ldr	r0, [r4]
   197a4:	add	r2, r1, #1
   197a8:	str	r2, [r4, #8]
   197ac:	ldrb	r0, [r0, r1]
   197b0:	cmp	r0, #110	; 0x6e
   197b4:	bne	1a3dc <next@@Base+0x157c>
   197b8:	ldr	r0, [r7, #912]	; 0x390
   197bc:	ldr	r1, [r7, #916]	; 0x394
   197c0:	adds	r0, r0, #1
   197c4:	adc	r1, r1, #0
   197c8:	str	r0, [r7, #912]	; 0x390
   197cc:	mov	r0, #4
   197d0:	str	r1, [r7, #916]	; 0x394
   197d4:	bl	126ec <malloc@plt>
   197d8:	mov	r6, r0
   197dc:	bl	184b0 <init_token_return@@Base>
   197e0:	add	r0, r7, #920	; 0x398
   197e4:	b	193dc <next@@Base+0x57c>
   197e8:	ldrd	r0, [r7, #80]	; 0x50
   197ec:	adds	r0, r0, #1
   197f0:	adc	r1, r1, #0
   197f4:	strd	r0, [r7, #80]	; 0x50
   197f8:	uxtb	r1, r9
   197fc:	cmp	r1, #102	; 0x66
   19800:	beq	19a7c <next@@Base+0xc1c>
   19804:	cmp	r1, #110	; 0x6e
   19808:	bne	1a3fc <next@@Base+0x159c>
   1980c:	add	r0, pc, #972	; 0x3cc
   19810:	vld1.64	{d18-d19}, [lr :128]
   19814:	ldr	r1, [r7, #740]	; 0x2e4
   19818:	vld1.64	{d16-d17}, [r0 :128]
   1981c:	mov	r0, #110	; 0x6e
   19820:	strb	r0, [ip, r8]
   19824:	ldr	r0, [r7, #736]	; 0x2e0
   19828:	vadd.i64	q8, q9, q8
   1982c:	adds	r0, r0, #1
   19830:	adc	r1, r1, #0
   19834:	str	r0, [r7, #736]	; 0x2e0
   19838:	str	r1, [r7, #740]	; 0x2e4
   1983c:	vst1.64	{d16-d17}, [lr :128]
   19840:	ldr	r1, [r4, #8]
   19844:	ldr	r0, [r4]
   19848:	add	r2, r1, #1
   1984c:	str	r2, [r4, #8]
   19850:	ldrb	r0, [r0, r1]
   19854:	cmp	r0, #116	; 0x74
   19858:	bne	1a490 <next@@Base+0x1630>
   1985c:	ldr	r0, [r7, #760]	; 0x2f8
   19860:	ldr	r1, [r7, #764]	; 0x2fc
   19864:	adds	r0, r0, #1
   19868:	adc	r1, r1, #0
   1986c:	str	r0, [r7, #760]	; 0x2f8
   19870:	mov	r0, #4
   19874:	str	r1, [r7, #764]	; 0x2fc
   19878:	bl	126ec <malloc@plt>
   1987c:	mov	r6, r0
   19880:	bl	182f0 <init_token_int_type@@Base>
   19884:	add	r0, r7, #768	; 0x300
   19888:	b	193dc <next@@Base+0x57c>
   1988c:	ldrd	r0, [r7, #104]	; 0x68
   19890:	adds	r0, r0, #1
   19894:	adc	r1, r1, #0
   19898:	strd	r0, [r7, #104]	; 0x68
   1989c:	uxtb	r0, r9
   198a0:	cmp	r0, #108	; 0x6c
   198a4:	bne	1a41c <next@@Base+0x15bc>
   198a8:	add	r0, pc, #816	; 0x330
   198ac:	vld1.64	{d16-d17}, [lr :128]
   198b0:	ldr	r1, [r7, #940]	; 0x3ac
   198b4:	movw	r6, #5728	; 0x1660
   198b8:	vld1.64	{d18-d19}, [r0 :128]
   198bc:	mov	r0, #108	; 0x6c
   198c0:	movt	r6, #3
   198c4:	strb	r0, [ip, r8]
   198c8:	ldr	r0, [r7, #936]	; 0x3a8
   198cc:	vadd.i64	q9, q8, q9
   198d0:	adds	r0, r0, #1
   198d4:	adc	r1, r1, #0
   198d8:	str	r0, [r7, #936]	; 0x3a8
   198dc:	str	r1, [r7, #940]	; 0x3ac
   198e0:	vst1.64	{d18-d19}, [lr :128]
   198e4:	ldr	r1, [r4, #8]
   198e8:	ldr	r0, [r4]
   198ec:	add	r2, r1, #1
   198f0:	str	r2, [r4, #8]
   198f4:	ldrb	r0, [r0, r1]
   198f8:	cmp	r0, #115	; 0x73
   198fc:	bne	1a43c <next@@Base+0x15dc>
   19900:	add	r0, r8, ip
   19904:	mov	r1, #115	; 0x73
   19908:	strb	r1, [r0, #1]
   1990c:	vmov.32	r0, d16[0]
   19910:	ldr	r1, [r7, #956]	; 0x3bc
   19914:	adds	r0, r0, #2
   19918:	str	r0, [r6, #48]	; 0x30
   1991c:	vmov.32	r0, d16[1]
   19920:	adc	r0, r0, #0
   19924:	str	r0, [r6, #52]	; 0x34
   19928:	ldr	r0, [r7, #952]	; 0x3b8
   1992c:	ldrd	r2, [r6, #56]	; 0x38
   19930:	adds	r0, r0, #1
   19934:	str	r0, [r7, #952]	; 0x3b8
   19938:	adc	r0, r1, #0
   1993c:	adds	r1, r2, #1
   19940:	str	r0, [r7, #956]	; 0x3bc
   19944:	adc	r0, r3, #0
   19948:	str	r1, [r6, #56]	; 0x38
   1994c:	str	r0, [r6, #60]	; 0x3c
   19950:	ldr	r1, [r4, #8]
   19954:	ldr	r0, [r4]
   19958:	add	r2, r1, #1
   1995c:	str	r2, [r4, #8]
   19960:	ldrb	r0, [r0, r1]
   19964:	cmp	r0, #101	; 0x65
   19968:	bne	1a45c <next@@Base+0x15fc>
   1996c:	ldr	r0, [r7, #968]	; 0x3c8
   19970:	ldr	r1, [r7, #972]	; 0x3cc
   19974:	adds	r0, r0, #1
   19978:	adc	r1, r1, #0
   1997c:	str	r0, [r7, #968]	; 0x3c8
   19980:	mov	r0, #4
   19984:	str	r1, [r7, #972]	; 0x3cc
   19988:	bl	126ec <malloc@plt>
   1998c:	mov	r6, r0
   19990:	bl	185b0 <init_token_else@@Base>
   19994:	add	r0, r7, #976	; 0x3d0
   19998:	b	193dc <next@@Base+0x57c>
   1999c:	mov	sl, ip
   199a0:	add	r0, pc, #568	; 0x238
   199a4:	add	r1, r5, #64	; 0x40
   199a8:	ldr	r2, [r7, #708]	; 0x2c4
   199ac:	vld1.64	{d16-d17}, [r0 :128]
   199b0:	ldr	r0, [r7, #704]	; 0x2c0
   199b4:	vld1.64	{d18-d19}, [r1 :128]
   199b8:	adds	r0, r0, #1
   199bc:	str	r0, [r7, #704]	; 0x2c0
   199c0:	movw	r0, #5824	; 0x16c0
   199c4:	vadd.i64	q8, q9, q8
   199c8:	adc	r2, r2, #0
   199cc:	movt	r0, #3
   199d0:	str	r2, [r7, #708]	; 0x2c4
   199d4:	ldr	r6, [r0]
   199d8:	ldr	r3, [r0, #4]
   199dc:	vst1.64	{d16-d17}, [r1 :128]
   199e0:	adds	r6, r6, #1
   199e4:	adc	r3, r3, #0
   199e8:	str	r6, [r0]
   199ec:	str	r3, [r0, #4]
   199f0:	ldr	r1, [r4, #8]
   199f4:	cmp	r1, #0
   199f8:	beq	1a2c4 <next@@Base+0x1464>
   199fc:	ldrd	r2, [r0, #8]
   19a00:	ldr	r6, [r0, #24]
   19a04:	ldr	r9, [r0, #28]
   19a08:	adds	r2, r2, #1
   19a0c:	adc	r3, r3, #0
   19a10:	adds	r6, r6, #1
   19a14:	str	r6, [r0, #24]
   19a18:	strd	r2, [r0, #8]
   19a1c:	adc	r2, r9, #0
   19a20:	str	r2, [r0, #28]
   19a24:	sub	r0, r1, #1
   19a28:	str	r0, [r4, #8]
   19a2c:	mov	r0, #0
   19a30:	strb	r0, [sl, r8]
   19a34:	mov	r0, #8
   19a38:	bl	126ec <malloc@plt>
   19a3c:	mov	r6, r0
   19a40:	add	r1, pc, #408	; 0x198
   19a44:	add	r0, r5, #80	; 0x50
   19a48:	mov	r2, #10
   19a4c:	vld1.64	{d16-d17}, [r1 :128]
   19a50:	vld1.64	{d18-d19}, [r0 :128]
   19a54:	mov	r1, #0
   19a58:	vadd.i64	q8, q9, q8
   19a5c:	vst1.64	{d16-d17}, [r0 :128]
   19a60:	mov	r0, sl
   19a64:	bl	1262c <strtol@plt>
   19a68:	mov	r1, r0
   19a6c:	mov	r0, r6
   19a70:	bl	18330 <init_token_int_value@@Base>
   19a74:	add	r0, r7, #720	; 0x2d0
   19a78:	b	193dc <next@@Base+0x57c>
   19a7c:	add	r0, ip, r8
   19a80:	mov	r1, #102	; 0x66
   19a84:	strh	r1, [r0]
   19a88:	ldr	r0, [r7, #744]	; 0x2e8
   19a8c:	ldr	r1, [r7, #748]	; 0x2ec
   19a90:	adds	r0, r0, #1
   19a94:	adc	r1, r1, #0
   19a98:	str	r0, [r7, #744]	; 0x2e8
   19a9c:	mov	r0, #4
   19aa0:	str	r1, [r7, #748]	; 0x2ec
   19aa4:	bl	126ec <malloc@plt>
   19aa8:	mov	r6, r0
   19aac:	bl	18570 <init_token_if@@Base>
   19ab0:	add	r0, r7, #776	; 0x308
   19ab4:	b	193dc <next@@Base+0x57c>
   19ab8:	ldrd	r0, [r7, #168]	; 0xa8
   19abc:	adds	r0, r0, #1
   19ac0:	adc	r1, r1, #0
   19ac4:	strd	r0, [r7, #168]	; 0xa8
   19ac8:	mov	r0, #8
   19acc:	bl	126ec <malloc@plt>
   19ad0:	mov	r1, #0
   19ad4:	mov	r6, r0
   19ad8:	bl	18330 <init_token_int_value@@Base>
   19adc:	add	r0, r7, #184	; 0xb8
   19ae0:	b	193dc <next@@Base+0x57c>
   19ae4:	ldr	r1, [r7, #200]	; 0xc8
   19ae8:	ldr	r3, [r7, #204]	; 0xcc
   19aec:	adds	r1, r1, #1
   19af0:	adc	r3, r3, #0
   19af4:	cmp	r2, #40	; 0x28
   19af8:	str	r1, [r7, #200]	; 0xc8
   19afc:	str	r3, [r7, #204]	; 0xcc
   19b00:	bne	19b2c <next@@Base+0xccc>
   19b04:	ldrd	r0, [r7, #232]	; 0xe8
   19b08:	adds	r0, r0, #1
   19b0c:	adc	r1, r1, #0
   19b10:	strd	r0, [r7, #232]	; 0xe8
   19b14:	mov	r0, #4
   19b18:	bl	126ec <malloc@plt>
   19b1c:	mov	r6, r0
   19b20:	bl	183b0 <init_token_opar@@Base>
   19b24:	add	r0, r7, #248	; 0xf8
   19b28:	b	193dc <next@@Base+0x57c>
   19b2c:	ldr	r1, [r7, #240]	; 0xf0
   19b30:	ldr	r3, [r7, #244]	; 0xf4
   19b34:	adds	r1, r1, #1
   19b38:	adc	r3, r3, #0
   19b3c:	cmp	r2, #41	; 0x29
   19b40:	str	r1, [r7, #240]	; 0xf0
   19b44:	str	r3, [r7, #244]	; 0xf4
   19b48:	bne	19c30 <next@@Base+0xdd0>
   19b4c:	ldr	r0, [r7, #256]	; 0x100
   19b50:	ldr	r1, [r7, #260]	; 0x104
   19b54:	adds	r0, r0, #1
   19b58:	adc	r1, r1, #0
   19b5c:	str	r0, [r7, #256]	; 0x100
   19b60:	mov	r0, #4
   19b64:	str	r1, [r7, #260]	; 0x104
   19b68:	bl	126ec <malloc@plt>
   19b6c:	mov	r6, r0
   19b70:	bl	183f0 <init_token_cpar@@Base>
   19b74:	add	r0, r7, #272	; 0x110
   19b78:	b	193dc <next@@Base+0x57c>
   19b7c:	ldr	r0, [r7, #280]	; 0x118
   19b80:	ldr	r1, [r7, #284]	; 0x11c
   19b84:	adds	r0, r0, #1
   19b88:	adc	r1, r1, #0
   19b8c:	str	r0, [r7, #280]	; 0x118
   19b90:	mov	r0, #4
   19b94:	str	r1, [r7, #284]	; 0x11c
   19b98:	bl	126ec <malloc@plt>
   19b9c:	mov	r6, r0
   19ba0:	bl	18430 <init_token_obra@@Base>
   19ba4:	add	r0, r7, #296	; 0x128
   19ba8:	b	193dc <next@@Base+0x57c>
   19bac:	ldr	r0, [r7, #304]	; 0x130
   19bb0:	ldr	r1, [r7, #308]	; 0x134
   19bb4:	adds	r0, r0, #1
   19bb8:	adc	r1, r1, #0
   19bbc:	str	r0, [r7, #304]	; 0x130
   19bc0:	mov	r0, #4
   19bc4:	str	r1, [r7, #308]	; 0x134
   19bc8:	bl	126ec <malloc@plt>
   19bcc:	mov	r6, r0
   19bd0:	bl	18470 <init_token_cbra@@Base>
   19bd4:	add	r0, r7, #320	; 0x140
   19bd8:	b	193dc <next@@Base+0x57c>
   19bdc:	nop	{0}
   19be0:	andeq	r0, r0, r1
   19be4:	andeq	r0, r0, r0
   19be8:	andeq	r0, r0, r1
   19bec:	andeq	r0, r0, r0
   19bf0:	ldr	r0, [r7, #328]	; 0x148
   19bf4:	ldr	r1, [r7, #332]	; 0x14c
   19bf8:	adds	r0, r0, #1
   19bfc:	adc	r1, r1, #0
   19c00:	str	r0, [r7, #328]	; 0x148
   19c04:	mov	r0, #4
   19c08:	str	r1, [r7, #332]	; 0x14c
   19c0c:	bl	126ec <malloc@plt>
   19c10:	mov	r6, r0
   19c14:	bl	184f0 <init_token_semicolon@@Base>
   19c18:	add	r0, r7, #344	; 0x158
   19c1c:	b	193dc <next@@Base+0x57c>
   19c20:	andeq	r0, r0, r1
   19c24:	andeq	r0, r0, r0
   19c28:	andeq	r0, r0, r1
   19c2c:	andeq	r0, r0, r0
   19c30:	ldr	r0, [r7, #408]	; 0x198
   19c34:	ldr	r1, [r7, #412]	; 0x19c
   19c38:	ldr	r3, [r7, #384]	; 0x180
   19c3c:	ldr	r6, [r7, #388]	; 0x184
   19c40:	adds	r0, r0, #1
   19c44:	adc	r1, r1, #0
   19c48:	adds	r5, r3, #1
   19c4c:	adc	r9, r6, #0
   19c50:	ldr	r6, [r7, #360]	; 0x168
   19c54:	str	r1, [sp, #4]
   19c58:	adds	r6, r6, #1
   19c5c:	str	r6, [r7, #360]	; 0x168
   19c60:	str	r5, [r7, #384]	; 0x180
   19c64:	str	r0, [r7, #408]	; 0x198
   19c68:	ldr	r0, [r7, #364]	; 0x16c
   19c6c:	ldr	r6, [r7, #264]	; 0x108
   19c70:	ldr	r5, [r7, #268]	; 0x10c
   19c74:	ldr	r1, [r7, #288]	; 0x120
   19c78:	ldr	r3, [r7, #292]	; 0x124
   19c7c:	adc	sl, r0, #0
   19c80:	ldr	r0, [r7, #336]	; 0x150
   19c84:	adds	r6, r6, #1
   19c88:	adc	r5, r5, #0
   19c8c:	adds	r0, r0, #1
   19c90:	str	r0, [r7, #336]	; 0x150
   19c94:	str	r6, [r7, #264]	; 0x108
   19c98:	str	r5, [r7, #268]	; 0x10c
   19c9c:	ldr	r0, [r7, #340]	; 0x154
   19ca0:	ldr	r5, [r7, #312]	; 0x138
   19ca4:	adc	r0, r0, #0
   19ca8:	adds	r5, r5, #1
   19cac:	str	r5, [r7, #312]	; 0x138
   19cb0:	ldr	r5, [r7, #316]	; 0x13c
   19cb4:	ldr	r6, [r7, #432]	; 0x1b0
   19cb8:	adc	r5, r5, #0
   19cbc:	adds	r1, r1, #1
   19cc0:	adc	r3, r3, #0
   19cc4:	adds	r6, r6, #1
   19cc8:	str	r6, [r7, #432]	; 0x1b0
   19ccc:	str	r1, [r7, #288]	; 0x120
   19cd0:	str	r3, [r7, #292]	; 0x124
   19cd4:	str	r5, [r7, #316]	; 0x13c
   19cd8:	str	r0, [r7, #340]	; 0x154
   19cdc:	ldr	r0, [sp, #4]
   19ce0:	str	sl, [r7, #364]	; 0x16c
   19ce4:	str	r9, [r7, #388]	; 0x184
   19ce8:	str	r0, [r7, #412]	; 0x19c
   19cec:	ldr	r0, [r7, #436]	; 0x1b4
   19cf0:	adc	r0, r0, #0
   19cf4:	cmp	r2, #33	; 0x21
   19cf8:	str	r0, [r7, #436]	; 0x1b4
   19cfc:	bne	19d9c <next@@Base+0xf3c>
   19d00:	sub	r0, pc, #296	; 0x128
   19d04:	vld1.64	{d18-d19}, [lr :128]
   19d08:	ldr	r1, [r7, #452]	; 0x1c4
   19d0c:	vld1.64	{d16-d17}, [r0 :128]
   19d10:	mov	r0, #33	; 0x21
   19d14:	strb	r0, [ip, r8]
   19d18:	ldr	r0, [r7, #448]	; 0x1c0
   19d1c:	vadd.i64	q8, q9, q8
   19d20:	adds	r0, r0, #1
   19d24:	adc	r1, r1, #0
   19d28:	str	r0, [r7, #448]	; 0x1c0
   19d2c:	str	r1, [r7, #452]	; 0x1c4
   19d30:	vst1.64	{d16-d17}, [lr :128]
   19d34:	ldr	r1, [r4, #8]
   19d38:	ldr	r0, [r4]
   19d3c:	add	r2, r1, #1
   19d40:	str	r2, [r4, #8]
   19d44:	ldrb	r5, [r0, r1]
   19d48:	mov	r0, #8
   19d4c:	bl	126ec <malloc@plt>
   19d50:	mov	r6, r0
   19d54:	cmp	r5, #61	; 0x3d
   19d58:	bne	19ec0 <next@@Base+0x1060>
   19d5c:	ldr	r0, [r7, #472]	; 0x1d8
   19d60:	ldr	r1, [r7, #476]	; 0x1dc
   19d64:	adds	r0, r0, #1
   19d68:	adc	r1, r1, #0
   19d6c:	str	r0, [r7, #472]	; 0x1d8
   19d70:	mov	r0, #3
   19d74:	str	r1, [r7, #476]	; 0x1dc
   19d78:	bl	126ec <malloc@plt>
   19d7c:	mov	r1, r0
   19d80:	ldrb	r0, [sp, #8]
   19d84:	mov	r2, #61	; 0x3d
   19d88:	strb	r2, [r1, #1]
   19d8c:	add	r2, r1, #2
   19d90:	strb	r0, [r1]
   19d94:	add	r0, r7, #488	; 0x1e8
   19d98:	b	19f64 <next@@Base+0x1104>
   19d9c:	ldr	r0, [r7, #584]	; 0x248
   19da0:	ldr	r1, [r7, #588]	; 0x24c
   19da4:	ldr	r3, [r7, #528]	; 0x210
   19da8:	ldr	r6, [r7, #532]	; 0x214
   19dac:	ldr	r5, [r7, #456]	; 0x1c8
   19db0:	adds	r0, r0, #1
   19db4:	adc	r9, r1, #0
   19db8:	ldr	r1, [r7, #512]	; 0x200
   19dbc:	adds	sl, r3, #1
   19dc0:	ldr	r3, [r7, #516]	; 0x204
   19dc4:	str	r0, [sp, #4]
   19dc8:	ldr	r0, [r7, #460]	; 0x1cc
   19dcc:	adc	r6, r6, #0
   19dd0:	adds	r1, r1, #1
   19dd4:	str	r1, [r7, #512]	; 0x200
   19dd8:	adc	r1, r3, #0
   19ddc:	adds	r3, r5, #1
   19de0:	ldr	r5, [r7, #624]	; 0x270
   19de4:	adc	r0, r0, #0
   19de8:	adds	r5, r5, #1
   19dec:	str	r5, [r7, #624]	; 0x270
   19df0:	str	r0, [r7, #460]	; 0x1cc
   19df4:	ldr	r0, [sp, #4]
   19df8:	str	r3, [r7, #456]	; 0x1c8
   19dfc:	str	r1, [r7, #516]	; 0x204
   19e00:	str	sl, [r7, #528]	; 0x210
   19e04:	str	r6, [r7, #532]	; 0x214
   19e08:	str	r9, [r7, #588]	; 0x24c
   19e0c:	str	r0, [r7, #584]	; 0x248
   19e10:	ldr	r0, [r7, #628]	; 0x274
   19e14:	adc	r0, r0, #0
   19e18:	cmp	r2, #38	; 0x26
   19e1c:	str	r0, [r7, #628]	; 0x274
   19e20:	bne	1a508 <next@@Base+0x16a8>
   19e24:	sub	r0, pc, #588	; 0x24c
   19e28:	vld1.64	{d18-d19}, [lr :128]
   19e2c:	ldr	r1, [r7, #660]	; 0x294
   19e30:	mov	r5, #38	; 0x26
   19e34:	vld1.64	{d16-d17}, [r0 :128]
   19e38:	ldr	r0, [r7, #656]	; 0x290
   19e3c:	strb	r5, [ip, r8]
   19e40:	adds	r0, r0, #1
   19e44:	vadd.i64	q8, q9, q8
   19e48:	adc	r1, r1, #0
   19e4c:	str	r0, [r7, #656]	; 0x290
   19e50:	str	r1, [r7, #660]	; 0x294
   19e54:	vst1.64	{d16-d17}, [lr :128]
   19e58:	ldr	r1, [r4, #8]
   19e5c:	ldr	r0, [r4]
   19e60:	add	r2, r1, #1
   19e64:	str	r2, [r4, #8]
   19e68:	ldrb	r4, [r0, r1]
   19e6c:	mov	r0, #8
   19e70:	bl	126ec <malloc@plt>
   19e74:	cmp	r4, #38	; 0x26
   19e78:	bne	1a4b0 <next@@Base+0x1650>
   19e7c:	mov	r6, r0
   19e80:	ldr	r0, [r7, #680]	; 0x2a8
   19e84:	ldr	r1, [r7, #684]	; 0x2ac
   19e88:	adds	r0, r0, #1
   19e8c:	adc	r1, r1, #0
   19e90:	str	r0, [r7, #680]	; 0x2a8
   19e94:	mov	r0, #3
   19e98:	str	r1, [r7, #684]	; 0x2ac
   19e9c:	bl	126ec <malloc@plt>
   19ea0:	mov	r1, r0
   19ea4:	ldrb	r0, [sp, #8]
   19ea8:	strh	r5, [r1, #1]
   19eac:	strb	r0, [r1]
   19eb0:	mov	r0, r6
   19eb4:	bl	185f0 <init_token_boolean_op@@Base>
   19eb8:	add	r0, r7, #688	; 0x2b0
   19ebc:	b	193dc <next@@Base+0x57c>
   19ec0:	movw	r0, #5728	; 0x1660
   19ec4:	movt	r0, #3
   19ec8:	add	r1, r0, #64	; 0x40
   19ecc:	sub	r0, pc, #756	; 0x2f4
   19ed0:	ldr	r2, [r7, #468]	; 0x1d4
   19ed4:	vld1.64	{d16-d17}, [r0 :128]
   19ed8:	ldr	r0, [r7, #464]	; 0x1d0
   19edc:	vld1.64	{d18-d19}, [r1 :128]
   19ee0:	adds	r0, r0, #1
   19ee4:	str	r0, [r7, #464]	; 0x1d0
   19ee8:	movw	r0, #5824	; 0x16c0
   19eec:	vadd.i64	q8, q9, q8
   19ef0:	adc	r2, r2, #0
   19ef4:	movt	r0, #3
   19ef8:	str	r2, [r7, #468]	; 0x1d4
   19efc:	ldrd	r8, [r0]
   19f00:	vst1.64	{d16-d17}, [r1 :128]
   19f04:	adds	r8, r8, #1
   19f08:	adc	r9, r9, #0
   19f0c:	strd	r8, [r0]
   19f10:	ldr	r1, [r4, #8]
   19f14:	cmp	r1, #0
   19f18:	beq	1a2c4 <next@@Base+0x1464>
   19f1c:	ldrd	r2, [r0, #8]
   19f20:	ldrd	r8, [r0, #24]
   19f24:	adds	r2, r2, #1
   19f28:	adc	r3, r3, #0
   19f2c:	adds	r5, r8, #1
   19f30:	str	r5, [r0, #24]
   19f34:	strd	r2, [r0, #8]
   19f38:	adc	r2, r9, #0
   19f3c:	str	r2, [r0, #28]
   19f40:	sub	r0, r1, #1
   19f44:	str	r0, [r4, #8]
   19f48:	mov	r0, #2
   19f4c:	bl	126ec <malloc@plt>
   19f50:	mov	r1, r0
   19f54:	ldrb	r0, [sp, #8]
   19f58:	mov	r2, r1
   19f5c:	strb	r0, [r2], #1
   19f60:	add	r0, r7, #480	; 0x1e0
   19f64:	mov	r3, #0
   19f68:	strb	r3, [r2]
   19f6c:	ldrd	r2, [r0]
   19f70:	adds	r2, r2, #1
   19f74:	adc	r3, r3, #0
   19f78:	strd	r2, [r0]
   19f7c:	mov	r0, r6
   19f80:	bl	185f0 <init_token_boolean_op@@Base>
   19f84:	add	r0, r7, #496	; 0x1f0
   19f88:	b	193dc <next@@Base+0x57c>
   19f8c:	ldr	r0, [r7, #432]	; 0x1b0
   19f90:	ldr	r1, [r7, #436]	; 0x1b4
   19f94:	ldr	r3, [r7, #456]	; 0x1c8
   19f98:	ldr	r6, [r7, #460]	; 0x1cc
   19f9c:	adds	r0, r0, #1
   19fa0:	adc	r1, r1, #0
   19fa4:	adds	r3, r3, #1
   19fa8:	str	r0, [r7, #432]	; 0x1b0
   19fac:	adc	r0, r6, #0
   19fb0:	cmp	r2, #60	; 0x3c
   19fb4:	str	r1, [r7, #436]	; 0x1b4
   19fb8:	str	r3, [r7, #456]	; 0x1c8
   19fbc:	str	r0, [r7, #460]	; 0x1cc
   19fc0:	bne	19fcc <next@@Base+0x116c>
   19fc4:	add	r1, r7, #504	; 0x1f8
   19fc8:	b	19ff0 <next@@Base+0x1190>
   19fcc:	ldr	r0, [r7, #512]	; 0x200
   19fd0:	ldr	r1, [r7, #516]	; 0x204
   19fd4:	adds	r0, r0, #1
   19fd8:	adc	r1, r1, #0
   19fdc:	cmp	r2, #62	; 0x3e
   19fe0:	str	r0, [r7, #512]	; 0x200
   19fe4:	str	r1, [r7, #516]	; 0x204
   19fe8:	bne	1a14c <next@@Base+0x12ec>
   19fec:	add	r1, r7, #520	; 0x208
   19ff0:	ldm	r1, {r0, r3}
   19ff4:	movw	sl, #5728	; 0x1660
   19ff8:	movt	sl, #3
   19ffc:	adds	r0, r0, #1
   1a000:	adc	r3, r3, #0
   1a004:	stm	r1, {r0, r3}
   1a008:	sub	r0, pc, #1008	; 0x3f0
   1a00c:	vld1.64	{d18-d19}, [lr :128]
   1a010:	strb	r9, [ip, r8]
   1a014:	vld1.64	{d16-d17}, [r0 :128]
   1a018:	vadd.i64	q8, q9, q8
   1a01c:	vst1.64	{d16-d17}, [lr :128]
   1a020:	ldr	r1, [r4, #8]
   1a024:	ldr	r0, [r4]
   1a028:	add	r2, r1, #1
   1a02c:	str	r2, [r4, #8]
   1a030:	ldrb	r5, [r0, r1]
   1a034:	mov	r0, #8
   1a038:	bl	126ec <malloc@plt>
   1a03c:	mov	r6, r0
   1a040:	cmp	r5, #61	; 0x3d
   1a044:	bne	1a088 <next@@Base+0x1228>
   1a048:	ldr	r0, [r7, #544]	; 0x220
   1a04c:	ldr	r1, [r7, #548]	; 0x224
   1a050:	adds	r0, r0, #1
   1a054:	adc	r1, r1, #0
   1a058:	str	r0, [r7, #544]	; 0x220
   1a05c:	mov	r0, #3
   1a060:	str	r1, [r7, #548]	; 0x224
   1a064:	bl	126ec <malloc@plt>
   1a068:	mov	r1, r0
   1a06c:	ldrb	r0, [sp, #8]
   1a070:	mov	r2, #61	; 0x3d
   1a074:	strb	r2, [r1, #1]
   1a078:	add	r2, r1, #2
   1a07c:	strb	r0, [r1]
   1a080:	add	r0, r7, #560	; 0x230
   1a084:	b	1a124 <next@@Base+0x12c4>
   1a088:	add	r0, pc, #1008	; 0x3f0
   1a08c:	add	r1, sl, #64	; 0x40
   1a090:	ldr	r2, [r7, #540]	; 0x21c
   1a094:	vld1.64	{d16-d17}, [r0 :128]
   1a098:	ldr	r0, [r7, #536]	; 0x218
   1a09c:	vld1.64	{d18-d19}, [r1 :128]
   1a0a0:	adds	r0, r0, #1
   1a0a4:	str	r0, [r7, #536]	; 0x218
   1a0a8:	movw	r0, #5824	; 0x16c0
   1a0ac:	vadd.i64	q8, q9, q8
   1a0b0:	adc	r2, r2, #0
   1a0b4:	movt	r0, #3
   1a0b8:	str	r2, [r7, #540]	; 0x21c
   1a0bc:	ldrd	r8, [r0]
   1a0c0:	vst1.64	{d16-d17}, [r1 :128]
   1a0c4:	adds	r8, r8, #1
   1a0c8:	adc	r9, r9, #0
   1a0cc:	strd	r8, [r0]
   1a0d0:	ldr	r1, [r4, #8]
   1a0d4:	cmp	r1, #0
   1a0d8:	beq	1a2c4 <next@@Base+0x1464>
   1a0dc:	ldrd	r2, [r0, #8]
   1a0e0:	ldrd	r8, [r0, #24]
   1a0e4:	adds	r2, r2, #1
   1a0e8:	adc	r3, r3, #0
   1a0ec:	adds	r5, r8, #1
   1a0f0:	str	r5, [r0, #24]
   1a0f4:	strd	r2, [r0, #8]
   1a0f8:	adc	r2, r9, #0
   1a0fc:	str	r2, [r0, #28]
   1a100:	sub	r0, r1, #1
   1a104:	str	r0, [r4, #8]
   1a108:	mov	r0, #2
   1a10c:	bl	126ec <malloc@plt>
   1a110:	mov	r1, r0
   1a114:	ldrb	r0, [sp, #8]
   1a118:	mov	r2, r1
   1a11c:	strb	r0, [r2], #1
   1a120:	add	r0, r7, #552	; 0x228
   1a124:	mov	r3, #0
   1a128:	strb	r3, [r2]
   1a12c:	ldrd	r2, [r0]
   1a130:	adds	r2, r2, #1
   1a134:	adc	r3, r3, #0
   1a138:	strd	r2, [r0]
   1a13c:	mov	r0, r6
   1a140:	bl	185f0 <init_token_boolean_op@@Base>
   1a144:	add	r0, r7, #568	; 0x238
   1a148:	b	193dc <next@@Base+0x57c>
   1a14c:	ldr	r0, [r7, #528]	; 0x210
   1a150:	ldr	r1, [r7, #532]	; 0x214
   1a154:	adds	r0, r0, #1
   1a158:	adc	r1, r1, #0
   1a15c:	cmp	r2, #61	; 0x3d
   1a160:	str	r0, [r7, #528]	; 0x210
   1a164:	str	r1, [r7, #532]	; 0x214
   1a168:	bne	1a208 <next@@Base+0x13a8>
   1a16c:	add	r0, pc, #780	; 0x30c
   1a170:	vld1.64	{d18-d19}, [lr :128]
   1a174:	ldr	r1, [r7, #580]	; 0x244
   1a178:	mov	r5, #61	; 0x3d
   1a17c:	vld1.64	{d16-d17}, [r0 :128]
   1a180:	ldr	r0, [r7, #576]	; 0x240
   1a184:	strb	r5, [ip, r8]
   1a188:	adds	r0, r0, #1
   1a18c:	vadd.i64	q8, q9, q8
   1a190:	adc	r1, r1, #0
   1a194:	str	r0, [r7, #576]	; 0x240
   1a198:	str	r1, [r7, #580]	; 0x244
   1a19c:	vst1.64	{d16-d17}, [lr :128]
   1a1a0:	ldr	r1, [r4, #8]
   1a1a4:	ldr	r0, [r4]
   1a1a8:	add	r2, r1, #1
   1a1ac:	str	r2, [r4, #8]
   1a1b0:	ldrb	r4, [r0, r1]
   1a1b4:	mov	r0, #8
   1a1b8:	bl	126ec <malloc@plt>
   1a1bc:	cmp	r4, #61	; 0x3d
   1a1c0:	bne	1a4d0 <next@@Base+0x1670>
   1a1c4:	mov	r6, r0
   1a1c8:	ldr	r0, [r7, #600]	; 0x258
   1a1cc:	ldr	r1, [r7, #604]	; 0x25c
   1a1d0:	adds	r0, r0, #1
   1a1d4:	adc	r1, r1, #0
   1a1d8:	str	r0, [r7, #600]	; 0x258
   1a1dc:	mov	r0, #3
   1a1e0:	str	r1, [r7, #604]	; 0x25c
   1a1e4:	bl	126ec <malloc@plt>
   1a1e8:	mov	r1, r0
   1a1ec:	ldrb	r0, [sp, #8]
   1a1f0:	strh	r5, [r1, #1]
   1a1f4:	strb	r0, [r1]
   1a1f8:	mov	r0, r6
   1a1fc:	bl	185f0 <init_token_boolean_op@@Base>
   1a200:	add	r0, r7, #608	; 0x260
   1a204:	b	193dc <next@@Base+0x57c>
   1a208:	ldr	r0, [r7, #584]	; 0x248
   1a20c:	ldr	r1, [r7, #588]	; 0x24c
   1a210:	adds	r0, r0, #1
   1a214:	adc	r1, r1, #0
   1a218:	cmp	r2, #124	; 0x7c
   1a21c:	str	r0, [r7, #584]	; 0x248
   1a220:	str	r1, [r7, #588]	; 0x24c
   1a224:	bne	1a4f0 <next@@Base+0x1690>
   1a228:	add	r0, pc, #816	; 0x330
   1a22c:	vld1.64	{d18-d19}, [lr :128]
   1a230:	ldr	r1, [r7, #620]	; 0x26c
   1a234:	mov	r5, #124	; 0x7c
   1a238:	vld1.64	{d16-d17}, [r0 :128]
   1a23c:	ldr	r0, [r7, #616]	; 0x268
   1a240:	strb	r5, [ip, r8]
   1a244:	adds	r0, r0, #1
   1a248:	vadd.i64	q8, q9, q8
   1a24c:	adc	r1, r1, #0
   1a250:	str	r0, [r7, #616]	; 0x268
   1a254:	str	r1, [r7, #620]	; 0x26c
   1a258:	vst1.64	{d16-d17}, [lr :128]
   1a25c:	ldr	r1, [r4, #8]
   1a260:	ldr	r0, [r4]
   1a264:	add	r2, r1, #1
   1a268:	str	r2, [r4, #8]
   1a26c:	ldrb	r4, [r0, r1]
   1a270:	mov	r0, #8
   1a274:	bl	126ec <malloc@plt>
   1a278:	cmp	r4, #124	; 0x7c
   1a27c:	bne	1a540 <next@@Base+0x16e0>
   1a280:	mov	r6, r0
   1a284:	ldr	r0, [r7, #640]	; 0x280
   1a288:	ldr	r1, [r7, #644]	; 0x284
   1a28c:	adds	r0, r0, #1
   1a290:	adc	r1, r1, #0
   1a294:	str	r0, [r7, #640]	; 0x280
   1a298:	mov	r0, #3
   1a29c:	str	r1, [r7, #644]	; 0x284
   1a2a0:	bl	126ec <malloc@plt>
   1a2a4:	mov	r1, r0
   1a2a8:	ldrb	r0, [sp, #8]
   1a2ac:	strh	r5, [r1, #1]
   1a2b0:	strb	r0, [r1]
   1a2b4:	mov	r0, r6
   1a2b8:	bl	185f0 <init_token_boolean_op@@Base>
   1a2bc:	add	r0, r7, #648	; 0x288
   1a2c0:	b	193dc <next@@Base+0x57c>
   1a2c4:	ldrd	r2, [r0, #16]
   1a2c8:	mov	r1, #32
   1a2cc:	adds	r2, r2, #1
   1a2d0:	adc	r3, r3, #0
   1a2d4:	strd	r2, [r0, #16]
   1a2d8:	movw	r0, #224	; 0xe0
   1a2dc:	mov	r2, #1
   1a2e0:	movt	r0, #3
   1a2e4:	ldr	r3, [r0]
   1a2e8:	movw	r0, #60592	; 0xecb0
   1a2ec:	movt	r0, #1
   1a2f0:	bl	126c8 <fwrite@plt>
   1a2f4:	mov	r0, #1
   1a2f8:	bl	12728 <exit@plt>
   1a2fc:	ldr	r0, [r7, #784]	; 0x310
   1a300:	ldr	r1, [r7, #788]	; 0x314
   1a304:	adds	r0, r0, #1
   1a308:	adc	r1, r1, #0
   1a30c:	str	r0, [r7, #784]	; 0x310
   1a310:	mov	r0, #1
   1a314:	str	r1, [r7, #788]	; 0x314
   1a318:	bl	12728 <exit@plt>
   1a31c:	ldr	r0, [r7, #800]	; 0x320
   1a320:	ldr	r1, [r7, #804]	; 0x324
   1a324:	adds	r0, r0, #1
   1a328:	adc	r1, r1, #0
   1a32c:	str	r0, [r7, #800]	; 0x320
   1a330:	mov	r0, #1
   1a334:	str	r1, [r7, #804]	; 0x324
   1a338:	bl	12728 <exit@plt>
   1a33c:	ldr	r0, [r7, #816]	; 0x330
   1a340:	ldr	r1, [r7, #820]	; 0x334
   1a344:	adds	r0, r0, #1
   1a348:	adc	r1, r1, #0
   1a34c:	str	r0, [r7, #816]	; 0x330
   1a350:	mov	r0, #1
   1a354:	str	r1, [r7, #820]	; 0x334
   1a358:	bl	12728 <exit@plt>
   1a35c:	ldr	r0, [r7, #840]	; 0x348
   1a360:	ldr	r1, [r7, #844]	; 0x34c
   1a364:	adds	r0, r0, #1
   1a368:	adc	r1, r1, #0
   1a36c:	str	r0, [r7, #840]	; 0x348
   1a370:	mov	r0, #1
   1a374:	str	r1, [r7, #844]	; 0x34c
   1a378:	bl	12728 <exit@plt>
   1a37c:	ldr	r0, [r7, #856]	; 0x358
   1a380:	ldr	r1, [r7, #860]	; 0x35c
   1a384:	adds	r0, r0, #1
   1a388:	adc	r1, r1, #0
   1a38c:	str	r0, [r7, #856]	; 0x358
   1a390:	mov	r0, #1
   1a394:	str	r1, [r7, #860]	; 0x35c
   1a398:	bl	12728 <exit@plt>
   1a39c:	ldr	r0, [r7, #872]	; 0x368
   1a3a0:	ldr	r1, [r7, #876]	; 0x36c
   1a3a4:	adds	r0, r0, #1
   1a3a8:	adc	r1, r1, #0
   1a3ac:	str	r0, [r7, #872]	; 0x368
   1a3b0:	mov	r0, #1
   1a3b4:	str	r1, [r7, #876]	; 0x36c
   1a3b8:	bl	12728 <exit@plt>
   1a3bc:	ldr	r0, [r7, #888]	; 0x378
   1a3c0:	ldr	r1, [r7, #892]	; 0x37c
   1a3c4:	adds	r0, r0, #1
   1a3c8:	adc	r1, r1, #0
   1a3cc:	str	r0, [r7, #888]	; 0x378
   1a3d0:	mov	r0, #1
   1a3d4:	str	r1, [r7, #892]	; 0x37c
   1a3d8:	bl	12728 <exit@plt>
   1a3dc:	ldr	r0, [r7, #904]	; 0x388
   1a3e0:	ldr	r1, [r7, #908]	; 0x38c
   1a3e4:	adds	r0, r0, #1
   1a3e8:	adc	r1, r1, #0
   1a3ec:	str	r0, [r7, #904]	; 0x388
   1a3f0:	mov	r0, #1
   1a3f4:	str	r1, [r7, #908]	; 0x38c
   1a3f8:	bl	12728 <exit@plt>
   1a3fc:	ldr	r0, [r7, #728]	; 0x2d8
   1a400:	ldr	r1, [r7, #732]	; 0x2dc
   1a404:	adds	r0, r0, #1
   1a408:	adc	r1, r1, #0
   1a40c:	str	r0, [r7, #728]	; 0x2d8
   1a410:	mov	r0, #1
   1a414:	str	r1, [r7, #732]	; 0x2dc
   1a418:	bl	12728 <exit@plt>
   1a41c:	ldr	r0, [r7, #928]	; 0x3a0
   1a420:	ldr	r1, [r7, #932]	; 0x3a4
   1a424:	adds	r0, r0, #1
   1a428:	adc	r1, r1, #0
   1a42c:	str	r0, [r7, #928]	; 0x3a0
   1a430:	mov	r0, #1
   1a434:	str	r1, [r7, #932]	; 0x3a4
   1a438:	bl	12728 <exit@plt>
   1a43c:	ldr	r0, [r7, #944]	; 0x3b0
   1a440:	ldr	r1, [r7, #948]	; 0x3b4
   1a444:	adds	r0, r0, #1
   1a448:	adc	r1, r1, #0
   1a44c:	str	r0, [r7, #944]	; 0x3b0
   1a450:	mov	r0, #1
   1a454:	str	r1, [r7, #948]	; 0x3b4
   1a458:	bl	12728 <exit@plt>
   1a45c:	ldr	r0, [r7, #960]	; 0x3c0
   1a460:	ldr	r1, [r7, #964]	; 0x3c4
   1a464:	adds	r0, r0, #1
   1a468:	adc	r1, r1, #0
   1a46c:	str	r0, [r7, #960]	; 0x3c0
   1a470:	mov	r0, #1
   1a474:	str	r1, [r7, #964]	; 0x3c4
   1a478:	bl	12728 <exit@plt>
   1a47c:	nop	{0}
   1a480:	andeq	r0, r0, r1
   1a484:	andeq	r0, r0, r0
   1a488:	andeq	r0, r0, r1
   1a48c:	andeq	r0, r0, r0
   1a490:	ldr	r0, [r7, #752]	; 0x2f0
   1a494:	ldr	r1, [r7, #756]	; 0x2f4
   1a498:	adds	r0, r0, #1
   1a49c:	adc	r1, r1, #0
   1a4a0:	str	r0, [r7, #752]	; 0x2f0
   1a4a4:	mov	r0, #1
   1a4a8:	str	r1, [r7, #756]	; 0x2f4
   1a4ac:	bl	12728 <exit@plt>
   1a4b0:	ldr	r0, [r7, #672]	; 0x2a0
   1a4b4:	ldr	r1, [r7, #676]	; 0x2a4
   1a4b8:	adds	r0, r0, #1
   1a4bc:	adc	r1, r1, #0
   1a4c0:	str	r0, [r7, #672]	; 0x2a0
   1a4c4:	mov	r0, #1
   1a4c8:	str	r1, [r7, #676]	; 0x2a4
   1a4cc:	bl	12728 <exit@plt>
   1a4d0:	ldr	r0, [r7, #592]	; 0x250
   1a4d4:	ldr	r1, [r7, #596]	; 0x254
   1a4d8:	adds	r0, r0, #1
   1a4dc:	adc	r1, r1, #0
   1a4e0:	str	r0, [r7, #592]	; 0x250
   1a4e4:	mov	r0, #1
   1a4e8:	str	r1, [r7, #596]	; 0x254
   1a4ec:	bl	12728 <exit@plt>
   1a4f0:	ldr	r0, [r7, #624]	; 0x270
   1a4f4:	ldr	r1, [r7, #628]	; 0x274
   1a4f8:	adds	r0, r0, #1
   1a4fc:	adc	r1, r1, #0
   1a500:	str	r0, [r7, #624]	; 0x270
   1a504:	str	r1, [r7, #628]	; 0x274
   1a508:	ldr	r0, [r7, #664]	; 0x298
   1a50c:	ldr	r1, [r7, #668]	; 0x29c
   1a510:	adds	r0, r0, #1
   1a514:	str	r0, [r7, #664]	; 0x298
   1a518:	movw	r0, #224	; 0xe0
   1a51c:	adc	r1, r1, #0
   1a520:	movt	r0, #3
   1a524:	str	r1, [r7, #668]	; 0x29c
   1a528:	movw	r1, #60625	; 0xecd1
   1a52c:	movt	r1, #1
   1a530:	ldr	r0, [r0]
   1a534:	bl	1274c <fprintf@plt>
   1a538:	mov	r0, #1
   1a53c:	bl	12728 <exit@plt>
   1a540:	ldr	r0, [r7, #632]	; 0x278
   1a544:	ldr	r1, [r7, #636]	; 0x27c
   1a548:	adds	r0, r0, #1
   1a54c:	adc	r1, r1, #0
   1a550:	str	r0, [r7, #632]	; 0x278
   1a554:	mov	r0, #1
   1a558:	str	r1, [r7, #636]	; 0x27c
   1a55c:	bl	12728 <exit@plt>
   1a560:	andeq	r0, r0, r1
   1a564:	andeq	r0, r0, r0
   1a568:	andeq	r0, r0, r1
   1a56c:	andeq	r0, r0, r0
   1a570:	push	{r4, r5, r6, lr}
   1a574:	sub	sp, sp, #8
   1a578:	movw	r4, #8093	; 0x1f9d
   1a57c:	movw	r0, #60665	; 0xecf9
   1a580:	movw	r1, #55713	; 0xd9a1
   1a584:	movt	r4, #48445	; 0xbd3d
   1a588:	movt	r0, #1
   1a58c:	movt	r1, #1
   1a590:	mov	r2, r4
   1a594:	bl	1a7e8 <next@@Base+0x1988>
   1a598:	movw	r1, #60753	; 0xed51
   1a59c:	movw	r2, #7454	; 0x1d1e
   1a5a0:	mov	r0, #0
   1a5a4:	mov	r3, #0
   1a5a8:	str	r4, [sp]
   1a5ac:	movt	r1, #1
   1a5b0:	movt	r2, #14536	; 0x38c8
   1a5b4:	bl	1af08 <next@@Base+0x20a8>
   1a5b8:	movw	r5, #5728	; 0x1660
   1a5bc:	mov	r0, #2
   1a5c0:	movt	r5, #3
   1a5c4:	mov	r1, r5
   1a5c8:	bl	1b7bc <next@@Base+0x295c>
   1a5cc:	movw	r1, #60764	; 0xed5c
   1a5d0:	movw	r2, #57188	; 0xdf64
   1a5d4:	mov	r0, #1
   1a5d8:	mov	r3, #0
   1a5dc:	str	r4, [sp]
   1a5e0:	movt	r1, #1
   1a5e4:	movt	r2, #33405	; 0x827d
   1a5e8:	bl	1af08 <next@@Base+0x20a8>
   1a5ec:	movw	r6, #5824	; 0x16c0
   1a5f0:	mov	r0, #5
   1a5f4:	movt	r6, #3
   1a5f8:	add	r1, r6, #32
   1a5fc:	bl	1b7bc <next@@Base+0x295c>
   1a600:	movw	r1, #60778	; 0xed6a
   1a604:	movw	r2, #45984	; 0xb3a0
   1a608:	mov	r0, #2
   1a60c:	mov	r3, #0
   1a610:	str	r4, [sp]
   1a614:	movt	r1, #1
   1a618:	movt	r2, #27745	; 0x6c61
   1a61c:	bl	1af08 <next@@Base+0x20a8>
   1a620:	add	r1, r5, #16
   1a624:	mov	r0, #2
   1a628:	bl	1b7bc <next@@Base+0x295c>
   1a62c:	movw	r1, #60794	; 0xed7a
   1a630:	movw	r2, #30688	; 0x77e0
   1a634:	mov	r0, #3
   1a638:	mov	r3, #0
   1a63c:	str	r4, [sp]
   1a640:	movt	r1, #1
   1a644:	movt	r2, #34799	; 0x87ef
   1a648:	bl	1af08 <next@@Base+0x20a8>
   1a64c:	add	r1, r5, #32
   1a650:	mov	r0, #2
   1a654:	bl	1b7bc <next@@Base+0x295c>
   1a658:	movw	r1, #60804	; 0xed84
   1a65c:	movw	r2, #20620	; 0x508c
   1a660:	mov	r0, #4
   1a664:	mov	r3, #0
   1a668:	str	r4, [sp]
   1a66c:	movt	r1, #1
   1a670:	movt	r2, #46520	; 0xb5b8
   1a674:	bl	1af08 <next@@Base+0x20a8>
   1a678:	add	r1, r5, #48	; 0x30
   1a67c:	mov	r0, #2
   1a680:	bl	1b7bc <next@@Base+0x295c>
   1a684:	movw	r1, #60813	; 0xed8d
   1a688:	movw	r2, #36533	; 0x8eb5
   1a68c:	mov	r0, #5
   1a690:	mov	r3, #0
   1a694:	str	r4, [sp]
   1a698:	movt	r1, #1
   1a69c:	movt	r2, #31104	; 0x7980
   1a6a0:	bl	1af08 <next@@Base+0x20a8>
   1a6a4:	mov	r0, #4
   1a6a8:	mov	r1, r6
   1a6ac:	bl	1b7bc <next@@Base+0x295c>
   1a6b0:	movw	r1, #60829	; 0xed9d
   1a6b4:	movw	r2, #31251	; 0x7a13
   1a6b8:	mov	r0, #6
   1a6bc:	mov	r3, #0
   1a6c0:	str	r4, [sp]
   1a6c4:	movt	r1, #1
   1a6c8:	movt	r2, #11805	; 0x2e1d
   1a6cc:	bl	1af08 <next@@Base+0x20a8>
   1a6d0:	add	r1, r5, #64	; 0x40
   1a6d4:	mov	r0, #2
   1a6d8:	bl	1b7bc <next@@Base+0x295c>
   1a6dc:	movw	r1, #55805	; 0xd9fd
   1a6e0:	movw	r2, #27639	; 0x6bf7
   1a6e4:	mov	r0, #7
   1a6e8:	mov	r3, #0
   1a6ec:	str	r4, [sp]
   1a6f0:	movt	r1, #1
   1a6f4:	movt	r2, #25257	; 0x62a9
   1a6f8:	bl	1af08 <next@@Base+0x20a8>
   1a6fc:	movw	r1, #4720	; 0x1270
   1a700:	mov	r0, #126	; 0x7e
   1a704:	movt	r1, #3
   1a708:	bl	1b7bc <next@@Base+0x295c>
   1a70c:	movw	r1, #60848	; 0xedb0
   1a710:	movw	r2, #8207	; 0x200f
   1a714:	mov	r0, #8
   1a718:	mov	r3, #0
   1a71c:	str	r4, [sp]
   1a720:	movt	r1, #1
   1a724:	movt	r2, #16044	; 0x3eac
   1a728:	bl	1af08 <next@@Base+0x20a8>
   1a72c:	add	r1, r5, #80	; 0x50
   1a730:	mov	r0, #2
   1a734:	bl	1b7bc <next@@Base+0x295c>
   1a738:	bl	1bf44 <next@@Base+0x30e4>
   1a73c:	add	sp, sp, #8
   1a740:	pop	{r4, r5, r6, lr}
   1a744:	b	1ccb0 <next@@Base+0x3e50>
   1a748:	push	{r4, lr}
   1a74c:	vpush	{d8-d9}
   1a750:	bl	1a570 <next@@Base+0x1710>
   1a754:	movw	r0, #5824	; 0x16c0
   1a758:	vmov.i32	q4, #0	; 0x00000000
   1a75c:	movw	r4, #5728	; 0x1660
   1a760:	mov	r2, #1008	; 0x3f0
   1a764:	movt	r0, #3
   1a768:	movt	r4, #3
   1a76c:	add	r1, r0, #32
   1a770:	vst1.64	{d8-d9}, [r1 :128]
   1a774:	add	r1, r0, #48	; 0x30
   1a778:	vst1.64	{d8-d9}, [r1 :128]
   1a77c:	mov	r1, #0
   1a780:	str	r1, [r0, #64]	; 0x40
   1a784:	str	r1, [r0, #68]	; 0x44
   1a788:	add	r1, r4, #48	; 0x30
   1a78c:	vst1.64	{d8-d9}, [r0 :128]!
   1a790:	vst1.64	{d8-d9}, [r1 :128]
   1a794:	add	r1, r4, #32
   1a798:	vst1.64	{d8-d9}, [r0 :128]
   1a79c:	mov	r0, #80	; 0x50
   1a7a0:	vst1.64	{d8-d9}, [r1 :128]
   1a7a4:	add	r1, r4, #16
   1a7a8:	vst1.64	{d8-d9}, [r1 :128]
   1a7ac:	add	r1, r4, #64	; 0x40
   1a7b0:	vst1.64	{d8-d9}, [r1 :128]
   1a7b4:	vst1.64	{d8-d9}, [r4 :128], r0
   1a7b8:	movw	r0, #4720	; 0x1270
   1a7bc:	mov	r1, #0
   1a7c0:	movt	r0, #3
   1a7c4:	bl	1277c <memset@plt>
   1a7c8:	vst1.64	{d8-d9}, [r4 :128]
   1a7cc:	vpop	{d8-d9}
   1a7d0:	pop	{r4, pc}
   1a7d4:	movw	r0, #42352	; 0xa570
   1a7d8:	movw	r1, #42824	; 0xa748
   1a7dc:	movt	r0, #1
   1a7e0:	movt	r1, #1
   1a7e4:	b	1d164 <__gcov_flush@@Base+0xb8>
   1a7e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7ec:	add	fp, sp, #28
   1a7f0:	sub	sp, sp, #36	; 0x24
   1a7f4:	mov	r9, r1
   1a7f8:	mov	r6, r0
   1a7fc:	add	r0, sp, #28
   1a800:	add	r1, sp, #32
   1a804:	mov	r8, r2
   1a808:	bl	1d5fc <__gcov_flush@@Base+0x550>
   1a80c:	cmp	r0, #0
   1a810:	beq	1a854 <next@@Base+0x19f4>
   1a814:	mov	r4, r0
   1a818:	mov	r0, r6
   1a81c:	ldr	r5, [sp, #32]
   1a820:	bl	12734 <strlen@plt>
   1a824:	add	r0, r5, r0
   1a828:	add	r0, r0, #2
   1a82c:	bl	126ec <malloc@plt>
   1a830:	mov	r7, r0
   1a834:	ldr	r0, [sp, #28]
   1a838:	mov	r1, r6
   1a83c:	mov	r2, r4
   1a840:	str	r0, [sp]
   1a844:	mov	r0, r7
   1a848:	mov	r3, r5
   1a84c:	bl	1d690 <__gcov_flush@@Base+0x5e4>
   1a850:	b	1a860 <next@@Base+0x1a00>
   1a854:	mov	r0, r6
   1a858:	bl	126a4 <strdup@plt>
   1a85c:	mov	r7, r0
   1a860:	ldr	r0, [pc, #1492]	; 1ae3c <next@@Base+0x1fdc>
   1a864:	ldr	r6, [pc, #1492]	; 1ae40 <next@@Base+0x1fe0>
   1a868:	mov	r1, #2
   1a86c:	add	r0, pc, r0
   1a870:	add	r6, pc, r6
   1a874:	str	r7, [r0]
   1a878:	mov	r0, r7
   1a87c:	mov	r5, #0
   1a880:	strb	r5, [r6]
   1a884:	bl	126d4 <open64@plt>
   1a888:	ldr	r4, [pc, #1460]	; 1ae44 <next@@Base+0x1fe4>
   1a88c:	cmn	r0, #1
   1a890:	add	r4, pc, r4
   1a894:	str	r0, [r4]
   1a898:	beq	1a8a8 <next@@Base+0x1a48>
   1a89c:	ldr	r6, [pc, #1444]	; 1ae48 <next@@Base+0x1fe8>
   1a8a0:	add	r6, pc, r6
   1a8a4:	b	1a904 <next@@Base+0x1aa4>
   1a8a8:	mov	r0, #1
   1a8ac:	strb	r0, [r6]
   1a8b0:	ldr	r0, [pc, #1488]	; 1ae88 <next@@Base+0x2028>
   1a8b4:	mov	r1, #66	; 0x42
   1a8b8:	mov	r2, #420	; 0x1a4
   1a8bc:	ldr	r0, [pc, r0]
   1a8c0:	bl	126d4 <open64@plt>
   1a8c4:	ldr	r6, [pc, #1472]	; 1ae8c <next@@Base+0x202c>
   1a8c8:	cmn	r0, #1
   1a8cc:	str	r0, [r4]
   1a8d0:	add	r6, pc, r6
   1a8d4:	bne	1a904 <next@@Base+0x1aa4>
   1a8d8:	ldr	r0, [pc, #1456]	; 1ae90 <next@@Base+0x2030>
   1a8dc:	ldr	r0, [pc, r0]
   1a8e0:	bl	1d274 <__gcov_flush@@Base+0x1c8>
   1a8e4:	ldr	r0, [pc, #1448]	; 1ae94 <next@@Base+0x2034>
   1a8e8:	mov	r1, #66	; 0x42
   1a8ec:	mov	r2, #420	; 0x1a4
   1a8f0:	ldr	r0, [pc, r0]
   1a8f4:	bl	126d4 <open64@plt>
   1a8f8:	cmn	r0, #1
   1a8fc:	str	r0, [r4]
   1a900:	beq	1adf4 <next@@Base+0x1f94>
   1a904:	str	r9, [sp, #20]
   1a908:	str	r8, [sp, #24]
   1a90c:	bl	1d338 <__gcov_flush@@Base+0x28c>
   1a910:	ldr	r0, [pc, #1332]	; 1ae4c <next@@Base+0x1fec>
   1a914:	mov	r1, r6
   1a918:	ldr	r0, [pc, r0]
   1a91c:	bl	12620 <fdopen@plt>
   1a920:	ldr	r7, [pc, #1320]	; 1ae50 <next@@Base+0x1ff0>
   1a924:	ldr	r9, [pc, #1320]	; 1ae54 <next@@Base+0x1ff4>
   1a928:	ldr	r1, [pc, #1320]	; 1ae58 <next@@Base+0x1ff8>
   1a92c:	ldr	sl, [pc, #1320]	; 1ae5c <next@@Base+0x1ffc>
   1a930:	add	r7, pc, r7
   1a934:	add	r9, pc, r9
   1a938:	add	r1, pc, r1
   1a93c:	add	sl, pc, sl
   1a940:	str	r5, [r7]
   1a944:	str	r5, [r7, #4]
   1a948:	str	r5, [r9]
   1a94c:	str	r5, [r9, #4]
   1a950:	str	r0, [r1]
   1a954:	str	r5, [sl]
   1a958:	ldr	r6, [pc, #1280]	; 1ae60 <next@@Base+0x2000>
   1a95c:	mov	r4, #131072	; 0x20000
   1a960:	add	r6, pc, r6
   1a964:	ldrb	r1, [r6]
   1a968:	cmp	r1, #0
   1a96c:	beq	1aa60 <next@@Base+0x1c00>
   1a970:	mov	r0, r4
   1a974:	bl	126ec <malloc@plt>
   1a978:	mov	r8, r0
   1a97c:	strd	r4, [r7]
   1a980:	str	r0, [sl]
   1a984:	mov	r0, r8
   1a988:	mov	r1, #0
   1a98c:	mov	r2, #131072	; 0x20000
   1a990:	bl	1277c <memset@plt>
   1a994:	ldr	r0, [r9, #4]
   1a998:	ldr	r1, [pc, #1284]	; 1aea4 <next@@Base+0x2044>
   1a99c:	mov	r7, #7
   1a9a0:	orr	r7, r7, #131072	; 0x20000
   1a9a4:	ldr	r1, [pc, r1]
   1a9a8:	ldr	sl, [pc, #1272]	; 1aea8 <next@@Base+0x2048>
   1a9ac:	adds	r2, r1, #4
   1a9b0:	add	sl, pc, sl
   1a9b4:	adc	r3, r0, #0
   1a9b8:	ldr	r5, [sl, #4]
   1a9bc:	ldr	r4, [pc, #1256]	; 1aeac <next@@Base+0x204c>
   1a9c0:	ldr	r4, [pc, r4]
   1a9c4:	subs	r2, r4, r2
   1a9c8:	sbcs	r2, r5, r3
   1a9cc:	bcs	1aae0 <next@@Base+0x1c80>
   1a9d0:	adds	r1, r7, r1
   1a9d4:	adc	r0, r0, #0
   1a9d8:	subs	r1, r1, #4
   1a9dc:	sbc	r0, r0, #0
   1a9e0:	mvn	r2, #0
   1a9e4:	and	r5, r0, r2
   1a9e8:	mov	r0, #16646144	; 0xfe0000
   1a9ec:	orr	r0, r0, #-16777216	; 0xff000000
   1a9f0:	and	r4, r1, r0
   1a9f4:	mov	r0, r8
   1a9f8:	mov	r1, r4
   1a9fc:	bl	126bc <realloc@plt>
   1aa00:	ldr	r1, [pc, #1068]	; 1ae34 <next@@Base+0x1fd4>
   1aa04:	strd	r4, [sl]
   1aa08:	mov	r3, r0
   1aa0c:	mov	r7, r1
   1aa10:	lsr	r2, r1, #24
   1aa14:	ldr	r1, [pc, #1176]	; 1aeb4 <next@@Base+0x2054>
   1aa18:	ldrb	r6, [r6]
   1aa1c:	lsr	r4, r7, #16
   1aa20:	add	r1, pc, r1
   1aa24:	str	r0, [r1]
   1aa28:	ldr	r1, [r9, #4]
   1aa2c:	ldr	r5, [pc, #1156]	; 1aeb8 <next@@Base+0x2058>
   1aa30:	ldr	r5, [pc, r5]
   1aa34:	strb	r7, [r3, r5]!
   1aa38:	strb	r2, [r3, #3]
   1aa3c:	lsr	r2, r7, #8
   1aa40:	strb	r2, [r3, #1]
   1aa44:	adds	r2, r5, #4
   1aa48:	adc	ip, r1, #0
   1aa4c:	cmp	r6, #1
   1aa50:	strb	r4, [r3, #2]
   1aa54:	stm	r9, {r2, ip}
   1aa58:	beq	1ab24 <next@@Base+0x1cc4>
   1aa5c:	b	1acdc <next@@Base+0x1e7c>
   1aa60:	mov	r1, #0
   1aa64:	mov	r2, #2
   1aa68:	mov	r8, #0
   1aa6c:	bl	127f4 <fseek@plt>
   1aa70:	ldr	r0, [pc, #1004]	; 1ae64 <next@@Base+0x2004>
   1aa74:	ldr	r0, [pc, r0]
   1aa78:	bl	1268c <ftell@plt>
   1aa7c:	mov	r2, r0
   1aa80:	ldr	r0, [pc, #992]	; 1ae68 <next@@Base+0x2008>
   1aa84:	asr	r3, r2, #31
   1aa88:	add	r0, pc, r0
   1aa8c:	cmp	r2, #0
   1aa90:	strd	r2, [r0]
   1aa94:	beq	1ad84 <next@@Base+0x1f24>
   1aa98:	ldr	r0, [pc, #972]	; 1ae6c <next@@Base+0x200c>
   1aa9c:	mov	r1, r2
   1aaa0:	mov	r2, #3
   1aaa4:	mov	r3, #1
   1aaa8:	ldr	r0, [pc, r0]
   1aaac:	str	r8, [sp, #8]
   1aab0:	str	r8, [sp, #12]
   1aab4:	str	r0, [sp]
   1aab8:	mov	r0, #0
   1aabc:	bl	12680 <mmap64@plt>
   1aac0:	cmn	r0, #1
   1aac4:	str	r0, [sl]
   1aac8:	beq	1ad4c <next@@Base+0x1eec>
   1aacc:	ldrb	r1, [r6]
   1aad0:	cmp	r1, #0
   1aad4:	beq	1ac9c <next@@Base+0x1e3c>
   1aad8:	mov	r8, r0
   1aadc:	b	1a994 <next@@Base+0x1b34>
   1aae0:	ldr	r1, [r9, #4]
   1aae4:	ldr	r5, [pc, #964]	; 1aeb0 <next@@Base+0x2050>
   1aae8:	ldr	r0, [pc, #836]	; 1ae34 <next@@Base+0x1fd4>
   1aaec:	mov	r6, r8
   1aaf0:	ldr	r5, [pc, r5]
   1aaf4:	mov	r7, r0
   1aaf8:	lsr	r2, r7, #16
   1aafc:	strb	r7, [r6, r5]!
   1ab00:	lsr	r0, r0, #24
   1ab04:	lsr	r3, r7, #8
   1ab08:	strb	r2, [r6, #2]
   1ab0c:	adds	r2, r5, #4
   1ab10:	strb	r0, [r6, #3]
   1ab14:	strb	r3, [r6, #1]
   1ab18:	adc	ip, r1, #0
   1ab1c:	stm	r9, {r2, ip}
   1ab20:	mov	r0, r8
   1ab24:	ldr	r7, [sl, #4]
   1ab28:	ldr	r3, [pc, #908]	; 1aebc <next@@Base+0x205c>
   1ab2c:	adds	r6, r5, #8
   1ab30:	adc	r4, r1, #0
   1ab34:	ldr	r3, [pc, r3]
   1ab38:	subs	r3, r3, r6
   1ab3c:	sbcs	r3, r7, r4
   1ab40:	bcs	1abe4 <next@@Base+0x1d84>
   1ab44:	mov	r2, #7
   1ab48:	orr	r2, r2, #131072	; 0x20000
   1ab4c:	adds	r2, r5, r2
   1ab50:	adc	r1, r1, #0
   1ab54:	mvn	r3, #0
   1ab58:	and	r5, r1, r3
   1ab5c:	mov	r1, #16646144	; 0xfe0000
   1ab60:	orr	r1, r1, #-16777216	; 0xff000000
   1ab64:	and	r4, r2, r1
   1ab68:	mov	r1, r4
   1ab6c:	bl	126bc <realloc@plt>
   1ab70:	strd	r4, [sl]
   1ab74:	ldr	r1, [pc, #840]	; 1aec4 <next@@Base+0x2064>
   1ab78:	mov	r4, r0
   1ab7c:	mov	lr, r9
   1ab80:	add	r1, pc, r1
   1ab84:	str	r0, [r1]
   1ab88:	ldr	r1, [pc, #824]	; 1aec8 <next@@Base+0x2068>
   1ab8c:	ldr	r2, [sp, #20]
   1ab90:	ldr	ip, [r9, #4]
   1ab94:	add	r1, pc, r1
   1ab98:	ldrb	r3, [r1]
   1ab9c:	ldrb	r1, [r2]
   1aba0:	ldrb	r7, [r2, #1]
   1aba4:	ldrb	r6, [r2, #2]
   1aba8:	ldrb	r5, [r2, #3]
   1abac:	ldr	r2, [pc, #792]	; 1aecc <next@@Base+0x206c>
   1abb0:	ldr	r2, [pc, r2]
   1abb4:	strb	r1, [r4, r2]!
   1abb8:	strb	r5, [r4, #3]
   1abbc:	ldr	r5, [sp, #24]
   1abc0:	strb	r6, [r4, #2]
   1abc4:	adds	r6, r2, #4
   1abc8:	adc	r1, ip, #0
   1abcc:	cmp	r3, #1
   1abd0:	str	r6, [lr]
   1abd4:	strb	r7, [r4, #1]
   1abd8:	str	r1, [lr, #4]
   1abdc:	beq	1ac24 <next@@Base+0x1dc4>
   1abe0:	b	1ad1c <next@@Base+0x1ebc>
   1abe4:	ldr	r6, [sp, #20]
   1abe8:	mov	r5, r0
   1abec:	ldrb	r1, [r6]
   1abf0:	ldrb	r3, [r6, #1]
   1abf4:	ldrb	r7, [r6, #2]
   1abf8:	ldrb	r6, [r6, #3]
   1abfc:	strb	r1, [r5, r2]!
   1ac00:	strb	r6, [r5, #3]
   1ac04:	strb	r3, [r5, #1]
   1ac08:	adds	r6, r2, #4
   1ac0c:	mov	r3, r9
   1ac10:	adc	r1, ip, #0
   1ac14:	strb	r7, [r5, #2]
   1ac18:	str	r6, [r3]
   1ac1c:	str	r1, [r3, #4]
   1ac20:	ldr	r5, [sp, #24]
   1ac24:	ldr	r7, [sl, #4]
   1ac28:	ldr	r4, [pc, #672]	; 1aed0 <next@@Base+0x2070>
   1ac2c:	adds	r3, r2, #8
   1ac30:	adc	lr, ip, #0
   1ac34:	ldr	r4, [pc, r4]
   1ac38:	subs	r3, r4, r3
   1ac3c:	sbcs	r3, r7, lr
   1ac40:	bcs	1ac94 <next@@Base+0x1e34>
   1ac44:	mov	r1, #7
   1ac48:	orr	r1, r1, #131072	; 0x20000
   1ac4c:	adds	r1, r2, r1
   1ac50:	adc	r2, ip, #0
   1ac54:	mvn	r3, #0
   1ac58:	and	r7, r2, r3
   1ac5c:	mov	r2, #16646144	; 0xfe0000
   1ac60:	orr	r2, r2, #-16777216	; 0xff000000
   1ac64:	and	r4, r1, r2
   1ac68:	mov	r1, r4
   1ac6c:	bl	126bc <realloc@plt>
   1ac70:	stm	sl, {r4, r7}
   1ac74:	ldr	r1, [r9, #4]
   1ac78:	ldr	r2, [pc, #596]	; 1aed4 <next@@Base+0x2074>
   1ac7c:	mov	lr, r9
   1ac80:	add	r2, pc, r2
   1ac84:	str	r0, [r2]
   1ac88:	ldr	r6, [pc, #584]	; 1aed8 <next@@Base+0x2078>
   1ac8c:	ldr	r6, [pc, r6]
   1ac90:	b	1ad1c <next@@Base+0x1ebc>
   1ac94:	mov	lr, r9
   1ac98:	b	1ad1c <next@@Base+0x1ebc>
   1ac9c:	ldr	r6, [r9, #4]
   1aca0:	ldr	r5, [pc, #536]	; 1aec0 <next@@Base+0x2060>
   1aca4:	ldr	r1, [pc, #392]	; 1ae34 <next@@Base+0x1fd4>
   1aca8:	mov	r4, r0
   1acac:	ldr	r5, [pc, r5]
   1acb0:	mov	r7, r1
   1acb4:	lsr	r2, r7, #16
   1acb8:	strb	r7, [r4, r5]!
   1acbc:	lsr	r1, r1, #24
   1acc0:	strb	r2, [r4, #2]
   1acc4:	adds	r2, r5, #4
   1acc8:	lsr	r3, r7, #8
   1accc:	adc	ip, r6, #0
   1acd0:	strb	r1, [r4, #3]
   1acd4:	strb	r3, [r4, #1]
   1acd8:	stm	r9, {r2, ip}
   1acdc:	ldr	r4, [sp, #20]
   1ace0:	mov	r5, r0
   1ace4:	mov	lr, r9
   1ace8:	ldrb	r1, [r4]
   1acec:	ldrb	r6, [r4, #3]
   1acf0:	ldrb	r3, [r4, #1]
   1acf4:	ldrb	r7, [r4, #2]
   1acf8:	strb	r1, [r5, r2]!
   1acfc:	strb	r6, [r5, #3]
   1ad00:	adds	r6, r2, #4
   1ad04:	adc	r1, ip, #0
   1ad08:	strb	r7, [r5, #2]
   1ad0c:	strb	r3, [r5, #1]
   1ad10:	str	r6, [lr]
   1ad14:	str	r1, [lr, #4]
   1ad18:	ldr	r5, [sp, #24]
   1ad1c:	lsr	r2, r5, #24
   1ad20:	strb	r5, [r0, r6]!
   1ad24:	lsr	r3, r5, #16
   1ad28:	lsr	r7, r5, #8
   1ad2c:	strb	r2, [r0, #3]
   1ad30:	strb	r3, [r0, #2]
   1ad34:	strb	r7, [r0, #1]
   1ad38:	adds	r0, r6, #4
   1ad3c:	adc	r1, r1, #0
   1ad40:	strd	r0, [lr]
   1ad44:	sub	sp, fp, #28
   1ad48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad4c:	bl	12758 <__errno_location@plt>
   1ad50:	ldr	r1, [pc, #280]	; 1ae70 <next@@Base+0x2010>
   1ad54:	ldr	r1, [pc, r1]
   1ad58:	ldr	r0, [r0]
   1ad5c:	ldr	r4, [r1]
   1ad60:	ldr	r5, [pc, #268]	; 1ae74 <next@@Base+0x2014>
   1ad64:	ldr	r5, [pc, r5]
   1ad68:	bl	12704 <strerror@plt>
   1ad6c:	ldr	r1, [pc, #260]	; 1ae78 <next@@Base+0x2018>
   1ad70:	mov	r3, r0
   1ad74:	mov	r0, r4
   1ad78:	add	r1, pc, r1
   1ad7c:	mov	r2, r5
   1ad80:	bl	1274c <fprintf@plt>
   1ad84:	ldr	r0, [pc, #240]	; 1ae7c <next@@Base+0x201c>
   1ad88:	str	r8, [sl]
   1ad8c:	mov	r2, #16646144	; 0xfe0000
   1ad90:	add	r0, pc, r0
   1ad94:	orr	r2, r2, #-16777216	; 0xff000000
   1ad98:	str	r8, [r0]
   1ad9c:	str	r8, [r0, #4]
   1ada0:	mov	r0, #1
   1ada4:	strb	r0, [r6]
   1ada8:	ldr	r0, [r9, #4]
   1adac:	ldr	r1, [pc, #204]	; 1ae80 <next@@Base+0x2020>
   1adb0:	mvn	r3, #0
   1adb4:	eor	r3, r0, r3
   1adb8:	ldr	r1, [pc, r1]
   1adbc:	eor	r2, r1, r2
   1adc0:	orrs	r2, r2, r3
   1adc4:	beq	1a984 <next@@Base+0x1b24>
   1adc8:	ldr	r2, [pc, #104]	; 1ae38 <next@@Base+0x1fd8>
   1adcc:	ldr	r7, [pc, #176]	; 1ae84 <next@@Base+0x2024>
   1add0:	adds	r1, r1, r2
   1add4:	mov	r2, #16646144	; 0xfe0000
   1add8:	orr	r2, r2, #-16777216	; 0xff000000
   1addc:	and	r4, r1, r2
   1ade0:	adc	r0, r0, #0
   1ade4:	mvn	r1, #0
   1ade8:	and	r5, r0, r1
   1adec:	add	r7, pc, r7
   1adf0:	b	1a970 <next@@Base+0x1b10>
   1adf4:	bl	12758 <__errno_location@plt>
   1adf8:	ldr	r1, [pc, #152]	; 1ae98 <next@@Base+0x2038>
   1adfc:	ldr	r1, [pc, r1]
   1ae00:	ldr	r0, [r0]
   1ae04:	ldr	r4, [r1]
   1ae08:	ldr	r5, [pc, #140]	; 1ae9c <next@@Base+0x203c>
   1ae0c:	ldr	r5, [pc, r5]
   1ae10:	bl	12704 <strerror@plt>
   1ae14:	ldr	r1, [pc, #132]	; 1aea0 <next@@Base+0x2040>
   1ae18:	mov	r3, r0
   1ae1c:	mov	r0, r4
   1ae20:	add	r1, pc, r1
   1ae24:	mov	r2, r5
   1ae28:	bl	1274c <fprintf@plt>
   1ae2c:	sub	sp, fp, #28
   1ae30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae34:	strbvs	r6, [r3, -r1, ror #8]!
   1ae38:	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
   1ae3c:	muleq	r1, r4, lr
   1ae40:	muleq	r1, r4, lr
   1ae44:	andeq	r5, r1, r4, lsr r8
   1ae48:	andeq	r4, r0, sp, lsl #10
   1ae4c:	andeq	r5, r1, ip, lsr #15
   1ae50:	andeq	r6, r1, r0, ror #27
   1ae54:	andeq	r6, r1, r4, ror #27
   1ae58:	ldrdeq	r6, [r1], -r0
   1ae5c:	ldrdeq	r6, [r1], -r0
   1ae60:	andeq	r6, r1, r4, lsr #27
   1ae64:	muleq	r1, r4, ip
   1ae68:	andeq	r6, r1, r8, lsr #25
   1ae6c:	andeq	r5, r1, ip, lsl r6
   1ae70:	andeq	r5, r1, r0, ror #6
   1ae74:	muleq	r1, ip, r9
   1ae78:	muleq	r0, r7, r1
   1ae7c:	andeq	r6, r1, r0, lsl #19
   1ae80:	andeq	r6, r1, r0, ror #18
   1ae84:	andeq	r6, r1, r4, lsr #18
   1ae88:	andeq	r6, r1, r4, asr #28
   1ae8c:	andeq	r4, r0, r1, ror #9
   1ae90:	andeq	r6, r1, r4, lsr #28
   1ae94:	andeq	r6, r1, r0, lsl lr
   1ae98:			; <UNDEFINED> instruction: 0x000152b8
   1ae9c:	strdeq	r6, [r1], -r4
   1aea0:	muleq	r0, r5, pc	; <UNPREDICTABLE>
   1aea4:	andeq	r6, r1, r4, ror sp
   1aea8:	andeq	r6, r1, r0, ror #26
   1aeac:	andeq	r6, r1, r0, asr sp
   1aeb0:	andeq	r6, r1, r8, lsr #24
   1aeb4:	andeq	r6, r1, ip, ror #25
   1aeb8:	andeq	r6, r1, r8, ror #25
   1aebc:	ldrdeq	r6, [r1], -ip
   1aec0:	andeq	r6, r1, ip, ror #20
   1aec4:	andeq	r6, r1, ip, lsl #23
   1aec8:	andeq	r6, r1, r0, ror fp
   1aecc:	andeq	r6, r1, r8, ror #22
   1aed0:	ldrdeq	r6, [r1], -ip
   1aed4:	andeq	r6, r1, ip, lsl #21
   1aed8:	andeq	r6, r1, ip, lsl #21
   1aedc:	ldr	r0, [r0]
   1aee0:	cmn	r0, #1
   1aee4:	beq	1af04 <next@@Base+0x20a4>
   1aee8:	ldr	r0, [r1, r0, lsl #2]
   1aeec:	cmp	r0, #0
   1aef0:	bxeq	lr
   1aef4:	ldrd	r2, [r0]
   1aef8:	adds	r2, r2, #1
   1aefc:	adc	r3, r3, #0
   1af00:	strd	r2, [r0]
   1af04:	bx	lr
   1af08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af0c:	add	fp, sp, #28
   1af10:	sub	sp, sp, #12
   1af14:	ldr	r7, [pc, #2008]	; 1b6f4 <next@@Base+0x2894>
   1af18:	mov	sl, #2
   1af1c:	cmp	r3, #0
   1af20:	movne	sl, #3
   1af24:	ldr	r7, [pc, r7]
   1af28:	cmp	r7, #0
   1af2c:	beq	1b6ec <next@@Base+0x288c>
   1af30:	stm	sp, {r0, r2, r3}
   1af34:	ldr	r0, [pc, #1980]	; 1b6f8 <next@@Base+0x2898>
   1af38:	mov	r5, r1
   1af3c:	add	r0, pc, r0
   1af40:	ldrb	r0, [r0]
   1af44:	ldr	r8, [pc, #1968]	; 1b6fc <next@@Base+0x289c>
   1af48:	cmp	r0, #1
   1af4c:	add	r8, pc, r8
   1af50:	bne	1afd4 <next@@Base+0x2174>
   1af54:	ldr	r4, [pc, #1956]	; 1b700 <next@@Base+0x28a0>
   1af58:	ldr	r0, [r8, #4]
   1af5c:	ldr	r1, [pc, #1952]	; 1b704 <next@@Base+0x28a4>
   1af60:	add	r4, pc, r4
   1af64:	ldr	r1, [pc, r1]
   1af68:	ldr	r7, [r4, #4]
   1af6c:	ldr	r6, [pc, #1940]	; 1b708 <next@@Base+0x28a8>
   1af70:	adds	r2, r1, #4
   1af74:	adc	r3, r0, #0
   1af78:	ldr	r6, [pc, r6]
   1af7c:	subs	r2, r6, r2
   1af80:	sbcs	r2, r7, r3
   1af84:	bcs	1afd4 <next@@Base+0x2174>
   1af88:	mov	r2, #7
   1af8c:	orr	r2, r2, #131072	; 0x20000
   1af90:	adds	r1, r2, r1
   1af94:	adc	r0, r0, #0
   1af98:	subs	r1, r1, #4
   1af9c:	sbc	r0, r0, #0
   1afa0:	mvn	r2, #0
   1afa4:	and	r7, r0, r2
   1afa8:	mov	r0, #16646144	; 0xfe0000
   1afac:	orr	r0, r0, #-16777216	; 0xff000000
   1afb0:	ldr	r9, [pc, #1876]	; 1b70c <next@@Base+0x28ac>
   1afb4:	and	r6, r1, r0
   1afb8:	ldr	r0, [pc, #1872]	; 1b710 <next@@Base+0x28b0>
   1afbc:	mov	r1, r6
   1afc0:	add	r9, pc, r9
   1afc4:	ldr	r0, [pc, r0]
   1afc8:	bl	126bc <realloc@plt>
   1afcc:	strd	r6, [r4]
   1afd0:	str	r0, [r9]
   1afd4:	ldr	r7, [pc, #1848]	; 1b714 <next@@Base+0x28b4>
   1afd8:	mov	r0, #0
   1afdc:	mov	r2, #1
   1afe0:	ldr	r7, [pc, r7]
   1afe4:	ldr	ip, [pc, #1836]	; 1b718 <next@@Base+0x28b8>
   1afe8:	adds	r4, r7, #4
   1afec:	ldr	ip, [pc, ip]
   1aff0:	ldr	r6, [r8, #4]
   1aff4:	mov	r1, ip
   1aff8:	adc	r9, r6, #0
   1affc:	strb	r0, [r1, r7]!
   1b000:	cmp	r5, #0
   1b004:	strb	r2, [r1, #3]
   1b008:	strb	r0, [r1, #2]
   1b00c:	strb	r0, [r1, #1]
   1b010:	stm	r8, {r4, r9}
   1b014:	mov	r8, r5
   1b018:	beq	1b034 <next@@Base+0x21d4>
   1b01c:	mov	r0, r8
   1b020:	mov	r5, ip
   1b024:	bl	12734 <strlen@plt>
   1b028:	add	r0, sl, r0, lsr #2
   1b02c:	mov	ip, r5
   1b030:	add	sl, r0, #2
   1b034:	ldr	r0, [pc, #1760]	; 1b71c <next@@Base+0x28bc>
   1b038:	add	r0, pc, r0
   1b03c:	ldrb	r0, [r0]
   1b040:	cmp	r0, #0
   1b044:	beq	1b120 <next@@Base+0x22c0>
   1b048:	ldr	lr, [pc, #1748]	; 1b724 <next@@Base+0x28c4>
   1b04c:	adds	r0, r7, #8
   1b050:	adc	r1, r6, #0
   1b054:	add	lr, pc, lr
   1b058:	ldr	r2, [lr, #4]
   1b05c:	ldr	r3, [pc, #1732]	; 1b728 <next@@Base+0x28c8>
   1b060:	ldr	r3, [pc, r3]
   1b064:	subs	r0, r3, r0
   1b068:	sbcs	r0, r2, r1
   1b06c:	bcs	1b18c <next@@Base+0x232c>
   1b070:	mov	r0, #7
   1b074:	orr	r0, r0, #131072	; 0x20000
   1b078:	adds	r0, r7, r0
   1b07c:	adc	r1, r6, #0
   1b080:	mvn	r2, #0
   1b084:	and	r5, r1, r2
   1b088:	mov	r1, #16646144	; 0xfe0000
   1b08c:	orr	r1, r1, #-16777216	; 0xff000000
   1b090:	and	r6, r0, r1
   1b094:	ldr	r4, [pc, #1684]	; 1b730 <next@@Base+0x28d0>
   1b098:	mov	r0, ip
   1b09c:	mov	r1, r6
   1b0a0:	add	r4, pc, r4
   1b0a4:	mov	r7, lr
   1b0a8:	bl	126bc <realloc@plt>
   1b0ac:	mov	lr, r7
   1b0b0:	mov	ip, r0
   1b0b4:	str	r6, [lr]
   1b0b8:	str	r5, [lr, #4]
   1b0bc:	str	ip, [r4]
   1b0c0:	ldr	r1, [pc, #1644]	; 1b734 <next@@Base+0x28d4>
   1b0c4:	lsr	r0, sl, #24
   1b0c8:	add	r1, pc, r1
   1b0cc:	lsr	r3, sl, #16
   1b0d0:	ldrb	r2, [r1]
   1b0d4:	ldr	r1, [pc, #1628]	; 1b738 <next@@Base+0x28d8>
   1b0d8:	add	r1, pc, r1
   1b0dc:	mov	r7, r1
   1b0e0:	ldr	r9, [r1, #4]
   1b0e4:	ldr	r4, [pc, #1616]	; 1b73c <next@@Base+0x28dc>
   1b0e8:	mov	r1, ip
   1b0ec:	ldr	r4, [pc, r4]
   1b0f0:	strb	sl, [r1, r4]!
   1b0f4:	strb	r0, [r1, #3]
   1b0f8:	lsr	r0, sl, #8
   1b0fc:	strb	r0, [r1, #1]
   1b100:	adds	r0, r4, #4
   1b104:	strb	r3, [r1, #2]
   1b108:	adc	r1, r9, #0
   1b10c:	mov	sl, r7
   1b110:	cmp	r2, #1
   1b114:	strd	r0, [sl]
   1b118:	bne	1b154 <next@@Base+0x22f4>
   1b11c:	b	1b1c0 <next@@Base+0x2360>
   1b120:	mov	r3, ip
   1b124:	lsr	r0, sl, #24
   1b128:	strb	sl, [r3, r4]!
   1b12c:	lsr	r1, sl, #16
   1b130:	lsr	r2, sl, #8
   1b134:	strb	r0, [r3, #3]
   1b138:	strb	r1, [r3, #2]
   1b13c:	strb	r2, [r3, #1]
   1b140:	ldr	sl, [pc, #1496]	; 1b720 <next@@Base+0x28c0>
   1b144:	adds	r0, r7, #8
   1b148:	adc	r1, r6, #0
   1b14c:	add	sl, pc, sl
   1b150:	strd	r0, [sl]
   1b154:	ldr	r5, [sp]
   1b158:	mov	r6, ip
   1b15c:	lsr	r2, r5, #24
   1b160:	strb	r5, [r6, r0]!
   1b164:	lsr	r3, r5, #16
   1b168:	lsr	r7, r5, #8
   1b16c:	strb	r2, [r6, #3]
   1b170:	strb	r3, [r6, #2]
   1b174:	strb	r7, [r6, #1]
   1b178:	adds	r2, r0, #4
   1b17c:	adc	r3, r1, #0
   1b180:	ldmib	sp, {r5, r9}
   1b184:	strd	r2, [sl]
   1b188:	b	1b334 <next@@Base+0x24d4>
   1b18c:	mov	r3, ip
   1b190:	lsr	r0, sl, #24
   1b194:	strb	sl, [r3, r4]!
   1b198:	lsr	r1, sl, #16
   1b19c:	lsr	r2, sl, #8
   1b1a0:	strb	r0, [r3, #3]
   1b1a4:	strb	r1, [r3, #2]
   1b1a8:	strb	r2, [r3, #1]
   1b1ac:	ldr	sl, [pc, #1400]	; 1b72c <next@@Base+0x28cc>
   1b1b0:	adds	r0, r7, #8
   1b1b4:	adc	r1, r6, #0
   1b1b8:	add	sl, pc, sl
   1b1bc:	strd	r0, [sl]
   1b1c0:	ldr	r7, [lr, #4]
   1b1c4:	ldr	r6, [pc, #1396]	; 1b740 <next@@Base+0x28e0>
   1b1c8:	adds	r2, r4, #8
   1b1cc:	adc	r3, r9, #0
   1b1d0:	ldr	r6, [pc, r6]
   1b1d4:	subs	r2, r6, r2
   1b1d8:	sbcs	r2, r7, r3
   1b1dc:	bcs	1b284 <next@@Base+0x2424>
   1b1e0:	mov	r0, #7
   1b1e4:	orr	r0, r0, #131072	; 0x20000
   1b1e8:	adds	r0, r4, r0
   1b1ec:	adc	r1, r9, #0
   1b1f0:	mvn	r2, #0
   1b1f4:	and	r5, r1, r2
   1b1f8:	mov	r1, #16646144	; 0xfe0000
   1b1fc:	orr	r1, r1, #-16777216	; 0xff000000
   1b200:	and	r4, r0, r1
   1b204:	ldr	r7, [pc, #1336]	; 1b744 <next@@Base+0x28e4>
   1b208:	mov	r0, ip
   1b20c:	mov	r1, r4
   1b210:	add	r7, pc, r7
   1b214:	mov	r6, lr
   1b218:	bl	126bc <realloc@plt>
   1b21c:	mov	lr, r6
   1b220:	str	r0, [r7]
   1b224:	strd	r4, [lr]
   1b228:	mov	ip, r0
   1b22c:	ldr	r6, [sp]
   1b230:	ldr	r0, [pc, #1296]	; 1b748 <next@@Base+0x28e8>
   1b234:	ldr	r1, [sl, #4]
   1b238:	mov	r3, ip
   1b23c:	add	r0, pc, r0
   1b240:	lsr	r2, r6, #24
   1b244:	ldrb	r7, [r0]
   1b248:	ldr	r0, [pc, #1276]	; 1b74c <next@@Base+0x28ec>
   1b24c:	ldr	r0, [pc, r0]
   1b250:	strb	r6, [r3, r0]!
   1b254:	ldmib	sp, {r5, r9}
   1b258:	strb	r2, [r3, #3]
   1b25c:	lsr	r2, r6, #8
   1b260:	lsr	r6, r6, #16
   1b264:	strb	r2, [r3, #1]
   1b268:	adds	r2, r0, #4
   1b26c:	strb	r6, [r3, #2]
   1b270:	adc	r3, r1, #0
   1b274:	cmp	r7, #1
   1b278:	strd	r2, [sl]
   1b27c:	beq	1b2b8 <next@@Base+0x2458>
   1b280:	b	1b334 <next@@Base+0x24d4>
   1b284:	ldr	r5, [sp]
   1b288:	mov	r6, ip
   1b28c:	lsr	r2, r5, #24
   1b290:	strb	r5, [r6, r0]!
   1b294:	lsr	r3, r5, #16
   1b298:	lsr	r7, r5, #8
   1b29c:	strb	r2, [r6, #3]
   1b2a0:	strb	r3, [r6, #2]
   1b2a4:	strb	r7, [r6, #1]
   1b2a8:	adds	r2, r0, #4
   1b2ac:	adc	r3, r1, #0
   1b2b0:	ldmib	sp, {r5, r9}
   1b2b4:	strd	r2, [sl]
   1b2b8:	str	r8, [sp, #8]
   1b2bc:	mov	r8, lr
   1b2c0:	adds	r7, r0, #8
   1b2c4:	ldr	r6, [r8, #4]
   1b2c8:	ldr	r4, [pc, #1152]	; 1b750 <next@@Base+0x28f0>
   1b2cc:	adc	lr, r1, #0
   1b2d0:	ldr	r4, [pc, r4]
   1b2d4:	subs	r7, r4, r7
   1b2d8:	sbcs	r7, r6, lr
   1b2dc:	bcs	1b330 <next@@Base+0x24d0>
   1b2e0:	mov	r2, #7
   1b2e4:	orr	r2, r2, #131072	; 0x20000
   1b2e8:	adds	r0, r0, r2
   1b2ec:	adc	r1, r1, #0
   1b2f0:	mvn	r2, #0
   1b2f4:	and	r7, r1, r2
   1b2f8:	mov	r1, #16646144	; 0xfe0000
   1b2fc:	orr	r1, r1, #-16777216	; 0xff000000
   1b300:	and	r6, r0, r1
   1b304:	ldr	r4, [pc, #1096]	; 1b754 <next@@Base+0x28f4>
   1b308:	mov	r0, ip
   1b30c:	mov	r1, r6
   1b310:	add	r4, pc, r4
   1b314:	bl	126bc <realloc@plt>
   1b318:	strd	r6, [r8]
   1b31c:	str	r0, [r4]
   1b320:	ldr	r3, [sl, #4]
   1b324:	ldr	r2, [pc, #1068]	; 1b758 <next@@Base+0x28f8>
   1b328:	mov	ip, r0
   1b32c:	ldr	r2, [pc, r2]
   1b330:	ldr	r8, [sp, #8]
   1b334:	mov	r6, ip
   1b338:	lsr	r7, r5, #8
   1b33c:	strb	r5, [r6, r2]!
   1b340:	adds	r4, r2, #4
   1b344:	lsr	r0, r5, #24
   1b348:	lsr	r1, r5, #16
   1b34c:	strb	r7, [r6, #1]
   1b350:	adc	r7, r3, #0
   1b354:	cmp	r9, #0
   1b358:	strb	r0, [r6, #3]
   1b35c:	strb	r1, [r6, #2]
   1b360:	stm	sl, {r4, r7}
   1b364:	beq	1b438 <next@@Base+0x25d8>
   1b368:	ldr	r0, [pc, #1004]	; 1b75c <next@@Base+0x28fc>
   1b36c:	ldr	sl, [fp, #8]
   1b370:	add	r0, pc, r0
   1b374:	ldrb	r0, [r0]
   1b378:	cmp	r0, #1
   1b37c:	bne	1b404 <next@@Base+0x25a4>
   1b380:	ldr	r9, [pc, #984]	; 1b760 <next@@Base+0x2900>
   1b384:	adds	r0, r2, #8
   1b388:	adc	r1, r3, #0
   1b38c:	add	r9, pc, r9
   1b390:	ldr	r6, [r9, #4]
   1b394:	ldr	r5, [pc, #968]	; 1b764 <next@@Base+0x2904>
   1b398:	ldr	r5, [pc, r5]
   1b39c:	subs	r0, r5, r0
   1b3a0:	sbcs	r0, r6, r1
   1b3a4:	bcs	1b404 <next@@Base+0x25a4>
   1b3a8:	mov	r0, #7
   1b3ac:	orr	r0, r0, #131072	; 0x20000
   1b3b0:	adds	r0, r2, r0
   1b3b4:	adc	r1, r3, #0
   1b3b8:	mvn	r2, #0
   1b3bc:	and	r5, r1, r2
   1b3c0:	mov	r1, #16646144	; 0xfe0000
   1b3c4:	orr	r1, r1, #-16777216	; 0xff000000
   1b3c8:	and	r6, r0, r1
   1b3cc:	ldr	r4, [pc, #916]	; 1b768 <next@@Base+0x2908>
   1b3d0:	mov	r0, ip
   1b3d4:	mov	r1, r6
   1b3d8:	add	r4, pc, r4
   1b3dc:	bl	126bc <realloc@plt>
   1b3e0:	str	r6, [r9]
   1b3e4:	str	r5, [r9, #4]
   1b3e8:	mov	ip, r0
   1b3ec:	ldr	r0, [pc, #888]	; 1b76c <next@@Base+0x290c>
   1b3f0:	str	ip, [r4]
   1b3f4:	add	r0, pc, r0
   1b3f8:	ldr	r7, [r0, #4]
   1b3fc:	ldr	r4, [pc, #876]	; 1b770 <next@@Base+0x2910>
   1b400:	ldr	r4, [pc, r4]
   1b404:	mov	r3, ip
   1b408:	lsr	r0, sl, #24
   1b40c:	strb	sl, [r3, r4]!
   1b410:	lsr	r1, sl, #16
   1b414:	lsr	r2, sl, #8
   1b418:	strb	r0, [r3, #3]
   1b41c:	strb	r1, [r3, #2]
   1b420:	strb	r2, [r3, #1]
   1b424:	ldr	sl, [pc, #840]	; 1b774 <next@@Base+0x2914>
   1b428:	adds	r4, r4, #4
   1b42c:	adc	r7, r7, #0
   1b430:	add	sl, pc, sl
   1b434:	stm	sl, {r4, r7}
   1b438:	cmp	r8, #0
   1b43c:	beq	1b6ec <next@@Base+0x288c>
   1b440:	mov	r0, r8
   1b444:	mov	r9, ip
   1b448:	bl	12734 <strlen@plt>
   1b44c:	mov	r6, #1
   1b450:	add	r5, r6, r0, lsr #2
   1b454:	ldr	r0, [pc, #796]	; 1b778 <next@@Base+0x2918>
   1b458:	add	r0, pc, r0
   1b45c:	ldrb	r0, [r0]
   1b460:	cmp	r0, #1
   1b464:	bne	1b508 <next@@Base+0x26a8>
   1b468:	ldr	sl, [pc, #780]	; 1b77c <next@@Base+0x291c>
   1b46c:	adds	r0, r4, #4
   1b470:	adc	r1, r7, #0
   1b474:	add	sl, pc, sl
   1b478:	ldr	r2, [sl, #4]
   1b47c:	ldr	r3, [pc, #764]	; 1b780 <next@@Base+0x2920>
   1b480:	ldr	r3, [pc, r3]
   1b484:	subs	r0, r3, r0
   1b488:	sbcs	r0, r2, r1
   1b48c:	bcs	1b51c <next@@Base+0x26bc>
   1b490:	mov	r0, #0
   1b494:	str	r0, [sp, #8]
   1b498:	mov	r0, #7
   1b49c:	orr	r0, r0, #131072	; 0x20000
   1b4a0:	adds	r0, r0, r4
   1b4a4:	adc	r1, r7, #0
   1b4a8:	subs	r0, r0, #4
   1b4ac:	sbc	r1, r1, #0
   1b4b0:	mvn	r2, #0
   1b4b4:	and	r7, r1, r2
   1b4b8:	mov	r1, #16646144	; 0xfe0000
   1b4bc:	orr	r1, r1, #-16777216	; 0xff000000
   1b4c0:	and	r4, r0, r1
   1b4c4:	ldr	r6, [pc, #700]	; 1b788 <next@@Base+0x2928>
   1b4c8:	mov	r0, r9
   1b4cc:	mov	r1, r4
   1b4d0:	add	r6, pc, r6
   1b4d4:	bl	126bc <realloc@plt>
   1b4d8:	stm	sl, {r4, r7}
   1b4dc:	str	r0, [r6]
   1b4e0:	ldr	sl, [pc, #676]	; 1b78c <next@@Base+0x292c>
   1b4e4:	mov	r3, r0
   1b4e8:	add	sl, pc, sl
   1b4ec:	ldr	r7, [sl, #4]
   1b4f0:	ldr	r0, [pc, #664]	; 1b790 <next@@Base+0x2930>
   1b4f4:	add	r0, pc, r0
   1b4f8:	ldrb	r6, [r0]
   1b4fc:	ldr	r4, [pc, #656]	; 1b794 <next@@Base+0x2934>
   1b500:	ldr	r4, [pc, r4]
   1b504:	b	1b530 <next@@Base+0x26d0>
   1b508:	mov	r0, #0
   1b50c:	str	r0, [sp, #8]
   1b510:	mov	r6, #0
   1b514:	mov	r3, r9
   1b518:	b	1b530 <next@@Base+0x26d0>
   1b51c:	mov	r0, #0
   1b520:	str	r0, [sp, #8]
   1b524:	ldr	sl, [pc, #600]	; 1b784 <next@@Base+0x2924>
   1b528:	mov	r3, r9
   1b52c:	add	sl, pc, sl
   1b530:	mov	r9, r3
   1b534:	strb	r5, [r3, r4]!
   1b538:	lsr	r0, r5, #24
   1b53c:	adds	r4, r4, #4
   1b540:	lsr	r1, r5, #16
   1b544:	lsr	r2, r5, #8
   1b548:	strb	r0, [r3, #3]
   1b54c:	mov	r0, r8
   1b550:	adc	r5, r7, #0
   1b554:	strb	r1, [r3, #2]
   1b558:	strb	r2, [r3, #1]
   1b55c:	strd	r4, [sl]
   1b560:	bl	12734 <strlen@plt>
   1b564:	mov	r7, r0
   1b568:	cmp	r6, #0
   1b56c:	beq	1b608 <next@@Base+0x27a8>
   1b570:	ldr	r6, [pc, #544]	; 1b798 <next@@Base+0x2938>
   1b574:	adds	r0, r4, r7
   1b578:	adc	r1, r5, #0
   1b57c:	add	r6, pc, r6
   1b580:	ldr	r2, [r6, #4]
   1b584:	ldr	r3, [pc, #528]	; 1b79c <next@@Base+0x293c>
   1b588:	ldr	r3, [pc, r3]
   1b58c:	subs	r3, r3, r0
   1b590:	sbcs	r2, r2, r1
   1b594:	bcs	1b600 <next@@Base+0x27a0>
   1b598:	mov	r2, #7
   1b59c:	orr	r2, r2, #131072	; 0x20000
   1b5a0:	adds	r0, r2, r0
   1b5a4:	adc	r1, r1, #0
   1b5a8:	subs	r0, r0, #8
   1b5ac:	sbc	r1, r1, #0
   1b5b0:	mvn	r2, #0
   1b5b4:	and	r5, r1, r2
   1b5b8:	mov	r1, #16646144	; 0xfe0000
   1b5bc:	orr	r1, r1, #-16777216	; 0xff000000
   1b5c0:	and	r4, r0, r1
   1b5c4:	mov	r0, r9
   1b5c8:	mov	r1, r4
   1b5cc:	bl	126bc <realloc@plt>
   1b5d0:	strd	r4, [r6]
   1b5d4:	ldr	r1, [pc, #452]	; 1b7a0 <next@@Base+0x2940>
   1b5d8:	ldr	r5, [sl, #4]
   1b5dc:	add	r1, pc, r1
   1b5e0:	str	r0, [r1]
   1b5e4:	ldr	r1, [pc, #440]	; 1b7a4 <next@@Base+0x2944>
   1b5e8:	add	r1, pc, r1
   1b5ec:	ldrb	r1, [r1]
   1b5f0:	str	r1, [sp, #8]
   1b5f4:	ldr	r4, [pc, #428]	; 1b7a8 <next@@Base+0x2948>
   1b5f8:	ldr	r4, [pc, r4]
   1b5fc:	b	1b60c <next@@Base+0x27ac>
   1b600:	mov	r0, #1
   1b604:	str	r0, [sp, #8]
   1b608:	mov	r0, r9
   1b60c:	mov	r9, r0
   1b610:	add	r0, r0, r4
   1b614:	mov	r1, r8
   1b618:	mov	r2, r7
   1b61c:	bl	12674 <memcpy@plt>
   1b620:	adds	r6, r4, r7
   1b624:	mov	r0, r8
   1b628:	adc	r5, r5, #0
   1b62c:	str	r6, [sl]
   1b630:	str	r5, [sl, #4]
   1b634:	bl	12734 <strlen@plt>
   1b638:	and	r0, r0, #3
   1b63c:	rsb	r4, r0, #4
   1b640:	ldr	r0, [sp, #8]
   1b644:	cmp	r0, #0
   1b648:	beq	1b6d0 <next@@Base+0x2870>
   1b64c:	ldr	r7, [pc, #344]	; 1b7ac <next@@Base+0x294c>
   1b650:	adds	r0, r6, r4
   1b654:	adc	r1, r5, #0
   1b658:	add	r7, pc, r7
   1b65c:	ldr	r2, [r7, #4]
   1b660:	ldr	r3, [pc, #328]	; 1b7b0 <next@@Base+0x2950>
   1b664:	ldr	r3, [pc, r3]
   1b668:	subs	r3, r3, r0
   1b66c:	sbcs	r2, r2, r1
   1b670:	bcs	1b6d0 <next@@Base+0x2870>
   1b674:	mov	r2, #7
   1b678:	orr	r2, r2, #131072	; 0x20000
   1b67c:	adds	r0, r2, r0
   1b680:	adc	r1, r1, #0
   1b684:	subs	r0, r0, #8
   1b688:	sbc	r1, r1, #0
   1b68c:	mvn	r2, #0
   1b690:	and	r5, r1, r2
   1b694:	mov	r1, #16646144	; 0xfe0000
   1b698:	orr	r1, r1, #-16777216	; 0xff000000
   1b69c:	and	r6, r0, r1
   1b6a0:	ldr	r8, [pc, #268]	; 1b7b4 <next@@Base+0x2954>
   1b6a4:	mov	r0, r9
   1b6a8:	mov	r1, r6
   1b6ac:	add	r8, pc, r8
   1b6b0:	bl	126bc <realloc@plt>
   1b6b4:	str	r6, [r7]
   1b6b8:	str	r5, [r7, #4]
   1b6bc:	str	r0, [r8]
   1b6c0:	ldr	r5, [sl, #4]
   1b6c4:	ldr	r6, [pc, #236]	; 1b7b8 <next@@Base+0x2958>
   1b6c8:	mov	r9, r0
   1b6cc:	ldr	r6, [pc, r6]
   1b6d0:	add	r0, r9, r6
   1b6d4:	mov	r1, #0
   1b6d8:	mov	r2, r4
   1b6dc:	bl	1277c <memset@plt>
   1b6e0:	adds	r0, r6, r4
   1b6e4:	adc	r1, r5, #0
   1b6e8:	strd	r0, [sl]
   1b6ec:	sub	sp, fp, #28
   1b6f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6f4:	andeq	r6, r1, r4, ror #15
   1b6f8:	andeq	r6, r1, r8, asr #15
   1b6fc:	andeq	r6, r1, ip, asr #15
   1b700:			; <UNDEFINED> instruction: 0x000167b0
   1b704:			; <UNDEFINED> instruction: 0x000167b4
   1b708:	muleq	r1, r8, r7
   1b70c:	andeq	r6, r1, ip, asr #14
   1b710:	andeq	r6, r1, r8, asr #14
   1b714:	andeq	r6, r1, r8, lsr r7
   1b718:	andeq	r6, r1, r0, lsr #14
   1b71c:	andeq	r6, r1, ip, asr #13
   1b720:	andeq	r6, r1, ip, asr #11
   1b724:			; <UNDEFINED> instruction: 0x000166bc
   1b728:			; <UNDEFINED> instruction: 0x000166b0
   1b72c:	andeq	r6, r1, r0, ror #10
   1b730:	andeq	r6, r1, ip, ror #12
   1b734:	andeq	r6, r1, ip, lsr r6
   1b738:	andeq	r6, r1, r0, asr #12
   1b73c:	andeq	r6, r1, ip, lsr #12
   1b740:	andeq	r6, r1, r0, asr #10
   1b744:	strdeq	r6, [r1], -ip
   1b748:	andeq	r6, r1, r8, asr #9
   1b74c:	andeq	r6, r1, ip, asr #9
   1b750:	andeq	r6, r1, r0, asr #8
   1b754:	strdeq	r6, [r1], -ip
   1b758:	andeq	r6, r1, ip, ror #7
   1b75c:	muleq	r1, r4, r3
   1b760:	andeq	r6, r1, r4, lsl #7
   1b764:	andeq	r6, r1, r8, ror r3
   1b768:	andeq	r6, r1, r4, lsr r3
   1b76c:	andeq	r6, r1, r4, lsr #6
   1b770:	andeq	r6, r1, r8, lsl r3
   1b774:	andeq	r6, r1, r8, ror #5
   1b778:	andeq	r6, r1, ip, lsr #5
   1b77c:	muleq	r1, ip, r2
   1b780:	muleq	r1, r0, r2
   1b784:	andeq	r6, r1, ip, ror #3
   1b788:	andeq	r6, r1, ip, lsr r2
   1b78c:	andeq	r6, r1, r0, lsr r2
   1b790:	andeq	r6, r1, r0, lsl r2
   1b794:	andeq	r6, r1, r8, lsl r2
   1b798:	muleq	r1, r4, r1
   1b79c:	andeq	r6, r1, r8, lsl #3
   1b7a0:	andeq	r6, r1, r0, lsr r1
   1b7a4:	andeq	r6, r1, ip, lsl r1
   1b7a8:	andeq	r6, r1, r0, lsr #2
   1b7ac:	strheq	r6, [r1], -r8
   1b7b0:	andeq	r6, r1, ip, lsr #1
   1b7b4:	andeq	r6, r1, r0, rrx
   1b7b8:	andeq	r6, r1, ip, asr #32
   1b7bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7c0:	add	fp, sp, #28
   1b7c4:	sub	sp, sp, #28
   1b7c8:	mov	ip, r0
   1b7cc:	ldr	r0, [pc, #1740]	; 1bea0 <next@@Base+0x3040>
   1b7d0:	ldr	r0, [pc, r0]
   1b7d4:	cmp	r0, #0
   1b7d8:	beq	1b8f4 <next@@Base+0x2a94>
   1b7dc:	ldr	r5, [pc, #1728]	; 1bea4 <next@@Base+0x3044>
   1b7e0:	mov	sl, r1
   1b7e4:	add	r5, pc, r5
   1b7e8:	ldr	r3, [r5, #4]
   1b7ec:	ldr	r4, [pc, #1716]	; 1bea8 <next@@Base+0x3048>
   1b7f0:	ldr	r4, [pc, r4]
   1b7f4:	ldr	r6, [pc, #1712]	; 1beac <next@@Base+0x304c>
   1b7f8:	add	r6, pc, r6
   1b7fc:	ldrb	r0, [r6]
   1b800:	cmp	r0, #0
   1b804:	beq	1b8fc <next@@Base+0x2a9c>
   1b808:	ldr	r8, [pc, #1732]	; 1bed4 <next@@Base+0x3074>
   1b80c:	mov	r5, #10551296	; 0xa10000
   1b810:	adds	r9, r4, #4
   1b814:	add	r8, pc, r8
   1b818:	adc	r2, r3, #0
   1b81c:	ldr	r0, [r8, #4]
   1b820:	ldr	r1, [pc, #1712]	; 1bed8 <next@@Base+0x3078>
   1b824:	orr	r5, r5, #16777216	; 0x1000000
   1b828:	ldr	r1, [pc, r1]
   1b82c:	subs	r1, r1, r9
   1b830:	sbcs	r0, r0, r2
   1b834:	bcs	1ba00 <next@@Base+0x2ba0>
   1b838:	mov	r0, #3
   1b83c:	orr	r0, r0, #131072	; 0x20000
   1b840:	adds	r0, r4, r0
   1b844:	adc	r1, r3, #0
   1b848:	mvn	r2, #0
   1b84c:	and	r9, r1, r2
   1b850:	mov	r1, #16646144	; 0xfe0000
   1b854:	orr	r1, r1, #-16777216	; 0xff000000
   1b858:	and	r4, r0, r1
   1b85c:	ldr	r0, [pc, #1664]	; 1bee4 <next@@Base+0x3084>
   1b860:	mov	r1, r4
   1b864:	mov	r7, ip
   1b868:	ldr	r0, [pc, r0]
   1b86c:	bl	126bc <realloc@plt>
   1b870:	ldr	ip, [pc, #1648]	; 1bee8 <next@@Base+0x3088>
   1b874:	ldr	lr, [pc, #1648]	; 1beec <next@@Base+0x308c>
   1b878:	stm	r8, {r4, r9}
   1b87c:	ldr	r1, [pc, #1644]	; 1bef0 <next@@Base+0x3090>
   1b880:	add	ip, pc, ip
   1b884:	add	lr, pc, lr
   1b888:	add	r1, pc, r1
   1b88c:	mov	r2, r0
   1b890:	str	r2, [r1]
   1b894:	mov	r6, ip
   1b898:	ldrb	ip, [ip]
   1b89c:	ldr	r3, [lr, #4]
   1b8a0:	ldr	r4, [pc, #1612]	; 1bef4 <next@@Base+0x3094>
   1b8a4:	lsr	r0, r5, #24
   1b8a8:	mov	r1, r8
   1b8ac:	ldr	r4, [pc, r4]
   1b8b0:	str	r2, [sp, #20]
   1b8b4:	lsl	r8, r7, #1
   1b8b8:	strb	r5, [r2, r4]!
   1b8bc:	adds	r9, r4, #4
   1b8c0:	strb	r0, [r2, #3]
   1b8c4:	lsr	r0, r5, #16
   1b8c8:	strb	r0, [r2, #2]
   1b8cc:	lsr	r0, r5, #8
   1b8d0:	strb	r0, [r2, #1]
   1b8d4:	adc	r5, r3, #0
   1b8d8:	mov	r0, #0
   1b8dc:	cmp	ip, #1
   1b8e0:	str	r3, [sp, #16]
   1b8e4:	str	r9, [lr]
   1b8e8:	str	r5, [lr, #4]
   1b8ec:	beq	1ba54 <next@@Base+0x2bf4>
   1b8f0:	b	1bbb8 <next@@Base+0x2d58>
   1b8f4:	sub	sp, fp, #28
   1b8f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8fc:	ldr	r0, [pc, #1452]	; 1beb0 <next@@Base+0x3050>
   1b900:	mov	r7, r3
   1b904:	mov	r9, #0
   1b908:	ldr	r0, [pc, r0]
   1b90c:	str	r0, [sp, #20]
   1b910:	ldrb	r1, [r0, r4]!
   1b914:	str	r7, [sp, #16]
   1b918:	ldrb	r2, [r0, #1]
   1b91c:	ldrb	r3, [r0, #2]
   1b920:	ldrb	r0, [r0, #3]
   1b924:	orr	r1, r1, r2, lsl #8
   1b928:	orr	r1, r1, r3, lsl #16
   1b92c:	adds	r2, r4, #4
   1b930:	orr	r3, r1, r0, lsl #24
   1b934:	adc	r7, r7, #0
   1b938:	mov	r1, r5
   1b93c:	stm	r5, {r2, r7}
   1b940:	mov	r5, #10551296	; 0xa10000
   1b944:	orr	r5, r5, #16777216	; 0x1000000
   1b948:	cmn	r3, #1
   1b94c:	beq	1bb00 <next@@Base+0x2ca0>
   1b950:	cmp	r3, r5
   1b954:	bne	1bb10 <next@@Base+0x2cb0>
   1b958:	str	r7, [sp, #8]
   1b95c:	ldr	r0, [sp, #20]
   1b960:	str	r4, [sp, #4]
   1b964:	mov	r8, r5
   1b968:	ldr	r3, [r0, r2]
   1b96c:	ldr	r0, [sp, #16]
   1b970:	adds	r5, r4, #8
   1b974:	adc	r9, r0, #0
   1b978:	cmn	r3, #1
   1b97c:	stm	r1, {r5, r9}
   1b980:	beq	1bb1c <next@@Base+0x2cbc>
   1b984:	lsr	r0, r3, #1
   1b988:	mov	r7, ip
   1b98c:	cmp	r0, ip
   1b990:	bne	1bb1c <next@@Base+0x2cbc>
   1b994:	lsl	r0, r7, #3
   1b998:	mov	r4, r2
   1b99c:	bl	126ec <malloc@plt>
   1b9a0:	cmp	r7, #0
   1b9a4:	beq	1bb44 <next@@Base+0x2ce4>
   1b9a8:	str	r0, [sp, #12]
   1b9ac:	str	r7, [sp, #24]
   1b9b0:	ldr	r2, [sp, #20]
   1b9b4:	ldr	r3, [r2, r5]!
   1b9b8:	adds	r5, r5, #8
   1b9bc:	ldr	r2, [r2, #4]
   1b9c0:	str	r3, [r0]
   1b9c4:	adc	r9, r9, #0
   1b9c8:	str	r2, [r0, #4]
   1b9cc:	add	r0, r0, #8
   1b9d0:	subs	r7, r7, #1
   1b9d4:	bne	1b9b0 <next@@Base+0x2b50>
   1b9d8:	ldr	lr, [pc, #1260]	; 1becc <next@@Base+0x306c>
   1b9dc:	add	lr, pc, lr
   1b9e0:	stm	lr, {r5, r9}
   1b9e4:	ldr	ip, [pc, #1252]	; 1bed0 <next@@Base+0x3070>
   1b9e8:	mov	r1, lr
   1b9ec:	ldr	r0, [sp, #12]
   1b9f0:	add	ip, pc, ip
   1b9f4:	mov	r6, ip
   1b9f8:	ldr	ip, [sp, #24]
   1b9fc:	b	1bb60 <next@@Base+0x2d00>
   1ba00:	str	r3, [sp, #16]
   1ba04:	ldr	r3, [pc, #1232]	; 1bedc <next@@Base+0x307c>
   1ba08:	mov	lr, r5
   1ba0c:	mov	r7, ip
   1ba10:	lsr	ip, r5, #16
   1ba14:	ldr	r3, [pc, r3]
   1ba18:	lsr	r1, r5, #8
   1ba1c:	str	r3, [sp, #20]
   1ba20:	strb	lr, [r3, r4]!
   1ba24:	lsr	r0, lr, #24
   1ba28:	strb	r1, [r3, #1]
   1ba2c:	strb	r0, [r3, #3]
   1ba30:	strb	ip, [r3, #2]
   1ba34:	ldr	lr, [pc, #1188]	; 1bee0 <next@@Base+0x3080>
   1ba38:	lsl	r5, r7, #1
   1ba3c:	add	lr, pc, lr
   1ba40:	mov	r1, r8
   1ba44:	mov	r8, r5
   1ba48:	str	r9, [lr]
   1ba4c:	str	r2, [lr, #4]
   1ba50:	mov	r5, r2
   1ba54:	str	r8, [sp, #24]
   1ba58:	mov	r8, r1
   1ba5c:	ldr	r0, [sp, #16]
   1ba60:	ldr	r2, [r8, #4]
   1ba64:	ldr	r3, [pc, #1164]	; 1bef8 <next@@Base+0x3098>
   1ba68:	adds	ip, r4, #8
   1ba6c:	adc	r1, r0, #0
   1ba70:	mov	r0, #0
   1ba74:	ldr	r3, [pc, r3]
   1ba78:	subs	r3, r3, ip
   1ba7c:	sbcs	r1, r2, r1
   1ba80:	bcs	1baf8 <next@@Base+0x2c98>
   1ba84:	ldr	r5, [pc, #1136]	; 1befc <next@@Base+0x309c>
   1ba88:	mov	r0, #3
   1ba8c:	ldr	r1, [sp, #16]
   1ba90:	orr	r0, r0, #131072	; 0x20000
   1ba94:	adds	r0, r0, r4
   1ba98:	adc	r1, r1, #0
   1ba9c:	adds	r0, r0, #4
   1baa0:	adc	r1, r1, #0
   1baa4:	mvn	r2, #0
   1baa8:	and	r9, r1, r2
   1baac:	mov	r1, #16646144	; 0xfe0000
   1bab0:	orr	r1, r1, #-16777216	; 0xff000000
   1bab4:	and	r4, r0, r1
   1bab8:	ldr	r0, [sp, #20]
   1babc:	mov	r1, r4
   1bac0:	add	r5, pc, r5
   1bac4:	bl	126bc <realloc@plt>
   1bac8:	ldr	ip, [pc, #1072]	; 1bf00 <next@@Base+0x30a0>
   1bacc:	ldr	lr, [pc, #1072]	; 1bf04 <next@@Base+0x30a4>
   1bad0:	stm	r8, {r4, r9}
   1bad4:	add	lr, pc, lr
   1bad8:	str	r0, [r5]
   1badc:	str	r0, [sp, #20]
   1bae0:	ldr	r5, [lr, #4]
   1bae4:	ldr	r9, [pc, #1052]	; 1bf08 <next@@Base+0x30a8>
   1bae8:	add	ip, pc, ip
   1baec:	mov	r6, ip
   1baf0:	mov	r0, #0
   1baf4:	ldr	r9, [pc, r9]
   1baf8:	ldr	r8, [sp, #24]
   1bafc:	b	1bbb8 <next@@Base+0x2d58>
   1bb00:	mov	r3, r2
   1bb04:	ldr	r2, [sp, #16]
   1bb08:	mov	r0, #0
   1bb0c:	b	1bb78 <next@@Base+0x2d18>
   1bb10:	ldr	r1, [pc, #924]	; 1beb4 <next@@Base+0x3054>
   1bb14:	add	r1, pc, r1
   1bb18:	b	1bb24 <next@@Base+0x2cc4>
   1bb1c:	ldr	r1, [pc, #924]	; 1bec0 <next@@Base+0x3060>
   1bb20:	add	r1, pc, r1
   1bb24:	ldr	r0, [pc, #908]	; 1beb8 <next@@Base+0x3058>
   1bb28:	ldr	r0, [pc, r0]
   1bb2c:	ldr	r0, [r0]
   1bb30:	ldr	r2, [pc, #900]	; 1bebc <next@@Base+0x305c>
   1bb34:	ldr	r2, [pc, r2]
   1bb38:	sub	sp, fp, #28
   1bb3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb40:	b	1274c <fprintf@plt>
   1bb44:	ldr	lr, [pc, #888]	; 1bec4 <next@@Base+0x3064>
   1bb48:	ldr	ip, [pc, #888]	; 1bec8 <next@@Base+0x3068>
   1bb4c:	add	lr, pc, lr
   1bb50:	add	ip, pc, ip
   1bb54:	mov	r6, ip
   1bb58:	mov	r1, lr
   1bb5c:	mov	ip, r7
   1bb60:	mov	r3, r4
   1bb64:	ldr	r7, [sp, #8]
   1bb68:	ldr	r4, [sp, #4]
   1bb6c:	ldr	r2, [sp, #16]
   1bb70:	mov	r9, #0
   1bb74:	mov	r5, r8
   1bb78:	mov	lr, r1
   1bb7c:	mov	r1, #1
   1bb80:	str	r4, [lr]
   1bb84:	str	r2, [lr, #4]
   1bb88:	ldr	r2, [sp, #20]
   1bb8c:	lsl	r8, ip, #1
   1bb90:	strb	r5, [r2, r4]!
   1bb94:	mov	r5, r7
   1bb98:	strb	r1, [r2, #3]
   1bb9c:	mov	r1, #161	; 0xa1
   1bba0:	strb	r9, [r2, #1]
   1bba4:	mov	r9, r3
   1bba8:	strb	r1, [r2, #2]
   1bbac:	str	r9, [lr]
   1bbb0:	str	r7, [lr, #4]
   1bbb4:	mov	r7, ip
   1bbb8:	ldr	r3, [sp, #20]
   1bbbc:	lsr	r1, r8, #16
   1bbc0:	mov	ip, r3
   1bbc4:	strb	r8, [r3, r9]!
   1bbc8:	lsr	r4, r8, #24
   1bbcc:	lsr	r2, r8, #8
   1bbd0:	adds	r8, r9, #4
   1bbd4:	strb	r1, [r3, #2]
   1bbd8:	adc	r1, r5, #0
   1bbdc:	cmp	r7, #0
   1bbe0:	strb	r4, [r3, #3]
   1bbe4:	strb	r2, [r3, #1]
   1bbe8:	str	r8, [lr]
   1bbec:	str	r1, [lr, #4]
   1bbf0:	str	r7, [sp, #24]
   1bbf4:	beq	1be94 <next@@Base+0x3034>
   1bbf8:	ldr	r7, [pc, #780]	; 1bf0c <next@@Base+0x30ac>
   1bbfc:	mov	r4, lr
   1bc00:	mov	r2, r0
   1bc04:	add	r7, pc, r7
   1bc08:	str	r0, [sp, #12]
   1bc0c:	b	1bca8 <next@@Base+0x2e48>
   1bc10:	mov	r7, ip
   1bc14:	lsr	r2, r4, #24
   1bc18:	strb	r4, [r7, r8]!
   1bc1c:	mov	lr, r6
   1bc20:	lsr	r9, r4, #16
   1bc24:	lsr	r6, r4, #8
   1bc28:	strb	r2, [r7, #3]
   1bc2c:	adds	r2, r8, #4
   1bc30:	mov	r4, r0
   1bc34:	strb	r9, [r7, #2]
   1bc38:	mov	r3, ip
   1bc3c:	strb	r6, [r7, #1]
   1bc40:	adc	r9, r1, #0
   1bc44:	stm	r4, {r2, r9}
   1bc48:	mov	ip, r3
   1bc4c:	lsr	r1, r5, #16
   1bc50:	strb	r5, [r3, r2]!
   1bc54:	lsr	r0, r5, #24
   1bc58:	lsr	r7, r5, #8
   1bc5c:	adds	r8, r2, #4
   1bc60:	strb	r1, [r3, #2]
   1bc64:	adc	r1, r9, #0
   1bc68:	strb	r0, [r3, #3]
   1bc6c:	strb	r7, [r3, #1]
   1bc70:	str	r8, [r4]
   1bc74:	str	r1, [r4, #4]
   1bc78:	ldr	r0, [sp, #24]
   1bc7c:	ldr	r2, [sp, #16]
   1bc80:	mov	r6, lr
   1bc84:	subs	r0, r0, #1
   1bc88:	str	r0, [sp, #24]
   1bc8c:	ldr	sl, [sp, #20]
   1bc90:	ldr	r0, [sp, #12]
   1bc94:	ldr	r7, [pc, #676]	; 1bf40 <next@@Base+0x30e0>
   1bc98:	add	r2, r2, #8
   1bc9c:	add	sl, sl, #8
   1bca0:	add	r7, pc, r7
   1bca4:	beq	1be94 <next@@Base+0x3034>
   1bca8:	cmp	r0, #0
   1bcac:	mov	r0, r4
   1bcb0:	str	r2, [sp, #16]
   1bcb4:	beq	1bcc0 <next@@Base+0x2e60>
   1bcb8:	ldrd	r2, [r2]
   1bcbc:	b	1bcc8 <next@@Base+0x2e68>
   1bcc0:	mov	r2, #0
   1bcc4:	mov	r3, #0
   1bcc8:	ldrd	r4, [sl]
   1bccc:	adds	r4, r4, r2
   1bcd0:	adc	r5, r5, r3
   1bcd4:	strd	r4, [sl]
   1bcd8:	ldrb	r2, [r6]
   1bcdc:	str	sl, [sp, #20]
   1bce0:	cmp	r2, #0
   1bce4:	beq	1bc10 <next@@Base+0x2db0>
   1bce8:	ldr	r3, [r7, #4]
   1bcec:	ldr	r6, [pc, #540]	; 1bf10 <next@@Base+0x30b0>
   1bcf0:	adds	r2, r8, #4
   1bcf4:	adc	r9, r1, #0
   1bcf8:	ldr	r6, [pc, r6]
   1bcfc:	subs	r2, r6, r2
   1bd00:	sbcs	r2, r3, r9
   1bd04:	bcs	1bdb0 <next@@Base+0x2f50>
   1bd08:	mov	r2, #3
   1bd0c:	orr	r2, r2, #131072	; 0x20000
   1bd10:	adds	r0, r8, r2
   1bd14:	adc	r1, r1, #0
   1bd18:	mvn	r2, #0
   1bd1c:	and	r8, r1, r2
   1bd20:	mov	r1, #16646144	; 0xfe0000
   1bd24:	orr	r1, r1, #-16777216	; 0xff000000
   1bd28:	and	r6, r0, r1
   1bd2c:	mov	r0, ip
   1bd30:	mov	r1, r6
   1bd34:	bl	126bc <realloc@plt>
   1bd38:	ldr	ip, [pc, #468]	; 1bf14 <next@@Base+0x30b4>
   1bd3c:	ldr	lr, [pc, #468]	; 1bf18 <next@@Base+0x30b8>
   1bd40:	stm	r7, {r6, r8}
   1bd44:	mov	r3, r0
   1bd48:	ldr	r0, [pc, #460]	; 1bf1c <next@@Base+0x30bc>
   1bd4c:	add	lr, pc, lr
   1bd50:	mov	r9, lr
   1bd54:	add	r0, pc, r0
   1bd58:	add	ip, pc, ip
   1bd5c:	str	r3, [r0]
   1bd60:	mov	lr, ip
   1bd64:	ldrb	ip, [ip]
   1bd68:	ldr	r1, [r9, #4]
   1bd6c:	ldr	r8, [pc, #428]	; 1bf20 <next@@Base+0x30c0>
   1bd70:	mov	r7, r3
   1bd74:	lsr	r2, r4, #24
   1bd78:	ldr	r8, [pc, r8]
   1bd7c:	lsr	r6, r4, #16
   1bd80:	strb	r4, [r7, r8]!
   1bd84:	strb	r2, [r7, #3]
   1bd88:	lsr	r2, r4, #8
   1bd8c:	strb	r2, [r7, #1]
   1bd90:	adds	r2, r8, #4
   1bd94:	mov	r4, r9
   1bd98:	adc	r9, r1, #0
   1bd9c:	cmp	ip, #1
   1bda0:	strb	r6, [r7, #2]
   1bda4:	stm	r4, {r2, r9}
   1bda8:	bne	1bc48 <next@@Base+0x2de8>
   1bdac:	b	1bde4 <next@@Base+0x2f84>
   1bdb0:	mov	r6, ip
   1bdb4:	lsr	r2, r4, #24
   1bdb8:	strb	r4, [r6, r8]!
   1bdbc:	lsr	r9, r4, #16
   1bdc0:	lsr	r7, r4, #8
   1bdc4:	strb	r2, [r6, #3]
   1bdc8:	adds	r2, r8, #4
   1bdcc:	mov	r4, r0
   1bdd0:	strb	r9, [r6, #2]
   1bdd4:	mov	r3, ip
   1bdd8:	strb	r7, [r6, #1]
   1bddc:	adc	r9, r1, #0
   1bde0:	stm	r4, {r2, r9}
   1bde4:	ldr	lr, [pc, #312]	; 1bf24 <next@@Base+0x30c4>
   1bde8:	mov	r0, r4
   1bdec:	adds	r7, r8, #8
   1bdf0:	add	lr, pc, lr
   1bdf4:	adc	ip, r1, #0
   1bdf8:	ldr	r4, [lr, #4]
   1bdfc:	ldr	r6, [pc, #292]	; 1bf28 <next@@Base+0x30c8>
   1be00:	ldr	r6, [pc, r6]
   1be04:	subs	r7, r6, r7
   1be08:	sbcs	r7, r4, ip
   1be0c:	bcs	1be84 <next@@Base+0x3024>
   1be10:	mov	r2, #3
   1be14:	orr	r2, r2, #131072	; 0x20000
   1be18:	adds	r0, r2, r8
   1be1c:	adc	r1, r1, #0
   1be20:	adds	r0, r0, #4
   1be24:	adc	r1, r1, #0
   1be28:	mvn	r2, #0
   1be2c:	and	r7, r1, r2
   1be30:	mov	r1, #16646144	; 0xfe0000
   1be34:	orr	r1, r1, #-16777216	; 0xff000000
   1be38:	and	r6, r0, r1
   1be3c:	mov	r0, r3
   1be40:	mov	r1, r6
   1be44:	mov	r8, lr
   1be48:	bl	126bc <realloc@plt>
   1be4c:	ldr	lr, [pc, #220]	; 1bf30 <next@@Base+0x30d0>
   1be50:	strd	r6, [r8]
   1be54:	mov	r3, r0
   1be58:	add	lr, pc, lr
   1be5c:	mov	r4, lr
   1be60:	ldr	r9, [lr, #4]
   1be64:	ldr	r0, [pc, #200]	; 1bf34 <next@@Base+0x30d4>
   1be68:	add	r0, pc, r0
   1be6c:	str	r3, [r0]
   1be70:	ldr	r2, [pc, #192]	; 1bf38 <next@@Base+0x30d8>
   1be74:	ldr	r2, [pc, r2]
   1be78:	ldr	lr, [pc, #188]	; 1bf3c <next@@Base+0x30dc>
   1be7c:	add	lr, pc, lr
   1be80:	b	1bc48 <next@@Base+0x2de8>
   1be84:	ldr	lr, [pc, #160]	; 1bf2c <next@@Base+0x30cc>
   1be88:	mov	r4, r0
   1be8c:	add	lr, pc, lr
   1be90:	b	1bc48 <next@@Base+0x2de8>
   1be94:	sub	sp, fp, #28
   1be98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be9c:	b	1265c <free@plt>
   1bea0:	andeq	r5, r1, r8, lsr pc
   1bea4:	andeq	r5, r1, r4, lsr pc
   1bea8:	andeq	r5, r1, r8, lsr #30
   1beac:	andeq	r5, r1, ip, lsl #30
   1beb0:	andeq	r5, r1, r4, lsl #28
   1beb4:	andeq	r3, r0, r1, asr #5
   1beb8:	andeq	r4, r1, ip, lsl #11
   1bebc:	andeq	r5, r1, ip, asr #23
   1bec0:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   1bec4:	andeq	r5, r1, ip, asr #23
   1bec8:			; <UNDEFINED> instruction: 0x00015bb4
   1becc:	andeq	r5, r1, ip, lsr sp
   1bed0:	andeq	r5, r1, r4, lsl sp
   1bed4:	strdeq	r5, [r1], -ip
   1bed8:	andeq	r5, r1, r8, ror #29
   1bedc:	strdeq	r5, [r1], -r8
   1bee0:	ldrdeq	r5, [r1], -ip
   1bee4:	andeq	r5, r1, r4, lsr #29
   1bee8:	andeq	r5, r1, r4, lsl #29
   1beec:	muleq	r1, r4, lr
   1bef0:	andeq	r5, r1, r4, lsl #29
   1bef4:	andeq	r5, r1, ip, ror #28
   1bef8:	muleq	r1, ip, ip
   1befc:	andeq	r5, r1, ip, asr #24
   1bf00:	andeq	r5, r1, ip, lsl ip
   1bf04:	andeq	r5, r1, r4, asr #24
   1bf08:	andeq	r5, r1, r4, lsr #24
   1bf0c:	andeq	r5, r1, ip, lsl #22
   1bf10:	andeq	r5, r1, r8, lsl sl
   1bf14:	andeq	r5, r1, ip, lsr #19
   1bf18:	andeq	r5, r1, ip, asr #19
   1bf1c:			; <UNDEFINED> instruction: 0x000159b8
   1bf20:	andeq	r5, r1, r0, lsr #19
   1bf24:	andeq	r5, r1, r0, lsr #18
   1bf28:	andeq	r5, r1, r0, lsl r9
   1bf2c:	andeq	r5, r1, r8, ror r8
   1bf30:	andeq	r5, r1, r0, asr #17
   1bf34:	andeq	r5, r1, r4, lsr #17
   1bf38:	andeq	r5, r1, r4, lsr #17
   1bf3c:	andeq	r5, r1, r8, lsl #17
   1bf40:	andeq	r5, r1, r0, ror sl
   1bf44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf48:	add	fp, sp, #28
   1bf4c:	sub	sp, sp, #4
   1bf50:	ldr	r0, [pc, #3180]	; 1cbc4 <next@@Base+0x3d64>
   1bf54:	ldr	r0, [pc, r0]
   1bf58:	cmp	r0, #0
   1bf5c:	beq	1c5b8 <next@@Base+0x3758>
   1bf60:	ldr	sl, [pc, #3168]	; 1cbc8 <next@@Base+0x3d68>
   1bf64:	add	sl, pc, sl
   1bf68:	ldr	r6, [sl, #4]
   1bf6c:	ldr	r5, [pc, #3160]	; 1cbcc <next@@Base+0x3d6c>
   1bf70:	ldr	r5, [pc, r5]
   1bf74:	ldr	r8, [pc, #3156]	; 1cbd0 <next@@Base+0x3d70>
   1bf78:	add	r8, pc, r8
   1bf7c:	ldrb	r0, [r8]
   1bf80:	cmp	r0, #0
   1bf84:	beq	1c048 <next@@Base+0x31e8>
   1bf88:	ldr	r9, [pc, #3164]	; 1cbec <next@@Base+0x3d8c>
   1bf8c:	adds	r2, r5, #4
   1bf90:	adc	ip, r6, #0
   1bf94:	add	r9, pc, r9
   1bf98:	ldr	r0, [r9, #4]
   1bf9c:	ldr	r3, [pc, #3148]	; 1cbf0 <next@@Base+0x3d90>
   1bfa0:	ldr	r3, [pc, r3]
   1bfa4:	subs	r3, r3, r2
   1bfa8:	sbcs	r0, r0, ip
   1bfac:	bcs	1c09c <next@@Base+0x323c>
   1bfb0:	mov	r0, #7
   1bfb4:	orr	r0, r0, #131072	; 0x20000
   1bfb8:	adds	r0, r0, r5
   1bfbc:	adc	r1, r6, #0
   1bfc0:	subs	r0, r0, #4
   1bfc4:	sbc	r1, r1, #0
   1bfc8:	mvn	r2, #0
   1bfcc:	and	r5, r1, r2
   1bfd0:	mov	r1, #16646144	; 0xfe0000
   1bfd4:	orr	r1, r1, #-16777216	; 0xff000000
   1bfd8:	ldr	r4, [pc, #3096]	; 1cbf8 <next@@Base+0x3d98>
   1bfdc:	and	r6, r0, r1
   1bfe0:	ldr	r0, [pc, #3092]	; 1cbfc <next@@Base+0x3d9c>
   1bfe4:	mov	r1, r6
   1bfe8:	add	r4, pc, r4
   1bfec:	ldr	r0, [pc, r0]
   1bff0:	bl	126bc <realloc@plt>
   1bff4:	str	r6, [r9]
   1bff8:	str	r5, [r9, #4]
   1bffc:	str	r0, [r4]
   1c000:	ldrb	r3, [r8]
   1c004:	ldr	r6, [sl, #4]
   1c008:	ldr	r5, [pc, #3056]	; 1cc00 <next@@Base+0x3da0>
   1c00c:	mov	r2, r0
   1c010:	mov	r1, #0
   1c014:	mov	r7, #161	; 0xa1
   1c018:	ldr	r5, [pc, r5]
   1c01c:	strb	r1, [r2, r5]!
   1c020:	strb	r7, [r2, #3]
   1c024:	strb	r1, [r2, #2]
   1c028:	strb	r1, [r2, #1]
   1c02c:	adds	r2, r5, #4
   1c030:	adc	ip, r6, #0
   1c034:	mov	r7, #1
   1c038:	cmp	r3, #1
   1c03c:	stm	sl, {r2, ip}
   1c040:	beq	1c0c4 <next@@Base+0x3264>
   1c044:	b	1c29c <next@@Base+0x343c>
   1c048:	ldr	r0, [pc, #2948]	; 1cbd4 <next@@Base+0x3d74>
   1c04c:	ldr	r0, [pc, r0]
   1c050:	mov	r1, r0
   1c054:	ldrb	r2, [r1, r5]!
   1c058:	ldrb	r3, [r1, #1]
   1c05c:	ldrb	r7, [r1, #2]
   1c060:	ldrb	r1, [r1, #3]
   1c064:	orr	r2, r2, r3, lsl #8
   1c068:	orr	r2, r2, r7, lsl #16
   1c06c:	orr	r3, r2, r1, lsl #24
   1c070:	adds	r2, r5, #4
   1c074:	adc	ip, r6, #0
   1c078:	cmp	r3, #-1593835520	; 0xa1000000
   1c07c:	stm	sl, {r2, ip}
   1c080:	beq	1c23c <next@@Base+0x33dc>
   1c084:	mov	r7, #1
   1c088:	cmn	r3, #1
   1c08c:	beq	1c27c <next@@Base+0x341c>
   1c090:	ldr	r1, [pc, #2880]	; 1cbd8 <next@@Base+0x3d78>
   1c094:	add	r1, pc, r1
   1c098:	b	1c97c <next@@Base+0x3b1c>
   1c09c:	ldr	r0, [pc, #2896]	; 1cbf4 <next@@Base+0x3d94>
   1c0a0:	mov	r3, #0
   1c0a4:	mov	r4, #161	; 0xa1
   1c0a8:	ldr	r0, [pc, r0]
   1c0ac:	mov	r7, r0
   1c0b0:	strb	r3, [r7, r5]!
   1c0b4:	strb	r4, [r7, #3]
   1c0b8:	strb	r3, [r7, #2]
   1c0bc:	strb	r3, [r7, #1]
   1c0c0:	stm	sl, {r2, ip}
   1c0c4:	ldr	r4, [r9, #4]
   1c0c8:	ldr	r1, [pc, #2868]	; 1cc04 <next@@Base+0x3da4>
   1c0cc:	adds	r3, r5, #8
   1c0d0:	adc	r7, r6, #0
   1c0d4:	ldr	r1, [pc, r1]
   1c0d8:	subs	r1, r1, r3
   1c0dc:	sbcs	r1, r4, r7
   1c0e0:	bcs	1c16c <next@@Base+0x330c>
   1c0e4:	mov	r1, #7
   1c0e8:	orr	r1, r1, #131072	; 0x20000
   1c0ec:	adds	r1, r5, r1
   1c0f0:	adc	r2, r6, #0
   1c0f4:	mvn	r3, #0
   1c0f8:	and	r5, r2, r3
   1c0fc:	mov	r2, #16646144	; 0xfe0000
   1c100:	orr	r2, r2, #-16777216	; 0xff000000
   1c104:	ldr	r4, [pc, #2812]	; 1cc08 <next@@Base+0x3da8>
   1c108:	and	r6, r1, r2
   1c10c:	mov	r1, r6
   1c110:	add	r4, pc, r4
   1c114:	bl	126bc <realloc@plt>
   1c118:	str	r6, [r9]
   1c11c:	str	r5, [r9, #4]
   1c120:	str	r0, [r4]
   1c124:	ldrb	r1, [r8]
   1c128:	ldr	ip, [sl, #4]
   1c12c:	ldr	r2, [pc, #2776]	; 1cc0c <next@@Base+0x3dac>
   1c130:	mov	r7, r0
   1c134:	mov	r3, #9
   1c138:	ldr	r2, [pc, r2]
   1c13c:	strb	r3, [r7, r2]!
   1c140:	mov	r3, #0
   1c144:	strb	r3, [r7, #3]
   1c148:	strb	r3, [r7, #2]
   1c14c:	strb	r3, [r7, #1]
   1c150:	adds	r3, r2, #4
   1c154:	adc	r5, ip, #0
   1c158:	mov	r7, #1
   1c15c:	cmp	r1, #1
   1c160:	stm	sl, {r3, r5}
   1c164:	beq	1c194 <next@@Base+0x3334>
   1c168:	b	1c2c4 <next@@Base+0x3464>
   1c16c:	mov	r3, r0
   1c170:	mov	r1, #9
   1c174:	strb	r1, [r3, r2]!
   1c178:	mov	r1, #0
   1c17c:	strb	r1, [r3, #3]
   1c180:	strb	r1, [r3, #2]
   1c184:	strb	r1, [r3, #1]
   1c188:	adds	r3, r2, #4
   1c18c:	adc	r5, ip, #0
   1c190:	stm	sl, {r3, r5}
   1c194:	ldr	r6, [r9, #4]
   1c198:	ldr	r4, [pc, #2672]	; 1cc10 <next@@Base+0x3db0>
   1c19c:	adds	r1, r2, #8
   1c1a0:	adc	r7, ip, #0
   1c1a4:	ldr	r4, [pc, r4]
   1c1a8:	subs	r1, r4, r1
   1c1ac:	sbcs	r1, r6, r7
   1c1b0:	bcs	1c688 <next@@Base+0x3828>
   1c1b4:	mov	r1, #7
   1c1b8:	orr	r1, r1, #131072	; 0x20000
   1c1bc:	adds	r1, r2, r1
   1c1c0:	adc	r2, ip, #0
   1c1c4:	mvn	r3, #0
   1c1c8:	and	r5, r2, r3
   1c1cc:	mov	r2, #16646144	; 0xfe0000
   1c1d0:	orr	r2, r2, #-16777216	; 0xff000000
   1c1d4:	ldr	r4, [pc, #2616]	; 1cc14 <next@@Base+0x3db4>
   1c1d8:	and	r6, r1, r2
   1c1dc:	mov	r1, r6
   1c1e0:	add	r4, pc, r4
   1c1e4:	bl	126bc <realloc@plt>
   1c1e8:	str	r6, [r9]
   1c1ec:	str	r5, [r9, #4]
   1c1f0:	str	r0, [r4]
   1c1f4:	ldrb	r2, [r8]
   1c1f8:	ldr	r5, [sl, #4]
   1c1fc:	ldr	r3, [pc, #2580]	; 1cc18 <next@@Base+0x3db8>
   1c200:	mov	r7, r0
   1c204:	mov	r1, #0
   1c208:	ldr	r3, [pc, r3]
   1c20c:	adds	r6, r3, #4
   1c210:	strb	r1, [r7, r3]!
   1c214:	str	r6, [sl]
   1c218:	strb	r1, [r7, #3]
   1c21c:	strb	r1, [r7, #2]
   1c220:	strb	r1, [r7, #1]
   1c224:	adc	r1, r5, #0
   1c228:	mov	r7, #1
   1c22c:	cmp	r2, #1
   1c230:	str	r1, [sl, #4]
   1c234:	bne	1c2ec <next@@Base+0x348c>
   1c238:	b	1c6b0 <next@@Base+0x3850>
   1c23c:	ldr	r3, [r0, r2]
   1c240:	adds	r4, r5, #8
   1c244:	adc	r7, r6, #0
   1c248:	cmp	r3, #9
   1c24c:	stm	sl, {r4, r7}
   1c250:	bne	1c974 <next@@Base+0x3b14>
   1c254:	ldr	r3, [pc, #2444]	; 1cbe8 <next@@Base+0x3d88>
   1c258:	adds	r4, r5, #20
   1c25c:	adc	r7, r6, #0
   1c260:	add	r3, pc, r3
   1c264:	add	r6, r5, r0
   1c268:	ldrb	r3, [r3]
   1c26c:	ldr	r6, [r6, #16]
   1c270:	stm	sl, {r4, r7}
   1c274:	eor	r3, r3, #1
   1c278:	add	r7, r6, r3
   1c27c:	mov	r6, r0
   1c280:	mov	r3, #0
   1c284:	strb	r3, [r6, r5]!
   1c288:	mov	r5, #161	; 0xa1
   1c28c:	strb	r5, [r6, #3]
   1c290:	strb	r3, [r6, #2]
   1c294:	strb	r3, [r6, #1]
   1c298:	stm	sl, {r2, ip}
   1c29c:	mov	r3, r0
   1c2a0:	mov	r1, #9
   1c2a4:	strb	r1, [r3, r2]!
   1c2a8:	mov	r1, #0
   1c2ac:	strb	r1, [r3, #3]
   1c2b0:	strb	r1, [r3, #2]
   1c2b4:	strb	r1, [r3, #1]
   1c2b8:	adds	r3, r2, #4
   1c2bc:	adc	r5, ip, #0
   1c2c0:	stm	sl, {r3, r5}
   1c2c4:	mov	r2, r0
   1c2c8:	mov	r1, #0
   1c2cc:	strb	r1, [r2, r3]!
   1c2d0:	adds	r6, r3, #4
   1c2d4:	strb	r1, [r2, #3]
   1c2d8:	strb	r1, [r2, #2]
   1c2dc:	strb	r1, [r2, #1]
   1c2e0:	adc	r1, r5, #0
   1c2e4:	str	r6, [sl]
   1c2e8:	str	r1, [sl, #4]
   1c2ec:	mov	r3, r0
   1c2f0:	mov	r2, #0
   1c2f4:	strb	r2, [r3, r6]!
   1c2f8:	strb	r2, [r3, #3]
   1c2fc:	strb	r2, [r3, #2]
   1c300:	strb	r2, [r3, #1]
   1c304:	adds	r2, r6, #4
   1c308:	adc	r3, r1, #0
   1c30c:	strd	r2, [sl]
   1c310:	lsr	r1, r7, #24
   1c314:	strb	r7, [r0, r2]!
   1c318:	lsr	r6, r7, #16
   1c31c:	lsr	r5, r7, #8
   1c320:	strb	r1, [r0, #3]
   1c324:	strb	r6, [r0, #2]
   1c328:	strb	r5, [r0, #1]
   1c32c:	ldrb	r0, [r8]
   1c330:	adds	r4, r2, #4
   1c334:	adc	r5, r3, #0
   1c338:	cmp	r0, #0
   1c33c:	strd	r4, [sl]
   1c340:	beq	1c3f4 <next@@Base+0x3594>
   1c344:	ldr	r9, [pc, #2284]	; 1cc38 <next@@Base+0x3dd8>
   1c348:	adds	r0, r2, #8
   1c34c:	adc	r1, r3, #0
   1c350:	add	r9, pc, r9
   1c354:	ldr	r7, [r9, #4]
   1c358:	ldr	r6, [pc, #2268]	; 1cc3c <next@@Base+0x3ddc>
   1c35c:	ldr	r6, [pc, r6]
   1c360:	subs	r0, r6, r0
   1c364:	sbcs	r0, r7, r1
   1c368:	bcs	1c5c0 <next@@Base+0x3760>
   1c36c:	mov	r0, #7
   1c370:	orr	r0, r0, #131072	; 0x20000
   1c374:	adds	r0, r2, r0
   1c378:	adc	r1, r3, #0
   1c37c:	mvn	r2, #0
   1c380:	and	r5, r1, r2
   1c384:	mov	r1, #16646144	; 0xfe0000
   1c388:	orr	r1, r1, #-16777216	; 0xff000000
   1c38c:	ldr	r4, [pc, #2268]	; 1cc70 <next@@Base+0x3e10>
   1c390:	and	r6, r0, r1
   1c394:	ldr	r0, [pc, #2264]	; 1cc74 <next@@Base+0x3e14>
   1c398:	mov	r1, r6
   1c39c:	add	r4, pc, r4
   1c3a0:	ldr	r0, [pc, r0]
   1c3a4:	bl	126bc <realloc@plt>
   1c3a8:	str	r6, [r9]
   1c3ac:	str	r5, [r9, #4]
   1c3b0:	str	r0, [r4]
   1c3b4:	ldrb	r1, [r8]
   1c3b8:	ldr	r5, [sl, #4]
   1c3bc:	ldr	r4, [pc, #2228]	; 1cc78 <next@@Base+0x3e18>
   1c3c0:	mov	r3, r0
   1c3c4:	mov	r2, #0
   1c3c8:	ldr	r4, [pc, r4]
   1c3cc:	strb	r2, [r3, r4]!
   1c3d0:	strb	r2, [r3, #3]
   1c3d4:	strb	r2, [r3, #2]
   1c3d8:	strb	r2, [r3, #1]
   1c3dc:	adds	r2, r4, #4
   1c3e0:	adc	r3, r5, #0
   1c3e4:	cmp	r1, #0
   1c3e8:	strd	r2, [sl]
   1c3ec:	beq	1c420 <next@@Base+0x35c0>
   1c3f0:	b	1c5ec <next@@Base+0x378c>
   1c3f4:	ldr	r0, [pc, #2104]	; 1cc34 <next@@Base+0x3dd4>
   1c3f8:	adds	r2, r2, #8
   1c3fc:	mov	r1, #0
   1c400:	adc	r3, r3, #0
   1c404:	ldr	r0, [pc, r0]
   1c408:	mov	r7, r0
   1c40c:	strb	r1, [r7, r4]!
   1c410:	strb	r1, [r7, #3]
   1c414:	strb	r1, [r7, #2]
   1c418:	strb	r1, [r7, #1]
   1c41c:	strd	r2, [sl]
   1c420:	mov	r7, r0
   1c424:	mov	r1, #0
   1c428:	strb	r1, [r7, r2]!
   1c42c:	strb	r1, [r7, #3]
   1c430:	strb	r1, [r7, #2]
   1c434:	strb	r1, [r7, #1]
   1c438:	adds	r1, r2, #4
   1c43c:	adc	r5, r3, #0
   1c440:	stm	sl, {r1, r5}
   1c444:	mov	r3, r0
   1c448:	mov	r2, #0
   1c44c:	strb	r2, [r3, r1]!
   1c450:	strb	r2, [r3, #3]
   1c454:	strb	r2, [r3, #2]
   1c458:	strb	r2, [r3, #1]
   1c45c:	adds	r2, r1, #4
   1c460:	adc	r3, r5, #0
   1c464:	strd	r2, [sl]
   1c468:	mov	r7, r0
   1c46c:	mov	r1, #0
   1c470:	strb	r1, [r7, r2]!
   1c474:	strb	r1, [r7, #3]
   1c478:	strb	r1, [r7, #2]
   1c47c:	strb	r1, [r7, #1]
   1c480:	adds	r1, r2, #4
   1c484:	adc	r5, r3, #0
   1c488:	stm	sl, {r1, r5}
   1c48c:	mov	r3, r0
   1c490:	mov	r2, #0
   1c494:	strb	r2, [r3, r1]!
   1c498:	adds	r4, r1, #4
   1c49c:	strb	r2, [r3, #3]
   1c4a0:	strb	r2, [r3, #2]
   1c4a4:	strb	r2, [r3, #1]
   1c4a8:	adc	r3, r5, #0
   1c4ac:	str	r4, [sl]
   1c4b0:	str	r3, [sl, #4]
   1c4b4:	mov	r2, r0
   1c4b8:	mov	r1, #0
   1c4bc:	strb	r1, [r2, r4]!
   1c4c0:	strb	r1, [r2, #3]
   1c4c4:	strb	r1, [r2, #2]
   1c4c8:	strb	r1, [r2, #1]
   1c4cc:	adds	r2, r4, #4
   1c4d0:	adc	r1, r3, #0
   1c4d4:	str	r2, [sl]
   1c4d8:	str	r1, [sl, #4]
   1c4dc:	mov	r3, r0
   1c4e0:	mov	r4, #0
   1c4e4:	strb	r4, [r3, r2]!
   1c4e8:	mov	r7, #163	; 0xa3
   1c4ec:	strb	r7, [r3, #3]
   1c4f0:	strb	r4, [r3, #2]
   1c4f4:	strb	r4, [r3, #1]
   1c4f8:	ldrb	r7, [r8]
   1c4fc:	adds	r6, r2, #4
   1c500:	adc	r3, r1, #0
   1c504:	cmp	r7, #1
   1c508:	str	r6, [sl]
   1c50c:	str	r3, [sl, #4]
   1c510:	bne	1c584 <next@@Base+0x3724>
   1c514:	ldr	r8, [pc, #1852]	; 1cc58 <next@@Base+0x3df8>
   1c518:	adds	lr, r2, #8
   1c51c:	adc	ip, r1, #0
   1c520:	add	r8, pc, r8
   1c524:	ldr	r5, [r8, #4]
   1c528:	ldr	r7, [pc, #1836]	; 1cc5c <next@@Base+0x3dfc>
   1c52c:	ldr	r7, [pc, r7]
   1c530:	subs	r7, r7, lr
   1c534:	sbcs	r7, r5, ip
   1c538:	bcs	1c584 <next@@Base+0x3724>
   1c53c:	mov	r3, #7
   1c540:	orr	r3, r3, #131072	; 0x20000
   1c544:	adds	r2, r2, r3
   1c548:	adc	r1, r1, #0
   1c54c:	mvn	r3, #0
   1c550:	and	r7, r1, r3
   1c554:	mov	r1, #16646144	; 0xfe0000
   1c558:	orr	r1, r1, #-16777216	; 0xff000000
   1c55c:	ldr	r5, [pc, #1788]	; 1cc60 <next@@Base+0x3e00>
   1c560:	and	r6, r2, r1
   1c564:	mov	r1, r6
   1c568:	add	r5, pc, r5
   1c56c:	bl	126bc <realloc@plt>
   1c570:	strd	r6, [r8]
   1c574:	str	r0, [r5]
   1c578:	ldr	r3, [sl, #4]
   1c57c:	ldr	r6, [pc, #1760]	; 1cc64 <next@@Base+0x3e04>
   1c580:	ldr	r6, [pc, r6]
   1c584:	ldr	r0, [pc, #1756]	; 1cc68 <next@@Base+0x3e08>
   1c588:	ldr	r1, [pc, #1756]	; 1cc6c <next@@Base+0x3e0c>
   1c58c:	adds	r2, r6, #4
   1c590:	add	r0, pc, r0
   1c594:	adc	r3, r3, #0
   1c598:	ldr	r1, [pc, r1]
   1c59c:	strb	r4, [r1, r6]!
   1c5a0:	strb	r4, [r1, #3]
   1c5a4:	strb	r4, [r1, #2]
   1c5a8:	strb	r4, [r1, #1]
   1c5ac:	mov	r1, #1
   1c5b0:	strd	r2, [sl]
   1c5b4:	strb	r1, [r0]
   1c5b8:	sub	sp, fp, #28
   1c5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5c0:	ldr	r0, [pc, #1656]	; 1cc40 <next@@Base+0x3de0>
   1c5c4:	adds	r2, r2, #8
   1c5c8:	mov	r1, #0
   1c5cc:	adc	r3, r3, #0
   1c5d0:	ldr	r0, [pc, r0]
   1c5d4:	mov	r7, r0
   1c5d8:	strb	r1, [r7, r4]!
   1c5dc:	strb	r1, [r7, #3]
   1c5e0:	strb	r1, [r7, #2]
   1c5e4:	strb	r1, [r7, #1]
   1c5e8:	strd	r2, [sl]
   1c5ec:	ldr	r6, [r9, #4]
   1c5f0:	ldr	r1, [pc, #1668]	; 1cc7c <next@@Base+0x3e1c>
   1c5f4:	adds	ip, r4, #8
   1c5f8:	adc	r7, r5, #0
   1c5fc:	ldr	r1, [pc, r1]
   1c600:	subs	r1, r1, ip
   1c604:	sbcs	r1, r6, r7
   1c608:	bcs	1c754 <next@@Base+0x38f4>
   1c60c:	mov	r1, #7
   1c610:	orr	r1, r1, #131072	; 0x20000
   1c614:	adds	r1, r4, r1
   1c618:	adc	r2, r5, #0
   1c61c:	mvn	r3, #0
   1c620:	and	r5, r2, r3
   1c624:	mov	r2, #16646144	; 0xfe0000
   1c628:	orr	r2, r2, #-16777216	; 0xff000000
   1c62c:	ldr	r6, [pc, #1612]	; 1cc80 <next@@Base+0x3e20>
   1c630:	and	r4, r1, r2
   1c634:	mov	r1, r4
   1c638:	add	r6, pc, r6
   1c63c:	bl	126bc <realloc@plt>
   1c640:	str	r0, [r6]
   1c644:	strd	r4, [r9]
   1c648:	ldrb	r7, [r8]
   1c64c:	ldr	r3, [sl, #4]
   1c650:	ldr	r2, [pc, #1580]	; 1cc84 <next@@Base+0x3e24>
   1c654:	mov	r6, r0
   1c658:	mov	r1, #0
   1c65c:	ldr	r2, [pc, r2]
   1c660:	strb	r1, [r6, r2]!
   1c664:	strb	r1, [r6, #3]
   1c668:	strb	r1, [r6, #2]
   1c66c:	strb	r1, [r6, #1]
   1c670:	adds	r1, r2, #4
   1c674:	adc	r5, r3, #0
   1c678:	cmp	r7, #1
   1c67c:	stm	sl, {r1, r5}
   1c680:	bne	1c444 <next@@Base+0x35e4>
   1c684:	b	1c778 <next@@Base+0x3918>
   1c688:	mov	r2, r0
   1c68c:	mov	r1, #0
   1c690:	strb	r1, [r2, r3]!
   1c694:	adds	r6, r3, #4
   1c698:	strb	r1, [r2, #3]
   1c69c:	strb	r1, [r2, #2]
   1c6a0:	strb	r1, [r2, #1]
   1c6a4:	adc	r1, r5, #0
   1c6a8:	str	r6, [sl]
   1c6ac:	str	r1, [sl, #4]
   1c6b0:	ldr	r4, [r9, #4]
   1c6b4:	ldr	r2, [pc, #1376]	; 1cc1c <next@@Base+0x3dbc>
   1c6b8:	adds	ip, r3, #8
   1c6bc:	adc	r7, r5, #0
   1c6c0:	ldr	r2, [pc, r2]
   1c6c4:	subs	r2, r2, ip
   1c6c8:	sbcs	r2, r4, r7
   1c6cc:	bcs	1c818 <next@@Base+0x39b8>
   1c6d0:	mov	r1, #7
   1c6d4:	orr	r1, r1, #131072	; 0x20000
   1c6d8:	adds	r1, r3, r1
   1c6dc:	adc	r2, r5, #0
   1c6e0:	mvn	r3, #0
   1c6e4:	and	r5, r2, r3
   1c6e8:	mov	r2, #16646144	; 0xfe0000
   1c6ec:	orr	r2, r2, #-16777216	; 0xff000000
   1c6f0:	ldr	r4, [pc, #1320]	; 1cc20 <next@@Base+0x3dc0>
   1c6f4:	and	r6, r1, r2
   1c6f8:	mov	r1, r6
   1c6fc:	add	r4, pc, r4
   1c700:	bl	126bc <realloc@plt>
   1c704:	str	r6, [r9]
   1c708:	str	r5, [r9, #4]
   1c70c:	str	r0, [r4]
   1c710:	ldrb	r5, [r8]
   1c714:	ldr	r1, [sl, #4]
   1c718:	ldr	r6, [pc, #1284]	; 1cc24 <next@@Base+0x3dc4>
   1c71c:	mov	r3, r0
   1c720:	mov	r2, #0
   1c724:	mov	r7, #1
   1c728:	ldr	r6, [pc, r6]
   1c72c:	strb	r2, [r3, r6]!
   1c730:	strb	r2, [r3, #3]
   1c734:	strb	r2, [r3, #2]
   1c738:	strb	r2, [r3, #1]
   1c73c:	adds	r2, r6, #4
   1c740:	adc	r3, r1, #0
   1c744:	cmp	r5, #1
   1c748:	strd	r2, [sl]
   1c74c:	bne	1c310 <next@@Base+0x34b0>
   1c750:	b	1c83c <next@@Base+0x39dc>
   1c754:	mov	r7, r0
   1c758:	mov	r1, #0
   1c75c:	strb	r1, [r7, r2]!
   1c760:	strb	r1, [r7, #3]
   1c764:	strb	r1, [r7, #2]
   1c768:	strb	r1, [r7, #1]
   1c76c:	adds	r1, r2, #4
   1c770:	adc	r5, r3, #0
   1c774:	stm	sl, {r1, r5}
   1c778:	ldr	r4, [r9, #4]
   1c77c:	ldr	r6, [pc, #1284]	; 1cc88 <next@@Base+0x3e28>
   1c780:	adds	r7, r2, #8
   1c784:	adc	ip, r3, #0
   1c788:	ldr	r6, [pc, r6]
   1c78c:	subs	r7, r6, r7
   1c790:	sbcs	r7, r4, ip
   1c794:	bcs	1c8b0 <next@@Base+0x3a50>
   1c798:	mov	r1, #7
   1c79c:	orr	r1, r1, #131072	; 0x20000
   1c7a0:	adds	r1, r2, r1
   1c7a4:	adc	r2, r3, #0
   1c7a8:	mvn	r3, #0
   1c7ac:	and	r5, r2, r3
   1c7b0:	mov	r2, #16646144	; 0xfe0000
   1c7b4:	orr	r2, r2, #-16777216	; 0xff000000
   1c7b8:	ldr	r4, [pc, #1228]	; 1cc8c <next@@Base+0x3e2c>
   1c7bc:	and	r6, r1, r2
   1c7c0:	mov	r1, r6
   1c7c4:	add	r4, pc, r4
   1c7c8:	bl	126bc <realloc@plt>
   1c7cc:	str	r6, [r9]
   1c7d0:	str	r5, [r9, #4]
   1c7d4:	str	r0, [r4]
   1c7d8:	ldrb	r7, [r8]
   1c7dc:	ldr	r5, [sl, #4]
   1c7e0:	ldr	r1, [pc, #1192]	; 1cc90 <next@@Base+0x3e30>
   1c7e4:	mov	r3, r0
   1c7e8:	mov	r2, #0
   1c7ec:	ldr	r1, [pc, r1]
   1c7f0:	strb	r2, [r3, r1]!
   1c7f4:	strb	r2, [r3, #3]
   1c7f8:	strb	r2, [r3, #2]
   1c7fc:	strb	r2, [r3, #1]
   1c800:	adds	r2, r1, #4
   1c804:	adc	r3, r5, #0
   1c808:	cmp	r7, #1
   1c80c:	strd	r2, [sl]
   1c810:	bne	1c468 <next@@Base+0x3608>
   1c814:	b	1c8d4 <next@@Base+0x3a74>
   1c818:	mov	r3, r0
   1c81c:	mov	r2, #0
   1c820:	strb	r2, [r3, r6]!
   1c824:	strb	r2, [r3, #3]
   1c828:	strb	r2, [r3, #2]
   1c82c:	strb	r2, [r3, #1]
   1c830:	adds	r2, r6, #4
   1c834:	adc	r3, r1, #0
   1c838:	strd	r2, [sl]
   1c83c:	ldr	r4, [r9, #4]
   1c840:	ldr	r5, [pc, #992]	; 1cc28 <next@@Base+0x3dc8>
   1c844:	adds	lr, r6, #8
   1c848:	adc	ip, r1, #0
   1c84c:	mov	r7, #1
   1c850:	ldr	r5, [pc, r5]
   1c854:	subs	r5, r5, lr
   1c858:	sbcs	r5, r4, ip
   1c85c:	bcs	1c310 <next@@Base+0x34b0>
   1c860:	mov	r2, #7
   1c864:	orr	r2, r2, #131072	; 0x20000
   1c868:	adds	r2, r6, r2
   1c86c:	adc	r1, r1, #0
   1c870:	mvn	r3, #0
   1c874:	and	r5, r1, r3
   1c878:	mov	r1, #16646144	; 0xfe0000
   1c87c:	orr	r1, r1, #-16777216	; 0xff000000
   1c880:	ldr	r4, [pc, #932]	; 1cc2c <next@@Base+0x3dcc>
   1c884:	and	r6, r2, r1
   1c888:	mov	r1, r6
   1c88c:	add	r4, pc, r4
   1c890:	bl	126bc <realloc@plt>
   1c894:	str	r6, [r9]
   1c898:	str	r5, [r9, #4]
   1c89c:	str	r0, [r4]
   1c8a0:	ldr	r3, [sl, #4]
   1c8a4:	ldr	r2, [pc, #900]	; 1cc30 <next@@Base+0x3dd0>
   1c8a8:	ldr	r2, [pc, r2]
   1c8ac:	b	1c310 <next@@Base+0x34b0>
   1c8b0:	mov	r3, r0
   1c8b4:	mov	r2, #0
   1c8b8:	strb	r2, [r3, r1]!
   1c8bc:	strb	r2, [r3, #3]
   1c8c0:	strb	r2, [r3, #2]
   1c8c4:	strb	r2, [r3, #1]
   1c8c8:	adds	r2, r1, #4
   1c8cc:	adc	r3, r5, #0
   1c8d0:	strd	r2, [sl]
   1c8d4:	ldr	r4, [r9, #4]
   1c8d8:	ldr	r6, [pc, #948]	; 1cc94 <next@@Base+0x3e34>
   1c8dc:	adds	r7, r1, #8
   1c8e0:	adc	ip, r5, #0
   1c8e4:	ldr	r6, [pc, r6]
   1c8e8:	subs	r7, r6, r7
   1c8ec:	sbcs	r7, r4, ip
   1c8f0:	bcs	1c99c <next@@Base+0x3b3c>
   1c8f4:	mov	r2, #7
   1c8f8:	orr	r2, r2, #131072	; 0x20000
   1c8fc:	adds	r1, r1, r2
   1c900:	adc	r2, r5, #0
   1c904:	mvn	r3, #0
   1c908:	and	r5, r2, r3
   1c90c:	mov	r2, #16646144	; 0xfe0000
   1c910:	orr	r2, r2, #-16777216	; 0xff000000
   1c914:	ldr	r4, [pc, #892]	; 1cc98 <next@@Base+0x3e38>
   1c918:	and	r6, r1, r2
   1c91c:	mov	r1, r6
   1c920:	add	r4, pc, r4
   1c924:	bl	126bc <realloc@plt>
   1c928:	str	r6, [r9]
   1c92c:	str	r5, [r9, #4]
   1c930:	str	r0, [r4]
   1c934:	ldrb	r7, [r8]
   1c938:	ldr	r3, [sl, #4]
   1c93c:	ldr	r2, [pc, #856]	; 1cc9c <next@@Base+0x3e3c>
   1c940:	mov	r6, r0
   1c944:	mov	r1, #0
   1c948:	ldr	r2, [pc, r2]
   1c94c:	strb	r1, [r6, r2]!
   1c950:	strb	r1, [r6, #3]
   1c954:	strb	r1, [r6, #2]
   1c958:	strb	r1, [r6, #1]
   1c95c:	adds	r1, r2, #4
   1c960:	adc	r5, r3, #0
   1c964:	cmp	r7, #1
   1c968:	stm	sl, {r1, r5}
   1c96c:	bne	1c48c <next@@Base+0x362c>
   1c970:	b	1c9c0 <next@@Base+0x3b60>
   1c974:	ldr	r1, [pc, #616]	; 1cbe4 <next@@Base+0x3d84>
   1c978:	add	r1, pc, r1
   1c97c:	ldr	r0, [pc, #600]	; 1cbdc <next@@Base+0x3d7c>
   1c980:	ldr	r0, [pc, r0]
   1c984:	ldr	r0, [r0]
   1c988:	ldr	r2, [pc, #592]	; 1cbe0 <next@@Base+0x3d80>
   1c98c:	ldr	r2, [pc, r2]
   1c990:	sub	sp, fp, #28
   1c994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c998:	b	1274c <fprintf@plt>
   1c99c:	mov	r7, r0
   1c9a0:	mov	r1, #0
   1c9a4:	strb	r1, [r7, r2]!
   1c9a8:	strb	r1, [r7, #3]
   1c9ac:	strb	r1, [r7, #2]
   1c9b0:	strb	r1, [r7, #1]
   1c9b4:	adds	r1, r2, #4
   1c9b8:	adc	r5, r3, #0
   1c9bc:	stm	sl, {r1, r5}
   1c9c0:	ldr	r4, [r9, #4]
   1c9c4:	ldr	r6, [pc, #724]	; 1cca0 <next@@Base+0x3e40>
   1c9c8:	adds	r7, r2, #8
   1c9cc:	adc	ip, r3, #0
   1c9d0:	ldr	r6, [pc, r6]
   1c9d4:	subs	r7, r6, r7
   1c9d8:	sbcs	r7, r4, ip
   1c9dc:	bcs	1ca64 <next@@Base+0x3c04>
   1c9e0:	mov	r1, #7
   1c9e4:	orr	r1, r1, #131072	; 0x20000
   1c9e8:	adds	r1, r2, r1
   1c9ec:	adc	r2, r3, #0
   1c9f0:	mvn	r3, #0
   1c9f4:	and	r5, r2, r3
   1c9f8:	mov	r2, #16646144	; 0xfe0000
   1c9fc:	orr	r2, r2, #-16777216	; 0xff000000
   1ca00:	ldr	r4, [pc, #668]	; 1cca4 <next@@Base+0x3e44>
   1ca04:	and	r6, r1, r2
   1ca08:	mov	r1, r6
   1ca0c:	add	r4, pc, r4
   1ca10:	bl	126bc <realloc@plt>
   1ca14:	str	r6, [r9]
   1ca18:	str	r5, [r9, #4]
   1ca1c:	str	r0, [r4]
   1ca20:	ldrb	r2, [r8]
   1ca24:	ldr	r5, [sl, #4]
   1ca28:	ldr	r1, [pc, #632]	; 1cca8 <next@@Base+0x3e48>
   1ca2c:	mov	r7, r0
   1ca30:	mov	r3, #0
   1ca34:	ldr	r1, [pc, r1]
   1ca38:	adds	r4, r1, #4
   1ca3c:	strb	r3, [r7, r1]!
   1ca40:	str	r4, [sl]
   1ca44:	strb	r3, [r7, #3]
   1ca48:	strb	r3, [r7, #2]
   1ca4c:	strb	r3, [r7, #1]
   1ca50:	adc	r3, r5, #0
   1ca54:	cmp	r2, #1
   1ca58:	str	r3, [sl, #4]
   1ca5c:	bne	1c4b4 <next@@Base+0x3654>
   1ca60:	b	1ca8c <next@@Base+0x3c2c>
   1ca64:	mov	r3, r0
   1ca68:	mov	r2, #0
   1ca6c:	strb	r2, [r3, r1]!
   1ca70:	adds	r4, r1, #4
   1ca74:	strb	r2, [r3, #3]
   1ca78:	strb	r2, [r3, #2]
   1ca7c:	strb	r2, [r3, #1]
   1ca80:	adc	r3, r5, #0
   1ca84:	str	r4, [sl]
   1ca88:	str	r3, [sl, #4]
   1ca8c:	ldr	r6, [r9, #4]
   1ca90:	ldr	r2, [pc, #532]	; 1ccac <next@@Base+0x3e4c>
   1ca94:	adds	ip, r1, #8
   1ca98:	adc	r7, r5, #0
   1ca9c:	ldr	r2, [pc, r2]
   1caa0:	subs	r2, r2, ip
   1caa4:	sbcs	r2, r6, r7
   1caa8:	bcs	1cb30 <next@@Base+0x3cd0>
   1caac:	mov	r2, #7
   1cab0:	orr	r2, r2, #131072	; 0x20000
   1cab4:	adds	r1, r1, r2
   1cab8:	adc	r2, r5, #0
   1cabc:	mvn	r3, #0
   1cac0:	and	r5, r2, r3
   1cac4:	mov	r2, #16646144	; 0xfe0000
   1cac8:	orr	r2, r2, #-16777216	; 0xff000000
   1cacc:	ldr	r4, [pc, #368]	; 1cc44 <next@@Base+0x3de4>
   1cad0:	and	r6, r1, r2
   1cad4:	mov	r1, r6
   1cad8:	add	r4, pc, r4
   1cadc:	bl	126bc <realloc@plt>
   1cae0:	str	r6, [r9]
   1cae4:	str	r5, [r9, #4]
   1cae8:	str	r0, [r4]
   1caec:	ldrb	r7, [r8]
   1caf0:	ldr	r3, [sl, #4]
   1caf4:	ldr	r4, [pc, #332]	; 1cc48 <next@@Base+0x3de8>
   1caf8:	mov	r2, r0
   1cafc:	mov	r1, #0
   1cb00:	ldr	r4, [pc, r4]
   1cb04:	strb	r1, [r2, r4]!
   1cb08:	strb	r1, [r2, #3]
   1cb0c:	strb	r1, [r2, #2]
   1cb10:	strb	r1, [r2, #1]
   1cb14:	adds	r2, r4, #4
   1cb18:	adc	r1, r3, #0
   1cb1c:	cmp	r7, #0
   1cb20:	str	r2, [sl]
   1cb24:	str	r1, [sl, #4]
   1cb28:	beq	1c4dc <next@@Base+0x367c>
   1cb2c:	b	1cb58 <next@@Base+0x3cf8>
   1cb30:	mov	r2, r0
   1cb34:	mov	r1, #0
   1cb38:	strb	r1, [r2, r4]!
   1cb3c:	strb	r1, [r2, #3]
   1cb40:	strb	r1, [r2, #2]
   1cb44:	strb	r1, [r2, #1]
   1cb48:	adds	r2, r4, #4
   1cb4c:	adc	r1, r3, #0
   1cb50:	str	r2, [sl]
   1cb54:	str	r1, [sl, #4]
   1cb58:	ldr	r5, [r9, #4]
   1cb5c:	ldr	r6, [pc, #232]	; 1cc4c <next@@Base+0x3dec>
   1cb60:	adds	r7, r4, #8
   1cb64:	adc	ip, r3, #0
   1cb68:	ldr	r6, [pc, r6]
   1cb6c:	subs	r7, r6, r7
   1cb70:	sbcs	r7, r5, ip
   1cb74:	bcs	1c4dc <next@@Base+0x367c>
   1cb78:	mov	r1, #7
   1cb7c:	orr	r1, r1, #131072	; 0x20000
   1cb80:	adds	r1, r4, r1
   1cb84:	adc	r2, r3, #0
   1cb88:	mvn	r3, #0
   1cb8c:	and	r7, r2, r3
   1cb90:	mov	r2, #16646144	; 0xfe0000
   1cb94:	orr	r2, r2, #-16777216	; 0xff000000
   1cb98:	ldr	r5, [pc, #176]	; 1cc50 <next@@Base+0x3df0>
   1cb9c:	and	r6, r1, r2
   1cba0:	mov	r1, r6
   1cba4:	add	r5, pc, r5
   1cba8:	bl	126bc <realloc@plt>
   1cbac:	strd	r6, [r9]
   1cbb0:	str	r0, [r5]
   1cbb4:	ldr	r1, [sl, #4]
   1cbb8:	ldr	r2, [pc, #148]	; 1cc54 <next@@Base+0x3df4>
   1cbbc:	ldr	r2, [pc, r2]
   1cbc0:	b	1c4dc <next@@Base+0x367c>
   1cbc4:			; <UNDEFINED> instruction: 0x000157b4
   1cbc8:			; <UNDEFINED> instruction: 0x000157b4
   1cbcc:	andeq	r5, r1, r8, lsr #15
   1cbd0:	andeq	r5, r1, ip, lsl #15
   1cbd4:	andeq	r5, r1, r0, asr #13
   1cbd8:	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   1cbdc:	andeq	r3, r1, r4, lsr r7
   1cbe0:	andeq	r4, r1, r4, ror sp
   1cbe4:	andeq	r2, r0, r8, asr #10
   1cbe8:	andeq	r5, r1, r0, asr #9
   1cbec:	andeq	r5, r1, ip, ror r7
   1cbf0:	andeq	r5, r1, r0, ror r7
   1cbf4:	andeq	r5, r1, r4, ror #12
   1cbf8:	andeq	r5, r1, r4, lsr #14
   1cbfc:	andeq	r5, r1, r0, lsr #14
   1cc00:	andeq	r5, r1, r0, lsl #14
   1cc04:	andeq	r5, r1, ip, lsr r6
   1cc08:	strdeq	r5, [r1], -ip
   1cc0c:	andeq	r5, r1, r0, ror #11
   1cc10:	andeq	r5, r1, ip, ror #10
   1cc14:	andeq	r5, r1, ip, lsr #10
   1cc18:	andeq	r5, r1, r0, lsl r5
   1cc1c:	andeq	r5, r1, r0, asr r0
   1cc20:	andeq	r5, r1, r0, lsl r0
   1cc24:	strdeq	r4, [r1], -r0
   1cc28:	andeq	r4, r1, r0, asr #29
   1cc2c:	andeq	r4, r1, r0, lsl #29
   1cc30:	andeq	r4, r1, r0, ror lr
   1cc34:	andeq	r5, r1, r8, lsl #6
   1cc38:	andeq	r5, r1, r0, asr #7
   1cc3c:			; <UNDEFINED> instruction: 0x000153b4
   1cc40:	andeq	r5, r1, ip, lsr r1
   1cc44:	andeq	r4, r1, r4, lsr ip
   1cc48:	andeq	r4, r1, r8, lsl ip
   1cc4c:	andeq	r4, r1, r8, lsr #23
   1cc50:	andeq	r4, r1, r8, ror #22
   1cc54:	andeq	r4, r1, ip, asr fp
   1cc58:	strdeq	r5, [r1], -r0
   1cc5c:	andeq	r5, r1, r4, ror #3
   1cc60:	andeq	r5, r1, r4, lsr #3
   1cc64:	muleq	r1, r8, r1
   1cc68:	muleq	r1, r0, r1
   1cc6c:	andeq	r5, r1, r4, ror r1
   1cc70:	andeq	r5, r1, r0, ror r3
   1cc74:	andeq	r5, r1, ip, ror #6
   1cc78:	andeq	r5, r1, r0, asr r3
   1cc7c:	andeq	r5, r1, r4, lsl r1
   1cc80:	ldrdeq	r5, [r1], -r4
   1cc84:	strheq	r5, [r1], -ip
   1cc88:	andeq	r4, r1, r8, lsl #31
   1cc8c:	andeq	r4, r1, r8, asr #30
   1cc90:	andeq	r4, r1, ip, lsr #30
   1cc94:	andeq	r4, r1, ip, lsr #28
   1cc98:	andeq	r4, r1, ip, ror #27
   1cc9c:	ldrdeq	r4, [r1], -r0
   1cca0:	andeq	r4, r1, r0, asr #26
   1cca4:	andeq	r4, r1, r0, lsl #26
   1cca8:	andeq	r4, r1, r4, ror #25
   1ccac:	andeq	r4, r1, r4, ror ip
   1ccb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccb4:	add	fp, sp, #28
   1ccb8:	sub	sp, sp, #4
   1ccbc:	ldr	r0, [pc, #496]	; 1ceb4 <next@@Base+0x4054>
   1ccc0:	ldr	r0, [pc, r0]
   1ccc4:	cmp	r0, #0
   1ccc8:	beq	1ce5c <next@@Base+0x3ffc>
   1cccc:	ldr	sl, [pc, #484]	; 1ceb8 <next@@Base+0x4058>
   1ccd0:	mov	r5, #0
   1ccd4:	mov	r1, #0
   1ccd8:	add	sl, pc, sl
   1ccdc:	ldrb	r0, [sl]
   1cce0:	ldr	r8, [pc, #468]	; 1cebc <next@@Base+0x405c>
   1cce4:	ldr	r4, [pc, #468]	; 1cec0 <next@@Base+0x4060>
   1cce8:	cmp	r0, #1
   1ccec:	add	r8, pc, r8
   1ccf0:	add	r4, pc, r4
   1ccf4:	bne	1cd70 <next@@Base+0x3f10>
   1ccf8:	ldr	r9, [pc, #452]	; 1cec4 <next@@Base+0x4064>
   1ccfc:	ldr	r0, [r8, #4]
   1cd00:	ldr	r2, [pc, #448]	; 1cec8 <next@@Base+0x4068>
   1cd04:	add	r9, pc, r9
   1cd08:	mov	ip, r4
   1cd0c:	mov	r1, #1
   1cd10:	ldr	r2, [pc, r2]
   1cd14:	ldr	r7, [r9, #4]
   1cd18:	ldr	r4, [pc, #428]	; 1cecc <next@@Base+0x406c>
   1cd1c:	adds	r3, r2, #8
   1cd20:	adc	r6, r0, #0
   1cd24:	ldr	r4, [pc, r4]
   1cd28:	subs	r3, r4, r3
   1cd2c:	mov	r4, ip
   1cd30:	sbcs	r3, r7, r6
   1cd34:	bcs	1cd70 <next@@Base+0x3f10>
   1cd38:	mov	r1, #7
   1cd3c:	orr	r1, r1, #131072	; 0x20000
   1cd40:	adds	r1, r2, r1
   1cd44:	adc	r7, r0, #0
   1cd48:	mov	r0, #16646144	; 0xfe0000
   1cd4c:	orr	r0, r0, #-16777216	; 0xff000000
   1cd50:	and	r6, r1, r0
   1cd54:	ldr	r0, [pc, #372]	; 1ced0 <next@@Base+0x4070>
   1cd58:	mov	r1, r6
   1cd5c:	ldr	r0, [pc, r0]
   1cd60:	bl	126bc <realloc@plt>
   1cd64:	ldrb	r1, [sl]
   1cd68:	strd	r6, [r9]
   1cd6c:	str	r0, [r4]
   1cd70:	ldr	r2, [pc, #348]	; 1ced4 <next@@Base+0x4074>
   1cd74:	ldr	r2, [pc, r2]
   1cd78:	ldr	r0, [pc, #344]	; 1ced8 <next@@Base+0x4078>
   1cd7c:	ldr	r0, [pc, r0]
   1cd80:	ldr	r3, [r8, #4]
   1cd84:	mov	r7, r0
   1cd88:	strb	r5, [r7, r2]!
   1cd8c:	adds	r2, r2, #8
   1cd90:	adc	r3, r3, #0
   1cd94:	strb	r5, [r7, #5]
   1cd98:	strb	r5, [r7, #3]
   1cd9c:	strb	r5, [r7, #2]
   1cda0:	strb	r5, [r7, #1]
   1cda4:	strb	r5, [r7, #4]!
   1cda8:	cmp	r1, #0
   1cdac:	strb	r5, [r7, #3]
   1cdb0:	strb	r5, [r7, #2]
   1cdb4:	strd	r2, [r8]
   1cdb8:	beq	1cde0 <next@@Base+0x3f80>
   1cdbc:	ldr	r3, [pc, #280]	; 1cedc <next@@Base+0x407c>
   1cdc0:	mov	r1, r2
   1cdc4:	mov	r2, #1
   1cdc8:	ldr	r3, [pc, r3]
   1cdcc:	bl	126c8 <fwrite@plt>
   1cdd0:	ldr	r0, [pc, #264]	; 1cee0 <next@@Base+0x4080>
   1cdd4:	ldr	r0, [pc, r0]
   1cdd8:	bl	1265c <free@plt>
   1cddc:	b	1ce24 <next@@Base+0x3fc4>
   1cde0:	ldr	r1, [pc, #252]	; 1cee4 <next@@Base+0x4084>
   1cde4:	mov	r2, #4
   1cde8:	ldr	r1, [pc, r1]
   1cdec:	bl	127dc <msync@plt>
   1cdf0:	cmn	r0, #1
   1cdf4:	beq	1ce70 <next@@Base+0x4010>
   1cdf8:	ldr	r1, [pc, #244]	; 1cef4 <next@@Base+0x4094>
   1cdfc:	ldr	r1, [pc, r1]
   1ce00:	ldr	r0, [pc, #240]	; 1cef8 <next@@Base+0x4098>
   1ce04:	ldr	r0, [pc, r0]
   1ce08:	bl	127b8 <munmap@plt>
   1ce0c:	ldr	r0, [pc, #232]	; 1cefc <next@@Base+0x409c>
   1ce10:	mov	r1, #0
   1ce14:	str	r1, [r4]
   1ce18:	add	r0, pc, r0
   1ce1c:	str	r1, [r0]
   1ce20:	str	r1, [r0, #4]
   1ce24:	ldr	r0, [pc, #212]	; 1cf00 <next@@Base+0x40a0>
   1ce28:	ldr	r0, [pc, r0]
   1ce2c:	bl	12644 <fflush@plt>
   1ce30:	ldr	r0, [pc, #204]	; 1cf04 <next@@Base+0x40a4>
   1ce34:	ldr	r0, [pc, r0]
   1ce38:	bl	1d3b0 <__gcov_flush@@Base+0x304>
   1ce3c:	ldr	r0, [pc, #196]	; 1cf08 <next@@Base+0x40a8>
   1ce40:	ldr	r0, [pc, r0]
   1ce44:	bl	127ac <fclose@plt>
   1ce48:	ldr	r0, [pc, #188]	; 1cf0c <next@@Base+0x40ac>
   1ce4c:	mov	r1, #0
   1ce50:	str	r1, [r4]
   1ce54:	add	r0, pc, r0
   1ce58:	str	r1, [r0]
   1ce5c:	ldr	r0, [pc, #172]	; 1cf10 <next@@Base+0x40b0>
   1ce60:	ldr	r0, [pc, r0]
   1ce64:	sub	sp, fp, #28
   1ce68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce6c:	b	1265c <free@plt>
   1ce70:	bl	12758 <__errno_location@plt>
   1ce74:	ldr	r1, [pc, #108]	; 1cee8 <next@@Base+0x4088>
   1ce78:	mov	r6, r4
   1ce7c:	ldr	r1, [pc, r1]
   1ce80:	ldr	r0, [r0]
   1ce84:	ldr	r4, [r1]
   1ce88:	ldr	r5, [pc, #92]	; 1ceec <next@@Base+0x408c>
   1ce8c:	ldr	r5, [pc, r5]
   1ce90:	bl	12704 <strerror@plt>
   1ce94:	ldr	r1, [pc, #84]	; 1cef0 <next@@Base+0x4090>
   1ce98:	mov	r3, r0
   1ce9c:	mov	r0, r4
   1cea0:	add	r1, pc, r1
   1cea4:	mov	r2, r5
   1cea8:	mov	r4, r6
   1ceac:	bl	1274c <fprintf@plt>
   1ceb0:	b	1cdf8 <next@@Base+0x3f98>
   1ceb4:	andeq	r4, r1, r8, asr #20
   1ceb8:	andeq	r4, r1, ip, lsr #20
   1cebc:	andeq	r4, r1, ip, lsr #20
   1cec0:	andeq	r4, r1, ip, lsl sl
   1cec4:	andeq	r4, r1, ip, lsl #20
   1cec8:	andeq	r4, r1, r8, lsl #20
   1cecc:	andeq	r4, r1, ip, ror #19
   1ced0:			; <UNDEFINED> instruction: 0x000149b0
   1ced4:	andeq	r4, r1, r4, lsr #19
   1ced8:	muleq	r1, r0, r9
   1cedc:	andeq	r4, r1, r0, asr #18
   1cee0:	andeq	r4, r1, r8, lsr r9
   1cee4:	andeq	r4, r1, r8, asr #18
   1cee8:	andeq	r3, r1, r8, lsr r2
   1ceec:	andeq	r4, r1, r4, ror r8
   1cef0:	andeq	r2, r0, lr, lsl #1
   1cef4:	andeq	r4, r1, r4, lsr r9
   1cef8:	andeq	r4, r1, r8, lsl #18
   1cefc:	andeq	r4, r1, r8, lsl r9
   1cf00:	andeq	r4, r1, r0, ror #17
   1cf04:	muleq	r1, r0, r2
   1cf08:	andeq	r4, r1, r8, asr #17
   1cf0c:			; <UNDEFINED> instruction: 0x000148b4
   1cf10:	andeq	r4, r1, r0, lsr #17
   1cf14:	push	{r4, sl, fp, lr}
   1cf18:	add	fp, sp, #8
   1cf1c:	mov	r4, r0
   1cf20:	mov	r0, #12
   1cf24:	bl	126ec <malloc@plt>
   1cf28:	ldr	r1, [pc, #60]	; 1cf6c <next@@Base+0x410c>
   1cf2c:	mov	r2, #0
   1cf30:	add	r1, pc, r1
   1cf34:	stm	r0, {r1, r4}
   1cf38:	str	r2, [r0, #8]
   1cf3c:	ldr	r1, [pc, #44]	; 1cf70 <next@@Base+0x4110>
   1cf40:	ldr	r1, [pc, r1]
   1cf44:	mov	r2, r1
   1cf48:	ldr	r3, [r2], #4
   1cf4c:	ldr	r4, [r2]
   1cf50:	cmp	r3, #0
   1cf54:	mov	r3, r2
   1cf58:	addne	r3, r4, #8
   1cf5c:	moveq	r2, r1
   1cf60:	str	r0, [r3]
   1cf64:	str	r0, [r2]
   1cf68:	pop	{r4, sl, fp, pc}
   1cf6c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1cf70:	andeq	r3, r1, r0, ror r1
   1cf74:	push	{r4, r5, fp, lr}
   1cf78:	add	fp, sp, #8
   1cf7c:	ldr	r0, [pc, #64]	; 1cfc4 <next@@Base+0x4164>
   1cf80:	ldr	r0, [pc, r0]
   1cf84:	ldr	r4, [r0]
   1cf88:	cmp	r4, #0
   1cf8c:	beq	1cfc0 <next@@Base+0x4160>
   1cf90:	ldr	r5, [pc, #48]	; 1cfc8 <next@@Base+0x4168>
   1cf94:	add	r5, pc, r5
   1cf98:	b	1cfa8 <next@@Base+0x4148>
   1cf9c:	ldr	r4, [r4, #8]
   1cfa0:	cmp	r4, #0
   1cfa4:	beq	1cfc0 <next@@Base+0x4160>
   1cfa8:	ldr	r0, [r4]
   1cfac:	cmp	r0, r5
   1cfb0:	bne	1cf9c <next@@Base+0x413c>
   1cfb4:	ldr	r0, [r4, #4]
   1cfb8:	blx	r0
   1cfbc:	b	1cf9c <next@@Base+0x413c>
   1cfc0:	pop	{r4, r5, fp, pc}
   1cfc4:	andeq	r3, r1, r0, lsr r1
   1cfc8:	muleq	r1, r0, r7
   1cfcc:	push	{r4, r5, r6, r7, fp, lr}
   1cfd0:	add	fp, sp, #16
   1cfd4:	ldr	r4, [pc, #104]	; 1d044 <next@@Base+0x41e4>
   1cfd8:	ldr	r4, [pc, r4]
   1cfdc:	ldr	r0, [r4]
   1cfe0:	cmp	r0, #0
   1cfe4:	beq	1d040 <next@@Base+0x41e0>
   1cfe8:	ldr	r5, [pc, #88]	; 1d048 <next@@Base+0x41e8>
   1cfec:	mov	r6, #0
   1cff0:	add	r5, pc, r5
   1cff4:	b	1d028 <next@@Base+0x41c8>
   1cff8:	ldr	r1, [r4]
   1cffc:	cmp	r0, r1
   1d000:	streq	r7, [r4]
   1d004:	ldr	r1, [r4, #4]
   1d008:	cmp	r0, r1
   1d00c:	streq	r6, [r4, #4]
   1d010:	cmp	r6, #0
   1d014:	strne	r7, [r6, #8]
   1d018:	bl	1265c <free@plt>
   1d01c:	mov	r0, r7
   1d020:	cmp	r7, #0
   1d024:	beq	1d040 <next@@Base+0x41e0>
   1d028:	ldr	r1, [r0]
   1d02c:	ldr	r7, [r0, #8]
   1d030:	cmp	r1, r5
   1d034:	beq	1cff8 <next@@Base+0x4198>
   1d038:	mov	r6, r0
   1d03c:	b	1d01c <next@@Base+0x41bc>
   1d040:	pop	{r4, r5, r6, r7, fp, pc}
   1d044:	ldrdeq	r3, [r1], -r8
   1d048:	andeq	r4, r1, r4, lsr r7
   1d04c:	push	{r4, sl, fp, lr}
   1d050:	add	fp, sp, #8
   1d054:	mov	r4, r0
   1d058:	mov	r0, #12
   1d05c:	bl	126ec <malloc@plt>
   1d060:	ldr	r1, [pc, #60]	; 1d0a4 <next@@Base+0x4244>
   1d064:	mov	r2, #0
   1d068:	add	r1, pc, r1
   1d06c:	stm	r0, {r1, r4}
   1d070:	str	r2, [r0, #8]
   1d074:	ldr	r1, [pc, #44]	; 1d0a8 <next@@Base+0x4248>
   1d078:	ldr	r1, [pc, r1]
   1d07c:	mov	r2, r1
   1d080:	ldr	r3, [r2], #4
   1d084:	ldr	r4, [r2]
   1d088:	cmp	r3, #0
   1d08c:	mov	r3, r2
   1d090:	addne	r3, r4, #8
   1d094:	moveq	r2, r1
   1d098:	str	r0, [r3]
   1d09c:	str	r0, [r2]
   1d0a0:	pop	{r4, sl, fp, pc}
   1d0a4:			; <UNDEFINED> instruction: 0x000146bc
   1d0a8:	andeq	r3, r1, r4, lsr r0

0001d0ac <__gcov_flush@@Base>:
   1d0ac:	push	{r4, sl, fp, lr}
   1d0b0:	add	fp, sp, #8
   1d0b4:	ldr	r0, [pc, #36]	; 1d0e0 <__gcov_flush@@Base+0x34>
   1d0b8:	ldr	r0, [pc, r0]
   1d0bc:	ldr	r4, [r0]
   1d0c0:	cmp	r4, #0
   1d0c4:	beq	1d0dc <__gcov_flush@@Base+0x30>
   1d0c8:	ldr	r0, [r4, #4]
   1d0cc:	blx	r0
   1d0d0:	ldr	r4, [r4, #8]
   1d0d4:	cmp	r4, #0
   1d0d8:	bne	1d0c8 <__gcov_flush@@Base+0x1c>
   1d0dc:	pop	{r4, sl, fp, pc}
   1d0e0:	strdeq	r2, [r1], -r4
   1d0e4:	push	{r4, r5, r6, r7, fp, lr}
   1d0e8:	add	fp, sp, #16
   1d0ec:	ldr	r4, [pc, #104]	; 1d15c <__gcov_flush@@Base+0xb0>
   1d0f0:	ldr	r4, [pc, r4]
   1d0f4:	ldr	r0, [r4]
   1d0f8:	cmp	r0, #0
   1d0fc:	beq	1d158 <__gcov_flush@@Base+0xac>
   1d100:	ldr	r5, [pc, #88]	; 1d160 <__gcov_flush@@Base+0xb4>
   1d104:	mov	r6, #0
   1d108:	add	r5, pc, r5
   1d10c:	b	1d140 <__gcov_flush@@Base+0x94>
   1d110:	ldr	r1, [r4]
   1d114:	cmp	r0, r1
   1d118:	streq	r7, [r4]
   1d11c:	ldr	r1, [r4, #4]
   1d120:	cmp	r0, r1
   1d124:	streq	r6, [r4, #4]
   1d128:	cmp	r6, #0
   1d12c:	strne	r7, [r6, #8]
   1d130:	bl	1265c <free@plt>
   1d134:	mov	r0, r7
   1d138:	cmp	r7, #0
   1d13c:	beq	1d158 <__gcov_flush@@Base+0xac>
   1d140:	ldr	r1, [r0]
   1d144:	ldr	r7, [r0, #8]
   1d148:	cmp	r1, r5
   1d14c:	beq	1d110 <__gcov_flush@@Base+0x64>
   1d150:	mov	r6, r0
   1d154:	b	1d134 <__gcov_flush@@Base+0x88>
   1d158:	pop	{r4, r5, r6, r7, fp, pc}
   1d15c:			; <UNDEFINED> instruction: 0x00012fbc
   1d160:	andeq	r4, r1, ip, lsl r6
   1d164:	push	{r4, r5, r6, sl, fp, lr}
   1d168:	add	fp, sp, #16
   1d16c:	ldr	r6, [pc, #228]	; 1d258 <__gcov_flush@@Base+0x1ac>
   1d170:	mov	r4, r1
   1d174:	cmp	r0, #0
   1d178:	add	r6, pc, r6
   1d17c:	beq	1d1c8 <__gcov_flush@@Base+0x11c>
   1d180:	mov	r5, r0
   1d184:	mov	r0, #12
   1d188:	bl	126ec <malloc@plt>
   1d18c:	mov	r1, #0
   1d190:	str	r6, [r0]
   1d194:	str	r5, [r0, #4]
   1d198:	str	r1, [r0, #8]
   1d19c:	ldr	r1, [pc, #184]	; 1d25c <__gcov_flush@@Base+0x1b0>
   1d1a0:	ldr	r1, [pc, r1]
   1d1a4:	mov	r2, r1
   1d1a8:	ldr	r3, [r2], #4
   1d1ac:	ldr	r5, [r2]
   1d1b0:	cmp	r3, #0
   1d1b4:	mov	r3, r2
   1d1b8:	addne	r3, r5, #8
   1d1bc:	moveq	r2, r1
   1d1c0:	str	r0, [r3]
   1d1c4:	str	r0, [r2]
   1d1c8:	cmp	r4, #0
   1d1cc:	beq	1d214 <__gcov_flush@@Base+0x168>
   1d1d0:	mov	r0, #12
   1d1d4:	bl	126ec <malloc@plt>
   1d1d8:	mov	r1, #0
   1d1dc:	str	r6, [r0]
   1d1e0:	str	r4, [r0, #4]
   1d1e4:	str	r1, [r0, #8]
   1d1e8:	ldr	r1, [pc, #112]	; 1d260 <__gcov_flush@@Base+0x1b4>
   1d1ec:	ldr	r1, [pc, r1]
   1d1f0:	mov	r2, r1
   1d1f4:	ldr	r3, [r2], #4
   1d1f8:	ldr	r6, [r2]
   1d1fc:	cmp	r3, #0
   1d200:	mov	r3, r2
   1d204:	addne	r3, r6, #8
   1d208:	moveq	r2, r1
   1d20c:	str	r0, [r3]
   1d210:	str	r0, [r2]
   1d214:	ldr	r1, [pc, #72]	; 1d264 <__gcov_flush@@Base+0x1b8>
   1d218:	add	r1, pc, r1
   1d21c:	ldrb	r0, [r1]
   1d220:	cmp	r0, #0
   1d224:	popne	{r4, r5, r6, sl, fp, pc}
   1d228:	ldr	r0, [pc, #56]	; 1d268 <__gcov_flush@@Base+0x1bc>
   1d22c:	mov	r2, #1
   1d230:	strb	r2, [r1]
   1d234:	add	r0, pc, r0
   1d238:	bl	1d804 <__libc_csu_fini@@Base+0x4>
   1d23c:	ldr	r0, [pc, #40]	; 1d26c <__gcov_flush@@Base+0x1c0>
   1d240:	add	r0, pc, r0
   1d244:	bl	1d804 <__libc_csu_fini@@Base+0x4>
   1d248:	ldr	r0, [pc, #32]	; 1d270 <__gcov_flush@@Base+0x1c4>
   1d24c:	add	r0, pc, r0
   1d250:	pop	{r4, r5, r6, sl, fp, lr}
   1d254:	b	1d804 <__libc_csu_fini@@Base+0x4>
   1d258:	andeq	r4, r1, ip, lsr #11
   1d25c:	andeq	r2, r1, r0, lsl pc
   1d260:	andeq	r2, r1, r0, asr #29
   1d264:	andeq	r4, r1, r0, lsl r5
   1d268:			; <UNDEFINED> instruction: 0xfffffea8
   1d26c:			; <UNDEFINED> instruction: 0xfffffd84
   1d270:			; <UNDEFINED> instruction: 0xfffffd20
   1d274:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d278:	add	fp, sp, #24
   1d27c:	ldr	r7, [pc, #68]	; 1d2c8 <__gcov_flush@@Base+0x21c>
   1d280:	mov	r4, r0
   1d284:	mov	r5, #1
   1d288:	mov	r8, #0
   1d28c:	ldr	r7, [pc, r7]
   1d290:	mov	r6, #47	; 0x2f
   1d294:	b	1d2b0 <__gcov_flush@@Base+0x204>
   1d298:	strb	r8, [r4, r5]
   1d29c:	ldr	r1, [r7]
   1d2a0:	mov	r0, r4
   1d2a4:	bl	12770 <mkdir@plt>
   1d2a8:	strb	r6, [r4, r5]
   1d2ac:	add	r5, r5, #1
   1d2b0:	ldrb	r0, [r4, r5]
   1d2b4:	cmp	r0, #47	; 0x2f
   1d2b8:	beq	1d298 <__gcov_flush@@Base+0x1ec>
   1d2bc:	cmp	r0, #0
   1d2c0:	bne	1d2ac <__gcov_flush@@Base+0x200>
   1d2c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d2c8:	andeq	r2, r1, ip, lsl lr
   1d2cc:	ldr	r0, [pc, #8]	; 1d2dc <__gcov_flush@@Base+0x230>
   1d2d0:	ldr	r0, [pc, r0]
   1d2d4:	ldr	r0, [r0]
   1d2d8:	bx	lr
   1d2dc:	ldrdeq	r2, [r1], -r8
   1d2e0:	ldr	r1, [pc, #8]	; 1d2f0 <__gcov_flush@@Base+0x244>
   1d2e4:	ldr	r1, [pc, r1]
   1d2e8:	str	r0, [r1]
   1d2ec:	bx	lr
   1d2f0:	andeq	r2, r1, r4, asr #27
   1d2f4:	push	{r4, r5, r6, sl, fp, lr}
   1d2f8:	add	fp, sp, #16
   1d2fc:	sub	sp, sp, #392	; 0x188
   1d300:	mov	r6, sp
   1d304:	mov	r5, r0
   1d308:	mov	r0, r6
   1d30c:	mov	r4, r1
   1d310:	bl	12698 <uname@plt>
   1d314:	cmp	r0, #0
   1d318:	bmi	1d330 <__gcov_flush@@Base+0x284>
   1d31c:	add	r1, r6, #65	; 0x41
   1d320:	mov	r0, r5
   1d324:	mov	r2, r4
   1d328:	bl	12788 <strncpy@plt>
   1d32c:	mov	r0, #0
   1d330:	sub	sp, fp, #16
   1d334:	pop	{r4, r5, r6, sl, fp, pc}
   1d338:	push	{r4, r5, r6, sl, fp, lr}
   1d33c:	add	fp, sp, #16
   1d340:	sub	sp, sp, #32
   1d344:	mov	r4, #0
   1d348:	str	r4, [sp, #8]
   1d34c:	strh	r4, [sp, #2]
   1d350:	mov	r5, r0
   1d354:	str	r4, [sp, #12]
   1d358:	str	r4, [sp, #16]
   1d35c:	str	r4, [sp, #20]
   1d360:	bl	1271c <getpid@plt>
   1d364:	mov	r6, sp
   1d368:	str	r0, [sp, #24]
   1d36c:	mov	r0, #1
   1d370:	strh	r0, [sp]
   1d374:	mov	r0, r5
   1d378:	mov	r1, #14
   1d37c:	mov	r2, r6
   1d380:	bl	127c4 <fcntl64@plt>
   1d384:	cmn	r0, #1
   1d388:	bne	1d3a4 <__gcov_flush@@Base+0x2f8>
   1d38c:	bl	12758 <__errno_location@plt>
   1d390:	ldr	r0, [r0]
   1d394:	cmp	r0, #4
   1d398:	beq	1d374 <__gcov_flush@@Base+0x2c8>
   1d39c:	cmp	r0, #37	; 0x25
   1d3a0:	mvneq	r4, #0
   1d3a4:	mov	r0, r4
   1d3a8:	sub	sp, fp, #16
   1d3ac:	pop	{r4, r5, r6, sl, fp, pc}
   1d3b0:	push	{r4, r5, r6, sl, fp, lr}
   1d3b4:	add	fp, sp, #16
   1d3b8:	sub	sp, sp, #32
   1d3bc:	mov	r4, #0
   1d3c0:	str	r4, [sp, #8]
   1d3c4:	strh	r4, [sp, #2]
   1d3c8:	mov	r5, r0
   1d3cc:	str	r4, [sp, #12]
   1d3d0:	str	r4, [sp, #16]
   1d3d4:	str	r4, [sp, #20]
   1d3d8:	bl	1271c <getpid@plt>
   1d3dc:	mov	r6, sp
   1d3e0:	str	r0, [sp, #24]
   1d3e4:	mov	r0, #2
   1d3e8:	strh	r0, [sp]
   1d3ec:	mov	r0, r5
   1d3f0:	mov	r1, #14
   1d3f4:	mov	r2, r6
   1d3f8:	bl	127c4 <fcntl64@plt>
   1d3fc:	cmn	r0, #1
   1d400:	bne	1d41c <__gcov_flush@@Base+0x370>
   1d404:	bl	12758 <__errno_location@plt>
   1d408:	ldr	r0, [r0]
   1d40c:	cmp	r0, #4
   1d410:	beq	1d3ec <__gcov_flush@@Base+0x340>
   1d414:	cmp	r0, #37	; 0x25
   1d418:	mvneq	r4, #0
   1d41c:	mov	r0, r4
   1d420:	sub	sp, fp, #16
   1d424:	pop	{r4, r5, r6, sl, fp, pc}
   1d428:	push	{r4, r5, r6, sl, fp, lr}
   1d42c:	add	fp, sp, #16
   1d430:	sub	sp, sp, #32
   1d434:	bl	127a0 <fileno@plt>
   1d438:	mov	r4, #0
   1d43c:	str	r4, [sp, #8]
   1d440:	strh	r4, [sp, #2]
   1d444:	mov	r5, r0
   1d448:	str	r4, [sp, #12]
   1d44c:	str	r4, [sp, #16]
   1d450:	str	r4, [sp, #20]
   1d454:	bl	1271c <getpid@plt>
   1d458:	mov	r6, sp
   1d45c:	str	r0, [sp, #24]
   1d460:	mov	r0, #1
   1d464:	strh	r0, [sp]
   1d468:	mov	r0, r5
   1d46c:	mov	r1, #14
   1d470:	mov	r2, r6
   1d474:	bl	127c4 <fcntl64@plt>
   1d478:	cmn	r0, #1
   1d47c:	bne	1d498 <__gcov_flush@@Base+0x3ec>
   1d480:	bl	12758 <__errno_location@plt>
   1d484:	ldr	r0, [r0]
   1d488:	cmp	r0, #4
   1d48c:	beq	1d468 <__gcov_flush@@Base+0x3bc>
   1d490:	cmp	r0, #37	; 0x25
   1d494:	mvneq	r4, #0
   1d498:	mov	r0, r4
   1d49c:	sub	sp, fp, #16
   1d4a0:	pop	{r4, r5, r6, sl, fp, pc}
   1d4a4:	push	{r4, r5, r6, sl, fp, lr}
   1d4a8:	add	fp, sp, #16
   1d4ac:	sub	sp, sp, #32
   1d4b0:	bl	127a0 <fileno@plt>
   1d4b4:	mov	r4, #0
   1d4b8:	str	r4, [sp, #8]
   1d4bc:	strh	r4, [sp, #2]
   1d4c0:	mov	r5, r0
   1d4c4:	str	r4, [sp, #12]
   1d4c8:	str	r4, [sp, #16]
   1d4cc:	str	r4, [sp, #20]
   1d4d0:	bl	1271c <getpid@plt>
   1d4d4:	mov	r6, sp
   1d4d8:	str	r0, [sp, #24]
   1d4dc:	mov	r0, #2
   1d4e0:	strh	r0, [sp]
   1d4e4:	mov	r0, r5
   1d4e8:	mov	r1, #14
   1d4ec:	mov	r2, r6
   1d4f0:	bl	127c4 <fcntl64@plt>
   1d4f4:	cmn	r0, #1
   1d4f8:	bne	1d514 <__gcov_flush@@Base+0x468>
   1d4fc:	bl	12758 <__errno_location@plt>
   1d500:	ldr	r0, [r0]
   1d504:	cmp	r0, #4
   1d508:	beq	1d4e4 <__gcov_flush@@Base+0x438>
   1d50c:	cmp	r0, #37	; 0x25
   1d510:	mvneq	r4, #0
   1d514:	mov	r0, r4
   1d518:	sub	sp, fp, #16
   1d51c:	pop	{r4, r5, r6, sl, fp, pc}
   1d520:	push	{r4, r5, fp, lr}
   1d524:	add	fp, sp, #8
   1d528:	sub	sp, sp, #32
   1d52c:	mov	r2, #182	; 0xb6
   1d530:	orr	r2, r2, #256	; 0x100
   1d534:	mov	r1, #66	; 0x42
   1d538:	bl	126d4 <open64@plt>
   1d53c:	cmp	r0, #0
   1d540:	bmi	1d5bc <__gcov_flush@@Base+0x510>
   1d544:	mov	r4, r0
   1d548:	mov	r0, #0
   1d54c:	str	r0, [sp, #8]
   1d550:	strh	r0, [sp, #2]
   1d554:	str	r0, [sp, #12]
   1d558:	str	r0, [sp, #16]
   1d55c:	str	r0, [sp, #20]
   1d560:	bl	1271c <getpid@plt>
   1d564:	mov	r5, sp
   1d568:	str	r0, [sp, #24]
   1d56c:	mov	r0, #1
   1d570:	strh	r0, [sp]
   1d574:	mov	r0, r4
   1d578:	mov	r1, #14
   1d57c:	mov	r2, r5
   1d580:	bl	127c4 <fcntl64@plt>
   1d584:	cmn	r0, #1
   1d588:	bne	1d5a4 <__gcov_flush@@Base+0x4f8>
   1d58c:	bl	12758 <__errno_location@plt>
   1d590:	ldr	r0, [r0]
   1d594:	cmp	r0, #4
   1d598:	beq	1d574 <__gcov_flush@@Base+0x4c8>
   1d59c:	cmp	r0, #37	; 0x25
   1d5a0:	beq	1d5c8 <__gcov_flush@@Base+0x51c>
   1d5a4:	ldr	r1, [pc, #76]	; 1d5f8 <__gcov_flush@@Base+0x54c>
   1d5a8:	mov	r0, r4
   1d5ac:	add	r1, pc, r1
   1d5b0:	bl	12620 <fdopen@plt>
   1d5b4:	sub	sp, fp, #8
   1d5b8:	pop	{r4, r5, fp, pc}
   1d5bc:	mov	r0, #0
   1d5c0:	sub	sp, fp, #8
   1d5c4:	pop	{r4, r5, fp, pc}
   1d5c8:	ldr	r1, [pc, #28]	; 1d5ec <__gcov_flush@@Base+0x540>
   1d5cc:	ldr	r2, [pc, #28]	; 1d5f0 <__gcov_flush@@Base+0x544>
   1d5d0:	ldr	r0, [pc, #28]	; 1d5f4 <__gcov_flush@@Base+0x548>
   1d5d4:	add	r1, pc, r1
   1d5d8:	add	r2, pc, r2
   1d5dc:	ldr	r0, [pc, r0]
   1d5e0:	ldr	r0, [r0]
   1d5e4:	bl	1274c <fprintf@plt>
   1d5e8:	b	1d5a4 <__gcov_flush@@Base+0x4f8>
   1d5ec:	andeq	r1, r0, fp, ror r9
   1d5f0:	andeq	r1, r0, r0, asr #19
   1d5f4:	ldrdeq	r2, [r1], -r8
   1d5f8:	andeq	r1, r0, r1, lsl #16
   1d5fc:	push	{r4, r5, r6, sl, fp, lr}
   1d600:	add	fp, sp, #16
   1d604:	mov	r6, r0
   1d608:	ldr	r0, [pc, #120]	; 1d688 <__gcov_flush@@Base+0x5dc>
   1d60c:	mov	r4, r1
   1d610:	add	r0, pc, r0
   1d614:	bl	126e0 <getenv@plt>
   1d618:	mov	r5, r0
   1d61c:	ldr	r0, [pc, #104]	; 1d68c <__gcov_flush@@Base+0x5e0>
   1d620:	add	r0, pc, r0
   1d624:	bl	126e0 <getenv@plt>
   1d628:	mov	r1, #0
   1d62c:	str	r1, [r4]
   1d630:	str	r1, [r6]
   1d634:	cmp	r5, #0
   1d638:	ldrbne	r2, [r5]
   1d63c:	cmpne	r2, #0
   1d640:	bne	1d64c <__gcov_flush@@Base+0x5a0>
   1d644:	mov	r0, r1
   1d648:	pop	{r4, r5, r6, sl, fp, pc}
   1d64c:	cmp	r0, #0
   1d650:	beq	1d668 <__gcov_flush@@Base+0x5bc>
   1d654:	mov	r1, #0
   1d658:	mov	r2, #10
   1d65c:	bl	1262c <strtol@plt>
   1d660:	bic	r0, r0, r0, asr #31
   1d664:	b	1d66c <__gcov_flush@@Base+0x5c0>
   1d668:	mov	r0, #0
   1d66c:	str	r0, [r6]
   1d670:	mov	r0, r5
   1d674:	bl	12734 <strlen@plt>
   1d678:	mov	r1, r5
   1d67c:	str	r0, [r4]
   1d680:	mov	r0, r1
   1d684:	pop	{r4, r5, r6, sl, fp, pc}
   1d688:			; <UNDEFINED> instruction: 0x000019b6
   1d68c:			; <UNDEFINED> instruction: 0x000019b2
   1d690:	push	{r4, r5, r6, r7, fp, lr}
   1d694:	add	fp, sp, #16
   1d698:	mov	r6, r0
   1d69c:	ldr	r0, [fp, #8]
   1d6a0:	mov	r5, r3
   1d6a4:	mov	r7, r2
   1d6a8:	mov	r4, r1
   1d6ac:	cmp	r0, #1
   1d6b0:	blt	1d6e8 <__gcov_flush@@Base+0x63c>
   1d6b4:	add	r1, r4, #1
   1d6b8:	mov	r2, #0
   1d6bc:	b	1d6d4 <__gcov_flush@@Base+0x628>
   1d6c0:	add	r2, r2, #1
   1d6c4:	mov	r4, r1
   1d6c8:	add	r1, r1, #1
   1d6cc:	cmp	r2, r0
   1d6d0:	bge	1d6e8 <__gcov_flush@@Base+0x63c>
   1d6d4:	ldrb	r3, [r1]
   1d6d8:	cmp	r3, #47	; 0x2f
   1d6dc:	beq	1d6c0 <__gcov_flush@@Base+0x614>
   1d6e0:	cmp	r3, #0
   1d6e4:	bne	1d6c8 <__gcov_flush@@Base+0x61c>
   1d6e8:	mov	r0, r6
   1d6ec:	mov	r1, r7
   1d6f0:	mov	r2, r5
   1d6f4:	bl	12674 <memcpy@plt>
   1d6f8:	add	r0, r5, r7
   1d6fc:	ldrb	r0, [r0, #-1]
   1d700:	cmp	r0, #47	; 0x2f
   1d704:	movne	r0, #47	; 0x2f
   1d708:	strbne	r0, [r6, r5]
   1d70c:	mov	r0, r4
   1d710:	addne	r5, r5, #1
   1d714:	add	r5, r6, r5
   1d718:	bl	12734 <strlen@plt>
   1d71c:	add	r2, r0, #1
   1d720:	mov	r0, r5
   1d724:	mov	r1, r4
   1d728:	pop	{r4, r5, r6, r7, fp, lr}
   1d72c:	b	12674 <memcpy@plt>
   1d730:	mov	r1, #47	; 0x2f
   1d734:	b	12740 <strchr@plt>
   1d738:	mov	r1, #47	; 0x2f
   1d73c:	b	127d0 <strrchr@plt>
   1d740:	push	{fp, lr}
   1d744:	mov	fp, sp
   1d748:	sub	sp, sp, #8
   1d74c:	mov	r0, #0
   1d750:	str	r0, [sp, #4]
   1d754:	add	r1, sp, #4
   1d758:	mov	r0, #2
   1d75c:	bl	12794 <prctl@plt>
   1d760:	ldr	r1, [sp, #4]
   1d764:	cmp	r0, #0
   1d768:	cmpeq	r1, #9
   1d76c:	bne	1d780 <__gcov_flush@@Base+0x6d4>
   1d770:	mov	r0, #1
   1d774:	mov	r1, #0
   1d778:	bl	12794 <prctl@plt>
   1d77c:	ldr	r1, [sp, #4]
   1d780:	sub	r0, r1, #9
   1d784:	clz	r0, r0
   1d788:	lsr	r0, r0, #5
   1d78c:	mov	sp, fp
   1d790:	pop	{fp, pc}
   1d794:	mov	r0, #1
   1d798:	mov	r1, #9
   1d79c:	b	12794 <prctl@plt>

0001d7a0 <__libc_csu_init@@Base>:
   1d7a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d7a4:	mov	r7, r0
   1d7a8:	ldr	r6, [pc, #72]	; 1d7f8 <__libc_csu_init@@Base+0x58>
   1d7ac:	ldr	r5, [pc, #72]	; 1d7fc <__libc_csu_init@@Base+0x5c>
   1d7b0:	add	r6, pc, r6
   1d7b4:	add	r5, pc, r5
   1d7b8:	sub	r6, r6, r5
   1d7bc:	mov	r8, r1
   1d7c0:	mov	r9, r2
   1d7c4:	bl	12600 <fdopen@plt-0x20>
   1d7c8:	asrs	r6, r6, #2
   1d7cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7d0:	mov	r4, #0
   1d7d4:	add	r4, r4, #1
   1d7d8:	ldr	r3, [r5], #4
   1d7dc:	mov	r2, r9
   1d7e0:	mov	r1, r8
   1d7e4:	mov	r0, r7
   1d7e8:	blx	r3
   1d7ec:	cmp	r6, r4
   1d7f0:	bne	1d7d4 <__libc_csu_init@@Base+0x34>
   1d7f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7f8:	andeq	r2, r1, ip, asr #14
   1d7fc:	andeq	r2, r1, r4, lsr r7

0001d800 <__libc_csu_fini@@Base>:
   1d800:	bx	lr
   1d804:	ldr	r3, [pc, #12]	; 1d818 <__libc_csu_fini@@Base+0x18>
   1d808:	mov	r1, #0
   1d80c:	add	r3, pc, r3
   1d810:	ldr	r2, [r3]
   1d814:	b	12764 <__cxa_atexit@plt>
   1d818:			; <UNDEFINED> instruction: 0x000128b4

Disassembly of section .fini:

0001d81c <.fini>:
   1d81c:	push	{r3, lr}
   1d820:	pop	{r3, pc}
