
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010d24 <.init>:
   10d24:	push	{r3, lr}
   10d28:	bl	11ed0 <strspn@plt+0xeec>
   10d2c:	pop	{r3, pc}

Disassembly of section .plt:

00010d30 <calloc@plt-0x14>:
   10d30:	push	{lr}		; (str lr, [sp, #-4]!)
   10d34:	ldr	lr, [pc, #4]	; 10d40 <calloc@plt-0x4>
   10d38:	add	lr, pc, lr
   10d3c:	ldr	pc, [lr, #8]!
   10d40:	andeq	r6, r1, r0, asr #5

00010d44 <calloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #704]!	; 0x2c0

00010d50 <fputs_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #696]!	; 0x2b8

00010d5c <raise@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #688]!	; 0x2b0

00010d68 <uselocale@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #680]!	; 0x2a8

00010d74 <strcmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #672]!	; 0x2a0

00010d80 <strtol@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #664]!	; 0x298

00010d8c <strcspn@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #656]!	; 0x290

00010d98 <fflush@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #648]!	; 0x288

00010da4 <memmove@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #640]!	; 0x280

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #632]!	; 0x278

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #624]!	; 0x270

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #616]!	; 0x268

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #608]!	; 0x260

00010de0 <strtold@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #600]!	; 0x258

00010dec <fwrite_unlocked@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #592]!	; 0x250

00010df8 <memcmp@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #584]!	; 0x248

00010e04 <fputc_unlocked@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #576]!	; 0x240

00010e10 <dcgettext@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #568]!	; 0x238

00010e1c <realloc@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #560]!	; 0x230

00010e28 <textdomain@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #552]!	; 0x228

00010e34 <iswprint@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #544]!	; 0x220

00010e40 <fwrite@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #536]!	; 0x218

00010e4c <lseek64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #528]!	; 0x210

00010e58 <__ctype_get_mb_cur_max@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #520]!	; 0x208

00010e64 <strcpy@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #512]!	; 0x200

00010e70 <__fpending@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #504]!	; 0x1f8

00010e7c <mbrtowc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #496]!	; 0x1f0

00010e88 <error@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #488]!	; 0x1e8

00010e94 <__asprintf_chk@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #480]!	; 0x1e0

00010ea0 <malloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #472]!	; 0x1d8

00010eac <__libc_start_main@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb8 <__freading@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #448]!	; 0x1c0

00010ed0 <mempcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #440]!	; 0x1b8

00010edc <getopt_long@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee8 <__ctype_b_loc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef4 <exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #416]!	; 0x1a0

00010f00 <strlen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #408]!	; 0x198

00010f0c <strchr@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #400]!	; 0x190

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #392]!	; 0x188

00010f24 <__sprintf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #384]!	; 0x180

00010f30 <__cxa_atexit@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #376]!	; 0x178

00010f3c <memset@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #368]!	; 0x170

00010f48 <__printf_chk@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #360]!	; 0x168

00010f54 <fileno@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #352]!	; 0x160

00010f60 <__fprintf_chk@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #344]!	; 0x158

00010f6c <fclose@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #336]!	; 0x150

00010f78 <fseeko64@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #328]!	; 0x148

00010f84 <setlocale@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #320]!	; 0x140

00010f90 <strrchr@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #312]!	; 0x138

00010f9c <nl_langinfo@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #304]!	; 0x130

00010fa8 <newlocale@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #296]!	; 0x128

00010fb4 <clearerr_unlocked@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #288]!	; 0x120

00010fc0 <bindtextdomain@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #280]!	; 0x118

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #272]!	; 0x110

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #264]!	; 0x108

00010fe4 <strspn@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #256]!	; 0x100

Disassembly of section .text:

00010ff0 <.text>:
   10ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ff4:	mov	r5, r1
   10ff8:	sub	sp, sp, #28
   10ffc:	mov	r6, r0
   11000:	ldr	r1, [pc, #788]	; 1131c <strspn@plt+0x338>
   11004:	mov	r0, r5
   11008:	str	r3, [sp, #16]
   1100c:	str	r2, [sp, #12]
   11010:	bl	10d74 <strcmp@plt>
   11014:	mov	r3, r6
   11018:	str	r0, [sp]
   1101c:	ldrb	r2, [r3]
   11020:	mov	r4, r3
   11024:	add	r3, r3, #1
   11028:	cmp	r2, #48	; 0x30
   1102c:	beq	1101c <strspn@plt+0x38>
   11030:	subs	r6, r6, r4
   11034:	movne	r6, #1
   11038:	cmp	r2, #0
   1103c:	movne	r6, #0
   11040:	cmp	r6, #0
   11044:	subne	r4, r4, #1
   11048:	mov	r3, r5
   1104c:	ldrb	r2, [r3]
   11050:	mov	r6, r3
   11054:	add	r3, r3, #1
   11058:	cmp	r2, #48	; 0x30
   1105c:	beq	1104c <strspn@plt+0x68>
   11060:	subs	r5, r5, r6
   11064:	movne	r5, #1
   11068:	cmp	r2, #0
   1106c:	movne	r5, #0
   11070:	cmp	r5, #0
   11074:	mov	r0, r4
   11078:	subne	r6, r6, #1
   1107c:	bl	10f00 <strlen@plt>
   11080:	ldr	r3, [sp]
   11084:	cmp	r3, #0
   11088:	ldreq	r9, [sp]
   1108c:	mov	r5, r0
   11090:	beq	110a0 <strspn@plt+0xbc>
   11094:	mov	r0, r6
   11098:	bl	10f00 <strlen@plt>
   1109c:	mov	r9, r0
   110a0:	add	fp, r5, #1
   110a4:	cmp	fp, #31
   110a8:	movcc	r8, #31
   110ac:	movcs	r8, fp
   110b0:	cmp	r8, r9
   110b4:	movcc	r8, r9
   110b8:	add	r7, r8, #1
   110bc:	mov	r0, r7
   110c0:	bl	14c78 <strspn@plt+0x3c94>
   110c4:	mov	r1, r4
   110c8:	mov	r2, fp
   110cc:	mov	sl, r0
   110d0:	sub	r0, r8, r5
   110d4:	add	r0, sl, r0
   110d8:	bl	10dc8 <memcpy@plt>
   110dc:	ldr	r3, [sp]
   110e0:	cmp	r3, #0
   110e4:	ldreq	r3, [sp]
   110e8:	streq	r3, [sp, #4]
   110ec:	mov	r4, r0
   110f0:	beq	11140 <strspn@plt+0x15c>
   110f4:	mov	r0, r7
   110f8:	bl	14c78 <strspn@plt+0x3c94>
   110fc:	mov	r1, r6
   11100:	add	r2, r9, #1
   11104:	mov	fp, r0
   11108:	sub	r0, r8, r9
   1110c:	add	r0, fp, r0
   11110:	bl	10dc8 <memcpy@plt>
   11114:	cmp	r9, r5
   11118:	mov	r6, r0
   1111c:	bhi	1113c <strspn@plt+0x158>
   11120:	bcc	11304 <strspn@plt+0x320>
   11124:	mov	r1, r0
   11128:	mov	r2, r5
   1112c:	mov	r0, r4
   11130:	bl	10df8 <memcmp@plt>
   11134:	cmp	r0, #0
   11138:	bgt	11304 <strspn@plt+0x320>
   1113c:	str	r6, [sp, #4]
   11140:	lsl	r7, r7, #1
   11144:	cmp	r7, #8192	; 0x2000
   11148:	movcc	r7, #8192	; 0x2000
   1114c:	mov	r0, r7
   11150:	bl	14c78 <strspn@plt+0x3c94>
   11154:	mov	r2, r5
   11158:	mov	r1, r4
   1115c:	mov	fp, r0
   11160:	bl	10ed0 <mempcpy@plt>
   11164:	add	r3, fp, r7
   11168:	str	r3, [sp, #8]
   1116c:	mov	r6, r0
   11170:	ldr	r0, [sp, #12]
   11174:	ldr	r1, [sp, #16]
   11178:	orrs	r3, r0, r1
   1117c:	beq	111c8 <strspn@plt+0x1e4>
   11180:	sub	r3, r5, #1
   11184:	add	r3, r4, r3
   11188:	ldrb	r2, [r3]
   1118c:	cmp	r2, #56	; 0x38
   11190:	addls	r2, r2, #1
   11194:	strbls	r2, [r3]
   11198:	bls	111bc <strspn@plt+0x1d8>
   1119c:	mov	r2, #48	; 0x30
   111a0:	strb	r2, [r3], #-1
   111a4:	cmp	r3, r4
   111a8:	bcs	11188 <strspn@plt+0x1a4>
   111ac:	mov	r3, #49	; 0x31
   111b0:	strb	r3, [r4, #-1]
   111b4:	add	r5, r5, #1
   111b8:	sub	r4, r4, #1
   111bc:	subs	r0, r0, #1
   111c0:	sbc	r1, r1, #0
   111c4:	b	11178 <strspn@plt+0x194>
   111c8:	ldr	r3, [sp]
   111cc:	clz	r3, r3
   111d0:	lsr	r3, r3, #5
   111d4:	cmp	r9, r5
   111d8:	orrhi	r3, r3, #1
   111dc:	cmp	r3, #0
   111e0:	bne	11204 <strspn@plt+0x220>
   111e4:	cmp	r9, r5
   111e8:	bcc	112d4 <strspn@plt+0x2f0>
   111ec:	mov	r2, r5
   111f0:	ldr	r1, [sp, #4]
   111f4:	mov	r0, r4
   111f8:	bl	10df8 <memcmp@plt>
   111fc:	cmp	r0, #0
   11200:	bgt	112d4 <strspn@plt+0x2f0>
   11204:	ldr	r3, [pc, #276]	; 11320 <strspn@plt+0x33c>
   11208:	cmp	r8, r5
   1120c:	ldr	r2, [r3]
   11210:	add	r3, r6, #1
   11214:	ldrb	r2, [r2]
   11218:	strb	r2, [r6]
   1121c:	bne	11284 <strspn@plt+0x2a0>
   11220:	lsl	r8, r8, #1
   11224:	add	r6, r8, #1
   11228:	mov	r1, r6
   1122c:	mov	r0, sl
   11230:	str	r3, [sp, #20]
   11234:	bl	14cb4 <strspn@plt+0x3cd0>
   11238:	add	r2, r5, #1
   1123c:	lsl	r6, r6, #1
   11240:	mov	r1, r0
   11244:	mov	sl, r0
   11248:	add	r0, r0, r5
   1124c:	bl	10da4 <memmove@plt>
   11250:	cmp	r7, r6
   11254:	ldr	r3, [sp, #20]
   11258:	mov	r4, r0
   1125c:	bcs	11284 <strspn@plt+0x2a0>
   11260:	mov	r0, fp
   11264:	mov	r1, r6
   11268:	sub	r7, r3, fp
   1126c:	bl	14cb4 <strspn@plt+0x3cd0>
   11270:	add	r3, r0, r7
   11274:	mov	fp, r0
   11278:	mov	r7, r6
   1127c:	add	r2, r0, r6
   11280:	str	r2, [sp, #8]
   11284:	mov	r0, r3
   11288:	mov	r2, r5
   1128c:	mov	r1, r4
   11290:	bl	10ed0 <mempcpy@plt>
   11294:	ldr	r2, [sp, #8]
   11298:	mvn	r3, r5
   1129c:	add	r3, r2, r3
   112a0:	cmp	r0, r3
   112a4:	movls	r6, r0
   112a8:	bls	11170 <strspn@plt+0x18c>
   112ac:	ldr	r3, [pc, #112]	; 11324 <strspn@plt+0x340>
   112b0:	sub	r1, r0, fp
   112b4:	mov	r2, #1
   112b8:	ldr	r3, [r3]
   112bc:	mov	r0, fp
   112c0:	bl	10dec <fwrite_unlocked@plt>
   112c4:	cmp	r0, #1
   112c8:	moveq	r6, fp
   112cc:	beq	11170 <strspn@plt+0x18c>
   112d0:	bl	12008 <strspn@plt+0x1024>
   112d4:	ldr	r3, [pc, #72]	; 11324 <strspn@plt+0x340>
   112d8:	mov	r2, #10
   112dc:	strb	r2, [r6], #1
   112e0:	mov	r0, fp
   112e4:	sub	r1, r6, fp
   112e8:	ldr	r3, [r3]
   112ec:	mov	r2, #1
   112f0:	bl	10dec <fwrite_unlocked@plt>
   112f4:	cmp	r0, #1
   112f8:	bne	112d0 <strspn@plt+0x2ec>
   112fc:	mov	r0, #0
   11300:	bl	10ef4 <exit@plt>
   11304:	mov	r0, sl
   11308:	bl	12828 <strspn@plt+0x1844>
   1130c:	mov	r0, fp
   11310:	add	sp, sp, #28
   11314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11318:	b	12828 <strspn@plt+0x1844>
   1131c:	andeq	r5, r1, ip, lsl lr
   11320:	andeq	r7, r2, r8, ror #2
   11324:	andeq	r7, r2, ip, asr r1
   11328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1132c:	vpush	{d8-d14}
   11330:	ldr	r5, [pc, #1648]	; 119a8 <strspn@plt+0x9c4>
   11334:	mov	r6, r1
   11338:	mov	r7, r0
   1133c:	ldm	r5, {r0, r1, r2, r3}
   11340:	sub	sp, sp, #84	; 0x54
   11344:	add	ip, sp, #48	; 0x30
   11348:	ldr	fp, [pc, #1628]	; 119ac <strspn@plt+0x9c8>
   1134c:	stm	ip, {r0, r1, r2, r3}
   11350:	add	r5, r5, #16
   11354:	ldr	r0, [r6]
   11358:	bl	12880 <strspn@plt+0x189c>
   1135c:	ldr	r1, [pc, #1612]	; 119b0 <strspn@plt+0x9cc>
   11360:	mov	r0, #6
   11364:	bl	10f84 <setlocale@plt>
   11368:	ldr	r1, [pc, #1604]	; 119b4 <strspn@plt+0x9d0>
   1136c:	ldr	sl, [pc, #1604]	; 119b8 <strspn@plt+0x9d4>
   11370:	ldr	r9, [pc, #1604]	; 119bc <strspn@plt+0x9d8>
   11374:	adds	r3, r0, #0
   11378:	movne	r3, #1
   1137c:	ldr	r0, [pc, #1596]	; 119c0 <strspn@plt+0x9dc>
   11380:	strb	r3, [fp, #32]
   11384:	bl	10fc0 <bindtextdomain@plt>
   11388:	ldr	r0, [pc, #1584]	; 119c0 <strspn@plt+0x9dc>
   1138c:	bl	10e28 <textdomain@plt>
   11390:	ldr	r0, [pc, #1580]	; 119c4 <strspn@plt+0x9e0>
   11394:	bl	15d2c <strspn@plt+0x4d48>
   11398:	mov	r3, #0
   1139c:	ldr	r2, [pc, #1572]	; 119c8 <strspn@plt+0x9e4>
   113a0:	mov	r4, r3
   113a4:	mov	r8, r3
   113a8:	str	r2, [fp]
   113ac:	strb	r3, [fp, #33]	; 0x21
   113b0:	ldr	r3, [sl]
   113b4:	cmp	r3, r7
   113b8:	bge	114d0 <strspn@plt+0x4ec>
   113bc:	ldr	r3, [r6, r3, lsl #2]
   113c0:	ldrb	r2, [r3]
   113c4:	cmp	r2, #45	; 0x2d
   113c8:	bne	113e4 <strspn@plt+0x400>
   113cc:	ldrb	r3, [r3, #1]
   113d0:	cmp	r3, #46	; 0x2e
   113d4:	beq	114d0 <strspn@plt+0x4ec>
   113d8:	sub	r3, r3, #48	; 0x30
   113dc:	cmp	r3, #9
   113e0:	bls	114d0 <strspn@plt+0x4ec>
   113e4:	str	r8, [sp]
   113e8:	mov	r3, r5
   113ec:	mov	r2, r9
   113f0:	mov	r1, r6
   113f4:	mov	r0, r7
   113f8:	bl	10edc <getopt_long@plt>
   113fc:	cmn	r0, #1
   11400:	beq	114d0 <strspn@plt+0x4ec>
   11404:	cmp	r0, #102	; 0x66
   11408:	beq	114c4 <strspn@plt+0x4e0>
   1140c:	bgt	11428 <strspn@plt+0x444>
   11410:	cmn	r0, #3
   11414:	beq	11454 <strspn@plt+0x470>
   11418:	cmn	r0, #2
   1141c:	bne	114bc <strspn@plt+0x4d8>
   11420:	mov	r0, #0
   11424:	bl	12048 <strspn@plt+0x1064>
   11428:	cmp	r0, #115	; 0x73
   1142c:	beq	11444 <strspn@plt+0x460>
   11430:	cmp	r0, #119	; 0x77
   11434:	bne	114bc <strspn@plt+0x4d8>
   11438:	mov	r3, #1
   1143c:	strb	r3, [fp, #33]	; 0x21
   11440:	b	113b0 <strspn@plt+0x3cc>
   11444:	ldr	r3, [pc, #1408]	; 119cc <strspn@plt+0x9e8>
   11448:	ldr	r3, [r3]
   1144c:	str	r3, [fp]
   11450:	b	113b0 <strspn@plt+0x3cc>
   11454:	ldr	r1, [pc, #1396]	; 119d0 <strspn@plt+0x9ec>
   11458:	ldr	r3, [pc, #1396]	; 119d4 <strspn@plt+0x9f0>
   1145c:	ldr	r2, [pc, #1396]	; 119d8 <strspn@plt+0x9f4>
   11460:	str	r8, [sp, #4]
   11464:	ldr	r0, [r1]
   11468:	ldr	r3, [r3]
   1146c:	ldr	r1, [pc, #1384]	; 119dc <strspn@plt+0x9f8>
   11470:	str	r2, [sp]
   11474:	ldr	r2, [pc, #1380]	; 119e0 <strspn@plt+0x9fc>
   11478:	bl	14b7c <strspn@plt+0x3b98>
   1147c:	mov	r0, #0
   11480:	bl	10ef4 <exit@plt>
   11484:	mov	r2, #5
   11488:	ldr	r1, [pc, #1364]	; 119e4 <strspn@plt+0xa00>
   1148c:	mov	r0, #0
   11490:	bl	10e10 <dcgettext@plt>
   11494:	ldr	r3, [sl]
   11498:	add	r3, r3, #3
   1149c:	mov	r4, r0
   114a0:	ldr	r0, [r6, r3, lsl #2]
   114a4:	bl	14740 <strspn@plt+0x375c>
   114a8:	mov	r1, #0
   114ac:	mov	r2, r4
   114b0:	mov	r3, r0
   114b4:	mov	r0, r1
   114b8:	bl	10e88 <error@plt>
   114bc:	mov	r0, #1
   114c0:	bl	12048 <strspn@plt+0x1064>
   114c4:	ldr	r3, [pc, #1280]	; 119cc <strspn@plt+0x9e8>
   114c8:	ldr	r4, [r3]
   114cc:	b	113b0 <strspn@plt+0x3cc>
   114d0:	ldr	r3, [sl]
   114d4:	subs	r3, r7, r3
   114d8:	str	r3, [sp, #8]
   114dc:	beq	11908 <strspn@plt+0x924>
   114e0:	ldr	r3, [sp, #8]
   114e4:	cmp	r3, #3
   114e8:	bhi	11484 <strspn@plt+0x4a0>
   114ec:	cmp	r4, #0
   114f0:	beq	11548 <strspn@plt+0x564>
   114f4:	mov	r2, #1
   114f8:	mov	r1, r2
   114fc:	mov	r3, #0
   11500:	mov	lr, #2
   11504:	b	1151c <strspn@plt+0x538>
   11508:	cmp	r8, #0
   1150c:	beq	11d78 <strspn@plt+0xd94>
   11510:	mov	r0, r1
   11514:	add	r3, r3, r0
   11518:	add	r2, r2, #1
   1151c:	ldrb	r8, [r4, r3]
   11520:	sub	r5, r2, #1
   11524:	cmp	r8, #37	; 0x25
   11528:	bne	11508 <strspn@plt+0x524>
   1152c:	add	r8, r3, #1
   11530:	add	r0, r4, r8
   11534:	ldrb	ip, [r4, r8]
   11538:	cmp	ip, #37	; 0x25
   1153c:	bne	117d8 <strspn@plt+0x7f4>
   11540:	mov	r0, lr
   11544:	b	11514 <strspn@plt+0x530>
   11548:	mov	r5, r4
   1154c:	str	r4, [sp, #20]
   11550:	ldr	r3, [sp, #8]
   11554:	cmp	r3, #3
   11558:	beq	11a14 <strspn@plt+0xa30>
   1155c:	ldr	r9, [sl]
   11560:	ldr	r8, [r6, r9, lsl #2]
   11564:	mov	r0, r8
   11568:	bl	11fc0 <strspn@plt+0xfdc>
   1156c:	cmp	r0, #0
   11570:	beq	11594 <strspn@plt+0x5b0>
   11574:	ldr	r3, [sp, #8]
   11578:	cmp	r3, #1
   1157c:	beq	11a90 <strspn@plt+0xaac>
   11580:	add	r3, r9, #1
   11584:	ldr	r0, [r6, r3, lsl #2]
   11588:	bl	11fc0 <strspn@plt+0xfdc>
   1158c:	cmp	r0, #0
   11590:	bne	11a90 <strspn@plt+0xaac>
   11594:	ldr	r3, [sl]
   11598:	add	r0, sp, #64	; 0x40
   1159c:	add	r2, r3, #1
   115a0:	ldr	r1, [r6, r3, lsl #2]
   115a4:	str	r2, [sl]
   115a8:	bl	12388 <strspn@plt+0x13a4>
   115ac:	ldr	r3, [sl]
   115b0:	vldr	d12, [sp, #64]	; 0x40
   115b4:	cmp	r7, r3
   115b8:	ldr	r8, [sp, #72]	; 0x48
   115bc:	ldr	r9, [sp, #76]	; 0x4c
   115c0:	bgt	11930 <strspn@plt+0x94c>
   115c4:	ldr	r3, [sp, #60]	; 0x3c
   115c8:	orrs	r3, r9, r3
   115cc:	beq	11cc4 <strspn@plt+0xce0>
   115d0:	vmov.f64	d11, d12
   115d4:	vldr	d12, [pc, #956]	; 11998 <strspn@plt+0x9b4>
   115d8:	mov	r7, r8
   115dc:	mov	r3, r9
   115e0:	mov	r1, #0
   115e4:	mov	r8, #1
   115e8:	cmp	r4, #0
   115ec:	beq	11c2c <strspn@plt+0xc48>
   115f0:	vldr	d10, [sp, #48]	; 0x30
   115f4:	vcmpe.f64	d10, #0.0
   115f8:	vmrs	APSR_nzcv, fpscr
   115fc:	vcmpe.f64	d12, d11
   11600:	bmi	11b18 <strspn@plt+0xb34>
   11604:	vmrs	APSR_nzcv, fpscr
   11608:	movgt	r9, #1
   1160c:	movle	r9, #0
   11610:	cmp	r9, #0
   11614:	bne	117d0 <strspn@plt+0x7ec>
   11618:	vldr	d9, [pc, #888]	; 11998 <strspn@plt+0x9b4>
   1161c:	str	r5, [sp, #8]
   11620:	vmov	r6, r7, d12
   11624:	vldr	d13, [pc, #884]	; 119a0 <strspn@plt+0x9bc>
   11628:	ldr	sl, [pc, #928]	; 119d0 <strspn@plt+0x9ec>
   1162c:	vmov.f64	d14, d9
   11630:	ldr	r5, [sp, #20]
   11634:	b	11730 <strspn@plt+0x74c>
   11638:	vmrs	APSR_nzcv, fpscr
   1163c:	movgt	r9, #1
   11640:	movle	r9, #0
   11644:	cmp	r9, #0
   11648:	beq	11714 <strspn@plt+0x730>
   1164c:	ldrb	r3, [fp, #32]
   11650:	cmp	r3, #0
   11654:	bne	1177c <strspn@plt+0x798>
   11658:	vstr	d8, [sp]
   1165c:	mov	r2, r4
   11660:	mov	r1, #1
   11664:	add	r0, sp, #32
   11668:	bl	10e94 <__asprintf_chk@plt>
   1166c:	mov	r8, r0
   11670:	cmp	r8, #0
   11674:	blt	11dc4 <strspn@plt+0xde0>
   11678:	ldr	r2, [sp, #32]
   1167c:	sub	r3, r8, r5
   11680:	mov	r8, #0
   11684:	strb	r8, [r2, r3]
   11688:	ldr	r0, [sp, #32]
   1168c:	ldr	r3, [sp, #8]
   11690:	mov	r1, r8
   11694:	add	r0, r0, r3
   11698:	add	r2, sp, #40	; 0x28
   1169c:	ldr	r3, [pc, #876]	; 11a10 <strspn@plt+0xa2c>
   116a0:	bl	15200 <strspn@plt+0x421c>
   116a4:	cmp	r0, r8
   116a8:	beq	117b0 <strspn@plt+0x7cc>
   116ac:	vldr	d7, [sp, #40]	; 0x28
   116b0:	vcmp.f64	d7, d11
   116b4:	vmrs	APSR_nzcv, fpscr
   116b8:	bne	117b0 <strspn@plt+0x7cc>
   116bc:	strd	r6, [sp]
   116c0:	mov	r2, r4
   116c4:	mov	r1, #1
   116c8:	add	r0, sp, #36	; 0x24
   116cc:	str	r8, [sp, #36]	; 0x24
   116d0:	bl	10e94 <__asprintf_chk@plt>
   116d4:	cmp	r0, #0
   116d8:	blt	11dc4 <strspn@plt+0xde0>
   116dc:	ldr	r3, [sp, #36]	; 0x24
   116e0:	sub	r0, r0, r5
   116e4:	strb	r8, [r3, r0]
   116e8:	ldr	r6, [sp, #36]	; 0x24
   116ec:	ldr	r1, [sp, #32]
   116f0:	mov	r0, r6
   116f4:	bl	10d74 <strcmp@plt>
   116f8:	mov	r7, r0
   116fc:	mov	r0, r6
   11700:	bl	12828 <strspn@plt+0x1844>
   11704:	ldr	r0, [sp, #32]
   11708:	bl	12828 <strspn@plt+0x1844>
   1170c:	cmp	r7, #0
   11710:	beq	117b8 <strspn@plt+0x7d4>
   11714:	ldr	r1, [sl]
   11718:	ldr	r0, [fp]
   1171c:	bl	10d50 <fputs_unlocked@plt>
   11720:	cmn	r0, #1
   11724:	beq	11dd8 <strspn@plt+0xdf4>
   11728:	vadd.f64	d9, d9, d14
   1172c:	vmov	r6, r7, d8
   11730:	mov	r2, r6
   11734:	mov	r3, r7
   11738:	mov	r1, r4
   1173c:	mov	r0, #1
   11740:	bl	10f48 <__printf_chk@plt>
   11744:	cmp	r0, #0
   11748:	blt	11dd8 <strspn@plt+0xdf4>
   1174c:	cmp	r9, #0
   11750:	bne	117b8 <strspn@plt+0x7d4>
   11754:	vmov.f64	d8, d12
   11758:	vcmpe.f64	d10, d13
   1175c:	vmla.f64	d8, d10, d9
   11760:	vmrs	APSR_nzcv, fpscr
   11764:	vcmpe.f64	d8, d11
   11768:	bpl	11638 <strspn@plt+0x654>
   1176c:	vmrs	APSR_nzcv, fpscr
   11770:	movmi	r9, #1
   11774:	movpl	r9, #0
   11778:	b	11644 <strspn@plt+0x660>
   1177c:	ldr	r1, [pc, #612]	; 119e8 <strspn@plt+0xa04>
   11780:	mov	r0, #1
   11784:	bl	10f84 <setlocale@plt>
   11788:	vstr	d8, [sp]
   1178c:	mov	r2, r4
   11790:	mov	r1, #1
   11794:	add	r0, sp, #32
   11798:	bl	10e94 <__asprintf_chk@plt>
   1179c:	ldr	r1, [pc, #524]	; 119b0 <strspn@plt+0x9cc>
   117a0:	mov	r8, r0
   117a4:	mov	r0, #1
   117a8:	bl	10f84 <setlocale@plt>
   117ac:	b	11670 <strspn@plt+0x68c>
   117b0:	ldr	r0, [sp, #32]
   117b4:	bl	12828 <strspn@plt+0x1844>
   117b8:	ldr	r3, [pc, #528]	; 119d0 <strspn@plt+0x9ec>
   117bc:	ldr	r0, [pc, #552]	; 119ec <strspn@plt+0xa08>
   117c0:	ldr	r1, [r3]
   117c4:	bl	10d50 <fputs_unlocked@plt>
   117c8:	cmn	r0, #1
   117cc:	beq	11dd8 <strspn@plt+0xdf4>
   117d0:	mov	r0, #0
   117d4:	bl	10ef4 <exit@plt>
   117d8:	ldr	r1, [pc, #528]	; 119f0 <strspn@plt+0xa0c>
   117dc:	bl	10fe4 <strspn@plt>
   117e0:	ldr	r1, [pc, #548]	; 11a0c <strspn@plt+0xa28>
   117e4:	add	r8, r8, r0
   117e8:	add	r0, r4, r8
   117ec:	bl	10fe4 <strspn@plt>
   117f0:	add	r3, r8, r0
   117f4:	str	r3, [sp, #12]
   117f8:	ldrb	r3, [r4, r3]
   117fc:	cmp	r3, #46	; 0x2e
   11800:	beq	11af8 <strspn@plt+0xb14>
   11804:	ldr	r3, [sp, #12]
   11808:	mov	r9, r3
   1180c:	ldrb	r0, [r4, r3]
   11810:	cmp	r0, #76	; 0x4c
   11814:	addeq	r9, r9, #1
   11818:	add	r3, r4, r9
   1181c:	ldrb	r8, [r4, r9]
   11820:	str	r3, [sp, #16]
   11824:	cmp	r8, #0
   11828:	moveq	r2, #5
   1182c:	ldreq	r1, [pc, #448]	; 119f4 <strspn@plt+0xa10>
   11830:	beq	11d80 <strspn@plt+0xd9c>
   11834:	mov	r1, r8
   11838:	ldr	r0, [pc, #440]	; 119f8 <strspn@plt+0xa14>
   1183c:	bl	10f0c <strchr@plt>
   11840:	subs	r8, r0, #0
   11844:	movne	r3, #1
   11848:	addne	r0, r9, r3
   1184c:	movne	r1, r3
   11850:	movne	ip, #2
   11854:	bne	11870 <strspn@plt+0x88c>
   11858:	b	11ddc <strspn@plt+0xdf8>
   1185c:	cmp	r9, #0
   11860:	beq	11898 <strspn@plt+0x8b4>
   11864:	mov	r2, r1
   11868:	add	r0, r0, r2
   1186c:	add	r3, r3, #1
   11870:	ldrb	r9, [r4, r0]
   11874:	sub	r2, r3, #1
   11878:	cmp	r9, #37	; 0x25
   1187c:	bne	1185c <strspn@plt+0x878>
   11880:	add	r2, r4, r0
   11884:	ldrb	r2, [r2, #1]
   11888:	cmp	r2, #37	; 0x25
   1188c:	bne	11e14 <strspn@plt+0xe30>
   11890:	mov	r2, ip
   11894:	b	11868 <strspn@plt+0x884>
   11898:	add	r0, r0, #2
   1189c:	str	r2, [sp, #20]
   118a0:	bl	14c78 <strspn@plt+0x3c94>
   118a4:	mov	r1, r4
   118a8:	ldr	r2, [sp, #12]
   118ac:	mov	r8, r0
   118b0:	bl	10dc8 <memcpy@plt>
   118b4:	ldr	r2, [sp, #12]
   118b8:	mov	r3, #76	; 0x4c
   118bc:	add	r0, r2, #1
   118c0:	strb	r3, [r8, r2]
   118c4:	ldr	r1, [sp, #16]
   118c8:	add	r0, r8, r0
   118cc:	bl	10e64 <strcpy@plt>
   118d0:	ldrb	r3, [fp, #33]	; 0x21
   118d4:	cmp	r3, #0
   118d8:	moveq	r4, r8
   118dc:	beq	11550 <strspn@plt+0x56c>
   118e0:	mov	r2, #5
   118e4:	ldr	r1, [pc, #272]	; 119fc <strspn@plt+0xa18>
   118e8:	mov	r0, r9
   118ec:	bl	10e10 <dcgettext@plt>
   118f0:	mov	r1, r9
   118f4:	mov	r2, r0
   118f8:	mov	r0, r9
   118fc:	bl	10e88 <error@plt>
   11900:	mov	r0, #1
   11904:	bl	12048 <strspn@plt+0x1064>
   11908:	ldr	r4, [sp, #8]
   1190c:	mov	r2, #5
   11910:	ldr	r1, [pc, #232]	; 11a00 <strspn@plt+0xa1c>
   11914:	mov	r0, r4
   11918:	bl	10e10 <dcgettext@plt>
   1191c:	mov	r1, r4
   11920:	mov	r2, r0
   11924:	mov	r0, r4
   11928:	bl	10e88 <error@plt>
   1192c:	b	114bc <strspn@plt+0x4d8>
   11930:	add	r2, r3, #1
   11934:	ldr	r1, [r6, r3, lsl #2]
   11938:	add	r0, sp, #64	; 0x40
   1193c:	str	r2, [sl]
   11940:	bl	12388 <strspn@plt+0x13a4>
   11944:	ldr	r2, [sl]
   11948:	vldr	d11, [sp, #64]	; 0x40
   1194c:	cmp	r7, r2
   11950:	ldr	r3, [sp, #76]	; 0x4c
   11954:	ldr	r7, [sp, #72]	; 0x48
   11958:	ble	11b48 <strspn@plt+0xb64>
   1195c:	vcmp.f64	d11, #0.0
   11960:	vstr	d11, [sp, #48]	; 0x30
   11964:	str	r7, [sp, #56]	; 0x38
   11968:	str	r3, [sp, #60]	; 0x3c
   1196c:	vmrs	APSR_nzcv, fpscr
   11970:	bne	11b28 <strspn@plt+0xb44>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #132]	; 11a04 <strspn@plt+0xa20>
   1197c:	mov	r0, #0
   11980:	bl	10e10 <dcgettext@plt>
   11984:	ldr	r3, [sl]
   11988:	sub	r3, r3, #-1073741823	; 0xc0000001
   1198c:	mov	r4, r0
   11990:	b	114a0 <strspn@plt+0x4bc>
   11994:	nop			; (mov r0, r0)
   11998:	andeq	r0, r0, r0
   1199c:	svccc	0x00f00000	; IMB
	...
   119a8:	muleq	r1, r0, sp
   119ac:	andeq	r7, r2, r8, ror #2
   119b0:	andeq	r6, r1, r8, ror r2
   119b4:	muleq	r1, r4, r4
   119b8:	andeq	r7, r2, r0, asr r1
   119bc:	andeq	r6, r1, ip, lsr #9
   119c0:	muleq	r1, r0, r3
   119c4:	andeq	r2, r1, r4, asr #14
   119c8:	andeq	r5, r1, ip, ror #29
   119cc:	andeq	r7, r2, r0, ror #2
   119d0:	andeq	r7, r2, ip, asr r1
   119d4:	strdeq	r7, [r2], -ip
   119d8:			; <UNDEFINED> instruction: 0x000164b4
   119dc:	andeq	r5, r1, r0, lsr #28
   119e0:	andeq	r6, r1, ip, lsl #7
   119e4:	ldrdeq	r6, [r1], -r4
   119e8:	andeq	r6, r1, ip, lsl #12
   119ec:	andeq	r5, r1, r0, lsl #28
   119f0:	andeq	r6, r1, r8, lsl #10
   119f4:	andeq	r6, r1, r0, lsl r5
   119f8:	andeq	r6, r1, r8, lsr #10
   119fc:	andeq	r6, r1, r4, lsl #11
   11a00:	andeq	r6, r1, r4, asr #9
   11a04:	andeq	r6, r1, ip, asr #11
   11a08:	andeq	r6, r1, ip, lsl #9
   11a0c:	andeq	r5, r1, r4, lsl #28
   11a10:	andeq	r2, r1, r8, lsr #13
   11a14:	ldr	r3, [sl]
   11a18:	add	r3, r3, #1
   11a1c:	ldr	r8, [r6, r3, lsl #2]
   11a20:	mov	r0, r8
   11a24:	bl	11fc0 <strspn@plt+0xfdc>
   11a28:	cmp	r0, #0
   11a2c:	bne	11b58 <strspn@plt+0xb74>
   11a30:	mov	r3, #0
   11a34:	str	r3, [sp, #12]
   11a38:	ldr	r9, [sl]
   11a3c:	ldr	r8, [r6, r9, lsl #2]
   11a40:	mov	r0, r8
   11a44:	bl	11fc0 <strspn@plt+0xfdc>
   11a48:	cmp	r0, #0
   11a4c:	beq	11594 <strspn@plt+0x5b0>
   11a50:	add	r3, r9, #1
   11a54:	ldr	r0, [r6, r3, lsl #2]
   11a58:	lsl	r3, r3, #2
   11a5c:	str	r3, [sp, #16]
   11a60:	bl	11fc0 <strspn@plt+0xfdc>
   11a64:	cmp	r0, #0
   11a68:	beq	11594 <strspn@plt+0x5b0>
   11a6c:	ldr	r3, [sp, #12]
   11a70:	cmp	r3, #0
   11a74:	beq	11594 <strspn@plt+0x5b0>
   11a78:	ldr	r3, [sp, #16]
   11a7c:	add	r3, r6, r3
   11a80:	ldr	r0, [r3, #4]
   11a84:	bl	11fc0 <strspn@plt+0xfdc>
   11a88:	cmp	r0, #0
   11a8c:	beq	11594 <strspn@plt+0x5b0>
   11a90:	ldrb	r3, [fp, #33]	; 0x21
   11a94:	eor	r3, r3, #1
   11a98:	cmp	r4, #0
   11a9c:	movne	r3, #0
   11aa0:	andeq	r3, r3, #1
   11aa4:	cmp	r3, #0
   11aa8:	beq	11594 <strspn@plt+0x5b0>
   11aac:	ldr	r0, [fp]
   11ab0:	bl	10f00 <strlen@plt>
   11ab4:	cmp	r0, #1
   11ab8:	bne	11594 <strspn@plt+0x5b0>
   11abc:	ldr	r2, [sp, #8]
   11ac0:	ldr	r3, [pc, #-192]	; 11a08 <strspn@plt+0xa24>
   11ac4:	cmp	r2, #1
   11ac8:	ldrd	r0, [sp, #48]	; 0x30
   11acc:	moveq	r8, r3
   11ad0:	bl	15c80 <strspn@plt+0x4c9c>
   11ad4:	ldr	r2, [sp, #8]
   11ad8:	add	ip, r2, r9
   11adc:	sub	ip, ip, #-1073741823	; 0xc0000001
   11ae0:	mov	r2, r0
   11ae4:	mov	r3, r1
   11ae8:	mov	r0, r8
   11aec:	ldr	r1, [r6, ip, lsl #2]
   11af0:	bl	10ff0 <strspn@plt+0xc>
   11af4:	b	11594 <strspn@plt+0x5b0>
   11af8:	ldr	r3, [sp, #12]
   11afc:	ldr	r1, [pc, #-248]	; 11a0c <strspn@plt+0xa28>
   11b00:	add	r8, r3, #1
   11b04:	add	r0, r4, r8
   11b08:	bl	10fe4 <strspn@plt>
   11b0c:	add	r3, r8, r0
   11b10:	str	r3, [sp, #12]
   11b14:	b	11804 <strspn@plt+0x820>
   11b18:	vmrs	APSR_nzcv, fpscr
   11b1c:	movmi	r9, #1
   11b20:	movpl	r9, #0
   11b24:	b	11610 <strspn@plt+0x62c>
   11b28:	ldr	r1, [r6, r2, lsl #2]
   11b2c:	add	r0, sp, #64	; 0x40
   11b30:	add	r2, r2, #1
   11b34:	str	r2, [sl]
   11b38:	bl	12388 <strspn@plt+0x13a4>
   11b3c:	vldr	d11, [sp, #64]	; 0x40
   11b40:	ldr	r7, [sp, #72]	; 0x48
   11b44:	ldr	r3, [sp, #76]	; 0x4c
   11b48:	cmp	r9, #0
   11b4c:	beq	11e20 <strspn@plt+0xe3c>
   11b50:	mov	r1, r9
   11b54:	b	115e8 <strspn@plt+0x604>
   11b58:	add	r2, sp, #48	; 0x30
   11b5c:	mov	r0, r8
   11b60:	ldr	r3, [pc, #-344]	; 11a10 <strspn@plt+0xa2c>
   11b64:	mov	r1, #0
   11b68:	bl	15200 <strspn@plt+0x421c>
   11b6c:	cmp	r0, #0
   11b70:	beq	11a30 <strspn@plt+0xa4c>
   11b74:	vldr	d7, [sp, #48]	; 0x30
   11b78:	vcmpe.f64	d7, #0.0
   11b7c:	vmrs	APSR_nzcv, fpscr
   11b80:	ble	11a30 <strspn@plt+0xa4c>
   11b84:	vldr	d6, [pc, #716]	; 11e58 <strspn@plt+0xe74>
   11b88:	vcmpe.f64	d7, d6
   11b8c:	vmrs	APSR_nzcv, fpscr
   11b90:	movls	r3, #1
   11b94:	movhi	r3, #0
   11b98:	str	r3, [sp, #12]
   11b9c:	b	11a38 <strspn@plt+0xa54>
   11ba0:	mov	r1, r0
   11ba4:	vstr	d12, [sp]
   11ba8:	ldr	r2, [pc, #704]	; 11e70 <strspn@plt+0xe8c>
   11bac:	add	r0, sp, #24
   11bb0:	bl	10e94 <__asprintf_chk@plt>
   11bb4:	cmp	r0, #0
   11bb8:	blt	11dc4 <strspn@plt+0xde0>
   11bbc:	vmul.f64	d7, d11, d8
   11bc0:	vcmp.f64	d7, d8
   11bc4:	vmrs	APSR_nzcv, fpscr
   11bc8:	beq	11da8 <strspn@plt+0xdc4>
   11bcc:	ldr	r0, [pc, #672]	; 11e74 <strspn@plt+0xe90>
   11bd0:	bl	151a4 <strspn@plt+0x41c0>
   11bd4:	str	r0, [sp, #28]
   11bd8:	ldr	r4, [sp, #24]
   11bdc:	ldrb	r3, [r4]
   11be0:	cmp	r3, #45	; 0x2d
   11be4:	beq	11c14 <strspn@plt+0xc30>
   11be8:	ldr	r6, [sp, #28]
   11bec:	ldrb	r3, [r6]
   11bf0:	cmp	r3, #45	; 0x2d
   11bf4:	beq	11c14 <strspn@plt+0xc30>
   11bf8:	ldrd	r0, [sp, #48]	; 0x30
   11bfc:	bl	15c80 <strspn@plt+0x4c9c>
   11c00:	mov	r2, r0
   11c04:	mov	r3, r1
   11c08:	mov	r0, r4
   11c0c:	mov	r1, r6
   11c10:	bl	10ff0 <strspn@plt+0xc>
   11c14:	ldr	r0, [sp, #24]
   11c18:	bl	12828 <strspn@plt+0x1844>
   11c1c:	ldr	r0, [sp, #28]
   11c20:	bl	12828 <strspn@plt+0x1844>
   11c24:	mov	r3, #0
   11c28:	mov	r1, r3
   11c2c:	ldr	r2, [sp, #60]	; 0x3c
   11c30:	cmp	r1, r2
   11c34:	movge	r2, r1
   11c38:	cmn	r3, #-2147483647	; 0x80000001
   11c3c:	cmnne	r2, #-2147483647	; 0x80000001
   11c40:	beq	11d70 <strspn@plt+0xd8c>
   11c44:	ldrb	r0, [fp, #33]	; 0x21
   11c48:	cmp	r0, #0
   11c4c:	beq	11d40 <strspn@plt+0xd5c>
   11c50:	sub	r0, r2, r3
   11c54:	cmp	r3, #0
   11c58:	sub	r3, r2, r1
   11c5c:	add	r7, r0, r7
   11c60:	add	r8, r3, r8
   11c64:	beq	11dc8 <strspn@plt+0xde4>
   11c68:	cmp	r2, #0
   11c6c:	subeq	r7, r7, #1
   11c70:	beq	11c8c <strspn@plt+0xca8>
   11c74:	cmp	r2, #0
   11c78:	clz	r1, r1
   11c7c:	lsr	r1, r1, #5
   11c80:	moveq	r1, #0
   11c84:	cmp	r1, #0
   11c88:	addne	r8, r8, #1
   11c8c:	cmp	r8, r7
   11c90:	movcc	r8, r7
   11c94:	cmp	r8, #0
   11c98:	blt	11d70 <strspn@plt+0xd8c>
   11c9c:	str	r2, [sp, #4]
   11ca0:	str	r8, [sp]
   11ca4:	ldr	r3, [pc, #460]	; 11e78 <strspn@plt+0xe94>
   11ca8:	mov	r2, #28
   11cac:	mov	r1, #1
   11cb0:	ldr	r0, [pc, #452]	; 11e7c <strspn@plt+0xe98>
   11cb4:	bl	10f24 <__sprintf_chk@plt>
   11cb8:	ldr	r4, [pc, #444]	; 11e7c <strspn@plt+0xe98>
   11cbc:	vldr	d10, [sp, #48]	; 0x30
   11cc0:	b	115f4 <strspn@plt+0x610>
   11cc4:	vmov.f64	d11, d12
   11cc8:	vldr	d12, [pc, #400]	; 11e60 <strspn@plt+0xe7c>
   11ccc:	mov	r7, r8
   11cd0:	mov	r8, #1
   11cd4:	vldr	d8, [pc, #396]	; 11e68 <strspn@plt+0xe84>
   11cd8:	vcmpe.f64	d11, d8
   11cdc:	vmrs	APSR_nzcv, fpscr
   11ce0:	blt	11d64 <strspn@plt+0xd80>
   11ce4:	vldr	d10, [sp, #48]	; 0x30
   11ce8:	vcmpe.f64	d10, d8
   11cec:	vmrs	APSR_nzcv, fpscr
   11cf0:	ble	11d64 <strspn@plt+0xd80>
   11cf4:	vldr	d7, [pc, #348]	; 11e58 <strspn@plt+0xe74>
   11cf8:	vcmpe.f64	d10, d7
   11cfc:	vmrs	APSR_nzcv, fpscr
   11d00:	bhi	11d64 <strspn@plt+0xd80>
   11d04:	ldrb	r3, [fp, #33]	; 0x21
   11d08:	cmp	r3, #0
   11d0c:	bne	11d64 <strspn@plt+0xd80>
   11d10:	cmp	r4, #0
   11d14:	bne	115f4 <strspn@plt+0x610>
   11d18:	ldr	r0, [fp]
   11d1c:	bl	10f00 <strlen@plt>
   11d20:	cmp	r0, #1
   11d24:	mov	r4, r0
   11d28:	beq	11ba0 <strspn@plt+0xbbc>
   11d2c:	ldr	r2, [sp, #60]	; 0x3c
   11d30:	bic	r2, r2, r2, asr #31
   11d34:	cmn	r2, #-2147483647	; 0x80000001
   11d38:	ldreq	r4, [pc, #320]	; 11e80 <strspn@plt+0xe9c>
   11d3c:	beq	115f4 <strspn@plt+0x610>
   11d40:	str	r2, [sp]
   11d44:	ldr	r3, [pc, #312]	; 11e84 <strspn@plt+0xea0>
   11d48:	mov	r2, #28
   11d4c:	mov	r1, #1
   11d50:	ldr	r0, [pc, #292]	; 11e7c <strspn@plt+0xe98>
   11d54:	bl	10f24 <__sprintf_chk@plt>
   11d58:	ldr	r4, [pc, #284]	; 11e7c <strspn@plt+0xe98>
   11d5c:	vldr	d10, [sp, #48]	; 0x30
   11d60:	b	115f4 <strspn@plt+0x610>
   11d64:	mov	r3, #0
   11d68:	mov	r1, r3
   11d6c:	b	115e8 <strspn@plt+0x604>
   11d70:	ldr	r4, [pc, #264]	; 11e80 <strspn@plt+0xe9c>
   11d74:	b	115f0 <strspn@plt+0x60c>
   11d78:	ldr	r1, [pc, #264]	; 11e88 <strspn@plt+0xea4>
   11d7c:	mov	r2, #5
   11d80:	mov	r0, #0
   11d84:	bl	10e10 <dcgettext@plt>
   11d88:	mov	r5, r0
   11d8c:	mov	r0, r4
   11d90:	bl	14740 <strspn@plt+0x375c>
   11d94:	mov	r2, r5
   11d98:	mov	r1, #0
   11d9c:	mov	r3, r0
   11da0:	mov	r0, #1
   11da4:	bl	10e88 <error@plt>
   11da8:	vstr	d11, [sp]
   11dac:	mov	r1, r4
   11db0:	ldr	r2, [pc, #184]	; 11e70 <strspn@plt+0xe8c>
   11db4:	add	r0, sp, #28
   11db8:	bl	10e94 <__asprintf_chk@plt>
   11dbc:	cmp	r0, #0
   11dc0:	bge	11bd8 <strspn@plt+0xbf4>
   11dc4:	bl	151c0 <strspn@plt+0x41dc>
   11dc8:	cmp	r2, #0
   11dcc:	beq	11c8c <strspn@plt+0xca8>
   11dd0:	add	r7, r7, #1
   11dd4:	b	11c74 <strspn@plt+0xc90>
   11dd8:	bl	12008 <strspn@plt+0x1024>
   11ddc:	mov	r2, #5
   11de0:	ldr	r1, [pc, #164]	; 11e8c <strspn@plt+0xea8>
   11de4:	bl	10e10 <dcgettext@plt>
   11de8:	mov	r5, r0
   11dec:	mov	r0, r4
   11df0:	bl	14740 <strspn@plt+0x375c>
   11df4:	ldr	r3, [sp, #16]
   11df8:	mov	r2, r5
   11dfc:	mov	r1, r8
   11e00:	ldrb	r3, [r3]
   11e04:	str	r3, [sp]
   11e08:	mov	r3, r0
   11e0c:	mov	r0, #1
   11e10:	bl	10e88 <error@plt>
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #112]	; 11e90 <strspn@plt+0xeac>
   11e1c:	b	11d80 <strspn@plt+0xd9c>
   11e20:	ldr	r1, [sp, #60]	; 0x3c
   11e24:	orrs	r1, r3, r1
   11e28:	bne	11b50 <strspn@plt+0xb6c>
   11e2c:	vldr	d7, [pc, #52]	; 11e68 <strspn@plt+0xe84>
   11e30:	vmul.f64	d6, d12, d7
   11e34:	vcmp.f64	d6, d7
   11e38:	vmrs	APSR_nzcv, fpscr
   11e3c:	beq	11e48 <strspn@plt+0xe64>
   11e40:	mov	r3, r9
   11e44:	b	115e8 <strspn@plt+0x604>
   11e48:	vcmpe.f64	d12, d7
   11e4c:	vmrs	APSR_nzcv, fpscr
   11e50:	blt	11e40 <strspn@plt+0xe5c>
   11e54:	b	11cd4 <strspn@plt+0xcf0>
   11e58:	andeq	r0, r0, r0
   11e5c:	rsbmi	r0, r9, r0
   11e60:	andeq	r0, r0, r0
   11e64:	svccc	0x00f00000	; IMB
	...
   11e70:	strdeq	r6, [r1], -r0
   11e74:	andeq	r5, r1, ip, lsl lr
   11e78:	strdeq	r6, [r1], -r8
   11e7c:	andeq	r7, r2, ip, ror #2
   11e80:	muleq	r1, r0, r4
   11e84:	andeq	r6, r1, r4, lsl #12
   11e88:	andeq	r6, r1, r8, ror #9
   11e8c:	andeq	r6, r1, r4, lsr r5
   11e90:	andeq	r6, r1, ip, asr r5
   11e94:	mov	fp, #0
   11e98:	mov	lr, #0
   11e9c:	pop	{r1}		; (ldr r1, [sp], #4)
   11ea0:	mov	r2, sp
   11ea4:	push	{r2}		; (str r2, [sp, #-4]!)
   11ea8:	push	{r0}		; (str r0, [sp, #-4]!)
   11eac:	ldr	ip, [pc, #16]	; 11ec4 <strspn@plt+0xee0>
   11eb0:	push	{ip}		; (str ip, [sp, #-4]!)
   11eb4:	ldr	r0, [pc, #12]	; 11ec8 <strspn@plt+0xee4>
   11eb8:	ldr	r3, [pc, #12]	; 11ecc <strspn@plt+0xee8>
   11ebc:	bl	10eac <__libc_start_main@plt>
   11ec0:	bl	10fd8 <abort@plt>
   11ec4:	andeq	r5, r1, r8, lsr #26
   11ec8:	andeq	r1, r1, r8, lsr #6
   11ecc:	andeq	r5, r1, r8, asr #25
   11ed0:	ldr	r3, [pc, #20]	; 11eec <strspn@plt+0xf08>
   11ed4:	ldr	r2, [pc, #20]	; 11ef0 <strspn@plt+0xf0c>
   11ed8:	add	r3, pc, r3
   11edc:	ldr	r2, [r3, r2]
   11ee0:	cmp	r2, #0
   11ee4:	bxeq	lr
   11ee8:	b	10ec4 <__gmon_start__@plt>
   11eec:	andeq	r5, r1, r0, lsr #2
   11ef0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11ef4:	ldr	r3, [pc, #28]	; 11f18 <strspn@plt+0xf34>
   11ef8:	ldr	r0, [pc, #28]	; 11f1c <strspn@plt+0xf38>
   11efc:	sub	r3, r3, r0
   11f00:	cmp	r3, #6
   11f04:	bxls	lr
   11f08:	ldr	r3, [pc, #16]	; 11f20 <strspn@plt+0xf3c>
   11f0c:	cmp	r3, #0
   11f10:	bxeq	lr
   11f14:	bx	r3
   11f18:	andeq	r7, r2, r7, asr #2
   11f1c:	andeq	r7, r2, r4, asr #2
   11f20:	andeq	r0, r0, r0
   11f24:	ldr	r1, [pc, #36]	; 11f50 <strspn@plt+0xf6c>
   11f28:	ldr	r0, [pc, #36]	; 11f54 <strspn@plt+0xf70>
   11f2c:	sub	r1, r1, r0
   11f30:	asr	r1, r1, #2
   11f34:	add	r1, r1, r1, lsr #31
   11f38:	asrs	r1, r1, #1
   11f3c:	bxeq	lr
   11f40:	ldr	r3, [pc, #16]	; 11f58 <strspn@plt+0xf74>
   11f44:	cmp	r3, #0
   11f48:	bxeq	lr
   11f4c:	bx	r3
   11f50:	andeq	r7, r2, r4, asr #2
   11f54:	andeq	r7, r2, r4, asr #2
   11f58:	andeq	r0, r0, r0
   11f5c:	push	{r4, lr}
   11f60:	ldr	r4, [pc, #24]	; 11f80 <strspn@plt+0xf9c>
   11f64:	ldrb	r3, [r4]
   11f68:	cmp	r3, #0
   11f6c:	popne	{r4, pc}
   11f70:	bl	11ef4 <strspn@plt+0xf10>
   11f74:	mov	r3, #1
   11f78:	strb	r3, [r4]
   11f7c:	pop	{r4, pc}
   11f80:	andeq	r7, r2, r4, ror #2
   11f84:	ldr	r0, [pc, #40]	; 11fb4 <strspn@plt+0xfd0>
   11f88:	ldr	r3, [r0]
   11f8c:	cmp	r3, #0
   11f90:	bne	11f98 <strspn@plt+0xfb4>
   11f94:	b	11f24 <strspn@plt+0xf40>
   11f98:	ldr	r3, [pc, #24]	; 11fb8 <strspn@plt+0xfd4>
   11f9c:	cmp	r3, #0
   11fa0:	beq	11f94 <strspn@plt+0xfb0>
   11fa4:	push	{r4, lr}
   11fa8:	blx	r3
   11fac:	pop	{r4, lr}
   11fb0:	b	11f24 <strspn@plt+0xf40>
   11fb4:	andeq	r6, r2, r4, lsl pc
	...
   11fc0:	push	{r4, r5, r6, lr}
   11fc4:	mov	r5, r0
   11fc8:	bl	10f00 <strlen@plt>
   11fcc:	ldrb	r3, [r5]
   11fd0:	sub	r3, r3, #48	; 0x30
   11fd4:	cmp	r3, #9
   11fd8:	bhi	11ffc <strspn@plt+0x1018>
   11fdc:	mov	r4, r0
   11fe0:	ldr	r1, [pc, #28]	; 12004 <strspn@plt+0x1020>
   11fe4:	mov	r0, r5
   11fe8:	bl	10fe4 <strspn@plt>
   11fec:	sub	r0, r4, r0
   11ff0:	clz	r0, r0
   11ff4:	lsr	r0, r0, #5
   11ff8:	pop	{r4, r5, r6, pc}
   11ffc:	mov	r0, #0
   12000:	pop	{r4, r5, r6, pc}
   12004:	andeq	r5, r1, r4, lsl #28
   12008:	ldr	r3, [pc, #48]	; 12040 <strspn@plt+0x105c>
   1200c:	push	{r4, lr}
   12010:	ldr	r0, [r3]
   12014:	bl	10fb4 <clearerr_unlocked@plt>
   12018:	bl	10f18 <__errno_location@plt>
   1201c:	mov	r2, #5
   12020:	ldr	r1, [pc, #28]	; 12044 <strspn@plt+0x1060>
   12024:	ldr	r4, [r0]
   12028:	mov	r0, #0
   1202c:	bl	10e10 <dcgettext@plt>
   12030:	mov	r1, r4
   12034:	mov	r2, r0
   12038:	mov	r0, #1
   1203c:	bl	10e88 <error@plt>
   12040:	andeq	r7, r2, ip, asr r1
   12044:	andeq	r5, r1, r0, lsl lr
   12048:	subs	r6, r0, #0
   1204c:	push	{r7, lr}
   12050:	sub	sp, sp, #64	; 0x40
   12054:	beq	12090 <strspn@plt+0x10ac>
   12058:	ldr	r3, [pc, #716]	; 1232c <strspn@plt+0x1348>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #712]	; 12330 <strspn@plt+0x134c>
   12064:	mov	r0, #0
   12068:	ldr	r4, [r3]
   1206c:	bl	10e10 <dcgettext@plt>
   12070:	ldr	r3, [pc, #700]	; 12334 <strspn@plt+0x1350>
   12074:	mov	r1, #1
   12078:	ldr	r3, [r3]
   1207c:	mov	r2, r0
   12080:	mov	r0, r4
   12084:	bl	10f60 <__fprintf_chk@plt>
   12088:	mov	r0, r6
   1208c:	bl	10ef4 <exit@plt>
   12090:	mov	r2, #5
   12094:	ldr	r1, [pc, #668]	; 12338 <strspn@plt+0x1354>
   12098:	bl	10e10 <dcgettext@plt>
   1209c:	ldr	r3, [pc, #656]	; 12334 <strspn@plt+0x1350>
   120a0:	ldr	r7, [pc, #660]	; 1233c <strspn@plt+0x1358>
   120a4:	ldr	r4, [pc, #660]	; 12340 <strspn@plt+0x135c>
   120a8:	ldr	r3, [r3]
   120ac:	mov	r2, r3
   120b0:	str	r3, [sp]
   120b4:	mov	r1, r0
   120b8:	mov	r0, #1
   120bc:	bl	10f48 <__printf_chk@plt>
   120c0:	mov	r2, #5
   120c4:	ldr	r1, [pc, #632]	; 12344 <strspn@plt+0x1360>
   120c8:	mov	r0, r6
   120cc:	bl	10e10 <dcgettext@plt>
   120d0:	ldr	r1, [r7]
   120d4:	bl	10d50 <fputs_unlocked@plt>
   120d8:	mov	r2, #5
   120dc:	ldr	r1, [pc, #612]	; 12348 <strspn@plt+0x1364>
   120e0:	mov	r0, r6
   120e4:	bl	10e10 <dcgettext@plt>
   120e8:	ldr	r1, [r7]
   120ec:	bl	10d50 <fputs_unlocked@plt>
   120f0:	mov	r2, #5
   120f4:	ldr	r1, [pc, #592]	; 1234c <strspn@plt+0x1368>
   120f8:	mov	r0, r6
   120fc:	bl	10e10 <dcgettext@plt>
   12100:	ldr	r1, [r7]
   12104:	bl	10d50 <fputs_unlocked@plt>
   12108:	mov	r2, #5
   1210c:	ldr	r1, [pc, #572]	; 12350 <strspn@plt+0x136c>
   12110:	mov	r0, r6
   12114:	bl	10e10 <dcgettext@plt>
   12118:	ldr	r1, [r7]
   1211c:	bl	10d50 <fputs_unlocked@plt>
   12120:	mov	r2, #5
   12124:	ldr	r1, [pc, #552]	; 12354 <strspn@plt+0x1370>
   12128:	mov	r0, r6
   1212c:	bl	10e10 <dcgettext@plt>
   12130:	ldr	r1, [r7]
   12134:	bl	10d50 <fputs_unlocked@plt>
   12138:	mov	r2, #5
   1213c:	ldr	r1, [pc, #532]	; 12358 <strspn@plt+0x1374>
   12140:	mov	r0, r6
   12144:	bl	10e10 <dcgettext@plt>
   12148:	ldr	r1, [r7]
   1214c:	bl	10d50 <fputs_unlocked@plt>
   12150:	mov	r2, #5
   12154:	ldr	r1, [pc, #512]	; 1235c <strspn@plt+0x1378>
   12158:	mov	r0, r6
   1215c:	bl	10e10 <dcgettext@plt>
   12160:	ldr	r1, [r7]
   12164:	bl	10d50 <fputs_unlocked@plt>
   12168:	ldm	r4!, {r0, r1, r2, r3}
   1216c:	add	lr, sp, #8
   12170:	stmia	lr!, {r0, r1, r2, r3}
   12174:	ldm	r4!, {r0, r1, r2, r3}
   12178:	ldr	ip, [sp, #8]
   1217c:	stmia	lr!, {r0, r1, r2, r3}
   12180:	cmp	ip, #0
   12184:	ldm	r4!, {r0, r1, r2, r3}
   12188:	stmia	lr!, {r0, r1, r2, r3}
   1218c:	ldm	r4, {r0, r1}
   12190:	addeq	r4, sp, #8
   12194:	stm	lr, {r0, r1}
   12198:	beq	121c8 <strspn@plt+0x11e4>
   1219c:	ldr	r5, [pc, #444]	; 12360 <strspn@plt+0x137c>
   121a0:	add	r4, sp, #8
   121a4:	b	121b4 <strspn@plt+0x11d0>
   121a8:	ldr	ip, [r4, #8]!
   121ac:	cmp	ip, #0
   121b0:	beq	121c8 <strspn@plt+0x11e4>
   121b4:	mov	r1, ip
   121b8:	mov	r0, r5
   121bc:	bl	10d74 <strcmp@plt>
   121c0:	cmp	r0, #0
   121c4:	bne	121a8 <strspn@plt+0x11c4>
   121c8:	ldr	r4, [r4, #4]
   121cc:	mov	r2, #5
   121d0:	cmp	r4, #0
   121d4:	ldr	r1, [pc, #392]	; 12364 <strspn@plt+0x1380>
   121d8:	beq	12280 <strspn@plt+0x129c>
   121dc:	mov	r0, #0
   121e0:	bl	10e10 <dcgettext@plt>
   121e4:	ldr	r3, [pc, #380]	; 12368 <strspn@plt+0x1384>
   121e8:	ldr	r2, [pc, #380]	; 1236c <strspn@plt+0x1388>
   121ec:	mov	r1, r0
   121f0:	mov	r0, #1
   121f4:	bl	10f48 <__printf_chk@plt>
   121f8:	mov	r1, #0
   121fc:	mov	r0, #5
   12200:	bl	10f84 <setlocale@plt>
   12204:	cmp	r0, #0
   12208:	ldreq	r5, [pc, #336]	; 12360 <strspn@plt+0x137c>
   1220c:	beq	12228 <strspn@plt+0x1244>
   12210:	mov	r2, #3
   12214:	ldr	r1, [pc, #340]	; 12370 <strspn@plt+0x138c>
   12218:	bl	10fcc <strncmp@plt>
   1221c:	ldr	r5, [pc, #316]	; 12360 <strspn@plt+0x137c>
   12220:	cmp	r0, #0
   12224:	bne	12310 <strspn@plt+0x132c>
   12228:	mov	r2, #5
   1222c:	ldr	r1, [pc, #320]	; 12374 <strspn@plt+0x1390>
   12230:	mov	r0, #0
   12234:	bl	10e10 <dcgettext@plt>
   12238:	ldr	r3, [pc, #288]	; 12360 <strspn@plt+0x137c>
   1223c:	ldr	r2, [pc, #292]	; 12368 <strspn@plt+0x1384>
   12240:	mov	r1, r0
   12244:	mov	r0, #1
   12248:	bl	10f48 <__printf_chk@plt>
   1224c:	mov	r2, #5
   12250:	ldr	r1, [pc, #288]	; 12378 <strspn@plt+0x1394>
   12254:	mov	r0, #0
   12258:	bl	10e10 <dcgettext@plt>
   1225c:	ldr	r2, [pc, #280]	; 1237c <strspn@plt+0x1398>
   12260:	cmp	r4, r5
   12264:	ldr	r3, [pc, #276]	; 12380 <strspn@plt+0x139c>
   12268:	movne	r3, r2
   1226c:	mov	r1, r0
   12270:	mov	r2, r4
   12274:	mov	r0, #1
   12278:	bl	10f48 <__printf_chk@plt>
   1227c:	b	12088 <strspn@plt+0x10a4>
   12280:	mov	r0, r4
   12284:	bl	10e10 <dcgettext@plt>
   12288:	ldr	r3, [pc, #216]	; 12368 <strspn@plt+0x1384>
   1228c:	ldr	r2, [pc, #216]	; 1236c <strspn@plt+0x1388>
   12290:	mov	r1, r0
   12294:	mov	r0, #1
   12298:	bl	10f48 <__printf_chk@plt>
   1229c:	mov	r1, r4
   122a0:	mov	r0, #5
   122a4:	bl	10f84 <setlocale@plt>
   122a8:	cmp	r0, #0
   122ac:	beq	122c4 <strspn@plt+0x12e0>
   122b0:	mov	r2, #3
   122b4:	ldr	r1, [pc, #180]	; 12370 <strspn@plt+0x138c>
   122b8:	bl	10fcc <strncmp@plt>
   122bc:	cmp	r0, #0
   122c0:	bne	12308 <strspn@plt+0x1324>
   122c4:	mov	r2, #5
   122c8:	ldr	r1, [pc, #164]	; 12374 <strspn@plt+0x1390>
   122cc:	mov	r0, #0
   122d0:	bl	10e10 <dcgettext@plt>
   122d4:	ldr	r3, [pc, #132]	; 12360 <strspn@plt+0x137c>
   122d8:	ldr	r2, [pc, #136]	; 12368 <strspn@plt+0x1384>
   122dc:	mov	r4, r3
   122e0:	mov	r1, r0
   122e4:	mov	r0, #1
   122e8:	bl	10f48 <__printf_chk@plt>
   122ec:	ldr	r1, [pc, #132]	; 12378 <strspn@plt+0x1394>
   122f0:	mov	r2, #5
   122f4:	mov	r0, #0
   122f8:	bl	10e10 <dcgettext@plt>
   122fc:	ldr	r3, [pc, #124]	; 12380 <strspn@plt+0x139c>
   12300:	mov	r1, r0
   12304:	b	12270 <strspn@plt+0x128c>
   12308:	ldr	r5, [pc, #80]	; 12360 <strspn@plt+0x137c>
   1230c:	mov	r4, r5
   12310:	mov	r2, #5
   12314:	ldr	r1, [pc, #104]	; 12384 <strspn@plt+0x13a0>
   12318:	mov	r0, #0
   1231c:	bl	10e10 <dcgettext@plt>
   12320:	ldr	r1, [r7]
   12324:	bl	10d50 <fputs_unlocked@plt>
   12328:	b	12228 <strspn@plt+0x1244>
   1232c:	andeq	r7, r2, r8, asr r1
   12330:	andeq	r5, r1, r4, lsr #28
   12334:	muleq	r2, r4, r1
   12338:	andeq	r5, r1, ip, asr #28
   1233c:	andeq	r7, r2, ip, asr r1
   12340:	andeq	r5, r1, r8, asr sp
   12344:			; <UNDEFINED> instruction: 0x00015eb4
   12348:	strdeq	r5, [r1], -r0
   1234c:	andeq	r5, r1, ip, lsr pc
   12350:	andeq	r6, r1, r0, lsl r0
   12354:	andeq	r6, r1, r0, asr #32
   12358:	andeq	r6, r1, r8, ror r0
   1235c:	andeq	r6, r1, ip, ror r2
   12360:	andeq	r5, r1, r0, lsr #28
   12364:	andeq	r6, r1, ip, asr #6
   12368:	andeq	r6, r1, r4, ror #6
   1236c:	andeq	r6, r1, ip, lsl #7
   12370:	muleq	r1, ip, r3
   12374:	andeq	r6, r1, r8, ror #7
   12378:	andeq	r6, r1, r4, lsl #8
   1237c:	andeq	r6, r1, r8, ror r2
   12380:	andeq	r6, r1, r8, lsl r6
   12384:	andeq	r6, r1, r0, lsr #7
   12388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1238c:	vpush	{d8}
   12390:	mov	r7, r1
   12394:	mov	r4, r0
   12398:	ldr	r3, [pc, #752]	; 12690 <strspn@plt+0x16ac>
   1239c:	sub	sp, sp, #28
   123a0:	add	r5, sp, #8
   123a4:	mov	r0, r1
   123a8:	mov	r2, r5
   123ac:	mov	r1, #0
   123b0:	bl	15200 <strspn@plt+0x421c>
   123b4:	subs	r6, r0, #0
   123b8:	beq	12650 <strspn@plt+0x166c>
   123bc:	vldr	d8, [sp, #8]
   123c0:	vcmp.f64	d8, d8
   123c4:	vmrs	APSR_nzcv, fpscr
   123c8:	bne	12600 <strspn@plt+0x161c>
   123cc:	bl	10ee8 <__ctype_b_loc@plt>
   123d0:	ldr	r0, [r0]
   123d4:	b	123dc <strspn@plt+0x13f8>
   123d8:	mov	r7, r2
   123dc:	mov	r2, r7
   123e0:	ldrb	r1, [r2], #1
   123e4:	lsl	r3, r1, #1
   123e8:	ldrh	r3, [r0, r3]
   123ec:	lsr	r3, r3, #13
   123f0:	and	r3, r3, #1
   123f4:	cmp	r1, #43	; 0x2b
   123f8:	orreq	r3, r3, #1
   123fc:	cmp	r3, #0
   12400:	bne	123d8 <strspn@plt+0x13f4>
   12404:	mvn	r2, #-2147483648	; 0x80000000
   12408:	mov	r1, #46	; 0x2e
   1240c:	mov	r0, r7
   12410:	str	r3, [sp, #16]
   12414:	str	r2, [sp, #20]
   12418:	bl	10f0c <strchr@plt>
   1241c:	subs	r8, r0, #0
   12420:	beq	1254c <strspn@plt+0x1568>
   12424:	ldr	r1, [pc, #616]	; 12694 <strspn@plt+0x16b0>
   12428:	mov	r0, r7
   1242c:	bl	10d8c <strcspn@plt>
   12430:	ldrb	r3, [r7, r0]
   12434:	cmp	r3, #0
   12438:	bne	12514 <strspn@plt+0x1530>
   1243c:	vldr	d7, [pc, #580]	; 12688 <strspn@plt+0x16a4>
   12440:	vmul.f64	d8, d8, d7
   12444:	vcmp.f64	d8, d7
   12448:	vmrs	APSR_nzcv, fpscr
   1244c:	bne	12514 <strspn@plt+0x1530>
   12450:	mov	r0, r7
   12454:	bl	10f00 <strlen@plt>
   12458:	cmp	r8, #0
   1245c:	moveq	r9, r8
   12460:	mov	sl, r0
   12464:	str	r0, [sp, #16]
   12468:	beq	12494 <strspn@plt+0x14b0>
   1246c:	ldr	r1, [pc, #548]	; 12698 <strspn@plt+0x16b4>
   12470:	add	r0, r8, #1
   12474:	bl	10d8c <strcspn@plt>
   12478:	subs	r9, r0, #0
   1247c:	blt	1252c <strspn@plt+0x1548>
   12480:	str	r9, [sp, #20]
   12484:	mvneq	r6, #0
   12488:	bne	1252c <strspn@plt+0x1548>
   1248c:	add	r3, r6, sl
   12490:	str	r3, [sp, #16]
   12494:	mov	r1, #101	; 0x65
   12498:	mov	r0, r7
   1249c:	bl	10f0c <strchr@plt>
   124a0:	subs	r6, r0, #0
   124a4:	beq	125e0 <strspn@plt+0x15fc>
   124a8:	add	sl, r6, #1
   124ac:	mov	r0, sl
   124b0:	mov	r2, #10
   124b4:	mov	r1, #0
   124b8:	bl	10d80 <strtol@plt>
   124bc:	cmp	r0, #-2147483646	; 0x80000002
   124c0:	movlt	fp, #-2147483647	; 0x80000001
   124c4:	ldrlt	r3, [sp, #20]
   124c8:	bge	12564 <strspn@plt+0x1580>
   124cc:	sub	r3, r3, fp
   124d0:	mov	r0, r7
   124d4:	str	r3, [sp, #20]
   124d8:	bl	10f00 <strlen@plt>
   124dc:	ldr	r2, [sp, #16]
   124e0:	sub	r3, r6, r7
   124e4:	add	r3, r3, r2
   124e8:	cmp	r8, #0
   124ec:	rsb	r9, fp, #0
   124f0:	sub	r0, r3, r0
   124f4:	beq	125f8 <strspn@plt+0x1614>
   124f8:	add	r8, r8, #1
   124fc:	cmp	r6, r8
   12500:	beq	125f8 <strspn@plt+0x1614>
   12504:	str	r0, [sp, #16]
   12508:	ldr	r3, [sp, #16]
   1250c:	add	r9, r3, r9
   12510:	str	r9, [sp, #16]
   12514:	ldm	r5, {r0, r1, r2, r3}
   12518:	stm	r4, {r0, r1, r2, r3}
   1251c:	mov	r0, r4
   12520:	add	sp, sp, #28
   12524:	vpop	{d8}
   12528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1252c:	cmp	r7, r8
   12530:	beq	1248c <strspn@plt+0x14a8>
   12534:	ldrb	r6, [r8, #-1]
   12538:	sub	r6, r6, #48	; 0x30
   1253c:	cmp	r6, #9
   12540:	movls	r6, #0
   12544:	movhi	r6, #1
   12548:	b	1248c <strspn@plt+0x14a8>
   1254c:	mov	r1, #112	; 0x70
   12550:	mov	r0, r7
   12554:	bl	10f0c <strchr@plt>
   12558:	cmp	r0, #0
   1255c:	streq	r8, [sp, #20]
   12560:	b	12424 <strspn@plt+0x1440>
   12564:	mov	r0, sl
   12568:	mov	r2, #10
   1256c:	mov	r1, #0
   12570:	bl	10d80 <strtol@plt>
   12574:	ldr	r3, [sp, #20]
   12578:	subs	fp, r0, #0
   1257c:	blt	124cc <strspn@plt+0x14e8>
   12580:	cmp	fp, r3
   12584:	suble	sl, r3, fp
   12588:	subgt	sl, r3, r3
   1258c:	mov	r0, r7
   12590:	str	sl, [sp, #20]
   12594:	bl	10f00 <strlen@plt>
   12598:	cmp	r9, #0
   1259c:	cmpne	r8, #0
   125a0:	ldr	r2, [sp, #16]
   125a4:	movne	r8, #1
   125a8:	moveq	r8, #0
   125ac:	sub	r3, r6, r7
   125b0:	cmp	sl, #0
   125b4:	movne	sl, #0
   125b8:	andeq	sl, r8, #1
   125bc:	add	r3, r3, r2
   125c0:	cmp	sl, #0
   125c4:	sub	r3, r3, r0
   125c8:	subne	r3, r3, #1
   125cc:	cmp	r9, fp
   125d0:	str	r3, [sp, #16]
   125d4:	subls	r9, fp, r9
   125d8:	subhi	r9, fp, fp
   125dc:	b	12508 <strspn@plt+0x1524>
   125e0:	mov	r1, #69	; 0x45
   125e4:	mov	r0, r7
   125e8:	bl	10f0c <strchr@plt>
   125ec:	subs	r6, r0, #0
   125f0:	beq	12514 <strspn@plt+0x1530>
   125f4:	b	124a8 <strspn@plt+0x14c4>
   125f8:	add	r0, r0, #1
   125fc:	b	12504 <strspn@plt+0x1520>
   12600:	mov	r2, #5
   12604:	ldr	r1, [pc, #144]	; 1269c <strspn@plt+0x16b8>
   12608:	mov	r0, #0
   1260c:	bl	10e10 <dcgettext@plt>
   12610:	ldr	r1, [pc, #136]	; 126a0 <strspn@plt+0x16bc>
   12614:	mov	r4, r0
   12618:	mov	r0, #0
   1261c:	bl	14730 <strspn@plt+0x374c>
   12620:	mov	r1, r7
   12624:	mov	r5, r0
   12628:	mov	r0, #1
   1262c:	bl	14730 <strspn@plt+0x374c>
   12630:	mov	r1, #0
   12634:	mov	r3, r5
   12638:	mov	r2, r4
   1263c:	str	r0, [sp]
   12640:	mov	r0, r1
   12644:	bl	10e88 <error@plt>
   12648:	mov	r0, #1
   1264c:	bl	12048 <strspn@plt+0x1064>
   12650:	mov	r2, #5
   12654:	ldr	r1, [pc, #72]	; 126a4 <strspn@plt+0x16c0>
   12658:	bl	10e10 <dcgettext@plt>
   1265c:	mov	r4, r0
   12660:	mov	r0, r7
   12664:	bl	14740 <strspn@plt+0x375c>
   12668:	mov	r2, r4
   1266c:	mov	r1, r6
   12670:	mov	r3, r0
   12674:	mov	r0, r6
   12678:	bl	10e88 <error@plt>
   1267c:	mov	r0, #1
   12680:	bl	12048 <strspn@plt+0x1064>
   12684:	nop			; (mov r0, r0)
	...
   12690:	andeq	r2, r1, r8, lsr #13
   12694:	andeq	r6, r1, r4, lsl #9
   12698:	andeq	r6, r1, r8, lsl #9
   1269c:	andeq	r6, r1, ip, asr r4
   126a0:	andeq	r6, r1, r4, ror r4
   126a4:	andeq	r6, r1, r8, lsr r4
   126a8:	push	{r4, r5, r6, lr}
   126ac:	vpush	{d8}
   126b0:	mov	r4, r1
   126b4:	mov	r5, r0
   126b8:	sub	sp, sp, #8
   126bc:	mov	r1, sp
   126c0:	bl	10de0 <strtold@plt>
   126c4:	ldr	r3, [sp]
   126c8:	ldrb	r3, [r3]
   126cc:	cmp	r3, #0
   126d0:	vmov.f64	d8, d0
   126d4:	bne	126f4 <strspn@plt+0x1710>
   126d8:	cmp	r4, #0
   126dc:	vmov.f64	d0, d8
   126e0:	ldrne	r3, [sp]
   126e4:	strne	r3, [r4]
   126e8:	add	sp, sp, #8
   126ec:	vpop	{d8}
   126f0:	pop	{r4, r5, r6, pc}
   126f4:	bl	10f18 <__errno_location@plt>
   126f8:	add	r1, sp, #4
   126fc:	mov	r6, r0
   12700:	mov	r0, r5
   12704:	ldr	r5, [r6]
   12708:	bl	15378 <strspn@plt+0x4394>
   1270c:	ldm	sp, {r2, r3}
   12710:	cmp	r2, r3
   12714:	strcc	r3, [sp]
   12718:	strcs	r5, [r6]
   1271c:	vmovcc.f64	d8, d0
   12720:	b	126d8 <strspn@plt+0x16f4>
   12724:	ldr	r3, [pc, #4]	; 12730 <strspn@plt+0x174c>
   12728:	str	r0, [r3]
   1272c:	bx	lr
   12730:	andeq	r7, r2, ip, lsl #3
   12734:	ldr	r3, [pc, #4]	; 12740 <strspn@plt+0x175c>
   12738:	strb	r0, [r3, #4]
   1273c:	bx	lr
   12740:	andeq	r7, r2, ip, lsl #3
   12744:	ldr	r3, [pc, #192]	; 1280c <strspn@plt+0x1828>
   12748:	push	{r4, r5, r6, lr}
   1274c:	sub	sp, sp, #8
   12750:	ldr	r0, [r3]
   12754:	bl	1543c <strspn@plt+0x4458>
   12758:	cmp	r0, #0
   1275c:	beq	12780 <strspn@plt+0x179c>
   12760:	ldr	r4, [pc, #168]	; 12810 <strspn@plt+0x182c>
   12764:	ldrb	r3, [r4, #4]
   12768:	cmp	r3, #0
   1276c:	beq	1279c <strspn@plt+0x17b8>
   12770:	bl	10f18 <__errno_location@plt>
   12774:	ldr	r3, [r0]
   12778:	cmp	r3, #32
   1277c:	bne	1279c <strspn@plt+0x17b8>
   12780:	ldr	r3, [pc, #140]	; 12814 <strspn@plt+0x1830>
   12784:	ldr	r0, [r3]
   12788:	bl	1543c <strspn@plt+0x4458>
   1278c:	cmp	r0, #0
   12790:	bne	127e4 <strspn@plt+0x1800>
   12794:	add	sp, sp, #8
   12798:	pop	{r4, r5, r6, pc}
   1279c:	mov	r2, #5
   127a0:	ldr	r1, [pc, #112]	; 12818 <strspn@plt+0x1834>
   127a4:	mov	r0, #0
   127a8:	bl	10e10 <dcgettext@plt>
   127ac:	ldr	r4, [r4]
   127b0:	cmp	r4, #0
   127b4:	mov	r5, r0
   127b8:	beq	127f0 <strspn@plt+0x180c>
   127bc:	bl	10f18 <__errno_location@plt>
   127c0:	ldr	r6, [r0]
   127c4:	mov	r0, r4
   127c8:	bl	145a8 <strspn@plt+0x35c4>
   127cc:	mov	r1, r6
   127d0:	str	r5, [sp]
   127d4:	ldr	r2, [pc, #64]	; 1281c <strspn@plt+0x1838>
   127d8:	mov	r3, r0
   127dc:	mov	r0, #0
   127e0:	bl	10e88 <error@plt>
   127e4:	ldr	r3, [pc, #52]	; 12820 <strspn@plt+0x183c>
   127e8:	ldr	r0, [r3]
   127ec:	bl	10dbc <_exit@plt>
   127f0:	bl	10f18 <__errno_location@plt>
   127f4:	mov	r3, r5
   127f8:	ldr	r2, [pc, #36]	; 12824 <strspn@plt+0x1840>
   127fc:	ldr	r1, [r0]
   12800:	mov	r0, r4
   12804:	bl	10e88 <error@plt>
   12808:	b	127e4 <strspn@plt+0x1800>
   1280c:	andeq	r7, r2, ip, asr r1
   12810:	andeq	r7, r2, ip, lsl #3
   12814:	andeq	r7, r2, r8, asr r1
   12818:	andeq	r5, r1, r0, lsl lr
   1281c:			; <UNDEFINED> instruction: 0x000166bc
   12820:	andeq	r7, r2, r0, lsl #2
   12824:	andeq	r6, r1, r0, asr #13
   12828:	push	{r4, r5, lr}
   1282c:	sub	sp, sp, #12
   12830:	mov	r5, r0
   12834:	bl	10f18 <__errno_location@plt>
   12838:	mov	r2, #0
   1283c:	mov	r4, r0
   12840:	ldr	r3, [r0]
   12844:	str	r2, [r4]
   12848:	mov	r0, r5
   1284c:	str	r3, [sp]
   12850:	str	r3, [sp, #4]
   12854:	bl	10db0 <free@plt>
   12858:	ldr	r3, [r4]
   1285c:	add	r2, sp, #8
   12860:	cmp	r3, #0
   12864:	moveq	r3, #4
   12868:	movne	r3, #0
   1286c:	add	r3, r2, r3
   12870:	ldr	r3, [r3, #-8]
   12874:	str	r3, [r4]
   12878:	add	sp, sp, #12
   1287c:	pop	{r4, r5, pc}
   12880:	push	{r4, r5, r6, lr}
   12884:	subs	r4, r0, #0
   12888:	beq	128fc <strspn@plt+0x1918>
   1288c:	mov	r1, #47	; 0x2f
   12890:	bl	10f90 <strrchr@plt>
   12894:	subs	r5, r0, #0
   12898:	beq	128e8 <strspn@plt+0x1904>
   1289c:	add	r6, r5, #1
   128a0:	sub	r3, r6, r4
   128a4:	cmp	r3, #6
   128a8:	ble	128e8 <strspn@plt+0x1904>
   128ac:	mov	r2, #7
   128b0:	ldr	r1, [pc, #96]	; 12918 <strspn@plt+0x1934>
   128b4:	sub	r0, r5, #6
   128b8:	bl	10fcc <strncmp@plt>
   128bc:	cmp	r0, #0
   128c0:	bne	128e8 <strspn@plt+0x1904>
   128c4:	mov	r2, #3
   128c8:	ldr	r1, [pc, #76]	; 1291c <strspn@plt+0x1938>
   128cc:	mov	r0, r6
   128d0:	bl	10fcc <strncmp@plt>
   128d4:	cmp	r0, #0
   128d8:	movne	r4, r6
   128dc:	ldreq	r3, [pc, #60]	; 12920 <strspn@plt+0x193c>
   128e0:	addeq	r4, r5, #4
   128e4:	streq	r4, [r3]
   128e8:	ldr	r2, [pc, #52]	; 12924 <strspn@plt+0x1940>
   128ec:	ldr	r3, [pc, #52]	; 12928 <strspn@plt+0x1944>
   128f0:	str	r4, [r2]
   128f4:	str	r4, [r3]
   128f8:	pop	{r4, r5, r6, pc}
   128fc:	ldr	r3, [pc, #40]	; 1292c <strspn@plt+0x1948>
   12900:	mov	r2, #55	; 0x37
   12904:	mov	r1, #1
   12908:	ldr	r3, [r3]
   1290c:	ldr	r0, [pc, #28]	; 12930 <strspn@plt+0x194c>
   12910:	bl	10e40 <fwrite@plt>
   12914:	bl	10fd8 <abort@plt>
   12918:	strdeq	r6, [r1], -ip
   1291c:	andeq	r6, r1, r4, lsl #14
   12920:	andeq	r7, r2, r8, asr #2
   12924:	muleq	r2, r4, r1
   12928:	andeq	r7, r2, ip, asr #2
   1292c:	andeq	r7, r2, r8, asr r1
   12930:	andeq	r6, r1, r4, asr #13
   12934:	push	{r4, r5, r6, lr}
   12938:	mov	r2, #48	; 0x30
   1293c:	mov	r4, r1
   12940:	mov	r1, #0
   12944:	mov	r5, r0
   12948:	bl	10f3c <memset@plt>
   1294c:	cmp	r4, #10
   12950:	beq	12960 <strspn@plt+0x197c>
   12954:	str	r4, [r5]
   12958:	mov	r0, r5
   1295c:	pop	{r4, r5, r6, pc}
   12960:	bl	10fd8 <abort@plt>
   12964:	push	{r4, r5, r6, lr}
   12968:	mov	r4, r0
   1296c:	mov	r5, r1
   12970:	bl	15658 <strspn@plt+0x4674>
   12974:	ldrb	r3, [r0]
   12978:	bic	r3, r3, #32
   1297c:	cmp	r3, #85	; 0x55
   12980:	bne	129e0 <strspn@plt+0x19fc>
   12984:	ldrb	r3, [r0, #1]
   12988:	bic	r3, r3, #32
   1298c:	cmp	r3, #84	; 0x54
   12990:	bne	12a1c <strspn@plt+0x1a38>
   12994:	ldrb	r3, [r0, #2]
   12998:	bic	r3, r3, #32
   1299c:	cmp	r3, #70	; 0x46
   129a0:	bne	12a1c <strspn@plt+0x1a38>
   129a4:	ldrb	r3, [r0, #3]
   129a8:	cmp	r3, #45	; 0x2d
   129ac:	bne	12a1c <strspn@plt+0x1a38>
   129b0:	ldrb	r3, [r0, #4]
   129b4:	cmp	r3, #56	; 0x38
   129b8:	bne	12a1c <strspn@plt+0x1a38>
   129bc:	ldrb	r3, [r0, #5]
   129c0:	cmp	r3, #0
   129c4:	bne	12a1c <strspn@plt+0x1a38>
   129c8:	ldrb	r2, [r4]
   129cc:	ldr	r3, [pc, #152]	; 12a6c <strspn@plt+0x1a88>
   129d0:	ldr	r0, [pc, #152]	; 12a70 <strspn@plt+0x1a8c>
   129d4:	cmp	r2, #96	; 0x60
   129d8:	movne	r0, r3
   129dc:	pop	{r4, r5, r6, pc}
   129e0:	cmp	r3, #71	; 0x47
   129e4:	bne	12a1c <strspn@plt+0x1a38>
   129e8:	ldrb	r3, [r0, #1]
   129ec:	bic	r3, r3, #32
   129f0:	cmp	r3, #66	; 0x42
   129f4:	bne	12a1c <strspn@plt+0x1a38>
   129f8:	ldrb	r3, [r0, #2]
   129fc:	cmp	r3, #49	; 0x31
   12a00:	bne	12a1c <strspn@plt+0x1a38>
   12a04:	ldrb	r3, [r0, #3]
   12a08:	cmp	r3, #56	; 0x38
   12a0c:	bne	12a1c <strspn@plt+0x1a38>
   12a10:	ldrb	r3, [r0, #4]
   12a14:	cmp	r3, #48	; 0x30
   12a18:	beq	12a30 <strspn@plt+0x1a4c>
   12a1c:	ldr	r3, [pc, #80]	; 12a74 <strspn@plt+0x1a90>
   12a20:	cmp	r5, #9
   12a24:	ldr	r0, [pc, #76]	; 12a78 <strspn@plt+0x1a94>
   12a28:	movne	r0, r3
   12a2c:	pop	{r4, r5, r6, pc}
   12a30:	ldrb	r3, [r0, #5]
   12a34:	cmp	r3, #51	; 0x33
   12a38:	bne	12a1c <strspn@plt+0x1a38>
   12a3c:	ldrb	r3, [r0, #6]
   12a40:	cmp	r3, #48	; 0x30
   12a44:	bne	12a1c <strspn@plt+0x1a38>
   12a48:	ldrb	r3, [r0, #7]
   12a4c:	cmp	r3, #0
   12a50:	bne	12a1c <strspn@plt+0x1a38>
   12a54:	ldrb	r2, [r4]
   12a58:	ldr	r3, [pc, #28]	; 12a7c <strspn@plt+0x1a98>
   12a5c:	ldr	r0, [pc, #28]	; 12a80 <strspn@plt+0x1a9c>
   12a60:	cmp	r2, #96	; 0x60
   12a64:	movne	r0, r3
   12a68:	pop	{r4, r5, r6, pc}
   12a6c:	andeq	r6, r1, r0, ror #14
   12a70:	andeq	r6, r1, ip, asr r7
   12a74:	andeq	r6, r1, r0, ror r7
   12a78:	andeq	r6, r1, ip, ror #14
   12a7c:	andeq	r6, r1, r8, ror #14
   12a80:	andeq	r6, r1, r4, ror #14
   12a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a88:	sub	sp, sp, #116	; 0x74
   12a8c:	mov	sl, r0
   12a90:	str	r3, [sp, #24]
   12a94:	mov	r3, #1
   12a98:	mov	r8, r1
   12a9c:	str	r2, [sp, #56]	; 0x38
   12aa0:	str	r3, [sp, #36]	; 0x24
   12aa4:	bl	10e58 <__ctype_get_mb_cur_max@plt>
   12aa8:	ldr	r3, [sp, #156]	; 0x9c
   12aac:	mov	fp, r8
   12ab0:	mov	r2, #0
   12ab4:	lsr	r3, r3, #1
   12ab8:	and	r3, r3, #1
   12abc:	str	r2, [sp, #68]	; 0x44
   12ac0:	str	r3, [sp, #28]
   12ac4:	str	r2, [sp, #40]	; 0x28
   12ac8:	str	r2, [sp, #44]	; 0x2c
   12acc:	str	r2, [sp, #52]	; 0x34
   12ad0:	str	r2, [sp, #64]	; 0x40
   12ad4:	str	r2, [sp, #72]	; 0x48
   12ad8:	str	sl, [sp, #32]
   12adc:	str	r0, [sp, #76]	; 0x4c
   12ae0:	ldr	r3, [sp, #152]	; 0x98
   12ae4:	cmp	r3, #10
   12ae8:	ldrls	pc, [pc, r3, lsl #2]
   12aec:	b	13cac <strspn@plt+0x2cc8>
   12af0:	andeq	r2, r1, ip, lsl fp
   12af4:	andeq	r2, r1, r4, lsl #28
   12af8:	andeq	r2, r1, r8, lsr #28
   12afc:	andeq	r2, r1, ip, asr #28
   12b00:	andeq	r2, r1, r8, ror pc
   12b04:	andeq	r2, r1, ip, asr #30
   12b08:	andeq	r2, r1, r4, lsr #30
   12b0c:	andeq	r2, r1, r0, ror #28
   12b10:	andeq	r2, r1, r8, ror lr
   12b14:	andeq	r2, r1, r8, ror lr
   12b18:	andeq	r2, r1, r8, ror lr
   12b1c:	mov	r3, #0
   12b20:	mov	r7, r3
   12b24:	str	r3, [sp, #28]
   12b28:	ldr	r3, [sp, #44]	; 0x2c
   12b2c:	mov	sl, #0
   12b30:	eor	r3, r3, #1
   12b34:	str	r3, [sp, #60]	; 0x3c
   12b38:	ldr	r3, [sp, #24]
   12b3c:	cmn	r3, #1
   12b40:	beq	130a4 <strspn@plt+0x20c0>
   12b44:	ldr	r3, [sp, #24]
   12b48:	subs	r5, r3, sl
   12b4c:	movne	r5, #1
   12b50:	cmp	r5, #0
   12b54:	beq	130bc <strspn@plt+0x20d8>
   12b58:	ldr	r3, [sp, #152]	; 0x98
   12b5c:	ldr	r8, [sp, #44]	; 0x2c
   12b60:	cmp	r3, #2
   12b64:	moveq	r8, #0
   12b68:	andne	r8, r8, #1
   12b6c:	ldr	r3, [sp, #52]	; 0x34
   12b70:	adds	r9, r3, #0
   12b74:	movne	r9, #1
   12b78:	ands	r6, r9, r8
   12b7c:	beq	13524 <strspn@plt+0x2540>
   12b80:	ldr	r2, [sp, #52]	; 0x34
   12b84:	ldr	r1, [sp, #24]
   12b88:	cmp	r2, #1
   12b8c:	mov	r3, r2
   12b90:	movls	r3, #0
   12b94:	movhi	r3, #1
   12b98:	cmn	r1, #1
   12b9c:	movne	r3, #0
   12ba0:	cmp	r3, #0
   12ba4:	add	r4, sl, r2
   12ba8:	beq	12bb8 <strspn@plt+0x1bd4>
   12bac:	ldr	r0, [sp, #56]	; 0x38
   12bb0:	bl	10f00 <strlen@plt>
   12bb4:	str	r0, [sp, #24]
   12bb8:	ldr	r3, [sp, #24]
   12bbc:	cmp	r3, r4
   12bc0:	ldr	r3, [sp, #56]	; 0x38
   12bc4:	add	r3, r3, sl
   12bc8:	str	r3, [sp, #48]	; 0x30
   12bcc:	bcc	13530 <strspn@plt+0x254c>
   12bd0:	mov	r0, r3
   12bd4:	ldr	r2, [sp, #52]	; 0x34
   12bd8:	ldr	r1, [sp, #64]	; 0x40
   12bdc:	bl	10df8 <memcmp@plt>
   12be0:	cmp	r0, #0
   12be4:	bne	13530 <strspn@plt+0x254c>
   12be8:	ldr	r3, [sp, #28]
   12bec:	cmp	r3, #0
   12bf0:	bne	13dac <strspn@plt+0x2dc8>
   12bf4:	ldr	r3, [sp, #48]	; 0x30
   12bf8:	ldrb	r4, [r3]
   12bfc:	cmp	r4, #126	; 0x7e
   12c00:	ldrls	pc, [pc, r4, lsl #2]
   12c04:	b	134c4 <strspn@plt+0x24e0>
   12c08:	andeq	r3, r1, r8, ror #5
   12c0c:	andeq	r3, r1, r4, asr #9
   12c10:	andeq	r3, r1, r4, asr #9
   12c14:	andeq	r3, r1, r4, asr #9
   12c18:	andeq	r3, r1, r4, asr #9
   12c1c:	andeq	r3, r1, r4, asr #9
   12c20:	andeq	r3, r1, r4, asr #9
   12c24:	andeq	r3, r1, ip, asr #5
   12c28:			; <UNDEFINED> instruction: 0x000132b0
   12c2c:	andeq	r3, r1, ip, lsr #9
   12c30:	andeq	r3, r1, r0, lsl r2
   12c34:	strdeq	r3, [r1], -r4
   12c38:	andeq	r3, r1, r8, lsl #9
   12c3c:	andeq	r3, r1, r4, ror #8
   12c40:	andeq	r3, r1, r4, asr #9
   12c44:	andeq	r3, r1, r4, asr #9
   12c48:	andeq	r3, r1, r4, asr #9
   12c4c:	andeq	r3, r1, r4, asr #9
   12c50:	andeq	r3, r1, r4, asr #9
   12c54:	andeq	r3, r1, r4, asr #9
   12c58:	andeq	r3, r1, r4, asr #9
   12c5c:	andeq	r3, r1, r4, asr #9
   12c60:	andeq	r3, r1, r4, asr #9
   12c64:	andeq	r3, r1, r4, asr #9
   12c68:	andeq	r3, r1, r4, asr #9
   12c6c:	andeq	r3, r1, r4, asr #9
   12c70:	andeq	r3, r1, r4, asr #9
   12c74:	andeq	r3, r1, r4, asr #9
   12c78:	andeq	r3, r1, r4, asr #9
   12c7c:	andeq	r3, r1, r4, asr #9
   12c80:	andeq	r3, r1, r4, asr #9
   12c84:	andeq	r3, r1, r4, asr #9
   12c88:	andeq	r3, r1, r4, lsr #9
   12c8c:	ldrdeq	r3, [r1], -r8
   12c90:	ldrdeq	r3, [r1], -r8
   12c94:	andeq	r2, r1, r8, ror #31
   12c98:	ldrdeq	r3, [r1], -r8
   12c9c:	andeq	r3, r1, r0, ror r4
   12ca0:	ldrdeq	r3, [r1], -r8
   12ca4:	andeq	r3, r1, r4, asr #8
   12ca8:	ldrdeq	r3, [r1], -r8
   12cac:	ldrdeq	r3, [r1], -r8
   12cb0:	ldrdeq	r3, [r1], -r8
   12cb4:	andeq	r3, r1, r0, ror r4
   12cb8:	andeq	r3, r1, r0, ror r4
   12cbc:	andeq	r3, r1, r0, ror r4
   12cc0:	andeq	r3, r1, r0, ror r4
   12cc4:	andeq	r3, r1, r0, ror r4
   12cc8:	andeq	r3, r1, r0, ror r4
   12ccc:	andeq	r3, r1, r0, ror r4
   12cd0:	andeq	r3, r1, r0, ror r4
   12cd4:	andeq	r3, r1, r0, ror r4
   12cd8:	andeq	r3, r1, r0, ror r4
   12cdc:	andeq	r3, r1, r0, ror r4
   12ce0:	andeq	r3, r1, r0, ror r4
   12ce4:	andeq	r3, r1, r0, ror r4
   12ce8:	andeq	r3, r1, r0, ror r4
   12cec:	andeq	r3, r1, r0, ror r4
   12cf0:	andeq	r3, r1, r0, ror r4
   12cf4:	ldrdeq	r3, [r1], -r8
   12cf8:	ldrdeq	r3, [r1], -r8
   12cfc:	ldrdeq	r3, [r1], -r8
   12d00:	ldrdeq	r3, [r1], -r8
   12d04:	andeq	r3, r1, r4, lsl r4
   12d08:	andeq	r3, r1, r4, asr #9
   12d0c:	andeq	r3, r1, r0, ror r4
   12d10:	andeq	r3, r1, r0, ror r4
   12d14:	andeq	r3, r1, r0, ror r4
   12d18:	andeq	r3, r1, r0, ror r4
   12d1c:	andeq	r3, r1, r0, ror r4
   12d20:	andeq	r3, r1, r0, ror r4
   12d24:	andeq	r3, r1, r0, ror r4
   12d28:	andeq	r3, r1, r0, ror r4
   12d2c:	andeq	r3, r1, r0, ror r4
   12d30:	andeq	r3, r1, r0, ror r4
   12d34:	andeq	r3, r1, r0, ror r4
   12d38:	andeq	r3, r1, r0, ror r4
   12d3c:	andeq	r3, r1, r0, ror r4
   12d40:	andeq	r3, r1, r0, ror r4
   12d44:	andeq	r3, r1, r0, ror r4
   12d48:	andeq	r3, r1, r0, ror r4
   12d4c:	andeq	r3, r1, r0, ror r4
   12d50:	andeq	r3, r1, r0, ror r4
   12d54:	andeq	r3, r1, r0, ror r4
   12d58:	andeq	r3, r1, r0, ror r4
   12d5c:	andeq	r3, r1, r0, ror r4
   12d60:	andeq	r3, r1, r0, ror r4
   12d64:	andeq	r3, r1, r0, ror r4
   12d68:	andeq	r3, r1, r0, ror r4
   12d6c:	andeq	r3, r1, r0, ror r4
   12d70:	andeq	r3, r1, r0, ror r4
   12d74:	ldrdeq	r3, [r1], -r8
   12d78:	andeq	r3, r1, r4, lsr r1
   12d7c:	andeq	r3, r1, r0, ror r4
   12d80:	ldrdeq	r3, [r1], -r8
   12d84:	andeq	r3, r1, r0, ror r4
   12d88:	ldrdeq	r3, [r1], -r8
   12d8c:	andeq	r3, r1, r0, ror r4
   12d90:	andeq	r3, r1, r0, ror r4
   12d94:	andeq	r3, r1, r0, ror r4
   12d98:	andeq	r3, r1, r0, ror r4
   12d9c:	andeq	r3, r1, r0, ror r4
   12da0:	andeq	r3, r1, r0, ror r4
   12da4:	andeq	r3, r1, r0, ror r4
   12da8:	andeq	r3, r1, r0, ror r4
   12dac:	andeq	r3, r1, r0, ror r4
   12db0:	andeq	r3, r1, r0, ror r4
   12db4:	andeq	r3, r1, r0, ror r4
   12db8:	andeq	r3, r1, r0, ror r4
   12dbc:	andeq	r3, r1, r0, ror r4
   12dc0:	andeq	r3, r1, r0, ror r4
   12dc4:	andeq	r3, r1, r0, ror r4
   12dc8:	andeq	r3, r1, r0, ror r4
   12dcc:	andeq	r3, r1, r0, ror r4
   12dd0:	andeq	r3, r1, r0, ror r4
   12dd4:	andeq	r3, r1, r0, ror r4
   12dd8:	andeq	r3, r1, r0, ror r4
   12ddc:	andeq	r3, r1, r0, ror r4
   12de0:	andeq	r3, r1, r0, ror r4
   12de4:	andeq	r3, r1, r0, ror r4
   12de8:	andeq	r3, r1, r0, ror r4
   12dec:	andeq	r3, r1, r0, ror r4
   12df0:	andeq	r3, r1, r0, ror r4
   12df4:	andeq	r2, r1, r8, asr #31
   12df8:	ldrdeq	r3, [r1], -r8
   12dfc:	andeq	r2, r1, r8, asr #31
   12e00:	andeq	r2, r1, r8, ror #31
   12e04:	mov	r3, #1
   12e08:	str	r3, [sp, #28]
   12e0c:	str	r3, [sp, #52]	; 0x34
   12e10:	ldr	r3, [pc, #4000]	; 13db8 <strspn@plt+0x2dd4>
   12e14:	mov	r7, #0
   12e18:	str	r3, [sp, #64]	; 0x40
   12e1c:	mov	r3, #2
   12e20:	str	r3, [sp, #152]	; 0x98
   12e24:	b	12b28 <strspn@plt+0x1b44>
   12e28:	ldr	r3, [sp, #28]
   12e2c:	cmp	r3, #0
   12e30:	beq	12f8c <strspn@plt+0x1fa8>
   12e34:	mov	r3, #1
   12e38:	str	r3, [sp, #52]	; 0x34
   12e3c:	ldr	r3, [pc, #3956]	; 13db8 <strspn@plt+0x2dd4>
   12e40:	mov	r7, #0
   12e44:	str	r3, [sp, #64]	; 0x40
   12e48:	b	12b28 <strspn@plt+0x1b44>
   12e4c:	mov	r3, #1
   12e50:	str	r3, [sp, #44]	; 0x2c
   12e54:	str	r3, [sp, #52]	; 0x34
   12e58:	str	r3, [sp, #28]
   12e5c:	b	12e10 <strspn@plt+0x1e2c>
   12e60:	mov	r3, #0
   12e64:	str	r3, [sp, #28]
   12e68:	mov	r3, #1
   12e6c:	str	r3, [sp, #44]	; 0x2c
   12e70:	mov	r7, #0
   12e74:	b	12b28 <strspn@plt+0x1b44>
   12e78:	ldr	r3, [sp, #152]	; 0x98
   12e7c:	cmp	r3, #10
   12e80:	beq	12ec4 <strspn@plt+0x1ee0>
   12e84:	mov	r2, #5
   12e88:	ldr	r1, [pc, #3884]	; 13dbc <strspn@plt+0x2dd8>
   12e8c:	mov	r0, #0
   12e90:	bl	10e10 <dcgettext@plt>
   12e94:	ldr	r2, [pc, #3872]	; 13dbc <strspn@plt+0x2dd8>
   12e98:	cmp	r0, r2
   12e9c:	str	r0, [sp, #164]	; 0xa4
   12ea0:	beq	13ea8 <strspn@plt+0x2ec4>
   12ea4:	mov	r2, #5
   12ea8:	ldr	r1, [pc, #3848]	; 13db8 <strspn@plt+0x2dd4>
   12eac:	mov	r0, #0
   12eb0:	bl	10e10 <dcgettext@plt>
   12eb4:	ldr	r2, [pc, #3836]	; 13db8 <strspn@plt+0x2dd4>
   12eb8:	cmp	r0, r2
   12ebc:	str	r0, [sp, #168]	; 0xa8
   12ec0:	beq	13e98 <strspn@plt+0x2eb4>
   12ec4:	ldr	r7, [sp, #28]
   12ec8:	cmp	r7, #0
   12ecc:	movne	r7, #0
   12ed0:	bne	12f04 <strspn@plt+0x1f20>
   12ed4:	ldr	r3, [sp, #164]	; 0xa4
   12ed8:	ldrb	r3, [r3]
   12edc:	cmp	r3, #0
   12ee0:	beq	13eb8 <strspn@plt+0x2ed4>
   12ee4:	ldr	r2, [sp, #164]	; 0xa4
   12ee8:	ldr	r1, [sp, #32]
   12eec:	cmp	fp, r7
   12ef0:	strbhi	r3, [r1, r7]
   12ef4:	ldrb	r3, [r2, #1]!
   12ef8:	add	r7, r7, #1
   12efc:	cmp	r3, #0
   12f00:	bne	12eec <strspn@plt+0x1f08>
   12f04:	ldr	r0, [sp, #168]	; 0xa8
   12f08:	bl	10f00 <strlen@plt>
   12f0c:	ldr	r3, [sp, #168]	; 0xa8
   12f10:	str	r3, [sp, #64]	; 0x40
   12f14:	mov	r3, #1
   12f18:	str	r3, [sp, #44]	; 0x2c
   12f1c:	str	r0, [sp, #52]	; 0x34
   12f20:	b	12b28 <strspn@plt+0x1b44>
   12f24:	mov	r3, #1
   12f28:	str	r3, [sp, #44]	; 0x2c
   12f2c:	str	r3, [sp, #52]	; 0x34
   12f30:	str	r3, [sp, #28]
   12f34:	ldr	r3, [pc, #3716]	; 13dc0 <strspn@plt+0x2ddc>
   12f38:	mov	r7, #0
   12f3c:	str	r3, [sp, #64]	; 0x40
   12f40:	mov	r3, #5
   12f44:	str	r3, [sp, #152]	; 0x98
   12f48:	b	12b28 <strspn@plt+0x1b44>
   12f4c:	ldr	r3, [sp, #28]
   12f50:	cmp	r3, #0
   12f54:	beq	13c54 <strspn@plt+0x2c70>
   12f58:	ldr	r3, [sp, #28]
   12f5c:	mov	r7, #0
   12f60:	str	r3, [sp, #44]	; 0x2c
   12f64:	mov	r3, #1
   12f68:	str	r3, [sp, #52]	; 0x34
   12f6c:	ldr	r3, [pc, #3660]	; 13dc0 <strspn@plt+0x2ddc>
   12f70:	str	r3, [sp, #64]	; 0x40
   12f74:	b	12b28 <strspn@plt+0x1b44>
   12f78:	ldr	r3, [sp, #28]
   12f7c:	cmp	r3, #0
   12f80:	mov	r3, #1
   12f84:	streq	r3, [sp, #44]	; 0x2c
   12f88:	bne	12e0c <strspn@plt+0x1e28>
   12f8c:	cmp	fp, #0
   12f90:	beq	13c84 <strspn@plt+0x2ca0>
   12f94:	ldr	r3, [sp, #32]
   12f98:	mov	r2, #39	; 0x27
   12f9c:	mov	r7, #1
   12fa0:	strb	r2, [r3]
   12fa4:	mov	r3, #0
   12fa8:	str	r3, [sp, #28]
   12fac:	mov	r3, #1
   12fb0:	str	r3, [sp, #52]	; 0x34
   12fb4:	ldr	r3, [pc, #3580]	; 13db8 <strspn@plt+0x2dd4>
   12fb8:	str	r3, [sp, #64]	; 0x40
   12fbc:	mov	r3, #2
   12fc0:	str	r3, [sp, #152]	; 0x98
   12fc4:	b	12b28 <strspn@plt+0x1b44>
   12fc8:	ldr	r3, [sp, #24]
   12fcc:	cmn	r3, #1
   12fd0:	beq	13be8 <strspn@plt+0x2c04>
   12fd4:	ldr	r3, [sp, #24]
   12fd8:	subs	r3, r3, #1
   12fdc:	movne	r3, #1
   12fe0:	cmp	r3, #0
   12fe4:	bne	12ff0 <strspn@plt+0x200c>
   12fe8:	cmp	sl, #0
   12fec:	beq	133dc <strspn@plt+0x23f8>
   12ff0:	ldr	r3, [sp, #152]	; 0x98
   12ff4:	mov	r5, #0
   12ff8:	sub	r2, r3, #2
   12ffc:	mov	r8, r5
   13000:	clz	r2, r2
   13004:	lsr	r2, r2, #5
   13008:	ldr	r3, [sp, #60]	; 0x3c
   1300c:	ldr	r1, [sp, #28]
   13010:	orr	r3, r2, r3
   13014:	eor	r3, r3, #1
   13018:	orr	r3, r1, r3
   1301c:	tst	r3, #255	; 0xff
   13020:	bne	1374c <strspn@plt+0x2768>
   13024:	cmp	r6, #0
   13028:	bne	13178 <strspn@plt+0x2194>
   1302c:	ldr	r3, [sp, #40]	; 0x28
   13030:	eor	r8, r8, #1
   13034:	and	r8, r8, r3
   13038:	add	sl, sl, #1
   1303c:	uxtb	r6, r8
   13040:	cmp	r6, #0
   13044:	beq	13078 <strspn@plt+0x2094>
   13048:	cmp	fp, r7
   1304c:	movhi	r2, #39	; 0x27
   13050:	ldrhi	r3, [sp, #32]
   13054:	strbhi	r2, [r3, r7]
   13058:	add	r3, r7, #1
   1305c:	cmp	fp, r3
   13060:	movhi	r1, #39	; 0x27
   13064:	ldrhi	r2, [sp, #32]
   13068:	add	r7, r7, #2
   1306c:	strbhi	r1, [r2, r3]
   13070:	mov	r3, #0
   13074:	str	r3, [sp, #40]	; 0x28
   13078:	cmp	r7, fp
   1307c:	ldrcc	r3, [sp, #32]
   13080:	strbcc	r4, [r3, r7]
   13084:	ldr	r3, [sp, #36]	; 0x24
   13088:	cmp	r5, #0
   1308c:	moveq	r3, #0
   13090:	str	r3, [sp, #36]	; 0x24
   13094:	ldr	r3, [sp, #24]
   13098:	add	r7, r7, #1
   1309c:	cmn	r3, #1
   130a0:	bne	12b44 <strspn@plt+0x1b60>
   130a4:	ldr	r3, [sp, #56]	; 0x38
   130a8:	ldrb	r5, [r3, sl]
   130ac:	adds	r5, r5, #0
   130b0:	movne	r5, #1
   130b4:	cmp	r5, #0
   130b8:	bne	12b58 <strspn@plt+0x1b74>
   130bc:	ldr	r3, [sp, #152]	; 0x98
   130c0:	ldr	r1, [sp, #28]
   130c4:	sub	r3, r3, #2
   130c8:	clz	r3, r3
   130cc:	lsr	r3, r3, #5
   130d0:	and	r9, r1, r3
   130d4:	cmp	r7, #0
   130d8:	movne	r2, #0
   130dc:	andeq	r2, r9, #1
   130e0:	cmp	r2, #0
   130e4:	bne	13ac0 <strspn@plt+0x2adc>
   130e8:	eor	r2, r1, #1
   130ec:	ands	r3, r3, r2
   130f0:	beq	13f7c <strspn@plt+0x2f98>
   130f4:	ldr	r2, [sp, #68]	; 0x44
   130f8:	cmp	r2, #0
   130fc:	beq	13f68 <strspn@plt+0x2f84>
   13100:	ldr	r3, [sp, #36]	; 0x24
   13104:	cmp	r3, #0
   13108:	bne	13f20 <strspn@plt+0x2f3c>
   1310c:	ldr	r2, [sp, #72]	; 0x48
   13110:	clz	r3, fp
   13114:	cmp	r2, #0
   13118:	lsr	r3, r3, #5
   1311c:	moveq	r3, #0
   13120:	cmp	r3, #0
   13124:	beq	13ec0 <strspn@plt+0x2edc>
   13128:	str	r3, [sp, #68]	; 0x44
   1312c:	ldr	fp, [sp, #72]	; 0x48
   13130:	b	12ae0 <strspn@plt+0x1afc>
   13134:	ldr	r3, [sp, #152]	; 0x98
   13138:	cmp	r3, #2
   1313c:	beq	13790 <strspn@plt+0x27ac>
   13140:	ldr	r3, [sp, #44]	; 0x2c
   13144:	ldr	r2, [sp, #28]
   13148:	and	r2, r3, r2
   1314c:	ands	r2, r9, r2
   13150:	bne	1379c <strspn@plt+0x27b8>
   13154:	mov	r4, #92	; 0x5c
   13158:	mov	r3, r4
   1315c:	ldr	r1, [sp, #44]	; 0x2c
   13160:	cmp	r1, #0
   13164:	moveq	r5, #0
   13168:	moveq	r8, r1
   1316c:	beq	13008 <strspn@plt+0x2024>
   13170:	mov	r4, r3
   13174:	mov	r5, #0
   13178:	ldr	r3, [sp, #28]
   1317c:	cmp	r3, #0
   13180:	bne	13784 <strspn@plt+0x27a0>
   13184:	ldr	r3, [sp, #40]	; 0x28
   13188:	eor	r9, r3, #1
   1318c:	and	r9, r9, r2
   13190:	ands	r9, r9, #255	; 0xff
   13194:	beq	131d8 <strspn@plt+0x21f4>
   13198:	cmp	fp, r7
   1319c:	movhi	r2, #39	; 0x27
   131a0:	ldrhi	r3, [sp, #32]
   131a4:	str	r9, [sp, #40]	; 0x28
   131a8:	strbhi	r2, [r3, r7]
   131ac:	add	r3, r7, #1
   131b0:	cmp	fp, r3
   131b4:	movhi	r1, #36	; 0x24
   131b8:	ldrhi	r2, [sp, #32]
   131bc:	strbhi	r1, [r2, r3]
   131c0:	add	r3, r7, #2
   131c4:	cmp	fp, r3
   131c8:	add	r7, r7, #3
   131cc:	ldrhi	r2, [sp, #32]
   131d0:	movhi	r1, #39	; 0x27
   131d4:	strbhi	r1, [r2, r3]
   131d8:	cmp	fp, r7
   131dc:	movhi	r2, #92	; 0x5c
   131e0:	ldrhi	r3, [sp, #32]
   131e4:	add	sl, sl, #1
   131e8:	strbhi	r2, [r3, r7]
   131ec:	add	r7, r7, #1
   131f0:	b	13078 <strspn@plt+0x2094>
   131f4:	ldr	r3, [sp, #152]	; 0x98
   131f8:	mov	r4, #11
   131fc:	sub	r2, r3, #2
   13200:	mov	r3, #118	; 0x76
   13204:	clz	r2, r2
   13208:	lsr	r2, r2, #5
   1320c:	b	1315c <strspn@plt+0x2178>
   13210:	mov	r4, #10
   13214:	mov	r3, #110	; 0x6e
   13218:	ldr	r2, [sp, #152]	; 0x98
   1321c:	ldr	r1, [sp, #28]
   13220:	sub	r2, r2, #2
   13224:	clz	r2, r2
   13228:	lsr	r2, r2, #5
   1322c:	ands	r1, r1, r2
   13230:	beq	1315c <strspn@plt+0x2178>
   13234:	ldr	sl, [sp, #32]
   13238:	mov	r8, fp
   1323c:	mov	r2, r1
   13240:	mov	r3, #2
   13244:	str	r3, [sp, #152]	; 0x98
   13248:	ldr	r9, [sp, #44]	; 0x2c
   1324c:	ldr	r3, [sp, #152]	; 0x98
   13250:	and	r9, r9, r2
   13254:	tst	r9, #255	; 0xff
   13258:	movne	r3, #4
   1325c:	str	r3, [sp, #152]	; 0x98
   13260:	ldr	r3, [sp, #156]	; 0x9c
   13264:	mov	ip, #0
   13268:	bic	r3, r3, #2
   1326c:	str	r3, [sp, #4]
   13270:	ldr	r3, [sp, #168]	; 0xa8
   13274:	ldr	r2, [sp, #56]	; 0x38
   13278:	str	r3, [sp, #16]
   1327c:	ldr	r3, [sp, #164]	; 0xa4
   13280:	mov	r1, r8
   13284:	str	r3, [sp, #12]
   13288:	ldr	r3, [sp, #152]	; 0x98
   1328c:	mov	r0, sl
   13290:	str	r3, [sp]
   13294:	str	ip, [sp, #8]
   13298:	ldr	r3, [sp, #24]
   1329c:	bl	12a84 <strspn@plt+0x1aa0>
   132a0:	mov	fp, r0
   132a4:	mov	r0, fp
   132a8:	add	sp, sp, #116	; 0x74
   132ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132b0:	ldr	r3, [sp, #152]	; 0x98
   132b4:	mov	r4, #8
   132b8:	sub	r2, r3, #2
   132bc:	mov	r3, #98	; 0x62
   132c0:	clz	r2, r2
   132c4:	lsr	r2, r2, #5
   132c8:	b	1315c <strspn@plt+0x2178>
   132cc:	ldr	r3, [sp, #152]	; 0x98
   132d0:	mov	r4, #7
   132d4:	sub	r2, r3, #2
   132d8:	mov	r3, #97	; 0x61
   132dc:	clz	r2, r2
   132e0:	lsr	r2, r2, #5
   132e4:	b	1315c <strspn@plt+0x2178>
   132e8:	ldr	r3, [sp, #44]	; 0x2c
   132ec:	cmp	r3, #0
   132f0:	beq	13ad4 <strspn@plt+0x2af0>
   132f4:	ldr	r3, [sp, #28]
   132f8:	cmp	r3, #0
   132fc:	bne	13dac <strspn@plt+0x2dc8>
   13300:	ldr	r3, [sp, #152]	; 0x98
   13304:	sub	r2, r3, #2
   13308:	ldr	r3, [sp, #40]	; 0x28
   1330c:	clz	r2, r2
   13310:	eor	r3, r3, #1
   13314:	lsr	r2, r2, #5
   13318:	ands	r3, r2, r3
   1331c:	moveq	r1, r7
   13320:	beq	13364 <strspn@plt+0x2380>
   13324:	cmp	fp, r7
   13328:	movhi	r0, #39	; 0x27
   1332c:	ldrhi	r1, [sp, #32]
   13330:	str	r3, [sp, #40]	; 0x28
   13334:	strbhi	r0, [r1, r7]
   13338:	add	r1, r7, #1
   1333c:	cmp	fp, r1
   13340:	movhi	ip, #36	; 0x24
   13344:	ldrhi	r0, [sp, #32]
   13348:	strbhi	ip, [r0, r1]
   1334c:	add	r1, r7, #2
   13350:	cmp	fp, r1
   13354:	movhi	ip, #39	; 0x27
   13358:	ldrhi	r0, [sp, #32]
   1335c:	strbhi	ip, [r0, r1]
   13360:	add	r1, r7, #3
   13364:	cmp	fp, r1
   13368:	movhi	r0, #92	; 0x5c
   1336c:	ldrhi	r3, [sp, #32]
   13370:	add	r7, r1, #1
   13374:	strbhi	r0, [r3, r1]
   13378:	cmp	r8, #0
   1337c:	beq	13cc0 <strspn@plt+0x2cdc>
   13380:	ldr	r0, [sp, #24]
   13384:	add	r3, sl, #1
   13388:	cmp	r3, r0
   1338c:	bcs	13bfc <strspn@plt+0x2c18>
   13390:	ldr	r0, [sp, #56]	; 0x38
   13394:	ldrb	r3, [r0, r3]
   13398:	sub	r3, r3, #48	; 0x30
   1339c:	cmp	r3, #9
   133a0:	bhi	13bfc <strspn@plt+0x2c18>
   133a4:	cmp	fp, r7
   133a8:	movhi	r3, #48	; 0x30
   133ac:	ldrhi	r0, [sp, #32]
   133b0:	ldr	r5, [sp, #28]
   133b4:	mov	r4, #48	; 0x30
   133b8:	strbhi	r3, [r0, r7]
   133bc:	add	r3, r1, #2
   133c0:	cmp	fp, r3
   133c4:	movhi	r0, #48	; 0x30
   133c8:	ldrhi	ip, [sp, #32]
   133cc:	add	r7, r1, #3
   133d0:	strbhi	r0, [ip, r3]
   133d4:	b	13008 <strspn@plt+0x2024>
   133d8:	mov	r5, #0
   133dc:	ldr	r3, [sp, #152]	; 0x98
   133e0:	sub	r2, r3, #2
   133e4:	ldr	r3, [sp, #28]
   133e8:	clz	r2, r2
   133ec:	lsr	r2, r2, #5
   133f0:	ands	r8, r3, r2
   133f4:	beq	13008 <strspn@plt+0x2024>
   133f8:	mov	r3, r8
   133fc:	mov	r2, r3
   13400:	mov	r3, #2
   13404:	ldr	sl, [sp, #32]
   13408:	mov	r8, fp
   1340c:	str	r3, [sp, #152]	; 0x98
   13410:	b	13248 <strspn@plt+0x2264>
   13414:	ldr	r3, [sp, #152]	; 0x98
   13418:	cmp	r3, #2
   1341c:	beq	13b40 <strspn@plt+0x2b5c>
   13420:	cmp	r3, #5
   13424:	beq	13b00 <strspn@plt+0x2b1c>
   13428:	mov	r5, #0
   1342c:	sub	r2, r3, #2
   13430:	mov	r8, r5
   13434:	clz	r2, r2
   13438:	mov	r4, #63	; 0x3f
   1343c:	lsr	r2, r2, #5
   13440:	b	13008 <strspn@plt+0x2024>
   13444:	ldr	r3, [sp, #152]	; 0x98
   13448:	cmp	r3, #2
   1344c:	beq	13b60 <strspn@plt+0x2b7c>
   13450:	mov	r2, #0
   13454:	str	r5, [sp, #68]	; 0x44
   13458:	mov	r8, r2
   1345c:	mov	r4, #39	; 0x27
   13460:	b	13008 <strspn@plt+0x2024>
   13464:	mov	r4, #13
   13468:	mov	r3, #114	; 0x72
   1346c:	b	13218 <strspn@plt+0x2234>
   13470:	ldr	r3, [sp, #152]	; 0x98
   13474:	mov	r8, #0
   13478:	sub	r2, r3, #2
   1347c:	clz	r2, r2
   13480:	lsr	r2, r2, #5
   13484:	b	13008 <strspn@plt+0x2024>
   13488:	ldr	r3, [sp, #152]	; 0x98
   1348c:	mov	r4, #12
   13490:	sub	r2, r3, #2
   13494:	mov	r3, #102	; 0x66
   13498:	clz	r2, r2
   1349c:	lsr	r2, r2, #5
   134a0:	b	1315c <strspn@plt+0x2178>
   134a4:	mov	r5, r6
   134a8:	b	133dc <strspn@plt+0x23f8>
   134ac:	ldr	r3, [sp, #152]	; 0x98
   134b0:	sub	r2, r3, #2
   134b4:	mov	r3, #116	; 0x74
   134b8:	clz	r2, r2
   134bc:	lsr	r2, r2, #5
   134c0:	b	1315c <strspn@plt+0x2178>
   134c4:	ldr	r8, [sp, #76]	; 0x4c
   134c8:	cmp	r8, #1
   134cc:	bne	1397c <strspn@plt+0x2998>
   134d0:	bl	10ee8 <__ctype_b_loc@plt>
   134d4:	sxth	r3, r4
   134d8:	mov	ip, r8
   134dc:	lsl	r3, r3, #1
   134e0:	ldr	r2, [r0]
   134e4:	ldrh	r3, [r2, r3]
   134e8:	and	r3, r3, #16384	; 0x4000
   134ec:	cmp	r3, #0
   134f0:	movne	r5, #1
   134f4:	moveq	r5, #0
   134f8:	moveq	r3, #1
   134fc:	movne	r3, #0
   13500:	ldr	r2, [sp, #44]	; 0x2c
   13504:	and	r3, r3, r2
   13508:	ands	r8, r3, #255	; 0xff
   1350c:	bne	13810 <strspn@plt+0x282c>
   13510:	ldr	r3, [sp, #152]	; 0x98
   13514:	sub	r2, r3, #2
   13518:	clz	r2, r2
   1351c:	lsr	r2, r2, #5
   13520:	b	13008 <strspn@plt+0x2024>
   13524:	ldr	r3, [sp, #56]	; 0x38
   13528:	add	r3, r3, sl
   1352c:	str	r3, [sp, #48]	; 0x30
   13530:	ldr	r3, [sp, #48]	; 0x30
   13534:	mov	r6, #0
   13538:	ldrb	r4, [r3]
   1353c:	cmp	r4, #126	; 0x7e
   13540:	ldrls	pc, [pc, r4, lsl #2]
   13544:	b	134c4 <strspn@plt+0x24e0>
   13548:	andeq	r3, r1, r8, ror #5
   1354c:	andeq	r3, r1, r4, asr #9
   13550:	andeq	r3, r1, r4, asr #9
   13554:	andeq	r3, r1, r4, asr #9
   13558:	andeq	r3, r1, r4, asr #9
   1355c:	andeq	r3, r1, r4, asr #9
   13560:	andeq	r3, r1, r4, asr #9
   13564:	andeq	r3, r1, ip, asr #5
   13568:			; <UNDEFINED> instruction: 0x000132b0
   1356c:	andeq	r3, r1, r4, asr #14
   13570:	andeq	r3, r1, r0, lsl r2
   13574:	strdeq	r3, [r1], -r4
   13578:	andeq	r3, r1, r8, lsl #9
   1357c:	andeq	r3, r1, r4, ror #8
   13580:	andeq	r3, r1, r4, asr #9
   13584:	andeq	r3, r1, r4, asr #9
   13588:	andeq	r3, r1, r4, asr #9
   1358c:	andeq	r3, r1, r4, asr #9
   13590:	andeq	r3, r1, r4, asr #9
   13594:	andeq	r3, r1, r4, asr #9
   13598:	andeq	r3, r1, r4, asr #9
   1359c:	andeq	r3, r1, r4, asr #9
   135a0:	andeq	r3, r1, r4, asr #9
   135a4:	andeq	r3, r1, r4, asr #9
   135a8:	andeq	r3, r1, r4, asr #9
   135ac:	andeq	r3, r1, r4, asr #9
   135b0:	andeq	r3, r1, r4, asr #9
   135b4:	andeq	r3, r1, r4, asr #9
   135b8:	andeq	r3, r1, r4, asr #9
   135bc:	andeq	r3, r1, r4, asr #9
   135c0:	andeq	r3, r1, r4, asr #9
   135c4:	andeq	r3, r1, r4, asr #9
   135c8:	ldrdeq	r3, [r1], -ip
   135cc:	ldrdeq	r3, [r1], -r8
   135d0:	ldrdeq	r3, [r1], -r8
   135d4:	andeq	r2, r1, r8, ror #31
   135d8:	ldrdeq	r3, [r1], -r8
   135dc:	andeq	r3, r1, r0, ror r4
   135e0:	ldrdeq	r3, [r1], -r8
   135e4:	andeq	r3, r1, r4, asr #8
   135e8:	ldrdeq	r3, [r1], -r8
   135ec:	ldrdeq	r3, [r1], -r8
   135f0:	ldrdeq	r3, [r1], -r8
   135f4:	andeq	r3, r1, r0, ror r4
   135f8:	andeq	r3, r1, r0, ror r4
   135fc:	andeq	r3, r1, r0, ror r4
   13600:	andeq	r3, r1, r0, ror r4
   13604:	andeq	r3, r1, r0, ror r4
   13608:	andeq	r3, r1, r0, ror r4
   1360c:	andeq	r3, r1, r0, ror r4
   13610:	andeq	r3, r1, r0, ror r4
   13614:	andeq	r3, r1, r0, ror r4
   13618:	andeq	r3, r1, r0, ror r4
   1361c:	andeq	r3, r1, r0, ror r4
   13620:	andeq	r3, r1, r0, ror r4
   13624:	andeq	r3, r1, r0, ror r4
   13628:	andeq	r3, r1, r0, ror r4
   1362c:	andeq	r3, r1, r0, ror r4
   13630:	andeq	r3, r1, r0, ror r4
   13634:	ldrdeq	r3, [r1], -r8
   13638:	ldrdeq	r3, [r1], -r8
   1363c:	ldrdeq	r3, [r1], -r8
   13640:	ldrdeq	r3, [r1], -r8
   13644:	andeq	r3, r1, r4, lsl r4
   13648:	andeq	r3, r1, r4, asr #9
   1364c:	andeq	r3, r1, r0, ror r4
   13650:	andeq	r3, r1, r0, ror r4
   13654:	andeq	r3, r1, r0, ror r4
   13658:	andeq	r3, r1, r0, ror r4
   1365c:	andeq	r3, r1, r0, ror r4
   13660:	andeq	r3, r1, r0, ror r4
   13664:	andeq	r3, r1, r0, ror r4
   13668:	andeq	r3, r1, r0, ror r4
   1366c:	andeq	r3, r1, r0, ror r4
   13670:	andeq	r3, r1, r0, ror r4
   13674:	andeq	r3, r1, r0, ror r4
   13678:	andeq	r3, r1, r0, ror r4
   1367c:	andeq	r3, r1, r0, ror r4
   13680:	andeq	r3, r1, r0, ror r4
   13684:	andeq	r3, r1, r0, ror r4
   13688:	andeq	r3, r1, r0, ror r4
   1368c:	andeq	r3, r1, r0, ror r4
   13690:	andeq	r3, r1, r0, ror r4
   13694:	andeq	r3, r1, r0, ror r4
   13698:	andeq	r3, r1, r0, ror r4
   1369c:	andeq	r3, r1, r0, ror r4
   136a0:	andeq	r3, r1, r0, ror r4
   136a4:	andeq	r3, r1, r0, ror r4
   136a8:	andeq	r3, r1, r0, ror r4
   136ac:	andeq	r3, r1, r0, ror r4
   136b0:	andeq	r3, r1, r0, ror r4
   136b4:	ldrdeq	r3, [r1], -r8
   136b8:	andeq	r3, r1, r4, lsr r1
   136bc:	andeq	r3, r1, r0, ror r4
   136c0:	ldrdeq	r3, [r1], -r8
   136c4:	andeq	r3, r1, r0, ror r4
   136c8:	ldrdeq	r3, [r1], -r8
   136cc:	andeq	r3, r1, r0, ror r4
   136d0:	andeq	r3, r1, r0, ror r4
   136d4:	andeq	r3, r1, r0, ror r4
   136d8:	andeq	r3, r1, r0, ror r4
   136dc:	andeq	r3, r1, r0, ror r4
   136e0:	andeq	r3, r1, r0, ror r4
   136e4:	andeq	r3, r1, r0, ror r4
   136e8:	andeq	r3, r1, r0, ror r4
   136ec:	andeq	r3, r1, r0, ror r4
   136f0:	andeq	r3, r1, r0, ror r4
   136f4:	andeq	r3, r1, r0, ror r4
   136f8:	andeq	r3, r1, r0, ror r4
   136fc:	andeq	r3, r1, r0, ror r4
   13700:	andeq	r3, r1, r0, ror r4
   13704:	andeq	r3, r1, r0, ror r4
   13708:	andeq	r3, r1, r0, ror r4
   1370c:	andeq	r3, r1, r0, ror r4
   13710:	andeq	r3, r1, r0, ror r4
   13714:	andeq	r3, r1, r0, ror r4
   13718:	andeq	r3, r1, r0, ror r4
   1371c:	andeq	r3, r1, r0, ror r4
   13720:	andeq	r3, r1, r0, ror r4
   13724:	andeq	r3, r1, r0, ror r4
   13728:	andeq	r3, r1, r0, ror r4
   1372c:	andeq	r3, r1, r0, ror r4
   13730:	andeq	r3, r1, r0, ror r4
   13734:	andeq	r2, r1, r8, asr #31
   13738:	ldrdeq	r3, [r1], -r8
   1373c:	andeq	r2, r1, r8, asr #31
   13740:	andeq	r2, r1, r8, ror #31
   13744:	mov	r3, #116	; 0x74
   13748:	b	13218 <strspn@plt+0x2234>
   1374c:	ldr	r3, [sp, #160]	; 0xa0
   13750:	cmp	r3, #0
   13754:	beq	13024 <strspn@plt+0x2040>
   13758:	lsr	r3, r4, #5
   1375c:	ldr	r0, [sp, #160]	; 0xa0
   13760:	uxtb	r3, r3
   13764:	and	r1, r4, #31
   13768:	ldr	r0, [r0, r3, lsl #2]
   1376c:	lsr	r3, r0, r1
   13770:	tst	r3, #1
   13774:	beq	13024 <strspn@plt+0x2040>
   13778:	ldr	r3, [sp, #28]
   1377c:	cmp	r3, #0
   13780:	beq	13184 <strspn@plt+0x21a0>
   13784:	ldr	sl, [sp, #32]
   13788:	mov	r8, fp
   1378c:	b	13248 <strspn@plt+0x2264>
   13790:	ldr	r3, [sp, #28]
   13794:	cmp	r3, #0
   13798:	bne	13cec <strspn@plt+0x2d08>
   1379c:	add	sl, sl, #1
   137a0:	ldr	r6, [sp, #40]	; 0x28
   137a4:	mov	r5, #0
   137a8:	mov	r4, #92	; 0x5c
   137ac:	b	13040 <strspn@plt+0x205c>
   137b0:	cmp	r9, r8
   137b4:	bne	13a24 <strspn@plt+0x2a40>
   137b8:	ldr	r0, [sp, #100]	; 0x64
   137bc:	bl	10e34 <iswprint@plt>
   137c0:	add	r5, r5, r4
   137c4:	cmp	r0, #0
   137c8:	add	r0, sp, #104	; 0x68
   137cc:	moveq	r6, #0
   137d0:	bl	10dd4 <mbsinit@plt>
   137d4:	cmp	r0, #0
   137d8:	beq	139b8 <strspn@plt+0x29d4>
   137dc:	mov	r2, r6
   137e0:	mov	ip, r5
   137e4:	eor	r5, r2, #1
   137e8:	ldr	r4, [sp, #80]	; 0x50
   137ec:	ldr	r6, [sp, #84]	; 0x54
   137f0:	ldr	r7, [sp, #88]	; 0x58
   137f4:	uxtb	r5, r5
   137f8:	cmp	ip, #1
   137fc:	bls	13cfc <strspn@plt+0x2d18>
   13800:	ldr	r3, [sp, #44]	; 0x2c
   13804:	and	r8, r3, r5
   13808:	mov	r5, r2
   1380c:	uxtb	r8, r8
   13810:	add	r2, sl, ip
   13814:	ldr	r0, [sp, #48]	; 0x30
   13818:	mov	r1, #0
   1381c:	str	r5, [sp, #48]	; 0x30
   13820:	ldr	r9, [sp, #28]
   13824:	ldr	ip, [sp, #40]	; 0x28
   13828:	ldr	r3, [sp, #32]
   1382c:	ldr	r5, [sp, #152]	; 0x98
   13830:	b	138ec <strspn@plt+0x2908>
   13834:	cmp	r9, #0
   13838:	bne	13c10 <strspn@plt+0x2c2c>
   1383c:	eor	r1, ip, #1
   13840:	cmp	r5, #2
   13844:	movne	r1, #0
   13848:	andeq	r1, r1, #1
   1384c:	cmp	r1, #0
   13850:	beq	13888 <strspn@plt+0x28a4>
   13854:	cmp	fp, r7
   13858:	movhi	ip, #39	; 0x27
   1385c:	strbhi	ip, [r3, r7]
   13860:	add	ip, r7, #1
   13864:	cmp	fp, ip
   13868:	movhi	lr, #36	; 0x24
   1386c:	strbhi	lr, [r3, ip]
   13870:	add	ip, r7, #2
   13874:	cmp	fp, ip
   13878:	movhi	lr, #39	; 0x27
   1387c:	strbhi	lr, [r3, ip]
   13880:	add	r7, r7, #3
   13884:	mov	ip, r1
   13888:	cmp	fp, r7
   1388c:	movhi	r1, #92	; 0x5c
   13890:	strbhi	r1, [r3, r7]
   13894:	add	r1, r7, #1
   13898:	cmp	fp, r1
   1389c:	lsrhi	lr, r4, #6
   138a0:	addhi	lr, lr, #48	; 0x30
   138a4:	strbhi	lr, [r3, r1]
   138a8:	add	lr, r7, #2
   138ac:	cmp	fp, lr
   138b0:	lsrhi	r1, r4, #3
   138b4:	andhi	r1, r1, #7
   138b8:	addhi	r1, r1, #48	; 0x30
   138bc:	add	sl, sl, #1
   138c0:	strbhi	r1, [r3, lr]
   138c4:	and	r4, r4, #7
   138c8:	cmp	r2, sl
   138cc:	add	r4, r4, #48	; 0x30
   138d0:	add	r7, r7, #3
   138d4:	bls	13c34 <strspn@plt+0x2c50>
   138d8:	mov	r1, r8
   138dc:	cmp	fp, r7
   138e0:	strbhi	r4, [r3, r7]
   138e4:	ldrb	r4, [r0, #1]!
   138e8:	add	r7, r7, #1
   138ec:	cmp	r8, #0
   138f0:	bne	13834 <strspn@plt+0x2850>
   138f4:	cmp	r6, #0
   138f8:	bne	13948 <strspn@plt+0x2964>
   138fc:	eor	r6, r1, #1
   13900:	and	r6, r6, ip
   13904:	add	sl, sl, #1
   13908:	cmp	r2, sl
   1390c:	uxtb	r6, r6
   13910:	bls	13970 <strspn@plt+0x298c>
   13914:	cmp	r6, #0
   13918:	beq	138dc <strspn@plt+0x28f8>
   1391c:	cmp	fp, r7
   13920:	movhi	ip, #39	; 0x27
   13924:	strbhi	ip, [r3, r7]
   13928:	add	ip, r7, #1
   1392c:	cmp	fp, ip
   13930:	movhi	lr, #39	; 0x27
   13934:	strbhi	lr, [r3, ip]
   13938:	add	r7, r7, #2
   1393c:	mov	r6, r8
   13940:	mov	ip, r8
   13944:	b	138dc <strspn@plt+0x28f8>
   13948:	cmp	fp, r7
   1394c:	eor	r6, r1, #1
   13950:	movhi	lr, #92	; 0x5c
   13954:	and	r6, r6, ip
   13958:	add	sl, sl, #1
   1395c:	strbhi	lr, [r3, r7]
   13960:	cmp	r2, sl
   13964:	add	r7, r7, #1
   13968:	uxtb	r6, r6
   1396c:	bhi	13914 <strspn@plt+0x2930>
   13970:	str	ip, [sp, #40]	; 0x28
   13974:	ldr	r5, [sp, #48]	; 0x30
   13978:	b	13040 <strspn@plt+0x205c>
   1397c:	ldr	r3, [sp, #24]
   13980:	cmn	r3, #1
   13984:	mov	r3, #0
   13988:	str	r3, [sp, #104]	; 0x68
   1398c:	str	r3, [sp, #108]	; 0x6c
   13990:	beq	13cb0 <strspn@plt+0x2ccc>
   13994:	mov	r2, r5
   13998:	mov	r3, #0
   1399c:	str	r7, [sp, #88]	; 0x58
   139a0:	ldr	r7, [sp, #152]	; 0x98
   139a4:	str	r5, [sp, #92]	; 0x5c
   139a8:	str	r6, [sp, #84]	; 0x54
   139ac:	mov	r5, r3
   139b0:	mov	r6, r2
   139b4:	str	r4, [sp, #80]	; 0x50
   139b8:	ldr	r3, [sp, #56]	; 0x38
   139bc:	add	r9, sl, r5
   139c0:	add	r8, r3, r9
   139c4:	ldr	r3, [sp, #24]
   139c8:	mov	r1, r8
   139cc:	sub	r2, r3, r9
   139d0:	add	r0, sp, #100	; 0x64
   139d4:	add	r3, sp, #104	; 0x68
   139d8:	bl	1568c <strspn@plt+0x46a8>
   139dc:	subs	r4, r0, #0
   139e0:	beq	13d88 <strspn@plt+0x2da4>
   139e4:	cmn	r4, #1
   139e8:	beq	13d68 <strspn@plt+0x2d84>
   139ec:	cmn	r4, #2
   139f0:	beq	13d08 <strspn@plt+0x2d24>
   139f4:	ldr	r2, [sp, #28]
   139f8:	cmp	r7, #2
   139fc:	movne	r2, #0
   13a00:	andeq	r2, r2, #1
   13a04:	cmp	r2, #0
   13a08:	beq	137b8 <strspn@plt+0x27d4>
   13a0c:	cmp	r4, #1
   13a10:	beq	137b8 <strspn@plt+0x27d4>
   13a14:	sub	r3, r4, #1
   13a18:	add	r9, r3, r9
   13a1c:	ldr	r3, [sp, #56]	; 0x38
   13a20:	add	r9, r3, r9
   13a24:	ldrb	r3, [r8, #1]!
   13a28:	sub	r3, r3, #91	; 0x5b
   13a2c:	cmp	r3, #33	; 0x21
   13a30:	ldrls	pc, [pc, r3, lsl #2]
   13a34:	b	137b0 <strspn@plt+0x27cc>
   13a38:	andeq	r3, r1, r0, asr #21
   13a3c:	andeq	r3, r1, r0, asr #21
   13a40:			; <UNDEFINED> instruction: 0x000137b0
   13a44:	andeq	r3, r1, r0, asr #21
   13a48:			; <UNDEFINED> instruction: 0x000137b0
   13a4c:	andeq	r3, r1, r0, asr #21
   13a50:			; <UNDEFINED> instruction: 0x000137b0
   13a54:			; <UNDEFINED> instruction: 0x000137b0
   13a58:			; <UNDEFINED> instruction: 0x000137b0
   13a5c:			; <UNDEFINED> instruction: 0x000137b0
   13a60:			; <UNDEFINED> instruction: 0x000137b0
   13a64:			; <UNDEFINED> instruction: 0x000137b0
   13a68:			; <UNDEFINED> instruction: 0x000137b0
   13a6c:			; <UNDEFINED> instruction: 0x000137b0
   13a70:			; <UNDEFINED> instruction: 0x000137b0
   13a74:			; <UNDEFINED> instruction: 0x000137b0
   13a78:			; <UNDEFINED> instruction: 0x000137b0
   13a7c:			; <UNDEFINED> instruction: 0x000137b0
   13a80:			; <UNDEFINED> instruction: 0x000137b0
   13a84:			; <UNDEFINED> instruction: 0x000137b0
   13a88:			; <UNDEFINED> instruction: 0x000137b0
   13a8c:			; <UNDEFINED> instruction: 0x000137b0
   13a90:			; <UNDEFINED> instruction: 0x000137b0
   13a94:			; <UNDEFINED> instruction: 0x000137b0
   13a98:			; <UNDEFINED> instruction: 0x000137b0
   13a9c:			; <UNDEFINED> instruction: 0x000137b0
   13aa0:			; <UNDEFINED> instruction: 0x000137b0
   13aa4:			; <UNDEFINED> instruction: 0x000137b0
   13aa8:			; <UNDEFINED> instruction: 0x000137b0
   13aac:			; <UNDEFINED> instruction: 0x000137b0
   13ab0:			; <UNDEFINED> instruction: 0x000137b0
   13ab4:			; <UNDEFINED> instruction: 0x000137b0
   13ab8:			; <UNDEFINED> instruction: 0x000137b0
   13abc:	andeq	r3, r1, r0, asr #21
   13ac0:	mov	r3, #2
   13ac4:	ldr	sl, [sp, #32]
   13ac8:	mov	r8, fp
   13acc:	str	r3, [sp, #152]	; 0x98
   13ad0:	b	13248 <strspn@plt+0x2264>
   13ad4:	ldr	r3, [sp, #156]	; 0x9c
   13ad8:	tst	r3, #1
   13adc:	bne	13c08 <strspn@plt+0x2c24>
   13ae0:	ldr	r3, [sp, #152]	; 0x98
   13ae4:	ldr	r4, [sp, #44]	; 0x2c
   13ae8:	sub	r2, r3, #2
   13aec:	mov	r5, #0
   13af0:	clz	r2, r2
   13af4:	mov	r8, r4
   13af8:	lsr	r2, r2, #5
   13afc:	b	13008 <strspn@plt+0x2024>
   13b00:	ldr	r3, [sp, #156]	; 0x9c
   13b04:	ands	r9, r3, #4
   13b08:	beq	13c40 <strspn@plt+0x2c5c>
   13b0c:	ldr	r2, [sp, #24]
   13b10:	add	r3, sl, #2
   13b14:	cmp	r3, r2
   13b18:	bcs	13b2c <strspn@plt+0x2b48>
   13b1c:	ldr	r2, [sp, #48]	; 0x30
   13b20:	ldrb	r4, [r2, #1]
   13b24:	cmp	r4, #63	; 0x3f
   13b28:	beq	13dc8 <strspn@plt+0x2de4>
   13b2c:	mov	r2, #0
   13b30:	mov	r8, r2
   13b34:	mov	r5, r2
   13b38:	mov	r4, #63	; 0x3f
   13b3c:	b	13008 <strspn@plt+0x2024>
   13b40:	ldr	r3, [sp, #28]
   13b44:	cmp	r3, #0
   13b48:	bne	13e6c <strspn@plt+0x2e88>
   13b4c:	mov	r2, r5
   13b50:	mov	r8, r3
   13b54:	mov	r5, #0
   13b58:	mov	r4, #63	; 0x3f
   13b5c:	b	13008 <strspn@plt+0x2024>
   13b60:	ldr	r3, [sp, #28]
   13b64:	cmp	r3, #0
   13b68:	bne	13e6c <strspn@plt+0x2e88>
   13b6c:	ldr	r2, [sp, #72]	; 0x48
   13b70:	adds	r3, fp, #0
   13b74:	movne	r3, #1
   13b78:	cmp	r2, #0
   13b7c:	movne	r3, #0
   13b80:	cmp	r3, #0
   13b84:	strne	fp, [sp, #72]	; 0x48
   13b88:	movne	fp, #0
   13b8c:	bne	13bc8 <strspn@plt+0x2be4>
   13b90:	cmp	fp, r7
   13b94:	movhi	r2, #39	; 0x27
   13b98:	ldrhi	r3, [sp, #32]
   13b9c:	strbhi	r2, [r3, r7]
   13ba0:	add	r3, r7, #1
   13ba4:	cmp	fp, r3
   13ba8:	movhi	r1, #92	; 0x5c
   13bac:	ldrhi	r2, [sp, #32]
   13bb0:	strbhi	r1, [r2, r3]
   13bb4:	add	r3, r7, #2
   13bb8:	cmp	fp, r3
   13bbc:	movhi	r1, #39	; 0x27
   13bc0:	ldrhi	r2, [sp, #32]
   13bc4:	strbhi	r1, [r2, r3]
   13bc8:	ldr	r3, [sp, #28]
   13bcc:	add	r7, r7, #3
   13bd0:	mov	r2, r5
   13bd4:	mov	r8, r3
   13bd8:	str	r5, [sp, #68]	; 0x44
   13bdc:	str	r3, [sp, #40]	; 0x28
   13be0:	mov	r4, #39	; 0x27
   13be4:	b	13008 <strspn@plt+0x2024>
   13be8:	ldr	r3, [sp, #56]	; 0x38
   13bec:	ldrb	r3, [r3, #1]
   13bf0:	adds	r3, r3, #0
   13bf4:	movne	r3, #1
   13bf8:	b	12fe0 <strspn@plt+0x1ffc>
   13bfc:	ldr	r5, [sp, #28]
   13c00:	mov	r4, #48	; 0x30
   13c04:	b	13008 <strspn@plt+0x2024>
   13c08:	add	sl, sl, #1
   13c0c:	b	12b38 <strspn@plt+0x1b54>
   13c10:	mov	sl, r3
   13c14:	ldr	r3, [sp, #28]
   13c18:	mov	r8, fp
   13c1c:	str	r3, [sp, #44]	; 0x2c
   13c20:	ldr	r3, [sp, #152]	; 0x98
   13c24:	sub	r2, r3, #2
   13c28:	clz	r2, r2
   13c2c:	lsr	r2, r2, #5
   13c30:	b	13248 <strspn@plt+0x2264>
   13c34:	str	ip, [sp, #40]	; 0x28
   13c38:	ldr	r5, [sp, #48]	; 0x30
   13c3c:	b	13078 <strspn@plt+0x2094>
   13c40:	mov	r2, r9
   13c44:	mov	r8, r9
   13c48:	mov	r5, #0
   13c4c:	mov	r4, #63	; 0x3f
   13c50:	b	13008 <strspn@plt+0x2024>
   13c54:	cmp	fp, #0
   13c58:	beq	13cd0 <strspn@plt+0x2cec>
   13c5c:	ldr	r1, [sp, #32]
   13c60:	mov	r3, #34	; 0x22
   13c64:	mov	r2, #1
   13c68:	strb	r3, [r1]
   13c6c:	ldr	r3, [pc, #332]	; 13dc0 <strspn@plt+0x2ddc>
   13c70:	str	r2, [sp, #52]	; 0x34
   13c74:	mov	r7, r2
   13c78:	str	r2, [sp, #44]	; 0x2c
   13c7c:	str	r3, [sp, #64]	; 0x40
   13c80:	b	12b28 <strspn@plt+0x1b44>
   13c84:	ldr	r3, [pc, #300]	; 13db8 <strspn@plt+0x2dd4>
   13c88:	str	r3, [sp, #64]	; 0x40
   13c8c:	mov	r3, #0
   13c90:	str	r3, [sp, #28]
   13c94:	mov	r3, #1
   13c98:	str	r3, [sp, #52]	; 0x34
   13c9c:	mov	r7, r3
   13ca0:	mov	r3, #2
   13ca4:	str	r3, [sp, #152]	; 0x98
   13ca8:	b	12b28 <strspn@plt+0x1b44>
   13cac:	bl	10fd8 <abort@plt>
   13cb0:	ldr	r0, [sp, #56]	; 0x38
   13cb4:	bl	10f00 <strlen@plt>
   13cb8:	str	r0, [sp, #24]
   13cbc:	b	13994 <strspn@plt+0x29b0>
   13cc0:	mov	r5, r8
   13cc4:	mov	r4, #48	; 0x30
   13cc8:	ldr	r8, [sp, #44]	; 0x2c
   13ccc:	b	13008 <strspn@plt+0x2024>
   13cd0:	mov	r3, #1
   13cd4:	str	r3, [sp, #52]	; 0x34
   13cd8:	mov	r7, r3
   13cdc:	str	r3, [sp, #44]	; 0x2c
   13ce0:	ldr	r3, [pc, #216]	; 13dc0 <strspn@plt+0x2ddc>
   13ce4:	str	r3, [sp, #64]	; 0x40
   13ce8:	b	12b28 <strspn@plt+0x1b44>
   13cec:	ldr	sl, [sp, #32]
   13cf0:	mov	r8, fp
   13cf4:	mov	r2, r3
   13cf8:	b	13248 <strspn@plt+0x2264>
   13cfc:	mov	r3, r5
   13d00:	mov	r5, r2
   13d04:	b	13500 <strspn@plt+0x251c>
   13d08:	ldr	r1, [sp, #24]
   13d0c:	mov	r2, r5
   13d10:	cmp	r1, r9
   13d14:	mov	ip, r5
   13d18:	ldr	r4, [sp, #80]	; 0x50
   13d1c:	ldr	r5, [sp, #92]	; 0x5c
   13d20:	ldr	r6, [sp, #84]	; 0x54
   13d24:	ldr	r7, [sp, #88]	; 0x58
   13d28:	bls	13d5c <strspn@plt+0x2d78>
   13d2c:	ldrb	r3, [r8]
   13d30:	cmp	r3, #0
   13d34:	bne	13d48 <strspn@plt+0x2d64>
   13d38:	b	13d60 <strspn@plt+0x2d7c>
   13d3c:	ldrb	r3, [r8, #1]!
   13d40:	cmp	r3, #0
   13d44:	beq	13e60 <strspn@plt+0x2e7c>
   13d48:	add	r2, r2, #1
   13d4c:	add	r3, sl, r2
   13d50:	cmp	r1, r3
   13d54:	bhi	13d3c <strspn@plt+0x2d58>
   13d58:	mov	ip, r2
   13d5c:	mov	r3, #0
   13d60:	mov	r2, r3
   13d64:	b	137f8 <strspn@plt+0x2814>
   13d68:	mov	r3, #0
   13d6c:	mov	ip, r5
   13d70:	ldr	r4, [sp, #80]	; 0x50
   13d74:	ldr	r5, [sp, #92]	; 0x5c
   13d78:	ldr	r6, [sp, #84]	; 0x54
   13d7c:	ldr	r7, [sp, #88]	; 0x58
   13d80:	mov	r2, r3
   13d84:	b	137f8 <strspn@plt+0x2814>
   13d88:	mov	r3, r6
   13d8c:	mov	ip, r5
   13d90:	eor	r5, r3, #1
   13d94:	mov	r2, r6
   13d98:	ldr	r4, [sp, #80]	; 0x50
   13d9c:	ldr	r6, [sp, #84]	; 0x54
   13da0:	ldr	r7, [sp, #88]	; 0x58
   13da4:	uxtb	r5, r5
   13da8:	b	137f8 <strspn@plt+0x2814>
   13dac:	ldr	sl, [sp, #32]
   13db0:	mov	r8, fp
   13db4:	b	13c1c <strspn@plt+0x2c38>
   13db8:	andeq	r6, r1, r0, ror r7
   13dbc:	andeq	r6, r1, r4, ror r7
   13dc0:	andeq	r6, r1, ip, ror #14
   13dc4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13dc8:	ldr	r2, [sp, #56]	; 0x38
   13dcc:	ldrb	r1, [r2, r3]
   13dd0:	sub	r2, r1, #33	; 0x21
   13dd4:	uxtb	r2, r2
   13dd8:	cmp	r2, #29
   13ddc:	bhi	13e7c <strspn@plt+0x2e98>
   13de0:	ldr	r0, [pc, #-36]	; 13dc4 <strspn@plt+0x2de0>
   13de4:	mov	ip, #1
   13de8:	ands	r2, r0, ip, lsl r2
   13dec:	beq	13e8c <strspn@plt+0x2ea8>
   13df0:	ldr	r2, [sp, #28]
   13df4:	cmp	r2, #0
   13df8:	bne	13f8c <strspn@plt+0x2fa8>
   13dfc:	cmp	fp, r7
   13e00:	ldr	r8, [sp, #28]
   13e04:	ldrhi	r2, [sp, #32]
   13e08:	mov	sl, r3
   13e0c:	mov	r5, r8
   13e10:	strbhi	r4, [r2, r7]
   13e14:	add	r2, r7, #1
   13e18:	cmp	fp, r2
   13e1c:	movhi	r0, #34	; 0x22
   13e20:	ldrhi	ip, [sp, #32]
   13e24:	mov	r4, r1
   13e28:	strbhi	r0, [ip, r2]
   13e2c:	add	r2, r7, #2
   13e30:	cmp	fp, r2
   13e34:	movhi	r0, #34	; 0x22
   13e38:	ldrhi	ip, [sp, #32]
   13e3c:	strbhi	r0, [ip, r2]
   13e40:	add	r2, r7, #3
   13e44:	cmp	fp, r2
   13e48:	movhi	r0, #63	; 0x3f
   13e4c:	ldrhi	ip, [sp, #32]
   13e50:	add	r7, r7, #4
   13e54:	strbhi	r0, [ip, r2]
   13e58:	mov	r2, r8
   13e5c:	b	13008 <strspn@plt+0x2024>
   13e60:	mov	ip, r2
   13e64:	mov	r2, r3
   13e68:	b	137f8 <strspn@plt+0x2814>
   13e6c:	ldr	sl, [sp, #32]
   13e70:	mov	r8, fp
   13e74:	ldr	r2, [sp, #28]
   13e78:	b	13248 <strspn@plt+0x2264>
   13e7c:	mov	r2, #0
   13e80:	mov	r8, r2
   13e84:	mov	r5, r2
   13e88:	b	13008 <strspn@plt+0x2024>
   13e8c:	mov	r8, r2
   13e90:	mov	r5, #0
   13e94:	b	13008 <strspn@plt+0x2024>
   13e98:	ldr	r1, [sp, #152]	; 0x98
   13e9c:	bl	12964 <strspn@plt+0x1980>
   13ea0:	str	r0, [sp, #168]	; 0xa8
   13ea4:	b	12ec4 <strspn@plt+0x1ee0>
   13ea8:	ldr	r1, [sp, #152]	; 0x98
   13eac:	bl	12964 <strspn@plt+0x1980>
   13eb0:	str	r0, [sp, #164]	; 0xa4
   13eb4:	b	12ea4 <strspn@plt+0x1ec0>
   13eb8:	ldr	r7, [sp, #28]
   13ebc:	b	12f04 <strspn@plt+0x1f20>
   13ec0:	ldr	sl, [sp, #32]
   13ec4:	ldr	r2, [sp, #68]	; 0x44
   13ec8:	mov	r8, fp
   13ecc:	mov	fp, r7
   13ed0:	ldr	r3, [sp, #64]	; 0x40
   13ed4:	cmp	r3, #0
   13ed8:	moveq	r2, #0
   13edc:	andne	r2, r2, #1
   13ee0:	cmp	r2, #0
   13ee4:	beq	13f10 <strspn@plt+0x2f2c>
   13ee8:	mov	r2, r3
   13eec:	ldrb	r3, [r3]
   13ef0:	cmp	r3, #0
   13ef4:	beq	13f10 <strspn@plt+0x2f2c>
   13ef8:	cmp	r8, fp
   13efc:	strbhi	r3, [sl, fp]
   13f00:	ldrb	r3, [r2, #1]!
   13f04:	add	fp, fp, #1
   13f08:	cmp	r3, #0
   13f0c:	bne	13ef8 <strspn@plt+0x2f14>
   13f10:	cmp	r8, fp
   13f14:	movhi	r3, #0
   13f18:	strbhi	r3, [sl, fp]
   13f1c:	b	132a4 <strspn@plt+0x22c0>
   13f20:	ldr	r3, [sp, #168]	; 0xa8
   13f24:	ldr	sl, [sp, #32]
   13f28:	str	r3, [sp, #16]
   13f2c:	ldr	r3, [sp, #164]	; 0xa4
   13f30:	mov	ip, #5
   13f34:	str	r3, [sp, #12]
   13f38:	ldr	r3, [sp, #160]	; 0xa0
   13f3c:	ldr	r2, [sp, #56]	; 0x38
   13f40:	str	r3, [sp, #8]
   13f44:	ldr	r3, [sp, #156]	; 0x9c
   13f48:	ldr	r1, [sp, #72]	; 0x48
   13f4c:	str	r3, [sp, #4]
   13f50:	mov	r0, sl
   13f54:	ldr	r3, [sp, #24]
   13f58:	str	ip, [sp]
   13f5c:	bl	12a84 <strspn@plt+0x1aa0>
   13f60:	mov	fp, r0
   13f64:	b	132a4 <strspn@plt+0x22c0>
   13f68:	mov	r8, fp
   13f6c:	ldr	sl, [sp, #32]
   13f70:	mov	fp, r7
   13f74:	mov	r2, r3
   13f78:	b	13ed0 <strspn@plt+0x2eec>
   13f7c:	mov	r8, fp
   13f80:	ldr	sl, [sp, #32]
   13f84:	mov	fp, r7
   13f88:	b	13ed0 <strspn@plt+0x2eec>
   13f8c:	ldr	sl, [sp, #32]
   13f90:	mov	r8, fp
   13f94:	b	13260 <strspn@plt+0x227c>
   13f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f9c:	sub	sp, sp, #52	; 0x34
   13fa0:	mov	r4, r0
   13fa4:	mov	r5, r3
   13fa8:	mov	sl, r1
   13fac:	mov	fp, r2
   13fb0:	bl	10f18 <__errno_location@plt>
   13fb4:	ldr	r7, [pc, #412]	; 14158 <strspn@plt+0x3174>
   13fb8:	cmn	r4, #-2147483647	; 0x80000001
   13fbc:	ldr	r6, [r7]
   13fc0:	mov	r8, r0
   13fc4:	movne	r0, #0
   13fc8:	moveq	r0, #1
   13fcc:	ldr	r3, [r8]
   13fd0:	orrs	r0, r0, r4, lsr #31
   13fd4:	str	r3, [sp, #24]
   13fd8:	bne	14154 <strspn@plt+0x3170>
   13fdc:	ldr	r2, [r7, #4]
   13fe0:	cmp	r4, r2
   13fe4:	blt	14044 <strspn@plt+0x3060>
   13fe8:	add	r9, r7, #8
   13fec:	cmp	r6, r9
   13ff0:	str	r2, [sp, #44]	; 0x2c
   13ff4:	beq	14124 <strspn@plt+0x3140>
   13ff8:	mov	r3, #8
   13ffc:	sub	r2, r4, r2
   14000:	mov	r0, r6
   14004:	str	r3, [sp]
   14008:	add	r2, r2, #1
   1400c:	mvn	r3, #-2147483648	; 0x80000000
   14010:	add	r1, sp, #44	; 0x2c
   14014:	bl	14e04 <strspn@plt+0x3e20>
   14018:	mov	r6, r0
   1401c:	str	r0, [r7]
   14020:	ldr	r0, [r7, #4]
   14024:	ldr	r2, [sp, #44]	; 0x2c
   14028:	mov	r1, #0
   1402c:	sub	r2, r2, r0
   14030:	add	r0, r6, r0, lsl #3
   14034:	lsl	r2, r2, #3
   14038:	bl	10f3c <memset@plt>
   1403c:	ldr	r3, [sp, #44]	; 0x2c
   14040:	str	r3, [r7, #4]
   14044:	add	r3, r6, r4, lsl #3
   14048:	ldr	r1, [r5, #4]
   1404c:	ldr	r7, [r3, #4]
   14050:	ldr	r9, [r6, r4, lsl #3]
   14054:	ldr	r2, [r5, #40]	; 0x28
   14058:	ldr	ip, [r5, #44]	; 0x2c
   1405c:	add	r0, r5, #8
   14060:	str	r3, [sp, #28]
   14064:	ldr	r3, [r5]
   14068:	orr	r1, r1, #1
   1406c:	mov	lr, r0
   14070:	str	r1, [sp, #32]
   14074:	str	r0, [sp, #36]	; 0x24
   14078:	str	r1, [sp, #4]
   1407c:	str	r2, [sp, #12]
   14080:	str	r3, [sp]
   14084:	mov	r0, r7
   14088:	mov	r1, r9
   1408c:	str	ip, [sp, #16]
   14090:	str	lr, [sp, #8]
   14094:	mov	r3, fp
   14098:	mov	r2, sl
   1409c:	bl	12a84 <strspn@plt+0x1aa0>
   140a0:	cmp	r9, r0
   140a4:	bhi	14110 <strspn@plt+0x312c>
   140a8:	ldr	r3, [pc, #172]	; 1415c <strspn@plt+0x3178>
   140ac:	add	r9, r0, #1
   140b0:	cmp	r7, r3
   140b4:	str	r9, [r6, r4, lsl #3]
   140b8:	beq	140c4 <strspn@plt+0x30e0>
   140bc:	mov	r0, r7
   140c0:	bl	12828 <strspn@plt+0x1844>
   140c4:	mov	r0, r9
   140c8:	bl	14ca0 <strspn@plt+0x3cbc>
   140cc:	ldr	lr, [sp, #28]
   140d0:	ldr	ip, [r5, #44]	; 0x2c
   140d4:	ldr	r4, [r5, #40]	; 0x28
   140d8:	mov	r3, fp
   140dc:	mov	r2, sl
   140e0:	mov	r1, r9
   140e4:	str	r0, [lr, #4]
   140e8:	ldr	lr, [r5]
   140ec:	ldr	r5, [sp, #36]	; 0x24
   140f0:	str	ip, [sp, #16]
   140f4:	str	r5, [sp, #8]
   140f8:	ldr	r5, [sp, #32]
   140fc:	str	r4, [sp, #12]
   14100:	str	r5, [sp, #4]
   14104:	str	lr, [sp]
   14108:	mov	r7, r0
   1410c:	bl	12a84 <strspn@plt+0x1aa0>
   14110:	ldr	r3, [sp, #24]
   14114:	mov	r0, r7
   14118:	str	r3, [r8]
   1411c:	add	sp, sp, #52	; 0x34
   14120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14124:	mov	r3, #8
   14128:	sub	r2, r4, r2
   1412c:	str	r3, [sp]
   14130:	add	r1, sp, #44	; 0x2c
   14134:	add	r2, r2, #1
   14138:	mvn	r3, #-2147483648	; 0x80000000
   1413c:	bl	14e04 <strspn@plt+0x3e20>
   14140:	mov	r6, r0
   14144:	ldm	r9, {r0, r1}
   14148:	str	r6, [r7]
   1414c:	stm	r6, {r0, r1}
   14150:	b	14020 <strspn@plt+0x303c>
   14154:	bl	10fd8 <abort@plt>
   14158:	andeq	r7, r2, r4, lsl #2
   1415c:	muleq	r2, r8, r1
   14160:	push	{r4, r5, r6, lr}
   14164:	mov	r5, r0
   14168:	bl	10f18 <__errno_location@plt>
   1416c:	cmp	r5, #0
   14170:	mov	r1, #48	; 0x30
   14174:	mov	r4, r0
   14178:	ldr	r0, [pc, #16]	; 14190 <strspn@plt+0x31ac>
   1417c:	ldr	r6, [r4]
   14180:	movne	r0, r5
   14184:	bl	15100 <strspn@plt+0x411c>
   14188:	str	r6, [r4]
   1418c:	pop	{r4, r5, r6, pc}
   14190:	muleq	r2, r8, r2
   14194:	ldr	r3, [pc, #12]	; 141a8 <strspn@plt+0x31c4>
   14198:	cmp	r0, #0
   1419c:	moveq	r0, r3
   141a0:	ldr	r0, [r0]
   141a4:	bx	lr
   141a8:	muleq	r2, r8, r2
   141ac:	ldr	r3, [pc, #12]	; 141c0 <strspn@plt+0x31dc>
   141b0:	cmp	r0, #0
   141b4:	moveq	r0, r3
   141b8:	str	r1, [r0]
   141bc:	bx	lr
   141c0:	muleq	r2, r8, r2
   141c4:	ldr	r3, [pc, #52]	; 14200 <strspn@plt+0x321c>
   141c8:	cmp	r0, #0
   141cc:	moveq	r0, r3
   141d0:	add	r3, r0, #8
   141d4:	push	{lr}		; (str lr, [sp, #-4]!)
   141d8:	lsr	lr, r1, #5
   141dc:	and	r1, r1, #31
   141e0:	ldr	ip, [r3, lr, lsl #2]
   141e4:	lsr	r0, ip, r1
   141e8:	eor	r2, r2, r0
   141ec:	and	r2, r2, #1
   141f0:	and	r0, r0, #1
   141f4:	eor	r1, ip, r2, lsl r1
   141f8:	str	r1, [r3, lr, lsl #2]
   141fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14200:	muleq	r2, r8, r2
   14204:	ldr	r3, [pc, #16]	; 1421c <strspn@plt+0x3238>
   14208:	cmp	r0, #0
   1420c:	movne	r3, r0
   14210:	ldr	r0, [r3, #4]
   14214:	str	r1, [r3, #4]
   14218:	bx	lr
   1421c:	muleq	r2, r8, r2
   14220:	ldr	r3, [pc, #44]	; 14254 <strspn@plt+0x3270>
   14224:	cmp	r0, #0
   14228:	moveq	r0, r3
   1422c:	mov	ip, #10
   14230:	cmp	r2, #0
   14234:	cmpne	r1, #0
   14238:	str	ip, [r0]
   1423c:	beq	1424c <strspn@plt+0x3268>
   14240:	str	r1, [r0, #40]	; 0x28
   14244:	str	r2, [r0, #44]	; 0x2c
   14248:	bx	lr
   1424c:	push	{r4, lr}
   14250:	bl	10fd8 <abort@plt>
   14254:	muleq	r2, r8, r2
   14258:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1425c:	sub	sp, sp, #24
   14260:	ldr	ip, [pc, #108]	; 142d4 <strspn@plt+0x32f0>
   14264:	ldr	r4, [sp, #56]	; 0x38
   14268:	mov	r9, r2
   1426c:	cmp	r4, #0
   14270:	moveq	r4, ip
   14274:	mov	sl, r3
   14278:	mov	r7, r0
   1427c:	mov	r8, r1
   14280:	bl	10f18 <__errno_location@plt>
   14284:	ldr	r3, [r4, #44]	; 0x2c
   14288:	mov	r1, r8
   1428c:	ldr	r6, [r0]
   14290:	str	r3, [sp, #16]
   14294:	ldr	r2, [r4, #40]	; 0x28
   14298:	add	r3, r4, #8
   1429c:	str	r3, [sp, #8]
   142a0:	str	r2, [sp, #12]
   142a4:	ldr	r2, [r4, #4]
   142a8:	mov	r5, r0
   142ac:	str	r2, [sp, #4]
   142b0:	ldr	ip, [r4]
   142b4:	mov	r3, sl
   142b8:	mov	r2, r9
   142bc:	mov	r0, r7
   142c0:	str	ip, [sp]
   142c4:	bl	12a84 <strspn@plt+0x1aa0>
   142c8:	str	r6, [r5]
   142cc:	add	sp, sp, #24
   142d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142d4:	muleq	r2, r8, r2
   142d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142dc:	cmp	r3, #0
   142e0:	sub	sp, sp, #44	; 0x2c
   142e4:	ldr	r4, [pc, #192]	; 143ac <strspn@plt+0x33c8>
   142e8:	mov	r6, r2
   142ec:	movne	r4, r3
   142f0:	mov	r9, r1
   142f4:	mov	r8, r0
   142f8:	bl	10f18 <__errno_location@plt>
   142fc:	ldr	r3, [r4, #44]	; 0x2c
   14300:	ldr	r5, [r4, #4]
   14304:	add	sl, r4, #8
   14308:	cmp	r6, #0
   1430c:	orreq	r5, r5, #1
   14310:	mov	r1, #0
   14314:	ldr	r2, [r0]
   14318:	str	r3, [sp, #16]
   1431c:	ldr	r3, [r4, #40]	; 0x28
   14320:	stmib	sp, {r5, sl}
   14324:	str	r3, [sp, #12]
   14328:	ldr	r3, [r4]
   1432c:	mov	r7, r0
   14330:	str	r2, [sp, #28]
   14334:	str	r3, [sp]
   14338:	mov	r2, r8
   1433c:	mov	r3, r9
   14340:	mov	r0, r1
   14344:	bl	12a84 <strspn@plt+0x1aa0>
   14348:	add	r1, r0, #1
   1434c:	mov	fp, r0
   14350:	mov	r0, r1
   14354:	str	r1, [sp, #36]	; 0x24
   14358:	bl	14ca0 <strspn@plt+0x3cbc>
   1435c:	ldr	r3, [r4, #44]	; 0x2c
   14360:	mov	r2, r8
   14364:	str	r3, [sp, #16]
   14368:	ldr	r3, [r4, #40]	; 0x28
   1436c:	str	r5, [sp, #4]
   14370:	str	r3, [sp, #12]
   14374:	str	sl, [sp, #8]
   14378:	ldr	ip, [r4]
   1437c:	ldr	r1, [sp, #36]	; 0x24
   14380:	mov	r3, r9
   14384:	str	ip, [sp]
   14388:	str	r0, [sp, #32]
   1438c:	bl	12a84 <strspn@plt+0x1aa0>
   14390:	ldr	r2, [sp, #28]
   14394:	cmp	r6, #0
   14398:	str	r2, [r7]
   1439c:	ldr	r0, [sp, #32]
   143a0:	strne	fp, [r6]
   143a4:	add	sp, sp, #44	; 0x2c
   143a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143ac:	muleq	r2, r8, r2
   143b0:	mov	r3, r2
   143b4:	mov	r2, #0
   143b8:	b	142d8 <strspn@plt+0x32f4>
   143bc:	push	{r4, r5, r6, r7, r8, lr}
   143c0:	ldr	r6, [pc, #116]	; 1443c <strspn@plt+0x3458>
   143c4:	ldr	r3, [r6, #4]
   143c8:	ldr	r7, [r6]
   143cc:	cmp	r3, #1
   143d0:	movgt	r5, r7
   143d4:	movgt	r4, #1
   143d8:	ble	143f8 <strspn@plt+0x3414>
   143dc:	ldr	r0, [r5, #12]
   143e0:	bl	12828 <strspn@plt+0x1844>
   143e4:	ldr	r3, [r6, #4]
   143e8:	add	r4, r4, #1
   143ec:	cmp	r3, r4
   143f0:	add	r5, r5, #8
   143f4:	bgt	143dc <strspn@plt+0x33f8>
   143f8:	ldr	r0, [r7, #4]
   143fc:	ldr	r4, [pc, #60]	; 14440 <strspn@plt+0x345c>
   14400:	cmp	r0, r4
   14404:	beq	14418 <strspn@plt+0x3434>
   14408:	bl	12828 <strspn@plt+0x1844>
   1440c:	mov	r3, #256	; 0x100
   14410:	str	r4, [r6, #12]
   14414:	str	r3, [r6, #8]
   14418:	ldr	r4, [pc, #36]	; 14444 <strspn@plt+0x3460>
   1441c:	cmp	r7, r4
   14420:	beq	14430 <strspn@plt+0x344c>
   14424:	mov	r0, r7
   14428:	bl	12828 <strspn@plt+0x1844>
   1442c:	str	r4, [r6]
   14430:	mov	r3, #1
   14434:	str	r3, [r6, #4]
   14438:	pop	{r4, r5, r6, r7, r8, pc}
   1443c:	andeq	r7, r2, r4, lsl #2
   14440:	muleq	r2, r8, r1
   14444:	andeq	r7, r2, ip, lsl #2
   14448:	ldr	r3, [pc, #4]	; 14454 <strspn@plt+0x3470>
   1444c:	mvn	r2, #0
   14450:	b	13f98 <strspn@plt+0x2fb4>
   14454:	muleq	r2, r8, r2
   14458:	ldr	r3, [pc]	; 14460 <strspn@plt+0x347c>
   1445c:	b	13f98 <strspn@plt+0x2fb4>
   14460:	muleq	r2, r8, r2
   14464:	mov	r1, r0
   14468:	ldr	r3, [pc, #8]	; 14478 <strspn@plt+0x3494>
   1446c:	mvn	r2, #0
   14470:	mov	r0, #0
   14474:	b	13f98 <strspn@plt+0x2fb4>
   14478:	muleq	r2, r8, r2
   1447c:	mov	r2, r1
   14480:	ldr	r3, [pc, #8]	; 14490 <strspn@plt+0x34ac>
   14484:	mov	r1, r0
   14488:	mov	r0, #0
   1448c:	b	13f98 <strspn@plt+0x2fb4>
   14490:	muleq	r2, r8, r2
   14494:	push	{r4, r5, lr}
   14498:	sub	sp, sp, #52	; 0x34
   1449c:	mov	r5, r2
   144a0:	mov	r4, r0
   144a4:	mov	r0, sp
   144a8:	bl	12934 <strspn@plt+0x1950>
   144ac:	mov	r3, sp
   144b0:	mov	r1, r5
   144b4:	mov	r0, r4
   144b8:	mvn	r2, #0
   144bc:	bl	13f98 <strspn@plt+0x2fb4>
   144c0:	add	sp, sp, #52	; 0x34
   144c4:	pop	{r4, r5, pc}
   144c8:	push	{r4, r5, r6, lr}
   144cc:	sub	sp, sp, #48	; 0x30
   144d0:	mov	r5, r2
   144d4:	mov	r6, r3
   144d8:	mov	r4, r0
   144dc:	mov	r0, sp
   144e0:	bl	12934 <strspn@plt+0x1950>
   144e4:	mov	r3, sp
   144e8:	mov	r2, r6
   144ec:	mov	r1, r5
   144f0:	mov	r0, r4
   144f4:	bl	13f98 <strspn@plt+0x2fb4>
   144f8:	add	sp, sp, #48	; 0x30
   144fc:	pop	{r4, r5, r6, pc}
   14500:	mov	r2, r1
   14504:	mov	r1, r0
   14508:	mov	r0, #0
   1450c:	b	14494 <strspn@plt+0x34b0>
   14510:	mov	r3, r2
   14514:	mov	r2, r1
   14518:	mov	r1, r0
   1451c:	mov	r0, #0
   14520:	b	144c8 <strspn@plt+0x34e4>
   14524:	push	{r4, r5, r6, r7, r8, lr}
   14528:	mov	r7, r0
   1452c:	ldr	lr, [pc, #100]	; 14598 <strspn@plt+0x35b4>
   14530:	mov	r8, r1
   14534:	mov	r4, r2
   14538:	ldm	lr!, {r0, r1, r2, r3}
   1453c:	sub	sp, sp, #48	; 0x30
   14540:	mov	ip, sp
   14544:	lsr	r5, r4, #5
   14548:	stmia	ip!, {r0, r1, r2, r3}
   1454c:	add	r6, sp, #8
   14550:	ldm	lr!, {r0, r1, r2, r3}
   14554:	and	r4, r4, #31
   14558:	stmia	ip!, {r0, r1, r2, r3}
   1455c:	ldm	lr, {r0, r1, r2, r3}
   14560:	stm	ip, {r0, r1, r2, r3}
   14564:	mov	r2, r8
   14568:	ldr	lr, [r6, r5, lsl #2]
   1456c:	mov	r1, r7
   14570:	mov	r3, sp
   14574:	lsr	ip, lr, r4
   14578:	eor	ip, ip, #1
   1457c:	and	ip, ip, #1
   14580:	mov	r0, #0
   14584:	eor	r4, lr, ip, lsl r4
   14588:	str	r4, [r6, r5, lsl #2]
   1458c:	bl	13f98 <strspn@plt+0x2fb4>
   14590:	add	sp, sp, #48	; 0x30
   14594:	pop	{r4, r5, r6, r7, r8, pc}
   14598:	muleq	r2, r8, r2
   1459c:	mov	r2, r1
   145a0:	mvn	r1, #0
   145a4:	b	14524 <strspn@plt+0x3540>
   145a8:	mov	r2, #58	; 0x3a
   145ac:	mvn	r1, #0
   145b0:	b	14524 <strspn@plt+0x3540>
   145b4:	mov	r2, #58	; 0x3a
   145b8:	b	14524 <strspn@plt+0x3540>
   145bc:	push	{r4, r5, r6, r7, lr}
   145c0:	sub	sp, sp, #100	; 0x64
   145c4:	mov	r6, r0
   145c8:	mov	r0, sp
   145cc:	mov	r7, r2
   145d0:	bl	12934 <strspn@plt+0x1950>
   145d4:	mov	ip, sp
   145d8:	add	lr, sp, #48	; 0x30
   145dc:	ldm	ip!, {r0, r1, r2, r3}
   145e0:	stmia	lr!, {r0, r1, r2, r3}
   145e4:	ldm	ip!, {r0, r1, r2, r3}
   145e8:	ldr	r5, [sp, #60]	; 0x3c
   145ec:	stmia	lr!, {r0, r1, r2, r3}
   145f0:	mvn	r4, r5
   145f4:	ldm	ip, {r0, r1, r2, r3}
   145f8:	and	ip, r4, #67108864	; 0x4000000
   145fc:	eor	ip, ip, r5
   14600:	str	ip, [sp, #60]	; 0x3c
   14604:	stm	lr, {r0, r1, r2, r3}
   14608:	mov	r1, r7
   1460c:	mov	r0, r6
   14610:	add	r3, sp, #48	; 0x30
   14614:	mvn	r2, #0
   14618:	bl	13f98 <strspn@plt+0x2fb4>
   1461c:	add	sp, sp, #100	; 0x64
   14620:	pop	{r4, r5, r6, r7, pc}
   14624:	push	{r4, r5, r6, r7, r8, lr}
   14628:	mov	r5, r1
   1462c:	ldr	lr, [pc, #100]	; 14698 <strspn@plt+0x36b4>
   14630:	mov	r4, r2
   14634:	mov	r7, r0
   14638:	mov	r8, r3
   1463c:	ldm	lr!, {r0, r1, r2, r3}
   14640:	sub	sp, sp, #48	; 0x30
   14644:	mov	ip, sp
   14648:	mov	r6, #10
   1464c:	stmia	ip!, {r0, r1, r2, r3}
   14650:	cmp	r4, #0
   14654:	cmpne	r5, #0
   14658:	ldm	lr!, {r0, r1, r2, r3}
   1465c:	str	r6, [sp]
   14660:	stmia	ip!, {r0, r1, r2, r3}
   14664:	ldm	lr, {r0, r1, r2, r3}
   14668:	stm	ip, {r0, r1, r2, r3}
   1466c:	beq	14694 <strspn@plt+0x36b0>
   14670:	mov	r3, sp
   14674:	mov	r1, r8
   14678:	mov	r0, r7
   1467c:	ldr	r2, [sp, #72]	; 0x48
   14680:	str	r5, [sp, #40]	; 0x28
   14684:	str	r4, [sp, #44]	; 0x2c
   14688:	bl	13f98 <strspn@plt+0x2fb4>
   1468c:	add	sp, sp, #48	; 0x30
   14690:	pop	{r4, r5, r6, r7, r8, pc}
   14694:	bl	10fd8 <abort@plt>
   14698:	muleq	r2, r8, r2
   1469c:	push	{lr}		; (str lr, [sp, #-4]!)
   146a0:	sub	sp, sp, #12
   146a4:	mvn	ip, #0
   146a8:	str	ip, [sp]
   146ac:	bl	14624 <strspn@plt+0x3640>
   146b0:	add	sp, sp, #12
   146b4:	pop	{pc}		; (ldr pc, [sp], #4)
   146b8:	push	{lr}		; (str lr, [sp, #-4]!)
   146bc:	sub	sp, sp, #12
   146c0:	mvn	ip, #0
   146c4:	mov	r3, r2
   146c8:	str	ip, [sp]
   146cc:	mov	r2, r1
   146d0:	mov	r1, r0
   146d4:	mov	r0, #0
   146d8:	bl	14624 <strspn@plt+0x3640>
   146dc:	add	sp, sp, #12
   146e0:	pop	{pc}		; (ldr pc, [sp], #4)
   146e4:	push	{lr}		; (str lr, [sp, #-4]!)
   146e8:	sub	sp, sp, #12
   146ec:	str	r3, [sp]
   146f0:	mov	r3, r2
   146f4:	mov	r2, r1
   146f8:	mov	r1, r0
   146fc:	mov	r0, #0
   14700:	bl	14624 <strspn@plt+0x3640>
   14704:	add	sp, sp, #12
   14708:	pop	{pc}		; (ldr pc, [sp], #4)
   1470c:	ldr	r3, [pc]	; 14714 <strspn@plt+0x3730>
   14710:	b	13f98 <strspn@plt+0x2fb4>
   14714:	andeq	r7, r2, r4, lsl r1
   14718:	mov	r2, r1
   1471c:	ldr	r3, [pc, #8]	; 1472c <strspn@plt+0x3748>
   14720:	mov	r1, r0
   14724:	mov	r0, #0
   14728:	b	13f98 <strspn@plt+0x2fb4>
   1472c:	andeq	r7, r2, r4, lsl r1
   14730:	ldr	r3, [pc, #4]	; 1473c <strspn@plt+0x3758>
   14734:	mvn	r2, #0
   14738:	b	13f98 <strspn@plt+0x2fb4>
   1473c:	andeq	r7, r2, r4, lsl r1
   14740:	mov	r1, r0
   14744:	ldr	r3, [pc, #8]	; 14754 <strspn@plt+0x3770>
   14748:	mvn	r2, #0
   1474c:	mov	r0, #0
   14750:	b	13f98 <strspn@plt+0x2fb4>
   14754:	andeq	r7, r2, r4, lsl r1
   14758:	push	{r4, r5, r6, lr}
   1475c:	sub	sp, sp, #32
   14760:	cmp	r1, #0
   14764:	mov	r4, r0
   14768:	ldr	r5, [sp, #48]	; 0x30
   1476c:	ldr	r6, [sp, #52]	; 0x34
   14770:	beq	14a88 <strspn@plt+0x3aa4>
   14774:	stm	sp, {r2, r3}
   14778:	mov	r3, r1
   1477c:	ldr	r2, [pc, #808]	; 14aac <strspn@plt+0x3ac8>
   14780:	mov	r1, #1
   14784:	bl	10f60 <__fprintf_chk@plt>
   14788:	mov	r2, #5
   1478c:	ldr	r1, [pc, #796]	; 14ab0 <strspn@plt+0x3acc>
   14790:	mov	r0, #0
   14794:	bl	10e10 <dcgettext@plt>
   14798:	ldr	r3, [pc, #788]	; 14ab4 <strspn@plt+0x3ad0>
   1479c:	ldr	r2, [pc, #788]	; 14ab8 <strspn@plt+0x3ad4>
   147a0:	str	r3, [sp]
   147a4:	mov	r1, #1
   147a8:	mov	r3, r0
   147ac:	mov	r0, r4
   147b0:	bl	10f60 <__fprintf_chk@plt>
   147b4:	mov	r1, r4
   147b8:	mov	r0, #10
   147bc:	bl	10e04 <fputc_unlocked@plt>
   147c0:	mov	r2, #5
   147c4:	ldr	r1, [pc, #752]	; 14abc <strspn@plt+0x3ad8>
   147c8:	mov	r0, #0
   147cc:	bl	10e10 <dcgettext@plt>
   147d0:	mov	r1, #1
   147d4:	ldr	r3, [pc, #740]	; 14ac0 <strspn@plt+0x3adc>
   147d8:	mov	r2, r0
   147dc:	mov	r0, r4
   147e0:	bl	10f60 <__fprintf_chk@plt>
   147e4:	mov	r1, r4
   147e8:	mov	r0, #10
   147ec:	bl	10e04 <fputc_unlocked@plt>
   147f0:	cmp	r6, #9
   147f4:	ldrls	pc, [pc, r6, lsl #2]
   147f8:	b	14aa0 <strspn@plt+0x3abc>
   147fc:	andeq	r4, r1, r0, lsl #17
   14800:	andeq	r4, r1, r8, lsl #17
   14804:			; <UNDEFINED> instruction: 0x000148b4
   14808:	andeq	r4, r1, r8, ror #17
   1480c:	andeq	r4, r1, r4, lsr #18
   14810:	andeq	r4, r1, r0, ror #18
   14814:	muleq	r1, ip, r9
   14818:	andeq	r4, r1, r0, ror #19
   1481c:	andeq	r4, r1, r0, lsr sl
   14820:	andeq	r4, r1, r4, lsr #16
   14824:	ldr	r1, [pc, #664]	; 14ac4 <strspn@plt+0x3ae0>
   14828:	mov	r2, #5
   1482c:	mov	r0, #0
   14830:	bl	10e10 <dcgettext@plt>
   14834:	ldr	ip, [r5, #32]
   14838:	ldr	r1, [r5, #28]
   1483c:	ldr	r2, [r5, #24]
   14840:	ldr	r3, [r5]
   14844:	ldr	r6, [r5, #20]
   14848:	str	ip, [sp, #28]
   1484c:	ldr	lr, [r5, #16]
   14850:	str	r1, [sp, #24]
   14854:	ldr	ip, [r5, #12]
   14858:	str	r2, [sp, #20]
   1485c:	ldr	r1, [r5, #8]
   14860:	ldr	r2, [r5, #4]
   14864:	str	r6, [sp, #16]
   14868:	stmib	sp, {r1, ip, lr}
   1486c:	mov	r1, #1
   14870:	str	r2, [sp]
   14874:	mov	r2, r0
   14878:	mov	r0, r4
   1487c:	bl	10f60 <__fprintf_chk@plt>
   14880:	add	sp, sp, #32
   14884:	pop	{r4, r5, r6, pc}
   14888:	mov	r2, #5
   1488c:	ldr	r1, [pc, #564]	; 14ac8 <strspn@plt+0x3ae4>
   14890:	mov	r0, #0
   14894:	bl	10e10 <dcgettext@plt>
   14898:	ldr	r3, [r5]
   1489c:	mov	r1, #1
   148a0:	mov	r2, r0
   148a4:	mov	r0, r4
   148a8:	add	sp, sp, #32
   148ac:	pop	{r4, r5, r6, lr}
   148b0:	b	10f60 <__fprintf_chk@plt>
   148b4:	mov	r2, #5
   148b8:	ldr	r1, [pc, #524]	; 14acc <strspn@plt+0x3ae8>
   148bc:	mov	r0, #0
   148c0:	bl	10e10 <dcgettext@plt>
   148c4:	ldr	r2, [r5, #4]
   148c8:	ldr	r3, [r5]
   148cc:	mov	r1, #1
   148d0:	str	r2, [sp, #48]	; 0x30
   148d4:	mov	r2, r0
   148d8:	mov	r0, r4
   148dc:	add	sp, sp, #32
   148e0:	pop	{r4, r5, r6, lr}
   148e4:	b	10f60 <__fprintf_chk@plt>
   148e8:	mov	r2, #5
   148ec:	ldr	r1, [pc, #476]	; 14ad0 <strspn@plt+0x3aec>
   148f0:	mov	r0, #0
   148f4:	bl	10e10 <dcgettext@plt>
   148f8:	ldr	r1, [r5, #8]
   148fc:	ldr	r2, [r5, #4]
   14900:	ldr	r3, [r5]
   14904:	str	r1, [sp, #52]	; 0x34
   14908:	str	r2, [sp, #48]	; 0x30
   1490c:	mov	r1, #1
   14910:	mov	r2, r0
   14914:	mov	r0, r4
   14918:	add	sp, sp, #32
   1491c:	pop	{r4, r5, r6, lr}
   14920:	b	10f60 <__fprintf_chk@plt>
   14924:	mov	r2, #5
   14928:	ldr	r1, [pc, #420]	; 14ad4 <strspn@plt+0x3af0>
   1492c:	mov	r0, #0
   14930:	bl	10e10 <dcgettext@plt>
   14934:	ldr	r1, [r5, #8]
   14938:	ldr	ip, [r5, #12]
   1493c:	ldr	r2, [r5, #4]
   14940:	ldr	r3, [r5]
   14944:	stmib	sp, {r1, ip}
   14948:	str	r2, [sp]
   1494c:	mov	r1, #1
   14950:	mov	r2, r0
   14954:	mov	r0, r4
   14958:	bl	10f60 <__fprintf_chk@plt>
   1495c:	b	14880 <strspn@plt+0x389c>
   14960:	mov	r2, #5
   14964:	ldr	r1, [pc, #364]	; 14ad8 <strspn@plt+0x3af4>
   14968:	mov	r0, #0
   1496c:	bl	10e10 <dcgettext@plt>
   14970:	add	r1, r5, #8
   14974:	ldr	r2, [r5, #4]
   14978:	ldm	r1, {r1, ip, lr}
   1497c:	ldr	r3, [r5]
   14980:	str	r2, [sp]
   14984:	stmib	sp, {r1, ip, lr}
   14988:	mov	r1, #1
   1498c:	mov	r2, r0
   14990:	mov	r0, r4
   14994:	bl	10f60 <__fprintf_chk@plt>
   14998:	b	14880 <strspn@plt+0x389c>
   1499c:	mov	r2, #5
   149a0:	ldr	r1, [pc, #308]	; 14adc <strspn@plt+0x3af8>
   149a4:	mov	r0, #0
   149a8:	bl	10e10 <dcgettext@plt>
   149ac:	add	r1, r5, #8
   149b0:	ldr	r2, [r5, #4]
   149b4:	ldm	r1, {r1, ip, lr}
   149b8:	ldr	r6, [r5, #20]
   149bc:	ldr	r3, [r5]
   149c0:	stmib	sp, {r1, ip, lr}
   149c4:	mov	r1, #1
   149c8:	str	r2, [sp]
   149cc:	str	r6, [sp, #16]
   149d0:	mov	r2, r0
   149d4:	mov	r0, r4
   149d8:	bl	10f60 <__fprintf_chk@plt>
   149dc:	b	14880 <strspn@plt+0x389c>
   149e0:	mov	r2, #5
   149e4:	ldr	r1, [pc, #244]	; 14ae0 <strspn@plt+0x3afc>
   149e8:	mov	r0, #0
   149ec:	bl	10e10 <dcgettext@plt>
   149f0:	ldr	r2, [r5, #24]
   149f4:	ldr	r3, [r5]
   149f8:	ldr	r6, [r5, #20]
   149fc:	ldr	lr, [r5, #16]
   14a00:	ldr	ip, [r5, #12]
   14a04:	str	r2, [sp, #20]
   14a08:	ldr	r1, [r5, #8]
   14a0c:	ldr	r2, [r5, #4]
   14a10:	str	r6, [sp, #16]
   14a14:	stmib	sp, {r1, ip, lr}
   14a18:	mov	r1, #1
   14a1c:	str	r2, [sp]
   14a20:	mov	r2, r0
   14a24:	mov	r0, r4
   14a28:	bl	10f60 <__fprintf_chk@plt>
   14a2c:	b	14880 <strspn@plt+0x389c>
   14a30:	mov	r2, #5
   14a34:	ldr	r1, [pc, #168]	; 14ae4 <strspn@plt+0x3b00>
   14a38:	mov	r0, #0
   14a3c:	bl	10e10 <dcgettext@plt>
   14a40:	ldr	r1, [r5, #28]
   14a44:	ldr	r2, [r5, #24]
   14a48:	ldr	r3, [r5]
   14a4c:	ldr	r6, [r5, #20]
   14a50:	ldr	lr, [r5, #16]
   14a54:	str	r1, [sp, #24]
   14a58:	ldr	ip, [r5, #12]
   14a5c:	str	r2, [sp, #20]
   14a60:	ldr	r1, [r5, #8]
   14a64:	ldr	r2, [r5, #4]
   14a68:	str	r6, [sp, #16]
   14a6c:	stmib	sp, {r1, ip, lr}
   14a70:	mov	r1, #1
   14a74:	str	r2, [sp]
   14a78:	mov	r2, r0
   14a7c:	mov	r0, r4
   14a80:	bl	10f60 <__fprintf_chk@plt>
   14a84:	b	14880 <strspn@plt+0x389c>
   14a88:	str	r3, [sp]
   14a8c:	mov	r1, #1
   14a90:	mov	r3, r2
   14a94:	ldr	r2, [pc, #76]	; 14ae8 <strspn@plt+0x3b04>
   14a98:	bl	10f60 <__fprintf_chk@plt>
   14a9c:	b	14788 <strspn@plt+0x37a4>
   14aa0:	mov	r2, #5
   14aa4:	ldr	r1, [pc, #64]	; 14aec <strspn@plt+0x3b08>
   14aa8:	b	1482c <strspn@plt+0x3848>
   14aac:	andeq	r6, r1, r0, ror #15
   14ab0:	strdeq	r6, [r1], -r4
   14ab4:	andeq	r0, r0, r6, ror #15
   14ab8:	andeq	r6, r1, ip, asr #21
   14abc:	strdeq	r6, [r1], -r8
   14ac0:	andeq	r6, r1, r4, lsr #17
   14ac4:	ldrdeq	r6, [r1], -r4
   14ac8:	andeq	r6, r1, r8, asr #17
   14acc:	ldrdeq	r6, [r1], -r8
   14ad0:	strdeq	r6, [r1], -r0
   14ad4:	andeq	r6, r1, ip, lsl #18
   14ad8:	andeq	r6, r1, ip, lsr #18
   14adc:	andeq	r6, r1, r0, asr r9
   14ae0:	andeq	r6, r1, r8, ror r9
   14ae4:	andeq	r6, r1, r4, lsr #19
   14ae8:	andeq	r6, r1, ip, ror #15
   14aec:	andeq	r6, r1, r8, lsl #20
   14af0:	push	{r4, r5, lr}
   14af4:	sub	sp, sp, #12
   14af8:	ldr	r5, [sp, #24]
   14afc:	ldr	ip, [r5]
   14b00:	cmp	ip, #0
   14b04:	beq	14b20 <strspn@plt+0x3b3c>
   14b08:	mov	lr, r5
   14b0c:	mov	ip, #0
   14b10:	ldr	r4, [lr, #4]!
   14b14:	add	ip, ip, #1
   14b18:	cmp	r4, #0
   14b1c:	bne	14b10 <strspn@plt+0x3b2c>
   14b20:	stm	sp, {r5, ip}
   14b24:	bl	14758 <strspn@plt+0x3774>
   14b28:	add	sp, sp, #12
   14b2c:	pop	{r4, r5, pc}
   14b30:	push	{r4, r5, lr}
   14b34:	sub	sp, sp, #52	; 0x34
   14b38:	add	r5, sp, #4
   14b3c:	ldr	r4, [sp, #64]	; 0x40
   14b40:	mov	ip, #0
   14b44:	sub	r4, r4, #4
   14b48:	ldr	lr, [r4, #4]!
   14b4c:	cmp	lr, #0
   14b50:	str	lr, [r5, #4]!
   14b54:	beq	14b64 <strspn@plt+0x3b80>
   14b58:	add	ip, ip, #1
   14b5c:	cmp	ip, #10
   14b60:	bne	14b48 <strspn@plt+0x3b64>
   14b64:	add	lr, sp, #8
   14b68:	str	ip, [sp, #4]
   14b6c:	str	lr, [sp]
   14b70:	bl	14758 <strspn@plt+0x3774>
   14b74:	add	sp, sp, #52	; 0x34
   14b78:	pop	{r4, r5, pc}
   14b7c:	push	{r3}		; (str r3, [sp, #-4]!)
   14b80:	push	{r4, lr}
   14b84:	sub	sp, sp, #60	; 0x3c
   14b88:	add	lr, sp, #56	; 0x38
   14b8c:	add	r3, sp, #72	; 0x48
   14b90:	str	r3, [lr, #-44]!	; 0xffffffd4
   14b94:	add	r4, sp, #68	; 0x44
   14b98:	mov	r3, #0
   14b9c:	ldr	ip, [r4, #4]!
   14ba0:	cmp	ip, #0
   14ba4:	str	ip, [lr, #4]!
   14ba8:	beq	14bb8 <strspn@plt+0x3bd4>
   14bac:	add	r3, r3, #1
   14bb0:	cmp	r3, #10
   14bb4:	bne	14b9c <strspn@plt+0x3bb8>
   14bb8:	add	ip, sp, #16
   14bbc:	str	r3, [sp, #4]
   14bc0:	str	ip, [sp]
   14bc4:	ldr	r3, [sp, #68]	; 0x44
   14bc8:	bl	14758 <strspn@plt+0x3774>
   14bcc:	add	sp, sp, #60	; 0x3c
   14bd0:	pop	{r4, lr}
   14bd4:	add	sp, sp, #4
   14bd8:	bx	lr
   14bdc:	ldr	r3, [pc, #116]	; 14c58 <strspn@plt+0x3c74>
   14be0:	push	{r4, lr}
   14be4:	mov	r0, #10
   14be8:	ldr	r1, [r3]
   14bec:	bl	10e04 <fputc_unlocked@plt>
   14bf0:	mov	r2, #5
   14bf4:	ldr	r1, [pc, #96]	; 14c5c <strspn@plt+0x3c78>
   14bf8:	mov	r0, #0
   14bfc:	bl	10e10 <dcgettext@plt>
   14c00:	ldr	r2, [pc, #88]	; 14c60 <strspn@plt+0x3c7c>
   14c04:	mov	r1, r0
   14c08:	mov	r0, #1
   14c0c:	bl	10f48 <__printf_chk@plt>
   14c10:	mov	r2, #5
   14c14:	ldr	r1, [pc, #72]	; 14c64 <strspn@plt+0x3c80>
   14c18:	mov	r0, #0
   14c1c:	bl	10e10 <dcgettext@plt>
   14c20:	ldr	r3, [pc, #64]	; 14c68 <strspn@plt+0x3c84>
   14c24:	ldr	r2, [pc, #64]	; 14c6c <strspn@plt+0x3c88>
   14c28:	mov	r1, r0
   14c2c:	mov	r0, #1
   14c30:	bl	10f48 <__printf_chk@plt>
   14c34:	mov	r2, #5
   14c38:	ldr	r1, [pc, #48]	; 14c70 <strspn@plt+0x3c8c>
   14c3c:	mov	r0, #0
   14c40:	bl	10e10 <dcgettext@plt>
   14c44:	ldr	r2, [pc, #40]	; 14c74 <strspn@plt+0x3c90>
   14c48:	pop	{r4, lr}
   14c4c:	mov	r1, r0
   14c50:	mov	r0, #1
   14c54:	b	10f48 <__printf_chk@plt>
   14c58:	andeq	r7, r2, ip, asr r1
   14c5c:	andeq	r6, r1, r4, asr #20
   14c60:	andeq	r6, r1, r8, asr sl
   14c64:	andeq	r6, r1, r0, ror sl
   14c68:	andeq	r6, r1, r4, ror #6
   14c6c:	andeq	r6, r1, ip, lsl #7
   14c70:	andeq	r6, r1, r4, lsl #21
   14c74:	andeq	r6, r1, ip, lsr #21
   14c78:	push	{r4, lr}
   14c7c:	bl	152f0 <strspn@plt+0x430c>
   14c80:	cmp	r0, #0
   14c84:	popne	{r4, pc}
   14c88:	bl	151c0 <strspn@plt+0x41dc>
   14c8c:	push	{r4, lr}
   14c90:	bl	152f0 <strspn@plt+0x430c>
   14c94:	cmp	r0, #0
   14c98:	popne	{r4, pc}
   14c9c:	bl	151c0 <strspn@plt+0x41dc>
   14ca0:	push	{r4, lr}
   14ca4:	bl	152f0 <strspn@plt+0x430c>
   14ca8:	cmp	r0, #0
   14cac:	popne	{r4, pc}
   14cb0:	bl	151c0 <strspn@plt+0x41dc>
   14cb4:	push	{r4, r5, r6, lr}
   14cb8:	mov	r5, r0
   14cbc:	mov	r4, r1
   14cc0:	bl	1531c <strspn@plt+0x4338>
   14cc4:	cmp	r0, #0
   14cc8:	popne	{r4, r5, r6, pc}
   14ccc:	adds	r4, r4, #0
   14cd0:	movne	r4, #1
   14cd4:	cmp	r5, #0
   14cd8:	orreq	r4, r4, #1
   14cdc:	cmp	r4, #0
   14ce0:	popeq	{r4, r5, r6, pc}
   14ce4:	bl	151c0 <strspn@plt+0x41dc>
   14ce8:	push	{r4, lr}
   14cec:	cmp	r1, #0
   14cf0:	orreq	r1, r1, #1
   14cf4:	bl	1531c <strspn@plt+0x4338>
   14cf8:	cmp	r0, #0
   14cfc:	popne	{r4, pc}
   14d00:	bl	151c0 <strspn@plt+0x41dc>
   14d04:	push	{r4, r5, r6, lr}
   14d08:	mov	r6, r0
   14d0c:	mov	r5, r1
   14d10:	mov	r4, r2
   14d14:	bl	156e0 <strspn@plt+0x46fc>
   14d18:	cmp	r0, #0
   14d1c:	popne	{r4, r5, r6, pc}
   14d20:	cmp	r6, #0
   14d24:	beq	14d34 <strspn@plt+0x3d50>
   14d28:	cmp	r5, #0
   14d2c:	cmpne	r4, #0
   14d30:	popeq	{r4, r5, r6, pc}
   14d34:	bl	151c0 <strspn@plt+0x41dc>
   14d38:	b	14d04 <strspn@plt+0x3d20>
   14d3c:	cmp	r2, #0
   14d40:	cmpne	r1, #0
   14d44:	moveq	r2, #1
   14d48:	moveq	r1, r2
   14d4c:	push	{r4, lr}
   14d50:	bl	156e0 <strspn@plt+0x46fc>
   14d54:	cmp	r0, #0
   14d58:	popne	{r4, pc}
   14d5c:	bl	151c0 <strspn@plt+0x41dc>
   14d60:	mov	r2, r1
   14d64:	mov	r1, r0
   14d68:	mov	r0, #0
   14d6c:	b	14d04 <strspn@plt+0x3d20>
   14d70:	mov	r2, r1
   14d74:	mov	r1, r0
   14d78:	mov	r0, #0
   14d7c:	b	14d3c <strspn@plt+0x3d58>
   14d80:	push	{r4, r5, r6, lr}
   14d84:	subs	r6, r0, #0
   14d88:	sub	sp, sp, #8
   14d8c:	mov	r5, r1
   14d90:	ldr	r4, [r1]
   14d94:	beq	14dd0 <strspn@plt+0x3dec>
   14d98:	lsr	r1, r4, #1
   14d9c:	add	r3, r1, #1
   14da0:	mvn	r3, r3
   14da4:	cmp	r4, r3
   14da8:	bhi	14dcc <strspn@plt+0x3de8>
   14dac:	add	r4, r4, #1
   14db0:	add	r4, r4, r1
   14db4:	mov	r0, r6
   14db8:	mov	r1, r4
   14dbc:	bl	14d04 <strspn@plt+0x3d20>
   14dc0:	str	r4, [r5]
   14dc4:	add	sp, sp, #8
   14dc8:	pop	{r4, r5, r6, pc}
   14dcc:	bl	151c0 <strspn@plt+0x41dc>
   14dd0:	cmp	r4, #0
   14dd4:	bne	14db4 <strspn@plt+0x3dd0>
   14dd8:	mov	r1, r2
   14ddc:	mov	r0, #64	; 0x40
   14de0:	str	r2, [sp, #4]
   14de4:	bl	15820 <strspn@plt+0x483c>
   14de8:	ldr	r2, [sp, #4]
   14dec:	cmp	r0, #0
   14df0:	movne	r4, r0
   14df4:	addeq	r4, r0, #1
   14df8:	b	14db4 <strspn@plt+0x3dd0>
   14dfc:	mov	r2, #1
   14e00:	b	14d80 <strspn@plt+0x3d9c>
   14e04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e08:	sub	sp, sp, #12
   14e0c:	ldr	r6, [r1]
   14e10:	mov	sl, r1
   14e14:	mov	r9, r0
   14e18:	asrs	r4, r6, #1
   14e1c:	mov	r5, r2
   14e20:	mov	fp, r3
   14e24:	ldr	r7, [sp, #48]	; 0x30
   14e28:	bmi	14f94 <strspn@plt+0x3fb0>
   14e2c:	mvn	r3, #-2147483648	; 0x80000000
   14e30:	sub	r3, r3, r4
   14e34:	cmp	r6, r3
   14e38:	movle	r3, #0
   14e3c:	movgt	r3, #1
   14e40:	mvn	r8, fp
   14e44:	cmp	r3, #0
   14e48:	addeq	r4, r4, r6
   14e4c:	mvnne	r4, #-2147483648	; 0x80000000
   14e50:	lsr	r8, r8, #31
   14e54:	cmp	fp, r4
   14e58:	movge	r3, #0
   14e5c:	andlt	r3, r8, #1
   14e60:	cmp	r3, #0
   14e64:	beq	14f4c <strspn@plt+0x3f68>
   14e68:	cmp	r7, #0
   14e6c:	blt	1501c <strspn@plt+0x4038>
   14e70:	bne	15014 <strspn@plt+0x4030>
   14e74:	mov	r2, #64	; 0x40
   14e78:	mov	r1, r7
   14e7c:	mov	r0, r2
   14e80:	str	r2, [sp, #4]
   14e84:	bl	15a2c <strspn@plt+0x4a48>
   14e88:	ldr	r2, [sp, #4]
   14e8c:	mov	r1, r7
   14e90:	mov	r4, r0
   14e94:	mov	r0, r2
   14e98:	bl	15c4c <strspn@plt+0x4c68>
   14e9c:	ldr	r2, [sp, #4]
   14ea0:	sub	r1, r2, r1
   14ea4:	cmp	r9, #0
   14ea8:	sub	r3, r4, r6
   14eac:	streq	r9, [sl]
   14eb0:	cmp	r3, r5
   14eb4:	bge	14f38 <strspn@plt+0x3f54>
   14eb8:	cmp	r5, #0
   14ebc:	blt	14fa8 <strspn@plt+0x3fc4>
   14ec0:	cmp	r6, #0
   14ec4:	blt	14ee4 <strspn@plt+0x3f00>
   14ec8:	mvn	r3, #-2147483648	; 0x80000000
   14ecc:	sub	r3, r3, r5
   14ed0:	cmp	r6, r3
   14ed4:	movle	r3, #0
   14ed8:	movgt	r3, #1
   14edc:	cmp	r3, #0
   14ee0:	bne	150a4 <strspn@plt+0x40c0>
   14ee4:	add	r5, r6, r5
   14ee8:	cmp	fp, r5
   14eec:	movge	r8, #0
   14ef0:	andlt	r8, r8, #1
   14ef4:	cmp	r8, #0
   14ef8:	mov	r4, r5
   14efc:	bne	150a4 <strspn@plt+0x40c0>
   14f00:	cmp	r7, #0
   14f04:	blt	14fbc <strspn@plt+0x3fd8>
   14f08:	beq	14f34 <strspn@plt+0x3f50>
   14f0c:	cmp	r5, #0
   14f10:	blt	15064 <strspn@plt+0x4080>
   14f14:	mov	r1, r7
   14f18:	mvn	r0, #-2147483648	; 0x80000000
   14f1c:	bl	15a2c <strspn@plt+0x4a48>
   14f20:	cmp	r5, r0
   14f24:	movle	r0, #0
   14f28:	movgt	r0, #1
   14f2c:	cmp	r0, #0
   14f30:	bne	150a4 <strspn@plt+0x40c0>
   14f34:	mul	r1, r5, r7
   14f38:	mov	r0, r9
   14f3c:	bl	14cb4 <strspn@plt+0x3cd0>
   14f40:	str	r4, [sl]
   14f44:	add	sp, sp, #12
   14f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f4c:	cmp	r7, #0
   14f50:	blt	14fe8 <strspn@plt+0x4004>
   14f54:	beq	14e74 <strspn@plt+0x3e90>
   14f58:	cmp	r4, #0
   14f5c:	blt	15024 <strspn@plt+0x4040>
   14f60:	mov	r1, r7
   14f64:	mvn	r0, #-2147483648	; 0x80000000
   14f68:	bl	15a2c <strspn@plt+0x4a48>
   14f6c:	cmp	r0, r4
   14f70:	movge	r0, #0
   14f74:	movlt	r0, #1
   14f78:	cmp	r0, #0
   14f7c:	mvnne	r2, #-2147483648	; 0x80000000
   14f80:	bne	14e78 <strspn@plt+0x3e94>
   14f84:	mul	r1, r7, r4
   14f88:	cmp	r1, #63	; 0x3f
   14f8c:	bgt	14ea4 <strspn@plt+0x3ec0>
   14f90:	b	14e74 <strspn@plt+0x3e90>
   14f94:	rsb	r3, r4, #-2147483648	; 0x80000000
   14f98:	cmp	r6, r3
   14f9c:	movge	r3, #0
   14fa0:	movlt	r3, #1
   14fa4:	b	14e40 <strspn@plt+0x3e5c>
   14fa8:	rsb	r3, r5, #-2147483648	; 0x80000000
   14fac:	cmp	r6, r3
   14fb0:	movge	r3, #0
   14fb4:	movlt	r3, #1
   14fb8:	b	14edc <strspn@plt+0x3ef8>
   14fbc:	cmp	r5, #0
   14fc0:	blt	15048 <strspn@plt+0x4064>
   14fc4:	cmn	r7, #1
   14fc8:	beq	14f34 <strspn@plt+0x3f50>
   14fcc:	mov	r1, r7
   14fd0:	mov	r0, #-2147483648	; 0x80000000
   14fd4:	bl	15a2c <strspn@plt+0x4a48>
   14fd8:	cmp	r5, r0
   14fdc:	movle	r0, #0
   14fe0:	movgt	r0, #1
   14fe4:	b	14f2c <strspn@plt+0x3f48>
   14fe8:	cmp	r4, #0
   14fec:	blt	15088 <strspn@plt+0x40a4>
   14ff0:	cmn	r7, #1
   14ff4:	beq	14f84 <strspn@plt+0x3fa0>
   14ff8:	mov	r1, r7
   14ffc:	mov	r0, #-2147483648	; 0x80000000
   15000:	bl	15a2c <strspn@plt+0x4a48>
   15004:	cmp	r0, r4
   15008:	movge	r0, #0
   1500c:	movlt	r0, #1
   15010:	b	14f78 <strspn@plt+0x3f94>
   15014:	mov	r4, fp
   15018:	b	14f60 <strspn@plt+0x3f7c>
   1501c:	mov	r4, fp
   15020:	b	14ff0 <strspn@plt+0x400c>
   15024:	cmn	r4, #1
   15028:	beq	14f84 <strspn@plt+0x3fa0>
   1502c:	mov	r1, r4
   15030:	mov	r0, #-2147483648	; 0x80000000
   15034:	bl	15a2c <strspn@plt+0x4a48>
   15038:	cmp	r7, r0
   1503c:	movle	r0, #0
   15040:	movgt	r0, #1
   15044:	b	14f78 <strspn@plt+0x3f94>
   15048:	mov	r1, r7
   1504c:	mvn	r0, #-2147483648	; 0x80000000
   15050:	bl	15a2c <strspn@plt+0x4a48>
   15054:	cmp	r5, r0
   15058:	movge	r0, #0
   1505c:	movlt	r0, #1
   15060:	b	14f2c <strspn@plt+0x3f48>
   15064:	cmn	r5, #1
   15068:	beq	14f34 <strspn@plt+0x3f50>
   1506c:	mov	r1, r5
   15070:	mov	r0, #-2147483648	; 0x80000000
   15074:	bl	15a2c <strspn@plt+0x4a48>
   15078:	cmp	r7, r0
   1507c:	movle	r0, #0
   15080:	movgt	r0, #1
   15084:	b	14f2c <strspn@plt+0x3f48>
   15088:	mov	r1, r7
   1508c:	mvn	r0, #-2147483648	; 0x80000000
   15090:	bl	15a2c <strspn@plt+0x4a48>
   15094:	cmp	r0, r4
   15098:	movle	r0, #0
   1509c:	movgt	r0, #1
   150a0:	b	14f78 <strspn@plt+0x3f94>
   150a4:	bl	151c0 <strspn@plt+0x41dc>
   150a8:	push	{r4, lr}
   150ac:	mov	r1, #1
   150b0:	bl	152a8 <strspn@plt+0x42c4>
   150b4:	cmp	r0, #0
   150b8:	popne	{r4, pc}
   150bc:	bl	151c0 <strspn@plt+0x41dc>
   150c0:	push	{r4, lr}
   150c4:	mov	r1, #1
   150c8:	bl	152a8 <strspn@plt+0x42c4>
   150cc:	cmp	r0, #0
   150d0:	popne	{r4, pc}
   150d4:	bl	151c0 <strspn@plt+0x41dc>
   150d8:	push	{r4, lr}
   150dc:	bl	152a8 <strspn@plt+0x42c4>
   150e0:	cmp	r0, #0
   150e4:	popne	{r4, pc}
   150e8:	bl	151c0 <strspn@plt+0x41dc>
   150ec:	push	{r4, lr}
   150f0:	bl	152a8 <strspn@plt+0x42c4>
   150f4:	cmp	r0, #0
   150f8:	popne	{r4, pc}
   150fc:	bl	151c0 <strspn@plt+0x41dc>
   15100:	push	{r4, r5, r6, lr}
   15104:	mov	r6, r0
   15108:	mov	r0, r1
   1510c:	mov	r4, r1
   15110:	bl	152f0 <strspn@plt+0x430c>
   15114:	subs	r5, r0, #0
   15118:	beq	15130 <strspn@plt+0x414c>
   1511c:	mov	r2, r4
   15120:	mov	r1, r6
   15124:	bl	10dc8 <memcpy@plt>
   15128:	mov	r0, r5
   1512c:	pop	{r4, r5, r6, pc}
   15130:	bl	151c0 <strspn@plt+0x41dc>
   15134:	push	{r4, r5, r6, lr}
   15138:	mov	r6, r0
   1513c:	mov	r0, r1
   15140:	mov	r4, r1
   15144:	bl	152f0 <strspn@plt+0x430c>
   15148:	subs	r5, r0, #0
   1514c:	beq	15164 <strspn@plt+0x4180>
   15150:	mov	r2, r4
   15154:	mov	r1, r6
   15158:	bl	10dc8 <memcpy@plt>
   1515c:	mov	r0, r5
   15160:	pop	{r4, r5, r6, pc}
   15164:	bl	151c0 <strspn@plt+0x41dc>
   15168:	push	{r4, r5, r6, lr}
   1516c:	mov	r6, r0
   15170:	add	r0, r1, #1
   15174:	mov	r4, r1
   15178:	bl	152f0 <strspn@plt+0x430c>
   1517c:	subs	r5, r0, #0
   15180:	beq	151a0 <strspn@plt+0x41bc>
   15184:	mov	r3, #0
   15188:	mov	r1, r6
   1518c:	strb	r3, [r5, r4]
   15190:	mov	r2, r4
   15194:	bl	10dc8 <memcpy@plt>
   15198:	mov	r0, r5
   1519c:	pop	{r4, r5, r6, pc}
   151a0:	bl	151c0 <strspn@plt+0x41dc>
   151a4:	push	{r4, lr}
   151a8:	mov	r4, r0
   151ac:	bl	10f00 <strlen@plt>
   151b0:	add	r1, r0, #1
   151b4:	mov	r0, r4
   151b8:	pop	{r4, lr}
   151bc:	b	15100 <strspn@plt+0x411c>
   151c0:	ldr	r3, [pc, #44]	; 151f4 <strspn@plt+0x4210>
   151c4:	push	{r4, lr}
   151c8:	mov	r2, #5
   151cc:	ldr	r1, [pc, #36]	; 151f8 <strspn@plt+0x4214>
   151d0:	mov	r0, #0
   151d4:	ldr	r4, [r3]
   151d8:	bl	10e10 <dcgettext@plt>
   151dc:	ldr	r2, [pc, #24]	; 151fc <strspn@plt+0x4218>
   151e0:	mov	r1, #0
   151e4:	mov	r3, r0
   151e8:	mov	r0, r4
   151ec:	bl	10e88 <error@plt>
   151f0:	bl	10fd8 <abort@plt>
   151f4:	andeq	r7, r2, r0, lsl #2
   151f8:	strdeq	r6, [r1], -ip
   151fc:	andeq	r6, r1, r0, asr #13
   15200:	push	{r4, r5, r6, r7, r8, r9, lr}
   15204:	sub	sp, sp, #12
   15208:	mov	r6, r0
   1520c:	mov	r9, r3
   15210:	mov	r5, r1
   15214:	mov	r8, r2
   15218:	bl	10f18 <__errno_location@plt>
   1521c:	mov	r4, #0
   15220:	add	r1, sp, #4
   15224:	str	r4, [r0]
   15228:	mov	r7, r0
   1522c:	mov	r0, r6
   15230:	blx	r9
   15234:	ldr	r3, [sp, #4]
   15238:	cmp	r6, r3
   1523c:	beq	1527c <strspn@plt+0x4298>
   15240:	cmp	r5, r4
   15244:	beq	15284 <strspn@plt+0x42a0>
   15248:	vcmp.f64	d0, #0.0
   1524c:	vmrs	APSR_nzcv, fpscr
   15250:	moveq	r0, #1
   15254:	beq	1526c <strspn@plt+0x4288>
   15258:	ldr	r0, [r7]
   1525c:	subs	r0, r0, #34	; 0x22
   15260:	movne	r0, #1
   15264:	cmp	r5, #0
   15268:	beq	15270 <strspn@plt+0x428c>
   1526c:	str	r3, [r5]
   15270:	vstr	d0, [r8]
   15274:	add	sp, sp, #12
   15278:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1527c:	mov	r0, r4
   15280:	b	15264 <strspn@plt+0x4280>
   15284:	ldrb	r2, [r3]
   15288:	cmp	r2, r4
   1528c:	movne	r0, r5
   15290:	bne	15270 <strspn@plt+0x428c>
   15294:	vcmp.f64	d0, #0.0
   15298:	vmrs	APSR_nzcv, fpscr
   1529c:	bne	15258 <strspn@plt+0x4274>
   152a0:	mov	r0, #1
   152a4:	b	15270 <strspn@plt+0x428c>
   152a8:	cmp	r1, #0
   152ac:	cmpne	r0, #0
   152b0:	moveq	r1, #1
   152b4:	moveq	r0, r1
   152b8:	umull	r2, r3, r0, r1
   152bc:	adds	r3, r3, #0
   152c0:	movne	r3, #1
   152c4:	cmp	r2, #0
   152c8:	blt	152d8 <strspn@plt+0x42f4>
   152cc:	cmp	r3, #0
   152d0:	bne	152d8 <strspn@plt+0x42f4>
   152d4:	b	10d44 <calloc@plt>
   152d8:	push	{r4, lr}
   152dc:	bl	10f18 <__errno_location@plt>
   152e0:	mov	r3, #12
   152e4:	str	r3, [r0]
   152e8:	mov	r0, #0
   152ec:	pop	{r4, pc}
   152f0:	cmp	r0, #0
   152f4:	moveq	r0, #1
   152f8:	cmp	r0, #0
   152fc:	blt	15304 <strspn@plt+0x4320>
   15300:	b	10ea0 <malloc@plt>
   15304:	push	{r4, lr}
   15308:	bl	10f18 <__errno_location@plt>
   1530c:	mov	r3, #12
   15310:	str	r3, [r0]
   15314:	mov	r0, #0
   15318:	pop	{r4, pc}
   1531c:	cmp	r0, #0
   15320:	beq	15344 <strspn@plt+0x4360>
   15324:	cmp	r1, #0
   15328:	push	{lr}		; (str lr, [sp, #-4]!)
   1532c:	sub	sp, sp, #12
   15330:	beq	1534c <strspn@plt+0x4368>
   15334:	blt	15364 <strspn@plt+0x4380>
   15338:	add	sp, sp, #12
   1533c:	pop	{lr}		; (ldr lr, [sp], #4)
   15340:	b	10e1c <realloc@plt>
   15344:	mov	r0, r1
   15348:	b	152f0 <strspn@plt+0x430c>
   1534c:	str	r1, [sp, #4]
   15350:	bl	12828 <strspn@plt+0x1844>
   15354:	ldr	r3, [sp, #4]
   15358:	mov	r0, r3
   1535c:	add	sp, sp, #12
   15360:	pop	{pc}		; (ldr pc, [sp], #4)
   15364:	bl	10f18 <__errno_location@plt>
   15368:	mov	r2, #12
   1536c:	mov	r3, #0
   15370:	str	r2, [r0]
   15374:	b	15358 <strspn@plt+0x4374>
   15378:	push	{r4, r5, r6, r7, r8, lr}
   1537c:	mov	r6, r0
   15380:	ldr	r4, [pc, #168]	; 15430 <strspn@plt+0x444c>
   15384:	vpush	{d8}
   15388:	mov	r5, r1
   1538c:	ldr	r2, [r4]
   15390:	cmp	r2, #0
   15394:	beq	1540c <strspn@plt+0x4428>
   15398:	ldr	r0, [r4]
   1539c:	cmp	r0, #0
   153a0:	beq	153ec <strspn@plt+0x4408>
   153a4:	bl	10d68 <uselocale@plt>
   153a8:	subs	r7, r0, #0
   153ac:	beq	153ec <strspn@plt+0x4408>
   153b0:	mov	r1, r5
   153b4:	mov	r0, r6
   153b8:	bl	10de0 <strtold@plt>
   153bc:	vmov.f64	d8, d0
   153c0:	bl	10f18 <__errno_location@plt>
   153c4:	mov	r4, r0
   153c8:	mov	r0, r7
   153cc:	ldr	r5, [r4]
   153d0:	bl	10d68 <uselocale@plt>
   153d4:	cmp	r0, #0
   153d8:	strne	r5, [r4]
   153dc:	beq	15420 <strspn@plt+0x443c>
   153e0:	vmov.f64	d0, d8
   153e4:	vpop	{d8}
   153e8:	pop	{r4, r5, r6, r7, r8, pc}
   153ec:	cmp	r5, #0
   153f0:	vldreq	d8, [pc, #48]	; 15428 <strspn@plt+0x4444>
   153f4:	beq	153e0 <strspn@plt+0x43fc>
   153f8:	vldr	d8, [pc, #40]	; 15428 <strspn@plt+0x4444>
   153fc:	str	r6, [r5]
   15400:	vmov.f64	d0, d8
   15404:	vpop	{d8}
   15408:	pop	{r4, r5, r6, r7, r8, pc}
   1540c:	ldr	r1, [pc, #32]	; 15434 <strspn@plt+0x4450>
   15410:	ldr	r0, [pc, #32]	; 15438 <strspn@plt+0x4454>
   15414:	bl	10fa8 <newlocale@plt>
   15418:	str	r0, [r4]
   1541c:	b	15398 <strspn@plt+0x43b4>
   15420:	bl	10fd8 <abort@plt>
   15424:	nop			; (mov r0, r0)
	...
   15430:	andeq	r7, r2, r8, asr #5
   15434:	andeq	r6, r1, ip, lsl #12
   15438:			; <UNDEFINED> instruction: 0x00001fbf
   1543c:	push	{r4, r5, r6, lr}
   15440:	mov	r4, r0
   15444:	bl	10e70 <__fpending@plt>
   15448:	ldr	r5, [r4]
   1544c:	and	r5, r5, #32
   15450:	mov	r6, r0
   15454:	mov	r0, r4
   15458:	bl	154b8 <strspn@plt+0x44d4>
   1545c:	cmp	r5, #0
   15460:	mov	r4, r0
   15464:	bne	15484 <strspn@plt+0x44a0>
   15468:	cmp	r0, #0
   1546c:	beq	1547c <strspn@plt+0x4498>
   15470:	cmp	r6, #0
   15474:	beq	154a0 <strspn@plt+0x44bc>
   15478:	mvn	r4, #0
   1547c:	mov	r0, r4
   15480:	pop	{r4, r5, r6, pc}
   15484:	cmp	r0, #0
   15488:	bne	15478 <strspn@plt+0x4494>
   1548c:	bl	10f18 <__errno_location@plt>
   15490:	str	r4, [r0]
   15494:	mvn	r4, #0
   15498:	mov	r0, r4
   1549c:	pop	{r4, r5, r6, pc}
   154a0:	bl	10f18 <__errno_location@plt>
   154a4:	ldr	r4, [r0]
   154a8:	subs	r4, r4, #9
   154ac:	mvnne	r4, #0
   154b0:	mov	r0, r4
   154b4:	pop	{r4, r5, r6, pc}
   154b8:	push	{r4, r5, lr}
   154bc:	sub	sp, sp, #12
   154c0:	mov	r4, r0
   154c4:	bl	10f54 <fileno@plt>
   154c8:	cmp	r0, #0
   154cc:	mov	r0, r4
   154d0:	blt	1554c <strspn@plt+0x4568>
   154d4:	bl	10eb8 <__freading@plt>
   154d8:	cmp	r0, #0
   154dc:	bne	15518 <strspn@plt+0x4534>
   154e0:	mov	r0, r4
   154e4:	bl	15558 <strspn@plt+0x4574>
   154e8:	cmp	r0, #0
   154ec:	beq	15548 <strspn@plt+0x4564>
   154f0:	bl	10f18 <__errno_location@plt>
   154f4:	mov	r5, r0
   154f8:	mov	r0, r4
   154fc:	ldr	r4, [r5]
   15500:	bl	10f6c <fclose@plt>
   15504:	cmp	r4, #0
   15508:	mvnne	r0, #0
   1550c:	strne	r4, [r5]
   15510:	add	sp, sp, #12
   15514:	pop	{r4, r5, pc}
   15518:	mov	r0, r4
   1551c:	bl	10f54 <fileno@plt>
   15520:	mov	r3, #1
   15524:	str	r3, [sp]
   15528:	mov	r2, #0
   1552c:	mov	r3, #0
   15530:	bl	10e4c <lseek64@plt>
   15534:	mvn	r3, #0
   15538:	mvn	r2, #0
   1553c:	cmp	r1, r3
   15540:	cmpeq	r0, r2
   15544:	bne	154e0 <strspn@plt+0x44fc>
   15548:	mov	r0, r4
   1554c:	add	sp, sp, #12
   15550:	pop	{r4, r5, lr}
   15554:	b	10f6c <fclose@plt>
   15558:	push	{r4, lr}
   1555c:	subs	r4, r0, #0
   15560:	sub	sp, sp, #8
   15564:	beq	15580 <strspn@plt+0x459c>
   15568:	bl	10eb8 <__freading@plt>
   1556c:	cmp	r0, #0
   15570:	beq	15580 <strspn@plt+0x459c>
   15574:	ldr	r3, [r4]
   15578:	tst	r3, #256	; 0x100
   1557c:	bne	15590 <strspn@plt+0x45ac>
   15580:	mov	r0, r4
   15584:	add	sp, sp, #8
   15588:	pop	{r4, lr}
   1558c:	b	10d98 <fflush@plt>
   15590:	mov	r3, #1
   15594:	str	r3, [sp]
   15598:	mov	r2, #0
   1559c:	mov	r3, #0
   155a0:	mov	r0, r4
   155a4:	bl	155b8 <strspn@plt+0x45d4>
   155a8:	mov	r0, r4
   155ac:	add	sp, sp, #8
   155b0:	pop	{r4, lr}
   155b4:	b	10d98 <fflush@plt>
   155b8:	push	{r4, r5, r6, r7, r8, lr}
   155bc:	sub	sp, sp, #8
   155c0:	ldmib	r0, {ip, lr}
   155c4:	mov	r4, r0
   155c8:	ldr	r5, [sp, #32]
   155cc:	cmp	lr, ip
   155d0:	beq	155e8 <strspn@plt+0x4604>
   155d4:	str	r5, [sp, #32]
   155d8:	mov	r0, r4
   155dc:	add	sp, sp, #8
   155e0:	pop	{r4, r5, r6, r7, r8, lr}
   155e4:	b	10f78 <fseeko64@plt>
   155e8:	ldr	lr, [r0, #20]
   155ec:	ldr	ip, [r0, #16]
   155f0:	cmp	lr, ip
   155f4:	bne	155d4 <strspn@plt+0x45f0>
   155f8:	ldr	r8, [r0, #36]	; 0x24
   155fc:	cmp	r8, #0
   15600:	bne	155d4 <strspn@plt+0x45f0>
   15604:	mov	r6, r2
   15608:	mov	r7, r3
   1560c:	bl	10f54 <fileno@plt>
   15610:	mov	r2, r6
   15614:	mov	r3, r7
   15618:	str	r5, [sp]
   1561c:	bl	10e4c <lseek64@plt>
   15620:	mvn	r3, #0
   15624:	mvn	r2, #0
   15628:	cmp	r1, r3
   1562c:	cmpeq	r0, r2
   15630:	beq	15650 <strspn@plt+0x466c>
   15634:	ldr	r3, [r4]
   15638:	strd	r0, [r4, #80]	; 0x50
   1563c:	mov	r0, r8
   15640:	bic	r3, r3, #16
   15644:	str	r3, [r4]
   15648:	add	sp, sp, #8
   1564c:	pop	{r4, r5, r6, r7, r8, pc}
   15650:	mvn	r0, #0
   15654:	b	15648 <strspn@plt+0x4664>
   15658:	push	{r4, lr}
   1565c:	mov	r0, #14
   15660:	bl	10f9c <nl_langinfo@plt>
   15664:	cmp	r0, #0
   15668:	beq	15680 <strspn@plt+0x469c>
   1566c:	ldrb	r2, [r0]
   15670:	ldr	r3, [pc, #16]	; 15688 <strspn@plt+0x46a4>
   15674:	cmp	r2, #0
   15678:	moveq	r0, r3
   1567c:	pop	{r4, pc}
   15680:	ldr	r0, [pc]	; 15688 <strspn@plt+0x46a4>
   15684:	pop	{r4, pc}
   15688:	andeq	r6, r1, r0, lsl fp
   1568c:	push	{r4, r5, r6, r7, lr}
   15690:	subs	r6, r0, #0
   15694:	sub	sp, sp, #12
   15698:	addeq	r6, sp, #4
   1569c:	mov	r0, r6
   156a0:	mov	r5, r2
   156a4:	mov	r7, r1
   156a8:	bl	10e7c <mbrtowc@plt>
   156ac:	cmp	r5, #0
   156b0:	cmnne	r0, #3
   156b4:	mov	r4, r0
   156b8:	bls	156d4 <strspn@plt+0x46f0>
   156bc:	mov	r0, #0
   156c0:	bl	1572c <strspn@plt+0x4748>
   156c4:	cmp	r0, #0
   156c8:	moveq	r4, #1
   156cc:	ldrbeq	r3, [r7]
   156d0:	streq	r3, [r6]
   156d4:	mov	r0, r4
   156d8:	add	sp, sp, #12
   156dc:	pop	{r4, r5, r6, r7, pc}
   156e0:	push	{r4, r5, r6, lr}
   156e4:	subs	r4, r2, #0
   156e8:	mov	r6, r0
   156ec:	mov	r5, r1
   156f0:	beq	1571c <strspn@plt+0x4738>
   156f4:	mov	r1, r4
   156f8:	mvn	r0, #0
   156fc:	bl	15820 <strspn@plt+0x483c>
   15700:	cmp	r0, r5
   15704:	bcs	1571c <strspn@plt+0x4738>
   15708:	bl	10f18 <__errno_location@plt>
   1570c:	mov	r3, #12
   15710:	str	r3, [r0]
   15714:	mov	r0, #0
   15718:	pop	{r4, r5, r6, pc}
   1571c:	mul	r1, r5, r4
   15720:	mov	r0, r6
   15724:	pop	{r4, r5, r6, lr}
   15728:	b	1531c <strspn@plt+0x4338>
   1572c:	push	{lr}		; (str lr, [sp, #-4]!)
   15730:	sub	sp, sp, #268	; 0x10c
   15734:	add	r1, sp, #4
   15738:	ldr	r2, [pc, #60]	; 1577c <strspn@plt+0x4798>
   1573c:	bl	15788 <strspn@plt+0x47a4>
   15740:	cmp	r0, #0
   15744:	movne	r0, #0
   15748:	bne	15774 <strspn@plt+0x4790>
   1574c:	ldr	r1, [pc, #44]	; 15780 <strspn@plt+0x479c>
   15750:	add	r0, sp, #4
   15754:	bl	10d74 <strcmp@plt>
   15758:	cmp	r0, #0
   1575c:	beq	15774 <strspn@plt+0x4790>
   15760:	add	r0, sp, #4
   15764:	ldr	r1, [pc, #24]	; 15784 <strspn@plt+0x47a0>
   15768:	bl	10d74 <strcmp@plt>
   1576c:	adds	r0, r0, #0
   15770:	movne	r0, #1
   15774:	add	sp, sp, #268	; 0x10c
   15778:	pop	{pc}		; (ldr pc, [sp], #4)
   1577c:	andeq	r0, r0, r1, lsl #2
   15780:	andeq	r6, r1, ip, lsl #12
   15784:	andeq	r6, r1, r8, lsl fp
   15788:	push	{r4, r5, r6, lr}
   1578c:	mov	r5, r1
   15790:	mov	r1, #0
   15794:	mov	r4, r2
   15798:	bl	10f84 <setlocale@plt>
   1579c:	subs	r6, r0, #0
   157a0:	beq	157fc <strspn@plt+0x4818>
   157a4:	bl	10f00 <strlen@plt>
   157a8:	cmp	r4, r0
   157ac:	bhi	157e4 <strspn@plt+0x4800>
   157b0:	cmp	r4, #0
   157b4:	bne	157c0 <strspn@plt+0x47dc>
   157b8:	mov	r0, #34	; 0x22
   157bc:	pop	{r4, r5, r6, pc}
   157c0:	sub	r4, r4, #1
   157c4:	mov	r1, r6
   157c8:	mov	r2, r4
   157cc:	mov	r0, r5
   157d0:	bl	10dc8 <memcpy@plt>
   157d4:	mov	r3, #0
   157d8:	strb	r3, [r5, r4]
   157dc:	mov	r0, #34	; 0x22
   157e0:	pop	{r4, r5, r6, pc}
   157e4:	add	r2, r0, #1
   157e8:	mov	r1, r6
   157ec:	mov	r0, r5
   157f0:	bl	10dc8 <memcpy@plt>
   157f4:	mov	r0, #0
   157f8:	pop	{r4, r5, r6, pc}
   157fc:	cmp	r4, #0
   15800:	beq	15810 <strspn@plt+0x482c>
   15804:	strb	r6, [r5]
   15808:	mov	r0, #22
   1580c:	pop	{r4, r5, r6, pc}
   15810:	mov	r0, #22
   15814:	pop	{r4, r5, r6, pc}
   15818:	mov	r1, #0
   1581c:	b	10f84 <setlocale@plt>
   15820:	subs	r2, r1, #1
   15824:	bxeq	lr
   15828:	bcc	15a00 <strspn@plt+0x4a1c>
   1582c:	cmp	r0, r1
   15830:	bls	159e4 <strspn@plt+0x4a00>
   15834:	tst	r1, r2
   15838:	beq	159f0 <strspn@plt+0x4a0c>
   1583c:	clz	r3, r0
   15840:	clz	r2, r1
   15844:	sub	r3, r2, r3
   15848:	rsbs	r3, r3, #31
   1584c:	addne	r3, r3, r3, lsl #1
   15850:	mov	r2, #0
   15854:	addne	pc, pc, r3, lsl #2
   15858:	nop			; (mov r0, r0)
   1585c:	cmp	r0, r1, lsl #31
   15860:	adc	r2, r2, r2
   15864:	subcs	r0, r0, r1, lsl #31
   15868:	cmp	r0, r1, lsl #30
   1586c:	adc	r2, r2, r2
   15870:	subcs	r0, r0, r1, lsl #30
   15874:	cmp	r0, r1, lsl #29
   15878:	adc	r2, r2, r2
   1587c:	subcs	r0, r0, r1, lsl #29
   15880:	cmp	r0, r1, lsl #28
   15884:	adc	r2, r2, r2
   15888:	subcs	r0, r0, r1, lsl #28
   1588c:	cmp	r0, r1, lsl #27
   15890:	adc	r2, r2, r2
   15894:	subcs	r0, r0, r1, lsl #27
   15898:	cmp	r0, r1, lsl #26
   1589c:	adc	r2, r2, r2
   158a0:	subcs	r0, r0, r1, lsl #26
   158a4:	cmp	r0, r1, lsl #25
   158a8:	adc	r2, r2, r2
   158ac:	subcs	r0, r0, r1, lsl #25
   158b0:	cmp	r0, r1, lsl #24
   158b4:	adc	r2, r2, r2
   158b8:	subcs	r0, r0, r1, lsl #24
   158bc:	cmp	r0, r1, lsl #23
   158c0:	adc	r2, r2, r2
   158c4:	subcs	r0, r0, r1, lsl #23
   158c8:	cmp	r0, r1, lsl #22
   158cc:	adc	r2, r2, r2
   158d0:	subcs	r0, r0, r1, lsl #22
   158d4:	cmp	r0, r1, lsl #21
   158d8:	adc	r2, r2, r2
   158dc:	subcs	r0, r0, r1, lsl #21
   158e0:	cmp	r0, r1, lsl #20
   158e4:	adc	r2, r2, r2
   158e8:	subcs	r0, r0, r1, lsl #20
   158ec:	cmp	r0, r1, lsl #19
   158f0:	adc	r2, r2, r2
   158f4:	subcs	r0, r0, r1, lsl #19
   158f8:	cmp	r0, r1, lsl #18
   158fc:	adc	r2, r2, r2
   15900:	subcs	r0, r0, r1, lsl #18
   15904:	cmp	r0, r1, lsl #17
   15908:	adc	r2, r2, r2
   1590c:	subcs	r0, r0, r1, lsl #17
   15910:	cmp	r0, r1, lsl #16
   15914:	adc	r2, r2, r2
   15918:	subcs	r0, r0, r1, lsl #16
   1591c:	cmp	r0, r1, lsl #15
   15920:	adc	r2, r2, r2
   15924:	subcs	r0, r0, r1, lsl #15
   15928:	cmp	r0, r1, lsl #14
   1592c:	adc	r2, r2, r2
   15930:	subcs	r0, r0, r1, lsl #14
   15934:	cmp	r0, r1, lsl #13
   15938:	adc	r2, r2, r2
   1593c:	subcs	r0, r0, r1, lsl #13
   15940:	cmp	r0, r1, lsl #12
   15944:	adc	r2, r2, r2
   15948:	subcs	r0, r0, r1, lsl #12
   1594c:	cmp	r0, r1, lsl #11
   15950:	adc	r2, r2, r2
   15954:	subcs	r0, r0, r1, lsl #11
   15958:	cmp	r0, r1, lsl #10
   1595c:	adc	r2, r2, r2
   15960:	subcs	r0, r0, r1, lsl #10
   15964:	cmp	r0, r1, lsl #9
   15968:	adc	r2, r2, r2
   1596c:	subcs	r0, r0, r1, lsl #9
   15970:	cmp	r0, r1, lsl #8
   15974:	adc	r2, r2, r2
   15978:	subcs	r0, r0, r1, lsl #8
   1597c:	cmp	r0, r1, lsl #7
   15980:	adc	r2, r2, r2
   15984:	subcs	r0, r0, r1, lsl #7
   15988:	cmp	r0, r1, lsl #6
   1598c:	adc	r2, r2, r2
   15990:	subcs	r0, r0, r1, lsl #6
   15994:	cmp	r0, r1, lsl #5
   15998:	adc	r2, r2, r2
   1599c:	subcs	r0, r0, r1, lsl #5
   159a0:	cmp	r0, r1, lsl #4
   159a4:	adc	r2, r2, r2
   159a8:	subcs	r0, r0, r1, lsl #4
   159ac:	cmp	r0, r1, lsl #3
   159b0:	adc	r2, r2, r2
   159b4:	subcs	r0, r0, r1, lsl #3
   159b8:	cmp	r0, r1, lsl #2
   159bc:	adc	r2, r2, r2
   159c0:	subcs	r0, r0, r1, lsl #2
   159c4:	cmp	r0, r1, lsl #1
   159c8:	adc	r2, r2, r2
   159cc:	subcs	r0, r0, r1, lsl #1
   159d0:	cmp	r0, r1
   159d4:	adc	r2, r2, r2
   159d8:	subcs	r0, r0, r1
   159dc:	mov	r0, r2
   159e0:	bx	lr
   159e4:	moveq	r0, #1
   159e8:	movne	r0, #0
   159ec:	bx	lr
   159f0:	clz	r2, r1
   159f4:	rsb	r2, r2, #31
   159f8:	lsr	r0, r0, r2
   159fc:	bx	lr
   15a00:	cmp	r0, #0
   15a04:	mvnne	r0, #0
   15a08:	b	15c6c <strspn@plt+0x4c88>
   15a0c:	cmp	r1, #0
   15a10:	beq	15a00 <strspn@plt+0x4a1c>
   15a14:	push	{r0, r1, lr}
   15a18:	bl	15820 <strspn@plt+0x483c>
   15a1c:	pop	{r1, r2, lr}
   15a20:	mul	r3, r2, r0
   15a24:	sub	r1, r1, r3
   15a28:	bx	lr
   15a2c:	cmp	r1, #0
   15a30:	beq	15c3c <strspn@plt+0x4c58>
   15a34:	eor	ip, r0, r1
   15a38:	rsbmi	r1, r1, #0
   15a3c:	subs	r2, r1, #1
   15a40:	beq	15c08 <strspn@plt+0x4c24>
   15a44:	movs	r3, r0
   15a48:	rsbmi	r3, r0, #0
   15a4c:	cmp	r3, r1
   15a50:	bls	15c14 <strspn@plt+0x4c30>
   15a54:	tst	r1, r2
   15a58:	beq	15c24 <strspn@plt+0x4c40>
   15a5c:	clz	r2, r3
   15a60:	clz	r0, r1
   15a64:	sub	r2, r0, r2
   15a68:	rsbs	r2, r2, #31
   15a6c:	addne	r2, r2, r2, lsl #1
   15a70:	mov	r0, #0
   15a74:	addne	pc, pc, r2, lsl #2
   15a78:	nop			; (mov r0, r0)
   15a7c:	cmp	r3, r1, lsl #31
   15a80:	adc	r0, r0, r0
   15a84:	subcs	r3, r3, r1, lsl #31
   15a88:	cmp	r3, r1, lsl #30
   15a8c:	adc	r0, r0, r0
   15a90:	subcs	r3, r3, r1, lsl #30
   15a94:	cmp	r3, r1, lsl #29
   15a98:	adc	r0, r0, r0
   15a9c:	subcs	r3, r3, r1, lsl #29
   15aa0:	cmp	r3, r1, lsl #28
   15aa4:	adc	r0, r0, r0
   15aa8:	subcs	r3, r3, r1, lsl #28
   15aac:	cmp	r3, r1, lsl #27
   15ab0:	adc	r0, r0, r0
   15ab4:	subcs	r3, r3, r1, lsl #27
   15ab8:	cmp	r3, r1, lsl #26
   15abc:	adc	r0, r0, r0
   15ac0:	subcs	r3, r3, r1, lsl #26
   15ac4:	cmp	r3, r1, lsl #25
   15ac8:	adc	r0, r0, r0
   15acc:	subcs	r3, r3, r1, lsl #25
   15ad0:	cmp	r3, r1, lsl #24
   15ad4:	adc	r0, r0, r0
   15ad8:	subcs	r3, r3, r1, lsl #24
   15adc:	cmp	r3, r1, lsl #23
   15ae0:	adc	r0, r0, r0
   15ae4:	subcs	r3, r3, r1, lsl #23
   15ae8:	cmp	r3, r1, lsl #22
   15aec:	adc	r0, r0, r0
   15af0:	subcs	r3, r3, r1, lsl #22
   15af4:	cmp	r3, r1, lsl #21
   15af8:	adc	r0, r0, r0
   15afc:	subcs	r3, r3, r1, lsl #21
   15b00:	cmp	r3, r1, lsl #20
   15b04:	adc	r0, r0, r0
   15b08:	subcs	r3, r3, r1, lsl #20
   15b0c:	cmp	r3, r1, lsl #19
   15b10:	adc	r0, r0, r0
   15b14:	subcs	r3, r3, r1, lsl #19
   15b18:	cmp	r3, r1, lsl #18
   15b1c:	adc	r0, r0, r0
   15b20:	subcs	r3, r3, r1, lsl #18
   15b24:	cmp	r3, r1, lsl #17
   15b28:	adc	r0, r0, r0
   15b2c:	subcs	r3, r3, r1, lsl #17
   15b30:	cmp	r3, r1, lsl #16
   15b34:	adc	r0, r0, r0
   15b38:	subcs	r3, r3, r1, lsl #16
   15b3c:	cmp	r3, r1, lsl #15
   15b40:	adc	r0, r0, r0
   15b44:	subcs	r3, r3, r1, lsl #15
   15b48:	cmp	r3, r1, lsl #14
   15b4c:	adc	r0, r0, r0
   15b50:	subcs	r3, r3, r1, lsl #14
   15b54:	cmp	r3, r1, lsl #13
   15b58:	adc	r0, r0, r0
   15b5c:	subcs	r3, r3, r1, lsl #13
   15b60:	cmp	r3, r1, lsl #12
   15b64:	adc	r0, r0, r0
   15b68:	subcs	r3, r3, r1, lsl #12
   15b6c:	cmp	r3, r1, lsl #11
   15b70:	adc	r0, r0, r0
   15b74:	subcs	r3, r3, r1, lsl #11
   15b78:	cmp	r3, r1, lsl #10
   15b7c:	adc	r0, r0, r0
   15b80:	subcs	r3, r3, r1, lsl #10
   15b84:	cmp	r3, r1, lsl #9
   15b88:	adc	r0, r0, r0
   15b8c:	subcs	r3, r3, r1, lsl #9
   15b90:	cmp	r3, r1, lsl #8
   15b94:	adc	r0, r0, r0
   15b98:	subcs	r3, r3, r1, lsl #8
   15b9c:	cmp	r3, r1, lsl #7
   15ba0:	adc	r0, r0, r0
   15ba4:	subcs	r3, r3, r1, lsl #7
   15ba8:	cmp	r3, r1, lsl #6
   15bac:	adc	r0, r0, r0
   15bb0:	subcs	r3, r3, r1, lsl #6
   15bb4:	cmp	r3, r1, lsl #5
   15bb8:	adc	r0, r0, r0
   15bbc:	subcs	r3, r3, r1, lsl #5
   15bc0:	cmp	r3, r1, lsl #4
   15bc4:	adc	r0, r0, r0
   15bc8:	subcs	r3, r3, r1, lsl #4
   15bcc:	cmp	r3, r1, lsl #3
   15bd0:	adc	r0, r0, r0
   15bd4:	subcs	r3, r3, r1, lsl #3
   15bd8:	cmp	r3, r1, lsl #2
   15bdc:	adc	r0, r0, r0
   15be0:	subcs	r3, r3, r1, lsl #2
   15be4:	cmp	r3, r1, lsl #1
   15be8:	adc	r0, r0, r0
   15bec:	subcs	r3, r3, r1, lsl #1
   15bf0:	cmp	r3, r1
   15bf4:	adc	r0, r0, r0
   15bf8:	subcs	r3, r3, r1
   15bfc:	cmp	ip, #0
   15c00:	rsbmi	r0, r0, #0
   15c04:	bx	lr
   15c08:	teq	ip, r0
   15c0c:	rsbmi	r0, r0, #0
   15c10:	bx	lr
   15c14:	movcc	r0, #0
   15c18:	asreq	r0, ip, #31
   15c1c:	orreq	r0, r0, #1
   15c20:	bx	lr
   15c24:	clz	r2, r1
   15c28:	rsb	r2, r2, #31
   15c2c:	cmp	ip, #0
   15c30:	lsr	r0, r3, r2
   15c34:	rsbmi	r0, r0, #0
   15c38:	bx	lr
   15c3c:	cmp	r0, #0
   15c40:	mvngt	r0, #-2147483648	; 0x80000000
   15c44:	movlt	r0, #-2147483648	; 0x80000000
   15c48:	b	15c6c <strspn@plt+0x4c88>
   15c4c:	cmp	r1, #0
   15c50:	beq	15c3c <strspn@plt+0x4c58>
   15c54:	push	{r0, r1, lr}
   15c58:	bl	15a34 <strspn@plt+0x4a50>
   15c5c:	pop	{r1, r2, lr}
   15c60:	mul	r3, r2, r0
   15c64:	sub	r1, r1, r3
   15c68:	bx	lr
   15c6c:	push	{r1, lr}
   15c70:	mov	r0, #8
   15c74:	bl	10d5c <raise@plt>
   15c78:	pop	{r1, pc}
   15c7c:	andeq	r0, r0, r0
   15c80:	vmov	d7, r0, r1
   15c84:	vldr	d6, [pc, #44]	; 15cb8 <strspn@plt+0x4cd4>
   15c88:	vldr	d5, [pc, #48]	; 15cc0 <strspn@plt+0x4cdc>
   15c8c:	mov	r0, #0
   15c90:	vmul.f64	d6, d7, d6
   15c94:	vcvt.u32.f64	s12, d6
   15c98:	vcvt.f64.u32	d4, s12
   15c9c:	vmov	r1, s12
   15ca0:	vmls.f64	d7, d4, d5
   15ca4:	vcvt.u32.f64	s14, d7
   15ca8:	vmov	r3, s14
   15cac:	orr	r0, r0, r3
   15cb0:	bx	lr
   15cb4:	nop			; (mov r0, r0)
   15cb8:	andeq	r0, r0, r0
   15cbc:	ldclcc	0, cr0, [r0]
   15cc0:	andeq	r0, r0, r0
   15cc4:	mvnsmi	r0, r0
   15cc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ccc:	mov	r7, r0
   15cd0:	ldr	r6, [pc, #72]	; 15d20 <strspn@plt+0x4d3c>
   15cd4:	ldr	r5, [pc, #72]	; 15d24 <strspn@plt+0x4d40>
   15cd8:	add	r6, pc, r6
   15cdc:	add	r5, pc, r5
   15ce0:	sub	r6, r6, r5
   15ce4:	mov	r8, r1
   15ce8:	mov	r9, r2
   15cec:	bl	10d24 <calloc@plt-0x20>
   15cf0:	asrs	r6, r6, #2
   15cf4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15cf8:	mov	r4, #0
   15cfc:	add	r4, r4, #1
   15d00:	ldr	r3, [r5], #4
   15d04:	mov	r2, r9
   15d08:	mov	r1, r8
   15d0c:	mov	r0, r7
   15d10:	blx	r3
   15d14:	cmp	r6, r4
   15d18:	bne	15cfc <strspn@plt+0x4d18>
   15d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d20:	andeq	r1, r1, r0, lsr r2
   15d24:	andeq	r1, r1, r8, lsr #4
   15d28:	bx	lr
   15d2c:	ldr	r3, [pc, #12]	; 15d40 <strspn@plt+0x4d5c>
   15d30:	mov	r1, #0
   15d34:	add	r3, pc, r3
   15d38:	ldr	r2, [r3]
   15d3c:	b	10f30 <__cxa_atexit@plt>
   15d40:			; <UNDEFINED> instruction: 0x000113bc

Disassembly of section .fini:

00015d44 <.fini>:
   15d44:	push	{r3, lr}
   15d48:	pop	{r3, pc}
