
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010b50 <.init>:
   10b50:	push	{r3, lr}
   10b54:	bl	10c30 <_start@@Base+0x3c>
   10b58:	pop	{r3, pc}

Disassembly of section .plt:

00010b5c <calloc@plt-0x14>:
   10b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b60:	ldr	lr, [pc, #4]	; 10b6c <calloc@plt-0x4>
   10b64:	add	lr, pc, lr
   10b68:	ldr	pc, [lr, #8]!
   10b6c:	muleq	r1, r4, r4

00010b70 <calloc@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1172]!	; 0x494

00010b7c <printf@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1164]!	; 0x48c

00010b88 <free@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1156]!	; 0x484

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1148]!	; 0x47c

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1140]!	; 0x474

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1124]!	; 0x464

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1116]!	; 0x45c

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1108]!	; 0x454

00010bdc <putchar@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1100]!	; 0x44c

00010be8 <abort@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1092]!	; 0x444

Disassembly of section .text:

00010bf4 <_start@@Base>:
   10bf4:	mov	fp, #0
   10bf8:	mov	lr, #0
   10bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   10c00:	mov	r2, sp
   10c04:	push	{r2}		; (str r2, [sp, #-4]!)
   10c08:	push	{r0}		; (str r0, [sp, #-4]!)
   10c0c:	ldr	ip, [pc, #16]	; 10c24 <_start@@Base+0x30>
   10c10:	push	{ip}		; (str ip, [sp, #-4]!)
   10c14:	ldr	r0, [pc, #12]	; 10c28 <_start@@Base+0x34>
   10c18:	ldr	r3, [pc, #12]	; 10c2c <_start@@Base+0x38>
   10c1c:	bl	10bb8 <__libc_start_main@plt>
   10c20:	bl	10be8 <abort@plt>
   10c24:	andeq	r1, r1, r0, lsl #18
   10c28:	andeq	r0, r1, r4, ror #25
   10c2c:	andeq	r1, r1, r0, lsr #17
   10c30:	ldr	r3, [pc, #20]	; 10c4c <_start@@Base+0x58>
   10c34:	ldr	r2, [pc, #20]	; 10c50 <_start@@Base+0x5c>
   10c38:	add	r3, pc, r3
   10c3c:	ldr	r2, [r3, r2]
   10c40:	cmp	r2, #0
   10c44:	bxeq	lr
   10c48:	b	10bc4 <__gmon_start__@plt>
   10c4c:	andeq	r1, r1, r0, asr #7
   10c50:	andeq	r0, r0, r8, lsr r0
   10c54:	ldr	r0, [pc, #24]	; 10c74 <_start@@Base+0x80>
   10c58:	ldr	r3, [pc, #24]	; 10c78 <_start@@Base+0x84>
   10c5c:	cmp	r3, r0
   10c60:	bxeq	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x88>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r2, r2, r4, asr #32
   10c78:	andeq	r2, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r0, [pc, #36]	; 10cac <_start@@Base+0xb8>
   10c84:	ldr	r1, [pc, #36]	; 10cb0 <_start@@Base+0xbc>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc0>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r2, r2, r4, asr #32
   10cb0:	andeq	r2, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xe8>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c54 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r2, r2, r4, asr #32
   10ce0:	b	10c80 <_start@@Base+0x8c>

00010ce4 <main@@Base>:
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #4
   10cf0:	vpush	{d8}
   10cf4:	sub	sp, sp, #40	; 0x28
   10cf8:	mov	r0, #4
   10cfc:	mov	r1, #3
   10d00:	bl	112d0 <armazem_novo@@Base>
   10d04:	mov	r4, r0
   10d08:	movw	r0, #6688	; 0x1a20
   10d0c:	movt	r0, #1
   10d10:	bl	10ba0 <puts@plt>
   10d14:	vldr	s0, [pc, #840]	; 11064 <main@@Base+0x380>
   10d18:	movw	r0, #6420	; 0x1914
   10d1c:	movt	r0, #1
   10d20:	bl	114c8 <contentor_novo@@Base>
   10d24:	mov	r8, r0
   10d28:	vldr	s0, [pc, #824]	; 11068 <main@@Base+0x384>
   10d2c:	movw	r0, #6427	; 0x191b
   10d30:	movt	r0, #1
   10d34:	bl	114c8 <contentor_novo@@Base>
   10d38:	mov	sl, r0
   10d3c:	vldr	s0, [pc, #808]	; 1106c <main@@Base+0x388>
   10d40:	movw	r0, #6430	; 0x191e
   10d44:	movt	r0, #1
   10d48:	bl	114c8 <contentor_novo@@Base>
   10d4c:	str	r0, [sp, #24]
   10d50:	vldr	s0, [pc, #792]	; 11070 <main@@Base+0x38c>
   10d54:	movw	r0, #6437	; 0x1925
   10d58:	movt	r0, #1
   10d5c:	bl	114c8 <contentor_novo@@Base>
   10d60:	mov	r5, r0
   10d64:	vldr	s16, [pc, #1012]	; 11160 <main@@Base+0x47c>
   10d68:	movw	r0, #6443	; 0x192b
   10d6c:	movt	r0, #1
   10d70:	vmov.f32	s0, s16
   10d74:	bl	114c8 <contentor_novo@@Base>
   10d78:	str	r0, [sp, #8]
   10d7c:	vldr	s0, [pc, #992]	; 11164 <main@@Base+0x480>
   10d80:	movw	r0, #6449	; 0x1931
   10d84:	movt	r0, #1
   10d88:	bl	114c8 <contentor_novo@@Base>
   10d8c:	str	r0, [sp, #16]
   10d90:	vldr	s0, [pc, #1008]	; 11188 <main@@Base+0x4a4>
   10d94:	movw	r0, #6457	; 0x1939
   10d98:	movt	r0, #1
   10d9c:	bl	114c8 <contentor_novo@@Base>
   10da0:	str	r0, [sp, #20]
   10da4:	vldr	s0, [pc, #992]	; 1118c <main@@Base+0x4a8>
   10da8:	movw	r0, #6467	; 0x1943
   10dac:	movt	r0, #1
   10db0:	bl	114c8 <contentor_novo@@Base>
   10db4:	str	r0, [sp, #12]
   10db8:	movw	r0, #6474	; 0x194a
   10dbc:	movt	r0, #1
   10dc0:	vmov.f32	s0, s16
   10dc4:	bl	114c8 <contentor_novo@@Base>
   10dc8:	mov	r9, r0
   10dcc:	vldr	s0, [pc, #956]	; 11190 <main@@Base+0x4ac>
   10dd0:	movw	r0, #6486	; 0x1956
   10dd4:	movt	r0, #1
   10dd8:	bl	114c8 <contentor_novo@@Base>
   10ddc:	mov	r7, r0
   10de0:	vldr	s0, [pc, #940]	; 11194 <main@@Base+0x4b0>
   10de4:	movw	r0, #6494	; 0x195e
   10de8:	movt	r0, #1
   10dec:	bl	114c8 <contentor_novo@@Base>
   10df0:	str	r0, [sp, #28]
   10df4:	vldr	s0, [pc, #924]	; 11198 <main@@Base+0x4b4>
   10df8:	movw	r0, #6503	; 0x1967
   10dfc:	movt	r0, #1
   10e00:	bl	114c8 <contentor_novo@@Base>
   10e04:	str	r0, [sp, #32]
   10e08:	vldr	s0, [pc, #908]	; 1119c <main@@Base+0x4b8>
   10e0c:	movw	r0, #6509	; 0x196d
   10e10:	movt	r0, #1
   10e14:	bl	114c8 <contentor_novo@@Base>
   10e18:	str	r0, [sp, #36]	; 0x24
   10e1c:	movw	r0, #6720	; 0x1a40
   10e20:	movt	r0, #1
   10e24:	bl	10ba0 <puts@plt>
   10e28:	mov	r0, r4
   10e2c:	bl	111a0 <imprimeArmazem@@Base>
   10e30:	movw	r0, #6752	; 0x1a60
   10e34:	movt	r0, #1
   10e38:	bl	10ba0 <puts@plt>
   10e3c:	mov	r0, r4
   10e40:	mov	r1, r8
   10e44:	bl	11388 <armazenar_contentor@@Base>
   10e48:	cmp	r0, #0
   10e4c:	beq	10e60 <main@@Base+0x17c>
   10e50:	ldr	r1, [r8]
   10e54:	movw	r0, #6517	; 0x1975
   10e58:	movt	r0, #1
   10e5c:	bl	10b7c <printf@plt>
   10e60:	mov	r0, r4
   10e64:	mov	r1, sl
   10e68:	bl	11388 <armazenar_contentor@@Base>
   10e6c:	cmp	r0, #0
   10e70:	beq	10e84 <main@@Base+0x1a0>
   10e74:	ldr	r1, [sl]
   10e78:	movw	r0, #6517	; 0x1975
   10e7c:	movt	r0, #1
   10e80:	bl	10b7c <printf@plt>
   10e84:	mov	r0, r4
   10e88:	ldr	r8, [sp, #24]
   10e8c:	mov	r1, r8
   10e90:	bl	11388 <armazenar_contentor@@Base>
   10e94:	cmp	r0, #0
   10e98:	str	r7, [sp, #4]
   10e9c:	beq	10eb0 <main@@Base+0x1cc>
   10ea0:	ldr	r1, [r8]
   10ea4:	movw	r0, #6517	; 0x1975
   10ea8:	movt	r0, #1
   10eac:	bl	10b7c <printf@plt>
   10eb0:	mov	r0, r4
   10eb4:	mov	r1, r5
   10eb8:	bl	11388 <armazenar_contentor@@Base>
   10ebc:	cmp	r0, #0
   10ec0:	ldr	r7, [sp, #12]
   10ec4:	beq	10ed8 <main@@Base+0x1f4>
   10ec8:	ldr	r1, [r5]
   10ecc:	movw	r0, #6517	; 0x1975
   10ed0:	movt	r0, #1
   10ed4:	bl	10b7c <printf@plt>
   10ed8:	movw	r0, #6800	; 0x1a90
   10edc:	movt	r0, #1
   10ee0:	bl	10ba0 <puts@plt>
   10ee4:	mov	r0, r4
   10ee8:	bl	111a0 <imprimeArmazem@@Base>
   10eec:	movw	r0, #6832	; 0x1ab0
   10ef0:	movt	r0, #1
   10ef4:	bl	10ba0 <puts@plt>
   10ef8:	mov	r0, r4
   10efc:	ldr	r5, [sp, #8]
   10f00:	mov	r1, r5
   10f04:	bl	11388 <armazenar_contentor@@Base>
   10f08:	cmp	r0, #0
   10f0c:	ldr	r6, [sp, #20]
   10f10:	beq	10f24 <main@@Base+0x240>
   10f14:	ldr	r1, [r5]
   10f18:	movw	r0, #6517	; 0x1975
   10f1c:	movt	r0, #1
   10f20:	bl	10b7c <printf@plt>
   10f24:	mov	r0, r4
   10f28:	ldr	sl, [sp, #16]
   10f2c:	mov	r1, sl
   10f30:	bl	11388 <armazenar_contentor@@Base>
   10f34:	cmp	r0, #0
   10f38:	ldr	r5, [sp, #32]
   10f3c:	beq	10f50 <main@@Base+0x26c>
   10f40:	ldr	r1, [sl]
   10f44:	movw	r0, #6517	; 0x1975
   10f48:	movt	r0, #1
   10f4c:	bl	10b7c <printf@plt>
   10f50:	mov	r0, r4
   10f54:	mov	r1, r6
   10f58:	bl	11388 <armazenar_contentor@@Base>
   10f5c:	cmp	r0, #0
   10f60:	mov	r0, r6
   10f64:	ldr	r6, [sp, #28]
   10f68:	beq	10f7c <main@@Base+0x298>
   10f6c:	ldr	r1, [r0]
   10f70:	movw	r0, #6517	; 0x1975
   10f74:	movt	r0, #1
   10f78:	bl	10b7c <printf@plt>
   10f7c:	mov	r0, r4
   10f80:	mov	r1, r7
   10f84:	bl	11388 <armazenar_contentor@@Base>
   10f88:	cmp	r0, #0
   10f8c:	beq	10fa0 <main@@Base+0x2bc>
   10f90:	ldr	r1, [r7]
   10f94:	movw	r0, #6517	; 0x1975
   10f98:	movt	r0, #1
   10f9c:	bl	10b7c <printf@plt>
   10fa0:	mov	r0, r4
   10fa4:	mov	r1, r9
   10fa8:	bl	11388 <armazenar_contentor@@Base>
   10fac:	cmp	r0, #0
   10fb0:	beq	10fc4 <main@@Base+0x2e0>
   10fb4:	ldr	r1, [r9]
   10fb8:	movw	r0, #6517	; 0x1975
   10fbc:	movt	r0, #1
   10fc0:	bl	10b7c <printf@plt>
   10fc4:	mov	r0, r4
   10fc8:	ldr	r7, [sp, #4]
   10fcc:	mov	r1, r7
   10fd0:	bl	11388 <armazenar_contentor@@Base>
   10fd4:	cmp	r0, #0
   10fd8:	beq	10fec <main@@Base+0x308>
   10fdc:	ldr	r1, [r7]
   10fe0:	movw	r0, #6517	; 0x1975
   10fe4:	movt	r0, #1
   10fe8:	bl	10b7c <printf@plt>
   10fec:	mov	r0, r4
   10ff0:	mov	r1, r6
   10ff4:	bl	11388 <armazenar_contentor@@Base>
   10ff8:	cmp	r0, #0
   10ffc:	beq	11010 <main@@Base+0x32c>
   11000:	ldr	r1, [r6]
   11004:	movw	r0, #6517	; 0x1975
   11008:	movt	r0, #1
   1100c:	bl	10b7c <printf@plt>
   11010:	mov	r0, r4
   11014:	mov	r1, r5
   11018:	bl	11388 <armazenar_contentor@@Base>
   1101c:	cmp	r0, #0
   11020:	beq	11034 <main@@Base+0x350>
   11024:	ldr	r1, [r5]
   11028:	movw	r0, #6517	; 0x1975
   1102c:	movt	r0, #1
   11030:	bl	10b7c <printf@plt>
   11034:	movw	r0, #6880	; 0x1ae0
   11038:	movt	r0, #1
   1103c:	bl	10ba0 <puts@plt>
   11040:	mov	r0, r4
   11044:	bl	111a0 <imprimeArmazem@@Base>
   11048:	mov	r0, r4
   1104c:	bl	1132c <armazem_cheio@@Base>
   11050:	cmp	r0, #0
   11054:	beq	11074 <main@@Base+0x390>
   11058:	movw	r0, #6659	; 0x1a03
   1105c:	movt	r0, #1
   11060:	b	1107c <main@@Base+0x398>
   11064:	cmnmi	r6, #0
   11068:	cmnmi	sl, #0
   1106c:	strmi	r8, [r4], #-0
   11070:	ldrtmi	r8, [r1], #-0
   11074:	movw	r0, #6912	; 0x1b00
   11078:	movt	r0, #1
   1107c:	bl	10ba0 <puts@plt>
   11080:	mov	r0, r4
   11084:	ldr	r1, [sp, #36]	; 0x24
   11088:	bl	11388 <armazenar_contentor@@Base>
   1108c:	cmp	r0, #0
   11090:	beq	110a4 <main@@Base+0x3c0>
   11094:	ldr	r1, [r8]
   11098:	movw	r0, #6555	; 0x199b
   1109c:	movt	r0, #1
   110a0:	bl	10b7c <printf@plt>
   110a4:	movw	r0, #6960	; 0x1b30
   110a8:	movt	r0, #1
   110ac:	bl	10ba0 <puts@plt>
   110b0:	mov	r7, #8
   110b4:	movw	r5, #7168	; 0x1c00
   110b8:	movt	r5, #1
   110bc:	mov	r0, r4
   110c0:	bl	1142c <expedir_contentor@@Base>
   110c4:	mov	r6, r0
   110c8:	mov	r0, r5
   110cc:	bl	10ba0 <puts@plt>
   110d0:	mov	r0, r6
   110d4:	bl	11534 <contentor_imprime@@Base>
   110d8:	subs	r7, r7, #1
   110dc:	bne	110bc <main@@Base+0x3d8>
   110e0:	movw	r0, #7008	; 0x1b60
   110e4:	movt	r0, #1
   110e8:	bl	10ba0 <puts@plt>
   110ec:	mov	r0, r4
   110f0:	bl	111a0 <imprimeArmazem@@Base>
   110f4:	movw	r0, #7040	; 0x1b80
   110f8:	movt	r0, #1
   110fc:	bl	10ba0 <puts@plt>
   11100:	mov	r7, #4
   11104:	movw	r5, #7168	; 0x1c00
   11108:	movt	r5, #1
   1110c:	mov	r0, r4
   11110:	bl	1142c <expedir_contentor@@Base>
   11114:	mov	r6, r0
   11118:	mov	r0, r5
   1111c:	bl	10ba0 <puts@plt>
   11120:	mov	r0, r6
   11124:	bl	11534 <contentor_imprime@@Base>
   11128:	subs	r7, r7, #1
   1112c:	bne	1110c <main@@Base+0x428>
   11130:	movw	r0, #7088	; 0x1bb0
   11134:	movt	r0, #1
   11138:	bl	10ba0 <puts@plt>
   1113c:	mov	r0, r4
   11140:	bl	111a0 <imprimeArmazem@@Base>
   11144:	mov	r0, r4
   11148:	bl	11304 <armazem_vazio@@Base>
   1114c:	cmp	r0, #0
   11150:	beq	11168 <main@@Base+0x484>
   11154:	movw	r0, #6645	; 0x19f5
   11158:	movt	r0, #1
   1115c:	b	11170 <main@@Base+0x48c>
   11160:			; <UNDEFINED> instruction: 0x43be0000
   11164:	bicmi	r0, r3, #0
   11168:	movw	r0, #7120	; 0x1bd0
   1116c:	movt	r0, #1
   11170:	bl	10ba0 <puts@plt>
   11174:	mov	r0, #0
   11178:	sub	sp, fp, #40	; 0x28
   1117c:	vpop	{d8}
   11180:	add	sp, sp, #4
   11184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11188:	sbcmi	r0, r8, #0
   1118c:	adcmi	r0, r0, #0
   11190:	tstmi	r6, #0
   11194:	orrmi	r0, r7, #0
   11198:	bicsmi	r0, r7, #0
   1119c:	movtmi	r0, #32768	; 0x8000

000111a0 <imprimeArmazem@@Base>:
   111a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a4:	add	fp, sp, #28
   111a8:	sub	sp, sp, #4
   111ac:	cmp	r0, #0
   111b0:	beq	112c8 <imprimeArmazem@@Base+0x128>
   111b4:	mov	sl, r0
   111b8:	ldr	r4, [r0, #8]
   111bc:	cmp	r4, #0
   111c0:	beq	112c8 <imprimeArmazem@@Base+0x128>
   111c4:	ldr	r8, [r4, #4]
   111c8:	mov	r0, r8
   111cc:	mov	r1, #4
   111d0:	bl	10b70 <calloc@plt>
   111d4:	str	r0, [sp]
   111d8:	ldr	r0, [r4]
   111dc:	cmp	r0, #0
   111e0:	beq	11200 <imprimeArmazem@@Base+0x60>
   111e4:	ldr	r1, [sp]
   111e8:	ldr	r2, [r0]
   111ec:	ldr	r2, [r2, #4]
   111f0:	str	r2, [r1], #4
   111f4:	ldr	r0, [r0, #4]
   111f8:	cmp	r0, #0
   111fc:	bne	111e8 <imprimeArmazem@@Base+0x48>
   11200:	mov	r0, #10
   11204:	bl	10bdc <putchar@plt>
   11208:	ldr	r4, [sl, #4]
   1120c:	cmp	r4, #1
   11210:	blt	11270 <imprimeArmazem@@Base+0xd0>
   11214:	movw	r5, #6635	; 0x19eb
   11218:	movt	r5, #1
   1121c:	movw	r7, #6630	; 0x19e6
   11220:	movt	r7, #1
   11224:	movw	r0, #6637	; 0x19ed
   11228:	movt	r0, #1
   1122c:	bl	10b7c <printf@plt>
   11230:	cmp	r8, #1
   11234:	blt	11260 <imprimeArmazem@@Base+0xc0>
   11238:	mov	r6, r8
   1123c:	ldr	r9, [sp]
   11240:	ldr	r0, [r9]
   11244:	cmp	r0, r4
   11248:	movlt	r0, r5
   1124c:	movge	r0, r7
   11250:	bl	10b7c <printf@plt>
   11254:	subs	r6, r6, #1
   11258:	add	r9, r9, #4
   1125c:	bne	11240 <imprimeArmazem@@Base+0xa0>
   11260:	mov	r0, #10
   11264:	bl	10bdc <putchar@plt>
   11268:	subs	r4, r4, #1
   1126c:	bgt	11224 <imprimeArmazem@@Base+0x84>
   11270:	movw	r0, #6642	; 0x19f2
   11274:	movt	r0, #1
   11278:	bl	10b7c <printf@plt>
   1127c:	ldr	r0, [sl]
   11280:	cmp	r0, #1
   11284:	blt	112ac <imprimeArmazem@@Base+0x10c>
   11288:	mov	r4, #0
   1128c:	movw	r5, #6640	; 0x19f0
   11290:	movt	r5, #1
   11294:	mov	r0, r5
   11298:	bl	10b7c <printf@plt>
   1129c:	add	r4, r4, #1
   112a0:	ldr	r0, [sl]
   112a4:	cmp	r4, r0
   112a8:	blt	11294 <imprimeArmazem@@Base+0xf4>
   112ac:	movw	r0, #6553	; 0x1999
   112b0:	movt	r0, #1
   112b4:	bl	10ba0 <puts@plt>
   112b8:	ldr	r0, [sp]
   112bc:	sub	sp, fp, #28
   112c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112c4:	b	10b88 <free@plt>
   112c8:	sub	sp, fp, #28
   112cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000112d0 <armazem_novo@@Base>:
   112d0:	push	{r4, r5, r6, sl, fp, lr}
   112d4:	add	fp, sp, #16
   112d8:	mov	r4, r1
   112dc:	mov	r5, r0
   112e0:	mov	r0, #12
   112e4:	bl	10bac <malloc@plt>
   112e8:	mov	r6, r0
   112ec:	str	r5, [r0]
   112f0:	str	r4, [r0, #4]
   112f4:	bl	115b0 <fila_nova@@Base>
   112f8:	str	r0, [r6, #8]
   112fc:	mov	r0, r6
   11300:	pop	{r4, r5, r6, sl, fp, pc}

00011304 <armazem_vazio@@Base>:
   11304:	cmp	r0, #0
   11308:	moveq	r0, #1
   1130c:	bxeq	lr
   11310:	push	{fp, lr}
   11314:	mov	fp, sp
   11318:	ldr	r0, [r0, #8]
   1131c:	bl	11620 <fila_tamanho@@Base>
   11320:	clz	r0, r0
   11324:	lsr	r0, r0, #5
   11328:	pop	{fp, pc}

0001132c <armazem_cheio@@Base>:
   1132c:	push	{r4, sl, fp, lr}
   11330:	add	fp, sp, #8
   11334:	mov	r4, r0
   11338:	bl	11304 <armazem_vazio@@Base>
   1133c:	mov	r1, r0
   11340:	mov	r0, #0
   11344:	cmp	r1, #0
   11348:	popne	{r4, sl, fp, pc}
   1134c:	ldr	r0, [r4, #8]
   11350:	bl	11620 <fila_tamanho@@Base>
   11354:	ldr	r1, [r4]
   11358:	cmp	r0, r1
   1135c:	bne	11380 <armazem_cheio@@Base+0x54>
   11360:	ldr	r0, [r4, #8]
   11364:	bl	11650 <fila_back@@Base>
   11368:	ldr	r1, [r4, #4]
   1136c:	ldr	r2, [r0, #4]
   11370:	mov	r0, #1
   11374:	cmp	r2, r1
   11378:	movne	r0, #0
   1137c:	pop	{r4, sl, fp, pc}
   11380:	mov	r0, #0
   11384:	pop	{r4, sl, fp, pc}

00011388 <armazenar_contentor@@Base>:
   11388:	push	{r4, r5, r6, r7, fp, lr}
   1138c:	add	fp, sp, #16
   11390:	mov	r4, r1
   11394:	mov	r5, r0
   11398:	bl	11780 <pilha_nova@@Base>
   1139c:	mov	r7, #0
   113a0:	cmp	r5, #0
   113a4:	cmpne	r4, #0
   113a8:	bne	113b4 <armazenar_contentor@@Base+0x2c>
   113ac:	mov	r0, r7
   113b0:	pop	{r4, r5, r6, r7, fp, pc}
   113b4:	mov	r6, r0
   113b8:	mov	r0, r5
   113bc:	bl	1132c <armazem_cheio@@Base>
   113c0:	cmp	r0, #0
   113c4:	bne	113ac <armazenar_contentor@@Base+0x24>
   113c8:	mov	r0, r5
   113cc:	bl	11304 <armazem_vazio@@Base>
   113d0:	cmp	r0, #0
   113d4:	beq	113ec <armazenar_contentor@@Base+0x64>
   113d8:	ldr	r7, [r5, #8]
   113dc:	bl	11780 <pilha_nova@@Base>
   113e0:	mov	r1, r0
   113e4:	mov	r0, r7
   113e8:	bl	11688 <fila_push@@Base>
   113ec:	ldr	r0, [r5, #8]
   113f0:	bl	11650 <fila_back@@Base>
   113f4:	ldr	r1, [r5, #4]
   113f8:	ldr	r0, [r0, #4]
   113fc:	cmp	r0, r1
   11400:	bne	11410 <armazenar_contentor@@Base+0x88>
   11404:	ldr	r0, [r5, #8]
   11408:	mov	r1, r6
   1140c:	bl	11688 <fila_push@@Base>
   11410:	ldr	r0, [r5, #8]
   11414:	bl	11650 <fila_back@@Base>
   11418:	mov	r1, r4
   1141c:	bl	11820 <pilha_push@@Base>
   11420:	mov	r7, #1
   11424:	mov	r0, r7
   11428:	pop	{r4, r5, r6, r7, fp, pc}

0001142c <expedir_contentor@@Base>:
   1142c:	push	{r4, r5, fp, lr}
   11430:	add	fp, sp, #8
   11434:	mov	r4, r0
   11438:	bl	11304 <armazem_vazio@@Base>
   1143c:	mov	r5, #0
   11440:	cmp	r0, #0
   11444:	beq	11450 <expedir_contentor@@Base+0x24>
   11448:	mov	r0, r5
   1144c:	pop	{r4, r5, fp, pc}
   11450:	ldr	r0, [r4, #8]
   11454:	bl	11630 <fila_front@@Base>
   11458:	bl	11800 <pilha_top@@Base>
   1145c:	cmp	r0, #0
   11460:	beq	11448 <expedir_contentor@@Base+0x1c>
   11464:	ldr	r0, [r4, #8]
   11468:	bl	11630 <fila_front@@Base>
   1146c:	bl	11800 <pilha_top@@Base>
   11470:	ldr	r5, [r0]
   11474:	ldr	r0, [r4, #8]
   11478:	bl	11630 <fila_front@@Base>
   1147c:	bl	11800 <pilha_top@@Base>
   11480:	vldr	s0, [r0, #4]
   11484:	mov	r0, r5
   11488:	bl	114c8 <contentor_novo@@Base>
   1148c:	mov	r5, r0
   11490:	ldr	r0, [r4, #8]
   11494:	bl	11630 <fila_front@@Base>
   11498:	mov	r1, r0
   1149c:	ldr	r0, [r4, #8]
   114a0:	ldr	r1, [r1, #4]
   114a4:	cmp	r1, #1
   114a8:	bgt	114b8 <expedir_contentor@@Base+0x8c>
   114ac:	bl	116e0 <fila_pop@@Base>
   114b0:	mov	r0, r5
   114b4:	pop	{r4, r5, fp, pc}
   114b8:	bl	11630 <fila_front@@Base>
   114bc:	bl	11860 <pilha_pop@@Base>
   114c0:	mov	r0, r5
   114c4:	pop	{r4, r5, fp, pc}

000114c8 <contentor_novo@@Base>:
   114c8:	push	{r4, r5, fp, lr}
   114cc:	add	fp, sp, #8
   114d0:	vpush	{d8}
   114d4:	vmov.f32	s16, s0
   114d8:	mov	r4, r0
   114dc:	mov	r0, #8
   114e0:	bl	10bac <malloc@plt>
   114e4:	mov	r5, r0
   114e8:	mov	r0, r4
   114ec:	bl	10bd0 <strlen@plt>
   114f0:	add	r0, r0, #1
   114f4:	bl	10bac <malloc@plt>
   114f8:	str	r0, [r5]
   114fc:	mov	r1, r4
   11500:	bl	10b94 <strcpy@plt>
   11504:	vstr	s16, [r5, #4]
   11508:	mov	r0, r5
   1150c:	vpop	{d8}
   11510:	pop	{r4, r5, fp, pc}

00011514 <contentor_apaga@@Base>:
   11514:	push	{r4, sl, fp, lr}
   11518:	add	fp, sp, #8
   1151c:	mov	r4, r0
   11520:	ldr	r0, [r0]
   11524:	bl	10b88 <free@plt>
   11528:	mov	r0, r4
   1152c:	pop	{r4, sl, fp, lr}
   11530:	b	10b88 <free@plt>

00011534 <contentor_imprime@@Base>:
   11534:	cmp	r0, #0
   11538:	beq	11558 <contentor_imprime@@Base+0x24>
   1153c:	vldr	s0, [r0, #4]
   11540:	vcvt.f64.f32	d16, s0
   11544:	ldr	r1, [r0]
   11548:	vmov	r2, r3, d16
   1154c:	movw	r0, #7200	; 0x1c20
   11550:	movt	r0, #1
   11554:	b	10b7c <printf@plt>
   11558:	movw	r0, #7243	; 0x1c4b
   1155c:	movt	r0, #1
   11560:	b	10ba0 <puts@plt>

00011564 <fila_novo_elemento@@Base>:
   11564:	push	{r4, r5, fp, lr}
   11568:	add	fp, sp, #8
   1156c:	mov	r5, r0
   11570:	mov	r0, #8
   11574:	bl	10bac <malloc@plt>
   11578:	mov	r4, #0
   1157c:	cmp	r0, #0
   11580:	beq	1159c <fila_novo_elemento@@Base+0x38>
   11584:	str	r5, [r0]
   11588:	cmp	r5, #0
   1158c:	beq	115a4 <fila_novo_elemento@@Base+0x40>
   11590:	mov	r1, #0
   11594:	str	r1, [r0, #4]
   11598:	mov	r4, r0
   1159c:	mov	r0, r4
   115a0:	pop	{r4, r5, fp, pc}
   115a4:	bl	10b88 <free@plt>
   115a8:	mov	r0, r4
   115ac:	pop	{r4, r5, fp, pc}

000115b0 <fila_nova@@Base>:
   115b0:	push	{fp, lr}
   115b4:	mov	fp, sp
   115b8:	mov	r0, #8
   115bc:	bl	10bac <malloc@plt>
   115c0:	cmp	r0, #0
   115c4:	moveq	r0, #0
   115c8:	movne	r1, #0
   115cc:	strne	r1, [r0]
   115d0:	strne	r1, [r0, #4]
   115d4:	pop	{fp, pc}

000115d8 <fila_apaga@@Base>:
   115d8:	cmp	r0, #0
   115dc:	bxeq	lr
   115e0:	push	{r4, r5, fp, lr}
   115e4:	add	fp, sp, #8
   115e8:	mov	r4, r0
   115ec:	b	11608 <fila_apaga@@Base+0x30>
   115f0:	ldr	r0, [r5, #4]
   115f4:	str	r0, [r4]
   115f8:	ldr	r0, [r5]
   115fc:	bl	117a8 <pilha_apaga@@Base>
   11600:	mov	r0, r5
   11604:	bl	10b88 <free@plt>
   11608:	ldr	r5, [r4]
   1160c:	cmp	r5, #0
   11610:	bne	115f0 <fila_apaga@@Base+0x18>
   11614:	mov	r0, r4
   11618:	pop	{r4, r5, fp, lr}
   1161c:	b	10b88 <free@plt>

00011620 <fila_tamanho@@Base>:
   11620:	cmp	r0, #0
   11624:	ldrne	r0, [r0, #4]
   11628:	mvneq	r0, #0
   1162c:	bx	lr

00011630 <fila_front@@Base>:
   11630:	mov	r1, r0
   11634:	mov	r0, #0
   11638:	cmp	r1, #0
   1163c:	ldrne	r2, [r1, #4]
   11640:	cmpne	r2, #0
   11644:	ldrne	r0, [r1]
   11648:	ldrne	r0, [r0]
   1164c:	bx	lr

00011650 <fila_back@@Base>:
   11650:	mov	r1, r0
   11654:	mov	r0, #0
   11658:	cmp	r1, #0
   1165c:	ldrne	r2, [r1, #4]
   11660:	cmpne	r2, #0
   11664:	bne	1166c <fila_back@@Base+0x1c>
   11668:	bx	lr
   1166c:	ldr	r0, [r1]
   11670:	mov	r1, r0
   11674:	ldr	r0, [r0, #4]
   11678:	cmp	r0, #0
   1167c:	bne	11670 <fila_back@@Base+0x20>
   11680:	ldr	r0, [r1]
   11684:	bx	lr

00011688 <fila_push@@Base>:
   11688:	push	{r4, r5, fp, lr}
   1168c:	add	fp, sp, #8
   11690:	cmp	r0, #0
   11694:	popeq	{r4, r5, fp, pc}
   11698:	mov	r4, r0
   1169c:	ldr	r5, [r0]
   116a0:	mov	r0, r1
   116a4:	bl	11564 <fila_novo_elemento@@Base>
   116a8:	cmp	r0, #0
   116ac:	beq	116dc <fila_push@@Base+0x54>
   116b0:	ldr	r1, [r4, #4]
   116b4:	add	r1, r1, #1
   116b8:	str	r1, [r4, #4]
   116bc:	cmp	r5, #0
   116c0:	streq	r0, [r4]
   116c4:	popeq	{r4, r5, fp, pc}
   116c8:	mov	r1, r5
   116cc:	ldr	r5, [r5, #4]
   116d0:	cmp	r5, #0
   116d4:	bne	116c8 <fila_push@@Base+0x40>
   116d8:	str	r0, [r1, #4]
   116dc:	pop	{r4, r5, fp, pc}

000116e0 <fila_pop@@Base>:
   116e0:	cmp	r0, #0
   116e4:	ldrne	r1, [r0, #4]
   116e8:	cmpne	r1, #0
   116ec:	bxeq	lr
   116f0:	push	{r4, sl, fp, lr}
   116f4:	add	fp, sp, #8
   116f8:	sub	r1, r1, #1
   116fc:	str	r1, [r0, #4]
   11700:	ldr	r4, [r0]
   11704:	ldr	r1, [r4, #4]
   11708:	str	r1, [r0]
   1170c:	ldr	r0, [r4]
   11710:	bl	117a8 <pilha_apaga@@Base>
   11714:	mov	r0, r4
   11718:	pop	{r4, sl, fp, lr}
   1171c:	b	10b88 <free@plt>

00011720 <pilha_novo_elemento@@Base>:
   11720:	push	{r4, r5, r6, sl, fp, lr}
   11724:	add	fp, sp, #16
   11728:	mov	r6, r0
   1172c:	mov	r0, #8
   11730:	bl	10bac <malloc@plt>
   11734:	mov	r4, #0
   11738:	cmp	r0, #0
   1173c:	beq	11768 <pilha_novo_elemento@@Base+0x48>
   11740:	mov	r5, r0
   11744:	vldr	s0, [r6, #4]
   11748:	ldr	r0, [r6]
   1174c:	bl	114c8 <contentor_novo@@Base>
   11750:	str	r0, [r5]
   11754:	cmp	r0, #0
   11758:	beq	11770 <pilha_novo_elemento@@Base+0x50>
   1175c:	mov	r0, #0
   11760:	str	r0, [r5, #4]
   11764:	mov	r4, r5
   11768:	mov	r0, r4
   1176c:	pop	{r4, r5, r6, sl, fp, pc}
   11770:	mov	r0, r5
   11774:	bl	10b88 <free@plt>
   11778:	mov	r0, r4
   1177c:	pop	{r4, r5, r6, sl, fp, pc}

00011780 <pilha_nova@@Base>:
   11780:	push	{fp, lr}
   11784:	mov	fp, sp
   11788:	mov	r0, #8
   1178c:	bl	10bac <malloc@plt>
   11790:	cmp	r0, #0
   11794:	moveq	r0, #0
   11798:	movne	r1, #0
   1179c:	strne	r1, [r0]
   117a0:	strne	r1, [r0, #4]
   117a4:	pop	{fp, pc}

000117a8 <pilha_apaga@@Base>:
   117a8:	cmp	r0, #0
   117ac:	bxeq	lr
   117b0:	push	{r4, r5, fp, lr}
   117b4:	add	fp, sp, #8
   117b8:	mov	r4, r0
   117bc:	b	117d8 <pilha_apaga@@Base+0x30>
   117c0:	ldr	r0, [r5, #4]
   117c4:	str	r0, [r4]
   117c8:	ldr	r0, [r5]
   117cc:	bl	11514 <contentor_apaga@@Base>
   117d0:	mov	r0, r5
   117d4:	bl	10b88 <free@plt>
   117d8:	ldr	r5, [r4]
   117dc:	cmp	r5, #0
   117e0:	bne	117c0 <pilha_apaga@@Base+0x18>
   117e4:	mov	r0, r4
   117e8:	pop	{r4, r5, fp, lr}
   117ec:	b	10b88 <free@plt>

000117f0 <pilha_tamanho@@Base>:
   117f0:	cmp	r0, #0
   117f4:	ldrne	r0, [r0, #4]
   117f8:	mvneq	r0, #0
   117fc:	bx	lr

00011800 <pilha_top@@Base>:
   11800:	mov	r1, r0
   11804:	mov	r0, #0
   11808:	cmp	r1, #0
   1180c:	ldrne	r2, [r1, #4]
   11810:	cmpne	r2, #0
   11814:	ldrne	r0, [r1]
   11818:	ldrne	r0, [r0]
   1181c:	bx	lr

00011820 <pilha_push@@Base>:
   11820:	push	{r4, sl, fp, lr}
   11824:	add	fp, sp, #8
   11828:	cmp	r0, #0
   1182c:	popeq	{r4, sl, fp, pc}
   11830:	mov	r4, r0
   11834:	mov	r0, r1
   11838:	bl	11720 <pilha_novo_elemento@@Base>
   1183c:	cmp	r0, #0
   11840:	beq	1185c <pilha_push@@Base+0x3c>
   11844:	ldm	r4, {r1, r2}
   11848:	add	r2, r2, #1
   1184c:	str	r2, [r4, #4]
   11850:	cmp	r1, #0
   11854:	strne	r1, [r0, #4]
   11858:	str	r0, [r4]
   1185c:	pop	{r4, sl, fp, pc}

00011860 <pilha_pop@@Base>:
   11860:	cmp	r0, #0
   11864:	ldrne	r1, [r0, #4]
   11868:	cmpne	r1, #0
   1186c:	bxeq	lr
   11870:	push	{r4, sl, fp, lr}
   11874:	add	fp, sp, #8
   11878:	ldr	r4, [r0]
   1187c:	ldr	r2, [r4, #4]
   11880:	sub	r1, r1, #1
   11884:	str	r2, [r0]
   11888:	str	r1, [r0, #4]
   1188c:	ldr	r0, [r4]
   11890:	bl	11514 <contentor_apaga@@Base>
   11894:	mov	r0, r4
   11898:	pop	{r4, sl, fp, lr}
   1189c:	b	10b88 <free@plt>

000118a0 <__libc_csu_init@@Base>:
   118a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118a4:	mov	r7, r0
   118a8:	ldr	r6, [pc, #72]	; 118f8 <__libc_csu_init@@Base+0x58>
   118ac:	ldr	r5, [pc, #72]	; 118fc <__libc_csu_init@@Base+0x5c>
   118b0:	add	r6, pc, r6
   118b4:	add	r5, pc, r5
   118b8:	sub	r6, r6, r5
   118bc:	mov	r8, r1
   118c0:	mov	r9, r2
   118c4:	bl	10b50 <calloc@plt-0x20>
   118c8:	asrs	r6, r6, #2
   118cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   118d0:	mov	r4, #0
   118d4:	add	r4, r4, #1
   118d8:	ldr	r3, [r5], #4
   118dc:	mov	r2, r9
   118e0:	mov	r1, r8
   118e4:	mov	r0, r7
   118e8:	blx	r3
   118ec:	cmp	r6, r4
   118f0:	bne	118d4 <__libc_csu_init@@Base+0x34>
   118f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118f8:	andeq	r0, r1, r4, asr r6
   118fc:	andeq	r0, r1, ip, asr #12

00011900 <__libc_csu_fini@@Base>:
   11900:	bx	lr

Disassembly of section .fini:

00011904 <.fini>:
   11904:	push	{r3, lr}
   11908:	pop	{r3, pc}
