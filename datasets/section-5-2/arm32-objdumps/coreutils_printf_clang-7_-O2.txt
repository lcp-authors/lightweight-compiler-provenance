
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010dac <.init>:
   10dac:	push	{r3, lr}
   10db0:	bl	11084 <__mempcpy_chk@plt+0x48>
   10db4:	pop	{r3, pc}

Disassembly of section .plt:

00010db8 <calloc@plt-0x14>:
   10db8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dbc:	ldr	lr, [pc, #4]	; 10dc8 <calloc@plt-0x4>
   10dc0:	add	lr, pc, lr
   10dc4:	ldr	pc, [lr, #8]!
   10dc8:	andeq	r6, r1, r8, lsr r2

00010dcc <calloc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #568]!	; 0x238

00010dd8 <fputs_unlocked@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #560]!	; 0x230

00010de4 <uselocale@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #552]!	; 0x228

00010df0 <iconv@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #544]!	; 0x220

00010dfc <strcmp@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #536]!	; 0x218

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #528]!	; 0x210

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #520]!	; 0x208

00010e20 <ferror@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #512]!	; 0x200

00010e2c <_exit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #504]!	; 0x1f8

00010e38 <memcpy@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #496]!	; 0x1f0

00010e44 <__strtoull_internal@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e50 <mbsinit@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #480]!	; 0x1e0

00010e5c <strtold@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #472]!	; 0x1d8

00010e68 <memcmp@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #464]!	; 0x1d0

00010e74 <dcgettext@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e80 <realloc@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #448]!	; 0x1c0

00010e8c <textdomain@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #440]!	; 0x1b8

00010e98 <iswprint@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea4 <fwrite@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb0 <lseek64@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #416]!	; 0x1a0

00010ebc <__ctype_get_mb_cur_max@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #408]!	; 0x198

00010ec8 <__fpending@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #400]!	; 0x190

00010ed4 <mbrtowc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #392]!	; 0x188

00010ee0 <error@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #384]!	; 0x180

00010eec <getenv@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #376]!	; 0x178

00010ef8 <malloc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #368]!	; 0x170

00010f04 <iconv_open@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #360]!	; 0x168

00010f10 <__libc_start_main@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #352]!	; 0x160

00010f1c <__vfprintf_chk@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #344]!	; 0x158

00010f28 <__freading@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #336]!	; 0x150

00010f34 <__gmon_start__@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #328]!	; 0x148

00010f40 <__ctype_b_loc@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #320]!	; 0x140

00010f4c <exit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #312]!	; 0x138

00010f58 <strlen@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #304]!	; 0x130

00010f64 <__errno_location@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #296]!	; 0x128

00010f70 <__cxa_atexit@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #288]!	; 0x120

00010f7c <memset@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #280]!	; 0x118

00010f88 <__printf_chk@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #272]!	; 0x110

00010f94 <fileno@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #264]!	; 0x108

00010fa0 <__fprintf_chk@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #256]!	; 0x100

00010fac <memchr@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #248]!	; 0xf8

00010fb8 <fclose@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #240]!	; 0xf0

00010fc4 <fseeko64@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #232]!	; 0xe8

00010fd0 <__overflow@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #224]!	; 0xe0

00010fdc <setlocale@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #216]!	; 0xd8

00010fe8 <strrchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #208]!	; 0xd0

00010ff4 <nl_langinfo@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #200]!	; 0xc8

00011000 <newlocale@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #192]!	; 0xc0

0001100c <__strtoll_internal@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #184]!	; 0xb8

00011018 <bindtextdomain@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #176]!	; 0xb0

00011024 <strncmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #168]!	; 0xa8

00011030 <abort@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #160]!	; 0xa0

0001103c <__mempcpy_chk@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #152]!	; 0x98

Disassembly of section .text:

00011048 <.text>:
   11048:	mov	fp, #0
   1104c:	mov	lr, #0
   11050:	pop	{r1}		; (ldr r1, [sp], #4)
   11054:	mov	r2, sp
   11058:	push	{r2}		; (str r2, [sp, #-4]!)
   1105c:	push	{r0}		; (str r0, [sp, #-4]!)
   11060:	ldr	ip, [pc, #16]	; 11078 <__mempcpy_chk@plt+0x3c>
   11064:	push	{ip}		; (str ip, [sp, #-4]!)
   11068:	ldr	r0, [pc, #12]	; 1107c <__mempcpy_chk@plt+0x40>
   1106c:	ldr	r3, [pc, #12]	; 11080 <__mempcpy_chk@plt+0x44>
   11070:	bl	10f10 <__libc_start_main@plt>
   11074:	bl	11030 <abort@plt>
   11078:	andeq	r6, r1, r4, rrx
   1107c:	andeq	r1, r1, r4, lsl r4
   11080:	andeq	r6, r1, r4
   11084:	ldr	r3, [pc, #20]	; 110a0 <__mempcpy_chk@plt+0x64>
   11088:	ldr	r2, [pc, #20]	; 110a4 <__mempcpy_chk@plt+0x68>
   1108c:	add	r3, pc, r3
   11090:	ldr	r2, [r3, r2]
   11094:	cmp	r2, #0
   11098:	bxeq	lr
   1109c:	b	10f34 <__gmon_start__@plt>
   110a0:	andeq	r5, r1, ip, ror #30
   110a4:	andeq	r0, r0, r0, ror #1
   110a8:	ldr	r0, [pc, #24]	; 110c8 <__mempcpy_chk@plt+0x8c>
   110ac:	ldr	r3, [pc, #24]	; 110cc <__mempcpy_chk@plt+0x90>
   110b0:	cmp	r3, r0
   110b4:	bxeq	lr
   110b8:	ldr	r3, [pc, #16]	; 110d0 <__mempcpy_chk@plt+0x94>
   110bc:	cmp	r3, #0
   110c0:	bxeq	lr
   110c4:	bx	r3
   110c8:	andeq	r7, r2, r8, lsr r1
   110cc:	andeq	r7, r2, r8, lsr r1
   110d0:	andeq	r0, r0, r0
   110d4:	ldr	r0, [pc, #36]	; 11100 <__mempcpy_chk@plt+0xc4>
   110d8:	ldr	r1, [pc, #36]	; 11104 <__mempcpy_chk@plt+0xc8>
   110dc:	sub	r1, r1, r0
   110e0:	asr	r1, r1, #2
   110e4:	add	r1, r1, r1, lsr #31
   110e8:	asrs	r1, r1, #1
   110ec:	bxeq	lr
   110f0:	ldr	r3, [pc, #16]	; 11108 <__mempcpy_chk@plt+0xcc>
   110f4:	cmp	r3, #0
   110f8:	bxeq	lr
   110fc:	bx	r3
   11100:	andeq	r7, r2, r8, lsr r1
   11104:	andeq	r7, r2, r8, lsr r1
   11108:	andeq	r0, r0, r0
   1110c:	push	{r4, lr}
   11110:	ldr	r4, [pc, #24]	; 11130 <__mempcpy_chk@plt+0xf4>
   11114:	ldrb	r3, [r4]
   11118:	cmp	r3, #0
   1111c:	popne	{r4, pc}
   11120:	bl	110a8 <__mempcpy_chk@plt+0x6c>
   11124:	mov	r3, #1
   11128:	strb	r3, [r4]
   1112c:	pop	{r4, pc}
   11130:	andeq	r7, r2, r8, asr #2
   11134:	b	110d4 <__mempcpy_chk@plt+0x98>
   11138:	push	{fp, lr}
   1113c:	mov	fp, sp
   11140:	sub	sp, sp, #56	; 0x38
   11144:	mov	r4, r0
   11148:	cmp	r0, #0
   1114c:	bne	113d0 <__mempcpy_chk@plt+0x394>
   11150:	movw	r1, #24755	; 0x60b3
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e74 <dcgettext@plt>
   11164:	mov	r1, r0
   11168:	movw	r0, #29016	; 0x7158
   1116c:	movt	r0, #2
   11170:	ldr	r2, [r0]
   11174:	mov	r0, #1
   11178:	mov	r3, r2
   1117c:	bl	10f88 <__printf_chk@plt>
   11180:	movw	r1, #24804	; 0x60e4
   11184:	mov	r0, #0
   11188:	mov	r2, #5
   1118c:	movt	r1, #1
   11190:	bl	10e74 <dcgettext@plt>
   11194:	movw	r7, #28996	; 0x7144
   11198:	movt	r7, #2
   1119c:	ldr	r1, [r7]
   111a0:	bl	10dd8 <fputs_unlocked@plt>
   111a4:	movw	r1, #24877	; 0x612d
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e74 <dcgettext@plt>
   111b8:	ldr	r1, [r7]
   111bc:	bl	10dd8 <fputs_unlocked@plt>
   111c0:	movw	r1, #24922	; 0x615a
   111c4:	mov	r0, #0
   111c8:	mov	r2, #5
   111cc:	movt	r1, #1
   111d0:	bl	10e74 <dcgettext@plt>
   111d4:	ldr	r1, [r7]
   111d8:	bl	10dd8 <fputs_unlocked@plt>
   111dc:	movw	r1, #24976	; 0x6190
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	movt	r1, #1
   111ec:	bl	10e74 <dcgettext@plt>
   111f0:	ldr	r1, [r7]
   111f4:	bl	10dd8 <fputs_unlocked@plt>
   111f8:	movw	r1, #25073	; 0x61f1
   111fc:	mov	r0, #0
   11200:	mov	r2, #5
   11204:	movt	r1, #1
   11208:	bl	10e74 <dcgettext@plt>
   1120c:	ldr	r1, [r7]
   11210:	bl	10dd8 <fputs_unlocked@plt>
   11214:	movw	r1, #25302	; 0x62d6
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	movt	r1, #1
   11224:	bl	10e74 <dcgettext@plt>
   11228:	ldr	r1, [r7]
   1122c:	bl	10dd8 <fputs_unlocked@plt>
   11230:	movw	r1, #25554	; 0x63d2
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	movt	r1, #1
   11240:	bl	10e74 <dcgettext@plt>
   11244:	ldr	r1, [r7]
   11248:	bl	10dd8 <fputs_unlocked@plt>
   1124c:	movw	r1, #26002	; 0x6592
   11250:	mov	r0, #0
   11254:	mov	r2, #5
   11258:	movt	r1, #1
   1125c:	bl	10e74 <dcgettext@plt>
   11260:	movw	r5, #26193	; 0x6651
   11264:	mov	r1, r0
   11268:	mov	r0, #1
   1126c:	movt	r5, #1
   11270:	mov	r2, r5
   11274:	bl	10f88 <__printf_chk@plt>
   11278:	movw	r0, #26992	; 0x6970
   1127c:	mov	r2, #48	; 0x30
   11280:	mov	r6, sp
   11284:	movt	r0, #1
   11288:	add	r1, r0, #32
   1128c:	add	r3, r0, #16
   11290:	vld1.64	{d18-d19}, [r0], r2
   11294:	vld1.64	{d16-d17}, [r1]
   11298:	vld1.64	{d20-d21}, [r3]
   1129c:	add	r1, r6, #32
   112a0:	vldr	d22, [r0]
   112a4:	add	r0, r6, #16
   112a8:	vst1.64	{d16-d17}, [r1]
   112ac:	movw	r1, #26359	; 0x66f7
   112b0:	vst1.64	{d20-d21}, [r0]
   112b4:	mov	r0, r6
   112b8:	vst1.64	{d18-d19}, [r0], r2
   112bc:	movt	r1, #1
   112c0:	vstr	d22, [r0]
   112c4:	mov	r0, r5
   112c8:	bl	10dfc <strcmp@plt>
   112cc:	cmp	r0, #0
   112d0:	ldrne	r1, [r6, #8]!
   112d4:	cmpne	r1, #0
   112d8:	bne	112c4 <__mempcpy_chk@plt+0x288>
   112dc:	ldr	r6, [r6, #4]
   112e0:	movw	r1, #26454	; 0x6756
   112e4:	mov	r0, #0
   112e8:	mov	r2, #5
   112ec:	movt	r1, #1
   112f0:	bl	10e74 <dcgettext@plt>
   112f4:	movw	r2, #26257	; 0x6691
   112f8:	movw	r3, #26477	; 0x676d
   112fc:	mov	r1, r0
   11300:	mov	r0, #1
   11304:	movt	r2, #1
   11308:	movt	r3, #1
   1130c:	bl	10f88 <__printf_chk@plt>
   11310:	cmp	r6, #0
   11314:	mov	r0, #5
   11318:	mov	r1, #0
   1131c:	moveq	r6, r5
   11320:	bl	10fdc <setlocale@plt>
   11324:	cmp	r0, #0
   11328:	beq	11360 <__mempcpy_chk@plt+0x324>
   1132c:	movw	r1, #26517	; 0x6795
   11330:	mov	r2, #3
   11334:	movt	r1, #1
   11338:	bl	11024 <strncmp@plt>
   1133c:	cmp	r0, #0
   11340:	beq	11360 <__mempcpy_chk@plt+0x324>
   11344:	movw	r1, #26521	; 0x6799
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	movt	r1, #1
   11354:	bl	10e74 <dcgettext@plt>
   11358:	ldr	r1, [r7]
   1135c:	bl	10dd8 <fputs_unlocked@plt>
   11360:	movw	r1, #26592	; 0x67e0
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	movt	r1, #1
   11370:	bl	10e74 <dcgettext@plt>
   11374:	movw	r2, #26477	; 0x676d
   11378:	mov	r1, r0
   1137c:	mov	r0, #1
   11380:	mov	r3, r5
   11384:	movt	r2, #1
   11388:	bl	10f88 <__printf_chk@plt>
   1138c:	movw	r1, #26619	; 0x67fb
   11390:	mov	r0, #0
   11394:	mov	r2, #5
   11398:	movt	r1, #1
   1139c:	bl	10e74 <dcgettext@plt>
   113a0:	movw	r3, #24876	; 0x612c
   113a4:	mov	r1, r0
   113a8:	movw	r0, #26387	; 0x6713
   113ac:	cmp	r6, r5
   113b0:	mov	r2, r6
   113b4:	movt	r0, #1
   113b8:	movt	r3, #1
   113bc:	moveq	r3, r0
   113c0:	mov	r0, #1
   113c4:	bl	10f88 <__printf_chk@plt>
   113c8:	mov	r0, r4
   113cc:	bl	10f4c <exit@plt>
   113d0:	movw	r0, #28992	; 0x7140
   113d4:	movw	r1, #24716	; 0x608c
   113d8:	mov	r2, #5
   113dc:	movt	r0, #2
   113e0:	movt	r1, #1
   113e4:	ldr	r5, [r0]
   113e8:	mov	r0, #0
   113ec:	bl	10e74 <dcgettext@plt>
   113f0:	mov	r2, r0
   113f4:	movw	r0, #29016	; 0x7158
   113f8:	mov	r1, #1
   113fc:	movt	r0, #2
   11400:	ldr	r3, [r0]
   11404:	mov	r0, r5
   11408:	bl	10fa0 <__fprintf_chk@plt>
   1140c:	mov	r0, r4
   11410:	bl	10f4c <exit@plt>
   11414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11418:	add	fp, sp, #28
   1141c:	sub	sp, sp, #4
   11420:	vpush	{d8}
   11424:	sub	sp, sp, #328	; 0x148
   11428:	mov	r8, r0
   1142c:	ldr	r0, [r1]
   11430:	mov	r7, r1
   11434:	bl	12a78 <__mempcpy_chk@plt+0x1a3c>
   11438:	movw	r1, #24876	; 0x612c
   1143c:	mov	r0, #6
   11440:	movt	r1, #1
   11444:	bl	10fdc <setlocale@plt>
   11448:	movw	r6, #26261	; 0x6695
   1144c:	movw	r1, #26200	; 0x6658
   11450:	movt	r6, #1
   11454:	movt	r1, #1
   11458:	mov	r0, r6
   1145c:	bl	11018 <bindtextdomain@plt>
   11460:	mov	r0, r6
   11464:	bl	10e8c <textdomain@plt>
   11468:	movw	r0, #10600	; 0x2968
   1146c:	movt	r0, #1
   11470:	bl	16068 <__mempcpy_chk@plt+0x502c>
   11474:	movw	r1, #29004	; 0x714c
   11478:	mov	r0, #0
   1147c:	movt	r1, #2
   11480:	strb	r0, [r1]
   11484:	movw	r0, #26224	; 0x6670
   11488:	movt	r0, #1
   1148c:	bl	10eec <getenv@plt>
   11490:	cmp	r0, #0
   11494:	movw	r1, #29005	; 0x714d
   11498:	movwne	r0, #1
   1149c:	movt	r1, #2
   114a0:	cmp	r8, #2
   114a4:	strb	r0, [r1]
   114a8:	bne	11524 <__mempcpy_chk@plt+0x4e8>
   114ac:	mov	r4, r7
   114b0:	movw	r1, #26240	; 0x6680
   114b4:	ldr	r6, [r4, #4]!
   114b8:	movt	r1, #1
   114bc:	mov	r0, r6
   114c0:	bl	10dfc <strcmp@plt>
   114c4:	cmp	r0, #0
   114c8:	beq	121a0 <__mempcpy_chk@plt+0x1164>
   114cc:	movw	r1, #26247	; 0x6687
   114d0:	mov	r0, r6
   114d4:	movt	r1, #1
   114d8:	bl	10dfc <strcmp@plt>
   114dc:	cmp	r0, #0
   114e0:	bne	11530 <__mempcpy_chk@plt+0x4f4>
   114e4:	movw	r0, #28912	; 0x70f0
   114e8:	movw	r1, #26271	; 0x669f
   114ec:	mov	r4, #0
   114f0:	movw	r2, #26257	; 0x6691
   114f4:	movt	r0, #2
   114f8:	movt	r1, #1
   114fc:	movt	r2, #1
   11500:	ldr	r3, [r0]
   11504:	movw	r0, #28996	; 0x7144
   11508:	movt	r0, #2
   1150c:	ldr	r0, [r0]
   11510:	stm	sp, {r1, r4}
   11514:	movw	r1, #26193	; 0x6651
   11518:	movt	r1, #1
   1151c:	bl	15064 <__mempcpy_chk@plt+0x4028>
   11520:	b	120f0 <__mempcpy_chk@plt+0x10b4>
   11524:	blt	12174 <__mempcpy_chk@plt+0x1138>
   11528:	mov	r4, r7
   1152c:	ldr	r6, [r4, #4]!
   11530:	movw	r1, #26287	; 0x66af
   11534:	mov	r0, r6
   11538:	mov	r5, r6
   1153c:	movt	r1, #1
   11540:	bl	10dfc <strcmp@plt>
   11544:	cmp	r0, #0
   11548:	beq	11554 <__mempcpy_chk@plt+0x518>
   1154c:	mov	r4, r7
   11550:	b	11564 <__mempcpy_chk@plt+0x528>
   11554:	cmp	r8, #3
   11558:	blt	12174 <__mempcpy_chk@plt+0x1138>
   1155c:	ldr	r5, [r7, #8]
   11560:	sub	r8, r8, #1
   11564:	add	r7, sp, #64	; 0x40
   11568:	movw	r6, #28996	; 0x7144
   1156c:	add	r1, r4, #8
   11570:	mov	r4, #0
   11574:	str	r5, [sp, #12]
   11578:	add	r0, r7, #99	; 0x63
   1157c:	movt	r6, #2
   11580:	str	r0, [sp, #24]
   11584:	sub	r0, r8, #2
   11588:	mov	sl, r0
   1158c:	str	r0, [sp, #20]
   11590:	mov	r0, #0
   11594:	mov	r8, r1
   11598:	str	r1, [sp, #16]
   1159c:	str	r0, [sp, #32]
   115a0:	mov	r0, #0
   115a4:	str	r0, [sp, #28]
   115a8:	b	115b0 <__mempcpy_chk@plt+0x574>
   115ac:	add	r5, r9, #1
   115b0:	ldrb	r1, [r5]
   115b4:	cmp	r1, #37	; 0x25
   115b8:	beq	1160c <__mempcpy_chk@plt+0x5d0>
   115bc:	cmp	r1, #92	; 0x5c
   115c0:	beq	115f4 <__mempcpy_chk@plt+0x5b8>
   115c4:	cmp	r1, #0
   115c8:	beq	1207c <__mempcpy_chk@plt+0x1040>
   115cc:	ldr	r0, [r6]
   115d0:	ldr	r2, [r0, #20]
   115d4:	ldr	r3, [r0, #24]
   115d8:	cmp	r2, r3
   115dc:	bcs	12064 <__mempcpy_chk@plt+0x1028>
   115e0:	add	r3, r2, #1
   115e4:	str	r3, [r0, #20]
   115e8:	strb	r1, [r2]
   115ec:	mov	r9, r5
   115f0:	b	115ac <__mempcpy_chk@plt+0x570>
   115f4:	mov	r0, r5
   115f8:	mov	r1, #0
   115fc:	bl	1226c <__mempcpy_chk@plt+0x1230>
   11600:	add	r9, r5, r0
   11604:	add	r5, r9, #1
   11608:	b	115b0 <__mempcpy_chk@plt+0x574>
   1160c:	mov	r9, r5
   11610:	ldrb	r0, [r9, #1]!
   11614:	cmp	r0, #113	; 0x71
   11618:	beq	116c4 <__mempcpy_chk@plt+0x688>
   1161c:	cmp	r0, #98	; 0x62
   11620:	beq	11658 <__mempcpy_chk@plt+0x61c>
   11624:	cmp	r0, #37	; 0x25
   11628:	bne	116ec <__mempcpy_chk@plt+0x6b0>
   1162c:	ldr	r0, [r6]
   11630:	ldr	r1, [r0, #20]
   11634:	ldr	r2, [r0, #24]
   11638:	cmp	r1, r2
   1163c:	bcs	1206c <__mempcpy_chk@plt+0x1030>
   11640:	add	r2, r1, #1
   11644:	add	r5, r9, #1
   11648:	str	r2, [r0, #20]
   1164c:	mov	r0, #37	; 0x25
   11650:	strb	r0, [r1]
   11654:	b	115b0 <__mempcpy_chk@plt+0x574>
   11658:	cmp	sl, #1
   1165c:	blt	115ac <__mempcpy_chk@plt+0x570>
   11660:	ldr	r5, [r8]
   11664:	b	1167c <__mempcpy_chk@plt+0x640>
   11668:	mov	r0, r5
   1166c:	mov	r1, #1
   11670:	bl	1226c <__mempcpy_chk@plt+0x1230>
   11674:	add	r0, r5, r0
   11678:	add	r5, r0, #1
   1167c:	ldrb	r1, [r5]
   11680:	cmp	r1, #92	; 0x5c
   11684:	beq	11668 <__mempcpy_chk@plt+0x62c>
   11688:	cmp	r1, #0
   1168c:	beq	1185c <__mempcpy_chk@plt+0x820>
   11690:	ldr	r0, [r6]
   11694:	ldr	r2, [r0, #20]
   11698:	ldr	r3, [r0, #24]
   1169c:	cmp	r2, r3
   116a0:	bcs	116b8 <__mempcpy_chk@plt+0x67c>
   116a4:	add	r3, r2, #1
   116a8:	add	r5, r5, #1
   116ac:	str	r3, [r0, #20]
   116b0:	strb	r1, [r2]
   116b4:	b	1167c <__mempcpy_chk@plt+0x640>
   116b8:	bl	10fd0 <__overflow@plt>
   116bc:	add	r5, r5, #1
   116c0:	b	1167c <__mempcpy_chk@plt+0x640>
   116c4:	cmp	sl, #1
   116c8:	blt	115ac <__mempcpy_chk@plt+0x570>
   116cc:	ldr	r1, [r8], #4
   116d0:	mov	r0, #3
   116d4:	bl	14184 <__mempcpy_chk@plt+0x3148>
   116d8:	ldr	r1, [r6]
   116dc:	bl	10dd8 <fputs_unlocked@plt>
   116e0:	sub	sl, sl, #1
   116e4:	add	r5, r9, #1
   116e8:	b	115b0 <__mempcpy_chk@plt+0x574>
   116ec:	mov	r0, r7
   116f0:	mov	r1, #0
   116f4:	mov	r2, #256	; 0x100
   116f8:	str	sl, [sp, #60]	; 0x3c
   116fc:	mov	r6, #0
   11700:	bl	10f7c <memset@plt>
   11704:	mov	sl, #1
   11708:	movw	r0, #257	; 0x101
   1170c:	movw	r1, #257	; 0x101
   11710:	strb	sl, [sp, #152]	; 0x98
   11714:	strb	sl, [sp, #184]	; 0xb8
   11718:	strb	sl, [sp, #181]	; 0xb5
   1171c:	strb	sl, [sp, #179]	; 0xb3
   11720:	strb	sl, [sp, #175]	; 0xaf
   11724:	strb	sl, [sp, #169]	; 0xa9
   11728:	strb	sl, [sp, #135]	; 0x87
   1172c:	strh	r0, [sp, #133]	; 0x85
   11730:	ldr	r0, [sp, #24]
   11734:	movt	r1, #257	; 0x101
   11738:	strb	sl, [sp, #129]	; 0x81
   1173c:	strb	sl, [sp, #161]	; 0xa1
   11740:	strb	sl, [r0, #4]
   11744:	str	r1, [r0]
   11748:	b	11754 <__mempcpy_chk@plt+0x718>
   1174c:	add	r6, r6, #1
   11750:	add	sl, sl, #1
   11754:	ldrb	r0, [r5, sl]
   11758:	sub	r1, r0, #32
   1175c:	cmp	r1, #41	; 0x29
   11760:	bhi	1186c <__mempcpy_chk@plt+0x830>
   11764:	add	r2, pc, #0
   11768:	ldr	pc, [r2, r1, lsl #2]
   1176c:	andeq	r1, r1, ip, asr #14
   11770:	andeq	r1, r1, ip, ror #16
   11774:	andeq	r1, r1, ip, ror #16
   11778:	andeq	r1, r1, ip, lsr r8
   1177c:	andeq	r1, r1, ip, ror #16
   11780:	andeq	r1, r1, ip, ror #16
   11784:	andeq	r1, r1, ip, ror #16
   11788:	andeq	r1, r1, r4, lsl r8
   1178c:	andeq	r1, r1, ip, ror #16
   11790:	andeq	r1, r1, ip, ror #16
   11794:	andeq	r1, r1, r8, lsr #17
   11798:	andeq	r1, r1, ip, asr #14
   1179c:	andeq	r1, r1, ip, ror #16
   117a0:	andeq	r1, r1, ip, asr #14
   117a4:	andeq	r1, r1, ip, ror #16
   117a8:	andeq	r1, r1, ip, ror #16
   117ac:	andeq	r1, r1, r0, asr r8
   117b0:	andeq	r1, r1, ip, ror #16
   117b4:	andeq	r1, r1, ip, ror #16
   117b8:	andeq	r1, r1, ip, ror #16
   117bc:	andeq	r1, r1, ip, ror #16
   117c0:	andeq	r1, r1, ip, ror #16
   117c4:	andeq	r1, r1, ip, ror #16
   117c8:	andeq	r1, r1, ip, ror #16
   117cc:	andeq	r1, r1, ip, ror #16
   117d0:	andeq	r1, r1, ip, ror #16
   117d4:	andeq	r1, r1, ip, ror #16
   117d8:	andeq	r1, r1, ip, ror #16
   117dc:	andeq	r1, r1, ip, ror #16
   117e0:	andeq	r1, r1, ip, ror #16
   117e4:	andeq	r1, r1, ip, ror #16
   117e8:	andeq	r1, r1, ip, ror #16
   117ec:	andeq	r1, r1, ip, ror #16
   117f0:	andeq	r1, r1, ip, ror #16
   117f4:	andeq	r1, r1, ip, ror #16
   117f8:	andeq	r1, r1, ip, ror #16
   117fc:	andeq	r1, r1, ip, ror #16
   11800:	andeq	r1, r1, ip, ror #16
   11804:	andeq	r1, r1, ip, ror #16
   11808:	andeq	r1, r1, ip, ror #16
   1180c:	andeq	r1, r1, ip, ror #16
   11810:	andeq	r1, r1, r4, lsl r8
   11814:	strb	r4, [sp, #184]	; 0xb8
   11818:	strb	r4, [sp, #152]	; 0x98
   1181c:	strb	r4, [sp, #179]	; 0xb3
   11820:	strb	r4, [sp, #175]	; 0xaf
   11824:	strb	r4, [sp, #133]	; 0x85
   11828:	strb	r4, [sp, #165]	; 0xa5
   1182c:	strb	r4, [sp, #163]	; 0xa3
   11830:	strb	r4, [sp, #129]	; 0x81
   11834:	strb	r4, [sp, #161]	; 0xa1
   11838:	b	1174c <__mempcpy_chk@plt+0x710>
   1183c:	strb	r4, [sp, #179]	; 0xb3
   11840:	strb	r4, [sp, #181]	; 0xb5
   11844:	strb	r4, [sp, #169]	; 0xa9
   11848:	strh	r4, [sp, #163]	; 0xa3
   1184c:	b	1174c <__mempcpy_chk@plt+0x710>
   11850:	strb	r4, [sp, #163]	; 0xa3
   11854:	strb	r4, [sp, #179]	; 0xb3
   11858:	b	1174c <__mempcpy_chk@plt+0x710>
   1185c:	sub	sl, sl, #1
   11860:	add	r8, r8, #4
   11864:	add	r5, r9, #1
   11868:	b	115b0 <__mempcpy_chk@plt+0x574>
   1186c:	sub	r1, r0, #48	; 0x30
   11870:	mov	r2, #0
   11874:	cmp	r1, #9
   11878:	str	r2, [sp, #40]	; 0x28
   1187c:	bhi	118e0 <__mempcpy_chk@plt+0x8a4>
   11880:	add	r0, r5, r6
   11884:	add	r6, r6, #1
   11888:	ldrb	r0, [r0, #2]
   1188c:	sub	r1, r0, #48	; 0x30
   11890:	cmp	r1, #10
   11894:	bcc	11880 <__mempcpy_chk@plt+0x844>
   11898:	add	r1, r5, r6
   1189c:	add	sl, r6, #1
   118a0:	add	r9, r1, #1
   118a4:	b	11908 <__mempcpy_chk@plt+0x8cc>
   118a8:	ldr	r0, [sp, #60]	; 0x3c
   118ac:	cmp	r0, #1
   118b0:	blt	118e8 <__mempcpy_chk@plt+0x8ac>
   118b4:	ldr	r0, [r8]
   118b8:	bl	121a8 <__mempcpy_chk@plt+0x116c>
   118bc:	str	r0, [sp, #32]
   118c0:	adds	r0, r0, #-2147483648	; 0x80000000
   118c4:	adcs	r0, r1, #0
   118c8:	bne	12104 <__mempcpy_chk@plt+0x10c8>
   118cc:	ldr	r0, [sp, #60]	; 0x3c
   118d0:	add	r8, r8, #4
   118d4:	sub	r0, r0, #1
   118d8:	str	r0, [sp, #60]	; 0x3c
   118dc:	b	118f0 <__mempcpy_chk@plt+0x8b4>
   118e0:	add	r9, r5, sl
   118e4:	b	11908 <__mempcpy_chk@plt+0x8cc>
   118e8:	mov	r0, #0
   118ec:	str	r0, [sp, #32]
   118f0:	add	r0, r5, sl
   118f4:	mov	r1, #1
   118f8:	add	sl, sl, #1
   118fc:	add	r9, r0, #1
   11900:	ldrb	r0, [r0, #1]
   11904:	str	r1, [sp, #40]	; 0x28
   11908:	mov	r6, #0
   1190c:	cmp	r0, #46	; 0x2e
   11910:	bne	11964 <__mempcpy_chk@plt+0x928>
   11914:	strb	r4, [sp, #163]	; 0xa3
   11918:	mov	r0, r9
   1191c:	ldrb	r1, [r0, #1]!
   11920:	cmp	r1, #42	; 0x2a
   11924:	bne	1196c <__mempcpy_chk@plt+0x930>
   11928:	ldr	r0, [sp, #60]	; 0x3c
   1192c:	add	sl, sl, #2
   11930:	add	r9, r9, #2
   11934:	mov	r6, #1
   11938:	cmp	r0, #1
   1193c:	blt	119a8 <__mempcpy_chk@plt+0x96c>
   11940:	ldr	r0, [r8]
   11944:	bl	121a8 <__mempcpy_chk@plt+0x116c>
   11948:	cmp	r1, #0
   1194c:	blt	119b8 <__mempcpy_chk@plt+0x97c>
   11950:	str	r0, [sp, #28]
   11954:	subs	r0, r0, #-2147483648	; 0x80000000
   11958:	sbcs	r0, r1, #0
   1195c:	blt	119c0 <__mempcpy_chk@plt+0x984>
   11960:	b	12110 <__mempcpy_chk@plt+0x10d4>
   11964:	str	r8, [sp, #56]	; 0x38
   11968:	b	119dc <__mempcpy_chk@plt+0x9a0>
   1196c:	sub	r1, r1, #48	; 0x30
   11970:	add	sl, sl, #1
   11974:	str	r8, [sp, #56]	; 0x38
   11978:	cmp	r1, #9
   1197c:	bhi	119a0 <__mempcpy_chk@plt+0x964>
   11980:	add	r0, r9, #2
   11984:	ldrb	r1, [r0], #1
   11988:	add	sl, sl, #1
   1198c:	sub	r1, r1, #48	; 0x30
   11990:	cmp	r1, #10
   11994:	bcc	11984 <__mempcpy_chk@plt+0x948>
   11998:	sub	r9, r0, #1
   1199c:	b	119dc <__mempcpy_chk@plt+0x9a0>
   119a0:	mov	r9, r0
   119a4:	b	119dc <__mempcpy_chk@plt+0x9a0>
   119a8:	mov	r0, #0
   119ac:	str	r8, [sp, #56]	; 0x38
   119b0:	str	r0, [sp, #28]
   119b4:	b	119dc <__mempcpy_chk@plt+0x9a0>
   119b8:	mvn	r0, #0
   119bc:	str	r0, [sp, #28]
   119c0:	ldr	r0, [sp, #60]	; 0x3c
   119c4:	add	r8, r8, #4
   119c8:	str	r8, [sp, #56]	; 0x38
   119cc:	sub	r0, r0, #1
   119d0:	str	r0, [sp, #60]	; 0x3c
   119d4:	b	119dc <__mempcpy_chk@plt+0x9a0>
   119d8:	add	r9, r9, #1
   119dc:	ldrb	r8, [r9]
   119e0:	sub	r0, r8, #76	; 0x4c
   119e4:	cmp	r0, #46	; 0x2e
   119e8:	bhi	11ab0 <__mempcpy_chk@plt+0xa74>
   119ec:	add	r1, pc, #0
   119f0:	ldr	pc, [r1, r0, lsl #2]
   119f4:	ldrdeq	r1, [r1], -r8
   119f8:			; <UNDEFINED> instruction: 0x00011ab0
   119fc:			; <UNDEFINED> instruction: 0x00011ab0
   11a00:			; <UNDEFINED> instruction: 0x00011ab0
   11a04:			; <UNDEFINED> instruction: 0x00011ab0
   11a08:			; <UNDEFINED> instruction: 0x00011ab0
   11a0c:			; <UNDEFINED> instruction: 0x00011ab0
   11a10:			; <UNDEFINED> instruction: 0x00011ab0
   11a14:			; <UNDEFINED> instruction: 0x00011ab0
   11a18:			; <UNDEFINED> instruction: 0x00011ab0
   11a1c:			; <UNDEFINED> instruction: 0x00011ab0
   11a20:			; <UNDEFINED> instruction: 0x00011ab0
   11a24:			; <UNDEFINED> instruction: 0x00011ab0
   11a28:			; <UNDEFINED> instruction: 0x00011ab0
   11a2c:			; <UNDEFINED> instruction: 0x00011ab0
   11a30:			; <UNDEFINED> instruction: 0x00011ab0
   11a34:			; <UNDEFINED> instruction: 0x00011ab0
   11a38:			; <UNDEFINED> instruction: 0x00011ab0
   11a3c:			; <UNDEFINED> instruction: 0x00011ab0
   11a40:			; <UNDEFINED> instruction: 0x00011ab0
   11a44:			; <UNDEFINED> instruction: 0x00011ab0
   11a48:			; <UNDEFINED> instruction: 0x00011ab0
   11a4c:			; <UNDEFINED> instruction: 0x00011ab0
   11a50:			; <UNDEFINED> instruction: 0x00011ab0
   11a54:			; <UNDEFINED> instruction: 0x00011ab0
   11a58:			; <UNDEFINED> instruction: 0x00011ab0
   11a5c:			; <UNDEFINED> instruction: 0x00011ab0
   11a60:			; <UNDEFINED> instruction: 0x00011ab0
   11a64:	ldrdeq	r1, [r1], -r8
   11a68:			; <UNDEFINED> instruction: 0x00011ab0
   11a6c:	ldrdeq	r1, [r1], -r8
   11a70:			; <UNDEFINED> instruction: 0x00011ab0
   11a74:	ldrdeq	r1, [r1], -r8
   11a78:			; <UNDEFINED> instruction: 0x00011ab0
   11a7c:			; <UNDEFINED> instruction: 0x00011ab0
   11a80:			; <UNDEFINED> instruction: 0x00011ab0
   11a84:			; <UNDEFINED> instruction: 0x00011ab0
   11a88:			; <UNDEFINED> instruction: 0x00011ab0
   11a8c:			; <UNDEFINED> instruction: 0x00011ab0
   11a90:			; <UNDEFINED> instruction: 0x00011ab0
   11a94:	ldrdeq	r1, [r1], -r8
   11a98:			; <UNDEFINED> instruction: 0x00011ab0
   11a9c:			; <UNDEFINED> instruction: 0x00011ab0
   11aa0:			; <UNDEFINED> instruction: 0x00011ab0
   11aa4:			; <UNDEFINED> instruction: 0x00011ab0
   11aa8:			; <UNDEFINED> instruction: 0x00011ab0
   11aac:	ldrdeq	r1, [r1], -r8
   11ab0:	ldrb	r0, [r7, r8]
   11ab4:	cmp	r0, #0
   11ab8:	beq	12144 <__mempcpy_chk@plt+0x1108>
   11abc:	ldr	r0, [sp, #60]	; 0x3c
   11ac0:	str	r6, [sp, #36]	; 0x24
   11ac4:	cmp	r0, #1
   11ac8:	blt	11ae8 <__mempcpy_chk@plt+0xaac>
   11acc:	sub	r0, r0, #1
   11ad0:	str	r0, [sp, #60]	; 0x3c
   11ad4:	ldr	r0, [sp, #56]	; 0x38
   11ad8:	ldr	r1, [r0], #4
   11adc:	str	r1, [sp, #48]	; 0x30
   11ae0:	str	r0, [sp, #56]	; 0x38
   11ae4:	b	11af4 <__mempcpy_chk@plt+0xab8>
   11ae8:	movw	r0, #24876	; 0x612c
   11aec:	movt	r0, #1
   11af0:	str	r0, [sp, #48]	; 0x30
   11af4:	sub	r7, r8, #65	; 0x41
   11af8:	cmp	r7, #55	; 0x37
   11afc:	bhi	11f64 <__mempcpy_chk@plt+0xf28>
   11b00:	movw	r1, #26892	; 0x690c
   11b04:	add	r0, pc, #8
   11b08:	mov	r6, #2
   11b0c:	movt	r1, #1
   11b10:	ldr	pc, [r0, r7, lsl #2]
   11b14:	strdeq	r1, [r1], -r4
   11b18:	andeq	r1, r1, r4, ror #30
   11b1c:	andeq	r1, r1, r4, ror #30
   11b20:	andeq	r1, r1, r4, ror #30
   11b24:	strdeq	r1, [r1], -r4
   11b28:	strdeq	r1, [r1], -r4
   11b2c:	strdeq	r1, [r1], -r4
   11b30:	andeq	r1, r1, r4, ror #30
   11b34:	andeq	r1, r1, r4, ror #30
   11b38:	andeq	r1, r1, r4, ror #30
   11b3c:	andeq	r1, r1, r4, ror #30
   11b40:	andeq	r1, r1, r4, ror #30
   11b44:	andeq	r1, r1, r4, ror #30
   11b48:	andeq	r1, r1, r4, ror #30
   11b4c:	andeq	r1, r1, r4, ror #30
   11b50:	andeq	r1, r1, r4, ror #30
   11b54:	andeq	r1, r1, r4, ror #30
   11b58:	andeq	r1, r1, r4, ror #30
   11b5c:	andeq	r1, r1, r4, ror #30
   11b60:	andeq	r1, r1, r4, ror #30
   11b64:	andeq	r1, r1, r4, ror #30
   11b68:	andeq	r1, r1, r4, ror #30
   11b6c:	andeq	r1, r1, r4, ror #30
   11b70:	andeq	r1, r1, r4, lsl #24
   11b74:	andeq	r1, r1, r4, ror #30
   11b78:	andeq	r1, r1, r4, ror #30
   11b7c:	andeq	r1, r1, r4, ror #30
   11b80:	andeq	r1, r1, r4, ror #30
   11b84:	andeq	r1, r1, r4, ror #30
   11b88:	andeq	r1, r1, r4, ror #30
   11b8c:	andeq	r1, r1, r4, ror #30
   11b90:	andeq	r1, r1, r4, ror #30
   11b94:	strdeq	r1, [r1], -r4
   11b98:	andeq	r1, r1, r4, ror #30
   11b9c:	andeq	r1, r1, r4, ror #30
   11ba0:	andeq	r1, r1, r4, lsl #24
   11ba4:	strdeq	r1, [r1], -r4
   11ba8:	strdeq	r1, [r1], -r4
   11bac:	strdeq	r1, [r1], -r4
   11bb0:	andeq	r1, r1, r4, ror #30
   11bb4:	andeq	r1, r1, r4, lsl #24
   11bb8:	andeq	r1, r1, r4, ror #30
   11bbc:	andeq	r1, r1, r4, ror #30
   11bc0:	andeq	r1, r1, r4, ror #30
   11bc4:	andeq	r1, r1, r4, ror #30
   11bc8:	andeq	r1, r1, r4, ror #30
   11bcc:	andeq	r1, r1, r4, lsl #24
   11bd0:	andeq	r1, r1, r4, ror #30
   11bd4:	andeq	r1, r1, r4, ror #30
   11bd8:	andeq	r1, r1, r4, ror #30
   11bdc:	andeq	r1, r1, r4, ror #30
   11be0:	andeq	r1, r1, r4, ror #30
   11be4:	andeq	r1, r1, r4, lsl #24
   11be8:	andeq	r1, r1, r4, ror #30
   11bec:	andeq	r1, r1, r4, ror #30
   11bf0:	andeq	r1, r1, r4, lsl #24
   11bf4:	movw	r0, #26896	; 0x6910
   11bf8:	mov	r6, #1
   11bfc:	movt	r0, #1
   11c00:	mov	r1, r0
   11c04:	add	r0, sl, r6
   11c08:	str	r1, [sp, #44]	; 0x2c
   11c0c:	add	r0, r0, #2
   11c10:	bl	15298 <__mempcpy_chk@plt+0x425c>
   11c14:	mov	r1, r5
   11c18:	mov	r2, sl
   11c1c:	mvn	r3, #0
   11c20:	str	r0, [sp, #52]	; 0x34
   11c24:	bl	1103c <__mempcpy_chk@plt>
   11c28:	ldr	r1, [sp, #44]	; 0x2c
   11c2c:	mov	r2, r6
   11c30:	mvn	r3, #0
   11c34:	bl	1103c <__mempcpy_chk@plt>
   11c38:	strb	r8, [r0]
   11c3c:	ldr	r8, [sp, #56]	; 0x38
   11c40:	ldr	sl, [sp, #60]	; 0x3c
   11c44:	movw	r6, #28996	; 0x7144
   11c48:	cmp	r7, #55	; 0x37
   11c4c:	strb	r4, [r0, #1]
   11c50:	movt	r6, #2
   11c54:	bhi	11ff8 <__mempcpy_chk@plt+0xfbc>
   11c58:	add	r0, pc, #0
   11c5c:	ldr	pc, [r0, r7, lsl #2]
   11c60:	andeq	r1, r1, r0, asr #26
   11c64:	strdeq	r1, [r1], -r8
   11c68:	strdeq	r1, [r1], -r8
   11c6c:	strdeq	r1, [r1], -r8
   11c70:	andeq	r1, r1, r0, asr #26
   11c74:	andeq	r1, r1, r0, asr #26
   11c78:	andeq	r1, r1, r0, asr #26
   11c7c:	strdeq	r1, [r1], -r8
   11c80:	strdeq	r1, [r1], -r8
   11c84:	strdeq	r1, [r1], -r8
   11c88:	strdeq	r1, [r1], -r8
   11c8c:	strdeq	r1, [r1], -r8
   11c90:	strdeq	r1, [r1], -r8
   11c94:	strdeq	r1, [r1], -r8
   11c98:	strdeq	r1, [r1], -r8
   11c9c:	strdeq	r1, [r1], -r8
   11ca0:	strdeq	r1, [r1], -r8
   11ca4:	strdeq	r1, [r1], -r8
   11ca8:	strdeq	r1, [r1], -r8
   11cac:	strdeq	r1, [r1], -r8
   11cb0:	strdeq	r1, [r1], -r8
   11cb4:	strdeq	r1, [r1], -r8
   11cb8:	strdeq	r1, [r1], -r8
   11cbc:	andeq	r1, r1, r4, lsr lr
   11cc0:	strdeq	r1, [r1], -r8
   11cc4:	strdeq	r1, [r1], -r8
   11cc8:	strdeq	r1, [r1], -r8
   11ccc:	strdeq	r1, [r1], -r8
   11cd0:	strdeq	r1, [r1], -r8
   11cd4:	strdeq	r1, [r1], -r8
   11cd8:	strdeq	r1, [r1], -r8
   11cdc:	strdeq	r1, [r1], -r8
   11ce0:	andeq	r1, r1, r0, asr #26
   11ce4:	strdeq	r1, [r1], -r8
   11ce8:	andeq	r1, r1, r0, ror pc
   11cec:	andeq	r1, r1, ip, lsl #30
   11cf0:	andeq	r1, r1, r0, asr #26
   11cf4:	andeq	r1, r1, r0, asr #26
   11cf8:	andeq	r1, r1, r0, asr #26
   11cfc:	strdeq	r1, [r1], -r8
   11d00:	andeq	r1, r1, ip, lsl #30
   11d04:	strdeq	r1, [r1], -r8
   11d08:	strdeq	r1, [r1], -r8
   11d0c:	strdeq	r1, [r1], -r8
   11d10:	strdeq	r1, [r1], -r8
   11d14:	strdeq	r1, [r1], -r8
   11d18:	andeq	r1, r1, r4, lsr lr
   11d1c:	strdeq	r1, [r1], -r8
   11d20:	strdeq	r1, [r1], -r8
   11d24:	strdeq	r1, [r1], -r8
   11d28:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11d2c:	strdeq	r1, [r1], -r8
   11d30:	andeq	r1, r1, r4, lsr lr
   11d34:	strdeq	r1, [r1], -r8
   11d38:	strdeq	r1, [r1], -r8
   11d3c:	andeq	r1, r1, r4, lsr lr
   11d40:	ldr	r7, [sp, #48]	; 0x30
   11d44:	ldrb	r0, [r7]
   11d48:	cmp	r0, #39	; 0x27
   11d4c:	cmpne	r0, #34	; 0x22
   11d50:	bne	11ddc <__mempcpy_chk@plt+0xda0>
   11d54:	ldrb	r0, [r7, #1]
   11d58:	cmp	r0, #0
   11d5c:	beq	11ddc <__mempcpy_chk@plt+0xda0>
   11d60:	vmov	s0, r0
   11d64:	vcvt.f64.u32	d8, s0
   11d68:	ldrb	r0, [r7, #2]!
   11d6c:	cmp	r0, #0
   11d70:	beq	11e00 <__mempcpy_chk@plt+0xdc4>
   11d74:	movw	r0, #29005	; 0x714d
   11d78:	ldr	r5, [sp, #40]	; 0x28
   11d7c:	movt	r0, #2
   11d80:	ldrb	r0, [r0]
   11d84:	cmp	r0, #0
   11d88:	bne	11db4 <__mempcpy_chk@plt+0xd78>
   11d8c:	movw	r1, #26755	; 0x6883
   11d90:	mov	r0, #0
   11d94:	mov	r2, #5
   11d98:	movt	r1, #1
   11d9c:	bl	10e74 <dcgettext@plt>
   11da0:	mov	r2, r0
   11da4:	mov	r0, #0
   11da8:	mov	r1, #0
   11dac:	mov	r3, r7
   11db0:	bl	10ee0 <error@plt>
   11db4:	ldr	r7, [sp, #28]
   11db8:	cmp	r5, #0
   11dbc:	bne	11e10 <__mempcpy_chk@plt+0xdd4>
   11dc0:	ldr	r0, [sp, #36]	; 0x24
   11dc4:	vmov	r2, r3, d8
   11dc8:	cmp	r0, #0
   11dcc:	beq	11fd8 <__mempcpy_chk@plt+0xf9c>
   11dd0:	ldr	r0, [sp, #52]	; 0x34
   11dd4:	mov	r1, r7
   11dd8:	b	11ff4 <__mempcpy_chk@plt+0xfb8>
   11ddc:	bl	10f64 <__errno_location@plt>
   11de0:	str	r4, [r0]
   11de4:	mov	r0, r7
   11de8:	sub	r1, fp, #48	; 0x30
   11dec:	bl	128c4 <__mempcpy_chk@plt+0x1888>
   11df0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11df4:	mov	r0, r7
   11df8:	vmov.f64	d8, d0
   11dfc:	bl	1281c <__mempcpy_chk@plt+0x17e0>
   11e00:	ldr	r7, [sp, #28]
   11e04:	ldr	r5, [sp, #40]	; 0x28
   11e08:	cmp	r5, #0
   11e0c:	beq	11dc0 <__mempcpy_chk@plt+0xd84>
   11e10:	ldr	r0, [sp, #36]	; 0x24
   11e14:	cmp	r0, #0
   11e18:	beq	11efc <__mempcpy_chk@plt+0xec0>
   11e1c:	ldr	r0, [sp, #52]	; 0x34
   11e20:	ldr	r1, [sp, #32]
   11e24:	mov	r2, r7
   11e28:	vstr	d8, [sp]
   11e2c:	bl	1583c <__mempcpy_chk@plt+0x4800>
   11e30:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   11e34:	ldr	r7, [sp, #48]	; 0x30
   11e38:	ldrb	r0, [r7]
   11e3c:	cmp	r0, #39	; 0x27
   11e40:	cmpne	r0, #34	; 0x22
   11e44:	bne	11eac <__mempcpy_chk@plt+0xe70>
   11e48:	ldrb	r5, [r7, #1]
   11e4c:	cmp	r5, #0
   11e50:	beq	11eac <__mempcpy_chk@plt+0xe70>
   11e54:	ldrb	r0, [r7, #2]!
   11e58:	str	r7, [sp, #48]	; 0x30
   11e5c:	mov	r7, #0
   11e60:	cmp	r0, #0
   11e64:	beq	11edc <__mempcpy_chk@plt+0xea0>
   11e68:	movw	r0, #29005	; 0x714d
   11e6c:	movt	r0, #2
   11e70:	ldrb	r0, [r0]
   11e74:	cmp	r0, #0
   11e78:	bne	11edc <__mempcpy_chk@plt+0xea0>
   11e7c:	movw	r1, #26755	; 0x6883
   11e80:	mov	r0, #0
   11e84:	mov	r2, #5
   11e88:	mov	r7, #0
   11e8c:	movt	r1, #1
   11e90:	bl	10e74 <dcgettext@plt>
   11e94:	ldr	r3, [sp, #48]	; 0x30
   11e98:	mov	r2, r0
   11e9c:	mov	r0, #0
   11ea0:	mov	r1, #0
   11ea4:	bl	10ee0 <error@plt>
   11ea8:	b	11edc <__mempcpy_chk@plt+0xea0>
   11eac:	bl	10f64 <__errno_location@plt>
   11eb0:	str	r4, [r0]
   11eb4:	mov	r0, r7
   11eb8:	sub	r1, fp, #48	; 0x30
   11ebc:	mov	r2, #0
   11ec0:	mov	r3, #0
   11ec4:	bl	10e44 <__strtoull_internal@plt>
   11ec8:	mov	r5, r0
   11ecc:	mov	r0, r7
   11ed0:	mov	r7, r1
   11ed4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11ed8:	bl	1281c <__mempcpy_chk@plt+0x17e0>
   11edc:	ldr	r0, [sp, #40]	; 0x28
   11ee0:	cmp	r0, #0
   11ee4:	beq	11f4c <__mempcpy_chk@plt+0xf10>
   11ee8:	ldr	r0, [sp, #36]	; 0x24
   11eec:	cmp	r0, #0
   11ef0:	beq	11fe4 <__mempcpy_chk@plt+0xfa8>
   11ef4:	stm	sp, {r5, r7}
   11ef8:	b	11f38 <__mempcpy_chk@plt+0xefc>
   11efc:	vmov	r2, r3, d8
   11f00:	ldr	r0, [sp, #52]	; 0x34
   11f04:	ldr	r1, [sp, #32]
   11f08:	b	11ff4 <__mempcpy_chk@plt+0xfb8>
   11f0c:	ldr	r0, [sp, #48]	; 0x30
   11f10:	bl	121a8 <__mempcpy_chk@plt+0x116c>
   11f14:	mov	r2, r0
   11f18:	ldr	r0, [sp, #40]	; 0x28
   11f1c:	mov	r3, r1
   11f20:	cmp	r0, #0
   11f24:	beq	11fc0 <__mempcpy_chk@plt+0xf84>
   11f28:	ldr	r0, [sp, #36]	; 0x24
   11f2c:	cmp	r0, #0
   11f30:	beq	11f00 <__mempcpy_chk@plt+0xec4>
   11f34:	stm	sp, {r2, r3}
   11f38:	ldr	r0, [sp, #52]	; 0x34
   11f3c:	ldr	r1, [sp, #32]
   11f40:	ldr	r2, [sp, #28]
   11f44:	bl	1583c <__mempcpy_chk@plt+0x4800>
   11f48:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   11f4c:	ldr	r0, [sp, #36]	; 0x24
   11f50:	cmp	r0, #0
   11f54:	beq	1200c <__mempcpy_chk@plt+0xfd0>
   11f58:	ldr	r0, [sp, #52]	; 0x34
   11f5c:	ldr	r1, [sp, #28]
   11f60:	b	11fec <__mempcpy_chk@plt+0xfb0>
   11f64:	mov	r6, #0
   11f68:	mov	r1, r5
   11f6c:	b	11c04 <__mempcpy_chk@plt+0xbc8>
   11f70:	ldr	r0, [sp, #48]	; 0x30
   11f74:	ldrb	r2, [r0]
   11f78:	ldr	r0, [sp, #40]	; 0x28
   11f7c:	cmp	r0, #0
   11f80:	beq	12040 <__mempcpy_chk@plt+0x1004>
   11f84:	ldr	r0, [sp, #52]	; 0x34
   11f88:	ldr	r1, [sp, #32]
   11f8c:	bl	1583c <__mempcpy_chk@plt+0x4800>
   11f90:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   11f94:	ldr	r0, [sp, #40]	; 0x28
   11f98:	cmp	r0, #0
   11f9c:	beq	12020 <__mempcpy_chk@plt+0xfe4>
   11fa0:	ldr	r0, [sp, #36]	; 0x24
   11fa4:	ldr	r3, [sp, #48]	; 0x30
   11fa8:	cmp	r0, #0
   11fac:	beq	12050 <__mempcpy_chk@plt+0x1014>
   11fb0:	ldr	r0, [sp, #52]	; 0x34
   11fb4:	ldr	r1, [sp, #32]
   11fb8:	ldr	r2, [sp, #28]
   11fbc:	b	11ff4 <__mempcpy_chk@plt+0xfb8>
   11fc0:	ldr	r0, [sp, #36]	; 0x24
   11fc4:	cmp	r0, #0
   11fc8:	beq	11fd8 <__mempcpy_chk@plt+0xf9c>
   11fcc:	ldr	r0, [sp, #52]	; 0x34
   11fd0:	ldr	r1, [sp, #28]
   11fd4:	b	11ff4 <__mempcpy_chk@plt+0xfb8>
   11fd8:	ldr	r0, [sp, #52]	; 0x34
   11fdc:	bl	1583c <__mempcpy_chk@plt+0x4800>
   11fe0:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   11fe4:	ldr	r0, [sp, #52]	; 0x34
   11fe8:	ldr	r1, [sp, #32]
   11fec:	mov	r2, r5
   11ff0:	mov	r3, r7
   11ff4:	bl	1583c <__mempcpy_chk@plt+0x4800>
   11ff8:	ldr	r0, [sp, #52]	; 0x34
   11ffc:	bl	12a50 <__mempcpy_chk@plt+0x1a14>
   12000:	add	r7, sp, #64	; 0x40
   12004:	add	r5, r9, #1
   12008:	b	115b0 <__mempcpy_chk@plt+0x574>
   1200c:	ldr	r0, [sp, #52]	; 0x34
   12010:	mov	r2, r5
   12014:	mov	r3, r7
   12018:	bl	1583c <__mempcpy_chk@plt+0x4800>
   1201c:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   12020:	ldr	r0, [sp, #36]	; 0x24
   12024:	ldr	r2, [sp, #48]	; 0x30
   12028:	cmp	r0, #0
   1202c:	beq	12040 <__mempcpy_chk@plt+0x1004>
   12030:	ldr	r0, [sp, #52]	; 0x34
   12034:	ldr	r1, [sp, #28]
   12038:	bl	1583c <__mempcpy_chk@plt+0x4800>
   1203c:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   12040:	ldr	r0, [sp, #52]	; 0x34
   12044:	mov	r1, r2
   12048:	bl	1583c <__mempcpy_chk@plt+0x4800>
   1204c:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   12050:	ldr	r0, [sp, #52]	; 0x34
   12054:	ldr	r1, [sp, #32]
   12058:	mov	r2, r3
   1205c:	bl	1583c <__mempcpy_chk@plt+0x4800>
   12060:	b	11ff8 <__mempcpy_chk@plt+0xfbc>
   12064:	bl	10fd0 <__overflow@plt>
   12068:	b	115ec <__mempcpy_chk@plt+0x5b0>
   1206c:	mov	r1, #37	; 0x25
   12070:	bl	10fd0 <__overflow@plt>
   12074:	add	r5, r9, #1
   12078:	b	115b0 <__mempcpy_chk@plt+0x574>
   1207c:	ldr	r0, [sp, #20]
   12080:	ldr	r1, [sp, #16]
   12084:	ldr	r5, [sp, #12]
   12088:	cmp	sl, #1
   1208c:	sub	r0, r0, sl
   12090:	add	r1, r1, r0, lsl #2
   12094:	blt	120a4 <__mempcpy_chk@plt+0x1068>
   12098:	cmp	r0, #0
   1209c:	str	sl, [sp, #20]
   120a0:	bgt	11590 <__mempcpy_chk@plt+0x554>
   120a4:	cmp	sl, #1
   120a8:	blt	120e4 <__mempcpy_chk@plt+0x10a8>
   120ac:	mov	r4, r1
   120b0:	movw	r1, #26306	; 0x66c2
   120b4:	mov	r0, #0
   120b8:	mov	r2, #5
   120bc:	movt	r1, #1
   120c0:	bl	10e74 <dcgettext@plt>
   120c4:	mov	r5, r0
   120c8:	ldr	r0, [r4]
   120cc:	bl	146ac <__mempcpy_chk@plt+0x3670>
   120d0:	mov	r3, r0
   120d4:	mov	r0, #0
   120d8:	mov	r1, #0
   120dc:	mov	r2, r5
   120e0:	bl	10ee0 <error@plt>
   120e4:	movw	r0, #29004	; 0x714c
   120e8:	movt	r0, #2
   120ec:	ldrb	r4, [r0]
   120f0:	mov	r0, r4
   120f4:	sub	sp, fp, #40	; 0x28
   120f8:	vpop	{d8}
   120fc:	add	sp, sp, #4
   12100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12104:	movw	r1, #26670	; 0x682e
   12108:	movt	r1, #1
   1210c:	b	12118 <__mempcpy_chk@plt+0x10dc>
   12110:	movw	r1, #26694	; 0x6846
   12114:	movt	r1, #1
   12118:	mov	r0, #0
   1211c:	mov	r2, #5
   12120:	bl	10e74 <dcgettext@plt>
   12124:	mov	r4, r0
   12128:	ldr	r0, [r8]
   1212c:	bl	146ac <__mempcpy_chk@plt+0x3670>
   12130:	mov	r3, r0
   12134:	mov	r0, #1
   12138:	mov	r1, #0
   1213c:	mov	r2, r4
   12140:	bl	10ee0 <error@plt>
   12144:	movw	r1, #26716	; 0x685c
   12148:	mov	r0, #0
   1214c:	mov	r2, #5
   12150:	movt	r1, #1
   12154:	bl	10e74 <dcgettext@plt>
   12158:	mov	r2, r0
   1215c:	add	r0, r9, #1
   12160:	mov	r1, #0
   12164:	str	r5, [sp]
   12168:	sub	r3, r0, r5
   1216c:	mov	r0, #1
   12170:	bl	10ee0 <error@plt>
   12174:	movw	r1, #26290	; 0x66b2
   12178:	mov	r0, #0
   1217c:	mov	r2, #5
   12180:	movt	r1, #1
   12184:	bl	10e74 <dcgettext@plt>
   12188:	mov	r2, r0
   1218c:	mov	r0, #0
   12190:	mov	r1, #0
   12194:	bl	10ee0 <error@plt>
   12198:	mov	r0, #1
   1219c:	bl	11138 <__mempcpy_chk@plt+0xfc>
   121a0:	mov	r0, #0
   121a4:	bl	11138 <__mempcpy_chk@plt+0xfc>
   121a8:	push	{r4, r5, r6, sl, fp, lr}
   121ac:	add	fp, sp, #16
   121b0:	sub	sp, sp, #8
   121b4:	mov	r4, r0
   121b8:	ldrb	r0, [r0]
   121bc:	cmp	r0, #39	; 0x27
   121c0:	cmpne	r0, #34	; 0x22
   121c4:	bne	12228 <__mempcpy_chk@plt+0x11ec>
   121c8:	ldrb	r5, [r4, #1]
   121cc:	cmp	r5, #0
   121d0:	beq	12228 <__mempcpy_chk@plt+0x11ec>
   121d4:	ldrb	r0, [r4, #2]!
   121d8:	mov	r6, #0
   121dc:	cmp	r0, #0
   121e0:	beq	1225c <__mempcpy_chk@plt+0x1220>
   121e4:	movw	r0, #29005	; 0x714d
   121e8:	movt	r0, #2
   121ec:	ldrb	r0, [r0]
   121f0:	cmp	r0, #0
   121f4:	bne	1225c <__mempcpy_chk@plt+0x1220>
   121f8:	movw	r1, #26755	; 0x6883
   121fc:	mov	r0, #0
   12200:	mov	r2, #5
   12204:	mov	r6, #0
   12208:	movt	r1, #1
   1220c:	bl	10e74 <dcgettext@plt>
   12210:	mov	r2, r0
   12214:	mov	r0, #0
   12218:	mov	r1, #0
   1221c:	mov	r3, r4
   12220:	bl	10ee0 <error@plt>
   12224:	b	1225c <__mempcpy_chk@plt+0x1220>
   12228:	bl	10f64 <__errno_location@plt>
   1222c:	mov	r1, #0
   12230:	mov	r2, #0
   12234:	mov	r3, #0
   12238:	str	r1, [r0]
   1223c:	add	r1, sp, #4
   12240:	mov	r0, r4
   12244:	bl	1100c <__strtoll_internal@plt>
   12248:	mov	r6, r1
   1224c:	ldr	r1, [sp, #4]
   12250:	mov	r5, r0
   12254:	mov	r0, r4
   12258:	bl	1281c <__mempcpy_chk@plt+0x17e0>
   1225c:	mov	r0, r5
   12260:	mov	r1, r6
   12264:	sub	sp, fp, #16
   12268:	pop	{r4, r5, r6, sl, fp, pc}
   1226c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12270:	add	fp, sp, #24
   12274:	sub	sp, sp, #8
   12278:	mov	r7, r0
   1227c:	mov	r8, r0
   12280:	ldrb	r5, [r7, #1]!
   12284:	cmp	r5, #120	; 0x78
   12288:	bne	12328 <__mempcpy_chk@plt+0x12ec>
   1228c:	bl	10f40 <__ctype_b_loc@plt>
   12290:	ldrb	r1, [r8, #2]
   12294:	ldr	r0, [r0]
   12298:	add	r2, r0, r1, lsl #1
   1229c:	ldrb	r2, [r2, #1]
   122a0:	tst	r2, #16
   122a4:	beq	127f0 <__mempcpy_chk@plt+0x17b4>
   122a8:	sub	r2, r1, #97	; 0x61
   122ac:	uxtb	r3, r2
   122b0:	mvn	r2, #86	; 0x56
   122b4:	cmp	r3, #6
   122b8:	bcc	122d0 <__mempcpy_chk@plt+0x1294>
   122bc:	sub	r2, r1, #65	; 0x41
   122c0:	uxtb	r3, r2
   122c4:	mvn	r2, #47	; 0x2f
   122c8:	cmp	r3, #6
   122cc:	mvncc	r2, #54	; 0x36
   122d0:	mov	r7, r8
   122d4:	add	r1, r2, r1
   122d8:	ldrb	r2, [r7, #3]!
   122dc:	add	r0, r0, r2, lsl #1
   122e0:	ldrb	r0, [r0, #1]
   122e4:	tst	r0, #16
   122e8:	beq	1238c <__mempcpy_chk@plt+0x1350>
   122ec:	lsl	r0, r1, #4
   122f0:	sub	r1, r2, #97	; 0x61
   122f4:	uxtb	r3, r1
   122f8:	mvn	r1, #86	; 0x56
   122fc:	cmp	r3, #6
   12300:	bcc	12318 <__mempcpy_chk@plt+0x12dc>
   12304:	sub	r1, r2, #65	; 0x41
   12308:	uxtb	r3, r1
   1230c:	mvn	r1, #47	; 0x2f
   12310:	cmp	r3, #6
   12314:	mvncc	r1, #54	; 0x36
   12318:	add	r1, r1, r2
   1231c:	add	r7, r8, #4
   12320:	add	r1, r1, r0
   12324:	b	1238c <__mempcpy_chk@plt+0x1350>
   12328:	and	r0, r5, #248	; 0xf8
   1232c:	cmp	r0, #48	; 0x30
   12330:	bne	123c4 <__mempcpy_chk@plt+0x1388>
   12334:	sub	r0, r5, #48	; 0x30
   12338:	clz	r0, r0
   1233c:	lsr	r0, r0, #5
   12340:	and	r0, r0, r1
   12344:	mov	r1, #0
   12348:	ldrb	r0, [r7, r0]!
   1234c:	and	r2, r0, #248	; 0xf8
   12350:	cmp	r2, #48	; 0x30
   12354:	bne	1238c <__mempcpy_chk@plt+0x1350>
   12358:	sub	r1, r0, #48	; 0x30
   1235c:	ldrb	r0, [r7, #1]!
   12360:	and	r2, r0, #248	; 0xf8
   12364:	cmp	r2, #48	; 0x30
   12368:	bne	1238c <__mempcpy_chk@plt+0x1350>
   1236c:	add	r0, r0, r1, lsl #3
   12370:	sub	r1, r0, #48	; 0x30
   12374:	ldrb	r0, [r7, #1]!
   12378:	and	r2, r0, #248	; 0xf8
   1237c:	cmp	r2, #48	; 0x30
   12380:	addeq	r0, r0, r1, lsl #3
   12384:	addeq	r7, r7, #1
   12388:	subeq	r1, r0, #48	; 0x30
   1238c:	movw	r0, #28996	; 0x7144
   12390:	movt	r0, #2
   12394:	ldr	r0, [r0]
   12398:	ldr	r2, [r0, #20]
   1239c:	ldr	r3, [r0, #24]
   123a0:	cmp	r2, r3
   123a4:	bcs	12764 <__mempcpy_chk@plt+0x1728>
   123a8:	add	r3, r2, #1
   123ac:	str	r3, [r0, #20]
   123b0:	strb	r1, [r2]
   123b4:	mvn	r0, r8
   123b8:	add	r0, r7, r0
   123bc:	sub	sp, fp, #24
   123c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   123c4:	cmp	r5, #0
   123c8:	beq	12550 <__mempcpy_chk@plt+0x1514>
   123cc:	movw	r0, #26935	; 0x6937
   123d0:	mov	r1, r5
   123d4:	mov	r2, #12
   123d8:	movt	r0, #1
   123dc:	bl	10fac <memchr@plt>
   123e0:	cmp	r0, #0
   123e4:	beq	12488 <__mempcpy_chk@plt+0x144c>
   123e8:	sub	r0, r5, #97	; 0x61
   123ec:	add	r7, r8, #2
   123f0:	cmp	r0, #21
   123f4:	bhi	12700 <__mempcpy_chk@plt+0x16c4>
   123f8:	add	r1, pc, #0
   123fc:	ldr	pc, [r1, r0, lsl #2]
   12400:	andeq	r2, r1, r8, asr r4
   12404:	andeq	r2, r1, r0, ror #11
   12408:	andeq	r2, r1, r4, lsl r8
   1240c:	andeq	r2, r1, r0, lsl #14
   12410:	andeq	r2, r1, r0, ror r6
   12414:	andeq	r2, r1, r0, lsr #13
   12418:	andeq	r2, r1, r0, lsl #14
   1241c:	andeq	r2, r1, r0, lsl #14
   12420:	andeq	r2, r1, r0, lsl #14
   12424:	andeq	r2, r1, r0, lsl #14
   12428:	andeq	r2, r1, r0, lsl #14
   1242c:	andeq	r2, r1, r0, lsl #14
   12430:	andeq	r2, r1, r0, lsl #14
   12434:	ldrdeq	r2, [r1], -r0
   12438:	andeq	r2, r1, r0, lsl #14
   1243c:	andeq	r2, r1, r0, lsl #14
   12440:	andeq	r2, r1, r0, lsl #14
   12444:			; <UNDEFINED> instruction: 0x000125b0
   12448:	andeq	r2, r1, r0, lsl #14
   1244c:	andeq	r2, r1, r0, lsl r6
   12450:	andeq	r2, r1, r0, lsl #14
   12454:	andeq	r2, r1, r0, asr #12
   12458:	movw	r0, #28996	; 0x7144
   1245c:	movt	r0, #2
   12460:	ldr	r0, [r0]
   12464:	ldr	r1, [r0, #20]
   12468:	ldr	r2, [r0, #24]
   1246c:	cmp	r1, r2
   12470:	bcs	12784 <__mempcpy_chk@plt+0x1748>
   12474:	add	r2, r1, #1
   12478:	str	r2, [r0, #20]
   1247c:	mov	r0, #7
   12480:	strb	r0, [r1]
   12484:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12488:	orr	r0, r5, #32
   1248c:	cmp	r0, #117	; 0x75
   12490:	bne	12550 <__mempcpy_chk@plt+0x1514>
   12494:	mov	r7, #8
   12498:	cmp	r5, #117	; 0x75
   1249c:	movweq	r7, #4
   124a0:	bl	10f40 <__ctype_b_loc@plt>
   124a4:	ldr	r1, [r0]
   124a8:	mov	r6, #0
   124ac:	mvn	r0, #1
   124b0:	ldrb	r2, [r8, -r0]
   124b4:	add	r3, r1, r2, lsl #1
   124b8:	ldrb	r3, [r3, #1]
   124bc:	tst	r3, #16
   124c0:	beq	127f0 <__mempcpy_chk@plt+0x17b4>
   124c4:	lsl	r3, r6, #4
   124c8:	sub	r6, r2, #97	; 0x61
   124cc:	uxtb	r4, r6
   124d0:	mvn	r6, #86	; 0x56
   124d4:	cmp	r4, #6
   124d8:	bcc	124f0 <__mempcpy_chk@plt+0x14b4>
   124dc:	sub	r6, r2, #65	; 0x41
   124e0:	uxtb	r6, r6
   124e4:	cmp	r6, #6
   124e8:	mvn	r6, #47	; 0x2f
   124ec:	mvncc	r6, #54	; 0x36
   124f0:	add	r2, r6, r2
   124f4:	sub	r0, r0, #1
   124f8:	add	r6, r2, r3
   124fc:	add	r2, r7, r0
   12500:	add	r2, r2, #3
   12504:	cmp	r2, #1
   12508:	bgt	124b0 <__mempcpy_chk@plt+0x1474>
   1250c:	cmp	r6, #159	; 0x9f
   12510:	bhi	12520 <__mempcpy_chk@plt+0x14e4>
   12514:	cmp	r6, #36	; 0x24
   12518:	cmpne	r6, #96	; 0x60
   1251c:	bne	1272c <__mempcpy_chk@plt+0x16f0>
   12520:	mov	r1, r6
   12524:	bfc	r1, #0, #11
   12528:	cmp	r1, #55296	; 0xd800
   1252c:	beq	12734 <__mempcpy_chk@plt+0x16f8>
   12530:	sub	r7, r8, r0
   12534:	movw	r0, #28996	; 0x7144
   12538:	mov	r1, r6
   1253c:	mov	r2, #0
   12540:	movt	r0, #2
   12544:	ldr	r0, [r0]
   12548:	bl	149f0 <__mempcpy_chk@plt+0x39b4>
   1254c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12550:	movw	r5, #28996	; 0x7144
   12554:	movt	r5, #2
   12558:	ldr	r0, [r5]
   1255c:	ldr	r1, [r0, #20]
   12560:	ldr	r2, [r0, #24]
   12564:	cmp	r1, r2
   12568:	bcs	12770 <__mempcpy_chk@plt+0x1734>
   1256c:	add	r2, r1, #1
   12570:	str	r2, [r0, #20]
   12574:	mov	r0, #92	; 0x5c
   12578:	strb	r0, [r1]
   1257c:	ldrb	r1, [r7]
   12580:	cmp	r1, #0
   12584:	beq	123b4 <__mempcpy_chk@plt+0x1378>
   12588:	ldr	r0, [r5]
   1258c:	ldr	r2, [r0, #20]
   12590:	ldr	r3, [r0, #24]
   12594:	cmp	r2, r3
   12598:	bcs	1277c <__mempcpy_chk@plt+0x1740>
   1259c:	add	r3, r2, #1
   125a0:	str	r3, [r0, #20]
   125a4:	strb	r1, [r2]
   125a8:	add	r7, r8, #2
   125ac:	b	123b4 <__mempcpy_chk@plt+0x1378>
   125b0:	movw	r0, #28996	; 0x7144
   125b4:	movt	r0, #2
   125b8:	ldr	r0, [r0]
   125bc:	ldr	r1, [r0, #20]
   125c0:	ldr	r2, [r0, #24]
   125c4:	cmp	r1, r2
   125c8:	bcs	12790 <__mempcpy_chk@plt+0x1754>
   125cc:	add	r2, r1, #1
   125d0:	str	r2, [r0, #20]
   125d4:	mov	r0, #13
   125d8:	strb	r0, [r1]
   125dc:	b	123b4 <__mempcpy_chk@plt+0x1378>
   125e0:	movw	r0, #28996	; 0x7144
   125e4:	movt	r0, #2
   125e8:	ldr	r0, [r0]
   125ec:	ldr	r1, [r0, #20]
   125f0:	ldr	r2, [r0, #24]
   125f4:	cmp	r1, r2
   125f8:	bcs	1279c <__mempcpy_chk@plt+0x1760>
   125fc:	add	r2, r1, #1
   12600:	str	r2, [r0, #20]
   12604:	mov	r0, #8
   12608:	strb	r0, [r1]
   1260c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12610:	movw	r0, #28996	; 0x7144
   12614:	movt	r0, #2
   12618:	ldr	r0, [r0]
   1261c:	ldr	r1, [r0, #20]
   12620:	ldr	r2, [r0, #24]
   12624:	cmp	r1, r2
   12628:	bcs	127a8 <__mempcpy_chk@plt+0x176c>
   1262c:	add	r2, r1, #1
   12630:	str	r2, [r0, #20]
   12634:	mov	r0, #9
   12638:	strb	r0, [r1]
   1263c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12640:	movw	r0, #28996	; 0x7144
   12644:	movt	r0, #2
   12648:	ldr	r0, [r0]
   1264c:	ldr	r1, [r0, #20]
   12650:	ldr	r2, [r0, #24]
   12654:	cmp	r1, r2
   12658:	bcs	127b4 <__mempcpy_chk@plt+0x1778>
   1265c:	add	r2, r1, #1
   12660:	str	r2, [r0, #20]
   12664:	mov	r0, #11
   12668:	strb	r0, [r1]
   1266c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12670:	movw	r0, #28996	; 0x7144
   12674:	movt	r0, #2
   12678:	ldr	r0, [r0]
   1267c:	ldr	r1, [r0, #20]
   12680:	ldr	r2, [r0, #24]
   12684:	cmp	r1, r2
   12688:	bcs	127c0 <__mempcpy_chk@plt+0x1784>
   1268c:	add	r2, r1, #1
   12690:	str	r2, [r0, #20]
   12694:	mov	r0, #27
   12698:	strb	r0, [r1]
   1269c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   126a0:	movw	r0, #28996	; 0x7144
   126a4:	movt	r0, #2
   126a8:	ldr	r0, [r0]
   126ac:	ldr	r1, [r0, #20]
   126b0:	ldr	r2, [r0, #24]
   126b4:	cmp	r1, r2
   126b8:	bcs	127cc <__mempcpy_chk@plt+0x1790>
   126bc:	add	r2, r1, #1
   126c0:	str	r2, [r0, #20]
   126c4:	mov	r0, #12
   126c8:	strb	r0, [r1]
   126cc:	b	123b4 <__mempcpy_chk@plt+0x1378>
   126d0:	movw	r0, #28996	; 0x7144
   126d4:	movt	r0, #2
   126d8:	ldr	r0, [r0]
   126dc:	ldr	r1, [r0, #20]
   126e0:	ldr	r2, [r0, #24]
   126e4:	cmp	r1, r2
   126e8:	bcs	127d8 <__mempcpy_chk@plt+0x179c>
   126ec:	add	r2, r1, #1
   126f0:	str	r2, [r0, #20]
   126f4:	mov	r0, #10
   126f8:	strb	r0, [r1]
   126fc:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12700:	movw	r0, #28996	; 0x7144
   12704:	movt	r0, #2
   12708:	ldr	r0, [r0]
   1270c:	ldr	r1, [r0, #20]
   12710:	ldr	r2, [r0, #24]
   12714:	cmp	r1, r2
   12718:	bcs	127e4 <__mempcpy_chk@plt+0x17a8>
   1271c:	add	r2, r1, #1
   12720:	str	r2, [r0, #20]
   12724:	strb	r5, [r1]
   12728:	b	123b4 <__mempcpy_chk@plt+0x1378>
   1272c:	cmp	r6, #64	; 0x40
   12730:	beq	12520 <__mempcpy_chk@plt+0x14e4>
   12734:	movw	r1, #26947	; 0x6943
   12738:	mov	r0, #0
   1273c:	mov	r2, #5
   12740:	movt	r1, #1
   12744:	bl	10e74 <dcgettext@plt>
   12748:	mov	r2, r0
   1274c:	mov	r0, #1
   12750:	mov	r1, #0
   12754:	mov	r3, r5
   12758:	str	r7, [sp]
   1275c:	str	r6, [sp, #4]
   12760:	bl	10ee0 <error@plt>
   12764:	uxtb	r1, r1
   12768:	bl	10fd0 <__overflow@plt>
   1276c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12770:	mov	r1, #92	; 0x5c
   12774:	bl	10fd0 <__overflow@plt>
   12778:	b	1257c <__mempcpy_chk@plt+0x1540>
   1277c:	bl	10fd0 <__overflow@plt>
   12780:	b	125a8 <__mempcpy_chk@plt+0x156c>
   12784:	mov	r1, #7
   12788:	bl	10fd0 <__overflow@plt>
   1278c:	b	123b4 <__mempcpy_chk@plt+0x1378>
   12790:	mov	r1, #13
   12794:	bl	10fd0 <__overflow@plt>
   12798:	b	123b4 <__mempcpy_chk@plt+0x1378>
   1279c:	mov	r1, #8
   127a0:	bl	10fd0 <__overflow@plt>
   127a4:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127a8:	mov	r1, #9
   127ac:	bl	10fd0 <__overflow@plt>
   127b0:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127b4:	mov	r1, #11
   127b8:	bl	10fd0 <__overflow@plt>
   127bc:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127c0:	mov	r1, #27
   127c4:	bl	10fd0 <__overflow@plt>
   127c8:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127cc:	mov	r1, #12
   127d0:	bl	10fd0 <__overflow@plt>
   127d4:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127d8:	mov	r1, #10
   127dc:	bl	10fd0 <__overflow@plt>
   127e0:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127e4:	mov	r1, r5
   127e8:	bl	10fd0 <__overflow@plt>
   127ec:	b	123b4 <__mempcpy_chk@plt+0x1378>
   127f0:	movw	r1, #26898	; 0x6912
   127f4:	mov	r0, #0
   127f8:	mov	r2, #5
   127fc:	movt	r1, #1
   12800:	bl	10e74 <dcgettext@plt>
   12804:	mov	r2, r0
   12808:	mov	r0, #1
   1280c:	mov	r1, #0
   12810:	bl	10ee0 <error@plt>
   12814:	mov	r0, #0
   12818:	bl	10f4c <exit@plt>
   1281c:	push	{r4, r5, r6, sl, fp, lr}
   12820:	add	fp, sp, #16
   12824:	mov	r5, r1
   12828:	mov	r4, r0
   1282c:	bl	10f64 <__errno_location@plt>
   12830:	ldr	r6, [r0]
   12834:	cmp	r6, #0
   12838:	beq	1285c <__mempcpy_chk@plt+0x1820>
   1283c:	mov	r0, r4
   12840:	bl	146ac <__mempcpy_chk@plt+0x3670>
   12844:	movw	r2, #26691	; 0x6843
   12848:	mov	r3, r0
   1284c:	mov	r0, #0
   12850:	mov	r1, r6
   12854:	movt	r2, #1
   12858:	b	128ac <__mempcpy_chk@plt+0x1870>
   1285c:	ldrb	r0, [r5]
   12860:	cmp	r0, #0
   12864:	popeq	{r4, r5, r6, sl, fp, pc}
   12868:	cmp	r4, r5
   1286c:	beq	1287c <__mempcpy_chk@plt+0x1840>
   12870:	movw	r1, #26857	; 0x68e9
   12874:	movt	r1, #1
   12878:	b	12884 <__mempcpy_chk@plt+0x1848>
   1287c:	movw	r1, #26828	; 0x68cc
   12880:	movt	r1, #1
   12884:	mov	r0, #0
   12888:	mov	r2, #5
   1288c:	bl	10e74 <dcgettext@plt>
   12890:	mov	r5, r0
   12894:	mov	r0, r4
   12898:	bl	146ac <__mempcpy_chk@plt+0x3670>
   1289c:	mov	r3, r0
   128a0:	mov	r0, #0
   128a4:	mov	r1, #0
   128a8:	mov	r2, r5
   128ac:	bl	10ee0 <error@plt>
   128b0:	movw	r0, #29004	; 0x714c
   128b4:	mov	r1, #1
   128b8:	movt	r0, #2
   128bc:	strb	r1, [r0]
   128c0:	pop	{r4, r5, r6, sl, fp, pc}
   128c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128c8:	add	fp, sp, #24
   128cc:	vpush	{d8}
   128d0:	sub	sp, sp, #8
   128d4:	mov	r4, r1
   128d8:	add	r1, sp, #4
   128dc:	mov	r5, r0
   128e0:	bl	10e5c <strtold@plt>
   128e4:	ldr	r7, [sp, #4]
   128e8:	vmov.f64	d8, d0
   128ec:	ldrb	r0, [r7]
   128f0:	cmp	r0, #0
   128f4:	beq	12930 <__mempcpy_chk@plt+0x18f4>
   128f8:	bl	10f64 <__errno_location@plt>
   128fc:	ldr	r8, [r0]
   12900:	mov	r6, r0
   12904:	mov	r1, sp
   12908:	mov	r0, r5
   1290c:	bl	15b5c <__mempcpy_chk@plt+0x4b20>
   12910:	ldr	r0, [sp]
   12914:	cmp	r7, r0
   12918:	bcs	1292c <__mempcpy_chk@plt+0x18f0>
   1291c:	str	r0, [sp, #4]
   12920:	mov	r7, r0
   12924:	vmov.f64	d8, d0
   12928:	b	12930 <__mempcpy_chk@plt+0x18f4>
   1292c:	str	r8, [r6]
   12930:	cmp	r4, #0
   12934:	vmov.f64	d0, d8
   12938:	strne	r7, [r4]
   1293c:	sub	sp, fp, #32
   12940:	vpop	{d8}
   12944:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12948:	movw	r1, #29008	; 0x7150
   1294c:	movt	r1, #2
   12950:	str	r0, [r1]
   12954:	bx	lr
   12958:	movw	r1, #29012	; 0x7154
   1295c:	movt	r1, #2
   12960:	strb	r0, [r1]
   12964:	bx	lr
   12968:	push	{r4, r5, r6, sl, fp, lr}
   1296c:	add	fp, sp, #16
   12970:	sub	sp, sp, #8
   12974:	movw	r0, #28996	; 0x7144
   12978:	movt	r0, #2
   1297c:	ldr	r0, [r0]
   12980:	bl	15c08 <__mempcpy_chk@plt+0x4bcc>
   12984:	cmp	r0, #0
   12988:	beq	129b0 <__mempcpy_chk@plt+0x1974>
   1298c:	movw	r0, #29012	; 0x7154
   12990:	movt	r0, #2
   12994:	ldrb	r0, [r0]
   12998:	cmp	r0, #0
   1299c:	beq	129d0 <__mempcpy_chk@plt+0x1994>
   129a0:	bl	10f64 <__errno_location@plt>
   129a4:	ldr	r0, [r0]
   129a8:	cmp	r0, #32
   129ac:	bne	129d0 <__mempcpy_chk@plt+0x1994>
   129b0:	movw	r0, #28992	; 0x7140
   129b4:	movt	r0, #2
   129b8:	ldr	r0, [r0]
   129bc:	bl	15c08 <__mempcpy_chk@plt+0x4bcc>
   129c0:	cmp	r0, #0
   129c4:	subeq	sp, fp, #16
   129c8:	popeq	{r4, r5, r6, sl, fp, pc}
   129cc:	b	12a40 <__mempcpy_chk@plt+0x1a04>
   129d0:	movw	r1, #27063	; 0x69b7
   129d4:	mov	r0, #0
   129d8:	mov	r2, #5
   129dc:	movt	r1, #1
   129e0:	bl	10e74 <dcgettext@plt>
   129e4:	mov	r4, r0
   129e8:	movw	r0, #29008	; 0x7150
   129ec:	movt	r0, #2
   129f0:	ldr	r6, [r0]
   129f4:	bl	10f64 <__errno_location@plt>
   129f8:	ldr	r5, [r0]
   129fc:	cmp	r6, #0
   12a00:	bne	12a1c <__mempcpy_chk@plt+0x19e0>
   12a04:	movw	r2, #26691	; 0x6843
   12a08:	mov	r0, #0
   12a0c:	mov	r1, r5
   12a10:	mov	r3, r4
   12a14:	movt	r2, #1
   12a18:	b	12a3c <__mempcpy_chk@plt+0x1a00>
   12a1c:	mov	r0, r6
   12a20:	bl	14324 <__mempcpy_chk@plt+0x32e8>
   12a24:	movw	r2, #27075	; 0x69c3
   12a28:	mov	r3, r0
   12a2c:	str	r4, [sp]
   12a30:	mov	r0, #0
   12a34:	mov	r1, r5
   12a38:	movt	r2, #1
   12a3c:	bl	10ee0 <error@plt>
   12a40:	movw	r0, #28916	; 0x70f4
   12a44:	movt	r0, #2
   12a48:	ldr	r0, [r0]
   12a4c:	bl	10e2c <_exit@plt>
   12a50:	push	{r4, r5, r6, sl, fp, lr}
   12a54:	add	fp, sp, #16
   12a58:	mov	r4, r0
   12a5c:	bl	10f64 <__errno_location@plt>
   12a60:	ldr	r6, [r0]
   12a64:	mov	r5, r0
   12a68:	mov	r0, r4
   12a6c:	bl	10e14 <free@plt>
   12a70:	str	r6, [r5]
   12a74:	pop	{r4, r5, r6, sl, fp, pc}
   12a78:	push	{r4, r5, fp, lr}
   12a7c:	add	fp, sp, #8
   12a80:	cmp	r0, #0
   12a84:	beq	12b18 <__mempcpy_chk@plt+0x1adc>
   12a88:	mov	r1, #47	; 0x2f
   12a8c:	mov	r4, r0
   12a90:	bl	10fe8 <strrchr@plt>
   12a94:	cmp	r0, #0
   12a98:	mov	r5, r4
   12a9c:	addne	r5, r0, #1
   12aa0:	sub	r0, r5, r4
   12aa4:	cmp	r0, #7
   12aa8:	blt	12afc <__mempcpy_chk@plt+0x1ac0>
   12aac:	movw	r1, #27138	; 0x6a02
   12ab0:	sub	r0, r5, #7
   12ab4:	mov	r2, #7
   12ab8:	movt	r1, #1
   12abc:	bl	11024 <strncmp@plt>
   12ac0:	cmp	r0, #0
   12ac4:	bne	12afc <__mempcpy_chk@plt+0x1ac0>
   12ac8:	movw	r1, #27146	; 0x6a0a
   12acc:	mov	r0, r5
   12ad0:	mov	r2, #3
   12ad4:	movt	r1, #1
   12ad8:	bl	11024 <strncmp@plt>
   12adc:	cmp	r0, #0
   12ae0:	beq	12aec <__mempcpy_chk@plt+0x1ab0>
   12ae4:	mov	r4, r5
   12ae8:	b	12afc <__mempcpy_chk@plt+0x1ac0>
   12aec:	movw	r0, #28984	; 0x7138
   12af0:	add	r4, r5, #3
   12af4:	movt	r0, #2
   12af8:	str	r4, [r0]
   12afc:	movw	r0, #28988	; 0x713c
   12b00:	movt	r0, #2
   12b04:	str	r4, [r0]
   12b08:	movw	r0, #29016	; 0x7158
   12b0c:	movt	r0, #2
   12b10:	str	r4, [r0]
   12b14:	pop	{r4, r5, fp, pc}
   12b18:	movw	r0, #28992	; 0x7140
   12b1c:	mov	r1, #55	; 0x37
   12b20:	mov	r2, #1
   12b24:	movt	r0, #2
   12b28:	ldr	r3, [r0]
   12b2c:	movw	r0, #27082	; 0x69ca
   12b30:	movt	r0, #1
   12b34:	bl	10ea4 <fwrite@plt>
   12b38:	bl	11030 <abort@plt>
   12b3c:	push	{r4, r5, r6, sl, fp, lr}
   12b40:	add	fp, sp, #16
   12b44:	mov	r4, r0
   12b48:	movw	r0, #29024	; 0x7160
   12b4c:	movt	r0, #2
   12b50:	cmp	r4, #0
   12b54:	moveq	r4, r0
   12b58:	bl	10f64 <__errno_location@plt>
   12b5c:	ldr	r6, [r0]
   12b60:	mov	r5, r0
   12b64:	mov	r0, r4
   12b68:	mov	r1, #48	; 0x30
   12b6c:	bl	156f8 <__mempcpy_chk@plt+0x46bc>
   12b70:	str	r6, [r5]
   12b74:	pop	{r4, r5, r6, sl, fp, pc}
   12b78:	movw	r1, #29024	; 0x7160
   12b7c:	cmp	r0, #0
   12b80:	movt	r1, #2
   12b84:	movne	r1, r0
   12b88:	ldr	r0, [r1]
   12b8c:	bx	lr
   12b90:	movw	r2, #29024	; 0x7160
   12b94:	cmp	r0, #0
   12b98:	movt	r2, #2
   12b9c:	movne	r2, r0
   12ba0:	str	r1, [r2]
   12ba4:	bx	lr
   12ba8:	movw	r3, #29024	; 0x7160
   12bac:	cmp	r0, #0
   12bb0:	movt	r3, #2
   12bb4:	movne	r3, r0
   12bb8:	ubfx	r0, r1, #5, #3
   12bbc:	and	r1, r1, #31
   12bc0:	add	r0, r3, r0, lsl #2
   12bc4:	ldr	r3, [r0, #8]
   12bc8:	eor	r2, r2, r3, lsr r1
   12bcc:	and	r2, r2, #1
   12bd0:	eor	r2, r3, r2, lsl r1
   12bd4:	str	r2, [r0, #8]
   12bd8:	mov	r0, #1
   12bdc:	and	r0, r0, r3, lsr r1
   12be0:	bx	lr
   12be4:	movw	r2, #29024	; 0x7160
   12be8:	cmp	r0, #0
   12bec:	movt	r2, #2
   12bf0:	movne	r2, r0
   12bf4:	ldr	r0, [r2, #4]
   12bf8:	str	r1, [r2, #4]
   12bfc:	bx	lr
   12c00:	movw	r3, #29024	; 0x7160
   12c04:	cmp	r0, #0
   12c08:	movt	r3, #2
   12c0c:	movne	r3, r0
   12c10:	cmp	r1, #0
   12c14:	mov	r0, #10
   12c18:	cmpne	r2, #0
   12c1c:	str	r0, [r3]
   12c20:	bne	12c30 <__mempcpy_chk@plt+0x1bf4>
   12c24:	push	{fp, lr}
   12c28:	mov	fp, sp
   12c2c:	bl	11030 <abort@plt>
   12c30:	str	r1, [r3, #40]	; 0x28
   12c34:	str	r2, [r3, #44]	; 0x2c
   12c38:	bx	lr
   12c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c40:	add	fp, sp, #28
   12c44:	sub	sp, sp, #20
   12c48:	mov	r7, r0
   12c4c:	ldr	r0, [fp, #8]
   12c50:	movw	r5, #29024	; 0x7160
   12c54:	mov	r8, r3
   12c58:	mov	r9, r2
   12c5c:	mov	sl, r1
   12c60:	movt	r5, #2
   12c64:	cmp	r0, #0
   12c68:	movne	r5, r0
   12c6c:	bl	10f64 <__errno_location@plt>
   12c70:	mov	r4, r0
   12c74:	ldm	r5, {r0, r1}
   12c78:	ldr	r2, [r5, #40]	; 0x28
   12c7c:	ldr	r3, [r5, #44]	; 0x2c
   12c80:	add	r5, r5, #8
   12c84:	ldr	r6, [r4]
   12c88:	stm	sp, {r0, r1, r5}
   12c8c:	str	r2, [sp, #12]
   12c90:	str	r3, [sp, #16]
   12c94:	mov	r0, r7
   12c98:	mov	r1, sl
   12c9c:	mov	r2, r9
   12ca0:	mov	r3, r8
   12ca4:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   12ca8:	str	r6, [r4]
   12cac:	sub	sp, fp, #28
   12cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cb8:	add	fp, sp, #28
   12cbc:	sub	sp, sp, #156	; 0x9c
   12cc0:	str	r0, [sp, #80]	; 0x50
   12cc4:	ldr	r0, [fp, #12]
   12cc8:	mov	r6, r1
   12ccc:	mov	r9, r3
   12cd0:	str	r2, [fp, #-84]	; 0xffffffac
   12cd4:	and	r1, r0, #4
   12cd8:	str	r1, [sp, #32]
   12cdc:	and	r1, r0, #1
   12ce0:	str	r1, [sp, #36]	; 0x24
   12ce4:	ubfx	r4, r0, #1, #1
   12ce8:	bl	10ebc <__ctype_get_mb_cur_max@plt>
   12cec:	str	r0, [sp, #40]	; 0x28
   12cf0:	ldr	r0, [fp, #24]
   12cf4:	ldr	r7, [fp, #8]
   12cf8:	mov	r1, #0
   12cfc:	mov	r5, #1
   12d00:	str	r1, [fp, #-56]	; 0xffffffc8
   12d04:	mov	r1, #0
   12d08:	str	r1, [sp, #60]	; 0x3c
   12d0c:	str	r0, [sp, #76]	; 0x4c
   12d10:	ldr	r0, [fp, #20]
   12d14:	str	r0, [sp, #72]	; 0x48
   12d18:	mov	r0, #0
   12d1c:	str	r0, [sp, #56]	; 0x38
   12d20:	mov	r0, #0
   12d24:	str	r0, [sp, #92]	; 0x5c
   12d28:	mov	r0, #0
   12d2c:	str	r0, [fp, #-76]	; 0xffffffb4
   12d30:	mov	r0, #0
   12d34:	cmp	r7, #10
   12d38:	bhi	13cb8 <__mempcpy_chk@plt+0x2c7c>
   12d3c:	add	r1, pc, #28
   12d40:	mov	sl, r6
   12d44:	ldr	r6, [sp, #80]	; 0x50
   12d48:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d4c:	mov	r8, #0
   12d50:	mov	r2, #1
   12d54:	mov	r3, #0
   12d58:	mov	lr, r9
   12d5c:	ldr	pc, [r1, r7, lsl #2]
   12d60:	andeq	r2, r1, r4, asr #28
   12d64:	andeq	r2, r1, r0, ror lr
   12d68:	andeq	r2, r1, r4, lsr lr
   12d6c:	andeq	r2, r1, ip, lsr #28
   12d70:	andeq	r2, r1, r4, ror #28
   12d74:			; <UNDEFINED> instruction: 0x00012eb8
   12d78:	andeq	r2, r1, r4, asr lr
   12d7c:	andeq	r2, r1, r4, lsl pc
   12d80:	andeq	r2, r1, ip, lsl #27
   12d84:	andeq	r2, r1, ip, lsl #27
   12d88:			; <UNDEFINED> instruction: 0x00012db4
   12d8c:	movw	r0, #27230	; 0x6a5e
   12d90:	mov	r1, r7
   12d94:	movt	r0, #1
   12d98:	bl	146c4 <__mempcpy_chk@plt+0x3688>
   12d9c:	str	r0, [sp, #72]	; 0x48
   12da0:	movw	r0, #27232	; 0x6a60
   12da4:	mov	r1, r7
   12da8:	movt	r0, #1
   12dac:	bl	146c4 <__mempcpy_chk@plt+0x3688>
   12db0:	str	r0, [sp, #76]	; 0x4c
   12db4:	str	r5, [fp, #-48]	; 0xffffffd0
   12db8:	mov	r8, #0
   12dbc:	mov	r5, r7
   12dc0:	tst	r4, #1
   12dc4:	bne	12dfc <__mempcpy_chk@plt+0x1dc0>
   12dc8:	ldr	r0, [sp, #72]	; 0x48
   12dcc:	ldrb	r0, [r0]
   12dd0:	cmp	r0, #0
   12dd4:	beq	12dfc <__mempcpy_chk@plt+0x1dc0>
   12dd8:	ldr	r1, [sp, #72]	; 0x48
   12ddc:	mov	r8, #0
   12de0:	add	r1, r1, #1
   12de4:	cmp	r8, sl
   12de8:	strbcc	r0, [r6, r8]
   12dec:	ldrb	r0, [r1, r8]
   12df0:	add	r8, r8, #1
   12df4:	cmp	r0, #0
   12df8:	bne	12de4 <__mempcpy_chk@plt+0x1da8>
   12dfc:	ldr	r7, [sp, #76]	; 0x4c
   12e00:	mov	r0, r7
   12e04:	bl	10f58 <strlen@plt>
   12e08:	str	r7, [sp, #92]	; 0x5c
   12e0c:	mov	r7, r5
   12e10:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e14:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12e18:	str	r0, [fp, #-76]	; 0xffffffb4
   12e1c:	mov	r2, #1
   12e20:	mov	r3, r4
   12e24:	mov	lr, r9
   12e28:	b	12f14 <__mempcpy_chk@plt+0x1ed8>
   12e2c:	mov	r0, #1
   12e30:	b	12e70 <__mempcpy_chk@plt+0x1e34>
   12e34:	tst	r4, #1
   12e38:	bne	12e70 <__mempcpy_chk@plt+0x1e34>
   12e3c:	mov	r2, r0
   12e40:	b	12e98 <__mempcpy_chk@plt+0x1e5c>
   12e44:	mov	r7, #0
   12e48:	mov	r8, #0
   12e4c:	mov	r2, r0
   12e50:	b	12f10 <__mempcpy_chk@plt+0x1ed4>
   12e54:	mov	r0, #1
   12e58:	mov	r8, #0
   12e5c:	mov	r7, #5
   12e60:	b	12ecc <__mempcpy_chk@plt+0x1e90>
   12e64:	mov	r2, #1
   12e68:	tst	r4, #1
   12e6c:	beq	12e98 <__mempcpy_chk@plt+0x1e5c>
   12e70:	mov	r1, #1
   12e74:	mov	r8, #0
   12e78:	mov	r7, #2
   12e7c:	mov	r2, r0
   12e80:	mov	r3, #1
   12e84:	str	r1, [fp, #-76]	; 0xffffffb4
   12e88:	movw	r1, #27232	; 0x6a60
   12e8c:	movt	r1, #1
   12e90:	str	r1, [sp, #92]	; 0x5c
   12e94:	b	12f14 <__mempcpy_chk@plt+0x1ed8>
   12e98:	cmp	sl, #0
   12e9c:	mov	r8, #1
   12ea0:	mov	r7, #2
   12ea4:	movne	r0, #39	; 0x27
   12ea8:	strbne	r0, [r6]
   12eac:	movw	r0, #27232	; 0x6a60
   12eb0:	movt	r0, #1
   12eb4:	b	12f04 <__mempcpy_chk@plt+0x1ec8>
   12eb8:	mov	r7, #5
   12ebc:	tst	r4, #1
   12ec0:	beq	12ee8 <__mempcpy_chk@plt+0x1eac>
   12ec4:	mov	r0, #1
   12ec8:	mov	r8, #0
   12ecc:	str	r0, [fp, #-76]	; 0xffffffb4
   12ed0:	movw	r0, #27228	; 0x6a5c
   12ed4:	mov	r2, #1
   12ed8:	mov	r3, #1
   12edc:	movt	r0, #1
   12ee0:	str	r0, [sp, #92]	; 0x5c
   12ee4:	b	12f14 <__mempcpy_chk@plt+0x1ed8>
   12ee8:	cmp	sl, #0
   12eec:	mov	r8, #1
   12ef0:	mov	r2, #1
   12ef4:	movne	r0, #34	; 0x22
   12ef8:	strbne	r0, [r6]
   12efc:	movw	r0, #27228	; 0x6a5c
   12f00:	movt	r0, #1
   12f04:	str	r0, [sp, #92]	; 0x5c
   12f08:	mov	r0, #1
   12f0c:	str	r0, [fp, #-76]	; 0xffffffb4
   12f10:	mov	r3, #0
   12f14:	ldr	r0, [fp, #16]
   12f18:	str	r3, [fp, #-72]	; 0xffffffb8
   12f1c:	str	r7, [fp, #-64]	; 0xffffffc0
   12f20:	str	r2, [sp, #84]	; 0x54
   12f24:	cmp	r0, #0
   12f28:	movwne	r0, #1
   12f2c:	and	r0, r0, r3
   12f30:	str	r0, [fp, #-88]	; 0xffffffa8
   12f34:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f38:	cmp	r0, #0
   12f3c:	movwne	r0, #1
   12f40:	subs	r4, r7, #2
   12f44:	mov	r7, #0
   12f48:	and	r1, r0, r3
   12f4c:	str	r4, [fp, #-80]	; 0xffffffb0
   12f50:	and	r1, r2, r1
   12f54:	str	r1, [sp, #48]	; 0x30
   12f58:	clz	r1, r4
   12f5c:	lsr	r1, r1, #5
   12f60:	and	r1, r1, r3
   12f64:	eor	r3, r3, #1
   12f68:	str	r1, [sp, #64]	; 0x40
   12f6c:	mov	r1, r4
   12f70:	str	r3, [sp, #88]	; 0x58
   12f74:	movwne	r1, #1
   12f78:	orr	r3, r1, r3
   12f7c:	and	r1, r1, r2
   12f80:	and	r0, r0, r1
   12f84:	str	r3, [sp, #68]	; 0x44
   12f88:	str	r1, [fp, #-68]	; 0xffffffbc
   12f8c:	str	r0, [fp, #-60]	; 0xffffffc4
   12f90:	eor	r0, r2, #1
   12f94:	str	r0, [sp, #52]	; 0x34
   12f98:	cmn	lr, #1
   12f9c:	beq	12fac <__mempcpy_chk@plt+0x1f70>
   12fa0:	cmp	r7, lr
   12fa4:	bne	12fb8 <__mempcpy_chk@plt+0x1f7c>
   12fa8:	b	13ae0 <__mempcpy_chk@plt+0x2aa4>
   12fac:	ldrb	r0, [ip, r7]
   12fb0:	cmp	r0, #0
   12fb4:	beq	13ae8 <__mempcpy_chk@plt+0x2aac>
   12fb8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12fbc:	mov	r9, #0
   12fc0:	str	r5, [fp, #-48]	; 0xffffffd0
   12fc4:	cmp	r0, #0
   12fc8:	beq	12ffc <__mempcpy_chk@plt+0x1fc0>
   12fcc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12fd0:	add	r4, r7, r0
   12fd4:	cmp	r0, #2
   12fd8:	bcc	12ff4 <__mempcpy_chk@plt+0x1fb8>
   12fdc:	cmn	lr, #1
   12fe0:	bne	12ff4 <__mempcpy_chk@plt+0x1fb8>
   12fe4:	mov	r0, ip
   12fe8:	bl	10f58 <strlen@plt>
   12fec:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ff0:	mov	lr, r0
   12ff4:	cmp	r4, lr
   12ff8:	bls	13004 <__mempcpy_chk@plt+0x1fc8>
   12ffc:	mov	r0, #0
   13000:	b	13044 <__mempcpy_chk@plt+0x2008>
   13004:	ldr	r1, [sp, #92]	; 0x5c
   13008:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1300c:	add	r0, ip, r7
   13010:	mov	r4, lr
   13014:	bl	10e68 <memcmp@plt>
   13018:	ldr	r2, [sp, #88]	; 0x58
   1301c:	cmp	r0, #0
   13020:	mov	r1, r0
   13024:	movwne	r1, #1
   13028:	orr	r1, r1, r2
   1302c:	tst	r1, #1
   13030:	beq	13b78 <__mempcpy_chk@plt+0x2b3c>
   13034:	ldr	ip, [fp, #-84]	; 0xffffffac
   13038:	clz	r0, r0
   1303c:	mov	lr, r4
   13040:	lsr	r0, r0, #5
   13044:	str	r0, [fp, #-52]	; 0xffffffcc
   13048:	ldrb	r5, [ip, r7]
   1304c:	cmp	r5, #126	; 0x7e
   13050:	bhi	13408 <__mempcpy_chk@plt+0x23cc>
   13054:	add	r3, pc, #16
   13058:	mov	r4, #1
   1305c:	mov	r2, #110	; 0x6e
   13060:	mov	r0, #97	; 0x61
   13064:	mov	r1, #0
   13068:	ldr	pc, [r3, r5, lsl #2]
   1306c:	andeq	r3, r1, r4, lsl #6
   13070:	andeq	r3, r1, r8, lsl #8
   13074:	andeq	r3, r1, r8, lsl #8
   13078:	andeq	r3, r1, r8, lsl #8
   1307c:	andeq	r3, r1, r8, lsl #8
   13080:	andeq	r3, r1, r8, lsl #8
   13084:	andeq	r3, r1, r8, lsl #8
   13088:			; <UNDEFINED> instruction: 0x000134bc
   1308c:	andeq	r3, r1, r4, ror #5
   13090:	ldrdeq	r3, [r1], -ip
   13094:	strdeq	r3, [r1], -r0
   13098:	andeq	r3, r1, r0, ror r3
   1309c:	ldrdeq	r3, [r1], -r4
   130a0:	andeq	r3, r1, ip, ror #5
   130a4:	andeq	r3, r1, r8, lsl #8
   130a8:	andeq	r3, r1, r8, lsl #8
   130ac:	andeq	r3, r1, r8, lsl #8
   130b0:	andeq	r3, r1, r8, lsl #8
   130b4:	andeq	r3, r1, r8, lsl #8
   130b8:	andeq	r3, r1, r8, lsl #8
   130bc:	andeq	r3, r1, r8, lsl #8
   130c0:	andeq	r3, r1, r8, lsl #8
   130c4:	andeq	r3, r1, r8, lsl #8
   130c8:	andeq	r3, r1, r8, lsl #8
   130cc:	andeq	r3, r1, r8, lsl #8
   130d0:	andeq	r3, r1, r8, lsl #8
   130d4:	andeq	r3, r1, r8, lsl #8
   130d8:	andeq	r3, r1, r8, lsl #8
   130dc:	andeq	r3, r1, r8, lsl #8
   130e0:	andeq	r3, r1, r8, lsl #8
   130e4:	andeq	r3, r1, r8, lsl #8
   130e8:	andeq	r3, r1, r8, lsl #8
   130ec:	andeq	r3, r1, r4, ror r4
   130f0:	andeq	r3, r1, r8, ror r4
   130f4:	andeq	r3, r1, r8, ror r4
   130f8:	andeq	r3, r1, ip, ror r2
   130fc:	andeq	r3, r1, r8, ror r4
   13100:	andeq	r3, r1, r8, ror #4
   13104:	andeq	r3, r1, r8, ror r4
   13108:	andeq	r3, r1, r8, ror r3
   1310c:	andeq	r3, r1, r8, ror r4
   13110:	andeq	r3, r1, r8, ror r4
   13114:	andeq	r3, r1, r8, ror r4
   13118:	andeq	r3, r1, r8, ror #4
   1311c:	andeq	r3, r1, r8, ror #4
   13120:	andeq	r3, r1, r8, ror #4
   13124:	andeq	r3, r1, r8, ror #4
   13128:	andeq	r3, r1, r8, ror #4
   1312c:	andeq	r3, r1, r8, ror #4
   13130:	andeq	r3, r1, r8, ror #4
   13134:	andeq	r3, r1, r8, ror #4
   13138:	andeq	r3, r1, r8, ror #4
   1313c:	andeq	r3, r1, r8, ror #4
   13140:	andeq	r3, r1, r8, ror #4
   13144:	andeq	r3, r1, r8, ror #4
   13148:	andeq	r3, r1, r8, ror #4
   1314c:	andeq	r3, r1, r8, ror #4
   13150:	andeq	r3, r1, r8, ror #4
   13154:	andeq	r3, r1, r8, ror #4
   13158:	andeq	r3, r1, r8, ror r4
   1315c:	andeq	r3, r1, r8, ror r4
   13160:	andeq	r3, r1, r8, ror r4
   13164:	andeq	r3, r1, r8, ror r4
   13168:	andeq	r3, r1, r4, asr #6
   1316c:	andeq	r3, r1, r8, lsl #8
   13170:	andeq	r3, r1, r8, ror #4
   13174:	andeq	r3, r1, r8, ror #4
   13178:	andeq	r3, r1, r8, ror #4
   1317c:	andeq	r3, r1, r8, ror #4
   13180:	andeq	r3, r1, r8, ror #4
   13184:	andeq	r3, r1, r8, ror #4
   13188:	andeq	r3, r1, r8, ror #4
   1318c:	andeq	r3, r1, r8, ror #4
   13190:	andeq	r3, r1, r8, ror #4
   13194:	andeq	r3, r1, r8, ror #4
   13198:	andeq	r3, r1, r8, ror #4
   1319c:	andeq	r3, r1, r8, ror #4
   131a0:	andeq	r3, r1, r8, ror #4
   131a4:	andeq	r3, r1, r8, ror #4
   131a8:	andeq	r3, r1, r8, ror #4
   131ac:	andeq	r3, r1, r8, ror #4
   131b0:	andeq	r3, r1, r8, ror #4
   131b4:	andeq	r3, r1, r8, ror #4
   131b8:	andeq	r3, r1, r8, ror #4
   131bc:	andeq	r3, r1, r8, ror #4
   131c0:	andeq	r3, r1, r8, ror #4
   131c4:	andeq	r3, r1, r8, ror #4
   131c8:	andeq	r3, r1, r8, ror #4
   131cc:	andeq	r3, r1, r8, ror #4
   131d0:	andeq	r3, r1, r8, ror #4
   131d4:	andeq	r3, r1, r8, ror #4
   131d8:	andeq	r3, r1, r8, ror r4
   131dc:			; <UNDEFINED> instruction: 0x000132b0
   131e0:	andeq	r3, r1, r8, ror #4
   131e4:	andeq	r3, r1, r8, ror r4
   131e8:	andeq	r3, r1, r8, ror #4
   131ec:	andeq	r3, r1, r8, ror r4
   131f0:	andeq	r3, r1, r8, ror #4
   131f4:	andeq	r3, r1, r8, ror #4
   131f8:	andeq	r3, r1, r8, ror #4
   131fc:	andeq	r3, r1, r8, ror #4
   13200:	andeq	r3, r1, r8, ror #4
   13204:	andeq	r3, r1, r8, ror #4
   13208:	andeq	r3, r1, r8, ror #4
   1320c:	andeq	r3, r1, r8, ror #4
   13210:	andeq	r3, r1, r8, ror #4
   13214:	andeq	r3, r1, r8, ror #4
   13218:	andeq	r3, r1, r8, ror #4
   1321c:	andeq	r3, r1, r8, ror #4
   13220:	andeq	r3, r1, r8, ror #4
   13224:	andeq	r3, r1, r8, ror #4
   13228:	andeq	r3, r1, r8, ror #4
   1322c:	andeq	r3, r1, r8, ror #4
   13230:	andeq	r3, r1, r8, ror #4
   13234:	andeq	r3, r1, r8, ror #4
   13238:	andeq	r3, r1, r8, ror #4
   1323c:	andeq	r3, r1, r8, ror #4
   13240:	andeq	r3, r1, r8, ror #4
   13244:	andeq	r3, r1, r8, ror #4
   13248:	andeq	r3, r1, r8, ror #4
   1324c:	andeq	r3, r1, r8, ror #4
   13250:	andeq	r3, r1, r8, ror #4
   13254:	andeq	r3, r1, r8, ror #4
   13258:	muleq	r1, r0, r2
   1325c:	andeq	r3, r1, r8, ror r4
   13260:	muleq	r1, r0, r2
   13264:	andeq	r3, r1, ip, ror r2
   13268:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1326c:	cmp	r0, #0
   13270:	beq	134d0 <__mempcpy_chk@plt+0x2494>
   13274:	ldr	r0, [fp, #16]
   13278:	b	134d4 <__mempcpy_chk@plt+0x2498>
   1327c:	mov	r4, #0
   13280:	cmp	r7, #0
   13284:	beq	13474 <__mempcpy_chk@plt+0x2438>
   13288:	mov	r9, #0
   1328c:	b	13268 <__mempcpy_chk@plt+0x222c>
   13290:	mov	r4, #0
   13294:	cmn	lr, #1
   13298:	beq	13458 <__mempcpy_chk@plt+0x241c>
   1329c:	cmp	r7, #0
   132a0:	bne	13288 <__mempcpy_chk@plt+0x224c>
   132a4:	cmp	lr, #1
   132a8:	beq	13474 <__mempcpy_chk@plt+0x2438>
   132ac:	b	13288 <__mempcpy_chk@plt+0x224c>
   132b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132b4:	cmp	r0, #2
   132b8:	bne	13498 <__mempcpy_chk@plt+0x245c>
   132bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132c0:	tst	r0, #1
   132c4:	bne	13b94 <__mempcpy_chk@plt+0x2b58>
   132c8:	mov	r9, #0
   132cc:	mov	r0, #92	; 0x5c
   132d0:	b	134ac <__mempcpy_chk@plt+0x2470>
   132d4:	mov	r0, #102	; 0x66
   132d8:	b	134bc <__mempcpy_chk@plt+0x2480>
   132dc:	mov	r2, #116	; 0x74
   132e0:	b	132f0 <__mempcpy_chk@plt+0x22b4>
   132e4:	mov	r0, #98	; 0x62
   132e8:	b	134bc <__mempcpy_chk@plt+0x2480>
   132ec:	mov	r2, #114	; 0x72
   132f0:	ldr	r0, [sp, #68]	; 0x44
   132f4:	tst	r0, #1
   132f8:	mov	r0, r2
   132fc:	bne	134bc <__mempcpy_chk@plt+0x2480>
   13300:	b	13b94 <__mempcpy_chk@plt+0x2b58>
   13304:	ldr	r0, [sp, #84]	; 0x54
   13308:	tst	r0, #1
   1330c:	beq	135ac <__mempcpy_chk@plt+0x2570>
   13310:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13314:	tst	r0, #1
   13318:	bne	13ca4 <__mempcpy_chk@plt+0x2c68>
   1331c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13320:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13324:	cmp	r0, #2
   13328:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1332c:	movwne	r0, #1
   13330:	orr	r0, r0, r2
   13334:	tst	r0, #1
   13338:	beq	1397c <__mempcpy_chk@plt+0x2940>
   1333c:	mov	r0, r8
   13340:	b	139b0 <__mempcpy_chk@plt+0x2974>
   13344:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13348:	mov	r9, #0
   1334c:	mov	r5, #63	; 0x3f
   13350:	cmp	r0, #5
   13354:	beq	13760 <__mempcpy_chk@plt+0x2724>
   13358:	cmp	r0, #2
   1335c:	bne	13804 <__mempcpy_chk@plt+0x27c8>
   13360:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13364:	tst	r0, #1
   13368:	beq	13808 <__mempcpy_chk@plt+0x27cc>
   1336c:	b	13b94 <__mempcpy_chk@plt+0x2b58>
   13370:	mov	r0, #118	; 0x76
   13374:	b	134bc <__mempcpy_chk@plt+0x2480>
   13378:	mov	r0, #1
   1337c:	mov	r5, #39	; 0x27
   13380:	str	r0, [sp, #60]	; 0x3c
   13384:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13388:	cmp	r0, #2
   1338c:	bne	13400 <__mempcpy_chk@plt+0x23c4>
   13390:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13394:	tst	r0, #1
   13398:	bne	13b94 <__mempcpy_chk@plt+0x2b58>
   1339c:	ldr	r2, [sp, #56]	; 0x38
   133a0:	clz	r1, sl
   133a4:	mov	r9, #0
   133a8:	lsr	r1, r1, #5
   133ac:	cmp	r2, #0
   133b0:	mov	r0, r2
   133b4:	movwne	r0, #1
   133b8:	orrs	r0, r0, r1
   133bc:	moveq	r2, sl
   133c0:	moveq	sl, r0
   133c4:	cmp	r8, sl
   133c8:	str	r2, [sp, #56]	; 0x38
   133cc:	movcc	r0, #39	; 0x27
   133d0:	strbcc	r0, [r6, r8]
   133d4:	add	r0, r8, #1
   133d8:	cmp	r0, sl
   133dc:	movcc	r1, #92	; 0x5c
   133e0:	strbcc	r1, [r6, r0]
   133e4:	add	r0, r8, #2
   133e8:	add	r8, r8, #3
   133ec:	cmp	r0, sl
   133f0:	movcc	r1, #39	; 0x27
   133f4:	strbcc	r1, [r6, r0]
   133f8:	mov	r0, #0
   133fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13400:	mov	r4, #1
   13404:	b	13268 <__mempcpy_chk@plt+0x222c>
   13408:	ldr	r0, [sp, #40]	; 0x28
   1340c:	cmp	r0, #1
   13410:	bne	135d8 <__mempcpy_chk@plt+0x259c>
   13414:	str	lr, [sp, #28]
   13418:	bl	10f40 <__ctype_b_loc@plt>
   1341c:	ldr	r0, [r0]
   13420:	ldr	ip, [fp, #-84]	; 0xffffffac
   13424:	mov	r1, #1
   13428:	add	r0, r0, r5, lsl #1
   1342c:	ldrb	r0, [r0, #1]
   13430:	ubfx	r4, r0, #6, #1
   13434:	ldr	r0, [sp, #52]	; 0x34
   13438:	mov	r2, r1
   1343c:	cmp	r1, #1
   13440:	orr	r0, r4, r0
   13444:	bhi	13810 <__mempcpy_chk@plt+0x27d4>
   13448:	tst	r0, #1
   1344c:	beq	13810 <__mempcpy_chk@plt+0x27d4>
   13450:	ldr	lr, [sp, #28]
   13454:	b	13268 <__mempcpy_chk@plt+0x222c>
   13458:	cmp	r7, #0
   1345c:	ldrbeq	r0, [ip, #1]
   13460:	cmpeq	r0, #0
   13464:	beq	13474 <__mempcpy_chk@plt+0x2438>
   13468:	mvn	lr, #0
   1346c:	mov	r9, #0
   13470:	b	13268 <__mempcpy_chk@plt+0x222c>
   13474:	mov	r1, #1
   13478:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1347c:	cmp	r0, #2
   13480:	bne	13490 <__mempcpy_chk@plt+0x2454>
   13484:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13488:	tst	r0, #1
   1348c:	bne	13b94 <__mempcpy_chk@plt+0x2b58>
   13490:	mov	r4, r1
   13494:	b	13268 <__mempcpy_chk@plt+0x222c>
   13498:	ldr	r1, [sp, #48]	; 0x30
   1349c:	mov	r9, #0
   134a0:	mov	r0, #92	; 0x5c
   134a4:	cmp	r1, #0
   134a8:	beq	134bc <__mempcpy_chk@plt+0x2480>
   134ac:	mov	r4, #0
   134b0:	cmp	r9, #0
   134b4:	beq	13a48 <__mempcpy_chk@plt+0x2a0c>
   134b8:	b	13a84 <__mempcpy_chk@plt+0x2a48>
   134bc:	ldr	r1, [sp, #84]	; 0x54
   134c0:	mov	r4, #0
   134c4:	mov	r9, #0
   134c8:	tst	r1, #1
   134cc:	bne	1350c <__mempcpy_chk@plt+0x24d0>
   134d0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   134d4:	cmp	r0, #0
   134d8:	mov	r0, r5
   134dc:	beq	13500 <__mempcpy_chk@plt+0x24c4>
   134e0:	ldr	r1, [fp, #16]
   134e4:	ubfx	r0, r5, #5, #3
   134e8:	mov	r2, #1
   134ec:	ldr	r0, [r1, r0, lsl #2]
   134f0:	and	r1, r5, #31
   134f4:	tst	r0, r2, lsl r1
   134f8:	mov	r0, r5
   134fc:	bne	1350c <__mempcpy_chk@plt+0x24d0>
   13500:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13504:	cmp	r1, #0
   13508:	beq	13a40 <__mempcpy_chk@plt+0x2a04>
   1350c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13510:	tst	r1, #1
   13514:	bne	13b6c <__mempcpy_chk@plt+0x2b30>
   13518:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1351c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13520:	cmp	r1, #2
   13524:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13528:	movwne	r1, #1
   1352c:	orr	r1, r1, r2
   13530:	tst	r1, #1
   13534:	beq	13540 <__mempcpy_chk@plt+0x2504>
   13538:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1353c:	b	1357c <__mempcpy_chk@plt+0x2540>
   13540:	cmp	r8, sl
   13544:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13548:	movcc	r1, #39	; 0x27
   1354c:	strbcc	r1, [r6, r8]
   13550:	add	r1, r8, #1
   13554:	cmp	r1, sl
   13558:	movcc	r2, #36	; 0x24
   1355c:	strbcc	r2, [r6, r1]
   13560:	add	r1, r8, #2
   13564:	add	r8, r8, #3
   13568:	cmp	r1, sl
   1356c:	movcc	r2, #39	; 0x27
   13570:	strbcc	r2, [r6, r1]
   13574:	mov	r1, #1
   13578:	str	r1, [fp, #-56]	; 0xffffffc8
   1357c:	cmp	r8, sl
   13580:	movcc	r1, #92	; 0x5c
   13584:	strbcc	r1, [r6, r8]
   13588:	add	r8, r8, #1
   1358c:	cmp	r8, sl
   13590:	and	r5, r5, r4
   13594:	add	r7, r7, #1
   13598:	strbcc	r0, [r6, r8]
   1359c:	add	r8, r8, #1
   135a0:	cmn	lr, #1
   135a4:	bne	12fa0 <__mempcpy_chk@plt+0x1f64>
   135a8:	b	12fac <__mempcpy_chk@plt+0x1f70>
   135ac:	ldr	r0, [sp, #36]	; 0x24
   135b0:	mov	r4, #0
   135b4:	mov	r9, #0
   135b8:	mov	r5, #0
   135bc:	cmp	r0, #0
   135c0:	beq	134d0 <__mempcpy_chk@plt+0x2494>
   135c4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   135c8:	add	r7, r7, #1
   135cc:	cmn	lr, #1
   135d0:	bne	12fa0 <__mempcpy_chk@plt+0x1f64>
   135d4:	b	12fac <__mempcpy_chk@plt+0x1f70>
   135d8:	mov	r0, #0
   135dc:	cmn	lr, #1
   135e0:	str	r0, [fp, #-36]	; 0xffffffdc
   135e4:	str	r0, [fp, #-40]	; 0xffffffd8
   135e8:	bne	135fc <__mempcpy_chk@plt+0x25c0>
   135ec:	mov	r0, ip
   135f0:	bl	10f58 <strlen@plt>
   135f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   135f8:	mov	lr, r0
   135fc:	add	r0, ip, r7
   13600:	mov	r4, #1
   13604:	mov	r6, #0
   13608:	str	lr, [sp, #28]
   1360c:	str	r0, [sp, #24]
   13610:	sub	r0, fp, #40	; 0x28
   13614:	mov	r3, r0
   13618:	str	r6, [sp, #44]	; 0x2c
   1361c:	add	r6, r6, r7
   13620:	sub	r0, fp, #44	; 0x2c
   13624:	add	r1, ip, r6
   13628:	sub	r2, lr, r6
   1362c:	bl	15e60 <__mempcpy_chk@plt+0x4e24>
   13630:	cmp	r0, #0
   13634:	beq	13acc <__mempcpy_chk@plt+0x2a90>
   13638:	cmn	r0, #1
   1363c:	beq	13a8c <__mempcpy_chk@plt+0x2a50>
   13640:	ldr	lr, [sp, #28]
   13644:	cmn	r0, #2
   13648:	beq	13a94 <__mempcpy_chk@plt+0x2a58>
   1364c:	ldr	r2, [sp, #64]	; 0x40
   13650:	cmp	r0, #2
   13654:	mov	r1, #0
   13658:	movwcc	r1, #1
   1365c:	eor	r2, r2, #1
   13660:	orrs	r1, r2, r1
   13664:	bne	13724 <__mempcpy_chk@plt+0x26e8>
   13668:	ldr	r1, [sp, #44]	; 0x2c
   1366c:	ldr	r2, [sp, #24]
   13670:	add	r1, r2, r1
   13674:	mov	r2, #1
   13678:	ldrb	r3, [r1, r2]
   1367c:	sub	r3, r3, #91	; 0x5b
   13680:	cmp	r3, #33	; 0x21
   13684:	bhi	13718 <__mempcpy_chk@plt+0x26dc>
   13688:	add	r6, pc, #0
   1368c:	ldr	pc, [r6, r3, lsl #2]
   13690:	andeq	r3, r1, ip, lsl #23
   13694:	andeq	r3, r1, ip, lsl #23
   13698:	andeq	r3, r1, r8, lsl r7
   1369c:	andeq	r3, r1, ip, lsl #23
   136a0:	andeq	r3, r1, r8, lsl r7
   136a4:	andeq	r3, r1, ip, lsl #23
   136a8:	andeq	r3, r1, r8, lsl r7
   136ac:	andeq	r3, r1, r8, lsl r7
   136b0:	andeq	r3, r1, r8, lsl r7
   136b4:	andeq	r3, r1, r8, lsl r7
   136b8:	andeq	r3, r1, r8, lsl r7
   136bc:	andeq	r3, r1, r8, lsl r7
   136c0:	andeq	r3, r1, r8, lsl r7
   136c4:	andeq	r3, r1, r8, lsl r7
   136c8:	andeq	r3, r1, r8, lsl r7
   136cc:	andeq	r3, r1, r8, lsl r7
   136d0:	andeq	r3, r1, r8, lsl r7
   136d4:	andeq	r3, r1, r8, lsl r7
   136d8:	andeq	r3, r1, r8, lsl r7
   136dc:	andeq	r3, r1, r8, lsl r7
   136e0:	andeq	r3, r1, r8, lsl r7
   136e4:	andeq	r3, r1, r8, lsl r7
   136e8:	andeq	r3, r1, r8, lsl r7
   136ec:	andeq	r3, r1, r8, lsl r7
   136f0:	andeq	r3, r1, r8, lsl r7
   136f4:	andeq	r3, r1, r8, lsl r7
   136f8:	andeq	r3, r1, r8, lsl r7
   136fc:	andeq	r3, r1, r8, lsl r7
   13700:	andeq	r3, r1, r8, lsl r7
   13704:	andeq	r3, r1, r8, lsl r7
   13708:	andeq	r3, r1, r8, lsl r7
   1370c:	andeq	r3, r1, r8, lsl r7
   13710:	andeq	r3, r1, r8, lsl r7
   13714:	andeq	r3, r1, ip, lsl #23
   13718:	add	r2, r2, #1
   1371c:	cmp	r2, r0
   13720:	bcc	13678 <__mempcpy_chk@plt+0x263c>
   13724:	ldr	r6, [sp, #44]	; 0x2c
   13728:	add	r6, r0, r6
   1372c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13730:	bl	10e98 <iswprint@plt>
   13734:	cmp	r0, #0
   13738:	movwne	r0, #1
   1373c:	and	r4, r4, r0
   13740:	sub	r0, fp, #40	; 0x28
   13744:	bl	10e50 <mbsinit@plt>
   13748:	ldr	lr, [sp, #28]
   1374c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13750:	sub	r3, fp, #40	; 0x28
   13754:	cmp	r0, #0
   13758:	beq	13618 <__mempcpy_chk@plt+0x25dc>
   1375c:	b	13ad4 <__mempcpy_chk@plt+0x2a98>
   13760:	ldr	r0, [sp, #32]
   13764:	cmp	r0, #0
   13768:	beq	13804 <__mempcpy_chk@plt+0x27c8>
   1376c:	add	r0, r7, #2
   13770:	cmp	r0, lr
   13774:	bcs	13804 <__mempcpy_chk@plt+0x27c8>
   13778:	add	r1, ip, r7
   1377c:	ldrb	r1, [r1, #1]
   13780:	cmp	r1, #63	; 0x3f
   13784:	bne	13804 <__mempcpy_chk@plt+0x27c8>
   13788:	ldrb	r5, [ip, r0]
   1378c:	sub	r1, r5, #33	; 0x21
   13790:	cmp	r1, #29
   13794:	bhi	13804 <__mempcpy_chk@plt+0x27c8>
   13798:	movw	r3, #20929	; 0x51c1
   1379c:	mov	r2, #1
   137a0:	movt	r3, #14336	; 0x3800
   137a4:	tst	r3, r2, lsl r1
   137a8:	beq	13804 <__mempcpy_chk@plt+0x27c8>
   137ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   137b0:	tst	r1, #1
   137b4:	bne	13cac <__mempcpy_chk@plt+0x2c70>
   137b8:	cmp	r8, sl
   137bc:	mov	r7, r0
   137c0:	mov	r4, #0
   137c4:	movcc	r1, #63	; 0x3f
   137c8:	strbcc	r1, [r6, r8]
   137cc:	add	r1, r8, #1
   137d0:	cmp	r1, sl
   137d4:	movcc	r2, #34	; 0x22
   137d8:	strbcc	r2, [r6, r1]
   137dc:	add	r1, r8, #2
   137e0:	cmp	r1, sl
   137e4:	movcc	r2, #34	; 0x22
   137e8:	strbcc	r2, [r6, r1]
   137ec:	add	r1, r8, #3
   137f0:	add	r8, r8, #4
   137f4:	cmp	r1, sl
   137f8:	movcc	r2, #63	; 0x3f
   137fc:	strbcc	r2, [r6, r1]
   13800:	b	13268 <__mempcpy_chk@plt+0x222c>
   13804:	mov	r5, #63	; 0x3f
   13808:	mov	r4, #0
   1380c:	b	13268 <__mempcpy_chk@plt+0x222c>
   13810:	add	r1, r2, r7
   13814:	ldr	lr, [sp, #28]
   13818:	mov	r3, #0
   1381c:	str	r1, [sp, #44]	; 0x2c
   13820:	add	r1, r7, #1
   13824:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13828:	tst	r0, #1
   1382c:	bne	13900 <__mempcpy_chk@plt+0x28c4>
   13830:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13834:	tst	r2, #1
   13838:	bne	13bf4 <__mempcpy_chk@plt+0x2bb8>
   1383c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13840:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13844:	cmp	r7, #2
   13848:	movwne	r3, #1
   1384c:	orr	r3, r3, r2
   13850:	tst	r3, #1
   13854:	bne	13890 <__mempcpy_chk@plt+0x2854>
   13858:	cmp	r8, sl
   1385c:	add	r3, r8, #1
   13860:	movcc	r2, #39	; 0x27
   13864:	strbcc	r2, [r6, r8]
   13868:	cmp	r3, sl
   1386c:	movcc	r2, #36	; 0x24
   13870:	strbcc	r2, [r6, r3]
   13874:	add	r3, r8, #2
   13878:	add	r8, r8, #3
   1387c:	cmp	r3, sl
   13880:	movcc	r2, #39	; 0x27
   13884:	strbcc	r2, [r6, r3]
   13888:	mov	r2, #1
   1388c:	str	r2, [fp, #-56]	; 0xffffffc8
   13890:	cmp	r8, sl
   13894:	movcc	r3, #92	; 0x5c
   13898:	strbcc	r3, [r6, r8]
   1389c:	add	r3, r8, #1
   138a0:	cmp	r3, sl
   138a4:	andcc	r7, r5, #192	; 0xc0
   138a8:	movcc	r2, #48	; 0x30
   138ac:	orrcc	r7, r2, r7, lsr #6
   138b0:	strbcc	r7, [r6, r3]
   138b4:	add	r3, r8, #2
   138b8:	add	r8, r8, #3
   138bc:	cmp	r3, sl
   138c0:	lsrcc	r7, r5, #3
   138c4:	movcc	r2, #6
   138c8:	bficc	r7, r2, #3, #29
   138cc:	mov	r2, #6
   138d0:	strbcc	r7, [r6, r3]
   138d4:	bfi	r5, r2, #3, #29
   138d8:	mov	r3, #1
   138dc:	b	13924 <__mempcpy_chk@plt+0x28e8>
   138e0:	cmp	r8, sl
   138e4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   138e8:	strbcc	r5, [r6, r8]
   138ec:	add	r8, r8, #1
   138f0:	ldrb	r5, [ip, r1]
   138f4:	add	r1, r1, #1
   138f8:	tst	r0, #1
   138fc:	beq	13830 <__mempcpy_chk@plt+0x27f4>
   13900:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13904:	tst	r2, #1
   13908:	beq	1391c <__mempcpy_chk@plt+0x28e0>
   1390c:	cmp	r8, sl
   13910:	movcc	r7, #92	; 0x5c
   13914:	strbcc	r7, [r6, r8]
   13918:	add	r8, r8, #1
   1391c:	mov	r2, #0
   13920:	str	r2, [fp, #-52]	; 0xffffffcc
   13924:	ldr	r2, [sp, #44]	; 0x2c
   13928:	and	r9, r3, #1
   1392c:	cmp	r2, r1
   13930:	bls	13a30 <__mempcpy_chk@plt+0x29f4>
   13934:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13938:	cmp	r9, #0
   1393c:	movwne	r9, #1
   13940:	mvn	r7, r2
   13944:	orr	r7, r7, r9
   13948:	tst	r7, #1
   1394c:	bne	138e0 <__mempcpy_chk@plt+0x28a4>
   13950:	cmp	r8, sl
   13954:	movcc	r7, #39	; 0x27
   13958:	strbcc	r7, [r6, r8]
   1395c:	add	r7, r8, #1
   13960:	add	r8, r8, #2
   13964:	cmp	r7, sl
   13968:	movcc	r2, #39	; 0x27
   1396c:	strbcc	r2, [r6, r7]
   13970:	mov	r2, #0
   13974:	str	r2, [fp, #-56]	; 0xffffffc8
   13978:	b	138e0 <__mempcpy_chk@plt+0x28a4>
   1397c:	cmp	r8, sl
   13980:	mov	r2, #1
   13984:	movcc	r0, #39	; 0x27
   13988:	strbcc	r0, [r6, r8]
   1398c:	add	r0, r8, #1
   13990:	cmp	r0, sl
   13994:	movcc	r1, #36	; 0x24
   13998:	strbcc	r1, [r6, r0]
   1399c:	add	r0, r8, #2
   139a0:	cmp	r0, sl
   139a4:	movcc	r1, #39	; 0x27
   139a8:	strbcc	r1, [r6, r0]
   139ac:	add	r0, r8, #3
   139b0:	cmp	r0, sl
   139b4:	add	r8, r0, #1
   139b8:	str	r2, [fp, #-56]	; 0xffffffc8
   139bc:	movcc	r1, #92	; 0x5c
   139c0:	strbcc	r1, [r6, r0]
   139c4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   139c8:	cmp	r1, #2
   139cc:	beq	13a20 <__mempcpy_chk@plt+0x29e4>
   139d0:	add	r1, r7, #1
   139d4:	mov	r4, #0
   139d8:	mov	r9, #1
   139dc:	mov	r5, #48	; 0x30
   139e0:	cmp	r1, lr
   139e4:	bcs	13268 <__mempcpy_chk@plt+0x222c>
   139e8:	ldrb	r1, [ip, r1]
   139ec:	sub	r1, r1, #48	; 0x30
   139f0:	uxtb	r1, r1
   139f4:	cmp	r1, #9
   139f8:	bhi	13268 <__mempcpy_chk@plt+0x222c>
   139fc:	cmp	r8, sl
   13a00:	movcc	r1, #48	; 0x30
   13a04:	strbcc	r1, [r6, r8]
   13a08:	add	r1, r0, #2
   13a0c:	add	r8, r0, #3
   13a10:	cmp	r1, sl
   13a14:	movcc	r2, #48	; 0x30
   13a18:	strbcc	r2, [r6, r1]
   13a1c:	b	13268 <__mempcpy_chk@plt+0x222c>
   13a20:	mov	r0, #48	; 0x30
   13a24:	mov	r9, #1
   13a28:	mov	r4, #0
   13a2c:	b	13500 <__mempcpy_chk@plt+0x24c4>
   13a30:	cmp	r9, #0
   13a34:	sub	r7, r1, #1
   13a38:	mov	r0, r5
   13a3c:	movwne	r9, #1
   13a40:	cmp	r9, #0
   13a44:	bne	13a84 <__mempcpy_chk@plt+0x2a48>
   13a48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13a4c:	tst	r1, #1
   13a50:	beq	13a84 <__mempcpy_chk@plt+0x2a48>
   13a54:	cmp	r8, sl
   13a58:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13a5c:	movcc	r1, #39	; 0x27
   13a60:	strbcc	r1, [r6, r8]
   13a64:	add	r1, r8, #1
   13a68:	add	r8, r8, #2
   13a6c:	cmp	r1, sl
   13a70:	movcc	r2, #39	; 0x27
   13a74:	strbcc	r2, [r6, r1]
   13a78:	mov	r1, #0
   13a7c:	str	r1, [fp, #-56]	; 0xffffffc8
   13a80:	b	1358c <__mempcpy_chk@plt+0x2550>
   13a84:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13a88:	b	1358c <__mempcpy_chk@plt+0x2550>
   13a8c:	mov	r4, #0
   13a90:	b	13acc <__mempcpy_chk@plt+0x2a90>
   13a94:	mov	r4, #0
   13a98:	cmp	lr, r6
   13a9c:	bls	13acc <__mempcpy_chk@plt+0x2a90>
   13aa0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13aa4:	ldr	r6, [sp, #44]	; 0x2c
   13aa8:	ldr	r0, [sp, #24]
   13aac:	ldrb	r0, [r0, r6]
   13ab0:	cmp	r0, #0
   13ab4:	beq	13ad4 <__mempcpy_chk@plt+0x2a98>
   13ab8:	add	r6, r6, #1
   13abc:	add	r0, r7, r6
   13ac0:	cmp	r0, lr
   13ac4:	bcc	13aa8 <__mempcpy_chk@plt+0x2a6c>
   13ac8:	b	13ad4 <__mempcpy_chk@plt+0x2a98>
   13acc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ad0:	ldr	r6, [sp, #44]	; 0x2c
   13ad4:	mov	r1, r6
   13ad8:	ldr	r6, [sp, #80]	; 0x50
   13adc:	b	13434 <__mempcpy_chk@plt+0x23f8>
   13ae0:	mov	lr, r7
   13ae4:	b	13aec <__mempcpy_chk@plt+0x2ab0>
   13ae8:	mvn	lr, #0
   13aec:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13af0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13af4:	eor	r0, r7, #2
   13af8:	orr	r0, r0, r8
   13afc:	clz	r0, r0
   13b00:	lsr	r0, r0, #5
   13b04:	tst	r1, r0
   13b08:	bne	13b94 <__mempcpy_chk@plt+0x2b58>
   13b0c:	mov	r0, r1
   13b10:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13b14:	cmp	r7, #2
   13b18:	movwne	r1, #1
   13b1c:	orr	r0, r0, r1
   13b20:	tst	r0, #1
   13b24:	ldreq	r0, [sp, #60]	; 0x3c
   13b28:	eoreq	r0, r0, #1
   13b2c:	tsteq	r0, #1
   13b30:	bne	13c40 <__mempcpy_chk@plt+0x2c04>
   13b34:	mov	r9, lr
   13b38:	tst	r5, #1
   13b3c:	bne	13bfc <__mempcpy_chk@plt+0x2bc0>
   13b40:	ldr	r6, [sp, #56]	; 0x38
   13b44:	mov	r4, #0
   13b48:	cmp	r6, #0
   13b4c:	beq	13c38 <__mempcpy_chk@plt+0x2bfc>
   13b50:	ldr	r0, [sp, #84]	; 0x54
   13b54:	mov	r1, #0
   13b58:	cmp	sl, #0
   13b5c:	mov	r5, #0
   13b60:	str	r1, [fp, #-72]	; 0xffffffb8
   13b64:	beq	12d34 <__mempcpy_chk@plt+0x1cf8>
   13b68:	b	13c40 <__mempcpy_chk@plt+0x2c04>
   13b6c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13b70:	ldr	r2, [sp, #84]	; 0x54
   13b74:	b	13b9c <__mempcpy_chk@plt+0x2b60>
   13b78:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b7c:	mov	r2, #1
   13b80:	mov	lr, r4
   13b84:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13b88:	b	13b9c <__mempcpy_chk@plt+0x2b60>
   13b8c:	ldr	r6, [sp, #80]	; 0x50
   13b90:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b94:	ldr	r2, [sp, #84]	; 0x54
   13b98:	mov	r7, #2
   13b9c:	mov	r0, #0
   13ba0:	ldr	r1, [fp, #12]
   13ba4:	tst	r2, #1
   13ba8:	mov	r2, r7
   13bac:	mov	r3, lr
   13bb0:	str	r0, [sp, #8]
   13bb4:	ldr	r0, [sp, #72]	; 0x48
   13bb8:	movwne	r2, #4
   13bbc:	cmp	r7, #2
   13bc0:	movne	r2, r7
   13bc4:	str	r2, [sp]
   13bc8:	mov	r2, ip
   13bcc:	bic	r1, r1, #2
   13bd0:	str	r0, [sp, #12]
   13bd4:	ldr	r0, [sp, #76]	; 0x4c
   13bd8:	str	r1, [sp, #4]
   13bdc:	mov	r1, sl
   13be0:	str	r0, [sp, #16]
   13be4:	mov	r0, r6
   13be8:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   13bec:	mov	r8, r0
   13bf0:	b	13c98 <__mempcpy_chk@plt+0x2c5c>
   13bf4:	ldr	r2, [sp, #84]	; 0x54
   13bf8:	b	13b9c <__mempcpy_chk@plt+0x2b60>
   13bfc:	mov	r0, #5
   13c00:	ldr	r1, [sp, #56]	; 0x38
   13c04:	ldr	r2, [fp, #-84]	; 0xffffffac
   13c08:	mov	r3, r9
   13c0c:	str	r0, [sp]
   13c10:	ldr	r0, [fp, #12]
   13c14:	str	r0, [sp, #4]
   13c18:	ldr	r0, [fp, #16]
   13c1c:	str	r0, [sp, #8]
   13c20:	ldr	r0, [sp, #72]	; 0x48
   13c24:	str	r0, [sp, #12]
   13c28:	ldr	r0, [sp, #76]	; 0x4c
   13c2c:	str	r0, [sp, #16]
   13c30:	ldr	r0, [sp, #80]	; 0x50
   13c34:	b	13be8 <__mempcpy_chk@plt+0x2bac>
   13c38:	mov	r0, #0
   13c3c:	str	r0, [fp, #-72]	; 0xffffffb8
   13c40:	ldr	r1, [sp, #92]	; 0x5c
   13c44:	cmp	r1, #0
   13c48:	beq	13c88 <__mempcpy_chk@plt+0x2c4c>
   13c4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13c50:	ldr	r2, [sp, #80]	; 0x50
   13c54:	tst	r0, #1
   13c58:	bne	13c8c <__mempcpy_chk@plt+0x2c50>
   13c5c:	ldrb	r0, [r1]
   13c60:	cmp	r0, #0
   13c64:	beq	13c8c <__mempcpy_chk@plt+0x2c50>
   13c68:	add	r1, r1, #1
   13c6c:	cmp	r8, sl
   13c70:	strbcc	r0, [r2, r8]
   13c74:	add	r8, r8, #1
   13c78:	ldrb	r0, [r1], #1
   13c7c:	cmp	r0, #0
   13c80:	bne	13c6c <__mempcpy_chk@plt+0x2c30>
   13c84:	b	13c8c <__mempcpy_chk@plt+0x2c50>
   13c88:	ldr	r2, [sp, #80]	; 0x50
   13c8c:	cmp	r8, sl
   13c90:	movcc	r0, #0
   13c94:	strbcc	r0, [r2, r8]
   13c98:	mov	r0, r8
   13c9c:	sub	sp, fp, #28
   13ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ca4:	mov	r2, #1
   13ca8:	b	13b84 <__mempcpy_chk@plt+0x2b48>
   13cac:	ldr	r2, [sp, #84]	; 0x54
   13cb0:	mov	r7, #5
   13cb4:	b	13b9c <__mempcpy_chk@plt+0x2b60>
   13cb8:	bl	11030 <abort@plt>
   13cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cc0:	add	fp, sp, #28
   13cc4:	sub	sp, sp, #28
   13cc8:	movw	r5, #29024	; 0x7160
   13ccc:	cmp	r2, #0
   13cd0:	mov	r4, r1
   13cd4:	mov	r7, r0
   13cd8:	str	r0, [sp, #20]
   13cdc:	movt	r5, #2
   13ce0:	movne	r5, r2
   13ce4:	bl	10f64 <__errno_location@plt>
   13ce8:	mov	sl, r0
   13cec:	ldm	r5, {r0, r1}
   13cf0:	ldr	r2, [r5, #40]	; 0x28
   13cf4:	ldr	r3, [r5, #44]	; 0x2c
   13cf8:	add	r9, r5, #8
   13cfc:	ldr	r6, [sl]
   13d00:	orr	r8, r1, #1
   13d04:	mov	r1, #0
   13d08:	str	r6, [sp, #24]
   13d0c:	stm	sp, {r0, r8, r9}
   13d10:	str	r2, [sp, #12]
   13d14:	str	r3, [sp, #16]
   13d18:	mov	r0, #0
   13d1c:	mov	r2, r7
   13d20:	mov	r3, r4
   13d24:	mov	r6, r4
   13d28:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   13d2c:	add	r7, r0, #1
   13d30:	mov	r0, r7
   13d34:	bl	152c8 <__mempcpy_chk@plt+0x428c>
   13d38:	mov	r4, r0
   13d3c:	ldr	r0, [r5]
   13d40:	ldr	r2, [r5, #44]	; 0x2c
   13d44:	ldr	r1, [r5, #40]	; 0x28
   13d48:	mov	r3, r6
   13d4c:	stm	sp, {r0, r8, r9}
   13d50:	str	r2, [sp, #16]
   13d54:	str	r1, [sp, #12]
   13d58:	mov	r0, r4
   13d5c:	mov	r1, r7
   13d60:	ldr	r2, [sp, #20]
   13d64:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   13d68:	ldr	r0, [sp, #24]
   13d6c:	str	r0, [sl]
   13d70:	mov	r0, r4
   13d74:	sub	sp, fp, #28
   13d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d80:	add	fp, sp, #28
   13d84:	sub	sp, sp, #36	; 0x24
   13d88:	movw	r8, #29024	; 0x7160
   13d8c:	cmp	r3, #0
   13d90:	mov	r4, r2
   13d94:	str	r2, [sp, #24]
   13d98:	mov	r5, r1
   13d9c:	mov	r6, r0
   13da0:	str	r0, [sp, #20]
   13da4:	movt	r8, #2
   13da8:	movne	r8, r3
   13dac:	bl	10f64 <__errno_location@plt>
   13db0:	str	r0, [sp, #28]
   13db4:	cmp	r4, #0
   13db8:	add	sl, r8, #8
   13dbc:	ldm	r8, {r3, r9}
   13dc0:	ldr	r7, [r0]
   13dc4:	ldr	r1, [r8, #40]	; 0x28
   13dc8:	ldr	r2, [r8, #44]	; 0x2c
   13dcc:	mov	r0, #0
   13dd0:	orreq	r9, r9, #1
   13dd4:	str	r7, [sp, #32]
   13dd8:	mov	r7, r5
   13ddc:	stm	sp, {r3, r9, sl}
   13de0:	str	r1, [sp, #12]
   13de4:	str	r2, [sp, #16]
   13de8:	mov	r1, #0
   13dec:	mov	r2, r6
   13df0:	mov	r3, r5
   13df4:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   13df8:	add	r4, r0, #1
   13dfc:	mov	r5, r0
   13e00:	mov	r0, r4
   13e04:	bl	152c8 <__mempcpy_chk@plt+0x428c>
   13e08:	mov	r6, r0
   13e0c:	ldr	r0, [r8]
   13e10:	ldr	r2, [r8, #44]	; 0x2c
   13e14:	ldr	r1, [r8, #40]	; 0x28
   13e18:	mov	r3, r7
   13e1c:	stm	sp, {r0, r9, sl}
   13e20:	str	r2, [sp, #16]
   13e24:	str	r1, [sp, #12]
   13e28:	mov	r0, r6
   13e2c:	mov	r1, r4
   13e30:	ldr	r2, [sp, #20]
   13e34:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   13e38:	ldr	r0, [sp, #24]
   13e3c:	ldr	r1, [sp, #32]
   13e40:	ldr	r2, [sp, #28]
   13e44:	cmp	r0, #0
   13e48:	str	r1, [r2]
   13e4c:	strne	r5, [r0]
   13e50:	mov	r0, r6
   13e54:	sub	sp, fp, #28
   13e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e60:	add	fp, sp, #24
   13e64:	movw	r5, #28924	; 0x70fc
   13e68:	movw	r8, #28920	; 0x70f8
   13e6c:	movt	r5, #2
   13e70:	movt	r8, #2
   13e74:	ldr	r0, [r5]
   13e78:	ldr	r4, [r8]
   13e7c:	cmp	r0, #2
   13e80:	blt	13eac <__mempcpy_chk@plt+0x2e70>
   13e84:	add	r7, r4, #12
   13e88:	mov	r6, #0
   13e8c:	ldr	r0, [r7, r6, lsl #3]
   13e90:	bl	12a50 <__mempcpy_chk@plt+0x1a14>
   13e94:	ldr	r1, [r5]
   13e98:	add	r2, r6, #2
   13e9c:	add	r0, r6, #1
   13ea0:	mov	r6, r0
   13ea4:	cmp	r2, r1
   13ea8:	blt	13e8c <__mempcpy_chk@plt+0x2e50>
   13eac:	ldr	r0, [r4, #4]
   13eb0:	movw	r7, #29072	; 0x7190
   13eb4:	movt	r7, #2
   13eb8:	cmp	r0, r7
   13ebc:	beq	13ed4 <__mempcpy_chk@plt+0x2e98>
   13ec0:	bl	12a50 <__mempcpy_chk@plt+0x1a14>
   13ec4:	movw	r0, #28928	; 0x7100
   13ec8:	mov	r6, #256	; 0x100
   13ecc:	movt	r0, #2
   13ed0:	strd	r6, [r0]
   13ed4:	movw	r6, #28928	; 0x7100
   13ed8:	movt	r6, #2
   13edc:	cmp	r4, r6
   13ee0:	beq	13ef0 <__mempcpy_chk@plt+0x2eb4>
   13ee4:	mov	r0, r4
   13ee8:	bl	12a50 <__mempcpy_chk@plt+0x1a14>
   13eec:	str	r6, [r8]
   13ef0:	mov	r0, #1
   13ef4:	str	r0, [r5]
   13ef8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13efc:	movw	r3, #29024	; 0x7160
   13f00:	mvn	r2, #0
   13f04:	movt	r3, #2
   13f08:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   13f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f10:	add	fp, sp, #28
   13f14:	sub	sp, sp, #44	; 0x2c
   13f18:	mov	r7, r3
   13f1c:	str	r2, [sp, #36]	; 0x24
   13f20:	str	r1, [sp, #32]
   13f24:	mov	r5, r0
   13f28:	bl	10f64 <__errno_location@plt>
   13f2c:	cmp	r5, #0
   13f30:	blt	1409c <__mempcpy_chk@plt+0x3060>
   13f34:	cmn	r5, #-2147483647	; 0x80000001
   13f38:	beq	1409c <__mempcpy_chk@plt+0x3060>
   13f3c:	movw	r8, #28924	; 0x70fc
   13f40:	movw	r4, #28920	; 0x70f8
   13f44:	str	r0, [sp, #28]
   13f48:	ldr	r0, [r0]
   13f4c:	movt	r8, #2
   13f50:	movt	r4, #2
   13f54:	ldr	r1, [r8]
   13f58:	ldr	r6, [r4]
   13f5c:	str	r0, [sp, #24]
   13f60:	cmp	r1, r5
   13f64:	ble	13f70 <__mempcpy_chk@plt+0x2f34>
   13f68:	mov	sl, r6
   13f6c:	b	13fd8 <__mempcpy_chk@plt+0x2f9c>
   13f70:	movw	r9, #28928	; 0x7100
   13f74:	mov	r0, #8
   13f78:	add	r2, r5, #1
   13f7c:	str	r1, [fp, #-32]	; 0xffffffe0
   13f80:	mvn	r3, #-2147483648	; 0x80000000
   13f84:	movt	r9, #2
   13f88:	str	r0, [sp]
   13f8c:	sub	r2, r2, r1
   13f90:	sub	r1, fp, #32
   13f94:	subs	r0, r6, r9
   13f98:	movne	r0, r6
   13f9c:	bl	154c8 <__mempcpy_chk@plt+0x448c>
   13fa0:	cmp	r6, r9
   13fa4:	mov	sl, r0
   13fa8:	str	r0, [r4]
   13fac:	ldrdeq	r0, [r9]
   13fb0:	stmeq	sl, {r0, r1}
   13fb4:	ldr	r1, [r8]
   13fb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fbc:	add	r0, sl, r1, lsl #3
   13fc0:	sub	r1, r2, r1
   13fc4:	lsl	r2, r1, #3
   13fc8:	mov	r1, #0
   13fcc:	bl	10f7c <memset@plt>
   13fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fd4:	str	r0, [r8]
   13fd8:	mov	r9, sl
   13fdc:	ldr	r6, [r9, r5, lsl #3]!
   13fe0:	ldr	r4, [r9, #4]!
   13fe4:	ldm	r7, {r0, r1}
   13fe8:	ldr	r2, [r7, #40]	; 0x28
   13fec:	ldr	r3, [r7, #44]	; 0x2c
   13ff0:	orr	r8, r1, #1
   13ff4:	add	r1, r7, #8
   13ff8:	stm	sp, {r0, r8}
   13ffc:	add	r0, sp, #8
   14000:	str	r1, [sp, #20]
   14004:	stm	r0, {r1, r2, r3}
   14008:	mov	r0, r4
   1400c:	mov	r1, r6
   14010:	ldr	r2, [sp, #32]
   14014:	ldr	r3, [sp, #36]	; 0x24
   14018:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   1401c:	cmp	r6, r0
   14020:	bhi	14084 <__mempcpy_chk@plt+0x3048>
   14024:	add	r6, r0, #1
   14028:	movw	r0, #29072	; 0x7190
   1402c:	movt	r0, #2
   14030:	str	r6, [sl, r5, lsl #3]
   14034:	cmp	r4, r0
   14038:	beq	14044 <__mempcpy_chk@plt+0x3008>
   1403c:	mov	r0, r4
   14040:	bl	12a50 <__mempcpy_chk@plt+0x1a14>
   14044:	mov	r0, r6
   14048:	bl	152c8 <__mempcpy_chk@plt+0x428c>
   1404c:	str	r0, [r9]
   14050:	mov	r4, r0
   14054:	add	r3, sp, #8
   14058:	ldr	r0, [r7]
   1405c:	ldr	r1, [r7, #40]	; 0x28
   14060:	ldr	r2, [r7, #44]	; 0x2c
   14064:	stm	sp, {r0, r8}
   14068:	ldr	r0, [sp, #20]
   1406c:	stm	r3, {r0, r1, r2}
   14070:	mov	r0, r4
   14074:	mov	r1, r6
   14078:	ldr	r2, [sp, #32]
   1407c:	ldr	r3, [sp, #36]	; 0x24
   14080:	bl	12cb4 <__mempcpy_chk@plt+0x1c78>
   14084:	ldr	r0, [sp, #28]
   14088:	ldr	r1, [sp, #24]
   1408c:	str	r1, [r0]
   14090:	mov	r0, r4
   14094:	sub	sp, fp, #28
   14098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1409c:	bl	11030 <abort@plt>
   140a0:	movw	r3, #29024	; 0x7160
   140a4:	movt	r3, #2
   140a8:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   140ac:	movw	r3, #29024	; 0x7160
   140b0:	mov	r1, r0
   140b4:	mov	r0, #0
   140b8:	mvn	r2, #0
   140bc:	movt	r3, #2
   140c0:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   140c4:	movw	r3, #29024	; 0x7160
   140c8:	mov	r2, r1
   140cc:	mov	r1, r0
   140d0:	mov	r0, #0
   140d4:	movt	r3, #2
   140d8:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   140dc:	push	{fp, lr}
   140e0:	mov	fp, sp
   140e4:	sub	sp, sp, #48	; 0x30
   140e8:	vmov.i32	q8, #0	; 0x00000000
   140ec:	mov	ip, #32
   140f0:	mov	r3, sp
   140f4:	mov	lr, r2
   140f8:	cmp	r1, #10
   140fc:	add	r2, r3, #16
   14100:	vst1.64	{d16-d17}, [r3], ip
   14104:	vst1.64	{d16-d17}, [r3]
   14108:	vst1.64	{d16-d17}, [r2]
   1410c:	beq	1412c <__mempcpy_chk@plt+0x30f0>
   14110:	str	r1, [sp]
   14114:	mov	r3, sp
   14118:	mov	r1, lr
   1411c:	mvn	r2, #0
   14120:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   14124:	mov	sp, fp
   14128:	pop	{fp, pc}
   1412c:	bl	11030 <abort@plt>
   14130:	push	{r4, sl, fp, lr}
   14134:	add	fp, sp, #8
   14138:	sub	sp, sp, #48	; 0x30
   1413c:	mov	ip, r3
   14140:	mov	r3, sp
   14144:	vmov.i32	q8, #0	; 0x00000000
   14148:	mov	lr, #32
   1414c:	cmp	r1, #10
   14150:	add	r4, r3, #16
   14154:	vst1.64	{d16-d17}, [r3], lr
   14158:	vst1.64	{d16-d17}, [r3]
   1415c:	vst1.64	{d16-d17}, [r4]
   14160:	beq	14180 <__mempcpy_chk@plt+0x3144>
   14164:	str	r1, [sp]
   14168:	mov	r1, r2
   1416c:	mov	r3, sp
   14170:	mov	r2, ip
   14174:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   14178:	sub	sp, fp, #8
   1417c:	pop	{r4, sl, fp, pc}
   14180:	bl	11030 <abort@plt>
   14184:	push	{fp, lr}
   14188:	mov	fp, sp
   1418c:	sub	sp, sp, #48	; 0x30
   14190:	mov	r3, sp
   14194:	vmov.i32	q8, #0	; 0x00000000
   14198:	mov	ip, #32
   1419c:	cmp	r0, #10
   141a0:	add	r2, r3, #16
   141a4:	vst1.64	{d16-d17}, [r3], ip
   141a8:	vst1.64	{d16-d17}, [r3]
   141ac:	vst1.64	{d16-d17}, [r2]
   141b0:	beq	141d0 <__mempcpy_chk@plt+0x3194>
   141b4:	str	r0, [sp]
   141b8:	mov	r3, sp
   141bc:	mov	r0, #0
   141c0:	mvn	r2, #0
   141c4:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   141c8:	mov	sp, fp
   141cc:	pop	{fp, pc}
   141d0:	bl	11030 <abort@plt>
   141d4:	push	{fp, lr}
   141d8:	mov	fp, sp
   141dc:	sub	sp, sp, #48	; 0x30
   141e0:	mov	r3, sp
   141e4:	vmov.i32	q8, #0	; 0x00000000
   141e8:	mov	ip, #32
   141ec:	cmp	r0, #10
   141f0:	add	lr, r3, #16
   141f4:	vst1.64	{d16-d17}, [r3], ip
   141f8:	vst1.64	{d16-d17}, [r3]
   141fc:	vst1.64	{d16-d17}, [lr]
   14200:	beq	1421c <__mempcpy_chk@plt+0x31e0>
   14204:	str	r0, [sp]
   14208:	mov	r3, sp
   1420c:	mov	r0, #0
   14210:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   14214:	mov	sp, fp
   14218:	pop	{fp, pc}
   1421c:	bl	11030 <abort@plt>
   14220:	push	{r4, sl, fp, lr}
   14224:	add	fp, sp, #8
   14228:	sub	sp, sp, #48	; 0x30
   1422c:	mov	lr, r0
   14230:	movw	r0, #29024	; 0x7160
   14234:	mov	r3, #32
   14238:	mov	ip, r1
   1423c:	mov	r4, #1
   14240:	movt	r0, #2
   14244:	add	r1, r0, #16
   14248:	vld1.64	{d16-d17}, [r0], r3
   1424c:	mov	r3, sp
   14250:	vld1.64	{d18-d19}, [r1]
   14254:	add	r1, r3, #16
   14258:	vld1.64	{d20-d21}, [r0]
   1425c:	add	r0, r3, #32
   14260:	vst1.64	{d18-d19}, [r1]
   14264:	mov	r1, r3
   14268:	vst1.64	{d20-d21}, [r0]
   1426c:	mov	r0, #28
   14270:	and	r0, r0, r2, lsr #3
   14274:	and	r2, r2, #31
   14278:	vst1.64	{d16-d17}, [r1], r0
   1427c:	ldr	r0, [r1, #8]
   14280:	bic	r4, r4, r0, lsr r2
   14284:	eor	r0, r0, r4, lsl r2
   14288:	mov	r2, ip
   1428c:	str	r0, [r1, #8]
   14290:	mov	r0, #0
   14294:	mov	r1, lr
   14298:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   1429c:	sub	sp, fp, #8
   142a0:	pop	{r4, sl, fp, pc}
   142a4:	push	{fp, lr}
   142a8:	mov	fp, sp
   142ac:	sub	sp, sp, #48	; 0x30
   142b0:	mov	ip, r0
   142b4:	movw	r0, #29024	; 0x7160
   142b8:	mov	r3, #32
   142bc:	movt	r0, #2
   142c0:	add	r2, r0, #16
   142c4:	vld1.64	{d16-d17}, [r0], r3
   142c8:	mov	r3, sp
   142cc:	vld1.64	{d18-d19}, [r2]
   142d0:	add	r2, r3, #16
   142d4:	vld1.64	{d20-d21}, [r0]
   142d8:	add	r0, r3, #32
   142dc:	vst1.64	{d18-d19}, [r2]
   142e0:	mov	r2, r3
   142e4:	vst1.64	{d20-d21}, [r0]
   142e8:	mov	r0, #28
   142ec:	and	r0, r0, r1, lsr #3
   142f0:	and	r1, r1, #31
   142f4:	vst1.64	{d16-d17}, [r2], r0
   142f8:	mov	r0, #1
   142fc:	ldr	lr, [r2, #8]
   14300:	bic	r0, r0, lr, lsr r1
   14304:	eor	r0, lr, r0, lsl r1
   14308:	mov	r1, ip
   1430c:	str	r0, [r2, #8]
   14310:	mov	r0, #0
   14314:	mvn	r2, #0
   14318:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   1431c:	mov	sp, fp
   14320:	pop	{fp, pc}
   14324:	push	{fp, lr}
   14328:	mov	fp, sp
   1432c:	sub	sp, sp, #48	; 0x30
   14330:	movw	r2, #29024	; 0x7160
   14334:	mov	r3, #32
   14338:	mov	r1, r0
   1433c:	movt	r2, #2
   14340:	add	r0, r2, #16
   14344:	vld1.64	{d16-d17}, [r2], r3
   14348:	mov	r3, sp
   1434c:	vld1.64	{d18-d19}, [r0]
   14350:	add	r0, r3, #16
   14354:	vld1.64	{d20-d21}, [r2]
   14358:	mov	r2, r3
   1435c:	vst1.64	{d18-d19}, [r0]
   14360:	add	r0, r3, #32
   14364:	vst1.64	{d20-d21}, [r0]
   14368:	mov	r0, #12
   1436c:	vst1.64	{d16-d17}, [r2], r0
   14370:	ldr	r0, [r2]
   14374:	orr	r0, r0, #67108864	; 0x4000000
   14378:	str	r0, [r2]
   1437c:	mov	r0, #0
   14380:	mvn	r2, #0
   14384:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   14388:	mov	sp, fp
   1438c:	pop	{fp, pc}
   14390:	push	{fp, lr}
   14394:	mov	fp, sp
   14398:	sub	sp, sp, #48	; 0x30
   1439c:	mov	ip, r1
   143a0:	mov	r1, r0
   143a4:	movw	r0, #29024	; 0x7160
   143a8:	mov	r3, #32
   143ac:	movt	r0, #2
   143b0:	add	r2, r0, #16
   143b4:	vld1.64	{d16-d17}, [r0], r3
   143b8:	mov	r3, sp
   143bc:	vld1.64	{d18-d19}, [r2]
   143c0:	add	r2, r3, #16
   143c4:	vld1.64	{d20-d21}, [r0]
   143c8:	add	r0, r3, #32
   143cc:	vst1.64	{d18-d19}, [r2]
   143d0:	mov	r2, r3
   143d4:	vst1.64	{d20-d21}, [r0]
   143d8:	mov	r0, #12
   143dc:	vst1.64	{d16-d17}, [r2], r0
   143e0:	ldr	r0, [r2]
   143e4:	orr	r0, r0, #67108864	; 0x4000000
   143e8:	str	r0, [r2]
   143ec:	mov	r0, #0
   143f0:	mov	r2, ip
   143f4:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   143f8:	mov	sp, fp
   143fc:	pop	{fp, pc}
   14400:	push	{r4, sl, fp, lr}
   14404:	add	fp, sp, #8
   14408:	sub	sp, sp, #96	; 0x60
   1440c:	mov	ip, r2
   14410:	mov	r2, sp
   14414:	vmov.i32	q8, #0	; 0x00000000
   14418:	mov	r4, #28
   1441c:	cmp	r1, #10
   14420:	mov	r3, r2
   14424:	add	lr, r2, #16
   14428:	vst1.64	{d16-d17}, [r3], r4
   1442c:	vst1.64	{d16-d17}, [lr]
   14430:	vst1.32	{d16-d17}, [r3]
   14434:	beq	14484 <__mempcpy_chk@plt+0x3448>
   14438:	vld1.64	{d16-d17}, [r2], r4
   1443c:	vld1.64	{d18-d19}, [lr]
   14440:	add	r3, sp, #48	; 0x30
   14444:	add	r4, r3, #4
   14448:	vld1.32	{d20-d21}, [r2]
   1444c:	add	r2, r3, #20
   14450:	vst1.32	{d16-d17}, [r4]
   14454:	vst1.32	{d18-d19}, [r2]
   14458:	add	r2, r3, #32
   1445c:	vst1.32	{d20-d21}, [r2]
   14460:	str	r1, [sp, #48]	; 0x30
   14464:	mvn	r2, #0
   14468:	ldr	r1, [sp, #60]	; 0x3c
   1446c:	orr	r1, r1, #67108864	; 0x4000000
   14470:	str	r1, [sp, #60]	; 0x3c
   14474:	mov	r1, ip
   14478:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   1447c:	sub	sp, fp, #8
   14480:	pop	{r4, sl, fp, pc}
   14484:	bl	11030 <abort@plt>
   14488:	push	{r4, r5, fp, lr}
   1448c:	add	fp, sp, #8
   14490:	sub	sp, sp, #48	; 0x30
   14494:	mov	ip, r3
   14498:	movw	r3, #29024	; 0x7160
   1449c:	mov	lr, #32
   144a0:	cmp	r1, #0
   144a4:	mov	r5, sp
   144a8:	movt	r3, #2
   144ac:	cmpne	r2, #0
   144b0:	add	r4, r3, #16
   144b4:	vld1.64	{d16-d17}, [r3], lr
   144b8:	vld1.64	{d18-d19}, [r4]
   144bc:	add	r4, r5, #16
   144c0:	vld1.64	{d20-d21}, [r3]
   144c4:	vst1.64	{d16-d17}, [r5], lr
   144c8:	mov	r3, #10
   144cc:	vst1.64	{d18-d19}, [r4]
   144d0:	vst1.64	{d20-d21}, [r5]
   144d4:	str	r3, [sp]
   144d8:	bne	144e0 <__mempcpy_chk@plt+0x34a4>
   144dc:	bl	11030 <abort@plt>
   144e0:	str	r2, [sp, #44]	; 0x2c
   144e4:	str	r1, [sp, #40]	; 0x28
   144e8:	mov	r3, sp
   144ec:	mov	r1, ip
   144f0:	mvn	r2, #0
   144f4:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   144f8:	sub	sp, fp, #8
   144fc:	pop	{r4, r5, fp, pc}
   14500:	push	{r4, r5, fp, lr}
   14504:	add	fp, sp, #8
   14508:	sub	sp, sp, #48	; 0x30
   1450c:	mov	lr, r3
   14510:	movw	r3, #29024	; 0x7160
   14514:	mov	ip, #32
   14518:	cmp	r1, #0
   1451c:	mov	r5, sp
   14520:	movt	r3, #2
   14524:	cmpne	r2, #0
   14528:	add	r4, r3, #16
   1452c:	vld1.64	{d16-d17}, [r3], ip
   14530:	vld1.64	{d18-d19}, [r4]
   14534:	add	r4, r5, #16
   14538:	vld1.64	{d20-d21}, [r3]
   1453c:	vst1.64	{d16-d17}, [r5], ip
   14540:	mov	r3, #10
   14544:	vst1.64	{d18-d19}, [r4]
   14548:	vst1.64	{d20-d21}, [r5]
   1454c:	str	r3, [sp]
   14550:	bne	14558 <__mempcpy_chk@plt+0x351c>
   14554:	bl	11030 <abort@plt>
   14558:	ldr	ip, [fp, #8]
   1455c:	str	r2, [sp, #44]	; 0x2c
   14560:	str	r1, [sp, #40]	; 0x28
   14564:	mov	r3, sp
   14568:	mov	r1, lr
   1456c:	mov	r2, ip
   14570:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   14574:	sub	sp, fp, #8
   14578:	pop	{r4, r5, fp, pc}
   1457c:	push	{r4, sl, fp, lr}
   14580:	add	fp, sp, #8
   14584:	sub	sp, sp, #48	; 0x30
   14588:	mov	ip, r2
   1458c:	movw	r2, #29024	; 0x7160
   14590:	mov	lr, #32
   14594:	cmp	r0, #0
   14598:	mov	r4, sp
   1459c:	movt	r2, #2
   145a0:	cmpne	r1, #0
   145a4:	add	r3, r2, #16
   145a8:	vld1.64	{d16-d17}, [r2], lr
   145ac:	vld1.64	{d18-d19}, [r3]
   145b0:	add	r3, r4, #16
   145b4:	vld1.64	{d20-d21}, [r2]
   145b8:	vst1.64	{d16-d17}, [r4], lr
   145bc:	mov	r2, #10
   145c0:	vst1.64	{d18-d19}, [r3]
   145c4:	vst1.64	{d20-d21}, [r4]
   145c8:	str	r2, [sp]
   145cc:	bne	145d4 <__mempcpy_chk@plt+0x3598>
   145d0:	bl	11030 <abort@plt>
   145d4:	str	r1, [sp, #44]	; 0x2c
   145d8:	str	r0, [sp, #40]	; 0x28
   145dc:	mov	r3, sp
   145e0:	mov	r0, #0
   145e4:	mov	r1, ip
   145e8:	mvn	r2, #0
   145ec:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   145f0:	sub	sp, fp, #8
   145f4:	pop	{r4, sl, fp, pc}
   145f8:	push	{r4, r5, fp, lr}
   145fc:	add	fp, sp, #8
   14600:	sub	sp, sp, #48	; 0x30
   14604:	mov	lr, r2
   14608:	movw	r2, #29024	; 0x7160
   1460c:	mov	ip, r3
   14610:	mov	r3, #32
   14614:	cmp	r0, #0
   14618:	mov	r5, sp
   1461c:	movt	r2, #2
   14620:	cmpne	r1, #0
   14624:	add	r4, r2, #16
   14628:	vld1.64	{d16-d17}, [r2], r3
   1462c:	vld1.64	{d18-d19}, [r4]
   14630:	add	r4, r5, #16
   14634:	vld1.64	{d20-d21}, [r2]
   14638:	vst1.64	{d16-d17}, [r5], r3
   1463c:	mov	r2, #10
   14640:	vst1.64	{d18-d19}, [r4]
   14644:	vst1.64	{d20-d21}, [r5]
   14648:	str	r2, [sp]
   1464c:	bne	14654 <__mempcpy_chk@plt+0x3618>
   14650:	bl	11030 <abort@plt>
   14654:	str	r1, [sp, #44]	; 0x2c
   14658:	str	r0, [sp, #40]	; 0x28
   1465c:	mov	r3, sp
   14660:	mov	r0, #0
   14664:	mov	r1, lr
   14668:	mov	r2, ip
   1466c:	bl	13f0c <__mempcpy_chk@plt+0x2ed0>
   14670:	sub	sp, fp, #8
   14674:	pop	{r4, r5, fp, pc}
   14678:	movw	r3, #28936	; 0x7108
   1467c:	movt	r3, #2
   14680:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   14684:	movw	r3, #28936	; 0x7108
   14688:	mov	r2, r1
   1468c:	mov	r1, r0
   14690:	mov	r0, #0
   14694:	movt	r3, #2
   14698:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   1469c:	movw	r3, #28936	; 0x7108
   146a0:	mvn	r2, #0
   146a4:	movt	r3, #2
   146a8:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   146ac:	movw	r3, #28936	; 0x7108
   146b0:	mov	r1, r0
   146b4:	mov	r0, #0
   146b8:	mvn	r2, #0
   146bc:	movt	r3, #2
   146c0:	b	13f0c <__mempcpy_chk@plt+0x2ed0>
   146c4:	push	{r4, r5, fp, lr}
   146c8:	add	fp, sp, #8
   146cc:	mov	r5, r0
   146d0:	mov	r4, r1
   146d4:	mov	r0, #0
   146d8:	mov	r2, #5
   146dc:	mov	r1, r5
   146e0:	bl	10e74 <dcgettext@plt>
   146e4:	cmp	r0, r5
   146e8:	popne	{r4, r5, fp, pc}
   146ec:	bl	15e28 <__mempcpy_chk@plt+0x4dec>
   146f0:	ldrb	r1, [r0]
   146f4:	and	r1, r1, #223	; 0xdf
   146f8:	cmp	r1, #71	; 0x47
   146fc:	beq	14764 <__mempcpy_chk@plt+0x3728>
   14700:	cmp	r1, #85	; 0x55
   14704:	bne	14788 <__mempcpy_chk@plt+0x374c>
   14708:	ldrb	r1, [r0, #1]
   1470c:	and	r1, r1, #223	; 0xdf
   14710:	cmp	r1, #84	; 0x54
   14714:	bne	14788 <__mempcpy_chk@plt+0x374c>
   14718:	ldrb	r1, [r0, #2]
   1471c:	and	r1, r1, #223	; 0xdf
   14720:	cmp	r1, #70	; 0x46
   14724:	ldrbeq	r1, [r0, #3]
   14728:	cmpeq	r1, #45	; 0x2d
   1472c:	bne	14788 <__mempcpy_chk@plt+0x374c>
   14730:	ldrb	r1, [r0, #4]
   14734:	cmp	r1, #56	; 0x38
   14738:	ldrbeq	r0, [r0, #5]
   1473c:	cmpeq	r0, #0
   14740:	bne	14788 <__mempcpy_chk@plt+0x374c>
   14744:	ldrb	r1, [r5]
   14748:	movw	r2, #27234	; 0x6a62
   1474c:	movw	r0, #27238	; 0x6a66
   14750:	movt	r2, #1
   14754:	movt	r0, #1
   14758:	cmp	r1, #96	; 0x60
   1475c:	moveq	r0, r2
   14760:	pop	{r4, r5, fp, pc}
   14764:	ldrb	r1, [r0, #1]
   14768:	and	r1, r1, #223	; 0xdf
   1476c:	cmp	r1, #66	; 0x42
   14770:	bne	14788 <__mempcpy_chk@plt+0x374c>
   14774:	ldrb	r1, [r0, #2]
   14778:	cmp	r1, #49	; 0x31
   1477c:	ldrbeq	r1, [r0, #3]
   14780:	cmpeq	r1, #56	; 0x38
   14784:	beq	147a4 <__mempcpy_chk@plt+0x3768>
   14788:	movw	r1, #27228	; 0x6a5c
   1478c:	movw	r0, #27232	; 0x6a60
   14790:	cmp	r4, #9
   14794:	movt	r1, #1
   14798:	movt	r0, #1
   1479c:	moveq	r0, r1
   147a0:	pop	{r4, r5, fp, pc}
   147a4:	ldrb	r1, [r0, #4]
   147a8:	cmp	r1, #48	; 0x30
   147ac:	ldrbeq	r1, [r0, #5]
   147b0:	cmpeq	r1, #51	; 0x33
   147b4:	bne	14788 <__mempcpy_chk@plt+0x374c>
   147b8:	ldrb	r1, [r0, #6]
   147bc:	cmp	r1, #48	; 0x30
   147c0:	ldrbeq	r0, [r0, #7]
   147c4:	cmpeq	r0, #0
   147c8:	bne	14788 <__mempcpy_chk@plt+0x374c>
   147cc:	ldrb	r1, [r5]
   147d0:	movw	r2, #27242	; 0x6a6a
   147d4:	movw	r0, #27246	; 0x6a6e
   147d8:	movt	r2, #1
   147dc:	movt	r0, #1
   147e0:	b	14758 <__mempcpy_chk@plt+0x371c>
   147e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147e8:	add	fp, sp, #28
   147ec:	sub	sp, sp, #52	; 0x34
   147f0:	movw	r5, #29328	; 0x7290
   147f4:	mov	r7, r0
   147f8:	mov	r4, r3
   147fc:	mov	sl, r2
   14800:	mov	r9, r1
   14804:	movt	r5, #2
   14808:	ldrb	r0, [r5]
   1480c:	cmp	r0, #0
   14810:	bne	14888 <__mempcpy_chk@plt+0x384c>
   14814:	bl	15e28 <__mempcpy_chk@plt+0x4dec>
   14818:	movw	r1, #27336	; 0x6ac8
   1481c:	mov	r6, r0
   14820:	movt	r1, #1
   14824:	bl	10dfc <strcmp@plt>
   14828:	clz	r1, r0
   1482c:	movw	r2, #29332	; 0x7294
   14830:	cmp	r0, #0
   14834:	lsr	r1, r1, #5
   14838:	movt	r2, #2
   1483c:	str	r1, [r2]
   14840:	beq	14880 <__mempcpy_chk@plt+0x3844>
   14844:	movw	r1, #27336	; 0x6ac8
   14848:	mov	r0, r6
   1484c:	movt	r1, #1
   14850:	bl	10f04 <iconv_open@plt>
   14854:	movw	r6, #29336	; 0x7298
   14858:	cmn	r0, #1
   1485c:	movt	r6, #2
   14860:	str	r0, [r6]
   14864:	bne	14880 <__mempcpy_chk@plt+0x3844>
   14868:	movw	r0, #27342	; 0x6ace
   1486c:	movw	r1, #27336	; 0x6ac8
   14870:	movt	r0, #1
   14874:	movt	r1, #1
   14878:	bl	10f04 <iconv_open@plt>
   1487c:	str	r0, [r6]
   14880:	mov	r0, #1
   14884:	strb	r0, [r5]
   14888:	movw	r5, #29332	; 0x7294
   1488c:	movw	r6, #29336	; 0x7298
   14890:	movt	r5, #2
   14894:	movt	r6, #2
   14898:	ldr	r0, [r5]
   1489c:	cmp	r0, #0
   148a0:	ldreq	r1, [r6]
   148a4:	cmneq	r1, #1
   148a8:	beq	148d8 <__mempcpy_chk@plt+0x389c>
   148ac:	cmp	r7, #127	; 0x7f
   148b0:	bhi	148e4 <__mempcpy_chk@plt+0x38a8>
   148b4:	strb	r7, [fp, #-34]	; 0xffffffde
   148b8:	mov	r1, #1
   148bc:	cmp	r0, #0
   148c0:	beq	1490c <__mempcpy_chk@plt+0x38d0>
   148c4:	sub	r0, fp, #34	; 0x22
   148c8:	mov	r2, r4
   148cc:	blx	r9
   148d0:	sub	sp, fp, #28
   148d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148d8:	movw	r1, #27348	; 0x6ad4
   148dc:	movt	r1, #1
   148e0:	b	149bc <__mempcpy_chk@plt+0x3980>
   148e4:	sub	r0, fp, #34	; 0x22
   148e8:	mov	r1, r7
   148ec:	mov	r2, #6
   148f0:	bl	14b04 <__mempcpy_chk@plt+0x3ac8>
   148f4:	cmp	r0, #0
   148f8:	blt	149b4 <__mempcpy_chk@plt+0x3978>
   148fc:	mov	r1, r0
   14900:	ldr	r0, [r5]
   14904:	cmp	r0, #0
   14908:	bne	148c4 <__mempcpy_chk@plt+0x3888>
   1490c:	sub	r0, fp, #34	; 0x22
   14910:	str	r1, [sp, #12]
   14914:	add	r8, sp, #21
   14918:	add	r5, sp, #4
   1491c:	add	r1, sp, #16
   14920:	add	r2, sp, #12
   14924:	add	r3, sp, #8
   14928:	str	r0, [sp, #16]
   1492c:	mov	r0, #25
   14930:	str	r8, [sp, #8]
   14934:	str	r5, [sp]
   14938:	str	r0, [sp, #4]
   1493c:	ldr	r0, [r6]
   14940:	bl	10df0 <iconv@plt>
   14944:	cmn	r0, #1
   14948:	beq	149a8 <__mempcpy_chk@plt+0x396c>
   1494c:	ldr	r1, [sp, #12]
   14950:	cmp	r1, #0
   14954:	bne	149a8 <__mempcpy_chk@plt+0x396c>
   14958:	cmp	r0, #0
   1495c:	beq	14978 <__mempcpy_chk@plt+0x393c>
   14960:	ldr	r0, [sp, #8]
   14964:	sub	r0, r0, r8
   14968:	cmp	r0, #1
   1496c:	ldrbeq	r0, [sp, #21]
   14970:	cmpeq	r0, #63	; 0x3f
   14974:	beq	149a8 <__mempcpy_chk@plt+0x396c>
   14978:	ldr	r0, [r6]
   1497c:	add	r3, sp, #8
   14980:	mov	r1, #0
   14984:	mov	r2, #0
   14988:	str	r5, [sp]
   1498c:	bl	10df0 <iconv@plt>
   14990:	cmn	r0, #1
   14994:	beq	149a8 <__mempcpy_chk@plt+0x396c>
   14998:	ldr	r0, [sp, #8]
   1499c:	sub	r1, r0, r8
   149a0:	mov	r0, r8
   149a4:	b	148c8 <__mempcpy_chk@plt+0x388c>
   149a8:	mov	r0, r7
   149ac:	mov	r1, #0
   149b0:	b	149c0 <__mempcpy_chk@plt+0x3984>
   149b4:	movw	r1, #27374	; 0x6aee
   149b8:	movt	r1, #1
   149bc:	mov	r0, r7
   149c0:	mov	r2, r4
   149c4:	blx	sl
   149c8:	sub	sp, fp, #28
   149cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149d0:	push	{fp, lr}
   149d4:	mov	fp, sp
   149d8:	mov	r3, r2
   149dc:	mov	r2, r1
   149e0:	mov	r1, #1
   149e4:	bl	10ea4 <fwrite@plt>
   149e8:	mov	r0, #0
   149ec:	pop	{fp, pc}
   149f0:	push	{fp, lr}
   149f4:	mov	fp, sp
   149f8:	movw	r3, #18996	; 0x4a34
   149fc:	mov	ip, r0
   14a00:	movw	r0, #19136	; 0x4ac0
   14a04:	cmp	r2, #0
   14a08:	mov	lr, r1
   14a0c:	movw	r1, #18896	; 0x49d0
   14a10:	movt	r0, #1
   14a14:	movt	r3, #1
   14a18:	movt	r1, #1
   14a1c:	moveq	r3, r0
   14a20:	mov	r0, lr
   14a24:	mov	r2, r3
   14a28:	mov	r3, ip
   14a2c:	pop	{fp, lr}
   14a30:	b	147e4 <__mempcpy_chk@plt+0x37a8>
   14a34:	push	{r4, r5, r6, sl, fp, lr}
   14a38:	add	fp, sp, #16
   14a3c:	sub	sp, sp, #8
   14a40:	mov	r4, r0
   14a44:	cmp	r1, #0
   14a48:	beq	14a8c <__mempcpy_chk@plt+0x3a50>
   14a4c:	mov	r5, r1
   14a50:	movw	r1, #27442	; 0x6b32
   14a54:	mov	r0, #0
   14a58:	mov	r2, #5
   14a5c:	movt	r1, #1
   14a60:	bl	10e74 <dcgettext@plt>
   14a64:	mov	r6, r0
   14a68:	mov	r0, #0
   14a6c:	mov	r1, r5
   14a70:	mov	r2, #5
   14a74:	bl	10e74 <dcgettext@plt>
   14a78:	str	r0, [sp]
   14a7c:	mov	r0, #1
   14a80:	mov	r1, #0
   14a84:	mov	r2, r6
   14a88:	b	14aac <__mempcpy_chk@plt+0x3a70>
   14a8c:	movw	r1, #27397	; 0x6b05
   14a90:	mov	r0, #0
   14a94:	mov	r2, #5
   14a98:	movt	r1, #1
   14a9c:	bl	10e74 <dcgettext@plt>
   14aa0:	mov	r2, r0
   14aa4:	mov	r0, #1
   14aa8:	mov	r1, #0
   14aac:	mov	r3, r4
   14ab0:	bl	10ee0 <error@plt>
   14ab4:	mvn	r0, #0
   14ab8:	sub	sp, fp, #16
   14abc:	pop	{r4, r5, r6, sl, fp, pc}
   14ac0:	push	{fp, lr}
   14ac4:	mov	fp, sp
   14ac8:	mov	r3, r0
   14acc:	mov	r0, #0
   14ad0:	mov	r1, r2
   14ad4:	cmp	r0, r3, lsr #16
   14ad8:	bne	14ae8 <__mempcpy_chk@plt+0x3aac>
   14adc:	movw	r2, #27491	; 0x6b63
   14ae0:	movt	r2, #1
   14ae4:	b	14af0 <__mempcpy_chk@plt+0x3ab4>
   14ae8:	movw	r2, #27498	; 0x6b6a
   14aec:	movt	r2, #1
   14af0:	mov	r0, r1
   14af4:	mov	r1, #1
   14af8:	bl	10fa0 <__fprintf_chk@plt>
   14afc:	mvn	r0, #0
   14b00:	pop	{fp, pc}
   14b04:	push	{fp, lr}
   14b08:	mov	fp, sp
   14b0c:	mvn	r3, #1
   14b10:	cmp	r1, #128	; 0x80
   14b14:	bcc	14bc0 <__mempcpy_chk@plt+0x3b84>
   14b18:	mov	ip, #2
   14b1c:	cmp	r1, #2048	; 0x800
   14b20:	bcs	14b9c <__mempcpy_chk@plt+0x3b60>
   14b24:	cmp	ip, r2
   14b28:	mvn	r3, #1
   14b2c:	bgt	14bc0 <__mempcpy_chk@plt+0x3b84>
   14b30:	cmp	ip, #2
   14b34:	beq	14b78 <__mempcpy_chk@plt+0x3b3c>
   14b38:	cmp	ip, #3
   14b3c:	beq	14b60 <__mempcpy_chk@plt+0x3b24>
   14b40:	cmp	ip, #4
   14b44:	bne	14b90 <__mempcpy_chk@plt+0x3b54>
   14b48:	mov	r2, #2
   14b4c:	mov	r3, r1
   14b50:	bfi	r3, r2, #6, #26
   14b54:	mov	r2, #65536	; 0x10000
   14b58:	orr	r1, r2, r1, lsr #6
   14b5c:	strb	r3, [r0, #3]
   14b60:	mov	r2, #2
   14b64:	mov	r3, r1
   14b68:	bfi	r3, r2, #6, #26
   14b6c:	mov	r2, #2048	; 0x800
   14b70:	orr	r1, r2, r1, lsr #6
   14b74:	strb	r3, [r0, #2]
   14b78:	mov	r2, #192	; 0xc0
   14b7c:	orr	r2, r2, r1, lsr #6
   14b80:	strb	r2, [r0]
   14b84:	mov	r2, #2
   14b88:	bfi	r1, r2, #6, #26
   14b8c:	strb	r1, [r0, #1]
   14b90:	mov	r3, ip
   14b94:	mov	r0, r3
   14b98:	pop	{fp, pc}
   14b9c:	mov	r3, #0
   14ba0:	cmp	r3, r1, lsr #16
   14ba4:	bne	14bc8 <__mempcpy_chk@plt+0x3b8c>
   14ba8:	mov	lr, r1
   14bac:	mov	ip, #3
   14bb0:	mvn	r3, #0
   14bb4:	bfc	lr, #0, #11
   14bb8:	cmp	lr, #55296	; 0xd800
   14bbc:	bne	14b24 <__mempcpy_chk@plt+0x3ae8>
   14bc0:	mov	r0, r3
   14bc4:	pop	{fp, pc}
   14bc8:	lsr	lr, r1, #16
   14bcc:	mvn	r3, #0
   14bd0:	mov	ip, #4
   14bd4:	cmp	lr, #16
   14bd8:	bls	14b24 <__mempcpy_chk@plt+0x3ae8>
   14bdc:	b	14bc0 <__mempcpy_chk@plt+0x3b84>
   14be0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14be4:	add	fp, sp, #24
   14be8:	sub	sp, sp, #32
   14bec:	ldr	r6, [fp, #12]
   14bf0:	ldr	r7, [fp, #8]
   14bf4:	mov	r4, r2
   14bf8:	mov	r8, r0
   14bfc:	cmp	r1, #0
   14c00:	beq	14c28 <__mempcpy_chk@plt+0x3bec>
   14c04:	movw	r2, #27505	; 0x6b71
   14c08:	mov	r5, r1
   14c0c:	str	r3, [sp, #4]
   14c10:	str	r4, [sp]
   14c14:	mov	r0, r8
   14c18:	mov	r1, #1
   14c1c:	movt	r2, #1
   14c20:	mov	r3, r5
   14c24:	b	14c40 <__mempcpy_chk@plt+0x3c04>
   14c28:	movw	r2, #27517	; 0x6b7d
   14c2c:	str	r3, [sp]
   14c30:	mov	r0, r8
   14c34:	mov	r1, #1
   14c38:	mov	r3, r4
   14c3c:	movt	r2, #1
   14c40:	bl	10fa0 <__fprintf_chk@plt>
   14c44:	movw	r1, #27524	; 0x6b84
   14c48:	mov	r0, #0
   14c4c:	mov	r2, #5
   14c50:	movt	r1, #1
   14c54:	bl	10e74 <dcgettext@plt>
   14c58:	movw	r2, #28242	; 0x6e52
   14c5c:	mov	r3, r0
   14c60:	movw	r0, #2022	; 0x7e6
   14c64:	mov	r1, #1
   14c68:	str	r0, [sp]
   14c6c:	movt	r2, #1
   14c70:	mov	r0, r8
   14c74:	bl	10fa0 <__fprintf_chk@plt>
   14c78:	movw	r4, #24875	; 0x612b
   14c7c:	mov	r1, r8
   14c80:	movt	r4, #1
   14c84:	mov	r0, r4
   14c88:	bl	10dd8 <fputs_unlocked@plt>
   14c8c:	movw	r1, #27528	; 0x6b88
   14c90:	mov	r0, #0
   14c94:	mov	r2, #5
   14c98:	movt	r1, #1
   14c9c:	bl	10e74 <dcgettext@plt>
   14ca0:	movw	r3, #27699	; 0x6c33
   14ca4:	mov	r2, r0
   14ca8:	mov	r0, r8
   14cac:	mov	r1, #1
   14cb0:	movt	r3, #1
   14cb4:	bl	10fa0 <__fprintf_chk@plt>
   14cb8:	mov	r0, r4
   14cbc:	mov	r1, r8
   14cc0:	bl	10dd8 <fputs_unlocked@plt>
   14cc4:	cmp	r6, #9
   14cc8:	bhi	14d04 <__mempcpy_chk@plt+0x3cc8>
   14ccc:	add	r0, pc, #0
   14cd0:	ldr	pc, [r0, r6, lsl #2]
   14cd4:	strdeq	r4, [r1], -ip
   14cd8:	andeq	r4, r1, r0, lsl sp
   14cdc:	andeq	r4, r1, r0, asr #26
   14ce0:	andeq	r4, r1, r8, ror #26
   14ce4:	muleq	r1, r0, sp
   14ce8:			; <UNDEFINED> instruction: 0x00014db8
   14cec:	andeq	r4, r1, r0, ror #27
   14cf0:	andeq	r4, r1, r8, lsl lr
   14cf4:			; <UNDEFINED> instruction: 0x00014eb8
   14cf8:	andeq	r4, r1, r0, ror #28
   14cfc:	sub	sp, fp, #24
   14d00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d04:	movw	r1, #28052	; 0x6d94
   14d08:	movt	r1, #1
   14d0c:	b	14e68 <__mempcpy_chk@plt+0x3e2c>
   14d10:	movw	r1, #27733	; 0x6c55
   14d14:	mov	r0, #0
   14d18:	mov	r2, #5
   14d1c:	movt	r1, #1
   14d20:	bl	10e74 <dcgettext@plt>
   14d24:	ldr	r3, [r7]
   14d28:	mov	r2, r0
   14d2c:	mov	r0, r8
   14d30:	mov	r1, #1
   14d34:	sub	sp, fp, #24
   14d38:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d3c:	b	10fa0 <__fprintf_chk@plt>
   14d40:	movw	r1, #27749	; 0x6c65
   14d44:	mov	r0, #0
   14d48:	mov	r2, #5
   14d4c:	movt	r1, #1
   14d50:	bl	10e74 <dcgettext@plt>
   14d54:	mov	r2, r0
   14d58:	ldr	r3, [r7]
   14d5c:	ldr	r0, [r7, #4]
   14d60:	str	r0, [sp]
   14d64:	b	14e54 <__mempcpy_chk@plt+0x3e18>
   14d68:	movw	r1, #27772	; 0x6c7c
   14d6c:	mov	r0, #0
   14d70:	mov	r2, #5
   14d74:	movt	r1, #1
   14d78:	bl	10e74 <dcgettext@plt>
   14d7c:	ldr	r3, [r7]
   14d80:	mov	r2, r0
   14d84:	ldmib	r7, {r0, r1}
   14d88:	stm	sp, {r0, r1}
   14d8c:	b	14e54 <__mempcpy_chk@plt+0x3e18>
   14d90:	movw	r1, #27800	; 0x6c98
   14d94:	mov	r0, #0
   14d98:	mov	r2, #5
   14d9c:	movt	r1, #1
   14da0:	bl	10e74 <dcgettext@plt>
   14da4:	ldr	r3, [r7]
   14da8:	mov	r2, r0
   14dac:	ldmib	r7, {r0, r1, r7}
   14db0:	stm	sp, {r0, r1, r7}
   14db4:	b	14e54 <__mempcpy_chk@plt+0x3e18>
   14db8:	movw	r1, #27832	; 0x6cb8
   14dbc:	mov	r0, #0
   14dc0:	mov	r2, #5
   14dc4:	movt	r1, #1
   14dc8:	bl	10e74 <dcgettext@plt>
   14dcc:	ldr	r3, [r7]
   14dd0:	mov	r2, r0
   14dd4:	ldmib	r7, {r0, r1, r6, r7}
   14dd8:	stm	sp, {r0, r1, r6, r7}
   14ddc:	b	14e54 <__mempcpy_chk@plt+0x3e18>
   14de0:	movw	r1, #27868	; 0x6cdc
   14de4:	mov	r0, #0
   14de8:	mov	r2, #5
   14dec:	movt	r1, #1
   14df0:	bl	10e74 <dcgettext@plt>
   14df4:	ldr	r3, [r7]
   14df8:	mov	r2, r0
   14dfc:	ldmib	r7, {r0, r1, r6}
   14e00:	ldr	r5, [r7, #16]
   14e04:	ldr	r7, [r7, #20]
   14e08:	stm	sp, {r0, r1, r6}
   14e0c:	str	r5, [sp, #12]
   14e10:	str	r7, [sp, #16]
   14e14:	b	14e54 <__mempcpy_chk@plt+0x3e18>
   14e18:	movw	r1, #27908	; 0x6d04
   14e1c:	mov	r0, #0
   14e20:	mov	r2, #5
   14e24:	movt	r1, #1
   14e28:	bl	10e74 <dcgettext@plt>
   14e2c:	ldr	r3, [r7]
   14e30:	mov	r2, r0
   14e34:	ldmib	r7, {r0, r1, r6}
   14e38:	ldr	r5, [r7, #16]
   14e3c:	ldr	r4, [r7, #20]
   14e40:	ldr	r7, [r7, #24]
   14e44:	stm	sp, {r0, r1, r6}
   14e48:	str	r5, [sp, #12]
   14e4c:	str	r4, [sp, #16]
   14e50:	str	r7, [sp, #20]
   14e54:	mov	r0, r8
   14e58:	mov	r1, #1
   14e5c:	b	14f08 <__mempcpy_chk@plt+0x3ecc>
   14e60:	movw	r1, #28000	; 0x6d60
   14e64:	movt	r1, #1
   14e68:	mov	r0, #0
   14e6c:	mov	r2, #5
   14e70:	bl	10e74 <dcgettext@plt>
   14e74:	mov	ip, r0
   14e78:	ldr	r3, [r7]
   14e7c:	ldr	r0, [r7, #4]
   14e80:	ldr	r1, [r7, #8]
   14e84:	ldr	r6, [r7, #12]
   14e88:	ldr	r5, [r7, #16]
   14e8c:	ldr	r4, [r7, #20]
   14e90:	ldr	r2, [r7, #24]
   14e94:	ldr	lr, [r7, #28]
   14e98:	ldr	r7, [r7, #32]
   14e9c:	stm	sp, {r0, r1, r6}
   14ea0:	str	r5, [sp, #12]
   14ea4:	str	r4, [sp, #16]
   14ea8:	str	r2, [sp, #20]
   14eac:	str	lr, [sp, #24]
   14eb0:	str	r7, [sp, #28]
   14eb4:	b	14efc <__mempcpy_chk@plt+0x3ec0>
   14eb8:	movw	r1, #27952	; 0x6d30
   14ebc:	mov	r0, #0
   14ec0:	mov	r2, #5
   14ec4:	movt	r1, #1
   14ec8:	bl	10e74 <dcgettext@plt>
   14ecc:	mov	ip, r0
   14ed0:	ldr	r3, [r7]
   14ed4:	ldmib	r7, {r0, r1, r6}
   14ed8:	ldr	r5, [r7, #16]
   14edc:	ldr	r4, [r7, #20]
   14ee0:	ldr	r2, [r7, #24]
   14ee4:	ldr	r7, [r7, #28]
   14ee8:	stm	sp, {r0, r1, r6}
   14eec:	str	r5, [sp, #12]
   14ef0:	str	r4, [sp, #16]
   14ef4:	str	r2, [sp, #20]
   14ef8:	str	r7, [sp, #24]
   14efc:	mov	r0, r8
   14f00:	mov	r1, #1
   14f04:	mov	r2, ip
   14f08:	bl	10fa0 <__fprintf_chk@plt>
   14f0c:	sub	sp, fp, #24
   14f10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f14:	push	{r4, sl, fp, lr}
   14f18:	add	fp, sp, #8
   14f1c:	sub	sp, sp, #8
   14f20:	ldr	ip, [fp, #8]
   14f24:	mov	lr, #0
   14f28:	ldr	r4, [ip, lr, lsl #2]
   14f2c:	add	lr, lr, #1
   14f30:	cmp	r4, #0
   14f34:	bne	14f28 <__mempcpy_chk@plt+0x3eec>
   14f38:	sub	r4, lr, #1
   14f3c:	str	ip, [sp]
   14f40:	str	r4, [sp, #4]
   14f44:	bl	14be0 <__mempcpy_chk@plt+0x3ba4>
   14f48:	sub	sp, fp, #8
   14f4c:	pop	{r4, sl, fp, pc}
   14f50:	push	{fp, lr}
   14f54:	mov	fp, sp
   14f58:	sub	sp, sp, #48	; 0x30
   14f5c:	ldr	ip, [fp, #8]
   14f60:	ldr	lr, [ip]
   14f64:	cmp	lr, #0
   14f68:	str	lr, [sp, #8]
   14f6c:	beq	15008 <__mempcpy_chk@plt+0x3fcc>
   14f70:	ldr	lr, [ip, #4]
   14f74:	cmp	lr, #0
   14f78:	str	lr, [sp, #12]
   14f7c:	beq	15010 <__mempcpy_chk@plt+0x3fd4>
   14f80:	ldr	lr, [ip, #8]
   14f84:	cmp	lr, #0
   14f88:	str	lr, [sp, #16]
   14f8c:	beq	15018 <__mempcpy_chk@plt+0x3fdc>
   14f90:	ldr	lr, [ip, #12]
   14f94:	cmp	lr, #0
   14f98:	str	lr, [sp, #20]
   14f9c:	beq	15020 <__mempcpy_chk@plt+0x3fe4>
   14fa0:	ldr	lr, [ip, #16]
   14fa4:	cmp	lr, #0
   14fa8:	str	lr, [sp, #24]
   14fac:	beq	15028 <__mempcpy_chk@plt+0x3fec>
   14fb0:	ldr	lr, [ip, #20]
   14fb4:	cmp	lr, #0
   14fb8:	str	lr, [sp, #28]
   14fbc:	beq	15030 <__mempcpy_chk@plt+0x3ff4>
   14fc0:	ldr	lr, [ip, #24]
   14fc4:	cmp	lr, #0
   14fc8:	str	lr, [sp, #32]
   14fcc:	beq	15038 <__mempcpy_chk@plt+0x3ffc>
   14fd0:	ldr	lr, [ip, #28]
   14fd4:	cmp	lr, #0
   14fd8:	str	lr, [sp, #36]	; 0x24
   14fdc:	beq	15040 <__mempcpy_chk@plt+0x4004>
   14fe0:	ldr	lr, [ip, #32]
   14fe4:	cmp	lr, #0
   14fe8:	str	lr, [sp, #40]	; 0x28
   14fec:	beq	15048 <__mempcpy_chk@plt+0x400c>
   14ff0:	ldr	lr, [ip, #36]	; 0x24
   14ff4:	mov	ip, #10
   14ff8:	cmp	lr, #0
   14ffc:	str	lr, [sp, #44]	; 0x2c
   15000:	movweq	ip, #9
   15004:	b	1504c <__mempcpy_chk@plt+0x4010>
   15008:	mov	ip, #0
   1500c:	b	1504c <__mempcpy_chk@plt+0x4010>
   15010:	mov	ip, #1
   15014:	b	1504c <__mempcpy_chk@plt+0x4010>
   15018:	mov	ip, #2
   1501c:	b	1504c <__mempcpy_chk@plt+0x4010>
   15020:	mov	ip, #3
   15024:	b	1504c <__mempcpy_chk@plt+0x4010>
   15028:	mov	ip, #4
   1502c:	b	1504c <__mempcpy_chk@plt+0x4010>
   15030:	mov	ip, #5
   15034:	b	1504c <__mempcpy_chk@plt+0x4010>
   15038:	mov	ip, #6
   1503c:	b	1504c <__mempcpy_chk@plt+0x4010>
   15040:	mov	ip, #7
   15044:	b	1504c <__mempcpy_chk@plt+0x4010>
   15048:	mov	ip, #8
   1504c:	add	lr, sp, #8
   15050:	str	ip, [sp, #4]
   15054:	str	lr, [sp]
   15058:	bl	14be0 <__mempcpy_chk@plt+0x3ba4>
   1505c:	mov	sp, fp
   15060:	pop	{fp, pc}
   15064:	push	{fp, lr}
   15068:	mov	fp, sp
   1506c:	sub	sp, sp, #56	; 0x38
   15070:	add	ip, fp, #8
   15074:	str	ip, [sp, #12]
   15078:	ldr	lr, [fp, #8]
   1507c:	cmp	lr, #0
   15080:	str	lr, [sp, #16]
   15084:	beq	15120 <__mempcpy_chk@plt+0x40e4>
   15088:	ldr	lr, [ip, #4]
   1508c:	cmp	lr, #0
   15090:	str	lr, [sp, #20]
   15094:	beq	15128 <__mempcpy_chk@plt+0x40ec>
   15098:	ldr	lr, [ip, #8]
   1509c:	cmp	lr, #0
   150a0:	str	lr, [sp, #24]
   150a4:	beq	15130 <__mempcpy_chk@plt+0x40f4>
   150a8:	ldr	lr, [ip, #12]
   150ac:	cmp	lr, #0
   150b0:	str	lr, [sp, #28]
   150b4:	beq	15138 <__mempcpy_chk@plt+0x40fc>
   150b8:	ldr	lr, [ip, #16]
   150bc:	cmp	lr, #0
   150c0:	str	lr, [sp, #32]
   150c4:	beq	15140 <__mempcpy_chk@plt+0x4104>
   150c8:	ldr	lr, [ip, #20]
   150cc:	cmp	lr, #0
   150d0:	str	lr, [sp, #36]	; 0x24
   150d4:	beq	15148 <__mempcpy_chk@plt+0x410c>
   150d8:	ldr	lr, [ip, #24]
   150dc:	cmp	lr, #0
   150e0:	str	lr, [sp, #40]	; 0x28
   150e4:	beq	15150 <__mempcpy_chk@plt+0x4114>
   150e8:	ldr	lr, [ip, #28]
   150ec:	cmp	lr, #0
   150f0:	str	lr, [sp, #44]	; 0x2c
   150f4:	beq	15158 <__mempcpy_chk@plt+0x411c>
   150f8:	ldr	lr, [ip, #32]
   150fc:	cmp	lr, #0
   15100:	str	lr, [sp, #48]	; 0x30
   15104:	beq	15160 <__mempcpy_chk@plt+0x4124>
   15108:	ldr	lr, [ip, #36]	; 0x24
   1510c:	mov	ip, #10
   15110:	cmp	lr, #0
   15114:	str	lr, [sp, #52]	; 0x34
   15118:	movweq	ip, #9
   1511c:	b	15164 <__mempcpy_chk@plt+0x4128>
   15120:	mov	ip, #0
   15124:	b	15164 <__mempcpy_chk@plt+0x4128>
   15128:	mov	ip, #1
   1512c:	b	15164 <__mempcpy_chk@plt+0x4128>
   15130:	mov	ip, #2
   15134:	b	15164 <__mempcpy_chk@plt+0x4128>
   15138:	mov	ip, #3
   1513c:	b	15164 <__mempcpy_chk@plt+0x4128>
   15140:	mov	ip, #4
   15144:	b	15164 <__mempcpy_chk@plt+0x4128>
   15148:	mov	ip, #5
   1514c:	b	15164 <__mempcpy_chk@plt+0x4128>
   15150:	mov	ip, #6
   15154:	b	15164 <__mempcpy_chk@plt+0x4128>
   15158:	mov	ip, #7
   1515c:	b	15164 <__mempcpy_chk@plt+0x4128>
   15160:	mov	ip, #8
   15164:	add	lr, sp, #16
   15168:	str	ip, [sp, #4]
   1516c:	str	lr, [sp]
   15170:	bl	14be0 <__mempcpy_chk@plt+0x3ba4>
   15174:	mov	sp, fp
   15178:	pop	{fp, pc}
   1517c:	push	{fp, lr}
   15180:	mov	fp, sp
   15184:	movw	r0, #28996	; 0x7144
   15188:	movt	r0, #2
   1518c:	ldr	r1, [r0]
   15190:	movw	r0, #24875	; 0x612b
   15194:	movt	r0, #1
   15198:	bl	10dd8 <fputs_unlocked@plt>
   1519c:	movw	r1, #28112	; 0x6dd0
   151a0:	mov	r0, #0
   151a4:	mov	r2, #5
   151a8:	movt	r1, #1
   151ac:	bl	10e74 <dcgettext@plt>
   151b0:	movw	r2, #28132	; 0x6de4
   151b4:	mov	r1, r0
   151b8:	mov	r0, #1
   151bc:	movt	r2, #1
   151c0:	bl	10f88 <__printf_chk@plt>
   151c4:	movw	r1, #28154	; 0x6dfa
   151c8:	mov	r0, #0
   151cc:	mov	r2, #5
   151d0:	movt	r1, #1
   151d4:	bl	10e74 <dcgettext@plt>
   151d8:	movw	r2, #26257	; 0x6691
   151dc:	movw	r3, #26477	; 0x676d
   151e0:	mov	r1, r0
   151e4:	mov	r0, #1
   151e8:	movt	r2, #1
   151ec:	movt	r3, #1
   151f0:	bl	10f88 <__printf_chk@plt>
   151f4:	movw	r1, #28174	; 0x6e0e
   151f8:	mov	r0, #0
   151fc:	mov	r2, #5
   15200:	movt	r1, #1
   15204:	bl	10e74 <dcgettext@plt>
   15208:	movw	r2, #28213	; 0x6e35
   1520c:	mov	r1, r0
   15210:	mov	r0, #1
   15214:	movt	r2, #1
   15218:	pop	{fp, lr}
   1521c:	b	10f88 <__printf_chk@plt>
   15220:	push	{r4, r5, r6, sl, fp, lr}
   15224:	add	fp, sp, #16
   15228:	mov	r4, r2
   1522c:	mov	r5, r1
   15230:	mov	r6, r0
   15234:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   15238:	cmp	r0, #0
   1523c:	popne	{r4, r5, r6, sl, fp, pc}
   15240:	cmp	r6, #0
   15244:	beq	15258 <__mempcpy_chk@plt+0x421c>
   15248:	cmp	r5, #0
   1524c:	cmpne	r4, #0
   15250:	bne	15258 <__mempcpy_chk@plt+0x421c>
   15254:	pop	{r4, r5, r6, sl, fp, pc}
   15258:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   1525c:	push	{r4, r5, r6, sl, fp, lr}
   15260:	add	fp, sp, #16
   15264:	mov	r4, r2
   15268:	mov	r5, r1
   1526c:	mov	r6, r0
   15270:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   15274:	cmp	r0, #0
   15278:	popne	{r4, r5, r6, sl, fp, pc}
   1527c:	cmp	r6, #0
   15280:	beq	15294 <__mempcpy_chk@plt+0x4258>
   15284:	cmp	r5, #0
   15288:	cmpne	r4, #0
   1528c:	bne	15294 <__mempcpy_chk@plt+0x4258>
   15290:	pop	{r4, r5, r6, sl, fp, pc}
   15294:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   152a4:	cmp	r0, #0
   152a8:	popne	{fp, pc}
   152ac:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   152b0:	push	{fp, lr}
   152b4:	mov	fp, sp
   152b8:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   152bc:	cmp	r0, #0
   152c0:	popne	{fp, pc}
   152c4:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   152c8:	push	{fp, lr}
   152cc:	mov	fp, sp
   152d0:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   152d4:	cmp	r0, #0
   152d8:	popne	{fp, pc}
   152dc:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   152e0:	push	{r4, r5, fp, lr}
   152e4:	add	fp, sp, #8
   152e8:	mov	r4, r1
   152ec:	mov	r5, r0
   152f0:	bl	15b08 <__mempcpy_chk@plt+0x4acc>
   152f4:	cmp	r0, #0
   152f8:	popne	{r4, r5, fp, pc}
   152fc:	cmp	r5, #0
   15300:	beq	15310 <__mempcpy_chk@plt+0x42d4>
   15304:	cmp	r4, #0
   15308:	bne	15310 <__mempcpy_chk@plt+0x42d4>
   1530c:	pop	{r4, r5, fp, pc}
   15310:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15314:	push	{fp, lr}
   15318:	mov	fp, sp
   1531c:	cmp	r1, #0
   15320:	orreq	r1, r1, #1
   15324:	bl	15b08 <__mempcpy_chk@plt+0x4acc>
   15328:	cmp	r0, #0
   1532c:	popne	{fp, pc}
   15330:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15334:	push	{fp, lr}
   15338:	mov	fp, sp
   1533c:	clz	r3, r2
   15340:	lsr	ip, r3, #5
   15344:	clz	r3, r1
   15348:	lsr	r3, r3, #5
   1534c:	orrs	r3, r3, ip
   15350:	movwne	r1, #1
   15354:	movwne	r2, #1
   15358:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   1535c:	cmp	r0, #0
   15360:	popne	{fp, pc}
   15364:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15368:	push	{fp, lr}
   1536c:	mov	fp, sp
   15370:	mov	r2, r1
   15374:	mov	r1, r0
   15378:	mov	r0, #0
   1537c:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   15380:	cmp	r0, #0
   15384:	popne	{fp, pc}
   15388:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   1538c:	push	{fp, lr}
   15390:	mov	fp, sp
   15394:	mov	r2, r1
   15398:	mov	r1, r0
   1539c:	clz	r0, r2
   153a0:	clz	r3, r1
   153a4:	lsr	r0, r0, #5
   153a8:	lsr	r3, r3, #5
   153ac:	orrs	r0, r3, r0
   153b0:	movwne	r1, #1
   153b4:	movwne	r2, #1
   153b8:	mov	r0, #0
   153bc:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   153c0:	cmp	r0, #0
   153c4:	popne	{fp, pc}
   153c8:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   153cc:	push	{r4, r5, r6, sl, fp, lr}
   153d0:	add	fp, sp, #16
   153d4:	ldr	r5, [r1]
   153d8:	mov	r4, r1
   153dc:	mov	r6, r0
   153e0:	cmp	r0, #0
   153e4:	beq	153fc <__mempcpy_chk@plt+0x43c0>
   153e8:	mov	r0, #1
   153ec:	add	r0, r0, r5, lsr #1
   153f0:	adds	r5, r5, r0
   153f4:	bcc	15404 <__mempcpy_chk@plt+0x43c8>
   153f8:	b	15440 <__mempcpy_chk@plt+0x4404>
   153fc:	cmp	r5, #0
   15400:	movweq	r5, #64	; 0x40
   15404:	mov	r0, r6
   15408:	mov	r1, r5
   1540c:	mov	r2, #1
   15410:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   15414:	cmp	r5, #0
   15418:	mov	r1, r5
   1541c:	movwne	r1, #1
   15420:	cmp	r0, #0
   15424:	bne	15438 <__mempcpy_chk@plt+0x43fc>
   15428:	clz	r2, r6
   1542c:	lsr	r2, r2, #5
   15430:	orrs	r1, r2, r1
   15434:	bne	15440 <__mempcpy_chk@plt+0x4404>
   15438:	str	r5, [r4]
   1543c:	pop	{r4, r5, r6, sl, fp, pc}
   15440:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15444:	push	{r4, r5, r6, r7, fp, lr}
   15448:	add	fp, sp, #16
   1544c:	ldr	r5, [r1]
   15450:	mov	r6, r2
   15454:	mov	r4, r1
   15458:	mov	r7, r0
   1545c:	cmp	r0, #0
   15460:	beq	15478 <__mempcpy_chk@plt+0x443c>
   15464:	mov	r0, #1
   15468:	add	r0, r0, r5, lsr #1
   1546c:	adds	r5, r5, r0
   15470:	bcc	15490 <__mempcpy_chk@plt+0x4454>
   15474:	b	154c4 <__mempcpy_chk@plt+0x4488>
   15478:	cmp	r5, #0
   1547c:	bne	15490 <__mempcpy_chk@plt+0x4454>
   15480:	mov	r0, #64	; 0x40
   15484:	cmp	r6, #64	; 0x40
   15488:	udiv	r5, r0, r6
   1548c:	addhi	r5, r5, #1
   15490:	mov	r0, r7
   15494:	mov	r1, r5
   15498:	mov	r2, r6
   1549c:	bl	15ec0 <__mempcpy_chk@plt+0x4e84>
   154a0:	cmp	r0, #0
   154a4:	bne	154bc <__mempcpy_chk@plt+0x4480>
   154a8:	cmp	r7, #0
   154ac:	beq	154c4 <__mempcpy_chk@plt+0x4488>
   154b0:	cmp	r6, #0
   154b4:	cmpne	r5, #0
   154b8:	bne	154c4 <__mempcpy_chk@plt+0x4488>
   154bc:	str	r5, [r4]
   154c0:	pop	{r4, r5, r6, r7, fp, pc}
   154c4:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   154c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154cc:	add	fp, sp, #24
   154d0:	mov	r8, r1
   154d4:	ldr	r1, [r1]
   154d8:	mov	r5, r0
   154dc:	add	r0, r1, r1, asr #1
   154e0:	cmp	r0, r1
   154e4:	mvnvs	r0, #-2147483648	; 0x80000000
   154e8:	cmp	r0, r3
   154ec:	mov	r7, r0
   154f0:	movgt	r7, r3
   154f4:	cmn	r3, #1
   154f8:	movle	r7, r0
   154fc:	ldr	r0, [fp, #8]
   15500:	cmn	r0, #1
   15504:	ble	1552c <__mempcpy_chk@plt+0x44f0>
   15508:	cmp	r0, #0
   1550c:	beq	15580 <__mempcpy_chk@plt+0x4544>
   15510:	cmn	r7, #1
   15514:	ble	15554 <__mempcpy_chk@plt+0x4518>
   15518:	mvn	r4, #-2147483648	; 0x80000000
   1551c:	udiv	r6, r4, r0
   15520:	cmp	r6, r7
   15524:	bge	15580 <__mempcpy_chk@plt+0x4544>
   15528:	b	15590 <__mempcpy_chk@plt+0x4554>
   1552c:	cmn	r7, #1
   15530:	ble	15570 <__mempcpy_chk@plt+0x4534>
   15534:	cmn	r0, #1
   15538:	beq	15580 <__mempcpy_chk@plt+0x4544>
   1553c:	mov	r6, #-2147483648	; 0x80000000
   15540:	mvn	r4, #-2147483648	; 0x80000000
   15544:	sdiv	r6, r6, r0
   15548:	cmp	r6, r7
   1554c:	bge	15580 <__mempcpy_chk@plt+0x4544>
   15550:	b	15590 <__mempcpy_chk@plt+0x4554>
   15554:	beq	15580 <__mempcpy_chk@plt+0x4544>
   15558:	mov	r6, #-2147483648	; 0x80000000
   1555c:	mvn	r4, #-2147483648	; 0x80000000
   15560:	sdiv	r6, r6, r7
   15564:	cmp	r6, r0
   15568:	bge	15580 <__mempcpy_chk@plt+0x4544>
   1556c:	b	15590 <__mempcpy_chk@plt+0x4554>
   15570:	mvn	r4, #-2147483648	; 0x80000000
   15574:	sdiv	r6, r4, r0
   15578:	cmp	r7, r6
   1557c:	blt	15590 <__mempcpy_chk@plt+0x4554>
   15580:	mul	r6, r7, r0
   15584:	mov	r4, #64	; 0x40
   15588:	cmp	r6, #63	; 0x3f
   1558c:	bgt	15598 <__mempcpy_chk@plt+0x455c>
   15590:	sdiv	r7, r4, r0
   15594:	mul	r6, r7, r0
   15598:	cmp	r5, #0
   1559c:	moveq	r4, #0
   155a0:	streq	r4, [r8]
   155a4:	sub	r4, r7, r1
   155a8:	cmp	r4, r2
   155ac:	bge	15658 <__mempcpy_chk@plt+0x461c>
   155b0:	add	r7, r1, r2
   155b4:	mov	r6, #0
   155b8:	mov	r2, #0
   155bc:	cmp	r7, r3
   155c0:	movwgt	r6, #1
   155c4:	cmn	r3, #1
   155c8:	movwgt	r2, #1
   155cc:	cmp	r7, r1
   155d0:	bvs	1568c <__mempcpy_chk@plt+0x4650>
   155d4:	ands	r1, r2, r6
   155d8:	bne	1568c <__mempcpy_chk@plt+0x4650>
   155dc:	cmn	r0, #1
   155e0:	ble	15608 <__mempcpy_chk@plt+0x45cc>
   155e4:	cmp	r0, #0
   155e8:	beq	15654 <__mempcpy_chk@plt+0x4618>
   155ec:	cmn	r7, #1
   155f0:	ble	1562c <__mempcpy_chk@plt+0x45f0>
   155f4:	mvn	r1, #-2147483648	; 0x80000000
   155f8:	udiv	r1, r1, r0
   155fc:	cmp	r1, r7
   15600:	bge	15654 <__mempcpy_chk@plt+0x4618>
   15604:	b	1568c <__mempcpy_chk@plt+0x4650>
   15608:	cmn	r7, #1
   1560c:	ble	15644 <__mempcpy_chk@plt+0x4608>
   15610:	cmn	r0, #1
   15614:	beq	15654 <__mempcpy_chk@plt+0x4618>
   15618:	mov	r1, #-2147483648	; 0x80000000
   1561c:	sdiv	r1, r1, r0
   15620:	cmp	r1, r7
   15624:	bge	15654 <__mempcpy_chk@plt+0x4618>
   15628:	b	1568c <__mempcpy_chk@plt+0x4650>
   1562c:	beq	15654 <__mempcpy_chk@plt+0x4618>
   15630:	mov	r1, #-2147483648	; 0x80000000
   15634:	sdiv	r1, r1, r7
   15638:	cmp	r1, r0
   1563c:	bge	15654 <__mempcpy_chk@plt+0x4618>
   15640:	b	1568c <__mempcpy_chk@plt+0x4650>
   15644:	mvn	r1, #-2147483648	; 0x80000000
   15648:	sdiv	r1, r1, r0
   1564c:	cmp	r7, r1
   15650:	blt	1568c <__mempcpy_chk@plt+0x4650>
   15654:	mul	r6, r7, r0
   15658:	mov	r0, r5
   1565c:	mov	r1, r6
   15660:	bl	15b08 <__mempcpy_chk@plt+0x4acc>
   15664:	cmp	r6, #0
   15668:	movwne	r6, #1
   1566c:	cmp	r0, #0
   15670:	bne	15684 <__mempcpy_chk@plt+0x4648>
   15674:	clz	r1, r5
   15678:	lsr	r1, r1, #5
   1567c:	orrs	r1, r1, r6
   15680:	bne	1568c <__mempcpy_chk@plt+0x4650>
   15684:	str	r7, [r8]
   15688:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1568c:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15690:	push	{fp, lr}
   15694:	mov	fp, sp
   15698:	mov	r1, #1
   1569c:	bl	15a84 <__mempcpy_chk@plt+0x4a48>
   156a0:	cmp	r0, #0
   156a4:	popne	{fp, pc}
   156a8:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   156ac:	push	{fp, lr}
   156b0:	mov	fp, sp
   156b4:	bl	15a84 <__mempcpy_chk@plt+0x4a48>
   156b8:	cmp	r0, #0
   156bc:	popne	{fp, pc}
   156c0:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   156c4:	push	{fp, lr}
   156c8:	mov	fp, sp
   156cc:	mov	r1, #1
   156d0:	bl	15a84 <__mempcpy_chk@plt+0x4a48>
   156d4:	cmp	r0, #0
   156d8:	popne	{fp, pc}
   156dc:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   156e0:	push	{fp, lr}
   156e4:	mov	fp, sp
   156e8:	bl	15a84 <__mempcpy_chk@plt+0x4a48>
   156ec:	cmp	r0, #0
   156f0:	popne	{fp, pc}
   156f4:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   156f8:	push	{r4, r5, r6, sl, fp, lr}
   156fc:	add	fp, sp, #16
   15700:	mov	r5, r0
   15704:	mov	r0, r1
   15708:	mov	r4, r1
   1570c:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   15710:	cmp	r0, #0
   15714:	beq	15730 <__mempcpy_chk@plt+0x46f4>
   15718:	mov	r1, r5
   1571c:	mov	r2, r4
   15720:	mov	r6, r0
   15724:	bl	10e38 <memcpy@plt>
   15728:	mov	r0, r6
   1572c:	pop	{r4, r5, r6, sl, fp, pc}
   15730:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15734:	push	{r4, r5, r6, sl, fp, lr}
   15738:	add	fp, sp, #16
   1573c:	mov	r5, r0
   15740:	mov	r0, r1
   15744:	mov	r4, r1
   15748:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   1574c:	cmp	r0, #0
   15750:	beq	1576c <__mempcpy_chk@plt+0x4730>
   15754:	mov	r1, r5
   15758:	mov	r2, r4
   1575c:	mov	r6, r0
   15760:	bl	10e38 <memcpy@plt>
   15764:	mov	r0, r6
   15768:	pop	{r4, r5, r6, sl, fp, pc}
   1576c:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   15770:	push	{r4, r5, r6, sl, fp, lr}
   15774:	add	fp, sp, #16
   15778:	mov	r5, r0
   1577c:	add	r0, r1, #1
   15780:	mov	r4, r1
   15784:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   15788:	cmp	r0, #0
   1578c:	beq	157b4 <__mempcpy_chk@plt+0x4778>
   15790:	mov	r6, r0
   15794:	mov	r0, #0
   15798:	mov	r1, r5
   1579c:	mov	r2, r4
   157a0:	strb	r0, [r6, r4]
   157a4:	mov	r0, r6
   157a8:	bl	10e38 <memcpy@plt>
   157ac:	mov	r0, r6
   157b0:	pop	{r4, r5, r6, sl, fp, pc}
   157b4:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   157b8:	push	{r4, r5, r6, sl, fp, lr}
   157bc:	add	fp, sp, #16
   157c0:	mov	r4, r0
   157c4:	bl	10f58 <strlen@plt>
   157c8:	add	r5, r0, #1
   157cc:	mov	r0, r5
   157d0:	bl	15ad8 <__mempcpy_chk@plt+0x4a9c>
   157d4:	cmp	r0, #0
   157d8:	beq	157f4 <__mempcpy_chk@plt+0x47b8>
   157dc:	mov	r1, r4
   157e0:	mov	r2, r5
   157e4:	mov	r6, r0
   157e8:	bl	10e38 <memcpy@plt>
   157ec:	mov	r0, r6
   157f0:	pop	{r4, r5, r6, sl, fp, pc}
   157f4:	bl	157f8 <__mempcpy_chk@plt+0x47bc>
   157f8:	push	{fp, lr}
   157fc:	mov	fp, sp
   15800:	movw	r0, #28916	; 0x70f4
   15804:	movw	r1, #28289	; 0x6e81
   15808:	mov	r2, #5
   1580c:	movt	r0, #2
   15810:	movt	r1, #1
   15814:	ldr	r4, [r0]
   15818:	mov	r0, #0
   1581c:	bl	10e74 <dcgettext@plt>
   15820:	movw	r2, #26691	; 0x6843
   15824:	mov	r3, r0
   15828:	mov	r0, r4
   1582c:	mov	r1, #0
   15830:	movt	r2, #1
   15834:	bl	10ee0 <error@plt>
   15838:	bl	11030 <abort@plt>
   1583c:	sub	sp, sp, #12
   15840:	push	{r4, r5, r6, sl, fp, lr}
   15844:	add	fp, sp, #16
   15848:	sub	sp, sp, #4
   1584c:	movw	r5, #28996	; 0x7144
   15850:	mov	r4, r0
   15854:	add	r0, fp, #8
   15858:	stm	r0, {r1, r2, r3}
   1585c:	movt	r5, #2
   15860:	add	r3, fp, #8
   15864:	mov	r1, #1
   15868:	mov	r2, r4
   1586c:	ldr	r0, [r5]
   15870:	str	r3, [sp]
   15874:	bl	10f1c <__vfprintf_chk@plt>
   15878:	mov	r4, r0
   1587c:	cmn	r0, #1
   15880:	bgt	158cc <__mempcpy_chk@plt+0x4890>
   15884:	ldr	r0, [r5]
   15888:	bl	10e20 <ferror@plt>
   1588c:	cmp	r0, #0
   15890:	bne	158cc <__mempcpy_chk@plt+0x4890>
   15894:	movw	r0, #28916	; 0x70f4
   15898:	movt	r0, #2
   1589c:	ldr	r5, [r0]
   158a0:	bl	10f64 <__errno_location@plt>
   158a4:	ldr	r6, [r0]
   158a8:	movw	r1, #28306	; 0x6e92
   158ac:	mov	r0, #0
   158b0:	mov	r2, #5
   158b4:	movt	r1, #1
   158b8:	bl	10e74 <dcgettext@plt>
   158bc:	mov	r2, r0
   158c0:	mov	r0, r5
   158c4:	mov	r1, r6
   158c8:	bl	10ee0 <error@plt>
   158cc:	mov	r0, r4
   158d0:	sub	sp, fp, #16
   158d4:	pop	{r4, r5, r6, sl, fp, lr}
   158d8:	add	sp, sp, #12
   158dc:	bx	lr
   158e0:	push	{r4, r5, r6, sl, fp, lr}
   158e4:	add	fp, sp, #16
   158e8:	movw	r5, #28996	; 0x7144
   158ec:	mov	r2, r0
   158f0:	mov	r3, r1
   158f4:	mov	r1, #1
   158f8:	movt	r5, #2
   158fc:	ldr	r0, [r5]
   15900:	bl	10f1c <__vfprintf_chk@plt>
   15904:	mov	r4, r0
   15908:	cmn	r0, #1
   1590c:	bgt	15920 <__mempcpy_chk@plt+0x48e4>
   15910:	ldr	r0, [r5]
   15914:	bl	10e20 <ferror@plt>
   15918:	cmp	r0, #0
   1591c:	beq	15928 <__mempcpy_chk@plt+0x48ec>
   15920:	mov	r0, r4
   15924:	pop	{r4, r5, r6, sl, fp, pc}
   15928:	movw	r0, #28916	; 0x70f4
   1592c:	movt	r0, #2
   15930:	ldr	r5, [r0]
   15934:	bl	10f64 <__errno_location@plt>
   15938:	ldr	r6, [r0]
   1593c:	movw	r1, #28306	; 0x6e92
   15940:	mov	r0, #0
   15944:	mov	r2, #5
   15948:	movt	r1, #1
   1594c:	bl	10e74 <dcgettext@plt>
   15950:	mov	r2, r0
   15954:	mov	r0, r5
   15958:	mov	r1, r6
   1595c:	bl	10ee0 <error@plt>
   15960:	mov	r0, r4
   15964:	pop	{r4, r5, r6, sl, fp, pc}
   15968:	sub	sp, sp, #8
   1596c:	push	{r4, r5, r6, sl, fp, lr}
   15970:	add	fp, sp, #16
   15974:	sub	sp, sp, #8
   15978:	mov	r4, r1
   1597c:	str	r3, [fp, #12]
   15980:	str	r2, [fp, #8]
   15984:	add	r3, fp, #8
   15988:	mov	r1, #1
   1598c:	mov	r5, r0
   15990:	mov	r2, r4
   15994:	str	r3, [sp, #4]
   15998:	bl	10f1c <__vfprintf_chk@plt>
   1599c:	mov	r4, r0
   159a0:	cmn	r0, #1
   159a4:	bgt	159f0 <__mempcpy_chk@plt+0x49b4>
   159a8:	mov	r0, r5
   159ac:	bl	10e20 <ferror@plt>
   159b0:	cmp	r0, #0
   159b4:	bne	159f0 <__mempcpy_chk@plt+0x49b4>
   159b8:	movw	r0, #28916	; 0x70f4
   159bc:	movt	r0, #2
   159c0:	ldr	r5, [r0]
   159c4:	bl	10f64 <__errno_location@plt>
   159c8:	ldr	r6, [r0]
   159cc:	movw	r1, #28306	; 0x6e92
   159d0:	mov	r0, #0
   159d4:	mov	r2, #5
   159d8:	movt	r1, #1
   159dc:	bl	10e74 <dcgettext@plt>
   159e0:	mov	r2, r0
   159e4:	mov	r0, r5
   159e8:	mov	r1, r6
   159ec:	bl	10ee0 <error@plt>
   159f0:	mov	r0, r4
   159f4:	sub	sp, fp, #16
   159f8:	pop	{r4, r5, r6, sl, fp, lr}
   159fc:	add	sp, sp, #8
   15a00:	bx	lr
   15a04:	push	{r4, r5, r6, sl, fp, lr}
   15a08:	add	fp, sp, #16
   15a0c:	mov	r3, r2
   15a10:	mov	r2, r1
   15a14:	mov	r1, #1
   15a18:	mov	r5, r0
   15a1c:	bl	10f1c <__vfprintf_chk@plt>
   15a20:	mov	r4, r0
   15a24:	cmn	r0, #1
   15a28:	bgt	15a3c <__mempcpy_chk@plt+0x4a00>
   15a2c:	mov	r0, r5
   15a30:	bl	10e20 <ferror@plt>
   15a34:	cmp	r0, #0
   15a38:	beq	15a44 <__mempcpy_chk@plt+0x4a08>
   15a3c:	mov	r0, r4
   15a40:	pop	{r4, r5, r6, sl, fp, pc}
   15a44:	movw	r0, #28916	; 0x70f4
   15a48:	movt	r0, #2
   15a4c:	ldr	r5, [r0]
   15a50:	bl	10f64 <__errno_location@plt>
   15a54:	ldr	r6, [r0]
   15a58:	movw	r1, #28306	; 0x6e92
   15a5c:	mov	r0, #0
   15a60:	mov	r2, #5
   15a64:	movt	r1, #1
   15a68:	bl	10e74 <dcgettext@plt>
   15a6c:	mov	r2, r0
   15a70:	mov	r0, r5
   15a74:	mov	r1, r6
   15a78:	bl	10ee0 <error@plt>
   15a7c:	mov	r0, r4
   15a80:	pop	{r4, r5, r6, sl, fp, pc}
   15a84:	clz	r2, r1
   15a88:	clz	r3, r0
   15a8c:	lsr	r2, r2, #5
   15a90:	lsr	r3, r3, #5
   15a94:	orrs	r2, r3, r2
   15a98:	movwne	r1, #1
   15a9c:	movwne	r0, #1
   15aa0:	cmp	r1, #0
   15aa4:	beq	15ad4 <__mempcpy_chk@plt+0x4a98>
   15aa8:	mvn	r2, #-2147483648	; 0x80000000
   15aac:	udiv	r2, r2, r1
   15ab0:	cmp	r2, r0
   15ab4:	bcs	15ad4 <__mempcpy_chk@plt+0x4a98>
   15ab8:	push	{fp, lr}
   15abc:	mov	fp, sp
   15ac0:	bl	10f64 <__errno_location@plt>
   15ac4:	mov	r1, #12
   15ac8:	str	r1, [r0]
   15acc:	mov	r0, #0
   15ad0:	pop	{fp, pc}
   15ad4:	b	10dcc <calloc@plt>
   15ad8:	cmp	r0, #0
   15adc:	movweq	r0, #1
   15ae0:	cmn	r0, #1
   15ae4:	ble	15aec <__mempcpy_chk@plt+0x4ab0>
   15ae8:	b	10ef8 <malloc@plt>
   15aec:	push	{fp, lr}
   15af0:	mov	fp, sp
   15af4:	bl	10f64 <__errno_location@plt>
   15af8:	mov	r1, #12
   15afc:	str	r1, [r0]
   15b00:	mov	r0, #0
   15b04:	pop	{fp, pc}
   15b08:	push	{fp, lr}
   15b0c:	mov	fp, sp
   15b10:	cmp	r0, #0
   15b14:	beq	15b30 <__mempcpy_chk@plt+0x4af4>
   15b18:	cmp	r1, #0
   15b1c:	beq	15b3c <__mempcpy_chk@plt+0x4b00>
   15b20:	cmn	r1, #1
   15b24:	ble	15b48 <__mempcpy_chk@plt+0x4b0c>
   15b28:	pop	{fp, lr}
   15b2c:	b	10e80 <realloc@plt>
   15b30:	mov	r0, r1
   15b34:	pop	{fp, lr}
   15b38:	b	15ad8 <__mempcpy_chk@plt+0x4a9c>
   15b3c:	bl	12a50 <__mempcpy_chk@plt+0x1a14>
   15b40:	mov	r0, #0
   15b44:	pop	{fp, pc}
   15b48:	bl	10f64 <__errno_location@plt>
   15b4c:	mov	r1, #12
   15b50:	str	r1, [r0]
   15b54:	mov	r0, #0
   15b58:	pop	{fp, pc}
   15b5c:	push	{r4, r5, r6, sl, fp, lr}
   15b60:	add	fp, sp, #16
   15b64:	vpush	{d8}
   15b68:	movw	r6, #29340	; 0x729c
   15b6c:	mov	r5, r0
   15b70:	mov	r4, r1
   15b74:	movt	r6, #2
   15b78:	ldr	r0, [r6]
   15b7c:	cmp	r0, #0
   15b80:	bne	15b9c <__mempcpy_chk@plt+0x4b60>
   15b84:	movw	r1, #28338	; 0x6eb2
   15b88:	movw	r0, #8127	; 0x1fbf
   15b8c:	mov	r2, #0
   15b90:	movt	r1, #1
   15b94:	bl	11000 <newlocale@plt>
   15b98:	str	r0, [r6]
   15b9c:	ldr	r0, [r6]
   15ba0:	cmp	r0, #0
   15ba4:	beq	15bec <__mempcpy_chk@plt+0x4bb0>
   15ba8:	bl	10de4 <uselocale@plt>
   15bac:	cmp	r0, #0
   15bb0:	beq	15bec <__mempcpy_chk@plt+0x4bb0>
   15bb4:	mov	r6, r0
   15bb8:	mov	r0, r5
   15bbc:	mov	r1, r4
   15bc0:	bl	10e5c <strtold@plt>
   15bc4:	vorr	d8, d0, d0
   15bc8:	bl	10f64 <__errno_location@plt>
   15bcc:	ldr	r5, [r0]
   15bd0:	mov	r4, r0
   15bd4:	mov	r0, r6
   15bd8:	bl	10de4 <uselocale@plt>
   15bdc:	cmp	r0, #0
   15be0:	beq	15c04 <__mempcpy_chk@plt+0x4bc8>
   15be4:	str	r5, [r4]
   15be8:	b	15bf8 <__mempcpy_chk@plt+0x4bbc>
   15bec:	cmp	r4, #0
   15bf0:	vmov.i32	d8, #0	; 0x00000000
   15bf4:	strne	r5, [r4]
   15bf8:	vorr	d0, d8, d8
   15bfc:	vpop	{d8}
   15c00:	pop	{r4, r5, r6, sl, fp, pc}
   15c04:	bl	11030 <abort@plt>
   15c08:	push	{r4, r5, r6, sl, fp, lr}
   15c0c:	add	fp, sp, #16
   15c10:	mov	r4, r0
   15c14:	bl	10ec8 <__fpending@plt>
   15c18:	ldr	r6, [r4]
   15c1c:	mov	r5, r0
   15c20:	mov	r0, r4
   15c24:	bl	15c8c <__mempcpy_chk@plt+0x4c50>
   15c28:	tst	r6, #32
   15c2c:	bne	15c64 <__mempcpy_chk@plt+0x4c28>
   15c30:	cmp	r0, #0
   15c34:	mov	r4, r0
   15c38:	mvnne	r4, #0
   15c3c:	cmp	r5, #0
   15c40:	bne	15c70 <__mempcpy_chk@plt+0x4c34>
   15c44:	cmp	r0, #0
   15c48:	beq	15c70 <__mempcpy_chk@plt+0x4c34>
   15c4c:	bl	10f64 <__errno_location@plt>
   15c50:	ldr	r0, [r0]
   15c54:	subs	r4, r0, #9
   15c58:	mvnne	r4, #0
   15c5c:	mov	r0, r4
   15c60:	pop	{r4, r5, r6, sl, fp, pc}
   15c64:	mvn	r4, #0
   15c68:	cmp	r0, #0
   15c6c:	beq	15c78 <__mempcpy_chk@plt+0x4c3c>
   15c70:	mov	r0, r4
   15c74:	pop	{r4, r5, r6, sl, fp, pc}
   15c78:	bl	10f64 <__errno_location@plt>
   15c7c:	mov	r1, #0
   15c80:	str	r1, [r0]
   15c84:	mov	r0, r4
   15c88:	pop	{r4, r5, r6, sl, fp, pc}
   15c8c:	push	{r4, r5, r6, sl, fp, lr}
   15c90:	add	fp, sp, #16
   15c94:	sub	sp, sp, #8
   15c98:	mov	r4, r0
   15c9c:	bl	10f94 <fileno@plt>
   15ca0:	cmn	r0, #1
   15ca4:	ble	15d18 <__mempcpy_chk@plt+0x4cdc>
   15ca8:	mov	r0, r4
   15cac:	bl	10f28 <__freading@plt>
   15cb0:	cmp	r0, #0
   15cb4:	beq	15ce0 <__mempcpy_chk@plt+0x4ca4>
   15cb8:	mov	r0, r4
   15cbc:	bl	10f94 <fileno@plt>
   15cc0:	mov	r1, #1
   15cc4:	mov	r2, #0
   15cc8:	mov	r3, #0
   15ccc:	str	r1, [sp]
   15cd0:	bl	10eb0 <lseek64@plt>
   15cd4:	and	r0, r0, r1
   15cd8:	cmn	r0, #1
   15cdc:	beq	15d18 <__mempcpy_chk@plt+0x4cdc>
   15ce0:	mov	r0, r4
   15ce4:	bl	15d28 <__mempcpy_chk@plt+0x4cec>
   15ce8:	cmp	r0, #0
   15cec:	beq	15d18 <__mempcpy_chk@plt+0x4cdc>
   15cf0:	bl	10f64 <__errno_location@plt>
   15cf4:	ldr	r6, [r0]
   15cf8:	mov	r5, r0
   15cfc:	mov	r0, r4
   15d00:	bl	10fb8 <fclose@plt>
   15d04:	cmp	r6, #0
   15d08:	strne	r6, [r5]
   15d0c:	mvnne	r0, #0
   15d10:	sub	sp, fp, #16
   15d14:	pop	{r4, r5, r6, sl, fp, pc}
   15d18:	mov	r0, r4
   15d1c:	sub	sp, fp, #16
   15d20:	pop	{r4, r5, r6, sl, fp, lr}
   15d24:	b	10fb8 <fclose@plt>
   15d28:	push	{r4, sl, fp, lr}
   15d2c:	add	fp, sp, #8
   15d30:	sub	sp, sp, #8
   15d34:	mov	r4, r0
   15d38:	cmp	r0, #0
   15d3c:	beq	15d58 <__mempcpy_chk@plt+0x4d1c>
   15d40:	mov	r0, r4
   15d44:	bl	10f28 <__freading@plt>
   15d48:	cmp	r0, #0
   15d4c:	ldrbne	r0, [r4, #1]
   15d50:	tstne	r0, #1
   15d54:	bne	15d68 <__mempcpy_chk@plt+0x4d2c>
   15d58:	mov	r0, r4
   15d5c:	sub	sp, fp, #8
   15d60:	pop	{r4, sl, fp, lr}
   15d64:	b	10e08 <fflush@plt>
   15d68:	mov	r0, #1
   15d6c:	mov	r2, #0
   15d70:	mov	r3, #0
   15d74:	str	r0, [sp]
   15d78:	mov	r0, r4
   15d7c:	bl	15d84 <__mempcpy_chk@plt+0x4d48>
   15d80:	b	15d58 <__mempcpy_chk@plt+0x4d1c>
   15d84:	push	{r4, r5, r6, r7, fp, lr}
   15d88:	add	fp, sp, #16
   15d8c:	sub	sp, sp, #8
   15d90:	mov	r4, r0
   15d94:	ldr	r0, [r0, #4]
   15d98:	mov	r5, r3
   15d9c:	mov	r6, r2
   15da0:	ldr	r1, [r4, #8]
   15da4:	cmp	r1, r0
   15da8:	bne	15dc4 <__mempcpy_chk@plt+0x4d88>
   15dac:	ldrd	r0, [r4, #16]
   15db0:	cmp	r1, r0
   15db4:	bne	15dc4 <__mempcpy_chk@plt+0x4d88>
   15db8:	ldr	r0, [r4, #36]	; 0x24
   15dbc:	cmp	r0, #0
   15dc0:	beq	15ddc <__mempcpy_chk@plt+0x4da0>
   15dc4:	mov	r0, r4
   15dc8:	mov	r2, r6
   15dcc:	mov	r3, r5
   15dd0:	sub	sp, fp, #16
   15dd4:	pop	{r4, r5, r6, r7, fp, lr}
   15dd8:	b	10fc4 <fseeko64@plt>
   15ddc:	ldr	r7, [fp, #8]
   15de0:	mov	r0, r4
   15de4:	bl	10f94 <fileno@plt>
   15de8:	mov	r2, r6
   15dec:	mov	r3, r5
   15df0:	str	r7, [sp]
   15df4:	bl	10eb0 <lseek64@plt>
   15df8:	and	r2, r0, r1
   15dfc:	cmn	r2, #1
   15e00:	mvneq	r0, #0
   15e04:	subeq	sp, fp, #16
   15e08:	popeq	{r4, r5, r6, r7, fp, pc}
   15e0c:	strd	r0, [r4, #80]	; 0x50
   15e10:	ldr	r0, [r4]
   15e14:	bic	r0, r0, #16
   15e18:	str	r0, [r4]
   15e1c:	mov	r0, #0
   15e20:	sub	sp, fp, #16
   15e24:	pop	{r4, r5, r6, r7, fp, pc}
   15e28:	push	{fp, lr}
   15e2c:	mov	fp, sp
   15e30:	mov	r0, #14
   15e34:	bl	10ff4 <nl_langinfo@plt>
   15e38:	movw	r1, #24876	; 0x612c
   15e3c:	cmp	r0, #0
   15e40:	movt	r1, #1
   15e44:	movne	r1, r0
   15e48:	movw	r0, #27342	; 0x6ace
   15e4c:	ldrb	r2, [r1]
   15e50:	movt	r0, #1
   15e54:	cmp	r2, #0
   15e58:	movne	r0, r1
   15e5c:	pop	{fp, pc}
   15e60:	push	{r4, r5, r6, r7, fp, lr}
   15e64:	add	fp, sp, #16
   15e68:	sub	sp, sp, #8
   15e6c:	add	r5, sp, #4
   15e70:	cmp	r0, #0
   15e74:	mov	r7, r2
   15e78:	mov	r4, r1
   15e7c:	movne	r5, r0
   15e80:	mov	r0, r5
   15e84:	bl	10ed4 <mbrtowc@plt>
   15e88:	mov	r6, r0
   15e8c:	cmp	r7, #0
   15e90:	beq	15eb4 <__mempcpy_chk@plt+0x4e78>
   15e94:	cmn	r6, #2
   15e98:	bcc	15eb4 <__mempcpy_chk@plt+0x4e78>
   15e9c:	mov	r0, #0
   15ea0:	bl	15efc <__mempcpy_chk@plt+0x4ec0>
   15ea4:	cmp	r0, #0
   15ea8:	ldrbeq	r0, [r4]
   15eac:	moveq	r6, #1
   15eb0:	streq	r0, [r5]
   15eb4:	mov	r0, r6
   15eb8:	sub	sp, fp, #16
   15ebc:	pop	{r4, r5, r6, r7, fp, pc}
   15ec0:	cmp	r2, #0
   15ec4:	beq	15ef4 <__mempcpy_chk@plt+0x4eb8>
   15ec8:	mvn	r3, #0
   15ecc:	udiv	r3, r3, r2
   15ed0:	cmp	r3, r1
   15ed4:	bcs	15ef4 <__mempcpy_chk@plt+0x4eb8>
   15ed8:	push	{fp, lr}
   15edc:	mov	fp, sp
   15ee0:	bl	10f64 <__errno_location@plt>
   15ee4:	mov	r1, #12
   15ee8:	str	r1, [r0]
   15eec:	mov	r0, #0
   15ef0:	pop	{fp, pc}
   15ef4:	mul	r1, r2, r1
   15ef8:	b	15b08 <__mempcpy_chk@plt+0x4acc>
   15efc:	push	{r4, sl, fp, lr}
   15f00:	add	fp, sp, #8
   15f04:	sub	sp, sp, #264	; 0x108
   15f08:	add	r1, sp, #7
   15f0c:	movw	r2, #257	; 0x101
   15f10:	bl	15f60 <__mempcpy_chk@plt+0x4f24>
   15f14:	mov	r4, #0
   15f18:	cmp	r0, #0
   15f1c:	bne	15f54 <__mempcpy_chk@plt+0x4f18>
   15f20:	movw	r1, #28338	; 0x6eb2
   15f24:	add	r0, sp, #7
   15f28:	movt	r1, #1
   15f2c:	bl	10dfc <strcmp@plt>
   15f30:	cmp	r0, #0
   15f34:	beq	15f54 <__mempcpy_chk@plt+0x4f18>
   15f38:	movw	r1, #28340	; 0x6eb4
   15f3c:	add	r0, sp, #7
   15f40:	movt	r1, #1
   15f44:	bl	10dfc <strcmp@plt>
   15f48:	mov	r4, r0
   15f4c:	cmp	r0, #0
   15f50:	movwne	r4, #1
   15f54:	mov	r0, r4
   15f58:	sub	sp, fp, #8
   15f5c:	pop	{r4, sl, fp, pc}
   15f60:	push	{r4, r5, r6, r7, fp, lr}
   15f64:	add	fp, sp, #16
   15f68:	mov	r4, r1
   15f6c:	mov	r1, #0
   15f70:	mov	r6, r2
   15f74:	bl	10fdc <setlocale@plt>
   15f78:	cmp	r0, #0
   15f7c:	beq	15fac <__mempcpy_chk@plt+0x4f70>
   15f80:	mov	r7, r0
   15f84:	bl	10f58 <strlen@plt>
   15f88:	cmp	r0, r6
   15f8c:	bcs	15fcc <__mempcpy_chk@plt+0x4f90>
   15f90:	add	r2, r0, #1
   15f94:	mov	r0, r4
   15f98:	mov	r1, r7
   15f9c:	bl	10e38 <memcpy@plt>
   15fa0:	mov	r5, #0
   15fa4:	mov	r0, r5
   15fa8:	pop	{r4, r5, r6, r7, fp, pc}
   15fac:	cmp	r6, #0
   15fb0:	mov	r5, #22
   15fb4:	movne	r0, #0
   15fb8:	strbne	r0, [r4]
   15fbc:	movne	r0, r5
   15fc0:	popne	{r4, r5, r6, r7, fp, pc}
   15fc4:	mov	r0, r5
   15fc8:	pop	{r4, r5, r6, r7, fp, pc}
   15fcc:	mov	r5, #34	; 0x22
   15fd0:	cmp	r6, #0
   15fd4:	beq	15ff4 <__mempcpy_chk@plt+0x4fb8>
   15fd8:	sub	r6, r6, #1
   15fdc:	mov	r0, r4
   15fe0:	mov	r1, r7
   15fe4:	mov	r2, r6
   15fe8:	bl	10e38 <memcpy@plt>
   15fec:	mov	r0, #0
   15ff0:	strb	r0, [r4, r6]
   15ff4:	mov	r0, r5
   15ff8:	pop	{r4, r5, r6, r7, fp, pc}
   15ffc:	mov	r1, #0
   16000:	b	10fdc <setlocale@plt>
   16004:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16008:	mov	r7, r0
   1600c:	ldr	r6, [pc, #72]	; 1605c <__mempcpy_chk@plt+0x5020>
   16010:	ldr	r5, [pc, #72]	; 16060 <__mempcpy_chk@plt+0x5024>
   16014:	add	r6, pc, r6
   16018:	add	r5, pc, r5
   1601c:	sub	r6, r6, r5
   16020:	mov	r8, r1
   16024:	mov	r9, r2
   16028:	bl	10dac <calloc@plt-0x20>
   1602c:	asrs	r6, r6, #2
   16030:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16034:	mov	r4, #0
   16038:	add	r4, r4, #1
   1603c:	ldr	r3, [r5], #4
   16040:	mov	r2, r9
   16044:	mov	r1, r8
   16048:	mov	r0, r7
   1604c:	blx	r3
   16050:	cmp	r6, r4
   16054:	bne	16038 <__mempcpy_chk@plt+0x4ffc>
   16058:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1605c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   16060:	andeq	r0, r1, r8, ror #29
   16064:	bx	lr
   16068:	ldr	r3, [pc, #12]	; 1607c <__mempcpy_chk@plt+0x5040>
   1606c:	mov	r1, #0
   16070:	add	r3, pc, r3
   16074:	ldr	r2, [r3]
   16078:	b	10f70 <__cxa_atexit@plt>
   1607c:	andeq	r1, r1, r4, ror r0

Disassembly of section .fini:

00016080 <.fini>:
   16080:	push	{r3, lr}
   16084:	pop	{r3, pc}
