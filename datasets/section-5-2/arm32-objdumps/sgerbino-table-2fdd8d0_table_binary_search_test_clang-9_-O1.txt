
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r4, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #20, 20	; 0x14000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #20, 20	; 0x14000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #20, 20	; 0x14000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #20, 20	; 0x14000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #20, 20	; 0x14000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #20, 20	; 0x14000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #20, 20	; 0x14000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #20, 20	; 0x14000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #20, 20	; 0x14000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #20, 20	; 0x14000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #20, 20	; 0x14000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #20, 20	; 0x14000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	andeq	r6, r1, ip, ror r9
   1303c:	strdeq	r3, [r1], -r8
   13040:	andeq	r6, r1, ip, lsl r9
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r3, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r7, r2, r8, asr #32
   1308c:	andeq	r7, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r7, r2, r8, asr #32
   130c4:	andeq	r7, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r7, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	13320 <table_init@@Base>
   13118:	movw	r1, #27020	; 0x698c
   1311c:	movt	r1, #1
   13120:	mov	r7, #0
   13124:	mov	r0, r5
   13128:	mov	r2, #0
   1312c:	bl	13df0 <table_add_column@@Base>
   13130:	mov	r6, r0
   13134:	movw	r1, #27022	; 0x698e
   13138:	movt	r1, #1
   1313c:	mov	r0, r5
   13140:	mov	r2, #16
   13144:	bl	13df0 <table_add_column@@Base>
   13148:	mov	r8, r0
   1314c:	vldr	s18, [pc, #424]	; 132fc <main@@Base+0x204>
   13150:	movw	sl, #39322	; 0x999a
   13154:	movt	sl, #6553	; 0x1999
   13158:	vmov.f32	s20, #80	; 0x3e800000  0.250
   1315c:	vmov.f32	s16, s18
   13160:	mov	r4, #0
   13164:	mov	r0, r5
   13168:	bl	156ac <table_add_row@@Base>
   1316c:	uxtb	r0, r4
   13170:	movw	r1, #52429	; 0xcccd
   13174:	movt	r1, #52428	; 0xcccc
   13178:	mul	r0, r0, r1
   1317c:	ror	r0, r0, #1
   13180:	cmp	r0, sl
   13184:	mov	r0, #0
   13188:	movwcc	r0, #1
   1318c:	cmp	r4, #0
   13190:	mov	r1, r4
   13194:	movwne	r1, #1
   13198:	and	r9, r1, r0
   1319c:	add	r7, r7, r9
   131a0:	mov	r0, r5
   131a4:	mov	r1, r4
   131a8:	mov	r2, r6
   131ac:	mov	r3, r7
   131b0:	bl	15b0c <table_set_int@@Base>
   131b4:	cmp	r9, #0
   131b8:	vseleq.f32	s0, s16, s18
   131bc:	vadd.f32	s2, s0, s20
   131c0:	tst	r4, #1
   131c4:	vseleq.f32	s2, s2, s0
   131c8:	cmp	r4, #0
   131cc:	vseleq.f32	s16, s0, s2
   131d0:	mov	r0, r5
   131d4:	mov	r1, r4
   131d8:	mov	r2, r8
   131dc:	vmov.f32	s0, s16
   131e0:	bl	15dbc <table_set_float@@Base>
   131e4:	add	r4, r4, #1
   131e8:	cmp	r4, #100	; 0x64
   131ec:	bne	13164 <main@@Base+0x6c>
   131f0:	add	r4, sp, #8
   131f4:	mov	r9, #0
   131f8:	mov	r0, r4
   131fc:	mov	r1, r6
   13200:	mov	r2, #4
   13204:	mov	r3, #0
   13208:	bl	14d5c <table_sorted_find_int@@Base>
   1320c:	mov	r7, r0
   13210:	mov	r0, r4
   13214:	mov	r1, r6
   13218:	mov	r2, #4
   1321c:	mov	r3, #1
   13220:	bl	14d5c <table_sorted_find_int@@Base>
   13224:	mov	r6, r0
   13228:	cmp	r7, #40	; 0x28
   1322c:	beq	13244 <main@@Base+0x14c>
   13230:	movw	r0, #27024	; 0x6990
   13234:	movt	r0, #1
   13238:	mov	r1, r7
   1323c:	bl	12f84 <printf@plt>
   13240:	mvn	r9, #0
   13244:	cmp	r6, #49	; 0x31
   13248:	beq	13260 <main@@Base+0x168>
   1324c:	movw	r0, #27080	; 0x69c8
   13250:	movt	r0, #1
   13254:	mov	r1, r6
   13258:	bl	12f84 <printf@plt>
   1325c:	mvn	r9, #0
   13260:	str	r6, [sp]
   13264:	add	r4, sp, #8
   13268:	vmov.f32	s16, #96	; 0x3f000000  0.5
   1326c:	mov	r0, r4
   13270:	mov	r1, r8
   13274:	vmov.f32	s0, s16
   13278:	mov	r2, #0
   1327c:	mov	r3, r7
   13280:	bl	15330 <table_sorted_subset_find_float@@Base>
   13284:	mov	r5, r0
   13288:	str	r6, [sp]
   1328c:	mov	r0, r4
   13290:	mov	r1, r8
   13294:	vmov.f32	s0, s16
   13298:	mov	r2, #1
   1329c:	mov	r3, r7
   132a0:	bl	15330 <table_sorted_subset_find_float@@Base>
   132a4:	mov	r4, r0
   132a8:	cmp	r5, #42	; 0x2a
   132ac:	beq	132c4 <main@@Base+0x1cc>
   132b0:	movw	r0, #27135	; 0x69ff
   132b4:	movt	r0, #1
   132b8:	mov	r1, r5
   132bc:	bl	12f84 <printf@plt>
   132c0:	mvn	r9, #0
   132c4:	cmp	r4, #43	; 0x2b
   132c8:	beq	132e0 <main@@Base+0x1e8>
   132cc:	movw	r0, #27197	; 0x6a3d
   132d0:	movt	r0, #1
   132d4:	mov	r1, r4
   132d8:	bl	12f84 <printf@plt>
   132dc:	mvn	r9, #0
   132e0:	add	r0, sp, #8
   132e4:	bl	13360 <table_destroy@@Base>
   132e8:	mov	r0, r9
   132ec:	sub	sp, fp, #56	; 0x38
   132f0:	vpop	{d8-d10}
   132f4:	add	sp, sp, #4
   132f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132fc:	andeq	r0, r0, r0

00013300 <table_new@@Base>:
   13300:	push	{r4, sl, fp, lr}
   13304:	add	fp, sp, #8
   13308:	mov	r0, #56	; 0x38
   1330c:	bl	12fb4 <malloc@plt>
   13310:	mov	r4, r0
   13314:	bl	13320 <table_init@@Base>
   13318:	mov	r0, r4
   1331c:	pop	{r4, sl, fp, pc}

00013320 <table_init@@Base>:
   13320:	push	{r4, sl, fp, lr}
   13324:	add	fp, sp, #8
   13328:	mov	r4, r0
   1332c:	bl	133a0 <table_destroy@@Base+0x40>
   13330:	mov	r0, r4
   13334:	bl	133b8 <table_destroy@@Base+0x58>
   13338:	mov	r0, r4
   1333c:	pop	{r4, sl, fp, lr}
   13340:	b	133d4 <table_destroy@@Base+0x74>

00013344 <table_delete@@Base>:
   13344:	push	{r4, sl, fp, lr}
   13348:	add	fp, sp, #8
   1334c:	mov	r4, r0
   13350:	bl	13360 <table_destroy@@Base>
   13354:	mov	r0, r4
   13358:	pop	{r4, sl, fp, lr}
   1335c:	b	12f90 <free@plt>

00013360 <table_destroy@@Base>:
   13360:	cmp	r0, #0
   13364:	bxeq	lr
   13368:	push	{r4, sl, fp, lr}
   1336c:	add	fp, sp, #8
   13370:	mov	r4, r0
   13374:	mvn	r1, #0
   13378:	mvn	r2, #0
   1337c:	mov	r3, #64	; 0x40
   13380:	bl	13c6c <table_notify@@Base>
   13384:	mov	r0, r4
   13388:	bl	133f4 <table_destroy@@Base+0x94>
   1338c:	mov	r0, r4
   13390:	bl	13444 <table_destroy@@Base+0xe4>
   13394:	mov	r0, r4
   13398:	pop	{r4, sl, fp, lr}
   1339c:	b	13494 <table_destroy@@Base+0x134>
   133a0:	mov	r1, #0
   133a4:	mov	r2, #10
   133a8:	str	r1, [r0]
   133ac:	stmib	r0, {r1, r2}
   133b0:	str	r1, [r0, #12]
   133b4:	bx	lr
   133b8:	mov	r1, #0
   133bc:	mov	r2, #20
   133c0:	str	r1, [r0, #16]
   133c4:	str	r1, [r0, #20]
   133c8:	str	r2, [r0, #24]
   133cc:	str	r1, [r0, #28]
   133d0:	bx	lr
   133d4:	mov	r1, #10
   133d8:	vmov.i32	q8, #0	; 0x00000000
   133dc:	mov	r2, #0
   133e0:	str	r1, [r0, #48]	; 0x30
   133e4:	str	r2, [r0, #52]	; 0x34
   133e8:	add	r0, r0, #32
   133ec:	vst1.32	{d16-d17}, [r0]
   133f0:	bx	lr
   133f4:	push	{r4, r5, r6, sl, fp, lr}
   133f8:	add	fp, sp, #16
   133fc:	mov	r4, r0
   13400:	bl	156a4 <table_get_row_length@@Base>
   13404:	cmp	r0, #1
   13408:	blt	1342c <table_destroy@@Base+0xcc>
   1340c:	mov	r5, r0
   13410:	mov	r6, #0
   13414:	mov	r0, r4
   13418:	mov	r1, r6
   1341c:	bl	1563c <table_row_destroy@@Base>
   13420:	add	r6, r6, #1
   13424:	cmp	r5, r6
   13428:	bne	13414 <table_destroy@@Base+0xb4>
   1342c:	ldr	r0, [r4, #16]
   13430:	cmp	r0, #0
   13434:	beq	13440 <table_destroy@@Base+0xe0>
   13438:	pop	{r4, r5, r6, sl, fp, lr}
   1343c:	b	12f90 <free@plt>
   13440:	pop	{r4, r5, r6, sl, fp, pc}
   13444:	push	{r4, r5, r6, sl, fp, lr}
   13448:	add	fp, sp, #16
   1344c:	mov	r4, r0
   13450:	bl	13d68 <table_get_column_length@@Base>
   13454:	cmp	r0, #1
   13458:	blt	1347c <table_destroy@@Base+0x11c>
   1345c:	mov	r5, r0
   13460:	mov	r6, #0
   13464:	mov	r0, r4
   13468:	mov	r1, r6
   1346c:	bl	13d48 <table_column_destroy@@Base>
   13470:	add	r6, r6, #1
   13474:	cmp	r5, r6
   13478:	bne	13464 <table_destroy@@Base+0x104>
   1347c:	ldr	r0, [r4]
   13480:	cmp	r0, #0
   13484:	beq	13490 <table_destroy@@Base+0x130>
   13488:	pop	{r4, r5, r6, sl, fp, lr}
   1348c:	b	12f90 <free@plt>
   13490:	pop	{r4, r5, r6, sl, fp, pc}
   13494:	push	{r4, sl, fp, lr}
   13498:	add	fp, sp, #8
   1349c:	mov	r4, r0
   134a0:	ldr	r0, [r0, #36]	; 0x24
   134a4:	cmp	r0, #0
   134a8:	beq	134b0 <table_destroy@@Base+0x150>
   134ac:	bl	12f90 <free@plt>
   134b0:	ldr	r0, [r4, #40]	; 0x28
   134b4:	cmp	r0, #0
   134b8:	beq	134c0 <table_destroy@@Base+0x160>
   134bc:	bl	12f90 <free@plt>
   134c0:	ldr	r0, [r4, #44]	; 0x2c
   134c4:	cmp	r0, #0
   134c8:	popeq	{r4, sl, fp, pc}
   134cc:	pop	{r4, sl, fp, lr}
   134d0:	b	12f90 <free@plt>

000134d4 <table_dupe@@Base>:
   134d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134d8:	add	fp, sp, #28
   134dc:	sub	sp, sp, #12
   134e0:	mov	r4, r0
   134e4:	bl	156a4 <table_get_row_length@@Base>
   134e8:	mov	r8, r0
   134ec:	mov	r0, r4
   134f0:	bl	13d68 <table_get_column_length@@Base>
   134f4:	mov	r6, r0
   134f8:	bl	13300 <table_new@@Base>
   134fc:	mov	sl, r0
   13500:	cmp	r6, #1
   13504:	blt	13544 <table_dupe@@Base+0x70>
   13508:	mov	r5, #0
   1350c:	mov	r0, r4
   13510:	mov	r1, r5
   13514:	bl	13dc8 <table_get_column_name@@Base>
   13518:	mov	r7, r0
   1351c:	mov	r0, r4
   13520:	mov	r1, r5
   13524:	bl	13ddc <table_get_column_data_type@@Base>
   13528:	mov	r2, r0
   1352c:	mov	r0, sl
   13530:	mov	r1, r7
   13534:	bl	13df0 <table_add_column@@Base>
   13538:	add	r5, r5, #1
   1353c:	cmp	r6, r5
   13540:	bne	1350c <table_dupe@@Base+0x38>
   13544:	cmp	r8, #1
   13548:	blt	139b8 <table_dupe@@Base+0x4e4>
   1354c:	mov	r5, #0
   13550:	add	r9, sp, #8
   13554:	b	13564 <table_dupe@@Base+0x90>
   13558:	add	r5, r5, #1
   1355c:	cmp	r5, r8
   13560:	beq	139b8 <table_dupe@@Base+0x4e4>
   13564:	mov	r0, sl
   13568:	bl	156ac <table_add_row@@Base>
   1356c:	cmp	r6, #1
   13570:	blt	13558 <table_dupe@@Base+0x84>
   13574:	mov	r7, #0
   13578:	b	135b0 <table_dupe@@Base+0xdc>
   1357c:	mov	r0, r4
   13580:	mov	r1, r5
   13584:	mov	r2, r7
   13588:	bl	15604 <table_get_ptr@@Base>
   1358c:	str	r0, [sp, #8]
   13590:	mov	r0, sl
   13594:	mov	r1, r5
   13598:	mov	r2, r7
   1359c:	mov	r3, r9
   135a0:	bl	15ea4 <table_set_ptr@@Base>
   135a4:	add	r7, r7, #1
   135a8:	cmp	r6, r7
   135ac:	beq	13558 <table_dupe@@Base+0x84>
   135b0:	mov	r0, r4
   135b4:	mov	r1, r7
   135b8:	bl	13ddc <table_get_column_data_type@@Base>
   135bc:	cmp	r0, #23
   135c0:	bhi	135a4 <table_dupe@@Base+0xd0>
   135c4:	add	r1, pc, #0
   135c8:	ldr	pc, [r1, r0, lsl #2]
   135cc:	andeq	r3, r1, ip, lsr #12
   135d0:	andeq	r3, r1, r4, asr r6
   135d4:	andeq	r3, r1, ip, ror r6
   135d8:	andeq	r3, r1, r4, lsr #13
   135dc:	andeq	r3, r1, ip, asr #13
   135e0:	strdeq	r3, [r1], -r4
   135e4:	andeq	r3, r1, ip, lsl r7
   135e8:	andeq	r3, r1, r4, asr #14
   135ec:	andeq	r3, r1, ip, ror #14
   135f0:	muleq	r1, r4, r7
   135f4:			; <UNDEFINED> instruction: 0x000137bc
   135f8:	andeq	r3, r1, r4, ror #15
   135fc:	andeq	r3, r1, ip, lsl #16
   13600:	andeq	r3, r1, r4, lsr r8
   13604:	andeq	r3, r1, ip, asr r8
   13608:	andeq	r3, r1, r4, lsl #17
   1360c:	andeq	r3, r1, ip, lsr #17
   13610:	ldrdeq	r3, [r1], -r0
   13614:	strdeq	r3, [r1], -r4
   13618:	andeq	r3, r1, r8, lsl r9
   1361c:	andeq	r3, r1, r0, asr #18
   13620:	andeq	r3, r1, r8, ror #18
   13624:	muleq	r1, r0, r9
   13628:	andeq	r3, r1, ip, ror r5
   1362c:	mov	r0, r4
   13630:	mov	r1, r5
   13634:	mov	r2, r7
   13638:	bl	1545c <table_get_int@@Base>
   1363c:	mov	r3, r0
   13640:	mov	r0, sl
   13644:	mov	r1, r5
   13648:	mov	r2, r7
   1364c:	bl	15b0c <table_set_int@@Base>
   13650:	b	135a4 <table_dupe@@Base+0xd0>
   13654:	mov	r0, r4
   13658:	mov	r1, r5
   1365c:	mov	r2, r7
   13660:	bl	15470 <table_get_uint@@Base>
   13664:	mov	r3, r0
   13668:	mov	r0, sl
   1366c:	mov	r1, r5
   13670:	mov	r2, r7
   13674:	bl	15b34 <table_set_uint@@Base>
   13678:	b	135a4 <table_dupe@@Base+0xd0>
   1367c:	mov	r0, r4
   13680:	mov	r1, r5
   13684:	mov	r2, r7
   13688:	bl	15484 <table_get_int8@@Base>
   1368c:	mov	r3, r0
   13690:	mov	r0, sl
   13694:	mov	r1, r5
   13698:	mov	r2, r7
   1369c:	bl	15b5c <table_set_int8@@Base>
   136a0:	b	135a4 <table_dupe@@Base+0xd0>
   136a4:	mov	r0, r4
   136a8:	mov	r1, r5
   136ac:	mov	r2, r7
   136b0:	bl	15498 <table_get_uint8@@Base>
   136b4:	mov	r3, r0
   136b8:	mov	r0, sl
   136bc:	mov	r1, r5
   136c0:	mov	r2, r7
   136c4:	bl	15b84 <table_set_uint8@@Base>
   136c8:	b	135a4 <table_dupe@@Base+0xd0>
   136cc:	mov	r0, r4
   136d0:	mov	r1, r5
   136d4:	mov	r2, r7
   136d8:	bl	154ac <table_get_int16@@Base>
   136dc:	mov	r3, r0
   136e0:	mov	r0, sl
   136e4:	mov	r1, r5
   136e8:	mov	r2, r7
   136ec:	bl	15bac <table_set_int16@@Base>
   136f0:	b	135a4 <table_dupe@@Base+0xd0>
   136f4:	mov	r0, r4
   136f8:	mov	r1, r5
   136fc:	mov	r2, r7
   13700:	bl	154c0 <table_get_uint16@@Base>
   13704:	mov	r3, r0
   13708:	mov	r0, sl
   1370c:	mov	r1, r5
   13710:	mov	r2, r7
   13714:	bl	15bd4 <table_set_uint16@@Base>
   13718:	b	135a4 <table_dupe@@Base+0xd0>
   1371c:	mov	r0, r4
   13720:	mov	r1, r5
   13724:	mov	r2, r7
   13728:	bl	154d4 <table_get_int32@@Base>
   1372c:	mov	r3, r0
   13730:	mov	r0, sl
   13734:	mov	r1, r5
   13738:	mov	r2, r7
   1373c:	bl	15bfc <table_set_int32@@Base>
   13740:	b	135a4 <table_dupe@@Base+0xd0>
   13744:	mov	r0, r4
   13748:	mov	r1, r5
   1374c:	mov	r2, r7
   13750:	bl	154e8 <table_get_uint32@@Base>
   13754:	mov	r3, r0
   13758:	mov	r0, sl
   1375c:	mov	r1, r5
   13760:	mov	r2, r7
   13764:	bl	15c24 <table_set_uint32@@Base>
   13768:	b	135a4 <table_dupe@@Base+0xd0>
   1376c:	mov	r0, r4
   13770:	mov	r1, r5
   13774:	mov	r2, r7
   13778:	bl	154fc <table_get_int64@@Base>
   1377c:	stm	sp, {r0, r1}
   13780:	mov	r0, sl
   13784:	mov	r1, r5
   13788:	mov	r2, r7
   1378c:	bl	15c4c <table_set_int64@@Base>
   13790:	b	135a4 <table_dupe@@Base+0xd0>
   13794:	mov	r0, r4
   13798:	mov	r1, r5
   1379c:	mov	r2, r7
   137a0:	bl	15510 <table_get_uint64@@Base>
   137a4:	stm	sp, {r0, r1}
   137a8:	mov	r0, sl
   137ac:	mov	r1, r5
   137b0:	mov	r2, r7
   137b4:	bl	15c80 <table_set_uint64@@Base>
   137b8:	b	135a4 <table_dupe@@Base+0xd0>
   137bc:	mov	r0, r4
   137c0:	mov	r1, r5
   137c4:	mov	r2, r7
   137c8:	bl	15524 <table_get_short@@Base>
   137cc:	mov	r3, r0
   137d0:	mov	r0, sl
   137d4:	mov	r1, r5
   137d8:	mov	r2, r7
   137dc:	bl	15cb4 <table_set_short@@Base>
   137e0:	b	135a4 <table_dupe@@Base+0xd0>
   137e4:	mov	r0, r4
   137e8:	mov	r1, r5
   137ec:	mov	r2, r7
   137f0:	bl	15538 <table_get_ushort@@Base>
   137f4:	mov	r3, r0
   137f8:	mov	r0, sl
   137fc:	mov	r1, r5
   13800:	mov	r2, r7
   13804:	bl	15cdc <table_set_ushort@@Base>
   13808:	b	135a4 <table_dupe@@Base+0xd0>
   1380c:	mov	r0, r4
   13810:	mov	r1, r5
   13814:	mov	r2, r7
   13818:	bl	1554c <table_get_long@@Base>
   1381c:	mov	r3, r0
   13820:	mov	r0, sl
   13824:	mov	r1, r5
   13828:	mov	r2, r7
   1382c:	bl	15d04 <table_set_long@@Base>
   13830:	b	135a4 <table_dupe@@Base+0xd0>
   13834:	mov	r0, r4
   13838:	mov	r1, r5
   1383c:	mov	r2, r7
   13840:	bl	15560 <table_get_ulong@@Base>
   13844:	mov	r3, r0
   13848:	mov	r0, sl
   1384c:	mov	r1, r5
   13850:	mov	r2, r7
   13854:	bl	15d2c <table_set_ulong@@Base>
   13858:	b	135a4 <table_dupe@@Base+0xd0>
   1385c:	mov	r0, r4
   13860:	mov	r1, r5
   13864:	mov	r2, r7
   13868:	bl	15574 <table_get_llong@@Base>
   1386c:	stm	sp, {r0, r1}
   13870:	mov	r0, sl
   13874:	mov	r1, r5
   13878:	mov	r2, r7
   1387c:	bl	15d54 <table_set_llong@@Base>
   13880:	b	135a4 <table_dupe@@Base+0xd0>
   13884:	mov	r0, r4
   13888:	mov	r1, r5
   1388c:	mov	r2, r7
   13890:	bl	15588 <table_get_ullong@@Base>
   13894:	stm	sp, {r0, r1}
   13898:	mov	r0, sl
   1389c:	mov	r1, r5
   138a0:	mov	r2, r7
   138a4:	bl	15d88 <table_set_ullong@@Base>
   138a8:	b	135a4 <table_dupe@@Base+0xd0>
   138ac:	mov	r0, r4
   138b0:	mov	r1, r5
   138b4:	mov	r2, r7
   138b8:	bl	1559c <table_get_float@@Base>
   138bc:	mov	r0, sl
   138c0:	mov	r1, r5
   138c4:	mov	r2, r7
   138c8:	bl	15dbc <table_set_float@@Base>
   138cc:	b	135a4 <table_dupe@@Base+0xd0>
   138d0:	mov	r0, r4
   138d4:	mov	r1, r5
   138d8:	mov	r2, r7
   138dc:	bl	155b0 <table_get_double@@Base>
   138e0:	mov	r0, sl
   138e4:	mov	r1, r5
   138e8:	mov	r2, r7
   138ec:	bl	15de4 <table_set_double@@Base>
   138f0:	b	135a4 <table_dupe@@Base+0xd0>
   138f4:	mov	r0, r4
   138f8:	mov	r1, r5
   138fc:	mov	r2, r7
   13900:	bl	155c4 <table_get_ldouble@@Base>
   13904:	mov	r0, sl
   13908:	mov	r1, r5
   1390c:	mov	r2, r7
   13910:	bl	15e0c <table_set_ldouble@@Base>
   13914:	b	135a4 <table_dupe@@Base+0xd0>
   13918:	mov	r0, r4
   1391c:	mov	r1, r5
   13920:	mov	r2, r7
   13924:	bl	155d8 <table_get_char@@Base>
   13928:	mov	r3, r0
   1392c:	mov	r0, sl
   13930:	mov	r1, r5
   13934:	mov	r2, r7
   13938:	bl	15e54 <table_set_char@@Base>
   1393c:	b	135a4 <table_dupe@@Base+0xd0>
   13940:	mov	r0, r4
   13944:	mov	r1, r5
   13948:	mov	r2, r7
   1394c:	bl	155ec <table_get_uchar@@Base>
   13950:	mov	r3, r0
   13954:	mov	r0, sl
   13958:	mov	r1, r5
   1395c:	mov	r2, r7
   13960:	bl	15e7c <table_set_uchar@@Base>
   13964:	b	135a4 <table_dupe@@Base+0xd0>
   13968:	mov	r0, r4
   1396c:	mov	r1, r5
   13970:	mov	r2, r7
   13974:	bl	15600 <table_get_string@@Base>
   13978:	mov	r3, r0
   1397c:	mov	r0, sl
   13980:	mov	r1, r5
   13984:	mov	r2, r7
   13988:	bl	15e34 <table_set_string@@Base>
   1398c:	b	135a4 <table_dupe@@Base+0xd0>
   13990:	mov	r0, r4
   13994:	mov	r1, r5
   13998:	mov	r2, r7
   1399c:	bl	15448 <table_get_bool@@Base>
   139a0:	mov	r3, r0
   139a4:	mov	r0, sl
   139a8:	mov	r1, r5
   139ac:	mov	r2, r7
   139b0:	bl	15ae4 <table_set_bool@@Base>
   139b4:	b	135a4 <table_dupe@@Base+0xd0>
   139b8:	mov	r0, sl
   139bc:	sub	sp, fp, #28
   139c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000139c4 <table_get_major_version@@Base>:
   139c4:	mov	r0, #0
   139c8:	bx	lr

000139cc <table_get_minor_version@@Base>:
   139cc:	mov	r0, #0
   139d0:	bx	lr

000139d4 <table_get_patch_version@@Base>:
   139d4:	mov	r0, #0
   139d8:	bx	lr

000139dc <table_get_version@@Base>:
   139dc:	movw	r0, #27021	; 0x698d
   139e0:	movt	r0, #1
   139e4:	bx	lr

000139e8 <table_get_callback_length@@Base>:
   139e8:	ldr	r0, [r0, #32]
   139ec:	bx	lr

000139f0 <table_register_callback@@Base>:
   139f0:	push	{r4, r5, r6, r7, fp, lr}
   139f4:	add	fp, sp, #16
   139f8:	sub	sp, sp, #8
   139fc:	mov	r5, r3
   13a00:	mov	r6, r2
   13a04:	mov	r7, r1
   13a08:	mov	r4, r0
   13a0c:	bl	13a80 <table_register_callback@@Base+0x90>
   13a10:	cmp	r0, #1
   13a14:	blt	13a30 <table_register_callback@@Base+0x40>
   13a18:	ldr	r1, [r4, #44]	; 0x2c
   13a1c:	ldr	r2, [r1, r0, lsl #2]
   13a20:	orr	r2, r2, r5
   13a24:	str	r2, [r1, r0, lsl #2]
   13a28:	sub	sp, fp, #16
   13a2c:	pop	{r4, r5, r6, r7, fp, pc}
   13a30:	ldr	r0, [r4, #32]
   13a34:	ldr	r1, [r4, #48]	; 0x30
   13a38:	udiv	r2, r0, r1
   13a3c:	mls	r0, r2, r1, r0
   13a40:	cmp	r0, #0
   13a44:	moveq	r0, r4
   13a48:	bleq	13adc <table_register_callback@@Base+0xec>
   13a4c:	mov	r0, r4
   13a50:	bl	139e8 <table_get_callback_length@@Base>
   13a54:	mov	r1, r0
   13a58:	str	r5, [sp]
   13a5c:	mov	r0, r4
   13a60:	mov	r2, r7
   13a64:	mov	r3, r6
   13a68:	bl	13b34 <table_register_callback@@Base+0x144>
   13a6c:	ldr	r0, [r4, #32]
   13a70:	add	r0, r0, #1
   13a74:	str	r0, [r4, #32]
   13a78:	sub	sp, fp, #16
   13a7c:	pop	{r4, r5, r6, r7, fp, pc}
   13a80:	push	{r4, sl, fp, lr}
   13a84:	add	fp, sp, #8
   13a88:	mov	ip, r0
   13a8c:	ldr	r3, [r0, #32]
   13a90:	mvn	r0, #0
   13a94:	cmp	r3, #1
   13a98:	blt	13ad8 <table_register_callback@@Base+0xe8>
   13a9c:	ldr	lr, [ip, #36]	; 0x24
   13aa0:	mov	r3, #0
   13aa4:	b	13ab8 <table_register_callback@@Base+0xc8>
   13aa8:	add	r3, r3, #1
   13aac:	ldr	r4, [ip, #32]
   13ab0:	cmp	r3, r4
   13ab4:	bge	13ad8 <table_register_callback@@Base+0xe8>
   13ab8:	ldr	r4, [lr, r3, lsl #2]
   13abc:	cmp	r4, r1
   13ac0:	bne	13aa8 <table_register_callback@@Base+0xb8>
   13ac4:	ldr	r4, [ip, #40]	; 0x28
   13ac8:	ldr	r4, [r4, r3, lsl #2]
   13acc:	cmp	r4, r2
   13ad0:	bne	13aa8 <table_register_callback@@Base+0xb8>
   13ad4:	mov	r0, r3
   13ad8:	pop	{r4, sl, fp, pc}
   13adc:	push	{r4, sl, fp, lr}
   13ae0:	add	fp, sp, #8
   13ae4:	mov	r4, r0
   13ae8:	ldr	r0, [r0, #36]	; 0x24
   13aec:	ldr	r1, [r4, #48]	; 0x30
   13af0:	ldr	r2, [r4, #52]	; 0x34
   13af4:	add	r1, r2, r1
   13af8:	str	r1, [r4, #52]	; 0x34
   13afc:	lsl	r1, r1, #2
   13b00:	bl	12f9c <realloc@plt>
   13b04:	str	r0, [r4, #36]	; 0x24
   13b08:	ldr	r0, [r4, #40]	; 0x28
   13b0c:	ldr	r1, [r4, #52]	; 0x34
   13b10:	lsl	r1, r1, #2
   13b14:	bl	12f9c <realloc@plt>
   13b18:	str	r0, [r4, #40]	; 0x28
   13b1c:	ldr	r0, [r4, #44]	; 0x2c
   13b20:	ldr	r1, [r4, #52]	; 0x34
   13b24:	lsl	r1, r1, #2
   13b28:	bl	12f9c <realloc@plt>
   13b2c:	str	r0, [r4, #44]	; 0x2c
   13b30:	pop	{r4, sl, fp, pc}
   13b34:	ldr	ip, [r0, #36]	; 0x24
   13b38:	str	r2, [ip, r1, lsl #2]
   13b3c:	ldr	r2, [r0, #40]	; 0x28
   13b40:	str	r3, [r2, r1, lsl #2]
   13b44:	ldr	r0, [r0, #44]	; 0x2c
   13b48:	ldr	r2, [sp]
   13b4c:	str	r2, [r0, r1, lsl #2]
   13b50:	bx	lr

00013b54 <table_unregister_callback@@Base>:
   13b54:	push	{r4, sl, fp, lr}
   13b58:	add	fp, sp, #8
   13b5c:	mov	r4, r0
   13b60:	bl	13a80 <table_register_callback@@Base+0x90>
   13b64:	cmn	r0, #1
   13b68:	popeq	{r4, sl, fp, pc}
   13b6c:	ldr	r1, [r4, #32]
   13b70:	sub	r2, r1, #1
   13b74:	cmp	r0, r2
   13b78:	bge	13bc0 <table_unregister_callback@@Base+0x6c>
   13b7c:	mov	r1, #4
   13b80:	add	r1, r1, r0, lsl #2
   13b84:	ldr	r2, [r4, #36]	; 0x24
   13b88:	ldr	r3, [r2, r1]!
   13b8c:	str	r3, [r2, #-4]
   13b90:	ldr	r2, [r4, #40]	; 0x28
   13b94:	ldr	r3, [r2, r1]!
   13b98:	str	r3, [r2, #-4]
   13b9c:	ldr	r2, [r4, #44]	; 0x2c
   13ba0:	ldr	r3, [r2, r1]!
   13ba4:	str	r3, [r2, #-4]
   13ba8:	add	r1, r1, #4
   13bac:	add	r0, r0, #1
   13bb0:	ldr	r2, [r4, #32]
   13bb4:	sub	r2, r2, #1
   13bb8:	cmp	r0, r2
   13bbc:	blt	13b84 <table_unregister_callback@@Base+0x30>
   13bc0:	str	r2, [r4, #32]
   13bc4:	ldr	r0, [r4, #48]	; 0x30
   13bc8:	udiv	r1, r2, r0
   13bcc:	mls	r0, r1, r0, r2
   13bd0:	cmp	r0, #0
   13bd4:	beq	13bdc <table_unregister_callback@@Base+0x88>
   13bd8:	pop	{r4, sl, fp, pc}
   13bdc:	mov	r0, r4
   13be0:	pop	{r4, sl, fp, lr}
   13be4:	b	13be8 <table_unregister_callback@@Base+0x94>
   13be8:	push	{r4, sl, fp, lr}
   13bec:	add	fp, sp, #8
   13bf0:	mov	r4, r0
   13bf4:	ldr	r0, [r0, #36]	; 0x24
   13bf8:	ldr	r1, [r4, #48]	; 0x30
   13bfc:	ldr	r2, [r4, #52]	; 0x34
   13c00:	subs	r1, r2, r1
   13c04:	str	r1, [r4, #52]	; 0x34
   13c08:	beq	13c44 <table_unregister_callback@@Base+0xf0>
   13c0c:	lsl	r1, r1, #2
   13c10:	bl	12f9c <realloc@plt>
   13c14:	str	r0, [r4, #36]	; 0x24
   13c18:	ldr	r0, [r4, #40]	; 0x28
   13c1c:	ldr	r1, [r4, #52]	; 0x34
   13c20:	lsl	r1, r1, #2
   13c24:	bl	12f9c <realloc@plt>
   13c28:	str	r0, [r4, #40]	; 0x28
   13c2c:	ldr	r0, [r4, #44]	; 0x2c
   13c30:	ldr	r1, [r4, #52]	; 0x34
   13c34:	lsl	r1, r1, #2
   13c38:	bl	12f9c <realloc@plt>
   13c3c:	str	r0, [r4, #44]	; 0x2c
   13c40:	pop	{r4, sl, fp, pc}
   13c44:	bl	12f90 <free@plt>
   13c48:	ldr	r0, [r4, #40]	; 0x28
   13c4c:	bl	12f90 <free@plt>
   13c50:	ldr	r0, [r4, #44]	; 0x2c
   13c54:	bl	12f90 <free@plt>
   13c58:	mov	r0, #0
   13c5c:	str	r0, [r4, #36]	; 0x24
   13c60:	str	r0, [r4, #40]	; 0x28
   13c64:	str	r0, [r4, #44]	; 0x2c
   13c68:	pop	{r4, sl, fp, pc}

00013c6c <table_notify@@Base>:
   13c6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c70:	add	fp, sp, #24
   13c74:	sub	sp, sp, #8
   13c78:	mov	r7, r0
   13c7c:	ldr	r0, [r0, #32]
   13c80:	cmp	r0, #1
   13c84:	blt	13ce8 <table_notify@@Base+0x7c>
   13c88:	mov	r4, r3
   13c8c:	mov	r8, r2
   13c90:	mov	r9, r1
   13c94:	mov	r5, #0
   13c98:	b	13cac <table_notify@@Base+0x40>
   13c9c:	ldr	r0, [r7, #32]
   13ca0:	add	r5, r5, #1
   13ca4:	cmp	r5, r0
   13ca8:	bge	13ce8 <table_notify@@Base+0x7c>
   13cac:	ldr	r0, [r7, #44]	; 0x2c
   13cb0:	ldr	r0, [r0, r5, lsl #2]
   13cb4:	tst	r0, r4
   13cb8:	beq	13c9c <table_notify@@Base+0x30>
   13cbc:	ldr	r0, [r7, #36]	; 0x24
   13cc0:	ldr	r1, [r7, #40]	; 0x28
   13cc4:	ldr	r6, [r0, r5, lsl #2]
   13cc8:	ldr	r0, [r1, r5, lsl #2]
   13ccc:	str	r0, [sp]
   13cd0:	mov	r0, r7
   13cd4:	mov	r1, r9
   13cd8:	mov	r2, r8
   13cdc:	mov	r3, r4
   13ce0:	blx	r6
   13ce4:	b	13c9c <table_notify@@Base+0x30>
   13ce8:	sub	sp, fp, #24
   13cec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013cf0 <table_column_init@@Base>:
   13cf0:	push	{r4, r5, r6, r7, fp, lr}
   13cf4:	add	fp, sp, #16
   13cf8:	mov	r4, r3
   13cfc:	mov	r5, r2
   13d00:	bl	13d38 <table_get_col_ptr@@Base>
   13d04:	mov	r6, r0
   13d08:	mov	r0, r5
   13d0c:	bl	12fd8 <strlen@plt>
   13d10:	add	r0, r0, #1
   13d14:	bl	12fb4 <malloc@plt>
   13d18:	str	r0, [r6]
   13d1c:	ldr	r7, [fp, #8]
   13d20:	cmp	r0, #0
   13d24:	beq	13d30 <table_column_init@@Base+0x40>
   13d28:	mov	r1, r5
   13d2c:	bl	12fa8 <strcpy@plt>
   13d30:	stmib	r6, {r4, r7}
   13d34:	pop	{r4, r5, r6, r7, fp, pc}

00013d38 <table_get_col_ptr@@Base>:
   13d38:	ldr	r0, [r0]
   13d3c:	add	r1, r1, r1, lsl #1
   13d40:	add	r0, r0, r1, lsl #2
   13d44:	bx	lr

00013d48 <table_column_destroy@@Base>:
   13d48:	push	{fp, lr}
   13d4c:	mov	fp, sp
   13d50:	bl	13d38 <table_get_col_ptr@@Base>
   13d54:	ldr	r0, [r0]
   13d58:	cmp	r0, #0
   13d5c:	popeq	{fp, pc}
   13d60:	pop	{fp, lr}
   13d64:	b	12f90 <free@plt>

00013d68 <table_get_column_length@@Base>:
   13d68:	ldr	r0, [r0, #4]
   13d6c:	bx	lr

00013d70 <table_get_column@@Base>:
   13d70:	push	{r4, r5, r6, r7, fp, lr}
   13d74:	add	fp, sp, #16
   13d78:	mov	r6, r1
   13d7c:	mov	r7, r0
   13d80:	bl	13d68 <table_get_column_length@@Base>
   13d84:	mov	r4, r0
   13d88:	mov	r5, #0
   13d8c:	cmp	r0, #1
   13d90:	blt	13db8 <table_get_column@@Base+0x48>
   13d94:	mov	r0, r7
   13d98:	mov	r1, r5
   13d9c:	bl	13dc8 <table_get_column_name@@Base>
   13da0:	mov	r1, r6
   13da4:	bl	12f78 <strcmp@plt>
   13da8:	cmp	r0, #0
   13dac:	addne	r5, r5, #1
   13db0:	cmpne	r4, r5
   13db4:	bne	13d94 <table_get_column@@Base+0x24>
   13db8:	cmp	r5, r4
   13dbc:	mvneq	r5, #0
   13dc0:	mov	r0, r5
   13dc4:	pop	{r4, r5, r6, r7, fp, pc}

00013dc8 <table_get_column_name@@Base>:
   13dc8:	push	{fp, lr}
   13dcc:	mov	fp, sp
   13dd0:	bl	13d38 <table_get_col_ptr@@Base>
   13dd4:	ldr	r0, [r0]
   13dd8:	pop	{fp, pc}

00013ddc <table_get_column_data_type@@Base>:
   13ddc:	push	{fp, lr}
   13de0:	mov	fp, sp
   13de4:	bl	13d38 <table_get_col_ptr@@Base>
   13de8:	ldr	r0, [r0, #4]
   13dec:	pop	{fp, pc}

00013df0 <table_add_column@@Base>:
   13df0:	push	{r4, r5, r6, sl, fp, lr}
   13df4:	add	fp, sp, #16
   13df8:	mov	r5, r2
   13dfc:	mov	r6, r1
   13e00:	mov	r4, r0
   13e04:	bl	13d68 <table_get_column_length@@Base>
   13e08:	ldr	r1, [r4, #8]
   13e0c:	udiv	r2, r0, r1
   13e10:	mls	r0, r2, r1, r0
   13e14:	cmp	r0, #0
   13e18:	moveq	r0, r4
   13e1c:	bleq	13e5c <table_add_column@@Base+0x6c>
   13e20:	mov	r0, r4
   13e24:	mov	r1, r6
   13e28:	mov	r2, r5
   13e2c:	bl	13ed8 <table_add_column@@Base+0xe8>
   13e30:	mov	r0, r4
   13e34:	bl	13d68 <table_get_column_length@@Base>
   13e38:	mov	r2, r0
   13e3c:	mov	r0, r4
   13e40:	mvn	r1, #0
   13e44:	mov	r3, #8
   13e48:	bl	13c6c <table_notify@@Base>
   13e4c:	ldr	r0, [r4, #4]
   13e50:	add	r1, r0, #1
   13e54:	str	r1, [r4, #4]
   13e58:	pop	{r4, r5, r6, sl, fp, pc}
   13e5c:	push	{r4, r5, r6, r7, fp, lr}
   13e60:	add	fp, sp, #16
   13e64:	mov	r4, r0
   13e68:	ldr	r0, [r0]
   13e6c:	ldr	r1, [r4, #8]
   13e70:	ldr	r2, [r4, #12]
   13e74:	add	r1, r2, r1
   13e78:	str	r1, [r4, #12]
   13e7c:	add	r1, r1, r1, lsl #1
   13e80:	lsl	r1, r1, #2
   13e84:	bl	12f9c <realloc@plt>
   13e88:	str	r0, [r4]
   13e8c:	mov	r0, r4
   13e90:	bl	156a4 <table_get_row_length@@Base>
   13e94:	cmp	r0, #1
   13e98:	blt	13ed4 <table_add_column@@Base+0xe4>
   13e9c:	mov	r5, r0
   13ea0:	mov	r6, #0
   13ea4:	mov	r0, r4
   13ea8:	mov	r1, r6
   13eac:	bl	15630 <table_get_row_ptr@@Base>
   13eb0:	mov	r7, r0
   13eb4:	ldr	r0, [r0]
   13eb8:	ldr	r1, [r4, #12]
   13ebc:	lsl	r1, r1, #2
   13ec0:	bl	12f9c <realloc@plt>
   13ec4:	str	r0, [r7]
   13ec8:	add	r6, r6, #1
   13ecc:	cmp	r5, r6
   13ed0:	bne	13ea4 <table_add_column@@Base+0xb4>
   13ed4:	pop	{r4, r5, r6, r7, fp, pc}
   13ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13edc:	add	fp, sp, #24
   13ee0:	sub	sp, sp, #8
   13ee4:	mov	r7, r2
   13ee8:	mov	r8, r1
   13eec:	mov	r4, r0
   13ef0:	bl	156a4 <table_get_row_length@@Base>
   13ef4:	mov	r5, r0
   13ef8:	mov	r0, r4
   13efc:	bl	13d68 <table_get_column_length@@Base>
   13f00:	mov	r6, r0
   13f04:	mov	r0, r7
   13f08:	bl	14808 <table_get_default_compare_function_for_data_type@@Base>
   13f0c:	str	r0, [sp]
   13f10:	mov	r0, r4
   13f14:	mov	r1, r6
   13f18:	mov	r2, r8
   13f1c:	mov	r3, r7
   13f20:	bl	13cf0 <table_column_init@@Base>
   13f24:	cmp	r5, #1
   13f28:	blt	13f4c <table_add_column@@Base+0x15c>
   13f2c:	mov	r7, #0
   13f30:	mov	r0, r4
   13f34:	mov	r1, r7
   13f38:	mov	r2, r6
   13f3c:	bl	15ec4 <table_cell_init@@Base>
   13f40:	add	r7, r7, #1
   13f44:	cmp	r5, r7
   13f48:	bne	13f30 <table_add_column@@Base+0x140>
   13f4c:	sub	sp, fp, #24
   13f50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013f54 <table_remove_column@@Base>:
   13f54:	push	{r4, r5, fp, lr}
   13f58:	add	fp, sp, #8
   13f5c:	mov	r4, r1
   13f60:	mov	r5, r0
   13f64:	bl	13fb0 <table_remove_column@@Base+0x5c>
   13f68:	ldr	r0, [r5, #4]
   13f6c:	sub	r0, r0, #1
   13f70:	str	r0, [r5, #4]
   13f74:	mov	r0, r5
   13f78:	bl	13d68 <table_get_column_length@@Base>
   13f7c:	ldr	r1, [r5, #8]
   13f80:	udiv	r2, r0, r1
   13f84:	mls	r0, r2, r1, r0
   13f88:	cmp	r0, #0
   13f8c:	moveq	r0, r5
   13f90:	bleq	14080 <table_remove_column@@Base+0x12c>
   13f94:	mov	r0, r5
   13f98:	mvn	r1, #0
   13f9c:	mov	r2, r4
   13fa0:	mov	r3, #16
   13fa4:	bl	13c6c <table_notify@@Base>
   13fa8:	mov	r0, #0
   13fac:	pop	{r4, r5, fp, pc}
   13fb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fb4:	add	fp, sp, #24
   13fb8:	mov	r4, r1
   13fbc:	mov	r5, r0
   13fc0:	bl	13d48 <table_column_destroy@@Base>
   13fc4:	mov	r0, r5
   13fc8:	bl	13d68 <table_get_column_length@@Base>
   13fcc:	sub	r6, r0, #1
   13fd0:	cmp	r6, r4
   13fd4:	ble	1400c <table_remove_column@@Base+0xb8>
   13fd8:	mvn	r1, r4
   13fdc:	add	r0, r1, r0
   13fe0:	add	r1, r4, r4, lsl #1
   13fe4:	lsl	r1, r1, #2
   13fe8:	ldr	r2, [r5]
   13fec:	add	r2, r2, r1
   13ff0:	vldr	d16, [r2, #12]
   13ff4:	ldr	r3, [r2, #20]
   13ff8:	str	r3, [r2, #8]
   13ffc:	vstr	d16, [r2]
   14000:	add	r1, r1, #12
   14004:	subs	r0, r0, #1
   14008:	bne	13fe8 <table_remove_column@@Base+0x94>
   1400c:	mov	r0, r5
   14010:	bl	156a4 <table_get_row_length@@Base>
   14014:	cmp	r0, #1
   14018:	blt	1407c <table_remove_column@@Base+0x128>
   1401c:	mov	r8, r0
   14020:	mov	r7, #0
   14024:	b	14034 <table_remove_column@@Base+0xe0>
   14028:	add	r7, r7, #1
   1402c:	cmp	r7, r8
   14030:	beq	1407c <table_remove_column@@Base+0x128>
   14034:	mov	r0, r5
   14038:	mov	r1, r7
   1403c:	mov	r2, r4
   14040:	bl	15ef8 <table_cell_destroy@@Base>
   14044:	mov	r0, r5
   14048:	mov	r1, r7
   1404c:	bl	15630 <table_get_row_ptr@@Base>
   14050:	cmp	r6, r4
   14054:	ble	14028 <table_remove_column@@Base+0xd4>
   14058:	mov	r1, r4
   1405c:	ldr	r2, [r0]
   14060:	add	r3, r2, r1, lsl #2
   14064:	ldr	r3, [r3, #4]
   14068:	str	r3, [r2, r1, lsl #2]
   1406c:	add	r1, r1, #1
   14070:	cmp	r6, r1
   14074:	bne	1405c <table_remove_column@@Base+0x108>
   14078:	b	14028 <table_remove_column@@Base+0xd4>
   1407c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14080:	push	{r4, r5, r6, r7, fp, lr}
   14084:	add	fp, sp, #16
   14088:	mov	r4, r0
   1408c:	ldr	r0, [r0]
   14090:	ldr	r1, [r4, #8]
   14094:	ldr	r2, [r4, #12]
   14098:	sub	r1, r2, r1
   1409c:	str	r1, [r4, #12]
   140a0:	add	r1, r1, r1, lsl #1
   140a4:	lsl	r1, r1, #2
   140a8:	bl	12f9c <realloc@plt>
   140ac:	str	r0, [r4]
   140b0:	mov	r0, r4
   140b4:	bl	156a4 <table_get_row_length@@Base>
   140b8:	cmp	r0, #1
   140bc:	blt	140f8 <table_remove_column@@Base+0x1a4>
   140c0:	mov	r5, r0
   140c4:	mov	r6, #0
   140c8:	mov	r0, r4
   140cc:	mov	r1, r6
   140d0:	bl	15630 <table_get_row_ptr@@Base>
   140d4:	mov	r7, r0
   140d8:	ldr	r0, [r0]
   140dc:	ldr	r1, [r4, #12]
   140e0:	lsl	r1, r1, #2
   140e4:	bl	12f9c <realloc@plt>
   140e8:	str	r0, [r7]
   140ec:	add	r6, r6, #1
   140f0:	cmp	r5, r6
   140f4:	bne	140c8 <table_remove_column@@Base+0x174>
   140f8:	pop	{r4, r5, r6, r7, fp, pc}

000140fc <table_get_column_compare_function@@Base>:
   140fc:	push	{fp, lr}
   14100:	mov	fp, sp
   14104:	bl	13d38 <table_get_col_ptr@@Base>
   14108:	ldr	r0, [r0, #8]
   1410c:	pop	{fp, pc}

00014110 <table_set_column_compare_function@@Base>:
   14110:	push	{r4, sl, fp, lr}
   14114:	add	fp, sp, #8
   14118:	mov	r4, r2
   1411c:	bl	13d38 <table_get_col_ptr@@Base>
   14120:	str	r4, [r0, #8]
   14124:	pop	{r4, sl, fp, pc}

00014128 <table_compare_bool@@Base>:
   14128:	cmp	r0, #0
   1412c:	beq	14160 <table_compare_bool@@Base+0x38>
   14130:	cmp	r1, #0
   14134:	moveq	r1, #1
   14138:	moveq	r0, r1
   1413c:	bxeq	lr
   14140:	ldrb	r2, [r1]
   14144:	ldrb	r0, [r0]
   14148:	mov	r1, #0
   1414c:	cmp	r0, r2
   14150:	mvncc	r1, #0
   14154:	movwhi	r1, #1
   14158:	mov	r0, r1
   1415c:	bx	lr
   14160:	cmp	r1, #0
   14164:	mvnne	r1, #0
   14168:	mov	r0, r1
   1416c:	bx	lr

00014170 <table_compare_int@@Base>:
   14170:	cmp	r0, #0
   14174:	beq	141a8 <table_compare_int@@Base+0x38>
   14178:	cmp	r1, #0
   1417c:	moveq	r1, #1
   14180:	moveq	r0, r1
   14184:	bxeq	lr
   14188:	ldr	r2, [r1]
   1418c:	ldr	r0, [r0]
   14190:	mov	r1, #0
   14194:	cmp	r0, r2
   14198:	mvnlt	r1, #0
   1419c:	movwgt	r1, #1
   141a0:	mov	r0, r1
   141a4:	bx	lr
   141a8:	cmp	r1, #0
   141ac:	mvnne	r1, #0
   141b0:	mov	r0, r1
   141b4:	bx	lr

000141b8 <table_compare_uint@@Base>:
   141b8:	cmp	r0, #0
   141bc:	beq	141f0 <table_compare_uint@@Base+0x38>
   141c0:	cmp	r1, #0
   141c4:	moveq	r1, #1
   141c8:	moveq	r0, r1
   141cc:	bxeq	lr
   141d0:	ldr	r2, [r1]
   141d4:	ldr	r0, [r0]
   141d8:	mov	r1, #0
   141dc:	cmp	r0, r2
   141e0:	mvncc	r1, #0
   141e4:	movwhi	r1, #1
   141e8:	mov	r0, r1
   141ec:	bx	lr
   141f0:	cmp	r1, #0
   141f4:	mvnne	r1, #0
   141f8:	mov	r0, r1
   141fc:	bx	lr

00014200 <table_compare_int8@@Base>:
   14200:	cmp	r0, #0
   14204:	beq	14238 <table_compare_int8@@Base+0x38>
   14208:	cmp	r1, #0
   1420c:	moveq	r1, #1
   14210:	moveq	r0, r1
   14214:	bxeq	lr
   14218:	ldrsb	r2, [r1]
   1421c:	ldrsb	r0, [r0]
   14220:	mov	r1, #0
   14224:	cmp	r0, r2
   14228:	mvnlt	r1, #0
   1422c:	movwgt	r1, #1
   14230:	mov	r0, r1
   14234:	bx	lr
   14238:	cmp	r1, #0
   1423c:	mvnne	r1, #0
   14240:	mov	r0, r1
   14244:	bx	lr

00014248 <table_compare_uint8@@Base>:
   14248:	cmp	r0, #0
   1424c:	beq	14280 <table_compare_uint8@@Base+0x38>
   14250:	cmp	r1, #0
   14254:	moveq	r1, #1
   14258:	moveq	r0, r1
   1425c:	bxeq	lr
   14260:	ldrb	r2, [r1]
   14264:	ldrb	r0, [r0]
   14268:	mov	r1, #0
   1426c:	cmp	r0, r2
   14270:	mvncc	r1, #0
   14274:	movwhi	r1, #1
   14278:	mov	r0, r1
   1427c:	bx	lr
   14280:	cmp	r1, #0
   14284:	mvnne	r1, #0
   14288:	mov	r0, r1
   1428c:	bx	lr

00014290 <table_compare_int16@@Base>:
   14290:	cmp	r0, #0
   14294:	beq	142c8 <table_compare_int16@@Base+0x38>
   14298:	cmp	r1, #0
   1429c:	moveq	r1, #1
   142a0:	moveq	r0, r1
   142a4:	bxeq	lr
   142a8:	ldrsh	r2, [r1]
   142ac:	ldrsh	r0, [r0]
   142b0:	mov	r1, #0
   142b4:	cmp	r0, r2
   142b8:	mvnlt	r1, #0
   142bc:	movwgt	r1, #1
   142c0:	mov	r0, r1
   142c4:	bx	lr
   142c8:	cmp	r1, #0
   142cc:	mvnne	r1, #0
   142d0:	mov	r0, r1
   142d4:	bx	lr

000142d8 <table_compare_uint16@@Base>:
   142d8:	cmp	r0, #0
   142dc:	beq	14310 <table_compare_uint16@@Base+0x38>
   142e0:	cmp	r1, #0
   142e4:	moveq	r1, #1
   142e8:	moveq	r0, r1
   142ec:	bxeq	lr
   142f0:	ldrh	r2, [r1]
   142f4:	ldrh	r0, [r0]
   142f8:	mov	r1, #0
   142fc:	cmp	r0, r2
   14300:	mvncc	r1, #0
   14304:	movwhi	r1, #1
   14308:	mov	r0, r1
   1430c:	bx	lr
   14310:	cmp	r1, #0
   14314:	mvnne	r1, #0
   14318:	mov	r0, r1
   1431c:	bx	lr

00014320 <table_compare_int32@@Base>:
   14320:	cmp	r0, #0
   14324:	beq	14358 <table_compare_int32@@Base+0x38>
   14328:	cmp	r1, #0
   1432c:	moveq	r1, #1
   14330:	moveq	r0, r1
   14334:	bxeq	lr
   14338:	ldr	r2, [r1]
   1433c:	ldr	r0, [r0]
   14340:	mov	r1, #0
   14344:	cmp	r0, r2
   14348:	mvnlt	r1, #0
   1434c:	movwgt	r1, #1
   14350:	mov	r0, r1
   14354:	bx	lr
   14358:	cmp	r1, #0
   1435c:	mvnne	r1, #0
   14360:	mov	r0, r1
   14364:	bx	lr

00014368 <table_compare_uint32@@Base>:
   14368:	cmp	r0, #0
   1436c:	beq	143a0 <table_compare_uint32@@Base+0x38>
   14370:	cmp	r1, #0
   14374:	moveq	r1, #1
   14378:	moveq	r0, r1
   1437c:	bxeq	lr
   14380:	ldr	r2, [r1]
   14384:	ldr	r0, [r0]
   14388:	mov	r1, #0
   1438c:	cmp	r0, r2
   14390:	mvncc	r1, #0
   14394:	movwhi	r1, #1
   14398:	mov	r0, r1
   1439c:	bx	lr
   143a0:	cmp	r1, #0
   143a4:	mvnne	r1, #0
   143a8:	mov	r0, r1
   143ac:	bx	lr

000143b0 <table_compare_int64@@Base>:
   143b0:	cmp	r0, #0
   143b4:	beq	14408 <table_compare_int64@@Base+0x58>
   143b8:	cmp	r1, #0
   143bc:	moveq	r1, #1
   143c0:	moveq	r0, r1
   143c4:	bxeq	lr
   143c8:	push	{r5, r7, fp, lr}
   143cc:	add	fp, sp, #8
   143d0:	ldm	r1, {r2, r7}
   143d4:	ldm	r0, {r0, r5}
   143d8:	mov	r1, #0
   143dc:	subs	r3, r0, r2
   143e0:	sbcs	r3, r5, r7
   143e4:	movwlt	r1, #1
   143e8:	cmp	r1, #0
   143ec:	mvnne	r1, #0
   143f0:	subs	r0, r2, r0
   143f4:	sbcs	r0, r7, r5
   143f8:	movwlt	r1, #1
   143fc:	pop	{r5, r7, fp, lr}
   14400:	mov	r0, r1
   14404:	bx	lr
   14408:	cmp	r1, #0
   1440c:	mvnne	r1, #0
   14410:	mov	r0, r1
   14414:	bx	lr

00014418 <table_compare_uint64@@Base>:
   14418:	cmp	r0, #0
   1441c:	beq	14470 <table_compare_uint64@@Base+0x58>
   14420:	cmp	r1, #0
   14424:	moveq	r1, #1
   14428:	moveq	r0, r1
   1442c:	bxeq	lr
   14430:	push	{r5, r7, fp, lr}
   14434:	add	fp, sp, #8
   14438:	ldm	r1, {r2, r7}
   1443c:	ldm	r0, {r0, r5}
   14440:	mov	r1, #0
   14444:	subs	r3, r0, r2
   14448:	sbcs	r3, r5, r7
   1444c:	movwcc	r1, #1
   14450:	cmp	r1, #0
   14454:	mvnne	r1, #0
   14458:	subs	r0, r2, r0
   1445c:	sbcs	r0, r7, r5
   14460:	movwcc	r1, #1
   14464:	pop	{r5, r7, fp, lr}
   14468:	mov	r0, r1
   1446c:	bx	lr
   14470:	cmp	r1, #0
   14474:	mvnne	r1, #0
   14478:	mov	r0, r1
   1447c:	bx	lr

00014480 <table_compare_short@@Base>:
   14480:	cmp	r0, #0
   14484:	beq	144b8 <table_compare_short@@Base+0x38>
   14488:	cmp	r1, #0
   1448c:	moveq	r1, #1
   14490:	moveq	r0, r1
   14494:	bxeq	lr
   14498:	ldrsh	r2, [r1]
   1449c:	ldrsh	r0, [r0]
   144a0:	mov	r1, #0
   144a4:	cmp	r0, r2
   144a8:	mvnlt	r1, #0
   144ac:	movwgt	r1, #1
   144b0:	mov	r0, r1
   144b4:	bx	lr
   144b8:	cmp	r1, #0
   144bc:	mvnne	r1, #0
   144c0:	mov	r0, r1
   144c4:	bx	lr

000144c8 <table_compare_ushort@@Base>:
   144c8:	cmp	r0, #0
   144cc:	beq	14500 <table_compare_ushort@@Base+0x38>
   144d0:	cmp	r1, #0
   144d4:	moveq	r1, #1
   144d8:	moveq	r0, r1
   144dc:	bxeq	lr
   144e0:	ldrh	r2, [r1]
   144e4:	ldrh	r0, [r0]
   144e8:	mov	r1, #0
   144ec:	cmp	r0, r2
   144f0:	mvncc	r1, #0
   144f4:	movwhi	r1, #1
   144f8:	mov	r0, r1
   144fc:	bx	lr
   14500:	cmp	r1, #0
   14504:	mvnne	r1, #0
   14508:	mov	r0, r1
   1450c:	bx	lr

00014510 <table_compare_long@@Base>:
   14510:	cmp	r0, #0
   14514:	beq	14548 <table_compare_long@@Base+0x38>
   14518:	cmp	r1, #0
   1451c:	moveq	r1, #1
   14520:	moveq	r0, r1
   14524:	bxeq	lr
   14528:	ldr	r2, [r1]
   1452c:	ldr	r0, [r0]
   14530:	mov	r1, #0
   14534:	cmp	r0, r2
   14538:	mvnlt	r1, #0
   1453c:	movwgt	r1, #1
   14540:	mov	r0, r1
   14544:	bx	lr
   14548:	cmp	r1, #0
   1454c:	mvnne	r1, #0
   14550:	mov	r0, r1
   14554:	bx	lr

00014558 <table_compare_ulong@@Base>:
   14558:	cmp	r0, #0
   1455c:	beq	14590 <table_compare_ulong@@Base+0x38>
   14560:	cmp	r1, #0
   14564:	moveq	r1, #1
   14568:	moveq	r0, r1
   1456c:	bxeq	lr
   14570:	ldr	r2, [r1]
   14574:	ldr	r0, [r0]
   14578:	mov	r1, #0
   1457c:	cmp	r0, r2
   14580:	mvncc	r1, #0
   14584:	movwhi	r1, #1
   14588:	mov	r0, r1
   1458c:	bx	lr
   14590:	cmp	r1, #0
   14594:	mvnne	r1, #0
   14598:	mov	r0, r1
   1459c:	bx	lr

000145a0 <table_compare_llong@@Base>:
   145a0:	cmp	r0, #0
   145a4:	beq	145f8 <table_compare_llong@@Base+0x58>
   145a8:	cmp	r1, #0
   145ac:	moveq	r1, #1
   145b0:	moveq	r0, r1
   145b4:	bxeq	lr
   145b8:	push	{r5, r7, fp, lr}
   145bc:	add	fp, sp, #8
   145c0:	ldm	r1, {r2, r7}
   145c4:	ldm	r0, {r0, r5}
   145c8:	mov	r1, #0
   145cc:	subs	r3, r0, r2
   145d0:	sbcs	r3, r5, r7
   145d4:	movwlt	r1, #1
   145d8:	cmp	r1, #0
   145dc:	mvnne	r1, #0
   145e0:	subs	r0, r2, r0
   145e4:	sbcs	r0, r7, r5
   145e8:	movwlt	r1, #1
   145ec:	pop	{r5, r7, fp, lr}
   145f0:	mov	r0, r1
   145f4:	bx	lr
   145f8:	cmp	r1, #0
   145fc:	mvnne	r1, #0
   14600:	mov	r0, r1
   14604:	bx	lr

00014608 <table_compare_ullong@@Base>:
   14608:	cmp	r0, #0
   1460c:	beq	14640 <table_compare_ullong@@Base+0x38>
   14610:	cmp	r1, #0
   14614:	moveq	r1, #1
   14618:	moveq	r0, r1
   1461c:	bxeq	lr
   14620:	ldr	r2, [r1]
   14624:	ldr	r0, [r0]
   14628:	mov	r1, #0
   1462c:	cmp	r0, r2
   14630:	mvncc	r1, #0
   14634:	movwhi	r1, #1
   14638:	mov	r0, r1
   1463c:	bx	lr
   14640:	cmp	r1, #0
   14644:	mvnne	r1, #0
   14648:	mov	r0, r1
   1464c:	bx	lr

00014650 <table_compare_float@@Base>:
   14650:	cmp	r0, #0
   14654:	beq	1468c <table_compare_float@@Base+0x3c>
   14658:	cmp	r1, #0
   1465c:	moveq	r1, #1
   14660:	moveq	r0, r1
   14664:	bxeq	lr
   14668:	vldr	s0, [r1]
   1466c:	vldr	s2, [r0]
   14670:	mov	r1, #0
   14674:	vcmpe.f32	s2, s0
   14678:	vmrs	APSR_nzcv, fpscr
   1467c:	mvnmi	r1, #0
   14680:	movwgt	r1, #1
   14684:	mov	r0, r1
   14688:	bx	lr
   1468c:	cmp	r1, #0
   14690:	mvnne	r1, #0
   14694:	mov	r0, r1
   14698:	bx	lr

0001469c <table_compare_double@@Base>:
   1469c:	cmp	r0, #0
   146a0:	beq	146d8 <table_compare_double@@Base+0x3c>
   146a4:	cmp	r1, #0
   146a8:	moveq	r1, #1
   146ac:	moveq	r0, r1
   146b0:	bxeq	lr
   146b4:	vldr	d16, [r1]
   146b8:	vldr	d17, [r0]
   146bc:	mov	r1, #0
   146c0:	vcmpe.f64	d17, d16
   146c4:	vmrs	APSR_nzcv, fpscr
   146c8:	mvnmi	r1, #0
   146cc:	movwgt	r1, #1
   146d0:	mov	r0, r1
   146d4:	bx	lr
   146d8:	cmp	r1, #0
   146dc:	mvnne	r1, #0
   146e0:	mov	r0, r1
   146e4:	bx	lr

000146e8 <table_compare_ldouble@@Base>:
   146e8:	cmp	r0, #0
   146ec:	beq	14724 <table_compare_ldouble@@Base+0x3c>
   146f0:	cmp	r1, #0
   146f4:	moveq	r1, #1
   146f8:	moveq	r0, r1
   146fc:	bxeq	lr
   14700:	vldr	d16, [r1]
   14704:	vldr	d17, [r0]
   14708:	mov	r1, #0
   1470c:	vcmpe.f64	d17, d16
   14710:	vmrs	APSR_nzcv, fpscr
   14714:	mvnmi	r1, #0
   14718:	movwgt	r1, #1
   1471c:	mov	r0, r1
   14720:	bx	lr
   14724:	cmp	r1, #0
   14728:	mvnne	r1, #0
   1472c:	mov	r0, r1
   14730:	bx	lr

00014734 <table_compare_char@@Base>:
   14734:	cmp	r0, #0
   14738:	beq	1476c <table_compare_char@@Base+0x38>
   1473c:	cmp	r1, #0
   14740:	moveq	r1, #1
   14744:	moveq	r0, r1
   14748:	bxeq	lr
   1474c:	ldrb	r2, [r1]
   14750:	ldrb	r0, [r0]
   14754:	mov	r1, #0
   14758:	cmp	r0, r2
   1475c:	mvncc	r1, #0
   14760:	movwhi	r1, #1
   14764:	mov	r0, r1
   14768:	bx	lr
   1476c:	cmp	r1, #0
   14770:	mvnne	r1, #0
   14774:	mov	r0, r1
   14778:	bx	lr

0001477c <table_compare_uchar@@Base>:
   1477c:	cmp	r0, #0
   14780:	beq	147b4 <table_compare_uchar@@Base+0x38>
   14784:	cmp	r1, #0
   14788:	moveq	r1, #1
   1478c:	moveq	r0, r1
   14790:	bxeq	lr
   14794:	ldrb	r2, [r1]
   14798:	ldrb	r0, [r0]
   1479c:	mov	r1, #0
   147a0:	cmp	r0, r2
   147a4:	mvncc	r1, #0
   147a8:	movwhi	r1, #1
   147ac:	mov	r0, r1
   147b0:	bx	lr
   147b4:	cmp	r1, #0
   147b8:	mvnne	r1, #0
   147bc:	mov	r0, r1
   147c0:	bx	lr

000147c4 <table_compare_string@@Base>:
   147c4:	cmp	r0, #0
   147c8:	beq	147e0 <table_compare_string@@Base+0x1c>
   147cc:	cmp	r1, #0
   147d0:	moveq	r1, #1
   147d4:	moveq	r0, r1
   147d8:	bxeq	lr
   147dc:	b	12f78 <strcmp@plt>
   147e0:	cmp	r1, #0
   147e4:	mvnne	r1, #0
   147e8:	mov	r0, r1
   147ec:	bx	lr

000147f0 <table_compare_ptr@@Base>:
   147f0:	mov	r2, #0
   147f4:	cmp	r0, r1
   147f8:	mvncc	r2, #0
   147fc:	movwhi	r2, #1
   14800:	mov	r0, r2
   14804:	bx	lr

00014808 <table_get_default_compare_function_for_data_type@@Base>:
   14808:	cmp	r0, #23
   1480c:	movhi	r0, #0
   14810:	bxhi	lr
   14814:	movw	r1, #27260	; 0x6a7c
   14818:	movt	r1, #1
   1481c:	ldr	r0, [r1, r0, lsl #2]
   14820:	bx	lr

00014824 <table_subset_find@@Base>:
   14824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14828:	add	fp, sp, #28
   1482c:	sub	sp, sp, #4
   14830:	mov	r8, r3
   14834:	mov	r9, r2
   14838:	mov	r6, r1
   1483c:	mov	r7, r0
   14840:	bl	140fc <table_get_column_compare_function@@Base>
   14844:	mov	sl, r0
   14848:	ldr	r4, [fp, #12]
   1484c:	ldr	r5, [fp, #8]
   14850:	cmp	r8, #0
   14854:	beq	1489c <table_subset_find@@Base+0x78>
   14858:	mvn	r8, #0
   1485c:	cmp	r4, r5
   14860:	blt	148ec <table_subset_find@@Base+0xc8>
   14864:	mov	r0, r7
   14868:	mov	r1, r4
   1486c:	mov	r2, r6
   14870:	bl	15434 <table_get@@Base>
   14874:	mov	r1, r0
   14878:	mov	r0, r9
   1487c:	blx	sl
   14880:	cmp	r0, #0
   14884:	beq	148e0 <table_subset_find@@Base+0xbc>
   14888:	sub	r0, r4, #1
   1488c:	cmp	r4, r5
   14890:	mov	r4, r0
   14894:	bgt	14864 <table_subset_find@@Base+0x40>
   14898:	b	148ec <table_subset_find@@Base+0xc8>
   1489c:	mvn	r8, #0
   148a0:	cmp	r5, r4
   148a4:	bgt	148ec <table_subset_find@@Base+0xc8>
   148a8:	mov	r0, r7
   148ac:	mov	r1, r5
   148b0:	mov	r2, r6
   148b4:	bl	15434 <table_get@@Base>
   148b8:	mov	r1, r0
   148bc:	mov	r0, r9
   148c0:	blx	sl
   148c4:	cmp	r0, #0
   148c8:	beq	148e8 <table_subset_find@@Base+0xc4>
   148cc:	add	r0, r5, #1
   148d0:	cmp	r5, r4
   148d4:	mov	r5, r0
   148d8:	blt	148a8 <table_subset_find@@Base+0x84>
   148dc:	b	148ec <table_subset_find@@Base+0xc8>
   148e0:	mov	r8, r4
   148e4:	b	148ec <table_subset_find@@Base+0xc8>
   148e8:	mov	r8, r5
   148ec:	mov	r0, r8
   148f0:	sub	sp, fp, #28
   148f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000148f8 <table_find@@Base>:
   148f8:	push	{r4, r5, r6, r7, fp, lr}
   148fc:	add	fp, sp, #16
   14900:	sub	sp, sp, #8
   14904:	mov	r4, r3
   14908:	mov	r5, r2
   1490c:	mov	r6, r1
   14910:	mov	r7, r0
   14914:	bl	156a4 <table_get_row_length@@Base>
   14918:	sub	r0, r0, #1
   1491c:	mov	r1, #0
   14920:	str	r1, [sp]
   14924:	str	r0, [sp, #4]
   14928:	mov	r0, r7
   1492c:	mov	r1, r6
   14930:	mov	r2, r5
   14934:	mov	r3, r4
   14938:	bl	14824 <table_subset_find@@Base>
   1493c:	sub	sp, fp, #16
   14940:	pop	{r4, r5, r6, r7, fp, pc}

00014944 <table_find_bool@@Base>:
   14944:	push	{fp, lr}
   14948:	mov	fp, sp
   1494c:	sub	sp, sp, #8
   14950:	strb	r2, [fp, #-1]
   14954:	sub	r2, fp, #1
   14958:	bl	148f8 <table_find@@Base>
   1495c:	mov	sp, fp
   14960:	pop	{fp, pc}

00014964 <table_find_int@@Base>:
   14964:	push	{fp, lr}
   14968:	mov	fp, sp
   1496c:	sub	sp, sp, #8
   14970:	str	r2, [sp, #4]
   14974:	add	r2, sp, #4
   14978:	bl	148f8 <table_find@@Base>
   1497c:	mov	sp, fp
   14980:	pop	{fp, pc}

00014984 <table_find_uint@@Base>:
   14984:	push	{fp, lr}
   14988:	mov	fp, sp
   1498c:	sub	sp, sp, #8
   14990:	str	r2, [sp, #4]
   14994:	add	r2, sp, #4
   14998:	bl	148f8 <table_find@@Base>
   1499c:	mov	sp, fp
   149a0:	pop	{fp, pc}

000149a4 <table_find_int8@@Base>:
   149a4:	push	{fp, lr}
   149a8:	mov	fp, sp
   149ac:	sub	sp, sp, #8
   149b0:	strb	r2, [fp, #-1]
   149b4:	sub	r2, fp, #1
   149b8:	bl	148f8 <table_find@@Base>
   149bc:	mov	sp, fp
   149c0:	pop	{fp, pc}

000149c4 <table_find_uint8@@Base>:
   149c4:	push	{fp, lr}
   149c8:	mov	fp, sp
   149cc:	sub	sp, sp, #8
   149d0:	strb	r2, [fp, #-1]
   149d4:	sub	r2, fp, #1
   149d8:	bl	148f8 <table_find@@Base>
   149dc:	mov	sp, fp
   149e0:	pop	{fp, pc}

000149e4 <table_find_int16@@Base>:
   149e4:	push	{fp, lr}
   149e8:	mov	fp, sp
   149ec:	sub	sp, sp, #8
   149f0:	strh	r2, [fp, #-2]
   149f4:	sub	r2, fp, #2
   149f8:	bl	148f8 <table_find@@Base>
   149fc:	mov	sp, fp
   14a00:	pop	{fp, pc}

00014a04 <table_find_uint16@@Base>:
   14a04:	push	{fp, lr}
   14a08:	mov	fp, sp
   14a0c:	sub	sp, sp, #8
   14a10:	strh	r2, [fp, #-2]
   14a14:	sub	r2, fp, #2
   14a18:	bl	148f8 <table_find@@Base>
   14a1c:	mov	sp, fp
   14a20:	pop	{fp, pc}

00014a24 <table_find_int32@@Base>:
   14a24:	push	{fp, lr}
   14a28:	mov	fp, sp
   14a2c:	sub	sp, sp, #8
   14a30:	str	r2, [sp, #4]
   14a34:	add	r2, sp, #4
   14a38:	bl	148f8 <table_find@@Base>
   14a3c:	mov	sp, fp
   14a40:	pop	{fp, pc}

00014a44 <table_find_uint32@@Base>:
   14a44:	push	{fp, lr}
   14a48:	mov	fp, sp
   14a4c:	sub	sp, sp, #8
   14a50:	str	r2, [sp, #4]
   14a54:	add	r2, sp, #4
   14a58:	bl	148f8 <table_find@@Base>
   14a5c:	mov	sp, fp
   14a60:	pop	{fp, pc}

00014a64 <table_find_int64@@Base>:
   14a64:	push	{fp, lr}
   14a68:	mov	fp, sp
   14a6c:	push	{r2, r3}
   14a70:	ldr	r3, [fp, #8]
   14a74:	mov	r2, sp
   14a78:	bl	148f8 <table_find@@Base>
   14a7c:	mov	sp, fp
   14a80:	pop	{fp, pc}

00014a84 <table_find_uint64@@Base>:
   14a84:	push	{fp, lr}
   14a88:	mov	fp, sp
   14a8c:	push	{r2, r3}
   14a90:	ldr	r3, [fp, #8]
   14a94:	mov	r2, sp
   14a98:	bl	148f8 <table_find@@Base>
   14a9c:	mov	sp, fp
   14aa0:	pop	{fp, pc}

00014aa4 <table_find_short@@Base>:
   14aa4:	push	{fp, lr}
   14aa8:	mov	fp, sp
   14aac:	sub	sp, sp, #8
   14ab0:	strh	r2, [fp, #-2]
   14ab4:	sub	r2, fp, #2
   14ab8:	bl	148f8 <table_find@@Base>
   14abc:	mov	sp, fp
   14ac0:	pop	{fp, pc}

00014ac4 <table_find_ushort@@Base>:
   14ac4:	push	{fp, lr}
   14ac8:	mov	fp, sp
   14acc:	sub	sp, sp, #8
   14ad0:	strh	r2, [fp, #-2]
   14ad4:	sub	r2, fp, #2
   14ad8:	bl	148f8 <table_find@@Base>
   14adc:	mov	sp, fp
   14ae0:	pop	{fp, pc}

00014ae4 <table_find_long@@Base>:
   14ae4:	push	{fp, lr}
   14ae8:	mov	fp, sp
   14aec:	sub	sp, sp, #8
   14af0:	str	r2, [sp, #4]
   14af4:	add	r2, sp, #4
   14af8:	bl	148f8 <table_find@@Base>
   14afc:	mov	sp, fp
   14b00:	pop	{fp, pc}

00014b04 <table_find_ulong@@Base>:
   14b04:	push	{fp, lr}
   14b08:	mov	fp, sp
   14b0c:	sub	sp, sp, #8
   14b10:	str	r2, [sp, #4]
   14b14:	add	r2, sp, #4
   14b18:	bl	148f8 <table_find@@Base>
   14b1c:	mov	sp, fp
   14b20:	pop	{fp, pc}

00014b24 <table_find_llong@@Base>:
   14b24:	push	{fp, lr}
   14b28:	mov	fp, sp
   14b2c:	push	{r2, r3}
   14b30:	ldr	r3, [fp, #8]
   14b34:	mov	r2, sp
   14b38:	bl	148f8 <table_find@@Base>
   14b3c:	mov	sp, fp
   14b40:	pop	{fp, pc}

00014b44 <table_find_ullong@@Base>:
   14b44:	push	{fp, lr}
   14b48:	mov	fp, sp
   14b4c:	push	{r2, r3}
   14b50:	ldr	r3, [fp, #8]
   14b54:	mov	r2, sp
   14b58:	bl	148f8 <table_find@@Base>
   14b5c:	mov	sp, fp
   14b60:	pop	{fp, pc}

00014b64 <table_find_float@@Base>:
   14b64:	push	{fp, lr}
   14b68:	mov	fp, sp
   14b6c:	sub	sp, sp, #8
   14b70:	mov	r3, r2
   14b74:	vstr	s0, [sp, #4]
   14b78:	add	r2, sp, #4
   14b7c:	bl	148f8 <table_find@@Base>
   14b80:	mov	sp, fp
   14b84:	pop	{fp, pc}

00014b88 <table_find_double@@Base>:
   14b88:	push	{fp, lr}
   14b8c:	mov	fp, sp
   14b90:	sub	sp, sp, #8
   14b94:	mov	r3, r2
   14b98:	vstr	d0, [sp]
   14b9c:	mov	r2, sp
   14ba0:	bl	148f8 <table_find@@Base>
   14ba4:	mov	sp, fp
   14ba8:	pop	{fp, pc}

00014bac <table_find_ldouble@@Base>:
   14bac:	push	{fp, lr}
   14bb0:	mov	fp, sp
   14bb4:	sub	sp, sp, #8
   14bb8:	mov	r3, r2
   14bbc:	vstr	d0, [sp]
   14bc0:	mov	r2, sp
   14bc4:	bl	148f8 <table_find@@Base>
   14bc8:	mov	sp, fp
   14bcc:	pop	{fp, pc}

00014bd0 <table_find_char@@Base>:
   14bd0:	push	{fp, lr}
   14bd4:	mov	fp, sp
   14bd8:	sub	sp, sp, #8
   14bdc:	strb	r2, [fp, #-1]
   14be0:	sub	r2, fp, #1
   14be4:	bl	148f8 <table_find@@Base>
   14be8:	mov	sp, fp
   14bec:	pop	{fp, pc}

00014bf0 <table_find_uchar@@Base>:
   14bf0:	push	{fp, lr}
   14bf4:	mov	fp, sp
   14bf8:	sub	sp, sp, #8
   14bfc:	strb	r2, [fp, #-1]
   14c00:	sub	r2, fp, #1
   14c04:	bl	148f8 <table_find@@Base>
   14c08:	mov	sp, fp
   14c0c:	pop	{fp, pc}

00014c10 <table_find_string@@Base>:
   14c10:	push	{fp, lr}
   14c14:	mov	fp, sp
   14c18:	sub	sp, sp, #8
   14c1c:	str	r2, [sp, #4]
   14c20:	add	r2, sp, #4
   14c24:	bl	148f8 <table_find@@Base>
   14c28:	mov	sp, fp
   14c2c:	pop	{fp, pc}

00014c30 <table_find_ptr@@Base>:
   14c30:	b	148f8 <table_find@@Base>

00014c34 <table_sorted_find@@Base>:
   14c34:	push	{r4, r5, r6, r7, fp, lr}
   14c38:	add	fp, sp, #16
   14c3c:	sub	sp, sp, #8
   14c40:	mov	r4, r3
   14c44:	mov	r5, r2
   14c48:	mov	r6, r1
   14c4c:	mov	r7, r0
   14c50:	bl	156a4 <table_get_row_length@@Base>
   14c54:	sub	r0, r0, #1
   14c58:	mov	r1, #0
   14c5c:	str	r1, [sp]
   14c60:	str	r0, [sp, #4]
   14c64:	mov	r0, r7
   14c68:	mov	r1, r6
   14c6c:	mov	r2, r5
   14c70:	mov	r3, r4
   14c74:	bl	14c80 <table_sorted_subset_find@@Base>
   14c78:	sub	sp, fp, #16
   14c7c:	pop	{r4, r5, r6, r7, fp, pc}

00014c80 <table_sorted_subset_find@@Base>:
   14c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c84:	add	fp, sp, #28
   14c88:	push	{r3}		; (str r3, [sp, #-4]!)
   14c8c:	mov	r9, r2
   14c90:	mov	sl, r1
   14c94:	mov	r7, r0
   14c98:	ldr	r6, [fp, #12]
   14c9c:	ldr	r8, [fp, #8]
   14ca0:	mov	r0, r7
   14ca4:	mov	r1, sl
   14ca8:	bl	140fc <table_get_column_compare_function@@Base>
   14cac:	mov	r4, r0
   14cb0:	sub	r0, r6, r8
   14cb4:	add	r0, r0, r0, lsr #31
   14cb8:	add	r5, r8, r0, asr #1
   14cbc:	mov	r0, r7
   14cc0:	mov	r1, r5
   14cc4:	mov	r2, sl
   14cc8:	bl	15434 <table_get@@Base>
   14ccc:	mov	r1, r0
   14cd0:	mov	r0, r9
   14cd4:	blx	r4
   14cd8:	cmp	r6, r8
   14cdc:	blt	14d50 <table_sorted_subset_find@@Base+0xd0>
   14ce0:	cmn	r0, #1
   14ce4:	bne	14cf0 <table_sorted_subset_find@@Base+0x70>
   14ce8:	sub	r6, r5, #1
   14cec:	b	14ca0 <table_sorted_subset_find@@Base+0x20>
   14cf0:	cmp	r0, #1
   14cf4:	bne	14d00 <table_sorted_subset_find@@Base+0x80>
   14cf8:	mov	r8, r5
   14cfc:	b	14ca0 <table_sorted_subset_find@@Base+0x20>
   14d00:	cmp	r0, #0
   14d04:	bne	14d50 <table_sorted_subset_find@@Base+0xd0>
   14d08:	ldr	r8, [sp]
   14d0c:	add	r6, r5, #1
   14d10:	cmp	r8, #0
   14d14:	subeq	r6, r5, #1
   14d18:	mov	r0, r7
   14d1c:	mov	r1, r6
   14d20:	mov	r2, sl
   14d24:	bl	15434 <table_get@@Base>
   14d28:	mov	r1, r9
   14d2c:	blx	r4
   14d30:	cmp	r0, #0
   14d34:	mov	r5, r6
   14d38:	beq	14d0c <table_sorted_subset_find@@Base+0x8c>
   14d3c:	cmp	r8, #0
   14d40:	addeq	r0, r6, #1
   14d44:	subne	r0, r6, #1
   14d48:	sub	sp, fp, #28
   14d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d50:	rsb	r0, r5, #0
   14d54:	sub	sp, fp, #28
   14d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014d5c <table_sorted_find_int@@Base>:
   14d5c:	push	{fp, lr}
   14d60:	mov	fp, sp
   14d64:	sub	sp, sp, #8
   14d68:	str	r2, [sp, #4]
   14d6c:	add	r2, sp, #4
   14d70:	bl	14c34 <table_sorted_find@@Base>
   14d74:	mov	sp, fp
   14d78:	pop	{fp, pc}

00014d7c <table_sorted_find_uint@@Base>:
   14d7c:	push	{fp, lr}
   14d80:	mov	fp, sp
   14d84:	sub	sp, sp, #8
   14d88:	str	r2, [sp, #4]
   14d8c:	add	r2, sp, #4
   14d90:	bl	14c34 <table_sorted_find@@Base>
   14d94:	mov	sp, fp
   14d98:	pop	{fp, pc}

00014d9c <table_sorted_find_int8@@Base>:
   14d9c:	push	{fp, lr}
   14da0:	mov	fp, sp
   14da4:	sub	sp, sp, #8
   14da8:	strb	r2, [fp, #-1]
   14dac:	sub	r2, fp, #1
   14db0:	bl	14c34 <table_sorted_find@@Base>
   14db4:	mov	sp, fp
   14db8:	pop	{fp, pc}

00014dbc <table_sorted_find_uint8@@Base>:
   14dbc:	push	{fp, lr}
   14dc0:	mov	fp, sp
   14dc4:	sub	sp, sp, #8
   14dc8:	strb	r2, [fp, #-1]
   14dcc:	sub	r2, fp, #1
   14dd0:	bl	14c34 <table_sorted_find@@Base>
   14dd4:	mov	sp, fp
   14dd8:	pop	{fp, pc}

00014ddc <table_sorted_find_int16@@Base>:
   14ddc:	push	{fp, lr}
   14de0:	mov	fp, sp
   14de4:	sub	sp, sp, #8
   14de8:	strh	r2, [fp, #-2]
   14dec:	sub	r2, fp, #2
   14df0:	bl	14c34 <table_sorted_find@@Base>
   14df4:	mov	sp, fp
   14df8:	pop	{fp, pc}

00014dfc <table_sorted_find_uint16@@Base>:
   14dfc:	push	{fp, lr}
   14e00:	mov	fp, sp
   14e04:	sub	sp, sp, #8
   14e08:	strh	r2, [fp, #-2]
   14e0c:	sub	r2, fp, #2
   14e10:	bl	14c34 <table_sorted_find@@Base>
   14e14:	mov	sp, fp
   14e18:	pop	{fp, pc}

00014e1c <table_sorted_find_int32@@Base>:
   14e1c:	push	{fp, lr}
   14e20:	mov	fp, sp
   14e24:	sub	sp, sp, #8
   14e28:	str	r2, [sp, #4]
   14e2c:	add	r2, sp, #4
   14e30:	bl	14c34 <table_sorted_find@@Base>
   14e34:	mov	sp, fp
   14e38:	pop	{fp, pc}

00014e3c <table_sorted_find_uint32@@Base>:
   14e3c:	push	{fp, lr}
   14e40:	mov	fp, sp
   14e44:	sub	sp, sp, #8
   14e48:	str	r2, [sp, #4]
   14e4c:	add	r2, sp, #4
   14e50:	bl	14c34 <table_sorted_find@@Base>
   14e54:	mov	sp, fp
   14e58:	pop	{fp, pc}

00014e5c <table_sorted_find_int64@@Base>:
   14e5c:	push	{fp, lr}
   14e60:	mov	fp, sp
   14e64:	push	{r2, r3}
   14e68:	ldr	r3, [fp, #8]
   14e6c:	mov	r2, sp
   14e70:	bl	14c34 <table_sorted_find@@Base>
   14e74:	mov	sp, fp
   14e78:	pop	{fp, pc}

00014e7c <table_sorted_find_uint64@@Base>:
   14e7c:	push	{fp, lr}
   14e80:	mov	fp, sp
   14e84:	push	{r2, r3}
   14e88:	ldr	r3, [fp, #8]
   14e8c:	mov	r2, sp
   14e90:	bl	14c34 <table_sorted_find@@Base>
   14e94:	mov	sp, fp
   14e98:	pop	{fp, pc}

00014e9c <table_sorted_find_short@@Base>:
   14e9c:	push	{fp, lr}
   14ea0:	mov	fp, sp
   14ea4:	sub	sp, sp, #8
   14ea8:	strh	r2, [fp, #-2]
   14eac:	sub	r2, fp, #2
   14eb0:	bl	14c34 <table_sorted_find@@Base>
   14eb4:	mov	sp, fp
   14eb8:	pop	{fp, pc}

00014ebc <table_sorted_find_ushort@@Base>:
   14ebc:	push	{fp, lr}
   14ec0:	mov	fp, sp
   14ec4:	sub	sp, sp, #8
   14ec8:	strh	r2, [fp, #-2]
   14ecc:	sub	r2, fp, #2
   14ed0:	bl	14c34 <table_sorted_find@@Base>
   14ed4:	mov	sp, fp
   14ed8:	pop	{fp, pc}

00014edc <table_sorted_find_long@@Base>:
   14edc:	push	{fp, lr}
   14ee0:	mov	fp, sp
   14ee4:	sub	sp, sp, #8
   14ee8:	str	r2, [sp, #4]
   14eec:	add	r2, sp, #4
   14ef0:	bl	14c34 <table_sorted_find@@Base>
   14ef4:	mov	sp, fp
   14ef8:	pop	{fp, pc}

00014efc <table_sorted_find_ulong@@Base>:
   14efc:	push	{fp, lr}
   14f00:	mov	fp, sp
   14f04:	sub	sp, sp, #8
   14f08:	str	r2, [sp, #4]
   14f0c:	add	r2, sp, #4
   14f10:	bl	14c34 <table_sorted_find@@Base>
   14f14:	mov	sp, fp
   14f18:	pop	{fp, pc}

00014f1c <table_sorted_find_llong@@Base>:
   14f1c:	push	{fp, lr}
   14f20:	mov	fp, sp
   14f24:	push	{r2, r3}
   14f28:	ldr	r3, [fp, #8]
   14f2c:	mov	r2, sp
   14f30:	bl	14c34 <table_sorted_find@@Base>
   14f34:	mov	sp, fp
   14f38:	pop	{fp, pc}

00014f3c <table_sorted_find_ullong@@Base>:
   14f3c:	push	{fp, lr}
   14f40:	mov	fp, sp
   14f44:	push	{r2, r3}
   14f48:	ldr	r3, [fp, #8]
   14f4c:	mov	r2, sp
   14f50:	bl	14c34 <table_sorted_find@@Base>
   14f54:	mov	sp, fp
   14f58:	pop	{fp, pc}

00014f5c <table_sorted_find_float@@Base>:
   14f5c:	push	{fp, lr}
   14f60:	mov	fp, sp
   14f64:	sub	sp, sp, #8
   14f68:	mov	r3, r2
   14f6c:	vstr	s0, [sp, #4]
   14f70:	add	r2, sp, #4
   14f74:	bl	14c34 <table_sorted_find@@Base>
   14f78:	mov	sp, fp
   14f7c:	pop	{fp, pc}

00014f80 <table_sorted_find_double@@Base>:
   14f80:	push	{fp, lr}
   14f84:	mov	fp, sp
   14f88:	sub	sp, sp, #8
   14f8c:	mov	r3, r2
   14f90:	vstr	d0, [sp]
   14f94:	mov	r2, sp
   14f98:	bl	14c34 <table_sorted_find@@Base>
   14f9c:	mov	sp, fp
   14fa0:	pop	{fp, pc}

00014fa4 <table_sorted_find_ldouble@@Base>:
   14fa4:	push	{fp, lr}
   14fa8:	mov	fp, sp
   14fac:	sub	sp, sp, #8
   14fb0:	mov	r3, r2
   14fb4:	vstr	d0, [sp]
   14fb8:	mov	r2, sp
   14fbc:	bl	14c34 <table_sorted_find@@Base>
   14fc0:	mov	sp, fp
   14fc4:	pop	{fp, pc}

00014fc8 <table_sorted_find_char@@Base>:
   14fc8:	push	{fp, lr}
   14fcc:	mov	fp, sp
   14fd0:	sub	sp, sp, #8
   14fd4:	strb	r2, [fp, #-1]
   14fd8:	sub	r2, fp, #1
   14fdc:	bl	14c34 <table_sorted_find@@Base>
   14fe0:	mov	sp, fp
   14fe4:	pop	{fp, pc}

00014fe8 <table_sorted_find_uchar@@Base>:
   14fe8:	push	{fp, lr}
   14fec:	mov	fp, sp
   14ff0:	sub	sp, sp, #8
   14ff4:	strb	r2, [fp, #-1]
   14ff8:	sub	r2, fp, #1
   14ffc:	bl	14c34 <table_sorted_find@@Base>
   15000:	mov	sp, fp
   15004:	pop	{fp, pc}

00015008 <table_sorted_find_string@@Base>:
   15008:	b	14c34 <table_sorted_find@@Base>

0001500c <table_sorted_find_ptr@@Base>:
   1500c:	b	14c34 <table_sorted_find@@Base>

00015010 <table_sorted_subset_find_int@@Base>:
   15010:	push	{fp, lr}
   15014:	mov	fp, sp
   15018:	sub	sp, sp, #16
   1501c:	str	r2, [fp, #-4]
   15020:	ldr	r2, [fp, #12]
   15024:	str	r2, [sp, #4]
   15028:	ldr	r2, [fp, #8]
   1502c:	str	r2, [sp]
   15030:	sub	r2, fp, #4
   15034:	bl	14c80 <table_sorted_subset_find@@Base>
   15038:	mov	sp, fp
   1503c:	pop	{fp, pc}

00015040 <table_sorted_subset_find_uint@@Base>:
   15040:	push	{fp, lr}
   15044:	mov	fp, sp
   15048:	sub	sp, sp, #16
   1504c:	str	r2, [fp, #-4]
   15050:	ldr	r2, [fp, #12]
   15054:	str	r2, [sp, #4]
   15058:	ldr	r2, [fp, #8]
   1505c:	str	r2, [sp]
   15060:	sub	r2, fp, #4
   15064:	bl	14c80 <table_sorted_subset_find@@Base>
   15068:	mov	sp, fp
   1506c:	pop	{fp, pc}

00015070 <table_sorted_subset_find_int8@@Base>:
   15070:	push	{fp, lr}
   15074:	mov	fp, sp
   15078:	sub	sp, sp, #16
   1507c:	strb	r2, [fp, #-1]
   15080:	ldr	r2, [fp, #12]
   15084:	str	r2, [sp, #4]
   15088:	ldr	r2, [fp, #8]
   1508c:	str	r2, [sp]
   15090:	sub	r2, fp, #1
   15094:	bl	14c80 <table_sorted_subset_find@@Base>
   15098:	mov	sp, fp
   1509c:	pop	{fp, pc}

000150a0 <table_sorted_subset_find_uint8@@Base>:
   150a0:	push	{fp, lr}
   150a4:	mov	fp, sp
   150a8:	sub	sp, sp, #16
   150ac:	strb	r2, [fp, #-1]
   150b0:	ldr	r2, [fp, #12]
   150b4:	str	r2, [sp, #4]
   150b8:	ldr	r2, [fp, #8]
   150bc:	str	r2, [sp]
   150c0:	sub	r2, fp, #1
   150c4:	bl	14c80 <table_sorted_subset_find@@Base>
   150c8:	mov	sp, fp
   150cc:	pop	{fp, pc}

000150d0 <table_sorted_subset_find_int16@@Base>:
   150d0:	push	{fp, lr}
   150d4:	mov	fp, sp
   150d8:	sub	sp, sp, #16
   150dc:	strh	r2, [fp, #-2]
   150e0:	ldr	r2, [fp, #12]
   150e4:	str	r2, [sp, #4]
   150e8:	ldr	r2, [fp, #8]
   150ec:	str	r2, [sp]
   150f0:	sub	r2, fp, #2
   150f4:	bl	14c80 <table_sorted_subset_find@@Base>
   150f8:	mov	sp, fp
   150fc:	pop	{fp, pc}

00015100 <table_sorted_subset_find_uint16@@Base>:
   15100:	push	{fp, lr}
   15104:	mov	fp, sp
   15108:	sub	sp, sp, #16
   1510c:	strh	r2, [fp, #-2]
   15110:	ldr	r2, [fp, #12]
   15114:	str	r2, [sp, #4]
   15118:	ldr	r2, [fp, #8]
   1511c:	str	r2, [sp]
   15120:	sub	r2, fp, #2
   15124:	bl	14c80 <table_sorted_subset_find@@Base>
   15128:	mov	sp, fp
   1512c:	pop	{fp, pc}

00015130 <table_sorted_subset_find_int32@@Base>:
   15130:	push	{fp, lr}
   15134:	mov	fp, sp
   15138:	sub	sp, sp, #16
   1513c:	str	r2, [fp, #-4]
   15140:	ldr	r2, [fp, #12]
   15144:	str	r2, [sp, #4]
   15148:	ldr	r2, [fp, #8]
   1514c:	str	r2, [sp]
   15150:	sub	r2, fp, #4
   15154:	bl	14c80 <table_sorted_subset_find@@Base>
   15158:	mov	sp, fp
   1515c:	pop	{fp, pc}

00015160 <table_sorted_subset_find_uint32@@Base>:
   15160:	push	{fp, lr}
   15164:	mov	fp, sp
   15168:	sub	sp, sp, #16
   1516c:	str	r2, [fp, #-4]
   15170:	ldr	r2, [fp, #12]
   15174:	str	r2, [sp, #4]
   15178:	ldr	r2, [fp, #8]
   1517c:	str	r2, [sp]
   15180:	sub	r2, fp, #4
   15184:	bl	14c80 <table_sorted_subset_find@@Base>
   15188:	mov	sp, fp
   1518c:	pop	{fp, pc}

00015190 <table_sorted_subset_find_int64@@Base>:
   15190:	push	{fp, lr}
   15194:	mov	fp, sp
   15198:	sub	sp, sp, #16
   1519c:	str	r3, [sp, #12]
   151a0:	str	r2, [sp, #8]
   151a4:	ldr	r2, [fp, #16]
   151a8:	str	r2, [sp, #4]
   151ac:	ldr	r2, [fp, #12]
   151b0:	str	r2, [sp]
   151b4:	ldr	r3, [fp, #8]
   151b8:	add	r2, sp, #8
   151bc:	bl	14c80 <table_sorted_subset_find@@Base>
   151c0:	mov	sp, fp
   151c4:	pop	{fp, pc}

000151c8 <table_sorted_subset_find_uint64@@Base>:
   151c8:	push	{fp, lr}
   151cc:	mov	fp, sp
   151d0:	sub	sp, sp, #16
   151d4:	str	r3, [sp, #12]
   151d8:	str	r2, [sp, #8]
   151dc:	ldr	r2, [fp, #16]
   151e0:	str	r2, [sp, #4]
   151e4:	ldr	r2, [fp, #12]
   151e8:	str	r2, [sp]
   151ec:	ldr	r3, [fp, #8]
   151f0:	add	r2, sp, #8
   151f4:	bl	14c80 <table_sorted_subset_find@@Base>
   151f8:	mov	sp, fp
   151fc:	pop	{fp, pc}

00015200 <table_sorted_subset_find_short@@Base>:
   15200:	push	{fp, lr}
   15204:	mov	fp, sp
   15208:	sub	sp, sp, #16
   1520c:	strh	r2, [fp, #-2]
   15210:	ldr	r2, [fp, #12]
   15214:	str	r2, [sp, #4]
   15218:	ldr	r2, [fp, #8]
   1521c:	str	r2, [sp]
   15220:	sub	r2, fp, #2
   15224:	bl	14c80 <table_sorted_subset_find@@Base>
   15228:	mov	sp, fp
   1522c:	pop	{fp, pc}

00015230 <table_sorted_subset_find_ushort@@Base>:
   15230:	push	{fp, lr}
   15234:	mov	fp, sp
   15238:	sub	sp, sp, #16
   1523c:	strh	r2, [fp, #-2]
   15240:	ldr	r2, [fp, #12]
   15244:	str	r2, [sp, #4]
   15248:	ldr	r2, [fp, #8]
   1524c:	str	r2, [sp]
   15250:	sub	r2, fp, #2
   15254:	bl	14c80 <table_sorted_subset_find@@Base>
   15258:	mov	sp, fp
   1525c:	pop	{fp, pc}

00015260 <table_sorted_subset_find_long@@Base>:
   15260:	push	{fp, lr}
   15264:	mov	fp, sp
   15268:	sub	sp, sp, #16
   1526c:	str	r2, [fp, #-4]
   15270:	ldr	r2, [fp, #12]
   15274:	str	r2, [sp, #4]
   15278:	ldr	r2, [fp, #8]
   1527c:	str	r2, [sp]
   15280:	sub	r2, fp, #4
   15284:	bl	14c80 <table_sorted_subset_find@@Base>
   15288:	mov	sp, fp
   1528c:	pop	{fp, pc}

00015290 <table_sorted_subset_find_ulong@@Base>:
   15290:	push	{fp, lr}
   15294:	mov	fp, sp
   15298:	sub	sp, sp, #16
   1529c:	str	r2, [fp, #-4]
   152a0:	ldr	r2, [fp, #12]
   152a4:	str	r2, [sp, #4]
   152a8:	ldr	r2, [fp, #8]
   152ac:	str	r2, [sp]
   152b0:	sub	r2, fp, #4
   152b4:	bl	14c80 <table_sorted_subset_find@@Base>
   152b8:	mov	sp, fp
   152bc:	pop	{fp, pc}

000152c0 <table_sorted_subset_find_llong@@Base>:
   152c0:	push	{fp, lr}
   152c4:	mov	fp, sp
   152c8:	sub	sp, sp, #16
   152cc:	str	r3, [sp, #12]
   152d0:	str	r2, [sp, #8]
   152d4:	ldr	r2, [fp, #16]
   152d8:	str	r2, [sp, #4]
   152dc:	ldr	r2, [fp, #12]
   152e0:	str	r2, [sp]
   152e4:	ldr	r3, [fp, #8]
   152e8:	add	r2, sp, #8
   152ec:	bl	14c80 <table_sorted_subset_find@@Base>
   152f0:	mov	sp, fp
   152f4:	pop	{fp, pc}

000152f8 <table_sorted_subset_find_ullong@@Base>:
   152f8:	push	{fp, lr}
   152fc:	mov	fp, sp
   15300:	sub	sp, sp, #16
   15304:	str	r3, [sp, #12]
   15308:	str	r2, [sp, #8]
   1530c:	ldr	r2, [fp, #16]
   15310:	str	r2, [sp, #4]
   15314:	ldr	r2, [fp, #12]
   15318:	str	r2, [sp]
   1531c:	ldr	r3, [fp, #8]
   15320:	add	r2, sp, #8
   15324:	bl	14c80 <table_sorted_subset_find@@Base>
   15328:	mov	sp, fp
   1532c:	pop	{fp, pc}

00015330 <table_sorted_subset_find_float@@Base>:
   15330:	push	{fp, lr}
   15334:	mov	fp, sp
   15338:	sub	sp, sp, #16
   1533c:	mov	ip, r2
   15340:	vstr	s0, [fp, #-4]
   15344:	ldr	r2, [fp, #8]
   15348:	str	r3, [sp]
   1534c:	str	r2, [sp, #4]
   15350:	sub	r2, fp, #4
   15354:	mov	r3, ip
   15358:	bl	14c80 <table_sorted_subset_find@@Base>
   1535c:	mov	sp, fp
   15360:	pop	{fp, pc}

00015364 <table_sorted_subset_find_double@@Base>:
   15364:	push	{fp, lr}
   15368:	mov	fp, sp
   1536c:	sub	sp, sp, #16
   15370:	mov	ip, r2
   15374:	vstr	d0, [sp, #8]
   15378:	ldr	r2, [fp, #8]
   1537c:	str	r3, [sp]
   15380:	str	r2, [sp, #4]
   15384:	add	r2, sp, #8
   15388:	mov	r3, ip
   1538c:	bl	14c80 <table_sorted_subset_find@@Base>
   15390:	mov	sp, fp
   15394:	pop	{fp, pc}

00015398 <table_sorted_subset_find_ldouble@@Base>:
   15398:	push	{fp, lr}
   1539c:	mov	fp, sp
   153a0:	sub	sp, sp, #16
   153a4:	mov	ip, r2
   153a8:	vstr	d0, [sp, #8]
   153ac:	ldr	r2, [fp, #8]
   153b0:	str	r3, [sp]
   153b4:	str	r2, [sp, #4]
   153b8:	add	r2, sp, #8
   153bc:	mov	r3, ip
   153c0:	bl	14c80 <table_sorted_subset_find@@Base>
   153c4:	mov	sp, fp
   153c8:	pop	{fp, pc}

000153cc <table_sorted_subset_find_char@@Base>:
   153cc:	push	{fp, lr}
   153d0:	mov	fp, sp
   153d4:	sub	sp, sp, #16
   153d8:	strb	r2, [fp, #-1]
   153dc:	ldr	r2, [fp, #12]
   153e0:	str	r2, [sp, #4]
   153e4:	ldr	r2, [fp, #8]
   153e8:	str	r2, [sp]
   153ec:	sub	r2, fp, #1
   153f0:	bl	14c80 <table_sorted_subset_find@@Base>
   153f4:	mov	sp, fp
   153f8:	pop	{fp, pc}

000153fc <table_sorted_subset_find_uchar@@Base>:
   153fc:	push	{fp, lr}
   15400:	mov	fp, sp
   15404:	sub	sp, sp, #16
   15408:	strb	r2, [fp, #-1]
   1540c:	ldr	r2, [fp, #12]
   15410:	str	r2, [sp, #4]
   15414:	ldr	r2, [fp, #8]
   15418:	str	r2, [sp]
   1541c:	sub	r2, fp, #1
   15420:	bl	14c80 <table_sorted_subset_find@@Base>
   15424:	mov	sp, fp
   15428:	pop	{fp, pc}

0001542c <table_sorted_subset_find_string@@Base>:
   1542c:	b	14c80 <table_sorted_subset_find@@Base>

00015430 <table_sorted_subset_find_ptr@@Base>:
   15430:	b	14c80 <table_sorted_subset_find@@Base>

00015434 <table_get@@Base>:
   15434:	push	{fp, lr}
   15438:	mov	fp, sp
   1543c:	bl	15edc <table_get_cell_ptr@@Base>
   15440:	ldr	r0, [r0]
   15444:	pop	{fp, pc}

00015448 <table_get_bool@@Base>:
   15448:	push	{fp, lr}
   1544c:	mov	fp, sp
   15450:	bl	15434 <table_get@@Base>
   15454:	ldrb	r0, [r0]
   15458:	pop	{fp, pc}

0001545c <table_get_int@@Base>:
   1545c:	push	{fp, lr}
   15460:	mov	fp, sp
   15464:	bl	15434 <table_get@@Base>
   15468:	ldr	r0, [r0]
   1546c:	pop	{fp, pc}

00015470 <table_get_uint@@Base>:
   15470:	push	{fp, lr}
   15474:	mov	fp, sp
   15478:	bl	15434 <table_get@@Base>
   1547c:	ldr	r0, [r0]
   15480:	pop	{fp, pc}

00015484 <table_get_int8@@Base>:
   15484:	push	{fp, lr}
   15488:	mov	fp, sp
   1548c:	bl	15434 <table_get@@Base>
   15490:	ldrsb	r0, [r0]
   15494:	pop	{fp, pc}

00015498 <table_get_uint8@@Base>:
   15498:	push	{fp, lr}
   1549c:	mov	fp, sp
   154a0:	bl	15434 <table_get@@Base>
   154a4:	ldrb	r0, [r0]
   154a8:	pop	{fp, pc}

000154ac <table_get_int16@@Base>:
   154ac:	push	{fp, lr}
   154b0:	mov	fp, sp
   154b4:	bl	15434 <table_get@@Base>
   154b8:	ldrsh	r0, [r0]
   154bc:	pop	{fp, pc}

000154c0 <table_get_uint16@@Base>:
   154c0:	push	{fp, lr}
   154c4:	mov	fp, sp
   154c8:	bl	15434 <table_get@@Base>
   154cc:	ldrh	r0, [r0]
   154d0:	pop	{fp, pc}

000154d4 <table_get_int32@@Base>:
   154d4:	push	{fp, lr}
   154d8:	mov	fp, sp
   154dc:	bl	15434 <table_get@@Base>
   154e0:	ldr	r0, [r0]
   154e4:	pop	{fp, pc}

000154e8 <table_get_uint32@@Base>:
   154e8:	push	{fp, lr}
   154ec:	mov	fp, sp
   154f0:	bl	15434 <table_get@@Base>
   154f4:	ldr	r0, [r0]
   154f8:	pop	{fp, pc}

000154fc <table_get_int64@@Base>:
   154fc:	push	{fp, lr}
   15500:	mov	fp, sp
   15504:	bl	15434 <table_get@@Base>
   15508:	ldrd	r0, [r0]
   1550c:	pop	{fp, pc}

00015510 <table_get_uint64@@Base>:
   15510:	push	{fp, lr}
   15514:	mov	fp, sp
   15518:	bl	15434 <table_get@@Base>
   1551c:	ldrd	r0, [r0]
   15520:	pop	{fp, pc}

00015524 <table_get_short@@Base>:
   15524:	push	{fp, lr}
   15528:	mov	fp, sp
   1552c:	bl	15434 <table_get@@Base>
   15530:	ldrsh	r0, [r0]
   15534:	pop	{fp, pc}

00015538 <table_get_ushort@@Base>:
   15538:	push	{fp, lr}
   1553c:	mov	fp, sp
   15540:	bl	15434 <table_get@@Base>
   15544:	ldrh	r0, [r0]
   15548:	pop	{fp, pc}

0001554c <table_get_long@@Base>:
   1554c:	push	{fp, lr}
   15550:	mov	fp, sp
   15554:	bl	15434 <table_get@@Base>
   15558:	ldr	r0, [r0]
   1555c:	pop	{fp, pc}

00015560 <table_get_ulong@@Base>:
   15560:	push	{fp, lr}
   15564:	mov	fp, sp
   15568:	bl	15434 <table_get@@Base>
   1556c:	ldr	r0, [r0]
   15570:	pop	{fp, pc}

00015574 <table_get_llong@@Base>:
   15574:	push	{fp, lr}
   15578:	mov	fp, sp
   1557c:	bl	15434 <table_get@@Base>
   15580:	ldrd	r0, [r0]
   15584:	pop	{fp, pc}

00015588 <table_get_ullong@@Base>:
   15588:	push	{fp, lr}
   1558c:	mov	fp, sp
   15590:	bl	15434 <table_get@@Base>
   15594:	ldrd	r0, [r0]
   15598:	pop	{fp, pc}

0001559c <table_get_float@@Base>:
   1559c:	push	{fp, lr}
   155a0:	mov	fp, sp
   155a4:	bl	15434 <table_get@@Base>
   155a8:	vldr	s0, [r0]
   155ac:	pop	{fp, pc}

000155b0 <table_get_double@@Base>:
   155b0:	push	{fp, lr}
   155b4:	mov	fp, sp
   155b8:	bl	15434 <table_get@@Base>
   155bc:	vldr	d0, [r0]
   155c0:	pop	{fp, pc}

000155c4 <table_get_ldouble@@Base>:
   155c4:	push	{fp, lr}
   155c8:	mov	fp, sp
   155cc:	bl	15434 <table_get@@Base>
   155d0:	vldr	d0, [r0]
   155d4:	pop	{fp, pc}

000155d8 <table_get_char@@Base>:
   155d8:	push	{fp, lr}
   155dc:	mov	fp, sp
   155e0:	bl	15434 <table_get@@Base>
   155e4:	ldrb	r0, [r0]
   155e8:	pop	{fp, pc}

000155ec <table_get_uchar@@Base>:
   155ec:	push	{fp, lr}
   155f0:	mov	fp, sp
   155f4:	bl	15434 <table_get@@Base>
   155f8:	ldrb	r0, [r0]
   155fc:	pop	{fp, pc}

00015600 <table_get_string@@Base>:
   15600:	b	15434 <table_get@@Base>

00015604 <table_get_ptr@@Base>:
   15604:	b	15434 <table_get@@Base>

00015608 <table_row_init@@Base>:
   15608:	push	{r4, r5, fp, lr}
   1560c:	add	fp, sp, #8
   15610:	mov	r4, r0
   15614:	bl	15630 <table_get_row_ptr@@Base>
   15618:	mov	r5, r0
   1561c:	ldr	r0, [r4, #12]
   15620:	lsl	r0, r0, #2
   15624:	bl	12fb4 <malloc@plt>
   15628:	str	r0, [r5]
   1562c:	pop	{r4, r5, fp, pc}

00015630 <table_get_row_ptr@@Base>:
   15630:	ldr	r0, [r0, #16]
   15634:	add	r0, r0, r1, lsl #2
   15638:	bx	lr

0001563c <table_row_destroy@@Base>:
   1563c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15640:	add	fp, sp, #24
   15644:	mov	r4, r1
   15648:	mov	r5, r0
   1564c:	bl	13d68 <table_get_column_length@@Base>
   15650:	mov	r6, r0
   15654:	mov	r0, r5
   15658:	mov	r1, r4
   1565c:	bl	15630 <table_get_row_ptr@@Base>
   15660:	mov	r8, r0
   15664:	cmp	r6, #1
   15668:	blt	1568c <table_row_destroy@@Base+0x50>
   1566c:	mov	r7, #0
   15670:	mov	r0, r5
   15674:	mov	r1, r4
   15678:	mov	r2, r7
   1567c:	bl	15ef8 <table_cell_destroy@@Base>
   15680:	add	r7, r7, #1
   15684:	cmp	r6, r7
   15688:	bne	15670 <table_row_destroy@@Base+0x34>
   1568c:	ldr	r0, [r8]
   15690:	cmp	r0, #0
   15694:	beq	156a0 <table_row_destroy@@Base+0x64>
   15698:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1569c:	b	12f90 <free@plt>
   156a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000156a4 <table_get_row_length@@Base>:
   156a4:	ldr	r0, [r0, #20]
   156a8:	bx	lr

000156ac <table_add_row@@Base>:
   156ac:	push	{r4, sl, fp, lr}
   156b0:	add	fp, sp, #8
   156b4:	mov	r4, r0
   156b8:	bl	156a4 <table_get_row_length@@Base>
   156bc:	ldr	r1, [r4, #24]
   156c0:	udiv	r2, r0, r1
   156c4:	mls	r0, r2, r1, r0
   156c8:	cmp	r0, #0
   156cc:	moveq	r0, r4
   156d0:	bleq	15708 <table_add_row@@Base+0x5c>
   156d4:	mov	r0, r4
   156d8:	bl	15738 <table_add_row@@Base+0x8c>
   156dc:	mov	r0, r4
   156e0:	bl	156a4 <table_get_row_length@@Base>
   156e4:	mov	r1, r0
   156e8:	mov	r0, r4
   156ec:	mvn	r2, #0
   156f0:	mov	r3, #2
   156f4:	bl	13c6c <table_notify@@Base>
   156f8:	ldr	r0, [r4, #20]
   156fc:	add	r1, r0, #1
   15700:	str	r1, [r4, #20]
   15704:	pop	{r4, sl, fp, pc}
   15708:	push	{r4, sl, fp, lr}
   1570c:	add	fp, sp, #8
   15710:	mov	r4, r0
   15714:	ldr	r0, [r0, #16]
   15718:	ldr	r1, [r4, #24]
   1571c:	ldr	r2, [r4, #28]
   15720:	add	r1, r2, r1
   15724:	str	r1, [r4, #28]
   15728:	lsl	r1, r1, #2
   1572c:	bl	12f9c <realloc@plt>
   15730:	str	r0, [r4, #16]
   15734:	pop	{r4, sl, fp, pc}
   15738:	push	{r4, r5, r6, r7, fp, lr}
   1573c:	add	fp, sp, #16
   15740:	mov	r4, r0
   15744:	bl	156a4 <table_get_row_length@@Base>
   15748:	mov	r5, r0
   1574c:	mov	r0, r4
   15750:	bl	13d68 <table_get_column_length@@Base>
   15754:	mov	r6, r0
   15758:	mov	r0, r4
   1575c:	mov	r1, r5
   15760:	bl	15608 <table_row_init@@Base>
   15764:	cmp	r6, #1
   15768:	blt	1578c <table_add_row@@Base+0xe0>
   1576c:	mov	r7, #0
   15770:	mov	r0, r4
   15774:	mov	r1, r5
   15778:	mov	r2, r7
   1577c:	bl	15ec4 <table_cell_init@@Base>
   15780:	add	r7, r7, #1
   15784:	cmp	r6, r7
   15788:	bne	15770 <table_add_row@@Base+0xc4>
   1578c:	pop	{r4, r5, r6, r7, fp, pc}

00015790 <table_remove_row@@Base>:
   15790:	push	{r4, r5, fp, lr}
   15794:	add	fp, sp, #8
   15798:	mov	r4, r1
   1579c:	mov	r5, r0
   157a0:	bl	157ec <table_remove_row@@Base+0x5c>
   157a4:	ldr	r0, [r5, #20]
   157a8:	sub	r0, r0, #1
   157ac:	str	r0, [r5, #20]
   157b0:	mov	r0, r5
   157b4:	bl	156a4 <table_get_row_length@@Base>
   157b8:	ldr	r1, [r5, #24]
   157bc:	udiv	r2, r0, r1
   157c0:	mls	r0, r2, r1, r0
   157c4:	cmp	r0, #0
   157c8:	moveq	r0, r5
   157cc:	bleq	158ac <table_remove_row@@Base+0x11c>
   157d0:	mov	r0, r5
   157d4:	mov	r1, r4
   157d8:	mvn	r2, #0
   157dc:	mov	r3, #4
   157e0:	bl	13c6c <table_notify@@Base>
   157e4:	mov	r0, #0
   157e8:	pop	{r4, r5, fp, pc}
   157ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157f0:	add	fp, sp, #24
   157f4:	mov	r4, r1
   157f8:	mov	r5, r0
   157fc:	bl	156a4 <table_get_row_length@@Base>
   15800:	mov	r8, r0
   15804:	mov	r0, r5
   15808:	bl	13d68 <table_get_column_length@@Base>
   1580c:	cmp	r0, #1
   15810:	blt	15864 <table_remove_row@@Base+0xd4>
   15814:	mov	r7, r0
   15818:	mov	r6, #0
   1581c:	b	1582c <table_remove_row@@Base+0x9c>
   15820:	add	r6, r6, #1
   15824:	cmp	r7, r6
   15828:	beq	15864 <table_remove_row@@Base+0xd4>
   1582c:	mov	r0, r5
   15830:	mov	r1, r6
   15834:	bl	13ddc <table_get_column_data_type@@Base>
   15838:	cmp	r0, #23
   1583c:	beq	15820 <table_remove_row@@Base+0x90>
   15840:	mov	r0, r5
   15844:	mov	r1, r4
   15848:	mov	r2, r6
   1584c:	bl	15edc <table_get_cell_ptr@@Base>
   15850:	ldr	r0, [r0]
   15854:	cmp	r0, #0
   15858:	beq	15820 <table_remove_row@@Base+0x90>
   1585c:	bl	12f90 <free@plt>
   15860:	b	15820 <table_remove_row@@Base+0x90>
   15864:	mov	r0, r5
   15868:	mov	r1, r4
   1586c:	bl	15630 <table_get_row_ptr@@Base>
   15870:	ldr	r0, [r0]
   15874:	cmp	r0, #0
   15878:	beq	15880 <table_remove_row@@Base+0xf0>
   1587c:	bl	12f90 <free@plt>
   15880:	sub	r0, r8, #1
   15884:	cmp	r0, r4
   15888:	ble	158a8 <table_remove_row@@Base+0x118>
   1588c:	ldr	r1, [r5, #16]
   15890:	add	r2, r1, r4, lsl #2
   15894:	ldr	r2, [r2, #4]
   15898:	str	r2, [r1, r4, lsl #2]
   1589c:	add	r4, r4, #1
   158a0:	cmp	r0, r4
   158a4:	bne	1588c <table_remove_row@@Base+0xfc>
   158a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   158ac:	push	{r4, sl, fp, lr}
   158b0:	add	fp, sp, #8
   158b4:	mov	r4, r0
   158b8:	ldr	r0, [r0, #16]
   158bc:	ldr	r1, [r4, #24]
   158c0:	ldr	r2, [r4, #28]
   158c4:	sub	r1, r2, r1
   158c8:	str	r1, [r4, #28]
   158cc:	lsl	r1, r1, #2
   158d0:	bl	12f9c <realloc@plt>
   158d4:	str	r0, [r4, #16]
   158d8:	pop	{r4, sl, fp, pc}

000158dc <table_set_row_ptr@@Base>:
   158dc:	ldr	r2, [r2]
   158e0:	ldr	r0, [r0, #16]
   158e4:	str	r2, [r0, r1, lsl #2]
   158e8:	bx	lr

000158ec <table_set@@Base>:
   158ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   158f0:	add	fp, sp, #24
   158f4:	mov	r8, r3
   158f8:	mov	r4, r2
   158fc:	mov	r9, r1
   15900:	mov	r6, r0
   15904:	bl	15edc <table_get_cell_ptr@@Base>
   15908:	mov	r5, r0
   1590c:	mov	r0, r6
   15910:	mov	r1, r4
   15914:	bl	13d38 <table_get_col_ptr@@Base>
   15918:	mvn	r7, #0
   1591c:	ldr	r1, [fp, #8]
   15920:	cmp	r1, #23
   15924:	bhi	15adc <table_set@@Base+0x1f0>
   15928:	add	r2, pc, #0
   1592c:	ldr	pc, [r2, r1, lsl #2]
   15930:	muleq	r1, r0, r9
   15934:	muleq	r1, r0, r9
   15938:	andeq	r5, r1, r8, lsl #20
   1593c:	andeq	r5, r1, r8, lsl #20
   15940:	andeq	r5, r1, r0, asr #20
   15944:	andeq	r5, r1, r0, asr #20
   15948:	muleq	r1, r0, r9
   1594c:	muleq	r1, r0, r9
   15950:	andeq	r5, r1, r8, asr #19
   15954:	andeq	r5, r1, r8, asr #19
   15958:	andeq	r5, r1, r0, asr #20
   1595c:	andeq	r5, r1, r0, asr #20
   15960:	muleq	r1, r0, r9
   15964:	muleq	r1, r0, r9
   15968:	andeq	r5, r1, r8, asr #19
   1596c:	andeq	r5, r1, r8, asr #19
   15970:	muleq	r1, r0, r9
   15974:	andeq	r5, r1, r8, asr #19
   15978:	andeq	r5, r1, r8, asr #19
   1597c:	andeq	r5, r1, r8, lsl #20
   15980:	andeq	r5, r1, r8, lsl #20
   15984:	andeq	r5, r1, r8, ror sl
   15988:	andeq	r5, r1, r8, lsl #20
   1598c:			; <UNDEFINED> instruction: 0x00015ab4
   15990:	ldr	r0, [r0, #4]
   15994:	cmp	r0, r1
   15998:	bne	15adc <table_set@@Base+0x1f0>
   1599c:	ldr	r0, [r5]
   159a0:	cmp	r0, #0
   159a4:	bne	159bc <table_set@@Base+0xd0>
   159a8:	mov	r0, #4
   159ac:	bl	12fb4 <malloc@plt>
   159b0:	str	r0, [r5]
   159b4:	cmp	r0, #0
   159b8:	beq	15adc <table_set@@Base+0x1f0>
   159bc:	ldr	r1, [r8]
   159c0:	str	r1, [r0]
   159c4:	b	15ac4 <table_set@@Base+0x1d8>
   159c8:	ldr	r0, [r0, #4]
   159cc:	cmp	r0, r1
   159d0:	bne	15adc <table_set@@Base+0x1f0>
   159d4:	ldr	r0, [r5]
   159d8:	cmp	r0, #0
   159dc:	bne	159f4 <table_set@@Base+0x108>
   159e0:	mov	r0, #8
   159e4:	bl	12fb4 <malloc@plt>
   159e8:	str	r0, [r5]
   159ec:	cmp	r0, #0
   159f0:	beq	15adc <table_set@@Base+0x1f0>
   159f4:	ldr	r1, [r8]
   159f8:	ldr	r2, [r8, #4]
   159fc:	str	r2, [r0, #4]
   15a00:	str	r1, [r0]
   15a04:	b	15ac4 <table_set@@Base+0x1d8>
   15a08:	ldr	r0, [r0, #4]
   15a0c:	cmp	r0, r1
   15a10:	bne	15adc <table_set@@Base+0x1f0>
   15a14:	ldr	r0, [r5]
   15a18:	cmp	r0, #0
   15a1c:	bne	15a34 <table_set@@Base+0x148>
   15a20:	mov	r0, #1
   15a24:	bl	12fb4 <malloc@plt>
   15a28:	str	r0, [r5]
   15a2c:	cmp	r0, #0
   15a30:	beq	15adc <table_set@@Base+0x1f0>
   15a34:	ldrb	r1, [r8]
   15a38:	strb	r1, [r0]
   15a3c:	b	15ac4 <table_set@@Base+0x1d8>
   15a40:	ldr	r0, [r0, #4]
   15a44:	cmp	r0, r1
   15a48:	bne	15adc <table_set@@Base+0x1f0>
   15a4c:	ldr	r0, [r5]
   15a50:	cmp	r0, #0
   15a54:	bne	15a6c <table_set@@Base+0x180>
   15a58:	mov	r0, #2
   15a5c:	bl	12fb4 <malloc@plt>
   15a60:	str	r0, [r5]
   15a64:	cmp	r0, #0
   15a68:	beq	15adc <table_set@@Base+0x1f0>
   15a6c:	ldrh	r1, [r8]
   15a70:	strh	r1, [r0]
   15a74:	b	15ac4 <table_set@@Base+0x1d8>
   15a78:	ldr	r0, [r0, #4]
   15a7c:	cmp	r0, r1
   15a80:	bne	15adc <table_set@@Base+0x1f0>
   15a84:	mov	r0, r8
   15a88:	bl	12fd8 <strlen@plt>
   15a8c:	ldr	r2, [r5]
   15a90:	add	r1, r0, #1
   15a94:	mov	r0, r2
   15a98:	bl	12f9c <realloc@plt>
   15a9c:	str	r0, [r5]
   15aa0:	cmp	r0, #0
   15aa4:	beq	15adc <table_set@@Base+0x1f0>
   15aa8:	mov	r1, r8
   15aac:	bl	12fa8 <strcpy@plt>
   15ab0:	b	15ac4 <table_set@@Base+0x1d8>
   15ab4:	ldr	r0, [r0, #4]
   15ab8:	cmp	r0, r1
   15abc:	bne	15adc <table_set@@Base+0x1f0>
   15ac0:	str	r8, [r5]
   15ac4:	mov	r0, r6
   15ac8:	mov	r1, r9
   15acc:	mov	r2, r4
   15ad0:	mov	r3, #1
   15ad4:	bl	13c6c <table_notify@@Base>
   15ad8:	mov	r7, #0
   15adc:	mov	r0, r7
   15ae0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015ae4 <table_set_bool@@Base>:
   15ae4:	push	{fp, lr}
   15ae8:	mov	fp, sp
   15aec:	sub	sp, sp, #8
   15af0:	strb	r3, [fp, #-1]
   15af4:	mov	r3, #22
   15af8:	str	r3, [sp]
   15afc:	sub	r3, fp, #1
   15b00:	bl	158ec <table_set@@Base>
   15b04:	mov	sp, fp
   15b08:	pop	{fp, pc}

00015b0c <table_set_int@@Base>:
   15b0c:	push	{fp, lr}
   15b10:	mov	fp, sp
   15b14:	sub	sp, sp, #8
   15b18:	str	r3, [sp, #4]
   15b1c:	mov	r3, #0
   15b20:	str	r3, [sp]
   15b24:	add	r3, sp, #4
   15b28:	bl	158ec <table_set@@Base>
   15b2c:	mov	sp, fp
   15b30:	pop	{fp, pc}

00015b34 <table_set_uint@@Base>:
   15b34:	push	{fp, lr}
   15b38:	mov	fp, sp
   15b3c:	sub	sp, sp, #8
   15b40:	str	r3, [sp, #4]
   15b44:	mov	r3, #1
   15b48:	str	r3, [sp]
   15b4c:	add	r3, sp, #4
   15b50:	bl	158ec <table_set@@Base>
   15b54:	mov	sp, fp
   15b58:	pop	{fp, pc}

00015b5c <table_set_int8@@Base>:
   15b5c:	push	{fp, lr}
   15b60:	mov	fp, sp
   15b64:	sub	sp, sp, #8
   15b68:	strb	r3, [fp, #-1]
   15b6c:	mov	r3, #2
   15b70:	str	r3, [sp]
   15b74:	sub	r3, fp, #1
   15b78:	bl	158ec <table_set@@Base>
   15b7c:	mov	sp, fp
   15b80:	pop	{fp, pc}

00015b84 <table_set_uint8@@Base>:
   15b84:	push	{fp, lr}
   15b88:	mov	fp, sp
   15b8c:	sub	sp, sp, #8
   15b90:	strb	r3, [fp, #-1]
   15b94:	mov	r3, #3
   15b98:	str	r3, [sp]
   15b9c:	sub	r3, fp, #1
   15ba0:	bl	158ec <table_set@@Base>
   15ba4:	mov	sp, fp
   15ba8:	pop	{fp, pc}

00015bac <table_set_int16@@Base>:
   15bac:	push	{fp, lr}
   15bb0:	mov	fp, sp
   15bb4:	sub	sp, sp, #8
   15bb8:	strh	r3, [fp, #-2]
   15bbc:	mov	r3, #4
   15bc0:	str	r3, [sp]
   15bc4:	sub	r3, fp, #2
   15bc8:	bl	158ec <table_set@@Base>
   15bcc:	mov	sp, fp
   15bd0:	pop	{fp, pc}

00015bd4 <table_set_uint16@@Base>:
   15bd4:	push	{fp, lr}
   15bd8:	mov	fp, sp
   15bdc:	sub	sp, sp, #8
   15be0:	strh	r3, [fp, #-2]
   15be4:	mov	r3, #5
   15be8:	str	r3, [sp]
   15bec:	sub	r3, fp, #2
   15bf0:	bl	158ec <table_set@@Base>
   15bf4:	mov	sp, fp
   15bf8:	pop	{fp, pc}

00015bfc <table_set_int32@@Base>:
   15bfc:	push	{fp, lr}
   15c00:	mov	fp, sp
   15c04:	sub	sp, sp, #8
   15c08:	str	r3, [sp, #4]
   15c0c:	mov	r3, #6
   15c10:	str	r3, [sp]
   15c14:	add	r3, sp, #4
   15c18:	bl	158ec <table_set@@Base>
   15c1c:	mov	sp, fp
   15c20:	pop	{fp, pc}

00015c24 <table_set_uint32@@Base>:
   15c24:	push	{fp, lr}
   15c28:	mov	fp, sp
   15c2c:	sub	sp, sp, #8
   15c30:	str	r3, [sp, #4]
   15c34:	mov	r3, #7
   15c38:	str	r3, [sp]
   15c3c:	add	r3, sp, #4
   15c40:	bl	158ec <table_set@@Base>
   15c44:	mov	sp, fp
   15c48:	pop	{fp, pc}

00015c4c <table_set_int64@@Base>:
   15c4c:	push	{fp, lr}
   15c50:	mov	fp, sp
   15c54:	sub	sp, sp, #16
   15c58:	ldr	r3, [fp, #12]
   15c5c:	str	r3, [sp, #12]
   15c60:	ldr	r3, [fp, #8]
   15c64:	str	r3, [sp, #8]
   15c68:	mov	r3, #8
   15c6c:	str	r3, [sp]
   15c70:	add	r3, sp, #8
   15c74:	bl	158ec <table_set@@Base>
   15c78:	mov	sp, fp
   15c7c:	pop	{fp, pc}

00015c80 <table_set_uint64@@Base>:
   15c80:	push	{fp, lr}
   15c84:	mov	fp, sp
   15c88:	sub	sp, sp, #16
   15c8c:	ldr	r3, [fp, #12]
   15c90:	str	r3, [sp, #12]
   15c94:	ldr	r3, [fp, #8]
   15c98:	str	r3, [sp, #8]
   15c9c:	mov	r3, #9
   15ca0:	str	r3, [sp]
   15ca4:	add	r3, sp, #8
   15ca8:	bl	158ec <table_set@@Base>
   15cac:	mov	sp, fp
   15cb0:	pop	{fp, pc}

00015cb4 <table_set_short@@Base>:
   15cb4:	push	{fp, lr}
   15cb8:	mov	fp, sp
   15cbc:	sub	sp, sp, #8
   15cc0:	strh	r3, [fp, #-2]
   15cc4:	mov	r3, #10
   15cc8:	str	r3, [sp]
   15ccc:	sub	r3, fp, #2
   15cd0:	bl	158ec <table_set@@Base>
   15cd4:	mov	sp, fp
   15cd8:	pop	{fp, pc}

00015cdc <table_set_ushort@@Base>:
   15cdc:	push	{fp, lr}
   15ce0:	mov	fp, sp
   15ce4:	sub	sp, sp, #8
   15ce8:	strh	r3, [fp, #-2]
   15cec:	mov	r3, #11
   15cf0:	str	r3, [sp]
   15cf4:	sub	r3, fp, #2
   15cf8:	bl	158ec <table_set@@Base>
   15cfc:	mov	sp, fp
   15d00:	pop	{fp, pc}

00015d04 <table_set_long@@Base>:
   15d04:	push	{fp, lr}
   15d08:	mov	fp, sp
   15d0c:	sub	sp, sp, #8
   15d10:	str	r3, [sp, #4]
   15d14:	mov	r3, #12
   15d18:	str	r3, [sp]
   15d1c:	add	r3, sp, #4
   15d20:	bl	158ec <table_set@@Base>
   15d24:	mov	sp, fp
   15d28:	pop	{fp, pc}

00015d2c <table_set_ulong@@Base>:
   15d2c:	push	{fp, lr}
   15d30:	mov	fp, sp
   15d34:	sub	sp, sp, #8
   15d38:	str	r3, [sp, #4]
   15d3c:	mov	r3, #13
   15d40:	str	r3, [sp]
   15d44:	add	r3, sp, #4
   15d48:	bl	158ec <table_set@@Base>
   15d4c:	mov	sp, fp
   15d50:	pop	{fp, pc}

00015d54 <table_set_llong@@Base>:
   15d54:	push	{fp, lr}
   15d58:	mov	fp, sp
   15d5c:	sub	sp, sp, #16
   15d60:	ldr	r3, [fp, #12]
   15d64:	str	r3, [sp, #12]
   15d68:	ldr	r3, [fp, #8]
   15d6c:	str	r3, [sp, #8]
   15d70:	mov	r3, #14
   15d74:	str	r3, [sp]
   15d78:	add	r3, sp, #8
   15d7c:	bl	158ec <table_set@@Base>
   15d80:	mov	sp, fp
   15d84:	pop	{fp, pc}

00015d88 <table_set_ullong@@Base>:
   15d88:	push	{fp, lr}
   15d8c:	mov	fp, sp
   15d90:	sub	sp, sp, #16
   15d94:	ldr	r3, [fp, #12]
   15d98:	str	r3, [sp, #12]
   15d9c:	ldr	r3, [fp, #8]
   15da0:	str	r3, [sp, #8]
   15da4:	mov	r3, #15
   15da8:	str	r3, [sp]
   15dac:	add	r3, sp, #8
   15db0:	bl	158ec <table_set@@Base>
   15db4:	mov	sp, fp
   15db8:	pop	{fp, pc}

00015dbc <table_set_float@@Base>:
   15dbc:	push	{fp, lr}
   15dc0:	mov	fp, sp
   15dc4:	sub	sp, sp, #8
   15dc8:	vstr	s0, [sp, #4]
   15dcc:	mov	r3, #16
   15dd0:	str	r3, [sp]
   15dd4:	add	r3, sp, #4
   15dd8:	bl	158ec <table_set@@Base>
   15ddc:	mov	sp, fp
   15de0:	pop	{fp, pc}

00015de4 <table_set_double@@Base>:
   15de4:	push	{fp, lr}
   15de8:	mov	fp, sp
   15dec:	sub	sp, sp, #16
   15df0:	vstr	d0, [sp, #8]
   15df4:	mov	r3, #17
   15df8:	str	r3, [sp]
   15dfc:	add	r3, sp, #8
   15e00:	bl	158ec <table_set@@Base>
   15e04:	mov	sp, fp
   15e08:	pop	{fp, pc}

00015e0c <table_set_ldouble@@Base>:
   15e0c:	push	{fp, lr}
   15e10:	mov	fp, sp
   15e14:	sub	sp, sp, #16
   15e18:	vstr	d0, [sp, #8]
   15e1c:	mov	r3, #18
   15e20:	str	r3, [sp]
   15e24:	add	r3, sp, #8
   15e28:	bl	158ec <table_set@@Base>
   15e2c:	mov	sp, fp
   15e30:	pop	{fp, pc}

00015e34 <table_set_string@@Base>:
   15e34:	push	{fp, lr}
   15e38:	mov	fp, sp
   15e3c:	sub	sp, sp, #8
   15e40:	mov	ip, #21
   15e44:	str	ip, [sp]
   15e48:	bl	158ec <table_set@@Base>
   15e4c:	mov	sp, fp
   15e50:	pop	{fp, pc}

00015e54 <table_set_char@@Base>:
   15e54:	push	{fp, lr}
   15e58:	mov	fp, sp
   15e5c:	sub	sp, sp, #8
   15e60:	strb	r3, [fp, #-1]
   15e64:	mov	r3, #19
   15e68:	str	r3, [sp]
   15e6c:	sub	r3, fp, #1
   15e70:	bl	158ec <table_set@@Base>
   15e74:	mov	sp, fp
   15e78:	pop	{fp, pc}

00015e7c <table_set_uchar@@Base>:
   15e7c:	push	{fp, lr}
   15e80:	mov	fp, sp
   15e84:	sub	sp, sp, #8
   15e88:	strb	r3, [fp, #-1]
   15e8c:	mov	r3, #20
   15e90:	str	r3, [sp]
   15e94:	sub	r3, fp, #1
   15e98:	bl	158ec <table_set@@Base>
   15e9c:	mov	sp, fp
   15ea0:	pop	{fp, pc}

00015ea4 <table_set_ptr@@Base>:
   15ea4:	push	{fp, lr}
   15ea8:	mov	fp, sp
   15eac:	sub	sp, sp, #8
   15eb0:	mov	ip, #23
   15eb4:	str	ip, [sp]
   15eb8:	bl	158ec <table_set@@Base>
   15ebc:	mov	sp, fp
   15ec0:	pop	{fp, pc}

00015ec4 <table_cell_init@@Base>:
   15ec4:	push	{fp, lr}
   15ec8:	mov	fp, sp
   15ecc:	bl	15edc <table_get_cell_ptr@@Base>
   15ed0:	mov	r1, #0
   15ed4:	str	r1, [r0]
   15ed8:	pop	{fp, pc}

00015edc <table_get_cell_ptr@@Base>:
   15edc:	push	{r4, sl, fp, lr}
   15ee0:	add	fp, sp, #8
   15ee4:	mov	r4, r2
   15ee8:	bl	15630 <table_get_row_ptr@@Base>
   15eec:	ldr	r0, [r0]
   15ef0:	add	r0, r0, r4, lsl #2
   15ef4:	pop	{r4, sl, fp, pc}

00015ef8 <table_cell_destroy@@Base>:
   15ef8:	push	{r4, r5, r6, sl, fp, lr}
   15efc:	add	fp, sp, #16
   15f00:	mov	r4, r2
   15f04:	mov	r5, r1
   15f08:	mov	r6, r0
   15f0c:	mov	r1, r2
   15f10:	bl	13ddc <table_get_column_data_type@@Base>
   15f14:	cmp	r0, #23
   15f18:	popeq	{r4, r5, r6, sl, fp, pc}
   15f1c:	mov	r0, r6
   15f20:	mov	r1, r5
   15f24:	mov	r2, r4
   15f28:	bl	15edc <table_get_cell_ptr@@Base>
   15f2c:	ldr	r0, [r0]
   15f30:	cmp	r0, #0
   15f34:	beq	15f40 <table_cell_destroy@@Base+0x48>
   15f38:	pop	{r4, r5, r6, sl, fp, lr}
   15f3c:	b	12f90 <free@plt>
   15f40:	pop	{r4, r5, r6, sl, fp, pc}

00015f44 <table_cell_to_buffer@@Base>:
   15f44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f48:	add	fp, sp, #24
   15f4c:	sub	sp, sp, #8
   15f50:	mov	r5, r3
   15f54:	mov	r6, r2
   15f58:	mov	r7, r1
   15f5c:	mov	r4, r0
   15f60:	mov	r1, r2
   15f64:	bl	13ddc <table_get_column_data_type@@Base>
   15f68:	cmp	r0, #23
   15f6c:	bhi	1625c <table_cell_to_buffer@@Base+0x318>
   15f70:	ldr	r8, [fp, #8]
   15f74:	add	r1, pc, #0
   15f78:	ldr	pc, [r1, r0, lsl #2]
   15f7c:	ldrdeq	r5, [r1], -ip
   15f80:	strdeq	r5, [r1], -r0
   15f84:	andeq	r6, r1, r4
   15f88:	andeq	r6, r1, r8, lsl r0
   15f8c:	andeq	r6, r1, ip, lsr #32
   15f90:	andeq	r6, r1, r0, asr #32
   15f94:	andeq	r6, r1, r4, asr r0
   15f98:	andeq	r6, r1, r8, rrx
   15f9c:	andeq	r6, r1, r8, lsl #1
   15fa0:	muleq	r1, ip, r0
   15fa4:	strheq	r6, [r1], -r0
   15fa8:	ldrdeq	r6, [r1], -r0
   15fac:	strdeq	r6, [r1], -r0
   15fb0:	andeq	r6, r1, r0, lsl r1
   15fb4:	andeq	r6, r1, r0, lsr r1
   15fb8:	andeq	r6, r1, r0, asr r1
   15fbc:	andeq	r6, r1, r0, ror r1
   15fc0:	muleq	r1, r4, r1
   15fc4:			; <UNDEFINED> instruction: 0x000161b4
   15fc8:	andeq	r6, r1, r0, ror #3
   15fcc:	strdeq	r6, [r1], -r4
   15fd0:	andeq	r6, r1, r4, lsl r2
   15fd4:	andeq	r6, r1, r4, lsr r2
   15fd8:	andeq	r6, r1, r8, ror #4
   15fdc:	mov	r0, r4
   15fe0:	mov	r1, r7
   15fe4:	mov	r2, r6
   15fe8:	bl	1545c <table_get_int@@Base>
   15fec:	b	16244 <table_cell_to_buffer@@Base+0x300>
   15ff0:	mov	r0, r4
   15ff4:	mov	r1, r7
   15ff8:	mov	r2, r6
   15ffc:	bl	15470 <table_get_uint@@Base>
   16000:	b	16078 <table_cell_to_buffer@@Base+0x134>
   16004:	mov	r0, r4
   16008:	mov	r1, r7
   1600c:	mov	r2, r6
   16010:	bl	15484 <table_get_int8@@Base>
   16014:	b	16244 <table_cell_to_buffer@@Base+0x300>
   16018:	mov	r0, r4
   1601c:	mov	r1, r7
   16020:	mov	r2, r6
   16024:	bl	15498 <table_get_uint8@@Base>
   16028:	b	16078 <table_cell_to_buffer@@Base+0x134>
   1602c:	mov	r0, r4
   16030:	mov	r1, r7
   16034:	mov	r2, r6
   16038:	bl	154ac <table_get_int16@@Base>
   1603c:	b	16244 <table_cell_to_buffer@@Base+0x300>
   16040:	mov	r0, r4
   16044:	mov	r1, r7
   16048:	mov	r2, r6
   1604c:	bl	154c0 <table_get_uint16@@Base>
   16050:	b	16078 <table_cell_to_buffer@@Base+0x134>
   16054:	mov	r0, r4
   16058:	mov	r1, r7
   1605c:	mov	r2, r6
   16060:	bl	154d4 <table_get_int32@@Base>
   16064:	b	16244 <table_cell_to_buffer@@Base+0x300>
   16068:	mov	r0, r4
   1606c:	mov	r1, r7
   16070:	mov	r2, r6
   16074:	bl	154e8 <table_get_uint32@@Base>
   16078:	mov	r3, r0
   1607c:	movw	r2, #27356	; 0x6adc
   16080:	movt	r2, #1
   16084:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   16088:	mov	r0, r4
   1608c:	mov	r1, r7
   16090:	mov	r2, r6
   16094:	bl	154fc <table_get_int64@@Base>
   16098:	b	16140 <table_cell_to_buffer@@Base+0x1fc>
   1609c:	mov	r0, r4
   160a0:	mov	r1, r7
   160a4:	mov	r2, r6
   160a8:	bl	15510 <table_get_uint64@@Base>
   160ac:	b	16160 <table_cell_to_buffer@@Base+0x21c>
   160b0:	mov	r0, r4
   160b4:	mov	r1, r7
   160b8:	mov	r2, r6
   160bc:	bl	15524 <table_get_short@@Base>
   160c0:	mov	r3, r0
   160c4:	movw	r2, #27369	; 0x6ae9
   160c8:	movt	r2, #1
   160cc:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   160d0:	mov	r0, r4
   160d4:	mov	r1, r7
   160d8:	mov	r2, r6
   160dc:	bl	15538 <table_get_ushort@@Base>
   160e0:	mov	r3, r0
   160e4:	movw	r2, #27373	; 0x6aed
   160e8:	movt	r2, #1
   160ec:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   160f0:	mov	r0, r4
   160f4:	mov	r1, r7
   160f8:	mov	r2, r6
   160fc:	bl	1554c <table_get_long@@Base>
   16100:	mov	r3, r0
   16104:	movw	r2, #27377	; 0x6af1
   16108:	movt	r2, #1
   1610c:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   16110:	mov	r0, r4
   16114:	mov	r1, r7
   16118:	mov	r2, r6
   1611c:	bl	15560 <table_get_ulong@@Base>
   16120:	mov	r3, r0
   16124:	movw	r2, #27381	; 0x6af5
   16128:	movt	r2, #1
   1612c:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   16130:	mov	r0, r4
   16134:	mov	r1, r7
   16138:	mov	r2, r6
   1613c:	bl	15574 <table_get_llong@@Base>
   16140:	stm	sp, {r0, r1}
   16144:	movw	r2, #27359	; 0x6adf
   16148:	movt	r2, #1
   1614c:	b	161d0 <table_cell_to_buffer@@Base+0x28c>
   16150:	mov	r0, r4
   16154:	mov	r1, r7
   16158:	mov	r2, r6
   1615c:	bl	15588 <table_get_ullong@@Base>
   16160:	stm	sp, {r0, r1}
   16164:	movw	r2, #27364	; 0x6ae4
   16168:	movt	r2, #1
   1616c:	b	161d0 <table_cell_to_buffer@@Base+0x28c>
   16170:	mov	r0, r4
   16174:	mov	r1, r7
   16178:	mov	r2, r6
   1617c:	bl	1559c <table_get_float@@Base>
   16180:	vcvt.f64.f32	d16, s0
   16184:	vstr	d16, [sp]
   16188:	movw	r2, #27388	; 0x6afc
   1618c:	movt	r2, #1
   16190:	b	161d0 <table_cell_to_buffer@@Base+0x28c>
   16194:	mov	r0, r4
   16198:	mov	r1, r7
   1619c:	mov	r2, r6
   161a0:	bl	155b0 <table_get_double@@Base>
   161a4:	vstr	d0, [sp]
   161a8:	movw	r2, #27391	; 0x6aff
   161ac:	movt	r2, #1
   161b0:	b	161d0 <table_cell_to_buffer@@Base+0x28c>
   161b4:	mov	r0, r4
   161b8:	mov	r1, r7
   161bc:	mov	r2, r6
   161c0:	bl	155c4 <table_get_ldouble@@Base>
   161c4:	vstr	d0, [sp]
   161c8:	movw	r2, #27395	; 0x6b03
   161cc:	movt	r2, #1
   161d0:	mov	r0, r5
   161d4:	mov	r1, r8
   161d8:	bl	12fe4 <snprintf@plt>
   161dc:	b	1625c <table_cell_to_buffer@@Base+0x318>
   161e0:	mov	r0, r4
   161e4:	mov	r1, r7
   161e8:	mov	r2, r6
   161ec:	bl	155d8 <table_get_char@@Base>
   161f0:	b	16204 <table_cell_to_buffer@@Base+0x2c0>
   161f4:	mov	r0, r4
   161f8:	mov	r1, r7
   161fc:	mov	r2, r6
   16200:	bl	155ec <table_get_uchar@@Base>
   16204:	mov	r3, r0
   16208:	movw	r2, #27399	; 0x6b07
   1620c:	movt	r2, #1
   16210:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   16214:	mov	r0, r4
   16218:	mov	r1, r7
   1621c:	mov	r2, r6
   16220:	bl	15600 <table_get_string@@Base>
   16224:	mov	r3, r0
   16228:	movw	r2, #27385	; 0x6af9
   1622c:	movt	r2, #1
   16230:	b	16250 <table_cell_to_buffer@@Base+0x30c>
   16234:	mov	r0, r4
   16238:	mov	r1, r7
   1623c:	mov	r2, r6
   16240:	bl	15448 <table_get_bool@@Base>
   16244:	mov	r3, r0
   16248:	movw	r2, #27077	; 0x69c5
   1624c:	movt	r2, #1
   16250:	mov	r0, r5
   16254:	mov	r1, r8
   16258:	bl	12fe4 <snprintf@plt>
   1625c:	mov	r0, #0
   16260:	sub	sp, fp, #24
   16264:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16268:	mov	r0, r4
   1626c:	mov	r1, r7
   16270:	mov	r2, r6
   16274:	bl	15604 <table_get_ptr@@Base>
   16278:	mov	r3, r0
   1627c:	movw	r2, #27402	; 0x6b0a
   16280:	movt	r2, #1
   16284:	b	16250 <table_cell_to_buffer@@Base+0x30c>

00016288 <table_cell_from_buffer@@Base>:
   16288:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1628c:	add	fp, sp, #24
   16290:	sub	sp, sp, #264	; 0x108
   16294:	mov	r7, r3
   16298:	mov	r4, r2
   1629c:	mov	r5, r1
   162a0:	mov	r6, r0
   162a4:	mov	r1, r2
   162a8:	bl	13ddc <table_get_column_data_type@@Base>
   162ac:	cmp	r0, #23
   162b0:	bhi	168e0 <table_cell_from_buffer@@Base+0x658>
   162b4:	add	r1, pc, #0
   162b8:	ldr	pc, [r1, r0, lsl #2]
   162bc:	andeq	r6, r1, ip, lsl r3
   162c0:	andeq	r6, r1, r8, asr r3
   162c4:	muleq	r1, r4, r3
   162c8:	ldrdeq	r6, [r1], -r0
   162cc:	andeq	r6, r1, ip, lsl #8
   162d0:	andeq	r6, r1, r8, asr #8
   162d4:	andeq	r6, r1, r4, lsl #9
   162d8:	andeq	r6, r1, r0, asr #9
   162dc:	strdeq	r6, [r1], -ip
   162e0:	andeq	r6, r1, r0, asr #10
   162e4:	andeq	r6, r1, r4, lsl #11
   162e8:	andeq	r6, r1, r0, asr #11
   162ec:	strdeq	r6, [r1], -ip
   162f0:	andeq	r6, r1, r8, lsr r6
   162f4:	andeq	r6, r1, r4, ror r6
   162f8:			; <UNDEFINED> instruction: 0x000166b8
   162fc:	strdeq	r6, [r1], -ip
   16300:	andeq	r6, r1, r8, lsr r7
   16304:	andeq	r6, r1, r4, ror r7
   16308:			; <UNDEFINED> instruction: 0x000167b0
   1630c:	andeq	r6, r1, ip, ror #15
   16310:	andeq	r6, r1, r8, lsr #16
   16314:	andeq	r6, r1, r4, ror #16
   16318:	andeq	r6, r1, r8, lsr #17
   1631c:	movw	r1, #27077	; 0x69c5
   16320:	movt	r1, #1
   16324:	add	r2, sp, #8
   16328:	mov	r0, r7
   1632c:	bl	12ff0 <__isoc99_sscanf@plt>
   16330:	mov	r1, r0
   16334:	mvn	r0, #0
   16338:	cmp	r1, #1
   1633c:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16340:	ldr	r3, [sp, #8]
   16344:	mov	r0, r6
   16348:	mov	r1, r5
   1634c:	mov	r2, r4
   16350:	bl	15b0c <table_set_int@@Base>
   16354:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16358:	movw	r1, #27356	; 0x6adc
   1635c:	movt	r1, #1
   16360:	add	r2, sp, #8
   16364:	mov	r0, r7
   16368:	bl	12ff0 <__isoc99_sscanf@plt>
   1636c:	mov	r1, r0
   16370:	mvn	r0, #0
   16374:	cmp	r1, #1
   16378:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   1637c:	ldr	r3, [sp, #8]
   16380:	mov	r0, r6
   16384:	mov	r1, r5
   16388:	mov	r2, r4
   1638c:	bl	15b34 <table_set_uint@@Base>
   16390:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16394:	movw	r1, #27405	; 0x6b0d
   16398:	movt	r1, #1
   1639c:	add	r2, sp, #8
   163a0:	mov	r0, r7
   163a4:	bl	12ff0 <__isoc99_sscanf@plt>
   163a8:	mov	r1, r0
   163ac:	mvn	r0, #0
   163b0:	cmp	r1, #1
   163b4:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   163b8:	ldrsb	r3, [sp, #8]
   163bc:	mov	r0, r6
   163c0:	mov	r1, r5
   163c4:	mov	r2, r4
   163c8:	bl	15b5c <table_set_int8@@Base>
   163cc:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   163d0:	movw	r1, #27410	; 0x6b12
   163d4:	movt	r1, #1
   163d8:	add	r2, sp, #8
   163dc:	mov	r0, r7
   163e0:	bl	12ff0 <__isoc99_sscanf@plt>
   163e4:	mov	r1, r0
   163e8:	mvn	r0, #0
   163ec:	cmp	r1, #1
   163f0:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   163f4:	ldrb	r3, [sp, #8]
   163f8:	mov	r0, r6
   163fc:	mov	r1, r5
   16400:	mov	r2, r4
   16404:	bl	15b84 <table_set_uint8@@Base>
   16408:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   1640c:	movw	r1, #27369	; 0x6ae9
   16410:	movt	r1, #1
   16414:	add	r2, sp, #8
   16418:	mov	r0, r7
   1641c:	bl	12ff0 <__isoc99_sscanf@plt>
   16420:	mov	r1, r0
   16424:	mvn	r0, #0
   16428:	cmp	r1, #1
   1642c:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16430:	ldrsh	r3, [sp, #8]
   16434:	mov	r0, r6
   16438:	mov	r1, r5
   1643c:	mov	r2, r4
   16440:	bl	15bac <table_set_int16@@Base>
   16444:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16448:	movw	r1, #27373	; 0x6aed
   1644c:	movt	r1, #1
   16450:	add	r2, sp, #8
   16454:	mov	r0, r7
   16458:	bl	12ff0 <__isoc99_sscanf@plt>
   1645c:	mov	r1, r0
   16460:	mvn	r0, #0
   16464:	cmp	r1, #1
   16468:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   1646c:	ldrh	r3, [sp, #8]
   16470:	mov	r0, r6
   16474:	mov	r1, r5
   16478:	mov	r2, r4
   1647c:	bl	15bd4 <table_set_uint16@@Base>
   16480:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16484:	movw	r1, #27077	; 0x69c5
   16488:	movt	r1, #1
   1648c:	add	r2, sp, #8
   16490:	mov	r0, r7
   16494:	bl	12ff0 <__isoc99_sscanf@plt>
   16498:	mov	r1, r0
   1649c:	mvn	r0, #0
   164a0:	cmp	r1, #1
   164a4:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   164a8:	ldr	r3, [sp, #8]
   164ac:	mov	r0, r6
   164b0:	mov	r1, r5
   164b4:	mov	r2, r4
   164b8:	bl	15bfc <table_set_int32@@Base>
   164bc:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   164c0:	movw	r1, #27356	; 0x6adc
   164c4:	movt	r1, #1
   164c8:	add	r2, sp, #8
   164cc:	mov	r0, r7
   164d0:	bl	12ff0 <__isoc99_sscanf@plt>
   164d4:	mov	r1, r0
   164d8:	mvn	r0, #0
   164dc:	cmp	r1, #1
   164e0:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   164e4:	ldr	r3, [sp, #8]
   164e8:	mov	r0, r6
   164ec:	mov	r1, r5
   164f0:	mov	r2, r4
   164f4:	bl	15c24 <table_set_uint32@@Base>
   164f8:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   164fc:	movw	r1, #27359	; 0x6adf
   16500:	movt	r1, #1
   16504:	add	r2, sp, #8
   16508:	mov	r0, r7
   1650c:	bl	12ff0 <__isoc99_sscanf@plt>
   16510:	mov	r1, r0
   16514:	mvn	r0, #0
   16518:	cmp	r1, #1
   1651c:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16520:	ldr	r0, [sp, #8]
   16524:	ldr	r1, [sp, #12]
   16528:	stm	sp, {r0, r1}
   1652c:	mov	r0, r6
   16530:	mov	r1, r5
   16534:	mov	r2, r4
   16538:	bl	15c4c <table_set_int64@@Base>
   1653c:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16540:	movw	r1, #27364	; 0x6ae4
   16544:	movt	r1, #1
   16548:	add	r2, sp, #8
   1654c:	mov	r0, r7
   16550:	bl	12ff0 <__isoc99_sscanf@plt>
   16554:	mov	r1, r0
   16558:	mvn	r0, #0
   1655c:	cmp	r1, #1
   16560:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16564:	ldr	r0, [sp, #8]
   16568:	ldr	r1, [sp, #12]
   1656c:	stm	sp, {r0, r1}
   16570:	mov	r0, r6
   16574:	mov	r1, r5
   16578:	mov	r2, r4
   1657c:	bl	15c80 <table_set_uint64@@Base>
   16580:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16584:	movw	r1, #27369	; 0x6ae9
   16588:	movt	r1, #1
   1658c:	add	r2, sp, #8
   16590:	mov	r0, r7
   16594:	bl	12ff0 <__isoc99_sscanf@plt>
   16598:	mov	r1, r0
   1659c:	mvn	r0, #0
   165a0:	cmp	r1, #1
   165a4:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   165a8:	ldrsh	r3, [sp, #8]
   165ac:	mov	r0, r6
   165b0:	mov	r1, r5
   165b4:	mov	r2, r4
   165b8:	bl	15cb4 <table_set_short@@Base>
   165bc:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   165c0:	movw	r1, #27373	; 0x6aed
   165c4:	movt	r1, #1
   165c8:	add	r2, sp, #8
   165cc:	mov	r0, r7
   165d0:	bl	12ff0 <__isoc99_sscanf@plt>
   165d4:	mov	r1, r0
   165d8:	mvn	r0, #0
   165dc:	cmp	r1, #1
   165e0:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   165e4:	ldrh	r3, [sp, #8]
   165e8:	mov	r0, r6
   165ec:	mov	r1, r5
   165f0:	mov	r2, r4
   165f4:	bl	15cdc <table_set_ushort@@Base>
   165f8:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   165fc:	movw	r1, #27377	; 0x6af1
   16600:	movt	r1, #1
   16604:	add	r2, sp, #8
   16608:	mov	r0, r7
   1660c:	bl	12ff0 <__isoc99_sscanf@plt>
   16610:	mov	r1, r0
   16614:	mvn	r0, #0
   16618:	cmp	r1, #1
   1661c:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16620:	ldr	r3, [sp, #8]
   16624:	mov	r0, r6
   16628:	mov	r1, r5
   1662c:	mov	r2, r4
   16630:	bl	15d04 <table_set_long@@Base>
   16634:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16638:	movw	r1, #27381	; 0x6af5
   1663c:	movt	r1, #1
   16640:	add	r2, sp, #8
   16644:	mov	r0, r7
   16648:	bl	12ff0 <__isoc99_sscanf@plt>
   1664c:	mov	r1, r0
   16650:	mvn	r0, #0
   16654:	cmp	r1, #1
   16658:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   1665c:	ldr	r3, [sp, #8]
   16660:	mov	r0, r6
   16664:	mov	r1, r5
   16668:	mov	r2, r4
   1666c:	bl	15d2c <table_set_ulong@@Base>
   16670:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16674:	movw	r1, #27359	; 0x6adf
   16678:	movt	r1, #1
   1667c:	add	r2, sp, #8
   16680:	mov	r0, r7
   16684:	bl	12ff0 <__isoc99_sscanf@plt>
   16688:	mov	r1, r0
   1668c:	mvn	r0, #0
   16690:	cmp	r1, #1
   16694:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16698:	ldr	r0, [sp, #8]
   1669c:	ldr	r1, [sp, #12]
   166a0:	stm	sp, {r0, r1}
   166a4:	mov	r0, r6
   166a8:	mov	r1, r5
   166ac:	mov	r2, r4
   166b0:	bl	15d54 <table_set_llong@@Base>
   166b4:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   166b8:	movw	r1, #27364	; 0x6ae4
   166bc:	movt	r1, #1
   166c0:	add	r2, sp, #8
   166c4:	mov	r0, r7
   166c8:	bl	12ff0 <__isoc99_sscanf@plt>
   166cc:	mov	r1, r0
   166d0:	mvn	r0, #0
   166d4:	cmp	r1, #1
   166d8:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   166dc:	ldr	r0, [sp, #8]
   166e0:	ldr	r1, [sp, #12]
   166e4:	stm	sp, {r0, r1}
   166e8:	mov	r0, r6
   166ec:	mov	r1, r5
   166f0:	mov	r2, r4
   166f4:	bl	15d88 <table_set_ullong@@Base>
   166f8:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   166fc:	movw	r1, #27388	; 0x6afc
   16700:	movt	r1, #1
   16704:	add	r2, sp, #8
   16708:	mov	r0, r7
   1670c:	bl	12ff0 <__isoc99_sscanf@plt>
   16710:	mov	r1, r0
   16714:	mvn	r0, #0
   16718:	cmp	r1, #1
   1671c:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16720:	vldr	s0, [sp, #8]
   16724:	mov	r0, r6
   16728:	mov	r1, r5
   1672c:	mov	r2, r4
   16730:	bl	15dbc <table_set_float@@Base>
   16734:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16738:	movw	r1, #27391	; 0x6aff
   1673c:	movt	r1, #1
   16740:	add	r2, sp, #8
   16744:	mov	r0, r7
   16748:	bl	12ff0 <__isoc99_sscanf@plt>
   1674c:	mov	r1, r0
   16750:	mvn	r0, #0
   16754:	cmp	r1, #1
   16758:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   1675c:	vldr	d0, [sp, #8]
   16760:	mov	r0, r6
   16764:	mov	r1, r5
   16768:	mov	r2, r4
   1676c:	bl	15de4 <table_set_double@@Base>
   16770:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16774:	movw	r1, #27395	; 0x6b03
   16778:	movt	r1, #1
   1677c:	add	r2, sp, #8
   16780:	mov	r0, r7
   16784:	bl	12ff0 <__isoc99_sscanf@plt>
   16788:	mov	r1, r0
   1678c:	mvn	r0, #0
   16790:	cmp	r1, #1
   16794:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16798:	vldr	d0, [sp, #8]
   1679c:	mov	r0, r6
   167a0:	mov	r1, r5
   167a4:	mov	r2, r4
   167a8:	bl	15e0c <table_set_ldouble@@Base>
   167ac:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   167b0:	movw	r1, #27399	; 0x6b07
   167b4:	movt	r1, #1
   167b8:	add	r2, sp, #8
   167bc:	mov	r0, r7
   167c0:	bl	12ff0 <__isoc99_sscanf@plt>
   167c4:	mov	r1, r0
   167c8:	mvn	r0, #0
   167cc:	cmp	r1, #1
   167d0:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   167d4:	ldrb	r3, [sp, #8]
   167d8:	mov	r0, r6
   167dc:	mov	r1, r5
   167e0:	mov	r2, r4
   167e4:	bl	15e54 <table_set_char@@Base>
   167e8:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   167ec:	movw	r1, #27399	; 0x6b07
   167f0:	movt	r1, #1
   167f4:	add	r2, sp, #8
   167f8:	mov	r0, r7
   167fc:	bl	12ff0 <__isoc99_sscanf@plt>
   16800:	mov	r1, r0
   16804:	mvn	r0, #0
   16808:	cmp	r1, #1
   1680c:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16810:	ldrb	r3, [sp, #8]
   16814:	mov	r0, r6
   16818:	mov	r1, r5
   1681c:	mov	r2, r4
   16820:	bl	15e7c <table_set_uchar@@Base>
   16824:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16828:	movw	r1, #27385	; 0x6af9
   1682c:	movt	r1, #1
   16830:	add	r2, sp, #8
   16834:	mov	r0, r7
   16838:	bl	12ff0 <__isoc99_sscanf@plt>
   1683c:	mov	r1, r0
   16840:	mvn	r0, #0
   16844:	cmp	r1, #1
   16848:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   1684c:	add	r3, sp, #8
   16850:	mov	r0, r6
   16854:	mov	r1, r5
   16858:	mov	r2, r4
   1685c:	bl	15e34 <table_set_string@@Base>
   16860:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   16864:	movw	r1, #27077	; 0x69c5
   16868:	movt	r1, #1
   1686c:	add	r2, sp, #8
   16870:	mov	r0, r7
   16874:	bl	12ff0 <__isoc99_sscanf@plt>
   16878:	mov	r1, r0
   1687c:	mvn	r0, #0
   16880:	cmp	r1, #1
   16884:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   16888:	ldr	r3, [sp, #8]
   1688c:	cmp	r3, #0
   16890:	movwne	r3, #1
   16894:	mov	r0, r6
   16898:	mov	r1, r5
   1689c:	mov	r2, r4
   168a0:	bl	15ae4 <table_set_bool@@Base>
   168a4:	b	168e0 <table_cell_from_buffer@@Base+0x658>
   168a8:	movw	r1, #27402	; 0x6b0a
   168ac:	movt	r1, #1
   168b0:	add	r2, sp, #8
   168b4:	mov	r0, r7
   168b8:	bl	12ff0 <__isoc99_sscanf@plt>
   168bc:	mov	r1, r0
   168c0:	mvn	r0, #0
   168c4:	cmp	r1, #1
   168c8:	bne	168e4 <table_cell_from_buffer@@Base+0x65c>
   168cc:	ldr	r3, [sp, #8]
   168d0:	mov	r0, r6
   168d4:	mov	r1, r5
   168d8:	mov	r2, r4
   168dc:	bl	15ea4 <table_set_ptr@@Base>
   168e0:	mov	r0, #0
   168e4:	sub	sp, fp, #24
   168e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000168ec <table_cell_nullify@@Base>:
   168ec:	push	{r4, sl, fp, lr}
   168f0:	add	fp, sp, #8
   168f4:	bl	15edc <table_get_cell_ptr@@Base>
   168f8:	mov	r4, r0
   168fc:	ldr	r0, [r0]
   16900:	cmp	r0, #0
   16904:	beq	16914 <table_cell_nullify@@Base+0x28>
   16908:	bl	12f90 <free@plt>
   1690c:	mov	r0, #0
   16910:	str	r0, [r4]
   16914:	mov	r0, #0
   16918:	pop	{r4, sl, fp, pc}

0001691c <__libc_csu_init@@Base>:
   1691c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16920:	mov	r7, r0
   16924:	ldr	r6, [pc, #72]	; 16974 <__libc_csu_init@@Base+0x58>
   16928:	ldr	r5, [pc, #72]	; 16978 <__libc_csu_init@@Base+0x5c>
   1692c:	add	r6, pc, r6
   16930:	add	r5, pc, r5
   16934:	sub	r6, r6, r5
   16938:	mov	r8, r1
   1693c:	mov	r9, r2
   16940:	bl	12f58 <strcmp@plt-0x20>
   16944:	asrs	r6, r6, #2
   16948:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1694c:	mov	r4, #0
   16950:	add	r4, r4, #1
   16954:	ldr	r3, [r5], #4
   16958:	mov	r2, r9
   1695c:	mov	r1, r8
   16960:	mov	r0, r7
   16964:	blx	r3
   16968:	cmp	r6, r4
   1696c:	bne	16950 <__libc_csu_init@@Base+0x34>
   16970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16974:	ldrdeq	r0, [r1], -r8
   16978:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0001697c <__libc_csu_fini@@Base>:
   1697c:	bx	lr

Disassembly of section .fini:

00016980 <.fini>:
   16980:	push	{r3, lr}
   16984:	pop	{r3, pc}
