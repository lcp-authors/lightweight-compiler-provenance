
../repos/inetutils/ping/ping:     file format elf32-littlearm


Disassembly of section .init:

00011308 <.init>:
   11308:	push	{r3, lr}
   1130c:	bl	116c4 <__assert_fail@plt+0x48>
   11310:	pop	{r3, pc}

Disassembly of section .plt:

00011314 <calloc@plt-0x14>:
   11314:	push	{lr}		; (str lr, [sp, #-4]!)
   11318:	ldr	lr, [pc, #4]	; 11324 <calloc@plt-0x4>
   1131c:	add	lr, pc, lr
   11320:	ldr	pc, [lr, #8]!
   11324:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>

00011328 <calloc@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #28, 20	; 0x1c000
   11330:	ldr	pc, [ip, #3292]!	; 0xcdc

00011334 <fputs_unlocked@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #28, 20	; 0x1c000
   1133c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011340 <strcmp@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #28, 20	; 0x1c000
   11348:	ldr	pc, [ip, #3276]!	; 0xccc

0001134c <strtol@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #28, 20	; 0x1c000
   11354:	ldr	pc, [ip, #3268]!	; 0xcc4

00011358 <setsockopt@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #28, 20	; 0x1c000
   11360:	ldr	pc, [ip, #3260]!	; 0xcbc

00011364 <printf@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #28, 20	; 0x1c000
   1136c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011370 <getprotobyname@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #28, 20	; 0x1c000
   11378:	ldr	pc, [ip, #3244]!	; 0xcac

0001137c <fflush@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #28, 20	; 0x1c000
   11384:	ldr	pc, [ip, #3236]!	; 0xca4

00011388 <getuid@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #28, 20	; 0x1c000
   11390:	ldr	pc, [ip, #3228]!	; 0xc9c

00011394 <memmove@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #28, 20	; 0x1c000
   1139c:	ldr	pc, [ip, #3220]!	; 0xc94

000113a0 <strchrnul@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #28, 20	; 0x1c000
   113a8:	ldr	pc, [ip, #3212]!	; 0xc8c

000113ac <free@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #28, 20	; 0x1c000
   113b4:	ldr	pc, [ip, #3204]!	; 0xc84

000113b8 <gai_strerror@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #28, 20	; 0x1c000
   113c0:	ldr	pc, [ip, #3196]!	; 0xc7c

000113c4 <strndup@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #28, 20	; 0x1c000
   113cc:	ldr	pc, [ip, #3188]!	; 0xc74

000113d0 <memcpy@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #28, 20	; 0x1c000
   113d8:	ldr	pc, [ip, #3180]!	; 0xc6c

000113dc <signal@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #28, 20	; 0x1c000
   113e4:	ldr	pc, [ip, #3172]!	; 0xc64

000113e8 <fwrite_unlocked@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #28, 20	; 0x1c000
   113f0:	ldr	pc, [ip, #3164]!	; 0xc5c

000113f4 <inet_ntoa@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #28, 20	; 0x1c000
   113fc:	ldr	pc, [ip, #3156]!	; 0xc54

00011400 <select@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #28, 20	; 0x1c000
   11408:	ldr	pc, [ip, #3148]!	; 0xc4c

0001140c <sleep@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #28, 20	; 0x1c000
   11414:	ldr	pc, [ip, #3140]!	; 0xc44

00011418 <gethostbyaddr@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #28, 20	; 0x1c000
   11420:	ldr	pc, [ip, #3132]!	; 0xc3c

00011424 <recvfrom@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #28, 20	; 0x1c000
   1142c:	ldr	pc, [ip, #3124]!	; 0xc34

00011430 <strdup@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #28, 20	; 0x1c000
   11438:	ldr	pc, [ip, #3116]!	; 0xc2c

0001143c <realloc@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #28, 20	; 0x1c000
   11444:	ldr	pc, [ip, #3108]!	; 0xc24

00011448 <strcasecmp@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #28, 20	; 0x1c000
   11450:	ldr	pc, [ip, #3100]!	; 0xc1c

00011454 <funlockfile@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #28, 20	; 0x1c000
   1145c:	ldr	pc, [ip, #3092]!	; 0xc14

00011460 <fwrite@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #28, 20	; 0x1c000
   11468:	ldr	pc, [ip, #3084]!	; 0xc0c

0001146c <gettimeofday@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #28, 20	; 0x1c000
   11474:	ldr	pc, [ip, #3076]!	; 0xc04

00011478 <error@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #28, 20	; 0x1c000
   11480:	ldr	pc, [ip, #3068]!	; 0xbfc

00011484 <getenv@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #28, 20	; 0x1c000
   1148c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011490 <puts@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #28, 20	; 0x1c000
   11498:	ldr	pc, [ip, #3052]!	; 0xbec

0001149c <malloc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #28, 20	; 0x1c000
   114a4:	ldr	pc, [ip, #3044]!	; 0xbe4

000114a8 <__libc_start_main@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #28, 20	; 0x1c000
   114b0:	ldr	pc, [ip, #3036]!	; 0xbdc

000114b4 <strerror@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #28, 20	; 0x1c000
   114bc:	ldr	pc, [ip, #3028]!	; 0xbd4

000114c0 <__ctype_tolower_loc@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #28, 20	; 0x1c000
   114c8:	ldr	pc, [ip, #3020]!	; 0xbcc

000114cc <__gmon_start__@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #28, 20	; 0x1c000
   114d4:	ldr	pc, [ip, #3012]!	; 0xbc4

000114d8 <__ctype_b_loc@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #28, 20	; 0x1c000
   114e0:	ldr	pc, [ip, #3004]!	; 0xbbc

000114e4 <getpid@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #28, 20	; 0x1c000
   114ec:	ldr	pc, [ip, #2996]!	; 0xbb4

000114f0 <exit@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #28, 20	; 0x1c000
   114f8:	ldr	pc, [ip, #2988]!	; 0xbac

000114fc <bcmp@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #28, 20	; 0x1c000
   11504:	ldr	pc, [ip, #2980]!	; 0xba4

00011508 <strtoul@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #28, 20	; 0x1c000
   11510:	ldr	pc, [ip, #2972]!	; 0xb9c

00011514 <strlen@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #28, 20	; 0x1c000
   1151c:	ldr	pc, [ip, #2964]!	; 0xb94

00011520 <strchr@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #28, 20	; 0x1c000
   11528:	ldr	pc, [ip, #2956]!	; 0xb8c

0001152c <fprintf@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #28, 20	; 0x1c000
   11534:	ldr	pc, [ip, #2948]!	; 0xb84

00011538 <__errno_location@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #28, 20	; 0x1c000
   11540:	ldr	pc, [ip, #2940]!	; 0xb7c

00011544 <snprintf@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #28, 20	; 0x1c000
   1154c:	ldr	pc, [ip, #2932]!	; 0xb74

00011550 <strerror_r@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #28, 20	; 0x1c000
   11558:	ldr	pc, [ip, #2924]!	; 0xb6c

0001155c <setvbuf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #28, 20	; 0x1c000
   11564:	ldr	pc, [ip, #2916]!	; 0xb64

00011568 <memset@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #28, 20	; 0x1c000
   11570:	ldr	pc, [ip, #2908]!	; 0xb5c

00011574 <putchar@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #28, 20	; 0x1c000
   1157c:	ldr	pc, [ip, #2900]!	; 0xb54

00011580 <strtod@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #28, 20	; 0x1c000
   11588:	ldr	pc, [ip, #2892]!	; 0xb4c

0001158c <memchr@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #28, 20	; 0x1c000
   11594:	ldr	pc, [ip, #2884]!	; 0xb44

00011598 <sendto@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #28, 20	; 0x1c000
   115a0:	ldr	pc, [ip, #2876]!	; 0xb3c

000115a4 <__overflow@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #28, 20	; 0x1c000
   115ac:	ldr	pc, [ip, #2868]!	; 0xb34

000115b0 <setlocale@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #28, 20	; 0x1c000
   115b8:	ldr	pc, [ip, #2860]!	; 0xb2c

000115bc <getnameinfo@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #28, 20	; 0x1c000
   115c4:	ldr	pc, [ip, #2852]!	; 0xb24

000115c8 <strrchr@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #28, 20	; 0x1c000
   115d0:	ldr	pc, [ip, #2844]!	; 0xb1c

000115d4 <vfprintf@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #28, 20	; 0x1c000
   115dc:	ldr	pc, [ip, #2836]!	; 0xb14

000115e0 <fputc@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #28, 20	; 0x1c000
   115e8:	ldr	pc, [ip, #2828]!	; 0xb0c

000115ec <setuid@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #28, 20	; 0x1c000
   115f4:	ldr	pc, [ip, #2820]!	; 0xb04

000115f8 <sscanf@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #28, 20	; 0x1c000
   11600:	ldr	pc, [ip, #2812]!	; 0xafc

00011604 <putc@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #28, 20	; 0x1c000
   1160c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011610 <flockfile@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #28, 20	; 0x1c000
   11618:	ldr	pc, [ip, #2796]!	; 0xaec

0001161c <vsnprintf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #28, 20	; 0x1c000
   11624:	ldr	pc, [ip, #2788]!	; 0xae4

00011628 <qsort@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #28, 20	; 0x1c000
   11630:	ldr	pc, [ip, #2780]!	; 0xadc

00011634 <freeaddrinfo@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #28, 20	; 0x1c000
   1163c:	ldr	pc, [ip, #2772]!	; 0xad4

00011640 <getaddrinfo@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #28, 20	; 0x1c000
   11648:	ldr	pc, [ip, #2764]!	; 0xacc

0001164c <socket@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #28, 20	; 0x1c000
   11654:	ldr	pc, [ip, #2756]!	; 0xac4

00011658 <strncmp@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #28, 20	; 0x1c000
   11660:	ldr	pc, [ip, #2748]!	; 0xabc

00011664 <abort@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #28, 20	; 0x1c000
   1166c:	ldr	pc, [ip, #2740]!	; 0xab4

00011670 <close@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #28, 20	; 0x1c000
   11678:	ldr	pc, [ip, #2732]!	; 0xaac

0001167c <__assert_fail@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #28, 20	; 0x1c000
   11684:	ldr	pc, [ip, #2724]!	; 0xaa4

Disassembly of section .text:

00011688 <argp_help@@Base-0x379c>:
   11688:	mov	fp, #0
   1168c:	mov	lr, #0
   11690:	pop	{r1}		; (ldr r1, [sp], #4)
   11694:	mov	r2, sp
   11698:	push	{r2}		; (str r2, [sp, #-4]!)
   1169c:	push	{r0}		; (str r0, [sp, #-4]!)
   116a0:	ldr	ip, [pc, #16]	; 116b8 <__assert_fail@plt+0x3c>
   116a4:	push	{ip}		; (str ip, [sp, #-4]!)
   116a8:	ldr	r0, [pc, #12]	; 116bc <__assert_fail@plt+0x40>
   116ac:	ldr	r3, [pc, #12]	; 116c0 <__assert_fail@plt+0x44>
   116b0:	bl	114a8 <__libc_start_main@plt>
   116b4:	bl	11664 <abort@plt>
   116b8:	andeq	ip, r1, r8, asr #32
   116bc:	andeq	r1, r1, r8, ror r7
   116c0:	andeq	fp, r1, r8, ror #31
   116c4:	ldr	r3, [pc, #20]	; 116e0 <__assert_fail@plt+0x64>
   116c8:	ldr	r2, [pc, #20]	; 116e4 <__assert_fail@plt+0x68>
   116cc:	add	r3, pc, r3
   116d0:	ldr	r2, [r3, r2]
   116d4:	cmp	r2, #0
   116d8:	bxeq	lr
   116dc:	b	114cc <__gmon_start__@plt>
   116e0:	andeq	ip, r1, ip, lsr #18
   116e4:	andeq	r0, r0, ip, lsr #2
   116e8:	ldr	r0, [pc, #24]	; 11708 <__assert_fail@plt+0x8c>
   116ec:	ldr	r3, [pc, #24]	; 1170c <__assert_fail@plt+0x90>
   116f0:	cmp	r3, r0
   116f4:	bxeq	lr
   116f8:	ldr	r3, [pc, #16]	; 11710 <__assert_fail@plt+0x94>
   116fc:	cmp	r3, #0
   11700:	bxeq	lr
   11704:	bx	r3
   11708:	andeq	lr, r2, ip, lsl r6
   1170c:	andeq	lr, r2, ip, lsl r6
   11710:	andeq	r0, r0, r0
   11714:	ldr	r0, [pc, #36]	; 11740 <__assert_fail@plt+0xc4>
   11718:	ldr	r1, [pc, #36]	; 11744 <__assert_fail@plt+0xc8>
   1171c:	sub	r1, r1, r0
   11720:	asr	r1, r1, #2
   11724:	add	r1, r1, r1, lsr #31
   11728:	asrs	r1, r1, #1
   1172c:	bxeq	lr
   11730:	ldr	r3, [pc, #16]	; 11748 <__assert_fail@plt+0xcc>
   11734:	cmp	r3, #0
   11738:	bxeq	lr
   1173c:	bx	r3
   11740:	andeq	lr, r2, ip, lsl r6
   11744:	andeq	lr, r2, ip, lsl r6
   11748:	andeq	r0, r0, r0
   1174c:	push	{r4, lr}
   11750:	ldr	r4, [pc, #24]	; 11770 <__assert_fail@plt+0xf4>
   11754:	ldrb	r3, [r4]
   11758:	cmp	r3, #0
   1175c:	popne	{r4, pc}
   11760:	bl	116e8 <__assert_fail@plt+0x6c>
   11764:	mov	r3, #1
   11768:	strb	r3, [r4]
   1176c:	pop	{r4, pc}
   11770:	andeq	lr, r2, r0, lsr r6
   11774:	b	11714 <__assert_fail@plt+0x98>
   11778:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1177c:	add	fp, sp, #24
   11780:	sub	sp, sp, #16
   11784:	mov	r4, #1
   11788:	mov	r8, r0
   1178c:	mov	r7, r1
   11790:	str	r4, [sp, #8]
   11794:	ldr	r0, [r1]
   11798:	bl	197f8 <argp_parse@@Base+0x13cc>
   1179c:	movw	r1, #55237	; 0xd7c5
   117a0:	mov	r0, #6
   117a4:	movt	r1, #1
   117a8:	bl	115b0 <setlocale@plt>
   117ac:	bl	11388 <getuid@plt>
   117b0:	cmp	r0, #0
   117b4:	movw	r1, #49385	; 0xc0e9
   117b8:	movweq	r0, #58932	; 0xe634
   117bc:	movt	r1, #1
   117c0:	movteq	r0, #2
   117c4:	strbeq	r4, [r0]
   117c8:	movw	r0, #59104	; 0xe6e0
   117cc:	movt	r0, #2
   117d0:	str	r1, [r0]
   117d4:	movw	r0, #49409	; 0xc101
   117d8:	movw	r1, #57680	; 0xe150
   117dc:	movt	r0, #1
   117e0:	movt	r1, #2
   117e4:	bl	19610 <argp_parse@@Base+0x11e4>
   117e8:	mov	r0, #0
   117ec:	add	r1, sp, #12
   117f0:	mov	r2, r7
   117f4:	mov	r3, #0
   117f8:	str	r0, [sp, #4]
   117fc:	movw	r0, #57688	; 0xe158
   11800:	str	r1, [sp]
   11804:	mov	r1, r8
   11808:	movt	r0, #2
   1180c:	bl	1842c <argp_parse@@Base>
   11810:	bl	114e4 <getpid@plt>
   11814:	mov	r1, r0
   11818:	mov	r0, #8
   1181c:	bl	14494 <__assert_fail@plt+0x2e18>
   11820:	movw	r9, #59092	; 0xe6d4
   11824:	cmp	r0, #0
   11828:	movt	r9, #2
   1182c:	str	r0, [r9]
   11830:	beq	11a30 <__assert_fail@plt+0x3b4>
   11834:	add	r2, sp, #8
   11838:	mov	r1, #6
   1183c:	mov	r3, #4
   11840:	bl	12e44 <__assert_fail@plt+0x17c8>
   11844:	bl	11388 <getuid@plt>
   11848:	bl	115ec <setuid@plt>
   1184c:	cmp	r0, #0
   11850:	beq	1186c <__assert_fail@plt+0x1f0>
   11854:	bl	11538 <__errno_location@plt>
   11858:	ldr	r1, [r0]
   1185c:	movw	r2, #49414	; 0xc106
   11860:	mov	r0, #1
   11864:	movt	r2, #1
   11868:	bl	11478 <error@plt>
   1186c:	movw	r0, #58924	; 0xe62c
   11870:	mov	r1, #0
   11874:	mov	r2, #1
   11878:	mov	r3, #0
   1187c:	movt	r0, #2
   11880:	ldr	r0, [r0]
   11884:	bl	1155c <setvbuf@plt>
   11888:	movw	r0, #58936	; 0xe638
   1188c:	ldr	r5, [sp, #12]
   11890:	movt	r0, #2
   11894:	ldr	r1, [r0]
   11898:	cmp	r1, #0
   1189c:	beq	118a8 <__assert_fail@plt+0x22c>
   118a0:	ldr	r0, [r9]
   118a4:	bl	12e3c <__assert_fail@plt+0x17c0>
   118a8:	movw	r0, #59088	; 0xe6d0
   118ac:	movt	r0, #2
   118b0:	ldr	r1, [r0]
   118b4:	cmp	r1, #0
   118b8:	beq	118cc <__assert_fail@plt+0x250>
   118bc:	ldr	r0, [r9]
   118c0:	add	r2, sp, #8
   118c4:	mov	r3, #4
   118c8:	bl	12e44 <__assert_fail@plt+0x17c8>
   118cc:	movw	r0, #59084	; 0xe6cc
   118d0:	movt	r0, #2
   118d4:	ldrb	r0, [r0]
   118d8:	tst	r0, #2
   118dc:	beq	118f4 <__assert_fail@plt+0x278>
   118e0:	movw	r0, #59100	; 0xe6dc
   118e4:	movt	r0, #2
   118e8:	ldr	r1, [r0]
   118ec:	ldr	r0, [r9]
   118f0:	bl	12e78 <__assert_fail@plt+0x17fc>
   118f4:	movw	r0, #58944	; 0xe640
   118f8:	movt	r0, #2
   118fc:	ldr	r0, [r0]
   11900:	cmp	r0, #1
   11904:	blt	1194c <__assert_fail@plt+0x2d0>
   11908:	ldr	r0, [r9]
   1190c:	movw	r3, #58944	; 0xe640
   11910:	mov	r1, #4
   11914:	mov	r2, #2
   11918:	movt	r3, #2
   1191c:	ldr	r0, [r0]
   11920:	str	r1, [sp]
   11924:	mov	r1, #0
   11928:	bl	11358 <setsockopt@plt>
   1192c:	cmn	r0, #1
   11930:	bgt	1194c <__assert_fail@plt+0x2d0>
   11934:	bl	11538 <__errno_location@plt>
   11938:	ldr	r1, [r0]
   1193c:	movw	r2, #49421	; 0xc10d
   11940:	mov	r0, #0
   11944:	movt	r2, #1
   11948:	bl	11478 <error@plt>
   1194c:	movw	r0, #57664	; 0xe140
   11950:	sub	r4, r8, r5
   11954:	movt	r0, #2
   11958:	ldr	r0, [r0]
   1195c:	cmp	r0, #0
   11960:	bmi	119a8 <__assert_fail@plt+0x32c>
   11964:	ldr	r0, [r9]
   11968:	movw	r3, #57664	; 0xe140
   1196c:	mov	r1, #4
   11970:	mov	r2, #1
   11974:	movt	r3, #2
   11978:	ldr	r0, [r0]
   1197c:	str	r1, [sp]
   11980:	mov	r1, #0
   11984:	bl	11358 <setsockopt@plt>
   11988:	cmn	r0, #1
   1198c:	bgt	119a8 <__assert_fail@plt+0x32c>
   11990:	bl	11538 <__errno_location@plt>
   11994:	ldr	r1, [r0]
   11998:	movw	r2, #49440	; 0xc120
   1199c:	mov	r0, #0
   119a0:	movt	r2, #1
   119a4:	bl	11478 <error@plt>
   119a8:	movw	r0, #57656	; 0xe138
   119ac:	movt	r0, #2
   119b0:	ldr	r1, [r0]
   119b4:	movw	r0, #59076	; 0xe6c4
   119b8:	movt	r0, #2
   119bc:	ldr	r0, [r0]
   119c0:	bl	12aa4 <__assert_fail@plt+0x1428>
   119c4:	cmp	r4, #0
   119c8:	beq	11a08 <__assert_fail@plt+0x38c>
   119cc:	sub	r6, r5, r8
   119d0:	movw	r8, #57676	; 0xe14c
   119d4:	add	r7, r7, r5, lsl #2
   119d8:	mov	r4, #0
   119dc:	movt	r8, #2
   119e0:	ldr	r0, [r7], #4
   119e4:	ldr	r1, [r8]
   119e8:	blx	r1
   119ec:	mov	r5, r0
   119f0:	ldr	r0, [r9]
   119f4:	bl	1464c <__assert_fail@plt+0x2fd0>
   119f8:	orr	r4, r5, r4
   119fc:	adds	r6, r6, #1
   11a00:	bcc	119e0 <__assert_fail@plt+0x364>
   11a04:	b	11a0c <__assert_fail@plt+0x390>
   11a08:	mov	r4, #0
   11a0c:	ldr	r0, [r9]
   11a10:	bl	19708 <argp_parse@@Base+0x12dc>
   11a14:	movw	r0, #59080	; 0xe6c8
   11a18:	movt	r0, #2
   11a1c:	ldr	r0, [r0]
   11a20:	bl	19708 <argp_parse@@Base+0x12dc>
   11a24:	mov	r0, r4
   11a28:	sub	sp, fp, #24
   11a2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11a30:	mov	r0, #1
   11a34:	bl	114f0 <exit@plt>
   11a38:	push	{r4, r5, fp, lr}
   11a3c:	add	fp, sp, #8
   11a40:	movw	r1, #49459	; 0xc133
   11a44:	mov	r4, r0
   11a48:	movt	r1, #1
   11a4c:	bl	11448 <strcasecmp@plt>
   11a50:	cmp	r0, #0
   11a54:	beq	11acc <__assert_fail@plt+0x450>
   11a58:	movw	r1, #50598	; 0xc5a6
   11a5c:	mov	r0, r4
   11a60:	movt	r1, #1
   11a64:	bl	11448 <strcasecmp@plt>
   11a68:	cmp	r0, #0
   11a6c:	beq	11adc <__assert_fail@plt+0x460>
   11a70:	movw	r1, #49784	; 0xc278
   11a74:	mov	r0, r4
   11a78:	movt	r1, #1
   11a7c:	bl	11448 <strcasecmp@plt>
   11a80:	movw	r5, #16700	; 0x413c
   11a84:	cmp	r0, #0
   11a88:	movt	r5, #1
   11a8c:	beq	11ac4 <__assert_fail@plt+0x448>
   11a90:	movw	r1, #49464	; 0xc138
   11a94:	mov	r0, r4
   11a98:	movt	r1, #1
   11a9c:	bl	11448 <strcasecmp@plt>
   11aa0:	cmp	r0, #0
   11aa4:	beq	11ac4 <__assert_fail@plt+0x448>
   11aa8:	movw	r2, #49469	; 0xc13d
   11aac:	mov	r0, #1
   11ab0:	mov	r1, #0
   11ab4:	mov	r3, r4
   11ab8:	mov	r5, #0
   11abc:	movt	r2, #1
   11ac0:	bl	11478 <error@plt>
   11ac4:	mov	r0, r5
   11ac8:	pop	{r4, r5, fp, pc}
   11acc:	movw	r5, #12640	; 0x3160
   11ad0:	movt	r5, #1
   11ad4:	mov	r0, r5
   11ad8:	pop	{r4, r5, fp, pc}
   11adc:	movw	r5, #17052	; 0x429c
   11ae0:	movt	r5, #1
   11ae4:	mov	r0, r5
   11ae8:	pop	{r4, r5, fp, pc}
   11aec:	movw	r0, #58948	; 0xe644
   11af0:	mov	r1, #1
   11af4:	movt	r0, #2
   11af8:	str	r1, [r0]
   11afc:	bx	lr
   11b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b04:	add	fp, sp, #28
   11b08:	sub	sp, sp, #4
   11b0c:	vpush	{d8-d9}
   11b10:	sub	sp, sp, #216	; 0xd8
   11b14:	mov	r4, r1
   11b18:	movw	r1, #6892	; 0x1aec
   11b1c:	mov	r8, r0
   11b20:	mov	r0, #2
   11b24:	movt	r1, #1
   11b28:	bl	113dc <signal@plt>
   11b2c:	movw	r7, #58940	; 0xe63c
   11b30:	ldr	sl, [r8]
   11b34:	mov	r6, #0
   11b38:	movt	r7, #2
   11b3c:	str	r6, [sp, #76]	; 0x4c
   11b40:	str	r6, [sp, #72]	; 0x48
   11b44:	str	r6, [sp, #60]	; 0x3c
   11b48:	str	r6, [sp, #56]	; 0x38
   11b4c:	ldr	r0, [r7]
   11b50:	cmp	r0, #0
   11b54:	beq	11b70 <__assert_fail@plt+0x4f4>
   11b58:	mov	r0, r8
   11b5c:	bl	11f24 <__assert_fail@plt+0x8a8>
   11b60:	ldr	r0, [r7]
   11b64:	add	r6, r6, #1
   11b68:	cmp	r6, r0
   11b6c:	bcc	11b58 <__assert_fail@plt+0x4dc>
   11b70:	movw	r0, #59084	; 0xe6cc
   11b74:	str	r4, [sp, #12]
   11b78:	movt	r0, #2
   11b7c:	ldrb	r0, [r0]
   11b80:	tst	r0, #1
   11b84:	bne	11bb0 <__assert_fail@plt+0x534>
   11b88:	ldr	r0, [r8, #20]
   11b8c:	movw	r1, #19923	; 0x4dd3
   11b90:	movt	r1, #4194	; 0x1062
   11b94:	umull	r1, r2, r0, r1
   11b98:	mov	r1, #1000	; 0x3e8
   11b9c:	lsr	r2, r2, #6
   11ba0:	mls	r0, r2, r1, r0
   11ba4:	str	r2, [sp, #52]	; 0x34
   11ba8:	mul	r5, r0, r1
   11bac:	b	11bbc <__assert_fail@plt+0x540>
   11bb0:	mov	r0, #0
   11bb4:	movw	r5, #10000	; 0x2710
   11bb8:	str	r0, [sp, #52]	; 0x34
   11bbc:	add	r0, sp, #64	; 0x40
   11bc0:	mov	r1, #0
   11bc4:	bl	1146c <gettimeofday@plt>
   11bc8:	mov	r0, r8
   11bcc:	bl	11f24 <__assert_fail@plt+0x8a8>
   11bd0:	movw	r7, #58948	; 0xe644
   11bd4:	movt	r7, #2
   11bd8:	ldr	r0, [r7]
   11bdc:	cmp	r0, #0
   11be0:	bne	11ef8 <__assert_fail@plt+0x87c>
   11be4:	movw	r6, #16960	; 0x4240
   11be8:	add	r9, sl, #1
   11bec:	add	sl, sp, #80	; 0x50
   11bf0:	vmov.i32	q4, #0	; 0x00000000
   11bf4:	movt	r6, #15
   11bf8:	add	r0, r5, r6
   11bfc:	str	r0, [sp, #20]
   11c00:	mvn	r0, r5
   11c04:	str	r0, [sp, #16]
   11c08:	add	r0, r8, #12
   11c0c:	str	r0, [sp, #28]
   11c10:	add	r0, sl, #96	; 0x60
   11c14:	str	r0, [sp, #48]	; 0x30
   11c18:	add	r0, sl, #80	; 0x50
   11c1c:	str	r0, [sp, #44]	; 0x2c
   11c20:	add	r0, sl, #64	; 0x40
   11c24:	str	r0, [sp, #40]	; 0x28
   11c28:	add	r0, sl, #48	; 0x30
   11c2c:	str	r0, [sp, #36]	; 0x24
   11c30:	mov	r0, #0
   11c34:	str	r0, [sp, #32]
   11c38:	mov	r0, #0
   11c3c:	str	r0, [sp, #8]
   11c40:	mov	r0, #0
   11c44:	str	r0, [sp, #24]
   11c48:	b	11c80 <__assert_fail@plt+0x604>
   11c4c:	movw	r0, #57668	; 0xe144
   11c50:	movt	r0, #2
   11c54:	ldr	r1, [r0]
   11c58:	ldr	r0, [sp, #28]
   11c5c:	bl	12ec0 <__assert_fail@plt+0x1844>
   11c60:	cmp	r0, #0
   11c64:	bne	11ef8 <__assert_fail@plt+0x87c>
   11c68:	add	r0, sp, #64	; 0x40
   11c6c:	mov	r1, #0
   11c70:	bl	1146c <gettimeofday@plt>
   11c74:	ldr	r0, [r7]
   11c78:	cmp	r0, #0
   11c7c:	bne	11ef8 <__assert_fail@plt+0x87c>
   11c80:	mov	r0, sl
   11c84:	mov	r1, #112	; 0x70
   11c88:	mov	r3, #1
   11c8c:	vst1.64	{d8-d9}, [r0], r1
   11c90:	vst1.64	{d8-d9}, [r0]
   11c94:	ldr	r0, [sp, #48]	; 0x30
   11c98:	vst1.64	{d8-d9}, [r0]
   11c9c:	ldr	r0, [sp, #44]	; 0x2c
   11ca0:	vst1.64	{d8-d9}, [r0]
   11ca4:	ldr	r0, [sp, #40]	; 0x28
   11ca8:	vst1.64	{d8-d9}, [r0]
   11cac:	ldr	r0, [sp, #36]	; 0x24
   11cb0:	vst1.64	{d8-d9}, [r0]
   11cb4:	add	r0, sl, #32
   11cb8:	vst1.64	{d8-d9}, [r0]
   11cbc:	add	r0, sl, #16
   11cc0:	vst1.64	{d8-d9}, [r0]
   11cc4:	ldr	r0, [r8]
   11cc8:	asr	r1, r0, #31
   11ccc:	add	r1, r0, r1, lsr #27
   11cd0:	and	r0, r0, #31
   11cd4:	asr	r1, r1, #5
   11cd8:	ldr	r2, [sl, r1, lsl #2]
   11cdc:	orr	r0, r2, r3, lsl r0
   11ce0:	str	r0, [sl, r1, lsl #2]
   11ce4:	add	r0, sp, #56	; 0x38
   11ce8:	mov	r1, #0
   11cec:	bl	1146c <gettimeofday@plt>
   11cf0:	ldr	r0, [sp, #64]	; 0x40
   11cf4:	ldr	r1, [sp, #52]	; 0x34
   11cf8:	ldr	r2, [sp, #68]	; 0x44
   11cfc:	ldr	r3, [sp, #60]	; 0x3c
   11d00:	add	r0, r0, r1
   11d04:	ldr	r1, [sp, #56]	; 0x38
   11d08:	sub	r0, r0, r1
   11d0c:	add	r1, r2, r5
   11d10:	sub	r1, r1, r3
   11d14:	str	r0, [sp, #72]	; 0x48
   11d18:	cmn	r1, #1
   11d1c:	str	r1, [sp, #76]	; 0x4c
   11d20:	bgt	11d74 <__assert_fail@plt+0x6f8>
   11d24:	ldr	r1, [sp, #16]
   11d28:	mov	r4, r7
   11d2c:	movw	r7, #56963	; 0xde83
   11d30:	mov	ip, r5
   11d34:	mov	r5, r6
   11d38:	movt	r7, #17179	; 0x431b
   11d3c:	mov	r5, ip
   11d40:	add	r1, r3, r1
   11d44:	sub	r1, r1, r2
   11d48:	umull	r1, r7, r1, r7
   11d4c:	mvn	r1, r7, lsr #18
   11d50:	add	r0, r0, r1
   11d54:	ldr	r1, [sp, #20]
   11d58:	str	r0, [sp, #72]	; 0x48
   11d5c:	add	r1, r1, r2
   11d60:	lsr	r2, r7, #18
   11d64:	mov	r7, r4
   11d68:	mla	r1, r2, r6, r1
   11d6c:	sub	r1, r1, r3
   11d70:	str	r1, [sp, #76]	; 0x4c
   11d74:	sub	r2, r6, #1
   11d78:	cmp	r1, r2
   11d7c:	ble	11db4 <__assert_fail@plt+0x738>
   11d80:	movw	r2, #48576	; 0xbdc0
   11d84:	movt	r2, #65520	; 0xfff0
   11d88:	mov	r4, r2
   11d8c:	add	r1, r1, r2
   11d90:	movw	r2, #56963	; 0xde83
   11d94:	movt	r2, #17179	; 0x431b
   11d98:	umull	r2, r3, r1, r2
   11d9c:	lsr	r2, r3, #18
   11da0:	add	r0, r0, r3, lsr #18
   11da4:	mla	r1, r2, r4, r1
   11da8:	add	r0, r0, #1
   11dac:	str	r0, [sp, #72]	; 0x48
   11db0:	str	r1, [sp, #76]	; 0x4c
   11db4:	cmn	r0, #1
   11db8:	mov	r1, sl
   11dbc:	mov	r2, #0
   11dc0:	mov	r3, #0
   11dc4:	movle	r0, #0
   11dc8:	strle	r0, [sp, #72]	; 0x48
   11dcc:	strle	r0, [sp, #76]	; 0x4c
   11dd0:	add	r0, sp, #72	; 0x48
   11dd4:	str	r0, [sp]
   11dd8:	mov	r0, r9
   11ddc:	bl	11400 <select@plt>
   11de0:	cmn	r0, #1
   11de4:	ble	11e5c <__assert_fail@plt+0x7e0>
   11de8:	cmp	r0, #1
   11dec:	bne	11e80 <__assert_fail@plt+0x804>
   11df0:	mov	r0, r8
   11df4:	bl	147d8 <__assert_fail@plt+0x315c>
   11df8:	cmp	r0, #0
   11dfc:	ldr	r0, [sp, #32]
   11e00:	addeq	r0, r0, #1
   11e04:	str	r0, [sp, #32]
   11e08:	ldr	r0, [sp, #24]
   11e0c:	cmp	r0, #0
   11e10:	bne	11e28 <__assert_fail@plt+0x7ac>
   11e14:	add	r4, sp, #56	; 0x38
   11e18:	mov	r1, #0
   11e1c:	mov	r0, r4
   11e20:	bl	1146c <gettimeofday@plt>
   11e24:	str	r4, [sp, #24]
   11e28:	movw	r0, #57668	; 0xe144
   11e2c:	movt	r0, #2
   11e30:	ldr	r1, [r0]
   11e34:	ldr	r0, [sp, #28]
   11e38:	bl	12ec0 <__assert_fail@plt+0x1844>
   11e3c:	cmp	r0, #0
   11e40:	bne	11ef8 <__assert_fail@plt+0x87c>
   11e44:	ldr	r0, [r8, #8]
   11e48:	ldr	r1, [sp, #32]
   11e4c:	sub	r0, r0, #1
   11e50:	cmp	r0, r1
   11e54:	bcs	11c74 <__assert_fail@plt+0x5f8>
   11e58:	b	11ef8 <__assert_fail@plt+0x87c>
   11e5c:	bl	11538 <__errno_location@plt>
   11e60:	ldr	r1, [r0]
   11e64:	cmp	r1, #4
   11e68:	beq	11c74 <__assert_fail@plt+0x5f8>
   11e6c:	movw	r2, #49497	; 0xc159
   11e70:	mov	r0, #1
   11e74:	movt	r2, #1
   11e78:	bl	11478 <error@plt>
   11e7c:	b	11c74 <__assert_fail@plt+0x5f8>
   11e80:	ldr	r0, [r8, #8]
   11e84:	cmp	r0, #0
   11e88:	beq	11e98 <__assert_fail@plt+0x81c>
   11e8c:	ldr	r1, [r8, #112]	; 0x70
   11e90:	cmp	r1, r0
   11e94:	bcs	11ed0 <__assert_fail@plt+0x854>
   11e98:	mov	r0, r8
   11e9c:	bl	11f24 <__assert_fail@plt+0x8a8>
   11ea0:	movw	r0, #59084	; 0xe6cc
   11ea4:	movt	r0, #2
   11ea8:	ldr	r0, [r0]
   11eac:	and	r0, r0, #9
   11eb0:	cmp	r0, #1
   11eb4:	bne	11c4c <__assert_fail@plt+0x5d0>
   11eb8:	movw	r0, #58924	; 0xe62c
   11ebc:	movt	r0, #2
   11ec0:	ldr	r1, [r0]
   11ec4:	mov	r0, #46	; 0x2e
   11ec8:	bl	11604 <putc@plt>
   11ecc:	b	11c4c <__assert_fail@plt+0x5d0>
   11ed0:	ldr	r0, [sp, #8]
   11ed4:	cmp	r0, #0
   11ed8:	bne	11ef8 <__assert_fail@plt+0x87c>
   11edc:	movw	r0, #57672	; 0xe148
   11ee0:	movt	r0, #2
   11ee4:	ldr	r0, [r0]
   11ee8:	str	r0, [sp, #52]	; 0x34
   11eec:	mov	r0, #1
   11ef0:	str	r0, [sp, #8]
   11ef4:	b	11c68 <__assert_fail@plt+0x5ec>
   11ef8:	mov	r0, r8
   11efc:	bl	12e80 <__assert_fail@plt+0x1804>
   11f00:	ldr	r1, [sp, #12]
   11f04:	mov	r0, #0
   11f08:	cmp	r1, #0
   11f0c:	beq	11f14 <__assert_fail@plt+0x898>
   11f10:	blx	r1
   11f14:	sub	sp, fp, #48	; 0x30
   11f18:	vpop	{d8-d9}
   11f1c:	add	sp, sp, #4
   11f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f24:	push	{r4, r5, r6, r7, fp, lr}
   11f28:	add	fp, sp, #16
   11f2c:	sub	sp, sp, #16
   11f30:	movw	r7, #57660	; 0xe13c
   11f34:	mov	r4, r0
   11f38:	mov	r5, #0
   11f3c:	movt	r7, #2
   11f40:	ldr	r0, [r7]
   11f44:	cmp	r0, #8
   11f48:	bcc	11f7c <__assert_fail@plt+0x900>
   11f4c:	add	r6, sp, #8
   11f50:	mov	r1, #0
   11f54:	mov	r5, #0
   11f58:	mov	r0, r6
   11f5c:	bl	1146c <gettimeofday@plt>
   11f60:	mov	r0, r4
   11f64:	mov	r1, r6
   11f68:	mov	r2, #0
   11f6c:	mov	r3, #8
   11f70:	str	r5, [sp]
   11f74:	mov	r5, #8
   11f78:	bl	12d88 <__assert_fail@plt+0x170c>
   11f7c:	movw	r0, #59080	; 0xe6c8
   11f80:	movt	r0, #2
   11f84:	ldr	r1, [r0]
   11f88:	cmp	r1, #0
   11f8c:	beq	11fb0 <__assert_fail@plt+0x934>
   11f90:	ldr	r0, [r7]
   11f94:	mov	r2, #0
   11f98:	str	r2, [sp]
   11f9c:	mov	r2, r5
   11fa0:	subs	r3, r0, r5
   11fa4:	movls	r3, r0
   11fa8:	mov	r0, r4
   11fac:	bl	12d88 <__assert_fail@plt+0x170c>
   11fb0:	mov	r0, r4
   11fb4:	bl	14668 <__assert_fail@plt+0x2fec>
   11fb8:	cmn	r0, #1
   11fbc:	ble	11fc8 <__assert_fail@plt+0x94c>
   11fc0:	sub	sp, fp, #16
   11fc4:	pop	{r4, r5, r6, r7, fp, pc}
   11fc8:	bl	11538 <__errno_location@plt>
   11fcc:	ldr	r1, [r0]
   11fd0:	movw	r2, #50858	; 0xc6aa
   11fd4:	mov	r0, #1
   11fd8:	movt	r2, #1
   11fdc:	bl	11478 <error@plt>
   11fe0:	sub	sp, fp, #16
   11fe4:	pop	{r4, r5, r6, r7, fp, pc}
   11fe8:	push	{r4, r5, fp, lr}
   11fec:	add	fp, sp, #8
   11ff0:	movw	r4, #58924	; 0xe62c
   11ff4:	movt	r4, #2
   11ff8:	ldr	r0, [r4]
   11ffc:	bl	1137c <fflush@plt>
   12000:	movw	r5, #59092	; 0xe6d4
   12004:	movt	r5, #2
   12008:	ldr	r0, [r5]
   1200c:	ldr	r1, [r0, #52]	; 0x34
   12010:	movw	r0, #49511	; 0xc167
   12014:	movt	r0, #1
   12018:	bl	11364 <printf@plt>
   1201c:	ldr	r0, [r5]
   12020:	ldr	r1, [r0, #112]	; 0x70
   12024:	movw	r0, #49539	; 0xc183
   12028:	movt	r0, #1
   1202c:	bl	11364 <printf@plt>
   12030:	ldr	r0, [r5]
   12034:	ldr	r1, [r0, #116]	; 0x74
   12038:	movw	r0, #49565	; 0xc19d
   1203c:	movt	r0, #1
   12040:	bl	11364 <printf@plt>
   12044:	ldr	r0, [r5]
   12048:	ldr	r1, [r0, #120]	; 0x78
   1204c:	cmp	r1, #0
   12050:	beq	12064 <__assert_fail@plt+0x9e8>
   12054:	movw	r0, #49588	; 0xc1b4
   12058:	movt	r0, #1
   1205c:	bl	11364 <printf@plt>
   12060:	ldr	r0, [r5]
   12064:	ldr	r1, [r0, #112]	; 0x70
   12068:	cmp	r1, #0
   1206c:	beq	120a8 <__assert_fail@plt+0xa2c>
   12070:	ldr	r0, [r0, #116]	; 0x74
   12074:	cmp	r1, r0
   12078:	bcs	1208c <__assert_fail@plt+0xa10>
   1207c:	movw	r0, #49606	; 0xc1c6
   12080:	movt	r0, #1
   12084:	bl	11364 <printf@plt>
   12088:	b	120a8 <__assert_fail@plt+0xa2c>
   1208c:	sub	r0, r1, r0
   12090:	mov	r2, #100	; 0x64
   12094:	mul	r0, r0, r2
   12098:	udiv	r1, r0, r1
   1209c:	movw	r0, #49646	; 0xc1ee
   120a0:	movt	r0, #1
   120a4:	bl	11364 <printf@plt>
   120a8:	ldr	r1, [r4]
   120ac:	mov	r0, #10
   120b0:	bl	11604 <putc@plt>
   120b4:	mov	r0, #0
   120b8:	pop	{r4, r5, fp, pc}
   120bc:	nop	{0}
   120c0:	push	{r4, r5, r6, sl, fp, lr}
   120c4:	add	fp, sp, #16
   120c8:	vpush	{d8}
   120cc:	sub	sp, sp, #8
   120d0:	mov	r4, r1
   120d4:	sub	r1, r0, #82	; 0x52
   120d8:	mov	r6, r2
   120dc:	mov	r5, #7
   120e0:	cmp	r1, #179	; 0xb3
   120e4:	bhi	123dc <__assert_fail@plt+0xd60>
   120e8:	add	r0, pc, #0
   120ec:	ldr	pc, [r0, r1, lsl #2]
   120f0:	andeq	r2, r1, r8, asr #7
   120f4:	strdeq	r2, [r1], -r0
   120f8:	andeq	r2, r1, r0, lsl #8
   120fc:	strdeq	r2, [r1], -r0
   12100:	strdeq	r2, [r1], -r0
   12104:	andeq	r2, r1, ip, lsl r4
   12108:	strdeq	r2, [r1], -r0
   1210c:	strdeq	r2, [r1], -r0
   12110:	strdeq	r2, [r1], -r0
   12114:	strdeq	r2, [r1], -r0
   12118:	strdeq	r2, [r1], -r0
   1211c:	strdeq	r2, [r1], -r0
   12120:	strdeq	r2, [r1], -r0
   12124:	strdeq	r2, [r1], -r0
   12128:	strdeq	r2, [r1], -r0
   1212c:	strdeq	r2, [r1], -r0
   12130:	strdeq	r2, [r1], -r0
   12134:	andeq	r2, r1, r0, asr #8
   12138:	andeq	r2, r1, r4, ror #8
   1213c:	strdeq	r2, [r1], -r0
   12140:	andeq	r2, r1, r0, ror r4
   12144:	strdeq	r2, [r1], -r0
   12148:	strdeq	r2, [r1], -r0
   1214c:	andeq	r2, r1, r4, lsl #9
   12150:	strdeq	r2, [r1], -r0
   12154:	strdeq	r2, [r1], -r0
   12158:	andeq	r2, r1, ip, lsl r5
   1215c:	strdeq	r2, [r1], -r0
   12160:	andeq	r2, r1, r4, ror r5
   12164:	strdeq	r2, [r1], -r0
   12168:	andeq	r2, r1, r8, lsl #11
   1216c:			; <UNDEFINED> instruction: 0x000125b0
   12170:	andeq	r2, r1, r4, asr #11
   12174:	ldrdeq	r2, [r1], -r8
   12178:	strdeq	r2, [r1], -r8
   1217c:	strdeq	r2, [r1], -r0
   12180:	andeq	r2, r1, r0, lsl #13
   12184:	muleq	r1, r4, r6
   12188:	strdeq	r2, [r1], -r0
   1218c:	strdeq	r2, [r1], -r0
   12190:	strdeq	r2, [r1], -r0
   12194:	strdeq	r2, [r1], -r0
   12198:	strdeq	r2, [r1], -r0
   1219c:	strdeq	r2, [r1], -r0
   121a0:	strdeq	r2, [r1], -r0
   121a4:	strdeq	r2, [r1], -r0
   121a8:	strdeq	r2, [r1], -r0
   121ac:	strdeq	r2, [r1], -r0
   121b0:	strdeq	r2, [r1], -r0
   121b4:	strdeq	r2, [r1], -r0
   121b8:	strdeq	r2, [r1], -r0
   121bc:	strdeq	r2, [r1], -r0
   121c0:	strdeq	r2, [r1], -r0
   121c4:	strdeq	r2, [r1], -r0
   121c8:	strdeq	r2, [r1], -r0
   121cc:	strdeq	r2, [r1], -r0
   121d0:	strdeq	r2, [r1], -r0
   121d4:	strdeq	r2, [r1], -r0
   121d8:	strdeq	r2, [r1], -r0
   121dc:	strdeq	r2, [r1], -r0
   121e0:	strdeq	r2, [r1], -r0
   121e4:	strdeq	r2, [r1], -r0
   121e8:	strdeq	r2, [r1], -r0
   121ec:	strdeq	r2, [r1], -r0
   121f0:	strdeq	r2, [r1], -r0
   121f4:	strdeq	r2, [r1], -r0
   121f8:	strdeq	r2, [r1], -r0
   121fc:	strdeq	r2, [r1], -r0
   12200:	strdeq	r2, [r1], -r0
   12204:	strdeq	r2, [r1], -r0
   12208:	strdeq	r2, [r1], -r0
   1220c:	strdeq	r2, [r1], -r0
   12210:	strdeq	r2, [r1], -r0
   12214:	strdeq	r2, [r1], -r0
   12218:	strdeq	r2, [r1], -r0
   1221c:	strdeq	r2, [r1], -r0
   12220:	strdeq	r2, [r1], -r0
   12224:	strdeq	r2, [r1], -r0
   12228:	strdeq	r2, [r1], -r0
   1222c:	strdeq	r2, [r1], -r0
   12230:	strdeq	r2, [r1], -r0
   12234:	strdeq	r2, [r1], -r0
   12238:	strdeq	r2, [r1], -r0
   1223c:	strdeq	r2, [r1], -r0
   12240:	strdeq	r2, [r1], -r0
   12244:	strdeq	r2, [r1], -r0
   12248:	strdeq	r2, [r1], -r0
   1224c:	strdeq	r2, [r1], -r0
   12250:	strdeq	r2, [r1], -r0
   12254:	strdeq	r2, [r1], -r0
   12258:	strdeq	r2, [r1], -r0
   1225c:	strdeq	r2, [r1], -r0
   12260:	strdeq	r2, [r1], -r0
   12264:	strdeq	r2, [r1], -r0
   12268:	strdeq	r2, [r1], -r0
   1226c:	strdeq	r2, [r1], -r0
   12270:	strdeq	r2, [r1], -r0
   12274:	strdeq	r2, [r1], -r0
   12278:	strdeq	r2, [r1], -r0
   1227c:	strdeq	r2, [r1], -r0
   12280:	strdeq	r2, [r1], -r0
   12284:	strdeq	r2, [r1], -r0
   12288:	strdeq	r2, [r1], -r0
   1228c:	strdeq	r2, [r1], -r0
   12290:	strdeq	r2, [r1], -r0
   12294:	strdeq	r2, [r1], -r0
   12298:	strdeq	r2, [r1], -r0
   1229c:	strdeq	r2, [r1], -r0
   122a0:	strdeq	r2, [r1], -r0
   122a4:	strdeq	r2, [r1], -r0
   122a8:	strdeq	r2, [r1], -r0
   122ac:	strdeq	r2, [r1], -r0
   122b0:	strdeq	r2, [r1], -r0
   122b4:	strdeq	r2, [r1], -r0
   122b8:	strdeq	r2, [r1], -r0
   122bc:	strdeq	r2, [r1], -r0
   122c0:	strdeq	r2, [r1], -r0
   122c4:	strdeq	r2, [r1], -r0
   122c8:	strdeq	r2, [r1], -r0
   122cc:	strdeq	r2, [r1], -r0
   122d0:	strdeq	r2, [r1], -r0
   122d4:	strdeq	r2, [r1], -r0
   122d8:	strdeq	r2, [r1], -r0
   122dc:	strdeq	r2, [r1], -r0
   122e0:	strdeq	r2, [r1], -r0
   122e4:	strdeq	r2, [r1], -r0
   122e8:	strdeq	r2, [r1], -r0
   122ec:	strdeq	r2, [r1], -r0
   122f0:	strdeq	r2, [r1], -r0
   122f4:	strdeq	r2, [r1], -r0
   122f8:	strdeq	r2, [r1], -r0
   122fc:	strdeq	r2, [r1], -r0
   12300:	strdeq	r2, [r1], -r0
   12304:	strdeq	r2, [r1], -r0
   12308:	strdeq	r2, [r1], -r0
   1230c:	strdeq	r2, [r1], -r0
   12310:	strdeq	r2, [r1], -r0
   12314:	strdeq	r2, [r1], -r0
   12318:	strdeq	r2, [r1], -r0
   1231c:	strdeq	r2, [r1], -r0
   12320:	strdeq	r2, [r1], -r0
   12324:	strdeq	r2, [r1], -r0
   12328:	strdeq	r2, [r1], -r0
   1232c:	strdeq	r2, [r1], -r0
   12330:	strdeq	r2, [r1], -r0
   12334:	strdeq	r2, [r1], -r0
   12338:	strdeq	r2, [r1], -r0
   1233c:	strdeq	r2, [r1], -r0
   12340:	strdeq	r2, [r1], -r0
   12344:	strdeq	r2, [r1], -r0
   12348:	strdeq	r2, [r1], -r0
   1234c:	strdeq	r2, [r1], -r0
   12350:	strdeq	r2, [r1], -r0
   12354:	strdeq	r2, [r1], -r0
   12358:	strdeq	r2, [r1], -r0
   1235c:	strdeq	r2, [r1], -r0
   12360:	strdeq	r2, [r1], -r0
   12364:	strdeq	r2, [r1], -r0
   12368:	strdeq	r2, [r1], -r0
   1236c:	strdeq	r2, [r1], -r0
   12370:	strdeq	r2, [r1], -r0
   12374:	strdeq	r2, [r1], -r0
   12378:	strdeq	r2, [r1], -r0
   1237c:	strdeq	r2, [r1], -r0
   12380:	strdeq	r2, [r1], -r0
   12384:	strdeq	r2, [r1], -r0
   12388:	strdeq	r2, [r1], -r0
   1238c:	strdeq	r2, [r1], -r0
   12390:	strdeq	r2, [r1], -r0
   12394:	strdeq	r2, [r1], -r0
   12398:	strdeq	r2, [r1], -r0
   1239c:	strdeq	r2, [r1], -r0
   123a0:	strdeq	r2, [r1], -r0
   123a4:	strdeq	r2, [r1], -r0
   123a8:			; <UNDEFINED> instruction: 0x000126b8
   123ac:	andeq	r2, r1, r4, asr #14
   123b0:	ldrdeq	r2, [r1], -r0
   123b4:	andeq	r2, r1, ip, asr r8
   123b8:	andeq	r2, r1, r4, lsl #18
   123bc:	andeq	r2, r1, r8, lsr #18
   123c0:	andeq	r0, r0, r0
   123c4:	addmi	r4, pc, r0
   123c8:	movw	r0, #59084	; 0xe6cc
   123cc:	movt	r0, #2
   123d0:	ldr	r1, [r0]
   123d4:	orr	r1, r1, #16
   123d8:	b	129e8 <__assert_fail@plt+0x136c>
   123dc:	movw	r1, #2
   123e0:	movt	r1, #256	; 0x100
   123e4:	cmp	r0, r1
   123e8:	bne	129f0 <__assert_fail@plt+0x1374>
   123ec:	movw	r1, #50792	; 0xc668
   123f0:	mov	r0, r6
   123f4:	movt	r1, #1
   123f8:	bl	16420 <argp_error@@Base>
   123fc:	b	129f0 <__assert_fail@plt+0x1374>
   12400:	mov	r0, r4
   12404:	mov	r1, #255	; 0xff
   12408:	mov	r2, #1
   1240c:	bl	12a00 <__assert_fail@plt+0x1384>
   12410:	movw	r1, #57664	; 0xe140
   12414:	movt	r1, #2
   12418:	b	125f0 <__assert_fail@plt+0xf74>
   1241c:	mov	r0, r4
   12420:	mvn	r1, #-2147483648	; 0x80000000
   12424:	mov	r2, #0
   12428:	mov	r5, #0
   1242c:	bl	12a00 <__assert_fail@plt+0x1384>
   12430:	movw	r1, #57672	; 0xe148
   12434:	movt	r1, #2
   12438:	str	r0, [r1]
   1243c:	b	129f0 <__assert_fail@plt+0x1374>
   12440:	mov	r0, r4
   12444:	mov	r1, #0
   12448:	mov	r2, #1
   1244c:	mov	r5, #0
   12450:	bl	12a00 <__assert_fail@plt+0x1384>
   12454:	movw	r1, #58936	; 0xe638
   12458:	movt	r1, #2
   1245c:	str	r0, [r1]
   12460:	b	129f0 <__assert_fail@plt+0x1374>
   12464:	movw	r0, #59088	; 0xe6d0
   12468:	movt	r0, #2
   1246c:	b	12478 <__assert_fail@plt+0xdfc>
   12470:	movw	r0, #59084	; 0xe6cc
   12474:	movt	r0, #2
   12478:	ldr	r1, [r0]
   1247c:	orr	r1, r1, #1
   12480:	b	129e8 <__assert_fail@plt+0x136c>
   12484:	add	r1, sp, #4
   12488:	mov	r0, r4
   1248c:	bl	11580 <strtod@plt>
   12490:	ldr	r3, [sp, #4]
   12494:	vmov.f64	d8, d0
   12498:	ldrb	r0, [r3]
   1249c:	cmp	r0, #0
   124a0:	beq	124b8 <__assert_fail@plt+0xe3c>
   124a4:	movw	r1, #50707	; 0xc613
   124a8:	mov	r0, r6
   124ac:	mov	r2, r4
   124b0:	movt	r1, #1
   124b4:	bl	16420 <argp_error@@Base>
   124b8:	vldr	d16, [pc, #-256]	; 123c0 <__assert_fail@plt+0xd44>
   124bc:	movw	r0, #59100	; 0xe6dc
   124c0:	mov	r5, #0
   124c4:	movt	r0, #2
   124c8:	vmul.f64	d16, d8, d16
   124cc:	vcvt.u32.f64	s0, d16
   124d0:	vcvt.u32.f64	s2, d16
   124d4:	vstr	s0, [r0]
   124d8:	movw	r0, #59084	; 0xe6cc
   124dc:	movt	r0, #2
   124e0:	ldr	r1, [r0]
   124e4:	orr	r1, r1, #2
   124e8:	str	r1, [r0]
   124ec:	vmov	r0, s2
   124f0:	cmp	r0, #199	; 0xc7
   124f4:	bhi	129f0 <__assert_fail@plt+0x1374>
   124f8:	movw	r0, #58932	; 0xe634
   124fc:	movt	r0, #2
   12500:	ldrb	r0, [r0]
   12504:	cmp	r0, #0
   12508:	bne	129f0 <__assert_fail@plt+0x1374>
   1250c:	movw	r2, #50738	; 0xc632
   12510:	mov	r5, #0
   12514:	movt	r2, #1
   12518:	b	12560 <__assert_fail@plt+0xee4>
   1251c:	add	r1, sp, #4
   12520:	mov	r0, r4
   12524:	mov	r2, #0
   12528:	mov	r5, #0
   1252c:	bl	11508 <strtoul@plt>
   12530:	movw	r1, #58940	; 0xe63c
   12534:	cmp	r0, #0
   12538:	movt	r1, #2
   1253c:	str	r0, [r1]
   12540:	bmi	12554 <__assert_fail@plt+0xed8>
   12544:	ldr	r0, [sp, #4]
   12548:	ldrb	r0, [r0]
   1254c:	cmp	r0, #0
   12550:	beq	129f0 <__assert_fail@plt+0x1374>
   12554:	movw	r2, #50765	; 0xc64d
   12558:	mov	r5, #0
   1255c:	movt	r2, #1
   12560:	mov	r0, #1
   12564:	mov	r1, #0
   12568:	mov	r3, r4
   1256c:	bl	11478 <error@plt>
   12570:	b	129f0 <__assert_fail@plt+0x1374>
   12574:	movw	r0, #59084	; 0xe6cc
   12578:	movt	r0, #2
   1257c:	ldr	r1, [r0]
   12580:	orr	r1, r1, #4
   12584:	b	129e8 <__assert_fail@plt+0x136c>
   12588:	movw	r5, #58952	; 0xe648
   1258c:	movw	r1, #57656	; 0xe138
   12590:	mov	r0, r4
   12594:	movt	r5, #2
   12598:	movt	r1, #2
   1259c:	mov	r2, r5
   125a0:	bl	12b60 <__assert_fail@plt+0x14e4>
   125a4:	movw	r0, #59076	; 0xe6c4
   125a8:	movt	r0, #2
   125ac:	b	129cc <__assert_fail@plt+0x1350>
   125b0:	movw	r0, #59084	; 0xe6cc
   125b4:	movt	r0, #2
   125b8:	ldr	r1, [r0]
   125bc:	orr	r1, r1, #8
   125c0:	b	129e8 <__assert_fail@plt+0x136c>
   125c4:	movw	r0, #59088	; 0xe6d0
   125c8:	movt	r0, #2
   125cc:	ldr	r1, [r0]
   125d0:	orr	r1, r1, #5
   125d4:	b	129e8 <__assert_fail@plt+0x136c>
   125d8:	mov	r0, r4
   125dc:	movw	r1, #65399	; 0xff77
   125e0:	mov	r2, #1
   125e4:	bl	12a00 <__assert_fail@plt+0x1384>
   125e8:	movw	r1, #57660	; 0xe13c
   125ec:	movt	r1, #2
   125f0:	str	r0, [r1]
   125f4:	b	129ec <__assert_fail@plt+0x1370>
   125f8:	movw	r1, #49459	; 0xc133
   125fc:	mov	r0, r4
   12600:	movt	r1, #1
   12604:	bl	11448 <strcasecmp@plt>
   12608:	cmp	r0, #0
   1260c:	beq	129a8 <__assert_fail@plt+0x132c>
   12610:	movw	r1, #50598	; 0xc5a6
   12614:	mov	r0, r4
   12618:	movt	r1, #1
   1261c:	bl	11448 <strcasecmp@plt>
   12620:	cmp	r0, #0
   12624:	beq	129bc <__assert_fail@plt+0x1340>
   12628:	movw	r1, #49784	; 0xc278
   1262c:	mov	r0, r4
   12630:	movt	r1, #1
   12634:	bl	11448 <strcasecmp@plt>
   12638:	movw	r5, #16700	; 0x413c
   1263c:	cmp	r0, #0
   12640:	movt	r5, #1
   12644:	beq	129c4 <__assert_fail@plt+0x1348>
   12648:	movw	r1, #49464	; 0xc138
   1264c:	mov	r0, r4
   12650:	movt	r1, #1
   12654:	bl	11448 <strcasecmp@plt>
   12658:	cmp	r0, #0
   1265c:	beq	129c4 <__assert_fail@plt+0x1348>
   12660:	movw	r2, #49469	; 0xc13d
   12664:	mov	r0, #1
   12668:	mov	r1, #0
   1266c:	mov	r3, r4
   12670:	mov	r5, #0
   12674:	movt	r2, #1
   12678:	bl	11478 <error@plt>
   1267c:	b	129c4 <__assert_fail@plt+0x1348>
   12680:	movw	r0, #59084	; 0xe6cc
   12684:	movt	r0, #2
   12688:	ldr	r1, [r0]
   1268c:	orr	r1, r1, #32
   12690:	b	129e8 <__assert_fail@plt+0x136c>
   12694:	mov	r0, r4
   12698:	mvn	r1, #-2147483648	; 0x80000000
   1269c:	mov	r2, #0
   126a0:	mov	r5, #0
   126a4:	bl	12a00 <__assert_fail@plt+0x1384>
   126a8:	movw	r1, #57668	; 0xe144
   126ac:	movt	r1, #2
   126b0:	str	r0, [r1]
   126b4:	b	129f0 <__assert_fail@plt+0x1374>
   126b8:	movw	r0, #49459	; 0xc133
   126bc:	movt	r0, #1
   126c0:	mov	r1, r0
   126c4:	bl	11448 <strcasecmp@plt>
   126c8:	cmp	r0, #0
   126cc:	beq	128f8 <__assert_fail@plt+0x127c>
   126d0:	movw	r0, #49459	; 0xc133
   126d4:	movw	r1, #50598	; 0xc5a6
   126d8:	movt	r0, #1
   126dc:	movt	r1, #1
   126e0:	bl	11448 <strcasecmp@plt>
   126e4:	cmp	r0, #0
   126e8:	beq	1298c <__assert_fail@plt+0x1310>
   126ec:	movw	r0, #49459	; 0xc133
   126f0:	movw	r1, #49784	; 0xc278
   126f4:	movt	r0, #1
   126f8:	movt	r1, #1
   126fc:	bl	11448 <strcasecmp@plt>
   12700:	movw	r4, #16700	; 0x413c
   12704:	cmp	r0, #0
   12708:	movt	r4, #1
   1270c:	beq	12994 <__assert_fail@plt+0x1318>
   12710:	movw	r0, #49459	; 0xc133
   12714:	movw	r1, #49464	; 0xc138
   12718:	movt	r0, #1
   1271c:	movt	r1, #1
   12720:	bl	11448 <strcasecmp@plt>
   12724:	cmp	r0, #0
   12728:	beq	12994 <__assert_fail@plt+0x1318>
   1272c:	movw	r2, #49469	; 0xc13d
   12730:	movw	r3, #49459	; 0xc133
   12734:	mov	r4, #0
   12738:	movt	r2, #1
   1273c:	movt	r3, #1
   12740:	b	128e8 <__assert_fail@plt+0x126c>
   12744:	movw	r0, #49784	; 0xc278
   12748:	movw	r1, #49459	; 0xc133
   1274c:	movt	r0, #1
   12750:	movt	r1, #1
   12754:	bl	11448 <strcasecmp@plt>
   12758:	cmp	r0, #0
   1275c:	beq	128f8 <__assert_fail@plt+0x127c>
   12760:	movw	r0, #49784	; 0xc278
   12764:	movw	r1, #50598	; 0xc5a6
   12768:	movt	r0, #1
   1276c:	movt	r1, #1
   12770:	bl	11448 <strcasecmp@plt>
   12774:	cmp	r0, #0
   12778:	beq	1298c <__assert_fail@plt+0x1310>
   1277c:	movw	r0, #49784	; 0xc278
   12780:	movt	r0, #1
   12784:	mov	r1, r0
   12788:	bl	11448 <strcasecmp@plt>
   1278c:	movw	r4, #16700	; 0x413c
   12790:	cmp	r0, #0
   12794:	movt	r4, #1
   12798:	beq	12994 <__assert_fail@plt+0x1318>
   1279c:	movw	r0, #49784	; 0xc278
   127a0:	movw	r1, #49464	; 0xc138
   127a4:	movt	r0, #1
   127a8:	movt	r1, #1
   127ac:	bl	11448 <strcasecmp@plt>
   127b0:	cmp	r0, #0
   127b4:	beq	12994 <__assert_fail@plt+0x1318>
   127b8:	movw	r2, #49469	; 0xc13d
   127bc:	movw	r3, #49784	; 0xc278
   127c0:	mov	r4, #0
   127c4:	movt	r2, #1
   127c8:	movt	r3, #1
   127cc:	b	128e8 <__assert_fail@plt+0x126c>
   127d0:	movw	r0, #50598	; 0xc5a6
   127d4:	movw	r1, #49459	; 0xc133
   127d8:	movt	r0, #1
   127dc:	movt	r1, #1
   127e0:	bl	11448 <strcasecmp@plt>
   127e4:	cmp	r0, #0
   127e8:	beq	128f8 <__assert_fail@plt+0x127c>
   127ec:	movw	r0, #50598	; 0xc5a6
   127f0:	movt	r0, #1
   127f4:	mov	r1, r0
   127f8:	bl	11448 <strcasecmp@plt>
   127fc:	cmp	r0, #0
   12800:	beq	1298c <__assert_fail@plt+0x1310>
   12804:	movw	r0, #50598	; 0xc5a6
   12808:	movw	r1, #49784	; 0xc278
   1280c:	movt	r0, #1
   12810:	movt	r1, #1
   12814:	bl	11448 <strcasecmp@plt>
   12818:	movw	r4, #16700	; 0x413c
   1281c:	cmp	r0, #0
   12820:	movt	r4, #1
   12824:	beq	12994 <__assert_fail@plt+0x1318>
   12828:	movw	r0, #50598	; 0xc5a6
   1282c:	movw	r1, #49464	; 0xc138
   12830:	movt	r0, #1
   12834:	movt	r1, #1
   12838:	bl	11448 <strcasecmp@plt>
   1283c:	cmp	r0, #0
   12840:	beq	12994 <__assert_fail@plt+0x1318>
   12844:	movw	r2, #49469	; 0xc13d
   12848:	movw	r3, #50598	; 0xc5a6
   1284c:	mov	r4, #0
   12850:	movt	r2, #1
   12854:	movt	r3, #1
   12858:	b	128e8 <__assert_fail@plt+0x126c>
   1285c:	movw	r0, #49848	; 0xc2b8
   12860:	movw	r1, #49459	; 0xc133
   12864:	movt	r0, #1
   12868:	movt	r1, #1
   1286c:	bl	11448 <strcasecmp@plt>
   12870:	cmp	r0, #0
   12874:	beq	128f8 <__assert_fail@plt+0x127c>
   12878:	movw	r0, #49848	; 0xc2b8
   1287c:	movw	r1, #50598	; 0xc5a6
   12880:	movt	r0, #1
   12884:	movt	r1, #1
   12888:	bl	11448 <strcasecmp@plt>
   1288c:	cmp	r0, #0
   12890:	beq	1298c <__assert_fail@plt+0x1310>
   12894:	movw	r0, #49848	; 0xc2b8
   12898:	movw	r1, #49784	; 0xc278
   1289c:	movt	r0, #1
   128a0:	movt	r1, #1
   128a4:	bl	11448 <strcasecmp@plt>
   128a8:	movw	r4, #16700	; 0x413c
   128ac:	cmp	r0, #0
   128b0:	movt	r4, #1
   128b4:	beq	12994 <__assert_fail@plt+0x1318>
   128b8:	movw	r0, #49848	; 0xc2b8
   128bc:	movw	r1, #49464	; 0xc138
   128c0:	movt	r0, #1
   128c4:	movt	r1, #1
   128c8:	bl	11448 <strcasecmp@plt>
   128cc:	cmp	r0, #0
   128d0:	beq	12994 <__assert_fail@plt+0x1318>
   128d4:	movw	r2, #49469	; 0xc13d
   128d8:	movw	r3, #49848	; 0xc2b8
   128dc:	mov	r4, #0
   128e0:	movt	r2, #1
   128e4:	movt	r3, #1
   128e8:	mov	r0, #1
   128ec:	mov	r1, #0
   128f0:	bl	11478 <error@plt>
   128f4:	b	12994 <__assert_fail@plt+0x1318>
   128f8:	movw	r4, #12640	; 0x3160
   128fc:	movt	r4, #1
   12900:	b	12994 <__assert_fail@plt+0x1318>
   12904:	mov	r0, r4
   12908:	mov	r1, #255	; 0xff
   1290c:	mov	r2, #0
   12910:	mov	r5, #0
   12914:	bl	12a00 <__assert_fail@plt+0x1384>
   12918:	movw	r1, #58944	; 0xe640
   1291c:	movt	r1, #2
   12920:	str	r0, [r1]
   12924:	b	129f0 <__assert_fail@plt+0x1374>
   12928:	movw	r0, #59084	; 0xe6cc
   1292c:	movt	r0, #2
   12930:	ldr	r1, [r0]
   12934:	orr	r1, r1, #64	; 0x40
   12938:	str	r1, [r0]
   1293c:	movw	r1, #50813	; 0xc67d
   12940:	mov	r0, r4
   12944:	movt	r1, #1
   12948:	bl	11448 <strcasecmp@plt>
   1294c:	cmp	r0, #0
   12950:	beq	129b4 <__assert_fail@plt+0x1338>
   12954:	movw	r1, #50820	; 0xc684
   12958:	mov	r0, r4
   1295c:	movt	r1, #1
   12960:	bl	11448 <strcasecmp@plt>
   12964:	cmp	r0, #0
   12968:	beq	129d4 <__assert_fail@plt+0x1358>
   1296c:	movw	r2, #50827	; 0xc68b
   12970:	mov	r0, #1
   12974:	mov	r1, #0
   12978:	mov	r3, r4
   1297c:	mov	r5, #0
   12980:	movt	r2, #1
   12984:	bl	11478 <error@plt>
   12988:	b	129d8 <__assert_fail@plt+0x135c>
   1298c:	movw	r4, #17052	; 0x429c
   12990:	movt	r4, #1
   12994:	movw	r0, #57676	; 0xe14c
   12998:	mov	r5, #0
   1299c:	movt	r0, #2
   129a0:	str	r4, [r0]
   129a4:	b	129f0 <__assert_fail@plt+0x1374>
   129a8:	movw	r5, #12640	; 0x3160
   129ac:	movt	r5, #1
   129b0:	b	129c4 <__assert_fail@plt+0x1348>
   129b4:	mov	r5, #1
   129b8:	b	129d8 <__assert_fail@plt+0x135c>
   129bc:	movw	r5, #17052	; 0x429c
   129c0:	movt	r5, #1
   129c4:	movw	r0, #57676	; 0xe14c
   129c8:	movt	r0, #2
   129cc:	str	r5, [r0]
   129d0:	b	129ec <__assert_fail@plt+0x1370>
   129d4:	mov	r5, #2
   129d8:	movw	r0, #59096	; 0xe6d8
   129dc:	movt	r0, #2
   129e0:	ldr	r1, [r0]
   129e4:	orr	r1, r1, r5
   129e8:	str	r1, [r0]
   129ec:	mov	r5, #0
   129f0:	mov	r0, r5
   129f4:	sub	sp, fp, #24
   129f8:	vpop	{d8}
   129fc:	pop	{r4, r5, r6, sl, fp, pc}
   12a00:	push	{r4, r5, r6, r7, fp, lr}
   12a04:	add	fp, sp, #16
   12a08:	sub	sp, sp, #8
   12a0c:	mov	r7, r2
   12a10:	mov	r6, r1
   12a14:	add	r1, sp, #4
   12a18:	mov	r2, #0
   12a1c:	mov	r4, r0
   12a20:	bl	11508 <strtoul@plt>
   12a24:	mov	r5, r0
   12a28:	ldr	r0, [sp, #4]
   12a2c:	ldrb	r1, [r0]
   12a30:	cmp	r1, #0
   12a34:	beq	12a54 <__assert_fail@plt+0x13d8>
   12a38:	movw	r2, #50707	; 0xc613
   12a3c:	str	r0, [sp]
   12a40:	mov	r0, #1
   12a44:	mov	r1, #0
   12a48:	mov	r3, r4
   12a4c:	movt	r2, #1
   12a50:	bl	11478 <error@plt>
   12a54:	orrs	r0, r5, r7
   12a58:	bne	12a74 <__assert_fail@plt+0x13f8>
   12a5c:	movw	r2, #50738	; 0xc632
   12a60:	mov	r0, #1
   12a64:	mov	r1, #0
   12a68:	mov	r3, r4
   12a6c:	movt	r2, #1
   12a70:	bl	11478 <error@plt>
   12a74:	cmp	r6, #0
   12a78:	cmpne	r5, r6
   12a7c:	bls	12a98 <__assert_fail@plt+0x141c>
   12a80:	movw	r2, #50873	; 0xc6b9
   12a84:	mov	r0, #1
   12a88:	mov	r1, #0
   12a8c:	mov	r3, r4
   12a90:	movt	r2, #1
   12a94:	bl	11478 <error@plt>
   12a98:	mov	r0, r5
   12a9c:	sub	sp, fp, #16
   12aa0:	pop	{r4, r5, r6, r7, fp, pc}
   12aa4:	push	{r4, r5, r6, r7, fp, lr}
   12aa8:	add	fp, sp, #16
   12aac:	movw	r7, #57660	; 0xe13c
   12ab0:	mov	r5, r0
   12ab4:	movt	r7, #2
   12ab8:	ldr	r0, [r7]
   12abc:	cmp	r0, #0
   12ac0:	beq	12b5c <__assert_fail@plt+0x14e0>
   12ac4:	mov	r4, r1
   12ac8:	bl	19e60 <argp_parse@@Base+0x1a34>
   12acc:	ldr	r2, [r7]
   12ad0:	movw	ip, #59080	; 0xe6c8
   12ad4:	cmp	r5, #0
   12ad8:	movt	ip, #2
   12adc:	str	r0, [ip]
   12ae0:	beq	12b24 <__assert_fail@plt+0x14a8>
   12ae4:	cmp	r2, #1
   12ae8:	blt	12b5c <__assert_fail@plt+0x14e0>
   12aec:	mov	r2, #0
   12af0:	mov	r3, #0
   12af4:	add	r1, r3, #1
   12af8:	ldrb	r3, [r5, r3]
   12afc:	ldr	r6, [ip]
   12b00:	cmp	r1, r4
   12b04:	movcs	r1, r2
   12b08:	strb	r3, [r0], #1
   12b0c:	ldr	r3, [r7]
   12b10:	add	r3, r6, r3
   12b14:	cmp	r0, r3
   12b18:	mov	r3, r1
   12b1c:	bcc	12af4 <__assert_fail@plt+0x1478>
   12b20:	b	12b5c <__assert_fail@plt+0x14e0>
   12b24:	cmp	r2, #0
   12b28:	beq	12b5c <__assert_fail@plt+0x14e0>
   12b2c:	mov	r2, #0
   12b30:	strb	r2, [r0]
   12b34:	ldr	r0, [r7]
   12b38:	cmp	r0, #2
   12b3c:	popcc	{r4, r5, r6, r7, fp, pc}
   12b40:	mov	r0, #1
   12b44:	ldr	r1, [ip]
   12b48:	strb	r0, [r1, r0]
   12b4c:	add	r0, r0, #1
   12b50:	ldr	r1, [r7]
   12b54:	cmp	r0, r1
   12b58:	bcc	12b44 <__assert_fail@plt+0x14c8>
   12b5c:	pop	{r4, r5, r6, r7, fp, pc}
   12b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b64:	add	fp, sp, #28
   12b68:	sub	sp, sp, #12
   12b6c:	mov	r6, r0
   12b70:	ldrb	r0, [r0]
   12b74:	mov	r4, r1
   12b78:	cmp	r0, #0
   12b7c:	beq	12bf8 <__assert_fail@plt+0x157c>
   12b80:	movw	r8, #50898	; 0xc6d2
   12b84:	mov	r5, r2
   12b88:	mov	sl, #0
   12b8c:	add	r9, sp, #8
   12b90:	add	r7, sp, #4
   12b94:	movt	r8, #1
   12b98:	b	12bb4 <__assert_fail@plt+0x1538>
   12b9c:	ldmib	sp, {r0, r1}
   12ba0:	strb	r1, [r5, sl]
   12ba4:	add	sl, sl, #1
   12ba8:	ldrb	r0, [r6, r0]!
   12bac:	cmp	r0, #0
   12bb0:	beq	12bfc <__assert_fail@plt+0x1580>
   12bb4:	ldr	r0, [r4]
   12bb8:	cmp	sl, r0
   12bbc:	bge	12bfc <__assert_fail@plt+0x1580>
   12bc0:	mov	r0, r6
   12bc4:	mov	r1, r8
   12bc8:	mov	r2, r9
   12bcc:	mov	r3, r7
   12bd0:	bl	115f8 <sscanf@plt>
   12bd4:	cmp	r0, #1
   12bd8:	beq	12b9c <__assert_fail@plt+0x1520>
   12bdc:	movw	r2, #50904	; 0xc6d8
   12be0:	mov	r0, #1
   12be4:	mov	r1, #0
   12be8:	mov	r3, r6
   12bec:	movt	r2, #1
   12bf0:	bl	11478 <error@plt>
   12bf4:	b	12b9c <__assert_fail@plt+0x1520>
   12bf8:	mov	sl, #0
   12bfc:	str	sl, [r4]
   12c00:	sub	sp, fp, #28
   12c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c08:	ldr	r3, [r1, #4]
   12c0c:	ldr	r2, [r0, #4]
   12c10:	ldr	ip, [r0]
   12c14:	sub	r3, r2, r3
   12c18:	cmn	r3, #1
   12c1c:	str	r3, [r0, #4]
   12c20:	bgt	12c38 <__assert_fail@plt+0x15bc>
   12c24:	add	r2, r3, #576	; 0x240
   12c28:	sub	ip, ip, #1
   12c2c:	add	r2, r2, #999424	; 0xf4000
   12c30:	str	ip, [r0]
   12c34:	str	r2, [r0, #4]
   12c38:	ldr	r1, [r1]
   12c3c:	sub	r1, ip, r1
   12c40:	str	r1, [r0]
   12c44:	bx	lr
   12c48:	vcmpe.f64	d0, #0.0
   12c4c:	vneg.f64	d16, d0
   12c50:	vmrs	APSR_nzcv, fpscr
   12c54:	vmovmi.f64	d0, d16
   12c58:	bx	lr
   12c5c:	vcmpe.f64	d0, #0.0
   12c60:	vmov.i32	d16, #0	; 0x00000000
   12c64:	vmrs	APSR_nzcv, fpscr
   12c68:	vcmpepl.f64	d0, d1
   12c6c:	vmrspl	APSR_nzcv, fpscr
   12c70:	bmi	12cac <__assert_fail@plt+0x1630>
   12c74:	vmov.f64	d17, #96	; 0x3f000000  0.5
   12c78:	vmul.f64	d18, d0, d17
   12c7c:	vdiv.f64	d16, d0, d18
   12c80:	vadd.f64	d16, d18, d16
   12c84:	vmul.f64	d16, d16, d17
   12c88:	vsub.f64	d18, d16, d18
   12c8c:	vcmpe.f64	d18, #0.0
   12c90:	vneg.f64	d19, d18
   12c94:	vmrs	APSR_nzcv, fpscr
   12c98:	vmovmi.f64	d18, d19
   12c9c:	vcmpe.f64	d18, d1
   12ca0:	vmov.f64	d18, d16
   12ca4:	vmrs	APSR_nzcv, fpscr
   12ca8:	bgt	12c7c <__assert_fail@plt+0x1600>
   12cac:	vorr	d0, d16, d16
   12cb0:	bx	lr
   12cb4:	mvn	r0, r0
   12cb8:	lsr	r0, r0, #31
   12cbc:	bx	lr
   12cc0:	push	{r4, r5, fp, lr}
   12cc4:	add	fp, sp, #8
   12cc8:	mov	r5, r0
   12ccc:	movw	r0, #50929	; 0xc6f1
   12cd0:	movw	r4, #51071	; 0xc77f
   12cd4:	cmp	r2, #0
   12cd8:	bic	r3, r2, #-2147483648	; 0x80000000
   12cdc:	movt	r0, #1
   12ce0:	movt	r4, #1
   12ce4:	movmi	r4, r0
   12ce8:	mov	r0, r5
   12cec:	mov	r2, r4
   12cf0:	bl	11544 <snprintf@plt>
   12cf4:	mov	r0, r5
   12cf8:	pop	{r4, r5, fp, pc}
   12cfc:	push	{r4, r5, fp, lr}
   12d00:	add	fp, sp, #8
   12d04:	mov	r4, r0
   12d08:	ldr	r0, [r0, #80]	; 0x50
   12d0c:	cmp	r0, #0
   12d10:	bne	12d38 <__assert_fail@plt+0x16bc>
   12d14:	cmp	r1, #0
   12d18:	ldr	r1, [r4, #56]	; 0x38
   12d1c:	mov	r0, #80	; 0x50
   12d20:	movwne	r0, #8
   12d24:	add	r0, r1, r0
   12d28:	bl	1a420 <argp_parse@@Base+0x1ff4>
   12d2c:	cmp	r0, #0
   12d30:	str	r0, [r4, #80]	; 0x50
   12d34:	beq	12d7c <__assert_fail@plt+0x1700>
   12d38:	ldr	r0, [r4, #76]	; 0x4c
   12d3c:	mov	r5, #0
   12d40:	cmp	r0, #0
   12d44:	beq	12d50 <__assert_fail@plt+0x16d4>
   12d48:	mov	r0, r5
   12d4c:	pop	{r4, r5, fp, pc}
   12d50:	ldr	r0, [r4, #72]	; 0x48
   12d54:	bl	1a420 <argp_parse@@Base+0x1ff4>
   12d58:	cmp	r0, #0
   12d5c:	str	r0, [r4, #76]	; 0x4c
   12d60:	beq	12d7c <__assert_fail@plt+0x1700>
   12d64:	ldr	r2, [r4, #72]	; 0x48
   12d68:	mov	r1, #0
   12d6c:	mov	r5, #0
   12d70:	bl	11568 <memset@plt>
   12d74:	mov	r0, r5
   12d78:	pop	{r4, r5, fp, pc}
   12d7c:	mvn	r5, #0
   12d80:	mov	r0, r5
   12d84:	pop	{r4, r5, fp, pc}
   12d88:	push	{r4, r5, r6, r7, fp, lr}
   12d8c:	add	fp, sp, #16
   12d90:	mov	r7, r0
   12d94:	ldr	r0, [r0, #80]	; 0x50
   12d98:	mov	r4, r3
   12d9c:	mov	r6, r2
   12da0:	mov	r5, r1
   12da4:	cmp	r0, #0
   12da8:	bne	12dd4 <__assert_fail@plt+0x1758>
   12dac:	ldr	r0, [fp, #8]
   12db0:	mov	r1, #80	; 0x50
   12db4:	cmp	r0, #0
   12db8:	ldr	r0, [r7, #56]	; 0x38
   12dbc:	movwne	r1, #8
   12dc0:	add	r0, r0, r1
   12dc4:	bl	1a420 <argp_parse@@Base+0x1ff4>
   12dc8:	cmp	r0, #0
   12dcc:	str	r0, [r7, #80]	; 0x50
   12dd0:	beq	12e34 <__assert_fail@plt+0x17b8>
   12dd4:	ldr	r0, [r7, #76]	; 0x4c
   12dd8:	cmp	r0, #0
   12ddc:	bne	12e00 <__assert_fail@plt+0x1784>
   12de0:	ldr	r0, [r7, #72]	; 0x48
   12de4:	bl	1a420 <argp_parse@@Base+0x1ff4>
   12de8:	cmp	r0, #0
   12dec:	str	r0, [r7, #76]	; 0x4c
   12df0:	beq	12e34 <__assert_fail@plt+0x17b8>
   12df4:	ldr	r2, [r7, #72]	; 0x48
   12df8:	mov	r1, #0
   12dfc:	bl	11568 <memset@plt>
   12e00:	ldr	r2, [r7, #56]	; 0x38
   12e04:	add	r1, r4, r6
   12e08:	mvn	r0, #0
   12e0c:	cmp	r2, r1
   12e10:	bcc	12e30 <__assert_fail@plt+0x17b4>
   12e14:	ldr	r0, [r7, #80]	; 0x50
   12e18:	mov	r1, r5
   12e1c:	mov	r2, r4
   12e20:	add	r0, r0, r6
   12e24:	add	r0, r0, #8
   12e28:	bl	113d0 <memcpy@plt>
   12e2c:	mov	r0, #0
   12e30:	pop	{r4, r5, r6, r7, fp, pc}
   12e34:	mvn	r0, #0
   12e38:	pop	{r4, r5, r6, r7, fp, pc}
   12e3c:	str	r1, [r0, #8]
   12e40:	bx	lr
   12e44:	push	{fp, lr}
   12e48:	mov	fp, sp
   12e4c:	sub	sp, sp, #8
   12e50:	str	r2, [sp, #4]
   12e54:	mov	ip, r1
   12e58:	mov	r1, #1
   12e5c:	ldr	r0, [r0]
   12e60:	str	r3, [sp]
   12e64:	add	r3, sp, #4
   12e68:	mov	r2, ip
   12e6c:	bl	11358 <setsockopt@plt>
   12e70:	mov	sp, fp
   12e74:	pop	{fp, pc}
   12e78:	str	r1, [r0, #20]
   12e7c:	bx	lr
   12e80:	push	{r4, sl, fp, lr}
   12e84:	add	fp, sp, #8
   12e88:	mov	r4, r0
   12e8c:	ldr	r0, [r0, #80]	; 0x50
   12e90:	cmp	r0, #0
   12e94:	beq	12ea4 <__assert_fail@plt+0x1828>
   12e98:	bl	19708 <argp_parse@@Base+0x12dc>
   12e9c:	mov	r0, #0
   12ea0:	str	r0, [r4, #80]	; 0x50
   12ea4:	ldr	r0, [r4, #76]	; 0x4c
   12ea8:	cmp	r0, #0
   12eac:	popeq	{r4, sl, fp, pc}
   12eb0:	bl	19708 <argp_parse@@Base+0x12dc>
   12eb4:	mov	r0, #0
   12eb8:	str	r0, [r4, #76]	; 0x4c
   12ebc:	pop	{r4, sl, fp, pc}
   12ec0:	push	{r4, r5, fp, lr}
   12ec4:	add	fp, sp, #8
   12ec8:	sub	sp, sp, #8
   12ecc:	mov	r4, r1
   12ed0:	mov	r5, r0
   12ed4:	mov	r0, sp
   12ed8:	mov	r1, #0
   12edc:	bl	1146c <gettimeofday@plt>
   12ee0:	cmn	r4, #1
   12ee4:	beq	12f34 <__assert_fail@plt+0x18b8>
   12ee8:	ldr	r1, [r5, #4]
   12eec:	ldm	sp, {r0, r2}
   12ef0:	sub	r1, r2, r1
   12ef4:	cmn	r1, #1
   12ef8:	str	r1, [sp, #4]
   12efc:	bgt	12f14 <__assert_fail@plt+0x1898>
   12f00:	add	r1, r1, #576	; 0x240
   12f04:	sub	r0, r0, #1
   12f08:	add	r1, r1, #999424	; 0xf4000
   12f0c:	str	r1, [sp, #4]
   12f10:	str	r0, [sp]
   12f14:	ldr	r1, [r5]
   12f18:	sub	r1, r0, r1
   12f1c:	mov	r0, #1
   12f20:	cmp	r1, r4
   12f24:	str	r1, [sp]
   12f28:	movlt	r0, #0
   12f2c:	sub	sp, fp, #8
   12f30:	pop	{r4, r5, fp, pc}
   12f34:	mov	r0, #0
   12f38:	sub	sp, fp, #8
   12f3c:	pop	{r4, r5, fp, pc}
   12f40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f44:	add	fp, sp, #24
   12f48:	sub	sp, sp, #320	; 0x140
   12f4c:	mov	r5, r1
   12f50:	mov	r1, #0
   12f54:	mov	r6, r0
   12f58:	mov	r0, #1
   12f5c:	sub	r4, fp, #70	; 0x46
   12f60:	mov	r3, #46	; 0x2e
   12f64:	str	r0, [sp, #8]
   12f68:	str	r1, [sp]
   12f6c:	str	r1, [sp, #4]
   12f70:	mov	r0, r6
   12f74:	mov	r1, r5
   12f78:	mov	r2, r4
   12f7c:	bl	115bc <getnameinfo@plt>
   12f80:	cmp	r0, #0
   12f84:	bne	1302c <__assert_fail@plt+0x19b0>
   12f88:	movw	r0, #59084	; 0xe6cc
   12f8c:	movt	r0, #2
   12f90:	ldrb	r0, [r0]
   12f94:	tst	r0, #4
   12f98:	bne	12fcc <__assert_fail@plt+0x1950>
   12f9c:	mov	r1, #0
   12fa0:	mov	r0, #40	; 0x28
   12fa4:	add	r2, sp, #18
   12fa8:	mov	r3, #256	; 0x100
   12fac:	str	r0, [sp, #8]
   12fb0:	str	r1, [sp]
   12fb4:	str	r1, [sp, #4]
   12fb8:	mov	r0, r6
   12fbc:	mov	r1, r5
   12fc0:	bl	115bc <getnameinfo@plt>
   12fc4:	cmp	r0, #0
   12fc8:	beq	12fe4 <__assert_fail@plt+0x1968>
   12fcc:	sub	r0, fp, #70	; 0x46
   12fd0:	bl	1a364 <argp_parse@@Base+0x1f38>
   12fd4:	mov	r5, r0
   12fd8:	mov	r0, r5
   12fdc:	sub	sp, fp, #24
   12fe0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fe4:	mov	r0, r4
   12fe8:	bl	11514 <strlen@plt>
   12fec:	add	r6, sp, #18
   12ff0:	mov	r5, r0
   12ff4:	mov	r0, r6
   12ff8:	bl	11514 <strlen@plt>
   12ffc:	add	r0, r5, r0
   13000:	add	r7, r0, #4
   13004:	mov	r0, r7
   13008:	bl	19e60 <argp_parse@@Base+0x1a34>
   1300c:	movw	r2, #50965	; 0xc715
   13010:	mov	r1, r7
   13014:	mov	r3, r6
   13018:	mov	r5, r0
   1301c:	str	r4, [sp]
   13020:	movt	r2, #1
   13024:	bl	11544 <snprintf@plt>
   13028:	b	12fd8 <__assert_fail@plt+0x195c>
   1302c:	cmn	r0, #11
   13030:	bne	13044 <__assert_fail@plt+0x19c8>
   13034:	bl	11538 <__errno_location@plt>
   13038:	ldr	r0, [r0]
   1303c:	bl	114b4 <strerror@plt>
   13040:	b	13048 <__assert_fail@plt+0x19cc>
   13044:	bl	113b8 <gai_strerror@plt>
   13048:	mov	r2, r0
   1304c:	movw	r0, #58920	; 0xe628
   13050:	movw	r1, #50934	; 0xc6f6
   13054:	movt	r0, #2
   13058:	movt	r1, #1
   1305c:	ldr	r0, [r0]
   13060:	bl	1152c <fprintf@plt>
   13064:	movw	r0, #50957	; 0xc70d
   13068:	movt	r0, #1
   1306c:	b	12fd0 <__assert_fail@plt+0x1954>
   13070:	push	{r4, r5, r6, r7, fp, lr}
   13074:	add	fp, sp, #16
   13078:	sub	sp, sp, #8
   1307c:	movw	r1, #59084	; 0xe6cc
   13080:	str	r0, [sp, #4]
   13084:	movt	r1, #2
   13088:	ldrb	r1, [r1]
   1308c:	tst	r1, #4
   13090:	bne	130e4 <__assert_fail@plt+0x1a68>
   13094:	add	r0, sp, #4
   13098:	mov	r1, #4
   1309c:	mov	r2, #2
   130a0:	bl	11418 <gethostbyaddr@plt>
   130a4:	mov	r5, r0
   130a8:	ldr	r0, [sp, #4]
   130ac:	bl	113f4 <inet_ntoa@plt>
   130b0:	mov	r4, r0
   130b4:	cmp	r5, #0
   130b8:	beq	130f4 <__assert_fail@plt+0x1a78>
   130bc:	mov	r0, r4
   130c0:	bl	11514 <strlen@plt>
   130c4:	mov	r6, r0
   130c8:	ldr	r0, [r5]
   130cc:	cmp	r0, #0
   130d0:	beq	13104 <__assert_fail@plt+0x1a88>
   130d4:	bl	11514 <strlen@plt>
   130d8:	add	r0, r6, r0
   130dc:	add	r7, r0, #5
   130e0:	b	13108 <__assert_fail@plt+0x1a8c>
   130e4:	bl	113f4 <inet_ntoa@plt>
   130e8:	sub	sp, fp, #16
   130ec:	pop	{r4, r5, r6, r7, fp, lr}
   130f0:	b	1a364 <argp_parse@@Base+0x1f38>
   130f4:	mov	r0, r4
   130f8:	bl	1a364 <argp_parse@@Base+0x1f38>
   130fc:	mov	r6, r0
   13100:	b	13150 <__assert_fail@plt+0x1ad4>
   13104:	add	r7, r6, #1
   13108:	mov	r0, r7
   1310c:	bl	19e60 <argp_parse@@Base+0x1a34>
   13110:	ldr	r3, [r5]
   13114:	mov	r6, r0
   13118:	cmp	r3, #0
   1311c:	beq	13138 <__assert_fail@plt+0x1abc>
   13120:	movw	r2, #50965	; 0xc715
   13124:	str	r4, [sp]
   13128:	mov	r0, r6
   1312c:	mov	r1, r7
   13130:	movt	r2, #1
   13134:	b	1314c <__assert_fail@plt+0x1ad0>
   13138:	movw	r2, #52199	; 0xcbe7
   1313c:	mov	r0, r6
   13140:	mov	r1, r7
   13144:	mov	r3, r4
   13148:	movt	r2, #1
   1314c:	bl	11544 <snprintf@plt>
   13150:	mov	r0, r6
   13154:	sub	sp, fp, #16
   13158:	pop	{r4, r5, r6, r7, fp, pc}
   1315c:	andeq	r0, r0, r0
   13160:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13164:	add	fp, sp, #24
   13168:	sub	sp, sp, #80	; 0x50
   1316c:	movw	r7, #59084	; 0xe6cc
   13170:	mov	r4, r0
   13174:	movt	r7, #2
   13178:	ldr	r0, [r7]
   1317c:	and	r0, r0, #3
   13180:	cmp	r0, #3
   13184:	bne	1319c <__assert_fail@plt+0x1b20>
   13188:	movw	r2, #50973	; 0xc71d
   1318c:	mov	r0, #1
   13190:	mov	r1, #0
   13194:	movt	r2, #1
   13198:	bl	11478 <error@plt>
   1319c:	vmov.i32	q8, #0	; 0x00000000
   131a0:	add	r5, sp, #8
   131a4:	movw	r6, #59092	; 0xe6d4
   131a8:	mov	r1, #8
   131ac:	add	r0, r5, #8
   131b0:	movt	r6, #2
   131b4:	vst1.64	{d16-d17}, [r0]
   131b8:	mov	r0, #0
   131bc:	str	r0, [sp, #36]	; 0x24
   131c0:	str	r0, [sp, #32]
   131c4:	movw	r0, #52580	; 0xcd64
   131c8:	movt	r0, #16845	; 0x41cd
   131cc:	str	r0, [sp, #12]
   131d0:	movw	r0, #0
   131d4:	movt	r0, #65408	; 0xff80
   131d8:	str	r0, [sp, #8]
   131dc:	ldr	r0, [r6]
   131e0:	bl	14660 <__assert_fail@plt+0x2fe4>
   131e4:	movw	r8, #57660	; 0xe13c
   131e8:	ldr	r0, [r6]
   131ec:	movt	r8, #2
   131f0:	ldr	r1, [r8]
   131f4:	bl	14a30 <__assert_fail@plt+0x33b4>
   131f8:	ldr	r0, [r6]
   131fc:	movw	r1, #13236	; 0x33b4
   13200:	mov	r2, r5
   13204:	movt	r1, #1
   13208:	bl	14a24 <__assert_fail@plt+0x33a8>
   1320c:	ldr	r0, [r6]
   13210:	mov	r1, r4
   13214:	bl	14a38 <__assert_fail@plt+0x33bc>
   13218:	cmp	r0, #0
   1321c:	beq	13234 <__assert_fail@plt+0x1bb8>
   13220:	movw	r2, #51004	; 0xc73c
   13224:	mov	r0, #1
   13228:	mov	r1, #0
   1322c:	movt	r2, #1
   13230:	bl	11478 <error@plt>
   13234:	ldr	r0, [r7]
   13238:	tst	r0, #16
   1323c:	bne	13270 <__assert_fail@plt+0x1bf4>
   13240:	tst	r0, #64	; 0x40
   13244:	beq	13328 <__assert_fail@plt+0x1cac>
   13248:	movw	r0, #59096	; 0xe6d8
   1324c:	mov	r1, #36	; 0x24
   13250:	movt	r0, #2
   13254:	ldr	r0, [r0]
   13258:	tst	r0, #4
   1325c:	bne	132b0 <__assert_fail@plt+0x1c34>
   13260:	tst	r0, #2
   13264:	ubfx	r0, r0, #1, #1
   13268:	movweq	r1, #40	; 0x28
   1326c:	b	132b4 <__assert_fail@plt+0x1c38>
   13270:	vmov.i32	q8, #0	; 0x00000000
   13274:	add	r3, sp, #40	; 0x28
   13278:	mov	r1, #40	; 0x28
   1327c:	add	r0, r3, #19
   13280:	vst1.8	{d16-d17}, [r0]
   13284:	add	r0, r3, #3
   13288:	vst1.8	{d16-d17}, [r0]
   1328c:	mov	r0, #0
   13290:	str	r0, [sp, #76]	; 0x4c
   13294:	str	r0, [sp, #72]	; 0x48
   13298:	mov	r0, #4
   1329c:	strb	r0, [sp, #42]	; 0x2a
   132a0:	movw	r0, #9991	; 0x2707
   132a4:	strh	r0, [sp, #40]	; 0x28
   132a8:	ldr	r0, [r6]
   132ac:	b	132f4 <__assert_fail@plt+0x1c78>
   132b0:	mov	r0, #3
   132b4:	vmov.i32	q8, #0	; 0x00000000
   132b8:	add	r3, sp, #40	; 0x28
   132bc:	add	r2, r3, #1
   132c0:	vst1.8	{d16-d17}, [r2]
   132c4:	add	r2, r3, #17
   132c8:	vst1.8	{d16-d17}, [r2]
   132cc:	mov	r2, #0
   132d0:	str	r2, [sp, #76]	; 0x4c
   132d4:	str	r2, [sp, #72]	; 0x48
   132d8:	mov	r2, #68	; 0x44
   132dc:	strb	r2, [sp, #40]	; 0x28
   132e0:	strb	r0, [sp, #43]	; 0x2b
   132e4:	mov	r0, #5
   132e8:	strb	r0, [sp, #42]	; 0x2a
   132ec:	ldr	r0, [r6]
   132f0:	strb	r1, [sp, #41]	; 0x29
   132f4:	ldr	r0, [r0]
   132f8:	str	r1, [sp]
   132fc:	mov	r1, #0
   13300:	mov	r2, #4
   13304:	bl	11358 <setsockopt@plt>
   13308:	cmn	r0, #1
   1330c:	bgt	13328 <__assert_fail@plt+0x1cac>
   13310:	bl	11538 <__errno_location@plt>
   13314:	ldr	r1, [r0]
   13318:	movw	r2, #51017	; 0xc749
   1331c:	mov	r0, #1
   13320:	movt	r2, #1
   13324:	bl	11478 <error@plt>
   13328:	ldr	r1, [r6]
   1332c:	ldr	r0, [r1, #28]
   13330:	ldr	r4, [r1, #52]	; 0x34
   13334:	bl	113f4 <inet_ntoa@plt>
   13338:	ldr	r3, [r8]
   1333c:	mov	r2, r0
   13340:	movw	r0, #51028	; 0xc754
   13344:	mov	r1, r4
   13348:	movt	r0, #1
   1334c:	bl	11364 <printf@plt>
   13350:	ldrb	r0, [r7]
   13354:	tst	r0, #32
   13358:	beq	13374 <__assert_fail@plt+0x1cf8>
   1335c:	ldr	r0, [r6]
   13360:	ldr	r1, [r0, #60]	; 0x3c
   13364:	movw	r0, #51057	; 0xc771
   13368:	movt	r0, #1
   1336c:	mov	r2, r1
   13370:	bl	11364 <printf@plt>
   13374:	movw	r0, #58924	; 0xe62c
   13378:	movt	r0, #2
   1337c:	ldr	r1, [r0]
   13380:	mov	r0, #10
   13384:	bl	11604 <putc@plt>
   13388:	ldr	r0, [r6]
   1338c:	movw	r1, #13328	; 0x3410
   13390:	movt	r1, #1
   13394:	bl	11b00 <__assert_fail@plt+0x484>
   13398:	mov	r4, r0
   1339c:	ldr	r0, [r6]
   133a0:	ldr	r0, [r0, #52]	; 0x34
   133a4:	bl	19708 <argp_parse@@Base+0x12dc>
   133a8:	mov	r0, r4
   133ac:	sub	sp, fp, #24
   133b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133b4:	push	{fp, lr}
   133b8:	mov	fp, sp
   133bc:	sub	sp, sp, #16
   133c0:	ldr	ip, [fp, #16]
   133c4:	ldr	r2, [fp, #12]
   133c8:	ldr	lr, [fp, #8]
   133cc:	cmp	r0, #2
   133d0:	bcs	133f0 <__assert_fail@plt+0x1d74>
   133d4:	sub	r0, r0, #1
   133d8:	str	lr, [sp]
   133dc:	stmib	sp, {r2, ip}
   133e0:	clz	r0, r0
   133e4:	lsr	r0, r0, #5
   133e8:	bl	134c8 <__assert_fail@plt+0x1e4c>
   133ec:	b	13404 <__assert_fail@plt+0x1d88>
   133f0:	bne	13404 <__assert_fail@plt+0x1d88>
   133f4:	mov	r0, r3
   133f8:	mov	r1, lr
   133fc:	mov	r3, ip
   13400:	bl	13f88 <__assert_fail@plt+0x290c>
   13404:	mov	r0, #0
   13408:	mov	sp, fp
   1340c:	pop	{fp, pc}
   13410:	push	{r4, sl, fp, lr}
   13414:	add	fp, sp, #8
   13418:	vpush	{d8-d10}
   1341c:	sub	sp, sp, #24
   13420:	bl	11fe8 <__assert_fail@plt+0x96c>
   13424:	movw	r4, #59092	; 0xe6d4
   13428:	movt	r4, #2
   1342c:	ldr	r1, [r4]
   13430:	ldr	r0, [r1, #116]	; 0x74
   13434:	cmp	r0, #0
   13438:	beq	134a8 <__assert_fail@plt+0x1e2c>
   1343c:	movw	r2, #57660	; 0xe13c
   13440:	movt	r2, #2
   13444:	ldr	r2, [r2]
   13448:	cmp	r2, #8
   1344c:	bcc	134a8 <__assert_fail@plt+0x1e2c>
   13450:	ldr	r2, [r1, #68]	; 0x44
   13454:	ldr	r1, [r1, #120]	; 0x78
   13458:	vldr	d1, [pc, #96]	; 134c0 <__assert_fail@plt+0x1e44>
   1345c:	add	r0, r1, r0
   13460:	vldmia	r2, {d8-d9}
   13464:	vldr	d16, [r2, #16]
   13468:	vldr	d17, [r2, #24]
   1346c:	vmov	s0, r0
   13470:	vcvt.f64.u32	d18, s0
   13474:	vdiv.f64	d10, d16, d18
   13478:	vdiv.f64	d0, d17, d18
   1347c:	vmls.f64	d0, d10, d10
   13480:	bl	12c5c <__assert_fail@plt+0x15e0>
   13484:	vmov	r2, r3, d8
   13488:	movw	r0, #52313	; 0xcc59
   1348c:	vstr	d10, [sp]
   13490:	vstr	d9, [sp, #8]
   13494:	vstr	d0, [sp, #16]
   13498:	movt	r0, #1
   1349c:	bl	11364 <printf@plt>
   134a0:	ldr	r0, [r4]
   134a4:	ldr	r0, [r0, #116]	; 0x74
   134a8:	clz	r0, r0
   134ac:	lsr	r0, r0, #5
   134b0:	sub	sp, fp, #32
   134b4:	vpop	{d8-d10}
   134b8:	pop	{r4, sl, fp, pc}
   134bc:	nop	{0}
   134c0:	rscsle	sl, r1, #252, 18	; 0x3f0000
   134c4:	svccc	0x0040624d
   134c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134cc:	add	fp, sp, #28
   134d0:	sub	sp, sp, #4
   134d4:	vpush	{d8}
   134d8:	sub	sp, sp, #40	; 0x28
   134dc:	mov	r4, r1
   134e0:	mov	r8, r0
   134e4:	add	r0, sp, #16
   134e8:	mov	r1, #0
   134ec:	mov	r6, r3
   134f0:	mov	r5, #0
   134f4:	bl	1146c <gettimeofday@plt>
   134f8:	ldr	r9, [fp, #8]
   134fc:	mov	r1, #60	; 0x3c
   13500:	ldr	sl, [fp, #12]
   13504:	vmov.i32	d8, #0	; 0x00000000
   13508:	ldrb	r0, [r9]
   1350c:	and	r1, r1, r0, lsl #2
   13510:	ldr	r0, [fp, #16]
   13514:	str	r1, [sp, #12]
   13518:	sub	r7, r0, r1
   1351c:	bic	r0, r7, #7
   13520:	cmp	r0, #8
   13524:	beq	1359c <__assert_fail@plt+0x1f20>
   13528:	ldr	r0, [sl, #8]
   1352c:	ldr	r1, [sl, #12]
   13530:	str	r1, [sp, #28]
   13534:	str	r0, [sp, #24]
   13538:	add	r0, sp, #16
   1353c:	add	r1, sp, #24
   13540:	bl	12c08 <__assert_fail@plt+0x158c>
   13544:	vldr	s2, [sp, #20]
   13548:	vldr	s0, [sp, #16]
   1354c:	vldr	d16, [pc, #988]	; 13930 <__assert_fail@plt+0x22b4>
   13550:	vldr	d17, [r4]
   13554:	vldr	d18, [r4, #16]
   13558:	vldr	d19, [r4, #24]
   1355c:	mov	r5, #1
   13560:	vcvt.f64.s32	d20, s2
   13564:	vcvt.f64.s32	d21, s0
   13568:	vdiv.f64	d8, d20, d16
   1356c:	vmla.f64	d8, d21, d16
   13570:	vmla.f64	d19, d8, d8
   13574:	vcmpe.f64	d8, d17
   13578:	vadd.f64	d16, d18, d8
   1357c:	vmrs	APSR_nzcv, fpscr
   13580:	vstr	d16, [r4, #16]
   13584:	vstr	d19, [r4, #24]
   13588:	vstrmi	d8, [r4]
   1358c:	vldr	d16, [r4, #8]
   13590:	vcmpe.f64	d8, d16
   13594:	vmrs	APSR_nzcv, fpscr
   13598:	vstrgt	d8, [r4, #8]
   1359c:	movw	r0, #59084	; 0xe6cc
   135a0:	movt	r0, #2
   135a4:	ldr	r0, [r0]
   135a8:	tst	r0, #8
   135ac:	bne	13a88 <__assert_fail@plt+0x240c>
   135b0:	mov	r4, #8
   135b4:	tst	r0, #1
   135b8:	bne	13a74 <__assert_fail@plt+0x23f8>
   135bc:	ldr	r0, [r6, #4]
   135c0:	bl	113f4 <inet_ntoa@plt>
   135c4:	mov	r2, r0
   135c8:	ldrh	r0, [sl, #6]
   135cc:	mov	r1, r7
   135d0:	rev16	r3, r0
   135d4:	movw	r0, #51074	; 0xc782
   135d8:	movt	r0, #1
   135dc:	bl	11364 <printf@plt>
   135e0:	ldrb	r1, [r9, #8]
   135e4:	movw	r0, #51104	; 0xc7a0
   135e8:	movt	r0, #1
   135ec:	bl	11364 <printf@plt>
   135f0:	cmp	r5, #0
   135f4:	beq	13608 <__assert_fail@plt+0x1f8c>
   135f8:	vmov	r2, r3, d8
   135fc:	movw	r0, #51112	; 0xc7a8
   13600:	movt	r0, #1
   13604:	bl	11364 <printf@plt>
   13608:	ldr	r4, [sp, #12]
   1360c:	cmp	r8, #0
   13610:	beq	13620 <__assert_fail@plt+0x1fa4>
   13614:	movw	r0, #51126	; 0xc7b6
   13618:	movt	r0, #1
   1361c:	bl	11364 <printf@plt>
   13620:	cmp	r4, #21
   13624:	mov	r4, #10
   13628:	bcc	13a74 <__assert_fail@plt+0x23f8>
   1362c:	ldr	r7, [sp, #12]
   13630:	add	r5, r9, #20
   13634:	add	r0, r9, #24
   13638:	mov	r4, #10
   1363c:	mov	r9, #0
   13640:	str	r0, [sp, #4]
   13644:	mov	r0, r5
   13648:	str	r5, [sp, #8]
   1364c:	b	13670 <__assert_fail@plt+0x1ff4>
   13650:	movw	r0, #52289	; 0xcc41
   13654:	movt	r0, #1
   13658:	bl	11364 <printf@plt>
   1365c:	add	r9, r9, #1
   13660:	sub	r7, r7, #1
   13664:	add	r0, r5, r9
   13668:	cmp	r7, #20
   1366c:	ble	13a74 <__assert_fail@plt+0x23f8>
   13670:	ldrb	r1, [r5, r9]
   13674:	cmp	r1, #67	; 0x43
   13678:	ble	13740 <__assert_fail@plt+0x20c4>
   1367c:	cmp	r1, #68	; 0x44
   13680:	beq	137f0 <__assert_fail@plt+0x2174>
   13684:	cmp	r1, #137	; 0x89
   13688:	cmpne	r1, #131	; 0x83
   1368c:	bne	13844 <__assert_fail@plt+0x21c8>
   13690:	movw	r0, #52180	; 0xcbd4
   13694:	cmp	r1, #131	; 0x83
   13698:	mov	r1, #83	; 0x53
   1369c:	movt	r0, #1
   136a0:	movweq	r1, #76	; 0x4c
   136a4:	bl	11364 <printf@plt>
   136a8:	add	r0, r9, r5
   136ac:	ldrb	r0, [r0, #1]
   136b0:	cmp	r0, #5
   136b4:	bcc	13818 <__assert_fail@plt+0x219c>
   136b8:	ldr	r1, [fp, #8]
   136bc:	mov	sl, r7
   136c0:	sub	r4, r0, #4
   136c4:	sub	r8, r0, #5
   136c8:	mov	r7, #0
   136cc:	add	r6, r1, r9
   136d0:	sub	r0, r6, r7
   136d4:	ldr	r0, [r0, #23]
   136d8:	rev	r0, r0
   136dc:	cmp	r0, #0
   136e0:	beq	1370c <__assert_fail@plt+0x2090>
   136e4:	rev	r0, r0
   136e8:	bl	13070 <__assert_fail@plt+0x19f4>
   136ec:	mov	r5, r0
   136f0:	movw	r0, #52198	; 0xcbe6
   136f4:	movt	r0, #1
   136f8:	mov	r1, r5
   136fc:	bl	11364 <printf@plt>
   13700:	mov	r0, r5
   13704:	bl	19708 <argp_parse@@Base+0x12dc>
   13708:	b	13718 <__assert_fail@plt+0x209c>
   1370c:	movw	r0, #52189	; 0xcbdd
   13710:	movt	r0, #1
   13714:	bl	11364 <printf@plt>
   13718:	add	r0, r4, r7
   1371c:	cmp	r0, #5
   13720:	blt	13824 <__assert_fail@plt+0x21a8>
   13724:	movw	r0, #58924	; 0xe62c
   13728:	movt	r0, #2
   1372c:	ldr	r1, [r0]
   13730:	mov	r0, #10
   13734:	bl	11604 <putc@plt>
   13738:	sub	r7, r7, #4
   1373c:	b	136d0 <__assert_fail@plt+0x2054>
   13740:	cmp	r1, #1
   13744:	beq	13650 <__assert_fail@plt+0x1fd4>
   13748:	cmp	r1, #7
   1374c:	bne	1383c <__assert_fail@plt+0x21c0>
   13750:	add	r6, r9, #2
   13754:	mov	sl, r5
   13758:	ldrb	r0, [r0, #1]
   1375c:	mov	r8, r7
   13760:	sub	r7, r7, #2
   13764:	ldrb	r4, [sl, r6]!
   13768:	cmp	r4, r0
   1376c:	movhi	r4, r0
   13770:	sub	r5, r4, #4
   13774:	cmp	r5, #1
   13778:	blt	13990 <__assert_fail@plt+0x2314>
   1377c:	cmp	r9, #0
   13780:	bne	13854 <__assert_fail@plt+0x21d8>
   13784:	movw	r0, #58968	; 0xe658
   13788:	movt	r0, #2
   1378c:	ldr	r0, [r0]
   13790:	cmp	r5, r0
   13794:	bne	13854 <__assert_fail@plt+0x21d8>
   13798:	movw	r1, #58976	; 0xe660
   1379c:	mov	r0, sl
   137a0:	mov	r2, r5
   137a4:	movt	r1, #2
   137a8:	bl	114fc <bcmp@plt>
   137ac:	cmp	r0, #0
   137b0:	bne	13854 <__assert_fail@plt+0x21d8>
   137b4:	movw	r0, #59084	; 0xe6cc
   137b8:	movt	r0, #2
   137bc:	ldrb	r0, [r0]
   137c0:	tst	r0, #1
   137c4:	bne	13854 <__assert_fail@plt+0x21d8>
   137c8:	movw	r0, #52202	; 0xcbea
   137cc:	movt	r0, #1
   137d0:	bl	11364 <printf@plt>
   137d4:	sub	r0, r4, #1
   137d8:	asr	r1, r0, #31
   137dc:	add	r0, r0, r1, lsr #30
   137e0:	bic	r0, r0, #3
   137e4:	add	r9, r0, r6
   137e8:	sub	r7, r7, r0
   137ec:	b	13a68 <__assert_fail@plt+0x23ec>
   137f0:	add	r1, r9, #2
   137f4:	ldrb	r2, [r0, #1]
   137f8:	ldrb	sl, [r5, r1]
   137fc:	cmp	sl, r2
   13800:	movhi	sl, r2
   13804:	cmp	r2, #9
   13808:	bcs	13880 <__assert_fail@plt+0x2204>
   1380c:	sub	r7, r7, #2
   13810:	mov	r9, r1
   13814:	b	1365c <__assert_fail@plt+0x1fe0>
   13818:	add	r9, r9, #2
   1381c:	sub	r7, r7, #2
   13820:	b	1365c <__assert_fail@plt+0x1fe0>
   13824:	sub	r0, r9, r7
   13828:	add	r9, r0, #6
   1382c:	bic	r0, r8, #3
   13830:	sub	r0, sl, r0
   13834:	sub	r7, r0, #6
   13838:	b	13a68 <__assert_fail@plt+0x23ec>
   1383c:	cmp	r1, #0
   13840:	beq	13a74 <__assert_fail@plt+0x23f8>
   13844:	movw	r0, #52294	; 0xcc46
   13848:	movt	r0, #1
   1384c:	bl	11364 <printf@plt>
   13850:	b	1365c <__assert_fail@plt+0x1fe0>
   13854:	cmp	r5, #39	; 0x27
   13858:	bgt	13998 <__assert_fail@plt+0x231c>
   1385c:	movw	r0, #58968	; 0xe658
   13860:	mov	r1, sl
   13864:	mov	r2, r5
   13868:	movt	r0, #2
   1386c:	str	r5, [r0]
   13870:	movw	r0, #58976	; 0xe660
   13874:	movt	r0, #2
   13878:	bl	11394 <memmove@plt>
   1387c:	b	139a8 <__assert_fail@plt+0x232c>
   13880:	ldrb	r4, [r0, #3]
   13884:	movw	r0, #52243	; 0xcc13
   13888:	movt	r0, #1
   1388c:	bl	11364 <printf@plt>
   13890:	ldr	r0, [sp, #4]
   13894:	str	r4, [sp, #12]
   13898:	and	r8, r4, #15
   1389c:	mov	r4, #0
   138a0:	add	r6, r0, r9
   138a4:	b	138d0 <__assert_fail@plt+0x2254>
   138a8:	movw	r0, #58924	; 0xe62c
   138ac:	movt	r0, #2
   138b0:	ldr	r1, [r0]
   138b4:	mov	r0, #10
   138b8:	bl	11604 <putc@plt>
   138bc:	add	r1, r4, #9
   138c0:	add	r0, r4, #4
   138c4:	cmp	r1, sl
   138c8:	mov	r4, r0
   138cc:	bcs	1395c <__assert_fail@plt+0x22e0>
   138d0:	ldr	r0, [r6, r4]
   138d4:	cmp	r8, #0
   138d8:	addne	r1, r4, #5
   138dc:	andsne	r1, r1, #4
   138e0:	bne	13938 <__assert_fail@plt+0x22bc>
   138e4:	rev	r2, r0
   138e8:	add	r0, sp, #24
   138ec:	mov	r1, #16
   138f0:	bl	12cc0 <__assert_fail@plt+0x1644>
   138f4:	mov	r1, r0
   138f8:	movw	r0, #52248	; 0xcc18
   138fc:	movt	r0, #1
   13900:	bl	11364 <printf@plt>
   13904:	movw	r0, #59084	; 0xe6cc
   13908:	movt	r0, #2
   1390c:	ldrb	r0, [r0]
   13910:	tst	r0, #32
   13914:	beq	138a8 <__assert_fail@plt+0x222c>
   13918:	ldr	r0, [r6, r4]
   1391c:	rev	r1, r0
   13920:	movw	r0, #52255	; 0xcc1f
   13924:	movt	r0, #1
   13928:	bl	11364 <printf@plt>
   1392c:	b	138a8 <__assert_fail@plt+0x222c>
   13930:	andeq	r0, r0, r0
   13934:	addmi	r4, pc, r0
   13938:	bl	13070 <__assert_fail@plt+0x19f4>
   1393c:	mov	r5, r0
   13940:	movw	r0, #52198	; 0xcbe6
   13944:	movt	r0, #1
   13948:	mov	r1, r5
   1394c:	bl	11364 <printf@plt>
   13950:	mov	r0, r5
   13954:	bl	19708 <argp_parse@@Base+0x12dc>
   13958:	b	138bc <__assert_fail@plt+0x2240>
   1395c:	sub	r1, r7, r0
   13960:	add	r0, r9, r0
   13964:	mov	r4, #10
   13968:	add	r9, r0, #4
   1396c:	ldr	r0, [sp, #12]
   13970:	sub	r7, r1, #4
   13974:	tst	r0, #240	; 0xf0
   13978:	beq	13a6c <__assert_fail@plt+0x23f0>
   1397c:	lsr	r1, r0, #4
   13980:	movw	r0, #52265	; 0xcc29
   13984:	movt	r0, #1
   13988:	bl	11364 <printf@plt>
   1398c:	b	13a6c <__assert_fail@plt+0x23f0>
   13990:	mov	r9, r6
   13994:	b	13a68 <__assert_fail@plt+0x23ec>
   13998:	movw	r1, #58968	; 0xe658
   1399c:	mov	r0, #0
   139a0:	movt	r1, #2
   139a4:	str	r0, [r1]
   139a8:	movw	r0, #52217	; 0xcbf9
   139ac:	mov	r7, r8
   139b0:	movt	r0, #1
   139b4:	bl	11364 <printf@plt>
   139b8:	ldr	r0, [fp, #8]
   139bc:	sub	r4, r4, #8
   139c0:	mov	r6, #0
   139c4:	add	r8, r0, r9
   139c8:	add	r0, r8, r6
   139cc:	ldr	r0, [r0, #23]
   139d0:	rev	r0, r0
   139d4:	cmp	r0, #0
   139d8:	beq	13a0c <__assert_fail@plt+0x2390>
   139dc:	rev	r0, r0
   139e0:	bl	13070 <__assert_fail@plt+0x19f4>
   139e4:	mov	r5, r0
   139e8:	movw	r0, #52198	; 0xcbe6
   139ec:	movt	r0, #1
   139f0:	mov	r1, r5
   139f4:	bl	11364 <printf@plt>
   139f8:	mov	r0, r5
   139fc:	bl	19708 <argp_parse@@Base+0x12dc>
   13a00:	cmp	r4, #1
   13a04:	bge	13a20 <__assert_fail@plt+0x23a4>
   13a08:	b	13a58 <__assert_fail@plt+0x23dc>
   13a0c:	movw	r0, #52189	; 0xcbdd
   13a10:	movt	r0, #1
   13a14:	bl	11364 <printf@plt>
   13a18:	cmp	r4, #1
   13a1c:	blt	13a58 <__assert_fail@plt+0x23dc>
   13a20:	add	r5, r6, #4
   13a24:	cmp	r5, #40	; 0x28
   13a28:	bcs	13a4c <__assert_fail@plt+0x23d0>
   13a2c:	movw	r0, #58924	; 0xe62c
   13a30:	movt	r0, #2
   13a34:	ldr	r1, [r0]
   13a38:	mov	r0, #10
   13a3c:	bl	11604 <putc@plt>
   13a40:	sub	r4, r4, #4
   13a44:	mov	r6, r5
   13a48:	b	139c8 <__assert_fail@plt+0x234c>
   13a4c:	movw	r0, #52223	; 0xcbff
   13a50:	movt	r0, #1
   13a54:	bl	11364 <printf@plt>
   13a58:	sub	r0, r7, r6
   13a5c:	sub	r7, r0, #6
   13a60:	add	r0, r9, r6
   13a64:	add	r9, r0, #6
   13a68:	mov	r4, #10
   13a6c:	ldr	r5, [sp, #8]
   13a70:	b	1365c <__assert_fail@plt+0x1fe0>
   13a74:	movw	r0, #58924	; 0xe62c
   13a78:	movt	r0, #2
   13a7c:	ldr	r1, [r0]
   13a80:	mov	r0, r4
   13a84:	bl	11604 <putc@plt>
   13a88:	mov	r0, #0
   13a8c:	sub	sp, fp, #40	; 0x28
   13a90:	vpop	{d8}
   13a94:	add	sp, sp, #4
   13a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13aa0:	add	fp, sp, #28
   13aa4:	sub	sp, sp, #4
   13aa8:	mov	r7, r0
   13aac:	mov	sl, r0
   13ab0:	mov	r1, #60	; 0x3c
   13ab4:	movw	r8, #58924	; 0xe62c
   13ab8:	ldrb	r0, [r7, #8]!
   13abc:	movt	r8, #2
   13ac0:	and	r6, r1, r0, lsl #2
   13ac4:	movw	r0, #59084	; 0xe6cc
   13ac8:	movt	r0, #2
   13acc:	ldrb	r0, [r0]
   13ad0:	tst	r0, #32
   13ad4:	beq	13b48 <__assert_fail@plt+0x24cc>
   13ad8:	movw	r0, #52038	; 0xcb46
   13adc:	str	r7, [sp]
   13ae0:	movt	r0, #1
   13ae4:	bl	11364 <printf@plt>
   13ae8:	movw	r8, #55237	; 0xd7c5
   13aec:	movw	r9, #52051	; 0xcb53
   13af0:	movw	r5, #52053	; 0xcb55
   13af4:	add	r7, sl, #8
   13af8:	mov	r4, #0
   13afc:	movt	r8, #1
   13b00:	movt	r9, #1
   13b04:	movt	r5, #1
   13b08:	ldrb	r1, [r7, r4]
   13b0c:	tst	r4, #1
   13b10:	mov	r2, r9
   13b14:	mov	r0, r5
   13b18:	moveq	r2, r8
   13b1c:	bl	11364 <printf@plt>
   13b20:	add	r4, r4, #1
   13b24:	cmp	r4, #20
   13b28:	bne	13b08 <__assert_fail@plt+0x248c>
   13b2c:	movw	r7, #58924	; 0xe62c
   13b30:	mov	r0, #10
   13b34:	movt	r7, #2
   13b38:	ldr	r1, [r7]
   13b3c:	mov	r8, r7
   13b40:	bl	11604 <putc@plt>
   13b44:	ldr	r7, [sp]
   13b48:	movw	r0, #52369	; 0xcc91
   13b4c:	movt	r0, #1
   13b50:	bl	11490 <puts@plt>
   13b54:	ldrb	r0, [sl, #8]
   13b58:	ldrb	r3, [sl, #9]
   13b5c:	lsr	r1, r0, #4
   13b60:	and	r2, r0, #15
   13b64:	movw	r0, #52060	; 0xcb5c
   13b68:	movt	r0, #1
   13b6c:	bl	11364 <printf@plt>
   13b70:	ldrh	r1, [sl, #10]
   13b74:	rev	r0, r1
   13b78:	cmp	r1, #8192	; 0x2000
   13b7c:	rorhi	r1, r0, #16
   13b80:	ldrh	r0, [sl, #12]
   13b84:	rev16	r2, r0
   13b88:	movw	r0, #52076	; 0xcb6c
   13b8c:	movt	r0, #1
   13b90:	bl	11364 <printf@plt>
   13b94:	ldrh	r0, [sl, #14]
   13b98:	rev	r0, r0
   13b9c:	lsr	r1, r0, #29
   13ba0:	ubfx	r2, r0, #16, #13
   13ba4:	movw	r0, #52087	; 0xcb77
   13ba8:	movt	r0, #1
   13bac:	bl	11364 <printf@plt>
   13bb0:	ldrh	r0, [sl, #18]
   13bb4:	ldrb	r1, [sl, #16]
   13bb8:	ldrb	r2, [sl, #17]
   13bbc:	rev16	r3, r0
   13bc0:	movw	r0, #52099	; 0xcb83
   13bc4:	movt	r0, #1
   13bc8:	bl	11364 <printf@plt>
   13bcc:	ldr	r0, [sl, #20]
   13bd0:	bl	113f4 <inet_ntoa@plt>
   13bd4:	movw	r5, #52117	; 0xcb95
   13bd8:	mov	r1, r0
   13bdc:	movt	r5, #1
   13be0:	mov	r0, r5
   13be4:	bl	11364 <printf@plt>
   13be8:	ldr	r0, [sl, #24]
   13bec:	bl	113f4 <inet_ntoa@plt>
   13bf0:	mov	r1, r0
   13bf4:	mov	r0, r5
   13bf8:	bl	11364 <printf@plt>
   13bfc:	cmp	r6, #21
   13c00:	bcc	13c28 <__assert_fail@plt+0x25ac>
   13c04:	movw	r5, #52071	; 0xcb67
   13c08:	add	r4, r7, #20
   13c0c:	movt	r5, #1
   13c10:	ldrb	r1, [r4], #1
   13c14:	mov	r0, r5
   13c18:	bl	11364 <printf@plt>
   13c1c:	sub	r6, r6, #1
   13c20:	cmp	r6, #20
   13c24:	bhi	13c10 <__assert_fail@plt+0x2594>
   13c28:	ldr	r1, [r8]
   13c2c:	mov	r0, #10
   13c30:	bl	11604 <putc@plt>
   13c34:	ldrb	r1, [sl, #8]
   13c38:	ldrb	r0, [sl, #17]
   13c3c:	mov	r2, #60	; 0x3c
   13c40:	and	r1, r2, r1, lsl #2
   13c44:	cmp	r0, #1
   13c48:	add	r5, r7, r1
   13c4c:	beq	13c84 <__assert_fail@plt+0x2608>
   13c50:	cmp	r0, #17
   13c54:	beq	13ce8 <__assert_fail@plt+0x266c>
   13c58:	cmp	r0, #6
   13c5c:	bne	13d14 <__assert_fail@plt+0x2698>
   13c60:	ldrb	r0, [r5]
   13c64:	ldrb	r1, [r5, #1]
   13c68:	ldrb	r2, [r5, #2]
   13c6c:	ldrb	r3, [r5, #3]
   13c70:	orr	r1, r1, r0, lsl #8
   13c74:	movw	r0, #51642	; 0xc9ba
   13c78:	orr	r2, r3, r2, lsl #8
   13c7c:	movt	r0, #1
   13c80:	b	13d08 <__assert_fail@plt+0x268c>
   13c84:	ldrh	r0, [sl, #10]
   13c88:	ldrb	r4, [r5]
   13c8c:	ldrb	r2, [r5, #1]
   13c90:	rev	r0, r0
   13c94:	rsb	r3, r1, r0, lsr #16
   13c98:	movw	r0, #51724	; 0xca0c
   13c9c:	mov	r1, r4
   13ca0:	movt	r0, #1
   13ca4:	bl	11364 <printf@plt>
   13ca8:	tst	r4, #247	; 0xf7
   13cac:	bne	13cd4 <__assert_fail@plt+0x2658>
   13cb0:	ldrb	r0, [r5, #4]
   13cb4:	ldrb	r1, [r5, #5]
   13cb8:	ldrb	r2, [r5, #6]
   13cbc:	ldrb	r3, [r5, #7]
   13cc0:	orr	r1, r1, r0, lsl #8
   13cc4:	movw	r0, #51756	; 0xca2c
   13cc8:	orr	r2, r3, r2, lsl #8
   13ccc:	movt	r0, #1
   13cd0:	bl	11364 <printf@plt>
   13cd4:	ldr	r1, [r8]
   13cd8:	mov	r0, #10
   13cdc:	sub	sp, fp, #28
   13ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce4:	b	11604 <putc@plt>
   13ce8:	ldrb	r0, [r5]
   13cec:	ldrb	r1, [r5, #1]
   13cf0:	ldrb	r2, [r5, #2]
   13cf4:	ldrb	r3, [r5, #3]
   13cf8:	orr	r1, r1, r0, lsl #8
   13cfc:	movw	r0, #51683	; 0xc9e3
   13d00:	orr	r2, r3, r2, lsl #8
   13d04:	movt	r0, #1
   13d08:	sub	sp, fp, #28
   13d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d10:	b	11364 <printf@plt>
   13d14:	sub	sp, fp, #28
   13d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d1c:	push	{r4, sl, fp, lr}
   13d20:	add	fp, sp, #8
   13d24:	movw	r3, #58364	; 0xe3fc
   13d28:	mov	r4, r0
   13d2c:	movt	r3, #2
   13d30:	ldrb	lr, [r4]
   13d34:	ldrb	r2, [r4, #1]
   13d38:	ldr	r0, [r3]
   13d3c:	cmp	r0, lr
   13d40:	ldreq	r0, [r3, #4]
   13d44:	cmpeq	r0, r2
   13d48:	beq	13f20 <__assert_fail@plt+0x28a4>
   13d4c:	movw	ip, #58364	; 0xe3fc
   13d50:	movt	ip, #2
   13d54:	mov	r3, ip
   13d58:	ldr	r0, [r3, #12]!
   13d5c:	cmp	r0, lr
   13d60:	ldreq	r0, [r3, #4]
   13d64:	cmpeq	r0, r2
   13d68:	beq	13f20 <__assert_fail@plt+0x28a4>
   13d6c:	mov	r3, ip
   13d70:	ldr	r0, [r3, #24]!
   13d74:	cmp	r0, lr
   13d78:	ldreq	r0, [r3, #4]
   13d7c:	cmpeq	r0, r2
   13d80:	beq	13f20 <__assert_fail@plt+0x28a4>
   13d84:	mov	r3, ip
   13d88:	ldr	r0, [r3, #36]!	; 0x24
   13d8c:	cmp	r0, lr
   13d90:	ldreq	r0, [r3, #4]
   13d94:	cmpeq	r0, r2
   13d98:	beq	13f20 <__assert_fail@plt+0x28a4>
   13d9c:	mov	r3, ip
   13da0:	ldr	r0, [r3, #48]!	; 0x30
   13da4:	cmp	r0, lr
   13da8:	ldreq	r0, [r3, #4]
   13dac:	cmpeq	r0, r2
   13db0:	beq	13f20 <__assert_fail@plt+0x28a4>
   13db4:	mov	r3, ip
   13db8:	ldr	r0, [r3, #60]!	; 0x3c
   13dbc:	cmp	r0, lr
   13dc0:	ldreq	r0, [r3, #4]
   13dc4:	cmpeq	r0, r2
   13dc8:	beq	13f20 <__assert_fail@plt+0x28a4>
   13dcc:	mov	r3, ip
   13dd0:	ldr	r0, [r3, #72]!	; 0x48
   13dd4:	cmp	r0, lr
   13dd8:	ldreq	r0, [r3, #4]
   13ddc:	cmpeq	r0, r2
   13de0:	beq	13f20 <__assert_fail@plt+0x28a4>
   13de4:	mov	r3, ip
   13de8:	ldr	r0, [r3, #84]!	; 0x54
   13dec:	cmp	r0, lr
   13df0:	ldreq	r0, [r3, #4]
   13df4:	cmpeq	r0, r2
   13df8:	beq	13f20 <__assert_fail@plt+0x28a4>
   13dfc:	mov	r3, ip
   13e00:	ldr	r0, [r3, #96]!	; 0x60
   13e04:	cmp	r0, lr
   13e08:	ldreq	r0, [r3, #4]
   13e0c:	cmpeq	r0, r2
   13e10:	beq	13f20 <__assert_fail@plt+0x28a4>
   13e14:	mov	r3, ip
   13e18:	ldr	r0, [r3, #108]!	; 0x6c
   13e1c:	cmp	r0, lr
   13e20:	ldreq	r0, [r3, #4]
   13e24:	cmpeq	r0, r2
   13e28:	beq	13f20 <__assert_fail@plt+0x28a4>
   13e2c:	mov	r3, ip
   13e30:	ldr	r0, [r3, #120]!	; 0x78
   13e34:	cmp	r0, lr
   13e38:	ldreq	r0, [r3, #4]
   13e3c:	cmpeq	r0, r2
   13e40:	beq	13f20 <__assert_fail@plt+0x28a4>
   13e44:	mov	r3, ip
   13e48:	ldr	r0, [r3, #132]!	; 0x84
   13e4c:	cmp	r0, lr
   13e50:	ldreq	r0, [r3, #4]
   13e54:	cmpeq	r0, r2
   13e58:	beq	13f20 <__assert_fail@plt+0x28a4>
   13e5c:	mov	r3, ip
   13e60:	ldr	r0, [r3, #144]!	; 0x90
   13e64:	cmp	r0, lr
   13e68:	ldreq	r0, [r3, #4]
   13e6c:	cmpeq	r0, r2
   13e70:	beq	13f20 <__assert_fail@plt+0x28a4>
   13e74:	mov	r3, ip
   13e78:	ldr	r0, [r3, #156]!	; 0x9c
   13e7c:	cmp	r0, lr
   13e80:	ldreq	r0, [r3, #4]
   13e84:	cmpeq	r0, r2
   13e88:	beq	13f20 <__assert_fail@plt+0x28a4>
   13e8c:	mov	r3, ip
   13e90:	ldr	r0, [r3, #168]!	; 0xa8
   13e94:	cmp	r0, lr
   13e98:	ldreq	r0, [r3, #4]
   13e9c:	cmpeq	r0, r2
   13ea0:	beq	13f20 <__assert_fail@plt+0x28a4>
   13ea4:	mov	r3, ip
   13ea8:	ldr	r0, [r3, #180]!	; 0xb4
   13eac:	cmp	r0, lr
   13eb0:	ldreq	r0, [r3, #4]
   13eb4:	cmpeq	r0, r2
   13eb8:	beq	13f20 <__assert_fail@plt+0x28a4>
   13ebc:	mov	r3, ip
   13ec0:	ldr	r0, [r3, #192]!	; 0xc0
   13ec4:	cmp	r0, lr
   13ec8:	ldreq	r0, [r3, #4]
   13ecc:	cmpeq	r0, r2
   13ed0:	beq	13f20 <__assert_fail@plt+0x28a4>
   13ed4:	mov	r3, ip
   13ed8:	ldr	r0, [r3, #204]!	; 0xcc
   13edc:	cmp	r0, lr
   13ee0:	ldreq	r0, [r3, #4]
   13ee4:	cmpeq	r0, r2
   13ee8:	beq	13f20 <__assert_fail@plt+0x28a4>
   13eec:	mov	r3, ip
   13ef0:	ldr	r0, [r3, #216]!	; 0xd8
   13ef4:	cmp	r0, lr
   13ef8:	ldreq	r0, [r3, #4]
   13efc:	cmpeq	r0, r2
   13f00:	beq	13f20 <__assert_fail@plt+0x28a4>
   13f04:	ldr	r0, [ip, #228]!	; 0xe4
   13f08:	cmp	r0, lr
   13f0c:	bne	13f48 <__assert_fail@plt+0x28cc>
   13f10:	ldr	r0, [ip, #4]
   13f14:	mov	r3, ip
   13f18:	cmp	r0, r2
   13f1c:	bne	13f48 <__assert_fail@plt+0x28cc>
   13f20:	ldr	r0, [r3, #8]
   13f24:	bl	11490 <puts@plt>
   13f28:	movw	r0, #59084	; 0xe6cc
   13f2c:	movt	r0, #2
   13f30:	ldrb	r0, [r0]
   13f34:	tst	r0, #32
   13f38:	popeq	{r4, sl, fp, pc}
   13f3c:	mov	r0, r4
   13f40:	pop	{r4, sl, fp, lr}
   13f44:	b	13a9c <__assert_fail@plt+0x2420>
   13f48:	movw	r0, #52122	; 0xcb9a
   13f4c:	movt	r0, #1
   13f50:	bl	11364 <printf@plt>
   13f54:	b	13f28 <__assert_fail@plt+0x28ac>
   13f58:	push	{r4, sl, fp, lr}
   13f5c:	add	fp, sp, #8
   13f60:	mov	r4, r0
   13f64:	ldr	r0, [r0, #4]
   13f68:	bl	113f4 <inet_ntoa@plt>
   13f6c:	mov	r1, r0
   13f70:	movw	r0, #52144	; 0xcbb0
   13f74:	movt	r0, #1
   13f78:	bl	11364 <printf@plt>
   13f7c:	mov	r0, r4
   13f80:	pop	{r4, sl, fp, lr}
   13f84:	b	13a9c <__assert_fail@plt+0x2420>
   13f88:	push	{r4, r5, r6, r7, fp, lr}
   13f8c:	add	fp, sp, #16
   13f90:	mov	r4, r2
   13f94:	movw	r2, #59084	; 0xe6cc
   13f98:	ldrb	r1, [r1]
   13f9c:	mov	r5, r3
   13fa0:	movt	r2, #2
   13fa4:	ldrb	r2, [r2]
   13fa8:	tst	r2, #32
   13fac:	bne	13fcc <__assert_fail@plt+0x2950>
   13fb0:	movw	r3, #59092	; 0xe6d4
   13fb4:	ldr	r2, [r4, #24]
   13fb8:	movt	r3, #2
   13fbc:	ldr	r3, [r3]
   13fc0:	ldr	r3, [r3, #28]
   13fc4:	cmp	r2, r3
   13fc8:	popne	{r4, r5, r6, r7, fp, pc}
   13fcc:	mov	r2, #60	; 0x3c
   13fd0:	and	r7, r2, r1, lsl #2
   13fd4:	mov	r1, #16
   13fd8:	bl	12f40 <__assert_fail@plt+0x18c4>
   13fdc:	mov	r6, r0
   13fe0:	movw	r0, #52000	; 0xcb20
   13fe4:	sub	r1, r5, r7
   13fe8:	movt	r0, #1
   13fec:	mov	r2, r6
   13ff0:	bl	11364 <printf@plt>
   13ff4:	mov	r0, r6
   13ff8:	bl	19708 <argp_parse@@Base+0x12dc>
   13ffc:	movw	r5, #58604	; 0xe4ec
   14000:	ldrb	r1, [r4]
   14004:	movt	r5, #2
   14008:	ldr	r0, [r5]
   1400c:	cmp	r0, r1
   14010:	beq	140fc <__assert_fail@plt+0x2a80>
   14014:	movw	r0, #58604	; 0xe4ec
   14018:	movt	r0, #2
   1401c:	mov	r5, r0
   14020:	ldr	r2, [r5, #16]!
   14024:	cmp	r2, r1
   14028:	beq	140fc <__assert_fail@plt+0x2a80>
   1402c:	mov	r5, r0
   14030:	ldr	r2, [r5, #32]!
   14034:	cmp	r2, r1
   14038:	beq	140fc <__assert_fail@plt+0x2a80>
   1403c:	mov	r5, r0
   14040:	ldr	r2, [r5, #48]!	; 0x30
   14044:	cmp	r2, r1
   14048:	beq	140fc <__assert_fail@plt+0x2a80>
   1404c:	mov	r5, r0
   14050:	ldr	r2, [r5, #64]!	; 0x40
   14054:	cmp	r2, r1
   14058:	beq	140fc <__assert_fail@plt+0x2a80>
   1405c:	mov	r5, r0
   14060:	ldr	r2, [r5, #80]!	; 0x50
   14064:	cmp	r2, r1
   14068:	beq	140fc <__assert_fail@plt+0x2a80>
   1406c:	mov	r5, r0
   14070:	ldr	r2, [r5, #96]!	; 0x60
   14074:	cmp	r2, r1
   14078:	beq	140fc <__assert_fail@plt+0x2a80>
   1407c:	mov	r5, r0
   14080:	ldr	r2, [r5, #112]!	; 0x70
   14084:	cmp	r2, r1
   14088:	beq	140fc <__assert_fail@plt+0x2a80>
   1408c:	mov	r5, r0
   14090:	ldr	r2, [r5, #128]!	; 0x80
   14094:	cmp	r2, r1
   14098:	beq	140fc <__assert_fail@plt+0x2a80>
   1409c:	mov	r5, r0
   140a0:	ldr	r2, [r5, #144]!	; 0x90
   140a4:	cmp	r2, r1
   140a8:	beq	140fc <__assert_fail@plt+0x2a80>
   140ac:	mov	r5, r0
   140b0:	ldr	r2, [r5, #160]!	; 0xa0
   140b4:	cmp	r2, r1
   140b8:	beq	140fc <__assert_fail@plt+0x2a80>
   140bc:	mov	r5, r0
   140c0:	ldr	r2, [r5, #176]!	; 0xb0
   140c4:	cmp	r2, r1
   140c8:	beq	140fc <__assert_fail@plt+0x2a80>
   140cc:	mov	r5, r0
   140d0:	ldr	r2, [r5, #192]!	; 0xc0
   140d4:	cmp	r2, r1
   140d8:	beq	140fc <__assert_fail@plt+0x2a80>
   140dc:	mov	r5, r0
   140e0:	ldr	r2, [r5, #208]!	; 0xd0
   140e4:	cmp	r2, r1
   140e8:	beq	140fc <__assert_fail@plt+0x2a80>
   140ec:	ldr	r2, [r0, #224]!	; 0xe0
   140f0:	mov	r5, r0
   140f4:	cmp	r2, r1
   140f8:	bne	1412c <__assert_fail@plt+0x2ab0>
   140fc:	ldr	r0, [r5, #4]
   14100:	cmp	r0, #0
   14104:	beq	1410c <__assert_fail@plt+0x2a90>
   14108:	bl	11490 <puts@plt>
   1410c:	ldr	r2, [r5, #8]
   14110:	cmp	r2, #0
   14114:	beq	14128 <__assert_fail@plt+0x2aac>
   14118:	ldr	r1, [r5, #12]
   1411c:	mov	r0, r4
   14120:	pop	{r4, r5, r6, r7, fp, lr}
   14124:	bx	r2
   14128:	pop	{r4, r5, r6, r7, fp, pc}
   1412c:	movw	r0, #52019	; 0xcb33
   14130:	movt	r0, #1
   14134:	pop	{r4, r5, r6, r7, fp, lr}
   14138:	b	11364 <printf@plt>
   1413c:	push	{r4, r5, fp, lr}
   14140:	add	fp, sp, #8
   14144:	movw	r5, #59092	; 0xe6d4
   14148:	mov	r4, r0
   1414c:	mov	r1, #17
   14150:	movt	r5, #2
   14154:	ldr	r0, [r5]
   14158:	bl	14660 <__assert_fail@plt+0x2fe4>
   1415c:	ldr	r0, [r5]
   14160:	movw	r1, #16872	; 0x41e8
   14164:	mov	r2, #0
   14168:	movt	r1, #1
   1416c:	bl	14a24 <__assert_fail@plt+0x33a8>
   14170:	ldr	r0, [r5]
   14174:	mov	r1, #12
   14178:	bl	14a30 <__assert_fail@plt+0x33b4>
   1417c:	ldr	r0, [r5]
   14180:	mov	r1, #1
   14184:	bl	12e3c <__assert_fail@plt+0x17c0>
   14188:	ldr	r0, [r5]
   1418c:	mov	r1, r4
   14190:	bl	14a38 <__assert_fail@plt+0x33bc>
   14194:	cmp	r0, #0
   14198:	beq	141b0 <__assert_fail@plt+0x2b34>
   1419c:	movw	r2, #51004	; 0xc73c
   141a0:	mov	r0, #1
   141a4:	mov	r1, #0
   141a8:	movt	r2, #1
   141ac:	bl	11478 <error@plt>
   141b0:	ldr	r1, [r5]
   141b4:	ldr	r0, [r1, #28]
   141b8:	ldr	r4, [r1, #52]	; 0x34
   141bc:	bl	113f4 <inet_ntoa@plt>
   141c0:	mov	r2, r0
   141c4:	movw	r0, #52429	; 0xcccd
   141c8:	mov	r1, r4
   141cc:	movt	r0, #1
   141d0:	bl	11364 <printf@plt>
   141d4:	ldr	r0, [r5]
   141d8:	movw	r1, #17036	; 0x428c
   141dc:	movt	r1, #1
   141e0:	pop	{r4, r5, fp, lr}
   141e4:	b	11b00 <__assert_fail@plt+0x484>
   141e8:	push	{r4, r5, r6, sl, fp, lr}
   141ec:	add	fp, sp, #16
   141f0:	ldr	r5, [fp, #16]
   141f4:	ldr	r4, [fp, #12]
   141f8:	cmp	r0, #2
   141fc:	bcs	1426c <__assert_fail@plt+0x2bf0>
   14200:	mov	r6, r0
   14204:	ldr	r0, [r3, #4]
   14208:	bl	113f4 <inet_ntoa@plt>
   1420c:	mov	r2, r0
   14210:	ldrh	r0, [r4, #6]
   14214:	mov	r1, r5
   14218:	rev16	r3, r0
   1421c:	movw	r0, #51074	; 0xc782
   14220:	movt	r0, #1
   14224:	bl	11364 <printf@plt>
   14228:	cmp	r6, #1
   1422c:	bne	1423c <__assert_fail@plt+0x2bc0>
   14230:	movw	r0, #51126	; 0xc7b6
   14234:	movt	r0, #1
   14238:	bl	11364 <printf@plt>
   1423c:	mov	r0, #10
   14240:	bl	11574 <putchar@plt>
   14244:	ldr	r0, [r4, #8]
   14248:	bl	113f4 <inet_ntoa@plt>
   1424c:	mov	r1, r0
   14250:	movw	r0, #52473	; 0xccf9
   14254:	movt	r0, #1
   14258:	bl	11364 <printf@plt>
   1425c:	mov	r0, #10
   14260:	bl	11574 <putchar@plt>
   14264:	mov	r0, #0
   14268:	pop	{r4, r5, r6, sl, fp, pc}
   1426c:	bne	14284 <__assert_fail@plt+0x2c08>
   14270:	ldr	r1, [fp, #8]
   14274:	mov	r0, r3
   14278:	mov	r2, r4
   1427c:	mov	r3, r5
   14280:	bl	13f88 <__assert_fail@plt+0x290c>
   14284:	mov	r0, #0
   14288:	pop	{r4, r5, r6, sl, fp, pc}
   1428c:	mov	r0, #0
   14290:	bx	lr
   14294:	mov	r0, #0
   14298:	bx	lr
   1429c:	push	{r4, r5, fp, lr}
   142a0:	add	fp, sp, #8
   142a4:	movw	r5, #59092	; 0xe6d4
   142a8:	mov	r4, r0
   142ac:	mov	r1, #13
   142b0:	movt	r5, #2
   142b4:	ldr	r0, [r5]
   142b8:	bl	14660 <__assert_fail@plt+0x2fe4>
   142bc:	ldr	r0, [r5]
   142c0:	movw	r1, #17212	; 0x433c
   142c4:	mov	r2, #0
   142c8:	movt	r1, #1
   142cc:	bl	14a24 <__assert_fail@plt+0x33a8>
   142d0:	ldr	r0, [r5]
   142d4:	mov	r1, #20
   142d8:	bl	14a30 <__assert_fail@plt+0x33b4>
   142dc:	ldr	r0, [r5]
   142e0:	mov	r1, r4
   142e4:	bl	14a38 <__assert_fail@plt+0x33bc>
   142e8:	cmp	r0, #0
   142ec:	beq	14304 <__assert_fail@plt+0x2c88>
   142f0:	movw	r2, #51004	; 0xc73c
   142f4:	mov	r0, #1
   142f8:	mov	r1, #0
   142fc:	movt	r2, #1
   14300:	bl	11478 <error@plt>
   14304:	ldr	r1, [r5]
   14308:	ldr	r0, [r1, #28]
   1430c:	ldr	r4, [r1, #52]	; 0x34
   14310:	bl	113f4 <inet_ntoa@plt>
   14314:	mov	r2, r0
   14318:	movw	r0, #52488	; 0xcd08
   1431c:	mov	r1, r4
   14320:	movt	r0, #1
   14324:	bl	11364 <printf@plt>
   14328:	ldr	r0, [r5]
   1432c:	movw	r1, #17552	; 0x4490
   14330:	movt	r1, #1
   14334:	pop	{r4, r5, fp, lr}
   14338:	b	11b00 <__assert_fail@plt+0x484>
   1433c:	push	{r4, r5, r6, sl, fp, lr}
   14340:	add	fp, sp, #16
   14344:	sub	sp, sp, #16
   14348:	ldr	r5, [fp, #16]
   1434c:	ldr	r4, [fp, #12]
   14350:	cmp	r0, #2
   14354:	bcs	1446c <__assert_fail@plt+0x2df0>
   14358:	mov	r6, r0
   1435c:	ldr	r0, [r3, #4]
   14360:	bl	113f4 <inet_ntoa@plt>
   14364:	mov	r2, r0
   14368:	ldrh	r0, [r4, #6]
   1436c:	mov	r1, r5
   14370:	rev16	r3, r0
   14374:	movw	r0, #51074	; 0xc782
   14378:	movt	r0, #1
   1437c:	bl	11364 <printf@plt>
   14380:	cmp	r6, #1
   14384:	bne	14394 <__assert_fail@plt+0x2d18>
   14388:	movw	r0, #51126	; 0xc7b6
   1438c:	movt	r0, #1
   14390:	bl	11364 <printf@plt>
   14394:	mov	r0, #10
   14398:	bl	11574 <putchar@plt>
   1439c:	ldr	r0, [r4, #8]
   143a0:	mov	r5, sp
   143a4:	mov	r1, #16
   143a8:	rev	r2, r0
   143ac:	mov	r0, r5
   143b0:	bl	12cc0 <__assert_fail@plt+0x1644>
   143b4:	mov	r1, r0
   143b8:	movw	r0, #52530	; 0xcd32
   143bc:	movt	r0, #1
   143c0:	bl	11364 <printf@plt>
   143c4:	ldr	r0, [r4, #12]
   143c8:	mov	r1, #16
   143cc:	rev	r2, r0
   143d0:	mov	r0, r5
   143d4:	bl	12cc0 <__assert_fail@plt+0x1644>
   143d8:	mov	r1, r0
   143dc:	movw	r0, #52547	; 0xcd43
   143e0:	movt	r0, #1
   143e4:	bl	11364 <printf@plt>
   143e8:	ldr	r0, [r4, #16]
   143ec:	mov	r1, #16
   143f0:	rev	r2, r0
   143f4:	mov	r0, r5
   143f8:	bl	12cc0 <__assert_fail@plt+0x1644>
   143fc:	mov	r1, r0
   14400:	movw	r0, #52564	; 0xcd54
   14404:	movt	r0, #1
   14408:	bl	11364 <printf@plt>
   1440c:	movw	r0, #59084	; 0xe6cc
   14410:	movt	r0, #2
   14414:	ldrb	r0, [r0]
   14418:	tst	r0, #32
   1441c:	beq	14484 <__assert_fail@plt+0x2e08>
   14420:	ldr	r0, [r4, #8]
   14424:	rev	r0, r0
   14428:	bl	12cb4 <__assert_fail@plt+0x1638>
   1442c:	cmp	r0, #0
   14430:	beq	14484 <__assert_fail@plt+0x2e08>
   14434:	ldr	r0, [r4, #8]
   14438:	rev	r0, r0
   1443c:	bl	12cb4 <__assert_fail@plt+0x1638>
   14440:	cmp	r0, #0
   14444:	beq	14484 <__assert_fail@plt+0x2e08>
   14448:	ldr	r0, [r4, #8]
   1444c:	ldr	r1, [r4, #16]
   14450:	rev	r0, r0
   14454:	rev	r1, r1
   14458:	sub	r1, r1, r0
   1445c:	movw	r0, #52581	; 0xcd65
   14460:	movt	r0, #1
   14464:	bl	11364 <printf@plt>
   14468:	b	14484 <__assert_fail@plt+0x2e08>
   1446c:	bne	14484 <__assert_fail@plt+0x2e08>
   14470:	ldr	r1, [fp, #8]
   14474:	mov	r0, r3
   14478:	mov	r2, r4
   1447c:	mov	r3, r5
   14480:	bl	13f88 <__assert_fail@plt+0x290c>
   14484:	mov	r0, #0
   14488:	sub	sp, fp, #16
   1448c:	pop	{r4, r5, r6, sl, fp, pc}
   14490:	b	11fe8 <__assert_fail@plt+0x96c>
   14494:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14498:	add	fp, sp, #24
   1449c:	mov	r9, r0
   144a0:	movw	r0, #52601	; 0xcd79
   144a4:	mov	r8, r1
   144a8:	movt	r0, #1
   144ac:	bl	11370 <getprotobyname@plt>
   144b0:	cmp	r0, #0
   144b4:	beq	145cc <__assert_fail@plt+0x2f50>
   144b8:	ldr	r2, [r0, #8]
   144bc:	mov	r7, r0
   144c0:	mov	r0, #2
   144c4:	mov	r1, #3
   144c8:	bl	1164c <socket@plt>
   144cc:	mov	r4, r0
   144d0:	cmn	r0, #1
   144d4:	bgt	1452c <__assert_fail@plt+0x2eb0>
   144d8:	bl	11538 <__errno_location@plt>
   144dc:	mov	r5, r0
   144e0:	ldr	r0, [r0]
   144e4:	cmp	r0, #13
   144e8:	movne	r6, #0
   144ec:	cmpne	r0, #1
   144f0:	bne	145b0 <__assert_fail@plt+0x2f34>
   144f4:	mov	r0, #0
   144f8:	mov	r1, #2
   144fc:	str	r0, [r5]
   14500:	mov	r0, #2
   14504:	ldr	r2, [r7, #8]
   14508:	bl	1164c <socket@plt>
   1450c:	cmn	r0, #1
   14510:	ble	145f0 <__assert_fail@plt+0x2f74>
   14514:	mov	r4, r0
   14518:	movw	r0, #59016	; 0xe688
   1451c:	movt	r0, #2
   14520:	ldr	r1, [r0]
   14524:	add	r1, r1, #1
   14528:	str	r1, [r0]
   1452c:	mov	r0, #124	; 0x7c
   14530:	bl	1a420 <argp_parse@@Base+0x1ff4>
   14534:	cmp	r0, #0
   14538:	beq	145b8 <__assert_fail@plt+0x2f3c>
   1453c:	vmov.i32	q8, #0	; 0x00000000
   14540:	mov	r6, r0
   14544:	add	r0, r0, #60	; 0x3c
   14548:	mov	r1, #0
   1454c:	mov	r2, #28
   14550:	vst1.32	{d16-d17}, [r0]
   14554:	add	r0, r6, #44	; 0x2c
   14558:	vst1.32	{d16-d17}, [r0]
   1455c:	add	r0, r6, #12
   14560:	vst1.32	{d16-d17}, [r0]
   14564:	stm	r6, {r4, r9}
   14568:	str	r1, [r6, #8]
   1456c:	add	r1, r6, #108	; 0x6c
   14570:	vst1.32	{d16-d17}, [r1]
   14574:	add	r1, r6, #92	; 0x5c
   14578:	vst1.32	{d16-d17}, [r1]
   1457c:	add	r1, r6, #76	; 0x4c
   14580:	vst1.32	{d16-d17}, [r1]
   14584:	add	r1, r6, #28
   14588:	vst1.32	{d16-d17}, [r1]
   1458c:	mov	r1, #128	; 0x80
   14590:	str	r1, [r6, #72]	; 0x48
   14594:	uxth	r1, r8
   14598:	str	r2, [r6, #56]	; 0x38
   1459c:	str	r1, [r6, #60]	; 0x3c
   145a0:	mov	r1, #1000	; 0x3e8
   145a4:	str	r1, [r6, #20]
   145a8:	mov	r1, #0
   145ac:	bl	1146c <gettimeofday@plt>
   145b0:	mov	r0, r6
   145b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   145b8:	mov	r0, r4
   145bc:	bl	11670 <close@plt>
   145c0:	mov	r6, #0
   145c4:	mov	r0, r6
   145c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   145cc:	movw	r0, #58920	; 0xe628
   145d0:	mov	r1, #29
   145d4:	movt	r0, #2
   145d8:	ldr	r3, [r0]
   145dc:	movw	r0, #52606	; 0xcd7e
   145e0:	movt	r0, #1
   145e4:	mov	r2, #1
   145e8:	bl	11460 <fwrite@plt>
   145ec:	b	145c0 <__assert_fail@plt+0x2f44>
   145f0:	ldr	r0, [r5]
   145f4:	cmp	r0, #1
   145f8:	cmpne	r0, #93	; 0x5d
   145fc:	bne	1461c <__assert_fail@plt+0x2fa0>
   14600:	movw	r0, #58920	; 0xe628
   14604:	mov	r1, #41	; 0x29
   14608:	movt	r0, #2
   1460c:	ldr	r3, [r0]
   14610:	movw	r0, #52636	; 0xcd9c
   14614:	movt	r0, #1
   14618:	b	145e4 <__assert_fail@plt+0x2f68>
   1461c:	cmp	r0, #13
   14620:	beq	14600 <__assert_fail@plt+0x2f84>
   14624:	movw	r1, #58920	; 0xe628
   14628:	movt	r1, #2
   1462c:	ldr	r4, [r1]
   14630:	bl	114b4 <strerror@plt>
   14634:	movw	r1, #52678	; 0xcdc6
   14638:	mov	r2, r0
   1463c:	mov	r0, r4
   14640:	movt	r1, #1
   14644:	bl	1152c <fprintf@plt>
   14648:	b	145c0 <__assert_fail@plt+0x2f44>
   1464c:	mov	r1, #0
   14650:	str	r1, [r0, #112]	; 0x70
   14654:	str	r1, [r0, #116]	; 0x74
   14658:	str	r1, [r0, #120]	; 0x78
   1465c:	bx	lr
   14660:	str	r1, [r0, #4]
   14664:	bx	lr
   14668:	push	{r4, r5, r6, r7, fp, lr}
   1466c:	add	fp, sp, #16
   14670:	sub	sp, sp, #8
   14674:	mov	r1, #0
   14678:	mov	r4, r0
   1467c:	bl	12cfc <__assert_fail@plt+0x1680>
   14680:	mvn	r5, #0
   14684:	cmp	r0, #0
   14688:	bne	147cc <__assert_fail@plt+0x3150>
   1468c:	ldr	r0, [r4, #4]
   14690:	sub	r0, r0, #13
   14694:	cmp	r0, #6
   14698:	bcs	146b0 <__assert_fail@plt+0x3034>
   1469c:	uxtb	r1, r0
   146a0:	mov	r2, #51	; 0x33
   146a4:	mov	r3, #1
   146a8:	tst	r3, r2, lsr r1
   146ac:	bne	146bc <__assert_fail@plt+0x3040>
   146b0:	ldr	r0, [r4, #56]	; 0x38
   146b4:	add	r7, r0, #8
   146b8:	b	146c8 <__assert_fail@plt+0x304c>
   146bc:	movw	r1, #52788	; 0xce34
   146c0:	movt	r1, #1
   146c4:	ldr	r7, [r1, r0, lsl #2]
   146c8:	ldr	r0, [r4, #72]	; 0x48
   146cc:	ldr	r2, [r4, #112]	; 0x70
   146d0:	ldr	r1, [r4, #76]	; 0x4c
   146d4:	mov	r6, #1
   146d8:	lsl	r0, r0, #3
   146dc:	udiv	r3, r2, r0
   146e0:	mls	r0, r3, r0, r2
   146e4:	ldrb	r2, [r1, r0, asr #3]
   146e8:	and	r3, r0, #7
   146ec:	bic	r2, r2, r6, lsl r3
   146f0:	strb	r2, [r1, r0, asr #3]
   146f4:	ldr	r2, [r4, #4]
   146f8:	cmp	r2, #17
   146fc:	beq	14728 <__assert_fail@plt+0x30ac>
   14700:	cmp	r2, #13
   14704:	beq	14740 <__assert_fail@plt+0x30c4>
   14708:	cmp	r2, #8
   1470c:	bne	14758 <__assert_fail@plt+0x30dc>
   14710:	ldr	r2, [r4, #60]	; 0x3c
   14714:	ldr	r0, [r4, #80]	; 0x50
   14718:	ldr	r3, [r4, #112]	; 0x70
   1471c:	mov	r1, r7
   14720:	bl	14b8c <__assert_fail@plt+0x3510>
   14724:	b	14770 <__assert_fail@plt+0x30f4>
   14728:	ldr	r2, [r4, #60]	; 0x3c
   1472c:	ldr	r0, [r4, #80]	; 0x50
   14730:	ldr	r3, [r4, #112]	; 0x70
   14734:	mov	r1, r7
   14738:	bl	14cdc <__assert_fail@plt+0x3660>
   1473c:	b	14770 <__assert_fail@plt+0x30f4>
   14740:	ldr	r2, [r4, #60]	; 0x3c
   14744:	ldr	r0, [r4, #80]	; 0x50
   14748:	ldr	r3, [r4, #112]	; 0x70
   1474c:	mov	r1, r7
   14750:	bl	14c2c <__assert_fail@plt+0x35b0>
   14754:	b	14770 <__assert_fail@plt+0x30f4>
   14758:	ldr	r1, [r4, #112]	; 0x70
   1475c:	ldr	r3, [r4, #60]	; 0x3c
   14760:	ldr	r0, [r4, #80]	; 0x50
   14764:	str	r1, [sp]
   14768:	mov	r1, r7
   1476c:	bl	14ae0 <__assert_fail@plt+0x3464>
   14770:	ldr	r0, [r4]
   14774:	ldr	r1, [r4, #80]	; 0x50
   14778:	mov	r2, #16
   1477c:	add	r3, r4, #24
   14780:	str	r3, [sp]
   14784:	str	r2, [sp, #4]
   14788:	mov	r2, r7
   1478c:	mov	r3, #0
   14790:	bl	11598 <sendto@plt>
   14794:	cmp	r0, #0
   14798:	bmi	147cc <__assert_fail@plt+0x3150>
   1479c:	mov	r3, r0
   147a0:	ldr	r0, [r4, #112]	; 0x70
   147a4:	cmp	r3, r7
   147a8:	add	r0, r0, #1
   147ac:	str	r0, [r4, #112]	; 0x70
   147b0:	beq	147c8 <__assert_fail@plt+0x314c>
   147b4:	ldr	r1, [r4, #52]	; 0x34
   147b8:	movw	r0, #52688	; 0xcdd0
   147bc:	mov	r2, r7
   147c0:	movt	r0, #1
   147c4:	bl	11364 <printf@plt>
   147c8:	mov	r5, #0
   147cc:	mov	r0, r5
   147d0:	sub	sp, fp, #16
   147d4:	pop	{r4, r5, r6, r7, fp, pc}
   147d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147dc:	add	fp, sp, #24
   147e0:	sub	sp, sp, #24
   147e4:	mov	r4, r0
   147e8:	mov	r0, #16
   147ec:	add	r3, sp, #20
   147f0:	str	r0, [sp, #20]
   147f4:	add	r8, r4, #84	; 0x54
   147f8:	ldr	r2, [r4, #56]	; 0x38
   147fc:	ldr	r0, [r4]
   14800:	ldr	r1, [r4, #80]	; 0x50
   14804:	str	r3, [sp, #4]
   14808:	mov	r3, #0
   1480c:	str	r8, [sp]
   14810:	add	r2, r2, #80	; 0x50
   14814:	bl	11424 <recvfrom@plt>
   14818:	mvn	r7, #0
   1481c:	cmp	r0, #0
   14820:	bmi	149e8 <__assert_fail@plt+0x336c>
   14824:	mov	r6, r0
   14828:	ldr	r0, [r4, #80]	; 0x50
   1482c:	add	r2, sp, #12
   14830:	add	r3, sp, #16
   14834:	mov	r1, r6
   14838:	bl	14b30 <__assert_fail@plt+0x34b4>
   1483c:	cmn	r0, #1
   14840:	ble	149bc <__assert_fail@plt+0x3340>
   14844:	ldr	r2, [sp, #16]
   14848:	ldrb	r1, [r2]
   1484c:	cmp	r1, #18
   14850:	bhi	14900 <__assert_fail@plt+0x3284>
   14854:	movw	r5, #8448	; 0x2100
   14858:	mov	r3, #1
   1485c:	movt	r5, #2
   14860:	tst	r5, r3, lsl r1
   14864:	bne	149e8 <__assert_fail@plt+0x336c>
   14868:	movw	r5, #16385	; 0x4001
   1486c:	movt	r5, #4
   14870:	tst	r5, r3, lsl r1
   14874:	beq	14900 <__assert_fail@plt+0x3284>
   14878:	ldrh	r3, [r2, #4]
   1487c:	ldr	r1, [r4, #60]	; 0x3c
   14880:	rev	r3, r3
   14884:	cmp	r1, r3, lsr #16
   14888:	beq	148a0 <__assert_fail@plt+0x3224>
   1488c:	movw	r1, #59016	; 0xe688
   14890:	movt	r1, #2
   14894:	ldr	r1, [r1]
   14898:	cmp	r1, #0
   1489c:	beq	149e8 <__assert_fail@plt+0x336c>
   148a0:	cmp	r0, #0
   148a4:	bne	149f4 <__assert_fail@plt+0x3378>
   148a8:	ldr	r3, [r4, #116]	; 0x74
   148ac:	ldr	r0, [r4, #72]	; 0x48
   148b0:	ldr	ip, [r4, #76]	; 0x4c
   148b4:	add	r1, r3, #1
   148b8:	lsl	r0, r0, #3
   148bc:	str	r1, [r4, #116]	; 0x74
   148c0:	ldrh	r1, [r2, #6]
   148c4:	rev	r1, r1
   148c8:	lsr	r2, r1, #16
   148cc:	sdiv	r2, r2, r0
   148d0:	mul	r0, r2, r0
   148d4:	rsb	r2, r0, r1, lsr #16
   148d8:	mov	r0, #1
   148dc:	ldrb	r7, [ip, r2, lsr #3]
   148e0:	and	r1, r2, #7
   148e4:	tst	r7, r0, lsl r1
   148e8:	beq	14978 <__assert_fail@plt+0x32fc>
   148ec:	str	r3, [r4, #116]	; 0x74
   148f0:	ldr	r1, [r4, #120]	; 0x78
   148f4:	add	r1, r1, #1
   148f8:	str	r1, [r4, #120]	; 0x78
   148fc:	b	1498c <__assert_fail@plt+0x3310>
   14900:	ldr	r0, [r4, #28]
   14904:	ldr	r1, [r2, #24]
   14908:	cmp	r1, r0
   1490c:	bne	149e8 <__assert_fail@plt+0x336c>
   14910:	ldrb	r0, [r2, #17]
   14914:	cmp	r0, #1
   14918:	bne	149e8 <__assert_fail@plt+0x336c>
   1491c:	ldrb	r0, [r2, #28]
   14920:	cmp	r0, #8
   14924:	bne	149e8 <__assert_fail@plt+0x336c>
   14928:	movw	r0, #59016	; 0xe688
   1492c:	movt	r0, #2
   14930:	ldr	r0, [r0]
   14934:	cmp	r0, #0
   14938:	bne	14950 <__assert_fail@plt+0x32d4>
   1493c:	ldrh	r1, [r2, #32]
   14940:	ldr	r0, [r4, #60]	; 0x3c
   14944:	rev16	r1, r1
   14948:	cmp	r0, r1
   1494c:	bne	149e8 <__assert_fail@plt+0x336c>
   14950:	ldr	ip, [r4, #64]	; 0x40
   14954:	mov	r7, #0
   14958:	cmp	ip, #0
   1495c:	beq	149e8 <__assert_fail@plt+0x336c>
   14960:	ldr	r0, [sp, #12]
   14964:	ldr	r1, [r4, #68]	; 0x44
   14968:	stm	sp, {r0, r2, r6}
   1496c:	add	r2, r4, #24
   14970:	mov	r0, #2
   14974:	b	149b0 <__assert_fail@plt+0x3334>
   14978:	lsl	r0, r0, r1
   1497c:	lsr	r1, r2, #3
   14980:	orr	r0, r7, r0
   14984:	strb	r0, [ip, r1]
   14988:	mov	r0, #0
   1498c:	ldr	ip, [r4, #64]	; 0x40
   14990:	mov	r7, #0
   14994:	cmp	ip, #0
   14998:	beq	149e8 <__assert_fail@plt+0x336c>
   1499c:	ldr	r2, [sp, #12]
   149a0:	ldr	r1, [r4, #68]	; 0x44
   149a4:	ldr	r3, [sp, #16]
   149a8:	stm	sp, {r2, r3, r6}
   149ac:	add	r2, r4, #24
   149b0:	mov	r3, r8
   149b4:	blx	ip
   149b8:	b	149e8 <__assert_fail@plt+0x336c>
   149bc:	movw	r0, #58920	; 0xe628
   149c0:	movt	r0, #2
   149c4:	ldr	r5, [r0]
   149c8:	ldr	r0, [r4, #88]	; 0x58
   149cc:	bl	113f4 <inet_ntoa@plt>
   149d0:	movw	r1, #52721	; 0xcdf1
   149d4:	mov	r3, r0
   149d8:	mov	r0, r5
   149dc:	mov	r2, r6
   149e0:	movt	r1, #1
   149e4:	bl	1152c <fprintf@plt>
   149e8:	mov	r0, r7
   149ec:	sub	sp, fp, #24
   149f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149f4:	movw	r0, #58920	; 0xe628
   149f8:	movt	r0, #2
   149fc:	ldr	r7, [r0]
   14a00:	ldr	r0, [r4, #88]	; 0x58
   14a04:	bl	113f4 <inet_ntoa@plt>
   14a08:	movw	r1, #52758	; 0xce16
   14a0c:	mov	r2, r0
   14a10:	mov	r0, r7
   14a14:	movt	r1, #1
   14a18:	bl	1152c <fprintf@plt>
   14a1c:	ldr	r2, [sp, #16]
   14a20:	b	148a8 <__assert_fail@plt+0x322c>
   14a24:	str	r1, [r0, #64]	; 0x40
   14a28:	str	r2, [r0, #68]	; 0x44
   14a2c:	bx	lr
   14a30:	str	r1, [r0, #56]	; 0x38
   14a34:	bx	lr
   14a38:	push	{r4, r5, r6, sl, fp, lr}
   14a3c:	add	fp, sp, #16
   14a40:	sub	sp, sp, #40	; 0x28
   14a44:	vmov.i32	q8, #0	; 0x00000000
   14a48:	add	r2, sp, #8
   14a4c:	mov	r4, r0
   14a50:	mov	r5, r1
   14a54:	add	r3, sp, #4
   14a58:	add	r0, r2, #8
   14a5c:	vst1.64	{d16-d17}, [r0]
   14a60:	mov	r0, #0
   14a64:	str	r0, [sp, #36]	; 0x24
   14a68:	str	r0, [sp, #32]
   14a6c:	mov	r0, #2
   14a70:	str	r0, [sp, #12]
   14a74:	mov	r0, #194	; 0xc2
   14a78:	str	r0, [sp, #8]
   14a7c:	mov	r0, r1
   14a80:	mov	r1, #0
   14a84:	bl	11640 <getaddrinfo@plt>
   14a88:	cmp	r0, #0
   14a8c:	beq	14aa4 <__assert_fail@plt+0x3428>
   14a90:	mov	r0, #0
   14a94:	bl	19708 <argp_parse@@Base+0x12dc>
   14a98:	mov	r0, #1
   14a9c:	sub	sp, fp, #16
   14aa0:	pop	{r4, r5, r6, sl, fp, pc}
   14aa4:	ldr	r6, [sp, #4]
   14aa8:	add	r0, r4, #24
   14aac:	ldr	r2, [r6, #16]
   14ab0:	ldr	r1, [r6, #20]
   14ab4:	bl	113d0 <memcpy@plt>
   14ab8:	ldr	r0, [r6, #24]
   14abc:	cmp	r0, #0
   14ac0:	moveq	r0, r5
   14ac4:	bl	11430 <strdup@plt>
   14ac8:	str	r0, [r4, #52]	; 0x34
   14acc:	ldr	r0, [sp, #4]
   14ad0:	bl	11634 <freeaddrinfo@plt>
   14ad4:	mov	r0, #0
   14ad8:	sub	sp, fp, #16
   14adc:	pop	{r4, r5, r6, sl, fp, pc}
   14ae0:	push	{r4, r5, fp, lr}
   14ae4:	add	fp, sp, #8
   14ae8:	mvn	r4, #0
   14aec:	cmp	r1, #8
   14af0:	bcc	14b28 <__assert_fail@plt+0x34ac>
   14af4:	mov	r5, r0
   14af8:	ldr	r0, [fp, #8]
   14afc:	mov	r4, #0
   14b00:	strh	r4, [r5, #2]
   14b04:	strb	r4, [r5, #1]
   14b08:	strb	r2, [r5]
   14b0c:	rev16	r0, r0
   14b10:	strh	r0, [r5, #6]
   14b14:	rev16	r0, r3
   14b18:	strh	r0, [r5, #4]
   14b1c:	mov	r0, r5
   14b20:	bl	14d1c <__assert_fail@plt+0x36a0>
   14b24:	strh	r0, [r5, #2]
   14b28:	mov	r0, r4
   14b2c:	pop	{r4, r5, fp, pc}
   14b30:	push	{r4, r5, fp, lr}
   14b34:	add	fp, sp, #8
   14b38:	ldrb	ip, [r0]
   14b3c:	mov	r4, #60	; 0x3c
   14b40:	and	lr, r4, ip, lsl #2
   14b44:	mvn	ip, #0
   14b48:	add	r4, lr, #8
   14b4c:	cmp	r4, r1
   14b50:	bhi	14b84 <__assert_fail@plt+0x3508>
   14b54:	add	r4, r0, lr
   14b58:	str	r0, [r2]
   14b5c:	mov	r0, #0
   14b60:	sub	r1, r1, lr
   14b64:	str	r4, [r3]
   14b68:	ldrh	r5, [r4, #2]
   14b6c:	strh	r0, [r4, #2]
   14b70:	mov	r0, r4
   14b74:	bl	14d1c <__assert_fail@plt+0x36a0>
   14b78:	subs	ip, r0, r5
   14b7c:	strh	r0, [r4, #2]
   14b80:	movwne	ip, #1
   14b84:	mov	r0, ip
   14b88:	pop	{r4, r5, fp, pc}
   14b8c:	push	{r4, sl, fp, lr}
   14b90:	add	fp, sp, #8
   14b94:	mov	r4, r0
   14b98:	mvn	r0, #0
   14b9c:	cmp	r1, #8
   14ba0:	popcc	{r4, sl, fp, pc}
   14ba4:	mov	r0, #8
   14ba8:	str	r0, [r4]
   14bac:	rev16	r0, r3
   14bb0:	strh	r0, [r4, #6]
   14bb4:	rev16	r0, r2
   14bb8:	strh	r0, [r4, #4]
   14bbc:	mov	r0, r4
   14bc0:	bl	14d1c <__assert_fail@plt+0x36a0>
   14bc4:	strh	r0, [r4, #2]
   14bc8:	mov	r0, #0
   14bcc:	pop	{r4, sl, fp, pc}
   14bd0:	push	{r4, r5, fp, lr}
   14bd4:	add	fp, sp, #8
   14bd8:	ldrb	ip, [r0]
   14bdc:	mov	r4, #60	; 0x3c
   14be0:	and	lr, r4, ip, lsl #2
   14be4:	mvn	ip, #0
   14be8:	add	r4, lr, #8
   14bec:	cmp	r4, r1
   14bf0:	bhi	14c24 <__assert_fail@plt+0x35a8>
   14bf4:	add	r4, r0, lr
   14bf8:	str	r0, [r2]
   14bfc:	mov	r0, #0
   14c00:	sub	r1, r1, lr
   14c04:	str	r4, [r3]
   14c08:	ldrh	r5, [r4, #2]
   14c0c:	strh	r0, [r4, #2]
   14c10:	mov	r0, r4
   14c14:	bl	14d1c <__assert_fail@plt+0x36a0>
   14c18:	subs	ip, r0, r5
   14c1c:	strh	r0, [r4, #2]
   14c20:	movwne	ip, #1
   14c24:	mov	r0, ip
   14c28:	pop	{r4, r5, fp, pc}
   14c2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c30:	add	fp, sp, #24
   14c34:	sub	sp, sp, #16
   14c38:	mvn	r5, #0
   14c3c:	cmp	r1, #20
   14c40:	bcc	14cd0 <__assert_fail@plt+0x3654>
   14c44:	mov	r6, r1
   14c48:	mov	r4, r0
   14c4c:	add	r0, sp, #8
   14c50:	mov	r1, #0
   14c54:	mov	r7, r3
   14c58:	mov	r8, r2
   14c5c:	mov	r5, #0
   14c60:	bl	1146c <gettimeofday@plt>
   14c64:	ldr	r1, [sp, #12]
   14c68:	movw	r2, #19923	; 0x4dd3
   14c6c:	ldr	r0, [sp, #8]
   14c70:	movt	r2, #4194	; 0x1062
   14c74:	smmul	r1, r1, r2
   14c78:	asr	r2, r1, #6
   14c7c:	add	r1, r2, r1, lsr #31
   14c80:	movw	r2, #17671	; 0x4507
   14c84:	movt	r2, #49710	; 0xc22e
   14c88:	smmla	r2, r0, r2, r0
   14c8c:	asr	r3, r2, #16
   14c90:	add	r2, r3, r2, lsr #31
   14c94:	movw	r3, #675	; 0x2a3
   14c98:	mul	r2, r2, r3
   14c9c:	mov	r3, r8
   14ca0:	sub	r0, r0, r2, lsl #7
   14ca4:	mov	r2, #1000	; 0x3e8
   14ca8:	mla	r0, r0, r2, r1
   14cac:	mov	r1, r6
   14cb0:	mov	r2, #13
   14cb4:	rev	r0, r0
   14cb8:	str	r0, [r4, #8]
   14cbc:	str	r0, [r4, #12]
   14cc0:	str	r0, [r4, #16]
   14cc4:	mov	r0, r4
   14cc8:	str	r7, [sp]
   14ccc:	bl	14ae0 <__assert_fail@plt+0x3464>
   14cd0:	mov	r0, r5
   14cd4:	sub	sp, fp, #24
   14cd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cdc:	push	{r4, sl, fp, lr}
   14ce0:	add	fp, sp, #8
   14ce4:	sub	sp, sp, #8
   14ce8:	mvn	r4, #0
   14cec:	cmp	r1, #12
   14cf0:	bcc	14d10 <__assert_fail@plt+0x3694>
   14cf4:	mov	ip, r2
   14cf8:	mov	r4, #0
   14cfc:	mov	r2, #17
   14d00:	str	r4, [r0, #8]
   14d04:	str	r3, [sp]
   14d08:	mov	r3, ip
   14d0c:	bl	14ae0 <__assert_fail@plt+0x3464>
   14d10:	mov	r0, r4
   14d14:	sub	sp, fp, #8
   14d18:	pop	{r4, sl, fp, pc}
   14d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d20:	add	fp, sp, #28
   14d24:	mov	r5, #0
   14d28:	cmp	r1, #2
   14d2c:	blt	14df0 <__assert_fail@plt+0x3774>
   14d30:	sub	sl, r1, #2
   14d34:	mov	r4, #1
   14d38:	add	r3, r4, sl, lsr #1
   14d3c:	bic	lr, sl, #1
   14d40:	add	ip, lr, r0
   14d44:	cmp	r3, #4
   14d48:	bcs	14d54 <__assert_fail@plt+0x36d8>
   14d4c:	mov	r5, #0
   14d50:	b	14dd4 <__assert_fail@plt+0x3758>
   14d54:	bic	r9, r3, #3
   14d58:	vmov.i32	q8, #0	; 0x00000000
   14d5c:	subs	r5, r9, #4
   14d60:	add	r4, r4, r5, lsr #2
   14d64:	and	r8, r4, #1
   14d68:	beq	14e14 <__assert_fail@plt+0x3798>
   14d6c:	sub	r7, r8, r4
   14d70:	mov	r6, #0
   14d74:	mov	r5, #16
   14d78:	mov	r4, r0
   14d7c:	add	r2, r4, #8
   14d80:	vld1.16	{d18}, [r4], r5
   14d84:	adds	r7, r7, #2
   14d88:	add	r6, r6, #8
   14d8c:	vld1.16	{d19}, [r2]
   14d90:	vaddw.u16	q8, q8, d18
   14d94:	vaddw.u16	q8, q8, d19
   14d98:	bne	14d7c <__assert_fail@plt+0x3700>
   14d9c:	cmp	r8, #0
   14da0:	beq	14db0 <__assert_fail@plt+0x3734>
   14da4:	add	r2, r0, r6, lsl #1
   14da8:	vld1.16	{d18}, [r2]
   14dac:	vaddw.u16	q8, q8, d18
   14db0:	vext.8	q9, q8, q8, #8
   14db4:	cmp	r3, r9
   14db8:	vadd.i32	q8, q8, q9
   14dbc:	vdup.32	q9, d16[1]
   14dc0:	vadd.i32	q8, q8, q9
   14dc4:	vmov.32	r5, d16[0]
   14dc8:	beq	14de8 <__assert_fail@plt+0x376c>
   14dcc:	sub	r1, r1, r9, lsl #1
   14dd0:	add	r0, r0, r9, lsl #1
   14dd4:	ldrh	r2, [r0], #2
   14dd8:	sub	r1, r1, #2
   14ddc:	cmp	r1, #1
   14de0:	add	r5, r5, r2
   14de4:	bgt	14dd4 <__assert_fail@plt+0x3758>
   14de8:	add	r0, ip, #2
   14dec:	sub	r1, sl, lr
   14df0:	cmp	r1, #1
   14df4:	ldrbeq	r0, [r0]
   14df8:	addeq	r5, r5, r0
   14dfc:	asr	r0, r5, #16
   14e00:	uxtah	r0, r0, r5
   14e04:	add	r0, r0, r0, lsr #16
   14e08:	mvn	r0, r0
   14e0c:	uxth	r0, r0
   14e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e14:	mov	r6, #0
   14e18:	cmp	r8, #0
   14e1c:	bne	14da4 <__assert_fail@plt+0x3728>
   14e20:	b	14db0 <__assert_fail@plt+0x3734>

00014e24 <argp_help@@Base>:
   14e24:	push	{fp, lr}
   14e28:	mov	fp, sp
   14e2c:	sub	sp, sp, #8
   14e30:	mov	ip, r2
   14e34:	mov	r2, r1
   14e38:	str	r3, [sp]
   14e3c:	mov	r1, #0
   14e40:	mov	r3, ip
   14e44:	bl	14e50 <argp_help@@Base+0x2c>
   14e48:	mov	sp, fp
   14e4c:	pop	{fp, pc}
   14e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e54:	add	fp, sp, #28
   14e58:	sub	sp, sp, #108	; 0x6c
   14e5c:	cmp	r2, #0
   14e60:	str	r3, [fp, #-92]	; 0xffffffa4
   14e64:	str	r1, [fp, #-100]	; 0xffffff9c
   14e68:	str	r0, [fp, #-108]	; 0xffffff94
   14e6c:	beq	161ec <argp_help@@Base+0x13c8>
   14e70:	ldr	r0, [fp, #8]
   14e74:	mov	r4, r2
   14e78:	str	r0, [fp, #-96]	; 0xffffffa0
   14e7c:	mov	r0, r2
   14e80:	bl	11610 <flockfile@plt>
   14e84:	movw	r9, #58848	; 0xe5e0
   14e88:	movt	r9, #2
   14e8c:	ldr	r0, [r9, #36]	; 0x24
   14e90:	cmp	r0, #0
   14e94:	bne	153b0 <argp_help@@Base+0x58c>
   14e98:	movw	r0, #52933	; 0xcec5
   14e9c:	movt	r0, #1
   14ea0:	bl	11484 <getenv@plt>
   14ea4:	mov	r8, r0
   14ea8:	mov	r0, #32
   14eac:	mov	r1, r9
   14eb0:	add	r3, r9, #16
   14eb4:	sub	r2, fp, #88	; 0x58
   14eb8:	vld1.64	{d16-d17}, [r1], r0
   14ebc:	vld1.64	{d18-d19}, [r3]
   14ec0:	add	r7, r2, #16
   14ec4:	cmp	r8, #0
   14ec8:	vldr	d20, [r1]
   14ecc:	mov	r1, r2
   14ed0:	vst1.64	{d16-d17}, [r1], r0
   14ed4:	vst1.64	{d18-d19}, [r7]
   14ed8:	vstr	d20, [r1]
   14edc:	beq	153b0 <argp_help@@Base+0x58c>
   14ee0:	ldrb	r5, [r8]
   14ee4:	str	r7, [fp, #-116]	; 0xffffff8c
   14ee8:	str	r3, [fp, #-112]	; 0xffffff90
   14eec:	str	r4, [fp, #-132]	; 0xffffff7c
   14ef0:	cmp	r5, #0
   14ef4:	beq	152c0 <argp_help@@Base+0x49c>
   14ef8:	movw	r7, #53600	; 0xd160
   14efc:	movt	r7, #1
   14f00:	bl	114d8 <__ctype_b_loc@plt>
   14f04:	str	r0, [fp, #-104]	; 0xffffff98
   14f08:	b	14f3c <argp_help@@Base+0x118>
   14f0c:	ldrb	r0, [r6, #15]
   14f10:	sub	r1, fp, #88	; 0x58
   14f14:	str	r5, [r1, r0]
   14f18:	mov	r8, r4
   14f1c:	movw	r9, #58848	; 0xe5e0
   14f20:	ldrb	r0, [r8], #1
   14f24:	movt	r9, #2
   14f28:	cmp	r0, #44	; 0x2c
   14f2c:	movne	r8, r4
   14f30:	ldrb	r5, [r8]
   14f34:	cmp	r5, #0
   14f38:	beq	152c0 <argp_help@@Base+0x49c>
   14f3c:	ldr	r0, [fp, #-104]	; 0xffffff98
   14f40:	uxtb	r1, r5
   14f44:	ldr	r0, [r0]
   14f48:	add	r1, r0, r1, lsl #1
   14f4c:	ldrh	r1, [r1]
   14f50:	tst	r1, #8192	; 0x2000
   14f54:	beq	14f64 <argp_help@@Base+0x140>
   14f58:	ldrb	r5, [r8, #1]!
   14f5c:	add	r1, r0, r5, lsl #1
   14f60:	b	14f4c <argp_help@@Base+0x128>
   14f64:	tst	r1, #1024	; 0x400
   14f68:	beq	15294 <argp_help@@Base+0x470>
   14f6c:	mov	r3, r5
   14f70:	mov	r2, r8
   14f74:	b	14f7c <argp_help@@Base+0x158>
   14f78:	ldrb	r3, [r2, #1]!
   14f7c:	uxtb	r6, r3
   14f80:	add	r1, r0, r6, lsl #1
   14f84:	ldrh	r1, [r1]
   14f88:	tst	r1, #8
   14f8c:	bne	14f78 <argp_help@@Base+0x154>
   14f90:	cmp	r6, #95	; 0x5f
   14f94:	cmpne	r6, #45	; 0x2d
   14f98:	beq	14f78 <argp_help@@Base+0x154>
   14f9c:	tst	r1, #8192	; 0x2000
   14fa0:	mov	r4, r2
   14fa4:	beq	14fc0 <argp_help@@Base+0x19c>
   14fa8:	mov	r4, r2
   14fac:	ldrb	r3, [r4, #1]!
   14fb0:	add	r1, r0, r3, lsl #1
   14fb4:	ldrh	r1, [r1]
   14fb8:	tst	r1, #8192	; 0x2000
   14fbc:	bne	14fac <argp_help@@Base+0x188>
   14fc0:	sub	r9, r2, r8
   14fc4:	uxtb	r2, r3
   14fc8:	cmp	r2, #0
   14fcc:	cmpne	r2, #44	; 0x2c
   14fd0:	bne	15020 <argp_help@@Base+0x1fc>
   14fd4:	uxtb	r0, r5
   14fd8:	mov	sl, #1
   14fdc:	cmp	r0, #110	; 0x6e
   14fe0:	bne	15018 <argp_help@@Base+0x1f4>
   14fe4:	ldrb	r0, [r8, #1]
   14fe8:	mov	sl, #1
   14fec:	cmp	r0, #111	; 0x6f
   14ff0:	bne	15018 <argp_help@@Base+0x1f4>
   14ff4:	ldrb	r0, [r8, #2]
   14ff8:	mov	sl, #1
   14ffc:	cmp	r0, #45	; 0x2d
   15000:	bne	15018 <argp_help@@Base+0x1f4>
   15004:	sub	r9, r9, #3
   15008:	add	r8, r8, #3
   1500c:	mov	r5, #0
   15010:	mov	sl, #1
   15014:	b	150a4 <argp_help@@Base+0x280>
   15018:	mov	r5, #1
   1501c:	b	150a4 <argp_help@@Base+0x280>
   15020:	cmp	r2, #61	; 0x3d
   15024:	bne	1503c <argp_help@@Base+0x218>
   15028:	ldrb	r1, [r4, #1]!
   1502c:	add	r1, r0, r1, lsl #1
   15030:	ldrh	r1, [r1]
   15034:	tst	r1, #8192	; 0x2000
   15038:	bne	15028 <argp_help@@Base+0x204>
   1503c:	mov	sl, #0
   15040:	tst	r1, #2048	; 0x800
   15044:	bne	15050 <argp_help@@Base+0x22c>
   15048:	mov	r5, #0
   1504c:	b	150a4 <argp_help@@Base+0x280>
   15050:	mov	r0, r4
   15054:	mov	r1, #0
   15058:	mov	r2, #10
   1505c:	bl	1134c <strtol@plt>
   15060:	mov	r5, r0
   15064:	ldr	r0, [fp, #-104]	; 0xffffff98
   15068:	sub	r4, r4, #1
   1506c:	ldr	r0, [r0]
   15070:	ldrb	r1, [r4, #1]!
   15074:	add	r1, r0, r1, lsl #1
   15078:	ldrh	r1, [r1]
   1507c:	tst	r1, #2048	; 0x800
   15080:	bne	15070 <argp_help@@Base+0x24c>
   15084:	mov	sl, #0
   15088:	tst	r1, #8192	; 0x2000
   1508c:	beq	150a4 <argp_help@@Base+0x280>
   15090:	ldrb	r1, [r4, #1]!
   15094:	add	r1, r0, r1, lsl #1
   15098:	ldrb	r1, [r1, #1]
   1509c:	tst	r1, #32
   150a0:	bne	15090 <argp_help@@Base+0x26c>
   150a4:	mov	r0, r7
   150a8:	bl	11514 <strlen@plt>
   150ac:	cmp	r0, r9
   150b0:	bne	150d0 <argp_help@@Base+0x2ac>
   150b4:	mov	r0, r8
   150b8:	mov	r1, r7
   150bc:	mov	r2, r9
   150c0:	bl	11658 <strncmp@plt>
   150c4:	cmp	r0, #0
   150c8:	mov	r6, r7
   150cc:	beq	15254 <argp_help@@Base+0x430>
   150d0:	add	r6, r7, #16
   150d4:	mov	r0, r6
   150d8:	bl	11514 <strlen@plt>
   150dc:	cmp	r0, r9
   150e0:	bne	150fc <argp_help@@Base+0x2d8>
   150e4:	mov	r0, r8
   150e8:	mov	r1, r6
   150ec:	mov	r2, r9
   150f0:	bl	11658 <strncmp@plt>
   150f4:	cmp	r0, #0
   150f8:	beq	15254 <argp_help@@Base+0x430>
   150fc:	add	r6, r7, #32
   15100:	mov	r0, r6
   15104:	bl	11514 <strlen@plt>
   15108:	cmp	r0, r9
   1510c:	bne	15128 <argp_help@@Base+0x304>
   15110:	mov	r0, r8
   15114:	mov	r1, r6
   15118:	mov	r2, r9
   1511c:	bl	11658 <strncmp@plt>
   15120:	cmp	r0, #0
   15124:	beq	15254 <argp_help@@Base+0x430>
   15128:	add	r6, r7, #48	; 0x30
   1512c:	mov	r0, r6
   15130:	bl	11514 <strlen@plt>
   15134:	cmp	r0, r9
   15138:	bne	15154 <argp_help@@Base+0x330>
   1513c:	mov	r0, r8
   15140:	mov	r1, r6
   15144:	mov	r2, r9
   15148:	bl	11658 <strncmp@plt>
   1514c:	cmp	r0, #0
   15150:	beq	15254 <argp_help@@Base+0x430>
   15154:	add	r6, r7, #64	; 0x40
   15158:	mov	r0, r6
   1515c:	bl	11514 <strlen@plt>
   15160:	cmp	r0, r9
   15164:	bne	15180 <argp_help@@Base+0x35c>
   15168:	mov	r0, r8
   1516c:	mov	r1, r6
   15170:	mov	r2, r9
   15174:	bl	11658 <strncmp@plt>
   15178:	cmp	r0, #0
   1517c:	beq	15254 <argp_help@@Base+0x430>
   15180:	add	r6, r7, #80	; 0x50
   15184:	mov	r0, r6
   15188:	bl	11514 <strlen@plt>
   1518c:	cmp	r0, r9
   15190:	bne	151ac <argp_help@@Base+0x388>
   15194:	mov	r0, r8
   15198:	mov	r1, r6
   1519c:	mov	r2, r9
   151a0:	bl	11658 <strncmp@plt>
   151a4:	cmp	r0, #0
   151a8:	beq	15254 <argp_help@@Base+0x430>
   151ac:	add	r6, r7, #96	; 0x60
   151b0:	mov	r0, r6
   151b4:	bl	11514 <strlen@plt>
   151b8:	cmp	r0, r9
   151bc:	bne	151d8 <argp_help@@Base+0x3b4>
   151c0:	mov	r0, r8
   151c4:	mov	r1, r6
   151c8:	mov	r2, r9
   151cc:	bl	11658 <strncmp@plt>
   151d0:	cmp	r0, #0
   151d4:	beq	15254 <argp_help@@Base+0x430>
   151d8:	add	r6, r7, #112	; 0x70
   151dc:	mov	r0, r6
   151e0:	bl	11514 <strlen@plt>
   151e4:	cmp	r0, r9
   151e8:	bne	15204 <argp_help@@Base+0x3e0>
   151ec:	mov	r0, r8
   151f0:	mov	r1, r6
   151f4:	mov	r2, r9
   151f8:	bl	11658 <strncmp@plt>
   151fc:	cmp	r0, #0
   15200:	beq	15254 <argp_help@@Base+0x430>
   15204:	add	r6, r7, #128	; 0x80
   15208:	mov	r0, r6
   1520c:	bl	11514 <strlen@plt>
   15210:	cmp	r0, r9
   15214:	bne	15230 <argp_help@@Base+0x40c>
   15218:	mov	r0, r8
   1521c:	mov	r1, r6
   15220:	mov	r2, r9
   15224:	bl	11658 <strncmp@plt>
   15228:	cmp	r0, #0
   1522c:	beq	15254 <argp_help@@Base+0x430>
   15230:	sub	sp, sp, #8
   15234:	str	r9, [sp]
   15238:	str	r8, [sp, #4]
   1523c:	movw	r3, #52994	; 0xcf02
   15240:	mov	r1, #0
   15244:	mov	r2, #0
   15248:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1524c:	movt	r3, #1
   15250:	b	15288 <argp_help@@Base+0x464>
   15254:	cmp	sl, #0
   15258:	beq	14f0c <argp_help@@Base+0xe8>
   1525c:	ldrb	r0, [r6, #14]
   15260:	cmp	r0, #0
   15264:	bne	14f0c <argp_help@@Base+0xe8>
   15268:	sub	sp, sp, #8
   1526c:	str	r9, [sp]
   15270:	str	r8, [sp, #4]
   15274:	movw	r3, #52947	; 0xced3
   15278:	mov	r1, #0
   1527c:	mov	r2, #0
   15280:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15284:	movt	r3, #1
   15288:	bl	16564 <argp_failure@@Base>
   1528c:	add	sp, sp, #8
   15290:	b	14f18 <argp_help@@Base+0xf4>
   15294:	tst	r5, #255	; 0xff
   15298:	beq	152c0 <argp_help@@Base+0x49c>
   1529c:	sub	sp, sp, #8
   152a0:	str	r8, [sp]
   152a4:	movw	r3, #53032	; 0xcf28
   152a8:	mov	r1, #0
   152ac:	mov	r2, #0
   152b0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   152b4:	movt	r3, #1
   152b8:	bl	16564 <argp_failure@@Base>
   152bc:	add	sp, sp, #8
   152c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   152c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   152c8:	movw	r0, #53600	; 0xd160
   152cc:	movt	r0, #1
   152d0:	cmp	r2, r1
   152d4:	bge	15358 <argp_help@@Base+0x534>
   152d8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   152dc:	cmp	r2, r1
   152e0:	bge	15360 <argp_help@@Base+0x53c>
   152e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   152e8:	cmp	r2, r1
   152ec:	bge	15368 <argp_help@@Base+0x544>
   152f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   152f4:	cmp	r2, r1
   152f8:	bge	15370 <argp_help@@Base+0x54c>
   152fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15300:	cmp	r2, r1
   15304:	bge	15378 <argp_help@@Base+0x554>
   15308:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1530c:	ldr	r4, [fp, #-132]	; 0xffffff7c
   15310:	cmp	r2, r1
   15314:	bge	1635c <argp_help@@Base+0x1538>
   15318:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1531c:	sub	r1, fp, #88	; 0x58
   15320:	mov	r2, r1
   15324:	mov	r1, r9
   15328:	vld1.64	{d16-d17}, [r0]
   1532c:	mov	r0, #32
   15330:	vld1.64	{d18-d19}, [r2], r0
   15334:	ldr	r0, [fp, #-112]	; 0xffffff90
   15338:	vst1.64	{d16-d17}, [r0]
   1533c:	mov	r0, #36	; 0x24
   15340:	vst1.64	{d18-d19}, [r1], r0
   15344:	mov	r0, #1
   15348:	str	r0, [r1]
   1534c:	ldr	r0, [r2]
   15350:	str	r0, [r9, #32]
   15354:	b	153b0 <argp_help@@Base+0x58c>
   15358:	add	r0, r0, #32
   1535c:	b	1537c <argp_help@@Base+0x558>
   15360:	add	r0, r0, #48	; 0x30
   15364:	b	1537c <argp_help@@Base+0x558>
   15368:	add	r0, r0, #64	; 0x40
   1536c:	b	1537c <argp_help@@Base+0x558>
   15370:	add	r0, r0, #80	; 0x50
   15374:	b	1537c <argp_help@@Base+0x558>
   15378:	add	r0, r0, #96	; 0x60
   1537c:	ldr	r4, [fp, #-132]	; 0xffffff7c
   15380:	sub	sp, sp, #8
   15384:	movw	r1, #53113	; 0xcf79
   15388:	str	r0, [sp, #4]
   1538c:	movw	r3, #53061	; 0xcf45
   15390:	mov	r2, #0
   15394:	movt	r1, #1
   15398:	movt	r3, #1
   1539c:	str	r1, [sp]
   153a0:	mov	r1, #0
   153a4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   153a8:	bl	16564 <argp_failure@@Base>
   153ac:	add	sp, sp, #8
   153b0:	ldr	r2, [r9, #32]
   153b4:	mov	r0, r4
   153b8:	mov	r1, #0
   153bc:	mov	r3, #0
   153c0:	mov	r5, #0
   153c4:	bl	1a4a4 <argp_parse@@Base+0x2078>
   153c8:	cmp	r0, #0
   153cc:	beq	1579c <argp_help@@Base+0x978>
   153d0:	mov	sl, r0
   153d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   153d8:	str	r4, [fp, #-132]	; 0xffffff7c
   153dc:	tst	r0, #11
   153e0:	beq	15588 <argp_help@@Base+0x764>
   153e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   153e8:	mov	r1, #0
   153ec:	bl	16758 <argp_failure@@Base+0x1f4>
   153f0:	ldr	r9, [r0, #4]
   153f4:	mov	r5, r0
   153f8:	cmp	r9, #0
   153fc:	beq	15580 <argp_help@@Base+0x75c>
   15400:	ldr	r4, [r5]
   15404:	movw	r7, #52833	; 0xce61
   15408:	str	r5, [fp, #-112]	; 0xffffff90
   1540c:	mov	r5, r9
   15410:	movt	r7, #1
   15414:	str	r4, [fp, #-104]	; 0xffffff98
   15418:	b	15428 <argp_help@@Base+0x604>
   1541c:	subs	r5, r5, #1
   15420:	add	r4, r4, #28
   15424:	beq	15480 <argp_help@@Base+0x65c>
   15428:	ldr	r6, [r4, #4]
   1542c:	cmp	r6, #0
   15430:	beq	1541c <argp_help@@Base+0x5f8>
   15434:	ldr	r0, [r4]
   15438:	add	r8, r0, #12
   1543c:	b	1544c <argp_help@@Base+0x628>
   15440:	subs	r6, r6, #1
   15444:	add	r8, r8, #24
   15448:	beq	1541c <argp_help@@Base+0x5f8>
   1544c:	ldr	r0, [r8, #-12]
   15450:	cmp	r0, #0
   15454:	beq	15440 <argp_help@@Base+0x61c>
   15458:	ldrb	r1, [r8]
   1545c:	tst	r1, #2
   15460:	bne	15440 <argp_help@@Base+0x61c>
   15464:	mov	r1, r7
   15468:	bl	11340 <strcmp@plt>
   1546c:	cmp	r0, #0
   15470:	bne	15440 <argp_help@@Base+0x61c>
   15474:	cmp	r4, #0
   15478:	mvnne	r0, #0
   1547c:	strne	r0, [r4, #12]
   15480:	ldr	r4, [fp, #-104]	; 0xffffff98
   15484:	movw	r8, #54184	; 0xd3a8
   15488:	mov	r5, r9
   1548c:	movt	r8, #1
   15490:	b	154a0 <argp_help@@Base+0x67c>
   15494:	subs	r5, r5, #1
   15498:	add	r4, r4, #28
   1549c:	beq	154f8 <argp_help@@Base+0x6d4>
   154a0:	ldr	r6, [r4, #4]
   154a4:	cmp	r6, #0
   154a8:	beq	15494 <argp_help@@Base+0x670>
   154ac:	ldr	r0, [r4]
   154b0:	add	r7, r0, #12
   154b4:	b	154c4 <argp_help@@Base+0x6a0>
   154b8:	subs	r6, r6, #1
   154bc:	add	r7, r7, #24
   154c0:	beq	15494 <argp_help@@Base+0x670>
   154c4:	ldr	r0, [r7, #-12]
   154c8:	cmp	r0, #0
   154cc:	beq	154b8 <argp_help@@Base+0x694>
   154d0:	ldrb	r1, [r7]
   154d4:	tst	r1, #2
   154d8:	bne	154b8 <argp_help@@Base+0x694>
   154dc:	mov	r1, r8
   154e0:	bl	11340 <strcmp@plt>
   154e4:	cmp	r0, #0
   154e8:	bne	154b8 <argp_help@@Base+0x694>
   154ec:	cmp	r4, #0
   154f0:	mvnne	r0, #0
   154f4:	strne	r0, [r4, #12]
   154f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   154fc:	ldr	r5, [fp, #-112]	; 0xffffff90
   15500:	sub	r2, r9, #1
   15504:	and	r6, r9, #3
   15508:	mov	r1, #0
   1550c:	cmp	r2, #3
   15510:	mov	r2, r0
   15514:	bcc	15550 <argp_help@@Base+0x72c>
   15518:	sub	r3, r9, r6
   1551c:	mov	r1, #0
   15520:	mov	r2, r0
   15524:	add	r7, r1, #3
   15528:	str	r1, [r2, #24]
   1552c:	str	r7, [r2, #108]	; 0x6c
   15530:	add	r7, r1, #2
   15534:	str	r7, [r2, #80]	; 0x50
   15538:	add	r7, r1, #1
   1553c:	add	r1, r1, #4
   15540:	str	r7, [r2, #52]	; 0x34
   15544:	add	r2, r2, #112	; 0x70
   15548:	cmp	r3, r1
   1554c:	bne	15524 <argp_help@@Base+0x700>
   15550:	cmp	r6, #0
   15554:	beq	1556c <argp_help@@Base+0x748>
   15558:	add	r2, r2, #24
   1555c:	str	r1, [r2], #28
   15560:	subs	r6, r6, #1
   15564:	add	r1, r1, #1
   15568:	bne	1555c <argp_help@@Base+0x738>
   1556c:	movw	r3, #31204	; 0x79e4
   15570:	mov	r1, r9
   15574:	mov	r2, #28
   15578:	movt	r3, #1
   1557c:	bl	11628 <qsort@plt>
   15580:	movw	r9, #58848	; 0xe5e0
   15584:	movt	r9, #2
   15588:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1558c:	str	r5, [fp, #-112]	; 0xffffff90
   15590:	tst	r0, #3
   15594:	beq	157ac <argp_help@@Base+0x988>
   15598:	ldr	r0, [fp, #-108]	; 0xffffff94
   1559c:	bl	16e18 <argp_failure@@Base+0x8b4>
   155a0:	mov	r2, r0
   155a4:	add	r0, r0, #7
   155a8:	bic	r0, r0, #7
   155ac:	sub	r5, sp, r0
   155b0:	mov	sp, r5
   155b4:	mov	r0, r5
   155b8:	mov	r1, #0
   155bc:	bl	11568 <memset@plt>
   155c0:	movw	r7, #52844	; 0xce6c
   155c4:	movw	r6, #52851	; 0xce73
   155c8:	movt	r7, #1
   155cc:	movt	r6, #1
   155d0:	b	155f4 <argp_help@@Base+0x7d0>
   155d4:	add	r1, r0, #1
   155d8:	str	r1, [sl, #28]
   155dc:	mov	r1, #10
   155e0:	strb	r1, [r0]
   155e4:	cmp	r7, #0
   155e8:	mov	r7, r6
   155ec:	str	r4, [fp, #-92]	; 0xffffffa4
   155f0:	beq	15794 <argp_help@@Base+0x970>
   155f4:	ldr	r1, [sl, #24]
   155f8:	ldr	r2, [sl, #28]
   155fc:	ldr	r0, [sl, #16]
   15600:	ldr	r4, [r9, #28]
   15604:	sub	r1, r2, r1
   15608:	cmp	r1, r0
   1560c:	bls	15618 <argp_help@@Base+0x7f4>
   15610:	mov	r0, sl
   15614:	bl	1a570 <argp_parse@@Base+0x2144>
   15618:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1561c:	movw	r1, #52838	; 0xce66
   15620:	ldr	r9, [sl, #12]
   15624:	mov	r0, sl
   15628:	mov	r2, r7
   1562c:	str	r4, [sl, #12]
   15630:	str	r5, [fp, #-88]	; 0xffffffa8
   15634:	movt	r1, #1
   15638:	bl	1ab8c <argp_parse@@Base+0x2760>
   1563c:	movw	r0, #58848	; 0xe5e0
   15640:	ldr	r1, [sl, #24]
   15644:	ldr	r2, [sl, #28]
   15648:	movt	r0, #2
   1564c:	ldr	r4, [r0, #28]
   15650:	ldr	r0, [sl, #16]
   15654:	sub	r1, r2, r1
   15658:	cmp	r1, r0
   1565c:	bls	15668 <argp_help@@Base+0x844>
   15660:	mov	r0, sl
   15664:	bl	1a570 <argp_parse@@Base+0x2144>
   15668:	ldr	r8, [sl, #4]
   1566c:	str	r4, [sl, #4]
   15670:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15674:	tst	r4, #2
   15678:	bne	15690 <argp_help@@Base+0x86c>
   1567c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15680:	mov	r1, sl
   15684:	bl	16e8c <argp_failure@@Base+0x928>
   15688:	orr	r4, r4, #2
   1568c:	b	156f4 <argp_help@@Base+0x8d0>
   15690:	ldr	r0, [fp, #-112]	; 0xffffff90
   15694:	ldr	r0, [r0, #4]
   15698:	cmp	r0, #0
   1569c:	beq	156f4 <argp_help@@Base+0x8d0>
   156a0:	ldr	r0, [sl, #28]
   156a4:	ldr	r1, [sl, #32]
   156a8:	add	r2, r0, #12
   156ac:	cmp	r2, r1
   156b0:	bls	156cc <argp_help@@Base+0x8a8>
   156b4:	mov	r0, sl
   156b8:	mov	r1, #12
   156bc:	bl	1aaa0 <argp_parse@@Base+0x2674>
   156c0:	cmp	r0, #0
   156c4:	beq	156f4 <argp_help@@Base+0x8d0>
   156c8:	ldr	r0, [sl, #28]
   156cc:	movw	r1, #53584	; 0xd150
   156d0:	movt	r1, #1
   156d4:	vldr	d16, [r1]
   156d8:	movw	r1, #11822	; 0x2e2e
   156dc:	movt	r1, #23854	; 0x5d2e
   156e0:	str	r1, [r0, #8]
   156e4:	vst1.8	{d16}, [r0]
   156e8:	ldr	r0, [sl, #28]
   156ec:	add	r0, r0, #12
   156f0:	str	r0, [sl, #28]
   156f4:	sub	sp, sp, #8
   156f8:	str	sl, [sp]
   156fc:	sub	r2, fp, #88	; 0x58
   15700:	mov	r3, #1
   15704:	ldr	r0, [fp, #-108]	; 0xffffff94
   15708:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1570c:	bl	1725c <argp_failure@@Base+0xcf8>
   15710:	add	sp, sp, #8
   15714:	mov	r7, r0
   15718:	ldr	r2, [sl, #24]
   1571c:	ldr	r0, [sl, #28]
   15720:	ldr	r1, [sl, #16]
   15724:	sub	r2, r0, r2
   15728:	cmp	r2, r1
   1572c:	bls	15748 <argp_help@@Base+0x924>
   15730:	mov	r0, sl
   15734:	bl	1a570 <argp_parse@@Base+0x2144>
   15738:	ldr	r2, [sl, #24]
   1573c:	ldr	r0, [sl, #28]
   15740:	ldr	r1, [sl, #16]
   15744:	sub	r2, r0, r2
   15748:	cmp	r2, r1
   1574c:	str	r9, [sl, #12]
   15750:	bls	15760 <argp_help@@Base+0x93c>
   15754:	mov	r0, sl
   15758:	bl	1a570 <argp_parse@@Base+0x2144>
   1575c:	ldr	r0, [sl, #28]
   15760:	str	r8, [sl, #4]
   15764:	movw	r9, #58848	; 0xe5e0
   15768:	ldr	r1, [sl, #32]
   1576c:	movt	r9, #2
   15770:	cmp	r0, r1
   15774:	bcc	155d4 <argp_help@@Base+0x7b0>
   15778:	mov	r0, sl
   1577c:	mov	r1, #1
   15780:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15784:	cmp	r0, #0
   15788:	beq	155e4 <argp_help@@Base+0x7c0>
   1578c:	ldr	r0, [sl, #28]
   15790:	b	155d4 <argp_help@@Base+0x7b0>
   15794:	mov	r5, #1
   15798:	b	157b0 <argp_help@@Base+0x98c>
   1579c:	mov	r0, r4
   157a0:	sub	sp, fp, #28
   157a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157a8:	b	11454 <funlockfile@plt>
   157ac:	mov	r5, #0
   157b0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   157b4:	tst	r4, #16
   157b8:	bne	157d0 <argp_help@@Base+0x9ac>
   157bc:	tst	r4, #4
   157c0:	bne	15800 <argp_help@@Base+0x9dc>
   157c4:	tst	r4, #8
   157c8:	bne	15824 <argp_help@@Base+0xa00>
   157cc:	b	160ec <argp_help@@Base+0x12c8>
   157d0:	sub	sp, sp, #8
   157d4:	mov	r0, #1
   157d8:	mov	r2, #0
   157dc:	mov	r3, #0
   157e0:	stm	sp, {r0, sl}
   157e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   157e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   157ec:	bl	17554 <argp_failure@@Base+0xff0>
   157f0:	add	sp, sp, #8
   157f4:	orr	r5, r0, r5
   157f8:	tst	r4, #4
   157fc:	beq	157c4 <argp_help@@Base+0x9a0>
   15800:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15804:	movw	r1, #52858	; 0xce7a
   15808:	mov	r0, sl
   1580c:	movt	r1, #1
   15810:	mov	r3, r2
   15814:	bl	1ab8c <argp_parse@@Base+0x2760>
   15818:	mov	r5, #1
   1581c:	tst	r4, #8
   15820:	beq	160ec <argp_help@@Base+0x12c8>
   15824:	ldr	r0, [fp, #-112]	; 0xffffff90
   15828:	ldr	r1, [r0, #4]
   1582c:	cmp	r1, #0
   15830:	beq	160ec <argp_help@@Base+0x12c8>
   15834:	cmp	r5, #0
   15838:	beq	15898 <argp_help@@Base+0xa74>
   1583c:	ldr	r0, [sl, #28]
   15840:	ldr	r1, [sl, #32]
   15844:	ldr	r5, [fp, #-112]	; 0xffffff90
   15848:	cmp	r0, r1
   1584c:	bcc	15868 <argp_help@@Base+0xa44>
   15850:	mov	r0, sl
   15854:	mov	r1, #1
   15858:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1585c:	cmp	r0, #0
   15860:	beq	15878 <argp_help@@Base+0xa54>
   15864:	ldr	r0, [sl, #28]
   15868:	add	r1, r0, #1
   1586c:	str	r1, [sl, #28]
   15870:	mov	r1, #10
   15874:	strb	r1, [r0]
   15878:	ldr	r1, [r5, #4]
   1587c:	mov	r0, #0
   15880:	str	r0, [fp, #-44]	; 0xffffffd4
   15884:	str	r0, [fp, #-48]	; 0xffffffd0
   15888:	str	r0, [fp, #-40]	; 0xffffffd8
   1588c:	cmp	r1, #0
   15890:	bne	158a8 <argp_help@@Base+0xa84>
   15894:	b	160e8 <argp_help@@Base+0x12c4>
   15898:	mov	r0, #0
   1589c:	str	r0, [fp, #-44]	; 0xffffffd4
   158a0:	str	r0, [fp, #-48]	; 0xffffffd0
   158a4:	str	r0, [fp, #-40]	; 0xffffffd8
   158a8:	add	r0, sl, #28
   158ac:	str	r0, [fp, #-96]	; 0xffffffa0
   158b0:	ldr	r0, [fp, #-112]	; 0xffffff90
   158b4:	str	r4, [fp, #-92]	; 0xffffffa4
   158b8:	ldr	r5, [r0]
   158bc:	b	158d8 <argp_help@@Base+0xab4>
   158c0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   158c4:	ldr	r0, [fp, #-120]	; 0xffffff88
   158c8:	add	r5, r5, #28
   158cc:	subs	r1, r1, #1
   158d0:	str	r0, [sl, #12]
   158d4:	beq	160d4 <argp_help@@Base+0x12b0>
   158d8:	str	r1, [fp, #-116]	; 0xffffff8c
   158dc:	ldr	r1, [sl, #24]
   158e0:	ldr	r2, [sl, #28]
   158e4:	ldr	r0, [sl, #16]
   158e8:	ldr	r8, [r5]
   158ec:	mov	r4, r5
   158f0:	ldr	r5, [r5, #8]
   158f4:	sub	r1, r2, r1
   158f8:	cmp	r1, r0
   158fc:	bls	15908 <argp_help@@Base+0xae4>
   15900:	mov	r0, sl
   15904:	bl	1a570 <argp_parse@@Base+0x2144>
   15908:	mov	r0, #0
   1590c:	mov	r3, #0
   15910:	ldr	r2, [sl, #4]
   15914:	ldr	r1, [sl, #12]
   15918:	str	r0, [fp, #-128]	; 0xffffff80
   1591c:	str	r3, [sl, #4]
   15920:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15924:	str	r4, [fp, #-104]	; 0xffffff98
   15928:	str	r1, [fp, #-120]	; 0xffffff88
   1592c:	str	r2, [fp, #-124]	; 0xffffff84
   15930:	str	r0, [fp, #-72]	; 0xffffffb8
   15934:	mov	r0, #1
   15938:	str	r0, [fp, #-76]	; 0xffffffb4
   1593c:	sub	r0, fp, #48	; 0x30
   15940:	str	r0, [fp, #-80]	; 0xffffffb0
   15944:	str	sl, [fp, #-84]	; 0xffffffac
   15948:	str	r4, [fp, #-88]	; 0xffffffa8
   1594c:	ldrb	r0, [r8, #12]
   15950:	tst	r0, #8
   15954:	bne	15998 <argp_help@@Base+0xb74>
   15958:	ldr	r0, [r4, #4]
   1595c:	cmp	r0, #0
   15960:	beq	15998 <argp_help@@Base+0xb74>
   15964:	add	r1, r8, #12
   15968:	b	15978 <argp_help@@Base+0xb54>
   1596c:	add	r1, r1, #24
   15970:	subs	r0, r0, #1
   15974:	beq	15998 <argp_help@@Base+0xb74>
   15978:	ldr	r2, [r1, #-12]
   1597c:	cmp	r2, #0
   15980:	beq	1596c <argp_help@@Base+0xb48>
   15984:	ldrb	r2, [r1]
   15988:	tst	r2, #2
   1598c:	bne	1596c <argp_help@@Base+0xb48>
   15990:	mov	r0, #1
   15994:	str	r0, [fp, #-128]	; 0xffffff80
   15998:	ldr	r1, [sl, #24]
   1599c:	ldr	r2, [sl, #28]
   159a0:	ldr	r0, [sl, #16]
   159a4:	ldr	r4, [r9, #8]
   159a8:	sub	r1, r2, r1
   159ac:	cmp	r1, r0
   159b0:	bls	159bc <argp_help@@Base+0xb98>
   159b4:	mov	r0, sl
   159b8:	bl	1a570 <argp_parse@@Base+0x2144>
   159bc:	ldr	r0, [fp, #-104]	; 0xffffff98
   159c0:	str	r4, [sl, #12]
   159c4:	ldr	r7, [r0, #4]
   159c8:	cmp	r7, #0
   159cc:	beq	15b30 <argp_help@@Base+0xd0c>
   159d0:	add	r9, r8, #12
   159d4:	b	159f4 <argp_help@@Base+0xbd0>
   159d8:	cmp	r2, #0
   159dc:	movne	r0, #1
   159e0:	strne	r0, [fp, #-40]	; 0xffffffd8
   159e4:	add	r5, r5, #1
   159e8:	add	r9, r9, #24
   159ec:	subs	r7, r7, #1
   159f0:	beq	15b30 <argp_help@@Base+0xd0c>
   159f4:	ldr	r4, [r9]
   159f8:	tst	r4, #8
   159fc:	bne	159e8 <argp_help@@Base+0xbc4>
   15a00:	ldr	r6, [r9, #-8]
   15a04:	sub	r0, r6, #1
   15a08:	cmp	r0, #254	; 0xfe
   15a0c:	bhi	159e8 <argp_help@@Base+0xbc4>
   15a10:	bl	114d8 <__ctype_b_loc@plt>
   15a14:	ldr	r0, [r0]
   15a18:	add	r0, r0, r6, lsl #1
   15a1c:	ldrb	r0, [r0, #1]
   15a20:	tst	r0, #64	; 0x40
   15a24:	beq	159e8 <argp_help@@Base+0xbc4>
   15a28:	ldrb	r0, [r5]
   15a2c:	cmp	r6, r0
   15a30:	bne	159e8 <argp_help@@Base+0xbc4>
   15a34:	tst	r4, #2
   15a38:	bne	159e4 <argp_help@@Base+0xbc0>
   15a3c:	movw	r0, #58848	; 0xe5e0
   15a40:	sub	r1, fp, #88	; 0x58
   15a44:	movt	r0, #2
   15a48:	ldr	r0, [r0, #8]
   15a4c:	bl	17f74 <argp_failure@@Base+0x1a10>
   15a50:	ldr	r0, [sl, #28]
   15a54:	ldr	r1, [sl, #32]
   15a58:	cmp	r0, r1
   15a5c:	bcc	15a7c <argp_help@@Base+0xc58>
   15a60:	mov	r0, sl
   15a64:	mov	r1, #1
   15a68:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15a6c:	cmp	r0, #0
   15a70:	beq	15a90 <argp_help@@Base+0xc6c>
   15a74:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15a78:	ldr	r0, [r0]
   15a7c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15a80:	add	r1, r0, #1
   15a84:	str	r1, [r2]
   15a88:	mov	r1, #45	; 0x2d
   15a8c:	strb	r1, [r0]
   15a90:	ldr	r0, [sl, #28]
   15a94:	ldr	r1, [sl, #32]
   15a98:	ldrb	r4, [r5]
   15a9c:	cmp	r0, r1
   15aa0:	bcc	15ac0 <argp_help@@Base+0xc9c>
   15aa4:	mov	r0, sl
   15aa8:	mov	r1, #1
   15aac:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15ab0:	cmp	r0, #0
   15ab4:	beq	15ad0 <argp_help@@Base+0xcac>
   15ab8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15abc:	ldr	r0, [r0]
   15ac0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15ac4:	add	r1, r0, #1
   15ac8:	str	r1, [r2]
   15acc:	strb	r4, [r0]
   15ad0:	ldr	r0, [fp, #-128]	; 0xffffff80
   15ad4:	ldr	r2, [r8, #8]
   15ad8:	cmp	r0, #0
   15adc:	beq	15af4 <argp_help@@Base+0xcd0>
   15ae0:	movw	r0, #58848	; 0xe5e0
   15ae4:	movt	r0, #2
   15ae8:	ldr	r0, [r0]
   15aec:	cmp	r0, #0
   15af0:	beq	159d8 <argp_help@@Base+0xbb4>
   15af4:	cmp	r2, #0
   15af8:	beq	159e4 <argp_help@@Base+0xbc0>
   15afc:	ldrb	r0, [r8, #12]
   15b00:	tst	r0, #1
   15b04:	bne	15b1c <argp_help@@Base+0xcf8>
   15b08:	movw	r1, #53057	; 0xcf41
   15b0c:	mov	r0, sl
   15b10:	movt	r1, #1
   15b14:	bl	1ab8c <argp_parse@@Base+0x2760>
   15b18:	b	159e4 <argp_help@@Base+0xbc0>
   15b1c:	movw	r1, #53553	; 0xd131
   15b20:	mov	r0, sl
   15b24:	movt	r1, #1
   15b28:	bl	1ab8c <argp_parse@@Base+0x2760>
   15b2c:	b	159e4 <argp_help@@Base+0xbc0>
   15b30:	ldrb	r0, [r8, #12]
   15b34:	movw	r9, #58848	; 0xe5e0
   15b38:	movt	r9, #2
   15b3c:	tst	r0, #8
   15b40:	bne	15c00 <argp_help@@Base+0xddc>
   15b44:	ldr	r1, [sl, #24]
   15b48:	ldr	r2, [sl, #28]
   15b4c:	ldr	r0, [sl, #16]
   15b50:	ldr	r4, [r9, #12]
   15b54:	sub	r1, r2, r1
   15b58:	cmp	r1, r0
   15b5c:	bls	15b68 <argp_help@@Base+0xd44>
   15b60:	mov	r0, sl
   15b64:	bl	1a570 <argp_parse@@Base+0x2144>
   15b68:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b6c:	str	r4, [sl, #12]
   15b70:	ldr	r4, [r0, #4]
   15b74:	cmp	r4, #0
   15b78:	beq	15cd8 <argp_help@@Base+0xeb4>
   15b7c:	add	r5, r8, #12
   15b80:	b	15ba0 <argp_help@@Base+0xd7c>
   15b84:	movw	r1, #53563	; 0xd13b
   15b88:	mov	r0, sl
   15b8c:	movt	r1, #1
   15b90:	bl	1ab8c <argp_parse@@Base+0x2760>
   15b94:	add	r5, r5, #24
   15b98:	subs	r4, r4, #1
   15b9c:	beq	15cd8 <argp_help@@Base+0xeb4>
   15ba0:	ldr	r0, [r5, #-12]
   15ba4:	cmp	r0, #0
   15ba8:	beq	15b94 <argp_help@@Base+0xd70>
   15bac:	ldrb	r0, [r5]
   15bb0:	tst	r0, #2
   15bb4:	bne	15b94 <argp_help@@Base+0xd70>
   15bb8:	ldr	r0, [r9, #12]
   15bbc:	sub	r1, fp, #88	; 0x58
   15bc0:	bl	17f74 <argp_failure@@Base+0x1a10>
   15bc4:	ldr	r2, [r5, #-12]
   15bc8:	movw	r1, #53558	; 0xd136
   15bcc:	mov	r0, sl
   15bd0:	movt	r1, #1
   15bd4:	bl	1ab8c <argp_parse@@Base+0x2760>
   15bd8:	ldr	r2, [r8, #8]
   15bdc:	cmp	r2, #0
   15be0:	beq	15b94 <argp_help@@Base+0xd70>
   15be4:	ldrb	r0, [r8, #12]
   15be8:	tst	r0, #1
   15bec:	beq	15b84 <argp_help@@Base+0xd60>
   15bf0:	movw	r1, #53567	; 0xd13f
   15bf4:	mov	r0, sl
   15bf8:	movt	r1, #1
   15bfc:	b	15b90 <argp_help@@Base+0xd6c>
   15c00:	ldr	r1, [sl, #24]
   15c04:	ldr	r2, [sl, #28]
   15c08:	ldr	r0, [sl, #16]
   15c0c:	ldr	r4, [r9, #16]
   15c10:	sub	r1, r2, r1
   15c14:	cmp	r1, r0
   15c18:	bls	15c24 <argp_help@@Base+0xe00>
   15c1c:	mov	r0, sl
   15c20:	bl	1a570 <argp_parse@@Base+0x2144>
   15c24:	ldr	r0, [fp, #-104]	; 0xffffff98
   15c28:	str	r4, [sl, #12]
   15c2c:	ldr	r6, [r0, #4]
   15c30:	cmp	r6, #0
   15c34:	beq	15cd8 <argp_help@@Base+0xeb4>
   15c38:	add	r4, r8, #12
   15c3c:	b	15c68 <argp_help@@Base+0xe44>
   15c40:	mov	r1, r5
   15c44:	mov	r2, r7
   15c48:	bl	113d0 <memcpy@plt>
   15c4c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15c50:	ldr	r0, [r1]
   15c54:	add	r0, r0, r7
   15c58:	str	r0, [r1]
   15c5c:	add	r4, r4, #24
   15c60:	subs	r6, r6, #1
   15c64:	beq	15cd8 <argp_help@@Base+0xeb4>
   15c68:	ldr	r0, [r4, #-12]
   15c6c:	cmp	r0, #0
   15c70:	beq	15c5c <argp_help@@Base+0xe38>
   15c74:	ldrb	r0, [r4]
   15c78:	tst	r0, #2
   15c7c:	bne	15c5c <argp_help@@Base+0xe38>
   15c80:	ldr	r0, [r9, #16]
   15c84:	sub	r1, fp, #88	; 0x58
   15c88:	bl	17f74 <argp_failure@@Base+0x1a10>
   15c8c:	ldr	r5, [r4, #-12]
   15c90:	mov	r0, r5
   15c94:	bl	11514 <strlen@plt>
   15c98:	cmp	r0, #0
   15c9c:	beq	15c5c <argp_help@@Base+0xe38>
   15ca0:	mov	r7, r0
   15ca4:	ldr	r0, [sl, #28]
   15ca8:	ldr	r1, [sl, #32]
   15cac:	add	r2, r0, r7
   15cb0:	cmp	r2, r1
   15cb4:	bls	15c40 <argp_help@@Base+0xe1c>
   15cb8:	mov	r0, sl
   15cbc:	mov	r1, r7
   15cc0:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15cc4:	cmp	r0, #0
   15cc8:	beq	15c5c <argp_help@@Base+0xe38>
   15ccc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15cd0:	ldr	r0, [r0]
   15cd4:	b	15c40 <argp_help@@Base+0xe1c>
   15cd8:	ldr	r1, [sl, #24]
   15cdc:	ldr	r2, [sl, #28]
   15ce0:	ldr	r0, [sl, #16]
   15ce4:	sub	r1, r2, r1
   15ce8:	cmp	r1, r0
   15cec:	bls	15cf8 <argp_help@@Base+0xed4>
   15cf0:	mov	r0, sl
   15cf4:	bl	1a570 <argp_parse@@Base+0x2144>
   15cf8:	mov	r0, #0
   15cfc:	ldr	r5, [fp, #-104]	; 0xffffff98
   15d00:	str	r0, [sl, #4]
   15d04:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15d08:	cmp	r0, #0
   15d0c:	beq	15d64 <argp_help@@Base+0xf40>
   15d10:	ldrb	r0, [r8, #12]
   15d14:	tst	r0, #8
   15d18:	bne	15d44 <argp_help@@Base+0xf20>
   15d1c:	ldr	r4, [r8, #4]
   15d20:	sub	r0, r4, #1
   15d24:	cmp	r0, #254	; 0xfe
   15d28:	bhi	15d44 <argp_help@@Base+0xf20>
   15d2c:	bl	114d8 <__ctype_b_loc@plt>
   15d30:	ldr	r0, [r0]
   15d34:	add	r0, r0, r4, lsl #1
   15d38:	ldrb	r0, [r0, #1]
   15d3c:	tst	r0, #64	; 0x40
   15d40:	bne	16084 <argp_help@@Base+0x1260>
   15d44:	ldr	r0, [r8]
   15d48:	cmp	r0, #0
   15d4c:	bne	16084 <argp_help@@Base+0x1260>
   15d50:	ldr	r1, [r5, #20]
   15d54:	ldr	r0, [r8, #16]
   15d58:	sub	r2, fp, #88	; 0x58
   15d5c:	bl	18180 <argp_failure@@Base+0x1c1c>
   15d60:	b	16080 <argp_help@@Base+0x125c>
   15d64:	ldr	r6, [r5, #20]
   15d68:	ldr	r9, [r8, #16]
   15d6c:	cmp	r6, #0
   15d70:	mov	r7, r9
   15d74:	beq	15db0 <argp_help@@Base+0xf8c>
   15d78:	ldr	r0, [r6, #20]
   15d7c:	mov	r7, r9
   15d80:	cmp	r0, #0
   15d84:	beq	15db0 <argp_help@@Base+0xf8c>
   15d88:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15d8c:	ldr	r7, [r8, #4]
   15d90:	mov	r0, r6
   15d94:	bl	19094 <argp_parse@@Base+0xc68>
   15d98:	ldr	r3, [r6, #20]
   15d9c:	mov	r2, r0
   15da0:	mov	r0, r7
   15da4:	mov	r1, r9
   15da8:	blx	r3
   15dac:	mov	r7, r0
   15db0:	cmp	r7, #0
   15db4:	beq	16010 <argp_help@@Base+0x11ec>
   15db8:	ldrb	r0, [r7]
   15dbc:	cmp	r0, #0
   15dc0:	beq	16000 <argp_help@@Base+0x11dc>
   15dc4:	ldr	r1, [sl, #24]
   15dc8:	ldr	r2, [sl, #28]
   15dcc:	ldr	r0, [sl, #16]
   15dd0:	mov	r8, r5
   15dd4:	sub	r1, r2, r1
   15dd8:	cmp	r1, r0
   15ddc:	bls	15df8 <argp_help@@Base+0xfd4>
   15de0:	mov	r0, sl
   15de4:	bl	1a570 <argp_parse@@Base+0x2144>
   15de8:	ldr	r1, [sl, #24]
   15dec:	ldr	r2, [sl, #28]
   15df0:	ldr	r0, [sl, #16]
   15df4:	sub	r1, r2, r1
   15df8:	movw	r2, #58848	; 0xe5e0
   15dfc:	ldr	r5, [sl, #20]
   15e00:	cmp	r1, r0
   15e04:	movt	r2, #2
   15e08:	ldr	r4, [r2, #20]
   15e0c:	mov	r6, r4
   15e10:	bls	15e38 <argp_help@@Base+0x1014>
   15e14:	mov	r0, sl
   15e18:	bl	1a570 <argp_parse@@Base+0x2144>
   15e1c:	movw	r0, #58848	; 0xe5e0
   15e20:	ldr	r1, [sl, #24]
   15e24:	ldr	r2, [sl, #28]
   15e28:	movt	r0, #2
   15e2c:	ldr	r6, [r0, #20]
   15e30:	ldr	r0, [sl, #16]
   15e34:	sub	r1, r2, r1
   15e38:	bic	r5, r5, r5, asr #31
   15e3c:	str	r4, [sl, #4]
   15e40:	cmp	r1, r0
   15e44:	mov	r4, r6
   15e48:	bls	15e60 <argp_help@@Base+0x103c>
   15e4c:	mov	r0, sl
   15e50:	bl	1a570 <argp_parse@@Base+0x2144>
   15e54:	movw	r0, #58848	; 0xe5e0
   15e58:	movt	r0, #2
   15e5c:	ldr	r4, [r0, #20]
   15e60:	add	r0, r4, #3
   15e64:	str	r6, [sl, #12]
   15e68:	cmp	r5, r0
   15e6c:	bls	15eb8 <argp_help@@Base+0x1094>
   15e70:	ldr	r0, [sl, #28]
   15e74:	ldr	r1, [sl, #32]
   15e78:	mov	r5, r8
   15e7c:	cmp	r0, r1
   15e80:	bcc	15ea0 <argp_help@@Base+0x107c>
   15e84:	mov	r0, sl
   15e88:	mov	r1, #1
   15e8c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15e90:	cmp	r0, #0
   15e94:	beq	15fa0 <argp_help@@Base+0x117c>
   15e98:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15e9c:	ldr	r0, [r0]
   15ea0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15ea4:	add	r1, r0, #1
   15ea8:	str	r1, [r2]
   15eac:	mov	r1, #10
   15eb0:	strb	r1, [r0]
   15eb4:	b	15fa0 <argp_help@@Base+0x117c>
   15eb8:	cmp	r5, r4
   15ebc:	bcs	15f4c <argp_help@@Base+0x1128>
   15ec0:	ldr	r1, [sl, #24]
   15ec4:	ldr	r2, [sl, #28]
   15ec8:	ldr	r0, [sl, #16]
   15ecc:	sub	r1, r2, r1
   15ed0:	cmp	r1, r0
   15ed4:	bls	15ee0 <argp_help@@Base+0x10bc>
   15ed8:	mov	r0, sl
   15edc:	bl	1a570 <argp_parse@@Base+0x2144>
   15ee0:	ldr	r0, [sl, #20]
   15ee4:	mov	r5, r8
   15ee8:	cmp	r0, #0
   15eec:	subgt	r4, r4, r0
   15ef0:	cmp	r4, #1
   15ef4:	bge	15f18 <argp_help@@Base+0x10f4>
   15ef8:	b	15fa0 <argp_help@@Base+0x117c>
   15efc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f00:	add	r1, r0, #1
   15f04:	str	r1, [r2]
   15f08:	mov	r1, #32
   15f0c:	strb	r1, [r0]
   15f10:	cmp	r4, #0
   15f14:	ble	15fa0 <argp_help@@Base+0x117c>
   15f18:	ldr	r0, [sl, #28]
   15f1c:	ldr	r1, [sl, #32]
   15f20:	sub	r4, r4, #1
   15f24:	cmp	r0, r1
   15f28:	bcc	15efc <argp_help@@Base+0x10d8>
   15f2c:	mov	r0, sl
   15f30:	mov	r1, #1
   15f34:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15f38:	cmp	r0, #0
   15f3c:	beq	15f10 <argp_help@@Base+0x10ec>
   15f40:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15f44:	ldr	r0, [r0]
   15f48:	b	15efc <argp_help@@Base+0x10d8>
   15f4c:	ldr	r0, [sl, #28]
   15f50:	ldr	r1, [sl, #32]
   15f54:	mov	r5, r8
   15f58:	add	r2, r0, #3
   15f5c:	cmp	r2, r1
   15f60:	bls	15f80 <argp_help@@Base+0x115c>
   15f64:	mov	r0, sl
   15f68:	mov	r1, #3
   15f6c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15f70:	cmp	r0, #0
   15f74:	beq	15fa0 <argp_help@@Base+0x117c>
   15f78:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15f7c:	ldr	r0, [r0]
   15f80:	mov	r1, #32
   15f84:	strb	r1, [r0, #2]
   15f88:	movw	r1, #8224	; 0x2020
   15f8c:	strh	r1, [r0]
   15f90:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15f94:	ldr	r0, [r1]
   15f98:	add	r0, r0, #3
   15f9c:	str	r0, [r1]
   15fa0:	mov	r0, r7
   15fa4:	bl	11514 <strlen@plt>
   15fa8:	cmp	r0, #0
   15fac:	beq	16000 <argp_help@@Base+0x11dc>
   15fb0:	mov	r8, r0
   15fb4:	ldr	r0, [sl, #28]
   15fb8:	ldr	r1, [sl, #32]
   15fbc:	add	r2, r0, r8
   15fc0:	cmp	r2, r1
   15fc4:	bls	15fe4 <argp_help@@Base+0x11c0>
   15fc8:	mov	r0, sl
   15fcc:	mov	r1, r8
   15fd0:	bl	1aaa0 <argp_parse@@Base+0x2674>
   15fd4:	cmp	r0, #0
   15fd8:	beq	16000 <argp_help@@Base+0x11dc>
   15fdc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15fe0:	ldr	r0, [r0]
   15fe4:	mov	r1, r7
   15fe8:	mov	r2, r8
   15fec:	bl	113d0 <memcpy@plt>
   15ff0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15ff4:	ldr	r0, [r1]
   15ff8:	add	r0, r0, r8
   15ffc:	str	r0, [r1]
   16000:	cmp	r7, r9
   16004:	beq	16010 <argp_help@@Base+0x11ec>
   16008:	mov	r0, r7
   1600c:	bl	19708 <argp_parse@@Base+0x12dc>
   16010:	ldr	r2, [sl, #24]
   16014:	ldr	r0, [sl, #28]
   16018:	ldr	r1, [sl, #16]
   1601c:	sub	r2, r0, r2
   16020:	cmp	r2, r1
   16024:	bls	16034 <argp_help@@Base+0x1210>
   16028:	mov	r0, sl
   1602c:	bl	1a570 <argp_parse@@Base+0x2144>
   16030:	ldr	r0, [sl, #28]
   16034:	mov	r1, #0
   16038:	movw	r9, #58848	; 0xe5e0
   1603c:	str	r1, [sl, #4]
   16040:	movt	r9, #2
   16044:	ldr	r1, [sl, #32]
   16048:	cmp	r0, r1
   1604c:	bcc	1606c <argp_help@@Base+0x1248>
   16050:	mov	r0, sl
   16054:	mov	r1, #1
   16058:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1605c:	cmp	r0, #0
   16060:	beq	16080 <argp_help@@Base+0x125c>
   16064:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16068:	ldr	r0, [r0]
   1606c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16070:	add	r1, r0, #1
   16074:	str	r1, [r2]
   16078:	mov	r1, #10
   1607c:	strb	r1, [r0]
   16080:	str	r5, [fp, #-48]	; 0xffffffd0
   16084:	ldr	r1, [sl, #24]
   16088:	ldr	r2, [sl, #28]
   1608c:	ldr	r0, [sl, #16]
   16090:	sub	r1, r2, r1
   16094:	cmp	r1, r0
   16098:	bls	160b4 <argp_help@@Base+0x1290>
   1609c:	mov	r0, sl
   160a0:	bl	1a570 <argp_parse@@Base+0x2144>
   160a4:	ldr	r1, [sl, #24]
   160a8:	ldr	r2, [sl, #28]
   160ac:	ldr	r0, [sl, #16]
   160b0:	sub	r1, r2, r1
   160b4:	ldr	r2, [fp, #-124]	; 0xffffff84
   160b8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   160bc:	cmp	r1, r0
   160c0:	str	r2, [sl, #4]
   160c4:	bls	158c0 <argp_help@@Base+0xa9c>
   160c8:	mov	r0, sl
   160cc:	bl	1a570 <argp_parse@@Base+0x2144>
   160d0:	b	158c0 <argp_help@@Base+0xa9c>
   160d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160d8:	cmp	r0, #0
   160dc:	ldrne	r0, [r9, #4]
   160e0:	cmpne	r0, #0
   160e4:	bne	161f4 <argp_help@@Base+0x13d0>
   160e8:	mov	r5, #1
   160ec:	tst	r4, #32
   160f0:	beq	1611c <argp_help@@Base+0x12f8>
   160f4:	sub	sp, sp, #8
   160f8:	mov	r0, #0
   160fc:	mov	r2, #1
   16100:	mov	r3, r5
   16104:	stm	sp, {r0, sl}
   16108:	ldr	r0, [fp, #-108]	; 0xffffff94
   1610c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16110:	bl	17554 <argp_failure@@Base+0xff0>
   16114:	add	sp, sp, #8
   16118:	orr	r5, r0, r5
   1611c:	tst	r4, #64	; 0x40
   16120:	beq	1618c <argp_help@@Base+0x1368>
   16124:	movw	r4, #59104	; 0xe6e0
   16128:	movt	r4, #2
   1612c:	ldr	r0, [r4]
   16130:	cmp	r0, #0
   16134:	beq	1618c <argp_help@@Base+0x1368>
   16138:	cmp	r5, #0
   1613c:	beq	16178 <argp_help@@Base+0x1354>
   16140:	ldr	r0, [sl, #28]
   16144:	ldr	r1, [sl, #32]
   16148:	cmp	r0, r1
   1614c:	bcc	16168 <argp_help@@Base+0x1344>
   16150:	mov	r0, sl
   16154:	mov	r1, #1
   16158:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1615c:	cmp	r0, #0
   16160:	beq	16178 <argp_help@@Base+0x1354>
   16164:	ldr	r0, [sl, #28]
   16168:	add	r1, r0, #1
   1616c:	str	r1, [sl, #28]
   16170:	mov	r1, #10
   16174:	strb	r1, [r0]
   16178:	ldr	r2, [r4]
   1617c:	movw	r1, #52913	; 0xceb1
   16180:	mov	r0, sl
   16184:	movt	r1, #1
   16188:	bl	1ab8c <argp_parse@@Base+0x2760>
   1618c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16190:	bl	11454 <funlockfile@plt>
   16194:	ldr	r5, [fp, #-112]	; 0xffffff90
   16198:	cmp	r5, #0
   1619c:	beq	161e4 <argp_help@@Base+0x13c0>
   161a0:	ldr	r0, [r5, #12]
   161a4:	cmp	r0, #0
   161a8:	beq	161c0 <argp_help@@Base+0x139c>
   161ac:	ldr	r4, [r0, #24]
   161b0:	bl	19708 <argp_parse@@Base+0x12dc>
   161b4:	cmp	r4, #0
   161b8:	mov	r0, r4
   161bc:	bne	161ac <argp_help@@Base+0x1388>
   161c0:	ldr	r0, [r5, #4]
   161c4:	cmp	r0, #0
   161c8:	beq	161dc <argp_help@@Base+0x13b8>
   161cc:	ldr	r0, [r5]
   161d0:	bl	19708 <argp_parse@@Base+0x12dc>
   161d4:	ldr	r0, [r5, #8]
   161d8:	bl	19708 <argp_parse@@Base+0x12dc>
   161dc:	mov	r0, r5
   161e0:	bl	19708 <argp_parse@@Base+0x12dc>
   161e4:	mov	r0, sl
   161e8:	bl	1a52c <argp_parse@@Base+0x2100>
   161ec:	sub	sp, fp, #28
   161f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161f4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   161f8:	movw	r5, #53437	; 0xd0bd
   161fc:	movt	r5, #1
   16200:	cmp	r0, #0
   16204:	beq	16254 <argp_help@@Base+0x1430>
   16208:	ldr	r6, [r0]
   1620c:	cmp	r6, #0
   16210:	beq	16254 <argp_help@@Base+0x1430>
   16214:	ldr	r0, [r6, #20]
   16218:	cmp	r0, #0
   1621c:	beq	16254 <argp_help@@Base+0x1430>
   16220:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16224:	mov	r0, r6
   16228:	bl	19094 <argp_parse@@Base+0xc68>
   1622c:	ldr	r3, [r6, #20]
   16230:	movw	r1, #53437	; 0xd0bd
   16234:	mov	r2, r0
   16238:	movw	r0, #5
   1623c:	movt	r0, #512	; 0x200
   16240:	movt	r1, #1
   16244:	blx	r3
   16248:	mov	r5, r0
   1624c:	cmp	r0, #0
   16250:	beq	160e8 <argp_help@@Base+0x12c4>
   16254:	ldrb	r0, [r5]
   16258:	cmp	r0, #0
   1625c:	beq	16340 <argp_help@@Base+0x151c>
   16260:	ldr	r0, [sl, #28]
   16264:	ldr	r1, [sl, #32]
   16268:	cmp	r0, r1
   1626c:	bcc	1628c <argp_help@@Base+0x1468>
   16270:	mov	r0, sl
   16274:	mov	r1, #1
   16278:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1627c:	cmp	r0, #0
   16280:	beq	162a0 <argp_help@@Base+0x147c>
   16284:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16288:	ldr	r0, [r0]
   1628c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16290:	add	r1, r0, #1
   16294:	str	r1, [r2]
   16298:	mov	r1, #10
   1629c:	strb	r1, [r0]
   162a0:	mov	r0, r5
   162a4:	bl	11514 <strlen@plt>
   162a8:	cmp	r0, #0
   162ac:	beq	16300 <argp_help@@Base+0x14dc>
   162b0:	mov	r6, r0
   162b4:	ldr	r0, [sl, #28]
   162b8:	ldr	r1, [sl, #32]
   162bc:	add	r2, r0, r6
   162c0:	cmp	r2, r1
   162c4:	bls	162e4 <argp_help@@Base+0x14c0>
   162c8:	mov	r0, sl
   162cc:	mov	r1, r6
   162d0:	bl	1aaa0 <argp_parse@@Base+0x2674>
   162d4:	cmp	r0, #0
   162d8:	beq	16300 <argp_help@@Base+0x14dc>
   162dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   162e0:	ldr	r0, [r0]
   162e4:	mov	r1, r5
   162e8:	mov	r2, r6
   162ec:	bl	113d0 <memcpy@plt>
   162f0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   162f4:	ldr	r0, [r1]
   162f8:	add	r0, r0, r6
   162fc:	str	r0, [r1]
   16300:	ldr	r0, [sl, #28]
   16304:	ldr	r1, [sl, #32]
   16308:	cmp	r0, r1
   1630c:	bcc	1632c <argp_help@@Base+0x1508>
   16310:	mov	r0, sl
   16314:	mov	r1, #1
   16318:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1631c:	cmp	r0, #0
   16320:	beq	16340 <argp_help@@Base+0x151c>
   16324:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16328:	ldr	r0, [r0]
   1632c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16330:	add	r1, r0, #1
   16334:	str	r1, [r2]
   16338:	mov	r1, #10
   1633c:	strb	r1, [r0]
   16340:	movw	r0, #53437	; 0xd0bd
   16344:	movt	r0, #1
   16348:	cmp	r5, r0
   1634c:	beq	160e8 <argp_help@@Base+0x12c4>
   16350:	mov	r0, r5
   16354:	bl	19708 <argp_parse@@Base+0x12dc>
   16358:	b	160e8 <argp_help@@Base+0x12c4>
   1635c:	add	r0, r0, #112	; 0x70
   16360:	b	15380 <argp_help@@Base+0x55c>

00016364 <argp_state_help@@Base>:
   16364:	push	{r4, r5, fp, lr}
   16368:	add	fp, sp, #8
   1636c:	sub	sp, sp, #8
   16370:	mov	r4, r2
   16374:	mov	r2, r1
   16378:	cmp	r0, #0
   1637c:	beq	163c8 <argp_state_help@@Base+0x64>
   16380:	cmp	r2, #0
   16384:	beq	16400 <argp_state_help@@Base+0x9c>
   16388:	ldr	r1, [r0, #16]
   1638c:	mov	r5, r0
   16390:	ands	r0, r1, #2
   16394:	bne	16400 <argp_state_help@@Base+0x9c>
   16398:	ldr	r3, [r5, #40]	; 0x28
   1639c:	ldr	r0, [r5]
   163a0:	and	r1, r1, #64	; 0x40
   163a4:	orr	r4, r4, r1, lsl #1
   163a8:	mov	r1, r5
   163ac:	str	r3, [sp]
   163b0:	mov	r3, r4
   163b4:	bl	14e50 <argp_help@@Base+0x2c>
   163b8:	ldrb	r0, [r5, #16]
   163bc:	tst	r0, #32
   163c0:	beq	163f0 <argp_state_help@@Base+0x8c>
   163c4:	b	16400 <argp_state_help@@Base+0x9c>
   163c8:	cmp	r2, #0
   163cc:	beq	16400 <argp_state_help@@Base+0x9c>
   163d0:	movw	r0, #58912	; 0xe620
   163d4:	mov	r1, #0
   163d8:	mov	r3, r4
   163dc:	movt	r0, #2
   163e0:	ldr	r0, [r0]
   163e4:	str	r0, [sp]
   163e8:	mov	r0, #0
   163ec:	bl	14e50 <argp_help@@Base+0x2c>
   163f0:	tst	r4, #256	; 0x100
   163f4:	bne	16408 <argp_state_help@@Base+0xa4>
   163f8:	tst	r4, #512	; 0x200
   163fc:	bne	16418 <argp_state_help@@Base+0xb4>
   16400:	sub	sp, fp, #8
   16404:	pop	{r4, r5, fp, pc}
   16408:	movw	r0, #58888	; 0xe608
   1640c:	movt	r0, #2
   16410:	ldr	r0, [r0]
   16414:	bl	114f0 <exit@plt>
   16418:	mov	r0, #0
   1641c:	bl	114f0 <exit@plt>

00016420 <argp_error@@Base>:
   16420:	sub	sp, sp, #8
   16424:	push	{r4, r5, r6, sl, fp, lr}
   16428:	add	fp, sp, #16
   1642c:	sub	sp, sp, #8
   16430:	mov	r6, r1
   16434:	mov	r4, r0
   16438:	cmp	r0, #0
   1643c:	str	r2, [fp, #8]
   16440:	str	r3, [fp, #12]
   16444:	beq	1645c <argp_error@@Base+0x3c>
   16448:	ldrb	r0, [r4, #16]
   1644c:	tst	r0, #2
   16450:	bne	16524 <argp_error@@Base+0x104>
   16454:	add	r0, r4, #44	; 0x2c
   16458:	b	16464 <argp_error@@Base+0x44>
   1645c:	movw	r0, #58920	; 0xe628
   16460:	movt	r0, #2
   16464:	ldr	r5, [r0]
   16468:	cmp	r5, #0
   1646c:	beq	16524 <argp_error@@Base+0x104>
   16470:	mov	r0, r5
   16474:	bl	11610 <flockfile@plt>
   16478:	add	r0, fp, #8
   1647c:	cmp	r4, #0
   16480:	mov	r1, r5
   16484:	str	r0, [sp, #4]
   16488:	movw	r0, #58912	; 0xe620
   1648c:	movt	r0, #2
   16490:	addne	r0, r4, #40	; 0x28
   16494:	ldr	r0, [r0]
   16498:	bl	11334 <fputs_unlocked@plt>
   1649c:	ldr	r0, [r5, #20]
   164a0:	ldr	r1, [r5, #24]
   164a4:	cmp	r0, r1
   164a8:	bcs	16534 <argp_error@@Base+0x114>
   164ac:	add	r1, r0, #1
   164b0:	str	r1, [r5, #20]
   164b4:	mov	r1, #58	; 0x3a
   164b8:	strb	r1, [r0]
   164bc:	ldr	r0, [r5, #20]
   164c0:	ldr	r1, [r5, #24]
   164c4:	cmp	r0, r1
   164c8:	bcs	16544 <argp_error@@Base+0x124>
   164cc:	add	r1, r0, #1
   164d0:	str	r1, [r5, #20]
   164d4:	mov	r1, #32
   164d8:	strb	r1, [r0]
   164dc:	ldr	r2, [sp, #4]
   164e0:	mov	r0, r5
   164e4:	mov	r1, r6
   164e8:	bl	115d4 <vfprintf@plt>
   164ec:	ldr	r0, [r5, #20]
   164f0:	ldr	r1, [r5, #24]
   164f4:	cmp	r0, r1
   164f8:	bcs	16554 <argp_error@@Base+0x134>
   164fc:	add	r1, r0, #1
   16500:	str	r1, [r5, #20]
   16504:	mov	r1, #10
   16508:	strb	r1, [r0]
   1650c:	mov	r0, r4
   16510:	mov	r1, r5
   16514:	mov	r2, #260	; 0x104
   16518:	bl	16364 <argp_state_help@@Base>
   1651c:	mov	r0, r5
   16520:	bl	11454 <funlockfile@plt>
   16524:	sub	sp, fp, #16
   16528:	pop	{r4, r5, r6, sl, fp, lr}
   1652c:	add	sp, sp, #8
   16530:	bx	lr
   16534:	mov	r0, r5
   16538:	mov	r1, #58	; 0x3a
   1653c:	bl	115a4 <__overflow@plt>
   16540:	b	164bc <argp_error@@Base+0x9c>
   16544:	mov	r0, r5
   16548:	mov	r1, #32
   1654c:	bl	115a4 <__overflow@plt>
   16550:	b	164dc <argp_error@@Base+0xbc>
   16554:	mov	r0, r5
   16558:	mov	r1, #10
   1655c:	bl	115a4 <__overflow@plt>
   16560:	b	1650c <argp_error@@Base+0xec>

00016564 <argp_failure@@Base>:
   16564:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16568:	add	fp, sp, #24
   1656c:	sub	sp, sp, #200	; 0xc8
   16570:	mov	r4, r3
   16574:	mov	r7, r2
   16578:	mov	r8, r1
   1657c:	mov	r5, r0
   16580:	cmp	r0, #0
   16584:	beq	1659c <argp_failure@@Base+0x38>
   16588:	ldrb	r0, [r5, #16]
   1658c:	tst	r0, #2
   16590:	bne	16700 <argp_failure@@Base+0x19c>
   16594:	add	r0, r5, #44	; 0x2c
   16598:	b	165a4 <argp_failure@@Base+0x40>
   1659c:	movw	r0, #58920	; 0xe628
   165a0:	movt	r0, #2
   165a4:	ldr	r6, [r0]
   165a8:	cmp	r6, #0
   165ac:	beq	16700 <argp_failure@@Base+0x19c>
   165b0:	mov	r0, r6
   165b4:	bl	11610 <flockfile@plt>
   165b8:	movw	r0, #58912	; 0xe620
   165bc:	cmp	r5, #0
   165c0:	mov	r1, r6
   165c4:	movt	r0, #2
   165c8:	addne	r0, r5, #40	; 0x28
   165cc:	ldr	r0, [r0]
   165d0:	bl	11334 <fputs_unlocked@plt>
   165d4:	cmp	r4, #0
   165d8:	beq	16634 <argp_failure@@Base+0xd0>
   165dc:	add	r0, fp, #8
   165e0:	str	r0, [sp]
   165e4:	ldr	r0, [r6, #20]
   165e8:	ldr	r1, [r6, #24]
   165ec:	cmp	r0, r1
   165f0:	bcs	16718 <argp_failure@@Base+0x1b4>
   165f4:	add	r1, r0, #1
   165f8:	str	r1, [r6, #20]
   165fc:	mov	r1, #58	; 0x3a
   16600:	strb	r1, [r0]
   16604:	ldr	r0, [r6, #20]
   16608:	ldr	r1, [r6, #24]
   1660c:	cmp	r0, r1
   16610:	bcs	16728 <argp_failure@@Base+0x1c4>
   16614:	add	r1, r0, #1
   16618:	str	r1, [r6, #20]
   1661c:	mov	r1, #32
   16620:	strb	r1, [r0]
   16624:	ldr	r2, [sp]
   16628:	mov	r0, r6
   1662c:	mov	r1, r4
   16630:	bl	115d4 <vfprintf@plt>
   16634:	cmp	r7, #0
   16638:	beq	166b8 <argp_failure@@Base+0x154>
   1663c:	ldr	r0, [r6, #20]
   16640:	ldr	r1, [r6, #24]
   16644:	cmp	r0, r1
   16648:	bcs	16738 <argp_failure@@Base+0x1d4>
   1664c:	add	r1, r0, #1
   16650:	str	r1, [r6, #20]
   16654:	mov	r1, #58	; 0x3a
   16658:	strb	r1, [r0]
   1665c:	ldr	r0, [r6, #20]
   16660:	ldr	r1, [r6, #24]
   16664:	cmp	r0, r1
   16668:	bcs	16748 <argp_failure@@Base+0x1e4>
   1666c:	add	r1, r0, #1
   16670:	str	r1, [r6, #20]
   16674:	mov	r1, #32
   16678:	strb	r1, [r0]
   1667c:	mov	r1, sp
   16680:	mov	r0, r7
   16684:	mov	r2, #200	; 0xc8
   16688:	bl	11550 <strerror_r@plt>
   1668c:	cmp	r0, #0
   16690:	bne	166b0 <argp_failure@@Base+0x14c>
   16694:	mov	r0, r7
   16698:	bl	114b4 <strerror@plt>
   1669c:	mov	r1, r0
   166a0:	movw	r0, #52812	; 0xce4c
   166a4:	cmp	r1, #0
   166a8:	movt	r0, #1
   166ac:	movne	r0, r1
   166b0:	mov	r1, r6
   166b4:	bl	11334 <fputs_unlocked@plt>
   166b8:	ldr	r0, [r6, #20]
   166bc:	ldr	r1, [r6, #24]
   166c0:	cmp	r0, r1
   166c4:	bcs	16708 <argp_failure@@Base+0x1a4>
   166c8:	add	r1, r0, #1
   166cc:	str	r1, [r6, #20]
   166d0:	mov	r1, #10
   166d4:	strb	r1, [r0]
   166d8:	mov	r0, r6
   166dc:	bl	11454 <funlockfile@plt>
   166e0:	cmp	r8, #0
   166e4:	beq	16700 <argp_failure@@Base+0x19c>
   166e8:	cmp	r5, #0
   166ec:	ldrbne	r0, [r5, #16]
   166f0:	tstne	r0, #32
   166f4:	bne	16700 <argp_failure@@Base+0x19c>
   166f8:	mov	r0, r8
   166fc:	bl	114f0 <exit@plt>
   16700:	sub	sp, fp, #24
   16704:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16708:	mov	r0, r6
   1670c:	mov	r1, #10
   16710:	bl	115a4 <__overflow@plt>
   16714:	b	166d8 <argp_failure@@Base+0x174>
   16718:	mov	r0, r6
   1671c:	mov	r1, #58	; 0x3a
   16720:	bl	115a4 <__overflow@plt>
   16724:	b	16604 <argp_failure@@Base+0xa0>
   16728:	mov	r0, r6
   1672c:	mov	r1, #32
   16730:	bl	115a4 <__overflow@plt>
   16734:	b	16624 <argp_failure@@Base+0xc0>
   16738:	mov	r0, r6
   1673c:	mov	r1, #58	; 0x3a
   16740:	bl	115a4 <__overflow@plt>
   16744:	b	1665c <argp_failure@@Base+0xf8>
   16748:	mov	r0, r6
   1674c:	mov	r1, #32
   16750:	bl	115a4 <__overflow@plt>
   16754:	b	1667c <argp_failure@@Base+0x118>
   16758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1675c:	add	fp, sp, #28
   16760:	sub	sp, sp, #44	; 0x2c
   16764:	ldr	r4, [r0]
   16768:	ldr	r7, [r0, #16]
   1676c:	mov	r8, r0
   16770:	mov	r0, #16
   16774:	mov	sl, r1
   16778:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1677c:	cmp	r0, #0
   16780:	beq	16db8 <argp_failure@@Base+0x854>
   16784:	mov	r9, r0
   16788:	mov	r0, #0
   1678c:	cmp	r4, #0
   16790:	str	r8, [sp, #32]
   16794:	mov	r1, r9
   16798:	str	r9, [fp, #-32]	; 0xffffffe0
   1679c:	str	r0, [r1, #12]!
   167a0:	str	r1, [sp, #12]
   167a4:	str	r0, [r1, #-8]
   167a8:	beq	16a00 <argp_failure@@Base+0x49c>
   167ac:	ldrb	r0, [r4, #12]
   167b0:	str	r7, [sp, #8]
   167b4:	tst	r0, #4
   167b8:	bne	16dd0 <argp_failure@@Base+0x86c>
   167bc:	add	r5, r4, #12
   167c0:	mov	r6, #0
   167c4:	mov	r9, #0
   167c8:	b	167d0 <argp_failure@@Base+0x26c>
   167cc:	add	r5, r5, #24
   167d0:	ldr	r7, [r5, #-8]
   167d4:	cmp	r7, #0
   167d8:	bne	16800 <argp_failure@@Base+0x29c>
   167dc:	ldr	r0, [r5, #-12]
   167e0:	cmp	r0, #0
   167e4:	bne	16800 <argp_failure@@Base+0x29c>
   167e8:	ldr	r0, [r5, #4]
   167ec:	cmp	r0, #0
   167f0:	bne	16800 <argp_failure@@Base+0x29c>
   167f4:	ldr	r0, [r5, #8]
   167f8:	cmp	r0, #0
   167fc:	beq	16848 <argp_failure@@Base+0x2e4>
   16800:	ldr	r0, [r5]
   16804:	tst	r0, #4
   16808:	bne	16818 <argp_failure@@Base+0x2b4>
   1680c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16810:	add	r6, r6, #1
   16814:	str	r6, [r1, #4]
   16818:	sub	r1, r7, #1
   1681c:	cmp	r1, #254	; 0xfe
   16820:	bhi	167cc <argp_failure@@Base+0x268>
   16824:	ands	r0, r0, #8
   16828:	bne	167cc <argp_failure@@Base+0x268>
   1682c:	bl	114d8 <__ctype_b_loc@plt>
   16830:	ldr	r0, [r0]
   16834:	add	r0, r0, r7, lsl #1
   16838:	ldrb	r0, [r0, #1]
   1683c:	tst	r0, #64	; 0x40
   16840:	addne	r9, r9, #1
   16844:	b	167cc <argp_failure@@Base+0x268>
   16848:	rsb	r0, r6, r6, lsl #3
   1684c:	lsl	r0, r0, #2
   16850:	bl	1a420 <argp_parse@@Base+0x1ff4>
   16854:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16858:	mov	r5, r0
   1685c:	str	r0, [r1]
   16860:	add	r0, r9, #1
   16864:	mov	r8, r1
   16868:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1686c:	cmp	r5, #0
   16870:	str	r0, [r8, #8]
   16874:	movne	r7, r0
   16878:	cmpne	r0, #0
   1687c:	bne	168a0 <argp_failure@@Base+0x33c>
   16880:	movw	r0, #53217	; 0xcfe1
   16884:	movw	r1, #53125	; 0xcf85
   16888:	movw	r3, #53137	; 0xcf91
   1688c:	movw	r2, #474	; 0x1da
   16890:	movt	r0, #1
   16894:	movt	r1, #1
   16898:	movt	r3, #1
   1689c:	bl	1167c <__assert_fail@plt>
   168a0:	movw	r0, #37450	; 0x924a
   168a4:	movt	r0, #2340	; 0x924
   168a8:	cmp	r6, r0
   168ac:	bcs	16de8 <argp_failure@@Base+0x884>
   168b0:	mov	r9, #0
   168b4:	mov	r0, #0
   168b8:	b	168c8 <argp_failure@@Base+0x364>
   168bc:	mov	r4, r0
   168c0:	add	r5, r5, #28
   168c4:	mov	r0, r8
   168c8:	ldr	r1, [r4, #4]
   168cc:	cmp	r1, #0
   168d0:	bne	168f8 <argp_failure@@Base+0x394>
   168d4:	ldr	r2, [r4]
   168d8:	cmp	r2, #0
   168dc:	bne	168f8 <argp_failure@@Base+0x394>
   168e0:	ldr	r2, [r4, #16]
   168e4:	cmp	r2, #0
   168e8:	bne	168f8 <argp_failure@@Base+0x394>
   168ec:	ldr	r2, [r4, #20]
   168f0:	cmp	r2, #0
   168f4:	beq	169ec <argp_failure@@Base+0x488>
   168f8:	stm	r5, {r4, r9}
   168fc:	str	r7, [r5, #8]
   16900:	ldr	r8, [r4, #20]
   16904:	cmp	r8, #0
   16908:	bne	16924 <argp_failure@@Base+0x3c0>
   1690c:	ldr	r2, [r4]
   16910:	cmp	r2, #0
   16914:	bne	16920 <argp_failure@@Base+0x3bc>
   16918:	cmp	r1, #0
   1691c:	addeq	r0, r0, #1
   16920:	mov	r8, r0
   16924:	ldr	r0, [sp, #32]
   16928:	mov	r1, #0
   1692c:	str	r8, [r5, #12]
   16930:	str	sl, [r5, #16]
   16934:	str	r0, [r5, #20]
   16938:	add	r0, r1, #1
   1693c:	str	r0, [r5, #4]
   16940:	ldrb	r0, [r4, #12]
   16944:	tst	r0, #8
   16948:	bne	169a0 <argp_failure@@Base+0x43c>
   1694c:	ldr	r6, [r4, #4]
   16950:	sub	r0, r6, #1
   16954:	cmp	r0, #254	; 0xfe
   16958:	bhi	169a0 <argp_failure@@Base+0x43c>
   1695c:	bl	114d8 <__ctype_b_loc@plt>
   16960:	ldr	r0, [r0]
   16964:	add	r0, r0, r6, lsl #1
   16968:	ldrb	r0, [r0, #1]
   1696c:	tst	r0, #64	; 0x40
   16970:	beq	169a0 <argp_failure@@Base+0x43c>
   16974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16978:	ldr	r0, [r0, #8]
   1697c:	cmp	r0, r7
   16980:	bcs	1699c <argp_failure@@Base+0x438>
   16984:	ldrb	r1, [r0], #1
   16988:	uxtb	r2, r6
   1698c:	cmp	r1, r2
   16990:	beq	169a0 <argp_failure@@Base+0x43c>
   16994:	cmp	r7, r0
   16998:	bne	16984 <argp_failure@@Base+0x420>
   1699c:	strb	r6, [r7], #1
   169a0:	ldr	r1, [r4, #28]
   169a4:	add	r0, r4, #24
   169a8:	cmp	r1, #0
   169ac:	bne	169d4 <argp_failure@@Base+0x470>
   169b0:	ldr	r1, [r0]
   169b4:	cmp	r1, #0
   169b8:	bne	169d4 <argp_failure@@Base+0x470>
   169bc:	ldr	r1, [r4, #40]	; 0x28
   169c0:	cmp	r1, #0
   169c4:	bne	169d4 <argp_failure@@Base+0x470>
   169c8:	ldr	r1, [r4, #44]	; 0x2c
   169cc:	cmp	r1, #0
   169d0:	beq	168bc <argp_failure@@Base+0x358>
   169d4:	ldrb	r1, [r4, #36]	; 0x24
   169d8:	tst	r1, #4
   169dc:	beq	168bc <argp_failure@@Base+0x358>
   169e0:	ldr	r1, [r5, #4]
   169e4:	mov	r4, r0
   169e8:	b	16938 <argp_failure@@Base+0x3d4>
   169ec:	mov	r0, #0
   169f0:	ldr	r8, [sp, #32]
   169f4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   169f8:	strb	r0, [r7]
   169fc:	ldr	r7, [sp, #8]
   16a00:	cmp	r7, #0
   16a04:	beq	16d8c <argp_failure@@Base+0x828>
   16a08:	ldr	r0, [r7]
   16a0c:	cmp	r0, #0
   16a10:	beq	16d8c <argp_failure@@Base+0x828>
   16a14:	str	sl, [sp]
   16a18:	b	16a50 <argp_failure@@Base+0x4ec>
   16a1c:	ldr	r5, [sp, #20]
   16a20:	mov	r9, r6
   16a24:	ldr	r1, [r5]
   16a28:	ldr	r2, [r5, #8]
   16a2c:	str	r1, [r6]
   16a30:	stmib	r6, {r0, r2}
   16a34:	mov	r0, #0
   16a38:	str	r0, [r5, #4]
   16a3c:	mov	r0, r5
   16a40:	bl	19708 <argp_parse@@Base+0x12dc>
   16a44:	ldr	r0, [r7, #16]!
   16a48:	cmp	r0, #0
   16a4c:	beq	16d8c <argp_failure@@Base+0x828>
   16a50:	ldr	r4, [r7, #12]
   16a54:	cmp	r4, #0
   16a58:	beq	16a64 <argp_failure@@Base+0x500>
   16a5c:	ldr	r5, [r7, #8]
   16a60:	b	16a74 <argp_failure@@Base+0x510>
   16a64:	ldr	r5, [r7, #8]
   16a68:	mov	r1, sl
   16a6c:	cmp	r5, #0
   16a70:	beq	16acc <argp_failure@@Base+0x568>
   16a74:	ldr	r6, [r8, #16]
   16a78:	mov	r0, #28
   16a7c:	bl	1a420 <argp_parse@@Base+0x1ff4>
   16a80:	mov	r1, r0
   16a84:	cmp	r0, #0
   16a88:	beq	16acc <argp_failure@@Base+0x568>
   16a8c:	sub	r0, r7, r6
   16a90:	cmp	sl, #0
   16a94:	str	r5, [r1]
   16a98:	asr	r0, r0, #4
   16a9c:	stmib	r1, {r0, r4, sl}
   16aa0:	str	r8, [r1, #16]
   16aa4:	beq	16ab4 <argp_failure@@Base+0x550>
   16aa8:	ldr	r0, [sl, #20]
   16aac:	add	r0, r0, #1
   16ab0:	b	16ab8 <argp_failure@@Base+0x554>
   16ab4:	mov	r0, #0
   16ab8:	ldr	r3, [sp, #12]
   16abc:	str	r0, [r1, #20]
   16ac0:	ldr	r2, [r3]
   16ac4:	str	r1, [r3]
   16ac8:	str	r2, [r1, #24]
   16acc:	ldr	r0, [r7]
   16ad0:	bl	16758 <argp_failure@@Base+0x1f4>
   16ad4:	ldr	r1, [sp, #12]
   16ad8:	mov	r5, r0
   16adc:	ldr	r2, [r1]
   16ae0:	mov	r0, r1
   16ae4:	add	r1, r2, #24
   16ae8:	cmp	r2, #0
   16aec:	bne	16adc <argp_failure@@Base+0x578>
   16af0:	ldr	r1, [r5, #12]
   16af4:	str	r1, [r0]
   16af8:	mov	r0, #0
   16afc:	str	r0, [r5, #12]
   16b00:	ldr	r0, [r5, #4]
   16b04:	cmp	r0, #0
   16b08:	beq	16a3c <argp_failure@@Base+0x4d8>
   16b0c:	mov	r6, r9
   16b10:	ldr	r9, [r9, #4]
   16b14:	str	r5, [sp, #20]
   16b18:	cmp	r9, #0
   16b1c:	beq	16a1c <argp_failure@@Base+0x4b8>
   16b20:	add	r4, r9, r0
   16b24:	rsb	r0, r4, r4, lsl #3
   16b28:	lsl	r0, r0, #2
   16b2c:	bl	1a420 <argp_parse@@Base+0x1ff4>
   16b30:	ldr	r5, [r6, #8]
   16b34:	str	r0, [sp, #16]
   16b38:	mov	r8, r6
   16b3c:	mov	r0, r5
   16b40:	bl	11514 <strlen@plt>
   16b44:	mov	r6, r0
   16b48:	ldr	r0, [sp, #20]
   16b4c:	ldr	r0, [r0, #8]
   16b50:	bl	11514 <strlen@plt>
   16b54:	add	r0, r6, r0
   16b58:	str	r6, [sp, #24]
   16b5c:	add	r0, r0, #1
   16b60:	bl	1a420 <argp_parse@@Base+0x1ff4>
   16b64:	ldr	r1, [sp, #16]
   16b68:	cmp	r1, #0
   16b6c:	cmpne	r0, #0
   16b70:	beq	16d98 <argp_failure@@Base+0x834>
   16b74:	str	r0, [sp, #28]
   16b78:	movw	r0, #37450	; 0x924a
   16b7c:	str	r4, [sp, #4]
   16b80:	movt	r0, #2340	; 0x924
   16b84:	cmp	r4, r0
   16b88:	bcs	16e00 <argp_failure@@Base+0x89c>
   16b8c:	ldr	r1, [r8]
   16b90:	ldr	r8, [sp, #16]
   16b94:	rsb	r4, r9, r9, lsl #3
   16b98:	lsl	r2, r4, #2
   16b9c:	mov	r0, r8
   16ba0:	bl	113d0 <memcpy@plt>
   16ba4:	ldr	r2, [sp, #20]
   16ba8:	add	r0, r8, r4, lsl #2
   16bac:	ldm	r2, {r1, r2}
   16bb0:	rsb	r2, r2, r2, lsl #3
   16bb4:	lsl	r2, r2, #2
   16bb8:	bl	113d0 <memcpy@plt>
   16bbc:	ldr	r6, [sp, #28]
   16bc0:	ldr	r2, [sp, #24]
   16bc4:	mov	r1, r5
   16bc8:	mov	r0, r6
   16bcc:	bl	113d0 <memcpy@plt>
   16bd0:	tst	r9, #1
   16bd4:	mov	r0, r9
   16bd8:	mov	r4, r8
   16bdc:	beq	16bfc <argp_failure@@Base+0x698>
   16be0:	ldr	r1, [sp, #16]
   16be4:	ldr	r0, [r1, #8]
   16be8:	add	r4, r1, #28
   16bec:	sub	r0, r0, r5
   16bf0:	add	r0, r6, r0
   16bf4:	str	r0, [r1, #8]
   16bf8:	sub	r0, r9, #1
   16bfc:	cmp	r9, #1
   16c00:	beq	16c30 <argp_failure@@Base+0x6cc>
   16c04:	ldr	r1, [r4, #8]
   16c08:	ldr	r2, [r4, #36]	; 0x24
   16c0c:	subs	r0, r0, #2
   16c10:	sub	r1, r1, r5
   16c14:	add	r1, r6, r1
   16c18:	str	r1, [r4, #8]
   16c1c:	sub	r1, r2, r5
   16c20:	add	r1, r6, r1
   16c24:	str	r1, [r4, #36]	; 0x24
   16c28:	add	r4, r4, #56	; 0x38
   16c2c:	bne	16c04 <argp_failure@@Base+0x6a0>
   16c30:	ldr	r0, [sp, #24]
   16c34:	str	r7, [sp, #8]
   16c38:	add	r0, r6, r0
   16c3c:	str	r0, [sp, #36]	; 0x24
   16c40:	ldr	r0, [sp, #20]
   16c44:	ldr	r5, [r0, #4]
   16c48:	cmp	r5, #0
   16c4c:	beq	16d04 <argp_failure@@Base+0x7a0>
   16c50:	ldr	r6, [r0, #8]
   16c54:	b	16c64 <argp_failure@@Base+0x700>
   16c58:	subs	r5, r5, #1
   16c5c:	add	r4, r4, #28
   16c60:	beq	16d04 <argp_failure@@Base+0x7a0>
   16c64:	ldr	r0, [sp, #36]	; 0x24
   16c68:	str	r0, [r4, #8]
   16c6c:	ldr	sl, [r4, #4]
   16c70:	cmp	sl, #0
   16c74:	beq	16c58 <argp_failure@@Base+0x6f4>
   16c78:	ldr	r9, [r4]
   16c7c:	b	16c9c <argp_failure@@Base+0x738>
   16c80:	ldr	r0, [sp, #36]	; 0x24
   16c84:	strb	r8, [r0], #1
   16c88:	str	r0, [sp, #36]	; 0x24
   16c8c:	add	r6, r6, #1
   16c90:	subs	sl, sl, #1
   16c94:	add	r9, r9, #24
   16c98:	beq	16c58 <argp_failure@@Base+0x6f4>
   16c9c:	ldrb	r0, [r9, #12]
   16ca0:	tst	r0, #8
   16ca4:	bne	16c90 <argp_failure@@Base+0x72c>
   16ca8:	ldr	r7, [r9, #4]
   16cac:	sub	r0, r7, #1
   16cb0:	cmp	r0, #254	; 0xfe
   16cb4:	bhi	16c90 <argp_failure@@Base+0x72c>
   16cb8:	ldrb	r8, [r6]
   16cbc:	bl	114d8 <__ctype_b_loc@plt>
   16cc0:	cmp	r7, r8
   16cc4:	bne	16c90 <argp_failure@@Base+0x72c>
   16cc8:	ldr	r0, [r0]
   16ccc:	add	r0, r0, r7, lsl #1
   16cd0:	ldrh	r0, [r0]
   16cd4:	ands	r0, r0, #16384	; 0x4000
   16cd8:	beq	16c90 <argp_failure@@Base+0x72c>
   16cdc:	ldr	r0, [sp, #24]
   16ce0:	ldr	r1, [sp, #28]
   16ce4:	cmp	r0, #1
   16ce8:	blt	16c80 <argp_failure@@Base+0x71c>
   16cec:	ldrb	r2, [r1], #1
   16cf0:	cmp	r2, r8
   16cf4:	beq	16c8c <argp_failure@@Base+0x728>
   16cf8:	subs	r0, r0, #1
   16cfc:	bne	16cec <argp_failure@@Base+0x788>
   16d00:	b	16c80 <argp_failure@@Base+0x71c>
   16d04:	ldr	r1, [sp, #36]	; 0x24
   16d08:	ldr	r9, [fp, #-32]	; 0xffffffe0
   16d0c:	mov	r0, #0
   16d10:	strb	r0, [r1]
   16d14:	ldr	r0, [r9]
   16d18:	bl	19708 <argp_parse@@Base+0x12dc>
   16d1c:	ldr	r0, [r9, #8]
   16d20:	bl	19708 <argp_parse@@Base+0x12dc>
   16d24:	ldr	r0, [sp, #16]
   16d28:	ldr	r5, [sp, #20]
   16d2c:	str	r0, [r9]
   16d30:	ldr	r0, [sp, #4]
   16d34:	str	r0, [r9, #4]
   16d38:	ldr	r0, [sp, #28]
   16d3c:	str	r0, [r9, #8]
   16d40:	ldr	r0, [r5, #12]
   16d44:	cmp	r0, #0
   16d48:	beq	16d60 <argp_failure@@Base+0x7fc>
   16d4c:	ldr	r4, [r0, #24]
   16d50:	bl	19708 <argp_parse@@Base+0x12dc>
   16d54:	cmp	r4, #0
   16d58:	mov	r0, r4
   16d5c:	bne	16d4c <argp_failure@@Base+0x7e8>
   16d60:	ldr	r0, [r5, #4]
   16d64:	ldr	sl, [sp]
   16d68:	ldr	r8, [sp, #32]
   16d6c:	ldr	r7, [sp, #8]
   16d70:	cmp	r0, #0
   16d74:	beq	16a3c <argp_failure@@Base+0x4d8>
   16d78:	ldr	r0, [r5]
   16d7c:	bl	19708 <argp_parse@@Base+0x12dc>
   16d80:	ldr	r0, [r5, #8]
   16d84:	bl	19708 <argp_parse@@Base+0x12dc>
   16d88:	b	16a3c <argp_failure@@Base+0x4d8>
   16d8c:	mov	r0, r9
   16d90:	sub	sp, fp, #28
   16d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d98:	movw	r0, #53309	; 0xd03d
   16d9c:	movw	r1, #53125	; 0xcf85
   16da0:	movw	r3, #53334	; 0xd056
   16da4:	movw	r2, #970	; 0x3ca
   16da8:	movt	r0, #1
   16dac:	movt	r1, #1
   16db0:	movt	r3, #1
   16db4:	bl	1167c <__assert_fail@plt>
   16db8:	movw	r0, #53121	; 0xcf81
   16dbc:	movw	r1, #53125	; 0xcf85
   16dc0:	movw	r3, #53137	; 0xcf91
   16dc4:	movw	r2, #450	; 0x1c2
   16dc8:	movt	r0, #1
   16dcc:	b	16894 <argp_failure@@Base+0x330>
   16dd0:	movw	r0, #53201	; 0xcfd1
   16dd4:	movw	r1, #53125	; 0xcf85
   16dd8:	movw	r3, #53137	; 0xcf91
   16ddc:	mov	r2, #460	; 0x1cc
   16de0:	movt	r0, #1
   16de4:	b	16894 <argp_failure@@Base+0x330>
   16de8:	movw	r0, #53252	; 0xd004
   16dec:	movw	r1, #53125	; 0xcf85
   16df0:	movw	r3, #53137	; 0xcf91
   16df4:	mov	r2, #476	; 0x1dc
   16df8:	movt	r0, #1
   16dfc:	b	16894 <argp_failure@@Base+0x330>
   16e00:	movw	r0, #53257	; 0xd009
   16e04:	movw	r1, #53125	; 0xcf85
   16e08:	movw	r3, #53334	; 0xd056
   16e0c:	mov	r2, #972	; 0x3cc
   16e10:	movt	r0, #1
   16e14:	b	16dac <argp_failure@@Base+0x848>
   16e18:	push	{r4, r5, fp, lr}
   16e1c:	add	fp, sp, #8
   16e20:	mov	r1, r0
   16e24:	ldr	r0, [r0, #8]
   16e28:	ldr	r5, [r1, #16]
   16e2c:	cmp	r0, #0
   16e30:	beq	16e54 <argp_failure@@Base+0x8f0>
   16e34:	mov	r1, #10
   16e38:	bl	11520 <strchr@plt>
   16e3c:	cmp	r0, #0
   16e40:	mov	r4, r0
   16e44:	movwne	r4, #1
   16e48:	cmp	r5, #0
   16e4c:	bne	16e60 <argp_failure@@Base+0x8fc>
   16e50:	b	16e84 <argp_failure@@Base+0x920>
   16e54:	mov	r4, #0
   16e58:	cmp	r5, #0
   16e5c:	beq	16e84 <argp_failure@@Base+0x920>
   16e60:	ldr	r0, [r5]
   16e64:	cmp	r0, #0
   16e68:	beq	16e84 <argp_failure@@Base+0x920>
   16e6c:	add	r5, r5, #16
   16e70:	bl	16e18 <argp_failure@@Base+0x8b4>
   16e74:	add	r4, r0, r4
   16e78:	ldr	r0, [r5], #16
   16e7c:	cmp	r0, #0
   16e80:	bne	16e70 <argp_failure@@Base+0x90c>
   16e84:	mov	r0, r4
   16e88:	pop	{r4, r5, fp, pc}
   16e8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e90:	add	fp, sp, #28
   16e94:	sub	sp, sp, #28
   16e98:	ldr	r4, [r0, #4]
   16e9c:	str	r1, [fp, #-40]	; 0xffffffd8
   16ea0:	cmp	r4, #0
   16ea4:	beq	17254 <argp_failure@@Base+0xcf0>
   16ea8:	mov	r5, r0
   16eac:	ldr	r0, [r0, #8]
   16eb0:	bl	11514 <strlen@plt>
   16eb4:	add	r0, r0, #8
   16eb8:	bic	r0, r0, #7
   16ebc:	sub	r0, sp, r0
   16ec0:	mov	sp, r0
   16ec4:	ldr	r7, [r5]
   16ec8:	str	r0, [fp, #-52]	; 0xffffffcc
   16ecc:	str	r0, [fp, #-48]	; 0xffffffd0
   16ed0:	str	r5, [fp, #-44]	; 0xffffffd4
   16ed4:	b	16eec <argp_failure@@Base+0x988>
   16ed8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16edc:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16ee0:	add	r7, r7, #28
   16ee4:	subs	r4, r4, #1
   16ee8:	beq	16fa4 <argp_failure@@Base+0xa40>
   16eec:	ldr	r6, [r7, #4]
   16ef0:	str	r4, [fp, #-36]	; 0xffffffdc
   16ef4:	cmp	r6, #0
   16ef8:	beq	16ed8 <argp_failure@@Base+0x974>
   16efc:	ldr	r4, [r7]
   16f00:	ldr	r5, [r7, #8]
   16f04:	mov	sl, r4
   16f08:	b	16f1c <argp_failure@@Base+0x9b8>
   16f0c:	add	r5, r5, #1
   16f10:	subs	r6, r6, #1
   16f14:	add	sl, sl, #24
   16f18:	beq	16ed8 <argp_failure@@Base+0x974>
   16f1c:	ldr	r8, [sl, #12]
   16f20:	tst	r8, #8
   16f24:	bne	16f10 <argp_failure@@Base+0x9ac>
   16f28:	ldr	r9, [sl, #4]
   16f2c:	sub	r0, r9, #1
   16f30:	cmp	r0, #254	; 0xfe
   16f34:	bhi	16f10 <argp_failure@@Base+0x9ac>
   16f38:	bl	114d8 <__ctype_b_loc@plt>
   16f3c:	ldr	r0, [r0]
   16f40:	add	r0, r0, r9, lsl #1
   16f44:	ldrb	r0, [r0, #1]
   16f48:	tst	r0, #64	; 0x40
   16f4c:	beq	16f10 <argp_failure@@Base+0x9ac>
   16f50:	ldrb	r0, [r5]
   16f54:	cmp	r9, r0
   16f58:	bne	16f10 <argp_failure@@Base+0x9ac>
   16f5c:	tst	r8, #4
   16f60:	moveq	r4, sl
   16f64:	tst	r8, #2
   16f68:	bne	16f0c <argp_failure@@Base+0x9a8>
   16f6c:	ldr	r0, [sl, #8]
   16f70:	cmp	r0, #0
   16f74:	bne	16f0c <argp_failure@@Base+0x9a8>
   16f78:	ldr	r0, [r4, #8]
   16f7c:	cmp	r0, #0
   16f80:	bne	16f0c <argp_failure@@Base+0x9a8>
   16f84:	ldr	r0, [r4, #12]
   16f88:	orr	r0, r0, r8
   16f8c:	tst	r0, #16
   16f90:	bne	16f0c <argp_failure@@Base+0x9a8>
   16f94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f98:	strb	r9, [r0], #1
   16f9c:	str	r0, [fp, #-48]	; 0xffffffd0
   16fa0:	b	16f0c <argp_failure@@Base+0x9a8>
   16fa4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16fa8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16fac:	cmp	r1, r2
   16fb0:	bls	16fcc <argp_failure@@Base+0xa68>
   16fb4:	mov	r0, #0
   16fb8:	strb	r0, [r1]
   16fbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16fc0:	movw	r1, #53378	; 0xd082
   16fc4:	movt	r1, #1
   16fc8:	bl	1ab8c <argp_parse@@Base+0x2760>
   16fcc:	ldr	r5, [r6, #4]
   16fd0:	cmp	r5, #0
   16fd4:	beq	17254 <argp_failure@@Base+0xcf0>
   16fd8:	ldr	r8, [r6]
   16fdc:	b	16fec <argp_failure@@Base+0xa88>
   16fe0:	subs	r5, r5, #1
   16fe4:	add	r8, r8, #28
   16fe8:	beq	17190 <argp_failure@@Base+0xc2c>
   16fec:	ldr	r9, [r8, #4]
   16ff0:	cmp	r9, #0
   16ff4:	beq	16fe0 <argp_failure@@Base+0xa7c>
   16ff8:	ldr	sl, [r8]
   16ffc:	ldr	r4, [r8, #8]
   17000:	str	sl, [fp, #-36]	; 0xffffffdc
   17004:	b	1702c <argp_failure@@Base+0xac8>
   17008:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1700c:	movw	r1, #53385	; 0xd089
   17010:	mov	r2, r7
   17014:	movt	r1, #1
   17018:	bl	1ab8c <argp_parse@@Base+0x2760>
   1701c:	add	r4, r4, #1
   17020:	subs	r9, r9, #1
   17024:	add	sl, sl, #24
   17028:	beq	16fe0 <argp_failure@@Base+0xa7c>
   1702c:	ldr	r6, [sl, #12]
   17030:	tst	r6, #8
   17034:	bne	17020 <argp_failure@@Base+0xabc>
   17038:	ldr	r7, [sl, #4]
   1703c:	sub	r0, r7, #1
   17040:	cmp	r0, #254	; 0xfe
   17044:	bhi	17020 <argp_failure@@Base+0xabc>
   17048:	bl	114d8 <__ctype_b_loc@plt>
   1704c:	ldr	r0, [r0]
   17050:	add	r0, r0, r7, lsl #1
   17054:	ldrb	r0, [r0, #1]
   17058:	tst	r0, #64	; 0x40
   1705c:	beq	17020 <argp_failure@@Base+0xabc>
   17060:	ldrb	r0, [r4]
   17064:	cmp	r7, r0
   17068:	bne	17020 <argp_failure@@Base+0xabc>
   1706c:	tst	r6, #4
   17070:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17074:	moveq	r0, sl
   17078:	tst	r6, #2
   1707c:	str	r0, [fp, #-36]	; 0xffffffdc
   17080:	bne	1701c <argp_failure@@Base+0xab8>
   17084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17088:	ldr	r3, [sl, #8]
   1708c:	ldr	r0, [r0, #12]
   17090:	cmp	r3, #0
   17094:	orr	r0, r0, r6
   17098:	bne	170a4 <argp_failure@@Base+0xb40>
   1709c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   170a0:	ldr	r3, [r1, #8]
   170a4:	tst	r0, #16
   170a8:	bne	1701c <argp_failure@@Base+0xab8>
   170ac:	cmp	r3, #0
   170b0:	beq	1701c <argp_failure@@Base+0xab8>
   170b4:	tst	r0, #1
   170b8:	bne	17008 <argp_failure@@Base+0xaa4>
   170bc:	mov	r0, r3
   170c0:	str	r3, [fp, #-48]	; 0xffffffd0
   170c4:	bl	11514 <strlen@plt>
   170c8:	ldr	r7, [fp, #-40]	; 0xffffffd8
   170cc:	add	r6, r0, #6
   170d0:	ldr	r2, [r7, #24]
   170d4:	ldr	r0, [r7, #28]
   170d8:	ldr	r1, [r7, #16]
   170dc:	sub	r2, r0, r2
   170e0:	cmp	r2, r1
   170e4:	bls	170f4 <argp_failure@@Base+0xb90>
   170e8:	mov	r0, r7
   170ec:	bl	1a570 <argp_parse@@Base+0x2144>
   170f0:	ldr	r0, [r7, #28]
   170f4:	ldr	r3, [r7, #20]
   170f8:	ldr	r2, [r7, #8]
   170fc:	ldr	r1, [r7, #32]
   17100:	cmp	r3, #0
   17104:	addgt	r6, r6, r3
   17108:	cmp	r6, r2
   1710c:	bcs	17144 <argp_failure@@Base+0xbe0>
   17110:	ldr	r6, [fp, #-48]	; 0xffffffd0
   17114:	cmp	r0, r1
   17118:	bcc	17134 <argp_failure@@Base+0xbd0>
   1711c:	mov	r0, r7
   17120:	mov	r1, #1
   17124:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17128:	cmp	r0, #0
   1712c:	beq	17178 <argp_failure@@Base+0xc14>
   17130:	ldr	r0, [r7, #28]
   17134:	add	r1, r0, #1
   17138:	str	r1, [r7, #28]
   1713c:	mov	r1, #32
   17140:	b	17174 <argp_failure@@Base+0xc10>
   17144:	ldr	r6, [fp, #-48]	; 0xffffffd0
   17148:	cmp	r0, r1
   1714c:	bcc	17168 <argp_failure@@Base+0xc04>
   17150:	mov	r0, r7
   17154:	mov	r1, #1
   17158:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1715c:	cmp	r0, #0
   17160:	beq	17178 <argp_failure@@Base+0xc14>
   17164:	ldr	r0, [r7, #28]
   17168:	add	r1, r0, #1
   1716c:	str	r1, [r7, #28]
   17170:	mov	r1, #10
   17174:	strb	r1, [r0]
   17178:	ldr	r2, [sl, #4]
   1717c:	movw	r1, #53396	; 0xd094
   17180:	mov	r0, r7
   17184:	mov	r3, r6
   17188:	movt	r1, #1
   1718c:	b	17018 <argp_failure@@Base+0xab4>
   17190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17194:	ldr	r4, [r0, #4]
   17198:	cmp	r4, #0
   1719c:	beq	17254 <argp_failure@@Base+0xcf0>
   171a0:	ldr	r6, [r0]
   171a4:	movw	sl, #53429	; 0xd0b5
   171a8:	movw	r9, #53405	; 0xd09d
   171ac:	movt	sl, #1
   171b0:	movt	r9, #1
   171b4:	b	171c4 <argp_failure@@Base+0xc60>
   171b8:	subs	r4, r4, #1
   171bc:	add	r6, r6, #28
   171c0:	beq	17254 <argp_failure@@Base+0xcf0>
   171c4:	ldr	r7, [r6, #4]
   171c8:	cmp	r7, #0
   171cc:	beq	171b8 <argp_failure@@Base+0xc54>
   171d0:	ldr	r8, [r6]
   171d4:	mov	r5, r8
   171d8:	b	171f4 <argp_failure@@Base+0xc90>
   171dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   171e0:	mov	r1, sl
   171e4:	bl	1ab8c <argp_parse@@Base+0x2760>
   171e8:	subs	r7, r7, #1
   171ec:	add	r5, r5, #24
   171f0:	beq	171b8 <argp_failure@@Base+0xc54>
   171f4:	ldr	r2, [r5]
   171f8:	cmp	r2, #0
   171fc:	beq	171e8 <argp_failure@@Base+0xc84>
   17200:	ldr	r0, [r5, #12]
   17204:	tst	r0, #4
   17208:	moveq	r8, r5
   1720c:	tst	r0, #2
   17210:	bne	171e8 <argp_failure@@Base+0xc84>
   17214:	ldr	r3, [r5, #8]
   17218:	ldr	r1, [r8, #12]
   1721c:	cmp	r3, #0
   17220:	orr	r0, r1, r0
   17224:	ldreq	r3, [r8, #8]
   17228:	tst	r0, #16
   1722c:	bne	171e8 <argp_failure@@Base+0xc84>
   17230:	cmp	r3, #0
   17234:	beq	171dc <argp_failure@@Base+0xc78>
   17238:	tst	r0, #1
   1723c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17240:	movne	r1, r9
   17244:	movweq	r1, #53418	; 0xd0aa
   17248:	movteq	r1, #1
   1724c:	bl	1ab8c <argp_parse@@Base+0x2760>
   17250:	b	171e8 <argp_failure@@Base+0xc84>
   17254:	sub	sp, fp, #28
   17258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1725c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17260:	add	fp, sp, #28
   17264:	sub	sp, sp, #28
   17268:	ldr	r5, [r0, #8]
   1726c:	mov	r7, r0
   17270:	ldr	sl, [r0, #16]
   17274:	ldr	r0, [r2]
   17278:	mov	r4, r3
   1727c:	mov	r9, r2
   17280:	mov	r8, r1
   17284:	cmp	r7, #0
   17288:	mov	r6, r5
   1728c:	str	r0, [sp, #20]
   17290:	beq	172cc <argp_failure@@Base+0xd68>
   17294:	ldr	r0, [r7, #20]
   17298:	mov	r6, r5
   1729c:	cmp	r0, #0
   172a0:	beq	172cc <argp_failure@@Base+0xd68>
   172a4:	mov	r0, r7
   172a8:	mov	r1, r8
   172ac:	bl	19094 <argp_parse@@Base+0xc68>
   172b0:	ldr	r3, [r7, #20]
   172b4:	mov	r2, r0
   172b8:	movw	r0, #6
   172bc:	mov	r1, r5
   172c0:	movt	r0, #512	; 0x200
   172c4:	blx	r3
   172c8:	mov	r6, r0
   172cc:	cmp	r6, #0
   172d0:	beq	17334 <argp_failure@@Base+0xdd0>
   172d4:	mov	r0, r6
   172d8:	mov	r1, #10
   172dc:	bl	113a0 <strchrnul@plt>
   172e0:	mov	r7, r0
   172e4:	ldrb	r0, [r0]
   172e8:	str	r5, [sp, #12]
   172ec:	str	r6, [sp, #16]
   172f0:	stmib	sp, {r8, sl}
   172f4:	cmp	r0, #0
   172f8:	beq	1734c <argp_failure@@Base+0xde8>
   172fc:	ldr	r0, [sp, #20]
   17300:	ldrb	r6, [r0]
   17304:	cmp	r6, #0
   17308:	beq	17358 <argp_failure@@Base+0xdf4>
   1730c:	mov	r8, #0
   17310:	add	sl, r7, #1
   17314:	mov	r1, #10
   17318:	mov	r0, sl
   1731c:	bl	113a0 <strchrnul@plt>
   17320:	add	r8, r8, #1
   17324:	mov	r7, r0
   17328:	cmp	r8, r6
   1732c:	bcc	17310 <argp_failure@@Base+0xdac>
   17330:	b	1735c <argp_failure@@Base+0xdf8>
   17334:	mov	r0, #0
   17338:	mov	r7, #0
   1733c:	str	r0, [sp, #24]
   17340:	cmp	sl, #0
   17344:	bne	174bc <argp_failure@@Base+0xf58>
   17348:	b	17500 <argp_failure@@Base+0xf9c>
   1734c:	mov	r0, #0
   17350:	mov	sl, r6
   17354:	b	1736c <argp_failure@@Base+0xe08>
   17358:	ldr	sl, [sp, #16]
   1735c:	ldr	r0, [r9]
   17360:	add	r0, r0, #1
   17364:	str	r0, [r9]
   17368:	mov	r0, #1
   1736c:	str	r0, [sp, #24]
   17370:	ldr	r8, [fp, #8]
   17374:	sub	r2, r7, sl
   17378:	add	r6, r2, #1
   1737c:	ldr	r3, [r8, #24]
   17380:	ldr	r0, [r8, #28]
   17384:	ldr	r1, [r8, #16]
   17388:	sub	r3, r0, r3
   1738c:	cmp	r3, r1
   17390:	bls	173a8 <argp_failure@@Base+0xe44>
   17394:	mov	r0, r8
   17398:	mov	r5, r2
   1739c:	bl	1a570 <argp_parse@@Base+0x2144>
   173a0:	ldr	r0, [r8, #28]
   173a4:	mov	r2, r5
   173a8:	ldr	r3, [r8, #20]
   173ac:	ldr	r5, [r8, #8]
   173b0:	ldr	r1, [r8, #32]
   173b4:	cmp	r3, #0
   173b8:	addgt	r6, r6, r3
   173bc:	cmp	r6, r5
   173c0:	bcs	17408 <argp_failure@@Base+0xea4>
   173c4:	ldr	r8, [sp, #4]
   173c8:	cmp	r0, r1
   173cc:	bcc	173f4 <argp_failure@@Base+0xe90>
   173d0:	ldr	r6, [fp, #8]
   173d4:	mov	r1, #1
   173d8:	mov	r5, r2
   173dc:	mov	r0, r6
   173e0:	bl	1aaa0 <argp_parse@@Base+0x2674>
   173e4:	mov	r2, r5
   173e8:	cmp	r0, #0
   173ec:	beq	1744c <argp_failure@@Base+0xee8>
   173f0:	ldr	r0, [r6, #28]
   173f4:	ldr	r6, [fp, #8]
   173f8:	add	r1, r0, #1
   173fc:	str	r1, [r6, #28]
   17400:	mov	r1, #32
   17404:	b	17448 <argp_failure@@Base+0xee4>
   17408:	ldr	r8, [sp, #4]
   1740c:	cmp	r0, r1
   17410:	bcc	17438 <argp_failure@@Base+0xed4>
   17414:	ldr	r6, [fp, #8]
   17418:	mov	r1, #1
   1741c:	mov	r5, r2
   17420:	mov	r0, r6
   17424:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17428:	mov	r2, r5
   1742c:	cmp	r0, #0
   17430:	beq	1744c <argp_failure@@Base+0xee8>
   17434:	ldr	r0, [r6, #28]
   17438:	ldr	r6, [fp, #8]
   1743c:	add	r1, r0, #1
   17440:	str	r1, [r6, #28]
   17444:	mov	r1, #10
   17448:	strb	r1, [r0]
   1744c:	ldr	r0, [r6, #28]
   17450:	ldr	r1, [r6, #32]
   17454:	add	r3, r0, r2
   17458:	cmp	r3, r1
   1745c:	bls	17484 <argp_failure@@Base+0xf20>
   17460:	mov	r0, r6
   17464:	mov	r1, r2
   17468:	mov	r5, r2
   1746c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17470:	cmp	r0, #0
   17474:	beq	1749c <argp_failure@@Base+0xf38>
   17478:	ldr	r6, [fp, #8]
   1747c:	mov	r2, r5
   17480:	ldr	r0, [r6, #28]
   17484:	mov	r1, sl
   17488:	mov	r5, r2
   1748c:	bl	113d0 <memcpy@plt>
   17490:	ldr	r0, [r6, #28]
   17494:	add	r0, r0, r5
   17498:	str	r0, [r6, #28]
   1749c:	ldr	r0, [sp, #16]
   174a0:	ldr	r1, [sp, #12]
   174a4:	cmp	r0, r1
   174a8:	beq	174b0 <argp_failure@@Base+0xf4c>
   174ac:	bl	19708 <argp_parse@@Base+0x12dc>
   174b0:	ldr	sl, [sp, #8]
   174b4:	cmp	sl, #0
   174b8:	beq	17500 <argp_failure@@Base+0xf9c>
   174bc:	ldr	r0, [sl]
   174c0:	cmp	r0, #0
   174c4:	beq	17500 <argp_failure@@Base+0xf9c>
   174c8:	add	r6, sl, #16
   174cc:	ldr	r5, [fp, #8]
   174d0:	ldr	sl, [sp, #24]
   174d4:	mov	r1, r8
   174d8:	mov	r2, r9
   174dc:	mov	r3, r4
   174e0:	str	r5, [sp]
   174e4:	bl	1725c <argp_failure@@Base+0xcf8>
   174e8:	clz	r0, r0
   174ec:	lsr	r4, r0, #5
   174f0:	ldr	r0, [r6], #16
   174f4:	cmp	r0, #0
   174f8:	bne	174d4 <argp_failure@@Base+0xf70>
   174fc:	b	17504 <argp_failure@@Base+0xfa0>
   17500:	ldr	sl, [sp, #24]
   17504:	cmp	sl, #0
   17508:	cmpne	r4, #0
   1750c:	bne	17520 <argp_failure@@Base+0xfbc>
   17510:	clz	r0, r4
   17514:	lsr	r0, r0, #5
   17518:	sub	sp, fp, #28
   1751c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17520:	ldr	r2, [sp, #20]
   17524:	ldrb	r1, [r7]
   17528:	ldrb	r0, [r2]
   1752c:	cmp	r1, #0
   17530:	beq	17544 <argp_failure@@Base+0xfe0>
   17534:	add	r0, r0, #1
   17538:	mov	r4, #0
   1753c:	strb	r0, [r2]
   17540:	b	17510 <argp_failure@@Base+0xfac>
   17544:	cmp	r0, #0
   17548:	movne	r0, #0
   1754c:	strbne	r0, [r2]
   17550:	b	17510 <argp_failure@@Base+0xfac>
   17554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17558:	add	fp, sp, #28
   1755c:	sub	sp, sp, #28
   17560:	ldr	r5, [r0, #12]
   17564:	mov	r4, r0
   17568:	ldr	r0, [r0, #16]
   1756c:	mov	sl, #0
   17570:	str	r3, [sp, #24]
   17574:	str	r1, [sp, #20]
   17578:	str	r2, [sp, #16]
   1757c:	cmp	r5, #0
   17580:	str	r0, [sp, #8]
   17584:	beq	175c4 <argp_failure@@Base+0x1060>
   17588:	mov	r0, r5
   1758c:	mov	r1, #11
   17590:	mov	r6, r2
   17594:	bl	11520 <strchr@plt>
   17598:	cmp	r0, #0
   1759c:	mov	r8, r0
   175a0:	mov	r9, r0
   175a4:	subne	r8, r8, r5
   175a8:	cmp	r6, #0
   175ac:	movne	r8, #0
   175b0:	cmp	r0, #0
   175b4:	addne	r9, r9, #1
   175b8:	cmp	r6, #0
   175bc:	moveq	r9, r5
   175c0:	b	175cc <argp_failure@@Base+0x1068>
   175c4:	mov	r8, #0
   175c8:	mov	r9, #0
   175cc:	ldr	r0, [r4, #20]
   175d0:	movw	r5, #1
   175d4:	str	r4, [sp, #12]
   175d8:	movt	r5, #512	; 0x200
   175dc:	cmp	r0, #0
   175e0:	beq	176dc <argp_failure@@Base+0x1178>
   175e4:	cmp	r8, #0
   175e8:	beq	175fc <argp_failure@@Base+0x1098>
   175ec:	mov	r0, r9
   175f0:	mov	r1, r8
   175f4:	bl	113c4 <strndup@plt>
   175f8:	mov	r9, r0
   175fc:	ldr	r1, [sp, #20]
   17600:	mov	r0, r4
   17604:	bl	19094 <argp_parse@@Base+0xc68>
   17608:	mov	sl, r0
   1760c:	ldr	r0, [sp, #16]
   17610:	ldr	r3, [r4, #20]
   17614:	mov	r1, r9
   17618:	mov	r2, sl
   1761c:	cmp	r0, #0
   17620:	mov	r0, r5
   17624:	addne	r0, r0, #1
   17628:	blx	r3
   1762c:	mov	r6, r0
   17630:	cmp	r6, #0
   17634:	beq	176e8 <argp_failure@@Base+0x1184>
   17638:	ldr	r0, [sp, #24]
   1763c:	cmp	r0, #0
   17640:	beq	17680 <argp_failure@@Base+0x111c>
   17644:	ldr	r0, [fp, #12]
   17648:	ldr	r2, [r0, #28]
   1764c:	ldr	r1, [r0, #32]
   17650:	cmp	r2, r1
   17654:	bcc	17670 <argp_failure@@Base+0x110c>
   17658:	mov	r1, #1
   1765c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17660:	cmp	r0, #0
   17664:	beq	17680 <argp_failure@@Base+0x111c>
   17668:	ldr	r0, [fp, #12]
   1766c:	ldr	r2, [r0, #28]
   17670:	add	r1, r2, #1
   17674:	str	r1, [r0, #28]
   17678:	mov	r1, #10
   1767c:	strb	r1, [r2]
   17680:	cmp	r8, #0
   17684:	beq	176f4 <argp_failure@@Base+0x1190>
   17688:	cmp	r6, r9
   1768c:	bne	176f4 <argp_failure@@Base+0x1190>
   17690:	ldr	r4, [fp, #12]
   17694:	mov	r7, r5
   17698:	ldr	r0, [r4, #28]
   1769c:	ldr	r1, [r4, #32]
   176a0:	add	r2, r0, r8
   176a4:	cmp	r2, r1
   176a8:	bls	176c4 <argp_failure@@Base+0x1160>
   176ac:	mov	r0, r4
   176b0:	mov	r1, r8
   176b4:	bl	1aaa0 <argp_parse@@Base+0x2674>
   176b8:	cmp	r0, #0
   176bc:	beq	17754 <argp_failure@@Base+0x11f0>
   176c0:	ldr	r0, [r4, #28]
   176c4:	mov	r1, r9
   176c8:	mov	r2, r8
   176cc:	bl	113d0 <memcpy@plt>
   176d0:	ldr	r0, [r4, #28]
   176d4:	add	r0, r0, r8
   176d8:	b	17750 <argp_failure@@Base+0x11ec>
   176dc:	mov	r6, r9
   176e0:	cmp	r6, #0
   176e4:	bne	17638 <argp_failure@@Base+0x10d4>
   176e8:	mov	r4, sl
   176ec:	mov	sl, #0
   176f0:	b	177dc <argp_failure@@Base+0x1278>
   176f4:	mov	r0, r6
   176f8:	mov	r7, r5
   176fc:	bl	11514 <strlen@plt>
   17700:	ldr	r4, [fp, #12]
   17704:	cmp	r0, #0
   17708:	beq	17754 <argp_failure@@Base+0x11f0>
   1770c:	mov	r5, r0
   17710:	ldr	r0, [r4, #28]
   17714:	ldr	r1, [r4, #32]
   17718:	add	r2, r0, r5
   1771c:	cmp	r2, r1
   17720:	bls	1773c <argp_failure@@Base+0x11d8>
   17724:	mov	r0, r4
   17728:	mov	r1, r5
   1772c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17730:	cmp	r0, #0
   17734:	beq	17754 <argp_failure@@Base+0x11f0>
   17738:	ldr	r0, [r4, #28]
   1773c:	mov	r1, r6
   17740:	mov	r2, r5
   17744:	bl	113d0 <memcpy@plt>
   17748:	ldr	r0, [r4, #28]
   1774c:	add	r0, r0, r5
   17750:	str	r0, [r4, #28]
   17754:	ldr	r1, [r4, #24]
   17758:	ldr	r2, [r4, #28]
   1775c:	ldr	r0, [r4, #16]
   17760:	sub	r1, r2, r1
   17764:	cmp	r1, r0
   17768:	bls	17774 <argp_failure@@Base+0x1210>
   1776c:	mov	r0, r4
   17770:	bl	1a570 <argp_parse@@Base+0x2144>
   17774:	ldr	r1, [r4, #20]
   17778:	ldr	r0, [r4, #4]
   1777c:	mov	r5, r7
   17780:	bic	r1, r1, r1, asr #31
   17784:	cmp	r1, r0
   17788:	bls	177c4 <argp_failure@@Base+0x1260>
   1778c:	ldr	r0, [r4, #28]
   17790:	ldr	r1, [r4, #32]
   17794:	cmp	r0, r1
   17798:	bcc	177b4 <argp_failure@@Base+0x1250>
   1779c:	mov	r0, r4
   177a0:	mov	r1, #1
   177a4:	bl	1aaa0 <argp_parse@@Base+0x2674>
   177a8:	cmp	r0, #0
   177ac:	beq	177c4 <argp_failure@@Base+0x1260>
   177b0:	ldr	r0, [r4, #28]
   177b4:	add	r1, r0, #1
   177b8:	str	r1, [r4, #28]
   177bc:	mov	r1, #10
   177c0:	strb	r1, [r0]
   177c4:	mov	r4, sl
   177c8:	mov	sl, #1
   177cc:	cmp	r6, r9
   177d0:	beq	177dc <argp_failure@@Base+0x1278>
   177d4:	mov	r0, r6
   177d8:	bl	19708 <argp_parse@@Base+0x12dc>
   177dc:	cmp	r8, #0
   177e0:	cmpne	r9, #0
   177e4:	bne	179c8 <argp_failure@@Base+0x1464>
   177e8:	ldr	r7, [sp, #16]
   177ec:	ldr	r6, [sp, #24]
   177f0:	ldr	r9, [sp, #20]
   177f4:	ldr	r8, [fp, #12]
   177f8:	cmp	r7, #0
   177fc:	beq	17964 <argp_failure@@Base+0x1400>
   17800:	ldr	r0, [sp, #12]
   17804:	ldr	r3, [r0, #20]
   17808:	cmp	r3, #0
   1780c:	beq	17954 <argp_failure@@Base+0x13f0>
   17810:	add	r0, r5, #3
   17814:	mov	r1, #0
   17818:	mov	r2, r4
   1781c:	blx	r3
   17820:	cmp	r0, #0
   17824:	beq	17954 <argp_failure@@Base+0x13f0>
   17828:	mov	r4, r0
   1782c:	orrs	r0, sl, r6
   17830:	beq	1786c <argp_failure@@Base+0x1308>
   17834:	ldr	r0, [r8, #28]
   17838:	ldr	r1, [r8, #32]
   1783c:	cmp	r0, r1
   17840:	bcc	1785c <argp_failure@@Base+0x12f8>
   17844:	mov	r0, r8
   17848:	mov	r1, #1
   1784c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17850:	cmp	r0, #0
   17854:	beq	1786c <argp_failure@@Base+0x1308>
   17858:	ldr	r0, [r8, #28]
   1785c:	add	r1, r0, #1
   17860:	str	r1, [r8, #28]
   17864:	mov	r1, #10
   17868:	strb	r1, [r0]
   1786c:	mov	r0, r4
   17870:	bl	11514 <strlen@plt>
   17874:	cmp	r0, #0
   17878:	beq	178c4 <argp_failure@@Base+0x1360>
   1787c:	mov	r5, r0
   17880:	ldr	r0, [r8, #28]
   17884:	ldr	r1, [r8, #32]
   17888:	add	r2, r0, r5
   1788c:	cmp	r2, r1
   17890:	bls	178ac <argp_failure@@Base+0x1348>
   17894:	mov	r0, r8
   17898:	mov	r1, r5
   1789c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   178a0:	cmp	r0, #0
   178a4:	beq	178c4 <argp_failure@@Base+0x1360>
   178a8:	ldr	r0, [r8, #28]
   178ac:	mov	r1, r4
   178b0:	mov	r2, r5
   178b4:	bl	113d0 <memcpy@plt>
   178b8:	ldr	r0, [r8, #28]
   178bc:	add	r0, r0, r5
   178c0:	str	r0, [r8, #28]
   178c4:	mov	r0, r4
   178c8:	bl	19708 <argp_parse@@Base+0x12dc>
   178cc:	ldr	r1, [r8, #24]
   178d0:	ldr	r2, [r8, #28]
   178d4:	ldr	r0, [r8, #16]
   178d8:	sub	r1, r2, r1
   178dc:	cmp	r1, r0
   178e0:	bls	178ec <argp_failure@@Base+0x1388>
   178e4:	mov	r0, r8
   178e8:	bl	1a570 <argp_parse@@Base+0x2144>
   178ec:	ldr	r1, [r8, #20]
   178f0:	ldr	r0, [r8, #4]
   178f4:	ldr	r4, [sp, #8]
   178f8:	mov	sl, #1
   178fc:	bic	r1, r1, r1, asr #31
   17900:	cmp	r1, r0
   17904:	bls	17968 <argp_failure@@Base+0x1404>
   17908:	ldr	r0, [r8, #28]
   1790c:	ldr	r1, [r8, #32]
   17910:	cmp	r0, r1
   17914:	bcc	17934 <argp_failure@@Base+0x13d0>
   17918:	mov	r0, r8
   1791c:	mov	r1, #1
   17920:	mov	sl, #1
   17924:	bl	1aaa0 <argp_parse@@Base+0x2674>
   17928:	cmp	r0, #0
   1792c:	beq	17968 <argp_failure@@Base+0x1404>
   17930:	ldr	r0, [r8, #28]
   17934:	add	r1, r0, #1
   17938:	mov	sl, #1
   1793c:	str	r1, [r8, #28]
   17940:	mov	r1, #10
   17944:	strb	r1, [r0]
   17948:	cmp	r4, #0
   1794c:	bne	17970 <argp_failure@@Base+0x140c>
   17950:	b	179bc <argp_failure@@Base+0x1458>
   17954:	ldr	r4, [sp, #8]
   17958:	cmp	r4, #0
   1795c:	bne	17970 <argp_failure@@Base+0x140c>
   17960:	b	179bc <argp_failure@@Base+0x1458>
   17964:	ldr	r4, [sp, #8]
   17968:	cmp	r4, #0
   1796c:	beq	179bc <argp_failure@@Base+0x1458>
   17970:	ldr	r0, [r4]
   17974:	cmp	r0, #0
   17978:	beq	179bc <argp_failure@@Base+0x1458>
   1797c:	mov	r1, r4
   17980:	ldr	r4, [fp, #8]
   17984:	add	r5, r1, #16
   17988:	cmp	r4, #0
   1798c:	cmpne	sl, #0
   17990:	bne	179bc <argp_failure@@Base+0x1458>
   17994:	orrs	r3, sl, r6
   17998:	mov	r1, r9
   1799c:	mov	r2, r7
   179a0:	stm	sp, {r4, r8}
   179a4:	movwne	r3, #1
   179a8:	bl	17554 <argp_failure@@Base+0xff0>
   179ac:	orr	sl, r0, sl
   179b0:	ldr	r0, [r5], #16
   179b4:	cmp	r0, #0
   179b8:	bne	17988 <argp_failure@@Base+0x1424>
   179bc:	mov	r0, sl
   179c0:	sub	sp, fp, #28
   179c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179c8:	ldr	r0, [sp, #12]
   179cc:	ldr	r0, [r0, #20]
   179d0:	cmp	r0, #0
   179d4:	beq	177e8 <argp_failure@@Base+0x1284>
   179d8:	mov	r0, r9
   179dc:	bl	19708 <argp_parse@@Base+0x12dc>
   179e0:	b	177e8 <argp_failure@@Base+0x1284>
   179e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179e8:	add	fp, sp, #28
   179ec:	sub	sp, sp, #28
   179f0:	mov	r7, r0
   179f4:	ldr	r0, [r0, #16]
   179f8:	mov	r6, r1
   179fc:	cmp	r0, #0
   17a00:	beq	17a20 <argp_failure@@Base+0x14bc>
   17a04:	mov	r2, r0
   17a08:	mov	r1, r2
   17a0c:	ldr	r2, [r2, #12]
   17a10:	cmp	r2, #0
   17a14:	bne	17a08 <argp_failure@@Base+0x14a4>
   17a18:	add	r2, r1, #8
   17a1c:	b	17a24 <argp_failure@@Base+0x14c0>
   17a20:	add	r2, r7, #12
   17a24:	ldr	r1, [r6, #16]
   17a28:	ldr	r3, [r2]
   17a2c:	cmp	r1, #0
   17a30:	beq	17a50 <argp_failure@@Base+0x14ec>
   17a34:	mov	r2, r1
   17a38:	mov	r5, r2
   17a3c:	ldr	r2, [r2, #12]
   17a40:	cmp	r2, #0
   17a44:	bne	17a38 <argp_failure@@Base+0x14d4>
   17a48:	add	r2, r5, #8
   17a4c:	b	17a54 <argp_failure@@Base+0x14f0>
   17a50:	add	r2, r6, #12
   17a54:	ldr	r5, [r2]
   17a58:	orr	r4, r5, r3
   17a5c:	sub	r2, r3, r5
   17a60:	cmn	r4, #1
   17a64:	mov	r4, r2
   17a68:	suble	r4, r5, r3
   17a6c:	ands	r3, r5, r3
   17a70:	movmi	r4, r2
   17a74:	cmp	r4, #0
   17a78:	bne	17a98 <argp_failure@@Base+0x1534>
   17a7c:	cmp	r0, #0
   17a80:	mov	r4, r0
   17a84:	movwne	r4, #1
   17a88:	cmp	r1, #0
   17a8c:	subne	r4, r4, #1
   17a90:	cmp	r4, #0
   17a94:	beq	17aa4 <argp_failure@@Base+0x1540>
   17a98:	mov	r0, r4
   17a9c:	sub	sp, fp, #28
   17aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17aa4:	cmp	r0, #0
   17aa8:	beq	17b18 <argp_failure@@Base+0x15b4>
   17aac:	ldr	r3, [r1, #20]
   17ab0:	ldr	r2, [r0, #20]
   17ab4:	cmp	r2, r3
   17ab8:	ble	17ae0 <argp_failure@@Base+0x157c>
   17abc:	ldr	r0, [r0, #12]
   17ac0:	ldr	r2, [r0, #20]
   17ac4:	cmp	r2, r3
   17ac8:	bgt	17abc <argp_failure@@Base+0x1558>
   17acc:	bl	17f08 <argp_failure@@Base+0x19a4>
   17ad0:	cmp	r0, #0
   17ad4:	mov	r4, r0
   17ad8:	movweq	r4, #1
   17adc:	b	17a98 <argp_failure@@Base+0x1534>
   17ae0:	bge	17b08 <argp_failure@@Base+0x15a4>
   17ae4:	ldr	r1, [r1, #12]
   17ae8:	ldr	r3, [r1, #20]
   17aec:	cmp	r2, r3
   17af0:	blt	17ae4 <argp_failure@@Base+0x1580>
   17af4:	bl	17f08 <argp_failure@@Base+0x19a4>
   17af8:	cmp	r0, #0
   17afc:	mov	r4, r0
   17b00:	mvneq	r4, #0
   17b04:	b	17a98 <argp_failure@@Base+0x1534>
   17b08:	bl	17f08 <argp_failure@@Base+0x19a4>
   17b0c:	mov	r4, r0
   17b10:	cmp	r0, #0
   17b14:	bne	17a98 <argp_failure@@Base+0x1534>
   17b18:	ldr	r0, [r7, #12]
   17b1c:	ldr	r1, [r6, #12]
   17b20:	orr	r2, r1, r0
   17b24:	sub	r3, r0, r1
   17b28:	cmn	r2, #1
   17b2c:	mov	r4, r3
   17b30:	suble	r4, r1, r0
   17b34:	ands	r0, r1, r0
   17b38:	movmi	r4, r3
   17b3c:	cmp	r4, #0
   17b40:	bne	17a98 <argp_failure@@Base+0x1534>
   17b44:	ldr	r3, [r7, #4]
   17b48:	mov	sl, #0
   17b4c:	cmp	r3, #0
   17b50:	beq	17b90 <argp_failure@@Base+0x162c>
   17b54:	ldr	r0, [r7]
   17b58:	mov	r1, r3
   17b5c:	add	r0, r0, #12
   17b60:	b	17b70 <argp_failure@@Base+0x160c>
   17b64:	add	r0, r0, #24
   17b68:	subs	r1, r1, #1
   17b6c:	beq	17b8c <argp_failure@@Base+0x1628>
   17b70:	ldr	sl, [r0, #-12]
   17b74:	cmp	sl, #0
   17b78:	beq	17b64 <argp_failure@@Base+0x1600>
   17b7c:	ldrb	r2, [r0]
   17b80:	tst	r2, #2
   17b84:	bne	17b64 <argp_failure@@Base+0x1600>
   17b88:	b	17b90 <argp_failure@@Base+0x162c>
   17b8c:	mov	sl, #0
   17b90:	ldr	r8, [r6, #4]
   17b94:	cmp	r8, #0
   17b98:	beq	17bd4 <argp_failure@@Base+0x1670>
   17b9c:	ldr	r0, [r6]
   17ba0:	mov	r1, r8
   17ba4:	add	r0, r0, #12
   17ba8:	b	17bb8 <argp_failure@@Base+0x1654>
   17bac:	add	r0, r0, #24
   17bb0:	subs	r1, r1, #1
   17bb4:	beq	17bd4 <argp_failure@@Base+0x1670>
   17bb8:	ldr	r5, [r0, #-12]
   17bbc:	cmp	r5, #0
   17bc0:	beq	17bac <argp_failure@@Base+0x1648>
   17bc4:	ldrb	r2, [r0]
   17bc8:	tst	r2, #2
   17bcc:	bne	17bac <argp_failure@@Base+0x1648>
   17bd0:	b	17bd8 <argp_failure@@Base+0x1674>
   17bd4:	mov	r5, #0
   17bd8:	ldr	r4, [r7]
   17bdc:	mov	r9, #0
   17be0:	cmp	sl, #0
   17be4:	str	r3, [sp, #20]
   17be8:	str	r8, [sp, #16]
   17bec:	ldr	r1, [r4, #12]
   17bf0:	str	r4, [sp, #4]
   17bf4:	beq	17c5c <argp_failure@@Base+0x16f8>
   17bf8:	ands	r0, r1, #8
   17bfc:	beq	17c5c <argp_failure@@Base+0x16f8>
   17c00:	str	r1, [sp, #24]
   17c04:	bl	114d8 <__ctype_b_loc@plt>
   17c08:	ldrb	r1, [sl]
   17c0c:	ldr	r0, [r0]
   17c10:	add	r2, r0, r1, lsl #1
   17c14:	ldrb	r2, [r2, #1]
   17c18:	tst	r2, #32
   17c1c:	beq	17c28 <argp_failure@@Base+0x16c4>
   17c20:	ldrb	r1, [sl, #1]!
   17c24:	b	17c10 <argp_failure@@Base+0x16ac>
   17c28:	subs	r4, r1, #45	; 0x2d
   17c2c:	movwne	r4, #1
   17c30:	cmp	r1, #0
   17c34:	beq	17c54 <argp_failure@@Base+0x16f0>
   17c38:	uxtb	r1, r1
   17c3c:	ldrb	r1, [r0, r1, lsl #1]
   17c40:	tst	r1, #8
   17c44:	bne	17c54 <argp_failure@@Base+0x16f0>
   17c48:	ldrb	r1, [sl, #1]!
   17c4c:	cmp	r1, #0
   17c50:	bne	17c38 <argp_failure@@Base+0x16d4>
   17c54:	ldr	r1, [sp, #24]
   17c58:	b	17c60 <argp_failure@@Base+0x16fc>
   17c5c:	mov	r4, #0
   17c60:	ldr	r0, [r6]
   17c64:	cmp	r5, #0
   17c68:	str	r0, [sp, #8]
   17c6c:	ldr	r0, [r0, #12]
   17c70:	str	r0, [sp, #12]
   17c74:	andsne	r0, r0, #8
   17c78:	beq	17cd4 <argp_failure@@Base+0x1770>
   17c7c:	mov	r8, r1
   17c80:	bl	114d8 <__ctype_b_loc@plt>
   17c84:	ldrb	r1, [r5]
   17c88:	ldr	r0, [r0]
   17c8c:	add	r2, r0, r1, lsl #1
   17c90:	ldrb	r2, [r2, #1]
   17c94:	tst	r2, #32
   17c98:	beq	17ca4 <argp_failure@@Base+0x1740>
   17c9c:	ldrb	r1, [r5, #1]!
   17ca0:	b	17c8c <argp_failure@@Base+0x1728>
   17ca4:	subs	r9, r1, #45	; 0x2d
   17ca8:	movwne	r9, #1
   17cac:	cmp	r1, #0
   17cb0:	beq	17cd0 <argp_failure@@Base+0x176c>
   17cb4:	uxtb	r1, r1
   17cb8:	ldrb	r1, [r0, r1, lsl #1]
   17cbc:	tst	r1, #8
   17cc0:	bne	17cd0 <argp_failure@@Base+0x176c>
   17cc4:	ldrb	r1, [r5, #1]!
   17cc8:	cmp	r1, #0
   17ccc:	bne	17cb4 <argp_failure@@Base+0x1750>
   17cd0:	mov	r1, r8
   17cd4:	subs	r4, r4, r9
   17cd8:	bne	17a98 <argp_failure@@Base+0x1534>
   17cdc:	ldr	r0, [sp, #20]
   17ce0:	mov	r2, #0
   17ce4:	cmp	r0, #0
   17ce8:	beq	17d80 <argp_failure@@Base+0x181c>
   17cec:	sub	r8, r0, #1
   17cf0:	ldr	r0, [sp, #4]
   17cf4:	ldr	r4, [r7, #8]
   17cf8:	add	r9, r0, #36	; 0x24
   17cfc:	tst	r1, #8
   17d00:	beq	17d28 <argp_failure@@Base+0x17c4>
   17d04:	mov	r2, #0
   17d08:	cmp	r8, #0
   17d0c:	beq	17d80 <argp_failure@@Base+0x181c>
   17d10:	cmp	r2, #0
   17d14:	bne	17d80 <argp_failure@@Base+0x181c>
   17d18:	ldr	r1, [r9], #24
   17d1c:	sub	r8, r8, #1
   17d20:	tst	r1, #8
   17d24:	bne	17d04 <argp_failure@@Base+0x17a0>
   17d28:	ldr	r7, [r9, #-32]	; 0xffffffe0
   17d2c:	sub	r0, r7, #1
   17d30:	cmp	r0, #254	; 0xfe
   17d34:	bhi	17d04 <argp_failure@@Base+0x17a0>
   17d38:	str	r1, [sp, #24]
   17d3c:	bl	114d8 <__ctype_b_loc@plt>
   17d40:	ldr	r0, [r0]
   17d44:	add	r0, r0, r7, lsl #1
   17d48:	ldrb	r0, [r0, #1]
   17d4c:	tst	r0, #64	; 0x40
   17d50:	beq	17d04 <argp_failure@@Base+0x17a0>
   17d54:	ldrb	r0, [r4]
   17d58:	mov	r2, r7
   17d5c:	cmp	r7, r0
   17d60:	bne	17d04 <argp_failure@@Base+0x17a0>
   17d64:	ldr	r0, [sp, #24]
   17d68:	add	r4, r4, #1
   17d6c:	tst	r0, #2
   17d70:	mov	r0, #0
   17d74:	movne	r2, r0
   17d78:	cmp	r8, #0
   17d7c:	bne	17d10 <argp_failure@@Base+0x17ac>
   17d80:	ldr	r3, [sp, #16]
   17d84:	mov	r9, #0
   17d88:	mov	r0, r2
   17d8c:	str	r2, [sp, #24]
   17d90:	cmp	r3, #0
   17d94:	beq	17e30 <argp_failure@@Base+0x18cc>
   17d98:	ldr	r0, [sp, #8]
   17d9c:	ldr	r6, [r6, #8]
   17da0:	ldr	r4, [sp, #12]
   17da4:	sub	r7, r3, #1
   17da8:	add	r8, r0, #36	; 0x24
   17dac:	tst	r4, #8
   17db0:	bne	17dbc <argp_failure@@Base+0x1858>
   17db4:	b	17de0 <argp_failure@@Base+0x187c>
   17db8:	ldr	r2, [sp, #24]
   17dbc:	mov	r9, #0
   17dc0:	cmp	r7, #0
   17dc4:	beq	17e30 <argp_failure@@Base+0x18cc>
   17dc8:	cmp	r9, #0
   17dcc:	bne	17e30 <argp_failure@@Base+0x18cc>
   17dd0:	ldr	r4, [r8], #24
   17dd4:	sub	r7, r7, #1
   17dd8:	tst	r4, #8
   17ddc:	bne	17dbc <argp_failure@@Base+0x1858>
   17de0:	ldr	r9, [r8, #-32]	; 0xffffffe0
   17de4:	sub	r0, r9, #1
   17de8:	cmp	r0, #254	; 0xfe
   17dec:	bhi	17dbc <argp_failure@@Base+0x1858>
   17df0:	bl	114d8 <__ctype_b_loc@plt>
   17df4:	ldr	r0, [r0]
   17df8:	add	r0, r0, r9, lsl #1
   17dfc:	ldrb	r0, [r0, #1]
   17e00:	tst	r0, #64	; 0x40
   17e04:	beq	17db8 <argp_failure@@Base+0x1854>
   17e08:	ldrb	r0, [r6]
   17e0c:	ldr	r2, [sp, #24]
   17e10:	cmp	r9, r0
   17e14:	bne	17dbc <argp_failure@@Base+0x1858>
   17e18:	tst	r4, #2
   17e1c:	mov	r0, #0
   17e20:	add	r6, r6, #1
   17e24:	movne	r9, r0
   17e28:	cmp	r7, #0
   17e2c:	bne	17dc8 <argp_failure@@Base+0x1864>
   17e30:	tst	r2, #255	; 0xff
   17e34:	mov	r6, r2
   17e38:	bne	17e50 <argp_failure@@Base+0x18ec>
   17e3c:	cmp	sl, #0
   17e40:	beq	17e4c <argp_failure@@Base+0x18e8>
   17e44:	ldrb	r6, [sl]
   17e48:	b	17e50 <argp_failure@@Base+0x18ec>
   17e4c:	mov	r6, #0
   17e50:	tst	r9, #255	; 0xff
   17e54:	mov	r7, r9
   17e58:	bne	17e70 <argp_failure@@Base+0x190c>
   17e5c:	cmp	r5, #0
   17e60:	beq	17e6c <argp_failure@@Base+0x1908>
   17e64:	ldrb	r7, [r5]
   17e68:	b	17e70 <argp_failure@@Base+0x190c>
   17e6c:	mov	r7, #0
   17e70:	bl	114c0 <__ctype_tolower_loc@plt>
   17e74:	ldr	r2, [r0]
   17e78:	uxtb	r0, r7
   17e7c:	uxtb	r1, r6
   17e80:	ldr	r3, [r2, r0, lsl #2]
   17e84:	ldr	r2, [r2, r1, lsl #2]
   17e88:	subs	r4, r2, r3
   17e8c:	subseq	r4, r0, r1
   17e90:	bne	17a98 <argp_failure@@Base+0x1534>
   17e94:	ldr	r0, [sp, #24]
   17e98:	uxtb	r4, r0
   17e9c:	cmp	r4, #0
   17ea0:	movwne	r4, #1
   17ea4:	tst	r9, #255	; 0xff
   17ea8:	subne	r4, r4, #1
   17eac:	cmp	r4, #0
   17eb0:	bne	17a98 <argp_failure@@Base+0x1534>
   17eb4:	ldr	r0, [sp, #24]
   17eb8:	tst	r0, #255	; 0xff
   17ebc:	beq	17ec8 <argp_failure@@Base+0x1964>
   17ec0:	mov	r4, #0
   17ec4:	b	17a98 <argp_failure@@Base+0x1534>
   17ec8:	cmp	sl, #0
   17ecc:	mov	r4, sl
   17ed0:	movwne	r4, #1
   17ed4:	cmp	r5, #0
   17ed8:	subne	r4, r4, #1
   17edc:	cmp	r4, #0
   17ee0:	bne	17a98 <argp_failure@@Base+0x1534>
   17ee4:	cmp	sl, #0
   17ee8:	beq	17ec0 <argp_failure@@Base+0x195c>
   17eec:	mov	r0, sl
   17ef0:	mov	r1, r5
   17ef4:	bl	11448 <strcasecmp@plt>
   17ef8:	cmp	r0, #0
   17efc:	mov	r4, r0
   17f00:	moveq	r4, #0
   17f04:	b	17a98 <argp_failure@@Base+0x1534>
   17f08:	push	{r4, r5, fp, lr}
   17f0c:	add	fp, sp, #8
   17f10:	mov	r4, r1
   17f14:	mov	r5, r0
   17f18:	ldr	r1, [r1, #12]
   17f1c:	ldr	r0, [r0, #12]
   17f20:	cmp	r0, r1
   17f24:	beq	17f38 <argp_failure@@Base+0x19d4>
   17f28:	bl	17f08 <argp_failure@@Base+0x19a4>
   17f2c:	cmp	r0, #0
   17f30:	beq	17f38 <argp_failure@@Base+0x19d4>
   17f34:	pop	{r4, r5, fp, pc}
   17f38:	ldr	r1, [r5, #8]
   17f3c:	ldr	r2, [r4, #8]
   17f40:	orr	r0, r2, r1
   17f44:	sub	r3, r1, r2
   17f48:	cmn	r0, #1
   17f4c:	mov	r0, r3
   17f50:	suble	r0, r2, r1
   17f54:	ands	r1, r2, r1
   17f58:	movmi	r0, r3
   17f5c:	cmp	r0, #0
   17f60:	popne	{r4, r5, fp, pc}
   17f64:	ldr	r0, [r5, #4]
   17f68:	ldr	r1, [r4, #4]
   17f6c:	sub	r0, r1, r0
   17f70:	pop	{r4, r5, fp, pc}
   17f74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17f78:	add	fp, sp, #24
   17f7c:	mov	r4, r0
   17f80:	ldr	r0, [r1, #12]
   17f84:	mov	r5, r1
   17f88:	cmp	r0, #0
   17f8c:	beq	18008 <argp_failure@@Base+0x1aa4>
   17f90:	ldr	r1, [r5, #8]
   17f94:	ldr	r0, [r5]
   17f98:	ldr	r6, [r1]
   17f9c:	ldr	r7, [r0, #16]
   17fa0:	cmp	r6, #0
   17fa4:	ldrne	r1, [r1, #4]
   17fa8:	cmpne	r1, #0
   17fac:	bne	18050 <argp_failure@@Base+0x1aec>
   17fb0:	cmp	r7, #0
   17fb4:	beq	180f0 <argp_failure@@Base+0x1b8c>
   17fb8:	ldr	r0, [r7]
   17fbc:	cmp	r0, #0
   17fc0:	beq	180f0 <argp_failure@@Base+0x1b8c>
   17fc4:	ldrb	r1, [r0]
   17fc8:	cmp	r1, #0
   17fcc:	beq	180f0 <argp_failure@@Base+0x1b8c>
   17fd0:	cmp	r6, #0
   17fd4:	beq	180b4 <argp_failure@@Base+0x1b50>
   17fd8:	ldr	r1, [r6, #16]
   17fdc:	cmp	r1, r7
   17fe0:	beq	180f0 <argp_failure@@Base+0x1b8c>
   17fe4:	cmp	r1, #0
   17fe8:	beq	180a8 <argp_failure@@Base+0x1b44>
   17fec:	ldr	r1, [r1, #12]
   17ff0:	cmp	r1, r7
   17ff4:	cmpne	r1, #0
   17ff8:	bne	17fec <argp_failure@@Base+0x1a88>
   17ffc:	cmp	r1, r7
   18000:	bne	180b4 <argp_failure@@Base+0x1b50>
   18004:	b	180f0 <argp_failure@@Base+0x1b8c>
   18008:	ldr	r6, [r5, #4]
   1800c:	ldr	r0, [r6, #28]
   18010:	ldr	r1, [r6, #32]
   18014:	add	r2, r0, #2
   18018:	cmp	r2, r1
   1801c:	bls	18038 <argp_failure@@Base+0x1ad4>
   18020:	mov	r0, r6
   18024:	mov	r1, #2
   18028:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1802c:	cmp	r0, #0
   18030:	beq	180f8 <argp_failure@@Base+0x1b94>
   18034:	ldr	r0, [r6, #28]
   18038:	movw	r1, #8236	; 0x202c
   1803c:	strh	r1, [r0]
   18040:	ldr	r0, [r6, #28]
   18044:	add	r0, r0, #2
   18048:	str	r0, [r6, #28]
   1804c:	b	180f8 <argp_failure@@Base+0x1b94>
   18050:	ldr	r1, [r6, #12]
   18054:	ldr	r0, [r0, #12]
   18058:	cmp	r0, r1
   1805c:	beq	17fb0 <argp_failure@@Base+0x1a4c>
   18060:	ldr	r8, [r5, #4]
   18064:	ldr	r0, [r8, #28]
   18068:	ldr	r1, [r8, #32]
   1806c:	cmp	r0, r1
   18070:	bcc	1808c <argp_failure@@Base+0x1b28>
   18074:	mov	r0, r8
   18078:	mov	r1, #1
   1807c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   18080:	cmp	r0, #0
   18084:	beq	17fb0 <argp_failure@@Base+0x1a4c>
   18088:	ldr	r0, [r8, #28]
   1808c:	add	r1, r0, #1
   18090:	str	r1, [r8, #28]
   18094:	mov	r1, #10
   18098:	strb	r1, [r0]
   1809c:	cmp	r7, #0
   180a0:	bne	17fb8 <argp_failure@@Base+0x1a54>
   180a4:	b	180f0 <argp_failure@@Base+0x1b8c>
   180a8:	mov	r1, #0
   180ac:	cmp	r1, r7
   180b0:	beq	180f0 <argp_failure@@Base+0x1b8c>
   180b4:	ldr	r1, [r5, #4]
   180b8:	mov	r2, r5
   180bc:	ldr	r8, [r1, #12]
   180c0:	ldr	r1, [r7, #16]
   180c4:	bl	18180 <argp_failure@@Base+0x1c1c>
   180c8:	ldr	r6, [r5, #4]
   180cc:	ldr	r1, [r6, #24]
   180d0:	ldr	r2, [r6, #28]
   180d4:	ldr	r0, [r6, #16]
   180d8:	sub	r1, r2, r1
   180dc:	cmp	r1, r0
   180e0:	bls	180ec <argp_failure@@Base+0x1b88>
   180e4:	mov	r0, r6
   180e8:	bl	1a570 <argp_parse@@Base+0x2144>
   180ec:	str	r8, [r6, #12]
   180f0:	mov	r0, #0
   180f4:	str	r0, [r5, #12]
   180f8:	ldr	r5, [r5, #4]
   180fc:	ldr	r1, [r5, #24]
   18100:	ldr	r2, [r5, #28]
   18104:	ldr	r0, [r5, #16]
   18108:	sub	r1, r2, r1
   1810c:	cmp	r1, r0
   18110:	bls	1811c <argp_failure@@Base+0x1bb8>
   18114:	mov	r0, r5
   18118:	bl	1a570 <argp_parse@@Base+0x2144>
   1811c:	ldr	r0, [r5, #20]
   18120:	cmp	r0, #0
   18124:	subgt	r4, r4, r0
   18128:	cmp	r4, #1
   1812c:	blt	1817c <argp_failure@@Base+0x1c18>
   18130:	mov	r6, #32
   18134:	b	1814c <argp_failure@@Base+0x1be8>
   18138:	add	r1, r0, #1
   1813c:	str	r1, [r5, #28]
   18140:	strb	r6, [r0]
   18144:	cmp	r4, #0
   18148:	ble	1817c <argp_failure@@Base+0x1c18>
   1814c:	ldr	r0, [r5, #28]
   18150:	ldr	r1, [r5, #32]
   18154:	sub	r4, r4, #1
   18158:	cmp	r0, r1
   1815c:	bcc	18138 <argp_failure@@Base+0x1bd4>
   18160:	mov	r0, r5
   18164:	mov	r1, #1
   18168:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1816c:	cmp	r0, #0
   18170:	beq	18144 <argp_failure@@Base+0x1be0>
   18174:	ldr	r0, [r5, #28]
   18178:	b	18138 <argp_failure@@Base+0x1bd4>
   1817c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18184:	add	fp, sp, #28
   18188:	sub	sp, sp, #4
   1818c:	mov	r9, r2
   18190:	mov	r8, r0
   18194:	cmp	r1, #0
   18198:	mov	r6, r0
   1819c:	beq	181dc <argp_failure@@Base+0x1c78>
   181a0:	ldr	r0, [r1, #20]
   181a4:	mov	r4, r1
   181a8:	mov	r6, r8
   181ac:	cmp	r0, #0
   181b0:	beq	181dc <argp_failure@@Base+0x1c78>
   181b4:	ldr	r1, [r9, #16]
   181b8:	mov	r0, r4
   181bc:	bl	19094 <argp_parse@@Base+0xc68>
   181c0:	ldr	r3, [r4, #20]
   181c4:	mov	r2, r0
   181c8:	movw	r0, #3
   181cc:	mov	r1, r8
   181d0:	movt	r0, #512	; 0x200
   181d4:	blx	r3
   181d8:	mov	r6, r0
   181dc:	cmp	r6, #0
   181e0:	beq	1840c <argp_failure@@Base+0x1ea8>
   181e4:	ldrb	r0, [r6]
   181e8:	cmp	r0, #0
   181ec:	beq	18400 <argp_failure@@Base+0x1e9c>
   181f0:	ldr	r0, [r9, #8]
   181f4:	ldr	r0, [r0]
   181f8:	cmp	r0, #0
   181fc:	beq	1823c <argp_failure@@Base+0x1cd8>
   18200:	ldr	r4, [r9, #4]
   18204:	ldr	r0, [r4, #28]
   18208:	ldr	r1, [r4, #32]
   1820c:	cmp	r0, r1
   18210:	bcc	1822c <argp_failure@@Base+0x1cc8>
   18214:	mov	r0, r4
   18218:	mov	r1, #1
   1821c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   18220:	cmp	r0, #0
   18224:	beq	1823c <argp_failure@@Base+0x1cd8>
   18228:	ldr	r0, [r4, #28]
   1822c:	add	r1, r0, #1
   18230:	str	r1, [r4, #28]
   18234:	mov	r1, #10
   18238:	strb	r1, [r0]
   1823c:	ldr	r7, [r9, #4]
   18240:	movw	sl, #58848	; 0xe5e0
   18244:	movt	sl, #2
   18248:	ldr	r4, [sl, #24]
   1824c:	ldr	r1, [r7, #24]
   18250:	ldr	r2, [r7, #28]
   18254:	ldr	r0, [r7, #16]
   18258:	sub	r1, r2, r1
   1825c:	cmp	r1, r0
   18260:	bls	1826c <argp_failure@@Base+0x1d08>
   18264:	mov	r0, r7
   18268:	bl	1a570 <argp_parse@@Base+0x2144>
   1826c:	ldr	r0, [r7, #20]
   18270:	cmp	r0, #0
   18274:	subgt	r4, r4, r0
   18278:	cmp	r4, #1
   1827c:	blt	182cc <argp_failure@@Base+0x1d68>
   18280:	mov	r5, #32
   18284:	b	1829c <argp_failure@@Base+0x1d38>
   18288:	add	r1, r0, #1
   1828c:	str	r1, [r7, #28]
   18290:	strb	r5, [r0]
   18294:	cmp	r4, #0
   18298:	ble	182cc <argp_failure@@Base+0x1d68>
   1829c:	ldr	r0, [r7, #28]
   182a0:	ldr	r1, [r7, #32]
   182a4:	sub	r4, r4, #1
   182a8:	cmp	r0, r1
   182ac:	bcc	18288 <argp_failure@@Base+0x1d24>
   182b0:	mov	r0, r7
   182b4:	mov	r1, #1
   182b8:	bl	1aaa0 <argp_parse@@Base+0x2674>
   182bc:	cmp	r0, #0
   182c0:	beq	18294 <argp_failure@@Base+0x1d30>
   182c4:	ldr	r0, [r7, #28]
   182c8:	b	18288 <argp_failure@@Base+0x1d24>
   182cc:	ldr	r4, [r9, #4]
   182d0:	ldr	r5, [sl, #24]
   182d4:	ldr	r1, [r4, #24]
   182d8:	ldr	r2, [r4, #28]
   182dc:	ldr	r0, [r4, #16]
   182e0:	mov	r7, r4
   182e4:	sub	r1, r2, r1
   182e8:	mov	r2, sl
   182ec:	mov	sl, r5
   182f0:	cmp	r1, r0
   182f4:	bls	1831c <argp_failure@@Base+0x1db8>
   182f8:	mov	r0, r4
   182fc:	mov	r7, r2
   18300:	bl	1a570 <argp_parse@@Base+0x2144>
   18304:	ldr	sl, [r7, #24]
   18308:	ldr	r7, [r9, #4]
   1830c:	ldr	r1, [r7, #24]
   18310:	ldr	r2, [r7, #28]
   18314:	ldr	r0, [r7, #16]
   18318:	sub	r1, r2, r1
   1831c:	str	r5, [r4, #4]
   18320:	cmp	r1, r0
   18324:	mov	r5, r7
   18328:	bls	18338 <argp_failure@@Base+0x1dd4>
   1832c:	mov	r0, r7
   18330:	bl	1a570 <argp_parse@@Base+0x2144>
   18334:	ldr	r5, [r9, #4]
   18338:	mov	r0, r6
   1833c:	str	sl, [r7, #12]
   18340:	bl	11514 <strlen@plt>
   18344:	cmp	r0, #0
   18348:	beq	18394 <argp_failure@@Base+0x1e30>
   1834c:	mov	r4, r0
   18350:	ldr	r0, [r5, #28]
   18354:	ldr	r1, [r5, #32]
   18358:	add	r2, r0, r4
   1835c:	cmp	r2, r1
   18360:	bls	1837c <argp_failure@@Base+0x1e18>
   18364:	mov	r0, r5
   18368:	mov	r1, r4
   1836c:	bl	1aaa0 <argp_parse@@Base+0x2674>
   18370:	cmp	r0, #0
   18374:	beq	18394 <argp_failure@@Base+0x1e30>
   18378:	ldr	r0, [r5, #28]
   1837c:	mov	r1, r6
   18380:	mov	r2, r4
   18384:	bl	113d0 <memcpy@plt>
   18388:	ldr	r0, [r5, #28]
   1838c:	add	r0, r0, r4
   18390:	str	r0, [r5, #28]
   18394:	ldr	r5, [r9, #4]
   18398:	ldr	r2, [r5, #24]
   1839c:	ldr	r0, [r5, #28]
   183a0:	ldr	r1, [r5, #16]
   183a4:	mov	r4, r5
   183a8:	sub	r2, r0, r2
   183ac:	cmp	r2, r1
   183b0:	bls	183c4 <argp_failure@@Base+0x1e60>
   183b4:	mov	r0, r5
   183b8:	bl	1a570 <argp_parse@@Base+0x2144>
   183bc:	ldr	r4, [r9, #4]
   183c0:	ldr	r0, [r4, #28]
   183c4:	mov	r1, #0
   183c8:	str	r1, [r5, #4]
   183cc:	ldr	r1, [r4, #32]
   183d0:	cmp	r0, r1
   183d4:	bcc	183f0 <argp_failure@@Base+0x1e8c>
   183d8:	mov	r0, r4
   183dc:	mov	r1, #1
   183e0:	bl	1aaa0 <argp_parse@@Base+0x2674>
   183e4:	cmp	r0, #0
   183e8:	beq	18400 <argp_failure@@Base+0x1e9c>
   183ec:	ldr	r0, [r4, #28]
   183f0:	add	r1, r0, #1
   183f4:	str	r1, [r4, #28]
   183f8:	mov	r1, #10
   183fc:	strb	r1, [r0]
   18400:	ldr	r0, [r9, #8]
   18404:	mov	r1, #1
   18408:	str	r1, [r0, #4]
   1840c:	cmp	r6, r8
   18410:	beq	18424 <argp_failure@@Base+0x1ec0>
   18414:	mov	r0, r6
   18418:	sub	sp, fp, #28
   1841c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18420:	b	19708 <argp_parse@@Base+0x12dc>
   18424:	sub	sp, fp, #28
   18428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001842c <argp_parse@@Base>:
   1842c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18430:	add	fp, sp, #28
   18434:	sub	sp, sp, #212	; 0xd4
   18438:	mov	r4, r3
   1843c:	mov	r6, r2
   18440:	mov	r7, r1
   18444:	mov	r5, r0
   18448:	tst	r3, #1
   1844c:	bne	1848c <argp_parse@@Base+0x60>
   18450:	movw	r0, #58916	; 0xe624
   18454:	movt	r0, #2
   18458:	ldr	r1, [r0]
   1845c:	cmp	r1, #0
   18460:	bne	1846c <argp_parse@@Base+0x40>
   18464:	ldr	r1, [r6]
   18468:	str	r1, [r0]
   1846c:	movw	r8, #58912	; 0xe620
   18470:	movt	r8, #2
   18474:	ldr	r0, [r8]
   18478:	cmp	r0, #0
   1847c:	bne	1848c <argp_parse@@Base+0x60>
   18480:	ldr	r0, [r6]
   18484:	bl	19684 <argp_parse@@Base+0x1258>
   18488:	str	r0, [r8]
   1848c:	tst	r4, #16
   18490:	str	r6, [fp, #-228]	; 0xffffff1c
   18494:	str	r7, [fp, #-232]	; 0xffffff18
   18498:	bne	18548 <argp_parse@@Base+0x11c>
   1849c:	mov	r1, sp
   184a0:	sub	r3, r1, #64	; 0x40
   184a4:	mov	sp, r3
   184a8:	mov	r2, sp
   184ac:	sub	r0, r2, #32
   184b0:	mov	sp, r0
   184b4:	vmov.i32	q8, #0	; 0x00000000
   184b8:	sub	r2, r2, #20
   184bc:	cmp	r5, #0
   184c0:	vst1.32	{d16-d17}, [r2]
   184c4:	mov	r2, r0
   184c8:	vst1.64	{d16-d17}, [r2]!
   184cc:	str	r3, [r2]
   184d0:	sub	r2, r1, #32
   184d4:	sub	r1, r1, #48	; 0x30
   184d8:	vst1.64	{d16-d17}, [r2]
   184dc:	vst1.64	{d16-d17}, [r1]
   184e0:	mov	r1, #48	; 0x30
   184e4:	mov	r2, r3
   184e8:	vst1.64	{d16-d17}, [r2], r1
   184ec:	vst1.64	{d16-d17}, [r2]
   184f0:	movw	r2, #53744	; 0xd1f0
   184f4:	strne	r5, [r3], #16
   184f8:	movt	r2, #1
   184fc:	mov	r1, r3
   18500:	str	r2, [r1], #16
   18504:	movw	r2, #59108	; 0xe6e4
   18508:	movt	r2, #2
   1850c:	ldr	r2, [r2]
   18510:	cmp	r2, #0
   18514:	bne	1852c <argp_parse@@Base+0x100>
   18518:	movw	r2, #59024	; 0xe690
   1851c:	movt	r2, #2
   18520:	ldr	r2, [r2]
   18524:	cmp	r2, #0
   18528:	beq	1853c <argp_parse@@Base+0x110>
   1852c:	movw	r2, #53772	; 0xd20c
   18530:	mov	r3, r1
   18534:	movt	r2, #1
   18538:	str	r2, [r1]
   1853c:	mov	r1, #0
   18540:	str	r1, [r3, #16]
   18544:	b	1854c <argp_parse@@Base+0x120>
   18548:	mov	r0, r5
   1854c:	vmov.i32	q8, #0	; 0x00000000
   18550:	sub	r9, fp, #96	; 0x60
   18554:	mov	r7, #12
   18558:	mov	r5, #0
   1855c:	cmp	r0, #0
   18560:	str	r4, [fp, #-224]	; 0xffffff20
   18564:	str	r0, [fp, #-236]	; 0xffffff14
   18568:	mov	r1, r9
   1856c:	str	r5, [fp, #-52]	; 0xffffffcc
   18570:	str	r5, [fp, #-56]	; 0xffffffc8
   18574:	str	r5, [fp, #-60]	; 0xffffffc4
   18578:	vst1.64	{d16-d17}, [r1], r7
   1857c:	vst1.32	{d16-d17}, [r1]
   18580:	mov	r1, #1
   18584:	bic	r3, r1, r4, lsr #2
   18588:	str	r3, [fp, #-64]	; 0xffffffc0
   1858c:	beq	185c4 <argp_parse@@Base+0x198>
   18590:	sub	r1, fp, #64	; 0x40
   18594:	bl	1927c <argp_parse@@Base+0xe50>
   18598:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1859c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   185a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   185a4:	mov	r6, #16
   185a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   185ac:	add	r2, r2, r2, lsl #3
   185b0:	add	r1, r6, r1, lsl #4
   185b4:	mov	r6, #36	; 0x24
   185b8:	lsl	r5, r0, #2
   185bc:	add	r8, r6, r2, lsl #2
   185c0:	b	185cc <argp_parse@@Base+0x1a0>
   185c4:	mov	r8, #36	; 0x24
   185c8:	mov	r1, #16
   185cc:	add	r4, r8, r5
   185d0:	add	sl, r4, r1
   185d4:	add	r0, r3, sl
   185d8:	add	r0, r0, #1
   185dc:	bl	1a420 <argp_parse@@Base+0x1ff4>
   185e0:	cmp	r0, #0
   185e4:	str	r0, [fp, #-100]	; 0xffffff9c
   185e8:	beq	1901c <argp_parse@@Base+0xbf0>
   185ec:	mov	r6, r0
   185f0:	mov	r0, #12
   185f4:	sub	r1, fp, #220	; 0xdc
   185f8:	mov	r2, r5
   185fc:	vld1.64	{d16-d17}, [r9], r0
   18600:	add	r0, r1, #20
   18604:	add	r7, r6, r8
   18608:	add	r8, r6, r4
   1860c:	add	r4, r6, sl
   18610:	vld1.32	{d18-d19}, [r9]
   18614:	mov	r9, r1
   18618:	vst1.32	{d16-d17}, [r0]
   1861c:	add	r0, r1, #32
   18620:	mov	r1, #0
   18624:	vst1.32	{d18-d19}, [r0]
   18628:	mov	r0, #1
   1862c:	str	r6, [fp, #-172]	; 0xffffff54
   18630:	str	r0, [fp, #-204]	; 0xffffff34
   18634:	str	r0, [fp, #-208]	; 0xffffff30
   18638:	mov	r0, r7
   1863c:	str	r7, [fp, #-164]	; 0xffffff5c
   18640:	str	r8, [fp, #-212]	; 0xffffff2c
   18644:	str	r4, [fp, #-216]	; 0xffffff28
   18648:	bl	11568 <memset@plt>
   1864c:	ldr	sl, [fp, #-224]	; 0xffffff20
   18650:	mov	r0, #45	; 0x2d
   18654:	str	r7, [fp, #-36]	; 0xffffffdc
   18658:	str	r8, [fp, #-40]	; 0xffffffd8
   1865c:	str	r4, [fp, #-44]	; 0xffffffd4
   18660:	str	r9, [fp, #-48]	; 0xffffffd0
   18664:	tst	sl, #8
   18668:	moveq	r0, #43	; 0x2b
   1866c:	tsteq	sl, #4
   18670:	beq	18c6c <argp_parse@@Base+0x840>
   18674:	add	r1, r4, #1
   18678:	strb	r0, [r4]
   1867c:	str	r1, [fp, #-44]	; 0xffffffd4
   18680:	ldr	r0, [fp, #-236]	; 0xffffff14
   18684:	ldr	r5, [fp, #-228]	; 0xffffff1c
   18688:	ldr	r9, [fp, #-232]	; 0xffffff18
   1868c:	mov	r3, #0
   18690:	strb	r3, [r1]
   18694:	str	r3, [r8]
   18698:	cmp	r0, #0
   1869c:	str	r0, [fp, #-220]	; 0xffffff24
   186a0:	beq	186d8 <argp_parse@@Base+0x2ac>
   186a4:	sub	sp, sp, #8
   186a8:	sub	r1, fp, #48	; 0x30
   186ac:	mov	r2, #0
   186b0:	mov	r3, r6
   186b4:	str	r1, [sp]
   186b8:	mov	r1, #0
   186bc:	bl	1935c <argp_parse@@Base+0xf30>
   186c0:	add	sp, sp, #8
   186c4:	str	r0, [fp, #-168]	; 0xffffff58
   186c8:	mov	r6, r0
   186cc:	ldr	r3, [fp, #-220]	; 0xffffff24
   186d0:	ldr	r4, [fp, #-172]	; 0xffffff54
   186d4:	b	186e0 <argp_parse@@Base+0x2b4>
   186d8:	mov	r4, r6
   186dc:	str	r6, [fp, #-168]	; 0xffffff58
   186e0:	vmov.i32	q8, #0	; 0x00000000
   186e4:	sub	r1, fp, #220	; 0xdc
   186e8:	mov	r7, #0
   186ec:	mov	r0, #1
   186f0:	mov	r8, r5
   186f4:	cmp	r4, r6
   186f8:	mov	r2, r1
   186fc:	add	r1, r1, #84	; 0x54
   18700:	str	r7, [fp, #-116]	; 0xffffff8c
   18704:	str	r7, [fp, #-120]	; 0xffffff88
   18708:	vst1.32	{d16-d17}, [r1]
   1870c:	str	sl, [fp, #-140]	; 0xffffff74
   18710:	str	r5, [fp, #-148]	; 0xffffff6c
   18714:	str	r9, [fp, #-152]	; 0xffffff68
   18718:	str	r3, [fp, #-156]	; 0xffffff64
   1871c:	str	r2, [fp, #-104]	; 0xffffff98
   18720:	str	r7, [fp, #-144]	; 0xffffff70
   18724:	str	r0, [fp, #-160]	; 0xffffff60
   18728:	movw	r0, #58920	; 0xe628
   1872c:	add	sl, r2, #64	; 0x40
   18730:	movt	r0, #2
   18734:	ldr	r0, [r0]
   18738:	str	r0, [fp, #-112]	; 0xffffff90
   1873c:	movw	r0, #58924	; 0xe62c
   18740:	movt	r0, #2
   18744:	ldr	r0, [r0]
   18748:	str	r0, [fp, #-108]	; 0xffffff94
   1874c:	bcs	1882c <argp_parse@@Base+0x400>
   18750:	ldr	r0, [fp, #12]
   18754:	str	r0, [r4, #24]
   18758:	b	187b0 <argp_parse@@Base+0x384>
   1875c:	ldr	r0, [r4, #32]
   18760:	mov	r1, #0
   18764:	mov	r2, sl
   18768:	str	r0, [fp, #-120]	; 0xffffff88
   1876c:	ldr	r0, [r4, #24]
   18770:	str	r0, [fp, #-128]	; 0xffffff80
   18774:	ldr	r0, [r4, #28]
   18778:	str	r0, [fp, #-124]	; 0xffffff84
   1877c:	ldr	r0, [r4, #12]
   18780:	str	r0, [fp, #-136]	; 0xffffff78
   18784:	movw	r0, #6
   18788:	movt	r0, #256	; 0x100
   1878c:	sub	r0, r0, #3
   18790:	blx	r3
   18794:	mov	r7, r0
   18798:	ldr	r0, [fp, #-120]	; 0xffffff88
   1879c:	str	r0, [r4, #32]
   187a0:	ldr	r0, [fp, #-168]	; 0xffffff58
   187a4:	add	r4, r4, #36	; 0x24
   187a8:	cmp	r4, r0
   187ac:	bcs	18820 <argp_parse@@Base+0x3f4>
   187b0:	cmp	r7, #7
   187b4:	cmpne	r7, #0
   187b8:	bne	1901c <argp_parse@@Base+0xbf0>
   187bc:	ldr	r0, [r4, #16]
   187c0:	cmp	r0, #0
   187c4:	beq	187d8 <argp_parse@@Base+0x3ac>
   187c8:	ldr	r1, [r4, #20]
   187cc:	ldr	r0, [r0, #28]
   187d0:	ldr	r0, [r0, r1, lsl #2]
   187d4:	str	r0, [r4, #24]
   187d8:	ldr	r3, [r4]
   187dc:	cmp	r3, #0
   187e0:	bne	1875c <argp_parse@@Base+0x330>
   187e4:	ldr	r0, [r4, #4]
   187e8:	mov	r7, #7
   187ec:	ldr	r0, [r0, #16]
   187f0:	cmp	r0, #0
   187f4:	beq	187a0 <argp_parse@@Base+0x374>
   187f8:	ldr	r0, [r0]
   187fc:	cmp	r0, #0
   18800:	beq	187a0 <argp_parse@@Base+0x374>
   18804:	ldr	r0, [r4, #24]
   18808:	ldr	r1, [r4, #28]
   1880c:	str	r0, [r1]
   18810:	ldr	r3, [r4]
   18814:	cmp	r3, #0
   18818:	bne	1875c <argp_parse@@Base+0x330>
   1881c:	b	187a0 <argp_parse@@Base+0x374>
   18820:	cmp	r7, #7
   18824:	cmpne	r7, #0
   18828:	bne	1901c <argp_parse@@Base+0xbf0>
   1882c:	ldr	r0, [fp, #-140]	; 0xffffff74
   18830:	tst	r0, #2
   18834:	bne	18844 <argp_parse@@Base+0x418>
   18838:	mov	r0, #1
   1883c:	str	r0, [fp, #-204]	; 0xffffff34
   18840:	b	1886c <argp_parse@@Base+0x440>
   18844:	mov	r1, #0
   18848:	tst	r0, #1
   1884c:	str	r1, [fp, #-204]	; 0xffffff34
   18850:	beq	1886c <argp_parse@@Base+0x440>
   18854:	ldr	r0, [fp, #-152]	; 0xffffff68
   18858:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1885c:	sub	r1, r1, #4
   18860:	add	r0, r0, #1
   18864:	str	r1, [fp, #-148]	; 0xffffff6c
   18868:	str	r0, [fp, #-152]	; 0xffffff68
   1886c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   18870:	cmp	r0, r8
   18874:	beq	18888 <argp_parse@@Base+0x45c>
   18878:	movw	r0, #58912	; 0xe620
   1887c:	movt	r0, #2
   18880:	ldr	r0, [r0]
   18884:	b	18898 <argp_parse@@Base+0x46c>
   18888:	ldr	r0, [r8]
   1888c:	cmp	r0, #0
   18890:	beq	18878 <argp_parse@@Base+0x44c>
   18894:	bl	19684 <argp_parse@@Base+0x1258>
   18898:	str	r0, [fp, #-116]	; 0xffffff8c
   1889c:	sub	r0, fp, #220	; 0xdc
   188a0:	mov	r8, #0
   188a4:	add	r6, r0, #12
   188a8:	b	188bc <argp_parse@@Base+0x490>
   188ac:	cmp	r0, #7
   188b0:	beq	18c74 <argp_parse@@Base+0x848>
   188b4:	cmp	r0, #0
   188b8:	bne	18e0c <argp_parse@@Base+0x9e0>
   188bc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   188c0:	cmp	r0, #0
   188c4:	beq	188d8 <argp_parse@@Base+0x4ac>
   188c8:	ldr	r9, [fp, #-144]	; 0xffffff70
   188cc:	cmp	r9, r0
   188d0:	bge	1898c <argp_parse@@Base+0x560>
   188d4:	str	r8, [fp, #-132]	; 0xffffff7c
   188d8:	ldr	r0, [fp, #-160]	; 0xffffff60
   188dc:	ldr	r9, [fp, #-144]	; 0xffffff70
   188e0:	cmp	r0, #0
   188e4:	beq	1898c <argp_parse@@Base+0x560>
   188e8:	mvn	r0, #0
   188ec:	str	r0, [fp, #-200]	; 0xffffff38
   188f0:	str	r9, [fp, #-208]	; 0xffffff30
   188f4:	ldr	r2, [fp, #-216]	; 0xffffff28
   188f8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   188fc:	ldr	r0, [fp, #-152]	; 0xffffff68
   18900:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18904:	ldrb	r7, [fp, #-140]	; 0xffffff74
   18908:	sub	sp, sp, #8
   1890c:	tst	r7, #64	; 0x40
   18910:	bne	18924 <argp_parse@@Base+0x4f8>
   18914:	str	r8, [sp]
   18918:	str	r6, [sp, #4]
   1891c:	bl	1975c <argp_parse@@Base+0x1330>
   18920:	b	18930 <argp_parse@@Base+0x504>
   18924:	str	r8, [sp]
   18928:	str	r6, [sp, #4]
   1892c:	bl	197c0 <argp_parse@@Base+0x1394>
   18930:	add	sp, sp, #8
   18934:	ldr	r9, [fp, #-208]	; 0xffffff30
   18938:	mov	r7, r0
   1893c:	cmn	r0, #1
   18940:	str	r9, [fp, #-144]	; 0xffffff70
   18944:	beq	18960 <argp_parse@@Base+0x534>
   18948:	cmp	r7, #63	; 0x3f
   1894c:	beq	18b28 <argp_parse@@Base+0x6fc>
   18950:	cmp	r7, #1
   18954:	bne	18b38 <argp_parse@@Base+0x70c>
   18958:	ldr	r7, [fp, #-196]	; 0xffffff3c
   1895c:	b	189c4 <argp_parse@@Base+0x598>
   18960:	cmp	r9, #2
   18964:	str	r8, [fp, #-160]	; 0xffffff60
   18968:	blt	1898c <argp_parse@@Base+0x560>
   1896c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   18970:	movw	r1, #54227	; 0xd3d3
   18974:	movt	r1, #1
   18978:	add	r0, r0, r9, lsl #2
   1897c:	ldr	r0, [r0, #-4]
   18980:	bl	11340 <strcmp@plt>
   18984:	cmp	r0, #0
   18988:	streq	r9, [fp, #-132]	; 0xffffff7c
   1898c:	ldr	r2, [fp, #-152]	; 0xffffff68
   18990:	mov	r1, #1
   18994:	mov	r0, #7
   18998:	cmp	r9, r2
   1899c:	bge	18c90 <argp_parse@@Base+0x864>
   189a0:	ldrb	r2, [fp, #-140]	; 0xffffff74
   189a4:	tst	r2, #4
   189a8:	bne	18c90 <argp_parse@@Base+0x864>
   189ac:	add	r0, r9, #1
   189b0:	str	r0, [fp, #-144]	; 0xffffff70
   189b4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   189b8:	ldr	r7, [r1, r9, lsl #2]
   189bc:	mov	r9, r0
   189c0:	str	r7, [fp, #-196]	; 0xffffff3c
   189c4:	sub	r0, r9, #1
   189c8:	str	r0, [fp, #-144]	; 0xffffff70
   189cc:	ldr	r1, [fp, #-172]	; 0xffffff54
   189d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   189d4:	cmp	r1, r2
   189d8:	bcs	18c74 <argp_parse@@Base+0x848>
   189dc:	add	r4, r1, #24
   189e0:	add	r1, r0, #1
   189e4:	str	r1, [fp, #-144]	; 0xffffff70
   189e8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   189ec:	cmp	r3, #0
   189f0:	beq	18a90 <argp_parse@@Base+0x664>
   189f4:	ldr	r0, [r4, #8]
   189f8:	mov	r1, r7
   189fc:	mov	r2, sl
   18a00:	mov	r5, #0
   18a04:	str	r0, [fp, #-120]	; 0xffffff88
   18a08:	ldr	r0, [r4]
   18a0c:	str	r0, [fp, #-128]	; 0xffffff80
   18a10:	ldr	r0, [r4, #4]
   18a14:	str	r0, [fp, #-124]	; 0xffffff84
   18a18:	ldr	r0, [r4, #-12]
   18a1c:	str	r0, [fp, #-136]	; 0xffffff78
   18a20:	mov	r0, #0
   18a24:	blx	r3
   18a28:	ldr	r1, [fp, #-120]	; 0xffffff88
   18a2c:	cmp	r0, #7
   18a30:	str	r1, [r4, #8]
   18a34:	bne	18ac4 <argp_parse@@Base+0x698>
   18a38:	ldr	r0, [fp, #-144]	; 0xffffff70
   18a3c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18a40:	sub	r0, r0, #1
   18a44:	cmp	r3, #0
   18a48:	str	r0, [fp, #-144]	; 0xffffff70
   18a4c:	beq	18a94 <argp_parse@@Base+0x668>
   18a50:	ldr	r0, [r4]
   18a54:	mov	r1, #0
   18a58:	mov	r2, sl
   18a5c:	str	r0, [fp, #-128]	; 0xffffff80
   18a60:	ldr	r0, [r4, #4]
   18a64:	str	r0, [fp, #-124]	; 0xffffff84
   18a68:	ldr	r0, [r4, #-12]
   18a6c:	str	r0, [fp, #-136]	; 0xffffff78
   18a70:	movw	r0, #6
   18a74:	movt	r0, #256	; 0x100
   18a78:	blx	r3
   18a7c:	ldr	r1, [fp, #-120]	; 0xffffff88
   18a80:	str	r1, [r4, #8]
   18a84:	cmp	r0, #7
   18a88:	beq	18aa0 <argp_parse@@Base+0x674>
   18a8c:	b	18abc <argp_parse@@Base+0x690>
   18a90:	str	r0, [fp, #-144]	; 0xffffff70
   18a94:	mov	r0, #7
   18a98:	cmp	r0, #7
   18a9c:	bne	18abc <argp_parse@@Base+0x690>
   18aa0:	ldr	r2, [fp, #-168]	; 0xffffff58
   18aa4:	add	r1, r4, #12
   18aa8:	cmp	r1, r2
   18aac:	bcs	18abc <argp_parse@@Base+0x690>
   18ab0:	ldr	r0, [fp, #-144]	; 0xffffff70
   18ab4:	add	r4, r4, #36	; 0x24
   18ab8:	b	189e0 <argp_parse@@Base+0x5b4>
   18abc:	movw	r5, #6
   18ac0:	movt	r5, #256	; 0x100
   18ac4:	cmp	r0, #0
   18ac8:	bne	188ac <argp_parse@@Base+0x480>
   18acc:	movw	r0, #6
   18ad0:	movt	r0, #256	; 0x100
   18ad4:	cmp	r5, r0
   18ad8:	bne	18b04 <argp_parse@@Base+0x6d8>
   18adc:	ldr	r0, [fp, #-152]	; 0xffffff68
   18ae0:	str	r0, [fp, #-144]	; 0xffffff70
   18ae4:	cmp	r0, r9
   18ae8:	blt	18b10 <argp_parse@@Base+0x6e4>
   18aec:	ldr	r1, [r4, #-12]
   18af0:	sub	r0, r0, r9
   18af4:	add	r0, r0, r1
   18af8:	add	r0, r0, #1
   18afc:	str	r0, [r4, #-12]
   18b00:	b	18b18 <argp_parse@@Base+0x6ec>
   18b04:	ldr	r0, [fp, #-144]	; 0xffffff70
   18b08:	cmp	r0, r9
   18b0c:	bge	18aec <argp_parse@@Base+0x6c0>
   18b10:	mov	r0, #1
   18b14:	str	r0, [fp, #-160]	; 0xffffff60
   18b18:	mov	r0, #0
   18b1c:	cmp	r0, #0
   18b20:	beq	188bc <argp_parse@@Base+0x490>
   18b24:	b	18e0c <argp_parse@@Base+0x9e0>
   18b28:	ldr	r0, [fp, #-200]	; 0xffffff38
   18b2c:	cmn	r0, #1
   18b30:	beq	18ba0 <argp_parse@@Base+0x774>
   18b34:	b	1905c <argp_parse@@Base+0xc30>
   18b38:	cmp	r8, r7, asr #24
   18b3c:	beq	18ba0 <argp_parse@@Base+0x774>
   18b40:	asr	r0, r7, #24
   18b44:	ldr	r1, [fp, #-172]	; 0xffffff54
   18b48:	sub	r0, r0, #1
   18b4c:	add	r0, r0, r0, lsl #3
   18b50:	ldr	r3, [r1, r0, lsl #2]
   18b54:	cmp	r3, #0
   18b58:	beq	19028 <argp_parse@@Base+0xbfc>
   18b5c:	add	r4, r1, r0, lsl #2
   18b60:	tst	r7, #8388608	; 0x800000
   18b64:	mov	r2, sl
   18b68:	ldr	r0, [r4, #32]!
   18b6c:	str	r0, [fp, #-120]	; 0xffffff88
   18b70:	ldr	r0, [r4, #-8]
   18b74:	str	r0, [fp, #-128]	; 0xffffff80
   18b78:	ldr	r0, [r4, #-4]
   18b7c:	str	r0, [fp, #-124]	; 0xffffff84
   18b80:	ldr	r0, [r4, #-20]	; 0xffffffec
   18b84:	str	r0, [fp, #-136]	; 0xffffff78
   18b88:	bic	r0, r7, #-16777216	; 0xff000000
   18b8c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   18b90:	orrne	r0, r0, #-16777216	; 0xff000000
   18b94:	blx	r3
   18b98:	mov	r1, #0
   18b9c:	b	18c30 <argp_parse@@Base+0x804>
   18ba0:	ldr	r0, [fp, #-216]	; 0xffffff28
   18ba4:	mov	r1, r7
   18ba8:	bl	11520 <strchr@plt>
   18bac:	cmp	r0, #0
   18bb0:	beq	18c48 <argp_parse@@Base+0x81c>
   18bb4:	ldr	r1, [fp, #-172]	; 0xffffff54
   18bb8:	ldr	r2, [fp, #-168]	; 0xffffff58
   18bbc:	cmp	r1, r2
   18bc0:	bcs	18c48 <argp_parse@@Base+0x81c>
   18bc4:	add	r1, r1, #24
   18bc8:	ldr	r3, [r1, #-16]
   18bcc:	cmp	r3, r0
   18bd0:	bhi	18bec <argp_parse@@Base+0x7c0>
   18bd4:	add	r3, r1, #36	; 0x24
   18bd8:	add	r1, r1, #12
   18bdc:	cmp	r1, r2
   18be0:	mov	r1, r3
   18be4:	bcc	18bc8 <argp_parse@@Base+0x79c>
   18be8:	b	18c48 <argp_parse@@Base+0x81c>
   18bec:	ldr	r3, [r1, #-24]	; 0xffffffe8
   18bf0:	cmp	r3, #0
   18bf4:	beq	18c48 <argp_parse@@Base+0x81c>
   18bf8:	mov	r4, r1
   18bfc:	mov	r2, sl
   18c00:	ldr	r0, [r4, #8]!
   18c04:	str	r0, [fp, #-120]	; 0xffffff88
   18c08:	ldr	r0, [r1]
   18c0c:	str	r0, [fp, #-128]	; 0xffffff80
   18c10:	ldr	r0, [r1, #4]
   18c14:	str	r0, [fp, #-124]	; 0xffffff84
   18c18:	ldr	r0, [r1, #-12]
   18c1c:	str	r0, [fp, #-136]	; 0xffffff78
   18c20:	mov	r0, r7
   18c24:	ldr	r1, [fp, #-196]	; 0xffffff3c
   18c28:	blx	r3
   18c2c:	mov	r1, #1
   18c30:	ldr	r2, [fp, #-120]	; 0xffffff88
   18c34:	cmp	r0, #7
   18c38:	str	r2, [r4]
   18c3c:	bne	188b4 <argp_parse@@Base+0x488>
   18c40:	cmp	r1, #0
   18c44:	beq	19028 <argp_parse@@Base+0xbfc>
   18c48:	movw	r1, #54230	; 0xd3d6
   18c4c:	movw	r3, #53968	; 0xd2d0
   18c50:	mov	r0, sl
   18c54:	mov	r2, r7
   18c58:	movt	r1, #1
   18c5c:	movt	r3, #1
   18c60:	bl	16420 <argp_error@@Base>
   18c64:	mov	r0, #0
   18c68:	b	18c7c <argp_parse@@Base+0x850>
   18c6c:	mov	r1, r4
   18c70:	b	18680 <argp_parse@@Base+0x254>
   18c74:	mov	r7, #1
   18c78:	mov	r0, #1
   18c7c:	add	r1, r7, #1
   18c80:	clz	r1, r1
   18c84:	lsr	r1, r1, #5
   18c88:	orr	r1, r1, r0
   18c8c:	mov	r0, #7
   18c90:	subs	r7, r0, #7
   18c94:	movne	r7, r0
   18c98:	cmp	r1, #0
   18c9c:	moveq	r7, r0
   18ca0:	cmp	r7, #0
   18ca4:	beq	18d44 <argp_parse@@Base+0x918>
   18ca8:	cmp	r7, #0
   18cac:	beq	18ef0 <argp_parse@@Base+0xac4>
   18cb0:	cmp	r7, #7
   18cb4:	bne	18ccc <argp_parse@@Base+0x8a0>
   18cb8:	ldr	r1, [fp, #-112]	; 0xffffff90
   18cbc:	mov	r0, sl
   18cc0:	mov	r2, #260	; 0x104
   18cc4:	bl	16364 <argp_state_help@@Base>
   18cc8:	mov	r7, #7
   18ccc:	ldr	r4, [fp, #-172]	; 0xffffff54
   18cd0:	ldr	r0, [fp, #-168]	; 0xffffff58
   18cd4:	cmp	r4, r0
   18cd8:	bcs	18f94 <argp_parse@@Base+0xb68>
   18cdc:	movw	r1, #6
   18ce0:	movt	r1, #256	; 0x100
   18ce4:	sub	r6, r1, #1
   18ce8:	b	18cf8 <argp_parse@@Base+0x8cc>
   18cec:	add	r4, r4, #36	; 0x24
   18cf0:	cmp	r4, r0
   18cf4:	bcs	18df0 <argp_parse@@Base+0x9c4>
   18cf8:	ldr	r3, [r4]
   18cfc:	cmp	r3, #0
   18d00:	beq	18cec <argp_parse@@Base+0x8c0>
   18d04:	ldr	r0, [r4, #32]
   18d08:	mov	r1, #0
   18d0c:	mov	r2, sl
   18d10:	str	r0, [fp, #-120]	; 0xffffff88
   18d14:	ldr	r0, [r4, #24]
   18d18:	str	r0, [fp, #-128]	; 0xffffff80
   18d1c:	ldr	r0, [r4, #28]
   18d20:	str	r0, [fp, #-124]	; 0xffffff84
   18d24:	ldr	r0, [r4, #12]
   18d28:	str	r0, [fp, #-136]	; 0xffffff78
   18d2c:	mov	r0, r6
   18d30:	blx	r3
   18d34:	ldr	r0, [fp, #-120]	; 0xffffff88
   18d38:	str	r0, [r4, #32]
   18d3c:	ldr	r0, [fp, #-168]	; 0xffffff58
   18d40:	b	18cec <argp_parse@@Base+0x8c0>
   18d44:	ldr	r1, [fp, #-152]	; 0xffffff68
   18d48:	ldr	r0, [fp, #-144]	; 0xffffff70
   18d4c:	cmp	r0, r1
   18d50:	bne	18df8 <argp_parse@@Base+0x9cc>
   18d54:	ldr	r4, [fp, #-172]	; 0xffffff54
   18d58:	ldr	r1, [fp, #-168]	; 0xffffff58
   18d5c:	mov	r0, #0
   18d60:	cmp	r4, r1
   18d64:	bcs	18e18 <argp_parse@@Base+0x9ec>
   18d68:	movw	r0, #6
   18d6c:	mov	r7, #0
   18d70:	movt	r0, #256	; 0x100
   18d74:	sub	r6, r0, #4
   18d78:	mov	r0, #0
   18d7c:	b	18dc4 <argp_parse@@Base+0x998>
   18d80:	ldr	r0, [r4, #32]
   18d84:	mov	r1, #0
   18d88:	mov	r2, sl
   18d8c:	str	r0, [fp, #-120]	; 0xffffff88
   18d90:	ldr	r0, [r4, #24]
   18d94:	str	r0, [fp, #-128]	; 0xffffff80
   18d98:	ldr	r0, [r4, #28]
   18d9c:	str	r7, [fp, #-136]	; 0xffffff78
   18da0:	str	r0, [fp, #-124]	; 0xffffff84
   18da4:	mov	r0, r6
   18da8:	blx	r3
   18dac:	ldr	r1, [fp, #-120]	; 0xffffff88
   18db0:	str	r1, [r4, #32]
   18db4:	ldr	r1, [fp, #-168]	; 0xffffff58
   18db8:	add	r4, r4, #36	; 0x24
   18dbc:	cmp	r4, r1
   18dc0:	bcs	18e14 <argp_parse@@Base+0x9e8>
   18dc4:	cmp	r0, #7
   18dc8:	cmpne	r0, #0
   18dcc:	bne	18e14 <argp_parse@@Base+0x9e8>
   18dd0:	ldr	r2, [r4, #12]
   18dd4:	cmp	r2, #0
   18dd8:	bne	18db8 <argp_parse@@Base+0x98c>
   18ddc:	ldr	r3, [r4]
   18de0:	cmp	r3, #0
   18de4:	bne	18d80 <argp_parse@@Base+0x954>
   18de8:	mov	r0, #7
   18dec:	b	18db8 <argp_parse@@Base+0x98c>
   18df0:	ldr	r4, [fp, #-172]	; 0xffffff54
   18df4:	b	18f94 <argp_parse@@Base+0xb68>
   18df8:	ldr	r1, [fp, #8]
   18dfc:	cmp	r1, #0
   18e00:	beq	18ea8 <argp_parse@@Base+0xa7c>
   18e04:	str	r0, [r1]
   18e08:	b	18ef0 <argp_parse@@Base+0xac4>
   18e0c:	mov	r1, #0
   18e10:	b	18c90 <argp_parse@@Base+0x864>
   18e14:	ldr	r4, [fp, #-172]	; 0xffffff54
   18e18:	sub	r7, r1, #36	; 0x24
   18e1c:	cmp	r7, r4
   18e20:	bcc	18e9c <argp_parse@@Base+0xa70>
   18e24:	movw	r1, #6
   18e28:	movt	r1, #256	; 0x100
   18e2c:	sub	r6, r1, #5
   18e30:	b	18e7c <argp_parse@@Base+0xa50>
   18e34:	ldr	r0, [r7, #32]
   18e38:	mov	r1, #0
   18e3c:	mov	r2, sl
   18e40:	str	r0, [fp, #-120]	; 0xffffff88
   18e44:	ldr	r0, [r7, #24]
   18e48:	str	r0, [fp, #-128]	; 0xffffff80
   18e4c:	ldr	r0, [r7, #28]
   18e50:	str	r0, [fp, #-124]	; 0xffffff84
   18e54:	ldr	r0, [r7, #12]
   18e58:	str	r0, [fp, #-136]	; 0xffffff78
   18e5c:	mov	r0, r6
   18e60:	blx	r3
   18e64:	ldr	r1, [fp, #-120]	; 0xffffff88
   18e68:	str	r1, [r7, #32]
   18e6c:	ldr	r4, [fp, #-172]	; 0xffffff54
   18e70:	sub	r7, r7, #36	; 0x24
   18e74:	cmp	r7, r4
   18e78:	bcc	18e9c <argp_parse@@Base+0xa70>
   18e7c:	cmp	r0, #7
   18e80:	cmpne	r0, #0
   18e84:	bne	18ed4 <argp_parse@@Base+0xaa8>
   18e88:	ldr	r3, [r7]
   18e8c:	cmp	r3, #0
   18e90:	bne	18e34 <argp_parse@@Base+0xa08>
   18e94:	mov	r0, #7
   18e98:	b	18e70 <argp_parse@@Base+0xa44>
   18e9c:	subs	r7, r0, #7
   18ea0:	movne	r7, r0
   18ea4:	b	18ed8 <argp_parse@@Base+0xaac>
   18ea8:	ldrb	r0, [fp, #-140]	; 0xffffff74
   18eac:	tst	r0, #2
   18eb0:	bne	18cb8 <argp_parse@@Base+0x88c>
   18eb4:	ldr	r0, [fp, #-112]	; 0xffffff90
   18eb8:	cmp	r0, #0
   18ebc:	beq	18cb8 <argp_parse@@Base+0x88c>
   18ec0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18ec4:	movw	r1, #54251	; 0xd3eb
   18ec8:	movt	r1, #1
   18ecc:	bl	1152c <fprintf@plt>
   18ed0:	b	18cb8 <argp_parse@@Base+0x88c>
   18ed4:	mov	r7, r0
   18ed8:	ldr	r1, [fp, #8]
   18edc:	cmp	r1, #0
   18ee0:	ldrne	r0, [fp, #-144]	; 0xffffff70
   18ee4:	strne	r0, [r1]
   18ee8:	cmp	r7, #0
   18eec:	bne	18cb0 <argp_parse@@Base+0x884>
   18ef0:	ldr	r0, [fp, #-168]	; 0xffffff58
   18ef4:	ldr	r4, [fp, #-172]	; 0xffffff54
   18ef8:	mov	r7, #0
   18efc:	sub	r5, r0, #36	; 0x24
   18f00:	cmp	r5, r4
   18f04:	bcc	18f94 <argp_parse@@Base+0xb68>
   18f08:	movw	r1, #6
   18f0c:	mov	r0, #0
   18f10:	movt	r1, #256	; 0x100
   18f14:	sub	r6, r1, #2
   18f18:	b	18f64 <argp_parse@@Base+0xb38>
   18f1c:	ldr	r0, [r5, #32]
   18f20:	mov	r1, #0
   18f24:	mov	r2, sl
   18f28:	str	r0, [fp, #-120]	; 0xffffff88
   18f2c:	ldr	r0, [r5, #24]
   18f30:	str	r0, [fp, #-128]	; 0xffffff80
   18f34:	ldr	r0, [r5, #28]
   18f38:	str	r0, [fp, #-124]	; 0xffffff84
   18f3c:	ldr	r0, [r5, #12]
   18f40:	str	r0, [fp, #-136]	; 0xffffff78
   18f44:	mov	r0, r6
   18f48:	blx	r3
   18f4c:	ldr	r1, [fp, #-120]	; 0xffffff88
   18f50:	str	r1, [r5, #32]
   18f54:	ldr	r4, [fp, #-172]	; 0xffffff54
   18f58:	sub	r5, r5, #36	; 0x24
   18f5c:	cmp	r5, r4
   18f60:	bcc	18f8c <argp_parse@@Base+0xb60>
   18f64:	cmp	r0, #7
   18f68:	cmpne	r0, #0
   18f6c:	bne	18f84 <argp_parse@@Base+0xb58>
   18f70:	ldr	r3, [r5]
   18f74:	cmp	r3, #0
   18f78:	bne	18f1c <argp_parse@@Base+0xaf0>
   18f7c:	mov	r0, #7
   18f80:	b	18f58 <argp_parse@@Base+0xb2c>
   18f84:	mov	r7, r0
   18f88:	b	18f94 <argp_parse@@Base+0xb68>
   18f8c:	subs	r7, r0, #7
   18f90:	movne	r7, r0
   18f94:	ldr	r0, [fp, #-168]	; 0xffffff58
   18f98:	sub	r6, r0, #36	; 0x24
   18f9c:	cmp	r6, r4
   18fa0:	bcc	1900c <argp_parse@@Base+0xbe0>
   18fa4:	movw	r0, #6
   18fa8:	movt	r0, #256	; 0x100
   18fac:	add	r5, r0, #1
   18fb0:	b	18fc0 <argp_parse@@Base+0xb94>
   18fb4:	sub	r6, r6, #36	; 0x24
   18fb8:	cmp	r6, r4
   18fbc:	bcc	1900c <argp_parse@@Base+0xbe0>
   18fc0:	ldr	r3, [r6]
   18fc4:	cmp	r3, #0
   18fc8:	beq	18fb4 <argp_parse@@Base+0xb88>
   18fcc:	ldr	r0, [r6, #32]
   18fd0:	mov	r1, #0
   18fd4:	mov	r2, sl
   18fd8:	str	r0, [fp, #-120]	; 0xffffff88
   18fdc:	ldr	r0, [r6, #24]
   18fe0:	str	r0, [fp, #-128]	; 0xffffff80
   18fe4:	ldr	r0, [r6, #28]
   18fe8:	str	r0, [fp, #-124]	; 0xffffff84
   18fec:	ldr	r0, [r6, #12]
   18ff0:	str	r0, [fp, #-136]	; 0xffffff78
   18ff4:	mov	r0, r5
   18ff8:	blx	r3
   18ffc:	ldr	r0, [fp, #-120]	; 0xffffff88
   19000:	str	r0, [r6, #32]
   19004:	ldr	r4, [fp, #-172]	; 0xffffff54
   19008:	b	18fb4 <argp_parse@@Base+0xb88>
   1900c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19010:	bl	19708 <argp_parse@@Base+0x12dc>
   19014:	cmp	r7, #7
   19018:	movweq	r7, #22
   1901c:	mov	r0, r7
   19020:	sub	sp, fp, #28
   19024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19028:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1902c:	ldr	r1, [r0, #12]
   19030:	cmp	r1, r7
   19034:	beq	19064 <argp_parse@@Base+0xc38>
   19038:	ldr	r1, [r0]
   1903c:	cmp	r1, #0
   19040:	beq	19064 <argp_parse@@Base+0xc38>
   19044:	add	r1, r0, #16
   19048:	ldr	r0, [r0, #28]
   1904c:	cmp	r0, r7
   19050:	mov	r0, r1
   19054:	bne	19038 <argp_parse@@Base+0xc0c>
   19058:	b	19068 <argp_parse@@Base+0xc3c>
   1905c:	mov	r1, #0
   19060:	b	18c8c <argp_parse@@Base+0x860>
   19064:	mov	r1, r0
   19068:	ldr	r0, [r1]
   1906c:	movw	r1, #54238	; 0xd3de
   19070:	movw	r3, #53968	; 0xd2d0
   19074:	movw	r2, #54247	; 0xd3e7
   19078:	movt	r1, #1
   1907c:	movt	r3, #1
   19080:	movt	r2, #1
   19084:	cmp	r0, #0
   19088:	movne	r2, r0
   1908c:	mov	r0, sl
   19090:	b	18c60 <argp_parse@@Base+0x834>
   19094:	mov	ip, r0
   19098:	mov	r0, #0
   1909c:	cmp	r1, #0
   190a0:	beq	190d0 <argp_parse@@Base+0xca4>
   190a4:	ldr	r3, [r1, #52]	; 0x34
   190a8:	ldr	r1, [r3, #48]	; 0x30
   190ac:	ldr	r3, [r3, #52]	; 0x34
   190b0:	cmp	r1, r3
   190b4:	bxcs	lr
   190b8:	ldr	r2, [r1, #4]
   190bc:	cmp	r2, ip
   190c0:	beq	190cc <argp_parse@@Base+0xca0>
   190c4:	add	r1, r1, #36	; 0x24
   190c8:	b	190b0 <argp_parse@@Base+0xc84>
   190cc:	ldr	r0, [r1, #24]
   190d0:	bx	lr
   190d4:	push	{r4, r5, r6, sl, fp, lr}
   190d8:	add	fp, sp, #16
   190dc:	mov	r5, r2
   190e0:	mov	r6, r1
   190e4:	mov	r4, #7
   190e8:	cmn	r0, #3
   190ec:	bgt	19110 <argp_parse@@Base+0xce4>
   190f0:	cmn	r0, #4
   190f4:	beq	1913c <argp_parse@@Base+0xd10>
   190f8:	cmn	r0, #3
   190fc:	bne	191d8 <argp_parse@@Base+0xdac>
   19100:	ldr	r1, [r5, #48]	; 0x30
   19104:	mov	r0, r5
   19108:	movw	r2, #513	; 0x201
   1910c:	b	1912c <argp_parse@@Base+0xd00>
   19110:	cmn	r0, #2
   19114:	beq	19198 <argp_parse@@Base+0xd6c>
   19118:	cmp	r0, #63	; 0x3f
   1911c:	bne	191d8 <argp_parse@@Base+0xdac>
   19120:	ldr	r1, [r5, #48]	; 0x30
   19124:	mov	r0, r5
   19128:	movw	r2, #634	; 0x27a
   1912c:	bl	16364 <argp_state_help@@Base>
   19130:	mov	r4, #0
   19134:	mov	r0, r4
   19138:	pop	{r4, r5, r6, sl, fp, pc}
   1913c:	movw	r0, #54165	; 0xd395
   19140:	cmp	r6, #0
   19144:	mov	r1, #0
   19148:	mov	r2, #10
   1914c:	mov	r4, #0
   19150:	movt	r0, #1
   19154:	movne	r0, r6
   19158:	bl	1134c <strtol@plt>
   1915c:	movw	r5, #59020	; 0xe68c
   19160:	movt	r5, #2
   19164:	str	r0, [r5]
   19168:	ldr	r0, [r5]
   1916c:	subs	r0, r0, #1
   19170:	str	r0, [r5]
   19174:	blt	191d8 <argp_parse@@Base+0xdac>
   19178:	mov	r0, #1
   1917c:	bl	1140c <sleep@plt>
   19180:	ldr	r0, [r5]
   19184:	sub	r1, r0, #1
   19188:	cmp	r0, #0
   1918c:	str	r1, [r5]
   19190:	bgt	19178 <argp_parse@@Base+0xd4c>
   19194:	b	191d8 <argp_parse@@Base+0xdac>
   19198:	movw	r0, #58916	; 0xe624
   1919c:	movt	r0, #2
   191a0:	str	r6, [r0]
   191a4:	mov	r0, r6
   191a8:	bl	19684 <argp_parse@@Base+0x1258>
   191ac:	movw	r1, #58912	; 0xe620
   191b0:	str	r0, [r5, #40]	; 0x28
   191b4:	mov	r4, #0
   191b8:	movt	r1, #2
   191bc:	str	r0, [r1]
   191c0:	ldr	r0, [r5, #16]
   191c4:	and	r0, r0, #3
   191c8:	cmp	r0, #1
   191cc:	bne	191d8 <argp_parse@@Base+0xdac>
   191d0:	ldr	r0, [r5, #8]
   191d4:	str	r6, [r0]
   191d8:	mov	r0, r4
   191dc:	pop	{r4, r5, r6, sl, fp, pc}
   191e0:	push	{r4, sl, fp, lr}
   191e4:	add	fp, sp, #8
   191e8:	mov	r1, r0
   191ec:	mov	r0, #7
   191f0:	cmp	r1, #86	; 0x56
   191f4:	popne	{r4, sl, fp, pc}
   191f8:	movw	r0, #59024	; 0xe690
   191fc:	mov	r4, r2
   19200:	movt	r0, #2
   19204:	ldr	r2, [r0]
   19208:	cmp	r2, #0
   1920c:	beq	19220 <argp_parse@@Base+0xdf4>
   19210:	ldr	r0, [r4, #48]	; 0x30
   19214:	mov	r1, r4
   19218:	blx	r2
   1921c:	b	19260 <argp_parse@@Base+0xe34>
   19220:	movw	r0, #59108	; 0xe6e4
   19224:	movt	r0, #2
   19228:	ldr	r2, [r0]
   1922c:	cmp	r2, #0
   19230:	beq	19248 <argp_parse@@Base+0xe1c>
   19234:	ldr	r0, [r4, #48]	; 0x30
   19238:	movw	r1, #54378	; 0xd46a
   1923c:	movt	r1, #1
   19240:	bl	1152c <fprintf@plt>
   19244:	b	19260 <argp_parse@@Base+0xe34>
   19248:	movw	r1, #52199	; 0xcbe7
   1924c:	movw	r2, #54192	; 0xd3b0
   19250:	mov	r0, r4
   19254:	movt	r1, #1
   19258:	movt	r2, #1
   1925c:	bl	16420 <argp_error@@Base>
   19260:	ldrb	r1, [r4, #16]
   19264:	mov	r0, #0
   19268:	tst	r1, #32
   1926c:	beq	19274 <argp_parse@@Base+0xe48>
   19270:	pop	{r4, sl, fp, pc}
   19274:	mov	r0, #0
   19278:	bl	114f0 <exit@plt>
   1927c:	push	{r4, r5, fp, lr}
   19280:	add	fp, sp, #8
   19284:	ldr	r2, [r0]
   19288:	ldr	ip, [r0, #16]
   1928c:	mov	r4, r1
   19290:	cmp	r2, #0
   19294:	beq	19300 <argp_parse@@Base+0xed4>
   19298:	ldr	r0, [r4, #8]
   1929c:	mov	r3, #0
   192a0:	add	r0, r0, #1
   192a4:	str	r0, [r4, #8]
   192a8:	mov	r0, #0
   192ac:	b	192b8 <argp_parse@@Base+0xe8c>
   192b0:	add	r3, r3, #3
   192b4:	add	r0, r0, #1
   192b8:	add	r5, r2, r3, lsl #3
   192bc:	ldr	r1, [r5, #4]
   192c0:	cmp	r1, #0
   192c4:	bne	192b0 <argp_parse@@Base+0xe84>
   192c8:	ldr	r1, [r2, r3, lsl #3]
   192cc:	cmp	r1, #0
   192d0:	bne	192b0 <argp_parse@@Base+0xe84>
   192d4:	ldr	r1, [r5, #16]
   192d8:	cmp	r1, #0
   192dc:	bne	192b0 <argp_parse@@Base+0xe84>
   192e0:	ldr	r1, [r5, #20]
   192e4:	cmp	r1, #0
   192e8:	bne	192b0 <argp_parse@@Base+0xe84>
   192ec:	ldr	r1, [r4]
   192f0:	mov	r2, r4
   192f4:	add	r1, r1, r3
   192f8:	str	r1, [r2], #4
   192fc:	b	19314 <argp_parse@@Base+0xee8>
   19300:	ldr	r0, [r0, #4]
   19304:	cmp	r0, #0
   19308:	beq	19320 <argp_parse@@Base+0xef4>
   1930c:	add	r2, r4, #8
   19310:	mov	r0, #1
   19314:	ldr	r1, [r2]
   19318:	add	r0, r1, r0
   1931c:	str	r0, [r2]
   19320:	cmp	ip, #0
   19324:	beq	19358 <argp_parse@@Base+0xf2c>
   19328:	ldr	r0, [ip]
   1932c:	cmp	r0, #0
   19330:	popeq	{r4, r5, fp, pc}
   19334:	add	r5, ip, #16
   19338:	mov	r1, r4
   1933c:	bl	1927c <argp_parse@@Base+0xe50>
   19340:	ldr	r0, [r4, #12]
   19344:	add	r0, r0, #1
   19348:	str	r0, [r4, #12]
   1934c:	ldr	r0, [r5], #16
   19350:	cmp	r0, #0
   19354:	bne	19338 <argp_parse@@Base+0xf0c>
   19358:	pop	{r4, r5, fp, pc}
   1935c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19360:	add	fp, sp, #28
   19364:	sub	sp, sp, #28
   19368:	ldr	sl, [r0]
   1936c:	ldr	r5, [r0, #16]
   19370:	ldr	r6, [fp, #8]
   19374:	mov	r7, r3
   19378:	cmp	sl, #0
   1937c:	beq	1954c <argp_parse@@Base+0x1120>
   19380:	str	r0, [sp, #8]
   19384:	add	r0, sp, #16
   19388:	mov	r8, sl
   1938c:	str	r2, [sp, #12]
   19390:	stm	r0, {r1, r5, r7}
   19394:	b	19408 <argp_parse@@Base+0xfdc>
   19398:	ldr	r0, [r6, #8]
   1939c:	str	r5, [r0]
   193a0:	ldr	r1, [sl, #8]
   193a4:	cmp	r1, #0
   193a8:	beq	1952c <argp_parse@@Base+0x1100>
   193ac:	ldrb	r1, [sl, #12]
   193b0:	tst	r1, #1
   193b4:	mov	r1, #2
   193b8:	movweq	r1, #1
   193bc:	mov	r5, #0
   193c0:	stmib	r0, {r1, r5}
   193c4:	ldr	r1, [r8, #4]
   193c8:	ldr	r2, [r7, #48]	; 0x30
   193cc:	ldr	r3, [sp, #24]
   193d0:	cmp	r1, #0
   193d4:	sub	r2, r3, r2
   193d8:	mov	r3, #956301312	; 0x39000000
   193dc:	ldreq	r1, [sl, #4]
   193e0:	lsr	r2, r2, #2
   193e4:	mul	r2, r2, r3
   193e8:	bic	r1, r1, #-16777216	; 0xff000000
   193ec:	orr	r1, r2, r1
   193f0:	add	r1, r1, #16777216	; 0x1000000
   193f4:	str	r1, [r0, #12]
   193f8:	add	r1, r0, #16
   193fc:	str	r1, [r6, #8]
   19400:	str	r5, [r0, #16]
   19404:	add	r8, r8, #24
   19408:	ldr	r5, [r8, #4]
   1940c:	cmp	r5, #0
   19410:	bne	19438 <argp_parse@@Base+0x100c>
   19414:	ldr	r0, [r8]
   19418:	cmp	r0, #0
   1941c:	bne	19438 <argp_parse@@Base+0x100c>
   19420:	ldr	r0, [r8, #16]
   19424:	cmp	r0, #0
   19428:	bne	19438 <argp_parse@@Base+0x100c>
   1942c:	ldr	r0, [r8, #20]
   19430:	cmp	r0, #0
   19434:	beq	19534 <argp_parse@@Base+0x1108>
   19438:	ldr	r0, [r8, #12]
   1943c:	tst	r0, #4
   19440:	moveq	sl, r8
   19444:	ldrb	r1, [sl, #12]
   19448:	tst	r1, #8
   1944c:	bne	19404 <argp_parse@@Base+0xfd8>
   19450:	sub	r1, r5, #1
   19454:	cmp	r1, #254	; 0xfe
   19458:	bhi	194d8 <argp_parse@@Base+0x10ac>
   1945c:	ands	r0, r0, #8
   19460:	bne	194d8 <argp_parse@@Base+0x10ac>
   19464:	bl	114d8 <__ctype_b_loc@plt>
   19468:	ldr	r0, [r0]
   1946c:	add	r0, r0, r5, lsl #1
   19470:	ldrb	r0, [r0, #1]
   19474:	tst	r0, #64	; 0x40
   19478:	beq	194d8 <argp_parse@@Base+0x10ac>
   1947c:	ldr	r0, [r6, #4]
   19480:	add	r1, r0, #1
   19484:	str	r1, [r6, #4]
   19488:	strb	r5, [r0]
   1948c:	ldr	r0, [sl, #8]
   19490:	cmp	r0, #0
   19494:	beq	194cc <argp_parse@@Base+0x10a0>
   19498:	ldr	r0, [r6, #4]
   1949c:	add	r1, r0, #1
   194a0:	str	r1, [r6, #4]
   194a4:	mov	r1, #58	; 0x3a
   194a8:	strb	r1, [r0]
   194ac:	ldrb	r0, [sl, #12]
   194b0:	tst	r0, #1
   194b4:	beq	194cc <argp_parse@@Base+0x10a0>
   194b8:	ldr	r0, [r6, #4]
   194bc:	add	r1, r0, #1
   194c0:	str	r1, [r6, #4]
   194c4:	mov	r1, #58	; 0x3a
   194c8:	strb	r1, [r0]
   194cc:	ldr	r0, [r6, #4]
   194d0:	mov	r1, #0
   194d4:	strb	r1, [r0]
   194d8:	ldr	r5, [r8]
   194dc:	cmp	r5, #0
   194e0:	beq	19404 <argp_parse@@Base+0xfd8>
   194e4:	ldr	r7, [r6]
   194e8:	ldr	r9, [r7, #8]
   194ec:	ldr	r0, [r9]
   194f0:	cmp	r0, #0
   194f4:	beq	19398 <argp_parse@@Base+0xf6c>
   194f8:	mov	r4, r9
   194fc:	mov	r1, r5
   19500:	bl	11340 <strcmp@plt>
   19504:	cmp	r0, #0
   19508:	beq	1951c <argp_parse@@Base+0x10f0>
   1950c:	ldr	r0, [r4, #16]!
   19510:	cmp	r0, #0
   19514:	bne	194fc <argp_parse@@Base+0x10d0>
   19518:	b	19398 <argp_parse@@Base+0xf6c>
   1951c:	sub	r0, r4, r9
   19520:	cmn	r0, #1
   19524:	bgt	19404 <argp_parse@@Base+0xfd8>
   19528:	b	19398 <argp_parse@@Base+0xf6c>
   1952c:	mov	r1, #0
   19530:	b	193bc <argp_parse@@Base+0xf90>
   19534:	ldr	r0, [sp, #8]
   19538:	add	r7, sp, #16
   1953c:	ldr	r2, [sp, #12]
   19540:	ldm	r7, {r1, r5, r7}
   19544:	ldr	r3, [r0, #4]
   19548:	b	19558 <argp_parse@@Base+0x112c>
   1954c:	ldr	r3, [r0, #4]
   19550:	cmp	r3, #0
   19554:	beq	195fc <argp_parse@@Base+0x11d0>
   19558:	str	r0, [r7, #4]
   1955c:	str	r3, [r7]
   19560:	mov	r0, #0
   19564:	cmp	r5, #0
   19568:	add	ip, r7, #12
   1956c:	ldr	r3, [r6, #4]
   19570:	str	r0, [r7, #32]
   19574:	str	r0, [r7, #24]
   19578:	stm	ip, {r0, r1, r2}
   1957c:	str	r0, [r7, #28]
   19580:	str	r3, [r7, #8]
   19584:	beq	195ac <argp_parse@@Base+0x1180>
   19588:	ldr	r1, [r5, r0, lsl #2]
   1958c:	add	r0, r0, #4
   19590:	cmp	r1, #0
   19594:	bne	19588 <argp_parse@@Base+0x115c>
   19598:	ldr	r1, [r6, #12]
   1959c:	add	r0, r1, r0
   195a0:	str	r1, [r7, #28]
   195a4:	sub	r0, r0, #4
   195a8:	str	r0, [r6, #12]
   195ac:	add	r3, r7, #36	; 0x24
   195b0:	cmp	r5, #0
   195b4:	beq	195f0 <argp_parse@@Base+0x11c4>
   195b8:	ldr	r0, [r5]
   195bc:	cmp	r0, #0
   195c0:	beq	195f0 <argp_parse@@Base+0x11c4>
   195c4:	add	r4, r5, #16
   195c8:	mov	r5, #0
   195cc:	mov	r1, r7
   195d0:	mov	r2, r5
   195d4:	str	r6, [sp]
   195d8:	bl	1935c <argp_parse@@Base+0xf30>
   195dc:	mov	r3, r0
   195e0:	ldr	r0, [r4, r5, lsl #4]
   195e4:	add	r5, r5, #1
   195e8:	cmp	r0, #0
   195ec:	bne	195cc <argp_parse@@Base+0x11a0>
   195f0:	mov	r0, r3
   195f4:	sub	sp, fp, #28
   195f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195fc:	mov	r3, r7
   19600:	mov	r7, #0
   19604:	cmp	r5, #0
   19608:	bne	195b8 <argp_parse@@Base+0x118c>
   1960c:	b	195f0 <argp_parse@@Base+0x11c4>
   19610:	movw	r2, #59028	; 0xe694
   19614:	movt	r2, #2
   19618:	str	r0, [r2]
   1961c:	movw	r0, #59024	; 0xe690
   19620:	movw	r2, #38464	; 0x9640
   19624:	movt	r0, #2
   19628:	movt	r2, #1
   1962c:	str	r2, [r0]
   19630:	movw	r0, #59032	; 0xe698
   19634:	movt	r0, #2
   19638:	str	r1, [r0]
   1963c:	bx	lr
   19640:	push	{fp, lr}
   19644:	mov	fp, sp
   19648:	sub	sp, sp, #8
   1964c:	movw	r2, #59032	; 0xe698
   19650:	movw	r1, #59028	; 0xe694
   19654:	movw	r3, #54289	; 0xd411
   19658:	movt	r2, #2
   1965c:	movt	r1, #2
   19660:	movt	r3, #1
   19664:	ldr	r2, [r2]
   19668:	ldr	r1, [r1]
   1966c:	str	r2, [sp]
   19670:	movw	r2, #54275	; 0xd403
   19674:	movt	r2, #1
   19678:	bl	19b1c <argp_parse@@Base+0x16f0>
   1967c:	mov	sp, fp
   19680:	pop	{fp, pc}
   19684:	sub	r0, r0, #1
   19688:	ldrb	r3, [r0, #1]!
   1968c:	cmp	r3, #47	; 0x2f
   19690:	beq	19688 <argp_parse@@Base+0x125c>
   19694:	mov	r2, #0
   19698:	mov	r1, r0
   1969c:	b	196a8 <argp_parse@@Base+0x127c>
   196a0:	ldrb	r3, [r1, #1]!
   196a4:	mov	r2, #1
   196a8:	uxtb	r3, r3
   196ac:	cmp	r3, #47	; 0x2f
   196b0:	beq	196a0 <argp_parse@@Base+0x1274>
   196b4:	cmp	r3, #0
   196b8:	bxeq	lr
   196bc:	tst	r2, #1
   196c0:	mov	r2, #0
   196c4:	movne	r0, r1
   196c8:	ldrb	r3, [r1, #1]!
   196cc:	b	196a8 <argp_parse@@Base+0x127c>
   196d0:	push	{r4, sl, fp, lr}
   196d4:	add	fp, sp, #8
   196d8:	mov	r4, r0
   196dc:	bl	11514 <strlen@plt>
   196e0:	mov	r1, r0
   196e4:	sub	r2, r4, #1
   196e8:	mov	r0, r1
   196ec:	cmp	r1, #2
   196f0:	bcc	19704 <argp_parse@@Base+0x12d8>
   196f4:	ldrb	r3, [r2, r0]
   196f8:	sub	r1, r0, #1
   196fc:	cmp	r3, #47	; 0x2f
   19700:	beq	196e8 <argp_parse@@Base+0x12bc>
   19704:	pop	{r4, sl, fp, pc}
   19708:	push	{r4, r5, r6, sl, fp, lr}
   1970c:	add	fp, sp, #16
   19710:	mov	r4, r0
   19714:	bl	11538 <__errno_location@plt>
   19718:	ldr	r6, [r0]
   1971c:	mov	r5, r0
   19720:	mov	r0, r4
   19724:	bl	113ac <free@plt>
   19728:	str	r6, [r5]
   1972c:	pop	{r4, r5, r6, sl, fp, pc}
   19730:	push	{fp, lr}
   19734:	mov	fp, sp
   19738:	sub	sp, sp, #16
   1973c:	mov	ip, #0
   19740:	str	ip, [sp, #8]
   19744:	str	ip, [sp, #4]
   19748:	ldr	ip, [fp, #8]
   1974c:	str	ip, [sp]
   19750:	bl	1beb0 <argp_parse@@Base+0x3a84>
   19754:	mov	sp, fp
   19758:	pop	{fp, pc}
   1975c:	push	{fp, lr}
   19760:	mov	fp, sp
   19764:	sub	sp, sp, #16
   19768:	mov	ip, #0
   1976c:	str	ip, [sp, #12]
   19770:	str	ip, [sp, #4]
   19774:	ldr	ip, [fp, #12]
   19778:	str	ip, [sp, #8]
   1977c:	ldr	ip, [fp, #8]
   19780:	str	ip, [sp]
   19784:	bl	1ac14 <argp_parse@@Base+0x27e8>
   19788:	mov	sp, fp
   1978c:	pop	{fp, pc}
   19790:	push	{fp, lr}
   19794:	mov	fp, sp
   19798:	sub	sp, sp, #16
   1979c:	mov	ip, #0
   197a0:	str	ip, [sp, #8]
   197a4:	mov	ip, #1
   197a8:	str	ip, [sp, #4]
   197ac:	ldr	ip, [fp, #8]
   197b0:	str	ip, [sp]
   197b4:	bl	1beb0 <argp_parse@@Base+0x3a84>
   197b8:	mov	sp, fp
   197bc:	pop	{fp, pc}
   197c0:	push	{fp, lr}
   197c4:	mov	fp, sp
   197c8:	sub	sp, sp, #16
   197cc:	mov	ip, #0
   197d0:	str	ip, [sp, #12]
   197d4:	mov	ip, #1
   197d8:	str	ip, [sp, #4]
   197dc:	ldr	ip, [fp, #12]
   197e0:	str	ip, [sp, #8]
   197e4:	ldr	ip, [fp, #8]
   197e8:	str	ip, [sp]
   197ec:	bl	1ac14 <argp_parse@@Base+0x27e8>
   197f0:	mov	sp, fp
   197f4:	pop	{fp, pc}
   197f8:	push	{r4, r5, fp, lr}
   197fc:	add	fp, sp, #8
   19800:	cmp	r0, #0
   19804:	beq	19898 <argp_parse@@Base+0x146c>
   19808:	mov	r1, #47	; 0x2f
   1980c:	mov	r4, r0
   19810:	bl	115c8 <strrchr@plt>
   19814:	cmp	r0, #0
   19818:	mov	r5, r4
   1981c:	addne	r5, r0, #1
   19820:	sub	r0, r5, r4
   19824:	cmp	r0, #7
   19828:	blt	1987c <argp_parse@@Base+0x1450>
   1982c:	movw	r1, #54358	; 0xd456
   19830:	sub	r0, r5, #7
   19834:	mov	r2, #7
   19838:	movt	r1, #1
   1983c:	bl	11658 <strncmp@plt>
   19840:	cmp	r0, #0
   19844:	bne	1987c <argp_parse@@Base+0x1450>
   19848:	movw	r1, #54366	; 0xd45e
   1984c:	mov	r0, r5
   19850:	mov	r2, #3
   19854:	movt	r1, #1
   19858:	bl	11658 <strncmp@plt>
   1985c:	cmp	r0, #0
   19860:	beq	1986c <argp_parse@@Base+0x1440>
   19864:	mov	r4, r5
   19868:	b	1987c <argp_parse@@Base+0x1450>
   1986c:	movw	r0, #58912	; 0xe620
   19870:	add	r4, r5, #3
   19874:	movt	r0, #2
   19878:	str	r4, [r0]
   1987c:	movw	r0, #58916	; 0xe624
   19880:	movt	r0, #2
   19884:	str	r4, [r0]
   19888:	movw	r0, #59036	; 0xe69c
   1988c:	movt	r0, #2
   19890:	str	r4, [r0]
   19894:	pop	{r4, r5, fp, pc}
   19898:	movw	r0, #58920	; 0xe628
   1989c:	mov	r1, #55	; 0x37
   198a0:	mov	r2, #1
   198a4:	movt	r0, #2
   198a8:	ldr	r3, [r0]
   198ac:	movw	r0, #54302	; 0xd41e
   198b0:	movt	r0, #1
   198b4:	bl	11460 <fwrite@plt>
   198b8:	bl	11664 <abort@plt>
   198bc:	push	{r4, r5, r6, r7, fp, lr}
   198c0:	add	fp, sp, #16
   198c4:	sub	sp, sp, #32
   198c8:	ldr	r7, [fp, #12]
   198cc:	ldr	r6, [fp, #8]
   198d0:	mov	r4, r2
   198d4:	mov	r5, r0
   198d8:	cmp	r1, #0
   198dc:	beq	198fc <argp_parse@@Base+0x14d0>
   198e0:	mov	r2, r1
   198e4:	movw	r1, #54370	; 0xd462
   198e8:	str	r3, [sp]
   198ec:	mov	r0, r5
   198f0:	mov	r3, r4
   198f4:	movt	r1, #1
   198f8:	b	1990c <argp_parse@@Base+0x14e0>
   198fc:	movw	r1, #54382	; 0xd46e
   19900:	mov	r0, r5
   19904:	mov	r2, r4
   19908:	movt	r1, #1
   1990c:	bl	1152c <fprintf@plt>
   19910:	movw	r1, #55146	; 0xd76a
   19914:	movw	r2, #54389	; 0xd475
   19918:	mov	r0, r5
   1991c:	movw	r3, #2022	; 0x7e6
   19920:	movt	r1, #1
   19924:	movt	r2, #1
   19928:	bl	1152c <fprintf@plt>
   1992c:	mov	r0, #10
   19930:	mov	r1, r5
   19934:	bl	115e0 <fputc@plt>
   19938:	movw	r1, #54393	; 0xd479
   1993c:	movw	r2, #54564	; 0xd524
   19940:	mov	r0, r5
   19944:	movt	r1, #1
   19948:	movt	r2, #1
   1994c:	bl	1152c <fprintf@plt>
   19950:	mov	r0, #10
   19954:	mov	r1, r5
   19958:	bl	115e0 <fputc@plt>
   1995c:	cmp	r7, #9
   19960:	bhi	1999c <argp_parse@@Base+0x1570>
   19964:	add	r0, pc, #0
   19968:	ldr	pc, [r0, r7, lsl #2]
   1996c:	muleq	r1, r4, r9
   19970:	ldrdeq	r9, [r1], -r0
   19974:	andeq	r9, r1, ip, ror #19
   19978:	andeq	r9, r1, r8, lsl #20
   1997c:	andeq	r9, r1, r0, lsr #20
   19980:	andeq	r9, r1, ip, lsr sl
   19984:	andeq	r9, r1, r8, asr sl
   19988:	andeq	r9, r1, ip, ror sl
   1998c:	ldrdeq	r9, [r1], -ip
   19990:	andeq	r9, r1, r8, lsr #21
   19994:	sub	sp, fp, #16
   19998:	pop	{r4, r5, r6, r7, fp, pc}
   1999c:	add	r7, r6, #8
   199a0:	add	lr, r6, #20
   199a4:	ldm	r6, {r2, r3}
   199a8:	ldr	r6, [r6, #32]
   199ac:	ldm	r7, {r0, r1, r7}
   199b0:	ldm	lr, {r4, ip, lr}
   199b4:	stm	sp, {r0, r1, r7}
   199b8:	movw	r1, #54917	; 0xd685
   199bc:	add	r0, sp, #12
   199c0:	stm	r0, {r4, ip, lr}
   199c4:	str	r6, [sp, #24]
   199c8:	movt	r1, #1
   199cc:	b	19b0c <argp_parse@@Base+0x16e0>
   199d0:	ldr	r2, [r6]
   199d4:	movw	r1, #54598	; 0xd546
   199d8:	mov	r0, r5
   199dc:	movt	r1, #1
   199e0:	sub	sp, fp, #16
   199e4:	pop	{r4, r5, r6, r7, fp, lr}
   199e8:	b	1152c <fprintf@plt>
   199ec:	ldm	r6, {r2, r3}
   199f0:	movw	r1, #54614	; 0xd556
   199f4:	mov	r0, r5
   199f8:	movt	r1, #1
   199fc:	sub	sp, fp, #16
   19a00:	pop	{r4, r5, r6, r7, fp, lr}
   19a04:	b	1152c <fprintf@plt>
   19a08:	ldr	r0, [r6, #8]
   19a0c:	movw	r1, #54637	; 0xd56d
   19a10:	ldm	r6, {r2, r3}
   19a14:	movt	r1, #1
   19a18:	str	r0, [sp]
   19a1c:	b	19b0c <argp_parse@@Base+0x16e0>
   19a20:	ldr	r0, [r6, #8]
   19a24:	ldm	r6, {r2, r3}
   19a28:	ldr	r1, [r6, #12]
   19a2c:	stm	sp, {r0, r1}
   19a30:	movw	r1, #54665	; 0xd589
   19a34:	movt	r1, #1
   19a38:	b	19b0c <argp_parse@@Base+0x16e0>
   19a3c:	add	r7, r6, #8
   19a40:	ldm	r6, {r2, r3}
   19a44:	ldm	r7, {r0, r1, r7}
   19a48:	stm	sp, {r0, r1, r7}
   19a4c:	movw	r1, #54697	; 0xd5a9
   19a50:	movt	r1, #1
   19a54:	b	19b0c <argp_parse@@Base+0x16e0>
   19a58:	add	r7, r6, #8
   19a5c:	ldm	r6, {r2, r3}
   19a60:	ldr	r6, [r6, #20]
   19a64:	ldm	r7, {r0, r1, r7}
   19a68:	stm	sp, {r0, r1, r7}
   19a6c:	movw	r1, #54733	; 0xd5cd
   19a70:	str	r6, [sp, #12]
   19a74:	movt	r1, #1
   19a78:	b	19b0c <argp_parse@@Base+0x16e0>
   19a7c:	add	r7, r6, #8
   19a80:	ldm	r6, {r2, r3}
   19a84:	ldr	r4, [r6, #20]
   19a88:	ldr	r6, [r6, #24]
   19a8c:	ldm	r7, {r0, r1, r7}
   19a90:	stm	sp, {r0, r1, r7}
   19a94:	movw	r1, #54773	; 0xd5f5
   19a98:	str	r4, [sp, #12]
   19a9c:	str	r6, [sp, #16]
   19aa0:	movt	r1, #1
   19aa4:	b	19b0c <argp_parse@@Base+0x16e0>
   19aa8:	add	r7, r6, #8
   19aac:	add	lr, r6, #20
   19ab0:	ldm	r6, {r2, r3}
   19ab4:	ldr	r6, [r6, #32]
   19ab8:	ldm	r7, {r0, r1, r7}
   19abc:	ldm	lr, {r4, ip, lr}
   19ac0:	stm	sp, {r0, r1, r7}
   19ac4:	movw	r1, #54865	; 0xd651
   19ac8:	add	r0, sp, #12
   19acc:	stm	r0, {r4, ip, lr}
   19ad0:	str	r6, [sp, #24]
   19ad4:	movt	r1, #1
   19ad8:	b	19b0c <argp_parse@@Base+0x16e0>
   19adc:	add	r7, r6, #8
   19ae0:	ldm	r6, {r2, r3}
   19ae4:	ldr	r4, [r6, #20]
   19ae8:	ldr	ip, [r6, #24]
   19aec:	ldr	r6, [r6, #28]
   19af0:	ldm	r7, {r0, r1, r7}
   19af4:	stm	sp, {r0, r1, r7}
   19af8:	movw	r1, #54817	; 0xd621
   19afc:	str	r4, [sp, #12]
   19b00:	str	ip, [sp, #16]
   19b04:	str	r6, [sp, #20]
   19b08:	movt	r1, #1
   19b0c:	mov	r0, r5
   19b10:	bl	1152c <fprintf@plt>
   19b14:	sub	sp, fp, #16
   19b18:	pop	{r4, r5, r6, r7, fp, pc}
   19b1c:	push	{r4, sl, fp, lr}
   19b20:	add	fp, sp, #8
   19b24:	sub	sp, sp, #8
   19b28:	ldr	ip, [fp, #8]
   19b2c:	mov	lr, #0
   19b30:	ldr	r4, [ip, lr, lsl #2]
   19b34:	add	lr, lr, #1
   19b38:	cmp	r4, #0
   19b3c:	bne	19b30 <argp_parse@@Base+0x1704>
   19b40:	sub	r4, lr, #1
   19b44:	str	ip, [sp]
   19b48:	str	r4, [sp, #4]
   19b4c:	bl	198bc <argp_parse@@Base+0x1490>
   19b50:	sub	sp, fp, #8
   19b54:	pop	{r4, sl, fp, pc}
   19b58:	push	{fp, lr}
   19b5c:	mov	fp, sp
   19b60:	sub	sp, sp, #48	; 0x30
   19b64:	ldr	ip, [fp, #8]
   19b68:	ldr	lr, [ip]
   19b6c:	cmp	lr, #0
   19b70:	str	lr, [sp, #8]
   19b74:	beq	19c10 <argp_parse@@Base+0x17e4>
   19b78:	ldr	lr, [ip, #4]
   19b7c:	cmp	lr, #0
   19b80:	str	lr, [sp, #12]
   19b84:	beq	19c18 <argp_parse@@Base+0x17ec>
   19b88:	ldr	lr, [ip, #8]
   19b8c:	cmp	lr, #0
   19b90:	str	lr, [sp, #16]
   19b94:	beq	19c20 <argp_parse@@Base+0x17f4>
   19b98:	ldr	lr, [ip, #12]
   19b9c:	cmp	lr, #0
   19ba0:	str	lr, [sp, #20]
   19ba4:	beq	19c28 <argp_parse@@Base+0x17fc>
   19ba8:	ldr	lr, [ip, #16]
   19bac:	cmp	lr, #0
   19bb0:	str	lr, [sp, #24]
   19bb4:	beq	19c30 <argp_parse@@Base+0x1804>
   19bb8:	ldr	lr, [ip, #20]
   19bbc:	cmp	lr, #0
   19bc0:	str	lr, [sp, #28]
   19bc4:	beq	19c38 <argp_parse@@Base+0x180c>
   19bc8:	ldr	lr, [ip, #24]
   19bcc:	cmp	lr, #0
   19bd0:	str	lr, [sp, #32]
   19bd4:	beq	19c40 <argp_parse@@Base+0x1814>
   19bd8:	ldr	lr, [ip, #28]
   19bdc:	cmp	lr, #0
   19be0:	str	lr, [sp, #36]	; 0x24
   19be4:	beq	19c48 <argp_parse@@Base+0x181c>
   19be8:	ldr	lr, [ip, #32]
   19bec:	cmp	lr, #0
   19bf0:	str	lr, [sp, #40]	; 0x28
   19bf4:	beq	19c50 <argp_parse@@Base+0x1824>
   19bf8:	ldr	lr, [ip, #36]	; 0x24
   19bfc:	mov	ip, #10
   19c00:	cmp	lr, #0
   19c04:	str	lr, [sp, #44]	; 0x2c
   19c08:	movweq	ip, #9
   19c0c:	b	19c54 <argp_parse@@Base+0x1828>
   19c10:	mov	ip, #0
   19c14:	b	19c54 <argp_parse@@Base+0x1828>
   19c18:	mov	ip, #1
   19c1c:	b	19c54 <argp_parse@@Base+0x1828>
   19c20:	mov	ip, #2
   19c24:	b	19c54 <argp_parse@@Base+0x1828>
   19c28:	mov	ip, #3
   19c2c:	b	19c54 <argp_parse@@Base+0x1828>
   19c30:	mov	ip, #4
   19c34:	b	19c54 <argp_parse@@Base+0x1828>
   19c38:	mov	ip, #5
   19c3c:	b	19c54 <argp_parse@@Base+0x1828>
   19c40:	mov	ip, #6
   19c44:	b	19c54 <argp_parse@@Base+0x1828>
   19c48:	mov	ip, #7
   19c4c:	b	19c54 <argp_parse@@Base+0x1828>
   19c50:	mov	ip, #8
   19c54:	add	lr, sp, #8
   19c58:	str	ip, [sp, #4]
   19c5c:	str	lr, [sp]
   19c60:	bl	198bc <argp_parse@@Base+0x1490>
   19c64:	mov	sp, fp
   19c68:	pop	{fp, pc}
   19c6c:	push	{fp, lr}
   19c70:	mov	fp, sp
   19c74:	sub	sp, sp, #56	; 0x38
   19c78:	add	ip, fp, #8
   19c7c:	str	ip, [sp, #12]
   19c80:	ldr	lr, [fp, #8]
   19c84:	cmp	lr, #0
   19c88:	str	lr, [sp, #16]
   19c8c:	beq	19d28 <argp_parse@@Base+0x18fc>
   19c90:	ldr	lr, [ip, #4]
   19c94:	cmp	lr, #0
   19c98:	str	lr, [sp, #20]
   19c9c:	beq	19d30 <argp_parse@@Base+0x1904>
   19ca0:	ldr	lr, [ip, #8]
   19ca4:	cmp	lr, #0
   19ca8:	str	lr, [sp, #24]
   19cac:	beq	19d38 <argp_parse@@Base+0x190c>
   19cb0:	ldr	lr, [ip, #12]
   19cb4:	cmp	lr, #0
   19cb8:	str	lr, [sp, #28]
   19cbc:	beq	19d40 <argp_parse@@Base+0x1914>
   19cc0:	ldr	lr, [ip, #16]
   19cc4:	cmp	lr, #0
   19cc8:	str	lr, [sp, #32]
   19ccc:	beq	19d48 <argp_parse@@Base+0x191c>
   19cd0:	ldr	lr, [ip, #20]
   19cd4:	cmp	lr, #0
   19cd8:	str	lr, [sp, #36]	; 0x24
   19cdc:	beq	19d50 <argp_parse@@Base+0x1924>
   19ce0:	ldr	lr, [ip, #24]
   19ce4:	cmp	lr, #0
   19ce8:	str	lr, [sp, #40]	; 0x28
   19cec:	beq	19d58 <argp_parse@@Base+0x192c>
   19cf0:	ldr	lr, [ip, #28]
   19cf4:	cmp	lr, #0
   19cf8:	str	lr, [sp, #44]	; 0x2c
   19cfc:	beq	19d60 <argp_parse@@Base+0x1934>
   19d00:	ldr	lr, [ip, #32]
   19d04:	cmp	lr, #0
   19d08:	str	lr, [sp, #48]	; 0x30
   19d0c:	beq	19d68 <argp_parse@@Base+0x193c>
   19d10:	ldr	lr, [ip, #36]	; 0x24
   19d14:	mov	ip, #10
   19d18:	cmp	lr, #0
   19d1c:	str	lr, [sp, #52]	; 0x34
   19d20:	movweq	ip, #9
   19d24:	b	19d6c <argp_parse@@Base+0x1940>
   19d28:	mov	ip, #0
   19d2c:	b	19d6c <argp_parse@@Base+0x1940>
   19d30:	mov	ip, #1
   19d34:	b	19d6c <argp_parse@@Base+0x1940>
   19d38:	mov	ip, #2
   19d3c:	b	19d6c <argp_parse@@Base+0x1940>
   19d40:	mov	ip, #3
   19d44:	b	19d6c <argp_parse@@Base+0x1940>
   19d48:	mov	ip, #4
   19d4c:	b	19d6c <argp_parse@@Base+0x1940>
   19d50:	mov	ip, #5
   19d54:	b	19d6c <argp_parse@@Base+0x1940>
   19d58:	mov	ip, #6
   19d5c:	b	19d6c <argp_parse@@Base+0x1940>
   19d60:	mov	ip, #7
   19d64:	b	19d6c <argp_parse@@Base+0x1940>
   19d68:	mov	ip, #8
   19d6c:	add	lr, sp, #16
   19d70:	str	ip, [sp, #4]
   19d74:	str	lr, [sp]
   19d78:	bl	198bc <argp_parse@@Base+0x1490>
   19d7c:	mov	sp, fp
   19d80:	pop	{fp, pc}
   19d84:	push	{fp, lr}
   19d88:	mov	fp, sp
   19d8c:	movw	r0, #58924	; 0xe62c
   19d90:	movt	r0, #2
   19d94:	ldr	r1, [r0]
   19d98:	mov	r0, #10
   19d9c:	bl	115e0 <fputc@plt>
   19da0:	movw	r0, #54977	; 0xd6c1
   19da4:	movw	r1, #54997	; 0xd6d5
   19da8:	movt	r0, #1
   19dac:	movt	r1, #1
   19db0:	bl	11364 <printf@plt>
   19db4:	movw	r0, #55019	; 0xd6eb
   19db8:	movw	r1, #54275	; 0xd403
   19dbc:	movw	r2, #55039	; 0xd6ff
   19dc0:	movt	r0, #1
   19dc4:	movt	r1, #1
   19dc8:	movt	r2, #1
   19dcc:	bl	11364 <printf@plt>
   19dd0:	movw	r0, #55078	; 0xd726
   19dd4:	movw	r1, #55117	; 0xd74d
   19dd8:	movt	r0, #1
   19ddc:	movt	r1, #1
   19de0:	pop	{fp, lr}
   19de4:	b	11364 <printf@plt>
   19de8:	push	{r4, r5, r6, sl, fp, lr}
   19dec:	add	fp, sp, #16
   19df0:	mov	r4, r2
   19df4:	mov	r5, r1
   19df8:	mov	r6, r0
   19dfc:	bl	1bfac <argp_parse@@Base+0x3b80>
   19e00:	cmp	r0, #0
   19e04:	popne	{r4, r5, r6, sl, fp, pc}
   19e08:	cmp	r6, #0
   19e0c:	beq	19e20 <argp_parse@@Base+0x19f4>
   19e10:	cmp	r5, #0
   19e14:	cmpne	r4, #0
   19e18:	bne	19e20 <argp_parse@@Base+0x19f4>
   19e1c:	pop	{r4, r5, r6, sl, fp, pc}
   19e20:	bl	1a39c <argp_parse@@Base+0x1f70>
   19e24:	push	{r4, r5, r6, sl, fp, lr}
   19e28:	add	fp, sp, #16
   19e2c:	mov	r4, r2
   19e30:	mov	r5, r1
   19e34:	mov	r6, r0
   19e38:	bl	1bfac <argp_parse@@Base+0x3b80>
   19e3c:	cmp	r0, #0
   19e40:	popne	{r4, r5, r6, sl, fp, pc}
   19e44:	cmp	r6, #0
   19e48:	beq	19e5c <argp_parse@@Base+0x1a30>
   19e4c:	cmp	r5, #0
   19e50:	cmpne	r4, #0
   19e54:	bne	19e5c <argp_parse@@Base+0x1a30>
   19e58:	pop	{r4, r5, r6, sl, fp, pc}
   19e5c:	bl	1a39c <argp_parse@@Base+0x1f70>
   19e60:	push	{fp, lr}
   19e64:	mov	fp, sp
   19e68:	bl	1a420 <argp_parse@@Base+0x1ff4>
   19e6c:	cmp	r0, #0
   19e70:	popne	{fp, pc}
   19e74:	bl	1a39c <argp_parse@@Base+0x1f70>
   19e78:	push	{fp, lr}
   19e7c:	mov	fp, sp
   19e80:	bl	1a420 <argp_parse@@Base+0x1ff4>
   19e84:	cmp	r0, #0
   19e88:	popne	{fp, pc}
   19e8c:	bl	1a39c <argp_parse@@Base+0x1f70>
   19e90:	push	{fp, lr}
   19e94:	mov	fp, sp
   19e98:	bl	1a420 <argp_parse@@Base+0x1ff4>
   19e9c:	cmp	r0, #0
   19ea0:	popne	{fp, pc}
   19ea4:	bl	1a39c <argp_parse@@Base+0x1f70>
   19ea8:	push	{r4, r5, fp, lr}
   19eac:	add	fp, sp, #8
   19eb0:	mov	r4, r1
   19eb4:	mov	r5, r0
   19eb8:	bl	1a450 <argp_parse@@Base+0x2024>
   19ebc:	cmp	r0, #0
   19ec0:	popne	{r4, r5, fp, pc}
   19ec4:	cmp	r5, #0
   19ec8:	beq	19ed8 <argp_parse@@Base+0x1aac>
   19ecc:	cmp	r4, #0
   19ed0:	bne	19ed8 <argp_parse@@Base+0x1aac>
   19ed4:	pop	{r4, r5, fp, pc}
   19ed8:	bl	1a39c <argp_parse@@Base+0x1f70>
   19edc:	push	{fp, lr}
   19ee0:	mov	fp, sp
   19ee4:	cmp	r1, #0
   19ee8:	orreq	r1, r1, #1
   19eec:	bl	1a450 <argp_parse@@Base+0x2024>
   19ef0:	cmp	r0, #0
   19ef4:	popne	{fp, pc}
   19ef8:	bl	1a39c <argp_parse@@Base+0x1f70>
   19efc:	push	{fp, lr}
   19f00:	mov	fp, sp
   19f04:	clz	r3, r2
   19f08:	lsr	ip, r3, #5
   19f0c:	clz	r3, r1
   19f10:	lsr	r3, r3, #5
   19f14:	orrs	r3, r3, ip
   19f18:	movwne	r1, #1
   19f1c:	movwne	r2, #1
   19f20:	bl	1bfac <argp_parse@@Base+0x3b80>
   19f24:	cmp	r0, #0
   19f28:	popne	{fp, pc}
   19f2c:	bl	1a39c <argp_parse@@Base+0x1f70>
   19f30:	push	{fp, lr}
   19f34:	mov	fp, sp
   19f38:	mov	r2, r1
   19f3c:	mov	r1, r0
   19f40:	mov	r0, #0
   19f44:	bl	1bfac <argp_parse@@Base+0x3b80>
   19f48:	cmp	r0, #0
   19f4c:	popne	{fp, pc}
   19f50:	bl	1a39c <argp_parse@@Base+0x1f70>
   19f54:	push	{fp, lr}
   19f58:	mov	fp, sp
   19f5c:	mov	r2, r1
   19f60:	mov	r1, r0
   19f64:	clz	r0, r2
   19f68:	clz	r3, r1
   19f6c:	lsr	r0, r0, #5
   19f70:	lsr	r3, r3, #5
   19f74:	orrs	r0, r3, r0
   19f78:	mov	r0, #0
   19f7c:	movwne	r1, #1
   19f80:	movwne	r2, #1
   19f84:	bl	1bfac <argp_parse@@Base+0x3b80>
   19f88:	cmp	r0, #0
   19f8c:	popne	{fp, pc}
   19f90:	bl	1a39c <argp_parse@@Base+0x1f70>
   19f94:	push	{r4, r5, r6, sl, fp, lr}
   19f98:	add	fp, sp, #16
   19f9c:	ldr	r5, [r1]
   19fa0:	mov	r4, r1
   19fa4:	mov	r6, r0
   19fa8:	cmp	r0, #0
   19fac:	beq	19fc4 <argp_parse@@Base+0x1b98>
   19fb0:	mov	r0, #1
   19fb4:	add	r0, r0, r5, lsr #1
   19fb8:	adds	r5, r5, r0
   19fbc:	bcc	19fcc <argp_parse@@Base+0x1ba0>
   19fc0:	b	1a008 <argp_parse@@Base+0x1bdc>
   19fc4:	cmp	r5, #0
   19fc8:	movweq	r5, #64	; 0x40
   19fcc:	mov	r0, r6
   19fd0:	mov	r1, r5
   19fd4:	mov	r2, #1
   19fd8:	bl	1bfac <argp_parse@@Base+0x3b80>
   19fdc:	cmp	r5, #0
   19fe0:	mov	r1, r5
   19fe4:	movwne	r1, #1
   19fe8:	cmp	r0, #0
   19fec:	bne	1a000 <argp_parse@@Base+0x1bd4>
   19ff0:	clz	r2, r6
   19ff4:	lsr	r2, r2, #5
   19ff8:	orrs	r1, r2, r1
   19ffc:	bne	1a008 <argp_parse@@Base+0x1bdc>
   1a000:	str	r5, [r4]
   1a004:	pop	{r4, r5, r6, sl, fp, pc}
   1a008:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a00c:	push	{r4, r5, r6, r7, fp, lr}
   1a010:	add	fp, sp, #16
   1a014:	ldr	r5, [r1]
   1a018:	mov	r6, r2
   1a01c:	mov	r4, r1
   1a020:	mov	r7, r0
   1a024:	cmp	r0, #0
   1a028:	beq	1a040 <argp_parse@@Base+0x1c14>
   1a02c:	mov	r0, #1
   1a030:	add	r0, r0, r5, lsr #1
   1a034:	adds	r5, r5, r0
   1a038:	bcc	1a058 <argp_parse@@Base+0x1c2c>
   1a03c:	b	1a08c <argp_parse@@Base+0x1c60>
   1a040:	cmp	r5, #0
   1a044:	bne	1a058 <argp_parse@@Base+0x1c2c>
   1a048:	mov	r0, #64	; 0x40
   1a04c:	cmp	r6, #64	; 0x40
   1a050:	udiv	r5, r0, r6
   1a054:	addhi	r5, r5, #1
   1a058:	mov	r0, r7
   1a05c:	mov	r1, r5
   1a060:	mov	r2, r6
   1a064:	bl	1bfac <argp_parse@@Base+0x3b80>
   1a068:	cmp	r0, #0
   1a06c:	bne	1a084 <argp_parse@@Base+0x1c58>
   1a070:	cmp	r7, #0
   1a074:	beq	1a08c <argp_parse@@Base+0x1c60>
   1a078:	cmp	r6, #0
   1a07c:	cmpne	r5, #0
   1a080:	bne	1a08c <argp_parse@@Base+0x1c60>
   1a084:	str	r5, [r4]
   1a088:	pop	{r4, r5, r6, r7, fp, pc}
   1a08c:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a090:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a094:	add	fp, sp, #24
   1a098:	mov	r8, r1
   1a09c:	ldr	r1, [r1]
   1a0a0:	mov	r5, r0
   1a0a4:	add	r0, r1, r1, asr #1
   1a0a8:	cmp	r0, r1
   1a0ac:	mvnvs	r0, #-2147483648	; 0x80000000
   1a0b0:	cmp	r0, r3
   1a0b4:	mov	r7, r0
   1a0b8:	movgt	r7, r3
   1a0bc:	cmn	r3, #1
   1a0c0:	movle	r7, r0
   1a0c4:	ldr	r0, [fp, #8]
   1a0c8:	cmn	r0, #1
   1a0cc:	ble	1a0f4 <argp_parse@@Base+0x1cc8>
   1a0d0:	cmp	r0, #0
   1a0d4:	beq	1a148 <argp_parse@@Base+0x1d1c>
   1a0d8:	cmn	r7, #1
   1a0dc:	ble	1a11c <argp_parse@@Base+0x1cf0>
   1a0e0:	mvn	r4, #-2147483648	; 0x80000000
   1a0e4:	udiv	r6, r4, r0
   1a0e8:	cmp	r6, r7
   1a0ec:	bge	1a148 <argp_parse@@Base+0x1d1c>
   1a0f0:	b	1a158 <argp_parse@@Base+0x1d2c>
   1a0f4:	cmn	r7, #1
   1a0f8:	ble	1a138 <argp_parse@@Base+0x1d0c>
   1a0fc:	cmn	r0, #1
   1a100:	beq	1a148 <argp_parse@@Base+0x1d1c>
   1a104:	mov	r6, #-2147483648	; 0x80000000
   1a108:	mvn	r4, #-2147483648	; 0x80000000
   1a10c:	sdiv	r6, r6, r0
   1a110:	cmp	r6, r7
   1a114:	bge	1a148 <argp_parse@@Base+0x1d1c>
   1a118:	b	1a158 <argp_parse@@Base+0x1d2c>
   1a11c:	beq	1a148 <argp_parse@@Base+0x1d1c>
   1a120:	mov	r6, #-2147483648	; 0x80000000
   1a124:	mvn	r4, #-2147483648	; 0x80000000
   1a128:	sdiv	r6, r6, r7
   1a12c:	cmp	r6, r0
   1a130:	bge	1a148 <argp_parse@@Base+0x1d1c>
   1a134:	b	1a158 <argp_parse@@Base+0x1d2c>
   1a138:	mvn	r4, #-2147483648	; 0x80000000
   1a13c:	sdiv	r6, r4, r0
   1a140:	cmp	r7, r6
   1a144:	blt	1a158 <argp_parse@@Base+0x1d2c>
   1a148:	mul	r6, r7, r0
   1a14c:	mov	r4, #64	; 0x40
   1a150:	cmp	r6, #63	; 0x3f
   1a154:	bgt	1a160 <argp_parse@@Base+0x1d34>
   1a158:	sdiv	r7, r4, r0
   1a15c:	mul	r6, r7, r0
   1a160:	cmp	r5, #0
   1a164:	moveq	r4, #0
   1a168:	streq	r4, [r8]
   1a16c:	sub	r4, r7, r1
   1a170:	cmp	r4, r2
   1a174:	bge	1a220 <argp_parse@@Base+0x1df4>
   1a178:	add	r7, r1, r2
   1a17c:	mov	r6, #0
   1a180:	mov	r2, #0
   1a184:	cmp	r7, r3
   1a188:	movwgt	r6, #1
   1a18c:	cmn	r3, #1
   1a190:	movwgt	r2, #1
   1a194:	cmp	r7, r1
   1a198:	bvs	1a254 <argp_parse@@Base+0x1e28>
   1a19c:	ands	r1, r2, r6
   1a1a0:	bne	1a254 <argp_parse@@Base+0x1e28>
   1a1a4:	cmn	r0, #1
   1a1a8:	ble	1a1d0 <argp_parse@@Base+0x1da4>
   1a1ac:	cmp	r0, #0
   1a1b0:	beq	1a21c <argp_parse@@Base+0x1df0>
   1a1b4:	cmn	r7, #1
   1a1b8:	ble	1a1f4 <argp_parse@@Base+0x1dc8>
   1a1bc:	mvn	r1, #-2147483648	; 0x80000000
   1a1c0:	udiv	r1, r1, r0
   1a1c4:	cmp	r1, r7
   1a1c8:	bge	1a21c <argp_parse@@Base+0x1df0>
   1a1cc:	b	1a254 <argp_parse@@Base+0x1e28>
   1a1d0:	cmn	r7, #1
   1a1d4:	ble	1a20c <argp_parse@@Base+0x1de0>
   1a1d8:	cmn	r0, #1
   1a1dc:	beq	1a21c <argp_parse@@Base+0x1df0>
   1a1e0:	mov	r1, #-2147483648	; 0x80000000
   1a1e4:	sdiv	r1, r1, r0
   1a1e8:	cmp	r1, r7
   1a1ec:	bge	1a21c <argp_parse@@Base+0x1df0>
   1a1f0:	b	1a254 <argp_parse@@Base+0x1e28>
   1a1f4:	beq	1a21c <argp_parse@@Base+0x1df0>
   1a1f8:	mov	r1, #-2147483648	; 0x80000000
   1a1fc:	sdiv	r1, r1, r7
   1a200:	cmp	r1, r0
   1a204:	bge	1a21c <argp_parse@@Base+0x1df0>
   1a208:	b	1a254 <argp_parse@@Base+0x1e28>
   1a20c:	mvn	r1, #-2147483648	; 0x80000000
   1a210:	sdiv	r1, r1, r0
   1a214:	cmp	r7, r1
   1a218:	blt	1a254 <argp_parse@@Base+0x1e28>
   1a21c:	mul	r6, r7, r0
   1a220:	mov	r0, r5
   1a224:	mov	r1, r6
   1a228:	bl	1a450 <argp_parse@@Base+0x2024>
   1a22c:	cmp	r6, #0
   1a230:	movwne	r6, #1
   1a234:	cmp	r0, #0
   1a238:	bne	1a24c <argp_parse@@Base+0x1e20>
   1a23c:	clz	r1, r5
   1a240:	lsr	r1, r1, #5
   1a244:	orrs	r1, r1, r6
   1a248:	bne	1a254 <argp_parse@@Base+0x1e28>
   1a24c:	str	r7, [r8]
   1a250:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a254:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a258:	push	{fp, lr}
   1a25c:	mov	fp, sp
   1a260:	mov	r1, #1
   1a264:	bl	1a3cc <argp_parse@@Base+0x1fa0>
   1a268:	cmp	r0, #0
   1a26c:	popne	{fp, pc}
   1a270:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a274:	push	{fp, lr}
   1a278:	mov	fp, sp
   1a27c:	bl	1a3cc <argp_parse@@Base+0x1fa0>
   1a280:	cmp	r0, #0
   1a284:	popne	{fp, pc}
   1a288:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a28c:	push	{fp, lr}
   1a290:	mov	fp, sp
   1a294:	mov	r1, #1
   1a298:	bl	1a3cc <argp_parse@@Base+0x1fa0>
   1a29c:	cmp	r0, #0
   1a2a0:	popne	{fp, pc}
   1a2a4:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a2a8:	push	{fp, lr}
   1a2ac:	mov	fp, sp
   1a2b0:	bl	1a3cc <argp_parse@@Base+0x1fa0>
   1a2b4:	cmp	r0, #0
   1a2b8:	popne	{fp, pc}
   1a2bc:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a2c0:	push	{r4, r5, fp, lr}
   1a2c4:	add	fp, sp, #8
   1a2c8:	mov	r5, r0
   1a2cc:	mov	r0, r1
   1a2d0:	mov	r4, r1
   1a2d4:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1a2d8:	cmp	r0, #0
   1a2dc:	beq	1a2f0 <argp_parse@@Base+0x1ec4>
   1a2e0:	mov	r1, r5
   1a2e4:	mov	r2, r4
   1a2e8:	pop	{r4, r5, fp, lr}
   1a2ec:	b	113d0 <memcpy@plt>
   1a2f0:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a2f4:	push	{r4, r5, fp, lr}
   1a2f8:	add	fp, sp, #8
   1a2fc:	mov	r5, r0
   1a300:	mov	r0, r1
   1a304:	mov	r4, r1
   1a308:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1a30c:	cmp	r0, #0
   1a310:	beq	1a324 <argp_parse@@Base+0x1ef8>
   1a314:	mov	r1, r5
   1a318:	mov	r2, r4
   1a31c:	pop	{r4, r5, fp, lr}
   1a320:	b	113d0 <memcpy@plt>
   1a324:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a328:	push	{r4, r5, fp, lr}
   1a32c:	add	fp, sp, #8
   1a330:	mov	r5, r0
   1a334:	add	r0, r1, #1
   1a338:	mov	r4, r1
   1a33c:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1a340:	cmp	r0, #0
   1a344:	beq	1a360 <argp_parse@@Base+0x1f34>
   1a348:	mov	r1, #0
   1a34c:	mov	r2, r4
   1a350:	strb	r1, [r0, r4]
   1a354:	mov	r1, r5
   1a358:	pop	{r4, r5, fp, lr}
   1a35c:	b	113d0 <memcpy@plt>
   1a360:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a364:	push	{r4, r5, fp, lr}
   1a368:	add	fp, sp, #8
   1a36c:	mov	r4, r0
   1a370:	bl	11514 <strlen@plt>
   1a374:	add	r5, r0, #1
   1a378:	mov	r0, r5
   1a37c:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1a380:	cmp	r0, #0
   1a384:	beq	1a398 <argp_parse@@Base+0x1f6c>
   1a388:	mov	r1, r4
   1a38c:	mov	r2, r5
   1a390:	pop	{r4, r5, fp, lr}
   1a394:	b	113d0 <memcpy@plt>
   1a398:	bl	1a39c <argp_parse@@Base+0x1f70>
   1a39c:	push	{fp, lr}
   1a3a0:	mov	fp, sp
   1a3a4:	movw	r0, #58892	; 0xe60c
   1a3a8:	movw	r2, #52199	; 0xcbe7
   1a3ac:	movw	r3, #55193	; 0xd799
   1a3b0:	mov	r1, #0
   1a3b4:	movt	r0, #2
   1a3b8:	movt	r2, #1
   1a3bc:	movt	r3, #1
   1a3c0:	ldr	r0, [r0]
   1a3c4:	bl	11478 <error@plt>
   1a3c8:	bl	11664 <abort@plt>
   1a3cc:	clz	r2, r1
   1a3d0:	clz	r3, r0
   1a3d4:	lsr	r2, r2, #5
   1a3d8:	lsr	r3, r3, #5
   1a3dc:	orrs	r2, r3, r2
   1a3e0:	movwne	r1, #1
   1a3e4:	movwne	r0, #1
   1a3e8:	cmp	r1, #0
   1a3ec:	beq	1a41c <argp_parse@@Base+0x1ff0>
   1a3f0:	mvn	r2, #-2147483648	; 0x80000000
   1a3f4:	udiv	r2, r2, r1
   1a3f8:	cmp	r2, r0
   1a3fc:	bcs	1a41c <argp_parse@@Base+0x1ff0>
   1a400:	push	{fp, lr}
   1a404:	mov	fp, sp
   1a408:	bl	11538 <__errno_location@plt>
   1a40c:	mov	r1, #12
   1a410:	str	r1, [r0]
   1a414:	mov	r0, #0
   1a418:	pop	{fp, pc}
   1a41c:	b	11328 <calloc@plt>
   1a420:	cmp	r0, #0
   1a424:	movweq	r0, #1
   1a428:	cmn	r0, #1
   1a42c:	ble	1a434 <argp_parse@@Base+0x2008>
   1a430:	b	1149c <malloc@plt>
   1a434:	push	{fp, lr}
   1a438:	mov	fp, sp
   1a43c:	bl	11538 <__errno_location@plt>
   1a440:	mov	r1, #12
   1a444:	str	r1, [r0]
   1a448:	mov	r0, #0
   1a44c:	pop	{fp, pc}
   1a450:	push	{fp, lr}
   1a454:	mov	fp, sp
   1a458:	cmp	r0, #0
   1a45c:	beq	1a478 <argp_parse@@Base+0x204c>
   1a460:	cmp	r1, #0
   1a464:	beq	1a484 <argp_parse@@Base+0x2058>
   1a468:	cmn	r1, #1
   1a46c:	ble	1a490 <argp_parse@@Base+0x2064>
   1a470:	pop	{fp, lr}
   1a474:	b	1143c <realloc@plt>
   1a478:	mov	r0, r1
   1a47c:	pop	{fp, lr}
   1a480:	b	1a420 <argp_parse@@Base+0x1ff4>
   1a484:	bl	19708 <argp_parse@@Base+0x12dc>
   1a488:	mov	r0, #0
   1a48c:	pop	{fp, pc}
   1a490:	bl	11538 <__errno_location@plt>
   1a494:	mov	r1, #12
   1a498:	str	r1, [r0]
   1a49c:	mov	r0, #0
   1a4a0:	pop	{fp, pc}
   1a4a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a4a8:	add	fp, sp, #24
   1a4ac:	mov	r7, r0
   1a4b0:	mov	r0, #36	; 0x24
   1a4b4:	mov	r8, r3
   1a4b8:	mov	r9, r2
   1a4bc:	mov	r6, r1
   1a4c0:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1a4c4:	cmp	r0, #0
   1a4c8:	beq	1a510 <argp_parse@@Base+0x20e4>
   1a4cc:	mov	r5, #0
   1a4d0:	str	r7, [r0]
   1a4d4:	stmib	r0, {r6, r9}
   1a4d8:	str	r8, [r0, #12]
   1a4dc:	mov	r4, r0
   1a4e0:	str	r5, [r0, #16]
   1a4e4:	str	r5, [r0, #20]
   1a4e8:	mov	r0, #200	; 0xc8
   1a4ec:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1a4f0:	cmp	r0, #0
   1a4f4:	str	r0, [r4, #24]
   1a4f8:	beq	1a51c <argp_parse@@Base+0x20f0>
   1a4fc:	add	r1, r0, #200	; 0xc8
   1a500:	str	r0, [r4, #28]
   1a504:	mov	r0, r4
   1a508:	str	r1, [r4, #32]
   1a50c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a510:	mov	r5, #0
   1a514:	mov	r0, r5
   1a518:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a51c:	mov	r0, r4
   1a520:	bl	19708 <argp_parse@@Base+0x12dc>
   1a524:	mov	r0, r5
   1a528:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a52c:	push	{r4, sl, fp, lr}
   1a530:	add	fp, sp, #8
   1a534:	mov	r4, r0
   1a538:	bl	1a570 <argp_parse@@Base+0x2144>
   1a53c:	ldr	r0, [r4, #24]
   1a540:	ldr	r1, [r4, #28]
   1a544:	cmp	r1, r0
   1a548:	bls	1a55c <argp_parse@@Base+0x2130>
   1a54c:	ldr	r3, [r4]
   1a550:	sub	r2, r1, r0
   1a554:	mov	r1, #1
   1a558:	bl	113e8 <fwrite_unlocked@plt>
   1a55c:	ldr	r0, [r4, #24]
   1a560:	bl	19708 <argp_parse@@Base+0x12dc>
   1a564:	mov	r0, r4
   1a568:	pop	{r4, sl, fp, lr}
   1a56c:	b	19708 <argp_parse@@Base+0x12dc>
   1a570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a574:	add	fp, sp, #28
   1a578:	sub	sp, sp, #12
   1a57c:	mov	sl, r0
   1a580:	ldr	r0, [r0, #16]
   1a584:	ldr	r1, [sl, #24]
   1a588:	ldr	r8, [sl, #28]
   1a58c:	add	r5, r1, r0
   1a590:	cmp	r5, r8
   1a594:	bcs	1aa8c <argp_parse@@Base+0x2660>
   1a598:	ldr	r7, [sl, #20]
   1a59c:	mov	r3, #32
   1a5a0:	cmp	r7, #0
   1a5a4:	bne	1a5dc <argp_parse@@Base+0x21b0>
   1a5a8:	b	1a5e4 <argp_parse@@Base+0x21b8>
   1a5ac:	ldr	r0, [sp, #8]
   1a5b0:	cmp	r7, #0
   1a5b4:	mvneq	r7, #0
   1a5b8:	str	r7, [sl, #20]
   1a5bc:	sub	r0, r0, r6
   1a5c0:	add	r0, r0, r9
   1a5c4:	add	r8, r5, r0
   1a5c8:	str	r8, [sl, #28]
   1a5cc:	cmp	r5, r8
   1a5d0:	bcs	1aa8c <argp_parse@@Base+0x2660>
   1a5d4:	cmp	r7, #0
   1a5d8:	beq	1a5e4 <argp_parse@@Base+0x21b8>
   1a5dc:	mov	r9, r5
   1a5e0:	b	1a684 <argp_parse@@Base+0x2258>
   1a5e4:	ldr	r7, [sl, #4]
   1a5e8:	cmp	r7, #0
   1a5ec:	beq	1a7b4 <argp_parse@@Base+0x2388>
   1a5f0:	ldr	r1, [sl, #32]
   1a5f4:	add	r0, r8, r7
   1a5f8:	mov	r4, r7
   1a5fc:	cmp	r0, r1
   1a600:	bcs	1a638 <argp_parse@@Base+0x220c>
   1a604:	add	r9, r5, r7
   1a608:	sub	r2, r8, r5
   1a60c:	mov	r1, r5
   1a610:	mov	r0, r9
   1a614:	bl	11394 <memmove@plt>
   1a618:	ldr	r0, [sl, #28]
   1a61c:	mov	r1, #32
   1a620:	mov	r2, r7
   1a624:	add	r0, r0, r7
   1a628:	str	r0, [sl, #28]
   1a62c:	mov	r0, r5
   1a630:	bl	11568 <memset@plt>
   1a634:	b	1a67c <argp_parse@@Base+0x2250>
   1a638:	ldr	r0, [sl]
   1a63c:	ldr	r1, [r0, #20]
   1a640:	ldr	r2, [r0, #24]
   1a644:	cmp	r1, r2
   1a648:	bcs	1a664 <argp_parse@@Base+0x2238>
   1a64c:	add	r2, r1, #1
   1a650:	str	r2, [r0, #20]
   1a654:	strb	r3, [r1]
   1a658:	subs	r4, r4, #1
   1a65c:	bne	1a638 <argp_parse@@Base+0x220c>
   1a660:	b	1a678 <argp_parse@@Base+0x224c>
   1a664:	mov	r1, #32
   1a668:	bl	115a4 <__overflow@plt>
   1a66c:	mov	r3, #32
   1a670:	subs	r4, r4, #1
   1a674:	bne	1a638 <argp_parse@@Base+0x220c>
   1a678:	mov	r9, r5
   1a67c:	str	r7, [sl, #20]
   1a680:	ldr	r8, [sl, #28]
   1a684:	sub	r6, r8, r9
   1a688:	mov	r0, r9
   1a68c:	mov	r1, #10
   1a690:	mov	r2, r6
   1a694:	bl	1158c <memchr@plt>
   1a698:	cmn	r7, #1
   1a69c:	mov	r4, r0
   1a6a0:	movle	r7, #0
   1a6a4:	strle	r7, [sl, #20]
   1a6a8:	cmp	r4, #0
   1a6ac:	beq	1a6e0 <argp_parse@@Base+0x22b4>
   1a6b0:	ldr	r5, [sl, #8]
   1a6b4:	sub	r0, r4, r9
   1a6b8:	mov	r3, #32
   1a6bc:	add	r0, r0, r7
   1a6c0:	cmp	r0, r5
   1a6c4:	bge	1a6f4 <argp_parse@@Base+0x22c8>
   1a6c8:	mov	r7, #0
   1a6cc:	add	r5, r4, #1
   1a6d0:	str	r7, [sl, #20]
   1a6d4:	cmp	r5, r8
   1a6d8:	bcc	1a5d4 <argp_parse@@Base+0x21a8>
   1a6dc:	b	1aa8c <argp_parse@@Base+0x2660>
   1a6e0:	ldr	r5, [sl, #8]
   1a6e4:	add	r0, r7, r6
   1a6e8:	mov	r4, r8
   1a6ec:	cmp	r0, r5
   1a6f0:	bcc	1aa70 <argp_parse@@Base+0x2644>
   1a6f4:	ldr	r0, [sl, #12]
   1a6f8:	cmn	r0, #1
   1a6fc:	str	r0, [sp, #4]
   1a700:	ble	1a750 <argp_parse@@Base+0x2324>
   1a704:	subs	r0, r5, r7
   1a708:	mov	r1, #0
   1a70c:	str	r6, [sp, #8]
   1a710:	add	r5, r9, r0
   1a714:	bmi	1a7ac <argp_parse@@Base+0x2380>
   1a718:	str	r0, [sp]
   1a71c:	bl	114d8 <__ctype_b_loc@plt>
   1a720:	ldr	r0, [r0]
   1a724:	mov	r7, r5
   1a728:	ldrb	r1, [r7]
   1a72c:	ldrb	r1, [r0, r1, lsl #1]
   1a730:	tst	r1, #1
   1a734:	bne	1a7bc <argp_parse@@Base+0x2390>
   1a738:	sub	r7, r7, #1
   1a73c:	cmp	r7, r9
   1a740:	bcs	1a728 <argp_parse@@Base+0x22fc>
   1a744:	ldr	r0, [sp]
   1a748:	mov	r1, #0
   1a74c:	b	1a7c4 <argp_parse@@Base+0x2398>
   1a750:	mov	r0, r6
   1a754:	sub	r6, r5, #1
   1a758:	cmp	r4, r8
   1a75c:	bcs	1aa78 <argp_parse@@Base+0x264c>
   1a760:	sub	r0, r6, r7
   1a764:	sub	r2, r8, r4
   1a768:	mov	r1, r4
   1a76c:	add	r0, r9, r0
   1a770:	bl	11394 <memmove@plt>
   1a774:	ldr	r0, [sl, #20]
   1a778:	ldr	r1, [sl, #28]
   1a77c:	mov	r7, #0
   1a780:	mov	r3, #32
   1a784:	add	r5, r9, r5
   1a788:	str	r7, [sl, #20]
   1a78c:	sub	r0, r6, r0
   1a790:	add	r0, r9, r0
   1a794:	sub	r0, r4, r0
   1a798:	add	r8, r1, r0
   1a79c:	str	r8, [sl, #28]
   1a7a0:	cmp	r5, r8
   1a7a4:	bcc	1a5d4 <argp_parse@@Base+0x21a8>
   1a7a8:	b	1aa8c <argp_parse@@Base+0x2660>
   1a7ac:	mov	r7, r5
   1a7b0:	b	1a7c4 <argp_parse@@Base+0x2398>
   1a7b4:	mov	r7, #0
   1a7b8:	b	1a5dc <argp_parse@@Base+0x21b0>
   1a7bc:	ldr	r0, [sp]
   1a7c0:	mov	r1, #1
   1a7c4:	add	r6, r7, #1
   1a7c8:	cmp	r6, r9
   1a7cc:	bls	1a80c <argp_parse@@Base+0x23e0>
   1a7d0:	cmp	r1, #0
   1a7d4:	beq	1a870 <argp_parse@@Base+0x2444>
   1a7d8:	ldr	r4, [sp, #4]
   1a7dc:	sub	r1, r7, #1
   1a7e0:	mov	r7, r1
   1a7e4:	cmp	r1, r9
   1a7e8:	bcc	1a874 <argp_parse@@Base+0x2448>
   1a7ec:	bl	114d8 <__ctype_b_loc@plt>
   1a7f0:	mov	r1, r7
   1a7f4:	ldr	r0, [r0]
   1a7f8:	ldrb	r2, [r1], #-1
   1a7fc:	ldrb	r0, [r0, r2, lsl #1]
   1a800:	tst	r0, #1
   1a804:	bne	1a7e0 <argp_parse@@Base+0x23b4>
   1a808:	b	1a874 <argp_parse@@Base+0x2448>
   1a80c:	cmp	r5, r4
   1a810:	bcs	1a844 <argp_parse@@Base+0x2418>
   1a814:	add	r0, r9, r0
   1a818:	add	r1, r0, #1
   1a81c:	mov	r5, r1
   1a820:	cmp	r1, r4
   1a824:	bcs	1a844 <argp_parse@@Base+0x2418>
   1a828:	bl	114d8 <__ctype_b_loc@plt>
   1a82c:	mov	r1, r5
   1a830:	ldr	r0, [r0]
   1a834:	ldrb	r2, [r1], #1
   1a838:	ldrb	r0, [r0, r2, lsl #1]
   1a83c:	tst	r0, #1
   1a840:	beq	1a81c <argp_parse@@Base+0x23f0>
   1a844:	cmp	r5, r4
   1a848:	beq	1aa44 <argp_parse@@Base+0x2618>
   1a84c:	bl	114d8 <__ctype_b_loc@plt>
   1a850:	ldr	r0, [r0]
   1a854:	mov	r6, r5
   1a858:	ldrb	r1, [r6, #1]!
   1a85c:	ldrb	r1, [r0, r1, lsl #1]
   1a860:	tst	r1, #1
   1a864:	bne	1a858 <argp_parse@@Base+0x242c>
   1a868:	ldr	r4, [sp, #4]
   1a86c:	b	1a878 <argp_parse@@Base+0x244c>
   1a870:	ldr	r4, [sp, #4]
   1a874:	add	r5, r7, #1
   1a878:	mov	r3, #32
   1a87c:	add	r0, r8, #1
   1a880:	cmp	r6, r0
   1a884:	beq	1a8a8 <argp_parse@@Base+0x247c>
   1a888:	cmp	r8, r6
   1a88c:	bls	1a910 <argp_parse@@Base+0x24e4>
   1a890:	mvn	r0, r5
   1a894:	add	r0, r0, r6
   1a898:	cmp	r0, r4
   1a89c:	bge	1a910 <argp_parse@@Base+0x24e4>
   1a8a0:	ldr	r0, [sl, #32]
   1a8a4:	b	1a8c0 <argp_parse@@Base+0x2494>
   1a8a8:	cmp	r8, r6
   1a8ac:	bls	1a910 <argp_parse@@Base+0x24e4>
   1a8b0:	ldr	r0, [sl, #32]
   1a8b4:	sub	r1, r0, r5
   1a8b8:	cmp	r1, r4
   1a8bc:	bgt	1a910 <argp_parse@@Base+0x24e4>
   1a8c0:	sub	r0, r0, r8
   1a8c4:	add	r1, r4, #1
   1a8c8:	cmp	r0, r1
   1a8cc:	ble	1a91c <argp_parse@@Base+0x24f0>
   1a8d0:	mov	r0, r4
   1a8d4:	sub	r4, r8, r6
   1a8d8:	add	r7, r5, #1
   1a8dc:	mov	r1, r6
   1a8e0:	add	r0, r7, r0
   1a8e4:	mov	r2, r4
   1a8e8:	bl	11394 <memmove@plt>
   1a8ec:	ldr	r0, [sl, #12]
   1a8f0:	mov	r1, #10
   1a8f4:	mov	r3, #32
   1a8f8:	strb	r1, [r5]
   1a8fc:	mov	r5, r7
   1a900:	add	r6, r7, r0
   1a904:	add	r0, r6, r4
   1a908:	sub	r0, r0, r9
   1a90c:	b	1a96c <argp_parse@@Base+0x2540>
   1a910:	mov	r0, #10
   1a914:	strb	r0, [r5], #1
   1a918:	b	1a970 <argp_parse@@Base+0x2544>
   1a91c:	ldr	r0, [sl, #24]
   1a920:	cmp	r5, r0
   1a924:	bls	1a93c <argp_parse@@Base+0x2510>
   1a928:	ldr	r3, [sl]
   1a92c:	sub	r2, r5, r0
   1a930:	mov	r1, #1
   1a934:	bl	113e8 <fwrite_unlocked@plt>
   1a938:	mov	r3, #32
   1a93c:	ldr	r0, [sl]
   1a940:	ldr	r1, [r0, #20]
   1a944:	ldr	r2, [r0, #24]
   1a948:	cmp	r1, r2
   1a94c:	bcs	1aa60 <argp_parse@@Base+0x2634>
   1a950:	add	r2, r1, #1
   1a954:	str	r2, [r0, #20]
   1a958:	mov	r0, #10
   1a95c:	strb	r0, [r1]
   1a960:	ldr	r5, [sl, #24]
   1a964:	sub	r0, r8, r5
   1a968:	mov	r9, r5
   1a96c:	str	r0, [sp, #8]
   1a970:	ldr	r7, [sl, #12]
   1a974:	sub	r0, r6, r5
   1a978:	cmp	r0, r7
   1a97c:	bge	1a9f4 <argp_parse@@Base+0x25c8>
   1a980:	ldr	r0, [sp, #8]
   1a984:	add	r0, r9, r0
   1a988:	add	r0, r0, #1
   1a98c:	cmp	r6, r0
   1a990:	bne	1a9a4 <argp_parse@@Base+0x2578>
   1a994:	ldr	r0, [sl, #32]
   1a998:	sub	r0, r0, r6
   1a99c:	cmp	r0, r7
   1a9a0:	bge	1a9f4 <argp_parse@@Base+0x25c8>
   1a9a4:	cmp	r7, #1
   1a9a8:	blt	1aa18 <argp_parse@@Base+0x25ec>
   1a9ac:	mov	r4, #0
   1a9b0:	ldr	r0, [sl]
   1a9b4:	ldr	r1, [r0, #20]
   1a9b8:	ldr	r2, [r0, #24]
   1a9bc:	cmp	r1, r2
   1a9c0:	bcs	1a9e4 <argp_parse@@Base+0x25b8>
   1a9c4:	add	r2, r1, #1
   1a9c8:	str	r2, [r0, #20]
   1a9cc:	strb	r3, [r1]
   1a9d0:	ldr	r7, [sl, #12]
   1a9d4:	add	r4, r4, #1
   1a9d8:	cmp	r4, r7
   1a9dc:	blt	1a9b0 <argp_parse@@Base+0x2584>
   1a9e0:	b	1aa18 <argp_parse@@Base+0x25ec>
   1a9e4:	mov	r1, #32
   1a9e8:	bl	115a4 <__overflow@plt>
   1a9ec:	mov	r3, #32
   1a9f0:	b	1a9d0 <argp_parse@@Base+0x25a4>
   1a9f4:	cmp	r7, #1
   1a9f8:	blt	1aa18 <argp_parse@@Base+0x25ec>
   1a9fc:	mov	r0, #0
   1aa00:	strb	r3, [r5, r0]
   1aa04:	add	r0, r0, #1
   1aa08:	ldr	r7, [sl, #12]
   1aa0c:	cmp	r0, r7
   1aa10:	blt	1aa00 <argp_parse@@Base+0x25d4>
   1aa14:	add	r5, r5, r0
   1aa18:	cmp	r5, r6
   1aa1c:	bcs	1a5ac <argp_parse@@Base+0x2180>
   1aa20:	ldr	r0, [sp, #8]
   1aa24:	mov	r1, r6
   1aa28:	add	r0, r9, r0
   1aa2c:	sub	r2, r0, r6
   1aa30:	mov	r0, r5
   1aa34:	bl	11394 <memmove@plt>
   1aa38:	ldr	r7, [sl, #12]
   1aa3c:	mov	r3, #32
   1aa40:	b	1a5ac <argp_parse@@Base+0x2180>
   1aa44:	mov	r7, #0
   1aa48:	add	r5, r4, #1
   1aa4c:	mov	r3, #32
   1aa50:	str	r7, [sl, #20]
   1aa54:	cmp	r5, r8
   1aa58:	bcc	1a5d4 <argp_parse@@Base+0x21a8>
   1aa5c:	b	1aa8c <argp_parse@@Base+0x2660>
   1aa60:	mov	r1, #10
   1aa64:	bl	115a4 <__overflow@plt>
   1aa68:	mov	r3, #32
   1aa6c:	b	1a960 <argp_parse@@Base+0x2534>
   1aa70:	str	r0, [sl, #20]
   1aa74:	b	1aa8c <argp_parse@@Base+0x2660>
   1aa78:	add	r0, r7, r0
   1aa7c:	str	r0, [sl, #20]
   1aa80:	sub	r0, r6, r0
   1aa84:	add	r8, r8, r0
   1aa88:	str	r8, [sl, #28]
   1aa8c:	ldr	r0, [sl, #24]
   1aa90:	sub	r0, r8, r0
   1aa94:	str	r0, [sl, #16]
   1aa98:	sub	sp, fp, #28
   1aa9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aaa0:	push	{r4, r5, r6, sl, fp, lr}
   1aaa4:	add	fp, sp, #16
   1aaa8:	mov	r4, r0
   1aaac:	mov	r5, r1
   1aab0:	ldr	r0, [r0, #28]
   1aab4:	mov	r6, #1
   1aab8:	ldr	r1, [r4, #32]
   1aabc:	sub	r0, r1, r0
   1aac0:	cmp	r0, r5
   1aac4:	bcs	1ab84 <argp_parse@@Base+0x2758>
   1aac8:	mov	r0, r4
   1aacc:	bl	1a570 <argp_parse@@Base+0x2144>
   1aad0:	ldr	r0, [r4, #24]
   1aad4:	ldr	r1, [r4, #28]
   1aad8:	ldr	r3, [r4]
   1aadc:	sub	r2, r1, r0
   1aae0:	mov	r1, #1
   1aae4:	bl	113e8 <fwrite_unlocked@plt>
   1aae8:	mov	r1, r0
   1aaec:	ldr	r0, [r4, #24]
   1aaf0:	ldr	r2, [r4, #28]
   1aaf4:	sub	r3, r2, r0
   1aaf8:	cmp	r1, r3
   1aafc:	bne	1ab50 <argp_parse@@Base+0x2724>
   1ab00:	mov	r1, #0
   1ab04:	mov	r6, #1
   1ab08:	str	r1, [r4, #16]
   1ab0c:	str	r0, [r4, #28]
   1ab10:	ldr	r1, [r4, #32]
   1ab14:	sub	r1, r1, r0
   1ab18:	cmp	r1, r5
   1ab1c:	bcs	1ab84 <argp_parse@@Base+0x2758>
   1ab20:	adds	r5, r1, r5
   1ab24:	bcs	1ab74 <argp_parse@@Base+0x2748>
   1ab28:	mov	r1, r5
   1ab2c:	bl	1a450 <argp_parse@@Base+0x2024>
   1ab30:	cmp	r0, #0
   1ab34:	beq	1ab74 <argp_parse@@Base+0x2748>
   1ab38:	str	r0, [r4, #24]
   1ab3c:	add	r1, r0, r5
   1ab40:	str	r0, [r4, #28]
   1ab44:	mov	r0, r6
   1ab48:	str	r1, [r4, #32]
   1ab4c:	pop	{r4, r5, r6, sl, fp, pc}
   1ab50:	sub	r2, r2, r1
   1ab54:	str	r2, [r4, #28]
   1ab58:	sub	r2, r2, r0
   1ab5c:	ldr	r3, [r4, #16]
   1ab60:	sub	r3, r3, r1
   1ab64:	add	r1, r0, r1
   1ab68:	str	r3, [r4, #16]
   1ab6c:	bl	11394 <memmove@plt>
   1ab70:	b	1ab80 <argp_parse@@Base+0x2754>
   1ab74:	bl	11538 <__errno_location@plt>
   1ab78:	mov	r1, #12
   1ab7c:	str	r1, [r0]
   1ab80:	mov	r6, #0
   1ab84:	mov	r0, r6
   1ab88:	pop	{r4, r5, r6, sl, fp, pc}
   1ab8c:	sub	sp, sp, #8
   1ab90:	push	{r4, r5, r6, r7, fp, lr}
   1ab94:	add	fp, sp, #16
   1ab98:	sub	sp, sp, #8
   1ab9c:	mov	r5, r1
   1aba0:	mov	r4, r0
   1aba4:	mov	r1, #150	; 0x96
   1aba8:	add	r6, fp, #8
   1abac:	str	r2, [fp, #8]
   1abb0:	str	r3, [fp, #12]
   1abb4:	mov	r0, r4
   1abb8:	bl	1aaa0 <argp_parse@@Base+0x2674>
   1abbc:	cmp	r0, #0
   1abc0:	beq	1ac00 <argp_parse@@Base+0x27d4>
   1abc4:	str	r6, [sp, #4]
   1abc8:	mov	r2, r5
   1abcc:	mov	r3, r6
   1abd0:	ldr	r0, [r4, #28]
   1abd4:	ldr	r1, [r4, #32]
   1abd8:	sub	r7, r1, r0
   1abdc:	mov	r1, r7
   1abe0:	bl	1161c <vsnprintf@plt>
   1abe4:	add	r1, r0, #1
   1abe8:	cmp	r0, r7
   1abec:	bcs	1abb4 <argp_parse@@Base+0x2788>
   1abf0:	ldr	r1, [r4, #28]
   1abf4:	add	r1, r1, r0
   1abf8:	str	r1, [r4, #28]
   1abfc:	b	1ac04 <argp_parse@@Base+0x27d8>
   1ac00:	mvn	r0, #0
   1ac04:	sub	sp, fp, #16
   1ac08:	pop	{r4, r5, r6, r7, fp, lr}
   1ac0c:	add	sp, sp, #8
   1ac10:	bx	lr
   1ac14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac18:	add	fp, sp, #28
   1ac1c:	sub	sp, sp, #92	; 0x5c
   1ac20:	mvn	r4, #0
   1ac24:	cmp	r0, #1
   1ac28:	blt	1b70c <argp_parse@@Base+0x32e0>
   1ac2c:	ldr	ip, [fp, #16]
   1ac30:	mov	r9, r2
   1ac34:	mov	r2, r0
   1ac38:	mov	r8, r1
   1ac3c:	mov	r0, #0
   1ac40:	str	r3, [fp, #-48]	; 0xffffffd0
   1ac44:	ldr	r6, [ip]
   1ac48:	ldr	r4, [ip, #4]
   1ac4c:	str	r0, [ip, #12]
   1ac50:	cmp	r6, #0
   1ac54:	beq	1ac78 <argp_parse@@Base+0x284c>
   1ac58:	ldr	r0, [ip, #16]
   1ac5c:	cmp	r0, #0
   1ac60:	beq	1ac80 <argp_parse@@Base+0x2854>
   1ac64:	ldrb	r0, [r9]
   1ac68:	cmp	r0, #45	; 0x2d
   1ac6c:	cmpne	r0, #43	; 0x2b
   1ac70:	addeq	r9, r9, #1
   1ac74:	b	1acf4 <argp_parse@@Base+0x28c8>
   1ac78:	mov	r6, #1
   1ac7c:	str	r6, [ip]
   1ac80:	mov	r0, #0
   1ac84:	str	r6, [ip, #28]
   1ac88:	str	r6, [ip, #32]
   1ac8c:	str	r0, [ip, #20]
   1ac90:	ldrb	r1, [r9]
   1ac94:	cmp	r1, #43	; 0x2b
   1ac98:	beq	1aca8 <argp_parse@@Base+0x287c>
   1ac9c:	cmp	r1, #45	; 0x2d
   1aca0:	bne	1acb4 <argp_parse@@Base+0x2888>
   1aca4:	mov	r0, #2
   1aca8:	str	r0, [ip, #24]
   1acac:	add	r9, r9, #1
   1acb0:	b	1acec <argp_parse@@Base+0x28c0>
   1acb4:	ldr	r0, [fp, #20]
   1acb8:	cmp	r0, #0
   1acbc:	bne	1ace4 <argp_parse@@Base+0x28b8>
   1acc0:	movw	r0, #55283	; 0xd7f3
   1acc4:	mov	r5, ip
   1acc8:	mov	r7, r2
   1accc:	movt	r0, #1
   1acd0:	bl	11484 <getenv@plt>
   1acd4:	mov	r2, r7
   1acd8:	mov	ip, r5
   1acdc:	cmp	r0, #0
   1ace0:	beq	1b718 <argp_parse@@Base+0x32ec>
   1ace4:	mov	r0, #0
   1ace8:	str	r0, [ip, #24]
   1acec:	mov	r0, #1
   1acf0:	str	r0, [ip, #16]
   1acf4:	ldrb	r0, [r9]
   1acf8:	ldr	r5, [ip, #20]
   1acfc:	str	r8, [fp, #-32]	; 0xffffffe0
   1ad00:	subs	r1, r0, #58	; 0x3a
   1ad04:	movne	r1, r4
   1ad08:	cmp	r5, #0
   1ad0c:	str	r1, [fp, #-44]	; 0xffffffd4
   1ad10:	beq	1ad7c <argp_parse@@Base+0x2950>
   1ad14:	ldrb	r0, [r5]
   1ad18:	cmp	r0, #0
   1ad1c:	beq	1ad7c <argp_parse@@Base+0x2950>
   1ad20:	str	r2, [fp, #-36]	; 0xffffffdc
   1ad24:	add	r8, r5, #1
   1ad28:	mov	r0, r9
   1ad2c:	mov	r7, ip
   1ad30:	str	r8, [ip, #20]
   1ad34:	ldrb	r4, [r5]
   1ad38:	mov	r1, r4
   1ad3c:	bl	11520 <strchr@plt>
   1ad40:	ldrb	r1, [r5, #1]
   1ad44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad48:	cmp	r1, #0
   1ad4c:	orr	r1, r4, #1
   1ad50:	addeq	r6, r6, #1
   1ad54:	streq	r6, [r7]
   1ad58:	cmp	r1, #59	; 0x3b
   1ad5c:	cmpne	r0, #0
   1ad60:	bne	1addc <argp_parse@@Base+0x29b0>
   1ad64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad68:	cmp	r0, #0
   1ad6c:	bne	1b74c <argp_parse@@Base+0x3320>
   1ad70:	str	r4, [r7, #8]
   1ad74:	mov	r4, #63	; 0x3f
   1ad78:	b	1b70c <argp_parse@@Base+0x32e0>
   1ad7c:	mov	r3, ip
   1ad80:	str	r9, [sp, #48]	; 0x30
   1ad84:	mov	r5, ip
   1ad88:	ldr	r9, [r3, #32]!
   1ad8c:	cmp	r9, r6
   1ad90:	strgt	r6, [r3]
   1ad94:	movgt	r9, r6
   1ad98:	ldr	r7, [r5, #28]!
   1ad9c:	cmp	r7, r6
   1ada0:	strgt	r6, [r5]
   1ada4:	movgt	r7, r6
   1ada8:	ldr	r4, [ip, #24]
   1adac:	cmp	r4, #1
   1adb0:	bne	1b254 <argp_parse@@Base+0x2e28>
   1adb4:	cmp	r7, r9
   1adb8:	cmpne	r9, r6
   1adbc:	bne	1ae60 <argp_parse@@Base+0x2a34>
   1adc0:	cmp	r9, r6
   1adc4:	mov	r1, r5
   1adc8:	mov	r0, r6
   1adcc:	bne	1b200 <argp_parse@@Base+0x2dd4>
   1add0:	cmp	r6, r2
   1add4:	blt	1b224 <argp_parse@@Base+0x2df8>
   1add8:	b	1b240 <argp_parse@@Base+0x2e14>
   1addc:	ldrb	r2, [r0]
   1ade0:	ldrb	r1, [r0, #1]
   1ade4:	cmp	r2, #87	; 0x57
   1ade8:	bne	1ae38 <argp_parse@@Base+0x2a0c>
   1adec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1adf0:	cmp	r2, #0
   1adf4:	beq	1ae38 <argp_parse@@Base+0x2a0c>
   1adf8:	cmp	r1, #59	; 0x3b
   1adfc:	bne	1ae38 <argp_parse@@Base+0x2a0c>
   1ae00:	ldrb	r0, [r8]
   1ae04:	cmp	r0, #0
   1ae08:	bne	1b77c <argp_parse@@Base+0x3350>
   1ae0c:	cmp	r6, r3
   1ae10:	bne	1b774 <argp_parse@@Base+0x3348>
   1ae14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae18:	cmp	r0, #0
   1ae1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae20:	bne	1b874 <argp_parse@@Base+0x3448>
   1ae24:	str	r4, [r7, #8]
   1ae28:	ldrb	r4, [r9]
   1ae2c:	cmp	r4, #58	; 0x3a
   1ae30:	movwne	r4, #63	; 0x3f
   1ae34:	b	1b70c <argp_parse@@Base+0x32e0>
   1ae38:	cmp	r1, #58	; 0x3a
   1ae3c:	bne	1b70c <argp_parse@@Base+0x32e0>
   1ae40:	ldrb	r0, [r0, #2]
   1ae44:	ldrb	r1, [r8]
   1ae48:	cmp	r0, #58	; 0x3a
   1ae4c:	bne	1b35c <argp_parse@@Base+0x2f30>
   1ae50:	cmp	r1, #0
   1ae54:	bne	1b364 <argp_parse@@Base+0x2f38>
   1ae58:	mov	r0, #0
   1ae5c:	b	1b83c <argp_parse@@Base+0x3410>
   1ae60:	cmp	r6, r9
   1ae64:	str	r4, [sp, #28]
   1ae68:	str	r5, [sp, #56]	; 0x38
   1ae6c:	str	r7, [fp, #-40]	; 0xffffffd8
   1ae70:	str	r3, [sp, #52]	; 0x34
   1ae74:	str	r2, [fp, #-36]	; 0xffffffdc
   1ae78:	ble	1b1dc <argp_parse@@Base+0x2db0>
   1ae7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae80:	cmp	r0, r9
   1ae84:	bge	1b1dc <argp_parse@@Base+0x2db0>
   1ae88:	add	r0, r8, r9, lsl #2
   1ae8c:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1ae90:	mov	r2, r6
   1ae94:	str	r0, [fp, #-52]	; 0xffffffcc
   1ae98:	sub	r0, r8, r9, lsl #2
   1ae9c:	str	r0, [sp, #32]
   1aea0:	rsb	r0, r9, #1
   1aea4:	add	r0, r8, r0, lsl #2
   1aea8:	str	r0, [sp, #44]	; 0x2c
   1aeac:	mvn	r0, r9
   1aeb0:	str	r0, [fp, #-56]	; 0xffffffc8
   1aeb4:	add	r0, r8, r0, lsl #2
   1aeb8:	add	r0, r0, #4
   1aebc:	str	r0, [sp, #24]
   1aec0:	add	r0, r8, #4
   1aec4:	str	r0, [sp, #60]	; 0x3c
   1aec8:	b	1aedc <argp_parse@@Base+0x2ab0>
   1aecc:	mov	r2, sl
   1aed0:	cmp	r2, r9
   1aed4:	cmpgt	r9, lr
   1aed8:	ble	1b1dc <argp_parse@@Base+0x2db0>
   1aedc:	sub	r4, r9, lr
   1aee0:	sub	r0, r2, r9
   1aee4:	cmp	r0, r4
   1aee8:	ble	1af98 <argp_parse@@Base+0x2b6c>
   1aeec:	sub	sl, r2, r4
   1aef0:	cmp	r4, #1
   1aef4:	blt	1aecc <argp_parse@@Base+0x2aa0>
   1aef8:	mov	r3, #0
   1aefc:	cmp	r4, #4
   1af00:	bcc	1b080 <argp_parse@@Base+0x2c54>
   1af04:	add	r5, r8, r2, lsl #2
   1af08:	add	r1, r8, lr, lsl #2
   1af0c:	cmp	r1, r5
   1af10:	bcs	1af24 <argp_parse@@Base+0x2af8>
   1af14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af18:	add	r5, r8, sl, lsl #2
   1af1c:	cmp	r5, r0
   1af20:	bcc	1b080 <argp_parse@@Base+0x2c54>
   1af24:	bic	r3, r4, #3
   1af28:	mov	r0, #1
   1af2c:	str	sl, [sp, #40]	; 0x28
   1af30:	subs	r5, r3, #4
   1af34:	add	r5, r0, r5, lsr #2
   1af38:	and	r0, r5, #1
   1af3c:	str	r0, [sp, #36]	; 0x24
   1af40:	beq	1b03c <argp_parse@@Base+0x2c10>
   1af44:	sub	r8, r5, r0
   1af48:	ldr	r0, [sp, #24]
   1af4c:	add	r5, r2, lr
   1af50:	mov	r7, #0
   1af54:	add	sl, r0, r5, lsl #2
   1af58:	mov	r5, #0
   1af5c:	add	ip, r1, r5
   1af60:	add	r0, sl, r5
   1af64:	add	r5, r5, #32
   1af68:	subs	r8, r8, #2
   1af6c:	add	r7, r7, #8
   1af70:	vld1.32	{d16-d17}, [r0]
   1af74:	vld1.32	{d18-d19}, [ip]
   1af78:	vst1.32	{d16-d17}, [ip]!
   1af7c:	vst1.32	{d18-d19}, [r0]!
   1af80:	vld1.32	{d16-d17}, [r0]
   1af84:	vld1.32	{d18-d19}, [ip]
   1af88:	vst1.32	{d16-d17}, [ip]
   1af8c:	vst1.32	{d18-d19}, [r0]
   1af90:	bne	1af5c <argp_parse@@Base+0x2b30>
   1af94:	b	1b040 <argp_parse@@Base+0x2c14>
   1af98:	cmp	r0, #1
   1af9c:	blt	1b1d0 <argp_parse@@Base+0x2da4>
   1afa0:	mov	sl, #0
   1afa4:	cmp	r0, #3
   1afa8:	bls	1b14c <argp_parse@@Base+0x2d20>
   1afac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1afb0:	add	r1, r3, r2, lsl #2
   1afb4:	add	r8, r3, lr, lsl #2
   1afb8:	cmp	r8, r1
   1afbc:	bcs	1afd8 <argp_parse@@Base+0x2bac>
   1afc0:	ldr	r3, [sp, #32]
   1afc4:	add	r1, r2, lr
   1afc8:	add	r1, r3, r1, lsl #2
   1afcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1afd0:	cmp	r3, r1
   1afd4:	bcc	1b14c <argp_parse@@Base+0x2d20>
   1afd8:	bic	sl, r0, #3
   1afdc:	mov	r3, #1
   1afe0:	subs	r1, sl, #4
   1afe4:	add	r1, r3, r1, lsr #2
   1afe8:	and	r3, r1, #1
   1afec:	str	r3, [sp, #40]	; 0x28
   1aff0:	beq	1b10c <argp_parse@@Base+0x2ce0>
   1aff4:	sub	r7, r3, r1
   1aff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1affc:	mov	r1, #0
   1b000:	mov	ip, #32
   1b004:	mov	r5, r3
   1b008:	mov	r4, r8
   1b00c:	adds	r7, r7, #2
   1b010:	add	r1, r1, #8
   1b014:	vld1.32	{d16-d17}, [r5]!
   1b018:	vld1.32	{d18-d19}, [r4]!
   1b01c:	vst1.32	{d16-d17}, [r8], ip
   1b020:	vst1.32	{d18-d19}, [r3], ip
   1b024:	vld1.32	{d16-d17}, [r5]
   1b028:	vld1.32	{d18-d19}, [r4]
   1b02c:	vst1.32	{d16-d17}, [r4]
   1b030:	vst1.32	{d18-d19}, [r5]
   1b034:	bne	1b004 <argp_parse@@Base+0x2bd8>
   1b038:	b	1b110 <argp_parse@@Base+0x2ce4>
   1b03c:	mov	r7, #0
   1b040:	ldr	r0, [sp, #36]	; 0x24
   1b044:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1b048:	ldr	sl, [sp, #40]	; 0x28
   1b04c:	cmp	r0, #0
   1b050:	beq	1b074 <argp_parse@@Base+0x2c48>
   1b054:	add	r0, r7, lr
   1b058:	add	r1, r7, sl
   1b05c:	add	r0, r8, r0, lsl #2
   1b060:	add	r1, r8, r1, lsl #2
   1b064:	vld1.32	{d16-d17}, [r1]
   1b068:	vld1.32	{d18-d19}, [r0]
   1b06c:	vst1.32	{d16-d17}, [r0]
   1b070:	vst1.32	{d18-d19}, [r1]
   1b074:	ldr	ip, [fp, #16]
   1b078:	cmp	r4, r3
   1b07c:	beq	1aecc <argp_parse@@Base+0x2aa0>
   1b080:	mvn	r0, r3
   1b084:	tst	r4, #1
   1b088:	add	r1, r9, r0
   1b08c:	beq	1b0ac <argp_parse@@Base+0x2c80>
   1b090:	add	r0, r3, lr
   1b094:	add	r5, r3, sl
   1b098:	orr	r3, r3, #1
   1b09c:	ldr	r7, [r8, r0, lsl #2]
   1b0a0:	ldr	r4, [r8, r5, lsl #2]
   1b0a4:	str	r4, [r8, r0, lsl #2]
   1b0a8:	str	r7, [r8, r5, lsl #2]
   1b0ac:	cmp	r1, lr
   1b0b0:	beq	1aecc <argp_parse@@Base+0x2aa0>
   1b0b4:	ldr	r4, [sp, #60]	; 0x3c
   1b0b8:	add	r0, lr, r3
   1b0bc:	sub	r1, r9, r3
   1b0c0:	add	r4, r4, r0, lsl #2
   1b0c4:	add	r0, r2, lr
   1b0c8:	ldr	r2, [sp, #44]	; 0x2c
   1b0cc:	add	r0, r0, r3
   1b0d0:	add	r2, r2, r0, lsl #2
   1b0d4:	ldr	r0, [r4, #-4]
   1b0d8:	ldr	r3, [r2, #-4]
   1b0dc:	sub	r1, r1, #2
   1b0e0:	cmp	lr, r1
   1b0e4:	str	r3, [r4, #-4]
   1b0e8:	str	r0, [r2, #-4]
   1b0ec:	ldr	r0, [r4]
   1b0f0:	ldr	r3, [r2]
   1b0f4:	str	r3, [r4]
   1b0f8:	str	r0, [r2]
   1b0fc:	add	r2, r2, #8
   1b100:	add	r4, r4, #8
   1b104:	bne	1b0d4 <argp_parse@@Base+0x2ca8>
   1b108:	b	1aecc <argp_parse@@Base+0x2aa0>
   1b10c:	mov	r1, #0
   1b110:	ldr	r3, [sp, #40]	; 0x28
   1b114:	ldr	ip, [fp, #16]
   1b118:	cmp	r3, #0
   1b11c:	beq	1b144 <argp_parse@@Base+0x2d18>
   1b120:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b124:	add	r3, r1, lr
   1b128:	add	r1, r1, r9
   1b12c:	add	r3, r4, r3, lsl #2
   1b130:	add	r1, r4, r1, lsl #2
   1b134:	vld1.32	{d16-d17}, [r1]
   1b138:	vld1.32	{d18-d19}, [r3]
   1b13c:	vst1.32	{d16-d17}, [r3]
   1b140:	vst1.32	{d18-d19}, [r1]
   1b144:	cmp	r0, sl
   1b148:	beq	1b1d0 <argp_parse@@Base+0x2da4>
   1b14c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b150:	tst	r0, #1
   1b154:	mov	r4, sl
   1b158:	add	r1, r2, r1
   1b15c:	beq	1b180 <argp_parse@@Base+0x2d54>
   1b160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b164:	add	r7, sl, r9
   1b168:	add	r4, sl, lr
   1b16c:	ldr	r5, [r3, r7, lsl #2]
   1b170:	ldr	r8, [r3, r4, lsl #2]
   1b174:	str	r5, [r3, r4, lsl #2]
   1b178:	orr	r4, sl, #1
   1b17c:	str	r8, [r3, r7, lsl #2]
   1b180:	cmp	r1, sl
   1b184:	beq	1b1d0 <argp_parse@@Base+0x2da4>
   1b188:	ldr	r3, [sp, #60]	; 0x3c
   1b18c:	add	r1, lr, r4
   1b190:	add	r4, r9, r4
   1b194:	add	r1, r3, r1, lsl #2
   1b198:	add	r3, r3, r4, lsl #2
   1b19c:	sub	r4, r4, r2
   1b1a0:	ldr	r7, [r1, #-4]
   1b1a4:	ldr	r5, [r3, #-4]
   1b1a8:	adds	r4, r4, #2
   1b1ac:	str	r5, [r1, #-4]
   1b1b0:	str	r7, [r3, #-4]
   1b1b4:	ldr	r7, [r1]
   1b1b8:	ldr	r5, [r3]
   1b1bc:	str	r5, [r1]
   1b1c0:	str	r7, [r3]
   1b1c4:	add	r1, r1, #8
   1b1c8:	add	r3, r3, #8
   1b1cc:	bne	1b1a0 <argp_parse@@Base+0x2d74>
   1b1d0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1b1d4:	add	lr, r0, lr
   1b1d8:	b	1aed0 <argp_parse@@Base+0x2aa4>
   1b1dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b1e0:	ldr	r3, [sp, #52]	; 0x34
   1b1e4:	ldr	r5, [sp, #56]	; 0x38
   1b1e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b1ec:	ldr	r4, [sp, #28]
   1b1f0:	add	r0, r0, r6
   1b1f4:	mov	r1, r3
   1b1f8:	sub	r0, r0, r9
   1b1fc:	str	r0, [r5]
   1b200:	mov	r7, r0
   1b204:	str	r6, [r1]
   1b208:	cmp	r6, r2
   1b20c:	blt	1b224 <argp_parse@@Base+0x2df8>
   1b210:	b	1b240 <argp_parse@@Base+0x2e14>
   1b214:	add	r6, r6, #1
   1b218:	cmp	r2, r6
   1b21c:	str	r6, [ip]
   1b220:	beq	1b248 <argp_parse@@Base+0x2e1c>
   1b224:	ldr	r0, [r8, r6, lsl #2]
   1b228:	ldrb	r1, [r0]
   1b22c:	cmp	r1, #45	; 0x2d
   1b230:	bne	1b214 <argp_parse@@Base+0x2de8>
   1b234:	ldrb	r0, [r0, #1]
   1b238:	cmp	r0, #0
   1b23c:	beq	1b214 <argp_parse@@Base+0x2de8>
   1b240:	mov	r9, r6
   1b244:	b	1b24c <argp_parse@@Base+0x2e20>
   1b248:	mov	r9, r2
   1b24c:	mov	r6, r9
   1b250:	str	r9, [r3]
   1b254:	cmp	r6, r2
   1b258:	beq	1b700 <argp_parse@@Base+0x32d4>
   1b25c:	mov	sl, r4
   1b260:	movw	r4, #54227	; 0xd3d3
   1b264:	ldr	r0, [r8, r6, lsl #2]
   1b268:	str	r5, [sp, #56]	; 0x38
   1b26c:	str	r7, [fp, #-40]	; 0xffffffd8
   1b270:	str	r3, [sp, #52]	; 0x34
   1b274:	str	r2, [fp, #-36]	; 0xffffffdc
   1b278:	movt	r4, #1
   1b27c:	mov	r1, r4
   1b280:	bl	11340 <strcmp@plt>
   1b284:	cmp	r0, #0
   1b288:	beq	1b30c <argp_parse@@Base+0x2ee0>
   1b28c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b290:	ldr	ip, [fp, #16]
   1b294:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1b298:	cmp	r6, r2
   1b29c:	beq	1b700 <argp_parse@@Base+0x32d4>
   1b2a0:	ldr	r5, [r8, r6, lsl #2]
   1b2a4:	mov	r3, r4
   1b2a8:	mvn	r4, #0
   1b2ac:	ldrb	r0, [r5]
   1b2b0:	cmp	r0, #45	; 0x2d
   1b2b4:	bne	1b344 <argp_parse@@Base+0x2f18>
   1b2b8:	mov	r7, r5
   1b2bc:	ldrb	r1, [r7, #1]!
   1b2c0:	cmp	r1, #0
   1b2c4:	beq	1b344 <argp_parse@@Base+0x2f18>
   1b2c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b2cc:	cmp	r0, #0
   1b2d0:	beq	1b864 <argp_parse@@Base+0x3438>
   1b2d4:	ldr	r9, [fp, #12]
   1b2d8:	cmp	r1, #45	; 0x2d
   1b2dc:	bne	1b7c8 <argp_parse@@Base+0x339c>
   1b2e0:	add	r0, r5, #2
   1b2e4:	mov	r1, r8
   1b2e8:	str	r0, [ip, #20]
   1b2ec:	ldr	r0, [fp, #8]
   1b2f0:	stm	sp, {r0, r9, ip}
   1b2f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b2f8:	str	r3, [sp, #16]
   1b2fc:	str	r0, [sp, #12]
   1b300:	mov	r0, r2
   1b304:	ldr	r2, [sp, #48]	; 0x30
   1b308:	b	1b7b8 <argp_parse@@Base+0x338c>
   1b30c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b310:	ldr	ip, [fp, #16]
   1b314:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b318:	add	r2, r6, #1
   1b31c:	cmp	r0, r9
   1b320:	str	r2, [ip]
   1b324:	cmpne	r9, r2
   1b328:	bne	1b374 <argp_parse@@Base+0x2f48>
   1b32c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b330:	ldr	r1, [sp, #56]	; 0x38
   1b334:	cmp	r0, r9
   1b338:	mov	r0, r2
   1b33c:	beq	1b6e8 <argp_parse@@Base+0x32bc>
   1b340:	b	1b6f0 <argp_parse@@Base+0x32c4>
   1b344:	cmp	sl, #0
   1b348:	addne	r0, r6, #1
   1b34c:	strne	r5, [ip, #12]
   1b350:	movne	r4, #1
   1b354:	strne	r0, [ip]
   1b358:	b	1b70c <argp_parse@@Base+0x32e0>
   1b35c:	cmp	r1, #0
   1b360:	beq	1b720 <argp_parse@@Base+0x32f4>
   1b364:	add	r0, r6, #1
   1b368:	str	r8, [r7, #12]
   1b36c:	str	r0, [r7]
   1b370:	b	1b840 <argp_parse@@Base+0x3414>
   1b374:	cmp	r6, r9
   1b378:	str	r2, [sp, #48]	; 0x30
   1b37c:	blt	1b6c8 <argp_parse@@Base+0x329c>
   1b380:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b384:	cmp	r0, r9
   1b388:	bge	1b6c8 <argp_parse@@Base+0x329c>
   1b38c:	add	r0, r8, r9, lsl #2
   1b390:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1b394:	str	r0, [fp, #-44]	; 0xffffffd4
   1b398:	sub	r0, r8, r9, lsl #2
   1b39c:	str	r0, [sp, #44]	; 0x2c
   1b3a0:	rsb	r0, r9, #1
   1b3a4:	add	r0, r8, r0, lsl #2
   1b3a8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b3ac:	mvn	r0, r9
   1b3b0:	str	r0, [fp, #-48]	; 0xffffffd0
   1b3b4:	add	r0, r8, r0, lsl #2
   1b3b8:	add	r0, r0, #4
   1b3bc:	str	r0, [sp, #40]	; 0x28
   1b3c0:	add	r0, r8, #4
   1b3c4:	str	r0, [fp, #-52]	; 0xffffffcc
   1b3c8:	ldr	r0, [sp, #48]	; 0x30
   1b3cc:	b	1b3e0 <argp_parse@@Base+0x2fb4>
   1b3d0:	mov	r0, r3
   1b3d4:	cmp	r0, r9
   1b3d8:	cmpgt	r9, ip
   1b3dc:	ble	1b6c8 <argp_parse@@Base+0x329c>
   1b3e0:	sub	r4, r9, ip
   1b3e4:	sub	sl, r0, r9
   1b3e8:	cmp	sl, r4
   1b3ec:	ble	1b498 <argp_parse@@Base+0x306c>
   1b3f0:	sub	r3, r0, r4
   1b3f4:	cmp	r4, #1
   1b3f8:	blt	1b3d0 <argp_parse@@Base+0x2fa4>
   1b3fc:	mov	r1, #0
   1b400:	cmp	r4, #4
   1b404:	bcc	1b578 <argp_parse@@Base+0x314c>
   1b408:	add	r2, r8, r0, lsl #2
   1b40c:	add	r7, r8, ip, lsl #2
   1b410:	cmp	r7, r2
   1b414:	bcs	1b428 <argp_parse@@Base+0x2ffc>
   1b418:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1b41c:	add	r2, r8, r3, lsl #2
   1b420:	cmp	r2, r5
   1b424:	bcc	1b578 <argp_parse@@Base+0x314c>
   1b428:	bic	r1, r4, #3
   1b42c:	mov	r6, #1
   1b430:	subs	r2, r1, #4
   1b434:	add	r2, r6, r2, lsr #2
   1b438:	and	r6, r2, #1
   1b43c:	str	r6, [sp, #60]	; 0x3c
   1b440:	beq	1b538 <argp_parse@@Base+0x310c>
   1b444:	ldr	r5, [sp, #40]	; 0x28
   1b448:	sub	r2, r6, r2
   1b44c:	add	r6, ip, r0
   1b450:	add	lr, r5, r6, lsl #2
   1b454:	mov	r5, #0
   1b458:	mov	r6, #0
   1b45c:	add	sl, r7, r5
   1b460:	add	r8, lr, r5
   1b464:	adds	r2, r2, #2
   1b468:	add	r5, r5, #32
   1b46c:	add	r6, r6, #8
   1b470:	vld1.32	{d16-d17}, [r8]
   1b474:	vld1.32	{d18-d19}, [sl]
   1b478:	vst1.32	{d16-d17}, [sl]!
   1b47c:	vst1.32	{d18-d19}, [r8]!
   1b480:	vld1.32	{d16-d17}, [r8]
   1b484:	vld1.32	{d18-d19}, [sl]
   1b488:	vst1.32	{d16-d17}, [sl]
   1b48c:	vst1.32	{d18-d19}, [r8]
   1b490:	bne	1b45c <argp_parse@@Base+0x3030>
   1b494:	b	1b53c <argp_parse@@Base+0x3110>
   1b498:	cmp	sl, #1
   1b49c:	blt	1b6c0 <argp_parse@@Base+0x3294>
   1b4a0:	mov	r1, #0
   1b4a4:	cmp	sl, #3
   1b4a8:	bls	1b640 <argp_parse@@Base+0x3214>
   1b4ac:	add	r2, r8, r0, lsl #2
   1b4b0:	add	r7, r8, ip, lsl #2
   1b4b4:	cmp	r7, r2
   1b4b8:	bcs	1b4d4 <argp_parse@@Base+0x30a8>
   1b4bc:	ldr	r3, [sp, #44]	; 0x2c
   1b4c0:	add	r2, ip, r0
   1b4c4:	add	r2, r3, r2, lsl #2
   1b4c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b4cc:	cmp	r3, r2
   1b4d0:	bcc	1b640 <argp_parse@@Base+0x3214>
   1b4d4:	bic	r1, sl, #3
   1b4d8:	mov	r3, #1
   1b4dc:	subs	r2, r1, #4
   1b4e0:	add	r2, r3, r2, lsr #2
   1b4e4:	and	r3, r2, #1
   1b4e8:	str	r3, [sp, #60]	; 0x3c
   1b4ec:	beq	1b604 <argp_parse@@Base+0x31d8>
   1b4f0:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1b4f4:	sub	r6, r3, r2
   1b4f8:	mov	r4, #0
   1b4fc:	mov	lr, #32
   1b500:	mov	r2, r5
   1b504:	mov	r3, r7
   1b508:	adds	r6, r6, #2
   1b50c:	add	r4, r4, #8
   1b510:	vld1.32	{d16-d17}, [r2]!
   1b514:	vld1.32	{d18-d19}, [r3]!
   1b518:	vst1.32	{d16-d17}, [r7], lr
   1b51c:	vst1.32	{d18-d19}, [r5], lr
   1b520:	vld1.32	{d16-d17}, [r2]
   1b524:	vld1.32	{d18-d19}, [r3]
   1b528:	vst1.32	{d16-d17}, [r3]
   1b52c:	vst1.32	{d18-d19}, [r2]
   1b530:	bne	1b500 <argp_parse@@Base+0x30d4>
   1b534:	b	1b608 <argp_parse@@Base+0x31dc>
   1b538:	mov	r6, #0
   1b53c:	ldr	r2, [sp, #60]	; 0x3c
   1b540:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1b544:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b548:	cmp	r2, #0
   1b54c:	beq	1b570 <argp_parse@@Base+0x3144>
   1b550:	add	r2, r6, ip
   1b554:	add	r7, r6, r3
   1b558:	add	r2, r8, r2, lsl #2
   1b55c:	add	r7, r8, r7, lsl #2
   1b560:	vld1.32	{d16-d17}, [r7]
   1b564:	vld1.32	{d18-d19}, [r2]
   1b568:	vst1.32	{d16-d17}, [r2]
   1b56c:	vst1.32	{d18-d19}, [r7]
   1b570:	cmp	r4, r1
   1b574:	beq	1b3d0 <argp_parse@@Base+0x2fa4>
   1b578:	mvn	r2, r1
   1b57c:	tst	r4, #1
   1b580:	add	r2, r9, r2
   1b584:	beq	1b5a4 <argp_parse@@Base+0x3178>
   1b588:	add	r7, r1, ip
   1b58c:	add	r5, r1, r3
   1b590:	orr	r1, r1, #1
   1b594:	ldr	r6, [r8, r7, lsl #2]
   1b598:	ldr	r4, [r8, r5, lsl #2]
   1b59c:	str	r4, [r8, r7, lsl #2]
   1b5a0:	str	r6, [r8, r5, lsl #2]
   1b5a4:	cmp	r2, ip
   1b5a8:	beq	1b3d0 <argp_parse@@Base+0x2fa4>
   1b5ac:	add	r0, ip, r0
   1b5b0:	sub	r2, r9, r1
   1b5b4:	add	r7, ip, r1
   1b5b8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1b5bc:	add	r0, r0, r1
   1b5c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b5c4:	add	r7, r4, r7, lsl #2
   1b5c8:	add	r0, r1, r0, lsl #2
   1b5cc:	ldr	r1, [r7, #-4]
   1b5d0:	ldr	r6, [r0, #-4]
   1b5d4:	sub	r2, r2, #2
   1b5d8:	cmp	ip, r2
   1b5dc:	str	r6, [r7, #-4]
   1b5e0:	str	r1, [r0, #-4]
   1b5e4:	ldr	r1, [r7]
   1b5e8:	ldr	r6, [r0]
   1b5ec:	str	r6, [r7]
   1b5f0:	str	r1, [r0]
   1b5f4:	add	r0, r0, #8
   1b5f8:	add	r7, r7, #8
   1b5fc:	bne	1b5cc <argp_parse@@Base+0x31a0>
   1b600:	b	1b3d0 <argp_parse@@Base+0x2fa4>
   1b604:	mov	r4, #0
   1b608:	ldr	r2, [sp, #60]	; 0x3c
   1b60c:	cmp	r2, #0
   1b610:	beq	1b634 <argp_parse@@Base+0x3208>
   1b614:	add	r2, r4, ip
   1b618:	add	r3, r4, r9
   1b61c:	add	r2, r8, r2, lsl #2
   1b620:	add	r3, r8, r3, lsl #2
   1b624:	vld1.32	{d16-d17}, [r3]
   1b628:	vld1.32	{d18-d19}, [r2]
   1b62c:	vst1.32	{d16-d17}, [r2]
   1b630:	vst1.32	{d18-d19}, [r3]
   1b634:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b638:	cmp	sl, r1
   1b63c:	beq	1b6c0 <argp_parse@@Base+0x3294>
   1b640:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b644:	tst	sl, #1
   1b648:	mov	r3, r1
   1b64c:	add	r2, r0, r2
   1b650:	beq	1b670 <argp_parse@@Base+0x3244>
   1b654:	add	r6, r1, r9
   1b658:	add	r3, r1, ip
   1b65c:	ldr	r5, [r8, r6, lsl #2]
   1b660:	ldr	r7, [r8, r3, lsl #2]
   1b664:	str	r5, [r8, r3, lsl #2]
   1b668:	orr	r3, r1, #1
   1b66c:	str	r7, [r8, r6, lsl #2]
   1b670:	cmp	r2, r1
   1b674:	beq	1b6c0 <argp_parse@@Base+0x3294>
   1b678:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b67c:	add	r1, ip, r3
   1b680:	add	r3, r9, r3
   1b684:	add	r1, r2, r1, lsl #2
   1b688:	add	r2, r2, r3, lsl #2
   1b68c:	sub	r3, r3, r0
   1b690:	ldr	r7, [r1, #-4]
   1b694:	ldr	r6, [r2, #-4]
   1b698:	adds	r3, r3, #2
   1b69c:	str	r6, [r1, #-4]
   1b6a0:	str	r7, [r2, #-4]
   1b6a4:	ldr	r7, [r1]
   1b6a8:	ldr	r6, [r2]
   1b6ac:	str	r6, [r1]
   1b6b0:	str	r7, [r2]
   1b6b4:	add	r1, r1, #8
   1b6b8:	add	r2, r2, #8
   1b6bc:	bne	1b690 <argp_parse@@Base+0x3264>
   1b6c0:	add	ip, sl, ip
   1b6c4:	b	1b3d4 <argp_parse@@Base+0x2fa8>
   1b6c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b6cc:	ldr	r2, [sp, #48]	; 0x30
   1b6d0:	ldr	r1, [sp, #56]	; 0x38
   1b6d4:	ldr	ip, [fp, #16]
   1b6d8:	add	r0, r0, r2
   1b6dc:	sub	r0, r0, r9
   1b6e0:	str	r0, [r1]
   1b6e4:	ldr	r1, [sp, #52]	; 0x34
   1b6e8:	str	r2, [r1]
   1b6ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1b6f0:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1b6f4:	str	lr, [ip]
   1b6f8:	str	lr, [ip, #32]
   1b6fc:	mov	r9, lr
   1b700:	cmp	r7, r9
   1b704:	mvn	r4, #0
   1b708:	strne	r7, [ip]
   1b70c:	mov	r0, r4
   1b710:	sub	sp, fp, #28
   1b714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b718:	mov	r0, #1
   1b71c:	b	1ace8 <argp_parse@@Base+0x28bc>
   1b720:	cmp	r6, r3
   1b724:	bne	1b82c <argp_parse@@Base+0x3400>
   1b728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b72c:	cmp	r0, #0
   1b730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b734:	bne	1b898 <argp_parse@@Base+0x346c>
   1b738:	str	r4, [r7, #8]
   1b73c:	ldrb	r4, [r9]
   1b740:	cmp	r4, #58	; 0x3a
   1b744:	movwne	r4, #63	; 0x3f
   1b748:	b	1b840 <argp_parse@@Base+0x3414>
   1b74c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b750:	movw	r1, #55210	; 0xd7aa
   1b754:	mov	r3, r4
   1b758:	movt	r1, #1
   1b75c:	ldr	r2, [r0]
   1b760:	movw	r0, #58920	; 0xe628
   1b764:	movt	r0, #2
   1b768:	ldr	r0, [r0]
   1b76c:	bl	1152c <fprintf@plt>
   1b770:	b	1ad70 <argp_parse@@Base+0x2944>
   1b774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b778:	ldr	r8, [r0, r6, lsl #2]
   1b77c:	ldr	r2, [fp, #8]
   1b780:	movw	r1, #55279	; 0xd7ef
   1b784:	str	r8, [r7, #12]
   1b788:	mov	r0, #0
   1b78c:	movt	r1, #1
   1b790:	str	r0, [r7, #12]
   1b794:	str	r8, [r7, #20]
   1b798:	str	r2, [sp]
   1b79c:	stmib	sp, {r0, r7}
   1b7a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b7a4:	str	r1, [sp, #16]
   1b7a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b7ac:	mov	r2, r9
   1b7b0:	str	r0, [sp, #12]
   1b7b4:	mov	r0, r3
   1b7b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7bc:	bl	1b8bc <argp_parse@@Base+0x3490>
   1b7c0:	sub	sp, fp, #28
   1b7c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7c8:	cmp	r9, #0
   1b7cc:	beq	1b864 <argp_parse@@Base+0x3438>
   1b7d0:	ldrb	r0, [r5, #2]
   1b7d4:	cmp	r0, #0
   1b7d8:	beq	1b84c <argp_parse@@Base+0x3420>
   1b7dc:	ldr	r1, [fp, #8]
   1b7e0:	movw	r0, #54228	; 0xd3d4
   1b7e4:	str	r7, [ip, #20]
   1b7e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b7ec:	movt	r0, #1
   1b7f0:	stm	sp, {r1, r9, ip}
   1b7f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b7f8:	str	r0, [sp, #16]
   1b7fc:	mov	r0, r2
   1b800:	ldr	r2, [sp, #48]	; 0x30
   1b804:	str	r1, [sp, #12]
   1b808:	mov	r1, r8
   1b80c:	bl	1b8bc <argp_parse@@Base+0x3490>
   1b810:	ldr	ip, [fp, #16]
   1b814:	mov	r4, r0
   1b818:	cmn	r0, #1
   1b81c:	bne	1b70c <argp_parse@@Base+0x32e0>
   1b820:	ldr	r6, [ip]
   1b824:	ldr	r5, [r8, r6, lsl #2]
   1b828:	b	1b864 <argp_parse@@Base+0x3438>
   1b82c:	add	r0, r6, #1
   1b830:	str	r0, [r7]
   1b834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b838:	ldr	r0, [r0, r6, lsl #2]
   1b83c:	str	r0, [r7, #12]
   1b840:	mov	r0, #0
   1b844:	str	r0, [r7, #20]
   1b848:	b	1b70c <argp_parse@@Base+0x32e0>
   1b84c:	ldr	r0, [sp, #48]	; 0x30
   1b850:	bl	11520 <strchr@plt>
   1b854:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b858:	ldr	ip, [fp, #16]
   1b85c:	cmp	r0, #0
   1b860:	beq	1b7dc <argp_parse@@Base+0x33b0>
   1b864:	ldr	r9, [sp, #48]	; 0x30
   1b868:	add	r5, r5, #1
   1b86c:	str	r5, [ip, #20]
   1b870:	b	1ad24 <argp_parse@@Base+0x28f8>
   1b874:	ldr	r2, [r0]
   1b878:	movw	r0, #58920	; 0xe628
   1b87c:	movw	r1, #55238	; 0xd7c6
   1b880:	mov	r3, r4
   1b884:	movt	r0, #2
   1b888:	movt	r1, #1
   1b88c:	ldr	r0, [r0]
   1b890:	bl	1152c <fprintf@plt>
   1b894:	b	1ae24 <argp_parse@@Base+0x29f8>
   1b898:	ldr	r2, [r0]
   1b89c:	movw	r0, #58920	; 0xe628
   1b8a0:	movw	r1, #55238	; 0xd7c6
   1b8a4:	mov	r3, r4
   1b8a8:	movt	r0, #2
   1b8ac:	movt	r1, #1
   1b8b0:	ldr	r0, [r0]
   1b8b4:	bl	1152c <fprintf@plt>
   1b8b8:	b	1b738 <argp_parse@@Base+0x330c>
   1b8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8c0:	add	fp, sp, #28
   1b8c4:	sub	sp, sp, #44	; 0x2c
   1b8c8:	str	r0, [sp, #12]
   1b8cc:	ldr	r0, [fp, #16]
   1b8d0:	ldr	r5, [fp, #8]
   1b8d4:	str	r2, [sp, #16]
   1b8d8:	str	r1, [sp, #20]
   1b8dc:	ldr	r9, [r0, #20]
   1b8e0:	mov	r6, r9
   1b8e4:	b	1b8ec <argp_parse@@Base+0x34c0>
   1b8e8:	add	r6, r6, #1
   1b8ec:	ldrb	r0, [r6]
   1b8f0:	cmp	r0, #0
   1b8f4:	cmpne	r0, #61	; 0x3d
   1b8f8:	bne	1b8e8 <argp_parse@@Base+0x34bc>
   1b8fc:	ldr	sl, [r3]
   1b900:	mvn	ip, #0
   1b904:	str	r3, [fp, #-32]	; 0xffffffe0
   1b908:	cmp	sl, #0
   1b90c:	beq	1bb1c <argp_parse@@Base+0x36f0>
   1b910:	sub	r4, r6, r9
   1b914:	mov	r8, #0
   1b918:	mov	r5, sl
   1b91c:	mov	r7, r3
   1b920:	b	1b934 <argp_parse@@Base+0x3508>
   1b924:	ldr	r5, [r7, #16]!
   1b928:	add	r8, r8, #1
   1b92c:	cmp	r5, #0
   1b930:	beq	1b968 <argp_parse@@Base+0x353c>
   1b934:	mov	r0, r5
   1b938:	mov	r1, r9
   1b93c:	mov	r2, r4
   1b940:	bl	11658 <strncmp@plt>
   1b944:	cmp	r0, #0
   1b948:	bne	1b924 <argp_parse@@Base+0x34f8>
   1b94c:	mov	r0, r5
   1b950:	bl	11514 <strlen@plt>
   1b954:	cmp	r4, r0
   1b958:	bne	1b924 <argp_parse@@Base+0x34f8>
   1b95c:	ldr	r5, [fp, #8]
   1b960:	mov	ip, r8
   1b964:	b	1bbcc <argp_parse@@Base+0x37a0>
   1b968:	cmp	sl, #0
   1b96c:	beq	1bb48 <argp_parse@@Base+0x371c>
   1b970:	mvn	r0, #0
   1b974:	str	r4, [sp, #36]	; 0x24
   1b978:	mov	r4, #0
   1b97c:	mov	r5, #0
   1b980:	mov	r7, #0
   1b984:	str	r0, [sp, #24]
   1b988:	mov	r0, #0
   1b98c:	str	r0, [sp, #32]
   1b990:	mov	r0, #0
   1b994:	str	r0, [sp, #8]
   1b998:	mov	r0, #0
   1b99c:	str	r0, [sp, #28]
   1b9a0:	ldr	r2, [sp, #36]	; 0x24
   1b9a4:	mov	r0, sl
   1b9a8:	mov	r1, r9
   1b9ac:	bl	11658 <strncmp@plt>
   1b9b0:	cmp	r0, #0
   1b9b4:	beq	1b9e8 <argp_parse@@Base+0x35bc>
   1b9b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9bc:	mov	r1, r4
   1b9c0:	add	r0, r3, r5, lsl #4
   1b9c4:	ldr	sl, [r0, #16]
   1b9c8:	cmp	sl, #0
   1b9cc:	beq	1bb34 <argp_parse@@Base+0x3708>
   1b9d0:	ldr	r0, [fp, #16]
   1b9d4:	add	r1, r1, #16
   1b9d8:	add	r5, r5, #1
   1b9dc:	mov	r4, r1
   1b9e0:	ldr	r9, [r0, #20]
   1b9e4:	b	1b9a0 <argp_parse@@Base+0x3574>
   1b9e8:	cmp	r7, #0
   1b9ec:	beq	1baa0 <argp_parse@@Base+0x3674>
   1b9f0:	ldr	r0, [fp, #12]
   1b9f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9f8:	cmp	r0, #0
   1b9fc:	bne	1ba24 <argp_parse@@Base+0x35f8>
   1ba00:	add	r0, r3, r5, lsl #4
   1ba04:	ldr	r2, [r7, #4]
   1ba08:	ldr	r1, [r0, #4]
   1ba0c:	cmp	r2, r1
   1ba10:	bne	1ba24 <argp_parse@@Base+0x35f8>
   1ba14:	ldr	r1, [r0, #8]
   1ba18:	ldr	r2, [r7, #8]
   1ba1c:	cmp	r2, r1
   1ba20:	beq	1bad8 <argp_parse@@Base+0x36ac>
   1ba24:	ldr	r0, [sp, #32]
   1ba28:	mov	r1, r4
   1ba2c:	cmp	r0, #0
   1ba30:	bne	1b9c0 <argp_parse@@Base+0x3594>
   1ba34:	ldr	r0, [fp, #20]
   1ba38:	cmp	r0, #0
   1ba3c:	beq	1bab4 <argp_parse@@Base+0x3688>
   1ba40:	ldr	r9, [sp, #28]
   1ba44:	mov	r0, #0
   1ba48:	str	r0, [sp, #32]
   1ba4c:	cmp	r9, #0
   1ba50:	bne	1bac8 <argp_parse@@Base+0x369c>
   1ba54:	mov	r0, r8
   1ba58:	bl	1a420 <argp_parse@@Base+0x1ff4>
   1ba5c:	cmp	r0, #0
   1ba60:	beq	1bb08 <argp_parse@@Base+0x36dc>
   1ba64:	mov	r9, r0
   1ba68:	mov	r0, #0
   1ba6c:	mov	r1, #0
   1ba70:	mov	r2, r8
   1ba74:	str	r0, [sp, #32]
   1ba78:	mov	r0, r9
   1ba7c:	bl	11568 <memset@plt>
   1ba80:	ldr	r0, [sp, #24]
   1ba84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba88:	mov	r1, #1
   1ba8c:	mov	r2, #1
   1ba90:	str	r1, [sp, #8]
   1ba94:	mov	r1, r4
   1ba98:	strb	r2, [r9, r0]
   1ba9c:	b	1bac8 <argp_parse@@Base+0x369c>
   1baa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1baa4:	mov	r1, r4
   1baa8:	str	r5, [sp, #24]
   1baac:	add	r7, r3, r4
   1bab0:	b	1b9c0 <argp_parse@@Base+0x3594>
   1bab4:	ldr	r9, [sp, #28]
   1bab8:	mov	r0, #1
   1babc:	str	r0, [sp, #32]
   1bac0:	cmp	r9, #0
   1bac4:	beq	1bafc <argp_parse@@Base+0x36d0>
   1bac8:	mov	r0, #1
   1bacc:	str	r9, [sp, #28]
   1bad0:	strb	r0, [r9, r5]
   1bad4:	b	1b9c0 <argp_parse@@Base+0x3594>
   1bad8:	ldr	r1, [sp, #32]
   1badc:	cmp	r1, #0
   1bae0:	bne	1b9bc <argp_parse@@Base+0x3590>
   1bae4:	ldr	r0, [r0, #12]
   1bae8:	ldr	r1, [r7, #12]
   1baec:	cmp	r1, r0
   1baf0:	mov	r1, r4
   1baf4:	bne	1ba34 <argp_parse@@Base+0x3608>
   1baf8:	b	1b9c0 <argp_parse@@Base+0x3594>
   1bafc:	mov	r0, #0
   1bb00:	str	r0, [sp, #28]
   1bb04:	b	1b9c0 <argp_parse@@Base+0x3594>
   1bb08:	mov	r0, #1
   1bb0c:	str	r0, [sp, #32]
   1bb10:	mov	r0, #0
   1bb14:	str	r0, [sp, #28]
   1bb18:	b	1b9b8 <argp_parse@@Base+0x358c>
   1bb1c:	mov	r0, #0
   1bb20:	mov	r8, #0
   1bb24:	mov	r7, #0
   1bb28:	mov	sl, #0
   1bb2c:	mov	r4, #0
   1bb30:	b	1bb60 <argp_parse@@Base+0x3734>
   1bb34:	ldr	r5, [fp, #8]
   1bb38:	ldr	ip, [sp, #24]
   1bb3c:	ldr	sl, [sp, #28]
   1bb40:	ldr	r4, [sp, #8]
   1bb44:	b	1bb64 <argp_parse@@Base+0x3738>
   1bb48:	ldr	r5, [fp, #8]
   1bb4c:	mov	r0, #0
   1bb50:	mov	r7, #0
   1bb54:	mov	sl, #0
   1bb58:	mov	r4, #0
   1bb5c:	mvn	ip, #0
   1bb60:	str	r0, [sp, #32]
   1bb64:	cmp	sl, #0
   1bb68:	ldreq	r0, [sp, #32]
   1bb6c:	cmpeq	r0, #0
   1bb70:	beq	1bbc4 <argp_parse@@Base+0x3798>
   1bb74:	ldr	r0, [fp, #20]
   1bb78:	cmp	r0, #0
   1bb7c:	bne	1bd30 <argp_parse@@Base+0x3904>
   1bb80:	cmp	r4, #0
   1bb84:	beq	1bb90 <argp_parse@@Base+0x3764>
   1bb88:	mov	r0, sl
   1bb8c:	bl	19708 <argp_parse@@Base+0x12dc>
   1bb90:	ldr	r0, [fp, #16]
   1bb94:	ldr	r4, [r0, #20]
   1bb98:	mov	r5, r0
   1bb9c:	mov	r0, r4
   1bba0:	bl	11514 <strlen@plt>
   1bba4:	mov	r1, #0
   1bba8:	add	r0, r4, r0
   1bbac:	str	r1, [r5, #8]
   1bbb0:	str	r0, [r5, #20]
   1bbb4:	ldr	r0, [r5]
   1bbb8:	add	r0, r0, #1
   1bbbc:	str	r0, [r5]
   1bbc0:	b	1bcf4 <argp_parse@@Base+0x38c8>
   1bbc4:	cmp	r7, #0
   1bbc8:	beq	1bc64 <argp_parse@@Base+0x3838>
   1bbcc:	ldr	r1, [fp, #16]
   1bbd0:	mov	r0, #0
   1bbd4:	str	r0, [r1, #20]
   1bbd8:	mov	r2, r1
   1bbdc:	ldr	r1, [r1]
   1bbe0:	add	r0, r1, #1
   1bbe4:	str	r0, [r2]
   1bbe8:	ldrb	r3, [r6]
   1bbec:	ldr	r2, [r7, #4]
   1bbf0:	cmp	r3, #0
   1bbf4:	beq	1bc10 <argp_parse@@Base+0x37e4>
   1bbf8:	cmp	r2, #0
   1bbfc:	beq	1bcdc <argp_parse@@Base+0x38b0>
   1bc00:	ldr	r1, [fp, #16]
   1bc04:	add	r0, r6, #1
   1bc08:	str	r0, [r1, #12]
   1bc0c:	b	1bc3c <argp_parse@@Base+0x3810>
   1bc10:	cmp	r2, #1
   1bc14:	bne	1bc3c <argp_parse@@Base+0x3810>
   1bc18:	ldr	r2, [sp, #12]
   1bc1c:	cmp	r0, r2
   1bc20:	bge	1bd00 <argp_parse@@Base+0x38d4>
   1bc24:	ldr	r2, [fp, #16]
   1bc28:	add	r1, r1, #2
   1bc2c:	str	r1, [r2]
   1bc30:	ldr	r1, [sp, #20]
   1bc34:	ldr	r0, [r1, r0, lsl #2]
   1bc38:	str	r0, [r2, #12]
   1bc3c:	cmp	r5, #0
   1bc40:	strne	ip, [r5]
   1bc44:	ldr	r1, [r7, #8]
   1bc48:	ldr	r0, [r7, #12]
   1bc4c:	cmp	r1, #0
   1bc50:	beq	1bd28 <argp_parse@@Base+0x38fc>
   1bc54:	str	r0, [r1]
   1bc58:	mov	r0, #0
   1bc5c:	sub	sp, fp, #28
   1bc60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc64:	ldr	r0, [fp, #12]
   1bc68:	cmp	r0, #0
   1bc6c:	beq	1bcb0 <argp_parse@@Base+0x3884>
   1bc70:	ldr	r0, [fp, #16]
   1bc74:	ldr	r1, [sp, #20]
   1bc78:	ldr	r0, [r0]
   1bc7c:	ldr	r0, [r1, r0, lsl #2]
   1bc80:	ldrb	r0, [r0, #1]
   1bc84:	cmp	r0, #45	; 0x2d
   1bc88:	beq	1bcb0 <argp_parse@@Base+0x3884>
   1bc8c:	ldr	r0, [fp, #16]
   1bc90:	ldr	r0, [r0, #20]
   1bc94:	ldrb	r1, [r0]
   1bc98:	ldr	r0, [sp, #16]
   1bc9c:	bl	11520 <strchr@plt>
   1bca0:	mov	r1, r0
   1bca4:	mvn	r0, #0
   1bca8:	cmp	r1, #0
   1bcac:	bne	1bd28 <argp_parse@@Base+0x38fc>
   1bcb0:	ldr	r0, [fp, #20]
   1bcb4:	cmp	r0, #0
   1bcb8:	bne	1be1c <argp_parse@@Base+0x39f0>
   1bcbc:	ldr	r1, [fp, #16]
   1bcc0:	mov	r0, #0
   1bcc4:	str	r0, [r1, #20]
   1bcc8:	str	r0, [r1, #8]
   1bccc:	ldr	r0, [r1]
   1bcd0:	add	r0, r0, #1
   1bcd4:	str	r0, [r1]
   1bcd8:	b	1bcf4 <argp_parse@@Base+0x38c8>
   1bcdc:	ldr	r0, [fp, #20]
   1bce0:	cmp	r0, #0
   1bce4:	bne	1be50 <argp_parse@@Base+0x3a24>
   1bce8:	ldr	r0, [r7, #12]
   1bcec:	ldr	r1, [fp, #16]
   1bcf0:	str	r0, [r1, #8]
   1bcf4:	mov	r0, #63	; 0x3f
   1bcf8:	sub	sp, fp, #28
   1bcfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd00:	ldr	r0, [fp, #20]
   1bd04:	cmp	r0, #0
   1bd08:	bne	1be80 <argp_parse@@Base+0x3a54>
   1bd0c:	ldr	r0, [r7, #12]
   1bd10:	ldr	r1, [fp, #16]
   1bd14:	str	r0, [r1, #8]
   1bd18:	ldr	r0, [sp, #16]
   1bd1c:	ldrb	r0, [r0]
   1bd20:	cmp	r0, #58	; 0x3a
   1bd24:	movwne	r0, #63	; 0x3f
   1bd28:	sub	sp, fp, #28
   1bd2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd30:	movw	r5, #58920	; 0xe628
   1bd34:	ldr	r1, [sp, #32]
   1bd38:	movt	r5, #2
   1bd3c:	ldr	r0, [r5]
   1bd40:	cmp	r1, #0
   1bd44:	beq	1bd78 <argp_parse@@Base+0x394c>
   1bd48:	ldr	r1, [sp, #20]
   1bd4c:	ldr	r3, [fp, #24]
   1bd50:	ldr	r2, [r1]
   1bd54:	ldr	r1, [fp, #16]
   1bd58:	ldr	r1, [r1, #20]
   1bd5c:	str	r1, [sp]
   1bd60:	movw	r1, #55299	; 0xd803
   1bd64:	movt	r1, #1
   1bd68:	bl	1152c <fprintf@plt>
   1bd6c:	cmp	r4, #0
   1bd70:	bne	1bb88 <argp_parse@@Base+0x375c>
   1bd74:	b	1bb90 <argp_parse@@Base+0x3764>
   1bd78:	bl	11610 <flockfile@plt>
   1bd7c:	ldr	r1, [fp, #16]
   1bd80:	ldr	r0, [sp, #20]
   1bd84:	ldr	r9, [fp, #24]
   1bd88:	ldr	r1, [r1, #20]
   1bd8c:	ldr	r2, [r0]
   1bd90:	ldr	r0, [r5]
   1bd94:	mov	r3, r9
   1bd98:	str	r1, [sp]
   1bd9c:	movw	r1, #55331	; 0xd823
   1bda0:	movt	r1, #1
   1bda4:	bl	1152c <fprintf@plt>
   1bda8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bdac:	cmp	r8, #0
   1bdb0:	beq	1bdfc <argp_parse@@Base+0x39d0>
   1bdb4:	mov	r6, sl
   1bdb8:	ldrb	r0, [r6]
   1bdbc:	cmp	r0, #0
   1bdc0:	bne	1bdd8 <argp_parse@@Base+0x39ac>
   1bdc4:	add	r1, r1, #16
   1bdc8:	add	r6, r6, #1
   1bdcc:	subs	r8, r8, #1
   1bdd0:	bne	1bdb8 <argp_parse@@Base+0x398c>
   1bdd4:	b	1bdfc <argp_parse@@Base+0x39d0>
   1bdd8:	ldr	r3, [r1]
   1bddc:	ldr	r0, [r5]
   1bde0:	mov	r7, r1
   1bde4:	movw	r1, #55378	; 0xd852
   1bde8:	mov	r2, r9
   1bdec:	movt	r1, #1
   1bdf0:	bl	1152c <fprintf@plt>
   1bdf4:	mov	r1, r7
   1bdf8:	b	1bdc4 <argp_parse@@Base+0x3998>
   1bdfc:	ldr	r1, [r5]
   1be00:	mov	r0, #10
   1be04:	bl	115e0 <fputc@plt>
   1be08:	ldr	r0, [r5]
   1be0c:	bl	11454 <funlockfile@plt>
   1be10:	cmp	r4, #0
   1be14:	bne	1bb88 <argp_parse@@Base+0x375c>
   1be18:	b	1bb90 <argp_parse@@Base+0x3764>
   1be1c:	ldr	r1, [fp, #16]
   1be20:	ldr	r0, [sp, #20]
   1be24:	ldr	r3, [fp, #24]
   1be28:	ldr	r2, [r0]
   1be2c:	movw	r0, #58920	; 0xe628
   1be30:	ldr	r1, [r1, #20]
   1be34:	movt	r0, #2
   1be38:	ldr	r0, [r0]
   1be3c:	str	r1, [sp]
   1be40:	movw	r1, #55386	; 0xd85a
   1be44:	movt	r1, #1
   1be48:	bl	1152c <fprintf@plt>
   1be4c:	b	1bcbc <argp_parse@@Base+0x3890>
   1be50:	ldr	r0, [sp, #20]
   1be54:	ldr	r1, [r7]
   1be58:	ldr	r3, [fp, #24]
   1be5c:	ldr	r2, [r0]
   1be60:	movw	r0, #58920	; 0xe628
   1be64:	str	r1, [sp]
   1be68:	movw	r1, #55418	; 0xd87a
   1be6c:	movt	r0, #2
   1be70:	movt	r1, #1
   1be74:	ldr	r0, [r0]
   1be78:	bl	1152c <fprintf@plt>
   1be7c:	b	1bce8 <argp_parse@@Base+0x38bc>
   1be80:	ldr	r0, [sp, #20]
   1be84:	ldr	r1, [r7]
   1be88:	ldr	r3, [fp, #24]
   1be8c:	ldr	r2, [r0]
   1be90:	movw	r0, #58920	; 0xe628
   1be94:	str	r1, [sp]
   1be98:	movw	r1, #55463	; 0xd8a7
   1be9c:	movt	r0, #2
   1bea0:	movt	r1, #1
   1bea4:	ldr	r0, [r0]
   1bea8:	bl	1152c <fprintf@plt>
   1beac:	b	1bd0c <argp_parse@@Base+0x38e0>
   1beb0:	push	{r4, r5, r6, r7, fp, lr}
   1beb4:	add	fp, sp, #16
   1beb8:	sub	sp, sp, #16
   1bebc:	movw	r7, #58896	; 0xe610
   1bec0:	movw	r6, #59040	; 0xe6a0
   1bec4:	movw	r5, #58900	; 0xe614
   1bec8:	movt	r7, #2
   1becc:	movt	r5, #2
   1bed0:	movt	r6, #2
   1bed4:	ldr	r4, [r7]
   1bed8:	ldr	r5, [r5]
   1bedc:	str	r6, [sp, #8]
   1bee0:	stm	r6, {r4, r5}
   1bee4:	ldr	r5, [fp, #16]
   1bee8:	str	r5, [sp, #12]
   1beec:	ldr	r5, [fp, #12]
   1bef0:	str	r5, [sp, #4]
   1bef4:	ldr	r5, [fp, #8]
   1bef8:	str	r5, [sp]
   1befc:	bl	1ac14 <argp_parse@@Base+0x27e8>
   1bf00:	ldr	r1, [r6]
   1bf04:	ldr	r3, [r6, #12]
   1bf08:	ldr	r2, [r6, #8]
   1bf0c:	str	r1, [r7]
   1bf10:	movw	r1, #59112	; 0xe6e8
   1bf14:	movt	r1, #2
   1bf18:	str	r3, [r1]
   1bf1c:	movw	r1, #58904	; 0xe618
   1bf20:	movt	r1, #2
   1bf24:	str	r2, [r1]
   1bf28:	sub	sp, fp, #16
   1bf2c:	pop	{r4, r5, r6, r7, fp, pc}
   1bf30:	push	{r4, r5, r6, sl, fp, lr}
   1bf34:	add	fp, sp, #16
   1bf38:	sub	sp, sp, #16
   1bf3c:	movw	r6, #58896	; 0xe610
   1bf40:	movw	r5, #59040	; 0xe6a0
   1bf44:	movw	r4, #58900	; 0xe614
   1bf48:	movt	r6, #2
   1bf4c:	movt	r4, #2
   1bf50:	movt	r5, #2
   1bf54:	ldr	r3, [r6]
   1bf58:	ldr	r4, [r4]
   1bf5c:	stm	r5, {r3, r4}
   1bf60:	mov	r4, #0
   1bf64:	mov	r3, #1
   1bf68:	str	r4, [sp]
   1bf6c:	stmib	sp, {r4, r5}
   1bf70:	str	r3, [sp, #12]
   1bf74:	mov	r3, #0
   1bf78:	bl	1ac14 <argp_parse@@Base+0x27e8>
   1bf7c:	ldr	r1, [r5]
   1bf80:	ldr	r3, [r5, #12]
   1bf84:	ldr	r2, [r5, #8]
   1bf88:	str	r1, [r6]
   1bf8c:	movw	r1, #59112	; 0xe6e8
   1bf90:	movt	r1, #2
   1bf94:	str	r3, [r1]
   1bf98:	movw	r1, #58904	; 0xe618
   1bf9c:	movt	r1, #2
   1bfa0:	str	r2, [r1]
   1bfa4:	sub	sp, fp, #16
   1bfa8:	pop	{r4, r5, r6, sl, fp, pc}
   1bfac:	cmp	r2, #0
   1bfb0:	beq	1bfe0 <argp_parse@@Base+0x3bb4>
   1bfb4:	mvn	r3, #0
   1bfb8:	udiv	r3, r3, r2
   1bfbc:	cmp	r3, r1
   1bfc0:	bcs	1bfe0 <argp_parse@@Base+0x3bb4>
   1bfc4:	push	{fp, lr}
   1bfc8:	mov	fp, sp
   1bfcc:	bl	11538 <__errno_location@plt>
   1bfd0:	mov	r1, #12
   1bfd4:	str	r1, [r0]
   1bfd8:	mov	r0, #0
   1bfdc:	pop	{fp, pc}
   1bfe0:	mul	r1, r2, r1
   1bfe4:	b	1a450 <argp_parse@@Base+0x2024>
   1bfe8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bfec:	mov	r7, r0
   1bff0:	ldr	r6, [pc, #72]	; 1c040 <argp_parse@@Base+0x3c14>
   1bff4:	ldr	r5, [pc, #72]	; 1c044 <argp_parse@@Base+0x3c18>
   1bff8:	add	r6, pc, r6
   1bffc:	add	r5, pc, r5
   1c000:	sub	r6, r6, r5
   1c004:	mov	r8, r1
   1c008:	mov	r9, r2
   1c00c:	bl	11308 <calloc@plt-0x20>
   1c010:	asrs	r6, r6, #2
   1c014:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c018:	mov	r4, #0
   1c01c:	add	r4, r4, #1
   1c020:	ldr	r3, [r5], #4
   1c024:	mov	r2, r9
   1c028:	mov	r1, r8
   1c02c:	mov	r0, r7
   1c030:	blx	r3
   1c034:	cmp	r6, r4
   1c038:	bne	1c01c <argp_parse@@Base+0x3bf0>
   1c03c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c040:	andeq	r1, r1, ip, lsl #30
   1c044:	andeq	r1, r1, r4, lsl #30
   1c048:	bx	lr

Disassembly of section .fini:

0001c04c <.fini>:
   1c04c:	push	{r3, lr}
   1c050:	pop	{r3, pc}
