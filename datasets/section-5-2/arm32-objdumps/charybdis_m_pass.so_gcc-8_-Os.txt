
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

000004e8 <_init>:
 4e8:	push	{r3, lr}
 4ec:	bl	580 <call_weak_fn>
 4f0:	pop	{r3, pc}

Disassembly of section .plt:

000004f4 <.plt>:
 4f4:	push	{lr}		; (str lr, [sp, #-4]!)
 4f8:	ldr	lr, [pc, #4]	; 504 <.plt+0x10>
 4fc:	add	lr, pc, lr
 500:	ldr	pc, [lr, #8]!
 504:	.word	0x00010afc

00000508 <__cxa_finalize@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2812]!	; 0xafc

00000514 <rb_outofmemory@plt>:
 514:	add	ip, pc, #0, 12
 518:	add	ip, ip, #16, 20	; 0x10000
 51c:	ldr	pc, [ip, #2804]!	; 0xaf4

00000520 <strcpy@plt>:
 520:	add	ip, pc, #0, 12
 524:	add	ip, ip, #16, 20	; 0x10000
 528:	ldr	pc, [ip, #2796]!	; 0xaec

0000052c <malloc@plt>:
 52c:	add	ip, pc, #0, 12
 530:	add	ip, ip, #16, 20	; 0x10000
 534:	ldr	pc, [ip, #2788]!	; 0xae4

00000538 <__gmon_start__@plt>:
 538:	add	ip, pc, #0, 12
 53c:	add	ip, ip, #16, 20	; 0x10000
 540:	ldr	pc, [ip, #2780]!	; 0xadc

00000544 <strlen@plt>:
 544:	add	ip, pc, #0, 12
 548:	add	ip, ip, #16, 20	; 0x10000
 54c:	ldr	pc, [ip, #2772]!	; 0xad4

00000550 <strchr@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2764]!	; 0xacc

0000055c <atoi@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2756]!	; 0xac4

00000568 <rb_strlcpy@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2748]!	; 0xabc

00000574 <irccmp@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2740]!	; 0xab4

Disassembly of section .text:

00000580 <call_weak_fn>:
 580:	ldr	r3, [pc, #20]	; 59c <call_weak_fn+0x1c>
 584:	ldr	r2, [pc, #20]	; 5a0 <call_weak_fn+0x20>
 588:	add	r3, pc, r3
 58c:	ldr	r2, [r3, r2]
 590:	cmp	r2, #0
 594:	bxeq	lr
 598:	b	538 <__gmon_start__@plt>
 59c:	.word	0x00010a70
 5a0:	.word	0x00000040

000005a4 <deregister_tm_clones>:
 5a4:	ldr	r0, [pc, #44]	; 5d8 <deregister_tm_clones+0x34>
 5a8:	ldr	r3, [pc, #44]	; 5dc <deregister_tm_clones+0x38>
 5ac:	add	r0, pc, r0
 5b0:	add	r3, pc, r3
 5b4:	cmp	r3, r0
 5b8:	ldr	r3, [pc, #32]	; 5e0 <deregister_tm_clones+0x3c>
 5bc:	add	r3, pc, r3
 5c0:	bxeq	lr
 5c4:	ldr	r2, [pc, #24]	; 5e4 <deregister_tm_clones+0x40>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	bxeq	lr
 5d4:	bx	r3
 5d8:	.word	0x00010b10
 5dc:	.word	0x00010b0c
 5e0:	.word	0x00010a3c
 5e4:	.word	0x00000038

000005e8 <register_tm_clones>:
 5e8:	ldr	r0, [pc, #56]	; 628 <register_tm_clones+0x40>
 5ec:	ldr	r3, [pc, #56]	; 62c <register_tm_clones+0x44>
 5f0:	add	r0, pc, r0
 5f4:	add	r3, pc, r3
 5f8:	sub	r1, r3, r0
 5fc:	ldr	r3, [pc, #44]	; 630 <register_tm_clones+0x48>
 600:	asr	r1, r1, #2
 604:	add	r3, pc, r3
 608:	add	r1, r1, r1, lsr #31
 60c:	asrs	r1, r1, #1
 610:	bxeq	lr
 614:	ldr	r2, [pc, #24]	; 634 <register_tm_clones+0x4c>
 618:	ldr	r3, [r3, r2]
 61c:	cmp	r3, #0
 620:	bxeq	lr
 624:	bx	r3
 628:	.word	0x00010acc
 62c:	.word	0x00010ac8
 630:	.word	0x000109f4
 634:	.word	0x00000048

00000638 <__do_global_dtors_aux>:
 638:	ldr	r3, [pc, #76]	; 68c <__do_global_dtors_aux+0x54>
 63c:	ldr	r2, [pc, #76]	; 690 <__do_global_dtors_aux+0x58>
 640:	add	r3, pc, r3
 644:	add	r2, pc, r2
 648:	ldrb	r3, [r3]
 64c:	cmp	r3, #0
 650:	bxne	lr
 654:	ldr	r3, [pc, #56]	; 694 <__do_global_dtors_aux+0x5c>
 658:	push	{r4, lr}
 65c:	ldr	r3, [r2, r3]
 660:	cmp	r3, #0
 664:	beq	674 <__do_global_dtors_aux+0x3c>
 668:	ldr	r3, [pc, #40]	; 698 <__do_global_dtors_aux+0x60>
 66c:	ldr	r0, [pc, r3]
 670:	bl	508 <__cxa_finalize@plt>
 674:	bl	5a4 <deregister_tm_clones>
 678:	ldr	r3, [pc, #28]	; 69c <__do_global_dtors_aux+0x64>
 67c:	mov	r2, #1
 680:	add	r3, pc, r3
 684:	strb	r2, [r3]
 688:	pop	{r4, pc}
 68c:	.word	0x00010a7c
 690:	.word	0x000109b4
 694:	.word	0x00000034
 698:	.word	0x000109d8
 69c:	.word	0x00010a3c

000006a0 <frame_dummy>:
 6a0:	b	5e8 <register_tm_clones>

000006a4 <mr_pass>:
 6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6a8:	add	fp, sp, #32
 6ac:	sub	sp, sp, #4
 6b0:	mov	r4, r1
 6b4:	mov	sl, r3
 6b8:	ldr	r7, [fp, #4]
 6bc:	ldr	r9, [pc, #444]	; 880 <mr_pass+0x1dc>
 6c0:	ldr	r6, [r7, #4]
 6c4:	add	r9, pc, r9
 6c8:	mov	r0, r6
 6cc:	bl	544 <strlen@plt>
 6d0:	add	r0, r0, #8
 6d4:	mov	r1, r6
 6d8:	bic	r0, r0, #7
 6dc:	sub	sp, sp, r0
 6e0:	mov	r5, sp
 6e4:	mov	r0, r5
 6e8:	bl	520 <strcpy@plt>
 6ec:	ldr	r3, [r4, #432]	; 0x1b0
 6f0:	ldr	r2, [r3, #276]	; 0x114
 6f4:	cmp	r2, #0
 6f8:	bne	878 <mr_pass+0x1d4>
 6fc:	ldr	r8, [r3, #280]	; 0x118
 700:	cmp	r8, #0
 704:	bne	878 <mr_pass+0x1d4>
 708:	mov	r0, r5
 70c:	mov	r1, #58	; 0x3a
 710:	bl	550 <strchr@plt>
 714:	subs	r6, r0, #0
 718:	movne	r3, r6
 71c:	movne	r6, r5
 720:	strbne	r8, [r3], #1
 724:	movne	r5, r3
 728:	ldrb	r3, [r5]
 72c:	cmp	r3, #0
 730:	beq	754 <mr_pass+0xb0>
 734:	mov	r0, #128	; 0x80
 738:	bl	52c <malloc@plt>
 73c:	subs	r8, r0, #0
 740:	bne	748 <mr_pass+0xa4>
 744:	bl	514 <rb_outofmemory@plt>
 748:	mov	r2, #128	; 0x80
 74c:	mov	r1, r5
 750:	bl	568 <rb_strlcpy@plt>
 754:	ldr	r5, [r4, #432]	; 0x1b0
 758:	cmp	r6, #0
 75c:	str	r8, [r5, #276]	; 0x114
 760:	beq	790 <mr_pass+0xec>
 764:	ldrb	r3, [r6]
 768:	cmp	r3, #0
 76c:	beq	790 <mr_pass+0xec>
 770:	mov	r0, #128	; 0x80
 774:	bl	52c <malloc@plt>
 778:	subs	r8, r0, #0
 77c:	beq	744 <mr_pass+0xa0>
 780:	mov	r2, #128	; 0x80
 784:	mov	r1, r6
 788:	bl	568 <rb_strlcpy@plt>
 78c:	str	r8, [r5, #280]	; 0x118
 790:	cmp	sl, #2
 794:	ble	878 <mr_pass+0x1d4>
 798:	ldr	r3, [r4, #24]
 79c:	cmp	r3, #0
 7a0:	bne	878 <mr_pass+0x1d4>
 7a4:	ldr	r3, [r4, #436]	; 0x1b4
 7a8:	cmp	r3, #0
 7ac:	beq	878 <mr_pass+0x1d4>
 7b0:	ldr	r1, [pc, #204]	; 884 <mr_pass+0x1e0>
 7b4:	ldr	r0, [r7, #8]
 7b8:	add	r1, pc, r1
 7bc:	bl	574 <irccmp@plt>
 7c0:	cmp	r0, #0
 7c4:	bne	7d8 <mr_pass+0x134>
 7c8:	ldr	r3, [r4, #52]	; 0x34
 7cc:	cmp	r3, #0
 7d0:	moveq	r3, #268435456	; 0x10000000
 7d4:	streq	r3, [r4, #52]	; 0x34
 7d8:	cmp	sl, #5
 7dc:	bne	878 <mr_pass+0x1d4>
 7e0:	ldr	r0, [r7, #12]
 7e4:	bl	55c <atoi@plt>
 7e8:	cmp	r0, #5
 7ec:	ble	878 <mr_pass+0x1d4>
 7f0:	ldr	r3, [pc, #144]	; 888 <mr_pass+0x1e4>
 7f4:	ldr	r1, [r7, #16]
 7f8:	ldr	r3, [r9, r3]
 7fc:	ldrb	r2, [r1]
 800:	ldr	r2, [r3, r2, lsl #2]
 804:	tst	r2, #16
 808:	beq	878 <mr_pass+0x1d4>
 80c:	ldrb	r0, [r1, #1]
 810:	ldr	r2, [pc, #116]	; 88c <mr_pass+0x1e8>
 814:	ldr	r0, [r3, r0, lsl #2]
 818:	tst	r2, r0
 81c:	beq	878 <mr_pass+0x1d4>
 820:	ldrb	r0, [r1, #2]
 824:	ldr	r3, [r3, r0, lsl #2]
 828:	tst	r2, r3
 82c:	beq	878 <mr_pass+0x1d4>
 830:	ldrb	r3, [r1, #3]
 834:	cmp	r3, #0
 838:	bne	878 <mr_pass+0x1d4>
 83c:	ldr	r3, [r4, #436]	; 0x1b4
 840:	adds	r0, r3, #260	; 0x104
 844:	beq	854 <mr_pass+0x1b0>
 848:	ldrb	r3, [r3, #260]	; 0x104
 84c:	cmp	r3, #0
 850:	bne	878 <mr_pass+0x1d4>
 854:	ldr	r3, [pc, #52]	; 890 <mr_pass+0x1ec>
 858:	ldr	r2, [r4, #432]	; 0x1b0
 85c:	ldr	ip, [r9, r3]
 860:	ldr	r3, [r2, #296]	; 0x128
 864:	ldr	ip, [ip]
 868:	orr	r3, r3, ip
 86c:	str	r3, [r2, #296]	; 0x128
 870:	mov	r2, #10
 874:	bl	568 <rb_strlcpy@plt>
 878:	sub	sp, fp, #32
 87c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 880:	.word	0x00010934
 884:	.word	0x0000011a
 888:	.word	0x00000044
 88c:	.word	0x00010010
 890:	.word	0x0000003c

Disassembly of section .fini:

00000894 <_fini>:
 894:	push	{r3, lr}
 898:	pop	{r3, pc}
