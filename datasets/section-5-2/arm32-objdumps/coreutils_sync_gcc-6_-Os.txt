
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010c0c <.init>:
   10c0c:	push	{r3, lr}
   10c10:	bl	1121c <close@plt+0x398>
   10c14:	pop	{r3, pc}

Disassembly of section .plt:

00010c18 <calloc@plt-0x14>:
   10c18:	push	{lr}		; (str lr, [sp, #-4]!)
   10c1c:	ldr	lr, [pc, #4]	; 10c28 <calloc@plt-0x4>
   10c20:	add	lr, pc, lr
   10c24:	ldr	pc, [lr, #8]!
   10c28:	ldrdeq	r4, [r1], -r8

00010c2c <calloc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #984]!	; 0x3d8

00010c38 <fputs_unlocked@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #976]!	; 0x3d0

00010c44 <raise@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #968]!	; 0x3c8

00010c50 <fsync@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #960]!	; 0x3c0

00010c5c <strcmp@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #952]!	; 0x3b8

00010c68 <fflush@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #944]!	; 0x3b0

00010c74 <free@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c80 <_exit@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #928]!	; 0x3a0

00010c8c <memcpy@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #920]!	; 0x398

00010c98 <mbsinit@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #912]!	; 0x390

00010ca4 <memcmp@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #904]!	; 0x388

00010cb0 <fputc_unlocked@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #896]!	; 0x380

00010cbc <dcgettext@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #888]!	; 0x378

00010cc8 <syncfs@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #880]!	; 0x370

00010cd4 <realloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #872]!	; 0x368

00010ce0 <textdomain@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #864]!	; 0x360

00010cec <iswprint@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #856]!	; 0x358

00010cf8 <lseek64@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #848]!	; 0x350

00010d04 <__ctype_get_mb_cur_max@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #840]!	; 0x348

00010d10 <__fpending@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #832]!	; 0x340

00010d1c <ferror_unlocked@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #824]!	; 0x338

00010d28 <mbrtowc@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #816]!	; 0x330

00010d34 <error@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #808]!	; 0x328

00010d40 <open64@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #800]!	; 0x320

00010d4c <malloc@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #792]!	; 0x318

00010d58 <__libc_start_main@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #784]!	; 0x310

00010d64 <__freading@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #776]!	; 0x308

00010d70 <__gmon_start__@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #768]!	; 0x300

00010d7c <getopt_long@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #760]!	; 0x2f8

00010d88 <__ctype_b_loc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #752]!	; 0x2f0

00010d94 <exit@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #744]!	; 0x2e8

00010da0 <strlen@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #736]!	; 0x2e0

00010dac <__errno_location@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #728]!	; 0x2d8

00010db8 <__cxa_atexit@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #720]!	; 0x2d0

00010dc4 <memset@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #712]!	; 0x2c8

00010dd0 <__printf_chk@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #704]!	; 0x2c0

00010ddc <fileno@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #696]!	; 0x2b8

00010de8 <__fprintf_chk@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #688]!	; 0x2b0

00010df4 <fclose@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #680]!	; 0x2a8

00010e00 <fseeko64@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #672]!	; 0x2a0

00010e0c <fcntl64@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #664]!	; 0x298

00010e18 <setlocale@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #656]!	; 0x290

00010e24 <strrchr@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #648]!	; 0x288

00010e30 <nl_langinfo@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #640]!	; 0x280

00010e3c <bindtextdomain@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #632]!	; 0x278

00010e48 <sync@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #624]!	; 0x270

00010e54 <fputs@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #616]!	; 0x268

00010e60 <strncmp@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #608]!	; 0x260

00010e6c <fdatasync@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #600]!	; 0x258

00010e78 <abort@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #592]!	; 0x250

00010e84 <close@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #20, 20	; 0x14000
   10e8c:	ldr	pc, [ip, #584]!	; 0x248

Disassembly of section .text:

00010e90 <.text>:
   10e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e94:	mov	r9, r0
   10e98:	sub	sp, sp, #28
   10e9c:	ldr	r0, [r1]
   10ea0:	mov	sl, r1
   10ea4:	bl	1182c <close@plt+0x9a8>
   10ea8:	ldr	r1, [pc, #736]	; 11190 <close@plt+0x30c>
   10eac:	mov	r0, #6
   10eb0:	bl	10e18 <setlocale@plt>
   10eb4:	ldr	r1, [pc, #728]	; 11194 <close@plt+0x310>
   10eb8:	ldr	r0, [pc, #728]	; 11198 <close@plt+0x314>
   10ebc:	bl	10e3c <bindtextdomain@plt>
   10ec0:	ldr	r0, [pc, #720]	; 11198 <close@plt+0x314>
   10ec4:	bl	10ce0 <textdomain@plt>
   10ec8:	ldr	r0, [pc, #716]	; 1119c <close@plt+0x318>
   10ecc:	bl	141ec <close@plt+0x3368>
   10ed0:	mov	r4, #0
   10ed4:	ldr	r8, [pc, #708]	; 111a0 <close@plt+0x31c>
   10ed8:	ldr	r7, [pc, #708]	; 111a4 <close@plt+0x320>
   10edc:	mov	r5, r4
   10ee0:	mov	r6, r4
   10ee4:	str	r6, [sp]
   10ee8:	mov	r3, r8
   10eec:	mov	r2, r7
   10ef0:	mov	r1, sl
   10ef4:	mov	r0, r9
   10ef8:	bl	10d7c <getopt_long@plt>
   10efc:	cmn	r0, #1
   10f00:	bne	10f34 <close@plt+0xb0>
   10f04:	ldr	r7, [pc, #668]	; 111a8 <close@plt+0x324>
   10f08:	ands	r6, r5, r4
   10f0c:	ldr	r3, [r7]
   10f10:	beq	10fb0 <close@plt+0x12c>
   10f14:	ldr	r1, [pc, #656]	; 111ac <close@plt+0x328>
   10f18:	mov	r2, #5
   10f1c:	mov	r0, #0
   10f20:	bl	10cbc <dcgettext@plt>
   10f24:	mov	r1, #0
   10f28:	mov	r2, r0
   10f2c:	mov	r0, #1
   10f30:	bl	10d34 <error@plt>
   10f34:	cmn	r0, #2
   10f38:	beq	10f68 <close@plt+0xe4>
   10f3c:	bgt	10f50 <close@plt+0xcc>
   10f40:	cmn	r0, #3
   10f44:	beq	10f70 <close@plt+0xec>
   10f48:	mov	r0, #1
   10f4c:	b	10f6c <close@plt+0xe8>
   10f50:	cmp	r0, #100	; 0x64
   10f54:	beq	10fa8 <close@plt+0x124>
   10f58:	cmp	r0, #102	; 0x66
   10f5c:	bne	10f48 <close@plt+0xc4>
   10f60:	mov	r4, #1
   10f64:	b	10ee4 <close@plt+0x60>
   10f68:	mov	r0, #0
   10f6c:	bl	11308 <close@plt+0x484>
   10f70:	ldr	r3, [pc, #568]	; 111b0 <close@plt+0x32c>
   10f74:	ldr	r0, [pc, #568]	; 111b4 <close@plt+0x330>
   10f78:	str	r3, [sp, #4]
   10f7c:	ldr	r3, [pc, #564]	; 111b8 <close@plt+0x334>
   10f80:	str	r6, [sp, #8]
   10f84:	str	r3, [sp]
   10f88:	ldr	r3, [pc, #556]	; 111bc <close@plt+0x338>
   10f8c:	ldr	r0, [r0]
   10f90:	ldr	r2, [pc, #552]	; 111c0 <close@plt+0x33c>
   10f94:	ldr	r3, [r3]
   10f98:	ldr	r1, [pc, #548]	; 111c4 <close@plt+0x340>
   10f9c:	bl	132ac <close@plt+0x2428>
   10fa0:	mov	r0, #0
   10fa4:	bl	10d94 <exit@plt>
   10fa8:	mov	r5, #1
   10fac:	b	10ee4 <close@plt+0x60>
   10fb0:	cmp	r9, r3
   10fb4:	movgt	r8, #0
   10fb8:	andle	r8, r5, #1
   10fbc:	cmp	r8, #0
   10fc0:	movne	r2, #5
   10fc4:	ldrne	r1, [pc, #508]	; 111c8 <close@plt+0x344>
   10fc8:	bne	10f1c <close@plt+0x98>
   10fcc:	cmp	r9, r3
   10fd0:	ble	11184 <close@plt+0x300>
   10fd4:	cmp	r4, #0
   10fd8:	mov	r4, #1
   10fdc:	movne	r5, #2
   10fe0:	str	r5, [sp, #16]
   10fe4:	ldr	r3, [r7]
   10fe8:	cmp	r9, r3
   10fec:	bgt	10ffc <close@plt+0x178>
   10ff0:	eor	r0, r4, #1
   10ff4:	add	sp, sp, #28
   10ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ffc:	ldr	r6, [sl, r3, lsl #2]
   11000:	mov	r1, #2048	; 0x800
   11004:	mov	r0, r6
   11008:	bl	10d40 <open64@plt>
   1100c:	subs	r5, r0, #0
   11010:	bge	1107c <close@plt+0x1f8>
   11014:	bl	10dac <__errno_location@plt>
   11018:	ldr	r1, [pc, #428]	; 111cc <close@plt+0x348>
   1101c:	ldr	fp, [r0]
   11020:	mov	r0, r6
   11024:	bl	10d40 <open64@plt>
   11028:	subs	r5, r0, #0
   1102c:	bge	1107c <close@plt+0x1f8>
   11030:	mov	r2, #5
   11034:	ldr	r1, [pc, #404]	; 111d0 <close@plt+0x34c>
   11038:	mov	r0, #0
   1103c:	bl	10cbc <dcgettext@plt>
   11040:	mov	r1, r6
   11044:	mov	r5, r0
   11048:	mov	r0, #4
   1104c:	bl	12c78 <close@plt+0x1df4>
   11050:	mov	r2, r5
   11054:	mov	r1, fp
   11058:	mov	r3, r0
   1105c:	mov	r0, #0
   11060:	bl	10d34 <error@plt>
   11064:	mov	fp, r8
   11068:	ldr	r3, [r7]
   1106c:	and	r4, r4, fp
   11070:	add	r3, r3, #1
   11074:	str	r3, [r7]
   11078:	b	10fe4 <close@plt+0x160>
   1107c:	mov	r1, #3
   11080:	mov	r0, r5
   11084:	bl	11668 <close@plt+0x7e4>
   11088:	cmn	r0, #1
   1108c:	bne	11118 <close@plt+0x294>
   11090:	bl	10dac <__errno_location@plt>
   11094:	ldr	r1, [pc, #312]	; 111d4 <close@plt+0x350>
   11098:	mov	r2, #5
   1109c:	ldr	fp, [r0]
   110a0:	mov	r0, #0
   110a4:	bl	10cbc <dcgettext@plt>
   110a8:	mov	r1, r6
   110ac:	str	r0, [sp, #20]
   110b0:	mov	r0, #4
   110b4:	bl	12c78 <close@plt+0x1df4>
   110b8:	mov	r1, fp
   110bc:	ldr	r2, [sp, #20]
   110c0:	mov	fp, r8
   110c4:	mov	r3, r0
   110c8:	mov	r0, #0
   110cc:	bl	10d34 <error@plt>
   110d0:	mov	r0, r5
   110d4:	bl	10e84 <close@plt>
   110d8:	cmp	r0, #0
   110dc:	bge	11068 <close@plt+0x1e4>
   110e0:	bl	10dac <__errno_location@plt>
   110e4:	mov	r2, #5
   110e8:	ldr	r1, [pc, #232]	; 111d8 <close@plt+0x354>
   110ec:	ldr	r5, [r0]
   110f0:	mov	r0, #0
   110f4:	bl	10cbc <dcgettext@plt>
   110f8:	mov	r1, r6
   110fc:	mov	fp, r0
   11100:	mov	r0, #4
   11104:	bl	12c78 <close@plt+0x1df4>
   11108:	mov	r2, fp
   1110c:	mov	r1, r5
   11110:	mov	r3, r0
   11114:	b	1105c <close@plt+0x1d8>
   11118:	bic	r2, r0, #2048	; 0x800
   1111c:	mov	r1, #4
   11120:	mov	r0, r5
   11124:	bl	11668 <close@plt+0x7e4>
   11128:	cmp	r0, #0
   1112c:	blt	11090 <close@plt+0x20c>
   11130:	ldr	r3, [sp, #16]
   11134:	cmp	r3, #1
   11138:	beq	11150 <close@plt+0x2cc>
   1113c:	cmp	r3, #2
   11140:	beq	11178 <close@plt+0x2f4>
   11144:	mov	r0, r5
   11148:	bl	10c50 <fsync@plt>
   1114c:	b	11158 <close@plt+0x2d4>
   11150:	mov	r0, r5
   11154:	bl	10e6c <fdatasync@plt>
   11158:	cmp	r0, #0
   1115c:	movge	fp, #1
   11160:	bge	110d0 <close@plt+0x24c>
   11164:	bl	10dac <__errno_location@plt>
   11168:	mov	r2, #5
   1116c:	ldr	r1, [pc, #104]	; 111dc <close@plt+0x358>
   11170:	ldr	fp, [r0]
   11174:	b	110a0 <close@plt+0x21c>
   11178:	mov	r0, r5
   1117c:	bl	10cc8 <syncfs@plt>
   11180:	b	11158 <close@plt+0x2d4>
   11184:	bl	10e48 <sync@plt>
   11188:	mov	r4, #1
   1118c:	b	10ff0 <close@plt+0x16c>
   11190:	andeq	r4, r1, sl, ror #6
   11194:	andeq	r4, r1, pc, lsr r5
   11198:	muleq	r1, ip, r4
   1119c:	andeq	r1, r1, r4, lsl #11
   111a0:	andeq	r4, r1, r8, asr #4
   111a4:	andeq	r4, r1, r6, ror r5
   111a8:	andeq	r5, r2, r8, lsr r1
   111ac:	andeq	r4, r1, r9, ror r5
   111b0:	andeq	r4, r1, r7, asr r5
   111b4:	andeq	r5, r2, r4, asr #2
   111b8:	andeq	r4, r1, r9, ror #10
   111bc:	andeq	r5, r2, r4, ror #1
   111c0:	muleq	r1, r8, r4
   111c4:	muleq	r1, r8, r2
   111c8:	andeq	r4, r1, r6, lsr #11
   111cc:	andeq	r0, r0, r1, lsl #16
   111d0:	andeq	r4, r1, r9, asr #11
   111d4:	ldrdeq	r4, [r1], -sl
   111d8:	andeq	r4, r1, pc, lsl #12
   111dc:	strdeq	r4, [r1], -lr
   111e0:	mov	fp, #0
   111e4:	mov	lr, #0
   111e8:	pop	{r1}		; (ldr r1, [sp], #4)
   111ec:	mov	r2, sp
   111f0:	push	{r2}		; (str r2, [sp, #-4]!)
   111f4:	push	{r0}		; (str r0, [sp, #-4]!)
   111f8:	ldr	ip, [pc, #16]	; 11210 <close@plt+0x38c>
   111fc:	push	{ip}		; (str ip, [sp, #-4]!)
   11200:	ldr	r0, [pc, #12]	; 11214 <close@plt+0x390>
   11204:	ldr	r3, [pc, #12]	; 11218 <close@plt+0x394>
   11208:	bl	10d58 <__libc_start_main@plt>
   1120c:	bl	10e78 <abort@plt>
   11210:	andeq	r4, r1, r8, ror #3
   11214:	muleq	r1, r0, lr
   11218:	andeq	r4, r1, r8, lsl #3
   1121c:	ldr	r3, [pc, #20]	; 11238 <close@plt+0x3b4>
   11220:	ldr	r2, [pc, #20]	; 1123c <close@plt+0x3b8>
   11224:	add	r3, pc, r3
   11228:	ldr	r2, [r3, r2]
   1122c:	cmp	r2, #0
   11230:	bxeq	lr
   11234:	b	10d70 <__gmon_start__@plt>
   11238:	ldrdeq	r3, [r1], -r4
   1123c:	ldrdeq	r0, [r0], -r8
   11240:	ldr	r3, [pc, #28]	; 11264 <close@plt+0x3e0>
   11244:	ldr	r0, [pc, #28]	; 11268 <close@plt+0x3e4>
   11248:	sub	r3, r3, r0
   1124c:	cmp	r3, #6
   11250:	bxls	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <close@plt+0x3e8>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r5, r2, pc, lsr #2
   11268:	andeq	r5, r2, ip, lsr #2
   1126c:	andeq	r0, r0, r0
   11270:	ldr	r1, [pc, #36]	; 1129c <close@plt+0x418>
   11274:	ldr	r0, [pc, #36]	; 112a0 <close@plt+0x41c>
   11278:	sub	r1, r1, r0
   1127c:	asr	r1, r1, #2
   11280:	add	r1, r1, r1, lsr #31
   11284:	asrs	r1, r1, #1
   11288:	bxeq	lr
   1128c:	ldr	r3, [pc, #16]	; 112a4 <close@plt+0x420>
   11290:	cmp	r3, #0
   11294:	bxeq	lr
   11298:	bx	r3
   1129c:	andeq	r5, r2, ip, lsr #2
   112a0:	andeq	r5, r2, ip, lsr #2
   112a4:	andeq	r0, r0, r0
   112a8:	push	{r4, lr}
   112ac:	ldr	r4, [pc, #24]	; 112cc <close@plt+0x448>
   112b0:	ldrb	r3, [r4]
   112b4:	cmp	r3, #0
   112b8:	popne	{r4, pc}
   112bc:	bl	11240 <close@plt+0x3bc>
   112c0:	mov	r3, #1
   112c4:	strb	r3, [r4]
   112c8:	pop	{r4, pc}
   112cc:	andeq	r5, r2, r8, asr #2
   112d0:	ldr	r0, [pc, #40]	; 11300 <close@plt+0x47c>
   112d4:	ldr	r3, [r0]
   112d8:	cmp	r3, #0
   112dc:	bne	112e4 <close@plt+0x460>
   112e0:	b	11270 <close@plt+0x3ec>
   112e4:	ldr	r3, [pc, #24]	; 11304 <close@plt+0x480>
   112e8:	cmp	r3, #0
   112ec:	beq	112e0 <close@plt+0x45c>
   112f0:	push	{r4, lr}
   112f4:	blx	r3
   112f8:	pop	{r4, lr}
   112fc:	b	11270 <close@plt+0x3ec>
   11300:	andeq	r4, r2, r4, lsl pc
   11304:	andeq	r0, r0, r0
   11308:	subs	r5, r0, #0
   1130c:	push	{r7, lr}
   11310:	sub	sp, sp, #56	; 0x38
   11314:	ldr	r4, [pc, #500]	; 11510 <close@plt+0x68c>
   11318:	beq	11350 <close@plt+0x4cc>
   1131c:	ldr	r3, [pc, #496]	; 11514 <close@plt+0x690>
   11320:	mov	r2, #5
   11324:	ldr	r1, [pc, #492]	; 11518 <close@plt+0x694>
   11328:	mov	r0, #0
   1132c:	ldr	r6, [r3]
   11330:	bl	10cbc <dcgettext@plt>
   11334:	ldr	r3, [r4]
   11338:	mov	r1, #1
   1133c:	mov	r2, r0
   11340:	mov	r0, r6
   11344:	bl	10de8 <__fprintf_chk@plt>
   11348:	mov	r0, r5
   1134c:	bl	10d94 <exit@plt>
   11350:	mov	r2, #5
   11354:	ldr	r1, [pc, #448]	; 1151c <close@plt+0x698>
   11358:	bl	10cbc <dcgettext@plt>
   1135c:	ldr	r2, [r4]
   11360:	ldr	r4, [pc, #440]	; 11520 <close@plt+0x69c>
   11364:	ldr	r8, [pc, #440]	; 11524 <close@plt+0x6a0>
   11368:	mov	r6, r5
   1136c:	mov	r1, r0
   11370:	mov	r0, #1
   11374:	bl	10dd0 <__printf_chk@plt>
   11378:	mov	r2, #5
   1137c:	ldr	r1, [pc, #420]	; 11528 <close@plt+0x6a4>
   11380:	mov	r0, r5
   11384:	bl	10cbc <dcgettext@plt>
   11388:	ldr	r1, [r4]
   1138c:	bl	10c38 <fputs_unlocked@plt>
   11390:	mov	r2, #5
   11394:	ldr	r1, [pc, #400]	; 1152c <close@plt+0x6a8>
   11398:	mov	r0, r5
   1139c:	bl	10cbc <dcgettext@plt>
   113a0:	ldr	r1, [r4]
   113a4:	bl	10c38 <fputs_unlocked@plt>
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #380]	; 11530 <close@plt+0x6ac>
   113b0:	mov	r0, r5
   113b4:	bl	10cbc <dcgettext@plt>
   113b8:	ldr	r1, [r4]
   113bc:	bl	10c38 <fputs_unlocked@plt>
   113c0:	mov	r2, #5
   113c4:	ldr	r1, [pc, #360]	; 11534 <close@plt+0x6b0>
   113c8:	mov	r0, r5
   113cc:	bl	10cbc <dcgettext@plt>
   113d0:	ldr	r1, [r4]
   113d4:	bl	10c38 <fputs_unlocked@plt>
   113d8:	mov	r2, #5
   113dc:	ldr	r1, [pc, #340]	; 11538 <close@plt+0x6b4>
   113e0:	mov	r0, r5
   113e4:	bl	10cbc <dcgettext@plt>
   113e8:	ldr	r1, [r4]
   113ec:	bl	10c38 <fputs_unlocked@plt>
   113f0:	ldr	lr, [pc, #324]	; 1153c <close@plt+0x6b8>
   113f4:	mov	ip, sp
   113f8:	ldm	lr!, {r0, r1, r2, r3}
   113fc:	stmia	ip!, {r0, r1, r2, r3}
   11400:	ldm	lr!, {r0, r1, r2, r3}
   11404:	stmia	ip!, {r0, r1, r2, r3}
   11408:	ldm	lr!, {r0, r1, r2, r3}
   1140c:	stmia	ip!, {r0, r1, r2, r3}
   11410:	ldm	lr, {r0, r1}
   11414:	stm	ip, {r0, r1}
   11418:	ldr	r1, [sp, r6]
   1141c:	add	r7, sp, r6
   11420:	cmp	r1, #0
   11424:	bne	114c8 <close@plt+0x644>
   11428:	ldr	r6, [r7, #4]
   1142c:	ldr	r7, [pc, #240]	; 11524 <close@plt+0x6a0>
   11430:	cmp	r6, #0
   11434:	mov	r2, #5
   11438:	ldr	r1, [pc, #256]	; 11540 <close@plt+0x6bc>
   1143c:	mov	r0, #0
   11440:	moveq	r6, r7
   11444:	bl	10cbc <dcgettext@plt>
   11448:	ldr	r3, [pc, #244]	; 11544 <close@plt+0x6c0>
   1144c:	ldr	r2, [pc, #244]	; 11548 <close@plt+0x6c4>
   11450:	mov	r1, r0
   11454:	mov	r0, #1
   11458:	bl	10dd0 <__printf_chk@plt>
   1145c:	mov	r1, #0
   11460:	mov	r0, #5
   11464:	bl	10e18 <setlocale@plt>
   11468:	cmp	r0, #0
   1146c:	bne	114e0 <close@plt+0x65c>
   11470:	mov	r2, #5
   11474:	ldr	r1, [pc, #208]	; 1154c <close@plt+0x6c8>
   11478:	mov	r0, #0
   1147c:	bl	10cbc <dcgettext@plt>
   11480:	ldr	r3, [pc, #156]	; 11524 <close@plt+0x6a0>
   11484:	ldr	r2, [pc, #184]	; 11544 <close@plt+0x6c0>
   11488:	mov	r1, r0
   1148c:	mov	r0, #1
   11490:	bl	10dd0 <__printf_chk@plt>
   11494:	mov	r2, #5
   11498:	ldr	r1, [pc, #176]	; 11550 <close@plt+0x6cc>
   1149c:	mov	r0, #0
   114a0:	bl	10cbc <dcgettext@plt>
   114a4:	ldr	r2, [pc, #168]	; 11554 <close@plt+0x6d0>
   114a8:	cmp	r6, r7
   114ac:	ldr	r3, [pc, #164]	; 11558 <close@plt+0x6d4>
   114b0:	moveq	r3, r2
   114b4:	mov	r2, r6
   114b8:	mov	r1, r0
   114bc:	mov	r0, #1
   114c0:	bl	10dd0 <__printf_chk@plt>
   114c4:	b	11348 <close@plt+0x4c4>
   114c8:	mov	r0, r8
   114cc:	bl	10c5c <strcmp@plt>
   114d0:	add	r6, r6, #8
   114d4:	cmp	r0, #0
   114d8:	bne	11418 <close@plt+0x594>
   114dc:	b	11428 <close@plt+0x5a4>
   114e0:	mov	r2, #3
   114e4:	ldr	r1, [pc, #112]	; 1155c <close@plt+0x6d8>
   114e8:	bl	10e60 <strncmp@plt>
   114ec:	cmp	r0, #0
   114f0:	beq	11470 <close@plt+0x5ec>
   114f4:	mov	r2, #5
   114f8:	ldr	r1, [pc, #96]	; 11560 <close@plt+0x6dc>
   114fc:	mov	r0, #0
   11500:	bl	10cbc <dcgettext@plt>
   11504:	ldr	r1, [r4]
   11508:	bl	10c38 <fputs_unlocked@plt>
   1150c:	b	11470 <close@plt+0x5ec>
   11510:	andeq	r5, r2, r8, asr r1
   11514:	andeq	r5, r2, r0, asr #2
   11518:	muleq	r1, sp, r2
   1151c:	andeq	r4, r1, r4, asr #5
   11520:	andeq	r5, r2, r4, asr #2
   11524:	muleq	r1, r8, r2
   11528:	andeq	r4, r1, r2, ror #5
   1152c:	andeq	r4, r1, fp, ror #6
   11530:	andeq	r4, r1, pc, lsr #7
   11534:	strdeq	r4, [r1], -r6
   11538:	andeq	r4, r1, r3, lsr #8
   1153c:	andeq	r4, r1, r0, lsl r2
   11540:	andeq	r4, r1, r9, asr r4
   11544:	andeq	r4, r1, r0, ror r4
   11548:	muleq	r1, r8, r4
   1154c:	strdeq	r4, [r1], -r1
   11550:	andeq	r4, r1, ip, lsl #10
   11554:	andeq	r4, r1, lr, lsr r6
   11558:	andeq	r4, r1, sl, ror #6
   1155c:	andeq	r4, r1, r6, lsr #9
   11560:	andeq	r4, r1, sl, lsr #9
   11564:	ldr	r3, [pc, #4]	; 11570 <close@plt+0x6ec>
   11568:	str	r0, [r3]
   1156c:	bx	lr
   11570:	andeq	r5, r2, ip, asr #2
   11574:	ldr	r3, [pc, #4]	; 11580 <close@plt+0x6fc>
   11578:	strb	r0, [r3, #4]
   1157c:	bx	lr
   11580:	andeq	r5, r2, ip, asr #2
   11584:	ldr	r3, [pc, #192]	; 1164c <close@plt+0x7c8>
   11588:	push	{r0, r1, r4, r5, r6, lr}
   1158c:	ldr	r0, [r3]
   11590:	bl	1392c <close@plt+0x2aa8>
   11594:	cmp	r0, #0
   11598:	beq	11630 <close@plt+0x7ac>
   1159c:	ldr	r3, [pc, #172]	; 11650 <close@plt+0x7cc>
   115a0:	mov	r4, r3
   115a4:	ldrb	r2, [r3, #4]
   115a8:	cmp	r2, #0
   115ac:	beq	115c0 <close@plt+0x73c>
   115b0:	bl	10dac <__errno_location@plt>
   115b4:	ldr	r3, [r0]
   115b8:	cmp	r3, #32
   115bc:	beq	11630 <close@plt+0x7ac>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #136]	; 11654 <close@plt+0x7d0>
   115c8:	mov	r0, #0
   115cc:	bl	10cbc <dcgettext@plt>
   115d0:	ldr	r4, [r4]
   115d4:	cmp	r4, #0
   115d8:	mov	r5, r0
   115dc:	beq	11614 <close@plt+0x790>
   115e0:	bl	10dac <__errno_location@plt>
   115e4:	ldr	r6, [r0]
   115e8:	mov	r0, r4
   115ec:	bl	12d0c <close@plt+0x1e88>
   115f0:	str	r5, [sp]
   115f4:	ldr	r2, [pc, #92]	; 11658 <close@plt+0x7d4>
   115f8:	mov	r1, r6
   115fc:	mov	r3, r0
   11600:	mov	r0, #0
   11604:	bl	10d34 <error@plt>
   11608:	ldr	r3, [pc, #76]	; 1165c <close@plt+0x7d8>
   1160c:	ldr	r0, [r3]
   11610:	bl	10c80 <_exit@plt>
   11614:	bl	10dac <__errno_location@plt>
   11618:	mov	r3, r5
   1161c:	ldr	r2, [pc, #60]	; 11660 <close@plt+0x7dc>
   11620:	ldr	r1, [r0]
   11624:	mov	r0, r4
   11628:	bl	10d34 <error@plt>
   1162c:	b	11608 <close@plt+0x784>
   11630:	ldr	r3, [pc, #44]	; 11664 <close@plt+0x7e0>
   11634:	ldr	r0, [r3]
   11638:	bl	1392c <close@plt+0x2aa8>
   1163c:	cmp	r0, #0
   11640:	bne	11608 <close@plt+0x784>
   11644:	add	sp, sp, #8
   11648:	pop	{r4, r5, r6, pc}
   1164c:	andeq	r5, r2, r4, asr #2
   11650:	andeq	r5, r2, ip, asr #2
   11654:	andeq	r4, r1, r2, lsr #13
   11658:	andeq	r4, r1, lr, lsr #13
   1165c:	andeq	r5, r2, r8, ror #1
   11660:			; <UNDEFINED> instruction: 0x000146b2
   11664:	andeq	r5, r2, r0, asr #2
   11668:	push	{r1, r2, r3}
   1166c:	push	{r0, r1, r4, r5, r6, r7, lr}
   11670:	add	r2, sp, #32
   11674:	ldr	r1, [sp, #28]
   11678:	str	r2, [sp, #4]
   1167c:	cmp	r1, #0
   11680:	beq	116c4 <close@plt+0x840>
   11684:	ldr	r3, [pc, #396]	; 11818 <close@plt+0x994>
   11688:	mov	r6, r0
   1168c:	cmp	r1, r3
   11690:	beq	116d0 <close@plt+0x84c>
   11694:	cmp	r1, #11
   11698:	beq	116b4 <close@plt+0x830>
   1169c:	bgt	117e0 <close@plt+0x95c>
   116a0:	cmp	r1, #3
   116a4:	beq	116b4 <close@plt+0x830>
   116a8:	bgt	117bc <close@plt+0x938>
   116ac:	cmp	r1, #1
   116b0:	bne	117c8 <close@plt+0x944>
   116b4:	mov	r0, r6
   116b8:	bl	10e0c <fcntl64@plt>
   116bc:	mov	r4, r0
   116c0:	b	1177c <close@plt+0x8f8>
   116c4:	ldr	r2, [sp, #32]
   116c8:	bl	10e0c <fcntl64@plt>
   116cc:	b	116bc <close@plt+0x838>
   116d0:	ldr	r5, [pc, #324]	; 1181c <close@plt+0x998>
   116d4:	add	r3, sp, #36	; 0x24
   116d8:	str	r3, [sp, #4]
   116dc:	ldr	r3, [r5]
   116e0:	ldr	r7, [r2]
   116e4:	cmp	r3, #0
   116e8:	mov	r2, r7
   116ec:	blt	11790 <close@plt+0x90c>
   116f0:	bl	10e0c <fcntl64@plt>
   116f4:	subs	r4, r0, #0
   116f8:	bge	1170c <close@plt+0x888>
   116fc:	bl	10dac <__errno_location@plt>
   11700:	ldr	r3, [r0]
   11704:	cmp	r3, #22
   11708:	beq	1175c <close@plt+0x8d8>
   1170c:	mov	r3, #1
   11710:	str	r3, [r5]
   11714:	cmp	r4, #0
   11718:	blt	1177c <close@plt+0x8f8>
   1171c:	ldr	r5, [r5]
   11720:	cmn	r5, #1
   11724:	bne	1177c <close@plt+0x8f8>
   11728:	mov	r1, #1
   1172c:	mov	r0, r4
   11730:	bl	10e0c <fcntl64@plt>
   11734:	subs	r2, r0, #0
   11738:	bge	117a0 <close@plt+0x91c>
   1173c:	bl	10dac <__errno_location@plt>
   11740:	ldr	r7, [r0]
   11744:	mov	r6, r0
   11748:	mov	r0, r4
   1174c:	bl	10e84 <close@plt>
   11750:	mov	r4, r5
   11754:	str	r7, [r6]
   11758:	b	1177c <close@plt+0x8f8>
   1175c:	mov	r2, r7
   11760:	mov	r1, #0
   11764:	mov	r0, r6
   11768:	bl	10e0c <fcntl64@plt>
   1176c:	subs	r4, r0, #0
   11770:	mvnge	r3, #0
   11774:	strge	r3, [r5]
   11778:	bge	1171c <close@plt+0x898>
   1177c:	mov	r0, r4
   11780:	add	sp, sp, #8
   11784:	pop	{r4, r5, r6, r7, lr}
   11788:	add	sp, sp, #12
   1178c:	bx	lr
   11790:	mov	r1, #0
   11794:	bl	10e0c <fcntl64@plt>
   11798:	mov	r4, r0
   1179c:	b	11714 <close@plt+0x890>
   117a0:	orr	r2, r2, #1
   117a4:	mov	r1, #2
   117a8:	mov	r0, r4
   117ac:	bl	10e0c <fcntl64@plt>
   117b0:	cmn	r0, #1
   117b4:	bne	1177c <close@plt+0x8f8>
   117b8:	b	1173c <close@plt+0x8b8>
   117bc:	cmp	r1, #8
   117c0:	beq	117c8 <close@plt+0x944>
   117c4:	bgt	117d8 <close@plt+0x954>
   117c8:	ldr	r3, [sp, #4]
   117cc:	mov	r0, r6
   117d0:	ldr	r2, [r3]
   117d4:	b	116c8 <close@plt+0x844>
   117d8:	cmp	r1, #9
   117dc:	b	116b0 <close@plt+0x82c>
   117e0:	ldr	r2, [pc, #56]	; 11820 <close@plt+0x99c>
   117e4:	cmp	r1, r2
   117e8:	bgt	11800 <close@plt+0x97c>
   117ec:	cmp	r1, r3
   117f0:	ldrlt	r3, [pc, #44]	; 11824 <close@plt+0x9a0>
   117f4:	bge	117c8 <close@plt+0x944>
   117f8:	cmp	r1, r3
   117fc:	b	116b0 <close@plt+0x82c>
   11800:	ldr	r3, [pc, #32]	; 11828 <close@plt+0x9a4>
   11804:	cmp	r1, r3
   11808:	beq	117c8 <close@plt+0x944>
   1180c:	blt	116b4 <close@plt+0x830>
   11810:	add	r3, r3, #1
   11814:	b	117f8 <close@plt+0x974>
   11818:	andeq	r0, r0, r6, lsl #8
   1181c:	andeq	r5, r2, r4, asr r1
   11820:	andeq	r0, r0, r7, lsl #8
   11824:	andeq	r0, r0, r1, lsl #8
   11828:	andeq	r0, r0, r9, lsl #8
   1182c:	push	{r4, r5, r6, lr}
   11830:	subs	r5, r0, #0
   11834:	bne	1184c <close@plt+0x9c8>
   11838:	ldr	r3, [pc, #124]	; 118bc <close@plt+0xa38>
   1183c:	ldr	r0, [pc, #124]	; 118c0 <close@plt+0xa3c>
   11840:	ldr	r1, [r3]
   11844:	bl	10e54 <fputs@plt>
   11848:	bl	10e78 <abort@plt>
   1184c:	mov	r1, #47	; 0x2f
   11850:	bl	10e24 <strrchr@plt>
   11854:	cmp	r0, #0
   11858:	addne	r4, r0, #1
   1185c:	moveq	r4, r5
   11860:	sub	r3, r4, r5
   11864:	cmp	r3, #6
   11868:	ble	118a8 <close@plt+0xa24>
   1186c:	mov	r2, #7
   11870:	ldr	r1, [pc, #76]	; 118c4 <close@plt+0xa40>
   11874:	sub	r0, r4, #7
   11878:	bl	10e60 <strncmp@plt>
   1187c:	cmp	r0, #0
   11880:	bne	118a8 <close@plt+0xa24>
   11884:	mov	r2, #3
   11888:	ldr	r1, [pc, #56]	; 118c8 <close@plt+0xa44>
   1188c:	mov	r0, r4
   11890:	bl	10e60 <strncmp@plt>
   11894:	cmp	r0, #0
   11898:	movne	r5, r4
   1189c:	ldreq	r3, [pc, #40]	; 118cc <close@plt+0xa48>
   118a0:	addeq	r5, r4, #3
   118a4:	streq	r5, [r3]
   118a8:	ldr	r3, [pc, #32]	; 118d0 <close@plt+0xa4c>
   118ac:	str	r5, [r3]
   118b0:	ldr	r3, [pc, #28]	; 118d4 <close@plt+0xa50>
   118b4:	str	r5, [r3]
   118b8:	pop	{r4, r5, r6, pc}
   118bc:	andeq	r5, r2, r0, asr #2
   118c0:			; <UNDEFINED> instruction: 0x000146b5
   118c4:	andeq	r4, r1, sp, ror #13
   118c8:	strdeq	r4, [r1], -r5
   118cc:	andeq	r5, r2, r0, lsr r1
   118d0:	andeq	r5, r2, r8, asr r1
   118d4:	andeq	r5, r2, r4, lsr r1
   118d8:	push	{r4, r5, r6, lr}
   118dc:	mov	r2, #48	; 0x30
   118e0:	mov	r5, r1
   118e4:	mov	r1, #0
   118e8:	mov	r4, r0
   118ec:	bl	10dc4 <memset@plt>
   118f0:	cmp	r5, #10
   118f4:	bne	118fc <close@plt+0xa78>
   118f8:	bl	10e78 <abort@plt>
   118fc:	str	r5, [r4]
   11900:	mov	r0, r4
   11904:	pop	{r4, r5, r6, pc}
   11908:	push	{r4, r5, r6, lr}
   1190c:	mov	r4, r0
   11910:	mov	r5, r1
   11914:	bl	13b7c <close@plt+0x2cf8>
   11918:	ldrb	r3, [r0]
   1191c:	bic	r3, r3, #32
   11920:	cmp	r3, #85	; 0x55
   11924:	bne	11994 <close@plt+0xb10>
   11928:	ldrb	r3, [r0, #1]
   1192c:	bic	r3, r3, #32
   11930:	cmp	r3, #84	; 0x54
   11934:	bne	1196c <close@plt+0xae8>
   11938:	ldrb	r3, [r0, #2]
   1193c:	bic	r3, r3, #32
   11940:	cmp	r3, #70	; 0x46
   11944:	bne	1196c <close@plt+0xae8>
   11948:	ldrb	r3, [r0, #3]
   1194c:	cmp	r3, #45	; 0x2d
   11950:	bne	1196c <close@plt+0xae8>
   11954:	ldrb	r3, [r0, #4]
   11958:	cmp	r3, #56	; 0x38
   1195c:	bne	1196c <close@plt+0xae8>
   11960:	ldrb	r3, [r0, #5]
   11964:	cmp	r3, #0
   11968:	beq	11980 <close@plt+0xafc>
   1196c:	ldr	r1, [pc, #144]	; 11a04 <close@plt+0xb80>
   11970:	ldr	r0, [pc, #144]	; 11a08 <close@plt+0xb84>
   11974:	cmp	r5, #9
   11978:	movne	r0, r1
   1197c:	pop	{r4, r5, r6, pc}
   11980:	ldrb	r3, [r4]
   11984:	ldr	r1, [pc, #128]	; 11a0c <close@plt+0xb88>
   11988:	ldr	r0, [pc, #128]	; 11a10 <close@plt+0xb8c>
   1198c:	cmp	r3, #96	; 0x60
   11990:	b	11978 <close@plt+0xaf4>
   11994:	cmp	r3, #71	; 0x47
   11998:	bne	1196c <close@plt+0xae8>
   1199c:	ldrb	r3, [r0, #1]
   119a0:	bic	r3, r3, #32
   119a4:	cmp	r3, #66	; 0x42
   119a8:	bne	1196c <close@plt+0xae8>
   119ac:	ldrb	r3, [r0, #2]
   119b0:	cmp	r3, #49	; 0x31
   119b4:	bne	1196c <close@plt+0xae8>
   119b8:	ldrb	r3, [r0, #3]
   119bc:	cmp	r3, #56	; 0x38
   119c0:	bne	1196c <close@plt+0xae8>
   119c4:	ldrb	r3, [r0, #4]
   119c8:	cmp	r3, #48	; 0x30
   119cc:	bne	1196c <close@plt+0xae8>
   119d0:	ldrb	r3, [r0, #5]
   119d4:	cmp	r3, #51	; 0x33
   119d8:	bne	1196c <close@plt+0xae8>
   119dc:	ldrb	r3, [r0, #6]
   119e0:	cmp	r3, #48	; 0x30
   119e4:	bne	1196c <close@plt+0xae8>
   119e8:	ldrb	r3, [r0, #7]
   119ec:	cmp	r3, #0
   119f0:	bne	1196c <close@plt+0xae8>
   119f4:	ldrb	r3, [r4]
   119f8:	ldr	r1, [pc, #20]	; 11a14 <close@plt+0xb90>
   119fc:	ldr	r0, [pc, #20]	; 11a18 <close@plt+0xb94>
   11a00:	b	1198c <close@plt+0xb08>
   11a04:	andeq	r4, r1, r1, ror #14
   11a08:	andeq	r4, r1, pc, asr r7
   11a0c:	andeq	r4, r1, r4, asr r7
   11a10:	andeq	r4, r1, r0, asr r7
   11a14:	andeq	r4, r1, ip, asr r7
   11a18:	andeq	r4, r1, r8, asr r7
   11a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a20:	sub	sp, sp, #108	; 0x6c
   11a24:	mov	r8, r0
   11a28:	str	r3, [sp, #36]	; 0x24
   11a2c:	mov	r5, r1
   11a30:	str	r2, [sp, #44]	; 0x2c
   11a34:	ldr	sl, [sp, #144]	; 0x90
   11a38:	bl	10d04 <__ctype_get_mb_cur_max@plt>
   11a3c:	ldr	r3, [sp, #148]	; 0x94
   11a40:	mov	r7, #0
   11a44:	str	r7, [sp, #48]	; 0x30
   11a48:	lsr	r6, r3, #1
   11a4c:	and	r6, r6, #1
   11a50:	mov	r3, #1
   11a54:	str	r3, [sp, #72]	; 0x48
   11a58:	str	r7, [sp, #24]
   11a5c:	str	r7, [sp, #32]
   11a60:	str	r7, [sp, #40]	; 0x28
   11a64:	str	r7, [sp, #60]	; 0x3c
   11a68:	str	r0, [sp, #76]	; 0x4c
   11a6c:	cmp	sl, #10
   11a70:	ldrls	pc, [pc, sl, lsl #2]
   11a74:	b	11cb0 <close@plt+0xe2c>
   11a78:	andeq	r1, r1, r4, lsr #21
   11a7c:	andeq	r2, r1, r8, lsr r7
   11a80:	andeq	r1, r1, ip, ror ip
   11a84:	andeq	r1, r1, r8, asr #25
   11a88:	andeq	r1, r1, r8, asr ip
   11a8c:			; <UNDEFINED> instruction: 0x00011ab0
   11a90:	andeq	r2, r1, r8, lsl r7
   11a94:			; <UNDEFINED> instruction: 0x00011cb4
   11a98:	andeq	r1, r1, r8, lsr #23
   11a9c:	andeq	r1, r1, r8, lsr #23
   11aa0:	andeq	r1, r1, r8, lsr #23
   11aa4:	mov	r6, #0
   11aa8:	mov	r4, #0
   11aac:	b	11adc <close@plt+0xc58>
   11ab0:	cmp	r6, #0
   11ab4:	bne	11cd8 <close@plt+0xe54>
   11ab8:	cmp	r5, #0
   11abc:	movne	r3, #34	; 0x22
   11ac0:	strbne	r3, [r8]
   11ac4:	mov	r3, #1
   11ac8:	str	r3, [sp, #24]
   11acc:	str	r3, [sp, #32]
   11ad0:	mov	r4, #1
   11ad4:	ldr	r3, [pc, #3172]	; 12740 <close@plt+0x18bc>
   11ad8:	str	r3, [sp, #40]	; 0x28
   11adc:	mov	r9, r5
   11ae0:	mov	r3, #0
   11ae4:	str	r7, [sp, #68]	; 0x44
   11ae8:	str	r3, [sp, #28]
   11aec:	ldr	r3, [sp, #36]	; 0x24
   11af0:	cmn	r3, #1
   11af4:	bne	12684 <close@plt+0x1800>
   11af8:	ldr	r3, [sp, #44]	; 0x2c
   11afc:	ldr	r2, [sp, #28]
   11b00:	ldrb	r3, [r3, r2]
   11b04:	adds	r3, r3, #0
   11b08:	movne	r3, #1
   11b0c:	str	r3, [sp, #52]	; 0x34
   11b10:	ldr	r3, [sp, #52]	; 0x34
   11b14:	cmp	r3, #0
   11b18:	bne	11d00 <close@plt+0xe7c>
   11b1c:	sub	r2, sl, #2
   11b20:	clz	r2, r2
   11b24:	lsr	r2, r2, #5
   11b28:	and	r3, r6, r2
   11b2c:	cmp	r4, #0
   11b30:	movne	r3, #0
   11b34:	andeq	r3, r3, #1
   11b38:	cmp	r3, #0
   11b3c:	bne	11ec8 <close@plt+0x1044>
   11b40:	eor	r3, r6, #1
   11b44:	ands	r2, r2, r3
   11b48:	beq	126bc <close@plt+0x1838>
   11b4c:	ldr	r3, [sp, #68]	; 0x44
   11b50:	cmp	r3, #0
   11b54:	beq	126f4 <close@plt+0x1870>
   11b58:	ldr	r3, [sp, #72]	; 0x48
   11b5c:	cmp	r3, #0
   11b60:	beq	12698 <close@plt+0x1814>
   11b64:	ldr	r3, [sp, #160]	; 0xa0
   11b68:	ldr	r2, [sp, #44]	; 0x2c
   11b6c:	str	r3, [sp, #16]
   11b70:	ldr	r3, [sp, #156]	; 0x9c
   11b74:	ldr	r1, [sp, #60]	; 0x3c
   11b78:	str	r3, [sp, #12]
   11b7c:	ldr	r3, [sp, #152]	; 0x98
   11b80:	str	r3, [sp, #8]
   11b84:	ldr	r3, [sp, #148]	; 0x94
   11b88:	str	r3, [sp, #4]
   11b8c:	mov	r3, #5
   11b90:	str	r3, [sp]
   11b94:	ldr	r3, [sp, #36]	; 0x24
   11b98:	mov	r0, r8
   11b9c:	bl	11a1c <close@plt+0xb98>
   11ba0:	mov	r4, r0
   11ba4:	b	126e8 <close@plt+0x1864>
   11ba8:	cmp	sl, #10
   11bac:	beq	11c08 <close@plt+0xd84>
   11bb0:	ldr	r4, [pc, #2956]	; 12744 <close@plt+0x18c0>
   11bb4:	mov	r2, #5
   11bb8:	mov	r1, r4
   11bbc:	mov	r0, #0
   11bc0:	bl	10cbc <dcgettext@plt>
   11bc4:	cmp	r0, r4
   11bc8:	str	r0, [sp, #156]	; 0x9c
   11bcc:	bne	11bdc <close@plt+0xd58>
   11bd0:	mov	r1, sl
   11bd4:	bl	11908 <close@plt+0xa84>
   11bd8:	str	r0, [sp, #156]	; 0x9c
   11bdc:	ldr	r4, [pc, #2916]	; 12748 <close@plt+0x18c4>
   11be0:	mov	r2, #5
   11be4:	mov	r1, r4
   11be8:	mov	r0, #0
   11bec:	bl	10cbc <dcgettext@plt>
   11bf0:	cmp	r0, r4
   11bf4:	str	r0, [sp, #160]	; 0xa0
   11bf8:	bne	11c08 <close@plt+0xd84>
   11bfc:	mov	r1, sl
   11c00:	bl	11908 <close@plt+0xa84>
   11c04:	str	r0, [sp, #160]	; 0xa0
   11c08:	cmp	r6, #0
   11c0c:	moveq	r4, r6
   11c10:	beq	11c28 <close@plt+0xda4>
   11c14:	mov	r4, #0
   11c18:	b	11c38 <close@plt+0xdb4>
   11c1c:	cmp	r5, r4
   11c20:	strbhi	r3, [r8, r4]
   11c24:	add	r4, r4, #1
   11c28:	ldr	r3, [sp, #156]	; 0x9c
   11c2c:	ldrb	r3, [r3, r4]
   11c30:	cmp	r3, #0
   11c34:	bne	11c1c <close@plt+0xd98>
   11c38:	ldr	r0, [sp, #160]	; 0xa0
   11c3c:	bl	10da0 <strlen@plt>
   11c40:	ldr	r3, [sp, #160]	; 0xa0
   11c44:	str	r3, [sp, #40]	; 0x28
   11c48:	mov	r3, #1
   11c4c:	str	r3, [sp, #24]
   11c50:	str	r0, [sp, #32]
   11c54:	b	11adc <close@plt+0xc58>
   11c58:	mov	r3, #1
   11c5c:	cmp	r6, #0
   11c60:	streq	r3, [sp, #24]
   11c64:	beq	11c84 <close@plt+0xe00>
   11c68:	str	r3, [sp, #32]
   11c6c:	ldr	r3, [pc, #2772]	; 12748 <close@plt+0x18c4>
   11c70:	mov	r4, #0
   11c74:	str	r3, [sp, #40]	; 0x28
   11c78:	b	11ca8 <close@plt+0xe24>
   11c7c:	cmp	r6, #0
   11c80:	bne	11cf0 <close@plt+0xe6c>
   11c84:	cmp	r5, #0
   11c88:	movne	r3, #39	; 0x27
   11c8c:	strbne	r3, [r8]
   11c90:	mov	r3, #1
   11c94:	str	r3, [sp, #32]
   11c98:	mov	r6, #0
   11c9c:	ldr	r3, [pc, #2724]	; 12748 <close@plt+0x18c4>
   11ca0:	mov	r4, #1
   11ca4:	str	r3, [sp, #40]	; 0x28
   11ca8:	mov	sl, #2
   11cac:	b	11adc <close@plt+0xc58>
   11cb0:	bl	10e78 <abort@plt>
   11cb4:	mov	r6, #0
   11cb8:	mov	r3, #1
   11cbc:	str	r3, [sp, #24]
   11cc0:	mov	r4, r6
   11cc4:	b	11adc <close@plt+0xc58>
   11cc8:	mov	r6, #1
   11ccc:	str	r6, [sp, #24]
   11cd0:	str	r6, [sp, #32]
   11cd4:	b	11c6c <close@plt+0xde8>
   11cd8:	mov	r3, #1
   11cdc:	str	r3, [sp, #32]
   11ce0:	ldr	r3, [pc, #2648]	; 12740 <close@plt+0x18bc>
   11ce4:	str	r6, [sp, #24]
   11ce8:	str	r3, [sp, #40]	; 0x28
   11cec:	b	11aa8 <close@plt+0xc24>
   11cf0:	mov	r3, #1
   11cf4:	str	r3, [sp, #32]
   11cf8:	ldr	r3, [pc, #2632]	; 12748 <close@plt+0x18c4>
   11cfc:	b	11ce8 <close@plt+0xe64>
   11d00:	ldr	r3, [sp, #32]
   11d04:	ldr	fp, [sp, #24]
   11d08:	cmp	sl, #2
   11d0c:	moveq	fp, #0
   11d10:	andne	fp, fp, #1
   11d14:	adds	r5, r3, #0
   11d18:	movne	r5, #1
   11d1c:	ands	r3, r5, fp
   11d20:	str	r3, [sp, #64]	; 0x40
   11d24:	beq	11df4 <close@plt+0xf70>
   11d28:	ldr	r2, [sp, #32]
   11d2c:	ldr	r3, [sp, #28]
   11d30:	add	r7, r3, r2
   11d34:	mov	r3, r2
   11d38:	ldr	r2, [sp, #36]	; 0x24
   11d3c:	cmp	r3, #1
   11d40:	movls	r3, #0
   11d44:	movhi	r3, #1
   11d48:	cmn	r2, #1
   11d4c:	movne	r3, #0
   11d50:	cmp	r3, #0
   11d54:	beq	11d64 <close@plt+0xee0>
   11d58:	ldr	r0, [sp, #44]	; 0x2c
   11d5c:	bl	10da0 <strlen@plt>
   11d60:	str	r0, [sp, #36]	; 0x24
   11d64:	ldr	r3, [sp, #36]	; 0x24
   11d68:	cmp	r3, r7
   11d6c:	bcc	11dec <close@plt+0xf68>
   11d70:	ldr	r3, [sp, #44]	; 0x2c
   11d74:	ldr	r0, [sp, #28]
   11d78:	ldr	r2, [sp, #32]
   11d7c:	ldr	r1, [sp, #40]	; 0x28
   11d80:	add	r0, r3, r0
   11d84:	bl	10ca4 <memcmp@plt>
   11d88:	cmp	r0, #0
   11d8c:	bne	11dec <close@plt+0xf68>
   11d90:	cmp	r6, #0
   11d94:	beq	11df4 <close@plt+0xf70>
   11d98:	str	r6, [sp, #24]
   11d9c:	ldr	r3, [sp, #24]
   11da0:	ldr	r2, [sp, #44]	; 0x2c
   11da4:	cmp	sl, #2
   11da8:	movne	r3, #0
   11dac:	andeq	r3, r3, #1
   11db0:	cmp	r3, #0
   11db4:	ldr	r3, [sp, #160]	; 0xa0
   11db8:	movne	sl, #4
   11dbc:	str	r3, [sp, #16]
   11dc0:	ldr	r3, [sp, #156]	; 0x9c
   11dc4:	str	sl, [sp]
   11dc8:	str	r3, [sp, #12]
   11dcc:	mov	r3, #0
   11dd0:	str	r3, [sp, #8]
   11dd4:	ldr	r3, [sp, #148]	; 0x94
   11dd8:	mov	r1, r9
   11ddc:	bic	r3, r3, #2
   11de0:	str	r3, [sp, #4]
   11de4:	ldr	r3, [sp, #36]	; 0x24
   11de8:	b	11b98 <close@plt+0xd14>
   11dec:	mov	r3, #0
   11df0:	str	r3, [sp, #64]	; 0x40
   11df4:	ldr	r2, [sp, #28]
   11df8:	ldr	r3, [sp, #44]	; 0x2c
   11dfc:	add	r3, r3, r2
   11e00:	str	r3, [sp, #80]	; 0x50
   11e04:	ldr	r3, [sp, #44]	; 0x2c
   11e08:	ldrb	r7, [r3, r2]
   11e0c:	cmp	r7, #58	; 0x3a
   11e10:	bhi	11f78 <close@plt+0x10f4>
   11e14:	cmp	r7, #43	; 0x2b
   11e18:	bcs	11fcc <close@plt+0x1148>
   11e1c:	cmp	r7, #32
   11e20:	beq	12024 <close@plt+0x11a0>
   11e24:	bhi	11ed0 <close@plt+0x104c>
   11e28:	cmp	r7, #9
   11e2c:	beq	122d8 <close@plt+0x1454>
   11e30:	bhi	11e94 <close@plt+0x1010>
   11e34:	cmp	r7, #7
   11e38:	beq	12384 <close@plt+0x1500>
   11e3c:	bhi	12040 <close@plt+0x11bc>
   11e40:	cmp	r7, #0
   11e44:	beq	1205c <close@plt+0x11d8>
   11e48:	ldr	r3, [sp, #76]	; 0x4c
   11e4c:	cmp	r3, #1
   11e50:	bne	123c8 <close@plt+0x1544>
   11e54:	bl	10d88 <__ctype_b_loc@plt>
   11e58:	sxth	r3, r7
   11e5c:	lsl	r3, r3, #1
   11e60:	ldr	r2, [r0]
   11e64:	ldrh	r5, [r2, r3]
   11e68:	ldr	r3, [sp, #76]	; 0x4c
   11e6c:	str	r3, [sp, #56]	; 0x38
   11e70:	lsr	r5, r5, #14
   11e74:	and	r5, r5, #1
   11e78:	ldr	r3, [sp, #24]
   11e7c:	eor	fp, r5, #1
   11e80:	and	fp, fp, r3
   11e84:	ands	fp, fp, #255	; 0xff
   11e88:	beq	12210 <close@plt+0x138c>
   11e8c:	mov	r5, #0
   11e90:	b	12474 <close@plt+0x15f0>
   11e94:	cmp	r7, #11
   11e98:	beq	122e0 <close@plt+0x145c>
   11e9c:	bcc	1237c <close@plt+0x14f8>
   11ea0:	cmp	r7, #12
   11ea4:	beq	1238c <close@plt+0x1508>
   11ea8:	cmp	r7, #13
   11eac:	moveq	r3, #114	; 0x72
   11eb0:	bne	11e48 <close@plt+0xfc4>
   11eb4:	cmp	sl, #2
   11eb8:	movne	r2, #0
   11ebc:	andeq	r2, r6, #1
   11ec0:	cmp	r2, #0
   11ec4:	beq	12044 <close@plt+0x11c0>
   11ec8:	mov	sl, #2
   11ecc:	b	11d9c <close@plt+0xf18>
   11ed0:	cmp	r7, #37	; 0x25
   11ed4:	beq	11fcc <close@plt+0x1148>
   11ed8:	bhi	11eec <close@plt+0x1068>
   11edc:	cmp	r7, #35	; 0x23
   11ee0:	beq	12018 <close@plt+0x1194>
   11ee4:	mov	r5, #0
   11ee8:	b	12028 <close@plt+0x11a4>
   11eec:	cmp	r7, #39	; 0x27
   11ef0:	bne	11ee4 <close@plt+0x1060>
   11ef4:	cmp	sl, #2
   11ef8:	ldrne	r5, [sp, #52]	; 0x34
   11efc:	movne	r3, r5
   11f00:	strne	r3, [sp, #68]	; 0x44
   11f04:	bne	11fd0 <close@plt+0x114c>
   11f08:	cmp	r6, #0
   11f0c:	bne	11d9c <close@plt+0xf18>
   11f10:	ldr	r2, [sp, #60]	; 0x3c
   11f14:	adds	r3, r9, #0
   11f18:	movne	r3, #1
   11f1c:	cmp	r2, #0
   11f20:	movne	r3, #0
   11f24:	cmp	r3, #0
   11f28:	strne	r9, [sp, #60]	; 0x3c
   11f2c:	movne	r9, #0
   11f30:	bne	11f40 <close@plt+0x10bc>
   11f34:	cmp	r9, r4
   11f38:	movhi	r3, #39	; 0x27
   11f3c:	strbhi	r3, [r8, r4]
   11f40:	add	r3, r4, #1
   11f44:	cmp	r3, r9
   11f48:	movcc	r2, #92	; 0x5c
   11f4c:	strbcc	r2, [r8, r3]
   11f50:	add	r3, r4, #2
   11f54:	cmp	r3, r9
   11f58:	ldr	r5, [sp, #52]	; 0x34
   11f5c:	movcc	r2, #39	; 0x27
   11f60:	strbcc	r2, [r8, r3]
   11f64:	add	r4, r4, #3
   11f68:	mov	fp, r6
   11f6c:	str	r5, [sp, #68]	; 0x44
   11f70:	str	r6, [sp, #48]	; 0x30
   11f74:	b	12210 <close@plt+0x138c>
   11f78:	cmp	r7, #94	; 0x5e
   11f7c:	beq	11ee4 <close@plt+0x1060>
   11f80:	bhi	11fd8 <close@plt+0x1154>
   11f84:	cmp	r7, #90	; 0x5a
   11f88:	bhi	11fc0 <close@plt+0x113c>
   11f8c:	cmp	r7, #65	; 0x41
   11f90:	bcs	11fcc <close@plt+0x1148>
   11f94:	cmp	r7, #62	; 0x3e
   11f98:	bls	11ee4 <close@plt+0x1060>
   11f9c:	cmp	r7, #63	; 0x3f
   11fa0:	bne	11e48 <close@plt+0xfc4>
   11fa4:	cmp	sl, #2
   11fa8:	beq	1214c <close@plt+0x12c8>
   11fac:	cmp	sl, #5
   11fb0:	beq	1215c <close@plt+0x12d8>
   11fb4:	mov	fp, #0
   11fb8:	mov	r5, fp
   11fbc:	b	12210 <close@plt+0x138c>
   11fc0:	cmp	r7, #92	; 0x5c
   11fc4:	beq	122e8 <close@plt+0x1464>
   11fc8:	bls	11ee4 <close@plt+0x1060>
   11fcc:	ldr	r5, [sp, #52]	; 0x34
   11fd0:	mov	fp, #0
   11fd4:	b	12210 <close@plt+0x138c>
   11fd8:	cmp	r7, #122	; 0x7a
   11fdc:	bhi	11ffc <close@plt+0x1178>
   11fe0:	cmp	r7, #97	; 0x61
   11fe4:	bcs	11fcc <close@plt+0x1148>
   11fe8:	cmp	r7, #95	; 0x5f
   11fec:	beq	11fcc <close@plt+0x1148>
   11ff0:	cmp	r7, #96	; 0x60
   11ff4:	bne	11e48 <close@plt+0xfc4>
   11ff8:	b	11ee4 <close@plt+0x1060>
   11ffc:	cmp	r7, #124	; 0x7c
   12000:	beq	11ee4 <close@plt+0x1060>
   12004:	bcc	12394 <close@plt+0x1510>
   12008:	cmp	r7, #125	; 0x7d
   1200c:	beq	12394 <close@plt+0x1510>
   12010:	cmp	r7, #126	; 0x7e
   12014:	bne	11e48 <close@plt+0xfc4>
   12018:	ldr	r3, [sp, #28]
   1201c:	cmp	r3, #0
   12020:	bne	12154 <close@plt+0x12d0>
   12024:	ldr	r5, [sp, #52]	; 0x34
   12028:	cmp	sl, #2
   1202c:	movne	fp, #0
   12030:	andeq	fp, r6, #1
   12034:	cmp	fp, #0
   12038:	beq	12210 <close@plt+0x138c>
   1203c:	b	11ec8 <close@plt+0x1044>
   12040:	mov	r3, #98	; 0x62
   12044:	ldr	r2, [sp, #24]
   12048:	cmp	r2, #0
   1204c:	beq	12154 <close@plt+0x12d0>
   12050:	mov	r7, r3
   12054:	mov	r5, #0
   12058:	b	12268 <close@plt+0x13e4>
   1205c:	ldr	r3, [sp, #24]
   12060:	cmp	r3, #0
   12064:	beq	12130 <close@plt+0x12ac>
   12068:	cmp	r6, #0
   1206c:	bne	11d98 <close@plt+0xf14>
   12070:	ldr	r3, [sp, #48]	; 0x30
   12074:	eor	r2, r3, #1
   12078:	cmp	sl, #2
   1207c:	movne	r2, #0
   12080:	andeq	r2, r2, #1
   12084:	cmp	r2, #0
   12088:	moveq	r3, r4
   1208c:	beq	120c4 <close@plt+0x1240>
   12090:	cmp	r9, r4
   12094:	movhi	r3, #39	; 0x27
   12098:	strbhi	r3, [r8, r4]
   1209c:	add	r3, r4, #1
   120a0:	cmp	r9, r3
   120a4:	movhi	r1, #36	; 0x24
   120a8:	strbhi	r1, [r8, r3]
   120ac:	add	r3, r4, #2
   120b0:	cmp	r9, r3
   120b4:	movhi	r1, #39	; 0x27
   120b8:	strbhi	r1, [r8, r3]
   120bc:	add	r3, r4, #3
   120c0:	str	r2, [sp, #48]	; 0x30
   120c4:	cmp	r9, r3
   120c8:	movhi	r2, #92	; 0x5c
   120cc:	strbhi	r2, [r8, r3]
   120d0:	cmp	fp, #0
   120d4:	add	r4, r3, #1
   120d8:	beq	12668 <close@plt+0x17e4>
   120dc:	ldr	r2, [sp, #28]
   120e0:	ldr	r1, [sp, #36]	; 0x24
   120e4:	add	r2, r2, #1
   120e8:	cmp	r1, r2
   120ec:	bls	12128 <close@plt+0x12a4>
   120f0:	ldr	r1, [sp, #44]	; 0x2c
   120f4:	mov	r7, #48	; 0x30
   120f8:	ldrb	r2, [r1, r2]
   120fc:	sub	r2, r2, #48	; 0x30
   12100:	cmp	r2, #9
   12104:	movhi	r5, r6
   12108:	bhi	12210 <close@plt+0x138c>
   1210c:	cmp	r9, r4
   12110:	add	r2, r3, #2
   12114:	strbhi	r7, [r8, r4]
   12118:	cmp	r9, r2
   1211c:	add	r4, r3, #3
   12120:	movhi	r1, #48	; 0x30
   12124:	strbhi	r1, [r8, r2]
   12128:	mov	r5, r6
   1212c:	b	12670 <close@plt+0x17ec>
   12130:	ldr	r3, [sp, #148]	; 0x94
   12134:	tst	r3, #1
   12138:	ldreq	r5, [sp, #24]
   1213c:	beq	1267c <close@plt+0x17f8>
   12140:	ldr	r3, [sp, #28]
   12144:	add	r3, r3, #1
   12148:	b	11ae8 <close@plt+0xc64>
   1214c:	cmp	r6, #0
   12150:	bne	11d9c <close@plt+0xf18>
   12154:	mov	r5, #0
   12158:	b	11fd0 <close@plt+0x114c>
   1215c:	ldr	r3, [sp, #148]	; 0x94
   12160:	tst	r3, #4
   12164:	beq	12154 <close@plt+0x12d0>
   12168:	ldr	r3, [sp, #28]
   1216c:	add	r2, r3, #2
   12170:	ldr	r3, [sp, #36]	; 0x24
   12174:	cmp	r3, r2
   12178:	bls	12154 <close@plt+0x12d0>
   1217c:	ldr	r3, [sp, #44]	; 0x2c
   12180:	ldr	r1, [sp, #28]
   12184:	add	r3, r3, r1
   12188:	ldrb	r0, [r3, #1]
   1218c:	cmp	r0, #63	; 0x3f
   12190:	bne	12154 <close@plt+0x12d0>
   12194:	ldr	r3, [sp, #44]	; 0x2c
   12198:	ldrb	r1, [r3, r2]
   1219c:	sub	r3, r1, #33	; 0x21
   121a0:	uxtb	r3, r3
   121a4:	cmp	r3, #29
   121a8:	bhi	12678 <close@plt+0x17f4>
   121ac:	mov	ip, #1
   121b0:	ldr	r5, [pc, #1428]	; 1274c <close@plt+0x18c8>
   121b4:	ands	r5, r5, ip, lsl r3
   121b8:	beq	11fd0 <close@plt+0x114c>
   121bc:	cmp	r6, #0
   121c0:	bne	11d9c <close@plt+0xf18>
   121c4:	add	r3, r4, #1
   121c8:	cmp	r9, r4
   121cc:	strbhi	r0, [r8, r4]
   121d0:	cmp	r9, r3
   121d4:	movhi	r0, #34	; 0x22
   121d8:	strbhi	r0, [r8, r3]
   121dc:	add	r3, r4, #2
   121e0:	cmp	r9, r3
   121e4:	movhi	r0, #34	; 0x22
   121e8:	strbhi	r0, [r8, r3]
   121ec:	add	r3, r4, #3
   121f0:	cmp	r9, r3
   121f4:	add	r4, r4, #4
   121f8:	mov	r5, r6
   121fc:	mov	fp, r6
   12200:	mov	r7, r1
   12204:	movhi	r0, #63	; 0x3f
   12208:	strbhi	r0, [r8, r3]
   1220c:	str	r2, [sp, #28]
   12210:	ldr	r3, [sp, #24]
   12214:	eor	r3, r3, #1
   12218:	cmp	sl, #2
   1221c:	orreq	r3, r3, #1
   12220:	eor	r3, r3, #1
   12224:	orr	r3, r6, r3
   12228:	tst	r3, #255	; 0xff
   1222c:	beq	1225c <close@plt+0x13d8>
   12230:	ldr	r3, [sp, #152]	; 0x98
   12234:	cmp	r3, #0
   12238:	beq	1225c <close@plt+0x13d8>
   1223c:	lsr	r2, r7, #5
   12240:	ldr	r1, [sp, #152]	; 0x98
   12244:	uxtb	r2, r2
   12248:	and	r3, r7, #31
   1224c:	ldr	r2, [r1, r2, lsl #2]
   12250:	lsr	r3, r2, r3
   12254:	tst	r3, #1
   12258:	bne	12268 <close@plt+0x13e4>
   1225c:	ldr	r3, [sp, #64]	; 0x40
   12260:	cmp	r3, #0
   12264:	beq	12300 <close@plt+0x147c>
   12268:	cmp	r6, #0
   1226c:	bne	11d9c <close@plt+0xf18>
   12270:	ldr	r3, [sp, #48]	; 0x30
   12274:	eor	r3, r3, #1
   12278:	cmp	sl, #2
   1227c:	movne	r3, #0
   12280:	andeq	r3, r3, #1
   12284:	cmp	r3, #0
   12288:	beq	122c0 <close@plt+0x143c>
   1228c:	cmp	r9, r4
   12290:	movhi	r2, #39	; 0x27
   12294:	strbhi	r2, [r8, r4]
   12298:	add	r2, r4, #1
   1229c:	cmp	r9, r2
   122a0:	movhi	r1, #36	; 0x24
   122a4:	strbhi	r1, [r8, r2]
   122a8:	add	r2, r4, #2
   122ac:	cmp	r9, r2
   122b0:	add	r4, r4, #3
   122b4:	movhi	r1, #39	; 0x27
   122b8:	strbhi	r1, [r8, r2]
   122bc:	str	r3, [sp, #48]	; 0x30
   122c0:	cmp	r9, r4
   122c4:	movhi	r3, #92	; 0x5c
   122c8:	strbhi	r3, [r8, r4]
   122cc:	ldr	fp, [sp, #52]	; 0x34
   122d0:	add	r4, r4, #1
   122d4:	b	12300 <close@plt+0x147c>
   122d8:	mov	r3, #116	; 0x74
   122dc:	b	11eb4 <close@plt+0x1030>
   122e0:	mov	r3, #118	; 0x76
   122e4:	b	12044 <close@plt+0x11c0>
   122e8:	cmp	sl, #2
   122ec:	bne	1235c <close@plt+0x14d8>
   122f0:	cmp	r6, #0
   122f4:	bne	11d9c <close@plt+0xf18>
   122f8:	mov	r5, r6
   122fc:	mov	fp, r6
   12300:	ldr	r3, [sp, #48]	; 0x30
   12304:	eor	fp, fp, #1
   12308:	and	fp, fp, r3
   1230c:	tst	fp, #255	; 0xff
   12310:	beq	1233c <close@plt+0x14b8>
   12314:	cmp	r9, r4
   12318:	movhi	r3, #39	; 0x27
   1231c:	strbhi	r3, [r8, r4]
   12320:	add	r3, r4, #1
   12324:	cmp	r9, r3
   12328:	movhi	r2, #39	; 0x27
   1232c:	add	r4, r4, #2
   12330:	strbhi	r2, [r8, r3]
   12334:	mov	r3, #0
   12338:	str	r3, [sp, #48]	; 0x30
   1233c:	cmp	r9, r4
   12340:	strbhi	r7, [r8, r4]
   12344:	ldr	r3, [sp, #72]	; 0x48
   12348:	cmp	r5, #0
   1234c:	moveq	r3, #0
   12350:	add	r4, r4, #1
   12354:	str	r3, [sp, #72]	; 0x48
   12358:	b	12140 <close@plt+0x12bc>
   1235c:	ldr	r3, [sp, #24]
   12360:	and	r3, r3, r6
   12364:	tst	r5, r3
   12368:	moveq	r3, r7
   1236c:	beq	11eb4 <close@plt+0x1030>
   12370:	mov	fp, #0
   12374:	mov	r5, fp
   12378:	b	12300 <close@plt+0x147c>
   1237c:	mov	r3, #110	; 0x6e
   12380:	b	11eb4 <close@plt+0x1030>
   12384:	mov	r3, #97	; 0x61
   12388:	b	12044 <close@plt+0x11c0>
   1238c:	mov	r3, #102	; 0x66
   12390:	b	12044 <close@plt+0x11c0>
   12394:	ldr	r3, [sp, #36]	; 0x24
   12398:	cmn	r3, #1
   1239c:	bne	123bc <close@plt+0x1538>
   123a0:	ldr	r3, [sp, #44]	; 0x2c
   123a4:	ldrb	r3, [r3, #1]
   123a8:	adds	r3, r3, #0
   123ac:	movne	r3, #1
   123b0:	cmp	r3, #0
   123b4:	bne	12154 <close@plt+0x12d0>
   123b8:	b	12018 <close@plt+0x1194>
   123bc:	ldr	r3, [sp, #36]	; 0x24
   123c0:	subs	r3, r3, #1
   123c4:	b	123ac <close@plt+0x1528>
   123c8:	mov	r3, #0
   123cc:	str	r3, [sp, #96]	; 0x60
   123d0:	str	r3, [sp, #100]	; 0x64
   123d4:	ldr	r3, [sp, #36]	; 0x24
   123d8:	cmn	r3, #1
   123dc:	bne	123ec <close@plt+0x1568>
   123e0:	ldr	r0, [sp, #44]	; 0x2c
   123e4:	bl	10da0 <strlen@plt>
   123e8:	str	r0, [sp, #36]	; 0x24
   123ec:	ldr	r5, [sp, #52]	; 0x34
   123f0:	mov	r3, #0
   123f4:	str	r3, [sp, #56]	; 0x38
   123f8:	ldr	r3, [sp, #28]
   123fc:	ldr	r2, [sp, #56]	; 0x38
   12400:	ldr	r1, [sp, #36]	; 0x24
   12404:	add	r2, r3, r2
   12408:	ldr	r3, [sp, #44]	; 0x2c
   1240c:	add	r0, sp, #92	; 0x5c
   12410:	add	fp, r3, r2
   12414:	sub	r2, r1, r2
   12418:	add	r3, sp, #96	; 0x60
   1241c:	mov	r1, fp
   12420:	bl	13bb0 <close@plt+0x2d2c>
   12424:	subs	r2, r0, #0
   12428:	beq	12468 <close@plt+0x15e4>
   1242c:	cmn	r2, #1
   12430:	beq	12640 <close@plt+0x17bc>
   12434:	cmn	r2, #2
   12438:	bne	125b0 <close@plt+0x172c>
   1243c:	ldr	r2, [sp, #56]	; 0x38
   12440:	ldr	r3, [sp, #28]
   12444:	add	r3, r3, r2
   12448:	ldr	r2, [sp, #36]	; 0x24
   1244c:	cmp	r2, r3
   12450:	bls	12640 <close@plt+0x17bc>
   12454:	ldr	r3, [sp, #80]	; 0x50
   12458:	ldr	r2, [sp, #56]	; 0x38
   1245c:	ldrb	r5, [r3, r2]
   12460:	cmp	r5, #0
   12464:	bne	125a0 <close@plt+0x171c>
   12468:	ldr	r3, [sp, #56]	; 0x38
   1246c:	cmp	r3, #1
   12470:	bls	11e78 <close@plt+0xff4>
   12474:	ldr	r2, [sp, #56]	; 0x38
   12478:	ldr	r3, [sp, #28]
   1247c:	mov	fp, #0
   12480:	add	r3, r3, r2
   12484:	ldr	r2, [sp, #24]
   12488:	str	r3, [sp, #52]	; 0x34
   1248c:	eor	r3, r5, #1
   12490:	and	r3, r3, r2
   12494:	mov	ip, #92	; 0x5c
   12498:	uxtb	r3, r3
   1249c:	mov	r2, #39	; 0x27
   124a0:	cmp	r3, #0
   124a4:	beq	12648 <close@plt+0x17c4>
   124a8:	cmp	r6, #0
   124ac:	bne	11d98 <close@plt+0xf14>
   124b0:	ldr	r1, [sp, #48]	; 0x30
   124b4:	eor	r1, r1, #1
   124b8:	cmp	sl, #2
   124bc:	movne	r1, #0
   124c0:	andeq	r1, r1, #1
   124c4:	cmp	r1, #0
   124c8:	beq	124f8 <close@plt+0x1674>
   124cc:	add	r0, r4, #1
   124d0:	cmp	r9, r4
   124d4:	strbhi	r2, [r8, r4]
   124d8:	cmp	r9, r0
   124dc:	movhi	lr, #36	; 0x24
   124e0:	strbhi	lr, [r8, r0]
   124e4:	add	r0, r4, #2
   124e8:	add	r4, r4, #3
   124ec:	cmp	r9, r0
   124f0:	strbhi	r2, [r8, r0]
   124f4:	str	r1, [sp, #48]	; 0x30
   124f8:	add	r0, r4, #1
   124fc:	cmp	r9, r4
   12500:	strbhi	ip, [r8, r4]
   12504:	cmp	r9, r0
   12508:	lsrhi	r1, r7, #6
   1250c:	addhi	r1, r1, #48	; 0x30
   12510:	strbhi	r1, [r8, r0]
   12514:	add	r0, r4, #2
   12518:	cmp	r9, r0
   1251c:	lsrhi	r1, r7, #3
   12520:	and	r7, r7, #7
   12524:	andhi	r1, r1, #7
   12528:	add	r4, r4, #3
   1252c:	add	r7, r7, #48	; 0x30
   12530:	mov	fp, r3
   12534:	addhi	r1, r1, #48	; 0x30
   12538:	strbhi	r1, [r8, r0]
   1253c:	ldr	r1, [sp, #28]
   12540:	ldr	r0, [sp, #52]	; 0x34
   12544:	add	r1, r1, #1
   12548:	cmp	r0, r1
   1254c:	bls	12300 <close@plt+0x147c>
   12550:	ldr	lr, [sp, #48]	; 0x30
   12554:	eor	r0, fp, #1
   12558:	and	r0, r0, lr
   1255c:	tst	r0, #255	; 0xff
   12560:	beq	12584 <close@plt+0x1700>
   12564:	add	r0, r4, #1
   12568:	cmp	r9, r4
   1256c:	strbhi	r2, [r8, r4]
   12570:	cmp	r9, r0
   12574:	add	r4, r4, #2
   12578:	strbhi	r2, [r8, r0]
   1257c:	mov	r0, #0
   12580:	str	r0, [sp, #48]	; 0x30
   12584:	ldr	r0, [sp, #44]	; 0x2c
   12588:	cmp	r9, r4
   1258c:	strbhi	r7, [r8, r4]
   12590:	str	r1, [sp, #28]
   12594:	add	r4, r4, #1
   12598:	ldrb	r7, [r0, r1]
   1259c:	b	124a0 <close@plt+0x161c>
   125a0:	ldr	r3, [sp, #56]	; 0x38
   125a4:	add	r3, r3, #1
   125a8:	str	r3, [sp, #56]	; 0x38
   125ac:	b	1243c <close@plt+0x15b8>
   125b0:	cmp	sl, #2
   125b4:	movne	r3, #0
   125b8:	andeq	r3, r6, #1
   125bc:	cmp	r3, #0
   125c0:	movne	r1, #1
   125c4:	bne	12620 <close@plt+0x179c>
   125c8:	ldr	r0, [sp, #92]	; 0x5c
   125cc:	str	r2, [sp, #84]	; 0x54
   125d0:	bl	10cec <iswprint@plt>
   125d4:	ldr	r3, [sp, #56]	; 0x38
   125d8:	ldr	r2, [sp, #84]	; 0x54
   125dc:	add	r3, r3, r2
   125e0:	str	r3, [sp, #56]	; 0x38
   125e4:	cmp	r0, #0
   125e8:	add	r0, sp, #96	; 0x60
   125ec:	moveq	r5, #0
   125f0:	bl	10c98 <mbsinit@plt>
   125f4:	cmp	r0, #0
   125f8:	beq	123f8 <close@plt+0x1574>
   125fc:	b	12468 <close@plt+0x15e4>
   12600:	ldrb	r3, [fp, r1]
   12604:	cmp	r3, #94	; 0x5e
   12608:	beq	11ec8 <close@plt+0x1044>
   1260c:	bhi	1262c <close@plt+0x17a8>
   12610:	sub	r3, r3, #91	; 0x5b
   12614:	cmp	r3, #1
   12618:	bls	11ec8 <close@plt+0x1044>
   1261c:	add	r1, r1, #1
   12620:	cmp	r1, r2
   12624:	bne	12600 <close@plt+0x177c>
   12628:	b	125c8 <close@plt+0x1744>
   1262c:	cmp	r3, #96	; 0x60
   12630:	beq	11ec8 <close@plt+0x1044>
   12634:	cmp	r3, #124	; 0x7c
   12638:	bne	1261c <close@plt+0x1798>
   1263c:	b	11ec8 <close@plt+0x1044>
   12640:	mov	r5, #0
   12644:	b	12468 <close@plt+0x15e4>
   12648:	ldr	r1, [sp, #64]	; 0x40
   1264c:	cmp	r1, #0
   12650:	beq	1253c <close@plt+0x16b8>
   12654:	cmp	r9, r4
   12658:	strbhi	ip, [r8, r4]
   1265c:	str	r3, [sp, #64]	; 0x40
   12660:	add	r4, r4, #1
   12664:	b	1253c <close@plt+0x16b8>
   12668:	mov	r5, fp
   1266c:	ldr	fp, [sp, #24]
   12670:	mov	r7, #48	; 0x30
   12674:	b	12210 <close@plt+0x138c>
   12678:	mov	r5, #0
   1267c:	mov	fp, r5
   12680:	b	12210 <close@plt+0x138c>
   12684:	ldr	r3, [sp, #36]	; 0x24
   12688:	ldr	r2, [sp, #28]
   1268c:	subs	r3, r3, r2
   12690:	movne	r3, #1
   12694:	b	11b0c <close@plt+0xc88>
   12698:	ldr	r3, [sp, #60]	; 0x3c
   1269c:	clz	r7, r9
   126a0:	cmp	r3, #0
   126a4:	lsr	r7, r7, #5
   126a8:	moveq	r7, #0
   126ac:	cmp	r7, #0
   126b0:	mov	r5, r3
   126b4:	bne	11a6c <close@plt+0xbe8>
   126b8:	ldr	r3, [sp, #68]	; 0x44
   126bc:	ldr	r2, [sp, #40]	; 0x28
   126c0:	cmp	r2, #0
   126c4:	moveq	r3, #0
   126c8:	andne	r3, r3, #1
   126cc:	cmp	r3, #0
   126d0:	movne	r3, r2
   126d4:	subne	r2, r3, #1
   126d8:	bne	12708 <close@plt+0x1884>
   126dc:	cmp	r9, r4
   126e0:	movhi	r3, #0
   126e4:	strbhi	r3, [r8, r4]
   126e8:	mov	r0, r4
   126ec:	add	sp, sp, #108	; 0x6c
   126f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126f4:	mov	r3, r2
   126f8:	b	126bc <close@plt+0x1838>
   126fc:	cmp	r9, r4
   12700:	strbhi	r3, [r8, r4]
   12704:	add	r4, r4, #1
   12708:	ldrb	r3, [r2, #1]!
   1270c:	cmp	r3, #0
   12710:	bne	126fc <close@plt+0x1878>
   12714:	b	126dc <close@plt+0x1858>
   12718:	ldr	r3, [pc, #32]	; 12740 <close@plt+0x18bc>
   1271c:	mov	r6, #1
   12720:	str	r6, [sp, #24]
   12724:	str	r6, [sp, #32]
   12728:	str	r3, [sp, #40]	; 0x28
   1272c:	mov	r4, #0
   12730:	mov	sl, #5
   12734:	b	11adc <close@plt+0xc58>
   12738:	mov	r6, #1
   1273c:	b	11cd0 <close@plt+0xe4c>
   12740:	andeq	r4, r1, pc, asr r7
   12744:	andeq	r4, r1, r3, ror #14
   12748:	andeq	r4, r1, r1, ror #14
   1274c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12754:	sub	sp, sp, #52	; 0x34
   12758:	mov	r6, r0
   1275c:	mov	r5, r3
   12760:	mov	r8, r1
   12764:	mov	r9, r2
   12768:	bl	10dac <__errno_location@plt>
   1276c:	ldr	r7, [pc, #380]	; 128f0 <close@plt+0x1a6c>
   12770:	cmn	r6, #-2147483647	; 0x80000001
   12774:	ldr	r4, [r7]
   12778:	ldr	r3, [r0]
   1277c:	str	r0, [sp, #24]
   12780:	str	r3, [sp, #32]
   12784:	movne	r3, #0
   12788:	moveq	r3, #1
   1278c:	orrs	r3, r3, r6, lsr #31
   12790:	beq	12798 <close@plt+0x1914>
   12794:	bl	10e78 <abort@plt>
   12798:	ldr	r2, [r7, #4]
   1279c:	cmp	r6, r2
   127a0:	blt	12810 <close@plt+0x198c>
   127a4:	add	r1, sp, #48	; 0x30
   127a8:	add	sl, r7, #8
   127ac:	str	r2, [r1, #-4]!
   127b0:	cmp	r4, sl
   127b4:	mov	r3, #8
   127b8:	sub	r2, r6, r2
   127bc:	movne	r0, r4
   127c0:	str	r3, [sp]
   127c4:	add	r2, r2, #1
   127c8:	mvn	r3, #-2147483648	; 0x80000000
   127cc:	moveq	r0, #0
   127d0:	bl	134e4 <close@plt+0x2660>
   127d4:	cmp	r4, sl
   127d8:	ldr	r2, [sp, #44]	; 0x2c
   127dc:	mov	fp, r0
   127e0:	str	r0, [r7]
   127e4:	ldmeq	r4, {r0, r1}
   127e8:	mov	r4, fp
   127ec:	stmeq	fp, {r0, r1}
   127f0:	ldr	r0, [r7, #4]
   127f4:	mov	r1, #0
   127f8:	sub	r2, r2, r0
   127fc:	add	r0, fp, r0, lsl #3
   12800:	lsl	r2, r2, #3
   12804:	bl	10dc4 <memset@plt>
   12808:	ldr	r3, [sp, #44]	; 0x2c
   1280c:	str	r3, [r7, #4]
   12810:	ldr	r3, [r5, #4]
   12814:	add	sl, r4, r6, lsl #3
   12818:	orr	r3, r3, #1
   1281c:	str	r3, [sp, #28]
   12820:	add	r3, r5, #8
   12824:	str	r3, [sp, #36]	; 0x24
   12828:	ldr	r3, [r5, #44]	; 0x2c
   1282c:	ldr	fp, [r4, r6, lsl #3]
   12830:	ldr	r7, [sl, #4]
   12834:	str	r3, [sp, #16]
   12838:	ldr	r3, [r5, #40]	; 0x28
   1283c:	mov	r2, r8
   12840:	str	r3, [sp, #12]
   12844:	add	r3, r5, #8
   12848:	str	r3, [sp, #8]
   1284c:	ldr	r3, [sp, #28]
   12850:	mov	r1, fp
   12854:	str	r3, [sp, #4]
   12858:	ldr	r3, [r5]
   1285c:	mov	r0, r7
   12860:	str	r3, [sp]
   12864:	mov	r3, r9
   12868:	bl	11a1c <close@plt+0xb98>
   1286c:	cmp	fp, r0
   12870:	bhi	128d8 <close@plt+0x1a54>
   12874:	ldr	r3, [pc, #120]	; 128f4 <close@plt+0x1a70>
   12878:	add	fp, r0, #1
   1287c:	cmp	r7, r3
   12880:	str	fp, [r4, r6, lsl #3]
   12884:	beq	12890 <close@plt+0x1a0c>
   12888:	mov	r0, r7
   1288c:	bl	13a94 <close@plt+0x2c10>
   12890:	mov	r0, fp
   12894:	bl	1339c <close@plt+0x2518>
   12898:	ldr	r3, [r5, #44]	; 0x2c
   1289c:	mov	r2, r8
   128a0:	mov	r1, fp
   128a4:	str	r0, [sl, #4]
   128a8:	str	r3, [sp, #16]
   128ac:	ldr	r3, [r5, #40]	; 0x28
   128b0:	mov	r7, r0
   128b4:	str	r3, [sp, #12]
   128b8:	add	r3, r5, #8
   128bc:	str	r3, [sp, #8]
   128c0:	ldr	r3, [sp, #28]
   128c4:	str	r3, [sp, #4]
   128c8:	ldr	r3, [r5]
   128cc:	str	r3, [sp]
   128d0:	mov	r3, r9
   128d4:	bl	11a1c <close@plt+0xb98>
   128d8:	ldr	r3, [sp, #24]
   128dc:	ldr	r2, [sp, #32]
   128e0:	mov	r0, r7
   128e4:	str	r2, [r3]
   128e8:	add	sp, sp, #52	; 0x34
   128ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128f0:	andeq	r5, r2, ip, ror #1
   128f4:	andeq	r5, r2, ip, asr r1
   128f8:	push	{r4, r5, r6, lr}
   128fc:	mov	r5, r0
   12900:	bl	10dac <__errno_location@plt>
   12904:	cmp	r5, #0
   12908:	mov	r1, #48	; 0x30
   1290c:	ldr	r6, [r0]
   12910:	mov	r4, r0
   12914:	ldr	r0, [pc, #12]	; 12928 <close@plt+0x1aa4>
   12918:	movne	r0, r5
   1291c:	bl	13778 <close@plt+0x28f4>
   12920:	str	r6, [r4]
   12924:	pop	{r4, r5, r6, pc}
   12928:	andeq	r5, r2, ip, asr r2
   1292c:	ldr	r3, [pc, #12]	; 12940 <close@plt+0x1abc>
   12930:	cmp	r0, #0
   12934:	moveq	r0, r3
   12938:	ldr	r0, [r0]
   1293c:	bx	lr
   12940:	andeq	r5, r2, ip, asr r2
   12944:	ldr	r3, [pc, #12]	; 12958 <close@plt+0x1ad4>
   12948:	cmp	r0, #0
   1294c:	moveq	r0, r3
   12950:	str	r1, [r0]
   12954:	bx	lr
   12958:	andeq	r5, r2, ip, asr r2
   1295c:	ldr	r3, [pc, #52]	; 12998 <close@plt+0x1b14>
   12960:	cmp	r0, #0
   12964:	moveq	r0, r3
   12968:	add	r3, r0, #8
   1296c:	push	{lr}		; (str lr, [sp, #-4]!)
   12970:	lsr	lr, r1, #5
   12974:	and	r1, r1, #31
   12978:	ldr	ip, [r3, lr, lsl #2]
   1297c:	lsr	r0, ip, r1
   12980:	eor	r2, r2, r0
   12984:	and	r2, r2, #1
   12988:	and	r0, r0, #1
   1298c:	eor	r1, ip, r2, lsl r1
   12990:	str	r1, [r3, lr, lsl #2]
   12994:	pop	{pc}		; (ldr pc, [sp], #4)
   12998:	andeq	r5, r2, ip, asr r2
   1299c:	ldr	r3, [pc, #16]	; 129b4 <close@plt+0x1b30>
   129a0:	cmp	r0, #0
   129a4:	movne	r3, r0
   129a8:	ldr	r0, [r3, #4]
   129ac:	str	r1, [r3, #4]
   129b0:	bx	lr
   129b4:	andeq	r5, r2, ip, asr r2
   129b8:	ldr	r3, [pc, #44]	; 129ec <close@plt+0x1b68>
   129bc:	cmp	r0, #0
   129c0:	moveq	r0, r3
   129c4:	mov	r3, #10
   129c8:	cmp	r2, #0
   129cc:	cmpne	r1, #0
   129d0:	str	r3, [r0]
   129d4:	bne	129e0 <close@plt+0x1b5c>
   129d8:	push	{r4, lr}
   129dc:	bl	10e78 <abort@plt>
   129e0:	str	r1, [r0, #40]	; 0x28
   129e4:	str	r2, [r0, #44]	; 0x2c
   129e8:	bx	lr
   129ec:	andeq	r5, r2, ip, asr r2
   129f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129f4:	sub	sp, sp, #24
   129f8:	mov	sl, r3
   129fc:	ldr	r4, [sp, #56]	; 0x38
   12a00:	ldr	r3, [pc, #100]	; 12a6c <close@plt+0x1be8>
   12a04:	cmp	r4, #0
   12a08:	moveq	r4, r3
   12a0c:	mov	r7, r0
   12a10:	mov	r8, r1
   12a14:	mov	r9, r2
   12a18:	bl	10dac <__errno_location@plt>
   12a1c:	ldr	r3, [r4, #44]	; 0x2c
   12a20:	mov	r2, r9
   12a24:	mov	r1, r8
   12a28:	ldr	r6, [r0]
   12a2c:	str	r3, [sp, #16]
   12a30:	ldr	r3, [r4, #40]	; 0x28
   12a34:	mov	r5, r0
   12a38:	str	r3, [sp, #12]
   12a3c:	add	r3, r4, #8
   12a40:	str	r3, [sp, #8]
   12a44:	ldr	r3, [r4, #4]
   12a48:	mov	r0, r7
   12a4c:	str	r3, [sp, #4]
   12a50:	ldr	r3, [r4]
   12a54:	str	r3, [sp]
   12a58:	mov	r3, sl
   12a5c:	bl	11a1c <close@plt+0xb98>
   12a60:	str	r6, [r5]
   12a64:	add	sp, sp, #24
   12a68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a6c:	andeq	r5, r2, ip, asr r2
   12a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a74:	cmp	r3, #0
   12a78:	sub	sp, sp, #44	; 0x2c
   12a7c:	ldr	r4, [pc, #188]	; 12b40 <close@plt+0x1cbc>
   12a80:	mov	r6, r2
   12a84:	movne	r4, r3
   12a88:	mov	sl, r1
   12a8c:	mov	r9, r0
   12a90:	bl	10dac <__errno_location@plt>
   12a94:	ldr	r5, [r4, #4]
   12a98:	add	fp, r4, #8
   12a9c:	cmp	r6, #0
   12aa0:	orreq	r5, r5, #1
   12aa4:	mov	r1, #0
   12aa8:	mov	r2, r9
   12aac:	ldr	r3, [r0]
   12ab0:	mov	r8, r0
   12ab4:	str	r3, [sp, #28]
   12ab8:	ldr	r3, [r4, #44]	; 0x2c
   12abc:	mov	r0, r1
   12ac0:	str	r3, [sp, #16]
   12ac4:	ldr	r3, [r4, #40]	; 0x28
   12ac8:	stmib	sp, {r5, fp}
   12acc:	str	r3, [sp, #12]
   12ad0:	ldr	r3, [r4]
   12ad4:	str	r3, [sp]
   12ad8:	mov	r3, sl
   12adc:	bl	11a1c <close@plt+0xb98>
   12ae0:	add	r1, r0, #1
   12ae4:	mov	r7, r0
   12ae8:	mov	r0, r1
   12aec:	str	r1, [sp, #36]	; 0x24
   12af0:	bl	1339c <close@plt+0x2518>
   12af4:	ldr	r3, [r4, #44]	; 0x2c
   12af8:	mov	r2, r9
   12afc:	str	r3, [sp, #16]
   12b00:	ldr	r3, [r4, #40]	; 0x28
   12b04:	stmib	sp, {r5, fp}
   12b08:	str	r3, [sp, #12]
   12b0c:	ldr	r3, [r4]
   12b10:	ldr	r1, [sp, #36]	; 0x24
   12b14:	str	r3, [sp]
   12b18:	mov	r3, sl
   12b1c:	str	r0, [sp, #32]
   12b20:	bl	11a1c <close@plt+0xb98>
   12b24:	ldr	r3, [sp, #28]
   12b28:	cmp	r6, #0
   12b2c:	str	r3, [r8]
   12b30:	ldr	r0, [sp, #32]
   12b34:	strne	r7, [r6]
   12b38:	add	sp, sp, #44	; 0x2c
   12b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b40:	andeq	r5, r2, ip, asr r2
   12b44:	mov	r3, r2
   12b48:	mov	r2, #0
   12b4c:	b	12a70 <close@plt+0x1bec>
   12b50:	push	{r4, r5, r6, r7, r8, lr}
   12b54:	mov	r6, #1
   12b58:	ldr	r4, [pc, #104]	; 12bc8 <close@plt+0x1d44>
   12b5c:	ldr	r5, [r4]
   12b60:	add	r7, r5, #12
   12b64:	ldr	r3, [r4, #4]
   12b68:	add	r7, r7, #8
   12b6c:	cmp	r6, r3
   12b70:	blt	12bb8 <close@plt+0x1d34>
   12b74:	ldr	r0, [r5, #4]
   12b78:	ldr	r6, [pc, #76]	; 12bcc <close@plt+0x1d48>
   12b7c:	cmp	r0, r6
   12b80:	beq	12b94 <close@plt+0x1d10>
   12b84:	bl	13a94 <close@plt+0x2c10>
   12b88:	mov	r3, #256	; 0x100
   12b8c:	str	r3, [r4, #8]
   12b90:	str	r6, [r4, #12]
   12b94:	ldr	r6, [pc, #52]	; 12bd0 <close@plt+0x1d4c>
   12b98:	cmp	r5, r6
   12b9c:	beq	12bac <close@plt+0x1d28>
   12ba0:	mov	r0, r5
   12ba4:	bl	13a94 <close@plt+0x2c10>
   12ba8:	str	r6, [r4]
   12bac:	mov	r3, #1
   12bb0:	str	r3, [r4, #4]
   12bb4:	pop	{r4, r5, r6, r7, r8, pc}
   12bb8:	ldr	r0, [r7, #-8]
   12bbc:	bl	13a94 <close@plt+0x2c10>
   12bc0:	add	r6, r6, #1
   12bc4:	b	12b64 <close@plt+0x1ce0>
   12bc8:	andeq	r5, r2, ip, ror #1
   12bcc:	andeq	r5, r2, ip, asr r1
   12bd0:	strdeq	r5, [r2], -r4
   12bd4:	ldr	r3, [pc, #4]	; 12be0 <close@plt+0x1d5c>
   12bd8:	mvn	r2, #0
   12bdc:	b	12750 <close@plt+0x18cc>
   12be0:	andeq	r5, r2, ip, asr r2
   12be4:	ldr	r3, [pc]	; 12bec <close@plt+0x1d68>
   12be8:	b	12750 <close@plt+0x18cc>
   12bec:	andeq	r5, r2, ip, asr r2
   12bf0:	mov	r1, r0
   12bf4:	mov	r0, #0
   12bf8:	b	12bd4 <close@plt+0x1d50>
   12bfc:	mov	r2, r1
   12c00:	mov	r1, r0
   12c04:	mov	r0, #0
   12c08:	b	12be4 <close@plt+0x1d60>
   12c0c:	push	{r4, r5, lr}
   12c10:	sub	sp, sp, #52	; 0x34
   12c14:	mov	r5, r2
   12c18:	mov	r4, r0
   12c1c:	mov	r0, sp
   12c20:	bl	118d8 <close@plt+0xa54>
   12c24:	mov	r3, sp
   12c28:	mvn	r2, #0
   12c2c:	mov	r1, r5
   12c30:	mov	r0, r4
   12c34:	bl	12750 <close@plt+0x18cc>
   12c38:	add	sp, sp, #52	; 0x34
   12c3c:	pop	{r4, r5, pc}
   12c40:	push	{r4, r5, r6, lr}
   12c44:	sub	sp, sp, #48	; 0x30
   12c48:	mov	r5, r2
   12c4c:	mov	r6, r3
   12c50:	mov	r4, r0
   12c54:	mov	r0, sp
   12c58:	bl	118d8 <close@plt+0xa54>
   12c5c:	mov	r3, sp
   12c60:	mov	r2, r6
   12c64:	mov	r1, r5
   12c68:	mov	r0, r4
   12c6c:	bl	12750 <close@plt+0x18cc>
   12c70:	add	sp, sp, #48	; 0x30
   12c74:	pop	{r4, r5, r6, pc}
   12c78:	mov	r2, r1
   12c7c:	mov	r1, r0
   12c80:	mov	r0, #0
   12c84:	b	12c0c <close@plt+0x1d88>
   12c88:	mov	r3, r2
   12c8c:	mov	r2, r1
   12c90:	mov	r1, r0
   12c94:	mov	r0, #0
   12c98:	b	12c40 <close@plt+0x1dbc>
   12c9c:	push	{r4, r5, r6, lr}
   12ca0:	mov	r4, r0
   12ca4:	ldr	lr, [pc, #80]	; 12cfc <close@plt+0x1e78>
   12ca8:	mov	r5, r1
   12cac:	mov	r6, r2
   12cb0:	ldm	lr!, {r0, r1, r2, r3}
   12cb4:	sub	sp, sp, #48	; 0x30
   12cb8:	mov	ip, sp
   12cbc:	stmia	ip!, {r0, r1, r2, r3}
   12cc0:	ldm	lr!, {r0, r1, r2, r3}
   12cc4:	stmia	ip!, {r0, r1, r2, r3}
   12cc8:	ldm	lr, {r0, r1, r2, r3}
   12ccc:	stm	ip, {r0, r1, r2, r3}
   12cd0:	mov	r1, r6
   12cd4:	mov	r2, #1
   12cd8:	mov	r0, sp
   12cdc:	bl	1295c <close@plt+0x1ad8>
   12ce0:	mov	r3, sp
   12ce4:	mov	r2, r5
   12ce8:	mov	r1, r4
   12cec:	mov	r0, #0
   12cf0:	bl	12750 <close@plt+0x18cc>
   12cf4:	add	sp, sp, #48	; 0x30
   12cf8:	pop	{r4, r5, r6, pc}
   12cfc:	andeq	r5, r2, ip, asr r2
   12d00:	mov	r2, r1
   12d04:	mvn	r1, #0
   12d08:	b	12c9c <close@plt+0x1e18>
   12d0c:	mov	r1, #58	; 0x3a
   12d10:	b	12d00 <close@plt+0x1e7c>
   12d14:	mov	r2, #58	; 0x3a
   12d18:	b	12c9c <close@plt+0x1e18>
   12d1c:	push	{r4, r5, lr}
   12d20:	sub	sp, sp, #100	; 0x64
   12d24:	mov	r4, r0
   12d28:	mov	r0, sp
   12d2c:	mov	r5, r2
   12d30:	bl	118d8 <close@plt+0xa54>
   12d34:	mov	ip, sp
   12d38:	add	lr, sp, #48	; 0x30
   12d3c:	ldm	ip!, {r0, r1, r2, r3}
   12d40:	stmia	lr!, {r0, r1, r2, r3}
   12d44:	ldm	ip!, {r0, r1, r2, r3}
   12d48:	stmia	lr!, {r0, r1, r2, r3}
   12d4c:	ldm	ip, {r0, r1, r2, r3}
   12d50:	stm	lr, {r0, r1, r2, r3}
   12d54:	mov	r2, #1
   12d58:	mov	r1, #58	; 0x3a
   12d5c:	add	r0, sp, #48	; 0x30
   12d60:	bl	1295c <close@plt+0x1ad8>
   12d64:	add	r3, sp, #48	; 0x30
   12d68:	mvn	r2, #0
   12d6c:	mov	r1, r5
   12d70:	mov	r0, r4
   12d74:	bl	12750 <close@plt+0x18cc>
   12d78:	add	sp, sp, #100	; 0x64
   12d7c:	pop	{r4, r5, pc}
   12d80:	push	{r4, r5, r6, r7, lr}
   12d84:	mov	r4, r0
   12d88:	ldr	lr, [pc, #84]	; 12de4 <close@plt+0x1f60>
   12d8c:	mov	r6, r1
   12d90:	mov	r7, r2
   12d94:	mov	r5, r3
   12d98:	ldm	lr!, {r0, r1, r2, r3}
   12d9c:	sub	sp, sp, #52	; 0x34
   12da0:	mov	ip, sp
   12da4:	stmia	ip!, {r0, r1, r2, r3}
   12da8:	ldm	lr!, {r0, r1, r2, r3}
   12dac:	stmia	ip!, {r0, r1, r2, r3}
   12db0:	ldm	lr, {r0, r1, r2, r3}
   12db4:	stm	ip, {r0, r1, r2, r3}
   12db8:	mov	r2, r7
   12dbc:	mov	r1, r6
   12dc0:	mov	r0, sp
   12dc4:	bl	129b8 <close@plt+0x1b34>
   12dc8:	mov	r3, sp
   12dcc:	ldr	r2, [sp, #72]	; 0x48
   12dd0:	mov	r1, r5
   12dd4:	mov	r0, r4
   12dd8:	bl	12750 <close@plt+0x18cc>
   12ddc:	add	sp, sp, #52	; 0x34
   12de0:	pop	{r4, r5, r6, r7, pc}
   12de4:	andeq	r5, r2, ip, asr r2
   12de8:	mvn	ip, #0
   12dec:	push	{r0, r1, r2, lr}
   12df0:	str	ip, [sp]
   12df4:	bl	12d80 <close@plt+0x1efc>
   12df8:	add	sp, sp, #12
   12dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   12e00:	mov	r3, r2
   12e04:	mov	r2, r1
   12e08:	mov	r1, r0
   12e0c:	mov	r0, #0
   12e10:	b	12de8 <close@plt+0x1f64>
   12e14:	push	{r0, r1, r2, lr}
   12e18:	str	r3, [sp]
   12e1c:	mov	r3, r2
   12e20:	mov	r2, r1
   12e24:	mov	r1, r0
   12e28:	mov	r0, #0
   12e2c:	bl	12d80 <close@plt+0x1efc>
   12e30:	add	sp, sp, #12
   12e34:	pop	{pc}		; (ldr pc, [sp], #4)
   12e38:	ldr	r3, [pc]	; 12e40 <close@plt+0x1fbc>
   12e3c:	b	12750 <close@plt+0x18cc>
   12e40:	strdeq	r5, [r2], -ip
   12e44:	mov	r2, r1
   12e48:	mov	r1, r0
   12e4c:	mov	r0, #0
   12e50:	b	12e38 <close@plt+0x1fb4>
   12e54:	mvn	r2, #0
   12e58:	b	12e38 <close@plt+0x1fb4>
   12e5c:	mov	r1, r0
   12e60:	mov	r0, #0
   12e64:	b	12e54 <close@plt+0x1fd0>
   12e68:	push	{r4, r5, r6, lr}
   12e6c:	sub	sp, sp, #32
   12e70:	cmp	r1, #0
   12e74:	mov	r5, r0
   12e78:	ldr	r4, [sp, #48]	; 0x30
   12e7c:	ldr	r6, [sp, #52]	; 0x34
   12e80:	beq	12f34 <close@plt+0x20b0>
   12e84:	stm	sp, {r2, r3}
   12e88:	mov	r3, r1
   12e8c:	ldr	r2, [pc, #860]	; 131f0 <close@plt+0x236c>
   12e90:	mov	r1, #1
   12e94:	bl	10de8 <__fprintf_chk@plt>
   12e98:	mov	r2, #5
   12e9c:	ldr	r1, [pc, #848]	; 131f4 <close@plt+0x2370>
   12ea0:	mov	r0, #0
   12ea4:	bl	10cbc <dcgettext@plt>
   12ea8:	ldr	r3, [pc, #840]	; 131f8 <close@plt+0x2374>
   12eac:	ldr	r2, [pc, #840]	; 131fc <close@plt+0x2378>
   12eb0:	str	r3, [sp]
   12eb4:	mov	r1, #1
   12eb8:	mov	r3, r0
   12ebc:	mov	r0, r5
   12ec0:	bl	10de8 <__fprintf_chk@plt>
   12ec4:	mov	r1, r5
   12ec8:	mov	r0, #10
   12ecc:	bl	10cb0 <fputc_unlocked@plt>
   12ed0:	mov	r2, #5
   12ed4:	ldr	r1, [pc, #804]	; 13200 <close@plt+0x237c>
   12ed8:	mov	r0, #0
   12edc:	bl	10cbc <dcgettext@plt>
   12ee0:	mov	r1, #1
   12ee4:	ldr	r3, [pc, #792]	; 13204 <close@plt+0x2380>
   12ee8:	mov	r2, r0
   12eec:	mov	r0, r5
   12ef0:	bl	10de8 <__fprintf_chk@plt>
   12ef4:	mov	r1, r5
   12ef8:	mov	r0, #10
   12efc:	bl	10cb0 <fputc_unlocked@plt>
   12f00:	cmp	r6, #9
   12f04:	ldrls	pc, [pc, r6, lsl #2]
   12f08:	b	131e4 <close@plt+0x2360>
   12f0c:	andeq	r3, r1, r4, lsr #32
   12f10:	andeq	r2, r1, ip, asr #30
   12f14:	andeq	r2, r1, r8, ror pc
   12f18:	andeq	r2, r1, ip, lsr #31
   12f1c:	andeq	r2, r1, r8, ror #31
   12f20:	andeq	r3, r1, ip, lsr #32
   12f24:	andeq	r3, r1, r4, ror r0
   12f28:	andeq	r3, r1, r4, asr #1
   12f2c:	andeq	r3, r1, ip, lsl r1
   12f30:	andeq	r3, r1, ip, ror r1
   12f34:	str	r3, [sp]
   12f38:	mov	r1, #1
   12f3c:	mov	r3, r2
   12f40:	ldr	r2, [pc, #704]	; 13208 <close@plt+0x2384>
   12f44:	bl	10de8 <__fprintf_chk@plt>
   12f48:	b	12e98 <close@plt+0x2014>
   12f4c:	mov	r2, #5
   12f50:	ldr	r1, [pc, #692]	; 1320c <close@plt+0x2388>
   12f54:	mov	r0, #0
   12f58:	bl	10cbc <dcgettext@plt>
   12f5c:	ldr	r3, [r4]
   12f60:	mov	r1, #1
   12f64:	mov	r2, r0
   12f68:	mov	r0, r5
   12f6c:	add	sp, sp, #32
   12f70:	pop	{r4, r5, r6, lr}
   12f74:	b	10de8 <__fprintf_chk@plt>
   12f78:	mov	r2, #5
   12f7c:	ldr	r1, [pc, #652]	; 13210 <close@plt+0x238c>
   12f80:	mov	r0, #0
   12f84:	bl	10cbc <dcgettext@plt>
   12f88:	ldr	r3, [r4, #4]
   12f8c:	mov	r1, #1
   12f90:	str	r3, [sp, #48]	; 0x30
   12f94:	ldr	r3, [r4]
   12f98:	mov	r2, r0
   12f9c:	mov	r0, r5
   12fa0:	add	sp, sp, #32
   12fa4:	pop	{r4, r5, r6, lr}
   12fa8:	b	10de8 <__fprintf_chk@plt>
   12fac:	mov	r2, #5
   12fb0:	ldr	r1, [pc, #604]	; 13214 <close@plt+0x2390>
   12fb4:	mov	r0, #0
   12fb8:	bl	10cbc <dcgettext@plt>
   12fbc:	ldr	r3, [r4, #8]
   12fc0:	mov	r1, #1
   12fc4:	str	r3, [sp, #52]	; 0x34
   12fc8:	ldr	r3, [r4, #4]
   12fcc:	str	r3, [sp, #48]	; 0x30
   12fd0:	ldr	r3, [r4]
   12fd4:	mov	r2, r0
   12fd8:	mov	r0, r5
   12fdc:	add	sp, sp, #32
   12fe0:	pop	{r4, r5, r6, lr}
   12fe4:	b	10de8 <__fprintf_chk@plt>
   12fe8:	mov	r2, #5
   12fec:	ldr	r1, [pc, #548]	; 13218 <close@plt+0x2394>
   12ff0:	mov	r0, #0
   12ff4:	bl	10cbc <dcgettext@plt>
   12ff8:	ldr	r3, [r4, #12]
   12ffc:	mov	r1, #1
   13000:	str	r3, [sp, #8]
   13004:	ldr	r3, [r4, #8]
   13008:	str	r3, [sp, #4]
   1300c:	ldr	r3, [r4, #4]
   13010:	str	r3, [sp]
   13014:	ldr	r3, [r4]
   13018:	mov	r2, r0
   1301c:	mov	r0, r5
   13020:	bl	10de8 <__fprintf_chk@plt>
   13024:	add	sp, sp, #32
   13028:	pop	{r4, r5, r6, pc}
   1302c:	mov	r2, #5
   13030:	ldr	r1, [pc, #484]	; 1321c <close@plt+0x2398>
   13034:	mov	r0, #0
   13038:	bl	10cbc <dcgettext@plt>
   1303c:	ldr	r3, [r4, #16]
   13040:	mov	r1, #1
   13044:	str	r3, [sp, #12]
   13048:	ldr	r3, [r4, #12]
   1304c:	str	r3, [sp, #8]
   13050:	ldr	r3, [r4, #8]
   13054:	str	r3, [sp, #4]
   13058:	ldr	r3, [r4, #4]
   1305c:	str	r3, [sp]
   13060:	ldr	r3, [r4]
   13064:	mov	r2, r0
   13068:	mov	r0, r5
   1306c:	bl	10de8 <__fprintf_chk@plt>
   13070:	b	13024 <close@plt+0x21a0>
   13074:	mov	r2, #5
   13078:	ldr	r1, [pc, #416]	; 13220 <close@plt+0x239c>
   1307c:	mov	r0, #0
   13080:	bl	10cbc <dcgettext@plt>
   13084:	ldr	r3, [r4, #20]
   13088:	mov	r1, #1
   1308c:	str	r3, [sp, #16]
   13090:	ldr	r3, [r4, #16]
   13094:	str	r3, [sp, #12]
   13098:	ldr	r3, [r4, #12]
   1309c:	str	r3, [sp, #8]
   130a0:	ldr	r3, [r4, #8]
   130a4:	str	r3, [sp, #4]
   130a8:	ldr	r3, [r4, #4]
   130ac:	str	r3, [sp]
   130b0:	ldr	r3, [r4]
   130b4:	mov	r2, r0
   130b8:	mov	r0, r5
   130bc:	bl	10de8 <__fprintf_chk@plt>
   130c0:	b	13024 <close@plt+0x21a0>
   130c4:	mov	r2, #5
   130c8:	ldr	r1, [pc, #340]	; 13224 <close@plt+0x23a0>
   130cc:	mov	r0, #0
   130d0:	bl	10cbc <dcgettext@plt>
   130d4:	ldr	r3, [r4, #24]
   130d8:	mov	r1, #1
   130dc:	str	r3, [sp, #20]
   130e0:	ldr	r3, [r4, #20]
   130e4:	str	r3, [sp, #16]
   130e8:	ldr	r3, [r4, #16]
   130ec:	str	r3, [sp, #12]
   130f0:	ldr	r3, [r4, #12]
   130f4:	str	r3, [sp, #8]
   130f8:	ldr	r3, [r4, #8]
   130fc:	str	r3, [sp, #4]
   13100:	ldr	r3, [r4, #4]
   13104:	str	r3, [sp]
   13108:	ldr	r3, [r4]
   1310c:	mov	r2, r0
   13110:	mov	r0, r5
   13114:	bl	10de8 <__fprintf_chk@plt>
   13118:	b	13024 <close@plt+0x21a0>
   1311c:	mov	r2, #5
   13120:	ldr	r1, [pc, #256]	; 13228 <close@plt+0x23a4>
   13124:	mov	r0, #0
   13128:	bl	10cbc <dcgettext@plt>
   1312c:	ldr	r3, [r4, #28]
   13130:	mov	r1, #1
   13134:	str	r3, [sp, #24]
   13138:	ldr	r3, [r4, #24]
   1313c:	str	r3, [sp, #20]
   13140:	ldr	r3, [r4, #20]
   13144:	str	r3, [sp, #16]
   13148:	ldr	r3, [r4, #16]
   1314c:	str	r3, [sp, #12]
   13150:	ldr	r3, [r4, #12]
   13154:	str	r3, [sp, #8]
   13158:	ldr	r3, [r4, #8]
   1315c:	str	r3, [sp, #4]
   13160:	ldr	r3, [r4, #4]
   13164:	str	r3, [sp]
   13168:	ldr	r3, [r4]
   1316c:	mov	r2, r0
   13170:	mov	r0, r5
   13174:	bl	10de8 <__fprintf_chk@plt>
   13178:	b	13024 <close@plt+0x21a0>
   1317c:	ldr	r1, [pc, #168]	; 1322c <close@plt+0x23a8>
   13180:	mov	r2, #5
   13184:	mov	r0, #0
   13188:	bl	10cbc <dcgettext@plt>
   1318c:	ldr	r3, [r4, #32]
   13190:	mov	r1, #1
   13194:	str	r3, [sp, #28]
   13198:	ldr	r3, [r4, #28]
   1319c:	str	r3, [sp, #24]
   131a0:	ldr	r3, [r4, #24]
   131a4:	str	r3, [sp, #20]
   131a8:	ldr	r3, [r4, #20]
   131ac:	str	r3, [sp, #16]
   131b0:	ldr	r3, [r4, #16]
   131b4:	str	r3, [sp, #12]
   131b8:	ldr	r3, [r4, #12]
   131bc:	str	r3, [sp, #8]
   131c0:	ldr	r3, [r4, #8]
   131c4:	str	r3, [sp, #4]
   131c8:	ldr	r3, [r4, #4]
   131cc:	str	r3, [sp]
   131d0:	ldr	r3, [r4]
   131d4:	mov	r2, r0
   131d8:	mov	r0, r5
   131dc:	bl	10de8 <__fprintf_chk@plt>
   131e0:	b	13024 <close@plt+0x21a0>
   131e4:	mov	r2, #5
   131e8:	ldr	r1, [pc, #64]	; 13230 <close@plt+0x23ac>
   131ec:	b	13184 <close@plt+0x2300>
   131f0:			; <UNDEFINED> instruction: 0x000147b1
   131f4:	andeq	r4, r1, r4, asr #15
   131f8:	andeq	r0, r0, r6, ror #15
   131fc:	muleq	r1, r2, sl
   13200:	andeq	r4, r1, r8, asr #15
   13204:	andeq	r4, r1, r3, ror r8
   13208:			; <UNDEFINED> instruction: 0x000147bd
   1320c:	muleq	r1, r5, r8
   13210:	andeq	r4, r1, r5, lsr #17
   13214:			; <UNDEFINED> instruction: 0x000148bc
   13218:	ldrdeq	r4, [r1], -r8
   1321c:	strdeq	r4, [r1], -r8
   13220:	andeq	r4, r1, ip, lsl r9
   13224:	andeq	r4, r1, r4, asr #18
   13228:	andeq	r4, r1, r0, ror r9
   1322c:	andeq	r4, r1, r0, lsr #19
   13230:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13234:	push	{r0, r1, r4, lr}
   13238:	mov	ip, #0
   1323c:	ldr	lr, [sp, #16]
   13240:	ldr	r4, [lr, ip, lsl #2]
   13244:	cmp	r4, #0
   13248:	bne	13260 <close@plt+0x23dc>
   1324c:	str	ip, [sp, #4]
   13250:	str	lr, [sp]
   13254:	bl	12e68 <close@plt+0x1fe4>
   13258:	add	sp, sp, #8
   1325c:	pop	{r4, pc}
   13260:	add	ip, ip, #1
   13264:	b	13240 <close@plt+0x23bc>
   13268:	push	{r4, r5, lr}
   1326c:	sub	sp, sp, #52	; 0x34
   13270:	mov	ip, #0
   13274:	ldr	r5, [sp, #64]	; 0x40
   13278:	add	lr, sp, #8
   1327c:	ldr	r4, [r5, ip, lsl #2]
   13280:	cmp	r4, #0
   13284:	str	r4, [lr, ip, lsl #2]
   13288:	beq	13298 <close@plt+0x2414>
   1328c:	add	ip, ip, #1
   13290:	cmp	ip, #10
   13294:	bne	1327c <close@plt+0x23f8>
   13298:	str	ip, [sp, #4]
   1329c:	str	lr, [sp]
   132a0:	bl	12e68 <close@plt+0x1fe4>
   132a4:	add	sp, sp, #52	; 0x34
   132a8:	pop	{r4, r5, pc}
   132ac:	push	{r3}		; (str r3, [sp, #-4]!)
   132b0:	push	{r0, r1, r2, r3, lr}
   132b4:	add	r3, sp, #24
   132b8:	str	r3, [sp, #12]
   132bc:	str	r3, [sp]
   132c0:	ldr	r3, [sp, #20]
   132c4:	bl	13268 <close@plt+0x23e4>
   132c8:	add	sp, sp, #16
   132cc:	pop	{lr}		; (ldr lr, [sp], #4)
   132d0:	add	sp, sp, #4
   132d4:	bx	lr
   132d8:	ldr	r3, [pc, #116]	; 13354 <close@plt+0x24d0>
   132dc:	push	{r4, lr}
   132e0:	mov	r0, #10
   132e4:	ldr	r1, [r3]
   132e8:	bl	10cb0 <fputc_unlocked@plt>
   132ec:	mov	r2, #5
   132f0:	ldr	r1, [pc, #96]	; 13358 <close@plt+0x24d4>
   132f4:	mov	r0, #0
   132f8:	bl	10cbc <dcgettext@plt>
   132fc:	ldr	r2, [pc, #88]	; 1335c <close@plt+0x24d8>
   13300:	mov	r1, r0
   13304:	mov	r0, #1
   13308:	bl	10dd0 <__printf_chk@plt>
   1330c:	mov	r2, #5
   13310:	ldr	r1, [pc, #72]	; 13360 <close@plt+0x24dc>
   13314:	mov	r0, #0
   13318:	bl	10cbc <dcgettext@plt>
   1331c:	ldr	r3, [pc, #64]	; 13364 <close@plt+0x24e0>
   13320:	ldr	r2, [pc, #64]	; 13368 <close@plt+0x24e4>
   13324:	mov	r1, r0
   13328:	mov	r0, #1
   1332c:	bl	10dd0 <__printf_chk@plt>
   13330:	mov	r2, #5
   13334:	ldr	r1, [pc, #48]	; 1336c <close@plt+0x24e8>
   13338:	mov	r0, #0
   1333c:	bl	10cbc <dcgettext@plt>
   13340:	ldr	r2, [pc, #40]	; 13370 <close@plt+0x24ec>
   13344:	pop	{r4, lr}
   13348:	mov	r1, r0
   1334c:	mov	r0, #1
   13350:	b	10dd0 <__printf_chk@plt>
   13354:	andeq	r5, r2, r4, asr #2
   13358:	andeq	r4, r1, r0, lsl sl
   1335c:	andeq	r4, r1, r4, lsr #20
   13360:	andeq	r4, r1, sl, lsr sl
   13364:	andeq	r4, r1, r0, ror r4
   13368:	muleq	r1, r8, r4
   1336c:	andeq	r4, r1, lr, asr #20
   13370:	andeq	r4, r1, r5, ror sl
   13374:	push	{r4, lr}
   13378:	bl	13890 <close@plt+0x2a0c>
   1337c:	cmp	r0, #0
   13380:	popne	{r4, pc}
   13384:	bl	13808 <close@plt+0x2984>
   13388:	push	{r4, lr}
   1338c:	bl	13890 <close@plt+0x2a0c>
   13390:	cmp	r0, #0
   13394:	popne	{r4, pc}
   13398:	bl	13808 <close@plt+0x2984>
   1339c:	b	13374 <close@plt+0x24f0>
   133a0:	push	{r4, r5, r6, lr}
   133a4:	mov	r5, r0
   133a8:	mov	r4, r1
   133ac:	bl	138d0 <close@plt+0x2a4c>
   133b0:	cmp	r0, #0
   133b4:	popne	{r4, r5, r6, pc}
   133b8:	adds	r4, r4, #0
   133bc:	movne	r4, #1
   133c0:	cmp	r5, #0
   133c4:	orreq	r4, r4, #1
   133c8:	cmp	r4, #0
   133cc:	popeq	{r4, r5, r6, pc}
   133d0:	bl	13808 <close@plt+0x2984>
   133d4:	push	{r4, lr}
   133d8:	cmp	r1, #0
   133dc:	orreq	r1, r1, #1
   133e0:	bl	138d0 <close@plt+0x2a4c>
   133e4:	cmp	r0, #0
   133e8:	popne	{r4, pc}
   133ec:	bl	13808 <close@plt+0x2984>
   133f0:	push	{r4, r5, r6, lr}
   133f4:	mov	r6, r0
   133f8:	mov	r5, r1
   133fc:	mov	r4, r2
   13400:	bl	13c00 <close@plt+0x2d7c>
   13404:	cmp	r0, #0
   13408:	popne	{r4, r5, r6, pc}
   1340c:	cmp	r6, #0
   13410:	beq	13420 <close@plt+0x259c>
   13414:	cmp	r5, #0
   13418:	cmpne	r4, #0
   1341c:	popeq	{r4, r5, r6, pc}
   13420:	bl	13808 <close@plt+0x2984>
   13424:	b	133f0 <close@plt+0x256c>
   13428:	cmp	r2, #0
   1342c:	cmpne	r1, #0
   13430:	moveq	r2, #1
   13434:	moveq	r1, r2
   13438:	push	{r4, lr}
   1343c:	bl	13c00 <close@plt+0x2d7c>
   13440:	cmp	r0, #0
   13444:	popne	{r4, pc}
   13448:	bl	13808 <close@plt+0x2984>
   1344c:	mov	r2, r1
   13450:	mov	r1, r0
   13454:	mov	r0, #0
   13458:	b	133f0 <close@plt+0x256c>
   1345c:	mov	r2, r1
   13460:	mov	r1, r0
   13464:	mov	r0, #0
   13468:	b	13428 <close@plt+0x25a4>
   1346c:	push	{r4, r5, r6, r7, r8, lr}
   13470:	subs	r7, r0, #0
   13474:	mov	r5, r1
   13478:	mov	r6, r2
   1347c:	ldr	r4, [r1]
   13480:	bne	134bc <close@plt+0x2638>
   13484:	cmp	r4, #0
   13488:	bne	134a4 <close@plt+0x2620>
   1348c:	mov	r1, r2
   13490:	mov	r0, #64	; 0x40
   13494:	bl	13d2c <close@plt+0x2ea8>
   13498:	cmp	r0, #0
   1349c:	movne	r4, r0
   134a0:	addeq	r4, r0, #1
   134a4:	mov	r2, r6
   134a8:	mov	r1, r4
   134ac:	mov	r0, r7
   134b0:	bl	133f0 <close@plt+0x256c>
   134b4:	str	r4, [r5]
   134b8:	pop	{r4, r5, r6, r7, r8, pc}
   134bc:	lsr	r2, r4, #1
   134c0:	add	r3, r2, #1
   134c4:	mvn	r3, r3
   134c8:	cmp	r4, r3
   134cc:	addls	r4, r4, #1
   134d0:	addls	r4, r4, r2
   134d4:	bls	134a4 <close@plt+0x2620>
   134d8:	bl	13808 <close@plt+0x2984>
   134dc:	mov	r2, #1
   134e0:	b	1346c <close@plt+0x25e8>
   134e4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134e8:	mov	sl, r0
   134ec:	ldr	r8, [r1]
   134f0:	mov	fp, r1
   134f4:	mov	r5, r2
   134f8:	asrs	r4, r8, #1
   134fc:	mov	r9, r3
   13500:	ldr	r7, [sp, #48]	; 0x30
   13504:	bpl	135a0 <close@plt+0x271c>
   13508:	rsb	r2, r4, #-2147483648	; 0x80000000
   1350c:	cmp	r8, r2
   13510:	movge	r2, #0
   13514:	movlt	r2, #1
   13518:	mvn	r3, r9
   1351c:	cmp	r2, #0
   13520:	lsr	r3, r3, #31
   13524:	addeq	r4, r4, r8
   13528:	mvnne	r4, #-2147483648	; 0x80000000
   1352c:	mov	r0, r3
   13530:	cmp	r9, r4
   13534:	movge	r0, #0
   13538:	andlt	r0, r0, #1
   1353c:	cmp	r0, #0
   13540:	str	r3, [sp, #4]
   13544:	bne	13714 <close@plt+0x2890>
   13548:	cmp	r7, #0
   1354c:	bge	13660 <close@plt+0x27dc>
   13550:	cmp	r4, #0
   13554:	bge	135b8 <close@plt+0x2734>
   13558:	mov	r1, r7
   1355c:	mvn	r0, #-2147483648	; 0x80000000
   13560:	bl	13f38 <close@plt+0x30b4>
   13564:	cmp	r0, r4
   13568:	movle	r0, #0
   1356c:	movgt	r0, #1
   13570:	cmp	r0, #0
   13574:	mvnne	r6, #-2147483648	; 0x80000000
   13578:	beq	135c8 <close@plt+0x2744>
   1357c:	mov	r1, r7
   13580:	mov	r0, r6
   13584:	bl	13f38 <close@plt+0x30b4>
   13588:	mov	r1, r7
   1358c:	mov	r4, r0
   13590:	mov	r0, r6
   13594:	bl	14158 <close@plt+0x32d4>
   13598:	sub	r1, r6, r1
   1359c:	b	135d8 <close@plt+0x2754>
   135a0:	mvn	r2, #-2147483648	; 0x80000000
   135a4:	sub	r2, r2, r4
   135a8:	cmp	r8, r2
   135ac:	movle	r2, #0
   135b0:	movgt	r2, #1
   135b4:	b	13518 <close@plt+0x2694>
   135b8:	cmn	r7, #1
   135bc:	movne	r1, r7
   135c0:	movne	r0, #-2147483648	; 0x80000000
   135c4:	bne	1372c <close@plt+0x28a8>
   135c8:	mul	r1, r7, r4
   135cc:	cmp	r1, #63	; 0x3f
   135d0:	movle	r6, #64	; 0x40
   135d4:	ble	1357c <close@plt+0x26f8>
   135d8:	cmp	sl, #0
   135dc:	sub	r2, r4, r8
   135e0:	streq	sl, [fp]
   135e4:	cmp	r2, r5
   135e8:	bge	136bc <close@plt+0x2838>
   135ec:	cmp	r5, #0
   135f0:	bge	13688 <close@plt+0x2804>
   135f4:	rsb	r2, r5, #-2147483648	; 0x80000000
   135f8:	cmp	r8, r2
   135fc:	movge	r2, #0
   13600:	movlt	r2, #1
   13604:	cmp	r2, #0
   13608:	bne	1365c <close@plt+0x27d8>
   1360c:	ldr	r0, [sp, #4]
   13610:	add	r5, r8, r5
   13614:	cmp	r9, r5
   13618:	movge	r0, #0
   1361c:	andlt	r0, r0, #1
   13620:	cmp	r0, #0
   13624:	mov	r4, r5
   13628:	bne	1365c <close@plt+0x27d8>
   1362c:	cmp	r7, #0
   13630:	bge	136d0 <close@plt+0x284c>
   13634:	cmp	r5, #0
   13638:	bge	136a8 <close@plt+0x2824>
   1363c:	mov	r1, r7
   13640:	mvn	r0, #-2147483648	; 0x80000000
   13644:	bl	13f38 <close@plt+0x30b4>
   13648:	cmp	r5, r0
   1364c:	movge	r0, #0
   13650:	movlt	r0, #1
   13654:	cmp	r0, #0
   13658:	beq	136b8 <close@plt+0x2834>
   1365c:	bl	13808 <close@plt+0x2984>
   13660:	beq	135c8 <close@plt+0x2744>
   13664:	cmp	r4, #0
   13668:	bge	13724 <close@plt+0x28a0>
   1366c:	cmn	r4, #1
   13670:	beq	135c8 <close@plt+0x2744>
   13674:	mov	r1, r4
   13678:	mov	r0, #-2147483648	; 0x80000000
   1367c:	bl	13f38 <close@plt+0x30b4>
   13680:	cmp	r7, r0
   13684:	b	13568 <close@plt+0x26e4>
   13688:	cmp	r8, #0
   1368c:	blt	1360c <close@plt+0x2788>
   13690:	mvn	r2, #-2147483648	; 0x80000000
   13694:	sub	r2, r2, r5
   13698:	cmp	r8, r2
   1369c:	movle	r2, #0
   136a0:	movgt	r2, #1
   136a4:	b	13604 <close@plt+0x2780>
   136a8:	cmn	r7, #1
   136ac:	movne	r1, r7
   136b0:	movne	r0, #-2147483648	; 0x80000000
   136b4:	bne	13708 <close@plt+0x2884>
   136b8:	mul	r1, r5, r7
   136bc:	mov	r0, sl
   136c0:	bl	133a0 <close@plt+0x251c>
   136c4:	str	r4, [fp]
   136c8:	add	sp, sp, #12
   136cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136d0:	beq	136b8 <close@plt+0x2834>
   136d4:	cmp	r5, #0
   136d8:	movge	r1, r7
   136dc:	mvnge	r0, #-2147483648	; 0x80000000
   136e0:	bge	13708 <close@plt+0x2884>
   136e4:	cmn	r5, #1
   136e8:	beq	136b8 <close@plt+0x2834>
   136ec:	mov	r1, r5
   136f0:	mov	r0, #-2147483648	; 0x80000000
   136f4:	bl	13f38 <close@plt+0x30b4>
   136f8:	cmp	r7, r0
   136fc:	movle	r0, #0
   13700:	movgt	r0, #1
   13704:	b	13654 <close@plt+0x27d0>
   13708:	bl	13f38 <close@plt+0x30b4>
   1370c:	cmp	r5, r0
   13710:	b	136fc <close@plt+0x2878>
   13714:	cmp	r7, #0
   13718:	mov	r4, r9
   1371c:	blt	135b8 <close@plt+0x2734>
   13720:	beq	135c8 <close@plt+0x2744>
   13724:	mov	r1, r7
   13728:	mvn	r0, #-2147483648	; 0x80000000
   1372c:	bl	13f38 <close@plt+0x30b4>
   13730:	cmp	r0, r4
   13734:	movge	r0, #0
   13738:	movlt	r0, #1
   1373c:	b	13570 <close@plt+0x26ec>
   13740:	push	{r4, lr}
   13744:	bl	13848 <close@plt+0x29c4>
   13748:	cmp	r0, #0
   1374c:	popne	{r4, pc}
   13750:	bl	13808 <close@plt+0x2984>
   13754:	mov	r1, #1
   13758:	b	13740 <close@plt+0x28bc>
   1375c:	push	{r4, lr}
   13760:	bl	13848 <close@plt+0x29c4>
   13764:	cmp	r0, #0
   13768:	popne	{r4, pc}
   1376c:	bl	13808 <close@plt+0x2984>
   13770:	mov	r1, #1
   13774:	b	1375c <close@plt+0x28d8>
   13778:	push	{r4, r5, r6, lr}
   1377c:	mov	r4, r1
   13780:	mov	r5, r0
   13784:	mov	r0, r1
   13788:	bl	13374 <close@plt+0x24f0>
   1378c:	mov	r2, r4
   13790:	mov	r1, r5
   13794:	pop	{r4, r5, r6, lr}
   13798:	b	10c8c <memcpy@plt>
   1379c:	push	{r4, r5, r6, lr}
   137a0:	mov	r4, r1
   137a4:	mov	r5, r0
   137a8:	mov	r0, r1
   137ac:	bl	13388 <close@plt+0x2504>
   137b0:	mov	r2, r4
   137b4:	mov	r1, r5
   137b8:	pop	{r4, r5, r6, lr}
   137bc:	b	10c8c <memcpy@plt>
   137c0:	push	{r4, r5, r6, lr}
   137c4:	mov	r5, r0
   137c8:	add	r0, r1, #1
   137cc:	mov	r4, r1
   137d0:	bl	13388 <close@plt+0x2504>
   137d4:	mov	r2, #0
   137d8:	mov	r1, r5
   137dc:	strb	r2, [r0, r4]
   137e0:	mov	r2, r4
   137e4:	pop	{r4, r5, r6, lr}
   137e8:	b	10c8c <memcpy@plt>
   137ec:	push	{r4, lr}
   137f0:	mov	r4, r0
   137f4:	bl	10da0 <strlen@plt>
   137f8:	add	r1, r0, #1
   137fc:	mov	r0, r4
   13800:	pop	{r4, lr}
   13804:	b	13778 <close@plt+0x28f4>
   13808:	ldr	r3, [pc, #44]	; 1383c <close@plt+0x29b8>
   1380c:	push	{r4, lr}
   13810:	mov	r2, #5
   13814:	ldr	r1, [pc, #36]	; 13840 <close@plt+0x29bc>
   13818:	mov	r0, #0
   1381c:	ldr	r4, [r3]
   13820:	bl	10cbc <dcgettext@plt>
   13824:	ldr	r2, [pc, #24]	; 13844 <close@plt+0x29c0>
   13828:	mov	r1, #0
   1382c:	mov	r3, r0
   13830:	mov	r0, r4
   13834:	bl	10d34 <error@plt>
   13838:	bl	10e78 <abort@plt>
   1383c:	andeq	r5, r2, r8, ror #1
   13840:	andeq	r4, r1, r1, asr #21
   13844:			; <UNDEFINED> instruction: 0x000146b2
   13848:	cmp	r1, #0
   1384c:	cmpne	r0, #0
   13850:	moveq	r1, #1
   13854:	moveq	r0, r1
   13858:	umull	r2, r3, r0, r1
   1385c:	adds	r3, r3, #0
   13860:	movne	r3, #1
   13864:	cmp	r2, #0
   13868:	blt	13878 <close@plt+0x29f4>
   1386c:	cmp	r3, #0
   13870:	bne	13878 <close@plt+0x29f4>
   13874:	b	10c2c <calloc@plt>
   13878:	push	{r4, lr}
   1387c:	bl	10dac <__errno_location@plt>
   13880:	mov	r3, #12
   13884:	str	r3, [r0]
   13888:	mov	r0, #0
   1388c:	pop	{r4, pc}
   13890:	cmp	r0, #0
   13894:	mov	r3, #0
   13898:	moveq	r0, #1
   1389c:	adds	r3, r3, #0
   138a0:	movne	r3, #1
   138a4:	cmp	r0, #0
   138a8:	blt	138b8 <close@plt+0x2a34>
   138ac:	cmp	r3, #0
   138b0:	bne	138b8 <close@plt+0x2a34>
   138b4:	b	10d4c <malloc@plt>
   138b8:	push	{r4, lr}
   138bc:	bl	10dac <__errno_location@plt>
   138c0:	mov	r3, #12
   138c4:	str	r3, [r0]
   138c8:	mov	r0, #0
   138cc:	pop	{r4, pc}
   138d0:	cmp	r0, #0
   138d4:	push	{r4, lr}
   138d8:	mov	r4, r1
   138dc:	bne	138ec <close@plt+0x2a68>
   138e0:	mov	r0, r1
   138e4:	pop	{r4, lr}
   138e8:	b	13890 <close@plt+0x2a0c>
   138ec:	cmp	r1, #0
   138f0:	bne	13900 <close@plt+0x2a7c>
   138f4:	bl	13a94 <close@plt+0x2c10>
   138f8:	mov	r0, #0
   138fc:	pop	{r4, pc}
   13900:	cmp	r1, #0
   13904:	blt	13914 <close@plt+0x2a90>
   13908:	mov	r3, #0
   1390c:	cmp	r3, r3
   13910:	beq	13924 <close@plt+0x2aa0>
   13914:	bl	10dac <__errno_location@plt>
   13918:	mov	r3, #12
   1391c:	str	r3, [r0]
   13920:	b	138f8 <close@plt+0x2a74>
   13924:	pop	{r4, lr}
   13928:	b	10cd4 <realloc@plt>
   1392c:	push	{r4, r5, r6, lr}
   13930:	mov	r4, r0
   13934:	bl	10d10 <__fpending@plt>
   13938:	mov	r5, r0
   1393c:	mov	r0, r4
   13940:	bl	10d1c <ferror_unlocked@plt>
   13944:	mov	r6, r0
   13948:	mov	r0, r4
   1394c:	bl	1399c <close@plt+0x2b18>
   13950:	cmp	r6, #0
   13954:	mov	r4, r0
   13958:	bne	13984 <close@plt+0x2b00>
   1395c:	cmp	r0, #0
   13960:	beq	1397c <close@plt+0x2af8>
   13964:	cmp	r5, #0
   13968:	bne	13994 <close@plt+0x2b10>
   1396c:	bl	10dac <__errno_location@plt>
   13970:	ldr	r4, [r0]
   13974:	subs	r4, r4, #9
   13978:	mvnne	r4, #0
   1397c:	mov	r0, r4
   13980:	pop	{r4, r5, r6, pc}
   13984:	cmp	r0, #0
   13988:	bne	13994 <close@plt+0x2b10>
   1398c:	bl	10dac <__errno_location@plt>
   13990:	str	r4, [r0]
   13994:	mvn	r4, #0
   13998:	b	1397c <close@plt+0x2af8>
   1399c:	push	{r0, r1, r2, r4, r5, lr}
   139a0:	mov	r4, r0
   139a4:	bl	10ddc <fileno@plt>
   139a8:	cmp	r0, #0
   139ac:	mov	r0, r4
   139b0:	bge	139c0 <close@plt+0x2b3c>
   139b4:	add	sp, sp, #12
   139b8:	pop	{r4, r5, lr}
   139bc:	b	10df4 <fclose@plt>
   139c0:	bl	10d64 <__freading@plt>
   139c4:	cmp	r0, #0
   139c8:	bne	13a04 <close@plt+0x2b80>
   139cc:	mov	r0, r4
   139d0:	bl	13a44 <close@plt+0x2bc0>
   139d4:	cmp	r0, #0
   139d8:	bne	13a38 <close@plt+0x2bb4>
   139dc:	mov	r5, #0
   139e0:	mov	r0, r4
   139e4:	bl	10df4 <fclose@plt>
   139e8:	cmp	r5, #0
   139ec:	beq	139fc <close@plt+0x2b78>
   139f0:	bl	10dac <__errno_location@plt>
   139f4:	str	r5, [r0]
   139f8:	mvn	r0, #0
   139fc:	add	sp, sp, #12
   13a00:	pop	{r4, r5, pc}
   13a04:	mov	r0, r4
   13a08:	bl	10ddc <fileno@plt>
   13a0c:	mov	r3, #1
   13a10:	str	r3, [sp]
   13a14:	mov	r2, #0
   13a18:	mov	r3, #0
   13a1c:	bl	10cf8 <lseek64@plt>
   13a20:	mvn	r3, #0
   13a24:	mvn	r2, #0
   13a28:	cmp	r1, r3
   13a2c:	cmpeq	r0, r2
   13a30:	bne	139cc <close@plt+0x2b48>
   13a34:	b	139dc <close@plt+0x2b58>
   13a38:	bl	10dac <__errno_location@plt>
   13a3c:	ldr	r5, [r0]
   13a40:	b	139e0 <close@plt+0x2b5c>
   13a44:	push	{r0, r1, r4, lr}
   13a48:	subs	r4, r0, #0
   13a4c:	bne	13a60 <close@plt+0x2bdc>
   13a50:	mov	r0, r4
   13a54:	add	sp, sp, #8
   13a58:	pop	{r4, lr}
   13a5c:	b	10c68 <fflush@plt>
   13a60:	bl	10d64 <__freading@plt>
   13a64:	cmp	r0, #0
   13a68:	beq	13a50 <close@plt+0x2bcc>
   13a6c:	ldr	r3, [r4]
   13a70:	tst	r3, #256	; 0x100
   13a74:	beq	13a50 <close@plt+0x2bcc>
   13a78:	mov	r3, #1
   13a7c:	str	r3, [sp]
   13a80:	mov	r2, #0
   13a84:	mov	r3, #0
   13a88:	mov	r0, r4
   13a8c:	bl	13ae8 <close@plt+0x2c64>
   13a90:	b	13a50 <close@plt+0x2bcc>
   13a94:	push	{r0, r1, r2, r4, r5, lr}
   13a98:	mov	r5, r0
   13a9c:	bl	10dac <__errno_location@plt>
   13aa0:	ldr	r3, [r0]
   13aa4:	mov	r4, r0
   13aa8:	str	r3, [sp]
   13aac:	str	r3, [sp, #4]
   13ab0:	mov	r3, #0
   13ab4:	str	r3, [r0]
   13ab8:	mov	r0, r5
   13abc:	bl	10c74 <free@plt>
   13ac0:	ldr	r3, [r4]
   13ac4:	add	r2, sp, #8
   13ac8:	cmp	r3, #0
   13acc:	moveq	r3, #4
   13ad0:	movne	r3, #0
   13ad4:	add	r3, r2, r3
   13ad8:	ldr	r3, [r3, #-8]
   13adc:	str	r3, [r4]
   13ae0:	add	sp, sp, #12
   13ae4:	pop	{r4, r5, pc}
   13ae8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13aec:	mov	r4, r0
   13af0:	ldmib	r0, {ip, lr}
   13af4:	ldr	r8, [sp, #32]
   13af8:	cmp	lr, ip
   13afc:	bne	13b68 <close@plt+0x2ce4>
   13b00:	ldr	lr, [r0, #20]
   13b04:	ldr	ip, [r0, #16]
   13b08:	cmp	lr, ip
   13b0c:	bne	13b68 <close@plt+0x2ce4>
   13b10:	ldr	r5, [r0, #36]	; 0x24
   13b14:	cmp	r5, #0
   13b18:	bne	13b68 <close@plt+0x2ce4>
   13b1c:	mov	r6, r2
   13b20:	mov	r7, r3
   13b24:	bl	10ddc <fileno@plt>
   13b28:	mov	r2, r6
   13b2c:	mov	r3, r7
   13b30:	str	r8, [sp]
   13b34:	bl	10cf8 <lseek64@plt>
   13b38:	mvn	r3, #0
   13b3c:	mvn	r2, #0
   13b40:	cmp	r1, r3
   13b44:	cmpeq	r0, r2
   13b48:	mvneq	r0, #0
   13b4c:	ldrne	r3, [r4]
   13b50:	strdne	r0, [r4, #80]	; 0x50
   13b54:	movne	r0, r5
   13b58:	bicne	r3, r3, #16
   13b5c:	strne	r3, [r4]
   13b60:	add	sp, sp, #8
   13b64:	pop	{r4, r5, r6, r7, r8, pc}
   13b68:	str	r8, [sp, #32]
   13b6c:	mov	r0, r4
   13b70:	add	sp, sp, #8
   13b74:	pop	{r4, r5, r6, r7, r8, lr}
   13b78:	b	10e00 <fseeko64@plt>
   13b7c:	push	{r4, lr}
   13b80:	mov	r0, #14
   13b84:	bl	10e30 <nl_langinfo@plt>
   13b88:	ldr	r3, [pc, #24]	; 13ba8 <close@plt+0x2d24>
   13b8c:	cmp	r0, #0
   13b90:	moveq	r0, r3
   13b94:	ldr	r3, [pc, #16]	; 13bac <close@plt+0x2d28>
   13b98:	ldrb	r2, [r0]
   13b9c:	cmp	r2, #0
   13ba0:	moveq	r0, r3
   13ba4:	pop	{r4, pc}
   13ba8:	andeq	r4, r1, sl, ror #6
   13bac:	ldrdeq	r4, [r1], -r2
   13bb0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13bb4:	subs	r5, r0, #0
   13bb8:	addeq	r5, sp, #4
   13bbc:	mov	r0, r5
   13bc0:	mov	r7, r2
   13bc4:	mov	r6, r1
   13bc8:	bl	10d28 <mbrtowc@plt>
   13bcc:	cmp	r7, #0
   13bd0:	cmnne	r0, #3
   13bd4:	mov	r4, r0
   13bd8:	bls	13bf4 <close@plt+0x2d70>
   13bdc:	mov	r0, #0
   13be0:	bl	13c4c <close@plt+0x2dc8>
   13be4:	cmp	r0, #0
   13be8:	moveq	r4, #1
   13bec:	ldrbeq	r3, [r6]
   13bf0:	streq	r3, [r5]
   13bf4:	mov	r0, r4
   13bf8:	add	sp, sp, #12
   13bfc:	pop	{r4, r5, r6, r7, pc}
   13c00:	push	{r4, r5, r6, lr}
   13c04:	subs	r4, r2, #0
   13c08:	mov	r6, r0
   13c0c:	mov	r5, r1
   13c10:	beq	13c28 <close@plt+0x2da4>
   13c14:	mov	r1, r4
   13c18:	mvn	r0, #0
   13c1c:	bl	13d2c <close@plt+0x2ea8>
   13c20:	cmp	r0, r5
   13c24:	bcc	13c38 <close@plt+0x2db4>
   13c28:	mul	r1, r5, r4
   13c2c:	mov	r0, r6
   13c30:	pop	{r4, r5, r6, lr}
   13c34:	b	138d0 <close@plt+0x2a4c>
   13c38:	bl	10dac <__errno_location@plt>
   13c3c:	mov	r3, #12
   13c40:	str	r3, [r0]
   13c44:	mov	r0, #0
   13c48:	pop	{r4, r5, r6, pc}
   13c4c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c50:	sub	sp, sp, #268	; 0x10c
   13c54:	ldr	r2, [pc, #64]	; 13c9c <close@plt+0x2e18>
   13c58:	add	r1, sp, #4
   13c5c:	bl	13ca8 <close@plt+0x2e24>
   13c60:	cmp	r0, #0
   13c64:	movne	r0, #0
   13c68:	bne	13c94 <close@plt+0x2e10>
   13c6c:	ldr	r1, [pc, #44]	; 13ca0 <close@plt+0x2e1c>
   13c70:	add	r0, sp, #4
   13c74:	bl	10c5c <strcmp@plt>
   13c78:	cmp	r0, #0
   13c7c:	beq	13c94 <close@plt+0x2e10>
   13c80:	ldr	r1, [pc, #28]	; 13ca4 <close@plt+0x2e20>
   13c84:	add	r0, sp, #4
   13c88:	bl	10c5c <strcmp@plt>
   13c8c:	adds	r0, r0, #0
   13c90:	movne	r0, #1
   13c94:	add	sp, sp, #268	; 0x10c
   13c98:	pop	{pc}		; (ldr pc, [sp], #4)
   13c9c:	andeq	r0, r0, r1, lsl #2
   13ca0:	ldrdeq	r4, [r1], -r8
   13ca4:	ldrdeq	r4, [r1], -sl
   13ca8:	push	{r4, r5, r6, lr}
   13cac:	mov	r5, r1
   13cb0:	mov	r1, #0
   13cb4:	mov	r4, r2
   13cb8:	bl	10e18 <setlocale@plt>
   13cbc:	subs	r6, r0, #0
   13cc0:	bne	13cd4 <close@plt+0x2e50>
   13cc4:	cmp	r4, #0
   13cc8:	strbne	r6, [r5]
   13ccc:	mov	r0, #22
   13cd0:	pop	{r4, r5, r6, pc}
   13cd4:	bl	10da0 <strlen@plt>
   13cd8:	cmp	r4, r0
   13cdc:	bls	13cf8 <close@plt+0x2e74>
   13ce0:	add	r2, r0, #1
   13ce4:	mov	r1, r6
   13ce8:	mov	r0, r5
   13cec:	bl	10c8c <memcpy@plt>
   13cf0:	mov	r0, #0
   13cf4:	pop	{r4, r5, r6, pc}
   13cf8:	cmp	r4, #0
   13cfc:	beq	13d1c <close@plt+0x2e98>
   13d00:	sub	r4, r4, #1
   13d04:	mov	r2, r4
   13d08:	mov	r1, r6
   13d0c:	mov	r0, r5
   13d10:	bl	10c8c <memcpy@plt>
   13d14:	mov	r3, #0
   13d18:	strb	r3, [r5, r4]
   13d1c:	mov	r0, #34	; 0x22
   13d20:	pop	{r4, r5, r6, pc}
   13d24:	mov	r1, #0
   13d28:	b	10e18 <setlocale@plt>
   13d2c:	subs	r2, r1, #1
   13d30:	bxeq	lr
   13d34:	bcc	13f0c <close@plt+0x3088>
   13d38:	cmp	r0, r1
   13d3c:	bls	13ef0 <close@plt+0x306c>
   13d40:	tst	r1, r2
   13d44:	beq	13efc <close@plt+0x3078>
   13d48:	clz	r3, r0
   13d4c:	clz	r2, r1
   13d50:	sub	r3, r2, r3
   13d54:	rsbs	r3, r3, #31
   13d58:	addne	r3, r3, r3, lsl #1
   13d5c:	mov	r2, #0
   13d60:	addne	pc, pc, r3, lsl #2
   13d64:	nop			; (mov r0, r0)
   13d68:	cmp	r0, r1, lsl #31
   13d6c:	adc	r2, r2, r2
   13d70:	subcs	r0, r0, r1, lsl #31
   13d74:	cmp	r0, r1, lsl #30
   13d78:	adc	r2, r2, r2
   13d7c:	subcs	r0, r0, r1, lsl #30
   13d80:	cmp	r0, r1, lsl #29
   13d84:	adc	r2, r2, r2
   13d88:	subcs	r0, r0, r1, lsl #29
   13d8c:	cmp	r0, r1, lsl #28
   13d90:	adc	r2, r2, r2
   13d94:	subcs	r0, r0, r1, lsl #28
   13d98:	cmp	r0, r1, lsl #27
   13d9c:	adc	r2, r2, r2
   13da0:	subcs	r0, r0, r1, lsl #27
   13da4:	cmp	r0, r1, lsl #26
   13da8:	adc	r2, r2, r2
   13dac:	subcs	r0, r0, r1, lsl #26
   13db0:	cmp	r0, r1, lsl #25
   13db4:	adc	r2, r2, r2
   13db8:	subcs	r0, r0, r1, lsl #25
   13dbc:	cmp	r0, r1, lsl #24
   13dc0:	adc	r2, r2, r2
   13dc4:	subcs	r0, r0, r1, lsl #24
   13dc8:	cmp	r0, r1, lsl #23
   13dcc:	adc	r2, r2, r2
   13dd0:	subcs	r0, r0, r1, lsl #23
   13dd4:	cmp	r0, r1, lsl #22
   13dd8:	adc	r2, r2, r2
   13ddc:	subcs	r0, r0, r1, lsl #22
   13de0:	cmp	r0, r1, lsl #21
   13de4:	adc	r2, r2, r2
   13de8:	subcs	r0, r0, r1, lsl #21
   13dec:	cmp	r0, r1, lsl #20
   13df0:	adc	r2, r2, r2
   13df4:	subcs	r0, r0, r1, lsl #20
   13df8:	cmp	r0, r1, lsl #19
   13dfc:	adc	r2, r2, r2
   13e00:	subcs	r0, r0, r1, lsl #19
   13e04:	cmp	r0, r1, lsl #18
   13e08:	adc	r2, r2, r2
   13e0c:	subcs	r0, r0, r1, lsl #18
   13e10:	cmp	r0, r1, lsl #17
   13e14:	adc	r2, r2, r2
   13e18:	subcs	r0, r0, r1, lsl #17
   13e1c:	cmp	r0, r1, lsl #16
   13e20:	adc	r2, r2, r2
   13e24:	subcs	r0, r0, r1, lsl #16
   13e28:	cmp	r0, r1, lsl #15
   13e2c:	adc	r2, r2, r2
   13e30:	subcs	r0, r0, r1, lsl #15
   13e34:	cmp	r0, r1, lsl #14
   13e38:	adc	r2, r2, r2
   13e3c:	subcs	r0, r0, r1, lsl #14
   13e40:	cmp	r0, r1, lsl #13
   13e44:	adc	r2, r2, r2
   13e48:	subcs	r0, r0, r1, lsl #13
   13e4c:	cmp	r0, r1, lsl #12
   13e50:	adc	r2, r2, r2
   13e54:	subcs	r0, r0, r1, lsl #12
   13e58:	cmp	r0, r1, lsl #11
   13e5c:	adc	r2, r2, r2
   13e60:	subcs	r0, r0, r1, lsl #11
   13e64:	cmp	r0, r1, lsl #10
   13e68:	adc	r2, r2, r2
   13e6c:	subcs	r0, r0, r1, lsl #10
   13e70:	cmp	r0, r1, lsl #9
   13e74:	adc	r2, r2, r2
   13e78:	subcs	r0, r0, r1, lsl #9
   13e7c:	cmp	r0, r1, lsl #8
   13e80:	adc	r2, r2, r2
   13e84:	subcs	r0, r0, r1, lsl #8
   13e88:	cmp	r0, r1, lsl #7
   13e8c:	adc	r2, r2, r2
   13e90:	subcs	r0, r0, r1, lsl #7
   13e94:	cmp	r0, r1, lsl #6
   13e98:	adc	r2, r2, r2
   13e9c:	subcs	r0, r0, r1, lsl #6
   13ea0:	cmp	r0, r1, lsl #5
   13ea4:	adc	r2, r2, r2
   13ea8:	subcs	r0, r0, r1, lsl #5
   13eac:	cmp	r0, r1, lsl #4
   13eb0:	adc	r2, r2, r2
   13eb4:	subcs	r0, r0, r1, lsl #4
   13eb8:	cmp	r0, r1, lsl #3
   13ebc:	adc	r2, r2, r2
   13ec0:	subcs	r0, r0, r1, lsl #3
   13ec4:	cmp	r0, r1, lsl #2
   13ec8:	adc	r2, r2, r2
   13ecc:	subcs	r0, r0, r1, lsl #2
   13ed0:	cmp	r0, r1, lsl #1
   13ed4:	adc	r2, r2, r2
   13ed8:	subcs	r0, r0, r1, lsl #1
   13edc:	cmp	r0, r1
   13ee0:	adc	r2, r2, r2
   13ee4:	subcs	r0, r0, r1
   13ee8:	mov	r0, r2
   13eec:	bx	lr
   13ef0:	moveq	r0, #1
   13ef4:	movne	r0, #0
   13ef8:	bx	lr
   13efc:	clz	r2, r1
   13f00:	rsb	r2, r2, #31
   13f04:	lsr	r0, r0, r2
   13f08:	bx	lr
   13f0c:	cmp	r0, #0
   13f10:	mvnne	r0, #0
   13f14:	b	14178 <close@plt+0x32f4>
   13f18:	cmp	r1, #0
   13f1c:	beq	13f0c <close@plt+0x3088>
   13f20:	push	{r0, r1, lr}
   13f24:	bl	13d2c <close@plt+0x2ea8>
   13f28:	pop	{r1, r2, lr}
   13f2c:	mul	r3, r2, r0
   13f30:	sub	r1, r1, r3
   13f34:	bx	lr
   13f38:	cmp	r1, #0
   13f3c:	beq	14148 <close@plt+0x32c4>
   13f40:	eor	ip, r0, r1
   13f44:	rsbmi	r1, r1, #0
   13f48:	subs	r2, r1, #1
   13f4c:	beq	14114 <close@plt+0x3290>
   13f50:	movs	r3, r0
   13f54:	rsbmi	r3, r0, #0
   13f58:	cmp	r3, r1
   13f5c:	bls	14120 <close@plt+0x329c>
   13f60:	tst	r1, r2
   13f64:	beq	14130 <close@plt+0x32ac>
   13f68:	clz	r2, r3
   13f6c:	clz	r0, r1
   13f70:	sub	r2, r0, r2
   13f74:	rsbs	r2, r2, #31
   13f78:	addne	r2, r2, r2, lsl #1
   13f7c:	mov	r0, #0
   13f80:	addne	pc, pc, r2, lsl #2
   13f84:	nop			; (mov r0, r0)
   13f88:	cmp	r3, r1, lsl #31
   13f8c:	adc	r0, r0, r0
   13f90:	subcs	r3, r3, r1, lsl #31
   13f94:	cmp	r3, r1, lsl #30
   13f98:	adc	r0, r0, r0
   13f9c:	subcs	r3, r3, r1, lsl #30
   13fa0:	cmp	r3, r1, lsl #29
   13fa4:	adc	r0, r0, r0
   13fa8:	subcs	r3, r3, r1, lsl #29
   13fac:	cmp	r3, r1, lsl #28
   13fb0:	adc	r0, r0, r0
   13fb4:	subcs	r3, r3, r1, lsl #28
   13fb8:	cmp	r3, r1, lsl #27
   13fbc:	adc	r0, r0, r0
   13fc0:	subcs	r3, r3, r1, lsl #27
   13fc4:	cmp	r3, r1, lsl #26
   13fc8:	adc	r0, r0, r0
   13fcc:	subcs	r3, r3, r1, lsl #26
   13fd0:	cmp	r3, r1, lsl #25
   13fd4:	adc	r0, r0, r0
   13fd8:	subcs	r3, r3, r1, lsl #25
   13fdc:	cmp	r3, r1, lsl #24
   13fe0:	adc	r0, r0, r0
   13fe4:	subcs	r3, r3, r1, lsl #24
   13fe8:	cmp	r3, r1, lsl #23
   13fec:	adc	r0, r0, r0
   13ff0:	subcs	r3, r3, r1, lsl #23
   13ff4:	cmp	r3, r1, lsl #22
   13ff8:	adc	r0, r0, r0
   13ffc:	subcs	r3, r3, r1, lsl #22
   14000:	cmp	r3, r1, lsl #21
   14004:	adc	r0, r0, r0
   14008:	subcs	r3, r3, r1, lsl #21
   1400c:	cmp	r3, r1, lsl #20
   14010:	adc	r0, r0, r0
   14014:	subcs	r3, r3, r1, lsl #20
   14018:	cmp	r3, r1, lsl #19
   1401c:	adc	r0, r0, r0
   14020:	subcs	r3, r3, r1, lsl #19
   14024:	cmp	r3, r1, lsl #18
   14028:	adc	r0, r0, r0
   1402c:	subcs	r3, r3, r1, lsl #18
   14030:	cmp	r3, r1, lsl #17
   14034:	adc	r0, r0, r0
   14038:	subcs	r3, r3, r1, lsl #17
   1403c:	cmp	r3, r1, lsl #16
   14040:	adc	r0, r0, r0
   14044:	subcs	r3, r3, r1, lsl #16
   14048:	cmp	r3, r1, lsl #15
   1404c:	adc	r0, r0, r0
   14050:	subcs	r3, r3, r1, lsl #15
   14054:	cmp	r3, r1, lsl #14
   14058:	adc	r0, r0, r0
   1405c:	subcs	r3, r3, r1, lsl #14
   14060:	cmp	r3, r1, lsl #13
   14064:	adc	r0, r0, r0
   14068:	subcs	r3, r3, r1, lsl #13
   1406c:	cmp	r3, r1, lsl #12
   14070:	adc	r0, r0, r0
   14074:	subcs	r3, r3, r1, lsl #12
   14078:	cmp	r3, r1, lsl #11
   1407c:	adc	r0, r0, r0
   14080:	subcs	r3, r3, r1, lsl #11
   14084:	cmp	r3, r1, lsl #10
   14088:	adc	r0, r0, r0
   1408c:	subcs	r3, r3, r1, lsl #10
   14090:	cmp	r3, r1, lsl #9
   14094:	adc	r0, r0, r0
   14098:	subcs	r3, r3, r1, lsl #9
   1409c:	cmp	r3, r1, lsl #8
   140a0:	adc	r0, r0, r0
   140a4:	subcs	r3, r3, r1, lsl #8
   140a8:	cmp	r3, r1, lsl #7
   140ac:	adc	r0, r0, r0
   140b0:	subcs	r3, r3, r1, lsl #7
   140b4:	cmp	r3, r1, lsl #6
   140b8:	adc	r0, r0, r0
   140bc:	subcs	r3, r3, r1, lsl #6
   140c0:	cmp	r3, r1, lsl #5
   140c4:	adc	r0, r0, r0
   140c8:	subcs	r3, r3, r1, lsl #5
   140cc:	cmp	r3, r1, lsl #4
   140d0:	adc	r0, r0, r0
   140d4:	subcs	r3, r3, r1, lsl #4
   140d8:	cmp	r3, r1, lsl #3
   140dc:	adc	r0, r0, r0
   140e0:	subcs	r3, r3, r1, lsl #3
   140e4:	cmp	r3, r1, lsl #2
   140e8:	adc	r0, r0, r0
   140ec:	subcs	r3, r3, r1, lsl #2
   140f0:	cmp	r3, r1, lsl #1
   140f4:	adc	r0, r0, r0
   140f8:	subcs	r3, r3, r1, lsl #1
   140fc:	cmp	r3, r1
   14100:	adc	r0, r0, r0
   14104:	subcs	r3, r3, r1
   14108:	cmp	ip, #0
   1410c:	rsbmi	r0, r0, #0
   14110:	bx	lr
   14114:	teq	ip, r0
   14118:	rsbmi	r0, r0, #0
   1411c:	bx	lr
   14120:	movcc	r0, #0
   14124:	asreq	r0, ip, #31
   14128:	orreq	r0, r0, #1
   1412c:	bx	lr
   14130:	clz	r2, r1
   14134:	rsb	r2, r2, #31
   14138:	cmp	ip, #0
   1413c:	lsr	r0, r3, r2
   14140:	rsbmi	r0, r0, #0
   14144:	bx	lr
   14148:	cmp	r0, #0
   1414c:	mvngt	r0, #-2147483648	; 0x80000000
   14150:	movlt	r0, #-2147483648	; 0x80000000
   14154:	b	14178 <close@plt+0x32f4>
   14158:	cmp	r1, #0
   1415c:	beq	14148 <close@plt+0x32c4>
   14160:	push	{r0, r1, lr}
   14164:	bl	13f40 <close@plt+0x30bc>
   14168:	pop	{r1, r2, lr}
   1416c:	mul	r3, r2, r0
   14170:	sub	r1, r1, r3
   14174:	bx	lr
   14178:	push	{r1, lr}
   1417c:	mov	r0, #8
   14180:	bl	10c44 <raise@plt>
   14184:	pop	{r1, pc}
   14188:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1418c:	mov	r7, r0
   14190:	ldr	r6, [pc, #72]	; 141e0 <close@plt+0x335c>
   14194:	ldr	r5, [pc, #72]	; 141e4 <close@plt+0x3360>
   14198:	add	r6, pc, r6
   1419c:	add	r5, pc, r5
   141a0:	sub	r6, r6, r5
   141a4:	mov	r8, r1
   141a8:	mov	r9, r2
   141ac:	bl	10c0c <calloc@plt-0x20>
   141b0:	asrs	r6, r6, #2
   141b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   141b8:	mov	r4, #0
   141bc:	add	r4, r4, #1
   141c0:	ldr	r3, [r5], #4
   141c4:	mov	r2, r9
   141c8:	mov	r1, r8
   141cc:	mov	r0, r7
   141d0:	blx	r3
   141d4:	cmp	r6, r4
   141d8:	bne	141bc <close@plt+0x3338>
   141dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141e0:	andeq	r0, r1, r0, ror sp
   141e4:	andeq	r0, r1, r8, ror #26
   141e8:	bx	lr
   141ec:	ldr	r3, [pc, #12]	; 14200 <close@plt+0x337c>
   141f0:	mov	r1, #0
   141f4:	add	r3, pc, r3
   141f8:	ldr	r2, [r3]
   141fc:	b	10db8 <__cxa_atexit@plt>
   14200:	andeq	r0, r1, r4, ror #29

Disassembly of section .fini:

00014204 <.fini>:
   14204:	push	{r3, lr}
   14208:	pop	{r3, pc}
