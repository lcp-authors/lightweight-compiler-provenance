
../repos/charybdis/extensions/.libs/extb_extgecos.so:     file format elf32-littlearm


Disassembly of section .init:

000003ec <_init>:
 3ec:	push	{r3, lr}
 3f0:	bl	43c <call_weak_fn>
 3f4:	pop	{r3, pc}

Disassembly of section .plt:

000003f8 <.plt>:
 3f8:	push	{lr}		; (str lr, [sp, #-4]!)
 3fc:	ldr	lr, [pc, #4]	; 408 <.plt+0x10>
 400:	add	lr, pc, lr
 404:	ldr	pc, [lr, #8]!
 408:	.word	0x00010bf8

0000040c <__cxa_finalize@plt>:
 40c:	add	ip, pc, #0, 12
 410:	add	ip, ip, #16, 20	; 0x10000
 414:	ldr	pc, [ip, #3064]!	; 0xbf8

00000418 <__gmon_start__@plt>:
 418:	add	ip, pc, #0, 12
 41c:	add	ip, ip, #16, 20	; 0x10000
 420:	ldr	pc, [ip, #3056]!	; 0xbf0

00000424 <snprintf@plt>:
 424:	add	ip, pc, #0, 12
 428:	add	ip, ip, #16, 20	; 0x10000
 42c:	ldr	pc, [ip, #3048]!	; 0xbe8

00000430 <match@plt>:
 430:	add	ip, pc, #0, 12
 434:	add	ip, ip, #16, 20	; 0x10000
 438:	ldr	pc, [ip, #3040]!	; 0xbe0

Disassembly of section .text:

0000043c <call_weak_fn>:
 43c:	ldr	r3, [pc, #20]	; 458 <call_weak_fn+0x1c>
 440:	ldr	r2, [pc, #20]	; 45c <call_weak_fn+0x20>
 444:	add	r3, pc, r3
 448:	ldr	r2, [r3, r2]
 44c:	cmp	r2, #0
 450:	bxeq	lr
 454:	b	418 <__gmon_start__@plt>
 458:	.word	0x00010bb4
 45c:	.word	0x00000024

00000460 <deregister_tm_clones>:
 460:	ldr	r0, [pc, #44]	; 494 <deregister_tm_clones+0x34>
 464:	ldr	r3, [pc, #44]	; 498 <deregister_tm_clones+0x38>
 468:	add	r0, pc, r0
 46c:	add	r3, pc, r3
 470:	cmp	r3, r0
 474:	ldr	r3, [pc, #32]	; 49c <deregister_tm_clones+0x3c>
 478:	add	r3, pc, r3
 47c:	bxeq	lr
 480:	ldr	r2, [pc, #24]	; 4a0 <deregister_tm_clones+0x40>
 484:	ldr	r3, [r3, r2]
 488:	cmp	r3, #0
 48c:	bxeq	lr
 490:	bx	r3
 494:	.word	0x00010bec
 498:	.word	0x00010be8
 49c:	.word	0x00010b80
 4a0:	.word	0x00000020

000004a4 <register_tm_clones>:
 4a4:	ldr	r0, [pc, #56]	; 4e4 <register_tm_clones+0x40>
 4a8:	ldr	r3, [pc, #56]	; 4e8 <register_tm_clones+0x44>
 4ac:	add	r0, pc, r0
 4b0:	add	r3, pc, r3
 4b4:	sub	r1, r3, r0
 4b8:	ldr	r3, [pc, #44]	; 4ec <register_tm_clones+0x48>
 4bc:	asr	r1, r1, #2
 4c0:	add	r3, pc, r3
 4c4:	add	r1, r1, r1, lsr #31
 4c8:	asrs	r1, r1, #1
 4cc:	bxeq	lr
 4d0:	ldr	r2, [pc, #24]	; 4f0 <register_tm_clones+0x4c>
 4d4:	ldr	r3, [r3, r2]
 4d8:	cmp	r3, #0
 4dc:	bxeq	lr
 4e0:	bx	r3
 4e4:	.word	0x00010ba8
 4e8:	.word	0x00010ba4
 4ec:	.word	0x00010b38
 4f0:	.word	0x0000002c

000004f4 <__do_global_dtors_aux>:
 4f4:	ldr	r3, [pc, #76]	; 548 <__do_global_dtors_aux+0x54>
 4f8:	ldr	r2, [pc, #76]	; 54c <__do_global_dtors_aux+0x58>
 4fc:	add	r3, pc, r3
 500:	add	r2, pc, r2
 504:	ldrb	r3, [r3]
 508:	cmp	r3, #0
 50c:	bxne	lr
 510:	ldr	r3, [pc, #56]	; 550 <__do_global_dtors_aux+0x5c>
 514:	push	{r4, lr}
 518:	ldr	r3, [r2, r3]
 51c:	cmp	r3, #0
 520:	beq	530 <__do_global_dtors_aux+0x3c>
 524:	ldr	r3, [pc, #40]	; 554 <__do_global_dtors_aux+0x60>
 528:	ldr	r0, [pc, r3]
 52c:	bl	40c <__cxa_finalize@plt>
 530:	bl	460 <deregister_tm_clones>
 534:	ldr	r3, [pc, #28]	; 558 <__do_global_dtors_aux+0x64>
 538:	mov	r2, #1
 53c:	add	r3, pc, r3
 540:	strb	r2, [r3]
 544:	pop	{r4, pc}
 548:	.word	0x00010b58
 54c:	.word	0x00010af8
 550:	.word	0x0000001c
 554:	.word	0x00010b00
 558:	.word	0x00010b18

0000055c <frame_dummy>:
 55c:	b	4a4 <register_tm_clones>

00000560 <_modinit>:
 560:	ldr	r0, [pc, #20]	; 57c <_modinit+0x1c>
 564:	add	r0, pc, r0
 568:	ldr	r1, [pc, #16]	; 580 <_modinit+0x20>
 56c:	ldr	r1, [pc, r1]
 570:	str	r0, [r1, #480]	; 0x1e0
 574:	movw	r0, #0
 578:	bx	lr
 57c:	.word	0x00000030
 580:	.word	0x00010ab4

00000584 <_moddeinit>:
 584:	ldr	r0, [pc, #12]	; 598 <_moddeinit+0x14>
 588:	ldr	r0, [pc, r0]
 58c:	movw	r1, #0
 590:	str	r1, [r0, #480]	; 0x1e0
 594:	bx	lr
 598:	.word	0x00010a98

0000059c <eb_extended>:
 59c:	push	{r4, sl, fp, lr}
 5a0:	add	fp, sp, #8
 5a4:	sub	sp, sp, #568	; 0x238
 5a8:	str	r0, [fp, #-16]
 5ac:	str	r1, [fp, #-20]	; 0xffffffec
 5b0:	str	r2, [fp, #-24]	; 0xffffffe8
 5b4:	str	r3, [fp, #-28]	; 0xffffffe4
 5b8:	ldr	r0, [fp, #-16]
 5bc:	movw	r1, #0
 5c0:	cmp	r0, r1
 5c4:	bne	5d4 <eb_extended+0x38>
 5c8:	mvn	r0, #0
 5cc:	str	r0, [fp, #-12]
 5d0:	b	6fc <eb_extended+0x160>
 5d4:	ldr	r0, [pc, #300]	; 708 <eb_extended+0x16c>
 5d8:	add	r2, pc, r0
 5dc:	add	r0, sp, #36	; 0x24
 5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
 5e4:	add	r3, r1, #88	; 0x58
 5e8:	ldr	r1, [fp, #-20]	; 0xffffffec
 5ec:	add	r1, r1, #152	; 0x98
 5f0:	ldr	ip, [fp, #-20]	; 0xffffffec
 5f4:	add	ip, ip, #163	; 0xa3
 5f8:	ldr	lr, [fp, #-20]	; 0xffffffec
 5fc:	movw	r4, #345	; 0x159
 600:	add	lr, lr, r4
 604:	movw	r4, #512	; 0x200
 608:	str	r1, [sp, #28]
 60c:	mov	r1, r4
 610:	ldr	r4, [sp, #28]
 614:	str	r4, [sp]
 618:	str	ip, [sp, #4]
 61c:	str	lr, [sp, #8]
 620:	bl	424 <snprintf@plt>
 624:	add	r1, sp, #36	; 0x24
 628:	ldr	r2, [fp, #-16]
 62c:	str	r0, [sp, #24]
 630:	mov	r0, r2
 634:	bl	430 <match@plt>
 638:	cmp	r0, #0
 63c:	movw	r0, #0
 640:	movne	r0, #1
 644:	tst	r0, #1
 648:	movw	r0, #1
 64c:	moveq	r0, #0
 650:	str	r0, [sp, #32]
 654:	ldr	r0, [sp, #32]
 658:	cmp	r0, #0
 65c:	bne	6f4 <eb_extended+0x158>
 660:	ldr	r0, [fp, #-20]	; 0xffffffec
 664:	ldrb	r0, [r0, #66]	; 0x42
 668:	tst	r0, #2
 66c:	beq	6f4 <eb_extended+0x158>
 670:	b	674 <eb_extended+0xd8>
 674:	ldr	r0, [pc, #144]	; 70c <eb_extended+0x170>
 678:	add	r2, pc, r0
 67c:	add	r0, sp, #36	; 0x24
 680:	ldr	r1, [fp, #-20]	; 0xffffffec
 684:	add	r3, r1, #88	; 0x58
 688:	ldr	r1, [fp, #-20]	; 0xffffffec
 68c:	add	r1, r1, #152	; 0x98
 690:	ldr	ip, [fp, #-20]	; 0xffffffec
 694:	add	ip, ip, #227	; 0xe3
 698:	ldr	lr, [fp, #-20]	; 0xffffffec
 69c:	movw	r4, #345	; 0x159
 6a0:	add	lr, lr, r4
 6a4:	movw	r4, #512	; 0x200
 6a8:	str	r1, [sp, #20]
 6ac:	mov	r1, r4
 6b0:	ldr	r4, [sp, #20]
 6b4:	str	r4, [sp]
 6b8:	str	ip, [sp, #4]
 6bc:	str	lr, [sp, #8]
 6c0:	bl	424 <snprintf@plt>
 6c4:	add	r1, sp, #36	; 0x24
 6c8:	ldr	r2, [fp, #-16]
 6cc:	str	r0, [sp, #16]
 6d0:	mov	r0, r2
 6d4:	bl	430 <match@plt>
 6d8:	cmp	r0, #0
 6dc:	movw	r0, #0
 6e0:	movne	r0, #1
 6e4:	tst	r0, #1
 6e8:	movw	r0, #1
 6ec:	moveq	r0, #0
 6f0:	str	r0, [sp, #32]
 6f4:	ldr	r0, [sp, #32]
 6f8:	str	r0, [fp, #-12]
 6fc:	ldr	r0, [fp, #-12]
 700:	sub	sp, fp, #8
 704:	pop	{r4, sl, fp, pc}
 708:	.word	0x00000157
 70c:	.word	0x000000b7

Disassembly of section .fini:

00000710 <_fini>:
 710:	push	{r3, lr}
 714:	pop	{r3, pc}
