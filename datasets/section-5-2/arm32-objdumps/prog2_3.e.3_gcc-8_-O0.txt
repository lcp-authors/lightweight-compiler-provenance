
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	10740 <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <__isoc99_fscanf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <__isoc99_fscanf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r0, r1, r8, ror r9

0001068c <__isoc99_fscanf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <fopen@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <realloc@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <fwrite@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <malloc@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <__libc_start_main@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

000106d4 <__gmon_start__@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2376]!	; 0x948

000106e0 <fprintf@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2368]!	; 0x940

000106ec <fclose@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2360]!	; 0x938

000106f8 <abort@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010704 <_start@@Base>:
   10704:	mov	fp, #0
   10708:	mov	lr, #0
   1070c:	pop	{r1}		; (ldr r1, [sp], #4)
   10710:	mov	r2, sp
   10714:	push	{r2}		; (str r2, [sp, #-4]!)
   10718:	push	{r0}		; (str r0, [sp, #-4]!)
   1071c:	ldr	ip, [pc, #16]	; 10734 <_start@@Base+0x30>
   10720:	push	{ip}		; (str ip, [sp, #-4]!)
   10724:	ldr	r0, [pc, #12]	; 10738 <_start@@Base+0x34>
   10728:	ldr	r3, [pc, #12]	; 1073c <_start@@Base+0x38>
   1072c:	bl	106c8 <__libc_start_main@plt>
   10730:	bl	106f8 <abort@plt>
   10734:	andeq	r0, r1, ip, lsl fp
   10738:	andeq	r0, r1, r8, asr sl
   1073c:			; <UNDEFINED> instruction: 0x00010abc
   10740:	ldr	r3, [pc, #20]	; 1075c <_start@@Base+0x58>
   10744:	ldr	r2, [pc, #20]	; 10760 <_start@@Base+0x5c>
   10748:	add	r3, pc, r3
   1074c:	ldr	r2, [r3, r2]
   10750:	cmp	r2, #0
   10754:	bxeq	lr
   10758:	b	106d4 <__gmon_start__@plt>
   1075c:			; <UNDEFINED> instruction: 0x000108b0
   10760:	andeq	r0, r0, r4, lsr r0
   10764:	ldr	r0, [pc, #24]	; 10784 <_start@@Base+0x80>
   10768:	ldr	r3, [pc, #24]	; 10788 <_start@@Base+0x84>
   1076c:	cmp	r3, r0
   10770:	bxeq	lr
   10774:	ldr	r3, [pc, #16]	; 1078c <_start@@Base+0x88>
   10778:	cmp	r3, #0
   1077c:	bxeq	lr
   10780:	bx	r3
   10784:	andeq	r1, r2, r0, asr #32
   10788:	andeq	r1, r2, r0, asr #32
   1078c:	andeq	r0, r0, r0
   10790:	ldr	r0, [pc, #36]	; 107bc <_start@@Base+0xb8>
   10794:	ldr	r1, [pc, #36]	; 107c0 <_start@@Base+0xbc>
   10798:	sub	r1, r1, r0
   1079c:	asr	r1, r1, #2
   107a0:	add	r1, r1, r1, lsr #31
   107a4:	asrs	r1, r1, #1
   107a8:	bxeq	lr
   107ac:	ldr	r3, [pc, #16]	; 107c4 <_start@@Base+0xc0>
   107b0:	cmp	r3, #0
   107b4:	bxeq	lr
   107b8:	bx	r3
   107bc:	andeq	r1, r2, r0, asr #32
   107c0:	andeq	r1, r2, r0, asr #32
   107c4:	andeq	r0, r0, r0
   107c8:	push	{r4, lr}
   107cc:	ldr	r4, [pc, #24]	; 107ec <_start@@Base+0xe8>
   107d0:	ldrb	r3, [r4]
   107d4:	cmp	r3, #0
   107d8:	popne	{r4, pc}
   107dc:	bl	10764 <_start@@Base+0x60>
   107e0:	mov	r3, #1
   107e4:	strb	r3, [r4]
   107e8:	pop	{r4, pc}
   107ec:	andeq	r1, r2, r0, asr #32
   107f0:	b	10790 <_start@@Base+0x8c>

000107f4 <analisarFicheiro@@Base>:
   107f4:	str	fp, [sp, #-8]!
   107f8:	str	lr, [sp, #4]
   107fc:	add	fp, sp, #4
   10800:	sub	sp, sp, #24
   10804:	str	r0, [fp, #-16]
   10808:	str	r1, [fp, #-20]	; 0xffffffec
   1080c:	ldr	r3, [pc, #256]	; 10914 <analisarFicheiro@@Base+0x120>
   10810:	add	r3, pc, r3
   10814:	mov	r1, r3
   10818:	ldr	r3, [pc, #248]	; 10918 <analisarFicheiro@@Base+0x124>
   1081c:	add	r3, pc, r3
   10820:	mov	r0, r3
   10824:	bl	10698 <fopen@plt>
   10828:	str	r0, [fp, #-16]
   1082c:	mov	r3, #0
   10830:	str	r3, [fp, #-8]
   10834:	mov	r0, #104	; 0x68
   10838:	bl	106bc <malloc@plt>
   1083c:	mov	r3, r0
   10840:	str	r3, [fp, #-12]
   10844:	b	10878 <analisarFicheiro@@Base+0x84>
   10848:	ldr	r3, [fp, #-8]
   1084c:	add	r3, r3, #1
   10850:	mov	r2, r3
   10854:	mov	r3, #104	; 0x68
   10858:	mul	r3, r3, r2
   1085c:	mov	r1, r3
   10860:	ldr	r0, [fp, #-12]
   10864:	bl	106a4 <realloc@plt>
   10868:	str	r0, [fp, #-12]
   1086c:	ldr	r3, [fp, #-8]
   10870:	add	r3, r3, #1
   10874:	str	r3, [fp, #-8]
   10878:	ldr	r3, [fp, #-8]
   1087c:	mov	r2, #104	; 0x68
   10880:	mul	r3, r2, r3
   10884:	ldr	r2, [fp, #-12]
   10888:	add	r3, r2, r3
   1088c:	mov	r0, r3
   10890:	ldr	r3, [fp, #-8]
   10894:	mov	r2, #104	; 0x68
   10898:	mul	r3, r2, r3
   1089c:	ldr	r2, [fp, #-12]
   108a0:	add	r3, r2, r3
   108a4:	add	r1, r3, #50	; 0x32
   108a8:	ldr	r3, [fp, #-8]
   108ac:	mov	r2, #104	; 0x68
   108b0:	mul	r3, r2, r3
   108b4:	ldr	r2, [fp, #-12]
   108b8:	add	r3, r2, r3
   108bc:	add	r3, r3, #100	; 0x64
   108c0:	str	r3, [sp]
   108c4:	mov	r3, r1
   108c8:	mov	r2, r0
   108cc:	ldr	r1, [pc, #72]	; 1091c <analisarFicheiro@@Base+0x128>
   108d0:	add	r1, pc, r1
   108d4:	ldr	r0, [fp, #-16]
   108d8:	bl	1068c <__isoc99_fscanf@plt>
   108dc:	mov	r3, r0
   108e0:	cmp	r3, #3
   108e4:	beq	10848 <analisarFicheiro@@Base+0x54>
   108e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   108ec:	ldr	r2, [fp, #-8]
   108f0:	str	r2, [r3]
   108f4:	ldr	r0, [fp, #-16]
   108f8:	bl	106ec <fclose@plt>
   108fc:	ldr	r3, [fp, #-12]
   10900:	mov	r0, r3
   10904:	sub	sp, fp, #4
   10908:	ldr	fp, [sp]
   1090c:	add	sp, sp, #4
   10910:	pop	{pc}		; (ldr pc, [sp], #4)
   10914:	andeq	r0, r0, r4, lsl r3
   10918:	andeq	r0, r0, ip, lsl #6
   1091c:	andeq	r0, r0, r8, ror #4

00010920 <gerarRelatorio@@Base>:
   10920:	str	fp, [sp, #-8]!
   10924:	str	lr, [sp, #4]
   10928:	add	fp, sp, #4
   1092c:	sub	sp, sp, #32
   10930:	str	r0, [fp, #-16]
   10934:	str	r1, [fp, #-20]	; 0xffffffec
   10938:	str	r2, [fp, #-24]	; 0xffffffe8
   1093c:	ldr	r3, [pc, #264]	; 10a4c <gerarRelatorio@@Base+0x12c>
   10940:	add	r3, pc, r3
   10944:	mov	r1, r3
   10948:	ldr	r0, [fp, #-16]
   1094c:	bl	10698 <fopen@plt>
   10950:	str	r0, [fp, #-12]
   10954:	ldr	r3, [fp, #-12]
   10958:	mov	r2, #10
   1095c:	mov	r1, #1
   10960:	ldr	r0, [pc, #232]	; 10a50 <gerarRelatorio@@Base+0x130>
   10964:	add	r0, pc, r0
   10968:	bl	106b0 <fwrite@plt>
   1096c:	mov	r0, #104	; 0x68
   10970:	bl	106bc <malloc@plt>
   10974:	mov	r3, r0
   10978:	str	r3, [fp, #-20]	; 0xffffffec
   1097c:	mov	r3, #0
   10980:	str	r3, [fp, #-8]
   10984:	b	10a20 <gerarRelatorio@@Base+0x100>
   10988:	ldr	r3, [fp, #-8]
   1098c:	add	r3, r3, #1
   10990:	mov	r2, r3
   10994:	mov	r3, #104	; 0x68
   10998:	mul	r3, r3, r2
   1099c:	mov	r1, r3
   109a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   109a4:	bl	106a4 <realloc@plt>
   109a8:	str	r0, [fp, #-20]	; 0xffffffec
   109ac:	ldr	r3, [fp, #-8]
   109b0:	mov	r2, #104	; 0x68
   109b4:	mul	r3, r2, r3
   109b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   109bc:	add	r3, r2, r3
   109c0:	add	r1, r3, #50	; 0x32
   109c4:	ldr	r3, [fp, #-8]
   109c8:	mov	r2, #104	; 0x68
   109cc:	mul	r3, r2, r3
   109d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   109d4:	add	r3, r2, r3
   109d8:	mov	r0, r3
   109dc:	ldr	r3, [fp, #-8]
   109e0:	mov	r2, #104	; 0x68
   109e4:	mul	r3, r2, r3
   109e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   109ec:	add	r3, r2, r3
   109f0:	ldr	r3, [r3, #100]	; 0x64
   109f4:	str	r3, [sp, #4]
   109f8:	str	r0, [sp]
   109fc:	mov	r3, r1
   10a00:	ldr	r2, [fp, #-8]
   10a04:	ldr	r1, [pc, #72]	; 10a54 <gerarRelatorio@@Base+0x134>
   10a08:	add	r1, pc, r1
   10a0c:	ldr	r0, [fp, #-12]
   10a10:	bl	106e0 <fprintf@plt>
   10a14:	ldr	r3, [fp, #-8]
   10a18:	add	r3, r3, #1
   10a1c:	str	r3, [fp, #-8]
   10a20:	ldr	r2, [fp, #-8]
   10a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a28:	cmp	r2, r3
   10a2c:	blt	10988 <gerarRelatorio@@Base+0x68>
   10a30:	ldr	r0, [fp, #-12]
   10a34:	bl	106ec <fclose@plt>
   10a38:	nop	{0}
   10a3c:	sub	sp, fp, #4
   10a40:	ldr	fp, [sp]
   10a44:	add	sp, sp, #4
   10a48:	pop	{pc}		; (ldr pc, [sp], #4)
   10a4c:	andeq	r0, r0, r4, lsl #4
   10a50:	andeq	r0, r0, r4, ror #3
   10a54:	andeq	r0, r0, ip, asr #2

00010a58 <main@@Base>:
   10a58:	str	fp, [sp, #-8]!
   10a5c:	str	lr, [sp, #4]
   10a60:	add	fp, sp, #4
   10a64:	sub	sp, sp, #16
   10a68:	mov	r3, #0
   10a6c:	str	r3, [fp, #-16]
   10a70:	sub	r3, fp, #16
   10a74:	mov	r1, r3
   10a78:	ldr	r0, [fp, #-8]
   10a7c:	bl	107f4 <analisarFicheiro@@Base>
   10a80:	str	r0, [fp, #-12]
   10a84:	ldr	r3, [fp, #-16]
   10a88:	mov	r2, r3
   10a8c:	ldr	r1, [fp, #-12]
   10a90:	ldr	r3, [pc, #32]	; 10ab8 <main@@Base+0x60>
   10a94:	add	r3, pc, r3
   10a98:	mov	r0, r3
   10a9c:	bl	10920 <gerarRelatorio@@Base>
   10aa0:	mov	r3, #0
   10aa4:	mov	r0, r3
   10aa8:	sub	sp, fp, #4
   10aac:	ldr	fp, [sp]
   10ab0:	add	sp, sp, #4
   10ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ab8:	ldrdeq	r0, [r0], -r4

00010abc <__libc_csu_init@@Base>:
   10abc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ac0:	mov	r7, r0
   10ac4:	ldr	r6, [pc, #72]	; 10b14 <__libc_csu_init@@Base+0x58>
   10ac8:	ldr	r5, [pc, #72]	; 10b18 <__libc_csu_init@@Base+0x5c>
   10acc:	add	r6, pc, r6
   10ad0:	add	r5, pc, r5
   10ad4:	sub	r6, r6, r5
   10ad8:	mov	r8, r1
   10adc:	mov	r9, r2
   10ae0:	bl	1066c <__isoc99_fscanf@plt-0x20>
   10ae4:	asrs	r6, r6, #2
   10ae8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10aec:	mov	r4, #0
   10af0:	add	r4, r4, #1
   10af4:	ldr	r3, [r5], #4
   10af8:	mov	r2, r9
   10afc:	mov	r1, r8
   10b00:	mov	r0, r7
   10b04:	blx	r3
   10b08:	cmp	r6, r4
   10b0c:	bne	10af0 <__libc_csu_init@@Base+0x34>
   10b10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b14:	andeq	r0, r1, r0, asr #8
   10b18:	andeq	r0, r1, r8, lsr r4

00010b1c <__libc_csu_fini@@Base>:
   10b1c:	bx	lr

Disassembly of section .fini:

00010b20 <.fini>:
   10b20:	push	{r3, lr}
   10b24:	pop	{r3, pc}
