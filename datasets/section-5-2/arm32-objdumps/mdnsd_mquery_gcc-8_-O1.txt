
../repos/mdnsd/src/.libs/mquery:     file format elf32-littlearm


Disassembly of section .init:

000107d0 <.init>:
   107d0:	push	{r3, lr}
   107d4:	bl	10988 <close@plt+0x48>
   107d8:	pop	{r3, pc}

Disassembly of section .plt:

000107dc <mdnsd_new@plt-0x14>:
   107dc:	push	{lr}		; (str lr, [sp, #-4]!)
   107e0:	ldr	lr, [pc, #4]	; 107ec <mdnsd_new@plt-0x4>
   107e4:	add	lr, pc, lr
   107e8:	ldr	pc, [lr, #8]!
   107ec:	andeq	r1, r1, r4, lsl r8

000107f0 <mdnsd_new@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2068]!	; 0x814

000107fc <strtol@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2060]!	; 0x80c

00010808 <setsockopt@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2052]!	; 0x804

00010814 <printf@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2044]!	; 0x7fc

00010820 <time@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2036]!	; 0x7f4

0001082c <inet_ntoa@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2028]!	; 0x7ec

00010838 <select@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2020]!	; 0x7e4

00010844 <recvfrom@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2012]!	; 0x7dc

00010850 <puts@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2004]!	; 0x7d4

0001085c <__libc_start_main@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1996]!	; 0x7cc

00010868 <strerror@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1988]!	; 0x7c4

00010874 <__gmon_start__@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1980]!	; 0x7bc

00010880 <getopt@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1972]!	; 0x7b4

0001088c <message_packet@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1964]!	; 0x7ac

00010898 <message_parse@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1956]!	; 0x7a4

000108a4 <__errno_location@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1948]!	; 0x79c

000108b0 <bind@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1940]!	; 0x794

000108bc <mdnsd_log@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1932]!	; 0x78c

000108c8 <memset@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1924]!	; 0x784

000108d4 <sendto@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1916]!	; 0x77c

000108e0 <mdnsd_sleep@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1908]!	; 0x774

000108ec <message_packet_len@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1900]!	; 0x76c

000108f8 <mdnsd_in@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1892]!	; 0x764

00010904 <mdnsd_out@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1884]!	; 0x75c

00010910 <socket@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1876]!	; 0x754

0001091c <mdnsd_query@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1868]!	; 0x74c

00010928 <inet_addr@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1860]!	; 0x744

00010934 <abort@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1852]!	; 0x73c

00010940 <close@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1844]!	; 0x734

Disassembly of section .text:

0001094c <.text>:
   1094c:	mov	fp, #0
   10950:	mov	lr, #0
   10954:	pop	{r1}		; (ldr r1, [sp], #4)
   10958:	mov	r2, sp
   1095c:	push	{r2}		; (str r2, [sp, #-4]!)
   10960:	push	{r0}		; (str r0, [sp, #-4]!)
   10964:	ldr	ip, [pc, #16]	; 1097c <close@plt+0x3c>
   10968:	push	{ip}		; (str ip, [sp, #-4]!)
   1096c:	ldr	r0, [pc, #12]	; 10980 <close@plt+0x40>
   10970:	ldr	r3, [pc, #12]	; 10984 <close@plt+0x44>
   10974:	bl	1085c <__libc_start_main@plt>
   10978:	bl	10934 <abort@plt>
   1097c:	andeq	r1, r1, ip, ror r0
   10980:	andeq	r0, r1, ip, asr #22
   10984:	andeq	r1, r1, ip, lsl r0
   10988:	ldr	r3, [pc, #20]	; 109a4 <close@plt+0x64>
   1098c:	ldr	r2, [pc, #20]	; 109a8 <close@plt+0x68>
   10990:	add	r3, pc, r3
   10994:	ldr	r2, [r3, r2]
   10998:	cmp	r2, #0
   1099c:	bxeq	lr
   109a0:	b	10874 <__gmon_start__@plt>
   109a4:	andeq	r1, r1, r8, ror #12
   109a8:	andeq	r0, r0, r0, lsl #1
   109ac:	ldr	r3, [pc, #28]	; 109d0 <close@plt+0x90>
   109b0:	ldr	r0, [pc, #28]	; 109d4 <close@plt+0x94>
   109b4:	sub	r3, r3, r0
   109b8:	cmp	r3, #6
   109bc:	bxls	lr
   109c0:	ldr	r3, [pc, #16]	; 109d8 <close@plt+0x98>
   109c4:	cmp	r3, #0
   109c8:	bxeq	lr
   109cc:	bx	r3
   109d0:	andeq	r2, r2, pc, lsl #1
   109d4:	andeq	r2, r2, ip, lsl #1
   109d8:	andeq	r0, r0, r0
   109dc:	ldr	r1, [pc, #36]	; 10a08 <close@plt+0xc8>
   109e0:	ldr	r0, [pc, #36]	; 10a0c <close@plt+0xcc>
   109e4:	sub	r1, r1, r0
   109e8:	asr	r1, r1, #2
   109ec:	add	r1, r1, r1, lsr #31
   109f0:	asrs	r1, r1, #1
   109f4:	bxeq	lr
   109f8:	ldr	r3, [pc, #16]	; 10a10 <close@plt+0xd0>
   109fc:	cmp	r3, #0
   10a00:	bxeq	lr
   10a04:	bx	r3
   10a08:	andeq	r2, r2, ip, lsl #1
   10a0c:	andeq	r2, r2, ip, lsl #1
   10a10:	andeq	r0, r0, r0
   10a14:	push	{r4, lr}
   10a18:	ldr	r4, [pc, #24]	; 10a38 <close@plt+0xf8>
   10a1c:	ldrb	r3, [r4]
   10a20:	cmp	r3, #0
   10a24:	popne	{r4, pc}
   10a28:	bl	109ac <close@plt+0x6c>
   10a2c:	mov	r3, #1
   10a30:	strb	r3, [r4]
   10a34:	pop	{r4, pc}
   10a38:	muleq	r2, ip, r0
   10a3c:	ldr	r0, [pc, #40]	; 10a6c <close@plt+0x12c>
   10a40:	ldr	r3, [r0]
   10a44:	cmp	r3, #0
   10a48:	bne	10a50 <close@plt+0x110>
   10a4c:	b	109dc <close@plt+0x9c>
   10a50:	ldr	r3, [pc, #24]	; 10a70 <close@plt+0x130>
   10a54:	cmp	r3, #0
   10a58:	beq	10a4c <close@plt+0x10c>
   10a5c:	push	{r4, lr}
   10a60:	blx	r3
   10a64:	pop	{r4, lr}
   10a68:	b	109dc <close@plt+0x9c>
   10a6c:	andeq	r1, r2, ip, lsl #30
   10a70:	andeq	r0, r0, r0
   10a74:	push	{r4, r5, r6, lr}
   10a78:	sub	sp, sp, #8
   10a7c:	mov	r4, r0
   10a80:	ldr	r5, [r0, #8]
   10a84:	cmp	r5, #0
   10a88:	moveq	r5, #0
   10a8c:	bne	10ac8 <close@plt+0x188>
   10a90:	ldrh	r1, [r4, #4]
   10a94:	cmp	r1, #12
   10a98:	beq	10b04 <close@plt+0x1c4>
   10a9c:	cmp	r1, #33	; 0x21
   10aa0:	beq	10b1c <close@plt+0x1dc>
   10aa4:	cmp	r1, #1
   10aa8:	beq	10ad8 <close@plt+0x198>
   10aac:	ldr	r2, [r4]
   10ab0:	ldrh	r3, [r4, #12]
   10ab4:	str	r3, [sp]
   10ab8:	mov	r3, r5
   10abc:	ldr	r0, [pc, #120]	; 10b3c <close@plt+0x1fc>
   10ac0:	bl	10814 <printf@plt>
   10ac4:	b	10af8 <close@plt+0x1b8>
   10ac8:	mov	r0, #0
   10acc:	bl	10820 <time@plt>
   10ad0:	sub	r5, r5, r0
   10ad4:	b	10a90 <close@plt+0x150>
   10ad8:	ldr	r6, [r4]
   10adc:	ldr	r0, [r4, #20]
   10ae0:	bl	1082c <inet_ntoa@plt>
   10ae4:	mov	r3, r0
   10ae8:	mov	r2, r5
   10aec:	mov	r1, r6
   10af0:	ldr	r0, [pc, #72]	; 10b40 <close@plt+0x200>
   10af4:	bl	10814 <printf@plt>
   10af8:	mov	r0, #0
   10afc:	add	sp, sp, #8
   10b00:	pop	{r4, r5, r6, pc}
   10b04:	ldr	r3, [r4, #24]
   10b08:	mov	r2, r5
   10b0c:	ldr	r1, [r4]
   10b10:	ldr	r0, [pc, #44]	; 10b44 <close@plt+0x204>
   10b14:	bl	10814 <printf@plt>
   10b18:	b	10af8 <close@plt+0x1b8>
   10b1c:	ldr	r3, [r4, #24]
   10b20:	ldr	r1, [r4]
   10b24:	ldrh	r2, [r4, #32]
   10b28:	str	r2, [sp]
   10b2c:	mov	r2, r5
   10b30:	ldr	r0, [pc, #16]	; 10b48 <close@plt+0x208>
   10b34:	bl	10814 <printf@plt>
   10b38:	b	10af8 <close@plt+0x1b8>
   10b3c:	andeq	r1, r1, ip, ror #1
   10b40:	andeq	r1, r1, ip, lsl #1
   10b44:	andeq	r1, r1, ip, lsr #1
   10b48:	andeq	r1, r1, ip, asr #1
   10b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b50:	sub	sp, sp, #133120	; 0x20800
   10b54:	sub	sp, sp, #260	; 0x104
   10b58:	mov	r4, r0
   10b5c:	mov	r5, r1
   10b60:	mov	r8, #12
   10b64:	ldr	r6, [pc, #1128]	; 10fd4 <close@plt+0x694>
   10b68:	ldr	sl, [pc, #1128]	; 10fd8 <close@plt+0x698>
   10b6c:	mov	r9, #10
   10b70:	mov	r7, #0
   10b74:	mov	r2, r6
   10b78:	mov	r1, r5
   10b7c:	mov	r0, r4
   10b80:	bl	10880 <getopt@plt>
   10b84:	cmn	r0, #1
   10b88:	beq	10be4 <close@plt+0x2a4>
   10b8c:	cmp	r0, #104	; 0x68
   10b90:	beq	10bb4 <close@plt+0x274>
   10b94:	cmp	r0, #116	; 0x74
   10b98:	beq	10bcc <close@plt+0x28c>
   10b9c:	cmp	r0, #63	; 0x3f
   10ba0:	beq	10bb4 <close@plt+0x274>
   10ba4:	ldr	r0, [pc, #1072]	; 10fdc <close@plt+0x69c>
   10ba8:	bl	10850 <puts@plt>
   10bac:	mov	r0, #1
   10bb0:	b	10bc0 <close@plt+0x280>
   10bb4:	ldr	r0, [pc, #1056]	; 10fdc <close@plt+0x69c>
   10bb8:	bl	10850 <puts@plt>
   10bbc:	mov	r0, #0
   10bc0:	add	sp, sp, #133120	; 0x20800
   10bc4:	add	sp, sp, #260	; 0x104
   10bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bcc:	mov	r2, r9
   10bd0:	mov	r1, r7
   10bd4:	ldr	r0, [sl]
   10bd8:	bl	107fc <strtol@plt>
   10bdc:	mov	r8, r0
   10be0:	b	10b74 <close@plt+0x234>
   10be4:	ldr	r3, [pc, #1012]	; 10fe0 <close@plt+0x6a0>
   10be8:	ldr	r3, [r3]
   10bec:	cmp	r4, r3
   10bf0:	ldrgt	r4, [r5, r3, lsl #2]
   10bf4:	ldrle	r4, [pc, #1000]	; 10fe4 <close@plt+0x6a4>
   10bf8:	mov	r1, #1000	; 0x3e8
   10bfc:	mov	r0, #1
   10c00:	bl	107f0 <mdnsd_new@plt>
   10c04:	str	r0, [sp, #8]
   10c08:	mov	r3, #1
   10c0c:	str	r3, [sp, #16]
   10c10:	mov	r2, #0
   10c14:	ldr	r1, [pc, #972]	; 10fe8 <close@plt+0x6a8>
   10c18:	mov	r0, #2
   10c1c:	bl	10910 <socket@plt>
   10c20:	subs	r7, r0, #0
   10c24:	blt	10d50 <close@plt+0x410>
   10c28:	mov	r3, #4
   10c2c:	str	r3, [sp]
   10c30:	add	r3, sp, #16
   10c34:	mov	r2, #15
   10c38:	mov	r1, #1
   10c3c:	mov	r0, r7
   10c40:	bl	10808 <setsockopt@plt>
   10c44:	cmp	r0, #0
   10c48:	bne	10d08 <close@plt+0x3c8>
   10c4c:	mov	r3, #4
   10c50:	str	r3, [sp]
   10c54:	add	r3, sp, #16
   10c58:	mov	r2, #2
   10c5c:	mov	r1, #1
   10c60:	mov	r0, r7
   10c64:	bl	10808 <setsockopt@plt>
   10c68:	cmp	r0, #0
   10c6c:	bne	10d28 <close@plt+0x3e8>
   10c70:	mov	r3, #0
   10c74:	str	r3, [sp, #32]
   10c78:	str	r3, [sp, #36]	; 0x24
   10c7c:	str	r3, [sp, #40]	; 0x28
   10c80:	add	r3, sp, #32
   10c84:	mov	r2, #2
   10c88:	strh	r2, [r3, #-4]
   10c8c:	ldr	r2, [pc, #856]	; 10fec <close@plt+0x6ac>
   10c90:	strh	r2, [r3, #-2]
   10c94:	mov	r2, #16
   10c98:	add	r1, sp, #28
   10c9c:	mov	r0, r7
   10ca0:	bl	108b0 <bind@plt>
   10ca4:	cmp	r0, #0
   10ca8:	bne	10d48 <close@plt+0x408>
   10cac:	ldr	r0, [pc, #828]	; 10ff0 <close@plt+0x6b0>
   10cb0:	bl	10928 <inet_addr@plt>
   10cb4:	str	r0, [sp, #20]
   10cb8:	mov	r1, #0
   10cbc:	str	r1, [sp, #24]
   10cc0:	mov	r3, #8
   10cc4:	str	r3, [sp]
   10cc8:	add	r3, sp, #20
   10ccc:	mov	r2, #35	; 0x23
   10cd0:	mov	r0, r7
   10cd4:	bl	10808 <setsockopt@plt>
   10cd8:	cmp	r0, #0
   10cdc:	bne	10ee8 <close@plt+0x5a8>
   10ce0:	cmn	r7, #1
   10ce4:	bne	10d54 <close@plt+0x414>
   10ce8:	bl	108a4 <__errno_location@plt>
   10cec:	ldr	r0, [r0]
   10cf0:	bl	10868 <strerror@plt>
   10cf4:	mov	r1, r0
   10cf8:	ldr	r0, [pc, #756]	; 10ff4 <close@plt+0x6b4>
   10cfc:	bl	10814 <printf@plt>
   10d00:	mov	r0, #1
   10d04:	b	10bc0 <close@plt+0x280>
   10d08:	bl	108a4 <__errno_location@plt>
   10d0c:	ldr	r0, [r0]
   10d10:	bl	10868 <strerror@plt>
   10d14:	mov	r2, r0
   10d18:	ldr	r1, [pc, #728]	; 10ff8 <close@plt+0x6b8>
   10d1c:	mov	r0, #4
   10d20:	bl	108bc <mdnsd_log@plt>
   10d24:	b	10c4c <close@plt+0x30c>
   10d28:	bl	108a4 <__errno_location@plt>
   10d2c:	ldr	r0, [r0]
   10d30:	bl	10868 <strerror@plt>
   10d34:	mov	r2, r0
   10d38:	ldr	r1, [pc, #700]	; 10ffc <close@plt+0x6bc>
   10d3c:	mov	r0, #4
   10d40:	bl	108bc <mdnsd_log@plt>
   10d44:	b	10c70 <close@plt+0x330>
   10d48:	mov	r0, r7
   10d4c:	bl	10940 <close@plt>
   10d50:	mov	r7, #0
   10d54:	mov	r2, r4
   10d58:	mov	r1, r8
   10d5c:	ldr	r0, [pc, #668]	; 11000 <close@plt+0x6c0>
   10d60:	bl	10814 <printf@plt>
   10d64:	mov	r3, #0
   10d68:	str	r3, [sp]
   10d6c:	ldr	r3, [pc, #656]	; 11004 <close@plt+0x6c4>
   10d70:	mov	r2, r8
   10d74:	mov	r1, r4
   10d78:	ldr	r0, [sp, #8]
   10d7c:	bl	1091c <mdnsd_query@plt>
   10d80:	add	fp, r7, #31
   10d84:	cmp	r7, #0
   10d88:	movge	fp, r7
   10d8c:	asr	fp, fp, #5
   10d90:	rsbs	r2, r7, #0
   10d94:	and	r3, r7, #31
   10d98:	and	r2, r2, #31
   10d9c:	rsbpl	r3, r2, #0
   10da0:	mov	r2, #1
   10da4:	lsl	sl, r2, r3
   10da8:	add	r6, sp, #168	; 0xa8
   10dac:	add	r3, sp, #2304	; 0x900
   10db0:	add	fp, r3, fp, lsl #2
   10db4:	sub	r3, r3, #2112	; 0x840
   10db8:	sub	r3, r3, #4
   10dbc:	str	r3, [sp, #12]
   10dc0:	ldr	r0, [sp, #8]
   10dc4:	bl	108e0 <mdnsd_sleep@plt>
   10dc8:	add	r3, sp, #40	; 0x28
   10dcc:	mov	r2, #0
   10dd0:	str	r2, [r3, #4]!
   10dd4:	cmp	r3, r6
   10dd8:	bne	10dd0 <close@plt+0x490>
   10ddc:	ldr	r3, [fp, #-2260]	; 0xfffff72c
   10de0:	orr	r3, r3, sl
   10de4:	str	r3, [fp, #-2260]	; 0xfffff72c
   10de8:	str	r0, [sp]
   10dec:	mov	r3, #0
   10df0:	mov	r2, r3
   10df4:	add	r1, sp, #44	; 0x2c
   10df8:	add	r0, r7, #1
   10dfc:	bl	10838 <select@plt>
   10e00:	ldr	r3, [fp, #-2260]	; 0xfffff72c
   10e04:	tst	sl, r3
   10e08:	bne	10f08 <close@plt+0x5c8>
   10e0c:	add	r5, sp, #172	; 0xac
   10e10:	add	r8, sp, #176	; 0xb0
   10e14:	add	r3, sp, #65536	; 0x10000
   10e18:	add	r3, r3, #210	; 0xd2
   10e1c:	add	r2, sp, #65536	; 0x10000
   10e20:	add	r2, r2, #256	; 0x100
   10e24:	sub	r2, r2, #44	; 0x2c
   10e28:	add	r1, sp, #65536	; 0x10000
   10e2c:	add	r1, r1, #256	; 0x100
   10e30:	sub	r1, r1, #40	; 0x28
   10e34:	ldr	r0, [sp, #8]
   10e38:	bl	10904 <mdnsd_out@plt>
   10e3c:	cmp	r0, #0
   10e40:	beq	10dc0 <close@plt+0x480>
   10e44:	mov	r4, #0
   10e48:	str	r4, [r5, #8]
   10e4c:	str	r4, [r5, #12]
   10e50:	mov	r3, #2
   10e54:	strh	r3, [r8, #-4]
   10e58:	add	r3, sp, #67584	; 0x10800
   10e5c:	add	r3, r3, #256	; 0x100
   10e60:	sub	r2, r3, #2080	; 0x820
   10e64:	ldrh	r2, [r2, #-14]
   10e68:	strh	r2, [r8, #-2]
   10e6c:	ldr	r3, [r3, #-2092]	; 0xfffff7d4
   10e70:	str	r3, [sp, #176]	; 0xb0
   10e74:	add	r0, sp, #65536	; 0x10000
   10e78:	add	r0, r0, #216	; 0xd8
   10e7c:	bl	1088c <message_packet@plt>
   10e80:	mov	r9, r0
   10e84:	add	r0, sp, #65536	; 0x10000
   10e88:	add	r0, r0, #216	; 0xd8
   10e8c:	bl	108ec <message_packet_len@plt>
   10e90:	mov	r3, #16
   10e94:	str	r3, [sp, #4]
   10e98:	str	r5, [sp]
   10e9c:	mov	r3, r4
   10ea0:	mov	r2, r0
   10ea4:	mov	r1, r9
   10ea8:	mov	r0, r7
   10eac:	bl	108d4 <sendto@plt>
   10eb0:	mov	r4, r0
   10eb4:	add	r0, sp, #65536	; 0x10000
   10eb8:	add	r0, r0, #216	; 0xd8
   10ebc:	bl	108ec <message_packet_len@plt>
   10ec0:	cmp	r4, r0
   10ec4:	beq	10e14 <close@plt+0x4d4>
   10ec8:	bl	108a4 <__errno_location@plt>
   10ecc:	ldr	r0, [r0]
   10ed0:	bl	10868 <strerror@plt>
   10ed4:	mov	r1, r0
   10ed8:	ldr	r0, [pc, #296]	; 11008 <close@plt+0x6c8>
   10edc:	bl	10814 <printf@plt>
   10ee0:	mov	r0, #1
   10ee4:	b	10bc0 <close@plt+0x280>
   10ee8:	bl	108a4 <__errno_location@plt>
   10eec:	ldr	r0, [r0]
   10ef0:	bl	10868 <strerror@plt>
   10ef4:	mov	r2, r0
   10ef8:	ldr	r1, [pc, #268]	; 1100c <close@plt+0x6cc>
   10efc:	mov	r0, #4
   10f00:	bl	108bc <mdnsd_log@plt>
   10f04:	b	10ce0 <close@plt+0x3a0>
   10f08:	mov	r2, #16
   10f0c:	add	r3, sp, #67584	; 0x10800
   10f10:	add	r3, r3, #256	; 0x100
   10f14:	str	r2, [r3, #-2100]	; 0xfffff7cc
   10f18:	add	r8, sp, #188	; 0xbc
   10f1c:	ldr	r5, [pc, #236]	; 11010 <close@plt+0x6d0>
   10f20:	add	r3, sp, #65536	; 0x10000
   10f24:	add	r3, r3, #256	; 0x100
   10f28:	sub	r4, r3, #52	; 0x34
   10f2c:	ldr	r9, [pc, #224]	; 11014 <close@plt+0x6d4>
   10f30:	str	r4, [sp, #4]
   10f34:	str	r8, [sp]
   10f38:	mov	r3, #0
   10f3c:	mov	r2, r5
   10f40:	add	r1, sp, #204	; 0xcc
   10f44:	mov	r0, r7
   10f48:	bl	10844 <recvfrom@plt>
   10f4c:	cmp	r0, #0
   10f50:	ble	10fa0 <close@plt+0x660>
   10f54:	mov	r2, r9
   10f58:	mov	r1, #0
   10f5c:	add	r0, sp, #65536	; 0x10000
   10f60:	add	r0, r0, #216	; 0xd8
   10f64:	bl	108c8 <memset@plt>
   10f68:	add	r1, sp, #204	; 0xcc
   10f6c:	add	r0, sp, #65536	; 0x10000
   10f70:	add	r0, r0, #216	; 0xd8
   10f74:	bl	10898 <message_parse@plt>
   10f78:	cmp	r0, #0
   10f7c:	bne	10f30 <close@plt+0x5f0>
   10f80:	ldr	r3, [sp, #12]
   10f84:	ldrh	r3, [r3, #2]
   10f88:	ldr	r2, [sp, #192]	; 0xc0
   10f8c:	add	r1, sp, #65536	; 0x10000
   10f90:	add	r1, r1, #216	; 0xd8
   10f94:	ldr	r0, [sp, #8]
   10f98:	bl	108f8 <mdnsd_in@plt>
   10f9c:	b	10f20 <close@plt+0x5e0>
   10fa0:	bge	10e0c <close@plt+0x4cc>
   10fa4:	bl	108a4 <__errno_location@plt>
   10fa8:	ldr	r4, [r0]
   10fac:	cmp	r4, #11
   10fb0:	beq	10e0c <close@plt+0x4cc>
   10fb4:	mov	r0, r4
   10fb8:	bl	10868 <strerror@plt>
   10fbc:	mov	r2, r0
   10fc0:	mov	r1, r4
   10fc4:	ldr	r0, [pc, #76]	; 11018 <close@plt+0x6d8>
   10fc8:	bl	10814 <printf@plt>
   10fcc:	mov	r0, #1
   10fd0:	b	10bc0 <close@plt+0x280>
   10fd4:	andeq	r1, r1, r4, asr r1
   10fd8:	muleq	r2, r8, r0
   10fdc:	andeq	r1, r1, r0, lsr r1
   10fe0:	muleq	r2, r0, r0
   10fe4:	andeq	r1, r1, r0, lsl r1
   10fe8:	andeq	r0, r0, r2, lsl #16
   10fec:			; <UNDEFINED> instruction: 0xffffe914
   10ff0:	muleq	r1, ip, r1
   10ff4:	ldrdeq	r1, [r1], -r4
   10ff8:	andeq	r1, r1, ip, asr r1
   10ffc:	andeq	r1, r1, ip, ror r1
   11000:	strdeq	r1, [r1], -ip
   11004:	andeq	r0, r1, r4, ror sl
   11008:	andeq	r1, r1, r0, asr #4
   1100c:	andeq	r1, r1, r8, lsr #3
   11010:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   11014:	andeq	r0, r1, r8, lsr #16
   11018:	andeq	r1, r1, ip, lsl r2
   1101c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11020:	mov	r7, r0
   11024:	ldr	r6, [pc, #72]	; 11074 <close@plt+0x734>
   11028:	ldr	r5, [pc, #72]	; 11078 <close@plt+0x738>
   1102c:	add	r6, pc, r6
   11030:	add	r5, pc, r5
   11034:	sub	r6, r6, r5
   11038:	mov	r8, r1
   1103c:	mov	r9, r2
   11040:	bl	107d0 <mdnsd_new@plt-0x20>
   11044:	asrs	r6, r6, #2
   11048:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1104c:	mov	r4, #0
   11050:	add	r4, r4, #1
   11054:	ldr	r3, [r5], #4
   11058:	mov	r2, r9
   1105c:	mov	r1, r8
   11060:	mov	r0, r7
   11064:	blx	r3
   11068:	cmp	r6, r4
   1106c:	bne	11050 <close@plt+0x710>
   11070:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11074:	ldrdeq	r0, [r1], -r4
   11078:	andeq	r0, r1, ip, asr #29
   1107c:	bx	lr

Disassembly of section .fini:

00011080 <.fini>:
   11080:	push	{r3, lr}
   11084:	pop	{r3, pc}
