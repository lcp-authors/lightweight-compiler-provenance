
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011b00 <.init>:
   11b00:	push	{r3, lr}
   11b04:	bl	123bc <_start@@Base+0x3c>
   11b08:	pop	{r3, pc}

Disassembly of section .plt:

00011b0c <strcmp@plt-0x14>:
   11b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b10:	ldr	lr, [pc, #4]	; 11b1c <strcmp@plt-0x4>
   11b14:	add	lr, pc, lr
   11b18:	ldr	pc, [lr, #8]!
   11b1c:	andeq	r5, r1, r4, ror #9

00011b20 <strcmp@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #86016	; 0x15000
   11b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b2c <printf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #86016	; 0x15000
   11b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b38 <free@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #86016	; 0x15000
   11b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b44 <time@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #86016	; 0x15000
   11b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b50 <realloc@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #86016	; 0x15000
   11b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b5c <strcpy@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #86016	; 0x15000
   11b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00011b68 <malloc@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #86016	; 0x15000
   11b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00011b74 <__libc_start_main@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #86016	; 0x15000
   11b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00011b80 <__gmon_start__@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #86016	; 0x15000
   11b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00011b8c <strlen@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #86016	; 0x15000
   11b94:	ldr	pc, [ip, #1180]!	; 0x49c

00011b98 <srand@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #86016	; 0x15000
   11ba0:	ldr	pc, [ip, #1172]!	; 0x494

00011ba4 <snprintf@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #86016	; 0x15000
   11bac:	ldr	pc, [ip, #1164]!	; 0x48c

00011bb0 <__isoc99_sscanf@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #86016	; 0x15000
   11bb8:	ldr	pc, [ip, #1156]!	; 0x484

00011bbc <strncpy@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #86016	; 0x15000
   11bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00011bc8 <rand@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #86016	; 0x15000
   11bd0:	ldr	pc, [ip, #1140]!	; 0x474

00011bd4 <abort@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #86016	; 0x15000
   11bdc:	ldr	pc, [ip, #1132]!	; 0x46c

Disassembly of section .text:

00011be0 <main@@Base>:
   11be0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11be4:	mov	r4, #0
   11be8:	strd	r6, [sp, #8]
   11bec:	movw	r6, #25612	; 0x640c
   11bf0:	movt	r6, #1
   11bf4:	strd	r8, [sp, #16]
   11bf8:	strd	sl, [sp, #24]
   11bfc:	str	lr, [sp, #32]
   11c00:	vpush	{d8}
   11c04:	sub	sp, sp, #99328	; 0x18400
   11c08:	sub	sp, sp, #748	; 0x2ec
   11c0c:	add	r0, sp, #12
   11c10:	bl	11b44 <time@plt>
   11c14:	add	r3, sp, #16
   11c18:	str	r3, [sp]
   11c1c:	bl	11b98 <srand@plt>
   11c20:	bl	11bc8 <rand@plt>
   11c24:	mov	r9, r0
   11c28:	asr	r5, r0, #31
   11c2c:	ldr	r0, [sp]
   11c30:	bl	125ec <table_init@@Base>
   11c34:	mov	r2, r4
   11c38:	movw	r1, #25544	; 0x63c8
   11c3c:	movt	r1, #1
   11c40:	ldr	r0, [sp]
   11c44:	bl	12fe8 <table_add_column@@Base>
   11c48:	mov	r8, r0
   11c4c:	mov	r2, #21
   11c50:	ldr	r0, [sp]
   11c54:	movw	r1, #25548	; 0x63cc
   11c58:	movt	r1, #1
   11c5c:	bl	12fe8 <table_add_column@@Base>
   11c60:	movw	r3, #34079	; 0x851f
   11c64:	movt	r3, #20971	; 0x51eb
   11c68:	mov	r2, #100	; 0x64
   11c6c:	mov	r7, r0
   11c70:	smull	r1, r3, r3, r9
   11c74:	rsb	r5, r5, r3, asr #5
   11c78:	mls	r5, r2, r5, r9
   11c7c:	add	r5, r5, r2
   11c80:	mov	r3, r4
   11c84:	mov	r2, r6
   11c88:	mov	r1, #255	; 0xff
   11c8c:	add	r0, sp, #72	; 0x48
   11c90:	bl	11ba4 <snprintf@plt>
   11c94:	ldr	r0, [sp]
   11c98:	bl	13d94 <table_add_row@@Base>
   11c9c:	mov	r3, r4
   11ca0:	mov	r1, r4
   11ca4:	ldr	r0, [sp]
   11ca8:	mov	r2, r8
   11cac:	bl	143a4 <table_set_int@@Base>
   11cb0:	mov	r1, r4
   11cb4:	add	r3, sp, #72	; 0x48
   11cb8:	ldr	r0, [sp]
   11cbc:	mov	r2, r7
   11cc0:	add	r4, r4, #1
   11cc4:	bl	14f4c <table_set_string@@Base>
   11cc8:	cmp	r4, r5
   11ccc:	bne	11c80 <main@@Base+0xa0>
   11cd0:	add	r1, sp, #72	; 0x48
   11cd4:	movw	r2, #34464	; 0x86a0
   11cd8:	movt	r2, #1
   11cdc:	ldr	r0, [sp]
   11ce0:	bl	15194 <table_serialize@@Base>
   11ce4:	add	r0, sp, #72	; 0x48
   11ce8:	movw	r1, #34464	; 0x86a0
   11cec:	movt	r1, #1
   11cf0:	bl	15470 <table_deserialize@@Base>
   11cf4:	mov	r6, r0
   11cf8:	ldr	r0, [sp]
   11cfc:	bl	13d8c <table_get_row_length@@Base>
   11d00:	mov	r4, r0
   11d04:	mov	r0, r6
   11d08:	bl	13d8c <table_get_row_length@@Base>
   11d0c:	cmp	r4, r0
   11d10:	mov	r7, r0
   11d14:	bne	12328 <main@@Base+0x748>
   11d18:	ldr	r0, [sp]
   11d1c:	bl	12f50 <table_get_column_length@@Base>
   11d20:	mov	r8, r0
   11d24:	mov	r0, r6
   11d28:	bl	12f50 <table_get_column_length@@Base>
   11d2c:	cmp	r8, r0
   11d30:	mov	r5, r0
   11d34:	bne	1235c <main@@Base+0x77c>
   11d38:	cmp	r4, #0
   11d3c:	mov	sl, #0
   11d40:	ble	11e24 <main@@Base+0x244>
   11d44:	movw	r3, #25680	; 0x6450
   11d48:	movt	r3, #1
   11d4c:	mov	r4, sl
   11d50:	str	r3, [sp, #4]
   11d54:	cmp	r5, #0
   11d58:	movgt	fp, #0
   11d5c:	ble	11e18 <main@@Base+0x238>
   11d60:	mov	r1, fp
   11d64:	ldr	r0, [sp]
   11d68:	bl	12fd4 <table_get_column_data_type@@Base>
   11d6c:	cmp	r0, #23
   11d70:	ldrls	pc, [pc, r0, lsl #2]
   11d74:	b	11e0c <main@@Base+0x22c>
   11d78:	andeq	r2, r1, r8, asr #5
   11d7c:	strdeq	r2, [r1], -r8
   11d80:	muleq	r1, r8, r2
   11d84:	andeq	r2, r1, r8, ror #4
   11d88:	andeq	r2, r1, r8, lsr r2
   11d8c:	andeq	r2, r1, r8, lsl #4
   11d90:	ldrdeq	r2, [r1], -r8
   11d94:	andeq	r2, r1, r8, lsr #3
   11d98:	andeq	r2, r1, ip, ror #2
   11d9c:	andeq	r2, r1, r0, lsr r1
   11da0:	andeq	r2, r1, r0, lsl #2
   11da4:	ldrdeq	r2, [r1], -r0
   11da8:	andeq	r2, r1, r0, lsr #1
   11dac:	andeq	r2, r1, r0, ror r0
   11db0:	andeq	r2, r1, r4, lsr r0
   11db4:	strdeq	r1, [r1], -r8
   11db8:	andeq	r1, r1, r0, asr #31
   11dbc:	andeq	r1, r1, r8, lsl #31
   11dc0:	andeq	r1, r1, r0, asr pc
   11dc4:	andeq	r1, r1, r4, ror #29
   11dc8:			; <UNDEFINED> instruction: 0x00011eb4
   11dcc:	andeq	r1, r1, r4, lsl pc
   11dd0:	andeq	r1, r1, ip, asr lr
   11dd4:	ldrdeq	r1, [r1], -r8
   11dd8:	mov	r2, fp
   11ddc:	mov	r1, r4
   11de0:	ldr	r0, [sp]
   11de4:	bl	13cbc <table_get_ptr@@Base>
   11de8:	mov	r8, r0
   11dec:	mov	r2, fp
   11df0:	mov	r1, r4
   11df4:	mov	r0, r6
   11df8:	bl	13cbc <table_get_ptr@@Base>
   11dfc:	subs	r0, r8, r0
   11e00:	movne	r0, #1
   11e04:	cmp	r0, #0
   11e08:	bne	11e90 <main@@Base+0x2b0>
   11e0c:	add	fp, fp, #1
   11e10:	cmp	fp, r5
   11e14:	bne	11d60 <main@@Base+0x180>
   11e18:	add	r4, r4, #1
   11e1c:	cmp	r7, r4
   11e20:	bne	11d54 <main@@Base+0x174>
   11e24:	ldr	r0, [sp]
   11e28:	bl	1262c <table_destroy@@Base>
   11e2c:	mov	r0, r6
   11e30:	bl	125c4 <table_delete@@Base>
   11e34:	mov	r0, sl
   11e38:	add	sp, sp, #99328	; 0x18400
   11e3c:	add	sp, sp, #748	; 0x2ec
   11e40:	vpop	{d8}
   11e44:	ldrd	r4, [sp]
   11e48:	ldrd	r6, [sp, #8]
   11e4c:	ldrd	r8, [sp, #16]
   11e50:	ldrd	sl, [sp, #24]
   11e54:	add	sp, sp, #32
   11e58:	pop	{pc}		; (ldr pc, [sp], #4)
   11e5c:	mov	r2, fp
   11e60:	mov	r1, r4
   11e64:	ldr	r0, [sp]
   11e68:	bl	139e0 <table_get_bool@@Base>
   11e6c:	mov	r8, r0
   11e70:	mov	r2, fp
   11e74:	mov	r1, r4
   11e78:	mov	r0, r6
   11e7c:	bl	139e0 <table_get_bool@@Base>
   11e80:	eor	r0, r0, r8
   11e84:	uxtb	r0, r0
   11e88:	cmp	r0, #0
   11e8c:	beq	11e0c <main@@Base+0x22c>
   11e90:	mov	r1, r4
   11e94:	mov	r2, fp
   11e98:	ldr	r0, [sp, #4]
   11e9c:	add	r4, r4, #1
   11ea0:	mvn	sl, #0
   11ea4:	bl	11b2c <printf@plt>
   11ea8:	cmp	r7, r4
   11eac:	bne	11d54 <main@@Base+0x174>
   11eb0:	b	11e24 <main@@Base+0x244>
   11eb4:	mov	r2, fp
   11eb8:	mov	r1, r4
   11ebc:	ldr	r0, [sp]
   11ec0:	bl	13c80 <table_get_uchar@@Base>
   11ec4:	mov	r8, r0
   11ec8:	mov	r2, fp
   11ecc:	mov	r1, r4
   11ed0:	mov	r0, r6
   11ed4:	bl	13c80 <table_get_uchar@@Base>
   11ed8:	subs	r0, r8, r0
   11edc:	movne	r0, #1
   11ee0:	b	11e04 <main@@Base+0x224>
   11ee4:	mov	r2, fp
   11ee8:	mov	r1, r4
   11eec:	ldr	r0, [sp]
   11ef0:	bl	13c60 <table_get_char@@Base>
   11ef4:	mov	r8, r0
   11ef8:	mov	r2, fp
   11efc:	mov	r1, r4
   11f00:	mov	r0, r6
   11f04:	bl	13c60 <table_get_char@@Base>
   11f08:	subs	r0, r8, r0
   11f0c:	movne	r0, #1
   11f10:	b	11e04 <main@@Base+0x224>
   11f14:	mov	r2, fp
   11f18:	mov	r1, r4
   11f1c:	ldr	r0, [sp]
   11f20:	bl	13ca0 <table_get_string@@Base>
   11f24:	mov	r8, r0
   11f28:	mov	r2, fp
   11f2c:	mov	r1, r4
   11f30:	mov	r0, r6
   11f34:	bl	13ca0 <table_get_string@@Base>
   11f38:	mov	r1, r0
   11f3c:	mov	r0, r8
   11f40:	bl	11b20 <strcmp@plt>
   11f44:	adds	r0, r0, #0
   11f48:	movne	r0, #1
   11f4c:	b	11e04 <main@@Base+0x224>
   11f50:	mov	r2, fp
   11f54:	mov	r1, r4
   11f58:	ldr	r0, [sp]
   11f5c:	bl	13c40 <table_get_ldouble@@Base>
   11f60:	vmov.f64	d8, d0
   11f64:	mov	r0, r6
   11f68:	mov	r2, fp
   11f6c:	mov	r1, r4
   11f70:	bl	13c40 <table_get_ldouble@@Base>
   11f74:	vcmp.f64	d8, d0
   11f78:	vmrs	APSR_nzcv, fpscr
   11f7c:	movne	r0, #1
   11f80:	moveq	r0, #0
   11f84:	b	11e04 <main@@Base+0x224>
   11f88:	mov	r2, fp
   11f8c:	mov	r1, r4
   11f90:	ldr	r0, [sp]
   11f94:	bl	13c20 <table_get_double@@Base>
   11f98:	vmov.f64	d8, d0
   11f9c:	mov	r0, r6
   11fa0:	mov	r2, fp
   11fa4:	mov	r1, r4
   11fa8:	bl	13c20 <table_get_double@@Base>
   11fac:	vcmp.f64	d8, d0
   11fb0:	vmrs	APSR_nzcv, fpscr
   11fb4:	movne	r0, #1
   11fb8:	moveq	r0, #0
   11fbc:	b	11e04 <main@@Base+0x224>
   11fc0:	mov	r2, fp
   11fc4:	mov	r1, r4
   11fc8:	ldr	r0, [sp]
   11fcc:	bl	13c00 <table_get_float@@Base>
   11fd0:	vmov.f32	s16, s0
   11fd4:	mov	r0, r6
   11fd8:	mov	r2, fp
   11fdc:	mov	r1, r4
   11fe0:	bl	13c00 <table_get_float@@Base>
   11fe4:	vcmp.f32	s16, s0
   11fe8:	vmrs	APSR_nzcv, fpscr
   11fec:	movne	r0, #1
   11ff0:	moveq	r0, #0
   11ff4:	b	11e04 <main@@Base+0x224>
   11ff8:	mov	r2, fp
   11ffc:	mov	r1, r4
   12000:	ldr	r0, [sp]
   12004:	bl	13be0 <table_get_ullong@@Base>
   12008:	mov	r8, r0
   1200c:	mov	r9, r1
   12010:	mov	r2, fp
   12014:	mov	r1, r4
   12018:	mov	r0, r6
   1201c:	bl	13be0 <table_get_ullong@@Base>
   12020:	cmp	r9, r1
   12024:	cmpeq	r8, r0
   12028:	movne	r0, #1
   1202c:	moveq	r0, #0
   12030:	b	11e04 <main@@Base+0x224>
   12034:	mov	r2, fp
   12038:	mov	r1, r4
   1203c:	ldr	r0, [sp]
   12040:	bl	13bc0 <table_get_llong@@Base>
   12044:	mov	r8, r0
   12048:	mov	r9, r1
   1204c:	mov	r2, fp
   12050:	mov	r1, r4
   12054:	mov	r0, r6
   12058:	bl	13bc0 <table_get_llong@@Base>
   1205c:	cmp	r9, r1
   12060:	cmpeq	r8, r0
   12064:	movne	r0, #1
   12068:	moveq	r0, #0
   1206c:	b	11e04 <main@@Base+0x224>
   12070:	mov	r2, fp
   12074:	mov	r1, r4
   12078:	ldr	r0, [sp]
   1207c:	bl	13ba0 <table_get_ulong@@Base>
   12080:	mov	r8, r0
   12084:	mov	r2, fp
   12088:	mov	r1, r4
   1208c:	mov	r0, r6
   12090:	bl	13ba0 <table_get_ulong@@Base>
   12094:	subs	r0, r8, r0
   12098:	movne	r0, #1
   1209c:	b	11e04 <main@@Base+0x224>
   120a0:	mov	r2, fp
   120a4:	mov	r1, r4
   120a8:	ldr	r0, [sp]
   120ac:	bl	13b80 <table_get_long@@Base>
   120b0:	mov	r8, r0
   120b4:	mov	r2, fp
   120b8:	mov	r1, r4
   120bc:	mov	r0, r6
   120c0:	bl	13b80 <table_get_long@@Base>
   120c4:	subs	r0, r8, r0
   120c8:	movne	r0, #1
   120cc:	b	11e04 <main@@Base+0x224>
   120d0:	mov	r2, fp
   120d4:	mov	r1, r4
   120d8:	ldr	r0, [sp]
   120dc:	bl	13b60 <table_get_ushort@@Base>
   120e0:	mov	r8, r0
   120e4:	mov	r2, fp
   120e8:	mov	r1, r4
   120ec:	mov	r0, r6
   120f0:	bl	13b60 <table_get_ushort@@Base>
   120f4:	subs	r0, r8, r0
   120f8:	movne	r0, #1
   120fc:	b	11e04 <main@@Base+0x224>
   12100:	mov	r2, fp
   12104:	mov	r1, r4
   12108:	ldr	r0, [sp]
   1210c:	bl	13b40 <table_get_short@@Base>
   12110:	mov	r8, r0
   12114:	mov	r2, fp
   12118:	mov	r1, r4
   1211c:	mov	r0, r6
   12120:	bl	13b40 <table_get_short@@Base>
   12124:	subs	r0, r8, r0
   12128:	movne	r0, #1
   1212c:	b	11e04 <main@@Base+0x224>
   12130:	mov	r2, fp
   12134:	mov	r1, r4
   12138:	ldr	r0, [sp]
   1213c:	bl	13b20 <table_get_uint64@@Base>
   12140:	mov	r8, r0
   12144:	mov	r9, r1
   12148:	mov	r2, fp
   1214c:	mov	r1, r4
   12150:	mov	r0, r6
   12154:	bl	13b20 <table_get_uint64@@Base>
   12158:	cmp	r9, r1
   1215c:	cmpeq	r8, r0
   12160:	movne	r0, #1
   12164:	moveq	r0, #0
   12168:	b	11e04 <main@@Base+0x224>
   1216c:	mov	r2, fp
   12170:	mov	r1, r4
   12174:	ldr	r0, [sp]
   12178:	bl	13b00 <table_get_int64@@Base>
   1217c:	mov	r8, r0
   12180:	mov	r9, r1
   12184:	mov	r2, fp
   12188:	mov	r1, r4
   1218c:	mov	r0, r6
   12190:	bl	13b00 <table_get_int64@@Base>
   12194:	cmp	r9, r1
   12198:	cmpeq	r8, r0
   1219c:	movne	r0, #1
   121a0:	moveq	r0, #0
   121a4:	b	11e04 <main@@Base+0x224>
   121a8:	mov	r2, fp
   121ac:	mov	r1, r4
   121b0:	ldr	r0, [sp]
   121b4:	bl	13ae0 <table_get_uint32@@Base>
   121b8:	mov	r8, r0
   121bc:	mov	r2, fp
   121c0:	mov	r1, r4
   121c4:	mov	r0, r6
   121c8:	bl	13ae0 <table_get_uint32@@Base>
   121cc:	subs	r0, r8, r0
   121d0:	movne	r0, #1
   121d4:	b	11e04 <main@@Base+0x224>
   121d8:	mov	r2, fp
   121dc:	mov	r1, r4
   121e0:	ldr	r0, [sp]
   121e4:	bl	13ac0 <table_get_int32@@Base>
   121e8:	mov	r8, r0
   121ec:	mov	r2, fp
   121f0:	mov	r1, r4
   121f4:	mov	r0, r6
   121f8:	bl	13ac0 <table_get_int32@@Base>
   121fc:	subs	r0, r8, r0
   12200:	movne	r0, #1
   12204:	b	11e04 <main@@Base+0x224>
   12208:	mov	r2, fp
   1220c:	mov	r1, r4
   12210:	ldr	r0, [sp]
   12214:	bl	13aa0 <table_get_uint16@@Base>
   12218:	mov	r8, r0
   1221c:	mov	r2, fp
   12220:	mov	r1, r4
   12224:	mov	r0, r6
   12228:	bl	13aa0 <table_get_uint16@@Base>
   1222c:	subs	r0, r8, r0
   12230:	movne	r0, #1
   12234:	b	11e04 <main@@Base+0x224>
   12238:	mov	r2, fp
   1223c:	mov	r1, r4
   12240:	ldr	r0, [sp]
   12244:	bl	13a80 <table_get_int16@@Base>
   12248:	mov	r8, r0
   1224c:	mov	r2, fp
   12250:	mov	r1, r4
   12254:	mov	r0, r6
   12258:	bl	13a80 <table_get_int16@@Base>
   1225c:	subs	r0, r8, r0
   12260:	movne	r0, #1
   12264:	b	11e04 <main@@Base+0x224>
   12268:	mov	r2, fp
   1226c:	mov	r1, r4
   12270:	ldr	r0, [sp]
   12274:	bl	13a60 <table_get_uint8@@Base>
   12278:	mov	r8, r0
   1227c:	mov	r2, fp
   12280:	mov	r1, r4
   12284:	mov	r0, r6
   12288:	bl	13a60 <table_get_uint8@@Base>
   1228c:	subs	r0, r8, r0
   12290:	movne	r0, #1
   12294:	b	11e04 <main@@Base+0x224>
   12298:	mov	r2, fp
   1229c:	mov	r1, r4
   122a0:	ldr	r0, [sp]
   122a4:	bl	13a40 <table_get_int8@@Base>
   122a8:	mov	r8, r0
   122ac:	mov	r2, fp
   122b0:	mov	r1, r4
   122b4:	mov	r0, r6
   122b8:	bl	13a40 <table_get_int8@@Base>
   122bc:	subs	r0, r8, r0
   122c0:	movne	r0, #1
   122c4:	b	11e04 <main@@Base+0x224>
   122c8:	mov	r2, fp
   122cc:	mov	r1, r4
   122d0:	ldr	r0, [sp]
   122d4:	bl	13a00 <table_get_int@@Base>
   122d8:	mov	r8, r0
   122dc:	mov	r2, fp
   122e0:	mov	r1, r4
   122e4:	mov	r0, r6
   122e8:	bl	13a00 <table_get_int@@Base>
   122ec:	subs	r0, r8, r0
   122f0:	movne	r0, #1
   122f4:	b	11e04 <main@@Base+0x224>
   122f8:	mov	r2, fp
   122fc:	mov	r1, r4
   12300:	ldr	r0, [sp]
   12304:	bl	13a20 <table_get_uint@@Base>
   12308:	mov	r8, r0
   1230c:	mov	r2, fp
   12310:	mov	r1, r4
   12314:	mov	r0, r6
   12318:	bl	13a20 <table_get_uint@@Base>
   1231c:	subs	r0, r8, r0
   12320:	movne	r0, #1
   12324:	b	11e04 <main@@Base+0x224>
   12328:	mov	r2, r0
   1232c:	mov	r1, r4
   12330:	movw	r0, #25556	; 0x63d4
   12334:	movt	r0, #1
   12338:	bl	11b2c <printf@plt>
   1233c:	ldr	r0, [sp]
   12340:	bl	12f50 <table_get_column_length@@Base>
   12344:	mov	r8, r0
   12348:	mov	r0, r6
   1234c:	bl	12f50 <table_get_column_length@@Base>
   12350:	cmp	r0, r8
   12354:	mov	r5, r0
   12358:	beq	12378 <main@@Base+0x798>
   1235c:	mov	r2, r5
   12360:	mov	r1, r8
   12364:	movw	r0, #25616	; 0x6410
   12368:	movt	r0, #1
   1236c:	bl	11b2c <printf@plt>
   12370:	mvn	sl, #0
   12374:	b	11e24 <main@@Base+0x244>
   12378:	mvn	sl, #0
   1237c:	b	11e24 <main@@Base+0x244>

00012380 <_start@@Base>:
   12380:	mov	fp, #0
   12384:	mov	lr, #0
   12388:	pop	{r1}		; (ldr r1, [sp], #4)
   1238c:	mov	r2, sp
   12390:	push	{r2}		; (str r2, [sp, #-4]!)
   12394:	push	{r0}		; (str r0, [sp, #-4]!)
   12398:	ldr	ip, [pc, #16]	; 123b0 <_start@@Base+0x30>
   1239c:	push	{ip}		; (str ip, [sp, #-4]!)
   123a0:	ldr	r0, [pc, #12]	; 123b4 <_start@@Base+0x34>
   123a4:	ldr	r3, [pc, #12]	; 123b8 <_start@@Base+0x38>
   123a8:	bl	11b74 <__libc_start_main@plt>
   123ac:	bl	11bd4 <abort@plt>
   123b0:			; <UNDEFINED> instruction: 0x000163b8
   123b4:	andeq	r1, r1, r0, ror #23
   123b8:	andeq	r6, r1, r8, asr r3
   123bc:	ldr	r3, [pc, #20]	; 123d8 <_start@@Base+0x58>
   123c0:	ldr	r2, [pc, #20]	; 123dc <_start@@Base+0x5c>
   123c4:	add	r3, pc, r3
   123c8:	ldr	r2, [r3, r2]
   123cc:	cmp	r2, #0
   123d0:	bxeq	lr
   123d4:	b	11b80 <__gmon_start__@plt>
   123d8:	andeq	r4, r1, r4, lsr ip
   123dc:	andeq	r0, r0, ip, asr #32
   123e0:	ldr	r0, [pc, #24]	; 12400 <_start@@Base+0x80>
   123e4:	ldr	r3, [pc, #24]	; 12404 <_start@@Base+0x84>
   123e8:	cmp	r3, r0
   123ec:	bxeq	lr
   123f0:	ldr	r3, [pc, #16]	; 12408 <_start@@Base+0x88>
   123f4:	cmp	r3, #0
   123f8:	bxeq	lr
   123fc:	bx	r3
   12400:	andeq	r7, r2, r8, asr r0
   12404:	andeq	r7, r2, r8, asr r0
   12408:	andeq	r0, r0, r0
   1240c:	ldr	r0, [pc, #36]	; 12438 <_start@@Base+0xb8>
   12410:	ldr	r1, [pc, #36]	; 1243c <_start@@Base+0xbc>
   12414:	sub	r1, r1, r0
   12418:	asr	r1, r1, #2
   1241c:	add	r1, r1, r1, lsr #31
   12420:	asrs	r1, r1, #1
   12424:	bxeq	lr
   12428:	ldr	r3, [pc, #16]	; 12440 <_start@@Base+0xc0>
   1242c:	cmp	r3, #0
   12430:	bxeq	lr
   12434:	bx	r3
   12438:	andeq	r7, r2, r8, asr r0
   1243c:	andeq	r7, r2, r8, asr r0
   12440:	andeq	r0, r0, r0
   12444:	push	{r4, lr}
   12448:	ldr	r4, [pc, #24]	; 12468 <_start@@Base+0xe8>
   1244c:	ldrb	r3, [r4]
   12450:	cmp	r3, #0
   12454:	popne	{r4, pc}
   12458:	bl	123e0 <_start@@Base+0x60>
   1245c:	mov	r3, #1
   12460:	strb	r3, [r4]
   12464:	pop	{r4, pc}
   12468:	andeq	r7, r2, r8, asr r0
   1246c:	b	1240c <_start@@Base+0x8c>
   12470:	mvn	r2, #0
   12474:	mov	r3, #64	; 0x40
   12478:	strd	r4, [sp, #-16]!
   1247c:	mov	r1, r2
   12480:	mov	r4, r0
   12484:	str	r6, [sp, #8]
   12488:	str	lr, [sp, #12]
   1248c:	bl	12e18 <table_notify@@Base>
   12490:	mov	r0, r4
   12494:	bl	13d8c <table_get_row_length@@Base>
   12498:	subs	r6, r0, #0
   1249c:	ble	124bc <_start@@Base+0x13c>
   124a0:	mov	r5, #0
   124a4:	mov	r1, r5
   124a8:	mov	r0, r4
   124ac:	add	r5, r5, #1
   124b0:	bl	13d0c <table_row_destroy@@Base>
   124b4:	cmp	r6, r5
   124b8:	bne	124a4 <_start@@Base+0x124>
   124bc:	ldr	r0, [r4, #16]
   124c0:	cmp	r0, #0
   124c4:	beq	124cc <_start@@Base+0x14c>
   124c8:	bl	11b38 <free@plt>
   124cc:	mov	r0, r4
   124d0:	bl	12f50 <table_get_column_length@@Base>
   124d4:	subs	r6, r0, #0
   124d8:	ble	124f8 <_start@@Base+0x178>
   124dc:	mov	r5, #0
   124e0:	mov	r1, r5
   124e4:	mov	r0, r4
   124e8:	add	r5, r5, #1
   124ec:	bl	12f34 <table_column_destroy@@Base>
   124f0:	cmp	r6, r5
   124f4:	bne	124e0 <_start@@Base+0x160>
   124f8:	ldr	r0, [r4]
   124fc:	cmp	r0, #0
   12500:	beq	12508 <_start@@Base+0x188>
   12504:	bl	11b38 <free@plt>
   12508:	ldr	r0, [r4, #36]	; 0x24
   1250c:	cmp	r0, #0
   12510:	beq	12518 <_start@@Base+0x198>
   12514:	bl	11b38 <free@plt>
   12518:	ldr	r0, [r4, #40]	; 0x28
   1251c:	cmp	r0, #0
   12520:	beq	12528 <_start@@Base+0x1a8>
   12524:	bl	11b38 <free@plt>
   12528:	ldr	r0, [r4, #44]	; 0x2c
   1252c:	cmp	r0, #0
   12530:	beq	12548 <_start@@Base+0x1c8>
   12534:	ldrd	r4, [sp]
   12538:	ldr	r6, [sp, #8]
   1253c:	ldr	lr, [sp, #12]
   12540:	add	sp, sp, #16
   12544:	b	11b38 <free@plt>
   12548:	ldrd	r4, [sp]
   1254c:	ldr	r6, [sp, #8]
   12550:	add	sp, sp, #12
   12554:	pop	{pc}		; (ldr pc, [sp], #4)

00012558 <table_new@@Base>:
   12558:	mov	r0, #56	; 0x38
   1255c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12560:	mov	r4, #10
   12564:	mov	r5, #0
   12568:	strd	r6, [sp, #8]
   1256c:	mov	r6, #20
   12570:	mov	r7, #0
   12574:	str	r8, [sp, #16]
   12578:	str	lr, [sp, #20]
   1257c:	bl	11b68 <malloc@plt>
   12580:	mov	r2, #0
   12584:	ldr	r8, [sp, #16]
   12588:	strd	r4, [r0, #8]
   1258c:	strd	r6, [r0, #24]
   12590:	strd	r4, [r0, #48]	; 0x30
   12594:	ldrd	r4, [sp]
   12598:	str	r2, [r0]
   1259c:	ldrd	r6, [sp, #8]
   125a0:	add	sp, sp, #20
   125a4:	str	r2, [r0, #4]
   125a8:	str	r2, [r0, #16]
   125ac:	str	r2, [r0, #20]
   125b0:	str	r2, [r0, #32]
   125b4:	str	r2, [r0, #36]	; 0x24
   125b8:	str	r2, [r0, #40]	; 0x28
   125bc:	str	r2, [r0, #44]	; 0x2c
   125c0:	pop	{pc}		; (ldr pc, [sp], #4)

000125c4 <table_delete@@Base>:
   125c4:	str	r4, [sp, #-8]!
   125c8:	subs	r4, r0, #0
   125cc:	str	lr, [sp, #4]
   125d0:	beq	125d8 <table_delete@@Base+0x14>
   125d4:	bl	12470 <_start@@Base+0xf0>
   125d8:	mov	r0, r4
   125dc:	ldr	r4, [sp]
   125e0:	ldr	lr, [sp, #4]
   125e4:	add	sp, sp, #8
   125e8:	b	11b38 <free@plt>

000125ec <table_init@@Base>:
   125ec:	mov	r3, #0
   125f0:	mov	r2, #10
   125f4:	mov	r1, #20
   125f8:	str	r3, [r0]
   125fc:	str	r3, [r0, #4]
   12600:	strd	r2, [r0, #8]
   12604:	str	r3, [r0, #16]
   12608:	str	r3, [r0, #20]
   1260c:	str	r1, [r0, #24]
   12610:	str	r3, [r0, #28]
   12614:	str	r3, [r0, #32]
   12618:	str	r3, [r0, #36]	; 0x24
   1261c:	str	r3, [r0, #40]	; 0x28
   12620:	str	r3, [r0, #44]	; 0x2c
   12624:	strd	r2, [r0, #48]	; 0x30
   12628:	bx	lr

0001262c <table_destroy@@Base>:
   1262c:	cmp	r0, #0
   12630:	beq	12638 <table_destroy@@Base+0xc>
   12634:	b	12470 <_start@@Base+0xf0>
   12638:	bx	lr

0001263c <table_dupe@@Base>:
   1263c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12640:	mov	r4, #0
   12644:	strd	r6, [sp, #8]
   12648:	mov	r6, r0
   1264c:	strd	r8, [sp, #16]
   12650:	str	lr, [sp, #24]
   12654:	sub	sp, sp, #20
   12658:	bl	13d8c <table_get_row_length@@Base>
   1265c:	mov	r9, r0
   12660:	mov	r0, r6
   12664:	bl	12f50 <table_get_column_length@@Base>
   12668:	mov	r8, r0
   1266c:	mov	r0, #56	; 0x38
   12670:	bl	11b68 <malloc@plt>
   12674:	mov	r7, r0
   12678:	mov	r2, #10
   1267c:	mov	r3, #0
   12680:	mov	r0, #20
   12684:	mov	r1, #0
   12688:	cmp	r8, r4
   1268c:	str	r4, [r7]
   12690:	str	r4, [r7, #4]
   12694:	strd	r2, [r7, #8]
   12698:	str	r4, [r7, #16]
   1269c:	str	r4, [r7, #20]
   126a0:	strd	r0, [r7, #24]
   126a4:	str	r4, [r7, #32]
   126a8:	str	r4, [r7, #36]	; 0x24
   126ac:	str	r4, [r7, #40]	; 0x28
   126b0:	str	r4, [r7, #44]	; 0x2c
   126b4:	strd	r2, [r7, #48]	; 0x30
   126b8:	ble	126f4 <table_dupe@@Base+0xb8>
   126bc:	mov	r1, r4
   126c0:	mov	r0, r6
   126c4:	bl	132ec <table_get_column_name@@Base>
   126c8:	mov	r5, r0
   126cc:	mov	r1, r4
   126d0:	mov	r0, r6
   126d4:	add	r4, r4, #1
   126d8:	bl	12fd4 <table_get_column_data_type@@Base>
   126dc:	mov	r2, r0
   126e0:	mov	r1, r5
   126e4:	mov	r0, r7
   126e8:	bl	12fe8 <table_add_column@@Base>
   126ec:	cmp	r8, r4
   126f0:	bne	126bc <table_dupe@@Base+0x80>
   126f4:	cmp	r9, #0
   126f8:	ble	127cc <table_dupe@@Base+0x190>
   126fc:	mov	r5, #0
   12700:	mov	r0, r7
   12704:	bl	13d94 <table_add_row@@Base>
   12708:	cmp	r8, #0
   1270c:	ble	127c0 <table_dupe@@Base+0x184>
   12710:	mov	r4, #0
   12714:	mov	r1, r4
   12718:	mov	r0, r6
   1271c:	bl	12fd4 <table_get_column_data_type@@Base>
   12720:	cmp	r0, #23
   12724:	ldrls	pc, [pc, r0, lsl #2]
   12728:	b	127b4 <table_dupe@@Base+0x178>
   1272c:	andeq	r2, r1, r8, lsr r8
   12730:	andeq	r2, r1, ip, lsr #21
   12734:	andeq	r2, r1, r4, lsl #21
   12738:	andeq	r2, r1, ip, asr sl
   1273c:	andeq	r2, r1, r4, lsr sl
   12740:	andeq	r2, r1, ip, asr #22
   12744:	andeq	r2, r1, r4, lsr #22
   12748:	strdeq	r2, [r1], -ip
   1274c:	ldrdeq	r2, [r1], -r4
   12750:	andeq	r2, r1, ip, lsl #20
   12754:	andeq	r2, r1, r4, ror #19
   12758:			; <UNDEFINED> instruction: 0x000129bc
   1275c:	muleq	r1, r4, r9
   12760:	andeq	r2, r1, ip, ror #18
   12764:	andeq	r2, r1, r4, asr #18
   12768:	andeq	r2, r1, ip, lsl r9
   1276c:	strdeq	r2, [r1], -r8
   12770:	ldrdeq	r2, [r1], -r4
   12774:			; <UNDEFINED> instruction: 0x000128b0
   12778:	andeq	r2, r1, r8, lsl #17
   1277c:	andeq	r2, r1, r0, ror #16
   12780:	andeq	r2, r1, r0, lsl r8
   12784:	andeq	r2, r1, r8, ror #15
   12788:	andeq	r2, r1, ip, lsl #15
   1278c:	mov	r2, r4
   12790:	mov	r1, r5
   12794:	mov	r0, r6
   12798:	bl	13cbc <table_get_ptr@@Base>
   1279c:	add	r3, sp, #12
   127a0:	mov	r2, r4
   127a4:	str	r0, [sp, #12]
   127a8:	mov	r1, r5
   127ac:	mov	r0, r7
   127b0:	bl	15120 <table_set_ptr@@Base>
   127b4:	add	r4, r4, #1
   127b8:	cmp	r8, r4
   127bc:	bne	12714 <table_dupe@@Base+0xd8>
   127c0:	add	r5, r5, #1
   127c4:	cmp	r9, r5
   127c8:	bne	12700 <table_dupe@@Base+0xc4>
   127cc:	mov	r0, r7
   127d0:	add	sp, sp, #20
   127d4:	ldrd	r4, [sp]
   127d8:	ldrd	r6, [sp, #8]
   127dc:	ldrd	r8, [sp, #16]
   127e0:	add	sp, sp, #24
   127e4:	pop	{pc}		; (ldr pc, [sp], #4)
   127e8:	mov	r2, r4
   127ec:	mov	r1, r5
   127f0:	mov	r0, r6
   127f4:	bl	139e0 <table_get_bool@@Base>
   127f8:	mov	r3, r0
   127fc:	mov	r2, r4
   12800:	mov	r1, r5
   12804:	mov	r0, r7
   12808:	bl	1430c <table_set_bool@@Base>
   1280c:	b	127b4 <table_dupe@@Base+0x178>
   12810:	mov	r2, r4
   12814:	mov	r1, r5
   12818:	mov	r0, r6
   1281c:	bl	13ca0 <table_get_string@@Base>
   12820:	mov	r3, r0
   12824:	mov	r2, r4
   12828:	mov	r1, r5
   1282c:	mov	r0, r7
   12830:	bl	14f4c <table_set_string@@Base>
   12834:	b	127b4 <table_dupe@@Base+0x178>
   12838:	mov	r2, r4
   1283c:	mov	r1, r5
   12840:	mov	r0, r6
   12844:	bl	13a00 <table_get_int@@Base>
   12848:	mov	r3, r0
   1284c:	mov	r2, r4
   12850:	mov	r1, r5
   12854:	mov	r0, r7
   12858:	bl	143a4 <table_set_int@@Base>
   1285c:	b	127b4 <table_dupe@@Base+0x178>
   12860:	mov	r2, r4
   12864:	mov	r1, r5
   12868:	mov	r0, r6
   1286c:	bl	13c80 <table_get_uchar@@Base>
   12870:	mov	r3, r0
   12874:	mov	r2, r4
   12878:	mov	r1, r5
   1287c:	mov	r0, r7
   12880:	bl	15084 <table_set_uchar@@Base>
   12884:	b	127b4 <table_dupe@@Base+0x178>
   12888:	mov	r2, r4
   1288c:	mov	r1, r5
   12890:	mov	r0, r6
   12894:	bl	13c60 <table_get_char@@Base>
   12898:	mov	r3, r0
   1289c:	mov	r2, r4
   128a0:	mov	r1, r5
   128a4:	mov	r0, r7
   128a8:	bl	14fe8 <table_set_char@@Base>
   128ac:	b	127b4 <table_dupe@@Base+0x178>
   128b0:	mov	r2, r4
   128b4:	mov	r1, r5
   128b8:	mov	r0, r6
   128bc:	bl	13c40 <table_get_ldouble@@Base>
   128c0:	mov	r2, r4
   128c4:	mov	r1, r5
   128c8:	mov	r0, r7
   128cc:	bl	14ea4 <table_set_ldouble@@Base>
   128d0:	b	127b4 <table_dupe@@Base+0x178>
   128d4:	mov	r2, r4
   128d8:	mov	r1, r5
   128dc:	mov	r0, r6
   128e0:	bl	13c20 <table_get_double@@Base>
   128e4:	mov	r2, r4
   128e8:	mov	r1, r5
   128ec:	mov	r0, r7
   128f0:	bl	14dfc <table_set_double@@Base>
   128f4:	b	127b4 <table_dupe@@Base+0x178>
   128f8:	mov	r2, r4
   128fc:	mov	r1, r5
   12900:	mov	r0, r6
   12904:	bl	13c00 <table_get_float@@Base>
   12908:	mov	r2, r4
   1290c:	mov	r1, r5
   12910:	mov	r0, r7
   12914:	bl	14d60 <table_set_float@@Base>
   12918:	b	127b4 <table_dupe@@Base+0x178>
   1291c:	mov	r2, r4
   12920:	mov	r1, r5
   12924:	mov	r0, r6
   12928:	bl	13be0 <table_get_ullong@@Base>
   1292c:	mov	r2, r4
   12930:	strd	r0, [sp]
   12934:	mov	r1, r5
   12938:	mov	r0, r7
   1293c:	bl	14cb8 <table_set_ullong@@Base>
   12940:	b	127b4 <table_dupe@@Base+0x178>
   12944:	mov	r2, r4
   12948:	mov	r1, r5
   1294c:	mov	r0, r6
   12950:	bl	13bc0 <table_get_llong@@Base>
   12954:	mov	r2, r4
   12958:	strd	r0, [sp]
   1295c:	mov	r1, r5
   12960:	mov	r0, r7
   12964:	bl	14c10 <table_set_llong@@Base>
   12968:	b	127b4 <table_dupe@@Base+0x178>
   1296c:	mov	r2, r4
   12970:	mov	r1, r5
   12974:	mov	r0, r6
   12978:	bl	13ba0 <table_get_ulong@@Base>
   1297c:	mov	r3, r0
   12980:	mov	r2, r4
   12984:	mov	r1, r5
   12988:	mov	r0, r7
   1298c:	bl	14b74 <table_set_ulong@@Base>
   12990:	b	127b4 <table_dupe@@Base+0x178>
   12994:	mov	r2, r4
   12998:	mov	r1, r5
   1299c:	mov	r0, r6
   129a0:	bl	13b80 <table_get_long@@Base>
   129a4:	mov	r3, r0
   129a8:	mov	r2, r4
   129ac:	mov	r1, r5
   129b0:	mov	r0, r7
   129b4:	bl	14ad8 <table_set_long@@Base>
   129b8:	b	127b4 <table_dupe@@Base+0x178>
   129bc:	mov	r2, r4
   129c0:	mov	r1, r5
   129c4:	mov	r0, r6
   129c8:	bl	13b60 <table_get_ushort@@Base>
   129cc:	mov	r3, r0
   129d0:	mov	r2, r4
   129d4:	mov	r1, r5
   129d8:	mov	r0, r7
   129dc:	bl	14a40 <table_set_ushort@@Base>
   129e0:	b	127b4 <table_dupe@@Base+0x178>
   129e4:	mov	r2, r4
   129e8:	mov	r1, r5
   129ec:	mov	r0, r6
   129f0:	bl	13b40 <table_get_short@@Base>
   129f4:	mov	r3, r0
   129f8:	mov	r2, r4
   129fc:	mov	r1, r5
   12a00:	mov	r0, r7
   12a04:	bl	149a8 <table_set_short@@Base>
   12a08:	b	127b4 <table_dupe@@Base+0x178>
   12a0c:	mov	r2, r4
   12a10:	mov	r1, r5
   12a14:	mov	r0, r6
   12a18:	bl	13b20 <table_get_uint64@@Base>
   12a1c:	mov	r2, r4
   12a20:	strd	r0, [sp]
   12a24:	mov	r1, r5
   12a28:	mov	r0, r7
   12a2c:	bl	14904 <table_set_uint64@@Base>
   12a30:	b	127b4 <table_dupe@@Base+0x178>
   12a34:	mov	r2, r4
   12a38:	mov	r1, r5
   12a3c:	mov	r0, r6
   12a40:	bl	13a80 <table_get_int16@@Base>
   12a44:	mov	r3, r0
   12a48:	mov	r2, r4
   12a4c:	mov	r1, r5
   12a50:	mov	r0, r7
   12a54:	bl	14604 <table_set_int16@@Base>
   12a58:	b	127b4 <table_dupe@@Base+0x178>
   12a5c:	mov	r2, r4
   12a60:	mov	r1, r5
   12a64:	mov	r0, r6
   12a68:	bl	13a60 <table_get_uint8@@Base>
   12a6c:	mov	r3, r0
   12a70:	mov	r2, r4
   12a74:	mov	r1, r5
   12a78:	mov	r0, r7
   12a7c:	bl	1456c <table_set_uint8@@Base>
   12a80:	b	127b4 <table_dupe@@Base+0x178>
   12a84:	mov	r2, r4
   12a88:	mov	r1, r5
   12a8c:	mov	r0, r6
   12a90:	bl	13a40 <table_get_int8@@Base>
   12a94:	mov	r3, r0
   12a98:	mov	r2, r4
   12a9c:	mov	r1, r5
   12aa0:	mov	r0, r7
   12aa4:	bl	144d4 <table_set_int8@@Base>
   12aa8:	b	127b4 <table_dupe@@Base+0x178>
   12aac:	mov	r2, r4
   12ab0:	mov	r1, r5
   12ab4:	mov	r0, r6
   12ab8:	bl	13a20 <table_get_uint@@Base>
   12abc:	mov	r3, r0
   12ac0:	mov	r2, r4
   12ac4:	mov	r1, r5
   12ac8:	mov	r0, r7
   12acc:	bl	1443c <table_set_uint@@Base>
   12ad0:	b	127b4 <table_dupe@@Base+0x178>
   12ad4:	mov	r2, r4
   12ad8:	mov	r1, r5
   12adc:	mov	r0, r6
   12ae0:	bl	13b00 <table_get_int64@@Base>
   12ae4:	mov	r2, r4
   12ae8:	strd	r0, [sp]
   12aec:	mov	r1, r5
   12af0:	mov	r0, r7
   12af4:	bl	14864 <table_set_int64@@Base>
   12af8:	b	127b4 <table_dupe@@Base+0x178>
   12afc:	mov	r2, r4
   12b00:	mov	r1, r5
   12b04:	mov	r0, r6
   12b08:	bl	13ae0 <table_get_uint32@@Base>
   12b0c:	mov	r3, r0
   12b10:	mov	r2, r4
   12b14:	mov	r1, r5
   12b18:	mov	r0, r7
   12b1c:	bl	147cc <table_set_uint32@@Base>
   12b20:	b	127b4 <table_dupe@@Base+0x178>
   12b24:	mov	r2, r4
   12b28:	mov	r1, r5
   12b2c:	mov	r0, r6
   12b30:	bl	13ac0 <table_get_int32@@Base>
   12b34:	mov	r3, r0
   12b38:	mov	r2, r4
   12b3c:	mov	r1, r5
   12b40:	mov	r0, r7
   12b44:	bl	14734 <table_set_int32@@Base>
   12b48:	b	127b4 <table_dupe@@Base+0x178>
   12b4c:	mov	r2, r4
   12b50:	mov	r1, r5
   12b54:	mov	r0, r6
   12b58:	bl	13aa0 <table_get_uint16@@Base>
   12b5c:	mov	r3, r0
   12b60:	mov	r2, r4
   12b64:	mov	r1, r5
   12b68:	mov	r0, r7
   12b6c:	bl	1469c <table_set_uint16@@Base>
   12b70:	b	127b4 <table_dupe@@Base+0x178>

00012b74 <table_get_major_version@@Base>:
   12b74:	mov	r0, #0
   12b78:	bx	lr

00012b7c <table_get_minor_version@@Base>:
   12b7c:	mov	r0, #0
   12b80:	bx	lr

00012b84 <table_get_patch_version@@Base>:
   12b84:	mov	r0, #0
   12b88:	bx	lr

00012b8c <table_get_version@@Base>:
   12b8c:	movw	r0, #25892	; 0x6524
   12b90:	movt	r0, #1
   12b94:	bx	lr

00012b98 <table_get_callback_length@@Base>:
   12b98:	ldr	r0, [r0, #32]
   12b9c:	bx	lr

00012ba0 <table_register_callback@@Base>:
   12ba0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12ba4:	ldr	r5, [r0, #32]
   12ba8:	strd	r6, [sp, #8]
   12bac:	strd	r8, [sp, #16]
   12bb0:	str	sl, [sp, #24]
   12bb4:	str	lr, [sp, #28]
   12bb8:	cmp	r5, #0
   12bbc:	ldr	r7, [r0, #36]	; 0x24
   12bc0:	ble	12c18 <table_register_callback@@Base+0x78>
   12bc4:	sub	lr, r7, #4
   12bc8:	mov	ip, #0
   12bcc:	b	12bdc <table_register_callback@@Base+0x3c>
   12bd0:	add	ip, ip, #1
   12bd4:	cmp	ip, r5
   12bd8:	beq	12c18 <table_register_callback@@Base+0x78>
   12bdc:	ldr	r4, [lr, #4]!
   12be0:	lsl	r6, ip, #2
   12be4:	cmp	r1, r4
   12be8:	bne	12bd0 <table_register_callback@@Base+0x30>
   12bec:	ldr	r4, [r0, #40]	; 0x28
   12bf0:	ldr	r4, [r4, ip, lsl #2]
   12bf4:	cmp	r2, r4
   12bf8:	bne	12bd0 <table_register_callback@@Base+0x30>
   12bfc:	cmp	ip, #0
   12c00:	beq	12c18 <table_register_callback@@Base+0x78>
   12c04:	ldr	r2, [r0, #44]	; 0x2c
   12c08:	ldr	r8, [r2, r6]
   12c0c:	orr	r8, r8, r3
   12c10:	str	r8, [r2, r6]
   12c14:	b	12c5c <table_register_callback@@Base+0xbc>
   12c18:	mov	r8, r3
   12c1c:	ldr	r3, [r0, #48]	; 0x30
   12c20:	mov	r4, r2
   12c24:	mov	r9, r1
   12c28:	mov	r6, r0
   12c2c:	udiv	r2, r5, r3
   12c30:	mls	r2, r3, r2, r5
   12c34:	cmp	r2, #0
   12c38:	beq	12c74 <table_register_callback@@Base+0xd4>
   12c3c:	str	r9, [r7, r5, lsl #2]
   12c40:	ldr	r3, [r6, #40]	; 0x28
   12c44:	str	r4, [r3, r5, lsl #2]
   12c48:	ldr	r3, [r6, #44]	; 0x2c
   12c4c:	str	r8, [r3, r5, lsl #2]
   12c50:	ldr	r3, [r6, #32]
   12c54:	add	r3, r3, #1
   12c58:	str	r3, [r6, #32]
   12c5c:	ldrd	r4, [sp]
   12c60:	ldrd	r6, [sp, #8]
   12c64:	ldrd	r8, [sp, #16]
   12c68:	ldr	sl, [sp, #24]
   12c6c:	add	sp, sp, #28
   12c70:	pop	{pc}		; (ldr pc, [sp], #4)
   12c74:	ldr	r2, [r6, #52]	; 0x34
   12c78:	mov	r0, r7
   12c7c:	add	r3, r3, r2
   12c80:	lsl	r1, r3, #2
   12c84:	str	r3, [r6, #52]	; 0x34
   12c88:	bl	11b50 <realloc@plt>
   12c8c:	ldr	r1, [r6, #52]	; 0x34
   12c90:	str	r0, [r6, #36]	; 0x24
   12c94:	ldr	r0, [r6, #40]	; 0x28
   12c98:	lsl	r1, r1, #2
   12c9c:	bl	11b50 <realloc@plt>
   12ca0:	ldr	r1, [r6, #52]	; 0x34
   12ca4:	str	r0, [r6, #40]	; 0x28
   12ca8:	ldr	r0, [r6, #44]	; 0x2c
   12cac:	lsl	r1, r1, #2
   12cb0:	bl	11b50 <realloc@plt>
   12cb4:	str	r0, [r6, #44]	; 0x2c
   12cb8:	ldr	r5, [r6, #32]
   12cbc:	ldr	r7, [r6, #36]	; 0x24
   12cc0:	b	12c3c <table_register_callback@@Base+0x9c>

00012cc4 <table_unregister_callback@@Base>:
   12cc4:	ldr	ip, [r0, #32]
   12cc8:	cmp	ip, #0
   12ccc:	bxle	lr
   12cd0:	strd	r4, [sp, #-16]!
   12cd4:	mov	r3, #0
   12cd8:	str	r6, [sp, #8]
   12cdc:	ldr	r6, [r0, #36]	; 0x24
   12ce0:	str	lr, [sp, #12]
   12ce4:	sub	r4, r6, #4
   12ce8:	b	12cf8 <table_unregister_callback@@Base+0x34>
   12cec:	add	r3, r3, #1
   12cf0:	cmp	r3, ip
   12cf4:	beq	12dd8 <table_unregister_callback@@Base+0x114>
   12cf8:	ldr	r5, [r4, #4]!
   12cfc:	lsl	lr, r3, #2
   12d00:	cmp	r1, r5
   12d04:	bne	12cec <table_unregister_callback@@Base+0x28>
   12d08:	ldr	r5, [r0, #40]	; 0x28
   12d0c:	ldr	r5, [r5, r3, lsl #2]
   12d10:	cmp	r2, r5
   12d14:	bne	12cec <table_unregister_callback@@Base+0x28>
   12d18:	sub	ip, ip, #1
   12d1c:	cmp	ip, r3
   12d20:	ble	12d70 <table_unregister_callback@@Base+0xac>
   12d24:	add	r3, r3, #1
   12d28:	lsl	r2, r3, #2
   12d2c:	b	12d34 <table_unregister_callback@@Base+0x70>
   12d30:	ldr	r6, [r0, #36]	; 0x24
   12d34:	ldr	r1, [r6, r2]
   12d38:	str	r1, [r6, lr]
   12d3c:	ldr	r1, [r0, #40]	; 0x28
   12d40:	ldr	ip, [r1, r2]
   12d44:	str	ip, [r1, lr]
   12d48:	ldr	r1, [r0, #44]	; 0x2c
   12d4c:	ldr	ip, [r1, r2]
   12d50:	add	r2, r2, #4
   12d54:	str	ip, [r1, lr]
   12d58:	lsl	lr, r3, #2
   12d5c:	ldr	ip, [r0, #32]
   12d60:	sub	ip, ip, #1
   12d64:	cmp	ip, r3
   12d68:	add	r3, r3, #1
   12d6c:	bgt	12d30 <table_unregister_callback@@Base+0x6c>
   12d70:	ldr	r2, [r0, #48]	; 0x30
   12d74:	str	ip, [r0, #32]
   12d78:	udiv	r3, ip, r2
   12d7c:	mls	ip, r2, r3, ip
   12d80:	cmp	ip, #0
   12d84:	bne	12dd8 <table_unregister_callback@@Base+0x114>
   12d88:	mov	r4, r0
   12d8c:	ldr	r0, [r0, #36]	; 0x24
   12d90:	ldr	r5, [r4, #52]	; 0x34
   12d94:	sub	r5, r5, r2
   12d98:	cmp	r5, #0
   12d9c:	str	r5, [r4, #52]	; 0x34
   12da0:	beq	12de8 <table_unregister_callback@@Base+0x124>
   12da4:	lsl	r1, r5, #2
   12da8:	bl	11b50 <realloc@plt>
   12dac:	ldr	r1, [r4, #52]	; 0x34
   12db0:	str	r0, [r4, #36]	; 0x24
   12db4:	ldr	r0, [r4, #40]	; 0x28
   12db8:	lsl	r1, r1, #2
   12dbc:	bl	11b50 <realloc@plt>
   12dc0:	ldr	r1, [r4, #52]	; 0x34
   12dc4:	str	r0, [r4, #40]	; 0x28
   12dc8:	ldr	r0, [r4, #44]	; 0x2c
   12dcc:	lsl	r1, r1, #2
   12dd0:	bl	11b50 <realloc@plt>
   12dd4:	str	r0, [r4, #44]	; 0x2c
   12dd8:	ldrd	r4, [sp]
   12ddc:	ldr	r6, [sp, #8]
   12de0:	add	sp, sp, #12
   12de4:	pop	{pc}		; (ldr pc, [sp], #4)
   12de8:	bl	11b38 <free@plt>
   12dec:	ldr	r0, [r4, #40]	; 0x28
   12df0:	bl	11b38 <free@plt>
   12df4:	ldr	r0, [r4, #44]	; 0x2c
   12df8:	bl	11b38 <free@plt>
   12dfc:	str	r5, [r4, #36]	; 0x24
   12e00:	str	r5, [r4, #40]	; 0x28
   12e04:	str	r5, [r4, #44]	; 0x2c
   12e08:	ldrd	r4, [sp]
   12e0c:	ldr	r6, [sp, #8]
   12e10:	add	sp, sp, #12
   12e14:	pop	{pc}		; (ldr pc, [sp], #4)

00012e18 <table_notify@@Base>:
   12e18:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12e1c:	strd	r6, [sp, #8]
   12e20:	str	lr, [sp, #24]
   12e24:	ldr	lr, [r0, #32]
   12e28:	strd	r8, [sp, #16]
   12e2c:	sub	sp, sp, #12
   12e30:	cmp	lr, #0
   12e34:	ble	12ea8 <table_notify@@Base+0x90>
   12e38:	ldr	r7, [r0, #44]	; 0x2c
   12e3c:	mov	r6, r3
   12e40:	mov	r9, r2
   12e44:	mov	r8, r1
   12e48:	mov	r5, r0
   12e4c:	mov	r4, #0
   12e50:	ldr	ip, [r7, r4, lsl #2]
   12e54:	mov	r3, r6
   12e58:	mov	r2, r9
   12e5c:	mov	r1, r8
   12e60:	mov	r0, r5
   12e64:	tst	r6, ip
   12e68:	beq	12e9c <table_notify@@Base+0x84>
   12e6c:	ldr	ip, [r5, #36]	; 0x24
   12e70:	ldr	lr, [r5, #40]	; 0x28
   12e74:	ldr	lr, [lr, r4, lsl #2]
   12e78:	str	lr, [sp]
   12e7c:	ldr	r7, [ip, r4, lsl #2]
   12e80:	add	r4, r4, #1
   12e84:	blx	r7
   12e88:	ldr	lr, [r5, #32]
   12e8c:	cmp	lr, r4
   12e90:	ble	12ea8 <table_notify@@Base+0x90>
   12e94:	ldr	r7, [r5, #44]	; 0x2c
   12e98:	b	12e50 <table_notify@@Base+0x38>
   12e9c:	add	r4, r4, #1
   12ea0:	cmp	r4, lr
   12ea4:	blt	12e50 <table_notify@@Base+0x38>
   12ea8:	add	sp, sp, #12
   12eac:	ldrd	r4, [sp]
   12eb0:	ldrd	r6, [sp, #8]
   12eb4:	ldrd	r8, [sp, #16]
   12eb8:	add	sp, sp, #24
   12ebc:	pop	{pc}		; (ldr pc, [sp], #4)

00012ec0 <table_column_init@@Base>:
   12ec0:	add	r1, r1, r1, lsl #1
   12ec4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12ec8:	strd	r6, [sp, #8]
   12ecc:	mov	r7, r2
   12ed0:	ldr	r6, [r0]
   12ed4:	mov	r0, r2
   12ed8:	lsl	r4, r1, #2
   12edc:	strd	r8, [sp, #16]
   12ee0:	mov	r9, r3
   12ee4:	str	sl, [sp, #24]
   12ee8:	str	lr, [sp, #28]
   12eec:	bl	11b8c <strlen@plt>
   12ef0:	add	r0, r0, #1
   12ef4:	ldr	r8, [sp, #32]
   12ef8:	add	r5, r6, r4
   12efc:	bl	11b68 <malloc@plt>
   12f00:	cmp	r0, #0
   12f04:	str	r0, [r6, r4]
   12f08:	beq	12f14 <table_column_init@@Base+0x54>
   12f0c:	mov	r1, r7
   12f10:	bl	11b5c <strcpy@plt>
   12f14:	ldrd	r6, [sp, #8]
   12f18:	ldr	sl, [sp, #24]
   12f1c:	str	r9, [r5, #4]
   12f20:	str	r8, [r5, #8]
   12f24:	ldrd	r4, [sp]
   12f28:	ldrd	r8, [sp, #16]
   12f2c:	add	sp, sp, #28
   12f30:	pop	{pc}		; (ldr pc, [sp], #4)

00012f34 <table_column_destroy@@Base>:
   12f34:	ldr	r3, [r0]
   12f38:	add	r1, r1, r1, lsl #1
   12f3c:	ldr	r0, [r3, r1, lsl #2]
   12f40:	cmp	r0, #0
   12f44:	beq	12f4c <table_column_destroy@@Base+0x18>
   12f48:	b	11b38 <free@plt>
   12f4c:	bx	lr

00012f50 <table_get_column_length@@Base>:
   12f50:	ldr	r0, [r0, #4]
   12f54:	bx	lr

00012f58 <table_get_column@@Base>:
   12f58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12f5c:	strd	r6, [sp, #8]
   12f60:	ldr	r7, [r0, #4]
   12f64:	str	r8, [sp, #16]
   12f68:	str	lr, [sp, #20]
   12f6c:	cmp	r7, #0
   12f70:	ble	12fc0 <table_get_column@@Base+0x68>
   12f74:	mov	r6, r1
   12f78:	mov	r4, #0
   12f7c:	ldr	r5, [r0]
   12f80:	b	12f90 <table_get_column@@Base+0x38>
   12f84:	add	r4, r4, #1
   12f88:	cmp	r7, r4
   12f8c:	beq	12fcc <table_get_column@@Base+0x74>
   12f90:	mov	r1, r6
   12f94:	ldr	r0, [r5]
   12f98:	add	r5, r5, #12
   12f9c:	bl	11b20 <strcmp@plt>
   12fa0:	cmp	r0, #0
   12fa4:	bne	12f84 <table_get_column@@Base+0x2c>
   12fa8:	mov	r0, r4
   12fac:	ldrd	r4, [sp]
   12fb0:	ldrd	r6, [sp, #8]
   12fb4:	ldr	r8, [sp, #16]
   12fb8:	add	sp, sp, #20
   12fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fc0:	beq	12fcc <table_get_column@@Base+0x74>
   12fc4:	mov	r4, #0
   12fc8:	b	12fa8 <table_get_column@@Base+0x50>
   12fcc:	mvn	r4, #0
   12fd0:	b	12fa8 <table_get_column@@Base+0x50>

00012fd4 <table_get_column_data_type@@Base>:
   12fd4:	ldr	r3, [r0]
   12fd8:	add	r1, r1, r1, lsl #1
   12fdc:	add	r3, r3, r1, lsl #2
   12fe0:	ldr	r0, [r3, #4]
   12fe4:	bx	lr

00012fe8 <table_add_column@@Base>:
   12fe8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12fec:	mov	r4, r0
   12ff0:	ldr	r3, [r0, #8]
   12ff4:	strd	r6, [sp, #8]
   12ff8:	strd	sl, [sp, #24]
   12ffc:	mov	fp, r1
   13000:	ldr	r1, [r0, #4]
   13004:	strd	r8, [sp, #16]
   13008:	mov	r9, r2
   1300c:	str	lr, [sp, #32]
   13010:	sub	sp, sp, #12
   13014:	udiv	r5, r1, r3
   13018:	mls	r5, r3, r5, r1
   1301c:	cmp	r5, #0
   13020:	beq	130e4 <table_add_column@@Base+0xfc>
   13024:	mov	r0, r4
   13028:	bl	13d8c <table_get_row_length@@Base>
   1302c:	ldr	r6, [r4, #4]
   13030:	mov	r7, r0
   13034:	mov	r0, r9
   13038:	bl	139ac <table_get_default_compare_function_for_data_type@@Base>
   1303c:	str	r0, [sp, #4]
   13040:	mov	r0, fp
   13044:	ldr	sl, [r4]
   13048:	bl	11b8c <strlen@plt>
   1304c:	add	r5, r6, r6, lsl #1
   13050:	add	r0, r0, #1
   13054:	bl	11b68 <malloc@plt>
   13058:	lsl	r5, r5, #2
   1305c:	cmp	r0, #0
   13060:	add	r8, sl, r5
   13064:	str	r0, [sl, r5]
   13068:	beq	13074 <table_add_column@@Base+0x8c>
   1306c:	mov	r1, fp
   13070:	bl	11b5c <strcpy@plt>
   13074:	ldr	r3, [sp, #4]
   13078:	cmp	r7, #0
   1307c:	str	r9, [r8, #4]
   13080:	str	r3, [r8, #8]
   13084:	ble	130a8 <table_add_column@@Base+0xc0>
   13088:	mov	r5, #0
   1308c:	mov	r1, r5
   13090:	mov	r2, r6
   13094:	mov	r0, r4
   13098:	add	r5, r5, #1
   1309c:	bl	15850 <table_cell_init@@Base>
   130a0:	cmp	r7, r5
   130a4:	bne	1308c <table_add_column@@Base+0xa4>
   130a8:	mov	r0, r4
   130ac:	mov	r3, #8
   130b0:	ldr	r2, [r4, #4]
   130b4:	mvn	r1, #0
   130b8:	bl	12e18 <table_notify@@Base>
   130bc:	ldr	r0, [r4, #4]
   130c0:	add	r3, r0, #1
   130c4:	str	r3, [r4, #4]
   130c8:	add	sp, sp, #12
   130cc:	ldrd	r4, [sp]
   130d0:	ldrd	r6, [sp, #8]
   130d4:	ldrd	r8, [sp, #16]
   130d8:	ldrd	sl, [sp, #24]
   130dc:	add	sp, sp, #32
   130e0:	pop	{pc}		; (ldr pc, [sp], #4)
   130e4:	ldr	r2, [r4, #12]
   130e8:	ldr	r0, [r0]
   130ec:	add	r3, r3, r2
   130f0:	add	r1, r3, r3, lsl #1
   130f4:	str	r3, [r4, #12]
   130f8:	lsl	r1, r1, #2
   130fc:	bl	11b50 <realloc@plt>
   13100:	str	r0, [r4]
   13104:	mov	r0, r4
   13108:	bl	13d8c <table_get_row_length@@Base>
   1310c:	subs	r7, r0, #0
   13110:	ble	13024 <table_add_column@@Base+0x3c>
   13114:	mov	r1, r5
   13118:	mov	r0, r4
   1311c:	bl	13f80 <table_get_row_ptr@@Base>
   13120:	ldr	r1, [r4, #12]
   13124:	mov	r6, r0
   13128:	add	r5, r5, #1
   1312c:	ldr	r0, [r0]
   13130:	lsl	r1, r1, #2
   13134:	bl	11b50 <realloc@plt>
   13138:	cmp	r7, r5
   1313c:	str	r0, [r6]
   13140:	bne	13114 <table_add_column@@Base+0x12c>
   13144:	b	13024 <table_add_column@@Base+0x3c>

00013148 <table_remove_column@@Base>:
   13148:	ldr	r3, [r0]
   1314c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13150:	mov	r4, r0
   13154:	mov	r5, r1
   13158:	strd	r6, [sp, #8]
   1315c:	add	r6, r1, r1, lsl #1
   13160:	strd	r8, [sp, #16]
   13164:	lsl	r6, r6, #2
   13168:	str	sl, [sp, #24]
   1316c:	str	lr, [sp, #28]
   13170:	ldr	r0, [r3, r6]
   13174:	cmp	r0, #0
   13178:	beq	13180 <table_remove_column@@Base+0x38>
   1317c:	bl	11b38 <free@plt>
   13180:	ldr	r7, [r4, #4]
   13184:	sub	r7, r7, #1
   13188:	cmp	r5, r7
   1318c:	bge	131c8 <table_remove_column@@Base+0x80>
   13190:	mov	r1, r5
   13194:	ldr	r3, [r4]
   13198:	add	r1, r1, #1
   1319c:	cmp	r1, r7
   131a0:	add	r2, r3, r6
   131a4:	add	r6, r6, #12
   131a8:	add	r3, r3, r6
   131ac:	ldr	ip, [r3]
   131b0:	ldr	r0, [r3, #4]
   131b4:	ldr	r3, [r3, #8]
   131b8:	str	ip, [r2]
   131bc:	str	r0, [r2, #4]
   131c0:	str	r3, [r2, #8]
   131c4:	bne	13194 <table_remove_column@@Base+0x4c>
   131c8:	mov	r0, r4
   131cc:	bl	13d8c <table_get_row_length@@Base>
   131d0:	subs	r9, r0, #0
   131d4:	ble	13238 <table_remove_column@@Base+0xf0>
   131d8:	lsl	r8, r5, #2
   131dc:	mov	r6, #0
   131e0:	mov	r2, r5
   131e4:	mov	r1, r6
   131e8:	mov	r0, r4
   131ec:	bl	15878 <table_cell_destroy@@Base>
   131f0:	mov	r1, r6
   131f4:	mov	r0, r4
   131f8:	bl	13f80 <table_get_row_ptr@@Base>
   131fc:	cmp	r5, r7
   13200:	bge	1322c <table_remove_column@@Base+0xe4>
   13204:	mov	r3, r8
   13208:	mov	r2, r5
   1320c:	ldr	r1, [r0]
   13210:	add	r2, r2, #1
   13214:	cmp	r2, r7
   13218:	add	ip, r1, r3
   1321c:	add	r3, r3, #4
   13220:	ldr	r1, [r1, r3]
   13224:	str	r1, [ip]
   13228:	bne	1320c <table_remove_column@@Base+0xc4>
   1322c:	add	r6, r6, #1
   13230:	cmp	r9, r6
   13234:	bne	131e0 <table_remove_column@@Base+0x98>
   13238:	ldr	r6, [r4, #4]
   1323c:	ldr	r2, [r4, #8]
   13240:	sub	r3, r6, #1
   13244:	udiv	r6, r3, r2
   13248:	str	r3, [r4, #4]
   1324c:	mls	r6, r2, r6, r3
   13250:	cmp	r6, #0
   13254:	beq	13288 <table_remove_column@@Base+0x140>
   13258:	mov	r0, r4
   1325c:	mov	r2, r5
   13260:	mov	r3, #16
   13264:	mvn	r1, #0
   13268:	bl	12e18 <table_notify@@Base>
   1326c:	ldrd	r4, [sp]
   13270:	mov	r0, #0
   13274:	ldrd	r6, [sp, #8]
   13278:	ldrd	r8, [sp, #16]
   1327c:	ldr	sl, [sp, #24]
   13280:	add	sp, sp, #28
   13284:	pop	{pc}		; (ldr pc, [sp], #4)
   13288:	ldr	r0, [r4]
   1328c:	ldr	r3, [r4, #12]
   13290:	sub	r2, r3, r2
   13294:	add	r1, r2, r2, lsl #1
   13298:	str	r2, [r4, #12]
   1329c:	lsl	r1, r1, #2
   132a0:	bl	11b50 <realloc@plt>
   132a4:	str	r0, [r4]
   132a8:	mov	r0, r4
   132ac:	bl	13d8c <table_get_row_length@@Base>
   132b0:	subs	r8, r0, #0
   132b4:	ble	13258 <table_remove_column@@Base+0x110>
   132b8:	mov	r1, r6
   132bc:	mov	r0, r4
   132c0:	bl	13f80 <table_get_row_ptr@@Base>
   132c4:	ldr	r1, [r4, #12]
   132c8:	mov	r7, r0
   132cc:	add	r6, r6, #1
   132d0:	ldr	r0, [r0]
   132d4:	lsl	r1, r1, #2
   132d8:	bl	11b50 <realloc@plt>
   132dc:	cmp	r8, r6
   132e0:	str	r0, [r7]
   132e4:	bne	132b8 <table_remove_column@@Base+0x170>
   132e8:	b	13258 <table_remove_column@@Base+0x110>

000132ec <table_get_column_name@@Base>:
   132ec:	ldr	r3, [r0]
   132f0:	add	r1, r1, r1, lsl #1
   132f4:	ldr	r0, [r3, r1, lsl #2]
   132f8:	bx	lr

000132fc <table_get_col_ptr@@Base>:
   132fc:	ldr	r0, [r0]
   13300:	add	r1, r1, r1, lsl #1
   13304:	add	r0, r0, r1, lsl #2
   13308:	bx	lr

0001330c <table_get_column_compare_function@@Base>:
   1330c:	ldr	r3, [r0]
   13310:	add	r1, r1, r1, lsl #1
   13314:	add	r3, r3, r1, lsl #2
   13318:	ldr	r0, [r3, #8]
   1331c:	bx	lr

00013320 <table_set_column_compare_function@@Base>:
   13320:	ldr	r3, [r0]
   13324:	add	r1, r1, r1, lsl #1
   13328:	add	r3, r3, r1, lsl #2
   1332c:	str	r2, [r3, #8]
   13330:	bx	lr

00013334 <table_compare_ptr@@Base>:
   13334:	cmp	r0, r1
   13338:	bhi	13348 <table_compare_ptr@@Base+0x14>
   1333c:	mvncc	r0, #0
   13340:	movcs	r0, #0
   13344:	bx	lr
   13348:	mov	r0, #1
   1334c:	bx	lr

00013350 <table_compare_string@@Base>:
   13350:	cmp	r0, #0
   13354:	beq	13364 <table_compare_string@@Base+0x14>
   13358:	cmp	r1, #0
   1335c:	beq	13374 <table_compare_string@@Base+0x24>
   13360:	b	11b20 <strcmp@plt>
   13364:	adds	r0, r1, #0
   13368:	movne	r0, #1
   1336c:	rsb	r0, r0, #0
   13370:	bx	lr
   13374:	mov	r0, #1
   13378:	bx	lr

0001337c <table_compare_bool@@Base>:
   1337c:	cmp	r0, #0
   13380:	beq	133b0 <table_compare_bool@@Base+0x34>
   13384:	cmp	r1, #0
   13388:	beq	133a8 <table_compare_bool@@Base+0x2c>
   1338c:	ldrb	r2, [r0]
   13390:	ldrb	r3, [r1]
   13394:	cmp	r2, r3
   13398:	bhi	133a8 <table_compare_bool@@Base+0x2c>
   1339c:	mvncc	r0, #0
   133a0:	movcs	r0, #0
   133a4:	bx	lr
   133a8:	mov	r0, #1
   133ac:	bx	lr
   133b0:	adds	r1, r1, #0
   133b4:	movne	r1, #1
   133b8:	rsb	r0, r1, #0
   133bc:	bx	lr

000133c0 <table_compare_int32@@Base>:
   133c0:	cmp	r0, #0
   133c4:	beq	133f4 <table_compare_int32@@Base+0x34>
   133c8:	cmp	r1, #0
   133cc:	beq	133ec <table_compare_int32@@Base+0x2c>
   133d0:	ldr	r2, [r0]
   133d4:	ldr	r3, [r1]
   133d8:	cmp	r2, r3
   133dc:	bgt	133ec <table_compare_int32@@Base+0x2c>
   133e0:	mvnlt	r0, #0
   133e4:	movge	r0, #0
   133e8:	bx	lr
   133ec:	mov	r0, #1
   133f0:	bx	lr
   133f4:	adds	r1, r1, #0
   133f8:	movne	r1, #1
   133fc:	rsb	r0, r1, #0
   13400:	bx	lr

00013404 <table_compare_uint32@@Base>:
   13404:	cmp	r0, #0
   13408:	beq	13438 <table_compare_uint32@@Base+0x34>
   1340c:	cmp	r1, #0
   13410:	beq	13430 <table_compare_uint32@@Base+0x2c>
   13414:	ldr	r2, [r0]
   13418:	ldr	r3, [r1]
   1341c:	cmp	r2, r3
   13420:	bhi	13430 <table_compare_uint32@@Base+0x2c>
   13424:	mvncc	r0, #0
   13428:	movcs	r0, #0
   1342c:	bx	lr
   13430:	mov	r0, #1
   13434:	bx	lr
   13438:	adds	r1, r1, #0
   1343c:	movne	r1, #1
   13440:	rsb	r0, r1, #0
   13444:	bx	lr

00013448 <table_compare_int8@@Base>:
   13448:	cmp	r0, #0
   1344c:	beq	1347c <table_compare_int8@@Base+0x34>
   13450:	cmp	r1, #0
   13454:	beq	13474 <table_compare_int8@@Base+0x2c>
   13458:	ldrsb	r2, [r0]
   1345c:	ldrsb	r3, [r1]
   13460:	cmp	r2, r3
   13464:	bgt	13474 <table_compare_int8@@Base+0x2c>
   13468:	mvnlt	r0, #0
   1346c:	movge	r0, #0
   13470:	bx	lr
   13474:	mov	r0, #1
   13478:	bx	lr
   1347c:	adds	r1, r1, #0
   13480:	movne	r1, #1
   13484:	rsb	r0, r1, #0
   13488:	bx	lr

0001348c <table_compare_char@@Base>:
   1348c:	cmp	r0, #0
   13490:	beq	134c0 <table_compare_char@@Base+0x34>
   13494:	cmp	r1, #0
   13498:	beq	134b8 <table_compare_char@@Base+0x2c>
   1349c:	ldrb	r2, [r0]
   134a0:	ldrb	r3, [r1]
   134a4:	cmp	r2, r3
   134a8:	bhi	134b8 <table_compare_char@@Base+0x2c>
   134ac:	mvncc	r0, #0
   134b0:	movcs	r0, #0
   134b4:	bx	lr
   134b8:	mov	r0, #1
   134bc:	bx	lr
   134c0:	adds	r1, r1, #0
   134c4:	movne	r1, #1
   134c8:	rsb	r0, r1, #0
   134cc:	bx	lr

000134d0 <table_compare_short@@Base>:
   134d0:	cmp	r0, #0
   134d4:	beq	13504 <table_compare_short@@Base+0x34>
   134d8:	cmp	r1, #0
   134dc:	beq	134fc <table_compare_short@@Base+0x2c>
   134e0:	ldrsh	r2, [r0]
   134e4:	ldrsh	r3, [r1]
   134e8:	cmp	r2, r3
   134ec:	bgt	134fc <table_compare_short@@Base+0x2c>
   134f0:	mvnlt	r0, #0
   134f4:	movge	r0, #0
   134f8:	bx	lr
   134fc:	mov	r0, #1
   13500:	bx	lr
   13504:	adds	r1, r1, #0
   13508:	movne	r1, #1
   1350c:	rsb	r0, r1, #0
   13510:	bx	lr

00013514 <table_compare_ushort@@Base>:
   13514:	cmp	r0, #0
   13518:	beq	13548 <table_compare_ushort@@Base+0x34>
   1351c:	cmp	r1, #0
   13520:	beq	13540 <table_compare_ushort@@Base+0x2c>
   13524:	ldrh	r2, [r0]
   13528:	ldrh	r3, [r1]
   1352c:	cmp	r2, r3
   13530:	bhi	13540 <table_compare_ushort@@Base+0x2c>
   13534:	mvncc	r0, #0
   13538:	movcs	r0, #0
   1353c:	bx	lr
   13540:	mov	r0, #1
   13544:	bx	lr
   13548:	adds	r1, r1, #0
   1354c:	movne	r1, #1
   13550:	rsb	r0, r1, #0
   13554:	bx	lr

00013558 <table_compare_llong@@Base>:
   13558:	cmp	r0, #0
   1355c:	beq	135a0 <table_compare_llong@@Base+0x48>
   13560:	cmp	r1, #0
   13564:	beq	135b0 <table_compare_llong@@Base+0x58>
   13568:	strd	r4, [sp, #-8]!
   1356c:	ldrd	r2, [r1]
   13570:	ldrd	r4, [r0]
   13574:	cmp	r2, r4
   13578:	sbcs	r1, r3, r5
   1357c:	movlt	r0, #1
   13580:	blt	13594 <table_compare_llong@@Base+0x3c>
   13584:	cmp	r4, r2
   13588:	sbcs	r3, r5, r3
   1358c:	mvnlt	r0, #0
   13590:	movge	r0, #0
   13594:	ldrd	r4, [sp]
   13598:	add	sp, sp, #8
   1359c:	bx	lr
   135a0:	adds	r1, r1, #0
   135a4:	movne	r1, #1
   135a8:	rsb	r0, r1, #0
   135ac:	bx	lr
   135b0:	mov	r0, #1
   135b4:	bx	lr

000135b8 <table_compare_uint64@@Base>:
   135b8:	cmp	r0, #0
   135bc:	beq	135f8 <table_compare_uint64@@Base+0x40>
   135c0:	cmp	r1, #0
   135c4:	beq	13608 <table_compare_uint64@@Base+0x50>
   135c8:	strd	r4, [sp, #-8]!
   135cc:	ldrd	r2, [r1]
   135d0:	ldrd	r4, [r0]
   135d4:	cmp	r5, r3
   135d8:	cmpeq	r4, r2
   135dc:	movhi	r0, #1
   135e0:	bhi	135ec <table_compare_uint64@@Base+0x34>
   135e4:	mvncc	r0, #0
   135e8:	movcs	r0, #0
   135ec:	ldrd	r4, [sp]
   135f0:	add	sp, sp, #8
   135f4:	bx	lr
   135f8:	adds	r1, r1, #0
   135fc:	movne	r1, #1
   13600:	rsb	r0, r1, #0
   13604:	bx	lr
   13608:	mov	r0, #1
   1360c:	bx	lr

00013610 <table_compare_long@@Base>:
   13610:	cmp	r0, #0
   13614:	beq	13644 <table_compare_long@@Base+0x34>
   13618:	cmp	r1, #0
   1361c:	beq	1363c <table_compare_long@@Base+0x2c>
   13620:	ldr	r2, [r0]
   13624:	ldr	r3, [r1]
   13628:	cmp	r2, r3
   1362c:	bgt	1363c <table_compare_long@@Base+0x2c>
   13630:	mvnlt	r0, #0
   13634:	movge	r0, #0
   13638:	bx	lr
   1363c:	mov	r0, #1
   13640:	bx	lr
   13644:	adds	r1, r1, #0
   13648:	movne	r1, #1
   1364c:	rsb	r0, r1, #0
   13650:	bx	lr

00013654 <table_compare_ullong@@Base>:
   13654:	cmp	r0, #0
   13658:	beq	13688 <table_compare_ullong@@Base+0x34>
   1365c:	cmp	r1, #0
   13660:	beq	13680 <table_compare_ullong@@Base+0x2c>
   13664:	ldr	r2, [r0]
   13668:	ldr	r3, [r1]
   1366c:	cmp	r2, r3
   13670:	bhi	13680 <table_compare_ullong@@Base+0x2c>
   13674:	mvncc	r0, #0
   13678:	movcs	r0, #0
   1367c:	bx	lr
   13680:	mov	r0, #1
   13684:	bx	lr
   13688:	adds	r1, r1, #0
   1368c:	movne	r1, #1
   13690:	rsb	r0, r1, #0
   13694:	bx	lr

00013698 <table_compare_float@@Base>:
   13698:	cmp	r0, #0
   1369c:	beq	136d0 <table_compare_float@@Base+0x38>
   136a0:	cmp	r1, #0
   136a4:	beq	136c8 <table_compare_float@@Base+0x30>
   136a8:	vldr	s14, [r0]
   136ac:	vldr	s15, [r1]
   136b0:	vcmpe.f32	s14, s15
   136b4:	vmrs	APSR_nzcv, fpscr
   136b8:	bgt	136c8 <table_compare_float@@Base+0x30>
   136bc:	mvnmi	r0, #0
   136c0:	movpl	r0, #0
   136c4:	bx	lr
   136c8:	mov	r0, #1
   136cc:	bx	lr
   136d0:	adds	r1, r1, #0
   136d4:	movne	r1, #1
   136d8:	rsb	r0, r1, #0
   136dc:	bx	lr

000136e0 <table_compare_double@@Base>:
   136e0:	cmp	r0, #0
   136e4:	beq	13718 <table_compare_double@@Base+0x38>
   136e8:	cmp	r1, #0
   136ec:	beq	13710 <table_compare_double@@Base+0x30>
   136f0:	vldr	d6, [r0]
   136f4:	vldr	d7, [r1]
   136f8:	vcmpe.f64	d6, d7
   136fc:	vmrs	APSR_nzcv, fpscr
   13700:	bgt	13710 <table_compare_double@@Base+0x30>
   13704:	mvnmi	r0, #0
   13708:	movpl	r0, #0
   1370c:	bx	lr
   13710:	mov	r0, #1
   13714:	bx	lr
   13718:	adds	r1, r1, #0
   1371c:	movne	r1, #1
   13720:	rsb	r0, r1, #0
   13724:	bx	lr

00013728 <table_compare_ldouble@@Base>:
   13728:	cmp	r0, #0
   1372c:	beq	13760 <table_compare_ldouble@@Base+0x38>
   13730:	cmp	r1, #0
   13734:	beq	13758 <table_compare_ldouble@@Base+0x30>
   13738:	vldr	d6, [r0]
   1373c:	vldr	d7, [r1]
   13740:	vcmpe.f64	d6, d7
   13744:	vmrs	APSR_nzcv, fpscr
   13748:	bgt	13758 <table_compare_ldouble@@Base+0x30>
   1374c:	mvnmi	r0, #0
   13750:	movpl	r0, #0
   13754:	bx	lr
   13758:	mov	r0, #1
   1375c:	bx	lr
   13760:	adds	r1, r1, #0
   13764:	movne	r1, #1
   13768:	rsb	r0, r1, #0
   1376c:	bx	lr

00013770 <table_compare_uchar@@Base>:
   13770:	cmp	r0, #0
   13774:	beq	137a4 <table_compare_uchar@@Base+0x34>
   13778:	cmp	r1, #0
   1377c:	beq	1379c <table_compare_uchar@@Base+0x2c>
   13780:	ldrb	r2, [r0]
   13784:	ldrb	r3, [r1]
   13788:	cmp	r2, r3
   1378c:	bhi	1379c <table_compare_uchar@@Base+0x2c>
   13790:	mvncc	r0, #0
   13794:	movcs	r0, #0
   13798:	bx	lr
   1379c:	mov	r0, #1
   137a0:	bx	lr
   137a4:	adds	r1, r1, #0
   137a8:	movne	r1, #1
   137ac:	rsb	r0, r1, #0
   137b0:	bx	lr

000137b4 <table_compare_int@@Base>:
   137b4:	cmp	r0, #0
   137b8:	beq	137e8 <table_compare_int@@Base+0x34>
   137bc:	cmp	r1, #0
   137c0:	beq	137e0 <table_compare_int@@Base+0x2c>
   137c4:	ldr	r2, [r0]
   137c8:	ldr	r3, [r1]
   137cc:	cmp	r2, r3
   137d0:	bgt	137e0 <table_compare_int@@Base+0x2c>
   137d4:	mvnlt	r0, #0
   137d8:	movge	r0, #0
   137dc:	bx	lr
   137e0:	mov	r0, #1
   137e4:	bx	lr
   137e8:	adds	r1, r1, #0
   137ec:	movne	r1, #1
   137f0:	rsb	r0, r1, #0
   137f4:	bx	lr

000137f8 <table_compare_uint@@Base>:
   137f8:	cmp	r0, #0
   137fc:	beq	1382c <table_compare_uint@@Base+0x34>
   13800:	cmp	r1, #0
   13804:	beq	13824 <table_compare_uint@@Base+0x2c>
   13808:	ldr	r2, [r0]
   1380c:	ldr	r3, [r1]
   13810:	cmp	r2, r3
   13814:	bhi	13824 <table_compare_uint@@Base+0x2c>
   13818:	mvncc	r0, #0
   1381c:	movcs	r0, #0
   13820:	bx	lr
   13824:	mov	r0, #1
   13828:	bx	lr
   1382c:	adds	r1, r1, #0
   13830:	movne	r1, #1
   13834:	rsb	r0, r1, #0
   13838:	bx	lr

0001383c <table_compare_uint8@@Base>:
   1383c:	cmp	r0, #0
   13840:	beq	13870 <table_compare_uint8@@Base+0x34>
   13844:	cmp	r1, #0
   13848:	beq	13868 <table_compare_uint8@@Base+0x2c>
   1384c:	ldrb	r2, [r0]
   13850:	ldrb	r3, [r1]
   13854:	cmp	r2, r3
   13858:	bhi	13868 <table_compare_uint8@@Base+0x2c>
   1385c:	mvncc	r0, #0
   13860:	movcs	r0, #0
   13864:	bx	lr
   13868:	mov	r0, #1
   1386c:	bx	lr
   13870:	adds	r1, r1, #0
   13874:	movne	r1, #1
   13878:	rsb	r0, r1, #0
   1387c:	bx	lr

00013880 <table_compare_int16@@Base>:
   13880:	cmp	r0, #0
   13884:	beq	138b4 <table_compare_int16@@Base+0x34>
   13888:	cmp	r1, #0
   1388c:	beq	138ac <table_compare_int16@@Base+0x2c>
   13890:	ldrsh	r2, [r0]
   13894:	ldrsh	r3, [r1]
   13898:	cmp	r2, r3
   1389c:	bgt	138ac <table_compare_int16@@Base+0x2c>
   138a0:	mvnlt	r0, #0
   138a4:	movge	r0, #0
   138a8:	bx	lr
   138ac:	mov	r0, #1
   138b0:	bx	lr
   138b4:	adds	r1, r1, #0
   138b8:	movne	r1, #1
   138bc:	rsb	r0, r1, #0
   138c0:	bx	lr

000138c4 <table_compare_uint16@@Base>:
   138c4:	cmp	r0, #0
   138c8:	beq	138f8 <table_compare_uint16@@Base+0x34>
   138cc:	cmp	r1, #0
   138d0:	beq	138f0 <table_compare_uint16@@Base+0x2c>
   138d4:	ldrh	r2, [r0]
   138d8:	ldrh	r3, [r1]
   138dc:	cmp	r2, r3
   138e0:	bhi	138f0 <table_compare_uint16@@Base+0x2c>
   138e4:	mvncc	r0, #0
   138e8:	movcs	r0, #0
   138ec:	bx	lr
   138f0:	mov	r0, #1
   138f4:	bx	lr
   138f8:	adds	r1, r1, #0
   138fc:	movne	r1, #1
   13900:	rsb	r0, r1, #0
   13904:	bx	lr

00013908 <table_compare_ulong@@Base>:
   13908:	cmp	r0, #0
   1390c:	beq	1393c <table_compare_ulong@@Base+0x34>
   13910:	cmp	r1, #0
   13914:	beq	13934 <table_compare_ulong@@Base+0x2c>
   13918:	ldr	r2, [r0]
   1391c:	ldr	r3, [r1]
   13920:	cmp	r2, r3
   13924:	bhi	13934 <table_compare_ulong@@Base+0x2c>
   13928:	mvncc	r0, #0
   1392c:	movcs	r0, #0
   13930:	bx	lr
   13934:	mov	r0, #1
   13938:	bx	lr
   1393c:	adds	r1, r1, #0
   13940:	movne	r1, #1
   13944:	rsb	r0, r1, #0
   13948:	bx	lr

0001394c <table_compare_int64@@Base>:
   1394c:	cmp	r0, #0
   13950:	beq	13994 <table_compare_int64@@Base+0x48>
   13954:	cmp	r1, #0
   13958:	beq	139a4 <table_compare_int64@@Base+0x58>
   1395c:	strd	r4, [sp, #-8]!
   13960:	ldrd	r2, [r1]
   13964:	ldrd	r4, [r0]
   13968:	cmp	r2, r4
   1396c:	sbcs	r1, r3, r5
   13970:	movlt	r0, #1
   13974:	blt	13988 <table_compare_int64@@Base+0x3c>
   13978:	cmp	r4, r2
   1397c:	sbcs	r3, r5, r3
   13980:	mvnlt	r0, #0
   13984:	movge	r0, #0
   13988:	ldrd	r4, [sp]
   1398c:	add	sp, sp, #8
   13990:	bx	lr
   13994:	adds	r1, r1, #0
   13998:	movne	r1, #1
   1399c:	rsb	r0, r1, #0
   139a0:	bx	lr
   139a4:	mov	r0, #1
   139a8:	bx	lr

000139ac <table_get_default_compare_function_for_data_type@@Base>:
   139ac:	cmp	r0, #23
   139b0:	movwls	r3, #25732	; 0x6484
   139b4:	movtls	r3, #1
   139b8:	ldrls	r0, [r3, r0, lsl #2]
   139bc:	movhi	r0, #0
   139c0:	bx	lr

000139c4 <table_get@@Base>:
   139c4:	str	r4, [sp, #-8]!
   139c8:	str	lr, [sp, #4]
   139cc:	bl	16334 <table_get_cell_ptr@@Base>
   139d0:	ldr	r4, [sp]
   139d4:	add	sp, sp, #4
   139d8:	ldr	r0, [r0]
   139dc:	pop	{pc}		; (ldr pc, [sp], #4)

000139e0 <table_get_bool@@Base>:
   139e0:	str	r4, [sp, #-8]!
   139e4:	str	lr, [sp, #4]
   139e8:	bl	16334 <table_get_cell_ptr@@Base>
   139ec:	ldr	r3, [r0]
   139f0:	ldr	r4, [sp]
   139f4:	add	sp, sp, #4
   139f8:	ldrb	r0, [r3]
   139fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013a00 <table_get_int@@Base>:
   13a00:	str	r4, [sp, #-8]!
   13a04:	str	lr, [sp, #4]
   13a08:	bl	16334 <table_get_cell_ptr@@Base>
   13a0c:	ldr	r3, [r0]
   13a10:	ldr	r4, [sp]
   13a14:	add	sp, sp, #4
   13a18:	ldr	r0, [r3]
   13a1c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a20 <table_get_uint@@Base>:
   13a20:	str	r4, [sp, #-8]!
   13a24:	str	lr, [sp, #4]
   13a28:	bl	16334 <table_get_cell_ptr@@Base>
   13a2c:	ldr	r3, [r0]
   13a30:	ldr	r4, [sp]
   13a34:	add	sp, sp, #4
   13a38:	ldr	r0, [r3]
   13a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a40 <table_get_int8@@Base>:
   13a40:	str	r4, [sp, #-8]!
   13a44:	str	lr, [sp, #4]
   13a48:	bl	16334 <table_get_cell_ptr@@Base>
   13a4c:	ldr	r3, [r0]
   13a50:	ldr	r4, [sp]
   13a54:	add	sp, sp, #4
   13a58:	ldrsb	r0, [r3]
   13a5c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a60 <table_get_uint8@@Base>:
   13a60:	str	r4, [sp, #-8]!
   13a64:	str	lr, [sp, #4]
   13a68:	bl	16334 <table_get_cell_ptr@@Base>
   13a6c:	ldr	r3, [r0]
   13a70:	ldr	r4, [sp]
   13a74:	add	sp, sp, #4
   13a78:	ldrb	r0, [r3]
   13a7c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a80 <table_get_int16@@Base>:
   13a80:	str	r4, [sp, #-8]!
   13a84:	str	lr, [sp, #4]
   13a88:	bl	16334 <table_get_cell_ptr@@Base>
   13a8c:	ldr	r3, [r0]
   13a90:	ldr	r4, [sp]
   13a94:	add	sp, sp, #4
   13a98:	ldrsh	r0, [r3]
   13a9c:	pop	{pc}		; (ldr pc, [sp], #4)

00013aa0 <table_get_uint16@@Base>:
   13aa0:	str	r4, [sp, #-8]!
   13aa4:	str	lr, [sp, #4]
   13aa8:	bl	16334 <table_get_cell_ptr@@Base>
   13aac:	ldr	r3, [r0]
   13ab0:	ldr	r4, [sp]
   13ab4:	add	sp, sp, #4
   13ab8:	ldrh	r0, [r3]
   13abc:	pop	{pc}		; (ldr pc, [sp], #4)

00013ac0 <table_get_int32@@Base>:
   13ac0:	str	r4, [sp, #-8]!
   13ac4:	str	lr, [sp, #4]
   13ac8:	bl	16334 <table_get_cell_ptr@@Base>
   13acc:	ldr	r3, [r0]
   13ad0:	ldr	r4, [sp]
   13ad4:	add	sp, sp, #4
   13ad8:	ldr	r0, [r3]
   13adc:	pop	{pc}		; (ldr pc, [sp], #4)

00013ae0 <table_get_uint32@@Base>:
   13ae0:	str	r4, [sp, #-8]!
   13ae4:	str	lr, [sp, #4]
   13ae8:	bl	16334 <table_get_cell_ptr@@Base>
   13aec:	ldr	r3, [r0]
   13af0:	ldr	r4, [sp]
   13af4:	add	sp, sp, #4
   13af8:	ldr	r0, [r3]
   13afc:	pop	{pc}		; (ldr pc, [sp], #4)

00013b00 <table_get_int64@@Base>:
   13b00:	str	r4, [sp, #-8]!
   13b04:	str	lr, [sp, #4]
   13b08:	bl	16334 <table_get_cell_ptr@@Base>
   13b0c:	ldr	r3, [r0]
   13b10:	ldr	r4, [sp]
   13b14:	add	sp, sp, #4
   13b18:	ldrd	r0, [r3]
   13b1c:	pop	{pc}		; (ldr pc, [sp], #4)

00013b20 <table_get_uint64@@Base>:
   13b20:	str	r4, [sp, #-8]!
   13b24:	str	lr, [sp, #4]
   13b28:	bl	16334 <table_get_cell_ptr@@Base>
   13b2c:	ldr	r3, [r0]
   13b30:	ldr	r4, [sp]
   13b34:	add	sp, sp, #4
   13b38:	ldrd	r0, [r3]
   13b3c:	pop	{pc}		; (ldr pc, [sp], #4)

00013b40 <table_get_short@@Base>:
   13b40:	str	r4, [sp, #-8]!
   13b44:	str	lr, [sp, #4]
   13b48:	bl	16334 <table_get_cell_ptr@@Base>
   13b4c:	ldr	r3, [r0]
   13b50:	ldr	r4, [sp]
   13b54:	add	sp, sp, #4
   13b58:	ldrsh	r0, [r3]
   13b5c:	pop	{pc}		; (ldr pc, [sp], #4)

00013b60 <table_get_ushort@@Base>:
   13b60:	str	r4, [sp, #-8]!
   13b64:	str	lr, [sp, #4]
   13b68:	bl	16334 <table_get_cell_ptr@@Base>
   13b6c:	ldr	r3, [r0]
   13b70:	ldr	r4, [sp]
   13b74:	add	sp, sp, #4
   13b78:	ldrh	r0, [r3]
   13b7c:	pop	{pc}		; (ldr pc, [sp], #4)

00013b80 <table_get_long@@Base>:
   13b80:	str	r4, [sp, #-8]!
   13b84:	str	lr, [sp, #4]
   13b88:	bl	16334 <table_get_cell_ptr@@Base>
   13b8c:	ldr	r3, [r0]
   13b90:	ldr	r4, [sp]
   13b94:	add	sp, sp, #4
   13b98:	ldr	r0, [r3]
   13b9c:	pop	{pc}		; (ldr pc, [sp], #4)

00013ba0 <table_get_ulong@@Base>:
   13ba0:	str	r4, [sp, #-8]!
   13ba4:	str	lr, [sp, #4]
   13ba8:	bl	16334 <table_get_cell_ptr@@Base>
   13bac:	ldr	r3, [r0]
   13bb0:	ldr	r4, [sp]
   13bb4:	add	sp, sp, #4
   13bb8:	ldr	r0, [r3]
   13bbc:	pop	{pc}		; (ldr pc, [sp], #4)

00013bc0 <table_get_llong@@Base>:
   13bc0:	str	r4, [sp, #-8]!
   13bc4:	str	lr, [sp, #4]
   13bc8:	bl	16334 <table_get_cell_ptr@@Base>
   13bcc:	ldr	r3, [r0]
   13bd0:	ldr	r4, [sp]
   13bd4:	add	sp, sp, #4
   13bd8:	ldrd	r0, [r3]
   13bdc:	pop	{pc}		; (ldr pc, [sp], #4)

00013be0 <table_get_ullong@@Base>:
   13be0:	str	r4, [sp, #-8]!
   13be4:	str	lr, [sp, #4]
   13be8:	bl	16334 <table_get_cell_ptr@@Base>
   13bec:	ldr	r3, [r0]
   13bf0:	ldr	r4, [sp]
   13bf4:	add	sp, sp, #4
   13bf8:	ldrd	r0, [r3]
   13bfc:	pop	{pc}		; (ldr pc, [sp], #4)

00013c00 <table_get_float@@Base>:
   13c00:	str	r4, [sp, #-8]!
   13c04:	str	lr, [sp, #4]
   13c08:	bl	16334 <table_get_cell_ptr@@Base>
   13c0c:	ldr	r3, [r0]
   13c10:	ldr	r4, [sp]
   13c14:	add	sp, sp, #4
   13c18:	vldr	s0, [r3]
   13c1c:	pop	{pc}		; (ldr pc, [sp], #4)

00013c20 <table_get_double@@Base>:
   13c20:	str	r4, [sp, #-8]!
   13c24:	str	lr, [sp, #4]
   13c28:	bl	16334 <table_get_cell_ptr@@Base>
   13c2c:	ldr	r3, [r0]
   13c30:	ldr	r4, [sp]
   13c34:	add	sp, sp, #4
   13c38:	vldr	d0, [r3]
   13c3c:	pop	{pc}		; (ldr pc, [sp], #4)

00013c40 <table_get_ldouble@@Base>:
   13c40:	str	r4, [sp, #-8]!
   13c44:	str	lr, [sp, #4]
   13c48:	bl	16334 <table_get_cell_ptr@@Base>
   13c4c:	ldr	r3, [r0]
   13c50:	ldr	r4, [sp]
   13c54:	add	sp, sp, #4
   13c58:	vldr	d0, [r3]
   13c5c:	pop	{pc}		; (ldr pc, [sp], #4)

00013c60 <table_get_char@@Base>:
   13c60:	str	r4, [sp, #-8]!
   13c64:	str	lr, [sp, #4]
   13c68:	bl	16334 <table_get_cell_ptr@@Base>
   13c6c:	ldr	r3, [r0]
   13c70:	ldr	r4, [sp]
   13c74:	add	sp, sp, #4
   13c78:	ldrb	r0, [r3]
   13c7c:	pop	{pc}		; (ldr pc, [sp], #4)

00013c80 <table_get_uchar@@Base>:
   13c80:	str	r4, [sp, #-8]!
   13c84:	str	lr, [sp, #4]
   13c88:	bl	16334 <table_get_cell_ptr@@Base>
   13c8c:	ldr	r3, [r0]
   13c90:	ldr	r4, [sp]
   13c94:	add	sp, sp, #4
   13c98:	ldrb	r0, [r3]
   13c9c:	pop	{pc}		; (ldr pc, [sp], #4)

00013ca0 <table_get_string@@Base>:
   13ca0:	str	r4, [sp, #-8]!
   13ca4:	str	lr, [sp, #4]
   13ca8:	bl	16334 <table_get_cell_ptr@@Base>
   13cac:	ldr	r4, [sp]
   13cb0:	add	sp, sp, #4
   13cb4:	ldr	r0, [r0]
   13cb8:	pop	{pc}		; (ldr pc, [sp], #4)

00013cbc <table_get_ptr@@Base>:
   13cbc:	str	r4, [sp, #-8]!
   13cc0:	str	lr, [sp, #4]
   13cc4:	bl	16334 <table_get_cell_ptr@@Base>
   13cc8:	ldr	r4, [sp]
   13ccc:	add	sp, sp, #4
   13cd0:	ldr	r0, [r0]
   13cd4:	pop	{pc}		; (ldr pc, [sp], #4)

00013cd8 <table_row_init@@Base>:
   13cd8:	ldr	r3, [r0, #12]
   13cdc:	strd	r4, [sp, #-16]!
   13ce0:	mov	r5, r1
   13ce4:	ldr	r4, [r0, #16]
   13ce8:	str	r6, [sp, #8]
   13cec:	str	lr, [sp, #12]
   13cf0:	lsl	r0, r3, #2
   13cf4:	bl	11b68 <malloc@plt>
   13cf8:	str	r0, [r4, r5, lsl #2]
   13cfc:	ldrd	r4, [sp]
   13d00:	ldr	r6, [sp, #8]
   13d04:	add	sp, sp, #12
   13d08:	pop	{pc}		; (ldr pc, [sp], #4)

00013d0c <table_row_destroy@@Base>:
   13d0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13d10:	mov	r5, r1
   13d14:	strd	r6, [sp, #8]
   13d18:	mov	r6, r0
   13d1c:	str	r8, [sp, #16]
   13d20:	str	lr, [sp, #20]
   13d24:	bl	12f50 <table_get_column_length@@Base>
   13d28:	subs	r7, r0, #0
   13d2c:	ldr	r8, [r6, #16]
   13d30:	ble	13d54 <table_row_destroy@@Base+0x48>
   13d34:	mov	r4, #0
   13d38:	mov	r2, r4
   13d3c:	mov	r1, r5
   13d40:	add	r4, r4, #1
   13d44:	mov	r0, r6
   13d48:	bl	15878 <table_cell_destroy@@Base>
   13d4c:	cmp	r7, r4
   13d50:	bne	13d38 <table_row_destroy@@Base+0x2c>
   13d54:	ldr	r0, [r8, r5, lsl #2]
   13d58:	cmp	r0, #0
   13d5c:	beq	13d78 <table_row_destroy@@Base+0x6c>
   13d60:	ldrd	r4, [sp]
   13d64:	ldrd	r6, [sp, #8]
   13d68:	ldr	r8, [sp, #16]
   13d6c:	ldr	lr, [sp, #20]
   13d70:	add	sp, sp, #24
   13d74:	b	11b38 <free@plt>
   13d78:	ldrd	r4, [sp]
   13d7c:	ldrd	r6, [sp, #8]
   13d80:	ldr	r8, [sp, #16]
   13d84:	add	sp, sp, #20
   13d88:	pop	{pc}		; (ldr pc, [sp], #4)

00013d8c <table_get_row_length@@Base>:
   13d8c:	ldr	r0, [r0, #20]
   13d90:	bx	lr

00013d94 <table_add_row@@Base>:
   13d94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13d98:	mov	r4, r0
   13d9c:	ldr	r5, [r0, #20]
   13da0:	ldr	r3, [r0, #24]
   13da4:	strd	r6, [sp, #8]
   13da8:	str	r8, [sp, #16]
   13dac:	str	lr, [sp, #20]
   13db0:	udiv	r2, r5, r3
   13db4:	mls	r2, r3, r2, r5
   13db8:	cmp	r2, #0
   13dbc:	beq	13e3c <table_add_row@@Base+0xa8>
   13dc0:	mov	r0, r4
   13dc4:	bl	12f50 <table_get_column_length@@Base>
   13dc8:	mov	r7, r0
   13dcc:	ldr	r0, [r4, #12]
   13dd0:	ldr	r6, [r4, #16]
   13dd4:	lsl	r0, r0, #2
   13dd8:	bl	11b68 <malloc@plt>
   13ddc:	cmp	r7, #0
   13de0:	str	r0, [r6, r5, lsl #2]
   13de4:	ble	13e08 <table_add_row@@Base+0x74>
   13de8:	mov	r6, #0
   13dec:	mov	r2, r6
   13df0:	mov	r1, r5
   13df4:	add	r6, r6, #1
   13df8:	mov	r0, r4
   13dfc:	bl	15850 <table_cell_init@@Base>
   13e00:	cmp	r7, r6
   13e04:	bne	13dec <table_add_row@@Base+0x58>
   13e08:	mov	r0, r4
   13e0c:	mov	r3, #2
   13e10:	ldr	r1, [r4, #20]
   13e14:	mvn	r2, #0
   13e18:	bl	12e18 <table_notify@@Base>
   13e1c:	ldr	r0, [r4, #20]
   13e20:	ldrd	r6, [sp, #8]
   13e24:	ldr	r8, [sp, #16]
   13e28:	add	r3, r0, #1
   13e2c:	str	r3, [r4, #20]
   13e30:	ldrd	r4, [sp]
   13e34:	add	sp, sp, #20
   13e38:	pop	{pc}		; (ldr pc, [sp], #4)
   13e3c:	ldr	r2, [r4, #28]
   13e40:	ldr	r0, [r0, #16]
   13e44:	add	r3, r3, r2
   13e48:	lsl	r1, r3, #2
   13e4c:	str	r3, [r4, #28]
   13e50:	bl	11b50 <realloc@plt>
   13e54:	str	r0, [r4, #16]
   13e58:	ldr	r5, [r4, #20]
   13e5c:	b	13dc0 <table_add_row@@Base+0x2c>

00013e60 <table_remove_row@@Base>:
   13e60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13e64:	mov	r4, r0
   13e68:	mov	r5, r1
   13e6c:	strd	r6, [sp, #8]
   13e70:	str	r8, [sp, #16]
   13e74:	str	lr, [sp, #20]
   13e78:	ldr	r7, [r0, #20]
   13e7c:	bl	12f50 <table_get_column_length@@Base>
   13e80:	subs	r8, r0, #0
   13e84:	ble	13ecc <table_remove_row@@Base+0x6c>
   13e88:	mov	r6, #0
   13e8c:	mov	r1, r6
   13e90:	mov	r0, r4
   13e94:	bl	12fd4 <table_get_column_data_type@@Base>
   13e98:	cmp	r0, #23
   13e9c:	mov	r2, r6
   13ea0:	mov	r1, r5
   13ea4:	add	r6, r6, #1
   13ea8:	mov	r0, r4
   13eac:	beq	13ec4 <table_remove_row@@Base+0x64>
   13eb0:	bl	16334 <table_get_cell_ptr@@Base>
   13eb4:	ldr	r3, [r0]
   13eb8:	subs	r0, r3, #0
   13ebc:	beq	13ec4 <table_remove_row@@Base+0x64>
   13ec0:	bl	11b38 <free@plt>
   13ec4:	cmp	r8, r6
   13ec8:	bne	13e8c <table_remove_row@@Base+0x2c>
   13ecc:	ldr	r3, [r4, #16]
   13ed0:	lsl	r6, r5, #2
   13ed4:	ldr	r0, [r3, r5, lsl #2]
   13ed8:	cmp	r0, #0
   13edc:	beq	13ee4 <table_remove_row@@Base+0x84>
   13ee0:	bl	11b38 <free@plt>
   13ee4:	sub	r3, r7, #1
   13ee8:	cmp	r5, r3
   13eec:	bge	13f14 <table_remove_row@@Base+0xb4>
   13ef0:	mov	r2, r5
   13ef4:	ldr	r1, [r4, #16]
   13ef8:	add	r2, r2, #1
   13efc:	cmp	r2, r3
   13f00:	add	r0, r1, r6
   13f04:	add	r6, r6, #4
   13f08:	ldr	r1, [r1, r6]
   13f0c:	str	r1, [r0]
   13f10:	bne	13ef4 <table_remove_row@@Base+0x94>
   13f14:	ldr	r3, [r4, #20]
   13f18:	ldr	r1, [r4, #24]
   13f1c:	sub	r3, r3, #1
   13f20:	udiv	r2, r3, r1
   13f24:	str	r3, [r4, #20]
   13f28:	mls	r3, r1, r2, r3
   13f2c:	cmp	r3, #0
   13f30:	beq	13f60 <table_remove_row@@Base+0x100>
   13f34:	mov	r0, r4
   13f38:	mov	r1, r5
   13f3c:	mov	r3, #4
   13f40:	mvn	r2, #0
   13f44:	bl	12e18 <table_notify@@Base>
   13f48:	ldrd	r4, [sp]
   13f4c:	mov	r0, #0
   13f50:	ldrd	r6, [sp, #8]
   13f54:	ldr	r8, [sp, #16]
   13f58:	add	sp, sp, #20
   13f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f60:	ldr	r0, [r4, #16]
   13f64:	ldr	r3, [r4, #28]
   13f68:	sub	r3, r3, r1
   13f6c:	lsl	r1, r3, #2
   13f70:	str	r3, [r4, #28]
   13f74:	bl	11b50 <realloc@plt>
   13f78:	str	r0, [r4, #16]
   13f7c:	b	13f34 <table_remove_row@@Base+0xd4>

00013f80 <table_get_row_ptr@@Base>:
   13f80:	ldr	r0, [r0, #16]
   13f84:	add	r0, r0, r1, lsl #2
   13f88:	bx	lr

00013f8c <table_set_row_ptr@@Base>:
   13f8c:	ldr	r2, [r2]
   13f90:	ldr	r3, [r0, #16]
   13f94:	str	r2, [r3, r1, lsl #2]
   13f98:	bx	lr

00013f9c <table_set@@Base>:
   13f9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13fa0:	mov	r5, r0
   13fa4:	ldr	r4, [sp, #32]
   13fa8:	strd	r6, [sp, #8]
   13fac:	mov	r6, r2
   13fb0:	mov	r7, r3
   13fb4:	strd	r8, [sp, #16]
   13fb8:	mov	r9, r1
   13fbc:	str	sl, [sp, #24]
   13fc0:	str	lr, [sp, #28]
   13fc4:	bl	16334 <table_get_cell_ptr@@Base>
   13fc8:	mov	r8, r0
   13fcc:	mov	r1, r6
   13fd0:	mov	r0, r5
   13fd4:	bl	132fc <table_get_col_ptr@@Base>
   13fd8:	cmp	r4, #23
   13fdc:	ldrls	pc, [pc, r4, lsl #2]
   13fe0:	b	14050 <table_set@@Base+0xb4>
   13fe4:	andeq	r4, r1, r8, lsl #4
   13fe8:	strdeq	r4, [r1], -r8
   13fec:	andeq	r4, r1, r8, ror #3
   13ff0:	ldrdeq	r4, [r1], -r8
   13ff4:	andeq	r4, r1, r8, asr #3
   13ff8:	andeq	r4, r1, r4, lsr #3
   13ffc:	muleq	r1, r4, r1
   14000:	andeq	r4, r1, r4, lsl #3
   14004:	andeq	r4, r1, r8, asr #4
   14008:	andeq	r4, r1, r8, lsr r2
   1400c:	andeq	r4, r1, r8, lsr #4
   14010:	andeq	r4, r1, r8, lsl r2
   14014:	andeq	r4, r1, r4, lsl #5
   14018:	andeq	r4, r1, r4, ror r2
   1401c:	andeq	r4, r1, r4, asr #32
   14020:	andeq	r4, r1, r4, ror r1
   14024:	andeq	r4, r1, r0, asr r1
   14028:	andeq	r4, r1, r0, asr #2
   1402c:	andeq	r4, r1, r4, lsl r1
   14030:	andeq	r4, r1, r4, lsl #2
   14034:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14038:	strheq	r4, [r1], -ip
   1403c:	muleq	r1, r8, r0
   14040:	andeq	r4, r1, ip, rrx
   14044:	ldr	r3, [r0, #4]
   14048:	cmp	r3, #14
   1404c:	beq	14120 <table_set@@Base+0x184>
   14050:	mvn	r0, #0
   14054:	ldrd	r4, [sp]
   14058:	ldrd	r6, [sp, #8]
   1405c:	ldrd	r8, [sp, #16]
   14060:	ldr	sl, [sp, #24]
   14064:	add	sp, sp, #28
   14068:	pop	{pc}		; (ldr pc, [sp], #4)
   1406c:	ldr	r3, [r0, #4]
   14070:	cmp	r3, #23
   14074:	bne	14050 <table_set@@Base+0xb4>
   14078:	str	r7, [r8]
   1407c:	mov	r0, r5
   14080:	mov	r2, r6
   14084:	mov	r1, r9
   14088:	mov	r3, #1
   1408c:	bl	12e18 <table_notify@@Base>
   14090:	mov	r0, #0
   14094:	b	14054 <table_set@@Base+0xb8>
   14098:	ldr	r3, [r0, #4]
   1409c:	cmp	r3, #22
   140a0:	bne	14050 <table_set@@Base+0xb4>
   140a4:	ldr	r0, [r8]
   140a8:	cmp	r0, #0
   140ac:	beq	142c4 <table_set@@Base+0x328>
   140b0:	ldrb	r3, [r7]
   140b4:	strb	r3, [r0]
   140b8:	b	1407c <table_set@@Base+0xe0>
   140bc:	ldr	r3, [r0, #4]
   140c0:	cmp	r3, #21
   140c4:	bne	14050 <table_set@@Base+0xb4>
   140c8:	mov	r0, r7
   140cc:	bl	11b8c <strlen@plt>
   140d0:	add	r1, r0, #1
   140d4:	ldr	r0, [r8]
   140d8:	bl	11b50 <realloc@plt>
   140dc:	cmp	r0, #0
   140e0:	str	r0, [r8]
   140e4:	beq	14050 <table_set@@Base+0xb4>
   140e8:	mov	r1, r7
   140ec:	bl	11b5c <strcpy@plt>
   140f0:	b	1407c <table_set@@Base+0xe0>
   140f4:	ldr	r3, [r0, #4]
   140f8:	cmp	r3, #20
   140fc:	bne	14050 <table_set@@Base+0xb4>
   14100:	b	140a4 <table_set@@Base+0x108>
   14104:	ldr	r3, [r0, #4]
   14108:	cmp	r3, #19
   1410c:	bne	14050 <table_set@@Base+0xb4>
   14110:	b	140a4 <table_set@@Base+0x108>
   14114:	ldr	r3, [r0, #4]
   14118:	cmp	r3, #18
   1411c:	bne	14050 <table_set@@Base+0xb4>
   14120:	ldr	r0, [r8]
   14124:	cmp	r0, #0
   14128:	beq	142dc <table_set@@Base+0x340>
   1412c:	ldr	r2, [r7]
   14130:	ldr	r3, [r7, #4]
   14134:	str	r2, [r0]
   14138:	str	r3, [r0, #4]
   1413c:	b	1407c <table_set@@Base+0xe0>
   14140:	ldr	r3, [r0, #4]
   14144:	cmp	r3, #17
   14148:	bne	14050 <table_set@@Base+0xb4>
   1414c:	b	14120 <table_set@@Base+0x184>
   14150:	ldr	r3, [r0, #4]
   14154:	cmp	r3, #16
   14158:	bne	14050 <table_set@@Base+0xb4>
   1415c:	ldr	r0, [r8]
   14160:	cmp	r0, #0
   14164:	beq	14294 <table_set@@Base+0x2f8>
   14168:	ldr	r3, [r7]
   1416c:	str	r3, [r0]
   14170:	b	1407c <table_set@@Base+0xe0>
   14174:	ldr	r3, [r0, #4]
   14178:	cmp	r3, #15
   1417c:	bne	14050 <table_set@@Base+0xb4>
   14180:	b	14120 <table_set@@Base+0x184>
   14184:	ldr	r3, [r0, #4]
   14188:	cmp	r3, #7
   1418c:	beq	1415c <table_set@@Base+0x1c0>
   14190:	b	14050 <table_set@@Base+0xb4>
   14194:	ldr	r3, [r0, #4]
   14198:	cmp	r3, #6
   1419c:	beq	1415c <table_set@@Base+0x1c0>
   141a0:	b	14050 <table_set@@Base+0xb4>
   141a4:	ldr	r3, [r0, #4]
   141a8:	cmp	r3, #5
   141ac:	bne	14050 <table_set@@Base+0xb4>
   141b0:	ldr	r0, [r8]
   141b4:	cmp	r0, #0
   141b8:	beq	142ac <table_set@@Base+0x310>
   141bc:	ldrh	r3, [r7]
   141c0:	strh	r3, [r0]
   141c4:	b	1407c <table_set@@Base+0xe0>
   141c8:	ldr	r3, [r0, #4]
   141cc:	cmp	r3, #4
   141d0:	beq	141b0 <table_set@@Base+0x214>
   141d4:	b	14050 <table_set@@Base+0xb4>
   141d8:	ldr	r3, [r0, #4]
   141dc:	cmp	r3, #3
   141e0:	beq	140a4 <table_set@@Base+0x108>
   141e4:	b	14050 <table_set@@Base+0xb4>
   141e8:	ldr	r3, [r0, #4]
   141ec:	cmp	r3, #2
   141f0:	beq	140a4 <table_set@@Base+0x108>
   141f4:	b	14050 <table_set@@Base+0xb4>
   141f8:	ldr	r3, [r0, #4]
   141fc:	cmp	r3, #1
   14200:	beq	1415c <table_set@@Base+0x1c0>
   14204:	b	14050 <table_set@@Base+0xb4>
   14208:	ldr	r3, [r0, #4]
   1420c:	cmp	r3, #0
   14210:	beq	1415c <table_set@@Base+0x1c0>
   14214:	b	14050 <table_set@@Base+0xb4>
   14218:	ldr	r3, [r0, #4]
   1421c:	cmp	r3, #11
   14220:	beq	141b0 <table_set@@Base+0x214>
   14224:	b	14050 <table_set@@Base+0xb4>
   14228:	ldr	r3, [r0, #4]
   1422c:	cmp	r3, #10
   14230:	beq	141b0 <table_set@@Base+0x214>
   14234:	b	14050 <table_set@@Base+0xb4>
   14238:	ldr	r3, [r0, #4]
   1423c:	cmp	r3, #9
   14240:	beq	14120 <table_set@@Base+0x184>
   14244:	b	14050 <table_set@@Base+0xb4>
   14248:	ldr	r0, [r0, #4]
   1424c:	cmp	r0, #8
   14250:	bne	14050 <table_set@@Base+0xb4>
   14254:	ldr	r3, [r8]
   14258:	cmp	r3, #0
   1425c:	beq	142f4 <table_set@@Base+0x358>
   14260:	ldr	r1, [r7]
   14264:	ldr	r2, [r7, #4]
   14268:	str	r1, [r3]
   1426c:	str	r2, [r3, #4]
   14270:	b	1407c <table_set@@Base+0xe0>
   14274:	ldr	r3, [r0, #4]
   14278:	cmp	r3, #13
   1427c:	bne	14050 <table_set@@Base+0xb4>
   14280:	b	1415c <table_set@@Base+0x1c0>
   14284:	ldr	r3, [r0, #4]
   14288:	cmp	r3, #12
   1428c:	bne	14050 <table_set@@Base+0xb4>
   14290:	b	1415c <table_set@@Base+0x1c0>
   14294:	mov	r0, #4
   14298:	bl	11b68 <malloc@plt>
   1429c:	cmp	r0, #0
   142a0:	str	r0, [r8]
   142a4:	bne	14168 <table_set@@Base+0x1cc>
   142a8:	b	14050 <table_set@@Base+0xb4>
   142ac:	mov	r0, #2
   142b0:	bl	11b68 <malloc@plt>
   142b4:	cmp	r0, #0
   142b8:	str	r0, [r8]
   142bc:	bne	141bc <table_set@@Base+0x220>
   142c0:	b	14050 <table_set@@Base+0xb4>
   142c4:	mov	r0, #1
   142c8:	bl	11b68 <malloc@plt>
   142cc:	cmp	r0, #0
   142d0:	str	r0, [r8]
   142d4:	bne	140b0 <table_set@@Base+0x114>
   142d8:	b	14050 <table_set@@Base+0xb4>
   142dc:	mov	r0, #8
   142e0:	bl	11b68 <malloc@plt>
   142e4:	cmp	r0, #0
   142e8:	str	r0, [r8]
   142ec:	bne	1412c <table_set@@Base+0x190>
   142f0:	b	14050 <table_set@@Base+0xb4>
   142f4:	bl	11b68 <malloc@plt>
   142f8:	cmp	r0, #0
   142fc:	mov	r3, r0
   14300:	str	r0, [r8]
   14304:	bne	14260 <table_set@@Base+0x2c4>
   14308:	b	14050 <table_set@@Base+0xb4>

0001430c <table_set_bool@@Base>:
   1430c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14310:	mov	r5, r2
   14314:	mov	r4, r0
   14318:	strd	r6, [sp, #8]
   1431c:	mov	r7, r3
   14320:	str	r8, [sp, #16]
   14324:	mov	r8, r1
   14328:	str	lr, [sp, #20]
   1432c:	bl	16334 <table_get_cell_ptr@@Base>
   14330:	mov	r6, r0
   14334:	mov	r1, r5
   14338:	mov	r0, r4
   1433c:	bl	132fc <table_get_col_ptr@@Base>
   14340:	ldr	r2, [r0, #4]
   14344:	cmp	r2, #22
   14348:	bne	1439c <table_set_bool@@Base+0x90>
   1434c:	ldr	r0, [r6]
   14350:	cmp	r0, #0
   14354:	beq	14388 <table_set_bool@@Base+0x7c>
   14358:	mov	r2, r5
   1435c:	mov	r1, r8
   14360:	strb	r7, [r0]
   14364:	mov	r3, #1
   14368:	mov	r0, r4
   1436c:	bl	12e18 <table_notify@@Base>
   14370:	mov	r0, #0
   14374:	ldrd	r4, [sp]
   14378:	ldrd	r6, [sp, #8]
   1437c:	ldr	r8, [sp, #16]
   14380:	add	sp, sp, #20
   14384:	pop	{pc}		; (ldr pc, [sp], #4)
   14388:	mov	r0, #1
   1438c:	bl	11b68 <malloc@plt>
   14390:	cmp	r0, #0
   14394:	str	r0, [r6]
   14398:	bne	14358 <table_set_bool@@Base+0x4c>
   1439c:	mvn	r0, #0
   143a0:	b	14374 <table_set_bool@@Base+0x68>

000143a4 <table_set_int@@Base>:
   143a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   143a8:	mov	r5, r2
   143ac:	mov	r4, r0
   143b0:	strd	r6, [sp, #8]
   143b4:	mov	r7, r3
   143b8:	str	r8, [sp, #16]
   143bc:	mov	r8, r1
   143c0:	str	lr, [sp, #20]
   143c4:	bl	16334 <table_get_cell_ptr@@Base>
   143c8:	mov	r6, r0
   143cc:	mov	r1, r5
   143d0:	mov	r0, r4
   143d4:	bl	132fc <table_get_col_ptr@@Base>
   143d8:	ldr	r2, [r0, #4]
   143dc:	cmp	r2, #0
   143e0:	bne	14434 <table_set_int@@Base+0x90>
   143e4:	ldr	r0, [r6]
   143e8:	cmp	r0, #0
   143ec:	beq	14420 <table_set_int@@Base+0x7c>
   143f0:	mov	r2, r5
   143f4:	mov	r1, r8
   143f8:	str	r7, [r0]
   143fc:	mov	r3, #1
   14400:	mov	r0, r4
   14404:	bl	12e18 <table_notify@@Base>
   14408:	mov	r0, #0
   1440c:	ldrd	r4, [sp]
   14410:	ldrd	r6, [sp, #8]
   14414:	ldr	r8, [sp, #16]
   14418:	add	sp, sp, #20
   1441c:	pop	{pc}		; (ldr pc, [sp], #4)
   14420:	mov	r0, #4
   14424:	bl	11b68 <malloc@plt>
   14428:	cmp	r0, #0
   1442c:	str	r0, [r6]
   14430:	bne	143f0 <table_set_int@@Base+0x4c>
   14434:	mvn	r0, #0
   14438:	b	1440c <table_set_int@@Base+0x68>

0001443c <table_set_uint@@Base>:
   1443c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14440:	mov	r5, r2
   14444:	mov	r4, r0
   14448:	strd	r6, [sp, #8]
   1444c:	mov	r7, r3
   14450:	str	r8, [sp, #16]
   14454:	mov	r8, r1
   14458:	str	lr, [sp, #20]
   1445c:	bl	16334 <table_get_cell_ptr@@Base>
   14460:	mov	r6, r0
   14464:	mov	r1, r5
   14468:	mov	r0, r4
   1446c:	bl	132fc <table_get_col_ptr@@Base>
   14470:	ldr	r2, [r0, #4]
   14474:	cmp	r2, #1
   14478:	bne	144cc <table_set_uint@@Base+0x90>
   1447c:	ldr	r0, [r6]
   14480:	cmp	r0, #0
   14484:	beq	144b8 <table_set_uint@@Base+0x7c>
   14488:	mov	r2, r5
   1448c:	mov	r1, r8
   14490:	str	r7, [r0]
   14494:	mov	r3, #1
   14498:	mov	r0, r4
   1449c:	bl	12e18 <table_notify@@Base>
   144a0:	mov	r0, #0
   144a4:	ldrd	r4, [sp]
   144a8:	ldrd	r6, [sp, #8]
   144ac:	ldr	r8, [sp, #16]
   144b0:	add	sp, sp, #20
   144b4:	pop	{pc}		; (ldr pc, [sp], #4)
   144b8:	mov	r0, #4
   144bc:	bl	11b68 <malloc@plt>
   144c0:	cmp	r0, #0
   144c4:	str	r0, [r6]
   144c8:	bne	14488 <table_set_uint@@Base+0x4c>
   144cc:	mvn	r0, #0
   144d0:	b	144a4 <table_set_uint@@Base+0x68>

000144d4 <table_set_int8@@Base>:
   144d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   144d8:	mov	r5, r2
   144dc:	mov	r4, r0
   144e0:	strd	r6, [sp, #8]
   144e4:	mov	r7, r3
   144e8:	str	r8, [sp, #16]
   144ec:	mov	r8, r1
   144f0:	str	lr, [sp, #20]
   144f4:	bl	16334 <table_get_cell_ptr@@Base>
   144f8:	mov	r6, r0
   144fc:	mov	r1, r5
   14500:	mov	r0, r4
   14504:	bl	132fc <table_get_col_ptr@@Base>
   14508:	ldr	r2, [r0, #4]
   1450c:	cmp	r2, #2
   14510:	bne	14564 <table_set_int8@@Base+0x90>
   14514:	ldr	r0, [r6]
   14518:	cmp	r0, #0
   1451c:	beq	14550 <table_set_int8@@Base+0x7c>
   14520:	mov	r2, r5
   14524:	mov	r1, r8
   14528:	strb	r7, [r0]
   1452c:	mov	r3, #1
   14530:	mov	r0, r4
   14534:	bl	12e18 <table_notify@@Base>
   14538:	mov	r0, #0
   1453c:	ldrd	r4, [sp]
   14540:	ldrd	r6, [sp, #8]
   14544:	ldr	r8, [sp, #16]
   14548:	add	sp, sp, #20
   1454c:	pop	{pc}		; (ldr pc, [sp], #4)
   14550:	mov	r0, #1
   14554:	bl	11b68 <malloc@plt>
   14558:	cmp	r0, #0
   1455c:	str	r0, [r6]
   14560:	bne	14520 <table_set_int8@@Base+0x4c>
   14564:	mvn	r0, #0
   14568:	b	1453c <table_set_int8@@Base+0x68>

0001456c <table_set_uint8@@Base>:
   1456c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14570:	mov	r5, r2
   14574:	mov	r4, r0
   14578:	strd	r6, [sp, #8]
   1457c:	mov	r7, r3
   14580:	str	r8, [sp, #16]
   14584:	mov	r8, r1
   14588:	str	lr, [sp, #20]
   1458c:	bl	16334 <table_get_cell_ptr@@Base>
   14590:	mov	r6, r0
   14594:	mov	r1, r5
   14598:	mov	r0, r4
   1459c:	bl	132fc <table_get_col_ptr@@Base>
   145a0:	ldr	r2, [r0, #4]
   145a4:	cmp	r2, #3
   145a8:	bne	145fc <table_set_uint8@@Base+0x90>
   145ac:	ldr	r0, [r6]
   145b0:	cmp	r0, #0
   145b4:	beq	145e8 <table_set_uint8@@Base+0x7c>
   145b8:	mov	r2, r5
   145bc:	mov	r1, r8
   145c0:	strb	r7, [r0]
   145c4:	mov	r3, #1
   145c8:	mov	r0, r4
   145cc:	bl	12e18 <table_notify@@Base>
   145d0:	mov	r0, #0
   145d4:	ldrd	r4, [sp]
   145d8:	ldrd	r6, [sp, #8]
   145dc:	ldr	r8, [sp, #16]
   145e0:	add	sp, sp, #20
   145e4:	pop	{pc}		; (ldr pc, [sp], #4)
   145e8:	mov	r0, #1
   145ec:	bl	11b68 <malloc@plt>
   145f0:	cmp	r0, #0
   145f4:	str	r0, [r6]
   145f8:	bne	145b8 <table_set_uint8@@Base+0x4c>
   145fc:	mvn	r0, #0
   14600:	b	145d4 <table_set_uint8@@Base+0x68>

00014604 <table_set_int16@@Base>:
   14604:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14608:	mov	r5, r2
   1460c:	mov	r4, r0
   14610:	strd	r6, [sp, #8]
   14614:	mov	r7, r3
   14618:	str	r8, [sp, #16]
   1461c:	mov	r8, r1
   14620:	str	lr, [sp, #20]
   14624:	bl	16334 <table_get_cell_ptr@@Base>
   14628:	mov	r6, r0
   1462c:	mov	r1, r5
   14630:	mov	r0, r4
   14634:	bl	132fc <table_get_col_ptr@@Base>
   14638:	ldr	r2, [r0, #4]
   1463c:	cmp	r2, #4
   14640:	bne	14694 <table_set_int16@@Base+0x90>
   14644:	ldr	r0, [r6]
   14648:	cmp	r0, #0
   1464c:	beq	14680 <table_set_int16@@Base+0x7c>
   14650:	mov	r2, r5
   14654:	mov	r1, r8
   14658:	strh	r7, [r0]
   1465c:	mov	r3, #1
   14660:	mov	r0, r4
   14664:	bl	12e18 <table_notify@@Base>
   14668:	mov	r0, #0
   1466c:	ldrd	r4, [sp]
   14670:	ldrd	r6, [sp, #8]
   14674:	ldr	r8, [sp, #16]
   14678:	add	sp, sp, #20
   1467c:	pop	{pc}		; (ldr pc, [sp], #4)
   14680:	mov	r0, #2
   14684:	bl	11b68 <malloc@plt>
   14688:	cmp	r0, #0
   1468c:	str	r0, [r6]
   14690:	bne	14650 <table_set_int16@@Base+0x4c>
   14694:	mvn	r0, #0
   14698:	b	1466c <table_set_int16@@Base+0x68>

0001469c <table_set_uint16@@Base>:
   1469c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   146a0:	mov	r5, r2
   146a4:	mov	r4, r0
   146a8:	strd	r6, [sp, #8]
   146ac:	mov	r7, r3
   146b0:	str	r8, [sp, #16]
   146b4:	mov	r8, r1
   146b8:	str	lr, [sp, #20]
   146bc:	bl	16334 <table_get_cell_ptr@@Base>
   146c0:	mov	r6, r0
   146c4:	mov	r1, r5
   146c8:	mov	r0, r4
   146cc:	bl	132fc <table_get_col_ptr@@Base>
   146d0:	ldr	r2, [r0, #4]
   146d4:	cmp	r2, #5
   146d8:	bne	1472c <table_set_uint16@@Base+0x90>
   146dc:	ldr	r0, [r6]
   146e0:	cmp	r0, #0
   146e4:	beq	14718 <table_set_uint16@@Base+0x7c>
   146e8:	mov	r2, r5
   146ec:	mov	r1, r8
   146f0:	strh	r7, [r0]
   146f4:	mov	r3, #1
   146f8:	mov	r0, r4
   146fc:	bl	12e18 <table_notify@@Base>
   14700:	mov	r0, #0
   14704:	ldrd	r4, [sp]
   14708:	ldrd	r6, [sp, #8]
   1470c:	ldr	r8, [sp, #16]
   14710:	add	sp, sp, #20
   14714:	pop	{pc}		; (ldr pc, [sp], #4)
   14718:	mov	r0, #2
   1471c:	bl	11b68 <malloc@plt>
   14720:	cmp	r0, #0
   14724:	str	r0, [r6]
   14728:	bne	146e8 <table_set_uint16@@Base+0x4c>
   1472c:	mvn	r0, #0
   14730:	b	14704 <table_set_uint16@@Base+0x68>

00014734 <table_set_int32@@Base>:
   14734:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14738:	mov	r5, r2
   1473c:	mov	r4, r0
   14740:	strd	r6, [sp, #8]
   14744:	mov	r7, r3
   14748:	str	r8, [sp, #16]
   1474c:	mov	r8, r1
   14750:	str	lr, [sp, #20]
   14754:	bl	16334 <table_get_cell_ptr@@Base>
   14758:	mov	r6, r0
   1475c:	mov	r1, r5
   14760:	mov	r0, r4
   14764:	bl	132fc <table_get_col_ptr@@Base>
   14768:	ldr	r2, [r0, #4]
   1476c:	cmp	r2, #6
   14770:	bne	147c4 <table_set_int32@@Base+0x90>
   14774:	ldr	r0, [r6]
   14778:	cmp	r0, #0
   1477c:	beq	147b0 <table_set_int32@@Base+0x7c>
   14780:	mov	r2, r5
   14784:	mov	r1, r8
   14788:	str	r7, [r0]
   1478c:	mov	r3, #1
   14790:	mov	r0, r4
   14794:	bl	12e18 <table_notify@@Base>
   14798:	mov	r0, #0
   1479c:	ldrd	r4, [sp]
   147a0:	ldrd	r6, [sp, #8]
   147a4:	ldr	r8, [sp, #16]
   147a8:	add	sp, sp, #20
   147ac:	pop	{pc}		; (ldr pc, [sp], #4)
   147b0:	mov	r0, #4
   147b4:	bl	11b68 <malloc@plt>
   147b8:	cmp	r0, #0
   147bc:	str	r0, [r6]
   147c0:	bne	14780 <table_set_int32@@Base+0x4c>
   147c4:	mvn	r0, #0
   147c8:	b	1479c <table_set_int32@@Base+0x68>

000147cc <table_set_uint32@@Base>:
   147cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   147d0:	mov	r5, r2
   147d4:	mov	r4, r0
   147d8:	strd	r6, [sp, #8]
   147dc:	mov	r7, r3
   147e0:	str	r8, [sp, #16]
   147e4:	mov	r8, r1
   147e8:	str	lr, [sp, #20]
   147ec:	bl	16334 <table_get_cell_ptr@@Base>
   147f0:	mov	r6, r0
   147f4:	mov	r1, r5
   147f8:	mov	r0, r4
   147fc:	bl	132fc <table_get_col_ptr@@Base>
   14800:	ldr	r2, [r0, #4]
   14804:	cmp	r2, #7
   14808:	bne	1485c <table_set_uint32@@Base+0x90>
   1480c:	ldr	r0, [r6]
   14810:	cmp	r0, #0
   14814:	beq	14848 <table_set_uint32@@Base+0x7c>
   14818:	mov	r2, r5
   1481c:	mov	r1, r8
   14820:	str	r7, [r0]
   14824:	mov	r3, #1
   14828:	mov	r0, r4
   1482c:	bl	12e18 <table_notify@@Base>
   14830:	mov	r0, #0
   14834:	ldrd	r4, [sp]
   14838:	ldrd	r6, [sp, #8]
   1483c:	ldr	r8, [sp, #16]
   14840:	add	sp, sp, #20
   14844:	pop	{pc}		; (ldr pc, [sp], #4)
   14848:	mov	r0, #4
   1484c:	bl	11b68 <malloc@plt>
   14850:	cmp	r0, #0
   14854:	str	r0, [r6]
   14858:	bne	14818 <table_set_uint32@@Base+0x4c>
   1485c:	mvn	r0, #0
   14860:	b	14834 <table_set_uint32@@Base+0x68>

00014864 <table_set_int64@@Base>:
   14864:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14868:	mov	r5, r2
   1486c:	mov	r4, r0
   14870:	strd	r6, [sp, #8]
   14874:	mov	r7, r1
   14878:	str	r8, [sp, #16]
   1487c:	str	lr, [sp, #20]
   14880:	bl	16334 <table_get_cell_ptr@@Base>
   14884:	mov	r6, r0
   14888:	mov	r1, r5
   1488c:	mov	r0, r4
   14890:	bl	132fc <table_get_col_ptr@@Base>
   14894:	ldr	r0, [r0, #4]
   14898:	cmp	r0, #8
   1489c:	bne	148fc <table_set_int64@@Base+0x98>
   148a0:	ldr	ip, [r6]
   148a4:	cmp	ip, #0
   148a8:	beq	148e8 <table_set_int64@@Base+0x84>
   148ac:	ldr	r6, [sp, #24]
   148b0:	mov	r0, r4
   148b4:	mov	r2, r5
   148b8:	mov	r1, r7
   148bc:	mov	r3, #1
   148c0:	ldr	lr, [sp, #28]
   148c4:	str	r6, [ip]
   148c8:	str	lr, [ip, #4]
   148cc:	bl	12e18 <table_notify@@Base>
   148d0:	mov	r0, #0
   148d4:	ldrd	r4, [sp]
   148d8:	ldrd	r6, [sp, #8]
   148dc:	ldr	r8, [sp, #16]
   148e0:	add	sp, sp, #20
   148e4:	pop	{pc}		; (ldr pc, [sp], #4)
   148e8:	bl	11b68 <malloc@plt>
   148ec:	cmp	r0, #0
   148f0:	mov	ip, r0
   148f4:	str	r0, [r6]
   148f8:	bne	148ac <table_set_int64@@Base+0x48>
   148fc:	mvn	r0, #0
   14900:	b	148d4 <table_set_int64@@Base+0x70>

00014904 <table_set_uint64@@Base>:
   14904:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14908:	mov	r5, r2
   1490c:	mov	r4, r0
   14910:	strd	r6, [sp, #8]
   14914:	mov	r7, r1
   14918:	str	r8, [sp, #16]
   1491c:	str	lr, [sp, #20]
   14920:	bl	16334 <table_get_cell_ptr@@Base>
   14924:	mov	r6, r0
   14928:	mov	r1, r5
   1492c:	mov	r0, r4
   14930:	bl	132fc <table_get_col_ptr@@Base>
   14934:	ldr	r3, [r0, #4]
   14938:	cmp	r3, #9
   1493c:	bne	149a0 <table_set_uint64@@Base+0x9c>
   14940:	ldr	ip, [r6]
   14944:	cmp	ip, #0
   14948:	beq	14988 <table_set_uint64@@Base+0x84>
   1494c:	ldr	r6, [sp, #24]
   14950:	mov	r0, r4
   14954:	mov	r2, r5
   14958:	mov	r1, r7
   1495c:	mov	r3, #1
   14960:	ldr	lr, [sp, #28]
   14964:	str	r6, [ip]
   14968:	str	lr, [ip, #4]
   1496c:	bl	12e18 <table_notify@@Base>
   14970:	mov	r0, #0
   14974:	ldrd	r4, [sp]
   14978:	ldrd	r6, [sp, #8]
   1497c:	ldr	r8, [sp, #16]
   14980:	add	sp, sp, #20
   14984:	pop	{pc}		; (ldr pc, [sp], #4)
   14988:	mov	r0, #8
   1498c:	bl	11b68 <malloc@plt>
   14990:	cmp	r0, #0
   14994:	mov	ip, r0
   14998:	str	r0, [r6]
   1499c:	bne	1494c <table_set_uint64@@Base+0x48>
   149a0:	mvn	r0, #0
   149a4:	b	14974 <table_set_uint64@@Base+0x70>

000149a8 <table_set_short@@Base>:
   149a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   149ac:	mov	r5, r2
   149b0:	mov	r4, r0
   149b4:	strd	r6, [sp, #8]
   149b8:	mov	r7, r3
   149bc:	str	r8, [sp, #16]
   149c0:	mov	r8, r1
   149c4:	str	lr, [sp, #20]
   149c8:	bl	16334 <table_get_cell_ptr@@Base>
   149cc:	mov	r6, r0
   149d0:	mov	r1, r5
   149d4:	mov	r0, r4
   149d8:	bl	132fc <table_get_col_ptr@@Base>
   149dc:	ldr	r2, [r0, #4]
   149e0:	cmp	r2, #10
   149e4:	bne	14a38 <table_set_short@@Base+0x90>
   149e8:	ldr	r0, [r6]
   149ec:	cmp	r0, #0
   149f0:	beq	14a24 <table_set_short@@Base+0x7c>
   149f4:	mov	r2, r5
   149f8:	mov	r1, r8
   149fc:	strh	r7, [r0]
   14a00:	mov	r3, #1
   14a04:	mov	r0, r4
   14a08:	bl	12e18 <table_notify@@Base>
   14a0c:	mov	r0, #0
   14a10:	ldrd	r4, [sp]
   14a14:	ldrd	r6, [sp, #8]
   14a18:	ldr	r8, [sp, #16]
   14a1c:	add	sp, sp, #20
   14a20:	pop	{pc}		; (ldr pc, [sp], #4)
   14a24:	mov	r0, #2
   14a28:	bl	11b68 <malloc@plt>
   14a2c:	cmp	r0, #0
   14a30:	str	r0, [r6]
   14a34:	bne	149f4 <table_set_short@@Base+0x4c>
   14a38:	mvn	r0, #0
   14a3c:	b	14a10 <table_set_short@@Base+0x68>

00014a40 <table_set_ushort@@Base>:
   14a40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14a44:	mov	r5, r2
   14a48:	mov	r4, r0
   14a4c:	strd	r6, [sp, #8]
   14a50:	mov	r7, r3
   14a54:	str	r8, [sp, #16]
   14a58:	mov	r8, r1
   14a5c:	str	lr, [sp, #20]
   14a60:	bl	16334 <table_get_cell_ptr@@Base>
   14a64:	mov	r6, r0
   14a68:	mov	r1, r5
   14a6c:	mov	r0, r4
   14a70:	bl	132fc <table_get_col_ptr@@Base>
   14a74:	ldr	r2, [r0, #4]
   14a78:	cmp	r2, #11
   14a7c:	bne	14ad0 <table_set_ushort@@Base+0x90>
   14a80:	ldr	r0, [r6]
   14a84:	cmp	r0, #0
   14a88:	beq	14abc <table_set_ushort@@Base+0x7c>
   14a8c:	mov	r2, r5
   14a90:	mov	r1, r8
   14a94:	strh	r7, [r0]
   14a98:	mov	r3, #1
   14a9c:	mov	r0, r4
   14aa0:	bl	12e18 <table_notify@@Base>
   14aa4:	mov	r0, #0
   14aa8:	ldrd	r4, [sp]
   14aac:	ldrd	r6, [sp, #8]
   14ab0:	ldr	r8, [sp, #16]
   14ab4:	add	sp, sp, #20
   14ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   14abc:	mov	r0, #2
   14ac0:	bl	11b68 <malloc@plt>
   14ac4:	cmp	r0, #0
   14ac8:	str	r0, [r6]
   14acc:	bne	14a8c <table_set_ushort@@Base+0x4c>
   14ad0:	mvn	r0, #0
   14ad4:	b	14aa8 <table_set_ushort@@Base+0x68>

00014ad8 <table_set_long@@Base>:
   14ad8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14adc:	mov	r5, r2
   14ae0:	mov	r4, r0
   14ae4:	strd	r6, [sp, #8]
   14ae8:	mov	r6, r3
   14aec:	mov	r7, r1
   14af0:	str	r8, [sp, #16]
   14af4:	str	lr, [sp, #20]
   14af8:	bl	16334 <table_get_cell_ptr@@Base>
   14afc:	mov	r8, r0
   14b00:	mov	r1, r5
   14b04:	mov	r0, r4
   14b08:	bl	132fc <table_get_col_ptr@@Base>
   14b0c:	ldr	r3, [r0, #4]
   14b10:	cmp	r3, #12
   14b14:	beq	14b30 <table_set_long@@Base+0x58>
   14b18:	mvn	r0, #0
   14b1c:	ldrd	r4, [sp]
   14b20:	ldrd	r6, [sp, #8]
   14b24:	ldr	r8, [sp, #16]
   14b28:	add	sp, sp, #20
   14b2c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b30:	ldr	r0, [r8]
   14b34:	cmp	r0, #0
   14b38:	beq	14b5c <table_set_long@@Base+0x84>
   14b3c:	mov	r2, r5
   14b40:	mov	r1, r7
   14b44:	str	r6, [r0]
   14b48:	mov	r3, #1
   14b4c:	mov	r0, r4
   14b50:	bl	12e18 <table_notify@@Base>
   14b54:	mov	r0, #0
   14b58:	b	14b1c <table_set_long@@Base+0x44>
   14b5c:	mov	r0, #4
   14b60:	bl	11b68 <malloc@plt>
   14b64:	cmp	r0, #0
   14b68:	str	r0, [r8]
   14b6c:	bne	14b3c <table_set_long@@Base+0x64>
   14b70:	b	14b18 <table_set_long@@Base+0x40>

00014b74 <table_set_ulong@@Base>:
   14b74:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14b78:	mov	r5, r2
   14b7c:	mov	r4, r0
   14b80:	strd	r6, [sp, #8]
   14b84:	mov	r6, r3
   14b88:	mov	r7, r1
   14b8c:	str	r8, [sp, #16]
   14b90:	str	lr, [sp, #20]
   14b94:	bl	16334 <table_get_cell_ptr@@Base>
   14b98:	mov	r8, r0
   14b9c:	mov	r1, r5
   14ba0:	mov	r0, r4
   14ba4:	bl	132fc <table_get_col_ptr@@Base>
   14ba8:	ldr	r3, [r0, #4]
   14bac:	cmp	r3, #13
   14bb0:	beq	14bcc <table_set_ulong@@Base+0x58>
   14bb4:	mvn	r0, #0
   14bb8:	ldrd	r4, [sp]
   14bbc:	ldrd	r6, [sp, #8]
   14bc0:	ldr	r8, [sp, #16]
   14bc4:	add	sp, sp, #20
   14bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bcc:	ldr	r0, [r8]
   14bd0:	cmp	r0, #0
   14bd4:	beq	14bf8 <table_set_ulong@@Base+0x84>
   14bd8:	mov	r2, r5
   14bdc:	mov	r1, r7
   14be0:	str	r6, [r0]
   14be4:	mov	r3, #1
   14be8:	mov	r0, r4
   14bec:	bl	12e18 <table_notify@@Base>
   14bf0:	mov	r0, #0
   14bf4:	b	14bb8 <table_set_ulong@@Base+0x44>
   14bf8:	mov	r0, #4
   14bfc:	bl	11b68 <malloc@plt>
   14c00:	cmp	r0, #0
   14c04:	str	r0, [r8]
   14c08:	bne	14bd8 <table_set_ulong@@Base+0x64>
   14c0c:	b	14bb4 <table_set_ulong@@Base+0x40>

00014c10 <table_set_llong@@Base>:
   14c10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14c14:	mov	r5, r2
   14c18:	mov	r4, r0
   14c1c:	strd	r6, [sp, #8]
   14c20:	mov	r6, r1
   14c24:	str	r8, [sp, #16]
   14c28:	str	lr, [sp, #20]
   14c2c:	bl	16334 <table_get_cell_ptr@@Base>
   14c30:	mov	r7, r0
   14c34:	mov	r1, r5
   14c38:	mov	r0, r4
   14c3c:	bl	132fc <table_get_col_ptr@@Base>
   14c40:	ldr	r3, [r0, #4]
   14c44:	cmp	r3, #14
   14c48:	beq	14c64 <table_set_llong@@Base+0x54>
   14c4c:	mvn	r0, #0
   14c50:	ldrd	r4, [sp]
   14c54:	ldrd	r6, [sp, #8]
   14c58:	ldr	r8, [sp, #16]
   14c5c:	add	sp, sp, #20
   14c60:	pop	{pc}		; (ldr pc, [sp], #4)
   14c64:	ldr	ip, [r7]
   14c68:	cmp	ip, #0
   14c6c:	beq	14c9c <table_set_llong@@Base+0x8c>
   14c70:	ldr	r7, [sp, #24]
   14c74:	mov	r0, r4
   14c78:	mov	r2, r5
   14c7c:	mov	r1, r6
   14c80:	mov	r3, #1
   14c84:	ldr	lr, [sp, #28]
   14c88:	str	r7, [ip]
   14c8c:	str	lr, [ip, #4]
   14c90:	bl	12e18 <table_notify@@Base>
   14c94:	mov	r0, #0
   14c98:	b	14c50 <table_set_llong@@Base+0x40>
   14c9c:	mov	r0, #8
   14ca0:	bl	11b68 <malloc@plt>
   14ca4:	cmp	r0, #0
   14ca8:	mov	ip, r0
   14cac:	str	r0, [r7]
   14cb0:	bne	14c70 <table_set_llong@@Base+0x60>
   14cb4:	b	14c4c <table_set_llong@@Base+0x3c>

00014cb8 <table_set_ullong@@Base>:
   14cb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14cbc:	mov	r5, r2
   14cc0:	mov	r4, r0
   14cc4:	strd	r6, [sp, #8]
   14cc8:	mov	r6, r1
   14ccc:	str	r8, [sp, #16]
   14cd0:	str	lr, [sp, #20]
   14cd4:	bl	16334 <table_get_cell_ptr@@Base>
   14cd8:	mov	r7, r0
   14cdc:	mov	r1, r5
   14ce0:	mov	r0, r4
   14ce4:	bl	132fc <table_get_col_ptr@@Base>
   14ce8:	ldr	r3, [r0, #4]
   14cec:	cmp	r3, #15
   14cf0:	beq	14d0c <table_set_ullong@@Base+0x54>
   14cf4:	mvn	r0, #0
   14cf8:	ldrd	r4, [sp]
   14cfc:	ldrd	r6, [sp, #8]
   14d00:	ldr	r8, [sp, #16]
   14d04:	add	sp, sp, #20
   14d08:	pop	{pc}		; (ldr pc, [sp], #4)
   14d0c:	ldr	ip, [r7]
   14d10:	cmp	ip, #0
   14d14:	beq	14d44 <table_set_ullong@@Base+0x8c>
   14d18:	ldr	r7, [sp, #24]
   14d1c:	mov	r0, r4
   14d20:	mov	r2, r5
   14d24:	mov	r1, r6
   14d28:	mov	r3, #1
   14d2c:	ldr	lr, [sp, #28]
   14d30:	str	r7, [ip]
   14d34:	str	lr, [ip, #4]
   14d38:	bl	12e18 <table_notify@@Base>
   14d3c:	mov	r0, #0
   14d40:	b	14cf8 <table_set_ullong@@Base+0x40>
   14d44:	mov	r0, #8
   14d48:	bl	11b68 <malloc@plt>
   14d4c:	cmp	r0, #0
   14d50:	mov	ip, r0
   14d54:	str	r0, [r7]
   14d58:	bne	14d18 <table_set_ullong@@Base+0x60>
   14d5c:	b	14cf4 <table_set_ullong@@Base+0x3c>

00014d60 <table_set_float@@Base>:
   14d60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14d64:	mov	r5, r2
   14d68:	mov	r4, r0
   14d6c:	strd	r6, [sp, #8]
   14d70:	mov	r7, r1
   14d74:	vmov	r6, s0
   14d78:	str	r8, [sp, #16]
   14d7c:	str	lr, [sp, #20]
   14d80:	bl	16334 <table_get_cell_ptr@@Base>
   14d84:	mov	r8, r0
   14d88:	mov	r1, r5
   14d8c:	mov	r0, r4
   14d90:	bl	132fc <table_get_col_ptr@@Base>
   14d94:	ldr	r3, [r0, #4]
   14d98:	cmp	r3, #16
   14d9c:	beq	14db8 <table_set_float@@Base+0x58>
   14da0:	mvn	r0, #0
   14da4:	ldrd	r4, [sp]
   14da8:	ldrd	r6, [sp, #8]
   14dac:	ldr	r8, [sp, #16]
   14db0:	add	sp, sp, #20
   14db4:	pop	{pc}		; (ldr pc, [sp], #4)
   14db8:	ldr	r0, [r8]
   14dbc:	cmp	r0, #0
   14dc0:	beq	14de4 <table_set_float@@Base+0x84>
   14dc4:	mov	r2, r5
   14dc8:	mov	r1, r7
   14dcc:	str	r6, [r0]
   14dd0:	mov	r3, #1
   14dd4:	mov	r0, r4
   14dd8:	bl	12e18 <table_notify@@Base>
   14ddc:	mov	r0, #0
   14de0:	b	14da4 <table_set_float@@Base+0x44>
   14de4:	mov	r0, #4
   14de8:	bl	11b68 <malloc@plt>
   14dec:	cmp	r0, #0
   14df0:	str	r0, [r8]
   14df4:	bne	14dc4 <table_set_float@@Base+0x64>
   14df8:	b	14da0 <table_set_float@@Base+0x40>

00014dfc <table_set_double@@Base>:
   14dfc:	strd	r4, [sp, #-20]!	; 0xffffffec
   14e00:	mov	r5, r2
   14e04:	mov	r4, r0
   14e08:	strd	r6, [sp, #8]
   14e0c:	mov	r6, r1
   14e10:	str	lr, [sp, #16]
   14e14:	sub	sp, sp, #12
   14e18:	vstr	d0, [sp]
   14e1c:	bl	16334 <table_get_cell_ptr@@Base>
   14e20:	mov	r7, r0
   14e24:	mov	r1, r5
   14e28:	mov	r0, r4
   14e2c:	bl	132fc <table_get_col_ptr@@Base>
   14e30:	ldr	r3, [r0, #4]
   14e34:	cmp	r3, #17
   14e38:	beq	14e54 <table_set_double@@Base+0x58>
   14e3c:	mvn	r0, #0
   14e40:	add	sp, sp, #12
   14e44:	ldrd	r4, [sp]
   14e48:	ldrd	r6, [sp, #8]
   14e4c:	add	sp, sp, #16
   14e50:	pop	{pc}		; (ldr pc, [sp], #4)
   14e54:	ldr	ip, [r7]
   14e58:	cmp	ip, #0
   14e5c:	beq	14e88 <table_set_double@@Base+0x8c>
   14e60:	ldm	sp, {r7, lr}
   14e64:	mov	r0, r4
   14e68:	mov	r2, r5
   14e6c:	mov	r1, r6
   14e70:	mov	r3, #1
   14e74:	str	r7, [ip]
   14e78:	str	lr, [ip, #4]
   14e7c:	bl	12e18 <table_notify@@Base>
   14e80:	mov	r0, #0
   14e84:	b	14e40 <table_set_double@@Base+0x44>
   14e88:	mov	r0, #8
   14e8c:	bl	11b68 <malloc@plt>
   14e90:	cmp	r0, #0
   14e94:	mov	ip, r0
   14e98:	str	r0, [r7]
   14e9c:	bne	14e60 <table_set_double@@Base+0x64>
   14ea0:	b	14e3c <table_set_double@@Base+0x40>

00014ea4 <table_set_ldouble@@Base>:
   14ea4:	strd	r4, [sp, #-20]!	; 0xffffffec
   14ea8:	mov	r5, r2
   14eac:	mov	r4, r0
   14eb0:	strd	r6, [sp, #8]
   14eb4:	mov	r6, r1
   14eb8:	str	lr, [sp, #16]
   14ebc:	sub	sp, sp, #12
   14ec0:	vstr	d0, [sp]
   14ec4:	bl	16334 <table_get_cell_ptr@@Base>
   14ec8:	mov	r7, r0
   14ecc:	mov	r1, r5
   14ed0:	mov	r0, r4
   14ed4:	bl	132fc <table_get_col_ptr@@Base>
   14ed8:	ldr	r3, [r0, #4]
   14edc:	cmp	r3, #18
   14ee0:	beq	14efc <table_set_ldouble@@Base+0x58>
   14ee4:	mvn	r0, #0
   14ee8:	add	sp, sp, #12
   14eec:	ldrd	r4, [sp]
   14ef0:	ldrd	r6, [sp, #8]
   14ef4:	add	sp, sp, #16
   14ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   14efc:	ldr	ip, [r7]
   14f00:	cmp	ip, #0
   14f04:	beq	14f30 <table_set_ldouble@@Base+0x8c>
   14f08:	ldm	sp, {r7, lr}
   14f0c:	mov	r0, r4
   14f10:	mov	r2, r5
   14f14:	mov	r1, r6
   14f18:	mov	r3, #1
   14f1c:	str	r7, [ip]
   14f20:	str	lr, [ip, #4]
   14f24:	bl	12e18 <table_notify@@Base>
   14f28:	mov	r0, #0
   14f2c:	b	14ee8 <table_set_ldouble@@Base+0x44>
   14f30:	mov	r0, #8
   14f34:	bl	11b68 <malloc@plt>
   14f38:	cmp	r0, #0
   14f3c:	mov	ip, r0
   14f40:	str	r0, [r7]
   14f44:	bne	14f08 <table_set_ldouble@@Base+0x64>
   14f48:	b	14ee4 <table_set_ldouble@@Base+0x40>

00014f4c <table_set_string@@Base>:
   14f4c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14f50:	mov	r5, r2
   14f54:	mov	r4, r0
   14f58:	strd	r6, [sp, #8]
   14f5c:	mov	r6, r3
   14f60:	mov	r7, r1
   14f64:	str	r8, [sp, #16]
   14f68:	str	lr, [sp, #20]
   14f6c:	bl	16334 <table_get_cell_ptr@@Base>
   14f70:	mov	r8, r0
   14f74:	mov	r1, r5
   14f78:	mov	r0, r4
   14f7c:	bl	132fc <table_get_col_ptr@@Base>
   14f80:	ldr	r3, [r0, #4]
   14f84:	cmp	r3, #21
   14f88:	beq	14fa4 <table_set_string@@Base+0x58>
   14f8c:	mvn	r0, #0
   14f90:	ldrd	r4, [sp]
   14f94:	ldrd	r6, [sp, #8]
   14f98:	ldr	r8, [sp, #16]
   14f9c:	add	sp, sp, #20
   14fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fa4:	mov	r0, r6
   14fa8:	bl	11b8c <strlen@plt>
   14fac:	add	r1, r0, #1
   14fb0:	ldr	r0, [r8]
   14fb4:	bl	11b50 <realloc@plt>
   14fb8:	cmp	r0, #0
   14fbc:	str	r0, [r8]
   14fc0:	beq	14f8c <table_set_string@@Base+0x40>
   14fc4:	mov	r1, r6
   14fc8:	bl	11b5c <strcpy@plt>
   14fcc:	mov	r0, r4
   14fd0:	mov	r2, r5
   14fd4:	mov	r1, r7
   14fd8:	mov	r3, #1
   14fdc:	bl	12e18 <table_notify@@Base>
   14fe0:	mov	r0, #0
   14fe4:	b	14f90 <table_set_string@@Base+0x44>

00014fe8 <table_set_char@@Base>:
   14fe8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14fec:	mov	r5, r2
   14ff0:	mov	r4, r0
   14ff4:	strd	r6, [sp, #8]
   14ff8:	mov	r6, r3
   14ffc:	mov	r7, r1
   15000:	str	r8, [sp, #16]
   15004:	str	lr, [sp, #20]
   15008:	bl	16334 <table_get_cell_ptr@@Base>
   1500c:	mov	r8, r0
   15010:	mov	r1, r5
   15014:	mov	r0, r4
   15018:	bl	132fc <table_get_col_ptr@@Base>
   1501c:	ldr	r3, [r0, #4]
   15020:	cmp	r3, #19
   15024:	beq	15040 <table_set_char@@Base+0x58>
   15028:	mvn	r0, #0
   1502c:	ldrd	r4, [sp]
   15030:	ldrd	r6, [sp, #8]
   15034:	ldr	r8, [sp, #16]
   15038:	add	sp, sp, #20
   1503c:	pop	{pc}		; (ldr pc, [sp], #4)
   15040:	ldr	r0, [r8]
   15044:	cmp	r0, #0
   15048:	beq	1506c <table_set_char@@Base+0x84>
   1504c:	mov	r2, r5
   15050:	mov	r1, r7
   15054:	strb	r6, [r0]
   15058:	mov	r3, #1
   1505c:	mov	r0, r4
   15060:	bl	12e18 <table_notify@@Base>
   15064:	mov	r0, #0
   15068:	b	1502c <table_set_char@@Base+0x44>
   1506c:	mov	r0, #1
   15070:	bl	11b68 <malloc@plt>
   15074:	cmp	r0, #0
   15078:	str	r0, [r8]
   1507c:	bne	1504c <table_set_char@@Base+0x64>
   15080:	b	15028 <table_set_char@@Base+0x40>

00015084 <table_set_uchar@@Base>:
   15084:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15088:	mov	r5, r2
   1508c:	mov	r4, r0
   15090:	strd	r6, [sp, #8]
   15094:	mov	r6, r3
   15098:	mov	r7, r1
   1509c:	str	r8, [sp, #16]
   150a0:	str	lr, [sp, #20]
   150a4:	bl	16334 <table_get_cell_ptr@@Base>
   150a8:	mov	r8, r0
   150ac:	mov	r1, r5
   150b0:	mov	r0, r4
   150b4:	bl	132fc <table_get_col_ptr@@Base>
   150b8:	ldr	r3, [r0, #4]
   150bc:	cmp	r3, #20
   150c0:	beq	150dc <table_set_uchar@@Base+0x58>
   150c4:	mvn	r0, #0
   150c8:	ldrd	r4, [sp]
   150cc:	ldrd	r6, [sp, #8]
   150d0:	ldr	r8, [sp, #16]
   150d4:	add	sp, sp, #20
   150d8:	pop	{pc}		; (ldr pc, [sp], #4)
   150dc:	ldr	r0, [r8]
   150e0:	cmp	r0, #0
   150e4:	beq	15108 <table_set_uchar@@Base+0x84>
   150e8:	mov	r2, r5
   150ec:	mov	r1, r7
   150f0:	strb	r6, [r0]
   150f4:	mov	r3, #1
   150f8:	mov	r0, r4
   150fc:	bl	12e18 <table_notify@@Base>
   15100:	mov	r0, #0
   15104:	b	150c8 <table_set_uchar@@Base+0x44>
   15108:	mov	r0, #1
   1510c:	bl	11b68 <malloc@plt>
   15110:	cmp	r0, #0
   15114:	str	r0, [r8]
   15118:	bne	150e8 <table_set_uchar@@Base+0x64>
   1511c:	b	150c4 <table_set_uchar@@Base+0x40>

00015120 <table_set_ptr@@Base>:
   15120:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15124:	mov	r5, r2
   15128:	mov	r4, r0
   1512c:	strd	r6, [sp, #8]
   15130:	mov	r7, r3
   15134:	str	r8, [sp, #16]
   15138:	mov	r8, r1
   1513c:	str	lr, [sp, #20]
   15140:	bl	16334 <table_get_cell_ptr@@Base>
   15144:	mov	r6, r0
   15148:	mov	r1, r5
   1514c:	mov	r0, r4
   15150:	bl	132fc <table_get_col_ptr@@Base>
   15154:	ldr	r2, [r0, #4]
   15158:	cmp	r2, #23
   1515c:	mvnne	r0, #0
   15160:	bne	15180 <table_set_ptr@@Base+0x60>
   15164:	mov	r0, r4
   15168:	mov	r2, r5
   1516c:	str	r7, [r6]
   15170:	mov	r1, r8
   15174:	mov	r3, #1
   15178:	bl	12e18 <table_notify@@Base>
   1517c:	mov	r0, #0
   15180:	ldrd	r4, [sp]
   15184:	ldrd	r6, [sp, #8]
   15188:	ldr	r8, [sp, #16]
   1518c:	add	sp, sp, #20
   15190:	pop	{pc}		; (ldr pc, [sp], #4)

00015194 <table_serialize@@Base>:
   15194:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15198:	mov	r4, r1
   1519c:	mov	r5, r0
   151a0:	strd	r6, [sp, #8]
   151a4:	add	r7, r4, #8
   151a8:	strd	r8, [sp, #16]
   151ac:	strd	sl, [sp, #24]
   151b0:	str	lr, [sp, #32]
   151b4:	sub	sp, sp, #4
   151b8:	bl	13d8c <table_get_row_length@@Base>
   151bc:	mov	r9, r0
   151c0:	mov	r0, r5
   151c4:	bl	12f50 <table_get_column_length@@Base>
   151c8:	str	r0, [r4]
   151cc:	cmp	r0, #0
   151d0:	mov	r8, r0
   151d4:	ldr	r3, [r5, #8]
   151d8:	str	r3, [r4, #4]
   151dc:	ble	15230 <table_serialize@@Base+0x9c>
   151e0:	mov	r4, #0
   151e4:	mov	r1, r4
   151e8:	mov	r0, r5
   151ec:	bl	132ec <table_get_column_name@@Base>
   151f0:	mov	sl, r0
   151f4:	mov	r6, r7
   151f8:	bl	11b8c <strlen@plt>
   151fc:	add	r7, r0, #1
   15200:	mov	r1, r4
   15204:	mov	r0, r5
   15208:	add	r4, r4, #1
   1520c:	bl	12fd4 <table_get_column_data_type@@Base>
   15210:	mov	r2, r7
   15214:	mov	r1, sl
   15218:	str	r0, [r6], #4
   1521c:	mov	r0, r6
   15220:	add	r7, r6, r7
   15224:	bl	11bbc <strncpy@plt>
   15228:	cmp	r8, r4
   1522c:	bne	151e4 <table_serialize@@Base+0x50>
   15230:	str	r9, [r7]
   15234:	cmp	r9, #0
   15238:	add	r6, r7, #8
   1523c:	ldr	r3, [r5, #24]
   15240:	str	r3, [r7, #4]
   15244:	movgt	r7, #0
   15248:	ble	15300 <table_serialize@@Base+0x16c>
   1524c:	cmp	r8, #0
   15250:	movgt	r4, #0
   15254:	ble	152f4 <table_serialize@@Base+0x160>
   15258:	mov	r1, r4
   1525c:	mov	r0, r5
   15260:	bl	12fd4 <table_get_column_data_type@@Base>
   15264:	cmp	r0, #23
   15268:	ldrls	pc, [pc, r0, lsl #2]
   1526c:	b	152e8 <table_serialize@@Base+0x154>
   15270:	ldrdeq	r5, [r1], -r0
   15274:	ldrdeq	r5, [r1], -r0
   15278:	andeq	r5, r1, r0, lsr #8
   1527c:	muleq	r1, r4, r3
   15280:			; <UNDEFINED> instruction: 0x000153b0
   15284:	andeq	r5, r1, ip, asr #7
   15288:	ldrdeq	r5, [r1], -r0
   1528c:	ldrdeq	r5, [r1], -r0
   15290:	andeq	r5, r1, r8, ror r3
   15294:	andeq	r5, r1, r8, ror r3
   15298:			; <UNDEFINED> instruction: 0x000153b0
   1529c:	andeq	r5, r1, ip, asr #7
   152a0:	ldrdeq	r5, [r1], -r0
   152a4:	ldrdeq	r5, [r1], -r0
   152a8:	andeq	r5, r1, r8, ror r3
   152ac:	andeq	r5, r1, r8, ror r3
   152b0:	andeq	r5, r1, r4, lsl #8
   152b4:	andeq	r5, r1, r8, ror #7
   152b8:	andeq	r5, r1, r8, ror #7
   152bc:	muleq	r1, r4, r3
   152c0:	muleq	r1, r4, r3
   152c4:	andeq	r5, r1, ip, lsr r4
   152c8:	muleq	r1, r4, r3
   152cc:	ldrdeq	r5, [r1], -r0
   152d0:	mov	r2, r4
   152d4:	mov	r1, r7
   152d8:	mov	r0, r5
   152dc:	bl	139c4 <table_get@@Base>
   152e0:	ldr	r3, [r0]
   152e4:	str	r3, [r6], #4
   152e8:	add	r4, r4, #1
   152ec:	cmp	r8, r4
   152f0:	bne	15258 <table_serialize@@Base+0xc4>
   152f4:	add	r7, r7, #1
   152f8:	cmp	r9, r7
   152fc:	bne	1524c <table_serialize@@Base+0xb8>
   15300:	ldr	r3, [r5, #32]
   15304:	str	r3, [r6]
   15308:	ldr	r3, [r5, #48]	; 0x30
   1530c:	str	r3, [r6, #4]
   15310:	ldr	r3, [r5, #32]
   15314:	cmp	r3, #0
   15318:	ble	1535c <table_serialize@@Base+0x1c8>
   1531c:	add	r6, r6, #20
   15320:	mov	r3, #0
   15324:	ldr	r2, [r5, #36]	; 0x24
   15328:	add	r6, r6, #12
   1532c:	ldr	r2, [r2, r3, lsl #2]
   15330:	str	r2, [r6, #-24]	; 0xffffffe8
   15334:	ldr	r2, [r5, #40]	; 0x28
   15338:	ldr	r2, [r2, r3, lsl #2]
   1533c:	str	r2, [r6, #-20]	; 0xffffffec
   15340:	ldr	r2, [r5, #44]	; 0x2c
   15344:	ldr	r2, [r2, r3, lsl #2]
   15348:	add	r3, r3, #1
   1534c:	str	r2, [r6, #-16]
   15350:	ldr	r2, [r5, #32]
   15354:	cmp	r2, r3
   15358:	bgt	15324 <table_serialize@@Base+0x190>
   1535c:	add	sp, sp, #4
   15360:	ldrd	r4, [sp]
   15364:	ldrd	r6, [sp, #8]
   15368:	ldrd	r8, [sp, #16]
   1536c:	ldrd	sl, [sp, #24]
   15370:	add	sp, sp, #32
   15374:	pop	{pc}		; (ldr pc, [sp], #4)
   15378:	mov	r2, r4
   1537c:	mov	r1, r7
   15380:	mov	r0, r5
   15384:	bl	139c4 <table_get@@Base>
   15388:	ldrd	r2, [r0]
   1538c:	strd	r2, [r6], #8
   15390:	b	152e8 <table_serialize@@Base+0x154>
   15394:	mov	r2, r4
   15398:	mov	r1, r7
   1539c:	mov	r0, r5
   153a0:	bl	139c4 <table_get@@Base>
   153a4:	ldrb	r3, [r0]
   153a8:	strb	r3, [r6], #1
   153ac:	b	152e8 <table_serialize@@Base+0x154>
   153b0:	mov	r2, r4
   153b4:	mov	r1, r7
   153b8:	mov	r0, r5
   153bc:	bl	139c4 <table_get@@Base>
   153c0:	ldrsh	r3, [r0]
   153c4:	strh	r3, [r6], #2
   153c8:	b	152e8 <table_serialize@@Base+0x154>
   153cc:	mov	r2, r4
   153d0:	mov	r1, r7
   153d4:	mov	r0, r5
   153d8:	bl	139c4 <table_get@@Base>
   153dc:	ldrh	r3, [r0]
   153e0:	strh	r3, [r6], #2
   153e4:	b	152e8 <table_serialize@@Base+0x154>
   153e8:	mov	r2, r4
   153ec:	mov	r1, r7
   153f0:	mov	r0, r5
   153f4:	bl	139c4 <table_get@@Base>
   153f8:	ldrd	r2, [r0]
   153fc:	strd	r2, [r6], #8
   15400:	b	152e8 <table_serialize@@Base+0x154>
   15404:	mov	r2, r4
   15408:	mov	r1, r7
   1540c:	mov	r0, r5
   15410:	bl	139c4 <table_get@@Base>
   15414:	ldr	r3, [r0]
   15418:	str	r3, [r6], #4
   1541c:	b	152e8 <table_serialize@@Base+0x154>
   15420:	mov	r2, r4
   15424:	mov	r1, r7
   15428:	mov	r0, r5
   1542c:	bl	139c4 <table_get@@Base>
   15430:	ldrsb	r3, [r0]
   15434:	strb	r3, [r6], #1
   15438:	b	152e8 <table_serialize@@Base+0x154>
   1543c:	mov	r2, r4
   15440:	mov	r1, r7
   15444:	mov	r0, r5
   15448:	bl	13ca0 <table_get_string@@Base>
   1544c:	mov	fp, r0
   15450:	bl	11b8c <strlen@plt>
   15454:	add	sl, r0, #1
   15458:	mov	r1, fp
   1545c:	mov	r0, r6
   15460:	mov	r2, sl
   15464:	bl	11bbc <strncpy@plt>
   15468:	add	r6, r6, sl
   1546c:	b	152e8 <table_serialize@@Base+0x154>

00015470 <table_deserialize@@Base>:
   15470:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15474:	mov	r5, r0
   15478:	add	r4, r0, #8
   1547c:	strd	r6, [sp, #8]
   15480:	strd	r8, [sp, #16]
   15484:	strd	sl, [sp, #24]
   15488:	str	lr, [sp, #32]
   1548c:	sub	sp, sp, #12
   15490:	bl	12558 <table_new@@Base>
   15494:	ldr	r8, [r5]
   15498:	mov	r6, r0
   1549c:	ldr	r3, [r5, #4]
   154a0:	cmp	r8, #0
   154a4:	str	r3, [r0, #8]
   154a8:	ble	154dc <table_deserialize@@Base+0x6c>
   154ac:	mov	r5, #0
   154b0:	ldr	r2, [r4], #4
   154b4:	mov	r0, r6
   154b8:	add	r5, r5, #1
   154bc:	mov	r1, r4
   154c0:	bl	12fe8 <table_add_column@@Base>
   154c4:	mov	r0, r4
   154c8:	bl	11b8c <strlen@plt>
   154cc:	add	r0, r0, #1
   154d0:	cmp	r8, r5
   154d4:	add	r4, r4, r0
   154d8:	bne	154b0 <table_deserialize@@Base+0x40>
   154dc:	ldr	r9, [r4]
   154e0:	add	r5, r4, #8
   154e4:	ldr	r3, [r4, #4]
   154e8:	cmp	r9, #0
   154ec:	str	r3, [r6, #24]
   154f0:	ble	155b0 <table_deserialize@@Base+0x140>
   154f4:	mov	r7, #0
   154f8:	mov	r0, r6
   154fc:	bl	13d94 <table_add_row@@Base>
   15500:	cmp	r8, #0
   15504:	ble	155a4 <table_deserialize@@Base+0x134>
   15508:	mov	r4, #0
   1550c:	mov	r1, r4
   15510:	mov	r0, r6
   15514:	bl	12fd4 <table_get_column_data_type@@Base>
   15518:	cmp	r0, #23
   1551c:	ldrls	pc, [pc, r0, lsl #2]
   15520:	b	15598 <table_deserialize@@Base+0x128>
   15524:	andeq	r5, r1, r8, asr #12
   15528:	ldrdeq	r5, [r1], -r4
   1552c:			; <UNDEFINED> instruction: 0x000157bc
   15530:	andeq	r5, r1, r4, lsr #15
   15534:	andeq	r5, r1, ip, lsl #15
   15538:	andeq	r5, r1, r8, lsr r8
   1553c:	andeq	r5, r1, r0, lsr #16
   15540:	andeq	r5, r1, r8, lsl #16
   15544:	andeq	r5, r1, ip, ror #15
   15548:	andeq	r5, r1, r0, ror r7
   1554c:	andeq	r5, r1, r8, asr r7
   15550:	andeq	r5, r1, r0, asr #14
   15554:	andeq	r5, r1, r8, lsr #14
   15558:	andeq	r5, r1, r0, lsl r7
   1555c:	strdeq	r5, [r1], -r4
   15560:	ldrdeq	r5, [r1], -r8
   15564:	andeq	r5, r1, r0, asr #13
   15568:	andeq	r5, r1, r8, lsr #13
   1556c:	muleq	r1, r0, r6
   15570:	andeq	r5, r1, r8, ror r6
   15574:	andeq	r5, r1, r0, ror #12
   15578:	andeq	r5, r1, r0, lsr #12
   1557c:	andeq	r5, r1, r8, lsl #12
   15580:	andeq	r5, r1, r4, lsl #11
   15584:	mov	r2, r4
   15588:	mov	r1, r7
   1558c:	ldr	r3, [r5], #4
   15590:	mov	r0, r6
   15594:	bl	15120 <table_set_ptr@@Base>
   15598:	add	r4, r4, #1
   1559c:	cmp	r8, r4
   155a0:	bne	1550c <table_deserialize@@Base+0x9c>
   155a4:	add	r7, r7, #1
   155a8:	cmp	r9, r7
   155ac:	bne	154f8 <table_deserialize@@Base+0x88>
   155b0:	ldr	r7, [r5]
   155b4:	ldr	r3, [r5, #4]
   155b8:	cmp	r7, #0
   155bc:	str	r3, [r6, #48]	; 0x30
   155c0:	ble	155e8 <table_deserialize@@Base+0x178>
   155c4:	add	r5, r5, #20
   155c8:	mov	r4, #0
   155cc:	add	r4, r4, #1
   155d0:	mov	r0, r6
   155d4:	ldmdb	r5, {r1, r2, r3}
   155d8:	add	r5, r5, #12
   155dc:	bl	12ba0 <table_register_callback@@Base>
   155e0:	cmp	r7, r4
   155e4:	bne	155cc <table_deserialize@@Base+0x15c>
   155e8:	mov	r0, r6
   155ec:	add	sp, sp, #12
   155f0:	ldrd	r4, [sp]
   155f4:	ldrd	r6, [sp, #8]
   155f8:	ldrd	r8, [sp, #16]
   155fc:	ldrd	sl, [sp, #24]
   15600:	add	sp, sp, #32
   15604:	pop	{pc}		; (ldr pc, [sp], #4)
   15608:	ldrb	r3, [r5], #1
   1560c:	mov	r2, r4
   15610:	mov	r1, r7
   15614:	mov	r0, r6
   15618:	bl	1430c <table_set_bool@@Base>
   1561c:	b	15598 <table_deserialize@@Base+0x128>
   15620:	mov	r3, r5
   15624:	mov	r2, r4
   15628:	mov	r1, r7
   1562c:	mov	r0, r6
   15630:	bl	14f4c <table_set_string@@Base>
   15634:	mov	r0, r5
   15638:	bl	11b8c <strlen@plt>
   1563c:	add	r0, r0, #1
   15640:	add	r5, r5, r0
   15644:	b	15598 <table_deserialize@@Base+0x128>
   15648:	mov	r2, r4
   1564c:	mov	r1, r7
   15650:	ldr	r3, [r5], #4
   15654:	mov	r0, r6
   15658:	bl	143a4 <table_set_int@@Base>
   1565c:	b	15598 <table_deserialize@@Base+0x128>
   15660:	ldrb	r3, [r5], #1
   15664:	mov	r2, r4
   15668:	mov	r1, r7
   1566c:	mov	r0, r6
   15670:	bl	15084 <table_set_uchar@@Base>
   15674:	b	15598 <table_deserialize@@Base+0x128>
   15678:	ldrb	r3, [r5], #1
   1567c:	mov	r2, r4
   15680:	mov	r1, r7
   15684:	mov	r0, r6
   15688:	bl	14fe8 <table_set_char@@Base>
   1568c:	b	15598 <table_deserialize@@Base+0x128>
   15690:	mov	r2, r4
   15694:	mov	r1, r7
   15698:	vldmia	r5!, {d0}
   1569c:	mov	r0, r6
   156a0:	bl	14ea4 <table_set_ldouble@@Base>
   156a4:	b	15598 <table_deserialize@@Base+0x128>
   156a8:	mov	r2, r4
   156ac:	mov	r1, r7
   156b0:	vldmia	r5!, {d0}
   156b4:	mov	r0, r6
   156b8:	bl	14dfc <table_set_double@@Base>
   156bc:	b	15598 <table_deserialize@@Base+0x128>
   156c0:	mov	r2, r4
   156c4:	mov	r1, r7
   156c8:	vldmia	r5!, {s0}
   156cc:	mov	r0, r6
   156d0:	bl	14d60 <table_set_float@@Base>
   156d4:	b	15598 <table_deserialize@@Base+0x128>
   156d8:	ldrd	sl, [r5], #8
   156dc:	mov	r2, r4
   156e0:	mov	r1, r7
   156e4:	mov	r0, r6
   156e8:	strd	sl, [sp]
   156ec:	bl	14cb8 <table_set_ullong@@Base>
   156f0:	b	15598 <table_deserialize@@Base+0x128>
   156f4:	ldrd	sl, [r5], #8
   156f8:	mov	r2, r4
   156fc:	mov	r1, r7
   15700:	mov	r0, r6
   15704:	strd	sl, [sp]
   15708:	bl	14c10 <table_set_llong@@Base>
   1570c:	b	15598 <table_deserialize@@Base+0x128>
   15710:	mov	r2, r4
   15714:	mov	r1, r7
   15718:	ldr	r3, [r5], #4
   1571c:	mov	r0, r6
   15720:	bl	14b74 <table_set_ulong@@Base>
   15724:	b	15598 <table_deserialize@@Base+0x128>
   15728:	mov	r2, r4
   1572c:	mov	r1, r7
   15730:	ldr	r3, [r5], #4
   15734:	mov	r0, r6
   15738:	bl	14ad8 <table_set_long@@Base>
   1573c:	b	15598 <table_deserialize@@Base+0x128>
   15740:	ldrh	r3, [r5], #2
   15744:	mov	r2, r4
   15748:	mov	r1, r7
   1574c:	mov	r0, r6
   15750:	bl	14a40 <table_set_ushort@@Base>
   15754:	b	15598 <table_deserialize@@Base+0x128>
   15758:	ldrsh	r3, [r5], #2
   1575c:	mov	r2, r4
   15760:	mov	r1, r7
   15764:	mov	r0, r6
   15768:	bl	149a8 <table_set_short@@Base>
   1576c:	b	15598 <table_deserialize@@Base+0x128>
   15770:	ldrd	sl, [r5], #8
   15774:	mov	r2, r4
   15778:	mov	r1, r7
   1577c:	mov	r0, r6
   15780:	strd	sl, [sp]
   15784:	bl	14904 <table_set_uint64@@Base>
   15788:	b	15598 <table_deserialize@@Base+0x128>
   1578c:	ldrsh	r3, [r5], #2
   15790:	mov	r2, r4
   15794:	mov	r1, r7
   15798:	mov	r0, r6
   1579c:	bl	14604 <table_set_int16@@Base>
   157a0:	b	15598 <table_deserialize@@Base+0x128>
   157a4:	ldrb	r3, [r5], #1
   157a8:	mov	r2, r4
   157ac:	mov	r1, r7
   157b0:	mov	r0, r6
   157b4:	bl	1456c <table_set_uint8@@Base>
   157b8:	b	15598 <table_deserialize@@Base+0x128>
   157bc:	ldrsb	r3, [r5], #1
   157c0:	mov	r2, r4
   157c4:	mov	r1, r7
   157c8:	mov	r0, r6
   157cc:	bl	144d4 <table_set_int8@@Base>
   157d0:	b	15598 <table_deserialize@@Base+0x128>
   157d4:	mov	r2, r4
   157d8:	mov	r1, r7
   157dc:	ldr	r3, [r5], #4
   157e0:	mov	r0, r6
   157e4:	bl	1443c <table_set_uint@@Base>
   157e8:	b	15598 <table_deserialize@@Base+0x128>
   157ec:	ldrd	sl, [r5], #8
   157f0:	mov	r2, r4
   157f4:	mov	r1, r7
   157f8:	mov	r0, r6
   157fc:	strd	sl, [sp]
   15800:	bl	14864 <table_set_int64@@Base>
   15804:	b	15598 <table_deserialize@@Base+0x128>
   15808:	mov	r2, r4
   1580c:	mov	r1, r7
   15810:	ldr	r3, [r5], #4
   15814:	mov	r0, r6
   15818:	bl	147cc <table_set_uint32@@Base>
   1581c:	b	15598 <table_deserialize@@Base+0x128>
   15820:	mov	r2, r4
   15824:	mov	r1, r7
   15828:	ldr	r3, [r5], #4
   1582c:	mov	r0, r6
   15830:	bl	14734 <table_set_int32@@Base>
   15834:	b	15598 <table_deserialize@@Base+0x128>
   15838:	ldrh	r3, [r5], #2
   1583c:	mov	r2, r4
   15840:	mov	r1, r7
   15844:	mov	r0, r6
   15848:	bl	1469c <table_set_uint16@@Base>
   1584c:	b	15598 <table_deserialize@@Base+0x128>

00015850 <table_cell_init@@Base>:
   15850:	str	r4, [sp, #-8]!
   15854:	mov	r4, r2
   15858:	str	lr, [sp, #4]
   1585c:	bl	13f80 <table_get_row_ptr@@Base>
   15860:	ldr	r3, [r0]
   15864:	mov	r2, #0
   15868:	str	r2, [r3, r4, lsl #2]
   1586c:	ldr	r4, [sp]
   15870:	add	sp, sp, #4
   15874:	pop	{pc}		; (ldr pc, [sp], #4)

00015878 <table_cell_destroy@@Base>:
   15878:	strd	r4, [sp, #-16]!
   1587c:	mov	r4, r2
   15880:	mov	r5, r0
   15884:	str	r6, [sp, #8]
   15888:	mov	r6, r1
   1588c:	mov	r1, r2
   15890:	str	lr, [sp, #12]
   15894:	bl	12fd4 <table_get_column_data_type@@Base>
   15898:	cmp	r0, #23
   1589c:	bne	158b0 <table_cell_destroy@@Base+0x38>
   158a0:	ldrd	r4, [sp]
   158a4:	ldr	r6, [sp, #8]
   158a8:	add	sp, sp, #12
   158ac:	pop	{pc}		; (ldr pc, [sp], #4)
   158b0:	mov	r1, r6
   158b4:	mov	r0, r5
   158b8:	bl	13f80 <table_get_row_ptr@@Base>
   158bc:	ldr	r3, [r0]
   158c0:	ldr	r0, [r3, r4, lsl #2]
   158c4:	cmp	r0, #0
   158c8:	beq	158a0 <table_cell_destroy@@Base+0x28>
   158cc:	ldrd	r4, [sp]
   158d0:	ldr	r6, [sp, #8]
   158d4:	ldr	lr, [sp, #12]
   158d8:	add	sp, sp, #16
   158dc:	b	11b38 <free@plt>

000158e0 <table_cell_to_buffer@@Base>:
   158e0:	strd	r4, [sp, #-20]!	; 0xffffffec
   158e4:	mov	r4, r2
   158e8:	mov	r5, r3
   158ec:	strd	r6, [sp, #8]
   158f0:	mov	r7, r1
   158f4:	mov	r1, r2
   158f8:	str	lr, [sp, #16]
   158fc:	sub	sp, sp, #12
   15900:	mov	r6, r0
   15904:	bl	12fd4 <table_get_column_data_type@@Base>
   15908:	cmp	r0, #23
   1590c:	ldrls	pc, [pc, r0, lsl #2]
   15910:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15914:	andeq	r5, r1, r8, lsr #25
   15918:	muleq	r1, r4, ip
   1591c:	andeq	r5, r1, r0, lsl #25
   15920:	andeq	r5, r1, ip, ror #24
   15924:	andeq	r5, r1, r8, asr ip
   15928:	andeq	r5, r1, r4, asr #24
   1592c:	andeq	r5, r1, r0, lsr ip
   15930:	andeq	r5, r1, r4, lsl #24
   15934:	strdeq	r5, [r1], -r0
   15938:	ldrdeq	r5, [r1], -ip
   1593c:			; <UNDEFINED> instruction: 0x00015bb0
   15940:	andeq	r5, r1, r4, lsl #23
   15944:	andeq	r5, r1, r8, asr fp
   15948:	andeq	r5, r1, ip, lsr #22
   1594c:	andeq	r5, r1, r0, lsl #22
   15950:	ldrdeq	r5, [r1], -r4
   15954:	andeq	r5, r1, r4, lsr #21
   15958:	andeq	r5, r1, r8, ror sl
   1595c:	andeq	r5, r1, ip, asr #20
   15960:	andeq	r5, r1, r8, lsr sl
   15964:	andeq	r5, r1, r4, ror r9
   15968:	andeq	r5, r1, ip, lsl #20
   1596c:	andeq	r5, r1, r0, ror #19
   15970:			; <UNDEFINED> instruction: 0x000159b4
   15974:	mov	r2, r4
   15978:	mov	r1, r7
   1597c:	mov	r0, r6
   15980:	bl	13c80 <table_get_uchar@@Base>
   15984:	mov	r3, r0
   15988:	movw	r2, #25880	; 0x6518
   1598c:	movt	r2, #1
   15990:	mov	r0, r5
   15994:	ldr	r1, [sp, #32]
   15998:	bl	11ba4 <snprintf@plt>
   1599c:	mov	r0, #0
   159a0:	add	sp, sp, #12
   159a4:	ldrd	r4, [sp]
   159a8:	ldrd	r6, [sp, #8]
   159ac:	add	sp, sp, #16
   159b0:	pop	{pc}		; (ldr pc, [sp], #4)
   159b4:	mov	r2, r4
   159b8:	mov	r1, r7
   159bc:	mov	r0, r6
   159c0:	bl	13cbc <table_get_ptr@@Base>
   159c4:	mov	r3, r0
   159c8:	movw	r2, #25884	; 0x651c
   159cc:	movt	r2, #1
   159d0:	mov	r0, r5
   159d4:	ldr	r1, [sp, #32]
   159d8:	bl	11ba4 <snprintf@plt>
   159dc:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   159e0:	mov	r2, r4
   159e4:	mov	r1, r7
   159e8:	mov	r0, r6
   159ec:	bl	139e0 <table_get_bool@@Base>
   159f0:	mov	r3, r0
   159f4:	movw	r2, #25612	; 0x640c
   159f8:	movt	r2, #1
   159fc:	mov	r0, r5
   15a00:	ldr	r1, [sp, #32]
   15a04:	bl	11ba4 <snprintf@plt>
   15a08:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15a0c:	mov	r2, r4
   15a10:	mov	r1, r7
   15a14:	mov	r0, r6
   15a18:	bl	13ca0 <table_get_string@@Base>
   15a1c:	mov	r3, r0
   15a20:	movw	r2, #25864	; 0x6508
   15a24:	movt	r2, #1
   15a28:	mov	r0, r5
   15a2c:	ldr	r1, [sp, #32]
   15a30:	bl	11ba4 <snprintf@plt>
   15a34:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15a38:	mov	r2, r4
   15a3c:	mov	r1, r7
   15a40:	mov	r0, r6
   15a44:	bl	13c60 <table_get_char@@Base>
   15a48:	b	15984 <table_cell_to_buffer@@Base+0xa4>
   15a4c:	mov	r2, r4
   15a50:	mov	r1, r7
   15a54:	mov	r0, r6
   15a58:	bl	13c40 <table_get_ldouble@@Base>
   15a5c:	mov	r0, r5
   15a60:	movw	r2, #25876	; 0x6514
   15a64:	movt	r2, #1
   15a68:	vstr	d0, [sp]
   15a6c:	ldr	r1, [sp, #32]
   15a70:	bl	11ba4 <snprintf@plt>
   15a74:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15a78:	mov	r2, r4
   15a7c:	mov	r1, r7
   15a80:	mov	r0, r6
   15a84:	bl	13c20 <table_get_double@@Base>
   15a88:	mov	r0, r5
   15a8c:	movw	r2, #25872	; 0x6510
   15a90:	movt	r2, #1
   15a94:	vstr	d0, [sp]
   15a98:	ldr	r1, [sp, #32]
   15a9c:	bl	11ba4 <snprintf@plt>
   15aa0:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15aa4:	mov	r2, r4
   15aa8:	mov	r1, r7
   15aac:	mov	r0, r6
   15ab0:	bl	13c00 <table_get_float@@Base>
   15ab4:	vcvt.f64.f32	d0, s0
   15ab8:	mov	r0, r5
   15abc:	movw	r2, #25868	; 0x650c
   15ac0:	movt	r2, #1
   15ac4:	ldr	r1, [sp, #32]
   15ac8:	vstr	d0, [sp]
   15acc:	bl	11ba4 <snprintf@plt>
   15ad0:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15ad4:	mov	r2, r4
   15ad8:	mov	r1, r7
   15adc:	mov	r0, r6
   15ae0:	bl	13be0 <table_get_ullong@@Base>
   15ae4:	movw	r2, #25840	; 0x64f0
   15ae8:	movt	r2, #1
   15aec:	strd	r0, [sp]
   15af0:	mov	r0, r5
   15af4:	ldr	r1, [sp, #32]
   15af8:	bl	11ba4 <snprintf@plt>
   15afc:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15b00:	mov	r2, r4
   15b04:	mov	r1, r7
   15b08:	mov	r0, r6
   15b0c:	bl	13bc0 <table_get_llong@@Base>
   15b10:	movw	r2, #25832	; 0x64e8
   15b14:	movt	r2, #1
   15b18:	strd	r0, [sp]
   15b1c:	mov	r0, r5
   15b20:	ldr	r1, [sp, #32]
   15b24:	bl	11ba4 <snprintf@plt>
   15b28:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15b2c:	mov	r2, r4
   15b30:	mov	r1, r7
   15b34:	mov	r0, r6
   15b38:	bl	13ba0 <table_get_ulong@@Base>
   15b3c:	mov	r3, r0
   15b40:	movw	r2, #25860	; 0x6504
   15b44:	movt	r2, #1
   15b48:	mov	r0, r5
   15b4c:	ldr	r1, [sp, #32]
   15b50:	bl	11ba4 <snprintf@plt>
   15b54:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15b58:	mov	r2, r4
   15b5c:	mov	r1, r7
   15b60:	mov	r0, r6
   15b64:	bl	13b80 <table_get_long@@Base>
   15b68:	mov	r3, r0
   15b6c:	movw	r2, #25856	; 0x6500
   15b70:	movt	r2, #1
   15b74:	mov	r0, r5
   15b78:	ldr	r1, [sp, #32]
   15b7c:	bl	11ba4 <snprintf@plt>
   15b80:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15b84:	mov	r2, r4
   15b88:	mov	r1, r7
   15b8c:	mov	r0, r6
   15b90:	bl	13b60 <table_get_ushort@@Base>
   15b94:	mov	r3, r0
   15b98:	movw	r2, #25852	; 0x64fc
   15b9c:	movt	r2, #1
   15ba0:	mov	r0, r5
   15ba4:	ldr	r1, [sp, #32]
   15ba8:	bl	11ba4 <snprintf@plt>
   15bac:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15bb0:	mov	r2, r4
   15bb4:	mov	r1, r7
   15bb8:	mov	r0, r6
   15bbc:	bl	13b40 <table_get_short@@Base>
   15bc0:	mov	r3, r0
   15bc4:	movw	r2, #25848	; 0x64f8
   15bc8:	movt	r2, #1
   15bcc:	mov	r0, r5
   15bd0:	ldr	r1, [sp, #32]
   15bd4:	bl	11ba4 <snprintf@plt>
   15bd8:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15bdc:	mov	r2, r4
   15be0:	mov	r1, r7
   15be4:	mov	r0, r6
   15be8:	bl	13b20 <table_get_uint64@@Base>
   15bec:	b	15ae4 <table_cell_to_buffer@@Base+0x204>
   15bf0:	mov	r2, r4
   15bf4:	mov	r1, r7
   15bf8:	mov	r0, r6
   15bfc:	bl	13b00 <table_get_int64@@Base>
   15c00:	b	15b10 <table_cell_to_buffer@@Base+0x230>
   15c04:	mov	r2, r4
   15c08:	mov	r1, r7
   15c0c:	mov	r0, r6
   15c10:	bl	13ae0 <table_get_uint32@@Base>
   15c14:	mov	r3, r0
   15c18:	movw	r2, #25828	; 0x64e4
   15c1c:	movt	r2, #1
   15c20:	mov	r0, r5
   15c24:	ldr	r1, [sp, #32]
   15c28:	bl	11ba4 <snprintf@plt>
   15c2c:	b	1599c <table_cell_to_buffer@@Base+0xbc>
   15c30:	mov	r2, r4
   15c34:	mov	r1, r7
   15c38:	mov	r0, r6
   15c3c:	bl	13ac0 <table_get_int32@@Base>
   15c40:	b	159f0 <table_cell_to_buffer@@Base+0x110>
   15c44:	mov	r2, r4
   15c48:	mov	r1, r7
   15c4c:	mov	r0, r6
   15c50:	bl	13aa0 <table_get_uint16@@Base>
   15c54:	b	15c14 <table_cell_to_buffer@@Base+0x334>
   15c58:	mov	r2, r4
   15c5c:	mov	r1, r7
   15c60:	mov	r0, r6
   15c64:	bl	13a80 <table_get_int16@@Base>
   15c68:	b	159f0 <table_cell_to_buffer@@Base+0x110>
   15c6c:	mov	r2, r4
   15c70:	mov	r1, r7
   15c74:	mov	r0, r6
   15c78:	bl	13a60 <table_get_uint8@@Base>
   15c7c:	b	15c14 <table_cell_to_buffer@@Base+0x334>
   15c80:	mov	r2, r4
   15c84:	mov	r1, r7
   15c88:	mov	r0, r6
   15c8c:	bl	13a40 <table_get_int8@@Base>
   15c90:	b	159f0 <table_cell_to_buffer@@Base+0x110>
   15c94:	mov	r2, r4
   15c98:	mov	r1, r7
   15c9c:	mov	r0, r6
   15ca0:	bl	13a20 <table_get_uint@@Base>
   15ca4:	b	15c14 <table_cell_to_buffer@@Base+0x334>
   15ca8:	mov	r2, r4
   15cac:	mov	r1, r7
   15cb0:	mov	r0, r6
   15cb4:	bl	13a00 <table_get_int@@Base>
   15cb8:	b	159f0 <table_cell_to_buffer@@Base+0x110>

00015cbc <table_cell_from_buffer@@Base>:
   15cbc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15cc0:	mov	r4, r2
   15cc4:	mov	r5, r3
   15cc8:	strd	r6, [sp, #8]
   15ccc:	strd	r8, [sp, #16]
   15cd0:	mov	r9, r1
   15cd4:	mov	r1, r2
   15cd8:	str	lr, [sp, #24]
   15cdc:	sub	sp, sp, #268	; 0x10c
   15ce0:	mov	r8, r0
   15ce4:	bl	12fd4 <table_get_column_data_type@@Base>
   15ce8:	cmp	r0, #23
   15cec:	ldrls	pc, [pc, r0, lsl #2]
   15cf0:	b	162e8 <table_cell_from_buffer@@Base+0x62c>
   15cf4:	andeq	r6, r1, ip, ror r2
   15cf8:	andeq	r6, r1, r4, asr #4
   15cfc:	andeq	r6, r1, ip, lsl #4
   15d00:	ldrdeq	r6, [r1], -r4
   15d04:	muleq	r1, ip, r1
   15d08:	andeq	r6, r1, r4, ror #2
   15d0c:	andeq	r6, r1, ip, lsr #2
   15d10:	strdeq	r6, [r1], -r4
   15d14:	strheq	r6, [r1], -r8
   15d18:	andeq	r6, r1, ip, ror r0
   15d1c:	andeq	r6, r1, r4, asr #32
   15d20:	andeq	r6, r1, ip
   15d24:	ldrdeq	r5, [r1], -r4
   15d28:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15d2c:	andeq	r5, r1, r0, ror #30
   15d30:	andeq	r5, r1, r4, lsr #30
   15d34:			; <UNDEFINED> instruction: 0x00015eb4
   15d38:	andeq	r5, r1, ip, ror lr
   15d3c:	andeq	r5, r1, ip, ror #29
   15d40:	ldrdeq	r5, [r1], -r4
   15d44:	andeq	r5, r1, r4, asr #28
   15d48:	andeq	r5, r1, ip, lsl #28
   15d4c:	muleq	r1, r0, sp
   15d50:	andeq	r5, r1, r4, asr sp
   15d54:	mov	r0, r5
   15d58:	movw	r1, #25884	; 0x651c
   15d5c:	movt	r1, #1
   15d60:	add	r2, sp, #8
   15d64:	bl	11bb0 <__isoc99_sscanf@plt>
   15d68:	cmp	r0, #1
   15d6c:	beq	162b4 <table_cell_from_buffer@@Base+0x5f8>
   15d70:	mvn	r5, #0
   15d74:	mov	r0, r5
   15d78:	add	sp, sp, #268	; 0x10c
   15d7c:	ldrd	r4, [sp]
   15d80:	ldrd	r6, [sp, #8]
   15d84:	ldrd	r8, [sp, #16]
   15d88:	add	sp, sp, #24
   15d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d90:	mov	r0, r5
   15d94:	movw	r1, #25612	; 0x640c
   15d98:	movt	r1, #1
   15d9c:	add	r2, sp, #8
   15da0:	bl	11bb0 <__isoc99_sscanf@plt>
   15da4:	cmp	r0, #1
   15da8:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15dac:	ldr	r5, [sp, #8]
   15db0:	cmp	r5, #0
   15db4:	beq	162d0 <table_cell_from_buffer@@Base+0x614>
   15db8:	mov	r3, r0
   15dbc:	mov	r2, r4
   15dc0:	mov	r1, r9
   15dc4:	mov	r0, r8
   15dc8:	bl	1430c <table_set_bool@@Base>
   15dcc:	mov	r5, #0
   15dd0:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15dd4:	mov	r0, r5
   15dd8:	movw	r1, #25880	; 0x6518
   15ddc:	movt	r1, #1
   15de0:	add	r2, sp, #8
   15de4:	bl	11bb0 <__isoc99_sscanf@plt>
   15de8:	cmp	r0, #1
   15dec:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15df0:	mov	r2, r4
   15df4:	mov	r1, r9
   15df8:	ldrb	r3, [sp, #8]
   15dfc:	mov	r0, r8
   15e00:	mov	r5, #0
   15e04:	bl	14fe8 <table_set_char@@Base>
   15e08:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15e0c:	mov	r0, r5
   15e10:	add	r2, sp, #8
   15e14:	movw	r1, #25864	; 0x6508
   15e18:	movt	r1, #1
   15e1c:	bl	11bb0 <__isoc99_sscanf@plt>
   15e20:	cmp	r0, #1
   15e24:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15e28:	add	r3, sp, #8
   15e2c:	mov	r2, r4
   15e30:	mov	r1, r9
   15e34:	mov	r0, r8
   15e38:	bl	14f4c <table_set_string@@Base>
   15e3c:	mov	r5, #0
   15e40:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15e44:	mov	r0, r5
   15e48:	movw	r1, #25880	; 0x6518
   15e4c:	movt	r1, #1
   15e50:	add	r2, sp, #8
   15e54:	bl	11bb0 <__isoc99_sscanf@plt>
   15e58:	cmp	r0, #1
   15e5c:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15e60:	mov	r2, r4
   15e64:	mov	r1, r9
   15e68:	ldrb	r3, [sp, #8]
   15e6c:	mov	r0, r8
   15e70:	mov	r5, #0
   15e74:	bl	15084 <table_set_uchar@@Base>
   15e78:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15e7c:	mov	r0, r5
   15e80:	movw	r1, #25872	; 0x6510
   15e84:	movt	r1, #1
   15e88:	add	r2, sp, #8
   15e8c:	bl	11bb0 <__isoc99_sscanf@plt>
   15e90:	cmp	r0, #1
   15e94:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15e98:	mov	r2, r4
   15e9c:	mov	r1, r9
   15ea0:	vldr	d0, [sp, #8]
   15ea4:	mov	r0, r8
   15ea8:	mov	r5, #0
   15eac:	bl	14dfc <table_set_double@@Base>
   15eb0:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15eb4:	mov	r0, r5
   15eb8:	movw	r1, #25868	; 0x650c
   15ebc:	movt	r1, #1
   15ec0:	add	r2, sp, #8
   15ec4:	bl	11bb0 <__isoc99_sscanf@plt>
   15ec8:	cmp	r0, #1
   15ecc:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15ed0:	mov	r2, r4
   15ed4:	mov	r1, r9
   15ed8:	vldr	s0, [sp, #8]
   15edc:	mov	r0, r8
   15ee0:	mov	r5, #0
   15ee4:	bl	14d60 <table_set_float@@Base>
   15ee8:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15eec:	mov	r0, r5
   15ef0:	movw	r1, #25876	; 0x6514
   15ef4:	movt	r1, #1
   15ef8:	add	r2, sp, #8
   15efc:	bl	11bb0 <__isoc99_sscanf@plt>
   15f00:	cmp	r0, #1
   15f04:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15f08:	mov	r2, r4
   15f0c:	mov	r1, r9
   15f10:	vldr	d0, [sp, #8]
   15f14:	mov	r0, r8
   15f18:	mov	r5, #0
   15f1c:	bl	14ea4 <table_set_ldouble@@Base>
   15f20:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15f24:	mov	r0, r5
   15f28:	add	r2, sp, #8
   15f2c:	movw	r1, #25840	; 0x64f0
   15f30:	movt	r1, #1
   15f34:	bl	11bb0 <__isoc99_sscanf@plt>
   15f38:	cmp	r0, #1
   15f3c:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15f40:	ldrd	r6, [sp, #8]
   15f44:	mov	r2, r4
   15f48:	mov	r1, r9
   15f4c:	mov	r0, r8
   15f50:	mov	r5, #0
   15f54:	strd	r6, [sp]
   15f58:	bl	14cb8 <table_set_ullong@@Base>
   15f5c:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15f60:	mov	r0, r5
   15f64:	add	r2, sp, #8
   15f68:	movw	r1, #25832	; 0x64e8
   15f6c:	movt	r1, #1
   15f70:	bl	11bb0 <__isoc99_sscanf@plt>
   15f74:	cmp	r0, #1
   15f78:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15f7c:	ldrd	r6, [sp, #8]
   15f80:	mov	r2, r4
   15f84:	mov	r1, r9
   15f88:	mov	r0, r8
   15f8c:	mov	r5, #0
   15f90:	strd	r6, [sp]
   15f94:	bl	14c10 <table_set_llong@@Base>
   15f98:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15f9c:	mov	r0, r5
   15fa0:	movw	r1, #25860	; 0x6504
   15fa4:	movt	r1, #1
   15fa8:	add	r2, sp, #8
   15fac:	bl	11bb0 <__isoc99_sscanf@plt>
   15fb0:	cmp	r0, #1
   15fb4:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15fb8:	mov	r2, r4
   15fbc:	mov	r1, r9
   15fc0:	ldr	r3, [sp, #8]
   15fc4:	mov	r0, r8
   15fc8:	mov	r5, #0
   15fcc:	bl	14b74 <table_set_ulong@@Base>
   15fd0:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   15fd4:	mov	r0, r5
   15fd8:	movw	r1, #25856	; 0x6500
   15fdc:	movt	r1, #1
   15fe0:	add	r2, sp, #8
   15fe4:	bl	11bb0 <__isoc99_sscanf@plt>
   15fe8:	cmp	r0, #1
   15fec:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   15ff0:	mov	r2, r4
   15ff4:	mov	r1, r9
   15ff8:	ldr	r3, [sp, #8]
   15ffc:	mov	r0, r8
   16000:	mov	r5, #0
   16004:	bl	14ad8 <table_set_long@@Base>
   16008:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   1600c:	mov	r0, r5
   16010:	add	r2, sp, #8
   16014:	movw	r1, #25852	; 0x64fc
   16018:	movt	r1, #1
   1601c:	bl	11bb0 <__isoc99_sscanf@plt>
   16020:	cmp	r0, #1
   16024:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16028:	ldrh	r3, [sp, #8]
   1602c:	mov	r2, r4
   16030:	mov	r1, r9
   16034:	mov	r0, r8
   16038:	mov	r5, #0
   1603c:	bl	14a40 <table_set_ushort@@Base>
   16040:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   16044:	mov	r0, r5
   16048:	add	r2, sp, #8
   1604c:	movw	r1, #25848	; 0x64f8
   16050:	movt	r1, #1
   16054:	bl	11bb0 <__isoc99_sscanf@plt>
   16058:	cmp	r0, #1
   1605c:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16060:	ldrsh	r3, [sp, #8]
   16064:	mov	r2, r4
   16068:	mov	r1, r9
   1606c:	mov	r0, r8
   16070:	mov	r5, #0
   16074:	bl	149a8 <table_set_short@@Base>
   16078:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   1607c:	mov	r0, r5
   16080:	add	r2, sp, #8
   16084:	movw	r1, #25840	; 0x64f0
   16088:	movt	r1, #1
   1608c:	bl	11bb0 <__isoc99_sscanf@plt>
   16090:	cmp	r0, #1
   16094:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16098:	ldrd	r6, [sp, #8]
   1609c:	mov	r2, r4
   160a0:	mov	r1, r9
   160a4:	mov	r0, r8
   160a8:	mov	r5, #0
   160ac:	strd	r6, [sp]
   160b0:	bl	14904 <table_set_uint64@@Base>
   160b4:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   160b8:	mov	r0, r5
   160bc:	add	r2, sp, #8
   160c0:	movw	r1, #25832	; 0x64e8
   160c4:	movt	r1, #1
   160c8:	bl	11bb0 <__isoc99_sscanf@plt>
   160cc:	cmp	r0, #1
   160d0:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   160d4:	ldrd	r6, [sp, #8]
   160d8:	mov	r2, r4
   160dc:	mov	r1, r9
   160e0:	mov	r0, r8
   160e4:	mov	r5, #0
   160e8:	strd	r6, [sp]
   160ec:	bl	14864 <table_set_int64@@Base>
   160f0:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   160f4:	mov	r0, r5
   160f8:	movw	r1, #25828	; 0x64e4
   160fc:	movt	r1, #1
   16100:	add	r2, sp, #8
   16104:	bl	11bb0 <__isoc99_sscanf@plt>
   16108:	cmp	r0, #1
   1610c:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16110:	mov	r2, r4
   16114:	mov	r1, r9
   16118:	ldr	r3, [sp, #8]
   1611c:	mov	r0, r8
   16120:	mov	r5, #0
   16124:	bl	147cc <table_set_uint32@@Base>
   16128:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   1612c:	mov	r0, r5
   16130:	movw	r1, #25612	; 0x640c
   16134:	movt	r1, #1
   16138:	add	r2, sp, #8
   1613c:	bl	11bb0 <__isoc99_sscanf@plt>
   16140:	cmp	r0, #1
   16144:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16148:	mov	r2, r4
   1614c:	mov	r1, r9
   16150:	ldr	r3, [sp, #8]
   16154:	mov	r0, r8
   16158:	mov	r5, #0
   1615c:	bl	14734 <table_set_int32@@Base>
   16160:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   16164:	mov	r0, r5
   16168:	add	r2, sp, #8
   1616c:	movw	r1, #25852	; 0x64fc
   16170:	movt	r1, #1
   16174:	bl	11bb0 <__isoc99_sscanf@plt>
   16178:	cmp	r0, #1
   1617c:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16180:	ldrh	r3, [sp, #8]
   16184:	mov	r2, r4
   16188:	mov	r1, r9
   1618c:	mov	r0, r8
   16190:	mov	r5, #0
   16194:	bl	1469c <table_set_uint16@@Base>
   16198:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   1619c:	mov	r0, r5
   161a0:	add	r2, sp, #8
   161a4:	movw	r1, #25848	; 0x64f8
   161a8:	movt	r1, #1
   161ac:	bl	11bb0 <__isoc99_sscanf@plt>
   161b0:	cmp	r0, #1
   161b4:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   161b8:	ldrsh	r3, [sp, #8]
   161bc:	mov	r2, r4
   161c0:	mov	r1, r9
   161c4:	mov	r0, r8
   161c8:	mov	r5, #0
   161cc:	bl	14604 <table_set_int16@@Base>
   161d0:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   161d4:	mov	r0, r5
   161d8:	movw	r1, #25896	; 0x6528
   161dc:	movt	r1, #1
   161e0:	add	r2, sp, #8
   161e4:	bl	11bb0 <__isoc99_sscanf@plt>
   161e8:	cmp	r0, #1
   161ec:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   161f0:	mov	r2, r4
   161f4:	mov	r1, r9
   161f8:	ldrb	r3, [sp, #8]
   161fc:	mov	r0, r8
   16200:	mov	r5, #0
   16204:	bl	1456c <table_set_uint8@@Base>
   16208:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   1620c:	mov	r0, r5
   16210:	add	r2, sp, #8
   16214:	movw	r1, #25888	; 0x6520
   16218:	movt	r1, #1
   1621c:	bl	11bb0 <__isoc99_sscanf@plt>
   16220:	cmp	r0, #1
   16224:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16228:	ldrsb	r3, [sp, #8]
   1622c:	mov	r2, r4
   16230:	mov	r1, r9
   16234:	mov	r0, r8
   16238:	mov	r5, #0
   1623c:	bl	144d4 <table_set_int8@@Base>
   16240:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   16244:	mov	r0, r5
   16248:	movw	r1, #25828	; 0x64e4
   1624c:	movt	r1, #1
   16250:	add	r2, sp, #8
   16254:	bl	11bb0 <__isoc99_sscanf@plt>
   16258:	cmp	r0, #1
   1625c:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16260:	mov	r2, r4
   16264:	mov	r1, r9
   16268:	ldr	r3, [sp, #8]
   1626c:	mov	r0, r8
   16270:	mov	r5, #0
   16274:	bl	1443c <table_set_uint@@Base>
   16278:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   1627c:	mov	r0, r5
   16280:	movw	r1, #25612	; 0x640c
   16284:	movt	r1, #1
   16288:	add	r2, sp, #8
   1628c:	bl	11bb0 <__isoc99_sscanf@plt>
   16290:	cmp	r0, #1
   16294:	bne	15d70 <table_cell_from_buffer@@Base+0xb4>
   16298:	mov	r2, r4
   1629c:	mov	r1, r9
   162a0:	ldr	r3, [sp, #8]
   162a4:	mov	r0, r8
   162a8:	mov	r5, #0
   162ac:	bl	143a4 <table_set_int@@Base>
   162b0:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   162b4:	mov	r2, r4
   162b8:	mov	r1, r9
   162bc:	ldr	r3, [sp, #8]
   162c0:	mov	r0, r8
   162c4:	mov	r5, #0
   162c8:	bl	15120 <table_set_ptr@@Base>
   162cc:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   162d0:	mov	r2, r4
   162d4:	mov	r1, r9
   162d8:	mov	r0, r8
   162dc:	mov	r3, r5
   162e0:	bl	1430c <table_set_bool@@Base>
   162e4:	b	15d74 <table_cell_from_buffer@@Base+0xb8>
   162e8:	mov	r5, #0
   162ec:	b	15d74 <table_cell_from_buffer@@Base+0xb8>

000162f0 <table_cell_nullify@@Base>:
   162f0:	strd	r4, [sp, #-16]!
   162f4:	mov	r5, r2
   162f8:	str	r6, [sp, #8]
   162fc:	str	lr, [sp, #12]
   16300:	bl	13f80 <table_get_row_ptr@@Base>
   16304:	ldr	r4, [r0]
   16308:	ldr	r0, [r4, r5, lsl #2]
   1630c:	cmp	r0, #0
   16310:	beq	16320 <table_cell_nullify@@Base+0x30>
   16314:	bl	11b38 <free@plt>
   16318:	mov	r3, #0
   1631c:	str	r3, [r4, r5, lsl #2]
   16320:	ldrd	r4, [sp]
   16324:	mov	r0, #0
   16328:	ldr	r6, [sp, #8]
   1632c:	add	sp, sp, #12
   16330:	pop	{pc}		; (ldr pc, [sp], #4)

00016334 <table_get_cell_ptr@@Base>:
   16334:	str	r4, [sp, #-8]!
   16338:	mov	r4, r2
   1633c:	str	lr, [sp, #4]
   16340:	bl	13f80 <table_get_row_ptr@@Base>
   16344:	ldr	r0, [r0]
   16348:	add	r0, r0, r4, lsl #2
   1634c:	ldr	r4, [sp]
   16350:	add	sp, sp, #4
   16354:	pop	{pc}		; (ldr pc, [sp], #4)

00016358 <__libc_csu_init@@Base>:
   16358:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1635c:	mov	r7, r0
   16360:	ldr	r6, [pc, #72]	; 163b0 <__libc_csu_init@@Base+0x58>
   16364:	ldr	r5, [pc, #72]	; 163b4 <__libc_csu_init@@Base+0x5c>
   16368:	add	r6, pc, r6
   1636c:	add	r5, pc, r5
   16370:	sub	r6, r6, r5
   16374:	mov	r8, r1
   16378:	mov	r9, r2
   1637c:	bl	11b00 <strcmp@plt-0x20>
   16380:	asrs	r6, r6, #2
   16384:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16388:	mov	r4, #0
   1638c:	add	r4, r4, #1
   16390:	ldr	r3, [r5], #4
   16394:	mov	r2, r9
   16398:	mov	r1, r8
   1639c:	mov	r0, r7
   163a0:	blx	r3
   163a4:	cmp	r6, r4
   163a8:	bne	1638c <__libc_csu_init@@Base+0x34>
   163ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   163b0:	andeq	r0, r1, r4, lsr #23
   163b4:	muleq	r1, ip, fp

000163b8 <__libc_csu_fini@@Base>:
   163b8:	bx	lr

Disassembly of section .fini:

000163bc <.fini>:
   163bc:	push	{r3, lr}
   163c0:	pop	{r3, pc}
