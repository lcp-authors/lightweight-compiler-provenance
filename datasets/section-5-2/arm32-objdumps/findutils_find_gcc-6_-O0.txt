
../repos/findutils/find/find:     file format elf32-littlearm


Disassembly of section .init:

00011f40 <.init>:
   11f40:	push	{r3, lr}
   11f44:	bl	12734 <__assert_fail@plt+0x48>
   11f48:	pop	{r3, pc}

Disassembly of section .plt:

00011f4c <pthread_mutex_unlock@plt-0x14>:
   11f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f50:	ldr	lr, [pc, #4]	; 11f5c <pthread_mutex_unlock@plt-0x4>
   11f54:	add	lr, pc, lr
   11f58:	ldr	pc, [lr, #8]!
   11f5c:	andeq	sl, r6, r4, lsr #1

00011f60 <pthread_mutex_unlock@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #434176	; 0x6a000
   11f68:	ldr	pc, [ip, #164]!	; 0xa4

00011f6c <fdopen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #434176	; 0x6a000
   11f74:	ldr	pc, [ip, #156]!	; 0x9c

00011f78 <fstatfs64@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #434176	; 0x6a000
   11f80:	ldr	pc, [ip, #148]!	; 0x94

00011f84 <calloc@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #434176	; 0x6a000
   11f8c:	ldr	pc, [ip, #140]!	; 0x8c

00011f90 <endgrent@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #434176	; 0x6a000
   11f98:	ldr	pc, [ip, #132]!	; 0x84

00011f9c <wctype@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #434176	; 0x6a000
   11fa4:	ldr	pc, [ip, #124]!	; 0x7c

00011fa8 <gnu_dev_major@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #434176	; 0x6a000
   11fb0:	ldr	pc, [ip, #116]!	; 0x74

00011fb4 <raise@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #434176	; 0x6a000
   11fbc:	ldr	pc, [ip, #108]!	; 0x6c

00011fc0 <wcrtomb@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #434176	; 0x6a000
   11fc8:	ldr	pc, [ip, #100]!	; 0x64

00011fcc <gmtime_r@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #434176	; 0x6a000
   11fd4:	ldr	pc, [ip, #92]!	; 0x5c

00011fd8 <getpwnam@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #434176	; 0x6a000
   11fe0:	ldr	pc, [ip, #84]!	; 0x54

00011fe4 <is_selinux_enabled@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #434176	; 0x6a000
   11fec:	ldr	pc, [ip, #76]!	; 0x4c

00011ff0 <iswctype@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #434176	; 0x6a000
   11ff8:	ldr	pc, [ip, #68]!	; 0x44

00011ffc <strcmp@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #434176	; 0x6a000
   12004:	ldr	pc, [ip, #60]!	; 0x3c

00012008 <strtol@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #434176	; 0x6a000
   12010:	ldr	pc, [ip, #52]!	; 0x34

00012014 <getpwuid@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #434176	; 0x6a000
   1201c:	ldr	pc, [ip, #44]!	; 0x2c

00012020 <gnu_dev_makedev@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #434176	; 0x6a000
   12028:	ldr	pc, [ip, #36]!	; 0x24

0001202c <printf@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #434176	; 0x6a000
   12034:	ldr	pc, [ip, #28]!

00012038 <gnu_dev_minor@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #434176	; 0x6a000
   12040:	ldr	pc, [ip, #20]!

00012044 <pthread_mutex_destroy@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #434176	; 0x6a000
   1204c:	ldr	pc, [ip, #12]!

00012050 <mktime@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #434176	; 0x6a000
   12058:	ldr	pc, [ip, #4]!

0001205c <fflush@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #430080	; 0x69000
   12064:	ldr	pc, [ip, #4092]!	; 0xffc

00012068 <unlinkat@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #430080	; 0x69000
   12070:	ldr	pc, [ip, #4084]!	; 0xff4

00012074 <wcwidth@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #430080	; 0x69000
   1207c:	ldr	pc, [ip, #4076]!	; 0xfec

00012080 <lsetfilecon@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #430080	; 0x69000
   12088:	ldr	pc, [ip, #4068]!	; 0xfe4

0001208c <memmove@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #430080	; 0x69000
   12094:	ldr	pc, [ip, #4060]!	; 0xfdc

00012098 <free@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #430080	; 0x69000
   120a0:	ldr	pc, [ip, #4052]!	; 0xfd4

000120a4 <pthread_mutex_lock@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #430080	; 0x69000
   120ac:	ldr	pc, [ip, #4044]!	; 0xfcc

000120b0 <faccessat@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #430080	; 0x69000
   120b8:	ldr	pc, [ip, #4036]!	; 0xfc4

000120bc <ferror@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #430080	; 0x69000
   120c4:	ldr	pc, [ip, #4028]!	; 0xfbc

000120c8 <thrd_exit@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #430080	; 0x69000
   120d0:	ldr	pc, [ip, #4020]!	; 0xfb4

000120d4 <strndup@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #430080	; 0x69000
   120dc:	ldr	pc, [ip, #4012]!	; 0xfac

000120e0 <clock_gettime@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #430080	; 0x69000
   120e8:	ldr	pc, [ip, #4004]!	; 0xfa4

000120ec <_exit@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #430080	; 0x69000
   120f4:	ldr	pc, [ip, #3996]!	; 0xf9c

000120f8 <memcpy@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #430080	; 0x69000
   12100:	ldr	pc, [ip, #3988]!	; 0xf94

00012104 <execvp@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #430080	; 0x69000
   1210c:	ldr	pc, [ip, #3980]!	; 0xf8c

00012110 <tolower@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #430080	; 0x69000
   12118:	ldr	pc, [ip, #3972]!	; 0xf84

0001211c <pthread_mutex_init@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #430080	; 0x69000
   12124:	ldr	pc, [ip, #3964]!	; 0xf7c

00012128 <towlower@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #430080	; 0x69000
   12130:	ldr	pc, [ip, #3956]!	; 0xf74

00012134 <mbsinit@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #430080	; 0x69000
   1213c:	ldr	pc, [ip, #3948]!	; 0xf6c

00012140 <signal@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #430080	; 0x69000
   12148:	ldr	pc, [ip, #3940]!	; 0xf64

0001214c <time@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #430080	; 0x69000
   12154:	ldr	pc, [ip, #3932]!	; 0xf5c

00012158 <memcmp@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #430080	; 0x69000
   12160:	ldr	pc, [ip, #3924]!	; 0xf54

00012164 <uname@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #430080	; 0x69000
   1216c:	ldr	pc, [ip, #3916]!	; 0xf4c

00012170 <ctime@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #430080	; 0x69000
   12178:	ldr	pc, [ip, #3908]!	; 0xf44

0001217c <strdup@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #430080	; 0x69000
   12184:	ldr	pc, [ip, #3900]!	; 0xf3c

00012188 <sysconf@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #430080	; 0x69000
   12190:	ldr	pc, [ip, #3892]!	; 0xf34

00012194 <getrlimit64@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #430080	; 0x69000
   1219c:	ldr	pc, [ip, #3884]!	; 0xf2c

000121a0 <realloc@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #430080	; 0x69000
   121a8:	ldr	pc, [ip, #3876]!	; 0xf24

000121ac <fgetfilecon@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #430080	; 0x69000
   121b4:	ldr	pc, [ip, #3868]!	; 0xf1c

000121b8 <localtime_r@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #430080	; 0x69000
   121c0:	ldr	pc, [ip, #3860]!	; 0xf14

000121c4 <textdomain@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #430080	; 0x69000
   121cc:	ldr	pc, [ip, #3852]!	; 0xf0c

000121d0 <iswcntrl@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #430080	; 0x69000
   121d8:	ldr	pc, [ip, #3844]!	; 0xf04

000121dc <chdir@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #430080	; 0x69000
   121e4:	ldr	pc, [ip, #3836]!	; 0xefc

000121e8 <__fxstatat64@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #430080	; 0x69000
   121f0:	ldr	pc, [ip, #3828]!	; 0xef4

000121f4 <iswprint@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #430080	; 0x69000
   121fc:	ldr	pc, [ip, #3820]!	; 0xeec

00012200 <tzset@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #430080	; 0x69000
   12208:	ldr	pc, [ip, #3812]!	; 0xee4

0001220c <poll@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #430080	; 0x69000
   12214:	ldr	pc, [ip, #3804]!	; 0xedc

00012218 <__fxstat64@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #430080	; 0x69000
   12220:	ldr	pc, [ip, #3796]!	; 0xed4

00012224 <fwrite@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #430080	; 0x69000
   1222c:	ldr	pc, [ip, #3788]!	; 0xecc

00012230 <strcat@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #430080	; 0x69000
   12238:	ldr	pc, [ip, #3780]!	; 0xec4

0001223c <lseek64@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #430080	; 0x69000
   12244:	ldr	pc, [ip, #3772]!	; 0xebc

00012248 <waitpid@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #430080	; 0x69000
   12250:	ldr	pc, [ip, #3764]!	; 0xeb4

00012254 <__ctype_get_mb_cur_max@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #430080	; 0x69000
   1225c:	ldr	pc, [ip, #3756]!	; 0xeac

00012260 <hasmntopt@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #430080	; 0x69000
   12268:	ldr	pc, [ip, #3748]!	; 0xea4

0001226c <strcpy@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #430080	; 0x69000
   12274:	ldr	pc, [ip, #3740]!	; 0xe9c

00012278 <gettimeofday@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #430080	; 0x69000
   12280:	ldr	pc, [ip, #3732]!	; 0xe94

00012284 <__fpending@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #430080	; 0x69000
   1228c:	ldr	pc, [ip, #3724]!	; 0xe8c

00012290 <ferror_unlocked@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #430080	; 0x69000
   12298:	ldr	pc, [ip, #3716]!	; 0xe84

0001229c <mbrtowc@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #430080	; 0x69000
   122a4:	ldr	pc, [ip, #3708]!	; 0xe7c

000122a8 <strtok_r@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #430080	; 0x69000
   122b0:	ldr	pc, [ip, #3700]!	; 0xe74

000122b4 <error@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #430080	; 0x69000
   122bc:	ldr	pc, [ip, #3692]!	; 0xe6c

000122c0 <getmntent@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #430080	; 0x69000
   122c8:	ldr	pc, [ip, #3684]!	; 0xe64

000122cc <opendir@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #430080	; 0x69000
   122d4:	ldr	pc, [ip, #3676]!	; 0xe5c

000122d8 <fnmatch@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #430080	; 0x69000
   122e0:	ldr	pc, [ip, #3668]!	; 0xe54

000122e4 <open64@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #430080	; 0x69000
   122ec:	ldr	pc, [ip, #3660]!	; 0xe4c

000122f0 <getenv@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #430080	; 0x69000
   122f8:	ldr	pc, [ip, #3652]!	; 0xe44

000122fc <lgetfilecon@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #430080	; 0x69000
   12304:	ldr	pc, [ip, #3644]!	; 0xe3c

00012308 <malloc@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #430080	; 0x69000
   12310:	ldr	pc, [ip, #3636]!	; 0xe34

00012314 <__libc_start_main@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #430080	; 0x69000
   1231c:	ldr	pc, [ip, #3628]!	; 0xe2c

00012320 <readlinkat@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #430080	; 0x69000
   12328:	ldr	pc, [ip, #3620]!	; 0xe24

0001232c <strftime@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #430080	; 0x69000
   12334:	ldr	pc, [ip, #3612]!	; 0xe1c

00012338 <__freading@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #430080	; 0x69000
   12340:	ldr	pc, [ip, #3604]!	; 0xe14

00012344 <localtime@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #430080	; 0x69000
   1234c:	ldr	pc, [ip, #3596]!	; 0xe0c

00012350 <modf@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #430080	; 0x69000
   12358:	ldr	pc, [ip, #3588]!	; 0xe04

0001235c <__gmon_start__@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #430080	; 0x69000
   12364:	ldr	pc, [ip, #3580]!	; 0xdfc

00012368 <__ctype_b_loc@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #430080	; 0x69000
   12370:	ldr	pc, [ip, #3572]!	; 0xdf4

00012374 <getcwd@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #430080	; 0x69000
   1237c:	ldr	pc, [ip, #3564]!	; 0xdec

00012380 <exit@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #430080	; 0x69000
   12388:	ldr	pc, [ip, #3556]!	; 0xde4

0001238c <feof@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #430080	; 0x69000
   12394:	ldr	pc, [ip, #3548]!	; 0xddc

00012398 <gettext@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #430080	; 0x69000
   123a0:	ldr	pc, [ip, #3540]!	; 0xdd4

000123a4 <getfilecon@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #430080	; 0x69000
   123ac:	ldr	pc, [ip, #3532]!	; 0xdcc

000123b0 <strtoul@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #430080	; 0x69000
   123b8:	ldr	pc, [ip, #3524]!	; 0xdc4

000123bc <strlen@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #430080	; 0x69000
   123c4:	ldr	pc, [ip, #3516]!	; 0xdbc

000123c8 <strchr@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #430080	; 0x69000
   123d0:	ldr	pc, [ip, #3508]!	; 0xdb4

000123d4 <setenv@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #430080	; 0x69000
   123dc:	ldr	pc, [ip, #3500]!	; 0xdac

000123e0 <openat64@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #430080	; 0x69000
   123e8:	ldr	pc, [ip, #3492]!	; 0xda4

000123ec <memrchr@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #430080	; 0x69000
   123f4:	ldr	pc, [ip, #3484]!	; 0xd9c

000123f8 <fprintf@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #430080	; 0x69000
   12400:	ldr	pc, [ip, #3476]!	; 0xd94

00012404 <__errno_location@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #430080	; 0x69000
   1240c:	ldr	pc, [ip, #3468]!	; 0xd8c

00012410 <iswalnum@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #430080	; 0x69000
   12418:	ldr	pc, [ip, #3460]!	; 0xd84

0001241c <snprintf@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #430080	; 0x69000
   12424:	ldr	pc, [ip, #3452]!	; 0xd7c

00012428 <__cxa_atexit@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #430080	; 0x69000
   12430:	ldr	pc, [ip, #3444]!	; 0xd74

00012434 <memset@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #430080	; 0x69000
   1243c:	ldr	pc, [ip, #3436]!	; 0xd6c

00012440 <bsearch@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #430080	; 0x69000
   12448:	ldr	pc, [ip, #3428]!	; 0xd64

0001244c <putchar@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #430080	; 0x69000
   12454:	ldr	pc, [ip, #3420]!	; 0xd5c

00012458 <strncpy@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #430080	; 0x69000
   12460:	ldr	pc, [ip, #3412]!	; 0xd54

00012464 <pthread_mutexattr_gettype@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #430080	; 0x69000
   1246c:	ldr	pc, [ip, #3404]!	; 0xd4c

00012470 <btowc@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #430080	; 0x69000
   12478:	ldr	pc, [ip, #3396]!	; 0xd44

0001247c <strtod@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #430080	; 0x69000
   12484:	ldr	pc, [ip, #3388]!	; 0xd3c

00012488 <fileno@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #430080	; 0x69000
   12490:	ldr	pc, [ip, #3380]!	; 0xd34

00012494 <difftime@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #430080	; 0x69000
   1249c:	ldr	pc, [ip, #3372]!	; 0xd2c

000124a0 <strtoumax@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #430080	; 0x69000
   124a8:	ldr	pc, [ip, #3364]!	; 0xd24

000124ac <memchr@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #430080	; 0x69000
   124b4:	ldr	pc, [ip, #3356]!	; 0xd1c

000124b8 <setfilecon@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #430080	; 0x69000
   124c0:	ldr	pc, [ip, #3348]!	; 0xd14

000124c4 <access@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #430080	; 0x69000
   124cc:	ldr	pc, [ip, #3340]!	; 0xd0c

000124d0 <fclose@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #430080	; 0x69000
   124d8:	ldr	pc, [ip, #3332]!	; 0xd04

000124dc <strnlen@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #430080	; 0x69000
   124e4:	ldr	pc, [ip, #3324]!	; 0xcfc

000124e8 <fseeko64@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #430080	; 0x69000
   124f0:	ldr	pc, [ip, #3316]!	; 0xcf4

000124f4 <endmntent@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #430080	; 0x69000
   124fc:	ldr	pc, [ip, #3308]!	; 0xcec

00012500 <fcntl64@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #430080	; 0x69000
   12508:	ldr	pc, [ip, #3300]!	; 0xce4

0001250c <rpmatch@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #430080	; 0x69000
   12514:	ldr	pc, [ip, #3292]!	; 0xcdc

00012518 <setlocale@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #430080	; 0x69000
   12520:	ldr	pc, [ip, #3284]!	; 0xcd4

00012524 <fork@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #430080	; 0x69000
   1252c:	ldr	pc, [ip, #3276]!	; 0xccc

00012530 <endpwent@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #430080	; 0x69000
   12538:	ldr	pc, [ip, #3268]!	; 0xcc4

0001253c <toupper@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #430080	; 0x69000
   12544:	ldr	pc, [ip, #3260]!	; 0xcbc

00012548 <strrchr@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #430080	; 0x69000
   12550:	ldr	pc, [ip, #3252]!	; 0xcb4

00012554 <vfprintf@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #430080	; 0x69000
   1255c:	ldr	pc, [ip, #3244]!	; 0xcac

00012560 <nl_langinfo@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #430080	; 0x69000
   12568:	ldr	pc, [ip, #3236]!	; 0xca4

0001256c <fputc@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #430080	; 0x69000
   12574:	ldr	pc, [ip, #3228]!	; 0xc9c

00012578 <sscanf@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #430080	; 0x69000
   12580:	ldr	pc, [ip, #3220]!	; 0xc94

00012584 <localeconv@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #430080	; 0x69000
   1258c:	ldr	pc, [ip, #3212]!	; 0xc8c

00012590 <sprintf@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #430080	; 0x69000
   12598:	ldr	pc, [ip, #3204]!	; 0xc84

0001259c <readdir64@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #430080	; 0x69000
   125a4:	ldr	pc, [ip, #3196]!	; 0xc7c

000125a8 <fdopendir@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #430080	; 0x69000
   125b0:	ldr	pc, [ip, #3188]!	; 0xc74

000125b4 <timegm@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #430080	; 0x69000
   125bc:	ldr	pc, [ip, #3180]!	; 0xc6c

000125c0 <putc@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #430080	; 0x69000
   125c8:	ldr	pc, [ip, #3172]!	; 0xc64

000125cc <dirfd@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #430080	; 0x69000
   125d4:	ldr	pc, [ip, #3164]!	; 0xc5c

000125d8 <fchdir@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #430080	; 0x69000
   125e0:	ldr	pc, [ip, #3156]!	; 0xc54

000125e4 <fopen64@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #430080	; 0x69000
   125ec:	ldr	pc, [ip, #3148]!	; 0xc4c

000125f0 <qsort@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #430080	; 0x69000
   125f8:	ldr	pc, [ip, #3140]!	; 0xc44

000125fc <freecon@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #430080	; 0x69000
   12604:	ldr	pc, [ip, #3132]!	; 0xc3c

00012608 <strpbrk@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #430080	; 0x69000
   12610:	ldr	pc, [ip, #3124]!	; 0xc34

00012614 <setmntent@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #430080	; 0x69000
   1261c:	ldr	pc, [ip, #3116]!	; 0xc2c

00012620 <bindtextdomain@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #430080	; 0x69000
   12628:	ldr	pc, [ip, #3108]!	; 0xc24

0001262c <atof@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #430080	; 0x69000
   12634:	ldr	pc, [ip, #3100]!	; 0xc1c

00012638 <getline@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #430080	; 0x69000
   12640:	ldr	pc, [ip, #3092]!	; 0xc14

00012644 <getdelim@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #430080	; 0x69000
   1264c:	ldr	pc, [ip, #3084]!	; 0xc0c

00012650 <__xstat64@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #430080	; 0x69000
   12658:	ldr	pc, [ip, #3076]!	; 0xc04

0001265c <isatty@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #430080	; 0x69000
   12664:	ldr	pc, [ip, #3068]!	; 0xbfc

00012668 <unsetenv@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #430080	; 0x69000
   12670:	ldr	pc, [ip, #3060]!	; 0xbf4

00012674 <towupper@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #430080	; 0x69000
   1267c:	ldr	pc, [ip, #3052]!	; 0xbec

00012680 <fputs@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #430080	; 0x69000
   12688:	ldr	pc, [ip, #3044]!	; 0xbe4

0001268c <strncmp@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #430080	; 0x69000
   12694:	ldr	pc, [ip, #3036]!	; 0xbdc

00012698 <abort@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #430080	; 0x69000
   126a0:	ldr	pc, [ip, #3028]!	; 0xbd4

000126a4 <close@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #430080	; 0x69000
   126ac:	ldr	pc, [ip, #3020]!	; 0xbcc

000126b0 <__lxstat64@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #430080	; 0x69000
   126b8:	ldr	pc, [ip, #3012]!	; 0xbc4

000126bc <closedir@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #430080	; 0x69000
   126c4:	ldr	pc, [ip, #3004]!	; 0xbbc

000126c8 <getgrgid@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #430080	; 0x69000
   126d0:	ldr	pc, [ip, #2996]!	; 0xbb4

000126d4 <getgrnam@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #430080	; 0x69000
   126dc:	ldr	pc, [ip, #2988]!	; 0xbac

000126e0 <strspn@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #430080	; 0x69000
   126e8:	ldr	pc, [ip, #2980]!	; 0xba4

000126ec <__assert_fail@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #430080	; 0x69000
   126f4:	ldr	pc, [ip, #2972]!	; 0xb9c

Disassembly of section .text:

000126f8 <.text>:
   126f8:	mov	fp, #0
   126fc:	mov	lr, #0
   12700:	pop	{r1}		; (ldr r1, [sp], #4)
   12704:	mov	r2, sp
   12708:	push	{r2}		; (str r2, [sp, #-4]!)
   1270c:	push	{r0}		; (str r0, [sp, #-4]!)
   12710:	ldr	ip, [pc, #16]	; 12728 <__assert_fail@plt+0x3c>
   12714:	push	{ip}		; (str ip, [sp, #-4]!)
   12718:	ldr	r0, [pc, #12]	; 1272c <__assert_fail@plt+0x40>
   1271c:	ldr	r3, [pc, #12]	; 12730 <__assert_fail@plt+0x44>
   12720:	bl	12314 <__libc_start_main@plt>
   12724:	bl	12698 <abort@plt>
   12728:	andeq	r4, r6, r8, rrx
   1272c:	andeq	r3, r1, r8, asr #24
   12730:	andeq	r4, r6, r8
   12734:	ldr	r3, [pc, #20]	; 12750 <__assert_fail@plt+0x64>
   12738:	ldr	r2, [pc, #20]	; 12754 <__assert_fail@plt+0x68>
   1273c:	add	r3, pc, r3
   12740:	ldr	r2, [r3, r2]
   12744:	cmp	r2, #0
   12748:	bxeq	lr
   1274c:	b	1235c <__gmon_start__@plt>
   12750:			; <UNDEFINED> instruction: 0x000698bc
   12754:	muleq	r0, r4, r2
   12758:	ldr	r3, [pc, #28]	; 1277c <__assert_fail@plt+0x90>
   1275c:	ldr	r0, [pc, #28]	; 12780 <__assert_fail@plt+0x94>
   12760:	sub	r3, r3, r0
   12764:	cmp	r3, #6
   12768:	bxls	lr
   1276c:	ldr	r3, [pc, #16]	; 12784 <__assert_fail@plt+0x98>
   12770:	cmp	r3, #0
   12774:	bxeq	lr
   12778:	bx	r3
   1277c:	andeq	ip, r7, r7, lsl r7
   12780:	andeq	ip, r7, r4, lsl r7
   12784:	andeq	r0, r0, r0
   12788:	ldr	r1, [pc, #36]	; 127b4 <__assert_fail@plt+0xc8>
   1278c:	ldr	r0, [pc, #36]	; 127b8 <__assert_fail@plt+0xcc>
   12790:	sub	r1, r1, r0
   12794:	asr	r1, r1, #2
   12798:	add	r1, r1, r1, lsr #31
   1279c:	asrs	r1, r1, #1
   127a0:	bxeq	lr
   127a4:	ldr	r3, [pc, #16]	; 127bc <__assert_fail@plt+0xd0>
   127a8:	cmp	r3, #0
   127ac:	bxeq	lr
   127b0:	bx	r3
   127b4:	andeq	ip, r7, r4, lsl r7
   127b8:	andeq	ip, r7, r4, lsl r7
   127bc:	andeq	r0, r0, r0
   127c0:	push	{r4, lr}
   127c4:	ldr	r4, [pc, #24]	; 127e4 <__assert_fail@plt+0xf8>
   127c8:	ldrb	r3, [r4]
   127cc:	cmp	r3, #0
   127d0:	popne	{r4, pc}
   127d4:	bl	12758 <__assert_fail@plt+0x6c>
   127d8:	mov	r3, #1
   127dc:	strb	r3, [r4]
   127e0:	pop	{r4, pc}
   127e4:	andeq	ip, r7, r8, lsr r7
   127e8:	ldr	r0, [pc, #40]	; 12818 <__assert_fail@plt+0x12c>
   127ec:	ldr	r3, [r0]
   127f0:	cmp	r3, #0
   127f4:	bne	127fc <__assert_fail@plt+0x110>
   127f8:	b	12788 <__assert_fail@plt+0x9c>
   127fc:	ldr	r3, [pc, #24]	; 1281c <__assert_fail@plt+0x130>
   12800:	cmp	r3, #0
   12804:	beq	127f8 <__assert_fail@plt+0x10c>
   12808:	push	{r4, lr}
   1280c:	blx	r3
   12810:	pop	{r4, lr}
   12814:	b	12788 <__assert_fail@plt+0x9c>
   12818:	andeq	fp, r7, r4, lsl #30
   1281c:	andeq	r0, r0, r0
   12820:	push	{fp, lr}
   12824:	add	fp, sp, #4
   12828:	ldr	r3, [pc, #64]	; 12870 <__assert_fail@plt+0x184>
   1282c:	ldr	r3, [r3]
   12830:	and	r3, r3, #512	; 0x200
   12834:	cmp	r3, #0
   12838:	beq	12868 <__assert_fail@plt+0x17c>
   1283c:	ldr	r3, [pc, #48]	; 12874 <__assert_fail@plt+0x188>
   12840:	ldr	r3, [r3]
   12844:	cmp	r3, #0
   12848:	blt	12868 <__assert_fail@plt+0x17c>
   1284c:	ldr	r3, [pc, #32]	; 12874 <__assert_fail@plt+0x188>
   12850:	ldr	r3, [r3]
   12854:	mov	r0, r3
   12858:	bl	126a4 <close@plt>
   1285c:	ldr	r3, [pc, #16]	; 12874 <__assert_fail@plt+0x188>
   12860:	mvn	r2, #0
   12864:	str	r2, [r3]
   12868:	nop			; (mov r0, r0)
   1286c:	pop	{fp, pc}
   12870:	andeq	ip, r7, r0, lsr #5
   12874:	andeq	ip, r7, r8, lsr #5
   12878:	push	{fp, lr}
   1287c:	add	fp, sp, #4
   12880:	sub	sp, sp, #8
   12884:	str	r0, [fp, #-8]
   12888:	ldr	r3, [pc, #208]	; 12960 <__assert_fail@plt+0x274>
   1288c:	ldr	r3, [r3]
   12890:	and	r3, r3, #512	; 0x200
   12894:	cmp	r3, #0
   12898:	beq	12954 <__assert_fail@plt+0x268>
   1289c:	ldr	r3, [fp, #-8]
   128a0:	cmn	r3, #100	; 0x64
   128a4:	beq	128c8 <__assert_fail@plt+0x1dc>
   128a8:	ldr	r3, [fp, #-8]
   128ac:	cmp	r3, #0
   128b0:	bge	128c8 <__assert_fail@plt+0x1dc>
   128b4:	ldr	r3, [pc, #168]	; 12964 <__assert_fail@plt+0x278>
   128b8:	mov	r2, #107	; 0x6b
   128bc:	ldr	r1, [pc, #164]	; 12968 <__assert_fail@plt+0x27c>
   128c0:	ldr	r0, [pc, #164]	; 1296c <__assert_fail@plt+0x280>
   128c4:	bl	126ec <__assert_fail@plt>
   128c8:	ldr	r2, [pc, #160]	; 12970 <__assert_fail@plt+0x284>
   128cc:	ldr	r3, [fp, #-8]
   128d0:	str	r3, [r2, #16]
   128d4:	ldr	r3, [pc, #152]	; 12974 <__assert_fail@plt+0x288>
   128d8:	ldr	r3, [r3]
   128dc:	cmp	r3, #0
   128e0:	bge	12954 <__assert_fail@plt+0x268>
   128e4:	ldr	r3, [fp, #-8]
   128e8:	cmn	r3, #100	; 0x64
   128ec:	bne	12900 <__assert_fail@plt+0x214>
   128f0:	ldr	r3, [pc, #124]	; 12974 <__assert_fail@plt+0x288>
   128f4:	mvn	r2, #99	; 0x63
   128f8:	str	r2, [r3]
   128fc:	b	12954 <__assert_fail@plt+0x268>
   12900:	ldr	r3, [fp, #-8]
   12904:	cmp	r3, #0
   12908:	blt	12924 <__assert_fail@plt+0x238>
   1290c:	ldr	r0, [fp, #-8]
   12910:	bl	2a0b0 <__assert_fail@plt+0x179c4>
   12914:	mov	r2, r0
   12918:	ldr	r3, [pc, #84]	; 12974 <__assert_fail@plt+0x288>
   1291c:	str	r2, [r3]
   12920:	b	12954 <__assert_fail@plt+0x268>
   12924:	ldr	r3, [pc, #72]	; 12974 <__assert_fail@plt+0x288>
   12928:	ldr	r3, [r3]
   1292c:	cmp	r3, #0
   12930:	bge	12954 <__assert_fail@plt+0x268>
   12934:	ldr	r3, [fp, #-8]
   12938:	cmp	r3, #0
   1293c:	bge	12954 <__assert_fail@plt+0x268>
   12940:	ldr	r3, [pc, #28]	; 12964 <__assert_fail@plt+0x278>
   12944:	mov	r2, #125	; 0x7d
   12948:	ldr	r1, [pc, #24]	; 12968 <__assert_fail@plt+0x27c>
   1294c:	ldr	r0, [pc, #36]	; 12978 <__assert_fail@plt+0x28c>
   12950:	bl	126ec <__assert_fail@plt>
   12954:	nop			; (mov r0, r0)
   12958:	sub	sp, fp, #4
   1295c:	pop	{fp, pc}
   12960:	andeq	ip, r7, r0, lsr #5
   12964:	andeq	r4, r6, r0, lsr #13
   12968:	andeq	r4, r6, r8, ror #1
   1296c:	strdeq	r4, [r6], -r4	; <UNPREDICTABLE>
   12970:	andeq	sp, r7, r0, lsr #32
   12974:	andeq	ip, r7, r8, lsr #5
   12978:	andeq	r4, r6, r8, lsl r1
   1297c:	push	{fp, lr}
   12980:	add	fp, sp, #4
   12984:	sub	sp, sp, #8
   12988:	str	r0, [fp, #-8]
   1298c:	ldr	r3, [fp, #-8]
   12990:	sub	r3, r3, #1
   12994:	cmp	r3, #13
   12998:	ldrls	pc, [pc, r3, lsl #2]
   1299c:	b	12a48 <__assert_fail@plt+0x35c>
   129a0:	ldrdeq	r2, [r1], -r8
   129a4:	andeq	r2, r1, r0, ror #19
   129a8:	andeq	r2, r1, r8, ror #19
   129ac:	strdeq	r2, [r1], -r0
   129b0:	strdeq	r2, [r1], -r8
   129b4:	andeq	r2, r1, r0, lsl #20
   129b8:	andeq	r2, r1, r8, lsl #20
   129bc:	andeq	r2, r1, r0, lsl sl
   129c0:	andeq	r2, r1, r8, lsl sl
   129c4:	andeq	r2, r1, r0, lsr #20
   129c8:	andeq	r2, r1, r8, lsr #20
   129cc:	andeq	r2, r1, r0, lsr sl
   129d0:	andeq	r2, r1, r8, lsr sl
   129d4:	andeq	r2, r1, r0, asr #20
   129d8:	ldr	r3, [pc, #136]	; 12a68 <__assert_fail@plt+0x37c>
   129dc:	b	12a5c <__assert_fail@plt+0x370>
   129e0:	ldr	r3, [pc, #132]	; 12a6c <__assert_fail@plt+0x380>
   129e4:	b	12a5c <__assert_fail@plt+0x370>
   129e8:	ldr	r3, [pc, #128]	; 12a70 <__assert_fail@plt+0x384>
   129ec:	b	12a5c <__assert_fail@plt+0x370>
   129f0:	ldr	r3, [pc, #124]	; 12a74 <__assert_fail@plt+0x388>
   129f4:	b	12a5c <__assert_fail@plt+0x370>
   129f8:	ldr	r3, [pc, #120]	; 12a78 <__assert_fail@plt+0x38c>
   129fc:	b	12a5c <__assert_fail@plt+0x370>
   12a00:	ldr	r3, [pc, #116]	; 12a7c <__assert_fail@plt+0x390>
   12a04:	b	12a5c <__assert_fail@plt+0x370>
   12a08:	ldr	r3, [pc, #112]	; 12a80 <__assert_fail@plt+0x394>
   12a0c:	b	12a5c <__assert_fail@plt+0x370>
   12a10:	ldr	r3, [pc, #108]	; 12a84 <__assert_fail@plt+0x398>
   12a14:	b	12a5c <__assert_fail@plt+0x370>
   12a18:	ldr	r3, [pc, #104]	; 12a88 <__assert_fail@plt+0x39c>
   12a1c:	b	12a5c <__assert_fail@plt+0x370>
   12a20:	ldr	r3, [pc, #100]	; 12a8c <__assert_fail@plt+0x3a0>
   12a24:	b	12a5c <__assert_fail@plt+0x370>
   12a28:	ldr	r3, [pc, #96]	; 12a90 <__assert_fail@plt+0x3a4>
   12a2c:	b	12a5c <__assert_fail@plt+0x370>
   12a30:	ldr	r3, [pc, #92]	; 12a94 <__assert_fail@plt+0x3a8>
   12a34:	b	12a5c <__assert_fail@plt+0x370>
   12a38:	ldr	r3, [pc, #88]	; 12a98 <__assert_fail@plt+0x3ac>
   12a3c:	b	12a5c <__assert_fail@plt+0x370>
   12a40:	ldr	r3, [pc, #84]	; 12a9c <__assert_fail@plt+0x3b0>
   12a44:	b	12a5c <__assert_fail@plt+0x370>
   12a48:	ldr	r2, [fp, #-8]
   12a4c:	ldr	r1, [pc, #76]	; 12aa0 <__assert_fail@plt+0x3b4>
   12a50:	ldr	r0, [pc, #76]	; 12aa4 <__assert_fail@plt+0x3b8>
   12a54:	bl	12590 <sprintf@plt>
   12a58:	ldr	r3, [pc, #68]	; 12aa4 <__assert_fail@plt+0x3b8>
   12a5c:	mov	r0, r3
   12a60:	sub	sp, fp, #4
   12a64:	pop	{fp, pc}
   12a68:	andeq	r4, r6, r4, lsr r1
   12a6c:	andeq	r4, r6, ip, lsr r1
   12a70:	andeq	r4, r6, r4, asr #2
   12a74:	andeq	r4, r6, r0, asr r1
   12a78:	andeq	r4, r6, r8, asr r1
   12a7c:	andeq	r4, r6, r0, ror #2
   12a80:	andeq	r4, r6, r8, ror #2
   12a84:	andeq	r4, r6, r0, ror r1
   12a88:	andeq	r4, r6, r8, ror r1
   12a8c:	andeq	r4, r6, r4, lsl #3
   12a90:	andeq	r4, r6, ip, lsl #3
   12a94:	muleq	r6, r8, r1
   12a98:	andeq	r4, r6, r0, lsr #3
   12a9c:	andeq	r4, r6, ip, lsr #3
   12aa0:			; <UNDEFINED> instruction: 0x000641b4
   12aa4:	andeq	ip, r7, ip, lsr r7
   12aa8:	push	{fp, lr}
   12aac:	add	fp, sp, #4
   12ab0:	sub	sp, sp, #24
   12ab4:	str	r0, [fp, #-16]
   12ab8:	str	r1, [fp, #-20]	; 0xffffffec
   12abc:	str	r2, [fp, #-24]	; 0xffffffe8
   12ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ac4:	ldrh	r3, [r3, #56]	; 0x38
   12ac8:	cmp	r3, #10
   12acc:	beq	12ae8 <__assert_fail@plt+0x3fc>
   12ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ad4:	ldrh	r3, [r3, #56]	; 0x38
   12ad8:	cmp	r3, #11
   12adc:	beq	12ae8 <__assert_fail@plt+0x3fc>
   12ae0:	mov	r3, #1
   12ae4:	b	12aec <__assert_fail@plt+0x400>
   12ae8:	mov	r3, #0
   12aec:	and	r3, r3, #1
   12af0:	uxtb	r2, r3
   12af4:	ldr	r3, [pc, #108]	; 12b68 <__assert_fail@plt+0x47c>
   12af8:	strb	r2, [r3, #4]
   12afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b00:	ldr	r3, [r3, #24]
   12b04:	ldr	r2, [pc, #92]	; 12b68 <__assert_fail@plt+0x47c>
   12b08:	str	r3, [r2, #12]
   12b0c:	ldr	r3, [fp, #-16]
   12b10:	ldr	r3, [r3, #32]
   12b14:	ldr	r2, [pc, #76]	; 12b68 <__assert_fail@plt+0x47c>
   12b18:	str	r3, [r2, #16]
   12b1c:	bl	19204 <__assert_fail@plt+0x6b18>
   12b20:	str	r0, [fp, #-8]
   12b24:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b28:	ldr	r3, [r3, #28]
   12b2c:	ldr	r2, [fp, #-8]
   12b30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12b34:	mov	r0, r3
   12b38:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   12b3c:	ldr	r3, [pc, #36]	; 12b68 <__assert_fail@plt+0x47c>
   12b40:	ldrb	r3, [r3, #24]
   12b44:	cmp	r3, #0
   12b48:	beq	12b5c <__assert_fail@plt+0x470>
   12b4c:	mov	r2, #4
   12b50:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b54:	ldr	r0, [fp, #-16]
   12b58:	bl	41174 <__assert_fail@plt+0x2ea88>
   12b5c:	nop			; (mov r0, r0)
   12b60:	sub	sp, fp, #4
   12b64:	pop	{fp, pc}
   12b68:	andeq	sp, r7, r0, lsr #32
   12b6c:	push	{fp, lr}
   12b70:	add	fp, sp, #4
   12b74:	sub	sp, sp, #24
   12b78:	str	r0, [fp, #-16]
   12b7c:	str	r1, [fp, #-20]	; 0xffffffec
   12b80:	str	r2, [fp, #-24]	; 0xffffffe8
   12b84:	str	r3, [fp, #-28]	; 0xffffffe4
   12b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b8c:	cmp	r3, #0
   12b90:	bne	12bac <__assert_fail@plt+0x4c0>
   12b94:	ldr	r2, [pc, #112]	; 12c0c <__assert_fail@plt+0x520>
   12b98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b9c:	ldr	r0, [fp, #-16]
   12ba0:	bl	3b718 <__assert_fail@plt+0x2902c>
   12ba4:	mov	r3, r0
   12ba8:	b	12c00 <__assert_fail@plt+0x514>
   12bac:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bb4:	add	r3, r2, r3
   12bb8:	ldrb	r3, [r3]
   12bbc:	strb	r3, [fp, #-5]
   12bc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bc8:	add	r3, r2, r3
   12bcc:	mov	r2, #0
   12bd0:	strb	r2, [r3]
   12bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bdc:	ldr	r0, [fp, #-16]
   12be0:	bl	3b718 <__assert_fail@plt+0x2902c>
   12be4:	str	r0, [fp, #-12]
   12be8:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bf0:	add	r3, r2, r3
   12bf4:	ldrb	r2, [fp, #-5]
   12bf8:	strb	r2, [r3]
   12bfc:	ldr	r3, [fp, #-12]
   12c00:	mov	r0, r3
   12c04:	sub	sp, fp, #4
   12c08:	pop	{fp, pc}
   12c0c:			; <UNDEFINED> instruction: 0x000641bc
   12c10:	push	{r4, r5, fp, lr}
   12c14:	add	fp, sp, #12
   12c18:	sub	sp, sp, #16
   12c1c:	str	r0, [fp, #-16]
   12c20:	ldr	r3, [fp, #-16]
   12c24:	ldr	r3, [r3, #80]	; 0x50
   12c28:	and	r3, r3, #61440	; 0xf000
   12c2c:	cmp	r3, #40960	; 0xa000
   12c30:	bne	12c6c <__assert_fail@plt+0x580>
   12c34:	ldr	r0, [pc, #164]	; 12ce0 <__assert_fail@plt+0x5f4>
   12c38:	bl	12398 <gettext@plt>
   12c3c:	mov	r4, r0
   12c40:	ldr	r3, [fp, #-16]
   12c44:	ldr	r3, [r3, #28]
   12c48:	mov	r1, r3
   12c4c:	mov	r0, #0
   12c50:	bl	1c7fc <__assert_fail@plt+0xa110>
   12c54:	mov	r3, r0
   12c58:	mov	r2, r4
   12c5c:	mov	r1, #0
   12c60:	mov	r0, #0
   12c64:	bl	122b4 <error@plt>
   12c68:	b	12cd4 <__assert_fail@plt+0x5e8>
   12c6c:	ldr	r0, [pc, #112]	; 12ce4 <__assert_fail@plt+0x5f8>
   12c70:	bl	12398 <gettext@plt>
   12c74:	mov	r4, r0
   12c78:	ldr	r3, [fp, #-16]
   12c7c:	ldr	r3, [r3, #28]
   12c80:	mov	r1, r3
   12c84:	mov	r0, #0
   12c88:	bl	1c7fc <__assert_fail@plt+0xa110>
   12c8c:	mov	r5, r0
   12c90:	ldr	r3, [fp, #-16]
   12c94:	ldr	r3, [r3]
   12c98:	ldr	r1, [r3, #28]
   12c9c:	ldr	r3, [fp, #-16]
   12ca0:	ldr	r3, [r3]
   12ca4:	ldr	r2, [r3, #40]	; 0x28
   12ca8:	ldr	r3, [pc, #56]	; 12ce8 <__assert_fail@plt+0x5fc>
   12cac:	ldr	r3, [r3, #72]	; 0x48
   12cb0:	mov	r0, #1
   12cb4:	bl	12b6c <__assert_fail@plt+0x480>
   12cb8:	mov	r3, r0
   12cbc:	str	r3, [sp]
   12cc0:	mov	r3, r5
   12cc4:	mov	r2, r4
   12cc8:	mov	r1, #0
   12ccc:	mov	r0, #0
   12cd0:	bl	122b4 <error@plt>
   12cd4:	nop			; (mov r0, r0)
   12cd8:	sub	sp, fp, #12
   12cdc:	pop	{r4, r5, fp, pc}
   12ce0:	andeq	r4, r6, r0, asr #3
   12ce4:	andeq	r4, r6, ip, lsr r2
   12ce8:	andeq	sp, r7, ip, asr #32
   12cec:	push	{fp, lr}
   12cf0:	add	fp, sp, #4
   12cf4:	sub	sp, sp, #120	; 0x78
   12cf8:	str	r0, [fp, #-120]	; 0xffffff88
   12cfc:	ldr	r3, [pc, #84]	; 12d58 <__assert_fail@plt+0x66c>
   12d00:	ldr	r3, [r3, #52]	; 0x34
   12d04:	sub	r2, fp, #116	; 0x74
   12d08:	mov	r1, r2
   12d0c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12d10:	blx	r3
   12d14:	str	r0, [fp, #-8]
   12d18:	ldr	r3, [fp, #-8]
   12d1c:	cmp	r3, #0
   12d20:	beq	12d40 <__assert_fail@plt+0x654>
   12d24:	bl	12404 <__errno_location@plt>
   12d28:	mov	r3, r0
   12d2c:	ldr	r3, [r3]
   12d30:	cmp	r3, #40	; 0x28
   12d34:	bne	12d40 <__assert_fail@plt+0x654>
   12d38:	mov	r3, #1
   12d3c:	b	12d44 <__assert_fail@plt+0x658>
   12d40:	mov	r3, #0
   12d44:	and	r3, r3, #1
   12d48:	uxtb	r3, r3
   12d4c:	mov	r0, r3
   12d50:	sub	sp, fp, #4
   12d54:	pop	{fp, pc}
   12d58:	andeq	sp, r7, ip, asr #32
   12d5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d60:	add	fp, sp, #28
   12d64:	sub	sp, sp, #144	; 0x90
   12d68:	str	r0, [fp, #-152]	; 0xffffff68
   12d6c:	str	r1, [fp, #-156]	; 0xffffff64
   12d70:	ldr	r3, [pc, #1608]	; 133c0 <__assert_fail@plt+0xcd4>
   12d74:	ldr	r3, [r3, #44]	; 0x2c
   12d78:	and	r3, r3, #4
   12d7c:	cmp	r3, #0
   12d80:	beq	12e34 <__assert_fail@plt+0x748>
   12d84:	ldr	r3, [pc, #1592]	; 133c4 <__assert_fail@plt+0xcd8>
   12d88:	ldr	r6, [r3]
   12d8c:	ldr	r3, [pc, #1580]	; 133c0 <__assert_fail@plt+0xcd4>
   12d90:	ldr	r1, [r3, #72]	; 0x48
   12d94:	ldr	r3, [fp, #-156]	; 0xffffff64
   12d98:	ldr	r3, [r3, #28]
   12d9c:	mov	r2, r3
   12da0:	mov	r0, #0
   12da4:	bl	3b718 <__assert_fail@plt+0x2902c>
   12da8:	mov	r8, r0
   12dac:	ldr	r3, [fp, #-156]	; 0xffffff64
   12db0:	ldrh	r3, [r3, #56]	; 0x38
   12db4:	mov	r0, r3
   12db8:	bl	1297c <__assert_fail@plt+0x290>
   12dbc:	mov	r9, r0
   12dc0:	ldr	r3, [fp, #-156]	; 0xffffff64
   12dc4:	ldr	r4, [r3, #48]	; 0x30
   12dc8:	ldr	r3, [pc, #1528]	; 133c8 <__assert_fail@plt+0xcdc>
   12dcc:	ldr	r5, [r3]
   12dd0:	ldr	r3, [pc, #1512]	; 133c0 <__assert_fail@plt+0xcd4>
   12dd4:	ldr	r1, [r3, #72]	; 0x48
   12dd8:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ddc:	ldr	r3, [r3, #28]
   12de0:	mov	r2, r3
   12de4:	mov	r0, #1
   12de8:	bl	3b718 <__assert_fail@plt+0x2902c>
   12dec:	mov	r7, r0
   12df0:	ldr	r3, [pc, #1480]	; 133c0 <__assert_fail@plt+0xcd4>
   12df4:	ldr	r1, [r3, #72]	; 0x48
   12df8:	ldr	r3, [fp, #-156]	; 0xffffff64
   12dfc:	ldr	r3, [r3, #24]
   12e00:	mov	r2, r3
   12e04:	mov	r0, #2
   12e08:	bl	3b718 <__assert_fail@plt+0x2902c>
   12e0c:	mov	r3, r0
   12e10:	str	r3, [sp, #12]
   12e14:	str	r7, [sp, #8]
   12e18:	str	r5, [sp, #4]
   12e1c:	str	r4, [sp]
   12e20:	mov	r3, r9
   12e24:	mov	r2, r8
   12e28:	ldr	r1, [pc, #1436]	; 133cc <__assert_fail@plt+0xce0>
   12e2c:	mov	r0, r6
   12e30:	bl	123f8 <fprintf@plt>
   12e34:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e38:	ldrh	r3, [r3, #56]	; 0x38
   12e3c:	cmp	r3, #6
   12e40:	bne	12e4c <__assert_fail@plt+0x760>
   12e44:	bl	12820 <__assert_fail@plt+0x134>
   12e48:	b	12e78 <__assert_fail@plt+0x78c>
   12e4c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e50:	ldr	r2, [r3, #48]	; 0x30
   12e54:	ldr	r3, [pc, #1388]	; 133c8 <__assert_fail@plt+0xcdc>
   12e58:	ldr	r3, [r3]
   12e5c:	cmp	r2, r3
   12e60:	bgt	12e74 <__assert_fail@plt+0x788>
   12e64:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e68:	ldr	r3, [r3, #48]	; 0x30
   12e6c:	cmp	r3, #0
   12e70:	bne	12e78 <__assert_fail@plt+0x78c>
   12e74:	bl	12820 <__assert_fail@plt+0x134>
   12e78:	ldr	r3, [fp, #-152]	; 0xffffff68
   12e7c:	ldr	r3, [r3, #32]
   12e80:	mov	r0, r3
   12e84:	bl	12878 <__assert_fail@plt+0x18c>
   12e88:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e8c:	ldr	r3, [r3, #48]	; 0x30
   12e90:	ldr	r2, [pc, #1328]	; 133c8 <__assert_fail@plt+0xcdc>
   12e94:	str	r3, [r2]
   12e98:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e9c:	ldrd	r2, [r3, #160]	; 0xa0
   12ea0:	strd	r2, [fp, #-44]	; 0xffffffd4
   12ea4:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ea8:	ldrh	r3, [r3, #56]	; 0x38
   12eac:	cmp	r3, #7
   12eb0:	bne	12ed4 <__assert_fail@plt+0x7e8>
   12eb4:	ldr	r3, [fp, #-156]	; 0xffffff64
   12eb8:	ldr	r2, [r3, #32]
   12ebc:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ec0:	ldr	r3, [r3, #28]
   12ec4:	mov	r1, r3
   12ec8:	mov	r0, r2
   12ecc:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   12ed0:	b	133b8 <__assert_fail@plt+0xccc>
   12ed4:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ed8:	ldrh	r3, [r3, #56]	; 0x38
   12edc:	cmp	r3, #4
   12ee0:	bne	12f14 <__assert_fail@plt+0x828>
   12ee4:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ee8:	ldr	r2, [r3, #32]
   12eec:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ef0:	ldr	r3, [r3, #28]
   12ef4:	mov	r1, r3
   12ef8:	mov	r0, r2
   12efc:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   12f00:	ldr	r3, [pc, #1208]	; 133c0 <__assert_fail@plt+0xcd4>
   12f04:	ldrb	r3, [r3]
   12f08:	cmp	r3, #0
   12f0c:	beq	13010 <__assert_fail@plt+0x924>
   12f10:	b	133b8 <__assert_fail@plt+0xccc>
   12f14:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f18:	ldrh	r3, [r3, #56]	; 0x38
   12f1c:	cmp	r3, #2
   12f20:	bne	12f3c <__assert_fail@plt+0x850>
   12f24:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f28:	bl	12c10 <__assert_fail@plt+0x524>
   12f2c:	ldr	r3, [pc, #1180]	; 133d0 <__assert_fail@plt+0xce4>
   12f30:	mov	r2, #1
   12f34:	str	r2, [r3, #28]
   12f38:	b	133b8 <__assert_fail@plt+0xccc>
   12f3c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f40:	ldrh	r3, [r3, #56]	; 0x38
   12f44:	cmp	r3, #13
   12f48:	bne	12f80 <__assert_fail@plt+0x894>
   12f4c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f50:	ldr	r3, [r3, #24]
   12f54:	mov	r0, r3
   12f58:	bl	12cec <__assert_fail@plt+0x600>
   12f5c:	mov	r3, r0
   12f60:	cmp	r3, #0
   12f64:	beq	13010 <__assert_fail@plt+0x924>
   12f68:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f6c:	ldr	r3, [r3, #28]
   12f70:	mov	r1, r3
   12f74:	mov	r0, #40	; 0x28
   12f78:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   12f7c:	b	133b8 <__assert_fail@plt+0xccc>
   12f80:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f84:	ldrh	r3, [r3, #56]	; 0x38
   12f88:	cmp	r3, #10
   12f8c:	bne	13010 <__assert_fail@plt+0x924>
   12f90:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f94:	ldr	r3, [r3, #48]	; 0x30
   12f98:	cmp	r3, #0
   12f9c:	bne	12fc0 <__assert_fail@plt+0x8d4>
   12fa0:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fa4:	ldr	r2, [r3, #32]
   12fa8:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fac:	ldr	r3, [r3, #28]
   12fb0:	mov	r1, r3
   12fb4:	mov	r0, r2
   12fb8:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   12fbc:	b	133b8 <__assert_fail@plt+0xccc>
   12fc0:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fc4:	ldr	r3, [r3, #24]
   12fc8:	mov	r0, r3
   12fcc:	bl	12cec <__assert_fail@plt+0x600>
   12fd0:	mov	r3, r0
   12fd4:	cmp	r3, #0
   12fd8:	beq	12ff4 <__assert_fail@plt+0x908>
   12fdc:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fe0:	ldr	r3, [r3, #28]
   12fe4:	mov	r1, r3
   12fe8:	mov	r0, #40	; 0x28
   12fec:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   12ff0:	b	133b8 <__assert_fail@plt+0xccc>
   12ff4:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ff8:	ldr	r2, [r3, #32]
   12ffc:	ldr	r3, [fp, #-156]	; 0xffffff64
   13000:	ldr	r3, [r3, #28]
   13004:	mov	r1, r3
   13008:	mov	r0, r2
   1300c:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   13010:	ldr	r3, [fp, #-156]	; 0xffffff64
   13014:	ldrh	r3, [r3, #56]	; 0x38
   13018:	cmp	r3, #11
   1301c:	beq	13030 <__assert_fail@plt+0x944>
   13020:	ldr	r3, [fp, #-156]	; 0xffffff64
   13024:	ldrh	r3, [r3, #56]	; 0x38
   13028:	cmp	r3, #10
   1302c:	bne	130a0 <__assert_fail@plt+0x9b4>
   13030:	ldr	r3, [pc, #920]	; 133d0 <__assert_fail@plt+0xce4>
   13034:	ldrb	r3, [r3, #4]
   13038:	eor	r3, r3, #1
   1303c:	uxtb	r3, r3
   13040:	cmp	r3, #0
   13044:	bne	1305c <__assert_fail@plt+0x970>
   13048:	ldr	r3, [pc, #900]	; 133d4 <__assert_fail@plt+0xce8>
   1304c:	mov	r2, #380	; 0x17c
   13050:	ldr	r1, [pc, #896]	; 133d8 <__assert_fail@plt+0xcec>
   13054:	ldr	r0, [pc, #896]	; 133dc <__assert_fail@plt+0xcf0>
   13058:	bl	126ec <__assert_fail@plt>
   1305c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13060:	ldrh	r3, [r3, #56]	; 0x38
   13064:	cmp	r3, #11
   13068:	beq	13090 <__assert_fail@plt+0x9a4>
   1306c:	ldr	r3, [pc, #860]	; 133d0 <__assert_fail@plt+0xce4>
   13070:	ldr	r3, [r3, #8]
   13074:	cmp	r3, #0
   13078:	beq	13090 <__assert_fail@plt+0x9a4>
   1307c:	ldr	r3, [pc, #848]	; 133d4 <__assert_fail@plt+0xce8>
   13080:	ldr	r2, [pc, #856]	; 133e0 <__assert_fail@plt+0xcf4>
   13084:	ldr	r1, [pc, #844]	; 133d8 <__assert_fail@plt+0xcec>
   13088:	ldr	r0, [pc, #852]	; 133e4 <__assert_fail@plt+0xcf8>
   1308c:	bl	126ec <__assert_fail@plt>
   13090:	ldr	r3, [pc, #824]	; 133d0 <__assert_fail@plt+0xce4>
   13094:	ldr	r3, [r3, #8]
   13098:	str	r3, [fp, #-144]	; 0xffffff70
   1309c:	b	1312c <__assert_fail@plt+0xa40>
   130a0:	ldr	r3, [pc, #808]	; 133d0 <__assert_fail@plt+0xce4>
   130a4:	mov	r2, #1
   130a8:	strb	r2, [r3, #4]
   130ac:	ldr	r3, [pc, #796]	; 133d0 <__assert_fail@plt+0xce4>
   130b0:	mov	r2, #1
   130b4:	strb	r2, [r3, #5]
   130b8:	ldr	r3, [fp, #-156]	; 0xffffff64
   130bc:	sub	r0, fp, #140	; 0x8c
   130c0:	add	r3, r3, #64	; 0x40
   130c4:	mov	r2, #104	; 0x68
   130c8:	mov	r1, r3
   130cc:	bl	120f8 <memcpy@plt>
   130d0:	ldr	r3, [fp, #-124]	; 0xffffff84
   130d4:	str	r3, [fp, #-144]	; 0xffffff70
   130d8:	ldr	r3, [fp, #-144]	; 0xffffff70
   130dc:	ldr	r2, [pc, #748]	; 133d0 <__assert_fail@plt+0xce4>
   130e0:	str	r3, [r2, #8]
   130e4:	ldr	r3, [fp, #-144]	; 0xffffff70
   130e8:	cmp	r3, #0
   130ec:	bne	1312c <__assert_fail@plt+0xa40>
   130f0:	ldr	r0, [pc, #752]	; 133e8 <__assert_fail@plt+0xcfc>
   130f4:	bl	12398 <gettext@plt>
   130f8:	mov	r4, r0
   130fc:	ldr	r3, [pc, #700]	; 133c0 <__assert_fail@plt+0xcd4>
   13100:	ldr	r1, [r3, #72]	; 0x48
   13104:	ldr	r3, [fp, #-156]	; 0xffffff64
   13108:	ldr	r3, [r3, #28]
   1310c:	mov	r2, r3
   13110:	mov	r0, #0
   13114:	bl	3b718 <__assert_fail@plt+0x2902c>
   13118:	mov	r3, r0
   1311c:	mov	r2, r4
   13120:	mov	r1, #0
   13124:	mov	r0, #0
   13128:	bl	122b4 <error@plt>
   1312c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13130:	ldr	r3, [r3, #48]	; 0x30
   13134:	ldr	r2, [pc, #660]	; 133d0 <__assert_fail@plt+0xce4>
   13138:	str	r3, [r2]
   1313c:	ldr	r3, [fp, #-144]	; 0xffffff70
   13140:	cmp	r3, #0
   13144:	beq	13184 <__assert_fail@plt+0xa98>
   13148:	ldr	r3, [fp, #-156]	; 0xffffff64
   1314c:	ldr	r1, [r3, #28]
   13150:	ldr	r3, [fp, #-156]	; 0xffffff64
   13154:	add	r2, r3, #168	; 0xa8
   13158:	sub	ip, fp, #140	; 0x8c
   1315c:	sub	r0, fp, #144	; 0x90
   13160:	mov	r3, #0
   13164:	str	r3, [sp]
   13168:	mov	r3, ip
   1316c:	bl	1bb44 <__assert_fail@plt+0x9458>
   13170:	mov	r3, r0
   13174:	eor	r3, r3, #1
   13178:	uxtb	r3, r3
   1317c:	cmp	r3, #0
   13180:	bne	133b4 <__assert_fail@plt+0xcc8>
   13184:	mov	r3, #0
   13188:	str	r3, [fp, #-32]	; 0xffffffe0
   1318c:	ldr	r3, [fp, #-144]	; 0xffffff70
   13190:	and	r3, r3, #61440	; 0xf000
   13194:	cmp	r3, #16384	; 0x4000
   13198:	beq	131cc <__assert_fail@plt+0xae0>
   1319c:	ldr	r3, [fp, #-156]	; 0xffffff64
   131a0:	ldrh	r3, [r3, #56]	; 0x38
   131a4:	cmp	r3, #1
   131a8:	beq	131cc <__assert_fail@plt+0xae0>
   131ac:	ldr	r3, [fp, #-156]	; 0xffffff64
   131b0:	ldrh	r3, [r3, #56]	; 0x38
   131b4:	cmp	r3, #6
   131b8:	beq	131cc <__assert_fail@plt+0xae0>
   131bc:	ldr	r3, [fp, #-156]	; 0xffffff64
   131c0:	ldrh	r3, [r3, #56]	; 0x38
   131c4:	cmp	r3, #2
   131c8:	bne	131d4 <__assert_fail@plt+0xae8>
   131cc:	mov	r3, #1
   131d0:	b	131d8 <__assert_fail@plt+0xaec>
   131d4:	mov	r3, #0
   131d8:	str	r3, [fp, #-36]	; 0xffffffdc
   131dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   131e0:	cmp	r3, #0
   131e4:	beq	1320c <__assert_fail@plt+0xb20>
   131e8:	ldr	r3, [fp, #-156]	; 0xffffff64
   131ec:	ldrh	r3, [r3, #56]	; 0x38
   131f0:	cmp	r3, #11
   131f4:	bne	1320c <__assert_fail@plt+0xb20>
   131f8:	mov	r2, #1
   131fc:	ldr	r1, [fp, #-156]	; 0xffffff64
   13200:	ldr	r0, [fp, #-152]	; 0xffffff68
   13204:	bl	41174 <__assert_fail@plt+0x2ea88>
   13208:	b	133b8 <__assert_fail@plt+0xccc>
   1320c:	ldr	r3, [pc, #428]	; 133c0 <__assert_fail@plt+0xcd4>
   13210:	ldr	r3, [r3, #4]
   13214:	cmp	r3, #0
   13218:	blt	13264 <__assert_fail@plt+0xb78>
   1321c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13220:	ldr	r2, [r3, #48]	; 0x30
   13224:	ldr	r3, [pc, #404]	; 133c0 <__assert_fail@plt+0xcd4>
   13228:	ldr	r3, [r3, #4]
   1322c:	cmp	r2, r3
   13230:	blt	13264 <__assert_fail@plt+0xb78>
   13234:	mov	r2, #4
   13238:	ldr	r1, [fp, #-156]	; 0xffffff64
   1323c:	ldr	r0, [fp, #-152]	; 0xffffff68
   13240:	bl	41174 <__assert_fail@plt+0x2ea88>
   13244:	ldr	r3, [fp, #-156]	; 0xffffff64
   13248:	ldr	r2, [r3, #48]	; 0x30
   1324c:	ldr	r3, [pc, #364]	; 133c0 <__assert_fail@plt+0xcd4>
   13250:	ldr	r3, [r3, #4]
   13254:	cmp	r2, r3
   13258:	ble	13264 <__assert_fail@plt+0xb78>
   1325c:	mov	r3, #1
   13260:	str	r3, [fp, #-32]	; 0xffffffe0
   13264:	ldr	r3, [fp, #-156]	; 0xffffff64
   13268:	ldrh	r3, [r3, #56]	; 0x38
   1326c:	cmp	r3, #1
   13270:	bne	13298 <__assert_fail@plt+0xbac>
   13274:	ldr	r3, [pc, #324]	; 133c0 <__assert_fail@plt+0xcd4>
   13278:	ldrb	r3, [r3]
   1327c:	eor	r3, r3, #1
   13280:	uxtb	r3, r3
   13284:	cmp	r3, #0
   13288:	beq	13298 <__assert_fail@plt+0xbac>
   1328c:	mov	r3, #1
   13290:	str	r3, [fp, #-32]	; 0xffffffe0
   13294:	b	132e4 <__assert_fail@plt+0xbf8>
   13298:	ldr	r3, [fp, #-156]	; 0xffffff64
   1329c:	ldrh	r3, [r3, #56]	; 0x38
   132a0:	cmp	r3, #6
   132a4:	bne	132c4 <__assert_fail@plt+0xbd8>
   132a8:	ldr	r3, [pc, #272]	; 133c0 <__assert_fail@plt+0xcd4>
   132ac:	ldrb	r3, [r3]
   132b0:	cmp	r3, #0
   132b4:	beq	132c4 <__assert_fail@plt+0xbd8>
   132b8:	mov	r3, #1
   132bc:	str	r3, [fp, #-32]	; 0xffffffe0
   132c0:	b	132e4 <__assert_fail@plt+0xbf8>
   132c4:	ldr	r3, [fp, #-156]	; 0xffffff64
   132c8:	ldr	r2, [r3, #48]	; 0x30
   132cc:	ldr	r3, [pc, #236]	; 133c0 <__assert_fail@plt+0xcd4>
   132d0:	ldr	r3, [r3, #8]
   132d4:	cmp	r2, r3
   132d8:	bge	132e4 <__assert_fail@plt+0xbf8>
   132dc:	mov	r3, #1
   132e0:	str	r3, [fp, #-32]	; 0xffffffe0
   132e4:	ldr	r3, [pc, #212]	; 133c0 <__assert_fail@plt+0xcd4>
   132e8:	ldr	r3, [r3, #44]	; 0x2c
   132ec:	and	r3, r3, #4
   132f0:	cmp	r3, #0
   132f4:	beq	13374 <__assert_fail@plt+0xc88>
   132f8:	ldr	r3, [pc, #196]	; 133c4 <__assert_fail@plt+0xcd8>
   132fc:	ldr	r4, [r3]
   13300:	ldr	r3, [pc, #184]	; 133c0 <__assert_fail@plt+0xcd4>
   13304:	ldr	r1, [r3, #72]	; 0x48
   13308:	ldr	r3, [fp, #-156]	; 0xffffff64
   1330c:	ldr	r3, [r3, #28]
   13310:	mov	r2, r3
   13314:	mov	r0, #0
   13318:	bl	3b718 <__assert_fail@plt+0x2902c>
   1331c:	mov	r5, r0
   13320:	ldr	r3, [fp, #-156]	; 0xffffff64
   13324:	ldrh	r3, [r3, #56]	; 0x38
   13328:	mov	r0, r3
   1332c:	bl	1297c <__assert_fail@plt+0x290>
   13330:	mov	r1, r0
   13334:	ldr	r3, [pc, #148]	; 133d0 <__assert_fail@plt+0xce4>
   13338:	ldrb	r3, [r3, #4]
   1333c:	mov	r2, r3
   13340:	ldr	r3, [pc, #136]	; 133d0 <__assert_fail@plt+0xce4>
   13344:	ldrb	r3, [r3, #5]
   13348:	str	r3, [sp, #12]
   1334c:	str	r2, [sp, #8]
   13350:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13354:	str	r3, [sp, #4]
   13358:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1335c:	str	r3, [sp]
   13360:	mov	r3, r1
   13364:	mov	r2, r5
   13368:	ldr	r1, [pc, #124]	; 133ec <__assert_fail@plt+0xd00>
   1336c:	mov	r0, r4
   13370:	bl	123f8 <fprintf@plt>
   13374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13378:	cmp	r3, #0
   1337c:	bne	13394 <__assert_fail@plt+0xca8>
   13380:	sub	r3, fp, #140	; 0x8c
   13384:	mov	r2, r3
   13388:	ldr	r1, [fp, #-156]	; 0xffffff64
   1338c:	ldr	r0, [fp, #-152]	; 0xffffff68
   13390:	bl	12aa8 <__assert_fail@plt+0x3bc>
   13394:	ldr	r3, [fp, #-156]	; 0xffffff64
   13398:	ldrh	r3, [r3, #56]	; 0x38
   1339c:	cmp	r3, #6
   133a0:	bne	133b8 <__assert_fail@plt+0xccc>
   133a4:	ldr	r3, [pc, #36]	; 133d0 <__assert_fail@plt+0xce4>
   133a8:	mov	r2, #0
   133ac:	strb	r2, [r3, #24]
   133b0:	b	133b8 <__assert_fail@plt+0xccc>
   133b4:	nop			; (mov r0, r0)
   133b8:	sub	sp, fp, #28
   133bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   133c0:	andeq	sp, r7, ip, asr #32
   133c4:	andeq	ip, r7, r8, lsr #14
   133c8:	andeq	ip, r7, r4, lsr #5
   133cc:	andeq	r4, r6, r8, lsl #5
   133d0:	andeq	sp, r7, r0, lsr #32
   133d4:	andeq	r4, r6, ip, lsr #13
   133d8:	andeq	r4, r6, r8, ror #1
   133dc:	strdeq	r4, [r6], -r0
   133e0:	andeq	r0, r0, sp, ror r1
   133e4:	andeq	r4, r6, r4, lsl #6
   133e8:	andeq	r4, r6, r4, lsr r3
   133ec:	andeq	r4, r6, r0, ror #6
   133f0:	push	{r4, r5, fp, lr}
   133f4:	add	fp, sp, #12
   133f8:	sub	sp, sp, #32
   133fc:	str	r0, [fp, #-40]	; 0xffffffd8
   13400:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13404:	bl	123bc <strlen@plt>
   13408:	mov	r3, r0
   1340c:	mov	r2, r3
   13410:	ldr	r3, [pc, #680]	; 136c0 <__assert_fail@plt+0xfd4>
   13414:	str	r2, [r3, #20]
   13418:	mvn	r0, #99	; 0x63
   1341c:	bl	12878 <__assert_fail@plt+0x18c>
   13420:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13424:	str	r3, [fp, #-32]	; 0xffffffe0
   13428:	mov	r3, #0
   1342c:	str	r3, [fp, #-28]	; 0xffffffe4
   13430:	ldr	r3, [pc, #652]	; 136c4 <__assert_fail@plt+0xfd8>
   13434:	ldr	r3, [r3, #48]	; 0x30
   13438:	cmp	r3, #1
   1343c:	beq	13454 <__assert_fail@plt+0xd68>
   13440:	cmp	r3, #1
   13444:	bcc	13484 <__assert_fail@plt+0xd98>
   13448:	cmp	r3, #2
   1344c:	beq	1346c <__assert_fail@plt+0xd80>
   13450:	b	1349c <__assert_fail@plt+0xdb0>
   13454:	ldr	r3, [pc, #620]	; 136c8 <__assert_fail@plt+0xfdc>
   13458:	ldr	r3, [r3]
   1345c:	orr	r3, r3, #3
   13460:	ldr	r2, [pc, #608]	; 136c8 <__assert_fail@plt+0xfdc>
   13464:	str	r3, [r2]
   13468:	b	1349c <__assert_fail@plt+0xdb0>
   1346c:	ldr	r3, [pc, #596]	; 136c8 <__assert_fail@plt+0xfdc>
   13470:	ldr	r3, [r3]
   13474:	orr	r3, r3, #17
   13478:	ldr	r2, [pc, #584]	; 136c8 <__assert_fail@plt+0xfdc>
   1347c:	str	r3, [r2]
   13480:	b	1349c <__assert_fail@plt+0xdb0>
   13484:	ldr	r3, [pc, #572]	; 136c8 <__assert_fail@plt+0xfdc>
   13488:	ldr	r3, [r3]
   1348c:	orr	r3, r3, #16
   13490:	ldr	r2, [pc, #560]	; 136c8 <__assert_fail@plt+0xfdc>
   13494:	str	r3, [r2]
   13498:	nop			; (mov r0, r0)
   1349c:	ldr	r3, [pc, #544]	; 136c4 <__assert_fail@plt+0xfd8>
   134a0:	ldrb	r3, [r3, #13]
   134a4:	cmp	r3, #0
   134a8:	beq	134c0 <__assert_fail@plt+0xdd4>
   134ac:	ldr	r3, [pc, #532]	; 136c8 <__assert_fail@plt+0xfdc>
   134b0:	ldr	r3, [r3]
   134b4:	orr	r3, r3, #64	; 0x40
   134b8:	ldr	r2, [pc, #520]	; 136c8 <__assert_fail@plt+0xfdc>
   134bc:	str	r3, [r2]
   134c0:	ldr	r3, [pc, #512]	; 136c8 <__assert_fail@plt+0xfdc>
   134c4:	ldr	r1, [r3]
   134c8:	sub	r3, fp, #32
   134cc:	mov	r2, #0
   134d0:	mov	r0, r3
   134d4:	bl	3ffa4 <__assert_fail@plt+0x2d8b8>
   134d8:	str	r0, [fp, #-20]	; 0xffffffec
   134dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   134e0:	cmp	r3, #0
   134e4:	bne	13530 <__assert_fail@plt+0xe44>
   134e8:	bl	12404 <__errno_location@plt>
   134ec:	mov	r3, r0
   134f0:	ldr	r4, [r3]
   134f4:	ldr	r0, [pc, #464]	; 136cc <__assert_fail@plt+0xfe0>
   134f8:	bl	12398 <gettext@plt>
   134fc:	mov	r5, r0
   13500:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13504:	mov	r0, #0
   13508:	bl	1c7fc <__assert_fail@plt+0xa110>
   1350c:	mov	r3, r0
   13510:	mov	r2, r5
   13514:	mov	r1, r4
   13518:	mov	r0, #0
   1351c:	bl	122b4 <error@plt>
   13520:	ldr	r3, [pc, #408]	; 136c0 <__assert_fail@plt+0xfd4>
   13524:	mov	r2, #1
   13528:	str	r2, [r3, #28]
   1352c:	b	136b0 <__assert_fail@plt+0xfc4>
   13530:	mov	r3, #-2147483648	; 0x80000000
   13534:	str	r3, [fp, #-16]
   13538:	b	135dc <__assert_fail@plt+0xef0>
   1353c:	ldr	r3, [pc, #380]	; 136c0 <__assert_fail@plt+0xfd4>
   13540:	ldrb	r3, [r3, #32]
   13544:	cmp	r3, #0
   13548:	beq	13564 <__assert_fail@plt+0xe78>
   1354c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13550:	ldr	r2, [r3, #48]	; 0x30
   13554:	ldr	r3, [fp, #-16]
   13558:	cmp	r2, r3
   1355c:	beq	13564 <__assert_fail@plt+0xe78>
   13560:	bl	1b274 <__assert_fail@plt+0x8b88>
   13564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13568:	ldr	r3, [r3, #48]	; 0x30
   1356c:	str	r3, [fp, #-16]
   13570:	ldr	r3, [pc, #328]	; 136c0 <__assert_fail@plt+0xfd4>
   13574:	mov	r2, #0
   13578:	strb	r2, [r3, #40]	; 0x28
   1357c:	ldr	r3, [pc, #316]	; 136c0 <__assert_fail@plt+0xfd4>
   13580:	mov	r2, #0
   13584:	strb	r2, [r3, #4]
   13588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1358c:	ldr	r3, [r3, #80]	; 0x50
   13590:	cmp	r3, #0
   13594:	movne	r3, #1
   13598:	moveq	r3, #0
   1359c:	uxtb	r2, r3
   135a0:	ldr	r3, [pc, #280]	; 136c0 <__assert_fail@plt+0xfd4>
   135a4:	strb	r2, [r3, #5]
   135a8:	ldr	r3, [pc, #272]	; 136c0 <__assert_fail@plt+0xfd4>
   135ac:	ldrb	r3, [r3, #5]
   135b0:	cmp	r3, #0
   135b4:	beq	135c4 <__assert_fail@plt+0xed8>
   135b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135bc:	ldr	r3, [r3, #80]	; 0x50
   135c0:	b	135c8 <__assert_fail@plt+0xedc>
   135c4:	mov	r3, #0
   135c8:	ldr	r2, [pc, #240]	; 136c0 <__assert_fail@plt+0xfd4>
   135cc:	str	r3, [r2, #8]
   135d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   135d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   135d8:	bl	12d5c <__assert_fail@plt+0x670>
   135dc:	bl	12404 <__errno_location@plt>
   135e0:	mov	r2, r0
   135e4:	mov	r3, #0
   135e8:	str	r3, [r2]
   135ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   135f0:	bl	40a00 <__assert_fail@plt+0x2e314>
   135f4:	str	r0, [fp, #-24]	; 0xffffffe8
   135f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135fc:	cmp	r3, #0
   13600:	bne	1353c <__assert_fail@plt+0xe50>
   13604:	bl	12404 <__errno_location@plt>
   13608:	mov	r3, r0
   1360c:	ldr	r3, [r3]
   13610:	cmp	r3, #0
   13614:	beq	13658 <__assert_fail@plt+0xf6c>
   13618:	bl	12404 <__errno_location@plt>
   1361c:	mov	r3, r0
   13620:	ldr	r4, [r3]
   13624:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13628:	mov	r0, #0
   1362c:	bl	1c7fc <__assert_fail@plt+0xa110>
   13630:	mov	r3, r0
   13634:	ldr	r2, [pc, #148]	; 136d0 <__assert_fail@plt+0xfe4>
   13638:	mov	r1, r4
   1363c:	mov	r0, #0
   13640:	bl	122b4 <error@plt>
   13644:	ldr	r3, [pc, #116]	; 136c0 <__assert_fail@plt+0xfd4>
   13648:	mov	r2, #1
   1364c:	str	r2, [r3, #28]
   13650:	mov	r3, #0
   13654:	b	136b4 <__assert_fail@plt+0xfc8>
   13658:	ldr	r0, [fp, #-20]	; 0xffffffec
   1365c:	bl	404d4 <__assert_fail@plt+0x2dde8>
   13660:	mov	r3, r0
   13664:	cmp	r3, #0
   13668:	beq	136a8 <__assert_fail@plt+0xfbc>
   1366c:	bl	12404 <__errno_location@plt>
   13670:	mov	r3, r0
   13674:	ldr	r4, [r3]
   13678:	ldr	r0, [pc, #84]	; 136d4 <__assert_fail@plt+0xfe8>
   1367c:	bl	12398 <gettext@plt>
   13680:	mov	r2, r0
   13684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13688:	mov	r1, r4
   1368c:	mov	r0, #0
   13690:	bl	122b4 <error@plt>
   13694:	ldr	r3, [pc, #36]	; 136c0 <__assert_fail@plt+0xfd4>
   13698:	mov	r2, #1
   1369c:	str	r2, [r3, #28]
   136a0:	mov	r3, #0
   136a4:	b	136b4 <__assert_fail@plt+0xfc8>
   136a8:	mov	r3, #0
   136ac:	str	r3, [fp, #-20]	; 0xffffffec
   136b0:	mov	r3, #1
   136b4:	mov	r0, r3
   136b8:	sub	sp, fp, #12
   136bc:	pop	{r4, r5, fp, pc}
   136c0:	andeq	sp, r7, r0, lsr #32
   136c4:	andeq	sp, r7, ip, asr #32
   136c8:	andeq	ip, r7, r0, lsr #5
   136cc:			; <UNDEFINED> instruction: 0x000643bc
   136d0:	ldrdeq	r4, [r6], -r0
   136d4:	andeq	r4, r6, ip, lsl #8
   136d8:	push	{r4, fp, lr}
   136dc:	add	fp, sp, #8
   136e0:	sub	sp, sp, #268	; 0x10c
   136e4:	str	r0, [fp, #-264]	; 0xfffffef8
   136e8:	str	r1, [fp, #-268]	; 0xfffffef4
   136ec:	ldr	r3, [fp, #-264]	; 0xfffffef8
   136f0:	cmp	r3, #0
   136f4:	ble	13728 <__assert_fail@plt+0x103c>
   136f8:	ldr	r3, [fp, #-268]	; 0xfffffef4
   136fc:	ldr	r3, [r3]
   13700:	mov	r1, #1
   13704:	mov	r0, r3
   13708:	bl	1bd08 <__assert_fail@plt+0x961c>
   1370c:	mov	r3, r0
   13710:	eor	r3, r3, #1
   13714:	uxtb	r3, r3
   13718:	cmp	r3, #0
   1371c:	beq	13728 <__assert_fail@plt+0x103c>
   13720:	mov	r3, #1
   13724:	b	1372c <__assert_fail@plt+0x1040>
   13728:	mov	r3, #0
   1372c:	strb	r3, [fp, #-26]	; 0xffffffe6
   13730:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   13734:	and	r3, r3, #1
   13738:	strb	r3, [fp, #-26]	; 0xffffffe6
   1373c:	mov	r3, #0
   13740:	str	r3, [fp, #-16]
   13744:	mov	r3, #0
   13748:	str	r3, [fp, #-20]	; 0xffffffec
   1374c:	ldr	r3, [pc, #1172]	; 13be8 <__assert_fail@plt+0x14fc>
   13750:	ldr	r3, [r3, #76]	; 0x4c
   13754:	cmp	r3, #0
   13758:	beq	13978 <__assert_fail@plt+0x128c>
   1375c:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   13760:	cmp	r3, #0
   13764:	beq	137b8 <__assert_fail@plt+0x10cc>
   13768:	ldr	r0, [pc, #1148]	; 13bec <__assert_fail@plt+0x1500>
   1376c:	bl	12398 <gettext@plt>
   13770:	mov	r4, r0
   13774:	ldr	r3, [fp, #-268]	; 0xfffffef4
   13778:	ldr	r3, [r3]
   1377c:	mov	r1, r3
   13780:	mov	r0, #0
   13784:	bl	1c7fc <__assert_fail@plt+0xa110>
   13788:	mov	r3, r0
   1378c:	mov	r2, r4
   13790:	mov	r1, #0
   13794:	mov	r0, #0
   13798:	bl	122b4 <error@plt>
   1379c:	ldr	r0, [pc, #1100]	; 13bf0 <__assert_fail@plt+0x1504>
   137a0:	bl	12398 <gettext@plt>
   137a4:	mov	r3, r0
   137a8:	ldr	r2, [pc, #1092]	; 13bf4 <__assert_fail@plt+0x1508>
   137ac:	mov	r1, #0
   137b0:	mov	r0, #1
   137b4:	bl	122b4 <error@plt>
   137b8:	ldr	r3, [pc, #1064]	; 13be8 <__assert_fail@plt+0x14fc>
   137bc:	ldr	r3, [r3, #76]	; 0x4c
   137c0:	ldr	r1, [pc, #1072]	; 13bf8 <__assert_fail@plt+0x150c>
   137c4:	mov	r0, r3
   137c8:	bl	11ffc <strcmp@plt>
   137cc:	mov	r3, r0
   137d0:	cmp	r3, #0
   137d4:	bne	13830 <__assert_fail@plt+0x1144>
   137d8:	ldr	r3, [pc, #1032]	; 13be8 <__assert_fail@plt+0x14fc>
   137dc:	ldrb	r3, [r3, #80]	; 0x50
   137e0:	cmp	r3, #0
   137e4:	beq	13804 <__assert_fail@plt+0x1118>
   137e8:	ldr	r0, [pc, #1036]	; 13bfc <__assert_fail@plt+0x1510>
   137ec:	bl	12398 <gettext@plt>
   137f0:	mov	r3, r0
   137f4:	ldr	r2, [pc, #1028]	; 13c00 <__assert_fail@plt+0x1514>
   137f8:	mov	r1, #0
   137fc:	mov	r0, #1
   13800:	bl	122b4 <error@plt>
   13804:	ldr	r0, [pc, #1016]	; 13c04 <__assert_fail@plt+0x1518>
   13808:	bl	12398 <gettext@plt>
   1380c:	mov	r3, r0
   13810:	mov	r1, r3
   13814:	mov	r0, #0
   13818:	bl	1c7fc <__assert_fail@plt+0xa110>
   1381c:	str	r0, [fp, #-20]	; 0xffffffec
   13820:	ldr	r3, [pc, #992]	; 13c08 <__assert_fail@plt+0x151c>
   13824:	ldr	r3, [r3]
   13828:	str	r3, [fp, #-16]
   1382c:	b	13968 <__assert_fail@plt+0x127c>
   13830:	ldr	r3, [pc, #944]	; 13be8 <__assert_fail@plt+0x14fc>
   13834:	ldr	r3, [r3, #76]	; 0x4c
   13838:	mov	r1, r3
   1383c:	mov	r0, #0
   13840:	bl	1c7fc <__assert_fail@plt+0xa110>
   13844:	str	r0, [fp, #-20]	; 0xffffffec
   13848:	ldr	r3, [pc, #920]	; 13be8 <__assert_fail@plt+0x14fc>
   1384c:	ldr	r3, [r3, #76]	; 0x4c
   13850:	ldr	r1, [pc, #948]	; 13c0c <__assert_fail@plt+0x1520>
   13854:	mov	r0, r3
   13858:	bl	125e4 <fopen64@plt>
   1385c:	str	r0, [fp, #-16]
   13860:	ldr	r3, [fp, #-16]
   13864:	cmp	r3, #0
   13868:	bne	13894 <__assert_fail@plt+0x11a8>
   1386c:	bl	12404 <__errno_location@plt>
   13870:	mov	r3, r0
   13874:	ldr	r4, [r3]
   13878:	ldr	r0, [pc, #912]	; 13c10 <__assert_fail@plt+0x1524>
   1387c:	bl	12398 <gettext@plt>
   13880:	mov	r2, r0
   13884:	ldr	r3, [fp, #-20]	; 0xffffffec
   13888:	mov	r1, r4
   1388c:	mov	r0, #1
   13890:	bl	122b4 <error@plt>
   13894:	ldr	r0, [fp, #-16]
   13898:	bl	12488 <fileno@plt>
   1389c:	str	r0, [fp, #-32]	; 0xffffffe0
   138a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   138a4:	cmp	r3, #0
   138a8:	bge	138c0 <__assert_fail@plt+0x11d4>
   138ac:	ldr	r3, [pc, #864]	; 13c14 <__assert_fail@plt+0x1528>
   138b0:	ldr	r2, [pc, #864]	; 13c18 <__assert_fail@plt+0x152c>
   138b4:	ldr	r1, [pc, #864]	; 13c1c <__assert_fail@plt+0x1530>
   138b8:	ldr	r0, [pc, #864]	; 13c20 <__assert_fail@plt+0x1534>
   138bc:	bl	126ec <__assert_fail@plt>
   138c0:	ldr	r3, [pc, #800]	; 13be8 <__assert_fail@plt+0x14fc>
   138c4:	ldrb	r3, [r3, #80]	; 0x50
   138c8:	cmp	r3, #0
   138cc:	beq	1395c <__assert_fail@plt+0x1270>
   138d0:	sub	r3, fp, #260	; 0x104
   138d4:	mov	r1, r3
   138d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138dc:	bl	64094 <__assert_fail@plt+0x519a8>
   138e0:	mov	r3, r0
   138e4:	cmp	r3, #0
   138e8:	bne	1395c <__assert_fail@plt+0x1270>
   138ec:	sub	r3, fp, #156	; 0x9c
   138f0:	mov	r1, r3
   138f4:	mov	r0, #0
   138f8:	bl	64094 <__assert_fail@plt+0x519a8>
   138fc:	mov	r3, r0
   13900:	cmp	r3, #0
   13904:	bne	1395c <__assert_fail@plt+0x1270>
   13908:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   1390c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   13910:	cmp	r1, r3
   13914:	cmpeq	r0, r2
   13918:	bne	1395c <__assert_fail@plt+0x1270>
   1391c:	sub	r3, fp, #260	; 0x104
   13920:	ldrd	r0, [r3]
   13924:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13928:	cmp	r1, r3
   1392c:	cmpeq	r0, r2
   13930:	bne	1395c <__assert_fail@plt+0x1270>
   13934:	ldr	r0, [pc, #744]	; 13c24 <__assert_fail@plt+0x1538>
   13938:	bl	12398 <gettext@plt>
   1393c:	mov	r2, r0
   13940:	ldr	r3, [fp, #-20]	; 0xffffffec
   13944:	str	r3, [sp]
   13948:	mov	r3, r2
   1394c:	ldr	r2, [pc, #724]	; 13c28 <__assert_fail@plt+0x153c>
   13950:	mov	r1, #0
   13954:	mov	r0, #1
   13958:	bl	122b4 <error@plt>
   1395c:	mov	r1, #1
   13960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13964:	bl	2a010 <__assert_fail@plt+0x17924>
   13968:	ldr	r0, [fp, #-16]
   1396c:	bl	29acc <__assert_fail@plt+0x173e0>
   13970:	str	r0, [fp, #-24]	; 0xffffffe8
   13974:	b	139b4 <__assert_fail@plt+0x12c8>
   13978:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   1397c:	eor	r3, r3, #1
   13980:	uxtb	r3, r3
   13984:	cmp	r3, #0
   13988:	beq	139a8 <__assert_fail@plt+0x12bc>
   1398c:	mov	r3, #46	; 0x2e
   13990:	strh	r3, [fp, #-44]	; 0xffffffd4
   13994:	sub	r3, fp, #44	; 0x2c
   13998:	mov	r0, r3
   1399c:	bl	133f0 <__assert_fail@plt+0xd04>
   139a0:	mov	r3, r0
   139a4:	b	13bdc <__assert_fail@plt+0x14f0>
   139a8:	ldr	r0, [fp, #-268]	; 0xfffffef4
   139ac:	bl	29a64 <__assert_fail@plt+0x17378>
   139b0:	str	r0, [fp, #-24]	; 0xffffffe8
   139b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   139b8:	cmp	r3, #0
   139bc:	bne	139c4 <__assert_fail@plt+0x12d8>
   139c0:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   139c4:	mov	r3, #1
   139c8:	strb	r3, [fp, #-25]	; 0xffffffe7
   139cc:	sub	r3, fp, #48	; 0x30
   139d0:	mov	r1, r3
   139d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139d8:	bl	29b4c <__assert_fail@plt+0x17460>
   139dc:	str	r0, [fp, #-36]	; 0xffffffdc
   139e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   139e4:	cmp	r3, #0
   139e8:	bne	13a64 <__assert_fail@plt+0x1378>
   139ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139f0:	cmp	r3, #3
   139f4:	beq	13a4c <__assert_fail@plt+0x1360>
   139f8:	cmp	r3, #4
   139fc:	beq	13a0c <__assert_fail@plt+0x1320>
   13a00:	cmp	r3, #2
   13a04:	beq	13b64 <__assert_fail@plt+0x1478>
   13a08:	b	13a50 <__assert_fail@plt+0x1364>
   13a0c:	bl	12404 <__errno_location@plt>
   13a10:	mov	r3, r0
   13a14:	ldr	r4, [r3]
   13a18:	ldr	r0, [pc, #524]	; 13c2c <__assert_fail@plt+0x1540>
   13a1c:	bl	12398 <gettext@plt>
   13a20:	mov	r2, r0
   13a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a28:	mov	r1, r4
   13a2c:	mov	r0, #0
   13a30:	bl	122b4 <error@plt>
   13a34:	ldr	r3, [pc, #500]	; 13c30 <__assert_fail@plt+0x1544>
   13a38:	mov	r2, #1
   13a3c:	str	r2, [r3, #28]
   13a40:	mov	r3, #0
   13a44:	strb	r3, [fp, #-25]	; 0xffffffe7
   13a48:	b	13b70 <__assert_fail@plt+0x1484>
   13a4c:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   13a50:	ldr	r3, [pc, #444]	; 13c14 <__assert_fail@plt+0x1528>
   13a54:	ldr	r2, [pc, #472]	; 13c34 <__assert_fail@plt+0x1548>
   13a58:	ldr	r1, [pc, #444]	; 13c1c <__assert_fail@plt+0x1530>
   13a5c:	ldr	r0, [pc, #468]	; 13c38 <__assert_fail@plt+0x154c>
   13a60:	bl	126ec <__assert_fail@plt>
   13a64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13a68:	ldrb	r3, [r3]
   13a6c:	cmp	r3, #0
   13a70:	bne	13af8 <__assert_fail@plt+0x140c>
   13a74:	ldr	r3, [pc, #364]	; 13be8 <__assert_fail@plt+0x14fc>
   13a78:	ldr	r3, [r3, #76]	; 0x4c
   13a7c:	cmp	r3, #0
   13a80:	bne	13aa8 <__assert_fail@plt+0x13bc>
   13a84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13a88:	mov	r0, #0
   13a8c:	bl	1c7fc <__assert_fail@plt+0xa110>
   13a90:	mov	r3, r0
   13a94:	ldr	r2, [pc, #344]	; 13bf4 <__assert_fail@plt+0x1508>
   13a98:	mov	r1, #2
   13a9c:	mov	r0, #0
   13aa0:	bl	122b4 <error@plt>
   13aa4:	b	13ae0 <__assert_fail@plt+0x13f4>
   13aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13aac:	bl	29c5c <__assert_fail@plt+0x17570>
   13ab0:	str	r0, [fp, #-40]	; 0xffffffd8
   13ab4:	ldr	r0, [pc, #384]	; 13c3c <__assert_fail@plt+0x1550>
   13ab8:	bl	12398 <gettext@plt>
   13abc:	mov	r3, r0
   13ac0:	str	r3, [sp, #4]
   13ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ac8:	str	r3, [sp]
   13acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ad0:	ldr	r2, [pc, #360]	; 13c40 <__assert_fail@plt+0x1554>
   13ad4:	mov	r1, #0
   13ad8:	mov	r0, #0
   13adc:	bl	122b4 <error@plt>
   13ae0:	ldr	r3, [pc, #328]	; 13c30 <__assert_fail@plt+0x1544>
   13ae4:	mov	r2, #1
   13ae8:	str	r2, [r3, #28]
   13aec:	mov	r3, #0
   13af0:	strb	r3, [fp, #-25]	; 0xffffffe7
   13af4:	b	139cc <__assert_fail@plt+0x12e0>
   13af8:	ldr	r3, [pc, #232]	; 13be8 <__assert_fail@plt+0x14fc>
   13afc:	ldr	r3, [r3, #76]	; 0x4c
   13b00:	cmp	r3, #0
   13b04:	bne	13b20 <__assert_fail@plt+0x1434>
   13b08:	mov	r1, #1
   13b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b10:	bl	1bd08 <__assert_fail@plt+0x961c>
   13b14:	mov	r3, r0
   13b18:	cmp	r3, #0
   13b1c:	bne	13b6c <__assert_fail@plt+0x1480>
   13b20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b24:	bl	123bc <strlen@plt>
   13b28:	mov	r3, r0
   13b2c:	mov	r2, r3
   13b30:	ldr	r3, [pc, #248]	; 13c30 <__assert_fail@plt+0x1544>
   13b34:	str	r2, [r3, #20]
   13b38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b3c:	bl	133f0 <__assert_fail@plt+0xd04>
   13b40:	mov	r3, r0
   13b44:	eor	r3, r3, #1
   13b48:	uxtb	r3, r3
   13b4c:	cmp	r3, #0
   13b50:	beq	139cc <__assert_fail@plt+0x12e0>
   13b54:	mov	r3, #0
   13b58:	strb	r3, [fp, #-25]	; 0xffffffe7
   13b5c:	nop			; (mov r0, r0)
   13b60:	b	13b70 <__assert_fail@plt+0x1484>
   13b64:	nop			; (mov r0, r0)
   13b68:	b	13b70 <__assert_fail@plt+0x1484>
   13b6c:	nop			; (mov r0, r0)
   13b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b74:	bl	29cb4 <__assert_fail@plt+0x175c8>
   13b78:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13b7c:	cmp	r3, #0
   13b80:	beq	13bd8 <__assert_fail@plt+0x14ec>
   13b84:	ldr	r3, [pc, #92]	; 13be8 <__assert_fail@plt+0x14fc>
   13b88:	ldr	r3, [r3, #76]	; 0x4c
   13b8c:	cmp	r3, #0
   13b90:	beq	13bd8 <__assert_fail@plt+0x14ec>
   13b94:	ldr	r0, [fp, #-16]
   13b98:	bl	120bc <ferror@plt>
   13b9c:	mov	r3, r0
   13ba0:	cmp	r3, #0
   13ba4:	bne	13bbc <__assert_fail@plt+0x14d0>
   13ba8:	ldr	r0, [fp, #-16]
   13bac:	bl	124d0 <fclose@plt>
   13bb0:	mov	r3, r0
   13bb4:	cmp	r3, #0
   13bb8:	beq	13bd8 <__assert_fail@plt+0x14ec>
   13bbc:	ldr	r0, [pc, #128]	; 13c44 <__assert_fail@plt+0x1558>
   13bc0:	bl	12398 <gettext@plt>
   13bc4:	mov	r2, r0
   13bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bcc:	mov	r1, #0
   13bd0:	mov	r0, #1
   13bd4:	bl	122b4 <error@plt>
   13bd8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13bdc:	mov	r0, r3
   13be0:	sub	sp, fp, #8
   13be4:	pop	{r4, fp, pc}
   13be8:	andeq	sp, r7, ip, asr #32
   13bec:	andeq	r4, r6, r4, asr #8
   13bf0:	andeq	r4, r6, r8, asr r4
   13bf4:	andeq	r4, r6, ip, lsl #9
   13bf8:	muleq	r6, r0, r4
   13bfc:	muleq	r6, r4, r4
   13c00:	andeq	r4, r6, r8, ror #9
   13c04:	andeq	r4, r6, ip, ror #9
   13c08:	andeq	ip, r7, r0, lsr r7
   13c0c:	andeq	r4, r6, r0, lsl #10
   13c10:	andeq	r4, r6, r4, lsl #10
   13c14:	andeq	r4, r6, r0, asr #13
   13c18:	andeq	r0, r0, r2, ror #4
   13c1c:	andeq	r4, r6, r8, ror #1
   13c20:	andeq	r4, r6, r0, lsr #10
   13c24:	andeq	r4, r6, r8, lsr #10
   13c28:	andeq	r4, r6, ip, lsl #11
   13c2c:	muleq	r6, r4, r5
   13c30:	andeq	sp, r7, r0, lsr #32
   13c34:	andeq	r0, r0, r3, lsr #5
   13c38:	andeq	r4, r6, r4, lsr #11
   13c3c:	andeq	r4, r6, ip, asr #11
   13c40:	andeq	r4, r6, ip, ror #11
   13c44:	strdeq	r4, [r6], -r8
   13c48:	push	{r4, fp, lr}
   13c4c:	add	fp, sp, #8
   13c50:	sub	sp, sp, #20
   13c54:	str	r0, [fp, #-24]	; 0xffffffe8
   13c58:	str	r1, [fp, #-28]	; 0xffffffe4
   13c5c:	mov	r3, #0
   13c60:	str	r3, [fp, #-16]
   13c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c68:	ldr	r3, [r3]
   13c6c:	cmp	r3, #0
   13c70:	beq	13c88 <__assert_fail@plt+0x159c>
   13c74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c78:	ldr	r3, [r3]
   13c7c:	mov	r0, r3
   13c80:	bl	3947c <__assert_fail@plt+0x26d90>
   13c84:	b	13c90 <__assert_fail@plt+0x15a4>
   13c88:	ldr	r0, [pc, #452]	; 13e54 <__assert_fail@plt+0x1768>
   13c8c:	bl	3947c <__assert_fail@plt+0x26d90>
   13c90:	bl	1b360 <__assert_fail@plt+0x8c74>
   13c94:	ldr	r3, [pc, #444]	; 13e58 <__assert_fail@plt+0x176c>
   13c98:	mov	r2, #0
   13c9c:	strb	r2, [r3, #40]	; 0x28
   13ca0:	ldr	r3, [pc, #432]	; 13e58 <__assert_fail@plt+0x176c>
   13ca4:	mov	r2, #0
   13ca8:	str	r2, [r3, #28]
   13cac:	ldr	r3, [pc, #420]	; 13e58 <__assert_fail@plt+0x176c>
   13cb0:	mov	r2, #0
   13cb4:	strb	r2, [r3, #32]
   13cb8:	ldr	r3, [pc, #408]	; 13e58 <__assert_fail@plt+0x176c>
   13cbc:	mvn	r2, #99	; 0x63
   13cc0:	str	r2, [r3, #16]
   13cc4:	bl	27e9c <__assert_fail@plt+0x157b0>
   13cc8:	mov	r3, r0
   13ccc:	cmp	r3, #0
   13cd0:	beq	13cd8 <__assert_fail@plt+0x15ec>
   13cd4:	bl	27b1c <__assert_fail@plt+0x15430>
   13cd8:	ldr	r0, [pc, #380]	; 13e5c <__assert_fail@plt+0x1770>
   13cdc:	bl	1cb0c <__assert_fail@plt+0xa420>
   13ce0:	mov	r2, r0
   13ce4:	ldr	r3, [pc, #364]	; 13e58 <__assert_fail@plt+0x176c>
   13ce8:	str	r2, [r3, #36]	; 0x24
   13cec:	ldr	r3, [pc, #356]	; 13e58 <__assert_fail@plt+0x176c>
   13cf0:	ldr	r3, [r3, #36]	; 0x24
   13cf4:	cmp	r3, #0
   13cf8:	bne	13d24 <__assert_fail@plt+0x1638>
   13cfc:	bl	12404 <__errno_location@plt>
   13d00:	mov	r3, r0
   13d04:	ldr	r4, [r3]
   13d08:	ldr	r0, [pc, #336]	; 13e60 <__assert_fail@plt+0x1774>
   13d0c:	bl	12398 <gettext@plt>
   13d10:	mov	r3, r0
   13d14:	mov	r2, r3
   13d18:	mov	r1, r4
   13d1c:	mov	r0, #1
   13d20:	bl	122b4 <error@plt>
   13d24:	ldr	r0, [pc, #312]	; 13e64 <__assert_fail@plt+0x1778>
   13d28:	bl	1c4a8 <__assert_fail@plt+0x9dbc>
   13d2c:	ldr	r1, [pc, #308]	; 13e68 <__assert_fail@plt+0x177c>
   13d30:	mov	r0, #6
   13d34:	bl	12518 <setlocale@plt>
   13d38:	ldr	r1, [pc, #300]	; 13e6c <__assert_fail@plt+0x1780>
   13d3c:	ldr	r0, [pc, #300]	; 13e70 <__assert_fail@plt+0x1784>
   13d40:	bl	12620 <bindtextdomain@plt>
   13d44:	ldr	r0, [pc, #292]	; 13e70 <__assert_fail@plt+0x1784>
   13d48:	bl	121c4 <textdomain@plt>
   13d4c:	ldr	r0, [pc, #288]	; 13e74 <__assert_fail@plt+0x1788>
   13d50:	bl	6406c <__assert_fail@plt+0x51980>
   13d54:	mov	r3, r0
   13d58:	cmp	r3, #0
   13d5c:	beq	13d88 <__assert_fail@plt+0x169c>
   13d60:	bl	12404 <__errno_location@plt>
   13d64:	mov	r3, r0
   13d68:	ldr	r4, [r3]
   13d6c:	ldr	r0, [pc, #260]	; 13e78 <__assert_fail@plt+0x178c>
   13d70:	bl	12398 <gettext@plt>
   13d74:	mov	r3, r0
   13d78:	mov	r2, r3
   13d7c:	mov	r1, r4
   13d80:	mov	r0, #1
   13d84:	bl	122b4 <error@plt>
   13d88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d90:	bl	1c198 <__assert_fail@plt+0x9aac>
   13d94:	str	r0, [fp, #-16]
   13d98:	ldr	r3, [pc, #196]	; 13e64 <__assert_fail@plt+0x1778>
   13d9c:	ldr	r3, [r3, #44]	; 0x2c
   13da0:	and	r3, r3, #2
   13da4:	cmp	r3, #0
   13da8:	beq	13db8 <__assert_fail@plt+0x16cc>
   13dac:	ldr	r3, [pc, #176]	; 13e64 <__assert_fail@plt+0x1778>
   13db0:	ldr	r2, [pc, #196]	; 13e7c <__assert_fail@plt+0x1790>
   13db4:	str	r2, [r3, #52]	; 0x34
   13db8:	ldr	r3, [pc, #164]	; 13e64 <__assert_fail@plt+0x1778>
   13dbc:	ldr	r3, [r3, #44]	; 0x2c
   13dc0:	and	r3, r3, #128	; 0x80
   13dc4:	cmp	r3, #0
   13dc8:	beq	13df0 <__assert_fail@plt+0x1704>
   13dcc:	ldr	r3, [pc, #172]	; 13e80 <__assert_fail@plt+0x1794>
   13dd0:	ldr	r4, [r3]
   13dd4:	ldr	r0, [pc, #168]	; 13e84 <__assert_fail@plt+0x1798>
   13dd8:	bl	12170 <ctime@plt>
   13ddc:	mov	r3, r0
   13de0:	mov	r2, r3
   13de4:	ldr	r1, [pc, #156]	; 13e88 <__assert_fail@plt+0x179c>
   13de8:	mov	r0, r4
   13dec:	bl	123f8 <fprintf@plt>
   13df0:	ldr	r2, [fp, #-16]
   13df4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dfc:	bl	196cc <__assert_fail@plt+0x6fe0>
   13e00:	str	r0, [fp, #-20]	; 0xffffffec
   13e04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e08:	ldr	r3, [fp, #-16]
   13e0c:	sub	r0, r2, r3
   13e10:	ldr	r3, [fp, #-16]
   13e14:	lsl	r3, r3, #2
   13e18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13e1c:	add	r3, r2, r3
   13e20:	mov	r1, r3
   13e24:	bl	136d8 <__assert_fail@plt+0xfec>
   13e28:	mov	r3, r0
   13e2c:	cmp	r3, #0
   13e30:	beq	13e40 <__assert_fail@plt+0x1754>
   13e34:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e38:	bl	166d0 <__assert_fail@plt+0x3fe4>
   13e3c:	bl	1b674 <__assert_fail@plt+0x8f88>
   13e40:	ldr	r3, [pc, #16]	; 13e58 <__assert_fail@plt+0x176c>
   13e44:	ldr	r3, [r3, #28]
   13e48:	mov	r0, r3
   13e4c:	sub	sp, fp, #8
   13e50:	pop	{r4, fp, pc}
   13e54:	andeq	r4, r6, ip, lsl #12
   13e58:	andeq	sp, r7, r0, lsr #32
   13e5c:	andeq	r4, r6, r4, lsl r6
   13e60:	andeq	r4, r6, r8, lsl r6
   13e64:	andeq	sp, r7, ip, asr #32
   13e68:			; <UNDEFINED> instruction: 0x000641bc
   13e6c:	andeq	r4, r6, r4, asr #12
   13e70:	andeq	r4, r6, ip, asr r6
   13e74:	andeq	sl, r2, r8, asr #2
   13e78:	andeq	r4, r6, r8, ror #12
   13e7c:	strdeq	fp, [r1], -ip
   13e80:	andeq	ip, r7, r8, lsr #14
   13e84:	andeq	sp, r7, r8, rrx
   13e88:	andeq	r4, r6, ip, lsl #13
   13e8c:	push	{fp}		; (str fp, [sp, #-4]!)
   13e90:	add	fp, sp, #0
   13e94:	sub	sp, sp, #12
   13e98:	str	r0, [fp, #-8]
   13e9c:	ldr	r3, [pc, #28]	; 13ec0 <__assert_fail@plt+0x17d4>
   13ea0:	ldr	r2, [r3]
   13ea4:	ldr	r3, [fp, #-8]
   13ea8:	str	r2, [r3]
   13eac:	mov	r3, #1
   13eb0:	mov	r0, r3
   13eb4:	add	sp, fp, #0
   13eb8:	pop	{fp}		; (ldr fp, [sp], #4)
   13ebc:	bx	lr
   13ec0:	andeq	ip, r7, r0, lsr #5
   13ec4:	andeq	r0, r0, r0
   13ec8:	push	{fp, lr}
   13ecc:	add	fp, sp, #4
   13ed0:	sub	sp, sp, #24
   13ed4:	sub	ip, fp, #20
   13ed8:	stm	ip, {r0, r1}
   13edc:	sub	r1, fp, #28
   13ee0:	stm	r1, {r2, r3}
   13ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ee8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13eec:	mov	r1, r2
   13ef0:	mov	r0, r3
   13ef4:	bl	12494 <difftime@plt>
   13ef8:	vmov.f64	d5, d0
   13efc:	ldr	r2, [fp, #-16]
   13f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f04:	sub	r3, r2, r3
   13f08:	vmov	s15, r3
   13f0c:	vcvt.f64.s32	d7, s15
   13f10:	vldr	d6, [pc, #32]	; 13f38 <__assert_fail@plt+0x184c>
   13f14:	vmul.f64	d7, d7, d6
   13f18:	vadd.f64	d7, d5, d7
   13f1c:	vstr	d7, [fp, #-12]
   13f20:	ldrd	r2, [fp, #-12]
   13f24:	vmov	d7, r2, r3
   13f28:	vmov.f64	d0, d7
   13f2c:	sub	sp, fp, #4
   13f30:	pop	{fp, pc}
   13f34:	nop			; (mov r0, r0)
   13f38:	stmda	r6!, {r0, r2, r4, r7, r9, sl, ip, lr, pc}
   13f3c:	cdpcc	14, 1, cr2, cr1, cr11, {0}
   13f40:	push	{fp, lr}
   13f44:	add	fp, sp, #4
   13f48:	sub	sp, sp, #24
   13f4c:	sub	ip, fp, #20
   13f50:	stm	ip, {r0, r1}
   13f54:	sub	r1, fp, #28
   13f58:	stm	r1, {r2, r3}
   13f5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f64:	cmp	r2, r3
   13f68:	bne	13f84 <__assert_fail@plt+0x1898>
   13f6c:	ldr	r2, [fp, #-16]
   13f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f74:	cmp	r2, r3
   13f78:	bne	13f84 <__assert_fail@plt+0x1898>
   13f7c:	mov	r3, #0
   13f80:	b	13fb8 <__assert_fail@plt+0x18cc>
   13f84:	sub	r3, fp, #28
   13f88:	ldm	r3, {r2, r3}
   13f8c:	sub	r1, fp, #20
   13f90:	ldm	r1, {r0, r1}
   13f94:	bl	13ec8 <__assert_fail@plt+0x17dc>
   13f98:	vstr	d0, [fp, #-12]
   13f9c:	vldr	d7, [fp, #-12]
   13fa0:	vcmpe.f64	d7, #0.0
   13fa4:	vmrs	APSR_nzcv, fpscr
   13fa8:	bpl	13fb4 <__assert_fail@plt+0x18c8>
   13fac:	mvn	r3, #0
   13fb0:	b	13fb8 <__assert_fail@plt+0x18cc>
   13fb4:	mov	r3, #1
   13fb8:	mov	r0, r3
   13fbc:	sub	sp, fp, #4
   13fc0:	pop	{fp, pc}
   13fc4:	push	{fp, lr}
   13fc8:	add	fp, sp, #4
   13fcc:	sub	sp, sp, #24
   13fd0:	sub	ip, fp, #20
   13fd4:	stm	ip, {r0, r1}
   13fd8:	str	r2, [fp, #-24]	; 0xffffffe8
   13fdc:	str	r3, [fp, #-28]	; 0xffffffe4
   13fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fe4:	ldr	r3, [r3, #44]	; 0x2c
   13fe8:	cmp	r3, #1
   13fec:	beq	14034 <__assert_fail@plt+0x1948>
   13ff0:	cmp	r3, #1
   13ff4:	bcc	14004 <__assert_fail@plt+0x1918>
   13ff8:	cmp	r3, #2
   13ffc:	beq	1405c <__assert_fail@plt+0x1970>
   14000:	b	140bc <__assert_fail@plt+0x19d0>
   14004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14008:	add	r3, r3, #48	; 0x30
   1400c:	ldm	r3, {r2, r3}
   14010:	sub	r1, fp, #20
   14014:	ldm	r1, {r0, r1}
   14018:	bl	13f40 <__assert_fail@plt+0x1854>
   1401c:	mov	r3, r0
   14020:	cmp	r3, #0
   14024:	movgt	r3, #1
   14028:	movle	r3, #0
   1402c:	uxtb	r3, r3
   14030:	b	140d0 <__assert_fail@plt+0x19e4>
   14034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14038:	add	r3, r3, #48	; 0x30
   1403c:	ldm	r3, {r2, r3}
   14040:	sub	r1, fp, #20
   14044:	ldm	r1, {r0, r1}
   14048:	bl	13f40 <__assert_fail@plt+0x1854>
   1404c:	mov	r3, r0
   14050:	lsr	r3, r3, #31
   14054:	uxtb	r3, r3
   14058:	b	140d0 <__assert_fail@plt+0x19e4>
   1405c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14060:	add	r3, r3, #48	; 0x30
   14064:	ldm	r3, {r2, r3}
   14068:	sub	r1, fp, #20
   1406c:	ldm	r1, {r0, r1}
   14070:	bl	13ec8 <__assert_fail@plt+0x17dc>
   14074:	vstr	d0, [fp, #-12]
   14078:	vldr	d7, [fp, #-12]
   1407c:	vcmpe.f64	d7, #0.0
   14080:	vmrs	APSR_nzcv, fpscr
   14084:	ble	140ac <__assert_fail@plt+0x19c0>
   14088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1408c:	vmov	s15, r3
   14090:	vcvt.f64.s32	d6, s15
   14094:	vldr	d7, [fp, #-12]
   14098:	vcmpe.f64	d6, d7
   1409c:	vmrs	APSR_nzcv, fpscr
   140a0:	blt	140ac <__assert_fail@plt+0x19c0>
   140a4:	mov	r3, #1
   140a8:	b	140b0 <__assert_fail@plt+0x19c4>
   140ac:	mov	r3, #0
   140b0:	and	r3, r3, #1
   140b4:	uxtb	r3, r3
   140b8:	b	140d0 <__assert_fail@plt+0x19e4>
   140bc:	ldr	r3, [pc, #24]	; 140dc <__assert_fail@plt+0x19f0>
   140c0:	mov	r2, #138	; 0x8a
   140c4:	ldr	r1, [pc, #20]	; 140e0 <__assert_fail@plt+0x19f4>
   140c8:	ldr	r0, [pc, #20]	; 140e4 <__assert_fail@plt+0x19f8>
   140cc:	bl	126ec <__assert_fail@plt>
   140d0:	mov	r0, r3
   140d4:	sub	sp, fp, #4
   140d8:	pop	{fp, pc}
   140dc:	andeq	r4, r6, r0, asr #19
   140e0:	ldrdeq	r4, [r6], -r8
   140e4:	andeq	r4, r6, r0, ror #13
   140e8:	push	{fp, lr}
   140ec:	add	fp, sp, #4
   140f0:	sub	sp, sp, #24
   140f4:	str	r0, [fp, #-16]
   140f8:	str	r1, [fp, #-20]	; 0xffffffec
   140fc:	str	r2, [fp, #-24]	; 0xffffffe8
   14100:	sub	r3, fp, #12
   14104:	ldr	r1, [fp, #-20]	; 0xffffffec
   14108:	mov	r0, r3
   1410c:	bl	3c778 <__assert_fail@plt+0x2a08c>
   14110:	mov	r3, #60	; 0x3c
   14114:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14118:	sub	r1, fp, #12
   1411c:	ldm	r1, {r0, r1}
   14120:	bl	13fc4 <__assert_fail@plt+0x18d8>
   14124:	mov	r3, r0
   14128:	mov	r0, r3
   1412c:	sub	sp, fp, #4
   14130:	pop	{fp, pc}
   14134:	push	{fp, lr}
   14138:	add	fp, sp, #4
   1413c:	sub	sp, sp, #16
   14140:	str	r0, [fp, #-8]
   14144:	str	r1, [fp, #-12]
   14148:	str	r2, [fp, #-16]
   1414c:	ldr	r3, [fp, #-16]
   14150:	ldr	r3, [r3, #156]	; 0x9c
   14154:	cmp	r3, #0
   14158:	beq	14180 <__assert_fail@plt+0x1a94>
   1415c:	ldr	r3, [fp, #-16]
   14160:	ldr	r3, [r3, #156]	; 0x9c
   14164:	mov	r2, r3
   14168:	ldr	r1, [fp, #-12]
   1416c:	ldr	r0, [fp, #-8]
   14170:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   14174:	mov	r3, r0
   14178:	cmp	r3, #0
   1417c:	beq	141a0 <__assert_fail@plt+0x1ab4>
   14180:	ldr	r3, [fp, #-16]
   14184:	ldr	r3, [r3, #160]	; 0xa0
   14188:	mov	r2, r3
   1418c:	ldr	r1, [fp, #-12]
   14190:	ldr	r0, [fp, #-8]
   14194:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   14198:	mov	r3, r0
   1419c:	b	141a4 <__assert_fail@plt+0x1ab8>
   141a0:	mov	r3, #0
   141a4:	mov	r0, r3
   141a8:	sub	sp, fp, #4
   141ac:	pop	{fp, pc}
   141b0:	push	{fp, lr}
   141b4:	add	fp, sp, #4
   141b8:	sub	sp, sp, #24
   141bc:	str	r0, [fp, #-16]
   141c0:	str	r1, [fp, #-20]	; 0xffffffec
   141c4:	str	r2, [fp, #-24]	; 0xffffffe8
   141c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141cc:	ldr	r3, [r3, #44]	; 0x2c
   141d0:	cmp	r3, #0
   141d4:	beq	141ec <__assert_fail@plt+0x1b00>
   141d8:	ldr	r3, [pc, #84]	; 14234 <__assert_fail@plt+0x1b48>
   141dc:	mov	r2, #166	; 0xa6
   141e0:	ldr	r1, [pc, #80]	; 14238 <__assert_fail@plt+0x1b4c>
   141e4:	ldr	r0, [pc, #80]	; 1423c <__assert_fail@plt+0x1b50>
   141e8:	bl	126ec <__assert_fail@plt>
   141ec:	sub	r3, fp, #12
   141f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   141f4:	mov	r0, r3
   141f8:	bl	3c778 <__assert_fail@plt+0x2a08c>
   141fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14200:	add	r3, r3, #48	; 0x30
   14204:	ldm	r3, {r2, r3}
   14208:	sub	r1, fp, #12
   1420c:	ldm	r1, {r0, r1}
   14210:	bl	13f40 <__assert_fail@plt+0x1854>
   14214:	mov	r3, r0
   14218:	cmp	r3, #0
   1421c:	movgt	r3, #1
   14220:	movle	r3, #0
   14224:	uxtb	r3, r3
   14228:	mov	r0, r3
   1422c:	sub	sp, fp, #4
   14230:	pop	{fp, pc}
   14234:	ldrdeq	r4, [r6], -r0
   14238:	ldrdeq	r4, [r6], -r8
   1423c:	andeq	r4, r6, r4, ror #13
   14240:	push	{fp, lr}
   14244:	add	fp, sp, #4
   14248:	sub	sp, sp, #24
   1424c:	str	r0, [fp, #-16]
   14250:	str	r1, [fp, #-20]	; 0xffffffec
   14254:	str	r2, [fp, #-24]	; 0xffffffe8
   14258:	sub	r3, fp, #12
   1425c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14260:	mov	r0, r3
   14264:	bl	3c778 <__assert_fail@plt+0x2a08c>
   14268:	ldr	r3, [pc, #28]	; 1428c <__assert_fail@plt+0x1ba0>
   1426c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14270:	sub	r1, fp, #12
   14274:	ldm	r1, {r0, r1}
   14278:	bl	13fc4 <__assert_fail@plt+0x18d8>
   1427c:	mov	r3, r0
   14280:	mov	r0, r3
   14284:	sub	sp, fp, #4
   14288:	pop	{fp, pc}
   1428c:	andeq	r5, r1, r0, lsl #3
   14290:	push	{fp}		; (str fp, [sp, #-4]!)
   14294:	add	fp, sp, #0
   14298:	sub	sp, sp, #20
   1429c:	str	r0, [fp, #-8]
   142a0:	str	r1, [fp, #-12]
   142a4:	str	r2, [fp, #-16]
   142a8:	mov	r3, #1
   142ac:	mov	r0, r3
   142b0:	add	sp, fp, #0
   142b4:	pop	{fp}		; (ldr fp, [sp], #4)
   142b8:	bx	lr
   142bc:	push	{fp, lr}
   142c0:	add	fp, sp, #4
   142c4:	sub	sp, sp, #24
   142c8:	str	r0, [fp, #-16]
   142cc:	str	r1, [fp, #-20]	; 0xffffffec
   142d0:	str	r2, [fp, #-24]	; 0xffffffe8
   142d4:	sub	r3, fp, #12
   142d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   142dc:	mov	r0, r3
   142e0:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   142e4:	mov	r3, #60	; 0x3c
   142e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   142ec:	sub	r1, fp, #12
   142f0:	ldm	r1, {r0, r1}
   142f4:	bl	13fc4 <__assert_fail@plt+0x18d8>
   142f8:	mov	r3, r0
   142fc:	mov	r0, r3
   14300:	sub	sp, fp, #4
   14304:	pop	{fp, pc}
   14308:	push	{fp, lr}
   1430c:	add	fp, sp, #4
   14310:	sub	sp, sp, #24
   14314:	str	r0, [fp, #-16]
   14318:	str	r1, [fp, #-20]	; 0xffffffec
   1431c:	str	r2, [fp, #-24]	; 0xffffffe8
   14320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14324:	ldr	r3, [r3, #44]	; 0x2c
   14328:	cmp	r3, #0
   1432c:	beq	14344 <__assert_fail@plt+0x1c58>
   14330:	ldr	r3, [pc, #84]	; 1438c <__assert_fail@plt+0x1ca0>
   14334:	mov	r2, #199	; 0xc7
   14338:	ldr	r1, [pc, #80]	; 14390 <__assert_fail@plt+0x1ca4>
   1433c:	ldr	r0, [pc, #80]	; 14394 <__assert_fail@plt+0x1ca8>
   14340:	bl	126ec <__assert_fail@plt>
   14344:	sub	r3, fp, #12
   14348:	ldr	r1, [fp, #-20]	; 0xffffffec
   1434c:	mov	r0, r3
   14350:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   14354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14358:	add	r3, r3, #48	; 0x30
   1435c:	ldm	r3, {r2, r3}
   14360:	sub	r1, fp, #12
   14364:	ldm	r1, {r0, r1}
   14368:	bl	13f40 <__assert_fail@plt+0x1854>
   1436c:	mov	r3, r0
   14370:	cmp	r3, #0
   14374:	movgt	r3, #1
   14378:	movle	r3, #0
   1437c:	uxtb	r3, r3
   14380:	mov	r0, r3
   14384:	sub	sp, fp, #4
   14388:	pop	{fp, pc}
   1438c:	ldrdeq	r4, [r6], -ip
   14390:	ldrdeq	r4, [r6], -r8
   14394:	andeq	r4, r6, r4, ror #13
   14398:	push	{fp, lr}
   1439c:	add	fp, sp, #4
   143a0:	sub	sp, sp, #16
   143a4:	str	r0, [fp, #-8]
   143a8:	str	r1, [fp, #-12]
   143ac:	str	r2, [fp, #-16]
   143b0:	ldr	r3, [fp, #-16]
   143b4:	ldr	r3, [r3, #156]	; 0x9c
   143b8:	cmp	r3, #0
   143bc:	beq	143d8 <__assert_fail@plt+0x1cec>
   143c0:	ldr	r3, [fp, #-16]
   143c4:	ldr	r3, [r3, #156]	; 0x9c
   143c8:	mov	r2, r3
   143cc:	ldr	r1, [fp, #-12]
   143d0:	ldr	r0, [fp, #-8]
   143d4:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   143d8:	ldr	r3, [fp, #-16]
   143dc:	ldr	r3, [r3, #160]	; 0xa0
   143e0:	mov	r2, r3
   143e4:	ldr	r1, [fp, #-12]
   143e8:	ldr	r0, [fp, #-8]
   143ec:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   143f0:	mov	r3, r0
   143f4:	mov	r0, r3
   143f8:	sub	sp, fp, #4
   143fc:	pop	{fp, pc}
   14400:	push	{fp, lr}
   14404:	add	fp, sp, #4
   14408:	sub	sp, sp, #24
   1440c:	str	r0, [fp, #-16]
   14410:	str	r1, [fp, #-20]	; 0xffffffec
   14414:	str	r2, [fp, #-24]	; 0xffffffe8
   14418:	sub	r3, fp, #12
   1441c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14420:	mov	r0, r3
   14424:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   14428:	ldr	r3, [pc, #28]	; 1444c <__assert_fail@plt+0x1d60>
   1442c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14430:	sub	r1, fp, #12
   14434:	ldm	r1, {r0, r1}
   14438:	bl	13fc4 <__assert_fail@plt+0x18d8>
   1443c:	mov	r3, r0
   14440:	mov	r0, r3
   14444:	sub	sp, fp, #4
   14448:	pop	{fp, pc}
   1444c:	andeq	r5, r1, r0, lsl #3
   14450:	push	{fp, lr}
   14454:	add	fp, sp, #4
   14458:	sub	sp, sp, #8
   1445c:	str	r0, [fp, #-8]
   14460:	ldr	r3, [pc, #52]	; 1449c <__assert_fail@plt+0x1db0>
   14464:	ldr	r0, [r3, #16]
   14468:	ldr	r3, [pc, #44]	; 1449c <__assert_fail@plt+0x1db0>
   1446c:	ldr	r3, [r3, #12]
   14470:	ldr	r2, [fp, #-8]
   14474:	mov	r1, r3
   14478:	bl	12068 <unlinkat@plt>
   1447c:	mov	r3, r0
   14480:	cmp	r3, #0
   14484:	moveq	r3, #1
   14488:	movne	r3, #0
   1448c:	uxtb	r3, r3
   14490:	mov	r0, r3
   14494:	sub	sp, fp, #4
   14498:	pop	{fp, pc}
   1449c:	andeq	sp, r7, r0, lsr #32
   144a0:	push	{r4, r5, fp, lr}
   144a4:	add	fp, sp, #12
   144a8:	sub	sp, sp, #24
   144ac:	str	r0, [fp, #-24]	; 0xffffffe8
   144b0:	str	r1, [fp, #-28]	; 0xffffffe4
   144b4:	str	r2, [fp, #-32]	; 0xffffffe0
   144b8:	ldr	r3, [pc, #336]	; 14610 <__assert_fail@plt+0x1f24>
   144bc:	ldr	r3, [r3, #12]
   144c0:	ldr	r1, [pc, #332]	; 14614 <__assert_fail@plt+0x1f28>
   144c4:	mov	r0, r3
   144c8:	bl	11ffc <strcmp@plt>
   144cc:	mov	r3, r0
   144d0:	cmp	r3, #0
   144d4:	beq	14600 <__assert_fail@plt+0x1f14>
   144d8:	mov	r3, #0
   144dc:	str	r3, [fp, #-16]
   144e0:	ldr	r3, [pc, #296]	; 14610 <__assert_fail@plt+0x1f24>
   144e4:	ldrb	r3, [r3, #4]
   144e8:	cmp	r3, #0
   144ec:	beq	14510 <__assert_fail@plt+0x1e24>
   144f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144f4:	ldr	r3, [r3, #16]
   144f8:	and	r3, r3, #61440	; 0xf000
   144fc:	cmp	r3, #16384	; 0x4000
   14500:	bne	14510 <__assert_fail@plt+0x1e24>
   14504:	ldr	r3, [fp, #-16]
   14508:	orr	r3, r3, #512	; 0x200
   1450c:	str	r3, [fp, #-16]
   14510:	ldr	r0, [fp, #-16]
   14514:	bl	14450 <__assert_fail@plt+0x1d64>
   14518:	mov	r3, r0
   1451c:	cmp	r3, #0
   14520:	beq	1452c <__assert_fail@plt+0x1e40>
   14524:	mov	r3, #1
   14528:	b	14604 <__assert_fail@plt+0x1f18>
   1452c:	bl	12404 <__errno_location@plt>
   14530:	mov	r3, r0
   14534:	ldr	r3, [r3]
   14538:	cmp	r3, #2
   1453c:	bne	14568 <__assert_fail@plt+0x1e7c>
   14540:	ldr	r3, [pc, #208]	; 14618 <__assert_fail@plt+0x1f2c>
   14544:	ldrb	r3, [r3, #14]
   14548:	cmp	r3, #0
   1454c:	beq	14568 <__assert_fail@plt+0x1e7c>
   14550:	bl	12404 <__errno_location@plt>
   14554:	mov	r2, r0
   14558:	mov	r3, #0
   1455c:	str	r3, [r2]
   14560:	mov	r3, #1
   14564:	b	14604 <__assert_fail@plt+0x1f18>
   14568:	bl	12404 <__errno_location@plt>
   1456c:	mov	r3, r0
   14570:	ldr	r3, [r3]
   14574:	cmp	r3, #21
   14578:	bne	145b4 <__assert_fail@plt+0x1ec8>
   1457c:	ldr	r3, [fp, #-16]
   14580:	and	r3, r3, #512	; 0x200
   14584:	cmp	r3, #0
   14588:	bne	145b4 <__assert_fail@plt+0x1ec8>
   1458c:	ldr	r3, [fp, #-16]
   14590:	orr	r3, r3, #512	; 0x200
   14594:	str	r3, [fp, #-16]
   14598:	ldr	r0, [fp, #-16]
   1459c:	bl	14450 <__assert_fail@plt+0x1d64>
   145a0:	mov	r3, r0
   145a4:	cmp	r3, #0
   145a8:	beq	145b4 <__assert_fail@plt+0x1ec8>
   145ac:	mov	r3, #1
   145b0:	b	14604 <__assert_fail@plt+0x1f18>
   145b4:	bl	12404 <__errno_location@plt>
   145b8:	mov	r3, r0
   145bc:	ldr	r4, [r3]
   145c0:	ldr	r0, [pc, #84]	; 1461c <__assert_fail@plt+0x1f30>
   145c4:	bl	12398 <gettext@plt>
   145c8:	mov	r5, r0
   145cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   145d0:	mov	r0, #0
   145d4:	bl	1c7fc <__assert_fail@plt+0xa110>
   145d8:	mov	r3, r0
   145dc:	mov	r2, r5
   145e0:	mov	r1, r4
   145e4:	mov	r0, #0
   145e8:	bl	122b4 <error@plt>
   145ec:	ldr	r3, [pc, #28]	; 14610 <__assert_fail@plt+0x1f24>
   145f0:	mov	r2, #1
   145f4:	str	r2, [r3, #28]
   145f8:	mov	r3, #0
   145fc:	b	14604 <__assert_fail@plt+0x1f18>
   14600:	mov	r3, #1
   14604:	mov	r0, r3
   14608:	sub	sp, fp, #12
   1460c:	pop	{r4, r5, fp, pc}
   14610:	andeq	sp, r7, r0, lsr #32
   14614:	andeq	r4, r6, ip, lsl #14
   14618:	andeq	sp, r7, ip, asr #32
   1461c:	andeq	r4, r6, r0, lsl r7
   14620:	push	{r4, fp, lr}
   14624:	add	fp, sp, #8
   14628:	sub	sp, sp, #36	; 0x24
   1462c:	str	r0, [fp, #-32]	; 0xffffffe0
   14630:	str	r1, [fp, #-36]	; 0xffffffdc
   14634:	str	r2, [fp, #-40]	; 0xffffffd8
   14638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1463c:	ldr	r3, [r3, #16]
   14640:	and	r3, r3, #61440	; 0xf000
   14644:	cmp	r3, #16384	; 0x4000
   14648:	bne	1486c <__assert_fail@plt+0x2180>
   1464c:	mov	r3, #1
   14650:	strb	r3, [fp, #-17]	; 0xffffffef
   14654:	bl	12404 <__errno_location@plt>
   14658:	mov	r2, r0
   1465c:	mov	r3, #0
   14660:	str	r3, [r2]
   14664:	ldr	r3, [pc, #580]	; 148b0 <__assert_fail@plt+0x21c4>
   14668:	ldr	r0, [r3, #16]
   1466c:	ldr	r3, [pc, #572]	; 148b0 <__assert_fail@plt+0x21c4>
   14670:	ldr	r3, [r3, #12]
   14674:	ldr	r2, [pc, #568]	; 148b4 <__assert_fail@plt+0x21c8>
   14678:	mov	r1, r3
   1467c:	bl	2feb0 <__assert_fail@plt+0x1d7c4>
   14680:	str	r0, [fp, #-24]	; 0xffffffe8
   14684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14688:	cmp	r3, #0
   1468c:	bge	146d0 <__assert_fail@plt+0x1fe4>
   14690:	bl	12404 <__errno_location@plt>
   14694:	mov	r3, r0
   14698:	ldr	r4, [r3]
   1469c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   146a0:	mov	r0, #0
   146a4:	bl	1c7fc <__assert_fail@plt+0xa110>
   146a8:	mov	r3, r0
   146ac:	ldr	r2, [pc, #516]	; 148b8 <__assert_fail@plt+0x21cc>
   146b0:	mov	r1, r4
   146b4:	mov	r0, #0
   146b8:	bl	122b4 <error@plt>
   146bc:	ldr	r3, [pc, #492]	; 148b0 <__assert_fail@plt+0x21c4>
   146c0:	mov	r2, #1
   146c4:	str	r2, [r3, #28]
   146c8:	mov	r3, #0
   146cc:	b	148a4 <__assert_fail@plt+0x21b8>
   146d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146d4:	bl	125a8 <fdopendir@plt>
   146d8:	str	r0, [fp, #-28]	; 0xffffffe4
   146dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146e0:	cmp	r3, #0
   146e4:	bne	14730 <__assert_fail@plt+0x2044>
   146e8:	bl	12404 <__errno_location@plt>
   146ec:	mov	r3, r0
   146f0:	ldr	r4, [r3]
   146f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   146f8:	mov	r0, #0
   146fc:	bl	1c7fc <__assert_fail@plt+0xa110>
   14700:	mov	r3, r0
   14704:	ldr	r2, [pc, #428]	; 148b8 <__assert_fail@plt+0x21cc>
   14708:	mov	r1, r4
   1470c:	mov	r0, #0
   14710:	bl	122b4 <error@plt>
   14714:	ldr	r3, [pc, #404]	; 148b0 <__assert_fail@plt+0x21c4>
   14718:	mov	r2, #1
   1471c:	str	r2, [r3, #28]
   14720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14724:	bl	126a4 <close@plt>
   14728:	mov	r3, #0
   1472c:	b	148a4 <__assert_fail@plt+0x21b8>
   14730:	bl	12404 <__errno_location@plt>
   14734:	mov	r2, r0
   14738:	mov	r3, #0
   1473c:	str	r3, [r2]
   14740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14744:	bl	1259c <readdir64@plt>
   14748:	str	r0, [fp, #-16]
   1474c:	b	147a8 <__assert_fail@plt+0x20bc>
   14750:	ldr	r3, [fp, #-16]
   14754:	ldrb	r3, [r3, #19]
   14758:	cmp	r3, #46	; 0x2e
   1475c:	bne	14790 <__assert_fail@plt+0x20a4>
   14760:	ldr	r3, [fp, #-16]
   14764:	ldrb	r3, [r3, #20]
   14768:	cmp	r3, #0
   1476c:	beq	1479c <__assert_fail@plt+0x20b0>
   14770:	ldr	r3, [fp, #-16]
   14774:	ldrb	r3, [r3, #20]
   14778:	cmp	r3, #46	; 0x2e
   1477c:	bne	14790 <__assert_fail@plt+0x20a4>
   14780:	ldr	r3, [fp, #-16]
   14784:	ldrb	r3, [r3, #21]
   14788:	cmp	r3, #0
   1478c:	beq	1479c <__assert_fail@plt+0x20b0>
   14790:	mov	r3, #0
   14794:	strb	r3, [fp, #-17]	; 0xffffffef
   14798:	b	147b4 <__assert_fail@plt+0x20c8>
   1479c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   147a0:	bl	1259c <readdir64@plt>
   147a4:	str	r0, [fp, #-16]
   147a8:	ldr	r3, [fp, #-16]
   147ac:	cmp	r3, #0
   147b0:	bne	14750 <__assert_fail@plt+0x2064>
   147b4:	bl	12404 <__errno_location@plt>
   147b8:	mov	r3, r0
   147bc:	ldr	r3, [r3]
   147c0:	cmp	r3, #0
   147c4:	beq	14810 <__assert_fail@plt+0x2124>
   147c8:	bl	12404 <__errno_location@plt>
   147cc:	mov	r3, r0
   147d0:	ldr	r4, [r3]
   147d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   147d8:	mov	r0, #0
   147dc:	bl	1c7fc <__assert_fail@plt+0xa110>
   147e0:	mov	r3, r0
   147e4:	ldr	r2, [pc, #204]	; 148b8 <__assert_fail@plt+0x21cc>
   147e8:	mov	r1, r4
   147ec:	mov	r0, #0
   147f0:	bl	122b4 <error@plt>
   147f4:	ldr	r3, [pc, #180]	; 148b0 <__assert_fail@plt+0x21c4>
   147f8:	mov	r2, #1
   147fc:	str	r2, [r3, #28]
   14800:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14804:	bl	126bc <closedir@plt>
   14808:	mov	r3, #0
   1480c:	b	148a4 <__assert_fail@plt+0x21b8>
   14810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14814:	bl	126bc <closedir@plt>
   14818:	mov	r3, r0
   1481c:	cmp	r3, #0
   14820:	beq	14864 <__assert_fail@plt+0x2178>
   14824:	bl	12404 <__errno_location@plt>
   14828:	mov	r3, r0
   1482c:	ldr	r4, [r3]
   14830:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14834:	mov	r0, #0
   14838:	bl	1c7fc <__assert_fail@plt+0xa110>
   1483c:	mov	r3, r0
   14840:	ldr	r2, [pc, #112]	; 148b8 <__assert_fail@plt+0x21cc>
   14844:	mov	r1, r4
   14848:	mov	r0, #0
   1484c:	bl	122b4 <error@plt>
   14850:	ldr	r3, [pc, #88]	; 148b0 <__assert_fail@plt+0x21c4>
   14854:	mov	r2, #1
   14858:	str	r2, [r3, #28]
   1485c:	mov	r3, #0
   14860:	b	148a4 <__assert_fail@plt+0x21b8>
   14864:	ldrb	r3, [fp, #-17]	; 0xffffffef
   14868:	b	148a4 <__assert_fail@plt+0x21b8>
   1486c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14870:	ldr	r3, [r3, #16]
   14874:	and	r3, r3, #61440	; 0xf000
   14878:	cmp	r3, #32768	; 0x8000
   1487c:	bne	148a0 <__assert_fail@plt+0x21b4>
   14880:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14884:	ldrd	r2, [r3, #48]	; 0x30
   14888:	orr	r3, r2, r3
   1488c:	cmp	r3, #0
   14890:	moveq	r3, #1
   14894:	movne	r3, #0
   14898:	uxtb	r3, r3
   1489c:	b	148a4 <__assert_fail@plt+0x21b8>
   148a0:	mov	r3, #0
   148a4:	mov	r0, r3
   148a8:	sub	sp, fp, #8
   148ac:	pop	{r4, fp, pc}
   148b0:	andeq	sp, r7, r0, lsr #32
   148b4:	andeq	r4, sl, r0, lsl #18
   148b8:	andeq	r4, r6, r4, lsr #14
   148bc:	push	{fp, lr}
   148c0:	add	fp, sp, #4
   148c4:	sub	sp, sp, #16
   148c8:	str	r0, [fp, #-8]
   148cc:	str	r1, [fp, #-12]
   148d0:	str	r2, [fp, #-16]
   148d4:	ldr	r2, [fp, #-16]
   148d8:	ldr	r1, [fp, #-12]
   148dc:	ldr	r0, [fp, #-8]
   148e0:	bl	16b64 <__assert_fail@plt+0x4478>
   148e4:	mov	r3, r0
   148e8:	mov	r0, r3
   148ec:	sub	sp, fp, #4
   148f0:	pop	{fp, pc}
   148f4:	push	{fp, lr}
   148f8:	add	fp, sp, #4
   148fc:	sub	sp, sp, #16
   14900:	str	r0, [fp, #-8]
   14904:	str	r1, [fp, #-12]
   14908:	str	r2, [fp, #-16]
   1490c:	ldr	r3, [pc, #32]	; 14934 <__assert_fail@plt+0x2248>
   14910:	ldr	r3, [r3, #12]
   14914:	ldr	r2, [fp, #-16]
   14918:	ldr	r1, [fp, #-12]
   1491c:	mov	r0, r3
   14920:	bl	16b64 <__assert_fail@plt+0x4478>
   14924:	mov	r3, r0
   14928:	mov	r0, r3
   1492c:	sub	sp, fp, #4
   14930:	pop	{fp, pc}
   14934:	andeq	sp, r7, r0, lsr #32
   14938:	push	{fp}		; (str fp, [sp, #-4]!)
   1493c:	add	fp, sp, #0
   14940:	sub	sp, sp, #20
   14944:	str	r0, [fp, #-8]
   14948:	str	r1, [fp, #-12]
   1494c:	str	r2, [fp, #-16]
   14950:	mov	r3, #0
   14954:	mov	r0, r3
   14958:	add	sp, fp, #0
   1495c:	pop	{fp}		; (ldr fp, [sp], #4)
   14960:	bx	lr
   14964:	push	{fp, lr}
   14968:	add	fp, sp, #4
   1496c:	sub	sp, sp, #40	; 0x28
   14970:	str	r0, [fp, #-16]
   14974:	str	r1, [fp, #-20]	; 0xffffffec
   14978:	str	r2, [fp, #-24]	; 0xffffffe8
   1497c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14980:	ldr	r3, [r3, #44]	; 0x2c
   14984:	str	r3, [fp, #-8]
   14988:	ldr	r3, [pc, #92]	; 149ec <__assert_fail@plt+0x2300>
   1498c:	ldr	r0, [r3, #16]
   14990:	ldr	r3, [pc, #84]	; 149ec <__assert_fail@plt+0x2300>
   14994:	ldr	ip, [r3, #12]
   14998:	ldr	r3, [pc, #80]	; 149f0 <__assert_fail@plt+0x2304>
   1499c:	ldr	r3, [r3, #20]
   149a0:	ldr	r2, [pc, #72]	; 149f0 <__assert_fail@plt+0x2304>
   149a4:	ldr	r2, [r2, #40]	; 0x28
   149a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   149ac:	ldrb	r1, [r1, #32]
   149b0:	mov	lr, r1
   149b4:	ldr	r1, [fp, #-8]
   149b8:	str	r1, [sp, #12]
   149bc:	str	lr, [sp, #8]
   149c0:	str	r2, [sp, #4]
   149c4:	str	r3, [sp]
   149c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   149cc:	mov	r2, ip
   149d0:	mov	r1, r0
   149d4:	ldr	r0, [fp, #-16]
   149d8:	bl	28098 <__assert_fail@plt+0x159ac>
   149dc:	mov	r3, #1
   149e0:	mov	r0, r3
   149e4:	sub	sp, fp, #4
   149e8:	pop	{fp, pc}
   149ec:	andeq	sp, r7, r0, lsr #32
   149f0:	andeq	sp, r7, ip, asr #32
   149f4:	push	{fp, lr}
   149f8:	add	fp, sp, #4
   149fc:	sub	sp, sp, #24
   14a00:	str	r0, [fp, #-8]
   14a04:	str	r1, [fp, #-12]
   14a08:	str	r2, [fp, #-16]
   14a0c:	ldr	r3, [fp, #-16]
   14a10:	ldr	r0, [r3, #44]	; 0x2c
   14a14:	ldr	r3, [fp, #-16]
   14a18:	ldr	r1, [r3, #56]	; 0x38
   14a1c:	ldr	r3, [fp, #-16]
   14a20:	ldrb	r2, [r3, #52]	; 0x34
   14a24:	ldr	r3, [fp, #-8]
   14a28:	str	r3, [sp]
   14a2c:	ldr	r3, [pc, #16]	; 14a44 <__assert_fail@plt+0x2358>
   14a30:	bl	28e50 <__assert_fail@plt+0x16764>
   14a34:	mov	r3, #1
   14a38:	mov	r0, r3
   14a3c:	sub	sp, fp, #4
   14a40:	pop	{fp, pc}
   14a44:	andeq	r4, r6, r8, lsr #14
   14a48:	push	{fp, lr}
   14a4c:	add	fp, sp, #4
   14a50:	sub	sp, sp, #24
   14a54:	str	r0, [fp, #-16]
   14a58:	str	r1, [fp, #-20]	; 0xffffffec
   14a5c:	str	r2, [fp, #-24]	; 0xffffffe8
   14a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a64:	ldr	r3, [r3, #44]	; 0x2c
   14a68:	str	r3, [fp, #-8]
   14a6c:	ldr	r1, [fp, #-8]
   14a70:	ldr	r0, [fp, #-16]
   14a74:	bl	12680 <fputs@plt>
   14a78:	ldr	r1, [fp, #-8]
   14a7c:	mov	r0, #0
   14a80:	bl	125c0 <putc@plt>
   14a84:	mov	r3, #1
   14a88:	mov	r0, r3
   14a8c:	sub	sp, fp, #4
   14a90:	pop	{fp, pc}
   14a94:	push	{fp, lr}
   14a98:	add	fp, sp, #4
   14a9c:	sub	sp, sp, #16
   14aa0:	str	r0, [fp, #-8]
   14aa4:	str	r1, [fp, #-12]
   14aa8:	str	r2, [fp, #-16]
   14aac:	ldr	r1, [fp, #-8]
   14ab0:	ldr	r0, [fp, #-12]
   14ab4:	bl	1fc48 <__assert_fail@plt+0xd55c>
   14ab8:	mov	r2, r0
   14abc:	ldr	r3, [fp, #-16]
   14ac0:	ldr	r3, [r3, #40]	; 0x28
   14ac4:	mov	r1, r3
   14ac8:	mov	r0, r2
   14acc:	bl	11ffc <strcmp@plt>
   14ad0:	mov	r3, r0
   14ad4:	cmp	r3, #0
   14ad8:	bne	14ae4 <__assert_fail@plt+0x23f8>
   14adc:	mov	r3, #1
   14ae0:	b	14ae8 <__assert_fail@plt+0x23fc>
   14ae4:	mov	r3, #0
   14ae8:	mov	r0, r3
   14aec:	sub	sp, fp, #4
   14af0:	pop	{fp, pc}
   14af4:	push	{fp}		; (str fp, [sp, #-4]!)
   14af8:	add	fp, sp, #0
   14afc:	sub	sp, sp, #20
   14b00:	str	r0, [fp, #-8]
   14b04:	str	r1, [fp, #-12]
   14b08:	str	r2, [fp, #-16]
   14b0c:	ldr	r3, [fp, #-16]
   14b10:	ldr	r3, [r3, #40]	; 0x28
   14b14:	cmp	r3, #1
   14b18:	beq	14b5c <__assert_fail@plt+0x2470>
   14b1c:	cmp	r3, #1
   14b20:	bcc	14b30 <__assert_fail@plt+0x2444>
   14b24:	cmp	r3, #2
   14b28:	beq	14b88 <__assert_fail@plt+0x249c>
   14b2c:	b	14bc8 <__assert_fail@plt+0x24dc>
   14b30:	ldr	r3, [fp, #-12]
   14b34:	ldr	r3, [r3, #28]
   14b38:	mov	r0, r3
   14b3c:	mov	r1, #0
   14b40:	ldr	r3, [fp, #-16]
   14b44:	ldrd	r2, [r3, #48]	; 0x30
   14b48:	cmp	r1, r3
   14b4c:	cmpeq	r0, r2
   14b50:	bls	14bb4 <__assert_fail@plt+0x24c8>
   14b54:	mov	r3, #1
   14b58:	b	14bcc <__assert_fail@plt+0x24e0>
   14b5c:	ldr	r3, [fp, #-12]
   14b60:	ldr	r3, [r3, #28]
   14b64:	mov	r0, r3
   14b68:	mov	r1, #0
   14b6c:	ldr	r3, [fp, #-16]
   14b70:	ldrd	r2, [r3, #48]	; 0x30
   14b74:	cmp	r1, r3
   14b78:	cmpeq	r0, r2
   14b7c:	bcs	14bbc <__assert_fail@plt+0x24d0>
   14b80:	mov	r3, #1
   14b84:	b	14bcc <__assert_fail@plt+0x24e0>
   14b88:	ldr	r3, [fp, #-12]
   14b8c:	ldr	r3, [r3, #28]
   14b90:	mov	r0, r3
   14b94:	mov	r1, #0
   14b98:	ldr	r3, [fp, #-16]
   14b9c:	ldrd	r2, [r3, #48]	; 0x30
   14ba0:	cmp	r1, r3
   14ba4:	cmpeq	r0, r2
   14ba8:	bne	14bc4 <__assert_fail@plt+0x24d8>
   14bac:	mov	r3, #1
   14bb0:	b	14bcc <__assert_fail@plt+0x24e0>
   14bb4:	nop			; (mov r0, r0)
   14bb8:	b	14bc8 <__assert_fail@plt+0x24dc>
   14bbc:	nop			; (mov r0, r0)
   14bc0:	b	14bc8 <__assert_fail@plt+0x24dc>
   14bc4:	nop			; (mov r0, r0)
   14bc8:	mov	r3, #0
   14bcc:	mov	r0, r3
   14bd0:	add	sp, fp, #0
   14bd4:	pop	{fp}		; (ldr fp, [sp], #4)
   14bd8:	bx	lr
   14bdc:	push	{fp}		; (str fp, [sp, #-4]!)
   14be0:	add	fp, sp, #0
   14be4:	sub	sp, sp, #20
   14be8:	str	r0, [fp, #-8]
   14bec:	str	r1, [fp, #-12]
   14bf0:	str	r2, [fp, #-16]
   14bf4:	ldr	r3, [fp, #-16]
   14bf8:	ldr	r2, [r3, #40]	; 0x28
   14bfc:	ldr	r3, [fp, #-12]
   14c00:	ldr	r3, [r3, #28]
   14c04:	cmp	r2, r3
   14c08:	bne	14c14 <__assert_fail@plt+0x2528>
   14c0c:	mov	r3, #1
   14c10:	b	14c18 <__assert_fail@plt+0x252c>
   14c14:	mov	r3, #0
   14c18:	mov	r0, r3
   14c1c:	add	sp, fp, #0
   14c20:	pop	{fp}		; (ldr fp, [sp], #4)
   14c24:	bx	lr
   14c28:	push	{fp, lr}
   14c2c:	add	fp, sp, #4
   14c30:	sub	sp, sp, #16
   14c34:	str	r0, [fp, #-8]
   14c38:	str	r1, [fp, #-12]
   14c3c:	str	r2, [fp, #-16]
   14c40:	mov	r3, #1
   14c44:	ldr	r2, [fp, #-16]
   14c48:	ldr	r1, [fp, #-12]
   14c4c:	ldr	r0, [fp, #-8]
   14c50:	bl	14f58 <__assert_fail@plt+0x286c>
   14c54:	mov	r3, r0
   14c58:	mov	r0, r3
   14c5c:	sub	sp, fp, #4
   14c60:	pop	{fp, pc}
   14c64:	push	{fp, lr}
   14c68:	add	fp, sp, #4
   14c6c:	sub	sp, sp, #24
   14c70:	str	r0, [fp, #-16]
   14c74:	str	r1, [fp, #-20]	; 0xffffffec
   14c78:	str	r2, [fp, #-24]	; 0xffffffe8
   14c7c:	ldr	r0, [fp, #-16]
   14c80:	bl	2a368 <__assert_fail@plt+0x17c7c>
   14c84:	mov	r3, r0
   14c88:	str	r3, [fp, #-8]
   14c8c:	ldr	r0, [fp, #-8]
   14c90:	bl	2a618 <__assert_fail@plt+0x17f2c>
   14c94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c98:	ldr	r1, [fp, #-8]
   14c9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ca0:	bl	122d8 <fnmatch@plt>
   14ca4:	mov	r3, r0
   14ca8:	cmp	r3, #0
   14cac:	moveq	r3, #1
   14cb0:	movne	r3, #0
   14cb4:	strb	r3, [fp, #-9]
   14cb8:	ldr	r0, [fp, #-8]
   14cbc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   14cc0:	ldrb	r3, [fp, #-9]
   14cc4:	mov	r0, r3
   14cc8:	sub	sp, fp, #4
   14ccc:	pop	{fp, pc}
   14cd0:	push	{fp, lr}
   14cd4:	add	fp, sp, #4
   14cd8:	sub	sp, sp, #16
   14cdc:	str	r0, [fp, #-8]
   14ce0:	str	r1, [fp, #-12]
   14ce4:	str	r2, [fp, #-16]
   14ce8:	ldr	r3, [fp, #-16]
   14cec:	ldr	r3, [r3, #40]	; 0x28
   14cf0:	mov	r2, #16
   14cf4:	mov	r1, r3
   14cf8:	ldr	r0, [fp, #-8]
   14cfc:	bl	14c64 <__assert_fail@plt+0x2578>
   14d00:	mov	r3, r0
   14d04:	mov	r0, r3
   14d08:	sub	sp, fp, #4
   14d0c:	pop	{fp, pc}
   14d10:	push	{fp}		; (str fp, [sp, #-4]!)
   14d14:	add	fp, sp, #0
   14d18:	sub	sp, sp, #20
   14d1c:	str	r0, [fp, #-8]
   14d20:	str	r1, [fp, #-12]
   14d24:	str	r2, [fp, #-16]
   14d28:	ldr	r3, [fp, #-16]
   14d2c:	ldr	r3, [r3, #40]	; 0x28
   14d30:	cmp	r3, #1
   14d34:	beq	14d70 <__assert_fail@plt+0x2684>
   14d38:	cmp	r3, #1
   14d3c:	bcc	14d4c <__assert_fail@plt+0x2660>
   14d40:	cmp	r3, #2
   14d44:	beq	14d94 <__assert_fail@plt+0x26a8>
   14d48:	b	14dcc <__assert_fail@plt+0x26e0>
   14d4c:	ldr	r3, [fp, #-12]
   14d50:	ldrd	r0, [r3, #96]	; 0x60
   14d54:	ldr	r3, [fp, #-16]
   14d58:	ldrd	r2, [r3, #48]	; 0x30
   14d5c:	cmp	r1, r3
   14d60:	cmpeq	r0, r2
   14d64:	bls	14db8 <__assert_fail@plt+0x26cc>
   14d68:	mov	r3, #1
   14d6c:	b	14dd0 <__assert_fail@plt+0x26e4>
   14d70:	ldr	r3, [fp, #-12]
   14d74:	ldrd	r0, [r3, #96]	; 0x60
   14d78:	ldr	r3, [fp, #-16]
   14d7c:	ldrd	r2, [r3, #48]	; 0x30
   14d80:	cmp	r1, r3
   14d84:	cmpeq	r0, r2
   14d88:	bcs	14dc0 <__assert_fail@plt+0x26d4>
   14d8c:	mov	r3, #1
   14d90:	b	14dd0 <__assert_fail@plt+0x26e4>
   14d94:	ldr	r3, [fp, #-12]
   14d98:	ldrd	r0, [r3, #96]	; 0x60
   14d9c:	ldr	r3, [fp, #-16]
   14da0:	ldrd	r2, [r3, #48]	; 0x30
   14da4:	cmp	r1, r3
   14da8:	cmpeq	r0, r2
   14dac:	bne	14dc8 <__assert_fail@plt+0x26dc>
   14db0:	mov	r3, #1
   14db4:	b	14dd0 <__assert_fail@plt+0x26e4>
   14db8:	nop			; (mov r0, r0)
   14dbc:	b	14dcc <__assert_fail@plt+0x26e0>
   14dc0:	nop			; (mov r0, r0)
   14dc4:	b	14dcc <__assert_fail@plt+0x26e0>
   14dc8:	nop			; (mov r0, r0)
   14dcc:	mov	r3, #0
   14dd0:	mov	r0, r3
   14dd4:	add	sp, fp, #0
   14dd8:	pop	{fp}		; (ldr fp, [sp], #4)
   14ddc:	bx	lr
   14de0:	push	{fp, lr}
   14de4:	add	fp, sp, #4
   14de8:	sub	sp, sp, #16
   14dec:	str	r0, [fp, #-8]
   14df0:	str	r1, [fp, #-12]
   14df4:	str	r2, [fp, #-16]
   14df8:	ldr	r3, [fp, #-16]
   14dfc:	ldr	r3, [r3, #40]	; 0x28
   14e00:	mov	r2, #16
   14e04:	ldr	r1, [fp, #-8]
   14e08:	mov	r0, r3
   14e0c:	bl	122d8 <fnmatch@plt>
   14e10:	mov	r3, r0
   14e14:	cmp	r3, #0
   14e18:	bne	14e24 <__assert_fail@plt+0x2738>
   14e1c:	mov	r3, #1
   14e20:	b	14e28 <__assert_fail@plt+0x273c>
   14e24:	mov	r3, #0
   14e28:	mov	r0, r3
   14e2c:	sub	sp, fp, #4
   14e30:	pop	{fp, pc}
   14e34:	push	{fp}		; (str fp, [sp, #-4]!)
   14e38:	add	fp, sp, #0
   14e3c:	sub	sp, sp, #20
   14e40:	str	r0, [fp, #-8]
   14e44:	str	r1, [fp, #-12]
   14e48:	str	r2, [fp, #-16]
   14e4c:	ldr	r3, [fp, #-16]
   14e50:	ldr	r3, [r3, #40]	; 0x28
   14e54:	cmp	r3, #1
   14e58:	beq	14e9c <__assert_fail@plt+0x27b0>
   14e5c:	cmp	r3, #1
   14e60:	bcc	14e70 <__assert_fail@plt+0x2784>
   14e64:	cmp	r3, #2
   14e68:	beq	14ec8 <__assert_fail@plt+0x27dc>
   14e6c:	b	14f08 <__assert_fail@plt+0x281c>
   14e70:	ldr	r3, [fp, #-12]
   14e74:	ldr	r3, [r3, #20]
   14e78:	mov	r0, r3
   14e7c:	mov	r1, #0
   14e80:	ldr	r3, [fp, #-16]
   14e84:	ldrd	r2, [r3, #48]	; 0x30
   14e88:	cmp	r1, r3
   14e8c:	cmpeq	r0, r2
   14e90:	bls	14ef4 <__assert_fail@plt+0x2808>
   14e94:	mov	r3, #1
   14e98:	b	14f0c <__assert_fail@plt+0x2820>
   14e9c:	ldr	r3, [fp, #-12]
   14ea0:	ldr	r3, [r3, #20]
   14ea4:	mov	r0, r3
   14ea8:	mov	r1, #0
   14eac:	ldr	r3, [fp, #-16]
   14eb0:	ldrd	r2, [r3, #48]	; 0x30
   14eb4:	cmp	r1, r3
   14eb8:	cmpeq	r0, r2
   14ebc:	bcs	14efc <__assert_fail@plt+0x2810>
   14ec0:	mov	r3, #1
   14ec4:	b	14f0c <__assert_fail@plt+0x2820>
   14ec8:	ldr	r3, [fp, #-12]
   14ecc:	ldr	r3, [r3, #20]
   14ed0:	mov	r0, r3
   14ed4:	mov	r1, #0
   14ed8:	ldr	r3, [fp, #-16]
   14edc:	ldrd	r2, [r3, #48]	; 0x30
   14ee0:	cmp	r1, r3
   14ee4:	cmpeq	r0, r2
   14ee8:	bne	14f04 <__assert_fail@plt+0x2818>
   14eec:	mov	r3, #1
   14ef0:	b	14f0c <__assert_fail@plt+0x2820>
   14ef4:	nop			; (mov r0, r0)
   14ef8:	b	14f08 <__assert_fail@plt+0x281c>
   14efc:	nop			; (mov r0, r0)
   14f00:	b	14f08 <__assert_fail@plt+0x281c>
   14f04:	nop			; (mov r0, r0)
   14f08:	mov	r3, #0
   14f0c:	mov	r0, r3
   14f10:	add	sp, fp, #0
   14f14:	pop	{fp}		; (ldr fp, [sp], #4)
   14f18:	bx	lr
   14f1c:	push	{fp, lr}
   14f20:	add	fp, sp, #4
   14f24:	sub	sp, sp, #16
   14f28:	str	r0, [fp, #-8]
   14f2c:	str	r1, [fp, #-12]
   14f30:	str	r2, [fp, #-16]
   14f34:	mov	r3, #0
   14f38:	ldr	r2, [fp, #-16]
   14f3c:	ldr	r1, [fp, #-12]
   14f40:	ldr	r0, [fp, #-8]
   14f44:	bl	14f58 <__assert_fail@plt+0x286c>
   14f48:	mov	r3, r0
   14f4c:	mov	r0, r3
   14f50:	sub	sp, fp, #4
   14f54:	pop	{fp, pc}
   14f58:	push	{fp, lr}
   14f5c:	add	fp, sp, #4
   14f60:	sub	sp, sp, #24
   14f64:	str	r0, [fp, #-16]
   14f68:	str	r1, [fp, #-20]	; 0xffffffec
   14f6c:	str	r2, [fp, #-24]	; 0xffffffe8
   14f70:	strb	r3, [fp, #-25]	; 0xffffffe7
   14f74:	mov	r3, #0
   14f78:	strb	r3, [fp, #-5]
   14f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f80:	ldr	r3, [r3, #16]
   14f84:	and	r3, r3, #61440	; 0xf000
   14f88:	cmp	r3, #40960	; 0xa000
   14f8c:	bne	1502c <__assert_fail@plt+0x2940>
   14f90:	ldr	r3, [pc, #164]	; 1503c <__assert_fail@plt+0x2950>
   14f94:	ldr	r2, [r3, #16]
   14f98:	ldr	r3, [pc, #156]	; 1503c <__assert_fail@plt+0x2950>
   14f9c:	ldr	r3, [r3, #12]
   14fa0:	mov	r1, r3
   14fa4:	mov	r0, r2
   14fa8:	bl	29a18 <__assert_fail@plt+0x1732c>
   14fac:	str	r0, [fp, #-12]
   14fb0:	ldr	r3, [fp, #-12]
   14fb4:	cmp	r3, #0
   14fb8:	beq	15000 <__assert_fail@plt+0x2914>
   14fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fc0:	ldr	r0, [r3, #40]	; 0x28
   14fc4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   14fc8:	cmp	r3, #0
   14fcc:	beq	14fd8 <__assert_fail@plt+0x28ec>
   14fd0:	mov	r3, #16
   14fd4:	b	14fdc <__assert_fail@plt+0x28f0>
   14fd8:	mov	r3, #0
   14fdc:	mov	r2, r3
   14fe0:	ldr	r1, [fp, #-12]
   14fe4:	bl	122d8 <fnmatch@plt>
   14fe8:	mov	r3, r0
   14fec:	cmp	r3, #0
   14ff0:	bne	15024 <__assert_fail@plt+0x2938>
   14ff4:	mov	r3, #1
   14ff8:	strb	r3, [fp, #-5]
   14ffc:	b	15024 <__assert_fail@plt+0x2938>
   15000:	bl	12404 <__errno_location@plt>
   15004:	mov	r3, r0
   15008:	ldr	r3, [r3]
   1500c:	ldr	r1, [fp, #-16]
   15010:	mov	r0, r3
   15014:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   15018:	ldr	r3, [pc, #28]	; 1503c <__assert_fail@plt+0x2950>
   1501c:	mov	r2, #1
   15020:	str	r2, [r3, #28]
   15024:	ldr	r0, [fp, #-12]
   15028:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1502c:	ldrb	r3, [fp, #-5]
   15030:	mov	r0, r3
   15034:	sub	sp, fp, #4
   15038:	pop	{fp, pc}
   1503c:	andeq	sp, r7, r0, lsr #32
   15040:	push	{fp, lr}
   15044:	add	fp, sp, #4
   15048:	sub	sp, sp, #16
   1504c:	str	r0, [fp, #-8]
   15050:	str	r1, [fp, #-12]
   15054:	str	r2, [fp, #-16]
   15058:	ldr	r2, [fp, #-16]
   1505c:	ldr	r1, [fp, #-12]
   15060:	ldr	r0, [fp, #-8]
   15064:	bl	14964 <__assert_fail@plt+0x2278>
   15068:	mov	r3, r0
   1506c:	mov	r0, r3
   15070:	sub	sp, fp, #4
   15074:	pop	{fp, pc}
   15078:	push	{fp, lr}
   1507c:	add	fp, sp, #4
   15080:	sub	sp, sp, #24
   15084:	str	r0, [fp, #-16]
   15088:	str	r1, [fp, #-20]	; 0xffffffec
   1508c:	str	r2, [fp, #-24]	; 0xffffffe8
   15090:	sub	r3, fp, #12
   15094:	ldr	r1, [fp, #-20]	; 0xffffffec
   15098:	mov	r0, r3
   1509c:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   150a0:	mov	r3, #60	; 0x3c
   150a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150a8:	sub	r1, fp, #12
   150ac:	ldm	r1, {r0, r1}
   150b0:	bl	13fc4 <__assert_fail@plt+0x18d8>
   150b4:	mov	r3, r0
   150b8:	mov	r0, r3
   150bc:	sub	sp, fp, #4
   150c0:	pop	{fp, pc}
   150c4:	push	{fp, lr}
   150c8:	add	fp, sp, #4
   150cc:	sub	sp, sp, #24
   150d0:	str	r0, [fp, #-16]
   150d4:	str	r1, [fp, #-20]	; 0xffffffec
   150d8:	str	r2, [fp, #-24]	; 0xffffffe8
   150dc:	sub	r3, fp, #12
   150e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   150e4:	mov	r0, r3
   150e8:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   150ec:	ldr	r3, [pc, #28]	; 15110 <__assert_fail@plt+0x2a24>
   150f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150f4:	sub	r1, fp, #12
   150f8:	ldm	r1, {r0, r1}
   150fc:	bl	13fc4 <__assert_fail@plt+0x18d8>
   15100:	mov	r3, r0
   15104:	mov	r0, r3
   15108:	sub	sp, fp, #4
   1510c:	pop	{fp, pc}
   15110:	andeq	r5, r1, r0, lsl #3
   15114:	push	{fp, lr}
   15118:	add	fp, sp, #4
   1511c:	sub	sp, sp, #16
   15120:	str	r0, [fp, #-8]
   15124:	str	r1, [fp, #-12]
   15128:	str	r2, [fp, #-16]
   1512c:	ldr	r3, [fp, #-16]
   15130:	ldr	r3, [r3, #40]	; 0x28
   15134:	mov	r2, #0
   15138:	mov	r1, r3
   1513c:	ldr	r0, [fp, #-8]
   15140:	bl	14c64 <__assert_fail@plt+0x2578>
   15144:	mov	r3, r0
   15148:	mov	r0, r3
   1514c:	sub	sp, fp, #4
   15150:	pop	{fp, pc}
   15154:	push	{fp, lr}
   15158:	add	fp, sp, #4
   1515c:	sub	sp, sp, #16
   15160:	str	r0, [fp, #-8]
   15164:	str	r1, [fp, #-12]
   15168:	str	r2, [fp, #-16]
   1516c:	ldr	r3, [fp, #-16]
   15170:	ldr	r3, [r3, #160]	; 0xa0
   15174:	mov	r2, r3
   15178:	ldr	r1, [fp, #-12]
   1517c:	ldr	r0, [fp, #-8]
   15180:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   15184:	mov	r3, r0
   15188:	cmp	r3, #0
   1518c:	movne	r3, #1
   15190:	moveq	r3, #0
   15194:	uxtb	r3, r3
   15198:	eor	r3, r3, #1
   1519c:	uxtb	r3, r3
   151a0:	and	r3, r3, #1
   151a4:	uxtb	r3, r3
   151a8:	mov	r0, r3
   151ac:	sub	sp, fp, #4
   151b0:	pop	{fp, pc}
   151b4:	push	{fp, lr}
   151b8:	add	fp, sp, #4
   151bc:	sub	sp, sp, #24
   151c0:	str	r0, [fp, #-16]
   151c4:	str	r1, [fp, #-20]	; 0xffffffec
   151c8:	str	r2, [fp, #-24]	; 0xffffffe8
   151cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151d0:	ldr	r3, [r3, #44]	; 0x2c
   151d4:	cmp	r3, #0
   151d8:	beq	151f0 <__assert_fail@plt+0x2b04>
   151dc:	ldr	r3, [pc, #84]	; 15238 <__assert_fail@plt+0x2b4c>
   151e0:	ldr	r2, [pc, #84]	; 1523c <__assert_fail@plt+0x2b50>
   151e4:	ldr	r1, [pc, #84]	; 15240 <__assert_fail@plt+0x2b54>
   151e8:	ldr	r0, [pc, #84]	; 15244 <__assert_fail@plt+0x2b58>
   151ec:	bl	126ec <__assert_fail@plt>
   151f0:	sub	r3, fp, #12
   151f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   151f8:	mov	r0, r3
   151fc:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   15200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15204:	add	r3, r3, #48	; 0x30
   15208:	ldm	r3, {r2, r3}
   1520c:	sub	r1, fp, #12
   15210:	ldm	r1, {r0, r1}
   15214:	bl	13f40 <__assert_fail@plt+0x1854>
   15218:	mov	r3, r0
   1521c:	cmp	r3, #0
   15220:	movgt	r3, #1
   15224:	movle	r3, #0
   15228:	uxtb	r3, r3
   1522c:	mov	r0, r3
   15230:	sub	sp, fp, #4
   15234:	pop	{fp, pc}
   15238:	andeq	r4, r6, r8, ror #19
   1523c:	andeq	r0, r0, sp, ror #4
   15240:	ldrdeq	r4, [r6], -r8
   15244:	andeq	r4, r6, r4, ror #13
   15248:	push	{r4, fp, lr}
   1524c:	add	fp, sp, #8
   15250:	sub	sp, sp, #44	; 0x2c
   15254:	str	r0, [fp, #-32]	; 0xffffffe0
   15258:	str	r1, [fp, #-36]	; 0xffffffdc
   1525c:	str	r2, [fp, #-40]	; 0xffffffd8
   15260:	mov	r3, #0
   15264:	strb	r3, [fp, #-13]
   15268:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1526c:	ldr	r3, [r3, #44]	; 0x2c
   15270:	cmp	r3, #0
   15274:	beq	1528c <__assert_fail@plt+0x2ba0>
   15278:	ldr	r3, [pc, #408]	; 15418 <__assert_fail@plt+0x2d2c>
   1527c:	ldr	r2, [pc, #408]	; 1541c <__assert_fail@plt+0x2d30>
   15280:	ldr	r1, [pc, #408]	; 15420 <__assert_fail@plt+0x2d34>
   15284:	ldr	r0, [pc, #408]	; 15424 <__assert_fail@plt+0x2d38>
   15288:	bl	126ec <__assert_fail@plt>
   1528c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15290:	ldr	r3, [r3, #40]	; 0x28
   15294:	cmp	r3, #4
   15298:	ldrls	pc, [pc, r3, lsl #2]
   1529c:	b	153c0 <__assert_fail@plt+0x2cd4>
   152a0:	andeq	r5, r1, r0, ror #5
   152a4:	strdeq	r5, [r1], -ip
   152a8:	andeq	r5, r1, r4, ror #6
   152ac:	muleq	r1, r0, r3
   152b0:			; <UNDEFINED> instruction: 0x000152b4
   152b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   152b8:	ldr	r3, [r3, #40]	; 0x28
   152bc:	cmp	r3, #4
   152c0:	bne	152d8 <__assert_fail@plt+0x2bec>
   152c4:	ldr	r3, [pc, #332]	; 15418 <__assert_fail@plt+0x2d2c>
   152c8:	mov	r2, #636	; 0x27c
   152cc:	ldr	r1, [pc, #332]	; 15420 <__assert_fail@plt+0x2d34>
   152d0:	ldr	r0, [pc, #336]	; 15428 <__assert_fail@plt+0x2d3c>
   152d4:	bl	126ec <__assert_fail@plt>
   152d8:	mov	r3, #0
   152dc:	b	1540c <__assert_fail@plt+0x2d20>
   152e0:	sub	r3, fp, #24
   152e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   152e8:	mov	r0, r3
   152ec:	bl	3c778 <__assert_fail@plt+0x2a08c>
   152f0:	mov	r3, #1
   152f4:	strb	r3, [fp, #-13]
   152f8:	b	153c0 <__assert_fail@plt+0x2cd4>
   152fc:	sub	r3, fp, #52	; 0x34
   15300:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15304:	mov	r0, r3
   15308:	bl	3c820 <__assert_fail@plt+0x2a134>
   1530c:	sub	r3, fp, #24
   15310:	sub	r2, fp, #52	; 0x34
   15314:	ldm	r2, {r0, r1}
   15318:	stm	r3, {r0, r1}
   1531c:	mov	r3, #1
   15320:	strb	r3, [fp, #-13]
   15324:	ldr	r3, [fp, #-20]	; 0xffffffec
   15328:	cmp	r3, #0
   1532c:	bge	153bc <__assert_fail@plt+0x2cd0>
   15330:	ldr	r0, [pc, #244]	; 1542c <__assert_fail@plt+0x2d40>
   15334:	bl	12398 <gettext@plt>
   15338:	mov	r4, r0
   1533c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15340:	mov	r0, #0
   15344:	bl	1c7fc <__assert_fail@plt+0xa110>
   15348:	mov	r3, r0
   1534c:	mov	r2, r4
   15350:	mov	r1, #0
   15354:	mov	r0, #0
   15358:	bl	122b4 <error@plt>
   1535c:	mov	r3, #0
   15360:	b	1540c <__assert_fail@plt+0x2d20>
   15364:	sub	r3, fp, #52	; 0x34
   15368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1536c:	mov	r0, r3
   15370:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   15374:	sub	r3, fp, #24
   15378:	sub	r2, fp, #52	; 0x34
   1537c:	ldm	r2, {r0, r1}
   15380:	stm	r3, {r0, r1}
   15384:	mov	r3, #1
   15388:	strb	r3, [fp, #-13]
   1538c:	b	153c0 <__assert_fail@plt+0x2cd4>
   15390:	sub	r3, fp, #52	; 0x34
   15394:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15398:	mov	r0, r3
   1539c:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   153a0:	sub	r3, fp, #24
   153a4:	sub	r2, fp, #52	; 0x34
   153a8:	ldm	r2, {r0, r1}
   153ac:	stm	r3, {r0, r1}
   153b0:	mov	r3, #1
   153b4:	strb	r3, [fp, #-13]
   153b8:	b	153c0 <__assert_fail@plt+0x2cd4>
   153bc:	nop			; (mov r0, r0)
   153c0:	ldrb	r3, [fp, #-13]
   153c4:	cmp	r3, #0
   153c8:	bne	153e0 <__assert_fail@plt+0x2cf4>
   153cc:	ldr	r3, [pc, #68]	; 15418 <__assert_fail@plt+0x2d2c>
   153d0:	ldr	r2, [pc, #88]	; 15430 <__assert_fail@plt+0x2d44>
   153d4:	ldr	r1, [pc, #68]	; 15420 <__assert_fail@plt+0x2d34>
   153d8:	ldr	r0, [pc, #84]	; 15434 <__assert_fail@plt+0x2d48>
   153dc:	bl	126ec <__assert_fail@plt>
   153e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   153e4:	add	r3, r3, #48	; 0x30
   153e8:	ldm	r3, {r2, r3}
   153ec:	sub	r1, fp, #24
   153f0:	ldm	r1, {r0, r1}
   153f4:	bl	13f40 <__assert_fail@plt+0x1854>
   153f8:	mov	r3, r0
   153fc:	cmp	r3, #0
   15400:	movgt	r3, #1
   15404:	movle	r3, #0
   15408:	uxtb	r3, r3
   1540c:	mov	r0, r3
   15410:	sub	sp, fp, #8
   15414:	pop	{r4, fp, pc}
   15418:	strdeq	r4, [r6], -r4	; <UNPREDICTABLE>
   1541c:	andeq	r0, r0, r7, ror r2
   15420:	ldrdeq	r4, [r6], -r8
   15424:	andeq	r4, r6, r4, ror #13
   15428:	andeq	r4, r6, ip, lsr #14
   1542c:	andeq	r4, r6, r8, asr r7
   15430:	muleq	r0, fp, r2
   15434:	andeq	r4, r6, r8, lsl #15
   15438:	push	{fp, lr}
   1543c:	add	fp, sp, #4
   15440:	sub	sp, sp, #16
   15444:	str	r0, [fp, #-8]
   15448:	str	r1, [fp, #-12]
   1544c:	str	r2, [fp, #-16]
   15450:	ldr	r3, [fp, #-12]
   15454:	ldr	r3, [r3, #28]
   15458:	mov	r0, r3
   1545c:	bl	126c8 <getgrgid@plt>
   15460:	mov	r3, r0
   15464:	cmp	r3, #0
   15468:	moveq	r3, #1
   1546c:	movne	r3, #0
   15470:	uxtb	r3, r3
   15474:	mov	r0, r3
   15478:	sub	sp, fp, #4
   1547c:	pop	{fp, pc}
   15480:	push	{fp, lr}
   15484:	add	fp, sp, #4
   15488:	sub	sp, sp, #16
   1548c:	str	r0, [fp, #-8]
   15490:	str	r1, [fp, #-12]
   15494:	str	r2, [fp, #-16]
   15498:	ldr	r3, [fp, #-12]
   1549c:	ldr	r3, [r3, #24]
   154a0:	mov	r0, r3
   154a4:	bl	12014 <getpwuid@plt>
   154a8:	mov	r3, r0
   154ac:	cmp	r3, #0
   154b0:	moveq	r3, #1
   154b4:	movne	r3, #0
   154b8:	uxtb	r3, r3
   154bc:	mov	r0, r3
   154c0:	sub	sp, fp, #4
   154c4:	pop	{fp, pc}
   154c8:	push	{r4, fp, lr}
   154cc:	add	fp, sp, #8
   154d0:	sub	sp, sp, #12
   154d4:	str	r0, [fp, #-16]
   154d8:	str	r1, [fp, #-20]	; 0xffffffec
   154dc:	ldr	r3, [pc, #132]	; 15568 <__assert_fail@plt+0x2e7c>
   154e0:	ldr	r3, [r3]
   154e4:	mov	r0, r3
   154e8:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   154ec:	ldr	r3, [pc, #120]	; 1556c <__assert_fail@plt+0x2e80>
   154f0:	ldr	r4, [r3]
   154f4:	ldr	r0, [pc, #116]	; 15570 <__assert_fail@plt+0x2e84>
   154f8:	bl	12398 <gettext@plt>
   154fc:	mov	r1, r0
   15500:	ldr	r3, [fp, #-20]	; 0xffffffec
   15504:	ldr	r2, [fp, #-16]
   15508:	mov	r0, r4
   1550c:	bl	123f8 <fprintf@plt>
   15510:	mov	r3, r0
   15514:	cmp	r3, #0
   15518:	bge	15544 <__assert_fail@plt+0x2e58>
   1551c:	bl	12404 <__errno_location@plt>
   15520:	mov	r3, r0
   15524:	ldr	r4, [r3]
   15528:	ldr	r0, [pc, #68]	; 15574 <__assert_fail@plt+0x2e88>
   1552c:	bl	12398 <gettext@plt>
   15530:	mov	r3, r0
   15534:	mov	r2, r3
   15538:	mov	r1, r4
   1553c:	mov	r0, #1
   15540:	bl	122b4 <error@plt>
   15544:	ldr	r3, [pc, #32]	; 1556c <__assert_fail@plt+0x2e80>
   15548:	ldr	r3, [r3]
   1554c:	mov	r0, r3
   15550:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   15554:	bl	3ec18 <__assert_fail@plt+0x2c52c>
   15558:	mov	r3, r0
   1555c:	mov	r0, r3
   15560:	sub	sp, fp, #8
   15564:	pop	{r4, fp, pc}
   15568:	andeq	ip, r7, r4, lsr r7
   1556c:	andeq	ip, r7, r8, lsr #14
   15570:	muleq	r6, r4, r7
   15574:	andeq	r4, r6, r8, lsr #15
   15578:	push	{fp, lr}
   1557c:	add	fp, sp, #4
   15580:	sub	sp, sp, #16
   15584:	str	r0, [fp, #-8]
   15588:	str	r1, [fp, #-12]
   1558c:	str	r2, [fp, #-16]
   15590:	ldr	r3, [fp, #-16]
   15594:	ldr	r3, [r3, #132]	; 0x84
   15598:	ldr	r3, [r3]
   1559c:	ldr	r1, [fp, #-8]
   155a0:	mov	r0, r3
   155a4:	bl	154c8 <__assert_fail@plt+0x2ddc>
   155a8:	mov	r3, r0
   155ac:	cmp	r3, #0
   155b0:	beq	155cc <__assert_fail@plt+0x2ee0>
   155b4:	ldr	r2, [fp, #-16]
   155b8:	ldr	r1, [fp, #-12]
   155bc:	ldr	r0, [fp, #-8]
   155c0:	bl	16b64 <__assert_fail@plt+0x4478>
   155c4:	mov	r3, r0
   155c8:	b	155d0 <__assert_fail@plt+0x2ee4>
   155cc:	mov	r3, #0
   155d0:	mov	r0, r3
   155d4:	sub	sp, fp, #4
   155d8:	pop	{fp, pc}
   155dc:	push	{fp, lr}
   155e0:	add	fp, sp, #4
   155e4:	sub	sp, sp, #16
   155e8:	str	r0, [fp, #-8]
   155ec:	str	r1, [fp, #-12]
   155f0:	str	r2, [fp, #-16]
   155f4:	ldr	r3, [fp, #-16]
   155f8:	ldr	r3, [r3, #132]	; 0x84
   155fc:	ldr	r3, [r3]
   15600:	ldr	r1, [fp, #-8]
   15604:	mov	r0, r3
   15608:	bl	154c8 <__assert_fail@plt+0x2ddc>
   1560c:	mov	r3, r0
   15610:	cmp	r3, #0
   15614:	beq	15638 <__assert_fail@plt+0x2f4c>
   15618:	ldr	r3, [pc, #40]	; 15648 <__assert_fail@plt+0x2f5c>
   1561c:	ldr	r3, [r3, #12]
   15620:	ldr	r2, [fp, #-16]
   15624:	ldr	r1, [fp, #-12]
   15628:	mov	r0, r3
   1562c:	bl	16b64 <__assert_fail@plt+0x4478>
   15630:	mov	r3, r0
   15634:	b	1563c <__assert_fail@plt+0x2f50>
   15638:	mov	r3, #0
   1563c:	mov	r0, r3
   15640:	sub	sp, fp, #4
   15644:	pop	{fp, pc}
   15648:	andeq	sp, r7, r0, lsr #32
   1564c:	push	{fp}		; (str fp, [sp, #-4]!)
   15650:	add	fp, sp, #0
   15654:	sub	sp, sp, #20
   15658:	str	r0, [fp, #-8]
   1565c:	str	r1, [fp, #-12]
   15660:	str	r2, [fp, #-16]
   15664:	mov	r3, #1
   15668:	mov	r0, r3
   1566c:	add	sp, fp, #0
   15670:	pop	{fp}		; (ldr fp, [sp], #4)
   15674:	bx	lr
   15678:	push	{fp, lr}
   1567c:	add	fp, sp, #4
   15680:	sub	sp, sp, #16
   15684:	str	r0, [fp, #-8]
   15688:	str	r1, [fp, #-12]
   1568c:	str	r2, [fp, #-16]
   15690:	ldr	r3, [fp, #-16]
   15694:	ldr	r3, [r3, #156]	; 0x9c
   15698:	cmp	r3, #0
   1569c:	beq	156cc <__assert_fail@plt+0x2fe0>
   156a0:	ldr	r3, [fp, #-16]
   156a4:	ldr	r3, [r3, #156]	; 0x9c
   156a8:	mov	r2, r3
   156ac:	ldr	r1, [fp, #-12]
   156b0:	ldr	r0, [fp, #-8]
   156b4:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   156b8:	mov	r3, r0
   156bc:	eor	r3, r3, #1
   156c0:	uxtb	r3, r3
   156c4:	cmp	r3, #0
   156c8:	beq	156ec <__assert_fail@plt+0x3000>
   156cc:	ldr	r3, [fp, #-16]
   156d0:	ldr	r3, [r3, #160]	; 0xa0
   156d4:	mov	r2, r3
   156d8:	ldr	r1, [fp, #-12]
   156dc:	ldr	r0, [fp, #-8]
   156e0:	bl	1c6d0 <__assert_fail@plt+0x9fe4>
   156e4:	mov	r3, r0
   156e8:	b	156f0 <__assert_fail@plt+0x3004>
   156ec:	mov	r3, #1
   156f0:	mov	r0, r3
   156f4:	sub	sp, fp, #4
   156f8:	pop	{fp, pc}
   156fc:	push	{fp, lr}
   15700:	add	fp, sp, #4
   15704:	sub	sp, sp, #16
   15708:	str	r0, [fp, #-8]
   1570c:	str	r1, [fp, #-12]
   15710:	str	r2, [fp, #-16]
   15714:	ldr	r3, [fp, #-16]
   15718:	ldr	r3, [r3, #40]	; 0x28
   1571c:	mov	r2, #0
   15720:	ldr	r1, [fp, #-8]
   15724:	mov	r0, r3
   15728:	bl	122d8 <fnmatch@plt>
   1572c:	mov	r3, r0
   15730:	cmp	r3, #0
   15734:	bne	15740 <__assert_fail@plt+0x3054>
   15738:	mov	r3, #1
   1573c:	b	15744 <__assert_fail@plt+0x3058>
   15740:	mov	r3, #0
   15744:	mov	r0, r3
   15748:	sub	sp, fp, #4
   1574c:	pop	{fp, pc}
   15750:	push	{fp, lr}
   15754:	add	fp, sp, #4
   15758:	sub	sp, sp, #24
   1575c:	str	r0, [fp, #-16]
   15760:	str	r1, [fp, #-20]	; 0xffffffec
   15764:	str	r2, [fp, #-24]	; 0xffffffe8
   15768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1576c:	ldr	r3, [r3, #16]
   15770:	str	r3, [fp, #-8]
   15774:	ldr	r3, [fp, #-8]
   15778:	and	r3, r3, #61440	; 0xf000
   1577c:	cmp	r3, #16384	; 0x4000
   15780:	moveq	r3, #1
   15784:	movne	r3, #0
   15788:	uxtb	r3, r3
   1578c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15790:	add	r3, r3, #10
   15794:	lsl	r3, r3, #2
   15798:	add	r3, r2, r3
   1579c:	ldr	r3, [r3, #4]
   157a0:	str	r3, [fp, #-12]
   157a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   157a8:	ldr	r3, [r3, #40]	; 0x28
   157ac:	cmp	r3, #1
   157b0:	beq	157ec <__assert_fail@plt+0x3100>
   157b4:	cmp	r3, #1
   157b8:	bcc	157c8 <__assert_fail@plt+0x30dc>
   157bc:	cmp	r3, #2
   157c0:	beq	15820 <__assert_fail@plt+0x3134>
   157c4:	b	15844 <__assert_fail@plt+0x3158>
   157c8:	ldr	r2, [fp, #-8]
   157cc:	ldr	r3, [fp, #-12]
   157d0:	and	r2, r2, r3
   157d4:	ldr	r3, [fp, #-12]
   157d8:	cmp	r2, r3
   157dc:	moveq	r3, #1
   157e0:	movne	r3, #0
   157e4:	uxtb	r3, r3
   157e8:	b	15848 <__assert_fail@plt+0x315c>
   157ec:	ldr	r3, [fp, #-12]
   157f0:	cmp	r3, #0
   157f4:	bne	15800 <__assert_fail@plt+0x3114>
   157f8:	mov	r3, #1
   157fc:	b	15848 <__assert_fail@plt+0x315c>
   15800:	ldr	r2, [fp, #-8]
   15804:	ldr	r3, [fp, #-12]
   15808:	and	r3, r3, r2
   1580c:	cmp	r3, #0
   15810:	movne	r3, #1
   15814:	moveq	r3, #0
   15818:	uxtb	r3, r3
   1581c:	b	15848 <__assert_fail@plt+0x315c>
   15820:	ldr	r3, [fp, #-8]
   15824:	lsl	r3, r3, #20
   15828:	lsr	r3, r3, #20
   1582c:	ldr	r2, [fp, #-12]
   15830:	cmp	r3, r2
   15834:	moveq	r3, #1
   15838:	movne	r3, #0
   1583c:	uxtb	r3, r3
   15840:	b	15848 <__assert_fail@plt+0x315c>
   15844:	bl	12698 <abort@plt>
   15848:	mov	r0, r3
   1584c:	sub	sp, fp, #4
   15850:	pop	{fp, pc}
   15854:	push	{fp, lr}
   15858:	add	fp, sp, #4
   1585c:	sub	sp, sp, #16
   15860:	str	r0, [fp, #-8]
   15864:	str	r1, [fp, #-12]
   15868:	str	r2, [fp, #-16]
   1586c:	ldr	r3, [pc, #52]	; 158a8 <__assert_fail@plt+0x31bc>
   15870:	ldr	r0, [r3, #16]
   15874:	ldr	r3, [pc, #44]	; 158a8 <__assert_fail@plt+0x31bc>
   15878:	ldr	r1, [r3, #12]
   1587c:	mov	r3, #0
   15880:	mov	r2, #1
   15884:	bl	120b0 <faccessat@plt>
   15888:	mov	r3, r0
   1588c:	cmp	r3, #0
   15890:	moveq	r3, #1
   15894:	movne	r3, #0
   15898:	uxtb	r3, r3
   1589c:	mov	r0, r3
   158a0:	sub	sp, fp, #4
   158a4:	pop	{fp, pc}
   158a8:	andeq	sp, r7, r0, lsr #32
   158ac:	push	{fp, lr}
   158b0:	add	fp, sp, #4
   158b4:	sub	sp, sp, #16
   158b8:	str	r0, [fp, #-8]
   158bc:	str	r1, [fp, #-12]
   158c0:	str	r2, [fp, #-16]
   158c4:	ldr	r3, [pc, #52]	; 15900 <__assert_fail@plt+0x3214>
   158c8:	ldr	r0, [r3, #16]
   158cc:	ldr	r3, [pc, #44]	; 15900 <__assert_fail@plt+0x3214>
   158d0:	ldr	r1, [r3, #12]
   158d4:	mov	r3, #0
   158d8:	mov	r2, #4
   158dc:	bl	120b0 <faccessat@plt>
   158e0:	mov	r3, r0
   158e4:	cmp	r3, #0
   158e8:	moveq	r3, #1
   158ec:	movne	r3, #0
   158f0:	uxtb	r3, r3
   158f4:	mov	r0, r3
   158f8:	sub	sp, fp, #4
   158fc:	pop	{fp, pc}
   15900:	andeq	sp, r7, r0, lsr #32
   15904:	push	{fp, lr}
   15908:	add	fp, sp, #4
   1590c:	sub	sp, sp, #16
   15910:	str	r0, [fp, #-8]
   15914:	str	r1, [fp, #-12]
   15918:	str	r2, [fp, #-16]
   1591c:	ldr	r3, [pc, #52]	; 15958 <__assert_fail@plt+0x326c>
   15920:	ldr	r0, [r3, #16]
   15924:	ldr	r3, [pc, #44]	; 15958 <__assert_fail@plt+0x326c>
   15928:	ldr	r1, [r3, #12]
   1592c:	mov	r3, #0
   15930:	mov	r2, #2
   15934:	bl	120b0 <faccessat@plt>
   15938:	mov	r3, r0
   1593c:	cmp	r3, #0
   15940:	moveq	r3, #1
   15944:	movne	r3, #0
   15948:	uxtb	r3, r3
   1594c:	mov	r0, r3
   15950:	sub	sp, fp, #4
   15954:	pop	{fp, pc}
   15958:	andeq	sp, r7, r0, lsr #32
   1595c:	push	{fp, lr}
   15960:	add	fp, sp, #4
   15964:	sub	sp, sp, #24
   15968:	str	r0, [fp, #-8]
   1596c:	str	r1, [fp, #-12]
   15970:	str	r2, [fp, #-16]
   15974:	ldr	r3, [fp, #-16]
   15978:	ldr	r0, [r3, #44]	; 0x2c
   1597c:	ldr	r3, [fp, #-16]
   15980:	ldr	r1, [r3, #56]	; 0x38
   15984:	ldr	r3, [fp, #-16]
   15988:	ldrb	r2, [r3, #52]	; 0x34
   1598c:	ldr	r3, [fp, #-8]
   15990:	str	r3, [sp]
   15994:	ldr	r3, [pc, #16]	; 159ac <__assert_fail@plt+0x32c0>
   15998:	bl	28e50 <__assert_fail@plt+0x16764>
   1599c:	mov	r3, #1
   159a0:	mov	r0, r3
   159a4:	sub	sp, fp, #4
   159a8:	pop	{fp, pc}
   159ac:	andeq	r4, r6, r8, lsr #14
   159b0:	push	{fp, lr}
   159b4:	add	fp, sp, #4
   159b8:	sub	sp, sp, #16
   159bc:	str	r0, [fp, #-8]
   159c0:	str	r1, [fp, #-12]
   159c4:	str	r2, [fp, #-16]
   159c8:	ldr	r2, [fp, #-16]
   159cc:	ldr	r1, [fp, #-12]
   159d0:	ldr	r0, [fp, #-8]
   159d4:	bl	14a48 <__assert_fail@plt+0x235c>
   159d8:	mov	r3, r0
   159dc:	mov	r0, r3
   159e0:	sub	sp, fp, #4
   159e4:	pop	{fp, pc}
   159e8:	push	{fp, lr}
   159ec:	add	fp, sp, #4
   159f0:	sub	sp, sp, #16
   159f4:	str	r0, [fp, #-8]
   159f8:	str	r1, [fp, #-12]
   159fc:	str	r2, [fp, #-16]
   15a00:	ldr	r3, [pc, #104]	; 15a70 <__assert_fail@plt+0x3384>
   15a04:	ldrb	r3, [r3]
   15a08:	cmp	r3, #0
   15a0c:	beq	15a60 <__assert_fail@plt+0x3374>
   15a10:	ldr	r3, [pc, #92]	; 15a74 <__assert_fail@plt+0x3388>
   15a14:	ldrb	r3, [r3, #4]
   15a18:	cmp	r3, #0
   15a1c:	bne	15a34 <__assert_fail@plt+0x3348>
   15a20:	ldr	r3, [pc, #80]	; 15a78 <__assert_fail@plt+0x338c>
   15a24:	ldr	r2, [pc, #80]	; 15a7c <__assert_fail@plt+0x3390>
   15a28:	ldr	r1, [pc, #80]	; 15a80 <__assert_fail@plt+0x3394>
   15a2c:	ldr	r0, [pc, #80]	; 15a84 <__assert_fail@plt+0x3398>
   15a30:	bl	126ec <__assert_fail@plt>
   15a34:	ldr	r3, [fp, #-12]
   15a38:	cmp	r3, #0
   15a3c:	beq	15a60 <__assert_fail@plt+0x3374>
   15a40:	ldr	r3, [fp, #-12]
   15a44:	ldr	r3, [r3, #16]
   15a48:	and	r3, r3, #61440	; 0xf000
   15a4c:	cmp	r3, #16384	; 0x4000
   15a50:	bne	15a60 <__assert_fail@plt+0x3374>
   15a54:	ldr	r3, [pc, #24]	; 15a74 <__assert_fail@plt+0x3388>
   15a58:	mov	r2, #1
   15a5c:	strb	r2, [r3, #24]
   15a60:	mov	r3, #1
   15a64:	mov	r0, r3
   15a68:	sub	sp, fp, #4
   15a6c:	pop	{fp, pc}
   15a70:	andeq	sp, r7, ip, asr #32
   15a74:	andeq	sp, r7, r0, lsr #32
   15a78:	andeq	r4, r6, r4, lsl #20
   15a7c:	andeq	r0, r0, r5, asr r3
   15a80:	ldrdeq	r4, [r6], -r8
   15a84:	andeq	r4, r6, r8, asr #15
   15a88:	push	{fp, lr}
   15a8c:	add	fp, sp, #4
   15a90:	sub	sp, sp, #16
   15a94:	str	r0, [fp, #-8]
   15a98:	str	r1, [fp, #-12]
   15a9c:	str	r2, [fp, #-16]
   15aa0:	bl	1b674 <__assert_fail@plt+0x8f88>
   15aa4:	ldr	r3, [pc, #8]	; 15ab4 <__assert_fail@plt+0x33c8>
   15aa8:	ldr	r3, [r3, #28]
   15aac:	mov	r0, r3
   15ab0:	bl	12380 <exit@plt>
   15ab4:	andeq	sp, r7, r0, lsr #32
   15ab8:	push	{fp, lr}
   15abc:	add	fp, sp, #4
   15ac0:	sub	sp, sp, #32
   15ac4:	str	r0, [fp, #-16]
   15ac8:	str	r1, [fp, #-20]	; 0xffffffec
   15acc:	str	r2, [fp, #-24]	; 0xffffffe8
   15ad0:	ldr	r0, [fp, #-16]
   15ad4:	bl	123bc <strlen@plt>
   15ad8:	mov	r3, r0
   15adc:	str	r3, [fp, #-8]
   15ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ae4:	ldr	r0, [r3, #40]	; 0x28
   15ae8:	mov	r3, #0
   15aec:	str	r3, [sp]
   15af0:	mov	r3, #0
   15af4:	ldr	r2, [fp, #-8]
   15af8:	ldr	r1, [fp, #-16]
   15afc:	bl	5260c <__assert_fail@plt+0x3ff20>
   15b00:	mov	r2, r0
   15b04:	ldr	r3, [fp, #-8]
   15b08:	cmp	r2, r3
   15b0c:	bne	15b18 <__assert_fail@plt+0x342c>
   15b10:	mov	r3, #1
   15b14:	b	15b1c <__assert_fail@plt+0x3430>
   15b18:	mov	r3, #0
   15b1c:	mov	r0, r3
   15b20:	sub	sp, fp, #4
   15b24:	pop	{fp, pc}
   15b28:	push	{r4, r5, fp, lr}
   15b2c:	add	fp, sp, #12
   15b30:	sub	sp, sp, #24
   15b34:	str	r0, [fp, #-24]	; 0xffffffe8
   15b38:	str	r1, [fp, #-28]	; 0xffffffe4
   15b3c:	str	r2, [fp, #-32]	; 0xffffffe0
   15b40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b44:	ldrd	r0, [r3, #48]	; 0x30
   15b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b4c:	ldr	r3, [r3, #44]	; 0x2c
   15b50:	mov	r2, r3
   15b54:	asr	r3, r2, #31
   15b58:	bl	63d78 <__assert_fail@plt+0x5168c>
   15b5c:	mov	r2, r0
   15b60:	mov	r3, r1
   15b64:	mov	r4, r2
   15b68:	mov	r5, r3
   15b6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b70:	ldrd	r0, [r3, #48]	; 0x30
   15b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b78:	ldr	r3, [r3, #44]	; 0x2c
   15b7c:	mov	r2, r3
   15b80:	asr	r3, r2, #31
   15b84:	bl	63d78 <__assert_fail@plt+0x5168c>
   15b88:	orr	r3, r2, r3
   15b8c:	cmp	r3, #0
   15b90:	movne	r3, #1
   15b94:	moveq	r3, #0
   15b98:	uxtb	r3, r3
   15b9c:	uxtb	r2, r3
   15ba0:	mov	r3, #0
   15ba4:	adds	r2, r2, r4
   15ba8:	adc	r3, r3, r5
   15bac:	strd	r2, [fp, #-20]	; 0xffffffec
   15bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bb4:	ldr	r3, [r3, #40]	; 0x28
   15bb8:	cmp	r3, #1
   15bbc:	beq	15bf4 <__assert_fail@plt+0x3508>
   15bc0:	cmp	r3, #1
   15bc4:	bcc	15bd4 <__assert_fail@plt+0x34e8>
   15bc8:	cmp	r3, #2
   15bcc:	beq	15c14 <__assert_fail@plt+0x3528>
   15bd0:	b	15c48 <__assert_fail@plt+0x355c>
   15bd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bd8:	ldrd	r0, [r3, #48]	; 0x30
   15bdc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15be0:	cmp	r1, r3
   15be4:	cmpeq	r0, r2
   15be8:	bcs	15c34 <__assert_fail@plt+0x3548>
   15bec:	mov	r3, #1
   15bf0:	b	15c4c <__assert_fail@plt+0x3560>
   15bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bf8:	ldrd	r0, [r3, #48]	; 0x30
   15bfc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15c00:	cmp	r1, r3
   15c04:	cmpeq	r0, r2
   15c08:	bls	15c3c <__assert_fail@plt+0x3550>
   15c0c:	mov	r3, #1
   15c10:	b	15c4c <__assert_fail@plt+0x3560>
   15c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c18:	ldrd	r0, [r3, #48]	; 0x30
   15c1c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15c20:	cmp	r1, r3
   15c24:	cmpeq	r0, r2
   15c28:	bne	15c44 <__assert_fail@plt+0x3558>
   15c2c:	mov	r3, #1
   15c30:	b	15c4c <__assert_fail@plt+0x3560>
   15c34:	nop			; (mov r0, r0)
   15c38:	b	15c48 <__assert_fail@plt+0x355c>
   15c3c:	nop			; (mov r0, r0)
   15c40:	b	15c48 <__assert_fail@plt+0x355c>
   15c44:	nop			; (mov r0, r0)
   15c48:	mov	r3, #0
   15c4c:	mov	r0, r3
   15c50:	sub	sp, fp, #12
   15c54:	pop	{r4, r5, fp, pc}
   15c58:	push	{fp, lr}
   15c5c:	add	fp, sp, #4
   15c60:	sub	sp, sp, #16
   15c64:	str	r0, [fp, #-8]
   15c68:	str	r1, [fp, #-12]
   15c6c:	str	r2, [fp, #-16]
   15c70:	ldr	r3, [fp, #-12]
   15c74:	ldrd	r2, [r3, #96]	; 0x60
   15c78:	orrs	r3, r2, r3
   15c7c:	beq	15ca4 <__assert_fail@plt+0x35b8>
   15c80:	ldr	r3, [fp, #-12]
   15c84:	ldrd	r0, [r3, #96]	; 0x60
   15c88:	ldr	r3, [fp, #-16]
   15c8c:	ldrd	r2, [r3, #40]	; 0x28
   15c90:	cmp	r1, r3
   15c94:	cmpeq	r0, r2
   15c98:	beq	15ca4 <__assert_fail@plt+0x35b8>
   15c9c:	mov	r3, #0
   15ca0:	b	15d1c <__assert_fail@plt+0x3630>
   15ca4:	ldr	r3, [pc, #124]	; 15d28 <__assert_fail@plt+0x363c>
   15ca8:	ldr	r3, [r3, #12]
   15cac:	ldr	r2, [fp, #-12]
   15cb0:	mov	r1, r3
   15cb4:	ldr	r0, [fp, #-8]
   15cb8:	bl	1ad70 <__assert_fail@plt+0x8684>
   15cbc:	mov	r3, r0
   15cc0:	cmp	r3, #0
   15cc4:	bne	15d18 <__assert_fail@plt+0x362c>
   15cc8:	ldr	r3, [fp, #-12]
   15ccc:	ldrd	r0, [r3, #96]	; 0x60
   15cd0:	ldr	r3, [fp, #-16]
   15cd4:	ldrd	r2, [r3, #40]	; 0x28
   15cd8:	cmp	r1, r3
   15cdc:	cmpeq	r0, r2
   15ce0:	bne	15d08 <__assert_fail@plt+0x361c>
   15ce4:	ldr	r3, [fp, #-12]
   15ce8:	ldrd	r0, [r3]
   15cec:	ldr	r3, [fp, #-16]
   15cf0:	ldrd	r2, [r3, #48]	; 0x30
   15cf4:	cmp	r1, r3
   15cf8:	cmpeq	r0, r2
   15cfc:	bne	15d08 <__assert_fail@plt+0x361c>
   15d00:	mov	r3, #1
   15d04:	b	15d0c <__assert_fail@plt+0x3620>
   15d08:	mov	r3, #0
   15d0c:	and	r3, r3, #1
   15d10:	uxtb	r3, r3
   15d14:	b	15d1c <__assert_fail@plt+0x3630>
   15d18:	mov	r3, #0
   15d1c:	mov	r0, r3
   15d20:	sub	sp, fp, #4
   15d24:	pop	{fp, pc}
   15d28:	andeq	sp, r7, r0, lsr #32
   15d2c:	push	{fp}		; (str fp, [sp, #-4]!)
   15d30:	add	fp, sp, #0
   15d34:	sub	sp, sp, #20
   15d38:	str	r0, [fp, #-8]
   15d3c:	str	r1, [fp, #-12]
   15d40:	str	r2, [fp, #-16]
   15d44:	mov	r3, #1
   15d48:	mov	r0, r3
   15d4c:	add	sp, fp, #0
   15d50:	pop	{fp}		; (ldr fp, [sp], #4)
   15d54:	bx	lr
   15d58:	push	{fp, lr}
   15d5c:	add	fp, sp, #4
   15d60:	sub	sp, sp, #24
   15d64:	str	r0, [fp, #-16]
   15d68:	str	r1, [fp, #-20]	; 0xffffffec
   15d6c:	str	r2, [fp, #-24]	; 0xffffffe8
   15d70:	mov	r3, #7
   15d74:	str	r3, [fp, #-12]
   15d78:	ldr	r3, [pc, #320]	; 15ec0 <__assert_fail@plt+0x37d4>
   15d7c:	ldrb	r3, [r3, #5]
   15d80:	cmp	r3, #0
   15d84:	bne	15d9c <__assert_fail@plt+0x36b0>
   15d88:	ldr	r3, [pc, #308]	; 15ec4 <__assert_fail@plt+0x37d8>
   15d8c:	ldr	r2, [pc, #308]	; 15ec8 <__assert_fail@plt+0x37dc>
   15d90:	ldr	r1, [pc, #308]	; 15ecc <__assert_fail@plt+0x37e0>
   15d94:	ldr	r0, [pc, #308]	; 15ed0 <__assert_fail@plt+0x37e4>
   15d98:	bl	126ec <__assert_fail@plt>
   15d9c:	ldr	r3, [pc, #284]	; 15ec0 <__assert_fail@plt+0x37d4>
   15da0:	ldr	r3, [r3, #8]
   15da4:	cmp	r3, #0
   15da8:	bne	15db4 <__assert_fail@plt+0x36c8>
   15dac:	mov	r3, #0
   15db0:	b	15eb4 <__assert_fail@plt+0x37c8>
   15db4:	ldr	r3, [pc, #260]	; 15ec0 <__assert_fail@plt+0x37d4>
   15db8:	ldrb	r3, [r3, #4]
   15dbc:	cmp	r3, #0
   15dc0:	beq	15dd4 <__assert_fail@plt+0x36e8>
   15dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15dc8:	ldr	r3, [r3, #16]
   15dcc:	str	r3, [fp, #-8]
   15dd0:	b	15de0 <__assert_fail@plt+0x36f4>
   15dd4:	ldr	r3, [pc, #228]	; 15ec0 <__assert_fail@plt+0x37d4>
   15dd8:	ldr	r3, [r3, #8]
   15ddc:	str	r3, [fp, #-8]
   15de0:	ldr	r3, [fp, #-8]
   15de4:	and	r3, r3, #61440	; 0xf000
   15de8:	cmp	r3, #24576	; 0x6000
   15dec:	beq	15e50 <__assert_fail@plt+0x3764>
   15df0:	cmp	r3, #24576	; 0x6000
   15df4:	bhi	15e14 <__assert_fail@plt+0x3728>
   15df8:	cmp	r3, #8192	; 0x2000
   15dfc:	beq	15e5c <__assert_fail@plt+0x3770>
   15e00:	cmp	r3, #16384	; 0x4000
   15e04:	beq	15e38 <__assert_fail@plt+0x374c>
   15e08:	cmp	r3, #4096	; 0x1000
   15e0c:	beq	15e74 <__assert_fail@plt+0x3788>
   15e10:	b	15e80 <__assert_fail@plt+0x3794>
   15e14:	cmp	r3, #40960	; 0xa000
   15e18:	beq	15e44 <__assert_fail@plt+0x3758>
   15e1c:	cmp	r3, #49152	; 0xc000
   15e20:	beq	15e68 <__assert_fail@plt+0x377c>
   15e24:	cmp	r3, #32768	; 0x8000
   15e28:	bne	15e80 <__assert_fail@plt+0x3794>
   15e2c:	mov	r3, #3
   15e30:	str	r3, [fp, #-12]
   15e34:	b	15e80 <__assert_fail@plt+0x3794>
   15e38:	mov	r3, #2
   15e3c:	str	r3, [fp, #-12]
   15e40:	b	15e80 <__assert_fail@plt+0x3794>
   15e44:	mov	r3, #4
   15e48:	str	r3, [fp, #-12]
   15e4c:	b	15e80 <__assert_fail@plt+0x3794>
   15e50:	mov	r3, #0
   15e54:	str	r3, [fp, #-12]
   15e58:	b	15e80 <__assert_fail@plt+0x3794>
   15e5c:	mov	r3, #1
   15e60:	str	r3, [fp, #-12]
   15e64:	b	15e80 <__assert_fail@plt+0x3794>
   15e68:	mov	r3, #6
   15e6c:	str	r3, [fp, #-12]
   15e70:	b	15e80 <__assert_fail@plt+0x3794>
   15e74:	mov	r3, #5
   15e78:	str	r3, [fp, #-12]
   15e7c:	nop			; (mov r0, r0)
   15e80:	ldr	r3, [fp, #-12]
   15e84:	cmp	r3, #7
   15e88:	beq	15eb0 <__assert_fail@plt+0x37c4>
   15e8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e90:	ldr	r3, [fp, #-12]
   15e94:	add	r3, r2, r3
   15e98:	add	r3, r3, #40	; 0x28
   15e9c:	ldrb	r3, [r3]
   15ea0:	cmp	r3, #0
   15ea4:	beq	15eb0 <__assert_fail@plt+0x37c4>
   15ea8:	mov	r3, #1
   15eac:	b	15eb4 <__assert_fail@plt+0x37c8>
   15eb0:	mov	r3, #0
   15eb4:	mov	r0, r3
   15eb8:	sub	sp, fp, #4
   15ebc:	pop	{fp, pc}
   15ec0:	andeq	sp, r7, r0, lsr #32
   15ec4:	andeq	r4, r6, r0, lsl sl
   15ec8:	ldrdeq	r0, [r0], -r1
   15ecc:	ldrdeq	r4, [r6], -r8
   15ed0:	ldrdeq	r4, [r6], -r8
   15ed4:	push	{fp}		; (str fp, [sp, #-4]!)
   15ed8:	add	fp, sp, #0
   15edc:	sub	sp, sp, #20
   15ee0:	str	r0, [fp, #-8]
   15ee4:	str	r1, [fp, #-12]
   15ee8:	str	r2, [fp, #-16]
   15eec:	ldr	r3, [fp, #-16]
   15ef0:	ldr	r3, [r3, #40]	; 0x28
   15ef4:	cmp	r3, #1
   15ef8:	beq	15f3c <__assert_fail@plt+0x3850>
   15efc:	cmp	r3, #1
   15f00:	bcc	15f10 <__assert_fail@plt+0x3824>
   15f04:	cmp	r3, #2
   15f08:	beq	15f68 <__assert_fail@plt+0x387c>
   15f0c:	b	15fa8 <__assert_fail@plt+0x38bc>
   15f10:	ldr	r3, [fp, #-12]
   15f14:	ldr	r3, [r3, #24]
   15f18:	mov	r0, r3
   15f1c:	mov	r1, #0
   15f20:	ldr	r3, [fp, #-16]
   15f24:	ldrd	r2, [r3, #48]	; 0x30
   15f28:	cmp	r1, r3
   15f2c:	cmpeq	r0, r2
   15f30:	bls	15f94 <__assert_fail@plt+0x38a8>
   15f34:	mov	r3, #1
   15f38:	b	15fac <__assert_fail@plt+0x38c0>
   15f3c:	ldr	r3, [fp, #-12]
   15f40:	ldr	r3, [r3, #24]
   15f44:	mov	r0, r3
   15f48:	mov	r1, #0
   15f4c:	ldr	r3, [fp, #-16]
   15f50:	ldrd	r2, [r3, #48]	; 0x30
   15f54:	cmp	r1, r3
   15f58:	cmpeq	r0, r2
   15f5c:	bcs	15f9c <__assert_fail@plt+0x38b0>
   15f60:	mov	r3, #1
   15f64:	b	15fac <__assert_fail@plt+0x38c0>
   15f68:	ldr	r3, [fp, #-12]
   15f6c:	ldr	r3, [r3, #24]
   15f70:	mov	r0, r3
   15f74:	mov	r1, #0
   15f78:	ldr	r3, [fp, #-16]
   15f7c:	ldrd	r2, [r3, #48]	; 0x30
   15f80:	cmp	r1, r3
   15f84:	cmpeq	r0, r2
   15f88:	bne	15fa4 <__assert_fail@plt+0x38b8>
   15f8c:	mov	r3, #1
   15f90:	b	15fac <__assert_fail@plt+0x38c0>
   15f94:	nop			; (mov r0, r0)
   15f98:	b	15fa8 <__assert_fail@plt+0x38bc>
   15f9c:	nop			; (mov r0, r0)
   15fa0:	b	15fa8 <__assert_fail@plt+0x38bc>
   15fa4:	nop			; (mov r0, r0)
   15fa8:	mov	r3, #0
   15fac:	mov	r0, r3
   15fb0:	add	sp, fp, #0
   15fb4:	pop	{fp}		; (ldr fp, [sp], #4)
   15fb8:	bx	lr
   15fbc:	push	{fp, lr}
   15fc0:	add	fp, sp, #4
   15fc4:	sub	sp, sp, #40	; 0x28
   15fc8:	str	r0, [fp, #-32]	; 0xffffffe0
   15fcc:	str	r1, [fp, #-36]	; 0xffffffdc
   15fd0:	str	r2, [fp, #-40]	; 0xffffffd8
   15fd4:	sub	r3, fp, #20
   15fd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fdc:	mov	r0, r3
   15fe0:	bl	3c778 <__assert_fail@plt+0x2a08c>
   15fe4:	sub	r3, fp, #28
   15fe8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fec:	mov	r0, r3
   15ff0:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   15ff4:	sub	r3, fp, #28
   15ff8:	ldm	r3, {r2, r3}
   15ffc:	sub	r1, fp, #20
   16000:	ldm	r1, {r0, r1}
   16004:	bl	13f40 <__assert_fail@plt+0x1854>
   16008:	mov	r3, r0
   1600c:	cmp	r3, #0
   16010:	bge	1601c <__assert_fail@plt+0x3930>
   16014:	mov	r3, #0
   16018:	b	1607c <__assert_fail@plt+0x3990>
   1601c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16020:	ldr	r3, [fp, #-20]	; 0xffffffec
   16024:	sub	r3, r2, r3
   16028:	str	r3, [fp, #-12]
   1602c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16030:	ldr	r3, [fp, #-16]
   16034:	sub	r3, r2, r3
   16038:	str	r3, [fp, #-8]
   1603c:	ldr	r3, [fp, #-8]
   16040:	cmp	r3, #0
   16044:	bge	16064 <__assert_fail@plt+0x3978>
   16048:	ldr	r2, [fp, #-8]
   1604c:	ldr	r3, [pc, #52]	; 16088 <__assert_fail@plt+0x399c>
   16050:	add	r3, r2, r3
   16054:	str	r3, [fp, #-8]
   16058:	ldr	r3, [fp, #-12]
   1605c:	sub	r3, r3, #1
   16060:	str	r3, [fp, #-12]
   16064:	ldr	r3, [pc, #32]	; 1608c <__assert_fail@plt+0x39a0>
   16068:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1606c:	sub	r1, fp, #12
   16070:	ldm	r1, {r0, r1}
   16074:	bl	13fc4 <__assert_fail@plt+0x18d8>
   16078:	mov	r3, r0
   1607c:	mov	r0, r3
   16080:	sub	sp, fp, #4
   16084:	pop	{fp, pc}
   16088:	blcc	fe6c8890 <stdout@@GLIBC_2.4+0xfe64c15c>
   1608c:	andeq	r5, r1, r0, lsl #3
   16090:	push	{fp}		; (str fp, [sp, #-4]!)
   16094:	add	fp, sp, #0
   16098:	sub	sp, sp, #20
   1609c:	str	r0, [fp, #-8]
   160a0:	str	r1, [fp, #-12]
   160a4:	str	r2, [fp, #-16]
   160a8:	ldr	r3, [fp, #-16]
   160ac:	ldr	r2, [r3, #40]	; 0x28
   160b0:	ldr	r3, [fp, #-12]
   160b4:	ldr	r3, [r3, #24]
   160b8:	cmp	r2, r3
   160bc:	bne	160c8 <__assert_fail@plt+0x39dc>
   160c0:	mov	r3, #1
   160c4:	b	160cc <__assert_fail@plt+0x39e0>
   160c8:	mov	r3, #0
   160cc:	mov	r0, r3
   160d0:	add	sp, fp, #0
   160d4:	pop	{fp}		; (ldr fp, [sp], #4)
   160d8:	bx	lr
   160dc:	push	{r4, fp, lr}
   160e0:	add	fp, sp, #8
   160e4:	sub	sp, sp, #132	; 0x84
   160e8:	str	r0, [fp, #-128]	; 0xffffff80
   160ec:	str	r1, [fp, #-132]	; 0xffffff7c
   160f0:	str	r2, [fp, #-136]	; 0xffffff78
   160f4:	bl	1bae0 <__assert_fail@plt+0x93f4>
   160f8:	mov	r3, r0
   160fc:	cmp	r3, #0
   16100:	beq	16110 <__assert_fail@plt+0x3a24>
   16104:	ldr	r3, [pc, #220]	; 161e8 <__assert_fail@plt+0x3afc>
   16108:	str	r3, [fp, #-16]
   1610c:	b	16118 <__assert_fail@plt+0x3a2c>
   16110:	ldr	r3, [pc, #212]	; 161ec <__assert_fail@plt+0x3b00>
   16114:	str	r3, [fp, #-16]
   16118:	sub	r3, fp, #124	; 0x7c
   1611c:	mov	r0, r3
   16120:	bl	1ad50 <__assert_fail@plt+0x8664>
   16124:	ldr	r3, [pc, #196]	; 161f0 <__assert_fail@plt+0x3b04>
   16128:	ldr	r2, [r3, #12]
   1612c:	sub	r1, fp, #124	; 0x7c
   16130:	ldr	r3, [fp, #-16]
   16134:	mov	r0, r2
   16138:	blx	r3
   1613c:	mov	r3, r0
   16140:	cmp	r3, #0
   16144:	beq	161c4 <__assert_fail@plt+0x3ad8>
   16148:	bl	1bae0 <__assert_fail@plt+0x93f4>
   1614c:	mov	r3, r0
   16150:	cmp	r3, #0
   16154:	beq	16184 <__assert_fail@plt+0x3a98>
   16158:	bl	12404 <__errno_location@plt>
   1615c:	mov	r3, r0
   16160:	ldr	r3, [r3]
   16164:	cmp	r3, #2
   16168:	bne	16184 <__assert_fail@plt+0x3a98>
   1616c:	ldr	r2, [fp, #-136]	; 0xffffff78
   16170:	ldr	r1, [fp, #-132]	; 0xffffff7c
   16174:	ldr	r0, [fp, #-128]	; 0xffffff80
   16178:	bl	15d58 <__assert_fail@plt+0x366c>
   1617c:	mov	r3, r0
   16180:	b	161dc <__assert_fail@plt+0x3af0>
   16184:	bl	12404 <__errno_location@plt>
   16188:	mov	r3, r0
   1618c:	ldr	r4, [r3]
   16190:	ldr	r1, [fp, #-128]	; 0xffffff80
   16194:	mov	r0, #0
   16198:	bl	1c7fc <__assert_fail@plt+0xa110>
   1619c:	mov	r3, r0
   161a0:	ldr	r2, [pc, #76]	; 161f4 <__assert_fail@plt+0x3b08>
   161a4:	mov	r1, r4
   161a8:	mov	r0, #0
   161ac:	bl	122b4 <error@plt>
   161b0:	ldr	r3, [pc, #56]	; 161f0 <__assert_fail@plt+0x3b04>
   161b4:	mov	r2, #1
   161b8:	str	r2, [r3, #28]
   161bc:	mov	r3, #0
   161c0:	b	161dc <__assert_fail@plt+0x3af0>
   161c4:	sub	r3, fp, #124	; 0x7c
   161c8:	ldr	r2, [fp, #-136]	; 0xffffff78
   161cc:	mov	r1, r3
   161d0:	ldr	r0, [fp, #-128]	; 0xffffff80
   161d4:	bl	15d58 <__assert_fail@plt+0x366c>
   161d8:	mov	r3, r0
   161dc:	mov	r0, r3
   161e0:	sub	sp, fp, #8
   161e4:	pop	{r4, fp, pc}
   161e8:	andeq	fp, r1, r0, ror r9
   161ec:	andeq	fp, r1, r0, asr #17
   161f0:	andeq	sp, r7, r0, lsr #32
   161f4:	andeq	r4, r6, r4, lsr #14
   161f8:	push	{r4, r5, fp, lr}
   161fc:	add	fp, sp, #12
   16200:	sub	sp, sp, #24
   16204:	str	r0, [fp, #-24]	; 0xffffffe8
   16208:	str	r1, [fp, #-28]	; 0xffffffe4
   1620c:	str	r2, [fp, #-32]	; 0xffffffe0
   16210:	ldr	r3, [pc, #196]	; 162dc <__assert_fail@plt+0x3bf0>
   16214:	ldr	r3, [r3, #64]	; 0x40
   16218:	ldr	r2, [pc, #192]	; 162e0 <__assert_fail@plt+0x3bf4>
   1621c:	ldr	r0, [r2, #16]
   16220:	ldr	r2, [pc, #184]	; 162e0 <__assert_fail@plt+0x3bf4>
   16224:	ldr	r1, [r2, #12]
   16228:	sub	r2, fp, #20
   1622c:	blx	r3
   16230:	str	r0, [fp, #-16]
   16234:	ldr	r3, [fp, #-16]
   16238:	cmp	r3, #0
   1623c:	bge	16280 <__assert_fail@plt+0x3b94>
   16240:	bl	12404 <__errno_location@plt>
   16244:	mov	r3, r0
   16248:	ldr	r4, [r3]
   1624c:	ldr	r0, [pc, #144]	; 162e4 <__assert_fail@plt+0x3bf8>
   16250:	bl	12398 <gettext@plt>
   16254:	mov	r5, r0
   16258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1625c:	mov	r0, #0
   16260:	bl	1c7fc <__assert_fail@plt+0xa110>
   16264:	mov	r3, r0
   16268:	mov	r2, r5
   1626c:	mov	r1, r4
   16270:	mov	r0, #0
   16274:	bl	122b4 <error@plt>
   16278:	mov	r3, #0
   1627c:	b	162d0 <__assert_fail@plt+0x3be4>
   16280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16284:	ldr	r3, [r3, #40]	; 0x28
   16288:	ldr	r1, [fp, #-20]	; 0xffffffec
   1628c:	mov	r2, #0
   16290:	mov	r0, r3
   16294:	bl	122d8 <fnmatch@plt>
   16298:	mov	r3, r0
   1629c:	cmp	r3, #0
   162a0:	moveq	r3, #1
   162a4:	movne	r3, #0
   162a8:	uxtb	r3, r3
   162ac:	str	r3, [fp, #-16]
   162b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   162b4:	mov	r0, r3
   162b8:	bl	125fc <freecon@plt>
   162bc:	ldr	r3, [fp, #-16]
   162c0:	cmp	r3, #0
   162c4:	movne	r3, #1
   162c8:	moveq	r3, #0
   162cc:	uxtb	r3, r3
   162d0:	mov	r0, r3
   162d4:	sub	sp, fp, #12
   162d8:	pop	{r4, r5, fp, pc}
   162dc:	andeq	sp, r7, ip, asr #32
   162e0:	andeq	sp, r7, r0, lsr #32
   162e4:	andeq	r4, r6, r8, ror #15
   162e8:	push	{fp, lr}
   162ec:	add	fp, sp, #4
   162f0:	sub	sp, sp, #16
   162f4:	str	r0, [fp, #-16]
   162f8:	str	r1, [fp, #-20]	; 0xffffffec
   162fc:	ldr	r3, [fp, #-16]
   16300:	cmp	r3, #0
   16304:	bne	16310 <__assert_fail@plt+0x3c24>
   16308:	mov	r3, #0
   1630c:	b	163a0 <__assert_fail@plt+0x3cb4>
   16310:	ldr	r1, [fp, #-16]
   16314:	ldr	r0, [fp, #-20]	; 0xffffffec
   16318:	bl	1226c <strcpy@plt>
   1631c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16320:	bl	123bc <strlen@plt>
   16324:	mov	r3, r0
   16328:	sub	r3, r3, #1
   1632c:	str	r3, [fp, #-8]
   16330:	b	16340 <__assert_fail@plt+0x3c54>
   16334:	ldr	r3, [fp, #-8]
   16338:	sub	r3, r3, #1
   1633c:	str	r3, [fp, #-8]
   16340:	ldr	r3, [fp, #-8]
   16344:	cmp	r3, #0
   16348:	blt	1637c <__assert_fail@plt+0x3c90>
   1634c:	ldr	r3, [fp, #-8]
   16350:	ldr	r2, [fp, #-20]	; 0xffffffec
   16354:	add	r3, r2, r3
   16358:	ldrb	r3, [r3]
   1635c:	cmp	r3, #32
   16360:	beq	16334 <__assert_fail@plt+0x3c48>
   16364:	ldr	r3, [fp, #-8]
   16368:	ldr	r2, [fp, #-20]	; 0xffffffec
   1636c:	add	r3, r2, r3
   16370:	ldrb	r3, [r3]
   16374:	cmp	r3, #9
   16378:	beq	16334 <__assert_fail@plt+0x3c48>
   1637c:	ldr	r3, [fp, #-8]
   16380:	add	r3, r3, #1
   16384:	str	r3, [fp, #-8]
   16388:	ldr	r3, [fp, #-8]
   1638c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16390:	add	r3, r2, r3
   16394:	mov	r2, #0
   16398:	strb	r2, [r3]
   1639c:	ldr	r3, [fp, #-20]	; 0xffffffec
   163a0:	mov	r0, r3
   163a4:	sub	sp, fp, #4
   163a8:	pop	{fp, pc}
   163ac:	push	{fp, lr}
   163b0:	add	fp, sp, #4
   163b4:	sub	sp, sp, #272	; 0x110
   163b8:	str	r0, [fp, #-272]	; 0xfffffef0
   163bc:	str	r1, [fp, #-276]	; 0xfffffeec
   163c0:	ldr	r3, [fp, #-276]	; 0xfffffeec
   163c4:	str	r3, [fp, #-8]
   163c8:	b	16404 <__assert_fail@plt+0x3d18>
   163cc:	ldr	r3, [fp, #-8]
   163d0:	ldr	r3, [r3, #4]
   163d4:	sub	r2, fp, #264	; 0x108
   163d8:	mov	r1, r2
   163dc:	mov	r0, r3
   163e0:	bl	162e8 <__assert_fail@plt+0x3bfc>
   163e4:	mov	r3, r0
   163e8:	mov	r2, r3
   163ec:	ldr	r1, [pc, #52]	; 16428 <__assert_fail@plt+0x3d3c>
   163f0:	ldr	r0, [fp, #-272]	; 0xfffffef0
   163f4:	bl	123f8 <fprintf@plt>
   163f8:	ldr	r3, [fp, #-8]
   163fc:	ldr	r3, [r3, #152]	; 0x98
   16400:	str	r3, [fp, #-8]
   16404:	ldr	r3, [fp, #-8]
   16408:	cmp	r3, #0
   1640c:	bne	163cc <__assert_fail@plt+0x3ce0>
   16410:	ldr	r1, [fp, #-272]	; 0xfffffef0
   16414:	mov	r0, #10
   16418:	bl	1256c <fputc@plt>
   1641c:	nop			; (mov r0, r0)
   16420:	sub	sp, fp, #4
   16424:	pop	{fp, pc}
   16428:	andeq	r4, r6, r0, lsl #16
   1642c:	push	{fp, lr}
   16430:	add	fp, sp, #4
   16434:	sub	sp, sp, #16
   16438:	str	r0, [fp, #-16]
   1643c:	str	r1, [fp, #-20]	; 0xffffffec
   16440:	mov	r3, #0
   16444:	str	r3, [fp, #-8]
   16448:	ldr	r3, [fp, #-20]	; 0xffffffec
   1644c:	cmp	r3, #0
   16450:	beq	16518 <__assert_fail@plt+0x3e2c>
   16454:	ldr	r3, [fp, #-20]	; 0xffffffec
   16458:	ldr	r3, [r3]
   1645c:	ldr	r2, [pc, #192]	; 16524 <__assert_fail@plt+0x3e38>
   16460:	cmp	r3, r2
   16464:	beq	1647c <__assert_fail@plt+0x3d90>
   16468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1646c:	ldr	r3, [r3]
   16470:	ldr	r2, [pc, #176]	; 16528 <__assert_fail@plt+0x3e3c>
   16474:	cmp	r3, r2
   16478:	bne	164a4 <__assert_fail@plt+0x3db8>
   1647c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16480:	ldr	r3, [r3, #156]	; 0x9c
   16484:	cmp	r3, #0
   16488:	bne	164a4 <__assert_fail@plt+0x3db8>
   1648c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16490:	ldr	r3, [r3, #160]	; 0xa0
   16494:	mov	r1, r3
   16498:	ldr	r0, [fp, #-16]
   1649c:	bl	1642c <__assert_fail@plt+0x3d40>
   164a0:	b	16518 <__assert_fail@plt+0x3e2c>
   164a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   164a8:	ldr	r3, [r3, #156]	; 0x9c
   164ac:	cmp	r3, #0
   164b0:	bne	164c4 <__assert_fail@plt+0x3dd8>
   164b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   164b8:	ldr	r3, [r3, #160]	; 0xa0
   164bc:	cmp	r3, #0
   164c0:	beq	164cc <__assert_fail@plt+0x3de0>
   164c4:	mov	r3, #1
   164c8:	str	r3, [fp, #-8]
   164cc:	ldr	r3, [fp, #-8]
   164d0:	cmp	r3, #0
   164d4:	beq	164ec <__assert_fail@plt+0x3e00>
   164d8:	ldr	r3, [fp, #-16]
   164dc:	mov	r2, #3
   164e0:	mov	r1, #1
   164e4:	ldr	r0, [pc, #64]	; 1652c <__assert_fail@plt+0x3e40>
   164e8:	bl	12224 <fwrite@plt>
   164ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   164f0:	ldr	r0, [fp, #-16]
   164f4:	bl	16534 <__assert_fail@plt+0x3e48>
   164f8:	ldr	r3, [fp, #-8]
   164fc:	cmp	r3, #0
   16500:	beq	16518 <__assert_fail@plt+0x3e2c>
   16504:	ldr	r3, [fp, #-16]
   16508:	mov	r2, #3
   1650c:	mov	r1, #1
   16510:	ldr	r0, [pc, #24]	; 16530 <__assert_fail@plt+0x3e44>
   16514:	bl	12224 <fwrite@plt>
   16518:	nop			; (mov r0, r0)
   1651c:	sub	sp, fp, #4
   16520:	pop	{fp, pc}
   16524:	andeq	r5, r1, r8, ror r6
   16528:	andeq	r4, r1, r4, lsr r1
   1652c:	andeq	r4, r6, r8, lsl #16
   16530:	andeq	r4, r6, ip, lsl #16
   16534:	push	{fp, lr}
   16538:	add	fp, sp, #4
   1653c:	sub	sp, sp, #24
   16540:	str	r0, [fp, #-16]
   16544:	str	r1, [fp, #-20]	; 0xffffffec
   16548:	ldr	r3, [fp, #-20]	; 0xffffffec
   1654c:	cmp	r3, #0
   16550:	beq	1669c <__assert_fail@plt+0x3fb0>
   16554:	ldr	r3, [fp, #-20]	; 0xffffffec
   16558:	ldr	r3, [r3, #156]	; 0x9c
   1655c:	mov	r1, r3
   16560:	ldr	r0, [fp, #-16]
   16564:	bl	1642c <__assert_fail@plt+0x3d40>
   16568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1656c:	ldrb	r3, [r3, #18]
   16570:	cmp	r3, #0
   16574:	beq	16580 <__assert_fail@plt+0x3e94>
   16578:	ldr	r2, [pc, #296]	; 166a8 <__assert_fail@plt+0x3fbc>
   1657c:	b	16584 <__assert_fail@plt+0x3e98>
   16580:	ldr	r2, [pc, #292]	; 166ac <__assert_fail@plt+0x3fc0>
   16584:	ldr	r3, [fp, #-20]	; 0xffffffec
   16588:	ldrb	r3, [r3, #19]
   1658c:	cmp	r3, #0
   16590:	beq	1659c <__assert_fail@plt+0x3eb0>
   16594:	ldr	r1, [pc, #276]	; 166b0 <__assert_fail@plt+0x3fc4>
   16598:	b	165a0 <__assert_fail@plt+0x3eb4>
   1659c:	ldr	r1, [pc, #264]	; 166ac <__assert_fail@plt+0x3fc0>
   165a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   165a4:	ldrb	r3, [r3, #20]
   165a8:	cmp	r3, #0
   165ac:	beq	165b8 <__assert_fail@plt+0x3ecc>
   165b0:	ldr	r3, [pc, #252]	; 166b4 <__assert_fail@plt+0x3fc8>
   165b4:	b	165bc <__assert_fail@plt+0x3ed0>
   165b8:	ldr	r3, [pc, #236]	; 166ac <__assert_fail@plt+0x3fc0>
   165bc:	str	r3, [sp]
   165c0:	mov	r3, r1
   165c4:	ldr	r1, [pc, #236]	; 166b8 <__assert_fail@plt+0x3fcc>
   165c8:	ldr	r0, [fp, #-16]
   165cc:	bl	123f8 <fprintf@plt>
   165d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   165d4:	ldr	r0, [fp, #-16]
   165d8:	bl	17c54 <__assert_fail@plt+0x5568>
   165dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   165e0:	vldr	s15, [r3, #28]
   165e4:	vcvt.f64.f32	d7, s15
   165e8:	vmov	r2, r3, d7
   165ec:	ldr	r1, [pc, #200]	; 166bc <__assert_fail@plt+0x3fd0>
   165f0:	ldr	r0, [fp, #-16]
   165f4:	bl	123f8 <fprintf@plt>
   165f8:	ldr	r3, [pc, #192]	; 166c0 <__assert_fail@plt+0x3fd4>
   165fc:	ldr	r3, [r3, #44]	; 0x2c
   16600:	and	r3, r3, #64	; 0x40
   16604:	cmp	r3, #0
   16608:	beq	16688 <__assert_fail@plt+0x3f9c>
   1660c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16610:	ldr	r2, [r3, #168]	; 0xa8
   16614:	ldr	r3, [fp, #-20]	; 0xffffffec
   16618:	ldr	r3, [r3, #164]	; 0xa4
   1661c:	ldr	r1, [pc, #160]	; 166c4 <__assert_fail@plt+0x3fd8>
   16620:	ldr	r0, [fp, #-16]
   16624:	bl	123f8 <fprintf@plt>
   16628:	ldr	r3, [fp, #-20]	; 0xffffffec
   1662c:	ldr	r3, [r3, #164]	; 0xa4
   16630:	cmp	r3, #0
   16634:	beq	16674 <__assert_fail@plt+0x3f88>
   16638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1663c:	ldr	r3, [r3, #168]	; 0xa8
   16640:	vmov	s15, r3
   16644:	vcvt.f64.u32	d5, s15
   16648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1664c:	ldr	r3, [r3, #164]	; 0xa4
   16650:	vmov	s15, r3
   16654:	vcvt.f64.u32	d6, s15
   16658:	vdiv.f64	d7, d5, d6
   1665c:	vstr	d7, [fp, #-12]
   16660:	ldrd	r2, [fp, #-12]
   16664:	ldr	r1, [pc, #92]	; 166c8 <__assert_fail@plt+0x3fdc>
   16668:	ldr	r0, [fp, #-16]
   1666c:	bl	123f8 <fprintf@plt>
   16670:	b	16688 <__assert_fail@plt+0x3f9c>
   16674:	ldr	r3, [fp, #-16]
   16678:	mov	r2, #4
   1667c:	mov	r1, #1
   16680:	ldr	r0, [pc, #68]	; 166cc <__assert_fail@plt+0x3fe0>
   16684:	bl	12224 <fwrite@plt>
   16688:	ldr	r3, [fp, #-20]	; 0xffffffec
   1668c:	ldr	r3, [r3, #160]	; 0xa0
   16690:	mov	r1, r3
   16694:	ldr	r0, [fp, #-16]
   16698:	bl	1642c <__assert_fail@plt+0x3d40>
   1669c:	nop			; (mov r0, r0)
   166a0:	sub	sp, fp, #4
   166a4:	pop	{fp, pc}
   166a8:	andeq	r4, r6, r0, lsl r8
   166ac:	andeq	r4, r6, r0, lsr #16
   166b0:	andeq	r4, r6, r4, lsr #16
   166b4:	andeq	r4, r6, r4, lsr r8
   166b8:	andeq	r4, r6, r4, asr #16
   166bc:	andeq	r4, r6, ip, asr #16
   166c0:	andeq	sp, r7, ip, asr #32
   166c4:	andeq	r4, r6, r8, ror #16
   166c8:	andeq	r4, r6, r4, lsl #17
   166cc:	andeq	r4, r6, ip, lsl #17
   166d0:	push	{fp, lr}
   166d4:	add	fp, sp, #4
   166d8:	sub	sp, sp, #8
   166dc:	str	r0, [fp, #-8]
   166e0:	ldr	r3, [pc, #88]	; 16740 <__assert_fail@plt+0x4054>
   166e4:	ldr	r3, [r3, #44]	; 0x2c
   166e8:	and	r3, r3, #64	; 0x40
   166ec:	cmp	r3, #0
   166f0:	beq	16734 <__assert_fail@plt+0x4048>
   166f4:	ldr	r3, [pc, #72]	; 16744 <__assert_fail@plt+0x4058>
   166f8:	ldr	r3, [r3]
   166fc:	mov	r2, #42	; 0x2a
   16700:	mov	r1, #1
   16704:	ldr	r0, [pc, #60]	; 16748 <__assert_fail@plt+0x405c>
   16708:	bl	12224 <fwrite@plt>
   1670c:	ldr	r3, [pc, #48]	; 16744 <__assert_fail@plt+0x4058>
   16710:	ldr	r3, [r3]
   16714:	ldr	r1, [fp, #-8]
   16718:	mov	r0, r3
   1671c:	bl	16534 <__assert_fail@plt+0x3e48>
   16720:	ldr	r3, [pc, #28]	; 16744 <__assert_fail@plt+0x4058>
   16724:	ldr	r3, [r3]
   16728:	mov	r1, r3
   1672c:	mov	r0, #10
   16730:	bl	1256c <fputc@plt>
   16734:	nop			; (mov r0, r0)
   16738:	sub	sp, fp, #4
   1673c:	pop	{fp, pc}
   16740:	andeq	sp, r7, ip, asr #32
   16744:	andeq	ip, r7, r8, lsr #14
   16748:	muleq	r6, r4, r8
   1674c:	push	{fp, lr}
   16750:	add	fp, sp, #4
   16754:	sub	sp, sp, #16
   16758:	str	r0, [fp, #-16]
   1675c:	ldr	r3, [fp, #-16]
   16760:	str	r3, [fp, #-8]
   16764:	b	16960 <__assert_fail@plt+0x4274>
   16768:	ldr	r3, [fp, #-8]
   1676c:	ldr	r3, [r3]
   16770:	cmp	r3, #0
   16774:	bne	1678c <__assert_fail@plt+0x40a0>
   16778:	ldr	r3, [pc, #504]	; 16978 <__assert_fail@plt+0x428c>
   1677c:	ldr	r2, [pc, #504]	; 1697c <__assert_fail@plt+0x4290>
   16780:	ldr	r1, [pc, #504]	; 16980 <__assert_fail@plt+0x4294>
   16784:	ldr	r0, [pc, #504]	; 16984 <__assert_fail@plt+0x4298>
   16788:	bl	126ec <__assert_fail@plt>
   1678c:	ldr	r3, [fp, #-8]
   16790:	ldr	r3, [r3, #172]	; 0xac
   16794:	cmp	r3, #0
   16798:	bne	167b0 <__assert_fail@plt+0x40c4>
   1679c:	ldr	r3, [pc, #468]	; 16978 <__assert_fail@plt+0x428c>
   167a0:	ldr	r2, [pc, #480]	; 16988 <__assert_fail@plt+0x429c>
   167a4:	ldr	r1, [pc, #468]	; 16980 <__assert_fail@plt+0x4294>
   167a8:	ldr	r0, [pc, #476]	; 1698c <__assert_fail@plt+0x42a0>
   167ac:	bl	126ec <__assert_fail@plt>
   167b0:	ldr	r3, [fp, #-8]
   167b4:	ldr	r3, [r3, #172]	; 0xac
   167b8:	ldr	r3, [r3, #12]
   167bc:	cmp	r3, #0
   167c0:	beq	167f4 <__assert_fail@plt+0x4108>
   167c4:	ldr	r3, [fp, #-8]
   167c8:	ldr	r3, [r3, #172]	; 0xac
   167cc:	ldr	r2, [r3, #12]
   167d0:	ldr	r3, [fp, #-8]
   167d4:	ldr	r3, [r3]
   167d8:	cmp	r2, r3
   167dc:	beq	167f4 <__assert_fail@plt+0x4108>
   167e0:	ldr	r3, [pc, #400]	; 16978 <__assert_fail@plt+0x428c>
   167e4:	ldr	r2, [pc, #420]	; 16990 <__assert_fail@plt+0x42a4>
   167e8:	ldr	r1, [pc, #400]	; 16980 <__assert_fail@plt+0x4294>
   167ec:	ldr	r0, [pc, #416]	; 16994 <__assert_fail@plt+0x42a8>
   167f0:	bl	126ec <__assert_fail@plt>
   167f4:	ldr	r3, [fp, #-8]
   167f8:	ldr	r3, [r3, #172]	; 0xac
   167fc:	ldr	r3, [r3]
   16800:	cmp	r3, #6
   16804:	ldrls	pc, [pc, r3, lsl #2]
   16808:	b	16954 <__assert_fail@plt+0x4268>
   1680c:	andeq	r6, r1, r8, lsr #16
   16810:	andeq	r6, r1, r8, ror #17
   16814:	andeq	r6, r1, r8, lsr #16
   16818:	andeq	r6, r1, r8, ror #17
   1681c:	andeq	r6, r1, r8, ror #17
   16820:	andeq	r6, r1, r8, ror #17
   16824:	andeq	r6, r1, r8, ror r8
   16828:	ldr	r3, [fp, #-8]
   1682c:	ldr	r3, [r3, #172]	; 0xac
   16830:	ldr	r3, [r3]
   16834:	cmp	r3, #0
   16838:	bne	16850 <__assert_fail@plt+0x4164>
   1683c:	ldr	r3, [pc, #308]	; 16978 <__assert_fail@plt+0x428c>
   16840:	ldr	r2, [pc, #336]	; 16998 <__assert_fail@plt+0x42ac>
   16844:	ldr	r1, [pc, #308]	; 16980 <__assert_fail@plt+0x4294>
   16848:	ldr	r0, [pc, #332]	; 1699c <__assert_fail@plt+0x42b0>
   1684c:	bl	126ec <__assert_fail@plt>
   16850:	ldr	r3, [fp, #-8]
   16854:	ldr	r3, [r3, #172]	; 0xac
   16858:	ldr	r3, [r3]
   1685c:	cmp	r3, #2
   16860:	bne	16940 <__assert_fail@plt+0x4254>
   16864:	ldr	r3, [pc, #268]	; 16978 <__assert_fail@plt+0x428c>
   16868:	ldr	r2, [pc, #304]	; 169a0 <__assert_fail@plt+0x42b4>
   1686c:	ldr	r1, [pc, #268]	; 16980 <__assert_fail@plt+0x4294>
   16870:	ldr	r0, [pc, #300]	; 169a4 <__assert_fail@plt+0x42b8>
   16874:	bl	126ec <__assert_fail@plt>
   16878:	ldr	r3, [fp, #-8]
   1687c:	ldrb	r3, [r3, #16]
   16880:	cmp	r3, #0
   16884:	bne	1689c <__assert_fail@plt+0x41b0>
   16888:	ldr	r3, [pc, #232]	; 16978 <__assert_fail@plt+0x428c>
   1688c:	ldr	r2, [pc, #276]	; 169a8 <__assert_fail@plt+0x42bc>
   16890:	ldr	r1, [pc, #232]	; 16980 <__assert_fail@plt+0x4294>
   16894:	ldr	r0, [pc, #272]	; 169ac <__assert_fail@plt+0x42c0>
   16898:	bl	126ec <__assert_fail@plt>
   1689c:	ldr	r3, [fp, #-8]
   168a0:	ldr	r3, [r3]
   168a4:	ldr	r2, [pc, #260]	; 169b0 <__assert_fail@plt+0x42c4>
   168a8:	cmp	r3, r2
   168ac:	beq	16948 <__assert_fail@plt+0x425c>
   168b0:	ldr	r3, [fp, #-8]
   168b4:	ldr	r3, [r3]
   168b8:	ldr	r2, [pc, #244]	; 169b4 <__assert_fail@plt+0x42c8>
   168bc:	cmp	r3, r2
   168c0:	beq	16948 <__assert_fail@plt+0x425c>
   168c4:	ldr	r3, [fp, #-8]
   168c8:	ldrb	r3, [r3, #17]
   168cc:	cmp	r3, #0
   168d0:	bne	16948 <__assert_fail@plt+0x425c>
   168d4:	ldr	r3, [pc, #156]	; 16978 <__assert_fail@plt+0x428c>
   168d8:	ldr	r2, [pc, #216]	; 169b8 <__assert_fail@plt+0x42cc>
   168dc:	ldr	r1, [pc, #156]	; 16980 <__assert_fail@plt+0x4294>
   168e0:	ldr	r0, [pc, #212]	; 169bc <__assert_fail@plt+0x42d0>
   168e4:	bl	126ec <__assert_fail@plt>
   168e8:	ldr	r3, [fp, #-8]
   168ec:	ldrb	r3, [r3, #17]
   168f0:	eor	r3, r3, #1
   168f4:	uxtb	r3, r3
   168f8:	cmp	r3, #0
   168fc:	bne	16914 <__assert_fail@plt+0x4228>
   16900:	ldr	r3, [pc, #112]	; 16978 <__assert_fail@plt+0x428c>
   16904:	ldr	r2, [pc, #180]	; 169c0 <__assert_fail@plt+0x42d4>
   16908:	ldr	r1, [pc, #112]	; 16980 <__assert_fail@plt+0x4294>
   1690c:	ldr	r0, [pc, #176]	; 169c4 <__assert_fail@plt+0x42d8>
   16910:	bl	126ec <__assert_fail@plt>
   16914:	ldr	r3, [fp, #-8]
   16918:	ldrb	r3, [r3, #16]
   1691c:	eor	r3, r3, #1
   16920:	uxtb	r3, r3
   16924:	cmp	r3, #0
   16928:	bne	16950 <__assert_fail@plt+0x4264>
   1692c:	ldr	r3, [pc, #68]	; 16978 <__assert_fail@plt+0x428c>
   16930:	ldr	r2, [pc, #144]	; 169c8 <__assert_fail@plt+0x42dc>
   16934:	ldr	r1, [pc, #68]	; 16980 <__assert_fail@plt+0x4294>
   16938:	ldr	r0, [pc, #140]	; 169cc <__assert_fail@plt+0x42e0>
   1693c:	bl	126ec <__assert_fail@plt>
   16940:	nop			; (mov r0, r0)
   16944:	b	16954 <__assert_fail@plt+0x4268>
   16948:	nop			; (mov r0, r0)
   1694c:	b	16954 <__assert_fail@plt+0x4268>
   16950:	nop			; (mov r0, r0)
   16954:	ldr	r3, [fp, #-8]
   16958:	ldr	r3, [r3, #152]	; 0x98
   1695c:	str	r3, [fp, #-8]
   16960:	ldr	r3, [fp, #-8]
   16964:	cmp	r3, #0
   16968:	bne	16768 <__assert_fail@plt+0x407c>
   1696c:	nop			; (mov r0, r0)
   16970:	sub	sp, fp, #4
   16974:	pop	{fp, pc}
   16978:	andeq	r4, r6, ip, lsl sl
   1697c:	andeq	r0, r0, lr, lsl r5
   16980:	ldrdeq	r4, [r6], -r8
   16984:	andeq	r4, r6, r0, asr #17
   16988:	andeq	r0, r0, r1, lsr #10
   1698c:	ldrdeq	r4, [r6], -r8
   16990:	andeq	r0, r0, sl, lsr #10
   16994:	strdeq	r4, [r6], -r0
   16998:	andeq	r0, r0, sl, lsr r5
   1699c:	andeq	r4, r6, ip, lsl r9
   169a0:	andeq	r0, r0, fp, lsr r5
   169a4:	andeq	r4, r6, r0, asr #18
   169a8:	andeq	r0, r0, pc, lsr r5
   169ac:	andeq	r4, r6, r0, ror r9
   169b0:	andeq	r5, r1, r8, ror #19
   169b4:	andeq	r5, r1, r8, lsl #21
   169b8:	andeq	r0, r0, r5, asr #10
   169bc:	andeq	r4, r6, r0, lsl #19
   169c0:	andeq	r0, r0, r3, asr r5
   169c4:	muleq	r6, r4, r9
   169c8:	andeq	r0, r0, r4, asr r5
   169cc:	andeq	r4, r6, ip, lsr #19
   169d0:	push	{r4, fp, lr}
   169d4:	add	fp, sp, #8
   169d8:	sub	sp, sp, #20
   169dc:	str	r0, [fp, #-16]
   169e0:	str	r1, [fp, #-20]	; 0xffffffec
   169e4:	str	r2, [fp, #-24]	; 0xffffffe8
   169e8:	mov	r0, #8
   169ec:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   169f0:	mov	r3, r0
   169f4:	mov	r2, r3
   169f8:	ldr	r3, [fp, #-16]
   169fc:	str	r2, [r3, #104]	; 0x68
   16a00:	ldr	r3, [fp, #-16]
   16a04:	ldr	r3, [r3, #104]	; 0x68
   16a08:	mov	r2, #0
   16a0c:	str	r2, [r3, #4]
   16a10:	ldr	r3, [fp, #-16]
   16a14:	ldr	r4, [r3, #104]	; 0x68
   16a18:	mov	r2, #0
   16a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a20:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a24:	bl	2feb0 <__assert_fail@plt+0x1d7c4>
   16a28:	mov	r3, r0
   16a2c:	str	r3, [r4]
   16a30:	ldr	r3, [fp, #-16]
   16a34:	ldr	r3, [r3, #104]	; 0x68
   16a38:	ldr	r3, [r3]
   16a3c:	cmp	r3, #0
   16a40:	bge	16a4c <__assert_fail@plt+0x4360>
   16a44:	mov	r3, #0
   16a48:	b	16a68 <__assert_fail@plt+0x437c>
   16a4c:	ldr	r3, [fp, #-16]
   16a50:	ldr	r3, [r3, #104]	; 0x68
   16a54:	ldr	r3, [r3]
   16a58:	mov	r1, #1
   16a5c:	mov	r0, r3
   16a60:	bl	2a010 <__assert_fail@plt+0x17924>
   16a64:	mov	r3, #1
   16a68:	mov	r0, r3
   16a6c:	sub	sp, fp, #8
   16a70:	pop	{r4, fp, pc}
   16a74:	push	{fp, lr}
   16a78:	add	fp, sp, #4
   16a7c:	sub	sp, sp, #16
   16a80:	str	r0, [fp, #-16]
   16a84:	ldr	r3, [fp, #-16]
   16a88:	ldr	r3, [r3, #76]	; 0x4c
   16a8c:	cmp	r3, #0
   16a90:	bne	16b40 <__assert_fail@plt+0x4454>
   16a94:	ldr	r3, [fp, #-16]
   16a98:	ldr	r3, [r3, #76]	; 0x4c
   16a9c:	cmp	r3, #0
   16aa0:	beq	16ab8 <__assert_fail@plt+0x43cc>
   16aa4:	ldr	r3, [pc, #164]	; 16b50 <__assert_fail@plt+0x4464>
   16aa8:	mov	r2, #71	; 0x47
   16aac:	ldr	r1, [pc, #160]	; 16b54 <__assert_fail@plt+0x4468>
   16ab0:	ldr	r0, [pc, #160]	; 16b58 <__assert_fail@plt+0x446c>
   16ab4:	bl	126ec <__assert_fail@plt>
   16ab8:	ldr	r3, [pc, #156]	; 16b5c <__assert_fail@plt+0x4470>
   16abc:	ldr	r3, [r3, #12]
   16ac0:	mov	r1, #47	; 0x2f
   16ac4:	mov	r0, r3
   16ac8:	bl	123c8 <strchr@plt>
   16acc:	mov	r3, r0
   16ad0:	cmp	r3, #0
   16ad4:	beq	16b20 <__assert_fail@plt+0x4434>
   16ad8:	ldr	r3, [pc, #124]	; 16b5c <__assert_fail@plt+0x4470>
   16adc:	ldr	r3, [r3, #12]
   16ae0:	mov	r0, r3
   16ae4:	bl	2a558 <__assert_fail@plt+0x17e6c>
   16ae8:	mov	r3, r0
   16aec:	str	r3, [fp, #-8]
   16af0:	ldr	r3, [pc, #100]	; 16b5c <__assert_fail@plt+0x4470>
   16af4:	ldr	r3, [r3, #16]
   16af8:	ldr	r2, [fp, #-8]
   16afc:	mov	r1, r3
   16b00:	ldr	r0, [fp, #-16]
   16b04:	bl	169d0 <__assert_fail@plt+0x42e4>
   16b08:	mov	r3, r0
   16b0c:	strb	r3, [fp, #-9]
   16b10:	ldr	r0, [fp, #-8]
   16b14:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   16b18:	ldrb	r3, [fp, #-9]
   16b1c:	b	16b44 <__assert_fail@plt+0x4458>
   16b20:	ldr	r3, [pc, #52]	; 16b5c <__assert_fail@plt+0x4470>
   16b24:	ldr	r3, [r3, #16]
   16b28:	ldr	r2, [pc, #48]	; 16b60 <__assert_fail@plt+0x4474>
   16b2c:	mov	r1, r3
   16b30:	ldr	r0, [fp, #-16]
   16b34:	bl	169d0 <__assert_fail@plt+0x42e4>
   16b38:	mov	r3, r0
   16b3c:	b	16b44 <__assert_fail@plt+0x4458>
   16b40:	mov	r3, #1
   16b44:	mov	r0, r3
   16b48:	sub	sp, fp, #4
   16b4c:	pop	{fp, pc}
   16b50:	andeq	r4, r6, r4, ror #23
   16b54:	andeq	r4, r6, r0, lsr sl
   16b58:	andeq	r4, r6, r8, lsr sl
   16b5c:	andeq	sp, r7, r0, lsr #32
   16b60:	andeq	r4, r6, ip, asr #20
   16b64:	push	{r4, r5, r6, r7, fp, lr}
   16b68:	add	fp, sp, #20
   16b6c:	sub	sp, sp, #72	; 0x48
   16b70:	str	r0, [fp, #-56]	; 0xffffffc8
   16b74:	str	r1, [fp, #-60]	; 0xffffffc4
   16b78:	str	r2, [fp, #-64]	; 0xffffffc0
   16b7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b80:	add	r3, r3, #40	; 0x28
   16b84:	str	r3, [fp, #-48]	; 0xffffffd0
   16b88:	mov	r3, #0
   16b8c:	str	r3, [fp, #-24]	; 0xffffffe8
   16b90:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b94:	ldr	r3, [r3]
   16b98:	mov	r0, r3
   16b9c:	bl	1c7a0 <__assert_fail@plt+0xa0b4>
   16ba0:	mov	r3, r0
   16ba4:	strb	r3, [fp, #-49]	; 0xffffffcf
   16ba8:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16bac:	cmp	r3, #0
   16bb0:	beq	16c60 <__assert_fail@plt+0x4574>
   16bb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16bb8:	bl	16a74 <__assert_fail@plt+0x4388>
   16bbc:	mov	r3, r0
   16bc0:	eor	r3, r3, #1
   16bc4:	uxtb	r3, r3
   16bc8:	cmp	r3, #0
   16bcc:	beq	16c08 <__assert_fail@plt+0x451c>
   16bd0:	bl	12404 <__errno_location@plt>
   16bd4:	mov	r3, r0
   16bd8:	ldr	r4, [r3]
   16bdc:	ldr	r0, [pc, #712]	; 16eac <__assert_fail@plt+0x47c0>
   16be0:	bl	12398 <gettext@plt>
   16be4:	mov	r5, r0
   16be8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16bec:	mov	r0, #0
   16bf0:	bl	1c7fc <__assert_fail@plt+0xa110>
   16bf4:	mov	r3, r0
   16bf8:	mov	r2, r5
   16bfc:	mov	r1, r4
   16c00:	mov	r0, #1
   16c04:	bl	122b4 <error@plt>
   16c08:	ldr	r3, [pc, #672]	; 16eb0 <__assert_fail@plt+0x47c4>
   16c0c:	ldr	r3, [r3, #12]
   16c10:	mov	r0, r3
   16c14:	bl	2a368 <__assert_fail@plt+0x17c7c>
   16c18:	mov	r3, r0
   16c1c:	str	r3, [fp, #-24]	; 0xffffffe8
   16c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c24:	str	r3, [fp, #-28]	; 0xffffffe4
   16c28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c2c:	ldrb	r3, [r3]
   16c30:	cmp	r3, #47	; 0x2f
   16c34:	bne	16c4c <__assert_fail@plt+0x4560>
   16c38:	mov	r3, #0
   16c3c:	str	r3, [fp, #-36]	; 0xffffffdc
   16c40:	mov	r3, #0
   16c44:	str	r3, [fp, #-40]	; 0xffffffd8
   16c48:	b	16ca4 <__assert_fail@plt+0x45b8>
   16c4c:	ldr	r3, [pc, #608]	; 16eb4 <__assert_fail@plt+0x47c8>
   16c50:	str	r3, [fp, #-36]	; 0xffffffdc
   16c54:	mov	r3, #2
   16c58:	str	r3, [fp, #-40]	; 0xffffffd8
   16c5c:	b	16ca4 <__assert_fail@plt+0x45b8>
   16c60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c64:	ldr	r2, [r3, #104]	; 0x68
   16c68:	ldr	r3, [pc, #584]	; 16eb8 <__assert_fail@plt+0x47cc>
   16c6c:	ldr	r3, [r3]
   16c70:	cmp	r2, r3
   16c74:	beq	16c8c <__assert_fail@plt+0x45a0>
   16c78:	ldr	r3, [pc, #572]	; 16ebc <__assert_fail@plt+0x47d0>
   16c7c:	mov	r2, #148	; 0x94
   16c80:	ldr	r1, [pc, #568]	; 16ec0 <__assert_fail@plt+0x47d4>
   16c84:	ldr	r0, [pc, #568]	; 16ec4 <__assert_fail@plt+0x47d8>
   16c88:	bl	126ec <__assert_fail@plt>
   16c8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c90:	str	r3, [fp, #-28]	; 0xffffffe4
   16c94:	mov	r3, #0
   16c98:	str	r3, [fp, #-36]	; 0xffffffdc
   16c9c:	mov	r3, #0
   16ca0:	str	r3, [fp, #-40]	; 0xffffffd8
   16ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ca8:	ldrb	r3, [r3]
   16cac:	cmp	r3, #0
   16cb0:	beq	16d28 <__assert_fail@plt+0x463c>
   16cb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16cb8:	add	r4, r3, #4
   16cbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16cc0:	add	r5, r3, #48	; 0x30
   16cc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16cc8:	bl	123bc <strlen@plt>
   16ccc:	mov	r3, r0
   16cd0:	add	r2, r3, #1
   16cd4:	mov	r3, #0
   16cd8:	str	r3, [sp, #8]
   16cdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16ce0:	str	r3, [sp, #4]
   16ce4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ce8:	str	r3, [sp]
   16cec:	mov	r3, r2
   16cf0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16cf4:	mov	r1, r5
   16cf8:	mov	r0, r4
   16cfc:	bl	268dc <__assert_fail@plt+0x141f0>
   16d00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d04:	ldr	r3, [r3, #76]	; 0x4c
   16d08:	cmp	r3, #0
   16d0c:	beq	16d1c <__assert_fail@plt+0x4630>
   16d10:	ldr	r3, [pc, #408]	; 16eb0 <__assert_fail@plt+0x47c4>
   16d14:	mov	r2, #1
   16d18:	strb	r2, [r3, #32]
   16d1c:	mov	r3, #1
   16d20:	strb	r3, [fp, #-29]	; 0xffffffe3
   16d24:	b	16e68 <__assert_fail@plt+0x477c>
   16d28:	mov	r3, #0
   16d2c:	str	r3, [fp, #-44]	; 0xffffffd4
   16d30:	b	16dd0 <__assert_fail@plt+0x46e4>
   16d34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d38:	add	r4, r3, #4
   16d3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d40:	add	r5, r3, #48	; 0x30
   16d44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d48:	ldr	r2, [r3, #92]	; 0x5c
   16d4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d50:	lsl	r3, r3, #2
   16d54:	add	r3, r2, r3
   16d58:	ldr	r6, [r3]
   16d5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d60:	ldr	r2, [r3, #92]	; 0x5c
   16d64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d68:	lsl	r3, r3, #2
   16d6c:	add	r3, r2, r3
   16d70:	ldr	r3, [r3]
   16d74:	mov	r0, r3
   16d78:	bl	123bc <strlen@plt>
   16d7c:	mov	r7, r0
   16d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d84:	bl	123bc <strlen@plt>
   16d88:	mov	r2, r0
   16d8c:	mov	r3, #0
   16d90:	str	r3, [sp, #16]
   16d94:	str	r2, [sp, #12]
   16d98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d9c:	str	r3, [sp, #8]
   16da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16da4:	str	r3, [sp, #4]
   16da8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16dac:	str	r3, [sp]
   16db0:	mov	r3, r7
   16db4:	mov	r2, r6
   16db8:	mov	r1, r5
   16dbc:	mov	r0, r4
   16dc0:	bl	260dc <__assert_fail@plt+0x139f0>
   16dc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16dc8:	add	r3, r3, #1
   16dcc:	str	r3, [fp, #-44]	; 0xffffffd4
   16dd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16dd4:	ldr	r2, [r3, #96]	; 0x60
   16dd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ddc:	cmp	r2, r3
   16de0:	bgt	16d34 <__assert_fail@plt+0x4648>
   16de4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16de8:	add	r2, r3, #4
   16dec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16df0:	add	r3, r3, #48	; 0x30
   16df4:	mov	r1, r3
   16df8:	mov	r0, r2
   16dfc:	bl	26668 <__assert_fail@plt+0x13f7c>
   16e00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e04:	ldr	r3, [r3, #108]	; 0x6c
   16e08:	and	r3, r3, #127	; 0x7f
   16e0c:	cmp	r3, #0
   16e10:	bne	16e44 <__assert_fail@plt+0x4758>
   16e14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e18:	ldr	r3, [r3, #108]	; 0x6c
   16e1c:	asr	r3, r3, #8
   16e20:	uxtb	r3, r3
   16e24:	cmp	r3, #0
   16e28:	bne	16e38 <__assert_fail@plt+0x474c>
   16e2c:	mov	r3, #1
   16e30:	strb	r3, [fp, #-29]	; 0xffffffe3
   16e34:	b	16e4c <__assert_fail@plt+0x4760>
   16e38:	mov	r3, #0
   16e3c:	strb	r3, [fp, #-29]	; 0xffffffe3
   16e40:	b	16e4c <__assert_fail@plt+0x4760>
   16e44:	mov	r3, #0
   16e48:	strb	r3, [fp, #-29]	; 0xffffffe3
   16e4c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16e50:	cmp	r3, #0
   16e54:	beq	16e68 <__assert_fail@plt+0x477c>
   16e58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e5c:	ldr	r3, [r3, #104]	; 0x68
   16e60:	mov	r0, r3
   16e64:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   16e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e6c:	cmp	r3, #0
   16e70:	beq	16e9c <__assert_fail@plt+0x47b0>
   16e74:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16e78:	cmp	r3, #0
   16e7c:	bne	16e94 <__assert_fail@plt+0x47a8>
   16e80:	ldr	r3, [pc, #52]	; 16ebc <__assert_fail@plt+0x47d0>
   16e84:	mov	r2, #208	; 0xd0
   16e88:	ldr	r1, [pc, #48]	; 16ec0 <__assert_fail@plt+0x47d4>
   16e8c:	ldr	r0, [pc, #52]	; 16ec8 <__assert_fail@plt+0x47dc>
   16e90:	bl	126ec <__assert_fail@plt>
   16e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e98:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   16e9c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   16ea0:	mov	r0, r3
   16ea4:	sub	sp, fp, #20
   16ea8:	pop	{r4, r5, r6, r7, fp, pc}
   16eac:	andeq	r4, r6, r0, asr sl
   16eb0:	andeq	sp, r7, r0, lsr #32
   16eb4:	muleq	r6, r4, sl
   16eb8:	andeq	ip, r7, ip, asr #14
   16ebc:	strdeq	r4, [r6], -r4	; <UNPREDICTABLE>
   16ec0:	andeq	r4, r6, r0, lsr sl
   16ec4:	muleq	r6, r8, sl
   16ec8:			; <UNDEFINED> instruction: 0x00064abc
   16ecc:	push	{r4, fp, lr}
   16ed0:	add	fp, sp, #8
   16ed4:	sub	sp, sp, #36	; 0x24
   16ed8:	mov	r3, r0
   16edc:	str	r1, [fp, #-36]	; 0xffffffdc
   16ee0:	strb	r3, [fp, #-29]	; 0xffffffe3
   16ee4:	mov	r3, #1
   16ee8:	strb	r3, [fp, #-13]
   16eec:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   16ef0:	cmp	r3, #0
   16ef4:	beq	16fa0 <__assert_fail@plt+0x48b4>
   16ef8:	ldr	r2, [pc, #344]	; 17058 <__assert_fail@plt+0x496c>
   16efc:	sub	r3, fp, #24
   16f00:	ldm	r2, {r0, r1, r2}
   16f04:	stmia	r3!, {r0, r1}
   16f08:	strh	r2, [r3]
   16f0c:	mov	r0, #0
   16f10:	bl	126a4 <close@plt>
   16f14:	mov	r3, r0
   16f18:	cmp	r3, #0
   16f1c:	bge	16f54 <__assert_fail@plt+0x4868>
   16f20:	bl	12404 <__errno_location@plt>
   16f24:	mov	r3, r0
   16f28:	ldr	r4, [r3]
   16f2c:	ldr	r0, [pc, #296]	; 1705c <__assert_fail@plt+0x4970>
   16f30:	bl	12398 <gettext@plt>
   16f34:	mov	r3, r0
   16f38:	mov	r2, r3
   16f3c:	mov	r1, r4
   16f40:	mov	r0, #0
   16f44:	bl	122b4 <error@plt>
   16f48:	mov	r3, #0
   16f4c:	strb	r3, [fp, #-13]
   16f50:	b	16fa0 <__assert_fail@plt+0x48b4>
   16f54:	sub	r3, fp, #24
   16f58:	mov	r1, #131072	; 0x20000
   16f5c:	mov	r0, r3
   16f60:	bl	2a698 <__assert_fail@plt+0x17fac>
   16f64:	mov	r3, r0
   16f68:	cmp	r3, #0
   16f6c:	bge	16fa0 <__assert_fail@plt+0x48b4>
   16f70:	bl	12404 <__errno_location@plt>
   16f74:	mov	r3, r0
   16f78:	ldr	r4, [r3]
   16f7c:	sub	r3, fp, #24
   16f80:	mov	r1, r3
   16f84:	mov	r0, #0
   16f88:	bl	1c7fc <__assert_fail@plt+0xa110>
   16f8c:	mov	r3, r0
   16f90:	ldr	r2, [pc, #200]	; 17060 <__assert_fail@plt+0x4974>
   16f94:	mov	r1, r4
   16f98:	mov	r0, #0
   16f9c:	bl	122b4 <error@plt>
   16fa0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16fa4:	bl	3bc68 <__assert_fail@plt+0x2957c>
   16fa8:	mov	r3, r0
   16fac:	cmp	r3, #0
   16fb0:	beq	17048 <__assert_fail@plt+0x495c>
   16fb4:	bl	12404 <__errno_location@plt>
   16fb8:	mov	r3, r0
   16fbc:	ldr	r4, [r3]
   16fc0:	ldr	r0, [pc, #156]	; 17064 <__assert_fail@plt+0x4978>
   16fc4:	bl	12398 <gettext@plt>
   16fc8:	mov	r1, r0
   16fcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16fd0:	ldr	r3, [r3]
   16fd4:	cmp	r3, #0
   16fd8:	bge	16ff4 <__assert_fail@plt+0x4908>
   16fdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16fe0:	ldr	r3, [r3, #4]
   16fe4:	cmp	r3, #0
   16fe8:	beq	16ff4 <__assert_fail@plt+0x4908>
   16fec:	ldr	r2, [pc, #116]	; 17068 <__assert_fail@plt+0x497c>
   16ff0:	b	16ff8 <__assert_fail@plt+0x490c>
   16ff4:	ldr	r2, [pc, #112]	; 1706c <__assert_fail@plt+0x4980>
   16ff8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ffc:	ldr	r3, [r3]
   17000:	cmp	r3, #0
   17004:	bge	17024 <__assert_fail@plt+0x4938>
   17008:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1700c:	ldr	r3, [r3, #4]
   17010:	cmp	r3, #0
   17014:	beq	17024 <__assert_fail@plt+0x4938>
   17018:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1701c:	ldr	r3, [r3, #4]
   17020:	b	17028 <__assert_fail@plt+0x493c>
   17024:	ldr	r3, [pc, #64]	; 1706c <__assert_fail@plt+0x4980>
   17028:	str	r3, [sp]
   1702c:	mov	r3, r2
   17030:	mov	r2, r1
   17034:	mov	r1, r4
   17038:	mov	r0, #0
   1703c:	bl	122b4 <error@plt>
   17040:	mov	r3, #0
   17044:	strb	r3, [fp, #-13]
   17048:	ldrb	r3, [fp, #-13]
   1704c:	mov	r0, r3
   17050:	sub	sp, fp, #8
   17054:	pop	{r4, fp, pc}
   17058:	andeq	r4, r6, ip, lsl #22
   1705c:	andeq	r4, r6, r4, asr #21
   17060:	andeq	r4, r6, r0, ror #21
   17064:	andeq	r4, r6, r4, ror #21
   17068:	andeq	r4, r6, r4, lsl #22
   1706c:	andeq	r4, r6, r8, lsl #22
   17070:	push	{r4, r5, fp, lr}
   17074:	add	fp, sp, #12
   17078:	sub	sp, sp, #40	; 0x28
   1707c:	str	r0, [fp, #-32]	; 0xffffffe0
   17080:	str	r1, [fp, #-36]	; 0xffffffdc
   17084:	str	r2, [fp, #-40]	; 0xffffffd8
   17088:	str	r3, [fp, #-44]	; 0xffffffd4
   1708c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17090:	str	r3, [fp, #-20]	; 0xffffffec
   17094:	ldr	r3, [pc, #996]	; 17480 <__assert_fail@plt+0x4d94>
   17098:	ldr	r3, [r3, #44]	; 0x2c
   1709c:	and	r3, r3, #32
   170a0:	cmp	r3, #0
   170a4:	beq	17154 <__assert_fail@plt+0x4a68>
   170a8:	ldr	r3, [pc, #980]	; 17484 <__assert_fail@plt+0x4d98>
   170ac:	ldr	r0, [r3]
   170b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   170b4:	ldr	r3, [r3, #48]	; 0x30
   170b8:	mov	r2, r3
   170bc:	mov	r3, #0
   170c0:	subs	r2, r2, #1
   170c4:	sbc	r3, r3, #0
   170c8:	ldr	r1, [pc, #952]	; 17488 <__assert_fail@plt+0x4d9c>
   170cc:	bl	123f8 <fprintf@plt>
   170d0:	mov	r3, #0
   170d4:	str	r3, [fp, #-16]
   170d8:	b	17128 <__assert_fail@plt+0x4a3c>
   170dc:	ldr	r3, [pc, #928]	; 17484 <__assert_fail@plt+0x4d98>
   170e0:	ldr	r4, [r3]
   170e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   170e8:	ldr	r2, [r3, #52]	; 0x34
   170ec:	ldr	r3, [fp, #-16]
   170f0:	lsl	r3, r3, #2
   170f4:	add	r3, r2, r3
   170f8:	ldr	r3, [r3]
   170fc:	mov	r1, r3
   17100:	mov	r0, #0
   17104:	bl	1c7fc <__assert_fail@plt+0xa110>
   17108:	mov	r3, r0
   1710c:	mov	r2, r3
   17110:	ldr	r1, [pc, #884]	; 1748c <__assert_fail@plt+0x4da0>
   17114:	mov	r0, r4
   17118:	bl	123f8 <fprintf@plt>
   1711c:	ldr	r3, [fp, #-16]
   17120:	add	r3, r3, #1
   17124:	str	r3, [fp, #-16]
   17128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1712c:	ldr	r3, [r3, #48]	; 0x30
   17130:	sub	r2, r3, #1
   17134:	ldr	r3, [fp, #-16]
   17138:	cmp	r2, r3
   1713c:	bhi	170dc <__assert_fail@plt+0x49f0>
   17140:	ldr	r3, [pc, #828]	; 17484 <__assert_fail@plt+0x4d98>
   17144:	ldr	r3, [r3]
   17148:	mov	r1, r3
   1714c:	mov	r0, #10
   17150:	bl	1256c <fputc@plt>
   17154:	ldr	r3, [pc, #820]	; 17490 <__assert_fail@plt+0x4da4>
   17158:	ldr	r3, [r3]
   1715c:	mov	r0, r3
   17160:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   17164:	ldr	r3, [pc, #792]	; 17484 <__assert_fail@plt+0x4d98>
   17168:	ldr	r3, [r3]
   1716c:	mov	r0, r3
   17170:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   17174:	ldr	r3, [pc, #792]	; 17494 <__assert_fail@plt+0x4da8>
   17178:	ldr	r3, [r3]
   1717c:	cmp	r3, #0
   17180:	beq	1719c <__assert_fail@plt+0x4ab0>
   17184:	ldr	r3, [pc, #776]	; 17494 <__assert_fail@plt+0x4da8>
   17188:	mov	r2, #0
   1718c:	str	r2, [r3]
   17190:	mov	r1, #0
   17194:	mov	r0, #17
   17198:	bl	12140 <signal@plt>
   1719c:	bl	12524 <fork@plt>
   171a0:	mov	r3, r0
   171a4:	str	r3, [fp, #-24]	; 0xffffffe8
   171a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171ac:	cmn	r3, #1
   171b0:	bne	171dc <__assert_fail@plt+0x4af0>
   171b4:	bl	12404 <__errno_location@plt>
   171b8:	mov	r3, r0
   171bc:	ldr	r4, [r3]
   171c0:	ldr	r0, [pc, #720]	; 17498 <__assert_fail@plt+0x4dac>
   171c4:	bl	12398 <gettext@plt>
   171c8:	mov	r3, r0
   171cc:	mov	r2, r3
   171d0:	mov	r1, r4
   171d4:	mov	r0, #1
   171d8:	bl	122b4 <error@plt>
   171dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171e0:	cmp	r3, #0
   171e4:	bne	17338 <__assert_fail@plt+0x4c4c>
   171e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   171ec:	ldr	r3, [r3, #104]	; 0x68
   171f0:	cmp	r3, #0
   171f4:	bne	1720c <__assert_fail@plt+0x4b20>
   171f8:	ldr	r3, [pc, #668]	; 1749c <__assert_fail@plt+0x4db0>
   171fc:	ldr	r2, [pc, #668]	; 174a0 <__assert_fail@plt+0x4db4>
   17200:	ldr	r1, [pc, #668]	; 174a4 <__assert_fail@plt+0x4db8>
   17204:	ldr	r0, [pc, #668]	; 174a8 <__assert_fail@plt+0x4dbc>
   17208:	bl	126ec <__assert_fail@plt>
   1720c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17210:	ldrb	r2, [r3, #100]	; 0x64
   17214:	ldr	r3, [fp, #-20]	; 0xffffffec
   17218:	ldr	r3, [r3, #104]	; 0x68
   1721c:	mov	r1, r3
   17220:	mov	r0, r2
   17224:	bl	16ecc <__assert_fail@plt+0x47e0>
   17228:	mov	r3, r0
   1722c:	eor	r3, r3, #1
   17230:	uxtb	r3, r3
   17234:	cmp	r3, #0
   17238:	beq	17244 <__assert_fail@plt+0x4b58>
   1723c:	mov	r0, #1
   17240:	bl	120ec <_exit@plt>
   17244:	bl	27e9c <__assert_fail@plt+0x157b0>
   17248:	mov	r3, r0
   1724c:	cmp	r3, #0
   17250:	beq	17258 <__assert_fail@plt+0x4b6c>
   17254:	bl	27ed0 <__assert_fail@plt+0x157e4>
   17258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1725c:	bl	27120 <__assert_fail@plt+0x14a34>
   17260:	mov	r3, r0
   17264:	cmp	r3, #0
   17268:	beq	17280 <__assert_fail@plt+0x4b94>
   1726c:	bl	12404 <__errno_location@plt>
   17270:	mov	r2, r0
   17274:	mov	r3, #7
   17278:	str	r3, [r2]
   1727c:	b	17294 <__assert_fail@plt+0x4ba8>
   17280:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17284:	ldr	r3, [r3]
   17288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1728c:	mov	r0, r3
   17290:	bl	12104 <execvp@plt>
   17294:	bl	12404 <__errno_location@plt>
   17298:	mov	r3, r0
   1729c:	ldr	r4, [r3]
   172a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   172a4:	ldr	r3, [r3]
   172a8:	mov	r1, r3
   172ac:	mov	r0, #0
   172b0:	bl	1c7fc <__assert_fail@plt+0xa110>
   172b4:	mov	r3, r0
   172b8:	ldr	r2, [pc, #492]	; 174ac <__assert_fail@plt+0x4dc0>
   172bc:	mov	r1, r4
   172c0:	mov	r0, #0
   172c4:	bl	122b4 <error@plt>
   172c8:	mov	r0, #1
   172cc:	bl	120ec <_exit@plt>
   172d0:	bl	12404 <__errno_location@plt>
   172d4:	mov	r3, r0
   172d8:	ldr	r3, [r3]
   172dc:	cmp	r3, #4
   172e0:	beq	17338 <__assert_fail@plt+0x4c4c>
   172e4:	bl	12404 <__errno_location@plt>
   172e8:	mov	r3, r0
   172ec:	ldr	r4, [r3]
   172f0:	ldr	r0, [pc, #440]	; 174b0 <__assert_fail@plt+0x4dc4>
   172f4:	bl	12398 <gettext@plt>
   172f8:	mov	r5, r0
   172fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17300:	ldr	r3, [r3]
   17304:	mov	r1, r3
   17308:	mov	r0, #0
   1730c:	bl	1c7fc <__assert_fail@plt+0xa110>
   17310:	mov	r3, r0
   17314:	mov	r2, r5
   17318:	mov	r1, r4
   1731c:	mov	r0, #0
   17320:	bl	122b4 <error@plt>
   17324:	ldr	r3, [pc, #392]	; 174b4 <__assert_fail@plt+0x4dc8>
   17328:	mov	r2, #1
   1732c:	str	r2, [r3, #28]
   17330:	mov	r3, #0
   17334:	b	17474 <__assert_fail@plt+0x4d88>
   17338:	ldr	r3, [fp, #-20]	; 0xffffffec
   1733c:	add	r3, r3, #108	; 0x6c
   17340:	mov	r2, #0
   17344:	mov	r1, r3
   17348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1734c:	bl	12248 <waitpid@plt>
   17350:	mov	r3, r0
   17354:	cmn	r3, #1
   17358:	beq	172d0 <__assert_fail@plt+0x4be4>
   1735c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17360:	ldr	r3, [r3, #108]	; 0x6c
   17364:	uxtb	r3, r3
   17368:	and	r3, r3, #127	; 0x7f
   1736c:	uxtb	r3, r3
   17370:	add	r3, r3, #1
   17374:	uxtb	r3, r3
   17378:	sxtb	r3, r3
   1737c:	asr	r3, r3, #1
   17380:	sxtb	r3, r3
   17384:	cmp	r3, #0
   17388:	ble	17400 <__assert_fail@plt+0x4d14>
   1738c:	ldr	r0, [pc, #292]	; 174b8 <__assert_fail@plt+0x4dcc>
   17390:	bl	12398 <gettext@plt>
   17394:	mov	r4, r0
   17398:	ldr	r3, [pc, #224]	; 17480 <__assert_fail@plt+0x4d94>
   1739c:	ldr	r1, [r3, #72]	; 0x48
   173a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   173a4:	ldr	r3, [r3]
   173a8:	mov	r2, r3
   173ac:	mov	r0, #0
   173b0:	bl	3b718 <__assert_fail@plt+0x2902c>
   173b4:	mov	r2, r0
   173b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   173bc:	ldr	r3, [r3, #108]	; 0x6c
   173c0:	and	r3, r3, #127	; 0x7f
   173c4:	str	r3, [sp]
   173c8:	mov	r3, r2
   173cc:	mov	r2, r4
   173d0:	mov	r1, #0
   173d4:	mov	r0, #0
   173d8:	bl	122b4 <error@plt>
   173dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   173e0:	ldrb	r3, [r3]
   173e4:	cmp	r3, #0
   173e8:	beq	173f8 <__assert_fail@plt+0x4d0c>
   173ec:	ldr	r3, [pc, #192]	; 174b4 <__assert_fail@plt+0x4dc8>
   173f0:	mov	r2, #1
   173f4:	str	r2, [r3, #28]
   173f8:	mov	r3, #1
   173fc:	b	17474 <__assert_fail@plt+0x4d88>
   17400:	ldr	r3, [fp, #-20]	; 0xffffffec
   17404:	ldr	r3, [r3, #108]	; 0x6c
   17408:	asr	r3, r3, #8
   1740c:	uxtb	r3, r3
   17410:	str	r3, [fp, #-28]	; 0xffffffe4
   17414:	ldr	r3, [pc, #100]	; 17480 <__assert_fail@plt+0x4d94>
   17418:	ldr	r3, [r3, #44]	; 0x2c
   1741c:	and	r3, r3, #32
   17420:	cmp	r3, #0
   17424:	beq	17440 <__assert_fail@plt+0x4d54>
   17428:	ldr	r3, [pc, #84]	; 17484 <__assert_fail@plt+0x4d98>
   1742c:	ldr	r0, [r3]
   17430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17434:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17438:	ldr	r1, [pc, #124]	; 174bc <__assert_fail@plt+0x4dd0>
   1743c:	bl	123f8 <fprintf@plt>
   17440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17444:	cmp	r3, #0
   17448:	bne	17454 <__assert_fail@plt+0x4d68>
   1744c:	mov	r3, #1
   17450:	b	17474 <__assert_fail@plt+0x4d88>
   17454:	ldr	r3, [fp, #-20]	; 0xffffffec
   17458:	ldrb	r3, [r3]
   1745c:	cmp	r3, #0
   17460:	beq	17470 <__assert_fail@plt+0x4d84>
   17464:	ldr	r3, [pc, #72]	; 174b4 <__assert_fail@plt+0x4dc8>
   17468:	mov	r2, #1
   1746c:	str	r2, [r3, #28]
   17470:	mov	r3, #1
   17474:	mov	r0, r3
   17478:	sub	sp, fp, #12
   1747c:	pop	{r4, r5, fp, pc}
   17480:	andeq	sp, r7, ip, asr #32
   17484:	andeq	ip, r7, r8, lsr #14
   17488:	andeq	r4, r6, r8, lsl fp
   1748c:	andeq	r4, r6, r4, asr #22
   17490:	andeq	ip, r7, r4, lsr r7
   17494:	andeq	ip, r7, ip, lsr #5
   17498:	andeq	r4, r6, r8, asr #22
   1749c:	andeq	r4, r6, r4, lsl #24
   174a0:	andeq	r0, r0, r1, asr #2
   174a4:	andeq	r4, r6, r0, lsr sl
   174a8:	andeq	r4, r6, r4, asr fp
   174ac:	andeq	r4, r6, r0, ror #21
   174b0:	andeq	r4, r6, r0, ror fp
   174b4:	andeq	sp, r7, r0, lsr #32
   174b8:	andeq	r4, r6, r8, lsl #23
   174bc:	andeq	r4, r6, r4, lsr #23
   174c0:	push	{fp, lr}
   174c4:	add	fp, sp, #4
   174c8:	sub	sp, sp, #16
   174cc:	str	r0, [fp, #-16]
   174d0:	mov	r3, r1
   174d4:	strb	r3, [fp, #-17]	; 0xffffffef
   174d8:	mov	r3, #0
   174dc:	str	r3, [fp, #-8]
   174e0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   174e4:	cmp	r3, #0
   174e8:	beq	174f8 <__assert_fail@plt+0x4e0c>
   174ec:	ldr	r3, [fp, #-8]
   174f0:	orr	r3, r3, #16
   174f4:	str	r3, [fp, #-8]
   174f8:	ldr	r3, [pc, #168]	; 175a8 <__assert_fail@plt+0x4ebc>
   174fc:	ldr	r3, [r3]
   17500:	cmp	r3, #0
   17504:	beq	17578 <__assert_fail@plt+0x4e8c>
   17508:	mov	r3, #0
   1750c:	str	r3, [fp, #-12]
   17510:	b	1755c <__assert_fail@plt+0x4e70>
   17514:	ldr	r3, [pc, #144]	; 175ac <__assert_fail@plt+0x4ec0>
   17518:	ldr	r2, [r3]
   1751c:	ldr	r3, [fp, #-12]
   17520:	lsl	r3, r3, #2
   17524:	add	r3, r2, r3
   17528:	ldr	r3, [r3]
   1752c:	ldr	r2, [fp, #-8]
   17530:	mov	r1, r3
   17534:	ldr	r0, [fp, #-16]
   17538:	bl	122d8 <fnmatch@plt>
   1753c:	mov	r3, r0
   17540:	cmp	r3, #0
   17544:	bne	17550 <__assert_fail@plt+0x4e64>
   17548:	mov	r3, #1
   1754c:	b	1759c <__assert_fail@plt+0x4eb0>
   17550:	ldr	r3, [fp, #-12]
   17554:	add	r3, r3, #1
   17558:	str	r3, [fp, #-12]
   1755c:	ldr	r3, [pc, #68]	; 175a8 <__assert_fail@plt+0x4ebc>
   17560:	ldr	r3, [r3]
   17564:	ldr	r2, [fp, #-12]
   17568:	cmp	r2, r3
   1756c:	bcc	17514 <__assert_fail@plt+0x4e28>
   17570:	mov	r3, #0
   17574:	b	1759c <__assert_fail@plt+0x4eb0>
   17578:	ldr	r2, [fp, #-8]
   1757c:	ldr	r1, [pc, #44]	; 175b0 <__assert_fail@plt+0x4ec4>
   17580:	ldr	r0, [fp, #-16]
   17584:	bl	122d8 <fnmatch@plt>
   17588:	mov	r3, r0
   1758c:	cmp	r3, #0
   17590:	moveq	r3, #1
   17594:	movne	r3, #0
   17598:	uxtb	r3, r3
   1759c:	mov	r0, r3
   175a0:	sub	sp, fp, #4
   175a4:	pop	{fp, pc}
   175a8:	andeq	ip, r7, r0, ror #14
   175ac:	andeq	ip, r7, ip, asr r7
   175b0:	andeq	r4, r6, ip, lsl #24
   175b4:	push	{fp, lr}
   175b8:	add	fp, sp, #4
   175bc:	sub	sp, sp, #24
   175c0:	str	r0, [fp, #-16]
   175c4:	mov	r3, r1
   175c8:	str	r2, [fp, #-24]	; 0xffffffe8
   175cc:	strh	r3, [fp, #-18]	; 0xffffffee
   175d0:	mov	r3, #0
   175d4:	str	r3, [fp, #-8]
   175d8:	ldr	r3, [fp, #-16]
   175dc:	ldr	r3, [r3]
   175e0:	str	r3, [fp, #-12]
   175e4:	ldr	r3, [fp, #-16]
   175e8:	ldr	r3, [r3]
   175ec:	cmp	r3, #0
   175f0:	bne	17610 <__assert_fail@plt+0x4f24>
   175f4:	ldr	r0, [pc, #916]	; 17990 <__assert_fail@plt+0x52a4>
   175f8:	bl	12398 <gettext@plt>
   175fc:	mov	r3, r0
   17600:	mov	r2, r3
   17604:	mov	r1, #0
   17608:	mov	r0, #1
   1760c:	bl	122b4 <error@plt>
   17610:	ldr	r3, [fp, #-16]
   17614:	ldr	r3, [r3]
   17618:	ldr	r3, [r3, #8]
   1761c:	cmp	r3, #5
   17620:	ldrls	pc, [pc, r3, lsl #2]
   17624:	b	178f0 <__assert_fail@plt+0x5204>
   17628:	andeq	r7, r1, r0, asr #12
   1762c:	andeq	r7, r1, r0, asr r7
   17630:	andeq	r7, r1, r4, ror r7
   17634:	andeq	r7, r1, ip, asr r6
   17638:			; <UNDEFINED> instruction: 0x000177b4
   1763c:	andeq	r7, r1, ip, ror r6
   17640:	ldr	r0, [pc, #840]	; 17990 <__assert_fail@plt+0x52a4>
   17644:	bl	12398 <gettext@plt>
   17648:	mov	r3, r0
   1764c:	mov	r2, r3
   17650:	mov	r1, #0
   17654:	mov	r0, #1
   17658:	bl	122b4 <error@plt>
   1765c:	ldr	r0, [pc, #816]	; 17994 <__assert_fail@plt+0x52a8>
   17660:	bl	12398 <gettext@plt>
   17664:	mov	r2, r0
   17668:	ldr	r3, [fp, #-12]
   1766c:	ldr	r3, [r3, #4]
   17670:	mov	r1, #0
   17674:	mov	r0, #1
   17678:	bl	122b4 <error@plt>
   1767c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17680:	cmp	r3, #0
   17684:	bne	176a8 <__assert_fail@plt+0x4fbc>
   17688:	ldr	r0, [pc, #776]	; 17998 <__assert_fail@plt+0x52ac>
   1768c:	bl	12398 <gettext@plt>
   17690:	mov	r2, r0
   17694:	ldr	r3, [fp, #-12]
   17698:	ldr	r3, [r3, #4]
   1769c:	mov	r1, #0
   176a0:	mov	r0, #1
   176a4:	bl	122b4 <error@plt>
   176a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176ac:	ldr	r3, [r3, #8]
   176b0:	cmp	r3, #2
   176b4:	beq	176c8 <__assert_fail@plt+0x4fdc>
   176b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176bc:	ldr	r3, [r3, #8]
   176c0:	cmp	r3, #3
   176c4:	bne	17700 <__assert_fail@plt+0x5014>
   176c8:	ldr	r3, [fp, #-12]
   176cc:	ldrb	r3, [r3, #33]	; 0x21
   176d0:	eor	r3, r3, #1
   176d4:	uxtb	r3, r3
   176d8:	cmp	r3, #0
   176dc:	beq	17700 <__assert_fail@plt+0x5014>
   176e0:	ldr	r0, [pc, #692]	; 1799c <__assert_fail@plt+0x52b0>
   176e4:	bl	12398 <gettext@plt>
   176e8:	mov	r2, r0
   176ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176f0:	ldr	r3, [r3, #4]
   176f4:	mov	r1, #0
   176f8:	mov	r0, #1
   176fc:	bl	122b4 <error@plt>
   17700:	ldr	r3, [fp, #-16]
   17704:	ldr	r3, [r3]
   17708:	ldrb	r3, [r3, #33]	; 0x21
   1770c:	cmp	r3, #0
   17710:	beq	17734 <__assert_fail@plt+0x5048>
   17714:	ldr	r0, [pc, #644]	; 179a0 <__assert_fail@plt+0x52b4>
   17718:	bl	12398 <gettext@plt>
   1771c:	mov	r2, r0
   17720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17724:	ldr	r3, [r3, #4]
   17728:	mov	r1, #0
   1772c:	mov	r0, #1
   17730:	bl	122b4 <error@plt>
   17734:	ldr	r0, [pc, #616]	; 179a4 <__assert_fail@plt+0x52b8>
   17738:	bl	12398 <gettext@plt>
   1773c:	mov	r3, r0
   17740:	mov	r2, r3
   17744:	mov	r1, #0
   17748:	mov	r0, #1
   1774c:	bl	122b4 <error@plt>
   17750:	ldr	r3, [fp, #-16]
   17754:	ldr	r3, [r3]
   17758:	str	r3, [fp, #-8]
   1775c:	ldr	r3, [fp, #-16]
   17760:	ldr	r3, [r3]
   17764:	ldr	r2, [r3, #152]	; 0x98
   17768:	ldr	r3, [fp, #-16]
   1776c:	str	r2, [r3]
   17770:	b	1790c <__assert_fail@plt+0x5220>
   17774:	ldr	r3, [fp, #-16]
   17778:	ldr	r3, [r3]
   1777c:	str	r3, [fp, #-8]
   17780:	ldr	r3, [fp, #-16]
   17784:	ldr	r3, [r3]
   17788:	ldr	r2, [r3, #152]	; 0x98
   1778c:	ldr	r3, [fp, #-16]
   17790:	str	r2, [r3]
   17794:	ldr	r2, [fp, #-8]
   17798:	mov	r1, #4
   1779c:	ldr	r0, [fp, #-16]
   177a0:	bl	175b4 <__assert_fail@plt+0x4ec8>
   177a4:	mov	r2, r0
   177a8:	ldr	r3, [fp, #-8]
   177ac:	str	r2, [r3, #160]	; 0xa0
   177b0:	b	1790c <__assert_fail@plt+0x5220>
   177b4:	ldr	r3, [fp, #-16]
   177b8:	ldr	r3, [r3]
   177bc:	ldr	r3, [r3, #152]	; 0x98
   177c0:	cmp	r3, #0
   177c4:	beq	177e0 <__assert_fail@plt+0x50f4>
   177c8:	ldr	r3, [fp, #-16]
   177cc:	ldr	r3, [r3]
   177d0:	ldr	r3, [r3, #152]	; 0x98
   177d4:	ldrb	r3, [r3, #33]	; 0x21
   177d8:	cmp	r3, #0
   177dc:	beq	17800 <__assert_fail@plt+0x5114>
   177e0:	ldr	r0, [pc, #448]	; 179a8 <__assert_fail@plt+0x52bc>
   177e4:	bl	12398 <gettext@plt>
   177e8:	mov	r2, r0
   177ec:	ldr	r3, [fp, #-12]
   177f0:	ldr	r3, [r3, #4]
   177f4:	mov	r1, #0
   177f8:	mov	r0, #1
   177fc:	bl	122b4 <error@plt>
   17800:	ldr	r3, [fp, #-16]
   17804:	ldr	r3, [r3]
   17808:	str	r3, [fp, #-24]	; 0xffffffe8
   1780c:	ldr	r3, [fp, #-16]
   17810:	ldr	r3, [r3]
   17814:	ldr	r2, [r3, #152]	; 0x98
   17818:	ldr	r3, [fp, #-16]
   1781c:	str	r2, [r3]
   17820:	ldr	r3, [fp, #-16]
   17824:	ldr	r3, [r3]
   17828:	ldr	r3, [r3, #8]
   1782c:	cmp	r3, #5
   17830:	bne	17884 <__assert_fail@plt+0x5198>
   17834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17838:	ldrb	r3, [r3, #33]	; 0x21
   1783c:	cmp	r3, #0
   17840:	beq	17868 <__assert_fail@plt+0x517c>
   17844:	ldr	r0, [pc, #332]	; 17998 <__assert_fail@plt+0x52ac>
   17848:	bl	12398 <gettext@plt>
   1784c:	mov	r2, r0
   17850:	ldr	r3, [fp, #-16]
   17854:	ldr	r3, [r3]
   17858:	ldr	r3, [r3, #4]
   1785c:	mov	r1, #0
   17860:	mov	r0, #1
   17864:	bl	122b4 <error@plt>
   17868:	ldr	r0, [pc, #316]	; 179ac <__assert_fail@plt+0x52c0>
   1786c:	bl	12398 <gettext@plt>
   17870:	mov	r3, r0
   17874:	mov	r2, r3
   17878:	mov	r1, #0
   1787c:	mov	r0, #1
   17880:	bl	122b4 <error@plt>
   17884:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17888:	mov	r1, #0
   1788c:	ldr	r0, [fp, #-16]
   17890:	bl	175b4 <__assert_fail@plt+0x4ec8>
   17894:	str	r0, [fp, #-8]
   17898:	ldr	r3, [fp, #-16]
   1789c:	ldr	r3, [r3]
   178a0:	cmp	r3, #0
   178a4:	beq	178bc <__assert_fail@plt+0x51d0>
   178a8:	ldr	r3, [fp, #-16]
   178ac:	ldr	r3, [r3]
   178b0:	ldr	r3, [r3, #8]
   178b4:	cmp	r3, #5
   178b8:	beq	178d8 <__assert_fail@plt+0x51ec>
   178bc:	ldr	r0, [pc, #236]	; 179b0 <__assert_fail@plt+0x52c4>
   178c0:	bl	12398 <gettext@plt>
   178c4:	mov	r3, r0
   178c8:	mov	r2, r3
   178cc:	mov	r1, #0
   178d0:	mov	r0, #1
   178d4:	bl	122b4 <error@plt>
   178d8:	ldr	r3, [fp, #-16]
   178dc:	ldr	r3, [r3]
   178e0:	ldr	r2, [r3, #152]	; 0x98
   178e4:	ldr	r3, [fp, #-16]
   178e8:	str	r2, [r3]
   178ec:	b	1790c <__assert_fail@plt+0x5220>
   178f0:	ldr	r0, [pc, #188]	; 179b4 <__assert_fail@plt+0x52c8>
   178f4:	bl	12398 <gettext@plt>
   178f8:	mov	r3, r0
   178fc:	mov	r2, r3
   17900:	mov	r1, #0
   17904:	mov	r0, #1
   17908:	bl	122b4 <error@plt>
   1790c:	ldr	r3, [fp, #-16]
   17910:	ldr	r3, [r3]
   17914:	cmp	r3, #0
   17918:	bne	17924 <__assert_fail@plt+0x5238>
   1791c:	ldr	r3, [fp, #-8]
   17920:	b	17984 <__assert_fail@plt+0x5298>
   17924:	ldr	r3, [fp, #-16]
   17928:	ldr	r3, [r3]
   1792c:	ldr	r3, [r3, #12]
   17930:	mov	r2, r3
   17934:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   17938:	cmp	r2, r3
   1793c:	ble	17980 <__assert_fail@plt+0x5294>
   17940:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   17944:	mov	r2, r3
   17948:	ldr	r1, [fp, #-8]
   1794c:	ldr	r0, [fp, #-16]
   17950:	bl	179b8 <__assert_fail@plt+0x52cc>
   17954:	str	r0, [fp, #-8]
   17958:	ldr	r3, [fp, #-8]
   1795c:	cmp	r3, #0
   17960:	bne	17980 <__assert_fail@plt+0x5294>
   17964:	ldr	r0, [pc, #36]	; 17990 <__assert_fail@plt+0x52a4>
   17968:	bl	12398 <gettext@plt>
   1796c:	mov	r3, r0
   17970:	mov	r2, r3
   17974:	mov	r1, #0
   17978:	mov	r0, #1
   1797c:	bl	122b4 <error@plt>
   17980:	ldr	r3, [fp, #-8]
   17984:	mov	r0, r3
   17988:	sub	sp, fp, #4
   1798c:	pop	{fp, pc}
   17990:	andeq	r4, r6, r0, lsl ip
   17994:	andeq	r4, r6, r4, lsr #24
   17998:	andeq	r4, r6, r8, ror ip
   1799c:	andeq	r4, r6, r4, asr #25
   179a0:	strdeq	r4, [r6], -r0
   179a4:	andeq	r4, r6, r4, lsl sp
   179a8:	andeq	r4, r6, r0, asr #26
   179ac:			; <UNDEFINED> instruction: 0x00064db0
   179b0:	andeq	r4, r6, r8, ror #27
   179b4:	andeq	r4, r6, ip, lsr lr
   179b8:	push	{fp, lr}
   179bc:	add	fp, sp, #4
   179c0:	sub	sp, sp, #24
   179c4:	str	r0, [fp, #-16]
   179c8:	str	r1, [fp, #-20]	; 0xffffffec
   179cc:	mov	r3, r2
   179d0:	strh	r3, [fp, #-22]	; 0xffffffea
   179d4:	ldr	r3, [fp, #-16]
   179d8:	ldr	r3, [r3]
   179dc:	cmp	r3, #0
   179e0:	beq	179f8 <__assert_fail@plt+0x530c>
   179e4:	ldr	r3, [fp, #-16]
   179e8:	ldr	r3, [r3]
   179ec:	ldr	r3, [r3, #8]
   179f0:	cmp	r3, #5
   179f4:	bne	17a00 <__assert_fail@plt+0x5314>
   179f8:	mov	r3, #0
   179fc:	b	17b1c <__assert_fail@plt+0x5430>
   17a00:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a04:	str	r3, [fp, #-8]
   17a08:	b	17aec <__assert_fail@plt+0x5400>
   17a0c:	ldr	r3, [fp, #-16]
   17a10:	ldr	r3, [r3]
   17a14:	ldr	r3, [r3, #8]
   17a18:	cmp	r3, #5
   17a1c:	ldrls	pc, [pc, r3, lsl #2]
   17a20:	b	17ac8 <__assert_fail@plt+0x53dc>
   17a24:	andeq	r7, r1, ip, lsr sl
   17a28:	andeq	r7, r1, ip, lsr sl
   17a2c:	andeq	r7, r1, ip, lsr sl
   17a30:	andeq	r7, r1, r8, asr sl
   17a34:	andeq	r7, r1, ip, lsr sl
   17a38:	andeq	r7, r1, r0, asr #21
   17a3c:	ldr	r0, [pc, #228]	; 17b28 <__assert_fail@plt+0x543c>
   17a40:	bl	12398 <gettext@plt>
   17a44:	mov	r3, r0
   17a48:	mov	r2, r3
   17a4c:	mov	r1, #0
   17a50:	mov	r0, #1
   17a54:	bl	122b4 <error@plt>
   17a58:	ldr	r3, [fp, #-16]
   17a5c:	ldr	r3, [r3]
   17a60:	str	r3, [fp, #-12]
   17a64:	ldr	r3, [fp, #-16]
   17a68:	ldr	r3, [r3]
   17a6c:	ldr	r2, [fp, #-8]
   17a70:	str	r2, [r3, #156]	; 0x9c
   17a74:	ldr	r3, [fp, #-16]
   17a78:	ldr	r3, [r3]
   17a7c:	str	r3, [fp, #-8]
   17a80:	ldr	r3, [fp, #-16]
   17a84:	ldr	r3, [r3]
   17a88:	ldr	r2, [r3, #152]	; 0x98
   17a8c:	ldr	r3, [fp, #-16]
   17a90:	str	r2, [r3]
   17a94:	ldr	r3, [fp, #-8]
   17a98:	ldr	r3, [r3, #12]
   17a9c:	sxth	r3, r3
   17aa0:	ldr	r2, [fp, #-12]
   17aa4:	mov	r1, r3
   17aa8:	ldr	r0, [fp, #-16]
   17aac:	bl	175b4 <__assert_fail@plt+0x4ec8>
   17ab0:	mov	r2, r0
   17ab4:	ldr	r3, [fp, #-8]
   17ab8:	str	r2, [r3, #160]	; 0xa0
   17abc:	b	17aec <__assert_fail@plt+0x5400>
   17ac0:	ldr	r3, [fp, #-8]
   17ac4:	b	17b1c <__assert_fail@plt+0x5430>
   17ac8:	ldr	r0, [pc, #92]	; 17b2c <__assert_fail@plt+0x5440>
   17acc:	bl	12398 <gettext@plt>
   17ad0:	mov	r2, r0
   17ad4:	ldr	r3, [fp, #-16]
   17ad8:	ldr	r3, [r3]
   17adc:	ldr	r3, [r3, #8]
   17ae0:	mov	r1, #0
   17ae4:	mov	r0, #1
   17ae8:	bl	122b4 <error@plt>
   17aec:	ldr	r3, [fp, #-16]
   17af0:	ldr	r3, [r3]
   17af4:	cmp	r3, #0
   17af8:	beq	17b18 <__assert_fail@plt+0x542c>
   17afc:	ldr	r3, [fp, #-16]
   17b00:	ldr	r3, [r3]
   17b04:	ldr	r3, [r3, #12]
   17b08:	mov	r2, r3
   17b0c:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   17b10:	cmp	r2, r3
   17b14:	bgt	17a0c <__assert_fail@plt+0x5320>
   17b18:	ldr	r3, [fp, #-8]
   17b1c:	mov	r0, r3
   17b20:	sub	sp, fp, #4
   17b24:	pop	{fp, pc}
   17b28:	andeq	r4, r6, r0, lsl ip
   17b2c:	andeq	r4, r6, r0, ror #28
   17b30:	push	{fp}		; (str fp, [sp, #-4]!)
   17b34:	add	fp, sp, #0
   17b38:	sub	sp, sp, #12
   17b3c:	str	r0, [fp, #-8]
   17b40:	ldr	r3, [fp, #-8]
   17b44:	ldr	r3, [r3]
   17b48:	ldr	r2, [pc, #224]	; 17c30 <__assert_fail@plt+0x5544>
   17b4c:	cmp	r3, r2
   17b50:	beq	17b90 <__assert_fail@plt+0x54a4>
   17b54:	ldr	r3, [fp, #-8]
   17b58:	ldr	r3, [r3]
   17b5c:	ldr	r2, [pc, #208]	; 17c34 <__assert_fail@plt+0x5548>
   17b60:	cmp	r3, r2
   17b64:	beq	17b90 <__assert_fail@plt+0x54a4>
   17b68:	ldr	r3, [fp, #-8]
   17b6c:	ldr	r3, [r3]
   17b70:	ldr	r2, [pc, #192]	; 17c38 <__assert_fail@plt+0x554c>
   17b74:	cmp	r3, r2
   17b78:	beq	17b90 <__assert_fail@plt+0x54a4>
   17b7c:	ldr	r3, [fp, #-8]
   17b80:	ldr	r3, [r3]
   17b84:	ldr	r2, [pc, #176]	; 17c3c <__assert_fail@plt+0x5550>
   17b88:	cmp	r3, r2
   17b8c:	bne	17b98 <__assert_fail@plt+0x54ac>
   17b90:	mov	r3, #1
   17b94:	b	17c20 <__assert_fail@plt+0x5534>
   17b98:	ldr	r3, [pc, #160]	; 17c40 <__assert_fail@plt+0x5554>
   17b9c:	ldrh	r3, [r3, #68]	; 0x44
   17ba0:	cmp	r3, #0
   17ba4:	beq	17c1c <__assert_fail@plt+0x5530>
   17ba8:	ldr	r3, [fp, #-8]
   17bac:	ldr	r3, [r3]
   17bb0:	ldr	r2, [pc, #140]	; 17c44 <__assert_fail@plt+0x5558>
   17bb4:	cmp	r3, r2
   17bb8:	beq	17bf8 <__assert_fail@plt+0x550c>
   17bbc:	ldr	r3, [fp, #-8]
   17bc0:	ldr	r3, [r3]
   17bc4:	ldr	r2, [pc, #124]	; 17c48 <__assert_fail@plt+0x555c>
   17bc8:	cmp	r3, r2
   17bcc:	beq	17bf8 <__assert_fail@plt+0x550c>
   17bd0:	ldr	r3, [fp, #-8]
   17bd4:	ldr	r3, [r3]
   17bd8:	ldr	r2, [pc, #108]	; 17c4c <__assert_fail@plt+0x5560>
   17bdc:	cmp	r3, r2
   17be0:	beq	17bf8 <__assert_fail@plt+0x550c>
   17be4:	ldr	r3, [fp, #-8]
   17be8:	ldr	r3, [r3]
   17bec:	ldr	r2, [pc, #92]	; 17c50 <__assert_fail@plt+0x5564>
   17bf0:	cmp	r3, r2
   17bf4:	bne	17c00 <__assert_fail@plt+0x5514>
   17bf8:	mov	r3, #0
   17bfc:	b	17c20 <__assert_fail@plt+0x5534>
   17c00:	ldr	r3, [fp, #-8]
   17c04:	ldr	r3, [r3, #24]
   17c08:	cmp	r3, #0
   17c0c:	moveq	r3, #1
   17c10:	movne	r3, #0
   17c14:	uxtb	r3, r3
   17c18:	b	17c20 <__assert_fail@plt+0x5534>
   17c1c:	mov	r3, #0
   17c20:	mov	r0, r3
   17c24:	add	sp, fp, #0
   17c28:	pop	{fp}		; (ldr fp, [sp], #4)
   17c2c:	bx	lr
   17c30:	andeq	r5, r1, r4, lsl r1
   17c34:	strdeq	r5, [r1], -ip
   17c38:	ldrdeq	r4, [r1], -r0
   17c3c:	andeq	r4, r1, r0, ror #27
   17c40:	andeq	sp, r7, ip, asr #32
   17c44:	andeq	r4, r1, r4, lsr r1
   17c48:	andeq	r5, r1, r4, asr r1
   17c4c:	muleq	r1, r8, r3
   17c50:	andeq	r5, r1, r8, ror r6
   17c54:	push	{fp, lr}
   17c58:	add	fp, sp, #4
   17c5c:	sub	sp, sp, #8
   17c60:	str	r0, [fp, #-8]
   17c64:	str	r1, [fp, #-12]
   17c68:	ldr	r3, [fp, #-12]
   17c6c:	ldr	r3, [r3, #36]	; 0x24
   17c70:	cmp	r3, #0
   17c74:	beq	17c98 <__assert_fail@plt+0x55ac>
   17c78:	ldr	r3, [fp, #-12]
   17c7c:	ldr	r2, [r3, #4]
   17c80:	ldr	r3, [fp, #-12]
   17c84:	ldr	r3, [r3, #36]	; 0x24
   17c88:	ldr	r1, [pc, #40]	; 17cb8 <__assert_fail@plt+0x55cc>
   17c8c:	ldr	r0, [fp, #-8]
   17c90:	bl	123f8 <fprintf@plt>
   17c94:	b	17cac <__assert_fail@plt+0x55c0>
   17c98:	ldr	r3, [fp, #-12]
   17c9c:	ldr	r3, [r3, #4]
   17ca0:	ldr	r1, [fp, #-8]
   17ca4:	mov	r0, r3
   17ca8:	bl	12680 <fputs@plt>
   17cac:	nop			; (mov r0, r0)
   17cb0:	sub	sp, fp, #4
   17cb4:	pop	{fp, pc}
   17cb8:	andeq	r4, r6, r8, lsl #29
   17cbc:	push	{fp}		; (str fp, [sp, #-4]!)
   17cc0:	add	fp, sp, #0
   17cc4:	sub	sp, sp, #12
   17cc8:	str	r0, [fp, #-8]
   17ccc:	ldr	r3, [fp, #-8]
   17cd0:	mov	r2, #0
   17cd4:	str	r2, [r3, #4]
   17cd8:	ldr	r3, [fp, #-8]
   17cdc:	ldr	r2, [r3, #4]
   17ce0:	ldr	r3, [fp, #-8]
   17ce4:	str	r2, [r3]
   17ce8:	nop			; (mov r0, r0)
   17cec:	add	sp, fp, #0
   17cf0:	pop	{fp}		; (ldr fp, [sp], #4)
   17cf4:	bx	lr
   17cf8:	push	{fp}		; (str fp, [sp, #-4]!)
   17cfc:	add	fp, sp, #0
   17d00:	sub	sp, sp, #28
   17d04:	str	r0, [fp, #-16]
   17d08:	str	r1, [fp, #-20]	; 0xffffffec
   17d0c:	str	r2, [fp, #-24]	; 0xffffffe8
   17d10:	ldr	r3, [fp, #-16]
   17d14:	str	r3, [fp, #-8]
   17d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d1c:	ldr	r2, [r3, #156]	; 0x9c
   17d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d24:	str	r2, [r3]
   17d28:	ldr	r3, [fp, #-8]
   17d2c:	ldr	r2, [r3]
   17d30:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d34:	str	r2, [r3, #156]	; 0x9c
   17d38:	ldr	r3, [fp, #-8]
   17d3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   17d40:	str	r2, [r3]
   17d44:	ldr	r3, [fp, #-16]
   17d48:	ldr	r3, [r3, #4]
   17d4c:	cmp	r3, #0
   17d50:	bne	17d64 <__assert_fail@plt+0x5678>
   17d54:	ldr	r3, [fp, #-16]
   17d58:	ldr	r2, [r3]
   17d5c:	ldr	r3, [fp, #-16]
   17d60:	str	r2, [r3, #4]
   17d64:	nop			; (mov r0, r0)
   17d68:	add	sp, fp, #0
   17d6c:	pop	{fp}		; (ldr fp, [sp], #4)
   17d70:	bx	lr
   17d74:	push	{fp}		; (str fp, [sp, #-4]!)
   17d78:	add	fp, sp, #0
   17d7c:	sub	sp, sp, #20
   17d80:	str	r0, [fp, #-8]
   17d84:	str	r1, [fp, #-12]
   17d88:	mov	r3, r2
   17d8c:	strb	r3, [fp, #-13]
   17d90:	ldr	r3, [fp, #-8]
   17d94:	ldr	r2, [r3, #24]
   17d98:	ldr	r3, [fp, #-12]
   17d9c:	ldr	r3, [r3, #24]
   17da0:	cmp	r2, r3
   17da4:	bne	17e30 <__assert_fail@plt+0x5744>
   17da8:	ldr	r3, [fp, #-8]
   17dac:	vldr	s14, [r3, #28]
   17db0:	ldr	r3, [fp, #-12]
   17db4:	vldr	s15, [r3, #28]
   17db8:	vcmp.f32	s14, s15
   17dbc:	vmrs	APSR_nzcv, fpscr
   17dc0:	bne	17dcc <__assert_fail@plt+0x56e0>
   17dc4:	mov	r3, #0
   17dc8:	b	17e54 <__assert_fail@plt+0x5768>
   17dcc:	ldrb	r3, [fp, #-13]
   17dd0:	cmp	r3, #0
   17dd4:	beq	17e04 <__assert_fail@plt+0x5718>
   17dd8:	ldr	r3, [fp, #-8]
   17ddc:	vldr	s14, [r3, #28]
   17de0:	ldr	r3, [fp, #-12]
   17de4:	vldr	s15, [r3, #28]
   17de8:	vcmpe.f32	s14, s15
   17dec:	vmrs	APSR_nzcv, fpscr
   17df0:	bpl	17dfc <__assert_fail@plt+0x5710>
   17df4:	mvn	r3, #0
   17df8:	b	17e54 <__assert_fail@plt+0x5768>
   17dfc:	mov	r3, #1
   17e00:	b	17e54 <__assert_fail@plt+0x5768>
   17e04:	ldr	r3, [fp, #-8]
   17e08:	vldr	s14, [r3, #28]
   17e0c:	ldr	r3, [fp, #-12]
   17e10:	vldr	s15, [r3, #28]
   17e14:	vcmpe.f32	s14, s15
   17e18:	vmrs	APSR_nzcv, fpscr
   17e1c:	bpl	17e28 <__assert_fail@plt+0x573c>
   17e20:	mov	r3, #1
   17e24:	b	17e54 <__assert_fail@plt+0x5768>
   17e28:	mvn	r3, #0
   17e2c:	b	17e54 <__assert_fail@plt+0x5768>
   17e30:	ldr	r3, [fp, #-8]
   17e34:	ldr	r2, [r3, #24]
   17e38:	ldr	r3, [fp, #-12]
   17e3c:	ldr	r3, [r3, #24]
   17e40:	cmp	r2, r3
   17e44:	bcs	17e50 <__assert_fail@plt+0x5764>
   17e48:	mvn	r3, #0
   17e4c:	b	17e54 <__assert_fail@plt+0x5768>
   17e50:	mov	r3, #1
   17e54:	mov	r0, r3
   17e58:	add	sp, fp, #0
   17e5c:	pop	{fp}		; (ldr fp, [sp], #4)
   17e60:	bx	lr
   17e64:	push	{fp, lr}
   17e68:	add	fp, sp, #4
   17e6c:	sub	sp, sp, #32
   17e70:	str	r0, [fp, #-32]	; 0xffffffe0
   17e74:	str	r1, [fp, #-36]	; 0xffffffdc
   17e78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e7c:	ldr	r3, [r3]
   17e80:	cmp	r3, #0
   17e84:	beq	18074 <__assert_fail@plt+0x5988>
   17e88:	ldr	r3, [pc, #496]	; 18080 <__assert_fail@plt+0x5994>
   17e8c:	ldr	r3, [r3, #44]	; 0x2c
   17e90:	and	r3, r3, #8
   17e94:	cmp	r3, #0
   17e98:	beq	17ed0 <__assert_fail@plt+0x57e4>
   17e9c:	ldr	r3, [pc, #480]	; 18084 <__assert_fail@plt+0x5998>
   17ea0:	ldr	r3, [r3]
   17ea4:	ldr	r2, [pc, #476]	; 18088 <__assert_fail@plt+0x599c>
   17ea8:	ldr	r1, [pc, #476]	; 1808c <__assert_fail@plt+0x59a0>
   17eac:	mov	r0, r3
   17eb0:	bl	123f8 <fprintf@plt>
   17eb4:	ldr	r3, [pc, #456]	; 18084 <__assert_fail@plt+0x5998>
   17eb8:	ldr	r0, [r3]
   17ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ec0:	ldr	r3, [r3]
   17ec4:	mov	r2, #2
   17ec8:	mov	r1, r3
   17ecc:	bl	1a514 <__assert_fail@plt+0x7e28>
   17ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ed4:	ldr	r3, [r3]
   17ed8:	mov	r0, r3
   17edc:	bl	19268 <__assert_fail@plt+0x6b7c>
   17ee0:	sub	r3, fp, #24
   17ee4:	mov	r0, r3
   17ee8:	bl	17cbc <__assert_fail@plt+0x55d0>
   17eec:	b	17ff4 <__assert_fail@plt+0x5908>
   17ef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ef4:	ldr	r3, [r3]
   17ef8:	str	r3, [fp, #-12]
   17efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f00:	ldr	r3, [r3]
   17f04:	ldr	r2, [r3, #156]	; 0x9c
   17f08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f0c:	str	r2, [r3]
   17f10:	ldr	r3, [fp, #-12]
   17f14:	mov	r2, #0
   17f18:	str	r2, [r3, #156]	; 0x9c
   17f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f20:	str	r3, [fp, #-8]
   17f24:	b	17f74 <__assert_fail@plt+0x5888>
   17f28:	ldr	r3, [fp, #-8]
   17f2c:	ldr	r3, [r3, #12]
   17f30:	cmp	r3, #2
   17f34:	movne	r3, #1
   17f38:	moveq	r3, #0
   17f3c:	strb	r3, [fp, #-13]
   17f40:	ldr	r3, [fp, #-8]
   17f44:	ldr	r0, [r3, #160]	; 0xa0
   17f48:	ldr	r3, [fp, #-12]
   17f4c:	ldr	r3, [r3, #160]	; 0xa0
   17f50:	ldrb	r2, [fp, #-13]
   17f54:	mov	r1, r3
   17f58:	bl	17d74 <__assert_fail@plt+0x5688>
   17f5c:	mov	r3, r0
   17f60:	cmp	r3, #0
   17f64:	bge	17f84 <__assert_fail@plt+0x5898>
   17f68:	ldr	r3, [fp, #-8]
   17f6c:	ldr	r3, [r3, #156]	; 0x9c
   17f70:	str	r3, [fp, #-8]
   17f74:	ldr	r3, [fp, #-8]
   17f78:	cmp	r3, #0
   17f7c:	bne	17f28 <__assert_fail@plt+0x583c>
   17f80:	b	17f88 <__assert_fail@plt+0x589c>
   17f84:	nop			; (mov r0, r0)
   17f88:	ldr	r3, [fp, #-8]
   17f8c:	cmp	r3, #0
   17f90:	beq	17fcc <__assert_fail@plt+0x58e0>
   17f94:	ldr	r3, [fp, #-8]
   17f98:	ldr	r2, [r3, #156]	; 0x9c
   17f9c:	ldr	r3, [fp, #-12]
   17fa0:	str	r2, [r3, #156]	; 0x9c
   17fa4:	ldr	r3, [fp, #-12]
   17fa8:	ldr	r3, [r3, #156]	; 0x9c
   17fac:	cmp	r3, #0
   17fb0:	bne	17fbc <__assert_fail@plt+0x58d0>
   17fb4:	ldr	r3, [fp, #-12]
   17fb8:	str	r3, [fp, #-20]	; 0xffffffec
   17fbc:	ldr	r3, [fp, #-8]
   17fc0:	ldr	r2, [fp, #-12]
   17fc4:	str	r2, [r3, #156]	; 0x9c
   17fc8:	b	17ff4 <__assert_fail@plt+0x5908>
   17fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17fd0:	ldr	r3, [fp, #-12]
   17fd4:	str	r2, [r3, #156]	; 0x9c
   17fd8:	ldr	r3, [fp, #-12]
   17fdc:	str	r3, [fp, #-24]	; 0xffffffe8
   17fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17fe4:	cmp	r3, #0
   17fe8:	bne	17ff4 <__assert_fail@plt+0x5908>
   17fec:	ldr	r3, [fp, #-12]
   17ff0:	str	r3, [fp, #-20]	; 0xffffffec
   17ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ff8:	ldr	r3, [r3]
   17ffc:	cmp	r3, #0
   18000:	bne	17ef0 <__assert_fail@plt+0x5804>
   18004:	ldr	r3, [pc, #116]	; 18080 <__assert_fail@plt+0x5994>
   18008:	ldr	r3, [r3, #44]	; 0x2c
   1800c:	and	r3, r3, #8
   18010:	cmp	r3, #0
   18014:	beq	18048 <__assert_fail@plt+0x595c>
   18018:	ldr	r3, [pc, #100]	; 18084 <__assert_fail@plt+0x5998>
   1801c:	ldr	r3, [r3]
   18020:	ldr	r2, [pc, #104]	; 18090 <__assert_fail@plt+0x59a4>
   18024:	ldr	r1, [pc, #96]	; 1808c <__assert_fail@plt+0x59a0>
   18028:	mov	r0, r3
   1802c:	bl	123f8 <fprintf@plt>
   18030:	ldr	r3, [pc, #76]	; 18084 <__assert_fail@plt+0x5998>
   18034:	ldr	r3, [r3]
   18038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1803c:	mov	r2, #2
   18040:	mov	r0, r3
   18044:	bl	1a514 <__assert_fail@plt+0x7e28>
   18048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1804c:	mov	r0, r3
   18050:	bl	19268 <__assert_fail@plt+0x6b7c>
   18054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18058:	ldr	r1, [fp, #-20]	; 0xffffffec
   1805c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18060:	mov	r0, r3
   18064:	bl	18ddc <__assert_fail@plt+0x66f0>
   18068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1806c:	bl	17cbc <__assert_fail@plt+0x55d0>
   18070:	b	18078 <__assert_fail@plt+0x598c>
   18074:	nop			; (mov r0, r0)
   18078:	sub	sp, fp, #4
   1807c:	pop	{fp, pc}
   18080:	andeq	sp, r7, ip, asr #32
   18084:	andeq	ip, r7, r8, lsr #14
   18088:	muleq	r6, r0, lr
   1808c:	andeq	r4, r6, ip, lsr #29
   18090:			; <UNDEFINED> instruction: 0x00064eb4
   18094:	push	{fp, lr}
   18098:	add	fp, sp, #4
   1809c:	sub	sp, sp, #24
   180a0:	str	r0, [fp, #-16]
   180a4:	str	r1, [fp, #-20]	; 0xffffffec
   180a8:	str	r2, [fp, #-24]	; 0xffffffe8
   180ac:	str	r3, [fp, #-28]	; 0xffffffe4
   180b0:	ldr	r3, [pc, #132]	; 1813c <__assert_fail@plt+0x5a50>
   180b4:	ldr	r2, [pc, #132]	; 18140 <__assert_fail@plt+0x5a54>
   180b8:	str	r2, [r3]
   180bc:	ldr	r3, [pc, #120]	; 1813c <__assert_fail@plt+0x5a50>
   180c0:	ldr	r3, [r3]
   180c4:	ldr	r1, [fp, #4]
   180c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180cc:	blx	r3
   180d0:	ldr	r3, [pc, #100]	; 1813c <__assert_fail@plt+0x5a50>
   180d4:	ldr	r3, [r3]
   180d8:	ldr	r1, [fp, #4]
   180dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   180e0:	blx	r3
   180e4:	mov	r3, #0
   180e8:	str	r3, [fp, #-8]
   180ec:	b	18120 <__assert_fail@plt+0x5a34>
   180f0:	ldr	r3, [pc, #68]	; 1813c <__assert_fail@plt+0x5a50>
   180f4:	ldr	r3, [r3]
   180f8:	ldr	r2, [fp, #-8]
   180fc:	lsl	r2, r2, #3
   18100:	ldr	r1, [fp, #-16]
   18104:	add	r2, r1, r2
   18108:	ldr	r1, [fp, #4]
   1810c:	mov	r0, r2
   18110:	blx	r3
   18114:	ldr	r3, [fp, #-8]
   18118:	add	r3, r3, #1
   1811c:	str	r3, [fp, #-8]
   18120:	ldr	r2, [fp, #-8]
   18124:	ldr	r3, [fp, #-20]	; 0xffffffec
   18128:	cmp	r2, r3
   1812c:	blt	180f0 <__assert_fail@plt+0x5a04>
   18130:	nop			; (mov r0, r0)
   18134:	sub	sp, fp, #4
   18138:	pop	{fp, pc}
   1813c:	andeq	ip, r7, r8, ror #14
   18140:	andeq	r7, r1, r4, ror #28
   18144:	push	{fp, lr}
   18148:	add	fp, sp, #4
   1814c:	sub	sp, sp, #8
   18150:	str	r0, [fp, #-8]
   18154:	ldr	r3, [fp, #-8]
   18158:	cmp	r3, #0
   1815c:	beq	181c0 <__assert_fail@plt+0x5ad4>
   18160:	ldr	r3, [fp, #-8]
   18164:	ldrb	r3, [r3, #16]
   18168:	cmp	r3, #0
   1816c:	bne	181a8 <__assert_fail@plt+0x5abc>
   18170:	ldr	r3, [fp, #-8]
   18174:	ldr	r3, [r3, #156]	; 0x9c
   18178:	mov	r0, r3
   1817c:	bl	18144 <__assert_fail@plt+0x5a58>
   18180:	mov	r3, r0
   18184:	cmp	r3, #0
   18188:	bne	181a8 <__assert_fail@plt+0x5abc>
   1818c:	ldr	r3, [fp, #-8]
   18190:	ldr	r3, [r3, #160]	; 0xa0
   18194:	mov	r0, r3
   18198:	bl	18144 <__assert_fail@plt+0x5a58>
   1819c:	mov	r3, r0
   181a0:	cmp	r3, #0
   181a4:	beq	181b0 <__assert_fail@plt+0x5ac4>
   181a8:	mov	r3, #1
   181ac:	b	181b4 <__assert_fail@plt+0x5ac8>
   181b0:	mov	r3, #0
   181b4:	and	r3, r3, #1
   181b8:	uxtb	r3, r3
   181bc:	b	181c4 <__assert_fail@plt+0x5ad8>
   181c0:	mov	r3, #0
   181c4:	mov	r0, r3
   181c8:	sub	sp, fp, #4
   181cc:	pop	{fp, pc}
   181d0:	push	{fp, lr}
   181d4:	add	fp, sp, #4
   181d8:	sub	sp, sp, #24
   181dc:	str	r0, [fp, #-24]	; 0xffffffe8
   181e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181e4:	cmp	r3, #0
   181e8:	beq	1825c <__assert_fail@plt+0x5b70>
   181ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181f0:	ldr	r3, [r3, #156]	; 0x9c
   181f4:	mov	r0, r3
   181f8:	bl	181d0 <__assert_fail@plt+0x5ae4>
   181fc:	mov	r3, r0
   18200:	str	r3, [fp, #-12]
   18204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18208:	ldr	r3, [r3, #160]	; 0xa0
   1820c:	mov	r0, r3
   18210:	bl	181d0 <__assert_fail@plt+0x5ae4>
   18214:	mov	r3, r0
   18218:	str	r3, [fp, #-16]
   1821c:	ldr	r2, [fp, #-16]
   18220:	ldr	r3, [fp, #-12]
   18224:	cmp	r2, r3
   18228:	movcs	r3, r2
   1822c:	movcc	r3, r3
   18230:	str	r3, [fp, #-8]
   18234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18238:	ldr	r2, [r3, #24]
   1823c:	ldr	r3, [fp, #-8]
   18240:	cmp	r2, r3
   18244:	bls	18254 <__assert_fail@plt+0x5b68>
   18248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1824c:	ldr	r3, [r3, #24]
   18250:	str	r3, [fp, #-8]
   18254:	ldr	r3, [fp, #-8]
   18258:	b	18260 <__assert_fail@plt+0x5b74>
   1825c:	mov	r3, #0
   18260:	mov	r0, r3
   18264:	sub	sp, fp, #4
   18268:	pop	{fp, pc}
   1826c:	push	{fp}		; (str fp, [sp, #-4]!)
   18270:	add	fp, sp, #0
   18274:	sub	sp, sp, #20
   18278:	str	r0, [fp, #-16]
   1827c:	ldr	r3, [fp, #-16]
   18280:	ldr	r3, [r3, #156]	; 0x9c
   18284:	ldr	r3, [r3, #160]	; 0xa0
   18288:	str	r3, [fp, #-8]
   1828c:	ldr	r3, [fp, #-16]
   18290:	ldr	r3, [r3, #156]	; 0x9c
   18294:	ldr	r2, [fp, #-16]
   18298:	ldr	r2, [r2, #160]	; 0xa0
   1829c:	str	r2, [r3, #160]	; 0xa0
   182a0:	ldr	r3, [fp, #-16]
   182a4:	ldr	r2, [fp, #-8]
   182a8:	str	r2, [r3, #160]	; 0xa0
   182ac:	nop			; (mov r0, r0)
   182b0:	add	sp, fp, #0
   182b4:	pop	{fp}		; (ldr fp, [sp], #4)
   182b8:	bx	lr
   182bc:	push	{fp, lr}
   182c0:	add	fp, sp, #4
   182c4:	sub	sp, sp, #48	; 0x30
   182c8:	str	r0, [fp, #-40]	; 0xffffffd8
   182cc:	mov	r3, #0
   182d0:	str	r3, [fp, #-16]
   182d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   182d8:	ldr	r3, [r3, #8]
   182dc:	cmp	r3, #3
   182e0:	beq	182ec <__assert_fail@plt+0x5c00>
   182e4:	ldr	r3, [pc, #780]	; 185f8 <__assert_fail@plt+0x5f0c>
   182e8:	str	r3, [fp, #-16]
   182ec:	ldr	r3, [fp, #-16]
   182f0:	cmp	r3, #0
   182f4:	bne	18320 <__assert_fail@plt+0x5c34>
   182f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   182fc:	ldr	r3, [r3, #156]	; 0x9c
   18300:	cmp	r3, #0
   18304:	beq	18318 <__assert_fail@plt+0x5c2c>
   18308:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1830c:	ldr	r3, [r3, #160]	; 0xa0
   18310:	cmp	r3, #0
   18314:	bne	18320 <__assert_fail@plt+0x5c34>
   18318:	ldr	r3, [pc, #732]	; 185fc <__assert_fail@plt+0x5f10>
   1831c:	str	r3, [fp, #-16]
   18320:	ldr	r3, [fp, #-16]
   18324:	cmp	r3, #0
   18328:	bne	18348 <__assert_fail@plt+0x5c5c>
   1832c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18330:	ldr	r3, [r3, #156]	; 0x9c
   18334:	ldr	r3, [r3, #160]	; 0xa0
   18338:	cmp	r3, #0
   1833c:	bne	18348 <__assert_fail@plt+0x5c5c>
   18340:	ldr	r3, [pc, #696]	; 18600 <__assert_fail@plt+0x5f14>
   18344:	str	r3, [fp, #-16]
   18348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1834c:	add	r3, r3, #160	; 0xa0
   18350:	str	r3, [fp, #-24]	; 0xffffffe8
   18354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18358:	ldr	r3, [r3, #156]	; 0x9c
   1835c:	add	r3, r3, #160	; 0xa0
   18360:	str	r3, [fp, #-28]	; 0xffffffe4
   18364:	ldr	r3, [fp, #-16]
   18368:	cmp	r3, #0
   1836c:	bne	18394 <__assert_fail@plt+0x5ca8>
   18370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18374:	ldr	r3, [r3]
   18378:	mov	r0, r3
   1837c:	bl	18144 <__assert_fail@plt+0x5a58>
   18380:	mov	r3, r0
   18384:	cmp	r3, #0
   18388:	beq	18394 <__assert_fail@plt+0x5ca8>
   1838c:	ldr	r3, [pc, #624]	; 18604 <__assert_fail@plt+0x5f18>
   18390:	str	r3, [fp, #-16]
   18394:	ldr	r3, [fp, #-16]
   18398:	cmp	r3, #0
   1839c:	bne	183c4 <__assert_fail@plt+0x5cd8>
   183a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183a4:	ldr	r3, [r3]
   183a8:	mov	r0, r3
   183ac:	bl	18144 <__assert_fail@plt+0x5a58>
   183b0:	mov	r3, r0
   183b4:	cmp	r3, #0
   183b8:	beq	183c4 <__assert_fail@plt+0x5cd8>
   183bc:	ldr	r3, [pc, #580]	; 18608 <__assert_fail@plt+0x5f1c>
   183c0:	str	r3, [fp, #-16]
   183c4:	ldr	r3, [fp, #-16]
   183c8:	cmp	r3, #0
   183cc:	bne	18410 <__assert_fail@plt+0x5d24>
   183d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183d4:	ldr	r3, [r3]
   183d8:	mov	r0, r3
   183dc:	bl	181d0 <__assert_fail@plt+0x5ae4>
   183e0:	str	r0, [fp, #-8]
   183e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183e8:	ldr	r3, [r3]
   183ec:	mov	r0, r3
   183f0:	bl	181d0 <__assert_fail@plt+0x5ae4>
   183f4:	str	r0, [fp, #-12]
   183f8:	ldr	r2, [fp, #-8]
   183fc:	ldr	r3, [fp, #-12]
   18400:	cmp	r2, r3
   18404:	bge	18410 <__assert_fail@plt+0x5d24>
   18408:	ldr	r3, [pc, #508]	; 1860c <__assert_fail@plt+0x5f20>
   1840c:	str	r3, [fp, #-16]
   18410:	ldr	r3, [fp, #-16]
   18414:	cmp	r3, #0
   18418:	bne	185a4 <__assert_fail@plt+0x5eb8>
   1841c:	ldr	r2, [fp, #-8]
   18420:	ldr	r3, [fp, #-12]
   18424:	cmp	r2, r3
   18428:	bne	1853c <__assert_fail@plt+0x5e50>
   1842c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18430:	ldr	r3, [r3]
   18434:	ldr	r3, [r3, #28]
   18438:	str	r3, [fp, #-32]	; 0xffffffe0
   1843c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18440:	ldr	r3, [r3]
   18444:	ldr	r3, [r3, #28]
   18448:	str	r3, [fp, #-36]	; 0xffffffdc
   1844c:	ldr	r3, [pc, #444]	; 18610 <__assert_fail@plt+0x5f24>
   18450:	ldr	r3, [r3, #44]	; 0x2c
   18454:	and	r3, r3, #8
   18458:	cmp	r3, #0
   1845c:	beq	18488 <__assert_fail@plt+0x5d9c>
   18460:	ldr	r3, [pc, #428]	; 18614 <__assert_fail@plt+0x5f28>
   18464:	ldr	r0, [r3]
   18468:	vldr	s15, [fp, #-32]	; 0xffffffe0
   1846c:	vcvt.f64.f32	d6, s15
   18470:	vldr	s15, [fp, #-36]	; 0xffffffdc
   18474:	vcvt.f64.f32	d7, s15
   18478:	vstr	d7, [sp]
   1847c:	vmov	r2, r3, d6
   18480:	ldr	r1, [pc, #400]	; 18618 <__assert_fail@plt+0x5f2c>
   18484:	bl	123f8 <fprintf@plt>
   18488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1848c:	ldr	r3, [r3]
   18490:	ldr	r2, [pc, #388]	; 1861c <__assert_fail@plt+0x5f30>
   18494:	cmp	r3, r2
   18498:	bne	184d8 <__assert_fail@plt+0x5dec>
   1849c:	vldr	s14, [fp, #-36]	; 0xffffffdc
   184a0:	vldr	s15, [fp, #-32]	; 0xffffffe0
   184a4:	vcmpe.f32	s14, s15
   184a8:	vmrs	APSR_nzcv, fpscr
   184ac:	movmi	r3, #1
   184b0:	movpl	r3, #0
   184b4:	strb	r3, [fp, #-17]	; 0xffffffef
   184b8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   184bc:	eor	r3, r3, #1
   184c0:	uxtb	r3, r3
   184c4:	cmp	r3, #0
   184c8:	beq	18544 <__assert_fail@plt+0x5e58>
   184cc:	ldr	r3, [pc, #332]	; 18620 <__assert_fail@plt+0x5f34>
   184d0:	str	r3, [fp, #-16]
   184d4:	b	18544 <__assert_fail@plt+0x5e58>
   184d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   184dc:	ldr	r3, [r3]
   184e0:	ldr	r2, [pc, #316]	; 18624 <__assert_fail@plt+0x5f38>
   184e4:	cmp	r3, r2
   184e8:	bne	18528 <__assert_fail@plt+0x5e3c>
   184ec:	vldr	s14, [fp, #-36]	; 0xffffffdc
   184f0:	vldr	s15, [fp, #-32]	; 0xffffffe0
   184f4:	vcmpe.f32	s14, s15
   184f8:	vmrs	APSR_nzcv, fpscr
   184fc:	movgt	r3, #1
   18500:	movle	r3, #0
   18504:	strb	r3, [fp, #-17]	; 0xffffffef
   18508:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1850c:	eor	r3, r3, #1
   18510:	uxtb	r3, r3
   18514:	cmp	r3, #0
   18518:	beq	18544 <__assert_fail@plt+0x5e58>
   1851c:	ldr	r3, [pc, #260]	; 18628 <__assert_fail@plt+0x5f3c>
   18520:	str	r3, [fp, #-16]
   18524:	b	18544 <__assert_fail@plt+0x5e58>
   18528:	mov	r3, #0
   1852c:	strb	r3, [fp, #-17]	; 0xffffffef
   18530:	ldr	r3, [pc, #244]	; 1862c <__assert_fail@plt+0x5f40>
   18534:	str	r3, [fp, #-16]
   18538:	b	18544 <__assert_fail@plt+0x5e58>
   1853c:	mov	r3, #1
   18540:	strb	r3, [fp, #-17]	; 0xffffffef
   18544:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18548:	cmp	r3, #0
   1854c:	beq	185a4 <__assert_fail@plt+0x5eb8>
   18550:	ldr	r3, [pc, #184]	; 18610 <__assert_fail@plt+0x5f24>
   18554:	ldr	r3, [r3, #44]	; 0x2c
   18558:	and	r3, r3, #8
   1855c:	cmp	r3, #0
   18560:	beq	18594 <__assert_fail@plt+0x5ea8>
   18564:	ldr	r3, [pc, #168]	; 18614 <__assert_fail@plt+0x5f28>
   18568:	ldr	r3, [r3]
   1856c:	mov	r2, #24
   18570:	mov	r1, #1
   18574:	ldr	r0, [pc, #180]	; 18630 <__assert_fail@plt+0x5f44>
   18578:	bl	12224 <fwrite@plt>
   1857c:	ldr	r3, [pc, #144]	; 18614 <__assert_fail@plt+0x5f28>
   18580:	ldr	r3, [r3]
   18584:	mov	r2, #0
   18588:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1858c:	mov	r0, r3
   18590:	bl	1a514 <__assert_fail@plt+0x7e28>
   18594:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18598:	bl	1826c <__assert_fail@plt+0x5b80>
   1859c:	mov	r3, #1
   185a0:	b	185ec <__assert_fail@plt+0x5f00>
   185a4:	ldr	r3, [pc, #100]	; 18610 <__assert_fail@plt+0x5f24>
   185a8:	ldr	r3, [r3, #44]	; 0x2c
   185ac:	and	r3, r3, #8
   185b0:	cmp	r3, #0
   185b4:	beq	185e8 <__assert_fail@plt+0x5efc>
   185b8:	ldr	r3, [pc, #84]	; 18614 <__assert_fail@plt+0x5f28>
   185bc:	ldr	r3, [r3]
   185c0:	ldr	r2, [fp, #-16]
   185c4:	ldr	r1, [pc, #104]	; 18634 <__assert_fail@plt+0x5f48>
   185c8:	mov	r0, r3
   185cc:	bl	123f8 <fprintf@plt>
   185d0:	ldr	r3, [pc, #60]	; 18614 <__assert_fail@plt+0x5f28>
   185d4:	ldr	r3, [r3]
   185d8:	mov	r2, #0
   185dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   185e0:	mov	r0, r3
   185e4:	bl	1a514 <__assert_fail@plt+0x7e28>
   185e8:	mov	r3, #0
   185ec:	mov	r0, r3
   185f0:	sub	sp, fp, #4
   185f4:	pop	{fp, pc}
   185f8:	ldrdeq	r4, [r6], -r0
   185fc:	andeq	r4, r6, r8, ror #29
   18600:	andeq	r4, r6, r0, lsl #30
   18604:	andeq	r4, r6, r0, lsr #30
   18608:	andeq	r4, r6, r0, asr #30
   1860c:	andeq	r4, r6, r0, ror #30
   18610:	andeq	sp, r7, ip, asr #32
   18614:	andeq	ip, r7, r8, lsr #14
   18618:	andeq	r4, r6, r0, ror pc
   1861c:	andeq	r5, r1, r8, ror r6
   18620:	andeq	r4, r6, ip, lsl #31
   18624:	andeq	r4, r1, r4, lsr r1
   18628:			; <UNDEFINED> instruction: 0x00064fb8
   1862c:	andeq	r4, r6, r8, ror #31
   18630:	strdeq	r4, [r6], -ip
   18634:	andeq	r5, r6, r8, lsl r0
   18638:	push	{fp, lr}
   1863c:	add	fp, sp, #4
   18640:	sub	sp, sp, #16
   18644:	str	r0, [fp, #-16]
   18648:	ldr	r3, [fp, #-16]
   1864c:	cmp	r3, #0
   18650:	beq	186c4 <__assert_fail@plt+0x5fd8>
   18654:	mov	r3, #0
   18658:	strb	r3, [fp, #-5]
   1865c:	ldr	r0, [fp, #-16]
   18660:	bl	182bc <__assert_fail@plt+0x5bd0>
   18664:	mov	r3, r0
   18668:	cmp	r3, #0
   1866c:	bne	186a8 <__assert_fail@plt+0x5fbc>
   18670:	ldr	r3, [fp, #-16]
   18674:	ldr	r3, [r3, #156]	; 0x9c
   18678:	mov	r0, r3
   1867c:	bl	18638 <__assert_fail@plt+0x5f4c>
   18680:	mov	r3, r0
   18684:	cmp	r3, #0
   18688:	bne	186a8 <__assert_fail@plt+0x5fbc>
   1868c:	ldr	r3, [fp, #-16]
   18690:	ldr	r3, [r3, #160]	; 0xa0
   18694:	mov	r0, r3
   18698:	bl	18638 <__assert_fail@plt+0x5f4c>
   1869c:	mov	r3, r0
   186a0:	cmp	r3, #0
   186a4:	beq	186b0 <__assert_fail@plt+0x5fc4>
   186a8:	mov	r3, #1
   186ac:	strb	r3, [fp, #-5]
   186b0:	ldrb	r3, [fp, #-5]
   186b4:	cmp	r3, #0
   186b8:	bne	18654 <__assert_fail@plt+0x5f68>
   186bc:	ldrb	r3, [fp, #-5]
   186c0:	b	186c8 <__assert_fail@plt+0x5fdc>
   186c4:	mov	r3, #0
   186c8:	mov	r0, r3
   186cc:	sub	sp, fp, #4
   186d0:	pop	{fp, pc}
   186d4:	push	{r4, fp, lr}
   186d8:	add	fp, sp, #8
   186dc:	sub	sp, sp, #164	; 0xa4
   186e0:	str	r0, [fp, #-160]	; 0xffffff60
   186e4:	mov	r3, #0
   186e8:	str	r3, [fp, #-60]	; 0xffffffc4
   186ec:	mov	r3, #0
   186f0:	str	r3, [fp, #-56]	; 0xffffffc8
   186f4:	mov	r3, #0
   186f8:	str	r3, [fp, #-68]	; 0xffffffbc
   186fc:	mov	r3, #0
   18700:	str	r3, [fp, #-64]	; 0xffffffc0
   18704:	mov	r3, #0
   18708:	strb	r3, [fp, #-25]	; 0xffffffe7
   1870c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18710:	cmp	r3, #0
   18714:	beq	18728 <__assert_fail@plt+0x603c>
   18718:	ldr	r3, [fp, #-160]	; 0xffffff60
   1871c:	ldr	r3, [r3]
   18720:	cmp	r3, #0
   18724:	bne	18730 <__assert_fail@plt+0x6044>
   18728:	mov	r3, #0
   1872c:	b	18c0c <__assert_fail@plt+0x6520>
   18730:	mov	r3, #0
   18734:	str	r3, [fp, #-16]
   18738:	b	18760 <__assert_fail@plt+0x6074>
   1873c:	sub	r2, fp, #156	; 0x9c
   18740:	ldr	r3, [fp, #-16]
   18744:	lsl	r3, r3, #3
   18748:	add	r3, r2, r3
   1874c:	mov	r0, r3
   18750:	bl	17cbc <__assert_fail@plt+0x55d0>
   18754:	ldr	r3, [fp, #-16]
   18758:	add	r3, r3, #1
   1875c:	str	r3, [fp, #-16]
   18760:	ldr	r3, [fp, #-16]
   18764:	cmp	r3, #10
   18768:	ble	1873c <__assert_fail@plt+0x6050>
   1876c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18770:	str	r3, [fp, #-24]	; 0xffffffe8
   18774:	mov	r3, #3
   18778:	str	r3, [fp, #-32]	; 0xffffffe0
   1877c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18780:	ldr	r3, [r3]
   18784:	str	r3, [fp, #-20]	; 0xffffffec
   18788:	b	187b0 <__assert_fail@plt+0x60c4>
   1878c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18790:	add	r3, r3, #156	; 0x9c
   18794:	str	r3, [fp, #-24]	; 0xffffffe8
   18798:	ldr	r3, [fp, #-20]	; 0xffffffec
   1879c:	ldr	r3, [r3, #12]
   187a0:	str	r3, [fp, #-32]	; 0xffffffe0
   187a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   187a8:	ldr	r3, [r3, #156]	; 0x9c
   187ac:	str	r3, [fp, #-20]	; 0xffffffec
   187b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   187b4:	ldr	r3, [r3, #156]	; 0x9c
   187b8:	cmp	r3, #0
   187bc:	bne	1878c <__assert_fail@plt+0x60a0>
   187c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   187c4:	ldr	r3, [r3, #8]
   187c8:	cmp	r3, #3
   187cc:	beq	187e0 <__assert_fail@plt+0x60f4>
   187d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   187d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   187dc:	bl	18c9c <__assert_fail@plt+0x65b0>
   187e0:	ldr	r3, [pc, #1072]	; 18c18 <__assert_fail@plt+0x652c>
   187e4:	ldr	r3, [r3, #44]	; 0x2c
   187e8:	and	r3, r3, #9
   187ec:	cmp	r3, #0
   187f0:	beq	18828 <__assert_fail@plt+0x613c>
   187f4:	ldr	r3, [pc, #1056]	; 18c1c <__assert_fail@plt+0x6530>
   187f8:	ldr	r3, [r3]
   187fc:	mov	r2, #22
   18800:	mov	r1, #1
   18804:	ldr	r0, [pc, #1044]	; 18c20 <__assert_fail@plt+0x6534>
   18808:	bl	12224 <fwrite@plt>
   1880c:	ldr	r3, [pc, #1032]	; 18c1c <__assert_fail@plt+0x6530>
   18810:	ldr	r0, [r3]
   18814:	ldr	r3, [fp, #-160]	; 0xffffff60
   18818:	ldr	r3, [r3]
   1881c:	mov	r2, #0
   18820:	mov	r1, r3
   18824:	bl	1a514 <__assert_fail@plt+0x7e28>
   18828:	ldr	r3, [fp, #-160]	; 0xffffff60
   1882c:	str	r3, [fp, #-24]	; 0xffffffe8
   18830:	mov	r3, #0
   18834:	str	r3, [fp, #-36]	; 0xffffffdc
   18838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1883c:	ldr	r3, [r3]
   18840:	cmp	r3, #0
   18844:	beq	18bc8 <__assert_fail@plt+0x64dc>
   18848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1884c:	ldr	r3, [r3]
   18850:	ldr	r3, [r3, #8]
   18854:	cmp	r3, #3
   18858:	bne	18bc8 <__assert_fail@plt+0x64dc>
   1885c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18860:	ldr	r3, [r3]
   18864:	ldr	r3, [r3, #12]
   18868:	str	r3, [fp, #-36]	; 0xffffffdc
   1886c:	b	18bc8 <__assert_fail@plt+0x64dc>
   18870:	ldr	r3, [fp, #-20]	; 0xffffffec
   18874:	ldr	r3, [r3, #8]
   18878:	cmp	r3, #3
   1887c:	bne	188a8 <__assert_fail@plt+0x61bc>
   18880:	ldr	r3, [fp, #-20]	; 0xffffffec
   18884:	ldr	r2, [r3, #12]
   18888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1888c:	cmp	r2, r3
   18890:	beq	188a8 <__assert_fail@plt+0x61bc>
   18894:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18898:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1889c:	ldr	r0, [fp, #-20]	; 0xffffffec
   188a0:	bl	18c9c <__assert_fail@plt+0x65b0>
   188a4:	str	r0, [fp, #-20]	; 0xffffffec
   188a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   188ac:	ldr	r3, [r3, #160]	; 0xa0
   188b0:	ldr	r3, [r3, #8]
   188b4:	str	r3, [fp, #-40]	; 0xffffffd8
   188b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   188bc:	ldr	r3, [r3, #160]	; 0xa0
   188c0:	ldr	r3, [r3]
   188c4:	str	r3, [fp, #-44]	; 0xffffffd4
   188c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   188cc:	cmp	r3, #3
   188d0:	ldrls	pc, [pc, r3, lsl #2]
   188d4:	b	18b50 <__assert_fail@plt+0x6464>
   188d8:	andeq	r8, r1, r8, ror #17
   188dc:	andeq	r8, r1, r8, ror #17
   188e0:	andeq	r8, r1, r4, lsl #22
   188e4:	andeq	r8, r1, ip, lsr #22
   188e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   188ec:	cmp	r3, #1
   188f0:	beq	18b6c <__assert_fail@plt+0x6480>
   188f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   188f8:	ldr	r3, [r3, #160]	; 0xa0
   188fc:	ldrb	r3, [r3, #16]
   18900:	eor	r3, r3, #1
   18904:	uxtb	r3, r3
   18908:	cmp	r3, #0
   1890c:	beq	18b74 <__assert_fail@plt+0x6488>
   18910:	ldr	r3, [fp, #-20]	; 0xffffffec
   18914:	ldr	r3, [r3, #160]	; 0xa0
   18918:	mov	r0, r3
   1891c:	bl	17b30 <__assert_fail@plt+0x5444>
   18920:	mov	r3, r0
   18924:	cmp	r3, #0
   18928:	beq	189a8 <__assert_fail@plt+0x62bc>
   1892c:	ldr	r3, [pc, #740]	; 18c18 <__assert_fail@plt+0x652c>
   18930:	ldr	r3, [r3, #44]	; 0x2c
   18934:	and	r3, r3, #8
   18938:	cmp	r3, #0
   1893c:	beq	18990 <__assert_fail@plt+0x62a4>
   18940:	ldr	r3, [pc, #724]	; 18c1c <__assert_fail@plt+0x6530>
   18944:	ldr	r0, [r3]
   18948:	ldr	r3, [pc, #712]	; 18c18 <__assert_fail@plt+0x652c>
   1894c:	ldrh	r3, [r3, #68]	; 0x44
   18950:	mov	r2, r3
   18954:	ldr	r1, [pc, #712]	; 18c24 <__assert_fail@plt+0x6538>
   18958:	bl	123f8 <fprintf@plt>
   1895c:	ldr	r3, [pc, #696]	; 18c1c <__assert_fail@plt+0x6530>
   18960:	ldr	r2, [r3]
   18964:	ldr	r3, [fp, #-20]	; 0xffffffec
   18968:	ldr	r3, [r3, #160]	; 0xa0
   1896c:	mov	r1, r3
   18970:	mov	r0, r2
   18974:	bl	17c54 <__assert_fail@plt+0x5568>
   18978:	ldr	r3, [pc, #668]	; 18c1c <__assert_fail@plt+0x6530>
   1897c:	ldr	r3, [r3]
   18980:	mov	r2, #16
   18984:	mov	r1, #1
   18988:	ldr	r0, [pc, #664]	; 18c28 <__assert_fail@plt+0x653c>
   1898c:	bl	12224 <fwrite@plt>
   18990:	sub	r3, fp, #68	; 0x44
   18994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18998:	ldr	r1, [fp, #-20]	; 0xffffffec
   1899c:	mov	r0, r3
   189a0:	bl	17cf8 <__assert_fail@plt+0x560c>
   189a4:	b	18bc8 <__assert_fail@plt+0x64dc>
   189a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   189ac:	ldr	r2, [pc, #632]	; 18c2c <__assert_fail@plt+0x6540>
   189b0:	cmp	r3, r2
   189b4:	bne	189d0 <__assert_fail@plt+0x62e4>
   189b8:	sub	r3, fp, #60	; 0x3c
   189bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   189c4:	mov	r0, r3
   189c8:	bl	17cf8 <__assert_fail@plt+0x560c>
   189cc:	b	18bc8 <__assert_fail@plt+0x64dc>
   189d0:	ldr	r3, [pc, #576]	; 18c18 <__assert_fail@plt+0x652c>
   189d4:	ldrh	r3, [r3, #68]	; 0x44
   189d8:	cmp	r3, #1
   189dc:	bls	18a24 <__assert_fail@plt+0x6338>
   189e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   189e4:	ldr	r3, [r3, #160]	; 0xa0
   189e8:	ldr	r3, [r3, #24]
   189ec:	cmp	r3, #2
   189f0:	beq	18a08 <__assert_fail@plt+0x631c>
   189f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   189f8:	ldr	r3, [r3, #160]	; 0xa0
   189fc:	ldr	r3, [r3, #24]
   18a00:	cmp	r3, #1
   18a04:	bne	18a24 <__assert_fail@plt+0x6338>
   18a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a0c:	ldr	r3, [r3, #160]	; 0xa0
   18a10:	ldrb	r3, [r3, #18]
   18a14:	eor	r3, r3, #1
   18a18:	uxtb	r3, r3
   18a1c:	cmp	r3, #0
   18a20:	bne	18a34 <__assert_fail@plt+0x6348>
   18a24:	ldr	r3, [pc, #492]	; 18c18 <__assert_fail@plt+0x652c>
   18a28:	ldrh	r3, [r3, #68]	; 0x44
   18a2c:	cmp	r3, #2
   18a30:	bls	18a3c <__assert_fail@plt+0x6350>
   18a34:	mov	r3, #1
   18a38:	b	18a40 <__assert_fail@plt+0x6354>
   18a3c:	mov	r3, #0
   18a40:	strb	r3, [fp, #-45]	; 0xffffffd3
   18a44:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   18a48:	and	r3, r3, #1
   18a4c:	strb	r3, [fp, #-45]	; 0xffffffd3
   18a50:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   18a54:	cmp	r3, #0
   18a58:	beq	18b74 <__assert_fail@plt+0x6488>
   18a5c:	ldr	r3, [pc, #436]	; 18c18 <__assert_fail@plt+0x652c>
   18a60:	ldr	r3, [r3, #44]	; 0x2c
   18a64:	and	r3, r3, #8
   18a68:	cmp	r3, #0
   18a6c:	beq	18ad8 <__assert_fail@plt+0x63ec>
   18a70:	ldr	r3, [pc, #420]	; 18c1c <__assert_fail@plt+0x6530>
   18a74:	ldr	r0, [r3]
   18a78:	ldr	r3, [pc, #408]	; 18c18 <__assert_fail@plt+0x652c>
   18a7c:	ldrh	r3, [r3, #68]	; 0x44
   18a80:	mov	r2, r3
   18a84:	ldr	r1, [pc, #420]	; 18c30 <__assert_fail@plt+0x6544>
   18a88:	bl	123f8 <fprintf@plt>
   18a8c:	ldr	r3, [pc, #392]	; 18c1c <__assert_fail@plt+0x6530>
   18a90:	ldr	r2, [r3]
   18a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a98:	ldr	r3, [r3, #160]	; 0xa0
   18a9c:	mov	r1, r3
   18aa0:	mov	r0, r2
   18aa4:	bl	17c54 <__assert_fail@plt+0x5568>
   18aa8:	ldr	r3, [pc, #364]	; 18c1c <__assert_fail@plt+0x6530>
   18aac:	ldr	r4, [r3]
   18ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ab4:	ldr	r3, [r3, #160]	; 0xa0
   18ab8:	ldr	r3, [r3, #24]
   18abc:	mov	r0, r3
   18ac0:	bl	1a358 <__assert_fail@plt+0x7c6c>
   18ac4:	mov	r3, r0
   18ac8:	mov	r2, r3
   18acc:	ldr	r1, [pc, #352]	; 18c34 <__assert_fail@plt+0x6548>
   18ad0:	mov	r0, r4
   18ad4:	bl	123f8 <fprintf@plt>
   18ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18adc:	ldr	r3, [r3, #160]	; 0xa0
   18ae0:	ldr	r3, [r3, #24]
   18ae4:	sub	r2, fp, #156	; 0x9c
   18ae8:	lsl	r3, r3, #3
   18aec:	add	r3, r2, r3
   18af0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18af8:	mov	r0, r3
   18afc:	bl	17cf8 <__assert_fail@plt+0x560c>
   18b00:	b	18bc8 <__assert_fail@plt+0x64dc>
   18b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b08:	ldr	r4, [r3, #160]	; 0xa0
   18b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b10:	ldr	r3, [r3, #160]	; 0xa0
   18b14:	add	r3, r3, #160	; 0xa0
   18b18:	mov	r0, r3
   18b1c:	bl	186d4 <__assert_fail@plt+0x5fe8>
   18b20:	mov	r3, r0
   18b24:	strb	r3, [r4, #16]
   18b28:	b	18b78 <__assert_fail@plt+0x648c>
   18b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b30:	ldr	r4, [r3, #160]	; 0xa0
   18b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b38:	add	r3, r3, #160	; 0xa0
   18b3c:	mov	r0, r3
   18b40:	bl	186d4 <__assert_fail@plt+0x5fe8>
   18b44:	mov	r3, r0
   18b48:	strb	r3, [r4, #16]
   18b4c:	b	18b78 <__assert_fail@plt+0x648c>
   18b50:	ldr	r0, [pc, #224]	; 18c38 <__assert_fail@plt+0x654c>
   18b54:	bl	12398 <gettext@plt>
   18b58:	mov	r3, r0
   18b5c:	mov	r2, r3
   18b60:	mov	r1, #0
   18b64:	mov	r0, #1
   18b68:	bl	122b4 <error@plt>
   18b6c:	nop			; (mov r0, r0)
   18b70:	b	18b78 <__assert_fail@plt+0x648c>
   18b74:	nop			; (mov r0, r0)
   18b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b7c:	ldr	r3, [r3, #160]	; 0xa0
   18b80:	ldrb	r3, [r3, #16]
   18b84:	cmp	r3, #0
   18b88:	beq	18bbc <__assert_fail@plt+0x64d0>
   18b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b90:	str	r3, [fp, #-52]	; 0xffffffcc
   18b94:	sub	r1, fp, #60	; 0x3c
   18b98:	sub	r2, fp, #68	; 0x44
   18b9c:	sub	r0, fp, #156	; 0x9c
   18ba0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ba4:	str	r3, [sp]
   18ba8:	mov	r3, r1
   18bac:	mov	r1, #11
   18bb0:	bl	18094 <__assert_fail@plt+0x59a8>
   18bb4:	mov	r3, #1
   18bb8:	strb	r3, [fp, #-25]	; 0xffffffe7
   18bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18bc0:	add	r3, r3, #156	; 0x9c
   18bc4:	str	r3, [fp, #-24]	; 0xffffffe8
   18bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bcc:	ldr	r3, [r3]
   18bd0:	str	r3, [fp, #-20]	; 0xffffffec
   18bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18bd8:	cmp	r3, #0
   18bdc:	bne	18870 <__assert_fail@plt+0x6184>
   18be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18be4:	str	r3, [fp, #-52]	; 0xffffffcc
   18be8:	sub	r1, fp, #60	; 0x3c
   18bec:	sub	r2, fp, #68	; 0x44
   18bf0:	sub	r0, fp, #156	; 0x9c
   18bf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18bf8:	str	r3, [sp]
   18bfc:	mov	r3, r1
   18c00:	mov	r1, #11
   18c04:	bl	18094 <__assert_fail@plt+0x59a8>
   18c08:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   18c0c:	mov	r0, r3
   18c10:	sub	sp, fp, #8
   18c14:	pop	{r4, fp, pc}
   18c18:	andeq	sp, r7, ip, asr #32
   18c1c:	andeq	ip, r7, r8, lsr #14
   18c20:	andeq	r5, r6, ip, lsr r0
   18c24:	andeq	r5, r6, r4, asr r0
   18c28:	andeq	r5, r6, r8, ror r0
   18c2c:			; <UNDEFINED> instruction: 0x00015ab8
   18c30:	andeq	r5, r6, ip, lsl #1
   18c34:	andeq	r5, r6, ip, lsr #1
   18c38:	andeq	r4, r6, ip, lsr lr
   18c3c:	push	{fp}		; (str fp, [sp, #-4]!)
   18c40:	add	fp, sp, #0
   18c44:	sub	sp, sp, #12
   18c48:	vstr	s0, [fp, #-8]
   18c4c:	vldr	s15, [fp, #-8]
   18c50:	vldr	s14, [pc, #64]	; 18c98 <__assert_fail@plt+0x65ac>
   18c54:	vcmpe.f32	s15, s14
   18c58:	vmrs	APSR_nzcv, fpscr
   18c5c:	ble	18c68 <__assert_fail@plt+0x657c>
   18c60:	mov	r3, #1065353216	; 0x3f800000
   18c64:	b	18c84 <__assert_fail@plt+0x6598>
   18c68:	vldr	s15, [fp, #-8]
   18c6c:	vcmpe.f32	s15, #0.0
   18c70:	vmrs	APSR_nzcv, fpscr
   18c74:	bpl	18c80 <__assert_fail@plt+0x6594>
   18c78:	mov	r3, #0
   18c7c:	b	18c84 <__assert_fail@plt+0x6598>
   18c80:	ldr	r3, [fp, #-8]
   18c84:	vmov	s15, r3
   18c88:	vmov.f32	s0, s15
   18c8c:	add	sp, fp, #0
   18c90:	pop	{fp}		; (ldr fp, [sp], #4)
   18c94:	bx	lr
   18c98:	svccc	0x00800000
   18c9c:	push	{fp, lr}
   18ca0:	add	fp, sp, #4
   18ca4:	sub	sp, sp, #24
   18ca8:	str	r0, [fp, #-16]
   18cac:	str	r1, [fp, #-20]	; 0xffffffec
   18cb0:	str	r2, [fp, #-24]	; 0xffffffe8
   18cb4:	mov	r0, #176	; 0xb0
   18cb8:	bl	3daa0 <__assert_fail@plt+0x2b3b4>
   18cbc:	mov	r3, r0
   18cc0:	str	r3, [fp, #-8]
   18cc4:	ldr	r3, [fp, #-8]
   18cc8:	mov	r2, #3
   18ccc:	str	r2, [r3, #8]
   18cd0:	ldr	r3, [fp, #-8]
   18cd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cd8:	str	r2, [r3, #12]
   18cdc:	ldr	r3, [fp, #-8]
   18ce0:	mov	r2, #0
   18ce4:	str	r2, [r3, #24]
   18ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cec:	cmp	r3, #2
   18cf0:	beq	18d2c <__assert_fail@plt+0x6640>
   18cf4:	cmp	r3, #3
   18cf8:	beq	18d64 <__assert_fail@plt+0x6678>
   18cfc:	cmp	r3, #1
   18d00:	bne	18d9c <__assert_fail@plt+0x66b0>
   18d04:	ldr	r3, [fp, #-8]
   18d08:	ldr	r2, [pc, #180]	; 18dc4 <__assert_fail@plt+0x66d8>
   18d0c:	str	r2, [r3]
   18d10:	ldr	r3, [fp, #-8]
   18d14:	ldr	r2, [pc, #172]	; 18dc8 <__assert_fail@plt+0x66dc>
   18d18:	str	r2, [r3, #4]
   18d1c:	ldr	r3, [fp, #-8]
   18d20:	mov	r2, #1065353216	; 0x3f800000
   18d24:	str	r2, [r3, #28]
   18d28:	b	18d9c <__assert_fail@plt+0x66b0>
   18d2c:	ldr	r3, [fp, #-8]
   18d30:	ldr	r2, [pc, #148]	; 18dcc <__assert_fail@plt+0x66e0>
   18d34:	str	r2, [r3]
   18d38:	ldr	r3, [fp, #-8]
   18d3c:	ldr	r2, [pc, #140]	; 18dd0 <__assert_fail@plt+0x66e4>
   18d40:	str	r2, [r3, #4]
   18d44:	ldr	r3, [fp, #-16]
   18d48:	vldr	s15, [r3, #28]
   18d4c:	vmov.f32	s0, s15
   18d50:	bl	18c3c <__assert_fail@plt+0x6550>
   18d54:	vmov.f32	s15, s0
   18d58:	ldr	r3, [fp, #-8]
   18d5c:	vstr	s15, [r3, #28]
   18d60:	b	18d9c <__assert_fail@plt+0x66b0>
   18d64:	ldr	r3, [fp, #-8]
   18d68:	ldr	r2, [pc, #100]	; 18dd4 <__assert_fail@plt+0x66e8>
   18d6c:	str	r2, [r3]
   18d70:	ldr	r3, [fp, #-8]
   18d74:	ldr	r2, [pc, #92]	; 18dd8 <__assert_fail@plt+0x66ec>
   18d78:	str	r2, [r3, #4]
   18d7c:	ldr	r3, [fp, #-16]
   18d80:	vldr	s15, [r3, #28]
   18d84:	vmov.f32	s0, s15
   18d88:	bl	18c3c <__assert_fail@plt+0x6550>
   18d8c:	vmov.f32	s15, s0
   18d90:	ldr	r3, [fp, #-8]
   18d94:	vstr	s15, [r3, #28]
   18d98:	nop			; (mov r0, r0)
   18d9c:	ldr	r3, [fp, #-8]
   18da0:	ldr	r2, [fp, #-16]
   18da4:	str	r2, [r3, #160]	; 0xa0
   18da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18dac:	ldr	r2, [fp, #-8]
   18db0:	str	r2, [r3]
   18db4:	ldr	r3, [fp, #-8]
   18db8:	mov	r0, r3
   18dbc:	sub	sp, fp, #4
   18dc0:	pop	{fp, pc}
   18dc4:	muleq	r1, r8, r3
   18dc8:	strheq	r5, [r6], -ip
   18dcc:	andeq	r5, r1, r8, ror r6
   18dd0:	andeq	r5, r6, r0, asr #1
   18dd4:	andeq	r4, r1, r4, lsr r1
   18dd8:	andeq	r5, r6, r4, asr #1
   18ddc:	push	{fp}		; (str fp, [sp, #-4]!)
   18de0:	add	fp, sp, #0
   18de4:	sub	sp, sp, #20
   18de8:	str	r0, [fp, #-8]
   18dec:	str	r1, [fp, #-12]
   18df0:	str	r2, [fp, #-16]
   18df4:	ldr	r3, [fp, #-16]
   18df8:	ldr	r2, [r3]
   18dfc:	ldr	r3, [fp, #-12]
   18e00:	str	r2, [r3, #156]	; 0x9c
   18e04:	ldr	r3, [fp, #-16]
   18e08:	ldr	r2, [fp, #-8]
   18e0c:	str	r2, [r3]
   18e10:	nop			; (mov r0, r0)
   18e14:	add	sp, fp, #0
   18e18:	pop	{fp}		; (ldr fp, [sp], #4)
   18e1c:	bx	lr
   18e20:	push	{fp, lr}
   18e24:	add	fp, sp, #4
   18e28:	sub	sp, sp, #32
   18e2c:	str	r0, [fp, #-24]	; 0xffffffe8
   18e30:	str	r1, [fp, #-28]	; 0xffffffe4
   18e34:	str	r2, [fp, #-32]	; 0xffffffe0
   18e38:	str	r3, [fp, #-36]	; 0xffffffdc
   18e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e40:	str	r3, [fp, #-12]
   18e44:	mov	r3, #1
   18e48:	str	r3, [fp, #-8]
   18e4c:	b	18f08 <__assert_fail@plt+0x681c>
   18e50:	ldr	r3, [fp, #-8]
   18e54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18e58:	mul	r3, r2, r3
   18e5c:	ldr	r2, [fp, #-12]
   18e60:	add	r0, r2, r3
   18e64:	ldr	r3, [fp, #-8]
   18e68:	sub	r3, r3, #1
   18e6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18e70:	mul	r3, r2, r3
   18e74:	ldr	r2, [fp, #-12]
   18e78:	add	r2, r2, r3
   18e7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18e80:	mov	r1, r2
   18e84:	blx	r3
   18e88:	str	r0, [fp, #-16]
   18e8c:	ldr	r3, [fp, #-16]
   18e90:	cmp	r3, #0
   18e94:	bge	18ea0 <__assert_fail@plt+0x67b4>
   18e98:	mov	r3, #0
   18e9c:	b	18f1c <__assert_fail@plt+0x6830>
   18ea0:	ldr	r3, [fp, #-8]
   18ea4:	sub	r3, r3, #1
   18ea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18eac:	mul	r3, r2, r3
   18eb0:	ldr	r2, [fp, #-12]
   18eb4:	add	r0, r2, r3
   18eb8:	ldr	r3, [fp, #-8]
   18ebc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18ec0:	mul	r3, r2, r3
   18ec4:	ldr	r2, [fp, #-12]
   18ec8:	add	r2, r2, r3
   18ecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ed0:	mov	r1, r2
   18ed4:	blx	r3
   18ed8:	str	r0, [fp, #-16]
   18edc:	ldr	r3, [fp, #-16]
   18ee0:	cmp	r3, #0
   18ee4:	ble	18efc <__assert_fail@plt+0x6810>
   18ee8:	ldr	r3, [pc, #56]	; 18f28 <__assert_fail@plt+0x683c>
   18eec:	ldr	r2, [pc, #56]	; 18f2c <__assert_fail@plt+0x6840>
   18ef0:	ldr	r1, [pc, #56]	; 18f30 <__assert_fail@plt+0x6844>
   18ef4:	ldr	r0, [pc, #56]	; 18f34 <__assert_fail@plt+0x6848>
   18ef8:	bl	126ec <__assert_fail@plt>
   18efc:	ldr	r3, [fp, #-8]
   18f00:	add	r3, r3, #1
   18f04:	str	r3, [fp, #-8]
   18f08:	ldr	r2, [fp, #-8]
   18f0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f10:	cmp	r2, r3
   18f14:	bcc	18e50 <__assert_fail@plt+0x6764>
   18f18:	mov	r3, #1
   18f1c:	mov	r0, r3
   18f20:	sub	sp, fp, #4
   18f24:	pop	{fp, pc}
   18f28:	andeq	r5, r6, r8, lsr r6
   18f2c:	strdeq	r0, [r0], -r5
   18f30:	andeq	r5, r6, r8, asr #1
   18f34:	ldrdeq	r5, [r6], -r0
   18f38:	push	{fp, lr}
   18f3c:	add	fp, sp, #4
   18f40:	sub	sp, sp, #24
   18f44:	str	r0, [fp, #-24]	; 0xffffffe8
   18f48:	str	r1, [fp, #-28]	; 0xffffffe4
   18f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f50:	str	r3, [fp, #-8]
   18f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f58:	str	r3, [fp, #-12]
   18f5c:	ldr	r3, [fp, #-8]
   18f60:	ldr	r3, [r3]
   18f64:	str	r3, [fp, #-16]
   18f68:	ldr	r3, [fp, #-12]
   18f6c:	ldr	r3, [r3]
   18f70:	str	r3, [fp, #-20]	; 0xffffffec
   18f74:	sub	r1, fp, #20
   18f78:	sub	r3, fp, #16
   18f7c:	mov	r2, #4
   18f80:	mov	r0, r3
   18f84:	bl	12158 <memcmp@plt>
   18f88:	mov	r3, r0
   18f8c:	mov	r0, r3
   18f90:	sub	sp, fp, #4
   18f94:	pop	{fp, pc}
   18f98:	push	{fp, lr}
   18f9c:	add	fp, sp, #4
   18fa0:	sub	sp, sp, #40	; 0x28
   18fa4:	str	r0, [fp, #-32]	; 0xffffffe0
   18fa8:	mov	r3, #0
   18fac:	str	r3, [fp, #-8]
   18fb0:	mov	r3, #10
   18fb4:	str	r3, [fp, #-12]
   18fb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18fbc:	ldrb	r3, [r3, #18]
   18fc0:	cmp	r3, #0
   18fc4:	beq	18fd4 <__assert_fail@plt+0x68e8>
   18fc8:	mov	r3, #3
   18fcc:	str	r3, [fp, #-8]
   18fd0:	b	19014 <__assert_fail@plt+0x6928>
   18fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18fd8:	ldrb	r3, [r3, #20]
   18fdc:	cmp	r3, #0
   18fe0:	beq	18ff0 <__assert_fail@plt+0x6904>
   18fe4:	mov	r3, #1
   18fe8:	str	r3, [fp, #-8]
   18fec:	b	19014 <__assert_fail@plt+0x6928>
   18ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ff4:	ldrb	r3, [r3, #19]
   18ff8:	cmp	r3, #0
   18ffc:	beq	1900c <__assert_fail@plt+0x6920>
   19000:	mov	r3, #2
   19004:	str	r3, [fp, #-8]
   19008:	b	19014 <__assert_fail@plt+0x6928>
   1900c:	mov	r3, #0
   19010:	str	r3, [fp, #-8]
   19014:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19018:	ldr	r3, [r3]
   1901c:	ldr	r2, [pc, #356]	; 19188 <__assert_fail@plt+0x6a9c>
   19020:	cmp	r3, r2
   19024:	beq	1903c <__assert_fail@plt+0x6950>
   19028:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1902c:	ldr	r3, [r3]
   19030:	ldr	r2, [pc, #340]	; 1918c <__assert_fail@plt+0x6aa0>
   19034:	cmp	r3, r2
   19038:	bne	19064 <__assert_fail@plt+0x6978>
   1903c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19040:	ldrb	r3, [r3, #40]	; 0x28
   19044:	cmp	r3, #0
   19048:	beq	19058 <__assert_fail@plt+0x696c>
   1904c:	mov	r3, #7
   19050:	str	r3, [fp, #-12]
   19054:	b	19160 <__assert_fail@plt+0x6a74>
   19058:	mov	r3, #8
   1905c:	str	r3, [fp, #-12]
   19060:	b	19160 <__assert_fail@plt+0x6a74>
   19064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19068:	ldr	r3, [r3]
   1906c:	ldr	r2, [pc, #284]	; 19190 <__assert_fail@plt+0x6aa4>
   19070:	cmp	r3, r2
   19074:	bne	19088 <__assert_fail@plt+0x699c>
   19078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1907c:	ldr	r3, [r3, #24]
   19080:	str	r3, [fp, #-12]
   19084:	b	19160 <__assert_fail@plt+0x6a74>
   19088:	ldr	r3, [pc, #260]	; 19194 <__assert_fail@plt+0x6aa8>
   1908c:	ldr	r3, [r3]
   19090:	cmp	r3, #0
   19094:	bne	190f0 <__assert_fail@plt+0x6a04>
   19098:	ldr	r3, [pc, #248]	; 19198 <__assert_fail@plt+0x6aac>
   1909c:	mov	r2, #8
   190a0:	mov	r1, #59	; 0x3b
   190a4:	ldr	r0, [pc, #240]	; 1919c <__assert_fail@plt+0x6ab0>
   190a8:	bl	125f0 <qsort@plt>
   190ac:	ldr	r3, [pc, #228]	; 19198 <__assert_fail@plt+0x6aac>
   190b0:	mov	r2, #8
   190b4:	mov	r1, #59	; 0x3b
   190b8:	ldr	r0, [pc, #220]	; 1919c <__assert_fail@plt+0x6ab0>
   190bc:	bl	18e20 <__assert_fail@plt+0x6734>
   190c0:	mov	r3, r0
   190c4:	eor	r3, r3, #1
   190c8:	uxtb	r3, r3
   190cc:	cmp	r3, #0
   190d0:	beq	190e4 <__assert_fail@plt+0x69f8>
   190d4:	ldr	r2, [pc, #196]	; 191a0 <__assert_fail@plt+0x6ab4>
   190d8:	mov	r1, #0
   190dc:	mov	r0, #1
   190e0:	bl	122b4 <error@plt>
   190e4:	ldr	r3, [pc, #168]	; 19194 <__assert_fail@plt+0x6aa8>
   190e8:	mov	r2, #1
   190ec:	str	r2, [r3]
   190f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190f4:	ldr	r3, [r3]
   190f8:	str	r3, [fp, #-24]	; 0xffffffe8
   190fc:	sub	r0, fp, #24
   19100:	ldr	r3, [pc, #144]	; 19198 <__assert_fail@plt+0x6aac>
   19104:	str	r3, [sp]
   19108:	mov	r3, #8
   1910c:	mov	r2, #59	; 0x3b
   19110:	ldr	r1, [pc, #132]	; 1919c <__assert_fail@plt+0x6ab0>
   19114:	bl	12440 <bsearch@plt>
   19118:	str	r0, [fp, #-16]
   1911c:	ldr	r3, [fp, #-16]
   19120:	cmp	r3, #0
   19124:	beq	19138 <__assert_fail@plt+0x6a4c>
   19128:	ldr	r3, [fp, #-16]
   1912c:	ldr	r3, [r3, #4]
   19130:	str	r3, [fp, #-12]
   19134:	b	19160 <__assert_fail@plt+0x6a74>
   19138:	ldr	r0, [pc, #100]	; 191a4 <__assert_fail@plt+0x6ab8>
   1913c:	bl	12398 <gettext@plt>
   19140:	mov	r2, r0
   19144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19148:	ldr	r3, [r3, #4]
   1914c:	mov	r1, #0
   19150:	mov	r0, #0
   19154:	bl	122b4 <error@plt>
   19158:	mov	r3, #10
   1915c:	str	r3, [fp, #-12]
   19160:	ldr	r2, [fp, #-12]
   19164:	ldr	r3, [fp, #-8]
   19168:	cmp	r2, r3
   1916c:	bls	19178 <__assert_fail@plt+0x6a8c>
   19170:	ldr	r3, [fp, #-12]
   19174:	b	1917c <__assert_fail@plt+0x6a90>
   19178:	ldr	r3, [fp, #-8]
   1917c:	mov	r0, r3
   19180:	sub	sp, fp, #4
   19184:	pop	{fp, pc}
   19188:			; <UNDEFINED> instruction: 0x000148bc
   1918c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   19190:	strdeq	pc, [r1], -r8
   19194:	andeq	ip, r7, r4, ror #14
   19198:	andeq	r8, r1, r8, lsr pc
   1919c:			; <UNDEFINED> instruction: 0x0007c2b0
   191a0:	ldrdeq	r5, [r6], -ip
   191a4:	andeq	r5, r6, r0, lsl #2
   191a8:	push	{fp, lr}
   191ac:	add	fp, sp, #4
   191b0:	sub	sp, sp, #8
   191b4:	str	r0, [fp, #-8]
   191b8:	ldr	r3, [fp, #-8]
   191bc:	cmp	r3, #0
   191c0:	beq	191f8 <__assert_fail@plt+0x6b0c>
   191c4:	ldr	r3, [fp, #-8]
   191c8:	ldr	r3, [r3, #160]	; 0xa0
   191cc:	mov	r0, r3
   191d0:	bl	191a8 <__assert_fail@plt+0x6abc>
   191d4:	ldr	r3, [fp, #-8]
   191d8:	ldr	r3, [r3, #156]	; 0x9c
   191dc:	mov	r0, r3
   191e0:	bl	191a8 <__assert_fail@plt+0x6abc>
   191e4:	ldr	r0, [fp, #-8]
   191e8:	bl	18f98 <__assert_fail@plt+0x68ac>
   191ec:	mov	r2, r0
   191f0:	ldr	r3, [fp, #-8]
   191f4:	str	r2, [r3, #24]
   191f8:	nop			; (mov r0, r0)
   191fc:	sub	sp, fp, #4
   19200:	pop	{fp, pc}
   19204:	push	{fp}		; (str fp, [sp, #-4]!)
   19208:	add	fp, sp, #0
   1920c:	ldr	r3, [pc, #16]	; 19224 <__assert_fail@plt+0x6b38>
   19210:	ldr	r3, [r3]
   19214:	mov	r0, r3
   19218:	add	sp, fp, #0
   1921c:	pop	{fp}		; (ldr fp, [sp], #4)
   19220:	bx	lr
   19224:	andeq	ip, r7, r4, asr r7
   19228:	push	{fp}		; (str fp, [sp, #-4]!)
   1922c:	add	fp, sp, #0
   19230:	sub	sp, sp, #12
   19234:	str	r0, [fp, #-8]
   19238:	ldr	r3, [fp, #-8]
   1923c:	cmp	r3, #0
   19240:	beq	19250 <__assert_fail@plt+0x6b64>
   19244:	ldr	r3, [fp, #-8]
   19248:	ldr	r3, [r3, #28]
   1924c:	b	19254 <__assert_fail@plt+0x6b68>
   19250:	mov	r3, #1065353216	; 0x3f800000
   19254:	vmov	s15, r3
   19258:	vmov.f32	s0, s15
   1925c:	add	sp, fp, #0
   19260:	pop	{fp}		; (ldr fp, [sp], #4)
   19264:	bx	lr
   19268:	push	{fp, lr}
   1926c:	vpush	{d8}
   19270:	add	fp, sp, #12
   19274:	sub	sp, sp, #16
   19278:	str	r0, [fp, #-24]	; 0xffffffe8
   1927c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19280:	cmp	r3, #0
   19284:	bne	1929c <__assert_fail@plt+0x6bb0>
   19288:	ldr	r3, [pc, #772]	; 19594 <__assert_fail@plt+0x6ea8>
   1928c:	ldr	r2, [pc, #772]	; 19598 <__assert_fail@plt+0x6eac>
   19290:	ldr	r1, [pc, #772]	; 1959c <__assert_fail@plt+0x6eb0>
   19294:	ldr	r0, [pc, #772]	; 195a0 <__assert_fail@plt+0x6eb4>
   19298:	bl	126ec <__assert_fail@plt>
   1929c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192a0:	ldr	r3, [r3, #160]	; 0xa0
   192a4:	cmp	r3, #0
   192a8:	beq	192bc <__assert_fail@plt+0x6bd0>
   192ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192b0:	ldr	r3, [r3, #160]	; 0xa0
   192b4:	mov	r0, r3
   192b8:	bl	19268 <__assert_fail@plt+0x6b7c>
   192bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192c0:	ldr	r3, [r3, #156]	; 0x9c
   192c4:	cmp	r3, #0
   192c8:	beq	192dc <__assert_fail@plt+0x6bf0>
   192cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192d0:	ldr	r3, [r3, #156]	; 0x9c
   192d4:	mov	r0, r3
   192d8:	bl	19268 <__assert_fail@plt+0x6b7c>
   192dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192e0:	ldr	r3, [r3, #8]
   192e4:	cmp	r3, #5
   192e8:	bne	19300 <__assert_fail@plt+0x6c14>
   192ec:	ldr	r3, [pc, #672]	; 19594 <__assert_fail@plt+0x6ea8>
   192f0:	ldr	r2, [pc, #684]	; 195a4 <__assert_fail@plt+0x6eb8>
   192f4:	ldr	r1, [pc, #672]	; 1959c <__assert_fail@plt+0x6eb0>
   192f8:	ldr	r0, [pc, #680]	; 195a8 <__assert_fail@plt+0x6ebc>
   192fc:	bl	126ec <__assert_fail@plt>
   19300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19304:	ldr	r3, [r3, #8]
   19308:	cmp	r3, #4
   1930c:	bne	19324 <__assert_fail@plt+0x6c38>
   19310:	ldr	r3, [pc, #636]	; 19594 <__assert_fail@plt+0x6ea8>
   19314:	ldr	r2, [pc, #656]	; 195ac <__assert_fail@plt+0x6ec0>
   19318:	ldr	r1, [pc, #636]	; 1959c <__assert_fail@plt+0x6eb0>
   1931c:	ldr	r0, [pc, #652]	; 195b0 <__assert_fail@plt+0x6ec4>
   19320:	bl	126ec <__assert_fail@plt>
   19324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19328:	ldr	r3, [r3, #8]
   1932c:	cmp	r3, #5
   19330:	ldrls	pc, [pc, r3, lsl #2]
   19334:	b	19568 <__assert_fail@plt+0x6e7c>
   19338:	andeq	r9, r1, r0, asr r3
   1933c:	andeq	r9, r1, r4, lsr #7
   19340:	strdeq	r9, [r1], -r8
   19344:	andeq	r9, r1, ip, ror #8
   19348:	andeq	r9, r1, r0, asr r5
   1934c:	andeq	r9, r1, r0, asr r5
   19350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19354:	ldr	r3, [r3, #160]	; 0xa0
   19358:	cmp	r3, #0
   1935c:	beq	19374 <__assert_fail@plt+0x6c88>
   19360:	ldr	r3, [pc, #556]	; 19594 <__assert_fail@plt+0x6ea8>
   19364:	ldr	r2, [pc, #584]	; 195b4 <__assert_fail@plt+0x6ec8>
   19368:	ldr	r1, [pc, #556]	; 1959c <__assert_fail@plt+0x6eb0>
   1936c:	ldr	r0, [pc, #580]	; 195b8 <__assert_fail@plt+0x6ecc>
   19370:	bl	126ec <__assert_fail@plt>
   19374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19378:	ldr	r3, [r3, #156]	; 0x9c
   1937c:	cmp	r3, #0
   19380:	beq	19398 <__assert_fail@plt+0x6cac>
   19384:	ldr	r3, [pc, #520]	; 19594 <__assert_fail@plt+0x6ea8>
   19388:	ldr	r2, [pc, #556]	; 195bc <__assert_fail@plt+0x6ed0>
   1938c:	ldr	r1, [pc, #520]	; 1959c <__assert_fail@plt+0x6eb0>
   19390:	ldr	r0, [pc, #552]	; 195c0 <__assert_fail@plt+0x6ed4>
   19394:	bl	126ec <__assert_fail@plt>
   19398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1939c:	ldr	r3, [r3, #28]
   193a0:	b	1957c <__assert_fail@plt+0x6e90>
   193a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193a8:	ldr	r3, [r3, #160]	; 0xa0
   193ac:	cmp	r3, #0
   193b0:	beq	193c8 <__assert_fail@plt+0x6cdc>
   193b4:	ldr	r3, [pc, #472]	; 19594 <__assert_fail@plt+0x6ea8>
   193b8:	ldr	r2, [pc, #516]	; 195c4 <__assert_fail@plt+0x6ed8>
   193bc:	ldr	r1, [pc, #472]	; 1959c <__assert_fail@plt+0x6eb0>
   193c0:	ldr	r0, [pc, #496]	; 195b8 <__assert_fail@plt+0x6ecc>
   193c4:	bl	126ec <__assert_fail@plt>
   193c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193cc:	ldr	r3, [r3, #156]	; 0x9c
   193d0:	cmp	r3, #0
   193d4:	beq	193ec <__assert_fail@plt+0x6d00>
   193d8:	ldr	r3, [pc, #436]	; 19594 <__assert_fail@plt+0x6ea8>
   193dc:	ldr	r2, [pc, #484]	; 195c8 <__assert_fail@plt+0x6edc>
   193e0:	ldr	r1, [pc, #436]	; 1959c <__assert_fail@plt+0x6eb0>
   193e4:	ldr	r0, [pc, #468]	; 195c0 <__assert_fail@plt+0x6ed4>
   193e8:	bl	126ec <__assert_fail@plt>
   193ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193f0:	ldr	r3, [r3, #28]
   193f4:	b	1957c <__assert_fail@plt+0x6e90>
   193f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193fc:	ldr	r3, [r3]
   19400:	ldr	r2, [pc, #452]	; 195cc <__assert_fail@plt+0x6ee0>
   19404:	cmp	r3, r2
   19408:	beq	19420 <__assert_fail@plt+0x6d34>
   1940c:	ldr	r3, [pc, #384]	; 19594 <__assert_fail@plt+0x6ea8>
   19410:	ldr	r2, [pc, #440]	; 195d0 <__assert_fail@plt+0x6ee4>
   19414:	ldr	r1, [pc, #384]	; 1959c <__assert_fail@plt+0x6eb0>
   19418:	ldr	r0, [pc, #436]	; 195d4 <__assert_fail@plt+0x6ee8>
   1941c:	bl	126ec <__assert_fail@plt>
   19420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19424:	ldr	r3, [r3, #156]	; 0x9c
   19428:	cmp	r3, #0
   1942c:	beq	19444 <__assert_fail@plt+0x6d58>
   19430:	ldr	r3, [pc, #348]	; 19594 <__assert_fail@plt+0x6ea8>
   19434:	ldr	r2, [pc, #412]	; 195d8 <__assert_fail@plt+0x6eec>
   19438:	ldr	r1, [pc, #348]	; 1959c <__assert_fail@plt+0x6eb0>
   1943c:	ldr	r0, [pc, #380]	; 195c0 <__assert_fail@plt+0x6ed4>
   19440:	bl	126ec <__assert_fail@plt>
   19444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19448:	ldr	r3, [r3, #160]	; 0xa0
   1944c:	vldr	s15, [r3, #28]
   19450:	vldr	s14, [pc, #312]	; 19590 <__assert_fail@plt+0x6ea4>
   19454:	vsub.f32	s15, s14, s15
   19458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1945c:	vstr	s15, [r3, #28]
   19460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19464:	ldr	r3, [r3, #28]
   19468:	b	1957c <__assert_fail@plt+0x6e90>
   1946c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19470:	ldr	r3, [r3]
   19474:	ldr	r2, [pc, #352]	; 195dc <__assert_fail@plt+0x6ef0>
   19478:	cmp	r3, r2
   1947c:	bne	194b4 <__assert_fail@plt+0x6dc8>
   19480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19484:	ldr	r3, [r3, #160]	; 0xa0
   19488:	mov	r0, r3
   1948c:	bl	19228 <__assert_fail@plt+0x6b3c>
   19490:	vmov.f32	s16, s0
   19494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19498:	ldr	r3, [r3, #156]	; 0x9c
   1949c:	mov	r0, r3
   194a0:	bl	19228 <__assert_fail@plt+0x6b3c>
   194a4:	vmov.f32	s15, s0
   194a8:	vmul.f32	s15, s16, s15
   194ac:	vstr	s15, [fp, #-16]
   194b0:	b	19530 <__assert_fail@plt+0x6e44>
   194b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194b8:	ldr	r3, [r3]
   194bc:	ldr	r2, [pc, #284]	; 195e0 <__assert_fail@plt+0x6ef4>
   194c0:	cmp	r3, r2
   194c4:	bne	194d4 <__assert_fail@plt+0x6de8>
   194c8:	mov	r3, #1065353216	; 0x3f800000
   194cc:	str	r3, [fp, #-16]
   194d0:	b	19530 <__assert_fail@plt+0x6e44>
   194d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194d8:	ldr	r3, [r3]
   194dc:	ldr	r2, [pc, #256]	; 195e4 <__assert_fail@plt+0x6ef8>
   194e0:	cmp	r3, r2
   194e4:	bne	1951c <__assert_fail@plt+0x6e30>
   194e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194ec:	ldr	r3, [r3, #160]	; 0xa0
   194f0:	mov	r0, r3
   194f4:	bl	19228 <__assert_fail@plt+0x6b3c>
   194f8:	vmov.f32	s16, s0
   194fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19500:	ldr	r3, [r3, #156]	; 0x9c
   19504:	mov	r0, r3
   19508:	bl	19228 <__assert_fail@plt+0x6b3c>
   1950c:	vmov.f32	s15, s0
   19510:	vadd.f32	s15, s16, s15
   19514:	vstr	s15, [fp, #-16]
   19518:	b	19530 <__assert_fail@plt+0x6e44>
   1951c:	ldr	r3, [pc, #112]	; 19594 <__assert_fail@plt+0x6ea8>
   19520:	ldr	r2, [pc, #192]	; 195e8 <__assert_fail@plt+0x6efc>
   19524:	ldr	r1, [pc, #112]	; 1959c <__assert_fail@plt+0x6eb0>
   19528:	ldr	r0, [pc, #188]	; 195ec <__assert_fail@plt+0x6f00>
   1952c:	bl	126ec <__assert_fail@plt>
   19530:	vldr	s0, [fp, #-16]
   19534:	bl	18c3c <__assert_fail@plt+0x6550>
   19538:	vmov.f32	s15, s0
   1953c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19540:	vstr	s15, [r3, #28]
   19544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19548:	ldr	r3, [r3, #28]
   1954c:	b	1957c <__assert_fail@plt+0x6e90>
   19550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19554:	mov	r2, #1065353216	; 0x3f800000
   19558:	str	r2, [r3, #28]
   1955c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19560:	ldr	r3, [r3, #28]
   19564:	b	1957c <__assert_fail@plt+0x6e90>
   19568:	ldr	r3, [pc, #36]	; 19594 <__assert_fail@plt+0x6ea8>
   1956c:	mov	r2, #1216	; 0x4c0
   19570:	ldr	r1, [pc, #36]	; 1959c <__assert_fail@plt+0x6eb0>
   19574:	ldr	r0, [pc, #112]	; 195ec <__assert_fail@plt+0x6f00>
   19578:	bl	126ec <__assert_fail@plt>
   1957c:	vmov	s15, r3
   19580:	vmov.f32	s0, s15
   19584:	sub	sp, fp, #12
   19588:	vpop	{d8}
   1958c:	pop	{fp, pc}
   19590:	svccc	0x00800000
   19594:	andeq	r5, r6, r8, asr #12
   19598:	andeq	r0, r0, r4, lsl #9
   1959c:	andeq	r5, r6, r8, asr #1
   195a0:	andeq	r5, r6, r0, ror r1
   195a4:	andeq	r0, r0, fp, lsl #9
   195a8:	andeq	r5, r6, ip, ror r1
   195ac:	andeq	r0, r0, ip, lsl #9
   195b0:	muleq	r6, r8, r1
   195b4:	muleq	r0, r1, r4
   195b8:			; <UNDEFINED> instruction: 0x000651b0
   195bc:	muleq	r0, r2, r4
   195c0:	andeq	r5, r6, r8, asr #3
   195c4:	muleq	r0, r6, r4
   195c8:	muleq	r0, r7, r4
   195cc:	andeq	r5, r1, r4, asr r1
   195d0:	muleq	r0, ip, r4
   195d4:	andeq	r5, r6, r0, ror #3
   195d8:	muleq	r0, sp, r4
   195dc:	andeq	r4, r1, r4, lsr r1
   195e0:	muleq	r1, r8, r3
   195e4:	andeq	r5, r1, r8, ror r6
   195e8:			; <UNDEFINED> instruction: 0x000004b4
   195ec:	strdeq	r5, [r6], -ip
   195f0:	push	{fp, lr}
   195f4:	add	fp, sp, #4
   195f8:	sub	sp, sp, #8
   195fc:	str	r0, [fp, #-8]
   19600:	mov	r3, r1
   19604:	strb	r3, [fp, #-9]
   19608:	ldrb	r3, [fp, #-9]
   1960c:	cmp	r3, #0
   19610:	beq	19638 <__assert_fail@plt+0x6f4c>
   19614:	ldr	r3, [fp, #-8]
   19618:	ldr	r3, [r3, #8]
   1961c:	cmp	r3, #3
   19620:	beq	19638 <__assert_fail@plt+0x6f4c>
   19624:	ldr	r3, [pc, #136]	; 196b4 <__assert_fail@plt+0x6fc8>
   19628:	ldr	r2, [pc, #136]	; 196b8 <__assert_fail@plt+0x6fcc>
   1962c:	ldr	r1, [pc, #136]	; 196bc <__assert_fail@plt+0x6fd0>
   19630:	ldr	r0, [pc, #136]	; 196c0 <__assert_fail@plt+0x6fd4>
   19634:	bl	126ec <__assert_fail@plt>
   19638:	ldr	r3, [fp, #-8]
   1963c:	ldr	r3, [r3, #156]	; 0x9c
   19640:	cmp	r3, #0
   19644:	beq	19684 <__assert_fail@plt+0x6f98>
   19648:	ldr	r3, [fp, #-8]
   1964c:	ldr	r3, [r3, #156]	; 0x9c
   19650:	ldr	r3, [r3, #8]
   19654:	cmp	r3, #3
   19658:	beq	19670 <__assert_fail@plt+0x6f84>
   1965c:	ldr	r3, [pc, #80]	; 196b4 <__assert_fail@plt+0x6fc8>
   19660:	ldr	r2, [pc, #92]	; 196c4 <__assert_fail@plt+0x6fd8>
   19664:	ldr	r1, [pc, #80]	; 196bc <__assert_fail@plt+0x6fd0>
   19668:	ldr	r0, [pc, #88]	; 196c8 <__assert_fail@plt+0x6fdc>
   1966c:	bl	126ec <__assert_fail@plt>
   19670:	ldr	r3, [fp, #-8]
   19674:	ldr	r3, [r3, #156]	; 0x9c
   19678:	mov	r1, #0
   1967c:	mov	r0, r3
   19680:	bl	195f0 <__assert_fail@plt+0x6f04>
   19684:	ldr	r3, [fp, #-8]
   19688:	ldr	r3, [r3, #160]	; 0xa0
   1968c:	cmp	r3, #0
   19690:	beq	196a8 <__assert_fail@plt+0x6fbc>
   19694:	ldr	r3, [fp, #-8]
   19698:	ldr	r3, [r3, #160]	; 0xa0
   1969c:	mov	r1, #0
   196a0:	mov	r0, r3
   196a4:	bl	195f0 <__assert_fail@plt+0x6f04>
   196a8:	nop			; (mov r0, r0)
   196ac:	sub	sp, fp, #4
   196b0:	pop	{fp, pc}
   196b4:	andeq	r5, r6, r0, ror #12
   196b8:	andeq	r0, r0, lr, asr #9
   196bc:	andeq	r5, r6, r8, asr #1
   196c0:	andeq	r5, r6, r0, lsl #4
   196c4:	ldrdeq	r0, [r0], -r3
   196c8:	andeq	r5, r6, r4, lsl r2
   196cc:	push	{fp, lr}
   196d0:	add	fp, sp, #4
   196d4:	sub	sp, sp, #56	; 0x38
   196d8:	str	r0, [fp, #-40]	; 0xffffffd8
   196dc:	str	r1, [fp, #-44]	; 0xffffffd4
   196e0:	str	r2, [fp, #-48]	; 0xffffffd0
   196e4:	ldr	r3, [pc, #2088]	; 19f14 <__assert_fail@plt+0x7828>
   196e8:	mov	r2, #0
   196ec:	str	r2, [r3]
   196f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   196f4:	lsl	r3, r3, #2
   196f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   196fc:	add	r3, r2, r3
   19700:	ldr	r2, [pc, #2064]	; 19f18 <__assert_fail@plt+0x782c>
   19704:	str	r3, [r2]
   19708:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1970c:	str	r3, [fp, #-36]	; 0xffffffdc
   19710:	b	19734 <__assert_fail@plt+0x7048>
   19714:	ldr	r3, [pc, #2048]	; 19f1c <__assert_fail@plt+0x7830>
   19718:	ldr	r3, [r3]
   1971c:	add	r3, r3, #1
   19720:	ldr	r2, [pc, #2036]	; 19f1c <__assert_fail@plt+0x7830>
   19724:	str	r3, [r2]
   19728:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1972c:	add	r3, r3, #1
   19730:	str	r3, [fp, #-36]	; 0xffffffdc
   19734:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19738:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1973c:	cmp	r2, r3
   19740:	bge	19778 <__assert_fail@plt+0x708c>
   19744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19748:	lsl	r3, r3, #2
   1974c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19750:	add	r3, r2, r3
   19754:	ldr	r3, [r3]
   19758:	mov	r1, #1
   1975c:	mov	r0, r3
   19760:	bl	1bd08 <__assert_fail@plt+0x961c>
   19764:	mov	r3, r0
   19768:	eor	r3, r3, #1
   1976c:	uxtb	r3, r3
   19770:	cmp	r3, #0
   19774:	bne	19714 <__assert_fail@plt+0x7028>
   19778:	ldr	r0, [pc, #1952]	; 19f20 <__assert_fail@plt+0x7834>
   1977c:	bl	207b4 <__assert_fail@plt+0xe0c8>
   19780:	str	r0, [fp, #-8]
   19784:	ldr	r0, [pc, #1944]	; 19f24 <__assert_fail@plt+0x7838>
   19788:	bl	207b4 <__assert_fail@plt+0xe0c8>
   1978c:	str	r0, [fp, #-12]
   19790:	ldr	r0, [pc, #1936]	; 19f28 <__assert_fail@plt+0x783c>
   19794:	bl	207b4 <__assert_fail@plt+0xe0c8>
   19798:	str	r0, [fp, #-16]
   1979c:	ldr	r3, [fp, #-8]
   197a0:	cmp	r3, #0
   197a4:	bne	197bc <__assert_fail@plt+0x70d0>
   197a8:	ldr	r3, [pc, #1916]	; 19f2c <__assert_fail@plt+0x7840>
   197ac:	ldr	r2, [pc, #1916]	; 19f30 <__assert_fail@plt+0x7844>
   197b0:	ldr	r1, [pc, #1916]	; 19f34 <__assert_fail@plt+0x7848>
   197b4:	ldr	r0, [pc, #1916]	; 19f38 <__assert_fail@plt+0x784c>
   197b8:	bl	126ec <__assert_fail@plt>
   197bc:	ldr	r3, [fp, #-12]
   197c0:	cmp	r3, #0
   197c4:	bne	197dc <__assert_fail@plt+0x70f0>
   197c8:	ldr	r3, [pc, #1884]	; 19f2c <__assert_fail@plt+0x7840>
   197cc:	ldr	r2, [pc, #1896]	; 19f3c <__assert_fail@plt+0x7850>
   197d0:	ldr	r1, [pc, #1884]	; 19f34 <__assert_fail@plt+0x7848>
   197d4:	ldr	r0, [pc, #1892]	; 19f40 <__assert_fail@plt+0x7854>
   197d8:	bl	126ec <__assert_fail@plt>
   197dc:	ldr	r3, [fp, #-16]
   197e0:	cmp	r3, #0
   197e4:	bne	197fc <__assert_fail@plt+0x7110>
   197e8:	ldr	r3, [pc, #1852]	; 19f2c <__assert_fail@plt+0x7840>
   197ec:	ldr	r2, [pc, #1872]	; 19f44 <__assert_fail@plt+0x7858>
   197f0:	ldr	r1, [pc, #1852]	; 19f34 <__assert_fail@plt+0x7848>
   197f4:	ldr	r0, [pc, #1868]	; 19f48 <__assert_fail@plt+0x785c>
   197f8:	bl	126ec <__assert_fail@plt>
   197fc:	sub	r3, fp, #40	; 0x28
   19800:	mov	r2, r3
   19804:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19808:	ldr	r0, [fp, #-8]
   1980c:	bl	22ccc <__assert_fail@plt+0x105e0>
   19810:	ldr	r3, [pc, #1844]	; 19f4c <__assert_fail@plt+0x7860>
   19814:	ldr	r3, [r3]
   19818:	ldr	r2, [pc, #1792]	; 19f20 <__assert_fail@plt+0x7834>
   1981c:	str	r2, [r3, #4]
   19820:	ldr	r3, [pc, #1772]	; 19f14 <__assert_fail@plt+0x7828>
   19824:	ldr	r3, [r3]
   19828:	mov	r2, #1
   1982c:	strb	r2, [r3, #33]	; 0x21
   19830:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19834:	ldr	r3, [pc, #1808]	; 19f4c <__assert_fail@plt+0x7860>
   19838:	ldr	r2, [r3]
   1983c:	ldr	r3, [pc, #1744]	; 19f14 <__assert_fail@plt+0x7828>
   19840:	ldr	r3, [r3]
   19844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19848:	bl	20638 <__assert_fail@plt+0xdf4c>
   1984c:	ldr	r3, [pc, #1784]	; 19f4c <__assert_fail@plt+0x7860>
   19850:	ldr	r3, [r3]
   19854:	mov	r0, r3
   19858:	bl	1674c <__assert_fail@plt+0x4060>
   1985c:	b	19ae8 <__assert_fail@plt+0x73fc>
   19860:	ldr	r3, [pc, #1768]	; 19f50 <__assert_fail@plt+0x7864>
   19864:	mov	r2, #0
   19868:	strb	r2, [r3, #40]	; 0x28
   1986c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19870:	lsl	r3, r3, #2
   19874:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19878:	add	r3, r2, r3
   1987c:	ldr	r3, [r3]
   19880:	mov	r1, #0
   19884:	mov	r0, r3
   19888:	bl	1bd08 <__assert_fail@plt+0x961c>
   1988c:	mov	r3, r0
   19890:	eor	r3, r3, #1
   19894:	uxtb	r3, r3
   19898:	cmp	r3, #0
   1989c:	beq	19928 <__assert_fail@plt+0x723c>
   198a0:	ldr	r0, [pc, #1708]	; 19f54 <__assert_fail@plt+0x7868>
   198a4:	bl	12398 <gettext@plt>
   198a8:	mov	r1, r0
   198ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198b0:	lsl	r3, r3, #2
   198b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   198b8:	add	r3, r2, r3
   198bc:	ldr	r3, [r3]
   198c0:	mov	r2, r1
   198c4:	mov	r1, #0
   198c8:	mov	r0, #0
   198cc:	bl	122b4 <error@plt>
   198d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198d4:	lsl	r3, r3, #2
   198d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   198dc:	add	r3, r2, r3
   198e0:	ldr	r3, [r3]
   198e4:	mov	r1, #0
   198e8:	mov	r0, r3
   198ec:	bl	124c4 <access@plt>
   198f0:	mov	r3, r0
   198f4:	cmp	r3, #0
   198f8:	bne	19920 <__assert_fail@plt+0x7234>
   198fc:	ldr	r0, [pc, #1620]	; 19f58 <__assert_fail@plt+0x786c>
   19900:	bl	12398 <gettext@plt>
   19904:	mov	r2, r0
   19908:	ldr	r3, [pc, #1596]	; 19f4c <__assert_fail@plt+0x7860>
   1990c:	ldr	r3, [r3]
   19910:	ldr	r3, [r3, #4]
   19914:	mov	r1, #0
   19918:	mov	r0, #0
   1991c:	bl	122b4 <error@plt>
   19920:	mov	r0, #1
   19924:	bl	12380 <exit@plt>
   19928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1992c:	lsl	r3, r3, #2
   19930:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19934:	add	r3, r2, r3
   19938:	ldr	r3, [r3]
   1993c:	str	r3, [fp, #-20]	; 0xffffffec
   19940:	ldr	r0, [fp, #-20]	; 0xffffffec
   19944:	bl	207b4 <__assert_fail@plt+0xe0c8>
   19948:	str	r0, [fp, #-24]	; 0xffffffe8
   1994c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19950:	cmp	r3, #0
   19954:	bne	19974 <__assert_fail@plt+0x7288>
   19958:	ldr	r0, [pc, #1532]	; 19f5c <__assert_fail@plt+0x7870>
   1995c:	bl	12398 <gettext@plt>
   19960:	mov	r2, r0
   19964:	ldr	r3, [fp, #-20]	; 0xffffffec
   19968:	mov	r1, #0
   1996c:	mov	r0, #1
   19970:	bl	122b4 <error@plt>
   19974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19978:	ldr	r3, [r3]
   1997c:	cmp	r3, #4
   19980:	beq	19990 <__assert_fail@plt+0x72a4>
   19984:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19988:	add	r3, r3, #1
   1998c:	str	r3, [fp, #-36]	; 0xffffffdc
   19990:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19994:	str	r3, [fp, #-28]	; 0xffffffe4
   19998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1999c:	ldr	r3, [r3, #8]
   199a0:	sub	r2, fp, #36	; 0x24
   199a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199ac:	blx	r3
   199b0:	mov	r3, r0
   199b4:	eor	r3, r3, #1
   199b8:	uxtb	r3, r3
   199bc:	cmp	r3, #0
   199c0:	beq	19a74 <__assert_fail@plt+0x7388>
   199c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   199c8:	lsl	r3, r3, #2
   199cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   199d0:	add	r3, r2, r3
   199d4:	ldr	r3, [r3]
   199d8:	cmp	r3, #0
   199dc:	beq	19a58 <__assert_fail@plt+0x736c>
   199e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   199e4:	ldr	r3, [r3]
   199e8:	cmp	r3, #4
   199ec:	bne	19a1c <__assert_fail@plt+0x7330>
   199f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   199f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   199f8:	cmp	r2, r3
   199fc:	bne	19a1c <__assert_fail@plt+0x7330>
   19a00:	ldr	r0, [pc, #1368]	; 19f60 <__assert_fail@plt+0x7874>
   19a04:	bl	12398 <gettext@plt>
   19a08:	mov	r2, r0
   19a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a10:	mov	r1, #0
   19a14:	mov	r0, #1
   19a18:	bl	122b4 <error@plt>
   19a1c:	ldr	r0, [pc, #1344]	; 19f64 <__assert_fail@plt+0x7878>
   19a20:	bl	12398 <gettext@plt>
   19a24:	mov	r1, r0
   19a28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a2c:	lsl	r3, r3, #2
   19a30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19a34:	add	r3, r2, r3
   19a38:	ldr	r2, [r3]
   19a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a40:	str	r3, [sp]
   19a44:	mov	r3, r2
   19a48:	mov	r2, r1
   19a4c:	mov	r1, #0
   19a50:	mov	r0, #1
   19a54:	bl	122b4 <error@plt>
   19a58:	ldr	r0, [pc, #1288]	; 19f68 <__assert_fail@plt+0x787c>
   19a5c:	bl	12398 <gettext@plt>
   19a60:	mov	r2, r0
   19a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a68:	mov	r1, #0
   19a6c:	mov	r0, #1
   19a70:	bl	122b4 <error@plt>
   19a74:	ldr	r3, [pc, #1232]	; 19f4c <__assert_fail@plt+0x7860>
   19a78:	ldr	r3, [r3]
   19a7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a80:	str	r2, [r3, #4]
   19a84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19a88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19a8c:	cmp	r2, r3
   19a90:	beq	19ab8 <__assert_fail@plt+0x73cc>
   19a94:	ldr	r3, [pc, #1200]	; 19f4c <__assert_fail@plt+0x7860>
   19a98:	ldr	r3, [r3]
   19a9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19aa0:	lsl	r2, r2, #2
   19aa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19aa8:	add	r2, r1, r2
   19aac:	ldr	r2, [r2]
   19ab0:	str	r2, [r3, #36]	; 0x24
   19ab4:	b	19ac8 <__assert_fail@plt+0x73dc>
   19ab8:	ldr	r3, [pc, #1164]	; 19f4c <__assert_fail@plt+0x7860>
   19abc:	ldr	r3, [r3]
   19ac0:	mov	r2, #0
   19ac4:	str	r2, [r3, #36]	; 0x24
   19ac8:	ldr	r3, [pc, #1148]	; 19f4c <__assert_fail@plt+0x7860>
   19acc:	ldr	r3, [r3]
   19ad0:	mov	r0, r3
   19ad4:	bl	1674c <__assert_fail@plt+0x4060>
   19ad8:	ldr	r3, [pc, #1076]	; 19f14 <__assert_fail@plt+0x7828>
   19adc:	ldr	r3, [r3]
   19ae0:	mov	r0, r3
   19ae4:	bl	1674c <__assert_fail@plt+0x4060>
   19ae8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19aec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19af0:	cmp	r2, r3
   19af4:	blt	19860 <__assert_fail@plt+0x7174>
   19af8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19afc:	ldr	r3, [pc, #1096]	; 19f4c <__assert_fail@plt+0x7860>
   19b00:	ldr	r2, [r3]
   19b04:	ldr	r3, [pc, #1032]	; 19f14 <__assert_fail@plt+0x7828>
   19b08:	ldr	r3, [r3]
   19b0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b10:	bl	20674 <__assert_fail@plt+0xdf88>
   19b14:	ldr	r3, [pc, #1016]	; 19f14 <__assert_fail@plt+0x7828>
   19b18:	ldr	r3, [r3]
   19b1c:	ldr	r3, [r3, #152]	; 0x98
   19b20:	cmp	r3, #0
   19b24:	bne	19bac <__assert_fail@plt+0x74c0>
   19b28:	ldr	r3, [pc, #996]	; 19f14 <__assert_fail@plt+0x7828>
   19b2c:	ldr	r3, [r3]
   19b30:	str	r3, [fp, #-32]	; 0xffffffe0
   19b34:	ldr	r3, [pc, #984]	; 19f14 <__assert_fail@plt+0x7828>
   19b38:	ldr	r3, [r3]
   19b3c:	ldr	r3, [r3, #152]	; 0x98
   19b40:	ldr	r2, [pc, #1028]	; 19f4c <__assert_fail@plt+0x7860>
   19b44:	str	r3, [r2]
   19b48:	ldr	r3, [pc, #1020]	; 19f4c <__assert_fail@plt+0x7860>
   19b4c:	ldr	r3, [r3]
   19b50:	ldr	r2, [pc, #956]	; 19f14 <__assert_fail@plt+0x7828>
   19b54:	str	r3, [r2]
   19b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b5c:	mov	r0, r3
   19b60:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   19b64:	sub	r3, fp, #40	; 0x28
   19b68:	mov	r2, r3
   19b6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b70:	ldr	r0, [fp, #-16]
   19b74:	bl	2333c <__assert_fail@plt+0x10c50>
   19b78:	ldr	r3, [pc, #972]	; 19f4c <__assert_fail@plt+0x7860>
   19b7c:	ldr	r3, [r3]
   19b80:	ldr	r2, [pc, #996]	; 19f6c <__assert_fail@plt+0x7880>
   19b84:	str	r2, [r3, #4]
   19b88:	ldr	r3, [pc, #956]	; 19f4c <__assert_fail@plt+0x7860>
   19b8c:	ldr	r3, [r3]
   19b90:	mov	r0, r3
   19b94:	bl	1674c <__assert_fail@plt+0x4060>
   19b98:	ldr	r3, [pc, #884]	; 19f14 <__assert_fail@plt+0x7828>
   19b9c:	ldr	r3, [r3]
   19ba0:	mov	r0, r3
   19ba4:	bl	1674c <__assert_fail@plt+0x4060>
   19ba8:	b	19cac <__assert_fail@plt+0x75c0>
   19bac:	ldr	r3, [pc, #864]	; 19f14 <__assert_fail@plt+0x7828>
   19bb0:	ldr	r3, [r3]
   19bb4:	ldr	r3, [r3, #152]	; 0x98
   19bb8:	mov	r0, r3
   19bbc:	bl	1bcb0 <__assert_fail@plt+0x95c4>
   19bc0:	mov	r3, r0
   19bc4:	eor	r3, r3, #1
   19bc8:	uxtb	r3, r3
   19bcc:	cmp	r3, #0
   19bd0:	beq	19c14 <__assert_fail@plt+0x7528>
   19bd4:	ldr	r3, [pc, #824]	; 19f14 <__assert_fail@plt+0x7828>
   19bd8:	ldr	r3, [r3]
   19bdc:	str	r3, [fp, #-32]	; 0xffffffe0
   19be0:	ldr	r3, [pc, #812]	; 19f14 <__assert_fail@plt+0x7828>
   19be4:	ldr	r3, [r3]
   19be8:	ldr	r3, [r3, #152]	; 0x98
   19bec:	ldr	r2, [pc, #800]	; 19f14 <__assert_fail@plt+0x7828>
   19bf0:	str	r3, [r2]
   19bf4:	ldr	r3, [pc, #792]	; 19f14 <__assert_fail@plt+0x7828>
   19bf8:	ldr	r3, [r3]
   19bfc:	mov	r0, r3
   19c00:	bl	1674c <__assert_fail@plt+0x4060>
   19c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c08:	mov	r0, r3
   19c0c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   19c10:	b	19cac <__assert_fail@plt+0x75c0>
   19c14:	sub	r3, fp, #40	; 0x28
   19c18:	mov	r2, r3
   19c1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c20:	ldr	r0, [fp, #-12]
   19c24:	bl	20ca8 <__assert_fail@plt+0xe5bc>
   19c28:	ldr	r3, [pc, #796]	; 19f4c <__assert_fail@plt+0x7860>
   19c2c:	ldr	r3, [r3]
   19c30:	ldr	r2, [pc, #748]	; 19f24 <__assert_fail@plt+0x7838>
   19c34:	str	r2, [r3, #4]
   19c38:	ldr	r3, [pc, #780]	; 19f4c <__assert_fail@plt+0x7860>
   19c3c:	ldr	r3, [r3]
   19c40:	mov	r2, #1
   19c44:	strb	r2, [r3, #33]	; 0x21
   19c48:	ldr	r3, [pc, #764]	; 19f4c <__assert_fail@plt+0x7860>
   19c4c:	ldr	r3, [r3]
   19c50:	mov	r0, r3
   19c54:	bl	1674c <__assert_fail@plt+0x4060>
   19c58:	sub	r3, fp, #40	; 0x28
   19c5c:	mov	r2, r3
   19c60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c64:	ldr	r0, [fp, #-16]
   19c68:	bl	2333c <__assert_fail@plt+0x10c50>
   19c6c:	ldr	r3, [pc, #728]	; 19f4c <__assert_fail@plt+0x7860>
   19c70:	ldr	r3, [r3]
   19c74:	ldr	r2, [pc, #752]	; 19f6c <__assert_fail@plt+0x7880>
   19c78:	str	r2, [r3, #4]
   19c7c:	ldr	r3, [pc, #712]	; 19f4c <__assert_fail@plt+0x7860>
   19c80:	ldr	r3, [r3]
   19c84:	mov	r2, #1
   19c88:	strb	r2, [r3, #33]	; 0x21
   19c8c:	ldr	r3, [pc, #696]	; 19f4c <__assert_fail@plt+0x7860>
   19c90:	ldr	r3, [r3]
   19c94:	mov	r0, r3
   19c98:	bl	1674c <__assert_fail@plt+0x4060>
   19c9c:	ldr	r3, [pc, #624]	; 19f14 <__assert_fail@plt+0x7828>
   19ca0:	ldr	r3, [r3]
   19ca4:	mov	r0, r3
   19ca8:	bl	1674c <__assert_fail@plt+0x4060>
   19cac:	ldr	r3, [pc, #700]	; 19f70 <__assert_fail@plt+0x7884>
   19cb0:	ldr	r3, [r3, #44]	; 0x2c
   19cb4:	and	r3, r3, #9
   19cb8:	cmp	r3, #0
   19cbc:	beq	19cf4 <__assert_fail@plt+0x7608>
   19cc0:	ldr	r3, [pc, #684]	; 19f74 <__assert_fail@plt+0x7888>
   19cc4:	ldr	r3, [r3]
   19cc8:	mov	r2, #16
   19ccc:	mov	r1, #1
   19cd0:	ldr	r0, [pc, #672]	; 19f78 <__assert_fail@plt+0x788c>
   19cd4:	bl	12224 <fwrite@plt>
   19cd8:	ldr	r3, [pc, #660]	; 19f74 <__assert_fail@plt+0x7888>
   19cdc:	ldr	r2, [r3]
   19ce0:	ldr	r3, [pc, #556]	; 19f14 <__assert_fail@plt+0x7828>
   19ce4:	ldr	r3, [r3]
   19ce8:	mov	r1, r3
   19cec:	mov	r0, r2
   19cf0:	bl	163ac <__assert_fail@plt+0x3cc0>
   19cf4:	ldr	r3, [pc, #536]	; 19f14 <__assert_fail@plt+0x7828>
   19cf8:	ldr	r3, [r3]
   19cfc:	mov	r0, r3
   19d00:	bl	2027c <__assert_fail@plt+0xdb90>
   19d04:	ldr	r3, [pc, #520]	; 19f14 <__assert_fail@plt+0x7828>
   19d08:	ldr	r3, [r3]
   19d0c:	mov	r0, r3
   19d10:	bl	1674c <__assert_fail@plt+0x4060>
   19d14:	ldr	r3, [pc, #504]	; 19f14 <__assert_fail@plt+0x7828>
   19d18:	ldr	r3, [r3]
   19d1c:	str	r3, [fp, #-32]	; 0xffffffe0
   19d20:	sub	r3, fp, #32
   19d24:	mov	r2, #0
   19d28:	mov	r1, #0
   19d2c:	mov	r0, r3
   19d30:	bl	175b4 <__assert_fail@plt+0x4ec8>
   19d34:	mov	r2, r0
   19d38:	ldr	r3, [pc, #572]	; 19f7c <__assert_fail@plt+0x7890>
   19d3c:	str	r2, [r3]
   19d40:	ldr	r3, [pc, #564]	; 19f7c <__assert_fail@plt+0x7890>
   19d44:	ldr	r3, [r3]
   19d48:	mov	r0, r3
   19d4c:	bl	19268 <__assert_fail@plt+0x6b7c>
   19d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d54:	cmp	r3, #0
   19d58:	beq	19dd8 <__assert_fail@plt+0x76ec>
   19d5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d60:	ldr	r3, [r3]
   19d64:	ldr	r2, [pc, #532]	; 19f80 <__assert_fail@plt+0x7894>
   19d68:	cmp	r3, r2
   19d6c:	bne	19d8c <__assert_fail@plt+0x76a0>
   19d70:	ldr	r0, [pc, #524]	; 19f84 <__assert_fail@plt+0x7898>
   19d74:	bl	12398 <gettext@plt>
   19d78:	mov	r3, r0
   19d7c:	mov	r2, r3
   19d80:	mov	r1, #0
   19d84:	mov	r0, #1
   19d88:	bl	122b4 <error@plt>
   19d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d90:	ldr	r3, [r3, #4]
   19d94:	cmp	r3, #0
   19d98:	beq	19dbc <__assert_fail@plt+0x76d0>
   19d9c:	ldr	r0, [pc, #484]	; 19f88 <__assert_fail@plt+0x789c>
   19da0:	bl	12398 <gettext@plt>
   19da4:	mov	r2, r0
   19da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19dac:	ldr	r3, [r3, #4]
   19db0:	mov	r1, #0
   19db4:	mov	r0, #1
   19db8:	bl	122b4 <error@plt>
   19dbc:	ldr	r0, [pc, #456]	; 19f8c <__assert_fail@plt+0x78a0>
   19dc0:	bl	12398 <gettext@plt>
   19dc4:	mov	r3, r0
   19dc8:	mov	r2, r3
   19dcc:	mov	r1, #0
   19dd0:	mov	r0, #1
   19dd4:	bl	122b4 <error@plt>
   19dd8:	ldr	r3, [pc, #400]	; 19f70 <__assert_fail@plt+0x7884>
   19ddc:	ldr	r3, [r3, #44]	; 0x2c
   19de0:	and	r3, r3, #9
   19de4:	cmp	r3, #0
   19de8:	beq	19e20 <__assert_fail@plt+0x7734>
   19dec:	ldr	r3, [pc, #384]	; 19f74 <__assert_fail@plt+0x7888>
   19df0:	ldr	r3, [r3]
   19df4:	mov	r2, #11
   19df8:	mov	r1, #1
   19dfc:	ldr	r0, [pc, #396]	; 19f90 <__assert_fail@plt+0x78a4>
   19e00:	bl	12224 <fwrite@plt>
   19e04:	ldr	r3, [pc, #360]	; 19f74 <__assert_fail@plt+0x7888>
   19e08:	ldr	r0, [r3]
   19e0c:	ldr	r3, [pc, #360]	; 19f7c <__assert_fail@plt+0x7890>
   19e10:	ldr	r3, [r3]
   19e14:	mov	r2, #0
   19e18:	mov	r1, r3
   19e1c:	bl	1a514 <__assert_fail@plt+0x7e28>
   19e20:	ldr	r3, [pc, #340]	; 19f7c <__assert_fail@plt+0x7890>
   19e24:	ldr	r3, [r3]
   19e28:	mov	r0, r3
   19e2c:	bl	191a8 <__assert_fail@plt+0x6abc>
   19e30:	ldr	r0, [pc, #324]	; 19f7c <__assert_fail@plt+0x7890>
   19e34:	bl	186d4 <__assert_fail@plt+0x5fe8>
   19e38:	ldr	r3, [pc, #316]	; 19f7c <__assert_fail@plt+0x7890>
   19e3c:	ldr	r3, [r3]
   19e40:	mov	r1, #1
   19e44:	mov	r0, r3
   19e48:	bl	195f0 <__assert_fail@plt+0x6f04>
   19e4c:	ldr	r3, [pc, #296]	; 19f7c <__assert_fail@plt+0x7890>
   19e50:	ldr	r3, [r3]
   19e54:	mov	r0, r3
   19e58:	bl	18638 <__assert_fail@plt+0x5f4c>
   19e5c:	ldr	r3, [pc, #280]	; 19f7c <__assert_fail@plt+0x7890>
   19e60:	ldr	r3, [r3]
   19e64:	mov	r1, #1
   19e68:	mov	r0, r3
   19e6c:	bl	195f0 <__assert_fail@plt+0x6f04>
   19e70:	ldr	r3, [pc, #248]	; 19f70 <__assert_fail@plt+0x7884>
   19e74:	ldr	r3, [r3, #44]	; 0x2c
   19e78:	and	r3, r3, #9
   19e7c:	cmp	r3, #0
   19e80:	beq	19f00 <__assert_fail@plt+0x7814>
   19e84:	ldr	r3, [pc, #232]	; 19f74 <__assert_fail@plt+0x7888>
   19e88:	ldr	r3, [r3]
   19e8c:	mov	r2, #21
   19e90:	mov	r1, #1
   19e94:	ldr	r0, [pc, #248]	; 19f94 <__assert_fail@plt+0x78a8>
   19e98:	bl	12224 <fwrite@plt>
   19e9c:	ldr	r3, [pc, #208]	; 19f74 <__assert_fail@plt+0x7888>
   19ea0:	ldr	r0, [r3]
   19ea4:	ldr	r3, [pc, #208]	; 19f7c <__assert_fail@plt+0x7890>
   19ea8:	ldr	r3, [r3]
   19eac:	mov	r2, #0
   19eb0:	mov	r1, r3
   19eb4:	bl	1a514 <__assert_fail@plt+0x7e28>
   19eb8:	ldr	r3, [pc, #180]	; 19f74 <__assert_fail@plt+0x7888>
   19ebc:	ldr	r3, [r3]
   19ec0:	mov	r2, #24
   19ec4:	mov	r1, #1
   19ec8:	ldr	r0, [pc, #200]	; 19f98 <__assert_fail@plt+0x78ac>
   19ecc:	bl	12224 <fwrite@plt>
   19ed0:	ldr	r3, [pc, #156]	; 19f74 <__assert_fail@plt+0x7888>
   19ed4:	ldr	r2, [r3]
   19ed8:	ldr	r3, [pc, #156]	; 19f7c <__assert_fail@plt+0x7890>
   19edc:	ldr	r3, [r3]
   19ee0:	mov	r1, r3
   19ee4:	mov	r0, r2
   19ee8:	bl	16534 <__assert_fail@plt+0x3e48>
   19eec:	ldr	r3, [pc, #128]	; 19f74 <__assert_fail@plt+0x7888>
   19ef0:	ldr	r3, [r3]
   19ef4:	mov	r1, r3
   19ef8:	mov	r0, #10
   19efc:	bl	1256c <fputc@plt>
   19f00:	ldr	r3, [pc, #116]	; 19f7c <__assert_fail@plt+0x7890>
   19f04:	ldr	r3, [r3]
   19f08:	mov	r0, r3
   19f0c:	sub	sp, fp, #4
   19f10:	pop	{fp, pc}
   19f14:	andeq	ip, r7, r0, asr r7
   19f18:	andeq	ip, r7, ip, asr r7
   19f1c:	andeq	ip, r7, r0, ror #14
   19f20:	andeq	r5, r6, r4, lsr r2
   19f24:	andeq	r5, r6, r8, lsr r2
   19f28:	andeq	r5, r6, ip, lsr r2
   19f2c:	andeq	r5, r6, r4, ror r6
   19f30:	strdeq	r0, [r0], -r6
   19f34:	andeq	r5, r6, r8, asr #1
   19f38:	andeq	r5, r6, r4, asr #4
   19f3c:	strdeq	r0, [r0], -r7
   19f40:	andeq	r5, r6, r8, asr r2
   19f44:	strdeq	r0, [r0], -r8
   19f48:	andeq	r5, r6, ip, ror #4
   19f4c:	andeq	ip, r7, r8, asr r7
   19f50:	andeq	sp, r7, r0, lsr #32
   19f54:	andeq	r5, r6, r0, lsl #5
   19f58:	andeq	r5, r6, r4, lsr #5
   19f5c:	ldrdeq	r5, [r6], -r4
   19f60:	andeq	r5, r6, ip, ror #5
   19f64:	andeq	r5, r6, r4, lsl #6
   19f68:	andeq	r5, r6, r4, lsr #6
   19f6c:	andeq	r5, r6, r0, asr #6
   19f70:	andeq	sp, r7, ip, asr #32
   19f74:	andeq	ip, r7, r8, lsr #14
   19f78:	andeq	r5, r6, r8, asr #6
   19f7c:	andeq	ip, r7, r4, asr r7
   19f80:	muleq	r1, r0, r2
   19f84:	andeq	r5, r6, ip, asr r3
   19f88:	andeq	r5, r6, r4, ror r3
   19f8c:	muleq	r6, r4, r3
   19f90:			; <UNDEFINED> instruction: 0x000653b0
   19f94:			; <UNDEFINED> instruction: 0x000653bc
   19f98:	ldrdeq	r5, [r6], -r4
   19f9c:	push	{fp}		; (str fp, [sp, #-4]!)
   19fa0:	add	fp, sp, #0
   19fa4:	sub	sp, sp, #20
   19fa8:	str	r0, [fp, #-16]
   19fac:	ldr	r3, [fp, #-16]
   19fb0:	add	r3, r3, #164	; 0xa4
   19fb4:	str	r3, [fp, #-8]
   19fb8:	ldr	r3, [fp, #-8]
   19fbc:	mov	r2, #0
   19fc0:	str	r2, [r3, #4]
   19fc4:	ldr	r3, [fp, #-8]
   19fc8:	ldr	r2, [r3, #4]
   19fcc:	ldr	r3, [fp, #-8]
   19fd0:	str	r2, [r3]
   19fd4:	nop			; (mov r0, r0)
   19fd8:	add	sp, fp, #0
   19fdc:	pop	{fp}		; (ldr fp, [sp], #4)
   19fe0:	bx	lr
   19fe4:	push	{fp, lr}
   19fe8:	add	fp, sp, #4
   19fec:	sub	sp, sp, #16
   19ff0:	str	r0, [fp, #-16]
   19ff4:	ldr	r0, [fp, #-16]
   19ff8:	bl	1a028 <__assert_fail@plt+0x793c>
   19ffc:	str	r0, [fp, #-8]
   1a000:	ldr	r3, [fp, #-8]
   1a004:	cmp	r3, #0
   1a008:	beq	1a018 <__assert_fail@plt+0x792c>
   1a00c:	ldr	r3, [fp, #-8]
   1a010:	mov	r2, #0
   1a014:	str	r2, [r3, #36]	; 0x24
   1a018:	ldr	r3, [fp, #-8]
   1a01c:	mov	r0, r3
   1a020:	sub	sp, fp, #4
   1a024:	pop	{fp, pc}
   1a028:	push	{r4, fp, lr}
   1a02c:	add	fp, sp, #8
   1a030:	sub	sp, sp, #12
   1a034:	str	r0, [fp, #-16]
   1a038:	ldr	r3, [fp, #-16]
   1a03c:	ldr	r3, [r3]
   1a040:	cmp	r3, #0
   1a044:	bne	1a05c <__assert_fail@plt+0x7970>
   1a048:	ldr	r3, [pc, #312]	; 1a188 <__assert_fail@plt+0x7a9c>
   1a04c:	ldr	r2, [pc, #312]	; 1a18c <__assert_fail@plt+0x7aa0>
   1a050:	ldr	r1, [pc, #312]	; 1a190 <__assert_fail@plt+0x7aa4>
   1a054:	ldr	r0, [pc, #312]	; 1a194 <__assert_fail@plt+0x7aa8>
   1a058:	bl	126ec <__assert_fail@plt>
   1a05c:	ldr	r3, [fp, #-16]
   1a060:	ldr	r3, [r3]
   1a064:	cmp	r3, #2
   1a068:	bne	1a080 <__assert_fail@plt+0x7994>
   1a06c:	ldr	r3, [pc, #276]	; 1a188 <__assert_fail@plt+0x7a9c>
   1a070:	ldr	r2, [pc, #288]	; 1a198 <__assert_fail@plt+0x7aac>
   1a074:	ldr	r1, [pc, #276]	; 1a190 <__assert_fail@plt+0x7aa4>
   1a078:	ldr	r0, [pc, #284]	; 1a19c <__assert_fail@plt+0x7ab0>
   1a07c:	bl	126ec <__assert_fail@plt>
   1a080:	mov	r0, #176	; 0xb0
   1a084:	bl	3daa0 <__assert_fail@plt+0x2b3b4>
   1a088:	mov	r3, r0
   1a08c:	mov	r4, r3
   1a090:	ldr	r3, [pc, #264]	; 1a1a0 <__assert_fail@plt+0x7ab4>
   1a094:	ldr	r3, [r3]
   1a098:	cmp	r3, #0
   1a09c:	bne	1a0bc <__assert_fail@plt+0x79d0>
   1a0a0:	ldr	r3, [pc, #248]	; 1a1a0 <__assert_fail@plt+0x7ab4>
   1a0a4:	str	r4, [r3]
   1a0a8:	ldr	r3, [pc, #240]	; 1a1a0 <__assert_fail@plt+0x7ab4>
   1a0ac:	ldr	r3, [r3]
   1a0b0:	ldr	r2, [pc, #236]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a0b4:	str	r3, [r2]
   1a0b8:	b	1a0d0 <__assert_fail@plt+0x79e4>
   1a0bc:	ldr	r3, [pc, #224]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a0c0:	ldr	r3, [r3]
   1a0c4:	str	r4, [r3, #152]	; 0x98
   1a0c8:	ldr	r3, [pc, #212]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a0cc:	str	r4, [r3]
   1a0d0:	ldr	r3, [pc, #204]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a0d4:	ldr	r3, [r3]
   1a0d8:	ldr	r2, [fp, #-16]
   1a0dc:	str	r2, [r3, #172]	; 0xac
   1a0e0:	ldr	r3, [pc, #188]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a0e4:	ldr	r3, [r3]
   1a0e8:	mov	r2, #0
   1a0ec:	str	r2, [r3, #8]
   1a0f0:	ldr	r3, [pc, #172]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a0f4:	ldr	r3, [r3]
   1a0f8:	mov	r2, #0
   1a0fc:	str	r2, [r3, #12]
   1a100:	ldr	r3, [pc, #156]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a104:	ldr	r3, [r3]
   1a108:	mov	r2, #1
   1a10c:	strb	r2, [r3, #18]
   1a110:	ldr	r3, [pc, #140]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a114:	ldr	r3, [r3]
   1a118:	mov	r2, #1
   1a11c:	strb	r2, [r3, #19]
   1a120:	ldr	r3, [pc, #124]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a124:	ldr	r3, [r3]
   1a128:	mov	r2, #10
   1a12c:	str	r2, [r3, #24]
   1a130:	ldr	r3, [pc, #108]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a134:	ldr	r3, [r3]
   1a138:	ldr	r2, [pc, #104]	; 1a1a8 <__assert_fail@plt+0x7abc>
   1a13c:	str	r2, [r3, #36]	; 0x24
   1a140:	ldr	r3, [pc, #92]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a144:	ldr	r3, [r3]
   1a148:	ldr	r2, [pc, #92]	; 1a1ac <__assert_fail@plt+0x7ac0>
   1a14c:	ldrb	r2, [r2, #15]
   1a150:	strb	r2, [r3, #32]
   1a154:	ldr	r3, [pc, #72]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a158:	ldr	r3, [r3]
   1a15c:	mov	r2, #1065353216	; 0x3f800000
   1a160:	str	r2, [r3, #28]
   1a164:	ldr	r3, [pc, #56]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a168:	ldr	r3, [r3]
   1a16c:	mov	r0, r3
   1a170:	bl	19f9c <__assert_fail@plt+0x78b0>
   1a174:	ldr	r3, [pc, #40]	; 1a1a4 <__assert_fail@plt+0x7ab8>
   1a178:	ldr	r3, [r3]
   1a17c:	mov	r0, r3
   1a180:	sub	sp, fp, #8
   1a184:	pop	{r4, fp, pc}
   1a188:	andeq	r5, r6, ip, lsl #13
   1a18c:	andeq	r0, r0, sp, asr #11
   1a190:	andeq	r5, r6, r8, asr #1
   1a194:	strdeq	r5, [r6], -r0
   1a198:	andeq	r0, r0, lr, asr #11
   1a19c:	andeq	r5, r6, ip, lsl #8
   1a1a0:	andeq	ip, r7, r0, asr r7
   1a1a4:	andeq	ip, r7, r8, asr r7
   1a1a8:	andeq	r5, r6, r4, lsr r4
   1a1ac:	andeq	sp, r7, ip, asr #32
   1a1b0:	push	{fp, lr}
   1a1b4:	add	fp, sp, #4
   1a1b8:	sub	sp, sp, #16
   1a1bc:	str	r0, [fp, #-16]
   1a1c0:	str	r1, [fp, #-20]	; 0xffffffec
   1a1c4:	ldr	r3, [pc, #356]	; 1a330 <__assert_fail@plt+0x7c44>
   1a1c8:	ldr	r3, [r3]
   1a1cc:	cmp	r3, #0
   1a1d0:	bne	1a1e8 <__assert_fail@plt+0x7afc>
   1a1d4:	ldr	r0, [pc, #344]	; 1a334 <__assert_fail@plt+0x7c48>
   1a1d8:	bl	207b4 <__assert_fail@plt+0xe0c8>
   1a1dc:	mov	r2, r0
   1a1e0:	ldr	r3, [pc, #328]	; 1a330 <__assert_fail@plt+0x7c44>
   1a1e4:	str	r2, [r3]
   1a1e8:	ldr	r3, [pc, #320]	; 1a330 <__assert_fail@plt+0x7c44>
   1a1ec:	ldr	r3, [r3]
   1a1f0:	cmp	r3, #0
   1a1f4:	bne	1a20c <__assert_fail@plt+0x7b20>
   1a1f8:	ldr	r3, [pc, #312]	; 1a338 <__assert_fail@plt+0x7c4c>
   1a1fc:	ldr	r2, [pc, #312]	; 1a33c <__assert_fail@plt+0x7c50>
   1a200:	ldr	r1, [pc, #312]	; 1a340 <__assert_fail@plt+0x7c54>
   1a204:	ldr	r0, [pc, #312]	; 1a344 <__assert_fail@plt+0x7c58>
   1a208:	bl	126ec <__assert_fail@plt>
   1a20c:	ldr	r3, [pc, #308]	; 1a348 <__assert_fail@plt+0x7c5c>
   1a210:	ldr	r3, [r3]
   1a214:	cmp	r3, #0
   1a218:	beq	1a2fc <__assert_fail@plt+0x7c10>
   1a21c:	ldr	r3, [pc, #292]	; 1a348 <__assert_fail@plt+0x7c5c>
   1a220:	ldr	r3, [r3]
   1a224:	ldr	r3, [r3, #8]
   1a228:	cmp	r3, #1
   1a22c:	beq	1a260 <__assert_fail@plt+0x7b74>
   1a230:	cmp	r3, #1
   1a234:	bcc	1a244 <__assert_fail@plt+0x7b58>
   1a238:	cmp	r3, #5
   1a23c:	beq	1a260 <__assert_fail@plt+0x7b74>
   1a240:	b	1a2fc <__assert_fail@plt+0x7c10>
   1a244:	ldr	r0, [pc, #256]	; 1a34c <__assert_fail@plt+0x7c60>
   1a248:	bl	12398 <gettext@plt>
   1a24c:	mov	r3, r0
   1a250:	mov	r2, r3
   1a254:	mov	r1, #0
   1a258:	mov	r0, #1
   1a25c:	bl	122b4 <error@plt>
   1a260:	ldr	r3, [pc, #200]	; 1a330 <__assert_fail@plt+0x7c44>
   1a264:	ldr	r3, [r3]
   1a268:	mov	r0, r3
   1a26c:	bl	19fe4 <__assert_fail@plt+0x78f8>
   1a270:	str	r0, [fp, #-8]
   1a274:	ldr	r3, [fp, #-8]
   1a278:	ldr	r2, [pc, #208]	; 1a350 <__assert_fail@plt+0x7c64>
   1a27c:	str	r2, [r3]
   1a280:	ldr	r3, [fp, #-8]
   1a284:	ldr	r2, [pc, #200]	; 1a354 <__assert_fail@plt+0x7c68>
   1a288:	str	r2, [r3, #4]
   1a28c:	ldr	r3, [fp, #-8]
   1a290:	mov	r2, #3
   1a294:	str	r2, [r3, #8]
   1a298:	ldr	r3, [fp, #-8]
   1a29c:	mov	r2, #3
   1a2a0:	str	r2, [r3, #12]
   1a2a4:	ldr	r3, [fp, #-8]
   1a2a8:	mov	r2, #0
   1a2ac:	strb	r2, [r3, #18]
   1a2b0:	ldr	r3, [fp, #-8]
   1a2b4:	mov	r2, #0
   1a2b8:	strb	r2, [r3, #19]
   1a2bc:	ldr	r3, [fp, #-8]
   1a2c0:	mov	r2, #0
   1a2c4:	strb	r2, [r3, #20]
   1a2c8:	ldr	r3, [fp, #-8]
   1a2cc:	mov	r2, #0
   1a2d0:	str	r2, [r3, #36]	; 0x24
   1a2d4:	ldr	r3, [fp, #-8]
   1a2d8:	mov	r2, #0
   1a2dc:	str	r2, [r3, #40]	; 0x28
   1a2e0:	ldr	r3, [fp, #-8]
   1a2e4:	mov	r2, #0
   1a2e8:	strb	r2, [r3, #16]
   1a2ec:	ldr	r3, [fp, #-8]
   1a2f0:	mov	r2, #0
   1a2f4:	strb	r2, [r3, #17]
   1a2f8:	nop			; (mov r0, r0)
   1a2fc:	ldr	r0, [fp, #-16]
   1a300:	bl	1a028 <__assert_fail@plt+0x793c>
   1a304:	str	r0, [fp, #-8]
   1a308:	ldr	r3, [fp, #-8]
   1a30c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a310:	str	r2, [r3, #36]	; 0x24
   1a314:	ldr	r3, [fp, #-8]
   1a318:	ldr	r2, [fp, #-16]
   1a31c:	str	r2, [r3, #172]	; 0xac
   1a320:	ldr	r3, [fp, #-8]
   1a324:	mov	r0, r3
   1a328:	sub	sp, fp, #4
   1a32c:	pop	{fp, pc}
   1a330:	andeq	ip, r7, ip, ror #14
   1a334:	andeq	r5, r6, r4, asr r4
   1a338:	muleq	r6, ip, r6
   1a33c:	strdeq	r0, [r0], -r8
   1a340:	andeq	r5, r6, r8, asr #1
   1a344:	andeq	r5, r6, r8, asr r4
   1a348:	andeq	ip, r7, r8, asr r7
   1a34c:	andeq	r5, r6, ip, ror #8
   1a350:	andeq	r4, r1, r4, lsr r1
   1a354:	andeq	r5, r6, r4, asr #1
   1a358:	push	{fp}		; (str fp, [sp, #-4]!)
   1a35c:	add	fp, sp, #0
   1a360:	sub	sp, sp, #20
   1a364:	str	r0, [fp, #-16]
   1a368:	mov	r3, #11
   1a36c:	str	r3, [fp, #-12]
   1a370:	mov	r3, #0
   1a374:	str	r3, [fp, #-8]
   1a378:	b	1a3b8 <__assert_fail@plt+0x7ccc>
   1a37c:	ldr	r2, [pc, #88]	; 1a3dc <__assert_fail@plt+0x7cf0>
   1a380:	ldr	r3, [fp, #-8]
   1a384:	ldr	r2, [r2, r3, lsl #3]
   1a388:	ldr	r3, [fp, #-16]
   1a38c:	cmp	r2, r3
   1a390:	bne	1a3ac <__assert_fail@plt+0x7cc0>
   1a394:	ldr	r2, [pc, #64]	; 1a3dc <__assert_fail@plt+0x7cf0>
   1a398:	ldr	r3, [fp, #-8]
   1a39c:	lsl	r3, r3, #3
   1a3a0:	add	r3, r2, r3
   1a3a4:	ldr	r3, [r3, #4]
   1a3a8:	b	1a3cc <__assert_fail@plt+0x7ce0>
   1a3ac:	ldr	r3, [fp, #-8]
   1a3b0:	add	r3, r3, #1
   1a3b4:	str	r3, [fp, #-8]
   1a3b8:	ldr	r2, [fp, #-8]
   1a3bc:	ldr	r3, [fp, #-12]
   1a3c0:	cmp	r2, r3
   1a3c4:	bcc	1a37c <__assert_fail@plt+0x7c90>
   1a3c8:	ldr	r3, [pc, #16]	; 1a3e0 <__assert_fail@plt+0x7cf4>
   1a3cc:	mov	r0, r3
   1a3d0:	add	sp, fp, #0
   1a3d4:	pop	{fp}		; (ldr fp, [sp], #4)
   1a3d8:	bx	lr
   1a3dc:	andeq	ip, r7, r8, lsl #9
   1a3e0:	andeq	r5, r6, ip, ror r5
   1a3e4:	push	{fp}		; (str fp, [sp, #-4]!)
   1a3e8:	add	fp, sp, #0
   1a3ec:	sub	sp, sp, #20
   1a3f0:	mov	r3, r0
   1a3f4:	strh	r3, [fp, #-14]
   1a3f8:	mov	r3, #0
   1a3fc:	str	r3, [fp, #-8]
   1a400:	b	1a430 <__assert_fail@plt+0x7d44>
   1a404:	ldr	r2, [pc, #108]	; 1a478 <__assert_fail@plt+0x7d8c>
   1a408:	ldr	r3, [fp, #-8]
   1a40c:	lsl	r3, r3, #3
   1a410:	add	r3, r2, r3
   1a414:	ldrsh	r3, [r3]
   1a418:	ldrsh	r2, [fp, #-14]
   1a41c:	cmp	r2, r3
   1a420:	beq	1a450 <__assert_fail@plt+0x7d64>
   1a424:	ldr	r3, [fp, #-8]
   1a428:	add	r3, r3, #1
   1a42c:	str	r3, [fp, #-8]
   1a430:	ldr	r2, [pc, #64]	; 1a478 <__assert_fail@plt+0x7d8c>
   1a434:	ldr	r3, [fp, #-8]
   1a438:	lsl	r3, r3, #3
   1a43c:	add	r3, r2, r3
   1a440:	ldrsh	r3, [r3]
   1a444:	cmn	r3, #1
   1a448:	bne	1a404 <__assert_fail@plt+0x7d18>
   1a44c:	b	1a454 <__assert_fail@plt+0x7d68>
   1a450:	nop			; (mov r0, r0)
   1a454:	ldr	r2, [pc, #28]	; 1a478 <__assert_fail@plt+0x7d8c>
   1a458:	ldr	r3, [fp, #-8]
   1a45c:	lsl	r3, r3, #3
   1a460:	add	r3, r2, r3
   1a464:	ldr	r3, [r3, #4]
   1a468:	mov	r0, r3
   1a46c:	add	sp, fp, #0
   1a470:	pop	{fp}		; (ldr fp, [sp], #4)
   1a474:	bx	lr
   1a478:	andeq	ip, r7, r8, lsl r5
   1a47c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a480:	add	fp, sp, #0
   1a484:	sub	sp, sp, #20
   1a488:	mov	r3, r0
   1a48c:	strh	r3, [fp, #-14]
   1a490:	mov	r3, #0
   1a494:	str	r3, [fp, #-8]
   1a498:	b	1a4c8 <__assert_fail@plt+0x7ddc>
   1a49c:	ldr	r2, [pc, #108]	; 1a510 <__assert_fail@plt+0x7e24>
   1a4a0:	ldr	r3, [fp, #-8]
   1a4a4:	lsl	r3, r3, #3
   1a4a8:	add	r3, r2, r3
   1a4ac:	ldrsh	r3, [r3]
   1a4b0:	ldrsh	r2, [fp, #-14]
   1a4b4:	cmp	r2, r3
   1a4b8:	beq	1a4e8 <__assert_fail@plt+0x7dfc>
   1a4bc:	ldr	r3, [fp, #-8]
   1a4c0:	add	r3, r3, #1
   1a4c4:	str	r3, [fp, #-8]
   1a4c8:	ldr	r2, [pc, #64]	; 1a510 <__assert_fail@plt+0x7e24>
   1a4cc:	ldr	r3, [fp, #-8]
   1a4d0:	lsl	r3, r3, #3
   1a4d4:	add	r3, r2, r3
   1a4d8:	ldrsh	r3, [r3]
   1a4dc:	cmn	r3, #1
   1a4e0:	bne	1a49c <__assert_fail@plt+0x7db0>
   1a4e4:	b	1a4ec <__assert_fail@plt+0x7e00>
   1a4e8:	nop			; (mov r0, r0)
   1a4ec:	ldr	r2, [pc, #28]	; 1a510 <__assert_fail@plt+0x7e24>
   1a4f0:	ldr	r3, [fp, #-8]
   1a4f4:	lsl	r3, r3, #3
   1a4f8:	add	r3, r2, r3
   1a4fc:	ldr	r3, [r3, #4]
   1a500:	mov	r0, r3
   1a504:	add	sp, fp, #0
   1a508:	pop	{fp}		; (ldr fp, [sp], #4)
   1a50c:	bx	lr
   1a510:	andeq	ip, r7, r0, ror #9
   1a514:	push	{r4, fp, lr}
   1a518:	add	fp, sp, #8
   1a51c:	sub	sp, sp, #44	; 0x2c
   1a520:	str	r0, [fp, #-24]	; 0xffffffe8
   1a524:	str	r1, [fp, #-28]	; 0xffffffe4
   1a528:	str	r2, [fp, #-32]	; 0xffffffe0
   1a52c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a530:	cmp	r3, #0
   1a534:	beq	1a884 <__assert_fail@plt+0x8198>
   1a538:	mov	r3, #0
   1a53c:	str	r3, [fp, #-16]
   1a540:	b	1a564 <__assert_fail@plt+0x7e78>
   1a544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a548:	mov	r2, #4
   1a54c:	mov	r1, #1
   1a550:	ldr	r0, [pc, #824]	; 1a890 <__assert_fail@plt+0x81a4>
   1a554:	bl	12224 <fwrite@plt>
   1a558:	ldr	r3, [fp, #-16]
   1a55c:	add	r3, r3, #1
   1a560:	str	r3, [fp, #-16]
   1a564:	ldr	r2, [fp, #-16]
   1a568:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a56c:	cmp	r2, r3
   1a570:	blt	1a544 <__assert_fail@plt+0x7e58>
   1a574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a578:	mov	r2, #6
   1a57c:	mov	r1, #1
   1a580:	ldr	r0, [pc, #780]	; 1a894 <__assert_fail@plt+0x81a8>
   1a584:	bl	12224 <fwrite@plt>
   1a588:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a590:	bl	17c54 <__assert_fail@plt+0x5568>
   1a594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a598:	ldr	r3, [r3, #8]
   1a59c:	sxth	r3, r3
   1a5a0:	mov	r0, r3
   1a5a4:	bl	1a3e4 <__assert_fail@plt+0x7cf8>
   1a5a8:	mov	r4, r0
   1a5ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a5b0:	ldr	r3, [r3, #12]
   1a5b4:	sxth	r3, r3
   1a5b8:	mov	r0, r3
   1a5bc:	bl	1a47c <__assert_fail@plt+0x7d90>
   1a5c0:	mov	r3, r0
   1a5c4:	mov	r2, r4
   1a5c8:	ldr	r1, [pc, #712]	; 1a898 <__assert_fail@plt+0x81ac>
   1a5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5d0:	bl	123f8 <fprintf@plt>
   1a5d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a5d8:	ldr	r3, [r3, #24]
   1a5dc:	mov	r0, r3
   1a5e0:	bl	1a358 <__assert_fail@plt+0x7c6c>
   1a5e4:	mov	r2, r0
   1a5e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a5ec:	vldr	s15, [r3, #28]
   1a5f0:	vcvt.f64.f32	d7, s15
   1a5f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a5f8:	ldrb	r3, [r3, #16]
   1a5fc:	cmp	r3, #0
   1a600:	beq	1a60c <__assert_fail@plt+0x7f20>
   1a604:	ldr	r3, [pc, #656]	; 1a89c <__assert_fail@plt+0x81b0>
   1a608:	b	1a610 <__assert_fail@plt+0x7f24>
   1a60c:	ldr	r3, [pc, #652]	; 1a8a0 <__assert_fail@plt+0x81b4>
   1a610:	str	r3, [sp, #8]
   1a614:	vstr	d7, [sp]
   1a618:	ldr	r1, [pc, #644]	; 1a8a4 <__assert_fail@plt+0x81b8>
   1a61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a620:	bl	123f8 <fprintf@plt>
   1a624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a628:	ldrb	r3, [r3, #18]
   1a62c:	cmp	r3, #0
   1a630:	bne	1a654 <__assert_fail@plt+0x7f68>
   1a634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a638:	ldrb	r3, [r3, #19]
   1a63c:	cmp	r3, #0
   1a640:	bne	1a654 <__assert_fail@plt+0x7f68>
   1a644:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a648:	ldrb	r3, [r3, #20]
   1a64c:	cmp	r3, #0
   1a650:	beq	1a714 <__assert_fail@plt+0x8028>
   1a654:	mov	r3, #0
   1a658:	str	r3, [fp, #-20]	; 0xffffffec
   1a65c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a660:	mov	r2, #6
   1a664:	mov	r1, #1
   1a668:	ldr	r0, [pc, #568]	; 1a8a8 <__assert_fail@plt+0x81bc>
   1a66c:	bl	12224 <fwrite@plt>
   1a670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a674:	ldrb	r3, [r3, #18]
   1a678:	cmp	r3, #0
   1a67c:	beq	1a69c <__assert_fail@plt+0x7fb0>
   1a680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a684:	mov	r2, #4
   1a688:	mov	r1, #1
   1a68c:	ldr	r0, [pc, #536]	; 1a8ac <__assert_fail@plt+0x81c0>
   1a690:	bl	12224 <fwrite@plt>
   1a694:	mov	r3, #1
   1a698:	str	r3, [fp, #-20]	; 0xffffffec
   1a69c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6a0:	ldrb	r3, [r3, #20]
   1a6a4:	cmp	r3, #0
   1a6a8:	beq	1a6dc <__assert_fail@plt+0x7ff0>
   1a6ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6b0:	cmp	r3, #0
   1a6b4:	beq	1a6c0 <__assert_fail@plt+0x7fd4>
   1a6b8:	ldr	r3, [pc, #496]	; 1a8b0 <__assert_fail@plt+0x81c4>
   1a6bc:	b	1a6c4 <__assert_fail@plt+0x7fd8>
   1a6c0:	ldr	r3, [pc, #468]	; 1a89c <__assert_fail@plt+0x81b0>
   1a6c4:	mov	r2, r3
   1a6c8:	ldr	r1, [pc, #484]	; 1a8b4 <__assert_fail@plt+0x81c8>
   1a6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6d0:	bl	123f8 <fprintf@plt>
   1a6d4:	mov	r3, #1
   1a6d8:	str	r3, [fp, #-20]	; 0xffffffec
   1a6dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6e0:	ldrb	r3, [r3, #19]
   1a6e4:	cmp	r3, #0
   1a6e8:	beq	1a714 <__assert_fail@plt+0x8028>
   1a6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6f0:	cmp	r3, #0
   1a6f4:	beq	1a700 <__assert_fail@plt+0x8014>
   1a6f8:	ldr	r3, [pc, #432]	; 1a8b0 <__assert_fail@plt+0x81c4>
   1a6fc:	b	1a704 <__assert_fail@plt+0x8018>
   1a700:	ldr	r3, [pc, #404]	; 1a89c <__assert_fail@plt+0x81b0>
   1a704:	mov	r2, r3
   1a708:	ldr	r1, [pc, #424]	; 1a8b8 <__assert_fail@plt+0x81cc>
   1a70c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a710:	bl	123f8 <fprintf@plt>
   1a714:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a718:	mov	r0, #10
   1a71c:	bl	1256c <fputc@plt>
   1a720:	mov	r3, #0
   1a724:	str	r3, [fp, #-16]
   1a728:	b	1a74c <__assert_fail@plt+0x8060>
   1a72c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a730:	mov	r2, #4
   1a734:	mov	r1, #1
   1a738:	ldr	r0, [pc, #336]	; 1a890 <__assert_fail@plt+0x81a4>
   1a73c:	bl	12224 <fwrite@plt>
   1a740:	ldr	r3, [fp, #-16]
   1a744:	add	r3, r3, #1
   1a748:	str	r3, [fp, #-16]
   1a74c:	ldr	r2, [fp, #-16]
   1a750:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a754:	cmp	r2, r3
   1a758:	blt	1a72c <__assert_fail@plt+0x8040>
   1a75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a760:	ldr	r3, [r3, #156]	; 0x9c
   1a764:	cmp	r3, #0
   1a768:	bne	1a794 <__assert_fail@plt+0x80a8>
   1a76c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a770:	ldr	r3, [r3, #160]	; 0xa0
   1a774:	cmp	r3, #0
   1a778:	bne	1a794 <__assert_fail@plt+0x80a8>
   1a77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a780:	mov	r2, #13
   1a784:	mov	r1, #1
   1a788:	ldr	r0, [pc, #300]	; 1a8bc <__assert_fail@plt+0x81d0>
   1a78c:	bl	12224 <fwrite@plt>
   1a790:	b	1a888 <__assert_fail@plt+0x819c>
   1a794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a798:	ldr	r3, [r3, #156]	; 0x9c
   1a79c:	cmp	r3, #0
   1a7a0:	beq	1a7d8 <__assert_fail@plt+0x80ec>
   1a7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7a8:	mov	r2, #6
   1a7ac:	mov	r1, #1
   1a7b0:	ldr	r0, [pc, #264]	; 1a8c0 <__assert_fail@plt+0x81d4>
   1a7b4:	bl	12224 <fwrite@plt>
   1a7b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a7bc:	ldr	r1, [r3, #156]	; 0x9c
   1a7c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7c4:	add	r3, r3, #1
   1a7c8:	mov	r2, r3
   1a7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7d0:	bl	1a514 <__assert_fail@plt+0x7e28>
   1a7d4:	b	1a7ec <__assert_fail@plt+0x8100>
   1a7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7dc:	mov	r2, #9
   1a7e0:	mov	r1, #1
   1a7e4:	ldr	r0, [pc, #216]	; 1a8c4 <__assert_fail@plt+0x81d8>
   1a7e8:	bl	12224 <fwrite@plt>
   1a7ec:	mov	r3, #0
   1a7f0:	str	r3, [fp, #-16]
   1a7f4:	b	1a818 <__assert_fail@plt+0x812c>
   1a7f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7fc:	mov	r2, #4
   1a800:	mov	r1, #1
   1a804:	ldr	r0, [pc, #132]	; 1a890 <__assert_fail@plt+0x81a4>
   1a808:	bl	12224 <fwrite@plt>
   1a80c:	ldr	r3, [fp, #-16]
   1a810:	add	r3, r3, #1
   1a814:	str	r3, [fp, #-16]
   1a818:	ldr	r2, [fp, #-16]
   1a81c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a820:	cmp	r2, r3
   1a824:	blt	1a7f8 <__assert_fail@plt+0x810c>
   1a828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a82c:	ldr	r3, [r3, #160]	; 0xa0
   1a830:	cmp	r3, #0
   1a834:	beq	1a86c <__assert_fail@plt+0x8180>
   1a838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a83c:	mov	r2, #7
   1a840:	mov	r1, #1
   1a844:	ldr	r0, [pc, #124]	; 1a8c8 <__assert_fail@plt+0x81dc>
   1a848:	bl	12224 <fwrite@plt>
   1a84c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a850:	ldr	r1, [r3, #160]	; 0xa0
   1a854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a858:	add	r3, r3, #1
   1a85c:	mov	r2, r3
   1a860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a864:	bl	1a514 <__assert_fail@plt+0x7e28>
   1a868:	b	1a888 <__assert_fail@plt+0x819c>
   1a86c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a870:	mov	r2, #10
   1a874:	mov	r1, #1
   1a878:	ldr	r0, [pc, #76]	; 1a8cc <__assert_fail@plt+0x81e0>
   1a87c:	bl	12224 <fwrite@plt>
   1a880:	b	1a888 <__assert_fail@plt+0x819c>
   1a884:	nop			; (mov r0, r0)
   1a888:	sub	sp, fp, #8
   1a88c:	pop	{r4, fp, pc}
   1a890:	andeq	r5, r6, r4, lsl #11
   1a894:	andeq	r5, r6, ip, lsl #11
   1a898:	muleq	r6, r4, r5
   1a89c:	andeq	r5, r6, r8, lsr #11
   1a8a0:	andeq	r5, r6, ip, lsr #11
   1a8a4:			; <UNDEFINED> instruction: 0x000655b0
   1a8a8:	andeq	r5, r6, r0, ror #11
   1a8ac:	andeq	r5, r6, r8, ror #11
   1a8b0:	strheq	r5, [r6], -ip
   1a8b4:	strdeq	r5, [r6], -r0
   1a8b8:	strdeq	r5, [r6], -r8
   1a8bc:	andeq	r5, r6, r0, lsl #12
   1a8c0:	andeq	r5, r6, r0, lsl r6
   1a8c4:	andeq	r5, r6, r8, lsl r6
   1a8c8:	andeq	r5, r6, r4, lsr #12
   1a8cc:	andeq	r5, r6, ip, lsr #12
   1a8d0:	push	{fp, lr}
   1a8d4:	add	fp, sp, #4
   1a8d8:	sub	sp, sp, #24
   1a8dc:	str	r0, [fp, #-16]
   1a8e0:	str	r1, [fp, #-20]	; 0xffffffec
   1a8e4:	str	r2, [fp, #-24]	; 0xffffffe8
   1a8e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a8ec:	ldr	r0, [fp, #-16]
   1a8f0:	bl	1a1b0 <__assert_fail@plt+0x7ac4>
   1a8f4:	str	r0, [fp, #-8]
   1a8f8:	ldr	r3, [fp, #-8]
   1a8fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a900:	str	r2, [r3]
   1a904:	ldr	r3, [fp, #-16]
   1a908:	ldr	r2, [r3, #4]
   1a90c:	ldr	r3, [fp, #-8]
   1a910:	str	r2, [r3, #4]
   1a914:	ldr	r3, [fp, #-8]
   1a918:	mov	r2, #0
   1a91c:	str	r2, [r3, #40]	; 0x28
   1a920:	ldr	r3, [fp, #-8]
   1a924:	mov	r2, #1
   1a928:	str	r2, [r3, #8]
   1a92c:	ldr	r3, [fp, #-8]
   1a930:	mov	r2, #0
   1a934:	str	r2, [r3, #12]
   1a938:	ldr	r3, [fp, #-8]
   1a93c:	mov	r0, r3
   1a940:	sub	sp, fp, #4
   1a944:	pop	{fp, pc}
   1a948:	push	{fp, lr}
   1a94c:	add	fp, sp, #4
   1a950:	sub	sp, sp, #8
   1a954:	str	r0, [fp, #-8]
   1a958:	str	r1, [fp, #-12]
   1a95c:	ldr	r3, [fp, #-8]
   1a960:	ldr	r3, [r3, #12]
   1a964:	cmp	r3, #0
   1a968:	bne	1a980 <__assert_fail@plt+0x8294>
   1a96c:	ldr	r3, [pc, #52]	; 1a9a8 <__assert_fail@plt+0x82bc>
   1a970:	mov	r2, #123	; 0x7b
   1a974:	ldr	r1, [pc, #48]	; 1a9ac <__assert_fail@plt+0x82c0>
   1a978:	ldr	r0, [pc, #48]	; 1a9b0 <__assert_fail@plt+0x82c4>
   1a97c:	bl	126ec <__assert_fail@plt>
   1a980:	ldr	r3, [fp, #-8]
   1a984:	ldr	r3, [r3, #12]
   1a988:	ldr	r2, [fp, #-12]
   1a98c:	mov	r1, r3
   1a990:	ldr	r0, [fp, #-8]
   1a994:	bl	1a8d0 <__assert_fail@plt+0x81e4>
   1a998:	mov	r3, r0
   1a99c:	mov	r0, r3
   1a9a0:	sub	sp, fp, #4
   1a9a4:	pop	{fp, pc}
   1a9a8:			; <UNDEFINED> instruction: 0x000663b0
   1a9ac:	muleq	r6, ip, r8
   1a9b0:	andeq	r5, r6, r4, lsr #17
   1a9b4:	push	{fp, lr}
   1a9b8:	add	fp, sp, #4
   1a9bc:	sub	sp, sp, #8
   1a9c0:	str	r0, [fp, #-8]
   1a9c4:	mov	r1, #0
   1a9c8:	ldr	r0, [fp, #-8]
   1a9cc:	bl	1a948 <__assert_fail@plt+0x825c>
   1a9d0:	mov	r3, r0
   1a9d4:	mov	r0, r3
   1a9d8:	sub	sp, fp, #4
   1a9dc:	pop	{fp, pc}
   1a9e0:	push	{fp, lr}
   1a9e4:	add	fp, sp, #4
   1a9e8:	sub	sp, sp, #16
   1a9ec:	str	r0, [fp, #-16]
   1a9f0:	ldr	r0, [pc, #288]	; 1ab18 <__assert_fail@plt+0x842c>
   1a9f4:	bl	12398 <gettext@plt>
   1a9f8:	mov	r2, r0
   1a9fc:	ldr	r3, [pc, #280]	; 1ab1c <__assert_fail@plt+0x8430>
   1aa00:	ldr	r3, [r3]
   1aa04:	mov	r1, r3
   1aa08:	mov	r0, r2
   1aa0c:	bl	12680 <fputs@plt>
   1aa10:	ldr	r3, [fp, #-16]
   1aa14:	cmp	r3, #0
   1aa18:	beq	1aa9c <__assert_fail@plt+0x83b0>
   1aa1c:	mov	r3, #0
   1aa20:	str	r3, [fp, #-8]
   1aa24:	b	1aa8c <__assert_fail@plt+0x83a0>
   1aa28:	ldr	r3, [pc, #236]	; 1ab1c <__assert_fail@plt+0x8430>
   1aa2c:	ldr	r0, [r3]
   1aa30:	ldr	r1, [pc, #232]	; 1ab20 <__assert_fail@plt+0x8434>
   1aa34:	ldr	r2, [fp, #-8]
   1aa38:	mov	r3, r2
   1aa3c:	lsl	r3, r3, #1
   1aa40:	add	r3, r3, r2
   1aa44:	lsl	r3, r3, #2
   1aa48:	add	r3, r1, r3
   1aa4c:	ldr	ip, [r3]
   1aa50:	ldr	r1, [pc, #200]	; 1ab20 <__assert_fail@plt+0x8434>
   1aa54:	ldr	r2, [fp, #-8]
   1aa58:	mov	r3, r2
   1aa5c:	lsl	r3, r3, #1
   1aa60:	add	r3, r3, r2
   1aa64:	lsl	r3, r3, #2
   1aa68:	add	r3, r1, r3
   1aa6c:	add	r3, r3, #8
   1aa70:	ldr	r3, [r3]
   1aa74:	mov	r2, ip
   1aa78:	ldr	r1, [pc, #164]	; 1ab24 <__assert_fail@plt+0x8438>
   1aa7c:	bl	123f8 <fprintf@plt>
   1aa80:	ldr	r3, [fp, #-8]
   1aa84:	add	r3, r3, #1
   1aa88:	str	r3, [fp, #-8]
   1aa8c:	ldr	r3, [fp, #-8]
   1aa90:	cmp	r3, #8
   1aa94:	bls	1aa28 <__assert_fail@plt+0x833c>
   1aa98:	b	1ab0c <__assert_fail@plt+0x8420>
   1aa9c:	mov	r3, #0
   1aaa0:	str	r3, [fp, #-8]
   1aaa4:	b	1ab00 <__assert_fail@plt+0x8414>
   1aaa8:	ldr	r3, [pc, #108]	; 1ab1c <__assert_fail@plt+0x8430>
   1aaac:	ldr	r0, [r3]
   1aab0:	ldr	r3, [fp, #-8]
   1aab4:	cmp	r3, #0
   1aab8:	beq	1aac4 <__assert_fail@plt+0x83d8>
   1aabc:	ldr	ip, [pc, #100]	; 1ab28 <__assert_fail@plt+0x843c>
   1aac0:	b	1aac8 <__assert_fail@plt+0x83dc>
   1aac4:	ldr	ip, [pc, #96]	; 1ab2c <__assert_fail@plt+0x8440>
   1aac8:	ldr	r1, [pc, #80]	; 1ab20 <__assert_fail@plt+0x8434>
   1aacc:	ldr	r2, [fp, #-8]
   1aad0:	mov	r3, r2
   1aad4:	lsl	r3, r3, #1
   1aad8:	add	r3, r3, r2
   1aadc:	lsl	r3, r3, #2
   1aae0:	add	r3, r1, r3
   1aae4:	ldr	r3, [r3]
   1aae8:	mov	r2, ip
   1aaec:	ldr	r1, [pc, #60]	; 1ab30 <__assert_fail@plt+0x8444>
   1aaf0:	bl	123f8 <fprintf@plt>
   1aaf4:	ldr	r3, [fp, #-8]
   1aaf8:	add	r3, r3, #1
   1aafc:	str	r3, [fp, #-8]
   1ab00:	ldr	r3, [fp, #-8]
   1ab04:	cmp	r3, #8
   1ab08:	bls	1aaa8 <__assert_fail@plt+0x83bc>
   1ab0c:	nop			; (mov r0, r0)
   1ab10:	sub	sp, fp, #4
   1ab14:	pop	{fp, pc}
   1ab18:	andeq	r5, r6, r0, asr #17
   1ab1c:	andeq	ip, r7, r4, lsr r7
   1ab20:	andeq	ip, r7, r0, asr r5
   1ab24:	ldrdeq	r5, [r6], -ip
   1ab28:	andeq	r5, r6, r8, ror #17
   1ab2c:	andeq	r5, r6, ip, ror #17
   1ab30:	strdeq	r5, [r6], -r0
   1ab34:	push	{r4, fp, lr}
   1ab38:	add	fp, sp, #8
   1ab3c:	sub	sp, sp, #12
   1ab40:	str	r0, [fp, #-16]
   1ab44:	ldr	r3, [fp, #-16]
   1ab48:	cmp	r3, #0
   1ab4c:	beq	1ab80 <__assert_fail@plt+0x8494>
   1ab50:	ldr	r3, [pc, #444]	; 1ad14 <__assert_fail@plt+0x8628>
   1ab54:	ldr	r4, [r3]
   1ab58:	ldr	r0, [pc, #440]	; 1ad18 <__assert_fail@plt+0x862c>
   1ab5c:	bl	12398 <gettext@plt>
   1ab60:	mov	r1, r0
   1ab64:	ldr	r3, [pc, #432]	; 1ad1c <__assert_fail@plt+0x8630>
   1ab68:	ldr	r3, [r3]
   1ab6c:	mov	r2, r3
   1ab70:	mov	r0, r4
   1ab74:	bl	123f8 <fprintf@plt>
   1ab78:	ldr	r0, [fp, #-16]
   1ab7c:	bl	12380 <exit@plt>
   1ab80:	ldr	r3, [pc, #408]	; 1ad20 <__assert_fail@plt+0x8634>
   1ab84:	ldr	r4, [r3]
   1ab88:	ldr	r0, [pc, #404]	; 1ad24 <__assert_fail@plt+0x8638>
   1ab8c:	bl	12398 <gettext@plt>
   1ab90:	mov	r1, r0
   1ab94:	ldr	r3, [pc, #384]	; 1ad1c <__assert_fail@plt+0x8630>
   1ab98:	ldr	r3, [r3]
   1ab9c:	mov	r2, r3
   1aba0:	mov	r0, r4
   1aba4:	bl	123f8 <fprintf@plt>
   1aba8:	ldr	r0, [pc, #376]	; 1ad28 <__assert_fail@plt+0x863c>
   1abac:	bl	12398 <gettext@plt>
   1abb0:	mov	r2, r0
   1abb4:	ldr	r3, [pc, #356]	; 1ad20 <__assert_fail@plt+0x8634>
   1abb8:	ldr	r3, [r3]
   1abbc:	mov	r1, r3
   1abc0:	mov	r0, r2
   1abc4:	bl	12680 <fputs@plt>
   1abc8:	ldr	r0, [pc, #348]	; 1ad2c <__assert_fail@plt+0x8640>
   1abcc:	bl	12398 <gettext@plt>
   1abd0:	mov	r2, r0
   1abd4:	ldr	r3, [pc, #324]	; 1ad20 <__assert_fail@plt+0x8634>
   1abd8:	ldr	r3, [r3]
   1abdc:	mov	r1, r3
   1abe0:	mov	r0, r2
   1abe4:	bl	12680 <fputs@plt>
   1abe8:	ldr	r0, [pc, #320]	; 1ad30 <__assert_fail@plt+0x8644>
   1abec:	bl	12398 <gettext@plt>
   1abf0:	mov	r2, r0
   1abf4:	ldr	r3, [pc, #292]	; 1ad20 <__assert_fail@plt+0x8634>
   1abf8:	ldr	r3, [r3]
   1abfc:	mov	r1, r3
   1ac00:	mov	r0, r2
   1ac04:	bl	12680 <fputs@plt>
   1ac08:	ldr	r0, [pc, #292]	; 1ad34 <__assert_fail@plt+0x8648>
   1ac0c:	bl	12398 <gettext@plt>
   1ac10:	mov	r2, r0
   1ac14:	ldr	r3, [pc, #260]	; 1ad20 <__assert_fail@plt+0x8634>
   1ac18:	ldr	r3, [r3]
   1ac1c:	mov	r1, r3
   1ac20:	mov	r0, r2
   1ac24:	bl	12680 <fputs@plt>
   1ac28:	ldr	r0, [pc, #264]	; 1ad38 <__assert_fail@plt+0x864c>
   1ac2c:	bl	12398 <gettext@plt>
   1ac30:	mov	r2, r0
   1ac34:	ldr	r3, [pc, #228]	; 1ad20 <__assert_fail@plt+0x8634>
   1ac38:	ldr	r3, [r3]
   1ac3c:	mov	r1, r3
   1ac40:	mov	r0, r2
   1ac44:	bl	12680 <fputs@plt>
   1ac48:	ldr	r0, [pc, #236]	; 1ad3c <__assert_fail@plt+0x8650>
   1ac4c:	bl	12398 <gettext@plt>
   1ac50:	mov	r2, r0
   1ac54:	ldr	r3, [pc, #196]	; 1ad20 <__assert_fail@plt+0x8634>
   1ac58:	ldr	r3, [r3]
   1ac5c:	mov	r1, r3
   1ac60:	mov	r0, r2
   1ac64:	bl	12680 <fputs@plt>
   1ac68:	ldr	r0, [pc, #208]	; 1ad40 <__assert_fail@plt+0x8654>
   1ac6c:	bl	12398 <gettext@plt>
   1ac70:	mov	r2, r0
   1ac74:	ldr	r3, [pc, #164]	; 1ad20 <__assert_fail@plt+0x8634>
   1ac78:	ldr	r3, [r3]
   1ac7c:	mov	r1, r3
   1ac80:	mov	r0, r2
   1ac84:	bl	12680 <fputs@plt>
   1ac88:	ldr	r0, [pc, #180]	; 1ad44 <__assert_fail@plt+0x8658>
   1ac8c:	bl	12398 <gettext@plt>
   1ac90:	mov	r2, r0
   1ac94:	ldr	r3, [pc, #132]	; 1ad20 <__assert_fail@plt+0x8634>
   1ac98:	ldr	r3, [r3]
   1ac9c:	mov	r1, r3
   1aca0:	mov	r0, r2
   1aca4:	bl	12680 <fputs@plt>
   1aca8:	ldr	r0, [pc, #152]	; 1ad48 <__assert_fail@plt+0x865c>
   1acac:	bl	12398 <gettext@plt>
   1acb0:	mov	r2, r0
   1acb4:	ldr	r3, [pc, #100]	; 1ad20 <__assert_fail@plt+0x8634>
   1acb8:	ldr	r3, [r3]
   1acbc:	mov	r1, r3
   1acc0:	mov	r0, r2
   1acc4:	bl	12680 <fputs@plt>
   1acc8:	mov	r0, #0
   1accc:	bl	1a9e0 <__assert_fail@plt+0x82f4>
   1acd0:	ldr	r0, [pc, #116]	; 1ad4c <__assert_fail@plt+0x8660>
   1acd4:	bl	12398 <gettext@plt>
   1acd8:	mov	r2, r0
   1acdc:	ldr	r3, [pc, #60]	; 1ad20 <__assert_fail@plt+0x8634>
   1ace0:	ldr	r3, [r3]
   1ace4:	mov	r1, r3
   1ace8:	mov	r0, r2
   1acec:	bl	12680 <fputs@plt>
   1acf0:	ldr	r3, [pc, #40]	; 1ad20 <__assert_fail@plt+0x8634>
   1acf4:	ldr	r2, [r3]
   1acf8:	ldr	r3, [pc, #28]	; 1ad1c <__assert_fail@plt+0x8630>
   1acfc:	ldr	r3, [r3]
   1ad00:	mov	r1, r3
   1ad04:	mov	r0, r2
   1ad08:	bl	299ac <__assert_fail@plt+0x172c0>
   1ad0c:	ldr	r0, [fp, #-16]
   1ad10:	bl	12380 <exit@plt>
   1ad14:	andeq	ip, r7, r8, lsr #14
   1ad18:	strdeq	r5, [r6], -r8
   1ad1c:	andeq	ip, r7, r4, ror #29
   1ad20:	andeq	ip, r7, r4, lsr r7
   1ad24:	andeq	r5, r6, r0, lsr #18
   1ad28:	andeq	r5, r6, ip, ror #18
   1ad2c:	strdeq	r5, [r6], -r8
   1ad30:	andeq	r5, r6, r8, asr #21
   1ad34:	andeq	r5, r6, r0, lsr #22
   1ad38:	strdeq	r5, [r6], -r0
   1ad3c:	andeq	r5, r6, r0, lsl lr
   1ad40:	andeq	r5, r6, r0, lsl pc
   1ad44:	andeq	r5, r6, r8, lsr #30
   1ad48:	andeq	r5, r6, r4, ror #30
   1ad4c:	andeq	r5, r6, ip, lsr #31
   1ad50:	push	{fp}		; (str fp, [sp, #-4]!)
   1ad54:	add	fp, sp, #0
   1ad58:	sub	sp, sp, #12
   1ad5c:	str	r0, [fp, #-8]
   1ad60:	nop			; (mov r0, r0)
   1ad64:	add	sp, fp, #0
   1ad68:	pop	{fp}		; (ldr fp, [sp], #4)
   1ad6c:	bx	lr
   1ad70:	push	{r4, fp, lr}
   1ad74:	add	fp, sp, #8
   1ad78:	sub	sp, sp, #20
   1ad7c:	str	r0, [fp, #-16]
   1ad80:	str	r1, [fp, #-20]	; 0xffffffec
   1ad84:	str	r2, [fp, #-24]	; 0xffffffe8
   1ad88:	ldr	r3, [pc, #276]	; 1aea4 <__assert_fail@plt+0x87b8>
   1ad8c:	ldrb	r3, [r3, #4]
   1ad90:	eor	r3, r3, #1
   1ad94:	uxtb	r3, r3
   1ad98:	cmp	r3, #0
   1ad9c:	beq	1ae6c <__assert_fail@plt+0x8780>
   1ada0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ada4:	bl	1ad50 <__assert_fail@plt+0x8664>
   1ada8:	ldr	r3, [pc, #248]	; 1aea8 <__assert_fail@plt+0x87bc>
   1adac:	ldr	r3, [r3, #52]	; 0x34
   1adb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1adb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1adb8:	blx	r3
   1adbc:	mov	r3, r0
   1adc0:	cmp	r3, #0
   1adc4:	bne	1ae20 <__assert_fail@plt+0x8734>
   1adc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adcc:	ldr	r3, [r3, #16]
   1add0:	cmp	r3, #0
   1add4:	bne	1ae6c <__assert_fail@plt+0x8780>
   1add8:	ldr	r0, [pc, #204]	; 1aeac <__assert_fail@plt+0x87c0>
   1addc:	bl	12398 <gettext@plt>
   1ade0:	mov	r4, r0
   1ade4:	ldr	r3, [pc, #188]	; 1aea8 <__assert_fail@plt+0x87bc>
   1ade8:	ldr	r3, [r3, #72]	; 0x48
   1adec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1adf0:	mov	r1, r3
   1adf4:	mov	r0, #0
   1adf8:	bl	3b718 <__assert_fail@plt+0x2902c>
   1adfc:	mov	r3, r0
   1ae00:	mov	r2, r4
   1ae04:	mov	r1, #0
   1ae08:	mov	r0, #0
   1ae0c:	bl	122b4 <error@plt>
   1ae10:	ldr	r3, [pc, #140]	; 1aea4 <__assert_fail@plt+0x87b8>
   1ae14:	mov	r2, #1
   1ae18:	str	r2, [r3, #28]
   1ae1c:	b	1ae6c <__assert_fail@plt+0x8780>
   1ae20:	ldr	r3, [pc, #128]	; 1aea8 <__assert_fail@plt+0x87bc>
   1ae24:	ldrb	r3, [r3, #14]
   1ae28:	eor	r3, r3, #1
   1ae2c:	uxtb	r3, r3
   1ae30:	cmp	r3, #0
   1ae34:	bne	1ae4c <__assert_fail@plt+0x8760>
   1ae38:	bl	12404 <__errno_location@plt>
   1ae3c:	mov	r3, r0
   1ae40:	ldr	r3, [r3]
   1ae44:	cmp	r3, #2
   1ae48:	beq	1ae64 <__assert_fail@plt+0x8778>
   1ae4c:	bl	12404 <__errno_location@plt>
   1ae50:	mov	r3, r0
   1ae54:	ldr	r3, [r3]
   1ae58:	ldr	r1, [fp, #-16]
   1ae5c:	mov	r0, r3
   1ae60:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   1ae64:	mvn	r3, #0
   1ae68:	b	1ae98 <__assert_fail@plt+0x87ac>
   1ae6c:	ldr	r3, [pc, #48]	; 1aea4 <__assert_fail@plt+0x87b8>
   1ae70:	mov	r2, #1
   1ae74:	strb	r2, [r3, #4]
   1ae78:	ldr	r3, [pc, #36]	; 1aea4 <__assert_fail@plt+0x87b8>
   1ae7c:	mov	r2, #1
   1ae80:	strb	r2, [r3, #5]
   1ae84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae88:	ldr	r3, [r3, #16]
   1ae8c:	ldr	r2, [pc, #16]	; 1aea4 <__assert_fail@plt+0x87b8>
   1ae90:	str	r3, [r2, #8]
   1ae94:	mov	r3, #0
   1ae98:	mov	r0, r3
   1ae9c:	sub	sp, fp, #8
   1aea0:	pop	{r4, fp, pc}
   1aea4:	andeq	sp, r7, r0, lsr #32
   1aea8:	andeq	sp, r7, ip, asr #32
   1aeac:	strdeq	r5, [r6], -r0
   1aeb0:	push	{fp, lr}
   1aeb4:	add	fp, sp, #4
   1aeb8:	sub	sp, sp, #24
   1aebc:	str	r0, [fp, #-16]
   1aec0:	str	r1, [fp, #-20]	; 0xffffffec
   1aec4:	str	r2, [fp, #-24]	; 0xffffffe8
   1aec8:	mov	r3, #0
   1aecc:	strb	r3, [fp, #-5]
   1aed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aed4:	ldrb	r3, [r3, #18]
   1aed8:	cmp	r3, #0
   1aedc:	beq	1af04 <__assert_fail@plt+0x8818>
   1aee0:	ldr	r3, [pc, #248]	; 1afe0 <__assert_fail@plt+0x88f4>
   1aee4:	ldrb	r3, [r3, #4]
   1aee8:	eor	r3, r3, #1
   1aeec:	uxtb	r3, r3
   1aef0:	cmp	r3, #0
   1aef4:	beq	1af04 <__assert_fail@plt+0x8818>
   1aef8:	mov	r3, #1
   1aefc:	strb	r3, [fp, #-5]
   1af00:	b	1af98 <__assert_fail@plt+0x88ac>
   1af04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af08:	ldrb	r3, [r3, #19]
   1af0c:	cmp	r3, #0
   1af10:	beq	1af38 <__assert_fail@plt+0x884c>
   1af14:	ldr	r3, [pc, #196]	; 1afe0 <__assert_fail@plt+0x88f4>
   1af18:	ldrb	r3, [r3, #5]
   1af1c:	eor	r3, r3, #1
   1af20:	uxtb	r3, r3
   1af24:	cmp	r3, #0
   1af28:	beq	1af38 <__assert_fail@plt+0x884c>
   1af2c:	mov	r3, #1
   1af30:	strb	r3, [fp, #-5]
   1af34:	b	1af98 <__assert_fail@plt+0x88ac>
   1af38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af3c:	ldrb	r3, [r3, #20]
   1af40:	cmp	r3, #0
   1af44:	beq	1af98 <__assert_fail@plt+0x88ac>
   1af48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1af4c:	ldrd	r2, [r3, #96]	; 0x60
   1af50:	orrs	r3, r2, r3
   1af54:	bne	1af64 <__assert_fail@plt+0x8878>
   1af58:	mov	r3, #1
   1af5c:	strb	r3, [fp, #-5]
   1af60:	b	1af98 <__assert_fail@plt+0x88ac>
   1af64:	ldr	r3, [pc, #116]	; 1afe0 <__assert_fail@plt+0x88f4>
   1af68:	ldrb	r3, [r3, #5]
   1af6c:	eor	r3, r3, #1
   1af70:	uxtb	r3, r3
   1af74:	cmp	r3, #0
   1af78:	bne	1af90 <__assert_fail@plt+0x88a4>
   1af7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1af80:	ldr	r3, [r3, #16]
   1af84:	and	r3, r3, #61440	; 0xf000
   1af88:	cmp	r3, #16384	; 0x4000
   1af8c:	bne	1af98 <__assert_fail@plt+0x88ac>
   1af90:	mov	r3, #1
   1af94:	strb	r3, [fp, #-5]
   1af98:	ldrb	r3, [fp, #-5]
   1af9c:	cmp	r3, #0
   1afa0:	beq	1afd0 <__assert_fail@plt+0x88e4>
   1afa4:	ldr	r3, [pc, #52]	; 1afe0 <__assert_fail@plt+0x88f4>
   1afa8:	ldr	r3, [r3, #12]
   1afac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1afb0:	mov	r1, r3
   1afb4:	ldr	r0, [fp, #-16]
   1afb8:	bl	1ad70 <__assert_fail@plt+0x8684>
   1afbc:	mov	r3, r0
   1afc0:	cmp	r3, #0
   1afc4:	beq	1afd0 <__assert_fail@plt+0x88e4>
   1afc8:	mvn	r3, #0
   1afcc:	b	1afd4 <__assert_fail@plt+0x88e8>
   1afd0:	mov	r3, #0
   1afd4:	mov	r0, r3
   1afd8:	sub	sp, fp, #4
   1afdc:	pop	{fp, pc}
   1afe0:	andeq	sp, r7, r0, lsr #32
   1afe4:	push	{fp, lr}
   1afe8:	add	fp, sp, #4
   1afec:	sub	sp, sp, #400	; 0x190
   1aff0:	sub	r3, fp, #404	; 0x194
   1aff4:	mov	r0, r3
   1aff8:	bl	12164 <uname@plt>
   1affc:	mov	r3, r0
   1b000:	cmp	r3, #0
   1b004:	bne	1b0a8 <__assert_fail@plt+0x89bc>
   1b008:	ldr	r3, [pc, #176]	; 1b0c0 <__assert_fail@plt+0x89d4>
   1b00c:	str	r3, [fp, #-8]
   1b010:	sub	r3, fp, #404	; 0x194
   1b014:	add	r2, r3, #130	; 0x82
   1b018:	ldr	r3, [fp, #-8]
   1b01c:	mov	r0, r2
   1b020:	blx	r3
   1b024:	vmov.f64	d7, d0
   1b028:	vcvt.f32.f64	s15, d7
   1b02c:	vstr	s15, [fp, #-12]
   1b030:	sub	r3, fp, #404	; 0x194
   1b034:	mov	r1, r3
   1b038:	ldr	r0, [pc, #132]	; 1b0c4 <__assert_fail@plt+0x89d8>
   1b03c:	bl	11ffc <strcmp@plt>
   1b040:	mov	r3, r0
   1b044:	cmp	r3, #0
   1b048:	bne	1b06c <__assert_fail@plt+0x8980>
   1b04c:	vldr	s15, [fp, #-12]
   1b050:	vldr	s14, [pc, #96]	; 1b0b8 <__assert_fail@plt+0x89cc>
   1b054:	vcmpe.f32	s15, s14
   1b058:	vmrs	APSR_nzcv, fpscr
   1b05c:	movge	r3, #1
   1b060:	movlt	r3, #0
   1b064:	uxtb	r3, r3
   1b068:	b	1b0ac <__assert_fail@plt+0x89c0>
   1b06c:	sub	r3, fp, #404	; 0x194
   1b070:	mov	r1, r3
   1b074:	ldr	r0, [pc, #76]	; 1b0c8 <__assert_fail@plt+0x89dc>
   1b078:	bl	11ffc <strcmp@plt>
   1b07c:	mov	r3, r0
   1b080:	cmp	r3, #0
   1b084:	bne	1b0a8 <__assert_fail@plt+0x89bc>
   1b088:	vldr	s15, [fp, #-12]
   1b08c:	vldr	s14, [pc, #40]	; 1b0bc <__assert_fail@plt+0x89d0>
   1b090:	vcmpe.f32	s15, s14
   1b094:	vmrs	APSR_nzcv, fpscr
   1b098:	movge	r3, #1
   1b09c:	movlt	r3, #0
   1b0a0:	uxtb	r3, r3
   1b0a4:	b	1b0ac <__assert_fail@plt+0x89c0>
   1b0a8:	mov	r3, #1
   1b0ac:	mov	r0, r3
   1b0b0:	sub	sp, fp, #4
   1b0b4:	pop	{fp, pc}
   1b0b8:	andmi	ip, ip, sp, asr #25
   1b0bc:	submi	r6, r6, r6, ror #12
   1b0c0:	andeq	r2, r1, ip, lsr #12
   1b0c4:	andeq	r6, r6, ip, lsl r0
   1b0c8:	andeq	r6, r6, r4, lsr #32
   1b0cc:	push	{fp, lr}
   1b0d0:	add	fp, sp, #4
   1b0d4:	sub	sp, sp, #16
   1b0d8:	str	r0, [fp, #-16]
   1b0dc:	ldr	r3, [fp, #-16]
   1b0e0:	str	r3, [fp, #-8]
   1b0e4:	ldr	r3, [fp, #-8]
   1b0e8:	add	r2, r3, #4
   1b0ec:	ldr	r3, [fp, #-8]
   1b0f0:	add	r3, r3, #48	; 0x30
   1b0f4:	mov	r1, r3
   1b0f8:	mov	r0, r2
   1b0fc:	bl	26668 <__assert_fail@plt+0x13f7c>
   1b100:	mov	r3, #0
   1b104:	mov	r0, r3
   1b108:	sub	sp, fp, #4
   1b10c:	pop	{fp, pc}
   1b110:	push	{fp, lr}
   1b114:	add	fp, sp, #4
   1b118:	sub	sp, sp, #8
   1b11c:	str	r0, [fp, #-8]
   1b120:	ldr	r3, [fp, #-8]
   1b124:	ldr	r3, [r3, #104]	; 0x68
   1b128:	ldr	r2, [fp, #-8]
   1b12c:	ldr	r1, [pc, #84]	; 1b188 <__assert_fail@plt+0x8a9c>
   1b130:	mov	r0, r3
   1b134:	bl	271e4 <__assert_fail@plt+0x14af8>
   1b138:	ldr	r3, [fp, #-8]
   1b13c:	ldr	r2, [r3, #104]	; 0x68
   1b140:	ldr	r3, [pc, #68]	; 1b18c <__assert_fail@plt+0x8aa0>
   1b144:	ldr	r3, [r3]
   1b148:	cmp	r2, r3
   1b14c:	beq	1b17c <__assert_fail@plt+0x8a90>
   1b150:	ldr	r3, [fp, #-8]
   1b154:	ldr	r3, [r3, #104]	; 0x68
   1b158:	mov	r0, r3
   1b15c:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   1b160:	ldr	r3, [fp, #-8]
   1b164:	ldr	r3, [r3, #104]	; 0x68
   1b168:	mov	r0, r3
   1b16c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1b170:	ldr	r3, [fp, #-8]
   1b174:	mov	r2, #0
   1b178:	str	r2, [r3, #104]	; 0x68
   1b17c:	nop			; (mov r0, r0)
   1b180:	sub	sp, fp, #4
   1b184:	pop	{fp, pc}
   1b188:	andeq	fp, r1, ip, asr #1
   1b18c:	andeq	ip, r7, ip, asr #14
   1b190:	push	{fp, lr}
   1b194:	add	fp, sp, #4
   1b198:	sub	sp, sp, #16
   1b19c:	str	r0, [fp, #-16]
   1b1a0:	ldr	r3, [fp, #-16]
   1b1a4:	cmp	r3, #0
   1b1a8:	beq	1b250 <__assert_fail@plt+0x8b64>
   1b1ac:	ldr	r3, [pc, #168]	; 1b25c <__assert_fail@plt+0x8b70>
   1b1b0:	ldrb	r3, [r3, #32]
   1b1b4:	cmp	r3, #0
   1b1b8:	bne	1b1d0 <__assert_fail@plt+0x8ae4>
   1b1bc:	ldr	r3, [pc, #156]	; 1b260 <__assert_fail@plt+0x8b74>
   1b1c0:	mov	r2, #396	; 0x18c
   1b1c4:	ldr	r1, [pc, #152]	; 1b264 <__assert_fail@plt+0x8b78>
   1b1c8:	ldr	r0, [pc, #152]	; 1b268 <__assert_fail@plt+0x8b7c>
   1b1cc:	bl	126ec <__assert_fail@plt>
   1b1d0:	ldr	r3, [fp, #-16]
   1b1d4:	ldr	r3, [r3, #156]	; 0x9c
   1b1d8:	mov	r0, r3
   1b1dc:	bl	1b190 <__assert_fail@plt+0x8aa4>
   1b1e0:	ldr	r3, [fp, #-16]
   1b1e4:	ldr	r3, [r3]
   1b1e8:	ldr	r2, [pc, #124]	; 1b26c <__assert_fail@plt+0x8b80>
   1b1ec:	cmp	r3, r2
   1b1f0:	beq	1b208 <__assert_fail@plt+0x8b1c>
   1b1f4:	ldr	r3, [fp, #-16]
   1b1f8:	ldr	r3, [r3]
   1b1fc:	ldr	r2, [pc, #108]	; 1b270 <__assert_fail@plt+0x8b84>
   1b200:	cmp	r3, r2
   1b204:	bne	1b23c <__assert_fail@plt+0x8b50>
   1b208:	ldr	r3, [fp, #-16]
   1b20c:	ldrb	r3, [r3, #40]	; 0x28
   1b210:	cmp	r3, #0
   1b214:	beq	1b23c <__assert_fail@plt+0x8b50>
   1b218:	ldr	r3, [fp, #-16]
   1b21c:	add	r3, r3, #40	; 0x28
   1b220:	str	r3, [fp, #-8]
   1b224:	ldr	r3, [fp, #-8]
   1b228:	ldr	r3, [r3, #76]	; 0x4c
   1b22c:	cmp	r3, #0
   1b230:	beq	1b23c <__assert_fail@plt+0x8b50>
   1b234:	ldr	r0, [fp, #-8]
   1b238:	bl	1b110 <__assert_fail@plt+0x8a24>
   1b23c:	ldr	r3, [fp, #-16]
   1b240:	ldr	r3, [r3, #160]	; 0xa0
   1b244:	mov	r0, r3
   1b248:	bl	1b190 <__assert_fail@plt+0x8aa4>
   1b24c:	b	1b254 <__assert_fail@plt+0x8b68>
   1b250:	nop			; (mov r0, r0)
   1b254:	sub	sp, fp, #4
   1b258:	pop	{fp, pc}
   1b25c:	andeq	sp, r7, r0, lsr #32
   1b260:	andeq	r6, r6, r0, asr #7
   1b264:	muleq	r6, ip, r8
   1b268:	andeq	r6, r6, ip, lsr #32
   1b26c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1b270:	ldrdeq	r5, [r1], -ip
   1b274:	push	{fp, lr}
   1b278:	add	fp, sp, #4
   1b27c:	ldr	r3, [pc, #44]	; 1b2b0 <__assert_fail@plt+0x8bc4>
   1b280:	ldrb	r3, [r3, #32]
   1b284:	cmp	r3, #0
   1b288:	beq	1b2a8 <__assert_fail@plt+0x8bbc>
   1b28c:	bl	19204 <__assert_fail@plt+0x6b18>
   1b290:	mov	r3, r0
   1b294:	mov	r0, r3
   1b298:	bl	1b190 <__assert_fail@plt+0x8aa4>
   1b29c:	ldr	r3, [pc, #12]	; 1b2b0 <__assert_fail@plt+0x8bc4>
   1b2a0:	mov	r2, #0
   1b2a4:	strb	r2, [r3, #32]
   1b2a8:	nop			; (mov r0, r0)
   1b2ac:	pop	{fp, pc}
   1b2b0:	andeq	sp, r7, r0, lsr #32
   1b2b4:	push	{fp, lr}
   1b2b8:	add	fp, sp, #4
   1b2bc:	sub	sp, sp, #16
   1b2c0:	str	r0, [fp, #-16]
   1b2c4:	ldr	r3, [fp, #-16]
   1b2c8:	cmp	r3, #0
   1b2cc:	beq	1b350 <__assert_fail@plt+0x8c64>
   1b2d0:	ldr	r3, [fp, #-16]
   1b2d4:	ldr	r3, [r3, #156]	; 0x9c
   1b2d8:	mov	r0, r3
   1b2dc:	bl	1b2b4 <__assert_fail@plt+0x8bc8>
   1b2e0:	ldr	r3, [fp, #-16]
   1b2e4:	ldr	r3, [r3]
   1b2e8:	ldr	r2, [pc, #108]	; 1b35c <__assert_fail@plt+0x8c70>
   1b2ec:	cmp	r3, r2
   1b2f0:	bne	1b33c <__assert_fail@plt+0x8c50>
   1b2f4:	ldr	r3, [fp, #-16]
   1b2f8:	ldrb	r3, [r3, #40]	; 0x28
   1b2fc:	cmp	r3, #0
   1b300:	beq	1b33c <__assert_fail@plt+0x8c50>
   1b304:	ldr	r3, [fp, #-16]
   1b308:	add	r3, r3, #40	; 0x28
   1b30c:	str	r3, [fp, #-8]
   1b310:	ldr	r3, [fp, #-8]
   1b314:	ldr	r3, [r3, #76]	; 0x4c
   1b318:	cmp	r3, #0
   1b31c:	beq	1b33c <__assert_fail@plt+0x8c50>
   1b320:	ldr	r3, [fp, #-8]
   1b324:	add	r2, r3, #4
   1b328:	ldr	r3, [fp, #-8]
   1b32c:	add	r3, r3, #48	; 0x30
   1b330:	mov	r1, r3
   1b334:	mov	r0, r2
   1b338:	bl	26668 <__assert_fail@plt+0x13f7c>
   1b33c:	ldr	r3, [fp, #-16]
   1b340:	ldr	r3, [r3, #160]	; 0xa0
   1b344:	mov	r0, r3
   1b348:	bl	1b2b4 <__assert_fail@plt+0x8bc8>
   1b34c:	b	1b354 <__assert_fail@plt+0x8c68>
   1b350:	nop			; (mov r0, r0)
   1b354:	sub	sp, fp, #4
   1b358:	pop	{fp, pc}
   1b35c:			; <UNDEFINED> instruction: 0x000148bc
   1b360:	push	{r4, fp, lr}
   1b364:	add	fp, sp, #8
   1b368:	sub	sp, sp, #12
   1b36c:	mov	r0, #8
   1b370:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1b374:	mov	r3, r0
   1b378:	mov	r2, r3
   1b37c:	ldr	r3, [pc, #200]	; 1b44c <__assert_fail@plt+0x8d60>
   1b380:	str	r2, [r3]
   1b384:	ldr	r3, [pc, #192]	; 1b44c <__assert_fail@plt+0x8d60>
   1b388:	ldr	r3, [r3]
   1b38c:	mov	r0, r3
   1b390:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   1b394:	mov	r3, r0
   1b398:	cmp	r3, #0
   1b39c:	beq	1b440 <__assert_fail@plt+0x8d54>
   1b3a0:	bl	12404 <__errno_location@plt>
   1b3a4:	mov	r3, r0
   1b3a8:	ldr	r4, [r3]
   1b3ac:	ldr	r0, [pc, #156]	; 1b450 <__assert_fail@plt+0x8d64>
   1b3b0:	bl	12398 <gettext@plt>
   1b3b4:	mov	r1, r0
   1b3b8:	ldr	r3, [pc, #140]	; 1b44c <__assert_fail@plt+0x8d60>
   1b3bc:	ldr	r3, [r3]
   1b3c0:	ldr	r3, [r3]
   1b3c4:	cmp	r3, #0
   1b3c8:	bge	1b3e8 <__assert_fail@plt+0x8cfc>
   1b3cc:	ldr	r3, [pc, #120]	; 1b44c <__assert_fail@plt+0x8d60>
   1b3d0:	ldr	r3, [r3]
   1b3d4:	ldr	r3, [r3, #4]
   1b3d8:	cmp	r3, #0
   1b3dc:	beq	1b3e8 <__assert_fail@plt+0x8cfc>
   1b3e0:	ldr	r2, [pc, #108]	; 1b454 <__assert_fail@plt+0x8d68>
   1b3e4:	b	1b3ec <__assert_fail@plt+0x8d00>
   1b3e8:	ldr	r2, [pc, #104]	; 1b458 <__assert_fail@plt+0x8d6c>
   1b3ec:	ldr	r3, [pc, #88]	; 1b44c <__assert_fail@plt+0x8d60>
   1b3f0:	ldr	r3, [r3]
   1b3f4:	ldr	r3, [r3]
   1b3f8:	cmp	r3, #0
   1b3fc:	bge	1b424 <__assert_fail@plt+0x8d38>
   1b400:	ldr	r3, [pc, #68]	; 1b44c <__assert_fail@plt+0x8d60>
   1b404:	ldr	r3, [r3]
   1b408:	ldr	r3, [r3, #4]
   1b40c:	cmp	r3, #0
   1b410:	beq	1b424 <__assert_fail@plt+0x8d38>
   1b414:	ldr	r3, [pc, #48]	; 1b44c <__assert_fail@plt+0x8d60>
   1b418:	ldr	r3, [r3]
   1b41c:	ldr	r3, [r3, #4]
   1b420:	b	1b428 <__assert_fail@plt+0x8d3c>
   1b424:	ldr	r3, [pc, #44]	; 1b458 <__assert_fail@plt+0x8d6c>
   1b428:	str	r3, [sp]
   1b42c:	mov	r3, r2
   1b430:	mov	r2, r1
   1b434:	mov	r1, r4
   1b438:	mov	r0, #1
   1b43c:	bl	122b4 <error@plt>
   1b440:	nop			; (mov r0, r0)
   1b444:	sub	sp, fp, #8
   1b448:	pop	{r4, fp, pc}
   1b44c:	andeq	ip, r7, ip, asr #14
   1b450:	andeq	r6, r6, r8, asr #32
   1b454:	andeq	r6, r6, r8, ror r0
   1b458:	andeq	r5, r6, ip, ror #17
   1b45c:	push	{r4, fp, lr}
   1b460:	add	fp, sp, #8
   1b464:	sub	sp, sp, #12
   1b468:	ldr	r3, [pc, #244]	; 1b564 <__assert_fail@plt+0x8e78>
   1b46c:	ldr	r3, [r3]
   1b470:	mov	r0, r3
   1b474:	bl	3bc68 <__assert_fail@plt+0x2957c>
   1b478:	mov	r3, r0
   1b47c:	cmp	r3, #0
   1b480:	bne	1b4b4 <__assert_fail@plt+0x8dc8>
   1b484:	ldr	r3, [pc, #216]	; 1b564 <__assert_fail@plt+0x8e78>
   1b488:	ldr	r3, [r3]
   1b48c:	mov	r0, r3
   1b490:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   1b494:	ldr	r3, [pc, #200]	; 1b564 <__assert_fail@plt+0x8e78>
   1b498:	ldr	r3, [r3]
   1b49c:	mov	r0, r3
   1b4a0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1b4a4:	ldr	r3, [pc, #184]	; 1b564 <__assert_fail@plt+0x8e78>
   1b4a8:	mov	r2, #0
   1b4ac:	str	r2, [r3]
   1b4b0:	b	1b55c <__assert_fail@plt+0x8e70>
   1b4b4:	bl	12404 <__errno_location@plt>
   1b4b8:	mov	r3, r0
   1b4bc:	ldr	r4, [r3]
   1b4c0:	ldr	r0, [pc, #160]	; 1b568 <__assert_fail@plt+0x8e7c>
   1b4c4:	bl	12398 <gettext@plt>
   1b4c8:	mov	r1, r0
   1b4cc:	ldr	r3, [pc, #144]	; 1b564 <__assert_fail@plt+0x8e78>
   1b4d0:	ldr	r3, [r3]
   1b4d4:	ldr	r3, [r3]
   1b4d8:	cmp	r3, #0
   1b4dc:	bge	1b4fc <__assert_fail@plt+0x8e10>
   1b4e0:	ldr	r3, [pc, #124]	; 1b564 <__assert_fail@plt+0x8e78>
   1b4e4:	ldr	r3, [r3]
   1b4e8:	ldr	r3, [r3, #4]
   1b4ec:	cmp	r3, #0
   1b4f0:	beq	1b4fc <__assert_fail@plt+0x8e10>
   1b4f4:	ldr	r2, [pc, #112]	; 1b56c <__assert_fail@plt+0x8e80>
   1b4f8:	b	1b500 <__assert_fail@plt+0x8e14>
   1b4fc:	ldr	r2, [pc, #108]	; 1b570 <__assert_fail@plt+0x8e84>
   1b500:	ldr	r3, [pc, #92]	; 1b564 <__assert_fail@plt+0x8e78>
   1b504:	ldr	r3, [r3]
   1b508:	ldr	r3, [r3]
   1b50c:	cmp	r3, #0
   1b510:	bge	1b538 <__assert_fail@plt+0x8e4c>
   1b514:	ldr	r3, [pc, #72]	; 1b564 <__assert_fail@plt+0x8e78>
   1b518:	ldr	r3, [r3]
   1b51c:	ldr	r3, [r3, #4]
   1b520:	cmp	r3, #0
   1b524:	beq	1b538 <__assert_fail@plt+0x8e4c>
   1b528:	ldr	r3, [pc, #52]	; 1b564 <__assert_fail@plt+0x8e78>
   1b52c:	ldr	r3, [r3]
   1b530:	ldr	r3, [r3, #4]
   1b534:	b	1b53c <__assert_fail@plt+0x8e50>
   1b538:	ldr	r3, [pc, #48]	; 1b570 <__assert_fail@plt+0x8e84>
   1b53c:	str	r3, [sp]
   1b540:	mov	r3, r2
   1b544:	mov	r2, r1
   1b548:	mov	r1, r4
   1b54c:	mov	r0, #0
   1b550:	bl	122b4 <error@plt>
   1b554:	mov	r0, #1
   1b558:	bl	120ec <_exit@plt>
   1b55c:	sub	sp, fp, #8
   1b560:	pop	{r4, fp, pc}
   1b564:	andeq	ip, r7, ip, asr #14
   1b568:	andeq	r6, r6, ip, ror r0
   1b56c:	andeq	r6, r6, r8, ror r0
   1b570:	andeq	r5, r6, ip, ror #17
   1b574:	push	{fp, lr}
   1b578:	add	fp, sp, #4
   1b57c:	sub	sp, sp, #8
   1b580:	str	r0, [fp, #-8]
   1b584:	str	r1, [fp, #-12]
   1b588:	ldr	r3, [fp, #-8]
   1b58c:	ldr	r3, [r3, #156]	; 0x9c
   1b590:	cmp	r3, #0
   1b594:	beq	1b5ac <__assert_fail@plt+0x8ec0>
   1b598:	ldr	r3, [fp, #-8]
   1b59c:	ldr	r3, [r3, #156]	; 0x9c
   1b5a0:	ldr	r1, [fp, #-12]
   1b5a4:	mov	r0, r3
   1b5a8:	bl	1b574 <__assert_fail@plt+0x8e88>
   1b5ac:	ldr	r3, [fp, #-12]
   1b5b0:	ldr	r0, [fp, #-8]
   1b5b4:	blx	r3
   1b5b8:	ldr	r3, [fp, #-8]
   1b5bc:	ldr	r3, [r3, #160]	; 0xa0
   1b5c0:	cmp	r3, #0
   1b5c4:	beq	1b5dc <__assert_fail@plt+0x8ef0>
   1b5c8:	ldr	r3, [fp, #-8]
   1b5cc:	ldr	r3, [r3, #160]	; 0xa0
   1b5d0:	ldr	r1, [fp, #-12]
   1b5d4:	mov	r0, r3
   1b5d8:	bl	1b574 <__assert_fail@plt+0x8e88>
   1b5dc:	nop			; (mov r0, r0)
   1b5e0:	sub	sp, fp, #4
   1b5e4:	pop	{fp, pc}
   1b5e8:	push	{fp}		; (str fp, [sp, #-4]!)
   1b5ec:	add	fp, sp, #0
   1b5f0:	sub	sp, sp, #12
   1b5f4:	str	r0, [fp, #-8]
   1b5f8:	ldr	r3, [fp, #-8]
   1b5fc:	ldr	r3, [r3]
   1b600:	ldr	r2, [pc, #92]	; 1b664 <__assert_fail@plt+0x8f78>
   1b604:	cmp	r3, r2
   1b608:	beq	1b648 <__assert_fail@plt+0x8f5c>
   1b60c:	ldr	r3, [fp, #-8]
   1b610:	ldr	r3, [r3]
   1b614:	ldr	r2, [pc, #76]	; 1b668 <__assert_fail@plt+0x8f7c>
   1b618:	cmp	r3, r2
   1b61c:	beq	1b648 <__assert_fail@plt+0x8f5c>
   1b620:	ldr	r3, [fp, #-8]
   1b624:	ldr	r3, [r3]
   1b628:	ldr	r2, [pc, #60]	; 1b66c <__assert_fail@plt+0x8f80>
   1b62c:	cmp	r3, r2
   1b630:	beq	1b648 <__assert_fail@plt+0x8f5c>
   1b634:	ldr	r3, [fp, #-8]
   1b638:	ldr	r3, [r3]
   1b63c:	ldr	r2, [pc, #44]	; 1b670 <__assert_fail@plt+0x8f84>
   1b640:	cmp	r3, r2
   1b644:	bne	1b654 <__assert_fail@plt+0x8f68>
   1b648:	ldr	r3, [fp, #-8]
   1b64c:	mov	r2, #0
   1b650:	str	r2, [r3, #44]	; 0x2c
   1b654:	nop			; (mov r0, r0)
   1b658:	add	sp, fp, #0
   1b65c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b660:	bx	lr
   1b664:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1b668:	strdeq	pc, [r1], -r8
   1b66c:	andeq	r4, r1, r4, ror #18
   1b670:	andeq	r4, r1, r8, asr #20
   1b674:	push	{fp, lr}
   1b678:	add	fp, sp, #4
   1b67c:	sub	sp, sp, #8
   1b680:	bl	19204 <__assert_fail@plt+0x6b18>
   1b684:	str	r0, [fp, #-8]
   1b688:	ldr	r3, [fp, #-8]
   1b68c:	cmp	r3, #0
   1b690:	beq	1b6a4 <__assert_fail@plt+0x8fb8>
   1b694:	ldr	r1, [pc, #140]	; 1b728 <__assert_fail@plt+0x903c>
   1b698:	ldr	r0, [fp, #-8]
   1b69c:	bl	1b574 <__assert_fail@plt+0x8e88>
   1b6a0:	bl	1b274 <__assert_fail@plt+0x8b88>
   1b6a4:	ldr	r3, [pc, #128]	; 1b72c <__assert_fail@plt+0x9040>
   1b6a8:	ldr	r3, [r3, #36]	; 0x24
   1b6ac:	mov	r0, r3
   1b6b0:	bl	1cbe4 <__assert_fail@plt+0xa4f8>
   1b6b4:	ldr	r3, [fp, #-8]
   1b6b8:	cmp	r3, #0
   1b6bc:	beq	1b6cc <__assert_fail@plt+0x8fe0>
   1b6c0:	ldr	r1, [pc, #104]	; 1b730 <__assert_fail@plt+0x9044>
   1b6c4:	ldr	r0, [fp, #-8]
   1b6c8:	bl	1b574 <__assert_fail@plt+0x8e88>
   1b6cc:	bl	1b45c <__assert_fail@plt+0x8d70>
   1b6d0:	bl	27e9c <__assert_fail@plt+0x157b0>
   1b6d4:	mov	r3, r0
   1b6d8:	cmp	r3, #0
   1b6dc:	beq	1b6e8 <__assert_fail@plt+0x8ffc>
   1b6e0:	bl	27ed0 <__assert_fail@plt+0x157e4>
   1b6e4:	bl	27e5c <__assert_fail@plt+0x15770>
   1b6e8:	ldr	r3, [pc, #68]	; 1b734 <__assert_fail@plt+0x9048>
   1b6ec:	ldr	r3, [r3]
   1b6f0:	mov	r0, r3
   1b6f4:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   1b6f8:	mov	r3, r0
   1b6fc:	cmn	r3, #1
   1b700:	bne	1b71c <__assert_fail@plt+0x9030>
   1b704:	bl	12404 <__errno_location@plt>
   1b708:	mov	r3, r0
   1b70c:	ldr	r3, [r3]
   1b710:	ldr	r1, [pc, #32]	; 1b738 <__assert_fail@plt+0x904c>
   1b714:	mov	r0, r3
   1b718:	bl	1c940 <__assert_fail@plt+0xa254>
   1b71c:	nop			; (mov r0, r0)
   1b720:	sub	sp, fp, #4
   1b724:	pop	{fp, pc}
   1b728:			; <UNDEFINED> instruction: 0x0001b2b4
   1b72c:	andeq	sp, r7, r0, lsr #32
   1b730:	andeq	fp, r1, r8, ror #11
   1b734:	andeq	ip, r7, r4, lsr r7
   1b738:	andeq	r6, r6, ip, lsr #1
   1b73c:	push	{fp, lr}
   1b740:	add	fp, sp, #4
   1b744:	sub	sp, sp, #16
   1b748:	str	r0, [fp, #-8]
   1b74c:	str	r1, [fp, #-12]
   1b750:	str	r2, [fp, #-16]
   1b754:	bl	12404 <__errno_location@plt>
   1b758:	mov	r3, r0
   1b75c:	ldr	r3, [r3]
   1b760:	cmp	r3, #2
   1b764:	beq	1b770 <__assert_fail@plt+0x9084>
   1b768:	cmp	r3, #20
   1b76c:	bne	1b7bc <__assert_fail@plt+0x90d0>
   1b770:	ldr	r3, [pc, #84]	; 1b7cc <__assert_fail@plt+0x90e0>
   1b774:	ldr	r3, [r3, #44]	; 0x2c
   1b778:	and	r3, r3, #2
   1b77c:	cmp	r3, #0
   1b780:	beq	1b79c <__assert_fail@plt+0x90b0>
   1b784:	ldr	r3, [pc, #68]	; 1b7d0 <__assert_fail@plt+0x90e4>
   1b788:	ldr	r3, [r3]
   1b78c:	ldr	r2, [fp, #-8]
   1b790:	ldr	r1, [pc, #60]	; 1b7d4 <__assert_fail@plt+0x90e8>
   1b794:	mov	r0, r3
   1b798:	bl	123f8 <fprintf@plt>
   1b79c:	ldr	r3, [pc, #52]	; 1b7d8 <__assert_fail@plt+0x90ec>
   1b7a0:	ldr	r0, [r3, #16]
   1b7a4:	mov	r3, #256	; 0x100
   1b7a8:	ldr	r2, [fp, #-12]
   1b7ac:	ldr	r1, [fp, #-8]
   1b7b0:	bl	640b4 <__assert_fail@plt+0x519c8>
   1b7b4:	mov	r3, r0
   1b7b8:	b	1b7c0 <__assert_fail@plt+0x90d4>
   1b7bc:	ldr	r3, [fp, #-16]
   1b7c0:	mov	r0, r3
   1b7c4:	sub	sp, fp, #4
   1b7c8:	pop	{fp, pc}
   1b7cc:	andeq	sp, r7, ip, asr #32
   1b7d0:	andeq	ip, r7, r8, lsr #14
   1b7d4:	strheq	r6, [r6], -ip
   1b7d8:	andeq	sp, r7, r0, lsr #32
   1b7dc:	push	{fp, lr}
   1b7e0:	add	fp, sp, #4
   1b7e4:	sub	sp, sp, #16
   1b7e8:	str	r0, [fp, #-16]
   1b7ec:	str	r1, [fp, #-20]	; 0xffffffec
   1b7f0:	ldr	r3, [pc, #180]	; 1b8ac <__assert_fail@plt+0x91c0>
   1b7f4:	ldr	r3, [r3, #16]
   1b7f8:	cmn	r3, #100	; 0x64
   1b7fc:	beq	1b824 <__assert_fail@plt+0x9138>
   1b800:	ldr	r3, [pc, #164]	; 1b8ac <__assert_fail@plt+0x91c0>
   1b804:	ldr	r3, [r3, #16]
   1b808:	cmp	r3, #0
   1b80c:	bge	1b824 <__assert_fail@plt+0x9138>
   1b810:	ldr	r3, [pc, #152]	; 1b8b0 <__assert_fail@plt+0x91c4>
   1b814:	ldr	r2, [pc, #152]	; 1b8b4 <__assert_fail@plt+0x91c8>
   1b818:	ldr	r1, [pc, #152]	; 1b8b8 <__assert_fail@plt+0x91cc>
   1b81c:	ldr	r0, [pc, #152]	; 1b8bc <__assert_fail@plt+0x91d0>
   1b820:	bl	126ec <__assert_fail@plt>
   1b824:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b828:	bl	1ad50 <__assert_fail@plt+0x8664>
   1b82c:	ldr	r3, [pc, #120]	; 1b8ac <__assert_fail@plt+0x91c0>
   1b830:	ldr	r3, [r3]
   1b834:	cmp	r3, #0
   1b838:	bne	1b884 <__assert_fail@plt+0x9198>
   1b83c:	ldr	r3, [pc, #104]	; 1b8ac <__assert_fail@plt+0x91c0>
   1b840:	ldr	r0, [r3, #16]
   1b844:	mov	r3, #0
   1b848:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b84c:	ldr	r1, [fp, #-16]
   1b850:	bl	640b4 <__assert_fail@plt+0x519c8>
   1b854:	str	r0, [fp, #-8]
   1b858:	ldr	r3, [fp, #-8]
   1b85c:	cmp	r3, #0
   1b860:	bne	1b86c <__assert_fail@plt+0x9180>
   1b864:	mov	r3, #0
   1b868:	b	1b8a0 <__assert_fail@plt+0x91b4>
   1b86c:	ldr	r2, [fp, #-8]
   1b870:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b874:	ldr	r0, [fp, #-16]
   1b878:	bl	1b73c <__assert_fail@plt+0x9050>
   1b87c:	mov	r3, r0
   1b880:	b	1b8a0 <__assert_fail@plt+0x91b4>
   1b884:	ldr	r3, [pc, #32]	; 1b8ac <__assert_fail@plt+0x91c0>
   1b888:	ldr	r0, [r3, #16]
   1b88c:	mov	r3, #256	; 0x100
   1b890:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b894:	ldr	r1, [fp, #-16]
   1b898:	bl	640b4 <__assert_fail@plt+0x519c8>
   1b89c:	mov	r3, r0
   1b8a0:	mov	r0, r3
   1b8a4:	sub	sp, fp, #4
   1b8a8:	pop	{fp, pc}
   1b8ac:	andeq	sp, r7, r0, lsr #32
   1b8b0:	andeq	r6, r6, r0, ror #7
   1b8b4:	andeq	r0, r0, sp, asr r2
   1b8b8:	muleq	r6, ip, r8
   1b8bc:	strdeq	r6, [r6], -r8
   1b8c0:	push	{fp, lr}
   1b8c4:	add	fp, sp, #4
   1b8c8:	sub	sp, sp, #16
   1b8cc:	str	r0, [fp, #-16]
   1b8d0:	str	r1, [fp, #-20]	; 0xffffffec
   1b8d4:	ldr	r3, [pc, #132]	; 1b960 <__assert_fail@plt+0x9274>
   1b8d8:	ldr	r3, [r3, #16]
   1b8dc:	cmn	r3, #100	; 0x64
   1b8e0:	beq	1b908 <__assert_fail@plt+0x921c>
   1b8e4:	ldr	r3, [pc, #116]	; 1b960 <__assert_fail@plt+0x9274>
   1b8e8:	ldr	r3, [r3, #16]
   1b8ec:	cmp	r3, #0
   1b8f0:	bge	1b908 <__assert_fail@plt+0x921c>
   1b8f4:	ldr	r3, [pc, #104]	; 1b964 <__assert_fail@plt+0x9278>
   1b8f8:	mov	r2, #636	; 0x27c
   1b8fc:	ldr	r1, [pc, #100]	; 1b968 <__assert_fail@plt+0x927c>
   1b900:	ldr	r0, [pc, #100]	; 1b96c <__assert_fail@plt+0x9280>
   1b904:	bl	126ec <__assert_fail@plt>
   1b908:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b90c:	bl	1ad50 <__assert_fail@plt+0x8664>
   1b910:	ldr	r3, [pc, #72]	; 1b960 <__assert_fail@plt+0x9274>
   1b914:	ldr	r0, [r3, #16]
   1b918:	mov	r3, #0
   1b91c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b920:	ldr	r1, [fp, #-16]
   1b924:	bl	640b4 <__assert_fail@plt+0x519c8>
   1b928:	str	r0, [fp, #-8]
   1b92c:	ldr	r3, [fp, #-8]
   1b930:	cmp	r3, #0
   1b934:	bne	1b940 <__assert_fail@plt+0x9254>
   1b938:	mov	r3, #0
   1b93c:	b	1b954 <__assert_fail@plt+0x9268>
   1b940:	ldr	r2, [fp, #-8]
   1b944:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b948:	ldr	r0, [fp, #-16]
   1b94c:	bl	1b73c <__assert_fail@plt+0x9050>
   1b950:	mov	r3, r0
   1b954:	mov	r0, r3
   1b958:	sub	sp, fp, #4
   1b95c:	pop	{fp, pc}
   1b960:	andeq	sp, r7, r0, lsr #32
   1b964:	strdeq	r6, [r6], -r0
   1b968:	muleq	r6, ip, r8
   1b96c:	strdeq	r6, [r6], -r8
   1b970:	push	{fp, lr}
   1b974:	add	fp, sp, #4
   1b978:	sub	sp, sp, #8
   1b97c:	str	r0, [fp, #-8]
   1b980:	str	r1, [fp, #-12]
   1b984:	ldr	r3, [pc, #92]	; 1b9e8 <__assert_fail@plt+0x92fc>
   1b988:	ldr	r3, [r3, #16]
   1b98c:	cmp	r3, #0
   1b990:	bge	1b9b8 <__assert_fail@plt+0x92cc>
   1b994:	ldr	r3, [pc, #76]	; 1b9e8 <__assert_fail@plt+0x92fc>
   1b998:	ldr	r3, [r3, #16]
   1b99c:	cmn	r3, #100	; 0x64
   1b9a0:	beq	1b9b8 <__assert_fail@plt+0x92cc>
   1b9a4:	ldr	r3, [pc, #64]	; 1b9ec <__assert_fail@plt+0x9300>
   1b9a8:	ldr	r2, [pc, #64]	; 1b9f0 <__assert_fail@plt+0x9304>
   1b9ac:	ldr	r1, [pc, #64]	; 1b9f4 <__assert_fail@plt+0x9308>
   1b9b0:	ldr	r0, [pc, #64]	; 1b9f8 <__assert_fail@plt+0x930c>
   1b9b4:	bl	126ec <__assert_fail@plt>
   1b9b8:	ldr	r0, [fp, #-12]
   1b9bc:	bl	1ad50 <__assert_fail@plt+0x8664>
   1b9c0:	ldr	r3, [pc, #32]	; 1b9e8 <__assert_fail@plt+0x92fc>
   1b9c4:	ldr	r0, [r3, #16]
   1b9c8:	mov	r3, #256	; 0x100
   1b9cc:	ldr	r2, [fp, #-12]
   1b9d0:	ldr	r1, [fp, #-8]
   1b9d4:	bl	640b4 <__assert_fail@plt+0x519c8>
   1b9d8:	mov	r3, r0
   1b9dc:	mov	r0, r3
   1b9e0:	sub	sp, fp, #4
   1b9e4:	pop	{fp, pc}
   1b9e8:	andeq	sp, r7, r0, lsr #32
   1b9ec:	andeq	r6, r6, r0, lsl #8
   1b9f0:	andeq	r0, r0, sp, lsl #5
   1b9f4:	muleq	r6, ip, r8
   1b9f8:	andeq	r6, r6, r0, lsl r1
   1b9fc:	push	{fp, lr}
   1ba00:	add	fp, sp, #4
   1ba04:	sub	sp, sp, #8
   1ba08:	str	r0, [fp, #-8]
   1ba0c:	str	r1, [fp, #-12]
   1ba10:	ldr	r3, [pc, #168]	; 1bac0 <__assert_fail@plt+0x93d4>
   1ba14:	ldrd	r2, [r3]
   1ba18:	adds	r2, r2, #1
   1ba1c:	adc	r3, r3, #0
   1ba20:	ldr	r1, [pc, #152]	; 1bac0 <__assert_fail@plt+0x93d4>
   1ba24:	strd	r2, [r1]
   1ba28:	ldr	r3, [pc, #148]	; 1bac4 <__assert_fail@plt+0x93d8>
   1ba2c:	ldr	r3, [r3]
   1ba30:	ldr	r2, [fp, #-8]
   1ba34:	ldr	r1, [pc, #140]	; 1bac8 <__assert_fail@plt+0x93dc>
   1ba38:	mov	r0, r3
   1ba3c:	bl	123f8 <fprintf@plt>
   1ba40:	ldr	r3, [pc, #132]	; 1bacc <__assert_fail@plt+0x93e0>
   1ba44:	ldr	r3, [r3, #48]	; 0x30
   1ba48:	cmp	r3, #1
   1ba4c:	beq	1ba64 <__assert_fail@plt+0x9378>
   1ba50:	cmp	r3, #1
   1ba54:	bcc	1ba8c <__assert_fail@plt+0x93a0>
   1ba58:	cmp	r3, #2
   1ba5c:	beq	1ba78 <__assert_fail@plt+0x938c>
   1ba60:	b	1baa0 <__assert_fail@plt+0x93b4>
   1ba64:	ldr	r1, [fp, #-12]
   1ba68:	ldr	r0, [fp, #-8]
   1ba6c:	bl	1b8c0 <__assert_fail@plt+0x91d4>
   1ba70:	mov	r3, r0
   1ba74:	b	1bab4 <__assert_fail@plt+0x93c8>
   1ba78:	ldr	r1, [fp, #-12]
   1ba7c:	ldr	r0, [fp, #-8]
   1ba80:	bl	1b7dc <__assert_fail@plt+0x90f0>
   1ba84:	mov	r3, r0
   1ba88:	b	1bab4 <__assert_fail@plt+0x93c8>
   1ba8c:	ldr	r1, [fp, #-12]
   1ba90:	ldr	r0, [fp, #-8]
   1ba94:	bl	1b970 <__assert_fail@plt+0x9284>
   1ba98:	mov	r3, r0
   1ba9c:	b	1bab4 <__assert_fail@plt+0x93c8>
   1baa0:	ldr	r3, [pc, #40]	; 1bad0 <__assert_fail@plt+0x93e4>
   1baa4:	ldr	r2, [pc, #40]	; 1bad4 <__assert_fail@plt+0x93e8>
   1baa8:	ldr	r1, [pc, #40]	; 1bad8 <__assert_fail@plt+0x93ec>
   1baac:	ldr	r0, [pc, #40]	; 1badc <__assert_fail@plt+0x93f0>
   1bab0:	bl	126ec <__assert_fail@plt>
   1bab4:	mov	r0, r3
   1bab8:	sub	sp, fp, #4
   1babc:	pop	{fp, pc}
   1bac0:	andeq	ip, r7, r0, ror r7
   1bac4:	andeq	ip, r7, r8, lsr #14
   1bac8:	andeq	r6, r6, r8, asr #2
   1bacc:	andeq	sp, r7, ip, asr #32
   1bad0:	andeq	r6, r6, r0, lsl r4
   1bad4:	andeq	r0, r0, r5, lsr #5
   1bad8:	muleq	r6, ip, r8
   1badc:	andeq	r6, r6, ip, asr r1
   1bae0:	push	{fp}		; (str fp, [sp, #-4]!)
   1bae4:	add	fp, sp, #0
   1bae8:	ldr	r3, [pc, #76]	; 1bb3c <__assert_fail@plt+0x9450>
   1baec:	ldr	r3, [r3, #48]	; 0x30
   1baf0:	cmp	r3, #1
   1baf4:	beq	1bb04 <__assert_fail@plt+0x9418>
   1baf8:	cmp	r3, #2
   1bafc:	beq	1bb0c <__assert_fail@plt+0x9420>
   1bb00:	b	1bb28 <__assert_fail@plt+0x943c>
   1bb04:	mov	r3, #1
   1bb08:	b	1bb2c <__assert_fail@plt+0x9440>
   1bb0c:	ldr	r3, [pc, #44]	; 1bb40 <__assert_fail@plt+0x9454>
   1bb10:	ldr	r3, [r3]
   1bb14:	cmp	r3, #0
   1bb18:	moveq	r3, #1
   1bb1c:	movne	r3, #0
   1bb20:	uxtb	r3, r3
   1bb24:	b	1bb2c <__assert_fail@plt+0x9440>
   1bb28:	mov	r3, #0
   1bb2c:	mov	r0, r3
   1bb30:	add	sp, fp, #0
   1bb34:	pop	{fp}		; (ldr fp, [sp], #4)
   1bb38:	bx	lr
   1bb3c:	andeq	sp, r7, ip, asr #32
   1bb40:	andeq	sp, r7, r0, lsr #32
   1bb44:	push	{fp, lr}
   1bb48:	add	fp, sp, #4
   1bb4c:	sub	sp, sp, #16
   1bb50:	str	r0, [fp, #-8]
   1bb54:	str	r1, [fp, #-12]
   1bb58:	str	r2, [fp, #-16]
   1bb5c:	str	r3, [fp, #-20]	; 0xffffffec
   1bb60:	ldr	r3, [fp, #-8]
   1bb64:	ldr	r3, [r3]
   1bb68:	cmp	r3, #0
   1bb6c:	beq	1bc18 <__assert_fail@plt+0x952c>
   1bb70:	ldr	r3, [fp, #-8]
   1bb74:	ldr	r3, [r3]
   1bb78:	and	r3, r3, #61440	; 0xf000
   1bb7c:	cmp	r3, #40960	; 0xa000
   1bb80:	bne	1bbe8 <__assert_fail@plt+0x94fc>
   1bb84:	bl	1bae0 <__assert_fail@plt+0x93f4>
   1bb88:	mov	r3, r0
   1bb8c:	cmp	r3, #0
   1bb90:	beq	1bbe8 <__assert_fail@plt+0x94fc>
   1bb94:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bb98:	ldr	r1, [fp, #-16]
   1bb9c:	ldr	r0, [fp, #-12]
   1bba0:	bl	1ad70 <__assert_fail@plt+0x8684>
   1bba4:	mov	r3, r0
   1bba8:	cmp	r3, #0
   1bbac:	beq	1bbb8 <__assert_fail@plt+0x94cc>
   1bbb0:	mov	r3, #0
   1bbb4:	b	1bca0 <__assert_fail@plt+0x95b4>
   1bbb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bbbc:	ldr	r3, [r3, #16]
   1bbc0:	ldr	r2, [pc, #228]	; 1bcac <__assert_fail@plt+0x95c0>
   1bbc4:	str	r3, [r2, #8]
   1bbc8:	ldr	r3, [pc, #220]	; 1bcac <__assert_fail@plt+0x95c0>
   1bbcc:	ldr	r2, [r3, #8]
   1bbd0:	ldr	r3, [fp, #-8]
   1bbd4:	str	r2, [r3]
   1bbd8:	ldr	r3, [pc, #204]	; 1bcac <__assert_fail@plt+0x95c0>
   1bbdc:	mov	r2, #1
   1bbe0:	strb	r2, [r3, #5]
   1bbe4:	b	1bc9c <__assert_fail@plt+0x95b0>
   1bbe8:	ldr	r3, [pc, #188]	; 1bcac <__assert_fail@plt+0x95c0>
   1bbec:	mov	r2, #1
   1bbf0:	strb	r2, [r3, #5]
   1bbf4:	ldr	r3, [fp, #-8]
   1bbf8:	ldr	r3, [r3]
   1bbfc:	ldr	r2, [pc, #168]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc00:	str	r3, [r2, #8]
   1bc04:	ldr	r3, [pc, #160]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc08:	ldr	r2, [r3, #8]
   1bc0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc10:	str	r2, [r3, #16]
   1bc14:	b	1bc9c <__assert_fail@plt+0x95b0>
   1bc18:	ldrb	r3, [fp, #4]
   1bc1c:	cmp	r3, #0
   1bc20:	beq	1bc4c <__assert_fail@plt+0x9560>
   1bc24:	ldr	r3, [pc, #128]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc28:	mov	r2, #0
   1bc2c:	strb	r2, [r3, #4]
   1bc30:	ldr	r3, [pc, #116]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc34:	mov	r2, #0
   1bc38:	strb	r2, [r3, #5]
   1bc3c:	ldr	r3, [pc, #104]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc40:	mov	r2, #0
   1bc44:	str	r2, [r3, #8]
   1bc48:	b	1bc9c <__assert_fail@plt+0x95b0>
   1bc4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bc50:	ldr	r1, [fp, #-16]
   1bc54:	ldr	r0, [fp, #-12]
   1bc58:	bl	1ad70 <__assert_fail@plt+0x8684>
   1bc5c:	mov	r3, r0
   1bc60:	cmp	r3, #0
   1bc64:	beq	1bc70 <__assert_fail@plt+0x9584>
   1bc68:	mov	r3, #0
   1bc6c:	b	1bca0 <__assert_fail@plt+0x95b4>
   1bc70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc74:	ldr	r2, [r3, #16]
   1bc78:	ldr	r3, [fp, #-8]
   1bc7c:	str	r2, [r3]
   1bc80:	ldr	r3, [fp, #-8]
   1bc84:	ldr	r3, [r3]
   1bc88:	ldr	r2, [pc, #28]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc8c:	str	r3, [r2, #8]
   1bc90:	ldr	r3, [pc, #20]	; 1bcac <__assert_fail@plt+0x95c0>
   1bc94:	mov	r2, #1
   1bc98:	strb	r2, [r3, #5]
   1bc9c:	mov	r3, #1
   1bca0:	mov	r0, r3
   1bca4:	sub	sp, fp, #4
   1bca8:	pop	{fp, pc}
   1bcac:	andeq	sp, r7, r0, lsr #32
   1bcb0:	push	{fp}		; (str fp, [sp, #-4]!)
   1bcb4:	add	fp, sp, #0
   1bcb8:	sub	sp, sp, #12
   1bcbc:	str	r0, [fp, #-8]
   1bcc0:	b	1bce8 <__assert_fail@plt+0x95fc>
   1bcc4:	ldr	r3, [fp, #-8]
   1bcc8:	ldrb	r3, [r3, #17]
   1bccc:	cmp	r3, #0
   1bcd0:	beq	1bcdc <__assert_fail@plt+0x95f0>
   1bcd4:	mov	r3, #0
   1bcd8:	b	1bcf8 <__assert_fail@plt+0x960c>
   1bcdc:	ldr	r3, [fp, #-8]
   1bce0:	ldr	r3, [r3, #152]	; 0x98
   1bce4:	str	r3, [fp, #-8]
   1bce8:	ldr	r3, [fp, #-8]
   1bcec:	cmp	r3, #0
   1bcf0:	bne	1bcc4 <__assert_fail@plt+0x95d8>
   1bcf4:	mov	r3, #1
   1bcf8:	mov	r0, r3
   1bcfc:	add	sp, fp, #0
   1bd00:	pop	{fp}		; (ldr fp, [sp], #4)
   1bd04:	bx	lr
   1bd08:	push	{fp}		; (str fp, [sp, #-4]!)
   1bd0c:	add	fp, sp, #0
   1bd10:	sub	sp, sp, #12
   1bd14:	str	r0, [fp, #-8]
   1bd18:	mov	r3, r1
   1bd1c:	strb	r3, [fp, #-9]
   1bd20:	ldr	r3, [fp, #-8]
   1bd24:	ldrb	r3, [r3]
   1bd28:	sub	r3, r3, #33	; 0x21
   1bd2c:	cmp	r3, #12
   1bd30:	ldrls	pc, [pc, r3, lsl #2]
   1bd34:	b	1bdf8 <__assert_fail@plt+0x970c>
   1bd38:	ldrdeq	fp, [r1], -r4
   1bd3c:	strdeq	fp, [r1], -r8
   1bd40:	strdeq	fp, [r1], -r8
   1bd44:	strdeq	fp, [r1], -r8
   1bd48:	strdeq	fp, [r1], -r8
   1bd4c:	strdeq	fp, [r1], -r8
   1bd50:	strdeq	fp, [r1], -r8
   1bd54:	ldrdeq	fp, [r1], -r4
   1bd58:	muleq	r1, r0, sp
   1bd5c:	strdeq	fp, [r1], -r8
   1bd60:	strdeq	fp, [r1], -r8
   1bd64:	muleq	r1, r0, sp
   1bd68:	andeq	fp, r1, ip, ror #26
   1bd6c:	ldr	r3, [fp, #-8]
   1bd70:	add	r3, r3, #1
   1bd74:	ldrb	r3, [r3]
   1bd78:	cmp	r3, #0
   1bd7c:	beq	1bd88 <__assert_fail@plt+0x969c>
   1bd80:	mov	r3, #1
   1bd84:	b	1bdfc <__assert_fail@plt+0x9710>
   1bd88:	mov	r3, #0
   1bd8c:	b	1bdfc <__assert_fail@plt+0x9710>
   1bd90:	ldr	r3, [fp, #-8]
   1bd94:	add	r3, r3, #1
   1bd98:	ldrb	r3, [r3]
   1bd9c:	cmp	r3, #0
   1bda0:	beq	1bdac <__assert_fail@plt+0x96c0>
   1bda4:	mov	r3, #0
   1bda8:	b	1bdfc <__assert_fail@plt+0x9710>
   1bdac:	ldrb	r3, [fp, #-9]
   1bdb0:	cmp	r3, #0
   1bdb4:	movne	r3, #1
   1bdb8:	moveq	r3, #0
   1bdbc:	uxtb	r3, r3
   1bdc0:	eor	r3, r3, #1
   1bdc4:	uxtb	r3, r3
   1bdc8:	and	r3, r3, #1
   1bdcc:	uxtb	r3, r3
   1bdd0:	b	1bdfc <__assert_fail@plt+0x9710>
   1bdd4:	ldr	r3, [fp, #-8]
   1bdd8:	add	r3, r3, #1
   1bddc:	ldrb	r3, [r3]
   1bde0:	cmp	r3, #0
   1bde4:	beq	1bdf0 <__assert_fail@plt+0x9704>
   1bde8:	mov	r3, #0
   1bdec:	b	1bdfc <__assert_fail@plt+0x9710>
   1bdf0:	mov	r3, #1
   1bdf4:	b	1bdfc <__assert_fail@plt+0x9710>
   1bdf8:	mov	r3, #0
   1bdfc:	mov	r0, r3
   1be00:	add	sp, fp, #0
   1be04:	pop	{fp}		; (ldr fp, [sp], #4)
   1be08:	bx	lr
   1be0c:	push	{r4, fp, lr}
   1be10:	add	fp, sp, #8
   1be14:	sub	sp, sp, #36	; 0x24
   1be18:	str	r0, [fp, #-40]	; 0xffffffd8
   1be1c:	mov	r3, #0
   1be20:	str	r3, [fp, #-28]	; 0xffffffe4
   1be24:	mov	r3, #44	; 0x2c
   1be28:	strh	r3, [fp, #-32]	; 0xffffffe0
   1be2c:	mov	r3, #1
   1be30:	strb	r3, [fp, #-17]	; 0xffffffef
   1be34:	sub	r2, fp, #28
   1be38:	sub	r3, fp, #32
   1be3c:	mov	r1, r3
   1be40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be44:	bl	122a8 <strtok_r@plt>
   1be48:	str	r0, [fp, #-16]
   1be4c:	b	1bf4c <__assert_fail@plt+0x9860>
   1be50:	mov	r3, #0
   1be54:	strb	r3, [fp, #-17]	; 0xffffffef
   1be58:	mov	r3, #0
   1be5c:	str	r3, [fp, #-24]	; 0xffffffe8
   1be60:	b	1bee4 <__assert_fail@plt+0x97f8>
   1be64:	ldr	r1, [pc, #332]	; 1bfb8 <__assert_fail@plt+0x98cc>
   1be68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1be6c:	mov	r3, r2
   1be70:	lsl	r3, r3, #1
   1be74:	add	r3, r3, r2
   1be78:	lsl	r3, r3, #2
   1be7c:	add	r3, r1, r3
   1be80:	ldr	r3, [r3]
   1be84:	ldr	r1, [fp, #-16]
   1be88:	mov	r0, r3
   1be8c:	bl	11ffc <strcmp@plt>
   1be90:	mov	r3, r0
   1be94:	cmp	r3, #0
   1be98:	bne	1bed8 <__assert_fail@plt+0x97ec>
   1be9c:	ldr	r3, [pc, #280]	; 1bfbc <__assert_fail@plt+0x98d0>
   1bea0:	ldr	r1, [r3, #44]	; 0x2c
   1bea4:	ldr	r0, [pc, #268]	; 1bfb8 <__assert_fail@plt+0x98cc>
   1bea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1beac:	mov	r3, r2
   1beb0:	lsl	r3, r3, #1
   1beb4:	add	r3, r3, r2
   1beb8:	lsl	r3, r3, #2
   1bebc:	add	r3, r0, r3
   1bec0:	add	r3, r3, #4
   1bec4:	ldr	r3, [r3]
   1bec8:	orr	r3, r1, r3
   1becc:	ldr	r2, [pc, #232]	; 1bfbc <__assert_fail@plt+0x98d0>
   1bed0:	str	r3, [r2, #44]	; 0x2c
   1bed4:	b	1bef0 <__assert_fail@plt+0x9804>
   1bed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bedc:	add	r3, r3, #1
   1bee0:	str	r3, [fp, #-24]	; 0xffffffe8
   1bee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bee8:	cmp	r3, #8
   1beec:	bls	1be64 <__assert_fail@plt+0x9778>
   1bef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bef4:	cmp	r3, #8
   1bef8:	bls	1bf34 <__assert_fail@plt+0x9848>
   1befc:	ldr	r0, [pc, #188]	; 1bfc0 <__assert_fail@plt+0x98d4>
   1bf00:	bl	12398 <gettext@plt>
   1bf04:	mov	r4, r0
   1bf08:	ldr	r3, [pc, #172]	; 1bfbc <__assert_fail@plt+0x98d0>
   1bf0c:	ldr	r3, [r3, #72]	; 0x48
   1bf10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bf14:	mov	r1, r3
   1bf18:	mov	r0, #0
   1bf1c:	bl	3b718 <__assert_fail@plt+0x2902c>
   1bf20:	mov	r3, r0
   1bf24:	mov	r2, r4
   1bf28:	mov	r1, #0
   1bf2c:	mov	r0, #0
   1bf30:	bl	122b4 <error@plt>
   1bf34:	sub	r2, fp, #28
   1bf38:	sub	r3, fp, #32
   1bf3c:	mov	r1, r3
   1bf40:	mov	r0, #0
   1bf44:	bl	122a8 <strtok_r@plt>
   1bf48:	str	r0, [fp, #-16]
   1bf4c:	ldr	r3, [fp, #-16]
   1bf50:	cmp	r3, #0
   1bf54:	bne	1be50 <__assert_fail@plt+0x9764>
   1bf58:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1bf5c:	cmp	r3, #0
   1bf60:	beq	1bf88 <__assert_fail@plt+0x989c>
   1bf64:	ldr	r0, [pc, #88]	; 1bfc4 <__assert_fail@plt+0x98d8>
   1bf68:	bl	12398 <gettext@plt>
   1bf6c:	mov	r3, r0
   1bf70:	mov	r2, r3
   1bf74:	mov	r1, #0
   1bf78:	mov	r0, #0
   1bf7c:	bl	122b4 <error@plt>
   1bf80:	mov	r0, #1
   1bf84:	bl	1ab34 <__assert_fail@plt+0x8448>
   1bf88:	ldr	r3, [pc, #44]	; 1bfbc <__assert_fail@plt+0x98d0>
   1bf8c:	ldr	r3, [r3, #44]	; 0x2c
   1bf90:	and	r3, r3, #16
   1bf94:	cmp	r3, #0
   1bf98:	beq	1bfac <__assert_fail@plt+0x98c0>
   1bf9c:	mov	r0, #1
   1bfa0:	bl	1a9e0 <__assert_fail@plt+0x82f4>
   1bfa4:	mov	r0, #0
   1bfa8:	bl	12380 <exit@plt>
   1bfac:	nop			; (mov r0, r0)
   1bfb0:	sub	sp, fp, #8
   1bfb4:	pop	{r4, fp, pc}
   1bfb8:	andeq	ip, r7, r0, asr r5
   1bfbc:	andeq	sp, r7, ip, asr #32
   1bfc0:	andeq	r6, r6, r0, ror #2
   1bfc4:	andeq	r6, r6, r4, lsl #3
   1bfc8:	push	{r4, fp, lr}
   1bfcc:	add	fp, sp, #8
   1bfd0:	sub	sp, sp, #28
   1bfd4:	str	r0, [fp, #-32]	; 0xffffffe0
   1bfd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfdc:	ldrb	r3, [r3]
   1bfe0:	cmp	r3, #0
   1bfe4:	bne	1c004 <__assert_fail@plt+0x9918>
   1bfe8:	ldr	r0, [pc, #404]	; 1c184 <__assert_fail@plt+0x9a98>
   1bfec:	bl	12398 <gettext@plt>
   1bff0:	mov	r3, r0
   1bff4:	mov	r2, r3
   1bff8:	mov	r1, #0
   1bffc:	mov	r0, #1
   1c000:	bl	122b4 <error@plt>
   1c004:	bl	12368 <__ctype_b_loc@plt>
   1c008:	mov	r3, r0
   1c00c:	ldr	r2, [r3]
   1c010:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c014:	ldrb	r3, [r3]
   1c018:	lsl	r3, r3, #1
   1c01c:	add	r3, r2, r3
   1c020:	ldrh	r3, [r3]
   1c024:	and	r3, r3, #2048	; 0x800
   1c028:	cmp	r3, #0
   1c02c:	bne	1c04c <__assert_fail@plt+0x9960>
   1c030:	ldr	r0, [pc, #336]	; 1c188 <__assert_fail@plt+0x9a9c>
   1c034:	bl	12398 <gettext@plt>
   1c038:	mov	r3, r0
   1c03c:	mov	r2, r3
   1c040:	mov	r1, #0
   1c044:	mov	r0, #1
   1c048:	bl	122b4 <error@plt>
   1c04c:	bl	12404 <__errno_location@plt>
   1c050:	mov	r3, r0
   1c054:	ldr	r3, [r3]
   1c058:	str	r3, [fp, #-16]
   1c05c:	bl	12404 <__errno_location@plt>
   1c060:	mov	r2, r0
   1c064:	mov	r3, #0
   1c068:	str	r3, [r2]
   1c06c:	sub	r3, fp, #24
   1c070:	mov	r2, #10
   1c074:	mov	r1, r3
   1c078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c07c:	bl	123b0 <strtoul@plt>
   1c080:	str	r0, [fp, #-20]	; 0xffffffec
   1c084:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c088:	cmp	r3, #0
   1c08c:	bne	1c0bc <__assert_fail@plt+0x99d0>
   1c090:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c098:	cmp	r2, r3
   1c09c:	bne	1c0bc <__assert_fail@plt+0x99d0>
   1c0a0:	ldr	r0, [pc, #224]	; 1c188 <__assert_fail@plt+0x9a9c>
   1c0a4:	bl	12398 <gettext@plt>
   1c0a8:	mov	r3, r0
   1c0ac:	mov	r2, r3
   1c0b0:	mov	r1, #0
   1c0b4:	mov	r0, #1
   1c0b8:	bl	122b4 <error@plt>
   1c0bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c0c0:	ldrb	r3, [r3]
   1c0c4:	cmp	r3, #0
   1c0c8:	beq	1c0e8 <__assert_fail@plt+0x99fc>
   1c0cc:	ldr	r0, [pc, #184]	; 1c18c <__assert_fail@plt+0x9aa0>
   1c0d0:	bl	12398 <gettext@plt>
   1c0d4:	mov	r2, r0
   1c0d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0dc:	mov	r1, #0
   1c0e0:	mov	r0, #1
   1c0e4:	bl	122b4 <error@plt>
   1c0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0ec:	cmn	r3, #1
   1c0f0:	bne	1c130 <__assert_fail@plt+0x9a44>
   1c0f4:	bl	12404 <__errno_location@plt>
   1c0f8:	mov	r3, r0
   1c0fc:	ldr	r3, [r3]
   1c100:	cmp	r3, #0
   1c104:	beq	1c130 <__assert_fail@plt+0x9a44>
   1c108:	bl	12404 <__errno_location@plt>
   1c10c:	mov	r3, r0
   1c110:	ldr	r4, [r3]
   1c114:	ldr	r0, [pc, #112]	; 1c18c <__assert_fail@plt+0x9aa0>
   1c118:	bl	12398 <gettext@plt>
   1c11c:	mov	r2, r0
   1c120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c124:	mov	r1, r4
   1c128:	mov	r0, #1
   1c12c:	bl	122b4 <error@plt>
   1c130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c134:	cmp	r3, #65536	; 0x10000
   1c138:	bcc	1c158 <__assert_fail@plt+0x9a6c>
   1c13c:	ldr	r0, [pc, #76]	; 1c190 <__assert_fail@plt+0x9aa4>
   1c140:	bl	12398 <gettext@plt>
   1c144:	mov	r2, r0
   1c148:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c14c:	mov	r1, #0
   1c150:	mov	r0, #1
   1c154:	bl	122b4 <error@plt>
   1c158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c15c:	uxth	r3, r3
   1c160:	ldr	r2, [pc, #44]	; 1c194 <__assert_fail@plt+0x9aa8>
   1c164:	strh	r3, [r2, #68]	; 0x44
   1c168:	bl	12404 <__errno_location@plt>
   1c16c:	mov	r2, r0
   1c170:	ldr	r3, [fp, #-16]
   1c174:	str	r3, [r2]
   1c178:	nop			; (mov r0, r0)
   1c17c:	sub	sp, fp, #8
   1c180:	pop	{r4, fp, pc}
   1c184:	andeq	r6, r6, r8, lsr #3
   1c188:	andeq	r6, r6, r8, ror #3
   1c18c:	andeq	r6, r6, r0, lsr #4
   1c190:	andeq	r6, r6, r0, asr #4
   1c194:	andeq	sp, r7, ip, asr #32
   1c198:	push	{fp, lr}
   1c19c:	add	fp, sp, #4
   1c1a0:	sub	sp, sp, #16
   1c1a4:	str	r0, [fp, #-16]
   1c1a8:	str	r1, [fp, #-20]	; 0xffffffec
   1c1ac:	mov	r3, #1
   1c1b0:	str	r3, [fp, #-8]
   1c1b4:	b	1c39c <__assert_fail@plt+0x9cb0>
   1c1b8:	ldr	r3, [fp, #-8]
   1c1bc:	lsl	r3, r3, #2
   1c1c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c1c4:	add	r3, r2, r3
   1c1c8:	ldr	r3, [r3]
   1c1cc:	mov	r1, r3
   1c1d0:	ldr	r0, [pc, #492]	; 1c3c4 <__assert_fail@plt+0x9cd8>
   1c1d4:	bl	11ffc <strcmp@plt>
   1c1d8:	mov	r3, r0
   1c1dc:	cmp	r3, #0
   1c1e0:	bne	1c1f0 <__assert_fail@plt+0x9b04>
   1c1e4:	mov	r0, #2
   1c1e8:	bl	20544 <__assert_fail@plt+0xde58>
   1c1ec:	b	1c390 <__assert_fail@plt+0x9ca4>
   1c1f0:	ldr	r3, [fp, #-8]
   1c1f4:	lsl	r3, r3, #2
   1c1f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c1fc:	add	r3, r2, r3
   1c200:	ldr	r3, [r3]
   1c204:	mov	r1, r3
   1c208:	ldr	r0, [pc, #440]	; 1c3c8 <__assert_fail@plt+0x9cdc>
   1c20c:	bl	11ffc <strcmp@plt>
   1c210:	mov	r3, r0
   1c214:	cmp	r3, #0
   1c218:	bne	1c228 <__assert_fail@plt+0x9b3c>
   1c21c:	mov	r0, #1
   1c220:	bl	20544 <__assert_fail@plt+0xde58>
   1c224:	b	1c390 <__assert_fail@plt+0x9ca4>
   1c228:	ldr	r3, [fp, #-8]
   1c22c:	lsl	r3, r3, #2
   1c230:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c234:	add	r3, r2, r3
   1c238:	ldr	r3, [r3]
   1c23c:	mov	r1, r3
   1c240:	ldr	r0, [pc, #388]	; 1c3cc <__assert_fail@plt+0x9ce0>
   1c244:	bl	11ffc <strcmp@plt>
   1c248:	mov	r3, r0
   1c24c:	cmp	r3, #0
   1c250:	bne	1c260 <__assert_fail@plt+0x9b74>
   1c254:	mov	r0, #0
   1c258:	bl	20544 <__assert_fail@plt+0xde58>
   1c25c:	b	1c390 <__assert_fail@plt+0x9ca4>
   1c260:	ldr	r3, [fp, #-8]
   1c264:	lsl	r3, r3, #2
   1c268:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c26c:	add	r3, r2, r3
   1c270:	ldr	r3, [r3]
   1c274:	mov	r1, r3
   1c278:	ldr	r0, [pc, #336]	; 1c3d0 <__assert_fail@plt+0x9ce4>
   1c27c:	bl	11ffc <strcmp@plt>
   1c280:	mov	r3, r0
   1c284:	cmp	r3, #0
   1c288:	bne	1c29c <__assert_fail@plt+0x9bb0>
   1c28c:	ldr	r3, [fp, #-8]
   1c290:	add	r3, r3, #1
   1c294:	str	r3, [fp, #-12]
   1c298:	b	1c3b4 <__assert_fail@plt+0x9cc8>
   1c29c:	ldr	r3, [fp, #-8]
   1c2a0:	lsl	r3, r3, #2
   1c2a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c2a8:	add	r3, r2, r3
   1c2ac:	ldr	r3, [r3]
   1c2b0:	mov	r1, r3
   1c2b4:	ldr	r0, [pc, #280]	; 1c3d4 <__assert_fail@plt+0x9ce8>
   1c2b8:	bl	11ffc <strcmp@plt>
   1c2bc:	mov	r3, r0
   1c2c0:	cmp	r3, #0
   1c2c4:	bne	1c330 <__assert_fail@plt+0x9c44>
   1c2c8:	ldr	r3, [fp, #-8]
   1c2cc:	add	r2, r3, #1
   1c2d0:	ldr	r3, [fp, #-16]
   1c2d4:	cmp	r2, r3
   1c2d8:	blt	1c300 <__assert_fail@plt+0x9c14>
   1c2dc:	ldr	r0, [pc, #244]	; 1c3d8 <__assert_fail@plt+0x9cec>
   1c2e0:	bl	12398 <gettext@plt>
   1c2e4:	mov	r3, r0
   1c2e8:	mov	r2, r3
   1c2ec:	mov	r1, #0
   1c2f0:	mov	r0, #0
   1c2f4:	bl	122b4 <error@plt>
   1c2f8:	mov	r0, #1
   1c2fc:	bl	1ab34 <__assert_fail@plt+0x8448>
   1c300:	ldr	r3, [fp, #-8]
   1c304:	add	r3, r3, #1
   1c308:	lsl	r3, r3, #2
   1c30c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c310:	add	r3, r2, r3
   1c314:	ldr	r3, [r3]
   1c318:	mov	r0, r3
   1c31c:	bl	1be0c <__assert_fail@plt+0x9720>
   1c320:	ldr	r3, [fp, #-8]
   1c324:	add	r3, r3, #1
   1c328:	str	r3, [fp, #-8]
   1c32c:	b	1c390 <__assert_fail@plt+0x9ca4>
   1c330:	ldr	r3, [fp, #-8]
   1c334:	lsl	r3, r3, #2
   1c338:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c33c:	add	r3, r2, r3
   1c340:	ldr	r3, [r3]
   1c344:	mov	r2, #2
   1c348:	mov	r1, r3
   1c34c:	ldr	r0, [pc, #136]	; 1c3dc <__assert_fail@plt+0x9cf0>
   1c350:	bl	1268c <strncmp@plt>
   1c354:	mov	r3, r0
   1c358:	cmp	r3, #0
   1c35c:	bne	1c384 <__assert_fail@plt+0x9c98>
   1c360:	ldr	r3, [fp, #-8]
   1c364:	lsl	r3, r3, #2
   1c368:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c36c:	add	r3, r2, r3
   1c370:	ldr	r3, [r3]
   1c374:	add	r3, r3, #2
   1c378:	mov	r0, r3
   1c37c:	bl	1bfc8 <__assert_fail@plt+0x98dc>
   1c380:	b	1c390 <__assert_fail@plt+0x9ca4>
   1c384:	ldr	r3, [fp, #-8]
   1c388:	str	r3, [fp, #-12]
   1c38c:	b	1c3b4 <__assert_fail@plt+0x9cc8>
   1c390:	ldr	r3, [fp, #-8]
   1c394:	add	r3, r3, #1
   1c398:	str	r3, [fp, #-8]
   1c39c:	ldr	r3, [fp, #-8]
   1c3a0:	str	r3, [fp, #-12]
   1c3a4:	ldr	r2, [fp, #-12]
   1c3a8:	ldr	r3, [fp, #-16]
   1c3ac:	cmp	r2, r3
   1c3b0:	blt	1c1b8 <__assert_fail@plt+0x9acc>
   1c3b4:	ldr	r3, [fp, #-12]
   1c3b8:	mov	r0, r3
   1c3bc:	sub	sp, fp, #4
   1c3c0:	pop	{fp, pc}
   1c3c4:	andeq	r6, r6, r8, lsr #5
   1c3c8:	andeq	r6, r6, ip, lsr #5
   1c3cc:			; <UNDEFINED> instruction: 0x000662b0
   1c3d0:			; <UNDEFINED> instruction: 0x000662b4
   1c3d4:			; <UNDEFINED> instruction: 0x000662b8
   1c3d8:			; <UNDEFINED> instruction: 0x000662bc
   1c3dc:	andeq	r6, r6, r4, ror #5
   1c3e0:	push	{fp, lr}
   1c3e4:	add	fp, sp, #4
   1c3e8:	sub	sp, sp, #32
   1c3ec:	str	r0, [fp, #-32]	; 0xffffffe0
   1c3f0:	sub	r3, fp, #24
   1c3f4:	mov	r1, #0
   1c3f8:	mov	r0, r3
   1c3fc:	bl	12278 <gettimeofday@plt>
   1c400:	mov	r3, r0
   1c404:	cmp	r3, #0
   1c408:	bne	1c43c <__assert_fail@plt+0x9d50>
   1c40c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c410:	str	r3, [fp, #-16]
   1c414:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c418:	mov	r2, #1000	; 0x3e8
   1c41c:	mul	r3, r2, r3
   1c420:	str	r3, [fp, #-12]
   1c424:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c428:	mov	r2, r3
   1c42c:	sub	r3, fp, #16
   1c430:	ldm	r3, {r0, r1}
   1c434:	stm	r2, {r0, r1}
   1c438:	b	1c48c <__assert_fail@plt+0x9da0>
   1c43c:	mov	r0, #0
   1c440:	bl	1214c <time@plt>
   1c444:	str	r0, [fp, #-8]
   1c448:	ldr	r3, [fp, #-8]
   1c44c:	cmn	r3, #1
   1c450:	bne	1c468 <__assert_fail@plt+0x9d7c>
   1c454:	ldr	r3, [pc, #60]	; 1c498 <__assert_fail@plt+0x9dac>
   1c458:	ldr	r2, [pc, #60]	; 1c49c <__assert_fail@plt+0x9db0>
   1c45c:	ldr	r1, [pc, #60]	; 1c4a0 <__assert_fail@plt+0x9db4>
   1c460:	ldr	r0, [pc, #60]	; 1c4a4 <__assert_fail@plt+0x9db8>
   1c464:	bl	126ec <__assert_fail@plt>
   1c468:	ldr	r3, [fp, #-8]
   1c46c:	str	r3, [fp, #-16]
   1c470:	mov	r3, #0
   1c474:	str	r3, [fp, #-12]
   1c478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c47c:	mov	r2, r3
   1c480:	sub	r3, fp, #16
   1c484:	ldm	r3, {r0, r1}
   1c488:	stm	r2, {r0, r1}
   1c48c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c490:	sub	sp, fp, #4
   1c494:	pop	{fp, pc}
   1c498:	andeq	r6, r6, ip, lsl r4
   1c49c:	ldrdeq	r0, [r0], -r2
   1c4a0:	muleq	r6, ip, r8
   1c4a4:	andeq	r6, r6, r8, ror #5
   1c4a8:	push	{r4, fp, lr}
   1c4ac:	add	fp, sp, #8
   1c4b0:	sub	sp, sp, #20
   1c4b4:	str	r0, [fp, #-16]
   1c4b8:	ldr	r0, [pc, #516]	; 1c6c4 <__assert_fail@plt+0x9fd8>
   1c4bc:	bl	122f0 <getenv@plt>
   1c4c0:	mov	r3, r0
   1c4c4:	cmp	r3, #0
   1c4c8:	beq	1c4dc <__assert_fail@plt+0x9df0>
   1c4cc:	ldr	r3, [fp, #-16]
   1c4d0:	mov	r2, #1
   1c4d4:	strb	r2, [r3, #17]
   1c4d8:	b	1c4e8 <__assert_fail@plt+0x9dfc>
   1c4dc:	ldr	r3, [fp, #-16]
   1c4e0:	mov	r2, #0
   1c4e4:	strb	r2, [r3, #17]
   1c4e8:	bl	1afe4 <__assert_fail@plt+0x88f8>
   1c4ec:	mov	r3, r0
   1c4f0:	mov	r2, r3
   1c4f4:	ldr	r3, [fp, #-16]
   1c4f8:	strb	r2, [r3, #56]	; 0x38
   1c4fc:	ldr	r3, [fp, #-16]
   1c500:	mov	r2, #0
   1c504:	str	r2, [r3, #60]	; 0x3c
   1c508:	mov	r0, #0
   1c50c:	bl	1265c <isatty@plt>
   1c510:	mov	r3, r0
   1c514:	cmp	r3, #0
   1c518:	beq	1c538 <__assert_fail@plt+0x9e4c>
   1c51c:	ldr	r3, [fp, #-16]
   1c520:	mov	r2, #1
   1c524:	strb	r2, [r3, #16]
   1c528:	ldr	r3, [fp, #-16]
   1c52c:	mov	r2, #0
   1c530:	strb	r2, [r3, #15]
   1c534:	b	1c550 <__assert_fail@plt+0x9e64>
   1c538:	ldr	r3, [fp, #-16]
   1c53c:	mov	r2, #0
   1c540:	strb	r2, [r3, #16]
   1c544:	ldr	r3, [fp, #-16]
   1c548:	mov	r2, #0
   1c54c:	strb	r2, [r3, #15]
   1c550:	ldr	r3, [fp, #-16]
   1c554:	ldrb	r3, [r3, #17]
   1c558:	cmp	r3, #0
   1c55c:	beq	1c56c <__assert_fail@plt+0x9e80>
   1c560:	ldr	r3, [fp, #-16]
   1c564:	mov	r2, #0
   1c568:	strb	r2, [r3, #16]
   1c56c:	ldr	r3, [fp, #-16]
   1c570:	mov	r2, #1
   1c574:	strb	r2, [r3]
   1c578:	ldr	r3, [fp, #-16]
   1c57c:	mov	r2, #0
   1c580:	strb	r2, [r3, #1]
   1c584:	ldr	r3, [fp, #-16]
   1c588:	mvn	r2, #0
   1c58c:	str	r2, [r3, #8]
   1c590:	ldr	r3, [fp, #-16]
   1c594:	ldr	r2, [r3, #8]
   1c598:	ldr	r3, [fp, #-16]
   1c59c:	str	r2, [r3, #4]
   1c5a0:	ldr	r4, [fp, #-16]
   1c5a4:	sub	r3, fp, #28
   1c5a8:	mov	r0, r3
   1c5ac:	bl	1c3e0 <__assert_fail@plt+0x9cf4>
   1c5b0:	add	r3, r4, #20
   1c5b4:	sub	r2, fp, #28
   1c5b8:	ldm	r2, {r0, r1}
   1c5bc:	stm	r3, {r0, r1}
   1c5c0:	ldr	r3, [fp, #-16]
   1c5c4:	ldr	r3, [r3, #20]
   1c5c8:	sub	r3, r3, #86016	; 0x15000
   1c5cc:	sub	r3, r3, #384	; 0x180
   1c5d0:	ldr	r2, [fp, #-16]
   1c5d4:	str	r3, [r2, #28]
   1c5d8:	ldr	r3, [fp, #-16]
   1c5dc:	ldr	r2, [r3, #24]
   1c5e0:	ldr	r3, [fp, #-16]
   1c5e4:	str	r2, [r3, #32]
   1c5e8:	ldr	r3, [fp, #-16]
   1c5ec:	mov	r2, #0
   1c5f0:	strb	r2, [r3, #36]	; 0x24
   1c5f4:	ldr	r3, [fp, #-16]
   1c5f8:	mov	r2, #0
   1c5fc:	strb	r2, [r3, #13]
   1c600:	ldr	r3, [fp, #-16]
   1c604:	mov	r2, #0
   1c608:	strb	r2, [r3, #14]
   1c60c:	ldr	r3, [fp, #-16]
   1c610:	ldrb	r3, [r3, #17]
   1c614:	cmp	r3, #0
   1c618:	beq	1c62c <__assert_fail@plt+0x9f40>
   1c61c:	ldr	r3, [fp, #-16]
   1c620:	mov	r2, #512	; 0x200
   1c624:	str	r2, [r3, #40]	; 0x28
   1c628:	b	1c638 <__assert_fail@plt+0x9f4c>
   1c62c:	ldr	r3, [fp, #-16]
   1c630:	mov	r2, #1024	; 0x400
   1c634:	str	r2, [r3, #40]	; 0x28
   1c638:	ldr	r3, [fp, #-16]
   1c63c:	mov	r2, #0
   1c640:	str	r2, [r3, #44]	; 0x2c
   1c644:	ldr	r3, [fp, #-16]
   1c648:	mov	r2, #2
   1c64c:	strh	r2, [r3, #68]	; 0x44
   1c650:	ldr	r0, [pc, #112]	; 1c6c8 <__assert_fail@plt+0x9fdc>
   1c654:	bl	122f0 <getenv@plt>
   1c658:	mov	r3, r0
   1c65c:	cmp	r3, #0
   1c660:	beq	1c680 <__assert_fail@plt+0x9f94>
   1c664:	ldr	r0, [pc, #96]	; 1c6cc <__assert_fail@plt+0x9fe0>
   1c668:	bl	12398 <gettext@plt>
   1c66c:	mov	r3, r0
   1c670:	mov	r2, r3
   1c674:	mov	r1, #0
   1c678:	mov	r0, #1
   1c67c:	bl	122b4 <error@plt>
   1c680:	ldr	r3, [fp, #-16]
   1c684:	mov	r2, #0
   1c688:	strb	r2, [r3, #12]
   1c68c:	mov	r0, #0
   1c690:	bl	20544 <__assert_fail@plt+0xde58>
   1c694:	ldr	r3, [fp, #-16]
   1c698:	mov	r2, #8
   1c69c:	str	r2, [r3, #72]	; 0x48
   1c6a0:	ldr	r3, [fp, #-16]
   1c6a4:	mov	r2, #0
   1c6a8:	str	r2, [r3, #76]	; 0x4c
   1c6ac:	ldr	r3, [fp, #-16]
   1c6b0:	mov	r2, #0
   1c6b4:	strb	r2, [r3, #80]	; 0x50
   1c6b8:	nop			; (mov r0, r0)
   1c6bc:	sub	sp, fp, #8
   1c6c0:	pop	{r4, fp, pc}
   1c6c4:	strdeq	r6, [r6], -r8
   1c6c8:	andeq	r6, r6, r8, lsl #6
   1c6cc:	andeq	r6, r6, r8, lsl r3
   1c6d0:	push	{fp, lr}
   1c6d4:	add	fp, sp, #4
   1c6d8:	sub	sp, sp, #16
   1c6dc:	str	r0, [fp, #-8]
   1c6e0:	str	r1, [fp, #-12]
   1c6e4:	str	r2, [fp, #-16]
   1c6e8:	ldr	r3, [fp, #-16]
   1c6ec:	ldr	r3, [r3, #164]	; 0xa4
   1c6f0:	add	r2, r3, #1
   1c6f4:	ldr	r3, [fp, #-16]
   1c6f8:	str	r2, [r3, #164]	; 0xa4
   1c6fc:	ldr	r3, [fp, #-16]
   1c700:	ldrb	r3, [r3, #18]
   1c704:	cmp	r3, #0
   1c708:	bne	1c72c <__assert_fail@plt+0xa040>
   1c70c:	ldr	r3, [fp, #-16]
   1c710:	ldrb	r3, [r3, #19]
   1c714:	cmp	r3, #0
   1c718:	bne	1c72c <__assert_fail@plt+0xa040>
   1c71c:	ldr	r3, [fp, #-16]
   1c720:	ldrb	r3, [r3, #20]
   1c724:	cmp	r3, #0
   1c728:	beq	1c750 <__assert_fail@plt+0xa064>
   1c72c:	ldr	r2, [fp, #-16]
   1c730:	ldr	r1, [fp, #-12]
   1c734:	ldr	r0, [fp, #-8]
   1c738:	bl	1aeb0 <__assert_fail@plt+0x87c4>
   1c73c:	mov	r3, r0
   1c740:	cmp	r3, #0
   1c744:	beq	1c750 <__assert_fail@plt+0xa064>
   1c748:	mov	r3, #0
   1c74c:	b	1c794 <__assert_fail@plt+0xa0a8>
   1c750:	ldr	r3, [fp, #-16]
   1c754:	ldr	r3, [r3]
   1c758:	ldr	r2, [fp, #-16]
   1c75c:	ldr	r1, [fp, #-12]
   1c760:	ldr	r0, [fp, #-8]
   1c764:	blx	r3
   1c768:	mov	r3, r0
   1c76c:	cmp	r3, #0
   1c770:	beq	1c790 <__assert_fail@plt+0xa0a4>
   1c774:	ldr	r3, [fp, #-16]
   1c778:	ldr	r3, [r3, #168]	; 0xa8
   1c77c:	add	r2, r3, #1
   1c780:	ldr	r3, [fp, #-16]
   1c784:	str	r2, [r3, #168]	; 0xa8
   1c788:	mov	r3, #1
   1c78c:	b	1c794 <__assert_fail@plt+0xa0a8>
   1c790:	mov	r3, #0
   1c794:	mov	r0, r3
   1c798:	sub	sp, fp, #4
   1c79c:	pop	{fp, pc}
   1c7a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c7a4:	add	fp, sp, #0
   1c7a8:	sub	sp, sp, #12
   1c7ac:	str	r0, [fp, #-8]
   1c7b0:	ldr	r3, [fp, #-8]
   1c7b4:	ldr	r2, [pc, #56]	; 1c7f4 <__assert_fail@plt+0xa108>
   1c7b8:	cmp	r3, r2
   1c7bc:	beq	1c7d0 <__assert_fail@plt+0xa0e4>
   1c7c0:	ldr	r3, [fp, #-8]
   1c7c4:	ldr	r2, [pc, #44]	; 1c7f8 <__assert_fail@plt+0xa10c>
   1c7c8:	cmp	r3, r2
   1c7cc:	bne	1c7d8 <__assert_fail@plt+0xa0ec>
   1c7d0:	mov	r3, #1
   1c7d4:	b	1c7dc <__assert_fail@plt+0xa0f0>
   1c7d8:	mov	r3, #0
   1c7dc:	and	r3, r3, #1
   1c7e0:	uxtb	r3, r3
   1c7e4:	mov	r0, r3
   1c7e8:	add	sp, fp, #0
   1c7ec:	pop	{fp}		; (ldr fp, [sp], #4)
   1c7f0:	bx	lr
   1c7f4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1c7f8:	ldrdeq	r5, [r1], -ip
   1c7fc:	push	{fp, lr}
   1c800:	add	fp, sp, #4
   1c804:	sub	sp, sp, #8
   1c808:	str	r0, [fp, #-8]
   1c80c:	str	r1, [fp, #-12]
   1c810:	ldr	r3, [pc, #32]	; 1c838 <__assert_fail@plt+0xa14c>
   1c814:	ldr	r3, [r3, #72]	; 0x48
   1c818:	ldr	r2, [fp, #-12]
   1c81c:	mov	r1, r3
   1c820:	ldr	r0, [fp, #-8]
   1c824:	bl	3b718 <__assert_fail@plt+0x2902c>
   1c828:	mov	r3, r0
   1c82c:	mov	r0, r3
   1c830:	sub	sp, fp, #4
   1c834:	pop	{fp, pc}
   1c838:	andeq	sp, r7, ip, asr #32
   1c83c:	push	{fp, lr}
   1c840:	add	fp, sp, #4
   1c844:	sub	sp, sp, #16
   1c848:	str	r0, [fp, #-8]
   1c84c:	str	r1, [fp, #-12]
   1c850:	str	r3, [fp, #-20]	; 0xffffffec
   1c854:	mov	r3, r2
   1c858:	strb	r3, [fp, #-13]
   1c85c:	ldrb	r3, [fp, #-13]
   1c860:	eor	r3, r3, #1
   1c864:	uxtb	r3, r3
   1c868:	cmp	r3, #0
   1c86c:	bne	1c888 <__assert_fail@plt+0xa19c>
   1c870:	ldr	r3, [pc, #96]	; 1c8d8 <__assert_fail@plt+0xa1ec>
   1c874:	ldrb	r3, [r3, #40]	; 0x28
   1c878:	eor	r3, r3, #1
   1c87c:	uxtb	r3, r3
   1c880:	cmp	r3, #0
   1c884:	beq	1c8b4 <__assert_fail@plt+0xa1c8>
   1c888:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c88c:	mov	r0, #0
   1c890:	bl	1c7fc <__assert_fail@plt+0xa110>
   1c894:	mov	r3, r0
   1c898:	ldr	r2, [pc, #60]	; 1c8dc <__assert_fail@plt+0xa1f0>
   1c89c:	ldr	r1, [fp, #-12]
   1c8a0:	ldr	r0, [fp, #-8]
   1c8a4:	bl	122b4 <error@plt>
   1c8a8:	ldr	r3, [pc, #40]	; 1c8d8 <__assert_fail@plt+0xa1ec>
   1c8ac:	mov	r2, #1
   1c8b0:	str	r2, [r3, #28]
   1c8b4:	ldrb	r3, [fp, #-13]
   1c8b8:	cmp	r3, #0
   1c8bc:	beq	1c8cc <__assert_fail@plt+0xa1e0>
   1c8c0:	ldr	r3, [pc, #16]	; 1c8d8 <__assert_fail@plt+0xa1ec>
   1c8c4:	mov	r2, #1
   1c8c8:	strb	r2, [r3, #40]	; 0x28
   1c8cc:	nop			; (mov r0, r0)
   1c8d0:	sub	sp, fp, #4
   1c8d4:	pop	{fp, pc}
   1c8d8:	andeq	sp, r7, r0, lsr #32
   1c8dc:	andeq	r6, r6, ip, lsr #7
   1c8e0:	push	{fp, lr}
   1c8e4:	add	fp, sp, #4
   1c8e8:	sub	sp, sp, #8
   1c8ec:	str	r0, [fp, #-8]
   1c8f0:	str	r1, [fp, #-12]
   1c8f4:	ldr	r3, [fp, #-12]
   1c8f8:	mov	r2, #1
   1c8fc:	ldr	r1, [fp, #-8]
   1c900:	mov	r0, #0
   1c904:	bl	1c83c <__assert_fail@plt+0xa150>
   1c908:	nop			; (mov r0, r0)
   1c90c:	sub	sp, fp, #4
   1c910:	pop	{fp, pc}
   1c914:	push	{fp, lr}
   1c918:	add	fp, sp, #4
   1c91c:	sub	sp, sp, #8
   1c920:	str	r0, [fp, #-8]
   1c924:	str	r1, [fp, #-12]
   1c928:	ldr	r3, [fp, #-12]
   1c92c:	mov	r2, #1
   1c930:	ldr	r1, [fp, #-8]
   1c934:	mov	r0, #1
   1c938:	bl	1c83c <__assert_fail@plt+0xa150>
   1c93c:	bl	12698 <abort@plt>
   1c940:	push	{fp, lr}
   1c944:	add	fp, sp, #4
   1c948:	sub	sp, sp, #8
   1c94c:	str	r0, [fp, #-8]
   1c950:	str	r1, [fp, #-12]
   1c954:	ldr	r3, [fp, #-12]
   1c958:	mov	r2, #0
   1c95c:	ldr	r1, [fp, #-8]
   1c960:	mov	r0, #0
   1c964:	bl	1c83c <__assert_fail@plt+0xa150>
   1c968:	nop			; (mov r0, r0)
   1c96c:	sub	sp, fp, #4
   1c970:	pop	{fp, pc}
   1c974:	push	{fp, lr}
   1c978:	add	fp, sp, #4
   1c97c:	sub	sp, sp, #8
   1c980:	str	r0, [fp, #-8]
   1c984:	str	r1, [fp, #-12]
   1c988:	ldr	r3, [pc, #28]	; 1c9ac <__assert_fail@plt+0xa2c0>
   1c98c:	mov	r2, #0
   1c990:	strb	r2, [r3, #40]	; 0x28
   1c994:	ldr	r3, [fp, #-12]
   1c998:	mov	r2, #0
   1c99c:	ldr	r1, [fp, #-8]
   1c9a0:	mov	r0, #1
   1c9a4:	bl	1c83c <__assert_fail@plt+0xa150>
   1c9a8:	bl	12698 <abort@plt>
   1c9ac:	andeq	sp, r7, r0, lsr #32
   1c9b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c9b4:	add	fp, sp, #0
   1c9b8:	sub	sp, sp, #20
   1c9bc:	str	r0, [fp, #-16]
   1c9c0:	str	r1, [fp, #-20]	; 0xffffffec
   1c9c4:	ldr	r3, [fp, #-16]
   1c9c8:	str	r3, [fp, #-8]
   1c9cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c9d0:	str	r3, [fp, #-12]
   1c9d4:	ldr	r3, [fp, #-8]
   1c9d8:	ldrd	r0, [r3, #8]
   1c9dc:	ldr	r3, [fp, #-12]
   1c9e0:	ldrd	r2, [r3, #8]
   1c9e4:	cmp	r1, r3
   1c9e8:	cmpeq	r0, r2
   1c9ec:	bne	1ca14 <__assert_fail@plt+0xa328>
   1c9f0:	ldr	r3, [fp, #-8]
   1c9f4:	ldrd	r0, [r3]
   1c9f8:	ldr	r3, [fp, #-12]
   1c9fc:	ldrd	r2, [r3]
   1ca00:	cmp	r1, r3
   1ca04:	cmpeq	r0, r2
   1ca08:	bne	1ca14 <__assert_fail@plt+0xa328>
   1ca0c:	mov	r3, #1
   1ca10:	b	1ca18 <__assert_fail@plt+0xa32c>
   1ca14:	mov	r3, #0
   1ca18:	and	r3, r3, #1
   1ca1c:	uxtb	r3, r3
   1ca20:	mov	r0, r3
   1ca24:	add	sp, fp, #0
   1ca28:	pop	{fp}		; (ldr fp, [sp], #4)
   1ca2c:	bx	lr
   1ca30:	push	{fp, lr}
   1ca34:	add	fp, sp, #4
   1ca38:	sub	sp, sp, #16
   1ca3c:	str	r0, [fp, #-16]
   1ca40:	ldr	r3, [fp, #-16]
   1ca44:	str	r3, [fp, #-8]
   1ca48:	ldr	r3, [fp, #-8]
   1ca4c:	ldr	r3, [r3, #20]
   1ca50:	cmp	r3, #0
   1ca54:	beq	1ca94 <__assert_fail@plt+0xa3a8>
   1ca58:	ldr	r3, [fp, #-8]
   1ca5c:	ldr	r3, [r3, #20]
   1ca60:	mov	r0, r3
   1ca64:	bl	124d0 <fclose@plt>
   1ca68:	mov	r3, r0
   1ca6c:	cmp	r3, #0
   1ca70:	beq	1ca94 <__assert_fail@plt+0xa3a8>
   1ca74:	bl	12404 <__errno_location@plt>
   1ca78:	mov	r3, r0
   1ca7c:	ldr	r2, [r3]
   1ca80:	ldr	r3, [fp, #-8]
   1ca84:	ldr	r3, [r3, #16]
   1ca88:	mov	r1, r3
   1ca8c:	mov	r0, r2
   1ca90:	bl	1c974 <__assert_fail@plt+0xa288>
   1ca94:	ldr	r3, [fp, #-8]
   1ca98:	ldr	r3, [r3, #16]
   1ca9c:	mov	r0, r3
   1caa0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1caa4:	ldr	r0, [fp, #-8]
   1caa8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1caac:	nop			; (mov r0, r0)
   1cab0:	sub	sp, fp, #4
   1cab4:	pop	{fp, pc}
   1cab8:	push	{fp, lr}
   1cabc:	add	fp, sp, #4
   1cac0:	sub	sp, sp, #16
   1cac4:	str	r0, [fp, #-16]
   1cac8:	str	r1, [fp, #-20]	; 0xffffffec
   1cacc:	ldr	r3, [fp, #-16]
   1cad0:	str	r3, [fp, #-8]
   1cad4:	ldr	r3, [fp, #-8]
   1cad8:	ldrd	r0, [r3]
   1cadc:	ldr	r3, [fp, #-8]
   1cae0:	ldrd	r2, [r3, #8]
   1cae4:	eor	r0, r0, r2
   1cae8:	eor	r1, r1, r3
   1caec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1caf0:	mov	r2, r3
   1caf4:	mov	r3, #0
   1caf8:	bl	63e4c <__assert_fail@plt+0x51760>
   1cafc:	mov	r3, r2
   1cb00:	mov	r0, r3
   1cb04:	sub	sp, fp, #4
   1cb08:	pop	{fp, pc}
   1cb0c:	push	{fp, lr}
   1cb10:	add	fp, sp, #4
   1cb14:	sub	sp, sp, #24
   1cb18:	str	r0, [fp, #-16]
   1cb1c:	mov	r0, #8
   1cb20:	bl	42ba8 <__assert_fail@plt+0x304bc>
   1cb24:	mov	r3, r0
   1cb28:	str	r3, [fp, #-8]
   1cb2c:	ldr	r3, [fp, #-8]
   1cb30:	cmp	r3, #0
   1cb34:	beq	1cbc8 <__assert_fail@plt+0xa4dc>
   1cb38:	ldr	r0, [fp, #-16]
   1cb3c:	bl	1217c <strdup@plt>
   1cb40:	mov	r3, r0
   1cb44:	mov	r2, r3
   1cb48:	ldr	r3, [fp, #-8]
   1cb4c:	str	r2, [r3]
   1cb50:	ldr	r3, [fp, #-8]
   1cb54:	ldr	r3, [r3]
   1cb58:	cmp	r3, #0
   1cb5c:	beq	1cbc0 <__assert_fail@plt+0xa4d4>
   1cb60:	ldr	r3, [pc, #112]	; 1cbd8 <__assert_fail@plt+0xa4ec>
   1cb64:	str	r3, [sp]
   1cb68:	ldr	r3, [pc, #108]	; 1cbdc <__assert_fail@plt+0xa4f0>
   1cb6c:	ldr	r2, [pc, #108]	; 1cbe0 <__assert_fail@plt+0xa4f4>
   1cb70:	mov	r1, #0
   1cb74:	mov	r0, #11
   1cb78:	bl	2b718 <__assert_fail@plt+0x1902c>
   1cb7c:	mov	r3, r0
   1cb80:	mov	r2, r3
   1cb84:	ldr	r3, [fp, #-8]
   1cb88:	str	r2, [r3, #4]
   1cb8c:	ldr	r3, [fp, #-8]
   1cb90:	ldr	r3, [r3, #4]
   1cb94:	cmp	r3, #0
   1cb98:	beq	1cba4 <__assert_fail@plt+0xa4b8>
   1cb9c:	ldr	r3, [fp, #-8]
   1cba0:	b	1cbcc <__assert_fail@plt+0xa4e0>
   1cba4:	ldr	r3, [fp, #-8]
   1cba8:	ldr	r3, [r3]
   1cbac:	mov	r0, r3
   1cbb0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1cbb4:	ldr	r0, [fp, #-8]
   1cbb8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1cbbc:	b	1cbc8 <__assert_fail@plt+0xa4dc>
   1cbc0:	ldr	r0, [fp, #-8]
   1cbc4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1cbc8:	mov	r3, #0
   1cbcc:	mov	r0, r3
   1cbd0:	sub	sp, fp, #4
   1cbd4:	pop	{fp, pc}
   1cbd8:	andeq	ip, r1, r0, lsr sl
   1cbdc:			; <UNDEFINED> instruction: 0x0001c9b0
   1cbe0:			; <UNDEFINED> instruction: 0x0001cab8
   1cbe4:	push	{fp, lr}
   1cbe8:	add	fp, sp, #4
   1cbec:	sub	sp, sp, #16
   1cbf0:	str	r0, [fp, #-16]
   1cbf4:	ldr	r3, [fp, #-16]
   1cbf8:	str	r3, [fp, #-8]
   1cbfc:	ldr	r3, [fp, #-8]
   1cc00:	ldr	r3, [r3]
   1cc04:	mov	r0, r3
   1cc08:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1cc0c:	ldr	r3, [fp, #-8]
   1cc10:	ldr	r3, [r3, #4]
   1cc14:	mov	r0, r3
   1cc18:	bl	2b9f4 <__assert_fail@plt+0x19308>
   1cc1c:	nop			; (mov r0, r0)
   1cc20:	sub	sp, fp, #4
   1cc24:	pop	{fp, pc}
   1cc28:	push	{fp, lr}
   1cc2c:	add	fp, sp, #4
   1cc30:	sub	sp, sp, #136	; 0x88
   1cc34:	str	r0, [fp, #-136]	; 0xffffff78
   1cc38:	str	r1, [fp, #-140]	; 0xffffff74
   1cc3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1cc40:	str	r3, [fp, #-8]
   1cc44:	mov	r0, #24
   1cc48:	bl	42ba8 <__assert_fail@plt+0x304bc>
   1cc4c:	mov	r3, r0
   1cc50:	str	r3, [fp, #-12]
   1cc54:	ldr	r3, [fp, #-12]
   1cc58:	cmp	r3, #0
   1cc5c:	bne	1cc68 <__assert_fail@plt+0xa57c>
   1cc60:	mov	r3, #0
   1cc64:	b	1cdf4 <__assert_fail@plt+0xa708>
   1cc68:	ldr	r0, [fp, #-140]	; 0xffffff74
   1cc6c:	bl	1217c <strdup@plt>
   1cc70:	mov	r3, r0
   1cc74:	mov	r2, r3
   1cc78:	ldr	r3, [fp, #-12]
   1cc7c:	str	r2, [r3, #16]
   1cc80:	ldr	r3, [fp, #-12]
   1cc84:	ldr	r3, [r3, #16]
   1cc88:	cmp	r3, #0
   1cc8c:	bne	1cca0 <__assert_fail@plt+0xa5b4>
   1cc90:	ldr	r0, [fp, #-12]
   1cc94:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1cc98:	mov	r3, #0
   1cc9c:	b	1cdf4 <__assert_fail@plt+0xa708>
   1cca0:	ldr	r3, [fp, #-8]
   1cca4:	ldr	r3, [r3]
   1cca8:	mov	r1, r3
   1ccac:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ccb0:	bl	2aa64 <__assert_fail@plt+0x18378>
   1ccb4:	mov	r2, r0
   1ccb8:	ldr	r3, [fp, #-12]
   1ccbc:	str	r2, [r3, #20]
   1ccc0:	ldr	r3, [fp, #-12]
   1ccc4:	ldr	r3, [r3, #20]
   1ccc8:	cmp	r3, #0
   1cccc:	bne	1cce0 <__assert_fail@plt+0xa5f4>
   1ccd0:	ldr	r0, [fp, #-12]
   1ccd4:	bl	1ca30 <__assert_fail@plt+0xa344>
   1ccd8:	mov	r3, #0
   1ccdc:	b	1cdf4 <__assert_fail@plt+0xa708>
   1cce0:	ldr	r3, [fp, #-12]
   1cce4:	ldr	r3, [r3, #20]
   1cce8:	mov	r0, r3
   1ccec:	bl	12488 <fileno@plt>
   1ccf0:	str	r0, [fp, #-16]
   1ccf4:	ldr	r3, [fp, #-16]
   1ccf8:	cmp	r3, #0
   1ccfc:	bge	1cd14 <__assert_fail@plt+0xa628>
   1cd00:	ldr	r3, [pc, #248]	; 1ce00 <__assert_fail@plt+0xa714>
   1cd04:	mov	r2, #166	; 0xa6
   1cd08:	ldr	r1, [pc, #244]	; 1ce04 <__assert_fail@plt+0xa718>
   1cd0c:	ldr	r0, [pc, #244]	; 1ce08 <__assert_fail@plt+0xa71c>
   1cd10:	bl	126ec <__assert_fail@plt>
   1cd14:	mov	r1, #1
   1cd18:	ldr	r0, [fp, #-16]
   1cd1c:	bl	2a010 <__assert_fail@plt+0x17924>
   1cd20:	sub	r3, fp, #132	; 0x84
   1cd24:	mov	r1, r3
   1cd28:	ldr	r0, [fp, #-16]
   1cd2c:	bl	64094 <__assert_fail@plt+0x519a8>
   1cd30:	mov	r3, r0
   1cd34:	cmp	r3, #0
   1cd38:	bge	1cd4c <__assert_fail@plt+0xa660>
   1cd3c:	ldr	r0, [fp, #-12]
   1cd40:	bl	1ca30 <__assert_fail@plt+0xa344>
   1cd44:	mov	r3, #0
   1cd48:	b	1cdf4 <__assert_fail@plt+0xa708>
   1cd4c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1cd50:	ldr	r1, [fp, #-12]
   1cd54:	strd	r2, [r1]
   1cd58:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cd5c:	ldr	r1, [fp, #-12]
   1cd60:	strd	r2, [r1, #8]
   1cd64:	ldr	r3, [fp, #-8]
   1cd68:	ldr	r3, [r3, #4]
   1cd6c:	ldr	r1, [fp, #-12]
   1cd70:	mov	r0, r3
   1cd74:	bl	2aecc <__assert_fail@plt+0x187e0>
   1cd78:	str	r0, [fp, #-20]	; 0xffffffec
   1cd7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd80:	cmp	r3, #0
   1cd84:	beq	1cd9c <__assert_fail@plt+0xa6b0>
   1cd88:	ldr	r0, [fp, #-12]
   1cd8c:	bl	1ca30 <__assert_fail@plt+0xa344>
   1cd90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd94:	ldr	r3, [r3, #20]
   1cd98:	b	1cdf4 <__assert_fail@plt+0xa708>
   1cd9c:	ldr	r3, [fp, #-8]
   1cda0:	ldr	r3, [r3, #4]
   1cda4:	ldr	r1, [fp, #-12]
   1cda8:	mov	r0, r3
   1cdac:	bl	2c460 <__assert_fail@plt+0x19d74>
   1cdb0:	mov	r3, r0
   1cdb4:	cmp	r3, #0
   1cdb8:	beq	1cdc8 <__assert_fail@plt+0xa6dc>
   1cdbc:	ldr	r3, [fp, #-12]
   1cdc0:	ldr	r3, [r3, #20]
   1cdc4:	b	1cdf4 <__assert_fail@plt+0xa708>
   1cdc8:	bl	12404 <__errno_location@plt>
   1cdcc:	mov	r3, r0
   1cdd0:	ldr	r3, [r3]
   1cdd4:	str	r3, [fp, #-24]	; 0xffffffe8
   1cdd8:	ldr	r0, [fp, #-12]
   1cddc:	bl	1ca30 <__assert_fail@plt+0xa344>
   1cde0:	bl	12404 <__errno_location@plt>
   1cde4:	mov	r2, r0
   1cde8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdec:	str	r3, [r2]
   1cdf0:	mov	r3, #0
   1cdf4:	mov	r0, r3
   1cdf8:	sub	sp, fp, #4
   1cdfc:	pop	{fp, pc}
   1ce00:	andeq	r6, r6, r4, lsr r4
   1ce04:	andeq	r6, r6, r0, lsr #8
   1ce08:	andeq	r6, r6, ip, lsr #8
   1ce0c:	andeq	r0, r0, r0
   1ce10:	push	{r4, fp, lr}
   1ce14:	add	fp, sp, #8
   1ce18:	sub	sp, sp, #28
   1ce1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce20:	str	r1, [fp, #-28]	; 0xffffffe4
   1ce24:	str	r2, [fp, #-32]	; 0xffffffe0
   1ce28:	str	r3, [fp, #-36]	; 0xffffffdc
   1ce2c:	mov	r3, #0
   1ce30:	str	r3, [fp, #-16]
   1ce34:	ldrb	r3, [fp, #4]
   1ce38:	cmp	r3, #123	; 0x7b
   1ce3c:	bne	1ce54 <__assert_fail@plt+0xa768>
   1ce40:	ldr	r3, [pc, #1344]	; 1d388 <__assert_fail@plt+0xac9c>
   1ce44:	mov	r2, #78	; 0x4e
   1ce48:	ldr	r1, [pc, #1340]	; 1d38c <__assert_fail@plt+0xaca0>
   1ce4c:	ldr	r0, [pc, #1340]	; 1d390 <__assert_fail@plt+0xaca4>
   1ce50:	bl	126ec <__assert_fail@plt>
   1ce54:	ldrb	r3, [fp, #4]
   1ce58:	cmp	r3, #91	; 0x5b
   1ce5c:	bne	1ce74 <__assert_fail@plt+0xa788>
   1ce60:	ldr	r3, [pc, #1312]	; 1d388 <__assert_fail@plt+0xac9c>
   1ce64:	mov	r2, #79	; 0x4f
   1ce68:	ldr	r1, [pc, #1308]	; 1d38c <__assert_fail@plt+0xaca0>
   1ce6c:	ldr	r0, [pc, #1312]	; 1d394 <__assert_fail@plt+0xaca8>
   1ce70:	bl	126ec <__assert_fail@plt>
   1ce74:	ldrb	r3, [fp, #4]
   1ce78:	cmp	r3, #40	; 0x28
   1ce7c:	bne	1ce94 <__assert_fail@plt+0xa7a8>
   1ce80:	ldr	r3, [pc, #1280]	; 1d388 <__assert_fail@plt+0xac9c>
   1ce84:	mov	r2, #80	; 0x50
   1ce88:	ldr	r1, [pc, #1276]	; 1d38c <__assert_fail@plt+0xaca0>
   1ce8c:	ldr	r0, [pc, #1284]	; 1d398 <__assert_fail@plt+0xacac>
   1ce90:	bl	126ec <__assert_fail@plt>
   1ce94:	mov	r0, #20
   1ce98:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1ce9c:	mov	r3, r0
   1cea0:	mov	r2, r3
   1cea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cea8:	str	r2, [r3]
   1ceac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ceb0:	ldr	r3, [r3]
   1ceb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ceb8:	str	r2, [r3]
   1cebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cec0:	ldr	r3, [r3]
   1cec4:	ldrb	r2, [fp, #4]
   1cec8:	strb	r2, [r3, #4]
   1cecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ced0:	ldr	r3, [r3]
   1ced4:	ldrb	r2, [fp, #8]
   1ced8:	strb	r2, [r3, #5]
   1cedc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cee0:	ldr	r3, [r3]
   1cee4:	mov	r2, #0
   1cee8:	str	r2, [r3, #16]
   1ceec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cef0:	ldr	r3, [r3]
   1cef4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cef8:	str	r2, [r3, #12]
   1cefc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf00:	ldr	r4, [r3]
   1cf04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf08:	add	r3, r3, #2
   1cf0c:	mov	r0, r3
   1cf10:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1cf14:	mov	r3, r0
   1cf18:	str	r3, [r4, #8]
   1cf1c:	ldr	r3, [r4, #8]
   1cf20:	str	r3, [fp, #-20]	; 0xffffffec
   1cf24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf28:	mov	r2, r3
   1cf2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cf30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf34:	bl	12458 <strncpy@plt>
   1cf38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cf40:	add	r3, r2, r3
   1cf44:	str	r3, [fp, #-20]	; 0xffffffec
   1cf48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cf4c:	cmp	r3, #0
   1cf50:	beq	1cf60 <__assert_fail@plt+0xa874>
   1cf54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cf58:	cmp	r3, #1
   1cf5c:	bne	1cfdc <__assert_fail@plt+0xa8f0>
   1cf60:	ldrb	r3, [fp, #4]
   1cf64:	cmp	r3, #0
   1cf68:	beq	1cf80 <__assert_fail@plt+0xa894>
   1cf6c:	ldr	r3, [pc, #1044]	; 1d388 <__assert_fail@plt+0xac9c>
   1cf70:	mov	r2, #97	; 0x61
   1cf74:	ldr	r1, [pc, #1040]	; 1d38c <__assert_fail@plt+0xaca0>
   1cf78:	ldr	r0, [pc, #1052]	; 1d39c <__assert_fail@plt+0xacb0>
   1cf7c:	bl	126ec <__assert_fail@plt>
   1cf80:	ldrb	r3, [fp, #8]
   1cf84:	cmp	r3, #0
   1cf88:	beq	1cfa0 <__assert_fail@plt+0xa8b4>
   1cf8c:	ldr	r3, [pc, #1012]	; 1d388 <__assert_fail@plt+0xac9c>
   1cf90:	mov	r2, #98	; 0x62
   1cf94:	ldr	r1, [pc, #1008]	; 1d38c <__assert_fail@plt+0xaca0>
   1cf98:	ldr	r0, [pc, #1024]	; 1d3a0 <__assert_fail@plt+0xacb4>
   1cf9c:	bl	126ec <__assert_fail@plt>
   1cfa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfa4:	mov	r2, #0
   1cfa8:	strb	r2, [r3]
   1cfac:	ldr	r3, [fp, #12]
   1cfb0:	ldr	r2, [r3, #24]
   1cfb4:	ldr	r3, [fp, #-16]
   1cfb8:	cmp	r2, r3
   1cfbc:	bcs	1cfcc <__assert_fail@plt+0xa8e0>
   1cfc0:	ldr	r3, [fp, #12]
   1cfc4:	mov	r2, #0
   1cfc8:	str	r2, [r3, #24]
   1cfcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfd0:	ldr	r3, [r3]
   1cfd4:	add	r3, r3, #16
   1cfd8:	b	1d37c <__assert_fail@plt+0xac90>
   1cfdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cfe0:	cmp	r3, #2
   1cfe4:	beq	1cffc <__assert_fail@plt+0xa910>
   1cfe8:	ldr	r3, [pc, #920]	; 1d388 <__assert_fail@plt+0xac9c>
   1cfec:	mov	r2, #105	; 0x69
   1cff0:	ldr	r1, [pc, #916]	; 1d38c <__assert_fail@plt+0xaca0>
   1cff4:	ldr	r0, [pc, #936]	; 1d3a4 <__assert_fail@plt+0xacb8>
   1cff8:	bl	126ec <__assert_fail@plt>
   1cffc:	ldrb	r3, [fp, #4]
   1d000:	sub	r3, r3, #37	; 0x25
   1d004:	cmp	r3, #84	; 0x54
   1d008:	ldrls	pc, [pc, r3, lsl #2]
   1d00c:	b	1d344 <__assert_fail@plt+0xac58>
   1d010:	andeq	sp, r1, r4, ror #2
   1d014:	andeq	sp, r1, r4, asr #6
   1d018:	andeq	sp, r1, r4, asr #6
   1d01c:	andeq	sp, r1, r4, asr #6
   1d020:	andeq	sp, r1, r4, asr #6
   1d024:	andeq	sp, r1, r4, asr #6
   1d028:	andeq	sp, r1, r4, asr #6
   1d02c:	andeq	sp, r1, r4, asr #6
   1d030:	andeq	sp, r1, r4, asr #6
   1d034:	andeq	sp, r1, r4, asr #6
   1d038:	andeq	sp, r1, r4, asr #6
   1d03c:	andeq	sp, r1, r4, asr #6
   1d040:	andeq	sp, r1, r4, asr #6
   1d044:	andeq	sp, r1, r4, asr #6
   1d048:	andeq	sp, r1, r4, asr #6
   1d04c:	andeq	sp, r1, r4, asr #6
   1d050:	andeq	sp, r1, r4, asr #6
   1d054:	andeq	sp, r1, r4, asr #6
   1d058:	andeq	sp, r1, r4, asr #6
   1d05c:	andeq	sp, r1, r4, asr #6
   1d060:	andeq	sp, r1, r4, asr #6
   1d064:	andeq	sp, r1, r4, asr #6
   1d068:	andeq	sp, r1, r4, asr #6
   1d06c:	andeq	sp, r1, r4, asr #6
   1d070:	andeq	sp, r1, r4, asr #6
   1d074:	andeq	sp, r1, r4, asr #6
   1d078:	andeq	sp, r1, r4, asr #6
   1d07c:	andeq	sp, r1, r4, asr #6
   1d080:	andeq	sp, r1, r0, lsl #4
   1d084:	andeq	sp, r1, r0, lsl #4
   1d088:	andeq	sp, r1, r0, lsl #4
   1d08c:	ldrdeq	sp, [r1], -r4
   1d090:	andeq	sp, r1, r4, asr #6
   1d094:	andeq	sp, r1, r0, lsl #4
   1d098:	ldrdeq	sp, [r1], -r4
   1d09c:			; <UNDEFINED> instruction: 0x0001d2bc
   1d0a0:	andeq	sp, r1, r4, asr #6
   1d0a4:	andeq	sp, r1, r4, asr #6
   1d0a8:	andeq	sp, r1, r4, asr #6
   1d0ac:	andeq	sp, r1, r4, asr #6
   1d0b0:	andeq	sp, r1, r0, lsl #4
   1d0b4:	andeq	sp, r1, r4, asr #6
   1d0b8:	andeq	sp, r1, r4, asr #6
   1d0bc:	andeq	sp, r1, r4, lsl #5
   1d0c0:	andeq	sp, r1, r4, asr #6
   1d0c4:	andeq	sp, r1, r4, asr #6
   1d0c8:	andeq	sp, r1, ip, lsr #4
   1d0cc:	andeq	sp, r1, r0, lsl #4
   1d0d0:	ldrdeq	sp, [r1], -r4
   1d0d4:	andeq	sp, r1, r4, asr #6
   1d0d8:	andeq	sp, r1, r4, asr #6
   1d0dc:	andeq	sp, r1, r4, asr #6
   1d0e0:	andeq	sp, r1, r8, asr r2
   1d0e4:	muleq	r1, ip, r2
   1d0e8:	andeq	sp, r1, r4, asr #6
   1d0ec:	andeq	sp, r1, r4, asr #6
   1d0f0:	andeq	sp, r1, r4, asr #6
   1d0f4:	andeq	sp, r1, r4, asr #6
   1d0f8:	andeq	sp, r1, r4, asr #6
   1d0fc:	andeq	sp, r1, r4, asr #6
   1d100:	andeq	sp, r1, r0, lsl #4
   1d104:	ldrdeq	sp, [r1], -r4
   1d108:	andeq	sp, r1, r0, lsl #4
   1d10c:	andeq	sp, r1, r0, lsl #6
   1d110:	andeq	sp, r1, r4, asr #6
   1d114:	andeq	sp, r1, r4, lsl #5
   1d118:	andeq	sp, r1, r0, lsl #4
   1d11c:	andeq	sp, r1, r4, lsl #5
   1d120:	ldrdeq	sp, [r1], -r4
   1d124:	andeq	sp, r1, r4, asr #6
   1d128:	ldrdeq	sp, [r1], -r4
   1d12c:	andeq	sp, r1, ip, ror r1
   1d130:	andeq	sp, r1, r8, lsl r3
   1d134:	ldrdeq	sp, [r1], -r4
   1d138:	andeq	sp, r1, r4, asr #6
   1d13c:	andeq	sp, r1, r4, lsl #5
   1d140:	andeq	sp, r1, r4, asr #6
   1d144:	andeq	sp, r1, r4, asr #6
   1d148:	andeq	sp, r1, r0, lsl #4
   1d14c:	andeq	sp, r1, r0, lsl #4
   1d150:	andeq	sp, r1, r0, lsl #4
   1d154:	andeq	sp, r1, r4, asr #6
   1d158:	andeq	sp, r1, r4, asr #6
   1d15c:	andeq	sp, r1, r4, asr #6
   1d160:	andeq	sp, r1, r8, lsr #3
   1d164:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d168:	add	r2, r3, #1
   1d16c:	str	r2, [fp, #-20]	; 0xffffffec
   1d170:	mov	r2, #37	; 0x25
   1d174:	strb	r2, [r3]
   1d178:	b	1d344 <__assert_fail@plt+0xac58>
   1d17c:	ldr	r3, [fp, #12]
   1d180:	mov	r2, #1
   1d184:	strb	r2, [r3, #18]
   1d188:	mov	r3, #4
   1d18c:	str	r3, [fp, #-16]
   1d190:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d194:	add	r2, r3, #1
   1d198:	str	r2, [fp, #-20]	; 0xffffffec
   1d19c:	mov	r2, #115	; 0x73
   1d1a0:	strb	r2, [r3]
   1d1a4:	b	1d344 <__assert_fail@plt+0xac58>
   1d1a8:	ldr	r3, [fp, #12]
   1d1ac:	mov	r2, #1
   1d1b0:	strb	r2, [r3, #19]
   1d1b4:	mov	r3, #2
   1d1b8:	str	r3, [fp, #-16]
   1d1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1c0:	add	r2, r3, #1
   1d1c4:	str	r2, [fp, #-20]	; 0xffffffec
   1d1c8:	mov	r2, #115	; 0x73
   1d1cc:	strb	r2, [r3]
   1d1d0:	b	1d344 <__assert_fail@plt+0xac58>
   1d1d4:	ldr	r3, [fp, #12]
   1d1d8:	mov	r2, #1
   1d1dc:	strb	r2, [r3, #20]
   1d1e0:	mov	r3, #1
   1d1e4:	str	r3, [fp, #-16]
   1d1e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1ec:	add	r2, r3, #1
   1d1f0:	str	r2, [fp, #-20]	; 0xffffffec
   1d1f4:	mov	r2, #115	; 0x73
   1d1f8:	strb	r2, [r3]
   1d1fc:	b	1d344 <__assert_fail@plt+0xac58>
   1d200:	ldr	r3, [fp, #12]
   1d204:	mov	r2, #1
   1d208:	strb	r2, [r3, #18]
   1d20c:	mov	r3, #3
   1d210:	str	r3, [fp, #-16]
   1d214:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d218:	add	r2, r3, #1
   1d21c:	str	r2, [fp, #-20]	; 0xffffffec
   1d220:	mov	r2, #115	; 0x73
   1d224:	strb	r2, [r3]
   1d228:	b	1d344 <__assert_fail@plt+0xac58>
   1d22c:	ldr	r3, [fp, #12]
   1d230:	mov	r2, #1
   1d234:	strb	r2, [r3, #18]
   1d238:	mov	r3, #3
   1d23c:	str	r3, [fp, #-16]
   1d240:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d244:	add	r2, r3, #1
   1d248:	str	r2, [fp, #-20]	; 0xffffffec
   1d24c:	mov	r2, #103	; 0x67
   1d250:	strb	r2, [r3]
   1d254:	b	1d344 <__assert_fail@plt+0xac58>
   1d258:	ldr	r3, [fp, #12]
   1d25c:	mov	r2, #1
   1d260:	strb	r2, [r3, #18]
   1d264:	mov	r3, #2
   1d268:	str	r3, [fp, #-16]
   1d26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d270:	add	r2, r3, #1
   1d274:	str	r2, [fp, #-20]	; 0xffffffec
   1d278:	mov	r2, #115	; 0x73
   1d27c:	strb	r2, [r3]
   1d280:	b	1d344 <__assert_fail@plt+0xac58>
   1d284:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d288:	add	r2, r3, #1
   1d28c:	str	r2, [fp, #-20]	; 0xffffffec
   1d290:	mov	r2, #115	; 0x73
   1d294:	strb	r2, [r3]
   1d298:	b	1d344 <__assert_fail@plt+0xac58>
   1d29c:	mov	r3, #5
   1d2a0:	str	r3, [fp, #-16]
   1d2a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d2a8:	add	r2, r3, #1
   1d2ac:	str	r2, [fp, #-20]	; 0xffffffec
   1d2b0:	mov	r2, #115	; 0x73
   1d2b4:	strb	r2, [r3]
   1d2b8:	b	1d344 <__assert_fail@plt+0xac58>
   1d2bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d2c0:	add	r2, r3, #1
   1d2c4:	str	r2, [fp, #-20]	; 0xffffffec
   1d2c8:	mov	r2, #115	; 0x73
   1d2cc:	strb	r2, [r3]
   1d2d0:	b	1d344 <__assert_fail@plt+0xac58>
   1d2d4:	ldr	r3, [fp, #12]
   1d2d8:	mov	r2, #1
   1d2dc:	strb	r2, [r3, #18]
   1d2e0:	mov	r3, #3
   1d2e4:	str	r3, [fp, #-16]
   1d2e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d2ec:	add	r2, r3, #1
   1d2f0:	str	r2, [fp, #-20]	; 0xffffffec
   1d2f4:	mov	r2, #115	; 0x73
   1d2f8:	strb	r2, [r3]
   1d2fc:	b	1d344 <__assert_fail@plt+0xac58>
   1d300:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d304:	add	r2, r3, #1
   1d308:	str	r2, [fp, #-20]	; 0xffffffec
   1d30c:	mov	r2, #100	; 0x64
   1d310:	strb	r2, [r3]
   1d314:	b	1d344 <__assert_fail@plt+0xac58>
   1d318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d31c:	add	r2, r3, #1
   1d320:	str	r2, [fp, #-20]	; 0xffffffec
   1d324:	mov	r2, #111	; 0x6f
   1d328:	strb	r2, [r3]
   1d32c:	ldr	r3, [fp, #12]
   1d330:	mov	r2, #1
   1d334:	strb	r2, [r3, #18]
   1d338:	mov	r3, #3
   1d33c:	str	r3, [fp, #-16]
   1d340:	nop			; (mov r0, r0)
   1d344:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d348:	mov	r2, #0
   1d34c:	strb	r2, [r3]
   1d350:	ldr	r3, [fp, #12]
   1d354:	ldr	r2, [r3, #24]
   1d358:	ldr	r3, [fp, #-16]
   1d35c:	cmp	r2, r3
   1d360:	bcs	1d370 <__assert_fail@plt+0xac84>
   1d364:	ldr	r3, [fp, #12]
   1d368:	ldr	r2, [fp, #-16]
   1d36c:	str	r2, [r3, #24]
   1d370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d374:	ldr	r3, [r3]
   1d378:	add	r3, r3, #16
   1d37c:	mov	r0, r3
   1d380:	sub	sp, fp, #8
   1d384:	pop	{r4, fp, pc}
   1d388:	muleq	r6, r8, r8
   1d38c:	andeq	r6, r6, r4, asr #8
   1d390:	andeq	r6, r6, ip, asr #8
   1d394:	andeq	r6, r6, r0, ror #8
   1d398:	andeq	r6, r6, r4, ror r4
   1d39c:	andeq	r6, r6, r8, lsl #9
   1d3a0:	muleq	r6, ip, r4
   1d3a4:			; <UNDEFINED> instruction: 0x000664b4
   1d3a8:	push	{fp}		; (str fp, [sp, #-4]!)
   1d3ac:	add	fp, sp, #0
   1d3b0:	sub	sp, sp, #12
   1d3b4:	mov	r3, r0
   1d3b8:	strb	r3, [fp, #-5]
   1d3bc:	ldrb	r3, [fp, #-5]
   1d3c0:	cmp	r3, #47	; 0x2f
   1d3c4:	bls	1d3dc <__assert_fail@plt+0xacf0>
   1d3c8:	ldrb	r3, [fp, #-5]
   1d3cc:	cmp	r3, #55	; 0x37
   1d3d0:	bhi	1d3dc <__assert_fail@plt+0xacf0>
   1d3d4:	mov	r3, #1
   1d3d8:	b	1d3e0 <__assert_fail@plt+0xacf4>
   1d3dc:	mov	r3, #0
   1d3e0:	and	r3, r3, #1
   1d3e4:	uxtb	r3, r3
   1d3e8:	mov	r0, r3
   1d3ec:	add	sp, fp, #0
   1d3f0:	pop	{fp}		; (ldr fp, [sp], #4)
   1d3f4:	bx	lr
   1d3f8:	push	{r4, r5, fp, lr}
   1d3fc:	add	fp, sp, #12
   1d400:	sub	sp, sp, #16
   1d404:	str	r0, [fp, #-24]	; 0xffffffe8
   1d408:	str	r1, [fp, #-28]	; 0xffffffe4
   1d40c:	mov	r3, #0
   1d410:	str	r3, [fp, #-16]
   1d414:	mov	r5, #0
   1d418:	mov	r4, r5
   1d41c:	b	1d44c <__assert_fail@plt+0xad60>
   1d420:	lsl	r3, r5, #3
   1d424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d428:	ldr	r2, [fp, #-16]
   1d42c:	add	r2, r1, r2
   1d430:	ldrb	r2, [r2]
   1d434:	add	r3, r3, r2
   1d438:	sub	r5, r3, #48	; 0x30
   1d43c:	add	r4, r4, #1
   1d440:	ldr	r3, [fp, #-16]
   1d444:	add	r3, r3, #1
   1d448:	str	r3, [fp, #-16]
   1d44c:	cmp	r4, #2
   1d450:	bgt	1d478 <__assert_fail@plt+0xad8c>
   1d454:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d458:	ldr	r3, [fp, #-16]
   1d45c:	add	r3, r2, r3
   1d460:	ldrb	r3, [r3]
   1d464:	mov	r0, r3
   1d468:	bl	1d3a8 <__assert_fail@plt+0xacbc>
   1d46c:	mov	r3, r0
   1d470:	cmp	r3, #0
   1d474:	bne	1d420 <__assert_fail@plt+0xad34>
   1d478:	ldr	r3, [fp, #-16]
   1d47c:	sub	r3, r3, #1
   1d480:	str	r3, [fp, #-16]
   1d484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d488:	ldr	r2, [fp, #-16]
   1d48c:	str	r2, [r3]
   1d490:	uxtb	r3, r5
   1d494:	mov	r0, r3
   1d498:	sub	sp, fp, #12
   1d49c:	pop	{r4, r5, fp, pc}
   1d4a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d4a4:	add	fp, sp, #0
   1d4a8:	sub	sp, sp, #20
   1d4ac:	mov	r3, r0
   1d4b0:	strb	r3, [fp, #-13]
   1d4b4:	mov	r3, #0
   1d4b8:	strb	r3, [fp, #-5]
   1d4bc:	ldrb	r3, [fp, #-13]
   1d4c0:	sub	r3, r3, #92	; 0x5c
   1d4c4:	cmp	r3, #26
   1d4c8:	ldrls	pc, [pc, r3, lsl #2]
   1d4cc:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d4d0:	muleq	r1, r0, r5
   1d4d4:	muleq	r1, ip, r5
   1d4d8:	muleq	r1, ip, r5
   1d4dc:	muleq	r1, ip, r5
   1d4e0:	muleq	r1, ip, r5
   1d4e4:	andeq	sp, r1, ip, lsr r5
   1d4e8:	andeq	sp, r1, r8, asr #10
   1d4ec:	muleq	r1, ip, r5
   1d4f0:	muleq	r1, ip, r5
   1d4f4:	muleq	r1, ip, r5
   1d4f8:	andeq	sp, r1, r4, asr r5
   1d4fc:	muleq	r1, ip, r5
   1d500:	muleq	r1, ip, r5
   1d504:	muleq	r1, ip, r5
   1d508:	muleq	r1, ip, r5
   1d50c:	muleq	r1, ip, r5
   1d510:	muleq	r1, ip, r5
   1d514:	muleq	r1, ip, r5
   1d518:	andeq	sp, r1, r0, ror #10
   1d51c:	muleq	r1, ip, r5
   1d520:	muleq	r1, ip, r5
   1d524:	muleq	r1, ip, r5
   1d528:	andeq	sp, r1, ip, ror #10
   1d52c:	muleq	r1, ip, r5
   1d530:	andeq	sp, r1, r8, ror r5
   1d534:	muleq	r1, ip, r5
   1d538:	andeq	sp, r1, r4, lsl #11
   1d53c:	mov	r3, #7
   1d540:	strb	r3, [fp, #-5]
   1d544:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d548:	mov	r3, #8
   1d54c:	strb	r3, [fp, #-5]
   1d550:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d554:	mov	r3, #12
   1d558:	strb	r3, [fp, #-5]
   1d55c:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d560:	mov	r3, #10
   1d564:	strb	r3, [fp, #-5]
   1d568:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d56c:	mov	r3, #13
   1d570:	strb	r3, [fp, #-5]
   1d574:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d578:	mov	r3, #9
   1d57c:	strb	r3, [fp, #-5]
   1d580:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d584:	mov	r3, #11
   1d588:	strb	r3, [fp, #-5]
   1d58c:	b	1d59c <__assert_fail@plt+0xaeb0>
   1d590:	mov	r3, #92	; 0x5c
   1d594:	strb	r3, [fp, #-5]
   1d598:	nop			; (mov r0, r0)
   1d59c:	ldrb	r3, [fp, #-5]
   1d5a0:	mov	r0, r3
   1d5a4:	add	sp, fp, #0
   1d5a8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d5ac:	bx	lr
   1d5b0:	push	{fp, lr}
   1d5b4:	add	fp, sp, #4
   1d5b8:	sub	sp, sp, #16
   1d5bc:	str	r0, [fp, #-16]
   1d5c0:	mov	r3, #0
   1d5c4:	str	r3, [fp, #-8]
   1d5c8:	ldr	r3, [fp, #-8]
   1d5cc:	add	r3, r3, #1
   1d5d0:	str	r3, [fp, #-8]
   1d5d4:	ldr	r2, [fp, #-16]
   1d5d8:	ldr	r3, [fp, #-8]
   1d5dc:	add	r3, r2, r3
   1d5e0:	ldrb	r3, [r3]
   1d5e4:	cmp	r3, #0
   1d5e8:	beq	1d624 <__assert_fail@plt+0xaf38>
   1d5ec:	ldr	r2, [fp, #-16]
   1d5f0:	ldr	r3, [fp, #-8]
   1d5f4:	add	r3, r2, r3
   1d5f8:	ldrb	r3, [r3]
   1d5fc:	mov	r1, r3
   1d600:	ldr	r0, [pc, #200]	; 1d6d0 <__assert_fail@plt+0xafe4>
   1d604:	bl	123c8 <strchr@plt>
   1d608:	mov	r3, r0
   1d60c:	cmp	r3, #0
   1d610:	bne	1d5c8 <__assert_fail@plt+0xaedc>
   1d614:	b	1d624 <__assert_fail@plt+0xaf38>
   1d618:	ldr	r3, [fp, #-8]
   1d61c:	add	r3, r3, #1
   1d620:	str	r3, [fp, #-8]
   1d624:	bl	12368 <__ctype_b_loc@plt>
   1d628:	mov	r3, r0
   1d62c:	ldr	r2, [r3]
   1d630:	ldr	r1, [fp, #-16]
   1d634:	ldr	r3, [fp, #-8]
   1d638:	add	r3, r1, r3
   1d63c:	ldrb	r3, [r3]
   1d640:	lsl	r3, r3, #1
   1d644:	add	r3, r2, r3
   1d648:	ldrh	r3, [r3]
   1d64c:	and	r3, r3, #2048	; 0x800
   1d650:	cmp	r3, #0
   1d654:	bne	1d618 <__assert_fail@plt+0xaf2c>
   1d658:	ldr	r2, [fp, #-16]
   1d65c:	ldr	r3, [fp, #-8]
   1d660:	add	r3, r2, r3
   1d664:	ldrb	r3, [r3]
   1d668:	cmp	r3, #46	; 0x2e
   1d66c:	bne	1d6c0 <__assert_fail@plt+0xafd4>
   1d670:	ldr	r3, [fp, #-8]
   1d674:	add	r3, r3, #1
   1d678:	str	r3, [fp, #-8]
   1d67c:	b	1d68c <__assert_fail@plt+0xafa0>
   1d680:	ldr	r3, [fp, #-8]
   1d684:	add	r3, r3, #1
   1d688:	str	r3, [fp, #-8]
   1d68c:	bl	12368 <__ctype_b_loc@plt>
   1d690:	mov	r3, r0
   1d694:	ldr	r2, [r3]
   1d698:	ldr	r1, [fp, #-16]
   1d69c:	ldr	r3, [fp, #-8]
   1d6a0:	add	r3, r1, r3
   1d6a4:	ldrb	r3, [r3]
   1d6a8:	lsl	r3, r3, #1
   1d6ac:	add	r3, r2, r3
   1d6b0:	ldrh	r3, [r3]
   1d6b4:	and	r3, r3, #2048	; 0x800
   1d6b8:	cmp	r3, #0
   1d6bc:	bne	1d680 <__assert_fail@plt+0xaf94>
   1d6c0:	ldr	r3, [fp, #-8]
   1d6c4:	mov	r0, r3
   1d6c8:	sub	sp, fp, #4
   1d6cc:	pop	{fp, pc}
   1d6d0:	andeq	r6, r6, r8, asr #9
   1d6d4:	push	{fp, lr}
   1d6d8:	add	fp, sp, #4
   1d6dc:	sub	sp, sp, #8
   1d6e0:	mov	r3, r0
   1d6e4:	strb	r3, [fp, #-5]
   1d6e8:	ldrb	r3, [fp, #-5]
   1d6ec:	mov	r1, r3
   1d6f0:	ldr	r0, [pc, #72]	; 1d740 <__assert_fail@plt+0xb054>
   1d6f4:	bl	123c8 <strchr@plt>
   1d6f8:	mov	r3, r0
   1d6fc:	cmp	r3, #0
   1d700:	beq	1d70c <__assert_fail@plt+0xb020>
   1d704:	mov	r3, #1
   1d708:	b	1d734 <__assert_fail@plt+0xb048>
   1d70c:	ldrb	r3, [fp, #-5]
   1d710:	mov	r1, r3
   1d714:	ldr	r0, [pc, #40]	; 1d744 <__assert_fail@plt+0xb058>
   1d718:	bl	123c8 <strchr@plt>
   1d71c:	mov	r3, r0
   1d720:	cmp	r3, #0
   1d724:	beq	1d730 <__assert_fail@plt+0xb044>
   1d728:	mov	r3, #2
   1d72c:	b	1d734 <__assert_fail@plt+0xb048>
   1d730:	mov	r3, #0
   1d734:	mov	r0, r3
   1d738:	sub	sp, fp, #4
   1d73c:	pop	{fp, pc}
   1d740:	ldrdeq	r6, [r6], -r0
   1d744:	strdeq	r6, [r6], -r0
   1d748:	push	{fp, lr}
   1d74c:	add	fp, sp, #4
   1d750:	sub	sp, sp, #64	; 0x40
   1d754:	str	r0, [fp, #-40]	; 0xffffffd8
   1d758:	str	r1, [fp, #-44]	; 0xffffffd4
   1d75c:	str	r2, [fp, #-48]	; 0xffffffd0
   1d760:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d764:	str	r3, [fp, #-8]
   1d768:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d76c:	ldr	r1, [pc, #1364]	; 1dcc8 <__assert_fail@plt+0xb5dc>
   1d770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d774:	bl	1a8d0 <__assert_fail@plt+0x81e4>
   1d778:	str	r0, [fp, #-28]	; 0xffffffe4
   1d77c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d780:	mov	r2, #1
   1d784:	strb	r2, [r3, #17]
   1d788:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d78c:	ldrb	r2, [r3, #17]
   1d790:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d794:	strb	r2, [r3, #16]
   1d798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d79c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d7a0:	add	ip, r3, #40	; 0x28
   1d7a4:	mov	lr, r2
   1d7a8:	ldm	lr!, {r0, r1, r2, r3}
   1d7ac:	stmia	ip!, {r0, r1, r2, r3}
   1d7b0:	ldr	r3, [lr]
   1d7b4:	str	r3, [ip]
   1d7b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7bc:	mov	r2, #0
   1d7c0:	strb	r2, [r3, #19]
   1d7c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7c8:	mov	r2, #0
   1d7cc:	strb	r2, [r3, #18]
   1d7d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7d4:	mov	r2, #0
   1d7d8:	str	r2, [r3, #24]
   1d7dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7e0:	add	r3, r3, #40	; 0x28
   1d7e4:	str	r3, [fp, #-16]
   1d7e8:	ldr	r3, [fp, #-16]
   1d7ec:	mov	r2, #0
   1d7f0:	str	r2, [r3]
   1d7f4:	ldr	r3, [fp, #-8]
   1d7f8:	str	r3, [fp, #-12]
   1d7fc:	b	1dc64 <__assert_fail@plt+0xb578>
   1d800:	ldr	r3, [fp, #-12]
   1d804:	ldrb	r3, [r3]
   1d808:	cmp	r3, #92	; 0x5c
   1d80c:	bne	1d88c <__assert_fail@plt+0xb1a0>
   1d810:	ldr	r3, [fp, #-12]
   1d814:	add	r3, r3, #1
   1d818:	ldrb	r3, [r3]
   1d81c:	cmp	r3, #99	; 0x63
   1d820:	bne	1d88c <__assert_fail@plt+0xb1a0>
   1d824:	ldr	r2, [fp, #-12]
   1d828:	ldr	r3, [fp, #-8]
   1d82c:	sub	r2, r2, r3
   1d830:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d834:	str	r3, [sp, #8]
   1d838:	mov	r3, #0
   1d83c:	str	r3, [sp, #4]
   1d840:	mov	r3, #0
   1d844:	str	r3, [sp]
   1d848:	mov	r3, #1
   1d84c:	ldr	r1, [fp, #-8]
   1d850:	ldr	r0, [fp, #-16]
   1d854:	bl	1ce10 <__assert_fail@plt+0xa724>
   1d858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d85c:	ldrb	r3, [r3, #18]
   1d860:	cmp	r3, #0
   1d864:	beq	1d884 <__assert_fail@plt+0xb198>
   1d868:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d86c:	ldr	r3, [r3, #24]
   1d870:	cmp	r3, #2
   1d874:	bhi	1d884 <__assert_fail@plt+0xb198>
   1d878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d87c:	mov	r2, #3
   1d880:	str	r2, [r3, #24]
   1d884:	mov	r3, #1
   1d888:	b	1dcbc <__assert_fail@plt+0xb5d0>
   1d88c:	ldr	r3, [fp, #-12]
   1d890:	ldrb	r3, [r3]
   1d894:	cmp	r3, #92	; 0x5c
   1d898:	bne	1da34 <__assert_fail@plt+0xb348>
   1d89c:	mov	r3, #1
   1d8a0:	str	r3, [fp, #-20]	; 0xffffffec
   1d8a4:	ldr	r2, [fp, #-12]
   1d8a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8ac:	add	r3, r2, r3
   1d8b0:	ldrb	r3, [r3]
   1d8b4:	cmp	r3, #0
   1d8b8:	bne	1d8e8 <__assert_fail@plt+0xb1fc>
   1d8bc:	ldr	r0, [pc, #1032]	; 1dccc <__assert_fail@plt+0xb5e0>
   1d8c0:	bl	12398 <gettext@plt>
   1d8c4:	mov	r3, r0
   1d8c8:	mov	r2, r3
   1d8cc:	mov	r1, #0
   1d8d0:	mov	r0, #0
   1d8d4:	bl	122b4 <error@plt>
   1d8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8dc:	sub	r3, r3, #1
   1d8e0:	str	r3, [fp, #-20]	; 0xffffffec
   1d8e4:	b	1d9d0 <__assert_fail@plt+0xb2e4>
   1d8e8:	ldr	r2, [fp, #-12]
   1d8ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8f0:	add	r3, r2, r3
   1d8f4:	ldrb	r3, [r3]
   1d8f8:	mov	r0, r3
   1d8fc:	bl	1d3a8 <__assert_fail@plt+0xacbc>
   1d900:	mov	r3, r0
   1d904:	cmp	r3, #0
   1d908:	beq	1d954 <__assert_fail@plt+0xb268>
   1d90c:	mov	r3, #0
   1d910:	str	r3, [fp, #-36]	; 0xffffffdc
   1d914:	ldr	r2, [fp, #-12]
   1d918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d91c:	add	r3, r2, r3
   1d920:	sub	r2, fp, #36	; 0x24
   1d924:	mov	r1, r2
   1d928:	mov	r0, r3
   1d92c:	bl	1d3f8 <__assert_fail@plt+0xad0c>
   1d930:	mov	r3, r0
   1d934:	mov	r2, r3
   1d938:	ldr	r3, [fp, #-12]
   1d93c:	strb	r2, [r3]
   1d940:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d944:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d948:	add	r3, r2, r3
   1d94c:	str	r3, [fp, #-20]	; 0xffffffec
   1d950:	b	1d9d0 <__assert_fail@plt+0xb2e4>
   1d954:	ldr	r2, [fp, #-12]
   1d958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d95c:	add	r3, r2, r3
   1d960:	ldrb	r3, [r3]
   1d964:	mov	r0, r3
   1d968:	bl	1d4a0 <__assert_fail@plt+0xadb4>
   1d96c:	mov	r3, r0
   1d970:	strb	r3, [fp, #-29]	; 0xffffffe3
   1d974:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1d978:	cmp	r3, #0
   1d97c:	beq	1d990 <__assert_fail@plt+0xb2a4>
   1d980:	ldr	r3, [fp, #-12]
   1d984:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   1d988:	strb	r2, [r3]
   1d98c:	b	1d9d0 <__assert_fail@plt+0xb2e4>
   1d990:	ldr	r0, [pc, #824]	; 1dcd0 <__assert_fail@plt+0xb5e4>
   1d994:	bl	12398 <gettext@plt>
   1d998:	mov	r1, r0
   1d99c:	ldr	r2, [fp, #-12]
   1d9a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9a4:	add	r3, r2, r3
   1d9a8:	ldrb	r3, [r3]
   1d9ac:	mov	r2, r1
   1d9b0:	mov	r1, #0
   1d9b4:	mov	r0, #0
   1d9b8:	bl	122b4 <error@plt>
   1d9bc:	ldr	r2, [fp, #-12]
   1d9c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9c4:	add	r3, r2, r3
   1d9c8:	str	r3, [fp, #-12]
   1d9cc:	b	1dc58 <__assert_fail@plt+0xb56c>
   1d9d0:	ldr	r2, [fp, #-12]
   1d9d4:	ldr	r3, [fp, #-8]
   1d9d8:	sub	r3, r2, r3
   1d9dc:	add	r2, r3, #1
   1d9e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d9e4:	str	r3, [sp, #8]
   1d9e8:	mov	r3, #0
   1d9ec:	str	r3, [sp, #4]
   1d9f0:	mov	r3, #0
   1d9f4:	str	r3, [sp]
   1d9f8:	mov	r3, #0
   1d9fc:	ldr	r1, [fp, #-8]
   1da00:	ldr	r0, [fp, #-16]
   1da04:	bl	1ce10 <__assert_fail@plt+0xa724>
   1da08:	str	r0, [fp, #-16]
   1da0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da10:	add	r3, r3, #1
   1da14:	ldr	r2, [fp, #-12]
   1da18:	add	r3, r2, r3
   1da1c:	str	r3, [fp, #-8]
   1da20:	ldr	r2, [fp, #-12]
   1da24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da28:	add	r3, r2, r3
   1da2c:	str	r3, [fp, #-12]
   1da30:	b	1dc58 <__assert_fail@plt+0xb56c>
   1da34:	ldr	r3, [fp, #-12]
   1da38:	ldrb	r3, [r3]
   1da3c:	cmp	r3, #37	; 0x25
   1da40:	bne	1dc58 <__assert_fail@plt+0xb56c>
   1da44:	ldr	r3, [fp, #-12]
   1da48:	add	r3, r3, #1
   1da4c:	ldrb	r3, [r3]
   1da50:	cmp	r3, #0
   1da54:	bne	1da74 <__assert_fail@plt+0xb388>
   1da58:	ldr	r0, [pc, #628]	; 1dcd4 <__assert_fail@plt+0xb5e8>
   1da5c:	bl	12398 <gettext@plt>
   1da60:	mov	r2, r0
   1da64:	ldr	r3, [fp, #-12]
   1da68:	mov	r1, #0
   1da6c:	mov	r0, #1
   1da70:	bl	122b4 <error@plt>
   1da74:	ldr	r3, [fp, #-12]
   1da78:	add	r3, r3, #1
   1da7c:	ldrb	r3, [r3]
   1da80:	cmp	r3, #37	; 0x25
   1da84:	bne	1da94 <__assert_fail@plt+0xb3a8>
   1da88:	mov	r3, #1
   1da8c:	str	r3, [fp, #-24]	; 0xffffffe8
   1da90:	b	1daa0 <__assert_fail@plt+0xb3b4>
   1da94:	ldr	r0, [fp, #-12]
   1da98:	bl	1d5b0 <__assert_fail@plt+0xaec4>
   1da9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1daa0:	ldr	r2, [fp, #-12]
   1daa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1daa8:	add	r3, r2, r3
   1daac:	str	r3, [fp, #-12]
   1dab0:	ldr	r3, [fp, #-12]
   1dab4:	ldrb	r3, [r3]
   1dab8:	mov	r0, r3
   1dabc:	bl	1d6d4 <__assert_fail@plt+0xafe8>
   1dac0:	str	r0, [fp, #-24]	; 0xffffffe8
   1dac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dac8:	cmp	r3, #0
   1dacc:	beq	1db68 <__assert_fail@plt+0xb47c>
   1dad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dad4:	sub	r3, r3, #1
   1dad8:	ldr	r2, [fp, #-12]
   1dadc:	add	r3, r2, r3
   1dae0:	ldrb	r3, [r3]
   1dae4:	cmp	r3, #0
   1dae8:	beq	1db68 <__assert_fail@plt+0xb47c>
   1daec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1daf0:	cmp	r3, #2
   1daf4:	bne	1db08 <__assert_fail@plt+0xb41c>
   1daf8:	ldr	r3, [fp, #-12]
   1dafc:	add	r3, r3, #1
   1db00:	ldrb	r3, [r3]
   1db04:	b	1db0c <__assert_fail@plt+0xb420>
   1db08:	mov	r3, #0
   1db0c:	strb	r3, [fp, #-30]	; 0xffffffe2
   1db10:	ldr	r2, [fp, #-12]
   1db14:	ldr	r3, [fp, #-8]
   1db18:	sub	r1, r2, r3
   1db1c:	ldr	r3, [fp, #-12]
   1db20:	ldrb	r3, [r3]
   1db24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1db28:	str	r2, [sp, #8]
   1db2c:	ldrb	r2, [fp, #-30]	; 0xffffffe2
   1db30:	str	r2, [sp, #4]
   1db34:	str	r3, [sp]
   1db38:	mov	r3, #2
   1db3c:	mov	r2, r1
   1db40:	ldr	r1, [fp, #-8]
   1db44:	ldr	r0, [fp, #-16]
   1db48:	bl	1ce10 <__assert_fail@plt+0xa724>
   1db4c:	str	r0, [fp, #-16]
   1db50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db54:	sub	r3, r3, #1
   1db58:	ldr	r2, [fp, #-12]
   1db5c:	add	r3, r2, r3
   1db60:	str	r3, [fp, #-12]
   1db64:	b	1dc4c <__assert_fail@plt+0xb560>
   1db68:	ldr	r3, [fp, #-12]
   1db6c:	ldrb	r3, [r3]
   1db70:	mov	r1, r3
   1db74:	ldr	r0, [pc, #348]	; 1dcd8 <__assert_fail@plt+0xb5ec>
   1db78:	bl	123c8 <strchr@plt>
   1db7c:	mov	r3, r0
   1db80:	cmp	r3, #0
   1db84:	beq	1dba8 <__assert_fail@plt+0xb4bc>
   1db88:	ldr	r0, [pc, #332]	; 1dcdc <__assert_fail@plt+0xb5f0>
   1db8c:	bl	12398 <gettext@plt>
   1db90:	mov	r2, r0
   1db94:	ldr	r3, [fp, #-12]
   1db98:	ldrb	r3, [r3]
   1db9c:	mov	r1, #0
   1dba0:	mov	r0, #1
   1dba4:	bl	122b4 <error@plt>
   1dba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dbac:	cmp	r3, #2
   1dbb0:	bne	1dbec <__assert_fail@plt+0xb500>
   1dbb4:	ldr	r3, [fp, #-12]
   1dbb8:	add	r3, r3, #1
   1dbbc:	ldrb	r3, [r3]
   1dbc0:	cmp	r3, #0
   1dbc4:	bne	1dbec <__assert_fail@plt+0xb500>
   1dbc8:	ldr	r0, [pc, #272]	; 1dce0 <__assert_fail@plt+0xb5f4>
   1dbcc:	bl	12398 <gettext@plt>
   1dbd0:	mov	r2, r0
   1dbd4:	ldr	r3, [fp, #-12]
   1dbd8:	ldrb	r3, [r3]
   1dbdc:	mov	r1, #0
   1dbe0:	mov	r0, #0
   1dbe4:	bl	122b4 <error@plt>
   1dbe8:	b	1dc0c <__assert_fail@plt+0xb520>
   1dbec:	ldr	r0, [pc, #240]	; 1dce4 <__assert_fail@plt+0xb5f8>
   1dbf0:	bl	12398 <gettext@plt>
   1dbf4:	mov	r2, r0
   1dbf8:	ldr	r3, [fp, #-12]
   1dbfc:	ldrb	r3, [r3]
   1dc00:	mov	r1, #0
   1dc04:	mov	r0, #0
   1dc08:	bl	122b4 <error@plt>
   1dc0c:	ldr	r3, [fp, #-12]
   1dc10:	add	r3, r3, #1
   1dc14:	mov	r2, r3
   1dc18:	ldr	r3, [fp, #-8]
   1dc1c:	sub	r2, r2, r3
   1dc20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc24:	str	r3, [sp, #8]
   1dc28:	mov	r3, #0
   1dc2c:	str	r3, [sp, #4]
   1dc30:	mov	r3, #0
   1dc34:	str	r3, [sp]
   1dc38:	mov	r3, #0
   1dc3c:	ldr	r1, [fp, #-8]
   1dc40:	ldr	r0, [fp, #-16]
   1dc44:	bl	1ce10 <__assert_fail@plt+0xa724>
   1dc48:	str	r0, [fp, #-16]
   1dc4c:	ldr	r3, [fp, #-12]
   1dc50:	add	r3, r3, #1
   1dc54:	str	r3, [fp, #-8]
   1dc58:	ldr	r3, [fp, #-12]
   1dc5c:	add	r3, r3, #1
   1dc60:	str	r3, [fp, #-12]
   1dc64:	ldr	r3, [fp, #-12]
   1dc68:	ldrb	r3, [r3]
   1dc6c:	cmp	r3, #0
   1dc70:	bne	1d800 <__assert_fail@plt+0xb114>
   1dc74:	ldr	r2, [fp, #-12]
   1dc78:	ldr	r3, [fp, #-8]
   1dc7c:	cmp	r2, r3
   1dc80:	bls	1dcb8 <__assert_fail@plt+0xb5cc>
   1dc84:	ldr	r2, [fp, #-12]
   1dc88:	ldr	r3, [fp, #-8]
   1dc8c:	sub	r2, r2, r3
   1dc90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc94:	str	r3, [sp, #8]
   1dc98:	mov	r3, #0
   1dc9c:	str	r3, [sp, #4]
   1dca0:	mov	r3, #0
   1dca4:	str	r3, [sp]
   1dca8:	mov	r3, #0
   1dcac:	ldr	r1, [fp, #-8]
   1dcb0:	ldr	r0, [fp, #-16]
   1dcb4:	bl	1ce10 <__assert_fail@plt+0xa724>
   1dcb8:	mov	r3, #1
   1dcbc:	mov	r0, r3
   1dcc0:	sub	sp, fp, #4
   1dcc4:	pop	{fp, pc}
   1dcc8:	strdeq	pc, [r1], -r8
   1dccc:	strdeq	r6, [r6], -r8
   1dcd0:	andeq	r6, r6, r8, lsr #10
   1dcd4:	andeq	r6, r6, ip, asr #10
   1dcd8:	andeq	r6, r6, r0, ror r5
   1dcdc:	andeq	r6, r6, r4, ror r5
   1dce0:			; <UNDEFINED> instruction: 0x000665b4
   1dce4:	andeq	r6, r6, r0, lsl #12
   1dce8:	push	{fp, lr}
   1dcec:	add	fp, sp, #4
   1dcf0:	sub	sp, sp, #24
   1dcf4:	str	r0, [fp, #-16]
   1dcf8:	str	r1, [fp, #-20]	; 0xffffffec
   1dcfc:	str	r2, [fp, #-24]	; 0xffffffe8
   1dd00:	str	r3, [fp, #-28]	; 0xffffffe4
   1dd04:	mov	r3, #0
   1dd08:	strb	r3, [fp, #-5]
   1dd0c:	mov	r3, #0
   1dd10:	str	r3, [fp, #-12]
   1dd14:	b	1de34 <__assert_fail@plt+0xb748>
   1dd18:	ldr	r2, [fp, #-16]
   1dd1c:	ldr	r3, [fp, #-12]
   1dd20:	add	r3, r2, r3
   1dd24:	ldrb	r2, [r3]
   1dd28:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dd2c:	ldr	r3, [fp, #-12]
   1dd30:	add	r3, r1, r3
   1dd34:	ldrb	r3, [r3]
   1dd38:	cmp	r2, r3
   1dd3c:	beq	1de28 <__assert_fail@plt+0xb73c>
   1dd40:	bl	12368 <__ctype_b_loc@plt>
   1dd44:	mov	r3, r0
   1dd48:	ldr	r2, [r3]
   1dd4c:	ldr	r1, [fp, #-16]
   1dd50:	ldr	r3, [fp, #-12]
   1dd54:	add	r3, r1, r3
   1dd58:	ldrb	r3, [r3]
   1dd5c:	lsl	r3, r3, #1
   1dd60:	add	r3, r2, r3
   1dd64:	ldrh	r3, [r3]
   1dd68:	and	r3, r3, #2048	; 0x800
   1dd6c:	cmp	r3, #0
   1dd70:	beq	1dda8 <__assert_fail@plt+0xb6bc>
   1dd74:	bl	12368 <__ctype_b_loc@plt>
   1dd78:	mov	r3, r0
   1dd7c:	ldr	r2, [r3]
   1dd80:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dd84:	ldr	r3, [fp, #-12]
   1dd88:	add	r3, r1, r3
   1dd8c:	ldrb	r3, [r3]
   1dd90:	lsl	r3, r3, #1
   1dd94:	add	r3, r2, r3
   1dd98:	ldrh	r3, [r3]
   1dd9c:	and	r3, r3, #2048	; 0x800
   1dda0:	cmp	r3, #0
   1dda4:	bne	1ddb0 <__assert_fail@plt+0xb6c4>
   1dda8:	mov	r3, #0
   1ddac:	b	1dea0 <__assert_fail@plt+0xb7b4>
   1ddb0:	ldrb	r3, [fp, #-5]
   1ddb4:	eor	r3, r3, #1
   1ddb8:	uxtb	r3, r3
   1ddbc:	cmp	r3, #0
   1ddc0:	beq	1dde8 <__assert_fail@plt+0xb6fc>
   1ddc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddc8:	ldr	r2, [fp, #-12]
   1ddcc:	str	r2, [r3]
   1ddd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddd4:	mov	r2, #1
   1ddd8:	str	r2, [r3]
   1dddc:	mov	r3, #1
   1dde0:	strb	r3, [fp, #-5]
   1dde4:	b	1de28 <__assert_fail@plt+0xb73c>
   1dde8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddec:	ldr	r3, [r3]
   1ddf0:	ldr	r2, [fp, #-12]
   1ddf4:	sub	r2, r2, r3
   1ddf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddfc:	ldr	r3, [r3]
   1de00:	cmp	r2, r3
   1de04:	bne	1de20 <__assert_fail@plt+0xb734>
   1de08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de0c:	ldr	r3, [r3]
   1de10:	add	r2, r3, #1
   1de14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de18:	str	r2, [r3]
   1de1c:	b	1de28 <__assert_fail@plt+0xb73c>
   1de20:	mov	r3, #0
   1de24:	b	1dea0 <__assert_fail@plt+0xb7b4>
   1de28:	ldr	r3, [fp, #-12]
   1de2c:	add	r3, r3, #1
   1de30:	str	r3, [fp, #-12]
   1de34:	ldr	r2, [fp, #-16]
   1de38:	ldr	r3, [fp, #-12]
   1de3c:	add	r3, r2, r3
   1de40:	ldrb	r3, [r3]
   1de44:	cmp	r3, #0
   1de48:	beq	1de64 <__assert_fail@plt+0xb778>
   1de4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1de50:	ldr	r3, [fp, #-12]
   1de54:	add	r3, r2, r3
   1de58:	ldrb	r3, [r3]
   1de5c:	cmp	r3, #0
   1de60:	bne	1dd18 <__assert_fail@plt+0xb62c>
   1de64:	ldr	r2, [fp, #-16]
   1de68:	ldr	r3, [fp, #-12]
   1de6c:	add	r3, r2, r3
   1de70:	ldrb	r3, [r3]
   1de74:	cmp	r3, #0
   1de78:	bne	1de94 <__assert_fail@plt+0xb7a8>
   1de7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1de80:	ldr	r3, [fp, #-12]
   1de84:	add	r3, r2, r3
   1de88:	ldrb	r3, [r3]
   1de8c:	cmp	r3, #0
   1de90:	beq	1de9c <__assert_fail@plt+0xb7b0>
   1de94:	mov	r3, #0
   1de98:	b	1dea0 <__assert_fail@plt+0xb7b4>
   1de9c:	mov	r3, #1
   1dea0:	mov	r0, r3
   1dea4:	sub	sp, fp, #4
   1dea8:	pop	{fp, pc}
   1deac:	push	{r4, fp, lr}
   1deb0:	add	fp, sp, #8
   1deb4:	sub	sp, sp, #100	; 0x64
   1deb8:	str	r0, [fp, #-96]	; 0xffffffa0
   1debc:	str	r1, [fp, #-100]	; 0xffffff9c
   1dec0:	str	r2, [fp, #-104]	; 0xffffff98
   1dec4:	str	r3, [fp, #-108]	; 0xffffff94
   1dec8:	mov	r3, #0
   1decc:	str	r3, [fp, #-16]
   1ded0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ded4:	bl	123bc <strlen@plt>
   1ded8:	mov	r3, r0
   1dedc:	add	r3, r3, #2
   1dee0:	mov	r0, r3
   1dee4:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1dee8:	mov	r3, r0
   1deec:	str	r3, [fp, #-16]
   1def0:	ldr	r3, [fp, #-16]
   1def4:	mov	r2, #95	; 0x5f
   1def8:	strb	r2, [r3]
   1defc:	ldr	r3, [fp, #-16]
   1df00:	add	r4, r3, #1
   1df04:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1df08:	bl	123bc <strlen@plt>
   1df0c:	mov	r3, r0
   1df10:	add	r3, r3, #1
   1df14:	mov	r2, r3
   1df18:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1df1c:	mov	r0, r4
   1df20:	bl	120f8 <memcpy@plt>
   1df24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1df28:	sub	ip, fp, #80	; 0x50
   1df2c:	mov	lr, r3
   1df30:	ldm	lr!, {r0, r1, r2, r3}
   1df34:	stmia	ip!, {r0, r1, r2, r3}
   1df38:	ldm	lr!, {r0, r1, r2, r3}
   1df3c:	stmia	ip!, {r0, r1, r2, r3}
   1df40:	ldm	lr, {r0, r1, r2}
   1df44:	stm	ip, {r0, r1, r2}
   1df48:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1df4c:	cmp	r3, #10
   1df50:	ble	1df64 <__assert_fail@plt+0xb878>
   1df54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1df58:	sub	r3, r3, #11
   1df5c:	str	r3, [fp, #-80]	; 0xffffffb0
   1df60:	b	1df70 <__assert_fail@plt+0xb884>
   1df64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1df68:	add	r3, r3, #11
   1df6c:	str	r3, [fp, #-80]	; 0xffffffb0
   1df70:	ldr	r3, [pc, #612]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1df74:	ldr	r3, [r3]
   1df78:	cmp	r3, #0
   1df7c:	bne	1dfac <__assert_fail@plt+0xb8c0>
   1df80:	ldr	r3, [pc, #600]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1df84:	mov	r2, #1
   1df88:	str	r2, [r3]
   1df8c:	ldr	r3, [pc, #588]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1df90:	ldr	r3, [r3]
   1df94:	mov	r0, r3
   1df98:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1df9c:	mov	r3, r0
   1dfa0:	mov	r2, r3
   1dfa4:	ldr	r3, [pc, #560]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1dfa8:	str	r2, [r3]
   1dfac:	ldr	r3, [pc, #552]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1dfb0:	ldr	r0, [r3]
   1dfb4:	ldr	r3, [pc, #548]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1dfb8:	ldr	r1, [r3]
   1dfbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dfc0:	ldr	r2, [fp, #-16]
   1dfc4:	bl	1232c <strftime@plt>
   1dfc8:	str	r0, [fp, #-20]	; 0xffffffec
   1dfcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfd0:	cmp	r3, #0
   1dfd4:	beq	1e1a8 <__assert_fail@plt+0xbabc>
   1dfd8:	ldr	r3, [pc, #512]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1dfdc:	ldr	r3, [r3]
   1dfe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dfe4:	cmp	r2, r3
   1dfe8:	bcs	1e1a8 <__assert_fail@plt+0xbabc>
   1dfec:	mov	r3, #0
   1dff0:	str	r3, [fp, #-84]	; 0xffffffac
   1dff4:	mov	r3, #0
   1dff8:	str	r3, [fp, #-88]	; 0xffffffa8
   1dffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e000:	ldr	r3, [fp, #-108]	; 0xffffff94
   1e004:	add	r3, r2, r3
   1e008:	add	r3, r3, #1
   1e00c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e010:	ldr	r3, [pc, #452]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e014:	ldr	r3, [r3]
   1e018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e01c:	mov	r0, r3
   1e020:	bl	3d208 <__assert_fail@plt+0x2ab1c>
   1e024:	mov	r2, r0
   1e028:	ldr	r3, [pc, #428]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e02c:	str	r2, [r3]
   1e030:	ldr	r2, [pc, #424]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1e034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e038:	str	r3, [r2]
   1e03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e040:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1e044:	mov	r3, r0
   1e048:	str	r3, [fp, #-28]	; 0xffffffe4
   1e04c:	ldr	r3, [pc, #396]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1e050:	ldr	r1, [r3]
   1e054:	sub	r3, fp, #80	; 0x50
   1e058:	ldr	r2, [fp, #-16]
   1e05c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e060:	bl	1232c <strftime@plt>
   1e064:	ldr	r3, [pc, #368]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e068:	ldr	r0, [r3]
   1e06c:	sub	r3, fp, #88	; 0x58
   1e070:	sub	r2, fp, #84	; 0x54
   1e074:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e078:	bl	1dce8 <__assert_fail@plt+0xb5fc>
   1e07c:	mov	r3, r0
   1e080:	cmp	r3, #0
   1e084:	beq	1e188 <__assert_fail@plt+0xba9c>
   1e088:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e08c:	cmp	r3, #2
   1e090:	bne	1e188 <__assert_fail@plt+0xba9c>
   1e094:	bl	12368 <__ctype_b_loc@plt>
   1e098:	mov	r3, r0
   1e09c:	ldr	r2, [r3]
   1e0a0:	ldr	r3, [pc, #308]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e0a4:	ldr	r1, [r3]
   1e0a8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e0b0:	add	r3, r0, r3
   1e0b4:	add	r3, r1, r3
   1e0b8:	ldrb	r3, [r3]
   1e0bc:	lsl	r3, r3, #1
   1e0c0:	add	r3, r2, r3
   1e0c4:	ldrh	r3, [r3]
   1e0c8:	and	r3, r3, #2048	; 0x800
   1e0cc:	cmp	r3, #0
   1e0d0:	bne	1e188 <__assert_fail@plt+0xba9c>
   1e0d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1e0d8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e0dc:	add	r3, r2, r3
   1e0e0:	str	r3, [fp, #-32]	; 0xffffffe0
   1e0e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0ec:	sub	r3, r2, r3
   1e0f0:	add	r3, r3, #1
   1e0f4:	str	r3, [fp, #-36]	; 0xffffffdc
   1e0f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e0fc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1e100:	add	r2, r2, r3
   1e104:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e108:	add	r2, r2, r3
   1e10c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e110:	cmp	r2, r3
   1e114:	beq	1e12c <__assert_fail@plt+0xba40>
   1e118:	ldr	r3, [pc, #196]	; 1e1e4 <__assert_fail@plt+0xbaf8>
   1e11c:	ldr	r2, [pc, #196]	; 1e1e8 <__assert_fail@plt+0xbafc>
   1e120:	ldr	r1, [pc, #196]	; 1e1ec <__assert_fail@plt+0xbb00>
   1e124:	ldr	r0, [pc, #196]	; 1e1f0 <__assert_fail@plt+0xbb04>
   1e128:	bl	126ec <__assert_fail@plt>
   1e12c:	ldr	r3, [pc, #168]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e130:	ldr	r2, [r3]
   1e134:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e138:	ldr	r3, [fp, #-108]	; 0xffffff94
   1e13c:	add	r3, r1, r3
   1e140:	add	r0, r2, r3
   1e144:	ldr	r3, [pc, #144]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e148:	ldr	r2, [r3]
   1e14c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e150:	add	r3, r2, r3
   1e154:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e158:	mov	r1, r3
   1e15c:	bl	1208c <memmove@plt>
   1e160:	ldr	r3, [pc, #116]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e164:	ldr	r2, [r3]
   1e168:	ldr	r1, [fp, #-84]	; 0xffffffac
   1e16c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e170:	add	r3, r1, r3
   1e174:	add	r3, r2, r3
   1e178:	ldr	r2, [fp, #-108]	; 0xffffff94
   1e17c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1e180:	mov	r0, r3
   1e184:	bl	120f8 <memcpy@plt>
   1e188:	ldr	r0, [fp, #-16]
   1e18c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1e190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e194:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1e198:	ldr	r3, [pc, #60]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e19c:	ldr	r3, [r3]
   1e1a0:	add	r3, r3, #1
   1e1a4:	b	1e1d0 <__assert_fail@plt+0xbae4>
   1e1a8:	ldr	r3, [pc, #44]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e1ac:	ldr	r3, [r3]
   1e1b0:	mov	r2, #1
   1e1b4:	ldr	r1, [pc, #36]	; 1e1e0 <__assert_fail@plt+0xbaf4>
   1e1b8:	mov	r0, r3
   1e1bc:	bl	3d3f0 <__assert_fail@plt+0x2ad04>
   1e1c0:	mov	r2, r0
   1e1c4:	ldr	r3, [pc, #16]	; 1e1dc <__assert_fail@plt+0xbaf0>
   1e1c8:	str	r2, [r3]
   1e1cc:	b	1dfac <__assert_fail@plt+0xb8c0>
   1e1d0:	mov	r0, r3
   1e1d4:	sub	sp, fp, #8
   1e1d8:	pop	{r4, fp, pc}
   1e1dc:	andeq	ip, r7, r8, ror r7
   1e1e0:	andeq	ip, r7, ip, ror r7
   1e1e4:	andeq	r6, r6, r8, lsr #17
   1e1e8:	andeq	r0, r0, r5, lsr #4
   1e1ec:	andeq	r6, r6, r4, asr #8
   1e1f0:	andeq	r6, r6, r0, lsr r6
   1e1f4:	push	{fp, lr}
   1e1f8:	add	fp, sp, #4
   1e1fc:	sub	sp, sp, #120	; 0x78
   1e200:	sub	r3, fp, #100	; 0x64
   1e204:	stm	r3, {r0, r1}
   1e208:	str	r2, [fp, #-104]	; 0xffffff98
   1e20c:	mov	r3, #0
   1e210:	str	r3, [fp, #-8]
   1e214:	mov	r3, #0
   1e218:	str	r3, [fp, #-12]
   1e21c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e220:	cmp	r3, #43	; 0x2b
   1e224:	bne	1e244 <__assert_fail@plt+0xbb58>
   1e228:	ldr	r2, [pc, #804]	; 1e554 <__assert_fail@plt+0xbe68>
   1e22c:	sub	r3, fp, #92	; 0x5c
   1e230:	ldm	r2, {r0, r1, r2}
   1e234:	stm	r3, {r0, r1, r2}
   1e238:	mov	r3, #1
   1e23c:	str	r3, [fp, #-12]
   1e240:	b	1e2f0 <__assert_fail@plt+0xbc04>
   1e244:	mov	r3, #37	; 0x25
   1e248:	strb	r3, [fp, #-92]	; 0xffffffa4
   1e24c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e250:	uxtb	r3, r3
   1e254:	strb	r3, [fp, #-91]	; 0xffffffa5
   1e258:	mov	r3, #0
   1e25c:	strb	r3, [fp, #-90]	; 0xffffffa6
   1e260:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e264:	sub	r3, r3, #64	; 0x40
   1e268:	cmp	r3, #24
   1e26c:	ldrls	pc, [pc, r3, lsl #2]
   1e270:	b	1e2e4 <__assert_fail@plt+0xbbf8>
   1e274:	ldrdeq	lr, [r1], -r8
   1e278:	andeq	lr, r1, r4, ror #5
   1e27c:	andeq	lr, r1, r4, ror #5
   1e280:	andeq	lr, r1, r4, ror #5
   1e284:	andeq	lr, r1, r4, ror #5
   1e288:	andeq	lr, r1, r4, ror #5
   1e28c:	andeq	lr, r1, r4, ror #5
   1e290:	andeq	lr, r1, r4, ror #5
   1e294:	andeq	lr, r1, r4, ror #5
   1e298:	andeq	lr, r1, r4, ror #5
   1e29c:	andeq	lr, r1, r4, ror #5
   1e2a0:	andeq	lr, r1, r4, ror #5
   1e2a4:	andeq	lr, r1, r4, ror #5
   1e2a8:	andeq	lr, r1, r4, ror #5
   1e2ac:	andeq	lr, r1, r4, ror #5
   1e2b0:	andeq	lr, r1, r4, ror #5
   1e2b4:	andeq	lr, r1, r4, ror #5
   1e2b8:	andeq	lr, r1, r4, ror #5
   1e2bc:	andeq	lr, r1, r4, ror #5
   1e2c0:	ldrdeq	lr, [r1], -r8
   1e2c4:	ldrdeq	lr, [r1], -r8
   1e2c8:	andeq	lr, r1, r4, ror #5
   1e2cc:	andeq	lr, r1, r4, ror #5
   1e2d0:	andeq	lr, r1, r4, ror #5
   1e2d4:	ldrdeq	lr, [r1], -r8
   1e2d8:	mov	r3, #1
   1e2dc:	str	r3, [fp, #-12]
   1e2e0:	b	1e2f0 <__assert_fail@plt+0xbc04>
   1e2e4:	mov	r3, #0
   1e2e8:	str	r3, [fp, #-12]
   1e2ec:	nop			; (mov r0, r0)
   1e2f0:	ldr	r3, [fp, #-12]
   1e2f4:	cmp	r3, #0
   1e2f8:	beq	1e334 <__assert_fail@plt+0xbc48>
   1e2fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1e300:	sub	r0, fp, #80	; 0x50
   1e304:	ldr	r2, [pc, #588]	; 1e558 <__assert_fail@plt+0xbe6c>
   1e308:	mov	r1, #32
   1e30c:	bl	1241c <snprintf@plt>
   1e310:	str	r0, [fp, #-8]
   1e314:	ldr	r3, [fp, #-8]
   1e318:	cmp	r3, #31
   1e31c:	ble	1e344 <__assert_fail@plt+0xbc58>
   1e320:	ldr	r3, [pc, #564]	; 1e55c <__assert_fail@plt+0xbe70>
   1e324:	ldr	r2, [pc, #564]	; 1e560 <__assert_fail@plt+0xbe74>
   1e328:	ldr	r1, [pc, #564]	; 1e564 <__assert_fail@plt+0xbe78>
   1e32c:	ldr	r0, [pc, #564]	; 1e568 <__assert_fail@plt+0xbe7c>
   1e330:	bl	126ec <__assert_fail@plt>
   1e334:	mov	r3, #0
   1e338:	str	r3, [fp, #-8]
   1e33c:	mov	r3, #0
   1e340:	strb	r3, [fp, #-80]	; 0xffffffb0
   1e344:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e348:	cmp	r3, #64	; 0x40
   1e34c:	beq	1e398 <__assert_fail@plt+0xbcac>
   1e350:	sub	r3, fp, #100	; 0x64
   1e354:	mov	r0, r3
   1e358:	bl	12344 <localtime@plt>
   1e35c:	str	r0, [fp, #-20]	; 0xffffffec
   1e360:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e364:	cmp	r3, #0
   1e368:	beq	1e398 <__assert_fail@plt+0xbcac>
   1e36c:	ldr	r3, [fp, #-8]
   1e370:	sub	r2, fp, #80	; 0x50
   1e374:	sub	r0, fp, #92	; 0x5c
   1e378:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e37c:	bl	1deac <__assert_fail@plt+0xb7c0>
   1e380:	str	r0, [fp, #-24]	; 0xffffffe8
   1e384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e388:	cmp	r3, #0
   1e38c:	beq	1e398 <__assert_fail@plt+0xbcac>
   1e390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e394:	b	1e548 <__assert_fail@plt+0xbe5c>
   1e398:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1e39c:	mov	r2, r3
   1e3a0:	asr	r3, r2, #31
   1e3a4:	strd	r2, [fp, #-36]	; 0xffffffdc
   1e3a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1e3ac:	cmp	r3, #0
   1e3b0:	bge	1e3c4 <__assert_fail@plt+0xbcd8>
   1e3b4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1e3b8:	rsbs	r0, r2, #0
   1e3bc:	rsc	r1, r3, #0
   1e3c0:	b	1e3c8 <__assert_fail@plt+0xbcdc>
   1e3c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1e3c8:	ldr	ip, [pc, #412]	; 1e56c <__assert_fail@plt+0xbe80>
   1e3cc:	mov	r2, #1
   1e3d0:	mov	r3, #0
   1e3d4:	strd	r2, [sp, #8]
   1e3d8:	mov	r2, #1
   1e3dc:	mov	r3, #0
   1e3e0:	strd	r2, [sp]
   1e3e4:	mov	r3, #0
   1e3e8:	mov	r2, ip
   1e3ec:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1e3f0:	str	r0, [fp, #-16]
   1e3f4:	ldr	r3, [fp, #-16]
   1e3f8:	ldr	r2, [pc, #368]	; 1e570 <__assert_fail@plt+0xbe84>
   1e3fc:	cmp	r3, r2
   1e400:	bhi	1e418 <__assert_fail@plt+0xbd2c>
   1e404:	ldr	r3, [pc, #336]	; 1e55c <__assert_fail@plt+0xbe70>
   1e408:	ldr	r2, [pc, #356]	; 1e574 <__assert_fail@plt+0xbe88>
   1e40c:	ldr	r1, [pc, #336]	; 1e564 <__assert_fail@plt+0xbe78>
   1e410:	ldr	r0, [pc, #352]	; 1e578 <__assert_fail@plt+0xbe8c>
   1e414:	bl	126ec <__assert_fail@plt>
   1e418:	ldr	r2, [pc, #348]	; 1e57c <__assert_fail@plt+0xbe90>
   1e41c:	ldr	r3, [fp, #-16]
   1e420:	cmp	r3, r2
   1e424:	bcc	1e43c <__assert_fail@plt+0xbd50>
   1e428:	ldr	r3, [pc, #300]	; 1e55c <__assert_fail@plt+0xbe70>
   1e42c:	ldr	r2, [pc, #332]	; 1e580 <__assert_fail@plt+0xbe94>
   1e430:	ldr	r1, [pc, #300]	; 1e564 <__assert_fail@plt+0xbe78>
   1e434:	ldr	r0, [pc, #328]	; 1e584 <__assert_fail@plt+0xbe98>
   1e438:	bl	126ec <__assert_fail@plt>
   1e43c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1e440:	cmp	r3, #0
   1e444:	bge	1e460 <__assert_fail@plt+0xbd74>
   1e448:	ldr	r3, [fp, #-16]
   1e44c:	sub	r3, r3, #1
   1e450:	str	r3, [fp, #-16]
   1e454:	ldr	r3, [fp, #-16]
   1e458:	mov	r2, #45	; 0x2d
   1e45c:	strb	r2, [r3]
   1e460:	ldr	r3, [fp, #-12]
   1e464:	cmp	r3, #0
   1e468:	beq	1e544 <__assert_fail@plt+0xbe58>
   1e46c:	ldr	r0, [fp, #-16]
   1e470:	bl	123bc <strlen@plt>
   1e474:	str	r0, [fp, #-40]	; 0xffffffd8
   1e478:	ldr	r2, [fp, #-16]
   1e47c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e480:	add	r3, r2, r3
   1e484:	ldr	r2, [pc, #228]	; 1e570 <__assert_fail@plt+0xbe84>
   1e488:	sub	r3, r3, r2
   1e48c:	str	r3, [fp, #-44]	; 0xffffffd4
   1e490:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e494:	ldr	r2, [pc, #236]	; 1e588 <__assert_fail@plt+0xbe9c>
   1e498:	cmp	r3, r2
   1e49c:	bls	1e4b4 <__assert_fail@plt+0xbdc8>
   1e4a0:	ldr	r3, [pc, #180]	; 1e55c <__assert_fail@plt+0xbe70>
   1e4a4:	ldr	r2, [pc, #224]	; 1e58c <__assert_fail@plt+0xbea0>
   1e4a8:	ldr	r1, [pc, #180]	; 1e564 <__assert_fail@plt+0xbe78>
   1e4ac:	ldr	r0, [pc, #220]	; 1e590 <__assert_fail@plt+0xbea4>
   1e4b0:	bl	126ec <__assert_fail@plt>
   1e4b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e4b8:	rsb	r3, r3, #788	; 0x314
   1e4bc:	add	r3, r3, #2
   1e4c0:	str	r3, [fp, #-48]	; 0xffffffd0
   1e4c4:	sub	r3, fp, #80	; 0x50
   1e4c8:	mov	r0, r3
   1e4cc:	bl	123bc <strlen@plt>
   1e4d0:	mov	r2, r0
   1e4d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e4d8:	cmp	r2, r3
   1e4dc:	bcc	1e504 <__assert_fail@plt+0xbe18>
   1e4e0:	sub	r3, fp, #80	; 0x50
   1e4e4:	str	r3, [sp, #4]
   1e4e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e4ec:	str	r3, [sp]
   1e4f0:	ldr	r3, [fp, #-8]
   1e4f4:	ldr	r2, [pc, #152]	; 1e594 <__assert_fail@plt+0xbea8>
   1e4f8:	mov	r1, #0
   1e4fc:	mov	r0, #0
   1e500:	bl	122b4 <error@plt>
   1e504:	sub	r3, fp, #80	; 0x50
   1e508:	mov	r0, r3
   1e50c:	bl	123bc <strlen@plt>
   1e510:	mov	r2, r0
   1e514:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e518:	cmp	r2, r3
   1e51c:	bcc	1e534 <__assert_fail@plt+0xbe48>
   1e520:	ldr	r3, [pc, #52]	; 1e55c <__assert_fail@plt+0xbe70>
   1e524:	mov	r2, #720	; 0x2d0
   1e528:	ldr	r1, [pc, #52]	; 1e564 <__assert_fail@plt+0xbe78>
   1e52c:	ldr	r0, [pc, #100]	; 1e598 <__assert_fail@plt+0xbeac>
   1e530:	bl	126ec <__assert_fail@plt>
   1e534:	sub	r3, fp, #80	; 0x50
   1e538:	mov	r1, r3
   1e53c:	ldr	r0, [fp, #-16]
   1e540:	bl	12230 <strcat@plt>
   1e544:	ldr	r3, [fp, #-16]
   1e548:	mov	r0, r3
   1e54c:	sub	sp, fp, #4
   1e550:	pop	{fp, pc}
   1e554:	andeq	r6, r6, r4, ror #12
   1e558:	andeq	r6, r6, r0, ror r6
   1e55c:			; <UNDEFINED> instruction: 0x000668b8
   1e560:	muleq	r0, r9, r2
   1e564:	andeq	r6, r6, r4, asr #8
   1e568:	andeq	r6, r6, r8, ror r6
   1e56c:	andeq	ip, r7, r1, lsl #15
   1e570:	andeq	ip, r7, r0, lsl #15
   1e574:			; <UNDEFINED> instruction: 0x000002b9
   1e578:	muleq	r6, r4, r6
   1e57c:	muleq	r7, r7, sl
   1e580:			; <UNDEFINED> instruction: 0x000002ba
   1e584:	muleq	r6, ip, r6
   1e588:	andeq	r0, r0, r6, lsl r3
   1e58c:	andeq	r0, r0, r7, asr #5
   1e590:			; <UNDEFINED> instruction: 0x000666b8
   1e594:	andeq	r6, r6, ip, asr #13
   1e598:	strdeq	r6, [r6], -ip
   1e59c:	push	{r4, r5, fp, lr}
   1e5a0:	add	fp, sp, #12
   1e5a4:	sub	sp, sp, #48	; 0x30
   1e5a8:	sub	r3, fp, #28
   1e5ac:	stm	r3, {r0, r1}
   1e5b0:	sub	r3, fp, #28
   1e5b4:	mov	r0, r3
   1e5b8:	bl	12344 <localtime@plt>
   1e5bc:	str	r0, [fp, #-16]
   1e5c0:	ldr	r3, [fp, #-16]
   1e5c4:	cmp	r3, #0
   1e5c8:	beq	1e79c <__assert_fail@plt+0xc0b0>
   1e5cc:	ldr	r3, [fp, #-16]
   1e5d0:	ldr	r3, [r3, #24]
   1e5d4:	cmp	r3, #0
   1e5d8:	bge	1e5f0 <__assert_fail@plt+0xbf04>
   1e5dc:	ldr	r3, [pc, #472]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e5e0:	ldr	r2, [pc, #472]	; 1e7c0 <__assert_fail@plt+0xc0d4>
   1e5e4:	ldr	r1, [pc, #472]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e5e8:	ldr	r0, [pc, #472]	; 1e7c8 <__assert_fail@plt+0xc0dc>
   1e5ec:	bl	126ec <__assert_fail@plt>
   1e5f0:	ldr	r3, [fp, #-16]
   1e5f4:	ldr	r3, [r3, #24]
   1e5f8:	cmp	r3, #6
   1e5fc:	ble	1e614 <__assert_fail@plt+0xbf28>
   1e600:	ldr	r3, [pc, #436]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e604:	ldr	r2, [pc, #448]	; 1e7cc <__assert_fail@plt+0xc0e0>
   1e608:	ldr	r1, [pc, #436]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e60c:	ldr	r0, [pc, #444]	; 1e7d0 <__assert_fail@plt+0xc0e4>
   1e610:	bl	126ec <__assert_fail@plt>
   1e614:	ldr	r3, [fp, #-16]
   1e618:	ldr	r3, [r3, #16]
   1e61c:	cmp	r3, #0
   1e620:	bge	1e638 <__assert_fail@plt+0xbf4c>
   1e624:	ldr	r3, [pc, #400]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e628:	ldr	r2, [pc, #420]	; 1e7d4 <__assert_fail@plt+0xc0e8>
   1e62c:	ldr	r1, [pc, #400]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e630:	ldr	r0, [pc, #416]	; 1e7d8 <__assert_fail@plt+0xc0ec>
   1e634:	bl	126ec <__assert_fail@plt>
   1e638:	ldr	r3, [fp, #-16]
   1e63c:	ldr	r3, [r3, #16]
   1e640:	cmp	r3, #11
   1e644:	ble	1e65c <__assert_fail@plt+0xbf70>
   1e648:	ldr	r3, [pc, #364]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e64c:	mov	r2, #752	; 0x2f0
   1e650:	ldr	r1, [pc, #364]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e654:	ldr	r0, [pc, #384]	; 1e7dc <__assert_fail@plt+0xc0f0>
   1e658:	bl	126ec <__assert_fail@plt>
   1e65c:	ldr	r3, [fp, #-16]
   1e660:	ldr	r3, [r3, #8]
   1e664:	cmp	r3, #0
   1e668:	bge	1e680 <__assert_fail@plt+0xbf94>
   1e66c:	ldr	r3, [pc, #328]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e670:	ldr	r2, [pc, #360]	; 1e7e0 <__assert_fail@plt+0xc0f4>
   1e674:	ldr	r1, [pc, #328]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e678:	ldr	r0, [pc, #356]	; 1e7e4 <__assert_fail@plt+0xc0f8>
   1e67c:	bl	126ec <__assert_fail@plt>
   1e680:	ldr	r3, [fp, #-16]
   1e684:	ldr	r3, [r3, #8]
   1e688:	cmp	r3, #23
   1e68c:	ble	1e6a4 <__assert_fail@plt+0xbfb8>
   1e690:	ldr	r3, [pc, #292]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e694:	ldr	r2, [pc, #332]	; 1e7e8 <__assert_fail@plt+0xc0fc>
   1e698:	ldr	r1, [pc, #292]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e69c:	ldr	r0, [pc, #328]	; 1e7ec <__assert_fail@plt+0xc100>
   1e6a0:	bl	126ec <__assert_fail@plt>
   1e6a4:	ldr	r3, [fp, #-16]
   1e6a8:	ldr	r3, [r3, #4]
   1e6ac:	cmp	r3, #59	; 0x3b
   1e6b0:	ble	1e6c8 <__assert_fail@plt+0xbfdc>
   1e6b4:	ldr	r3, [pc, #256]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e6b8:	ldr	r2, [pc, #304]	; 1e7f0 <__assert_fail@plt+0xc104>
   1e6bc:	ldr	r1, [pc, #256]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e6c0:	ldr	r0, [pc, #300]	; 1e7f4 <__assert_fail@plt+0xc108>
   1e6c4:	bl	126ec <__assert_fail@plt>
   1e6c8:	ldr	r3, [fp, #-16]
   1e6cc:	ldr	r3, [r3]
   1e6d0:	cmp	r3, #61	; 0x3d
   1e6d4:	ble	1e6ec <__assert_fail@plt+0xc000>
   1e6d8:	ldr	r3, [pc, #220]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e6dc:	mov	r2, #756	; 0x2f4
   1e6e0:	ldr	r1, [pc, #220]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e6e4:	ldr	r0, [pc, #268]	; 1e7f8 <__assert_fail@plt+0xc10c>
   1e6e8:	bl	126ec <__assert_fail@plt>
   1e6ec:	ldr	r3, [fp, #-16]
   1e6f0:	ldr	r3, [r3, #24]
   1e6f4:	ldr	r2, [pc, #256]	; 1e7fc <__assert_fail@plt+0xc110>
   1e6f8:	ldr	r5, [r2, r3, lsl #2]
   1e6fc:	ldr	r3, [fp, #-16]
   1e700:	ldr	r3, [r3, #16]
   1e704:	ldr	r2, [pc, #244]	; 1e800 <__assert_fail@plt+0xc114>
   1e708:	ldr	r2, [r2, r3, lsl #2]
   1e70c:	ldr	r3, [fp, #-16]
   1e710:	ldr	r1, [r3, #12]
   1e714:	ldr	r3, [fp, #-16]
   1e718:	ldr	r0, [r3, #8]
   1e71c:	ldr	r3, [fp, #-16]
   1e720:	ldr	ip, [r3, #4]
   1e724:	ldr	r3, [fp, #-16]
   1e728:	ldr	lr, [r3]
   1e72c:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1e730:	ldr	r3, [fp, #-16]
   1e734:	ldr	r3, [r3, #20]
   1e738:	add	r3, r3, #1888	; 0x760
   1e73c:	add	r3, r3, #12
   1e740:	str	r3, [sp, #24]
   1e744:	str	r4, [sp, #20]
   1e748:	str	lr, [sp, #16]
   1e74c:	str	ip, [sp, #12]
   1e750:	str	r0, [sp, #8]
   1e754:	str	r1, [sp, #4]
   1e758:	str	r2, [sp]
   1e75c:	mov	r3, r5
   1e760:	ldr	r2, [pc, #156]	; 1e804 <__assert_fail@plt+0xc118>
   1e764:	mov	r1, #1024	; 0x400
   1e768:	ldr	r0, [pc, #152]	; 1e808 <__assert_fail@plt+0xc11c>
   1e76c:	bl	1241c <snprintf@plt>
   1e770:	str	r0, [fp, #-20]	; 0xffffffec
   1e774:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e778:	cmp	r3, #1024	; 0x400
   1e77c:	blt	1e794 <__assert_fail@plt+0xc0a8>
   1e780:	ldr	r3, [pc, #52]	; 1e7bc <__assert_fail@plt+0xc0d0>
   1e784:	ldr	r2, [pc, #128]	; 1e80c <__assert_fail@plt+0xc120>
   1e788:	ldr	r1, [pc, #52]	; 1e7c4 <__assert_fail@plt+0xc0d8>
   1e78c:	ldr	r0, [pc, #124]	; 1e810 <__assert_fail@plt+0xc124>
   1e790:	bl	126ec <__assert_fail@plt>
   1e794:	ldr	r3, [pc, #108]	; 1e808 <__assert_fail@plt+0xc11c>
   1e798:	b	1e7b0 <__assert_fail@plt+0xc0c4>
   1e79c:	mov	r2, #64	; 0x40
   1e7a0:	sub	r3, fp, #28
   1e7a4:	ldm	r3, {r0, r1}
   1e7a8:	bl	1e1f4 <__assert_fail@plt+0xbb08>
   1e7ac:	mov	r3, r0
   1e7b0:	mov	r0, r3
   1e7b4:	sub	sp, fp, #12
   1e7b8:	pop	{r4, r5, fp, pc}
   1e7bc:	andeq	r6, r6, r4, asr #17
   1e7c0:	andeq	r0, r0, sp, ror #5
   1e7c4:	andeq	r6, r6, r4, asr #8
   1e7c8:	andeq	r6, r6, r4, ror #14
   1e7cc:	andeq	r0, r0, lr, ror #5
   1e7d0:	andeq	r6, r6, r8, ror r7
   1e7d4:	andeq	r0, r0, pc, ror #5
   1e7d8:	andeq	r6, r6, ip, lsl #15
   1e7dc:	andeq	r6, r6, r0, lsr #15
   1e7e0:	strdeq	r0, [r0], -r1
   1e7e4:			; <UNDEFINED> instruction: 0x000667b4
   1e7e8:	strdeq	r0, [r0], -r2
   1e7ec:	andeq	r6, r6, r8, asr #15
   1e7f0:	strdeq	r0, [r0], -r3
   1e7f4:	ldrdeq	r6, [r6], -ip
   1e7f8:	strdeq	r6, [r6], -r0
   1e7fc:			; <UNDEFINED> instruction: 0x0007c5bc
   1e800:	ldrdeq	ip, [r7], -r8
   1e804:	andeq	r6, r6, r4, lsl #16
   1e808:	muleq	r7, r8, sl
   1e80c:	andeq	r0, r0, r2, lsl #6
   1e810:	andeq	r6, r6, ip, lsr #16
   1e814:	push	{fp, lr}
   1e818:	add	fp, sp, #4
   1e81c:	sub	sp, sp, #16
   1e820:	str	r0, [fp, #-16]
   1e824:	ldr	r3, [fp, #-16]
   1e828:	ldrd	r2, [r3, #48]	; 0x30
   1e82c:	orrs	r3, r2, r3
   1e830:	bne	1e870 <__assert_fail@plt+0xc184>
   1e834:	ldr	r3, [fp, #-16]
   1e838:	ldrd	r2, [r3, #64]	; 0x40
   1e83c:	orrs	r3, r2, r3
   1e840:	bne	1e84c <__assert_fail@plt+0xc160>
   1e844:	vldr	d7, [pc, #116]	; 1e8c0 <__assert_fail@plt+0xc1d4>
   1e848:	b	1e8b4 <__assert_fail@plt+0xc1c8>
   1e84c:	ldr	r3, [fp, #-16]
   1e850:	ldrd	r2, [r3, #64]	; 0x40
   1e854:	cmp	r2, #0
   1e858:	sbcs	r3, r3, #0
   1e85c:	bge	1e868 <__assert_fail@plt+0xc17c>
   1e860:	vldr	d7, [pc, #96]	; 1e8c8 <__assert_fail@plt+0xc1dc>
   1e864:	b	1e8b4 <__assert_fail@plt+0xc1c8>
   1e868:	vldr	d7, [pc, #96]	; 1e8d0 <__assert_fail@plt+0xc1e4>
   1e86c:	b	1e8b4 <__assert_fail@plt+0xc1c8>
   1e870:	ldr	r3, [fp, #-16]
   1e874:	ldrd	r2, [r3, #64]	; 0x40
   1e878:	mov	r0, r2
   1e87c:	mov	r1, r3
   1e880:	bl	63d18 <__assert_fail@plt+0x5162c>
   1e884:	vmov	d6, r0, r1
   1e888:	vldr	d7, [pc, #72]	; 1e8d8 <__assert_fail@plt+0xc1ec>
   1e88c:	vmul.f64	d7, d6, d7
   1e890:	vstr	d7, [fp, #-12]
   1e894:	ldr	r3, [fp, #-16]
   1e898:	ldrd	r2, [r3, #48]	; 0x30
   1e89c:	mov	r0, r2
   1e8a0:	mov	r1, r3
   1e8a4:	bl	63d18 <__assert_fail@plt+0x5162c>
   1e8a8:	vmov	d5, r0, r1
   1e8ac:	vldr	d6, [fp, #-12]
   1e8b0:	vdiv.f64	d7, d6, d5
   1e8b4:	vmov.f64	d0, d7
   1e8b8:	sub	sp, fp, #4
   1e8bc:	pop	{fp, pc}
   1e8c0:	andeq	r0, r0, r0
   1e8c4:	svccc	0x00f00000	; IMB
   1e8c8:	andeq	r0, r0, r0
   1e8cc:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   1e8d0:	andeq	r0, r0, r0
   1e8d4:	svcvc	0x00f00000	; IMB
   1e8d8:	andeq	r0, r0, r0
   1e8dc:	addmi	r0, r0, r0
   1e8e0:	push	{r1, r2, r3}
   1e8e4:	push	{fp, lr}
   1e8e8:	add	fp, sp, #4
   1e8ec:	sub	sp, sp, #20
   1e8f0:	str	r0, [fp, #-20]	; 0xffffffec
   1e8f4:	add	r3, fp, #8
   1e8f8:	str	r3, [fp, #-16]
   1e8fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e900:	ldr	r3, [r3, #4]
   1e904:	ldr	r2, [fp, #-16]
   1e908:	ldr	r1, [fp, #4]
   1e90c:	mov	r0, r3
   1e910:	bl	12554 <vfprintf@plt>
   1e914:	str	r0, [fp, #-12]
   1e918:	ldr	r3, [fp, #-12]
   1e91c:	cmp	r3, #0
   1e920:	bge	1e944 <__assert_fail@plt+0xc258>
   1e924:	bl	12404 <__errno_location@plt>
   1e928:	mov	r3, r0
   1e92c:	ldr	r2, [r3]
   1e930:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e934:	ldr	r3, [r3, #8]
   1e938:	mov	r1, r3
   1e93c:	mov	r0, r2
   1e940:	bl	1c940 <__assert_fail@plt+0xa254>
   1e944:	nop			; (mov r0, r0)
   1e948:	sub	sp, fp, #4
   1e94c:	pop	{fp, lr}
   1e950:	add	sp, sp, #12
   1e954:	bx	lr
   1e958:	push	{fp, lr}
   1e95c:	add	fp, sp, #4
   1e960:	sub	sp, sp, #32
   1e964:	str	r0, [fp, #-16]
   1e968:	str	r1, [fp, #-20]	; 0xffffffec
   1e96c:	str	r2, [fp, #-24]	; 0xffffffe8
   1e970:	ldr	r3, [fp, #-16]
   1e974:	ldr	r0, [r3, #4]
   1e978:	ldr	r3, [fp, #-16]
   1e97c:	ldr	r1, [r3, #16]
   1e980:	ldr	r3, [fp, #-16]
   1e984:	ldrb	r2, [r3, #12]
   1e988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e98c:	str	r3, [sp]
   1e990:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e994:	bl	28e50 <__assert_fail@plt+0x16764>
   1e998:	str	r0, [fp, #-8]
   1e99c:	ldr	r3, [fp, #-8]
   1e9a0:	cmp	r3, #0
   1e9a4:	bge	1e9c8 <__assert_fail@plt+0xc2dc>
   1e9a8:	bl	12404 <__errno_location@plt>
   1e9ac:	mov	r3, r0
   1e9b0:	ldr	r2, [r3]
   1e9b4:	ldr	r3, [fp, #-16]
   1e9b8:	ldr	r3, [r3, #8]
   1e9bc:	mov	r1, r3
   1e9c0:	mov	r0, r2
   1e9c4:	bl	1c940 <__assert_fail@plt+0xa254>
   1e9c8:	nop			; (mov r0, r0)
   1e9cc:	sub	sp, fp, #4
   1e9d0:	pop	{fp, pc}
   1e9d4:	push	{fp, lr}
   1e9d8:	add	fp, sp, #4
   1e9dc:	sub	sp, sp, #24
   1e9e0:	str	r0, [fp, #-16]
   1e9e4:	str	r1, [fp, #-20]	; 0xffffffec
   1e9e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1e9ec:	str	r3, [fp, #-28]	; 0xffffffe4
   1e9f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e9f4:	ldr	r3, [r3, #4]
   1e9f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e9fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ea00:	ldr	r0, [fp, #-16]
   1ea04:	bl	12224 <fwrite@plt>
   1ea08:	str	r0, [fp, #-8]
   1ea0c:	ldr	r2, [fp, #-8]
   1ea10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea14:	cmp	r2, r3
   1ea18:	bcs	1ea3c <__assert_fail@plt+0xc350>
   1ea1c:	bl	12404 <__errno_location@plt>
   1ea20:	mov	r3, r0
   1ea24:	ldr	r2, [r3]
   1ea28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea2c:	ldr	r3, [r3, #8]
   1ea30:	mov	r1, r3
   1ea34:	mov	r0, r2
   1ea38:	bl	1c940 <__assert_fail@plt+0xa254>
   1ea3c:	nop			; (mov r0, r0)
   1ea40:	sub	sp, fp, #4
   1ea44:	pop	{fp, pc}
   1ea48:	push	{fp, lr}
   1ea4c:	add	fp, sp, #4
   1ea50:	sub	sp, sp, #8
   1ea54:	str	r0, [fp, #-8]
   1ea58:	ldr	r3, [fp, #-8]
   1ea5c:	ldr	r3, [r3, #4]
   1ea60:	mov	r0, r3
   1ea64:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   1ea68:	mov	r3, r0
   1ea6c:	cmp	r3, #0
   1ea70:	beq	1ea94 <__assert_fail@plt+0xc3a8>
   1ea74:	bl	12404 <__errno_location@plt>
   1ea78:	mov	r3, r0
   1ea7c:	ldr	r2, [r3]
   1ea80:	ldr	r3, [fp, #-8]
   1ea84:	ldr	r3, [r3, #8]
   1ea88:	mov	r1, r3
   1ea8c:	mov	r0, r2
   1ea90:	bl	1c940 <__assert_fail@plt+0xa254>
   1ea94:	nop			; (mov r0, r0)
   1ea98:	sub	sp, fp, #4
   1ea9c:	pop	{fp, pc}
   1eaa0:	push	{fp}		; (str fp, [sp, #-4]!)
   1eaa4:	add	fp, sp, #0
   1eaa8:	sub	sp, sp, #12
   1eaac:	str	r0, [fp, #-8]
   1eab0:	ldr	r3, [fp, #-8]
   1eab4:	cmp	r3, #32768	; 0x8000
   1eab8:	bne	1eac4 <__assert_fail@plt+0xc3d8>
   1eabc:	ldr	r3, [pc, #140]	; 1eb50 <__assert_fail@plt+0xc464>
   1eac0:	b	1eb40 <__assert_fail@plt+0xc454>
   1eac4:	ldr	r3, [fp, #-8]
   1eac8:	cmp	r3, #16384	; 0x4000
   1eacc:	bne	1ead8 <__assert_fail@plt+0xc3ec>
   1ead0:	ldr	r3, [pc, #124]	; 1eb54 <__assert_fail@plt+0xc468>
   1ead4:	b	1eb40 <__assert_fail@plt+0xc454>
   1ead8:	ldr	r3, [fp, #-8]
   1eadc:	cmp	r3, #40960	; 0xa000
   1eae0:	bne	1eaec <__assert_fail@plt+0xc400>
   1eae4:	ldr	r3, [pc, #108]	; 1eb58 <__assert_fail@plt+0xc46c>
   1eae8:	b	1eb40 <__assert_fail@plt+0xc454>
   1eaec:	ldr	r3, [fp, #-8]
   1eaf0:	cmp	r3, #49152	; 0xc000
   1eaf4:	bne	1eb00 <__assert_fail@plt+0xc414>
   1eaf8:	ldr	r3, [pc, #92]	; 1eb5c <__assert_fail@plt+0xc470>
   1eafc:	b	1eb40 <__assert_fail@plt+0xc454>
   1eb00:	ldr	r3, [fp, #-8]
   1eb04:	cmp	r3, #24576	; 0x6000
   1eb08:	bne	1eb14 <__assert_fail@plt+0xc428>
   1eb0c:	ldr	r3, [pc, #76]	; 1eb60 <__assert_fail@plt+0xc474>
   1eb10:	b	1eb40 <__assert_fail@plt+0xc454>
   1eb14:	ldr	r3, [fp, #-8]
   1eb18:	cmp	r3, #8192	; 0x2000
   1eb1c:	bne	1eb28 <__assert_fail@plt+0xc43c>
   1eb20:	ldr	r3, [pc, #60]	; 1eb64 <__assert_fail@plt+0xc478>
   1eb24:	b	1eb40 <__assert_fail@plt+0xc454>
   1eb28:	ldr	r3, [fp, #-8]
   1eb2c:	cmp	r3, #4096	; 0x1000
   1eb30:	bne	1eb3c <__assert_fail@plt+0xc450>
   1eb34:	ldr	r3, [pc, #44]	; 1eb68 <__assert_fail@plt+0xc47c>
   1eb38:	b	1eb40 <__assert_fail@plt+0xc454>
   1eb3c:	ldr	r3, [pc, #40]	; 1eb6c <__assert_fail@plt+0xc480>
   1eb40:	mov	r0, r3
   1eb44:	add	sp, fp, #0
   1eb48:	pop	{fp}		; (ldr fp, [sp], #4)
   1eb4c:	bx	lr
   1eb50:	andeq	r6, r6, r0, asr #16
   1eb54:	andeq	r6, r6, r4, asr #16
   1eb58:	andeq	r6, r6, r8, asr #16
   1eb5c:	andeq	r6, r6, ip, asr #16
   1eb60:	andeq	r6, r6, r0, asr r8
   1eb64:	andeq	r6, r6, r4, asr r8
   1eb68:	andeq	r6, r6, r8, asr r8
   1eb6c:	andeq	r6, r6, ip, asr r8
   1eb70:	push	{r4, r5, r6, r7, fp, lr}
   1eb74:	add	fp, sp, #20
   1eb78:	sub	sp, sp, #880	; 0x370
   1eb7c:	str	r0, [fp, #-872]	; 0xfffffc98
   1eb80:	str	r1, [fp, #-876]	; 0xfffffc94
   1eb84:	str	r2, [fp, #-880]	; 0xfffffc90
   1eb88:	str	r3, [fp, #-884]	; 0xfffffc8c
   1eb8c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1eb90:	ldr	r3, [r3]
   1eb94:	cmp	r3, #1
   1eb98:	beq	1ebd4 <__assert_fail@plt+0xc4e8>
   1eb9c:	cmp	r3, #1
   1eba0:	bcc	1ebb0 <__assert_fail@plt+0xc4c4>
   1eba4:	cmp	r3, #2
   1eba8:	beq	1ec00 <__assert_fail@plt+0xc514>
   1ebac:	b	1f8bc <__assert_fail@plt+0xd1d0>
   1ebb0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ebb4:	ldr	r0, [r3, #8]
   1ebb8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ebbc:	ldr	r3, [r3, #12]
   1ebc0:	mov	r2, r3
   1ebc4:	ldr	r3, [fp, #-872]	; 0xfffffc98
   1ebc8:	mov	r1, #1
   1ebcc:	bl	1e9d4 <__assert_fail@plt+0xc2e8>
   1ebd0:	b	1f8bc <__assert_fail@plt+0xd1d0>
   1ebd4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ebd8:	ldr	r0, [r3, #8]
   1ebdc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ebe0:	ldr	r3, [r3, #12]
   1ebe4:	mov	r2, r3
   1ebe8:	ldr	r3, [fp, #-872]	; 0xfffffc98
   1ebec:	mov	r1, #1
   1ebf0:	bl	1e9d4 <__assert_fail@plt+0xc2e8>
   1ebf4:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ebf8:	bl	1ea48 <__assert_fail@plt+0xc35c>
   1ebfc:	b	1f8bc <__assert_fail@plt+0xd1d0>
   1ec00:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ec04:	ldrb	r3, [r3, #4]
   1ec08:	cmp	r3, #121	; 0x79
   1ec0c:	ldrls	pc, [pc, r3, lsl #2]
   1ec10:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1ec14:	muleq	r1, ip, r8
   1ec18:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec1c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec20:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec24:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec28:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec2c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec30:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec34:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec38:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec3c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec40:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec44:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec48:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec4c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec50:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec54:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec58:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec5c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec60:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec64:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec68:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec6c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec70:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec74:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec78:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec7c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec80:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec84:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec88:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec8c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec90:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec94:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec98:			; <UNDEFINED> instruction: 0x0001f8b8
   1ec9c:			; <UNDEFINED> instruction: 0x0001f8b8
   1eca0:			; <UNDEFINED> instruction: 0x0001f8b8
   1eca4:			; <UNDEFINED> instruction: 0x0001f8b8
   1eca8:	andeq	pc, r1, r8, ror r8	; <UNPREDICTABLE>
   1ecac:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecb0:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecb4:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecb8:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecbc:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecc0:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecc4:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecc8:			; <UNDEFINED> instruction: 0x0001f8b8
   1eccc:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecd0:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecd4:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecd8:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecdc:			; <UNDEFINED> instruction: 0x0001f8b8
   1ece0:			; <UNDEFINED> instruction: 0x0001f8b8
   1ece4:			; <UNDEFINED> instruction: 0x0001f8b8
   1ece8:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecec:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecf0:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecf4:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecf8:			; <UNDEFINED> instruction: 0x0001f8b8
   1ecfc:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed00:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed04:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed08:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed0c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed10:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed14:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed18:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed1c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed20:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed24:	strdeq	lr, [r1], -r4
   1ed28:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed2c:	andeq	lr, r1, r8, ror pc
   1ed30:	andeq	pc, r1, r0
   1ed34:	andeq	pc, r1, r8, asr r1	; <UNPREDICTABLE>
   1ed38:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed3c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed40:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed44:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed48:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1ed4c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed50:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed54:	andeq	pc, r1, ip, asr #8
   1ed58:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed5c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed60:	andeq	pc, r1, r8, lsl r5	; <UNPREDICTABLE>
   1ed64:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed68:	ldrdeq	pc, [r1], -r4
   1ed6c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed70:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed74:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed78:	andeq	pc, r1, ip, lsr #12
   1ed7c:	andeq	pc, r1, r0, asr #15
   1ed80:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed84:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed88:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed8c:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed90:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed94:			; <UNDEFINED> instruction: 0x0001f8b8
   1ed98:	strdeq	lr, [r1], -ip
   1ed9c:	andeq	lr, r1, r8, lsr lr
   1eda0:	muleq	r1, r8, lr
   1eda4:	ldrdeq	lr, [r1], -r4
   1eda8:			; <UNDEFINED> instruction: 0x0001f8b8
   1edac:	andeq	lr, r1, r4, asr #30
   1edb0:	andeq	lr, r1, r4, lsr #31
   1edb4:	andeq	pc, r1, r8, asr r0	; <UNPREDICTABLE>
   1edb8:	andeq	pc, r1, ip, asr #3
   1edbc:			; <UNDEFINED> instruction: 0x0001f8b8
   1edc0:	andeq	pc, r1, ip, lsl r2	; <UNPREDICTABLE>
   1edc4:	andeq	pc, r1, ip, ror r2	; <UNPREDICTABLE>
   1edc8:	andeq	pc, r1, r8, ror #6
   1edcc:	ldrdeq	pc, [r1], -r8
   1edd0:			; <UNDEFINED> instruction: 0x0001f8b8
   1edd4:	andeq	pc, r1, r0, lsr r4	; <UNPREDICTABLE>
   1edd8:			; <UNDEFINED> instruction: 0x0001f8b8
   1eddc:			; <UNDEFINED> instruction: 0x0001f8b8
   1ede0:			; <UNDEFINED> instruction: 0x0001f4b8
   1ede4:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1ede8:	andeq	pc, r1, r8, ror r5	; <UNPREDICTABLE>
   1edec:			; <UNDEFINED> instruction: 0x0001f8b8
   1edf0:			; <UNDEFINED> instruction: 0x0001f8b8
   1edf4:			; <UNDEFINED> instruction: 0x0001f8b8
   1edf8:	andeq	pc, r1, ip, lsl #15
   1edfc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ee00:	ldr	r4, [r3, #8]
   1ee04:	sub	r3, fp, #88	; 0x58
   1ee08:	ldr	r1, [fp, #-884]	; 0xfffffc8c
   1ee0c:	mov	r0, r3
   1ee10:	bl	3c778 <__assert_fail@plt+0x2a08c>
   1ee14:	sub	r3, fp, #88	; 0x58
   1ee18:	ldm	r3, {r0, r1}
   1ee1c:	bl	1e59c <__assert_fail@plt+0xbeb0>
   1ee20:	mov	r3, r0
   1ee24:	mov	r2, r3
   1ee28:	mov	r1, r4
   1ee2c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ee30:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1ee34:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1ee38:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ee3c:	ldr	r4, [r3, #8]
   1ee40:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1ee44:	ldrd	r2, [r3, #64]	; 0x40
   1ee48:	mov	r6, r2
   1ee4c:	mov	r7, r3
   1ee50:	sub	r1, fp, #740	; 0x2e4
   1ee54:	mov	r2, #512	; 0x200
   1ee58:	mov	r3, #0
   1ee5c:	strd	r2, [sp, #8]
   1ee60:	mov	r2, #512	; 0x200
   1ee64:	mov	r3, #0
   1ee68:	strd	r2, [sp]
   1ee6c:	mov	r3, #0
   1ee70:	mov	r2, r1
   1ee74:	mov	r0, r6
   1ee78:	mov	r1, r7
   1ee7c:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1ee80:	mov	r3, r0
   1ee84:	mov	r2, r3
   1ee88:	mov	r1, r4
   1ee8c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ee90:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1ee94:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1ee98:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ee9c:	ldr	r4, [r3, #8]
   1eea0:	sub	r3, fp, #80	; 0x50
   1eea4:	ldr	r1, [fp, #-884]	; 0xfffffc8c
   1eea8:	mov	r0, r3
   1eeac:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   1eeb0:	sub	r3, fp, #80	; 0x50
   1eeb4:	ldm	r3, {r0, r1}
   1eeb8:	bl	1e59c <__assert_fail@plt+0xbeb0>
   1eebc:	mov	r3, r0
   1eec0:	mov	r2, r3
   1eec4:	mov	r1, r4
   1eec8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1eecc:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1eed0:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1eed4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1eed8:	ldr	r1, [r3, #8]
   1eedc:	ldr	r3, [pc, #2532]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1eee0:	ldr	r3, [r3]
   1eee4:	mov	r2, r3
   1eee8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1eeec:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1eef0:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1eef4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1eef8:	ldr	r4, [r3, #8]
   1eefc:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1ef00:	ldrd	r0, [r3]
   1ef04:	sub	ip, fp, #740	; 0x2e4
   1ef08:	mov	r2, #1
   1ef0c:	mov	r3, #0
   1ef10:	strd	r2, [sp, #8]
   1ef14:	mov	r2, #1
   1ef18:	mov	r3, #0
   1ef1c:	strd	r2, [sp]
   1ef20:	mov	r3, #0
   1ef24:	mov	r2, ip
   1ef28:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1ef2c:	mov	r3, r0
   1ef30:	mov	r2, r3
   1ef34:	mov	r1, r4
   1ef38:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ef3c:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1ef40:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1ef44:	ldr	r0, [fp, #-880]	; 0xfffffc90
   1ef48:	bl	2a368 <__assert_fail@plt+0x17c7c>
   1ef4c:	mov	r3, r0
   1ef50:	str	r3, [fp, #-36]	; 0xffffffdc
   1ef54:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ef58:	ldr	r3, [r3, #8]
   1ef5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ef60:	mov	r1, r3
   1ef64:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ef68:	bl	1e958 <__assert_fail@plt+0xc26c>
   1ef6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ef70:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1ef74:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1ef78:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ef7c:	ldr	r4, [r3, #8]
   1ef80:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1ef84:	ldr	r0, [fp, #-884]	; 0xfffffc8c
   1ef88:	bl	1fc48 <__assert_fail@plt+0xd55c>
   1ef8c:	mov	r3, r0
   1ef90:	mov	r2, r3
   1ef94:	mov	r1, r4
   1ef98:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ef9c:	bl	1e958 <__assert_fail@plt+0xc26c>
   1efa0:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1efa4:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1efa8:	ldr	r3, [r3, #28]
   1efac:	mov	r0, r3
   1efb0:	bl	126c8 <getgrgid@plt>
   1efb4:	str	r0, [fp, #-40]	; 0xffffffd8
   1efb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1efbc:	cmp	r3, #0
   1efc0:	beq	1f000 <__assert_fail@plt+0xc914>
   1efc4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1efc8:	ldr	r3, [r3, #8]
   1efcc:	ldr	r2, [fp, #-876]	; 0xfffffc94
   1efd0:	ldr	r2, [r2, #12]
   1efd4:	add	r3, r3, r2
   1efd8:	mov	r2, #115	; 0x73
   1efdc:	strb	r2, [r3]
   1efe0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1efe4:	ldr	r1, [r3, #8]
   1efe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1efec:	ldr	r3, [r3]
   1eff0:	mov	r2, r3
   1eff4:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1eff8:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1effc:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f000:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f004:	ldr	r4, [r3, #8]
   1f008:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f00c:	ldr	r3, [r3, #28]
   1f010:	mov	r0, r3
   1f014:	mov	r1, #0
   1f018:	sub	ip, fp, #740	; 0x2e4
   1f01c:	mov	r2, #1
   1f020:	mov	r3, #0
   1f024:	strd	r2, [sp, #8]
   1f028:	mov	r2, #1
   1f02c:	mov	r3, #0
   1f030:	strd	r2, [sp]
   1f034:	mov	r3, #0
   1f038:	mov	r2, ip
   1f03c:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1f040:	mov	r3, r0
   1f044:	mov	r2, r3
   1f048:	mov	r1, r4
   1f04c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f050:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f054:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f058:	ldr	r0, [fp, #-880]	; 0xfffffc90
   1f05c:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   1f060:	mov	r3, r0
   1f064:	str	r3, [fp, #-44]	; 0xffffffd4
   1f068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f06c:	bl	123bc <strlen@plt>
   1f070:	mov	r3, r0
   1f074:	sub	r3, r3, #1
   1f078:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f07c:	add	r3, r2, r3
   1f080:	str	r3, [fp, #-28]	; 0xffffffe4
   1f084:	b	1f0a4 <__assert_fail@plt+0xc9b8>
   1f088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f08c:	ldrb	r3, [r3]
   1f090:	cmp	r3, #47	; 0x2f
   1f094:	bne	1f0b8 <__assert_fail@plt+0xc9cc>
   1f098:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f09c:	sub	r3, r3, #1
   1f0a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1f0a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f0a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f0ac:	cmp	r2, r3
   1f0b0:	bls	1f088 <__assert_fail@plt+0xc99c>
   1f0b4:	b	1f0bc <__assert_fail@plt+0xc9d0>
   1f0b8:	nop			; (mov r0, r0)
   1f0bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f0c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f0c4:	cmp	r2, r3
   1f0c8:	bcs	1f0f0 <__assert_fail@plt+0xca04>
   1f0cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f0d0:	add	r3, r3, #1
   1f0d4:	ldrb	r3, [r3]
   1f0d8:	cmp	r3, #47	; 0x2f
   1f0dc:	bne	1f0f0 <__assert_fail@plt+0xca04>
   1f0e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f0e4:	add	r3, r3, #1
   1f0e8:	mov	r2, #0
   1f0ec:	strb	r2, [r3]
   1f0f0:	mov	r1, #47	; 0x2f
   1f0f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f0f8:	bl	12548 <strrchr@plt>
   1f0fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1f100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f104:	cmp	r3, #0
   1f108:	bne	1f128 <__assert_fail@plt+0xca3c>
   1f10c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f110:	ldr	r3, [r3, #8]
   1f114:	ldr	r2, [pc, #1968]	; 1f8cc <__assert_fail@plt+0xd1e0>
   1f118:	mov	r1, r3
   1f11c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f120:	bl	1e958 <__assert_fail@plt+0xc26c>
   1f124:	b	1f14c <__assert_fail@plt+0xca60>
   1f128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f12c:	mov	r2, #0
   1f130:	strb	r2, [r3]
   1f134:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f138:	ldr	r3, [r3, #8]
   1f13c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f140:	mov	r1, r3
   1f144:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f148:	bl	1e958 <__assert_fail@plt+0xc26c>
   1f14c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f150:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1f154:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f158:	ldr	r3, [pc, #1896]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f15c:	ldr	r3, [r3, #20]
   1f160:	add	r3, r3, #1
   1f164:	mov	r0, r3
   1f168:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   1f16c:	mov	r3, r0
   1f170:	str	r3, [fp, #-48]	; 0xffffffd0
   1f174:	ldr	r3, [pc, #1868]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f178:	ldr	r3, [r3, #20]
   1f17c:	mov	r2, r3
   1f180:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1f184:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f188:	bl	120f8 <memcpy@plt>
   1f18c:	ldr	r3, [pc, #1844]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f190:	ldr	r3, [r3, #20]
   1f194:	mov	r2, r3
   1f198:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f19c:	add	r3, r3, r2
   1f1a0:	mov	r2, #0
   1f1a4:	strb	r2, [r3]
   1f1a8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f1ac:	ldr	r3, [r3, #8]
   1f1b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f1b4:	mov	r1, r3
   1f1b8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f1bc:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f1c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f1c4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1f1c8:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f1cc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f1d0:	ldr	r4, [r3, #8]
   1f1d4:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f1d8:	ldrd	r0, [r3, #96]	; 0x60
   1f1dc:	sub	ip, fp, #740	; 0x2e4
   1f1e0:	mov	r2, #1
   1f1e4:	mov	r3, #0
   1f1e8:	strd	r2, [sp, #8]
   1f1ec:	mov	r2, #1
   1f1f0:	mov	r3, #0
   1f1f4:	strd	r2, [sp]
   1f1f8:	mov	r3, #0
   1f1fc:	mov	r2, ip
   1f200:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1f204:	mov	r3, r0
   1f208:	mov	r2, r3
   1f20c:	mov	r1, r4
   1f210:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f214:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f218:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f21c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f220:	ldr	r4, [r3, #8]
   1f224:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f228:	ldrd	r2, [r3, #64]	; 0x40
   1f22c:	mov	r6, r2
   1f230:	mov	r7, r3
   1f234:	sub	r1, fp, #740	; 0x2e4
   1f238:	mov	r2, #1024	; 0x400
   1f23c:	mov	r3, #0
   1f240:	strd	r2, [sp, #8]
   1f244:	mov	r2, #512	; 0x200
   1f248:	mov	r3, #0
   1f24c:	strd	r2, [sp]
   1f250:	mov	r3, #0
   1f254:	mov	r2, r1
   1f258:	mov	r0, r6
   1f25c:	mov	r1, r7
   1f260:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1f264:	mov	r3, r0
   1f268:	mov	r2, r3
   1f26c:	mov	r1, r4
   1f270:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f274:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f278:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f27c:	mov	r3, #0
   1f280:	str	r3, [fp, #-32]	; 0xffffffe0
   1f284:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f288:	ldr	r3, [r3, #16]
   1f28c:	and	r3, r3, #61440	; 0xf000
   1f290:	cmp	r3, #40960	; 0xa000
   1f294:	bne	1f2e8 <__assert_fail@plt+0xcbfc>
   1f298:	ldr	r3, [pc, #1576]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f29c:	ldr	r2, [r3, #16]
   1f2a0:	ldr	r3, [pc, #1568]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f2a4:	ldr	r3, [r3, #12]
   1f2a8:	mov	r1, r3
   1f2ac:	mov	r0, r2
   1f2b0:	bl	29a18 <__assert_fail@plt+0x1732c>
   1f2b4:	str	r0, [fp, #-32]	; 0xffffffe0
   1f2b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f2bc:	cmp	r3, #0
   1f2c0:	bne	1f2e8 <__assert_fail@plt+0xcbfc>
   1f2c4:	bl	12404 <__errno_location@plt>
   1f2c8:	mov	r3, r0
   1f2cc:	ldr	r3, [r3]
   1f2d0:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1f2d4:	mov	r0, r3
   1f2d8:	bl	1c8e0 <__assert_fail@plt+0xa1f4>
   1f2dc:	ldr	r3, [pc, #1508]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f2e0:	mov	r2, #1
   1f2e4:	str	r2, [r3, #28]
   1f2e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f2ec:	cmp	r3, #0
   1f2f0:	beq	1f310 <__assert_fail@plt+0xcc24>
   1f2f4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f2f8:	ldr	r3, [r3, #8]
   1f2fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f300:	mov	r1, r3
   1f304:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f308:	bl	1e958 <__assert_fail@plt+0xc26c>
   1f30c:	b	1f328 <__assert_fail@plt+0xcc3c>
   1f310:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f314:	ldr	r3, [r3, #8]
   1f318:	ldr	r2, [pc, #1456]	; 1f8d0 <__assert_fail@plt+0xd1e4>
   1f31c:	mov	r1, r3
   1f320:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f324:	bl	1e958 <__assert_fail@plt+0xc26c>
   1f328:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f32c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1f330:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f334:	sub	r3, fp, #756	; 0x2f4
   1f338:	mov	r1, r3
   1f33c:	ldr	r0, [fp, #-884]	; 0xfffffc8c
   1f340:	bl	2aa30 <__assert_fail@plt+0x18344>
   1f344:	mov	r3, #0
   1f348:	strb	r3, [fp, #-746]	; 0xfffffd16
   1f34c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f350:	ldr	r3, [r3, #8]
   1f354:	sub	r2, fp, #756	; 0x2f4
   1f358:	mov	r1, r3
   1f35c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f360:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f364:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f368:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f36c:	ldr	r3, [r3, #16]
   1f370:	str	r3, [fp, #-52]	; 0xffffffcc
   1f374:	mov	r3, #1
   1f378:	strb	r3, [fp, #-53]	; 0xffffffcb
   1f37c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f380:	ldr	r1, [r3, #8]
   1f384:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   1f388:	cmp	r3, #0
   1f38c:	beq	1f3a0 <__assert_fail@plt+0xccb4>
   1f390:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f394:	lsl	r3, r3, #20
   1f398:	lsr	r3, r3, #20
   1f39c:	b	1f3c8 <__assert_fail@plt+0xccdc>
   1f3a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f3a4:	ldr	r3, [pc, #1320]	; 1f8d4 <__assert_fail@plt+0xd1e8>
   1f3a8:	and	r3, r3, r2
   1f3ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f3b0:	and	r2, r2, #1
   1f3b4:	cmp	r2, #0
   1f3b8:	movne	r2, #1
   1f3bc:	moveq	r2, #0
   1f3c0:	uxtb	r2, r2
   1f3c4:	orr	r3, r3, r2
   1f3c8:	mov	r2, r3
   1f3cc:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f3d0:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f3d4:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f3d8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f3dc:	ldr	r4, [r3, #8]
   1f3e0:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f3e4:	ldr	r3, [r3, #20]
   1f3e8:	mov	r0, r3
   1f3ec:	mov	r1, #0
   1f3f0:	sub	ip, fp, #740	; 0x2e4
   1f3f4:	mov	r2, #1
   1f3f8:	mov	r3, #0
   1f3fc:	strd	r2, [sp, #8]
   1f400:	mov	r2, #1
   1f404:	mov	r3, #0
   1f408:	strd	r2, [sp]
   1f40c:	mov	r3, #0
   1f410:	mov	r2, ip
   1f414:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1f418:	mov	r3, r0
   1f41c:	mov	r2, r3
   1f420:	mov	r1, r4
   1f424:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f428:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f42c:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f430:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f434:	ldr	r3, [r3, #8]
   1f438:	ldr	r2, [fp, #-880]	; 0xfffffc90
   1f43c:	mov	r1, r3
   1f440:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f444:	bl	1e958 <__assert_fail@plt+0xc26c>
   1f448:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f44c:	ldr	r3, [pc, #1140]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f450:	ldr	r3, [r3]
   1f454:	cmp	r3, #0
   1f458:	ble	1f494 <__assert_fail@plt+0xcda8>
   1f45c:	ldr	r3, [pc, #1124]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f460:	ldr	r3, [r3, #20]
   1f464:	mov	r2, r3
   1f468:	ldr	r3, [fp, #-880]	; 0xfffffc90
   1f46c:	add	r3, r3, r2
   1f470:	str	r3, [fp, #-24]	; 0xffffffe8
   1f474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f478:	ldrb	r3, [r3]
   1f47c:	cmp	r3, #47	; 0x2f
   1f480:	bne	1f49c <__assert_fail@plt+0xcdb0>
   1f484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f488:	add	r3, r3, #1
   1f48c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f490:	b	1f49c <__assert_fail@plt+0xcdb0>
   1f494:	ldr	r3, [pc, #1076]	; 1f8d0 <__assert_fail@plt+0xd1e4>
   1f498:	str	r3, [fp, #-24]	; 0xffffffe8
   1f49c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f4a0:	ldr	r3, [r3, #8]
   1f4a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f4a8:	mov	r1, r3
   1f4ac:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f4b0:	bl	1e958 <__assert_fail@plt+0xc26c>
   1f4b4:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f4b8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f4bc:	ldr	r4, [r3, #8]
   1f4c0:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f4c4:	ldrd	r2, [r3, #48]	; 0x30
   1f4c8:	mov	r6, r2
   1f4cc:	mov	r7, r3
   1f4d0:	sub	r1, fp, #740	; 0x2e4
   1f4d4:	mov	r2, #1
   1f4d8:	mov	r3, #0
   1f4dc:	strd	r2, [sp, #8]
   1f4e0:	mov	r2, #1
   1f4e4:	mov	r3, #0
   1f4e8:	strd	r2, [sp]
   1f4ec:	mov	r3, #0
   1f4f0:	mov	r2, r1
   1f4f4:	mov	r0, r6
   1f4f8:	mov	r1, r7
   1f4fc:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1f500:	mov	r3, r0
   1f504:	mov	r2, r3
   1f508:	mov	r1, r4
   1f50c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f510:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f514:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f518:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f51c:	ldr	r4, [r3, #8]
   1f520:	ldr	r0, [fp, #-884]	; 0xfffffc8c
   1f524:	bl	1e814 <__assert_fail@plt+0xc128>
   1f528:	vmov	r2, r3, d0
   1f52c:	mov	r1, r4
   1f530:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f534:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f538:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f53c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f540:	ldr	r4, [r3, #8]
   1f544:	sub	r3, fp, #72	; 0x48
   1f548:	ldr	r1, [fp, #-884]	; 0xfffffc8c
   1f54c:	mov	r0, r3
   1f550:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   1f554:	sub	r3, fp, #72	; 0x48
   1f558:	ldm	r3, {r0, r1}
   1f55c:	bl	1e59c <__assert_fail@plt+0xbeb0>
   1f560:	mov	r3, r0
   1f564:	mov	r2, r3
   1f568:	mov	r1, r4
   1f56c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f570:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f574:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f578:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f57c:	ldr	r3, [r3, #24]
   1f580:	mov	r0, r3
   1f584:	bl	12014 <getpwuid@plt>
   1f588:	str	r0, [fp, #-60]	; 0xffffffc4
   1f58c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f590:	cmp	r3, #0
   1f594:	beq	1f5d4 <__assert_fail@plt+0xcee8>
   1f598:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f59c:	ldr	r3, [r3, #8]
   1f5a0:	ldr	r2, [fp, #-876]	; 0xfffffc94
   1f5a4:	ldr	r2, [r2, #12]
   1f5a8:	add	r3, r3, r2
   1f5ac:	mov	r2, #115	; 0x73
   1f5b0:	strb	r2, [r3]
   1f5b4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f5b8:	ldr	r1, [r3, #8]
   1f5bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f5c0:	ldr	r3, [r3]
   1f5c4:	mov	r2, r3
   1f5c8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f5cc:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f5d0:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f5d4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f5d8:	ldr	r4, [r3, #8]
   1f5dc:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f5e0:	ldr	r3, [r3, #24]
   1f5e4:	mov	r0, r3
   1f5e8:	mov	r1, #0
   1f5ec:	sub	ip, fp, #740	; 0x2e4
   1f5f0:	mov	r2, #1
   1f5f4:	mov	r3, #0
   1f5f8:	strd	r2, [sp, #8]
   1f5fc:	mov	r2, #1
   1f600:	mov	r3, #0
   1f604:	strd	r2, [sp]
   1f608:	mov	r3, #0
   1f60c:	mov	r2, ip
   1f610:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   1f614:	mov	r3, r0
   1f618:	mov	r2, r3
   1f61c:	mov	r1, r4
   1f620:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f624:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f628:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f62c:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f630:	ldr	r3, [r3, #16]
   1f634:	and	r3, r3, #61440	; 0xf000
   1f638:	cmp	r3, #40960	; 0xa000
   1f63c:	bne	1f758 <__assert_fail@plt+0xd06c>
   1f640:	ldr	r3, [pc, #640]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f644:	ldr	r0, [r3, #16]
   1f648:	ldr	r3, [pc, #632]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f64c:	ldr	r1, [r3, #12]
   1f650:	sub	r2, fp, #868	; 0x364
   1f654:	mov	r3, #0
   1f658:	bl	640b4 <__assert_fail@plt+0x519c8>
   1f65c:	mov	r3, r0
   1f660:	cmp	r3, #0
   1f664:	beq	1f724 <__assert_fail@plt+0xd038>
   1f668:	bl	12404 <__errno_location@plt>
   1f66c:	mov	r3, r0
   1f670:	ldr	r3, [r3]
   1f674:	cmp	r3, #2
   1f678:	beq	1f690 <__assert_fail@plt+0xcfa4>
   1f67c:	bl	12404 <__errno_location@plt>
   1f680:	mov	r3, r0
   1f684:	ldr	r3, [r3]
   1f688:	cmp	r3, #20
   1f68c:	bne	1f6ac <__assert_fail@plt+0xcfc0>
   1f690:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f694:	ldr	r3, [r3, #8]
   1f698:	ldr	r2, [pc, #568]	; 1f8d8 <__assert_fail@plt+0xd1ec>
   1f69c:	mov	r1, r3
   1f6a0:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f6a4:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f6a8:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f6ac:	bl	12404 <__errno_location@plt>
   1f6b0:	mov	r3, r0
   1f6b4:	ldr	r3, [r3]
   1f6b8:	cmp	r3, #40	; 0x28
   1f6bc:	bne	1f6dc <__assert_fail@plt+0xcff0>
   1f6c0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f6c4:	ldr	r3, [r3, #8]
   1f6c8:	ldr	r2, [pc, #524]	; 1f8dc <__assert_fail@plt+0xd1f0>
   1f6cc:	mov	r1, r3
   1f6d0:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f6d4:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f6d8:	b	1f754 <__assert_fail@plt+0xd068>
   1f6dc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f6e0:	ldr	r3, [r3, #8]
   1f6e4:	ldr	r2, [pc, #500]	; 1f8e0 <__assert_fail@plt+0xd1f4>
   1f6e8:	mov	r1, r3
   1f6ec:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f6f0:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f6f4:	bl	12404 <__errno_location@plt>
   1f6f8:	mov	r3, r0
   1f6fc:	ldr	r4, [r3]
   1f700:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1f704:	mov	r0, #0
   1f708:	bl	1c7fc <__assert_fail@plt+0xa110>
   1f70c:	mov	r3, r0
   1f710:	ldr	r2, [pc, #460]	; 1f8e4 <__assert_fail@plt+0xd1f8>
   1f714:	mov	r1, r4
   1f718:	mov	r0, #0
   1f71c:	bl	122b4 <error@plt>
   1f720:	b	1f754 <__assert_fail@plt+0xd068>
   1f724:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f728:	ldr	r4, [r3, #8]
   1f72c:	ldr	r3, [fp, #-852]	; 0xfffffcac
   1f730:	and	r3, r3, #61440	; 0xf000
   1f734:	mov	r0, r3
   1f738:	bl	1eaa0 <__assert_fail@plt+0xc3b4>
   1f73c:	mov	r3, r0
   1f740:	mov	r2, r3
   1f744:	mov	r1, r4
   1f748:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f74c:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f750:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f754:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f758:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f75c:	ldr	r4, [r3, #8]
   1f760:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f764:	ldr	r3, [r3, #16]
   1f768:	and	r3, r3, #61440	; 0xf000
   1f76c:	mov	r0, r3
   1f770:	bl	1eaa0 <__assert_fail@plt+0xc3b4>
   1f774:	mov	r3, r0
   1f778:	mov	r2, r3
   1f77c:	mov	r1, r4
   1f780:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f784:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f788:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f78c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f790:	ldr	r4, [r3, #8]
   1f794:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1f798:	ldr	r3, [r3, #16]
   1f79c:	and	r3, r3, #61440	; 0xf000
   1f7a0:	mov	r0, r3
   1f7a4:	bl	1eaa0 <__assert_fail@plt+0xc3b4>
   1f7a8:	mov	r3, r0
   1f7ac:	mov	r2, r3
   1f7b0:	mov	r1, r4
   1f7b4:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f7b8:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f7bc:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f7c0:	ldr	r3, [pc, #288]	; 1f8e8 <__assert_fail@plt+0xd1fc>
   1f7c4:	ldr	r3, [r3, #64]	; 0x40
   1f7c8:	ldr	r2, [pc, #248]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f7cc:	ldr	r0, [r2, #16]
   1f7d0:	ldr	r2, [pc, #240]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f7d4:	ldr	r1, [r2, #12]
   1f7d8:	sub	r2, fp, #760	; 0x2f8
   1f7dc:	blx	r3
   1f7e0:	str	r0, [fp, #-64]	; 0xffffffc0
   1f7e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f7e8:	cmp	r3, #0
   1f7ec:	bge	1f850 <__assert_fail@plt+0xd164>
   1f7f0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f7f4:	ldr	r3, [r3, #8]
   1f7f8:	ldr	r2, [pc, #208]	; 1f8d0 <__assert_fail@plt+0xd1e4>
   1f7fc:	mov	r1, r3
   1f800:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f804:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f808:	bl	12404 <__errno_location@plt>
   1f80c:	mov	r3, r0
   1f810:	ldr	r4, [r3]
   1f814:	ldr	r0, [pc, #208]	; 1f8ec <__assert_fail@plt+0xd200>
   1f818:	bl	12398 <gettext@plt>
   1f81c:	mov	r5, r0
   1f820:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1f824:	mov	r0, #0
   1f828:	bl	1c7fc <__assert_fail@plt+0xa110>
   1f82c:	mov	r3, r0
   1f830:	mov	r2, r5
   1f834:	mov	r1, r4
   1f838:	mov	r0, #0
   1f83c:	bl	122b4 <error@plt>
   1f840:	ldr	r3, [pc, #128]	; 1f8c8 <__assert_fail@plt+0xd1dc>
   1f844:	mov	r2, #1
   1f848:	str	r2, [r3, #28]
   1f84c:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f850:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f854:	ldr	r3, [r3, #8]
   1f858:	ldr	r2, [fp, #-760]	; 0xfffffd08
   1f85c:	mov	r1, r3
   1f860:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1f864:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1f868:	ldr	r3, [fp, #-760]	; 0xfffffd08
   1f86c:	mov	r0, r3
   1f870:	bl	125fc <freecon@plt>
   1f874:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f878:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f87c:	ldr	r0, [r3, #8]
   1f880:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f884:	ldr	r3, [r3, #12]
   1f888:	mov	r2, r3
   1f88c:	ldr	r3, [fp, #-872]	; 0xfffffc98
   1f890:	mov	r1, #1
   1f894:	bl	1e9d4 <__assert_fail@plt+0xc2e8>
   1f898:	b	1f8b8 <__assert_fail@plt+0xd1cc>
   1f89c:	ldr	r0, [pc, #76]	; 1f8f0 <__assert_fail@plt+0xd204>
   1f8a0:	bl	12398 <gettext@plt>
   1f8a4:	mov	r2, r0
   1f8a8:	ldr	r3, [pc, #68]	; 1f8f4 <__assert_fail@plt+0xd208>
   1f8ac:	mov	r1, #0
   1f8b0:	mov	r0, #1
   1f8b4:	bl	122b4 <error@plt>
   1f8b8:	nop			; (mov r0, r0)
   1f8bc:	nop			; (mov r0, r0)
   1f8c0:	sub	sp, fp, #20
   1f8c4:	pop	{r4, r5, r6, r7, fp, pc}
   1f8c8:	andeq	sp, r7, r0, lsr #32
   1f8cc:	andeq	r6, r6, r0, ror #16
   1f8d0:	andeq	r6, r6, r4, ror #16
   1f8d4:	strdeq	r0, [r0], -lr
   1f8d8:	andeq	r6, r6, r8, ror #16
   1f8dc:	andeq	r6, r6, ip, ror #16
   1f8e0:	andeq	r6, r6, r0, ror r8
   1f8e4:	andeq	r6, r6, r4, ror r8
   1f8e8:	andeq	sp, r7, ip, asr #32
   1f8ec:	andeq	r6, r6, r8, ror r8
   1f8f0:	andeq	r6, r6, ip, asr #10
   1f8f4:	muleq	r6, r0, r8
   1f8f8:	push	{r4, fp, lr}
   1f8fc:	add	fp, sp, #8
   1f900:	sub	sp, sp, #52	; 0x34
   1f904:	str	r0, [fp, #-40]	; 0xffffffd8
   1f908:	str	r1, [fp, #-44]	; 0xffffffd4
   1f90c:	str	r2, [fp, #-48]	; 0xffffffd0
   1f910:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f914:	add	r3, r3, #40	; 0x28
   1f918:	str	r3, [fp, #-24]	; 0xffffffe8
   1f91c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f920:	ldr	r3, [r3]
   1f924:	str	r3, [fp, #-16]
   1f928:	b	1fb18 <__assert_fail@plt+0xd42c>
   1f92c:	ldr	r3, [fp, #-16]
   1f930:	ldr	r3, [r3]
   1f934:	cmp	r3, #2
   1f938:	bne	1faf8 <__assert_fail@plt+0xd40c>
   1f93c:	ldr	r3, [fp, #-16]
   1f940:	ldrb	r3, [r3, #5]
   1f944:	cmp	r3, #0
   1f948:	beq	1faf8 <__assert_fail@plt+0xd40c>
   1f94c:	mov	r3, #0
   1f950:	str	r3, [fp, #-20]	; 0xffffffec
   1f954:	ldr	r3, [fp, #-16]
   1f958:	ldrb	r3, [r3, #4]
   1f95c:	sub	r3, r3, #65	; 0x41
   1f960:	cmp	r3, #19
   1f964:	ldrls	pc, [pc, r3, lsl #2]
   1f968:	b	1fa84 <__assert_fail@plt+0xd398>
   1f96c:			; <UNDEFINED> instruction: 0x0001f9bc
   1f970:	ldrdeq	pc, [r1], -r8
   1f974:	andeq	pc, r1, ip, lsr #20
   1f978:	andeq	pc, r1, r4, lsl #21
   1f97c:	andeq	pc, r1, r4, lsl #21
   1f980:	andeq	pc, r1, r4, lsl #21
   1f984:	andeq	pc, r1, r4, lsl #21
   1f988:	andeq	pc, r1, r4, lsl #21
   1f98c:	andeq	pc, r1, r4, lsl #21
   1f990:	andeq	pc, r1, r4, lsl #21
   1f994:	andeq	pc, r1, r4, lsl #21
   1f998:	andeq	pc, r1, r4, lsl #21
   1f99c:	andeq	pc, r1, r4, lsl #21
   1f9a0:	andeq	pc, r1, r4, lsl #21
   1f9a4:	andeq	pc, r1, r4, lsl #21
   1f9a8:	andeq	pc, r1, r4, lsl #21
   1f9ac:	andeq	pc, r1, r4, lsl #21
   1f9b0:	andeq	pc, r1, r4, lsl #21
   1f9b4:	andeq	pc, r1, r4, lsl #21
   1f9b8:	andeq	pc, r1, r8, asr sl	; <UNPREDICTABLE>
   1f9bc:	sub	r3, fp, #32
   1f9c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f9c4:	mov	r0, r3
   1f9c8:	bl	3c778 <__assert_fail@plt+0x2a08c>
   1f9cc:	mov	r3, #1
   1f9d0:	str	r3, [fp, #-20]	; 0xffffffec
   1f9d4:	b	1fa98 <__assert_fail@plt+0xd3ac>
   1f9d8:	sub	r3, fp, #60	; 0x3c
   1f9dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f9e0:	mov	r0, r3
   1f9e4:	bl	3c820 <__assert_fail@plt+0x2a134>
   1f9e8:	sub	r3, fp, #32
   1f9ec:	sub	r2, fp, #60	; 0x3c
   1f9f0:	ldm	r2, {r0, r1}
   1f9f4:	stm	r3, {r0, r1}
   1f9f8:	ldr	r3, [fp, #-16]
   1f9fc:	ldrb	r3, [r3, #5]
   1fa00:	cmp	r3, #64	; 0x40
   1fa04:	bne	1fa14 <__assert_fail@plt+0xd328>
   1fa08:	mov	r3, #1
   1fa0c:	str	r3, [fp, #-20]	; 0xffffffec
   1fa10:	b	1fa98 <__assert_fail@plt+0xd3ac>
   1fa14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fa18:	mvn	r3, r3
   1fa1c:	lsr	r3, r3, #31
   1fa20:	uxtb	r3, r3
   1fa24:	str	r3, [fp, #-20]	; 0xffffffec
   1fa28:	b	1fa98 <__assert_fail@plt+0xd3ac>
   1fa2c:	sub	r3, fp, #60	; 0x3c
   1fa30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fa34:	mov	r0, r3
   1fa38:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   1fa3c:	sub	r3, fp, #32
   1fa40:	sub	r2, fp, #60	; 0x3c
   1fa44:	ldm	r2, {r0, r1}
   1fa48:	stm	r3, {r0, r1}
   1fa4c:	mov	r3, #1
   1fa50:	str	r3, [fp, #-20]	; 0xffffffec
   1fa54:	b	1fa98 <__assert_fail@plt+0xd3ac>
   1fa58:	sub	r3, fp, #60	; 0x3c
   1fa5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fa60:	mov	r0, r3
   1fa64:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   1fa68:	sub	r3, fp, #32
   1fa6c:	sub	r2, fp, #60	; 0x3c
   1fa70:	ldm	r2, {r0, r1}
   1fa74:	stm	r3, {r0, r1}
   1fa78:	mov	r3, #1
   1fa7c:	str	r3, [fp, #-20]	; 0xffffffec
   1fa80:	b	1fa98 <__assert_fail@plt+0xd3ac>
   1fa84:	ldr	r3, [pc, #168]	; 1fb34 <__assert_fail@plt+0xd448>
   1fa88:	ldr	r2, [pc, #168]	; 1fb38 <__assert_fail@plt+0xd44c>
   1fa8c:	ldr	r1, [pc, #168]	; 1fb3c <__assert_fail@plt+0xd450>
   1fa90:	ldr	r0, [pc, #168]	; 1fb40 <__assert_fail@plt+0xd454>
   1fa94:	bl	126ec <__assert_fail@plt>
   1fa98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa9c:	cmp	r3, #0
   1faa0:	beq	1fadc <__assert_fail@plt+0xd3f0>
   1faa4:	ldr	r3, [fp, #-16]
   1faa8:	ldr	r4, [r3, #8]
   1faac:	ldr	r3, [fp, #-16]
   1fab0:	ldrb	r3, [r3, #5]
   1fab4:	mov	r2, r3
   1fab8:	sub	r3, fp, #32
   1fabc:	ldm	r3, {r0, r1}
   1fac0:	bl	1e1f4 <__assert_fail@plt+0xbb08>
   1fac4:	mov	r3, r0
   1fac8:	mov	r2, r3
   1facc:	mov	r1, r4
   1fad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fad4:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1fad8:	b	1fb0c <__assert_fail@plt+0xd420>
   1fadc:	ldr	r3, [fp, #-16]
   1fae0:	ldr	r3, [r3, #8]
   1fae4:	ldr	r2, [pc, #88]	; 1fb44 <__assert_fail@plt+0xd458>
   1fae8:	mov	r1, r3
   1faec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1faf0:	bl	1e8e0 <__assert_fail@plt+0xc1f4>
   1faf4:	b	1fb0c <__assert_fail@plt+0xd420>
   1faf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fafc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fb00:	ldr	r1, [fp, #-16]
   1fb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb08:	bl	1eb70 <__assert_fail@plt+0xc484>
   1fb0c:	ldr	r3, [fp, #-16]
   1fb10:	ldr	r3, [r3, #16]
   1fb14:	str	r3, [fp, #-16]
   1fb18:	ldr	r3, [fp, #-16]
   1fb1c:	cmp	r3, #0
   1fb20:	bne	1f92c <__assert_fail@plt+0xd240>
   1fb24:	mov	r3, #1
   1fb28:	mov	r0, r3
   1fb2c:	sub	sp, fp, #8
   1fb30:	pop	{r4, fp, pc}
   1fb34:	ldrdeq	r6, [r6], -r4
   1fb38:	andeq	r0, r0, r8, lsl r5
   1fb3c:	andeq	r6, r6, r4, asr #8
   1fb40:	muleq	r6, r4, r8
   1fb44:	andeq	r6, r6, r4, ror #16
   1fb48:	push	{fp, lr}
   1fb4c:	add	fp, sp, #4
   1fb50:	sub	sp, sp, #16
   1fb54:	str	r0, [fp, #-16]
   1fb58:	b	1fb78 <__assert_fail@plt+0xd48c>
   1fb5c:	ldr	r3, [fp, #-16]
   1fb60:	ldr	r3, [r3, #28]
   1fb64:	str	r3, [fp, #-8]
   1fb68:	ldr	r0, [fp, #-16]
   1fb6c:	bl	43cb4 <__assert_fail@plt+0x315c8>
   1fb70:	ldr	r3, [fp, #-8]
   1fb74:	str	r3, [fp, #-16]
   1fb78:	ldr	r3, [fp, #-16]
   1fb7c:	cmp	r3, #0
   1fb80:	bne	1fb5c <__assert_fail@plt+0xd470>
   1fb84:	nop			; (mov r0, r0)
   1fb88:	sub	sp, fp, #4
   1fb8c:	pop	{fp, pc}
   1fb90:	push	{fp, lr}
   1fb94:	add	fp, sp, #4
   1fb98:	sub	sp, sp, #8
   1fb9c:	mov	r3, r0
   1fba0:	strb	r3, [fp, #-5]
   1fba4:	ldr	r3, [pc, #148]	; 1fc40 <__assert_fail@plt+0xd554>
   1fba8:	ldr	r3, [r3]
   1fbac:	cmp	r3, #0
   1fbb0:	beq	1fbf4 <__assert_fail@plt+0xd508>
   1fbb4:	ldr	r3, [pc, #136]	; 1fc44 <__assert_fail@plt+0xd558>
   1fbb8:	ldrb	r3, [r3]
   1fbbc:	eor	r3, r3, #1
   1fbc0:	uxtb	r3, r3
   1fbc4:	cmp	r3, #0
   1fbc8:	beq	1fbf4 <__assert_fail@plt+0xd508>
   1fbcc:	ldrb	r3, [fp, #-5]
   1fbd0:	cmp	r3, #0
   1fbd4:	beq	1fbf4 <__assert_fail@plt+0xd508>
   1fbd8:	ldr	r3, [pc, #96]	; 1fc40 <__assert_fail@plt+0xd554>
   1fbdc:	ldr	r3, [r3]
   1fbe0:	mov	r0, r3
   1fbe4:	bl	1fb48 <__assert_fail@plt+0xd45c>
   1fbe8:	ldr	r3, [pc, #80]	; 1fc40 <__assert_fail@plt+0xd554>
   1fbec:	mov	r2, #0
   1fbf0:	str	r2, [r3]
   1fbf4:	ldr	r3, [pc, #68]	; 1fc40 <__assert_fail@plt+0xd554>
   1fbf8:	ldr	r3, [r3]
   1fbfc:	cmp	r3, #0
   1fc00:	bne	1fc2c <__assert_fail@plt+0xd540>
   1fc04:	ldrb	r3, [fp, #-5]
   1fc08:	mov	r0, r3
   1fc0c:	bl	42f5c <__assert_fail@plt+0x30870>
   1fc10:	mov	r3, r0
   1fc14:	mov	r2, r3
   1fc18:	ldr	r3, [pc, #32]	; 1fc40 <__assert_fail@plt+0xd554>
   1fc1c:	str	r2, [r3]
   1fc20:	ldr	r2, [pc, #28]	; 1fc44 <__assert_fail@plt+0xd558>
   1fc24:	ldrb	r3, [fp, #-5]
   1fc28:	strb	r3, [r2]
   1fc2c:	ldr	r3, [pc, #12]	; 1fc40 <__assert_fail@plt+0xd554>
   1fc30:	ldr	r3, [r3]
   1fc34:	mov	r0, r3
   1fc38:	sub	sp, fp, #4
   1fc3c:	pop	{fp, pc}
   1fc40:	muleq	r7, r8, lr
   1fc44:	muleq	r7, ip, lr
   1fc48:	push	{fp, lr}
   1fc4c:	add	fp, sp, #4
   1fc50:	sub	sp, sp, #8
   1fc54:	str	r0, [fp, #-8]
   1fc58:	str	r1, [fp, #-12]
   1fc5c:	ldr	r3, [pc, #144]	; 1fcf4 <__assert_fail@plt+0xd608>
   1fc60:	ldr	r3, [r3]
   1fc64:	cmp	r3, #0
   1fc68:	beq	1fcb4 <__assert_fail@plt+0xd5c8>
   1fc6c:	ldr	r3, [pc, #132]	; 1fcf8 <__assert_fail@plt+0xd60c>
   1fc70:	ldrb	r3, [r3]
   1fc74:	cmp	r3, #0
   1fc78:	beq	1fca4 <__assert_fail@plt+0xd5b8>
   1fc7c:	ldr	r3, [fp, #-8]
   1fc80:	ldrd	r0, [r3]
   1fc84:	ldr	r3, [pc, #112]	; 1fcfc <__assert_fail@plt+0xd610>
   1fc88:	ldrd	r2, [r3]
   1fc8c:	cmp	r1, r3
   1fc90:	cmpeq	r0, r2
   1fc94:	bne	1fca4 <__assert_fail@plt+0xd5b8>
   1fc98:	ldr	r3, [pc, #84]	; 1fcf4 <__assert_fail@plt+0xd608>
   1fc9c:	ldr	r3, [r3]
   1fca0:	b	1fce8 <__assert_fail@plt+0xd5fc>
   1fca4:	ldr	r3, [pc, #72]	; 1fcf4 <__assert_fail@plt+0xd608>
   1fca8:	ldr	r3, [r3]
   1fcac:	mov	r0, r3
   1fcb0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   1fcb4:	ldr	r3, [fp, #-8]
   1fcb8:	ldrd	r2, [r3]
   1fcbc:	ldr	r1, [pc, #56]	; 1fcfc <__assert_fail@plt+0xd610>
   1fcc0:	strd	r2, [r1]
   1fcc4:	ldr	r2, [pc, #44]	; 1fcf8 <__assert_fail@plt+0xd60c>
   1fcc8:	ldr	r1, [fp, #-12]
   1fccc:	ldr	r0, [fp, #-8]
   1fcd0:	bl	1fe44 <__assert_fail@plt+0xd758>
   1fcd4:	mov	r2, r0
   1fcd8:	ldr	r3, [pc, #20]	; 1fcf4 <__assert_fail@plt+0xd608>
   1fcdc:	str	r2, [r3]
   1fce0:	ldr	r3, [pc, #12]	; 1fcf4 <__assert_fail@plt+0xd608>
   1fce4:	ldr	r3, [r3]
   1fce8:	mov	r0, r3
   1fcec:	sub	sp, fp, #4
   1fcf0:	pop	{fp, pc}
   1fcf4:	andeq	ip, r7, r0, lsr #29
   1fcf8:	andeq	ip, r7, r4, lsr #29
   1fcfc:	andeq	ip, r7, r8, lsr #29
   1fd00:	push	{fp, lr}
   1fd04:	add	fp, sp, #4
   1fd08:	sub	sp, sp, #16
   1fd0c:	str	r0, [fp, #-16]
   1fd10:	ldr	r1, [fp, #-16]
   1fd14:	ldr	r0, [pc, #148]	; 1fdb0 <__assert_fail@plt+0xd6c4>
   1fd18:	bl	11ffc <strcmp@plt>
   1fd1c:	mov	r3, r0
   1fd20:	cmp	r3, #0
   1fd24:	bne	1fd30 <__assert_fail@plt+0xd644>
   1fd28:	mov	r3, #1
   1fd2c:	b	1fda4 <__assert_fail@plt+0xd6b8>
   1fd30:	mov	r0, #0
   1fd34:	bl	1fb90 <__assert_fail@plt+0xd4a4>
   1fd38:	str	r0, [fp, #-12]
   1fd3c:	ldr	r3, [fp, #-12]
   1fd40:	cmp	r3, #0
   1fd44:	beq	1fd98 <__assert_fail@plt+0xd6ac>
   1fd48:	ldr	r3, [fp, #-12]
   1fd4c:	str	r3, [fp, #-8]
   1fd50:	b	1fd88 <__assert_fail@plt+0xd69c>
   1fd54:	ldr	r3, [fp, #-8]
   1fd58:	ldr	r3, [r3, #12]
   1fd5c:	mov	r1, r3
   1fd60:	ldr	r0, [fp, #-16]
   1fd64:	bl	11ffc <strcmp@plt>
   1fd68:	mov	r3, r0
   1fd6c:	cmp	r3, #0
   1fd70:	bne	1fd7c <__assert_fail@plt+0xd690>
   1fd74:	mov	r3, #1
   1fd78:	b	1fda4 <__assert_fail@plt+0xd6b8>
   1fd7c:	ldr	r3, [fp, #-8]
   1fd80:	ldr	r3, [r3, #28]
   1fd84:	str	r3, [fp, #-8]
   1fd88:	ldr	r3, [fp, #-8]
   1fd8c:	cmp	r3, #0
   1fd90:	bne	1fd54 <__assert_fail@plt+0xd668>
   1fd94:	b	1fda0 <__assert_fail@plt+0xd6b4>
   1fd98:	mov	r3, #1
   1fd9c:	b	1fda4 <__assert_fail@plt+0xd6b8>
   1fda0:	mov	r3, #0
   1fda4:	mov	r0, r3
   1fda8:	sub	sp, fp, #4
   1fdac:	pop	{fp, pc}
   1fdb0:	andeq	r6, r6, r4, ror #17
   1fdb4:	push	{fp, lr}
   1fdb8:	add	fp, sp, #4
   1fdbc:	sub	sp, sp, #112	; 0x70
   1fdc0:	str	r0, [fp, #-112]	; 0xffffff90
   1fdc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1fdc8:	ldrd	r2, [r3, #16]
   1fdcc:	mvn	r0, #0
   1fdd0:	mvn	r1, #0
   1fdd4:	cmp	r3, r1
   1fdd8:	cmpeq	r2, r0
   1fddc:	bne	1fe30 <__assert_fail@plt+0xd744>
   1fde0:	sub	r3, fp, #108	; 0x6c
   1fde4:	mov	r0, r3
   1fde8:	bl	1ad50 <__assert_fail@plt+0x8664>
   1fdec:	ldr	r3, [pc, #76]	; 1fe40 <__assert_fail@plt+0xd754>
   1fdf0:	ldr	r3, [r3, #52]	; 0x34
   1fdf4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1fdf8:	ldr	r2, [r2, #4]
   1fdfc:	sub	r1, fp, #108	; 0x6c
   1fe00:	mov	r0, r2
   1fe04:	blx	r3
   1fe08:	mov	r3, r0
   1fe0c:	cmp	r3, #0
   1fe10:	bne	1fe28 <__assert_fail@plt+0xd73c>
   1fe14:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1fe18:	ldr	r1, [fp, #-112]	; 0xffffff90
   1fe1c:	strd	r2, [r1, #16]
   1fe20:	mov	r3, #0
   1fe24:	b	1fe34 <__assert_fail@plt+0xd748>
   1fe28:	mvn	r3, #0
   1fe2c:	b	1fe34 <__assert_fail@plt+0xd748>
   1fe30:	mov	r3, #0
   1fe34:	mov	r0, r3
   1fe38:	sub	sp, fp, #4
   1fe3c:	pop	{fp, pc}
   1fe40:	andeq	sp, r7, ip, asr #32
   1fe44:	push	{fp, lr}
   1fe48:	add	fp, sp, #4
   1fe4c:	sub	sp, sp, #32
   1fe50:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe54:	str	r1, [fp, #-28]	; 0xffffffe4
   1fe58:	str	r2, [fp, #-32]	; 0xffffffe0
   1fe5c:	mov	r3, #0
   1fe60:	str	r3, [fp, #-12]
   1fe64:	mov	r0, #1
   1fe68:	bl	1fb90 <__assert_fail@plt+0xd4a4>
   1fe6c:	str	r0, [fp, #-20]	; 0xffffffec
   1fe70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe74:	cmp	r3, #0
   1fe78:	bne	1fe98 <__assert_fail@plt+0xd7ac>
   1fe7c:	ldr	r0, [pc, #280]	; 1ff9c <__assert_fail@plt+0xd8b0>
   1fe80:	bl	12398 <gettext@plt>
   1fe84:	mov	r3, r0
   1fe88:	mov	r2, r3
   1fe8c:	mov	r1, #0
   1fe90:	mov	r0, #1
   1fe94:	bl	122b4 <error@plt>
   1fe98:	mov	r3, #0
   1fe9c:	str	r3, [fp, #-16]
   1fea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fea4:	str	r3, [fp, #-8]
   1fea8:	b	1ff18 <__assert_fail@plt+0xd82c>
   1feac:	ldr	r3, [fp, #-8]
   1feb0:	ldr	r3, [r3, #12]
   1feb4:	ldr	r1, [pc, #228]	; 1ffa0 <__assert_fail@plt+0xd8b4>
   1feb8:	mov	r0, r3
   1febc:	bl	11ffc <strcmp@plt>
   1fec0:	mov	r3, r0
   1fec4:	cmp	r3, #0
   1fec8:	beq	1ff08 <__assert_fail@plt+0xd81c>
   1fecc:	ldr	r0, [fp, #-8]
   1fed0:	bl	1fdb4 <__assert_fail@plt+0xd6c8>
   1fed4:	mov	r3, r0
   1fed8:	cmp	r3, #0
   1fedc:	bne	1ff0c <__assert_fail@plt+0xd820>
   1fee0:	ldr	r3, [fp, #-8]
   1fee4:	ldrd	r0, [r3, #16]
   1fee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1feec:	ldrd	r2, [r3]
   1fef0:	cmp	r1, r3
   1fef4:	cmpeq	r0, r2
   1fef8:	bne	1ff0c <__assert_fail@plt+0xd820>
   1fefc:	ldr	r3, [fp, #-8]
   1ff00:	str	r3, [fp, #-12]
   1ff04:	b	1ff0c <__assert_fail@plt+0xd820>
   1ff08:	nop			; (mov r0, r0)
   1ff0c:	ldr	r3, [fp, #-8]
   1ff10:	ldr	r3, [r3, #28]
   1ff14:	str	r3, [fp, #-8]
   1ff18:	ldr	r3, [fp, #-8]
   1ff1c:	cmp	r3, #0
   1ff20:	bne	1feac <__assert_fail@plt+0xd7c0>
   1ff24:	ldr	r3, [fp, #-12]
   1ff28:	cmp	r3, #0
   1ff2c:	beq	1ff48 <__assert_fail@plt+0xd85c>
   1ff30:	ldr	r3, [fp, #-12]
   1ff34:	ldr	r3, [r3, #12]
   1ff38:	mov	r0, r3
   1ff3c:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   1ff40:	mov	r3, r0
   1ff44:	str	r3, [fp, #-16]
   1ff48:	ldr	r3, [fp, #-16]
   1ff4c:	cmp	r3, #0
   1ff50:	movne	r3, #1
   1ff54:	moveq	r3, #0
   1ff58:	uxtb	r2, r3
   1ff5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ff60:	strb	r2, [r3]
   1ff64:	ldr	r3, [fp, #-16]
   1ff68:	cmp	r3, #0
   1ff6c:	bne	1ff8c <__assert_fail@plt+0xd8a0>
   1ff70:	ldr	r0, [pc, #44]	; 1ffa4 <__assert_fail@plt+0xd8b8>
   1ff74:	bl	12398 <gettext@plt>
   1ff78:	mov	r3, r0
   1ff7c:	mov	r0, r3
   1ff80:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   1ff84:	mov	r3, r0
   1ff88:	b	1ff90 <__assert_fail@plt+0xd8a4>
   1ff8c:	ldr	r3, [fp, #-16]
   1ff90:	mov	r0, r3
   1ff94:	sub	sp, fp, #4
   1ff98:	pop	{fp, pc}
   1ff9c:	andeq	r6, r6, r8, ror #17
   1ffa0:	andeq	r6, r6, r0, lsl r9
   1ffa4:	andeq	r6, r6, r8, lsl r9
   1ffa8:	push	{fp, lr}
   1ffac:	add	fp, sp, #4
   1ffb0:	sub	sp, sp, #32
   1ffb4:	str	r0, [fp, #-32]	; 0xffffffe0
   1ffb8:	mov	r3, #0
   1ffbc:	str	r3, [fp, #-28]	; 0xffffffe4
   1ffc0:	mov	r3, #0
   1ffc4:	str	r3, [fp, #-8]
   1ffc8:	mov	r3, #0
   1ffcc:	str	r3, [fp, #-16]
   1ffd0:	mov	r0, #0
   1ffd4:	bl	42f5c <__assert_fail@plt+0x30870>
   1ffd8:	mov	r3, r0
   1ffdc:	str	r3, [fp, #-20]	; 0xffffffec
   1ffe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ffe4:	str	r3, [fp, #-12]
   1ffe8:	b	2007c <__assert_fail@plt+0xd990>
   1ffec:	ldr	r3, [fp, #-8]
   1fff0:	add	r3, r3, #1
   1fff4:	lsl	r3, r3, #3
   1fff8:	sub	r2, fp, #28
   1fffc:	mov	r1, r3
   20000:	ldr	r0, [fp, #-16]
   20004:	bl	274c8 <__assert_fail@plt+0x14ddc>
   20008:	str	r0, [fp, #-24]	; 0xffffffe8
   2000c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20010:	cmp	r3, #0
   20014:	beq	20060 <__assert_fail@plt+0xd974>
   20018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2001c:	str	r3, [fp, #-16]
   20020:	ldr	r0, [fp, #-12]
   20024:	bl	1fdb4 <__assert_fail@plt+0xd6c8>
   20028:	mov	r3, r0
   2002c:	cmp	r3, #0
   20030:	bne	20070 <__assert_fail@plt+0xd984>
   20034:	ldr	r3, [fp, #-8]
   20038:	lsl	r3, r3, #3
   2003c:	ldr	r2, [fp, #-16]
   20040:	add	r1, r2, r3
   20044:	ldr	r3, [fp, #-12]
   20048:	ldrd	r2, [r3, #16]
   2004c:	strd	r2, [r1]
   20050:	ldr	r3, [fp, #-8]
   20054:	add	r3, r3, #1
   20058:	str	r3, [fp, #-8]
   2005c:	b	20070 <__assert_fail@plt+0xd984>
   20060:	ldr	r0, [fp, #-16]
   20064:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   20068:	mov	r3, #0
   2006c:	str	r3, [fp, #-16]
   20070:	ldr	r3, [fp, #-12]
   20074:	ldr	r3, [r3, #28]
   20078:	str	r3, [fp, #-12]
   2007c:	ldr	r3, [fp, #-12]
   20080:	cmp	r3, #0
   20084:	bne	1ffec <__assert_fail@plt+0xd900>
   20088:	ldr	r0, [fp, #-20]	; 0xffffffec
   2008c:	bl	1fb48 <__assert_fail@plt+0xd45c>
   20090:	ldr	r3, [fp, #-16]
   20094:	cmp	r3, #0
   20098:	beq	200a8 <__assert_fail@plt+0xd9bc>
   2009c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200a0:	ldr	r2, [fp, #-8]
   200a4:	str	r2, [r3]
   200a8:	ldr	r3, [fp, #-16]
   200ac:	mov	r0, r3
   200b0:	sub	sp, fp, #4
   200b4:	pop	{fp, pc}
   200b8:	push	{fp, lr}
   200bc:	add	fp, sp, #4
   200c0:	sub	sp, sp, #16
   200c4:	str	r0, [fp, #-8]
   200c8:	str	r1, [fp, #-12]
   200cc:	str	r2, [fp, #-16]
   200d0:	str	r3, [fp, #-20]	; 0xffffffec
   200d4:	bl	12404 <__errno_location@plt>
   200d8:	mov	r3, r0
   200dc:	ldr	r3, [r3]
   200e0:	cmp	r3, #2
   200e4:	beq	200f0 <__assert_fail@plt+0xda04>
   200e8:	cmp	r3, #20
   200ec:	bne	20134 <__assert_fail@plt+0xda48>
   200f0:	ldr	r3, [pc, #76]	; 20144 <__assert_fail@plt+0xda58>
   200f4:	ldr	r3, [r3, #44]	; 0x2c
   200f8:	and	r3, r3, #2
   200fc:	cmp	r3, #0
   20100:	beq	2011c <__assert_fail@plt+0xda30>
   20104:	ldr	r3, [pc, #60]	; 20148 <__assert_fail@plt+0xda5c>
   20108:	ldr	r3, [r3]
   2010c:	ldr	r2, [fp, #-12]
   20110:	ldr	r1, [pc, #52]	; 2014c <__assert_fail@plt+0xda60>
   20114:	mov	r0, r3
   20118:	bl	123f8 <fprintf@plt>
   2011c:	ldr	r2, [fp, #-16]
   20120:	ldr	r1, [fp, #-12]
   20124:	ldr	r0, [fp, #-8]
   20128:	bl	3bf80 <__assert_fail@plt+0x29894>
   2012c:	mov	r3, r0
   20130:	b	20138 <__assert_fail@plt+0xda4c>
   20134:	ldr	r3, [fp, #-20]	; 0xffffffec
   20138:	mov	r0, r3
   2013c:	sub	sp, fp, #4
   20140:	pop	{fp, pc}
   20144:	andeq	sp, r7, ip, asr #32
   20148:	andeq	ip, r7, r8, lsr #14
   2014c:	andeq	r7, r6, r0, ror #2
   20150:	push	{fp, lr}
   20154:	add	fp, sp, #4
   20158:	sub	sp, sp, #24
   2015c:	str	r0, [fp, #-16]
   20160:	str	r1, [fp, #-20]	; 0xffffffec
   20164:	str	r2, [fp, #-24]	; 0xffffffe8
   20168:	ldr	r3, [pc, #108]	; 201dc <__assert_fail@plt+0xdaf0>
   2016c:	ldr	r3, [r3]
   20170:	cmp	r3, #0
   20174:	bne	201bc <__assert_fail@plt+0xdad0>
   20178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2017c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20180:	ldr	r0, [fp, #-16]
   20184:	bl	3bd0c <__assert_fail@plt+0x29620>
   20188:	str	r0, [fp, #-8]
   2018c:	ldr	r3, [fp, #-8]
   20190:	cmp	r3, #0
   20194:	bne	201a0 <__assert_fail@plt+0xdab4>
   20198:	mov	r3, #0
   2019c:	b	201d0 <__assert_fail@plt+0xdae4>
   201a0:	ldr	r3, [fp, #-8]
   201a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   201ac:	ldr	r0, [fp, #-16]
   201b0:	bl	200b8 <__assert_fail@plt+0xd9cc>
   201b4:	mov	r3, r0
   201b8:	b	201d0 <__assert_fail@plt+0xdae4>
   201bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   201c4:	ldr	r0, [fp, #-16]
   201c8:	bl	3bf80 <__assert_fail@plt+0x29894>
   201cc:	mov	r3, r0
   201d0:	mov	r0, r3
   201d4:	sub	sp, fp, #4
   201d8:	pop	{fp, pc}
   201dc:	andeq	sp, r7, r0, lsr #32
   201e0:	push	{fp, lr}
   201e4:	add	fp, sp, #4
   201e8:	sub	sp, sp, #24
   201ec:	str	r0, [fp, #-16]
   201f0:	str	r1, [fp, #-20]	; 0xffffffec
   201f4:	str	r2, [fp, #-24]	; 0xffffffe8
   201f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   20200:	ldr	r0, [fp, #-16]
   20204:	bl	3bd0c <__assert_fail@plt+0x29620>
   20208:	str	r0, [fp, #-8]
   2020c:	ldr	r3, [fp, #-8]
   20210:	cmp	r3, #0
   20214:	bne	20220 <__assert_fail@plt+0xdb34>
   20218:	mov	r3, #0
   2021c:	b	20238 <__assert_fail@plt+0xdb4c>
   20220:	ldr	r3, [fp, #-8]
   20224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20228:	ldr	r1, [fp, #-20]	; 0xffffffec
   2022c:	ldr	r0, [fp, #-16]
   20230:	bl	200b8 <__assert_fail@plt+0xd9cc>
   20234:	mov	r3, r0
   20238:	mov	r0, r3
   2023c:	sub	sp, fp, #4
   20240:	pop	{fp, pc}
   20244:	push	{fp, lr}
   20248:	add	fp, sp, #4
   2024c:	sub	sp, sp, #16
   20250:	str	r0, [fp, #-8]
   20254:	str	r1, [fp, #-12]
   20258:	str	r2, [fp, #-16]
   2025c:	ldr	r2, [fp, #-16]
   20260:	ldr	r1, [fp, #-12]
   20264:	ldr	r0, [fp, #-8]
   20268:	bl	3bf80 <__assert_fail@plt+0x29894>
   2026c:	mov	r3, r0
   20270:	mov	r0, r3
   20274:	sub	sp, fp, #4
   20278:	pop	{fp, pc}
   2027c:	push	{fp, lr}
   20280:	add	fp, sp, #4
   20284:	sub	sp, sp, #16
   20288:	str	r0, [fp, #-16]
   2028c:	mov	r3, #0
   20290:	str	r3, [fp, #-8]
   20294:	b	202e8 <__assert_fail@plt+0xdbfc>
   20298:	ldr	r3, [fp, #-16]
   2029c:	ldr	r3, [r3]
   202a0:	ldr	r2, [pc, #172]	; 20354 <__assert_fail@plt+0xdc68>
   202a4:	cmp	r3, r2
   202a8:	bne	202bc <__assert_fail@plt+0xdbd0>
   202ac:	ldr	r3, [fp, #-8]
   202b0:	orr	r3, r3, #1
   202b4:	str	r3, [fp, #-8]
   202b8:	b	202dc <__assert_fail@plt+0xdbf0>
   202bc:	ldr	r3, [fp, #-16]
   202c0:	ldr	r3, [r3]
   202c4:	ldr	r2, [pc, #140]	; 20358 <__assert_fail@plt+0xdc6c>
   202c8:	cmp	r3, r2
   202cc:	bne	202dc <__assert_fail@plt+0xdbf0>
   202d0:	ldr	r3, [fp, #-8]
   202d4:	orr	r3, r3, #2
   202d8:	str	r3, [fp, #-8]
   202dc:	ldr	r3, [fp, #-16]
   202e0:	ldr	r3, [r3, #152]	; 0x98
   202e4:	str	r3, [fp, #-16]
   202e8:	ldr	r3, [fp, #-16]
   202ec:	cmp	r3, #0
   202f0:	bne	20298 <__assert_fail@plt+0xdbac>
   202f4:	ldr	r3, [fp, #-8]
   202f8:	and	r3, r3, #2
   202fc:	cmp	r3, #0
   20300:	beq	20348 <__assert_fail@plt+0xdc5c>
   20304:	ldr	r3, [fp, #-8]
   20308:	and	r3, r3, #1
   2030c:	cmp	r3, #0
   20310:	beq	20348 <__assert_fail@plt+0xdc5c>
   20314:	ldr	r3, [pc, #64]	; 2035c <__assert_fail@plt+0xdc70>
   20318:	ldrb	r3, [r3, #1]
   2031c:	eor	r3, r3, #1
   20320:	uxtb	r3, r3
   20324:	cmp	r3, #0
   20328:	beq	20348 <__assert_fail@plt+0xdc5c>
   2032c:	ldr	r0, [pc, #44]	; 20360 <__assert_fail@plt+0xdc74>
   20330:	bl	12398 <gettext@plt>
   20334:	mov	r3, r0
   20338:	mov	r2, r3
   2033c:	mov	r1, #0
   20340:	mov	r0, #1
   20344:	bl	122b4 <error@plt>
   20348:	nop			; (mov r0, r0)
   2034c:	sub	sp, fp, #4
   20350:	pop	{fp, pc}
   20354:	andeq	r4, r1, r0, lsr #9
   20358:	andeq	r5, r1, r8, ror #19
   2035c:	andeq	sp, r7, ip, asr #32
   20360:			; <UNDEFINED> instruction: 0x000671b0
   20364:	push	{fp}		; (str fp, [sp, #-4]!)
   20368:	add	fp, sp, #0
   2036c:	sub	sp, sp, #12
   20370:	ldr	r3, [pc, #132]	; 203fc <__assert_fail@plt+0xdd10>
   20374:	ldr	r3, [r3]
   20378:	cmp	r3, #0
   2037c:	bne	203e4 <__assert_fail@plt+0xdcf8>
   20380:	mov	r3, #0
   20384:	str	r3, [fp, #-8]
   20388:	b	203c8 <__assert_fail@plt+0xdcdc>
   2038c:	ldr	r2, [pc, #108]	; 20400 <__assert_fail@plt+0xdd14>
   20390:	ldr	r3, [fp, #-8]
   20394:	ldr	r3, [r2, r3, lsl #4]
   20398:	cmp	r3, #1
   2039c:	bne	203bc <__assert_fail@plt+0xdcd0>
   203a0:	ldr	r3, [fp, #-8]
   203a4:	lsl	r3, r3, #4
   203a8:	ldr	r2, [pc, #80]	; 20400 <__assert_fail@plt+0xdd14>
   203ac:	add	r3, r3, r2
   203b0:	ldr	r2, [pc, #68]	; 203fc <__assert_fail@plt+0xdd10>
   203b4:	str	r3, [r2]
   203b8:	b	203e4 <__assert_fail@plt+0xdcf8>
   203bc:	ldr	r3, [fp, #-8]
   203c0:	add	r3, r3, #1
   203c4:	str	r3, [fp, #-8]
   203c8:	ldr	r2, [pc, #48]	; 20400 <__assert_fail@plt+0xdd14>
   203cc:	ldr	r3, [fp, #-8]
   203d0:	lsl	r3, r3, #4
   203d4:	add	r3, r2, r3
   203d8:	ldr	r3, [r3, #4]
   203dc:	cmp	r3, #0
   203e0:	bne	2038c <__assert_fail@plt+0xdca0>
   203e4:	ldr	r3, [pc, #16]	; 203fc <__assert_fail@plt+0xdd10>
   203e8:	ldr	r3, [r3]
   203ec:	mov	r0, r3
   203f0:	add	sp, fp, #0
   203f4:	pop	{fp}		; (ldr fp, [sp], #4)
   203f8:	bx	lr
   203fc:			; <UNDEFINED> instruction: 0x0007ceb4
   20400:	strdeq	r6, [r6], -r0
   20404:	push	{r4, fp, lr}
   20408:	add	fp, sp, #8
   2040c:	sub	sp, sp, #28
   20410:	str	r0, [fp, #-16]
   20414:	mov	r3, r1
   20418:	str	r2, [fp, #-24]	; 0xffffffe8
   2041c:	strb	r3, [fp, #-17]	; 0xffffffef
   20420:	ldrb	r3, [fp, #-17]	; 0xffffffef
   20424:	cmp	r3, #97	; 0x61
   20428:	beq	20454 <__assert_fail@plt+0xdd68>
   2042c:	cmp	r3, #97	; 0x61
   20430:	bgt	20440 <__assert_fail@plt+0xdd54>
   20434:	cmp	r3, #66	; 0x42
   20438:	beq	20480 <__assert_fail@plt+0xdd94>
   2043c:	b	20514 <__assert_fail@plt+0xde28>
   20440:	cmp	r3, #99	; 0x63
   20444:	beq	204bc <__assert_fail@plt+0xddd0>
   20448:	cmp	r3, #109	; 0x6d
   2044c:	beq	204e8 <__assert_fail@plt+0xddfc>
   20450:	b	20514 <__assert_fail@plt+0xde28>
   20454:	ldr	r4, [fp, #-24]	; 0xffffffe8
   20458:	sub	r3, fp, #36	; 0x24
   2045c:	ldr	r1, [fp, #-16]
   20460:	mov	r0, r3
   20464:	bl	3c778 <__assert_fail@plt+0x2a08c>
   20468:	mov	r2, r4
   2046c:	sub	r3, fp, #36	; 0x24
   20470:	ldm	r3, {r0, r1}
   20474:	stm	r2, {r0, r1}
   20478:	mov	r3, #1
   2047c:	b	20528 <__assert_fail@plt+0xde3c>
   20480:	ldr	r4, [fp, #-24]	; 0xffffffe8
   20484:	sub	r3, fp, #36	; 0x24
   20488:	ldr	r1, [fp, #-16]
   2048c:	mov	r0, r3
   20490:	bl	3c820 <__assert_fail@plt+0x2a134>
   20494:	mov	r2, r4
   20498:	sub	r3, fp, #36	; 0x24
   2049c:	ldm	r3, {r0, r1}
   204a0:	stm	r2, {r0, r1}
   204a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   204a8:	ldr	r3, [r3, #4]
   204ac:	mvn	r3, r3
   204b0:	lsr	r3, r3, #31
   204b4:	uxtb	r3, r3
   204b8:	b	20528 <__assert_fail@plt+0xde3c>
   204bc:	ldr	r4, [fp, #-24]	; 0xffffffe8
   204c0:	sub	r3, fp, #36	; 0x24
   204c4:	ldr	r1, [fp, #-16]
   204c8:	mov	r0, r3
   204cc:	bl	3c7b0 <__assert_fail@plt+0x2a0c4>
   204d0:	mov	r2, r4
   204d4:	sub	r3, fp, #36	; 0x24
   204d8:	ldm	r3, {r0, r1}
   204dc:	stm	r2, {r0, r1}
   204e0:	mov	r3, #1
   204e4:	b	20528 <__assert_fail@plt+0xde3c>
   204e8:	ldr	r4, [fp, #-24]	; 0xffffffe8
   204ec:	sub	r3, fp, #36	; 0x24
   204f0:	ldr	r1, [fp, #-16]
   204f4:	mov	r0, r3
   204f8:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   204fc:	mov	r2, r4
   20500:	sub	r3, fp, #36	; 0x24
   20504:	ldm	r3, {r0, r1}
   20508:	stm	r2, {r0, r1}
   2050c:	mov	r3, #1
   20510:	b	20528 <__assert_fail@plt+0xde3c>
   20514:	ldr	r3, [pc, #24]	; 20534 <__assert_fail@plt+0xde48>
   20518:	ldr	r2, [pc, #24]	; 20538 <__assert_fail@plt+0xde4c>
   2051c:	ldr	r1, [pc, #24]	; 2053c <__assert_fail@plt+0xde50>
   20520:	ldr	r0, [pc, #24]	; 20540 <__assert_fail@plt+0xde54>
   20524:	bl	126ec <__assert_fail@plt>
   20528:	mov	r0, r3
   2052c:	sub	sp, fp, #8
   20530:	pop	{r4, fp, pc}
   20534:	andeq	r8, r6, r8, lsr r1
   20538:	strdeq	r0, [r0], -r2
   2053c:	andeq	r7, r6, ip, asr r2
   20540:	andeq	r7, r6, r8, ror #4
   20544:	push	{fp}		; (str fp, [sp, #-4]!)
   20548:	add	fp, sp, #0
   2054c:	sub	sp, sp, #12
   20550:	str	r0, [fp, #-8]
   20554:	ldr	r3, [fp, #-8]
   20558:	cmp	r3, #1
   2055c:	beq	20574 <__assert_fail@plt+0xde88>
   20560:	cmp	r3, #1
   20564:	bcc	2059c <__assert_fail@plt+0xdeb0>
   20568:	cmp	r3, #2
   2056c:	beq	205b8 <__assert_fail@plt+0xdecc>
   20570:	b	205dc <__assert_fail@plt+0xdef0>
   20574:	ldr	r3, [pc, #156]	; 20618 <__assert_fail@plt+0xdf2c>
   20578:	ldr	r2, [pc, #156]	; 2061c <__assert_fail@plt+0xdf30>
   2057c:	str	r2, [r3, #52]	; 0x34
   20580:	ldr	r3, [pc, #144]	; 20618 <__assert_fail@plt+0xdf2c>
   20584:	ldr	r2, [pc, #148]	; 20620 <__assert_fail@plt+0xdf34>
   20588:	str	r2, [r3, #64]	; 0x40
   2058c:	ldr	r3, [pc, #132]	; 20618 <__assert_fail@plt+0xdf2c>
   20590:	mov	r2, #1
   20594:	strb	r2, [r3, #12]
   20598:	b	205dc <__assert_fail@plt+0xdef0>
   2059c:	ldr	r3, [pc, #116]	; 20618 <__assert_fail@plt+0xdf2c>
   205a0:	ldr	r2, [pc, #124]	; 20624 <__assert_fail@plt+0xdf38>
   205a4:	str	r2, [r3, #52]	; 0x34
   205a8:	ldr	r3, [pc, #104]	; 20618 <__assert_fail@plt+0xdf2c>
   205ac:	ldr	r2, [pc, #116]	; 20628 <__assert_fail@plt+0xdf3c>
   205b0:	str	r2, [r3, #64]	; 0x40
   205b4:	b	205dc <__assert_fail@plt+0xdef0>
   205b8:	ldr	r3, [pc, #88]	; 20618 <__assert_fail@plt+0xdf2c>
   205bc:	ldr	r2, [pc, #104]	; 2062c <__assert_fail@plt+0xdf40>
   205c0:	str	r2, [r3, #52]	; 0x34
   205c4:	ldr	r3, [pc, #76]	; 20618 <__assert_fail@plt+0xdf2c>
   205c8:	ldr	r2, [pc, #96]	; 20630 <__assert_fail@plt+0xdf44>
   205cc:	str	r2, [r3, #64]	; 0x40
   205d0:	ldr	r3, [pc, #64]	; 20618 <__assert_fail@plt+0xdf2c>
   205d4:	mov	r2, #1
   205d8:	strb	r2, [r3, #12]
   205dc:	ldr	r2, [pc, #52]	; 20618 <__assert_fail@plt+0xdf2c>
   205e0:	ldr	r3, [fp, #-8]
   205e4:	str	r3, [r2, #48]	; 0x30
   205e8:	ldr	r3, [pc, #40]	; 20618 <__assert_fail@plt+0xdf2c>
   205ec:	ldr	r3, [r3, #44]	; 0x2c
   205f0:	and	r3, r3, #2
   205f4:	cmp	r3, #0
   205f8:	beq	20608 <__assert_fail@plt+0xdf1c>
   205fc:	ldr	r3, [pc, #20]	; 20618 <__assert_fail@plt+0xdf2c>
   20600:	ldr	r2, [pc, #44]	; 20634 <__assert_fail@plt+0xdf48>
   20604:	str	r2, [r3, #52]	; 0x34
   20608:	nop			; (mov r0, r0)
   2060c:	add	sp, fp, #0
   20610:	pop	{fp}		; (ldr fp, [sp], #4)
   20614:	bx	lr
   20618:	andeq	sp, r7, ip, asr #32
   2061c:	andeq	fp, r1, r0, asr #17
   20620:	andeq	r0, r2, r0, ror #3
   20624:	andeq	fp, r1, r0, ror r9
   20628:	andeq	r0, r2, r4, asr #4
   2062c:	ldrdeq	fp, [r1], -ip
   20630:	andeq	r0, r2, r0, asr r1
   20634:	strdeq	fp, [r1], -ip
   20638:	push	{fp}		; (str fp, [sp, #-4]!)
   2063c:	add	fp, sp, #0
   20640:	sub	sp, sp, #20
   20644:	str	r0, [fp, #-8]
   20648:	str	r1, [fp, #-12]
   2064c:	str	r2, [fp, #-16]
   20650:	str	r3, [fp, #-20]	; 0xffffffec
   20654:	ldr	r3, [pc, #20]	; 20670 <__assert_fail@plt+0xdf84>
   20658:	mov	r2, #0
   2065c:	str	r2, [r3]
   20660:	nop			; (mov r0, r0)
   20664:	add	sp, fp, #0
   20668:	pop	{fp}		; (ldr fp, [sp], #4)
   2066c:	bx	lr
   20670:			; <UNDEFINED> instruction: 0x0007ceb0
   20674:	push	{fp}		; (str fp, [sp, #-4]!)
   20678:	add	fp, sp, #0
   2067c:	sub	sp, sp, #20
   20680:	str	r0, [fp, #-8]
   20684:	str	r1, [fp, #-12]
   20688:	str	r2, [fp, #-16]
   2068c:	str	r3, [fp, #-20]	; 0xffffffec
   20690:	nop			; (mov r0, r0)
   20694:	add	sp, fp, #0
   20698:	pop	{fp}		; (ldr fp, [sp], #4)
   2069c:	bx	lr
   206a0:	push	{fp}		; (str fp, [sp, #-4]!)
   206a4:	add	fp, sp, #0
   206a8:	ldr	r3, [pc, #40]	; 206d8 <__assert_fail@plt+0xdfec>
   206ac:	ldrb	r3, [r3, #17]
   206b0:	cmp	r3, #0
   206b4:	beq	206c0 <__assert_fail@plt+0xdfd4>
   206b8:	mov	r3, #0
   206bc:	b	206c8 <__assert_fail@plt+0xdfdc>
   206c0:	ldr	r3, [pc, #16]	; 206d8 <__assert_fail@plt+0xdfec>
   206c4:	ldrb	r3, [r3, #16]
   206c8:	mov	r0, r3
   206cc:	add	sp, fp, #0
   206d0:	pop	{fp}		; (ldr fp, [sp], #4)
   206d4:	bx	lr
   206d8:	andeq	sp, r7, ip, asr #32
   206dc:	push	{fp, lr}
   206e0:	add	fp, sp, #4
   206e4:	sub	sp, sp, #16
   206e8:	str	r0, [fp, #-8]
   206ec:	str	r1, [fp, #-12]
   206f0:	ldr	r3, [fp, #-12]
   206f4:	ldr	r3, [r3]
   206f8:	cmp	r3, #2
   206fc:	beq	2079c <__assert_fail@plt+0xe0b0>
   20700:	ldr	r3, [fp, #-12]
   20704:	ldr	r3, [r3]
   20708:	cmp	r3, #1
   2070c:	bne	20718 <__assert_fail@plt+0xe02c>
   20710:	mov	r3, #0
   20714:	b	207a0 <__assert_fail@plt+0xe0b4>
   20718:	ldr	r3, [fp, #-12]
   2071c:	ldr	r3, [r3]
   20720:	cmp	r3, #0
   20724:	bne	20780 <__assert_fail@plt+0xe094>
   20728:	ldr	r3, [pc, #124]	; 207ac <__assert_fail@plt+0xe0c0>
   2072c:	ldr	r3, [r3]
   20730:	cmp	r3, #0
   20734:	beq	2079c <__assert_fail@plt+0xe0b0>
   20738:	bl	206a0 <__assert_fail@plt+0xdfb4>
   2073c:	mov	r3, r0
   20740:	cmp	r3, #0
   20744:	beq	2079c <__assert_fail@plt+0xe0b0>
   20748:	ldr	r0, [pc, #96]	; 207b0 <__assert_fail@plt+0xe0c4>
   2074c:	bl	12398 <gettext@plt>
   20750:	mov	r1, r0
   20754:	ldr	r3, [pc, #80]	; 207ac <__assert_fail@plt+0xe0c0>
   20758:	ldr	r3, [r3]
   2075c:	ldr	r2, [fp, #-8]
   20760:	str	r2, [sp, #4]
   20764:	str	r3, [sp]
   20768:	ldr	r3, [fp, #-8]
   2076c:	mov	r2, r1
   20770:	mov	r1, #0
   20774:	mov	r0, #0
   20778:	bl	122b4 <error@plt>
   2077c:	b	2079c <__assert_fail@plt+0xe0b0>
   20780:	ldr	r3, [pc, #36]	; 207ac <__assert_fail@plt+0xe0c0>
   20784:	ldr	r3, [r3]
   20788:	cmp	r3, #0
   2078c:	bne	2079c <__assert_fail@plt+0xe0b0>
   20790:	ldr	r2, [pc, #20]	; 207ac <__assert_fail@plt+0xe0c0>
   20794:	ldr	r3, [fp, #-8]
   20798:	str	r3, [r2]
   2079c:	ldr	r3, [fp, #-12]
   207a0:	mov	r0, r3
   207a4:	sub	sp, fp, #4
   207a8:	pop	{fp, pc}
   207ac:			; <UNDEFINED> instruction: 0x0007ceb0
   207b0:	andeq	r7, r6, ip, ror #4
   207b4:	push	{fp, lr}
   207b8:	add	fp, sp, #4
   207bc:	sub	sp, sp, #16
   207c0:	str	r0, [fp, #-16]
   207c4:	ldr	r3, [fp, #-16]
   207c8:	str	r3, [fp, #-12]
   207cc:	mov	r2, #6
   207d0:	ldr	r1, [fp, #-16]
   207d4:	ldr	r0, [pc, #228]	; 208c0 <__assert_fail@plt+0xe1d4>
   207d8:	bl	1268c <strncmp@plt>
   207dc:	mov	r3, r0
   207e0:	cmp	r3, #0
   207e4:	bne	20810 <__assert_fail@plt+0xe124>
   207e8:	ldr	r0, [fp, #-16]
   207ec:	bl	123bc <strlen@plt>
   207f0:	mov	r3, r0
   207f4:	cmp	r3, #8
   207f8:	bne	20810 <__assert_fail@plt+0xe124>
   207fc:	ldr	r1, [pc, #192]	; 208c4 <__assert_fail@plt+0xe1d8>
   20800:	ldr	r0, [fp, #-12]
   20804:	bl	206dc <__assert_fail@plt+0xdff0>
   20808:	mov	r3, r0
   2080c:	b	208b4 <__assert_fail@plt+0xe1c8>
   20810:	ldr	r3, [fp, #-16]
   20814:	ldrb	r3, [r3]
   20818:	cmp	r3, #45	; 0x2d
   2081c:	bne	2082c <__assert_fail@plt+0xe140>
   20820:	ldr	r3, [fp, #-16]
   20824:	add	r3, r3, #1
   20828:	str	r3, [fp, #-16]
   2082c:	mov	r3, #0
   20830:	str	r3, [fp, #-8]
   20834:	b	20894 <__assert_fail@plt+0xe1a8>
   20838:	ldr	r2, [pc, #136]	; 208c8 <__assert_fail@plt+0xe1dc>
   2083c:	ldr	r3, [fp, #-8]
   20840:	lsl	r3, r3, #4
   20844:	add	r3, r2, r3
   20848:	ldr	r3, [r3, #4]
   2084c:	ldr	r1, [fp, #-16]
   20850:	mov	r0, r3
   20854:	bl	11ffc <strcmp@plt>
   20858:	mov	r3, r0
   2085c:	cmp	r3, #0
   20860:	bne	20888 <__assert_fail@plt+0xe19c>
   20864:	ldr	r3, [fp, #-8]
   20868:	lsl	r3, r3, #4
   2086c:	ldr	r2, [pc, #84]	; 208c8 <__assert_fail@plt+0xe1dc>
   20870:	add	r3, r3, r2
   20874:	mov	r1, r3
   20878:	ldr	r0, [fp, #-12]
   2087c:	bl	206dc <__assert_fail@plt+0xdff0>
   20880:	mov	r3, r0
   20884:	b	208b4 <__assert_fail@plt+0xe1c8>
   20888:	ldr	r3, [fp, #-8]
   2088c:	add	r3, r3, #1
   20890:	str	r3, [fp, #-8]
   20894:	ldr	r2, [pc, #44]	; 208c8 <__assert_fail@plt+0xe1dc>
   20898:	ldr	r3, [fp, #-8]
   2089c:	lsl	r3, r3, #4
   208a0:	add	r3, r2, r3
   208a4:	ldr	r3, [r3, #4]
   208a8:	cmp	r3, #0
   208ac:	bne	20838 <__assert_fail@plt+0xe14c>
   208b0:	mov	r3, #0
   208b4:	mov	r0, r3
   208b8:	sub	sp, fp, #4
   208bc:	pop	{fp, pc}
   208c0:	andeq	r7, r6, r4, ror #6
   208c4:	andeq	r6, r6, r8, lsr #18
   208c8:	strdeq	r6, [r6], -r0
   208cc:	push	{fp}		; (str fp, [sp, #-4]!)
   208d0:	add	fp, sp, #0
   208d4:	sub	sp, sp, #12
   208d8:	vstr	s0, [fp, #-8]
   208dc:	vldr	s15, [fp, #-8]
   208e0:	vldr	s14, [pc, #96]	; 20948 <__assert_fail@plt+0xe25c>
   208e4:	vcmpe.f32	s15, s14
   208e8:	vmrs	APSR_nzcv, fpscr
   208ec:	bpl	208f8 <__assert_fail@plt+0xe20c>
   208f0:	ldr	r3, [pc, #92]	; 20954 <__assert_fail@plt+0xe268>
   208f4:	b	20934 <__assert_fail@plt+0xe248>
   208f8:	vldr	s15, [fp, #-8]
   208fc:	vldr	s14, [pc, #72]	; 2094c <__assert_fail@plt+0xe260>
   20900:	vcmpe.f32	s15, s14
   20904:	vmrs	APSR_nzcv, fpscr
   20908:	bpl	20914 <__assert_fail@plt+0xe228>
   2090c:	ldr	r3, [pc, #68]	; 20958 <__assert_fail@plt+0xe26c>
   20910:	b	20934 <__assert_fail@plt+0xe248>
   20914:	vldr	s15, [fp, #-8]
   20918:	vldr	s14, [pc, #48]	; 20950 <__assert_fail@plt+0xe264>
   2091c:	vcmpe.f32	s15, s14
   20920:	vmrs	APSR_nzcv, fpscr
   20924:	ble	20930 <__assert_fail@plt+0xe244>
   20928:	ldr	r3, [pc, #40]	; 20958 <__assert_fail@plt+0xe26c>
   2092c:	b	20934 <__assert_fail@plt+0xe248>
   20930:	ldr	r3, [pc, #36]	; 2095c <__assert_fail@plt+0xe270>
   20934:	vmov	s15, r3
   20938:	vmov.f32	s0, s15
   2093c:	add	sp, fp, #0
   20940:	pop	{fp}		; (ldr fp, [sp], #4)
   20944:	bx	lr
   20948:	stclcc	12, cr12, [ip, #820]	; 0x334
   2094c:	svccc	0x00800000
   20950:	sbcmi	r0, r8, #0
   20954:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   20958:			; <UNDEFINED> instruction: 0x3e99999a
   2095c:	mcrcc	14, 6, sl, cr7, cr4, {0}
   20960:	push	{fp, lr}
   20964:	add	fp, sp, #4
   20968:	sub	sp, sp, #16
   2096c:	str	r0, [fp, #-16]
   20970:	ldr	r3, [pc, #72]	; 209c0 <__assert_fail@plt+0xe2d4>
   20974:	ldr	r2, [r3, #28]
   20978:	ldr	r3, [fp, #-16]
   2097c:	sub	r3, r2, r3
   20980:	ldr	r2, [pc, #60]	; 209c4 <__assert_fail@plt+0xe2d8>
   20984:	smull	r1, r2, r2, r3
   20988:	add	r2, r2, r3
   2098c:	asr	r2, r2, #16
   20990:	asr	r3, r3, #31
   20994:	sub	r3, r2, r3
   20998:	str	r3, [fp, #-8]
   2099c:	ldr	r3, [fp, #-8]
   209a0:	vmov	s15, r3
   209a4:	vcvt.f32.s32	s15, s15
   209a8:	vmov.f32	s0, s15
   209ac:	bl	208cc <__assert_fail@plt+0xe1e0>
   209b0:	vmov.f32	s15, s0
   209b4:	vmov.f32	s0, s15
   209b8:	sub	sp, fp, #4
   209bc:	pop	{fp, pc}
   209c0:	andeq	sp, r7, ip, asr #32
   209c4:	eorgt	r4, lr, #29360128	; 0x1c00000
   209c8:	push	{fp}		; (str fp, [sp, #-4]!)
   209cc:	add	fp, sp, #0
   209d0:	sub	sp, sp, #20
   209d4:	str	r0, [fp, #-8]
   209d8:	str	r1, [fp, #-12]
   209dc:	str	r2, [fp, #-16]
   209e0:	ldr	r3, [fp, #-8]
   209e4:	cmp	r3, #0
   209e8:	beq	20a0c <__assert_fail@plt+0xe320>
   209ec:	ldr	r3, [fp, #-12]
   209f0:	ldr	r3, [r3]
   209f4:	lsl	r3, r3, #2
   209f8:	ldr	r2, [fp, #-8]
   209fc:	add	r3, r2, r3
   20a00:	ldr	r3, [r3]
   20a04:	cmp	r3, #0
   20a08:	bne	20a20 <__assert_fail@plt+0xe334>
   20a0c:	ldr	r3, [fp, #-16]
   20a10:	mov	r2, #0
   20a14:	str	r2, [r3]
   20a18:	mov	r3, #0
   20a1c:	b	20a58 <__assert_fail@plt+0xe36c>
   20a20:	ldr	r3, [fp, #-12]
   20a24:	ldr	r3, [r3]
   20a28:	lsl	r3, r3, #2
   20a2c:	ldr	r2, [fp, #-8]
   20a30:	add	r3, r2, r3
   20a34:	ldr	r2, [r3]
   20a38:	ldr	r3, [fp, #-16]
   20a3c:	str	r2, [r3]
   20a40:	ldr	r3, [fp, #-12]
   20a44:	ldr	r3, [r3]
   20a48:	add	r2, r3, #1
   20a4c:	ldr	r3, [fp, #-12]
   20a50:	str	r2, [r3]
   20a54:	mov	r3, #1
   20a58:	mov	r0, r3
   20a5c:	add	sp, fp, #0
   20a60:	pop	{fp}		; (ldr fp, [sp], #4)
   20a64:	bx	lr
   20a68:	push	{fp, lr}
   20a6c:	add	fp, sp, #4
   20a70:	sub	sp, sp, #24
   20a74:	str	r0, [fp, #-16]
   20a78:	str	r1, [fp, #-20]	; 0xffffffec
   20a7c:	str	r2, [fp, #-24]	; 0xffffffe8
   20a80:	sub	r3, fp, #12
   20a84:	mov	r2, r3
   20a88:	ldr	r1, [fp, #-20]	; 0xffffffec
   20a8c:	ldr	r0, [fp, #-16]
   20a90:	bl	209c8 <__assert_fail@plt+0xe2dc>
   20a94:	mov	r3, r0
   20a98:	strb	r3, [fp, #-5]
   20a9c:	ldr	r2, [fp, #-12]
   20aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20aa4:	str	r2, [r3]
   20aa8:	ldrb	r3, [fp, #-5]
   20aac:	mov	r0, r3
   20ab0:	sub	sp, fp, #4
   20ab4:	pop	{fp, pc}
   20ab8:	push	{fp, lr}
   20abc:	add	fp, sp, #4
   20ac0:	sub	sp, sp, #24
   20ac4:	str	r0, [fp, #-16]
   20ac8:	str	r1, [fp, #-20]	; 0xffffffec
   20acc:	str	r2, [fp, #-24]	; 0xffffffe8
   20ad0:	str	r3, [fp, #-28]	; 0xffffffe4
   20ad4:	sub	r3, fp, #8
   20ad8:	mov	r2, r3
   20adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   20ae0:	ldr	r0, [fp, #-16]
   20ae4:	bl	20a68 <__assert_fail@plt+0xe37c>
   20ae8:	mov	r3, r0
   20aec:	cmp	r3, #0
   20af0:	beq	20b48 <__assert_fail@plt+0xe45c>
   20af4:	ldr	r2, [fp, #-8]
   20af8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20afc:	str	r2, [r3]
   20b00:	ldr	r3, [pc, #92]	; 20b64 <__assert_fail@plt+0xe478>
   20b04:	ldr	r3, [r3, #52]	; 0x34
   20b08:	ldr	r2, [fp, #-8]
   20b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20b10:	mov	r0, r2
   20b14:	blx	r3
   20b18:	mov	r3, r0
   20b1c:	cmp	r3, #0
   20b20:	beq	20b40 <__assert_fail@plt+0xe454>
   20b24:	bl	12404 <__errno_location@plt>
   20b28:	mov	r3, r0
   20b2c:	ldr	r3, [r3]
   20b30:	ldr	r2, [fp, #-8]
   20b34:	mov	r1, r2
   20b38:	mov	r0, r3
   20b3c:	bl	1c914 <__assert_fail@plt+0xa228>
   20b40:	mov	r3, #1
   20b44:	b	20b58 <__assert_fail@plt+0xe46c>
   20b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b4c:	mov	r2, #0
   20b50:	str	r2, [r3]
   20b54:	mov	r3, #0
   20b58:	mov	r0, r3
   20b5c:	sub	sp, fp, #4
   20b60:	pop	{fp, pc}
   20b64:	andeq	sp, r7, ip, asr #32
   20b68:	push	{fp, lr}
   20b6c:	add	fp, sp, #4
   20b70:	sub	sp, sp, #24
   20b74:	str	r0, [fp, #-16]
   20b78:	str	r1, [fp, #-20]	; 0xffffffec
   20b7c:	str	r2, [fp, #-24]	; 0xffffffe8
   20b80:	ldr	r0, [fp, #-16]
   20b84:	bl	19fe4 <__assert_fail@plt+0x78f8>
   20b88:	str	r0, [fp, #-8]
   20b8c:	ldr	r3, [fp, #-8]
   20b90:	ldr	r2, [pc, #68]	; 20bdc <__assert_fail@plt+0xe4f0>
   20b94:	str	r2, [r3]
   20b98:	ldr	r3, [fp, #-8]
   20b9c:	mov	r2, #3
   20ba0:	str	r2, [r3, #8]
   20ba4:	ldr	r3, [fp, #-8]
   20ba8:	mov	r2, #3
   20bac:	str	r2, [r3, #12]
   20bb0:	ldr	r3, [fp, #-8]
   20bb4:	mov	r2, #0
   20bb8:	strb	r2, [r3, #19]
   20bbc:	ldr	r3, [fp, #-8]
   20bc0:	ldrb	r2, [r3, #19]
   20bc4:	ldr	r3, [fp, #-8]
   20bc8:	strb	r2, [r3, #18]
   20bcc:	mov	r3, #1
   20bd0:	mov	r0, r3
   20bd4:	sub	sp, fp, #4
   20bd8:	pop	{fp, pc}
   20bdc:	andeq	r4, r1, r4, lsr r1
   20be0:	push	{r4, fp, lr}
   20be4:	add	fp, sp, #8
   20be8:	sub	sp, sp, #148	; 0x94
   20bec:	str	r0, [fp, #-136]	; 0xffffff78
   20bf0:	str	r1, [fp, #-140]	; 0xffffff74
   20bf4:	str	r2, [fp, #-144]	; 0xffffff70
   20bf8:	sub	r3, fp, #124	; 0x7c
   20bfc:	mov	r0, r3
   20c00:	bl	1ad50 <__assert_fail@plt+0x8664>
   20c04:	sub	r3, fp, #128	; 0x80
   20c08:	sub	r2, fp, #124	; 0x7c
   20c0c:	ldr	r1, [fp, #-144]	; 0xffffff70
   20c10:	ldr	r0, [fp, #-140]	; 0xffffff74
   20c14:	bl	20ab8 <__assert_fail@plt+0xe3cc>
   20c18:	mov	r3, r0
   20c1c:	cmp	r3, #0
   20c20:	beq	20c98 <__assert_fail@plt+0xe5ac>
   20c24:	ldr	r3, [fp, #-128]	; 0xffffff80
   20c28:	mov	r1, r3
   20c2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20c30:	bl	1a948 <__assert_fail@plt+0x825c>
   20c34:	str	r0, [fp, #-16]
   20c38:	ldr	r3, [fp, #-16]
   20c3c:	mov	r2, #0
   20c40:	str	r2, [r3, #40]	; 0x28
   20c44:	ldr	r4, [fp, #-16]
   20c48:	sub	r3, fp, #156	; 0x9c
   20c4c:	sub	r2, fp, #124	; 0x7c
   20c50:	mov	r1, r2
   20c54:	mov	r0, r3
   20c58:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   20c5c:	add	r3, r4, #48	; 0x30
   20c60:	sub	r2, fp, #156	; 0x9c
   20c64:	ldm	r2, {r0, r1}
   20c68:	stm	r3, {r0, r1}
   20c6c:	ldr	r3, [fp, #-16]
   20c70:	mov	r2, #0
   20c74:	str	r2, [r3, #44]	; 0x2c
   20c78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20c7c:	mov	r0, r3
   20c80:	bl	20960 <__assert_fail@plt+0xe274>
   20c84:	vmov.f32	s15, s0
   20c88:	ldr	r3, [fp, #-16]
   20c8c:	vstr	s15, [r3, #28]
   20c90:	mov	r3, #1
   20c94:	b	20c9c <__assert_fail@plt+0xe5b0>
   20c98:	mov	r3, #0
   20c9c:	mov	r0, r3
   20ca0:	sub	sp, fp, #8
   20ca4:	pop	{r4, fp, pc}
   20ca8:	push	{fp, lr}
   20cac:	add	fp, sp, #4
   20cb0:	sub	sp, sp, #24
   20cb4:	str	r0, [fp, #-16]
   20cb8:	str	r1, [fp, #-20]	; 0xffffffec
   20cbc:	str	r2, [fp, #-24]	; 0xffffffe8
   20cc0:	ldr	r0, [fp, #-16]
   20cc4:	bl	19fe4 <__assert_fail@plt+0x78f8>
   20cc8:	str	r0, [fp, #-8]
   20ccc:	ldr	r3, [fp, #-8]
   20cd0:	ldr	r2, [pc, #68]	; 20d1c <__assert_fail@plt+0xe630>
   20cd4:	str	r2, [r3]
   20cd8:	ldr	r3, [fp, #-8]
   20cdc:	mov	r2, #5
   20ce0:	str	r2, [r3, #8]
   20ce4:	ldr	r3, [fp, #-8]
   20ce8:	mov	r2, #0
   20cec:	str	r2, [r3, #12]
   20cf0:	ldr	r3, [fp, #-8]
   20cf4:	mov	r2, #0
   20cf8:	strb	r2, [r3, #19]
   20cfc:	ldr	r3, [fp, #-8]
   20d00:	ldrb	r2, [r3, #19]
   20d04:	ldr	r3, [fp, #-8]
   20d08:	strb	r2, [r3, #18]
   20d0c:	mov	r3, #1
   20d10:	mov	r0, r3
   20d14:	sub	sp, fp, #4
   20d18:	pop	{fp, pc}
   20d1c:	muleq	r1, r0, r2
   20d20:	push	{r4, fp, lr}
   20d24:	add	fp, sp, #8
   20d28:	sub	sp, sp, #148	; 0x94
   20d2c:	str	r0, [fp, #-136]	; 0xffffff78
   20d30:	str	r1, [fp, #-140]	; 0xffffff74
   20d34:	str	r2, [fp, #-144]	; 0xffffff70
   20d38:	sub	r3, fp, #124	; 0x7c
   20d3c:	mov	r0, r3
   20d40:	bl	1ad50 <__assert_fail@plt+0x8664>
   20d44:	sub	r3, fp, #128	; 0x80
   20d48:	sub	r2, fp, #124	; 0x7c
   20d4c:	ldr	r1, [fp, #-144]	; 0xffffff70
   20d50:	ldr	r0, [fp, #-140]	; 0xffffff74
   20d54:	bl	20ab8 <__assert_fail@plt+0xe3cc>
   20d58:	mov	r3, r0
   20d5c:	cmp	r3, #0
   20d60:	beq	20dd8 <__assert_fail@plt+0xe6ec>
   20d64:	ldr	r3, [fp, #-128]	; 0xffffff80
   20d68:	mov	r1, r3
   20d6c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20d70:	bl	1a948 <__assert_fail@plt+0x825c>
   20d74:	str	r0, [fp, #-16]
   20d78:	ldr	r3, [fp, #-16]
   20d7c:	mov	r2, #2
   20d80:	str	r2, [r3, #40]	; 0x28
   20d84:	ldr	r4, [fp, #-16]
   20d88:	sub	r3, fp, #156	; 0x9c
   20d8c:	sub	r2, fp, #124	; 0x7c
   20d90:	mov	r1, r2
   20d94:	mov	r0, r3
   20d98:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   20d9c:	add	r3, r4, #48	; 0x30
   20da0:	sub	r2, fp, #156	; 0x9c
   20da4:	ldm	r2, {r0, r1}
   20da8:	stm	r3, {r0, r1}
   20dac:	ldr	r3, [fp, #-16]
   20db0:	mov	r2, #0
   20db4:	str	r2, [r3, #44]	; 0x2c
   20db8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20dbc:	mov	r0, r3
   20dc0:	bl	20960 <__assert_fail@plt+0xe274>
   20dc4:	vmov.f32	s15, s0
   20dc8:	ldr	r3, [fp, #-16]
   20dcc:	vstr	s15, [r3, #28]
   20dd0:	mov	r3, #1
   20dd4:	b	20ddc <__assert_fail@plt+0xe6f0>
   20dd8:	mov	r3, #0
   20ddc:	mov	r0, r3
   20de0:	sub	sp, fp, #8
   20de4:	pop	{r4, fp, pc}
   20de8:	push	{fp, lr}
   20dec:	add	fp, sp, #4
   20df0:	sub	sp, sp, #24
   20df4:	str	r0, [fp, #-16]
   20df8:	str	r1, [fp, #-20]	; 0xffffffec
   20dfc:	str	r2, [fp, #-24]	; 0xffffffe8
   20e00:	ldr	r0, [fp, #-16]
   20e04:	bl	19fe4 <__assert_fail@plt+0x78f8>
   20e08:	str	r0, [fp, #-8]
   20e0c:	ldr	r3, [fp, #-8]
   20e10:	ldr	r2, [pc, #80]	; 20e68 <__assert_fail@plt+0xe77c>
   20e14:	str	r2, [r3]
   20e18:	ldr	r3, [fp, #-8]
   20e1c:	mov	r2, #3
   20e20:	str	r2, [r3, #8]
   20e24:	ldr	r3, [fp, #-8]
   20e28:	mov	r2, #1
   20e2c:	str	r2, [r3, #12]
   20e30:	ldr	r3, [fp, #-8]
   20e34:	mov	r2, #0
   20e38:	strb	r2, [r3, #19]
   20e3c:	ldr	r3, [fp, #-8]
   20e40:	ldrb	r2, [r3, #19]
   20e44:	ldr	r3, [fp, #-8]
   20e48:	strb	r2, [r3, #18]
   20e4c:	ldr	r3, [fp, #-8]
   20e50:	mov	r2, #1065353216	; 0x3f800000
   20e54:	str	r2, [r3, #28]
   20e58:	mov	r3, #1
   20e5c:	mov	r0, r3
   20e60:	sub	sp, fp, #4
   20e64:	pop	{fp, pc}
   20e68:	muleq	r1, r8, r3
   20e6c:	push	{fp, lr}
   20e70:	add	fp, sp, #4
   20e74:	sub	sp, sp, #24
   20e78:	str	r0, [fp, #-16]
   20e7c:	str	r1, [fp, #-20]	; 0xffffffec
   20e80:	str	r2, [fp, #-24]	; 0xffffffe8
   20e84:	ldr	r3, [pc, #228]	; 20f70 <__assert_fail@plt+0xe884>
   20e88:	ldrb	r3, [r3, #36]	; 0x24
   20e8c:	eor	r3, r3, #1
   20e90:	uxtb	r3, r3
   20e94:	cmp	r3, #0
   20e98:	beq	20f60 <__assert_fail@plt+0xe874>
   20e9c:	ldr	r3, [pc, #204]	; 20f70 <__assert_fail@plt+0xe884>
   20ea0:	ldr	r3, [r3, #28]
   20ea4:	add	r3, r3, #86016	; 0x15000
   20ea8:	add	r3, r3, #384	; 0x180
   20eac:	ldr	r2, [pc, #188]	; 20f70 <__assert_fail@plt+0xe884>
   20eb0:	str	r3, [r2, #28]
   20eb4:	ldr	r3, [pc, #180]	; 20f70 <__assert_fail@plt+0xe884>
   20eb8:	mov	r2, #0
   20ebc:	str	r2, [r3, #32]
   20ec0:	ldr	r0, [pc, #172]	; 20f74 <__assert_fail@plt+0xe888>
   20ec4:	bl	12344 <localtime@plt>
   20ec8:	str	r0, [fp, #-8]
   20ecc:	ldr	r3, [pc, #156]	; 20f70 <__assert_fail@plt+0xe884>
   20ed0:	ldr	r1, [r3, #28]
   20ed4:	ldr	r3, [fp, #-8]
   20ed8:	cmp	r3, #0
   20edc:	beq	20f1c <__assert_fail@plt+0xe830>
   20ee0:	ldr	r3, [fp, #-8]
   20ee4:	ldr	r0, [r3]
   20ee8:	ldr	r3, [fp, #-8]
   20eec:	ldr	r2, [r3, #4]
   20ef0:	mov	r3, r2
   20ef4:	lsl	r3, r3, #4
   20ef8:	sub	r3, r3, r2
   20efc:	lsl	r3, r3, #2
   20f00:	add	r2, r0, r3
   20f04:	ldr	r3, [fp, #-8]
   20f08:	ldr	r3, [r3, #8]
   20f0c:	mov	r0, #3600	; 0xe10
   20f10:	mul	r3, r0, r3
   20f14:	add	r3, r2, r3
   20f18:	b	20f48 <__assert_fail@plt+0xe85c>
   20f1c:	ldr	r3, [pc, #76]	; 20f70 <__assert_fail@plt+0xe884>
   20f20:	ldr	r2, [r3, #28]
   20f24:	ldr	r3, [pc, #76]	; 20f78 <__assert_fail@plt+0xe88c>
   20f28:	smull	r0, r3, r3, r2
   20f2c:	add	r3, r3, r2
   20f30:	asr	r0, r3, #16
   20f34:	asr	r3, r2, #31
   20f38:	sub	r3, r0, r3
   20f3c:	ldr	r0, [pc, #56]	; 20f7c <__assert_fail@plt+0xe890>
   20f40:	mul	r3, r0, r3
   20f44:	sub	r3, r2, r3
   20f48:	sub	r3, r1, r3
   20f4c:	ldr	r2, [pc, #28]	; 20f70 <__assert_fail@plt+0xe884>
   20f50:	str	r3, [r2, #28]
   20f54:	ldr	r3, [pc, #20]	; 20f70 <__assert_fail@plt+0xe884>
   20f58:	mov	r2, #1
   20f5c:	strb	r2, [r3, #36]	; 0x24
   20f60:	mov	r3, #1
   20f64:	mov	r0, r3
   20f68:	sub	sp, fp, #4
   20f6c:	pop	{fp, pc}
   20f70:	andeq	sp, r7, ip, asr #32
   20f74:	andeq	sp, r7, r8, rrx
   20f78:	eorgt	r4, lr, #29360128	; 0x1c00000
   20f7c:	andeq	r5, r1, r0, lsl #3
   20f80:	push	{fp, lr}
   20f84:	add	fp, sp, #4
   20f88:	sub	sp, sp, #24
   20f8c:	str	r0, [fp, #-16]
   20f90:	str	r1, [fp, #-20]	; 0xffffffec
   20f94:	str	r2, [fp, #-24]	; 0xffffffe8
   20f98:	ldr	r0, [fp, #-16]
   20f9c:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   20fa0:	str	r0, [fp, #-8]
   20fa4:	ldr	r3, [fp, #-8]
   20fa8:	mov	r2, #1
   20fac:	strb	r2, [r3, #17]
   20fb0:	ldr	r3, [fp, #-8]
   20fb4:	ldrb	r2, [r3, #17]
   20fb8:	ldr	r3, [fp, #-8]
   20fbc:	strb	r2, [r3, #16]
   20fc0:	ldr	r3, [pc, #60]	; 21004 <__assert_fail@plt+0xe918>
   20fc4:	mov	r2, #0
   20fc8:	strb	r2, [r3]
   20fcc:	ldr	r3, [fp, #-8]
   20fd0:	mov	r2, #0
   20fd4:	strb	r2, [r3, #19]
   20fd8:	ldr	r3, [fp, #-8]
   20fdc:	ldrb	r2, [r3, #19]
   20fe0:	ldr	r3, [fp, #-8]
   20fe4:	strb	r2, [r3, #18]
   20fe8:	ldr	r3, [fp, #-8]
   20fec:	mov	r2, #1065353216	; 0x3f800000
   20ff0:	str	r2, [r3, #28]
   20ff4:	mov	r3, #1
   20ff8:	mov	r0, r3
   20ffc:	sub	sp, fp, #4
   21000:	pop	{fp, pc}
   21004:	andeq	sp, r7, ip, asr #32
   21008:	push	{fp, lr}
   2100c:	add	fp, sp, #4
   21010:	sub	sp, sp, #16
   21014:	str	r0, [fp, #-8]
   21018:	str	r1, [fp, #-12]
   2101c:	str	r2, [fp, #-16]
   21020:	ldr	r3, [pc, #48]	; 21058 <__assert_fail@plt+0xe96c>
   21024:	mov	r2, #0
   21028:	strb	r2, [r3]
   2102c:	ldr	r3, [pc, #36]	; 21058 <__assert_fail@plt+0xe96c>
   21030:	mov	r2, #1
   21034:	strb	r2, [r3, #1]
   21038:	ldr	r2, [fp, #-16]
   2103c:	ldr	r1, [fp, #-12]
   21040:	ldr	r0, [fp, #-8]
   21044:	bl	24064 <__assert_fail@plt+0x11978>
   21048:	mov	r3, r0
   2104c:	mov	r0, r3
   21050:	sub	sp, fp, #4
   21054:	pop	{fp, pc}
   21058:	andeq	sp, r7, ip, asr #32
   2105c:	push	{fp, lr}
   21060:	add	fp, sp, #4
   21064:	sub	sp, sp, #16
   21068:	str	r0, [fp, #-8]
   2106c:	str	r1, [fp, #-12]
   21070:	str	r2, [fp, #-16]
   21074:	bl	206a0 <__assert_fail@plt+0xdfb4>
   21078:	mov	r3, r0
   2107c:	cmp	r3, #0
   21080:	beq	210a0 <__assert_fail@plt+0xe9b4>
   21084:	ldr	r0, [pc, #52]	; 210c0 <__assert_fail@plt+0xe9d4>
   21088:	bl	12398 <gettext@plt>
   2108c:	mov	r3, r0
   21090:	mov	r2, r3
   21094:	mov	r1, #0
   21098:	mov	r0, #0
   2109c:	bl	122b4 <error@plt>
   210a0:	ldr	r2, [fp, #-16]
   210a4:	ldr	r1, [fp, #-12]
   210a8:	ldr	r0, [fp, #-8]
   210ac:	bl	21008 <__assert_fail@plt+0xe91c>
   210b0:	mov	r3, r0
   210b4:	mov	r0, r3
   210b8:	sub	sp, fp, #4
   210bc:	pop	{fp, pc}
   210c0:	andeq	r7, r6, ip, ror #6
   210c4:	push	{fp, lr}
   210c8:	add	fp, sp, #4
   210cc:	sub	sp, sp, #24
   210d0:	str	r0, [fp, #-16]
   210d4:	str	r1, [fp, #-20]	; 0xffffffec
   210d8:	str	r2, [fp, #-24]	; 0xffffffe8
   210dc:	ldr	r0, [fp, #-16]
   210e0:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   210e4:	str	r0, [fp, #-8]
   210e8:	ldr	r3, [fp, #-8]
   210ec:	ldr	r2, [pc, #16]	; 21104 <__assert_fail@plt+0xea18>
   210f0:	str	r2, [r3, #28]
   210f4:	mov	r3, #1
   210f8:	mov	r0, r3
   210fc:	sub	sp, fp, #4
   21100:	pop	{fp, pc}
   21104:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   21108:	push	{fp, lr}
   2110c:	add	fp, sp, #4
   21110:	sub	sp, sp, #16
   21114:	str	r0, [fp, #-8]
   21118:	str	r1, [fp, #-12]
   2111c:	str	r2, [fp, #-16]
   21120:	ldr	r3, [fp, #-16]
   21124:	ldr	r2, [fp, #-12]
   21128:	ldr	r1, [fp, #-8]
   2112c:	ldr	r0, [pc, #16]	; 21144 <__assert_fail@plt+0xea58>
   21130:	bl	24eac <__assert_fail@plt+0x127c0>
   21134:	mov	r3, r0
   21138:	mov	r0, r3
   2113c:	sub	sp, fp, #4
   21140:	pop	{fp, pc}
   21144:	andeq	r7, r6, r0, ror #7
   21148:	push	{fp, lr}
   2114c:	add	fp, sp, #4
   21150:	sub	sp, sp, #16
   21154:	str	r0, [fp, #-8]
   21158:	str	r1, [fp, #-12]
   2115c:	str	r2, [fp, #-16]
   21160:	ldr	r3, [fp, #-16]
   21164:	ldr	r2, [fp, #-12]
   21168:	ldr	r1, [fp, #-8]
   2116c:	ldr	r0, [pc, #16]	; 21184 <__assert_fail@plt+0xea98>
   21170:	bl	24eac <__assert_fail@plt+0x127c0>
   21174:	mov	r3, r0
   21178:	mov	r0, r3
   2117c:	sub	sp, fp, #4
   21180:	pop	{fp, pc}
   21184:	andeq	r7, r6, r8, ror #7
   21188:	push	{fp, lr}
   2118c:	add	fp, sp, #4
   21190:	sub	sp, sp, #8
   21194:	ldr	r0, [pc, #100]	; 21200 <__assert_fail@plt+0xeb14>
   21198:	bl	207b4 <__assert_fail@plt+0xe0c8>
   2119c:	str	r0, [fp, #-8]
   211a0:	ldr	r0, [fp, #-8]
   211a4:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   211a8:	str	r0, [fp, #-12]
   211ac:	ldr	r3, [fp, #-12]
   211b0:	mov	r2, #0
   211b4:	strb	r2, [r3, #19]
   211b8:	ldr	r3, [fp, #-12]
   211bc:	ldrb	r2, [r3, #19]
   211c0:	ldr	r3, [fp, #-12]
   211c4:	strb	r2, [r3, #18]
   211c8:	ldr	r3, [fp, #-12]
   211cc:	mov	r2, #0
   211d0:	strb	r2, [r3, #17]
   211d4:	ldr	r3, [fp, #-12]
   211d8:	ldrb	r2, [r3, #17]
   211dc:	ldr	r3, [fp, #-12]
   211e0:	strb	r2, [r3, #16]
   211e4:	ldr	r3, [fp, #-12]
   211e8:	mov	r2, #0
   211ec:	str	r2, [r3, #28]
   211f0:	mov	r3, #1
   211f4:	mov	r0, r3
   211f8:	sub	sp, fp, #4
   211fc:	pop	{fp, pc}
   21200:			; <UNDEFINED> instruction: 0x00066bb4
   21204:	push	{fp, lr}
   21208:	add	fp, sp, #4
   2120c:	sub	sp, sp, #16
   21210:	str	r0, [fp, #-8]
   21214:	str	r1, [fp, #-12]
   21218:	str	r2, [fp, #-16]
   2121c:	bl	21188 <__assert_fail@plt+0xea9c>
   21220:	mov	r3, r0
   21224:	mov	r0, r3
   21228:	sub	sp, fp, #4
   2122c:	pop	{fp, pc}
   21230:	push	{fp, lr}
   21234:	add	fp, sp, #4
   21238:	sub	sp, sp, #24
   2123c:	str	r0, [fp, #-16]
   21240:	str	r1, [fp, #-20]	; 0xffffffec
   21244:	str	r2, [fp, #-24]	; 0xffffffe8
   21248:	sub	r3, fp, #8
   2124c:	mov	r2, r3
   21250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21254:	ldr	r0, [fp, #-20]	; 0xffffffec
   21258:	bl	20a68 <__assert_fail@plt+0xe37c>
   2125c:	mov	r3, r0
   21260:	cmp	r3, #0
   21264:	beq	2127c <__assert_fail@plt+0xeb90>
   21268:	ldr	r3, [fp, #-8]
   2126c:	ldr	r2, [pc, #24]	; 2128c <__assert_fail@plt+0xeba0>
   21270:	str	r3, [r2, #76]	; 0x4c
   21274:	mov	r3, #1
   21278:	b	21280 <__assert_fail@plt+0xeb94>
   2127c:	mov	r3, #0
   21280:	mov	r0, r3
   21284:	sub	sp, fp, #4
   21288:	pop	{fp, pc}
   2128c:	andeq	sp, r7, ip, asr #32
   21290:	push	{fp, lr}
   21294:	add	fp, sp, #4
   21298:	sub	sp, sp, #16
   2129c:	str	r0, [fp, #-16]
   212a0:	str	r1, [fp, #-20]	; 0xffffffec
   212a4:	ldr	r0, [fp, #-16]
   212a8:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   212ac:	str	r0, [fp, #-8]
   212b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   212b4:	cmp	r3, #0
   212b8:	beq	212d4 <__assert_fail@plt+0xebe8>
   212bc:	ldr	r3, [fp, #-8]
   212c0:	add	r3, r3, #40	; 0x28
   212c4:	mov	r1, r3
   212c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   212cc:	bl	25f08 <__assert_fail@plt+0x1381c>
   212d0:	b	212e4 <__assert_fail@plt+0xebf8>
   212d4:	ldr	r3, [fp, #-8]
   212d8:	add	r3, r3, #40	; 0x28
   212dc:	mov	r0, r3
   212e0:	bl	2605c <__assert_fail@plt+0x13970>
   212e4:	ldr	r3, [fp, #-8]
   212e8:	mov	r2, #1
   212ec:	strb	r2, [r3, #17]
   212f0:	ldr	r3, [fp, #-8]
   212f4:	ldrb	r2, [r3, #17]
   212f8:	ldr	r3, [fp, #-8]
   212fc:	strb	r2, [r3, #16]
   21300:	ldr	r3, [fp, #-8]
   21304:	mov	r2, #1065353216	; 0x3f800000
   21308:	str	r2, [r3, #28]
   2130c:	mov	r3, #1
   21310:	mov	r0, r3
   21314:	sub	sp, fp, #4
   21318:	pop	{fp, pc}
   2131c:	push	{fp, lr}
   21320:	add	fp, sp, #4
   21324:	sub	sp, sp, #24
   21328:	str	r0, [fp, #-16]
   2132c:	str	r1, [fp, #-20]	; 0xffffffec
   21330:	str	r2, [fp, #-24]	; 0xffffffe8
   21334:	sub	r3, fp, #8
   21338:	mov	r2, r3
   2133c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21340:	ldr	r0, [fp, #-20]	; 0xffffffec
   21344:	bl	20a68 <__assert_fail@plt+0xe37c>
   21348:	mov	r3, r0
   2134c:	cmp	r3, #0
   21350:	beq	2138c <__assert_fail@plt+0xeca0>
   21354:	ldr	r3, [fp, #-8]
   21358:	mov	r1, r3
   2135c:	ldr	r0, [fp, #-16]
   21360:	bl	21290 <__assert_fail@plt+0xeba4>
   21364:	mov	r3, r0
   21368:	cmp	r3, #0
   2136c:	beq	21378 <__assert_fail@plt+0xec8c>
   21370:	mov	r3, #1
   21374:	b	21390 <__assert_fail@plt+0xeca4>
   21378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2137c:	ldr	r3, [r3]
   21380:	sub	r2, r3, #1
   21384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21388:	str	r2, [r3]
   2138c:	mov	r3, #0
   21390:	mov	r0, r3
   21394:	sub	sp, fp, #4
   21398:	pop	{fp, pc}
   2139c:	push	{fp, lr}
   213a0:	add	fp, sp, #4
   213a4:	sub	sp, sp, #16
   213a8:	str	r0, [fp, #-8]
   213ac:	str	r1, [fp, #-12]
   213b0:	str	r2, [fp, #-16]
   213b4:	mov	r0, #1
   213b8:	bl	20544 <__assert_fail@plt+0xde58>
   213bc:	ldr	r2, [fp, #-16]
   213c0:	ldr	r1, [fp, #-12]
   213c4:	ldr	r0, [fp, #-8]
   213c8:	bl	24064 <__assert_fail@plt+0x11978>
   213cc:	mov	r3, r0
   213d0:	mov	r0, r3
   213d4:	sub	sp, fp, #4
   213d8:	pop	{fp, pc}
   213dc:	push	{fp, lr}
   213e0:	add	fp, sp, #4
   213e4:	sub	sp, sp, #24
   213e8:	str	r0, [fp, #-16]
   213ec:	str	r1, [fp, #-20]	; 0xffffffec
   213f0:	str	r2, [fp, #-24]	; 0xffffffe8
   213f4:	sub	r3, fp, #12
   213f8:	mov	r2, r3
   213fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21400:	ldr	r0, [fp, #-20]	; 0xffffffec
   21404:	bl	20a68 <__assert_fail@plt+0xe37c>
   21408:	mov	r3, r0
   2140c:	cmp	r3, #0
   21410:	beq	2148c <__assert_fail@plt+0xeda0>
   21414:	ldr	r3, [fp, #-12]
   21418:	mov	r1, r3
   2141c:	ldr	r0, [fp, #-16]
   21420:	bl	1a948 <__assert_fail@plt+0x825c>
   21424:	str	r0, [fp, #-8]
   21428:	ldr	r2, [fp, #-12]
   2142c:	ldr	r3, [fp, #-8]
   21430:	add	r3, r3, #40	; 0x28
   21434:	mov	r1, r3
   21438:	mov	r0, r2
   2143c:	bl	25f08 <__assert_fail@plt+0x1381c>
   21440:	ldr	r3, [fp, #-8]
   21444:	mov	r2, #1
   21448:	strb	r2, [r3, #17]
   2144c:	ldr	r3, [fp, #-8]
   21450:	ldrb	r2, [r3, #17]
   21454:	ldr	r3, [fp, #-8]
   21458:	strb	r2, [r3, #16]
   2145c:	ldr	r3, [fp, #-8]
   21460:	mov	r2, #0
   21464:	strb	r2, [r3, #19]
   21468:	ldr	r3, [fp, #-8]
   2146c:	ldrb	r2, [r3, #19]
   21470:	ldr	r3, [fp, #-8]
   21474:	strb	r2, [r3, #18]
   21478:	ldr	r3, [fp, #-8]
   2147c:	mov	r2, #1065353216	; 0x3f800000
   21480:	str	r2, [r3, #28]
   21484:	mov	r3, #1
   21488:	b	21490 <__assert_fail@plt+0xeda4>
   2148c:	mov	r3, #0
   21490:	mov	r0, r3
   21494:	sub	sp, fp, #4
   21498:	pop	{fp, pc}
   2149c:	push	{fp, lr}
   214a0:	add	fp, sp, #4
   214a4:	sub	sp, sp, #16
   214a8:	str	r0, [fp, #-16]
   214ac:	str	r1, [fp, #-20]	; 0xffffffec
   214b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   214b4:	ldr	r0, [fp, #-16]
   214b8:	bl	1a948 <__assert_fail@plt+0x825c>
   214bc:	str	r0, [fp, #-8]
   214c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   214c4:	cmp	r3, #0
   214c8:	beq	214e4 <__assert_fail@plt+0xedf8>
   214cc:	ldr	r3, [fp, #-8]
   214d0:	add	r3, r3, #40	; 0x28
   214d4:	mov	r1, r3
   214d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   214dc:	bl	25f08 <__assert_fail@plt+0x1381c>
   214e0:	b	214f4 <__assert_fail@plt+0xee08>
   214e4:	ldr	r3, [fp, #-8]
   214e8:	add	r3, r3, #40	; 0x28
   214ec:	mov	r0, r3
   214f0:	bl	2605c <__assert_fail@plt+0x13970>
   214f4:	ldr	r3, [fp, #-8]
   214f8:	mov	r2, #1
   214fc:	strb	r2, [r3, #17]
   21500:	ldr	r3, [fp, #-8]
   21504:	ldrb	r2, [r3, #17]
   21508:	ldr	r3, [fp, #-8]
   2150c:	strb	r2, [r3, #16]
   21510:	ldr	r3, [fp, #-8]
   21514:	mov	r2, #0
   21518:	strb	r2, [r3, #19]
   2151c:	ldr	r3, [fp, #-8]
   21520:	ldrb	r2, [r3, #19]
   21524:	ldr	r3, [fp, #-8]
   21528:	strb	r2, [r3, #18]
   2152c:	ldr	r3, [fp, #-8]
   21530:	mov	r2, #1065353216	; 0x3f800000
   21534:	str	r2, [r3, #28]
   21538:	mov	r3, #1
   2153c:	mov	r0, r3
   21540:	sub	sp, fp, #4
   21544:	pop	{fp, pc}
   21548:	push	{fp, lr}
   2154c:	add	fp, sp, #4
   21550:	sub	sp, sp, #24
   21554:	str	r0, [fp, #-16]
   21558:	str	r1, [fp, #-20]	; 0xffffffec
   2155c:	str	r2, [fp, #-24]	; 0xffffffe8
   21560:	sub	r3, fp, #8
   21564:	mov	r2, r3
   21568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2156c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21570:	bl	20a68 <__assert_fail@plt+0xe37c>
   21574:	mov	r3, r0
   21578:	cmp	r3, #0
   2157c:	beq	215b8 <__assert_fail@plt+0xeecc>
   21580:	ldr	r3, [fp, #-8]
   21584:	mov	r1, r3
   21588:	ldr	r0, [fp, #-16]
   2158c:	bl	2149c <__assert_fail@plt+0xedb0>
   21590:	mov	r3, r0
   21594:	cmp	r3, #0
   21598:	beq	215a4 <__assert_fail@plt+0xeeb8>
   2159c:	mov	r3, #1
   215a0:	b	215bc <__assert_fail@plt+0xeed0>
   215a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   215a8:	ldr	r3, [r3]
   215ac:	sub	r2, r3, #1
   215b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   215b4:	str	r2, [r3]
   215b8:	mov	r3, #0
   215bc:	mov	r0, r3
   215c0:	sub	sp, fp, #4
   215c4:	pop	{fp, pc}
   215c8:	push	{fp, lr}
   215cc:	add	fp, sp, #4
   215d0:	sub	sp, sp, #120	; 0x78
   215d4:	str	r0, [fp, #-120]	; 0xffffff88
   215d8:	ldr	r3, [pc, #108]	; 2164c <__assert_fail@plt+0xef60>
   215dc:	str	r3, [fp, #-8]
   215e0:	sub	r3, fp, #116	; 0x74
   215e4:	mov	r1, r3
   215e8:	ldr	r0, [fp, #-8]
   215ec:	bl	64084 <__assert_fail@plt+0x51998>
   215f0:	mov	r3, r0
   215f4:	cmp	r3, #0
   215f8:	bne	21638 <__assert_fail@plt+0xef4c>
   215fc:	sub	r3, fp, #116	; 0x74
   21600:	ldr	r1, [fp, #-8]
   21604:	mov	r0, r3
   21608:	bl	1fc48 <__assert_fail@plt+0xd55c>
   2160c:	str	r0, [fp, #-12]
   21610:	ldr	r1, [fp, #-12]
   21614:	ldr	r0, [fp, #-120]	; 0xffffff88
   21618:	bl	11ffc <strcmp@plt>
   2161c:	mov	r3, r0
   21620:	cmp	r3, #0
   21624:	bne	21630 <__assert_fail@plt+0xef44>
   21628:	ldr	r3, [pc, #32]	; 21650 <__assert_fail@plt+0xef64>
   2162c:	b	2163c <__assert_fail@plt+0xef50>
   21630:	ldr	r3, [pc, #28]	; 21654 <__assert_fail@plt+0xef68>
   21634:	b	2163c <__assert_fail@plt+0xef50>
   21638:	mov	r3, #1065353216	; 0x3f800000
   2163c:	vmov	s15, r3
   21640:	vmov.f32	s0, s15
   21644:	sub	sp, fp, #4
   21648:	pop	{fp, pc}
   2164c:	strdeq	r7, [r6], -r4
   21650:	svccc	0x00333333
   21654:			; <UNDEFINED> instruction: 0x3e99999a
   21658:	push	{fp, lr}
   2165c:	add	fp, sp, #4
   21660:	sub	sp, sp, #24
   21664:	str	r0, [fp, #-16]
   21668:	str	r1, [fp, #-20]	; 0xffffffec
   2166c:	str	r2, [fp, #-24]	; 0xffffffe8
   21670:	sub	r3, fp, #12
   21674:	mov	r2, r3
   21678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2167c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21680:	bl	20a68 <__assert_fail@plt+0xe37c>
   21684:	mov	r3, r0
   21688:	cmp	r3, #0
   2168c:	beq	21730 <__assert_fail@plt+0xf044>
   21690:	ldr	r3, [pc, #168]	; 21740 <__assert_fail@plt+0xf054>
   21694:	ldrh	r3, [r3, #68]	; 0x44
   21698:	cmp	r3, #1
   2169c:	bls	216b8 <__assert_fail@plt+0xefcc>
   216a0:	ldr	r3, [fp, #-12]
   216a4:	mov	r0, r3
   216a8:	bl	1fd00 <__assert_fail@plt+0xd614>
   216ac:	mov	r3, r0
   216b0:	cmp	r3, #0
   216b4:	beq	216f8 <__assert_fail@plt+0xf00c>
   216b8:	ldr	r3, [fp, #-12]
   216bc:	mov	r1, r3
   216c0:	ldr	r0, [fp, #-16]
   216c4:	bl	1a948 <__assert_fail@plt+0x825c>
   216c8:	str	r0, [fp, #-8]
   216cc:	ldr	r2, [fp, #-12]
   216d0:	ldr	r3, [fp, #-8]
   216d4:	str	r2, [r3, #40]	; 0x28
   216d8:	ldr	r3, [fp, #-12]
   216dc:	mov	r0, r3
   216e0:	bl	215c8 <__assert_fail@plt+0xeedc>
   216e4:	vmov.f32	s15, s0
   216e8:	ldr	r3, [fp, #-8]
   216ec:	vstr	s15, [r3, #28]
   216f0:	mov	r3, #1
   216f4:	b	21734 <__assert_fail@plt+0xf048>
   216f8:	ldr	r3, [pc, #64]	; 21740 <__assert_fail@plt+0xf054>
   216fc:	ldr	r3, [r3, #44]	; 0x2c
   21700:	and	r3, r3, #8
   21704:	cmp	r3, #0
   21708:	beq	21724 <__assert_fail@plt+0xf038>
   2170c:	ldr	r3, [pc, #48]	; 21744 <__assert_fail@plt+0xf058>
   21710:	ldr	r3, [r3]
   21714:	ldr	r2, [fp, #-12]
   21718:	ldr	r1, [pc, #40]	; 21748 <__assert_fail@plt+0xf05c>
   2171c:	mov	r0, r3
   21720:	bl	123f8 <fprintf@plt>
   21724:	bl	21188 <__assert_fail@plt+0xea9c>
   21728:	mov	r3, r0
   2172c:	b	21734 <__assert_fail@plt+0xf048>
   21730:	mov	r3, #0
   21734:	mov	r0, r3
   21738:	sub	sp, fp, #4
   2173c:	pop	{fp, pc}
   21740:	andeq	sp, r7, ip, asr #32
   21744:	andeq	ip, r7, r8, lsr #14
   21748:	strdeq	r7, [r6], -r8
   2174c:	push	{fp, lr}
   21750:	add	fp, sp, #4
   21754:	sub	sp, sp, #24
   21758:	str	r0, [fp, #-16]
   2175c:	str	r1, [fp, #-20]	; 0xffffffec
   21760:	str	r2, [fp, #-24]	; 0xffffffe8
   21764:	ldr	r2, [fp, #-16]
   21768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2176c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21770:	bl	25d60 <__assert_fail@plt+0x13674>
   21774:	str	r0, [fp, #-8]
   21778:	ldr	r3, [fp, #-8]
   2177c:	cmp	r3, #0
   21780:	beq	217b4 <__assert_fail@plt+0xf0c8>
   21784:	ldr	r3, [fp, #-8]
   21788:	ldrd	r2, [r3, #48]	; 0x30
   2178c:	cmp	r3, #0
   21790:	cmpeq	r2, #99	; 0x63
   21794:	bhi	217a0 <__assert_fail@plt+0xf0b4>
   21798:	ldr	r2, [pc, #56]	; 217d8 <__assert_fail@plt+0xf0ec>
   2179c:	b	217a4 <__assert_fail@plt+0xf0b8>
   217a0:	ldr	r2, [pc, #52]	; 217dc <__assert_fail@plt+0xf0f0>
   217a4:	ldr	r3, [fp, #-8]
   217a8:	str	r2, [r3, #28]
   217ac:	mov	r3, #1
   217b0:	b	217cc <__assert_fail@plt+0xf0e0>
   217b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   217b8:	ldr	r3, [r3]
   217bc:	sub	r2, r3, #1
   217c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   217c4:	str	r2, [r3]
   217c8:	mov	r3, #0
   217cc:	mov	r0, r3
   217d0:	sub	sp, fp, #4
   217d4:	pop	{fp, pc}
   217d8:	svccc	0x007d70a4
   217dc:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   217e0:	push	{r4, r5, fp, lr}
   217e4:	add	fp, sp, #12
   217e8:	sub	sp, sp, #48	; 0x30
   217ec:	str	r0, [fp, #-40]	; 0xffffffd8
   217f0:	str	r1, [fp, #-44]	; 0xffffffd4
   217f4:	str	r2, [fp, #-48]	; 0xffffffd0
   217f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   217fc:	ldr	r3, [r3]
   21800:	str	r3, [fp, #-20]	; 0xffffffec
   21804:	sub	r3, fp, #36	; 0x24
   21808:	mov	r2, r3
   2180c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21814:	bl	20a68 <__assert_fail@plt+0xe37c>
   21818:	mov	r3, r0
   2181c:	cmp	r3, #0
   21820:	beq	219cc <__assert_fail@plt+0xf2e0>
   21824:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21828:	mov	r0, r3
   2182c:	bl	126d4 <getgrnam@plt>
   21830:	str	r0, [fp, #-24]	; 0xffffffe8
   21834:	bl	11f90 <endgrent@plt>
   21838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2183c:	cmp	r3, #0
   21840:	beq	21854 <__assert_fail@plt+0xf168>
   21844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21848:	ldr	r3, [r3, #8]
   2184c:	str	r3, [fp, #-16]
   21850:	b	2197c <__assert_fail@plt+0xf290>
   21854:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21858:	ldr	r1, [pc, #380]	; 219dc <__assert_fail@plt+0xf2f0>
   2185c:	mov	r0, r3
   21860:	bl	126e0 <strspn@plt>
   21864:	mov	r3, r0
   21868:	str	r3, [fp, #-28]	; 0xffffffe4
   2186c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21870:	cmp	r3, #0
   21874:	beq	21918 <__assert_fail@plt+0xf22c>
   21878:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2187c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21880:	add	r3, r2, r3
   21884:	ldrb	r3, [r3]
   21888:	cmp	r3, #0
   2188c:	bne	218b4 <__assert_fail@plt+0xf1c8>
   21890:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21894:	ldr	r3, [pc, #324]	; 219e0 <__assert_fail@plt+0xf2f4>
   21898:	ldr	r3, [r3, #72]	; 0x48
   2189c:	mov	r1, r3
   218a0:	mov	r0, r2
   218a4:	bl	296f8 <__assert_fail@plt+0x1700c>
   218a8:	mov	r3, r0
   218ac:	str	r3, [fp, #-16]
   218b0:	b	2197c <__assert_fail@plt+0xf290>
   218b4:	ldr	r0, [pc, #296]	; 219e4 <__assert_fail@plt+0xf2f8>
   218b8:	bl	12398 <gettext@plt>
   218bc:	mov	r4, r0
   218c0:	ldr	r3, [pc, #280]	; 219e0 <__assert_fail@plt+0xf2f4>
   218c4:	ldr	r3, [r3, #72]	; 0x48
   218c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   218cc:	mov	r1, r3
   218d0:	mov	r0, #0
   218d4:	bl	3b718 <__assert_fail@plt+0x2902c>
   218d8:	mov	r5, r0
   218dc:	ldr	r3, [pc, #252]	; 219e0 <__assert_fail@plt+0xf2f4>
   218e0:	ldr	r1, [r3, #72]	; 0x48
   218e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   218e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   218ec:	add	r3, r2, r3
   218f0:	mov	r2, r3
   218f4:	mov	r0, #1
   218f8:	bl	3b718 <__assert_fail@plt+0x2902c>
   218fc:	mov	r3, r0
   21900:	str	r3, [sp]
   21904:	mov	r3, r5
   21908:	mov	r2, r4
   2190c:	mov	r1, #0
   21910:	mov	r0, #1
   21914:	bl	122b4 <error@plt>
   21918:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2191c:	ldrb	r3, [r3]
   21920:	cmp	r3, #0
   21924:	beq	21960 <__assert_fail@plt+0xf274>
   21928:	ldr	r0, [pc, #184]	; 219e8 <__assert_fail@plt+0xf2fc>
   2192c:	bl	12398 <gettext@plt>
   21930:	mov	r4, r0
   21934:	ldr	r3, [pc, #164]	; 219e0 <__assert_fail@plt+0xf2f4>
   21938:	ldr	r3, [r3, #72]	; 0x48
   2193c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21940:	mov	r1, r3
   21944:	mov	r0, #0
   21948:	bl	3b718 <__assert_fail@plt+0x2902c>
   2194c:	mov	r3, r0
   21950:	mov	r2, r4
   21954:	mov	r1, #0
   21958:	mov	r0, #1
   2195c:	bl	122b4 <error@plt>
   21960:	ldr	r0, [pc, #132]	; 219ec <__assert_fail@plt+0xf300>
   21964:	bl	12398 <gettext@plt>
   21968:	mov	r3, r0
   2196c:	mov	r2, r3
   21970:	mov	r1, #0
   21974:	mov	r0, #1
   21978:	bl	122b4 <error@plt>
   2197c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21980:	mov	r1, r3
   21984:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21988:	bl	1a948 <__assert_fail@plt+0x825c>
   2198c:	str	r0, [fp, #-32]	; 0xffffffe0
   21990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21994:	ldr	r2, [fp, #-16]
   21998:	str	r2, [r3, #40]	; 0x28
   2199c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219a0:	ldrd	r2, [r3, #48]	; 0x30
   219a4:	cmp	r3, #0
   219a8:	cmpeq	r2, #99	; 0x63
   219ac:	bhi	219b8 <__assert_fail@plt+0xf2cc>
   219b0:	ldr	r2, [pc, #56]	; 219f0 <__assert_fail@plt+0xf304>
   219b4:	b	219bc <__assert_fail@plt+0xf2d0>
   219b8:	ldr	r2, [pc, #52]	; 219f4 <__assert_fail@plt+0xf308>
   219bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219c0:	str	r2, [r3, #28]
   219c4:	mov	r3, #1
   219c8:	b	219d0 <__assert_fail@plt+0xf2e4>
   219cc:	mov	r3, #0
   219d0:	mov	r0, r3
   219d4:	sub	sp, fp, #12
   219d8:	pop	{r4, r5, fp, pc}
   219dc:	andeq	r7, r6, ip, lsr #8
   219e0:	andeq	sp, r7, ip, asr #32
   219e4:	andeq	r7, r6, r8, lsr r4
   219e8:			; <UNDEFINED> instruction: 0x000674b8
   219ec:	andeq	r7, r6, r0, ror #9
   219f0:	svccc	0x007d70a4
   219f4:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   219f8:	push	{fp, lr}
   219fc:	add	fp, sp, #4
   21a00:	sub	sp, sp, #16
   21a04:	str	r0, [fp, #-8]
   21a08:	str	r1, [fp, #-12]
   21a0c:	str	r2, [fp, #-16]
   21a10:	mov	r0, #0
   21a14:	bl	1ab34 <__assert_fail@plt+0x8448>
   21a18:	push	{fp, lr}
   21a1c:	add	fp, sp, #4
   21a20:	sub	sp, sp, #8
   21a24:	str	r0, [fp, #-8]
   21a28:	str	r1, [fp, #-12]
   21a2c:	ldr	r1, [pc, #80]	; 21a84 <__assert_fail@plt+0xf398>
   21a30:	ldr	r0, [fp, #-8]
   21a34:	bl	12608 <strpbrk@plt>
   21a38:	mov	r3, r0
   21a3c:	cmp	r3, #0
   21a40:	bne	21a68 <__assert_fail@plt+0xf37c>
   21a44:	ldr	r3, [fp, #-12]
   21a48:	cmp	r3, #0
   21a4c:	beq	21a70 <__assert_fail@plt+0xf384>
   21a50:	mov	r1, #46	; 0x2e
   21a54:	ldr	r0, [fp, #-8]
   21a58:	bl	123c8 <strchr@plt>
   21a5c:	mov	r3, r0
   21a60:	cmp	r3, #0
   21a64:	beq	21a70 <__assert_fail@plt+0xf384>
   21a68:	ldr	r3, [pc, #24]	; 21a88 <__assert_fail@plt+0xf39c>
   21a6c:	b	21a74 <__assert_fail@plt+0xf388>
   21a70:	ldr	r3, [pc, #20]	; 21a8c <__assert_fail@plt+0xf3a0>
   21a74:	vmov	s15, r3
   21a78:	vmov.f32	s0, s15
   21a7c:	sub	sp, fp, #4
   21a80:	pop	{fp, pc}
   21a84:	andeq	r7, r6, r8, lsl r5
   21a88:	svccc	0x004ccccd
   21a8c:	stclcc	12, cr12, [ip, #820]	; 0x334
   21a90:	push	{fp, lr}
   21a94:	add	fp, sp, #4
   21a98:	sub	sp, sp, #24
   21a9c:	str	r0, [fp, #-16]
   21aa0:	str	r1, [fp, #-20]	; 0xffffffec
   21aa4:	str	r2, [fp, #-24]	; 0xffffffe8
   21aa8:	sub	r3, fp, #12
   21aac:	mov	r2, r3
   21ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ab8:	bl	20a68 <__assert_fail@plt+0xe37c>
   21abc:	mov	r3, r0
   21ac0:	cmp	r3, #0
   21ac4:	beq	21b14 <__assert_fail@plt+0xf428>
   21ac8:	ldr	r3, [fp, #-12]
   21acc:	mov	r1, r3
   21ad0:	ldr	r0, [fp, #-16]
   21ad4:	bl	1a948 <__assert_fail@plt+0x825c>
   21ad8:	str	r0, [fp, #-8]
   21adc:	ldr	r2, [fp, #-12]
   21ae0:	ldr	r3, [fp, #-8]
   21ae4:	str	r2, [r3, #40]	; 0x28
   21ae8:	ldr	r3, [fp, #-12]
   21aec:	mov	r1, #0
   21af0:	mov	r0, r3
   21af4:	bl	21a18 <__assert_fail@plt+0xf32c>
   21af8:	vmov.f32	s14, s0
   21afc:	vldr	s15, [pc, #32]	; 21b24 <__assert_fail@plt+0xf438>
   21b00:	vmul.f32	s15, s14, s15
   21b04:	ldr	r3, [fp, #-8]
   21b08:	vstr	s15, [r3, #28]
   21b0c:	mov	r3, #1
   21b10:	b	21b18 <__assert_fail@plt+0xf42c>
   21b14:	mov	r3, #0
   21b18:	mov	r0, r3
   21b1c:	sub	sp, fp, #4
   21b20:	pop	{fp, pc}
   21b24:	stclcc	12, cr12, [ip, #820]	; 0x334
   21b28:	push	{fp, lr}
   21b2c:	add	fp, sp, #4
   21b30:	ldr	r3, [pc, #156]	; 21bd4 <__assert_fail@plt+0xf4e8>
   21b34:	ldrb	r3, [r3]
   21b38:	eor	r3, r3, #1
   21b3c:	uxtb	r3, r3
   21b40:	cmp	r3, #0
   21b44:	beq	21bc4 <__assert_fail@plt+0xf4d8>
   21b48:	mov	r2, #0
   21b4c:	ldr	r1, [pc, #132]	; 21bd8 <__assert_fail@plt+0xf4ec>
   21b50:	ldr	r0, [pc, #128]	; 21bd8 <__assert_fail@plt+0xf4ec>
   21b54:	bl	122d8 <fnmatch@plt>
   21b58:	mov	r3, r0
   21b5c:	cmp	r3, #0
   21b60:	bne	21b9c <__assert_fail@plt+0xf4b0>
   21b64:	mov	r2, #0
   21b68:	ldr	r1, [pc, #104]	; 21bd8 <__assert_fail@plt+0xf4ec>
   21b6c:	ldr	r0, [pc, #104]	; 21bdc <__assert_fail@plt+0xf4f0>
   21b70:	bl	122d8 <fnmatch@plt>
   21b74:	mov	r3, r0
   21b78:	cmp	r3, #0
   21b7c:	beq	21b9c <__assert_fail@plt+0xf4b0>
   21b80:	mov	r2, #16
   21b84:	ldr	r1, [pc, #76]	; 21bd8 <__assert_fail@plt+0xf4ec>
   21b88:	ldr	r0, [pc, #76]	; 21bdc <__assert_fail@plt+0xf4f0>
   21b8c:	bl	122d8 <fnmatch@plt>
   21b90:	mov	r3, r0
   21b94:	cmp	r3, #0
   21b98:	beq	21bb8 <__assert_fail@plt+0xf4cc>
   21b9c:	ldr	r0, [pc, #60]	; 21be0 <__assert_fail@plt+0xf4f4>
   21ba0:	bl	12398 <gettext@plt>
   21ba4:	mov	r3, r0
   21ba8:	mov	r2, r3
   21bac:	mov	r1, #0
   21bb0:	mov	r0, #1
   21bb4:	bl	122b4 <error@plt>
   21bb8:	ldr	r3, [pc, #20]	; 21bd4 <__assert_fail@plt+0xf4e8>
   21bbc:	mov	r2, #1
   21bc0:	strb	r2, [r3]
   21bc4:	ldr	r3, [pc, #8]	; 21bd4 <__assert_fail@plt+0xf4e8>
   21bc8:	ldrb	r3, [r3]
   21bcc:	mov	r0, r3
   21bd0:	pop	{fp, pc}
   21bd4:			; <UNDEFINED> instruction: 0x0007ceb8
   21bd8:	andeq	r7, r6, ip, lsl r5
   21bdc:	andeq	r7, r6, r0, lsr #10
   21be0:	andeq	r7, r6, r4, lsr #10
   21be4:	push	{r4, r5, r6, fp, lr}
   21be8:	add	fp, sp, #16
   21bec:	sub	sp, sp, #28
   21bf0:	str	r0, [fp, #-24]	; 0xffffffe8
   21bf4:	str	r1, [fp, #-28]	; 0xffffffe4
   21bf8:	str	r2, [fp, #-32]	; 0xffffffe0
   21bfc:	bl	206a0 <__assert_fail@plt+0xdfb4>
   21c00:	mov	r3, r0
   21c04:	cmp	r3, #0
   21c08:	beq	21c7c <__assert_fail@plt+0xf590>
   21c0c:	mov	r1, #47	; 0x2f
   21c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21c14:	bl	123c8 <strchr@plt>
   21c18:	mov	r3, r0
   21c1c:	cmp	r3, #0
   21c20:	beq	21c7c <__assert_fail@plt+0xf590>
   21c24:	ldr	r0, [pc, #96]	; 21c8c <__assert_fail@plt+0xf5a0>
   21c28:	bl	12398 <gettext@plt>
   21c2c:	mov	r5, r0
   21c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21c34:	mov	r0, #0
   21c38:	bl	1c7fc <__assert_fail@plt+0xa110>
   21c3c:	mov	r6, r0
   21c40:	ldr	r1, [pc, #72]	; 21c90 <__assert_fail@plt+0xf5a4>
   21c44:	mov	r0, #1
   21c48:	bl	1c7fc <__assert_fail@plt+0xa110>
   21c4c:	mov	r4, r0
   21c50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21c54:	mov	r0, #2
   21c58:	bl	1c7fc <__assert_fail@plt+0xa110>
   21c5c:	mov	r3, r0
   21c60:	str	r3, [sp, #4]
   21c64:	str	r4, [sp]
   21c68:	mov	r3, r6
   21c6c:	mov	r2, r5
   21c70:	mov	r1, #0
   21c74:	mov	r0, #0
   21c78:	bl	122b4 <error@plt>
   21c7c:	mov	r3, #1
   21c80:	mov	r0, r3
   21c84:	sub	sp, fp, #16
   21c88:	pop	{r4, r5, r6, fp, pc}
   21c8c:	andeq	r7, r6, ip, asr r5
   21c90:	strdeq	r7, [r6], -r4
   21c94:	push	{fp, lr}
   21c98:	add	fp, sp, #4
   21c9c:	sub	sp, sp, #24
   21ca0:	str	r0, [fp, #-16]
   21ca4:	str	r1, [fp, #-20]	; 0xffffffec
   21ca8:	str	r2, [fp, #-24]	; 0xffffffe8
   21cac:	bl	21b28 <__assert_fail@plt+0xf43c>
   21cb0:	sub	r3, fp, #12
   21cb4:	mov	r2, r3
   21cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   21cc0:	bl	20a68 <__assert_fail@plt+0xe37c>
   21cc4:	mov	r3, r0
   21cc8:	cmp	r3, #0
   21ccc:	beq	21d50 <__assert_fail@plt+0xf664>
   21cd0:	ldr	r3, [fp, #-12]
   21cd4:	mov	r2, r3
   21cd8:	ldr	r1, [pc, #128]	; 21d60 <__assert_fail@plt+0xf674>
   21cdc:	ldr	r0, [pc, #128]	; 21d64 <__assert_fail@plt+0xf678>
   21ce0:	bl	21be4 <__assert_fail@plt+0xf4f8>
   21ce4:	mov	r3, r0
   21ce8:	cmp	r3, #0
   21cec:	beq	21d50 <__assert_fail@plt+0xf664>
   21cf0:	ldr	r3, [fp, #-12]
   21cf4:	mov	r1, r3
   21cf8:	ldr	r0, [fp, #-16]
   21cfc:	bl	1a948 <__assert_fail@plt+0x825c>
   21d00:	str	r0, [fp, #-8]
   21d04:	ldr	r3, [fp, #-8]
   21d08:	mov	r2, #0
   21d0c:	strb	r2, [r3, #19]
   21d10:	ldr	r3, [fp, #-8]
   21d14:	ldrb	r2, [r3, #19]
   21d18:	ldr	r3, [fp, #-8]
   21d1c:	strb	r2, [r3, #18]
   21d20:	ldr	r2, [fp, #-12]
   21d24:	ldr	r3, [fp, #-8]
   21d28:	str	r2, [r3, #40]	; 0x28
   21d2c:	ldr	r3, [fp, #-12]
   21d30:	mov	r1, #0
   21d34:	mov	r0, r3
   21d38:	bl	21a18 <__assert_fail@plt+0xf32c>
   21d3c:	vmov.f32	s15, s0
   21d40:	ldr	r3, [fp, #-8]
   21d44:	vstr	s15, [r3, #28]
   21d48:	mov	r3, #1
   21d4c:	b	21d54 <__assert_fail@plt+0xf668>
   21d50:	mov	r3, #0
   21d54:	mov	r0, r3
   21d58:	sub	sp, fp, #4
   21d5c:	pop	{fp, pc}
   21d60:	andeq	r7, r6, r0, lsl r6
   21d64:	andeq	r7, r6, ip, lsl r6
   21d68:	push	{fp, lr}
   21d6c:	add	fp, sp, #4
   21d70:	sub	sp, sp, #24
   21d74:	str	r0, [fp, #-16]
   21d78:	str	r1, [fp, #-20]	; 0xffffffec
   21d7c:	str	r2, [fp, #-24]	; 0xffffffe8
   21d80:	ldr	r2, [fp, #-16]
   21d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d8c:	bl	25d60 <__assert_fail@plt+0x13674>
   21d90:	str	r0, [fp, #-8]
   21d94:	ldr	r3, [fp, #-8]
   21d98:	cmp	r3, #0
   21d9c:	beq	21dd8 <__assert_fail@plt+0xf6ec>
   21da0:	ldr	r3, [fp, #-8]
   21da4:	ldr	r2, [pc, #80]	; 21dfc <__assert_fail@plt+0xf710>
   21da8:	str	r2, [r3, #28]
   21dac:	ldr	r3, [fp, #-8]
   21db0:	mov	r2, #1
   21db4:	strb	r2, [r3, #20]
   21db8:	ldr	r3, [fp, #-8]
   21dbc:	mov	r2, #0
   21dc0:	strb	r2, [r3, #18]
   21dc4:	ldr	r3, [fp, #-8]
   21dc8:	mov	r2, #0
   21dcc:	strb	r2, [r3, #19]
   21dd0:	mov	r3, #1
   21dd4:	b	21df0 <__assert_fail@plt+0xf704>
   21dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ddc:	ldr	r3, [r3]
   21de0:	sub	r2, r3, #1
   21de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21de8:	str	r2, [r3]
   21dec:	mov	r3, #0
   21df0:	mov	r0, r3
   21df4:	sub	sp, fp, #4
   21df8:	pop	{fp, pc}
   21dfc:	strcc	r3, [r6, #1981]	; 0x7bd
   21e00:	push	{fp, lr}
   21e04:	add	fp, sp, #4
   21e08:	sub	sp, sp, #16
   21e0c:	str	r0, [fp, #-8]
   21e10:	str	r1, [fp, #-12]
   21e14:	str	r2, [fp, #-16]
   21e18:	ldr	r3, [pc, #36]	; 21e44 <__assert_fail@plt+0xf758>
   21e1c:	ldr	r3, [r3, #60]	; 0x3c
   21e20:	orr	r3, r3, #4194304	; 0x400000
   21e24:	ldr	r2, [fp, #-8]
   21e28:	ldr	r1, [fp, #-16]
   21e2c:	ldr	r0, [fp, #-12]
   21e30:	bl	23708 <__assert_fail@plt+0x1101c>
   21e34:	mov	r3, r0
   21e38:	mov	r0, r3
   21e3c:	sub	sp, fp, #4
   21e40:	pop	{fp, pc}
   21e44:	andeq	sp, r7, ip, asr #32
   21e48:	push	{fp, lr}
   21e4c:	add	fp, sp, #4
   21e50:	sub	sp, sp, #24
   21e54:	str	r0, [fp, #-16]
   21e58:	str	r1, [fp, #-20]	; 0xffffffec
   21e5c:	str	r2, [fp, #-24]	; 0xffffffe8
   21e60:	ldr	r2, [fp, #-16]
   21e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e6c:	bl	25d60 <__assert_fail@plt+0x13674>
   21e70:	str	r0, [fp, #-8]
   21e74:	ldr	r3, [fp, #-8]
   21e78:	cmp	r3, #0
   21e7c:	beq	21edc <__assert_fail@plt+0xf7f0>
   21e80:	ldr	r3, [fp, #-8]
   21e84:	ldrd	r2, [r3, #48]	; 0x30
   21e88:	cmp	r3, #0
   21e8c:	cmpeq	r2, #1
   21e90:	bne	21ea4 <__assert_fail@plt+0xf7b8>
   21e94:	ldr	r3, [fp, #-8]
   21e98:	ldr	r2, [pc, #96]	; 21f00 <__assert_fail@plt+0xf814>
   21e9c:	str	r2, [r3, #28]
   21ea0:	b	21ed4 <__assert_fail@plt+0xf7e8>
   21ea4:	ldr	r3, [fp, #-8]
   21ea8:	ldrd	r2, [r3, #48]	; 0x30
   21eac:	cmp	r3, #0
   21eb0:	cmpeq	r2, #2
   21eb4:	bne	21ec8 <__assert_fail@plt+0xf7dc>
   21eb8:	ldr	r3, [fp, #-8]
   21ebc:	ldr	r2, [pc, #64]	; 21f04 <__assert_fail@plt+0xf818>
   21ec0:	str	r2, [r3, #28]
   21ec4:	b	21ed4 <__assert_fail@plt+0xf7e8>
   21ec8:	ldr	r3, [fp, #-8]
   21ecc:	ldr	r2, [pc, #52]	; 21f08 <__assert_fail@plt+0xf81c>
   21ed0:	str	r2, [r3, #28]
   21ed4:	mov	r3, #1
   21ed8:	b	21ef4 <__assert_fail@plt+0xf808>
   21edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ee0:	ldr	r3, [r3]
   21ee4:	sub	r2, r3, #1
   21ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21eec:	str	r2, [r3]
   21ef0:	mov	r3, #0
   21ef4:	mov	r0, r3
   21ef8:	sub	sp, fp, #4
   21efc:	pop	{fp, pc}
   21f00:	svccc	0x007d70a4
   21f04:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   21f08:	bcc	fe0e68cc <stdout@@GLIBC_2.4+0xfe06a198>
   21f0c:	push	{fp, lr}
   21f10:	add	fp, sp, #4
   21f14:	sub	sp, sp, #24
   21f18:	str	r0, [fp, #-16]
   21f1c:	str	r1, [fp, #-20]	; 0xffffffec
   21f20:	str	r2, [fp, #-24]	; 0xffffffe8
   21f24:	bl	21b28 <__assert_fail@plt+0xf43c>
   21f28:	sub	r3, fp, #12
   21f2c:	mov	r2, r3
   21f30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   21f38:	bl	20a68 <__assert_fail@plt+0xe37c>
   21f3c:	mov	r3, r0
   21f40:	cmp	r3, #0
   21f44:	beq	21f94 <__assert_fail@plt+0xf8a8>
   21f48:	ldr	r3, [fp, #-12]
   21f4c:	mov	r1, r3
   21f50:	ldr	r0, [fp, #-16]
   21f54:	bl	1a948 <__assert_fail@plt+0x825c>
   21f58:	str	r0, [fp, #-8]
   21f5c:	ldr	r2, [fp, #-12]
   21f60:	ldr	r3, [fp, #-8]
   21f64:	str	r2, [r3, #40]	; 0x28
   21f68:	ldr	r3, [fp, #-12]
   21f6c:	mov	r1, #0
   21f70:	mov	r0, r3
   21f74:	bl	21a18 <__assert_fail@plt+0xf32c>
   21f78:	vmov.f32	s14, s0
   21f7c:	vldr	s15, [pc, #32]	; 21fa4 <__assert_fail@plt+0xf8b8>
   21f80:	vmul.f32	s15, s14, s15
   21f84:	ldr	r3, [fp, #-8]
   21f88:	vstr	s15, [r3, #28]
   21f8c:	mov	r3, #1
   21f90:	b	21f98 <__assert_fail@plt+0xf8ac>
   21f94:	mov	r3, #0
   21f98:	mov	r0, r3
   21f9c:	sub	sp, fp, #4
   21fa0:	pop	{fp, pc}
   21fa4:	stclcc	12, cr12, [ip, #820]	; 0x334
   21fa8:	push	{fp, lr}
   21fac:	add	fp, sp, #4
   21fb0:	sub	sp, sp, #16
   21fb4:	str	r0, [fp, #-8]
   21fb8:	str	r1, [fp, #-12]
   21fbc:	str	r2, [fp, #-16]
   21fc0:	mov	r1, #0
   21fc4:	ldr	r0, [fp, #-8]
   21fc8:	bl	21290 <__assert_fail@plt+0xeba4>
   21fcc:	mov	r3, r0
   21fd0:	mov	r0, r3
   21fd4:	sub	sp, fp, #4
   21fd8:	pop	{fp, pc}
   21fdc:	push	{r4, fp, lr}
   21fe0:	add	fp, sp, #8
   21fe4:	sub	sp, sp, #44	; 0x2c
   21fe8:	str	r0, [fp, #-32]	; 0xffffffe0
   21fec:	str	r1, [fp, #-36]	; 0xffffffdc
   21ff0:	str	r2, [fp, #-40]	; 0xffffffd8
   21ff4:	str	r3, [fp, #-44]	; 0xffffffd4
   21ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ffc:	ldr	r3, [r3]
   22000:	sub	r3, r3, #-1073741823	; 0xc0000001
   22004:	lsl	r3, r3, #2
   22008:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2200c:	add	r3, r2, r3
   22010:	ldr	r3, [r3]
   22014:	str	r3, [fp, #-16]
   22018:	sub	r3, fp, #24
   2201c:	mov	r2, r3
   22020:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22024:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22028:	bl	20a68 <__assert_fail@plt+0xe37c>
   2202c:	mov	r3, r0
   22030:	cmp	r3, #0
   22034:	beq	22100 <__assert_fail@plt+0xfa14>
   22038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2203c:	ldr	r1, [pc, #204]	; 22110 <__assert_fail@plt+0xfa24>
   22040:	mov	r0, r3
   22044:	bl	126e0 <strspn@plt>
   22048:	mov	r3, r0
   2204c:	str	r3, [fp, #-20]	; 0xffffffec
   22050:	ldr	r3, [fp, #-20]	; 0xffffffec
   22054:	cmp	r3, #0
   22058:	ble	220c0 <__assert_fail@plt+0xf9d4>
   2205c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22060:	ldr	r3, [fp, #-20]	; 0xffffffec
   22064:	add	r3, r2, r3
   22068:	ldrb	r3, [r3]
   2206c:	cmp	r3, #0
   22070:	bne	220c0 <__assert_fail@plt+0xf9d4>
   22074:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22078:	ldr	r3, [pc, #148]	; 22114 <__assert_fail@plt+0xfa28>
   2207c:	ldr	r3, [r3, #72]	; 0x48
   22080:	mov	r1, r3
   22084:	mov	r0, r2
   22088:	bl	296f8 <__assert_fail@plt+0x1700c>
   2208c:	mov	r2, r0
   22090:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22094:	str	r2, [r3]
   22098:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2209c:	ldr	r3, [r3]
   220a0:	cmp	r3, #0
   220a4:	blt	220c0 <__assert_fail@plt+0xf9d4>
   220a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   220ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   220b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   220b4:	bl	24064 <__assert_fail@plt+0x11978>
   220b8:	mov	r3, r0
   220bc:	b	22104 <__assert_fail@plt+0xfa18>
   220c0:	ldr	r0, [pc, #80]	; 22118 <__assert_fail@plt+0xfa2c>
   220c4:	bl	12398 <gettext@plt>
   220c8:	mov	r4, r0
   220cc:	ldr	r3, [pc, #64]	; 22114 <__assert_fail@plt+0xfa28>
   220d0:	ldr	r3, [r3, #72]	; 0x48
   220d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   220d8:	mov	r1, r3
   220dc:	mov	r0, #0
   220e0:	bl	3b718 <__assert_fail@plt+0x2902c>
   220e4:	mov	r3, r0
   220e8:	str	r3, [sp]
   220ec:	ldr	r3, [fp, #-16]
   220f0:	mov	r2, r4
   220f4:	mov	r1, #0
   220f8:	mov	r0, #1
   220fc:	bl	122b4 <error@plt>
   22100:	mov	r3, #0
   22104:	mov	r0, r3
   22108:	sub	sp, fp, #8
   2210c:	pop	{r4, fp, pc}
   22110:	andeq	r7, r6, ip, lsr #8
   22114:	andeq	sp, r7, ip, asr #32
   22118:	andeq	r7, r6, r4, lsr #12
   2211c:	push	{fp, lr}
   22120:	add	fp, sp, #4
   22124:	sub	sp, sp, #16
   22128:	str	r0, [fp, #-8]
   2212c:	str	r1, [fp, #-12]
   22130:	str	r2, [fp, #-16]
   22134:	ldr	r3, [pc, #28]	; 22158 <__assert_fail@plt+0xfa6c>
   22138:	ldr	r2, [fp, #-16]
   2213c:	ldr	r1, [fp, #-12]
   22140:	ldr	r0, [fp, #-8]
   22144:	bl	21fdc <__assert_fail@plt+0xf8f0>
   22148:	mov	r3, r0
   2214c:	mov	r0, r3
   22150:	sub	sp, fp, #4
   22154:	pop	{fp, pc}
   22158:	andeq	sp, r7, r0, asr r0
   2215c:	push	{fp, lr}
   22160:	add	fp, sp, #4
   22164:	sub	sp, sp, #16
   22168:	str	r0, [fp, #-8]
   2216c:	str	r1, [fp, #-12]
   22170:	str	r2, [fp, #-16]
   22174:	ldr	r3, [pc, #28]	; 22198 <__assert_fail@plt+0xfaac>
   22178:	ldr	r2, [fp, #-16]
   2217c:	ldr	r1, [fp, #-12]
   22180:	ldr	r0, [fp, #-8]
   22184:	bl	21fdc <__assert_fail@plt+0xf8f0>
   22188:	mov	r3, r0
   2218c:	mov	r0, r3
   22190:	sub	sp, fp, #4
   22194:	pop	{fp, pc}
   22198:	andeq	sp, r7, r4, asr r0
   2219c:	push	{fp, lr}
   221a0:	add	fp, sp, #4
   221a4:	sub	sp, sp, #64	; 0x40
   221a8:	str	r0, [fp, #-48]	; 0xffffffd0
   221ac:	str	r1, [fp, #-52]	; 0xffffffcc
   221b0:	str	r2, [fp, #-56]	; 0xffffffc8
   221b4:	str	r3, [fp, #-60]	; 0xffffffc4
   221b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   221bc:	ldr	r3, [r3]
   221c0:	str	r3, [fp, #-8]
   221c4:	sub	r3, fp, #16
   221c8:	mov	r2, r3
   221cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   221d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   221d4:	bl	20a68 <__assert_fail@plt+0xe37c>
   221d8:	mov	r3, r0
   221dc:	cmp	r3, #0
   221e0:	beq	22290 <__assert_fail@plt+0xfba4>
   221e4:	ldr	r2, [pc, #188]	; 222a8 <__assert_fail@plt+0xfbbc>
   221e8:	sub	r3, fp, #40	; 0x28
   221ec:	add	r2, r2, #28
   221f0:	ldm	r2, {r0, r1}
   221f4:	stm	r3, {r0, r1}
   221f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   221fc:	str	r3, [fp, #-32]	; 0xffffffe0
   22200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22204:	add	r3, r3, #86016	; 0x15000
   22208:	add	r3, r3, #384	; 0x180
   2220c:	str	r3, [fp, #-40]	; 0xffffffd8
   22210:	ldr	r0, [fp, #-16]
   22214:	sub	r1, fp, #32
   22218:	ldr	r3, [pc, #140]	; 222ac <__assert_fail@plt+0xfbc0>
   2221c:	str	r3, [sp]
   22220:	vldr	d0, [pc, #120]	; 222a0 <__assert_fail@plt+0xfbb4>
   22224:	sub	r3, fp, #40	; 0x28
   22228:	ldm	r3, {r2, r3}
   2222c:	bl	2568c <__assert_fail@plt+0x12fa0>
   22230:	mov	r3, r0
   22234:	cmp	r3, #0
   22238:	beq	22284 <__assert_fail@plt+0xfb98>
   2223c:	ldr	r3, [fp, #-16]
   22240:	mov	r1, r3
   22244:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22248:	bl	1a948 <__assert_fail@plt+0x825c>
   2224c:	str	r0, [fp, #-12]
   22250:	ldr	r3, [fp, #-12]
   22254:	add	ip, r3, #40	; 0x28
   22258:	sub	r3, fp, #32
   2225c:	ldm	r3, {r0, r1, r2, r3}
   22260:	stm	ip, {r0, r1, r2, r3}
   22264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22268:	mov	r0, r3
   2226c:	bl	20960 <__assert_fail@plt+0xe274>
   22270:	vmov.f32	s15, s0
   22274:	ldr	r3, [fp, #-12]
   22278:	vstr	s15, [r3, #28]
   2227c:	mov	r3, #1
   22280:	b	22294 <__assert_fail@plt+0xfba8>
   22284:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22288:	ldr	r2, [fp, #-8]
   2228c:	str	r2, [r3]
   22290:	mov	r3, #0
   22294:	mov	r0, r3
   22298:	sub	sp, fp, #4
   2229c:	pop	{fp, pc}
   222a0:	andeq	r0, r0, r0
   222a4:	submi	r0, lr, r0
   222a8:	andeq	sp, r7, ip, asr #32
   222ac:	andeq	r7, r6, r4, ror #12
   222b0:	push	{fp, lr}
   222b4:	add	fp, sp, #4
   222b8:	sub	sp, sp, #16
   222bc:	str	r0, [fp, #-8]
   222c0:	str	r1, [fp, #-12]
   222c4:	str	r2, [fp, #-16]
   222c8:	mov	r3, #0
   222cc:	ldr	r2, [fp, #-16]
   222d0:	ldr	r1, [fp, #-12]
   222d4:	ldr	r0, [fp, #-8]
   222d8:	bl	2219c <__assert_fail@plt+0xfab0>
   222dc:	mov	r3, r0
   222e0:	mov	r0, r3
   222e4:	sub	sp, fp, #4
   222e8:	pop	{fp, pc}
   222ec:	push	{fp, lr}
   222f0:	add	fp, sp, #4
   222f4:	sub	sp, sp, #16
   222f8:	str	r0, [fp, #-8]
   222fc:	str	r1, [fp, #-12]
   22300:	str	r2, [fp, #-16]
   22304:	mov	r3, #2
   22308:	ldr	r2, [fp, #-16]
   2230c:	ldr	r1, [fp, #-12]
   22310:	ldr	r0, [fp, #-8]
   22314:	bl	2219c <__assert_fail@plt+0xfab0>
   22318:	mov	r3, r0
   2231c:	mov	r0, r3
   22320:	sub	sp, fp, #4
   22324:	pop	{fp, pc}
   22328:	push	{fp, lr}
   2232c:	add	fp, sp, #4
   22330:	sub	sp, sp, #16
   22334:	str	r0, [fp, #-8]
   22338:	str	r1, [fp, #-12]
   2233c:	str	r2, [fp, #-16]
   22340:	mov	r3, #3
   22344:	ldr	r2, [fp, #-16]
   22348:	ldr	r1, [fp, #-12]
   2234c:	ldr	r0, [fp, #-8]
   22350:	bl	2219c <__assert_fail@plt+0xfab0>
   22354:	mov	r3, r0
   22358:	mov	r0, r3
   2235c:	sub	sp, fp, #4
   22360:	pop	{fp, pc}
   22364:	push	{fp, lr}
   22368:	add	fp, sp, #4
   2236c:	sub	sp, sp, #32
   22370:	str	r0, [fp, #-24]	; 0xffffffe8
   22374:	str	r1, [fp, #-28]	; 0xffffffe4
   22378:	str	r2, [fp, #-32]	; 0xffffffe0
   2237c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22380:	ldr	r3, [r3]
   22384:	str	r3, [fp, #-8]
   22388:	sub	r3, fp, #16
   2238c:	mov	r2, r3
   22390:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22394:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22398:	bl	20a68 <__assert_fail@plt+0xe37c>
   2239c:	mov	r3, r0
   223a0:	cmp	r3, #0
   223a4:	beq	22438 <__assert_fail@plt+0xfd4c>
   223a8:	bl	21b28 <__assert_fail@plt+0xf43c>
   223ac:	ldr	r3, [fp, #-16]
   223b0:	mov	r2, r3
   223b4:	ldr	r1, [pc, #140]	; 22448 <__assert_fail@plt+0xfd5c>
   223b8:	ldr	r0, [pc, #140]	; 2244c <__assert_fail@plt+0xfd60>
   223bc:	bl	21be4 <__assert_fail@plt+0xf4f8>
   223c0:	mov	r3, r0
   223c4:	cmp	r3, #0
   223c8:	beq	2242c <__assert_fail@plt+0xfd40>
   223cc:	ldr	r3, [fp, #-16]
   223d0:	mov	r1, r3
   223d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223d8:	bl	1a948 <__assert_fail@plt+0x825c>
   223dc:	str	r0, [fp, #-12]
   223e0:	ldr	r3, [fp, #-12]
   223e4:	mov	r2, #0
   223e8:	strb	r2, [r3, #19]
   223ec:	ldr	r3, [fp, #-12]
   223f0:	ldrb	r2, [r3, #19]
   223f4:	ldr	r3, [fp, #-12]
   223f8:	strb	r2, [r3, #18]
   223fc:	ldr	r2, [fp, #-16]
   22400:	ldr	r3, [fp, #-12]
   22404:	str	r2, [r3, #40]	; 0x28
   22408:	ldr	r3, [fp, #-16]
   2240c:	mov	r1, #0
   22410:	mov	r0, r3
   22414:	bl	21a18 <__assert_fail@plt+0xf32c>
   22418:	vmov.f32	s15, s0
   2241c:	ldr	r3, [fp, #-12]
   22420:	vstr	s15, [r3, #28]
   22424:	mov	r3, #1
   22428:	b	2243c <__assert_fail@plt+0xfd50>
   2242c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22430:	ldr	r2, [fp, #-8]
   22434:	str	r2, [r3]
   22438:	mov	r3, #0
   2243c:	mov	r0, r3
   22440:	sub	sp, fp, #4
   22444:	pop	{fp, pc}
   22448:	andeq	r7, r6, ip, lsr #13
   2244c:			; <UNDEFINED> instruction: 0x000676b8
   22450:	push	{fp, lr}
   22454:	add	fp, sp, #4
   22458:	sub	sp, sp, #24
   2245c:	str	r0, [fp, #-16]
   22460:	str	r1, [fp, #-20]	; 0xffffffec
   22464:	str	r2, [fp, #-24]	; 0xffffffe8
   22468:	mov	r1, #0
   2246c:	ldr	r0, [fp, #-16]
   22470:	bl	1a1b0 <__assert_fail@plt+0x7ac4>
   22474:	str	r0, [fp, #-8]
   22478:	ldr	r3, [fp, #-8]
   2247c:	ldr	r2, [pc, #68]	; 224c8 <__assert_fail@plt+0xfddc>
   22480:	str	r2, [r3]
   22484:	ldr	r3, [fp, #-8]
   22488:	mov	r2, #2
   2248c:	str	r2, [r3, #8]
   22490:	ldr	r3, [fp, #-8]
   22494:	mov	r2, #4
   22498:	str	r2, [r3, #12]
   2249c:	ldr	r3, [fp, #-8]
   224a0:	mov	r2, #0
   224a4:	strb	r2, [r3, #19]
   224a8:	ldr	r3, [fp, #-8]
   224ac:	ldrb	r2, [r3, #19]
   224b0:	ldr	r3, [fp, #-8]
   224b4:	strb	r2, [r3, #18]
   224b8:	mov	r3, #1
   224bc:	mov	r0, r3
   224c0:	sub	sp, fp, #4
   224c4:	pop	{fp, pc}
   224c8:	andeq	r5, r1, r4, asr r1
   224cc:	push	{r4, fp, lr}
   224d0:	add	fp, sp, #8
   224d4:	sub	sp, sp, #148	; 0x94
   224d8:	str	r0, [fp, #-136]	; 0xffffff78
   224dc:	str	r1, [fp, #-140]	; 0xffffff74
   224e0:	str	r2, [fp, #-144]	; 0xffffff70
   224e4:	sub	r3, fp, #124	; 0x7c
   224e8:	mov	r0, r3
   224ec:	bl	1ad50 <__assert_fail@plt+0x8664>
   224f0:	sub	r3, fp, #128	; 0x80
   224f4:	sub	r2, fp, #124	; 0x7c
   224f8:	ldr	r1, [fp, #-144]	; 0xffffff70
   224fc:	ldr	r0, [fp, #-140]	; 0xffffff74
   22500:	bl	20ab8 <__assert_fail@plt+0xe3cc>
   22504:	mov	r3, r0
   22508:	cmp	r3, #0
   2250c:	beq	22584 <__assert_fail@plt+0xfe98>
   22510:	ldr	r3, [fp, #-128]	; 0xffffff80
   22514:	mov	r1, r3
   22518:	ldr	r0, [fp, #-136]	; 0xffffff78
   2251c:	bl	1a948 <__assert_fail@plt+0x825c>
   22520:	str	r0, [fp, #-16]
   22524:	ldr	r4, [fp, #-16]
   22528:	sub	r3, fp, #156	; 0x9c
   2252c:	sub	r2, fp, #124	; 0x7c
   22530:	mov	r1, r2
   22534:	mov	r0, r3
   22538:	bl	3c7e8 <__assert_fail@plt+0x2a0fc>
   2253c:	add	r3, r4, #48	; 0x30
   22540:	sub	r2, fp, #156	; 0x9c
   22544:	ldm	r2, {r0, r1}
   22548:	stm	r3, {r0, r1}
   2254c:	ldr	r3, [fp, #-16]
   22550:	mov	r2, #3
   22554:	str	r2, [r3, #40]	; 0x28
   22558:	ldr	r3, [fp, #-16]
   2255c:	mov	r2, #0
   22560:	str	r2, [r3, #44]	; 0x2c
   22564:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22568:	mov	r0, r3
   2256c:	bl	20960 <__assert_fail@plt+0xe274>
   22570:	vmov.f32	s15, s0
   22574:	ldr	r3, [fp, #-16]
   22578:	vstr	s15, [r3, #28]
   2257c:	mov	r3, #1
   22580:	b	22588 <__assert_fail@plt+0xfe9c>
   22584:	mov	r3, #0
   22588:	mov	r0, r3
   2258c:	sub	sp, fp, #8
   22590:	pop	{r4, fp, pc}
   22594:	push	{r4, fp, lr}
   22598:	add	fp, sp, #8
   2259c:	sub	sp, sp, #140	; 0x8c
   225a0:	str	r0, [fp, #-136]	; 0xffffff78
   225a4:	str	r1, [fp, #-140]	; 0xffffff74
   225a8:	str	r2, [fp, #-144]	; 0xffffff70
   225ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   225b0:	cmp	r3, #0
   225b4:	beq	225d8 <__assert_fail@plt+0xfeec>
   225b8:	ldr	r3, [fp, #-144]	; 0xffffff70
   225bc:	ldr	r3, [r3]
   225c0:	lsl	r3, r3, #2
   225c4:	ldr	r2, [fp, #-140]	; 0xffffff74
   225c8:	add	r3, r2, r3
   225cc:	ldr	r3, [r3]
   225d0:	cmp	r3, #0
   225d4:	bne	225e0 <__assert_fail@plt+0xfef4>
   225d8:	mov	r3, #0
   225dc:	b	22acc <__assert_fail@plt+0x103e0>
   225e0:	ldr	r3, [fp, #-144]	; 0xffffff70
   225e4:	ldr	r3, [r3]
   225e8:	lsl	r3, r3, #2
   225ec:	ldr	r2, [fp, #-140]	; 0xffffff74
   225f0:	add	r3, r2, r3
   225f4:	ldr	r3, [r3]
   225f8:	mov	r0, r3
   225fc:	bl	123bc <strlen@plt>
   22600:	mov	r3, r0
   22604:	cmp	r3, #8
   22608:	beq	22614 <__assert_fail@plt+0xff28>
   2260c:	mov	r3, #0
   22610:	b	22acc <__assert_fail@plt+0x103e0>
   22614:	ldr	r2, [pc, #1212]	; 22ad8 <__assert_fail@plt+0x103ec>
   22618:	sub	r3, fp, #28
   2261c:	ldm	r2, {r0, r1}
   22620:	str	r0, [r3]
   22624:	add	r3, r3, #4
   22628:	strh	r1, [r3]
   2262c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22630:	ldr	r3, [r3]
   22634:	lsl	r3, r3, #2
   22638:	ldr	r2, [fp, #-140]	; 0xffffff74
   2263c:	add	r3, r2, r3
   22640:	ldr	r3, [r3]
   22644:	mov	r2, #6
   22648:	mov	r1, r3
   2264c:	ldr	r0, [pc, #1160]	; 22adc <__assert_fail@plt+0x103f0>
   22650:	bl	1268c <strncmp@plt>
   22654:	mov	r3, r0
   22658:	cmp	r3, #0
   2265c:	beq	22674 <__assert_fail@plt+0xff88>
   22660:	ldr	r3, [pc, #1144]	; 22ae0 <__assert_fail@plt+0x103f4>
   22664:	ldr	r2, [pc, #1144]	; 22ae4 <__assert_fail@plt+0x103f8>
   22668:	ldr	r1, [pc, #1144]	; 22ae8 <__assert_fail@plt+0x103fc>
   2266c:	ldr	r0, [pc, #1144]	; 22aec <__assert_fail@plt+0x10400>
   22670:	bl	126ec <__assert_fail@plt>
   22674:	ldr	r3, [fp, #-144]	; 0xffffff70
   22678:	ldr	r3, [r3]
   2267c:	lsl	r3, r3, #2
   22680:	ldr	r2, [fp, #-140]	; 0xffffff74
   22684:	add	r3, r2, r3
   22688:	ldr	r3, [r3]
   2268c:	ldrb	r3, [r3, #6]
   22690:	strb	r3, [fp, #-13]
   22694:	ldr	r3, [fp, #-144]	; 0xffffff70
   22698:	ldr	r3, [r3]
   2269c:	lsl	r3, r3, #2
   226a0:	ldr	r2, [fp, #-140]	; 0xffffff74
   226a4:	add	r3, r2, r3
   226a8:	ldr	r3, [r3]
   226ac:	ldrb	r3, [r3, #7]
   226b0:	strb	r3, [fp, #-14]
   226b4:	ldrb	r3, [fp, #-13]
   226b8:	cmp	r3, #66	; 0x42
   226bc:	beq	226cc <__assert_fail@plt+0xffe0>
   226c0:	ldrb	r3, [fp, #-14]
   226c4:	cmp	r3, #66	; 0x42
   226c8:	bne	226f0 <__assert_fail@plt+0x10004>
   226cc:	ldr	r0, [pc, #1052]	; 22af0 <__assert_fail@plt+0x10404>
   226d0:	bl	12398 <gettext@plt>
   226d4:	mov	r3, r0
   226d8:	mov	r2, r3
   226dc:	mov	r1, #0
   226e0:	mov	r0, #0
   226e4:	bl	122b4 <error@plt>
   226e8:	mov	r3, #0
   226ec:	b	22acc <__assert_fail@plt+0x103e0>
   226f0:	ldrb	r3, [fp, #-13]
   226f4:	cmp	r3, #116	; 0x74
   226f8:	beq	2273c <__assert_fail@plt+0x10050>
   226fc:	ldrb	r2, [fp, #-13]
   22700:	sub	r3, fp, #28
   22704:	mov	r1, r2
   22708:	mov	r0, r3
   2270c:	bl	123c8 <strchr@plt>
   22710:	mov	r3, r0
   22714:	cmp	r3, #0
   22718:	beq	2273c <__assert_fail@plt+0x10050>
   2271c:	ldrb	r2, [fp, #-14]
   22720:	sub	r3, fp, #28
   22724:	mov	r1, r2
   22728:	mov	r0, r3
   2272c:	bl	123c8 <strchr@plt>
   22730:	mov	r3, r0
   22734:	cmp	r3, #0
   22738:	bne	22744 <__assert_fail@plt+0x10058>
   2273c:	mov	r3, #0
   22740:	b	22acc <__assert_fail@plt+0x103e0>
   22744:	ldr	r3, [fp, #-144]	; 0xffffff70
   22748:	ldr	r3, [r3]
   2274c:	add	r3, r3, #1
   22750:	lsl	r3, r3, #2
   22754:	ldr	r2, [fp, #-140]	; 0xffffff74
   22758:	add	r3, r2, r3
   2275c:	ldr	r3, [r3]
   22760:	cmp	r3, #0
   22764:	bne	227b4 <__assert_fail@plt+0x100c8>
   22768:	ldr	r0, [pc, #900]	; 22af4 <__assert_fail@plt+0x10408>
   2276c:	bl	12398 <gettext@plt>
   22770:	mov	r4, r0
   22774:	ldr	r3, [pc, #892]	; 22af8 <__assert_fail@plt+0x1040c>
   22778:	ldr	r1, [r3, #72]	; 0x48
   2277c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22780:	ldr	r3, [r3]
   22784:	lsl	r3, r3, #2
   22788:	ldr	r2, [fp, #-140]	; 0xffffff74
   2278c:	add	r3, r2, r3
   22790:	ldr	r3, [r3]
   22794:	mov	r2, r3
   22798:	mov	r0, #0
   2279c:	bl	3b718 <__assert_fail@plt+0x2902c>
   227a0:	mov	r3, r0
   227a4:	mov	r2, r4
   227a8:	mov	r1, #0
   227ac:	mov	r0, #1
   227b0:	bl	122b4 <error@plt>
   227b4:	ldr	r3, [fp, #-144]	; 0xffffff70
   227b8:	ldr	r3, [r3]
   227bc:	add	r2, r3, #1
   227c0:	ldr	r3, [fp, #-144]	; 0xffffff70
   227c4:	str	r2, [r3]
   227c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   227cc:	ldr	r3, [r3]
   227d0:	lsl	r3, r3, #2
   227d4:	ldr	r2, [fp, #-140]	; 0xffffff74
   227d8:	add	r3, r2, r3
   227dc:	ldr	r3, [r3]
   227e0:	mov	r1, r3
   227e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   227e8:	bl	1a948 <__assert_fail@plt+0x825c>
   227ec:	str	r0, [fp, #-20]	; 0xffffffec
   227f0:	ldrb	r3, [fp, #-13]
   227f4:	cmp	r3, #97	; 0x61
   227f8:	beq	22824 <__assert_fail@plt+0x10138>
   227fc:	cmp	r3, #97	; 0x61
   22800:	bgt	22810 <__assert_fail@plt+0x10124>
   22804:	cmp	r3, #66	; 0x42
   22808:	beq	22834 <__assert_fail@plt+0x10148>
   2280c:	b	22864 <__assert_fail@plt+0x10178>
   22810:	cmp	r3, #99	; 0x63
   22814:	beq	22844 <__assert_fail@plt+0x10158>
   22818:	cmp	r3, #109	; 0x6d
   2281c:	beq	22854 <__assert_fail@plt+0x10168>
   22820:	b	22864 <__assert_fail@plt+0x10178>
   22824:	ldr	r3, [fp, #-20]	; 0xffffffec
   22828:	mov	r2, #0
   2282c:	str	r2, [r3, #40]	; 0x28
   22830:	b	228ac <__assert_fail@plt+0x101c0>
   22834:	ldr	r3, [fp, #-20]	; 0xffffffec
   22838:	mov	r2, #1
   2283c:	str	r2, [r3, #40]	; 0x28
   22840:	b	228ac <__assert_fail@plt+0x101c0>
   22844:	ldr	r3, [fp, #-20]	; 0xffffffec
   22848:	mov	r2, #2
   2284c:	str	r2, [r3, #40]	; 0x28
   22850:	b	228ac <__assert_fail@plt+0x101c0>
   22854:	ldr	r3, [fp, #-20]	; 0xffffffec
   22858:	mov	r2, #3
   2285c:	str	r2, [r3, #40]	; 0x28
   22860:	b	228ac <__assert_fail@plt+0x101c0>
   22864:	ldrb	r2, [fp, #-13]
   22868:	sub	r3, fp, #28
   2286c:	mov	r1, r2
   22870:	mov	r0, r3
   22874:	bl	123c8 <strchr@plt>
   22878:	mov	r3, r0
   2287c:	cmp	r3, #0
   22880:	bne	22898 <__assert_fail@plt+0x101ac>
   22884:	ldr	r3, [pc, #596]	; 22ae0 <__assert_fail@plt+0x103f4>
   22888:	ldr	r2, [pc, #620]	; 22afc <__assert_fail@plt+0x10410>
   2288c:	ldr	r1, [pc, #596]	; 22ae8 <__assert_fail@plt+0x103fc>
   22890:	ldr	r0, [pc, #616]	; 22b00 <__assert_fail@plt+0x10414>
   22894:	bl	126ec <__assert_fail@plt>
   22898:	ldr	r3, [pc, #576]	; 22ae0 <__assert_fail@plt+0x103f4>
   2289c:	ldr	r2, [pc, #608]	; 22b04 <__assert_fail@plt+0x10418>
   228a0:	ldr	r1, [pc, #576]	; 22ae8 <__assert_fail@plt+0x103fc>
   228a4:	ldr	r0, [pc, #604]	; 22b08 <__assert_fail@plt+0x1041c>
   228a8:	bl	126ec <__assert_fail@plt>
   228ac:	ldrb	r3, [fp, #-14]
   228b0:	cmp	r3, #116	; 0x74
   228b4:	bne	22944 <__assert_fail@plt+0x10258>
   228b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   228bc:	add	r0, r3, #48	; 0x30
   228c0:	ldr	r3, [fp, #-144]	; 0xffffff70
   228c4:	ldr	r3, [r3]
   228c8:	lsl	r3, r3, #2
   228cc:	ldr	r2, [fp, #-140]	; 0xffffff74
   228d0:	add	r3, r2, r3
   228d4:	ldr	r3, [r3]
   228d8:	ldr	r2, [pc, #556]	; 22b0c <__assert_fail@plt+0x10420>
   228dc:	mov	r1, r3
   228e0:	bl	393f0 <__assert_fail@plt+0x26d04>
   228e4:	mov	r3, r0
   228e8:	eor	r3, r3, #1
   228ec:	uxtb	r3, r3
   228f0:	cmp	r3, #0
   228f4:	beq	22a1c <__assert_fail@plt+0x10330>
   228f8:	ldr	r0, [pc, #528]	; 22b10 <__assert_fail@plt+0x10424>
   228fc:	bl	12398 <gettext@plt>
   22900:	mov	r4, r0
   22904:	ldr	r3, [pc, #492]	; 22af8 <__assert_fail@plt+0x1040c>
   22908:	ldr	r1, [r3, #72]	; 0x48
   2290c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22910:	ldr	r3, [r3]
   22914:	lsl	r3, r3, #2
   22918:	ldr	r2, [fp, #-140]	; 0xffffff74
   2291c:	add	r3, r2, r3
   22920:	ldr	r3, [r3]
   22924:	mov	r2, r3
   22928:	mov	r0, #0
   2292c:	bl	3b718 <__assert_fail@plt+0x2902c>
   22930:	mov	r3, r0
   22934:	mov	r2, r4
   22938:	mov	r1, #0
   2293c:	mov	r0, #1
   22940:	bl	122b4 <error@plt>
   22944:	sub	r3, fp, #132	; 0x84
   22948:	mov	r0, r3
   2294c:	bl	1ad50 <__assert_fail@plt+0x8664>
   22950:	ldr	r3, [pc, #416]	; 22af8 <__assert_fail@plt+0x1040c>
   22954:	ldr	r3, [r3, #52]	; 0x34
   22958:	ldr	r2, [fp, #-144]	; 0xffffff70
   2295c:	ldr	r2, [r2]
   22960:	lsl	r2, r2, #2
   22964:	ldr	r1, [fp, #-140]	; 0xffffff74
   22968:	add	r2, r1, r2
   2296c:	ldr	r2, [r2]
   22970:	sub	r1, fp, #132	; 0x84
   22974:	mov	r0, r2
   22978:	blx	r3
   2297c:	mov	r3, r0
   22980:	cmp	r3, #0
   22984:	beq	229b4 <__assert_fail@plt+0x102c8>
   22988:	bl	12404 <__errno_location@plt>
   2298c:	mov	r3, r0
   22990:	ldr	r0, [r3]
   22994:	ldr	r3, [fp, #-144]	; 0xffffff70
   22998:	ldr	r3, [r3]
   2299c:	lsl	r3, r3, #2
   229a0:	ldr	r2, [fp, #-140]	; 0xffffff74
   229a4:	add	r3, r2, r3
   229a8:	ldr	r3, [r3]
   229ac:	mov	r1, r3
   229b0:	bl	1c914 <__assert_fail@plt+0xa228>
   229b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   229b8:	add	r2, r3, #48	; 0x30
   229bc:	ldrb	r1, [fp, #-14]
   229c0:	sub	r3, fp, #132	; 0x84
   229c4:	mov	r0, r3
   229c8:	bl	20404 <__assert_fail@plt+0xdd18>
   229cc:	mov	r3, r0
   229d0:	cmp	r3, #0
   229d4:	bne	22a1c <__assert_fail@plt+0x10330>
   229d8:	ldr	r0, [pc, #308]	; 22b14 <__assert_fail@plt+0x10428>
   229dc:	bl	12398 <gettext@plt>
   229e0:	mov	r4, r0
   229e4:	ldr	r3, [fp, #-144]	; 0xffffff70
   229e8:	ldr	r3, [r3]
   229ec:	lsl	r3, r3, #2
   229f0:	ldr	r2, [fp, #-140]	; 0xffffff74
   229f4:	add	r3, r2, r3
   229f8:	ldr	r3, [r3]
   229fc:	mov	r1, r3
   22a00:	mov	r0, #0
   22a04:	bl	1c7fc <__assert_fail@plt+0xa110>
   22a08:	mov	r3, r0
   22a0c:	mov	r2, r4
   22a10:	mov	r1, #0
   22a14:	mov	r0, #1
   22a18:	bl	122b4 <error@plt>
   22a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a20:	mov	r2, #0
   22a24:	str	r2, [r3, #44]	; 0x2c
   22a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a2c:	ldr	r3, [r3, #48]	; 0x30
   22a30:	mov	r0, r3
   22a34:	bl	20960 <__assert_fail@plt+0xe274>
   22a38:	vmov.f32	s15, s0
   22a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a40:	vstr	s15, [r3, #28]
   22a44:	ldr	r3, [fp, #-144]	; 0xffffff70
   22a48:	ldr	r3, [r3]
   22a4c:	add	r2, r3, #1
   22a50:	ldr	r3, [fp, #-144]	; 0xffffff70
   22a54:	str	r2, [r3]
   22a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a5c:	ldr	r3, [r3]
   22a60:	cmp	r3, #0
   22a64:	bne	22a7c <__assert_fail@plt+0x10390>
   22a68:	ldr	r3, [pc, #112]	; 22ae0 <__assert_fail@plt+0x103f4>
   22a6c:	ldr	r2, [pc, #164]	; 22b18 <__assert_fail@plt+0x1042c>
   22a70:	ldr	r1, [pc, #112]	; 22ae8 <__assert_fail@plt+0x103fc>
   22a74:	ldr	r0, [pc, #160]	; 22b1c <__assert_fail@plt+0x10430>
   22a78:	bl	126ec <__assert_fail@plt>
   22a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a80:	ldr	r3, [r3]
   22a84:	ldr	r2, [pc, #148]	; 22b20 <__assert_fail@plt+0x10434>
   22a88:	cmp	r3, r2
   22a8c:	beq	22aa4 <__assert_fail@plt+0x103b8>
   22a90:	ldr	r3, [pc, #72]	; 22ae0 <__assert_fail@plt+0x103f4>
   22a94:	mov	r2, #1648	; 0x670
   22a98:	ldr	r1, [pc, #72]	; 22ae8 <__assert_fail@plt+0x103fc>
   22a9c:	ldr	r0, [pc, #128]	; 22b24 <__assert_fail@plt+0x10438>
   22aa0:	bl	126ec <__assert_fail@plt>
   22aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22aa8:	ldrb	r3, [r3, #18]
   22aac:	cmp	r3, #0
   22ab0:	bne	22ac8 <__assert_fail@plt+0x103dc>
   22ab4:	ldr	r3, [pc, #36]	; 22ae0 <__assert_fail@plt+0x103f4>
   22ab8:	ldr	r2, [pc, #104]	; 22b28 <__assert_fail@plt+0x1043c>
   22abc:	ldr	r1, [pc, #36]	; 22ae8 <__assert_fail@plt+0x103fc>
   22ac0:	ldr	r0, [pc, #100]	; 22b2c <__assert_fail@plt+0x10440>
   22ac4:	bl	126ec <__assert_fail@plt>
   22ac8:	mov	r3, #1
   22acc:	mov	r0, r3
   22ad0:	sub	sp, fp, #8
   22ad4:	pop	{r4, fp, pc}
   22ad8:	andeq	r7, r6, r0, lsr #16
   22adc:	andeq	r7, r6, r4, ror #6
   22ae0:	andeq	r8, r6, r8, asr #2
   22ae4:	andeq	r0, r0, r3, lsl r6
   22ae8:	andeq	r7, r6, ip, asr r2
   22aec:	andeq	r7, r6, r0, asr #13
   22af0:	andeq	r7, r6, ip, ror #13
   22af4:	andeq	r7, r6, r4, lsr r7
   22af8:	andeq	sp, r7, ip, asr #32
   22afc:	andeq	r0, r0, fp, asr #12
   22b00:	andeq	r7, r6, r4, asr r7
   22b04:	andeq	r0, r0, ip, asr #12
   22b08:	andeq	r7, r6, r8, ror #4
   22b0c:	andeq	sp, r7, r0, rrx
   22b10:	andeq	r7, r6, ip, ror #14
   22b14:	andeq	r7, r6, r8, lsr #15
   22b18:	andeq	r0, r0, pc, ror #12
   22b1c:	andeq	r7, r6, ip, asr #15
   22b20:	andeq	r5, r1, r8, asr #4
   22b24:	andeq	r7, r6, r8, ror #15
   22b28:	andeq	r0, r0, r1, ror r6
   22b2c:	andeq	r7, r6, ip, lsl #16
   22b30:	push	{fp, lr}
   22b34:	add	fp, sp, #4
   22b38:	sub	sp, sp, #16
   22b3c:	str	r0, [fp, #-8]
   22b40:	str	r1, [fp, #-12]
   22b44:	str	r2, [fp, #-16]
   22b48:	ldr	r3, [pc, #36]	; 22b74 <__assert_fail@plt+0x10488>
   22b4c:	mov	r2, #1
   22b50:	strb	r2, [r3, #12]
   22b54:	ldr	r2, [fp, #-16]
   22b58:	ldr	r1, [fp, #-12]
   22b5c:	ldr	r0, [fp, #-8]
   22b60:	bl	24064 <__assert_fail@plt+0x11978>
   22b64:	mov	r3, r0
   22b68:	mov	r0, r3
   22b6c:	sub	sp, fp, #4
   22b70:	pop	{fp, pc}
   22b74:	andeq	sp, r7, ip, asr #32
   22b78:	push	{fp, lr}
   22b7c:	add	fp, sp, #4
   22b80:	sub	sp, sp, #24
   22b84:	str	r0, [fp, #-16]
   22b88:	str	r1, [fp, #-20]	; 0xffffffec
   22b8c:	str	r2, [fp, #-24]	; 0xffffffe8
   22b90:	mov	r1, #0
   22b94:	ldr	r0, [fp, #-16]
   22b98:	bl	1a948 <__assert_fail@plt+0x825c>
   22b9c:	str	r0, [fp, #-8]
   22ba0:	ldr	r3, [fp, #-8]
   22ba4:	ldr	r2, [pc, #16]	; 22bbc <__assert_fail@plt+0x104d0>
   22ba8:	str	r2, [r3, #28]
   22bac:	mov	r3, #1
   22bb0:	mov	r0, r3
   22bb4:	sub	sp, fp, #4
   22bb8:	pop	{fp, pc}
   22bbc:	ldmcc	r1, {r0, r1, r2, r4, r8, r9, sl, ip, sp, pc}^
   22bc0:	push	{fp, lr}
   22bc4:	add	fp, sp, #4
   22bc8:	sub	sp, sp, #24
   22bcc:	str	r0, [fp, #-16]
   22bd0:	str	r1, [fp, #-20]	; 0xffffffec
   22bd4:	str	r2, [fp, #-24]	; 0xffffffe8
   22bd8:	ldr	r0, [fp, #-16]
   22bdc:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   22be0:	str	r0, [fp, #-8]
   22be4:	ldr	r3, [fp, #-8]
   22be8:	ldr	r2, [pc, #16]	; 22c00 <__assert_fail@plt+0x10514>
   22bec:	str	r2, [r3, #28]
   22bf0:	mov	r3, #1
   22bf4:	mov	r0, r3
   22bf8:	sub	sp, fp, #4
   22bfc:	pop	{fp, pc}
   22c00:	bcc	fe0e75c4 <stdout@@GLIBC_2.4+0xfe06ae90>
   22c04:	push	{fp, lr}
   22c08:	add	fp, sp, #4
   22c0c:	sub	sp, sp, #16
   22c10:	str	r0, [fp, #-8]
   22c14:	str	r1, [fp, #-12]
   22c18:	str	r2, [fp, #-16]
   22c1c:	ldr	r3, [pc, #36]	; 22c48 <__assert_fail@plt+0x1055c>
   22c20:	mov	r2, #0
   22c24:	strb	r2, [r3, #16]
   22c28:	ldr	r2, [fp, #-16]
   22c2c:	ldr	r1, [fp, #-12]
   22c30:	ldr	r0, [fp, #-8]
   22c34:	bl	24064 <__assert_fail@plt+0x11978>
   22c38:	mov	r3, r0
   22c3c:	mov	r0, r3
   22c40:	sub	sp, fp, #4
   22c44:	pop	{fp, pc}
   22c48:	andeq	sp, r7, ip, asr #32
   22c4c:	push	{fp, lr}
   22c50:	add	fp, sp, #4
   22c54:	sub	sp, sp, #16
   22c58:	str	r0, [fp, #-8]
   22c5c:	str	r1, [fp, #-12]
   22c60:	str	r2, [fp, #-16]
   22c64:	ldr	r3, [fp, #-16]
   22c68:	ldr	r2, [fp, #-12]
   22c6c:	ldr	r1, [fp, #-8]
   22c70:	ldr	r0, [pc, #16]	; 22c88 <__assert_fail@plt+0x1059c>
   22c74:	bl	24eac <__assert_fail@plt+0x127c0>
   22c78:	mov	r3, r0
   22c7c:	mov	r0, r3
   22c80:	sub	sp, fp, #4
   22c84:	pop	{fp, pc}
   22c88:	andeq	r7, r6, r8, lsr #16
   22c8c:	push	{fp, lr}
   22c90:	add	fp, sp, #4
   22c94:	sub	sp, sp, #16
   22c98:	str	r0, [fp, #-8]
   22c9c:	str	r1, [fp, #-12]
   22ca0:	str	r2, [fp, #-16]
   22ca4:	ldr	r3, [fp, #-16]
   22ca8:	ldr	r2, [fp, #-12]
   22cac:	ldr	r1, [fp, #-8]
   22cb0:	ldr	r0, [pc, #16]	; 22cc8 <__assert_fail@plt+0x105dc>
   22cb4:	bl	24eac <__assert_fail@plt+0x127c0>
   22cb8:	mov	r3, r0
   22cbc:	mov	r0, r3
   22cc0:	sub	sp, fp, #4
   22cc4:	pop	{fp, pc}
   22cc8:	andeq	r7, r6, ip, lsr #16
   22ccc:	push	{fp, lr}
   22cd0:	add	fp, sp, #4
   22cd4:	sub	sp, sp, #24
   22cd8:	str	r0, [fp, #-16]
   22cdc:	str	r1, [fp, #-20]	; 0xffffffec
   22ce0:	str	r2, [fp, #-24]	; 0xffffffe8
   22ce4:	mov	r1, #0
   22ce8:	ldr	r0, [fp, #-16]
   22cec:	bl	1a1b0 <__assert_fail@plt+0x7ac4>
   22cf0:	str	r0, [fp, #-8]
   22cf4:	ldr	r3, [fp, #-8]
   22cf8:	ldr	r2, [pc, #68]	; 22d44 <__assert_fail@plt+0x10658>
   22cfc:	str	r2, [r3]
   22d00:	ldr	r3, [fp, #-8]
   22d04:	mov	r2, #4
   22d08:	str	r2, [r3, #8]
   22d0c:	ldr	r3, [fp, #-8]
   22d10:	mov	r2, #0
   22d14:	str	r2, [r3, #12]
   22d18:	ldr	r3, [fp, #-8]
   22d1c:	mov	r2, #0
   22d20:	strb	r2, [r3, #19]
   22d24:	ldr	r3, [fp, #-8]
   22d28:	ldrb	r2, [r3, #19]
   22d2c:	ldr	r3, [fp, #-8]
   22d30:	strb	r2, [r3, #18]
   22d34:	mov	r3, #1
   22d38:	mov	r0, r3
   22d3c:	sub	sp, fp, #4
   22d40:	pop	{fp, pc}
   22d44:	andeq	r5, r1, ip, asr #12
   22d48:	push	{fp, lr}
   22d4c:	add	fp, sp, #4
   22d50:	sub	sp, sp, #24
   22d54:	str	r0, [fp, #-16]
   22d58:	str	r1, [fp, #-20]	; 0xffffffec
   22d5c:	str	r2, [fp, #-24]	; 0xffffffe8
   22d60:	ldr	r0, [fp, #-16]
   22d64:	bl	19fe4 <__assert_fail@plt+0x78f8>
   22d68:	str	r0, [fp, #-8]
   22d6c:	ldr	r3, [fp, #-8]
   22d70:	ldr	r2, [pc, #68]	; 22dbc <__assert_fail@plt+0x106d0>
   22d74:	str	r2, [r3]
   22d78:	ldr	r3, [fp, #-8]
   22d7c:	mov	r2, #3
   22d80:	str	r2, [r3, #8]
   22d84:	ldr	r3, [fp, #-8]
   22d88:	mov	r2, #2
   22d8c:	str	r2, [r3, #12]
   22d90:	ldr	r3, [fp, #-8]
   22d94:	mov	r2, #0
   22d98:	strb	r2, [r3, #19]
   22d9c:	ldr	r3, [fp, #-8]
   22da0:	ldrb	r2, [r3, #19]
   22da4:	ldr	r3, [fp, #-8]
   22da8:	strb	r2, [r3, #18]
   22dac:	mov	r3, #1
   22db0:	mov	r0, r3
   22db4:	sub	sp, fp, #4
   22db8:	pop	{fp, pc}
   22dbc:	andeq	r5, r1, r8, ror r6
   22dc0:	push	{fp, lr}
   22dc4:	add	fp, sp, #4
   22dc8:	sub	sp, sp, #16
   22dcc:	str	r0, [fp, #-16]
   22dd0:	mov	r3, r1
   22dd4:	strb	r3, [fp, #-17]	; 0xffffffef
   22dd8:	mov	r1, #47	; 0x2f
   22ddc:	ldr	r0, [fp, #-16]
   22de0:	bl	12548 <strrchr@plt>
   22de4:	str	r0, [fp, #-8]
   22de8:	ldr	r3, [fp, #-8]
   22dec:	cmp	r3, #0
   22df0:	beq	22e34 <__assert_fail@plt+0x10748>
   22df4:	ldr	r3, [fp, #-8]
   22df8:	add	r3, r3, #1
   22dfc:	ldrb	r3, [r3]
   22e00:	cmp	r3, #0
   22e04:	bne	22e34 <__assert_fail@plt+0x10748>
   22e08:	ldrb	r3, [fp, #-17]	; 0xffffffef
   22e0c:	mov	r1, r3
   22e10:	ldr	r0, [fp, #-16]
   22e14:	bl	174c0 <__assert_fail@plt+0x4dd4>
   22e18:	mov	r3, r0
   22e1c:	cmp	r3, #0
   22e20:	beq	22e2c <__assert_fail@plt+0x10740>
   22e24:	mov	r3, #1
   22e28:	b	22e38 <__assert_fail@plt+0x1074c>
   22e2c:	mov	r3, #0
   22e30:	b	22e38 <__assert_fail@plt+0x1074c>
   22e34:	mov	r3, #1
   22e38:	mov	r0, r3
   22e3c:	sub	sp, fp, #4
   22e40:	pop	{fp, pc}
   22e44:	push	{fp, lr}
   22e48:	add	fp, sp, #4
   22e4c:	sub	sp, sp, #40	; 0x28
   22e50:	str	r0, [fp, #-24]	; 0xffffffe8
   22e54:	str	r1, [fp, #-28]	; 0xffffffe4
   22e58:	str	r2, [fp, #-32]	; 0xffffffe0
   22e5c:	str	r3, [fp, #-36]	; 0xffffffdc
   22e60:	mov	r3, #0
   22e64:	strb	r3, [fp, #-5]
   22e68:	ldr	r3, [fp, #4]
   22e6c:	ldr	r2, [pc, #276]	; 22f88 <__assert_fail@plt+0x1089c>
   22e70:	cmp	r3, r2
   22e74:	bne	22e80 <__assert_fail@plt+0x10794>
   22e78:	mov	r3, #1
   22e7c:	strb	r3, [fp, #-5]
   22e80:	bl	21b28 <__assert_fail@plt+0xf43c>
   22e84:	sub	r3, fp, #16
   22e88:	mov	r2, r3
   22e8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22e90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22e94:	bl	20a68 <__assert_fail@plt+0xe37c>
   22e98:	mov	r3, r0
   22e9c:	cmp	r3, #0
   22ea0:	beq	22f78 <__assert_fail@plt+0x1088c>
   22ea4:	ldr	r3, [fp, #-16]
   22ea8:	mov	r2, r3
   22eac:	ldr	r1, [fp, #4]
   22eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22eb4:	bl	1a8d0 <__assert_fail@plt+0x81e4>
   22eb8:	str	r0, [fp, #-12]
   22ebc:	ldr	r3, [fp, #-12]
   22ec0:	mov	r2, #0
   22ec4:	strb	r2, [r3, #19]
   22ec8:	ldr	r3, [fp, #-12]
   22ecc:	ldrb	r2, [r3, #19]
   22ed0:	ldr	r3, [fp, #-12]
   22ed4:	strb	r2, [r3, #18]
   22ed8:	ldr	r2, [fp, #-16]
   22edc:	ldr	r3, [fp, #-12]
   22ee0:	str	r2, [r3, #40]	; 0x28
   22ee4:	ldr	r3, [fp, #-16]
   22ee8:	mov	r1, #0
   22eec:	mov	r0, r3
   22ef0:	bl	21a18 <__assert_fail@plt+0xf32c>
   22ef4:	vmov.f32	s15, s0
   22ef8:	ldr	r3, [fp, #-12]
   22efc:	vstr	s15, [r3, #28]
   22f00:	ldr	r3, [pc, #132]	; 22f8c <__assert_fail@plt+0x108a0>
   22f04:	ldrb	r3, [r3, #17]
   22f08:	eor	r3, r3, #1
   22f0c:	uxtb	r3, r3
   22f10:	cmp	r3, #0
   22f14:	beq	22f70 <__assert_fail@plt+0x10884>
   22f18:	ldr	r3, [fp, #-16]
   22f1c:	ldrb	r2, [fp, #-5]
   22f20:	mov	r1, r2
   22f24:	mov	r0, r3
   22f28:	bl	22dc0 <__assert_fail@plt+0x106d4>
   22f2c:	mov	r3, r0
   22f30:	eor	r3, r3, #1
   22f34:	uxtb	r3, r3
   22f38:	cmp	r3, #0
   22f3c:	beq	22f70 <__assert_fail@plt+0x10884>
   22f40:	ldr	r0, [pc, #72]	; 22f90 <__assert_fail@plt+0x108a4>
   22f44:	bl	12398 <gettext@plt>
   22f48:	mov	r2, r0
   22f4c:	ldr	r3, [fp, #-16]
   22f50:	str	r3, [sp]
   22f54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22f58:	mov	r1, #0
   22f5c:	mov	r0, #0
   22f60:	bl	122b4 <error@plt>
   22f64:	ldr	r3, [fp, #-12]
   22f68:	ldr	r2, [pc, #36]	; 22f94 <__assert_fail@plt+0x108a8>
   22f6c:	str	r2, [r3, #28]
   22f70:	mov	r3, #1
   22f74:	b	22f7c <__assert_fail@plt+0x10890>
   22f78:	mov	r3, #0
   22f7c:	mov	r0, r3
   22f80:	sub	sp, fp, #4
   22f84:	pop	{fp, pc}
   22f88:	andeq	r4, r1, r0, ror #27
   22f8c:	andeq	sp, r7, ip, asr #32
   22f90:	andeq	r7, r6, r4, lsr r8
   22f94:	eorcc	ip, fp, #30464	; 0x7700
   22f98:	push	{fp, lr}
   22f9c:	add	fp, sp, #4
   22fa0:	sub	sp, sp, #24
   22fa4:	str	r0, [fp, #-8]
   22fa8:	str	r1, [fp, #-12]
   22fac:	str	r2, [fp, #-16]
   22fb0:	ldr	r3, [pc, #36]	; 22fdc <__assert_fail@plt+0x108f0>
   22fb4:	str	r3, [sp]
   22fb8:	ldr	r3, [pc, #32]	; 22fe0 <__assert_fail@plt+0x108f4>
   22fbc:	ldr	r2, [fp, #-16]
   22fc0:	ldr	r1, [fp, #-12]
   22fc4:	ldr	r0, [fp, #-8]
   22fc8:	bl	22e44 <__assert_fail@plt+0x10758>
   22fcc:	mov	r3, r0
   22fd0:	mov	r0, r3
   22fd4:	sub	sp, fp, #4
   22fd8:	pop	{fp, pc}
   22fdc:	strdeq	r5, [r1], -ip
   22fe0:	andeq	r6, r6, r4, lsl #22
   22fe4:	push	{fp, lr}
   22fe8:	add	fp, sp, #4
   22fec:	sub	sp, sp, #24
   22ff0:	str	r0, [fp, #-8]
   22ff4:	str	r1, [fp, #-12]
   22ff8:	str	r2, [fp, #-16]
   22ffc:	ldr	r3, [pc, #36]	; 23028 <__assert_fail@plt+0x1093c>
   23000:	str	r3, [sp]
   23004:	ldr	r3, [pc, #32]	; 2302c <__assert_fail@plt+0x10940>
   23008:	ldr	r2, [fp, #-16]
   2300c:	ldr	r1, [fp, #-12]
   23010:	ldr	r0, [fp, #-8]
   23014:	bl	22e44 <__assert_fail@plt+0x10758>
   23018:	mov	r3, r0
   2301c:	mov	r0, r3
   23020:	sub	sp, fp, #4
   23024:	pop	{fp, pc}
   23028:	strdeq	r5, [r1], -ip
   2302c:	andeq	r6, r6, ip, lsl #23
   23030:	push	{fp, lr}
   23034:	add	fp, sp, #4
   23038:	sub	sp, sp, #24
   2303c:	str	r0, [fp, #-8]
   23040:	str	r1, [fp, #-12]
   23044:	str	r2, [fp, #-16]
   23048:	ldr	r3, [pc, #36]	; 23074 <__assert_fail@plt+0x10988>
   2304c:	str	r3, [sp]
   23050:	ldr	r3, [pc, #32]	; 23078 <__assert_fail@plt+0x1098c>
   23054:	ldr	r2, [fp, #-16]
   23058:	ldr	r1, [fp, #-12]
   2305c:	ldr	r0, [fp, #-8]
   23060:	bl	22e44 <__assert_fail@plt+0x10758>
   23064:	mov	r3, r0
   23068:	mov	r0, r3
   2306c:	sub	sp, fp, #4
   23070:	pop	{fp, pc}
   23074:	andeq	r4, r1, r0, ror #27
   23078:	andeq	r6, r6, r0, asr #20
   2307c:	push	{fp, lr}
   23080:	add	fp, sp, #4
   23084:	sub	sp, sp, #24
   23088:	str	r0, [fp, #-8]
   2308c:	str	r1, [fp, #-12]
   23090:	str	r2, [fp, #-16]
   23094:	ldr	r3, [pc, #36]	; 230c0 <__assert_fail@plt+0x109d4>
   23098:	str	r3, [sp]
   2309c:	ldr	r3, [pc, #32]	; 230c4 <__assert_fail@plt+0x109d8>
   230a0:	ldr	r2, [fp, #-16]
   230a4:	ldr	r1, [fp, #-12]
   230a8:	ldr	r0, [fp, #-8]
   230ac:	bl	22e44 <__assert_fail@plt+0x10758>
   230b0:	mov	r3, r0
   230b4:	mov	r0, r3
   230b8:	sub	sp, fp, #4
   230bc:	pop	{fp, pc}
   230c0:	andeq	r4, r1, r0, ror #27
   230c4:	andeq	r6, r6, r0, asr sl
   230c8:	push	{r4, fp, lr}
   230cc:	add	fp, sp, #8
   230d0:	sub	sp, sp, #60	; 0x3c
   230d4:	str	r0, [fp, #-48]	; 0xffffffd0
   230d8:	str	r1, [fp, #-52]	; 0xffffffcc
   230dc:	str	r2, [fp, #-56]	; 0xffffffc8
   230e0:	mov	r3, #0
   230e4:	str	r3, [fp, #-20]	; 0xffffffec
   230e8:	mov	r3, #2
   230ec:	str	r3, [fp, #-24]	; 0xffffffe8
   230f0:	sub	r3, fp, #44	; 0x2c
   230f4:	mov	r2, r3
   230f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   230fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23100:	bl	20a68 <__assert_fail@plt+0xe37c>
   23104:	mov	r3, r0
   23108:	eor	r3, r3, #1
   2310c:	uxtb	r3, r3
   23110:	cmp	r3, #0
   23114:	beq	23120 <__assert_fail@plt+0x10a34>
   23118:	mov	r3, #0
   2311c:	b	23314 <__assert_fail@plt+0x10c28>
   23120:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23124:	ldrb	r3, [r3]
   23128:	cmp	r3, #45	; 0x2d
   2312c:	beq	2313c <__assert_fail@plt+0x10a50>
   23130:	cmp	r3, #47	; 0x2f
   23134:	beq	23158 <__assert_fail@plt+0x10a6c>
   23138:	b	23174 <__assert_fail@plt+0x10a88>
   2313c:	mov	r3, #1
   23140:	str	r3, [fp, #-20]	; 0xffffffec
   23144:	mov	r3, #0
   23148:	str	r3, [fp, #-24]	; 0xffffffe8
   2314c:	ldr	r3, [pc, #460]	; 23320 <__assert_fail@plt+0x10c34>
   23150:	str	r3, [fp, #-16]
   23154:	b	23190 <__assert_fail@plt+0x10aa4>
   23158:	mov	r3, #1
   2315c:	str	r3, [fp, #-20]	; 0xffffffec
   23160:	mov	r3, #1
   23164:	str	r3, [fp, #-24]	; 0xffffffe8
   23168:	ldr	r3, [pc, #436]	; 23324 <__assert_fail@plt+0x10c38>
   2316c:	str	r3, [fp, #-16]
   23170:	b	23190 <__assert_fail@plt+0x10aa4>
   23174:	mov	r3, #0
   23178:	str	r3, [fp, #-20]	; 0xffffffec
   2317c:	mov	r3, #2
   23180:	str	r3, [fp, #-24]	; 0xffffffe8
   23184:	ldr	r3, [pc, #412]	; 23328 <__assert_fail@plt+0x10c3c>
   23188:	str	r3, [fp, #-16]
   2318c:	nop			; (mov r0, r0)
   23190:	ldr	r2, [fp, #-44]	; 0xffffffd4
   23194:	ldr	r3, [fp, #-20]	; 0xffffffec
   23198:	add	r3, r2, r3
   2319c:	mov	r0, r3
   231a0:	bl	2f558 <__assert_fail@plt+0x1ce6c>
   231a4:	mov	r3, r0
   231a8:	str	r3, [fp, #-28]	; 0xffffffe4
   231ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   231b0:	cmp	r3, #0
   231b4:	beq	231f0 <__assert_fail@plt+0x10b04>
   231b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   231bc:	ldrb	r3, [r3]
   231c0:	cmp	r3, #43	; 0x2b
   231c4:	bne	23228 <__assert_fail@plt+0x10b3c>
   231c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   231cc:	add	r3, r3, #1
   231d0:	ldrb	r3, [r3]
   231d4:	cmp	r3, #47	; 0x2f
   231d8:	bls	23228 <__assert_fail@plt+0x10b3c>
   231dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   231e0:	add	r3, r3, #1
   231e4:	ldrb	r3, [r3]
   231e8:	cmp	r3, #55	; 0x37
   231ec:	bhi	23228 <__assert_fail@plt+0x10b3c>
   231f0:	ldr	r0, [pc, #308]	; 2332c <__assert_fail@plt+0x10c40>
   231f4:	bl	12398 <gettext@plt>
   231f8:	mov	r4, r0
   231fc:	ldr	r3, [pc, #300]	; 23330 <__assert_fail@plt+0x10c44>
   23200:	ldr	r3, [r3, #72]	; 0x48
   23204:	ldr	r2, [fp, #-44]	; 0xffffffd4
   23208:	mov	r1, r3
   2320c:	mov	r0, #0
   23210:	bl	3b718 <__assert_fail@plt+0x2902c>
   23214:	mov	r3, r0
   23218:	mov	r2, r4
   2321c:	mov	r1, #0
   23220:	mov	r0, #1
   23224:	bl	122b4 <error@plt>
   23228:	mov	r3, #0
   2322c:	str	r3, [sp]
   23230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23234:	mov	r2, #0
   23238:	mov	r1, #0
   2323c:	mov	r0, #0
   23240:	bl	2fb9c <__assert_fail@plt+0x1d4b0>
   23244:	mov	r3, r0
   23248:	str	r3, [fp, #-40]	; 0xffffffd8
   2324c:	mov	r3, #0
   23250:	str	r3, [sp]
   23254:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23258:	mov	r2, #0
   2325c:	mov	r1, #1
   23260:	mov	r0, #0
   23264:	bl	2fb9c <__assert_fail@plt+0x1d4b0>
   23268:	mov	r3, r0
   2326c:	str	r3, [fp, #-36]	; 0xffffffdc
   23270:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23274:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   23278:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2327c:	ldrb	r3, [r3]
   23280:	cmp	r3, #47	; 0x2f
   23284:	bne	232cc <__assert_fail@plt+0x10be0>
   23288:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2328c:	cmp	r3, #0
   23290:	bne	232cc <__assert_fail@plt+0x10be0>
   23294:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23298:	cmp	r3, #0
   2329c:	bne	232cc <__assert_fail@plt+0x10be0>
   232a0:	ldr	r0, [pc, #140]	; 23334 <__assert_fail@plt+0x10c48>
   232a4:	bl	12398 <gettext@plt>
   232a8:	mov	r2, r0
   232ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   232b0:	mov	r1, #0
   232b4:	mov	r0, #0
   232b8:	bl	122b4 <error@plt>
   232bc:	mov	r3, #0
   232c0:	str	r3, [fp, #-24]	; 0xffffffe8
   232c4:	ldr	r3, [pc, #108]	; 23338 <__assert_fail@plt+0x10c4c>
   232c8:	str	r3, [fp, #-16]
   232cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   232d0:	mov	r1, r3
   232d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   232d8:	bl	1a948 <__assert_fail@plt+0x825c>
   232dc:	str	r0, [fp, #-32]	; 0xffffffe0
   232e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232e4:	ldr	r2, [fp, #-16]
   232e8:	str	r2, [r3, #28]
   232ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   232f4:	str	r2, [r3, #40]	; 0x28
   232f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232fc:	add	r3, r3, #44	; 0x2c
   23300:	sub	r1, fp, #40	; 0x28
   23304:	mov	r2, #8
   23308:	mov	r0, r3
   2330c:	bl	120f8 <memcpy@plt>
   23310:	mov	r3, #1
   23314:	mov	r0, r3
   23318:	sub	sp, fp, #8
   2331c:	pop	{r4, fp, pc}
   23320:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   23324:			; <UNDEFINED> instruction: 0x3e99999a
   23328:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   2332c:	andeq	r7, r6, r4, ror r8
   23330:	andeq	sp, r7, ip, asr #32
   23334:	andeq	r7, r6, r4, lsl #17
   23338:	svccc	0x007fa440
   2333c:	push	{fp, lr}
   23340:	add	fp, sp, #4
   23344:	sub	sp, sp, #24
   23348:	str	r0, [fp, #-16]
   2334c:	str	r1, [fp, #-20]	; 0xffffffec
   23350:	str	r2, [fp, #-24]	; 0xffffffe8
   23354:	ldr	r0, [fp, #-16]
   23358:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   2335c:	str	r0, [fp, #-8]
   23360:	ldr	r3, [fp, #-8]
   23364:	mov	r2, #1
   23368:	strb	r2, [r3, #17]
   2336c:	ldr	r3, [fp, #-8]
   23370:	ldrb	r2, [r3, #17]
   23374:	ldr	r3, [fp, #-8]
   23378:	strb	r2, [r3, #16]
   2337c:	ldr	r3, [fp, #-8]
   23380:	mov	r2, #0
   23384:	strb	r2, [r3, #19]
   23388:	ldr	r3, [fp, #-8]
   2338c:	ldrb	r2, [r3, #19]
   23390:	ldr	r3, [fp, #-8]
   23394:	strb	r2, [r3, #18]
   23398:	ldr	r3, [fp, #-8]
   2339c:	add	r3, r3, #40	; 0x28
   233a0:	mov	r0, r3
   233a4:	bl	2605c <__assert_fail@plt+0x13970>
   233a8:	mov	r3, #1
   233ac:	mov	r0, r3
   233b0:	sub	sp, fp, #4
   233b4:	pop	{fp, pc}
   233b8:	push	{fp, lr}
   233bc:	add	fp, sp, #4
   233c0:	sub	sp, sp, #16
   233c4:	str	r0, [fp, #-8]
   233c8:	str	r1, [fp, #-12]
   233cc:	str	r2, [fp, #-16]
   233d0:	mov	r1, #0
   233d4:	ldr	r0, [fp, #-8]
   233d8:	bl	2149c <__assert_fail@plt+0xedb0>
   233dc:	mov	r3, r0
   233e0:	mov	r0, r3
   233e4:	sub	sp, fp, #4
   233e8:	pop	{fp, pc}
   233ec:	push	{fp, lr}
   233f0:	add	fp, sp, #4
   233f4:	sub	sp, sp, #48	; 0x30
   233f8:	str	r0, [fp, #-40]	; 0xffffffd8
   233fc:	str	r1, [fp, #-44]	; 0xffffffd4
   23400:	str	r2, [fp, #-48]	; 0xffffffd0
   23404:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23408:	ldr	r3, [r3]
   2340c:	str	r3, [fp, #-8]
   23410:	sub	r3, fp, #12
   23414:	mov	r2, r3
   23418:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2341c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23420:	bl	209c8 <__assert_fail@plt+0xe2dc>
   23424:	mov	r3, r0
   23428:	cmp	r3, #0
   2342c:	beq	23478 <__assert_fail@plt+0x10d8c>
   23430:	sub	r3, fp, #32
   23434:	mov	r0, r3
   23438:	bl	2605c <__assert_fail@plt+0x13970>
   2343c:	ldr	r2, [fp, #-12]
   23440:	sub	r3, fp, #32
   23444:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23448:	mov	r0, r3
   2344c:	bl	1d748 <__assert_fail@plt+0xb05c>
   23450:	mov	r3, r0
   23454:	cmp	r3, #0
   23458:	beq	23464 <__assert_fail@plt+0x10d78>
   2345c:	mov	r3, #1
   23460:	b	2347c <__assert_fail@plt+0x10d90>
   23464:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23468:	ldr	r2, [fp, #-8]
   2346c:	str	r2, [r3]
   23470:	mov	r3, #0
   23474:	b	2347c <__assert_fail@plt+0x10d90>
   23478:	mov	r3, #0
   2347c:	mov	r0, r3
   23480:	sub	sp, fp, #4
   23484:	pop	{fp, pc}
   23488:	push	{fp, lr}
   2348c:	add	fp, sp, #4
   23490:	sub	sp, sp, #48	; 0x30
   23494:	str	r0, [fp, #-40]	; 0xffffffd8
   23498:	str	r1, [fp, #-44]	; 0xffffffd4
   2349c:	str	r2, [fp, #-48]	; 0xffffffd0
   234a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   234a4:	ldr	r3, [r3]
   234a8:	str	r3, [fp, #-8]
   234ac:	sub	r3, fp, #12
   234b0:	mov	r2, r3
   234b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   234b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   234bc:	bl	20a68 <__assert_fail@plt+0xe37c>
   234c0:	mov	r3, r0
   234c4:	cmp	r3, #0
   234c8:	beq	23534 <__assert_fail@plt+0x10e48>
   234cc:	sub	r3, fp, #16
   234d0:	mov	r2, r3
   234d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   234d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   234dc:	bl	209c8 <__assert_fail@plt+0xe2dc>
   234e0:	mov	r3, r0
   234e4:	cmp	r3, #0
   234e8:	beq	23534 <__assert_fail@plt+0x10e48>
   234ec:	ldr	r3, [fp, #-12]
   234f0:	sub	r2, fp, #36	; 0x24
   234f4:	mov	r1, r2
   234f8:	mov	r0, r3
   234fc:	bl	25f08 <__assert_fail@plt+0x1381c>
   23500:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23504:	ldr	r3, [r3]
   23508:	str	r3, [fp, #-8]
   2350c:	ldr	r2, [fp, #-16]
   23510:	sub	r3, fp, #36	; 0x24
   23514:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23518:	mov	r0, r3
   2351c:	bl	1d748 <__assert_fail@plt+0xb05c>
   23520:	mov	r3, r0
   23524:	cmp	r3, #0
   23528:	beq	23534 <__assert_fail@plt+0x10e48>
   2352c:	mov	r3, #1
   23530:	b	23544 <__assert_fail@plt+0x10e58>
   23534:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23538:	ldr	r2, [fp, #-8]
   2353c:	str	r2, [r3]
   23540:	mov	r3, #0
   23544:	mov	r0, r3
   23548:	sub	sp, fp, #4
   2354c:	pop	{fp, pc}
   23550:	push	{fp, lr}
   23554:	add	fp, sp, #4
   23558:	sub	sp, sp, #24
   2355c:	str	r0, [fp, #-16]
   23560:	str	r1, [fp, #-20]	; 0xffffffec
   23564:	str	r2, [fp, #-24]	; 0xffffffe8
   23568:	ldr	r0, [fp, #-16]
   2356c:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   23570:	str	r0, [fp, #-8]
   23574:	ldr	r3, [pc, #84]	; 235d0 <__assert_fail@plt+0x10ee4>
   23578:	ldrb	r3, [r3]
   2357c:	eor	r3, r3, #1
   23580:	uxtb	r3, r3
   23584:	cmp	r3, #0
   23588:	beq	235a8 <__assert_fail@plt+0x10ebc>
   2358c:	ldr	r3, [fp, #-8]
   23590:	mov	r2, #0
   23594:	strb	r2, [r3, #19]
   23598:	ldr	r3, [fp, #-8]
   2359c:	ldrb	r2, [r3, #19]
   235a0:	ldr	r3, [fp, #-8]
   235a4:	strb	r2, [r3, #18]
   235a8:	ldr	r3, [fp, #-8]
   235ac:	mov	r2, #1
   235b0:	strb	r2, [r3, #16]
   235b4:	ldr	r3, [fp, #-8]
   235b8:	mov	r2, #0
   235bc:	strb	r2, [r3, #17]
   235c0:	mov	r3, #1
   235c4:	mov	r0, r3
   235c8:	sub	sp, fp, #4
   235cc:	pop	{fp, pc}
   235d0:	andeq	sp, r7, ip, asr #32
   235d4:	push	{fp, lr}
   235d8:	add	fp, sp, #4
   235dc:	sub	sp, sp, #24
   235e0:	str	r0, [fp, #-16]
   235e4:	str	r1, [fp, #-20]	; 0xffffffec
   235e8:	str	r2, [fp, #-24]	; 0xffffffe8
   235ec:	ldr	r0, [fp, #-16]
   235f0:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   235f4:	str	r0, [fp, #-8]
   235f8:	ldr	r3, [fp, #-8]
   235fc:	mov	r2, #0
   23600:	strb	r2, [r3, #19]
   23604:	ldr	r3, [fp, #-8]
   23608:	ldrb	r2, [r3, #19]
   2360c:	ldr	r3, [fp, #-8]
   23610:	strb	r2, [r3, #18]
   23614:	ldr	r3, [fp, #-8]
   23618:	mov	r2, #1
   2361c:	strb	r2, [r3, #16]
   23620:	ldr	r3, [fp, #-8]
   23624:	mov	r2, #0
   23628:	strb	r2, [r3, #17]
   2362c:	ldr	r3, [fp, #-8]
   23630:	mov	r2, #1065353216	; 0x3f800000
   23634:	str	r2, [r3, #28]
   23638:	mov	r3, #1
   2363c:	mov	r0, r3
   23640:	sub	sp, fp, #4
   23644:	pop	{fp, pc}
   23648:	push	{fp, lr}
   2364c:	add	fp, sp, #4
   23650:	sub	sp, sp, #24
   23654:	str	r0, [fp, #-16]
   23658:	str	r1, [fp, #-20]	; 0xffffffec
   2365c:	str	r2, [fp, #-24]	; 0xffffffe8
   23660:	sub	r3, fp, #8
   23664:	mov	r2, r3
   23668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2366c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23670:	bl	20a68 <__assert_fail@plt+0xe37c>
   23674:	mov	r3, r0
   23678:	cmp	r3, #0
   2367c:	beq	236b0 <__assert_fail@plt+0x10fc4>
   23680:	ldr	r3, [fp, #-8]
   23684:	mov	r0, r3
   23688:	bl	292ec <__assert_fail@plt+0x16c00>
   2368c:	mov	r2, r0
   23690:	ldr	r3, [pc, #40]	; 236c0 <__assert_fail@plt+0x10fd4>
   23694:	str	r2, [r3, #60]	; 0x3c
   23698:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2369c:	ldr	r1, [fp, #-20]	; 0xffffffec
   236a0:	ldr	r0, [fp, #-16]
   236a4:	bl	24064 <__assert_fail@plt+0x11978>
   236a8:	mov	r3, r0
   236ac:	b	236b4 <__assert_fail@plt+0x10fc8>
   236b0:	mov	r3, #0
   236b4:	mov	r0, r3
   236b8:	sub	sp, fp, #4
   236bc:	pop	{fp, pc}
   236c0:	andeq	sp, r7, ip, asr #32
   236c4:	push	{fp, lr}
   236c8:	add	fp, sp, #4
   236cc:	sub	sp, sp, #16
   236d0:	str	r0, [fp, #-8]
   236d4:	str	r1, [fp, #-12]
   236d8:	str	r2, [fp, #-16]
   236dc:	ldr	r3, [pc, #32]	; 23704 <__assert_fail@plt+0x11018>
   236e0:	ldr	r3, [r3, #60]	; 0x3c
   236e4:	ldr	r2, [fp, #-8]
   236e8:	ldr	r1, [fp, #-16]
   236ec:	ldr	r0, [fp, #-12]
   236f0:	bl	23708 <__assert_fail@plt+0x1101c>
   236f4:	mov	r3, r0
   236f8:	mov	r0, r3
   236fc:	sub	sp, fp, #4
   23700:	pop	{fp, pc}
   23704:	andeq	sp, r7, ip, asr #32
   23708:	push	{r4, fp, lr}
   2370c:	add	fp, sp, #8
   23710:	sub	sp, sp, #44	; 0x2c
   23714:	str	r0, [fp, #-32]	; 0xffffffe0
   23718:	str	r1, [fp, #-36]	; 0xffffffdc
   2371c:	str	r2, [fp, #-40]	; 0xffffffd8
   23720:	str	r3, [fp, #-44]	; 0xffffffd4
   23724:	sub	r3, fp, #28
   23728:	mov	r2, r3
   2372c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23734:	bl	20a68 <__assert_fail@plt+0xe37c>
   23738:	mov	r3, r0
   2373c:	cmp	r3, #0
   23740:	beq	23874 <__assert_fail@plt+0x11188>
   23744:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23748:	mov	r2, r3
   2374c:	ldr	r1, [pc, #304]	; 23884 <__assert_fail@plt+0x11198>
   23750:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23754:	bl	1a8d0 <__assert_fail@plt+0x81e4>
   23758:	str	r0, [fp, #-16]
   2375c:	ldr	r3, [fp, #-16]
   23760:	mov	r2, #0
   23764:	strb	r2, [r3, #19]
   23768:	ldr	r3, [fp, #-16]
   2376c:	ldrb	r2, [r3, #19]
   23770:	ldr	r3, [fp, #-16]
   23774:	strb	r2, [r3, #18]
   23778:	mov	r0, #32
   2377c:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   23780:	mov	r3, r0
   23784:	str	r3, [fp, #-20]	; 0xffffffec
   23788:	ldr	r3, [fp, #-16]
   2378c:	ldr	r2, [fp, #-20]	; 0xffffffec
   23790:	str	r2, [r3, #40]	; 0x28
   23794:	ldr	r3, [fp, #-20]	; 0xffffffec
   23798:	mov	r2, #100	; 0x64
   2379c:	str	r2, [r3, #4]
   237a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   237a4:	ldr	r3, [r3, #4]
   237a8:	mov	r0, r3
   237ac:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   237b0:	mov	r3, r0
   237b4:	mov	r2, r3
   237b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   237bc:	str	r2, [r3]
   237c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   237c4:	mov	r2, #0
   237c8:	str	r2, [r3, #16]
   237cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   237d0:	mov	r0, r3
   237d4:	bl	49424 <__assert_fail@plt+0x36d38>
   237d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   237dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   237e0:	str	r2, [r3, #12]
   237e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   237e8:	mov	r2, #0
   237ec:	str	r2, [r3, #20]
   237f0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   237f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   237f8:	mov	r0, r3
   237fc:	bl	123bc <strlen@plt>
   23800:	mov	r3, r0
   23804:	ldr	r2, [fp, #-20]	; 0xffffffec
   23808:	mov	r1, r3
   2380c:	mov	r0, r4
   23810:	bl	49358 <__assert_fail@plt+0x36c6c>
   23814:	str	r0, [fp, #-24]	; 0xffffffe8
   23818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2381c:	cmp	r3, #0
   23820:	beq	23850 <__assert_fail@plt+0x11164>
   23824:	ldr	r0, [pc, #92]	; 23888 <__assert_fail@plt+0x1119c>
   23828:	bl	12398 <gettext@plt>
   2382c:	mov	r1, r0
   23830:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23838:	str	r3, [sp]
   2383c:	mov	r3, r2
   23840:	mov	r2, r1
   23844:	mov	r1, #0
   23848:	mov	r0, #1
   2384c:	bl	122b4 <error@plt>
   23850:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23854:	mov	r1, #1
   23858:	mov	r0, r3
   2385c:	bl	21a18 <__assert_fail@plt+0xf32c>
   23860:	vmov.f32	s15, s0
   23864:	ldr	r3, [fp, #-16]
   23868:	vstr	s15, [r3, #28]
   2386c:	mov	r3, #1
   23870:	b	23878 <__assert_fail@plt+0x1118c>
   23874:	mov	r3, #0
   23878:	mov	r0, r3
   2387c:	sub	sp, fp, #8
   23880:	pop	{r4, fp, pc}
   23884:			; <UNDEFINED> instruction: 0x00015ab8
   23888:	andeq	r7, r6, r8, ror #18
   2388c:	push	{fp, lr}
   23890:	add	fp, sp, #4
   23894:	sub	sp, sp, #64	; 0x40
   23898:	str	r0, [fp, #-48]	; 0xffffffd0
   2389c:	str	r1, [fp, #-52]	; 0xffffffcc
   238a0:	str	r2, [fp, #-56]	; 0xffffffc8
   238a4:	mov	r3, #512	; 0x200
   238a8:	str	r3, [fp, #-12]
   238ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   238b0:	cmp	r3, #0
   238b4:	beq	238d8 <__assert_fail@plt+0x111ec>
   238b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   238bc:	ldr	r3, [r3]
   238c0:	lsl	r3, r3, #2
   238c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   238c8:	add	r3, r2, r3
   238cc:	ldr	r3, [r3]
   238d0:	cmp	r3, #0
   238d4:	bne	238e0 <__assert_fail@plt+0x111f4>
   238d8:	mov	r3, #0
   238dc:	b	23d24 <__assert_fail@plt+0x11638>
   238e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   238e4:	ldr	r3, [r3]
   238e8:	lsl	r3, r3, #2
   238ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   238f0:	add	r3, r2, r3
   238f4:	ldr	r3, [r3]
   238f8:	str	r3, [fp, #-16]
   238fc:	ldr	r0, [fp, #-16]
   23900:	bl	123bc <strlen@plt>
   23904:	mov	r3, r0
   23908:	str	r3, [fp, #-20]	; 0xffffffec
   2390c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23910:	cmp	r3, #0
   23914:	bne	23934 <__assert_fail@plt+0x11248>
   23918:	ldr	r0, [pc, #1040]	; 23d30 <__assert_fail@plt+0x11644>
   2391c:	bl	12398 <gettext@plt>
   23920:	mov	r3, r0
   23924:	mov	r2, r3
   23928:	mov	r1, #0
   2392c:	mov	r0, #1
   23930:	bl	122b4 <error@plt>
   23934:	ldr	r3, [fp, #-20]	; 0xffffffec
   23938:	sub	r3, r3, #1
   2393c:	ldr	r2, [fp, #-16]
   23940:	add	r3, r2, r3
   23944:	ldrb	r3, [r3]
   23948:	strb	r3, [fp, #-5]
   2394c:	ldrb	r3, [fp, #-5]
   23950:	sub	r3, r3, #48	; 0x30
   23954:	cmp	r3, #71	; 0x47
   23958:	ldrls	pc, [pc, r3, lsl #2]
   2395c:	b	23b64 <__assert_fail@plt+0x11478>
   23960:	andeq	r3, r2, r8, asr fp
   23964:	andeq	r3, r2, r8, asr fp
   23968:	andeq	r3, r2, r8, asr fp
   2396c:	andeq	r3, r2, r8, asr fp
   23970:	andeq	r3, r2, r8, asr fp
   23974:	andeq	r3, r2, r8, asr fp
   23978:	andeq	r3, r2, r8, asr fp
   2397c:	andeq	r3, r2, r8, asr fp
   23980:	andeq	r3, r2, r8, asr fp
   23984:	andeq	r3, r2, r8, asr fp
   23988:	andeq	r3, r2, r4, ror #22
   2398c:	andeq	r3, r2, r4, ror #22
   23990:	andeq	r3, r2, r4, ror #22
   23994:	andeq	r3, r2, r4, ror #22
   23998:	andeq	r3, r2, r4, ror #22
   2399c:	andeq	r3, r2, r4, ror #22
   239a0:	andeq	r3, r2, r4, ror #22
   239a4:	andeq	r3, r2, r4, ror #22
   239a8:	andeq	r3, r2, r4, ror #22
   239ac:	andeq	r3, r2, r4, ror #22
   239b0:	andeq	r3, r2, r4, ror #22
   239b4:	andeq	r3, r2, r4, ror #22
   239b8:	andeq	r3, r2, r4, ror #22
   239bc:	andeq	r3, r2, r0, lsl fp
   239c0:	andeq	r3, r2, r4, ror #22
   239c4:	andeq	r3, r2, r4, ror #22
   239c8:	andeq	r3, r2, r4, ror #22
   239cc:	andeq	r3, r2, r4, ror #22
   239d0:	andeq	r3, r2, r4, ror #22
   239d4:	andeq	r3, r2, ip, ror #21
   239d8:	andeq	r3, r2, r4, ror #22
   239dc:	andeq	r3, r2, r4, ror #22
   239e0:	andeq	r3, r2, r4, ror #22
   239e4:	andeq	r3, r2, r4, ror #22
   239e8:	andeq	r3, r2, r4, ror #22
   239ec:	andeq	r3, r2, r4, ror #22
   239f0:	andeq	r3, r2, r4, ror #22
   239f4:	andeq	r3, r2, r4, ror #22
   239f8:	andeq	r3, r2, r4, ror #22
   239fc:	andeq	r3, r2, r4, ror #22
   23a00:	andeq	r3, r2, r4, ror #22
   23a04:	andeq	r3, r2, r4, ror #22
   23a08:	andeq	r3, r2, r4, ror #22
   23a0c:	andeq	r3, r2, r4, ror #22
   23a10:	andeq	r3, r2, r4, ror #22
   23a14:	andeq	r3, r2, r4, ror #22
   23a18:	andeq	r3, r2, r4, ror #22
   23a1c:	andeq	r3, r2, r4, ror #22
   23a20:	andeq	r3, r2, r4, ror #22
   23a24:	andeq	r3, r2, r4, ror #22
   23a28:	andeq	r3, r2, r0, lsl #21
   23a2c:	andeq	r3, r2, r4, lsr #21
   23a30:	andeq	r3, r2, r4, ror #22
   23a34:	andeq	r3, r2, r4, ror #22
   23a38:	andeq	r3, r2, r4, ror #22
   23a3c:	andeq	r3, r2, r4, ror #22
   23a40:	andeq	r3, r2, r4, ror #22
   23a44:	andeq	r3, r2, r4, ror #22
   23a48:	andeq	r3, r2, r4, ror #22
   23a4c:	andeq	r3, r2, r8, asr #21
   23a50:	andeq	r3, r2, r4, ror #22
   23a54:	andeq	r3, r2, r4, ror #22
   23a58:	andeq	r3, r2, r4, ror #22
   23a5c:	andeq	r3, r2, r4, ror #22
   23a60:	andeq	r3, r2, r4, ror #22
   23a64:	andeq	r3, r2, r4, ror #22
   23a68:	andeq	r3, r2, r4, ror #22
   23a6c:	andeq	r3, r2, r4, ror #22
   23a70:	andeq	r3, r2, r4, ror #22
   23a74:	andeq	r3, r2, r4, ror #22
   23a78:	andeq	r3, r2, r4, ror #22
   23a7c:	andeq	r3, r2, r4, lsr fp
   23a80:	mov	r3, #512	; 0x200
   23a84:	str	r3, [fp, #-12]
   23a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   23a8c:	sub	r3, r3, #1
   23a90:	ldr	r2, [fp, #-16]
   23a94:	add	r3, r2, r3
   23a98:	mov	r2, #0
   23a9c:	strb	r2, [r3]
   23aa0:	b	23ba8 <__assert_fail@plt+0x114bc>
   23aa4:	mov	r3, #1
   23aa8:	str	r3, [fp, #-12]
   23aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ab0:	sub	r3, r3, #1
   23ab4:	ldr	r2, [fp, #-16]
   23ab8:	add	r3, r2, r3
   23abc:	mov	r2, #0
   23ac0:	strb	r2, [r3]
   23ac4:	b	23ba8 <__assert_fail@plt+0x114bc>
   23ac8:	mov	r3, #1024	; 0x400
   23acc:	str	r3, [fp, #-12]
   23ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ad4:	sub	r3, r3, #1
   23ad8:	ldr	r2, [fp, #-16]
   23adc:	add	r3, r2, r3
   23ae0:	mov	r2, #0
   23ae4:	strb	r2, [r3]
   23ae8:	b	23ba8 <__assert_fail@plt+0x114bc>
   23aec:	mov	r3, #1048576	; 0x100000
   23af0:	str	r3, [fp, #-12]
   23af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23af8:	sub	r3, r3, #1
   23afc:	ldr	r2, [fp, #-16]
   23b00:	add	r3, r2, r3
   23b04:	mov	r2, #0
   23b08:	strb	r2, [r3]
   23b0c:	b	23ba8 <__assert_fail@plt+0x114bc>
   23b10:	mov	r3, #1073741824	; 0x40000000
   23b14:	str	r3, [fp, #-12]
   23b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b1c:	sub	r3, r3, #1
   23b20:	ldr	r2, [fp, #-16]
   23b24:	add	r3, r2, r3
   23b28:	mov	r2, #0
   23b2c:	strb	r2, [r3]
   23b30:	b	23ba8 <__assert_fail@plt+0x114bc>
   23b34:	mov	r3, #2
   23b38:	str	r3, [fp, #-12]
   23b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b40:	sub	r3, r3, #1
   23b44:	ldr	r2, [fp, #-16]
   23b48:	add	r3, r2, r3
   23b4c:	mov	r2, #0
   23b50:	strb	r2, [r3]
   23b54:	b	23ba8 <__assert_fail@plt+0x114bc>
   23b58:	mov	r3, #0
   23b5c:	strb	r3, [fp, #-5]
   23b60:	b	23ba8 <__assert_fail@plt+0x114bc>
   23b64:	ldr	r0, [pc, #456]	; 23d34 <__assert_fail@plt+0x11648>
   23b68:	bl	12398 <gettext@plt>
   23b6c:	mov	r1, r0
   23b70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23b74:	ldr	r3, [r3]
   23b78:	lsl	r3, r3, #2
   23b7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   23b80:	add	r3, r2, r3
   23b84:	ldr	r2, [r3]
   23b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b8c:	sub	r3, r3, #1
   23b90:	add	r3, r2, r3
   23b94:	ldrb	r3, [r3]
   23b98:	mov	r2, r1
   23b9c:	mov	r1, #0
   23ba0:	mov	r0, #1
   23ba4:	bl	122b4 <error@plt>
   23ba8:	sub	r2, fp, #40	; 0x28
   23bac:	sub	r3, fp, #36	; 0x24
   23bb0:	mov	r1, r3
   23bb4:	ldr	r0, [fp, #-16]
   23bb8:	bl	25cbc <__assert_fail@plt+0x135d0>
   23bbc:	mov	r3, r0
   23bc0:	eor	r3, r3, #1
   23bc4:	uxtb	r3, r3
   23bc8:	cmp	r3, #0
   23bcc:	beq	23c04 <__assert_fail@plt+0x11518>
   23bd0:	ldrb	r3, [fp, #-5]
   23bd4:	strb	r3, [fp, #-44]	; 0xffffffd4
   23bd8:	mov	r3, #0
   23bdc:	strb	r3, [fp, #-43]	; 0xffffffd5
   23be0:	ldr	r0, [pc, #336]	; 23d38 <__assert_fail@plt+0x1164c>
   23be4:	bl	12398 <gettext@plt>
   23be8:	mov	r2, r0
   23bec:	sub	r3, fp, #44	; 0x2c
   23bf0:	str	r3, [sp]
   23bf4:	ldr	r3, [fp, #-16]
   23bf8:	mov	r1, #0
   23bfc:	mov	r0, #1
   23c00:	bl	122b4 <error@plt>
   23c04:	ldr	r1, [fp, #-16]
   23c08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23c0c:	bl	1a948 <__assert_fail@plt+0x825c>
   23c10:	str	r0, [fp, #-24]	; 0xffffffe8
   23c14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23c1c:	str	r2, [r3, #40]	; 0x28
   23c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23c24:	ldr	r2, [fp, #-12]
   23c28:	str	r2, [r3, #44]	; 0x2c
   23c2c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   23c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23c34:	strd	r2, [r1, #48]	; 0x30
   23c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23c3c:	mov	r2, #1
   23c40:	strb	r2, [r3, #18]
   23c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23c48:	mov	r2, #0
   23c4c:	strb	r2, [r3, #19]
   23c50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23c54:	cmp	r3, #0
   23c58:	bne	23ca8 <__assert_fail@plt+0x115bc>
   23c5c:	ldr	r3, [fp, #-12]
   23c60:	mov	r0, r3
   23c64:	asr	r1, r0, #31
   23c68:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   23c6c:	mul	lr, r2, r1
   23c70:	mul	ip, r0, r3
   23c74:	add	ip, lr, ip
   23c78:	umull	r2, r3, r0, r2
   23c7c:	add	r1, ip, r3
   23c80:	mov	r3, r1
   23c84:	cmp	r3, #0
   23c88:	cmpeq	r2, #20480	; 0x5000
   23c8c:	bls	23c98 <__assert_fail@plt+0x115ac>
   23c90:	ldr	r2, [pc, #164]	; 23d3c <__assert_fail@plt+0x11650>
   23c94:	b	23c9c <__assert_fail@plt+0x115b0>
   23c98:	ldr	r2, [pc, #160]	; 23d40 <__assert_fail@plt+0x11654>
   23c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23ca0:	str	r2, [r3, #28]
   23ca4:	b	23d0c <__assert_fail@plt+0x11620>
   23ca8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23cac:	cmp	r3, #1
   23cb0:	bne	23d00 <__assert_fail@plt+0x11614>
   23cb4:	ldr	r3, [fp, #-12]
   23cb8:	mov	r0, r3
   23cbc:	asr	r1, r0, #31
   23cc0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   23cc4:	mul	lr, r2, r1
   23cc8:	mul	ip, r0, r3
   23ccc:	add	ip, lr, ip
   23cd0:	umull	r2, r3, r0, r2
   23cd4:	add	r1, ip, r3
   23cd8:	mov	r3, r1
   23cdc:	cmp	r3, #0
   23ce0:	cmpeq	r2, #20480	; 0x5000
   23ce4:	bls	23cf0 <__assert_fail@plt+0x11604>
   23ce8:	ldr	r2, [pc, #80]	; 23d40 <__assert_fail@plt+0x11654>
   23cec:	b	23cf4 <__assert_fail@plt+0x11608>
   23cf0:	ldr	r2, [pc, #68]	; 23d3c <__assert_fail@plt+0x11650>
   23cf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23cf8:	str	r2, [r3, #28]
   23cfc:	b	23d0c <__assert_fail@plt+0x11620>
   23d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23d04:	ldr	r2, [pc, #56]	; 23d44 <__assert_fail@plt+0x11658>
   23d08:	str	r2, [r3, #28]
   23d0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23d10:	ldr	r3, [r3]
   23d14:	add	r2, r3, #1
   23d18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23d1c:	str	r2, [r3]
   23d20:	mov	r3, #1
   23d24:	mov	r0, r3
   23d28:	sub	sp, fp, #4
   23d2c:	pop	{fp, pc}
   23d30:	muleq	r6, r8, r9
   23d34:			; <UNDEFINED> instruction: 0x000679b8
   23d38:	ldrdeq	r7, [r6], -r0
   23d3c:	stclcc	12, cr12, [ip, #820]	; 0x334
   23d40:	svccc	0x00666666
   23d44:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   23d48:	push	{fp, lr}
   23d4c:	add	fp, sp, #4
   23d50:	sub	sp, sp, #248	; 0xf8
   23d54:	str	r0, [fp, #-240]	; 0xffffff10
   23d58:	str	r1, [fp, #-244]	; 0xffffff0c
   23d5c:	str	r2, [fp, #-248]	; 0xffffff08
   23d60:	sub	r3, fp, #124	; 0x7c
   23d64:	mov	r0, r3
   23d68:	bl	1ad50 <__assert_fail@plt+0x8664>
   23d6c:	sub	r3, fp, #232	; 0xe8
   23d70:	sub	r2, fp, #124	; 0x7c
   23d74:	ldr	r1, [fp, #-248]	; 0xffffff08
   23d78:	ldr	r0, [fp, #-244]	; 0xffffff0c
   23d7c:	bl	20ab8 <__assert_fail@plt+0xe3cc>
   23d80:	mov	r3, r0
   23d84:	eor	r3, r3, #1
   23d88:	uxtb	r3, r3
   23d8c:	cmp	r3, #0
   23d90:	beq	23d9c <__assert_fail@plt+0x116b0>
   23d94:	mov	r3, #0
   23d98:	b	23fe4 <__assert_fail@plt+0x118f8>
   23d9c:	sub	r3, fp, #228	; 0xe4
   23da0:	mov	r0, r3
   23da4:	bl	1ad50 <__assert_fail@plt+0x8664>
   23da8:	mvn	r3, #2
   23dac:	str	r3, [fp, #-8]
   23db0:	mov	r3, #0
   23db4:	str	r3, [fp, #-12]
   23db8:	ldr	r3, [pc, #560]	; 23ff0 <__assert_fail@plt+0x11904>
   23dbc:	ldr	r3, [r3, #48]	; 0x30
   23dc0:	cmp	r3, #0
   23dc4:	bne	23e18 <__assert_fail@plt+0x1172c>
   23dc8:	ldr	r3, [pc, #544]	; 23ff0 <__assert_fail@plt+0x11904>
   23dcc:	ldrb	r3, [r3, #56]	; 0x38
   23dd0:	cmp	r3, #0
   23dd4:	beq	23df0 <__assert_fail@plt+0x11704>
   23dd8:	ldr	r3, [fp, #-12]
   23ddc:	orr	r3, r3, #32768	; 0x8000
   23de0:	str	r3, [fp, #-12]
   23de4:	mvn	r3, #0
   23de8:	str	r3, [fp, #-8]
   23dec:	b	23e20 <__assert_fail@plt+0x11734>
   23df0:	ldr	r3, [fp, #-108]	; 0xffffff94
   23df4:	and	r3, r3, #61440	; 0xf000
   23df8:	cmp	r3, #40960	; 0xa000
   23dfc:	bne	23e0c <__assert_fail@plt+0x11720>
   23e00:	mvn	r3, #1
   23e04:	str	r3, [fp, #-8]
   23e08:	b	23e20 <__assert_fail@plt+0x11734>
   23e0c:	mvn	r3, #0
   23e10:	str	r3, [fp, #-8]
   23e14:	b	23e20 <__assert_fail@plt+0x11734>
   23e18:	mvn	r3, #0
   23e1c:	str	r3, [fp, #-8]
   23e20:	ldr	r3, [fp, #-8]
   23e24:	cmn	r3, #3
   23e28:	bne	23e40 <__assert_fail@plt+0x11754>
   23e2c:	ldr	r3, [pc, #448]	; 23ff4 <__assert_fail@plt+0x11908>
   23e30:	ldr	r2, [pc, #448]	; 23ff8 <__assert_fail@plt+0x1190c>
   23e34:	ldr	r1, [pc, #448]	; 23ffc <__assert_fail@plt+0x11910>
   23e38:	ldr	r0, [pc, #448]	; 24000 <__assert_fail@plt+0x11914>
   23e3c:	bl	126ec <__assert_fail@plt>
   23e40:	ldr	r3, [fp, #-8]
   23e44:	cmn	r3, #1
   23e48:	bne	23f84 <__assert_fail@plt+0x11898>
   23e4c:	ldr	r3, [fp, #-232]	; 0xffffff18
   23e50:	ldr	r1, [fp, #-12]
   23e54:	mov	r0, r3
   23e58:	bl	27d70 <__assert_fail@plt+0x15684>
   23e5c:	str	r0, [fp, #-8]
   23e60:	ldr	r3, [fp, #-8]
   23e64:	cmp	r3, #0
   23e68:	blt	23f84 <__assert_fail@plt+0x11898>
   23e6c:	sub	r3, fp, #228	; 0xe4
   23e70:	mov	r1, r3
   23e74:	ldr	r0, [fp, #-8]
   23e78:	bl	64094 <__assert_fail@plt+0x519a8>
   23e7c:	mov	r3, r0
   23e80:	cmp	r3, #0
   23e84:	beq	23ea4 <__assert_fail@plt+0x117b8>
   23e88:	bl	12404 <__errno_location@plt>
   23e8c:	mov	r3, r0
   23e90:	ldr	r3, [r3]
   23e94:	ldr	r2, [fp, #-232]	; 0xffffff18
   23e98:	mov	r1, r2
   23e9c:	mov	r0, r3
   23ea0:	bl	1c914 <__assert_fail@plt+0xa228>
   23ea4:	ldr	r3, [pc, #324]	; 23ff0 <__assert_fail@plt+0x11904>
   23ea8:	ldr	r3, [r3, #52]	; 0x34
   23eac:	ldr	r2, [fp, #-232]	; 0xffffff18
   23eb0:	sub	r1, fp, #124	; 0x7c
   23eb4:	mov	r0, r2
   23eb8:	blx	r3
   23ebc:	mov	r3, r0
   23ec0:	cmp	r3, #0
   23ec4:	beq	23ee4 <__assert_fail@plt+0x117f8>
   23ec8:	bl	12404 <__errno_location@plt>
   23ecc:	mov	r3, r0
   23ed0:	ldr	r3, [r3]
   23ed4:	ldr	r2, [fp, #-232]	; 0xffffff18
   23ed8:	mov	r1, r2
   23edc:	mov	r0, r3
   23ee0:	bl	1c914 <__assert_fail@plt+0xa228>
   23ee4:	ldr	r3, [pc, #260]	; 23ff0 <__assert_fail@plt+0x11904>
   23ee8:	ldr	r3, [r3, #48]	; 0x30
   23eec:	cmp	r3, #0
   23ef0:	bne	23f70 <__assert_fail@plt+0x11884>
   23ef4:	ldr	r3, [pc, #244]	; 23ff0 <__assert_fail@plt+0x11904>
   23ef8:	ldrb	r3, [r3, #56]	; 0x38
   23efc:	eor	r3, r3, #1
   23f00:	uxtb	r3, r3
   23f04:	cmp	r3, #0
   23f08:	beq	23f70 <__assert_fail@plt+0x11884>
   23f0c:	ldr	r3, [fp, #-108]	; 0xffffff94
   23f10:	and	r3, r3, #61440	; 0xf000
   23f14:	cmp	r3, #40960	; 0xa000
   23f18:	bne	23f30 <__assert_fail@plt+0x11844>
   23f1c:	ldr	r0, [fp, #-8]
   23f20:	bl	126a4 <close@plt>
   23f24:	mvn	r3, #0
   23f28:	str	r3, [fp, #-8]
   23f2c:	b	23f84 <__assert_fail@plt+0x11898>
   23f30:	ldrd	r0, [fp, #-124]	; 0xffffff84
   23f34:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   23f38:	cmp	r1, r3
   23f3c:	cmpeq	r0, r2
   23f40:	bne	23f58 <__assert_fail@plt+0x1186c>
   23f44:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   23f48:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   23f4c:	cmp	r1, r3
   23f50:	cmpeq	r0, r2
   23f54:	beq	23f6c <__assert_fail@plt+0x11880>
   23f58:	ldr	r0, [fp, #-8]
   23f5c:	bl	126a4 <close@plt>
   23f60:	mvn	r3, #0
   23f64:	str	r3, [fp, #-8]
   23f68:	b	23f84 <__assert_fail@plt+0x11898>
   23f6c:	b	23f84 <__assert_fail@plt+0x11898>
   23f70:	sub	r3, fp, #124	; 0x7c
   23f74:	sub	r1, fp, #228	; 0xe4
   23f78:	mov	r2, #104	; 0x68
   23f7c:	mov	r0, r3
   23f80:	bl	120f8 <memcpy@plt>
   23f84:	ldr	r3, [fp, #-232]	; 0xffffff18
   23f88:	mov	r1, r3
   23f8c:	ldr	r0, [fp, #-240]	; 0xffffff10
   23f90:	bl	1a948 <__assert_fail@plt+0x825c>
   23f94:	str	r0, [fp, #-16]
   23f98:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   23f9c:	ldr	r1, [fp, #-16]
   23fa0:	strd	r2, [r1, #40]	; 0x28
   23fa4:	ldrd	r2, [fp, #-124]	; 0xffffff84
   23fa8:	ldr	r1, [fp, #-16]
   23fac:	strd	r2, [r1, #48]	; 0x30
   23fb0:	ldr	r3, [fp, #-16]
   23fb4:	ldr	r2, [fp, #-8]
   23fb8:	str	r2, [r3, #56]	; 0x38
   23fbc:	ldr	r3, [fp, #-16]
   23fc0:	mov	r2, #0
   23fc4:	strb	r2, [r3, #19]
   23fc8:	ldr	r3, [fp, #-16]
   23fcc:	mov	r2, #1
   23fd0:	strb	r2, [r3, #18]
   23fd4:	ldr	r3, [fp, #-16]
   23fd8:	ldr	r2, [pc, #36]	; 24004 <__assert_fail@plt+0x11918>
   23fdc:	str	r2, [r3, #28]
   23fe0:	mov	r3, #1
   23fe4:	mov	r0, r3
   23fe8:	sub	sp, fp, #4
   23fec:	pop	{fp, pc}
   23ff0:	andeq	sp, r7, ip, asr #32
   23ff4:	andeq	r8, r6, r8, asr r1
   23ff8:			; <UNDEFINED> instruction: 0x000008bf
   23ffc:	andeq	r7, r6, ip, asr r2
   24000:	strdeq	r7, [r6], -r4
   24004:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24008:	push	{fp, lr}
   2400c:	add	fp, sp, #4
   24010:	sub	sp, sp, #24
   24014:	str	r0, [fp, #-16]
   24018:	str	r1, [fp, #-20]	; 0xffffffec
   2401c:	str	r2, [fp, #-24]	; 0xffffffe8
   24020:	ldr	r0, [fp, #-16]
   24024:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   24028:	str	r0, [fp, #-8]
   2402c:	ldr	r3, [fp, #-8]
   24030:	mov	r2, #0
   24034:	strb	r2, [r3, #19]
   24038:	ldr	r3, [fp, #-8]
   2403c:	ldrb	r2, [r3, #19]
   24040:	ldr	r3, [fp, #-8]
   24044:	strb	r2, [r3, #18]
   24048:	ldr	r3, [fp, #-8]
   2404c:	mov	r2, #1065353216	; 0x3f800000
   24050:	str	r2, [r3, #28]
   24054:	mov	r3, #1
   24058:	mov	r0, r3
   2405c:	sub	sp, fp, #4
   24060:	pop	{fp, pc}
   24064:	push	{fp, lr}
   24068:	add	fp, sp, #4
   2406c:	sub	sp, sp, #16
   24070:	str	r0, [fp, #-8]
   24074:	str	r1, [fp, #-12]
   24078:	str	r2, [fp, #-16]
   2407c:	bl	20364 <__assert_fail@plt+0xdc78>
   24080:	mov	r3, r0
   24084:	ldr	r2, [fp, #-16]
   24088:	ldr	r1, [fp, #-12]
   2408c:	mov	r0, r3
   24090:	bl	24008 <__assert_fail@plt+0x1191c>
   24094:	mov	r3, r0
   24098:	mov	r0, r3
   2409c:	sub	sp, fp, #4
   240a0:	pop	{fp, pc}
   240a4:	push	{fp, lr}
   240a8:	add	fp, sp, #4
   240ac:	sub	sp, sp, #24
   240b0:	str	r0, [fp, #-16]
   240b4:	str	r1, [fp, #-20]	; 0xffffffec
   240b8:	str	r2, [fp, #-24]	; 0xffffffe8
   240bc:	ldr	r0, [fp, #-16]
   240c0:	bl	1a9b4 <__assert_fail@plt+0x82c8>
   240c4:	str	r0, [fp, #-8]
   240c8:	ldr	r3, [fp, #-8]
   240cc:	mov	r2, #0
   240d0:	strb	r2, [r3, #19]
   240d4:	ldr	r3, [fp, #-8]
   240d8:	ldrb	r2, [r3, #19]
   240dc:	ldr	r3, [fp, #-8]
   240e0:	strb	r2, [r3, #18]
   240e4:	ldr	r3, [fp, #-8]
   240e8:	mov	r2, #0
   240ec:	strb	r2, [r3, #17]
   240f0:	ldr	r3, [fp, #-8]
   240f4:	ldrb	r2, [r3, #17]
   240f8:	ldr	r3, [fp, #-8]
   240fc:	strb	r2, [r3, #16]
   24100:	ldr	r3, [fp, #-8]
   24104:	ldr	r3, [r3]
   24108:	ldr	r2, [pc, #48]	; 24140 <__assert_fail@plt+0x11a54>
   2410c:	cmp	r3, r2
   24110:	bne	24124 <__assert_fail@plt+0x11a38>
   24114:	ldr	r3, [fp, #-8]
   24118:	ldr	r2, [pc, #36]	; 24144 <__assert_fail@plt+0x11a58>
   2411c:	str	r2, [r3, #28]
   24120:	b	24130 <__assert_fail@plt+0x11a44>
   24124:	ldr	r3, [fp, #-8]
   24128:	ldr	r2, [pc, #24]	; 24148 <__assert_fail@plt+0x11a5c>
   2412c:	str	r2, [r3, #28]
   24130:	mov	r3, #1
   24134:	mov	r0, r3
   24138:	sub	sp, fp, #4
   2413c:	pop	{fp, pc}
   24140:	andeq	r5, r1, r4, asr r8
   24144:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   24148:	svccc	0x00666666
   2414c:	push	{fp, lr}
   24150:	add	fp, sp, #4
   24154:	sub	sp, sp, #16
   24158:	str	r0, [fp, #-8]
   2415c:	str	r1, [fp, #-12]
   24160:	str	r2, [fp, #-16]
   24164:	ldr	r3, [pc, #28]	; 24188 <__assert_fail@plt+0x11a9c>
   24168:	ldr	r2, [fp, #-8]
   2416c:	ldr	r1, [fp, #-16]
   24170:	ldr	r0, [fp, #-12]
   24174:	bl	248a8 <__assert_fail@plt+0x121bc>
   24178:	mov	r3, r0
   2417c:	mov	r0, r3
   24180:	sub	sp, fp, #4
   24184:	pop	{fp, pc}
   24188:	andeq	r5, r1, r8, asr sp
   2418c:	push	{fp, lr}
   24190:	add	fp, sp, #4
   24194:	sub	sp, sp, #24
   24198:	str	r0, [fp, #-16]
   2419c:	str	r1, [fp, #-20]	; 0xffffffec
   241a0:	str	r2, [fp, #-24]	; 0xffffffe8
   241a4:	ldr	r2, [fp, #-16]
   241a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   241ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   241b0:	bl	25d60 <__assert_fail@plt+0x13674>
   241b4:	str	r0, [fp, #-8]
   241b8:	ldr	r3, [fp, #-8]
   241bc:	cmp	r3, #0
   241c0:	beq	241f4 <__assert_fail@plt+0x11b08>
   241c4:	ldr	r3, [fp, #-8]
   241c8:	ldrd	r2, [r3, #48]	; 0x30
   241cc:	cmp	r3, #0
   241d0:	cmpeq	r2, #99	; 0x63
   241d4:	bhi	241e0 <__assert_fail@plt+0x11af4>
   241d8:	ldr	r2, [pc, #56]	; 24218 <__assert_fail@plt+0x11b2c>
   241dc:	b	241e4 <__assert_fail@plt+0x11af8>
   241e0:	ldr	r2, [pc, #52]	; 2421c <__assert_fail@plt+0x11b30>
   241e4:	ldr	r3, [fp, #-8]
   241e8:	str	r2, [r3, #28]
   241ec:	mov	r3, #1
   241f0:	b	2420c <__assert_fail@plt+0x11b20>
   241f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   241f8:	ldr	r3, [r3]
   241fc:	sub	r2, r3, #1
   24200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24204:	str	r2, [r3]
   24208:	mov	r3, #0
   2420c:	mov	r0, r3
   24210:	sub	sp, fp, #4
   24214:	pop	{fp, pc}
   24218:	svccc	0x007d70a4
   2421c:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   24220:	push	{fp, lr}
   24224:	add	fp, sp, #4
   24228:	sub	sp, sp, #64	; 0x40
   2422c:	str	r0, [fp, #-48]	; 0xffffffd0
   24230:	str	r1, [fp, #-52]	; 0xffffffcc
   24234:	str	r2, [fp, #-56]	; 0xffffffc8
   24238:	ldr	r3, [pc, #248]	; 24338 <__assert_fail@plt+0x11c4c>
   2423c:	str	r3, [fp, #-8]
   24240:	sub	r3, fp, #32
   24244:	mov	r2, r3
   24248:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2424c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24250:	bl	20a68 <__assert_fail@plt+0xe37c>
   24254:	mov	r3, r0
   24258:	cmp	r3, #0
   2425c:	beq	24320 <__assert_fail@plt+0x11c34>
   24260:	mov	r3, #0
   24264:	str	r3, [fp, #-40]	; 0xffffffd8
   24268:	mov	r3, #0
   2426c:	str	r3, [fp, #-36]	; 0xffffffdc
   24270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24274:	sub	r1, fp, #28
   24278:	ldr	r3, [fp, #-8]
   2427c:	str	r3, [sp]
   24280:	vldr	d0, [pc, #168]	; 24330 <__assert_fail@plt+0x11c44>
   24284:	sub	r3, fp, #40	; 0x28
   24288:	ldm	r3, {r2, r3}
   2428c:	bl	2568c <__assert_fail@plt+0x12fa0>
   24290:	mov	r3, r0
   24294:	cmp	r3, #0
   24298:	beq	24304 <__assert_fail@plt+0x11c18>
   2429c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   242a0:	mov	r1, r3
   242a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   242a8:	bl	1a948 <__assert_fail@plt+0x825c>
   242ac:	str	r0, [fp, #-12]
   242b0:	ldr	r3, [fp, #-12]
   242b4:	add	ip, r3, #40	; 0x28
   242b8:	sub	r3, fp, #28
   242bc:	ldm	r3, {r0, r1, r2, r3}
   242c0:	stm	ip, {r0, r1, r2, r3}
   242c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   242c8:	ldr	r2, [pc, #108]	; 2433c <__assert_fail@plt+0x11c50>
   242cc:	smull	r1, r2, r2, r3
   242d0:	add	r2, r2, r3
   242d4:	asr	r2, r2, #16
   242d8:	asr	r3, r3, #31
   242dc:	sub	r3, r2, r3
   242e0:	vmov	s15, r3
   242e4:	vcvt.f32.s32	s15, s15
   242e8:	vmov.f32	s0, s15
   242ec:	bl	208cc <__assert_fail@plt+0xe1e0>
   242f0:	vmov.f32	s15, s0
   242f4:	ldr	r3, [fp, #-12]
   242f8:	vstr	s15, [r3, #28]
   242fc:	mov	r3, #1
   24300:	b	24324 <__assert_fail@plt+0x11c38>
   24304:	ldr	r0, [pc, #52]	; 24340 <__assert_fail@plt+0x11c54>
   24308:	bl	12398 <gettext@plt>
   2430c:	mov	r2, r0
   24310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24314:	mov	r1, #0
   24318:	mov	r0, #1
   2431c:	bl	122b4 <error@plt>
   24320:	mov	r3, #0
   24324:	mov	r0, r3
   24328:	sub	sp, fp, #4
   2432c:	pop	{fp, pc}
   24330:	andeq	r0, r0, r0
   24334:	rscsmi	r1, r5, r0, lsl #16
   24338:	andeq	r7, r6, r0, lsl #20
   2433c:	eorgt	r4, lr, #29360128	; 0x1c00000
   24340:	andeq	r7, r6, r4, asr #20
   24344:	push	{r4, fp, lr}
   24348:	add	fp, sp, #8
   2434c:	sub	sp, sp, #44	; 0x2c
   24350:	str	r0, [fp, #-40]	; 0xffffffd8
   24354:	str	r1, [fp, #-44]	; 0xffffffd4
   24358:	str	r2, [fp, #-48]	; 0xffffffd0
   2435c:	sub	r3, fp, #32
   24360:	mov	r2, r3
   24364:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2436c:	bl	20a68 <__assert_fail@plt+0xe37c>
   24370:	mov	r3, r0
   24374:	cmp	r3, #0
   24378:	beq	244b8 <__assert_fail@plt+0x11dcc>
   2437c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24380:	mov	r0, r3
   24384:	bl	11fd8 <getpwnam@plt>
   24388:	str	r0, [fp, #-20]	; 0xffffffec
   2438c:	bl	12530 <endpwent@plt>
   24390:	ldr	r3, [fp, #-20]	; 0xffffffec
   24394:	cmp	r3, #0
   24398:	beq	243ac <__assert_fail@plt+0x11cc0>
   2439c:	ldr	r3, [fp, #-20]	; 0xffffffec
   243a0:	ldr	r3, [r3, #8]
   243a4:	str	r3, [fp, #-16]
   243a8:	b	2446c <__assert_fail@plt+0x11d80>
   243ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   243b0:	ldr	r1, [pc, #272]	; 244c8 <__assert_fail@plt+0x11ddc>
   243b4:	mov	r0, r3
   243b8:	bl	126e0 <strspn@plt>
   243bc:	str	r0, [fp, #-24]	; 0xffffffe8
   243c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   243c4:	cmp	r3, #0
   243c8:	beq	24408 <__assert_fail@plt+0x11d1c>
   243cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   243d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   243d4:	add	r3, r2, r3
   243d8:	ldrb	r3, [r3]
   243dc:	cmp	r3, #0
   243e0:	bne	24408 <__assert_fail@plt+0x11d1c>
   243e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   243e8:	ldr	r3, [pc, #220]	; 244cc <__assert_fail@plt+0x11de0>
   243ec:	ldr	r3, [r3, #72]	; 0x48
   243f0:	mov	r1, r3
   243f4:	mov	r0, r2
   243f8:	bl	296f8 <__assert_fail@plt+0x1700c>
   243fc:	mov	r3, r0
   24400:	str	r3, [fp, #-16]
   24404:	b	2446c <__assert_fail@plt+0x11d80>
   24408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2440c:	ldrb	r3, [r3]
   24410:	cmp	r3, #0
   24414:	beq	24450 <__assert_fail@plt+0x11d64>
   24418:	ldr	r0, [pc, #176]	; 244d0 <__assert_fail@plt+0x11de4>
   2441c:	bl	12398 <gettext@plt>
   24420:	mov	r4, r0
   24424:	ldr	r3, [pc, #160]	; 244cc <__assert_fail@plt+0x11de0>
   24428:	ldr	r3, [r3, #72]	; 0x48
   2442c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24430:	mov	r1, r3
   24434:	mov	r0, #0
   24438:	bl	3b718 <__assert_fail@plt+0x2902c>
   2443c:	mov	r3, r0
   24440:	mov	r2, r4
   24444:	mov	r1, #0
   24448:	mov	r0, #1
   2444c:	bl	122b4 <error@plt>
   24450:	ldr	r0, [pc, #124]	; 244d4 <__assert_fail@plt+0x11de8>
   24454:	bl	12398 <gettext@plt>
   24458:	mov	r3, r0
   2445c:	mov	r2, r3
   24460:	mov	r1, #0
   24464:	mov	r0, #1
   24468:	bl	122b4 <error@plt>
   2446c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24470:	mov	r1, r3
   24474:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24478:	bl	1a948 <__assert_fail@plt+0x825c>
   2447c:	str	r0, [fp, #-28]	; 0xffffffe4
   24480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24484:	ldr	r2, [fp, #-16]
   24488:	str	r2, [r3, #40]	; 0x28
   2448c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24490:	ldr	r3, [r3, #40]	; 0x28
   24494:	cmp	r3, #99	; 0x63
   24498:	bhi	244a4 <__assert_fail@plt+0x11db8>
   2449c:	ldr	r2, [pc, #52]	; 244d8 <__assert_fail@plt+0x11dec>
   244a0:	b	244a8 <__assert_fail@plt+0x11dbc>
   244a4:	ldr	r2, [pc, #48]	; 244dc <__assert_fail@plt+0x11df0>
   244a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244ac:	str	r2, [r3, #28]
   244b0:	mov	r3, #1
   244b4:	b	244bc <__assert_fail@plt+0x11dd0>
   244b8:	mov	r3, #0
   244bc:	mov	r0, r3
   244c0:	sub	sp, fp, #8
   244c4:	pop	{r4, fp, pc}
   244c8:	andeq	r7, r6, ip, lsr #8
   244cc:	andeq	sp, r7, ip, asr #32
   244d0:	andeq	r7, r6, r4, ror #20
   244d4:	andeq	r7, r6, r8, lsl #21
   244d8:	svccc	0x007d70a4
   244dc:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   244e0:	push	{fp, lr}
   244e4:	add	fp, sp, #4
   244e8:	sub	sp, sp, #24
   244ec:	str	r0, [fp, #-16]
   244f0:	str	r1, [fp, #-20]	; 0xffffffec
   244f4:	str	r2, [fp, #-24]	; 0xffffffe8
   244f8:	mov	r3, #0
   244fc:	strb	r3, [fp, #-5]
   24500:	ldr	r0, [pc, #284]	; 24624 <__assert_fail@plt+0x11f38>
   24504:	bl	27f78 <__assert_fail@plt+0x1588c>
   24508:	ldr	r0, [pc, #280]	; 24628 <__assert_fail@plt+0x11f3c>
   2450c:	bl	12398 <gettext@plt>
   24510:	mov	r3, r0
   24514:	mov	r0, r3
   24518:	bl	1202c <printf@plt>
   2451c:	ldr	r0, [pc, #264]	; 2462c <__assert_fail@plt+0x11f40>
   24520:	bl	1202c <printf@plt>
   24524:	mov	r3, #1
   24528:	strb	r3, [fp, #-5]
   2452c:	ldr	r3, [pc, #252]	; 24630 <__assert_fail@plt+0x11f44>
   24530:	ldrb	r3, [r3, #56]	; 0x38
   24534:	cmp	r3, #0
   24538:	beq	24544 <__assert_fail@plt+0x11e58>
   2453c:	ldr	r3, [pc, #240]	; 24634 <__assert_fail@plt+0x11f48>
   24540:	b	24548 <__assert_fail@plt+0x11e5c>
   24544:	ldr	r3, [pc, #236]	; 24638 <__assert_fail@plt+0x11f4c>
   24548:	mov	r1, r3
   2454c:	ldr	r0, [pc, #232]	; 2463c <__assert_fail@plt+0x11f50>
   24550:	bl	1202c <printf@plt>
   24554:	mov	r3, #1
   24558:	strb	r3, [fp, #-5]
   2455c:	ldr	r0, [pc, #220]	; 24640 <__assert_fail@plt+0x11f54>
   24560:	bl	1202c <printf@plt>
   24564:	mov	r3, #1
   24568:	strb	r3, [fp, #-5]
   2456c:	bl	11fe4 <is_selinux_enabled@plt>
   24570:	mov	r3, r0
   24574:	cmp	r3, #0
   24578:	ble	2458c <__assert_fail@plt+0x11ea0>
   2457c:	ldr	r0, [pc, #192]	; 24644 <__assert_fail@plt+0x11f58>
   24580:	bl	1202c <printf@plt>
   24584:	mov	r3, #1
   24588:	strb	r3, [fp, #-5]
   2458c:	mov	r3, #0
   24590:	str	r3, [fp, #-12]
   24594:	sub	r3, fp, #12
   24598:	mov	r0, r3
   2459c:	bl	13e8c <__assert_fail@plt+0x17a0>
   245a0:	mov	r3, r0
   245a4:	cmp	r3, #0
   245a8:	beq	245dc <__assert_fail@plt+0x11ef0>
   245ac:	ldr	r0, [pc, #148]	; 24648 <__assert_fail@plt+0x11f5c>
   245b0:	bl	1202c <printf@plt>
   245b4:	mov	r3, #1
   245b8:	strb	r3, [fp, #-5]
   245bc:	ldr	r3, [fp, #-12]
   245c0:	and	r3, r3, #512	; 0x200
   245c4:	cmp	r3, #0
   245c8:	beq	245d4 <__assert_fail@plt+0x11ee8>
   245cc:	ldr	r0, [pc, #120]	; 2464c <__assert_fail@plt+0x11f60>
   245d0:	bl	1202c <printf@plt>
   245d4:	ldr	r0, [pc, #116]	; 24650 <__assert_fail@plt+0x11f64>
   245d8:	bl	1202c <printf@plt>
   245dc:	ldr	r3, [pc, #76]	; 24630 <__assert_fail@plt+0x11f44>
   245e0:	ldrh	r3, [r3, #68]	; 0x44
   245e4:	mov	r1, r3
   245e8:	ldr	r0, [pc, #100]	; 24654 <__assert_fail@plt+0x11f68>
   245ec:	bl	1202c <printf@plt>
   245f0:	mov	r3, #1
   245f4:	strb	r3, [fp, #-5]
   245f8:	ldrb	r3, [fp, #-5]
   245fc:	eor	r3, r3, #1
   24600:	uxtb	r3, r3
   24604:	cmp	r3, #0
   24608:	beq	24614 <__assert_fail@plt+0x11f28>
   2460c:	ldr	r0, [pc, #68]	; 24658 <__assert_fail@plt+0x11f6c>
   24610:	bl	1202c <printf@plt>
   24614:	mov	r0, #10
   24618:	bl	1244c <putchar@plt>
   2461c:	mov	r0, #0
   24620:	bl	12380 <exit@plt>
   24624:			; <UNDEFINED> instruction: 0x00067ab4
   24628:			; <UNDEFINED> instruction: 0x00067abc
   2462c:	ldrdeq	r7, [r6], -r0
   24630:	andeq	sp, r7, ip, asr #32
   24634:	ldrdeq	r7, [r6], -r8
   24638:	andeq	r7, r6, r0, ror #21
   2463c:	andeq	r7, r6, ip, ror #21
   24640:	strdeq	r7, [r6], -ip
   24644:	andeq	r7, r6, r0, lsl fp
   24648:	andeq	r7, r6, ip, lsl fp
   2464c:	andeq	r7, r6, r4, lsr #22
   24650:	andeq	r7, r6, r0, lsr fp
   24654:	andeq	r7, r6, r4, lsr fp
   24658:	andeq	r7, r6, r4, asr #22
   2465c:	push	{fp, lr}
   24660:	add	fp, sp, #4
   24664:	sub	sp, sp, #24
   24668:	str	r0, [fp, #-16]
   2466c:	str	r1, [fp, #-20]	; 0xffffffec
   24670:	str	r2, [fp, #-24]	; 0xffffffe8
   24674:	ldr	r3, [fp, #-20]	; 0xffffffec
   24678:	cmp	r3, #0
   2467c:	beq	246a0 <__assert_fail@plt+0x11fb4>
   24680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24684:	ldr	r3, [r3]
   24688:	lsl	r3, r3, #2
   2468c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24690:	add	r3, r2, r3
   24694:	ldr	r3, [r3]
   24698:	cmp	r3, #0
   2469c:	bne	246a8 <__assert_fail@plt+0x11fbc>
   246a0:	mov	r3, #0
   246a4:	b	24734 <__assert_fail@plt+0x12048>
   246a8:	bl	11fe4 <is_selinux_enabled@plt>
   246ac:	mov	r3, r0
   246b0:	cmp	r3, #0
   246b4:	bgt	246d4 <__assert_fail@plt+0x11fe8>
   246b8:	ldr	r0, [pc, #128]	; 24740 <__assert_fail@plt+0x12054>
   246bc:	bl	12398 <gettext@plt>
   246c0:	mov	r3, r0
   246c4:	mov	r2, r3
   246c8:	mov	r1, #0
   246cc:	mov	r0, #1
   246d0:	bl	122b4 <error@plt>
   246d4:	mov	r1, #0
   246d8:	ldr	r0, [fp, #-16]
   246dc:	bl	1a948 <__assert_fail@plt+0x825c>
   246e0:	str	r0, [fp, #-8]
   246e4:	ldr	r3, [fp, #-8]
   246e8:	ldr	r2, [pc, #84]	; 24744 <__assert_fail@plt+0x12058>
   246ec:	str	r2, [r3, #28]
   246f0:	ldr	r3, [fp, #-8]
   246f4:	mov	r2, #0
   246f8:	strb	r2, [r3, #18]
   246fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24700:	ldr	r3, [r3]
   24704:	lsl	r3, r3, #2
   24708:	ldr	r2, [fp, #-20]	; 0xffffffec
   2470c:	add	r3, r2, r3
   24710:	ldr	r2, [r3]
   24714:	ldr	r3, [fp, #-8]
   24718:	str	r2, [r3, #40]	; 0x28
   2471c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24720:	ldr	r3, [r3]
   24724:	add	r2, r3, #1
   24728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2472c:	str	r2, [r3]
   24730:	mov	r3, #1
   24734:	mov	r0, r3
   24738:	sub	sp, fp, #4
   2473c:	pop	{fp, pc}
   24740:	andeq	r7, r6, ip, asr #22
   24744:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24748:	push	{fp, lr}
   2474c:	add	fp, sp, #4
   24750:	sub	sp, sp, #16
   24754:	str	r0, [fp, #-8]
   24758:	str	r1, [fp, #-12]
   2475c:	str	r2, [fp, #-16]
   24760:	ldr	r3, [pc, #36]	; 2478c <__assert_fail@plt+0x120a0>
   24764:	mov	r2, #1
   24768:	strb	r2, [r3, #13]
   2476c:	ldr	r2, [fp, #-16]
   24770:	ldr	r1, [fp, #-12]
   24774:	ldr	r0, [fp, #-8]
   24778:	bl	24064 <__assert_fail@plt+0x11978>
   2477c:	mov	r3, r0
   24780:	mov	r0, r3
   24784:	sub	sp, fp, #4
   24788:	pop	{fp, pc}
   2478c:	andeq	sp, r7, ip, asr #32
   24790:	push	{fp, lr}
   24794:	add	fp, sp, #4
   24798:	sub	sp, sp, #16
   2479c:	str	r0, [fp, #-8]
   247a0:	str	r1, [fp, #-12]
   247a4:	str	r2, [fp, #-16]
   247a8:	ldr	r3, [pc, #36]	; 247d4 <__assert_fail@plt+0x120e8>
   247ac:	mov	r2, #1
   247b0:	strb	r2, [r3, #14]
   247b4:	ldr	r2, [fp, #-16]
   247b8:	ldr	r1, [fp, #-12]
   247bc:	ldr	r0, [fp, #-8]
   247c0:	bl	24064 <__assert_fail@plt+0x11978>
   247c4:	mov	r3, r0
   247c8:	mov	r0, r3
   247cc:	sub	sp, fp, #4
   247d0:	pop	{fp, pc}
   247d4:	andeq	sp, r7, ip, asr #32
   247d8:	push	{fp, lr}
   247dc:	add	fp, sp, #4
   247e0:	sub	sp, sp, #16
   247e4:	str	r0, [fp, #-8]
   247e8:	str	r1, [fp, #-12]
   247ec:	str	r2, [fp, #-16]
   247f0:	ldr	r3, [pc, #36]	; 2481c <__assert_fail@plt+0x12130>
   247f4:	mov	r2, #0
   247f8:	strb	r2, [r3, #14]
   247fc:	ldr	r2, [fp, #-16]
   24800:	ldr	r1, [fp, #-12]
   24804:	ldr	r0, [fp, #-8]
   24808:	bl	24064 <__assert_fail@plt+0x11978>
   2480c:	mov	r3, r0
   24810:	mov	r0, r3
   24814:	sub	sp, fp, #4
   24818:	pop	{fp, pc}
   2481c:	andeq	sp, r7, ip, asr #32
   24820:	push	{fp, lr}
   24824:	add	fp, sp, #4
   24828:	sub	sp, sp, #16
   2482c:	str	r0, [fp, #-8]
   24830:	str	r1, [fp, #-12]
   24834:	str	r2, [fp, #-16]
   24838:	ldr	r3, [pc, #36]	; 24864 <__assert_fail@plt+0x12178>
   2483c:	mov	r2, #1
   24840:	strb	r2, [r3, #16]
   24844:	ldr	r2, [fp, #-16]
   24848:	ldr	r1, [fp, #-12]
   2484c:	ldr	r0, [fp, #-8]
   24850:	bl	24064 <__assert_fail@plt+0x11978>
   24854:	mov	r3, r0
   24858:	mov	r0, r3
   2485c:	sub	sp, fp, #4
   24860:	pop	{fp, pc}
   24864:	andeq	sp, r7, ip, asr #32
   24868:	push	{fp, lr}
   2486c:	add	fp, sp, #4
   24870:	sub	sp, sp, #16
   24874:	str	r0, [fp, #-8]
   24878:	str	r1, [fp, #-12]
   2487c:	str	r2, [fp, #-16]
   24880:	ldr	r3, [pc, #28]	; 248a4 <__assert_fail@plt+0x121b8>
   24884:	ldr	r2, [fp, #-8]
   24888:	ldr	r1, [fp, #-16]
   2488c:	ldr	r0, [fp, #-12]
   24890:	bl	248a8 <__assert_fail@plt+0x121bc>
   24894:	mov	r3, r0
   24898:	mov	r0, r3
   2489c:	sub	sp, fp, #4
   248a0:	pop	{fp, pc}
   248a4:	ldrdeq	r6, [r1], -ip
   248a8:	push	{fp, lr}
   248ac:	add	fp, sp, #4
   248b0:	sub	sp, sp, #48	; 0x30
   248b4:	str	r0, [fp, #-32]	; 0xffffffe0
   248b8:	str	r1, [fp, #-36]	; 0xffffffdc
   248bc:	str	r2, [fp, #-40]	; 0xffffffd8
   248c0:	str	r3, [fp, #-44]	; 0xffffffd4
   248c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   248c8:	ldr	r2, [pc, #964]	; 24c94 <__assert_fail@plt+0x125a8>
   248cc:	cmp	r3, r2
   248d0:	bne	248dc <__assert_fail@plt+0x121f0>
   248d4:	ldr	r3, [pc, #956]	; 24c98 <__assert_fail@plt+0x125ac>
   248d8:	b	248e0 <__assert_fail@plt+0x121f4>
   248dc:	ldr	r3, [pc, #952]	; 24c9c <__assert_fail@plt+0x125b0>
   248e0:	str	r3, [fp, #-16]
   248e4:	sub	r3, fp, #24
   248e8:	mov	r2, r3
   248ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   248f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   248f4:	bl	20a68 <__assert_fail@plt+0xe37c>
   248f8:	mov	r3, r0
   248fc:	eor	r3, r3, #1
   24900:	uxtb	r3, r3
   24904:	cmp	r3, #0
   24908:	beq	24914 <__assert_fail@plt+0x12228>
   2490c:	mov	r3, #0
   24910:	b	24c88 <__assert_fail@plt+0x1259c>
   24914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24918:	ldrb	r3, [r3]
   2491c:	cmp	r3, #0
   24920:	bne	24940 <__assert_fail@plt+0x12254>
   24924:	ldr	r0, [pc, #884]	; 24ca0 <__assert_fail@plt+0x125b4>
   24928:	bl	12398 <gettext@plt>
   2492c:	mov	r2, r0
   24930:	ldr	r3, [fp, #-16]
   24934:	mov	r1, #0
   24938:	mov	r0, #1
   2493c:	bl	122b4 <error@plt>
   24940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24944:	mov	r2, r3
   24948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2494c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24950:	bl	1a8d0 <__assert_fail@plt+0x81e4>
   24954:	str	r0, [fp, #-20]	; 0xffffffec
   24958:	ldr	r3, [fp, #-20]	; 0xffffffec
   2495c:	mov	r2, #0
   24960:	str	r2, [r3, #28]
   24964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24968:	ldr	r2, [pc, #804]	; 24c94 <__assert_fail@plt+0x125a8>
   2496c:	cmp	r3, r2
   24970:	bne	24990 <__assert_fail@plt+0x122a4>
   24974:	ldr	r3, [fp, #-20]	; 0xffffffec
   24978:	mov	r2, #1
   2497c:	strb	r2, [r3, #18]
   24980:	ldr	r3, [fp, #-20]	; 0xffffffec
   24984:	mov	r2, #0
   24988:	strb	r2, [r3, #19]
   2498c:	b	24c74 <__assert_fail@plt+0x12588>
   24990:	ldr	r3, [fp, #-20]	; 0xffffffec
   24994:	mov	r2, #0
   24998:	strb	r2, [r3, #18]
   2499c:	ldr	r3, [fp, #-20]	; 0xffffffec
   249a0:	mov	r2, #1
   249a4:	strb	r2, [r3, #19]
   249a8:	b	24c74 <__assert_fail@plt+0x12588>
   249ac:	ldr	r3, [pc, #752]	; 24ca4 <__assert_fail@plt+0x125b8>
   249b0:	str	r3, [fp, #-12]
   249b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   249b8:	ldrb	r3, [r3]
   249bc:	sub	r3, r3, #68	; 0x44
   249c0:	cmp	r3, #47	; 0x2f
   249c4:	ldrls	pc, [pc, r3, lsl #2]
   249c8:	b	24b48 <__assert_fail@plt+0x1245c>
   249cc:	andeq	r4, r2, r8, lsl fp
   249d0:	andeq	r4, r2, r8, asr #22
   249d4:	andeq	r4, r2, r8, asr #22
   249d8:	andeq	r4, r2, r8, asr #22
   249dc:	andeq	r4, r2, r8, asr #22
   249e0:	andeq	r4, r2, r8, asr #22
   249e4:	andeq	r4, r2, r8, asr #22
   249e8:	andeq	r4, r2, r8, asr #22
   249ec:	andeq	r4, r2, r8, asr #22
   249f0:	andeq	r4, r2, r8, asr #22
   249f4:	andeq	r4, r2, r8, asr #22
   249f8:	andeq	r4, r2, r8, asr #22
   249fc:	andeq	r4, r2, r8, asr #22
   24a00:	andeq	r4, r2, r8, asr #22
   24a04:	andeq	r4, r2, r8, asr #22
   24a08:	andeq	r4, r2, r8, asr #22
   24a0c:	andeq	r4, r2, r8, asr #22
   24a10:	andeq	r4, r2, r8, asr #22
   24a14:	andeq	r4, r2, r8, asr #22
   24a18:	andeq	r4, r2, r8, asr #22
   24a1c:	andeq	r4, r2, r8, asr #22
   24a20:	andeq	r4, r2, r8, asr #22
   24a24:	andeq	r4, r2, r8, asr #22
   24a28:	andeq	r4, r2, r8, asr #22
   24a2c:	andeq	r4, r2, r8, asr #22
   24a30:	andeq	r4, r2, r8, asr #22
   24a34:	andeq	r4, r2, r8, asr #22
   24a38:	andeq	r4, r2, r8, asr #22
   24a3c:	andeq	r4, r2, r8, asr #22
   24a40:	andeq	r4, r2, r8, asr #22
   24a44:	andeq	r4, r2, ip, lsl #21
   24a48:	andeq	r4, r2, r0, lsr #21
   24a4c:			; <UNDEFINED> instruction: 0x00024ab4
   24a50:	andeq	r4, r2, r8, asr #22
   24a54:	andeq	r4, r2, r8, asr #21
   24a58:	andeq	r4, r2, r8, asr #22
   24a5c:	andeq	r4, r2, r8, asr #22
   24a60:	andeq	r4, r2, r8, asr #22
   24a64:	andeq	r4, r2, r8, asr #22
   24a68:	andeq	r4, r2, r8, asr #22
   24a6c:	ldrdeq	r4, [r2], -ip
   24a70:	andeq	r4, r2, r8, asr #22
   24a74:	andeq	r4, r2, r8, asr #22
   24a78:	andeq	r4, r2, r8, asr #22
   24a7c:	strdeq	r4, [r2], -r0
   24a80:	andeq	r4, r2, r8, asr #22
   24a84:	andeq	r4, r2, r8, asr #22
   24a88:	andeq	r4, r2, r4, lsl #22
   24a8c:	mov	r3, #0
   24a90:	str	r3, [fp, #-8]
   24a94:	ldr	r3, [pc, #524]	; 24ca8 <__assert_fail@plt+0x125bc>
   24a98:	str	r3, [fp, #-12]
   24a9c:	b	24b78 <__assert_fail@plt+0x1248c>
   24aa0:	mov	r3, #1
   24aa4:	str	r3, [fp, #-8]
   24aa8:	ldr	r3, [pc, #508]	; 24cac <__assert_fail@plt+0x125c0>
   24aac:	str	r3, [fp, #-12]
   24ab0:	b	24b78 <__assert_fail@plt+0x1248c>
   24ab4:	mov	r3, #2
   24ab8:	str	r3, [fp, #-8]
   24abc:	ldr	r3, [pc, #492]	; 24cb0 <__assert_fail@plt+0x125c4>
   24ac0:	str	r3, [fp, #-12]
   24ac4:	b	24b78 <__assert_fail@plt+0x1248c>
   24ac8:	mov	r3, #3
   24acc:	str	r3, [fp, #-8]
   24ad0:	ldr	r3, [pc, #476]	; 24cb4 <__assert_fail@plt+0x125c8>
   24ad4:	str	r3, [fp, #-12]
   24ad8:	b	24b78 <__assert_fail@plt+0x1248c>
   24adc:	mov	r3, #4
   24ae0:	str	r3, [fp, #-8]
   24ae4:	ldr	r3, [pc, #460]	; 24cb8 <__assert_fail@plt+0x125cc>
   24ae8:	str	r3, [fp, #-12]
   24aec:	b	24b78 <__assert_fail@plt+0x1248c>
   24af0:	mov	r3, #5
   24af4:	str	r3, [fp, #-8]
   24af8:	ldr	r3, [pc, #444]	; 24cbc <__assert_fail@plt+0x125d0>
   24afc:	str	r3, [fp, #-12]
   24b00:	b	24b78 <__assert_fail@plt+0x1248c>
   24b04:	mov	r3, #6
   24b08:	str	r3, [fp, #-8]
   24b0c:	ldr	r3, [pc, #428]	; 24cc0 <__assert_fail@plt+0x125d4>
   24b10:	str	r3, [fp, #-12]
   24b14:	b	24b78 <__assert_fail@plt+0x1248c>
   24b18:	mov	r3, #0
   24b1c:	str	r3, [fp, #-8]
   24b20:	ldr	r0, [pc, #412]	; 24cc4 <__assert_fail@plt+0x125d8>
   24b24:	bl	12398 <gettext@plt>
   24b28:	mov	r2, r0
   24b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24b30:	ldrb	r3, [r3]
   24b34:	str	r3, [sp]
   24b38:	ldr	r3, [fp, #-16]
   24b3c:	mov	r1, #0
   24b40:	mov	r0, #1
   24b44:	bl	122b4 <error@plt>
   24b48:	mov	r3, #0
   24b4c:	str	r3, [fp, #-8]
   24b50:	ldr	r0, [pc, #368]	; 24cc8 <__assert_fail@plt+0x125dc>
   24b54:	bl	12398 <gettext@plt>
   24b58:	mov	r2, r0
   24b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24b60:	ldrb	r3, [r3]
   24b64:	str	r3, [sp]
   24b68:	ldr	r3, [fp, #-16]
   24b6c:	mov	r1, #0
   24b70:	mov	r0, #1
   24b74:	bl	122b4 <error@plt>
   24b78:	ldr	r2, [fp, #-20]	; 0xffffffec
   24b7c:	ldr	r3, [fp, #-8]
   24b80:	add	r3, r2, r3
   24b84:	add	r3, r3, #40	; 0x28
   24b88:	ldrb	r3, [r3]
   24b8c:	cmp	r3, #0
   24b90:	beq	24bc4 <__assert_fail@plt+0x124d8>
   24b94:	ldr	r0, [pc, #304]	; 24ccc <__assert_fail@plt+0x125e0>
   24b98:	bl	12398 <gettext@plt>
   24b9c:	mov	r2, r0
   24ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24ba4:	ldrb	r3, [r3]
   24ba8:	mov	r1, r3
   24bac:	ldr	r3, [fp, #-16]
   24bb0:	str	r3, [sp]
   24bb4:	mov	r3, r1
   24bb8:	mov	r1, #0
   24bbc:	mov	r0, #1
   24bc0:	bl	122b4 <error@plt>
   24bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   24bc8:	vldr	s14, [r3, #28]
   24bcc:	vldr	s15, [fp, #-12]
   24bd0:	vadd.f32	s15, s14, s15
   24bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   24bd8:	vstr	s15, [r3, #28]
   24bdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   24be0:	ldr	r3, [fp, #-8]
   24be4:	add	r3, r2, r3
   24be8:	add	r3, r3, #40	; 0x28
   24bec:	mov	r2, #1
   24bf0:	strb	r2, [r3]
   24bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24bf8:	add	r3, r3, #1
   24bfc:	str	r3, [fp, #-24]	; 0xffffffe8
   24c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c04:	ldrb	r3, [r3]
   24c08:	cmp	r3, #0
   24c0c:	beq	24c74 <__assert_fail@plt+0x12588>
   24c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c14:	ldrb	r3, [r3]
   24c18:	cmp	r3, #44	; 0x2c
   24c1c:	beq	24c3c <__assert_fail@plt+0x12550>
   24c20:	ldr	r0, [pc, #168]	; 24cd0 <__assert_fail@plt+0x125e4>
   24c24:	bl	12398 <gettext@plt>
   24c28:	mov	r2, r0
   24c2c:	ldr	r3, [fp, #-16]
   24c30:	mov	r1, #0
   24c34:	mov	r0, #1
   24c38:	bl	122b4 <error@plt>
   24c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c40:	add	r3, r3, #1
   24c44:	str	r3, [fp, #-24]	; 0xffffffe8
   24c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c4c:	ldrb	r3, [r3]
   24c50:	cmp	r3, #0
   24c54:	bne	24c74 <__assert_fail@plt+0x12588>
   24c58:	ldr	r0, [pc, #116]	; 24cd4 <__assert_fail@plt+0x125e8>
   24c5c:	bl	12398 <gettext@plt>
   24c60:	mov	r2, r0
   24c64:	ldr	r3, [fp, #-16]
   24c68:	mov	r1, #0
   24c6c:	mov	r0, #1
   24c70:	bl	122b4 <error@plt>
   24c74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c78:	ldrb	r3, [r3]
   24c7c:	cmp	r3, #0
   24c80:	bne	249ac <__assert_fail@plt+0x122c0>
   24c84:	mov	r3, #1
   24c88:	mov	r0, r3
   24c8c:	sub	sp, fp, #4
   24c90:	pop	{fp, pc}
   24c94:	ldrdeq	r6, [r1], -ip
   24c98:	andeq	r7, r6, r0, lsl #23
   24c9c:	andeq	r7, r6, r8, lsl #23
   24ca0:	muleq	r6, r0, fp
   24ca4:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24ca8:	bcc	1a56f60 <stdout@@GLIBC_2.4+0x19da82c>
   24cac:	stmibcc	r8!, {r2, r4, r5, r6, r9, lr}^
   24cb0:	ldccc	3, cr13, [ip, #364]!	; 0x16c
   24cb4:	svccc	0x00600000
   24cb8:	cfldr64cc	mvdx12, [lr], #436	; 0x1b4
   24cbc:	usatcc	r7, #29, lr, asr #16
   24cc0:			; <UNDEFINED> instruction: 0x378560fd
   24cc4:	andeq	r7, r6, r4, asr #23
   24cc8:	andeq	r7, r6, ip, lsr #24
   24ccc:	andeq	r7, r6, r8, asr #24
   24cd0:	andeq	r7, r6, r0, lsl #25
   24cd4:			; <UNDEFINED> instruction: 0x00067cb4
   24cd8:	push	{fp, lr}
   24cdc:	add	fp, sp, #4
   24ce0:	sub	sp, sp, #16
   24ce4:	str	r0, [fp, #-16]
   24ce8:	ldr	r0, [fp, #-16]
   24cec:	bl	12488 <fileno@plt>
   24cf0:	str	r0, [fp, #-8]
   24cf4:	ldr	r3, [fp, #-8]
   24cf8:	cmn	r3, #1
   24cfc:	bne	24d08 <__assert_fail@plt+0x1261c>
   24d00:	mov	r3, #0
   24d04:	b	24d24 <__assert_fail@plt+0x12638>
   24d08:	ldr	r0, [fp, #-8]
   24d0c:	bl	1265c <isatty@plt>
   24d10:	mov	r3, r0
   24d14:	cmp	r3, #0
   24d18:	movne	r3, #1
   24d1c:	moveq	r3, #0
   24d20:	uxtb	r3, r3
   24d24:	mov	r0, r3
   24d28:	sub	sp, fp, #4
   24d2c:	pop	{fp, pc}
   24d30:	push	{r4, fp, lr}
   24d34:	add	fp, sp, #8
   24d38:	sub	sp, sp, #44	; 0x2c
   24d3c:	str	r0, [fp, #-40]	; 0xffffffd8
   24d40:	ldr	r0, [pc, #340]	; 24e9c <__assert_fail@plt+0x127b0>
   24d44:	bl	122f0 <getenv@plt>
   24d48:	str	r0, [fp, #-16]
   24d4c:	ldr	r3, [pc, #332]	; 24ea0 <__assert_fail@plt+0x127b4>
   24d50:	str	r3, [fp, #-20]	; 0xffffffec
   24d54:	ldr	r3, [fp, #-16]
   24d58:	cmp	r3, #0
   24d5c:	beq	24e90 <__assert_fail@plt+0x127a4>
   24d60:	sub	r2, fp, #28
   24d64:	sub	r3, fp, #32
   24d68:	str	r3, [sp]
   24d6c:	mov	r3, r2
   24d70:	mov	r2, #1
   24d74:	ldr	r1, [fp, #-20]	; 0xffffffec
   24d78:	ldr	r0, [fp, #-16]
   24d7c:	bl	298d4 <__assert_fail@plt+0x171e8>
   24d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d84:	cmp	r3, #0
   24d88:	beq	24db0 <__assert_fail@plt+0x126c4>
   24d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d90:	cmp	r3, #1
   24d94:	bne	24dcc <__assert_fail@plt+0x126e0>
   24d98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24d9c:	ldr	r2, [fp, #-16]
   24da0:	add	r3, r2, r3
   24da4:	ldrb	r3, [r3]
   24da8:	cmp	r3, #46	; 0x2e
   24dac:	bne	24dcc <__assert_fail@plt+0x126e0>
   24db0:	ldr	r0, [pc, #236]	; 24ea4 <__assert_fail@plt+0x127b8>
   24db4:	bl	12398 <gettext@plt>
   24db8:	mov	r2, r0
   24dbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24dc0:	mov	r1, #0
   24dc4:	mov	r0, #1
   24dc8:	bl	122b4 <error@plt>
   24dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24dd0:	ldr	r2, [fp, #-16]
   24dd4:	add	r3, r2, r3
   24dd8:	ldrb	r3, [r3]
   24ddc:	cmp	r3, #47	; 0x2f
   24de0:	beq	24e60 <__assert_fail@plt+0x12774>
   24de4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24de8:	ldr	r2, [fp, #-16]
   24dec:	add	r3, r2, r3
   24df0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24df4:	mov	r1, r2
   24df8:	mov	r0, r3
   24dfc:	bl	120d4 <strndup@plt>
   24e00:	mov	r3, r0
   24e04:	str	r3, [fp, #-24]	; 0xffffffe8
   24e08:	ldr	r0, [pc, #152]	; 24ea8 <__assert_fail@plt+0x127bc>
   24e0c:	bl	12398 <gettext@plt>
   24e10:	mov	r4, r0
   24e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24e18:	cmp	r3, #0
   24e1c:	bne	24e30 <__assert_fail@plt+0x12744>
   24e20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24e24:	ldr	r2, [fp, #-16]
   24e28:	add	r3, r2, r3
   24e2c:	b	24e34 <__assert_fail@plt+0x12748>
   24e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24e34:	mov	r1, r3
   24e38:	mov	r0, #0
   24e3c:	bl	1c7fc <__assert_fail@plt+0xa110>
   24e40:	mov	r2, r0
   24e44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24e48:	str	r3, [sp]
   24e4c:	mov	r3, r2
   24e50:	mov	r2, r4
   24e54:	mov	r1, #0
   24e58:	mov	r0, #1
   24e5c:	bl	122b4 <error@plt>
   24e60:	sub	r2, fp, #28
   24e64:	sub	r3, fp, #32
   24e68:	str	r3, [sp]
   24e6c:	mov	r3, r2
   24e70:	mov	r2, #0
   24e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   24e78:	ldr	r0, [fp, #-16]
   24e7c:	bl	298d4 <__assert_fail@plt+0x171e8>
   24e80:	mov	r3, r0
   24e84:	cmp	r3, #0
   24e88:	bne	24d80 <__assert_fail@plt+0x12694>
   24e8c:	b	24e94 <__assert_fail@plt+0x127a8>
   24e90:	nop			; (mov r0, r0)
   24e94:	sub	sp, fp, #8
   24e98:	pop	{r4, fp, pc}
   24e9c:	andeq	r7, r6, r4, lsl #26
   24ea0:	andeq	r7, r6, ip, lsl #26
   24ea4:	andeq	r7, r6, r0, lsl sp
   24ea8:	andeq	r7, r6, ip, lsl #28
   24eac:	push	{r4, r5, r6, fp, lr}
   24eb0:	add	fp, sp, #16
   24eb4:	sub	sp, sp, #108	; 0x6c
   24eb8:	str	r0, [fp, #-96]	; 0xffffffa0
   24ebc:	str	r1, [fp, #-100]	; 0xffffff9c
   24ec0:	str	r2, [fp, #-104]	; 0xffffff98
   24ec4:	str	r3, [fp, #-108]	; 0xffffff94
   24ec8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   24ecc:	ldr	r3, [r3, #12]
   24ed0:	str	r3, [fp, #-52]	; 0xffffffcc
   24ed4:	ldr	r3, [fp, #-104]	; 0xffffff98
   24ed8:	cmp	r3, #0
   24edc:	beq	24f00 <__assert_fail@plt+0x12814>
   24ee0:	ldr	r3, [fp, #-108]	; 0xffffff94
   24ee4:	ldr	r3, [r3]
   24ee8:	lsl	r3, r3, #2
   24eec:	ldr	r2, [fp, #-104]	; 0xffffff98
   24ef0:	add	r3, r2, r3
   24ef4:	ldr	r3, [r3]
   24ef8:	cmp	r3, #0
   24efc:	bne	24f08 <__assert_fail@plt+0x1281c>
   24f00:	mov	r3, #0
   24f04:	b	2562c <__assert_fail@plt+0x12f40>
   24f08:	ldr	r2, [pc, #1832]	; 25638 <__assert_fail@plt+0x12f4c>
   24f0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24f10:	ldr	r0, [fp, #-100]	; 0xffffff9c
   24f14:	bl	1a8d0 <__assert_fail@plt+0x81e4>
   24f18:	str	r0, [fp, #-56]	; 0xffffffc8
   24f1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f20:	mov	r2, #1
   24f24:	strb	r2, [r3, #17]
   24f28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f2c:	ldrb	r2, [r3, #17]
   24f30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f34:	strb	r2, [r3, #16]
   24f38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f3c:	mov	r2, #0
   24f40:	strb	r2, [r3, #18]
   24f44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f48:	ldrb	r2, [r3, #18]
   24f4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f50:	strb	r2, [r3, #19]
   24f54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f58:	add	r3, r3, #40	; 0x28
   24f5c:	str	r3, [fp, #-60]	; 0xffffffc4
   24f60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24f64:	mov	r2, #0
   24f68:	str	r2, [r3, #104]	; 0x68
   24f6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24f70:	ldr	r2, [pc, #1732]	; 2563c <__assert_fail@plt+0x12f50>
   24f74:	cmp	r3, r2
   24f78:	beq	24fa4 <__assert_fail@plt+0x128b8>
   24f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24f80:	ldr	r2, [pc, #1720]	; 25640 <__assert_fail@plt+0x12f54>
   24f84:	cmp	r3, r2
   24f88:	beq	24fa4 <__assert_fail@plt+0x128b8>
   24f8c:	mov	r3, #1
   24f90:	strb	r3, [fp, #-33]	; 0xffffffdf
   24f94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24f98:	mov	r2, #0
   24f9c:	strb	r2, [r3, #100]	; 0x64
   24fa0:	b	24fc4 <__assert_fail@plt+0x128d8>
   24fa4:	mov	r3, #0
   24fa8:	strb	r3, [fp, #-33]	; 0xffffffdf
   24fac:	ldr	r3, [pc, #1680]	; 25644 <__assert_fail@plt+0x12f58>
   24fb0:	mov	r2, #1
   24fb4:	strb	r2, [r3, #80]	; 0x50
   24fb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24fbc:	mov	r2, #1
   24fc0:	strb	r2, [r3, #100]	; 0x64
   24fc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24fc8:	ldr	r2, [pc, #1656]	; 25648 <__assert_fail@plt+0x12f5c>
   24fcc:	cmp	r3, r2
   24fd0:	beq	24fe4 <__assert_fail@plt+0x128f8>
   24fd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24fd8:	ldr	r2, [pc, #1628]	; 2563c <__assert_fail@plt+0x12f50>
   24fdc:	cmp	r3, r2
   24fe0:	bne	25008 <__assert_fail@plt+0x1291c>
   24fe4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24fe8:	mov	r2, #0
   24fec:	str	r2, [r3, #104]	; 0x68
   24ff0:	ldr	r3, [pc, #1612]	; 25644 <__assert_fail@plt+0x12f58>
   24ff4:	mov	r2, #0
   24ff8:	strb	r2, [r3, #14]
   24ffc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   25000:	bl	24d30 <__assert_fail@plt+0x12644>
   25004:	b	2503c <__assert_fail@plt+0x12950>
   25008:	ldr	r3, [pc, #1596]	; 2564c <__assert_fail@plt+0x12f60>
   2500c:	ldr	r3, [r3]
   25010:	cmp	r3, #0
   25014:	bne	2502c <__assert_fail@plt+0x12940>
   25018:	ldr	r3, [pc, #1584]	; 25650 <__assert_fail@plt+0x12f64>
   2501c:	ldr	r2, [pc, #1584]	; 25654 <__assert_fail@plt+0x12f68>
   25020:	ldr	r1, [pc, #1584]	; 25658 <__assert_fail@plt+0x12f6c>
   25024:	ldr	r0, [pc, #1584]	; 2565c <__assert_fail@plt+0x12f70>
   25028:	bl	126ec <__assert_fail@plt>
   2502c:	ldr	r3, [pc, #1560]	; 2564c <__assert_fail@plt+0x12f60>
   25030:	ldr	r2, [r3]
   25034:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25038:	str	r2, [r3, #104]	; 0x68
   2503c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25040:	mov	r2, #0
   25044:	strb	r2, [r3, #40]	; 0x28
   25048:	ldr	r3, [fp, #-108]	; 0xffffff94
   2504c:	ldr	r3, [r3]
   25050:	str	r3, [fp, #-64]	; 0xffffffc0
   25054:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25058:	str	r3, [fp, #-24]	; 0xffffffe8
   2505c:	mov	r3, #0
   25060:	str	r3, [fp, #-32]	; 0xffffffe0
   25064:	mov	r3, #0
   25068:	str	r3, [fp, #-40]	; 0xffffffd8
   2506c:	mov	r3, #0
   25070:	str	r3, [fp, #-44]	; 0xffffffd4
   25074:	b	25198 <__assert_fail@plt+0x12aac>
   25078:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2507c:	cmp	r3, #0
   25080:	beq	250e4 <__assert_fail@plt+0x129f8>
   25084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25088:	lsl	r3, r3, #2
   2508c:	ldr	r2, [fp, #-104]	; 0xffffff98
   25090:	add	r3, r2, r3
   25094:	ldr	r3, [r3]
   25098:	ldrb	r3, [r3]
   2509c:	cmp	r3, #43	; 0x2b
   250a0:	bne	250e4 <__assert_fail@plt+0x129f8>
   250a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   250a8:	lsl	r3, r3, #2
   250ac:	ldr	r2, [fp, #-104]	; 0xffffff98
   250b0:	add	r3, r2, r3
   250b4:	ldr	r3, [r3]
   250b8:	add	r3, r3, #1
   250bc:	ldrb	r3, [r3]
   250c0:	cmp	r3, #0
   250c4:	bne	250e4 <__assert_fail@plt+0x129f8>
   250c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   250cc:	cmp	r3, #0
   250d0:	beq	250e4 <__assert_fail@plt+0x129f8>
   250d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   250d8:	mov	r2, #1
   250dc:	strb	r2, [r3, #40]	; 0x28
   250e0:	b	251f8 <__assert_fail@plt+0x12b0c>
   250e4:	mov	r3, #0
   250e8:	str	r3, [fp, #-32]	; 0xffffffe0
   250ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   250f0:	lsl	r3, r3, #2
   250f4:	ldr	r2, [fp, #-104]	; 0xffffff98
   250f8:	add	r3, r2, r3
   250fc:	ldr	r3, [r3]
   25100:	ldr	r1, [pc, #1368]	; 25660 <__assert_fail@plt+0x12f74>
   25104:	mov	r0, r3
   25108:	bl	2e674 <__assert_fail@plt+0x1bf88>
   2510c:	mov	r3, r0
   25110:	cmp	r3, #0
   25114:	beq	2518c <__assert_fail@plt+0x12aa0>
   25118:	mov	r3, #1
   2511c:	str	r3, [fp, #-32]	; 0xffffffe0
   25120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25124:	lsl	r3, r3, #2
   25128:	ldr	r2, [fp, #-104]	; 0xffffff98
   2512c:	add	r3, r2, r3
   25130:	ldr	r3, [r3]
   25134:	str	r3, [fp, #-44]	; 0xffffffd4
   25138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2513c:	add	r3, r3, #1
   25140:	str	r3, [fp, #-40]	; 0xffffffd8
   25144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25148:	cmp	r3, #0
   2514c:	bne	2518c <__assert_fail@plt+0x12aa0>
   25150:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25154:	ldr	r2, [pc, #1260]	; 25648 <__assert_fail@plt+0x12f5c>
   25158:	cmp	r3, r2
   2515c:	beq	25170 <__assert_fail@plt+0x12a84>
   25160:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25164:	ldr	r2, [pc, #1232]	; 2563c <__assert_fail@plt+0x12f50>
   25168:	cmp	r3, r2
   2516c:	bne	2518c <__assert_fail@plt+0x12aa0>
   25170:	ldr	r0, [pc, #1260]	; 25664 <__assert_fail@plt+0x12f78>
   25174:	bl	12398 <gettext@plt>
   25178:	mov	r3, r0
   2517c:	mov	r2, r3
   25180:	mov	r1, #0
   25184:	mov	r0, #1
   25188:	bl	122b4 <error@plt>
   2518c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25190:	add	r3, r3, #1
   25194:	str	r3, [fp, #-24]	; 0xffffffe8
   25198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2519c:	lsl	r3, r3, #2
   251a0:	ldr	r2, [fp, #-104]	; 0xffffff98
   251a4:	add	r3, r2, r3
   251a8:	ldr	r3, [r3]
   251ac:	cmp	r3, #0
   251b0:	beq	251f8 <__assert_fail@plt+0x12b0c>
   251b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   251b8:	lsl	r3, r3, #2
   251bc:	ldr	r2, [fp, #-104]	; 0xffffff98
   251c0:	add	r3, r2, r3
   251c4:	ldr	r3, [r3]
   251c8:	ldrb	r3, [r3]
   251cc:	cmp	r3, #59	; 0x3b
   251d0:	bne	25078 <__assert_fail@plt+0x1298c>
   251d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   251d8:	lsl	r3, r3, #2
   251dc:	ldr	r2, [fp, #-104]	; 0xffffff98
   251e0:	add	r3, r2, r3
   251e4:	ldr	r3, [r3]
   251e8:	add	r3, r3, #1
   251ec:	ldrb	r3, [r3]
   251f0:	cmp	r3, #0
   251f4:	bne	25078 <__assert_fail@plt+0x1298c>
   251f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   251fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25200:	cmp	r2, r3
   25204:	beq	25224 <__assert_fail@plt+0x12b38>
   25208:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2520c:	lsl	r3, r3, #2
   25210:	ldr	r2, [fp, #-104]	; 0xffffff98
   25214:	add	r3, r2, r3
   25218:	ldr	r3, [r3]
   2521c:	cmp	r3, #0
   25220:	bne	25240 <__assert_fail@plt+0x12b54>
   25224:	ldr	r3, [fp, #-108]	; 0xffffff94
   25228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2522c:	str	r2, [r3]
   25230:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25234:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   25238:	mov	r3, #0
   2523c:	b	2562c <__assert_fail@plt+0x12f40>
   25240:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25244:	ldrb	r3, [r3, #40]	; 0x28
   25248:	cmp	r3, #0
   2524c:	beq	25368 <__assert_fail@plt+0x12c7c>
   25250:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25254:	ldr	r2, [pc, #1004]	; 25648 <__assert_fail@plt+0x12f5c>
   25258:	cmp	r3, r2
   2525c:	bne	2526c <__assert_fail@plt+0x12b80>
   25260:	ldr	r3, [pc, #1024]	; 25668 <__assert_fail@plt+0x12f7c>
   25264:	str	r3, [fp, #-48]	; 0xffffffd0
   25268:	b	25274 <__assert_fail@plt+0x12b88>
   2526c:	ldr	r3, [pc, #1016]	; 2566c <__assert_fail@plt+0x12f80>
   25270:	str	r3, [fp, #-48]	; 0xffffffd0
   25274:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25278:	cmp	r3, #1
   2527c:	ble	2529c <__assert_fail@plt+0x12bb0>
   25280:	ldr	r0, [pc, #1000]	; 25670 <__assert_fail@plt+0x12f84>
   25284:	bl	12398 <gettext@plt>
   25288:	mov	r2, r0
   2528c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25290:	mov	r1, #0
   25294:	mov	r0, #1
   25298:	bl	122b4 <error@plt>
   2529c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   252a0:	bl	123bc <strlen@plt>
   252a4:	mov	r3, r0
   252a8:	cmp	r3, #2
   252ac:	beq	25368 <__assert_fail@plt+0x12c7c>
   252b0:	sub	r0, fp, #92	; 0x5c
   252b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   252b8:	ldr	r2, [pc, #948]	; 25674 <__assert_fail@plt+0x12f88>
   252bc:	mov	r1, #19
   252c0:	bl	1241c <snprintf@plt>
   252c4:	mov	r3, r0
   252c8:	str	r3, [fp, #-68]	; 0xffffffbc
   252cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   252d0:	cmp	r3, #19
   252d4:	bls	252ec <__assert_fail@plt+0x12c00>
   252d8:	ldr	r3, [pc, #880]	; 25650 <__assert_fail@plt+0x12f64>
   252dc:	ldr	r2, [pc, #916]	; 25678 <__assert_fail@plt+0x12f8c>
   252e0:	ldr	r1, [pc, #880]	; 25658 <__assert_fail@plt+0x12f6c>
   252e4:	ldr	r0, [pc, #912]	; 2567c <__assert_fail@plt+0x12f90>
   252e8:	bl	126ec <__assert_fail@plt>
   252ec:	ldr	r0, [pc, #908]	; 25680 <__assert_fail@plt+0x12f94>
   252f0:	bl	12398 <gettext@plt>
   252f4:	mov	r5, r0
   252f8:	ldr	r3, [pc, #836]	; 25644 <__assert_fail@plt+0x12f58>
   252fc:	ldr	r3, [r3, #72]	; 0x48
   25300:	sub	r2, fp, #92	; 0x5c
   25304:	mov	r1, r3
   25308:	mov	r0, #0
   2530c:	bl	3b718 <__assert_fail@plt+0x2902c>
   25310:	mov	r6, r0
   25314:	ldr	r3, [pc, #808]	; 25644 <__assert_fail@plt+0x12f58>
   25318:	ldr	r3, [r3, #72]	; 0x48
   2531c:	ldr	r2, [pc, #828]	; 25660 <__assert_fail@plt+0x12f74>
   25320:	mov	r1, r3
   25324:	mov	r0, #1
   25328:	bl	3b718 <__assert_fail@plt+0x2902c>
   2532c:	mov	r4, r0
   25330:	ldr	r3, [pc, #780]	; 25644 <__assert_fail@plt+0x12f58>
   25334:	ldr	r3, [r3, #72]	; 0x48
   25338:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2533c:	mov	r1, r3
   25340:	mov	r0, #2
   25344:	bl	3b718 <__assert_fail@plt+0x2902c>
   25348:	mov	r3, r0
   2534c:	str	r3, [sp, #4]
   25350:	str	r4, [sp]
   25354:	mov	r3, r6
   25358:	mov	r2, r5
   2535c:	mov	r1, #0
   25360:	mov	r0, #1
   25364:	bl	122b4 <error@plt>
   25368:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2536c:	add	r3, r3, #4
   25370:	mov	r1, #2048	; 0x800
   25374:	mov	r0, r3
   25378:	bl	26d30 <__assert_fail@plt+0x14644>
   2537c:	str	r0, [fp, #-72]	; 0xffffffb8
   25380:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25384:	cmp	r3, #0
   25388:	beq	253b0 <__assert_fail@plt+0x12cc4>
   2538c:	cmp	r3, #2
   25390:	bhi	253b4 <__assert_fail@plt+0x12cc8>
   25394:	ldr	r0, [pc, #744]	; 25684 <__assert_fail@plt+0x12f98>
   25398:	bl	12398 <gettext@plt>
   2539c:	mov	r3, r0
   253a0:	mov	r2, r3
   253a4:	mov	r1, #0
   253a8:	mov	r0, #1
   253ac:	bl	122b4 <error@plt>
   253b0:	nop			; (mov r0, r0)
   253b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   253b8:	add	r3, r3, #4
   253bc:	mov	r0, r3
   253c0:	bl	26e9c <__assert_fail@plt+0x147b0>
   253c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   253c8:	ldr	r2, [pc, #696]	; 25688 <__assert_fail@plt+0x12f9c>
   253cc:	str	r2, [r3, #36]	; 0x24
   253d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   253d4:	ldrb	r3, [r3, #40]	; 0x28
   253d8:	cmp	r3, #0
   253dc:	beq	254f8 <__assert_fail@plt+0x12e0c>
   253e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   253e4:	mov	r2, #0
   253e8:	str	r2, [r3, #92]	; 0x5c
   253ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   253f0:	mov	r2, #0
   253f4:	str	r2, [r3, #28]
   253f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   253fc:	mov	r2, #0
   25400:	str	r2, [r3, #24]
   25404:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25408:	mov	r2, #0
   2540c:	str	r2, [r3, #40]	; 0x28
   25410:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25414:	mov	r2, #0
   25418:	str	r2, [r3, #44]	; 0x2c
   2541c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25420:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25424:	sub	r3, r2, r3
   25428:	sub	r3, r3, #1
   2542c:	mov	r2, r3
   25430:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25434:	str	r2, [r3, #32]
   25438:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2543c:	add	r0, r3, #4
   25440:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25444:	add	r3, r3, #48	; 0x30
   25448:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2544c:	mov	r1, r3
   25450:	bl	26f10 <__assert_fail@plt+0x14824>
   25454:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25458:	str	r3, [fp, #-28]	; 0xffffffe4
   2545c:	b	254e0 <__assert_fail@plt+0x12df4>
   25460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25464:	add	r4, r3, #4
   25468:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2546c:	add	r5, r3, #48	; 0x30
   25470:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25474:	lsl	r3, r3, #2
   25478:	ldr	r2, [fp, #-104]	; 0xffffff98
   2547c:	add	r3, r2, r3
   25480:	ldr	r6, [r3]
   25484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25488:	lsl	r3, r3, #2
   2548c:	ldr	r2, [fp, #-104]	; 0xffffff98
   25490:	add	r3, r2, r3
   25494:	ldr	r3, [r3]
   25498:	mov	r0, r3
   2549c:	bl	123bc <strlen@plt>
   254a0:	mov	r3, r0
   254a4:	add	r2, r3, #1
   254a8:	mov	r3, #1
   254ac:	str	r3, [sp, #8]
   254b0:	mov	r3, #0
   254b4:	str	r3, [sp, #4]
   254b8:	mov	r3, #0
   254bc:	str	r3, [sp]
   254c0:	mov	r3, r2
   254c4:	mov	r2, r6
   254c8:	mov	r1, r5
   254cc:	mov	r0, r4
   254d0:	bl	268dc <__assert_fail@plt+0x141f0>
   254d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   254d8:	add	r3, r3, #1
   254dc:	str	r3, [fp, #-28]	; 0xffffffe4
   254e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   254e4:	sub	r2, r3, #1
   254e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   254ec:	cmp	r2, r3
   254f0:	bgt	25460 <__assert_fail@plt+0x12d74>
   254f4:	b	255ec <__assert_fail@plt+0x12f00>
   254f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   254fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25500:	sub	r2, r2, r3
   25504:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25508:	str	r2, [r3, #96]	; 0x60
   2550c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25510:	ldr	r2, [pc, #328]	; 25660 <__assert_fail@plt+0x12f74>
   25514:	str	r2, [r3, #28]
   25518:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2551c:	ldr	r3, [r3, #28]
   25520:	mov	r0, r3
   25524:	bl	123bc <strlen@plt>
   25528:	mov	r2, r0
   2552c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25530:	str	r2, [r3, #24]
   25534:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25538:	mov	r2, #0
   2553c:	str	r2, [r3, #40]	; 0x28
   25540:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25544:	mov	r2, #0
   25548:	str	r2, [r3, #44]	; 0x2c
   2554c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25550:	ldr	r3, [r3, #96]	; 0x60
   25554:	lsl	r3, r3, #2
   25558:	mov	r0, r3
   2555c:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   25560:	mov	r3, r0
   25564:	mov	r2, r3
   25568:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2556c:	str	r2, [r3, #92]	; 0x5c
   25570:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25574:	add	r0, r3, #4
   25578:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2557c:	add	r3, r3, #48	; 0x30
   25580:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25584:	mov	r1, r3
   25588:	bl	26f10 <__assert_fail@plt+0x14824>
   2558c:	mov	r3, #0
   25590:	str	r3, [fp, #-28]	; 0xffffffe4
   25594:	b	255d8 <__assert_fail@plt+0x12eec>
   25598:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2559c:	ldr	r2, [r3, #92]	; 0x5c
   255a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255a4:	lsl	r3, r3, #2
   255a8:	add	r3, r2, r3
   255ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   255b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   255b4:	add	r2, r1, r2
   255b8:	lsl	r2, r2, #2
   255bc:	ldr	r1, [fp, #-104]	; 0xffffff98
   255c0:	add	r2, r1, r2
   255c4:	ldr	r2, [r2]
   255c8:	str	r2, [r3]
   255cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255d0:	add	r3, r3, #1
   255d4:	str	r3, [fp, #-28]	; 0xffffffe4
   255d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   255dc:	ldr	r2, [r3, #96]	; 0x60
   255e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255e4:	cmp	r2, r3
   255e8:	bgt	25598 <__assert_fail@plt+0x12eac>
   255ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   255f0:	lsl	r3, r3, #2
   255f4:	ldr	r2, [fp, #-104]	; 0xffffff98
   255f8:	add	r3, r2, r3
   255fc:	ldr	r3, [r3]
   25600:	cmp	r3, #0
   25604:	bne	25618 <__assert_fail@plt+0x12f2c>
   25608:	ldr	r3, [fp, #-108]	; 0xffffff94
   2560c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25610:	str	r2, [r3]
   25614:	b	25628 <__assert_fail@plt+0x12f3c>
   25618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2561c:	add	r2, r3, #1
   25620:	ldr	r3, [fp, #-108]	; 0xffffff94
   25624:	str	r2, [r3]
   25628:	mov	r3, #1
   2562c:	mov	r0, r3
   25630:	sub	sp, fp, #16
   25634:	pop	{r4, r5, r6, fp, pc}
   25638:			; <UNDEFINED> instruction: 0x00067eb4
   2563c:	ldrdeq	r5, [r1], -ip
   25640:	andeq	r5, r1, r8, ror r5
   25644:	andeq	sp, r7, ip, asr #32
   25648:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   2564c:	andeq	ip, r7, ip, asr #14
   25650:	andeq	r8, r6, r8, ror #2
   25654:	andeq	r0, r0, r9, ror fp
   25658:	andeq	r7, r6, ip, asr r2
   2565c:	andeq	r7, r6, ip, asr #29
   25660:	andeq	r7, r6, r0, ror #29
   25664:	andeq	r7, r6, r4, ror #29
   25668:	andeq	r7, r6, r8, asr pc
   2566c:	andeq	r7, r6, ip, asr pc
   25670:	andeq	r7, r6, r0, ror #30
   25674:	muleq	r6, r8, pc	; <UNPREDICTABLE>
   25678:	andeq	r0, r0, r6, asr #23
   2567c:	andeq	r7, r6, ip, lsr #31
   25680:	andeq	r7, r6, r4, asr #31
   25684:	andeq	r8, r6, r0
   25688:	andeq	r7, r1, r0, ror r0
   2568c:	push	{fp, lr}
   25690:	add	fp, sp, #4
   25694:	sub	sp, sp, #48	; 0x30
   25698:	str	r0, [fp, #-32]	; 0xffffffe0
   2569c:	str	r1, [fp, #-36]	; 0xffffffdc
   256a0:	sub	r1, fp, #44	; 0x2c
   256a4:	stm	r1, {r2, r3}
   256a8:	vstr	d0, [fp, #-52]	; 0xffffffcc
   256ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   256b0:	add	r2, r3, #4
   256b4:	sub	r3, fp, #32
   256b8:	mov	r1, r2
   256bc:	mov	r0, r3
   256c0:	bl	25c1c <__assert_fail@plt+0x13530>
   256c4:	mov	r3, r0
   256c8:	cmp	r3, #0
   256cc:	beq	25890 <__assert_fail@plt+0x131a4>
   256d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   256d4:	ldr	r3, [r3, #4]
   256d8:	cmp	r3, #1
   256dc:	beq	256f0 <__assert_fail@plt+0x13004>
   256e0:	cmp	r3, #1
   256e4:	bcc	25700 <__assert_fail@plt+0x13014>
   256e8:	cmp	r3, #2
   256ec:	b	25710 <__assert_fail@plt+0x13024>
   256f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   256f4:	mov	r2, #0
   256f8:	str	r2, [r3, #4]
   256fc:	b	25710 <__assert_fail@plt+0x13024>
   25700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25704:	mov	r2, #1
   25708:	str	r2, [r3, #4]
   2570c:	nop			; (mov r0, r0)
   25710:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25714:	sub	r2, fp, #20
   25718:	ldr	r3, [pc, #392]	; 258a8 <__assert_fail@plt+0x131bc>
   2571c:	mov	r1, #0
   25720:	bl	3dcd0 <__assert_fail@plt+0x2b5e4>
   25724:	mov	r3, r0
   25728:	cmp	r3, #0
   2572c:	beq	25888 <__assert_fail@plt+0x1319c>
   25730:	vldr	d6, [fp, #-20]	; 0xffffffec
   25734:	vldr	d7, [fp, #-52]	; 0xffffffcc
   25738:	vmul.f64	d7, d6, d7
   2573c:	sub	r3, fp, #28
   25740:	mov	r0, r3
   25744:	vmov.f64	d0, d7
   25748:	bl	12350 <modf@plt>
   2574c:	vstr	d0, [fp, #-12]
   25750:	vldr	d7, [fp, #-12]
   25754:	vldr	d6, [pc, #324]	; 258a0 <__assert_fail@plt+0x131b4>
   25758:	vmul.f64	d7, d7, d6
   2575c:	vstr	d7, [fp, #-12]
   25760:	ldr	r3, [pc, #324]	; 258ac <__assert_fail@plt+0x131c0>
   25764:	ldr	r3, [r3]
   25768:	vmov	s15, r3
   2576c:	vcvt.f64.s32	d6, s15
   25770:	vldr	d7, [fp, #-12]
   25774:	vcmpe.f64	d6, d7
   25778:	vmrs	APSR_nzcv, fpscr
   2577c:	bgt	25794 <__assert_fail@plt+0x130a8>
   25780:	ldr	r3, [pc, #296]	; 258b0 <__assert_fail@plt+0x131c4>
   25784:	ldr	r2, [pc, #296]	; 258b4 <__assert_fail@plt+0x131c8>
   25788:	ldr	r1, [pc, #296]	; 258b8 <__assert_fail@plt+0x131cc>
   2578c:	ldr	r0, [pc, #296]	; 258bc <__assert_fail@plt+0x131d0>
   25790:	bl	126ec <__assert_fail@plt>
   25794:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25798:	vmov	s15, r3
   2579c:	vcvt.f64.s32	d6, s15
   257a0:	vldr	d7, [fp, #-28]	; 0xffffffe4
   257a4:	vsub.f64	d7, d6, d7
   257a8:	vcvt.s32.f64	s15, d7
   257ac:	vmov	r2, s15
   257b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   257b4:	str	r2, [r3, #8]
   257b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   257bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   257c0:	ldr	r3, [r3, #8]
   257c4:	cmp	r2, r3
   257c8:	movlt	r3, #1
   257cc:	movge	r3, #0
   257d0:	uxtb	r2, r3
   257d4:	vldr	d7, [fp, #-28]	; 0xffffffe4
   257d8:	vcmpe.f64	d7, #0.0
   257dc:	vmrs	APSR_nzcv, fpscr
   257e0:	movmi	r3, #1
   257e4:	movpl	r3, #0
   257e8:	uxtb	r3, r3
   257ec:	eor	r3, r3, r2
   257f0:	uxtb	r3, r3
   257f4:	cmp	r3, #0
   257f8:	beq	25810 <__assert_fail@plt+0x13124>
   257fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25800:	ldr	r2, [fp, #4]
   25804:	mov	r1, #0
   25808:	mov	r0, #1
   2580c:	bl	122b4 <error@plt>
   25810:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25814:	vmov	s15, r3
   25818:	vcvt.f64.s32	d6, s15
   2581c:	vldr	d7, [fp, #-12]
   25820:	vsub.f64	d7, d6, d7
   25824:	vcvt.s32.f64	s15, d7
   25828:	vmov	r2, s15
   2582c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25830:	str	r2, [r3, #12]
   25834:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25838:	vmov	s15, r3
   2583c:	vcvt.f64.s32	d6, s15
   25840:	vldr	d7, [fp, #-12]
   25844:	vcmpe.f64	d6, d7
   25848:	vmrs	APSR_nzcv, fpscr
   2584c:	bpl	25880 <__assert_fail@plt+0x13194>
   25850:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25854:	ldr	r2, [r3, #12]
   25858:	ldr	r3, [pc, #76]	; 258ac <__assert_fail@plt+0x131c0>
   2585c:	ldr	r3, [r3]
   25860:	add	r2, r2, r3
   25864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25868:	str	r2, [r3, #12]
   2586c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25870:	ldr	r3, [r3, #8]
   25874:	sub	r2, r3, #1
   25878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2587c:	str	r2, [r3, #8]
   25880:	mov	r3, #1
   25884:	b	25894 <__assert_fail@plt+0x131a8>
   25888:	mov	r3, #0
   2588c:	b	25894 <__assert_fail@plt+0x131a8>
   25890:	mov	r3, #0
   25894:	mov	r0, r3
   25898:	sub	sp, fp, #4
   2589c:	pop	{fp, pc}
   258a0:	andeq	r0, r0, r0
   258a4:	bicmi	ip, sp, r5, ror #26
   258a8:	andeq	r2, r1, ip, ror r4
   258ac:	andeq	r8, r6, r8, ror r1
   258b0:	andeq	r8, r6, ip, ror r1
   258b4:	andeq	r0, r0, sp, asr #24
   258b8:	andeq	r7, r6, ip, asr r2
   258bc:	andeq	r8, r6, ip, lsr #32
   258c0:	push	{r4, r5, r6, fp, lr}
   258c4:	add	fp, sp, #16
   258c8:	sub	sp, sp, #92	; 0x5c
   258cc:	str	r0, [fp, #-88]	; 0xffffffa8
   258d0:	str	r1, [fp, #-92]	; 0xffffffa4
   258d4:	str	r2, [fp, #-96]	; 0xffffffa0
   258d8:	ldr	r0, [pc, #760]	; 25bd8 <__assert_fail@plt+0x134ec>
   258dc:	bl	12398 <gettext@plt>
   258e0:	str	r0, [fp, #-24]	; 0xffffffe8
   258e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   258e8:	ldr	r3, [r3]
   258ec:	str	r3, [fp, #-28]	; 0xffffffe4
   258f0:	sub	r3, fp, #72	; 0x48
   258f4:	mov	r2, r3
   258f8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   258fc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   25900:	bl	20a68 <__assert_fail@plt+0xe37c>
   25904:	mov	r3, r0
   25908:	eor	r3, r3, #1
   2590c:	uxtb	r3, r3
   25910:	cmp	r3, #0
   25914:	beq	25920 <__assert_fail@plt+0x13234>
   25918:	mov	r3, #0
   2591c:	b	25bc0 <__assert_fail@plt+0x134d4>
   25920:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25924:	str	r3, [fp, #-32]	; 0xffffffe0
   25928:	ldr	r2, [pc, #684]	; 25bdc <__assert_fail@plt+0x134f0>
   2592c:	sub	r3, fp, #80	; 0x50
   25930:	add	r2, r2, #28
   25934:	ldm	r2, {r0, r1}
   25938:	stm	r3, {r0, r1}
   2593c:	sub	r2, fp, #68	; 0x44
   25940:	sub	r3, fp, #72	; 0x48
   25944:	mov	r1, r2
   25948:	mov	r0, r3
   2594c:	bl	25c1c <__assert_fail@plt+0x13530>
   25950:	mov	r3, r0
   25954:	cmp	r3, #0
   25958:	beq	259c8 <__assert_fail@plt+0x132dc>
   2595c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25960:	cmp	r3, #1
   25964:	bne	259c8 <__assert_fail@plt+0x132dc>
   25968:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2596c:	ldr	r3, [pc, #620]	; 25be0 <__assert_fail@plt+0x134f4>
   25970:	add	r3, r2, r3
   25974:	mov	r2, r3
   25978:	asr	r3, r2, #31
   2597c:	strd	r2, [fp, #-44]	; 0xffffffd4
   25980:	ldr	r2, [fp, #-80]	; 0xffffffb0
   25984:	ldr	r3, [pc, #596]	; 25be0 <__assert_fail@plt+0x134f4>
   25988:	add	r3, r2, r3
   2598c:	str	r3, [fp, #-80]	; 0xffffffb0
   25990:	ldr	r3, [fp, #-80]	; 0xffffffb0
   25994:	mov	r0, r3
   25998:	asr	r1, r0, #31
   2599c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   259a0:	cmp	r1, r3
   259a4:	cmpeq	r0, r2
   259a8:	beq	259c8 <__assert_fail@plt+0x132dc>
   259ac:	ldr	r0, [pc, #560]	; 25be4 <__assert_fail@plt+0x134f8>
   259b0:	bl	12398 <gettext@plt>
   259b4:	mov	r3, r0
   259b8:	mov	r2, r3
   259bc:	mov	r1, #0
   259c0:	mov	r0, #1
   259c4:	bl	122b4 <error@plt>
   259c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   259cc:	str	r3, [fp, #-72]	; 0xffffffb8
   259d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   259d4:	sub	r1, fp, #64	; 0x40
   259d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   259dc:	str	r3, [sp]
   259e0:	vldr	d0, [pc, #488]	; 25bd0 <__assert_fail@plt+0x134e4>
   259e4:	sub	r3, fp, #80	; 0x50
   259e8:	ldm	r3, {r2, r3}
   259ec:	bl	2568c <__assert_fail@plt+0x12fa0>
   259f0:	mov	r3, r0
   259f4:	eor	r3, r3, #1
   259f8:	uxtb	r3, r3
   259fc:	cmp	r3, #0
   25a00:	beq	25a18 <__assert_fail@plt+0x1332c>
   25a04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25a0c:	str	r2, [r3]
   25a10:	mov	r3, #0
   25a14:	b	25bc0 <__assert_fail@plt+0x134d4>
   25a18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25a1c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   25a20:	bl	1a948 <__assert_fail@plt+0x825c>
   25a24:	str	r0, [fp, #-48]	; 0xffffffd0
   25a28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25a2c:	add	ip, r3, #40	; 0x28
   25a30:	sub	r3, fp, #64	; 0x40
   25a34:	ldm	r3, {r0, r1, r2, r3}
   25a38:	stm	ip, {r0, r1, r2, r3}
   25a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25a40:	mov	r0, r3
   25a44:	bl	20960 <__assert_fail@plt+0xe274>
   25a48:	vmov.f32	s15, s0
   25a4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25a50:	vstr	s15, [r3, #28]
   25a54:	ldr	r3, [pc, #384]	; 25bdc <__assert_fail@plt+0x134f0>
   25a58:	ldr	r3, [r3, #44]	; 0x2c
   25a5c:	and	r3, r3, #1
   25a60:	cmp	r3, #0
   25a64:	beq	25bbc <__assert_fail@plt+0x134d0>
   25a68:	ldr	r3, [pc, #376]	; 25be8 <__assert_fail@plt+0x134fc>
   25a6c:	ldr	r0, [r3]
   25a70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25a74:	ldr	r3, [r3, #4]
   25a78:	mov	r2, r3
   25a7c:	ldr	r1, [pc, #360]	; 25bec <__assert_fail@plt+0x13500>
   25a80:	bl	123f8 <fprintf@plt>
   25a84:	ldr	r3, [pc, #348]	; 25be8 <__assert_fail@plt+0x134fc>
   25a88:	ldr	r0, [r3]
   25a8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25a90:	cmp	r3, #0
   25a94:	beq	25ac8 <__assert_fail@plt+0x133dc>
   25a98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25a9c:	cmp	r3, #1
   25aa0:	beq	25ac0 <__assert_fail@plt+0x133d4>
   25aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25aa8:	cmp	r3, #2
   25aac:	bne	25ab8 <__assert_fail@plt+0x133cc>
   25ab0:	ldr	r2, [pc, #312]	; 25bf0 <__assert_fail@plt+0x13504>
   25ab4:	b	25acc <__assert_fail@plt+0x133e0>
   25ab8:	ldr	r2, [pc, #308]	; 25bf4 <__assert_fail@plt+0x13508>
   25abc:	b	25acc <__assert_fail@plt+0x133e0>
   25ac0:	ldr	r2, [pc, #304]	; 25bf8 <__assert_fail@plt+0x1350c>
   25ac4:	b	25acc <__assert_fail@plt+0x133e0>
   25ac8:	ldr	r2, [pc, #300]	; 25bfc <__assert_fail@plt+0x13510>
   25acc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25ad0:	cmp	r3, #0
   25ad4:	beq	25b08 <__assert_fail@plt+0x1341c>
   25ad8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25adc:	cmp	r3, #1
   25ae0:	beq	25b00 <__assert_fail@plt+0x13414>
   25ae4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25ae8:	cmp	r3, #2
   25aec:	bne	25af8 <__assert_fail@plt+0x1340c>
   25af0:	ldr	r3, [pc, #264]	; 25c00 <__assert_fail@plt+0x13514>
   25af4:	b	25b0c <__assert_fail@plt+0x13420>
   25af8:	ldr	r3, [pc, #260]	; 25c04 <__assert_fail@plt+0x13518>
   25afc:	b	25b0c <__assert_fail@plt+0x13420>
   25b00:	ldr	r3, [pc, #256]	; 25c08 <__assert_fail@plt+0x1351c>
   25b04:	b	25b0c <__assert_fail@plt+0x13420>
   25b08:	ldr	r3, [pc, #252]	; 25c0c <__assert_fail@plt+0x13520>
   25b0c:	ldr	r1, [pc, #252]	; 25c10 <__assert_fail@plt+0x13524>
   25b10:	bl	123f8 <fprintf@plt>
   25b14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25b18:	ldr	r3, [r3, #48]	; 0x30
   25b1c:	str	r3, [fp, #-84]	; 0xffffffac
   25b20:	ldr	r3, [pc, #192]	; 25be8 <__assert_fail@plt+0x134fc>
   25b24:	ldr	r6, [r3]
   25b28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25b2c:	ldr	r3, [r3, #48]	; 0x30
   25b30:	mov	r4, r3
   25b34:	asr	r5, r4, #31
   25b38:	sub	r3, fp, #84	; 0x54
   25b3c:	mov	r0, r3
   25b40:	bl	12170 <ctime@plt>
   25b44:	mov	r3, r0
   25b48:	str	r3, [sp]
   25b4c:	mov	r2, r4
   25b50:	mov	r3, r5
   25b54:	ldr	r1, [pc, #184]	; 25c14 <__assert_fail@plt+0x13528>
   25b58:	mov	r0, r6
   25b5c:	bl	123f8 <fprintf@plt>
   25b60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25b64:	cmp	r3, #2
   25b68:	bne	25bbc <__assert_fail@plt+0x134d0>
   25b6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25b70:	ldr	r3, [r3, #48]	; 0x30
   25b74:	add	r3, r3, #86016	; 0x15000
   25b78:	add	r3, r3, #384	; 0x180
   25b7c:	str	r3, [fp, #-84]	; 0xffffffac
   25b80:	ldr	r3, [pc, #96]	; 25be8 <__assert_fail@plt+0x134fc>
   25b84:	ldr	r6, [r3]
   25b88:	ldr	r3, [fp, #-84]	; 0xffffffac
   25b8c:	mov	r4, r3
   25b90:	asr	r5, r4, #31
   25b94:	sub	r3, fp, #84	; 0x54
   25b98:	mov	r0, r3
   25b9c:	bl	12170 <ctime@plt>
   25ba0:	mov	r3, r0
   25ba4:	str	r3, [sp]
   25ba8:	mov	r2, r4
   25bac:	mov	r3, r5
   25bb0:	ldr	r1, [pc, #96]	; 25c18 <__assert_fail@plt+0x1352c>
   25bb4:	mov	r0, r6
   25bb8:	bl	123f8 <fprintf@plt>
   25bbc:	mov	r3, #1
   25bc0:	mov	r0, r3
   25bc4:	sub	sp, fp, #16
   25bc8:	pop	{r4, r5, r6, fp, pc}
   25bcc:	nop			; (mov r0, r0)
   25bd0:	andeq	r0, r0, r0
   25bd4:	rscsmi	r1, r5, r0, lsl #16
   25bd8:	andeq	r7, r6, r0, lsl #20
   25bdc:	andeq	sp, r7, ip, asr #32
   25be0:	andeq	r5, r1, pc, ror r1
   25be4:	andeq	r8, r6, r8, asr #32
   25be8:	andeq	ip, r7, r8, lsr #14
   25bec:	andeq	r8, r6, r8, lsl #1
   25bf0:	muleq	r6, r8, r0
   25bf4:	muleq	r6, ip, r0
   25bf8:	andeq	r8, r6, r0, lsr #1
   25bfc:	andeq	r8, r6, r4, lsr #1
   25c00:	andeq	r8, r6, r8, lsr #1
   25c04:	andeq	r8, r6, ip, lsr #1
   25c08:	strheq	r8, [r6], -r0
   25c0c:	strheq	r8, [r6], -r4
   25c10:	strheq	r8, [r6], -r8	; <UNPREDICTABLE>
   25c14:	ldrdeq	r8, [r6], -r0
   25c18:	ldrdeq	r8, [r6], -r8	; <UNPREDICTABLE>
   25c1c:	push	{fp}		; (str fp, [sp, #-4]!)
   25c20:	add	fp, sp, #0
   25c24:	sub	sp, sp, #12
   25c28:	str	r0, [fp, #-8]
   25c2c:	str	r1, [fp, #-12]
   25c30:	ldr	r3, [fp, #-8]
   25c34:	ldr	r3, [r3]
   25c38:	ldrb	r3, [r3]
   25c3c:	cmp	r3, #43	; 0x2b
   25c40:	beq	25c50 <__assert_fail@plt+0x13564>
   25c44:	cmp	r3, #45	; 0x2d
   25c48:	beq	25c74 <__assert_fail@plt+0x13588>
   25c4c:	b	25c98 <__assert_fail@plt+0x135ac>
   25c50:	ldr	r3, [fp, #-12]
   25c54:	mov	r2, #0
   25c58:	str	r2, [r3]
   25c5c:	ldr	r3, [fp, #-8]
   25c60:	ldr	r3, [r3]
   25c64:	add	r2, r3, #1
   25c68:	ldr	r3, [fp, #-8]
   25c6c:	str	r2, [r3]
   25c70:	b	25ca8 <__assert_fail@plt+0x135bc>
   25c74:	ldr	r3, [fp, #-12]
   25c78:	mov	r2, #1
   25c7c:	str	r2, [r3]
   25c80:	ldr	r3, [fp, #-8]
   25c84:	ldr	r3, [r3]
   25c88:	add	r2, r3, #1
   25c8c:	ldr	r3, [fp, #-8]
   25c90:	str	r2, [r3]
   25c94:	b	25ca8 <__assert_fail@plt+0x135bc>
   25c98:	ldr	r3, [fp, #-12]
   25c9c:	mov	r2, #2
   25ca0:	str	r2, [r3]
   25ca4:	nop			; (mov r0, r0)
   25ca8:	mov	r3, #1
   25cac:	mov	r0, r3
   25cb0:	add	sp, fp, #0
   25cb4:	pop	{fp}		; (ldr fp, [sp], #4)
   25cb8:	bx	lr
   25cbc:	push	{fp, lr}
   25cc0:	add	fp, sp, #4
   25cc4:	sub	sp, sp, #32
   25cc8:	str	r0, [fp, #-16]
   25ccc:	str	r1, [fp, #-20]	; 0xffffffec
   25cd0:	str	r2, [fp, #-24]	; 0xffffffe8
   25cd4:	ldr	r3, [fp, #-16]
   25cd8:	cmp	r3, #0
   25cdc:	bne	25ce8 <__assert_fail@plt+0x135fc>
   25ce0:	mov	r3, #0
   25ce4:	b	25d50 <__assert_fail@plt+0x13664>
   25ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25cec:	cmp	r3, #0
   25cf0:	beq	25d20 <__assert_fail@plt+0x13634>
   25cf4:	sub	r3, fp, #16
   25cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25cfc:	mov	r0, r3
   25d00:	bl	25c1c <__assert_fail@plt+0x13530>
   25d04:	mov	r3, r0
   25d08:	eor	r3, r3, #1
   25d0c:	uxtb	r3, r3
   25d10:	cmp	r3, #0
   25d14:	beq	25d20 <__assert_fail@plt+0x13634>
   25d18:	mov	r3, #0
   25d1c:	b	25d50 <__assert_fail@plt+0x13664>
   25d20:	ldr	r0, [fp, #-16]
   25d24:	sub	r1, fp, #8
   25d28:	ldr	r3, [pc, #44]	; 25d5c <__assert_fail@plt+0x13670>
   25d2c:	str	r3, [sp]
   25d30:	ldr	r3, [fp, #-20]	; 0xffffffec
   25d34:	mov	r2, #10
   25d38:	bl	3e5d8 <__assert_fail@plt+0x2beec>
   25d3c:	mov	r3, r0
   25d40:	cmp	r3, #0
   25d44:	moveq	r3, #1
   25d48:	movne	r3, #0
   25d4c:	uxtb	r3, r3
   25d50:	mov	r0, r3
   25d54:	sub	sp, fp, #4
   25d58:	pop	{fp, pc}
   25d5c:	andeq	r7, r6, ip, asr pc
   25d60:	push	{fp, lr}
   25d64:	add	fp, sp, #4
   25d68:	sub	sp, sp, #40	; 0x28
   25d6c:	str	r0, [fp, #-32]	; 0xffffffe0
   25d70:	str	r1, [fp, #-36]	; 0xffffffdc
   25d74:	str	r2, [fp, #-40]	; 0xffffffd8
   25d78:	sub	r3, fp, #12
   25d7c:	mov	r2, r3
   25d80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25d88:	bl	20a68 <__assert_fail@plt+0xe37c>
   25d8c:	mov	r3, r0
   25d90:	cmp	r3, #0
   25d94:	beq	25ec4 <__assert_fail@plt+0x137d8>
   25d98:	ldr	r3, [fp, #-12]
   25d9c:	sub	r2, fp, #24
   25da0:	sub	r1, fp, #20
   25da4:	mov	r0, r3
   25da8:	bl	25cbc <__assert_fail@plt+0x135d0>
   25dac:	mov	r3, r0
   25db0:	cmp	r3, #0
   25db4:	beq	25ec4 <__assert_fail@plt+0x137d8>
   25db8:	ldr	r3, [fp, #-12]
   25dbc:	mov	r1, r3
   25dc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25dc4:	bl	1a948 <__assert_fail@plt+0x825c>
   25dc8:	str	r0, [fp, #-8]
   25dcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25dd0:	ldr	r3, [fp, #-8]
   25dd4:	str	r2, [r3, #40]	; 0x28
   25dd8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25ddc:	ldr	r1, [fp, #-8]
   25de0:	strd	r2, [r1, #48]	; 0x30
   25de4:	ldr	r3, [pc, #232]	; 25ed4 <__assert_fail@plt+0x137e8>
   25de8:	ldr	r3, [r3, #44]	; 0x2c
   25dec:	and	r3, r3, #1
   25df0:	cmp	r3, #0
   25df4:	beq	25ebc <__assert_fail@plt+0x137d0>
   25df8:	ldr	r3, [pc, #216]	; 25ed8 <__assert_fail@plt+0x137ec>
   25dfc:	ldr	r0, [r3]
   25e00:	ldr	r3, [fp, #-8]
   25e04:	ldr	r3, [r3, #4]
   25e08:	mov	r2, r3
   25e0c:	ldr	r1, [pc, #200]	; 25edc <__assert_fail@plt+0x137f0>
   25e10:	bl	123f8 <fprintf@plt>
   25e14:	ldr	r3, [pc, #188]	; 25ed8 <__assert_fail@plt+0x137ec>
   25e18:	ldr	r0, [r3]
   25e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e20:	cmp	r3, #0
   25e24:	beq	25e58 <__assert_fail@plt+0x1376c>
   25e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e2c:	cmp	r3, #1
   25e30:	beq	25e50 <__assert_fail@plt+0x13764>
   25e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e38:	cmp	r3, #2
   25e3c:	bne	25e48 <__assert_fail@plt+0x1375c>
   25e40:	ldr	r2, [pc, #152]	; 25ee0 <__assert_fail@plt+0x137f4>
   25e44:	b	25e5c <__assert_fail@plt+0x13770>
   25e48:	ldr	r2, [pc, #148]	; 25ee4 <__assert_fail@plt+0x137f8>
   25e4c:	b	25e5c <__assert_fail@plt+0x13770>
   25e50:	ldr	r2, [pc, #144]	; 25ee8 <__assert_fail@plt+0x137fc>
   25e54:	b	25e5c <__assert_fail@plt+0x13770>
   25e58:	ldr	r2, [pc, #140]	; 25eec <__assert_fail@plt+0x13800>
   25e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e60:	cmp	r3, #0
   25e64:	beq	25e98 <__assert_fail@plt+0x137ac>
   25e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e6c:	cmp	r3, #1
   25e70:	beq	25e90 <__assert_fail@plt+0x137a4>
   25e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e78:	cmp	r3, #2
   25e7c:	bne	25e88 <__assert_fail@plt+0x1379c>
   25e80:	ldr	r3, [pc, #104]	; 25ef0 <__assert_fail@plt+0x13804>
   25e84:	b	25e9c <__assert_fail@plt+0x137b0>
   25e88:	ldr	r3, [pc, #100]	; 25ef4 <__assert_fail@plt+0x13808>
   25e8c:	b	25e9c <__assert_fail@plt+0x137b0>
   25e90:	ldr	r3, [pc, #96]	; 25ef8 <__assert_fail@plt+0x1380c>
   25e94:	b	25e9c <__assert_fail@plt+0x137b0>
   25e98:	ldr	r3, [pc, #92]	; 25efc <__assert_fail@plt+0x13810>
   25e9c:	ldr	r1, [pc, #92]	; 25f00 <__assert_fail@plt+0x13814>
   25ea0:	bl	123f8 <fprintf@plt>
   25ea4:	ldr	r3, [pc, #44]	; 25ed8 <__assert_fail@plt+0x137ec>
   25ea8:	ldr	r0, [r3]
   25eac:	ldr	r3, [fp, #-8]
   25eb0:	ldrd	r2, [r3, #48]	; 0x30
   25eb4:	ldr	r1, [pc, #72]	; 25f04 <__assert_fail@plt+0x13818>
   25eb8:	bl	123f8 <fprintf@plt>
   25ebc:	ldr	r3, [fp, #-8]
   25ec0:	b	25ec8 <__assert_fail@plt+0x137dc>
   25ec4:	mov	r3, #0
   25ec8:	mov	r0, r3
   25ecc:	sub	sp, fp, #4
   25ed0:	pop	{fp, pc}
   25ed4:	andeq	sp, r7, ip, asr #32
   25ed8:	andeq	ip, r7, r8, lsr #14
   25edc:	andeq	r8, r6, r8, lsl #1
   25ee0:	muleq	r6, r8, r0
   25ee4:	muleq	r6, ip, r0
   25ee8:	andeq	r8, r6, r0, lsr #1
   25eec:	andeq	r8, r6, r4, lsr #1
   25ef0:	strdeq	r8, [r6], -r4
   25ef4:	andeq	r8, r6, ip, lsr #1
   25ef8:	strheq	r8, [r6], -r0
   25efc:	strheq	r8, [r6], -r4
   25f00:	strheq	r8, [r6], -r8	; <UNPREDICTABLE>
   25f04:	strdeq	r8, [r6], -r8	; <UNPREDICTABLE>
   25f08:	push	{fp, lr}
   25f0c:	add	fp, sp, #4
   25f10:	sub	sp, sp, #8
   25f14:	str	r0, [fp, #-8]
   25f18:	str	r1, [fp, #-12]
   25f1c:	ldr	r3, [fp, #-12]
   25f20:	mov	r2, #0
   25f24:	str	r2, [r3]
   25f28:	mov	r0, #0
   25f2c:	bl	39598 <__assert_fail@plt+0x26eac>
   25f30:	mov	r3, r0
   25f34:	mov	r2, r3
   25f38:	ldr	r3, [fp, #-12]
   25f3c:	str	r2, [r3, #16]
   25f40:	ldr	r1, [pc, #248]	; 26040 <__assert_fail@plt+0x13954>
   25f44:	ldr	r0, [fp, #-8]
   25f48:	bl	11ffc <strcmp@plt>
   25f4c:	mov	r3, r0
   25f50:	cmp	r3, #0
   25f54:	bne	25f80 <__assert_fail@plt+0x13894>
   25f58:	ldr	r3, [pc, #228]	; 26044 <__assert_fail@plt+0x13958>
   25f5c:	ldr	r2, [r3]
   25f60:	ldr	r3, [fp, #-12]
   25f64:	str	r2, [r3, #4]
   25f68:	ldr	r0, [pc, #216]	; 26048 <__assert_fail@plt+0x1395c>
   25f6c:	bl	12398 <gettext@plt>
   25f70:	mov	r2, r0
   25f74:	ldr	r3, [fp, #-12]
   25f78:	str	r2, [r3, #8]
   25f7c:	b	26014 <__assert_fail@plt+0x13928>
   25f80:	ldr	r1, [pc, #196]	; 2604c <__assert_fail@plt+0x13960>
   25f84:	ldr	r0, [fp, #-8]
   25f88:	bl	11ffc <strcmp@plt>
   25f8c:	mov	r3, r0
   25f90:	cmp	r3, #0
   25f94:	bne	25fc0 <__assert_fail@plt+0x138d4>
   25f98:	ldr	r3, [pc, #176]	; 26050 <__assert_fail@plt+0x13964>
   25f9c:	ldr	r2, [r3]
   25fa0:	ldr	r3, [fp, #-12]
   25fa4:	str	r2, [r3, #4]
   25fa8:	ldr	r0, [pc, #164]	; 26054 <__assert_fail@plt+0x13968>
   25fac:	bl	12398 <gettext@plt>
   25fb0:	mov	r2, r0
   25fb4:	ldr	r3, [fp, #-12]
   25fb8:	str	r2, [r3, #8]
   25fbc:	b	26014 <__assert_fail@plt+0x13928>
   25fc0:	ldr	r3, [pc, #144]	; 26058 <__assert_fail@plt+0x1396c>
   25fc4:	ldr	r3, [r3, #36]	; 0x24
   25fc8:	ldr	r1, [fp, #-8]
   25fcc:	mov	r0, r3
   25fd0:	bl	1cc28 <__assert_fail@plt+0xa53c>
   25fd4:	mov	r2, r0
   25fd8:	ldr	r3, [fp, #-12]
   25fdc:	str	r2, [r3, #4]
   25fe0:	ldr	r3, [fp, #-12]
   25fe4:	ldr	r2, [fp, #-8]
   25fe8:	str	r2, [r3, #8]
   25fec:	ldr	r3, [fp, #-12]
   25ff0:	ldr	r3, [r3, #4]
   25ff4:	cmp	r3, #0
   25ff8:	bne	26014 <__assert_fail@plt+0x13928>
   25ffc:	bl	12404 <__errno_location@plt>
   26000:	mov	r3, r0
   26004:	ldr	r3, [r3]
   26008:	ldr	r1, [fp, #-8]
   2600c:	mov	r0, r3
   26010:	bl	1c974 <__assert_fail@plt+0xa288>
   26014:	ldr	r3, [fp, #-12]
   26018:	ldr	r3, [r3, #4]
   2601c:	mov	r0, r3
   26020:	bl	24cd8 <__assert_fail@plt+0x125ec>
   26024:	mov	r3, r0
   26028:	mov	r2, r3
   2602c:	ldr	r3, [fp, #-12]
   26030:	strb	r2, [r3, #12]
   26034:	nop			; (mov r0, r0)
   26038:	sub	sp, fp, #4
   2603c:	pop	{fp, pc}
   26040:	andeq	r8, r6, r0, lsl #2
   26044:	andeq	ip, r7, r8, lsr #14
   26048:	andeq	r8, r6, ip, lsl #2
   2604c:	andeq	r8, r6, ip, lsl r1
   26050:	andeq	ip, r7, r4, lsr r7
   26054:	andeq	r8, r6, r8, lsr #2
   26058:	andeq	sp, r7, r0, lsr #32
   2605c:	push	{fp, lr}
   26060:	add	fp, sp, #4
   26064:	sub	sp, sp, #8
   26068:	str	r0, [fp, #-8]
   2606c:	ldr	r1, [fp, #-8]
   26070:	ldr	r0, [pc, #12]	; 26084 <__assert_fail@plt+0x13998>
   26074:	bl	25f08 <__assert_fail@plt+0x1381c>
   26078:	nop			; (mov r0, r0)
   2607c:	sub	sp, fp, #4
   26080:	pop	{fp, pc}
   26084:	andeq	r8, r6, ip, lsl r1
   26088:	push	{fp, lr}
   2608c:	add	fp, sp, #4
   26090:	sub	sp, sp, #24
   26094:	str	r0, [fp, #-8]
   26098:	str	r1, [fp, #-12]
   2609c:	ldr	r3, [pc, #52]	; 260d8 <__assert_fail@plt+0x139ec>
   260a0:	ldr	r2, [r3]
   260a4:	mov	r3, #0
   260a8:	str	r3, [sp, #8]
   260ac:	mov	r3, #0
   260b0:	str	r3, [sp, #4]
   260b4:	mov	r3, #0
   260b8:	str	r3, [sp]
   260bc:	mov	r3, #0
   260c0:	ldr	r1, [fp, #-12]
   260c4:	ldr	r0, [fp, #-8]
   260c8:	bl	268dc <__assert_fail@plt+0x141f0>
   260cc:	nop			; (mov r0, r0)
   260d0:	sub	sp, fp, #4
   260d4:	pop	{fp, pc}
   260d8:	andeq	ip, r7, r8, lsl #12
   260dc:	push	{fp, lr}
   260e0:	add	fp, sp, #4
   260e4:	sub	sp, sp, #48	; 0x30
   260e8:	str	r0, [fp, #-24]	; 0xffffffe8
   260ec:	str	r1, [fp, #-28]	; 0xffffffe4
   260f0:	str	r2, [fp, #-32]	; 0xffffffe0
   260f4:	str	r3, [fp, #-36]	; 0xffffffdc
   260f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   260fc:	ldr	r3, [r3, #12]
   26100:	sub	r3, r3, #1
   26104:	str	r3, [fp, #-12]
   26108:	ldr	r3, [pc, #564]	; 26344 <__assert_fail@plt+0x13c58>
   2610c:	ldr	r3, [r3]
   26110:	cmp	r3, #0
   26114:	bne	2613c <__assert_fail@plt+0x13a50>
   26118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2611c:	ldr	r3, [r3, #12]
   26120:	add	r3, r3, #1
   26124:	mov	r0, r3
   26128:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   2612c:	mov	r3, r0
   26130:	mov	r2, r3
   26134:	ldr	r3, [pc, #520]	; 26344 <__assert_fail@plt+0x13c58>
   26138:	str	r2, [r3]
   2613c:	ldr	r3, [pc, #512]	; 26344 <__assert_fail@plt+0x13c58>
   26140:	ldr	r3, [r3]
   26144:	str	r3, [fp, #-8]
   26148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2614c:	ldr	r3, [r3, #24]
   26150:	mov	r1, r3
   26154:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26158:	bl	2e674 <__assert_fail@plt+0x1bf88>
   2615c:	str	r0, [fp, #-20]	; 0xffffffec
   26160:	ldr	r3, [fp, #-20]	; 0xffffffec
   26164:	cmp	r3, #0
   26168:	beq	26180 <__assert_fail@plt+0x13a94>
   2616c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26170:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26174:	sub	r3, r2, r3
   26178:	str	r3, [fp, #-16]
   2617c:	b	26188 <__assert_fail@plt+0x13a9c>
   26180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26184:	str	r3, [fp, #-16]
   26188:	ldr	r2, [fp, #-12]
   2618c:	ldr	r3, [fp, #-16]
   26190:	cmp	r2, r3
   26194:	bls	262a4 <__assert_fail@plt+0x13bb8>
   26198:	ldr	r2, [fp, #-12]
   2619c:	ldr	r3, [fp, #-16]
   261a0:	sub	r3, r2, r3
   261a4:	str	r3, [fp, #-12]
   261a8:	ldr	r2, [fp, #-16]
   261ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   261b0:	ldr	r0, [fp, #-8]
   261b4:	bl	12458 <strncpy@plt>
   261b8:	ldr	r2, [fp, #-8]
   261bc:	ldr	r3, [fp, #-16]
   261c0:	add	r3, r2, r3
   261c4:	str	r3, [fp, #-8]
   261c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   261cc:	ldr	r3, [fp, #-16]
   261d0:	add	r3, r2, r3
   261d4:	str	r3, [fp, #-32]	; 0xffffffe0
   261d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   261dc:	ldr	r3, [fp, #-16]
   261e0:	sub	r3, r2, r3
   261e4:	str	r3, [fp, #-36]	; 0xffffffdc
   261e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   261ec:	cmp	r3, #0
   261f0:	beq	26290 <__assert_fail@plt+0x13ba4>
   261f4:	ldr	r2, [fp, #16]
   261f8:	ldr	r3, [fp, #8]
   261fc:	add	r2, r2, r3
   26200:	ldr	r3, [fp, #-12]
   26204:	cmp	r2, r3
   26208:	bcs	262ac <__assert_fail@plt+0x13bc0>
   2620c:	ldr	r2, [fp, #16]
   26210:	ldr	r3, [fp, #8]
   26214:	add	r3, r2, r3
   26218:	ldr	r2, [fp, #-12]
   2621c:	sub	r3, r2, r3
   26220:	str	r3, [fp, #-12]
   26224:	ldr	r3, [fp, #4]
   26228:	cmp	r3, #0
   2622c:	beq	2624c <__assert_fail@plt+0x13b60>
   26230:	ldr	r1, [fp, #4]
   26234:	ldr	r0, [fp, #-8]
   26238:	bl	1226c <strcpy@plt>
   2623c:	ldr	r2, [fp, #-8]
   26240:	ldr	r3, [fp, #8]
   26244:	add	r3, r2, r3
   26248:	str	r3, [fp, #-8]
   2624c:	ldr	r1, [fp, #12]
   26250:	ldr	r0, [fp, #-8]
   26254:	bl	1226c <strcpy@plt>
   26258:	ldr	r2, [fp, #-8]
   2625c:	ldr	r3, [fp, #16]
   26260:	add	r3, r2, r3
   26264:	str	r3, [fp, #-8]
   26268:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2626c:	ldr	r3, [r3, #20]
   26270:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26274:	add	r3, r2, r3
   26278:	str	r3, [fp, #-32]	; 0xffffffe0
   2627c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26280:	ldr	r3, [r3, #20]
   26284:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26288:	sub	r3, r2, r3
   2628c:	str	r3, [fp, #-36]	; 0xffffffdc
   26290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26294:	ldrb	r3, [r3]
   26298:	cmp	r3, #0
   2629c:	bne	26148 <__assert_fail@plt+0x13a5c>
   262a0:	b	262b0 <__assert_fail@plt+0x13bc4>
   262a4:	nop			; (mov r0, r0)
   262a8:	b	262b0 <__assert_fail@plt+0x13bc4>
   262ac:	nop			; (mov r0, r0)
   262b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   262b4:	ldrb	r3, [r3]
   262b8:	cmp	r3, #0
   262bc:	beq	262dc <__assert_fail@plt+0x13bf0>
   262c0:	ldr	r0, [pc, #128]	; 26348 <__assert_fail@plt+0x13c5c>
   262c4:	bl	12398 <gettext@plt>
   262c8:	mov	r3, r0
   262cc:	mov	r2, r3
   262d0:	mov	r1, #0
   262d4:	mov	r0, #1
   262d8:	bl	122b4 <error@plt>
   262dc:	ldr	r3, [fp, #-8]
   262e0:	add	r2, r3, #1
   262e4:	str	r2, [fp, #-8]
   262e8:	mov	r2, #0
   262ec:	strb	r2, [r3]
   262f0:	ldr	r3, [pc, #76]	; 26344 <__assert_fail@plt+0x13c58>
   262f4:	ldr	r1, [r3]
   262f8:	ldr	r3, [fp, #-8]
   262fc:	ldr	r2, [pc, #64]	; 26344 <__assert_fail@plt+0x13c58>
   26300:	ldr	r2, [r2]
   26304:	sub	r3, r3, r2
   26308:	mov	r2, r3
   2630c:	ldr	r3, [fp, #20]
   26310:	str	r3, [sp, #8]
   26314:	mov	r3, #0
   26318:	str	r3, [sp, #4]
   2631c:	mov	r3, #0
   26320:	str	r3, [sp]
   26324:	mov	r3, r2
   26328:	mov	r2, r1
   2632c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26334:	bl	268dc <__assert_fail@plt+0x141f0>
   26338:	nop			; (mov r0, r0)
   2633c:	sub	sp, fp, #4
   26340:	pop	{fp, pc}
   26344:			; <UNDEFINED> instruction: 0x0007cebc
   26348:	andeq	r8, r6, r0, lsr #3
   2634c:	push	{fp}		; (str fp, [sp, #-4]!)
   26350:	add	fp, sp, #0
   26354:	sub	sp, sp, #28
   26358:	str	r0, [fp, #-16]
   2635c:	str	r1, [fp, #-20]	; 0xffffffec
   26360:	str	r3, [fp, #-28]	; 0xffffffe4
   26364:	mov	r3, r2
   26368:	strb	r3, [fp, #-21]	; 0xffffffeb
   2636c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   26370:	cmp	r3, #0
   26374:	beq	2639c <__assert_fail@plt+0x13cb0>
   26378:	ldr	r3, [fp, #-20]	; 0xffffffec
   2637c:	ldr	r2, [r3, #36]	; 0x24
   26380:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26384:	cmp	r2, r3
   26388:	bcs	263cc <__assert_fail@plt+0x13ce0>
   2638c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26390:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26394:	str	r2, [r3, #36]	; 0x24
   26398:	b	263cc <__assert_fail@plt+0x13ce0>
   2639c:	ldr	r3, [fp, #-20]	; 0xffffffec
   263a0:	ldr	r2, [r3, #40]	; 0x28
   263a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   263a8:	cmp	r2, r3
   263ac:	bhi	263c0 <__assert_fail@plt+0x13cd4>
   263b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   263b4:	ldr	r3, [r3, #40]	; 0x28
   263b8:	cmp	r3, #0
   263bc:	bne	263cc <__assert_fail@plt+0x13ce0>
   263c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   263c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   263c8:	str	r2, [r3, #40]	; 0x28
   263cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   263d0:	ldr	r3, [r3, #36]	; 0x24
   263d4:	cmp	r3, #0
   263d8:	beq	263f4 <__assert_fail@plt+0x13d08>
   263dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   263e0:	ldr	r2, [r3, #40]	; 0x28
   263e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263e8:	ldr	r3, [r3, #36]	; 0x24
   263ec:	cmp	r2, r3
   263f0:	bhi	2642c <__assert_fail@plt+0x13d40>
   263f4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   263f8:	cmp	r3, #0
   263fc:	beq	2641c <__assert_fail@plt+0x13d30>
   26400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26404:	cmn	r3, #1
   26408:	beq	264b4 <__assert_fail@plt+0x13dc8>
   2640c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26410:	add	r3, r3, #1
   26414:	str	r3, [fp, #-28]	; 0xffffffe4
   26418:	b	264b4 <__assert_fail@plt+0x13dc8>
   2641c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26420:	lsr	r3, r3, #1
   26424:	str	r3, [fp, #-28]	; 0xffffffe4
   26428:	b	264b4 <__assert_fail@plt+0x13dc8>
   2642c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26430:	ldr	r2, [r3, #40]	; 0x28
   26434:	ldr	r3, [fp, #-20]	; 0xffffffec
   26438:	ldr	r3, [r3, #36]	; 0x24
   2643c:	sub	r3, r2, r3
   26440:	lsr	r3, r3, #1
   26444:	str	r3, [fp, #-8]
   26448:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2644c:	cmp	r3, #0
   26450:	beq	26484 <__assert_fail@plt+0x13d98>
   26454:	ldr	r3, [fp, #-8]
   26458:	cmp	r3, #0
   2645c:	beq	26474 <__assert_fail@plt+0x13d88>
   26460:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26464:	ldr	r3, [fp, #-8]
   26468:	add	r3, r2, r3
   2646c:	str	r3, [fp, #-28]	; 0xffffffe4
   26470:	b	264b8 <__assert_fail@plt+0x13dcc>
   26474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26478:	add	r3, r3, #1
   2647c:	str	r3, [fp, #-28]	; 0xffffffe4
   26480:	b	264b8 <__assert_fail@plt+0x13dcc>
   26484:	ldr	r3, [fp, #-8]
   26488:	cmp	r3, #0
   2648c:	beq	264a4 <__assert_fail@plt+0x13db8>
   26490:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26494:	ldr	r3, [fp, #-8]
   26498:	sub	r3, r2, r3
   2649c:	str	r3, [fp, #-28]	; 0xffffffe4
   264a0:	b	264b8 <__assert_fail@plt+0x13dcc>
   264a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   264a8:	sub	r3, r3, #1
   264ac:	str	r3, [fp, #-28]	; 0xffffffe4
   264b0:	b	264b8 <__assert_fail@plt+0x13dcc>
   264b4:	nop			; (mov r0, r0)
   264b8:	ldr	r3, [fp, #-16]
   264bc:	ldr	r3, [r3, #28]
   264c0:	cmp	r3, #0
   264c4:	beq	264f0 <__assert_fail@plt+0x13e04>
   264c8:	ldr	r3, [fp, #-16]
   264cc:	ldr	r3, [r3, #28]
   264d0:	add	r2, r3, #1
   264d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   264d8:	cmp	r2, r3
   264dc:	bcc	264f0 <__assert_fail@plt+0x13e04>
   264e0:	ldr	r3, [fp, #-16]
   264e4:	ldr	r3, [r3, #28]
   264e8:	add	r3, r3, #1
   264ec:	str	r3, [fp, #-28]	; 0xffffffe4
   264f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   264f4:	cmp	r3, #0
   264f8:	bne	26504 <__assert_fail@plt+0x13e18>
   264fc:	mov	r3, #1
   26500:	str	r3, [fp, #-28]	; 0xffffffe4
   26504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26508:	mov	r0, r3
   2650c:	add	sp, fp, #0
   26510:	pop	{fp}		; (ldr fp, [sp], #4)
   26514:	bx	lr
   26518:	push	{fp, lr}
   2651c:	add	fp, sp, #4
   26520:	sub	sp, sp, #24
   26524:	str	r0, [fp, #-16]
   26528:	str	r1, [fp, #-20]	; 0xffffffec
   2652c:	str	r2, [fp, #-24]	; 0xffffffe8
   26530:	str	r3, [fp, #-28]	; 0xffffffe4
   26534:	mov	r3, #0
   26538:	str	r3, [fp, #-8]
   2653c:	mov	r3, #0
   26540:	str	r3, [fp, #-12]
   26544:	b	26584 <__assert_fail@plt+0x13e98>
   26548:	ldr	r3, [fp, #-8]
   2654c:	add	r2, r3, #1
   26550:	str	r2, [fp, #-8]
   26554:	lsl	r3, r3, #2
   26558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2655c:	add	r2, r2, r3
   26560:	ldr	r3, [fp, #-20]	; 0xffffffec
   26564:	ldr	r1, [r3, #4]
   26568:	ldr	r3, [fp, #-12]
   2656c:	add	r0, r3, #1
   26570:	str	r0, [fp, #-12]
   26574:	lsl	r3, r3, #2
   26578:	add	r3, r1, r3
   2657c:	ldr	r3, [r3]
   26580:	str	r3, [r2]
   26584:	ldr	r3, [fp, #-16]
   26588:	ldr	r2, [r3, #28]
   2658c:	ldr	r3, [fp, #-12]
   26590:	cmp	r2, r3
   26594:	bhi	26548 <__assert_fail@plt+0x13e5c>
   26598:	ldr	r2, [fp, #-12]
   2659c:	ldr	r3, [fp, #4]
   265a0:	add	r3, r2, r3
   265a4:	str	r3, [fp, #-12]
   265a8:	b	265e8 <__assert_fail@plt+0x13efc>
   265ac:	ldr	r3, [fp, #-8]
   265b0:	add	r2, r3, #1
   265b4:	str	r2, [fp, #-8]
   265b8:	lsl	r3, r3, #2
   265bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   265c0:	add	r2, r2, r3
   265c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   265c8:	ldr	r1, [r3, #4]
   265cc:	ldr	r3, [fp, #-12]
   265d0:	add	r0, r3, #1
   265d4:	str	r0, [fp, #-12]
   265d8:	lsl	r3, r3, #2
   265dc:	add	r3, r1, r3
   265e0:	ldr	r3, [r3]
   265e4:	str	r3, [r2]
   265e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   265ec:	ldr	r2, [r3]
   265f0:	ldr	r3, [fp, #-12]
   265f4:	cmp	r2, r3
   265f8:	bls	2660c <__assert_fail@plt+0x13f20>
   265fc:	ldr	r2, [fp, #-8]
   26600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26604:	cmp	r2, r3
   26608:	bcc	265ac <__assert_fail@plt+0x13ec0>
   2660c:	ldr	r3, [fp, #-16]
   26610:	ldr	r2, [r3, #28]
   26614:	ldr	r3, [fp, #-8]
   26618:	cmp	r2, r3
   2661c:	bls	26634 <__assert_fail@plt+0x13f48>
   26620:	ldr	r3, [pc, #52]	; 2665c <__assert_fail@plt+0x13f70>
   26624:	mov	r2, #242	; 0xf2
   26628:	ldr	r1, [pc, #48]	; 26660 <__assert_fail@plt+0x13f74>
   2662c:	ldr	r0, [pc, #48]	; 26664 <__assert_fail@plt+0x13f78>
   26630:	bl	126ec <__assert_fail@plt>
   26634:	ldr	r3, [fp, #-8]
   26638:	lsl	r3, r3, #2
   2663c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26640:	add	r3, r2, r3
   26644:	mov	r2, #0
   26648:	str	r2, [r3]
   2664c:	ldr	r3, [fp, #-8]
   26650:	mov	r0, r3
   26654:	sub	sp, fp, #4
   26658:	pop	{fp, pc}
   2665c:	andeq	r8, r6, r0, lsl #7
   26660:			; <UNDEFINED> instruction: 0x000681b4
   26664:	andeq	r8, r6, r0, asr #3
   26668:	push	{r4, fp, lr}
   2666c:	add	fp, sp, #8
   26670:	sub	sp, sp, #36	; 0x24
   26674:	str	r0, [fp, #-32]	; 0xffffffe0
   26678:	str	r1, [fp, #-36]	; 0xffffffdc
   2667c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26684:	bl	26088 <__assert_fail@plt+0x1399c>
   26688:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2668c:	ldr	r3, [r3]
   26690:	cmp	r3, #0
   26694:	bne	266ac <__assert_fail@plt+0x13fc0>
   26698:	ldr	r3, [pc, #400]	; 26830 <__assert_fail@plt+0x14144>
   2669c:	ldr	r2, [pc, #400]	; 26834 <__assert_fail@plt+0x14148>
   266a0:	ldr	r1, [pc, #400]	; 26838 <__assert_fail@plt+0x1414c>
   266a4:	ldr	r0, [pc, #400]	; 2683c <__assert_fail@plt+0x14150>
   266a8:	bl	126ec <__assert_fail@plt>
   266ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   266b0:	ldr	r2, [r3, #4]
   266b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   266b8:	ldr	r3, [r3]
   266bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   266c0:	lsl	r3, r3, #2
   266c4:	add	r3, r2, r3
   266c8:	ldr	r3, [r3]
   266cc:	cmp	r3, #0
   266d0:	beq	266e8 <__assert_fail@plt+0x13ffc>
   266d4:	ldr	r3, [pc, #340]	; 26830 <__assert_fail@plt+0x14144>
   266d8:	ldr	r2, [pc, #352]	; 26840 <__assert_fail@plt+0x14154>
   266dc:	ldr	r1, [pc, #340]	; 26838 <__assert_fail@plt+0x1414c>
   266e0:	ldr	r0, [pc, #348]	; 26844 <__assert_fail@plt+0x14158>
   266e4:	bl	126ec <__assert_fail@plt>
   266e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   266ec:	ldr	r3, [r3]
   266f0:	add	r3, r3, #1
   266f4:	lsl	r3, r3, #2
   266f8:	mov	r0, r3
   266fc:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   26700:	mov	r3, r0
   26704:	str	r3, [fp, #-24]	; 0xffffffe8
   26708:	mov	r3, #0
   2670c:	str	r3, [fp, #-20]	; 0xffffffec
   26710:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26714:	ldr	r3, [r3]
   26718:	str	r3, [fp, #-16]
   2671c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26720:	str	r3, [sp]
   26724:	ldr	r3, [fp, #-16]
   26728:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2672c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26734:	bl	26518 <__assert_fail@plt+0x13e2c>
   26738:	str	r0, [fp, #-28]	; 0xffffffe4
   2673c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26740:	ldr	r4, [r3, #32]
   26744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26748:	ldr	r1, [r3, #24]
   2674c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26758:	blx	r4
   2675c:	mov	r3, r0
   26760:	cmp	r3, #0
   26764:	beq	267a0 <__assert_fail@plt+0x140b4>
   26768:	ldr	r3, [fp, #-16]
   2676c:	mov	r2, #1
   26770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26778:	bl	2634c <__assert_fail@plt+0x13c60>
   2677c:	str	r0, [fp, #-16]
   26780:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26784:	ldr	r3, [r3, #28]
   26788:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2678c:	sub	r3, r2, r3
   26790:	ldr	r2, [fp, #-20]	; 0xffffffec
   26794:	add	r3, r2, r3
   26798:	str	r3, [fp, #-20]	; 0xffffffec
   2679c:	b	267ec <__assert_fail@plt+0x14100>
   267a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267a4:	ldr	r3, [r3, #28]
   267a8:	add	r2, r3, #1
   267ac:	ldr	r3, [fp, #-16]
   267b0:	cmp	r2, r3
   267b4:	bcc	267d4 <__assert_fail@plt+0x140e8>
   267b8:	ldr	r0, [pc, #136]	; 26848 <__assert_fail@plt+0x1415c>
   267bc:	bl	12398 <gettext@plt>
   267c0:	mov	r3, r0
   267c4:	mov	r2, r3
   267c8:	mov	r1, #0
   267cc:	mov	r0, #1
   267d0:	bl	122b4 <error@plt>
   267d4:	ldr	r3, [fp, #-16]
   267d8:	mov	r2, #0
   267dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   267e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   267e4:	bl	2634c <__assert_fail@plt+0x13c60>
   267e8:	str	r0, [fp, #-16]
   267ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   267f0:	add	r2, r3, #1
   267f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   267f8:	ldr	r1, [r3]
   267fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26800:	ldr	r3, [r3, #28]
   26804:	sub	r3, r1, r3
   26808:	cmp	r2, r3
   2680c:	bcc	2671c <__assert_fail@plt+0x14030>
   26810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26814:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   26818:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2681c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26820:	bl	27018 <__assert_fail@plt+0x1492c>
   26824:	nop			; (mov r0, r0)
   26828:	sub	sp, fp, #8
   2682c:	pop	{r4, fp, pc}
   26830:	andeq	r8, r6, ip, lsl #7
   26834:	andeq	r0, r0, r5, lsl #2
   26838:			; <UNDEFINED> instruction: 0x000681b4
   2683c:	andeq	r8, r6, r0, ror #3
   26840:	andeq	r0, r0, r6, lsl #2
   26844:	strdeq	r8, [r6], -r4
   26848:	andeq	r8, r6, r0, lsr #4
   2684c:	push	{fp}		; (str fp, [sp, #-4]!)
   26850:	add	fp, sp, #0
   26854:	sub	sp, sp, #20
   26858:	str	r0, [fp, #-8]
   2685c:	str	r1, [fp, #-12]
   26860:	str	r2, [fp, #-16]
   26864:	ldr	r3, [fp, #-8]
   26868:	cmp	r3, #0
   2686c:	bne	268ac <__assert_fail@plt+0x141c0>
   26870:	ldr	r3, [fp, #-12]
   26874:	ldr	r3, [r3, #40]	; 0x28
   26878:	cmp	r3, #0
   2687c:	beq	268ac <__assert_fail@plt+0x141c0>
   26880:	ldr	r3, [fp, #-16]
   26884:	ldr	r2, [r3]
   26888:	ldr	r3, [fp, #-12]
   2688c:	ldr	r3, [r3, #28]
   26890:	sub	r2, r2, r3
   26894:	ldr	r3, [fp, #-12]
   26898:	ldr	r3, [r3, #40]	; 0x28
   2689c:	cmp	r2, r3
   268a0:	bne	268ac <__assert_fail@plt+0x141c0>
   268a4:	mov	r3, #1
   268a8:	b	268cc <__assert_fail@plt+0x141e0>
   268ac:	ldr	r3, [fp, #-16]
   268b0:	ldr	r2, [r3]
   268b4:	ldr	r3, [fp, #-12]
   268b8:	ldr	r3, [r3, #16]
   268bc:	cmp	r2, r3
   268c0:	moveq	r3, #1
   268c4:	movne	r3, #0
   268c8:	uxtb	r3, r3
   268cc:	mov	r0, r3
   268d0:	add	sp, fp, #0
   268d4:	pop	{fp}		; (ldr fp, [sp], #4)
   268d8:	bx	lr
   268dc:	push	{fp, lr}
   268e0:	add	fp, sp, #4
   268e4:	sub	sp, sp, #24
   268e8:	str	r0, [fp, #-16]
   268ec:	str	r1, [fp, #-20]	; 0xffffffec
   268f0:	str	r2, [fp, #-24]	; 0xffffffe8
   268f4:	str	r3, [fp, #-28]	; 0xffffffe4
   268f8:	ldr	r3, [pc, #820]	; 26c34 <__assert_fail@plt+0x14548>
   268fc:	ldr	r3, [r3]
   26900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26904:	cmp	r2, r3
   26908:	moveq	r3, #1
   2690c:	movne	r3, #0
   26910:	uxtb	r3, r3
   26914:	str	r3, [fp, #-8]
   26918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2691c:	cmp	r3, #0
   26920:	bne	26938 <__assert_fail@plt+0x1424c>
   26924:	ldr	r3, [pc, #780]	; 26c38 <__assert_fail@plt+0x1454c>
   26928:	ldr	r2, [pc, #780]	; 26c3c <__assert_fail@plt+0x14550>
   2692c:	ldr	r1, [pc, #780]	; 26c40 <__assert_fail@plt+0x14554>
   26930:	ldr	r0, [pc, #780]	; 26c44 <__assert_fail@plt+0x14558>
   26934:	bl	126ec <__assert_fail@plt>
   26938:	ldr	r3, [fp, #-8]
   2693c:	cmp	r3, #0
   26940:	bne	26a3c <__assert_fail@plt+0x14350>
   26944:	ldr	r3, [fp, #-20]	; 0xffffffec
   26948:	ldr	r2, [r3, #16]
   2694c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26950:	add	r2, r2, r3
   26954:	ldr	r3, [fp, #8]
   26958:	add	r2, r2, r3
   2695c:	ldr	r3, [fp, #-16]
   26960:	ldr	r3, [r3, #12]
   26964:	cmp	r2, r3
   26968:	bls	26a14 <__assert_fail@plt+0x14328>
   2696c:	ldr	r3, [fp, #12]
   26970:	cmp	r3, #0
   26974:	bne	26990 <__assert_fail@plt+0x142a4>
   26978:	ldr	r3, [fp, #-20]	; 0xffffffec
   2697c:	ldr	r2, [r3]
   26980:	ldr	r3, [fp, #-16]
   26984:	ldr	r3, [r3, #28]
   26988:	cmp	r2, r3
   2698c:	bne	269ac <__assert_fail@plt+0x142c0>
   26990:	ldr	r0, [pc, #688]	; 26c48 <__assert_fail@plt+0x1455c>
   26994:	bl	12398 <gettext@plt>
   26998:	mov	r3, r0
   2699c:	mov	r2, r3
   269a0:	mov	r1, #0
   269a4:	mov	r0, #1
   269a8:	bl	122b4 <error@plt>
   269ac:	ldr	r3, [fp, #-16]
   269b0:	ldr	r3, [r3, #24]
   269b4:	cmp	r3, #0
   269b8:	bne	269ec <__assert_fail@plt+0x14300>
   269bc:	ldr	r3, [fp, #-16]
   269c0:	ldr	r3, [r3]
   269c4:	cmp	r3, #0
   269c8:	beq	26a08 <__assert_fail@plt+0x1431c>
   269cc:	ldr	r3, [fp, #-16]
   269d0:	ldr	r3, [r3, #36]	; 0x24
   269d4:	cmp	r3, #0
   269d8:	bne	269ec <__assert_fail@plt+0x14300>
   269dc:	ldr	r3, [fp, #-16]
   269e0:	ldr	r3, [r3, #40]	; 0x28
   269e4:	cmp	r3, #0
   269e8:	beq	26a08 <__assert_fail@plt+0x1431c>
   269ec:	ldr	r0, [pc, #600]	; 26c4c <__assert_fail@plt+0x14560>
   269f0:	bl	12398 <gettext@plt>
   269f4:	mov	r3, r0
   269f8:	mov	r2, r3
   269fc:	mov	r1, #0
   26a00:	mov	r0, #1
   26a04:	bl	122b4 <error@plt>
   26a08:	ldr	r1, [fp, #-20]	; 0xffffffec
   26a0c:	ldr	r0, [fp, #-16]
   26a10:	bl	26668 <__assert_fail@plt+0x13f7c>
   26a14:	ldr	r2, [fp, #-20]	; 0xffffffec
   26a18:	ldr	r1, [fp, #-16]
   26a1c:	ldr	r0, [fp, #12]
   26a20:	bl	2684c <__assert_fail@plt+0x14160>
   26a24:	mov	r3, r0
   26a28:	cmp	r3, #0
   26a2c:	beq	26a3c <__assert_fail@plt+0x14350>
   26a30:	ldr	r1, [fp, #-20]	; 0xffffffec
   26a34:	ldr	r0, [fp, #-16]
   26a38:	bl	26668 <__assert_fail@plt+0x13f7c>
   26a3c:	ldr	r3, [fp, #12]
   26a40:	cmp	r3, #0
   26a44:	bne	26a54 <__assert_fail@plt+0x14368>
   26a48:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a4c:	mov	r2, #1
   26a50:	str	r2, [r3, #28]
   26a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a58:	ldr	r2, [r3]
   26a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a60:	ldr	r3, [r3, #8]
   26a64:	cmp	r2, r3
   26a68:	bcc	26af0 <__assert_fail@plt+0x14404>
   26a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a70:	ldr	r3, [r3, #4]
   26a74:	cmp	r3, #0
   26a78:	bne	26ab0 <__assert_fail@plt+0x143c4>
   26a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a80:	mov	r2, #64	; 0x40
   26a84:	str	r2, [r3, #8]
   26a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   26a8c:	ldr	r3, [r3, #8]
   26a90:	lsl	r3, r3, #2
   26a94:	mov	r0, r3
   26a98:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   26a9c:	mov	r3, r0
   26aa0:	mov	r2, r3
   26aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26aa8:	str	r2, [r3, #4]
   26aac:	b	26af0 <__assert_fail@plt+0x14404>
   26ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ab4:	ldr	r3, [r3, #8]
   26ab8:	lsl	r2, r3, #1
   26abc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ac0:	str	r2, [r3, #8]
   26ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ac8:	ldr	r2, [r3, #4]
   26acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ad0:	ldr	r3, [r3, #8]
   26ad4:	lsl	r3, r3, #2
   26ad8:	mov	r1, r3
   26adc:	mov	r0, r2
   26ae0:	bl	3d208 <__assert_fail@plt+0x2ab1c>
   26ae4:	mov	r2, r0
   26ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26aec:	str	r2, [r3, #4]
   26af0:	ldr	r3, [fp, #-8]
   26af4:	cmp	r3, #0
   26af8:	beq	26b2c <__assert_fail@plt+0x14440>
   26afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b00:	ldr	r2, [r3, #4]
   26b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b08:	ldr	r3, [r3]
   26b0c:	add	r0, r3, #1
   26b10:	ldr	r1, [fp, #-20]	; 0xffffffec
   26b14:	str	r0, [r1]
   26b18:	lsl	r3, r3, #2
   26b1c:	add	r3, r2, r3
   26b20:	mov	r2, #0
   26b24:	str	r2, [r3]
   26b28:	b	26c0c <__assert_fail@plt+0x14520>
   26b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b30:	ldr	r2, [r3, #4]
   26b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b38:	ldr	r3, [r3]
   26b3c:	add	r0, r3, #1
   26b40:	ldr	r1, [fp, #-20]	; 0xffffffec
   26b44:	str	r0, [r1]
   26b48:	lsl	r3, r3, #2
   26b4c:	add	r3, r2, r3
   26b50:	ldr	r2, [fp, #-20]	; 0xffffffec
   26b54:	ldr	r1, [r2, #12]
   26b58:	ldr	r2, [fp, #-20]	; 0xffffffec
   26b5c:	ldr	r2, [r2, #16]
   26b60:	add	r2, r1, r2
   26b64:	str	r2, [r3]
   26b68:	ldr	r3, [fp, #4]
   26b6c:	cmp	r3, #0
   26b70:	beq	26bac <__assert_fail@plt+0x144c0>
   26b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b78:	ldr	r2, [r3, #12]
   26b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b80:	ldr	r3, [r3, #16]
   26b84:	add	r3, r2, r3
   26b88:	ldr	r1, [fp, #4]
   26b8c:	mov	r0, r3
   26b90:	bl	1226c <strcpy@plt>
   26b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b98:	ldr	r2, [r3, #16]
   26b9c:	ldr	r3, [fp, #8]
   26ba0:	add	r2, r2, r3
   26ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ba8:	str	r2, [r3, #16]
   26bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bb0:	ldr	r2, [r3, #12]
   26bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bb8:	ldr	r3, [r3, #16]
   26bbc:	add	r3, r2, r3
   26bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26bc4:	mov	r0, r3
   26bc8:	bl	1226c <strcpy@plt>
   26bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bd0:	ldr	r2, [r3, #16]
   26bd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26bd8:	add	r2, r2, r3
   26bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26be0:	str	r2, [r3, #16]
   26be4:	ldr	r2, [fp, #-20]	; 0xffffffec
   26be8:	ldr	r1, [fp, #-16]
   26bec:	ldr	r0, [fp, #12]
   26bf0:	bl	2684c <__assert_fail@plt+0x14160>
   26bf4:	mov	r3, r0
   26bf8:	cmp	r3, #0
   26bfc:	beq	26c0c <__assert_fail@plt+0x14520>
   26c00:	ldr	r1, [fp, #-20]	; 0xffffffec
   26c04:	ldr	r0, [fp, #-16]
   26c08:	bl	26668 <__assert_fail@plt+0x13f7c>
   26c0c:	ldr	r3, [fp, #12]
   26c10:	cmp	r3, #0
   26c14:	beq	26c28 <__assert_fail@plt+0x1453c>
   26c18:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c1c:	ldr	r2, [r3, #16]
   26c20:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c24:	str	r2, [r3, #20]
   26c28:	nop			; (mov r0, r0)
   26c2c:	sub	sp, fp, #4
   26c30:	pop	{fp, pc}
   26c34:	andeq	ip, r7, r8, lsl #12
   26c38:	muleq	r6, r8, r3
   26c3c:	andeq	r0, r0, r5, asr r1
   26c40:			; <UNDEFINED> instruction: 0x000681b4
   26c44:	andeq	r8, r6, r4, asr r2
   26c48:	andeq	r8, r6, r0, ror #4
   26c4c:	muleq	r6, ip, r2
   26c50:	push	{fp, lr}
   26c54:	add	fp, sp, #4
   26c58:	sub	sp, sp, #8
   26c5c:	mov	r0, #0
   26c60:	bl	12188 <sysconf@plt>
   26c64:	str	r0, [fp, #-8]
   26c68:	ldr	r3, [fp, #-8]
   26c6c:	cmp	r3, #0
   26c70:	ble	26c7c <__assert_fail@plt+0x14590>
   26c74:	ldr	r3, [fp, #-8]
   26c78:	b	26c80 <__assert_fail@plt+0x14594>
   26c7c:	mvn	r3, #-2147483648	; 0x80000000
   26c80:	mov	r0, r3
   26c84:	sub	sp, fp, #4
   26c88:	pop	{fp, pc}
   26c8c:	push	{fp}		; (str fp, [sp, #-4]!)
   26c90:	add	fp, sp, #0
   26c94:	sub	sp, sp, #20
   26c98:	str	r0, [fp, #-8]
   26c9c:	str	r1, [fp, #-12]
   26ca0:	str	r2, [fp, #-16]
   26ca4:	str	r3, [fp, #-20]	; 0xffffffec
   26ca8:	mov	r3, #0
   26cac:	mov	r0, r3
   26cb0:	add	sp, fp, #0
   26cb4:	pop	{fp}		; (ldr fp, [sp], #4)
   26cb8:	bx	lr
   26cbc:	push	{fp, lr}
   26cc0:	add	fp, sp, #4
   26cc4:	sub	sp, sp, #8
   26cc8:	mov	r3, #0
   26ccc:	str	r3, [fp, #-8]
   26cd0:	ldr	r3, [pc, #84]	; 26d2c <__assert_fail@plt+0x14640>
   26cd4:	ldr	r3, [r3]
   26cd8:	str	r3, [fp, #-12]
   26cdc:	b	26d0c <__assert_fail@plt+0x14620>
   26ce0:	ldr	r3, [fp, #-12]
   26ce4:	add	r2, r3, #4
   26ce8:	str	r2, [fp, #-12]
   26cec:	ldr	r3, [r3]
   26cf0:	mov	r0, r3
   26cf4:	bl	123bc <strlen@plt>
   26cf8:	mov	r3, r0
   26cfc:	add	r3, r3, #1
   26d00:	ldr	r2, [fp, #-8]
   26d04:	add	r3, r2, r3
   26d08:	str	r3, [fp, #-8]
   26d0c:	ldr	r3, [fp, #-12]
   26d10:	ldr	r3, [r3]
   26d14:	cmp	r3, #0
   26d18:	bne	26ce0 <__assert_fail@plt+0x145f4>
   26d1c:	ldr	r3, [fp, #-8]
   26d20:	mov	r0, r3
   26d24:	sub	sp, fp, #4
   26d28:	pop	{fp, pc}
   26d2c:	andeq	ip, r7, ip, lsl r7
   26d30:	push	{fp, lr}
   26d34:	add	fp, sp, #4
   26d38:	sub	sp, sp, #16
   26d3c:	str	r0, [fp, #-16]
   26d40:	str	r1, [fp, #-20]	; 0xffffffec
   26d44:	bl	26cbc <__assert_fail@plt+0x145d0>
   26d48:	str	r0, [fp, #-8]
   26d4c:	ldr	r3, [fp, #-16]
   26d50:	mov	r2, #4096	; 0x1000
   26d54:	str	r2, [r3, #8]
   26d58:	bl	26c50 <__assert_fail@plt+0x14564>
   26d5c:	mov	r2, r0
   26d60:	ldr	r3, [fp, #-16]
   26d64:	str	r2, [r3, #4]
   26d68:	ldr	r3, [fp, #-16]
   26d6c:	mov	r2, #0
   26d70:	str	r2, [r3]
   26d74:	ldr	r3, [fp, #-16]
   26d78:	ldr	r2, [r3, #4]
   26d7c:	ldr	r3, [fp, #-8]
   26d80:	cmp	r2, r3
   26d84:	bcs	26d90 <__assert_fail@plt+0x146a4>
   26d88:	mov	r3, #1
   26d8c:	b	26e7c <__assert_fail@plt+0x14790>
   26d90:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d94:	ldr	r3, [fp, #-8]
   26d98:	add	r2, r2, r3
   26d9c:	ldr	r3, [fp, #-16]
   26da0:	ldr	r3, [r3, #4]
   26da4:	cmp	r2, r3
   26da8:	bcc	26db4 <__assert_fail@plt+0x146c8>
   26dac:	mov	r3, #2
   26db0:	b	26e7c <__assert_fail@plt+0x14790>
   26db4:	ldr	r3, [fp, #-16]
   26db8:	ldr	r2, [r3, #4]
   26dbc:	ldr	r3, [fp, #-8]
   26dc0:	sub	r2, r2, r3
   26dc4:	ldr	r3, [fp, #-16]
   26dc8:	str	r2, [r3, #4]
   26dcc:	ldr	r3, [fp, #-16]
   26dd0:	ldr	r2, [r3, #4]
   26dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26dd8:	sub	r2, r2, r3
   26ddc:	ldr	r3, [fp, #-16]
   26de0:	str	r2, [r3, #4]
   26de4:	ldr	r3, [fp, #-16]
   26de8:	ldr	r3, [r3, #4]
   26dec:	lsr	r3, r3, #2
   26df0:	sub	r2, r3, #2
   26df4:	ldr	r3, [fp, #-16]
   26df8:	str	r2, [r3, #16]
   26dfc:	ldr	r3, [fp, #-16]
   26e00:	ldr	r3, [r3, #16]
   26e04:	cmp	r3, #0
   26e08:	bne	26e20 <__assert_fail@plt+0x14734>
   26e0c:	ldr	r3, [pc, #116]	; 26e88 <__assert_fail@plt+0x1479c>
   26e10:	ldr	r2, [pc, #116]	; 26e8c <__assert_fail@plt+0x147a0>
   26e14:	ldr	r1, [pc, #116]	; 26e90 <__assert_fail@plt+0x147a4>
   26e18:	ldr	r0, [pc, #116]	; 26e94 <__assert_fail@plt+0x147a8>
   26e1c:	bl	126ec <__assert_fail@plt>
   26e20:	ldr	r3, [fp, #-16]
   26e24:	mov	r2, #0
   26e28:	str	r2, [r3, #20]
   26e2c:	ldr	r3, [fp, #-16]
   26e30:	mov	r2, #0
   26e34:	str	r2, [r3, #24]
   26e38:	ldr	r3, [fp, #-16]
   26e3c:	mov	r2, #0
   26e40:	str	r2, [r3, #28]
   26e44:	ldr	r3, [fp, #-16]
   26e48:	ldr	r2, [pc, #72]	; 26e98 <__assert_fail@plt+0x147ac>
   26e4c:	str	r2, [r3, #32]
   26e50:	ldr	r3, [fp, #-16]
   26e54:	mov	r2, #0
   26e58:	str	r2, [r3, #36]	; 0x24
   26e5c:	ldr	r3, [fp, #-16]
   26e60:	mov	r2, #0
   26e64:	str	r2, [r3, #40]	; 0x28
   26e68:	ldr	r3, [fp, #-16]
   26e6c:	ldr	r2, [r3, #4]
   26e70:	ldr	r3, [fp, #-16]
   26e74:	str	r2, [r3, #12]
   26e78:	mov	r3, #0
   26e7c:	mov	r0, r3
   26e80:	sub	sp, fp, #4
   26e84:	pop	{fp, pc}
   26e88:	andeq	r8, r6, r4, lsr #7
   26e8c:	andeq	r0, r0, r6, lsl #4
   26e90:			; <UNDEFINED> instruction: 0x000681b4
   26e94:			; <UNDEFINED> instruction: 0x000682b4
   26e98:	andeq	r6, r2, ip, lsl #25
   26e9c:	push	{fp}		; (str fp, [sp, #-4]!)
   26ea0:	add	fp, sp, #0
   26ea4:	sub	sp, sp, #12
   26ea8:	str	r0, [fp, #-8]
   26eac:	ldr	r3, [fp, #-8]
   26eb0:	ldr	r3, [r3, #4]
   26eb4:	cmp	r3, #131072	; 0x20000
   26eb8:	bcs	26ed0 <__assert_fail@plt+0x147e4>
   26ebc:	ldr	r3, [fp, #-8]
   26ec0:	ldr	r2, [r3, #4]
   26ec4:	ldr	r3, [fp, #-8]
   26ec8:	str	r2, [r3, #12]
   26ecc:	b	26f00 <__assert_fail@plt+0x14814>
   26ed0:	ldr	r3, [fp, #-8]
   26ed4:	ldr	r3, [r3, #8]
   26ed8:	cmp	r3, #131072	; 0x20000
   26edc:	bls	26ef4 <__assert_fail@plt+0x14808>
   26ee0:	ldr	r3, [fp, #-8]
   26ee4:	ldr	r2, [r3, #8]
   26ee8:	ldr	r3, [fp, #-8]
   26eec:	str	r2, [r3, #12]
   26ef0:	b	26f00 <__assert_fail@plt+0x14814>
   26ef4:	ldr	r3, [fp, #-8]
   26ef8:	mov	r2, #131072	; 0x20000
   26efc:	str	r2, [r3, #12]
   26f00:	nop			; (mov r0, r0)
   26f04:	add	sp, fp, #0
   26f08:	pop	{fp}		; (ldr fp, [sp], #4)
   26f0c:	bx	lr
   26f10:	push	{fp, lr}
   26f14:	add	fp, sp, #4
   26f18:	sub	sp, sp, #16
   26f1c:	str	r0, [fp, #-8]
   26f20:	str	r1, [fp, #-12]
   26f24:	str	r2, [fp, #-16]
   26f28:	ldr	r3, [fp, #-12]
   26f2c:	mov	r2, #0
   26f30:	str	r2, [r3]
   26f34:	ldr	r3, [fp, #-12]
   26f38:	mov	r2, #0
   26f3c:	str	r2, [r3, #16]
   26f40:	ldr	r3, [fp, #-12]
   26f44:	mov	r2, #0
   26f48:	str	r2, [r3, #4]
   26f4c:	ldr	r3, [fp, #-12]
   26f50:	mov	r2, #0
   26f54:	str	r2, [r3, #8]
   26f58:	ldr	r3, [fp, #-12]
   26f5c:	mov	r2, #0
   26f60:	str	r2, [r3, #36]	; 0x24
   26f64:	ldr	r3, [fp, #-12]
   26f68:	mov	r2, #0
   26f6c:	str	r2, [r3, #40]	; 0x28
   26f70:	ldr	r3, [fp, #-8]
   26f74:	ldr	r3, [r3, #12]
   26f78:	ldr	r2, [pc, #136]	; 27008 <__assert_fail@plt+0x1491c>
   26f7c:	cmp	r3, r2
   26f80:	bls	26f98 <__assert_fail@plt+0x148ac>
   26f84:	ldr	r3, [pc, #128]	; 2700c <__assert_fail@plt+0x14920>
   26f88:	mov	r2, #572	; 0x23c
   26f8c:	ldr	r1, [pc, #124]	; 27010 <__assert_fail@plt+0x14924>
   26f90:	ldr	r0, [pc, #124]	; 27014 <__assert_fail@plt+0x14928>
   26f94:	bl	126ec <__assert_fail@plt>
   26f98:	ldr	r3, [fp, #-8]
   26f9c:	ldr	r3, [r3, #12]
   26fa0:	add	r3, r3, #1
   26fa4:	mov	r0, r3
   26fa8:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   26fac:	mov	r3, r0
   26fb0:	mov	r2, r3
   26fb4:	ldr	r3, [fp, #-12]
   26fb8:	str	r2, [r3, #12]
   26fbc:	ldr	r3, [fp, #-12]
   26fc0:	mov	r2, #0
   26fc4:	str	r2, [r3, #20]
   26fc8:	ldr	r3, [fp, #-12]
   26fcc:	ldr	r2, [r3, #20]
   26fd0:	ldr	r3, [fp, #-12]
   26fd4:	str	r2, [r3, #16]
   26fd8:	ldr	r3, [fp, #-12]
   26fdc:	mov	r2, #0
   26fe0:	str	r2, [r3, #28]
   26fe4:	ldr	r3, [fp, #-12]
   26fe8:	mvn	r2, #0
   26fec:	str	r2, [r3, #32]
   26ff0:	ldr	r3, [fp, #-12]
   26ff4:	ldr	r2, [fp, #-16]
   26ff8:	str	r2, [r3, #24]
   26ffc:	nop			; (mov r0, r0)
   27000:	sub	sp, fp, #4
   27004:	pop	{fp, pc}
   27008:	svcvc	0x00fff7ff
   2700c:			; <UNDEFINED> instruction: 0x000683b8
   27010:			; <UNDEFINED> instruction: 0x000681b4
   27014:	andeq	r8, r6, ip, asr #5
   27018:	push	{fp}		; (str fp, [sp, #-4]!)
   2701c:	add	fp, sp, #0
   27020:	sub	sp, sp, #12
   27024:	str	r0, [fp, #-8]
   27028:	str	r1, [fp, #-12]
   2702c:	ldr	r3, [fp, #-8]
   27030:	ldr	r2, [r3, #28]
   27034:	ldr	r3, [fp, #-12]
   27038:	str	r2, [r3]
   2703c:	ldr	r3, [fp, #-12]
   27040:	ldr	r2, [r3, #20]
   27044:	ldr	r3, [fp, #-12]
   27048:	str	r2, [r3, #16]
   2704c:	ldr	r3, [fp, #-12]
   27050:	mov	r2, #0
   27054:	str	r2, [r3, #28]
   27058:	ldr	r3, [fp, #-12]
   2705c:	mvn	r2, #0
   27060:	str	r2, [r3, #32]
   27064:	nop			; (mov r0, r0)
   27068:	add	sp, fp, #0
   2706c:	pop	{fp}		; (ldr fp, [sp], #4)
   27070:	bx	lr
   27074:	push	{r4, fp, lr}
   27078:	add	fp, sp, #8
   2707c:	sub	sp, sp, #36	; 0x24
   27080:	str	r0, [fp, #-32]	; 0xffffffe0
   27084:	str	r1, [fp, #-36]	; 0xffffffdc
   27088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2708c:	bl	122f0 <getenv@plt>
   27090:	str	r0, [fp, #-16]
   27094:	ldr	r3, [fp, #-16]
   27098:	cmp	r3, #0
   2709c:	beq	2710c <__assert_fail@plt+0x14a20>
   270a0:	sub	r2, fp, #24
   270a4:	sub	r1, fp, #20
   270a8:	mov	r3, #0
   270ac:	str	r3, [sp]
   270b0:	mov	r3, r2
   270b4:	mov	r2, #10
   270b8:	ldr	r0, [fp, #-16]
   270bc:	bl	3de90 <__assert_fail@plt+0x2b7a4>
   270c0:	mov	r3, r0
   270c4:	cmp	r3, #0
   270c8:	bne	270e4 <__assert_fail@plt+0x149f8>
   270cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   270d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   270d4:	cmp	r2, r3
   270d8:	bls	2710c <__assert_fail@plt+0x14a20>
   270dc:	mov	r3, #1
   270e0:	b	27110 <__assert_fail@plt+0x14a24>
   270e4:	bl	12404 <__errno_location@plt>
   270e8:	mov	r3, r0
   270ec:	ldr	r4, [r3]
   270f0:	ldr	r0, [pc, #36]	; 2711c <__assert_fail@plt+0x14a30>
   270f4:	bl	12398 <gettext@plt>
   270f8:	mov	r2, r0
   270fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27100:	mov	r1, r4
   27104:	mov	r0, #1
   27108:	bl	122b4 <error@plt>
   2710c:	mov	r3, #0
   27110:	mov	r0, r3
   27114:	sub	sp, fp, #8
   27118:	pop	{r4, fp, pc}
   2711c:	strdeq	r8, [r6], -r0
   27120:	push	{fp, lr}
   27124:	add	fp, sp, #4
   27128:	sub	sp, sp, #16
   2712c:	str	r0, [fp, #-16]
   27130:	mov	r3, #0
   27134:	str	r3, [fp, #-12]
   27138:	ldr	r3, [fp, #-12]
   2713c:	str	r3, [fp, #-8]
   27140:	b	2717c <__assert_fail@plt+0x14a90>
   27144:	ldr	r3, [fp, #-12]
   27148:	add	r3, r3, #1
   2714c:	str	r3, [fp, #-12]
   27150:	ldr	r3, [fp, #-16]
   27154:	ldr	r3, [r3]
   27158:	mov	r0, r3
   2715c:	bl	123bc <strlen@plt>
   27160:	mov	r2, r0
   27164:	ldr	r3, [fp, #-8]
   27168:	add	r3, r3, r2
   2716c:	str	r3, [fp, #-8]
   27170:	ldr	r3, [fp, #-16]
   27174:	add	r3, r3, #4
   27178:	str	r3, [fp, #-16]
   2717c:	ldr	r3, [fp, #-16]
   27180:	ldr	r3, [r3]
   27184:	cmp	r3, #0
   27188:	bne	27144 <__assert_fail@plt+0x14a58>
   2718c:	ldr	r1, [fp, #-12]
   27190:	ldr	r0, [pc, #68]	; 271dc <__assert_fail@plt+0x14af0>
   27194:	bl	27074 <__assert_fail@plt+0x14988>
   27198:	mov	r3, r0
   2719c:	cmp	r3, #0
   271a0:	bne	271bc <__assert_fail@plt+0x14ad0>
   271a4:	ldr	r1, [fp, #-8]
   271a8:	ldr	r0, [pc, #48]	; 271e0 <__assert_fail@plt+0x14af4>
   271ac:	bl	27074 <__assert_fail@plt+0x14988>
   271b0:	mov	r3, r0
   271b4:	cmp	r3, #0
   271b8:	beq	271c4 <__assert_fail@plt+0x14ad8>
   271bc:	mov	r3, #1
   271c0:	b	271c8 <__assert_fail@plt+0x14adc>
   271c4:	mov	r3, #0
   271c8:	and	r3, r3, #1
   271cc:	uxtb	r3, r3
   271d0:	mov	r0, r3
   271d4:	sub	sp, fp, #4
   271d8:	pop	{fp, pc}
   271dc:	andeq	r8, r6, r0, lsr r3
   271e0:	andeq	r8, r6, r8, asr r3
   271e4:	push	{fp, lr}
   271e8:	add	fp, sp, #4
   271ec:	sub	sp, sp, #32
   271f0:	str	r0, [fp, #-24]	; 0xffffffe8
   271f4:	str	r1, [fp, #-28]	; 0xffffffe4
   271f8:	str	r2, [fp, #-32]	; 0xffffffe0
   271fc:	mvn	r3, #0
   27200:	str	r3, [fp, #-8]
   27204:	mov	r3, #0
   27208:	str	r3, [fp, #-12]
   2720c:	sub	r3, fp, #20
   27210:	mov	r0, r3
   27214:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   27218:	mov	r3, r0
   2721c:	cmp	r3, #0
   27220:	bne	272cc <__assert_fail@plt+0x14be0>
   27224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27228:	bl	3bc68 <__assert_fail@plt+0x2957c>
   2722c:	mov	r3, r0
   27230:	cmp	r3, #0
   27234:	bne	27288 <__assert_fail@plt+0x14b9c>
   27238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2723c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27240:	blx	r3
   27244:	str	r0, [fp, #-8]
   27248:	ldr	r3, [fp, #-8]
   2724c:	cmp	r3, #0
   27250:	bge	27264 <__assert_fail@plt+0x14b78>
   27254:	bl	12404 <__errno_location@plt>
   27258:	mov	r3, r0
   2725c:	ldr	r3, [r3]
   27260:	b	27268 <__assert_fail@plt+0x14b7c>
   27264:	mov	r3, #0
   27268:	str	r3, [fp, #-12]
   2726c:	sub	r3, fp, #20
   27270:	mov	r0, r3
   27274:	bl	3bc68 <__assert_fail@plt+0x2957c>
   27278:	mov	r3, r0
   2727c:	cmp	r3, #0
   27280:	beq	272b0 <__assert_fail@plt+0x14bc4>
   27284:	b	2729c <__assert_fail@plt+0x14bb0>
   27288:	bl	12404 <__errno_location@plt>
   2728c:	mov	r3, r0
   27290:	ldr	r3, [r3]
   27294:	mov	r0, r3
   27298:	bl	2fe70 <__assert_fail@plt+0x1d784>
   2729c:	bl	12404 <__errno_location@plt>
   272a0:	mov	r3, r0
   272a4:	ldr	r3, [r3]
   272a8:	mov	r0, r3
   272ac:	bl	2fe70 <__assert_fail@plt+0x1d784>
   272b0:	sub	r3, fp, #20
   272b4:	mov	r0, r3
   272b8:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   272bc:	ldr	r3, [fp, #-12]
   272c0:	cmp	r3, #0
   272c4:	beq	272f0 <__assert_fail@plt+0x14c04>
   272c8:	b	272e0 <__assert_fail@plt+0x14bf4>
   272cc:	bl	12404 <__errno_location@plt>
   272d0:	mov	r3, r0
   272d4:	ldr	r3, [r3]
   272d8:	mov	r0, r3
   272dc:	bl	2fe30 <__assert_fail@plt+0x1d744>
   272e0:	bl	12404 <__errno_location@plt>
   272e4:	mov	r2, r0
   272e8:	ldr	r3, [fp, #-12]
   272ec:	str	r3, [r2]
   272f0:	ldr	r3, [fp, #-8]
   272f4:	mov	r0, r3
   272f8:	sub	sp, fp, #4
   272fc:	pop	{fp, pc}
   27300:	push	{fp, lr}
   27304:	add	fp, sp, #4
   27308:	sub	sp, sp, #32
   2730c:	str	r0, [fp, #-24]	; 0xffffffe8
   27310:	str	r1, [fp, #-28]	; 0xffffffe4
   27314:	str	r2, [fp, #-32]	; 0xffffffe0
   27318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2731c:	cmn	r3, #100	; 0x64
   27320:	bne	27338 <__assert_fail@plt+0x14c4c>
   27324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27328:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2732c:	blx	r3
   27330:	mov	r3, r0
   27334:	b	27438 <__assert_fail@plt+0x14d4c>
   27338:	sub	r3, fp, #20
   2733c:	mov	r0, r3
   27340:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   27344:	mov	r3, r0
   27348:	cmp	r3, #0
   2734c:	beq	27364 <__assert_fail@plt+0x14c78>
   27350:	bl	12404 <__errno_location@plt>
   27354:	mov	r3, r0
   27358:	ldr	r3, [r3]
   2735c:	mov	r0, r3
   27360:	bl	2fe30 <__assert_fail@plt+0x1d744>
   27364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27368:	bl	125d8 <fchdir@plt>
   2736c:	mov	r3, r0
   27370:	cmp	r3, #0
   27374:	beq	273ac <__assert_fail@plt+0x14cc0>
   27378:	bl	12404 <__errno_location@plt>
   2737c:	mov	r3, r0
   27380:	ldr	r3, [r3]
   27384:	str	r3, [fp, #-8]
   27388:	sub	r3, fp, #20
   2738c:	mov	r0, r3
   27390:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   27394:	bl	12404 <__errno_location@plt>
   27398:	mov	r2, r0
   2739c:	ldr	r3, [fp, #-8]
   273a0:	str	r3, [r2]
   273a4:	mvn	r3, #0
   273a8:	b	27438 <__assert_fail@plt+0x14d4c>
   273ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   273b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   273b4:	blx	r3
   273b8:	str	r0, [fp, #-12]
   273bc:	ldr	r3, [fp, #-12]
   273c0:	cmp	r3, #0
   273c4:	bge	273d8 <__assert_fail@plt+0x14cec>
   273c8:	bl	12404 <__errno_location@plt>
   273cc:	mov	r3, r0
   273d0:	ldr	r3, [r3]
   273d4:	b	273dc <__assert_fail@plt+0x14cf0>
   273d8:	mov	r3, #0
   273dc:	str	r3, [fp, #-8]
   273e0:	sub	r3, fp, #20
   273e4:	mov	r0, r3
   273e8:	bl	3bc68 <__assert_fail@plt+0x2957c>
   273ec:	mov	r3, r0
   273f0:	cmp	r3, #0
   273f4:	beq	2740c <__assert_fail@plt+0x14d20>
   273f8:	bl	12404 <__errno_location@plt>
   273fc:	mov	r3, r0
   27400:	ldr	r3, [r3]
   27404:	mov	r0, r3
   27408:	bl	2fe70 <__assert_fail@plt+0x1d784>
   2740c:	sub	r3, fp, #20
   27410:	mov	r0, r3
   27414:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   27418:	ldr	r3, [fp, #-8]
   2741c:	cmp	r3, #0
   27420:	beq	27434 <__assert_fail@plt+0x14d48>
   27424:	bl	12404 <__errno_location@plt>
   27428:	mov	r2, r0
   2742c:	ldr	r3, [fp, #-8]
   27430:	str	r3, [r2]
   27434:	ldr	r3, [fp, #-12]
   27438:	mov	r0, r3
   2743c:	sub	sp, fp, #4
   27440:	pop	{fp, pc}
   27444:	push	{fp}		; (str fp, [sp, #-4]!)
   27448:	add	fp, sp, #0
   2744c:	sub	sp, sp, #20
   27450:	str	r0, [fp, #-16]
   27454:	str	r1, [fp, #-20]	; 0xffffffec
   27458:	ldr	r3, [fp, #-16]
   2745c:	cmp	r3, #0
   27460:	bne	27470 <__assert_fail@plt+0x14d84>
   27464:	mov	r3, #16
   27468:	str	r3, [fp, #-8]
   2746c:	b	274a4 <__assert_fail@plt+0x14db8>
   27470:	ldr	r3, [fp, #-16]
   27474:	str	r3, [fp, #-8]
   27478:	b	274a4 <__assert_fail@plt+0x14db8>
   2747c:	ldr	r3, [fp, #-8]
   27480:	lsl	r2, r3, #1
   27484:	ldr	r3, [fp, #-8]
   27488:	cmp	r2, r3
   2748c:	bcs	27498 <__assert_fail@plt+0x14dac>
   27490:	ldr	r3, [fp, #-20]	; 0xffffffec
   27494:	b	274b8 <__assert_fail@plt+0x14dcc>
   27498:	ldr	r3, [fp, #-8]
   2749c:	lsl	r3, r3, #1
   274a0:	str	r3, [fp, #-8]
   274a4:	ldr	r2, [fp, #-8]
   274a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   274ac:	cmp	r2, r3
   274b0:	bcc	2747c <__assert_fail@plt+0x14d90>
   274b4:	ldr	r3, [fp, #-8]
   274b8:	mov	r0, r3
   274bc:	add	sp, fp, #0
   274c0:	pop	{fp}		; (ldr fp, [sp], #4)
   274c4:	bx	lr
   274c8:	push	{fp, lr}
   274cc:	add	fp, sp, #4
   274d0:	sub	sp, sp, #32
   274d4:	str	r0, [fp, #-24]	; 0xffffffe8
   274d8:	str	r1, [fp, #-28]	; 0xffffffe4
   274dc:	str	r2, [fp, #-32]	; 0xffffffe0
   274e0:	bl	12404 <__errno_location@plt>
   274e4:	mov	r3, r0
   274e8:	ldr	r3, [r3]
   274ec:	str	r3, [fp, #-8]
   274f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   274f4:	cmp	r3, #0
   274f8:	bne	27510 <__assert_fail@plt+0x14e24>
   274fc:	ldr	r3, [pc, #248]	; 275fc <__assert_fail@plt+0x14f10>
   27500:	mov	r2, #71	; 0x47
   27504:	ldr	r1, [pc, #244]	; 27600 <__assert_fail@plt+0x14f14>
   27508:	ldr	r0, [pc, #244]	; 27604 <__assert_fail@plt+0x14f18>
   2750c:	bl	126ec <__assert_fail@plt>
   27510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27514:	ldr	r3, [r3]
   27518:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2751c:	mov	r0, r3
   27520:	bl	27444 <__assert_fail@plt+0x14d58>
   27524:	str	r0, [fp, #-16]
   27528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2752c:	ldr	r3, [r3]
   27530:	cmp	r3, #0
   27534:	bne	27578 <__assert_fail@plt+0x14e8c>
   27538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2753c:	cmp	r3, #0
   27540:	beq	27558 <__assert_fail@plt+0x14e6c>
   27544:	ldr	r3, [pc, #176]	; 275fc <__assert_fail@plt+0x14f10>
   27548:	mov	r2, #79	; 0x4f
   2754c:	ldr	r1, [pc, #172]	; 27600 <__assert_fail@plt+0x14f14>
   27550:	ldr	r0, [pc, #176]	; 27608 <__assert_fail@plt+0x14f1c>
   27554:	bl	126ec <__assert_fail@plt>
   27558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2755c:	ldr	r2, [fp, #-16]
   27560:	str	r2, [r3]
   27564:	ldr	r0, [fp, #-16]
   27568:	bl	42ba8 <__assert_fail@plt+0x304bc>
   2756c:	mov	r3, r0
   27570:	str	r3, [fp, #-12]
   27574:	b	275d0 <__assert_fail@plt+0x14ee4>
   27578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2757c:	ldr	r2, [r3]
   27580:	ldr	r3, [fp, #-16]
   27584:	cmp	r2, r3
   27588:	beq	275c8 <__assert_fail@plt+0x14edc>
   2758c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27590:	ldr	r2, [fp, #-16]
   27594:	str	r2, [r3]
   27598:	ldr	r1, [fp, #-16]
   2759c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   275a0:	bl	43d30 <__assert_fail@plt+0x31644>
   275a4:	str	r0, [fp, #-12]
   275a8:	ldr	r3, [fp, #-12]
   275ac:	cmp	r3, #0
   275b0:	bne	275d0 <__assert_fail@plt+0x14ee4>
   275b4:	bl	12404 <__errno_location@plt>
   275b8:	mov	r3, r0
   275bc:	ldr	r3, [r3]
   275c0:	str	r3, [fp, #-8]
   275c4:	b	275d0 <__assert_fail@plt+0x14ee4>
   275c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   275cc:	str	r3, [fp, #-12]
   275d0:	ldr	r3, [fp, #-12]
   275d4:	cmp	r3, #0
   275d8:	beq	275ec <__assert_fail@plt+0x14f00>
   275dc:	bl	12404 <__errno_location@plt>
   275e0:	mov	r2, r0
   275e4:	ldr	r3, [fp, #-8]
   275e8:	str	r3, [r2]
   275ec:	ldr	r3, [fp, #-12]
   275f0:	mov	r0, r3
   275f4:	sub	sp, fp, #4
   275f8:	pop	{fp, pc}
   275fc:	strdeq	r8, [r6], -r4
   27600:	andeq	r8, r6, r8, asr #7
   27604:	ldrdeq	r8, [r6], -r4
   27608:	andeq	r8, r6, r0, ror #7
   2760c:	push	{fp, lr}
   27610:	add	fp, sp, #4
   27614:	sub	sp, sp, #24
   27618:	str	r0, [fp, #-16]
   2761c:	str	r1, [fp, #-20]	; 0xffffffec
   27620:	str	r2, [fp, #-24]	; 0xffffffe8
   27624:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27628:	ldr	r1, [fp, #-20]	; 0xffffffec
   2762c:	ldr	r0, [fp, #-16]
   27630:	bl	274c8 <__assert_fail@plt+0x14ddc>
   27634:	str	r0, [fp, #-8]
   27638:	ldr	r3, [fp, #-8]
   2763c:	cmp	r3, #0
   27640:	bne	27650 <__assert_fail@plt+0x14f64>
   27644:	ldr	r0, [fp, #-16]
   27648:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2764c:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   27650:	ldr	r3, [fp, #-8]
   27654:	mov	r0, r3
   27658:	sub	sp, fp, #4
   2765c:	pop	{fp, pc}
   27660:	push	{r4, fp, lr}
   27664:	add	fp, sp, #8
   27668:	sub	sp, sp, #28
   2766c:	ldr	r3, [pc, #332]	; 277c0 <__assert_fail@plt+0x150d4>
   27670:	str	r3, [fp, #-24]	; 0xffffffe8
   27674:	mvn	r3, #0
   27678:	str	r3, [fp, #-16]
   2767c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27680:	bl	2a27c <__assert_fail@plt+0x17b90>
   27684:	str	r0, [fp, #-28]	; 0xffffffe4
   27688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2768c:	cmp	r3, #0
   27690:	beq	277b0 <__assert_fail@plt+0x150c4>
   27694:	mov	r3, #0
   27698:	str	r3, [fp, #-20]	; 0xffffffec
   2769c:	bl	12404 <__errno_location@plt>
   276a0:	mov	r2, r0
   276a4:	mov	r3, #0
   276a8:	str	r3, [r2]
   276ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   276b0:	bl	1259c <readdir64@plt>
   276b4:	str	r0, [fp, #-32]	; 0xffffffe0
   276b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   276bc:	cmp	r3, #0
   276c0:	bne	27714 <__assert_fail@plt+0x15028>
   276c4:	bl	12404 <__errno_location@plt>
   276c8:	mov	r3, r0
   276cc:	ldr	r3, [r3]
   276d0:	cmp	r3, #0
   276d4:	beq	27790 <__assert_fail@plt+0x150a4>
   276d8:	bl	12404 <__errno_location@plt>
   276dc:	mov	r3, r0
   276e0:	ldr	r4, [r3]
   276e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   276e8:	mov	r1, #8
   276ec:	mov	r0, #0
   276f0:	bl	3b718 <__assert_fail@plt+0x2902c>
   276f4:	mov	r3, r0
   276f8:	ldr	r2, [pc, #196]	; 277c4 <__assert_fail@plt+0x150d8>
   276fc:	mov	r1, r4
   27700:	mov	r0, #0
   27704:	bl	122b4 <error@plt>
   27708:	mov	r3, #0
   2770c:	str	r3, [fp, #-20]	; 0xffffffec
   27710:	b	27790 <__assert_fail@plt+0x150a4>
   27714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27718:	ldrb	r3, [r3, #19]
   2771c:	cmp	r3, #46	; 0x2e
   27720:	bne	27754 <__assert_fail@plt+0x15068>
   27724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27728:	ldrb	r3, [r3, #20]
   2772c:	cmp	r3, #0
   27730:	beq	2769c <__assert_fail@plt+0x14fb0>
   27734:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27738:	ldrb	r3, [r3, #20]
   2773c:	cmp	r3, #46	; 0x2e
   27740:	bne	27754 <__assert_fail@plt+0x15068>
   27744:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27748:	ldrb	r3, [r3, #21]
   2774c:	cmp	r3, #0
   27750:	beq	2769c <__assert_fail@plt+0x14fb0>
   27754:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27758:	add	r3, r3, #19
   2775c:	mov	r1, #0
   27760:	mov	r0, r3
   27764:	bl	296f8 <__assert_fail@plt+0x1700c>
   27768:	str	r0, [fp, #-36]	; 0xffffffdc
   2776c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27770:	ldr	r3, [fp, #-16]
   27774:	cmp	r2, r3
   27778:	ble	27784 <__assert_fail@plt+0x15098>
   2777c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27780:	str	r3, [fp, #-16]
   27784:	mov	r3, #1
   27788:	str	r3, [fp, #-20]	; 0xffffffec
   2778c:	b	2769c <__assert_fail@plt+0x14fb0>
   27790:	nop			; (mov r0, r0)
   27794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27798:	bl	126bc <closedir@plt>
   2779c:	ldr	r3, [fp, #-20]	; 0xffffffec
   277a0:	cmp	r3, #0
   277a4:	beq	277b0 <__assert_fail@plt+0x150c4>
   277a8:	ldr	r3, [fp, #-16]
   277ac:	b	277b4 <__assert_fail@plt+0x150c8>
   277b0:	mvn	r3, #0
   277b4:	mov	r0, r3
   277b8:	sub	sp, fp, #8
   277bc:	pop	{r4, fp, pc}
   277c0:	andeq	r8, r6, r0, lsl #8
   277c4:	andeq	r8, r6, r0, lsl r4
   277c8:	push	{fp, lr}
   277cc:	add	fp, sp, #4
   277d0:	sub	sp, sp, #24
   277d4:	bl	27660 <__assert_fail@plt+0x14f74>
   277d8:	str	r0, [fp, #-8]
   277dc:	ldr	r3, [fp, #-8]
   277e0:	cmp	r3, #0
   277e4:	blt	277f0 <__assert_fail@plt+0x15104>
   277e8:	ldr	r3, [fp, #-8]
   277ec:	b	2785c <__assert_fail@plt+0x15170>
   277f0:	mov	r0, #4
   277f4:	bl	12188 <sysconf@plt>
   277f8:	str	r0, [fp, #-8]
   277fc:	ldr	r3, [fp, #-8]
   27800:	cmn	r3, #1
   27804:	bne	27810 <__assert_fail@plt+0x15124>
   27808:	mov	r3, #20
   2780c:	str	r3, [fp, #-8]
   27810:	sub	r3, fp, #28
   27814:	mov	r1, r3
   27818:	mov	r0, #7
   2781c:	bl	12194 <getrlimit64@plt>
   27820:	mov	r3, r0
   27824:	cmp	r3, #0
   27828:	bne	27858 <__assert_fail@plt+0x1516c>
   2782c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   27830:	mvn	r0, #0
   27834:	mvn	r1, #0
   27838:	cmp	r3, r1
   2783c:	cmpeq	r2, r0
   27840:	bne	2784c <__assert_fail@plt+0x15160>
   27844:	ldr	r3, [fp, #-8]
   27848:	b	2785c <__assert_fail@plt+0x15170>
   2784c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   27850:	mov	r3, r2
   27854:	b	2785c <__assert_fail@plt+0x15170>
   27858:	ldr	r3, [fp, #-8]
   2785c:	mov	r0, r3
   27860:	sub	sp, fp, #4
   27864:	pop	{fp, pc}
   27868:	push	{fp, lr}
   2786c:	add	fp, sp, #4
   27870:	sub	sp, sp, #544	; 0x220
   27874:	str	r0, [fp, #-536]	; 0xfffffde8
   27878:	str	r1, [fp, #-540]	; 0xfffffde4
   2787c:	str	r2, [fp, #-544]	; 0xfffffde0
   27880:	str	r3, [fp, #-548]	; 0xfffffddc
   27884:	mov	r3, #0
   27888:	str	r3, [fp, #-20]	; 0xffffffec
   2788c:	b	27a00 <__assert_fail@plt+0x15314>
   27890:	ldr	r2, [fp, #-540]	; 0xfffffde4
   27894:	ldr	r3, [fp, #-536]	; 0xfffffde8
   27898:	sub	r3, r2, r3
   2789c:	str	r3, [fp, #-12]
   278a0:	ldr	r3, [fp, #-12]
   278a4:	cmp	r3, #64	; 0x40
   278a8:	ble	278b4 <__assert_fail@plt+0x151c8>
   278ac:	mov	r3, #64	; 0x40
   278b0:	str	r3, [fp, #-12]
   278b4:	mov	r3, #0
   278b8:	str	r3, [fp, #-8]
   278bc:	b	2792c <__assert_fail@plt+0x15240>
   278c0:	sub	r3, fp, #4
   278c4:	sub	r2, r3, #528	; 0x210
   278c8:	ldr	r3, [fp, #-8]
   278cc:	lsl	r3, r3, #3
   278d0:	add	r3, r2, r3
   278d4:	add	r3, r3, #4
   278d8:	mov	r2, #5
   278dc:	strh	r2, [r3]
   278e0:	sub	r3, fp, #4
   278e4:	sub	r2, r3, #528	; 0x210
   278e8:	ldr	r3, [fp, #-8]
   278ec:	lsl	r3, r3, #3
   278f0:	add	r3, r2, r3
   278f4:	add	r3, r3, #6
   278f8:	mov	r2, #0
   278fc:	strh	r2, [r3]
   27900:	ldr	r2, [fp, #-536]	; 0xfffffde8
   27904:	ldr	r3, [fp, #-8]
   27908:	add	r2, r2, r3
   2790c:	ldr	r3, [fp, #-8]
   27910:	lsl	r3, r3, #3
   27914:	sub	r1, fp, #4
   27918:	add	r3, r1, r3
   2791c:	str	r2, [r3, #-528]	; 0xfffffdf0
   27920:	ldr	r3, [fp, #-8]
   27924:	add	r3, r3, #1
   27928:	str	r3, [fp, #-8]
   2792c:	ldr	r2, [fp, #-8]
   27930:	ldr	r3, [fp, #-12]
   27934:	cmp	r2, r3
   27938:	blt	278c0 <__assert_fail@plt+0x151d4>
   2793c:	ldr	r1, [fp, #-12]
   27940:	sub	r3, fp, #532	; 0x214
   27944:	mov	r2, #0
   27948:	mov	r0, r3
   2794c:	bl	1220c <poll@plt>
   27950:	str	r0, [fp, #-20]	; 0xffffffec
   27954:	ldr	r3, [fp, #-20]	; 0xffffffec
   27958:	cmn	r3, #1
   2795c:	bne	27968 <__assert_fail@plt+0x1527c>
   27960:	mvn	r3, #0
   27964:	b	27a14 <__assert_fail@plt+0x15328>
   27968:	mov	r3, #0
   2796c:	str	r3, [fp, #-16]
   27970:	b	279e0 <__assert_fail@plt+0x152f4>
   27974:	sub	r3, fp, #4
   27978:	sub	r2, r3, #528	; 0x210
   2797c:	ldr	r3, [fp, #-16]
   27980:	lsl	r3, r3, #3
   27984:	add	r3, r2, r3
   27988:	add	r3, r3, #6
   2798c:	ldrsh	r3, [r3]
   27990:	cmp	r3, #32
   27994:	beq	279d4 <__assert_fail@plt+0x152e8>
   27998:	ldr	r3, [fp, #-16]
   2799c:	lsl	r3, r3, #3
   279a0:	sub	r2, fp, #4
   279a4:	add	r3, r2, r3
   279a8:	ldr	r2, [r3, #-528]	; 0xfffffdf0
   279ac:	ldr	r3, [fp, #-544]	; 0xfffffde0
   279b0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   279b4:	mov	r0, r2
   279b8:	blx	r3
   279bc:	str	r0, [fp, #-20]	; 0xffffffec
   279c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   279c4:	cmp	r3, #0
   279c8:	beq	279d4 <__assert_fail@plt+0x152e8>
   279cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   279d0:	b	27a14 <__assert_fail@plt+0x15328>
   279d4:	ldr	r3, [fp, #-16]
   279d8:	add	r3, r3, #1
   279dc:	str	r3, [fp, #-16]
   279e0:	ldr	r2, [fp, #-16]
   279e4:	ldr	r3, [fp, #-12]
   279e8:	cmp	r2, r3
   279ec:	blt	27974 <__assert_fail@plt+0x15288>
   279f0:	ldr	r2, [fp, #-536]	; 0xfffffde8
   279f4:	ldr	r3, [fp, #-12]
   279f8:	add	r3, r2, r3
   279fc:	str	r3, [fp, #-536]	; 0xfffffde8
   27a00:	ldr	r2, [fp, #-536]	; 0xfffffde8
   27a04:	ldr	r3, [fp, #-540]	; 0xfffffde4
   27a08:	cmp	r2, r3
   27a0c:	blt	27890 <__assert_fail@plt+0x151a4>
   27a10:	mov	r3, #0
   27a14:	mov	r0, r3
   27a18:	sub	sp, fp, #4
   27a1c:	pop	{fp, pc}
   27a20:	push	{fp, lr}
   27a24:	add	fp, sp, #4
   27a28:	sub	sp, sp, #16
   27a2c:	str	r0, [fp, #-16]
   27a30:	mov	r1, #1
   27a34:	ldr	r0, [fp, #-16]
   27a38:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   27a3c:	str	r0, [fp, #-8]
   27a40:	ldr	r3, [fp, #-8]
   27a44:	and	r3, r3, #1
   27a48:	mov	r0, r3
   27a4c:	sub	sp, fp, #4
   27a50:	pop	{fp, pc}
   27a54:	push	{fp, lr}
   27a58:	add	fp, sp, #4
   27a5c:	sub	sp, sp, #16
   27a60:	str	r0, [fp, #-16]
   27a64:	str	r1, [fp, #-20]	; 0xffffffec
   27a68:	ldr	r0, [fp, #-16]
   27a6c:	bl	27a20 <__assert_fail@plt+0x15334>
   27a70:	mov	r3, r0
   27a74:	cmp	r3, #0
   27a78:	beq	27a84 <__assert_fail@plt+0x15398>
   27a7c:	mov	r3, #0
   27a80:	b	27b10 <__assert_fail@plt+0x15424>
   27a84:	ldr	r3, [fp, #-20]	; 0xffffffec
   27a88:	str	r3, [fp, #-8]
   27a8c:	ldr	r3, [fp, #-8]
   27a90:	ldr	r0, [r3]
   27a94:	ldr	r3, [fp, #-8]
   27a98:	ldr	r3, [r3, #4]
   27a9c:	add	r3, r3, #1
   27aa0:	lsl	r1, r3, #2
   27aa4:	ldr	r3, [fp, #-8]
   27aa8:	add	r3, r3, #8
   27aac:	mov	r2, r3
   27ab0:	bl	274c8 <__assert_fail@plt+0x14ddc>
   27ab4:	str	r0, [fp, #-12]
   27ab8:	ldr	r3, [fp, #-12]
   27abc:	cmp	r3, #0
   27ac0:	beq	27b0c <__assert_fail@plt+0x15420>
   27ac4:	ldr	r3, [fp, #-8]
   27ac8:	ldr	r2, [fp, #-12]
   27acc:	str	r2, [r3]
   27ad0:	ldr	r3, [fp, #-8]
   27ad4:	ldr	r2, [r3]
   27ad8:	ldr	r3, [fp, #-8]
   27adc:	ldr	r3, [r3, #4]
   27ae0:	lsl	r3, r3, #2
   27ae4:	add	r3, r2, r3
   27ae8:	ldr	r2, [fp, #-16]
   27aec:	str	r2, [r3]
   27af0:	ldr	r3, [fp, #-8]
   27af4:	ldr	r3, [r3, #4]
   27af8:	add	r2, r3, #1
   27afc:	ldr	r3, [fp, #-8]
   27b00:	str	r2, [r3, #4]
   27b04:	mov	r3, #0
   27b08:	b	27b10 <__assert_fail@plt+0x15424>
   27b0c:	mvn	r3, #0
   27b10:	mov	r0, r3
   27b14:	sub	sp, fp, #4
   27b18:	pop	{fp, pc}
   27b1c:	push	{fp, lr}
   27b20:	add	fp, sp, #4
   27b24:	sub	sp, sp, #16
   27b28:	bl	277c8 <__assert_fail@plt+0x150dc>
   27b2c:	str	r0, [fp, #-8]
   27b30:	mov	r3, #0
   27b34:	str	r3, [fp, #-20]	; 0xffffffec
   27b38:	mov	r3, #0
   27b3c:	str	r3, [fp, #-12]
   27b40:	ldr	r3, [fp, #-12]
   27b44:	str	r3, [fp, #-16]
   27b48:	ldr	r3, [fp, #-8]
   27b4c:	cmn	r3, #-2147483647	; 0x80000001
   27b50:	beq	27b60 <__assert_fail@plt+0x15474>
   27b54:	ldr	r3, [fp, #-8]
   27b58:	add	r3, r3, #1
   27b5c:	str	r3, [fp, #-8]
   27b60:	sub	r3, fp, #20
   27b64:	ldr	r2, [pc, #44]	; 27b98 <__assert_fail@plt+0x154ac>
   27b68:	ldr	r1, [fp, #-8]
   27b6c:	mov	r0, #0
   27b70:	bl	27868 <__assert_fail@plt+0x1517c>
   27b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b78:	ldr	r2, [pc, #28]	; 27b9c <__assert_fail@plt+0x154b0>
   27b7c:	str	r3, [r2]
   27b80:	ldr	r3, [fp, #-16]
   27b84:	ldr	r2, [pc, #20]	; 27ba0 <__assert_fail@plt+0x154b4>
   27b88:	str	r3, [r2]
   27b8c:	nop			; (mov r0, r0)
   27b90:	sub	sp, fp, #4
   27b94:	pop	{fp, pc}
   27b98:	andeq	r7, r2, r4, asr sl
   27b9c:	andeq	ip, r7, r0, asr #29
   27ba0:	andeq	ip, r7, r4, asr #29
   27ba4:	push	{fp, lr}
   27ba8:	add	fp, sp, #4
   27bac:	sub	sp, sp, #16
   27bb0:	str	r0, [fp, #-16]
   27bb4:	str	r1, [fp, #-20]	; 0xffffffec
   27bb8:	ldr	r0, [fp, #-16]
   27bbc:	bl	27a20 <__assert_fail@plt+0x15334>
   27bc0:	mov	r3, r0
   27bc4:	cmp	r3, #0
   27bc8:	bne	27c7c <__assert_fail@plt+0x15590>
   27bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   27bd0:	str	r3, [fp, #-8]
   27bd4:	b	27c48 <__assert_fail@plt+0x1555c>
   27bd8:	ldr	r3, [fp, #-8]
   27bdc:	ldr	r2, [r3]
   27be0:	ldr	r3, [fp, #-8]
   27be4:	ldr	r3, [r3, #8]
   27be8:	lsl	r3, r3, #2
   27bec:	add	r3, r2, r3
   27bf0:	ldr	r2, [r3]
   27bf4:	ldr	r3, [fp, #-16]
   27bf8:	cmp	r2, r3
   27bfc:	bge	27c18 <__assert_fail@plt+0x1552c>
   27c00:	ldr	r3, [fp, #-8]
   27c04:	ldr	r3, [r3, #8]
   27c08:	add	r2, r3, #1
   27c0c:	ldr	r3, [fp, #-8]
   27c10:	str	r2, [r3, #8]
   27c14:	b	27c48 <__assert_fail@plt+0x1555c>
   27c18:	ldr	r3, [fp, #-8]
   27c1c:	ldr	r2, [r3]
   27c20:	ldr	r3, [fp, #-8]
   27c24:	ldr	r3, [r3, #8]
   27c28:	lsl	r3, r3, #2
   27c2c:	add	r3, r2, r3
   27c30:	ldr	r2, [r3]
   27c34:	ldr	r3, [fp, #-16]
   27c38:	cmp	r2, r3
   27c3c:	bne	27c64 <__assert_fail@plt+0x15578>
   27c40:	mov	r3, #0
   27c44:	b	27c80 <__assert_fail@plt+0x15594>
   27c48:	ldr	r3, [fp, #-8]
   27c4c:	ldr	r2, [r3, #8]
   27c50:	ldr	r3, [fp, #-8]
   27c54:	ldr	r3, [r3, #4]
   27c58:	cmp	r2, r3
   27c5c:	bcc	27bd8 <__assert_fail@plt+0x154ec>
   27c60:	b	27c68 <__assert_fail@plt+0x1557c>
   27c64:	nop			; (mov r0, r0)
   27c68:	ldr	r3, [fp, #-8]
   27c6c:	ldr	r2, [fp, #-16]
   27c70:	str	r2, [r3, #12]
   27c74:	mvn	r3, #0
   27c78:	b	27c80 <__assert_fail@plt+0x15594>
   27c7c:	mov	r3, #0
   27c80:	mov	r0, r3
   27c84:	sub	sp, fp, #4
   27c88:	pop	{fp, pc}
   27c8c:	push	{fp, lr}
   27c90:	add	fp, sp, #4
   27c94:	sub	sp, sp, #32
   27c98:	str	r0, [fp, #-32]	; 0xffffffe0
   27c9c:	str	r1, [fp, #-36]	; 0xffffffdc
   27ca0:	bl	277c8 <__assert_fail@plt+0x150dc>
   27ca4:	str	r0, [fp, #-8]
   27ca8:	ldr	r3, [fp, #-8]
   27cac:	cmn	r3, #-2147483647	; 0x80000001
   27cb0:	beq	27cc0 <__assert_fail@plt+0x155d4>
   27cb4:	ldr	r3, [fp, #-8]
   27cb8:	add	r3, r3, #1
   27cbc:	str	r3, [fp, #-8]
   27cc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27cc4:	str	r3, [fp, #-24]	; 0xffffffe8
   27cc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27ccc:	str	r3, [fp, #-20]	; 0xffffffec
   27cd0:	mov	r3, #0
   27cd4:	str	r3, [fp, #-16]
   27cd8:	mvn	r3, #0
   27cdc:	str	r3, [fp, #-12]
   27ce0:	sub	r3, fp, #24
   27ce4:	ldr	r2, [pc, #24]	; 27d04 <__assert_fail@plt+0x15618>
   27ce8:	ldr	r1, [fp, #-8]
   27cec:	mov	r0, #0
   27cf0:	bl	27868 <__assert_fail@plt+0x1517c>
   27cf4:	ldr	r3, [fp, #-12]
   27cf8:	mov	r0, r3
   27cfc:	sub	sp, fp, #4
   27d00:	pop	{fp, pc}
   27d04:	andeq	r7, r2, r4, lsr #23
   27d08:	push	{fp, lr}
   27d0c:	add	fp, sp, #4
   27d10:	sub	sp, sp, #8
   27d14:	mov	r3, #0
   27d18:	strb	r3, [fp, #-5]
   27d1c:	mov	r1, #524288	; 0x80000
   27d20:	ldr	r0, [pc, #68]	; 27d6c <__assert_fail@plt+0x15680>
   27d24:	bl	2a698 <__assert_fail@plt+0x17fac>
   27d28:	str	r0, [fp, #-12]
   27d2c:	ldr	r3, [fp, #-12]
   27d30:	cmp	r3, #0
   27d34:	blt	27d5c <__assert_fail@plt+0x15670>
   27d38:	ldr	r0, [fp, #-12]
   27d3c:	bl	27a20 <__assert_fail@plt+0x15334>
   27d40:	mov	r3, r0
   27d44:	cmp	r3, #0
   27d48:	movne	r3, #1
   27d4c:	moveq	r3, #0
   27d50:	strb	r3, [fp, #-5]
   27d54:	ldr	r0, [fp, #-12]
   27d58:	bl	126a4 <close@plt>
   27d5c:	ldrb	r3, [fp, #-5]
   27d60:	mov	r0, r3
   27d64:	sub	sp, fp, #4
   27d68:	pop	{fp, pc}
   27d6c:	andeq	r8, r6, r4, lsl r4
   27d70:	push	{r1, r2, r3}
   27d74:	push	{fp, lr}
   27d78:	add	fp, sp, #4
   27d7c:	sub	sp, sp, #28
   27d80:	str	r0, [fp, #-28]	; 0xffffffe4
   27d84:	mov	r3, #0
   27d88:	str	r3, [fp, #-12]
   27d8c:	ldr	r3, [fp, #4]
   27d90:	and	r3, r3, #64	; 0x40
   27d94:	cmp	r3, #0
   27d98:	beq	27db8 <__assert_fail@plt+0x156cc>
   27d9c:	add	r3, fp, #8
   27da0:	str	r3, [fp, #-20]	; 0xffffffec
   27da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27da8:	add	r2, r3, #4
   27dac:	str	r2, [fp, #-20]	; 0xffffffec
   27db0:	ldr	r3, [r3]
   27db4:	str	r3, [fp, #-12]
   27db8:	ldr	r3, [pc, #148]	; 27e54 <__assert_fail@plt+0x15768>
   27dbc:	ldrb	r3, [r3]
   27dc0:	eor	r3, r3, #1
   27dc4:	uxtb	r3, r3
   27dc8:	cmp	r3, #0
   27dcc:	beq	27df0 <__assert_fail@plt+0x15704>
   27dd0:	bl	27d08 <__assert_fail@plt+0x1561c>
   27dd4:	mov	r3, r0
   27dd8:	mov	r2, r3
   27ddc:	ldr	r3, [pc, #116]	; 27e58 <__assert_fail@plt+0x1576c>
   27de0:	strb	r2, [r3]
   27de4:	ldr	r3, [pc, #104]	; 27e54 <__assert_fail@plt+0x15768>
   27de8:	mov	r2, #1
   27dec:	strb	r2, [r3]
   27df0:	ldr	r3, [fp, #4]
   27df4:	orr	r3, r3, #524288	; 0x80000
   27df8:	ldr	r2, [fp, #-12]
   27dfc:	mov	r1, r3
   27e00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27e04:	bl	2a698 <__assert_fail@plt+0x17fac>
   27e08:	str	r0, [fp, #-16]
   27e0c:	ldr	r3, [fp, #-16]
   27e10:	cmp	r3, #0
   27e14:	blt	27e3c <__assert_fail@plt+0x15750>
   27e18:	ldr	r3, [pc, #56]	; 27e58 <__assert_fail@plt+0x1576c>
   27e1c:	ldrb	r3, [r3]
   27e20:	eor	r3, r3, #1
   27e24:	uxtb	r3, r3
   27e28:	cmp	r3, #0
   27e2c:	beq	27e3c <__assert_fail@plt+0x15750>
   27e30:	mov	r1, #1
   27e34:	ldr	r0, [fp, #-16]
   27e38:	bl	2a010 <__assert_fail@plt+0x17924>
   27e3c:	ldr	r3, [fp, #-16]
   27e40:	mov	r0, r3
   27e44:	sub	sp, fp, #4
   27e48:	pop	{fp, lr}
   27e4c:	add	sp, sp, #12
   27e50:	bx	lr
   27e54:	andeq	ip, r7, r8, asr #29
   27e58:	andeq	ip, r7, r9, asr #29
   27e5c:	push	{fp, lr}
   27e60:	add	fp, sp, #4
   27e64:	ldr	r3, [pc, #40]	; 27e94 <__assert_fail@plt+0x157a8>
   27e68:	ldr	r3, [r3]
   27e6c:	mov	r0, r3
   27e70:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   27e74:	ldr	r3, [pc, #24]	; 27e94 <__assert_fail@plt+0x157a8>
   27e78:	mov	r2, #0
   27e7c:	str	r2, [r3]
   27e80:	ldr	r3, [pc, #16]	; 27e98 <__assert_fail@plt+0x157ac>
   27e84:	mov	r2, #0
   27e88:	str	r2, [r3]
   27e8c:	nop			; (mov r0, r0)
   27e90:	pop	{fp, pc}
   27e94:	andeq	ip, r7, r0, asr #29
   27e98:	andeq	ip, r7, r4, asr #29
   27e9c:	push	{fp, lr}
   27ea0:	add	fp, sp, #4
   27ea4:	ldr	r0, [pc, #32]	; 27ecc <__assert_fail@plt+0x157e0>
   27ea8:	bl	122f0 <getenv@plt>
   27eac:	mov	r3, r0
   27eb0:	cmp	r3, #0
   27eb4:	beq	27ec0 <__assert_fail@plt+0x157d4>
   27eb8:	mov	r3, #1
   27ebc:	b	27ec4 <__assert_fail@plt+0x157d8>
   27ec0:	mov	r3, #0
   27ec4:	mov	r0, r3
   27ec8:	pop	{fp, pc}
   27ecc:	andeq	r8, r6, r8, lsl r4
   27ed0:	push	{fp, lr}
   27ed4:	add	fp, sp, #4
   27ed8:	sub	sp, sp, #8
   27edc:	mov	r3, #1
   27ee0:	str	r3, [fp, #-8]
   27ee4:	ldr	r3, [pc, #116]	; 27f60 <__assert_fail@plt+0x15874>
   27ee8:	ldr	r2, [r3]
   27eec:	ldr	r3, [pc, #112]	; 27f64 <__assert_fail@plt+0x15878>
   27ef0:	ldr	r3, [r3]
   27ef4:	mov	r1, r3
   27ef8:	mov	r0, r2
   27efc:	bl	27c8c <__assert_fail@plt+0x155a0>
   27f00:	str	r0, [fp, #-12]
   27f04:	ldr	r3, [fp, #-12]
   27f08:	cmp	r3, #0
   27f0c:	blt	27f34 <__assert_fail@plt+0x15848>
   27f10:	mov	r3, #0
   27f14:	str	r3, [fp, #-8]
   27f18:	ldr	r0, [pc, #72]	; 27f68 <__assert_fail@plt+0x1587c>
   27f1c:	bl	12398 <gettext@plt>
   27f20:	mov	r2, r0
   27f24:	ldr	r3, [fp, #-12]
   27f28:	mov	r1, #0
   27f2c:	mov	r0, #0
   27f30:	bl	122b4 <error@plt>
   27f34:	ldr	r3, [fp, #-8]
   27f38:	cmp	r3, #0
   27f3c:	bne	27f54 <__assert_fail@plt+0x15868>
   27f40:	ldr	r3, [pc, #36]	; 27f6c <__assert_fail@plt+0x15880>
   27f44:	mov	r2, #396	; 0x18c
   27f48:	ldr	r1, [pc, #32]	; 27f70 <__assert_fail@plt+0x15884>
   27f4c:	ldr	r0, [pc, #32]	; 27f74 <__assert_fail@plt+0x15888>
   27f50:	bl	126ec <__assert_fail@plt>
   27f54:	nop			; (mov r0, r0)
   27f58:	sub	sp, fp, #4
   27f5c:	pop	{fp, pc}
   27f60:	andeq	ip, r7, r0, asr #29
   27f64:	andeq	ip, r7, r4, asr #29
   27f68:	andeq	r8, r6, r4, lsr r4
   27f6c:	andeq	r8, r6, r4, ror #9
   27f70:	andeq	r8, r6, ip, asr #9
   27f74:	ldrdeq	r8, [r6], -r8	; <UNPREDICTABLE>
   27f78:	push	{r4, r5, r6, r7, fp, lr}
   27f7c:	add	fp, sp, #20
   27f80:	sub	sp, sp, #24
   27f84:	str	r0, [fp, #-24]	; 0xffffffe8
   27f88:	ldr	r3, [pc, #112]	; 28000 <__assert_fail@plt+0x15914>
   27f8c:	ldr	r3, [r3]
   27f90:	mov	r0, r3
   27f94:	bl	3f668 <__assert_fail@plt+0x2cf7c>
   27f98:	ldr	r3, [pc, #100]	; 28004 <__assert_fail@plt+0x15918>
   27f9c:	ldr	r4, [r3]
   27fa0:	ldr	r3, [pc, #96]	; 28008 <__assert_fail@plt+0x1591c>
   27fa4:	ldr	r5, [r3]
   27fa8:	ldr	r0, [pc, #92]	; 2800c <__assert_fail@plt+0x15920>
   27fac:	bl	12398 <gettext@plt>
   27fb0:	mov	r6, r0
   27fb4:	ldr	r0, [pc, #84]	; 28010 <__assert_fail@plt+0x15924>
   27fb8:	bl	12398 <gettext@plt>
   27fbc:	mov	r7, r0
   27fc0:	ldr	r0, [pc, #76]	; 28014 <__assert_fail@plt+0x15928>
   27fc4:	bl	12398 <gettext@plt>
   27fc8:	mov	r2, r0
   27fcc:	mov	r3, #0
   27fd0:	str	r3, [sp, #12]
   27fd4:	str	r2, [sp, #8]
   27fd8:	str	r7, [sp, #4]
   27fdc:	str	r6, [sp]
   27fe0:	mov	r3, r5
   27fe4:	ldr	r2, [pc, #44]	; 28018 <__assert_fail@plt+0x1592c>
   27fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27fec:	mov	r0, r4
   27ff0:	bl	3d02c <__assert_fail@plt+0x2a940>
   27ff4:	nop			; (mov r0, r0)
   27ff8:	sub	sp, fp, #20
   27ffc:	pop	{r4, r5, r6, r7, fp, pc}
   28000:	andeq	ip, r7, r8, lsr #14
   28004:	andeq	ip, r7, r4, lsr r7
   28008:	andeq	ip, r7, ip, lsl #12
   2800c:	andeq	r8, r6, r0, lsl r5
   28010:	andeq	r8, r6, r0, lsr #10
   28014:	andeq	r8, r6, r0, lsr r5
   28018:	andeq	r8, r6, r0, asr #10
   2801c:	push	{fp, lr}
   28020:	add	fp, sp, #4
   28024:	sub	sp, sp, #24
   28028:	str	r0, [fp, #-16]
   2802c:	str	r1, [fp, #-20]	; 0xffffffec
   28030:	str	r2, [fp, #-24]	; 0xffffffe8
   28034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28038:	ldr	r2, [r3]
   2803c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28040:	ldr	r1, [pc, #76]	; 28094 <__assert_fail@plt+0x159a8>
   28044:	ldr	r0, [fp, #-16]
   28048:	bl	123f8 <fprintf@plt>
   2804c:	str	r0, [fp, #-8]
   28050:	ldr	r3, [fp, #-8]
   28054:	cmp	r3, #0
   28058:	blt	28084 <__assert_fail@plt+0x15998>
   2805c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28060:	ldr	r2, [r3]
   28064:	ldr	r3, [fp, #-8]
   28068:	cmp	r2, r3
   2806c:	bge	2807c <__assert_fail@plt+0x15990>
   28070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28074:	ldr	r2, [fp, #-8]
   28078:	str	r2, [r3]
   2807c:	mov	r3, #1
   28080:	b	28088 <__assert_fail@plt+0x1599c>
   28084:	mov	r3, #0
   28088:	mov	r0, r3
   2808c:	sub	sp, fp, #4
   28090:	pop	{fp, pc}
   28094:	andeq	r8, r6, r0, asr r5
   28098:	push	{r4, r6, r7, fp, lr}
   2809c:	add	fp, sp, #16
   280a0:	sub	sp, sp, #1020	; 0x3fc
   280a4:	str	r0, [fp, #-1008]	; 0xfffffc10
   280a8:	str	r1, [fp, #-1012]	; 0xfffffc0c
   280ac:	str	r2, [fp, #-1016]	; 0xfffffc08
   280b0:	str	r3, [fp, #-1020]	; 0xfffffc04
   280b4:	mov	r3, #1
   280b8:	strb	r3, [fp, #-21]	; 0xffffffeb
   280bc:	mov	r3, #0
   280c0:	str	r3, [fp, #-28]	; 0xffffffe4
   280c4:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   280c8:	ldr	r3, [r3, #16]
   280cc:	sub	r2, fp, #96	; 0x60
   280d0:	mov	r1, r2
   280d4:	mov	r0, r3
   280d8:	bl	2a7e0 <__assert_fail@plt+0x180f4>
   280dc:	ldr	r3, [pc, #2696]	; 28b6c <__assert_fail@plt+0x16480>
   280e0:	ldr	r4, [r3]
   280e4:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   280e8:	ldrd	r0, [r3, #96]	; 0x60
   280ec:	sub	ip, fp, #748	; 0x2ec
   280f0:	mov	r2, #1
   280f4:	mov	r3, #0
   280f8:	strd	r2, [sp, #8]
   280fc:	mov	r2, #1
   28100:	mov	r3, #0
   28104:	strd	r2, [sp]
   28108:	mov	r3, #0
   2810c:	mov	r2, ip
   28110:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   28114:	mov	r3, r0
   28118:	mov	r2, r4
   2811c:	ldr	r1, [pc, #2636]	; 28b70 <__assert_fail@plt+0x16484>
   28120:	ldr	r0, [fp, #16]
   28124:	bl	123f8 <fprintf@plt>
   28128:	str	r0, [fp, #-40]	; 0xffffffd8
   2812c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28130:	cmp	r3, #0
   28134:	bge	2814c <__assert_fail@plt+0x15a60>
   28138:	mov	r3, #0
   2813c:	strb	r3, [fp, #-21]	; 0xffffffeb
   28140:	mov	r3, #100	; 0x64
   28144:	str	r3, [fp, #-28]	; 0xffffffe4
   28148:	b	2816c <__assert_fail@plt+0x15a80>
   2814c:	ldr	r3, [pc, #2584]	; 28b6c <__assert_fail@plt+0x16480>
   28150:	ldr	r3, [r3]
   28154:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28158:	cmp	r2, r3
   2815c:	ble	2816c <__assert_fail@plt+0x15a80>
   28160:	ldr	r2, [pc, #2564]	; 28b6c <__assert_fail@plt+0x16480>
   28164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28168:	str	r3, [r2]
   2816c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28170:	cmp	r3, #0
   28174:	beq	28244 <__assert_fail@plt+0x15b58>
   28178:	ldr	r1, [fp, #16]
   2817c:	mov	r0, #32
   28180:	bl	125c0 <putc@plt>
   28184:	mov	r3, r0
   28188:	cmn	r3, #1
   2818c:	bne	281a0 <__assert_fail@plt+0x15ab4>
   28190:	mov	r3, #0
   28194:	strb	r3, [fp, #-21]	; 0xffffffeb
   28198:	mov	r3, #150	; 0x96
   2819c:	str	r3, [fp, #-28]	; 0xffffffe4
   281a0:	ldr	r3, [pc, #2508]	; 28b74 <__assert_fail@plt+0x16488>
   281a4:	ldr	r4, [r3]
   281a8:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   281ac:	ldrd	r2, [r3, #64]	; 0x40
   281b0:	mov	r6, r2
   281b4:	mov	r7, r3
   281b8:	ldr	r3, [fp, #8]
   281bc:	mov	r2, r3
   281c0:	asr	r3, r2, #31
   281c4:	sub	r1, fp, #748	; 0x2ec
   281c8:	strd	r2, [sp, #8]
   281cc:	mov	r2, #512	; 0x200
   281d0:	mov	r3, #0
   281d4:	strd	r2, [sp]
   281d8:	mov	r3, #0
   281dc:	mov	r2, r1
   281e0:	mov	r0, r6
   281e4:	mov	r1, r7
   281e8:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   281ec:	mov	r3, r0
   281f0:	mov	r2, r4
   281f4:	ldr	r1, [pc, #2420]	; 28b70 <__assert_fail@plt+0x16484>
   281f8:	ldr	r0, [fp, #16]
   281fc:	bl	123f8 <fprintf@plt>
   28200:	str	r0, [fp, #-40]	; 0xffffffd8
   28204:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28208:	cmp	r3, #0
   2820c:	bge	28224 <__assert_fail@plt+0x15b38>
   28210:	mov	r3, #0
   28214:	strb	r3, [fp, #-21]	; 0xffffffeb
   28218:	mov	r3, #200	; 0xc8
   2821c:	str	r3, [fp, #-28]	; 0xffffffe4
   28220:	b	28244 <__assert_fail@plt+0x15b58>
   28224:	ldr	r3, [pc, #2376]	; 28b74 <__assert_fail@plt+0x16488>
   28228:	ldr	r3, [r3]
   2822c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28230:	cmp	r2, r3
   28234:	ble	28244 <__assert_fail@plt+0x15b58>
   28238:	ldr	r2, [pc, #2356]	; 28b74 <__assert_fail@plt+0x16488>
   2823c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28240:	str	r3, [r2]
   28244:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28248:	cmp	r3, #0
   2824c:	beq	28278 <__assert_fail@plt+0x15b8c>
   28250:	ldr	r1, [fp, #16]
   28254:	mov	r0, #32
   28258:	bl	125c0 <putc@plt>
   2825c:	mov	r3, r0
   28260:	cmn	r3, #1
   28264:	bne	28278 <__assert_fail@plt+0x15b8c>
   28268:	mov	r3, #0
   2826c:	strb	r3, [fp, #-21]	; 0xffffffeb
   28270:	mov	r3, #250	; 0xfa
   28274:	str	r3, [fp, #-28]	; 0xffffffe4
   28278:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2827c:	cmp	r3, #0
   28280:	beq	282b0 <__assert_fail@plt+0x15bc4>
   28284:	sub	r3, fp, #96	; 0x60
   28288:	ldr	r1, [fp, #16]
   2828c:	mov	r0, r3
   28290:	bl	12680 <fputs@plt>
   28294:	mov	r3, r0
   28298:	cmp	r3, #0
   2829c:	bge	282b0 <__assert_fail@plt+0x15bc4>
   282a0:	mov	r3, #0
   282a4:	strb	r3, [fp, #-21]	; 0xffffffeb
   282a8:	ldr	r3, [pc, #2248]	; 28b78 <__assert_fail@plt+0x1648c>
   282ac:	str	r3, [fp, #-28]	; 0xffffffe4
   282b0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   282b4:	cmp	r3, #0
   282b8:	beq	2831c <__assert_fail@plt+0x15c30>
   282bc:	ldr	r3, [pc, #2232]	; 28b7c <__assert_fail@plt+0x16490>
   282c0:	ldr	r2, [r3]
   282c4:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   282c8:	ldr	r3, [r3, #20]
   282cc:	ldr	r1, [pc, #2220]	; 28b80 <__assert_fail@plt+0x16494>
   282d0:	ldr	r0, [fp, #16]
   282d4:	bl	123f8 <fprintf@plt>
   282d8:	str	r0, [fp, #-40]	; 0xffffffd8
   282dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   282e0:	cmp	r3, #0
   282e4:	bge	282fc <__assert_fail@plt+0x15c10>
   282e8:	mov	r3, #0
   282ec:	strb	r3, [fp, #-21]	; 0xffffffeb
   282f0:	mov	r3, #300	; 0x12c
   282f4:	str	r3, [fp, #-28]	; 0xffffffe4
   282f8:	b	2831c <__assert_fail@plt+0x15c30>
   282fc:	ldr	r3, [pc, #2168]	; 28b7c <__assert_fail@plt+0x16490>
   28300:	ldr	r3, [r3]
   28304:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28308:	cmp	r2, r3
   2830c:	ble	2831c <__assert_fail@plt+0x15c30>
   28310:	ldr	r2, [pc, #2148]	; 28b7c <__assert_fail@plt+0x16490>
   28314:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28318:	str	r3, [r2]
   2831c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28320:	cmp	r3, #0
   28324:	beq	28454 <__assert_fail@plt+0x15d68>
   28328:	ldr	r1, [fp, #16]
   2832c:	mov	r0, #32
   28330:	bl	125c0 <putc@plt>
   28334:	mov	r3, r0
   28338:	cmn	r3, #1
   2833c:	bne	28350 <__assert_fail@plt+0x15c64>
   28340:	mov	r3, #0
   28344:	strb	r3, [fp, #-21]	; 0xffffffeb
   28348:	mov	r3, #250	; 0xfa
   2834c:	str	r3, [fp, #-28]	; 0xffffffe4
   28350:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   28354:	ldr	r3, [r3, #24]
   28358:	mov	r0, r3
   2835c:	bl	2d69c <__assert_fail@plt+0x1afb0>
   28360:	str	r0, [fp, #-44]	; 0xffffffd4
   28364:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28368:	cmp	r3, #0
   2836c:	beq	283e8 <__assert_fail@plt+0x15cfc>
   28370:	mov	r1, #0
   28374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28378:	bl	2ee00 <__assert_fail@plt+0x1c714>
   2837c:	str	r0, [fp, #-48]	; 0xffffffd0
   28380:	ldr	r3, [pc, #2044]	; 28b84 <__assert_fail@plt+0x16498>
   28384:	ldr	r3, [r3]
   28388:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2838c:	cmp	r2, r3
   28390:	ble	283a0 <__assert_fail@plt+0x15cb4>
   28394:	ldr	r2, [pc, #2024]	; 28b84 <__assert_fail@plt+0x16498>
   28398:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2839c:	str	r3, [r2]
   283a0:	ldr	r3, [pc, #2012]	; 28b84 <__assert_fail@plt+0x16498>
   283a4:	ldr	r2, [r3]
   283a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   283ac:	ldr	r1, [pc, #2004]	; 28b88 <__assert_fail@plt+0x1649c>
   283b0:	ldr	r0, [fp, #16]
   283b4:	bl	123f8 <fprintf@plt>
   283b8:	mov	r3, r0
   283bc:	mvn	r3, r3
   283c0:	lsr	r3, r3, #31
   283c4:	strb	r3, [fp, #-21]	; 0xffffffeb
   283c8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   283cc:	eor	r3, r3, #1
   283d0:	uxtb	r3, r3
   283d4:	cmp	r3, #0
   283d8:	beq	28454 <__assert_fail@plt+0x15d68>
   283dc:	mov	r3, #400	; 0x190
   283e0:	str	r3, [fp, #-28]	; 0xffffffe4
   283e4:	b	28454 <__assert_fail@plt+0x15d68>
   283e8:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   283ec:	ldr	r3, [r3, #24]
   283f0:	mov	r2, r3
   283f4:	ldr	r1, [pc, #1936]	; 28b8c <__assert_fail@plt+0x164a0>
   283f8:	ldr	r0, [fp, #16]
   283fc:	bl	123f8 <fprintf@plt>
   28400:	str	r0, [fp, #-40]	; 0xffffffd8
   28404:	ldr	r3, [pc, #1912]	; 28b84 <__assert_fail@plt+0x16498>
   28408:	ldr	r3, [r3]
   2840c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28410:	cmp	r2, r3
   28414:	ble	28424 <__assert_fail@plt+0x15d38>
   28418:	ldr	r2, [pc, #1892]	; 28b84 <__assert_fail@plt+0x16498>
   2841c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28420:	str	r3, [r2]
   28424:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28428:	cmp	r3, #0
   2842c:	movgt	r3, #1
   28430:	movle	r3, #0
   28434:	strb	r3, [fp, #-21]	; 0xffffffeb
   28438:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2843c:	eor	r3, r3, #1
   28440:	uxtb	r3, r3
   28444:	cmp	r3, #0
   28448:	beq	28454 <__assert_fail@plt+0x15d68>
   2844c:	ldr	r3, [pc, #1852]	; 28b90 <__assert_fail@plt+0x164a4>
   28450:	str	r3, [fp, #-28]	; 0xffffffe4
   28454:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28458:	cmp	r3, #0
   2845c:	beq	2859c <__assert_fail@plt+0x15eb0>
   28460:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   28464:	ldr	r3, [r3, #28]
   28468:	mov	r0, r3
   2846c:	bl	2d960 <__assert_fail@plt+0x1b274>
   28470:	str	r0, [fp, #-52]	; 0xffffffcc
   28474:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28478:	cmp	r3, #0
   2847c:	beq	284f8 <__assert_fail@plt+0x15e0c>
   28480:	mov	r1, #0
   28484:	ldr	r0, [fp, #-52]	; 0xffffffcc
   28488:	bl	2ee00 <__assert_fail@plt+0x1c714>
   2848c:	str	r0, [fp, #-56]	; 0xffffffc8
   28490:	ldr	r3, [pc, #1788]	; 28b94 <__assert_fail@plt+0x164a8>
   28494:	ldr	r3, [r3]
   28498:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2849c:	cmp	r2, r3
   284a0:	ble	284b0 <__assert_fail@plt+0x15dc4>
   284a4:	ldr	r2, [pc, #1768]	; 28b94 <__assert_fail@plt+0x164a8>
   284a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   284ac:	str	r3, [r2]
   284b0:	ldr	r3, [pc, #1756]	; 28b94 <__assert_fail@plt+0x164a8>
   284b4:	ldr	r2, [r3]
   284b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   284bc:	ldr	r1, [pc, #1732]	; 28b88 <__assert_fail@plt+0x1649c>
   284c0:	ldr	r0, [fp, #16]
   284c4:	bl	123f8 <fprintf@plt>
   284c8:	mov	r3, r0
   284cc:	mvn	r3, r3
   284d0:	lsr	r3, r3, #31
   284d4:	strb	r3, [fp, #-21]	; 0xffffffeb
   284d8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   284dc:	eor	r3, r3, #1
   284e0:	uxtb	r3, r3
   284e4:	cmp	r3, #0
   284e8:	beq	2859c <__assert_fail@plt+0x15eb0>
   284ec:	mov	r3, #500	; 0x1f4
   284f0:	str	r3, [fp, #-28]	; 0xffffffe4
   284f4:	b	2859c <__assert_fail@plt+0x15eb0>
   284f8:	ldr	r3, [pc, #1684]	; 28b94 <__assert_fail@plt+0x164a8>
   284fc:	ldr	r2, [r3]
   28500:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   28504:	ldr	r3, [r3, #28]
   28508:	ldr	r1, [pc, #1672]	; 28b98 <__assert_fail@plt+0x164ac>
   2850c:	ldr	r0, [fp, #16]
   28510:	bl	123f8 <fprintf@plt>
   28514:	str	r0, [fp, #-40]	; 0xffffffd8
   28518:	ldr	r3, [pc, #1652]	; 28b94 <__assert_fail@plt+0x164a8>
   2851c:	ldr	r3, [r3]
   28520:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28524:	cmp	r2, r3
   28528:	ble	28538 <__assert_fail@plt+0x15e4c>
   2852c:	ldr	r2, [pc, #1632]	; 28b94 <__assert_fail@plt+0x164a8>
   28530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28534:	str	r3, [r2]
   28538:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2853c:	mvn	r3, r3
   28540:	lsr	r3, r3, #31
   28544:	strb	r3, [fp, #-21]	; 0xffffffeb
   28548:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2854c:	cmp	r3, #0
   28550:	beq	28580 <__assert_fail@plt+0x15e94>
   28554:	ldr	r1, [fp, #16]
   28558:	mov	r0, #32
   2855c:	bl	125c0 <putc@plt>
   28560:	mov	r3, r0
   28564:	cmn	r3, #1
   28568:	bne	2859c <__assert_fail@plt+0x15eb0>
   2856c:	mov	r3, #0
   28570:	strb	r3, [fp, #-21]	; 0xffffffeb
   28574:	ldr	r3, [pc, #1568]	; 28b9c <__assert_fail@plt+0x164b0>
   28578:	str	r3, [fp, #-28]	; 0xffffffe4
   2857c:	b	2859c <__assert_fail@plt+0x15eb0>
   28580:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28584:	eor	r3, r3, #1
   28588:	uxtb	r3, r3
   2858c:	cmp	r3, #0
   28590:	beq	2859c <__assert_fail@plt+0x15eb0>
   28594:	ldr	r3, [pc, #1540]	; 28ba0 <__assert_fail@plt+0x164b4>
   28598:	str	r3, [fp, #-28]	; 0xffffffe4
   2859c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   285a0:	cmp	r3, #0
   285a4:	beq	28774 <__assert_fail@plt+0x16088>
   285a8:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   285ac:	ldr	r3, [r3, #16]
   285b0:	and	r3, r3, #61440	; 0xf000
   285b4:	cmp	r3, #8192	; 0x2000
   285b8:	beq	285d0 <__assert_fail@plt+0x15ee4>
   285bc:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   285c0:	ldr	r3, [r3, #16]
   285c4:	and	r3, r3, #61440	; 0xf000
   285c8:	cmp	r3, #24576	; 0x6000
   285cc:	bne	286ac <__assert_fail@plt+0x15fc0>
   285d0:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   285d4:	ldrd	r2, [r3, #32]
   285d8:	mov	r0, r2
   285dc:	mov	r1, r3
   285e0:	bl	11fa8 <gnu_dev_major@plt>
   285e4:	mov	r3, r0
   285e8:	ldr	r2, [pc, #1460]	; 28ba4 <__assert_fail@plt+0x164b8>
   285ec:	mov	r1, r3
   285f0:	ldr	r0, [fp, #16]
   285f4:	bl	2801c <__assert_fail@plt+0x15930>
   285f8:	mov	r3, r0
   285fc:	eor	r3, r3, #1
   28600:	uxtb	r3, r3
   28604:	cmp	r3, #0
   28608:	beq	2861c <__assert_fail@plt+0x15f30>
   2860c:	mov	r3, #0
   28610:	strb	r3, [fp, #-21]	; 0xffffffeb
   28614:	mov	r3, #600	; 0x258
   28618:	str	r3, [fp, #-28]	; 0xffffffe4
   2861c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28620:	cmp	r3, #0
   28624:	beq	28650 <__assert_fail@plt+0x15f64>
   28628:	ldr	r1, [pc, #1400]	; 28ba8 <__assert_fail@plt+0x164bc>
   2862c:	ldr	r0, [fp, #16]
   28630:	bl	123f8 <fprintf@plt>
   28634:	mov	r3, r0
   28638:	cmp	r3, #0
   2863c:	bge	28650 <__assert_fail@plt+0x15f64>
   28640:	mov	r3, #0
   28644:	strb	r3, [fp, #-21]	; 0xffffffeb
   28648:	ldr	r3, [pc, #1372]	; 28bac <__assert_fail@plt+0x164c0>
   2864c:	str	r3, [fp, #-28]	; 0xffffffe4
   28650:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28654:	cmp	r3, #0
   28658:	beq	28770 <__assert_fail@plt+0x16084>
   2865c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   28660:	ldrd	r2, [r3, #32]
   28664:	mov	r0, r2
   28668:	mov	r1, r3
   2866c:	bl	12038 <gnu_dev_minor@plt>
   28670:	mov	r3, r0
   28674:	ldr	r2, [pc, #1332]	; 28bb0 <__assert_fail@plt+0x164c4>
   28678:	mov	r1, r3
   2867c:	ldr	r0, [fp, #16]
   28680:	bl	2801c <__assert_fail@plt+0x15930>
   28684:	mov	r3, r0
   28688:	eor	r3, r3, #1
   2868c:	uxtb	r3, r3
   28690:	cmp	r3, #0
   28694:	beq	28770 <__assert_fail@plt+0x16084>
   28698:	mov	r3, #0
   2869c:	strb	r3, [fp, #-21]	; 0xffffffeb
   286a0:	ldr	r3, [pc, #1292]	; 28bb4 <__assert_fail@plt+0x164c8>
   286a4:	str	r3, [fp, #-28]	; 0xffffffe4
   286a8:	b	28770 <__assert_fail@plt+0x16084>
   286ac:	ldr	r3, [fp, #8]
   286b0:	cmp	r3, #0
   286b4:	bge	286c0 <__assert_fail@plt+0x15fd4>
   286b8:	ldr	r3, [fp, #8]
   286bc:	b	286c4 <__assert_fail@plt+0x15fd8>
   286c0:	mov	r3, #1
   286c4:	str	r3, [fp, #-60]	; 0xffffffc4
   286c8:	ldr	r3, [pc, #1256]	; 28bb8 <__assert_fail@plt+0x164cc>
   286cc:	ldr	r4, [r3]
   286d0:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   286d4:	ldrd	r2, [r3, #48]	; 0x30
   286d8:	mov	r6, r2
   286dc:	mov	r7, r3
   286e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   286e4:	mov	r2, r3
   286e8:	asr	r3, r2, #31
   286ec:	sub	r1, fp, #748	; 0x2ec
   286f0:	strd	r2, [sp, #8]
   286f4:	mov	r2, #1
   286f8:	mov	r3, #0
   286fc:	strd	r2, [sp]
   28700:	mov	r3, #0
   28704:	mov	r2, r1
   28708:	mov	r0, r6
   2870c:	mov	r1, r7
   28710:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   28714:	mov	r3, r0
   28718:	mov	r2, r4
   2871c:	ldr	r1, [pc, #1100]	; 28b70 <__assert_fail@plt+0x16484>
   28720:	ldr	r0, [fp, #16]
   28724:	bl	123f8 <fprintf@plt>
   28728:	str	r0, [fp, #-40]	; 0xffffffd8
   2872c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28730:	cmp	r3, #0
   28734:	bge	2874c <__assert_fail@plt+0x16060>
   28738:	mov	r3, #0
   2873c:	strb	r3, [fp, #-21]	; 0xffffffeb
   28740:	mov	r3, #800	; 0x320
   28744:	str	r3, [fp, #-28]	; 0xffffffe4
   28748:	b	28774 <__assert_fail@plt+0x16088>
   2874c:	ldr	r3, [pc, #1124]	; 28bb8 <__assert_fail@plt+0x164cc>
   28750:	ldr	r3, [r3]
   28754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28758:	cmp	r2, r3
   2875c:	ble	28774 <__assert_fail@plt+0x16088>
   28760:	ldr	r2, [pc, #1104]	; 28bb8 <__assert_fail@plt+0x164cc>
   28764:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28768:	str	r3, [r2]
   2876c:	b	28774 <__assert_fail@plt+0x16088>
   28770:	nop			; (mov r0, r0)
   28774:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28778:	cmp	r3, #0
   2877c:	beq	287a8 <__assert_fail@plt+0x160bc>
   28780:	ldr	r1, [fp, #16]
   28784:	mov	r0, #32
   28788:	bl	125c0 <putc@plt>
   2878c:	mov	r3, r0
   28790:	cmn	r3, #1
   28794:	bne	287a8 <__assert_fail@plt+0x160bc>
   28798:	mov	r3, #0
   2879c:	strb	r3, [fp, #-21]	; 0xffffffeb
   287a0:	ldr	r3, [pc, #1044]	; 28bbc <__assert_fail@plt+0x164d0>
   287a4:	str	r3, [fp, #-28]	; 0xffffffe4
   287a8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   287ac:	cmp	r3, #0
   287b0:	beq	289d0 <__assert_fail@plt+0x162e4>
   287b4:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   287b8:	add	r3, r3, #80	; 0x50
   287bc:	mov	r0, r3
   287c0:	bl	12344 <localtime@plt>
   287c4:	str	r0, [fp, #-64]	; 0xffffffc0
   287c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   287cc:	cmp	r3, #0
   287d0:	beq	288b4 <__assert_fail@plt+0x161c8>
   287d4:	sub	r3, fp, #1004	; 0x3ec
   287d8:	str	r3, [fp, #-32]	; 0xffffffe0
   287dc:	mov	r3, #256	; 0x100
   287e0:	str	r3, [fp, #-36]	; 0xffffffdc
   287e4:	ldr	r3, [fp, #4]
   287e8:	sub	r3, r3, #15532032	; 0xed0000
   287ec:	sub	r3, r3, #19968	; 0x4e00
   287f0:	ldr	r2, [fp, #-1020]	; 0xfffffc04
   287f4:	ldr	r2, [r2, #80]	; 0x50
   287f8:	cmp	r3, r2
   287fc:	bgt	28820 <__assert_fail@plt+0x16134>
   28800:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   28804:	ldr	r2, [r3, #80]	; 0x50
   28808:	ldr	r3, [fp, #4]
   2880c:	add	r3, r3, #3600	; 0xe10
   28810:	cmp	r2, r3
   28814:	bgt	28820 <__assert_fail@plt+0x16134>
   28818:	ldr	r3, [pc, #928]	; 28bc0 <__assert_fail@plt+0x164d4>
   2881c:	b	28824 <__assert_fail@plt+0x16138>
   28820:	ldr	r3, [pc, #924]	; 28bc4 <__assert_fail@plt+0x164d8>
   28824:	str	r3, [fp, #-68]	; 0xffffffbc
   28828:	b	28864 <__assert_fail@plt+0x16178>
   2882c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28830:	lsl	r3, r3, #1
   28834:	str	r3, [fp, #-36]	; 0xffffffdc
   28838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2883c:	add	r3, r3, #7
   28840:	add	r3, r3, #7
   28844:	lsr	r3, r3, #3
   28848:	lsl	r3, r3, #3
   2884c:	sub	sp, sp, r3
   28850:	add	r3, sp, #16
   28854:	add	r3, r3, #7
   28858:	lsr	r3, r3, #3
   2885c:	lsl	r3, r3, #3
   28860:	str	r3, [fp, #-32]	; 0xffffffe0
   28864:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28868:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2886c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28874:	bl	1232c <strftime@plt>
   28878:	mov	r3, r0
   2887c:	cmp	r3, #0
   28880:	beq	2882c <__assert_fail@plt+0x16140>
   28884:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28888:	ldr	r1, [pc, #824]	; 28bc8 <__assert_fail@plt+0x164dc>
   2888c:	ldr	r0, [fp, #16]
   28890:	bl	123f8 <fprintf@plt>
   28894:	mov	r3, r0
   28898:	cmp	r3, #0
   2889c:	bge	289d0 <__assert_fail@plt+0x162e4>
   288a0:	mov	r3, #0
   288a4:	strb	r3, [fp, #-21]	; 0xffffffeb
   288a8:	mov	r3, #900	; 0x384
   288ac:	str	r3, [fp, #-28]	; 0xffffffe4
   288b0:	b	289d0 <__assert_fail@plt+0x162e4>
   288b4:	mov	r3, #12
   288b8:	str	r3, [fp, #-72]	; 0xffffffb8
   288bc:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   288c0:	ldr	r3, [r3, #80]	; 0x50
   288c4:	cmp	r3, #0
   288c8:	bge	28968 <__assert_fail@plt+0x1627c>
   288cc:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   288d0:	ldr	r3, [r3, #80]	; 0x50
   288d4:	mov	r2, r3
   288d8:	asr	r3, r2, #31
   288dc:	rsbs	r0, r2, #0
   288e0:	rsc	r1, r3, #0
   288e4:	sub	ip, fp, #748	; 0x2ec
   288e8:	mov	r2, #1
   288ec:	mov	r3, #0
   288f0:	strd	r2, [sp, #8]
   288f4:	mov	r2, #1
   288f8:	mov	r3, #0
   288fc:	strd	r2, [sp]
   28900:	mov	r3, #0
   28904:	mov	r2, ip
   28908:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   2890c:	str	r0, [fp, #-76]	; 0xffffffb4
   28910:	ldr	r4, [fp, #-72]	; 0xffffffb8
   28914:	ldr	r0, [fp, #-76]	; 0xffffffb4
   28918:	bl	123bc <strlen@plt>
   2891c:	mov	r3, r0
   28920:	sub	r3, r4, r3
   28924:	str	r3, [fp, #-80]	; 0xffffffb0
   28928:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2892c:	bic	r2, r3, r3, asr #31
   28930:	ldr	r3, [fp, #-76]	; 0xffffffb4
   28934:	str	r3, [sp]
   28938:	ldr	r3, [pc, #652]	; 28bcc <__assert_fail@plt+0x164e0>
   2893c:	ldr	r1, [pc, #652]	; 28bd0 <__assert_fail@plt+0x164e4>
   28940:	ldr	r0, [fp, #16]
   28944:	bl	123f8 <fprintf@plt>
   28948:	mov	r3, r0
   2894c:	cmp	r3, #0
   28950:	bge	289d0 <__assert_fail@plt+0x162e4>
   28954:	mov	r3, #0
   28958:	strb	r3, [fp, #-21]	; 0xffffffeb
   2895c:	mov	r3, #1000	; 0x3e8
   28960:	str	r3, [fp, #-28]	; 0xffffffe4
   28964:	b	289d0 <__assert_fail@plt+0x162e4>
   28968:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   2896c:	ldr	r3, [r3, #80]	; 0x50
   28970:	mov	r0, r3
   28974:	asr	r1, r0, #31
   28978:	sub	ip, fp, #748	; 0x2ec
   2897c:	mov	r2, #1
   28980:	mov	r3, #0
   28984:	strd	r2, [sp, #8]
   28988:	mov	r2, #1
   2898c:	mov	r3, #0
   28990:	strd	r2, [sp]
   28994:	mov	r3, #0
   28998:	mov	r2, ip
   2899c:	bl	2c8c0 <__assert_fail@plt+0x1a1d4>
   289a0:	mov	r3, r0
   289a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   289a8:	ldr	r1, [pc, #548]	; 28bd4 <__assert_fail@plt+0x164e8>
   289ac:	ldr	r0, [fp, #16]
   289b0:	bl	123f8 <fprintf@plt>
   289b4:	mov	r3, r0
   289b8:	cmp	r3, #0
   289bc:	bge	289d0 <__assert_fail@plt+0x162e4>
   289c0:	mov	r3, #0
   289c4:	strb	r3, [fp, #-21]	; 0xffffffeb
   289c8:	ldr	r3, [pc, #520]	; 28bd8 <__assert_fail@plt+0x164ec>
   289cc:	str	r3, [fp, #-28]	; 0xffffffe4
   289d0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   289d4:	cmp	r3, #0
   289d8:	beq	28a10 <__assert_fail@plt+0x16324>
   289dc:	ldr	r2, [fp, #12]
   289e0:	ldr	r1, [fp, #16]
   289e4:	ldr	r0, [fp, #-1008]	; 0xfffffc10
   289e8:	bl	28e08 <__assert_fail@plt+0x1671c>
   289ec:	mov	r3, r0
   289f0:	strb	r3, [fp, #-21]	; 0xffffffeb
   289f4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   289f8:	eor	r3, r3, #1
   289fc:	uxtb	r3, r3
   28a00:	cmp	r3, #0
   28a04:	beq	28a10 <__assert_fail@plt+0x16324>
   28a08:	mov	r3, #1200	; 0x4b0
   28a0c:	str	r3, [fp, #-28]	; 0xffffffe4
   28a10:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28a14:	cmp	r3, #0
   28a18:	beq	28b24 <__assert_fail@plt+0x16438>
   28a1c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   28a20:	ldr	r3, [r3, #16]
   28a24:	and	r3, r3, #61440	; 0xf000
   28a28:	cmp	r3, #40960	; 0xa000
   28a2c:	bne	28adc <__assert_fail@plt+0x163f0>
   28a30:	ldr	r1, [fp, #-1016]	; 0xfffffc08
   28a34:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
   28a38:	bl	29a18 <__assert_fail@plt+0x1732c>
   28a3c:	str	r0, [fp, #-84]	; 0xffffffac
   28a40:	ldr	r3, [fp, #-84]	; 0xffffffac
   28a44:	cmp	r3, #0
   28a48:	beq	28ab8 <__assert_fail@plt+0x163cc>
   28a4c:	ldr	r1, [fp, #16]
   28a50:	ldr	r0, [pc, #388]	; 28bdc <__assert_fail@plt+0x164f0>
   28a54:	bl	12680 <fputs@plt>
   28a58:	mov	r3, r0
   28a5c:	cmp	r3, #0
   28a60:	bge	28a74 <__assert_fail@plt+0x16388>
   28a64:	mov	r3, #0
   28a68:	strb	r3, [fp, #-21]	; 0xffffffeb
   28a6c:	ldr	r3, [pc, #364]	; 28be0 <__assert_fail@plt+0x164f4>
   28a70:	str	r3, [fp, #-28]	; 0xffffffe4
   28a74:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28a78:	cmp	r3, #0
   28a7c:	beq	28ad4 <__assert_fail@plt+0x163e8>
   28a80:	ldr	r2, [fp, #12]
   28a84:	ldr	r1, [fp, #16]
   28a88:	ldr	r0, [fp, #-84]	; 0xffffffac
   28a8c:	bl	28e08 <__assert_fail@plt+0x1671c>
   28a90:	mov	r3, r0
   28a94:	strb	r3, [fp, #-21]	; 0xffffffeb
   28a98:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28a9c:	eor	r3, r3, #1
   28aa0:	uxtb	r3, r3
   28aa4:	cmp	r3, #0
   28aa8:	beq	28ad4 <__assert_fail@plt+0x163e8>
   28aac:	ldr	r3, [pc, #304]	; 28be4 <__assert_fail@plt+0x164f8>
   28ab0:	str	r3, [fp, #-28]	; 0xffffffe4
   28ab4:	b	28ad4 <__assert_fail@plt+0x163e8>
   28ab8:	bl	12404 <__errno_location@plt>
   28abc:	mov	r3, r0
   28ac0:	ldr	r1, [r3]
   28ac4:	ldr	r3, [fp, #-1008]	; 0xfffffc10
   28ac8:	ldr	r2, [pc, #280]	; 28be8 <__assert_fail@plt+0x164fc>
   28acc:	mov	r0, #0
   28ad0:	bl	122b4 <error@plt>
   28ad4:	ldr	r0, [fp, #-84]	; 0xffffffac
   28ad8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   28adc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28ae0:	cmp	r3, #0
   28ae4:	beq	28b24 <__assert_fail@plt+0x16438>
   28ae8:	ldr	r1, [fp, #16]
   28aec:	mov	r0, #10
   28af0:	bl	125c0 <putc@plt>
   28af4:	mov	r3, r0
   28af8:	cmn	r3, #1
   28afc:	bne	28b24 <__assert_fail@plt+0x16438>
   28b00:	mov	r3, #0
   28b04:	strb	r3, [fp, #-21]	; 0xffffffeb
   28b08:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28b0c:	eor	r3, r3, #1
   28b10:	uxtb	r3, r3
   28b14:	cmp	r3, #0
   28b18:	beq	28b24 <__assert_fail@plt+0x16438>
   28b1c:	ldr	r3, [pc, #200]	; 28bec <__assert_fail@plt+0x16500>
   28b20:	str	r3, [fp, #-28]	; 0xffffffe4
   28b24:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   28b28:	eor	r3, r3, #1
   28b2c:	uxtb	r3, r3
   28b30:	cmp	r3, #0
   28b34:	beq	28b60 <__assert_fail@plt+0x16474>
   28b38:	bl	12404 <__errno_location@plt>
   28b3c:	mov	r3, r0
   28b40:	ldr	r4, [r3]
   28b44:	ldr	r0, [pc, #164]	; 28bf0 <__assert_fail@plt+0x16504>
   28b48:	bl	12398 <gettext@plt>
   28b4c:	mov	r2, r0
   28b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28b54:	mov	r1, r4
   28b58:	mov	r0, #1
   28b5c:	bl	122b4 <error@plt>
   28b60:	nop			; (mov r0, r0)
   28b64:	sub	sp, fp, #16
   28b68:	pop	{r4, r6, r7, fp, pc}
   28b6c:	andeq	ip, r7, r0, lsl r6
   28b70:	andeq	r8, r6, r8, asr r5
   28b74:	andeq	ip, r7, r4, lsl r6
   28b78:	andeq	r0, r0, r3, lsl r1
   28b7c:	andeq	ip, r7, r8, lsl r6
   28b80:	andeq	r8, r6, r0, asr r5
   28b84:	andeq	ip, r7, ip, lsl r6
   28b88:	andeq	r8, r6, ip, asr r5
   28b8c:	andeq	r8, r6, r4, ror #10
   28b90:	andeq	r0, r0, r2, asr #3
   28b94:	andeq	ip, r7, r0, lsr #12
   28b98:	andeq	r8, r6, ip, ror #10
   28b9c:	andeq	r0, r0, sp, lsl #4
   28ba0:	andeq	r0, r0, r6, lsr #4
   28ba4:	andeq	ip, r7, r4, lsr #12
   28ba8:	andeq	r8, r6, r4, ror r5
   28bac:	andeq	r0, r0, r1, ror r2
   28bb0:	andeq	ip, r7, r8, lsr #12
   28bb4:	andeq	r0, r0, sl, lsl #5
   28bb8:	andeq	ip, r7, ip, lsr #12
   28bbc:	andeq	r0, r0, r2, asr r3
   28bc0:	andeq	r8, r6, r8, ror r5
   28bc4:	andeq	r8, r6, r4, lsl #11
   28bc8:	muleq	r6, r0, r5
   28bcc:	muleq	r6, r4, r5
   28bd0:	muleq	r6, r8, r5
   28bd4:	andeq	r8, r6, r0, lsr #11
   28bd8:	andeq	r0, r0, ip, asr #8
   28bdc:	andeq	r8, r6, r8, lsr #11
   28be0:	andeq	r0, r0, r4, lsl r5
   28be4:	andeq	r0, r0, r6, asr #10
   28be8:			; <UNDEFINED> instruction: 0x000685b0
   28bec:	andeq	r0, r0, r8, ror r5
   28bf0:			; <UNDEFINED> instruction: 0x000685b4
   28bf4:	push	{fp, lr}
   28bf8:	add	fp, sp, #4
   28bfc:	sub	sp, sp, #8
   28c00:	str	r0, [fp, #-8]
   28c04:	str	r1, [fp, #-12]
   28c08:	ldr	r2, [fp, #-8]
   28c0c:	ldr	r1, [pc, #32]	; 28c34 <__assert_fail@plt+0x16548>
   28c10:	ldr	r0, [fp, #-12]
   28c14:	bl	123f8 <fprintf@plt>
   28c18:	mov	r3, r0
   28c1c:	mvn	r3, r3
   28c20:	lsr	r3, r3, #31
   28c24:	uxtb	r3, r3
   28c28:	mov	r0, r3
   28c2c:	sub	sp, fp, #4
   28c30:	pop	{fp, pc}
   28c34:			; <UNDEFINED> instruction: 0x000685b0
   28c38:	push	{r4, r5, fp, lr}
   28c3c:	add	fp, sp, #12
   28c40:	sub	sp, sp, #16
   28c44:	mov	r5, r0
   28c48:	str	r1, [fp, #-24]	; 0xffffffe8
   28c4c:	b	28dc0 <__assert_fail@plt+0x166d4>
   28c50:	mvn	r3, #0
   28c54:	str	r3, [fp, #-16]
   28c58:	mov	r3, r4
   28c5c:	cmp	r3, #12
   28c60:	beq	28d18 <__assert_fail@plt+0x1662c>
   28c64:	cmp	r3, #12
   28c68:	bgt	28c88 <__assert_fail@plt+0x1659c>
   28c6c:	cmp	r3, #9
   28c70:	beq	28d04 <__assert_fail@plt+0x16618>
   28c74:	cmp	r3, #10
   28c78:	beq	28cc8 <__assert_fail@plt+0x165dc>
   28c7c:	cmp	r3, #8
   28c80:	beq	28cdc <__assert_fail@plt+0x165f0>
   28c84:	b	28d54 <__assert_fail@plt+0x16668>
   28c88:	cmp	r3, #32
   28c8c:	beq	28d2c <__assert_fail@plt+0x16640>
   28c90:	cmp	r3, #32
   28c94:	bgt	28ca4 <__assert_fail@plt+0x165b8>
   28c98:	cmp	r3, #13
   28c9c:	beq	28cf0 <__assert_fail@plt+0x16604>
   28ca0:	b	28d54 <__assert_fail@plt+0x16668>
   28ca4:	cmp	r3, #34	; 0x22
   28ca8:	beq	28d40 <__assert_fail@plt+0x16654>
   28cac:	cmp	r3, #92	; 0x5c
   28cb0:	bne	28d54 <__assert_fail@plt+0x16668>
   28cb4:	ldr	r1, [pc, #296]	; 28de4 <__assert_fail@plt+0x166f8>
   28cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28cbc:	bl	123f8 <fprintf@plt>
   28cc0:	str	r0, [fp, #-16]
   28cc4:	b	28dac <__assert_fail@plt+0x166c0>
   28cc8:	ldr	r1, [pc, #280]	; 28de8 <__assert_fail@plt+0x166fc>
   28ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28cd0:	bl	123f8 <fprintf@plt>
   28cd4:	str	r0, [fp, #-16]
   28cd8:	b	28dac <__assert_fail@plt+0x166c0>
   28cdc:	ldr	r1, [pc, #264]	; 28dec <__assert_fail@plt+0x16700>
   28ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28ce4:	bl	123f8 <fprintf@plt>
   28ce8:	str	r0, [fp, #-16]
   28cec:	b	28dac <__assert_fail@plt+0x166c0>
   28cf0:	ldr	r1, [pc, #248]	; 28df0 <__assert_fail@plt+0x16704>
   28cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28cf8:	bl	123f8 <fprintf@plt>
   28cfc:	str	r0, [fp, #-16]
   28d00:	b	28dac <__assert_fail@plt+0x166c0>
   28d04:	ldr	r1, [pc, #232]	; 28df4 <__assert_fail@plt+0x16708>
   28d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d0c:	bl	123f8 <fprintf@plt>
   28d10:	str	r0, [fp, #-16]
   28d14:	b	28dac <__assert_fail@plt+0x166c0>
   28d18:	ldr	r1, [pc, #216]	; 28df8 <__assert_fail@plt+0x1670c>
   28d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d20:	bl	123f8 <fprintf@plt>
   28d24:	str	r0, [fp, #-16]
   28d28:	b	28dac <__assert_fail@plt+0x166c0>
   28d2c:	ldr	r1, [pc, #200]	; 28dfc <__assert_fail@plt+0x16710>
   28d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d34:	bl	123f8 <fprintf@plt>
   28d38:	str	r0, [fp, #-16]
   28d3c:	b	28dac <__assert_fail@plt+0x166c0>
   28d40:	ldr	r1, [pc, #184]	; 28e00 <__assert_fail@plt+0x16714>
   28d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d48:	bl	123f8 <fprintf@plt>
   28d4c:	str	r0, [fp, #-16]
   28d50:	b	28dac <__assert_fail@plt+0x166c0>
   28d54:	cmp	r4, #32
   28d58:	bls	28d94 <__assert_fail@plt+0x166a8>
   28d5c:	cmp	r4, #126	; 0x7e
   28d60:	bhi	28d94 <__assert_fail@plt+0x166a8>
   28d64:	mov	r3, r4
   28d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28d6c:	mov	r0, r3
   28d70:	bl	125c0 <putc@plt>
   28d74:	mov	r3, r0
   28d78:	cmn	r3, #1
   28d7c:	bne	28d88 <__assert_fail@plt+0x1669c>
   28d80:	mov	r3, #0
   28d84:	b	28dd8 <__assert_fail@plt+0x166ec>
   28d88:	mov	r3, #1
   28d8c:	str	r3, [fp, #-16]
   28d90:	b	28dac <__assert_fail@plt+0x166c0>
   28d94:	mov	r3, r4
   28d98:	mov	r2, r3
   28d9c:	ldr	r1, [pc, #96]	; 28e04 <__assert_fail@plt+0x16718>
   28da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28da4:	bl	123f8 <fprintf@plt>
   28da8:	str	r0, [fp, #-16]
   28dac:	ldr	r3, [fp, #-16]
   28db0:	cmp	r3, #0
   28db4:	bge	28dc0 <__assert_fail@plt+0x166d4>
   28db8:	mov	r3, #0
   28dbc:	b	28dd8 <__assert_fail@plt+0x166ec>
   28dc0:	mov	r3, r5
   28dc4:	add	r5, r3, #1
   28dc8:	ldrb	r4, [r3]
   28dcc:	cmp	r4, #0
   28dd0:	bne	28c50 <__assert_fail@plt+0x16564>
   28dd4:	mov	r3, #1
   28dd8:	mov	r0, r3
   28ddc:	sub	sp, fp, #12
   28de0:	pop	{r4, r5, fp, pc}
   28de4:	ldrdeq	r8, [r6], -ip
   28de8:	andeq	r8, r6, r0, ror #11
   28dec:	andeq	r8, r6, r4, ror #11
   28df0:	andeq	r8, r6, r8, ror #11
   28df4:	andeq	r8, r6, ip, ror #11
   28df8:	strdeq	r8, [r6], -r0
   28dfc:	strdeq	r8, [r6], -r4
   28e00:	strdeq	r8, [r6], -r8	; <UNPREDICTABLE>
   28e04:	strdeq	r8, [r6], -ip
   28e08:	push	{fp, lr}
   28e0c:	add	fp, sp, #4
   28e10:	sub	sp, sp, #8
   28e14:	str	r1, [fp, #-8]
   28e18:	str	r2, [fp, #-12]
   28e1c:	ldr	r3, [fp, #-12]
   28e20:	cmp	r3, #0
   28e24:	beq	28e38 <__assert_fail@plt+0x1674c>
   28e28:	ldr	r1, [fp, #-8]
   28e2c:	bl	28bf4 <__assert_fail@plt+0x16508>
   28e30:	mov	r3, r0
   28e34:	b	28e44 <__assert_fail@plt+0x16758>
   28e38:	ldr	r1, [fp, #-8]
   28e3c:	bl	28c38 <__assert_fail@plt+0x1654c>
   28e40:	mov	r3, r0
   28e44:	mov	r0, r3
   28e48:	sub	sp, fp, #4
   28e4c:	pop	{fp, pc}
   28e50:	push	{fp, lr}
   28e54:	add	fp, sp, #4
   28e58:	sub	sp, sp, #8192	; 0x2000
   28e5c:	sub	sp, sp, #40	; 0x28
   28e60:	sub	ip, fp, #8192	; 0x2000
   28e64:	sub	ip, ip, #4
   28e68:	str	r0, [ip, #-20]	; 0xffffffec
   28e6c:	sub	r0, fp, #8192	; 0x2000
   28e70:	sub	r0, r0, #4
   28e74:	str	r1, [r0, #-24]	; 0xffffffe8
   28e78:	mov	r1, r2
   28e7c:	sub	r2, fp, #8192	; 0x2000
   28e80:	sub	r2, r2, #4
   28e84:	str	r3, [r2, #-32]	; 0xffffffe0
   28e88:	sub	r3, fp, #8192	; 0x2000
   28e8c:	sub	r3, r3, #4
   28e90:	mov	r2, r1
   28e94:	strb	r2, [r3, #-25]	; 0xffffffe7
   28e98:	sub	r3, fp, #8192	; 0x2000
   28e9c:	sub	r3, r3, #4
   28ea0:	ldrb	r3, [r3, #-25]	; 0xffffffe7
   28ea4:	cmp	r3, #0
   28ea8:	beq	28fb4 <__assert_fail@plt+0x168c8>
   28eac:	sub	r0, fp, #8192	; 0x2000
   28eb0:	sub	r0, r0, #4
   28eb4:	sub	r0, r0, #12
   28eb8:	sub	r3, fp, #8192	; 0x2000
   28ebc:	sub	r3, r3, #4
   28ec0:	ldr	r3, [r3, #-24]	; 0xffffffe8
   28ec4:	str	r3, [sp]
   28ec8:	mvn	r3, #0
   28ecc:	ldr	r2, [fp, #4]
   28ed0:	mov	r1, #8192	; 0x2000
   28ed4:	bl	3b034 <__assert_fail@plt+0x28948>
   28ed8:	str	r0, [fp, #-16]
   28edc:	ldr	r3, [fp, #-16]
   28ee0:	cmp	r3, #8192	; 0x2000
   28ee4:	bcs	28efc <__assert_fail@plt+0x16810>
   28ee8:	sub	r3, fp, #8192	; 0x2000
   28eec:	sub	r3, r3, #4
   28ef0:	sub	r3, r3, #12
   28ef4:	str	r3, [fp, #-12]
   28ef8:	b	28f3c <__assert_fail@plt+0x16850>
   28efc:	ldr	r3, [fp, #-16]
   28f00:	add	r3, r3, #1
   28f04:	mov	r0, r3
   28f08:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   28f0c:	mov	r3, r0
   28f10:	str	r3, [fp, #-12]
   28f14:	ldr	r3, [fp, #-16]
   28f18:	add	r1, r3, #1
   28f1c:	sub	r3, fp, #8192	; 0x2000
   28f20:	sub	r3, r3, #4
   28f24:	ldr	r3, [r3, #-24]	; 0xffffffe8
   28f28:	str	r3, [sp]
   28f2c:	mvn	r3, #0
   28f30:	ldr	r2, [fp, #4]
   28f34:	ldr	r0, [fp, #-12]
   28f38:	bl	3b034 <__assert_fail@plt+0x28948>
   28f3c:	ldr	r1, [fp, #-16]
   28f40:	ldr	r0, [fp, #-12]
   28f44:	bl	290b4 <__assert_fail@plt+0x169c8>
   28f48:	str	r0, [fp, #-16]
   28f4c:	ldr	r2, [fp, #-12]
   28f50:	ldr	r3, [fp, #-16]
   28f54:	add	r3, r2, r3
   28f58:	mov	r2, #0
   28f5c:	strb	r2, [r3]
   28f60:	sub	r3, fp, #8192	; 0x2000
   28f64:	sub	r3, r3, #4
   28f68:	mov	r1, r3
   28f6c:	sub	r3, fp, #8192	; 0x2000
   28f70:	sub	r3, r3, #4
   28f74:	ldr	r2, [fp, #-12]
   28f78:	ldr	r1, [r1, #-32]	; 0xffffffe0
   28f7c:	ldr	r0, [r3, #-20]	; 0xffffffec
   28f80:	bl	123f8 <fprintf@plt>
   28f84:	str	r0, [fp, #-8]
   28f88:	sub	r3, fp, #8192	; 0x2000
   28f8c:	sub	r3, r3, #4
   28f90:	sub	r3, r3, #12
   28f94:	ldr	r2, [fp, #-12]
   28f98:	cmp	r2, r3
   28f9c:	beq	28fdc <__assert_fail@plt+0x168f0>
   28fa0:	ldr	r0, [fp, #-12]
   28fa4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   28fa8:	mov	r3, #0
   28fac:	str	r3, [fp, #-12]
   28fb0:	b	28fdc <__assert_fail@plt+0x168f0>
   28fb4:	sub	r3, fp, #8192	; 0x2000
   28fb8:	sub	r3, r3, #4
   28fbc:	mov	r1, r3
   28fc0:	sub	r3, fp, #8192	; 0x2000
   28fc4:	sub	r3, r3, #4
   28fc8:	ldr	r2, [fp, #4]
   28fcc:	ldr	r1, [r1, #-32]	; 0xffffffe0
   28fd0:	ldr	r0, [r3, #-20]	; 0xffffffec
   28fd4:	bl	123f8 <fprintf@plt>
   28fd8:	str	r0, [fp, #-8]
   28fdc:	ldr	r3, [fp, #-8]
   28fe0:	mov	r0, r3
   28fe4:	sub	sp, fp, #4
   28fe8:	pop	{fp, pc}
   28fec:	push	{fp}		; (str fp, [sp, #-4]!)
   28ff0:	add	fp, sp, #0
   28ff4:	sub	sp, sp, #12
   28ff8:	mov	r3, r0
   28ffc:	strb	r3, [fp, #-5]
   29000:	ldrb	r3, [fp, #-5]
   29004:	mov	r0, r3
   29008:	add	sp, fp, #0
   2900c:	pop	{fp}		; (ldr fp, [sp], #4)
   29010:	bx	lr
   29014:	push	{r4, fp, lr}
   29018:	add	fp, sp, #8
   2901c:	sub	sp, sp, #20
   29020:	str	r0, [fp, #-24]	; 0xffffffe8
   29024:	str	r1, [fp, #-28]	; 0xffffffe4
   29028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2902c:	str	r3, [fp, #-16]
   29030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29034:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29038:	add	r3, r2, r3
   2903c:	str	r3, [fp, #-20]	; 0xffffffec
   29040:	b	29094 <__assert_fail@plt+0x169a8>
   29044:	bl	12368 <__ctype_b_loc@plt>
   29048:	mov	r3, r0
   2904c:	ldr	r4, [r3]
   29050:	ldr	r3, [fp, #-16]
   29054:	ldrb	r3, [r3]
   29058:	mov	r0, r3
   2905c:	bl	28fec <__assert_fail@plt+0x16900>
   29060:	mov	r3, r0
   29064:	lsl	r3, r3, #1
   29068:	add	r3, r4, r3
   2906c:	ldrh	r3, [r3]
   29070:	and	r3, r3, #16384	; 0x4000
   29074:	cmp	r3, #0
   29078:	bne	29088 <__assert_fail@plt+0x1699c>
   2907c:	ldr	r3, [fp, #-16]
   29080:	mov	r2, #63	; 0x3f
   29084:	strb	r2, [r3]
   29088:	ldr	r3, [fp, #-16]
   2908c:	add	r3, r3, #1
   29090:	str	r3, [fp, #-16]
   29094:	ldr	r2, [fp, #-16]
   29098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2909c:	cmp	r2, r3
   290a0:	bcc	29044 <__assert_fail@plt+0x16958>
   290a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   290a8:	mov	r0, r3
   290ac:	sub	sp, fp, #8
   290b0:	pop	{r4, fp, pc}
   290b4:	push	{fp, lr}
   290b8:	add	fp, sp, #4
   290bc:	sub	sp, sp, #40	; 0x28
   290c0:	str	r0, [fp, #-40]	; 0xffffffd8
   290c4:	str	r1, [fp, #-44]	; 0xffffffd4
   290c8:	bl	12254 <__ctype_get_mb_cur_max@plt>
   290cc:	mov	r3, r0
   290d0:	cmp	r3, #1
   290d4:	bhi	290ec <__assert_fail@plt+0x16a00>
   290d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   290dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   290e0:	bl	29014 <__assert_fail@plt+0x16928>
   290e4:	mov	r3, r0
   290e8:	b	292e0 <__assert_fail@plt+0x16bf4>
   290ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   290f0:	str	r3, [fp, #-8]
   290f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   290f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   290fc:	add	r3, r2, r3
   29100:	str	r3, [fp, #-20]	; 0xffffffec
   29104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29108:	str	r3, [fp, #-12]
   2910c:	b	292bc <__assert_fail@plt+0x16bd0>
   29110:	ldr	r3, [fp, #-8]
   29114:	ldrb	r3, [r3]
   29118:	cmp	r3, #63	; 0x3f
   2911c:	bgt	29138 <__assert_fail@plt+0x16a4c>
   29120:	cmp	r3, #37	; 0x25
   29124:	bge	29154 <__assert_fail@plt+0x16a68>
   29128:	sub	r3, r3, #32
   2912c:	cmp	r3, #3
   29130:	bhi	29178 <__assert_fail@plt+0x16a8c>
   29134:	b	29154 <__assert_fail@plt+0x16a68>
   29138:	cmp	r3, #65	; 0x41
   2913c:	blt	29178 <__assert_fail@plt+0x16a8c>
   29140:	cmp	r3, #95	; 0x5f
   29144:	ble	29154 <__assert_fail@plt+0x16a68>
   29148:	sub	r3, r3, #97	; 0x61
   2914c:	cmp	r3, #29
   29150:	bhi	29178 <__assert_fail@plt+0x16a8c>
   29154:	ldr	r3, [fp, #-12]
   29158:	add	r2, r3, #1
   2915c:	str	r2, [fp, #-12]
   29160:	ldr	r2, [fp, #-8]
   29164:	add	r1, r2, #1
   29168:	str	r1, [fp, #-8]
   2916c:	ldrb	r2, [r2]
   29170:	strb	r2, [r3]
   29174:	b	292bc <__assert_fail@plt+0x16bd0>
   29178:	sub	r3, fp, #32
   2917c:	mov	r2, #8
   29180:	mov	r1, #0
   29184:	mov	r0, r3
   29188:	bl	12434 <memset@plt>
   2918c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29190:	ldr	r3, [fp, #-8]
   29194:	sub	r3, r2, r3
   29198:	mov	r2, r3
   2919c:	sub	r3, fp, #32
   291a0:	sub	r0, fp, #36	; 0x24
   291a4:	ldr	r1, [fp, #-8]
   291a8:	bl	42c50 <__assert_fail@plt+0x30564>
   291ac:	str	r0, [fp, #-16]
   291b0:	ldr	r3, [fp, #-16]
   291b4:	cmn	r3, #1
   291b8:	bne	291e0 <__assert_fail@plt+0x16af4>
   291bc:	ldr	r3, [fp, #-8]
   291c0:	add	r3, r3, #1
   291c4:	str	r3, [fp, #-8]
   291c8:	ldr	r3, [fp, #-12]
   291cc:	add	r2, r3, #1
   291d0:	str	r2, [fp, #-12]
   291d4:	mov	r2, #63	; 0x3f
   291d8:	strb	r2, [r3]
   291dc:	b	292b8 <__assert_fail@plt+0x16bcc>
   291e0:	ldr	r3, [fp, #-16]
   291e4:	cmn	r3, #2
   291e8:	bne	2920c <__assert_fail@plt+0x16b20>
   291ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   291f0:	str	r3, [fp, #-8]
   291f4:	ldr	r3, [fp, #-12]
   291f8:	add	r2, r3, #1
   291fc:	str	r2, [fp, #-12]
   29200:	mov	r2, #63	; 0x3f
   29204:	strb	r2, [r3]
   29208:	b	292b8 <__assert_fail@plt+0x16bcc>
   2920c:	ldr	r3, [fp, #-16]
   29210:	cmp	r3, #0
   29214:	bne	29220 <__assert_fail@plt+0x16b34>
   29218:	mov	r3, #1
   2921c:	str	r3, [fp, #-16]
   29220:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29224:	mov	r0, r3
   29228:	bl	12074 <wcwidth@plt>
   2922c:	str	r0, [fp, #-24]	; 0xffffffe8
   29230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29234:	cmp	r3, #0
   29238:	blt	2927c <__assert_fail@plt+0x16b90>
   2923c:	b	2926c <__assert_fail@plt+0x16b80>
   29240:	ldr	r3, [fp, #-12]
   29244:	add	r2, r3, #1
   29248:	str	r2, [fp, #-12]
   2924c:	ldr	r2, [fp, #-8]
   29250:	add	r1, r2, #1
   29254:	str	r1, [fp, #-8]
   29258:	ldrb	r2, [r2]
   2925c:	strb	r2, [r3]
   29260:	ldr	r3, [fp, #-16]
   29264:	sub	r3, r3, #1
   29268:	str	r3, [fp, #-16]
   2926c:	ldr	r3, [fp, #-16]
   29270:	cmp	r3, #0
   29274:	bne	29240 <__assert_fail@plt+0x16b54>
   29278:	b	292a0 <__assert_fail@plt+0x16bb4>
   2927c:	ldr	r2, [fp, #-8]
   29280:	ldr	r3, [fp, #-16]
   29284:	add	r3, r2, r3
   29288:	str	r3, [fp, #-8]
   2928c:	ldr	r3, [fp, #-12]
   29290:	add	r2, r3, #1
   29294:	str	r2, [fp, #-12]
   29298:	mov	r2, #63	; 0x3f
   2929c:	strb	r2, [r3]
   292a0:	sub	r3, fp, #32
   292a4:	mov	r0, r3
   292a8:	bl	12134 <mbsinit@plt>
   292ac:	mov	r3, r0
   292b0:	cmp	r3, #0
   292b4:	beq	2918c <__assert_fail@plt+0x16aa0>
   292b8:	nop			; (mov r0, r0)
   292bc:	ldr	r2, [fp, #-8]
   292c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   292c4:	cmp	r2, r3
   292c8:	bcc	29110 <__assert_fail@plt+0x16a24>
   292cc:	ldr	r2, [fp, #-12]
   292d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   292d4:	sub	r3, r2, r3
   292d8:	str	r3, [fp, #-44]	; 0xffffffd4
   292dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   292e0:	mov	r0, r3
   292e4:	sub	sp, fp, #4
   292e8:	pop	{fp, pc}
   292ec:	push	{r4, fp, lr}
   292f0:	add	fp, sp, #8
   292f4:	sub	sp, sp, #36	; 0x24
   292f8:	str	r0, [fp, #-32]	; 0xffffffe0
   292fc:	mov	r3, #0
   29300:	str	r3, [fp, #-20]	; 0xffffffec
   29304:	mov	r3, #0
   29308:	str	r3, [fp, #-16]
   2930c:	b	293c4 <__assert_fail@plt+0x16cd8>
   29310:	ldr	r1, [pc, #444]	; 294d4 <__assert_fail@plt+0x16de8>
   29314:	ldr	r2, [fp, #-16]
   29318:	mov	r3, r2
   2931c:	lsl	r3, r3, #1
   29320:	add	r3, r3, r2
   29324:	lsl	r3, r3, #2
   29328:	add	r3, r1, r3
   2932c:	ldr	r3, [r3]
   29330:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29334:	mov	r0, r3
   29338:	bl	11ffc <strcmp@plt>
   2933c:	mov	r3, r0
   29340:	cmp	r3, #0
   29344:	bne	29370 <__assert_fail@plt+0x16c84>
   29348:	ldr	r1, [pc, #388]	; 294d4 <__assert_fail@plt+0x16de8>
   2934c:	ldr	r2, [fp, #-16]
   29350:	mov	r3, r2
   29354:	lsl	r3, r3, #1
   29358:	add	r3, r3, r2
   2935c:	lsl	r3, r3, #2
   29360:	add	r3, r1, r3
   29364:	add	r3, r3, #8
   29368:	ldr	r3, [r3]
   2936c:	b	294c8 <__assert_fail@plt+0x16ddc>
   29370:	ldr	r1, [pc, #348]	; 294d4 <__assert_fail@plt+0x16de8>
   29374:	ldr	r2, [fp, #-16]
   29378:	mov	r3, r2
   2937c:	lsl	r3, r3, #1
   29380:	add	r3, r3, r2
   29384:	lsl	r3, r3, #2
   29388:	add	r3, r1, r3
   2938c:	ldr	r3, [r3]
   29390:	mov	r0, r3
   29394:	bl	3bbac <__assert_fail@plt+0x294c0>
   29398:	mov	r3, r0
   2939c:	mov	r0, r3
   293a0:	bl	123bc <strlen@plt>
   293a4:	mov	r3, r0
   293a8:	add	r3, r3, #2
   293ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   293b0:	add	r3, r2, r3
   293b4:	str	r3, [fp, #-20]	; 0xffffffec
   293b8:	ldr	r3, [fp, #-16]
   293bc:	add	r3, r3, #1
   293c0:	str	r3, [fp, #-16]
   293c4:	ldr	r3, [fp, #-16]
   293c8:	cmp	r3, #12
   293cc:	bls	29310 <__assert_fail@plt+0x16c24>
   293d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   293d4:	add	r3, r3, #1
   293d8:	mov	r0, r3
   293dc:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   293e0:	mov	r3, r0
   293e4:	str	r3, [fp, #-28]	; 0xffffffe4
   293e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   293ec:	str	r3, [fp, #-24]	; 0xffffffe8
   293f0:	mov	r3, #0
   293f4:	str	r3, [fp, #-16]
   293f8:	b	29488 <__assert_fail@plt+0x16d9c>
   293fc:	ldr	r3, [fp, #-16]
   29400:	cmp	r3, #0
   29404:	beq	2942c <__assert_fail@plt+0x16d40>
   29408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2940c:	ldr	r2, [pc, #196]	; 294d8 <__assert_fail@plt+0x16dec>
   29410:	ldrh	r1, [r2]
   29414:	ldrb	r2, [r2, #2]
   29418:	strh	r1, [r3]
   2941c:	strb	r2, [r3, #2]
   29420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29424:	add	r3, r3, #2
   29428:	str	r3, [fp, #-24]	; 0xffffffe8
   2942c:	ldr	r1, [pc, #160]	; 294d4 <__assert_fail@plt+0x16de8>
   29430:	ldr	r2, [fp, #-16]
   29434:	mov	r3, r2
   29438:	lsl	r3, r3, #1
   2943c:	add	r3, r3, r2
   29440:	lsl	r3, r3, #2
   29444:	add	r3, r1, r3
   29448:	ldr	r3, [r3]
   2944c:	mov	r0, r3
   29450:	bl	3bbac <__assert_fail@plt+0x294c0>
   29454:	mov	r3, r0
   29458:	mov	r2, r3
   2945c:	ldr	r1, [pc, #120]	; 294dc <__assert_fail@plt+0x16df0>
   29460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29464:	bl	12590 <sprintf@plt>
   29468:	mov	r3, r0
   2946c:	mov	r2, r3
   29470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29474:	add	r3, r3, r2
   29478:	str	r3, [fp, #-24]	; 0xffffffe8
   2947c:	ldr	r3, [fp, #-16]
   29480:	add	r3, r3, #1
   29484:	str	r3, [fp, #-16]
   29488:	ldr	r3, [fp, #-16]
   2948c:	cmp	r3, #12
   29490:	bls	293fc <__assert_fail@plt+0x16d10>
   29494:	ldr	r0, [pc, #68]	; 294e0 <__assert_fail@plt+0x16df4>
   29498:	bl	12398 <gettext@plt>
   2949c:	mov	r4, r0
   294a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   294a4:	bl	3bbac <__assert_fail@plt+0x294c0>
   294a8:	mov	r2, r0
   294ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   294b0:	str	r3, [sp]
   294b4:	mov	r3, r2
   294b8:	mov	r2, r4
   294bc:	mov	r1, #0
   294c0:	mov	r0, #1
   294c4:	bl	122b4 <error@plt>
   294c8:	mov	r0, r3
   294cc:	sub	sp, fp, #8
   294d0:	pop	{r4, fp, pc}
   294d4:	andeq	ip, r7, r0, lsr r6
   294d8:	andeq	r8, r6, ip, lsl #13
   294dc:	muleq	r6, r0, r6
   294e0:	muleq	r6, r4, r6
   294e4:	push	{fp}		; (str fp, [sp, #-4]!)
   294e8:	add	fp, sp, #0
   294ec:	sub	sp, sp, #12
   294f0:	str	r0, [fp, #-8]
   294f4:	ldr	r3, [fp, #-8]
   294f8:	cmp	r3, #12
   294fc:	bhi	29524 <__assert_fail@plt+0x16e38>
   29500:	ldr	r1, [pc, #48]	; 29538 <__assert_fail@plt+0x16e4c>
   29504:	ldr	r2, [fp, #-8]
   29508:	mov	r3, r2
   2950c:	lsl	r3, r3, #1
   29510:	add	r3, r3, r2
   29514:	lsl	r3, r3, #2
   29518:	add	r3, r1, r3
   2951c:	ldr	r3, [r3]
   29520:	b	29528 <__assert_fail@plt+0x16e3c>
   29524:	mov	r3, #0
   29528:	mov	r0, r3
   2952c:	add	sp, fp, #0
   29530:	pop	{fp}		; (ldr fp, [sp], #4)
   29534:	bx	lr
   29538:	andeq	ip, r7, r0, lsr r6
   2953c:	push	{fp}		; (str fp, [sp, #-4]!)
   29540:	add	fp, sp, #0
   29544:	sub	sp, sp, #12
   29548:	str	r0, [fp, #-8]
   2954c:	ldr	r3, [fp, #-8]
   29550:	cmp	r3, #12
   29554:	bhi	29580 <__assert_fail@plt+0x16e94>
   29558:	ldr	r1, [pc, #52]	; 29594 <__assert_fail@plt+0x16ea8>
   2955c:	ldr	r2, [fp, #-8]
   29560:	mov	r3, r2
   29564:	lsl	r3, r3, #1
   29568:	add	r3, r3, r2
   2956c:	lsl	r3, r3, #2
   29570:	add	r3, r1, r3
   29574:	add	r3, r3, #8
   29578:	ldr	r3, [r3]
   2957c:	b	29584 <__assert_fail@plt+0x16e98>
   29580:	mvn	r3, #0
   29584:	mov	r0, r3
   29588:	add	sp, fp, #0
   2958c:	pop	{fp}		; (ldr fp, [sp], #4)
   29590:	bx	lr
   29594:	andeq	ip, r7, r0, lsr r6
   29598:	push	{fp}		; (str fp, [sp, #-4]!)
   2959c:	add	fp, sp, #0
   295a0:	sub	sp, sp, #12
   295a4:	str	r0, [fp, #-8]
   295a8:	ldr	r3, [fp, #-8]
   295ac:	cmp	r3, #12
   295b0:	bhi	295dc <__assert_fail@plt+0x16ef0>
   295b4:	ldr	r1, [pc, #52]	; 295f0 <__assert_fail@plt+0x16f04>
   295b8:	ldr	r2, [fp, #-8]
   295bc:	mov	r3, r2
   295c0:	lsl	r3, r3, #1
   295c4:	add	r3, r3, r2
   295c8:	lsl	r3, r3, #2
   295cc:	add	r3, r1, r3
   295d0:	add	r3, r3, #4
   295d4:	ldr	r3, [r3]
   295d8:	b	295e0 <__assert_fail@plt+0x16ef4>
   295dc:	mov	r3, #0
   295e0:	mov	r0, r3
   295e4:	add	sp, fp, #0
   295e8:	pop	{fp}		; (ldr fp, [sp], #4)
   295ec:	bx	lr
   295f0:	andeq	ip, r7, r0, lsr r6
   295f4:	push	{fp}		; (str fp, [sp, #-4]!)
   295f8:	add	fp, sp, #0
   295fc:	sub	sp, sp, #20
   29600:	str	r0, [fp, #-16]
   29604:	str	r1, [fp, #-20]	; 0xffffffec
   29608:	ldr	r3, [fp, #-16]
   2960c:	cmp	r3, #12
   29610:	bls	2961c <__assert_fail@plt+0x16f30>
   29614:	mvn	r3, #0
   29618:	b	296e4 <__assert_fail@plt+0x16ff8>
   2961c:	ldr	r1, [pc, #208]	; 296f4 <__assert_fail@plt+0x17008>
   29620:	ldr	r2, [fp, #-16]
   29624:	mov	r3, r2
   29628:	lsl	r3, r3, #1
   2962c:	add	r3, r3, r2
   29630:	lsl	r3, r3, #2
   29634:	add	r3, r1, r3
   29638:	add	r3, r3, #8
   2963c:	ldr	r3, [r3]
   29640:	str	r3, [fp, #-12]
   29644:	mov	r3, #0
   29648:	str	r3, [fp, #-8]
   2964c:	b	296d0 <__assert_fail@plt+0x16fe4>
   29650:	ldr	r1, [pc, #156]	; 296f4 <__assert_fail@plt+0x17008>
   29654:	ldr	r2, [fp, #-8]
   29658:	mov	r3, r2
   2965c:	lsl	r3, r3, #1
   29660:	add	r3, r3, r2
   29664:	lsl	r3, r3, #2
   29668:	add	r3, r1, r3
   2966c:	add	r3, r3, #4
   29670:	ldr	r3, [r3]
   29674:	mov	r2, r3
   29678:	ldr	r3, [fp, #-20]	; 0xffffffec
   2967c:	and	r3, r3, r2
   29680:	cmp	r3, #0
   29684:	beq	296c0 <__assert_fail@plt+0x16fd4>
   29688:	ldr	r1, [pc, #100]	; 296f4 <__assert_fail@plt+0x17008>
   2968c:	ldr	r2, [fp, #-8]
   29690:	mov	r3, r2
   29694:	lsl	r3, r3, #1
   29698:	add	r3, r3, r2
   2969c:	lsl	r3, r3, #2
   296a0:	add	r3, r1, r3
   296a4:	add	r3, r3, #8
   296a8:	ldr	r2, [r3]
   296ac:	ldr	r3, [fp, #-12]
   296b0:	cmp	r2, r3
   296b4:	bne	296c4 <__assert_fail@plt+0x16fd8>
   296b8:	ldr	r3, [fp, #-8]
   296bc:	b	296e4 <__assert_fail@plt+0x16ff8>
   296c0:	nop			; (mov r0, r0)
   296c4:	ldr	r3, [fp, #-8]
   296c8:	add	r3, r3, #1
   296cc:	str	r3, [fp, #-8]
   296d0:	ldr	r2, [fp, #-8]
   296d4:	ldr	r3, [fp, #-16]
   296d8:	cmp	r2, r3
   296dc:	bcc	29650 <__assert_fail@plt+0x16f64>
   296e0:	mvn	r3, #0
   296e4:	mov	r0, r3
   296e8:	add	sp, fp, #0
   296ec:	pop	{fp}		; (ldr fp, [sp], #4)
   296f0:	bx	lr
   296f4:	andeq	ip, r7, r0, lsr r6
   296f8:	push	{r4, r5, r6, fp, lr}
   296fc:	add	fp, sp, #16
   29700:	sub	sp, sp, #28
   29704:	str	r0, [fp, #-32]	; 0xffffffe0
   29708:	str	r1, [fp, #-36]	; 0xffffffdc
   2970c:	bl	12404 <__errno_location@plt>
   29710:	mov	r2, r0
   29714:	mov	r3, #0
   29718:	str	r3, [r2]
   2971c:	sub	r3, fp, #28
   29720:	mov	r2, #10
   29724:	mov	r1, r3
   29728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2972c:	bl	12008 <strtol@plt>
   29730:	str	r0, [fp, #-24]	; 0xffffffe8
   29734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29738:	cmn	r3, #-2147483647	; 0x80000001
   2973c:	beq	2974c <__assert_fail@plt+0x17060>
   29740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29744:	cmp	r3, #-2147483648	; 0x80000000
   29748:	bne	29798 <__assert_fail@plt+0x170ac>
   2974c:	bl	12404 <__errno_location@plt>
   29750:	mov	r3, r0
   29754:	ldr	r3, [r3]
   29758:	cmp	r3, #34	; 0x22
   2975c:	bne	2977c <__assert_fail@plt+0x17090>
   29760:	bl	12404 <__errno_location@plt>
   29764:	mov	r3, r0
   29768:	ldr	r1, [r3]
   2976c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29770:	ldr	r2, [pc, #232]	; 29860 <__assert_fail@plt+0x17174>
   29774:	mov	r0, #1
   29778:	bl	122b4 <error@plt>
   2977c:	bl	12404 <__errno_location@plt>
   29780:	mov	r3, r0
   29784:	ldr	r1, [r3]
   29788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2978c:	ldr	r2, [pc, #204]	; 29860 <__assert_fail@plt+0x17174>
   29790:	mov	r0, #1
   29794:	bl	122b4 <error@plt>
   29798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2979c:	ldrb	r3, [r3]
   297a0:	cmp	r3, #0
   297a4:	beq	29804 <__assert_fail@plt+0x17118>
   297a8:	bl	12404 <__errno_location@plt>
   297ac:	mov	r3, r0
   297b0:	ldr	r4, [r3]
   297b4:	ldr	r0, [pc, #168]	; 29864 <__assert_fail@plt+0x17178>
   297b8:	bl	12398 <gettext@plt>
   297bc:	mov	r5, r0
   297c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   297c4:	mov	r2, r3
   297c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   297cc:	mov	r0, #0
   297d0:	bl	3b718 <__assert_fail@plt+0x2902c>
   297d4:	mov	r6, r0
   297d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   297dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   297e0:	mov	r0, #1
   297e4:	bl	3b718 <__assert_fail@plt+0x2902c>
   297e8:	mov	r3, r0
   297ec:	str	r3, [sp]
   297f0:	mov	r3, r6
   297f4:	mov	r2, r5
   297f8:	mov	r1, r4
   297fc:	mov	r0, #1
   29800:	bl	122b4 <error@plt>
   29804:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29808:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2980c:	cmp	r2, r3
   29810:	bne	29850 <__assert_fail@plt+0x17164>
   29814:	bl	12404 <__errno_location@plt>
   29818:	mov	r3, r0
   2981c:	ldr	r4, [r3]
   29820:	ldr	r0, [pc, #64]	; 29868 <__assert_fail@plt+0x1717c>
   29824:	bl	12398 <gettext@plt>
   29828:	mov	r5, r0
   2982c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29830:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29834:	mov	r0, #0
   29838:	bl	3b718 <__assert_fail@plt+0x2902c>
   2983c:	mov	r3, r0
   29840:	mov	r2, r5
   29844:	mov	r1, r4
   29848:	mov	r0, #1
   2984c:	bl	122b4 <error@plt>
   29850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29854:	mov	r0, r3
   29858:	sub	sp, fp, #16
   2985c:	pop	{r4, r5, r6, fp, pc}
   29860:	andeq	r8, r6, ip, asr #13
   29864:	ldrdeq	r8, [r6], -r0
   29868:	andeq	r8, r6, ip, ror #13
   2986c:	push	{fp, lr}
   29870:	add	fp, sp, #4
   29874:	sub	sp, sp, #16
   29878:	str	r0, [fp, #-16]
   2987c:	str	r1, [fp, #-20]	; 0xffffffec
   29880:	ldr	r3, [fp, #-20]	; 0xffffffec
   29884:	ldrb	r3, [r3]
   29888:	cmp	r3, #0
   2988c:	beq	298bc <__assert_fail@plt+0x171d0>
   29890:	ldr	r1, [fp, #-20]	; 0xffffffec
   29894:	ldr	r0, [fp, #-16]
   29898:	bl	12608 <strpbrk@plt>
   2989c:	str	r0, [fp, #-8]
   298a0:	ldr	r3, [fp, #-8]
   298a4:	cmp	r3, #0
   298a8:	beq	298bc <__assert_fail@plt+0x171d0>
   298ac:	ldr	r2, [fp, #-8]
   298b0:	ldr	r3, [fp, #-16]
   298b4:	sub	r3, r2, r3
   298b8:	b	298c8 <__assert_fail@plt+0x171dc>
   298bc:	ldr	r0, [fp, #-16]
   298c0:	bl	123bc <strlen@plt>
   298c4:	mov	r3, r0
   298c8:	mov	r0, r3
   298cc:	sub	sp, fp, #4
   298d0:	pop	{fp, pc}
   298d4:	push	{fp, lr}
   298d8:	add	fp, sp, #4
   298dc:	sub	sp, sp, #16
   298e0:	str	r0, [fp, #-8]
   298e4:	str	r1, [fp, #-12]
   298e8:	str	r3, [fp, #-20]	; 0xffffffec
   298ec:	mov	r3, r2
   298f0:	strb	r3, [fp, #-13]
   298f4:	ldrb	r3, [fp, #-13]
   298f8:	cmp	r3, #0
   298fc:	beq	2991c <__assert_fail@plt+0x17230>
   29900:	ldr	r3, [fp, #-20]	; 0xffffffec
   29904:	mov	r2, #0
   29908:	str	r2, [r3]
   2990c:	ldr	r3, [fp, #4]
   29910:	mov	r2, #0
   29914:	str	r2, [r3]
   29918:	b	29974 <__assert_fail@plt+0x17288>
   2991c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29920:	ldr	r2, [r3]
   29924:	ldr	r3, [fp, #4]
   29928:	ldr	r3, [r3]
   2992c:	add	r2, r2, r3
   29930:	ldr	r3, [fp, #-20]	; 0xffffffec
   29934:	str	r2, [r3]
   29938:	ldr	r3, [fp, #-20]	; 0xffffffec
   2993c:	ldr	r3, [r3]
   29940:	ldr	r2, [fp, #-8]
   29944:	add	r3, r2, r3
   29948:	ldrb	r3, [r3]
   2994c:	cmp	r3, #0
   29950:	beq	2996c <__assert_fail@plt+0x17280>
   29954:	ldr	r3, [fp, #-20]	; 0xffffffec
   29958:	ldr	r3, [r3]
   2995c:	add	r2, r3, #1
   29960:	ldr	r3, [fp, #-20]	; 0xffffffec
   29964:	str	r2, [r3]
   29968:	b	29974 <__assert_fail@plt+0x17288>
   2996c:	mov	r3, #0
   29970:	b	299a0 <__assert_fail@plt+0x172b4>
   29974:	ldr	r3, [fp, #-20]	; 0xffffffec
   29978:	ldr	r3, [r3]
   2997c:	ldr	r2, [fp, #-8]
   29980:	add	r3, r2, r3
   29984:	ldr	r1, [fp, #-12]
   29988:	mov	r0, r3
   2998c:	bl	2986c <__assert_fail@plt+0x17180>
   29990:	mov	r2, r0
   29994:	ldr	r3, [fp, #4]
   29998:	str	r2, [r3]
   2999c:	mov	r3, #1
   299a0:	mov	r0, r3
   299a4:	sub	sp, fp, #4
   299a8:	pop	{fp, pc}
   299ac:	push	{fp, lr}
   299b0:	add	fp, sp, #4
   299b4:	sub	sp, sp, #24
   299b8:	str	r0, [fp, #-8]
   299bc:	str	r1, [fp, #-12]
   299c0:	ldr	r0, [pc, #60]	; 29a04 <__assert_fail@plt+0x17318>
   299c4:	bl	12398 <gettext@plt>
   299c8:	mov	r1, r0
   299cc:	ldr	r3, [pc, #52]	; 29a08 <__assert_fail@plt+0x1731c>
   299d0:	str	r3, [sp, #8]
   299d4:	ldr	r3, [pc, #48]	; 29a0c <__assert_fail@plt+0x17320>
   299d8:	str	r3, [sp, #4]
   299dc:	ldr	r3, [pc, #44]	; 29a10 <__assert_fail@plt+0x17324>
   299e0:	str	r3, [sp]
   299e4:	ldr	r3, [fp, #-12]
   299e8:	ldr	r2, [pc, #36]	; 29a14 <__assert_fail@plt+0x17328>
   299ec:	ldr	r0, [fp, #-8]
   299f0:	bl	123f8 <fprintf@plt>
   299f4:	mov	r3, r0
   299f8:	mov	r0, r3
   299fc:	sub	sp, fp, #4
   29a00:	pop	{fp, pc}
   29a04:	andeq	r8, r6, r4, lsl #14
   29a08:	strdeq	r8, [r6], -ip
   29a0c:	andeq	r8, r6, r4, lsl r8
   29a10:	andeq	r8, r6, r4, asr #16
   29a14:	ldrdeq	r8, [r6], -r4
   29a18:	push	{fp, lr}
   29a1c:	add	fp, sp, #4
   29a20:	sub	sp, sp, #16
   29a24:	str	r0, [fp, #-8]
   29a28:	str	r1, [fp, #-12]
   29a2c:	ldr	r3, [pc, #44]	; 29a60 <__assert_fail@plt+0x17374>
   29a30:	str	r3, [sp, #4]
   29a34:	mov	r3, #0
   29a38:	str	r3, [sp]
   29a3c:	mov	r3, #0
   29a40:	mov	r2, #0
   29a44:	ldr	r1, [fp, #-12]
   29a48:	ldr	r0, [fp, #-8]
   29a4c:	bl	29fb4 <__assert_fail@plt+0x178c8>
   29a50:	mov	r3, r0
   29a54:	mov	r0, r3
   29a58:	sub	sp, fp, #4
   29a5c:	pop	{fp, pc}
   29a60:	andeq	r2, r1, r0, lsr #6
   29a64:	push	{fp, lr}
   29a68:	add	fp, sp, #4
   29a6c:	sub	sp, sp, #16
   29a70:	str	r0, [fp, #-16]
   29a74:	mov	r0, #24
   29a78:	bl	42ba8 <__assert_fail@plt+0x304bc>
   29a7c:	mov	r3, r0
   29a80:	str	r3, [fp, #-8]
   29a84:	ldr	r3, [fp, #-8]
   29a88:	cmp	r3, #0
   29a8c:	bne	29a98 <__assert_fail@plt+0x173ac>
   29a90:	mov	r3, #0
   29a94:	b	29ac0 <__assert_fail@plt+0x173d4>
   29a98:	ldr	r3, [fp, #-8]
   29a9c:	mov	r2, #0
   29aa0:	str	r2, [r3]
   29aa4:	ldr	r3, [fp, #-8]
   29aa8:	ldr	r2, [fp, #-16]
   29aac:	str	r2, [r3, #16]
   29ab0:	ldr	r3, [fp, #-8]
   29ab4:	ldr	r2, [fp, #-16]
   29ab8:	str	r2, [r3, #20]
   29abc:	ldr	r3, [fp, #-8]
   29ac0:	mov	r0, r3
   29ac4:	sub	sp, fp, #4
   29ac8:	pop	{fp, pc}
   29acc:	push	{fp, lr}
   29ad0:	add	fp, sp, #4
   29ad4:	sub	sp, sp, #16
   29ad8:	str	r0, [fp, #-16]
   29adc:	mov	r0, #24
   29ae0:	bl	42ba8 <__assert_fail@plt+0x304bc>
   29ae4:	mov	r3, r0
   29ae8:	str	r3, [fp, #-8]
   29aec:	ldr	r3, [fp, #-8]
   29af0:	cmp	r3, #0
   29af4:	bne	29b00 <__assert_fail@plt+0x17414>
   29af8:	mov	r3, #0
   29afc:	b	29b40 <__assert_fail@plt+0x17454>
   29b00:	ldr	r3, [fp, #-8]
   29b04:	ldr	r2, [fp, #-16]
   29b08:	str	r2, [r3]
   29b0c:	ldr	r3, [fp, #-8]
   29b10:	mov	r2, #0
   29b14:	str	r2, [r3, #8]
   29b18:	ldr	r3, [fp, #-8]
   29b1c:	mov	r2, #0
   29b20:	str	r2, [r3, #12]
   29b24:	ldr	r3, [fp, #-8]
   29b28:	mov	r2, #0
   29b2c:	str	r2, [r3, #4]
   29b30:	ldr	r3, [fp, #-8]
   29b34:	mov	r2, #0
   29b38:	str	r2, [r3, #16]
   29b3c:	ldr	r3, [fp, #-8]
   29b40:	mov	r0, r3
   29b44:	sub	sp, fp, #4
   29b48:	pop	{fp, pc}
   29b4c:	push	{fp, lr}
   29b50:	add	fp, sp, #4
   29b54:	sub	sp, sp, #16
   29b58:	str	r0, [fp, #-16]
   29b5c:	str	r1, [fp, #-20]	; 0xffffffec
   29b60:	ldr	r3, [fp, #-16]
   29b64:	ldr	r3, [r3]
   29b68:	cmp	r3, #0
   29b6c:	beq	29c04 <__assert_fail@plt+0x17518>
   29b70:	ldr	r3, [fp, #-16]
   29b74:	add	r0, r3, #8
   29b78:	ldr	r3, [fp, #-16]
   29b7c:	add	r1, r3, #12
   29b80:	ldr	r3, [fp, #-16]
   29b84:	ldr	r3, [r3]
   29b88:	mov	r2, #0
   29b8c:	bl	12644 <getdelim@plt>
   29b90:	str	r0, [fp, #-8]
   29b94:	ldr	r3, [fp, #-8]
   29b98:	cmp	r3, #0
   29b9c:	bge	29bd8 <__assert_fail@plt+0x174ec>
   29ba0:	ldr	r3, [fp, #-16]
   29ba4:	ldr	r3, [r3]
   29ba8:	mov	r0, r3
   29bac:	bl	1238c <feof@plt>
   29bb0:	mov	r3, r0
   29bb4:	cmp	r3, #0
   29bb8:	beq	29bc4 <__assert_fail@plt+0x174d8>
   29bbc:	mov	r2, #2
   29bc0:	b	29bc8 <__assert_fail@plt+0x174dc>
   29bc4:	mov	r2, #4
   29bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   29bcc:	str	r2, [r3]
   29bd0:	mov	r3, #0
   29bd4:	b	29c50 <__assert_fail@plt+0x17564>
   29bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   29bdc:	mov	r2, #1
   29be0:	str	r2, [r3]
   29be4:	ldr	r3, [fp, #-16]
   29be8:	ldr	r3, [r3, #4]
   29bec:	add	r2, r3, #1
   29bf0:	ldr	r3, [fp, #-16]
   29bf4:	str	r2, [r3, #4]
   29bf8:	ldr	r3, [fp, #-16]
   29bfc:	ldr	r3, [r3, #8]
   29c00:	b	29c50 <__assert_fail@plt+0x17564>
   29c04:	ldr	r3, [fp, #-16]
   29c08:	ldr	r3, [r3, #20]
   29c0c:	ldr	r3, [r3]
   29c10:	cmp	r3, #0
   29c14:	bne	29c2c <__assert_fail@plt+0x17540>
   29c18:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c1c:	mov	r2, #2
   29c20:	str	r2, [r3]
   29c24:	mov	r3, #0
   29c28:	b	29c50 <__assert_fail@plt+0x17564>
   29c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c30:	mov	r2, #1
   29c34:	str	r2, [r3]
   29c38:	ldr	r3, [fp, #-16]
   29c3c:	ldr	r3, [r3, #20]
   29c40:	add	r1, r3, #4
   29c44:	ldr	r2, [fp, #-16]
   29c48:	str	r1, [r2, #20]
   29c4c:	ldr	r3, [r3]
   29c50:	mov	r0, r3
   29c54:	sub	sp, fp, #4
   29c58:	pop	{fp, pc}
   29c5c:	push	{fp}		; (str fp, [sp, #-4]!)
   29c60:	add	fp, sp, #0
   29c64:	sub	sp, sp, #12
   29c68:	str	r0, [fp, #-8]
   29c6c:	ldr	r3, [fp, #-8]
   29c70:	ldr	r3, [r3]
   29c74:	cmp	r3, #0
   29c78:	beq	29c88 <__assert_fail@plt+0x1759c>
   29c7c:	ldr	r3, [fp, #-8]
   29c80:	ldr	r3, [r3, #4]
   29c84:	b	29ca4 <__assert_fail@plt+0x175b8>
   29c88:	ldr	r3, [fp, #-8]
   29c8c:	ldr	r3, [r3, #20]
   29c90:	mov	r2, r3
   29c94:	ldr	r3, [fp, #-8]
   29c98:	ldr	r3, [r3, #16]
   29c9c:	sub	r3, r2, r3
   29ca0:	asr	r3, r3, #2
   29ca4:	mov	r0, r3
   29ca8:	add	sp, fp, #0
   29cac:	pop	{fp}		; (ldr fp, [sp], #4)
   29cb0:	bx	lr
   29cb4:	push	{fp, lr}
   29cb8:	add	fp, sp, #4
   29cbc:	sub	sp, sp, #8
   29cc0:	str	r0, [fp, #-8]
   29cc4:	ldr	r3, [fp, #-8]
   29cc8:	ldr	r3, [r3]
   29ccc:	cmp	r3, #0
   29cd0:	beq	29ce4 <__assert_fail@plt+0x175f8>
   29cd4:	ldr	r3, [fp, #-8]
   29cd8:	ldr	r3, [r3, #8]
   29cdc:	mov	r0, r3
   29ce0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   29ce4:	ldr	r0, [fp, #-8]
   29ce8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   29cec:	nop			; (mov r0, r0)
   29cf0:	sub	sp, fp, #4
   29cf4:	pop	{fp, pc}
   29cf8:	push	{r4, fp, lr}
   29cfc:	add	fp, sp, #8
   29d00:	sub	sp, sp, #52	; 0x34
   29d04:	str	r0, [fp, #-48]	; 0xffffffd0
   29d08:	str	r1, [fp, #-52]	; 0xffffffcc
   29d0c:	str	r2, [fp, #-56]	; 0xffffffc8
   29d10:	str	r3, [fp, #-60]	; 0xffffffc4
   29d14:	ldr	r3, [fp, #4]
   29d18:	cmp	r3, #0
   29d1c:	bne	29d28 <__assert_fail@plt+0x1763c>
   29d20:	ldr	r3, [pc, #648]	; 29fb0 <__assert_fail@plt+0x178c4>
   29d24:	str	r3, [fp, #4]
   29d28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29d2c:	cmp	r3, #0
   29d30:	bne	29d44 <__assert_fail@plt+0x17658>
   29d34:	ldr	r3, [fp, #12]
   29d38:	str	r3, [fp, #-56]	; 0xffffffc8
   29d3c:	mov	r3, #1024	; 0x400
   29d40:	str	r3, [fp, #-60]	; 0xffffffc4
   29d44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29d48:	str	r3, [fp, #-16]
   29d4c:	mvn	r3, #-2147483648	; 0x80000000
   29d50:	str	r3, [fp, #-24]	; 0xffffffe8
   29d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29d58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29d5c:	cmp	r2, r3
   29d60:	movcc	r3, r2
   29d64:	movcs	r3, r3
   29d68:	str	r3, [fp, #-20]	; 0xffffffec
   29d6c:	b	29f58 <__assert_fail@plt+0x1786c>
   29d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d74:	ldr	r4, [fp, #8]
   29d78:	ldr	r2, [fp, #-16]
   29d7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   29d80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   29d84:	blx	r4
   29d88:	str	r0, [fp, #-28]	; 0xffffffe4
   29d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29d90:	cmp	r3, #0
   29d94:	bge	29de0 <__assert_fail@plt+0x176f4>
   29d98:	ldr	r2, [fp, #-16]
   29d9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29da0:	cmp	r2, r3
   29da4:	beq	29dd8 <__assert_fail@plt+0x176ec>
   29da8:	bl	12404 <__errno_location@plt>
   29dac:	mov	r3, r0
   29db0:	ldr	r3, [r3]
   29db4:	str	r3, [fp, #-44]	; 0xffffffd4
   29db8:	ldr	r3, [fp, #4]
   29dbc:	ldr	r3, [r3, #8]
   29dc0:	ldr	r0, [fp, #-16]
   29dc4:	blx	r3
   29dc8:	bl	12404 <__errno_location@plt>
   29dcc:	mov	r2, r0
   29dd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29dd4:	str	r3, [r2]
   29dd8:	mov	r3, #0
   29ddc:	b	29fa4 <__assert_fail@plt+0x178b8>
   29de0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29de4:	str	r3, [fp, #-32]	; 0xffffffe0
   29de8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29dec:	ldr	r3, [fp, #-20]	; 0xffffffec
   29df0:	cmp	r2, r3
   29df4:	bge	29ed8 <__assert_fail@plt+0x177ec>
   29df8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29dfc:	add	r2, r3, #1
   29e00:	str	r2, [fp, #-32]	; 0xffffffe0
   29e04:	mov	r2, r3
   29e08:	ldr	r3, [fp, #-16]
   29e0c:	add	r3, r3, r2
   29e10:	mov	r2, #0
   29e14:	strb	r2, [r3]
   29e18:	ldr	r2, [fp, #-16]
   29e1c:	ldr	r3, [fp, #12]
   29e20:	cmp	r2, r3
   29e24:	bne	29e70 <__assert_fail@plt+0x17784>
   29e28:	ldr	r3, [fp, #4]
   29e2c:	ldr	r3, [r3]
   29e30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29e34:	mov	r0, r2
   29e38:	blx	r3
   29e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   29e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29e44:	str	r3, [fp, #-20]	; 0xffffffec
   29e48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29e4c:	cmp	r3, #0
   29e50:	beq	29f68 <__assert_fail@plt+0x1787c>
   29e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29e58:	mov	r2, r3
   29e5c:	ldr	r1, [fp, #-16]
   29e60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29e64:	bl	120f8 <memcpy@plt>
   29e68:	mov	r3, r0
   29e6c:	b	29fa4 <__assert_fail@plt+0x178b8>
   29e70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   29e78:	cmp	r2, r3
   29e7c:	bge	29ed0 <__assert_fail@plt+0x177e4>
   29e80:	ldr	r2, [fp, #-16]
   29e84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29e88:	cmp	r2, r3
   29e8c:	beq	29ed0 <__assert_fail@plt+0x177e4>
   29e90:	ldr	r3, [fp, #4]
   29e94:	ldr	r3, [r3, #4]
   29e98:	cmp	r3, #0
   29e9c:	beq	29ed0 <__assert_fail@plt+0x177e4>
   29ea0:	ldr	r3, [fp, #4]
   29ea4:	ldr	r3, [r3, #4]
   29ea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29eac:	mov	r1, r2
   29eb0:	ldr	r0, [fp, #-16]
   29eb4:	blx	r3
   29eb8:	str	r0, [fp, #-40]	; 0xffffffd8
   29ebc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29ec0:	cmp	r3, #0
   29ec4:	beq	29ed0 <__assert_fail@plt+0x177e4>
   29ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29ecc:	b	29fa4 <__assert_fail@plt+0x178b8>
   29ed0:	ldr	r3, [fp, #-16]
   29ed4:	b	29fa4 <__assert_fail@plt+0x178b8>
   29ed8:	ldr	r2, [fp, #-16]
   29edc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29ee0:	cmp	r2, r3
   29ee4:	beq	29ef8 <__assert_fail@plt+0x1780c>
   29ee8:	ldr	r3, [fp, #4]
   29eec:	ldr	r3, [r3, #8]
   29ef0:	ldr	r0, [fp, #-16]
   29ef4:	blx	r3
   29ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29efc:	lsr	r2, r3, #31
   29f00:	add	r3, r2, r3
   29f04:	asr	r3, r3, #1
   29f08:	mov	r2, r3
   29f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f10:	cmp	r2, r3
   29f14:	bgt	29f30 <__assert_fail@plt+0x17844>
   29f18:	bl	12404 <__errno_location@plt>
   29f1c:	mov	r2, r0
   29f20:	mov	r3, #36	; 0x24
   29f24:	str	r3, [r2]
   29f28:	mov	r3, #0
   29f2c:	b	29fa4 <__assert_fail@plt+0x178b8>
   29f30:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f34:	lsl	r3, r3, #1
   29f38:	add	r3, r3, #1
   29f3c:	str	r3, [fp, #-20]	; 0xffffffec
   29f40:	ldr	r3, [fp, #4]
   29f44:	ldr	r3, [r3]
   29f48:	ldr	r2, [fp, #-20]	; 0xffffffec
   29f4c:	mov	r0, r2
   29f50:	blx	r3
   29f54:	str	r0, [fp, #-16]
   29f58:	ldr	r3, [fp, #-16]
   29f5c:	cmp	r3, #0
   29f60:	bne	29d70 <__assert_fail@plt+0x17684>
   29f64:	b	29f6c <__assert_fail@plt+0x17880>
   29f68:	nop			; (mov r0, r0)
   29f6c:	ldr	r3, [fp, #4]
   29f70:	ldr	r3, [r3, #12]
   29f74:	cmp	r3, #0
   29f78:	beq	29f90 <__assert_fail@plt+0x178a4>
   29f7c:	ldr	r3, [fp, #4]
   29f80:	ldr	r3, [r3, #12]
   29f84:	ldr	r2, [fp, #-20]	; 0xffffffec
   29f88:	mov	r0, r2
   29f8c:	blx	r3
   29f90:	bl	12404 <__errno_location@plt>
   29f94:	mov	r2, r0
   29f98:	mov	r3, #12
   29f9c:	str	r3, [r2]
   29fa0:	mov	r3, #0
   29fa4:	mov	r0, r3
   29fa8:	sub	sp, fp, #8
   29fac:	pop	{r4, fp, pc}
   29fb0:	andeq	sl, r6, r0, asr pc
   29fb4:	push	{fp, lr}
   29fb8:	add	fp, sp, #4
   29fbc:	sub	sp, sp, #1056	; 0x420
   29fc0:	str	r0, [fp, #-1032]	; 0xfffffbf8
   29fc4:	str	r1, [fp, #-1036]	; 0xfffffbf4
   29fc8:	str	r2, [fp, #-1040]	; 0xfffffbf0
   29fcc:	str	r3, [fp, #-1044]	; 0xfffffbec
   29fd0:	sub	r3, fp, #1024	; 0x400
   29fd4:	sub	r3, r3, #4
   29fd8:	str	r3, [sp, #8]
   29fdc:	ldr	r3, [fp, #8]
   29fe0:	str	r3, [sp, #4]
   29fe4:	ldr	r3, [fp, #4]
   29fe8:	str	r3, [sp]
   29fec:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   29ff0:	ldr	r2, [fp, #-1040]	; 0xfffffbf0
   29ff4:	ldr	r1, [fp, #-1036]	; 0xfffffbf4
   29ff8:	ldr	r0, [fp, #-1032]	; 0xfffffbf8
   29ffc:	bl	29cf8 <__assert_fail@plt+0x1760c>
   2a000:	mov	r3, r0
   2a004:	mov	r0, r3
   2a008:	sub	sp, fp, #4
   2a00c:	pop	{fp, pc}
   2a010:	push	{fp, lr}
   2a014:	add	fp, sp, #4
   2a018:	sub	sp, sp, #16
   2a01c:	str	r0, [fp, #-16]
   2a020:	mov	r3, r1
   2a024:	strb	r3, [fp, #-17]	; 0xffffffef
   2a028:	mov	r2, #0
   2a02c:	mov	r1, #1
   2a030:	ldr	r0, [fp, #-16]
   2a034:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   2a038:	str	r0, [fp, #-8]
   2a03c:	ldr	r3, [fp, #-8]
   2a040:	cmp	r3, #0
   2a044:	blt	2a0a0 <__assert_fail@plt+0x179b4>
   2a048:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2a04c:	cmp	r3, #0
   2a050:	beq	2a060 <__assert_fail@plt+0x17974>
   2a054:	ldr	r3, [fp, #-8]
   2a058:	orr	r3, r3, #1
   2a05c:	b	2a068 <__assert_fail@plt+0x1797c>
   2a060:	ldr	r3, [fp, #-8]
   2a064:	bic	r3, r3, #1
   2a068:	str	r3, [fp, #-12]
   2a06c:	ldr	r2, [fp, #-8]
   2a070:	ldr	r3, [fp, #-12]
   2a074:	cmp	r2, r3
   2a078:	beq	2a098 <__assert_fail@plt+0x179ac>
   2a07c:	ldr	r2, [fp, #-12]
   2a080:	mov	r1, #2
   2a084:	ldr	r0, [fp, #-16]
   2a088:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   2a08c:	mov	r3, r0
   2a090:	cmn	r3, #1
   2a094:	beq	2a0a0 <__assert_fail@plt+0x179b4>
   2a098:	mov	r3, #0
   2a09c:	b	2a0a4 <__assert_fail@plt+0x179b8>
   2a0a0:	mvn	r3, #0
   2a0a4:	mov	r0, r3
   2a0a8:	sub	sp, fp, #4
   2a0ac:	pop	{fp, pc}
   2a0b0:	push	{fp, lr}
   2a0b4:	add	fp, sp, #4
   2a0b8:	sub	sp, sp, #8
   2a0bc:	str	r0, [fp, #-8]
   2a0c0:	mov	r2, #0
   2a0c4:	ldr	r1, [pc, #20]	; 2a0e0 <__assert_fail@plt+0x179f4>
   2a0c8:	ldr	r0, [fp, #-8]
   2a0cc:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   2a0d0:	mov	r3, r0
   2a0d4:	mov	r0, r3
   2a0d8:	sub	sp, fp, #4
   2a0dc:	pop	{fp, pc}
   2a0e0:	andeq	r0, r0, r6, lsl #8
   2a0e4:	push	{fp}		; (str fp, [sp, #-4]!)
   2a0e8:	add	fp, sp, #0
   2a0ec:	sub	sp, sp, #12
   2a0f0:	str	r0, [fp, #-8]
   2a0f4:	ldr	r2, [pc, #20]	; 2a110 <__assert_fail@plt+0x17a24>
   2a0f8:	ldr	r3, [fp, #-8]
   2a0fc:	str	r3, [r2]
   2a100:	nop			; (mov r0, r0)
   2a104:	add	sp, fp, #0
   2a108:	pop	{fp}		; (ldr fp, [sp], #4)
   2a10c:	bx	lr
   2a110:	andeq	ip, r7, ip, asr #29
   2a114:	push	{fp}		; (str fp, [sp, #-4]!)
   2a118:	add	fp, sp, #0
   2a11c:	sub	sp, sp, #12
   2a120:	mov	r3, r0
   2a124:	strb	r3, [fp, #-5]
   2a128:	ldr	r2, [pc, #20]	; 2a144 <__assert_fail@plt+0x17a58>
   2a12c:	ldrb	r3, [fp, #-5]
   2a130:	strb	r3, [r2]
   2a134:	nop			; (mov r0, r0)
   2a138:	add	sp, fp, #0
   2a13c:	pop	{fp}		; (ldr fp, [sp], #4)
   2a140:	bx	lr
   2a144:	ldrdeq	ip, [r7], -r0
   2a148:	push	{r4, fp, lr}
   2a14c:	add	fp, sp, #8
   2a150:	sub	sp, sp, #20
   2a154:	ldr	r3, [pc, #256]	; 2a25c <__assert_fail@plt+0x17b70>
   2a158:	ldr	r3, [r3]
   2a15c:	mov	r0, r3
   2a160:	bl	5f6bc <__assert_fail@plt+0x4cfd0>
   2a164:	mov	r3, r0
   2a168:	cmp	r3, #0
   2a16c:	beq	2a224 <__assert_fail@plt+0x17b38>
   2a170:	ldr	r3, [pc, #232]	; 2a260 <__assert_fail@plt+0x17b74>
   2a174:	ldrb	r3, [r3]
   2a178:	eor	r3, r3, #1
   2a17c:	uxtb	r3, r3
   2a180:	cmp	r3, #0
   2a184:	bne	2a19c <__assert_fail@plt+0x17ab0>
   2a188:	bl	12404 <__errno_location@plt>
   2a18c:	mov	r3, r0
   2a190:	ldr	r3, [r3]
   2a194:	cmp	r3, #32
   2a198:	beq	2a224 <__assert_fail@plt+0x17b38>
   2a19c:	ldr	r0, [pc, #192]	; 2a264 <__assert_fail@plt+0x17b78>
   2a1a0:	bl	12398 <gettext@plt>
   2a1a4:	str	r0, [fp, #-16]
   2a1a8:	ldr	r3, [pc, #184]	; 2a268 <__assert_fail@plt+0x17b7c>
   2a1ac:	ldr	r3, [r3]
   2a1b0:	cmp	r3, #0
   2a1b4:	beq	2a1f8 <__assert_fail@plt+0x17b0c>
   2a1b8:	bl	12404 <__errno_location@plt>
   2a1bc:	mov	r3, r0
   2a1c0:	ldr	r4, [r3]
   2a1c4:	ldr	r3, [pc, #156]	; 2a268 <__assert_fail@plt+0x17b7c>
   2a1c8:	ldr	r3, [r3]
   2a1cc:	mov	r0, r3
   2a1d0:	bl	3b8dc <__assert_fail@plt+0x291f0>
   2a1d4:	mov	r2, r0
   2a1d8:	ldr	r3, [fp, #-16]
   2a1dc:	str	r3, [sp]
   2a1e0:	mov	r3, r2
   2a1e4:	ldr	r2, [pc, #128]	; 2a26c <__assert_fail@plt+0x17b80>
   2a1e8:	mov	r1, r4
   2a1ec:	mov	r0, #0
   2a1f0:	bl	122b4 <error@plt>
   2a1f4:	b	2a214 <__assert_fail@plt+0x17b28>
   2a1f8:	bl	12404 <__errno_location@plt>
   2a1fc:	mov	r3, r0
   2a200:	ldr	r1, [r3]
   2a204:	ldr	r3, [fp, #-16]
   2a208:	ldr	r2, [pc, #96]	; 2a270 <__assert_fail@plt+0x17b84>
   2a20c:	mov	r0, #0
   2a210:	bl	122b4 <error@plt>
   2a214:	ldr	r3, [pc, #88]	; 2a274 <__assert_fail@plt+0x17b88>
   2a218:	ldr	r3, [r3]
   2a21c:	mov	r0, r3
   2a220:	bl	120ec <_exit@plt>
   2a224:	ldr	r3, [pc, #76]	; 2a278 <__assert_fail@plt+0x17b8c>
   2a228:	ldr	r3, [r3]
   2a22c:	mov	r0, r3
   2a230:	bl	5f6bc <__assert_fail@plt+0x4cfd0>
   2a234:	mov	r3, r0
   2a238:	cmp	r3, #0
   2a23c:	beq	2a250 <__assert_fail@plt+0x17b64>
   2a240:	ldr	r3, [pc, #44]	; 2a274 <__assert_fail@plt+0x17b88>
   2a244:	ldr	r3, [r3]
   2a248:	mov	r0, r3
   2a24c:	bl	120ec <_exit@plt>
   2a250:	nop			; (mov r0, r0)
   2a254:	sub	sp, fp, #8
   2a258:	pop	{r4, fp, pc}
   2a25c:	andeq	ip, r7, r4, lsr r7
   2a260:	ldrdeq	ip, [r7], -r0
   2a264:	andeq	r8, r6, r4, asr r8
   2a268:	andeq	ip, r7, ip, asr #29
   2a26c:	andeq	r8, r6, r0, ror #16
   2a270:	andeq	r8, r6, r8, ror #16
   2a274:	andeq	ip, r7, ip, asr #13
   2a278:	andeq	ip, r7, r8, lsr #14
   2a27c:	push	{fp, lr}
   2a280:	add	fp, sp, #4
   2a284:	sub	sp, sp, #32
   2a288:	str	r0, [fp, #-32]	; 0xffffffe0
   2a28c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a290:	bl	122cc <opendir@plt>
   2a294:	str	r0, [fp, #-8]
   2a298:	ldr	r3, [fp, #-8]
   2a29c:	cmp	r3, #0
   2a2a0:	beq	2a354 <__assert_fail@plt+0x17c68>
   2a2a4:	ldr	r0, [fp, #-8]
   2a2a8:	bl	125cc <dirfd@plt>
   2a2ac:	str	r0, [fp, #-20]	; 0xffffffec
   2a2b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a2b4:	cmp	r3, #0
   2a2b8:	blt	2a354 <__assert_fail@plt+0x17c68>
   2a2bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a2c0:	cmp	r3, #2
   2a2c4:	bgt	2a354 <__assert_fail@plt+0x17c68>
   2a2c8:	mov	r2, #3
   2a2cc:	ldr	r1, [pc, #144]	; 2a364 <__assert_fail@plt+0x17c78>
   2a2d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a2d4:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   2a2d8:	str	r0, [fp, #-24]	; 0xffffffe8
   2a2dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a2e0:	cmp	r3, #0
   2a2e4:	bge	2a304 <__assert_fail@plt+0x17c18>
   2a2e8:	bl	12404 <__errno_location@plt>
   2a2ec:	mov	r3, r0
   2a2f0:	ldr	r3, [r3]
   2a2f4:	str	r3, [fp, #-16]
   2a2f8:	mov	r3, #0
   2a2fc:	str	r3, [fp, #-12]
   2a300:	b	2a334 <__assert_fail@plt+0x17c48>
   2a304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a308:	bl	125a8 <fdopendir@plt>
   2a30c:	str	r0, [fp, #-12]
   2a310:	bl	12404 <__errno_location@plt>
   2a314:	mov	r3, r0
   2a318:	ldr	r3, [r3]
   2a31c:	str	r3, [fp, #-16]
   2a320:	ldr	r3, [fp, #-12]
   2a324:	cmp	r3, #0
   2a328:	bne	2a334 <__assert_fail@plt+0x17c48>
   2a32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a330:	bl	126a4 <close@plt>
   2a334:	ldr	r0, [fp, #-8]
   2a338:	bl	126bc <closedir@plt>
   2a33c:	bl	12404 <__errno_location@plt>
   2a340:	mov	r2, r0
   2a344:	ldr	r3, [fp, #-16]
   2a348:	str	r3, [r2]
   2a34c:	ldr	r3, [fp, #-12]
   2a350:	str	r3, [fp, #-8]
   2a354:	ldr	r3, [fp, #-8]
   2a358:	mov	r0, r3
   2a35c:	sub	sp, fp, #4
   2a360:	pop	{fp, pc}
   2a364:	andeq	r0, r0, r6, lsl #8
   2a368:	push	{fp, lr}
   2a36c:	add	fp, sp, #4
   2a370:	sub	sp, sp, #24
   2a374:	str	r0, [fp, #-24]	; 0xffffffe8
   2a378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a37c:	bl	5ed00 <__assert_fail@plt+0x4c614>
   2a380:	str	r0, [fp, #-8]
   2a384:	ldr	r3, [fp, #-8]
   2a388:	ldrb	r3, [r3]
   2a38c:	cmp	r3, #0
   2a390:	beq	2a3e0 <__assert_fail@plt+0x17cf4>
   2a394:	ldr	r0, [fp, #-8]
   2a398:	bl	5edb4 <__assert_fail@plt+0x4c6c8>
   2a39c:	mov	r3, r0
   2a3a0:	str	r3, [fp, #-12]
   2a3a4:	ldr	r3, [fp, #-12]
   2a3a8:	ldr	r2, [fp, #-8]
   2a3ac:	add	r3, r2, r3
   2a3b0:	ldrb	r3, [r3]
   2a3b4:	cmp	r3, #47	; 0x2f
   2a3b8:	moveq	r3, #1
   2a3bc:	movne	r3, #0
   2a3c0:	uxtb	r3, r3
   2a3c4:	mov	r2, r3
   2a3c8:	ldr	r3, [fp, #-12]
   2a3cc:	add	r3, r3, r2
   2a3d0:	str	r3, [fp, #-12]
   2a3d4:	mov	r3, #0
   2a3d8:	str	r3, [fp, #-16]
   2a3dc:	b	2a400 <__assert_fail@plt+0x17d14>
   2a3e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3e4:	str	r3, [fp, #-8]
   2a3e8:	ldr	r0, [fp, #-8]
   2a3ec:	bl	5edb4 <__assert_fail@plt+0x4c6c8>
   2a3f0:	mov	r3, r0
   2a3f4:	str	r3, [fp, #-12]
   2a3f8:	mov	r3, #0
   2a3fc:	str	r3, [fp, #-16]
   2a400:	ldr	r2, [fp, #-16]
   2a404:	ldr	r3, [fp, #-12]
   2a408:	add	r3, r2, r3
   2a40c:	add	r3, r3, #1
   2a410:	mov	r0, r3
   2a414:	bl	3d1ac <__assert_fail@plt+0x2aac0>
   2a418:	mov	r3, r0
   2a41c:	str	r3, [fp, #-20]	; 0xffffffec
   2a420:	ldr	r3, [fp, #-16]
   2a424:	cmp	r3, #0
   2a428:	beq	2a448 <__assert_fail@plt+0x17d5c>
   2a42c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a430:	mov	r2, #46	; 0x2e
   2a434:	strb	r2, [r3]
   2a438:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a43c:	add	r3, r3, #1
   2a440:	mov	r2, #47	; 0x2f
   2a444:	strb	r2, [r3]
   2a448:	ldr	r3, [fp, #-16]
   2a44c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a450:	add	r3, r2, r3
   2a454:	ldr	r2, [fp, #-12]
   2a458:	ldr	r1, [fp, #-8]
   2a45c:	mov	r0, r3
   2a460:	bl	120f8 <memcpy@plt>
   2a464:	ldr	r2, [fp, #-16]
   2a468:	ldr	r3, [fp, #-12]
   2a46c:	add	r3, r2, r3
   2a470:	mov	r2, r3
   2a474:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a478:	add	r3, r3, r2
   2a47c:	mov	r2, #0
   2a480:	strb	r2, [r3]
   2a484:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a488:	mov	r0, r3
   2a48c:	sub	sp, fp, #4
   2a490:	pop	{fp, pc}
   2a494:	push	{fp, lr}
   2a498:	add	fp, sp, #4
   2a49c:	sub	sp, sp, #16
   2a4a0:	str	r0, [fp, #-16]
   2a4a4:	mov	r3, #0
   2a4a8:	str	r3, [fp, #-12]
   2a4ac:	ldr	r3, [fp, #-12]
   2a4b0:	cmp	r3, #0
   2a4b4:	bne	2a4d8 <__assert_fail@plt+0x17dec>
   2a4b8:	ldr	r3, [fp, #-16]
   2a4bc:	ldrb	r3, [r3]
   2a4c0:	cmp	r3, #47	; 0x2f
   2a4c4:	bne	2a4d0 <__assert_fail@plt+0x17de4>
   2a4c8:	mov	r3, #1
   2a4cc:	b	2a4dc <__assert_fail@plt+0x17df0>
   2a4d0:	mov	r3, #0
   2a4d4:	b	2a4dc <__assert_fail@plt+0x17df0>
   2a4d8:	mov	r3, #0
   2a4dc:	ldr	r2, [fp, #-12]
   2a4e0:	add	r3, r2, r3
   2a4e4:	str	r3, [fp, #-12]
   2a4e8:	ldr	r0, [fp, #-16]
   2a4ec:	bl	5ed00 <__assert_fail@plt+0x4c614>
   2a4f0:	mov	r3, r0
   2a4f4:	mov	r2, r3
   2a4f8:	ldr	r3, [fp, #-16]
   2a4fc:	sub	r3, r2, r3
   2a500:	str	r3, [fp, #-8]
   2a504:	b	2a530 <__assert_fail@plt+0x17e44>
   2a508:	ldr	r3, [fp, #-8]
   2a50c:	sub	r3, r3, #1
   2a510:	ldr	r2, [fp, #-16]
   2a514:	add	r3, r2, r3
   2a518:	ldrb	r3, [r3]
   2a51c:	cmp	r3, #47	; 0x2f
   2a520:	bne	2a544 <__assert_fail@plt+0x17e58>
   2a524:	ldr	r3, [fp, #-8]
   2a528:	sub	r3, r3, #1
   2a52c:	str	r3, [fp, #-8]
   2a530:	ldr	r2, [fp, #-12]
   2a534:	ldr	r3, [fp, #-8]
   2a538:	cmp	r2, r3
   2a53c:	bcc	2a508 <__assert_fail@plt+0x17e1c>
   2a540:	b	2a548 <__assert_fail@plt+0x17e5c>
   2a544:	nop			; (mov r0, r0)
   2a548:	ldr	r3, [fp, #-8]
   2a54c:	mov	r0, r3
   2a550:	sub	sp, fp, #4
   2a554:	pop	{fp, pc}
   2a558:	push	{fp, lr}
   2a55c:	add	fp, sp, #4
   2a560:	sub	sp, sp, #24
   2a564:	str	r0, [fp, #-24]	; 0xffffffe8
   2a568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a56c:	bl	2a494 <__assert_fail@plt+0x17da8>
   2a570:	str	r0, [fp, #-8]
   2a574:	ldr	r3, [fp, #-8]
   2a578:	cmp	r3, #0
   2a57c:	moveq	r3, #1
   2a580:	movne	r3, #0
   2a584:	strb	r3, [fp, #-9]
   2a588:	ldrb	r2, [fp, #-9]
   2a58c:	ldr	r3, [fp, #-8]
   2a590:	add	r3, r2, r3
   2a594:	add	r3, r3, #1
   2a598:	mov	r0, r3
   2a59c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   2a5a0:	mov	r3, r0
   2a5a4:	str	r3, [fp, #-16]
   2a5a8:	ldr	r3, [fp, #-16]
   2a5ac:	cmp	r3, #0
   2a5b0:	bne	2a5bc <__assert_fail@plt+0x17ed0>
   2a5b4:	mov	r3, #0
   2a5b8:	b	2a60c <__assert_fail@plt+0x17f20>
   2a5bc:	ldr	r2, [fp, #-8]
   2a5c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a5c4:	ldr	r0, [fp, #-16]
   2a5c8:	bl	120f8 <memcpy@plt>
   2a5cc:	ldrb	r3, [fp, #-9]
   2a5d0:	cmp	r3, #0
   2a5d4:	beq	2a5f4 <__assert_fail@plt+0x17f08>
   2a5d8:	ldr	r3, [fp, #-8]
   2a5dc:	add	r2, r3, #1
   2a5e0:	str	r2, [fp, #-8]
   2a5e4:	ldr	r2, [fp, #-16]
   2a5e8:	add	r3, r2, r3
   2a5ec:	mov	r2, #46	; 0x2e
   2a5f0:	strb	r2, [r3]
   2a5f4:	ldr	r2, [fp, #-16]
   2a5f8:	ldr	r3, [fp, #-8]
   2a5fc:	add	r3, r2, r3
   2a600:	mov	r2, #0
   2a604:	strb	r2, [r3]
   2a608:	ldr	r3, [fp, #-16]
   2a60c:	mov	r0, r3
   2a610:	sub	sp, fp, #4
   2a614:	pop	{fp, pc}
   2a618:	push	{fp, lr}
   2a61c:	add	fp, sp, #4
   2a620:	sub	sp, sp, #24
   2a624:	str	r0, [fp, #-24]	; 0xffffffe8
   2a628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a62c:	bl	5ed00 <__assert_fail@plt+0x4c614>
   2a630:	str	r0, [fp, #-8]
   2a634:	ldr	r3, [fp, #-8]
   2a638:	ldrb	r3, [r3]
   2a63c:	cmp	r3, #0
   2a640:	bne	2a64c <__assert_fail@plt+0x17f60>
   2a644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a648:	str	r3, [fp, #-8]
   2a64c:	ldr	r0, [fp, #-8]
   2a650:	bl	5edb4 <__assert_fail@plt+0x4c6c8>
   2a654:	mov	r2, r0
   2a658:	ldr	r3, [fp, #-8]
   2a65c:	add	r3, r3, r2
   2a660:	str	r3, [fp, #-12]
   2a664:	ldr	r3, [fp, #-12]
   2a668:	ldrb	r3, [r3]
   2a66c:	cmp	r3, #0
   2a670:	movne	r3, #1
   2a674:	moveq	r3, #0
   2a678:	strb	r3, [fp, #-13]
   2a67c:	ldr	r3, [fp, #-12]
   2a680:	mov	r2, #0
   2a684:	strb	r2, [r3]
   2a688:	ldrb	r3, [fp, #-13]
   2a68c:	mov	r0, r3
   2a690:	sub	sp, fp, #4
   2a694:	pop	{fp, pc}
   2a698:	push	{r1, r2, r3}
   2a69c:	push	{fp, lr}
   2a6a0:	add	fp, sp, #4
   2a6a4:	sub	sp, sp, #20
   2a6a8:	str	r0, [fp, #-20]	; 0xffffffec
   2a6ac:	mov	r3, #0
   2a6b0:	str	r3, [fp, #-12]
   2a6b4:	ldr	r3, [fp, #4]
   2a6b8:	and	r3, r3, #64	; 0x40
   2a6bc:	cmp	r3, #0
   2a6c0:	beq	2a6e0 <__assert_fail@plt+0x17ff4>
   2a6c4:	add	r3, fp, #8
   2a6c8:	str	r3, [fp, #-16]
   2a6cc:	ldr	r3, [fp, #-16]
   2a6d0:	add	r2, r3, #4
   2a6d4:	str	r2, [fp, #-16]
   2a6d8:	ldr	r3, [r3]
   2a6dc:	str	r3, [fp, #-12]
   2a6e0:	ldr	r2, [fp, #-12]
   2a6e4:	ldr	r1, [fp, #4]
   2a6e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a6ec:	bl	122e4 <open64@plt>
   2a6f0:	mov	r3, r0
   2a6f4:	mov	r0, r3
   2a6f8:	bl	3c918 <__assert_fail@plt+0x2a22c>
   2a6fc:	mov	r3, r0
   2a700:	mov	r0, r3
   2a704:	sub	sp, fp, #4
   2a708:	pop	{fp, lr}
   2a70c:	add	sp, sp, #12
   2a710:	bx	lr
   2a714:	push	{fp}		; (str fp, [sp, #-4]!)
   2a718:	add	fp, sp, #0
   2a71c:	sub	sp, sp, #12
   2a720:	str	r0, [fp, #-8]
   2a724:	ldr	r3, [fp, #-8]
   2a728:	and	r3, r3, #61440	; 0xf000
   2a72c:	cmp	r3, #32768	; 0x8000
   2a730:	bne	2a73c <__assert_fail@plt+0x18050>
   2a734:	mov	r3, #45	; 0x2d
   2a738:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a73c:	ldr	r3, [fp, #-8]
   2a740:	and	r3, r3, #61440	; 0xf000
   2a744:	cmp	r3, #16384	; 0x4000
   2a748:	bne	2a754 <__assert_fail@plt+0x18068>
   2a74c:	mov	r3, #100	; 0x64
   2a750:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a754:	ldr	r3, [fp, #-8]
   2a758:	and	r3, r3, #61440	; 0xf000
   2a75c:	cmp	r3, #24576	; 0x6000
   2a760:	bne	2a76c <__assert_fail@plt+0x18080>
   2a764:	mov	r3, #98	; 0x62
   2a768:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a76c:	ldr	r3, [fp, #-8]
   2a770:	and	r3, r3, #61440	; 0xf000
   2a774:	cmp	r3, #8192	; 0x2000
   2a778:	bne	2a784 <__assert_fail@plt+0x18098>
   2a77c:	mov	r3, #99	; 0x63
   2a780:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a784:	ldr	r3, [fp, #-8]
   2a788:	and	r3, r3, #61440	; 0xf000
   2a78c:	cmp	r3, #40960	; 0xa000
   2a790:	bne	2a79c <__assert_fail@plt+0x180b0>
   2a794:	mov	r3, #108	; 0x6c
   2a798:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a79c:	ldr	r3, [fp, #-8]
   2a7a0:	and	r3, r3, #61440	; 0xf000
   2a7a4:	cmp	r3, #4096	; 0x1000
   2a7a8:	bne	2a7b4 <__assert_fail@plt+0x180c8>
   2a7ac:	mov	r3, #112	; 0x70
   2a7b0:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a7b4:	ldr	r3, [fp, #-8]
   2a7b8:	and	r3, r3, #61440	; 0xf000
   2a7bc:	cmp	r3, #49152	; 0xc000
   2a7c0:	bne	2a7cc <__assert_fail@plt+0x180e0>
   2a7c4:	mov	r3, #115	; 0x73
   2a7c8:	b	2a7d0 <__assert_fail@plt+0x180e4>
   2a7cc:	mov	r3, #63	; 0x3f
   2a7d0:	mov	r0, r3
   2a7d4:	add	sp, fp, #0
   2a7d8:	pop	{fp}		; (ldr fp, [sp], #4)
   2a7dc:	bx	lr
   2a7e0:	push	{fp, lr}
   2a7e4:	add	fp, sp, #4
   2a7e8:	sub	sp, sp, #8
   2a7ec:	str	r0, [fp, #-8]
   2a7f0:	str	r1, [fp, #-12]
   2a7f4:	ldr	r0, [fp, #-8]
   2a7f8:	bl	2a714 <__assert_fail@plt+0x18028>
   2a7fc:	mov	r3, r0
   2a800:	mov	r2, r3
   2a804:	ldr	r3, [fp, #-12]
   2a808:	strb	r2, [r3]
   2a80c:	ldr	r3, [fp, #-12]
   2a810:	add	r3, r3, #1
   2a814:	ldr	r2, [fp, #-8]
   2a818:	and	r2, r2, #256	; 0x100
   2a81c:	cmp	r2, #0
   2a820:	beq	2a82c <__assert_fail@plt+0x18140>
   2a824:	mov	r2, #114	; 0x72
   2a828:	b	2a830 <__assert_fail@plt+0x18144>
   2a82c:	mov	r2, #45	; 0x2d
   2a830:	strb	r2, [r3]
   2a834:	ldr	r3, [fp, #-12]
   2a838:	add	r3, r3, #2
   2a83c:	ldr	r2, [fp, #-8]
   2a840:	and	r2, r2, #128	; 0x80
   2a844:	cmp	r2, #0
   2a848:	beq	2a854 <__assert_fail@plt+0x18168>
   2a84c:	mov	r2, #119	; 0x77
   2a850:	b	2a858 <__assert_fail@plt+0x1816c>
   2a854:	mov	r2, #45	; 0x2d
   2a858:	strb	r2, [r3]
   2a85c:	ldr	r3, [fp, #-12]
   2a860:	add	r2, r3, #3
   2a864:	ldr	r3, [fp, #-8]
   2a868:	and	r3, r3, #2048	; 0x800
   2a86c:	cmp	r3, #0
   2a870:	beq	2a894 <__assert_fail@plt+0x181a8>
   2a874:	ldr	r3, [fp, #-8]
   2a878:	and	r3, r3, #64	; 0x40
   2a87c:	cmp	r3, #0
   2a880:	beq	2a88c <__assert_fail@plt+0x181a0>
   2a884:	mov	r3, #115	; 0x73
   2a888:	b	2a8b0 <__assert_fail@plt+0x181c4>
   2a88c:	mov	r3, #83	; 0x53
   2a890:	b	2a8b0 <__assert_fail@plt+0x181c4>
   2a894:	ldr	r3, [fp, #-8]
   2a898:	and	r3, r3, #64	; 0x40
   2a89c:	cmp	r3, #0
   2a8a0:	beq	2a8ac <__assert_fail@plt+0x181c0>
   2a8a4:	mov	r3, #120	; 0x78
   2a8a8:	b	2a8b0 <__assert_fail@plt+0x181c4>
   2a8ac:	mov	r3, #45	; 0x2d
   2a8b0:	strb	r3, [r2]
   2a8b4:	ldr	r3, [fp, #-12]
   2a8b8:	add	r3, r3, #4
   2a8bc:	ldr	r2, [fp, #-8]
   2a8c0:	and	r2, r2, #32
   2a8c4:	cmp	r2, #0
   2a8c8:	beq	2a8d4 <__assert_fail@plt+0x181e8>
   2a8cc:	mov	r2, #114	; 0x72
   2a8d0:	b	2a8d8 <__assert_fail@plt+0x181ec>
   2a8d4:	mov	r2, #45	; 0x2d
   2a8d8:	strb	r2, [r3]
   2a8dc:	ldr	r3, [fp, #-12]
   2a8e0:	add	r3, r3, #5
   2a8e4:	ldr	r2, [fp, #-8]
   2a8e8:	and	r2, r2, #16
   2a8ec:	cmp	r2, #0
   2a8f0:	beq	2a8fc <__assert_fail@plt+0x18210>
   2a8f4:	mov	r2, #119	; 0x77
   2a8f8:	b	2a900 <__assert_fail@plt+0x18214>
   2a8fc:	mov	r2, #45	; 0x2d
   2a900:	strb	r2, [r3]
   2a904:	ldr	r3, [fp, #-12]
   2a908:	add	r2, r3, #6
   2a90c:	ldr	r3, [fp, #-8]
   2a910:	and	r3, r3, #1024	; 0x400
   2a914:	cmp	r3, #0
   2a918:	beq	2a93c <__assert_fail@plt+0x18250>
   2a91c:	ldr	r3, [fp, #-8]
   2a920:	and	r3, r3, #8
   2a924:	cmp	r3, #0
   2a928:	beq	2a934 <__assert_fail@plt+0x18248>
   2a92c:	mov	r3, #115	; 0x73
   2a930:	b	2a958 <__assert_fail@plt+0x1826c>
   2a934:	mov	r3, #83	; 0x53
   2a938:	b	2a958 <__assert_fail@plt+0x1826c>
   2a93c:	ldr	r3, [fp, #-8]
   2a940:	and	r3, r3, #8
   2a944:	cmp	r3, #0
   2a948:	beq	2a954 <__assert_fail@plt+0x18268>
   2a94c:	mov	r3, #120	; 0x78
   2a950:	b	2a958 <__assert_fail@plt+0x1826c>
   2a954:	mov	r3, #45	; 0x2d
   2a958:	strb	r3, [r2]
   2a95c:	ldr	r3, [fp, #-12]
   2a960:	add	r3, r3, #7
   2a964:	ldr	r2, [fp, #-8]
   2a968:	and	r2, r2, #4
   2a96c:	cmp	r2, #0
   2a970:	beq	2a97c <__assert_fail@plt+0x18290>
   2a974:	mov	r2, #114	; 0x72
   2a978:	b	2a980 <__assert_fail@plt+0x18294>
   2a97c:	mov	r2, #45	; 0x2d
   2a980:	strb	r2, [r3]
   2a984:	ldr	r3, [fp, #-12]
   2a988:	add	r3, r3, #8
   2a98c:	ldr	r2, [fp, #-8]
   2a990:	and	r2, r2, #2
   2a994:	cmp	r2, #0
   2a998:	beq	2a9a4 <__assert_fail@plt+0x182b8>
   2a99c:	mov	r2, #119	; 0x77
   2a9a0:	b	2a9a8 <__assert_fail@plt+0x182bc>
   2a9a4:	mov	r2, #45	; 0x2d
   2a9a8:	strb	r2, [r3]
   2a9ac:	ldr	r3, [fp, #-12]
   2a9b0:	add	r2, r3, #9
   2a9b4:	ldr	r3, [fp, #-8]
   2a9b8:	and	r3, r3, #512	; 0x200
   2a9bc:	cmp	r3, #0
   2a9c0:	beq	2a9e4 <__assert_fail@plt+0x182f8>
   2a9c4:	ldr	r3, [fp, #-8]
   2a9c8:	and	r3, r3, #1
   2a9cc:	cmp	r3, #0
   2a9d0:	beq	2a9dc <__assert_fail@plt+0x182f0>
   2a9d4:	mov	r3, #116	; 0x74
   2a9d8:	b	2aa00 <__assert_fail@plt+0x18314>
   2a9dc:	mov	r3, #84	; 0x54
   2a9e0:	b	2aa00 <__assert_fail@plt+0x18314>
   2a9e4:	ldr	r3, [fp, #-8]
   2a9e8:	and	r3, r3, #1
   2a9ec:	cmp	r3, #0
   2a9f0:	beq	2a9fc <__assert_fail@plt+0x18310>
   2a9f4:	mov	r3, #120	; 0x78
   2a9f8:	b	2aa00 <__assert_fail@plt+0x18314>
   2a9fc:	mov	r3, #45	; 0x2d
   2aa00:	strb	r3, [r2]
   2aa04:	ldr	r3, [fp, #-12]
   2aa08:	add	r3, r3, #10
   2aa0c:	mov	r2, #32
   2aa10:	strb	r2, [r3]
   2aa14:	ldr	r3, [fp, #-12]
   2aa18:	add	r3, r3, #11
   2aa1c:	mov	r2, #0
   2aa20:	strb	r2, [r3]
   2aa24:	nop			; (mov r0, r0)
   2aa28:	sub	sp, fp, #4
   2aa2c:	pop	{fp, pc}
   2aa30:	push	{fp, lr}
   2aa34:	add	fp, sp, #4
   2aa38:	sub	sp, sp, #8
   2aa3c:	str	r0, [fp, #-8]
   2aa40:	str	r1, [fp, #-12]
   2aa44:	ldr	r3, [fp, #-8]
   2aa48:	ldr	r3, [r3, #16]
   2aa4c:	ldr	r1, [fp, #-12]
   2aa50:	mov	r0, r3
   2aa54:	bl	2a7e0 <__assert_fail@plt+0x180f4>
   2aa58:	nop			; (mov r0, r0)
   2aa5c:	sub	sp, fp, #4
   2aa60:	pop	{fp, pc}
   2aa64:	push	{fp, lr}
   2aa68:	add	fp, sp, #4
   2aa6c:	sub	sp, sp, #32
   2aa70:	str	r0, [fp, #-32]	; 0xffffffe0
   2aa74:	str	r1, [fp, #-36]	; 0xffffffdc
   2aa78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aa7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2aa80:	bl	125e4 <fopen64@plt>
   2aa84:	str	r0, [fp, #-8]
   2aa88:	ldr	r3, [fp, #-8]
   2aa8c:	cmp	r3, #0
   2aa90:	beq	2ab60 <__assert_fail@plt+0x18474>
   2aa94:	ldr	r0, [fp, #-8]
   2aa98:	bl	12488 <fileno@plt>
   2aa9c:	str	r0, [fp, #-12]
   2aaa0:	ldr	r3, [fp, #-12]
   2aaa4:	cmp	r3, #0
   2aaa8:	blt	2ab60 <__assert_fail@plt+0x18474>
   2aaac:	ldr	r3, [fp, #-12]
   2aab0:	cmp	r3, #2
   2aab4:	bgt	2ab60 <__assert_fail@plt+0x18474>
   2aab8:	ldr	r0, [fp, #-12]
   2aabc:	bl	3c8e8 <__assert_fail@plt+0x2a1fc>
   2aac0:	str	r0, [fp, #-16]
   2aac4:	ldr	r3, [fp, #-16]
   2aac8:	cmp	r3, #0
   2aacc:	bge	2ab00 <__assert_fail@plt+0x18414>
   2aad0:	bl	12404 <__errno_location@plt>
   2aad4:	mov	r3, r0
   2aad8:	ldr	r3, [r3]
   2aadc:	str	r3, [fp, #-20]	; 0xffffffec
   2aae0:	ldr	r0, [fp, #-8]
   2aae4:	bl	124d0 <fclose@plt>
   2aae8:	bl	12404 <__errno_location@plt>
   2aaec:	mov	r2, r0
   2aaf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aaf4:	str	r3, [r2]
   2aaf8:	mov	r3, #0
   2aafc:	b	2ab64 <__assert_fail@plt+0x18478>
   2ab00:	ldr	r0, [fp, #-8]
   2ab04:	bl	124d0 <fclose@plt>
   2ab08:	mov	r3, r0
   2ab0c:	cmp	r3, #0
   2ab10:	bne	2ab30 <__assert_fail@plt+0x18444>
   2ab14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ab18:	ldr	r0, [fp, #-16]
   2ab1c:	bl	11f6c <fdopen@plt>
   2ab20:	str	r0, [fp, #-8]
   2ab24:	ldr	r3, [fp, #-8]
   2ab28:	cmp	r3, #0
   2ab2c:	bne	2ab60 <__assert_fail@plt+0x18474>
   2ab30:	bl	12404 <__errno_location@plt>
   2ab34:	mov	r3, r0
   2ab38:	ldr	r3, [r3]
   2ab3c:	str	r3, [fp, #-24]	; 0xffffffe8
   2ab40:	ldr	r0, [fp, #-16]
   2ab44:	bl	126a4 <close@plt>
   2ab48:	bl	12404 <__errno_location@plt>
   2ab4c:	mov	r2, r0
   2ab50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ab54:	str	r3, [r2]
   2ab58:	mov	r3, #0
   2ab5c:	b	2ab64 <__assert_fail@plt+0x18478>
   2ab60:	ldr	r3, [fp, #-8]
   2ab64:	mov	r0, r3
   2ab68:	sub	sp, fp, #4
   2ab6c:	pop	{fp, pc}
   2ab70:	push	{fp}		; (str fp, [sp, #-4]!)
   2ab74:	add	fp, sp, #0
   2ab78:	sub	sp, sp, #12
   2ab7c:	str	r0, [fp, #-8]
   2ab80:	ldr	r3, [fp, #-8]
   2ab84:	ldr	r3, [r3, #8]
   2ab88:	mov	r0, r3
   2ab8c:	add	sp, fp, #0
   2ab90:	pop	{fp}		; (ldr fp, [sp], #4)
   2ab94:	bx	lr
   2ab98:	push	{fp}		; (str fp, [sp, #-4]!)
   2ab9c:	add	fp, sp, #0
   2aba0:	sub	sp, sp, #12
   2aba4:	str	r0, [fp, #-8]
   2aba8:	ldr	r3, [fp, #-8]
   2abac:	ldr	r3, [r3, #12]
   2abb0:	mov	r0, r3
   2abb4:	add	sp, fp, #0
   2abb8:	pop	{fp}		; (ldr fp, [sp], #4)
   2abbc:	bx	lr
   2abc0:	push	{fp}		; (str fp, [sp, #-4]!)
   2abc4:	add	fp, sp, #0
   2abc8:	sub	sp, sp, #12
   2abcc:	str	r0, [fp, #-8]
   2abd0:	ldr	r3, [fp, #-8]
   2abd4:	ldr	r3, [r3, #16]
   2abd8:	mov	r0, r3
   2abdc:	add	sp, fp, #0
   2abe0:	pop	{fp}		; (ldr fp, [sp], #4)
   2abe4:	bx	lr
   2abe8:	push	{fp}		; (str fp, [sp, #-4]!)
   2abec:	add	fp, sp, #0
   2abf0:	sub	sp, sp, #28
   2abf4:	str	r0, [fp, #-24]	; 0xffffffe8
   2abf8:	mov	r3, #0
   2abfc:	str	r3, [fp, #-12]
   2ac00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac04:	ldr	r3, [r3]
   2ac08:	str	r3, [fp, #-8]
   2ac0c:	b	2ac7c <__assert_fail@plt+0x18590>
   2ac10:	ldr	r3, [fp, #-8]
   2ac14:	ldr	r3, [r3]
   2ac18:	cmp	r3, #0
   2ac1c:	beq	2ac70 <__assert_fail@plt+0x18584>
   2ac20:	ldr	r3, [fp, #-8]
   2ac24:	str	r3, [fp, #-16]
   2ac28:	mov	r3, #1
   2ac2c:	str	r3, [fp, #-20]	; 0xffffffec
   2ac30:	b	2ac40 <__assert_fail@plt+0x18554>
   2ac34:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ac38:	add	r3, r3, #1
   2ac3c:	str	r3, [fp, #-20]	; 0xffffffec
   2ac40:	ldr	r3, [fp, #-16]
   2ac44:	ldr	r3, [r3, #4]
   2ac48:	str	r3, [fp, #-16]
   2ac4c:	ldr	r3, [fp, #-16]
   2ac50:	cmp	r3, #0
   2ac54:	bne	2ac34 <__assert_fail@plt+0x18548>
   2ac58:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ac5c:	ldr	r3, [fp, #-12]
   2ac60:	cmp	r2, r3
   2ac64:	bls	2ac70 <__assert_fail@plt+0x18584>
   2ac68:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ac6c:	str	r3, [fp, #-12]
   2ac70:	ldr	r3, [fp, #-8]
   2ac74:	add	r3, r3, #8
   2ac78:	str	r3, [fp, #-8]
   2ac7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac80:	ldr	r2, [r3, #4]
   2ac84:	ldr	r3, [fp, #-8]
   2ac88:	cmp	r2, r3
   2ac8c:	bhi	2ac10 <__assert_fail@plt+0x18524>
   2ac90:	ldr	r3, [fp, #-12]
   2ac94:	mov	r0, r3
   2ac98:	add	sp, fp, #0
   2ac9c:	pop	{fp}		; (ldr fp, [sp], #4)
   2aca0:	bx	lr
   2aca4:	push	{fp}		; (str fp, [sp, #-4]!)
   2aca8:	add	fp, sp, #0
   2acac:	sub	sp, sp, #28
   2acb0:	str	r0, [fp, #-24]	; 0xffffffe8
   2acb4:	mov	r3, #0
   2acb8:	str	r3, [fp, #-12]
   2acbc:	mov	r3, #0
   2acc0:	str	r3, [fp, #-16]
   2acc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2acc8:	ldr	r3, [r3]
   2accc:	str	r3, [fp, #-8]
   2acd0:	b	2ad38 <__assert_fail@plt+0x1864c>
   2acd4:	ldr	r3, [fp, #-8]
   2acd8:	ldr	r3, [r3]
   2acdc:	cmp	r3, #0
   2ace0:	beq	2ad2c <__assert_fail@plt+0x18640>
   2ace4:	ldr	r3, [fp, #-8]
   2ace8:	str	r3, [fp, #-20]	; 0xffffffec
   2acec:	ldr	r3, [fp, #-12]
   2acf0:	add	r3, r3, #1
   2acf4:	str	r3, [fp, #-12]
   2acf8:	ldr	r3, [fp, #-16]
   2acfc:	add	r3, r3, #1
   2ad00:	str	r3, [fp, #-16]
   2ad04:	b	2ad14 <__assert_fail@plt+0x18628>
   2ad08:	ldr	r3, [fp, #-16]
   2ad0c:	add	r3, r3, #1
   2ad10:	str	r3, [fp, #-16]
   2ad14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ad18:	ldr	r3, [r3, #4]
   2ad1c:	str	r3, [fp, #-20]	; 0xffffffec
   2ad20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ad24:	cmp	r3, #0
   2ad28:	bne	2ad08 <__assert_fail@plt+0x1861c>
   2ad2c:	ldr	r3, [fp, #-8]
   2ad30:	add	r3, r3, #8
   2ad34:	str	r3, [fp, #-8]
   2ad38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad3c:	ldr	r2, [r3, #4]
   2ad40:	ldr	r3, [fp, #-8]
   2ad44:	cmp	r2, r3
   2ad48:	bhi	2acd4 <__assert_fail@plt+0x185e8>
   2ad4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad50:	ldr	r2, [r3, #12]
   2ad54:	ldr	r3, [fp, #-12]
   2ad58:	cmp	r2, r3
   2ad5c:	bne	2ad7c <__assert_fail@plt+0x18690>
   2ad60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad64:	ldr	r2, [r3, #16]
   2ad68:	ldr	r3, [fp, #-16]
   2ad6c:	cmp	r2, r3
   2ad70:	bne	2ad7c <__assert_fail@plt+0x18690>
   2ad74:	mov	r3, #1
   2ad78:	b	2ad80 <__assert_fail@plt+0x18694>
   2ad7c:	mov	r3, #0
   2ad80:	mov	r0, r3
   2ad84:	add	sp, fp, #0
   2ad88:	pop	{fp}		; (ldr fp, [sp], #4)
   2ad8c:	bx	lr
   2ad90:	push	{fp, lr}
   2ad94:	add	fp, sp, #4
   2ad98:	sub	sp, sp, #32
   2ad9c:	str	r0, [fp, #-24]	; 0xffffffe8
   2ada0:	str	r1, [fp, #-28]	; 0xffffffe4
   2ada4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ada8:	bl	2abc0 <__assert_fail@plt+0x184d4>
   2adac:	str	r0, [fp, #-8]
   2adb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adb4:	bl	2ab70 <__assert_fail@plt+0x18484>
   2adb8:	str	r0, [fp, #-12]
   2adbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adc0:	bl	2ab98 <__assert_fail@plt+0x184ac>
   2adc4:	str	r0, [fp, #-16]
   2adc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adcc:	bl	2abe8 <__assert_fail@plt+0x184fc>
   2add0:	str	r0, [fp, #-20]	; 0xffffffec
   2add4:	ldr	r2, [fp, #-8]
   2add8:	ldr	r1, [pc, #112]	; 2ae50 <__assert_fail@plt+0x18764>
   2addc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ade0:	bl	123f8 <fprintf@plt>
   2ade4:	ldr	r2, [fp, #-12]
   2ade8:	ldr	r1, [pc, #100]	; 2ae54 <__assert_fail@plt+0x18768>
   2adec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2adf0:	bl	123f8 <fprintf@plt>
   2adf4:	ldr	r3, [fp, #-16]
   2adf8:	vmov	s15, r3
   2adfc:	vcvt.f64.u32	d7, s15
   2ae00:	vldr	d6, [pc, #64]	; 2ae48 <__assert_fail@plt+0x1875c>
   2ae04:	vmul.f64	d5, d7, d6
   2ae08:	ldr	r3, [fp, #-12]
   2ae0c:	vmov	s15, r3
   2ae10:	vcvt.f64.u32	d6, s15
   2ae14:	vdiv.f64	d7, d5, d6
   2ae18:	vstr	d7, [sp]
   2ae1c:	ldr	r2, [fp, #-16]
   2ae20:	ldr	r1, [pc, #48]	; 2ae58 <__assert_fail@plt+0x1876c>
   2ae24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ae28:	bl	123f8 <fprintf@plt>
   2ae2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ae30:	ldr	r1, [pc, #36]	; 2ae5c <__assert_fail@plt+0x18770>
   2ae34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ae38:	bl	123f8 <fprintf@plt>
   2ae3c:	nop			; (mov r0, r0)
   2ae40:	sub	sp, fp, #4
   2ae44:	pop	{fp, pc}
   2ae48:	andeq	r0, r0, r0
   2ae4c:	subsmi	r0, r9, r0
   2ae50:	andeq	r8, r6, r0, lsl #17
   2ae54:	muleq	r6, r8, r8
   2ae58:			; <UNDEFINED> instruction: 0x000688b0
   2ae5c:	ldrdeq	r8, [r6], -r4
   2ae60:	push	{fp, lr}
   2ae64:	add	fp, sp, #4
   2ae68:	sub	sp, sp, #16
   2ae6c:	str	r0, [fp, #-16]
   2ae70:	str	r1, [fp, #-20]	; 0xffffffec
   2ae74:	ldr	r3, [fp, #-16]
   2ae78:	ldr	r3, [r3, #24]
   2ae7c:	ldr	r2, [fp, #-16]
   2ae80:	ldr	r2, [r2, #8]
   2ae84:	mov	r1, r2
   2ae88:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ae8c:	blx	r3
   2ae90:	str	r0, [fp, #-8]
   2ae94:	ldr	r3, [fp, #-16]
   2ae98:	ldr	r2, [r3, #8]
   2ae9c:	ldr	r3, [fp, #-8]
   2aea0:	cmp	r2, r3
   2aea4:	bhi	2aeac <__assert_fail@plt+0x187c0>
   2aea8:	bl	12698 <abort@plt>
   2aeac:	ldr	r3, [fp, #-16]
   2aeb0:	ldr	r2, [r3]
   2aeb4:	ldr	r3, [fp, #-8]
   2aeb8:	lsl	r3, r3, #3
   2aebc:	add	r3, r2, r3
   2aec0:	mov	r0, r3
   2aec4:	sub	sp, fp, #4
   2aec8:	pop	{fp, pc}
   2aecc:	push	{fp, lr}
   2aed0:	add	fp, sp, #4
   2aed4:	sub	sp, sp, #16
   2aed8:	str	r0, [fp, #-16]
   2aedc:	str	r1, [fp, #-20]	; 0xffffffec
   2aee0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2aee4:	ldr	r0, [fp, #-16]
   2aee8:	bl	2ae60 <__assert_fail@plt+0x18774>
   2aeec:	str	r0, [fp, #-12]
   2aef0:	ldr	r3, [fp, #-12]
   2aef4:	ldr	r3, [r3]
   2aef8:	cmp	r3, #0
   2aefc:	bne	2af08 <__assert_fail@plt+0x1881c>
   2af00:	mov	r3, #0
   2af04:	b	2af78 <__assert_fail@plt+0x1888c>
   2af08:	ldr	r3, [fp, #-12]
   2af0c:	str	r3, [fp, #-8]
   2af10:	b	2af68 <__assert_fail@plt+0x1887c>
   2af14:	ldr	r3, [fp, #-8]
   2af18:	ldr	r2, [r3]
   2af1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af20:	cmp	r2, r3
   2af24:	beq	2af50 <__assert_fail@plt+0x18864>
   2af28:	ldr	r3, [fp, #-16]
   2af2c:	ldr	r3, [r3, #28]
   2af30:	ldr	r2, [fp, #-8]
   2af34:	ldr	r2, [r2]
   2af38:	mov	r1, r2
   2af3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2af40:	blx	r3
   2af44:	mov	r3, r0
   2af48:	cmp	r3, #0
   2af4c:	beq	2af5c <__assert_fail@plt+0x18870>
   2af50:	ldr	r3, [fp, #-8]
   2af54:	ldr	r3, [r3]
   2af58:	b	2af78 <__assert_fail@plt+0x1888c>
   2af5c:	ldr	r3, [fp, #-8]
   2af60:	ldr	r3, [r3, #4]
   2af64:	str	r3, [fp, #-8]
   2af68:	ldr	r3, [fp, #-8]
   2af6c:	cmp	r3, #0
   2af70:	bne	2af14 <__assert_fail@plt+0x18828>
   2af74:	mov	r3, #0
   2af78:	mov	r0, r3
   2af7c:	sub	sp, fp, #4
   2af80:	pop	{fp, pc}
   2af84:	push	{fp, lr}
   2af88:	add	fp, sp, #4
   2af8c:	sub	sp, sp, #16
   2af90:	str	r0, [fp, #-16]
   2af94:	ldr	r3, [fp, #-16]
   2af98:	ldr	r3, [r3, #16]
   2af9c:	cmp	r3, #0
   2afa0:	bne	2afac <__assert_fail@plt+0x188c0>
   2afa4:	mov	r3, #0
   2afa8:	b	2affc <__assert_fail@plt+0x18910>
   2afac:	ldr	r3, [fp, #-16]
   2afb0:	ldr	r3, [r3]
   2afb4:	str	r3, [fp, #-8]
   2afb8:	ldr	r3, [fp, #-16]
   2afbc:	ldr	r2, [r3, #4]
   2afc0:	ldr	r3, [fp, #-8]
   2afc4:	cmp	r2, r3
   2afc8:	bhi	2afd0 <__assert_fail@plt+0x188e4>
   2afcc:	bl	12698 <abort@plt>
   2afd0:	ldr	r3, [fp, #-8]
   2afd4:	ldr	r3, [r3]
   2afd8:	cmp	r3, #0
   2afdc:	beq	2afec <__assert_fail@plt+0x18900>
   2afe0:	ldr	r3, [fp, #-8]
   2afe4:	ldr	r3, [r3]
   2afe8:	b	2affc <__assert_fail@plt+0x18910>
   2afec:	ldr	r3, [fp, #-8]
   2aff0:	add	r3, r3, #8
   2aff4:	str	r3, [fp, #-8]
   2aff8:	b	2afb8 <__assert_fail@plt+0x188cc>
   2affc:	mov	r0, r3
   2b000:	sub	sp, fp, #4
   2b004:	pop	{fp, pc}
   2b008:	push	{fp, lr}
   2b00c:	add	fp, sp, #4
   2b010:	sub	sp, sp, #16
   2b014:	str	r0, [fp, #-16]
   2b018:	str	r1, [fp, #-20]	; 0xffffffec
   2b01c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b020:	ldr	r0, [fp, #-16]
   2b024:	bl	2ae60 <__assert_fail@plt+0x18774>
   2b028:	str	r0, [fp, #-8]
   2b02c:	ldr	r3, [fp, #-8]
   2b030:	str	r3, [fp, #-12]
   2b034:	ldr	r3, [fp, #-12]
   2b038:	ldr	r2, [r3]
   2b03c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b040:	cmp	r2, r3
   2b044:	bne	2b068 <__assert_fail@plt+0x1897c>
   2b048:	ldr	r3, [fp, #-12]
   2b04c:	ldr	r3, [r3, #4]
   2b050:	cmp	r3, #0
   2b054:	beq	2b068 <__assert_fail@plt+0x1897c>
   2b058:	ldr	r3, [fp, #-12]
   2b05c:	ldr	r3, [r3, #4]
   2b060:	ldr	r3, [r3]
   2b064:	b	2b0c4 <__assert_fail@plt+0x189d8>
   2b068:	ldr	r3, [fp, #-12]
   2b06c:	ldr	r3, [r3, #4]
   2b070:	str	r3, [fp, #-12]
   2b074:	ldr	r3, [fp, #-12]
   2b078:	cmp	r3, #0
   2b07c:	bne	2b034 <__assert_fail@plt+0x18948>
   2b080:	b	2b0a0 <__assert_fail@plt+0x189b4>
   2b084:	ldr	r3, [fp, #-8]
   2b088:	ldr	r3, [r3]
   2b08c:	cmp	r3, #0
   2b090:	beq	2b0a0 <__assert_fail@plt+0x189b4>
   2b094:	ldr	r3, [fp, #-8]
   2b098:	ldr	r3, [r3]
   2b09c:	b	2b0c4 <__assert_fail@plt+0x189d8>
   2b0a0:	ldr	r3, [fp, #-8]
   2b0a4:	add	r3, r3, #8
   2b0a8:	str	r3, [fp, #-8]
   2b0ac:	ldr	r3, [fp, #-16]
   2b0b0:	ldr	r3, [r3, #4]
   2b0b4:	ldr	r2, [fp, #-8]
   2b0b8:	cmp	r2, r3
   2b0bc:	bcc	2b084 <__assert_fail@plt+0x18998>
   2b0c0:	mov	r3, #0
   2b0c4:	mov	r0, r3
   2b0c8:	sub	sp, fp, #4
   2b0cc:	pop	{fp, pc}
   2b0d0:	push	{fp}		; (str fp, [sp, #-4]!)
   2b0d4:	add	fp, sp, #0
   2b0d8:	sub	sp, sp, #36	; 0x24
   2b0dc:	str	r0, [fp, #-24]	; 0xffffffe8
   2b0e0:	str	r1, [fp, #-28]	; 0xffffffe4
   2b0e4:	str	r2, [fp, #-32]	; 0xffffffe0
   2b0e8:	mov	r3, #0
   2b0ec:	str	r3, [fp, #-8]
   2b0f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b0f4:	ldr	r3, [r3]
   2b0f8:	str	r3, [fp, #-12]
   2b0fc:	b	2b17c <__assert_fail@plt+0x18a90>
   2b100:	ldr	r3, [fp, #-12]
   2b104:	ldr	r3, [r3]
   2b108:	cmp	r3, #0
   2b10c:	beq	2b170 <__assert_fail@plt+0x18a84>
   2b110:	ldr	r3, [fp, #-12]
   2b114:	str	r3, [fp, #-16]
   2b118:	b	2b164 <__assert_fail@plt+0x18a78>
   2b11c:	ldr	r2, [fp, #-8]
   2b120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b124:	cmp	r2, r3
   2b128:	bcc	2b134 <__assert_fail@plt+0x18a48>
   2b12c:	ldr	r3, [fp, #-8]
   2b130:	b	2b194 <__assert_fail@plt+0x18aa8>
   2b134:	ldr	r3, [fp, #-8]
   2b138:	add	r2, r3, #1
   2b13c:	str	r2, [fp, #-8]
   2b140:	lsl	r3, r3, #2
   2b144:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b148:	add	r3, r2, r3
   2b14c:	ldr	r2, [fp, #-16]
   2b150:	ldr	r2, [r2]
   2b154:	str	r2, [r3]
   2b158:	ldr	r3, [fp, #-16]
   2b15c:	ldr	r3, [r3, #4]
   2b160:	str	r3, [fp, #-16]
   2b164:	ldr	r3, [fp, #-16]
   2b168:	cmp	r3, #0
   2b16c:	bne	2b11c <__assert_fail@plt+0x18a30>
   2b170:	ldr	r3, [fp, #-12]
   2b174:	add	r3, r3, #8
   2b178:	str	r3, [fp, #-12]
   2b17c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b180:	ldr	r2, [r3, #4]
   2b184:	ldr	r3, [fp, #-12]
   2b188:	cmp	r2, r3
   2b18c:	bhi	2b100 <__assert_fail@plt+0x18a14>
   2b190:	ldr	r3, [fp, #-8]
   2b194:	mov	r0, r3
   2b198:	add	sp, fp, #0
   2b19c:	pop	{fp}		; (ldr fp, [sp], #4)
   2b1a0:	bx	lr
   2b1a4:	push	{fp, lr}
   2b1a8:	add	fp, sp, #4
   2b1ac:	sub	sp, sp, #32
   2b1b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2b1b4:	str	r1, [fp, #-28]	; 0xffffffe4
   2b1b8:	str	r2, [fp, #-32]	; 0xffffffe0
   2b1bc:	mov	r3, #0
   2b1c0:	str	r3, [fp, #-8]
   2b1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b1c8:	ldr	r3, [r3]
   2b1cc:	str	r3, [fp, #-12]
   2b1d0:	b	2b254 <__assert_fail@plt+0x18b68>
   2b1d4:	ldr	r3, [fp, #-12]
   2b1d8:	ldr	r3, [r3]
   2b1dc:	cmp	r3, #0
   2b1e0:	beq	2b248 <__assert_fail@plt+0x18b5c>
   2b1e4:	ldr	r3, [fp, #-12]
   2b1e8:	str	r3, [fp, #-16]
   2b1ec:	b	2b23c <__assert_fail@plt+0x18b50>
   2b1f0:	ldr	r3, [fp, #-16]
   2b1f4:	ldr	r2, [r3]
   2b1f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b1fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b200:	mov	r0, r2
   2b204:	blx	r3
   2b208:	mov	r3, r0
   2b20c:	eor	r3, r3, #1
   2b210:	uxtb	r3, r3
   2b214:	cmp	r3, #0
   2b218:	beq	2b224 <__assert_fail@plt+0x18b38>
   2b21c:	ldr	r3, [fp, #-8]
   2b220:	b	2b26c <__assert_fail@plt+0x18b80>
   2b224:	ldr	r3, [fp, #-8]
   2b228:	add	r3, r3, #1
   2b22c:	str	r3, [fp, #-8]
   2b230:	ldr	r3, [fp, #-16]
   2b234:	ldr	r3, [r3, #4]
   2b238:	str	r3, [fp, #-16]
   2b23c:	ldr	r3, [fp, #-16]
   2b240:	cmp	r3, #0
   2b244:	bne	2b1f0 <__assert_fail@plt+0x18b04>
   2b248:	ldr	r3, [fp, #-12]
   2b24c:	add	r3, r3, #8
   2b250:	str	r3, [fp, #-12]
   2b254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b258:	ldr	r2, [r3, #4]
   2b25c:	ldr	r3, [fp, #-12]
   2b260:	cmp	r2, r3
   2b264:	bhi	2b1d4 <__assert_fail@plt+0x18ae8>
   2b268:	ldr	r3, [fp, #-8]
   2b26c:	mov	r0, r3
   2b270:	sub	sp, fp, #4
   2b274:	pop	{fp, pc}
   2b278:	push	{fp, lr}
   2b27c:	add	fp, sp, #4
   2b280:	sub	sp, sp, #16
   2b284:	str	r0, [fp, #-16]
   2b288:	str	r1, [fp, #-20]	; 0xffffffec
   2b28c:	mov	r3, #0
   2b290:	str	r3, [fp, #-8]
   2b294:	b	2b2d0 <__assert_fail@plt+0x18be4>
   2b298:	ldr	r2, [fp, #-8]
   2b29c:	mov	r3, r2
   2b2a0:	lsl	r3, r3, #5
   2b2a4:	sub	r2, r3, r2
   2b2a8:	ldrb	r3, [fp, #-9]
   2b2ac:	add	r3, r2, r3
   2b2b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b2b4:	mov	r0, r3
   2b2b8:	bl	63760 <__assert_fail@plt+0x51074>
   2b2bc:	mov	r3, r1
   2b2c0:	str	r3, [fp, #-8]
   2b2c4:	ldr	r3, [fp, #-16]
   2b2c8:	add	r3, r3, #1
   2b2cc:	str	r3, [fp, #-16]
   2b2d0:	ldr	r3, [fp, #-16]
   2b2d4:	ldrb	r3, [r3]
   2b2d8:	strb	r3, [fp, #-9]
   2b2dc:	ldrb	r3, [fp, #-9]
   2b2e0:	cmp	r3, #0
   2b2e4:	bne	2b298 <__assert_fail@plt+0x18bac>
   2b2e8:	ldr	r3, [fp, #-8]
   2b2ec:	mov	r0, r3
   2b2f0:	sub	sp, fp, #4
   2b2f4:	pop	{fp, pc}
   2b2f8:	push	{fp, lr}
   2b2fc:	add	fp, sp, #4
   2b300:	sub	sp, sp, #16
   2b304:	str	r0, [fp, #-16]
   2b308:	mov	r3, #3
   2b30c:	str	r3, [fp, #-8]
   2b310:	ldr	r3, [fp, #-8]
   2b314:	ldr	r2, [fp, #-8]
   2b318:	mul	r3, r2, r3
   2b31c:	str	r3, [fp, #-12]
   2b320:	b	2b350 <__assert_fail@plt+0x18c64>
   2b324:	ldr	r3, [fp, #-8]
   2b328:	add	r3, r3, #1
   2b32c:	str	r3, [fp, #-8]
   2b330:	ldr	r3, [fp, #-8]
   2b334:	lsl	r3, r3, #2
   2b338:	ldr	r2, [fp, #-12]
   2b33c:	add	r3, r2, r3
   2b340:	str	r3, [fp, #-12]
   2b344:	ldr	r3, [fp, #-8]
   2b348:	add	r3, r3, #1
   2b34c:	str	r3, [fp, #-8]
   2b350:	ldr	r2, [fp, #-12]
   2b354:	ldr	r3, [fp, #-16]
   2b358:	cmp	r2, r3
   2b35c:	bcs	2b37c <__assert_fail@plt+0x18c90>
   2b360:	ldr	r3, [fp, #-16]
   2b364:	ldr	r1, [fp, #-8]
   2b368:	mov	r0, r3
   2b36c:	bl	63760 <__assert_fail@plt+0x51074>
   2b370:	mov	r3, r1
   2b374:	cmp	r3, #0
   2b378:	bne	2b324 <__assert_fail@plt+0x18c38>
   2b37c:	ldr	r3, [fp, #-16]
   2b380:	ldr	r1, [fp, #-8]
   2b384:	mov	r0, r3
   2b388:	bl	63760 <__assert_fail@plt+0x51074>
   2b38c:	mov	r3, r1
   2b390:	cmp	r3, #0
   2b394:	movne	r3, #1
   2b398:	moveq	r3, #0
   2b39c:	uxtb	r3, r3
   2b3a0:	mov	r0, r3
   2b3a4:	sub	sp, fp, #4
   2b3a8:	pop	{fp, pc}
   2b3ac:	push	{fp, lr}
   2b3b0:	add	fp, sp, #4
   2b3b4:	sub	sp, sp, #8
   2b3b8:	str	r0, [fp, #-8]
   2b3bc:	ldr	r3, [fp, #-8]
   2b3c0:	cmp	r3, #9
   2b3c4:	bhi	2b3d0 <__assert_fail@plt+0x18ce4>
   2b3c8:	mov	r3, #10
   2b3cc:	str	r3, [fp, #-8]
   2b3d0:	ldr	r3, [fp, #-8]
   2b3d4:	orr	r3, r3, #1
   2b3d8:	str	r3, [fp, #-8]
   2b3dc:	b	2b3ec <__assert_fail@plt+0x18d00>
   2b3e0:	ldr	r3, [fp, #-8]
   2b3e4:	add	r3, r3, #2
   2b3e8:	str	r3, [fp, #-8]
   2b3ec:	ldr	r3, [fp, #-8]
   2b3f0:	cmn	r3, #1
   2b3f4:	beq	2b414 <__assert_fail@plt+0x18d28>
   2b3f8:	ldr	r0, [fp, #-8]
   2b3fc:	bl	2b2f8 <__assert_fail@plt+0x18c0c>
   2b400:	mov	r3, r0
   2b404:	eor	r3, r3, #1
   2b408:	uxtb	r3, r3
   2b40c:	cmp	r3, #0
   2b410:	bne	2b3e0 <__assert_fail@plt+0x18cf4>
   2b414:	ldr	r3, [fp, #-8]
   2b418:	mov	r0, r3
   2b41c:	sub	sp, fp, #4
   2b420:	pop	{fp, pc}
   2b424:	push	{fp, lr}
   2b428:	add	fp, sp, #4
   2b42c:	sub	sp, sp, #8
   2b430:	str	r0, [fp, #-8]
   2b434:	ldr	r3, [fp, #-8]
   2b438:	ldr	r2, [pc, #32]	; 2b460 <__assert_fail@plt+0x18d74>
   2b43c:	mov	ip, r3
   2b440:	mov	lr, r2
   2b444:	ldm	lr!, {r0, r1, r2, r3}
   2b448:	stmia	ip!, {r0, r1, r2, r3}
   2b44c:	ldr	r3, [lr]
   2b450:	str	r3, [ip]
   2b454:	nop			; (mov r0, r0)
   2b458:	sub	sp, fp, #4
   2b45c:	pop	{fp, pc}
   2b460:	andeq	r8, r6, ip, ror #16
   2b464:	push	{fp, lr}
   2b468:	add	fp, sp, #4
   2b46c:	sub	sp, sp, #16
   2b470:	str	r0, [fp, #-16]
   2b474:	str	r1, [fp, #-20]	; 0xffffffec
   2b478:	ldr	r3, [fp, #-16]
   2b47c:	mov	r1, #3
   2b480:	mov	r0, r3
   2b484:	bl	5efb0 <__assert_fail@plt+0x4c8c4>
   2b488:	str	r0, [fp, #-8]
   2b48c:	ldr	r3, [fp, #-8]
   2b490:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b494:	mov	r0, r3
   2b498:	bl	63760 <__assert_fail@plt+0x51074>
   2b49c:	mov	r3, r1
   2b4a0:	mov	r0, r3
   2b4a4:	sub	sp, fp, #4
   2b4a8:	pop	{fp, pc}
   2b4ac:	push	{fp}		; (str fp, [sp, #-4]!)
   2b4b0:	add	fp, sp, #0
   2b4b4:	sub	sp, sp, #12
   2b4b8:	str	r0, [fp, #-8]
   2b4bc:	str	r1, [fp, #-12]
   2b4c0:	ldr	r2, [fp, #-8]
   2b4c4:	ldr	r3, [fp, #-12]
   2b4c8:	cmp	r2, r3
   2b4cc:	moveq	r3, #1
   2b4d0:	movne	r3, #0
   2b4d4:	uxtb	r3, r3
   2b4d8:	mov	r0, r3
   2b4dc:	add	sp, fp, #0
   2b4e0:	pop	{fp}		; (ldr fp, [sp], #4)
   2b4e4:	bx	lr
   2b4e8:	push	{fp}		; (str fp, [sp, #-4]!)
   2b4ec:	add	fp, sp, #0
   2b4f0:	sub	sp, sp, #20
   2b4f4:	str	r0, [fp, #-16]
   2b4f8:	ldr	r3, [fp, #-16]
   2b4fc:	ldr	r3, [r3, #20]
   2b500:	str	r3, [fp, #-8]
   2b504:	ldr	r3, [fp, #-8]
   2b508:	ldr	r2, [pc, #268]	; 2b61c <__assert_fail@plt+0x18f30>
   2b50c:	cmp	r3, r2
   2b510:	bne	2b51c <__assert_fail@plt+0x18e30>
   2b514:	mov	r3, #1
   2b518:	b	2b608 <__assert_fail@plt+0x18f1c>
   2b51c:	ldr	r3, [pc, #252]	; 2b620 <__assert_fail@plt+0x18f34>
   2b520:	str	r3, [fp, #-12]
   2b524:	ldr	r3, [fp, #-8]
   2b528:	vldr	s14, [r3, #8]
   2b52c:	vldr	s15, [fp, #-12]
   2b530:	vcmpe.f32	s14, s15
   2b534:	vmrs	APSR_nzcv, fpscr
   2b538:	ble	2b5f8 <__assert_fail@plt+0x18f0c>
   2b53c:	ldr	r3, [fp, #-8]
   2b540:	vldr	s14, [r3, #8]
   2b544:	vldr	s13, [pc, #204]	; 2b618 <__assert_fail@plt+0x18f2c>
   2b548:	vldr	s15, [fp, #-12]
   2b54c:	vsub.f32	s15, s13, s15
   2b550:	vcmpe.f32	s14, s15
   2b554:	vmrs	APSR_nzcv, fpscr
   2b558:	bpl	2b5f8 <__assert_fail@plt+0x18f0c>
   2b55c:	vldr	s15, [fp, #-12]
   2b560:	vldr	s14, [pc, #176]	; 2b618 <__assert_fail@plt+0x18f2c>
   2b564:	vadd.f32	s14, s15, s14
   2b568:	ldr	r3, [fp, #-8]
   2b56c:	vldr	s15, [r3, #12]
   2b570:	vcmpe.f32	s14, s15
   2b574:	vmrs	APSR_nzcv, fpscr
   2b578:	bpl	2b5f8 <__assert_fail@plt+0x18f0c>
   2b57c:	ldr	r3, [fp, #-8]
   2b580:	vldr	s15, [r3]
   2b584:	vcmpe.f32	s15, #0.0
   2b588:	vmrs	APSR_nzcv, fpscr
   2b58c:	blt	2b5f8 <__assert_fail@plt+0x18f0c>
   2b590:	ldr	r3, [fp, #-8]
   2b594:	vldr	s14, [r3]
   2b598:	vldr	s15, [fp, #-12]
   2b59c:	vadd.f32	s14, s14, s15
   2b5a0:	ldr	r3, [fp, #-8]
   2b5a4:	vldr	s15, [r3, #4]
   2b5a8:	vcmpe.f32	s14, s15
   2b5ac:	vmrs	APSR_nzcv, fpscr
   2b5b0:	bpl	2b5f8 <__assert_fail@plt+0x18f0c>
   2b5b4:	ldr	r3, [fp, #-8]
   2b5b8:	vldr	s15, [r3, #4]
   2b5bc:	vldr	s14, [pc, #84]	; 2b618 <__assert_fail@plt+0x18f2c>
   2b5c0:	vcmpe.f32	s15, s14
   2b5c4:	vmrs	APSR_nzcv, fpscr
   2b5c8:	bhi	2b5f8 <__assert_fail@plt+0x18f0c>
   2b5cc:	ldr	r3, [fp, #-8]
   2b5d0:	vldr	s14, [r3]
   2b5d4:	vldr	s15, [fp, #-12]
   2b5d8:	vadd.f32	s14, s14, s15
   2b5dc:	ldr	r3, [fp, #-8]
   2b5e0:	vldr	s15, [r3, #8]
   2b5e4:	vcmpe.f32	s14, s15
   2b5e8:	vmrs	APSR_nzcv, fpscr
   2b5ec:	bpl	2b5f8 <__assert_fail@plt+0x18f0c>
   2b5f0:	mov	r3, #1
   2b5f4:	b	2b608 <__assert_fail@plt+0x18f1c>
   2b5f8:	ldr	r3, [fp, #-16]
   2b5fc:	ldr	r2, [pc, #24]	; 2b61c <__assert_fail@plt+0x18f30>
   2b600:	str	r2, [r3, #20]
   2b604:	mov	r3, #0
   2b608:	mov	r0, r3
   2b60c:	add	sp, fp, #0
   2b610:	pop	{fp}		; (ldr fp, [sp], #4)
   2b614:	bx	lr
   2b618:	svccc	0x00800000
   2b61c:	andeq	r8, r6, ip, ror #16
   2b620:	stclcc	12, cr12, [ip, #820]	; 0x334
   2b624:	push	{r4, r5, r6, r7, fp, lr}
   2b628:	add	fp, sp, #20
   2b62c:	sub	sp, sp, #16
   2b630:	str	r0, [fp, #-32]	; 0xffffffe0
   2b634:	str	r1, [fp, #-36]	; 0xffffffdc
   2b638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b63c:	ldrb	r3, [r3, #16]
   2b640:	eor	r3, r3, #1
   2b644:	uxtb	r3, r3
   2b648:	cmp	r3, #0
   2b64c:	beq	2b698 <__assert_fail@plt+0x18fac>
   2b650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b654:	vmov	s15, r3
   2b658:	vcvt.f32.u32	s13, s15
   2b65c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b660:	vldr	s14, [r3, #8]
   2b664:	vdiv.f32	s15, s13, s14
   2b668:	vstr	s15, [fp, #-24]	; 0xffffffe8
   2b66c:	vldr	s15, [fp, #-24]	; 0xffffffe8
   2b670:	vldr	s14, [pc, #156]	; 2b714 <__assert_fail@plt+0x19028>
   2b674:	vcmpe.f32	s15, s14
   2b678:	vmrs	APSR_nzcv, fpscr
   2b67c:	blt	2b688 <__assert_fail@plt+0x18f9c>
   2b680:	mov	r3, #0
   2b684:	b	2b708 <__assert_fail@plt+0x1901c>
   2b688:	vldr	s15, [fp, #-24]	; 0xffffffe8
   2b68c:	vcvt.u32.f32	s15, s15
   2b690:	vmov	r3, s15
   2b694:	str	r3, [fp, #-32]	; 0xffffffe0
   2b698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b69c:	bl	2b3ac <__assert_fail@plt+0x18cc0>
   2b6a0:	str	r0, [fp, #-32]	; 0xffffffe0
   2b6a4:	mov	r1, #0
   2b6a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b6ac:	mov	r2, r3
   2b6b0:	mov	r3, #0
   2b6b4:	lsl	r5, r3, #2
   2b6b8:	orr	r5, r5, r2, lsr #30
   2b6bc:	lsl	r4, r2, #2
   2b6c0:	mov	r6, r5
   2b6c4:	mov	r7, #0
   2b6c8:	cmp	r6, #0
   2b6cc:	beq	2b6d4 <__assert_fail@plt+0x18fe8>
   2b6d0:	mov	r1, #1
   2b6d4:	cmp	r4, #0
   2b6d8:	bge	2b6e0 <__assert_fail@plt+0x18ff4>
   2b6dc:	mov	r1, #1
   2b6e0:	mov	r3, r4
   2b6e4:	str	r3, [fp, #-28]	; 0xffffffe4
   2b6e8:	mov	r3, r1
   2b6ec:	and	r3, r3, #1
   2b6f0:	uxtb	r3, r3
   2b6f4:	cmp	r3, #0
   2b6f8:	beq	2b704 <__assert_fail@plt+0x19018>
   2b6fc:	mov	r3, #0
   2b700:	b	2b708 <__assert_fail@plt+0x1901c>
   2b704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b708:	mov	r0, r3
   2b70c:	sub	sp, fp, #20
   2b710:	pop	{r4, r5, r6, r7, fp, pc}
   2b714:	svcmi	0x00800000
   2b718:	push	{fp, lr}
   2b71c:	add	fp, sp, #4
   2b720:	sub	sp, sp, #24
   2b724:	str	r0, [fp, #-16]
   2b728:	str	r1, [fp, #-20]	; 0xffffffec
   2b72c:	str	r2, [fp, #-24]	; 0xffffffe8
   2b730:	str	r3, [fp, #-28]	; 0xffffffe4
   2b734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b738:	cmp	r3, #0
   2b73c:	bne	2b748 <__assert_fail@plt+0x1905c>
   2b740:	ldr	r3, [pc, #364]	; 2b8b4 <__assert_fail@plt+0x191c8>
   2b744:	str	r3, [fp, #-24]	; 0xffffffe8
   2b748:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b74c:	cmp	r3, #0
   2b750:	bne	2b75c <__assert_fail@plt+0x19070>
   2b754:	ldr	r3, [pc, #348]	; 2b8b8 <__assert_fail@plt+0x191cc>
   2b758:	str	r3, [fp, #-28]	; 0xffffffe4
   2b75c:	mov	r0, #40	; 0x28
   2b760:	bl	42ba8 <__assert_fail@plt+0x304bc>
   2b764:	mov	r3, r0
   2b768:	str	r3, [fp, #-8]
   2b76c:	ldr	r3, [fp, #-8]
   2b770:	cmp	r3, #0
   2b774:	bne	2b780 <__assert_fail@plt+0x19094>
   2b778:	mov	r3, #0
   2b77c:	b	2b8a8 <__assert_fail@plt+0x191bc>
   2b780:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b784:	cmp	r3, #0
   2b788:	bne	2b794 <__assert_fail@plt+0x190a8>
   2b78c:	ldr	r3, [pc, #296]	; 2b8bc <__assert_fail@plt+0x191d0>
   2b790:	str	r3, [fp, #-20]	; 0xffffffec
   2b794:	ldr	r3, [fp, #-8]
   2b798:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b79c:	str	r2, [r3, #20]
   2b7a0:	ldr	r0, [fp, #-8]
   2b7a4:	bl	2b4e8 <__assert_fail@plt+0x18dfc>
   2b7a8:	mov	r3, r0
   2b7ac:	eor	r3, r3, #1
   2b7b0:	uxtb	r3, r3
   2b7b4:	cmp	r3, #0
   2b7b8:	bne	2b888 <__assert_fail@plt+0x1919c>
   2b7bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b7c0:	ldr	r0, [fp, #-16]
   2b7c4:	bl	2b624 <__assert_fail@plt+0x18f38>
   2b7c8:	mov	r2, r0
   2b7cc:	ldr	r3, [fp, #-8]
   2b7d0:	str	r2, [r3, #8]
   2b7d4:	ldr	r3, [fp, #-8]
   2b7d8:	ldr	r3, [r3, #8]
   2b7dc:	cmp	r3, #0
   2b7e0:	beq	2b890 <__assert_fail@plt+0x191a4>
   2b7e4:	ldr	r3, [fp, #-8]
   2b7e8:	ldr	r3, [r3, #8]
   2b7ec:	mov	r1, #8
   2b7f0:	mov	r0, r3
   2b7f4:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   2b7f8:	mov	r3, r0
   2b7fc:	mov	r2, r3
   2b800:	ldr	r3, [fp, #-8]
   2b804:	str	r2, [r3]
   2b808:	ldr	r3, [fp, #-8]
   2b80c:	ldr	r3, [r3]
   2b810:	cmp	r3, #0
   2b814:	beq	2b898 <__assert_fail@plt+0x191ac>
   2b818:	ldr	r3, [fp, #-8]
   2b81c:	ldr	r2, [r3]
   2b820:	ldr	r3, [fp, #-8]
   2b824:	ldr	r3, [r3, #8]
   2b828:	lsl	r3, r3, #3
   2b82c:	add	r2, r2, r3
   2b830:	ldr	r3, [fp, #-8]
   2b834:	str	r2, [r3, #4]
   2b838:	ldr	r3, [fp, #-8]
   2b83c:	mov	r2, #0
   2b840:	str	r2, [r3, #12]
   2b844:	ldr	r3, [fp, #-8]
   2b848:	mov	r2, #0
   2b84c:	str	r2, [r3, #16]
   2b850:	ldr	r3, [fp, #-8]
   2b854:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b858:	str	r2, [r3, #24]
   2b85c:	ldr	r3, [fp, #-8]
   2b860:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b864:	str	r2, [r3, #28]
   2b868:	ldr	r3, [fp, #-8]
   2b86c:	ldr	r2, [fp, #4]
   2b870:	str	r2, [r3, #32]
   2b874:	ldr	r3, [fp, #-8]
   2b878:	mov	r2, #0
   2b87c:	str	r2, [r3, #36]	; 0x24
   2b880:	ldr	r3, [fp, #-8]
   2b884:	b	2b8a8 <__assert_fail@plt+0x191bc>
   2b888:	nop			; (mov r0, r0)
   2b88c:	b	2b89c <__assert_fail@plt+0x191b0>
   2b890:	nop			; (mov r0, r0)
   2b894:	b	2b89c <__assert_fail@plt+0x191b0>
   2b898:	nop			; (mov r0, r0)
   2b89c:	ldr	r0, [fp, #-8]
   2b8a0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2b8a4:	mov	r3, #0
   2b8a8:	mov	r0, r3
   2b8ac:	sub	sp, fp, #4
   2b8b0:	pop	{fp, pc}
   2b8b4:	andeq	fp, r2, r4, ror #8
   2b8b8:	andeq	fp, r2, ip, lsr #9
   2b8bc:	andeq	r8, r6, ip, ror #16
   2b8c0:	push	{fp, lr}
   2b8c4:	add	fp, sp, #4
   2b8c8:	sub	sp, sp, #24
   2b8cc:	str	r0, [fp, #-24]	; 0xffffffe8
   2b8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8d4:	ldr	r3, [r3]
   2b8d8:	str	r3, [fp, #-8]
   2b8dc:	b	2b9bc <__assert_fail@plt+0x192d0>
   2b8e0:	ldr	r3, [fp, #-8]
   2b8e4:	ldr	r3, [r3]
   2b8e8:	cmp	r3, #0
   2b8ec:	beq	2b9b0 <__assert_fail@plt+0x192c4>
   2b8f0:	ldr	r3, [fp, #-8]
   2b8f4:	ldr	r3, [r3, #4]
   2b8f8:	str	r3, [fp, #-12]
   2b8fc:	b	2b964 <__assert_fail@plt+0x19278>
   2b900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b904:	ldr	r3, [r3, #32]
   2b908:	cmp	r3, #0
   2b90c:	beq	2b928 <__assert_fail@plt+0x1923c>
   2b910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b914:	ldr	r3, [r3, #32]
   2b918:	ldr	r2, [fp, #-12]
   2b91c:	ldr	r2, [r2]
   2b920:	mov	r0, r2
   2b924:	blx	r3
   2b928:	ldr	r3, [fp, #-12]
   2b92c:	mov	r2, #0
   2b930:	str	r2, [r3]
   2b934:	ldr	r3, [fp, #-12]
   2b938:	ldr	r3, [r3, #4]
   2b93c:	str	r3, [fp, #-16]
   2b940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b944:	ldr	r2, [r3, #36]	; 0x24
   2b948:	ldr	r3, [fp, #-12]
   2b94c:	str	r2, [r3, #4]
   2b950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b954:	ldr	r2, [fp, #-12]
   2b958:	str	r2, [r3, #36]	; 0x24
   2b95c:	ldr	r3, [fp, #-16]
   2b960:	str	r3, [fp, #-12]
   2b964:	ldr	r3, [fp, #-12]
   2b968:	cmp	r3, #0
   2b96c:	bne	2b900 <__assert_fail@plt+0x19214>
   2b970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b974:	ldr	r3, [r3, #32]
   2b978:	cmp	r3, #0
   2b97c:	beq	2b998 <__assert_fail@plt+0x192ac>
   2b980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b984:	ldr	r3, [r3, #32]
   2b988:	ldr	r2, [fp, #-8]
   2b98c:	ldr	r2, [r2]
   2b990:	mov	r0, r2
   2b994:	blx	r3
   2b998:	ldr	r3, [fp, #-8]
   2b99c:	mov	r2, #0
   2b9a0:	str	r2, [r3]
   2b9a4:	ldr	r3, [fp, #-8]
   2b9a8:	mov	r2, #0
   2b9ac:	str	r2, [r3, #4]
   2b9b0:	ldr	r3, [fp, #-8]
   2b9b4:	add	r3, r3, #8
   2b9b8:	str	r3, [fp, #-8]
   2b9bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9c0:	ldr	r2, [r3, #4]
   2b9c4:	ldr	r3, [fp, #-8]
   2b9c8:	cmp	r2, r3
   2b9cc:	bhi	2b8e0 <__assert_fail@plt+0x191f4>
   2b9d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9d4:	mov	r2, #0
   2b9d8:	str	r2, [r3, #12]
   2b9dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9e0:	mov	r2, #0
   2b9e4:	str	r2, [r3, #16]
   2b9e8:	nop			; (mov r0, r0)
   2b9ec:	sub	sp, fp, #4
   2b9f0:	pop	{fp, pc}
   2b9f4:	push	{fp, lr}
   2b9f8:	add	fp, sp, #4
   2b9fc:	sub	sp, sp, #24
   2ba00:	str	r0, [fp, #-24]	; 0xffffffe8
   2ba04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba08:	ldr	r3, [r3, #32]
   2ba0c:	cmp	r3, #0
   2ba10:	beq	2baa0 <__assert_fail@plt+0x193b4>
   2ba14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba18:	ldr	r3, [r3, #16]
   2ba1c:	cmp	r3, #0
   2ba20:	beq	2baa0 <__assert_fail@plt+0x193b4>
   2ba24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba28:	ldr	r3, [r3]
   2ba2c:	str	r3, [fp, #-8]
   2ba30:	b	2ba8c <__assert_fail@plt+0x193a0>
   2ba34:	ldr	r3, [fp, #-8]
   2ba38:	ldr	r3, [r3]
   2ba3c:	cmp	r3, #0
   2ba40:	beq	2ba80 <__assert_fail@plt+0x19394>
   2ba44:	ldr	r3, [fp, #-8]
   2ba48:	str	r3, [fp, #-12]
   2ba4c:	b	2ba74 <__assert_fail@plt+0x19388>
   2ba50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba54:	ldr	r3, [r3, #32]
   2ba58:	ldr	r2, [fp, #-12]
   2ba5c:	ldr	r2, [r2]
   2ba60:	mov	r0, r2
   2ba64:	blx	r3
   2ba68:	ldr	r3, [fp, #-12]
   2ba6c:	ldr	r3, [r3, #4]
   2ba70:	str	r3, [fp, #-12]
   2ba74:	ldr	r3, [fp, #-12]
   2ba78:	cmp	r3, #0
   2ba7c:	bne	2ba50 <__assert_fail@plt+0x19364>
   2ba80:	ldr	r3, [fp, #-8]
   2ba84:	add	r3, r3, #8
   2ba88:	str	r3, [fp, #-8]
   2ba8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba90:	ldr	r2, [r3, #4]
   2ba94:	ldr	r3, [fp, #-8]
   2ba98:	cmp	r2, r3
   2ba9c:	bhi	2ba34 <__assert_fail@plt+0x19348>
   2baa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2baa4:	ldr	r3, [r3]
   2baa8:	str	r3, [fp, #-8]
   2baac:	b	2baf4 <__assert_fail@plt+0x19408>
   2bab0:	ldr	r3, [fp, #-8]
   2bab4:	ldr	r3, [r3, #4]
   2bab8:	str	r3, [fp, #-12]
   2babc:	b	2badc <__assert_fail@plt+0x193f0>
   2bac0:	ldr	r3, [fp, #-12]
   2bac4:	ldr	r3, [r3, #4]
   2bac8:	str	r3, [fp, #-16]
   2bacc:	ldr	r0, [fp, #-12]
   2bad0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2bad4:	ldr	r3, [fp, #-16]
   2bad8:	str	r3, [fp, #-12]
   2badc:	ldr	r3, [fp, #-12]
   2bae0:	cmp	r3, #0
   2bae4:	bne	2bac0 <__assert_fail@plt+0x193d4>
   2bae8:	ldr	r3, [fp, #-8]
   2baec:	add	r3, r3, #8
   2baf0:	str	r3, [fp, #-8]
   2baf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2baf8:	ldr	r2, [r3, #4]
   2bafc:	ldr	r3, [fp, #-8]
   2bb00:	cmp	r2, r3
   2bb04:	bhi	2bab0 <__assert_fail@plt+0x193c4>
   2bb08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb0c:	ldr	r3, [r3, #36]	; 0x24
   2bb10:	str	r3, [fp, #-12]
   2bb14:	b	2bb34 <__assert_fail@plt+0x19448>
   2bb18:	ldr	r3, [fp, #-12]
   2bb1c:	ldr	r3, [r3, #4]
   2bb20:	str	r3, [fp, #-16]
   2bb24:	ldr	r0, [fp, #-12]
   2bb28:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2bb2c:	ldr	r3, [fp, #-16]
   2bb30:	str	r3, [fp, #-12]
   2bb34:	ldr	r3, [fp, #-12]
   2bb38:	cmp	r3, #0
   2bb3c:	bne	2bb18 <__assert_fail@plt+0x1942c>
   2bb40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb44:	ldr	r3, [r3]
   2bb48:	mov	r0, r3
   2bb4c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2bb50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bb54:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2bb58:	nop			; (mov r0, r0)
   2bb5c:	sub	sp, fp, #4
   2bb60:	pop	{fp, pc}
   2bb64:	push	{fp, lr}
   2bb68:	add	fp, sp, #4
   2bb6c:	sub	sp, sp, #16
   2bb70:	str	r0, [fp, #-16]
   2bb74:	ldr	r3, [fp, #-16]
   2bb78:	ldr	r3, [r3, #36]	; 0x24
   2bb7c:	cmp	r3, #0
   2bb80:	beq	2bba4 <__assert_fail@plt+0x194b8>
   2bb84:	ldr	r3, [fp, #-16]
   2bb88:	ldr	r3, [r3, #36]	; 0x24
   2bb8c:	str	r3, [fp, #-8]
   2bb90:	ldr	r3, [fp, #-8]
   2bb94:	ldr	r2, [r3, #4]
   2bb98:	ldr	r3, [fp, #-16]
   2bb9c:	str	r2, [r3, #36]	; 0x24
   2bba0:	b	2bbb4 <__assert_fail@plt+0x194c8>
   2bba4:	mov	r0, #8
   2bba8:	bl	42ba8 <__assert_fail@plt+0x304bc>
   2bbac:	mov	r3, r0
   2bbb0:	str	r3, [fp, #-8]
   2bbb4:	ldr	r3, [fp, #-8]
   2bbb8:	mov	r0, r3
   2bbbc:	sub	sp, fp, #4
   2bbc0:	pop	{fp, pc}
   2bbc4:	push	{fp}		; (str fp, [sp, #-4]!)
   2bbc8:	add	fp, sp, #0
   2bbcc:	sub	sp, sp, #12
   2bbd0:	str	r0, [fp, #-8]
   2bbd4:	str	r1, [fp, #-12]
   2bbd8:	ldr	r3, [fp, #-12]
   2bbdc:	mov	r2, #0
   2bbe0:	str	r2, [r3]
   2bbe4:	ldr	r3, [fp, #-8]
   2bbe8:	ldr	r2, [r3, #36]	; 0x24
   2bbec:	ldr	r3, [fp, #-12]
   2bbf0:	str	r2, [r3, #4]
   2bbf4:	ldr	r3, [fp, #-8]
   2bbf8:	ldr	r2, [fp, #-12]
   2bbfc:	str	r2, [r3, #36]	; 0x24
   2bc00:	nop			; (mov r0, r0)
   2bc04:	add	sp, fp, #0
   2bc08:	pop	{fp}		; (ldr fp, [sp], #4)
   2bc0c:	bx	lr
   2bc10:	push	{fp, lr}
   2bc14:	add	fp, sp, #4
   2bc18:	sub	sp, sp, #40	; 0x28
   2bc1c:	str	r0, [fp, #-32]	; 0xffffffe0
   2bc20:	str	r1, [fp, #-36]	; 0xffffffdc
   2bc24:	str	r2, [fp, #-40]	; 0xffffffd8
   2bc28:	strb	r3, [fp, #-41]	; 0xffffffd7
   2bc2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bc30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bc34:	bl	2ae60 <__assert_fail@plt+0x18774>
   2bc38:	str	r0, [fp, #-12]
   2bc3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bc40:	ldr	r2, [fp, #-12]
   2bc44:	str	r2, [r3]
   2bc48:	ldr	r3, [fp, #-12]
   2bc4c:	ldr	r3, [r3]
   2bc50:	cmp	r3, #0
   2bc54:	bne	2bc60 <__assert_fail@plt+0x19574>
   2bc58:	mov	r3, #0
   2bc5c:	b	2bdc0 <__assert_fail@plt+0x196d4>
   2bc60:	ldr	r3, [fp, #-12]
   2bc64:	ldr	r2, [r3]
   2bc68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bc6c:	cmp	r2, r3
   2bc70:	beq	2bc9c <__assert_fail@plt+0x195b0>
   2bc74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bc78:	ldr	r3, [r3, #28]
   2bc7c:	ldr	r2, [fp, #-12]
   2bc80:	ldr	r2, [r2]
   2bc84:	mov	r1, r2
   2bc88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bc8c:	blx	r3
   2bc90:	mov	r3, r0
   2bc94:	cmp	r3, #0
   2bc98:	beq	2bd04 <__assert_fail@plt+0x19618>
   2bc9c:	ldr	r3, [fp, #-12]
   2bca0:	ldr	r3, [r3]
   2bca4:	str	r3, [fp, #-24]	; 0xffffffe8
   2bca8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2bcac:	cmp	r3, #0
   2bcb0:	beq	2bcfc <__assert_fail@plt+0x19610>
   2bcb4:	ldr	r3, [fp, #-12]
   2bcb8:	ldr	r3, [r3, #4]
   2bcbc:	cmp	r3, #0
   2bcc0:	beq	2bcf0 <__assert_fail@plt+0x19604>
   2bcc4:	ldr	r3, [fp, #-12]
   2bcc8:	ldr	r3, [r3, #4]
   2bccc:	str	r3, [fp, #-28]	; 0xffffffe4
   2bcd0:	ldr	r3, [fp, #-12]
   2bcd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bcd8:	ldm	r2, {r0, r1}
   2bcdc:	stm	r3, {r0, r1}
   2bce0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bce4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bce8:	bl	2bbc4 <__assert_fail@plt+0x194d8>
   2bcec:	b	2bcfc <__assert_fail@plt+0x19610>
   2bcf0:	ldr	r3, [fp, #-12]
   2bcf4:	mov	r2, #0
   2bcf8:	str	r2, [r3]
   2bcfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bd00:	b	2bdc0 <__assert_fail@plt+0x196d4>
   2bd04:	ldr	r3, [fp, #-12]
   2bd08:	str	r3, [fp, #-8]
   2bd0c:	b	2bdac <__assert_fail@plt+0x196c0>
   2bd10:	ldr	r3, [fp, #-8]
   2bd14:	ldr	r3, [r3, #4]
   2bd18:	ldr	r2, [r3]
   2bd1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bd20:	cmp	r2, r3
   2bd24:	beq	2bd54 <__assert_fail@plt+0x19668>
   2bd28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bd2c:	ldr	r3, [r3, #28]
   2bd30:	ldr	r2, [fp, #-8]
   2bd34:	ldr	r2, [r2, #4]
   2bd38:	ldr	r2, [r2]
   2bd3c:	mov	r1, r2
   2bd40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bd44:	blx	r3
   2bd48:	mov	r3, r0
   2bd4c:	cmp	r3, #0
   2bd50:	beq	2bda0 <__assert_fail@plt+0x196b4>
   2bd54:	ldr	r3, [fp, #-8]
   2bd58:	ldr	r3, [r3, #4]
   2bd5c:	ldr	r3, [r3]
   2bd60:	str	r3, [fp, #-16]
   2bd64:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2bd68:	cmp	r3, #0
   2bd6c:	beq	2bd98 <__assert_fail@plt+0x196ac>
   2bd70:	ldr	r3, [fp, #-8]
   2bd74:	ldr	r3, [r3, #4]
   2bd78:	str	r3, [fp, #-20]	; 0xffffffec
   2bd7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd80:	ldr	r2, [r3, #4]
   2bd84:	ldr	r3, [fp, #-8]
   2bd88:	str	r2, [r3, #4]
   2bd8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bd90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bd94:	bl	2bbc4 <__assert_fail@plt+0x194d8>
   2bd98:	ldr	r3, [fp, #-16]
   2bd9c:	b	2bdc0 <__assert_fail@plt+0x196d4>
   2bda0:	ldr	r3, [fp, #-8]
   2bda4:	ldr	r3, [r3, #4]
   2bda8:	str	r3, [fp, #-8]
   2bdac:	ldr	r3, [fp, #-8]
   2bdb0:	ldr	r3, [r3, #4]
   2bdb4:	cmp	r3, #0
   2bdb8:	bne	2bd10 <__assert_fail@plt+0x19624>
   2bdbc:	mov	r3, #0
   2bdc0:	mov	r0, r3
   2bdc4:	sub	sp, fp, #4
   2bdc8:	pop	{fp, pc}
   2bdcc:	push	{fp, lr}
   2bdd0:	add	fp, sp, #4
   2bdd4:	sub	sp, sp, #40	; 0x28
   2bdd8:	str	r0, [fp, #-32]	; 0xffffffe0
   2bddc:	str	r1, [fp, #-36]	; 0xffffffdc
   2bde0:	mov	r3, r2
   2bde4:	strb	r3, [fp, #-37]	; 0xffffffdb
   2bde8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bdec:	ldr	r3, [r3]
   2bdf0:	str	r3, [fp, #-8]
   2bdf4:	b	2bf94 <__assert_fail@plt+0x198a8>
   2bdf8:	ldr	r3, [fp, #-8]
   2bdfc:	ldr	r3, [r3]
   2be00:	cmp	r3, #0
   2be04:	beq	2bf88 <__assert_fail@plt+0x1989c>
   2be08:	ldr	r3, [fp, #-8]
   2be0c:	ldr	r3, [r3, #4]
   2be10:	str	r3, [fp, #-12]
   2be14:	b	2bea4 <__assert_fail@plt+0x197b8>
   2be18:	ldr	r3, [fp, #-12]
   2be1c:	ldr	r3, [r3]
   2be20:	str	r3, [fp, #-16]
   2be24:	ldr	r1, [fp, #-16]
   2be28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be2c:	bl	2ae60 <__assert_fail@plt+0x18774>
   2be30:	str	r0, [fp, #-20]	; 0xffffffec
   2be34:	ldr	r3, [fp, #-12]
   2be38:	ldr	r3, [r3, #4]
   2be3c:	str	r3, [fp, #-24]	; 0xffffffe8
   2be40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be44:	ldr	r3, [r3]
   2be48:	cmp	r3, #0
   2be4c:	beq	2be70 <__assert_fail@plt+0x19784>
   2be50:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be54:	ldr	r2, [r3, #4]
   2be58:	ldr	r3, [fp, #-12]
   2be5c:	str	r2, [r3, #4]
   2be60:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be64:	ldr	r2, [fp, #-12]
   2be68:	str	r2, [r3, #4]
   2be6c:	b	2be9c <__assert_fail@plt+0x197b0>
   2be70:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be74:	ldr	r2, [fp, #-16]
   2be78:	str	r2, [r3]
   2be7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2be80:	ldr	r3, [r3, #12]
   2be84:	add	r2, r3, #1
   2be88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2be8c:	str	r2, [r3, #12]
   2be90:	ldr	r1, [fp, #-12]
   2be94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be98:	bl	2bbc4 <__assert_fail@plt+0x194d8>
   2be9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bea0:	str	r3, [fp, #-12]
   2bea4:	ldr	r3, [fp, #-12]
   2bea8:	cmp	r3, #0
   2beac:	bne	2be18 <__assert_fail@plt+0x1972c>
   2beb0:	ldr	r3, [fp, #-8]
   2beb4:	ldr	r3, [r3]
   2beb8:	str	r3, [fp, #-16]
   2bebc:	ldr	r3, [fp, #-8]
   2bec0:	mov	r2, #0
   2bec4:	str	r2, [r3, #4]
   2bec8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   2becc:	cmp	r3, #0
   2bed0:	bne	2bf84 <__assert_fail@plt+0x19898>
   2bed4:	ldr	r1, [fp, #-16]
   2bed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bedc:	bl	2ae60 <__assert_fail@plt+0x18774>
   2bee0:	str	r0, [fp, #-20]	; 0xffffffec
   2bee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bee8:	ldr	r3, [r3]
   2beec:	cmp	r3, #0
   2bef0:	beq	2bf40 <__assert_fail@plt+0x19854>
   2bef4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bef8:	bl	2bb64 <__assert_fail@plt+0x19478>
   2befc:	str	r0, [fp, #-28]	; 0xffffffe4
   2bf00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bf04:	cmp	r3, #0
   2bf08:	bne	2bf14 <__assert_fail@plt+0x19828>
   2bf0c:	mov	r3, #0
   2bf10:	b	2bfac <__assert_fail@plt+0x198c0>
   2bf14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bf18:	ldr	r2, [fp, #-16]
   2bf1c:	str	r2, [r3]
   2bf20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bf24:	ldr	r2, [r3, #4]
   2bf28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bf2c:	str	r2, [r3, #4]
   2bf30:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bf34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bf38:	str	r2, [r3, #4]
   2bf3c:	b	2bf60 <__assert_fail@plt+0x19874>
   2bf40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bf44:	ldr	r2, [fp, #-16]
   2bf48:	str	r2, [r3]
   2bf4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bf50:	ldr	r3, [r3, #12]
   2bf54:	add	r2, r3, #1
   2bf58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bf5c:	str	r2, [r3, #12]
   2bf60:	ldr	r3, [fp, #-8]
   2bf64:	mov	r2, #0
   2bf68:	str	r2, [r3]
   2bf6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bf70:	ldr	r3, [r3, #12]
   2bf74:	sub	r2, r3, #1
   2bf78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bf7c:	str	r2, [r3, #12]
   2bf80:	b	2bf88 <__assert_fail@plt+0x1989c>
   2bf84:	nop			; (mov r0, r0)
   2bf88:	ldr	r3, [fp, #-8]
   2bf8c:	add	r3, r3, #8
   2bf90:	str	r3, [fp, #-8]
   2bf94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bf98:	ldr	r2, [r3, #4]
   2bf9c:	ldr	r3, [fp, #-8]
   2bfa0:	cmp	r2, r3
   2bfa4:	bhi	2bdf8 <__assert_fail@plt+0x1970c>
   2bfa8:	mov	r3, #1
   2bfac:	mov	r0, r3
   2bfb0:	sub	sp, fp, #4
   2bfb4:	pop	{fp, pc}
   2bfb8:	push	{fp, lr}
   2bfbc:	add	fp, sp, #4
   2bfc0:	sub	sp, sp, #56	; 0x38
   2bfc4:	str	r0, [fp, #-56]	; 0xffffffc8
   2bfc8:	str	r1, [fp, #-60]	; 0xffffffc4
   2bfcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bfd0:	ldr	r3, [r3, #20]
   2bfd4:	mov	r1, r3
   2bfd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2bfdc:	bl	2b624 <__assert_fail@plt+0x18f38>
   2bfe0:	str	r0, [fp, #-8]
   2bfe4:	ldr	r3, [fp, #-8]
   2bfe8:	cmp	r3, #0
   2bfec:	bne	2bff8 <__assert_fail@plt+0x1990c>
   2bff0:	mov	r3, #0
   2bff4:	b	2c1d4 <__assert_fail@plt+0x19ae8>
   2bff8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bffc:	ldr	r2, [r3, #8]
   2c000:	ldr	r3, [fp, #-8]
   2c004:	cmp	r2, r3
   2c008:	bne	2c014 <__assert_fail@plt+0x19928>
   2c00c:	mov	r3, #1
   2c010:	b	2c1d4 <__assert_fail@plt+0x19ae8>
   2c014:	sub	r3, fp, #52	; 0x34
   2c018:	str	r3, [fp, #-12]
   2c01c:	mov	r1, #8
   2c020:	ldr	r0, [fp, #-8]
   2c024:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   2c028:	mov	r3, r0
   2c02c:	mov	r2, r3
   2c030:	ldr	r3, [fp, #-12]
   2c034:	str	r2, [r3]
   2c038:	ldr	r3, [fp, #-12]
   2c03c:	ldr	r3, [r3]
   2c040:	cmp	r3, #0
   2c044:	bne	2c050 <__assert_fail@plt+0x19964>
   2c048:	mov	r3, #0
   2c04c:	b	2c1d4 <__assert_fail@plt+0x19ae8>
   2c050:	ldr	r3, [fp, #-12]
   2c054:	ldr	r2, [fp, #-8]
   2c058:	str	r2, [r3, #8]
   2c05c:	ldr	r3, [fp, #-12]
   2c060:	ldr	r2, [r3]
   2c064:	ldr	r3, [fp, #-8]
   2c068:	lsl	r3, r3, #3
   2c06c:	add	r2, r2, r3
   2c070:	ldr	r3, [fp, #-12]
   2c074:	str	r2, [r3, #4]
   2c078:	ldr	r3, [fp, #-12]
   2c07c:	mov	r2, #0
   2c080:	str	r2, [r3, #12]
   2c084:	ldr	r3, [fp, #-12]
   2c088:	mov	r2, #0
   2c08c:	str	r2, [r3, #16]
   2c090:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c094:	ldr	r2, [r3, #20]
   2c098:	ldr	r3, [fp, #-12]
   2c09c:	str	r2, [r3, #20]
   2c0a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c0a4:	ldr	r2, [r3, #24]
   2c0a8:	ldr	r3, [fp, #-12]
   2c0ac:	str	r2, [r3, #24]
   2c0b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c0b4:	ldr	r2, [r3, #28]
   2c0b8:	ldr	r3, [fp, #-12]
   2c0bc:	str	r2, [r3, #28]
   2c0c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c0c4:	ldr	r2, [r3, #32]
   2c0c8:	ldr	r3, [fp, #-12]
   2c0cc:	str	r2, [r3, #32]
   2c0d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c0d4:	ldr	r2, [r3, #36]	; 0x24
   2c0d8:	ldr	r3, [fp, #-12]
   2c0dc:	str	r2, [r3, #36]	; 0x24
   2c0e0:	mov	r2, #0
   2c0e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2c0e8:	ldr	r0, [fp, #-12]
   2c0ec:	bl	2bdcc <__assert_fail@plt+0x196e0>
   2c0f0:	mov	r3, r0
   2c0f4:	cmp	r3, #0
   2c0f8:	beq	2c164 <__assert_fail@plt+0x19a78>
   2c0fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c100:	ldr	r3, [r3]
   2c104:	mov	r0, r3
   2c108:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2c10c:	ldr	r3, [fp, #-12]
   2c110:	ldr	r2, [r3]
   2c114:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c118:	str	r2, [r3]
   2c11c:	ldr	r3, [fp, #-12]
   2c120:	ldr	r2, [r3, #4]
   2c124:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c128:	str	r2, [r3, #4]
   2c12c:	ldr	r3, [fp, #-12]
   2c130:	ldr	r2, [r3, #8]
   2c134:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c138:	str	r2, [r3, #8]
   2c13c:	ldr	r3, [fp, #-12]
   2c140:	ldr	r2, [r3, #12]
   2c144:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c148:	str	r2, [r3, #12]
   2c14c:	ldr	r3, [fp, #-12]
   2c150:	ldr	r2, [r3, #36]	; 0x24
   2c154:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c158:	str	r2, [r3, #36]	; 0x24
   2c15c:	mov	r3, #1
   2c160:	b	2c1d4 <__assert_fail@plt+0x19ae8>
   2c164:	ldr	r3, [fp, #-12]
   2c168:	ldr	r2, [r3, #36]	; 0x24
   2c16c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c170:	str	r2, [r3, #36]	; 0x24
   2c174:	mov	r2, #1
   2c178:	ldr	r1, [fp, #-12]
   2c17c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c180:	bl	2bdcc <__assert_fail@plt+0x196e0>
   2c184:	mov	r3, r0
   2c188:	eor	r3, r3, #1
   2c18c:	uxtb	r3, r3
   2c190:	cmp	r3, #0
   2c194:	bne	2c1bc <__assert_fail@plt+0x19ad0>
   2c198:	mov	r2, #0
   2c19c:	ldr	r1, [fp, #-12]
   2c1a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c1a4:	bl	2bdcc <__assert_fail@plt+0x196e0>
   2c1a8:	mov	r3, r0
   2c1ac:	eor	r3, r3, #1
   2c1b0:	uxtb	r3, r3
   2c1b4:	cmp	r3, #0
   2c1b8:	beq	2c1c0 <__assert_fail@plt+0x19ad4>
   2c1bc:	bl	12698 <abort@plt>
   2c1c0:	ldr	r3, [fp, #-12]
   2c1c4:	ldr	r3, [r3]
   2c1c8:	mov	r0, r3
   2c1cc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2c1d0:	mov	r3, #0
   2c1d4:	mov	r0, r3
   2c1d8:	sub	sp, fp, #4
   2c1dc:	pop	{fp, pc}
   2c1e0:	push	{fp, lr}
   2c1e4:	add	fp, sp, #4
   2c1e8:	sub	sp, sp, #40	; 0x28
   2c1ec:	str	r0, [fp, #-32]	; 0xffffffe0
   2c1f0:	str	r1, [fp, #-36]	; 0xffffffdc
   2c1f4:	str	r2, [fp, #-40]	; 0xffffffd8
   2c1f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c1fc:	cmp	r3, #0
   2c200:	bne	2c208 <__assert_fail@plt+0x19b1c>
   2c204:	bl	12698 <abort@plt>
   2c208:	sub	r2, fp, #24
   2c20c:	mov	r3, #0
   2c210:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c218:	bl	2bc10 <__assert_fail@plt+0x19524>
   2c21c:	str	r0, [fp, #-8]
   2c220:	ldr	r3, [fp, #-8]
   2c224:	cmp	r3, #0
   2c228:	beq	2c24c <__assert_fail@plt+0x19b60>
   2c22c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c230:	cmp	r3, #0
   2c234:	beq	2c244 <__assert_fail@plt+0x19b58>
   2c238:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c23c:	ldr	r2, [fp, #-8]
   2c240:	str	r2, [r3]
   2c244:	mov	r3, #0
   2c248:	b	2c450 <__assert_fail@plt+0x19d64>
   2c24c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c250:	ldr	r3, [r3, #12]
   2c254:	vmov	s15, r3
   2c258:	vcvt.f32.u32	s14, s15
   2c25c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c260:	ldr	r3, [r3, #20]
   2c264:	vldr	s13, [r3, #8]
   2c268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c26c:	ldr	r3, [r3, #8]
   2c270:	vmov	s15, r3
   2c274:	vcvt.f32.u32	s15, s15
   2c278:	vmul.f32	s15, s13, s15
   2c27c:	vcmpe.f32	s14, s15
   2c280:	vmrs	APSR_nzcv, fpscr
   2c284:	ble	2c3a4 <__assert_fail@plt+0x19cb8>
   2c288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c28c:	bl	2b4e8 <__assert_fail@plt+0x18dfc>
   2c290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c294:	ldr	r3, [r3, #12]
   2c298:	vmov	s15, r3
   2c29c:	vcvt.f32.u32	s14, s15
   2c2a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c2a4:	ldr	r3, [r3, #20]
   2c2a8:	vldr	s13, [r3, #8]
   2c2ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c2b0:	ldr	r3, [r3, #8]
   2c2b4:	vmov	s15, r3
   2c2b8:	vcvt.f32.u32	s15, s15
   2c2bc:	vmul.f32	s15, s13, s15
   2c2c0:	vcmpe.f32	s14, s15
   2c2c4:	vmrs	APSR_nzcv, fpscr
   2c2c8:	ble	2c3a4 <__assert_fail@plt+0x19cb8>
   2c2cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c2d0:	ldr	r3, [r3, #20]
   2c2d4:	str	r3, [fp, #-12]
   2c2d8:	ldr	r3, [fp, #-12]
   2c2dc:	ldrb	r3, [r3, #16]
   2c2e0:	cmp	r3, #0
   2c2e4:	beq	2c308 <__assert_fail@plt+0x19c1c>
   2c2e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c2ec:	ldr	r3, [r3, #8]
   2c2f0:	vmov	s15, r3
   2c2f4:	vcvt.f32.u32	s14, s15
   2c2f8:	ldr	r3, [fp, #-12]
   2c2fc:	vldr	s15, [r3, #12]
   2c300:	vmul.f32	s15, s14, s15
   2c304:	b	2c330 <__assert_fail@plt+0x19c44>
   2c308:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c30c:	ldr	r3, [r3, #8]
   2c310:	vmov	s15, r3
   2c314:	vcvt.f32.u32	s14, s15
   2c318:	ldr	r3, [fp, #-12]
   2c31c:	vldr	s15, [r3, #12]
   2c320:	vmul.f32	s14, s14, s15
   2c324:	ldr	r3, [fp, #-12]
   2c328:	vldr	s15, [r3, #8]
   2c32c:	vmul.f32	s15, s14, s15
   2c330:	vstr	s15, [fp, #-16]
   2c334:	vldr	s15, [fp, #-16]
   2c338:	vldr	s14, [pc, #284]	; 2c45c <__assert_fail@plt+0x19d70>
   2c33c:	vcmpe.f32	s15, s14
   2c340:	vmrs	APSR_nzcv, fpscr
   2c344:	blt	2c350 <__assert_fail@plt+0x19c64>
   2c348:	mvn	r3, #0
   2c34c:	b	2c450 <__assert_fail@plt+0x19d64>
   2c350:	vldr	s15, [fp, #-16]
   2c354:	vcvt.u32.f32	s15, s15
   2c358:	vmov	r1, s15
   2c35c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c360:	bl	2bfb8 <__assert_fail@plt+0x198cc>
   2c364:	mov	r3, r0
   2c368:	eor	r3, r3, #1
   2c36c:	uxtb	r3, r3
   2c370:	cmp	r3, #0
   2c374:	beq	2c380 <__assert_fail@plt+0x19c94>
   2c378:	mvn	r3, #0
   2c37c:	b	2c450 <__assert_fail@plt+0x19d64>
   2c380:	sub	r2, fp, #24
   2c384:	mov	r3, #0
   2c388:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c38c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c390:	bl	2bc10 <__assert_fail@plt+0x19524>
   2c394:	mov	r3, r0
   2c398:	cmp	r3, #0
   2c39c:	beq	2c3a4 <__assert_fail@plt+0x19cb8>
   2c3a0:	bl	12698 <abort@plt>
   2c3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3a8:	ldr	r3, [r3]
   2c3ac:	cmp	r3, #0
   2c3b0:	beq	2c418 <__assert_fail@plt+0x19d2c>
   2c3b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c3b8:	bl	2bb64 <__assert_fail@plt+0x19478>
   2c3bc:	str	r0, [fp, #-20]	; 0xffffffec
   2c3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c3c4:	cmp	r3, #0
   2c3c8:	bne	2c3d4 <__assert_fail@plt+0x19ce8>
   2c3cc:	mvn	r3, #0
   2c3d0:	b	2c450 <__assert_fail@plt+0x19d64>
   2c3d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c3d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c3dc:	str	r2, [r3]
   2c3e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3e4:	ldr	r2, [r3, #4]
   2c3e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c3ec:	str	r2, [r3, #4]
   2c3f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c3f8:	str	r2, [r3, #4]
   2c3fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c400:	ldr	r3, [r3, #16]
   2c404:	add	r2, r3, #1
   2c408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c40c:	str	r2, [r3, #16]
   2c410:	mov	r3, #1
   2c414:	b	2c450 <__assert_fail@plt+0x19d64>
   2c418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c41c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c420:	str	r2, [r3]
   2c424:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c428:	ldr	r3, [r3, #16]
   2c42c:	add	r2, r3, #1
   2c430:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c434:	str	r2, [r3, #16]
   2c438:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c43c:	ldr	r3, [r3, #12]
   2c440:	add	r2, r3, #1
   2c444:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c448:	str	r2, [r3, #12]
   2c44c:	mov	r3, #1
   2c450:	mov	r0, r3
   2c454:	sub	sp, fp, #4
   2c458:	pop	{fp, pc}
   2c45c:	svcmi	0x00800000
   2c460:	push	{fp, lr}
   2c464:	add	fp, sp, #4
   2c468:	sub	sp, sp, #16
   2c46c:	str	r0, [fp, #-16]
   2c470:	str	r1, [fp, #-20]	; 0xffffffec
   2c474:	sub	r3, fp, #12
   2c478:	mov	r2, r3
   2c47c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c480:	ldr	r0, [fp, #-16]
   2c484:	bl	2c1e0 <__assert_fail@plt+0x19af4>
   2c488:	str	r0, [fp, #-8]
   2c48c:	ldr	r3, [fp, #-8]
   2c490:	cmn	r3, #1
   2c494:	beq	2c4b4 <__assert_fail@plt+0x19dc8>
   2c498:	ldr	r3, [fp, #-8]
   2c49c:	cmp	r3, #0
   2c4a0:	bne	2c4ac <__assert_fail@plt+0x19dc0>
   2c4a4:	ldr	r3, [fp, #-12]
   2c4a8:	b	2c4b8 <__assert_fail@plt+0x19dcc>
   2c4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4b0:	b	2c4b8 <__assert_fail@plt+0x19dcc>
   2c4b4:	mov	r3, #0
   2c4b8:	mov	r0, r3
   2c4bc:	sub	sp, fp, #4
   2c4c0:	pop	{fp, pc}
   2c4c4:	push	{fp, lr}
   2c4c8:	add	fp, sp, #4
   2c4cc:	sub	sp, sp, #32
   2c4d0:	str	r0, [fp, #-32]	; 0xffffffe0
   2c4d4:	str	r1, [fp, #-36]	; 0xffffffdc
   2c4d8:	sub	r2, fp, #28
   2c4dc:	mov	r3, #1
   2c4e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c4e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c4e8:	bl	2bc10 <__assert_fail@plt+0x19524>
   2c4ec:	str	r0, [fp, #-12]
   2c4f0:	ldr	r3, [fp, #-12]
   2c4f4:	cmp	r3, #0
   2c4f8:	bne	2c504 <__assert_fail@plt+0x19e18>
   2c4fc:	mov	r3, #0
   2c500:	b	2c694 <__assert_fail@plt+0x19fa8>
   2c504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c508:	ldr	r3, [r3, #16]
   2c50c:	sub	r2, r3, #1
   2c510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c514:	str	r2, [r3, #16]
   2c518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c51c:	ldr	r3, [r3]
   2c520:	cmp	r3, #0
   2c524:	bne	2c690 <__assert_fail@plt+0x19fa4>
   2c528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c52c:	ldr	r3, [r3, #12]
   2c530:	sub	r2, r3, #1
   2c534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c538:	str	r2, [r3, #12]
   2c53c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c540:	ldr	r3, [r3, #12]
   2c544:	vmov	s15, r3
   2c548:	vcvt.f32.u32	s14, s15
   2c54c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c550:	ldr	r3, [r3, #20]
   2c554:	vldr	s13, [r3]
   2c558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c55c:	ldr	r3, [r3, #8]
   2c560:	vmov	s15, r3
   2c564:	vcvt.f32.u32	s15, s15
   2c568:	vmul.f32	s15, s13, s15
   2c56c:	vcmpe.f32	s14, s15
   2c570:	vmrs	APSR_nzcv, fpscr
   2c574:	bpl	2c690 <__assert_fail@plt+0x19fa4>
   2c578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c57c:	bl	2b4e8 <__assert_fail@plt+0x18dfc>
   2c580:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c584:	ldr	r3, [r3, #12]
   2c588:	vmov	s15, r3
   2c58c:	vcvt.f32.u32	s14, s15
   2c590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c594:	ldr	r3, [r3, #20]
   2c598:	vldr	s13, [r3]
   2c59c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c5a0:	ldr	r3, [r3, #8]
   2c5a4:	vmov	s15, r3
   2c5a8:	vcvt.f32.u32	s15, s15
   2c5ac:	vmul.f32	s15, s13, s15
   2c5b0:	vcmpe.f32	s14, s15
   2c5b4:	vmrs	APSR_nzcv, fpscr
   2c5b8:	bpl	2c690 <__assert_fail@plt+0x19fa4>
   2c5bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c5c0:	ldr	r3, [r3, #20]
   2c5c4:	str	r3, [fp, #-16]
   2c5c8:	ldr	r3, [fp, #-16]
   2c5cc:	ldrb	r3, [r3, #16]
   2c5d0:	cmp	r3, #0
   2c5d4:	beq	2c5fc <__assert_fail@plt+0x19f10>
   2c5d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c5dc:	ldr	r3, [r3, #8]
   2c5e0:	vmov	s15, r3
   2c5e4:	vcvt.f32.u32	s14, s15
   2c5e8:	ldr	r3, [fp, #-16]
   2c5ec:	vldr	s15, [r3, #4]
   2c5f0:	vmul.f32	s15, s14, s15
   2c5f4:	vcvt.u32.f32	s15, s15
   2c5f8:	b	2c628 <__assert_fail@plt+0x19f3c>
   2c5fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c600:	ldr	r3, [r3, #8]
   2c604:	vmov	s15, r3
   2c608:	vcvt.f32.u32	s14, s15
   2c60c:	ldr	r3, [fp, #-16]
   2c610:	vldr	s15, [r3, #4]
   2c614:	vmul.f32	s14, s14, s15
   2c618:	ldr	r3, [fp, #-16]
   2c61c:	vldr	s15, [r3, #8]
   2c620:	vmul.f32	s15, s14, s15
   2c624:	vcvt.u32.f32	s15, s15
   2c628:	vstr	s15, [fp, #-20]	; 0xffffffec
   2c62c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c634:	bl	2bfb8 <__assert_fail@plt+0x198cc>
   2c638:	mov	r3, r0
   2c63c:	eor	r3, r3, #1
   2c640:	uxtb	r3, r3
   2c644:	cmp	r3, #0
   2c648:	beq	2c690 <__assert_fail@plt+0x19fa4>
   2c64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c650:	ldr	r3, [r3, #36]	; 0x24
   2c654:	str	r3, [fp, #-8]
   2c658:	b	2c678 <__assert_fail@plt+0x19f8c>
   2c65c:	ldr	r3, [fp, #-8]
   2c660:	ldr	r3, [r3, #4]
   2c664:	str	r3, [fp, #-24]	; 0xffffffe8
   2c668:	ldr	r0, [fp, #-8]
   2c66c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2c670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c674:	str	r3, [fp, #-8]
   2c678:	ldr	r3, [fp, #-8]
   2c67c:	cmp	r3, #0
   2c680:	bne	2c65c <__assert_fail@plt+0x19f70>
   2c684:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c688:	mov	r2, #0
   2c68c:	str	r2, [r3, #36]	; 0x24
   2c690:	ldr	r3, [fp, #-12]
   2c694:	mov	r0, r3
   2c698:	sub	sp, fp, #4
   2c69c:	pop	{fp, pc}
   2c6a0:	push	{fp, lr}
   2c6a4:	add	fp, sp, #4
   2c6a8:	sub	sp, sp, #8
   2c6ac:	str	r0, [fp, #-8]
   2c6b0:	str	r1, [fp, #-12]
   2c6b4:	ldr	r1, [fp, #-12]
   2c6b8:	ldr	r0, [fp, #-8]
   2c6bc:	bl	2c4c4 <__assert_fail@plt+0x19dd8>
   2c6c0:	mov	r3, r0
   2c6c4:	mov	r0, r3
   2c6c8:	sub	sp, fp, #4
   2c6cc:	pop	{fp, pc}
   2c6d0:	push	{fp, lr}
   2c6d4:	add	fp, sp, #4
   2c6d8:	sub	sp, sp, #24
   2c6dc:	str	r0, [fp, #-16]
   2c6e0:	vstr	d0, [fp, #-28]	; 0xffffffe4
   2c6e4:	ldr	r3, [fp, #-16]
   2c6e8:	cmp	r3, #1
   2c6ec:	beq	2c778 <__assert_fail@plt+0x1a08c>
   2c6f0:	vldr	d7, [fp, #-28]	; 0xffffffe4
   2c6f4:	vldr	d6, [pc, #148]	; 2c790 <__assert_fail@plt+0x1a0a4>
   2c6f8:	vcmpe.f64	d7, d6
   2c6fc:	vmrs	APSR_nzcv, fpscr
   2c700:	bpl	2c778 <__assert_fail@plt+0x1a08c>
   2c704:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   2c708:	bl	63e98 <__assert_fail@plt+0x517ac>
   2c70c:	mov	r2, r0
   2c710:	mov	r3, r1
   2c714:	strd	r2, [fp, #-12]
   2c718:	ldr	r3, [fp, #-16]
   2c71c:	cmp	r3, #0
   2c720:	bne	2c748 <__assert_fail@plt+0x1a05c>
   2c724:	ldrd	r0, [fp, #-12]
   2c728:	bl	63d04 <__assert_fail@plt+0x51618>
   2c72c:	vmov	d6, r0, r1
   2c730:	vldr	d7, [fp, #-28]	; 0xffffffe4
   2c734:	vcmp.f64	d6, d7
   2c738:	vmrs	APSR_nzcv, fpscr
   2c73c:	beq	2c748 <__assert_fail@plt+0x1a05c>
   2c740:	mov	r3, #1
   2c744:	b	2c74c <__assert_fail@plt+0x1a060>
   2c748:	mov	r3, #0
   2c74c:	mov	r0, r3
   2c750:	asr	r1, r0, #31
   2c754:	ldrd	r2, [fp, #-12]
   2c758:	adds	r2, r2, r0
   2c75c:	adc	r3, r3, r1
   2c760:	mov	r0, r2
   2c764:	mov	r1, r3
   2c768:	bl	63d04 <__assert_fail@plt+0x51618>
   2c76c:	mov	r2, r0
   2c770:	mov	r3, r1
   2c774:	strd	r2, [fp, #-28]	; 0xffffffe4
   2c778:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2c77c:	vmov	d7, r2, r3
   2c780:	vmov.f64	d0, d7
   2c784:	sub	sp, fp, #4
   2c788:	pop	{fp, pc}
   2c78c:	nop			; (mov r0, r0)
   2c790:	andeq	r0, r0, r0
   2c794:	mvnsmi	r0, #0
   2c798:	push	{r4, fp, lr}
   2c79c:	add	fp, sp, #8
   2c7a0:	sub	sp, sp, #76	; 0x4c
   2c7a4:	str	r0, [fp, #-72]	; 0xffffffb8
   2c7a8:	str	r1, [fp, #-76]	; 0xffffffb4
   2c7ac:	str	r2, [fp, #-80]	; 0xffffffb0
   2c7b0:	str	r3, [fp, #-84]	; 0xffffffac
   2c7b4:	mvn	r3, #0
   2c7b8:	str	r3, [fp, #-16]
   2c7bc:	ldr	r0, [fp, #-84]	; 0xffffffac
   2c7c0:	bl	123bc <strlen@plt>
   2c7c4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2c7cc:	str	r3, [fp, #-20]	; 0xffffffec
   2c7d0:	sub	r3, fp, #68	; 0x44
   2c7d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2c7d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2c7dc:	mov	r0, r3
   2c7e0:	bl	120f8 <memcpy@plt>
   2c7e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2c7e8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2c7ec:	add	r4, r2, r3
   2c7f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c7f4:	ldrb	r3, [r3]
   2c7f8:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c7fc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c800:	cmp	r3, #0
   2c804:	beq	2c830 <__assert_fail@plt+0x1a144>
   2c808:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c80c:	cmp	r3, #255	; 0xff
   2c810:	beq	2c81c <__assert_fail@plt+0x1a130>
   2c814:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c818:	b	2c820 <__assert_fail@plt+0x1a134>
   2c81c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c820:	str	r3, [fp, #-16]
   2c824:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c828:	add	r3, r3, #1
   2c82c:	str	r3, [fp, #-80]	; 0xffffffb0
   2c830:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c834:	ldr	r3, [fp, #-16]
   2c838:	cmp	r2, r3
   2c83c:	bcs	2c848 <__assert_fail@plt+0x1a15c>
   2c840:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c844:	str	r3, [fp, #-16]
   2c848:	ldr	r3, [fp, #-16]
   2c84c:	rsb	r3, r3, #0
   2c850:	add	r4, r4, r3
   2c854:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c858:	ldr	r3, [fp, #-16]
   2c85c:	sub	r3, r2, r3
   2c860:	str	r3, [fp, #-20]	; 0xffffffec
   2c864:	sub	r2, fp, #68	; 0x44
   2c868:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c86c:	add	r3, r2, r3
   2c870:	ldr	r2, [fp, #-16]
   2c874:	mov	r1, r3
   2c878:	mov	r0, r4
   2c87c:	bl	120f8 <memcpy@plt>
   2c880:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c884:	cmp	r3, #0
   2c888:	bne	2c894 <__assert_fail@plt+0x1a1a8>
   2c88c:	mov	r3, r4
   2c890:	b	2c8b4 <__assert_fail@plt+0x1a1c8>
   2c894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c898:	rsb	r3, r3, #0
   2c89c:	add	r4, r4, r3
   2c8a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c8a4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2c8a8:	mov	r0, r4
   2c8ac:	bl	120f8 <memcpy@plt>
   2c8b0:	b	2c7f0 <__assert_fail@plt+0x1a104>
   2c8b4:	mov	r0, r3
   2c8b8:	sub	sp, fp, #8
   2c8bc:	pop	{r4, fp, pc}
   2c8c0:	push	{r4, r5, fp, lr}
   2c8c4:	vpush	{d8}
   2c8c8:	add	fp, sp, #20
   2c8cc:	sub	sp, sp, #176	; 0xb0
   2c8d0:	strd	r0, [fp, #-188]	; 0xffffff44
   2c8d4:	str	r2, [fp, #-192]	; 0xffffff40
   2c8d8:	str	r3, [fp, #-196]	; 0xffffff3c
   2c8dc:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2c8e0:	and	r3, r3, #3
   2c8e4:	str	r3, [fp, #-96]	; 0xffffffa0
   2c8e8:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2c8ec:	and	r3, r3, #32
   2c8f0:	cmp	r3, #0
   2c8f4:	beq	2c900 <__assert_fail@plt+0x1a214>
   2c8f8:	mov	r3, #1024	; 0x400
   2c8fc:	b	2c904 <__assert_fail@plt+0x1a218>
   2c900:	mov	r3, #1000	; 0x3e8
   2c904:	str	r3, [fp, #-100]	; 0xffffff9c
   2c908:	mvn	r3, #0
   2c90c:	str	r3, [fp, #-36]	; 0xffffffdc
   2c910:	mov	r3, #8
   2c914:	str	r3, [fp, #-104]	; 0xffffff98
   2c918:	ldr	r3, [pc, #1968]	; 2d0d0 <__assert_fail@plt+0x1a9e4>
   2c91c:	str	r3, [fp, #-56]	; 0xffffffc8
   2c920:	mov	r3, #1
   2c924:	str	r3, [fp, #-60]	; 0xffffffc4
   2c928:	ldr	r3, [pc, #1956]	; 2d0d4 <__assert_fail@plt+0x1a9e8>
   2c92c:	str	r3, [fp, #-108]	; 0xffffff94
   2c930:	ldr	r3, [pc, #1948]	; 2d0d4 <__assert_fail@plt+0x1a9e8>
   2c934:	str	r3, [fp, #-64]	; 0xffffffc0
   2c938:	bl	12584 <localeconv@plt>
   2c93c:	str	r0, [fp, #-112]	; 0xffffff90
   2c940:	ldr	r3, [fp, #-112]	; 0xffffff90
   2c944:	ldr	r3, [r3]
   2c948:	mov	r0, r3
   2c94c:	bl	123bc <strlen@plt>
   2c950:	str	r0, [fp, #-116]	; 0xffffff8c
   2c954:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2c958:	cmp	r3, #0
   2c95c:	beq	2c980 <__assert_fail@plt+0x1a294>
   2c960:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2c964:	cmp	r3, #16
   2c968:	bhi	2c980 <__assert_fail@plt+0x1a294>
   2c96c:	ldr	r3, [fp, #-112]	; 0xffffff90
   2c970:	ldr	r3, [r3]
   2c974:	str	r3, [fp, #-56]	; 0xffffffc8
   2c978:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2c97c:	str	r3, [fp, #-60]	; 0xffffffc4
   2c980:	ldr	r3, [fp, #-112]	; 0xffffff90
   2c984:	ldr	r3, [r3, #8]
   2c988:	str	r3, [fp, #-108]	; 0xffffff94
   2c98c:	ldr	r3, [fp, #-112]	; 0xffffff90
   2c990:	ldr	r3, [r3, #4]
   2c994:	mov	r0, r3
   2c998:	bl	123bc <strlen@plt>
   2c99c:	mov	r3, r0
   2c9a0:	cmp	r3, #16
   2c9a4:	bhi	2c9b4 <__assert_fail@plt+0x1a2c8>
   2c9a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2c9ac:	ldr	r3, [r3, #4]
   2c9b0:	str	r3, [fp, #-64]	; 0xffffffc0
   2c9b4:	ldr	r3, [fp, #-192]	; 0xffffff40
   2c9b8:	add	r3, r3, #644	; 0x284
   2c9bc:	add	r3, r3, #3
   2c9c0:	str	r3, [fp, #-44]	; 0xffffffd4
   2c9c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c9c8:	str	r3, [fp, #-40]	; 0xffffffd8
   2c9cc:	ldrd	r0, [fp, #12]
   2c9d0:	ldrd	r2, [fp, #4]
   2c9d4:	cmp	r1, r3
   2c9d8:	cmpeq	r0, r2
   2c9dc:	bhi	2ca84 <__assert_fail@plt+0x1a398>
   2c9e0:	ldrd	r0, [fp, #4]
   2c9e4:	ldrd	r2, [fp, #12]
   2c9e8:	bl	63e4c <__assert_fail@plt+0x51760>
   2c9ec:	orrs	r3, r2, r3
   2c9f0:	bne	2cb9c <__assert_fail@plt+0x1a4b0>
   2c9f4:	ldrd	r2, [fp, #12]
   2c9f8:	ldrd	r0, [fp, #4]
   2c9fc:	bl	63e4c <__assert_fail@plt+0x51760>
   2ca00:	mov	r2, r0
   2ca04:	mov	r3, r1
   2ca08:	strd	r2, [fp, #-124]	; 0xffffff84
   2ca0c:	ldr	r3, [fp, #-184]	; 0xffffff48
   2ca10:	ldr	r2, [fp, #-124]	; 0xffffff84
   2ca14:	mul	r2, r2, r3
   2ca18:	ldr	r3, [fp, #-120]	; 0xffffff88
   2ca1c:	ldr	r1, [fp, #-188]	; 0xffffff44
   2ca20:	mul	r3, r1, r3
   2ca24:	add	r1, r2, r3
   2ca28:	ldr	r2, [fp, #-188]	; 0xffffff44
   2ca2c:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ca30:	umull	r2, r3, r2, r3
   2ca34:	add	r1, r1, r3
   2ca38:	mov	r3, r1
   2ca3c:	strd	r2, [fp, #-28]	; 0xffffffe4
   2ca40:	strd	r2, [fp, #-28]	; 0xffffffe4
   2ca44:	ldrd	r2, [fp, #-124]	; 0xffffff84
   2ca48:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   2ca4c:	bl	63e4c <__assert_fail@plt+0x51760>
   2ca50:	mov	r2, r0
   2ca54:	mov	r3, r1
   2ca58:	mov	r0, r2
   2ca5c:	mov	r1, r3
   2ca60:	ldrd	r2, [fp, #-188]	; 0xffffff44
   2ca64:	cmp	r1, r3
   2ca68:	cmpeq	r0, r2
   2ca6c:	bne	2cb9c <__assert_fail@plt+0x1a4b0>
   2ca70:	mov	r3, #0
   2ca74:	str	r3, [fp, #-32]	; 0xffffffe0
   2ca78:	mov	r3, #0
   2ca7c:	str	r3, [fp, #-52]	; 0xffffffcc
   2ca80:	b	2cdb4 <__assert_fail@plt+0x1a6c8>
   2ca84:	ldrd	r2, [fp, #4]
   2ca88:	orrs	r3, r2, r3
   2ca8c:	beq	2cb9c <__assert_fail@plt+0x1a4b0>
   2ca90:	ldrd	r0, [fp, #12]
   2ca94:	ldrd	r2, [fp, #4]
   2ca98:	bl	63e4c <__assert_fail@plt+0x51760>
   2ca9c:	orrs	r3, r2, r3
   2caa0:	bne	2cb9c <__assert_fail@plt+0x1a4b0>
   2caa4:	ldrd	r2, [fp, #4]
   2caa8:	ldrd	r0, [fp, #12]
   2caac:	bl	63e4c <__assert_fail@plt+0x51760>
   2cab0:	mov	r2, r0
   2cab4:	mov	r3, r1
   2cab8:	strd	r2, [fp, #-132]	; 0xffffff7c
   2cabc:	ldrd	r0, [fp, #-188]	; 0xffffff44
   2cac0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   2cac4:	bl	63e4c <__assert_fail@plt+0x51760>
   2cac8:	mov	r1, #10
   2cacc:	mul	r0, r1, r3
   2cad0:	mov	r1, #0
   2cad4:	mul	r1, r1, r2
   2cad8:	add	r1, r0, r1
   2cadc:	mov	r0, #10
   2cae0:	umull	r2, r3, r2, r0
   2cae4:	add	r1, r1, r3
   2cae8:	mov	r3, r1
   2caec:	strd	r2, [fp, #-140]	; 0xffffff74
   2caf0:	strd	r2, [fp, #-140]	; 0xffffff74
   2caf4:	ldrd	r0, [fp, #-140]	; 0xffffff74
   2caf8:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   2cafc:	bl	63e4c <__assert_fail@plt+0x51760>
   2cb00:	adds	r2, r2, r2
   2cb04:	adc	r3, r3, r3
   2cb08:	strd	r2, [fp, #-148]	; 0xffffff6c
   2cb0c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   2cb10:	ldrd	r0, [fp, #-188]	; 0xffffff44
   2cb14:	bl	63e4c <__assert_fail@plt+0x51760>
   2cb18:	mov	r2, r0
   2cb1c:	mov	r3, r1
   2cb20:	strd	r2, [fp, #-28]	; 0xffffffe4
   2cb24:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   2cb28:	ldrd	r0, [fp, #-140]	; 0xffffff74
   2cb2c:	bl	63e4c <__assert_fail@plt+0x51760>
   2cb30:	mov	r2, r0
   2cb34:	mov	r3, r1
   2cb38:	mov	r3, r2
   2cb3c:	str	r3, [fp, #-32]	; 0xffffffe0
   2cb40:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   2cb44:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   2cb48:	cmp	r1, r3
   2cb4c:	cmpeq	r0, r2
   2cb50:	bcs	2cb74 <__assert_fail@plt+0x1a488>
   2cb54:	ldr	r2, [fp, #-148]	; 0xffffff6c
   2cb58:	ldr	r3, [fp, #-144]	; 0xffffff70
   2cb5c:	orr	r3, r2, r3
   2cb60:	cmp	r3, #0
   2cb64:	movne	r3, #1
   2cb68:	moveq	r3, #0
   2cb6c:	uxtb	r3, r3
   2cb70:	b	2cb94 <__assert_fail@plt+0x1a4a8>
   2cb74:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   2cb78:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2cb7c:	cmp	r1, r3
   2cb80:	cmpeq	r0, r2
   2cb84:	bcs	2cb90 <__assert_fail@plt+0x1a4a4>
   2cb88:	mov	r3, #3
   2cb8c:	b	2cb94 <__assert_fail@plt+0x1a4a8>
   2cb90:	mov	r3, #2
   2cb94:	str	r3, [fp, #-52]	; 0xffffffcc
   2cb98:	b	2cdb4 <__assert_fail@plt+0x1a6c8>
   2cb9c:	ldrd	r0, [fp, #12]
   2cba0:	bl	63d04 <__assert_fail@plt+0x51618>
   2cba4:	mov	r2, r0
   2cba8:	mov	r3, r1
   2cbac:	strd	r2, [fp, #-156]	; 0xffffff64
   2cbb0:	ldrd	r0, [fp, #-188]	; 0xffffff44
   2cbb4:	bl	63d04 <__assert_fail@plt+0x51618>
   2cbb8:	vmov	d8, r0, r1
   2cbbc:	ldrd	r0, [fp, #4]
   2cbc0:	bl	63d04 <__assert_fail@plt+0x51618>
   2cbc4:	vmov	d5, r0, r1
   2cbc8:	vldr	d6, [fp, #-156]	; 0xffffff64
   2cbcc:	vdiv.f64	d7, d5, d6
   2cbd0:	vmul.f64	d7, d8, d7
   2cbd4:	vstr	d7, [fp, #-164]	; 0xffffff5c
   2cbd8:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2cbdc:	and	r3, r3, #16
   2cbe0:	cmp	r3, #0
   2cbe4:	bne	2cc1c <__assert_fail@plt+0x1a530>
   2cbe8:	vldr	d0, [fp, #-164]	; 0xffffff5c
   2cbec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2cbf0:	bl	2c6d0 <__assert_fail@plt+0x19fe4>
   2cbf4:	vmov	r2, r3, d0
   2cbf8:	ldr	r1, [pc, #1240]	; 2d0d8 <__assert_fail@plt+0x1a9ec>
   2cbfc:	ldr	r0, [fp, #-192]	; 0xffffff40
   2cc00:	bl	12590 <sprintf@plt>
   2cc04:	ldr	r0, [fp, #-192]	; 0xffffff40
   2cc08:	bl	123bc <strlen@plt>
   2cc0c:	str	r0, [fp, #-68]	; 0xffffffbc
   2cc10:	mov	r3, #0
   2cc14:	str	r3, [fp, #-72]	; 0xffffffb8
   2cc18:	b	2cd74 <__assert_fail@plt+0x1a688>
   2cc1c:	mov	r2, #0
   2cc20:	ldr	r3, [pc, #1204]	; 2d0dc <__assert_fail@plt+0x1a9f0>
   2cc24:	strd	r2, [fp, #-84]	; 0xffffffac
   2cc28:	mov	r3, #0
   2cc2c:	str	r3, [fp, #-36]	; 0xffffffdc
   2cc30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2cc34:	vmov	s15, r3
   2cc38:	vcvt.f64.u32	d7, s15
   2cc3c:	vldr	d6, [fp, #-84]	; 0xffffffac
   2cc40:	vmul.f64	d7, d6, d7
   2cc44:	vstr	d7, [fp, #-84]	; 0xffffffac
   2cc48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cc4c:	add	r3, r3, #1
   2cc50:	str	r3, [fp, #-36]	; 0xffffffdc
   2cc54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2cc58:	vmov	s15, r3
   2cc5c:	vcvt.f64.u32	d6, s15
   2cc60:	vldr	d7, [fp, #-84]	; 0xffffffac
   2cc64:	vmul.f64	d6, d6, d7
   2cc68:	vldr	d7, [fp, #-164]	; 0xffffff5c
   2cc6c:	vcmpe.f64	d6, d7
   2cc70:	vmrs	APSR_nzcv, fpscr
   2cc74:	bhi	2cc88 <__assert_fail@plt+0x1a59c>
   2cc78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2cc7c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2cc80:	cmp	r2, r3
   2cc84:	blt	2cc30 <__assert_fail@plt+0x1a544>
   2cc88:	vldr	d5, [fp, #-164]	; 0xffffff5c
   2cc8c:	vldr	d6, [fp, #-84]	; 0xffffffac
   2cc90:	vdiv.f64	d7, d5, d6
   2cc94:	vstr	d7, [fp, #-164]	; 0xffffff5c
   2cc98:	vldr	d0, [fp, #-164]	; 0xffffff5c
   2cc9c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2cca0:	bl	2c6d0 <__assert_fail@plt+0x19fe4>
   2cca4:	vmov	r2, r3, d0
   2cca8:	ldr	r1, [pc, #1072]	; 2d0e0 <__assert_fail@plt+0x1a9f4>
   2ccac:	ldr	r0, [fp, #-192]	; 0xffffff40
   2ccb0:	bl	12590 <sprintf@plt>
   2ccb4:	ldr	r0, [fp, #-192]	; 0xffffff40
   2ccb8:	bl	123bc <strlen@plt>
   2ccbc:	str	r0, [fp, #-68]	; 0xffffffbc
   2ccc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ccc4:	add	r3, r3, #1
   2ccc8:	str	r3, [fp, #-72]	; 0xffffffb8
   2cccc:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2ccd0:	and	r3, r3, #32
   2ccd4:	cmp	r3, #0
   2ccd8:	moveq	r3, #1
   2ccdc:	movne	r3, #0
   2cce0:	uxtb	r3, r3
   2cce4:	mov	r2, r3
   2cce8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ccec:	add	r3, r2, r3
   2ccf0:	add	r2, r3, #1
   2ccf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ccf8:	cmp	r2, r3
   2ccfc:	bcc	2cd2c <__assert_fail@plt+0x1a640>
   2cd00:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2cd04:	and	r3, r3, #8
   2cd08:	cmp	r3, #0
   2cd0c:	beq	2cd74 <__assert_fail@plt+0x1a688>
   2cd10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2cd14:	sub	r3, r3, #1
   2cd18:	ldr	r2, [fp, #-192]	; 0xffffff40
   2cd1c:	add	r3, r2, r3
   2cd20:	ldrb	r3, [r3]
   2cd24:	cmp	r3, #48	; 0x30
   2cd28:	bne	2cd74 <__assert_fail@plt+0x1a688>
   2cd2c:	vldr	d7, [fp, #-164]	; 0xffffff5c
   2cd30:	vldr	d6, [pc, #912]	; 2d0c8 <__assert_fail@plt+0x1a9dc>
   2cd34:	vmul.f64	d7, d7, d6
   2cd38:	vmov.f64	d0, d7
   2cd3c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2cd40:	bl	2c6d0 <__assert_fail@plt+0x19fe4>
   2cd44:	vmov.f64	d6, d0
   2cd48:	vldr	d7, [pc, #888]	; 2d0c8 <__assert_fail@plt+0x1a9dc>
   2cd4c:	vdiv.f64	d5, d6, d7
   2cd50:	vmov	r2, r3, d5
   2cd54:	ldr	r1, [pc, #892]	; 2d0d8 <__assert_fail@plt+0x1a9ec>
   2cd58:	ldr	r0, [fp, #-192]	; 0xffffff40
   2cd5c:	bl	12590 <sprintf@plt>
   2cd60:	ldr	r0, [fp, #-192]	; 0xffffff40
   2cd64:	bl	123bc <strlen@plt>
   2cd68:	str	r0, [fp, #-68]	; 0xffffffbc
   2cd6c:	mov	r3, #0
   2cd70:	str	r3, [fp, #-72]	; 0xffffffb8
   2cd74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2cd78:	rsb	r3, r3, #0
   2cd7c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2cd80:	add	r3, r2, r3
   2cd84:	str	r3, [fp, #-40]	; 0xffffffd8
   2cd88:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2cd8c:	ldr	r1, [fp, #-192]	; 0xffffff40
   2cd90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2cd94:	bl	1208c <memmove@plt>
   2cd98:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2cd9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cda0:	sub	r3, r2, r3
   2cda4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2cda8:	add	r3, r2, r3
   2cdac:	str	r3, [fp, #-48]	; 0xffffffd0
   2cdb0:	b	2d218 <__assert_fail@plt+0x1ab2c>
   2cdb4:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2cdb8:	and	r3, r3, #16
   2cdbc:	cmp	r3, #0
   2cdc0:	beq	2d038 <__assert_fail@plt+0x1a94c>
   2cdc4:	mov	r3, #0
   2cdc8:	str	r3, [fp, #-36]	; 0xffffffdc
   2cdcc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2cdd0:	mov	r0, r3
   2cdd4:	mov	r1, #0
   2cdd8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2cddc:	cmp	r1, r3
   2cde0:	cmpeq	r0, r2
   2cde4:	bhi	2d038 <__assert_fail@plt+0x1a94c>
   2cde8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2cdec:	mov	r2, r3
   2cdf0:	mov	r3, #0
   2cdf4:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   2cdf8:	bl	63e4c <__assert_fail@plt+0x51760>
   2cdfc:	mov	r3, r2
   2ce00:	lsl	r3, r3, #2
   2ce04:	add	r3, r3, r2
   2ce08:	lsl	r3, r3, #1
   2ce0c:	mov	r2, r3
   2ce10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ce14:	add	r3, r2, r3
   2ce18:	str	r3, [fp, #-168]	; 0xffffff58
   2ce1c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ce20:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2ce24:	mov	r0, r3
   2ce28:	bl	63760 <__assert_fail@plt+0x51074>
   2ce2c:	mov	r3, r1
   2ce30:	lsl	r3, r3, #1
   2ce34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ce38:	asr	r2, r2, #1
   2ce3c:	add	r3, r3, r2
   2ce40:	str	r3, [fp, #-172]	; 0xffffff54
   2ce44:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ce48:	mov	r2, r3
   2ce4c:	mov	r3, #0
   2ce50:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   2ce54:	bl	63e4c <__assert_fail@plt+0x51760>
   2ce58:	mov	r2, r0
   2ce5c:	mov	r3, r1
   2ce60:	strd	r2, [fp, #-28]	; 0xffffffe4
   2ce64:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2ce68:	ldr	r0, [fp, #-168]	; 0xffffff58
   2ce6c:	bl	63574 <__assert_fail@plt+0x50e88>
   2ce70:	mov	r3, r0
   2ce74:	str	r3, [fp, #-32]	; 0xffffffe0
   2ce78:	ldr	r2, [fp, #-172]	; 0xffffff54
   2ce7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ce80:	cmp	r2, r3
   2ce84:	bcs	2cea8 <__assert_fail@plt+0x1a7bc>
   2ce88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ce8c:	ldr	r3, [fp, #-172]	; 0xffffff54
   2ce90:	add	r3, r2, r3
   2ce94:	cmp	r3, #0
   2ce98:	movne	r3, #1
   2ce9c:	moveq	r3, #0
   2cea0:	uxtb	r3, r3
   2cea4:	b	2cecc <__assert_fail@plt+0x1a7e0>
   2cea8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ceac:	ldr	r3, [fp, #-172]	; 0xffffff54
   2ceb0:	add	r2, r2, r3
   2ceb4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ceb8:	cmp	r2, r3
   2cebc:	bls	2cec8 <__assert_fail@plt+0x1a7dc>
   2cec0:	mov	r3, #3
   2cec4:	b	2cecc <__assert_fail@plt+0x1a7e0>
   2cec8:	mov	r3, #2
   2cecc:	str	r3, [fp, #-52]	; 0xffffffcc
   2ced0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ced4:	add	r3, r3, #1
   2ced8:	str	r3, [fp, #-36]	; 0xffffffdc
   2cedc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2cee0:	mov	r0, r3
   2cee4:	mov	r1, #0
   2cee8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2ceec:	cmp	r1, r3
   2cef0:	cmpeq	r0, r2
   2cef4:	bhi	2cf08 <__assert_fail@plt+0x1a81c>
   2cef8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2cefc:	ldr	r3, [fp, #-104]	; 0xffffff98
   2cf00:	cmp	r2, r3
   2cf04:	blt	2cde8 <__assert_fail@plt+0x1a6fc>
   2cf08:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2cf0c:	cmp	r3, #0
   2cf10:	cmpeq	r2, #9
   2cf14:	bhi	2d038 <__assert_fail@plt+0x1a94c>
   2cf18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2cf1c:	cmp	r3, #1
   2cf20:	bne	2cf48 <__assert_fail@plt+0x1a85c>
   2cf24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cf28:	and	r2, r3, #1
   2cf2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cf30:	add	r3, r2, r3
   2cf34:	cmp	r3, #2
   2cf38:	movgt	r3, #1
   2cf3c:	movle	r3, #0
   2cf40:	uxtb	r3, r3
   2cf44:	b	2cf74 <__assert_fail@plt+0x1a888>
   2cf48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2cf4c:	cmp	r3, #0
   2cf50:	bne	2cf68 <__assert_fail@plt+0x1a87c>
   2cf54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cf58:	cmp	r3, #0
   2cf5c:	ble	2cf68 <__assert_fail@plt+0x1a87c>
   2cf60:	mov	r3, #1
   2cf64:	b	2cf6c <__assert_fail@plt+0x1a880>
   2cf68:	mov	r3, #0
   2cf6c:	and	r3, r3, #1
   2cf70:	uxtb	r3, r3
   2cf74:	cmp	r3, #0
   2cf78:	beq	2cfb4 <__assert_fail@plt+0x1a8c8>
   2cf7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cf80:	add	r3, r3, #1
   2cf84:	str	r3, [fp, #-32]	; 0xffffffe0
   2cf88:	mov	r3, #0
   2cf8c:	str	r3, [fp, #-52]	; 0xffffffcc
   2cf90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cf94:	cmp	r3, #10
   2cf98:	bne	2cfb4 <__assert_fail@plt+0x1a8c8>
   2cf9c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2cfa0:	adds	r2, r2, #1
   2cfa4:	adc	r3, r3, #0
   2cfa8:	strd	r2, [fp, #-28]	; 0xffffffe4
   2cfac:	mov	r3, #0
   2cfb0:	str	r3, [fp, #-32]	; 0xffffffe0
   2cfb4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2cfb8:	cmp	r3, #0
   2cfbc:	cmpeq	r2, #9
   2cfc0:	bhi	2d038 <__assert_fail@plt+0x1a94c>
   2cfc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cfc8:	cmp	r3, #0
   2cfcc:	bne	2cfe0 <__assert_fail@plt+0x1a8f4>
   2cfd0:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2cfd4:	and	r3, r3, #8
   2cfd8:	cmp	r3, #0
   2cfdc:	bne	2d038 <__assert_fail@plt+0x1a94c>
   2cfe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cfe4:	sub	r3, r3, #1
   2cfe8:	str	r3, [fp, #-40]	; 0xffffffd8
   2cfec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cff0:	uxtb	r3, r3
   2cff4:	add	r3, r3, #48	; 0x30
   2cff8:	uxtb	r2, r3
   2cffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d000:	strb	r2, [r3]
   2d004:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d008:	rsb	r3, r3, #0
   2d00c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d010:	add	r3, r2, r3
   2d014:	str	r3, [fp, #-40]	; 0xffffffd8
   2d018:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2d01c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d020:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d024:	bl	120f8 <memcpy@plt>
   2d028:	mov	r3, #0
   2d02c:	str	r3, [fp, #-52]	; 0xffffffcc
   2d030:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d034:	str	r3, [fp, #-32]	; 0xffffffe0
   2d038:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2d03c:	cmp	r3, #1
   2d040:	bne	2d0a0 <__assert_fail@plt+0x1a9b4>
   2d044:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d048:	mov	r0, r3
   2d04c:	asr	r1, r0, #31
   2d050:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2d054:	mov	r4, #1
   2d058:	mov	r5, #0
   2d05c:	and	r2, r2, r4
   2d060:	and	r3, r3, r5
   2d064:	adds	r2, r2, r0
   2d068:	adc	r3, r3, r1
   2d06c:	orr	r3, r2, r3
   2d070:	cmp	r3, #0
   2d074:	movne	r3, #1
   2d078:	moveq	r3, #0
   2d07c:	uxtb	r3, r3
   2d080:	mov	r2, r3
   2d084:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d088:	add	r3, r2, r3
   2d08c:	cmp	r3, #5
   2d090:	movgt	r3, #1
   2d094:	movle	r3, #0
   2d098:	uxtb	r3, r3
   2d09c:	b	2d0f4 <__assert_fail@plt+0x1aa08>
   2d0a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2d0a4:	cmp	r3, #0
   2d0a8:	bne	2d0e8 <__assert_fail@plt+0x1a9fc>
   2d0ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d0b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d0b4:	add	r3, r2, r3
   2d0b8:	cmp	r3, #0
   2d0bc:	ble	2d0e8 <__assert_fail@plt+0x1a9fc>
   2d0c0:	mov	r3, #1
   2d0c4:	b	2d0ec <__assert_fail@plt+0x1aa00>
   2d0c8:	andeq	r0, r0, r0
   2d0cc:	eormi	r0, r4, r0
   2d0d0:	strdeq	r8, [r6], -r8	; <UNPREDICTABLE>
   2d0d4:	strdeq	r8, [r6], -ip
   2d0d8:	andeq	r8, r6, r0, lsl #18
   2d0dc:	svccc	0x00f00000	; IMB
   2d0e0:	andeq	r8, r6, r8, lsl #18
   2d0e4:	andeq	r8, r6, ip, ror #17
   2d0e8:	mov	r3, #0
   2d0ec:	and	r3, r3, #1
   2d0f0:	uxtb	r3, r3
   2d0f4:	cmp	r3, #0
   2d0f8:	beq	2d1ac <__assert_fail@plt+0x1aac0>
   2d0fc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2d100:	adds	r2, r2, #1
   2d104:	adc	r3, r3, #0
   2d108:	strd	r2, [fp, #-28]	; 0xffffffe4
   2d10c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d110:	and	r3, r3, #16
   2d114:	cmp	r3, #0
   2d118:	beq	2d1ac <__assert_fail@plt+0x1aac0>
   2d11c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2d120:	mov	r0, r3
   2d124:	mov	r1, #0
   2d128:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2d12c:	cmp	r1, r3
   2d130:	cmpeq	r0, r2
   2d134:	bne	2d1ac <__assert_fail@plt+0x1aac0>
   2d138:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d13c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2d140:	cmp	r2, r3
   2d144:	bge	2d1ac <__assert_fail@plt+0x1aac0>
   2d148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d14c:	add	r3, r3, #1
   2d150:	str	r3, [fp, #-36]	; 0xffffffdc
   2d154:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d158:	and	r3, r3, #8
   2d15c:	cmp	r3, #0
   2d160:	bne	2d1a0 <__assert_fail@plt+0x1aab4>
   2d164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d168:	sub	r3, r3, #1
   2d16c:	str	r3, [fp, #-40]	; 0xffffffd8
   2d170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d174:	mov	r2, #48	; 0x30
   2d178:	strb	r2, [r3]
   2d17c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d180:	rsb	r3, r3, #0
   2d184:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d188:	add	r3, r2, r3
   2d18c:	str	r3, [fp, #-40]	; 0xffffffd8
   2d190:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2d194:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d198:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d19c:	bl	120f8 <memcpy@plt>
   2d1a0:	mov	r2, #1
   2d1a4:	mov	r3, #0
   2d1a8:	strd	r2, [fp, #-28]	; 0xffffffe4
   2d1ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d1b0:	str	r3, [fp, #-48]	; 0xffffffd0
   2d1b4:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   2d1b8:	mov	r2, #10
   2d1bc:	mov	r3, #0
   2d1c0:	bl	63e4c <__assert_fail@plt+0x51760>
   2d1c4:	mov	r3, r2
   2d1c8:	str	r3, [fp, #-176]	; 0xffffff50
   2d1cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d1d0:	sub	r3, r3, #1
   2d1d4:	str	r3, [fp, #-40]	; 0xffffffd8
   2d1d8:	ldr	r3, [fp, #-176]	; 0xffffff50
   2d1dc:	uxtb	r3, r3
   2d1e0:	add	r3, r3, #48	; 0x30
   2d1e4:	uxtb	r2, r3
   2d1e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d1ec:	strb	r2, [r3]
   2d1f0:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   2d1f4:	mov	r2, #10
   2d1f8:	mov	r3, #0
   2d1fc:	bl	63e4c <__assert_fail@plt+0x51760>
   2d200:	mov	r2, r0
   2d204:	mov	r3, r1
   2d208:	strd	r2, [fp, #-28]	; 0xffffffe4
   2d20c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2d210:	orrs	r3, r2, r3
   2d214:	bne	2d1b4 <__assert_fail@plt+0x1aac8>
   2d218:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d21c:	and	r3, r3, #4
   2d220:	cmp	r3, #0
   2d224:	beq	2d24c <__assert_fail@plt+0x1ab60>
   2d228:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d22c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d230:	sub	r3, r2, r3
   2d234:	mov	r1, r3
   2d238:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d23c:	ldr	r2, [fp, #-108]	; 0xffffff94
   2d240:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d244:	bl	2c798 <__assert_fail@plt+0x1a0ac>
   2d248:	str	r0, [fp, #-40]	; 0xffffffd8
   2d24c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d250:	and	r3, r3, #128	; 0x80
   2d254:	cmp	r3, #0
   2d258:	beq	2d3d0 <__assert_fail@plt+0x1ace4>
   2d25c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d260:	cmp	r3, #0
   2d264:	bge	2d2f0 <__assert_fail@plt+0x1ac04>
   2d268:	mov	r3, #0
   2d26c:	str	r3, [fp, #-36]	; 0xffffffdc
   2d270:	mov	r2, #1
   2d274:	mov	r3, #0
   2d278:	strd	r2, [fp, #-92]	; 0xffffffa4
   2d27c:	b	2d2d4 <__assert_fail@plt+0x1abe8>
   2d280:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d284:	add	r3, r3, #1
   2d288:	str	r3, [fp, #-36]	; 0xffffffdc
   2d28c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d290:	ldr	r3, [fp, #-104]	; 0xffffff98
   2d294:	cmp	r2, r3
   2d298:	beq	2d2ec <__assert_fail@plt+0x1ac00>
   2d29c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2d2a0:	mov	r2, r3
   2d2a4:	mov	r3, #0
   2d2a8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2d2ac:	mul	r0, r2, r1
   2d2b0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2d2b4:	mul	r1, r3, r1
   2d2b8:	add	r1, r0, r1
   2d2bc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2d2c0:	umull	r2, r3, r0, r2
   2d2c4:	add	r1, r1, r3
   2d2c8:	mov	r3, r1
   2d2cc:	strd	r2, [fp, #-92]	; 0xffffffa4
   2d2d0:	strd	r2, [fp, #-92]	; 0xffffffa4
   2d2d4:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   2d2d8:	ldrd	r2, [fp, #12]
   2d2dc:	cmp	r1, r3
   2d2e0:	cmpeq	r0, r2
   2d2e4:	bcc	2d280 <__assert_fail@plt+0x1ab94>
   2d2e8:	b	2d2f0 <__assert_fail@plt+0x1ac04>
   2d2ec:	nop			; (mov r0, r0)
   2d2f0:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d2f4:	and	r2, r3, #256	; 0x100
   2d2f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d2fc:	orr	r3, r2, r3
   2d300:	cmp	r3, #0
   2d304:	beq	2d32c <__assert_fail@plt+0x1ac40>
   2d308:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d30c:	and	r3, r3, #64	; 0x40
   2d310:	cmp	r3, #0
   2d314:	beq	2d32c <__assert_fail@plt+0x1ac40>
   2d318:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d31c:	add	r2, r3, #1
   2d320:	str	r2, [fp, #-44]	; 0xffffffd4
   2d324:	mov	r2, #32
   2d328:	strb	r2, [r3]
   2d32c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d330:	cmp	r3, #0
   2d334:	beq	2d37c <__assert_fail@plt+0x1ac90>
   2d338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d33c:	add	r2, r3, #1
   2d340:	str	r2, [fp, #-44]	; 0xffffffd4
   2d344:	ldr	r2, [fp, #-196]	; 0xffffff3c
   2d348:	and	r2, r2, #32
   2d34c:	cmp	r2, #0
   2d350:	bne	2d360 <__assert_fail@plt+0x1ac74>
   2d354:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d358:	cmp	r2, #1
   2d35c:	beq	2d374 <__assert_fail@plt+0x1ac88>
   2d360:	ldr	r1, [pc, #-644]	; 2d0e4 <__assert_fail@plt+0x1a9f8>
   2d364:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d368:	add	r2, r1, r2
   2d36c:	ldrb	r2, [r2]
   2d370:	b	2d378 <__assert_fail@plt+0x1ac8c>
   2d374:	mov	r2, #107	; 0x6b
   2d378:	strb	r2, [r3]
   2d37c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d380:	and	r3, r3, #256	; 0x100
   2d384:	cmp	r3, #0
   2d388:	beq	2d3d0 <__assert_fail@plt+0x1ace4>
   2d38c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2d390:	and	r3, r3, #32
   2d394:	cmp	r3, #0
   2d398:	beq	2d3bc <__assert_fail@plt+0x1acd0>
   2d39c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d3a0:	cmp	r3, #0
   2d3a4:	beq	2d3bc <__assert_fail@plt+0x1acd0>
   2d3a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d3ac:	add	r2, r3, #1
   2d3b0:	str	r2, [fp, #-44]	; 0xffffffd4
   2d3b4:	mov	r2, #105	; 0x69
   2d3b8:	strb	r2, [r3]
   2d3bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d3c0:	add	r2, r3, #1
   2d3c4:	str	r2, [fp, #-44]	; 0xffffffd4
   2d3c8:	mov	r2, #66	; 0x42
   2d3cc:	strb	r2, [r3]
   2d3d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d3d4:	mov	r2, #0
   2d3d8:	strb	r2, [r3]
   2d3dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d3e0:	mov	r0, r3
   2d3e4:	sub	sp, fp, #20
   2d3e8:	vpop	{d8}
   2d3ec:	pop	{r4, r5, fp, pc}
   2d3f0:	push	{fp, lr}
   2d3f4:	add	fp, sp, #4
   2d3f8:	ldr	r0, [pc, #44]	; 2d42c <__assert_fail@plt+0x1ad40>
   2d3fc:	bl	122f0 <getenv@plt>
   2d400:	mov	r3, r0
   2d404:	cmp	r3, #0
   2d408:	beq	2d418 <__assert_fail@plt+0x1ad2c>
   2d40c:	mov	r2, #512	; 0x200
   2d410:	mov	r3, #0
   2d414:	b	2d420 <__assert_fail@plt+0x1ad34>
   2d418:	mov	r2, #1024	; 0x400
   2d41c:	mov	r3, #0
   2d420:	mov	r0, r2
   2d424:	mov	r1, r3
   2d428:	pop	{fp, pc}
   2d42c:	andeq	r8, r6, r8, lsr r9
   2d430:	push	{fp, lr}
   2d434:	add	fp, sp, #4
   2d438:	sub	sp, sp, #40	; 0x28
   2d43c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d440:	str	r1, [fp, #-28]	; 0xffffffe4
   2d444:	str	r2, [fp, #-32]	; 0xffffffe0
   2d448:	mov	r3, #0
   2d44c:	str	r3, [fp, #-8]
   2d450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d454:	cmp	r3, #0
   2d458:	bne	2d4a4 <__assert_fail@plt+0x1adb8>
   2d45c:	ldr	r0, [pc, #444]	; 2d620 <__assert_fail@plt+0x1af34>
   2d460:	bl	122f0 <getenv@plt>
   2d464:	str	r0, [fp, #-24]	; 0xffffffe8
   2d468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d46c:	cmp	r3, #0
   2d470:	bne	2d4a4 <__assert_fail@plt+0x1adb8>
   2d474:	ldr	r0, [pc, #424]	; 2d624 <__assert_fail@plt+0x1af38>
   2d478:	bl	122f0 <getenv@plt>
   2d47c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d484:	cmp	r3, #0
   2d488:	bne	2d4a4 <__assert_fail@plt+0x1adb8>
   2d48c:	bl	2d3f0 <__assert_fail@plt+0x1ad04>
   2d490:	mov	r2, r0
   2d494:	mov	r3, r1
   2d498:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d49c:	strd	r2, [r1]
   2d4a0:	b	2d604 <__assert_fail@plt+0x1af18>
   2d4a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4a8:	ldrb	r3, [r3]
   2d4ac:	cmp	r3, #39	; 0x27
   2d4b0:	bne	2d4cc <__assert_fail@plt+0x1ade0>
   2d4b4:	ldr	r3, [fp, #-8]
   2d4b8:	orr	r3, r3, #4
   2d4bc:	str	r3, [fp, #-8]
   2d4c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4c4:	add	r3, r3, #1
   2d4c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2d4cc:	mov	r3, #4
   2d4d0:	ldr	r2, [pc, #336]	; 2d628 <__assert_fail@plt+0x1af3c>
   2d4d4:	ldr	r1, [pc, #336]	; 2d62c <__assert_fail@plt+0x1af40>
   2d4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d4dc:	bl	5e700 <__assert_fail@plt+0x4c014>
   2d4e0:	str	r0, [fp, #-12]
   2d4e4:	ldr	r3, [fp, #-12]
   2d4e8:	cmp	r3, #0
   2d4ec:	blt	2d51c <__assert_fail@plt+0x1ae30>
   2d4f0:	ldr	r2, [pc, #304]	; 2d628 <__assert_fail@plt+0x1af3c>
   2d4f4:	ldr	r3, [fp, #-12]
   2d4f8:	ldr	r3, [r2, r3, lsl #2]
   2d4fc:	ldr	r2, [fp, #-8]
   2d500:	orr	r3, r2, r3
   2d504:	str	r3, [fp, #-8]
   2d508:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d50c:	mov	r2, #1
   2d510:	mov	r3, #0
   2d514:	strd	r2, [r1]
   2d518:	b	2d604 <__assert_fail@plt+0x1af18>
   2d51c:	sub	r1, fp, #20
   2d520:	ldr	r3, [pc, #264]	; 2d630 <__assert_fail@plt+0x1af44>
   2d524:	str	r3, [sp]
   2d528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d52c:	mov	r2, #0
   2d530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d534:	bl	3e5d8 <__assert_fail@plt+0x2beec>
   2d538:	str	r0, [fp, #-16]
   2d53c:	ldr	r3, [fp, #-16]
   2d540:	cmp	r3, #0
   2d544:	beq	2d5dc <__assert_fail@plt+0x1aef0>
   2d548:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d54c:	mov	r2, #0
   2d550:	str	r2, [r3]
   2d554:	ldr	r3, [fp, #-16]
   2d558:	b	2d614 <__assert_fail@plt+0x1af28>
   2d55c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d560:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d564:	cmp	r2, r3
   2d568:	bne	2d5d0 <__assert_fail@plt+0x1aee4>
   2d56c:	ldr	r3, [fp, #-8]
   2d570:	orr	r3, r3, #128	; 0x80
   2d574:	str	r3, [fp, #-8]
   2d578:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d57c:	sub	r3, r3, #1
   2d580:	ldrb	r3, [r3]
   2d584:	cmp	r3, #66	; 0x42
   2d588:	bne	2d598 <__assert_fail@plt+0x1aeac>
   2d58c:	ldr	r3, [fp, #-8]
   2d590:	orr	r3, r3, #256	; 0x100
   2d594:	str	r3, [fp, #-8]
   2d598:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d59c:	sub	r3, r3, #1
   2d5a0:	ldrb	r3, [r3]
   2d5a4:	cmp	r3, #66	; 0x42
   2d5a8:	bne	2d5c0 <__assert_fail@plt+0x1aed4>
   2d5ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d5b0:	sub	r3, r3, #2
   2d5b4:	ldrb	r3, [r3]
   2d5b8:	cmp	r3, #105	; 0x69
   2d5bc:	bne	2d600 <__assert_fail@plt+0x1af14>
   2d5c0:	ldr	r3, [fp, #-8]
   2d5c4:	orr	r3, r3, #32
   2d5c8:	str	r3, [fp, #-8]
   2d5cc:	b	2d600 <__assert_fail@plt+0x1af14>
   2d5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5d4:	add	r3, r3, #1
   2d5d8:	str	r3, [fp, #-24]	; 0xffffffe8
   2d5dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5e0:	ldrb	r3, [r3]
   2d5e4:	cmp	r3, #47	; 0x2f
   2d5e8:	bls	2d55c <__assert_fail@plt+0x1ae70>
   2d5ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5f0:	ldrb	r3, [r3]
   2d5f4:	cmp	r3, #57	; 0x39
   2d5f8:	bhi	2d55c <__assert_fail@plt+0x1ae70>
   2d5fc:	b	2d604 <__assert_fail@plt+0x1af18>
   2d600:	nop			; (mov r0, r0)
   2d604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d608:	ldr	r2, [fp, #-8]
   2d60c:	str	r2, [r3]
   2d610:	mov	r3, #0
   2d614:	mov	r0, r3
   2d618:	sub	sp, fp, #4
   2d61c:	pop	{fp, pc}
   2d620:	andeq	r8, r6, r8, asr #18
   2d624:	andeq	r8, r6, r4, asr r9
   2d628:	andeq	r8, r6, r0, lsr r9
   2d62c:	andeq	r8, r6, r4, lsr #18
   2d630:	andeq	r8, r6, r0, ror #18
   2d634:	push	{fp, lr}
   2d638:	add	fp, sp, #4
   2d63c:	sub	sp, sp, #24
   2d640:	str	r0, [fp, #-16]
   2d644:	str	r1, [fp, #-20]	; 0xffffffec
   2d648:	str	r2, [fp, #-24]	; 0xffffffe8
   2d64c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d654:	ldr	r0, [fp, #-16]
   2d658:	bl	2d430 <__assert_fail@plt+0x1ad44>
   2d65c:	str	r0, [fp, #-8]
   2d660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d664:	ldrd	r2, [r3]
   2d668:	orrs	r3, r2, r3
   2d66c:	bne	2d68c <__assert_fail@plt+0x1afa0>
   2d670:	bl	2d3f0 <__assert_fail@plt+0x1ad04>
   2d674:	mov	r2, r0
   2d678:	mov	r3, r1
   2d67c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d680:	strd	r2, [r1]
   2d684:	mov	r3, #4
   2d688:	str	r3, [fp, #-8]
   2d68c:	ldr	r3, [fp, #-8]
   2d690:	mov	r0, r3
   2d694:	sub	sp, fp, #4
   2d698:	pop	{fp, pc}
   2d69c:	push	{fp, lr}
   2d6a0:	add	fp, sp, #4
   2d6a4:	sub	sp, sp, #24
   2d6a8:	str	r0, [fp, #-24]	; 0xffffffe8
   2d6ac:	mov	r3, #0
   2d6b0:	str	r3, [fp, #-12]
   2d6b4:	ldr	r3, [pc, #260]	; 2d7c0 <__assert_fail@plt+0x1b0d4>
   2d6b8:	ldr	r3, [r3]
   2d6bc:	str	r3, [fp, #-8]
   2d6c0:	b	2d6f0 <__assert_fail@plt+0x1b004>
   2d6c4:	ldr	r3, [fp, #-8]
   2d6c8:	ldr	r2, [r3]
   2d6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6d0:	cmp	r2, r3
   2d6d4:	bne	2d6e4 <__assert_fail@plt+0x1aff8>
   2d6d8:	ldr	r3, [fp, #-8]
   2d6dc:	str	r3, [fp, #-12]
   2d6e0:	b	2d6fc <__assert_fail@plt+0x1b010>
   2d6e4:	ldr	r3, [fp, #-8]
   2d6e8:	ldr	r3, [r3, #4]
   2d6ec:	str	r3, [fp, #-8]
   2d6f0:	ldr	r3, [fp, #-8]
   2d6f4:	cmp	r3, #0
   2d6f8:	bne	2d6c4 <__assert_fail@plt+0x1afd8>
   2d6fc:	ldr	r3, [fp, #-12]
   2d700:	cmp	r3, #0
   2d704:	bne	2d794 <__assert_fail@plt+0x1b0a8>
   2d708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d70c:	bl	12014 <getpwuid@plt>
   2d710:	str	r0, [fp, #-16]
   2d714:	ldr	r3, [fp, #-16]
   2d718:	cmp	r3, #0
   2d71c:	beq	2d72c <__assert_fail@plt+0x1b040>
   2d720:	ldr	r3, [fp, #-16]
   2d724:	ldr	r3, [r3]
   2d728:	b	2d730 <__assert_fail@plt+0x1b044>
   2d72c:	ldr	r3, [pc, #144]	; 2d7c4 <__assert_fail@plt+0x1b0d8>
   2d730:	str	r3, [fp, #-20]	; 0xffffffec
   2d734:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d738:	bl	123bc <strlen@plt>
   2d73c:	mov	r3, r0
   2d740:	add	r3, r3, #12
   2d744:	bic	r3, r3, #3
   2d748:	mov	r0, r3
   2d74c:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   2d750:	mov	r3, r0
   2d754:	str	r3, [fp, #-12]
   2d758:	ldr	r3, [fp, #-12]
   2d75c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d760:	str	r2, [r3]
   2d764:	ldr	r3, [fp, #-12]
   2d768:	add	r3, r3, #8
   2d76c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d770:	mov	r0, r3
   2d774:	bl	1226c <strcpy@plt>
   2d778:	ldr	r3, [pc, #64]	; 2d7c0 <__assert_fail@plt+0x1b0d4>
   2d77c:	ldr	r2, [r3]
   2d780:	ldr	r3, [fp, #-12]
   2d784:	str	r2, [r3, #4]
   2d788:	ldr	r2, [pc, #48]	; 2d7c0 <__assert_fail@plt+0x1b0d4>
   2d78c:	ldr	r3, [fp, #-12]
   2d790:	str	r3, [r2]
   2d794:	ldr	r3, [fp, #-12]
   2d798:	ldrb	r3, [r3, #8]
   2d79c:	cmp	r3, #0
   2d7a0:	beq	2d7b0 <__assert_fail@plt+0x1b0c4>
   2d7a4:	ldr	r3, [fp, #-12]
   2d7a8:	add	r3, r3, #8
   2d7ac:	b	2d7b4 <__assert_fail@plt+0x1b0c8>
   2d7b0:	mov	r3, #0
   2d7b4:	mov	r0, r3
   2d7b8:	sub	sp, fp, #4
   2d7bc:	pop	{fp, pc}
   2d7c0:	ldrdeq	ip, [r7], -r4
   2d7c4:	andeq	r8, r6, r4, ror r9
   2d7c8:	push	{fp, lr}
   2d7cc:	add	fp, sp, #4
   2d7d0:	sub	sp, sp, #16
   2d7d4:	str	r0, [fp, #-16]
   2d7d8:	ldr	r3, [pc, #376]	; 2d958 <__assert_fail@plt+0x1b26c>
   2d7dc:	ldr	r3, [r3]
   2d7e0:	str	r3, [fp, #-8]
   2d7e4:	b	2d834 <__assert_fail@plt+0x1b148>
   2d7e8:	ldr	r3, [fp, #-8]
   2d7ec:	ldrb	r2, [r3, #8]
   2d7f0:	ldr	r3, [fp, #-16]
   2d7f4:	ldrb	r3, [r3]
   2d7f8:	cmp	r2, r3
   2d7fc:	bne	2d828 <__assert_fail@plt+0x1b13c>
   2d800:	ldr	r3, [fp, #-8]
   2d804:	add	r3, r3, #8
   2d808:	ldr	r1, [fp, #-16]
   2d80c:	mov	r0, r3
   2d810:	bl	11ffc <strcmp@plt>
   2d814:	mov	r3, r0
   2d818:	cmp	r3, #0
   2d81c:	bne	2d828 <__assert_fail@plt+0x1b13c>
   2d820:	ldr	r3, [fp, #-8]
   2d824:	b	2d94c <__assert_fail@plt+0x1b260>
   2d828:	ldr	r3, [fp, #-8]
   2d82c:	ldr	r3, [r3, #4]
   2d830:	str	r3, [fp, #-8]
   2d834:	ldr	r3, [fp, #-8]
   2d838:	cmp	r3, #0
   2d83c:	bne	2d7e8 <__assert_fail@plt+0x1b0fc>
   2d840:	ldr	r3, [pc, #276]	; 2d95c <__assert_fail@plt+0x1b270>
   2d844:	ldr	r3, [r3]
   2d848:	str	r3, [fp, #-8]
   2d84c:	b	2d89c <__assert_fail@plt+0x1b1b0>
   2d850:	ldr	r3, [fp, #-8]
   2d854:	ldrb	r2, [r3, #8]
   2d858:	ldr	r3, [fp, #-16]
   2d85c:	ldrb	r3, [r3]
   2d860:	cmp	r2, r3
   2d864:	bne	2d890 <__assert_fail@plt+0x1b1a4>
   2d868:	ldr	r3, [fp, #-8]
   2d86c:	add	r3, r3, #8
   2d870:	ldr	r1, [fp, #-16]
   2d874:	mov	r0, r3
   2d878:	bl	11ffc <strcmp@plt>
   2d87c:	mov	r3, r0
   2d880:	cmp	r3, #0
   2d884:	bne	2d890 <__assert_fail@plt+0x1b1a4>
   2d888:	mov	r3, #0
   2d88c:	b	2d94c <__assert_fail@plt+0x1b260>
   2d890:	ldr	r3, [fp, #-8]
   2d894:	ldr	r3, [r3, #4]
   2d898:	str	r3, [fp, #-8]
   2d89c:	ldr	r3, [fp, #-8]
   2d8a0:	cmp	r3, #0
   2d8a4:	bne	2d850 <__assert_fail@plt+0x1b164>
   2d8a8:	ldr	r0, [fp, #-16]
   2d8ac:	bl	11fd8 <getpwnam@plt>
   2d8b0:	str	r0, [fp, #-12]
   2d8b4:	ldr	r0, [fp, #-16]
   2d8b8:	bl	123bc <strlen@plt>
   2d8bc:	mov	r3, r0
   2d8c0:	add	r3, r3, #12
   2d8c4:	bic	r3, r3, #3
   2d8c8:	mov	r0, r3
   2d8cc:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   2d8d0:	mov	r3, r0
   2d8d4:	str	r3, [fp, #-8]
   2d8d8:	ldr	r3, [fp, #-8]
   2d8dc:	add	r3, r3, #8
   2d8e0:	ldr	r1, [fp, #-16]
   2d8e4:	mov	r0, r3
   2d8e8:	bl	1226c <strcpy@plt>
   2d8ec:	ldr	r3, [fp, #-12]
   2d8f0:	cmp	r3, #0
   2d8f4:	beq	2d92c <__assert_fail@plt+0x1b240>
   2d8f8:	ldr	r3, [fp, #-12]
   2d8fc:	ldr	r2, [r3, #8]
   2d900:	ldr	r3, [fp, #-8]
   2d904:	str	r2, [r3]
   2d908:	ldr	r3, [pc, #72]	; 2d958 <__assert_fail@plt+0x1b26c>
   2d90c:	ldr	r2, [r3]
   2d910:	ldr	r3, [fp, #-8]
   2d914:	str	r2, [r3, #4]
   2d918:	ldr	r2, [pc, #56]	; 2d958 <__assert_fail@plt+0x1b26c>
   2d91c:	ldr	r3, [fp, #-8]
   2d920:	str	r3, [r2]
   2d924:	ldr	r3, [fp, #-8]
   2d928:	b	2d94c <__assert_fail@plt+0x1b260>
   2d92c:	ldr	r3, [pc, #40]	; 2d95c <__assert_fail@plt+0x1b270>
   2d930:	ldr	r2, [r3]
   2d934:	ldr	r3, [fp, #-8]
   2d938:	str	r2, [r3, #4]
   2d93c:	ldr	r2, [pc, #24]	; 2d95c <__assert_fail@plt+0x1b270>
   2d940:	ldr	r3, [fp, #-8]
   2d944:	str	r3, [r2]
   2d948:	mov	r3, #0
   2d94c:	mov	r0, r3
   2d950:	sub	sp, fp, #4
   2d954:	pop	{fp, pc}
   2d958:	ldrdeq	ip, [r7], -r4
   2d95c:	ldrdeq	ip, [r7], -r8
   2d960:	push	{fp, lr}
   2d964:	add	fp, sp, #4
   2d968:	sub	sp, sp, #24
   2d96c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d970:	mov	r3, #0
   2d974:	str	r3, [fp, #-12]
   2d978:	ldr	r3, [pc, #260]	; 2da84 <__assert_fail@plt+0x1b398>
   2d97c:	ldr	r3, [r3]
   2d980:	str	r3, [fp, #-8]
   2d984:	b	2d9b4 <__assert_fail@plt+0x1b2c8>
   2d988:	ldr	r3, [fp, #-8]
   2d98c:	ldr	r2, [r3]
   2d990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d994:	cmp	r2, r3
   2d998:	bne	2d9a8 <__assert_fail@plt+0x1b2bc>
   2d99c:	ldr	r3, [fp, #-8]
   2d9a0:	str	r3, [fp, #-12]
   2d9a4:	b	2d9c0 <__assert_fail@plt+0x1b2d4>
   2d9a8:	ldr	r3, [fp, #-8]
   2d9ac:	ldr	r3, [r3, #4]
   2d9b0:	str	r3, [fp, #-8]
   2d9b4:	ldr	r3, [fp, #-8]
   2d9b8:	cmp	r3, #0
   2d9bc:	bne	2d988 <__assert_fail@plt+0x1b29c>
   2d9c0:	ldr	r3, [fp, #-12]
   2d9c4:	cmp	r3, #0
   2d9c8:	bne	2da58 <__assert_fail@plt+0x1b36c>
   2d9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9d0:	bl	126c8 <getgrgid@plt>
   2d9d4:	str	r0, [fp, #-16]
   2d9d8:	ldr	r3, [fp, #-16]
   2d9dc:	cmp	r3, #0
   2d9e0:	beq	2d9f0 <__assert_fail@plt+0x1b304>
   2d9e4:	ldr	r3, [fp, #-16]
   2d9e8:	ldr	r3, [r3]
   2d9ec:	b	2d9f4 <__assert_fail@plt+0x1b308>
   2d9f0:	ldr	r3, [pc, #144]	; 2da88 <__assert_fail@plt+0x1b39c>
   2d9f4:	str	r3, [fp, #-20]	; 0xffffffec
   2d9f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d9fc:	bl	123bc <strlen@plt>
   2da00:	mov	r3, r0
   2da04:	add	r3, r3, #12
   2da08:	bic	r3, r3, #3
   2da0c:	mov	r0, r3
   2da10:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   2da14:	mov	r3, r0
   2da18:	str	r3, [fp, #-12]
   2da1c:	ldr	r3, [fp, #-12]
   2da20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da24:	str	r2, [r3]
   2da28:	ldr	r3, [fp, #-12]
   2da2c:	add	r3, r3, #8
   2da30:	ldr	r1, [fp, #-20]	; 0xffffffec
   2da34:	mov	r0, r3
   2da38:	bl	1226c <strcpy@plt>
   2da3c:	ldr	r3, [pc, #64]	; 2da84 <__assert_fail@plt+0x1b398>
   2da40:	ldr	r2, [r3]
   2da44:	ldr	r3, [fp, #-12]
   2da48:	str	r2, [r3, #4]
   2da4c:	ldr	r2, [pc, #48]	; 2da84 <__assert_fail@plt+0x1b398>
   2da50:	ldr	r3, [fp, #-12]
   2da54:	str	r3, [r2]
   2da58:	ldr	r3, [fp, #-12]
   2da5c:	ldrb	r3, [r3, #8]
   2da60:	cmp	r3, #0
   2da64:	beq	2da74 <__assert_fail@plt+0x1b388>
   2da68:	ldr	r3, [fp, #-12]
   2da6c:	add	r3, r3, #8
   2da70:	b	2da78 <__assert_fail@plt+0x1b38c>
   2da74:	mov	r3, #0
   2da78:	mov	r0, r3
   2da7c:	sub	sp, fp, #4
   2da80:	pop	{fp, pc}
   2da84:	ldrdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   2da88:	andeq	r8, r6, r4, ror r9
   2da8c:	push	{fp, lr}
   2da90:	add	fp, sp, #4
   2da94:	sub	sp, sp, #16
   2da98:	str	r0, [fp, #-16]
   2da9c:	ldr	r3, [pc, #376]	; 2dc1c <__assert_fail@plt+0x1b530>
   2daa0:	ldr	r3, [r3]
   2daa4:	str	r3, [fp, #-8]
   2daa8:	b	2daf8 <__assert_fail@plt+0x1b40c>
   2daac:	ldr	r3, [fp, #-8]
   2dab0:	ldrb	r2, [r3, #8]
   2dab4:	ldr	r3, [fp, #-16]
   2dab8:	ldrb	r3, [r3]
   2dabc:	cmp	r2, r3
   2dac0:	bne	2daec <__assert_fail@plt+0x1b400>
   2dac4:	ldr	r3, [fp, #-8]
   2dac8:	add	r3, r3, #8
   2dacc:	ldr	r1, [fp, #-16]
   2dad0:	mov	r0, r3
   2dad4:	bl	11ffc <strcmp@plt>
   2dad8:	mov	r3, r0
   2dadc:	cmp	r3, #0
   2dae0:	bne	2daec <__assert_fail@plt+0x1b400>
   2dae4:	ldr	r3, [fp, #-8]
   2dae8:	b	2dc10 <__assert_fail@plt+0x1b524>
   2daec:	ldr	r3, [fp, #-8]
   2daf0:	ldr	r3, [r3, #4]
   2daf4:	str	r3, [fp, #-8]
   2daf8:	ldr	r3, [fp, #-8]
   2dafc:	cmp	r3, #0
   2db00:	bne	2daac <__assert_fail@plt+0x1b3c0>
   2db04:	ldr	r3, [pc, #276]	; 2dc20 <__assert_fail@plt+0x1b534>
   2db08:	ldr	r3, [r3]
   2db0c:	str	r3, [fp, #-8]
   2db10:	b	2db60 <__assert_fail@plt+0x1b474>
   2db14:	ldr	r3, [fp, #-8]
   2db18:	ldrb	r2, [r3, #8]
   2db1c:	ldr	r3, [fp, #-16]
   2db20:	ldrb	r3, [r3]
   2db24:	cmp	r2, r3
   2db28:	bne	2db54 <__assert_fail@plt+0x1b468>
   2db2c:	ldr	r3, [fp, #-8]
   2db30:	add	r3, r3, #8
   2db34:	ldr	r1, [fp, #-16]
   2db38:	mov	r0, r3
   2db3c:	bl	11ffc <strcmp@plt>
   2db40:	mov	r3, r0
   2db44:	cmp	r3, #0
   2db48:	bne	2db54 <__assert_fail@plt+0x1b468>
   2db4c:	mov	r3, #0
   2db50:	b	2dc10 <__assert_fail@plt+0x1b524>
   2db54:	ldr	r3, [fp, #-8]
   2db58:	ldr	r3, [r3, #4]
   2db5c:	str	r3, [fp, #-8]
   2db60:	ldr	r3, [fp, #-8]
   2db64:	cmp	r3, #0
   2db68:	bne	2db14 <__assert_fail@plt+0x1b428>
   2db6c:	ldr	r0, [fp, #-16]
   2db70:	bl	126d4 <getgrnam@plt>
   2db74:	str	r0, [fp, #-12]
   2db78:	ldr	r0, [fp, #-16]
   2db7c:	bl	123bc <strlen@plt>
   2db80:	mov	r3, r0
   2db84:	add	r3, r3, #12
   2db88:	bic	r3, r3, #3
   2db8c:	mov	r0, r3
   2db90:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   2db94:	mov	r3, r0
   2db98:	str	r3, [fp, #-8]
   2db9c:	ldr	r3, [fp, #-8]
   2dba0:	add	r3, r3, #8
   2dba4:	ldr	r1, [fp, #-16]
   2dba8:	mov	r0, r3
   2dbac:	bl	1226c <strcpy@plt>
   2dbb0:	ldr	r3, [fp, #-12]
   2dbb4:	cmp	r3, #0
   2dbb8:	beq	2dbf0 <__assert_fail@plt+0x1b504>
   2dbbc:	ldr	r3, [fp, #-12]
   2dbc0:	ldr	r2, [r3, #8]
   2dbc4:	ldr	r3, [fp, #-8]
   2dbc8:	str	r2, [r3]
   2dbcc:	ldr	r3, [pc, #72]	; 2dc1c <__assert_fail@plt+0x1b530>
   2dbd0:	ldr	r2, [r3]
   2dbd4:	ldr	r3, [fp, #-8]
   2dbd8:	str	r2, [r3, #4]
   2dbdc:	ldr	r2, [pc, #56]	; 2dc1c <__assert_fail@plt+0x1b530>
   2dbe0:	ldr	r3, [fp, #-8]
   2dbe4:	str	r3, [r2]
   2dbe8:	ldr	r3, [fp, #-8]
   2dbec:	b	2dc10 <__assert_fail@plt+0x1b524>
   2dbf0:	ldr	r3, [pc, #40]	; 2dc20 <__assert_fail@plt+0x1b534>
   2dbf4:	ldr	r2, [r3]
   2dbf8:	ldr	r3, [fp, #-8]
   2dbfc:	str	r2, [r3, #4]
   2dc00:	ldr	r2, [pc, #24]	; 2dc20 <__assert_fail@plt+0x1b534>
   2dc04:	ldr	r3, [fp, #-8]
   2dc08:	str	r3, [r2]
   2dc0c:	mov	r3, #0
   2dc10:	mov	r0, r3
   2dc14:	sub	sp, fp, #4
   2dc18:	pop	{fp, pc}
   2dc1c:	ldrdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   2dc20:	andeq	ip, r7, r0, ror #29
   2dc24:	push	{r4, r5, r6, r7, fp, lr}
   2dc28:	add	fp, sp, #20
   2dc2c:	sub	sp, sp, #56	; 0x38
   2dc30:	str	r0, [fp, #-64]	; 0xffffffc0
   2dc34:	str	r1, [fp, #-68]	; 0xffffffbc
   2dc38:	str	r2, [fp, #-72]	; 0xffffffb8
   2dc3c:	str	r3, [fp, #-76]	; 0xffffffb4
   2dc40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2dc44:	str	r3, [fp, #-44]	; 0xffffffd4
   2dc48:	mov	r1, #0
   2dc4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dc50:	mov	r2, r3
   2dc54:	mov	r3, #0
   2dc58:	lsl	r5, r3, #2
   2dc5c:	orr	r5, r5, r2, lsr #30
   2dc60:	lsl	r4, r2, #2
   2dc64:	mov	r6, r5
   2dc68:	mov	r7, #0
   2dc6c:	cmp	r6, #0
   2dc70:	beq	2dc78 <__assert_fail@plt+0x1b58c>
   2dc74:	mov	r1, #1
   2dc78:	cmp	r4, #0
   2dc7c:	bge	2dc84 <__assert_fail@plt+0x1b598>
   2dc80:	mov	r1, #1
   2dc84:	mov	r3, r4
   2dc88:	str	r3, [fp, #-56]	; 0xffffffc8
   2dc8c:	mov	r3, r1
   2dc90:	and	r3, r3, #1
   2dc94:	uxtb	r3, r3
   2dc98:	cmp	r3, #0
   2dc9c:	bne	2dd08 <__assert_fail@plt+0x1b61c>
   2dca0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dca4:	lsl	r3, r3, #2
   2dca8:	cmp	r3, #4016	; 0xfb0
   2dcac:	bhi	2dcf0 <__assert_fail@plt+0x1b604>
   2dcb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dcb4:	add	r3, r3, #4
   2dcb8:	lsl	r3, r3, #2
   2dcbc:	sub	r3, r3, #1
   2dcc0:	add	r3, r3, #7
   2dcc4:	add	r3, r3, #7
   2dcc8:	lsr	r3, r3, #3
   2dccc:	lsl	r3, r3, #3
   2dcd0:	sub	sp, sp, r3
   2dcd4:	mov	r3, sp
   2dcd8:	add	r3, r3, #7
   2dcdc:	lsr	r3, r3, #3
   2dce0:	lsl	r3, r3, #3
   2dce4:	add	r3, r3, #15
   2dce8:	bic	r3, r3, #15
   2dcec:	b	2dd0c <__assert_fail@plt+0x1b620>
   2dcf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dcf4:	lsl	r3, r3, #2
   2dcf8:	mov	r0, r3
   2dcfc:	bl	602e4 <__assert_fail@plt+0x4dbf8>
   2dd00:	mov	r3, r0
   2dd04:	b	2dd0c <__assert_fail@plt+0x1b620>
   2dd08:	mov	r3, #0
   2dd0c:	str	r3, [fp, #-48]	; 0xffffffd0
   2dd10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dd14:	cmp	r3, #0
   2dd18:	bne	2dd24 <__assert_fail@plt+0x1b638>
   2dd1c:	mov	r3, #0
   2dd20:	b	2df18 <__assert_fail@plt+0x1b82c>
   2dd24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dd28:	add	r3, r3, #4
   2dd2c:	mov	r2, #1
   2dd30:	str	r2, [r3]
   2dd34:	mov	r3, #0
   2dd38:	str	r3, [fp, #-28]	; 0xffffffe4
   2dd3c:	mov	r3, #2
   2dd40:	str	r3, [fp, #-24]	; 0xffffffe8
   2dd44:	b	2de04 <__assert_fail@plt+0x1b718>
   2dd48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dd4c:	sub	r3, r3, #1
   2dd50:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2dd54:	add	r3, r2, r3
   2dd58:	ldrb	r3, [r3]
   2dd5c:	strb	r3, [fp, #-49]	; 0xffffffcf
   2dd60:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2dd64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dd68:	add	r3, r2, r3
   2dd6c:	ldrb	r3, [r3]
   2dd70:	ldrb	r2, [fp, #-49]	; 0xffffffcf
   2dd74:	cmp	r2, r3
   2dd78:	bne	2ddac <__assert_fail@plt+0x1b6c0>
   2dd7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dd80:	lsl	r3, r3, #2
   2dd84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2dd88:	add	r3, r2, r3
   2dd8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dd90:	add	r2, r2, #1
   2dd94:	str	r2, [fp, #-28]	; 0xffffffe4
   2dd98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dd9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dda0:	sub	r2, r1, r2
   2dda4:	str	r2, [r3]
   2dda8:	b	2ddf8 <__assert_fail@plt+0x1b70c>
   2ddac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ddb0:	cmp	r3, #0
   2ddb4:	bne	2ddd4 <__assert_fail@plt+0x1b6e8>
   2ddb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ddbc:	lsl	r3, r3, #2
   2ddc0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ddc4:	add	r3, r2, r3
   2ddc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ddcc:	str	r2, [r3]
   2ddd0:	b	2ddf8 <__assert_fail@plt+0x1b70c>
   2ddd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ddd8:	lsl	r3, r3, #2
   2dddc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2dde0:	add	r3, r2, r3
   2dde4:	ldr	r3, [r3]
   2dde8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ddec:	sub	r3, r2, r3
   2ddf0:	str	r3, [fp, #-28]	; 0xffffffe4
   2ddf4:	b	2dd60 <__assert_fail@plt+0x1b674>
   2ddf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ddfc:	add	r3, r3, #1
   2de00:	str	r3, [fp, #-24]	; 0xffffffe8
   2de04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2de08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2de0c:	cmp	r2, r3
   2de10:	bcc	2dd48 <__assert_fail@plt+0x1b65c>
   2de14:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2de18:	mov	r2, #0
   2de1c:	str	r2, [r3]
   2de20:	mov	r3, #0
   2de24:	str	r3, [fp, #-32]	; 0xffffffe0
   2de28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2de2c:	str	r3, [fp, #-36]	; 0xffffffdc
   2de30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2de34:	str	r3, [fp, #-40]	; 0xffffffd8
   2de38:	b	2defc <__assert_fail@plt+0x1b810>
   2de3c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2de40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de44:	add	r3, r2, r3
   2de48:	ldrb	r2, [r3]
   2de4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de50:	ldrb	r3, [r3]
   2de54:	cmp	r2, r3
   2de58:	bne	2de94 <__assert_fail@plt+0x1b7a8>
   2de5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de60:	add	r3, r3, #1
   2de64:	str	r3, [fp, #-32]	; 0xffffffe0
   2de68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de6c:	add	r3, r3, #1
   2de70:	str	r3, [fp, #-40]	; 0xffffffd8
   2de74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2de78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2de7c:	cmp	r2, r3
   2de80:	bne	2defc <__assert_fail@plt+0x1b810>
   2de84:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2de88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2de8c:	str	r2, [r3]
   2de90:	b	2df0c <__assert_fail@plt+0x1b820>
   2de94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de98:	cmp	r3, #0
   2de9c:	beq	2dee4 <__assert_fail@plt+0x1b7f8>
   2dea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dea4:	lsl	r3, r3, #2
   2dea8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2deac:	add	r3, r2, r3
   2deb0:	ldr	r3, [r3]
   2deb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2deb8:	add	r3, r2, r3
   2debc:	str	r3, [fp, #-36]	; 0xffffffdc
   2dec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dec4:	lsl	r3, r3, #2
   2dec8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2decc:	add	r3, r2, r3
   2ded0:	ldr	r3, [r3]
   2ded4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ded8:	sub	r3, r2, r3
   2dedc:	str	r3, [fp, #-32]	; 0xffffffe0
   2dee0:	b	2defc <__assert_fail@plt+0x1b810>
   2dee4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dee8:	add	r3, r3, #1
   2deec:	str	r3, [fp, #-36]	; 0xffffffdc
   2def0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2def4:	add	r3, r3, #1
   2def8:	str	r3, [fp, #-40]	; 0xffffffd8
   2defc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df00:	ldrb	r3, [r3]
   2df04:	cmp	r3, #0
   2df08:	bne	2de3c <__assert_fail@plt+0x1b750>
   2df0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2df10:	bl	60488 <__assert_fail@plt+0x4dd9c>
   2df14:	mov	r3, #1
   2df18:	mov	r0, r3
   2df1c:	sub	sp, fp, #20
   2df20:	pop	{r4, r5, r6, r7, fp, pc}
   2df24:	push	{r4, r5, fp, lr}
   2df28:	add	fp, sp, #12
   2df2c:	sub	sp, sp, #176	; 0xb0
   2df30:	str	r0, [fp, #-176]	; 0xffffff50
   2df34:	str	r1, [fp, #-180]	; 0xffffff4c
   2df38:	str	r2, [fp, #-184]	; 0xffffff48
   2df3c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   2df40:	bl	60660 <__assert_fail@plt+0x4df74>
   2df44:	str	r0, [fp, #-36]	; 0xffffffdc
   2df48:	mov	r1, #0
   2df4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df50:	mov	r2, #44	; 0x2c
   2df54:	umull	r2, r3, r3, r2
   2df58:	mov	r4, r3
   2df5c:	mov	r5, #0
   2df60:	cmp	r4, #0
   2df64:	beq	2df6c <__assert_fail@plt+0x1b880>
   2df68:	mov	r1, #1
   2df6c:	cmp	r2, #0
   2df70:	bge	2df78 <__assert_fail@plt+0x1b88c>
   2df74:	mov	r1, #1
   2df78:	mov	r3, r2
   2df7c:	str	r3, [fp, #-60]	; 0xffffffc4
   2df80:	mov	r3, r1
   2df84:	and	r3, r3, #1
   2df88:	uxtb	r3, r3
   2df8c:	cmp	r3, #0
   2df90:	bne	2e004 <__assert_fail@plt+0x1b918>
   2df94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df98:	mov	r2, #44	; 0x2c
   2df9c:	mul	r3, r2, r3
   2dfa0:	cmp	r3, #4016	; 0xfb0
   2dfa4:	bhi	2dfe8 <__assert_fail@plt+0x1b8fc>
   2dfa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dfac:	mov	r2, #44	; 0x2c
   2dfb0:	mul	r3, r2, r3
   2dfb4:	add	r3, r3, #15
   2dfb8:	add	r3, r3, #7
   2dfbc:	add	r3, r3, #7
   2dfc0:	lsr	r3, r3, #3
   2dfc4:	lsl	r3, r3, #3
   2dfc8:	sub	sp, sp, r3
   2dfcc:	mov	r3, sp
   2dfd0:	add	r3, r3, #7
   2dfd4:	lsr	r3, r3, #3
   2dfd8:	lsl	r3, r3, #3
   2dfdc:	add	r3, r3, #15
   2dfe0:	bic	r3, r3, #15
   2dfe4:	b	2e008 <__assert_fail@plt+0x1b91c>
   2dfe8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dfec:	mov	r2, #44	; 0x2c
   2dff0:	mul	r3, r2, r3
   2dff4:	mov	r0, r3
   2dff8:	bl	602e4 <__assert_fail@plt+0x4dbf8>
   2dffc:	mov	r3, r0
   2e000:	b	2e008 <__assert_fail@plt+0x1b91c>
   2e004:	mov	r3, #0
   2e008:	str	r3, [fp, #-40]	; 0xffffffd8
   2e00c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e010:	cmp	r3, #0
   2e014:	bne	2e020 <__assert_fail@plt+0x1b934>
   2e018:	mov	r3, #0
   2e01c:	b	2e668 <__assert_fail@plt+0x1bf7c>
   2e020:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e024:	str	r3, [fp, #-44]	; 0xffffffd4
   2e028:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e02c:	mov	r3, r2
   2e030:	lsl	r3, r3, #2
   2e034:	add	r3, r3, r2
   2e038:	lsl	r3, r3, #3
   2e03c:	mov	r2, r3
   2e040:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e044:	add	r3, r3, r2
   2e048:	str	r3, [fp, #-48]	; 0xffffffd0
   2e04c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e050:	str	r3, [fp, #-52]	; 0xffffffcc
   2e054:	mov	r3, #0
   2e058:	str	r3, [fp, #-16]
   2e05c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   2e060:	str	r3, [fp, #-100]	; 0xffffff9c
   2e064:	mov	r3, #0
   2e068:	strb	r3, [fp, #-116]	; 0xffffff8c
   2e06c:	sub	r3, fp, #116	; 0x74
   2e070:	add	r3, r3, #4
   2e074:	mov	r2, #8
   2e078:	mov	r1, #0
   2e07c:	mov	r0, r3
   2e080:	bl	12434 <memset@plt>
   2e084:	mov	r3, #0
   2e088:	strb	r3, [fp, #-104]	; 0xffffff98
   2e08c:	b	2e0e8 <__assert_fail@plt+0x1b9fc>
   2e090:	ldr	r2, [fp, #-16]
   2e094:	mov	r3, r2
   2e098:	lsl	r3, r3, #2
   2e09c:	add	r3, r3, r2
   2e0a0:	lsl	r3, r3, #3
   2e0a4:	mov	r2, r3
   2e0a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e0ac:	add	r2, r3, r2
   2e0b0:	sub	r3, fp, #116	; 0x74
   2e0b4:	add	r3, r3, #16
   2e0b8:	mov	r1, r3
   2e0bc:	mov	r0, r2
   2e0c0:	bl	60544 <__assert_fail@plt+0x4de58>
   2e0c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2e0c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e0cc:	add	r3, r2, r3
   2e0d0:	str	r3, [fp, #-100]	; 0xffffff9c
   2e0d4:	mov	r3, #0
   2e0d8:	strb	r3, [fp, #-104]	; 0xffffff98
   2e0dc:	ldr	r3, [fp, #-16]
   2e0e0:	add	r3, r3, #1
   2e0e4:	str	r3, [fp, #-16]
   2e0e8:	sub	r3, fp, #116	; 0x74
   2e0ec:	mov	r0, r3
   2e0f0:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e0f4:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   2e0f8:	eor	r3, r3, #1
   2e0fc:	uxtb	r3, r3
   2e100:	cmp	r3, #0
   2e104:	bne	2e114 <__assert_fail@plt+0x1ba28>
   2e108:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e10c:	cmp	r3, #0
   2e110:	beq	2e11c <__assert_fail@plt+0x1ba30>
   2e114:	mov	r3, #1
   2e118:	b	2e120 <__assert_fail@plt+0x1ba34>
   2e11c:	mov	r3, #0
   2e120:	cmp	r3, #0
   2e124:	bne	2e090 <__assert_fail@plt+0x1b9a4>
   2e128:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e12c:	add	r3, r3, #4
   2e130:	mov	r2, #1
   2e134:	str	r2, [r3]
   2e138:	mov	r3, #0
   2e13c:	str	r3, [fp, #-24]	; 0xffffffe8
   2e140:	mov	r3, #2
   2e144:	str	r3, [fp, #-20]	; 0xffffffec
   2e148:	b	2e30c <__assert_fail@plt+0x1bc20>
   2e14c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e150:	mov	r3, r2
   2e154:	lsl	r3, r3, #2
   2e158:	add	r3, r3, r2
   2e15c:	lsl	r3, r3, #3
   2e160:	sub	r3, r3, #40	; 0x28
   2e164:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2e168:	add	r3, r2, r3
   2e16c:	str	r3, [fp, #-56]	; 0xffffffc8
   2e170:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e174:	ldrb	r3, [r3, #8]
   2e178:	cmp	r3, #0
   2e17c:	beq	2e1ec <__assert_fail@plt+0x1bb00>
   2e180:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e184:	mov	r3, r2
   2e188:	lsl	r3, r3, #2
   2e18c:	add	r3, r3, r2
   2e190:	lsl	r3, r3, #3
   2e194:	mov	r2, r3
   2e198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e19c:	add	r3, r3, r2
   2e1a0:	ldrb	r3, [r3, #8]
   2e1a4:	cmp	r3, #0
   2e1a8:	beq	2e1ec <__assert_fail@plt+0x1bb00>
   2e1ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e1b0:	ldr	r1, [r3, #12]
   2e1b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e1b8:	mov	r3, r2
   2e1bc:	lsl	r3, r3, #2
   2e1c0:	add	r3, r3, r2
   2e1c4:	lsl	r3, r3, #3
   2e1c8:	mov	r2, r3
   2e1cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e1d0:	add	r3, r3, r2
   2e1d4:	ldr	r3, [r3, #12]
   2e1d8:	cmp	r1, r3
   2e1dc:	moveq	r3, #1
   2e1e0:	movne	r3, #0
   2e1e4:	uxtb	r3, r3
   2e1e8:	b	2e27c <__assert_fail@plt+0x1bb90>
   2e1ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e1f0:	ldr	r1, [r3, #4]
   2e1f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e1f8:	mov	r3, r2
   2e1fc:	lsl	r3, r3, #2
   2e200:	add	r3, r3, r2
   2e204:	lsl	r3, r3, #3
   2e208:	mov	r2, r3
   2e20c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e210:	add	r3, r3, r2
   2e214:	ldr	r3, [r3, #4]
   2e218:	cmp	r1, r3
   2e21c:	bne	2e270 <__assert_fail@plt+0x1bb84>
   2e220:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e224:	ldr	r0, [r3]
   2e228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e22c:	mov	r3, r2
   2e230:	lsl	r3, r3, #2
   2e234:	add	r3, r3, r2
   2e238:	lsl	r3, r3, #3
   2e23c:	mov	r2, r3
   2e240:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e244:	add	r3, r3, r2
   2e248:	ldr	r1, [r3]
   2e24c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e250:	ldr	r3, [r3, #4]
   2e254:	mov	r2, r3
   2e258:	bl	12158 <memcmp@plt>
   2e25c:	mov	r3, r0
   2e260:	cmp	r3, #0
   2e264:	bne	2e270 <__assert_fail@plt+0x1bb84>
   2e268:	mov	r3, #1
   2e26c:	b	2e274 <__assert_fail@plt+0x1bb88>
   2e270:	mov	r3, #0
   2e274:	and	r3, r3, #1
   2e278:	uxtb	r3, r3
   2e27c:	cmp	r3, #0
   2e280:	beq	2e2b4 <__assert_fail@plt+0x1bbc8>
   2e284:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e288:	lsl	r3, r3, #2
   2e28c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e290:	add	r3, r2, r3
   2e294:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e298:	add	r2, r2, #1
   2e29c:	str	r2, [fp, #-24]	; 0xffffffe8
   2e2a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e2a8:	sub	r2, r1, r2
   2e2ac:	str	r2, [r3]
   2e2b0:	b	2e300 <__assert_fail@plt+0x1bc14>
   2e2b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2b8:	cmp	r3, #0
   2e2bc:	bne	2e2dc <__assert_fail@plt+0x1bbf0>
   2e2c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2c4:	lsl	r3, r3, #2
   2e2c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e2cc:	add	r3, r2, r3
   2e2d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e2d4:	str	r2, [r3]
   2e2d8:	b	2e300 <__assert_fail@plt+0x1bc14>
   2e2dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2e0:	lsl	r3, r3, #2
   2e2e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e2e8:	add	r3, r2, r3
   2e2ec:	ldr	r3, [r3]
   2e2f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e2f4:	sub	r3, r2, r3
   2e2f8:	str	r3, [fp, #-24]	; 0xffffffe8
   2e2fc:	b	2e170 <__assert_fail@plt+0x1ba84>
   2e300:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e304:	add	r3, r3, #1
   2e308:	str	r3, [fp, #-20]	; 0xffffffec
   2e30c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e310:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e314:	cmp	r2, r3
   2e318:	bcc	2e14c <__assert_fail@plt+0x1ba60>
   2e31c:	ldr	r3, [fp, #-184]	; 0xffffff48
   2e320:	mov	r2, #0
   2e324:	str	r2, [r3]
   2e328:	mov	r3, #0
   2e32c:	str	r3, [fp, #-28]	; 0xffffffe4
   2e330:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e334:	str	r3, [fp, #-156]	; 0xffffff64
   2e338:	mov	r3, #0
   2e33c:	strb	r3, [fp, #-172]	; 0xffffff54
   2e340:	sub	r3, fp, #172	; 0xac
   2e344:	add	r3, r3, #4
   2e348:	mov	r2, #8
   2e34c:	mov	r1, #0
   2e350:	mov	r0, r3
   2e354:	bl	12434 <memset@plt>
   2e358:	mov	r3, #0
   2e35c:	strb	r3, [fp, #-160]	; 0xffffff60
   2e360:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e364:	str	r3, [fp, #-100]	; 0xffffff9c
   2e368:	mov	r3, #0
   2e36c:	strb	r3, [fp, #-116]	; 0xffffff8c
   2e370:	sub	r3, fp, #116	; 0x74
   2e374:	add	r3, r3, #4
   2e378:	mov	r2, #8
   2e37c:	mov	r1, #0
   2e380:	mov	r0, r3
   2e384:	bl	12434 <memset@plt>
   2e388:	mov	r3, #0
   2e38c:	strb	r3, [fp, #-104]	; 0xffffff98
   2e390:	b	2e61c <__assert_fail@plt+0x1bf30>
   2e394:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e398:	mov	r3, r2
   2e39c:	lsl	r3, r3, #2
   2e3a0:	add	r3, r3, r2
   2e3a4:	lsl	r3, r3, #3
   2e3a8:	mov	r2, r3
   2e3ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e3b0:	add	r3, r3, r2
   2e3b4:	ldrb	r3, [r3, #8]
   2e3b8:	cmp	r3, #0
   2e3bc:	beq	2e408 <__assert_fail@plt+0x1bd1c>
   2e3c0:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   2e3c4:	cmp	r3, #0
   2e3c8:	beq	2e408 <__assert_fail@plt+0x1bd1c>
   2e3cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e3d0:	mov	r3, r2
   2e3d4:	lsl	r3, r3, #2
   2e3d8:	add	r3, r3, r2
   2e3dc:	lsl	r3, r3, #3
   2e3e0:	mov	r2, r3
   2e3e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e3e8:	add	r3, r3, r2
   2e3ec:	ldr	r2, [r3, #12]
   2e3f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e3f4:	cmp	r2, r3
   2e3f8:	moveq	r3, #1
   2e3fc:	movne	r3, #0
   2e400:	uxtb	r3, r3
   2e404:	b	2e4ac <__assert_fail@plt+0x1bdc0>
   2e408:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e40c:	mov	r3, r2
   2e410:	lsl	r3, r3, #2
   2e414:	add	r3, r3, r2
   2e418:	lsl	r3, r3, #3
   2e41c:	mov	r2, r3
   2e420:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e424:	add	r3, r3, r2
   2e428:	ldr	r2, [r3, #4]
   2e42c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e430:	cmp	r2, r3
   2e434:	bne	2e4a0 <__assert_fail@plt+0x1bdb4>
   2e438:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e43c:	mov	r3, r2
   2e440:	lsl	r3, r3, #2
   2e444:	add	r3, r3, r2
   2e448:	lsl	r3, r3, #3
   2e44c:	mov	r2, r3
   2e450:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e454:	add	r3, r3, r2
   2e458:	ldr	r0, [r3]
   2e45c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2e460:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e464:	mov	r3, r2
   2e468:	lsl	r3, r3, #2
   2e46c:	add	r3, r3, r2
   2e470:	lsl	r3, r3, #3
   2e474:	mov	r2, r3
   2e478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e47c:	add	r3, r3, r2
   2e480:	ldr	r3, [r3, #4]
   2e484:	mov	r2, r3
   2e488:	bl	12158 <memcmp@plt>
   2e48c:	mov	r3, r0
   2e490:	cmp	r3, #0
   2e494:	bne	2e4a0 <__assert_fail@plt+0x1bdb4>
   2e498:	mov	r3, #1
   2e49c:	b	2e4a4 <__assert_fail@plt+0x1bdb8>
   2e4a0:	mov	r3, #0
   2e4a4:	and	r3, r3, #1
   2e4a8:	uxtb	r3, r3
   2e4ac:	cmp	r3, #0
   2e4b0:	beq	2e4f8 <__assert_fail@plt+0x1be0c>
   2e4b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e4b8:	add	r3, r3, #1
   2e4bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2e4c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2e4c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e4c8:	add	r3, r2, r3
   2e4cc:	str	r3, [fp, #-100]	; 0xffffff9c
   2e4d0:	mov	r3, #0
   2e4d4:	strb	r3, [fp, #-104]	; 0xffffff98
   2e4d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e4dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e4e0:	cmp	r2, r3
   2e4e4:	bne	2e61c <__assert_fail@plt+0x1bf30>
   2e4e8:	ldr	r2, [fp, #-156]	; 0xffffff64
   2e4ec:	ldr	r3, [fp, #-184]	; 0xffffff48
   2e4f0:	str	r2, [r3]
   2e4f4:	b	2e65c <__assert_fail@plt+0x1bf70>
   2e4f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e4fc:	cmp	r3, #0
   2e500:	beq	2e5a8 <__assert_fail@plt+0x1bebc>
   2e504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e508:	lsl	r3, r3, #2
   2e50c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e510:	add	r3, r2, r3
   2e514:	ldr	r3, [r3]
   2e518:	str	r3, [fp, #-32]	; 0xffffffe0
   2e51c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e524:	sub	r3, r2, r3
   2e528:	str	r3, [fp, #-28]	; 0xffffffe4
   2e52c:	b	2e598 <__assert_fail@plt+0x1beac>
   2e530:	sub	r3, fp, #172	; 0xac
   2e534:	mov	r0, r3
   2e538:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e53c:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   2e540:	eor	r3, r3, #1
   2e544:	uxtb	r3, r3
   2e548:	cmp	r3, #0
   2e54c:	bne	2e55c <__assert_fail@plt+0x1be70>
   2e550:	ldr	r3, [fp, #-144]	; 0xffffff70
   2e554:	cmp	r3, #0
   2e558:	beq	2e564 <__assert_fail@plt+0x1be78>
   2e55c:	mov	r3, #1
   2e560:	b	2e568 <__assert_fail@plt+0x1be7c>
   2e564:	mov	r3, #0
   2e568:	cmp	r3, #0
   2e56c:	bne	2e574 <__assert_fail@plt+0x1be88>
   2e570:	bl	12698 <abort@plt>
   2e574:	ldr	r2, [fp, #-156]	; 0xffffff64
   2e578:	ldr	r3, [fp, #-152]	; 0xffffff68
   2e57c:	add	r3, r2, r3
   2e580:	str	r3, [fp, #-156]	; 0xffffff64
   2e584:	mov	r3, #0
   2e588:	strb	r3, [fp, #-160]	; 0xffffff60
   2e58c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e590:	sub	r3, r3, #1
   2e594:	str	r3, [fp, #-32]	; 0xffffffe0
   2e598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e59c:	cmp	r3, #0
   2e5a0:	bne	2e530 <__assert_fail@plt+0x1be44>
   2e5a4:	b	2e61c <__assert_fail@plt+0x1bf30>
   2e5a8:	sub	r3, fp, #172	; 0xac
   2e5ac:	mov	r0, r3
   2e5b0:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e5b4:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   2e5b8:	eor	r3, r3, #1
   2e5bc:	uxtb	r3, r3
   2e5c0:	cmp	r3, #0
   2e5c4:	bne	2e5d4 <__assert_fail@plt+0x1bee8>
   2e5c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   2e5cc:	cmp	r3, #0
   2e5d0:	beq	2e5dc <__assert_fail@plt+0x1bef0>
   2e5d4:	mov	r3, #1
   2e5d8:	b	2e5e0 <__assert_fail@plt+0x1bef4>
   2e5dc:	mov	r3, #0
   2e5e0:	cmp	r3, #0
   2e5e4:	bne	2e5ec <__assert_fail@plt+0x1bf00>
   2e5e8:	bl	12698 <abort@plt>
   2e5ec:	ldr	r2, [fp, #-156]	; 0xffffff64
   2e5f0:	ldr	r3, [fp, #-152]	; 0xffffff68
   2e5f4:	add	r3, r2, r3
   2e5f8:	str	r3, [fp, #-156]	; 0xffffff64
   2e5fc:	mov	r3, #0
   2e600:	strb	r3, [fp, #-160]	; 0xffffff60
   2e604:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2e608:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e60c:	add	r3, r2, r3
   2e610:	str	r3, [fp, #-100]	; 0xffffff9c
   2e614:	mov	r3, #0
   2e618:	strb	r3, [fp, #-104]	; 0xffffff98
   2e61c:	sub	r3, fp, #116	; 0x74
   2e620:	mov	r0, r3
   2e624:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e628:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   2e62c:	eor	r3, r3, #1
   2e630:	uxtb	r3, r3
   2e634:	cmp	r3, #0
   2e638:	bne	2e648 <__assert_fail@plt+0x1bf5c>
   2e63c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e640:	cmp	r3, #0
   2e644:	beq	2e650 <__assert_fail@plt+0x1bf64>
   2e648:	mov	r3, #1
   2e64c:	b	2e654 <__assert_fail@plt+0x1bf68>
   2e650:	mov	r3, #0
   2e654:	cmp	r3, #0
   2e658:	bne	2e394 <__assert_fail@plt+0x1bca8>
   2e65c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e660:	bl	60488 <__assert_fail@plt+0x4dd9c>
   2e664:	mov	r3, #1
   2e668:	mov	r0, r3
   2e66c:	sub	sp, fp, #12
   2e670:	pop	{r4, r5, fp, pc}
   2e674:	push	{r4, fp, lr}
   2e678:	add	fp, sp, #8
   2e67c:	sub	sp, sp, #356	; 0x164
   2e680:	str	r0, [fp, #-360]	; 0xfffffe98
   2e684:	str	r1, [fp, #-364]	; 0xfffffe94
   2e688:	bl	12254 <__ctype_get_mb_cur_max@plt>
   2e68c:	mov	r3, r0
   2e690:	cmp	r3, #1
   2e694:	bls	2ebe4 <__assert_fail@plt+0x1c4f8>
   2e698:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e69c:	str	r3, [fp, #-336]	; 0xfffffeb0
   2e6a0:	mov	r3, #0
   2e6a4:	strb	r3, [fp, #-352]	; 0xfffffea0
   2e6a8:	sub	r3, fp, #352	; 0x160
   2e6ac:	add	r3, r3, #4
   2e6b0:	mov	r2, #8
   2e6b4:	mov	r1, #0
   2e6b8:	mov	r0, r3
   2e6bc:	bl	12434 <memset@plt>
   2e6c0:	mov	r3, #0
   2e6c4:	strb	r3, [fp, #-340]	; 0xfffffeac
   2e6c8:	sub	r3, fp, #352	; 0x160
   2e6cc:	mov	r0, r3
   2e6d0:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e6d4:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   2e6d8:	eor	r3, r3, #1
   2e6dc:	uxtb	r3, r3
   2e6e0:	cmp	r3, #0
   2e6e4:	bne	2e6f4 <__assert_fail@plt+0x1c008>
   2e6e8:	ldr	r3, [fp, #-324]	; 0xfffffebc
   2e6ec:	cmp	r3, #0
   2e6f0:	beq	2e6fc <__assert_fail@plt+0x1c010>
   2e6f4:	mov	r3, #1
   2e6f8:	b	2e700 <__assert_fail@plt+0x1c014>
   2e6fc:	mov	r3, #0
   2e700:	cmp	r3, #0
   2e704:	beq	2ebdc <__assert_fail@plt+0x1c4f0>
   2e708:	mov	r3, #1
   2e70c:	strb	r3, [fp, #-13]
   2e710:	mov	r3, #0
   2e714:	str	r3, [fp, #-20]	; 0xffffffec
   2e718:	mov	r3, #0
   2e71c:	str	r3, [fp, #-24]	; 0xffffffe8
   2e720:	mov	r3, #0
   2e724:	str	r3, [fp, #-28]	; 0xffffffe4
   2e728:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e72c:	str	r3, [fp, #-280]	; 0xfffffee8
   2e730:	mov	r3, #0
   2e734:	strb	r3, [fp, #-296]	; 0xfffffed8
   2e738:	sub	r3, fp, #296	; 0x128
   2e73c:	add	r3, r3, #4
   2e740:	mov	r2, #8
   2e744:	mov	r1, #0
   2e748:	mov	r0, r3
   2e74c:	bl	12434 <memset@plt>
   2e750:	mov	r3, #0
   2e754:	strb	r3, [fp, #-284]	; 0xfffffee4
   2e758:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e75c:	str	r3, [fp, #-224]	; 0xffffff20
   2e760:	mov	r3, #0
   2e764:	strb	r3, [fp, #-240]	; 0xffffff10
   2e768:	sub	r3, fp, #240	; 0xf0
   2e76c:	add	r3, r3, #4
   2e770:	mov	r2, #8
   2e774:	mov	r1, #0
   2e778:	mov	r0, r3
   2e77c:	bl	12434 <memset@plt>
   2e780:	mov	r3, #0
   2e784:	strb	r3, [fp, #-228]	; 0xffffff1c
   2e788:	sub	r3, fp, #240	; 0xf0
   2e78c:	mov	r0, r3
   2e790:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e794:	ldrb	r3, [fp, #-216]	; 0xffffff28
   2e798:	eor	r3, r3, #1
   2e79c:	uxtb	r3, r3
   2e7a0:	cmp	r3, #0
   2e7a4:	bne	2e7b4 <__assert_fail@plt+0x1c0c8>
   2e7a8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e7ac:	cmp	r3, #0
   2e7b0:	beq	2e7bc <__assert_fail@plt+0x1c0d0>
   2e7b4:	mov	r3, #1
   2e7b8:	b	2e7c0 <__assert_fail@plt+0x1c0d4>
   2e7bc:	mov	r3, #0
   2e7c0:	cmp	r3, #0
   2e7c4:	bne	2e7d0 <__assert_fail@plt+0x1c0e4>
   2e7c8:	mov	r3, #0
   2e7cc:	b	2edf4 <__assert_fail@plt+0x1c708>
   2e7d0:	ldrb	r3, [fp, #-13]
   2e7d4:	cmp	r3, #0
   2e7d8:	beq	2e908 <__assert_fail@plt+0x1c21c>
   2e7dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e7e0:	cmp	r3, #9
   2e7e4:	bls	2e908 <__assert_fail@plt+0x1c21c>
   2e7e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e7ec:	mov	r3, r2
   2e7f0:	lsl	r3, r3, #2
   2e7f4:	add	r2, r3, r2
   2e7f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e7fc:	cmp	r2, r3
   2e800:	bhi	2e908 <__assert_fail@plt+0x1c21c>
   2e804:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e808:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e80c:	sub	r3, r2, r3
   2e810:	str	r3, [fp, #-32]	; 0xffffffe0
   2e814:	b	2e83c <__assert_fail@plt+0x1c150>
   2e818:	ldr	r2, [fp, #-280]	; 0xfffffee8
   2e81c:	ldr	r3, [fp, #-276]	; 0xfffffeec
   2e820:	add	r3, r2, r3
   2e824:	str	r3, [fp, #-280]	; 0xfffffee8
   2e828:	mov	r3, #0
   2e82c:	strb	r3, [fp, #-284]	; 0xfffffee4
   2e830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e834:	sub	r3, r3, #1
   2e838:	str	r3, [fp, #-32]	; 0xffffffe0
   2e83c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e840:	cmp	r3, #0
   2e844:	beq	2e888 <__assert_fail@plt+0x1c19c>
   2e848:	sub	r3, fp, #296	; 0x128
   2e84c:	mov	r0, r3
   2e850:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e854:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   2e858:	eor	r3, r3, #1
   2e85c:	uxtb	r3, r3
   2e860:	cmp	r3, #0
   2e864:	bne	2e874 <__assert_fail@plt+0x1c188>
   2e868:	ldr	r3, [fp, #-268]	; 0xfffffef4
   2e86c:	cmp	r3, #0
   2e870:	beq	2e87c <__assert_fail@plt+0x1c190>
   2e874:	mov	r3, #1
   2e878:	b	2e880 <__assert_fail@plt+0x1c194>
   2e87c:	mov	r3, #0
   2e880:	cmp	r3, #0
   2e884:	bne	2e818 <__assert_fail@plt+0x1c12c>
   2e888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e88c:	str	r3, [fp, #-28]	; 0xffffffe4
   2e890:	sub	r3, fp, #296	; 0x128
   2e894:	mov	r0, r3
   2e898:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2e89c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   2e8a0:	eor	r3, r3, #1
   2e8a4:	uxtb	r3, r3
   2e8a8:	cmp	r3, #0
   2e8ac:	bne	2e8bc <__assert_fail@plt+0x1c1d0>
   2e8b0:	ldr	r3, [fp, #-268]	; 0xfffffef4
   2e8b4:	cmp	r3, #0
   2e8b8:	beq	2e8c4 <__assert_fail@plt+0x1c1d8>
   2e8bc:	mov	r3, #1
   2e8c0:	b	2e8c8 <__assert_fail@plt+0x1c1dc>
   2e8c4:	mov	r3, #0
   2e8c8:	cmp	r3, #0
   2e8cc:	bne	2e908 <__assert_fail@plt+0x1c21c>
   2e8d0:	sub	r3, fp, #68	; 0x44
   2e8d4:	mov	r2, r3
   2e8d8:	ldr	r1, [fp, #-364]	; 0xfffffe94
   2e8dc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   2e8e0:	bl	2df24 <__assert_fail@plt+0x1b838>
   2e8e4:	mov	r3, r0
   2e8e8:	strb	r3, [fp, #-61]	; 0xffffffc3
   2e8ec:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   2e8f0:	cmp	r3, #0
   2e8f4:	beq	2e900 <__assert_fail@plt+0x1c214>
   2e8f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2e8fc:	b	2edf4 <__assert_fail@plt+0x1c708>
   2e900:	mov	r3, #0
   2e904:	strb	r3, [fp, #-13]
   2e908:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e90c:	add	r3, r3, #1
   2e910:	str	r3, [fp, #-20]	; 0xffffffec
   2e914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e918:	add	r3, r3, #1
   2e91c:	str	r3, [fp, #-24]	; 0xffffffe8
   2e920:	ldrb	r3, [fp, #-216]	; 0xffffff28
   2e924:	cmp	r3, #0
   2e928:	beq	2e954 <__assert_fail@plt+0x1c268>
   2e92c:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   2e930:	cmp	r3, #0
   2e934:	beq	2e954 <__assert_fail@plt+0x1c268>
   2e938:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2e93c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   2e940:	cmp	r2, r3
   2e944:	moveq	r3, #1
   2e948:	movne	r3, #0
   2e94c:	uxtb	r3, r3
   2e950:	b	2e998 <__assert_fail@plt+0x1c2ac>
   2e954:	ldr	r2, [fp, #-220]	; 0xffffff24
   2e958:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   2e95c:	cmp	r2, r3
   2e960:	bne	2e98c <__assert_fail@plt+0x1c2a0>
   2e964:	ldr	r3, [fp, #-224]	; 0xffffff20
   2e968:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   2e96c:	ldr	r2, [fp, #-220]	; 0xffffff24
   2e970:	mov	r0, r3
   2e974:	bl	12158 <memcmp@plt>
   2e978:	mov	r3, r0
   2e97c:	cmp	r3, #0
   2e980:	bne	2e98c <__assert_fail@plt+0x1c2a0>
   2e984:	mov	r3, #1
   2e988:	b	2e990 <__assert_fail@plt+0x1c2a4>
   2e98c:	mov	r3, #0
   2e990:	and	r3, r3, #1
   2e994:	uxtb	r3, r3
   2e998:	cmp	r3, #0
   2e99c:	beq	2ebc0 <__assert_fail@plt+0x1c4d4>
   2e9a0:	sub	ip, fp, #184	; 0xb8
   2e9a4:	sub	lr, fp, #240	; 0xf0
   2e9a8:	ldm	lr!, {r0, r1, r2, r3}
   2e9ac:	stmia	ip!, {r0, r1, r2, r3}
   2e9b0:	ldm	lr!, {r0, r1, r2, r3}
   2e9b4:	stmia	ip!, {r0, r1, r2, r3}
   2e9b8:	ldm	lr!, {r0, r1, r2, r3}
   2e9bc:	stmia	ip!, {r0, r1, r2, r3}
   2e9c0:	ldm	lr, {r0, r1}
   2e9c4:	stm	ip, {r0, r1}
   2e9c8:	ldr	r2, [fp, #-168]	; 0xffffff58
   2e9cc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2e9d0:	add	r3, r2, r3
   2e9d4:	str	r3, [fp, #-168]	; 0xffffff58
   2e9d8:	mov	r3, #0
   2e9dc:	strb	r3, [fp, #-172]	; 0xffffff54
   2e9e0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e9e4:	str	r3, [fp, #-112]	; 0xffffff90
   2e9e8:	mov	r3, #0
   2e9ec:	strb	r3, [fp, #-128]	; 0xffffff80
   2e9f0:	sub	r3, fp, #128	; 0x80
   2e9f4:	add	r3, r3, #4
   2e9f8:	mov	r2, #8
   2e9fc:	mov	r1, #0
   2ea00:	mov	r0, r3
   2ea04:	bl	12434 <memset@plt>
   2ea08:	mov	r3, #0
   2ea0c:	strb	r3, [fp, #-116]	; 0xffffff8c
   2ea10:	sub	r3, fp, #128	; 0x80
   2ea14:	mov	r0, r3
   2ea18:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2ea1c:	ldrb	r3, [fp, #-104]	; 0xffffff98
   2ea20:	eor	r3, r3, #1
   2ea24:	uxtb	r3, r3
   2ea28:	cmp	r3, #0
   2ea2c:	bne	2ea3c <__assert_fail@plt+0x1c350>
   2ea30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ea34:	cmp	r3, #0
   2ea38:	beq	2ea44 <__assert_fail@plt+0x1c358>
   2ea3c:	mov	r3, #1
   2ea40:	b	2ea48 <__assert_fail@plt+0x1c35c>
   2ea44:	mov	r3, #0
   2ea48:	cmp	r3, #0
   2ea4c:	bne	2ea54 <__assert_fail@plt+0x1c368>
   2ea50:	bl	12698 <abort@plt>
   2ea54:	ldr	r2, [fp, #-112]	; 0xffffff90
   2ea58:	ldr	r3, [fp, #-108]	; 0xffffff94
   2ea5c:	add	r3, r2, r3
   2ea60:	str	r3, [fp, #-112]	; 0xffffff90
   2ea64:	mov	r3, #0
   2ea68:	strb	r3, [fp, #-116]	; 0xffffff8c
   2ea6c:	sub	r3, fp, #128	; 0x80
   2ea70:	mov	r0, r3
   2ea74:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2ea78:	ldrb	r3, [fp, #-104]	; 0xffffff98
   2ea7c:	eor	r3, r3, #1
   2ea80:	uxtb	r3, r3
   2ea84:	cmp	r3, #0
   2ea88:	bne	2ea98 <__assert_fail@plt+0x1c3ac>
   2ea8c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ea90:	cmp	r3, #0
   2ea94:	beq	2eaa0 <__assert_fail@plt+0x1c3b4>
   2ea98:	mov	r3, #1
   2ea9c:	b	2eaa4 <__assert_fail@plt+0x1c3b8>
   2eaa0:	mov	r3, #0
   2eaa4:	cmp	r3, #0
   2eaa8:	bne	2eab4 <__assert_fail@plt+0x1c3c8>
   2eaac:	ldr	r3, [fp, #-224]	; 0xffffff20
   2eab0:	b	2edf4 <__assert_fail@plt+0x1c708>
   2eab4:	sub	r3, fp, #184	; 0xb8
   2eab8:	mov	r0, r3
   2eabc:	bl	2f184 <__assert_fail@plt+0x1ca98>
   2eac0:	ldrb	r3, [fp, #-160]	; 0xffffff60
   2eac4:	eor	r3, r3, #1
   2eac8:	uxtb	r3, r3
   2eacc:	cmp	r3, #0
   2ead0:	bne	2eae0 <__assert_fail@plt+0x1c3f4>
   2ead4:	ldr	r3, [fp, #-156]	; 0xffffff64
   2ead8:	cmp	r3, #0
   2eadc:	beq	2eae8 <__assert_fail@plt+0x1c3fc>
   2eae0:	mov	r3, #1
   2eae4:	b	2eaec <__assert_fail@plt+0x1c400>
   2eae8:	mov	r3, #0
   2eaec:	cmp	r3, #0
   2eaf0:	bne	2eafc <__assert_fail@plt+0x1c410>
   2eaf4:	mov	r3, #0
   2eaf8:	b	2edf4 <__assert_fail@plt+0x1c708>
   2eafc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb00:	add	r3, r3, #1
   2eb04:	str	r3, [fp, #-24]	; 0xffffffe8
   2eb08:	ldrb	r3, [fp, #-160]	; 0xffffff60
   2eb0c:	cmp	r3, #0
   2eb10:	beq	2eb3c <__assert_fail@plt+0x1c450>
   2eb14:	ldrb	r3, [fp, #-104]	; 0xffffff98
   2eb18:	cmp	r3, #0
   2eb1c:	beq	2eb3c <__assert_fail@plt+0x1c450>
   2eb20:	ldr	r2, [fp, #-156]	; 0xffffff64
   2eb24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2eb28:	cmp	r2, r3
   2eb2c:	movne	r3, #1
   2eb30:	moveq	r3, #0
   2eb34:	uxtb	r3, r3
   2eb38:	b	2eb80 <__assert_fail@plt+0x1c494>
   2eb3c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2eb40:	ldr	r3, [fp, #-108]	; 0xffffff94
   2eb44:	cmp	r2, r3
   2eb48:	bne	2eb6c <__assert_fail@plt+0x1c480>
   2eb4c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2eb50:	ldr	r1, [fp, #-112]	; 0xffffff90
   2eb54:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2eb58:	mov	r0, r3
   2eb5c:	bl	12158 <memcmp@plt>
   2eb60:	mov	r3, r0
   2eb64:	cmp	r3, #0
   2eb68:	beq	2eb74 <__assert_fail@plt+0x1c488>
   2eb6c:	mov	r3, #1
   2eb70:	b	2eb78 <__assert_fail@plt+0x1c48c>
   2eb74:	mov	r3, #0
   2eb78:	and	r3, r3, #1
   2eb7c:	uxtb	r3, r3
   2eb80:	cmp	r3, #0
   2eb84:	bne	2ebbc <__assert_fail@plt+0x1c4d0>
   2eb88:	ldr	r2, [fp, #-168]	; 0xffffff58
   2eb8c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2eb90:	add	r3, r2, r3
   2eb94:	str	r3, [fp, #-168]	; 0xffffff58
   2eb98:	mov	r3, #0
   2eb9c:	strb	r3, [fp, #-172]	; 0xffffff54
   2eba0:	ldr	r2, [fp, #-112]	; 0xffffff90
   2eba4:	ldr	r3, [fp, #-108]	; 0xffffff94
   2eba8:	add	r3, r2, r3
   2ebac:	str	r3, [fp, #-112]	; 0xffffff90
   2ebb0:	mov	r3, #0
   2ebb4:	strb	r3, [fp, #-116]	; 0xffffff8c
   2ebb8:	b	2ea6c <__assert_fail@plt+0x1c380>
   2ebbc:	nop			; (mov r0, r0)
   2ebc0:	ldr	r2, [fp, #-224]	; 0xffffff20
   2ebc4:	ldr	r3, [fp, #-220]	; 0xffffff24
   2ebc8:	add	r3, r2, r3
   2ebcc:	str	r3, [fp, #-224]	; 0xffffff20
   2ebd0:	mov	r3, #0
   2ebd4:	strb	r3, [fp, #-228]	; 0xffffff1c
   2ebd8:	b	2e788 <__assert_fail@plt+0x1c09c>
   2ebdc:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2ebe0:	b	2edf4 <__assert_fail@plt+0x1c708>
   2ebe4:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ebe8:	ldrb	r3, [r3]
   2ebec:	cmp	r3, #0
   2ebf0:	beq	2edf0 <__assert_fail@plt+0x1c704>
   2ebf4:	mov	r3, #1
   2ebf8:	strb	r3, [fp, #-33]	; 0xffffffdf
   2ebfc:	mov	r3, #0
   2ec00:	str	r3, [fp, #-40]	; 0xffffffd8
   2ec04:	mov	r3, #0
   2ec08:	str	r3, [fp, #-44]	; 0xffffffd4
   2ec0c:	mov	r3, #0
   2ec10:	str	r3, [fp, #-48]	; 0xffffffd0
   2ec14:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ec18:	str	r3, [fp, #-52]	; 0xffffffcc
   2ec1c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ec20:	add	r2, r3, #1
   2ec24:	str	r2, [fp, #-364]	; 0xfffffe94
   2ec28:	ldrb	r3, [r3]
   2ec2c:	strb	r3, [fp, #-62]	; 0xffffffc2
   2ec30:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2ec34:	ldrb	r3, [r3]
   2ec38:	cmp	r3, #0
   2ec3c:	bne	2ec48 <__assert_fail@plt+0x1c55c>
   2ec40:	mov	r3, #0
   2ec44:	b	2edf4 <__assert_fail@plt+0x1c708>
   2ec48:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2ec4c:	cmp	r3, #0
   2ec50:	beq	2ed2c <__assert_fail@plt+0x1c640>
   2ec54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ec58:	cmp	r3, #9
   2ec5c:	bls	2ed2c <__assert_fail@plt+0x1c640>
   2ec60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ec64:	mov	r3, r2
   2ec68:	lsl	r3, r3, #2
   2ec6c:	add	r2, r3, r2
   2ec70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ec74:	cmp	r2, r3
   2ec78:	bhi	2ed2c <__assert_fail@plt+0x1c640>
   2ec7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ec80:	cmp	r3, #0
   2ec84:	beq	2ecd0 <__assert_fail@plt+0x1c5e4>
   2ec88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ec8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ec90:	sub	r3, r2, r3
   2ec94:	mov	r1, r3
   2ec98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ec9c:	bl	124dc <strnlen@plt>
   2eca0:	mov	r2, r0
   2eca4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eca8:	add	r3, r3, r2
   2ecac:	str	r3, [fp, #-52]	; 0xffffffcc
   2ecb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ecb4:	ldrb	r3, [r3]
   2ecb8:	cmp	r3, #0
   2ecbc:	bne	2ecc8 <__assert_fail@plt+0x1c5dc>
   2ecc0:	mov	r3, #0
   2ecc4:	str	r3, [fp, #-52]	; 0xffffffcc
   2ecc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2eccc:	str	r3, [fp, #-48]	; 0xffffffd0
   2ecd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ecd4:	cmp	r3, #0
   2ecd8:	bne	2ed2c <__assert_fail@plt+0x1c640>
   2ecdc:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ece0:	sub	r4, r3, #1
   2ece4:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ece8:	sub	r3, r3, #1
   2ecec:	mov	r0, r3
   2ecf0:	bl	123bc <strlen@plt>
   2ecf4:	mov	r2, r0
   2ecf8:	sub	r3, fp, #72	; 0x48
   2ecfc:	mov	r1, r4
   2ed00:	ldr	r0, [fp, #-360]	; 0xfffffe98
   2ed04:	bl	2dc24 <__assert_fail@plt+0x1b538>
   2ed08:	mov	r3, r0
   2ed0c:	strb	r3, [fp, #-63]	; 0xffffffc1
   2ed10:	ldrb	r3, [fp, #-63]	; 0xffffffc1
   2ed14:	cmp	r3, #0
   2ed18:	beq	2ed24 <__assert_fail@plt+0x1c638>
   2ed1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ed20:	b	2edf4 <__assert_fail@plt+0x1c708>
   2ed24:	mov	r3, #0
   2ed28:	strb	r3, [fp, #-33]	; 0xffffffdf
   2ed2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ed30:	add	r3, r3, #1
   2ed34:	str	r3, [fp, #-40]	; 0xffffffd8
   2ed38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ed3c:	add	r3, r3, #1
   2ed40:	str	r3, [fp, #-44]	; 0xffffffd4
   2ed44:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2ed48:	ldrb	r3, [r3]
   2ed4c:	ldrb	r2, [fp, #-62]	; 0xffffffc2
   2ed50:	cmp	r2, r3
   2ed54:	bne	2ede0 <__assert_fail@plt+0x1c6f4>
   2ed58:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2ed5c:	add	r3, r3, #1
   2ed60:	str	r3, [fp, #-56]	; 0xffffffc8
   2ed64:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ed68:	str	r3, [fp, #-60]	; 0xffffffc4
   2ed6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ed70:	ldrb	r3, [r3]
   2ed74:	cmp	r3, #0
   2ed78:	bne	2ed84 <__assert_fail@plt+0x1c698>
   2ed7c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2ed80:	b	2edf4 <__assert_fail@plt+0x1c708>
   2ed84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ed88:	ldrb	r3, [r3]
   2ed8c:	cmp	r3, #0
   2ed90:	bne	2ed9c <__assert_fail@plt+0x1c6b0>
   2ed94:	mov	r3, #0
   2ed98:	b	2edf4 <__assert_fail@plt+0x1c708>
   2ed9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2eda0:	add	r3, r3, #1
   2eda4:	str	r3, [fp, #-44]	; 0xffffffd4
   2eda8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2edac:	ldrb	r2, [r3]
   2edb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2edb4:	ldrb	r3, [r3]
   2edb8:	cmp	r2, r3
   2edbc:	bne	2eddc <__assert_fail@plt+0x1c6f0>
   2edc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2edc4:	add	r3, r3, #1
   2edc8:	str	r3, [fp, #-56]	; 0xffffffc8
   2edcc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2edd0:	add	r3, r3, #1
   2edd4:	str	r3, [fp, #-60]	; 0xffffffc4
   2edd8:	b	2ed6c <__assert_fail@plt+0x1c680>
   2eddc:	nop			; (mov r0, r0)
   2ede0:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2ede4:	add	r3, r3, #1
   2ede8:	str	r3, [fp, #-360]	; 0xfffffe98
   2edec:	b	2ec30 <__assert_fail@plt+0x1c544>
   2edf0:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2edf4:	mov	r0, r3
   2edf8:	sub	sp, fp, #8
   2edfc:	pop	{r4, fp, pc}
   2ee00:	push	{fp, lr}
   2ee04:	add	fp, sp, #4
   2ee08:	sub	sp, sp, #8
   2ee0c:	str	r0, [fp, #-8]
   2ee10:	str	r1, [fp, #-12]
   2ee14:	ldr	r0, [fp, #-8]
   2ee18:	bl	123bc <strlen@plt>
   2ee1c:	mov	r3, r0
   2ee20:	ldr	r2, [fp, #-12]
   2ee24:	mov	r1, r3
   2ee28:	ldr	r0, [fp, #-8]
   2ee2c:	bl	2ee40 <__assert_fail@plt+0x1c754>
   2ee30:	mov	r3, r0
   2ee34:	mov	r0, r3
   2ee38:	sub	sp, fp, #4
   2ee3c:	pop	{fp, pc}
   2ee40:	push	{fp, lr}
   2ee44:	add	fp, sp, #4
   2ee48:	sub	sp, sp, #56	; 0x38
   2ee4c:	str	r0, [fp, #-48]	; 0xffffffd0
   2ee50:	str	r1, [fp, #-52]	; 0xffffffcc
   2ee54:	str	r2, [fp, #-56]	; 0xffffffc8
   2ee58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ee5c:	str	r3, [fp, #-8]
   2ee60:	ldr	r2, [fp, #-8]
   2ee64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ee68:	add	r3, r2, r3
   2ee6c:	str	r3, [fp, #-20]	; 0xffffffec
   2ee70:	mov	r3, #0
   2ee74:	str	r3, [fp, #-12]
   2ee78:	bl	12254 <__ctype_get_mb_cur_max@plt>
   2ee7c:	mov	r3, r0
   2ee80:	cmp	r3, #1
   2ee84:	bls	2f140 <__assert_fail@plt+0x1ca54>
   2ee88:	b	2f074 <__assert_fail@plt+0x1c988>
   2ee8c:	ldr	r3, [fp, #-8]
   2ee90:	ldrb	r3, [r3]
   2ee94:	cmp	r3, #63	; 0x3f
   2ee98:	bgt	2eeb4 <__assert_fail@plt+0x1c7c8>
   2ee9c:	cmp	r3, #37	; 0x25
   2eea0:	bge	2eed0 <__assert_fail@plt+0x1c7e4>
   2eea4:	sub	r3, r3, #32
   2eea8:	cmp	r3, #3
   2eeac:	bhi	2eeec <__assert_fail@plt+0x1c800>
   2eeb0:	b	2eed0 <__assert_fail@plt+0x1c7e4>
   2eeb4:	cmp	r3, #65	; 0x41
   2eeb8:	blt	2eeec <__assert_fail@plt+0x1c800>
   2eebc:	cmp	r3, #95	; 0x5f
   2eec0:	ble	2eed0 <__assert_fail@plt+0x1c7e4>
   2eec4:	sub	r3, r3, #97	; 0x61
   2eec8:	cmp	r3, #29
   2eecc:	bhi	2eeec <__assert_fail@plt+0x1c800>
   2eed0:	ldr	r3, [fp, #-8]
   2eed4:	add	r3, r3, #1
   2eed8:	str	r3, [fp, #-8]
   2eedc:	ldr	r3, [fp, #-12]
   2eee0:	add	r3, r3, #1
   2eee4:	str	r3, [fp, #-12]
   2eee8:	b	2f074 <__assert_fail@plt+0x1c988>
   2eeec:	sub	r3, fp, #36	; 0x24
   2eef0:	mov	r2, #8
   2eef4:	mov	r1, #0
   2eef8:	mov	r0, r3
   2eefc:	bl	12434 <memset@plt>
   2ef00:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ef04:	ldr	r3, [fp, #-8]
   2ef08:	sub	r3, r2, r3
   2ef0c:	mov	r2, r3
   2ef10:	sub	r3, fp, #36	; 0x24
   2ef14:	sub	r0, fp, #40	; 0x28
   2ef18:	ldr	r1, [fp, #-8]
   2ef1c:	bl	42c50 <__assert_fail@plt+0x30564>
   2ef20:	str	r0, [fp, #-16]
   2ef24:	ldr	r3, [fp, #-16]
   2ef28:	cmn	r3, #1
   2ef2c:	bne	2ef64 <__assert_fail@plt+0x1c878>
   2ef30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ef34:	and	r3, r3, #1
   2ef38:	cmp	r3, #0
   2ef3c:	bne	2ef5c <__assert_fail@plt+0x1c870>
   2ef40:	ldr	r3, [fp, #-8]
   2ef44:	add	r3, r3, #1
   2ef48:	str	r3, [fp, #-8]
   2ef4c:	ldr	r3, [fp, #-12]
   2ef50:	add	r3, r3, #1
   2ef54:	str	r3, [fp, #-12]
   2ef58:	b	2f070 <__assert_fail@plt+0x1c984>
   2ef5c:	mvn	r3, #0
   2ef60:	b	2f178 <__assert_fail@plt+0x1ca8c>
   2ef64:	ldr	r3, [fp, #-16]
   2ef68:	cmn	r3, #2
   2ef6c:	bne	2efa0 <__assert_fail@plt+0x1c8b4>
   2ef70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ef74:	and	r3, r3, #1
   2ef78:	cmp	r3, #0
   2ef7c:	bne	2ef98 <__assert_fail@plt+0x1c8ac>
   2ef80:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ef84:	str	r3, [fp, #-8]
   2ef88:	ldr	r3, [fp, #-12]
   2ef8c:	add	r3, r3, #1
   2ef90:	str	r3, [fp, #-12]
   2ef94:	b	2f070 <__assert_fail@plt+0x1c984>
   2ef98:	mvn	r3, #0
   2ef9c:	b	2f178 <__assert_fail@plt+0x1ca8c>
   2efa0:	ldr	r3, [fp, #-16]
   2efa4:	cmp	r3, #0
   2efa8:	bne	2efb4 <__assert_fail@plt+0x1c8c8>
   2efac:	mov	r3, #1
   2efb0:	str	r3, [fp, #-16]
   2efb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2efb8:	mov	r0, r3
   2efbc:	bl	12074 <wcwidth@plt>
   2efc0:	str	r0, [fp, #-24]	; 0xffffffe8
   2efc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2efc8:	cmp	r3, #0
   2efcc:	blt	2effc <__assert_fail@plt+0x1c910>
   2efd0:	ldr	r2, [fp, #-12]
   2efd4:	mvn	r3, #-2147483648	; 0x80000000
   2efd8:	sub	r3, r3, r2
   2efdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2efe0:	cmp	r3, r2
   2efe4:	blt	2f158 <__assert_fail@plt+0x1ca6c>
   2efe8:	ldr	r2, [fp, #-12]
   2efec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eff0:	add	r3, r2, r3
   2eff4:	str	r3, [fp, #-12]
   2eff8:	b	2f048 <__assert_fail@plt+0x1c95c>
   2effc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f000:	and	r3, r3, #2
   2f004:	cmp	r3, #0
   2f008:	bne	2f040 <__assert_fail@plt+0x1c954>
   2f00c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f010:	mov	r0, r3
   2f014:	bl	121d0 <iswcntrl@plt>
   2f018:	mov	r3, r0
   2f01c:	cmp	r3, #0
   2f020:	bne	2f048 <__assert_fail@plt+0x1c95c>
   2f024:	ldr	r3, [fp, #-12]
   2f028:	cmn	r3, #-2147483647	; 0x80000001
   2f02c:	beq	2f160 <__assert_fail@plt+0x1ca74>
   2f030:	ldr	r3, [fp, #-12]
   2f034:	add	r3, r3, #1
   2f038:	str	r3, [fp, #-12]
   2f03c:	b	2f048 <__assert_fail@plt+0x1c95c>
   2f040:	mvn	r3, #0
   2f044:	b	2f178 <__assert_fail@plt+0x1ca8c>
   2f048:	ldr	r2, [fp, #-8]
   2f04c:	ldr	r3, [fp, #-16]
   2f050:	add	r3, r2, r3
   2f054:	str	r3, [fp, #-8]
   2f058:	sub	r3, fp, #36	; 0x24
   2f05c:	mov	r0, r3
   2f060:	bl	12134 <mbsinit@plt>
   2f064:	mov	r3, r0
   2f068:	cmp	r3, #0
   2f06c:	beq	2ef00 <__assert_fail@plt+0x1c814>
   2f070:	nop			; (mov r0, r0)
   2f074:	ldr	r2, [fp, #-8]
   2f078:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f07c:	cmp	r2, r3
   2f080:	bcc	2ee8c <__assert_fail@plt+0x1c7a0>
   2f084:	ldr	r3, [fp, #-12]
   2f088:	b	2f178 <__assert_fail@plt+0x1ca8c>
   2f08c:	ldr	r3, [fp, #-8]
   2f090:	add	r2, r3, #1
   2f094:	str	r2, [fp, #-8]
   2f098:	ldrb	r3, [r3]
   2f09c:	strb	r3, [fp, #-25]	; 0xffffffe7
   2f0a0:	bl	12368 <__ctype_b_loc@plt>
   2f0a4:	mov	r3, r0
   2f0a8:	ldr	r2, [r3]
   2f0ac:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2f0b0:	lsl	r3, r3, #1
   2f0b4:	add	r3, r2, r3
   2f0b8:	ldrh	r3, [r3]
   2f0bc:	and	r3, r3, #16384	; 0x4000
   2f0c0:	cmp	r3, #0
   2f0c4:	beq	2f0e4 <__assert_fail@plt+0x1c9f8>
   2f0c8:	ldr	r3, [fp, #-12]
   2f0cc:	cmn	r3, #-2147483647	; 0x80000001
   2f0d0:	beq	2f168 <__assert_fail@plt+0x1ca7c>
   2f0d4:	ldr	r3, [fp, #-12]
   2f0d8:	add	r3, r3, #1
   2f0dc:	str	r3, [fp, #-12]
   2f0e0:	b	2f140 <__assert_fail@plt+0x1ca54>
   2f0e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f0e8:	and	r3, r3, #2
   2f0ec:	cmp	r3, #0
   2f0f0:	bne	2f138 <__assert_fail@plt+0x1ca4c>
   2f0f4:	bl	12368 <__ctype_b_loc@plt>
   2f0f8:	mov	r3, r0
   2f0fc:	ldr	r2, [r3]
   2f100:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2f104:	lsl	r3, r3, #1
   2f108:	add	r3, r2, r3
   2f10c:	ldrh	r3, [r3]
   2f110:	and	r3, r3, #2
   2f114:	cmp	r3, #0
   2f118:	bne	2f140 <__assert_fail@plt+0x1ca54>
   2f11c:	ldr	r3, [fp, #-12]
   2f120:	cmn	r3, #-2147483647	; 0x80000001
   2f124:	beq	2f170 <__assert_fail@plt+0x1ca84>
   2f128:	ldr	r3, [fp, #-12]
   2f12c:	add	r3, r3, #1
   2f130:	str	r3, [fp, #-12]
   2f134:	b	2f140 <__assert_fail@plt+0x1ca54>
   2f138:	mvn	r3, #0
   2f13c:	b	2f178 <__assert_fail@plt+0x1ca8c>
   2f140:	ldr	r2, [fp, #-8]
   2f144:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f148:	cmp	r2, r3
   2f14c:	bcc	2f08c <__assert_fail@plt+0x1c9a0>
   2f150:	ldr	r3, [fp, #-12]
   2f154:	b	2f178 <__assert_fail@plt+0x1ca8c>
   2f158:	nop			; (mov r0, r0)
   2f15c:	b	2f174 <__assert_fail@plt+0x1ca88>
   2f160:	nop			; (mov r0, r0)
   2f164:	b	2f174 <__assert_fail@plt+0x1ca88>
   2f168:	nop			; (mov r0, r0)
   2f16c:	b	2f174 <__assert_fail@plt+0x1ca88>
   2f170:	nop			; (mov r0, r0)
   2f174:	mvn	r3, #-2147483648	; 0x80000000
   2f178:	mov	r0, r3
   2f17c:	sub	sp, fp, #4
   2f180:	pop	{fp, pc}
   2f184:	push	{r4, r5, r6, fp, lr}
   2f188:	add	fp, sp, #16
   2f18c:	sub	sp, sp, #12
   2f190:	str	r0, [fp, #-24]	; 0xffffffe8
   2f194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f198:	ldrb	r3, [r3, #12]
   2f19c:	cmp	r3, #0
   2f1a0:	bne	2f3b0 <__assert_fail@plt+0x1ccc4>
   2f1a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1a8:	ldrb	r3, [r3]
   2f1ac:	cmp	r3, #0
   2f1b0:	bne	2f248 <__assert_fail@plt+0x1cb5c>
   2f1b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1b8:	ldr	r3, [r3, #16]
   2f1bc:	ldrb	r3, [r3]
   2f1c0:	mov	r0, r3
   2f1c4:	bl	60600 <__assert_fail@plt+0x4df14>
   2f1c8:	mov	r3, r0
   2f1cc:	cmp	r3, #0
   2f1d0:	beq	2f208 <__assert_fail@plt+0x1cb1c>
   2f1d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1d8:	mov	r2, #1
   2f1dc:	str	r2, [r3, #20]
   2f1e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1e4:	ldr	r3, [r3, #16]
   2f1e8:	ldrb	r3, [r3]
   2f1ec:	mov	r2, r3
   2f1f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1f4:	str	r2, [r3, #28]
   2f1f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1fc:	mov	r2, #1
   2f200:	strb	r2, [r3, #24]
   2f204:	b	2f3a0 <__assert_fail@plt+0x1ccb4>
   2f208:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f20c:	add	r3, r3, #4
   2f210:	mov	r0, r3
   2f214:	bl	12134 <mbsinit@plt>
   2f218:	mov	r3, r0
   2f21c:	cmp	r3, #0
   2f220:	bne	2f238 <__assert_fail@plt+0x1cb4c>
   2f224:	ldr	r3, [pc, #400]	; 2f3bc <__assert_fail@plt+0x1ccd0>
   2f228:	mov	r2, #143	; 0x8f
   2f22c:	ldr	r1, [pc, #396]	; 2f3c0 <__assert_fail@plt+0x1ccd4>
   2f230:	ldr	r0, [pc, #396]	; 2f3c4 <__assert_fail@plt+0x1ccd8>
   2f234:	bl	126ec <__assert_fail@plt>
   2f238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f23c:	mov	r2, #1
   2f240:	strb	r2, [r3]
   2f244:	b	2f24c <__assert_fail@plt+0x1cb60>
   2f248:	nop			; (mov r0, r0)
   2f24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f250:	add	r4, r3, #28
   2f254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f258:	ldr	r5, [r3, #16]
   2f25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f260:	ldr	r6, [r3, #16]
   2f264:	bl	12254 <__ctype_get_mb_cur_max@plt>
   2f268:	mov	r3, r0
   2f26c:	mov	r1, r3
   2f270:	mov	r0, r6
   2f274:	bl	3c890 <__assert_fail@plt+0x2a1a4>
   2f278:	mov	r2, r0
   2f27c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f280:	add	r3, r3, #4
   2f284:	mov	r1, r5
   2f288:	mov	r0, r4
   2f28c:	bl	42c50 <__assert_fail@plt+0x30564>
   2f290:	mov	r2, r0
   2f294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f298:	str	r2, [r3, #20]
   2f29c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2a0:	ldr	r3, [r3, #20]
   2f2a4:	cmn	r3, #1
   2f2a8:	bne	2f2c8 <__assert_fail@plt+0x1cbdc>
   2f2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2b0:	mov	r2, #1
   2f2b4:	str	r2, [r3, #20]
   2f2b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2bc:	mov	r2, #0
   2f2c0:	strb	r2, [r3, #24]
   2f2c4:	b	2f3a0 <__assert_fail@plt+0x1ccb4>
   2f2c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2cc:	ldr	r3, [r3, #20]
   2f2d0:	cmn	r3, #2
   2f2d4:	bne	2f304 <__assert_fail@plt+0x1cc18>
   2f2d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2dc:	ldr	r3, [r3, #16]
   2f2e0:	mov	r0, r3
   2f2e4:	bl	123bc <strlen@plt>
   2f2e8:	mov	r2, r0
   2f2ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2f0:	str	r2, [r3, #20]
   2f2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2f8:	mov	r2, #0
   2f2fc:	strb	r2, [r3, #24]
   2f300:	b	2f3a0 <__assert_fail@plt+0x1ccb4>
   2f304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f308:	ldr	r3, [r3, #20]
   2f30c:	cmp	r3, #0
   2f310:	bne	2f36c <__assert_fail@plt+0x1cc80>
   2f314:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f318:	mov	r2, #1
   2f31c:	str	r2, [r3, #20]
   2f320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f324:	ldr	r3, [r3, #16]
   2f328:	ldrb	r3, [r3]
   2f32c:	cmp	r3, #0
   2f330:	beq	2f348 <__assert_fail@plt+0x1cc5c>
   2f334:	ldr	r3, [pc, #128]	; 2f3bc <__assert_fail@plt+0x1ccd0>
   2f338:	mov	r2, #171	; 0xab
   2f33c:	ldr	r1, [pc, #124]	; 2f3c0 <__assert_fail@plt+0x1ccd4>
   2f340:	ldr	r0, [pc, #128]	; 2f3c8 <__assert_fail@plt+0x1ccdc>
   2f344:	bl	126ec <__assert_fail@plt>
   2f348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f34c:	ldr	r3, [r3, #28]
   2f350:	cmp	r3, #0
   2f354:	beq	2f36c <__assert_fail@plt+0x1cc80>
   2f358:	ldr	r3, [pc, #92]	; 2f3bc <__assert_fail@plt+0x1ccd0>
   2f35c:	mov	r2, #172	; 0xac
   2f360:	ldr	r1, [pc, #88]	; 2f3c0 <__assert_fail@plt+0x1ccd4>
   2f364:	ldr	r0, [pc, #96]	; 2f3cc <__assert_fail@plt+0x1cce0>
   2f368:	bl	126ec <__assert_fail@plt>
   2f36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f370:	mov	r2, #1
   2f374:	strb	r2, [r3, #24]
   2f378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f37c:	add	r3, r3, #4
   2f380:	mov	r0, r3
   2f384:	bl	12134 <mbsinit@plt>
   2f388:	mov	r3, r0
   2f38c:	cmp	r3, #0
   2f390:	beq	2f3a0 <__assert_fail@plt+0x1ccb4>
   2f394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f398:	mov	r2, #0
   2f39c:	strb	r2, [r3]
   2f3a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3a4:	mov	r2, #1
   2f3a8:	strb	r2, [r3, #12]
   2f3ac:	b	2f3b4 <__assert_fail@plt+0x1ccc8>
   2f3b0:	nop			; (mov r0, r0)
   2f3b4:	sub	sp, fp, #16
   2f3b8:	pop	{r4, r5, r6, fp, pc}
   2f3bc:	andeq	r8, r6, r8, asr #19
   2f3c0:	andeq	r8, r6, r8, ror r9
   2f3c4:	andeq	r8, r6, r4, lsl #19
   2f3c8:	muleq	r6, ip, r9
   2f3cc:			; <UNDEFINED> instruction: 0x000689b4
   2f3d0:	push	{fp}		; (str fp, [sp, #-4]!)
   2f3d4:	add	fp, sp, #0
   2f3d8:	sub	sp, sp, #12
   2f3dc:	str	r0, [fp, #-8]
   2f3e0:	str	r1, [fp, #-12]
   2f3e4:	ldr	r3, [fp, #-8]
   2f3e8:	ldr	r2, [r3, #16]
   2f3ec:	ldr	r3, [fp, #-12]
   2f3f0:	add	r2, r2, r3
   2f3f4:	ldr	r3, [fp, #-8]
   2f3f8:	str	r2, [r3, #16]
   2f3fc:	nop			; (mov r0, r0)
   2f400:	add	sp, fp, #0
   2f404:	pop	{fp}		; (ldr fp, [sp], #4)
   2f408:	bx	lr
   2f40c:	push	{fp, lr}
   2f410:	add	fp, sp, #4
   2f414:	sub	sp, sp, #8
   2f418:	str	r0, [fp, #-8]
   2f41c:	str	r1, [fp, #-12]
   2f420:	ldr	r3, [fp, #-12]
   2f424:	ldrb	r2, [r3]
   2f428:	ldr	r3, [fp, #-8]
   2f42c:	strb	r2, [r3]
   2f430:	ldr	r3, [fp, #-8]
   2f434:	ldrb	r3, [r3]
   2f438:	cmp	r3, #0
   2f43c:	beq	2f460 <__assert_fail@plt+0x1cd74>
   2f440:	ldr	r3, [fp, #-8]
   2f444:	add	r0, r3, #4
   2f448:	ldr	r3, [fp, #-12]
   2f44c:	add	r3, r3, #4
   2f450:	mov	r2, #8
   2f454:	mov	r1, r3
   2f458:	bl	120f8 <memcpy@plt>
   2f45c:	b	2f478 <__assert_fail@plt+0x1cd8c>
   2f460:	ldr	r3, [fp, #-8]
   2f464:	add	r3, r3, #4
   2f468:	mov	r2, #8
   2f46c:	mov	r1, #0
   2f470:	mov	r0, r3
   2f474:	bl	12434 <memset@plt>
   2f478:	ldr	r3, [fp, #-12]
   2f47c:	ldrb	r2, [r3, #12]
   2f480:	ldr	r3, [fp, #-8]
   2f484:	strb	r2, [r3, #12]
   2f488:	ldr	r3, [fp, #-8]
   2f48c:	add	r2, r3, #16
   2f490:	ldr	r3, [fp, #-12]
   2f494:	add	r3, r3, #16
   2f498:	mov	r1, r3
   2f49c:	mov	r0, r2
   2f4a0:	bl	60544 <__assert_fail@plt+0x4de58>
   2f4a4:	nop			; (mov r0, r0)
   2f4a8:	sub	sp, fp, #4
   2f4ac:	pop	{fp, pc}
   2f4b0:	push	{fp}		; (str fp, [sp, #-4]!)
   2f4b4:	add	fp, sp, #0
   2f4b8:	sub	sp, sp, #12
   2f4bc:	str	r0, [fp, #-8]
   2f4c0:	ldr	r3, [fp, #-8]
   2f4c4:	mov	r0, r3
   2f4c8:	add	sp, fp, #0
   2f4cc:	pop	{fp}		; (ldr fp, [sp], #4)
   2f4d0:	bx	lr
   2f4d4:	push	{fp, lr}
   2f4d8:	add	fp, sp, #4
   2f4dc:	sub	sp, sp, #16
   2f4e0:	str	r0, [fp, #-16]
   2f4e4:	str	r1, [fp, #-20]	; 0xffffffec
   2f4e8:	mov	r0, #32
   2f4ec:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   2f4f0:	mov	r3, r0
   2f4f4:	str	r3, [fp, #-8]
   2f4f8:	ldr	r3, [fp, #-8]
   2f4fc:	mov	r2, #61	; 0x3d
   2f500:	strb	r2, [r3]
   2f504:	ldr	r3, [fp, #-8]
   2f508:	mov	r2, #1
   2f50c:	strb	r2, [r3, #1]
   2f510:	ldr	r3, [fp, #-8]
   2f514:	ldr	r2, [pc, #56]	; 2f554 <__assert_fail@plt+0x1ce68>
   2f518:	str	r2, [r3, #4]
   2f51c:	ldr	r3, [fp, #-8]
   2f520:	ldr	r2, [fp, #-16]
   2f524:	str	r2, [r3, #8]
   2f528:	ldr	r3, [fp, #-8]
   2f52c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f530:	str	r2, [r3, #12]
   2f534:	ldr	r3, [fp, #-8]
   2f538:	add	r3, r3, #16
   2f53c:	mov	r2, #0
   2f540:	strb	r2, [r3, #1]
   2f544:	ldr	r3, [fp, #-8]
   2f548:	mov	r0, r3
   2f54c:	sub	sp, fp, #4
   2f550:	pop	{fp, pc}
   2f554:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2f558:	push	{fp, lr}
   2f55c:	add	fp, sp, #4
   2f560:	sub	sp, sp, #64	; 0x40
   2f564:	str	r0, [fp, #-64]	; 0xffffffc0
   2f568:	mov	r3, #0
   2f56c:	str	r3, [fp, #-8]
   2f570:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f574:	ldrb	r3, [r3]
   2f578:	cmp	r3, #47	; 0x2f
   2f57c:	bls	2f660 <__assert_fail@plt+0x1cf74>
   2f580:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f584:	ldrb	r3, [r3]
   2f588:	cmp	r3, #55	; 0x37
   2f58c:	bhi	2f660 <__assert_fail@plt+0x1cf74>
   2f590:	mov	r3, #0
   2f594:	str	r3, [fp, #-16]
   2f598:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f59c:	str	r3, [fp, #-12]
   2f5a0:	ldr	r3, [fp, #-16]
   2f5a4:	lsl	r2, r3, #3
   2f5a8:	ldr	r3, [fp, #-12]
   2f5ac:	add	r1, r3, #1
   2f5b0:	str	r1, [fp, #-12]
   2f5b4:	ldrb	r3, [r3]
   2f5b8:	add	r3, r2, r3
   2f5bc:	sub	r3, r3, #48	; 0x30
   2f5c0:	str	r3, [fp, #-16]
   2f5c4:	ldr	r3, [fp, #-16]
   2f5c8:	cmp	r3, #4096	; 0x1000
   2f5cc:	bcc	2f5d8 <__assert_fail@plt+0x1ceec>
   2f5d0:	mov	r3, #0
   2f5d4:	b	2fb34 <__assert_fail@plt+0x1d448>
   2f5d8:	ldr	r3, [fp, #-12]
   2f5dc:	ldrb	r3, [r3]
   2f5e0:	cmp	r3, #47	; 0x2f
   2f5e4:	bls	2f5f8 <__assert_fail@plt+0x1cf0c>
   2f5e8:	ldr	r3, [fp, #-12]
   2f5ec:	ldrb	r3, [r3]
   2f5f0:	cmp	r3, #55	; 0x37
   2f5f4:	bls	2f5a0 <__assert_fail@plt+0x1ceb4>
   2f5f8:	ldr	r3, [fp, #-12]
   2f5fc:	ldrb	r3, [r3]
   2f600:	cmp	r3, #0
   2f604:	beq	2f610 <__assert_fail@plt+0x1cf24>
   2f608:	mov	r3, #0
   2f60c:	b	2fb34 <__assert_fail@plt+0x1d448>
   2f610:	ldr	r0, [fp, #-16]
   2f614:	bl	2f4b0 <__assert_fail@plt+0x1cdc4>
   2f618:	str	r0, [fp, #-44]	; 0xffffffd4
   2f61c:	ldr	r2, [fp, #-12]
   2f620:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f624:	sub	r3, r2, r3
   2f628:	cmp	r3, #4
   2f62c:	bgt	2f644 <__assert_fail@plt+0x1cf58>
   2f630:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f634:	and	r3, r3, #3072	; 0xc00
   2f638:	mvn	r3, r3, lsr #10
   2f63c:	mvn	r3, r3, lsl #10
   2f640:	b	2f648 <__assert_fail@plt+0x1cf5c>
   2f644:	ldr	r3, [pc, #1268]	; 2fb40 <__assert_fail@plt+0x1d454>
   2f648:	str	r3, [fp, #-48]	; 0xffffffd0
   2f64c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2f650:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f654:	bl	2f4d4 <__assert_fail@plt+0x1cde8>
   2f658:	mov	r3, r0
   2f65c:	b	2fb34 <__assert_fail@plt+0x1d448>
   2f660:	mov	r3, #1
   2f664:	str	r3, [fp, #-20]	; 0xffffffec
   2f668:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f66c:	str	r3, [fp, #-12]
   2f670:	b	2f6cc <__assert_fail@plt+0x1cfe0>
   2f674:	ldr	r3, [fp, #-12]
   2f678:	ldrb	r3, [r3]
   2f67c:	cmp	r3, #61	; 0x3d
   2f680:	beq	2f6a4 <__assert_fail@plt+0x1cfb8>
   2f684:	ldr	r3, [fp, #-12]
   2f688:	ldrb	r3, [r3]
   2f68c:	cmp	r3, #43	; 0x2b
   2f690:	beq	2f6a4 <__assert_fail@plt+0x1cfb8>
   2f694:	ldr	r3, [fp, #-12]
   2f698:	ldrb	r3, [r3]
   2f69c:	cmp	r3, #45	; 0x2d
   2f6a0:	bne	2f6ac <__assert_fail@plt+0x1cfc0>
   2f6a4:	mov	r3, #1
   2f6a8:	b	2f6b0 <__assert_fail@plt+0x1cfc4>
   2f6ac:	mov	r3, #0
   2f6b0:	mov	r2, r3
   2f6b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f6b8:	add	r3, r3, r2
   2f6bc:	str	r3, [fp, #-20]	; 0xffffffec
   2f6c0:	ldr	r3, [fp, #-12]
   2f6c4:	add	r3, r3, #1
   2f6c8:	str	r3, [fp, #-12]
   2f6cc:	ldr	r3, [fp, #-12]
   2f6d0:	ldrb	r3, [r3]
   2f6d4:	cmp	r3, #0
   2f6d8:	bne	2f674 <__assert_fail@plt+0x1cf88>
   2f6dc:	mov	r1, #16
   2f6e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f6e4:	bl	3d354 <__assert_fail@plt+0x2ac68>
   2f6e8:	mov	r3, r0
   2f6ec:	str	r3, [fp, #-52]	; 0xffffffcc
   2f6f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f6f4:	str	r3, [fp, #-12]
   2f6f8:	mov	r3, #0
   2f6fc:	str	r3, [fp, #-24]	; 0xffffffe8
   2f700:	ldr	r3, [fp, #-12]
   2f704:	ldrb	r3, [r3]
   2f708:	cmp	r3, #97	; 0x61
   2f70c:	beq	2f788 <__assert_fail@plt+0x1d09c>
   2f710:	cmp	r3, #97	; 0x61
   2f714:	bgt	2f734 <__assert_fail@plt+0x1d048>
   2f718:	cmp	r3, #45	; 0x2d
   2f71c:	beq	2f7a8 <__assert_fail@plt+0x1d0bc>
   2f720:	cmp	r3, #61	; 0x3d
   2f724:	beq	2f7a8 <__assert_fail@plt+0x1d0bc>
   2f728:	cmp	r3, #43	; 0x2b
   2f72c:	beq	2f7a8 <__assert_fail@plt+0x1d0bc>
   2f730:	b	2fb28 <__assert_fail@plt+0x1d43c>
   2f734:	cmp	r3, #111	; 0x6f
   2f738:	beq	2f774 <__assert_fail@plt+0x1d088>
   2f73c:	cmp	r3, #117	; 0x75
   2f740:	beq	2f750 <__assert_fail@plt+0x1d064>
   2f744:	cmp	r3, #103	; 0x67
   2f748:	beq	2f760 <__assert_fail@plt+0x1d074>
   2f74c:	b	2fb28 <__assert_fail@plt+0x1d43c>
   2f750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f754:	orr	r3, r3, #2496	; 0x9c0
   2f758:	str	r3, [fp, #-24]	; 0xffffffe8
   2f75c:	b	2f798 <__assert_fail@plt+0x1d0ac>
   2f760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f764:	orr	r3, r3, #1072	; 0x430
   2f768:	orr	r3, r3, #8
   2f76c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f770:	b	2f798 <__assert_fail@plt+0x1d0ac>
   2f774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f778:	orr	r3, r3, #516	; 0x204
   2f77c:	orr	r3, r3, #3
   2f780:	str	r3, [fp, #-24]	; 0xffffffe8
   2f784:	b	2f798 <__assert_fail@plt+0x1d0ac>
   2f788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f78c:	mvn	r3, r3, lsr #12
   2f790:	mvn	r3, r3, lsl #12
   2f794:	str	r3, [fp, #-24]	; 0xffffffe8
   2f798:	ldr	r3, [fp, #-12]
   2f79c:	add	r3, r3, #1
   2f7a0:	str	r3, [fp, #-12]
   2f7a4:	b	2f700 <__assert_fail@plt+0x1d014>
   2f7a8:	ldr	r3, [fp, #-12]
   2f7ac:	add	r2, r3, #1
   2f7b0:	str	r2, [fp, #-12]
   2f7b4:	ldrb	r3, [r3]
   2f7b8:	strb	r3, [fp, #-53]	; 0xffffffcb
   2f7bc:	mov	r3, #0
   2f7c0:	str	r3, [fp, #-32]	; 0xffffffe0
   2f7c4:	mov	r3, #3
   2f7c8:	strb	r3, [fp, #-33]	; 0xffffffdf
   2f7cc:	ldr	r3, [fp, #-12]
   2f7d0:	ldrb	r3, [r3]
   2f7d4:	cmp	r3, #103	; 0x67
   2f7d8:	beq	2f8cc <__assert_fail@plt+0x1d1e0>
   2f7dc:	cmp	r3, #103	; 0x67
   2f7e0:	bgt	2f7f4 <__assert_fail@plt+0x1d108>
   2f7e4:	sub	r3, r3, #48	; 0x30
   2f7e8:	cmp	r3, #7
   2f7ec:	bhi	2f8fc <__assert_fail@plt+0x1d210>
   2f7f0:	b	2f808 <__assert_fail@plt+0x1d11c>
   2f7f4:	cmp	r3, #111	; 0x6f
   2f7f8:	beq	2f8e4 <__assert_fail@plt+0x1d1f8>
   2f7fc:	cmp	r3, #117	; 0x75
   2f800:	beq	2f8b4 <__assert_fail@plt+0x1d1c8>
   2f804:	b	2f8fc <__assert_fail@plt+0x1d210>
   2f808:	mov	r3, #0
   2f80c:	str	r3, [fp, #-40]	; 0xffffffd8
   2f810:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f814:	lsl	r2, r3, #3
   2f818:	ldr	r3, [fp, #-12]
   2f81c:	add	r1, r3, #1
   2f820:	str	r1, [fp, #-12]
   2f824:	ldrb	r3, [r3]
   2f828:	add	r3, r2, r3
   2f82c:	sub	r3, r3, #48	; 0x30
   2f830:	str	r3, [fp, #-40]	; 0xffffffd8
   2f834:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f838:	cmp	r3, #4096	; 0x1000
   2f83c:	bcs	2fb24 <__assert_fail@plt+0x1d438>
   2f840:	ldr	r3, [fp, #-12]
   2f844:	ldrb	r3, [r3]
   2f848:	cmp	r3, #47	; 0x2f
   2f84c:	bls	2f860 <__assert_fail@plt+0x1d174>
   2f850:	ldr	r3, [fp, #-12]
   2f854:	ldrb	r3, [r3]
   2f858:	cmp	r3, #55	; 0x37
   2f85c:	bls	2f810 <__assert_fail@plt+0x1d124>
   2f860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f864:	cmp	r3, #0
   2f868:	bne	2fb28 <__assert_fail@plt+0x1d43c>
   2f86c:	ldr	r3, [fp, #-12]
   2f870:	ldrb	r3, [r3]
   2f874:	cmp	r3, #0
   2f878:	beq	2f88c <__assert_fail@plt+0x1d1a0>
   2f87c:	ldr	r3, [fp, #-12]
   2f880:	ldrb	r3, [r3]
   2f884:	cmp	r3, #44	; 0x2c
   2f888:	bne	2fb28 <__assert_fail@plt+0x1d43c>
   2f88c:	ldr	r3, [pc, #684]	; 2fb40 <__assert_fail@plt+0x1d454>
   2f890:	str	r3, [fp, #-32]	; 0xffffffe0
   2f894:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f898:	str	r3, [fp, #-24]	; 0xffffffe8
   2f89c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f8a0:	bl	2f4b0 <__assert_fail@plt+0x1cdc4>
   2f8a4:	str	r0, [fp, #-28]	; 0xffffffe4
   2f8a8:	mov	r3, #1
   2f8ac:	strb	r3, [fp, #-33]	; 0xffffffdf
   2f8b0:	b	2fa18 <__assert_fail@plt+0x1d32c>
   2f8b4:	mov	r3, #448	; 0x1c0
   2f8b8:	str	r3, [fp, #-28]	; 0xffffffe4
   2f8bc:	ldr	r3, [fp, #-12]
   2f8c0:	add	r3, r3, #1
   2f8c4:	str	r3, [fp, #-12]
   2f8c8:	b	2fa18 <__assert_fail@plt+0x1d32c>
   2f8cc:	mov	r3, #56	; 0x38
   2f8d0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f8d4:	ldr	r3, [fp, #-12]
   2f8d8:	add	r3, r3, #1
   2f8dc:	str	r3, [fp, #-12]
   2f8e0:	b	2fa18 <__assert_fail@plt+0x1d32c>
   2f8e4:	mov	r3, #7
   2f8e8:	str	r3, [fp, #-28]	; 0xffffffe4
   2f8ec:	ldr	r3, [fp, #-12]
   2f8f0:	add	r3, r3, #1
   2f8f4:	str	r3, [fp, #-12]
   2f8f8:	b	2fa18 <__assert_fail@plt+0x1d32c>
   2f8fc:	mov	r3, #0
   2f900:	str	r3, [fp, #-28]	; 0xffffffe4
   2f904:	mov	r3, #1
   2f908:	strb	r3, [fp, #-33]	; 0xffffffdf
   2f90c:	ldr	r3, [fp, #-12]
   2f910:	ldrb	r3, [r3]
   2f914:	sub	r3, r3, #88	; 0x58
   2f918:	cmp	r3, #32
   2f91c:	ldrls	pc, [pc, r3, lsl #2]
   2f920:	b	2fa14 <__assert_fail@plt+0x1d328>
   2f924:	ldrdeq	pc, [r2], -r8
   2f928:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f92c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f930:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f934:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f938:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f93c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f940:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f944:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f948:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f94c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f950:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f954:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f958:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f95c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f960:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f964:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f968:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f96c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f970:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f974:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f978:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f97c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f980:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f984:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f988:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f98c:	andeq	pc, r2, r8, lsr #19
   2f990:	andeq	pc, r2, r4, ror #19
   2f994:	strdeq	pc, [r2], -r4
   2f998:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f99c:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   2f9a0:			; <UNDEFINED> instruction: 0x0002f9b8
   2f9a4:	andeq	pc, r2, r8, asr #19
   2f9a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9ac:	orr	r3, r3, #292	; 0x124
   2f9b0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f9b4:	b	2fa04 <__assert_fail@plt+0x1d318>
   2f9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9bc:	orr	r3, r3, #146	; 0x92
   2f9c0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f9c4:	b	2fa04 <__assert_fail@plt+0x1d318>
   2f9c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9cc:	orr	r3, r3, #73	; 0x49
   2f9d0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f9d4:	b	2fa04 <__assert_fail@plt+0x1d318>
   2f9d8:	mov	r3, #2
   2f9dc:	strb	r3, [fp, #-33]	; 0xffffffdf
   2f9e0:	b	2fa04 <__assert_fail@plt+0x1d318>
   2f9e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9e8:	orr	r3, r3, #3072	; 0xc00
   2f9ec:	str	r3, [fp, #-28]	; 0xffffffe4
   2f9f0:	b	2fa04 <__assert_fail@plt+0x1d318>
   2f9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9f8:	orr	r3, r3, #512	; 0x200
   2f9fc:	str	r3, [fp, #-28]	; 0xffffffe4
   2fa00:	nop			; (mov r0, r0)
   2fa04:	ldr	r3, [fp, #-12]
   2fa08:	add	r3, r3, #1
   2fa0c:	str	r3, [fp, #-12]
   2fa10:	b	2f90c <__assert_fail@plt+0x1d220>
   2fa14:	nop			; (mov r0, r0)
   2fa18:	ldr	r3, [fp, #-8]
   2fa1c:	add	r2, r3, #1
   2fa20:	str	r2, [fp, #-8]
   2fa24:	lsl	r3, r3, #4
   2fa28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fa2c:	add	r3, r2, r3
   2fa30:	str	r3, [fp, #-60]	; 0xffffffc4
   2fa34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fa38:	ldrb	r2, [fp, #-53]	; 0xffffffcb
   2fa3c:	strb	r2, [r3]
   2fa40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fa44:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   2fa48:	strb	r2, [r3, #1]
   2fa4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fa50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fa54:	str	r2, [r3, #4]
   2fa58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fa5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2fa60:	str	r2, [r3, #8]
   2fa64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fa68:	cmp	r3, #0
   2fa6c:	bne	2fa94 <__assert_fail@plt+0x1d3a8>
   2fa70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fa74:	cmp	r3, #0
   2fa78:	beq	2fa8c <__assert_fail@plt+0x1d3a0>
   2fa7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fa80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fa84:	and	r3, r3, r2
   2fa88:	b	2fa98 <__assert_fail@plt+0x1d3ac>
   2fa8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fa90:	b	2fa98 <__assert_fail@plt+0x1d3ac>
   2fa94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fa98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2fa9c:	str	r3, [r2, #12]
   2faa0:	ldr	r3, [fp, #-12]
   2faa4:	ldrb	r3, [r3]
   2faa8:	cmp	r3, #61	; 0x3d
   2faac:	beq	2f7a8 <__assert_fail@plt+0x1d0bc>
   2fab0:	ldr	r3, [fp, #-12]
   2fab4:	ldrb	r3, [r3]
   2fab8:	cmp	r3, #43	; 0x2b
   2fabc:	beq	2f7a8 <__assert_fail@plt+0x1d0bc>
   2fac0:	ldr	r3, [fp, #-12]
   2fac4:	ldrb	r3, [r3]
   2fac8:	cmp	r3, #45	; 0x2d
   2facc:	beq	2f7a8 <__assert_fail@plt+0x1d0bc>
   2fad0:	ldr	r3, [fp, #-12]
   2fad4:	ldrb	r3, [r3]
   2fad8:	cmp	r3, #44	; 0x2c
   2fadc:	bne	2faf0 <__assert_fail@plt+0x1d404>
   2fae0:	ldr	r3, [fp, #-12]
   2fae4:	add	r3, r3, #1
   2fae8:	str	r3, [fp, #-12]
   2faec:	b	2f6f8 <__assert_fail@plt+0x1d00c>
   2faf0:	nop			; (mov r0, r0)
   2faf4:	ldr	r3, [fp, #-12]
   2faf8:	ldrb	r3, [r3]
   2fafc:	cmp	r3, #0
   2fb00:	bne	2fb28 <__assert_fail@plt+0x1d43c>
   2fb04:	ldr	r3, [fp, #-8]
   2fb08:	lsl	r3, r3, #4
   2fb0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2fb10:	add	r3, r2, r3
   2fb14:	mov	r2, #0
   2fb18:	strb	r2, [r3, #1]
   2fb1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fb20:	b	2fb34 <__assert_fail@plt+0x1d448>
   2fb24:	nop			; (mov r0, r0)
   2fb28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2fb2c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   2fb30:	mov	r3, #0
   2fb34:	mov	r0, r3
   2fb38:	sub	sp, fp, #4
   2fb3c:	pop	{fp, pc}
   2fb40:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2fb44:	push	{fp, lr}
   2fb48:	add	fp, sp, #4
   2fb4c:	sub	sp, sp, #112	; 0x70
   2fb50:	str	r0, [fp, #-112]	; 0xffffff90
   2fb54:	sub	r3, fp, #108	; 0x6c
   2fb58:	mov	r1, r3
   2fb5c:	ldr	r0, [fp, #-112]	; 0xffffff90
   2fb60:	bl	64084 <__assert_fail@plt+0x51998>
   2fb64:	mov	r3, r0
   2fb68:	cmp	r3, #0
   2fb6c:	beq	2fb78 <__assert_fail@plt+0x1d48c>
   2fb70:	mov	r3, #0
   2fb74:	b	2fb8c <__assert_fail@plt+0x1d4a0>
   2fb78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fb7c:	ldr	r1, [pc, #20]	; 2fb98 <__assert_fail@plt+0x1d4ac>
   2fb80:	mov	r0, r3
   2fb84:	bl	2f4d4 <__assert_fail@plt+0x1cde8>
   2fb88:	mov	r3, r0
   2fb8c:	mov	r0, r3
   2fb90:	sub	sp, fp, #4
   2fb94:	pop	{fp, pc}
   2fb98:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2fb9c:	push	{fp}		; (str fp, [sp, #-4]!)
   2fba0:	add	fp, sp, #0
   2fba4:	sub	sp, sp, #44	; 0x2c
   2fba8:	str	r0, [fp, #-32]	; 0xffffffe0
   2fbac:	str	r2, [fp, #-40]	; 0xffffffd8
   2fbb0:	str	r3, [fp, #-44]	; 0xffffffd4
   2fbb4:	mov	r3, r1
   2fbb8:	strb	r3, [fp, #-33]	; 0xffffffdf
   2fbbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fbc0:	lsl	r3, r3, #20
   2fbc4:	lsr	r3, r3, #20
   2fbc8:	str	r3, [fp, #-8]
   2fbcc:	mov	r3, #0
   2fbd0:	str	r3, [fp, #-12]
   2fbd4:	b	2fdf4 <__assert_fail@plt+0x1d708>
   2fbd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fbdc:	ldr	r3, [r3, #4]
   2fbe0:	str	r3, [fp, #-20]	; 0xffffffec
   2fbe4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2fbe8:	cmp	r3, #0
   2fbec:	beq	2fbf8 <__assert_fail@plt+0x1d50c>
   2fbf0:	mov	r2, #3072	; 0xc00
   2fbf4:	b	2fbfc <__assert_fail@plt+0x1d510>
   2fbf8:	mov	r2, #0
   2fbfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fc00:	ldr	r3, [r3, #12]
   2fc04:	mvn	r3, r3
   2fc08:	and	r3, r3, r2
   2fc0c:	str	r3, [fp, #-24]	; 0xffffffe8
   2fc10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fc14:	ldr	r3, [r3, #8]
   2fc18:	str	r3, [fp, #-16]
   2fc1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fc20:	ldrb	r3, [r3, #1]
   2fc24:	cmp	r3, #2
   2fc28:	beq	2fcbc <__assert_fail@plt+0x1d5d0>
   2fc2c:	cmp	r3, #3
   2fc30:	beq	2fc3c <__assert_fail@plt+0x1d550>
   2fc34:	cmp	r3, #1
   2fc38:	b	2fce4 <__assert_fail@plt+0x1d5f8>
   2fc3c:	ldr	r2, [fp, #-16]
   2fc40:	ldr	r3, [fp, #-8]
   2fc44:	and	r3, r3, r2
   2fc48:	str	r3, [fp, #-16]
   2fc4c:	ldr	r3, [fp, #-16]
   2fc50:	and	r3, r3, #292	; 0x124
   2fc54:	cmp	r3, #0
   2fc58:	beq	2fc64 <__assert_fail@plt+0x1d578>
   2fc5c:	mov	r2, #292	; 0x124
   2fc60:	b	2fc68 <__assert_fail@plt+0x1d57c>
   2fc64:	mov	r2, #0
   2fc68:	ldr	r3, [fp, #-16]
   2fc6c:	and	r3, r3, #146	; 0x92
   2fc70:	cmp	r3, #0
   2fc74:	beq	2fc80 <__assert_fail@plt+0x1d594>
   2fc78:	mov	r3, #146	; 0x92
   2fc7c:	b	2fc84 <__assert_fail@plt+0x1d598>
   2fc80:	mov	r3, #0
   2fc84:	orr	r2, r2, r3
   2fc88:	ldr	r3, [fp, #-16]
   2fc8c:	and	r3, r3, #73	; 0x49
   2fc90:	cmp	r3, #0
   2fc94:	beq	2fca0 <__assert_fail@plt+0x1d5b4>
   2fc98:	mov	r3, #73	; 0x49
   2fc9c:	b	2fca4 <__assert_fail@plt+0x1d5b8>
   2fca0:	mov	r3, #0
   2fca4:	orr	r3, r2, r3
   2fca8:	mov	r2, r3
   2fcac:	ldr	r3, [fp, #-16]
   2fcb0:	orr	r3, r3, r2
   2fcb4:	str	r3, [fp, #-16]
   2fcb8:	b	2fce4 <__assert_fail@plt+0x1d5f8>
   2fcbc:	ldr	r3, [fp, #-8]
   2fcc0:	and	r2, r3, #73	; 0x49
   2fcc4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2fcc8:	orr	r3, r2, r3
   2fccc:	cmp	r3, #0
   2fcd0:	beq	2fce0 <__assert_fail@plt+0x1d5f4>
   2fcd4:	ldr	r3, [fp, #-16]
   2fcd8:	orr	r3, r3, #73	; 0x49
   2fcdc:	str	r3, [fp, #-16]
   2fce0:	nop			; (mov r0, r0)
   2fce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fce8:	cmp	r3, #0
   2fcec:	bne	2fcfc <__assert_fail@plt+0x1d610>
   2fcf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2fcf4:	mvn	r3, r3
   2fcf8:	b	2fd00 <__assert_fail@plt+0x1d614>
   2fcfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fd00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fd04:	mvn	r2, r2
   2fd08:	and	r3, r3, r2
   2fd0c:	ldr	r2, [fp, #-16]
   2fd10:	and	r3, r3, r2
   2fd14:	str	r3, [fp, #-16]
   2fd18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fd1c:	ldrb	r3, [r3]
   2fd20:	cmp	r3, #45	; 0x2d
   2fd24:	beq	2fdc0 <__assert_fail@plt+0x1d6d4>
   2fd28:	cmp	r3, #61	; 0x3d
   2fd2c:	beq	2fd3c <__assert_fail@plt+0x1d650>
   2fd30:	cmp	r3, #43	; 0x2b
   2fd34:	beq	2fd9c <__assert_fail@plt+0x1d6b0>
   2fd38:	b	2fde8 <__assert_fail@plt+0x1d6fc>
   2fd3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fd40:	cmp	r3, #0
   2fd44:	beq	2fd54 <__assert_fail@plt+0x1d668>
   2fd48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fd4c:	mvn	r3, r3
   2fd50:	b	2fd58 <__assert_fail@plt+0x1d66c>
   2fd54:	mov	r3, #0
   2fd58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fd5c:	orr	r3, r3, r2
   2fd60:	str	r3, [fp, #-28]	; 0xffffffe4
   2fd64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fd68:	mvn	r3, r3
   2fd6c:	lsl	r3, r3, #20
   2fd70:	lsr	r3, r3, #20
   2fd74:	ldr	r2, [fp, #-12]
   2fd78:	orr	r3, r2, r3
   2fd7c:	str	r3, [fp, #-12]
   2fd80:	ldr	r2, [fp, #-8]
   2fd84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fd88:	and	r2, r2, r3
   2fd8c:	ldr	r3, [fp, #-16]
   2fd90:	orr	r3, r2, r3
   2fd94:	str	r3, [fp, #-8]
   2fd98:	b	2fde8 <__assert_fail@plt+0x1d6fc>
   2fd9c:	ldr	r2, [fp, #-12]
   2fda0:	ldr	r3, [fp, #-16]
   2fda4:	orr	r3, r2, r3
   2fda8:	str	r3, [fp, #-12]
   2fdac:	ldr	r2, [fp, #-8]
   2fdb0:	ldr	r3, [fp, #-16]
   2fdb4:	orr	r3, r2, r3
   2fdb8:	str	r3, [fp, #-8]
   2fdbc:	b	2fde8 <__assert_fail@plt+0x1d6fc>
   2fdc0:	ldr	r2, [fp, #-12]
   2fdc4:	ldr	r3, [fp, #-16]
   2fdc8:	orr	r3, r2, r3
   2fdcc:	str	r3, [fp, #-12]
   2fdd0:	ldr	r3, [fp, #-16]
   2fdd4:	mvn	r3, r3
   2fdd8:	ldr	r2, [fp, #-8]
   2fddc:	and	r3, r3, r2
   2fde0:	str	r3, [fp, #-8]
   2fde4:	nop			; (mov r0, r0)
   2fde8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fdec:	add	r3, r3, #16
   2fdf0:	str	r3, [fp, #-44]	; 0xffffffd4
   2fdf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fdf8:	ldrb	r3, [r3, #1]
   2fdfc:	cmp	r3, #0
   2fe00:	bne	2fbd8 <__assert_fail@plt+0x1d4ec>
   2fe04:	ldr	r3, [fp, #4]
   2fe08:	cmp	r3, #0
   2fe0c:	beq	2fe1c <__assert_fail@plt+0x1d730>
   2fe10:	ldr	r3, [fp, #4]
   2fe14:	ldr	r2, [fp, #-12]
   2fe18:	str	r2, [r3]
   2fe1c:	ldr	r3, [fp, #-8]
   2fe20:	mov	r0, r3
   2fe24:	add	sp, fp, #0
   2fe28:	pop	{fp}		; (ldr fp, [sp], #4)
   2fe2c:	bx	lr
   2fe30:	push	{r4, fp, lr}
   2fe34:	add	fp, sp, #8
   2fe38:	sub	sp, sp, #12
   2fe3c:	str	r0, [fp, #-16]
   2fe40:	ldr	r3, [pc, #32]	; 2fe68 <__assert_fail@plt+0x1d77c>
   2fe44:	ldr	r4, [r3]
   2fe48:	ldr	r0, [pc, #28]	; 2fe6c <__assert_fail@plt+0x1d780>
   2fe4c:	bl	12398 <gettext@plt>
   2fe50:	mov	r3, r0
   2fe54:	mov	r2, r3
   2fe58:	ldr	r1, [fp, #-16]
   2fe5c:	mov	r0, r4
   2fe60:	bl	122b4 <error@plt>
   2fe64:	bl	12698 <abort@plt>
   2fe68:	andeq	ip, r7, ip, asr #13
   2fe6c:	ldrdeq	r8, [r6], -ip
   2fe70:	push	{r4, fp, lr}
   2fe74:	add	fp, sp, #8
   2fe78:	sub	sp, sp, #12
   2fe7c:	str	r0, [fp, #-16]
   2fe80:	ldr	r3, [pc, #32]	; 2fea8 <__assert_fail@plt+0x1d7bc>
   2fe84:	ldr	r4, [r3]
   2fe88:	ldr	r0, [pc, #28]	; 2feac <__assert_fail@plt+0x1d7c0>
   2fe8c:	bl	12398 <gettext@plt>
   2fe90:	mov	r3, r0
   2fe94:	mov	r2, r3
   2fe98:	ldr	r1, [fp, #-16]
   2fe9c:	mov	r0, r4
   2fea0:	bl	122b4 <error@plt>
   2fea4:	bl	12698 <abort@plt>
   2fea8:	andeq	ip, r7, ip, asr #13
   2feac:	andeq	r8, r6, r8, lsl #20
   2feb0:	push	{r2, r3}
   2feb4:	push	{fp, lr}
   2feb8:	add	fp, sp, #4
   2febc:	sub	sp, sp, #16
   2fec0:	str	r0, [fp, #-16]
   2fec4:	str	r1, [fp, #-20]	; 0xffffffec
   2fec8:	mov	r3, #0
   2fecc:	str	r3, [fp, #-8]
   2fed0:	ldr	r3, [fp, #4]
   2fed4:	and	r3, r3, #64	; 0x40
   2fed8:	cmp	r3, #0
   2fedc:	beq	2fefc <__assert_fail@plt+0x1d810>
   2fee0:	add	r3, fp, #8
   2fee4:	str	r3, [fp, #-12]
   2fee8:	ldr	r3, [fp, #-12]
   2feec:	add	r2, r3, #4
   2fef0:	str	r2, [fp, #-12]
   2fef4:	ldr	r3, [r3]
   2fef8:	str	r3, [fp, #-8]
   2fefc:	ldr	r3, [fp, #-8]
   2ff00:	ldr	r2, [fp, #4]
   2ff04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ff08:	ldr	r0, [fp, #-16]
   2ff0c:	bl	123e0 <openat64@plt>
   2ff10:	mov	r3, r0
   2ff14:	mov	r0, r3
   2ff18:	bl	3c918 <__assert_fail@plt+0x2a22c>
   2ff1c:	mov	r3, r0
   2ff20:	mov	r0, r3
   2ff24:	sub	sp, fp, #4
   2ff28:	pop	{fp, lr}
   2ff2c:	add	sp, sp, #8
   2ff30:	bx	lr
   2ff34:	andeq	r0, r0, r0
   2ff38:	push	{fp}		; (str fp, [sp, #-4]!)
   2ff3c:	add	fp, sp, #0
   2ff40:	sub	sp, sp, #12
   2ff44:	strd	r0, [fp, #-12]
   2ff48:	ldrd	r2, [fp, #-12]
   2ff4c:	mov	r0, #-2147483648	; 0x80000000
   2ff50:	mvn	r1, #0
   2ff54:	cmp	r2, r0
   2ff58:	sbcs	r3, r3, r1
   2ff5c:	blt	2ff78 <__assert_fail@plt+0x1d88c>
   2ff60:	ldrd	r2, [fp, #-12]
   2ff64:	mvn	r0, #-2147483648	; 0x80000000
   2ff68:	mov	r1, #0
   2ff6c:	cmp	r0, r2
   2ff70:	sbcs	r3, r1, r3
   2ff74:	bge	2ff80 <__assert_fail@plt+0x1d894>
   2ff78:	mov	r3, #1
   2ff7c:	b	2ff84 <__assert_fail@plt+0x1d898>
   2ff80:	mov	r3, #0
   2ff84:	and	r3, r3, #1
   2ff88:	uxtb	r3, r3
   2ff8c:	mov	r0, r3
   2ff90:	add	sp, fp, #0
   2ff94:	pop	{fp}		; (ldr fp, [sp], #4)
   2ff98:	bx	lr
   2ff9c:	push	{fp}		; (str fp, [sp, #-4]!)
   2ffa0:	add	fp, sp, #0
   2ffa4:	sub	sp, sp, #12
   2ffa8:	mov	r3, r0
   2ffac:	strb	r3, [fp, #-5]
   2ffb0:	ldrb	r3, [fp, #-5]
   2ffb4:	mov	r0, r3
   2ffb8:	add	sp, fp, #0
   2ffbc:	pop	{fp}		; (ldr fp, [sp], #4)
   2ffc0:	bx	lr
   2ffc4:	push	{r0, r1, r2, r3}
   2ffc8:	push	{fp, lr}
   2ffcc:	add	fp, sp, #4
   2ffd0:	sub	sp, sp, #8
   2ffd4:	ldr	r3, [pc, #68]	; 30020 <__assert_fail@plt+0x1d934>
   2ffd8:	ldr	r3, [r3]
   2ffdc:	mov	r2, #6
   2ffe0:	mov	r1, #1
   2ffe4:	ldr	r0, [pc, #56]	; 30024 <__assert_fail@plt+0x1d938>
   2ffe8:	bl	12224 <fwrite@plt>
   2ffec:	add	r3, fp, #8
   2fff0:	str	r3, [fp, #-8]
   2fff4:	ldr	r3, [pc, #36]	; 30020 <__assert_fail@plt+0x1d934>
   2fff8:	ldr	r3, [r3]
   2fffc:	ldr	r2, [fp, #-8]
   30000:	ldr	r1, [fp, #4]
   30004:	mov	r0, r3
   30008:	bl	12554 <vfprintf@plt>
   3000c:	nop			; (mov r0, r0)
   30010:	sub	sp, fp, #4
   30014:	pop	{fp, lr}
   30018:	add	sp, sp, #16
   3001c:	bx	lr
   30020:	andeq	ip, r7, r8, lsr #14
   30024:	andeq	r8, r6, r8, lsr sl
   30028:	push	{fp}		; (str fp, [sp, #-4]!)
   3002c:	add	fp, sp, #0
   30030:	sub	sp, sp, #12
   30034:	str	r0, [fp, #-8]
   30038:	mov	r3, #0
   3003c:	mov	r0, r3
   30040:	add	sp, fp, #0
   30044:	pop	{fp}		; (ldr fp, [sp], #4)
   30048:	bx	lr
   3004c:	sub	sp, sp, #8
   30050:	push	{fp, lr}
   30054:	add	fp, sp, #4
   30058:	sub	sp, sp, #8
   3005c:	str	r0, [fp, #-8]
   30060:	add	r1, fp, #4
   30064:	stm	r1, {r2, r3}
   30068:	ldr	r3, [fp, #-8]
   3006c:	ldr	r3, [r3, #156]	; 0x9c
   30070:	cmp	r3, #0
   30074:	beq	300e8 <__assert_fail@plt+0x1d9fc>
   30078:	ldr	r3, [fp, #-8]
   3007c:	ldr	r3, [r3, #48]	; 0x30
   30080:	cmp	r3, #0
   30084:	bne	300e8 <__assert_fail@plt+0x1d9fc>
   30088:	ldr	r3, [fp, #-8]
   3008c:	ldrb	r3, [r3, #153]	; 0x99
   30090:	eor	r3, r3, #1
   30094:	uxtb	r3, r3
   30098:	cmp	r3, #0
   3009c:	beq	300e8 <__assert_fail@plt+0x1d9fc>
   300a0:	ldr	r3, [fp, #-8]
   300a4:	ldr	r3, [r3, #172]	; 0xac
   300a8:	cmp	r3, #0
   300ac:	bne	300bc <__assert_fail@plt+0x1d9d0>
   300b0:	ldr	r3, [fp, #20]
   300b4:	cmp	r3, #2
   300b8:	ble	300e8 <__assert_fail@plt+0x1d9fc>
   300bc:	ldr	r3, [fp, #-8]
   300c0:	mov	r2, #1
   300c4:	strb	r2, [r3, #180]	; 0xb4
   300c8:	ldr	r3, [fp, #-8]
   300cc:	add	ip, r3, #32
   300d0:	add	lr, fp, #4
   300d4:	ldm	lr!, {r0, r1, r2, r3}
   300d8:	stmia	ip!, {r0, r1, r2, r3}
   300dc:	ldm	lr, {r0, r1}
   300e0:	stm	ip, {r0, r1}
   300e4:	b	30224 <__assert_fail@plt+0x1db38>
   300e8:	ldr	r3, [fp, #20]
   300ec:	cmp	r3, #4
   300f0:	ble	30188 <__assert_fail@plt+0x1da9c>
   300f4:	ldr	r3, [fp, #-8]
   300f8:	ldr	r3, [r3, #156]	; 0x9c
   300fc:	add	r2, r3, #1
   30100:	ldr	r3, [fp, #-8]
   30104:	str	r2, [r3, #156]	; 0x9c
   30108:	ldrd	r0, [fp, #12]
   3010c:	mov	r2, #100	; 0x64
   30110:	mov	r3, #0
   30114:	bl	63d78 <__assert_fail@plt+0x5168c>
   30118:	ldr	r1, [fp, #-8]
   3011c:	strd	r2, [r1, #64]	; 0x40
   30120:	ldrd	r0, [fp, #12]
   30124:	mov	r2, #100	; 0x64
   30128:	mov	r3, #0
   3012c:	bl	63d78 <__assert_fail@plt+0x5168c>
   30130:	mov	r2, r0
   30134:	mov	r3, r1
   30138:	mov	r0, r2
   3013c:	mov	r1, r3
   30140:	mov	r2, #100	; 0x64
   30144:	mov	r3, #0
   30148:	bl	63d78 <__assert_fail@plt+0x5168c>
   3014c:	ldr	r1, [fp, #-8]
   30150:	strd	r2, [r1, #56]	; 0x38
   30154:	ldrd	r0, [fp, #12]
   30158:	ldr	r2, [pc, #216]	; 30238 <__assert_fail@plt+0x1db4c>
   3015c:	mov	r3, #0
   30160:	bl	63d78 <__assert_fail@plt+0x5168c>
   30164:	mov	r2, r0
   30168:	mov	r3, r1
   3016c:	ldr	r1, [fp, #-8]
   30170:	strd	r2, [r1, #40]	; 0x28
   30174:	ldr	r3, [fp, #20]
   30178:	sub	r2, r3, #4
   3017c:	ldr	r3, [fp, #-8]
   30180:	str	r2, [r3, #48]	; 0x30
   30184:	b	30224 <__assert_fail@plt+0x1db38>
   30188:	ldr	r3, [fp, #-8]
   3018c:	ldr	r3, [r3, #172]	; 0xac
   30190:	add	r2, r3, #1
   30194:	ldr	r3, [fp, #-8]
   30198:	str	r2, [r3, #172]	; 0xac
   3019c:	ldr	r3, [fp, #20]
   301a0:	cmp	r3, #2
   301a4:	bgt	301c8 <__assert_fail@plt+0x1dadc>
   301a8:	ldrd	r2, [fp, #12]
   301ac:	ldr	r1, [fp, #-8]
   301b0:	strd	r2, [r1, #72]	; 0x48
   301b4:	ldr	r1, [fp, #-8]
   301b8:	mov	r2, #0
   301bc:	mov	r3, #0
   301c0:	strd	r2, [r1, #80]	; 0x50
   301c4:	b	30200 <__assert_fail@plt+0x1db14>
   301c8:	ldrd	r0, [fp, #12]
   301cc:	mov	r2, #100	; 0x64
   301d0:	mov	r3, #0
   301d4:	bl	63d78 <__assert_fail@plt+0x5168c>
   301d8:	mov	r2, r0
   301dc:	mov	r3, r1
   301e0:	ldr	r1, [fp, #-8]
   301e4:	strd	r2, [r1, #72]	; 0x48
   301e8:	ldrd	r0, [fp, #12]
   301ec:	mov	r2, #100	; 0x64
   301f0:	mov	r3, #0
   301f4:	bl	63d78 <__assert_fail@plt+0x5168c>
   301f8:	ldr	r1, [fp, #-8]
   301fc:	strd	r2, [r1, #80]	; 0x50
   30200:	ldr	r3, [fp, #-8]
   30204:	mov	r2, #0
   30208:	str	r2, [r3, #88]	; 0x58
   3020c:	ldr	r3, [fp, #-8]
   30210:	mov	r2, #0
   30214:	str	r2, [r3, #92]	; 0x5c
   30218:	ldr	r3, [fp, #-8]
   3021c:	mov	r2, #2
   30220:	str	r2, [r3, #28]
   30224:	nop			; (mov r0, r0)
   30228:	sub	sp, fp, #4
   3022c:	pop	{fp, lr}
   30230:	add	sp, sp, #8
   30234:	bx	lr
   30238:	andeq	r2, r0, r0, lsl r7
   3023c:	sub	sp, sp, #8
   30240:	push	{r4, r5, fp}
   30244:	add	fp, sp, #8
   30248:	sub	sp, sp, #12
   3024c:	str	r0, [fp, #-16]
   30250:	add	r1, fp, #4
   30254:	stm	r1, {r2, r3}
   30258:	ldr	r3, [fp, #60]	; 0x3c
   3025c:	cmp	r3, #0
   30260:	bge	30958 <__assert_fail@plt+0x1e26c>
   30264:	ldr	r3, [fp, #-16]
   30268:	ldr	r3, [r3, #144]	; 0x90
   3026c:	mvn	r3, r3
   30270:	lsr	r3, r3, #31
   30274:	uxtb	r2, r3
   30278:	ldr	r3, [fp, #52]	; 0x34
   3027c:	lsr	r3, r3, #31
   30280:	uxtb	r3, r3
   30284:	eor	r3, r3, r2
   30288:	uxtb	r3, r3
   3028c:	cmp	r3, #0
   30290:	beq	3029c <__assert_fail@plt+0x1dbb0>
   30294:	mov	r3, #0
   30298:	b	302f0 <__assert_fail@plt+0x1dc04>
   3029c:	ldr	r3, [fp, #-16]
   302a0:	ldr	r3, [r3, #144]	; 0x90
   302a4:	cmp	r3, #0
   302a8:	bge	302d0 <__assert_fail@plt+0x1dbe4>
   302ac:	ldr	r3, [fp, #-16]
   302b0:	ldr	r3, [r3, #144]	; 0x90
   302b4:	add	r2, r3, #-2147483648	; 0x80000000
   302b8:	ldr	r3, [fp, #52]	; 0x34
   302bc:	cmp	r2, r3
   302c0:	movlt	r3, #1
   302c4:	movge	r3, #0
   302c8:	uxtb	r3, r3
   302cc:	b	302f0 <__assert_fail@plt+0x1dc04>
   302d0:	ldr	r3, [fp, #52]	; 0x34
   302d4:	sub	r2, r3, #-2147483647	; 0x80000001
   302d8:	ldr	r3, [fp, #-16]
   302dc:	ldr	r3, [r3, #144]	; 0x90
   302e0:	cmp	r2, r3
   302e4:	movlt	r3, #1
   302e8:	movge	r3, #0
   302ec:	uxtb	r3, r3
   302f0:	cmp	r3, #0
   302f4:	beq	30320 <__assert_fail@plt+0x1dc34>
   302f8:	ldr	r3, [fp, #-16]
   302fc:	ldr	r3, [r3, #144]	; 0x90
   30300:	mov	r2, r3
   30304:	ldr	r3, [fp, #52]	; 0x34
   30308:	sub	r3, r2, r3
   3030c:	mov	r2, r3
   30310:	ldr	r3, [fp, #-16]
   30314:	str	r2, [r3, #144]	; 0x90
   30318:	mov	ip, #1
   3031c:	b	30344 <__assert_fail@plt+0x1dc58>
   30320:	ldr	r3, [fp, #-16]
   30324:	ldr	r3, [r3, #144]	; 0x90
   30328:	mov	r2, r3
   3032c:	ldr	r3, [fp, #52]	; 0x34
   30330:	sub	r3, r2, r3
   30334:	mov	r2, r3
   30338:	ldr	r3, [fp, #-16]
   3033c:	str	r2, [r3, #144]	; 0x90
   30340:	mov	ip, #0
   30344:	ldr	r3, [fp, #-16]
   30348:	ldrd	r2, [r3, #136]	; 0x88
   3034c:	mvn	r3, r3
   30350:	lsr	r3, r3, #31
   30354:	uxtb	r1, r3
   30358:	ldrd	r2, [fp, #44]	; 0x2c
   3035c:	lsr	r3, r3, #31
   30360:	uxtb	r3, r3
   30364:	eor	r3, r3, r1
   30368:	uxtb	r3, r3
   3036c:	cmp	r3, #0
   30370:	beq	3037c <__assert_fail@plt+0x1dc90>
   30374:	mov	r3, #0
   30378:	b	303e4 <__assert_fail@plt+0x1dcf8>
   3037c:	ldr	r3, [fp, #-16]
   30380:	ldrd	r2, [r3, #136]	; 0x88
   30384:	cmp	r2, #0
   30388:	sbcs	r3, r3, #0
   3038c:	bge	303bc <__assert_fail@plt+0x1dcd0>
   30390:	ldr	r3, [fp, #-16]
   30394:	ldrd	r2, [r3, #136]	; 0x88
   30398:	adds	r0, r2, #0
   3039c:	adc	r1, r3, #-2147483648	; 0x80000000
   303a0:	ldrd	r2, [fp, #44]	; 0x2c
   303a4:	cmp	r0, r2
   303a8:	sbcs	r3, r1, r3
   303ac:	movlt	r3, #1
   303b0:	movge	r3, #0
   303b4:	uxtb	r3, r3
   303b8:	b	303e4 <__assert_fail@plt+0x1dcf8>
   303bc:	ldrd	r2, [fp, #44]	; 0x2c
   303c0:	subs	r0, r2, #1
   303c4:	sbc	r1, r3, #-2147483648	; 0x80000000
   303c8:	ldr	r3, [fp, #-16]
   303cc:	ldrd	r2, [r3, #136]	; 0x88
   303d0:	cmp	r0, r2
   303d4:	sbcs	r3, r1, r3
   303d8:	movlt	r3, #1
   303dc:	movge	r3, #0
   303e0:	uxtb	r3, r3
   303e4:	cmp	r3, #0
   303e8:	beq	30418 <__assert_fail@plt+0x1dd2c>
   303ec:	ldr	r3, [fp, #-16]
   303f0:	ldrd	r2, [r3, #136]	; 0x88
   303f4:	mov	r0, r2
   303f8:	mov	r1, r3
   303fc:	ldrd	r2, [fp, #44]	; 0x2c
   30400:	subs	r2, r0, r2
   30404:	sbc	r3, r1, r3
   30408:	ldr	r1, [fp, #-16]
   3040c:	strd	r2, [r1, #136]	; 0x88
   30410:	mov	r3, #1
   30414:	b	30440 <__assert_fail@plt+0x1dd54>
   30418:	ldr	r3, [fp, #-16]
   3041c:	ldrd	r2, [r3, #136]	; 0x88
   30420:	mov	r0, r2
   30424:	mov	r1, r3
   30428:	ldrd	r2, [fp, #44]	; 0x2c
   3042c:	subs	r2, r0, r2
   30430:	sbc	r3, r1, r3
   30434:	ldr	r1, [fp, #-16]
   30438:	strd	r2, [r1, #136]	; 0x88
   3043c:	mov	r3, #0
   30440:	orr	ip, ip, r3
   30444:	ldr	r3, [fp, #-16]
   30448:	ldrd	r2, [r3, #128]	; 0x80
   3044c:	mvn	r3, r3
   30450:	lsr	r3, r3, #31
   30454:	uxtb	r1, r3
   30458:	ldrd	r2, [fp, #36]	; 0x24
   3045c:	lsr	r3, r3, #31
   30460:	uxtb	r3, r3
   30464:	eor	r3, r3, r1
   30468:	uxtb	r3, r3
   3046c:	cmp	r3, #0
   30470:	beq	3047c <__assert_fail@plt+0x1dd90>
   30474:	mov	r3, #0
   30478:	b	304e4 <__assert_fail@plt+0x1ddf8>
   3047c:	ldr	r3, [fp, #-16]
   30480:	ldrd	r2, [r3, #128]	; 0x80
   30484:	cmp	r2, #0
   30488:	sbcs	r3, r3, #0
   3048c:	bge	304bc <__assert_fail@plt+0x1ddd0>
   30490:	ldr	r3, [fp, #-16]
   30494:	ldrd	r2, [r3, #128]	; 0x80
   30498:	adds	r0, r2, #0
   3049c:	adc	r1, r3, #-2147483648	; 0x80000000
   304a0:	ldrd	r2, [fp, #36]	; 0x24
   304a4:	cmp	r0, r2
   304a8:	sbcs	r3, r1, r3
   304ac:	movlt	r3, #1
   304b0:	movge	r3, #0
   304b4:	uxtb	r3, r3
   304b8:	b	304e4 <__assert_fail@plt+0x1ddf8>
   304bc:	ldrd	r2, [fp, #36]	; 0x24
   304c0:	subs	r0, r2, #1
   304c4:	sbc	r1, r3, #-2147483648	; 0x80000000
   304c8:	ldr	r3, [fp, #-16]
   304cc:	ldrd	r2, [r3, #128]	; 0x80
   304d0:	cmp	r0, r2
   304d4:	sbcs	r3, r1, r3
   304d8:	movlt	r3, #1
   304dc:	movge	r3, #0
   304e0:	uxtb	r3, r3
   304e4:	cmp	r3, #0
   304e8:	beq	30518 <__assert_fail@plt+0x1de2c>
   304ec:	ldr	r3, [fp, #-16]
   304f0:	ldrd	r2, [r3, #128]	; 0x80
   304f4:	mov	r0, r2
   304f8:	mov	r1, r3
   304fc:	ldrd	r2, [fp, #36]	; 0x24
   30500:	subs	r2, r0, r2
   30504:	sbc	r3, r1, r3
   30508:	ldr	r1, [fp, #-16]
   3050c:	strd	r2, [r1, #128]	; 0x80
   30510:	mov	r3, #1
   30514:	b	30540 <__assert_fail@plt+0x1de54>
   30518:	ldr	r3, [fp, #-16]
   3051c:	ldrd	r2, [r3, #128]	; 0x80
   30520:	mov	r0, r2
   30524:	mov	r1, r3
   30528:	ldrd	r2, [fp, #36]	; 0x24
   3052c:	subs	r2, r0, r2
   30530:	sbc	r3, r1, r3
   30534:	ldr	r1, [fp, #-16]
   30538:	strd	r2, [r1, #128]	; 0x80
   3053c:	mov	r3, #0
   30540:	orr	ip, ip, r3
   30544:	ldr	r3, [fp, #-16]
   30548:	ldrd	r2, [r3, #120]	; 0x78
   3054c:	mvn	r3, r3
   30550:	lsr	r3, r3, #31
   30554:	uxtb	r1, r3
   30558:	ldrd	r2, [fp, #28]
   3055c:	lsr	r3, r3, #31
   30560:	uxtb	r3, r3
   30564:	eor	r3, r3, r1
   30568:	uxtb	r3, r3
   3056c:	cmp	r3, #0
   30570:	beq	3057c <__assert_fail@plt+0x1de90>
   30574:	mov	r3, #0
   30578:	b	305e4 <__assert_fail@plt+0x1def8>
   3057c:	ldr	r3, [fp, #-16]
   30580:	ldrd	r2, [r3, #120]	; 0x78
   30584:	cmp	r2, #0
   30588:	sbcs	r3, r3, #0
   3058c:	bge	305bc <__assert_fail@plt+0x1ded0>
   30590:	ldr	r3, [fp, #-16]
   30594:	ldrd	r2, [r3, #120]	; 0x78
   30598:	adds	r0, r2, #0
   3059c:	adc	r1, r3, #-2147483648	; 0x80000000
   305a0:	ldrd	r2, [fp, #28]
   305a4:	cmp	r0, r2
   305a8:	sbcs	r3, r1, r3
   305ac:	movlt	r3, #1
   305b0:	movge	r3, #0
   305b4:	uxtb	r3, r3
   305b8:	b	305e4 <__assert_fail@plt+0x1def8>
   305bc:	ldrd	r2, [fp, #28]
   305c0:	subs	r0, r2, #1
   305c4:	sbc	r1, r3, #-2147483648	; 0x80000000
   305c8:	ldr	r3, [fp, #-16]
   305cc:	ldrd	r2, [r3, #120]	; 0x78
   305d0:	cmp	r0, r2
   305d4:	sbcs	r3, r1, r3
   305d8:	movlt	r3, #1
   305dc:	movge	r3, #0
   305e0:	uxtb	r3, r3
   305e4:	cmp	r3, #0
   305e8:	beq	30618 <__assert_fail@plt+0x1df2c>
   305ec:	ldr	r3, [fp, #-16]
   305f0:	ldrd	r2, [r3, #120]	; 0x78
   305f4:	mov	r0, r2
   305f8:	mov	r1, r3
   305fc:	ldrd	r2, [fp, #28]
   30600:	subs	r2, r0, r2
   30604:	sbc	r3, r1, r3
   30608:	ldr	r1, [fp, #-16]
   3060c:	strd	r2, [r1, #120]	; 0x78
   30610:	mov	r3, #1
   30614:	b	30640 <__assert_fail@plt+0x1df54>
   30618:	ldr	r3, [fp, #-16]
   3061c:	ldrd	r2, [r3, #120]	; 0x78
   30620:	mov	r0, r2
   30624:	mov	r1, r3
   30628:	ldrd	r2, [fp, #28]
   3062c:	subs	r2, r0, r2
   30630:	sbc	r3, r1, r3
   30634:	ldr	r1, [fp, #-16]
   30638:	strd	r2, [r1, #120]	; 0x78
   3063c:	mov	r3, #0
   30640:	orr	ip, ip, r3
   30644:	ldr	r3, [fp, #-16]
   30648:	ldrd	r2, [r3, #112]	; 0x70
   3064c:	mvn	r3, r3
   30650:	lsr	r3, r3, #31
   30654:	uxtb	r1, r3
   30658:	ldrd	r2, [fp, #20]
   3065c:	lsr	r3, r3, #31
   30660:	uxtb	r3, r3
   30664:	eor	r3, r3, r1
   30668:	uxtb	r3, r3
   3066c:	cmp	r3, #0
   30670:	beq	3067c <__assert_fail@plt+0x1df90>
   30674:	mov	r3, #0
   30678:	b	306e4 <__assert_fail@plt+0x1dff8>
   3067c:	ldr	r3, [fp, #-16]
   30680:	ldrd	r2, [r3, #112]	; 0x70
   30684:	cmp	r2, #0
   30688:	sbcs	r3, r3, #0
   3068c:	bge	306bc <__assert_fail@plt+0x1dfd0>
   30690:	ldr	r3, [fp, #-16]
   30694:	ldrd	r2, [r3, #112]	; 0x70
   30698:	adds	r0, r2, #0
   3069c:	adc	r1, r3, #-2147483648	; 0x80000000
   306a0:	ldrd	r2, [fp, #20]
   306a4:	cmp	r0, r2
   306a8:	sbcs	r3, r1, r3
   306ac:	movlt	r3, #1
   306b0:	movge	r3, #0
   306b4:	uxtb	r3, r3
   306b8:	b	306e4 <__assert_fail@plt+0x1dff8>
   306bc:	ldrd	r2, [fp, #20]
   306c0:	subs	r0, r2, #1
   306c4:	sbc	r1, r3, #-2147483648	; 0x80000000
   306c8:	ldr	r3, [fp, #-16]
   306cc:	ldrd	r2, [r3, #112]	; 0x70
   306d0:	cmp	r0, r2
   306d4:	sbcs	r3, r1, r3
   306d8:	movlt	r3, #1
   306dc:	movge	r3, #0
   306e0:	uxtb	r3, r3
   306e4:	cmp	r3, #0
   306e8:	beq	30718 <__assert_fail@plt+0x1e02c>
   306ec:	ldr	r3, [fp, #-16]
   306f0:	ldrd	r2, [r3, #112]	; 0x70
   306f4:	mov	r0, r2
   306f8:	mov	r1, r3
   306fc:	ldrd	r2, [fp, #20]
   30700:	subs	r2, r0, r2
   30704:	sbc	r3, r1, r3
   30708:	ldr	r1, [fp, #-16]
   3070c:	strd	r2, [r1, #112]	; 0x70
   30710:	mov	r3, #1
   30714:	b	30740 <__assert_fail@plt+0x1e054>
   30718:	ldr	r3, [fp, #-16]
   3071c:	ldrd	r2, [r3, #112]	; 0x70
   30720:	mov	r0, r2
   30724:	mov	r1, r3
   30728:	ldrd	r2, [fp, #20]
   3072c:	subs	r2, r0, r2
   30730:	sbc	r3, r1, r3
   30734:	ldr	r1, [fp, #-16]
   30738:	strd	r2, [r1, #112]	; 0x70
   3073c:	mov	r3, #0
   30740:	orr	ip, ip, r3
   30744:	ldr	r3, [fp, #-16]
   30748:	ldrd	r2, [r3, #104]	; 0x68
   3074c:	mvn	r3, r3
   30750:	lsr	r3, r3, #31
   30754:	uxtb	r1, r3
   30758:	ldrd	r2, [fp, #12]
   3075c:	lsr	r3, r3, #31
   30760:	uxtb	r3, r3
   30764:	eor	r3, r3, r1
   30768:	uxtb	r3, r3
   3076c:	cmp	r3, #0
   30770:	beq	3077c <__assert_fail@plt+0x1e090>
   30774:	mov	r3, #0
   30778:	b	307e4 <__assert_fail@plt+0x1e0f8>
   3077c:	ldr	r3, [fp, #-16]
   30780:	ldrd	r2, [r3, #104]	; 0x68
   30784:	cmp	r2, #0
   30788:	sbcs	r3, r3, #0
   3078c:	bge	307bc <__assert_fail@plt+0x1e0d0>
   30790:	ldr	r3, [fp, #-16]
   30794:	ldrd	r2, [r3, #104]	; 0x68
   30798:	adds	r0, r2, #0
   3079c:	adc	r1, r3, #-2147483648	; 0x80000000
   307a0:	ldrd	r2, [fp, #12]
   307a4:	cmp	r0, r2
   307a8:	sbcs	r3, r1, r3
   307ac:	movlt	r3, #1
   307b0:	movge	r3, #0
   307b4:	uxtb	r3, r3
   307b8:	b	307e4 <__assert_fail@plt+0x1e0f8>
   307bc:	ldrd	r2, [fp, #12]
   307c0:	subs	r0, r2, #1
   307c4:	sbc	r1, r3, #-2147483648	; 0x80000000
   307c8:	ldr	r3, [fp, #-16]
   307cc:	ldrd	r2, [r3, #104]	; 0x68
   307d0:	cmp	r0, r2
   307d4:	sbcs	r3, r1, r3
   307d8:	movlt	r3, #1
   307dc:	movge	r3, #0
   307e0:	uxtb	r3, r3
   307e4:	cmp	r3, #0
   307e8:	beq	30818 <__assert_fail@plt+0x1e12c>
   307ec:	ldr	r3, [fp, #-16]
   307f0:	ldrd	r2, [r3, #104]	; 0x68
   307f4:	mov	r0, r2
   307f8:	mov	r1, r3
   307fc:	ldrd	r2, [fp, #12]
   30800:	subs	r2, r0, r2
   30804:	sbc	r3, r1, r3
   30808:	ldr	r1, [fp, #-16]
   3080c:	strd	r2, [r1, #104]	; 0x68
   30810:	mov	r3, #1
   30814:	b	30840 <__assert_fail@plt+0x1e154>
   30818:	ldr	r3, [fp, #-16]
   3081c:	ldrd	r2, [r3, #104]	; 0x68
   30820:	mov	r0, r2
   30824:	mov	r1, r3
   30828:	ldrd	r2, [fp, #12]
   3082c:	subs	r2, r0, r2
   30830:	sbc	r3, r1, r3
   30834:	ldr	r1, [fp, #-16]
   30838:	strd	r2, [r1, #104]	; 0x68
   3083c:	mov	r3, #0
   30840:	orr	ip, ip, r3
   30844:	ldr	r3, [fp, #-16]
   30848:	ldrd	r2, [r3, #96]	; 0x60
   3084c:	mvn	r3, r3
   30850:	lsr	r3, r3, #31
   30854:	uxtb	r1, r3
   30858:	ldrd	r2, [fp, #4]
   3085c:	lsr	r3, r3, #31
   30860:	uxtb	r3, r3
   30864:	eor	r3, r3, r1
   30868:	uxtb	r3, r3
   3086c:	cmp	r3, #0
   30870:	beq	3087c <__assert_fail@plt+0x1e190>
   30874:	mov	r3, #0
   30878:	b	308e4 <__assert_fail@plt+0x1e1f8>
   3087c:	ldr	r3, [fp, #-16]
   30880:	ldrd	r2, [r3, #96]	; 0x60
   30884:	cmp	r2, #0
   30888:	sbcs	r3, r3, #0
   3088c:	bge	308bc <__assert_fail@plt+0x1e1d0>
   30890:	ldr	r3, [fp, #-16]
   30894:	ldrd	r2, [r3, #96]	; 0x60
   30898:	adds	r0, r2, #0
   3089c:	adc	r1, r3, #-2147483648	; 0x80000000
   308a0:	ldrd	r2, [fp, #4]
   308a4:	cmp	r0, r2
   308a8:	sbcs	r3, r1, r3
   308ac:	movlt	r3, #1
   308b0:	movge	r3, #0
   308b4:	uxtb	r3, r3
   308b8:	b	308e4 <__assert_fail@plt+0x1e1f8>
   308bc:	ldrd	r2, [fp, #4]
   308c0:	subs	r0, r2, #1
   308c4:	sbc	r1, r3, #-2147483648	; 0x80000000
   308c8:	ldr	r3, [fp, #-16]
   308cc:	ldrd	r2, [r3, #96]	; 0x60
   308d0:	cmp	r0, r2
   308d4:	sbcs	r3, r1, r3
   308d8:	movlt	r3, #1
   308dc:	movge	r3, #0
   308e0:	uxtb	r3, r3
   308e4:	cmp	r3, #0
   308e8:	beq	30918 <__assert_fail@plt+0x1e22c>
   308ec:	ldr	r3, [fp, #-16]
   308f0:	ldrd	r2, [r3, #96]	; 0x60
   308f4:	mov	r0, r2
   308f8:	mov	r1, r3
   308fc:	ldrd	r2, [fp, #4]
   30900:	subs	r2, r0, r2
   30904:	sbc	r3, r1, r3
   30908:	ldr	r1, [fp, #-16]
   3090c:	strd	r2, [r1, #96]	; 0x60
   30910:	mov	r3, #1
   30914:	b	30940 <__assert_fail@plt+0x1e254>
   30918:	ldr	r3, [fp, #-16]
   3091c:	ldrd	r2, [r3, #96]	; 0x60
   30920:	mov	r0, r2
   30924:	mov	r1, r3
   30928:	ldrd	r2, [fp, #4]
   3092c:	subs	r2, r0, r2
   30930:	sbc	r3, r1, r3
   30934:	ldr	r1, [fp, #-16]
   30938:	strd	r2, [r1, #96]	; 0x60
   3093c:	mov	r3, #0
   30940:	orr	r3, ip, r3
   30944:	cmp	r3, #0
   30948:	movne	r3, #1
   3094c:	moveq	r3, #0
   30950:	uxtb	r3, r3
   30954:	b	310ec <__assert_fail@plt+0x1ea00>
   30958:	ldr	r3, [fp, #52]	; 0x34
   3095c:	cmp	r3, #0
   30960:	bge	30988 <__assert_fail@plt+0x1e29c>
   30964:	ldr	r3, [fp, #-16]
   30968:	ldr	r2, [r3, #144]	; 0x90
   3096c:	ldr	r3, [fp, #52]	; 0x34
   30970:	rsb	r3, r3, #-2147483648	; 0x80000000
   30974:	cmp	r2, r3
   30978:	movlt	r3, #1
   3097c:	movge	r3, #0
   30980:	uxtb	r3, r3
   30984:	b	309e0 <__assert_fail@plt+0x1e2f4>
   30988:	ldr	r3, [fp, #-16]
   3098c:	ldr	r3, [r3, #144]	; 0x90
   30990:	cmp	r3, #0
   30994:	bge	309bc <__assert_fail@plt+0x1e2d0>
   30998:	ldr	r2, [fp, #52]	; 0x34
   3099c:	ldr	r3, [fp, #-16]
   309a0:	ldr	r3, [r3, #144]	; 0x90
   309a4:	rsb	r3, r3, #-2147483648	; 0x80000000
   309a8:	cmp	r2, r3
   309ac:	movlt	r3, #1
   309b0:	movge	r3, #0
   309b4:	uxtb	r3, r3
   309b8:	b	309e0 <__assert_fail@plt+0x1e2f4>
   309bc:	ldr	r2, [fp, #52]	; 0x34
   309c0:	mvn	r3, #-2147483648	; 0x80000000
   309c4:	sub	r3, r3, r2
   309c8:	ldr	r2, [fp, #-16]
   309cc:	ldr	r2, [r2, #144]	; 0x90
   309d0:	cmp	r3, r2
   309d4:	movlt	r3, #1
   309d8:	movge	r3, #0
   309dc:	uxtb	r3, r3
   309e0:	cmp	r3, #0
   309e4:	beq	30a10 <__assert_fail@plt+0x1e324>
   309e8:	ldr	r3, [fp, #-16]
   309ec:	ldr	r3, [r3, #144]	; 0x90
   309f0:	mov	r2, r3
   309f4:	ldr	r3, [fp, #52]	; 0x34
   309f8:	add	r3, r2, r3
   309fc:	mov	r2, r3
   30a00:	ldr	r3, [fp, #-16]
   30a04:	str	r2, [r3, #144]	; 0x90
   30a08:	mov	ip, #1
   30a0c:	b	30a34 <__assert_fail@plt+0x1e348>
   30a10:	ldr	r3, [fp, #-16]
   30a14:	ldr	r3, [r3, #144]	; 0x90
   30a18:	mov	r2, r3
   30a1c:	ldr	r3, [fp, #52]	; 0x34
   30a20:	add	r3, r2, r3
   30a24:	mov	r2, r3
   30a28:	ldr	r3, [fp, #-16]
   30a2c:	str	r2, [r3, #144]	; 0x90
   30a30:	mov	ip, #0
   30a34:	ldrd	r2, [fp, #44]	; 0x2c
   30a38:	cmp	r2, #0
   30a3c:	sbcs	r3, r3, #0
   30a40:	bge	30a78 <__assert_fail@plt+0x1e38c>
   30a44:	ldr	r3, [fp, #-16]
   30a48:	ldrd	r0, [r3, #136]	; 0x88
   30a4c:	ldrd	r2, [fp, #44]	; 0x2c
   30a50:	mov	r4, #0
   30a54:	mov	r5, #-2147483648	; 0x80000000
   30a58:	subs	r2, r4, r2
   30a5c:	sbc	r3, r5, r3
   30a60:	cmp	r0, r2
   30a64:	sbcs	r3, r1, r3
   30a68:	movlt	r3, #1
   30a6c:	movge	r3, #0
   30a70:	uxtb	r3, r3
   30a74:	b	30af0 <__assert_fail@plt+0x1e404>
   30a78:	ldr	r3, [fp, #-16]
   30a7c:	ldrd	r2, [r3, #136]	; 0x88
   30a80:	cmp	r2, #0
   30a84:	sbcs	r3, r3, #0
   30a88:	bge	30ac0 <__assert_fail@plt+0x1e3d4>
   30a8c:	ldrd	r0, [fp, #44]	; 0x2c
   30a90:	ldr	r3, [fp, #-16]
   30a94:	ldrd	r2, [r3, #136]	; 0x88
   30a98:	mov	r4, #0
   30a9c:	mov	r5, #-2147483648	; 0x80000000
   30aa0:	subs	r2, r4, r2
   30aa4:	sbc	r3, r5, r3
   30aa8:	cmp	r0, r2
   30aac:	sbcs	r3, r1, r3
   30ab0:	movlt	r3, #1
   30ab4:	movge	r3, #0
   30ab8:	uxtb	r3, r3
   30abc:	b	30af0 <__assert_fail@plt+0x1e404>
   30ac0:	ldrd	r2, [fp, #44]	; 0x2c
   30ac4:	mvn	r0, #0
   30ac8:	mvn	r1, #-2147483648	; 0x80000000
   30acc:	subs	r0, r0, r2
   30ad0:	sbc	r1, r1, r3
   30ad4:	ldr	r3, [fp, #-16]
   30ad8:	ldrd	r2, [r3, #136]	; 0x88
   30adc:	cmp	r0, r2
   30ae0:	sbcs	r3, r1, r3
   30ae4:	movlt	r3, #1
   30ae8:	movge	r3, #0
   30aec:	uxtb	r3, r3
   30af0:	cmp	r3, #0
   30af4:	beq	30b24 <__assert_fail@plt+0x1e438>
   30af8:	ldr	r3, [fp, #-16]
   30afc:	ldrd	r2, [r3, #136]	; 0x88
   30b00:	mov	r0, r2
   30b04:	mov	r1, r3
   30b08:	ldrd	r2, [fp, #44]	; 0x2c
   30b0c:	adds	r2, r2, r0
   30b10:	adc	r3, r3, r1
   30b14:	ldr	r1, [fp, #-16]
   30b18:	strd	r2, [r1, #136]	; 0x88
   30b1c:	mov	r3, #1
   30b20:	b	30b4c <__assert_fail@plt+0x1e460>
   30b24:	ldr	r3, [fp, #-16]
   30b28:	ldrd	r2, [r3, #136]	; 0x88
   30b2c:	mov	r0, r2
   30b30:	mov	r1, r3
   30b34:	ldrd	r2, [fp, #44]	; 0x2c
   30b38:	adds	r2, r2, r0
   30b3c:	adc	r3, r3, r1
   30b40:	ldr	r1, [fp, #-16]
   30b44:	strd	r2, [r1, #136]	; 0x88
   30b48:	mov	r3, #0
   30b4c:	orr	ip, ip, r3
   30b50:	ldrd	r2, [fp, #36]	; 0x24
   30b54:	cmp	r2, #0
   30b58:	sbcs	r3, r3, #0
   30b5c:	bge	30b94 <__assert_fail@plt+0x1e4a8>
   30b60:	ldr	r3, [fp, #-16]
   30b64:	ldrd	r0, [r3, #128]	; 0x80
   30b68:	ldrd	r2, [fp, #36]	; 0x24
   30b6c:	mov	r4, #0
   30b70:	mov	r5, #-2147483648	; 0x80000000
   30b74:	subs	r2, r4, r2
   30b78:	sbc	r3, r5, r3
   30b7c:	cmp	r0, r2
   30b80:	sbcs	r3, r1, r3
   30b84:	movlt	r3, #1
   30b88:	movge	r3, #0
   30b8c:	uxtb	r3, r3
   30b90:	b	30c0c <__assert_fail@plt+0x1e520>
   30b94:	ldr	r3, [fp, #-16]
   30b98:	ldrd	r2, [r3, #128]	; 0x80
   30b9c:	cmp	r2, #0
   30ba0:	sbcs	r3, r3, #0
   30ba4:	bge	30bdc <__assert_fail@plt+0x1e4f0>
   30ba8:	ldrd	r0, [fp, #36]	; 0x24
   30bac:	ldr	r3, [fp, #-16]
   30bb0:	ldrd	r2, [r3, #128]	; 0x80
   30bb4:	mov	r4, #0
   30bb8:	mov	r5, #-2147483648	; 0x80000000
   30bbc:	subs	r2, r4, r2
   30bc0:	sbc	r3, r5, r3
   30bc4:	cmp	r0, r2
   30bc8:	sbcs	r3, r1, r3
   30bcc:	movlt	r3, #1
   30bd0:	movge	r3, #0
   30bd4:	uxtb	r3, r3
   30bd8:	b	30c0c <__assert_fail@plt+0x1e520>
   30bdc:	ldrd	r2, [fp, #36]	; 0x24
   30be0:	mvn	r0, #0
   30be4:	mvn	r1, #-2147483648	; 0x80000000
   30be8:	subs	r0, r0, r2
   30bec:	sbc	r1, r1, r3
   30bf0:	ldr	r3, [fp, #-16]
   30bf4:	ldrd	r2, [r3, #128]	; 0x80
   30bf8:	cmp	r0, r2
   30bfc:	sbcs	r3, r1, r3
   30c00:	movlt	r3, #1
   30c04:	movge	r3, #0
   30c08:	uxtb	r3, r3
   30c0c:	cmp	r3, #0
   30c10:	beq	30c40 <__assert_fail@plt+0x1e554>
   30c14:	ldr	r3, [fp, #-16]
   30c18:	ldrd	r2, [r3, #128]	; 0x80
   30c1c:	mov	r0, r2
   30c20:	mov	r1, r3
   30c24:	ldrd	r2, [fp, #36]	; 0x24
   30c28:	adds	r2, r2, r0
   30c2c:	adc	r3, r3, r1
   30c30:	ldr	r1, [fp, #-16]
   30c34:	strd	r2, [r1, #128]	; 0x80
   30c38:	mov	r3, #1
   30c3c:	b	30c68 <__assert_fail@plt+0x1e57c>
   30c40:	ldr	r3, [fp, #-16]
   30c44:	ldrd	r2, [r3, #128]	; 0x80
   30c48:	mov	r0, r2
   30c4c:	mov	r1, r3
   30c50:	ldrd	r2, [fp, #36]	; 0x24
   30c54:	adds	r2, r2, r0
   30c58:	adc	r3, r3, r1
   30c5c:	ldr	r1, [fp, #-16]
   30c60:	strd	r2, [r1, #128]	; 0x80
   30c64:	mov	r3, #0
   30c68:	orr	ip, ip, r3
   30c6c:	ldrd	r2, [fp, #28]
   30c70:	cmp	r2, #0
   30c74:	sbcs	r3, r3, #0
   30c78:	bge	30cb0 <__assert_fail@plt+0x1e5c4>
   30c7c:	ldr	r3, [fp, #-16]
   30c80:	ldrd	r0, [r3, #120]	; 0x78
   30c84:	ldrd	r2, [fp, #28]
   30c88:	mov	r4, #0
   30c8c:	mov	r5, #-2147483648	; 0x80000000
   30c90:	subs	r2, r4, r2
   30c94:	sbc	r3, r5, r3
   30c98:	cmp	r0, r2
   30c9c:	sbcs	r3, r1, r3
   30ca0:	movlt	r3, #1
   30ca4:	movge	r3, #0
   30ca8:	uxtb	r3, r3
   30cac:	b	30d28 <__assert_fail@plt+0x1e63c>
   30cb0:	ldr	r3, [fp, #-16]
   30cb4:	ldrd	r2, [r3, #120]	; 0x78
   30cb8:	cmp	r2, #0
   30cbc:	sbcs	r3, r3, #0
   30cc0:	bge	30cf8 <__assert_fail@plt+0x1e60c>
   30cc4:	ldrd	r0, [fp, #28]
   30cc8:	ldr	r3, [fp, #-16]
   30ccc:	ldrd	r2, [r3, #120]	; 0x78
   30cd0:	mov	r4, #0
   30cd4:	mov	r5, #-2147483648	; 0x80000000
   30cd8:	subs	r2, r4, r2
   30cdc:	sbc	r3, r5, r3
   30ce0:	cmp	r0, r2
   30ce4:	sbcs	r3, r1, r3
   30ce8:	movlt	r3, #1
   30cec:	movge	r3, #0
   30cf0:	uxtb	r3, r3
   30cf4:	b	30d28 <__assert_fail@plt+0x1e63c>
   30cf8:	ldrd	r2, [fp, #28]
   30cfc:	mvn	r0, #0
   30d00:	mvn	r1, #-2147483648	; 0x80000000
   30d04:	subs	r0, r0, r2
   30d08:	sbc	r1, r1, r3
   30d0c:	ldr	r3, [fp, #-16]
   30d10:	ldrd	r2, [r3, #120]	; 0x78
   30d14:	cmp	r0, r2
   30d18:	sbcs	r3, r1, r3
   30d1c:	movlt	r3, #1
   30d20:	movge	r3, #0
   30d24:	uxtb	r3, r3
   30d28:	cmp	r3, #0
   30d2c:	beq	30d5c <__assert_fail@plt+0x1e670>
   30d30:	ldr	r3, [fp, #-16]
   30d34:	ldrd	r2, [r3, #120]	; 0x78
   30d38:	mov	r0, r2
   30d3c:	mov	r1, r3
   30d40:	ldrd	r2, [fp, #28]
   30d44:	adds	r2, r2, r0
   30d48:	adc	r3, r3, r1
   30d4c:	ldr	r1, [fp, #-16]
   30d50:	strd	r2, [r1, #120]	; 0x78
   30d54:	mov	r3, #1
   30d58:	b	30d84 <__assert_fail@plt+0x1e698>
   30d5c:	ldr	r3, [fp, #-16]
   30d60:	ldrd	r2, [r3, #120]	; 0x78
   30d64:	mov	r0, r2
   30d68:	mov	r1, r3
   30d6c:	ldrd	r2, [fp, #28]
   30d70:	adds	r2, r2, r0
   30d74:	adc	r3, r3, r1
   30d78:	ldr	r1, [fp, #-16]
   30d7c:	strd	r2, [r1, #120]	; 0x78
   30d80:	mov	r3, #0
   30d84:	orr	ip, ip, r3
   30d88:	ldrd	r2, [fp, #20]
   30d8c:	cmp	r2, #0
   30d90:	sbcs	r3, r3, #0
   30d94:	bge	30dcc <__assert_fail@plt+0x1e6e0>
   30d98:	ldr	r3, [fp, #-16]
   30d9c:	ldrd	r0, [r3, #112]	; 0x70
   30da0:	ldrd	r2, [fp, #20]
   30da4:	mov	r4, #0
   30da8:	mov	r5, #-2147483648	; 0x80000000
   30dac:	subs	r2, r4, r2
   30db0:	sbc	r3, r5, r3
   30db4:	cmp	r0, r2
   30db8:	sbcs	r3, r1, r3
   30dbc:	movlt	r3, #1
   30dc0:	movge	r3, #0
   30dc4:	uxtb	r3, r3
   30dc8:	b	30e44 <__assert_fail@plt+0x1e758>
   30dcc:	ldr	r3, [fp, #-16]
   30dd0:	ldrd	r2, [r3, #112]	; 0x70
   30dd4:	cmp	r2, #0
   30dd8:	sbcs	r3, r3, #0
   30ddc:	bge	30e14 <__assert_fail@plt+0x1e728>
   30de0:	ldrd	r0, [fp, #20]
   30de4:	ldr	r3, [fp, #-16]
   30de8:	ldrd	r2, [r3, #112]	; 0x70
   30dec:	mov	r4, #0
   30df0:	mov	r5, #-2147483648	; 0x80000000
   30df4:	subs	r2, r4, r2
   30df8:	sbc	r3, r5, r3
   30dfc:	cmp	r0, r2
   30e00:	sbcs	r3, r1, r3
   30e04:	movlt	r3, #1
   30e08:	movge	r3, #0
   30e0c:	uxtb	r3, r3
   30e10:	b	30e44 <__assert_fail@plt+0x1e758>
   30e14:	ldrd	r2, [fp, #20]
   30e18:	mvn	r0, #0
   30e1c:	mvn	r1, #-2147483648	; 0x80000000
   30e20:	subs	r0, r0, r2
   30e24:	sbc	r1, r1, r3
   30e28:	ldr	r3, [fp, #-16]
   30e2c:	ldrd	r2, [r3, #112]	; 0x70
   30e30:	cmp	r0, r2
   30e34:	sbcs	r3, r1, r3
   30e38:	movlt	r3, #1
   30e3c:	movge	r3, #0
   30e40:	uxtb	r3, r3
   30e44:	cmp	r3, #0
   30e48:	beq	30e78 <__assert_fail@plt+0x1e78c>
   30e4c:	ldr	r3, [fp, #-16]
   30e50:	ldrd	r2, [r3, #112]	; 0x70
   30e54:	mov	r0, r2
   30e58:	mov	r1, r3
   30e5c:	ldrd	r2, [fp, #20]
   30e60:	adds	r2, r2, r0
   30e64:	adc	r3, r3, r1
   30e68:	ldr	r1, [fp, #-16]
   30e6c:	strd	r2, [r1, #112]	; 0x70
   30e70:	mov	r3, #1
   30e74:	b	30ea0 <__assert_fail@plt+0x1e7b4>
   30e78:	ldr	r3, [fp, #-16]
   30e7c:	ldrd	r2, [r3, #112]	; 0x70
   30e80:	mov	r0, r2
   30e84:	mov	r1, r3
   30e88:	ldrd	r2, [fp, #20]
   30e8c:	adds	r2, r2, r0
   30e90:	adc	r3, r3, r1
   30e94:	ldr	r1, [fp, #-16]
   30e98:	strd	r2, [r1, #112]	; 0x70
   30e9c:	mov	r3, #0
   30ea0:	orr	ip, ip, r3
   30ea4:	ldrd	r2, [fp, #12]
   30ea8:	cmp	r2, #0
   30eac:	sbcs	r3, r3, #0
   30eb0:	bge	30ee8 <__assert_fail@plt+0x1e7fc>
   30eb4:	ldr	r3, [fp, #-16]
   30eb8:	ldrd	r0, [r3, #104]	; 0x68
   30ebc:	ldrd	r2, [fp, #12]
   30ec0:	mov	r4, #0
   30ec4:	mov	r5, #-2147483648	; 0x80000000
   30ec8:	subs	r2, r4, r2
   30ecc:	sbc	r3, r5, r3
   30ed0:	cmp	r0, r2
   30ed4:	sbcs	r3, r1, r3
   30ed8:	movlt	r3, #1
   30edc:	movge	r3, #0
   30ee0:	uxtb	r3, r3
   30ee4:	b	30f60 <__assert_fail@plt+0x1e874>
   30ee8:	ldr	r3, [fp, #-16]
   30eec:	ldrd	r2, [r3, #104]	; 0x68
   30ef0:	cmp	r2, #0
   30ef4:	sbcs	r3, r3, #0
   30ef8:	bge	30f30 <__assert_fail@plt+0x1e844>
   30efc:	ldrd	r0, [fp, #12]
   30f00:	ldr	r3, [fp, #-16]
   30f04:	ldrd	r2, [r3, #104]	; 0x68
   30f08:	mov	r4, #0
   30f0c:	mov	r5, #-2147483648	; 0x80000000
   30f10:	subs	r2, r4, r2
   30f14:	sbc	r3, r5, r3
   30f18:	cmp	r0, r2
   30f1c:	sbcs	r3, r1, r3
   30f20:	movlt	r3, #1
   30f24:	movge	r3, #0
   30f28:	uxtb	r3, r3
   30f2c:	b	30f60 <__assert_fail@plt+0x1e874>
   30f30:	ldrd	r2, [fp, #12]
   30f34:	mvn	r0, #0
   30f38:	mvn	r1, #-2147483648	; 0x80000000
   30f3c:	subs	r0, r0, r2
   30f40:	sbc	r1, r1, r3
   30f44:	ldr	r3, [fp, #-16]
   30f48:	ldrd	r2, [r3, #104]	; 0x68
   30f4c:	cmp	r0, r2
   30f50:	sbcs	r3, r1, r3
   30f54:	movlt	r3, #1
   30f58:	movge	r3, #0
   30f5c:	uxtb	r3, r3
   30f60:	cmp	r3, #0
   30f64:	beq	30f94 <__assert_fail@plt+0x1e8a8>
   30f68:	ldr	r3, [fp, #-16]
   30f6c:	ldrd	r2, [r3, #104]	; 0x68
   30f70:	mov	r0, r2
   30f74:	mov	r1, r3
   30f78:	ldrd	r2, [fp, #12]
   30f7c:	adds	r2, r2, r0
   30f80:	adc	r3, r3, r1
   30f84:	ldr	r1, [fp, #-16]
   30f88:	strd	r2, [r1, #104]	; 0x68
   30f8c:	mov	r3, #1
   30f90:	b	30fbc <__assert_fail@plt+0x1e8d0>
   30f94:	ldr	r3, [fp, #-16]
   30f98:	ldrd	r2, [r3, #104]	; 0x68
   30f9c:	mov	r0, r2
   30fa0:	mov	r1, r3
   30fa4:	ldrd	r2, [fp, #12]
   30fa8:	adds	r2, r2, r0
   30fac:	adc	r3, r3, r1
   30fb0:	ldr	r1, [fp, #-16]
   30fb4:	strd	r2, [r1, #104]	; 0x68
   30fb8:	mov	r3, #0
   30fbc:	orr	ip, ip, r3
   30fc0:	ldrd	r2, [fp, #4]
   30fc4:	cmp	r2, #0
   30fc8:	sbcs	r3, r3, #0
   30fcc:	bge	31004 <__assert_fail@plt+0x1e918>
   30fd0:	ldr	r3, [fp, #-16]
   30fd4:	ldrd	r0, [r3, #96]	; 0x60
   30fd8:	ldrd	r2, [fp, #4]
   30fdc:	mov	r4, #0
   30fe0:	mov	r5, #-2147483648	; 0x80000000
   30fe4:	subs	r2, r4, r2
   30fe8:	sbc	r3, r5, r3
   30fec:	cmp	r0, r2
   30ff0:	sbcs	r3, r1, r3
   30ff4:	movlt	r3, #1
   30ff8:	movge	r3, #0
   30ffc:	uxtb	r3, r3
   31000:	b	3107c <__assert_fail@plt+0x1e990>
   31004:	ldr	r3, [fp, #-16]
   31008:	ldrd	r2, [r3, #96]	; 0x60
   3100c:	cmp	r2, #0
   31010:	sbcs	r3, r3, #0
   31014:	bge	3104c <__assert_fail@plt+0x1e960>
   31018:	ldrd	r0, [fp, #4]
   3101c:	ldr	r3, [fp, #-16]
   31020:	ldrd	r2, [r3, #96]	; 0x60
   31024:	mov	r4, #0
   31028:	mov	r5, #-2147483648	; 0x80000000
   3102c:	subs	r2, r4, r2
   31030:	sbc	r3, r5, r3
   31034:	cmp	r0, r2
   31038:	sbcs	r3, r1, r3
   3103c:	movlt	r3, #1
   31040:	movge	r3, #0
   31044:	uxtb	r3, r3
   31048:	b	3107c <__assert_fail@plt+0x1e990>
   3104c:	ldrd	r2, [fp, #4]
   31050:	mvn	r0, #0
   31054:	mvn	r1, #-2147483648	; 0x80000000
   31058:	subs	r0, r0, r2
   3105c:	sbc	r1, r1, r3
   31060:	ldr	r3, [fp, #-16]
   31064:	ldrd	r2, [r3, #96]	; 0x60
   31068:	cmp	r0, r2
   3106c:	sbcs	r3, r1, r3
   31070:	movlt	r3, #1
   31074:	movge	r3, #0
   31078:	uxtb	r3, r3
   3107c:	cmp	r3, #0
   31080:	beq	310b0 <__assert_fail@plt+0x1e9c4>
   31084:	ldr	r3, [fp, #-16]
   31088:	ldrd	r2, [r3, #96]	; 0x60
   3108c:	mov	r0, r2
   31090:	mov	r1, r3
   31094:	ldrd	r2, [fp, #4]
   31098:	adds	r2, r2, r0
   3109c:	adc	r3, r3, r1
   310a0:	ldr	r1, [fp, #-16]
   310a4:	strd	r2, [r1, #96]	; 0x60
   310a8:	mov	r3, #1
   310ac:	b	310d8 <__assert_fail@plt+0x1e9ec>
   310b0:	ldr	r3, [fp, #-16]
   310b4:	ldrd	r2, [r3, #96]	; 0x60
   310b8:	mov	r0, r2
   310bc:	mov	r1, r3
   310c0:	ldrd	r2, [fp, #4]
   310c4:	adds	r2, r2, r0
   310c8:	adc	r3, r3, r1
   310cc:	ldr	r1, [fp, #-16]
   310d0:	strd	r2, [r1, #96]	; 0x60
   310d4:	mov	r3, #0
   310d8:	orr	r3, ip, r3
   310dc:	cmp	r3, #0
   310e0:	movne	r3, #1
   310e4:	moveq	r3, #0
   310e8:	uxtb	r3, r3
   310ec:	cmp	r3, #0
   310f0:	beq	310fc <__assert_fail@plt+0x1ea10>
   310f4:	mov	r3, #0
   310f8:	b	3110c <__assert_fail@plt+0x1ea20>
   310fc:	ldr	r3, [fp, #-16]
   31100:	mov	r2, #1
   31104:	strb	r2, [r3, #153]	; 0x99
   31108:	mov	r3, #1
   3110c:	mov	r0, r3
   31110:	sub	sp, fp, #8
   31114:	pop	{r4, r5, fp}
   31118:	add	sp, sp, #8
   3111c:	bx	lr
   31120:	push	{fp}		; (str fp, [sp, #-4]!)
   31124:	add	fp, sp, #0
   31128:	sub	sp, sp, #20
   3112c:	str	r0, [fp, #-8]
   31130:	strd	r2, [fp, #-20]	; 0xffffffec
   31134:	ldr	r1, [fp, #-8]
   31138:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3113c:	strd	r2, [r1, #72]	; 0x48
   31140:	ldr	r1, [fp, #-8]
   31144:	ldrd	r2, [fp, #4]
   31148:	strd	r2, [r1, #80]	; 0x50
   3114c:	ldr	r3, [fp, #-8]
   31150:	ldr	r2, [fp, #12]
   31154:	str	r2, [r3, #88]	; 0x58
   31158:	ldr	r3, [fp, #-8]
   3115c:	ldr	r2, [fp, #16]
   31160:	str	r2, [r3, #92]	; 0x5c
   31164:	nop			; (mov r0, r0)
   31168:	add	sp, fp, #0
   3116c:	pop	{fp}		; (ldr fp, [sp], #4)
   31170:	bx	lr
   31174:	push	{fp, lr}
   31178:	add	fp, sp, #4
   3117c:	sub	sp, sp, #32
   31180:	str	r0, [fp, #-16]
   31184:	str	r1, [fp, #-20]	; 0xffffffec
   31188:	str	r2, [fp, #-24]	; 0xffffffe8
   3118c:	ldr	r3, [fp, #-16]
   31190:	ldrb	r3, [r3, #187]	; 0xbb
   31194:	cmp	r3, #0
   31198:	beq	31238 <__assert_fail@plt+0x1eb4c>
   3119c:	ldr	r3, [fp, #-16]
   311a0:	ldrd	r2, [r3, #8]
   311a4:	mvn	r0, #0
   311a8:	mvn	r1, #0
   311ac:	cmp	r2, r0
   311b0:	sbcs	r3, r3, r1
   311b4:	blt	31210 <__assert_fail@plt+0x1eb24>
   311b8:	ldr	r3, [fp, #-16]
   311bc:	ldrd	r2, [r3, #8]
   311c0:	cmp	r2, #13
   311c4:	sbcs	r3, r3, #0
   311c8:	bge	31210 <__assert_fail@plt+0x1eb24>
   311cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   311d0:	ldr	r3, [fp, #-16]
   311d4:	ldrd	r2, [r3, #8]
   311d8:	adds	r2, r2, #1
   311dc:	adc	r3, r3, #0
   311e0:	mov	r3, r2
   311e4:	lsl	r3, r3, #2
   311e8:	add	r3, r3, r2
   311ec:	lsl	r3, r3, #1
   311f0:	add	r3, r3, r2
   311f4:	ldr	r2, [pc, #248]	; 312f4 <__assert_fail@plt+0x1ec08>
   311f8:	add	r3, r3, r2
   311fc:	ldr	r2, [pc, #244]	; 312f8 <__assert_fail@plt+0x1ec0c>
   31200:	ldr	r0, [fp, #-20]	; 0xffffffec
   31204:	bl	1241c <snprintf@plt>
   31208:	mov	r3, r0
   3120c:	b	31230 <__assert_fail@plt+0x1eb44>
   31210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31214:	ldr	r3, [fp, #-16]
   31218:	ldrd	r2, [r3, #8]
   3121c:	strd	r2, [sp]
   31220:	ldr	r2, [pc, #212]	; 312fc <__assert_fail@plt+0x1ec10>
   31224:	ldr	r0, [fp, #-20]	; 0xffffffec
   31228:	bl	1241c <snprintf@plt>
   3122c:	mov	r3, r0
   31230:	str	r3, [fp, #-8]
   31234:	b	3124c <__assert_fail@plt+0x1eb60>
   31238:	ldr	r3, [fp, #-20]	; 0xffffffec
   3123c:	mov	r2, #0
   31240:	strb	r2, [r3]
   31244:	mov	r3, #0
   31248:	str	r3, [fp, #-8]
   3124c:	ldr	r3, [fp, #-16]
   31250:	ldr	r3, [r3, #16]
   31254:	cmp	r3, #0
   31258:	blt	312e4 <__assert_fail@plt+0x1ebf8>
   3125c:	ldr	r3, [fp, #-16]
   31260:	ldr	r3, [r3, #16]
   31264:	cmp	r3, #6
   31268:	bgt	312e4 <__assert_fail@plt+0x1ebf8>
   3126c:	ldr	r3, [fp, #-8]
   31270:	cmp	r3, #0
   31274:	blt	312e4 <__assert_fail@plt+0x1ebf8>
   31278:	ldr	r2, [fp, #-8]
   3127c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31280:	cmp	r2, r3
   31284:	bge	312e4 <__assert_fail@plt+0x1ebf8>
   31288:	ldr	r3, [fp, #-8]
   3128c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31290:	add	r0, r2, r3
   31294:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31298:	ldr	r3, [fp, #-8]
   3129c:	sub	r3, r2, r3
   312a0:	mov	ip, r3
   312a4:	ldr	r3, [fp, #-8]
   312a8:	cmp	r3, #0
   312ac:	moveq	r3, #1
   312b0:	movne	r3, #0
   312b4:	uxtb	r3, r3
   312b8:	mov	r2, r3
   312bc:	ldr	r3, [pc, #60]	; 31300 <__assert_fail@plt+0x1ec14>
   312c0:	add	r1, r2, r3
   312c4:	ldr	r3, [fp, #-16]
   312c8:	ldr	r3, [r3, #16]
   312cc:	lsl	r3, r3, #2
   312d0:	ldr	r2, [pc, #44]	; 31304 <__assert_fail@plt+0x1ec18>
   312d4:	add	r3, r3, r2
   312d8:	mov	r2, r1
   312dc:	mov	r1, ip
   312e0:	bl	1241c <snprintf@plt>
   312e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   312e8:	mov	r0, r3
   312ec:	sub	sp, fp, #4
   312f0:	pop	{fp, pc}
   312f4:	andeq	sl, r6, ip, asr r5
   312f8:	andeq	r8, r6, r0, asr #20
   312fc:	andeq	r8, r6, r4, asr #20
   31300:	andeq	r8, r6, ip, asr #20
   31304:	strdeq	sl, [r6], -r8
   31308:	push	{fp, lr}
   3130c:	add	fp, sp, #4
   31310:	sub	sp, sp, #32
   31314:	str	r0, [fp, #-32]	; 0xffffffe0
   31318:	str	r1, [fp, #-36]	; 0xffffffdc
   3131c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31320:	str	r3, [fp, #-8]
   31324:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31328:	cmp	r3, #0
   3132c:	bge	31338 <__assert_fail@plt+0x1ec4c>
   31330:	mov	r3, #45	; 0x2d
   31334:	b	3133c <__assert_fail@plt+0x1ec50>
   31338:	mov	r3, #43	; 0x2b
   3133c:	strb	r3, [fp, #-9]
   31340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31344:	ldr	r2, [pc, #544]	; 3156c <__assert_fail@plt+0x1ee80>
   31348:	smull	r1, r2, r2, r3
   3134c:	add	r2, r2, r3
   31350:	asr	r2, r2, #11
   31354:	asr	r3, r3, #31
   31358:	sub	r3, r2, r3
   3135c:	cmp	r3, #0
   31360:	rsblt	r3, r3, #0
   31364:	str	r3, [fp, #-16]
   31368:	ldrb	r2, [fp, #-9]
   3136c:	ldr	r3, [fp, #-16]
   31370:	ldr	r1, [pc, #504]	; 31570 <__assert_fail@plt+0x1ee84>
   31374:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31378:	bl	12590 <sprintf@plt>
   3137c:	mov	r3, r0
   31380:	mov	r2, r3
   31384:	ldr	r3, [fp, #-8]
   31388:	add	r3, r3, r2
   3138c:	str	r3, [fp, #-8]
   31390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31394:	ldr	r2, [pc, #464]	; 3156c <__assert_fail@plt+0x1ee80>
   31398:	smull	r1, r2, r2, r3
   3139c:	add	r2, r2, r3
   313a0:	asr	r1, r2, #11
   313a4:	asr	r2, r3, #31
   313a8:	sub	r2, r1, r2
   313ac:	mov	r1, #3600	; 0xe10
   313b0:	mul	r2, r1, r2
   313b4:	sub	r2, r3, r2
   313b8:	eor	r3, r2, r2, asr #31
   313bc:	sub	r3, r3, r2, asr #31
   313c0:	str	r3, [fp, #-20]	; 0xffffffec
   313c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   313c8:	cmp	r3, #0
   313cc:	beq	3155c <__assert_fail@plt+0x1ee70>
   313d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   313d4:	ldr	r2, [pc, #408]	; 31574 <__assert_fail@plt+0x1ee88>
   313d8:	smull	r1, r2, r2, r3
   313dc:	add	r2, r2, r3
   313e0:	asr	r2, r2, #5
   313e4:	asr	r3, r3, #31
   313e8:	sub	r3, r2, r3
   313ec:	str	r3, [fp, #-24]	; 0xffffffe8
   313f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   313f4:	ldr	r3, [pc, #376]	; 31574 <__assert_fail@plt+0x1ee88>
   313f8:	smull	r1, r3, r3, r2
   313fc:	add	r3, r3, r2
   31400:	asr	r1, r3, #5
   31404:	asr	r3, r2, #31
   31408:	sub	r1, r1, r3
   3140c:	mov	r3, r1
   31410:	lsl	r3, r3, #4
   31414:	sub	r3, r3, r1
   31418:	lsl	r3, r3, #2
   3141c:	sub	r3, r2, r3
   31420:	str	r3, [fp, #-28]	; 0xffffffe4
   31424:	ldr	r3, [fp, #-8]
   31428:	add	r2, r3, #1
   3142c:	str	r2, [fp, #-8]
   31430:	mov	r2, #58	; 0x3a
   31434:	strb	r2, [r3]
   31438:	ldr	r3, [fp, #-8]
   3143c:	add	r2, r3, #1
   31440:	str	r2, [fp, #-8]
   31444:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31448:	ldr	r1, [pc, #296]	; 31578 <__assert_fail@plt+0x1ee8c>
   3144c:	smull	r0, r1, r1, r2
   31450:	asr	r1, r1, #2
   31454:	asr	r2, r2, #31
   31458:	sub	r2, r1, r2
   3145c:	uxtb	r2, r2
   31460:	add	r2, r2, #48	; 0x30
   31464:	uxtb	r2, r2
   31468:	strb	r2, [r3]
   3146c:	ldr	r0, [fp, #-8]
   31470:	add	r3, r0, #1
   31474:	str	r3, [fp, #-8]
   31478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3147c:	ldr	r3, [pc, #244]	; 31578 <__assert_fail@plt+0x1ee8c>
   31480:	smull	r1, r3, r3, r2
   31484:	asr	r1, r3, #2
   31488:	asr	r3, r2, #31
   3148c:	sub	r1, r1, r3
   31490:	mov	r3, r1
   31494:	lsl	r3, r3, #2
   31498:	add	r3, r3, r1
   3149c:	lsl	r3, r3, #1
   314a0:	sub	r1, r2, r3
   314a4:	uxtb	r3, r1
   314a8:	add	r3, r3, #48	; 0x30
   314ac:	uxtb	r3, r3
   314b0:	strb	r3, [r0]
   314b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   314b8:	cmp	r3, #0
   314bc:	beq	31550 <__assert_fail@plt+0x1ee64>
   314c0:	ldr	r3, [fp, #-8]
   314c4:	add	r2, r3, #1
   314c8:	str	r2, [fp, #-8]
   314cc:	mov	r2, #58	; 0x3a
   314d0:	strb	r2, [r3]
   314d4:	ldr	r3, [fp, #-8]
   314d8:	add	r2, r3, #1
   314dc:	str	r2, [fp, #-8]
   314e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   314e4:	ldr	r1, [pc, #140]	; 31578 <__assert_fail@plt+0x1ee8c>
   314e8:	smull	r0, r1, r1, r2
   314ec:	asr	r1, r1, #2
   314f0:	asr	r2, r2, #31
   314f4:	sub	r2, r1, r2
   314f8:	uxtb	r2, r2
   314fc:	add	r2, r2, #48	; 0x30
   31500:	uxtb	r2, r2
   31504:	strb	r2, [r3]
   31508:	ldr	r0, [fp, #-8]
   3150c:	add	r3, r0, #1
   31510:	str	r3, [fp, #-8]
   31514:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31518:	ldr	r3, [pc, #88]	; 31578 <__assert_fail@plt+0x1ee8c>
   3151c:	smull	r1, r3, r3, r2
   31520:	asr	r1, r3, #2
   31524:	asr	r3, r2, #31
   31528:	sub	r1, r1, r3
   3152c:	mov	r3, r1
   31530:	lsl	r3, r3, #2
   31534:	add	r3, r3, r1
   31538:	lsl	r3, r3, #1
   3153c:	sub	r1, r2, r3
   31540:	uxtb	r3, r1
   31544:	add	r3, r3, #48	; 0x30
   31548:	uxtb	r3, r3
   3154c:	strb	r3, [r0]
   31550:	ldr	r3, [fp, #-8]
   31554:	mov	r2, #0
   31558:	strb	r2, [r3]
   3155c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31560:	mov	r0, r3
   31564:	sub	sp, fp, #4
   31568:	pop	{fp, pc}
   3156c:			; <UNDEFINED> instruction: 0x91a2b3c5
   31570:	andeq	r8, r6, r0, asr sl
   31574:	stmhi	r8, {r0, r3, r7, fp, pc}
   31578:	strbtvs	r6, [r6], -r7, ror #12
   3157c:	push	{r4, r5, fp, lr}
   31580:	add	fp, sp, #12
   31584:	sub	sp, sp, #184	; 0xb8
   31588:	str	r0, [fp, #-176]	; 0xffffff50
   3158c:	str	r1, [fp, #-180]	; 0xffffff4c
   31590:	mov	r3, #0
   31594:	strb	r3, [fp, #-13]
   31598:	ldr	r0, [fp, #-180]	; 0xffffff4c
   3159c:	bl	30028 <__assert_fail@plt+0x1d93c>
   315a0:	mov	r3, r0
   315a4:	eor	r3, r3, #1
   315a8:	uxtb	r3, r3
   315ac:	cmp	r3, #0
   315b0:	bne	319e8 <__assert_fail@plt+0x1f2fc>
   315b4:	ldr	r0, [pc, #1080]	; 319f4 <__assert_fail@plt+0x1f308>
   315b8:	bl	12398 <gettext@plt>
   315bc:	mov	r3, r0
   315c0:	ldr	r1, [fp, #-176]	; 0xffffff50
   315c4:	mov	r0, r3
   315c8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   315cc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   315d0:	ldr	r3, [r3, #156]	; 0x9c
   315d4:	cmp	r3, #0
   315d8:	beq	31644 <__assert_fail@plt+0x1ef58>
   315dc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   315e0:	ldrb	r3, [r3, #181]	; 0xb5
   315e4:	eor	r3, r3, #1
   315e8:	uxtb	r3, r3
   315ec:	cmp	r3, #0
   315f0:	beq	31644 <__assert_fail@plt+0x1ef58>
   315f4:	ldr	r3, [pc, #1020]	; 319f8 <__assert_fail@plt+0x1f30c>
   315f8:	ldr	ip, [r3]
   315fc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31600:	ldrd	r4, [r3, #40]	; 0x28
   31604:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31608:	ldrd	r2, [r3, #56]	; 0x38
   3160c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   31610:	ldrd	r0, [r1, #64]	; 0x40
   31614:	strd	r0, [sp, #8]
   31618:	strd	r2, [sp]
   3161c:	mov	r2, r4
   31620:	mov	r3, r5
   31624:	ldr	r1, [pc, #976]	; 319fc <__assert_fail@plt+0x1f310>
   31628:	mov	r0, ip
   3162c:	bl	123f8 <fprintf@plt>
   31630:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31634:	mov	r2, #1
   31638:	strb	r2, [r3, #181]	; 0xb5
   3163c:	mov	r3, #1
   31640:	strb	r3, [fp, #-13]
   31644:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31648:	ldrb	r2, [r3, #180]	; 0xb4
   3164c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31650:	ldrb	r3, [r3, #186]	; 0xba
   31654:	cmp	r2, r3
   31658:	beq	316b8 <__assert_fail@plt+0x1efcc>
   3165c:	ldrb	r3, [fp, #-13]
   31660:	cmp	r3, #0
   31664:	beq	3167c <__assert_fail@plt+0x1ef90>
   31668:	ldr	r3, [pc, #904]	; 319f8 <__assert_fail@plt+0x1f30c>
   3166c:	ldr	r3, [r3]
   31670:	mov	r1, r3
   31674:	mov	r0, #32
   31678:	bl	1256c <fputc@plt>
   3167c:	ldr	r3, [pc, #884]	; 319f8 <__assert_fail@plt+0x1f30c>
   31680:	ldr	r4, [r3]
   31684:	ldr	r0, [pc, #884]	; 31a00 <__assert_fail@plt+0x1f314>
   31688:	bl	12398 <gettext@plt>
   3168c:	mov	r1, r0
   31690:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31694:	ldrd	r2, [r3, #40]	; 0x28
   31698:	mov	r0, r4
   3169c:	bl	123f8 <fprintf@plt>
   316a0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   316a4:	ldrb	r2, [r3, #180]	; 0xb4
   316a8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   316ac:	strb	r2, [r3, #186]	; 0xba
   316b0:	mov	r3, #1
   316b4:	strb	r3, [fp, #-13]
   316b8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   316bc:	ldr	r3, [r3, #172]	; 0xac
   316c0:	cmp	r3, #0
   316c4:	beq	317b4 <__assert_fail@plt+0x1f0c8>
   316c8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   316cc:	ldrb	r3, [r3, #184]	; 0xb8
   316d0:	eor	r3, r3, #1
   316d4:	uxtb	r3, r3
   316d8:	cmp	r3, #0
   316dc:	beq	317b4 <__assert_fail@plt+0x1f0c8>
   316e0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   316e4:	ldr	r3, [r3, #88]	; 0x58
   316e8:	mov	r2, r3
   316ec:	asr	r3, r2, #31
   316f0:	strd	r2, [fp, #-28]	; 0xffffffe4
   316f4:	ldr	r3, [pc, #764]	; 319f8 <__assert_fail@plt+0x1f30c>
   316f8:	ldr	ip, [r3]
   316fc:	ldrb	r3, [fp, #-13]
   31700:	eor	r3, r3, #1
   31704:	uxtb	r3, r3
   31708:	mov	r2, r3
   3170c:	ldr	r3, [pc, #752]	; 31a04 <__assert_fail@plt+0x1f318>
   31710:	add	lr, r2, r3
   31714:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31718:	ldrd	r4, [r3, #72]	; 0x48
   3171c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31720:	ldrd	r2, [r3, #80]	; 0x50
   31724:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   31728:	strd	r0, [sp, #8]
   3172c:	strd	r2, [sp]
   31730:	mov	r2, r4
   31734:	mov	r3, r5
   31738:	mov	r1, lr
   3173c:	mov	r0, ip
   31740:	bl	123f8 <fprintf@plt>
   31744:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31748:	ldr	r3, [r3, #92]	; 0x5c
   3174c:	cmp	r3, #0
   31750:	beq	31778 <__assert_fail@plt+0x1f08c>
   31754:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31758:	ldr	r3, [r3, #92]	; 0x5c
   3175c:	str	r3, [fp, #-32]	; 0xffffffe0
   31760:	ldr	r3, [pc, #656]	; 319f8 <__assert_fail@plt+0x1f30c>
   31764:	ldr	r3, [r3]
   31768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3176c:	ldr	r1, [pc, #660]	; 31a08 <__assert_fail@plt+0x1f31c>
   31770:	mov	r0, r3
   31774:	bl	123f8 <fprintf@plt>
   31778:	ldr	r3, [fp, #-180]	; 0xffffff4c
   3177c:	ldr	r3, [r3, #28]
   31780:	cmp	r3, #1
   31784:	bne	317a0 <__assert_fail@plt+0x1f0b4>
   31788:	ldr	r3, [pc, #616]	; 319f8 <__assert_fail@plt+0x1f30c>
   3178c:	ldr	r3, [r3]
   31790:	mov	r2, #2
   31794:	mov	r1, #1
   31798:	ldr	r0, [pc, #620]	; 31a0c <__assert_fail@plt+0x1f320>
   3179c:	bl	12224 <fwrite@plt>
   317a0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   317a4:	mov	r2, #1
   317a8:	strb	r2, [r3, #184]	; 0xb8
   317ac:	mov	r3, #1
   317b0:	strb	r3, [fp, #-13]
   317b4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   317b8:	ldr	r3, [r3, #160]	; 0xa0
   317bc:	cmp	r3, #0
   317c0:	beq	31860 <__assert_fail@plt+0x1f174>
   317c4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   317c8:	ldrb	r3, [r3, #182]	; 0xb6
   317cc:	eor	r3, r3, #1
   317d0:	uxtb	r3, r3
   317d4:	cmp	r3, #0
   317d8:	beq	31860 <__assert_fail@plt+0x1f174>
   317dc:	ldrb	r3, [fp, #-13]
   317e0:	cmp	r3, #0
   317e4:	beq	317fc <__assert_fail@plt+0x1f110>
   317e8:	ldr	r3, [pc, #520]	; 319f8 <__assert_fail@plt+0x1f30c>
   317ec:	ldr	r3, [r3]
   317f0:	mov	r1, r3
   317f4:	mov	r0, #32
   317f8:	bl	1256c <fputc@plt>
   317fc:	ldr	r3, [pc, #500]	; 319f8 <__assert_fail@plt+0x1f30c>
   31800:	ldr	r4, [r3]
   31804:	ldr	r0, [pc, #516]	; 31a10 <__assert_fail@plt+0x1f324>
   31808:	bl	12398 <gettext@plt>
   3180c:	mov	r5, r0
   31810:	sub	r3, fp, #172	; 0xac
   31814:	mov	r2, #100	; 0x64
   31818:	mov	r1, r3
   3181c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   31820:	bl	31174 <__assert_fail@plt+0x1ea88>
   31824:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31828:	ldrd	r2, [r3, #8]
   3182c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   31830:	ldr	r1, [r1, #16]
   31834:	str	r1, [sp, #8]
   31838:	strd	r2, [sp]
   3183c:	mov	r2, r0
   31840:	mov	r1, r5
   31844:	mov	r0, r4
   31848:	bl	123f8 <fprintf@plt>
   3184c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31850:	mov	r2, #1
   31854:	strb	r2, [r3, #182]	; 0xb6
   31858:	mov	r3, #1
   3185c:	strb	r3, [fp, #-13]
   31860:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31864:	ldr	r3, [r3, #164]	; 0xa4
   31868:	cmp	r3, #0
   3186c:	beq	318e4 <__assert_fail@plt+0x1f1f8>
   31870:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31874:	ldrb	r3, [r3, #183]	; 0xb7
   31878:	eor	r3, r3, #1
   3187c:	uxtb	r3, r3
   31880:	cmp	r3, #0
   31884:	beq	318e4 <__assert_fail@plt+0x1f1f8>
   31888:	ldr	r3, [pc, #360]	; 319f8 <__assert_fail@plt+0x1f30c>
   3188c:	ldr	r0, [r3]
   31890:	ldrb	r3, [fp, #-13]
   31894:	eor	r3, r3, #1
   31898:	uxtb	r3, r3
   3189c:	mov	r2, r3
   318a0:	ldr	r3, [pc, #364]	; 31a14 <__assert_fail@plt+0x1f328>
   318a4:	add	r1, r2, r3
   318a8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   318ac:	ldr	r2, [r3, #20]
   318b0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   318b4:	ldr	r3, [r3, #168]	; 0xa8
   318b8:	cmp	r3, #0
   318bc:	beq	318c8 <__assert_fail@plt+0x1f1dc>
   318c0:	ldr	r3, [pc, #336]	; 31a18 <__assert_fail@plt+0x1f32c>
   318c4:	b	318cc <__assert_fail@plt+0x1f1e0>
   318c8:	ldr	r3, [pc, #332]	; 31a1c <__assert_fail@plt+0x1f330>
   318cc:	bl	123f8 <fprintf@plt>
   318d0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   318d4:	mov	r2, #1
   318d8:	strb	r2, [r3, #183]	; 0xb7
   318dc:	mov	r3, #1
   318e0:	strb	r3, [fp, #-13]
   318e4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   318e8:	ldr	r3, [r3, #176]	; 0xb0
   318ec:	cmp	r3, #0
   318f0:	beq	3196c <__assert_fail@plt+0x1f280>
   318f4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   318f8:	ldrb	r3, [r3, #185]	; 0xb9
   318fc:	eor	r3, r3, #1
   31900:	uxtb	r3, r3
   31904:	cmp	r3, #0
   31908:	beq	3196c <__assert_fail@plt+0x1f280>
   3190c:	ldr	r3, [pc, #228]	; 319f8 <__assert_fail@plt+0x1f30c>
   31910:	ldr	r4, [r3]
   31914:	ldrb	r3, [fp, #-13]
   31918:	eor	r3, r3, #1
   3191c:	uxtb	r3, r3
   31920:	mov	r2, r3
   31924:	ldr	r3, [pc, #244]	; 31a20 <__assert_fail@plt+0x1f334>
   31928:	add	r5, r2, r3
   3192c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31930:	ldr	r3, [r3, #24]
   31934:	sub	r2, fp, #72	; 0x48
   31938:	mov	r1, r2
   3193c:	mov	r0, r3
   31940:	bl	31308 <__assert_fail@plt+0x1ec1c>
   31944:	mov	r3, r0
   31948:	mov	r2, r3
   3194c:	mov	r1, r5
   31950:	mov	r0, r4
   31954:	bl	123f8 <fprintf@plt>
   31958:	ldr	r3, [fp, #-180]	; 0xffffff4c
   3195c:	mov	r2, #1
   31960:	strb	r2, [r3, #185]	; 0xb9
   31964:	mov	r3, #1
   31968:	strb	r3, [fp, #-13]
   3196c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31970:	ldrb	r3, [r3, #152]	; 0x98
   31974:	cmp	r3, #0
   31978:	beq	319d0 <__assert_fail@plt+0x1f2e4>
   3197c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   31980:	ldr	r3, [r3, #88]	; 0x58
   31984:	mov	r2, r3
   31988:	asr	r3, r2, #31
   3198c:	strd	r2, [fp, #-44]	; 0xffffffd4
   31990:	ldrb	r3, [fp, #-13]
   31994:	cmp	r3, #0
   31998:	beq	319b0 <__assert_fail@plt+0x1f2c4>
   3199c:	ldr	r3, [pc, #84]	; 319f8 <__assert_fail@plt+0x1f30c>
   319a0:	ldr	r3, [r3]
   319a4:	mov	r1, r3
   319a8:	mov	r0, #32
   319ac:	bl	1256c <fputc@plt>
   319b0:	ldr	r3, [pc, #64]	; 319f8 <__assert_fail@plt+0x1f30c>
   319b4:	ldr	r4, [r3]
   319b8:	ldr	r0, [pc, #100]	; 31a24 <__assert_fail@plt+0x1f338>
   319bc:	bl	12398 <gettext@plt>
   319c0:	mov	r1, r0
   319c4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   319c8:	mov	r0, r4
   319cc:	bl	123f8 <fprintf@plt>
   319d0:	ldr	r3, [pc, #32]	; 319f8 <__assert_fail@plt+0x1f30c>
   319d4:	ldr	r3, [r3]
   319d8:	mov	r1, r3
   319dc:	mov	r0, #10
   319e0:	bl	1256c <fputc@plt>
   319e4:	b	319ec <__assert_fail@plt+0x1f300>
   319e8:	nop			; (mov r0, r0)
   319ec:	sub	sp, fp, #12
   319f0:	pop	{r4, r5, fp, pc}
   319f4:	andeq	r8, r6, r8, asr sl
   319f8:	andeq	ip, r7, r8, lsr #14
   319fc:	andeq	r8, r6, ip, ror #20
   31a00:	andeq	r8, r6, ip, lsl #21
   31a04:	muleq	r6, ip, sl
   31a08:			; <UNDEFINED> instruction: 0x00068ab4
   31a0c:			; <UNDEFINED> instruction: 0x00068abc
   31a10:	andeq	r8, r6, r0, asr #21
   31a14:	andeq	r8, r6, r0, ror #21
   31a18:	andeq	r8, r6, ip, ror #21
   31a1c:	strdeq	r8, [r6], -r4
   31a20:	strdeq	r8, [r6], -r8	; <UNPREDICTABLE>
   31a24:	andeq	r8, r6, r0, lsl #22
   31a28:	push	{fp, lr}
   31a2c:	add	fp, sp, #4
   31a30:	sub	sp, sp, #24
   31a34:	mov	r1, r0
   31a38:	strd	r2, [fp, #-20]	; 0xffffffec
   31a3c:	mov	r3, r1
   31a40:	strb	r3, [fp, #-5]
   31a44:	ldrd	r2, [fp, #-20]	; 0xffffffec
   31a48:	orrs	r3, r2, r3
   31a4c:	bne	31a58 <__assert_fail@plt+0x1f36c>
   31a50:	ldrb	r3, [fp, #-5]
   31a54:	b	31a8c <__assert_fail@plt+0x1f3a0>
   31a58:	ldr	r3, [pc, #56]	; 31a98 <__assert_fail@plt+0x1f3ac>
   31a5c:	ldr	r0, [r3]
   31a60:	ldrb	r3, [fp, #-5]
   31a64:	eor	r3, r3, #1
   31a68:	uxtb	r3, r3
   31a6c:	mov	r2, r3
   31a70:	ldr	r3, [pc, #36]	; 31a9c <__assert_fail@plt+0x1f3b0>
   31a74:	add	r1, r2, r3
   31a78:	ldr	r3, [fp, #4]
   31a7c:	str	r3, [sp]
   31a80:	ldrd	r2, [fp, #-20]	; 0xffffffec
   31a84:	bl	123f8 <fprintf@plt>
   31a88:	mov	r3, #1
   31a8c:	mov	r0, r3
   31a90:	sub	sp, fp, #4
   31a94:	pop	{fp, pc}
   31a98:	andeq	ip, r7, r8, lsr #14
   31a9c:	andeq	r8, r6, r8, lsl fp
   31aa0:	push	{fp, lr}
   31aa4:	add	fp, sp, #4
   31aa8:	sub	sp, sp, #24
   31aac:	str	r0, [fp, #-16]
   31ab0:	str	r1, [fp, #-20]	; 0xffffffec
   31ab4:	mov	r3, #0
   31ab8:	strb	r3, [fp, #-5]
   31abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ac0:	bl	30028 <__assert_fail@plt+0x1d93c>
   31ac4:	mov	r3, r0
   31ac8:	eor	r3, r3, #1
   31acc:	uxtb	r3, r3
   31ad0:	cmp	r3, #0
   31ad4:	bne	31c7c <__assert_fail@plt+0x1f590>
   31ad8:	ldr	r0, [pc, #424]	; 31c88 <__assert_fail@plt+0x1f59c>
   31adc:	bl	12398 <gettext@plt>
   31ae0:	mov	r3, r0
   31ae4:	ldr	r1, [fp, #-16]
   31ae8:	mov	r0, r3
   31aec:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   31af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   31af4:	ldrd	r2, [r3, #96]	; 0x60
   31af8:	orrs	r3, r2, r3
   31afc:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b04:	ldrd	r2, [r3, #104]	; 0x68
   31b08:	orrs	r3, r2, r3
   31b0c:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b14:	ldrd	r2, [r3, #112]	; 0x70
   31b18:	orrs	r3, r2, r3
   31b1c:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b24:	ldrd	r2, [r3, #120]	; 0x78
   31b28:	orrs	r3, r2, r3
   31b2c:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b30:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b34:	ldrd	r2, [r3, #128]	; 0x80
   31b38:	orrs	r3, r2, r3
   31b3c:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b44:	ldrd	r2, [r3, #136]	; 0x88
   31b48:	orrs	r3, r2, r3
   31b4c:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b54:	ldr	r3, [r3, #144]	; 0x90
   31b58:	cmp	r3, #0
   31b5c:	bne	31b84 <__assert_fail@plt+0x1f498>
   31b60:	ldr	r0, [pc, #292]	; 31c8c <__assert_fail@plt+0x1f5a0>
   31b64:	bl	12398 <gettext@plt>
   31b68:	mov	r2, r0
   31b6c:	ldr	r3, [pc, #284]	; 31c90 <__assert_fail@plt+0x1f5a4>
   31b70:	ldr	r3, [r3]
   31b74:	mov	r1, r3
   31b78:	mov	r0, r2
   31b7c:	bl	12680 <fputs@plt>
   31b80:	b	31c80 <__assert_fail@plt+0x1f594>
   31b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   31b88:	ldrd	r2, [r3, #96]	; 0x60
   31b8c:	ldrb	r0, [fp, #-5]
   31b90:	ldr	r1, [pc, #252]	; 31c94 <__assert_fail@plt+0x1f5a8>
   31b94:	str	r1, [sp]
   31b98:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31b9c:	mov	r3, r0
   31ba0:	strb	r3, [fp, #-5]
   31ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   31ba8:	ldrd	r2, [r3, #104]	; 0x68
   31bac:	ldrb	r0, [fp, #-5]
   31bb0:	ldr	r1, [pc, #224]	; 31c98 <__assert_fail@plt+0x1f5ac>
   31bb4:	str	r1, [sp]
   31bb8:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31bbc:	mov	r3, r0
   31bc0:	strb	r3, [fp, #-5]
   31bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   31bc8:	ldrd	r2, [r3, #112]	; 0x70
   31bcc:	ldrb	r0, [fp, #-5]
   31bd0:	ldr	r1, [pc, #196]	; 31c9c <__assert_fail@plt+0x1f5b0>
   31bd4:	str	r1, [sp]
   31bd8:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31bdc:	mov	r3, r0
   31be0:	strb	r3, [fp, #-5]
   31be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   31be8:	ldrd	r2, [r3, #120]	; 0x78
   31bec:	ldrb	r0, [fp, #-5]
   31bf0:	ldr	r1, [pc, #168]	; 31ca0 <__assert_fail@plt+0x1f5b4>
   31bf4:	str	r1, [sp]
   31bf8:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31bfc:	mov	r3, r0
   31c00:	strb	r3, [fp, #-5]
   31c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   31c08:	ldrd	r2, [r3, #128]	; 0x80
   31c0c:	ldrb	r0, [fp, #-5]
   31c10:	ldr	r1, [pc, #140]	; 31ca4 <__assert_fail@plt+0x1f5b8>
   31c14:	str	r1, [sp]
   31c18:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31c1c:	mov	r3, r0
   31c20:	strb	r3, [fp, #-5]
   31c24:	ldr	r3, [fp, #-20]	; 0xffffffec
   31c28:	ldrd	r2, [r3, #136]	; 0x88
   31c2c:	ldrb	r0, [fp, #-5]
   31c30:	ldr	r1, [pc, #112]	; 31ca8 <__assert_fail@plt+0x1f5bc>
   31c34:	str	r1, [sp]
   31c38:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31c3c:	mov	r3, r0
   31c40:	strb	r3, [fp, #-5]
   31c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   31c48:	ldr	r3, [r3, #144]	; 0x90
   31c4c:	mov	r2, r3
   31c50:	asr	r3, r2, #31
   31c54:	ldrb	r0, [fp, #-5]
   31c58:	ldr	r1, [pc, #76]	; 31cac <__assert_fail@plt+0x1f5c0>
   31c5c:	str	r1, [sp]
   31c60:	bl	31a28 <__assert_fail@plt+0x1f33c>
   31c64:	ldr	r3, [pc, #36]	; 31c90 <__assert_fail@plt+0x1f5a4>
   31c68:	ldr	r3, [r3]
   31c6c:	mov	r1, r3
   31c70:	mov	r0, #10
   31c74:	bl	1256c <fputc@plt>
   31c78:	b	31c80 <__assert_fail@plt+0x1f594>
   31c7c:	nop			; (mov r0, r0)
   31c80:	sub	sp, fp, #4
   31c84:	pop	{fp, pc}
   31c88:	andeq	r8, r6, r8, asr sl
   31c8c:	andeq	r8, r6, r4, lsr #22
   31c90:	andeq	ip, r7, r8, lsr #14
   31c94:	andeq	r8, r6, r4, lsr fp
   31c98:	andeq	r8, r6, ip, lsr fp
   31c9c:	andeq	r8, r6, r8, asr #22
   31ca0:	andeq	r8, r6, r0, asr fp
   31ca4:	andeq	r8, r6, r8, asr fp
   31ca8:	andeq	r8, r6, r0, ror #22
   31cac:	andeq	r8, r6, r8, ror #22
   31cb0:	push	{fp}		; (str fp, [sp, #-4]!)
   31cb4:	add	fp, sp, #0
   31cb8:	sub	sp, sp, #20
   31cbc:	str	r0, [fp, #-8]
   31cc0:	str	r1, [fp, #-12]
   31cc4:	str	r2, [fp, #-16]
   31cc8:	str	r3, [fp, #-20]	; 0xffffffec
   31ccc:	ldr	r3, [fp, #-8]
   31cd0:	cmp	r3, #0
   31cd4:	bne	31ce0 <__assert_fail@plt+0x1f5f4>
   31cd8:	ldr	r3, [pc, #16]	; 31cf0 <__assert_fail@plt+0x1f604>
   31cdc:	str	r3, [fp, #-8]
   31ce0:	nop			; (mov r0, r0)
   31ce4:	add	sp, fp, #0
   31ce8:	pop	{fp}		; (ldr fp, [sp], #4)
   31cec:	bx	lr
   31cf0:	andeq	r8, r6, r0, asr #31
   31cf4:	push	{r4, r5, fp, lr}
   31cf8:	add	fp, sp, #12
   31cfc:	sub	sp, sp, #1424	; 0x590
   31d00:	str	r0, [fp, #-1376]	; 0xfffffaa0
   31d04:	mov	r3, #0
   31d08:	str	r3, [fp, #-60]	; 0xffffffc4
   31d0c:	mov	r3, #0
   31d10:	str	r3, [fp, #-64]	; 0xffffffc0
   31d14:	sub	r3, fp, #196	; 0xc4
   31d18:	str	r3, [fp, #-32]	; 0xffffffe0
   31d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31d20:	str	r3, [fp, #-36]	; 0xffffffdc
   31d24:	sub	r3, fp, #1296	; 0x510
   31d28:	sub	r3, r3, #12
   31d2c:	sub	r3, r3, #8
   31d30:	str	r3, [fp, #-40]	; 0xffffffd8
   31d34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d38:	str	r3, [fp, #-44]	; 0xffffffd4
   31d3c:	mov	r3, #20
   31d40:	str	r3, [fp, #-48]	; 0xffffffd0
   31d44:	mov	r3, #0
   31d48:	str	r3, [fp, #-24]	; 0xffffffe8
   31d4c:	mov	r3, #0
   31d50:	str	r3, [fp, #-28]	; 0xffffffe4
   31d54:	mov	r3, #0
   31d58:	str	r3, [fp, #-20]	; 0xffffffec
   31d5c:	mvn	r3, #1
   31d60:	str	r3, [fp, #-16]
   31d64:	b	31d74 <__assert_fail@plt+0x1f688>
   31d68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31d6c:	add	r3, r3, #2
   31d70:	str	r3, [fp, #-36]	; 0xffffffdc
   31d74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31d78:	sxth	r2, r3
   31d7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31d80:	strh	r2, [r3]
   31d84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31d88:	sub	r3, r3, #-2147483647	; 0x80000001
   31d8c:	lsl	r3, r3, #1
   31d90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31d94:	add	r2, r2, r3
   31d98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31d9c:	cmp	r2, r3
   31da0:	bhi	31f80 <__assert_fail@plt+0x1f894>
   31da4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31dac:	sub	r3, r2, r3
   31db0:	asr	r3, r3, #1
   31db4:	add	r3, r3, #1
   31db8:	str	r3, [fp, #-68]	; 0xffffffbc
   31dbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31dc0:	cmp	r3, #19
   31dc4:	bhi	34470 <__assert_fail@plt+0x21d84>
   31dc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31dcc:	lsl	r3, r3, #1
   31dd0:	str	r3, [fp, #-48]	; 0xffffffd0
   31dd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31dd8:	cmp	r3, #20
   31ddc:	bls	31de8 <__assert_fail@plt+0x1f6fc>
   31de0:	mov	r3, #20
   31de4:	str	r3, [fp, #-48]	; 0xffffffd0
   31de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31dec:	str	r3, [fp, #-72]	; 0xffffffb8
   31df0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31df4:	mov	r2, #58	; 0x3a
   31df8:	mul	r3, r2, r3
   31dfc:	add	r3, r3, #55	; 0x37
   31e00:	mov	r0, r3
   31e04:	bl	42ba8 <__assert_fail@plt+0x304bc>
   31e08:	mov	r3, r0
   31e0c:	str	r3, [fp, #-76]	; 0xffffffb4
   31e10:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31e14:	cmp	r3, #0
   31e18:	beq	34478 <__assert_fail@plt+0x21d8c>
   31e1c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   31e20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   31e24:	lsl	r3, r3, #1
   31e28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31e2c:	mov	r0, r1
   31e30:	mov	r1, r2
   31e34:	mov	r2, r3
   31e38:	bl	120f8 <memcpy@plt>
   31e3c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31e40:	str	r3, [fp, #-32]	; 0xffffffe0
   31e44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31e48:	lsl	r3, r3, #1
   31e4c:	add	r3, r3, #55	; 0x37
   31e50:	str	r3, [fp, #-80]	; 0xffffffb0
   31e54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   31e58:	lsr	r3, r3, #3
   31e5c:	ldr	r2, [pc, #3760]	; 32d14 <__assert_fail@plt+0x20628>
   31e60:	umull	r2, r3, r2, r3
   31e64:	mov	r2, r3
   31e68:	mov	r3, r2
   31e6c:	lsl	r3, r3, #3
   31e70:	sub	r3, r3, r2
   31e74:	lsl	r3, r3, #3
   31e78:	mov	r2, r3
   31e7c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31e80:	add	r3, r3, r2
   31e84:	str	r3, [fp, #-76]	; 0xffffffb4
   31e88:	ldr	r1, [fp, #-76]	; 0xffffffb4
   31e8c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   31e90:	mov	r3, r2
   31e94:	lsl	r3, r3, #3
   31e98:	sub	r3, r3, r2
   31e9c:	lsl	r3, r3, #3
   31ea0:	mov	r2, r3
   31ea4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31ea8:	mov	r0, r1
   31eac:	mov	r1, r3
   31eb0:	bl	120f8 <memcpy@plt>
   31eb4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31eb8:	str	r3, [fp, #-40]	; 0xffffffd8
   31ebc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   31ec0:	mov	r3, r2
   31ec4:	lsl	r3, r3, #3
   31ec8:	sub	r3, r3, r2
   31ecc:	lsl	r3, r3, #3
   31ed0:	add	r3, r3, #55	; 0x37
   31ed4:	str	r3, [fp, #-84]	; 0xffffffac
   31ed8:	ldr	r3, [fp, #-84]	; 0xffffffac
   31edc:	lsr	r3, r3, #3
   31ee0:	ldr	r2, [pc, #3628]	; 32d14 <__assert_fail@plt+0x20628>
   31ee4:	umull	r2, r3, r2, r3
   31ee8:	mov	r2, r3
   31eec:	mov	r3, r2
   31ef0:	lsl	r3, r3, #3
   31ef4:	sub	r3, r3, r2
   31ef8:	lsl	r3, r3, #3
   31efc:	mov	r2, r3
   31f00:	ldr	r3, [fp, #-76]	; 0xffffffb4
   31f04:	add	r3, r3, r2
   31f08:	str	r3, [fp, #-76]	; 0xffffffb4
   31f0c:	sub	r3, fp, #196	; 0xc4
   31f10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   31f14:	cmp	r2, r3
   31f18:	beq	31f24 <__assert_fail@plt+0x1f838>
   31f1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   31f20:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   31f24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   31f28:	sub	r3, r3, #-2147483647	; 0x80000001
   31f2c:	lsl	r3, r3, #1
   31f30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31f34:	add	r3, r2, r3
   31f38:	str	r3, [fp, #-36]	; 0xffffffdc
   31f3c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   31f40:	mov	r3, r2
   31f44:	lsl	r3, r3, #3
   31f48:	sub	r3, r3, r2
   31f4c:	lsl	r3, r3, #3
   31f50:	sub	r3, r3, #56	; 0x38
   31f54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31f58:	add	r3, r2, r3
   31f5c:	str	r3, [fp, #-44]	; 0xffffffd4
   31f60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31f64:	sub	r3, r3, #-2147483647	; 0x80000001
   31f68:	lsl	r3, r3, #1
   31f6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31f70:	add	r2, r2, r3
   31f74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31f78:	cmp	r2, r3
   31f7c:	bls	34410 <__assert_fail@plt+0x21d24>
   31f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31f84:	cmp	r3, #12
   31f88:	beq	34400 <__assert_fail@plt+0x21d14>
   31f8c:	nop			; (mov r0, r0)
   31f90:	ldr	r2, [pc, #3456]	; 32d18 <__assert_fail@plt+0x2062c>
   31f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31f98:	add	r3, r2, r3
   31f9c:	ldrsb	r3, [r3]
   31fa0:	str	r3, [fp, #-52]	; 0xffffffcc
   31fa4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31fa8:	cmn	r3, #93	; 0x5d
   31fac:	beq	320f8 <__assert_fail@plt+0x1fa0c>
   31fb0:	ldr	r3, [fp, #-16]
   31fb4:	cmn	r3, #2
   31fb8:	bne	31fd0 <__assert_fail@plt+0x1f8e4>
   31fbc:	sub	r3, fp, #156	; 0x9c
   31fc0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   31fc4:	mov	r0, r3
   31fc8:	bl	35464 <__assert_fail@plt+0x22d78>
   31fcc:	str	r0, [fp, #-16]
   31fd0:	ldr	r3, [fp, #-16]
   31fd4:	cmp	r3, #0
   31fd8:	bgt	31ff0 <__assert_fail@plt+0x1f904>
   31fdc:	mov	r3, #0
   31fe0:	str	r3, [fp, #-60]	; 0xffffffc4
   31fe4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   31fe8:	str	r3, [fp, #-16]
   31fec:	b	3201c <__assert_fail@plt+0x1f930>
   31ff0:	ldr	r3, [fp, #-16]
   31ff4:	ldr	r2, [pc, #3360]	; 32d1c <__assert_fail@plt+0x20630>
   31ff8:	cmp	r3, r2
   31ffc:	bhi	32014 <__assert_fail@plt+0x1f928>
   32000:	ldr	r2, [pc, #3352]	; 32d20 <__assert_fail@plt+0x20634>
   32004:	ldr	r3, [fp, #-16]
   32008:	add	r3, r2, r3
   3200c:	ldrb	r3, [r3]
   32010:	b	32018 <__assert_fail@plt+0x1f92c>
   32014:	mov	r3, #2
   32018:	str	r3, [fp, #-60]	; 0xffffffc4
   3201c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   32024:	add	r3, r2, r3
   32028:	str	r3, [fp, #-52]	; 0xffffffcc
   3202c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32030:	cmp	r3, #0
   32034:	blt	320fc <__assert_fail@plt+0x1fa10>
   32038:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3203c:	cmp	r3, #112	; 0x70
   32040:	bgt	320fc <__assert_fail@plt+0x1fa10>
   32044:	ldr	r2, [pc, #3288]	; 32d24 <__assert_fail@plt+0x20638>
   32048:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3204c:	add	r3, r2, r3
   32050:	ldrsb	r3, [r3]
   32054:	mov	r2, r3
   32058:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3205c:	cmp	r2, r3
   32060:	bne	320fc <__assert_fail@plt+0x1fa10>
   32064:	ldr	r2, [pc, #3260]	; 32d28 <__assert_fail@plt+0x2063c>
   32068:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3206c:	add	r3, r2, r3
   32070:	ldrb	r3, [r3]
   32074:	str	r3, [fp, #-52]	; 0xffffffcc
   32078:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3207c:	cmp	r3, #0
   32080:	bgt	32094 <__assert_fail@plt+0x1f9a8>
   32084:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32088:	rsb	r3, r3, #0
   3208c:	str	r3, [fp, #-52]	; 0xffffffcc
   32090:	b	32120 <__assert_fail@plt+0x1fa34>
   32094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32098:	cmp	r3, #0
   3209c:	beq	320ac <__assert_fail@plt+0x1f9c0>
   320a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   320a4:	sub	r3, r3, #1
   320a8:	str	r3, [fp, #-28]	; 0xffffffe4
   320ac:	mvn	r3, #1
   320b0:	str	r3, [fp, #-16]
   320b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   320b8:	str	r3, [fp, #-24]	; 0xffffffe8
   320bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   320c0:	add	r3, r3, #56	; 0x38
   320c4:	str	r3, [fp, #-44]	; 0xffffffd4
   320c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   320cc:	mov	lr, r3
   320d0:	sub	ip, fp, #156	; 0x9c
   320d4:	ldm	ip!, {r0, r1, r2, r3}
   320d8:	stmia	lr!, {r0, r1, r2, r3}
   320dc:	ldm	ip!, {r0, r1, r2, r3}
   320e0:	stmia	lr!, {r0, r1, r2, r3}
   320e4:	ldm	ip!, {r0, r1, r2, r3}
   320e8:	stmia	lr!, {r0, r1, r2, r3}
   320ec:	ldm	ip, {r0, r1}
   320f0:	stm	lr, {r0, r1}
   320f4:	b	31d68 <__assert_fail@plt+0x1f67c>
   320f8:	nop			; (mov r0, r0)
   320fc:	ldr	r2, [pc, #3112]	; 32d2c <__assert_fail@plt+0x20640>
   32100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32104:	add	r3, r2, r3
   32108:	ldrb	r3, [r3]
   3210c:	str	r3, [fp, #-52]	; 0xffffffcc
   32110:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32114:	cmp	r3, #0
   32118:	beq	34228 <__assert_fail@plt+0x21b3c>
   3211c:	nop			; (mov r0, r0)
   32120:	ldr	r2, [pc, #3080]	; 32d30 <__assert_fail@plt+0x20644>
   32124:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32128:	add	r3, r2, r3
   3212c:	ldrb	r3, [r3]
   32130:	str	r3, [fp, #-64]	; 0xffffffc0
   32134:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32138:	rsb	r3, r3, #1
   3213c:	mov	r2, r3
   32140:	mov	r3, r2
   32144:	lsl	r3, r3, #3
   32148:	sub	r3, r3, r2
   3214c:	lsl	r3, r3, #3
   32150:	mov	r2, r3
   32154:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32158:	add	r3, r3, r2
   3215c:	sub	ip, fp, #1360	; 0x550
   32160:	sub	ip, ip, #12
   32164:	mov	lr, r3
   32168:	ldm	lr!, {r0, r1, r2, r3}
   3216c:	stmia	ip!, {r0, r1, r2, r3}
   32170:	ldm	lr!, {r0, r1, r2, r3}
   32174:	stmia	ip!, {r0, r1, r2, r3}
   32178:	ldm	lr!, {r0, r1, r2, r3}
   3217c:	stmia	ip!, {r0, r1, r2, r3}
   32180:	ldm	lr, {r0, r1}
   32184:	stm	ip, {r0, r1}
   32188:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3218c:	sub	r3, r3, #4
   32190:	cmp	r3, #87	; 0x57
   32194:	ldrls	pc, [pc, r3, lsl #2]
   32198:	b	340b0 <__assert_fail@plt+0x219c4>
   3219c:	strdeq	r2, [r3], -ip
   321a0:	strheq	r4, [r3], -r0
   321a4:	strheq	r4, [r3], -r0
   321a8:	andeq	r2, r3, r8, lsr r3
   321ac:	andeq	r2, r3, ip, ror r3
   321b0:	andeq	r2, r3, ip, lsr #7
   321b4:	ldrdeq	r2, [r3], -ip
   321b8:	andeq	r2, r3, ip, lsl #8
   321bc:	andeq	r2, r3, ip, lsr r4
   321c0:	andeq	r2, r3, ip, ror #8
   321c4:	andeq	r2, r3, r8, lsl #9
   321c8:	andeq	r2, r3, r4, lsr #9
   321cc:	strheq	r4, [r3], -r0
   321d0:	strheq	r4, [r3], -r0
   321d4:	andeq	r2, r3, r0, asr #9
   321d8:	andeq	r2, r3, ip, lsl #10
   321dc:	andeq	r2, r3, ip, asr r5
   321e0:	strheq	r4, [r3], -r0
   321e4:			; <UNDEFINED> instruction: 0x000325bc
   321e8:	andeq	r2, r3, r4, lsl #12
   321ec:	andeq	r2, r3, r0, asr r6
   321f0:	strheq	r4, [r3], -r0
   321f4:	strheq	r4, [r3], -r0
   321f8:	andeq	r2, r3, ip, lsr #13
   321fc:	andeq	r2, r3, r8, lsl #14
   32200:	andeq	r2, r3, ip, lsl r7
   32204:	andeq	r2, r3, r0, asr #14
   32208:	andeq	r2, r3, r4, asr r7
   3220c:	andeq	r2, r3, r4, ror #14
   32210:	andeq	r2, r3, r0, ror #15
   32214:	andeq	r2, r3, r4, asr r8
   32218:			; <UNDEFINED> instruction: 0x00032ab8
   3221c:	ldrdeq	r2, [r3], -r8
   32220:	strdeq	r2, [r3], -ip
   32224:	andeq	r2, r3, r0, lsr #22
   32228:	andeq	r2, r3, r8, asr #22
   3222c:	andeq	r2, r3, ip, ror fp
   32230:			; <UNDEFINED> instruction: 0x00032bb0
   32234:	ldrdeq	r2, [r3], -r8
   32238:	andeq	r2, r3, r8, ror #26
   3223c:	andeq	r2, r3, r8, lsl lr
   32240:	andeq	r2, r3, r8, lsr pc
   32244:	andeq	r2, r3, r0, ror #30
   32248:	andeq	r2, r3, ip, lsr #31
   3224c:	ldrdeq	r2, [r3], -r4
   32250:	strheq	r4, [r3], -r0
   32254:	andeq	r3, r3, r0, lsr #32
   32258:	andeq	r3, r3, r0, asr #2
   3225c:	muleq	r3, ip, r1
   32260:	andeq	r3, r3, ip, ror #3
   32264:	andeq	r3, r3, ip, lsr r2
   32268:	andeq	r3, r3, r0, ror r2
   3226c:	andeq	r3, r3, r4, lsr #5
   32270:	ldrdeq	r3, [r3], -r8
   32274:	andeq	r3, r3, ip, lsl #6
   32278:	andeq	r3, r3, r0, asr #6
   3227c:	andeq	r3, r3, r4, ror r3
   32280:	andeq	r3, r3, ip, lsr #12
   32284:	andeq	r3, r3, r4, ror #17
   32288:	andeq	r3, r3, r4, lsl r9
   3228c:	andeq	r3, r3, r8, asr #18
   32290:	andeq	r3, r3, ip, ror r9
   32294:			; <UNDEFINED> instruction: 0x000339b0
   32298:	andeq	r3, r3, r4, ror #19
   3229c:	andeq	r3, r3, r8, lsl sl
   322a0:	andeq	r3, r3, ip, asr #20
   322a4:	andeq	r3, r3, r0, lsl #21
   322a8:			; <UNDEFINED> instruction: 0x00033ab4
   322ac:	andeq	r3, r3, r0, lsl #22
   322b0:	andeq	r3, r3, ip, asr #22
   322b4:	strheq	r4, [r3], -r0
   322b8:	andeq	r3, r3, r0, lsl #23
   322bc:			; <UNDEFINED> instruction: 0x00033bb4
   322c0:	andeq	r3, r3, r8, ror #23
   322c4:	andeq	r3, r3, r0, lsr #29
   322c8:	ldrdeq	r3, [r3], -r4
   322cc:	andeq	r3, r3, r8, lsl #30
   322d0:	andeq	r3, r3, ip, lsr pc
   322d4:	strheq	r4, [r3], -r0
   322d8:	strheq	r4, [r3], -r0
   322dc:	strheq	r4, [r3], -r0
   322e0:	andeq	r3, r3, ip, ror #30
   322e4:	strheq	r4, [r3], -r0
   322e8:	andeq	r3, r3, r8, lsr #31
   322ec:	andeq	r3, r3, r4, ror #31
   322f0:	andeq	r4, r3, r8
   322f4:	andeq	r4, r3, ip, ror r0
   322f8:	muleq	r3, r8, r0
   322fc:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32300:	ldr	r2, [fp, #-44]	; 0xffffffd4
   32304:	add	r3, r3, #88	; 0x58
   32308:	ldm	r2, {r0, r1}
   3230c:	stm	r3, {r0, r1}
   32310:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32314:	mov	r2, #1
   32318:	strb	r2, [r3, #152]	; 0x98
   3231c:	ldr	r0, [pc, #2576]	; 32d34 <__assert_fail@plt+0x20648>
   32320:	bl	12398 <gettext@plt>
   32324:	mov	r3, r0
   32328:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   3232c:	mov	r0, r3
   32330:	bl	3157c <__assert_fail@plt+0x1ee90>
   32334:	b	34104 <__assert_fail@plt+0x21a18>
   32338:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3233c:	ldr	r3, [r3, #172]	; 0xac
   32340:	add	r2, r3, #1
   32344:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32348:	str	r2, [r3, #172]	; 0xac
   3234c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32350:	ldr	r3, [r3, #156]	; 0x9c
   32354:	add	r2, r3, #1
   32358:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3235c:	str	r2, [r3, #156]	; 0x9c
   32360:	ldr	r0, [pc, #2512]	; 32d38 <__assert_fail@plt+0x2064c>
   32364:	bl	12398 <gettext@plt>
   32368:	mov	r3, r0
   3236c:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32370:	mov	r0, r3
   32374:	bl	3157c <__assert_fail@plt+0x1ee90>
   32378:	b	34104 <__assert_fail@plt+0x21a18>
   3237c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32380:	ldr	r3, [r3, #172]	; 0xac
   32384:	add	r2, r3, #1
   32388:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3238c:	str	r2, [r3, #172]	; 0xac
   32390:	ldr	r0, [pc, #2468]	; 32d3c <__assert_fail@plt+0x20650>
   32394:	bl	12398 <gettext@plt>
   32398:	mov	r3, r0
   3239c:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   323a0:	mov	r0, r3
   323a4:	bl	3157c <__assert_fail@plt+0x1ee90>
   323a8:	b	34104 <__assert_fail@plt+0x21a18>
   323ac:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   323b0:	ldr	r3, [r3, #164]	; 0xa4
   323b4:	add	r2, r3, #1
   323b8:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   323bc:	str	r2, [r3, #164]	; 0xa4
   323c0:	ldr	r0, [pc, #2424]	; 32d40 <__assert_fail@plt+0x20654>
   323c4:	bl	12398 <gettext@plt>
   323c8:	mov	r3, r0
   323cc:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   323d0:	mov	r0, r3
   323d4:	bl	3157c <__assert_fail@plt+0x1ee90>
   323d8:	b	34104 <__assert_fail@plt+0x21a18>
   323dc:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   323e0:	ldr	r3, [r3, #176]	; 0xb0
   323e4:	add	r2, r3, #1
   323e8:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   323ec:	str	r2, [r3, #176]	; 0xb0
   323f0:	ldr	r0, [pc, #2380]	; 32d44 <__assert_fail@plt+0x20658>
   323f4:	bl	12398 <gettext@plt>
   323f8:	mov	r3, r0
   323fc:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32400:	mov	r0, r3
   32404:	bl	3157c <__assert_fail@plt+0x1ee90>
   32408:	b	34104 <__assert_fail@plt+0x21a18>
   3240c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32410:	ldr	r3, [r3, #156]	; 0x9c
   32414:	add	r2, r3, #1
   32418:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3241c:	str	r2, [r3, #156]	; 0x9c
   32420:	ldr	r0, [pc, #2336]	; 32d48 <__assert_fail@plt+0x2065c>
   32424:	bl	12398 <gettext@plt>
   32428:	mov	r3, r0
   3242c:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32430:	mov	r0, r3
   32434:	bl	3157c <__assert_fail@plt+0x1ee90>
   32438:	b	34104 <__assert_fail@plt+0x21a18>
   3243c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32440:	ldr	r3, [r3, #160]	; 0xa0
   32444:	add	r2, r3, #1
   32448:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3244c:	str	r2, [r3, #160]	; 0xa0
   32450:	ldr	r0, [pc, #2292]	; 32d4c <__assert_fail@plt+0x20660>
   32454:	bl	12398 <gettext@plt>
   32458:	mov	r3, r0
   3245c:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32460:	mov	r0, r3
   32464:	bl	3157c <__assert_fail@plt+0x1ee90>
   32468:	b	34104 <__assert_fail@plt+0x21a18>
   3246c:	ldr	r0, [pc, #2268]	; 32d50 <__assert_fail@plt+0x20664>
   32470:	bl	12398 <gettext@plt>
   32474:	mov	r3, r0
   32478:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   3247c:	mov	r0, r3
   32480:	bl	31aa0 <__assert_fail@plt+0x1f3b4>
   32484:	b	34104 <__assert_fail@plt+0x21a18>
   32488:	ldr	r0, [pc, #2244]	; 32d54 <__assert_fail@plt+0x20668>
   3248c:	bl	12398 <gettext@plt>
   32490:	mov	r3, r0
   32494:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32498:	mov	r0, r3
   3249c:	bl	3157c <__assert_fail@plt+0x1ee90>
   324a0:	b	34104 <__assert_fail@plt+0x21a18>
   324a4:	ldr	r0, [pc, #2220]	; 32d58 <__assert_fail@plt+0x2066c>
   324a8:	bl	12398 <gettext@plt>
   324ac:	mov	r3, r0
   324b0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   324b4:	mov	r0, r3
   324b8:	bl	31aa0 <__assert_fail@plt+0x1f3b4>
   324bc:	b	34104 <__assert_fail@plt+0x21a18>
   324c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   324c4:	sub	r3, r3, #56	; 0x38
   324c8:	ldrd	r0, [r3, #8]
   324cc:	mov	r3, #0
   324d0:	str	r3, [sp, #12]
   324d4:	mov	r3, #0
   324d8:	str	r3, [sp, #8]
   324dc:	mov	r2, #0
   324e0:	mov	r3, #0
   324e4:	strd	r2, [sp]
   324e8:	mov	r2, r0
   324ec:	mov	r3, r1
   324f0:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   324f4:	bl	31120 <__assert_fail@plt+0x1ea34>
   324f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   324fc:	ldrd	r2, [r3]
   32500:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32504:	str	r2, [r3, #28]
   32508:	b	34104 <__assert_fail@plt+0x21a18>
   3250c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32510:	sub	r3, r3, #168	; 0xa8
   32514:	ldrd	r0, [r3, #8]
   32518:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3251c:	sub	r3, r3, #56	; 0x38
   32520:	ldrd	r2, [r3, #8]
   32524:	mov	ip, #0
   32528:	str	ip, [sp, #12]
   3252c:	mov	ip, #0
   32530:	str	ip, [sp, #8]
   32534:	strd	r2, [sp]
   32538:	mov	r2, r0
   3253c:	mov	r3, r1
   32540:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32544:	bl	31120 <__assert_fail@plt+0x1ea34>
   32548:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3254c:	ldrd	r2, [r3]
   32550:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32554:	str	r2, [r3, #28]
   32558:	b	34104 <__assert_fail@plt+0x21a18>
   3255c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32560:	sub	r3, r3, #280	; 0x118
   32564:	ldrd	r0, [r3, #8]
   32568:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3256c:	sub	r3, r3, #168	; 0xa8
   32570:	ldrd	r2, [r3, #8]
   32574:	ldr	ip, [fp, #-44]	; 0xffffffd4
   32578:	sub	ip, ip, #56	; 0x38
   3257c:	ldr	ip, [ip]
   32580:	ldr	lr, [fp, #-44]	; 0xffffffd4
   32584:	sub	lr, lr, #56	; 0x38
   32588:	ldr	lr, [lr, #4]
   3258c:	str	lr, [sp, #12]
   32590:	str	ip, [sp, #8]
   32594:	strd	r2, [sp]
   32598:	mov	r2, r0
   3259c:	mov	r3, r1
   325a0:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   325a4:	bl	31120 <__assert_fail@plt+0x1ea34>
   325a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   325ac:	ldrd	r2, [r3]
   325b0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   325b4:	str	r2, [r3, #28]
   325b8:	b	34104 <__assert_fail@plt+0x21a18>
   325bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   325c0:	sub	r3, r3, #56	; 0x38
   325c4:	ldrd	r0, [r3, #8]
   325c8:	mov	r3, #0
   325cc:	str	r3, [sp, #12]
   325d0:	mov	r3, #0
   325d4:	str	r3, [sp, #8]
   325d8:	mov	r2, #0
   325dc:	mov	r3, #0
   325e0:	strd	r2, [sp]
   325e4:	mov	r2, r0
   325e8:	mov	r3, r1
   325ec:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   325f0:	bl	31120 <__assert_fail@plt+0x1ea34>
   325f4:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   325f8:	mov	r2, #2
   325fc:	str	r2, [r3, #28]
   32600:	b	34104 <__assert_fail@plt+0x21a18>
   32604:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32608:	sub	r3, r3, #168	; 0xa8
   3260c:	ldrd	r0, [r3, #8]
   32610:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32614:	sub	r3, r3, #56	; 0x38
   32618:	ldrd	r2, [r3, #8]
   3261c:	mov	ip, #0
   32620:	str	ip, [sp, #12]
   32624:	mov	ip, #0
   32628:	str	ip, [sp, #8]
   3262c:	strd	r2, [sp]
   32630:	mov	r2, r0
   32634:	mov	r3, r1
   32638:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   3263c:	bl	31120 <__assert_fail@plt+0x1ea34>
   32640:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32644:	mov	r2, #2
   32648:	str	r2, [r3, #28]
   3264c:	b	34104 <__assert_fail@plt+0x21a18>
   32650:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32654:	sub	r3, r3, #280	; 0x118
   32658:	ldrd	r0, [r3, #8]
   3265c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32660:	sub	r3, r3, #168	; 0xa8
   32664:	ldrd	r2, [r3, #8]
   32668:	ldr	ip, [fp, #-44]	; 0xffffffd4
   3266c:	sub	ip, ip, #56	; 0x38
   32670:	ldr	ip, [ip]
   32674:	ldr	lr, [fp, #-44]	; 0xffffffd4
   32678:	sub	lr, lr, #56	; 0x38
   3267c:	ldr	lr, [lr, #4]
   32680:	str	lr, [sp, #12]
   32684:	str	ip, [sp, #8]
   32688:	strd	r2, [sp]
   3268c:	mov	r2, r0
   32690:	mov	r3, r1
   32694:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32698:	bl	31120 <__assert_fail@plt+0x1ea34>
   3269c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   326a0:	mov	r2, #2
   326a4:	str	r2, [r3, #28]
   326a8:	b	34104 <__assert_fail@plt+0x21a18>
   326ac:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   326b0:	ldr	r3, [r3, #176]	; 0xb0
   326b4:	add	r2, r3, #1
   326b8:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   326bc:	str	r2, [r3, #176]	; 0xb0
   326c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   326c4:	sub	ip, r3, #56	; 0x38
   326c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   326cc:	ldrd	r2, [r3]
   326d0:	strd	r2, [sp, #16]
   326d4:	mov	lr, sp
   326d8:	add	r3, ip, #8
   326dc:	ldm	r3, {r0, r1, r2, r3}
   326e0:	stm	lr, {r0, r1, r2, r3}
   326e4:	ldm	ip, {r2, r3}
   326e8:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   326ec:	bl	345d0 <__assert_fail@plt+0x21ee4>
   326f0:	mov	r3, r0
   326f4:	eor	r3, r3, #1
   326f8:	uxtb	r3, r3
   326fc:	cmp	r3, #0
   32700:	beq	340b8 <__assert_fail@plt+0x219cc>
   32704:	b	34464 <__assert_fail@plt+0x21d78>
   32708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3270c:	ldrd	r2, [r3]
   32710:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32714:	str	r2, [r3, #20]
   32718:	b	34104 <__assert_fail@plt+0x21a18>
   3271c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32720:	mov	r2, #1
   32724:	str	r2, [r3, #20]
   32728:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3272c:	ldr	r3, [r3, #168]	; 0xa8
   32730:	add	r2, r3, #1
   32734:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32738:	str	r2, [r3, #168]	; 0xa8
   3273c:	b	34104 <__assert_fail@plt+0x21a18>
   32740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32744:	ldrd	r2, [r3]
   32748:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3274c:	str	r2, [r3, #24]
   32750:	b	34104 <__assert_fail@plt+0x21a18>
   32754:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32758:	ldr	r2, [pc, #1532]	; 32d5c <__assert_fail@plt+0x20670>
   3275c:	str	r2, [r3, #24]
   32760:	b	34104 <__assert_fail@plt+0x21a18>
   32764:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32768:	sub	r3, r3, #56	; 0x38
   3276c:	ldrd	r2, [r3]
   32770:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32774:	str	r2, [r3, #24]
   32778:	ldr	r4, [fp, #-44]	; 0xffffffd4
   3277c:	mov	r3, #1
   32780:	str	r3, [sp, #48]	; 0x30
   32784:	mov	lr, sp
   32788:	add	ip, r4, #8
   3278c:	ldm	ip!, {r0, r1, r2, r3}
   32790:	stmia	lr!, {r0, r1, r2, r3}
   32794:	ldm	ip!, {r0, r1, r2, r3}
   32798:	stmia	lr!, {r0, r1, r2, r3}
   3279c:	ldm	ip, {r0, r1, r2, r3}
   327a0:	stm	lr, {r0, r1, r2, r3}
   327a4:	ldm	r4, {r2, r3}
   327a8:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   327ac:	bl	3023c <__assert_fail@plt+0x1db50>
   327b0:	mov	r3, r0
   327b4:	eor	r3, r3, #1
   327b8:	uxtb	r3, r3
   327bc:	cmp	r3, #0
   327c0:	bne	34418 <__assert_fail@plt+0x21d2c>
   327c4:	ldr	r0, [pc, #1412]	; 32d50 <__assert_fail@plt+0x20664>
   327c8:	bl	12398 <gettext@plt>
   327cc:	mov	r3, r0
   327d0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   327d4:	mov	r0, r3
   327d8:	bl	31aa0 <__assert_fail@plt+0x1f3b4>
   327dc:	b	34104 <__assert_fail@plt+0x21a18>
   327e0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   327e4:	ldr	r2, [pc, #1392]	; 32d5c <__assert_fail@plt+0x20670>
   327e8:	str	r2, [r3, #24]
   327ec:	ldr	r4, [fp, #-44]	; 0xffffffd4
   327f0:	mov	r3, #1
   327f4:	str	r3, [sp, #48]	; 0x30
   327f8:	mov	lr, sp
   327fc:	add	ip, r4, #8
   32800:	ldm	ip!, {r0, r1, r2, r3}
   32804:	stmia	lr!, {r0, r1, r2, r3}
   32808:	ldm	ip!, {r0, r1, r2, r3}
   3280c:	stmia	lr!, {r0, r1, r2, r3}
   32810:	ldm	ip, {r0, r1, r2, r3}
   32814:	stm	lr, {r0, r1, r2, r3}
   32818:	ldm	r4, {r2, r3}
   3281c:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32820:	bl	3023c <__assert_fail@plt+0x1db50>
   32824:	mov	r3, r0
   32828:	eor	r3, r3, #1
   3282c:	uxtb	r3, r3
   32830:	cmp	r3, #0
   32834:	bne	34420 <__assert_fail@plt+0x21d34>
   32838:	ldr	r0, [pc, #1296]	; 32d50 <__assert_fail@plt+0x20664>
   3283c:	bl	12398 <gettext@plt>
   32840:	mov	r3, r0
   32844:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32848:	mov	r0, r3
   3284c:	bl	31aa0 <__assert_fail@plt+0x1f3b4>
   32850:	b	34104 <__assert_fail@plt+0x21a18>
   32854:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32858:	sub	ip, r3, #56	; 0x38
   3285c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32860:	ldrd	r2, [r3]
   32864:	strd	r2, [sp, #16]
   32868:	mov	lr, sp
   3286c:	add	r3, ip, #8
   32870:	ldm	r3, {r0, r1, r2, r3}
   32874:	stm	lr, {r0, r1, r2, r3}
   32878:	ldm	ip, {r2, r3}
   3287c:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32880:	bl	345d0 <__assert_fail@plt+0x21ee4>
   32884:	mov	r3, r0
   32888:	eor	r3, r3, #1
   3288c:	uxtb	r3, r3
   32890:	cmp	r3, #0
   32894:	bne	34428 <__assert_fail@plt+0x21d3c>
   32898:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3289c:	sub	r3, r3, #112	; 0x70
   328a0:	ldrd	r2, [r3]
   328a4:	cmp	r2, #0
   328a8:	sbcs	r3, r3, #0
   328ac:	bge	32948 <__assert_fail@plt+0x2025c>
   328b0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   328b4:	ldr	r3, [r3, #24]
   328b8:	mov	r0, r3
   328bc:	asr	r1, r0, #31
   328c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   328c4:	sub	r3, r3, #112	; 0x70
   328c8:	ldrd	r2, [r3]
   328cc:	mov	r4, #-2147483648	; 0x80000000
   328d0:	mvn	r5, #0
   328d4:	subs	r2, r4, r2
   328d8:	sbc	r3, r5, r3
   328dc:	cmp	r0, r2
   328e0:	sbcs	r3, r1, r3
   328e4:	blt	32930 <__assert_fail@plt+0x20244>
   328e8:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   328ec:	ldr	r3, [r3, #24]
   328f0:	cmp	r3, #0
   328f4:	blt	32938 <__assert_fail@plt+0x2024c>
   328f8:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   328fc:	ldr	r3, [r3, #24]
   32900:	mov	r0, r3
   32904:	asr	r1, r0, #31
   32908:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3290c:	sub	r3, r3, #112	; 0x70
   32910:	ldrd	r2, [r3]
   32914:	adds	r2, r2, r0
   32918:	adc	r3, r3, r1
   3291c:	mvn	r0, #-2147483648	; 0x80000000
   32920:	mov	r1, #0
   32924:	cmp	r0, r2
   32928:	sbcs	r3, r1, r3
   3292c:	bge	32938 <__assert_fail@plt+0x2024c>
   32930:	mov	r3, #1
   32934:	b	3293c <__assert_fail@plt+0x20250>
   32938:	mov	r3, #0
   3293c:	and	r3, r3, #1
   32940:	uxtb	r3, r3
   32944:	b	32a40 <__assert_fail@plt+0x20354>
   32948:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3294c:	ldr	r3, [r3, #24]
   32950:	cmp	r3, #0
   32954:	bge	329d4 <__assert_fail@plt+0x202e8>
   32958:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3295c:	sub	r3, r3, #112	; 0x70
   32960:	ldrd	r0, [r3]
   32964:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32968:	ldr	r3, [r3, #24]
   3296c:	rsb	r3, r3, #-2147483648	; 0x80000000
   32970:	mov	r2, r3
   32974:	asr	r3, r2, #31
   32978:	cmp	r0, r2
   3297c:	sbcs	r3, r1, r3
   32980:	blt	329bc <__assert_fail@plt+0x202d0>
   32984:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32988:	ldr	r3, [r3, #24]
   3298c:	mov	r0, r3
   32990:	asr	r1, r0, #31
   32994:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32998:	sub	r3, r3, #112	; 0x70
   3299c:	ldrd	r2, [r3]
   329a0:	adds	r2, r2, r0
   329a4:	adc	r3, r3, r1
   329a8:	mvn	r0, #-2147483648	; 0x80000000
   329ac:	mov	r1, #0
   329b0:	cmp	r0, r2
   329b4:	sbcs	r3, r1, r3
   329b8:	bge	329c4 <__assert_fail@plt+0x202d8>
   329bc:	mov	r3, #1
   329c0:	b	329c8 <__assert_fail@plt+0x202dc>
   329c4:	mov	r3, #0
   329c8:	and	r3, r3, #1
   329cc:	uxtb	r3, r3
   329d0:	b	32a40 <__assert_fail@plt+0x20354>
   329d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   329d8:	sub	r3, r3, #112	; 0x70
   329dc:	ldrd	r2, [r3]
   329e0:	mvn	r0, #-2147483648	; 0x80000000
   329e4:	mov	r1, #0
   329e8:	cmp	r0, r2
   329ec:	sbcs	r3, r1, r3
   329f0:	blt	32a2c <__assert_fail@plt+0x20340>
   329f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   329f8:	sub	r3, r3, #112	; 0x70
   329fc:	ldrd	r2, [r3]
   32a00:	mvn	r0, #-2147483648	; 0x80000000
   32a04:	mov	r1, #0
   32a08:	subs	r0, r0, r2
   32a0c:	sbc	r1, r1, r3
   32a10:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32a14:	ldr	r3, [r3, #24]
   32a18:	mov	r2, r3
   32a1c:	asr	r3, r2, #31
   32a20:	cmp	r0, r2
   32a24:	sbcs	r3, r1, r3
   32a28:	bge	32a34 <__assert_fail@plt+0x20348>
   32a2c:	mov	r3, #1
   32a30:	b	32a38 <__assert_fail@plt+0x2034c>
   32a34:	mov	r3, #0
   32a38:	and	r3, r3, #1
   32a3c:	uxtb	r3, r3
   32a40:	cmp	r3, #0
   32a44:	beq	32a7c <__assert_fail@plt+0x20390>
   32a48:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32a4c:	ldr	r3, [r3, #24]
   32a50:	mov	r1, r3
   32a54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32a58:	sub	r3, r3, #112	; 0x70
   32a5c:	ldrd	r2, [r3]
   32a60:	mov	r3, r2
   32a64:	add	r3, r1, r3
   32a68:	mov	r2, r3
   32a6c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32a70:	str	r2, [r3, #24]
   32a74:	mov	r3, #1
   32a78:	b	32aac <__assert_fail@plt+0x203c0>
   32a7c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32a80:	ldr	r3, [r3, #24]
   32a84:	mov	r1, r3
   32a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32a8c:	sub	r3, r3, #112	; 0x70
   32a90:	ldrd	r2, [r3]
   32a94:	mov	r3, r2
   32a98:	add	r3, r1, r3
   32a9c:	mov	r2, r3
   32aa0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32aa4:	str	r2, [r3, #24]
   32aa8:	mov	r3, #0
   32aac:	cmp	r3, #0
   32ab0:	beq	340c0 <__assert_fail@plt+0x219d4>
   32ab4:	b	34464 <__assert_fail@plt+0x21d78>
   32ab8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32abc:	ldrd	r2, [r3]
   32ac0:	mov	r3, r2
   32ac4:	add	r3, r3, #3600	; 0xe10
   32ac8:	mov	r2, r3
   32acc:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32ad0:	str	r2, [r3, #24]
   32ad4:	b	34104 <__assert_fail@plt+0x21a18>
   32ad8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32adc:	sub	r3, r3, #56	; 0x38
   32ae0:	ldrd	r2, [r3]
   32ae4:	mov	r3, r2
   32ae8:	add	r3, r3, #3600	; 0xe10
   32aec:	mov	r2, r3
   32af0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32af4:	str	r2, [r3, #24]
   32af8:	b	34104 <__assert_fail@plt+0x21a18>
   32afc:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32b00:	mov	r2, #0
   32b04:	mov	r3, #0
   32b08:	strd	r2, [r1, #8]
   32b0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32b10:	ldrd	r2, [r3]
   32b14:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32b18:	str	r2, [r3, #16]
   32b1c:	b	34104 <__assert_fail@plt+0x21a18>
   32b20:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32b24:	mov	r2, #0
   32b28:	mov	r3, #0
   32b2c:	strd	r2, [r1, #8]
   32b30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32b34:	sub	r3, r3, #56	; 0x38
   32b38:	ldrd	r2, [r3]
   32b3c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32b40:	str	r2, [r3, #16]
   32b44:	b	34104 <__assert_fail@plt+0x21a18>
   32b48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32b4c:	sub	r3, r3, #56	; 0x38
   32b50:	ldrd	r2, [r3]
   32b54:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32b58:	strd	r2, [r1, #8]
   32b5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32b60:	ldrd	r2, [r3]
   32b64:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32b68:	str	r2, [r3, #16]
   32b6c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32b70:	mov	r2, #1
   32b74:	strb	r2, [r3, #187]	; 0xbb
   32b78:	b	34104 <__assert_fail@plt+0x21a18>
   32b7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32b80:	sub	r3, r3, #56	; 0x38
   32b84:	ldrd	r2, [r3, #8]
   32b88:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32b8c:	strd	r2, [r1, #8]
   32b90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32b94:	ldrd	r2, [r3]
   32b98:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32b9c:	str	r2, [r3, #16]
   32ba0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32ba4:	mov	r2, #1
   32ba8:	strb	r2, [r3, #187]	; 0xbb
   32bac:	b	34104 <__assert_fail@plt+0x21a18>
   32bb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32bb4:	sub	r3, r3, #112	; 0x70
   32bb8:	ldrd	r2, [r3, #8]
   32bbc:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32bc0:	strd	r2, [r1, #56]	; 0x38
   32bc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32bc8:	ldrd	r2, [r3, #8]
   32bcc:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32bd0:	strd	r2, [r1, #64]	; 0x40
   32bd4:	b	34104 <__assert_fail@plt+0x21a18>
   32bd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32bdc:	sub	r3, r3, #224	; 0xe0
   32be0:	ldr	r3, [r3, #16]
   32be4:	cmp	r3, #3
   32be8:	ble	32c94 <__assert_fail@plt+0x205a8>
   32bec:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32bf0:	bl	30028 <__assert_fail@plt+0x1d93c>
   32bf4:	mov	r3, r0
   32bf8:	cmp	r3, #0
   32bfc:	beq	32c48 <__assert_fail@plt+0x2055c>
   32c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32c04:	sub	r3, r3, #224	; 0xe0
   32c08:	ldr	r3, [r3, #16]
   32c0c:	mov	r2, r3
   32c10:	asr	r3, r2, #31
   32c14:	strd	r2, [fp, #-92]	; 0xffffffa4
   32c18:	ldr	r0, [pc, #320]	; 32d60 <__assert_fail@plt+0x20674>
   32c1c:	bl	12398 <gettext@plt>
   32c20:	mov	ip, r0
   32c24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32c28:	sub	r3, r3, #224	; 0xe0
   32c2c:	ldrd	r0, [r3, #8]
   32c30:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   32c34:	strd	r2, [sp]
   32c38:	mov	r2, r0
   32c3c:	mov	r3, r1
   32c40:	mov	r0, ip
   32c44:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   32c48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32c4c:	sub	r2, r3, #224	; 0xe0
   32c50:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32c54:	add	ip, r3, #32
   32c58:	mov	lr, r2
   32c5c:	ldm	lr!, {r0, r1, r2, r3}
   32c60:	stmia	ip!, {r0, r1, r2, r3}
   32c64:	ldm	lr, {r0, r1}
   32c68:	stm	ip, {r0, r1}
   32c6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32c70:	sub	r3, r3, #112	; 0x70
   32c74:	ldrd	r2, [r3, #8]
   32c78:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32c7c:	strd	r2, [r1, #56]	; 0x38
   32c80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32c84:	ldrd	r2, [r3, #8]
   32c88:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32c8c:	strd	r2, [r1, #64]	; 0x40
   32c90:	b	34104 <__assert_fail@plt+0x21a18>
   32c94:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32c98:	bl	30028 <__assert_fail@plt+0x1d93c>
   32c9c:	mov	r3, r0
   32ca0:	cmp	r3, #0
   32ca4:	beq	32cc8 <__assert_fail@plt+0x205dc>
   32ca8:	ldr	r0, [pc, #180]	; 32d64 <__assert_fail@plt+0x20678>
   32cac:	bl	12398 <gettext@plt>
   32cb0:	mov	r1, r0
   32cb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32cb8:	sub	r3, r3, #224	; 0xe0
   32cbc:	ldrd	r2, [r3, #8]
   32cc0:	mov	r0, r1
   32cc4:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   32cc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32ccc:	sub	r3, r3, #224	; 0xe0
   32cd0:	ldrd	r2, [r3, #8]
   32cd4:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32cd8:	strd	r2, [r1, #56]	; 0x38
   32cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32ce0:	sub	r3, r3, #112	; 0x70
   32ce4:	ldrd	r2, [r3, #8]
   32ce8:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32cec:	strd	r2, [r1, #64]	; 0x40
   32cf0:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32cf4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   32cf8:	add	ip, r3, #32
   32cfc:	mov	lr, r2
   32d00:	ldm	lr!, {r0, r1, r2, r3}
   32d04:	stmia	ip!, {r0, r1, r2, r3}
   32d08:	ldm	lr, {r0, r1}
   32d0c:	stm	ip, {r0, r1}
   32d10:	b	34104 <__assert_fail@plt+0x21a18>
   32d14:	ldrcs	r4, [r2], #2341	; 0x925
   32d18:	andeq	r8, r6, ip, lsl #25
   32d1c:	andeq	r0, r0, r5, lsl r1
   32d20:	andeq	r8, r6, r4, ror fp
   32d24:	andeq	r8, r6, r0, lsr #28
   32d28:	andeq	r8, r6, ip, lsr #27
   32d2c:	andeq	r8, r6, r0, lsl #26
   32d30:	andeq	r8, r6, r4, ror #30
   32d34:	andeq	r8, r6, ip, asr #31
   32d38:	andeq	r8, r6, r0, ror #31
   32d3c:	andeq	r8, r6, ip, ror #31
   32d40:	strdeq	r8, [r6], -r4
   32d44:	andeq	r9, r6, r0
   32d48:	andeq	r9, r6, r8
   32d4c:	andeq	r9, r6, r0, lsl r0
   32d50:	andeq	r9, r6, r4, lsl r0
   32d54:	andeq	r9, r6, r0, lsr #32
   32d58:	andeq	r9, r6, r8, lsr #32
   32d5c:			; <UNDEFINED> instruction: 0xffff9d90
   32d60:	andeq	r9, r6, r0, lsr r0
   32d64:	andeq	r9, r6, ip, rrx
   32d68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32d6c:	sub	r3, r3, #112	; 0x70
   32d70:	ldrd	r2, [r3, #8]
   32d74:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32d78:	strd	r2, [r1, #64]	; 0x40
   32d7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32d80:	sub	r3, r3, #56	; 0x38
   32d84:	ldrd	r2, [r3]
   32d88:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32d8c:	strd	r2, [r1, #56]	; 0x38
   32d90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32d94:	ldrd	r2, [r3, #8]
   32d98:	cmp	r2, #0
   32d9c:	sbcs	r3, r3, #0
   32da0:	bge	32de0 <__assert_fail@plt+0x206f4>
   32da4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32da8:	ldrd	r2, [r3, #8]
   32dac:	subs	r2, r2, #1
   32db0:	sbc	r3, r3, #-2147483648	; 0x80000000
   32db4:	cmp	r2, #0
   32db8:	sbcs	r3, r3, #0
   32dbc:	bge	32de0 <__assert_fail@plt+0x206f4>
   32dc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32dc4:	ldrd	r2, [r3, #8]
   32dc8:	rsbs	r2, r2, #0
   32dcc:	rsc	r3, r3, #0
   32dd0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32dd4:	strd	r2, [r1, #40]	; 0x28
   32dd8:	mov	r3, #1
   32ddc:	b	32dfc <__assert_fail@plt+0x20710>
   32de0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32de4:	ldrd	r2, [r3, #8]
   32de8:	rsbs	r2, r2, #0
   32dec:	rsc	r3, r3, #0
   32df0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32df4:	strd	r2, [r1, #40]	; 0x28
   32df8:	mov	r3, #0
   32dfc:	cmp	r3, #0
   32e00:	bne	34430 <__assert_fail@plt+0x21d44>
   32e04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32e08:	ldr	r2, [r3, #16]
   32e0c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32e10:	str	r2, [r3, #48]	; 0x30
   32e14:	b	34104 <__assert_fail@plt+0x21a18>
   32e18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32e1c:	sub	r3, r3, #112	; 0x70
   32e20:	ldrd	r2, [r3]
   32e24:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32e28:	strd	r2, [r1, #56]	; 0x38
   32e2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32e30:	sub	r3, r3, #56	; 0x38
   32e34:	ldrd	r2, [r3, #8]
   32e38:	cmp	r2, #0
   32e3c:	sbcs	r3, r3, #0
   32e40:	bge	32e88 <__assert_fail@plt+0x2079c>
   32e44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32e48:	sub	r3, r3, #56	; 0x38
   32e4c:	ldrd	r2, [r3, #8]
   32e50:	subs	r2, r2, #1
   32e54:	sbc	r3, r3, #-2147483648	; 0x80000000
   32e58:	cmp	r2, #0
   32e5c:	sbcs	r3, r3, #0
   32e60:	bge	32e88 <__assert_fail@plt+0x2079c>
   32e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32e68:	sub	r3, r3, #56	; 0x38
   32e6c:	ldrd	r2, [r3, #8]
   32e70:	rsbs	r2, r2, #0
   32e74:	rsc	r3, r3, #0
   32e78:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32e7c:	strd	r2, [r1, #64]	; 0x40
   32e80:	mov	r3, #1
   32e84:	b	32ea8 <__assert_fail@plt+0x207bc>
   32e88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32e8c:	sub	r3, r3, #56	; 0x38
   32e90:	ldrd	r2, [r3, #8]
   32e94:	rsbs	r2, r2, #0
   32e98:	rsc	r3, r3, #0
   32e9c:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32ea0:	strd	r2, [r1, #64]	; 0x40
   32ea4:	mov	r3, #0
   32ea8:	cmp	r3, #0
   32eac:	bne	34438 <__assert_fail@plt+0x21d4c>
   32eb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32eb4:	ldrd	r2, [r3, #8]
   32eb8:	cmp	r2, #0
   32ebc:	sbcs	r3, r3, #0
   32ec0:	bge	32f00 <__assert_fail@plt+0x20814>
   32ec4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32ec8:	ldrd	r2, [r3, #8]
   32ecc:	subs	r2, r2, #1
   32ed0:	sbc	r3, r3, #-2147483648	; 0x80000000
   32ed4:	cmp	r2, #0
   32ed8:	sbcs	r3, r3, #0
   32edc:	bge	32f00 <__assert_fail@plt+0x20814>
   32ee0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32ee4:	ldrd	r2, [r3, #8]
   32ee8:	rsbs	r2, r2, #0
   32eec:	rsc	r3, r3, #0
   32ef0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32ef4:	strd	r2, [r1, #40]	; 0x28
   32ef8:	mov	r3, #1
   32efc:	b	32f1c <__assert_fail@plt+0x20830>
   32f00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f04:	ldrd	r2, [r3, #8]
   32f08:	rsbs	r2, r2, #0
   32f0c:	rsc	r3, r3, #0
   32f10:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32f14:	strd	r2, [r1, #40]	; 0x28
   32f18:	mov	r3, #0
   32f1c:	cmp	r3, #0
   32f20:	bne	34440 <__assert_fail@plt+0x21d54>
   32f24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f28:	ldr	r2, [r3, #16]
   32f2c:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32f30:	str	r2, [r3, #48]	; 0x30
   32f34:	b	34104 <__assert_fail@plt+0x21a18>
   32f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f3c:	sub	r3, r3, #56	; 0x38
   32f40:	ldrd	r2, [r3]
   32f44:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32f48:	strd	r2, [r1, #56]	; 0x38
   32f4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f50:	ldrd	r2, [r3, #8]
   32f54:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32f58:	strd	r2, [r1, #64]	; 0x40
   32f5c:	b	34104 <__assert_fail@plt+0x21a18>
   32f60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f64:	sub	r3, r3, #168	; 0xa8
   32f68:	ldrd	r2, [r3]
   32f6c:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32f70:	strd	r2, [r1, #56]	; 0x38
   32f74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f78:	sub	r3, r3, #112	; 0x70
   32f7c:	ldrd	r2, [r3, #8]
   32f80:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32f84:	strd	r2, [r1, #64]	; 0x40
   32f88:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   32f8c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   32f90:	add	ip, r3, #32
   32f94:	mov	lr, r2
   32f98:	ldm	lr!, {r0, r1, r2, r3}
   32f9c:	stmia	ip!, {r0, r1, r2, r3}
   32fa0:	ldm	lr, {r0, r1}
   32fa4:	stm	ip, {r0, r1}
   32fa8:	b	34104 <__assert_fail@plt+0x21a18>
   32fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32fb0:	sub	r3, r3, #56	; 0x38
   32fb4:	ldrd	r2, [r3, #8]
   32fb8:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32fbc:	strd	r2, [r1, #64]	; 0x40
   32fc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32fc4:	ldrd	r2, [r3]
   32fc8:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32fcc:	strd	r2, [r1, #56]	; 0x38
   32fd0:	b	34104 <__assert_fail@plt+0x21a18>
   32fd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32fd8:	sub	r3, r3, #112	; 0x70
   32fdc:	ldrd	r2, [r3, #8]
   32fe0:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32fe4:	strd	r2, [r1, #64]	; 0x40
   32fe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32fec:	sub	r3, r3, #56	; 0x38
   32ff0:	ldrd	r2, [r3]
   32ff4:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32ff8:	strd	r2, [r1, #56]	; 0x38
   32ffc:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   33000:	ldr	r2, [fp, #-44]	; 0xffffffd4
   33004:	add	ip, r3, #32
   33008:	mov	lr, r2
   3300c:	ldm	lr!, {r0, r1, r2, r3}
   33010:	stmia	ip!, {r0, r1, r2, r3}
   33014:	ldm	lr, {r0, r1}
   33018:	stm	ip, {r0, r1}
   3301c:	b	34104 <__assert_fail@plt+0x21a18>
   33020:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33024:	sub	r2, r3, #112	; 0x70
   33028:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3302c:	add	ip, r3, #32
   33030:	mov	lr, r2
   33034:	ldm	lr!, {r0, r1, r2, r3}
   33038:	stmia	ip!, {r0, r1, r2, r3}
   3303c:	ldm	lr, {r0, r1}
   33040:	stm	ip, {r0, r1}
   33044:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33048:	sub	r3, r3, #56	; 0x38
   3304c:	ldrd	r2, [r3, #8]
   33050:	cmp	r2, #0
   33054:	sbcs	r3, r3, #0
   33058:	bge	330a0 <__assert_fail@plt+0x209b4>
   3305c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33060:	sub	r3, r3, #56	; 0x38
   33064:	ldrd	r2, [r3, #8]
   33068:	subs	r2, r2, #1
   3306c:	sbc	r3, r3, #-2147483648	; 0x80000000
   33070:	cmp	r2, #0
   33074:	sbcs	r3, r3, #0
   33078:	bge	330a0 <__assert_fail@plt+0x209b4>
   3307c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33080:	sub	r3, r3, #56	; 0x38
   33084:	ldrd	r2, [r3, #8]
   33088:	rsbs	r2, r2, #0
   3308c:	rsc	r3, r3, #0
   33090:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   33094:	strd	r2, [r1, #56]	; 0x38
   33098:	mov	r3, #1
   3309c:	b	330c0 <__assert_fail@plt+0x209d4>
   330a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   330a4:	sub	r3, r3, #56	; 0x38
   330a8:	ldrd	r2, [r3, #8]
   330ac:	rsbs	r2, r2, #0
   330b0:	rsc	r3, r3, #0
   330b4:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   330b8:	strd	r2, [r1, #56]	; 0x38
   330bc:	mov	r3, #0
   330c0:	cmp	r3, #0
   330c4:	bne	34448 <__assert_fail@plt+0x21d5c>
   330c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   330cc:	ldrd	r2, [r3, #8]
   330d0:	cmp	r2, #0
   330d4:	sbcs	r3, r3, #0
   330d8:	bge	33118 <__assert_fail@plt+0x20a2c>
   330dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   330e0:	ldrd	r2, [r3, #8]
   330e4:	subs	r2, r2, #1
   330e8:	sbc	r3, r3, #-2147483648	; 0x80000000
   330ec:	cmp	r2, #0
   330f0:	sbcs	r3, r3, #0
   330f4:	bge	33118 <__assert_fail@plt+0x20a2c>
   330f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   330fc:	ldrd	r2, [r3, #8]
   33100:	rsbs	r2, r2, #0
   33104:	rsc	r3, r3, #0
   33108:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   3310c:	strd	r2, [r1, #64]	; 0x40
   33110:	mov	r3, #1
   33114:	b	33134 <__assert_fail@plt+0x20a48>
   33118:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3311c:	ldrd	r2, [r3, #8]
   33120:	rsbs	r2, r2, #0
   33124:	rsc	r3, r3, #0
   33128:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   3312c:	strd	r2, [r1, #64]	; 0x40
   33130:	mov	r3, #0
   33134:	cmp	r3, #0
   33138:	beq	340c8 <__assert_fail@plt+0x219dc>
   3313c:	b	34464 <__assert_fail@plt+0x21d78>
   33140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33144:	sub	r4, r3, #56	; 0x38
   33148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3314c:	ldrd	r2, [r3]
   33150:	mov	r3, r2
   33154:	str	r3, [sp, #48]	; 0x30
   33158:	mov	lr, sp
   3315c:	add	ip, r4, #8
   33160:	ldm	ip!, {r0, r1, r2, r3}
   33164:	stmia	lr!, {r0, r1, r2, r3}
   33168:	ldm	ip!, {r0, r1, r2, r3}
   3316c:	stmia	lr!, {r0, r1, r2, r3}
   33170:	ldm	ip, {r0, r1, r2, r3}
   33174:	stm	lr, {r0, r1, r2, r3}
   33178:	ldm	r4, {r2, r3}
   3317c:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   33180:	bl	3023c <__assert_fail@plt+0x1db50>
   33184:	mov	r3, r0
   33188:	eor	r3, r3, #1
   3318c:	uxtb	r3, r3
   33190:	cmp	r3, #0
   33194:	beq	340d0 <__assert_fail@plt+0x219e4>
   33198:	b	34464 <__assert_fail@plt+0x21d78>
   3319c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   331a0:	mov	r3, #1
   331a4:	str	r3, [sp, #48]	; 0x30
   331a8:	mov	lr, sp
   331ac:	add	ip, r4, #8
   331b0:	ldm	ip!, {r0, r1, r2, r3}
   331b4:	stmia	lr!, {r0, r1, r2, r3}
   331b8:	ldm	ip!, {r0, r1, r2, r3}
   331bc:	stmia	lr!, {r0, r1, r2, r3}
   331c0:	ldm	ip, {r0, r1, r2, r3}
   331c4:	stm	lr, {r0, r1, r2, r3}
   331c8:	ldm	r4, {r2, r3}
   331cc:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   331d0:	bl	3023c <__assert_fail@plt+0x1db50>
   331d4:	mov	r3, r0
   331d8:	eor	r3, r3, #1
   331dc:	uxtb	r3, r3
   331e0:	cmp	r3, #0
   331e4:	beq	340d8 <__assert_fail@plt+0x219ec>
   331e8:	b	34464 <__assert_fail@plt+0x21d78>
   331ec:	ldr	r4, [fp, #-44]	; 0xffffffd4
   331f0:	mov	r3, #1
   331f4:	str	r3, [sp, #48]	; 0x30
   331f8:	mov	lr, sp
   331fc:	add	ip, r4, #8
   33200:	ldm	ip!, {r0, r1, r2, r3}
   33204:	stmia	lr!, {r0, r1, r2, r3}
   33208:	ldm	ip!, {r0, r1, r2, r3}
   3320c:	stmia	lr!, {r0, r1, r2, r3}
   33210:	ldm	ip, {r0, r1, r2, r3}
   33214:	stm	lr, {r0, r1, r2, r3}
   33218:	ldm	r4, {r2, r3}
   3321c:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   33220:	bl	3023c <__assert_fail@plt+0x1db50>
   33224:	mov	r3, r0
   33228:	eor	r3, r3, #1
   3322c:	uxtb	r3, r3
   33230:	cmp	r3, #0
   33234:	beq	340e0 <__assert_fail@plt+0x219f4>
   33238:	b	34464 <__assert_fail@plt+0x21d78>
   3323c:	sub	r3, fp, #1360	; 0x550
   33240:	sub	r3, r3, #12
   33244:	mov	r2, #56	; 0x38
   33248:	mov	r1, #0
   3324c:	mov	r0, r3
   33250:	bl	12434 <memset@plt>
   33254:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33258:	sub	r3, r3, #56	; 0x38
   3325c:	ldrd	r2, [r3]
   33260:	sub	r1, fp, #1360	; 0x550
   33264:	sub	r1, r1, #12
   33268:	strd	r2, [r1]
   3326c:	b	34104 <__assert_fail@plt+0x21a18>
   33270:	sub	r3, fp, #1360	; 0x550
   33274:	sub	r3, r3, #12
   33278:	mov	r2, #56	; 0x38
   3327c:	mov	r1, #0
   33280:	mov	r0, r3
   33284:	bl	12434 <memset@plt>
   33288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3328c:	sub	r3, r3, #56	; 0x38
   33290:	ldrd	r2, [r3, #8]
   33294:	sub	r1, fp, #1360	; 0x550
   33298:	sub	r1, r1, #12
   3329c:	strd	r2, [r1]
   332a0:	b	34104 <__assert_fail@plt+0x21a18>
   332a4:	sub	r3, fp, #1360	; 0x550
   332a8:	sub	r3, r3, #12
   332ac:	mov	r2, #56	; 0x38
   332b0:	mov	r1, #0
   332b4:	mov	r0, r3
   332b8:	bl	12434 <memset@plt>
   332bc:	sub	r3, fp, #1360	; 0x550
   332c0:	sub	r3, r3, #12
   332c4:	mov	r1, r3
   332c8:	mov	r2, #1
   332cc:	mov	r3, #0
   332d0:	strd	r2, [r1]
   332d4:	b	34104 <__assert_fail@plt+0x21a18>
   332d8:	sub	r3, fp, #1360	; 0x550
   332dc:	sub	r3, r3, #12
   332e0:	mov	r2, #56	; 0x38
   332e4:	mov	r1, #0
   332e8:	mov	r0, r3
   332ec:	bl	12434 <memset@plt>
   332f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   332f4:	sub	r3, r3, #56	; 0x38
   332f8:	ldrd	r2, [r3]
   332fc:	sub	r1, fp, #1360	; 0x550
   33300:	sub	r1, r1, #12
   33304:	strd	r2, [r1, #8]
   33308:	b	34104 <__assert_fail@plt+0x21a18>
   3330c:	sub	r3, fp, #1360	; 0x550
   33310:	sub	r3, r3, #12
   33314:	mov	r2, #56	; 0x38
   33318:	mov	r1, #0
   3331c:	mov	r0, r3
   33320:	bl	12434 <memset@plt>
   33324:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33328:	sub	r3, r3, #56	; 0x38
   3332c:	ldrd	r2, [r3, #8]
   33330:	sub	r1, fp, #1360	; 0x550
   33334:	sub	r1, r1, #12
   33338:	strd	r2, [r1, #8]
   3333c:	b	34104 <__assert_fail@plt+0x21a18>
   33340:	sub	r3, fp, #1360	; 0x550
   33344:	sub	r3, r3, #12
   33348:	mov	r2, #56	; 0x38
   3334c:	mov	r1, #0
   33350:	mov	r0, r3
   33354:	bl	12434 <memset@plt>
   33358:	sub	r3, fp, #1360	; 0x550
   3335c:	sub	r3, r3, #12
   33360:	mov	r1, r3
   33364:	mov	r2, #1
   33368:	mov	r3, #0
   3336c:	strd	r2, [r1, #8]
   33370:	b	34104 <__assert_fail@plt+0x21a18>
   33374:	sub	r3, fp, #1360	; 0x550
   33378:	sub	r3, r3, #12
   3337c:	mov	r2, #56	; 0x38
   33380:	mov	r1, #0
   33384:	mov	r0, r3
   33388:	bl	12434 <memset@plt>
   3338c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33390:	ldrd	r2, [r3]
   33394:	cmp	r2, #0
   33398:	sbcs	r3, r3, #0
   3339c:	bge	33488 <__assert_fail@plt+0x20d9c>
   333a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   333a4:	sub	r3, r3, #56	; 0x38
   333a8:	ldrd	r2, [r3]
   333ac:	cmp	r2, #0
   333b0:	sbcs	r3, r3, #0
   333b4:	bge	333f8 <__assert_fail@plt+0x20d0c>
   333b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   333bc:	sub	r3, r3, #56	; 0x38
   333c0:	ldrd	r4, [r3]
   333c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   333c8:	ldrd	r2, [r3]
   333cc:	mvn	r0, #0
   333d0:	mvn	r1, #-2147483648	; 0x80000000
   333d4:	bl	63d78 <__assert_fail@plt+0x5168c>
   333d8:	mov	r2, r0
   333dc:	mov	r3, r1
   333e0:	cmp	r4, r2
   333e4:	sbcs	r3, r5, r3
   333e8:	movlt	r3, #1
   333ec:	movge	r3, #0
   333f0:	uxtb	r3, r3
   333f4:	b	3358c <__assert_fail@plt+0x20ea0>
   333f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   333fc:	ldrd	r2, [r3]
   33400:	mvn	r0, #0
   33404:	mvn	r1, #0
   33408:	cmp	r3, r1
   3340c:	cmpeq	r2, r0
   33410:	bne	33440 <__assert_fail@plt+0x20d54>
   33414:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33418:	sub	r3, r3, #56	; 0x38
   3341c:	ldrd	r2, [r3]
   33420:	adds	r2, r2, #0
   33424:	adc	r3, r3, #-2147483648	; 0x80000000
   33428:	cmp	r2, #1
   3342c:	sbcs	r3, r3, #0
   33430:	movge	r3, #1
   33434:	movlt	r3, #0
   33438:	uxtb	r3, r3
   3343c:	b	3358c <__assert_fail@plt+0x20ea0>
   33440:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33444:	ldrd	r2, [r3]
   33448:	mov	r0, #0
   3344c:	mov	r1, #-2147483648	; 0x80000000
   33450:	bl	63d78 <__assert_fail@plt+0x5168c>
   33454:	mov	r2, r0
   33458:	mov	r3, r1
   3345c:	mov	r0, r2
   33460:	mov	r1, r3
   33464:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33468:	sub	r3, r3, #56	; 0x38
   3346c:	ldrd	r2, [r3]
   33470:	cmp	r0, r2
   33474:	sbcs	r3, r1, r3
   33478:	movlt	r3, #1
   3347c:	movge	r3, #0
   33480:	uxtb	r3, r3
   33484:	b	3358c <__assert_fail@plt+0x20ea0>
   33488:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3348c:	ldrd	r2, [r3]
   33490:	orrs	r3, r2, r3
   33494:	beq	33588 <__assert_fail@plt+0x20e9c>
   33498:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3349c:	sub	r3, r3, #56	; 0x38
   334a0:	ldrd	r2, [r3]
   334a4:	cmp	r2, #0
   334a8:	sbcs	r3, r3, #0
   334ac:	bge	33540 <__assert_fail@plt+0x20e54>
   334b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   334b4:	sub	r3, r3, #56	; 0x38
   334b8:	ldrd	r2, [r3]
   334bc:	mvn	r0, #0
   334c0:	mvn	r1, #0
   334c4:	cmp	r3, r1
   334c8:	cmpeq	r2, r0
   334cc:	bne	334f8 <__assert_fail@plt+0x20e0c>
   334d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   334d4:	ldrd	r2, [r3]
   334d8:	adds	r2, r2, #0
   334dc:	adc	r3, r3, #-2147483648	; 0x80000000
   334e0:	cmp	r2, #1
   334e4:	sbcs	r3, r3, #0
   334e8:	movge	r3, #1
   334ec:	movlt	r3, #0
   334f0:	uxtb	r3, r3
   334f4:	b	3358c <__assert_fail@plt+0x20ea0>
   334f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   334fc:	sub	r3, r3, #56	; 0x38
   33500:	ldrd	r2, [r3]
   33504:	mov	r0, #0
   33508:	mov	r1, #-2147483648	; 0x80000000
   3350c:	bl	63d78 <__assert_fail@plt+0x5168c>
   33510:	mov	r2, r0
   33514:	mov	r3, r1
   33518:	mov	r0, r2
   3351c:	mov	r1, r3
   33520:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33524:	ldrd	r2, [r3]
   33528:	cmp	r0, r2
   3352c:	sbcs	r3, r1, r3
   33530:	movlt	r3, #1
   33534:	movge	r3, #0
   33538:	uxtb	r3, r3
   3353c:	b	3358c <__assert_fail@plt+0x20ea0>
   33540:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33544:	ldrd	r2, [r3]
   33548:	mvn	r0, #0
   3354c:	mvn	r1, #-2147483648	; 0x80000000
   33550:	bl	63d78 <__assert_fail@plt+0x5168c>
   33554:	mov	r2, r0
   33558:	mov	r3, r1
   3355c:	mov	r0, r2
   33560:	mov	r1, r3
   33564:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33568:	sub	r3, r3, #56	; 0x38
   3356c:	ldrd	r2, [r3]
   33570:	cmp	r0, r2
   33574:	sbcs	r3, r1, r3
   33578:	movlt	r3, #1
   3357c:	movge	r3, #0
   33580:	uxtb	r3, r3
   33584:	b	3358c <__assert_fail@plt+0x20ea0>
   33588:	mov	r3, #0
   3358c:	cmp	r3, #0
   33590:	beq	335dc <__assert_fail@plt+0x20ef0>
   33594:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33598:	sub	r3, r3, #56	; 0x38
   3359c:	ldrd	r2, [r3]
   335a0:	mov	r0, r2
   335a4:	mov	r1, r3
   335a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   335ac:	ldrd	r2, [r3]
   335b0:	mul	lr, r2, r1
   335b4:	mul	ip, r0, r3
   335b8:	add	ip, lr, ip
   335bc:	umull	r2, r3, r0, r2
   335c0:	add	r1, ip, r3
   335c4:	mov	r3, r1
   335c8:	sub	r1, fp, #1360	; 0x550
   335cc:	sub	r1, r1, #12
   335d0:	strd	r2, [r1, #16]
   335d4:	mov	r3, #1
   335d8:	b	33620 <__assert_fail@plt+0x20f34>
   335dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   335e0:	sub	r3, r3, #56	; 0x38
   335e4:	ldrd	r2, [r3]
   335e8:	mov	r0, r2
   335ec:	mov	r1, r3
   335f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   335f4:	ldrd	r2, [r3]
   335f8:	mul	lr, r2, r1
   335fc:	mul	ip, r0, r3
   33600:	add	ip, lr, ip
   33604:	umull	r2, r3, r0, r2
   33608:	add	r1, ip, r3
   3360c:	mov	r3, r1
   33610:	sub	r1, fp, #1360	; 0x550
   33614:	sub	r1, r1, #12
   33618:	strd	r2, [r1, #16]
   3361c:	mov	r3, #0
   33620:	cmp	r3, #0
   33624:	beq	340e8 <__assert_fail@plt+0x219fc>
   33628:	b	34464 <__assert_fail@plt+0x21d78>
   3362c:	sub	r3, fp, #1360	; 0x550
   33630:	sub	r3, r3, #12
   33634:	mov	r2, #56	; 0x38
   33638:	mov	r1, #0
   3363c:	mov	r0, r3
   33640:	bl	12434 <memset@plt>
   33644:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33648:	ldrd	r2, [r3]
   3364c:	cmp	r2, #0
   33650:	sbcs	r3, r3, #0
   33654:	bge	33740 <__assert_fail@plt+0x21054>
   33658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3365c:	sub	r3, r3, #56	; 0x38
   33660:	ldrd	r2, [r3, #8]
   33664:	cmp	r2, #0
   33668:	sbcs	r3, r3, #0
   3366c:	bge	336b0 <__assert_fail@plt+0x20fc4>
   33670:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33674:	sub	r3, r3, #56	; 0x38
   33678:	ldrd	r4, [r3, #8]
   3367c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33680:	ldrd	r2, [r3]
   33684:	mvn	r0, #0
   33688:	mvn	r1, #-2147483648	; 0x80000000
   3368c:	bl	63d78 <__assert_fail@plt+0x5168c>
   33690:	mov	r2, r0
   33694:	mov	r3, r1
   33698:	cmp	r4, r2
   3369c:	sbcs	r3, r5, r3
   336a0:	movlt	r3, #1
   336a4:	movge	r3, #0
   336a8:	uxtb	r3, r3
   336ac:	b	33844 <__assert_fail@plt+0x21158>
   336b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   336b4:	ldrd	r2, [r3]
   336b8:	mvn	r0, #0
   336bc:	mvn	r1, #0
   336c0:	cmp	r3, r1
   336c4:	cmpeq	r2, r0
   336c8:	bne	336f8 <__assert_fail@plt+0x2100c>
   336cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   336d0:	sub	r3, r3, #56	; 0x38
   336d4:	ldrd	r2, [r3, #8]
   336d8:	adds	r2, r2, #0
   336dc:	adc	r3, r3, #-2147483648	; 0x80000000
   336e0:	cmp	r2, #1
   336e4:	sbcs	r3, r3, #0
   336e8:	movge	r3, #1
   336ec:	movlt	r3, #0
   336f0:	uxtb	r3, r3
   336f4:	b	33844 <__assert_fail@plt+0x21158>
   336f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   336fc:	ldrd	r2, [r3]
   33700:	mov	r0, #0
   33704:	mov	r1, #-2147483648	; 0x80000000
   33708:	bl	63d78 <__assert_fail@plt+0x5168c>
   3370c:	mov	r2, r0
   33710:	mov	r3, r1
   33714:	mov	r0, r2
   33718:	mov	r1, r3
   3371c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33720:	sub	r3, r3, #56	; 0x38
   33724:	ldrd	r2, [r3, #8]
   33728:	cmp	r0, r2
   3372c:	sbcs	r3, r1, r3
   33730:	movlt	r3, #1
   33734:	movge	r3, #0
   33738:	uxtb	r3, r3
   3373c:	b	33844 <__assert_fail@plt+0x21158>
   33740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33744:	ldrd	r2, [r3]
   33748:	orrs	r3, r2, r3
   3374c:	beq	33840 <__assert_fail@plt+0x21154>
   33750:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33754:	sub	r3, r3, #56	; 0x38
   33758:	ldrd	r2, [r3, #8]
   3375c:	cmp	r2, #0
   33760:	sbcs	r3, r3, #0
   33764:	bge	337f8 <__assert_fail@plt+0x2110c>
   33768:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3376c:	sub	r3, r3, #56	; 0x38
   33770:	ldrd	r2, [r3, #8]
   33774:	mvn	r0, #0
   33778:	mvn	r1, #0
   3377c:	cmp	r3, r1
   33780:	cmpeq	r2, r0
   33784:	bne	337b0 <__assert_fail@plt+0x210c4>
   33788:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3378c:	ldrd	r2, [r3]
   33790:	adds	r2, r2, #0
   33794:	adc	r3, r3, #-2147483648	; 0x80000000
   33798:	cmp	r2, #1
   3379c:	sbcs	r3, r3, #0
   337a0:	movge	r3, #1
   337a4:	movlt	r3, #0
   337a8:	uxtb	r3, r3
   337ac:	b	33844 <__assert_fail@plt+0x21158>
   337b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   337b4:	sub	r3, r3, #56	; 0x38
   337b8:	ldrd	r2, [r3, #8]
   337bc:	mov	r0, #0
   337c0:	mov	r1, #-2147483648	; 0x80000000
   337c4:	bl	63d78 <__assert_fail@plt+0x5168c>
   337c8:	mov	r2, r0
   337cc:	mov	r3, r1
   337d0:	mov	r0, r2
   337d4:	mov	r1, r3
   337d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   337dc:	ldrd	r2, [r3]
   337e0:	cmp	r0, r2
   337e4:	sbcs	r3, r1, r3
   337e8:	movlt	r3, #1
   337ec:	movge	r3, #0
   337f0:	uxtb	r3, r3
   337f4:	b	33844 <__assert_fail@plt+0x21158>
   337f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   337fc:	ldrd	r2, [r3]
   33800:	mvn	r0, #0
   33804:	mvn	r1, #-2147483648	; 0x80000000
   33808:	bl	63d78 <__assert_fail@plt+0x5168c>
   3380c:	mov	r2, r0
   33810:	mov	r3, r1
   33814:	mov	r0, r2
   33818:	mov	r1, r3
   3381c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33820:	sub	r3, r3, #56	; 0x38
   33824:	ldrd	r2, [r3, #8]
   33828:	cmp	r0, r2
   3382c:	sbcs	r3, r1, r3
   33830:	movlt	r3, #1
   33834:	movge	r3, #0
   33838:	uxtb	r3, r3
   3383c:	b	33844 <__assert_fail@plt+0x21158>
   33840:	mov	r3, #0
   33844:	cmp	r3, #0
   33848:	beq	33894 <__assert_fail@plt+0x211a8>
   3384c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33850:	sub	r3, r3, #56	; 0x38
   33854:	ldrd	r2, [r3, #8]
   33858:	mov	r0, r2
   3385c:	mov	r1, r3
   33860:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33864:	ldrd	r2, [r3]
   33868:	mul	lr, r2, r1
   3386c:	mul	ip, r0, r3
   33870:	add	ip, lr, ip
   33874:	umull	r2, r3, r0, r2
   33878:	add	r1, ip, r3
   3387c:	mov	r3, r1
   33880:	sub	r1, fp, #1360	; 0x550
   33884:	sub	r1, r1, #12
   33888:	strd	r2, [r1, #16]
   3388c:	mov	r3, #1
   33890:	b	338d8 <__assert_fail@plt+0x211ec>
   33894:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33898:	sub	r3, r3, #56	; 0x38
   3389c:	ldrd	r2, [r3, #8]
   338a0:	mov	r0, r2
   338a4:	mov	r1, r3
   338a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   338ac:	ldrd	r2, [r3]
   338b0:	mul	lr, r2, r1
   338b4:	mul	ip, r0, r3
   338b8:	add	ip, lr, ip
   338bc:	umull	r2, r3, r0, r2
   338c0:	add	r1, ip, r3
   338c4:	mov	r3, r1
   338c8:	sub	r1, fp, #1360	; 0x550
   338cc:	sub	r1, r1, #12
   338d0:	strd	r2, [r1, #16]
   338d4:	mov	r3, #0
   338d8:	cmp	r3, #0
   338dc:	beq	340f0 <__assert_fail@plt+0x21a04>
   338e0:	b	34464 <__assert_fail@plt+0x21d78>
   338e4:	sub	r3, fp, #1360	; 0x550
   338e8:	sub	r3, r3, #12
   338ec:	mov	r2, #56	; 0x38
   338f0:	mov	r1, #0
   338f4:	mov	r0, r3
   338f8:	bl	12434 <memset@plt>
   338fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33900:	ldrd	r2, [r3]
   33904:	sub	r1, fp, #1360	; 0x550
   33908:	sub	r1, r1, #12
   3390c:	strd	r2, [r1, #16]
   33910:	b	34104 <__assert_fail@plt+0x21a18>
   33914:	sub	r3, fp, #1360	; 0x550
   33918:	sub	r3, r3, #12
   3391c:	mov	r2, #56	; 0x38
   33920:	mov	r1, #0
   33924:	mov	r0, r3
   33928:	bl	12434 <memset@plt>
   3392c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33930:	sub	r3, r3, #56	; 0x38
   33934:	ldrd	r2, [r3]
   33938:	sub	r1, fp, #1360	; 0x550
   3393c:	sub	r1, r1, #12
   33940:	strd	r2, [r1, #24]
   33944:	b	34104 <__assert_fail@plt+0x21a18>
   33948:	sub	r3, fp, #1360	; 0x550
   3394c:	sub	r3, r3, #12
   33950:	mov	r2, #56	; 0x38
   33954:	mov	r1, #0
   33958:	mov	r0, r3
   3395c:	bl	12434 <memset@plt>
   33960:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33964:	sub	r3, r3, #56	; 0x38
   33968:	ldrd	r2, [r3, #8]
   3396c:	sub	r1, fp, #1360	; 0x550
   33970:	sub	r1, r1, #12
   33974:	strd	r2, [r1, #24]
   33978:	b	34104 <__assert_fail@plt+0x21a18>
   3397c:	sub	r3, fp, #1360	; 0x550
   33980:	sub	r3, r3, #12
   33984:	mov	r2, #56	; 0x38
   33988:	mov	r1, #0
   3398c:	mov	r0, r3
   33990:	bl	12434 <memset@plt>
   33994:	sub	r3, fp, #1360	; 0x550
   33998:	sub	r3, r3, #12
   3399c:	mov	r1, r3
   339a0:	mov	r2, #1
   339a4:	mov	r3, #0
   339a8:	strd	r2, [r1, #24]
   339ac:	b	34104 <__assert_fail@plt+0x21a18>
   339b0:	sub	r3, fp, #1360	; 0x550
   339b4:	sub	r3, r3, #12
   339b8:	mov	r2, #56	; 0x38
   339bc:	mov	r1, #0
   339c0:	mov	r0, r3
   339c4:	bl	12434 <memset@plt>
   339c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   339cc:	sub	r3, r3, #56	; 0x38
   339d0:	ldrd	r2, [r3]
   339d4:	sub	r1, fp, #1360	; 0x550
   339d8:	sub	r1, r1, #12
   339dc:	strd	r2, [r1, #32]
   339e0:	b	34104 <__assert_fail@plt+0x21a18>
   339e4:	sub	r3, fp, #1360	; 0x550
   339e8:	sub	r3, r3, #12
   339ec:	mov	r2, #56	; 0x38
   339f0:	mov	r1, #0
   339f4:	mov	r0, r3
   339f8:	bl	12434 <memset@plt>
   339fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33a00:	sub	r3, r3, #56	; 0x38
   33a04:	ldrd	r2, [r3, #8]
   33a08:	sub	r1, fp, #1360	; 0x550
   33a0c:	sub	r1, r1, #12
   33a10:	strd	r2, [r1, #32]
   33a14:	b	34104 <__assert_fail@plt+0x21a18>
   33a18:	sub	r3, fp, #1360	; 0x550
   33a1c:	sub	r3, r3, #12
   33a20:	mov	r2, #56	; 0x38
   33a24:	mov	r1, #0
   33a28:	mov	r0, r3
   33a2c:	bl	12434 <memset@plt>
   33a30:	sub	r3, fp, #1360	; 0x550
   33a34:	sub	r3, r3, #12
   33a38:	mov	r1, r3
   33a3c:	mov	r2, #1
   33a40:	mov	r3, #0
   33a44:	strd	r2, [r1, #32]
   33a48:	b	34104 <__assert_fail@plt+0x21a18>
   33a4c:	sub	r3, fp, #1360	; 0x550
   33a50:	sub	r3, r3, #12
   33a54:	mov	r2, #56	; 0x38
   33a58:	mov	r1, #0
   33a5c:	mov	r0, r3
   33a60:	bl	12434 <memset@plt>
   33a64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33a68:	sub	r3, r3, #56	; 0x38
   33a6c:	ldrd	r2, [r3]
   33a70:	sub	r1, fp, #1360	; 0x550
   33a74:	sub	r1, r1, #12
   33a78:	strd	r2, [r1, #40]	; 0x28
   33a7c:	b	34104 <__assert_fail@plt+0x21a18>
   33a80:	sub	r3, fp, #1360	; 0x550
   33a84:	sub	r3, r3, #12
   33a88:	mov	r2, #56	; 0x38
   33a8c:	mov	r1, #0
   33a90:	mov	r0, r3
   33a94:	bl	12434 <memset@plt>
   33a98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33a9c:	sub	r3, r3, #56	; 0x38
   33aa0:	ldrd	r2, [r3, #8]
   33aa4:	sub	r1, fp, #1360	; 0x550
   33aa8:	sub	r1, r1, #12
   33aac:	strd	r2, [r1, #40]	; 0x28
   33ab0:	b	34104 <__assert_fail@plt+0x21a18>
   33ab4:	sub	r3, fp, #1360	; 0x550
   33ab8:	sub	r3, r3, #12
   33abc:	mov	r2, #56	; 0x38
   33ac0:	mov	r1, #0
   33ac4:	mov	r0, r3
   33ac8:	bl	12434 <memset@plt>
   33acc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33ad0:	sub	r3, r3, #56	; 0x38
   33ad4:	ldr	r3, [r3]
   33ad8:	mov	r2, r3
   33adc:	asr	r3, r2, #31
   33ae0:	sub	r1, fp, #1360	; 0x550
   33ae4:	sub	r1, r1, #12
   33ae8:	strd	r2, [r1, #40]	; 0x28
   33aec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33af0:	sub	r3, r3, #56	; 0x38
   33af4:	ldr	r3, [r3, #4]
   33af8:	str	r3, [fp, #-1324]	; 0xfffffad4
   33afc:	b	34104 <__assert_fail@plt+0x21a18>
   33b00:	sub	r3, fp, #1360	; 0x550
   33b04:	sub	r3, r3, #12
   33b08:	mov	r2, #56	; 0x38
   33b0c:	mov	r1, #0
   33b10:	mov	r0, r3
   33b14:	bl	12434 <memset@plt>
   33b18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33b1c:	sub	r3, r3, #56	; 0x38
   33b20:	ldr	r3, [r3]
   33b24:	mov	r2, r3
   33b28:	asr	r3, r2, #31
   33b2c:	sub	r1, fp, #1360	; 0x550
   33b30:	sub	r1, r1, #12
   33b34:	strd	r2, [r1, #40]	; 0x28
   33b38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33b3c:	sub	r3, r3, #56	; 0x38
   33b40:	ldr	r3, [r3, #4]
   33b44:	str	r3, [fp, #-1324]	; 0xfffffad4
   33b48:	b	34104 <__assert_fail@plt+0x21a18>
   33b4c:	sub	r3, fp, #1360	; 0x550
   33b50:	sub	r3, r3, #12
   33b54:	mov	r2, #56	; 0x38
   33b58:	mov	r1, #0
   33b5c:	mov	r0, r3
   33b60:	bl	12434 <memset@plt>
   33b64:	sub	r3, fp, #1360	; 0x550
   33b68:	sub	r3, r3, #12
   33b6c:	mov	r1, r3
   33b70:	mov	r2, #1
   33b74:	mov	r3, #0
   33b78:	strd	r2, [r1, #40]	; 0x28
   33b7c:	b	34104 <__assert_fail@plt+0x21a18>
   33b80:	sub	r3, fp, #1360	; 0x550
   33b84:	sub	r3, r3, #12
   33b88:	mov	r2, #56	; 0x38
   33b8c:	mov	r1, #0
   33b90:	mov	r0, r3
   33b94:	bl	12434 <memset@plt>
   33b98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33b9c:	sub	r3, r3, #56	; 0x38
   33ba0:	ldrd	r2, [r3, #8]
   33ba4:	sub	r1, fp, #1360	; 0x550
   33ba8:	sub	r1, r1, #12
   33bac:	strd	r2, [r1]
   33bb0:	b	34104 <__assert_fail@plt+0x21a18>
   33bb4:	sub	r3, fp, #1360	; 0x550
   33bb8:	sub	r3, r3, #12
   33bbc:	mov	r2, #56	; 0x38
   33bc0:	mov	r1, #0
   33bc4:	mov	r0, r3
   33bc8:	bl	12434 <memset@plt>
   33bcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33bd0:	sub	r3, r3, #56	; 0x38
   33bd4:	ldrd	r2, [r3, #8]
   33bd8:	sub	r1, fp, #1360	; 0x550
   33bdc:	sub	r1, r1, #12
   33be0:	strd	r2, [r1, #8]
   33be4:	b	34104 <__assert_fail@plt+0x21a18>
   33be8:	sub	r3, fp, #1360	; 0x550
   33bec:	sub	r3, r3, #12
   33bf0:	mov	r2, #56	; 0x38
   33bf4:	mov	r1, #0
   33bf8:	mov	r0, r3
   33bfc:	bl	12434 <memset@plt>
   33c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33c04:	ldrd	r2, [r3]
   33c08:	cmp	r2, #0
   33c0c:	sbcs	r3, r3, #0
   33c10:	bge	33cfc <__assert_fail@plt+0x21610>
   33c14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33c18:	sub	r3, r3, #56	; 0x38
   33c1c:	ldrd	r2, [r3, #8]
   33c20:	cmp	r2, #0
   33c24:	sbcs	r3, r3, #0
   33c28:	bge	33c6c <__assert_fail@plt+0x21580>
   33c2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33c30:	sub	r3, r3, #56	; 0x38
   33c34:	ldrd	r4, [r3, #8]
   33c38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33c3c:	ldrd	r2, [r3]
   33c40:	mvn	r0, #0
   33c44:	mvn	r1, #-2147483648	; 0x80000000
   33c48:	bl	63d78 <__assert_fail@plt+0x5168c>
   33c4c:	mov	r2, r0
   33c50:	mov	r3, r1
   33c54:	cmp	r4, r2
   33c58:	sbcs	r3, r5, r3
   33c5c:	movlt	r3, #1
   33c60:	movge	r3, #0
   33c64:	uxtb	r3, r3
   33c68:	b	33e00 <__assert_fail@plt+0x21714>
   33c6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33c70:	ldrd	r2, [r3]
   33c74:	mvn	r0, #0
   33c78:	mvn	r1, #0
   33c7c:	cmp	r3, r1
   33c80:	cmpeq	r2, r0
   33c84:	bne	33cb4 <__assert_fail@plt+0x215c8>
   33c88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33c8c:	sub	r3, r3, #56	; 0x38
   33c90:	ldrd	r2, [r3, #8]
   33c94:	adds	r2, r2, #0
   33c98:	adc	r3, r3, #-2147483648	; 0x80000000
   33c9c:	cmp	r2, #1
   33ca0:	sbcs	r3, r3, #0
   33ca4:	movge	r3, #1
   33ca8:	movlt	r3, #0
   33cac:	uxtb	r3, r3
   33cb0:	b	33e00 <__assert_fail@plt+0x21714>
   33cb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33cb8:	ldrd	r2, [r3]
   33cbc:	mov	r0, #0
   33cc0:	mov	r1, #-2147483648	; 0x80000000
   33cc4:	bl	63d78 <__assert_fail@plt+0x5168c>
   33cc8:	mov	r2, r0
   33ccc:	mov	r3, r1
   33cd0:	mov	r0, r2
   33cd4:	mov	r1, r3
   33cd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33cdc:	sub	r3, r3, #56	; 0x38
   33ce0:	ldrd	r2, [r3, #8]
   33ce4:	cmp	r0, r2
   33ce8:	sbcs	r3, r1, r3
   33cec:	movlt	r3, #1
   33cf0:	movge	r3, #0
   33cf4:	uxtb	r3, r3
   33cf8:	b	33e00 <__assert_fail@plt+0x21714>
   33cfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33d00:	ldrd	r2, [r3]
   33d04:	orrs	r3, r2, r3
   33d08:	beq	33dfc <__assert_fail@plt+0x21710>
   33d0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33d10:	sub	r3, r3, #56	; 0x38
   33d14:	ldrd	r2, [r3, #8]
   33d18:	cmp	r2, #0
   33d1c:	sbcs	r3, r3, #0
   33d20:	bge	33db4 <__assert_fail@plt+0x216c8>
   33d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33d28:	sub	r3, r3, #56	; 0x38
   33d2c:	ldrd	r2, [r3, #8]
   33d30:	mvn	r0, #0
   33d34:	mvn	r1, #0
   33d38:	cmp	r3, r1
   33d3c:	cmpeq	r2, r0
   33d40:	bne	33d6c <__assert_fail@plt+0x21680>
   33d44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33d48:	ldrd	r2, [r3]
   33d4c:	adds	r2, r2, #0
   33d50:	adc	r3, r3, #-2147483648	; 0x80000000
   33d54:	cmp	r2, #1
   33d58:	sbcs	r3, r3, #0
   33d5c:	movge	r3, #1
   33d60:	movlt	r3, #0
   33d64:	uxtb	r3, r3
   33d68:	b	33e00 <__assert_fail@plt+0x21714>
   33d6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33d70:	sub	r3, r3, #56	; 0x38
   33d74:	ldrd	r2, [r3, #8]
   33d78:	mov	r0, #0
   33d7c:	mov	r1, #-2147483648	; 0x80000000
   33d80:	bl	63d78 <__assert_fail@plt+0x5168c>
   33d84:	mov	r2, r0
   33d88:	mov	r3, r1
   33d8c:	mov	r0, r2
   33d90:	mov	r1, r3
   33d94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33d98:	ldrd	r2, [r3]
   33d9c:	cmp	r0, r2
   33da0:	sbcs	r3, r1, r3
   33da4:	movlt	r3, #1
   33da8:	movge	r3, #0
   33dac:	uxtb	r3, r3
   33db0:	b	33e00 <__assert_fail@plt+0x21714>
   33db4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33db8:	ldrd	r2, [r3]
   33dbc:	mvn	r0, #0
   33dc0:	mvn	r1, #-2147483648	; 0x80000000
   33dc4:	bl	63d78 <__assert_fail@plt+0x5168c>
   33dc8:	mov	r2, r0
   33dcc:	mov	r3, r1
   33dd0:	mov	r0, r2
   33dd4:	mov	r1, r3
   33dd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33ddc:	sub	r3, r3, #56	; 0x38
   33de0:	ldrd	r2, [r3, #8]
   33de4:	cmp	r0, r2
   33de8:	sbcs	r3, r1, r3
   33dec:	movlt	r3, #1
   33df0:	movge	r3, #0
   33df4:	uxtb	r3, r3
   33df8:	b	33e00 <__assert_fail@plt+0x21714>
   33dfc:	mov	r3, #0
   33e00:	cmp	r3, #0
   33e04:	beq	33e50 <__assert_fail@plt+0x21764>
   33e08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33e0c:	sub	r3, r3, #56	; 0x38
   33e10:	ldrd	r2, [r3, #8]
   33e14:	mov	r0, r2
   33e18:	mov	r1, r3
   33e1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33e20:	ldrd	r2, [r3]
   33e24:	mul	lr, r2, r1
   33e28:	mul	ip, r0, r3
   33e2c:	add	ip, lr, ip
   33e30:	umull	r2, r3, r0, r2
   33e34:	add	r1, ip, r3
   33e38:	mov	r3, r1
   33e3c:	sub	r1, fp, #1360	; 0x550
   33e40:	sub	r1, r1, #12
   33e44:	strd	r2, [r1, #16]
   33e48:	mov	r3, #1
   33e4c:	b	33e94 <__assert_fail@plt+0x217a8>
   33e50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33e54:	sub	r3, r3, #56	; 0x38
   33e58:	ldrd	r2, [r3, #8]
   33e5c:	mov	r0, r2
   33e60:	mov	r1, r3
   33e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33e68:	ldrd	r2, [r3]
   33e6c:	mul	lr, r2, r1
   33e70:	mul	ip, r0, r3
   33e74:	add	ip, lr, ip
   33e78:	umull	r2, r3, r0, r2
   33e7c:	add	r1, ip, r3
   33e80:	mov	r3, r1
   33e84:	sub	r1, fp, #1360	; 0x550
   33e88:	sub	r1, r1, #12
   33e8c:	strd	r2, [r1, #16]
   33e90:	mov	r3, #0
   33e94:	cmp	r3, #0
   33e98:	beq	340f8 <__assert_fail@plt+0x21a0c>
   33e9c:	b	34464 <__assert_fail@plt+0x21d78>
   33ea0:	sub	r3, fp, #1360	; 0x550
   33ea4:	sub	r3, r3, #12
   33ea8:	mov	r2, #56	; 0x38
   33eac:	mov	r1, #0
   33eb0:	mov	r0, r3
   33eb4:	bl	12434 <memset@plt>
   33eb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33ebc:	sub	r3, r3, #56	; 0x38
   33ec0:	ldrd	r2, [r3, #8]
   33ec4:	sub	r1, fp, #1360	; 0x550
   33ec8:	sub	r1, r1, #12
   33ecc:	strd	r2, [r1, #24]
   33ed0:	b	34104 <__assert_fail@plt+0x21a18>
   33ed4:	sub	r3, fp, #1360	; 0x550
   33ed8:	sub	r3, r3, #12
   33edc:	mov	r2, #56	; 0x38
   33ee0:	mov	r1, #0
   33ee4:	mov	r0, r3
   33ee8:	bl	12434 <memset@plt>
   33eec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33ef0:	sub	r3, r3, #56	; 0x38
   33ef4:	ldrd	r2, [r3, #8]
   33ef8:	sub	r1, fp, #1360	; 0x550
   33efc:	sub	r1, r1, #12
   33f00:	strd	r2, [r1, #32]
   33f04:	b	34104 <__assert_fail@plt+0x21a18>
   33f08:	sub	r3, fp, #1360	; 0x550
   33f0c:	sub	r3, r3, #12
   33f10:	mov	r2, #56	; 0x38
   33f14:	mov	r1, #0
   33f18:	mov	r0, r3
   33f1c:	bl	12434 <memset@plt>
   33f20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33f24:	sub	r3, r3, #56	; 0x38
   33f28:	ldrd	r2, [r3, #8]
   33f2c:	sub	r1, fp, #1360	; 0x550
   33f30:	sub	r1, r1, #12
   33f34:	strd	r2, [r1, #40]	; 0x28
   33f38:	b	34104 <__assert_fail@plt+0x21a18>
   33f3c:	sub	r3, fp, #1360	; 0x550
   33f40:	sub	r3, r3, #12
   33f44:	mov	r2, #56	; 0x38
   33f48:	mov	r1, #0
   33f4c:	mov	r0, r3
   33f50:	bl	12434 <memset@plt>
   33f54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33f58:	ldrd	r2, [r3]
   33f5c:	sub	r1, fp, #1360	; 0x550
   33f60:	sub	r1, r1, #12
   33f64:	strd	r2, [r1, #16]
   33f68:	b	34104 <__assert_fail@plt+0x21a18>
   33f6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33f70:	ldrd	r2, [r3, #8]
   33f74:	mov	r0, r2
   33f78:	mov	r1, r3
   33f7c:	bl	2ff38 <__assert_fail@plt+0x1d84c>
   33f80:	mov	r3, r0
   33f84:	cmp	r3, #0
   33f88:	bne	34450 <__assert_fail@plt+0x21d64>
   33f8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33f90:	ldrd	r2, [r3, #8]
   33f94:	mov	r3, r2
   33f98:	str	r3, [fp, #-1372]	; 0xfffffaa4
   33f9c:	mov	r3, #0
   33fa0:	str	r3, [fp, #-1368]	; 0xfffffaa8
   33fa4:	b	34104 <__assert_fail@plt+0x21a18>
   33fa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33fac:	ldrd	r2, [r3, #8]
   33fb0:	mov	r0, r2
   33fb4:	mov	r1, r3
   33fb8:	bl	2ff38 <__assert_fail@plt+0x1d84c>
   33fbc:	mov	r3, r0
   33fc0:	cmp	r3, #0
   33fc4:	bne	34458 <__assert_fail@plt+0x21d6c>
   33fc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33fcc:	ldrd	r2, [r3, #8]
   33fd0:	mov	r3, r2
   33fd4:	str	r3, [fp, #-1372]	; 0xfffffaa4
   33fd8:	mov	r3, #0
   33fdc:	str	r3, [fp, #-1368]	; 0xfffffaa8
   33fe0:	b	34104 <__assert_fail@plt+0x21a18>
   33fe4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   33fe8:	mov	lr, sp
   33fec:	add	r3, ip, #8
   33ff0:	ldm	r3, {r0, r1, r2, r3}
   33ff4:	stm	lr, {r0, r1, r2, r3}
   33ff8:	ldm	ip, {r2, r3}
   33ffc:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   34000:	bl	3004c <__assert_fail@plt+0x1d960>
   34004:	b	34104 <__assert_fail@plt+0x21a18>
   34008:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3400c:	sub	ip, r3, #56	; 0x38
   34010:	mov	lr, sp
   34014:	add	r3, ip, #8
   34018:	ldm	r3, {r0, r1, r2, r3}
   3401c:	stm	lr, {r0, r1, r2, r3}
   34020:	ldm	ip, {r2, r3}
   34024:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   34028:	bl	3004c <__assert_fail@plt+0x1d960>
   3402c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   34030:	mov	r3, #1
   34034:	str	r3, [sp, #48]	; 0x30
   34038:	mov	lr, sp
   3403c:	add	ip, r4, #8
   34040:	ldm	ip!, {r0, r1, r2, r3}
   34044:	stmia	lr!, {r0, r1, r2, r3}
   34048:	ldm	ip!, {r0, r1, r2, r3}
   3404c:	stmia	lr!, {r0, r1, r2, r3}
   34050:	ldm	ip, {r0, r1, r2, r3}
   34054:	stm	lr, {r0, r1, r2, r3}
   34058:	ldm	r4, {r2, r3}
   3405c:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   34060:	bl	3023c <__assert_fail@plt+0x1db50>
   34064:	mov	r3, r0
   34068:	eor	r3, r3, #1
   3406c:	uxtb	r3, r3
   34070:	cmp	r3, #0
   34074:	beq	34100 <__assert_fail@plt+0x21a14>
   34078:	b	34464 <__assert_fail@plt+0x21d78>
   3407c:	sub	r3, fp, #1360	; 0x550
   34080:	sub	r3, r3, #12
   34084:	mov	r1, r3
   34088:	mvn	r2, #0
   3408c:	mvn	r3, #0
   34090:	strd	r2, [r1]
   34094:	b	34104 <__assert_fail@plt+0x21a18>
   34098:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3409c:	ldrd	r2, [r3, #8]
   340a0:	sub	r1, fp, #1360	; 0x550
   340a4:	sub	r1, r1, #12
   340a8:	strd	r2, [r1]
   340ac:	b	34104 <__assert_fail@plt+0x21a18>
   340b0:	nop			; (mov r0, r0)
   340b4:	b	34104 <__assert_fail@plt+0x21a18>
   340b8:	nop			; (mov r0, r0)
   340bc:	b	34104 <__assert_fail@plt+0x21a18>
   340c0:	nop			; (mov r0, r0)
   340c4:	b	34104 <__assert_fail@plt+0x21a18>
   340c8:	nop			; (mov r0, r0)
   340cc:	b	34104 <__assert_fail@plt+0x21a18>
   340d0:	nop			; (mov r0, r0)
   340d4:	b	34104 <__assert_fail@plt+0x21a18>
   340d8:	nop			; (mov r0, r0)
   340dc:	b	34104 <__assert_fail@plt+0x21a18>
   340e0:	nop			; (mov r0, r0)
   340e4:	b	34104 <__assert_fail@plt+0x21a18>
   340e8:	nop			; (mov r0, r0)
   340ec:	b	34104 <__assert_fail@plt+0x21a18>
   340f0:	nop			; (mov r0, r0)
   340f4:	b	34104 <__assert_fail@plt+0x21a18>
   340f8:	nop			; (mov r0, r0)
   340fc:	b	34104 <__assert_fail@plt+0x21a18>
   34100:	nop			; (mov r0, r0)
   34104:	ldr	r2, [fp, #-64]	; 0xffffffc0
   34108:	mov	r3, r2
   3410c:	lsl	r3, r3, #3
   34110:	sub	r3, r3, r2
   34114:	lsl	r3, r3, #3
   34118:	rsb	r3, r3, #0
   3411c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34120:	add	r3, r2, r3
   34124:	str	r3, [fp, #-44]	; 0xffffffd4
   34128:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3412c:	lsl	r3, r3, #1
   34130:	rsb	r3, r3, #0
   34134:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34138:	add	r3, r2, r3
   3413c:	str	r3, [fp, #-36]	; 0xffffffdc
   34140:	mov	r3, #0
   34144:	str	r3, [fp, #-64]	; 0xffffffc0
   34148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3414c:	add	r3, r3, #56	; 0x38
   34150:	str	r3, [fp, #-44]	; 0xffffffd4
   34154:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34158:	mov	lr, r3
   3415c:	sub	ip, fp, #1360	; 0x550
   34160:	sub	ip, ip, #12
   34164:	ldm	ip!, {r0, r1, r2, r3}
   34168:	stmia	lr!, {r0, r1, r2, r3}
   3416c:	ldm	ip!, {r0, r1, r2, r3}
   34170:	stmia	lr!, {r0, r1, r2, r3}
   34174:	ldm	ip!, {r0, r1, r2, r3}
   34178:	stmia	lr!, {r0, r1, r2, r3}
   3417c:	ldm	ip, {r0, r1}
   34180:	stm	lr, {r0, r1}
   34184:	ldr	r2, [pc, #1032]	; 34594 <__assert_fail@plt+0x21ea8>
   34188:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3418c:	add	r3, r2, r3
   34190:	ldrb	r3, [r3]
   34194:	sub	r3, r3, #28
   34198:	str	r3, [fp, #-96]	; 0xffffffa0
   3419c:	ldr	r2, [pc, #1012]	; 34598 <__assert_fail@plt+0x21eac>
   341a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   341a4:	add	r3, r2, r3
   341a8:	ldrsb	r3, [r3]
   341ac:	mov	r2, r3
   341b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   341b4:	ldrsh	r3, [r3]
   341b8:	add	r3, r2, r3
   341bc:	str	r3, [fp, #-100]	; 0xffffff9c
   341c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   341c4:	cmp	r3, #0
   341c8:	blt	34210 <__assert_fail@plt+0x21b24>
   341cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   341d0:	cmp	r3, #112	; 0x70
   341d4:	bgt	34210 <__assert_fail@plt+0x21b24>
   341d8:	ldr	r2, [pc, #956]	; 3459c <__assert_fail@plt+0x21eb0>
   341dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   341e0:	add	r3, r2, r3
   341e4:	ldrsb	r3, [r3]
   341e8:	sxth	r2, r3
   341ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   341f0:	ldrsh	r3, [r3]
   341f4:	cmp	r2, r3
   341f8:	bne	34210 <__assert_fail@plt+0x21b24>
   341fc:	ldr	r2, [pc, #924]	; 345a0 <__assert_fail@plt+0x21eb4>
   34200:	ldr	r3, [fp, #-100]	; 0xffffff9c
   34204:	add	r3, r2, r3
   34208:	ldrb	r3, [r3]
   3420c:	b	34220 <__assert_fail@plt+0x21b34>
   34210:	ldr	r2, [pc, #908]	; 345a4 <__assert_fail@plt+0x21eb8>
   34214:	ldr	r3, [fp, #-96]	; 0xffffffa0
   34218:	add	r3, r2, r3
   3421c:	ldrsb	r3, [r3]
   34220:	str	r3, [fp, #-24]	; 0xffffffe8
   34224:	b	31d68 <__assert_fail@plt+0x1f67c>
   34228:	nop			; (mov r0, r0)
   3422c:	ldr	r3, [fp, #-16]
   34230:	cmn	r3, #2
   34234:	beq	34264 <__assert_fail@plt+0x21b78>
   34238:	ldr	r3, [fp, #-16]
   3423c:	ldr	r2, [pc, #868]	; 345a8 <__assert_fail@plt+0x21ebc>
   34240:	cmp	r3, r2
   34244:	bhi	3425c <__assert_fail@plt+0x21b70>
   34248:	ldr	r2, [pc, #860]	; 345ac <__assert_fail@plt+0x21ec0>
   3424c:	ldr	r3, [fp, #-16]
   34250:	add	r3, r2, r3
   34254:	ldrb	r3, [r3]
   34258:	b	34268 <__assert_fail@plt+0x21b7c>
   3425c:	mov	r3, #2
   34260:	b	34268 <__assert_fail@plt+0x21b7c>
   34264:	mvn	r3, #1
   34268:	str	r3, [fp, #-60]	; 0xffffffc4
   3426c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34270:	cmp	r3, #0
   34274:	bne	34290 <__assert_fail@plt+0x21ba4>
   34278:	ldr	r3, [fp, #-20]	; 0xffffffec
   3427c:	add	r3, r3, #1
   34280:	str	r3, [fp, #-20]	; 0xffffffec
   34284:	ldr	r1, [pc, #804]	; 345b0 <__assert_fail@plt+0x21ec4>
   34288:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   3428c:	bl	35c74 <__assert_fail@plt+0x23588>
   34290:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34294:	cmp	r3, #3
   34298:	bne	342d4 <__assert_fail@plt+0x21be8>
   3429c:	ldr	r3, [fp, #-16]
   342a0:	cmp	r3, #0
   342a4:	bgt	342b8 <__assert_fail@plt+0x21bcc>
   342a8:	ldr	r3, [fp, #-16]
   342ac:	cmp	r3, #0
   342b0:	bne	342d4 <__assert_fail@plt+0x21be8>
   342b4:	b	34464 <__assert_fail@plt+0x21d78>
   342b8:	sub	r2, fp, #156	; 0x9c
   342bc:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   342c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   342c4:	ldr	r0, [pc, #744]	; 345b4 <__assert_fail@plt+0x21ec8>
   342c8:	bl	31cb0 <__assert_fail@plt+0x1f5c4>
   342cc:	mvn	r3, #1
   342d0:	str	r3, [fp, #-16]
   342d4:	nop			; (mov r0, r0)
   342d8:	mov	r3, #3
   342dc:	str	r3, [fp, #-28]	; 0xffffffe4
   342e0:	ldr	r2, [pc, #720]	; 345b8 <__assert_fail@plt+0x21ecc>
   342e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   342e8:	add	r3, r2, r3
   342ec:	ldrsb	r3, [r3]
   342f0:	str	r3, [fp, #-52]	; 0xffffffcc
   342f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   342f8:	cmn	r3, #93	; 0x5d
   342fc:	beq	3435c <__assert_fail@plt+0x21c70>
   34300:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34304:	add	r3, r3, #1
   34308:	str	r3, [fp, #-52]	; 0xffffffcc
   3430c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34310:	cmp	r3, #0
   34314:	blt	3435c <__assert_fail@plt+0x21c70>
   34318:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3431c:	cmp	r3, #112	; 0x70
   34320:	bgt	3435c <__assert_fail@plt+0x21c70>
   34324:	ldr	r2, [pc, #624]	; 3459c <__assert_fail@plt+0x21eb0>
   34328:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3432c:	add	r3, r2, r3
   34330:	ldrsb	r3, [r3]
   34334:	cmp	r3, #1
   34338:	bne	3435c <__assert_fail@plt+0x21c70>
   3433c:	ldr	r2, [pc, #604]	; 345a0 <__assert_fail@plt+0x21eb4>
   34340:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34344:	add	r3, r2, r3
   34348:	ldrb	r3, [r3]
   3434c:	str	r3, [fp, #-52]	; 0xffffffcc
   34350:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34354:	cmp	r3, #0
   34358:	bgt	343b8 <__assert_fail@plt+0x21ccc>
   3435c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34364:	cmp	r2, r3
   34368:	beq	34460 <__assert_fail@plt+0x21d74>
   3436c:	ldr	r2, [pc, #584]	; 345bc <__assert_fail@plt+0x21ed0>
   34370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34374:	add	r3, r2, r3
   34378:	ldrb	r3, [r3]
   3437c:	mov	r1, r3
   34380:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   34384:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34388:	ldr	r0, [pc, #560]	; 345c0 <__assert_fail@plt+0x21ed4>
   3438c:	bl	31cb0 <__assert_fail@plt+0x1f5c4>
   34390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34394:	sub	r3, r3, #56	; 0x38
   34398:	str	r3, [fp, #-44]	; 0xffffffd4
   3439c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   343a0:	sub	r3, r3, #2
   343a4:	str	r3, [fp, #-36]	; 0xffffffdc
   343a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   343ac:	ldrsh	r3, [r3]
   343b0:	str	r3, [fp, #-24]	; 0xffffffe8
   343b4:	b	342e0 <__assert_fail@plt+0x21bf4>
   343b8:	nop			; (mov r0, r0)
   343bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   343c0:	add	r3, r3, #56	; 0x38
   343c4:	str	r3, [fp, #-44]	; 0xffffffd4
   343c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   343cc:	mov	lr, r3
   343d0:	sub	ip, fp, #156	; 0x9c
   343d4:	ldm	ip!, {r0, r1, r2, r3}
   343d8:	stmia	lr!, {r0, r1, r2, r3}
   343dc:	ldm	ip!, {r0, r1, r2, r3}
   343e0:	stmia	lr!, {r0, r1, r2, r3}
   343e4:	ldm	ip!, {r0, r1, r2, r3}
   343e8:	stmia	lr!, {r0, r1, r2, r3}
   343ec:	ldm	ip, {r0, r1}
   343f0:	stm	lr, {r0, r1}
   343f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   343f8:	str	r3, [fp, #-24]	; 0xffffffe8
   343fc:	b	31d68 <__assert_fail@plt+0x1f67c>
   34400:	nop			; (mov r0, r0)
   34404:	mov	r3, #0
   34408:	str	r3, [fp, #-56]	; 0xffffffc8
   3440c:	b	34490 <__assert_fail@plt+0x21da4>
   34410:	nop			; (mov r0, r0)
   34414:	b	34464 <__assert_fail@plt+0x21d78>
   34418:	nop			; (mov r0, r0)
   3441c:	b	34464 <__assert_fail@plt+0x21d78>
   34420:	nop			; (mov r0, r0)
   34424:	b	34464 <__assert_fail@plt+0x21d78>
   34428:	nop			; (mov r0, r0)
   3442c:	b	34464 <__assert_fail@plt+0x21d78>
   34430:	nop			; (mov r0, r0)
   34434:	b	34464 <__assert_fail@plt+0x21d78>
   34438:	nop			; (mov r0, r0)
   3443c:	b	34464 <__assert_fail@plt+0x21d78>
   34440:	nop			; (mov r0, r0)
   34444:	b	34464 <__assert_fail@plt+0x21d78>
   34448:	nop			; (mov r0, r0)
   3444c:	b	34464 <__assert_fail@plt+0x21d78>
   34450:	nop			; (mov r0, r0)
   34454:	b	34464 <__assert_fail@plt+0x21d78>
   34458:	nop			; (mov r0, r0)
   3445c:	b	34464 <__assert_fail@plt+0x21d78>
   34460:	nop			; (mov r0, r0)
   34464:	mov	r3, #1
   34468:	str	r3, [fp, #-56]	; 0xffffffc8
   3446c:	b	34490 <__assert_fail@plt+0x21da4>
   34470:	nop			; (mov r0, r0)
   34474:	b	3447c <__assert_fail@plt+0x21d90>
   34478:	nop			; (mov r0, r0)
   3447c:	ldr	r1, [pc, #320]	; 345c4 <__assert_fail@plt+0x21ed8>
   34480:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   34484:	bl	35c74 <__assert_fail@plt+0x23588>
   34488:	mov	r3, #2
   3448c:	str	r3, [fp, #-56]	; 0xffffffc8
   34490:	ldr	r3, [fp, #-16]
   34494:	cmn	r3, #2
   34498:	beq	344dc <__assert_fail@plt+0x21df0>
   3449c:	ldr	r3, [fp, #-16]
   344a0:	ldr	r2, [pc, #256]	; 345a8 <__assert_fail@plt+0x21ebc>
   344a4:	cmp	r3, r2
   344a8:	bhi	344c0 <__assert_fail@plt+0x21dd4>
   344ac:	ldr	r2, [pc, #248]	; 345ac <__assert_fail@plt+0x21ec0>
   344b0:	ldr	r3, [fp, #-16]
   344b4:	add	r3, r2, r3
   344b8:	ldrb	r3, [r3]
   344bc:	b	344c4 <__assert_fail@plt+0x21dd8>
   344c0:	mov	r3, #2
   344c4:	str	r3, [fp, #-60]	; 0xffffffc4
   344c8:	sub	r2, fp, #156	; 0x9c
   344cc:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   344d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   344d4:	ldr	r0, [pc, #236]	; 345c8 <__assert_fail@plt+0x21edc>
   344d8:	bl	31cb0 <__assert_fail@plt+0x1f5c4>
   344dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   344e0:	mov	r3, r2
   344e4:	lsl	r3, r3, #3
   344e8:	sub	r3, r3, r2
   344ec:	lsl	r3, r3, #3
   344f0:	rsb	r3, r3, #0
   344f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   344f8:	add	r3, r2, r3
   344fc:	str	r3, [fp, #-44]	; 0xffffffd4
   34500:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34504:	lsl	r3, r3, #1
   34508:	rsb	r3, r3, #0
   3450c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34510:	add	r3, r2, r3
   34514:	str	r3, [fp, #-36]	; 0xffffffdc
   34518:	b	3455c <__assert_fail@plt+0x21e70>
   3451c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34520:	ldrsh	r3, [r3]
   34524:	mov	r2, r3
   34528:	ldr	r3, [pc, #140]	; 345bc <__assert_fail@plt+0x21ed0>
   3452c:	ldrb	r3, [r3, r2]
   34530:	mov	r1, r3
   34534:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   34538:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3453c:	ldr	r0, [pc, #136]	; 345cc <__assert_fail@plt+0x21ee0>
   34540:	bl	31cb0 <__assert_fail@plt+0x1f5c4>
   34544:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34548:	sub	r3, r3, #56	; 0x38
   3454c:	str	r3, [fp, #-44]	; 0xffffffd4
   34550:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34554:	sub	r3, r3, #2
   34558:	str	r3, [fp, #-36]	; 0xffffffdc
   3455c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34560:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34564:	cmp	r2, r3
   34568:	bne	3451c <__assert_fail@plt+0x21e30>
   3456c:	sub	r3, fp, #196	; 0xc4
   34570:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34574:	cmp	r2, r3
   34578:	beq	34584 <__assert_fail@plt+0x21e98>
   3457c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34580:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   34584:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34588:	mov	r0, r3
   3458c:	sub	sp, fp, #12
   34590:	pop	{r4, r5, fp, pc}
   34594:	andeq	r8, r6, r8, lsl #30
   34598:	andeq	r8, r6, r4, ror sp
   3459c:	andeq	r8, r6, r0, lsr #28
   345a0:	andeq	r8, r6, ip, lsr #27
   345a4:	muleq	r6, r0, sp
   345a8:	andeq	r0, r0, r5, lsl r1
   345ac:	andeq	r8, r6, r4, ror fp
   345b0:	strheq	r9, [r6], -r0
   345b4:	andeq	r9, r6, r0, asr #1
   345b8:	andeq	r8, r6, ip, lsl #25
   345bc:	muleq	r6, r4, lr
   345c0:	ldrdeq	r9, [r6], -r4
   345c4:	andeq	r9, r6, r4, ror #1
   345c8:	strdeq	r9, [r6], -r8
   345cc:	andeq	r9, r6, r8, lsl r1
   345d0:	sub	sp, sp, #8
   345d4:	push	{r4, r5, fp, lr}
   345d8:	add	fp, sp, #12
   345dc:	sub	sp, sp, #24
   345e0:	str	r0, [fp, #-32]	; 0xffffffe0
   345e4:	add	r1, fp, #4
   345e8:	stm	r1, {r2, r3}
   345ec:	mov	r3, #0
   345f0:	strb	r3, [fp, #-13]
   345f4:	ldr	r3, [fp, #20]
   345f8:	cmp	r3, #2
   345fc:	bgt	3463c <__assert_fail@plt+0x21f50>
   34600:	ldrd	r2, [fp, #28]
   34604:	cmp	r2, #0
   34608:	sbcs	r3, r3, #0
   3460c:	bge	3463c <__assert_fail@plt+0x21f50>
   34610:	ldrd	r2, [fp, #12]
   34614:	mov	r1, #100	; 0x64
   34618:	mul	r0, r1, r3
   3461c:	mov	r1, #0
   34620:	mul	r1, r1, r2
   34624:	add	r1, r0, r1
   34628:	mov	r0, #100	; 0x64
   3462c:	umull	r2, r3, r2, r0
   34630:	add	r1, r1, r3
   34634:	mov	r3, r1
   34638:	strd	r2, [fp, #12]
   3463c:	ldrd	r2, [fp, #28]
   34640:	cmp	r2, #0
   34644:	sbcs	r3, r3, #0
   34648:	bge	346a8 <__assert_fail@plt+0x21fbc>
   3464c:	ldrd	r0, [fp, #12]
   34650:	mov	r2, #100	; 0x64
   34654:	mov	r3, #0
   34658:	bl	63d78 <__assert_fail@plt+0x5168c>
   3465c:	mov	r2, r0
   34660:	mov	r3, r1
   34664:	mov	r1, #60	; 0x3c
   34668:	mul	r0, r1, r3
   3466c:	mov	r1, #0
   34670:	mul	r1, r1, r2
   34674:	add	r1, r0, r1
   34678:	mov	r0, #60	; 0x3c
   3467c:	umull	r4, r5, r2, r0
   34680:	add	r3, r1, r5
   34684:	mov	r5, r3
   34688:	ldrd	r0, [fp, #12]
   3468c:	mov	r2, #100	; 0x64
   34690:	mov	r3, #0
   34694:	bl	63d78 <__assert_fail@plt+0x5168c>
   34698:	adds	r2, r2, r4
   3469c:	adc	r3, r3, r5
   346a0:	strd	r2, [fp, #-28]	; 0xffffffe4
   346a4:	b	349ac <__assert_fail@plt+0x222c0>
   346a8:	ldrd	r2, [fp, #12]
   346ac:	cmp	r2, #0
   346b0:	sbcs	r3, r3, #0
   346b4:	bge	3470c <__assert_fail@plt+0x22020>
   346b8:	ldrd	r2, [fp, #12]
   346bc:	mvn	r0, #0
   346c0:	mvn	r1, #0
   346c4:	cmp	r3, r1
   346c8:	cmpeq	r2, r0
   346cc:	beq	346fc <__assert_fail@plt+0x22010>
   346d0:	ldrd	r2, [fp, #12]
   346d4:	mov	r0, #0
   346d8:	mov	r1, #-2147483648	; 0x80000000
   346dc:	bl	63d78 <__assert_fail@plt+0x5168c>
   346e0:	mov	r2, r0
   346e4:	mov	r3, r1
   346e8:	cmp	r2, #60	; 0x3c
   346ec:	sbcs	r3, r3, #0
   346f0:	bge	346fc <__assert_fail@plt+0x22010>
   346f4:	mov	r3, #1
   346f8:	b	34700 <__assert_fail@plt+0x22014>
   346fc:	mov	r3, #0
   34700:	and	r3, r3, #1
   34704:	uxtb	r3, r3
   34708:	b	3472c <__assert_fail@plt+0x22040>
   3470c:	ldrd	r2, [fp, #12]
   34710:	add	r1, pc, #784	; 0x310
   34714:	ldrd	r0, [r1]
   34718:	cmp	r0, r2
   3471c:	sbcs	r3, r1, r3
   34720:	movlt	r3, #1
   34724:	movge	r3, #0
   34728:	uxtb	r3, r3
   3472c:	cmp	r3, #0
   34730:	beq	34768 <__assert_fail@plt+0x2207c>
   34734:	ldrd	r2, [fp, #12]
   34738:	mov	r1, #60	; 0x3c
   3473c:	mul	r0, r1, r3
   34740:	mov	r1, #0
   34744:	mul	r1, r1, r2
   34748:	add	r1, r0, r1
   3474c:	mov	r0, #60	; 0x3c
   34750:	umull	r2, r3, r2, r0
   34754:	add	r1, r1, r3
   34758:	mov	r3, r1
   3475c:	strd	r2, [fp, #-28]	; 0xffffffe4
   34760:	mov	r3, #1
   34764:	b	34798 <__assert_fail@plt+0x220ac>
   34768:	ldrd	r2, [fp, #12]
   3476c:	mov	r1, #60	; 0x3c
   34770:	mul	r0, r1, r3
   34774:	mov	r1, #0
   34778:	mul	r1, r1, r2
   3477c:	add	r1, r0, r1
   34780:	mov	r0, #60	; 0x3c
   34784:	umull	r2, r3, r2, r0
   34788:	add	r1, r1, r3
   3478c:	mov	r3, r1
   34790:	strd	r2, [fp, #-28]	; 0xffffffe4
   34794:	mov	r3, #0
   34798:	ldrb	r2, [fp, #-13]
   3479c:	orr	r3, r2, r3
   347a0:	cmp	r3, #0
   347a4:	movne	r3, #1
   347a8:	moveq	r3, #0
   347ac:	strb	r3, [fp, #-13]
   347b0:	ldrb	r3, [fp, #4]
   347b4:	cmp	r3, #0
   347b8:	beq	3489c <__assert_fail@plt+0x221b0>
   347bc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   347c0:	mvn	r3, r3
   347c4:	lsr	r3, r3, #31
   347c8:	uxtb	r2, r3
   347cc:	ldr	r3, [fp, #32]
   347d0:	lsr	r3, r3, #31
   347d4:	uxtb	r3, r3
   347d8:	eor	r3, r3, r2
   347dc:	uxtb	r3, r3
   347e0:	cmp	r3, #0
   347e4:	beq	347f0 <__assert_fail@plt+0x22104>
   347e8:	mov	r3, #0
   347ec:	b	3484c <__assert_fail@plt+0x22160>
   347f0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   347f4:	cmp	r2, #0
   347f8:	sbcs	r3, r3, #0
   347fc:	bge	34828 <__assert_fail@plt+0x2213c>
   34800:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   34804:	adds	r0, r2, #0
   34808:	adc	r1, r3, #-2147483648	; 0x80000000
   3480c:	ldrd	r2, [fp, #28]
   34810:	cmp	r0, r2
   34814:	sbcs	r3, r1, r3
   34818:	movlt	r3, #1
   3481c:	movge	r3, #0
   34820:	uxtb	r3, r3
   34824:	b	3484c <__assert_fail@plt+0x22160>
   34828:	ldrd	r2, [fp, #28]
   3482c:	subs	r0, r2, #1
   34830:	sbc	r1, r3, #-2147483648	; 0x80000000
   34834:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   34838:	cmp	r0, r2
   3483c:	sbcs	r3, r1, r3
   34840:	movlt	r3, #1
   34844:	movge	r3, #0
   34848:	uxtb	r3, r3
   3484c:	cmp	r3, #0
   34850:	beq	34878 <__assert_fail@plt+0x2218c>
   34854:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   34858:	mov	r0, r2
   3485c:	mov	r1, r3
   34860:	ldrd	r2, [fp, #28]
   34864:	subs	r2, r0, r2
   34868:	sbc	r3, r1, r3
   3486c:	strd	r2, [fp, #-28]	; 0xffffffe4
   34870:	mov	r3, #1
   34874:	b	34994 <__assert_fail@plt+0x222a8>
   34878:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3487c:	mov	r0, r2
   34880:	mov	r1, r3
   34884:	ldrd	r2, [fp, #28]
   34888:	subs	r2, r0, r2
   3488c:	sbc	r3, r1, r3
   34890:	strd	r2, [fp, #-28]	; 0xffffffe4
   34894:	mov	r3, #0
   34898:	b	34994 <__assert_fail@plt+0x222a8>
   3489c:	ldrd	r2, [fp, #28]
   348a0:	cmp	r2, #0
   348a4:	sbcs	r3, r3, #0
   348a8:	bge	348dc <__assert_fail@plt+0x221f0>
   348ac:	mov	r0, #0
   348b0:	mov	r1, #-2147483648	; 0x80000000
   348b4:	ldrd	r2, [fp, #28]
   348b8:	subs	r2, r0, r2
   348bc:	sbc	r3, r1, r3
   348c0:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   348c4:	cmp	r0, r2
   348c8:	sbcs	r3, r1, r3
   348cc:	movlt	r3, #1
   348d0:	movge	r3, #0
   348d4:	uxtb	r3, r3
   348d8:	b	34948 <__assert_fail@plt+0x2225c>
   348dc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   348e0:	cmp	r2, #0
   348e4:	sbcs	r3, r3, #0
   348e8:	bge	3491c <__assert_fail@plt+0x22230>
   348ec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   348f0:	mov	r0, #0
   348f4:	mov	r1, #-2147483648	; 0x80000000
   348f8:	subs	r2, r0, r2
   348fc:	sbc	r3, r1, r3
   34900:	ldrd	r0, [fp, #28]
   34904:	cmp	r0, r2
   34908:	sbcs	r3, r1, r3
   3490c:	movlt	r3, #1
   34910:	movge	r3, #0
   34914:	uxtb	r3, r3
   34918:	b	34948 <__assert_fail@plt+0x2225c>
   3491c:	mvn	r0, #0
   34920:	mvn	r1, #-2147483648	; 0x80000000
   34924:	ldrd	r2, [fp, #28]
   34928:	subs	r0, r0, r2
   3492c:	sbc	r1, r1, r3
   34930:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   34934:	cmp	r0, r2
   34938:	sbcs	r3, r1, r3
   3493c:	movlt	r3, #1
   34940:	movge	r3, #0
   34944:	uxtb	r3, r3
   34948:	cmp	r3, #0
   3494c:	beq	34974 <__assert_fail@plt+0x22288>
   34950:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   34954:	mov	r0, r2
   34958:	mov	r1, r3
   3495c:	ldrd	r2, [fp, #28]
   34960:	adds	r2, r2, r0
   34964:	adc	r3, r3, r1
   34968:	strd	r2, [fp, #-28]	; 0xffffffe4
   3496c:	mov	r3, #1
   34970:	b	34994 <__assert_fail@plt+0x222a8>
   34974:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   34978:	mov	r0, r2
   3497c:	mov	r1, r3
   34980:	ldrd	r2, [fp, #28]
   34984:	adds	r2, r2, r0
   34988:	adc	r3, r3, r1
   3498c:	strd	r2, [fp, #-28]	; 0xffffffe4
   34990:	mov	r3, #0
   34994:	ldrb	r2, [fp, #-13]
   34998:	orr	r3, r2, r3
   3499c:	cmp	r3, #0
   349a0:	movne	r3, #1
   349a4:	moveq	r3, #0
   349a8:	strb	r3, [fp, #-13]
   349ac:	ldrb	r3, [fp, #-13]
   349b0:	cmp	r3, #0
   349b4:	bne	349e8 <__assert_fail@plt+0x222fc>
   349b8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   349bc:	ldr	r0, [pc, #108]	; 34a30 <__assert_fail@plt+0x22344>
   349c0:	mvn	r1, #0
   349c4:	cmp	r2, r0
   349c8:	sbcs	r3, r3, r1
   349cc:	blt	349e8 <__assert_fail@plt+0x222fc>
   349d0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   349d4:	mov	r0, #1440	; 0x5a0
   349d8:	mov	r1, #0
   349dc:	cmp	r0, r2
   349e0:	sbcs	r3, r1, r3
   349e4:	bge	349f0 <__assert_fail@plt+0x22304>
   349e8:	mov	r3, #0
   349ec:	b	34a14 <__assert_fail@plt+0x22328>
   349f0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   349f4:	mov	r3, r2
   349f8:	lsl	r3, r3, #4
   349fc:	sub	r3, r3, r2
   34a00:	lsl	r3, r3, #2
   34a04:	mov	r2, r3
   34a08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34a0c:	str	r2, [r3, #24]
   34a10:	mov	r3, #1
   34a14:	mov	r0, r3
   34a18:	sub	sp, fp, #12
   34a1c:	pop	{r4, r5, fp, lr}
   34a20:	add	sp, sp, #8
   34a24:	bx	lr
   34a28:	eorcs	r2, r2, #536870914	; 0x20000002
   34a2c:	eoreq	r2, r2, #536870914	; 0x20000002
   34a30:			; <UNDEFINED> instruction: 0xfffffa60
   34a34:	push	{fp}		; (str fp, [sp, #-4]!)
   34a38:	add	fp, sp, #0
   34a3c:	sub	sp, sp, #20
   34a40:	strd	r0, [fp, #-12]
   34a44:	str	r2, [fp, #-16]
   34a48:	ldr	r3, [fp, #-16]
   34a4c:	cmp	r3, #0
   34a50:	beq	34a8c <__assert_fail@plt+0x223a0>
   34a54:	cmp	r3, #1
   34a58:	beq	34ad4 <__assert_fail@plt+0x223e8>
   34a5c:	ldrd	r2, [fp, #-12]
   34a60:	cmp	r2, #0
   34a64:	sbcs	r3, r3, #0
   34a68:	blt	34a84 <__assert_fail@plt+0x22398>
   34a6c:	ldrd	r2, [fp, #-12]
   34a70:	cmp	r2, #24
   34a74:	sbcs	r3, r3, #0
   34a78:	bge	34a84 <__assert_fail@plt+0x22398>
   34a7c:	ldr	r3, [fp, #-12]
   34a80:	b	34b1c <__assert_fail@plt+0x22430>
   34a84:	mvn	r3, #0
   34a88:	b	34b1c <__assert_fail@plt+0x22430>
   34a8c:	ldrd	r2, [fp, #-12]
   34a90:	cmp	r2, #1
   34a94:	sbcs	r3, r3, #0
   34a98:	blt	34aac <__assert_fail@plt+0x223c0>
   34a9c:	ldrd	r2, [fp, #-12]
   34aa0:	cmp	r2, #12
   34aa4:	sbcs	r3, r3, #0
   34aa8:	blt	34acc <__assert_fail@plt+0x223e0>
   34aac:	ldrd	r2, [fp, #-12]
   34ab0:	cmp	r3, #0
   34ab4:	cmpeq	r2, #12
   34ab8:	bne	34ac4 <__assert_fail@plt+0x223d8>
   34abc:	mov	r3, #0
   34ac0:	b	34b1c <__assert_fail@plt+0x22430>
   34ac4:	mvn	r3, #0
   34ac8:	b	34b1c <__assert_fail@plt+0x22430>
   34acc:	ldr	r3, [fp, #-12]
   34ad0:	b	34b1c <__assert_fail@plt+0x22430>
   34ad4:	ldrd	r2, [fp, #-12]
   34ad8:	cmp	r2, #1
   34adc:	sbcs	r3, r3, #0
   34ae0:	blt	34b00 <__assert_fail@plt+0x22414>
   34ae4:	ldrd	r2, [fp, #-12]
   34ae8:	cmp	r2, #12
   34aec:	sbcs	r3, r3, #0
   34af0:	bge	34b00 <__assert_fail@plt+0x22414>
   34af4:	ldr	r3, [fp, #-12]
   34af8:	add	r3, r3, #12
   34afc:	b	34b1c <__assert_fail@plt+0x22430>
   34b00:	ldrd	r2, [fp, #-12]
   34b04:	cmp	r3, #0
   34b08:	cmpeq	r2, #12
   34b0c:	bne	34b18 <__assert_fail@plt+0x2242c>
   34b10:	mov	r3, #12
   34b14:	b	34b1c <__assert_fail@plt+0x22430>
   34b18:	mvn	r3, #0
   34b1c:	mov	r0, r3
   34b20:	add	sp, fp, #0
   34b24:	pop	{fp}		; (ldr fp, [sp], #4)
   34b28:	bx	lr
   34b2c:	push	{fp, lr}
   34b30:	add	fp, sp, #4
   34b34:	sub	sp, sp, #8
   34b38:	str	r0, [fp, #-8]
   34b3c:	str	r1, [fp, #-12]
   34b40:	ldr	r3, [fp, #-8]
   34b44:	ldr	r2, [pc, #136]	; 34bd4 <__assert_fail@plt+0x224e8>
   34b48:	cmp	r3, r2
   34b4c:	movge	r3, #1
   34b50:	movlt	r3, #0
   34b54:	uxtb	r3, r3
   34b58:	mov	r2, r3
   34b5c:	ldr	r3, [pc, #116]	; 34bd8 <__assert_fail@plt+0x224ec>
   34b60:	add	r0, r2, r3
   34b64:	ldr	r3, [fp, #-8]
   34b68:	ldr	r2, [pc, #108]	; 34bdc <__assert_fail@plt+0x224f0>
   34b6c:	smull	r1, r2, r2, r3
   34b70:	asr	r2, r2, #5
   34b74:	asr	r3, r3, #31
   34b78:	sub	r3, r2, r3
   34b7c:	add	r3, r3, #19
   34b80:	eor	ip, r3, r3, asr #31
   34b84:	sub	ip, ip, r3, asr #31
   34b88:	ldr	r2, [fp, #-8]
   34b8c:	ldr	r3, [pc, #72]	; 34bdc <__assert_fail@plt+0x224f0>
   34b90:	smull	r1, r3, r3, r2
   34b94:	asr	r1, r3, #5
   34b98:	asr	r3, r2, #31
   34b9c:	sub	r3, r1, r3
   34ba0:	mov	r1, #100	; 0x64
   34ba4:	mul	r3, r1, r3
   34ba8:	sub	r3, r2, r3
   34bac:	cmp	r3, #0
   34bb0:	rsblt	r3, r3, #0
   34bb4:	mov	r2, ip
   34bb8:	mov	r1, r0
   34bbc:	ldr	r0, [fp, #-12]
   34bc0:	bl	12590 <sprintf@plt>
   34bc4:	ldr	r3, [fp, #-12]
   34bc8:	mov	r0, r3
   34bcc:	sub	sp, fp, #4
   34bd0:	pop	{fp, pc}
   34bd4:			; <UNDEFINED> instruction: 0xfffff894
   34bd8:	andeq	r9, r6, ip, lsl #22
   34bdc:	mvnpl	r8, pc, lsl r5
   34be0:	sub	sp, sp, #16
   34be4:	push	{fp, lr}
   34be8:	add	fp, sp, #4
   34bec:	sub	sp, sp, #16
   34bf0:	add	ip, fp, #4
   34bf4:	stm	ip, {r0, r1, r2, r3}
   34bf8:	ldrd	r2, [fp, #12]
   34bfc:	strd	r2, [fp, #-12]
   34c00:	ldrd	r2, [fp, #-12]
   34c04:	cmp	r2, #0
   34c08:	sbcs	r3, r3, #0
   34c0c:	blt	34c84 <__assert_fail@plt+0x22598>
   34c10:	ldr	r3, [fp, #20]
   34c14:	cmp	r3, #2
   34c18:	bne	34c84 <__assert_fail@plt+0x22598>
   34c1c:	ldrd	r2, [fp, #-12]
   34c20:	cmp	r2, #69	; 0x45
   34c24:	sbcs	r3, r3, #0
   34c28:	bge	34c38 <__assert_fail@plt+0x2254c>
   34c2c:	mov	r2, #2000	; 0x7d0
   34c30:	mov	r3, #0
   34c34:	b	34c40 <__assert_fail@plt+0x22554>
   34c38:	ldr	r2, [pc, #660]	; 34ed4 <__assert_fail@plt+0x227e8>
   34c3c:	mov	r3, #0
   34c40:	ldrd	r0, [fp, #-12]
   34c44:	adds	r2, r2, r0
   34c48:	adc	r3, r3, r1
   34c4c:	strd	r2, [fp, #-12]
   34c50:	ldrb	r3, [fp, #28]
   34c54:	cmp	r3, #0
   34c58:	beq	34c84 <__assert_fail@plt+0x22598>
   34c5c:	ldr	r0, [pc, #628]	; 34ed8 <__assert_fail@plt+0x227ec>
   34c60:	bl	12398 <gettext@plt>
   34c64:	mov	ip, r0
   34c68:	ldrd	r0, [fp, #12]
   34c6c:	ldrd	r2, [fp, #-12]
   34c70:	strd	r2, [sp]
   34c74:	mov	r2, r0
   34c78:	mov	r3, r1
   34c7c:	mov	r0, ip
   34c80:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   34c84:	ldrd	r2, [fp, #-12]
   34c88:	cmp	r2, #0
   34c8c:	sbcs	r3, r3, #0
   34c90:	bge	34d8c <__assert_fail@plt+0x226a0>
   34c94:	ldrd	r2, [fp, #-12]
   34c98:	cmp	r2, #0
   34c9c:	sbcs	r3, r3, #0
   34ca0:	bge	34d24 <__assert_fail@plt+0x22638>
   34ca4:	ldrd	r2, [fp, #-12]
   34ca8:	ldr	r0, [pc, #556]	; 34edc <__assert_fail@plt+0x227f0>
   34cac:	mvn	r1, #0
   34cb0:	cmp	r2, r0
   34cb4:	sbcs	r3, r3, r1
   34cb8:	blt	34cf0 <__assert_fail@plt+0x22604>
   34cbc:	ldrd	r2, [fp, #-12]
   34cc0:	ldr	r0, [pc, #536]	; 34ee0 <__assert_fail@plt+0x227f4>
   34cc4:	mov	r1, #0
   34cc8:	adds	r2, r2, r0
   34ccc:	adc	r3, r3, r1
   34cd0:	mvn	r0, #-2147483648	; 0x80000000
   34cd4:	mov	r1, #0
   34cd8:	cmp	r0, r2
   34cdc:	sbcs	r3, r1, r3
   34ce0:	movlt	r3, #1
   34ce4:	movge	r3, #0
   34ce8:	uxtb	r3, r3
   34cec:	b	34d44 <__assert_fail@plt+0x22658>
   34cf0:	ldr	r0, [pc, #492]	; 34ee4 <__assert_fail@plt+0x227f8>
   34cf4:	mvn	r1, #0
   34cf8:	ldrd	r2, [fp, #-12]
   34cfc:	subs	r2, r0, r2
   34d00:	sbc	r3, r1, r3
   34d04:	mvn	r0, #-2147483648	; 0x80000000
   34d08:	mov	r1, #0
   34d0c:	cmp	r0, r2
   34d10:	sbcs	r3, r1, r3
   34d14:	movlt	r3, #1
   34d18:	movge	r3, #0
   34d1c:	uxtb	r3, r3
   34d20:	b	34d44 <__assert_fail@plt+0x22658>
   34d24:	ldrd	r2, [fp, #-12]
   34d28:	ldr	r0, [pc, #440]	; 34ee8 <__assert_fail@plt+0x227fc>
   34d2c:	mov	r1, #0
   34d30:	cmp	r0, r2
   34d34:	sbcs	r3, r1, r3
   34d38:	movlt	r3, #1
   34d3c:	movge	r3, #0
   34d40:	uxtb	r3, r3
   34d44:	cmp	r3, #0
   34d48:	beq	34d6c <__assert_fail@plt+0x22680>
   34d4c:	ldr	r2, [fp, #-12]
   34d50:	ldr	r3, [pc, #396]	; 34ee4 <__assert_fail@plt+0x227f8>
   34d54:	sub	r3, r3, r2
   34d58:	mov	r2, r3
   34d5c:	ldr	r3, [fp, #32]
   34d60:	str	r2, [r3]
   34d64:	mov	r3, #1
   34d68:	b	34e88 <__assert_fail@plt+0x2279c>
   34d6c:	ldr	r2, [fp, #-12]
   34d70:	ldr	r3, [pc, #364]	; 34ee4 <__assert_fail@plt+0x227f8>
   34d74:	sub	r3, r3, r2
   34d78:	mov	r2, r3
   34d7c:	ldr	r3, [fp, #32]
   34d80:	str	r2, [r3]
   34d84:	mov	r3, #0
   34d88:	b	34e88 <__assert_fail@plt+0x2279c>
   34d8c:	ldrd	r2, [fp, #-12]
   34d90:	cmp	r2, #0
   34d94:	sbcs	r3, r3, #0
   34d98:	blt	34e1c <__assert_fail@plt+0x22730>
   34d9c:	ldrd	r2, [fp, #-12]
   34da0:	ldr	r0, [pc, #312]	; 34ee0 <__assert_fail@plt+0x227f4>
   34da4:	mov	r1, #0
   34da8:	cmp	r0, r2
   34dac:	sbcs	r3, r1, r3
   34db0:	blt	34de8 <__assert_fail@plt+0x226fc>
   34db4:	ldr	r0, [pc, #292]	; 34ee0 <__assert_fail@plt+0x227f4>
   34db8:	mov	r1, #0
   34dbc:	ldrd	r2, [fp, #-12]
   34dc0:	subs	r2, r0, r2
   34dc4:	sbc	r3, r1, r3
   34dc8:	mvn	r0, #-2147483648	; 0x80000000
   34dcc:	mov	r1, #0
   34dd0:	cmp	r0, r2
   34dd4:	sbcs	r3, r1, r3
   34dd8:	movlt	r3, #1
   34ddc:	movge	r3, #0
   34de0:	uxtb	r3, r3
   34de4:	b	34e44 <__assert_fail@plt+0x22758>
   34de8:	ldrd	r2, [fp, #-12]
   34dec:	ldr	r0, [pc, #240]	; 34ee4 <__assert_fail@plt+0x227f8>
   34df0:	mvn	r1, #0
   34df4:	adds	r2, r2, r0
   34df8:	adc	r3, r3, r1
   34dfc:	mvn	r0, #-2147483648	; 0x80000000
   34e00:	mov	r1, #0
   34e04:	cmp	r0, r2
   34e08:	sbcs	r3, r1, r3
   34e0c:	movlt	r3, #1
   34e10:	movge	r3, #0
   34e14:	uxtb	r3, r3
   34e18:	b	34e44 <__assert_fail@plt+0x22758>
   34e1c:	ldrd	r2, [fp, #-12]
   34e20:	adds	r2, r2, #-2147483648	; 0x80000000
   34e24:	adc	r3, r3, #0
   34e28:	ldr	r0, [pc, #176]	; 34ee0 <__assert_fail@plt+0x227f4>
   34e2c:	mov	r1, #0
   34e30:	cmp	r0, r2
   34e34:	sbcs	r3, r1, r3
   34e38:	movge	r3, #1
   34e3c:	movlt	r3, #0
   34e40:	uxtb	r3, r3
   34e44:	cmp	r3, #0
   34e48:	beq	34e6c <__assert_fail@plt+0x22780>
   34e4c:	ldr	r3, [fp, #-12]
   34e50:	sub	r3, r3, #1888	; 0x760
   34e54:	sub	r3, r3, #12
   34e58:	mov	r2, r3
   34e5c:	ldr	r3, [fp, #32]
   34e60:	str	r2, [r3]
   34e64:	mov	r3, #1
   34e68:	b	34e88 <__assert_fail@plt+0x2279c>
   34e6c:	ldr	r3, [fp, #-12]
   34e70:	sub	r3, r3, #1888	; 0x760
   34e74:	sub	r3, r3, #12
   34e78:	mov	r2, r3
   34e7c:	ldr	r3, [fp, #32]
   34e80:	str	r2, [r3]
   34e84:	mov	r3, #0
   34e88:	cmp	r3, #0
   34e8c:	beq	34ebc <__assert_fail@plt+0x227d0>
   34e90:	ldrb	r3, [fp, #28]
   34e94:	cmp	r3, #0
   34e98:	beq	34eb4 <__assert_fail@plt+0x227c8>
   34e9c:	ldr	r0, [pc, #72]	; 34eec <__assert_fail@plt+0x22800>
   34ea0:	bl	12398 <gettext@plt>
   34ea4:	mov	r1, r0
   34ea8:	ldrd	r2, [fp, #-12]
   34eac:	mov	r0, r1
   34eb0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   34eb4:	mov	r3, #0
   34eb8:	b	34ec0 <__assert_fail@plt+0x227d4>
   34ebc:	mov	r3, #1
   34ec0:	mov	r0, r3
   34ec4:	sub	sp, fp, #4
   34ec8:	pop	{fp, lr}
   34ecc:	add	sp, sp, #16
   34ed0:	bx	lr
   34ed4:	andeq	r0, r0, ip, ror #14
   34ed8:	andeq	r9, r6, r8, lsl fp
   34edc:			; <UNDEFINED> instruction: 0xfffff895
   34ee0:	andeq	r0, r0, fp, ror #14
   34ee4:			; <UNDEFINED> instruction: 0xfffff894
   34ee8:	svcvc	0x00fff894
   34eec:	andeq	r9, r6, r4, asr #22
   34ef0:	push	{fp, lr}
   34ef4:	add	fp, sp, #4
   34ef8:	sub	sp, sp, #16
   34efc:	str	r0, [fp, #-16]
   34f00:	str	r1, [fp, #-20]	; 0xffffffec
   34f04:	ldr	r3, [pc, #252]	; 35008 <__assert_fail@plt+0x2291c>
   34f08:	str	r3, [fp, #-8]
   34f0c:	b	34f44 <__assert_fail@plt+0x22858>
   34f10:	ldr	r3, [fp, #-8]
   34f14:	ldr	r3, [r3]
   34f18:	mov	r1, r3
   34f1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34f20:	bl	11ffc <strcmp@plt>
   34f24:	mov	r3, r0
   34f28:	cmp	r3, #0
   34f2c:	bne	34f38 <__assert_fail@plt+0x2284c>
   34f30:	ldr	r3, [fp, #-8]
   34f34:	b	34ffc <__assert_fail@plt+0x22910>
   34f38:	ldr	r3, [fp, #-8]
   34f3c:	add	r3, r3, #12
   34f40:	str	r3, [fp, #-8]
   34f44:	ldr	r3, [fp, #-8]
   34f48:	ldr	r3, [r3]
   34f4c:	cmp	r3, #0
   34f50:	bne	34f10 <__assert_fail@plt+0x22824>
   34f54:	ldr	r3, [fp, #-16]
   34f58:	add	r3, r3, #188	; 0xbc
   34f5c:	str	r3, [fp, #-8]
   34f60:	b	34f98 <__assert_fail@plt+0x228ac>
   34f64:	ldr	r3, [fp, #-8]
   34f68:	ldr	r3, [r3]
   34f6c:	mov	r1, r3
   34f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   34f74:	bl	11ffc <strcmp@plt>
   34f78:	mov	r3, r0
   34f7c:	cmp	r3, #0
   34f80:	bne	34f8c <__assert_fail@plt+0x228a0>
   34f84:	ldr	r3, [fp, #-8]
   34f88:	b	34ffc <__assert_fail@plt+0x22910>
   34f8c:	ldr	r3, [fp, #-8]
   34f90:	add	r3, r3, #12
   34f94:	str	r3, [fp, #-8]
   34f98:	ldr	r3, [fp, #-8]
   34f9c:	ldr	r3, [r3]
   34fa0:	cmp	r3, #0
   34fa4:	bne	34f64 <__assert_fail@plt+0x22878>
   34fa8:	ldr	r3, [pc, #92]	; 3500c <__assert_fail@plt+0x22920>
   34fac:	str	r3, [fp, #-8]
   34fb0:	b	34fe8 <__assert_fail@plt+0x228fc>
   34fb4:	ldr	r3, [fp, #-8]
   34fb8:	ldr	r3, [r3]
   34fbc:	mov	r1, r3
   34fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   34fc4:	bl	11ffc <strcmp@plt>
   34fc8:	mov	r3, r0
   34fcc:	cmp	r3, #0
   34fd0:	bne	34fdc <__assert_fail@plt+0x228f0>
   34fd4:	ldr	r3, [fp, #-8]
   34fd8:	b	34ffc <__assert_fail@plt+0x22910>
   34fdc:	ldr	r3, [fp, #-8]
   34fe0:	add	r3, r3, #12
   34fe4:	str	r3, [fp, #-8]
   34fe8:	ldr	r3, [fp, #-8]
   34fec:	ldr	r3, [r3]
   34ff0:	cmp	r3, #0
   34ff4:	bne	34fb4 <__assert_fail@plt+0x228c8>
   34ff8:	mov	r3, #0
   34ffc:	mov	r0, r3
   35000:	sub	sp, fp, #4
   35004:	pop	{fp, pc}
   35008:	andeq	r9, r6, ip, lsl #12
   3500c:	andeq	r9, r6, r0, lsr r7
   35010:	push	{fp, lr}
   35014:	add	fp, sp, #4
   35018:	sub	sp, sp, #32
   3501c:	str	r0, [fp, #-32]	; 0xffffffe0
   35020:	str	r1, [fp, #-36]	; 0xffffffdc
   35024:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35028:	str	r3, [fp, #-8]
   3502c:	b	35068 <__assert_fail@plt+0x2297c>
   35030:	ldr	r3, [fp, #-8]
   35034:	ldrb	r3, [r3]
   35038:	mov	r0, r3
   3503c:	bl	2ff9c <__assert_fail@plt+0x1d8b0>
   35040:	mov	r3, r0
   35044:	mov	r0, r3
   35048:	bl	5f5e4 <__assert_fail@plt+0x4cef8>
   3504c:	mov	r3, r0
   35050:	uxtb	r2, r3
   35054:	ldr	r3, [fp, #-8]
   35058:	strb	r2, [r3]
   3505c:	ldr	r3, [fp, #-8]
   35060:	add	r3, r3, #1
   35064:	str	r3, [fp, #-8]
   35068:	ldr	r3, [fp, #-8]
   3506c:	ldrb	r3, [r3]
   35070:	cmp	r3, #0
   35074:	bne	35030 <__assert_fail@plt+0x22944>
   35078:	ldr	r3, [pc, #968]	; 35448 <__assert_fail@plt+0x22d5c>
   3507c:	str	r3, [fp, #-16]
   35080:	b	350b8 <__assert_fail@plt+0x229cc>
   35084:	ldr	r3, [fp, #-16]
   35088:	ldr	r3, [r3]
   3508c:	mov	r1, r3
   35090:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35094:	bl	11ffc <strcmp@plt>
   35098:	mov	r3, r0
   3509c:	cmp	r3, #0
   350a0:	bne	350ac <__assert_fail@plt+0x229c0>
   350a4:	ldr	r3, [fp, #-16]
   350a8:	b	3543c <__assert_fail@plt+0x22d50>
   350ac:	ldr	r3, [fp, #-16]
   350b0:	add	r3, r3, #12
   350b4:	str	r3, [fp, #-16]
   350b8:	ldr	r3, [fp, #-16]
   350bc:	ldr	r3, [r3]
   350c0:	cmp	r3, #0
   350c4:	bne	35084 <__assert_fail@plt+0x22998>
   350c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   350cc:	bl	123bc <strlen@plt>
   350d0:	mov	r3, r0
   350d4:	str	r3, [fp, #-24]	; 0xffffffe8
   350d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   350dc:	cmp	r3, #3
   350e0:	beq	35104 <__assert_fail@plt+0x22a18>
   350e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   350e8:	cmp	r3, #4
   350ec:	bne	3510c <__assert_fail@plt+0x22a20>
   350f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   350f4:	add	r3, r3, #3
   350f8:	ldrb	r3, [r3]
   350fc:	cmp	r3, #46	; 0x2e
   35100:	bne	3510c <__assert_fail@plt+0x22a20>
   35104:	mov	r3, #1
   35108:	b	35110 <__assert_fail@plt+0x22a24>
   3510c:	mov	r3, #0
   35110:	strb	r3, [fp, #-25]	; 0xffffffe7
   35114:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   35118:	and	r3, r3, #1
   3511c:	strb	r3, [fp, #-25]	; 0xffffffe7
   35120:	ldr	r3, [pc, #804]	; 3544c <__assert_fail@plt+0x22d60>
   35124:	str	r3, [fp, #-16]
   35128:	b	351ac <__assert_fail@plt+0x22ac0>
   3512c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   35130:	cmp	r3, #0
   35134:	beq	35168 <__assert_fail@plt+0x22a7c>
   35138:	ldr	r3, [fp, #-16]
   3513c:	ldr	r3, [r3]
   35140:	mov	r2, #3
   35144:	mov	r1, r3
   35148:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3514c:	bl	1268c <strncmp@plt>
   35150:	mov	r3, r0
   35154:	cmp	r3, #0
   35158:	moveq	r3, #1
   3515c:	movne	r3, #0
   35160:	uxtb	r3, r3
   35164:	b	35190 <__assert_fail@plt+0x22aa4>
   35168:	ldr	r3, [fp, #-16]
   3516c:	ldr	r3, [r3]
   35170:	mov	r1, r3
   35174:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35178:	bl	11ffc <strcmp@plt>
   3517c:	mov	r3, r0
   35180:	cmp	r3, #0
   35184:	moveq	r3, #1
   35188:	movne	r3, #0
   3518c:	uxtb	r3, r3
   35190:	cmp	r3, #0
   35194:	beq	351a0 <__assert_fail@plt+0x22ab4>
   35198:	ldr	r3, [fp, #-16]
   3519c:	b	3543c <__assert_fail@plt+0x22d50>
   351a0:	ldr	r3, [fp, #-16]
   351a4:	add	r3, r3, #12
   351a8:	str	r3, [fp, #-16]
   351ac:	ldr	r3, [fp, #-16]
   351b0:	ldr	r3, [r3]
   351b4:	cmp	r3, #0
   351b8:	bne	3512c <__assert_fail@plt+0x22a40>
   351bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   351c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   351c4:	bl	34ef0 <__assert_fail@plt+0x22804>
   351c8:	str	r0, [fp, #-16]
   351cc:	ldr	r3, [fp, #-16]
   351d0:	cmp	r3, #0
   351d4:	beq	351e0 <__assert_fail@plt+0x22af4>
   351d8:	ldr	r3, [fp, #-16]
   351dc:	b	3543c <__assert_fail@plt+0x22d50>
   351e0:	ldr	r3, [pc, #616]	; 35450 <__assert_fail@plt+0x22d64>
   351e4:	mov	r1, r3
   351e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   351ec:	bl	11ffc <strcmp@plt>
   351f0:	mov	r3, r0
   351f4:	cmp	r3, #0
   351f8:	bne	35204 <__assert_fail@plt+0x22b18>
   351fc:	ldr	r3, [pc, #592]	; 35454 <__assert_fail@plt+0x22d68>
   35200:	b	3543c <__assert_fail@plt+0x22d50>
   35204:	ldr	r3, [pc, #588]	; 35458 <__assert_fail@plt+0x22d6c>
   35208:	str	r3, [fp, #-16]
   3520c:	b	35244 <__assert_fail@plt+0x22b58>
   35210:	ldr	r3, [fp, #-16]
   35214:	ldr	r3, [r3]
   35218:	mov	r1, r3
   3521c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35220:	bl	11ffc <strcmp@plt>
   35224:	mov	r3, r0
   35228:	cmp	r3, #0
   3522c:	bne	35238 <__assert_fail@plt+0x22b4c>
   35230:	ldr	r3, [fp, #-16]
   35234:	b	3543c <__assert_fail@plt+0x22d50>
   35238:	ldr	r3, [fp, #-16]
   3523c:	add	r3, r3, #12
   35240:	str	r3, [fp, #-16]
   35244:	ldr	r3, [fp, #-16]
   35248:	ldr	r3, [r3]
   3524c:	cmp	r3, #0
   35250:	bne	35210 <__assert_fail@plt+0x22b24>
   35254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35258:	sub	r3, r3, #1
   3525c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   35260:	add	r3, r2, r3
   35264:	ldrb	r3, [r3]
   35268:	cmp	r3, #83	; 0x53
   3526c:	bne	352f0 <__assert_fail@plt+0x22c04>
   35270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35274:	sub	r3, r3, #1
   35278:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3527c:	add	r3, r2, r3
   35280:	mov	r2, #0
   35284:	strb	r2, [r3]
   35288:	ldr	r3, [pc, #456]	; 35458 <__assert_fail@plt+0x22d6c>
   3528c:	str	r3, [fp, #-16]
   35290:	b	352c8 <__assert_fail@plt+0x22bdc>
   35294:	ldr	r3, [fp, #-16]
   35298:	ldr	r3, [r3]
   3529c:	mov	r1, r3
   352a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   352a4:	bl	11ffc <strcmp@plt>
   352a8:	mov	r3, r0
   352ac:	cmp	r3, #0
   352b0:	bne	352bc <__assert_fail@plt+0x22bd0>
   352b4:	ldr	r3, [fp, #-16]
   352b8:	b	3543c <__assert_fail@plt+0x22d50>
   352bc:	ldr	r3, [fp, #-16]
   352c0:	add	r3, r3, #12
   352c4:	str	r3, [fp, #-16]
   352c8:	ldr	r3, [fp, #-16]
   352cc:	ldr	r3, [r3]
   352d0:	cmp	r3, #0
   352d4:	bne	35294 <__assert_fail@plt+0x22ba8>
   352d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   352dc:	sub	r3, r3, #1
   352e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   352e4:	add	r3, r2, r3
   352e8:	mov	r2, #83	; 0x53
   352ec:	strb	r2, [r3]
   352f0:	ldr	r3, [pc, #356]	; 3545c <__assert_fail@plt+0x22d70>
   352f4:	str	r3, [fp, #-16]
   352f8:	b	35330 <__assert_fail@plt+0x22c44>
   352fc:	ldr	r3, [fp, #-16]
   35300:	ldr	r3, [r3]
   35304:	mov	r1, r3
   35308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3530c:	bl	11ffc <strcmp@plt>
   35310:	mov	r3, r0
   35314:	cmp	r3, #0
   35318:	bne	35324 <__assert_fail@plt+0x22c38>
   3531c:	ldr	r3, [fp, #-16]
   35320:	b	3543c <__assert_fail@plt+0x22d50>
   35324:	ldr	r3, [fp, #-16]
   35328:	add	r3, r3, #12
   3532c:	str	r3, [fp, #-16]
   35330:	ldr	r3, [fp, #-16]
   35334:	ldr	r3, [r3]
   35338:	cmp	r3, #0
   3533c:	bne	352fc <__assert_fail@plt+0x22c10>
   35340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35344:	cmp	r3, #1
   35348:	bne	35398 <__assert_fail@plt+0x22cac>
   3534c:	ldr	r3, [pc, #268]	; 35460 <__assert_fail@plt+0x22d74>
   35350:	str	r3, [fp, #-16]
   35354:	b	35388 <__assert_fail@plt+0x22c9c>
   35358:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3535c:	ldrb	r2, [r3]
   35360:	ldr	r3, [fp, #-16]
   35364:	ldr	r3, [r3]
   35368:	ldrb	r3, [r3]
   3536c:	cmp	r2, r3
   35370:	bne	3537c <__assert_fail@plt+0x22c90>
   35374:	ldr	r3, [fp, #-16]
   35378:	b	3543c <__assert_fail@plt+0x22d50>
   3537c:	ldr	r3, [fp, #-16]
   35380:	add	r3, r3, #12
   35384:	str	r3, [fp, #-16]
   35388:	ldr	r3, [fp, #-16]
   3538c:	ldr	r3, [r3]
   35390:	cmp	r3, #0
   35394:	bne	35358 <__assert_fail@plt+0x22c6c>
   35398:	mov	r3, #0
   3539c:	strb	r3, [fp, #-17]	; 0xffffffef
   353a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   353a4:	str	r3, [fp, #-12]
   353a8:	ldr	r3, [fp, #-12]
   353ac:	str	r3, [fp, #-8]
   353b0:	b	353e8 <__assert_fail@plt+0x22cfc>
   353b4:	ldr	r3, [fp, #-12]
   353b8:	ldrb	r3, [r3]
   353bc:	cmp	r3, #46	; 0x2e
   353c0:	bne	353d0 <__assert_fail@plt+0x22ce4>
   353c4:	mov	r3, #1
   353c8:	strb	r3, [fp, #-17]	; 0xffffffef
   353cc:	b	353dc <__assert_fail@plt+0x22cf0>
   353d0:	ldr	r3, [fp, #-8]
   353d4:	add	r3, r3, #1
   353d8:	str	r3, [fp, #-8]
   353dc:	ldr	r3, [fp, #-12]
   353e0:	add	r3, r3, #1
   353e4:	str	r3, [fp, #-12]
   353e8:	ldr	r3, [fp, #-12]
   353ec:	ldrb	r2, [r3]
   353f0:	ldr	r3, [fp, #-8]
   353f4:	strb	r2, [r3]
   353f8:	ldr	r3, [fp, #-8]
   353fc:	ldrb	r3, [r3]
   35400:	cmp	r3, #0
   35404:	bne	353b4 <__assert_fail@plt+0x22cc8>
   35408:	ldrb	r3, [fp, #-17]	; 0xffffffef
   3540c:	cmp	r3, #0
   35410:	beq	35438 <__assert_fail@plt+0x22d4c>
   35414:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35418:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3541c:	bl	34ef0 <__assert_fail@plt+0x22804>
   35420:	str	r0, [fp, #-16]
   35424:	ldr	r3, [fp, #-16]
   35428:	cmp	r3, #0
   3542c:	beq	35438 <__assert_fail@plt+0x22d4c>
   35430:	ldr	r3, [fp, #-16]
   35434:	b	3543c <__assert_fail@plt+0x22d50>
   35438:	mov	r3, #0
   3543c:	mov	r0, r3
   35440:	sub	sp, fp, #4
   35444:	pop	{fp, pc}
   35448:	andeq	r9, r6, r4, asr #2
   3544c:	andeq	r9, r6, r8, ror #4
   35450:	andeq	r9, r6, r0, lsl #3
   35454:	andeq	r9, r6, r4, lsl #3
   35458:	ldrdeq	r9, [r6], -ip
   3545c:	andeq	r9, r6, r4, lsl #10
   35460:	ldrdeq	r9, [r6], -r4
   35464:	push	{fp, lr}
   35468:	add	fp, sp, #4
   3546c:	sub	sp, sp, #72	; 0x48
   35470:	str	r0, [fp, #-72]	; 0xffffffb8
   35474:	str	r1, [fp, #-76]	; 0xffffffb4
   35478:	b	35490 <__assert_fail@plt+0x22da4>
   3547c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35480:	ldr	r3, [r3]
   35484:	add	r2, r3, #1
   35488:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3548c:	str	r2, [r3]
   35490:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35494:	ldr	r3, [r3]
   35498:	ldrb	r3, [r3]
   3549c:	strb	r3, [fp, #-5]
   354a0:	ldrb	r3, [fp, #-5]
   354a4:	mov	r0, r3
   354a8:	bl	5f404 <__assert_fail@plt+0x4cd18>
   354ac:	mov	r3, r0
   354b0:	cmp	r3, #0
   354b4:	bne	3547c <__assert_fail@plt+0x22d90>
   354b8:	ldrb	r3, [fp, #-5]
   354bc:	mov	r0, r3
   354c0:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   354c4:	mov	r3, r0
   354c8:	cmp	r3, #0
   354cc:	bne	354e8 <__assert_fail@plt+0x22dfc>
   354d0:	ldrb	r3, [fp, #-5]
   354d4:	cmp	r3, #45	; 0x2d
   354d8:	beq	354e8 <__assert_fail@plt+0x22dfc>
   354dc:	ldrb	r3, [fp, #-5]
   354e0:	cmp	r3, #43	; 0x2b
   354e4:	bne	35a88 <__assert_fail@plt+0x2339c>
   354e8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   354ec:	ldr	r3, [r3]
   354f0:	str	r3, [fp, #-12]
   354f4:	ldrb	r3, [fp, #-5]
   354f8:	cmp	r3, #45	; 0x2d
   354fc:	beq	3550c <__assert_fail@plt+0x22e20>
   35500:	ldrb	r3, [fp, #-5]
   35504:	cmp	r3, #43	; 0x2b
   35508:	bne	35594 <__assert_fail@plt+0x22ea8>
   3550c:	ldrb	r3, [fp, #-5]
   35510:	cmp	r3, #45	; 0x2d
   35514:	bne	35520 <__assert_fail@plt+0x22e34>
   35518:	mvn	r3, #0
   3551c:	b	35524 <__assert_fail@plt+0x22e38>
   35520:	mov	r3, #1
   35524:	str	r3, [fp, #-16]
   35528:	b	35530 <__assert_fail@plt+0x22e44>
   3552c:	nop			; (mov r0, r0)
   35530:	ldr	r3, [fp, #-12]
   35534:	add	r3, r3, #1
   35538:	str	r3, [fp, #-12]
   3553c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35540:	ldr	r2, [fp, #-12]
   35544:	str	r2, [r3]
   35548:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3554c:	ldr	r3, [r3]
   35550:	ldrb	r3, [r3]
   35554:	strb	r3, [fp, #-5]
   35558:	ldrb	r3, [fp, #-5]
   3555c:	mov	r0, r3
   35560:	bl	5f404 <__assert_fail@plt+0x4cd18>
   35564:	mov	r3, r0
   35568:	cmp	r3, #0
   3556c:	bne	3552c <__assert_fail@plt+0x22e40>
   35570:	ldrb	r3, [fp, #-5]
   35574:	mov	r0, r3
   35578:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   3557c:	mov	r3, r0
   35580:	eor	r3, r3, #1
   35584:	uxtb	r3, r3
   35588:	cmp	r3, #0
   3558c:	beq	3559c <__assert_fail@plt+0x22eb0>
   35590:	b	35c4c <__assert_fail@plt+0x23560>
   35594:	mov	r3, #0
   35598:	str	r3, [fp, #-16]
   3559c:	mov	r3, #0
   355a0:	str	r3, [fp, #-40]	; 0xffffffd8
   355a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   355a8:	cmp	r3, #0
   355ac:	bge	355f0 <__assert_fail@plt+0x22f04>
   355b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   355b4:	cmn	r3, #1
   355b8:	beq	355e0 <__assert_fail@plt+0x22ef4>
   355bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   355c0:	mov	r1, r3
   355c4:	mov	r0, #-2147483648	; 0x80000000
   355c8:	bl	63780 <__assert_fail@plt+0x51094>
   355cc:	mov	r3, r0
   355d0:	cmp	r3, #9
   355d4:	bgt	355e0 <__assert_fail@plt+0x22ef4>
   355d8:	mov	r3, #1
   355dc:	b	355e4 <__assert_fail@plt+0x22ef8>
   355e0:	mov	r3, #0
   355e4:	and	r3, r3, #1
   355e8:	uxtb	r3, r3
   355ec:	b	35608 <__assert_fail@plt+0x22f1c>
   355f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   355f4:	ldr	r2, [pc, #1632]	; 35c5c <__assert_fail@plt+0x23570>
   355f8:	cmp	r3, r2
   355fc:	movgt	r3, #1
   35600:	movle	r3, #0
   35604:	uxtb	r3, r3
   35608:	cmp	r3, #0
   3560c:	beq	35634 <__assert_fail@plt+0x22f48>
   35610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35614:	mov	r2, r3
   35618:	mov	r3, r2
   3561c:	lsl	r3, r3, #2
   35620:	add	r3, r3, r2
   35624:	lsl	r3, r3, #1
   35628:	str	r3, [fp, #-40]	; 0xffffffd8
   3562c:	mov	r3, #1
   35630:	b	35654 <__assert_fail@plt+0x22f68>
   35634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35638:	mov	r2, r3
   3563c:	mov	r3, r2
   35640:	lsl	r3, r3, #2
   35644:	add	r3, r3, r2
   35648:	lsl	r3, r3, #1
   3564c:	str	r3, [fp, #-40]	; 0xffffffd8
   35650:	mov	r3, #0
   35654:	cmp	r3, #0
   35658:	beq	35664 <__assert_fail@plt+0x22f78>
   3565c:	mov	r3, #63	; 0x3f
   35660:	b	35c50 <__assert_fail@plt+0x23564>
   35664:	ldr	r3, [fp, #-16]
   35668:	cmp	r3, #0
   3566c:	bge	35684 <__assert_fail@plt+0x22f98>
   35670:	ldrb	r3, [fp, #-5]
   35674:	rsb	r3, r3, #48	; 0x30
   35678:	lsr	r3, r3, #31
   3567c:	uxtb	r3, r3
   35680:	b	35694 <__assert_fail@plt+0x22fa8>
   35684:	ldrb	r3, [fp, #-5]
   35688:	sub	r3, r3, #48	; 0x30
   3568c:	lsr	r3, r3, #31
   35690:	uxtb	r3, r3
   35694:	cmp	r3, #0
   35698:	beq	356d8 <__assert_fail@plt+0x22fec>
   3569c:	ldr	r3, [fp, #-16]
   356a0:	cmp	r3, #0
   356a4:	bge	356b8 <__assert_fail@plt+0x22fcc>
   356a8:	ldrb	r3, [fp, #-5]
   356ac:	rsb	r3, r3, #48	; 0x30
   356b0:	rsb	r3, r3, #-2147483648	; 0x80000000
   356b4:	b	356c0 <__assert_fail@plt+0x22fd4>
   356b8:	ldrb	r3, [fp, #-5]
   356bc:	rsb	r3, r3, #-2147483600	; 0x80000030
   356c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   356c4:	cmp	r3, r2
   356c8:	movgt	r3, #1
   356cc:	movle	r3, #0
   356d0:	uxtb	r3, r3
   356d4:	b	3575c <__assert_fail@plt+0x23070>
   356d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   356dc:	cmp	r3, #0
   356e0:	bge	35720 <__assert_fail@plt+0x23034>
   356e4:	ldr	r3, [fp, #-16]
   356e8:	cmp	r3, #0
   356ec:	bge	356fc <__assert_fail@plt+0x23010>
   356f0:	ldrb	r3, [fp, #-5]
   356f4:	rsb	r3, r3, #48	; 0x30
   356f8:	b	35704 <__assert_fail@plt+0x23018>
   356fc:	ldrb	r3, [fp, #-5]
   35700:	sub	r3, r3, #48	; 0x30
   35704:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35708:	rsb	r2, r2, #-2147483648	; 0x80000000
   3570c:	cmp	r3, r2
   35710:	movlt	r3, #1
   35714:	movge	r3, #0
   35718:	uxtb	r3, r3
   3571c:	b	3575c <__assert_fail@plt+0x23070>
   35720:	ldr	r3, [fp, #-16]
   35724:	cmp	r3, #0
   35728:	bge	35738 <__assert_fail@plt+0x2304c>
   3572c:	ldrb	r3, [fp, #-5]
   35730:	sub	r3, r3, #-2147483599	; 0x80000031
   35734:	b	35748 <__assert_fail@plt+0x2305c>
   35738:	ldrb	r3, [fp, #-5]
   3573c:	sub	r2, r3, #48	; 0x30
   35740:	mvn	r3, #-2147483648	; 0x80000000
   35744:	sub	r3, r3, r2
   35748:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3574c:	cmp	r3, r2
   35750:	movlt	r3, #1
   35754:	movge	r3, #0
   35758:	uxtb	r3, r3
   3575c:	cmp	r3, #0
   35760:	beq	35798 <__assert_fail@plt+0x230ac>
   35764:	ldr	r3, [fp, #-16]
   35768:	cmp	r3, #0
   3576c:	bge	3577c <__assert_fail@plt+0x23090>
   35770:	ldrb	r3, [fp, #-5]
   35774:	rsb	r3, r3, #48	; 0x30
   35778:	b	35784 <__assert_fail@plt+0x23098>
   3577c:	ldrb	r3, [fp, #-5]
   35780:	sub	r3, r3, #48	; 0x30
   35784:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35788:	add	r3, r3, r2
   3578c:	str	r3, [fp, #-40]	; 0xffffffd8
   35790:	mov	r3, #1
   35794:	b	357c8 <__assert_fail@plt+0x230dc>
   35798:	ldr	r3, [fp, #-16]
   3579c:	cmp	r3, #0
   357a0:	bge	357b0 <__assert_fail@plt+0x230c4>
   357a4:	ldrb	r3, [fp, #-5]
   357a8:	rsb	r3, r3, #48	; 0x30
   357ac:	b	357b8 <__assert_fail@plt+0x230cc>
   357b0:	ldrb	r3, [fp, #-5]
   357b4:	sub	r3, r3, #48	; 0x30
   357b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   357bc:	add	r3, r3, r2
   357c0:	str	r3, [fp, #-40]	; 0xffffffd8
   357c4:	mov	r3, #0
   357c8:	cmp	r3, #0
   357cc:	beq	357d8 <__assert_fail@plt+0x230ec>
   357d0:	mov	r3, #63	; 0x3f
   357d4:	b	35c50 <__assert_fail@plt+0x23564>
   357d8:	ldr	r3, [fp, #-12]
   357dc:	add	r3, r3, #1
   357e0:	str	r3, [fp, #-12]
   357e4:	ldr	r3, [fp, #-12]
   357e8:	ldrb	r3, [r3]
   357ec:	strb	r3, [fp, #-5]
   357f0:	ldrb	r3, [fp, #-5]
   357f4:	mov	r0, r3
   357f8:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   357fc:	mov	r3, r0
   35800:	cmp	r3, #0
   35804:	bne	355a4 <__assert_fail@plt+0x22eb8>
   35808:	ldrb	r3, [fp, #-5]
   3580c:	cmp	r3, #46	; 0x2e
   35810:	beq	35820 <__assert_fail@plt+0x23134>
   35814:	ldrb	r3, [fp, #-5]
   35818:	cmp	r3, #44	; 0x2c
   3581c:	bne	35a20 <__assert_fail@plt+0x23334>
   35820:	ldr	r3, [fp, #-12]
   35824:	add	r3, r3, #1
   35828:	ldrb	r3, [r3]
   3582c:	mov	r0, r3
   35830:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   35834:	mov	r3, r0
   35838:	cmp	r3, #0
   3583c:	beq	35a20 <__assert_fail@plt+0x23334>
   35840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35844:	str	r3, [fp, #-44]	; 0xffffffd4
   35848:	ldr	r3, [fp, #-12]
   3584c:	add	r3, r3, #1
   35850:	str	r3, [fp, #-12]
   35854:	ldr	r3, [fp, #-12]
   35858:	add	r2, r3, #1
   3585c:	str	r2, [fp, #-12]
   35860:	ldrb	r3, [r3]
   35864:	sub	r3, r3, #48	; 0x30
   35868:	str	r3, [fp, #-24]	; 0xffffffe8
   3586c:	mov	r3, #2
   35870:	str	r3, [fp, #-20]	; 0xffffffec
   35874:	b	358d8 <__assert_fail@plt+0x231ec>
   35878:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3587c:	mov	r3, r2
   35880:	lsl	r3, r3, #2
   35884:	add	r3, r3, r2
   35888:	lsl	r3, r3, #1
   3588c:	str	r3, [fp, #-24]	; 0xffffffe8
   35890:	ldr	r3, [fp, #-12]
   35894:	ldrb	r3, [r3]
   35898:	mov	r0, r3
   3589c:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   358a0:	mov	r3, r0
   358a4:	cmp	r3, #0
   358a8:	beq	358cc <__assert_fail@plt+0x231e0>
   358ac:	ldr	r3, [fp, #-12]
   358b0:	add	r2, r3, #1
   358b4:	str	r2, [fp, #-12]
   358b8:	ldrb	r3, [r3]
   358bc:	sub	r3, r3, #48	; 0x30
   358c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   358c4:	add	r3, r2, r3
   358c8:	str	r3, [fp, #-24]	; 0xffffffe8
   358cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   358d0:	add	r3, r3, #1
   358d4:	str	r3, [fp, #-20]	; 0xffffffec
   358d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   358dc:	cmp	r3, #9
   358e0:	ble	35878 <__assert_fail@plt+0x2318c>
   358e4:	ldr	r3, [fp, #-16]
   358e8:	cmp	r3, #0
   358ec:	bge	3594c <__assert_fail@plt+0x23260>
   358f0:	b	35920 <__assert_fail@plt+0x23234>
   358f4:	ldr	r3, [fp, #-12]
   358f8:	ldrb	r3, [r3]
   358fc:	cmp	r3, #48	; 0x30
   35900:	beq	35914 <__assert_fail@plt+0x23228>
   35904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35908:	add	r3, r3, #1
   3590c:	str	r3, [fp, #-24]	; 0xffffffe8
   35910:	b	3593c <__assert_fail@plt+0x23250>
   35914:	ldr	r3, [fp, #-12]
   35918:	add	r3, r3, #1
   3591c:	str	r3, [fp, #-12]
   35920:	ldr	r3, [fp, #-12]
   35924:	ldrb	r3, [r3]
   35928:	mov	r0, r3
   3592c:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   35930:	mov	r3, r0
   35934:	cmp	r3, #0
   35938:	bne	358f4 <__assert_fail@plt+0x23208>
   3593c:	b	3594c <__assert_fail@plt+0x23260>
   35940:	ldr	r3, [fp, #-12]
   35944:	add	r3, r3, #1
   35948:	str	r3, [fp, #-12]
   3594c:	ldr	r3, [fp, #-12]
   35950:	ldrb	r3, [r3]
   35954:	mov	r0, r3
   35958:	bl	5f2a8 <__assert_fail@plt+0x4cbbc>
   3595c:	mov	r3, r0
   35960:	cmp	r3, #0
   35964:	bne	35940 <__assert_fail@plt+0x23254>
   35968:	ldr	r3, [fp, #-16]
   3596c:	cmp	r3, #0
   35970:	bge	359e0 <__assert_fail@plt+0x232f4>
   35974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35978:	cmp	r3, #0
   3597c:	beq	359e0 <__assert_fail@plt+0x232f4>
   35980:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35984:	cmp	r3, #0
   35988:	bge	359b0 <__assert_fail@plt+0x232c4>
   3598c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35990:	add	r3, r3, #-2147483648	; 0x80000000
   35994:	cmp	r3, #0
   35998:	bgt	359b0 <__assert_fail@plt+0x232c4>
   3599c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   359a0:	sub	r3, r3, #1
   359a4:	str	r3, [fp, #-44]	; 0xffffffd4
   359a8:	mov	r3, #1
   359ac:	b	359c0 <__assert_fail@plt+0x232d4>
   359b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   359b4:	sub	r3, r3, #1
   359b8:	str	r3, [fp, #-44]	; 0xffffffd4
   359bc:	mov	r3, #0
   359c0:	cmp	r3, #0
   359c4:	beq	359d0 <__assert_fail@plt+0x232e4>
   359c8:	mov	r3, #63	; 0x3f
   359cc:	b	35c50 <__assert_fail@plt+0x23564>
   359d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   359d4:	ldr	r3, [pc, #644]	; 35c60 <__assert_fail@plt+0x23574>
   359d8:	sub	r3, r3, r2
   359dc:	str	r3, [fp, #-24]	; 0xffffffe8
   359e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   359e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   359e8:	str	r2, [r3]
   359ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   359f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   359f4:	str	r2, [r3, #4]
   359f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   359fc:	ldr	r2, [fp, #-12]
   35a00:	str	r2, [r3]
   35a04:	ldr	r3, [fp, #-16]
   35a08:	cmp	r3, #0
   35a0c:	beq	35a18 <__assert_fail@plt+0x2332c>
   35a10:	mov	r3, #276	; 0x114
   35a14:	b	35c50 <__assert_fail@plt+0x23564>
   35a18:	ldr	r3, [pc, #580]	; 35c64 <__assert_fail@plt+0x23578>
   35a1c:	b	35c50 <__assert_fail@plt+0x23564>
   35a20:	ldr	r3, [fp, #-16]
   35a24:	lsr	r3, r3, #31
   35a28:	uxtb	r2, r3
   35a2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   35a30:	strb	r2, [r3]
   35a34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35a38:	mov	r2, r3
   35a3c:	asr	r3, r2, #31
   35a40:	ldr	r1, [fp, #-72]	; 0xffffffb8
   35a44:	strd	r2, [r1, #8]
   35a48:	ldr	r3, [fp, #-12]
   35a4c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   35a50:	ldr	r2, [r2]
   35a54:	sub	r2, r3, r2
   35a58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   35a5c:	str	r2, [r3, #16]
   35a60:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35a64:	ldr	r2, [fp, #-12]
   35a68:	str	r2, [r3]
   35a6c:	ldr	r3, [fp, #-16]
   35a70:	cmp	r3, #0
   35a74:	beq	35a80 <__assert_fail@plt+0x23394>
   35a78:	ldr	r3, [pc, #488]	; 35c68 <__assert_fail@plt+0x2357c>
   35a7c:	b	35c50 <__assert_fail@plt+0x23564>
   35a80:	ldr	r3, [pc, #484]	; 35c6c <__assert_fail@plt+0x23580>
   35a84:	b	35c50 <__assert_fail@plt+0x23564>
   35a88:	ldrb	r3, [fp, #-5]
   35a8c:	mov	r0, r3
   35a90:	bl	5f18c <__assert_fail@plt+0x4caa0>
   35a94:	mov	r3, r0
   35a98:	cmp	r3, #0
   35a9c:	beq	35ba0 <__assert_fail@plt+0x234b4>
   35aa0:	sub	r3, fp, #64	; 0x40
   35aa4:	str	r3, [fp, #-28]	; 0xffffffe4
   35aa8:	sub	r3, fp, #64	; 0x40
   35aac:	add	r3, r3, #19
   35ab0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35ab4:	cmp	r3, r2
   35ab8:	bls	35ad0 <__assert_fail@plt+0x233e4>
   35abc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35ac0:	add	r2, r3, #1
   35ac4:	str	r2, [fp, #-28]	; 0xffffffe4
   35ac8:	ldrb	r2, [fp, #-5]
   35acc:	strb	r2, [r3]
   35ad0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35ad4:	ldr	r3, [r3]
   35ad8:	add	r2, r3, #1
   35adc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35ae0:	str	r2, [r3]
   35ae4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35ae8:	ldr	r3, [r3]
   35aec:	ldrb	r3, [r3]
   35af0:	strb	r3, [fp, #-5]
   35af4:	ldrb	r3, [fp, #-5]
   35af8:	mov	r0, r3
   35afc:	bl	5f18c <__assert_fail@plt+0x4caa0>
   35b00:	mov	r3, r0
   35b04:	cmp	r3, #0
   35b08:	bne	35aa8 <__assert_fail@plt+0x233bc>
   35b0c:	ldrb	r3, [fp, #-5]
   35b10:	cmp	r3, #46	; 0x2e
   35b14:	beq	35aa8 <__assert_fail@plt+0x233bc>
   35b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35b1c:	mov	r2, #0
   35b20:	strb	r2, [r3]
   35b24:	sub	r3, fp, #64	; 0x40
   35b28:	mov	r1, r3
   35b2c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   35b30:	bl	35010 <__assert_fail@plt+0x22924>
   35b34:	str	r0, [fp, #-36]	; 0xffffffdc
   35b38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35b3c:	cmp	r3, #0
   35b40:	bne	35b7c <__assert_fail@plt+0x23490>
   35b44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   35b48:	bl	30028 <__assert_fail@plt+0x1d93c>
   35b4c:	mov	r3, r0
   35b50:	cmp	r3, #0
   35b54:	beq	35b74 <__assert_fail@plt+0x23488>
   35b58:	ldr	r0, [pc, #272]	; 35c70 <__assert_fail@plt+0x23584>
   35b5c:	bl	12398 <gettext@plt>
   35b60:	mov	r2, r0
   35b64:	sub	r3, fp, #64	; 0x40
   35b68:	mov	r1, r3
   35b6c:	mov	r0, r2
   35b70:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   35b74:	mov	r3, #63	; 0x3f
   35b78:	b	35c50 <__assert_fail@plt+0x23564>
   35b7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35b80:	ldr	r3, [r3, #8]
   35b84:	mov	r2, r3
   35b88:	asr	r3, r2, #31
   35b8c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   35b90:	strd	r2, [r1]
   35b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35b98:	ldr	r3, [r3, #4]
   35b9c:	b	35c50 <__assert_fail@plt+0x23564>
   35ba0:	ldrb	r3, [fp, #-5]
   35ba4:	cmp	r3, #40	; 0x28
   35ba8:	beq	35bd4 <__assert_fail@plt+0x234e8>
   35bac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35bb0:	ldr	r3, [r3]
   35bb4:	add	r1, r3, #1
   35bb8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   35bbc:	str	r1, [r2]
   35bc0:	ldrb	r3, [r3]
   35bc4:	mov	r0, r3
   35bc8:	bl	2ff9c <__assert_fail@plt+0x1d8b0>
   35bcc:	mov	r3, r0
   35bd0:	b	35c50 <__assert_fail@plt+0x23564>
   35bd4:	mov	r3, #0
   35bd8:	str	r3, [fp, #-32]	; 0xffffffe0
   35bdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35be0:	ldr	r3, [r3]
   35be4:	add	r1, r3, #1
   35be8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   35bec:	str	r1, [r2]
   35bf0:	ldrb	r3, [r3]
   35bf4:	strb	r3, [fp, #-5]
   35bf8:	ldrb	r3, [fp, #-5]
   35bfc:	cmp	r3, #0
   35c00:	bne	35c0c <__assert_fail@plt+0x23520>
   35c04:	ldrb	r3, [fp, #-5]
   35c08:	b	35c50 <__assert_fail@plt+0x23564>
   35c0c:	ldrb	r3, [fp, #-5]
   35c10:	cmp	r3, #40	; 0x28
   35c14:	bne	35c28 <__assert_fail@plt+0x2353c>
   35c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35c1c:	add	r3, r3, #1
   35c20:	str	r3, [fp, #-32]	; 0xffffffe0
   35c24:	b	35c40 <__assert_fail@plt+0x23554>
   35c28:	ldrb	r3, [fp, #-5]
   35c2c:	cmp	r3, #41	; 0x29
   35c30:	bne	35c40 <__assert_fail@plt+0x23554>
   35c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35c38:	sub	r3, r3, #1
   35c3c:	str	r3, [fp, #-32]	; 0xffffffe0
   35c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35c44:	cmp	r3, #0
   35c48:	bne	35bdc <__assert_fail@plt+0x234f0>
   35c4c:	b	35478 <__assert_fail@plt+0x22d8c>
   35c50:	mov	r0, r3
   35c54:	sub	sp, fp, #4
   35c58:	pop	{fp, pc}
   35c5c:	stcleq	12, cr12, [ip], {204}	; 0xcc
   35c60:	blcc	fe6e8468 <stdout@@GLIBC_2.4+0xfe66bd34>
   35c64:	andeq	r0, r0, r5, lsl r1
   35c68:	andeq	r0, r0, r2, lsl r1
   35c6c:	andeq	r0, r0, r3, lsl r1
   35c70:	andeq	r9, r6, r4, ror #22
   35c74:	push	{fp}		; (str fp, [sp, #-4]!)
   35c78:	add	fp, sp, #0
   35c7c:	sub	sp, sp, #12
   35c80:	str	r0, [fp, #-8]
   35c84:	str	r1, [fp, #-12]
   35c88:	mov	r3, #0
   35c8c:	mov	r0, r3
   35c90:	add	sp, fp, #0
   35c94:	pop	{fp}		; (ldr fp, [sp], #4)
   35c98:	bx	lr
   35c9c:	push	{fp}		; (str fp, [sp, #-4]!)
   35ca0:	add	fp, sp, #0
   35ca4:	sub	sp, sp, #12
   35ca8:	str	r0, [fp, #-8]
   35cac:	str	r1, [fp, #-12]
   35cb0:	ldr	r3, [fp, #-12]
   35cb4:	ldr	r3, [r3, #24]
   35cb8:	cmp	r3, #0
   35cbc:	bge	35cc8 <__assert_fail@plt+0x235dc>
   35cc0:	mov	r3, #0
   35cc4:	b	35d64 <__assert_fail@plt+0x23678>
   35cc8:	ldr	r3, [fp, #-8]
   35ccc:	ldr	r2, [r3]
   35cd0:	ldr	r3, [fp, #-12]
   35cd4:	ldr	r3, [r3]
   35cd8:	eor	r2, r2, r3
   35cdc:	ldr	r3, [fp, #-8]
   35ce0:	ldr	r1, [r3, #4]
   35ce4:	ldr	r3, [fp, #-12]
   35ce8:	ldr	r3, [r3, #4]
   35cec:	eor	r3, r3, r1
   35cf0:	orr	r2, r2, r3
   35cf4:	ldr	r3, [fp, #-8]
   35cf8:	ldr	r1, [r3, #8]
   35cfc:	ldr	r3, [fp, #-12]
   35d00:	ldr	r3, [r3, #8]
   35d04:	eor	r3, r3, r1
   35d08:	orr	r2, r2, r3
   35d0c:	ldr	r3, [fp, #-8]
   35d10:	ldr	r1, [r3, #12]
   35d14:	ldr	r3, [fp, #-12]
   35d18:	ldr	r3, [r3, #12]
   35d1c:	eor	r3, r3, r1
   35d20:	orr	r2, r2, r3
   35d24:	ldr	r3, [fp, #-8]
   35d28:	ldr	r1, [r3, #16]
   35d2c:	ldr	r3, [fp, #-12]
   35d30:	ldr	r3, [r3, #16]
   35d34:	eor	r3, r3, r1
   35d38:	orr	r2, r2, r3
   35d3c:	ldr	r3, [fp, #-8]
   35d40:	ldr	r1, [r3, #20]
   35d44:	ldr	r3, [fp, #-12]
   35d48:	ldr	r3, [r3, #20]
   35d4c:	eor	r3, r3, r1
   35d50:	orr	r3, r2, r3
   35d54:	cmp	r3, #0
   35d58:	moveq	r3, #1
   35d5c:	movne	r3, #0
   35d60:	uxtb	r3, r3
   35d64:	mov	r0, r3
   35d68:	add	sp, fp, #0
   35d6c:	pop	{fp}		; (ldr fp, [sp], #4)
   35d70:	bx	lr
   35d74:	push	{r4, r5, fp, lr}
   35d78:	add	fp, sp, #12
   35d7c:	sub	sp, sp, #64	; 0x40
   35d80:	str	r0, [fp, #-56]	; 0xffffffc8
   35d84:	str	r1, [fp, #-60]	; 0xffffffc4
   35d88:	str	r2, [fp, #-64]	; 0xffffffc0
   35d8c:	str	r3, [fp, #-68]	; 0xffffffbc
   35d90:	ldr	r1, [fp, #-68]	; 0xffffffbc
   35d94:	mov	r3, #0
   35d98:	str	r3, [sp, #4]
   35d9c:	mov	r3, #0
   35da0:	str	r3, [sp]
   35da4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35da8:	ldr	r2, [pc, #208]	; 35e80 <__assert_fail@plt+0x23794>
   35dac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35db0:	bl	608a0 <__assert_fail@plt+0x4e1b4>
   35db4:	mov	r3, r0
   35db8:	str	r3, [fp, #-20]	; 0xffffffec
   35dbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35dc0:	cmp	r3, #0
   35dc4:	beq	35e70 <__assert_fail@plt+0x23784>
   35dc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   35dcc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35dd0:	cmp	r2, r3
   35dd4:	bge	35e70 <__assert_fail@plt+0x23784>
   35dd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35ddc:	ldr	r3, [r3, #176]	; 0xb0
   35de0:	cmp	r3, #0
   35de4:	beq	35e70 <__assert_fail@plt+0x23784>
   35de8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35dec:	ldr	r3, [r3, #24]
   35df0:	str	r3, [fp, #-16]
   35df4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35df8:	ldr	r3, [r3, #164]	; 0xa4
   35dfc:	cmp	r3, #0
   35e00:	beq	35e30 <__assert_fail@plt+0x23744>
   35e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35e08:	ldr	r3, [r3, #176]	; 0xb0
   35e0c:	cmp	r3, #0
   35e10:	bne	35e30 <__assert_fail@plt+0x23744>
   35e14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35e18:	ldr	r3, [r3, #20]
   35e1c:	cmp	r3, #0
   35e20:	ble	35e30 <__assert_fail@plt+0x23744>
   35e24:	ldr	r3, [fp, #-16]
   35e28:	add	r3, r3, #3600	; 0xe10
   35e2c:	str	r3, [fp, #-16]
   35e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   35e34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   35e38:	add	r4, r2, r3
   35e3c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   35e44:	sub	r3, r2, r3
   35e48:	mov	r5, r3
   35e4c:	sub	r3, fp, #48	; 0x30
   35e50:	mov	r1, r3
   35e54:	ldr	r0, [fp, #-16]
   35e58:	bl	31308 <__assert_fail@plt+0x1ec1c>
   35e5c:	mov	r3, r0
   35e60:	ldr	r2, [pc, #28]	; 35e84 <__assert_fail@plt+0x23798>
   35e64:	mov	r1, r5
   35e68:	mov	r0, r4
   35e6c:	bl	1241c <snprintf@plt>
   35e70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35e74:	mov	r0, r3
   35e78:	sub	sp, fp, #12
   35e7c:	pop	{r4, r5, fp, pc}
   35e80:	andeq	r9, r6, r0, lsl #23
   35e84:	muleq	r6, ip, fp
   35e88:	push	{r4, fp, lr}
   35e8c:	add	fp, sp, #8
   35e90:	sub	sp, sp, #44	; 0x2c
   35e94:	str	r0, [fp, #-32]	; 0xffffffe0
   35e98:	str	r1, [fp, #-36]	; 0xffffffdc
   35e9c:	str	r2, [fp, #-40]	; 0xffffffd8
   35ea0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   35ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35ea8:	ldr	r3, [r3, #20]
   35eac:	sub	r2, fp, #28
   35eb0:	mov	r1, r2
   35eb4:	mov	r0, r3
   35eb8:	bl	34b2c <__assert_fail@plt+0x22440>
   35ebc:	mov	r1, r0
   35ec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35ec4:	ldr	r3, [r3, #16]
   35ec8:	add	r3, r3, #1
   35ecc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   35ed0:	ldr	r2, [r2, #12]
   35ed4:	str	r2, [sp, #4]
   35ed8:	str	r3, [sp]
   35edc:	mov	r3, r1
   35ee0:	ldr	r2, [pc, #24]	; 35f00 <__assert_fail@plt+0x23814>
   35ee4:	mov	r1, r4
   35ee8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35eec:	bl	1241c <snprintf@plt>
   35ef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35ef4:	mov	r0, r3
   35ef8:	sub	sp, fp, #8
   35efc:	pop	{r4, fp, pc}
   35f00:	andeq	r9, r6, r4, lsr #23
   35f04:	push	{fp, lr}
   35f08:	add	fp, sp, #4
   35f0c:	sub	sp, sp, #24
   35f10:	str	r0, [fp, #-8]
   35f14:	str	r1, [fp, #-12]
   35f18:	str	r2, [fp, #-16]
   35f1c:	ldr	r1, [fp, #-16]
   35f20:	ldr	r3, [fp, #-8]
   35f24:	ldr	r0, [r3, #8]
   35f28:	ldr	r3, [fp, #-8]
   35f2c:	ldr	r3, [r3, #4]
   35f30:	ldr	r2, [fp, #-8]
   35f34:	ldr	r2, [r2]
   35f38:	str	r2, [sp, #4]
   35f3c:	str	r3, [sp]
   35f40:	mov	r3, r0
   35f44:	ldr	r2, [pc, #20]	; 35f60 <__assert_fail@plt+0x23874>
   35f48:	ldr	r0, [fp, #-12]
   35f4c:	bl	1241c <snprintf@plt>
   35f50:	ldr	r3, [fp, #-12]
   35f54:	mov	r0, r3
   35f58:	sub	sp, fp, #4
   35f5c:	pop	{fp, pc}
   35f60:			; <UNDEFINED> instruction: 0x00069bbc
   35f64:	push	{r4, fp, lr}
   35f68:	add	fp, sp, #8
   35f6c:	sub	sp, sp, #156	; 0x9c
   35f70:	str	r0, [fp, #-128]	; 0xffffff80
   35f74:	str	r1, [fp, #-132]	; 0xffffff7c
   35f78:	str	r2, [fp, #-136]	; 0xffffff78
   35f7c:	strb	r3, [fp, #-137]	; 0xffffff77
   35f80:	ldr	r3, [fp, #-128]	; 0xffffff80
   35f84:	ldr	r2, [r3]
   35f88:	ldr	r3, [fp, #-132]	; 0xffffff7c
   35f8c:	ldr	r3, [r3]
   35f90:	cmp	r2, r3
   35f94:	moveq	r3, #1
   35f98:	movne	r3, #0
   35f9c:	strb	r3, [fp, #-17]	; 0xffffffef
   35fa0:	ldr	r3, [fp, #-128]	; 0xffffff80
   35fa4:	ldr	r2, [r3, #4]
   35fa8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   35fac:	ldr	r3, [r3, #4]
   35fb0:	cmp	r2, r3
   35fb4:	moveq	r3, #1
   35fb8:	movne	r3, #0
   35fbc:	strb	r3, [fp, #-18]	; 0xffffffee
   35fc0:	ldr	r3, [fp, #-128]	; 0xffffff80
   35fc4:	ldr	r2, [r3, #8]
   35fc8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   35fcc:	ldr	r3, [r3, #8]
   35fd0:	cmp	r2, r3
   35fd4:	moveq	r3, #1
   35fd8:	movne	r3, #0
   35fdc:	strb	r3, [fp, #-19]	; 0xffffffed
   35fe0:	ldr	r3, [fp, #-128]	; 0xffffff80
   35fe4:	ldr	r2, [r3, #12]
   35fe8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   35fec:	ldr	r3, [r3, #12]
   35ff0:	cmp	r2, r3
   35ff4:	moveq	r3, #1
   35ff8:	movne	r3, #0
   35ffc:	strb	r3, [fp, #-20]	; 0xffffffec
   36000:	ldr	r3, [fp, #-128]	; 0xffffff80
   36004:	ldr	r2, [r3, #16]
   36008:	ldr	r3, [fp, #-132]	; 0xffffff7c
   3600c:	ldr	r3, [r3, #16]
   36010:	cmp	r2, r3
   36014:	moveq	r3, #1
   36018:	movne	r3, #0
   3601c:	strb	r3, [fp, #-21]	; 0xffffffeb
   36020:	ldr	r3, [fp, #-128]	; 0xffffff80
   36024:	ldr	r2, [r3, #20]
   36028:	ldr	r3, [fp, #-132]	; 0xffffff7c
   3602c:	ldr	r3, [r3, #20]
   36030:	cmp	r2, r3
   36034:	moveq	r3, #1
   36038:	movne	r3, #0
   3603c:	strb	r3, [fp, #-22]	; 0xffffffea
   36040:	ldrb	r3, [fp, #-17]	; 0xffffffef
   36044:	cmp	r3, #0
   36048:	beq	36098 <__assert_fail@plt+0x239ac>
   3604c:	ldrb	r3, [fp, #-18]	; 0xffffffee
   36050:	cmp	r3, #0
   36054:	beq	36098 <__assert_fail@plt+0x239ac>
   36058:	ldrb	r3, [fp, #-19]	; 0xffffffed
   3605c:	eor	r3, r3, #1
   36060:	uxtb	r3, r3
   36064:	cmp	r3, #0
   36068:	beq	36098 <__assert_fail@plt+0x239ac>
   3606c:	ldrb	r3, [fp, #-20]	; 0xffffffec
   36070:	cmp	r3, #0
   36074:	beq	36098 <__assert_fail@plt+0x239ac>
   36078:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3607c:	cmp	r3, #0
   36080:	beq	36098 <__assert_fail@plt+0x239ac>
   36084:	ldrb	r3, [fp, #-22]	; 0xffffffea
   36088:	cmp	r3, #0
   3608c:	beq	36098 <__assert_fail@plt+0x239ac>
   36090:	mov	r3, #1
   36094:	b	3609c <__assert_fail@plt+0x239b0>
   36098:	mov	r3, #0
   3609c:	strb	r3, [fp, #-23]	; 0xffffffe9
   360a0:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   360a4:	and	r3, r3, #1
   360a8:	strb	r3, [fp, #-23]	; 0xffffffe9
   360ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   360b0:	bl	30028 <__assert_fail@plt+0x1d93c>
   360b4:	mov	r3, r0
   360b8:	eor	r3, r3, #1
   360bc:	uxtb	r3, r3
   360c0:	cmp	r3, #0
   360c4:	bne	36334 <__assert_fail@plt+0x23c48>
   360c8:	ldr	r0, [pc, #624]	; 36340 <__assert_fail@plt+0x23c54>
   360cc:	bl	12398 <gettext@plt>
   360d0:	mov	r3, r0
   360d4:	mov	r0, r3
   360d8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   360dc:	ldr	r0, [pc, #608]	; 36344 <__assert_fail@plt+0x23c58>
   360e0:	bl	12398 <gettext@plt>
   360e4:	mov	r4, r0
   360e8:	sub	r2, fp, #124	; 0x7c
   360ec:	mov	r3, #100	; 0x64
   360f0:	ldr	r1, [fp, #-136]	; 0xffffff78
   360f4:	ldr	r0, [fp, #-128]	; 0xffffff80
   360f8:	bl	35d74 <__assert_fail@plt+0x23688>
   360fc:	mov	r3, r0
   36100:	mov	r1, r3
   36104:	mov	r0, r4
   36108:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3610c:	ldr	r0, [pc, #564]	; 36348 <__assert_fail@plt+0x23c5c>
   36110:	bl	12398 <gettext@plt>
   36114:	mov	r4, r0
   36118:	sub	r2, fp, #124	; 0x7c
   3611c:	mov	r3, #100	; 0x64
   36120:	ldr	r1, [fp, #-136]	; 0xffffff78
   36124:	ldr	r0, [fp, #-132]	; 0xffffff7c
   36128:	bl	35d74 <__assert_fail@plt+0x23688>
   3612c:	mov	r3, r0
   36130:	mov	r1, r3
   36134:	mov	r0, r4
   36138:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3613c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   36140:	cmp	r3, #0
   36144:	beq	36150 <__assert_fail@plt+0x23a64>
   36148:	ldr	r4, [pc, #508]	; 3634c <__assert_fail@plt+0x23c60>
   3614c:	b	36154 <__assert_fail@plt+0x23a68>
   36150:	ldr	r4, [pc, #504]	; 36350 <__assert_fail@plt+0x23c64>
   36154:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   36158:	cmp	r3, #0
   3615c:	beq	36168 <__assert_fail@plt+0x23a7c>
   36160:	ldr	r3, [pc, #484]	; 3634c <__assert_fail@plt+0x23c60>
   36164:	b	3616c <__assert_fail@plt+0x23a80>
   36168:	ldr	r3, [pc, #484]	; 36354 <__assert_fail@plt+0x23c68>
   3616c:	ldrb	r2, [fp, #-20]	; 0xffffffec
   36170:	cmp	r2, #0
   36174:	beq	36180 <__assert_fail@plt+0x23a94>
   36178:	ldr	r2, [pc, #460]	; 3634c <__assert_fail@plt+0x23c60>
   3617c:	b	36184 <__assert_fail@plt+0x23a98>
   36180:	ldr	r2, [pc, #460]	; 36354 <__assert_fail@plt+0x23c68>
   36184:	ldrb	r1, [fp, #-19]	; 0xffffffed
   36188:	cmp	r1, #0
   3618c:	beq	36198 <__assert_fail@plt+0x23aac>
   36190:	ldr	r1, [pc, #436]	; 3634c <__assert_fail@plt+0x23c60>
   36194:	b	3619c <__assert_fail@plt+0x23ab0>
   36198:	ldr	r1, [pc, #436]	; 36354 <__assert_fail@plt+0x23c68>
   3619c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   361a0:	cmp	r0, #0
   361a4:	beq	361b0 <__assert_fail@plt+0x23ac4>
   361a8:	ldr	r0, [pc, #412]	; 3634c <__assert_fail@plt+0x23c60>
   361ac:	b	361b4 <__assert_fail@plt+0x23ac8>
   361b0:	ldr	r0, [pc, #412]	; 36354 <__assert_fail@plt+0x23c68>
   361b4:	ldrb	ip, [fp, #-17]	; 0xffffffef
   361b8:	cmp	ip, #0
   361bc:	beq	361c8 <__assert_fail@plt+0x23adc>
   361c0:	ldr	ip, [pc, #388]	; 3634c <__assert_fail@plt+0x23c60>
   361c4:	b	361cc <__assert_fail@plt+0x23ae0>
   361c8:	ldr	ip, [pc, #388]	; 36354 <__assert_fail@plt+0x23c68>
   361cc:	sub	lr, fp, #124	; 0x7c
   361d0:	str	ip, [sp, #16]
   361d4:	str	r0, [sp, #12]
   361d8:	str	r1, [sp, #8]
   361dc:	str	r2, [sp, #4]
   361e0:	str	r3, [sp]
   361e4:	mov	r3, r4
   361e8:	ldr	r2, [pc, #360]	; 36358 <__assert_fail@plt+0x23c6c>
   361ec:	mov	r1, #100	; 0x64
   361f0:	mov	r0, lr
   361f4:	bl	1241c <snprintf@plt>
   361f8:	str	r0, [fp, #-16]
   361fc:	ldr	r3, [fp, #-16]
   36200:	cmp	r3, #0
   36204:	blt	36268 <__assert_fail@plt+0x23b7c>
   36208:	ldr	r3, [fp, #-16]
   3620c:	cmp	r3, #99	; 0x63
   36210:	bls	3622c <__assert_fail@plt+0x23b40>
   36214:	mov	r3, #99	; 0x63
   36218:	str	r3, [fp, #-16]
   3621c:	b	3622c <__assert_fail@plt+0x23b40>
   36220:	ldr	r3, [fp, #-16]
   36224:	sub	r3, r3, #1
   36228:	str	r3, [fp, #-16]
   3622c:	ldr	r3, [fp, #-16]
   36230:	cmp	r3, #0
   36234:	ble	36254 <__assert_fail@plt+0x23b68>
   36238:	ldr	r3, [fp, #-16]
   3623c:	sub	r3, r3, #1
   36240:	sub	r2, fp, #12
   36244:	add	r3, r2, r3
   36248:	ldrb	r3, [r3, #-112]	; 0xffffff90
   3624c:	cmp	r3, #32
   36250:	beq	36220 <__assert_fail@plt+0x23b34>
   36254:	sub	r2, fp, #124	; 0x7c
   36258:	ldr	r3, [fp, #-16]
   3625c:	add	r3, r2, r3
   36260:	mov	r2, #0
   36264:	strb	r2, [r3]
   36268:	sub	r3, fp, #124	; 0x7c
   3626c:	mov	r1, r3
   36270:	ldr	r0, [pc, #228]	; 3635c <__assert_fail@plt+0x23c70>
   36274:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36278:	ldr	r0, [pc, #224]	; 36360 <__assert_fail@plt+0x23c74>
   3627c:	bl	12398 <gettext@plt>
   36280:	mov	r3, r0
   36284:	mov	r0, r3
   36288:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3628c:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   36290:	cmp	r3, #0
   36294:	beq	362ac <__assert_fail@plt+0x23bc0>
   36298:	ldr	r0, [pc, #196]	; 36364 <__assert_fail@plt+0x23c78>
   3629c:	bl	12398 <gettext@plt>
   362a0:	mov	r3, r0
   362a4:	mov	r0, r3
   362a8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   362ac:	ldrb	r3, [fp, #-20]	; 0xffffffec
   362b0:	eor	r3, r3, #1
   362b4:	uxtb	r3, r3
   362b8:	cmp	r3, #0
   362bc:	beq	362e8 <__assert_fail@plt+0x23bfc>
   362c0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   362c4:	eor	r3, r3, #1
   362c8:	uxtb	r3, r3
   362cc:	cmp	r3, #0
   362d0:	beq	362e8 <__assert_fail@plt+0x23bfc>
   362d4:	ldr	r0, [pc, #140]	; 36368 <__assert_fail@plt+0x23c7c>
   362d8:	bl	12398 <gettext@plt>
   362dc:	mov	r3, r0
   362e0:	mov	r0, r3
   362e4:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   362e8:	ldr	r0, [pc, #124]	; 3636c <__assert_fail@plt+0x23c80>
   362ec:	bl	12398 <gettext@plt>
   362f0:	mov	r3, r0
   362f4:	mov	r0, r3
   362f8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   362fc:	ldrb	r3, [fp, #-137]	; 0xffffff77
   36300:	cmp	r3, #0
   36304:	beq	36318 <__assert_fail@plt+0x23c2c>
   36308:	ldr	r0, [pc, #96]	; 36370 <__assert_fail@plt+0x23c84>
   3630c:	bl	12398 <gettext@plt>
   36310:	mov	r3, r0
   36314:	b	36324 <__assert_fail@plt+0x23c38>
   36318:	ldr	r0, [pc, #84]	; 36374 <__assert_fail@plt+0x23c88>
   3631c:	bl	12398 <gettext@plt>
   36320:	mov	r3, r0
   36324:	mov	r1, r3
   36328:	ldr	r0, [pc, #72]	; 36378 <__assert_fail@plt+0x23c8c>
   3632c:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36330:	b	36338 <__assert_fail@plt+0x23c4c>
   36334:	nop			; (mov r0, r0)
   36338:	sub	sp, fp, #8
   3633c:	pop	{r4, fp, pc}
   36340:	andeq	r9, r6, ip, asr #23
   36344:	strdeq	r9, [r6], -r0
   36348:	andeq	r9, r6, r0, lsl ip
   3634c:	strdeq	r8, [r6], -r4
   36350:	andeq	r9, r6, r0, lsr ip
   36354:	andeq	r9, r6, r8, lsr ip
   36358:	andeq	r9, r6, ip, lsr ip
   3635c:	andeq	r9, r6, r8, ror ip
   36360:	andeq	r9, r6, ip, ror ip
   36364:	muleq	r6, r4, ip
   36368:	andeq	r9, r6, r8, asr #25
   3636c:	strdeq	r9, [r6], -r0
   36370:	andeq	r9, r6, r4, lsl sp
   36374:	andeq	r9, r6, r8, lsr #26
   36378:	andeq	r9, r6, ip, lsr sp
   3637c:	push	{r4, r5, r6, r7, r8, fp, lr}
   36380:	add	fp, sp, #24
   36384:	sub	sp, sp, #1120	; 0x460
   36388:	sub	sp, sp, #4
   3638c:	str	r0, [fp, #-1112]	; 0xfffffba8
   36390:	str	r1, [fp, #-1116]	; 0xfffffba4
   36394:	str	r2, [fp, #-1120]	; 0xfffffba0
   36398:	str	r3, [fp, #-1124]	; 0xfffffb9c
   3639c:	mov	r3, #0
   363a0:	strb	r3, [fp, #-29]	; 0xffffffe3
   363a4:	ldr	r0, [fp, #-1116]	; 0xfffffba4
   363a8:	bl	123bc <strlen@plt>
   363ac:	mov	r2, r0
   363b0:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   363b4:	add	r3, r3, r2
   363b8:	str	r3, [fp, #-72]	; 0xffffffb8
   363bc:	mov	r3, #0
   363c0:	str	r3, [fp, #-36]	; 0xffffffdc
   363c4:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   363c8:	cmp	r3, #0
   363cc:	bne	363e4 <__assert_fail@plt+0x23cf8>
   363d0:	sub	r3, fp, #492	; 0x1ec
   363d4:	mov	r0, r3
   363d8:	bl	5fe38 <__assert_fail@plt+0x4d74c>
   363dc:	sub	r3, fp, #492	; 0x1ec
   363e0:	str	r3, [fp, #-1120]	; 0xfffffba0
   363e4:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   363e8:	ldr	r3, [r3]
   363ec:	str	r3, [fp, #-40]	; 0xffffffd8
   363f0:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   363f4:	ldr	r3, [r3, #4]
   363f8:	str	r3, [fp, #-76]	; 0xffffffb4
   363fc:	b	3640c <__assert_fail@plt+0x23d20>
   36400:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   36404:	add	r3, r3, #1
   36408:	str	r3, [fp, #-1116]	; 0xfffffba4
   3640c:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   36410:	ldrb	r3, [r3]
   36414:	strb	r3, [fp, #-77]	; 0xffffffb3
   36418:	ldrb	r3, [fp, #-77]	; 0xffffffb3
   3641c:	mov	r0, r3
   36420:	bl	5f404 <__assert_fail@plt+0x4cd18>
   36424:	mov	r3, r0
   36428:	cmp	r3, #0
   3642c:	bne	36400 <__assert_fail@plt+0x23d14>
   36430:	ldr	r3, [fp, #4]
   36434:	str	r3, [fp, #-44]	; 0xffffffd4
   36438:	sub	r3, fp, #548	; 0x224
   3643c:	mov	r2, #56	; 0x38
   36440:	mov	r1, #0
   36444:	mov	r0, r3
   36448:	bl	12434 <memset@plt>
   3644c:	mov	r2, #4
   36450:	ldr	r1, [pc, #3924]	; 373ac <__assert_fail@plt+0x24cc0>
   36454:	ldr	r0, [fp, #-1116]	; 0xfffffba4
   36458:	bl	1268c <strncmp@plt>
   3645c:	mov	r3, r0
   36460:	cmp	r3, #0
   36464:	bne	36624 <__assert_fail@plt+0x23f38>
   36468:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   3646c:	add	r3, r3, #4
   36470:	str	r3, [fp, #-84]	; 0xffffffac
   36474:	mov	r3, #1
   36478:	str	r3, [fp, #-48]	; 0xffffffd0
   3647c:	ldr	r3, [fp, #-84]	; 0xffffffac
   36480:	str	r3, [fp, #-52]	; 0xffffffcc
   36484:	b	36614 <__assert_fail@plt+0x23f28>
   36488:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3648c:	ldrb	r3, [r3]
   36490:	cmp	r3, #92	; 0x5c
   36494:	bne	364c8 <__assert_fail@plt+0x23ddc>
   36498:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3649c:	add	r3, r3, #1
   364a0:	str	r3, [fp, #-52]	; 0xffffffcc
   364a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   364a8:	ldrb	r3, [r3]
   364ac:	cmp	r3, #92	; 0x5c
   364b0:	beq	365fc <__assert_fail@plt+0x23f10>
   364b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   364b8:	ldrb	r3, [r3]
   364bc:	cmp	r3, #34	; 0x22
   364c0:	beq	365fc <__assert_fail@plt+0x23f10>
   364c4:	b	36624 <__assert_fail@plt+0x23f38>
   364c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   364cc:	ldrb	r3, [r3]
   364d0:	cmp	r3, #34	; 0x22
   364d4:	bne	365fc <__assert_fail@plt+0x23f10>
   364d8:	sub	r3, fp, #484	; 0x1e4
   364dc:	str	r3, [fp, #-56]	; 0xffffffc8
   364e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   364e4:	cmp	r3, #100	; 0x64
   364e8:	ble	36514 <__assert_fail@plt+0x23e28>
   364ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   364f0:	mov	r0, r3
   364f4:	bl	42ba8 <__assert_fail@plt+0x304bc>
   364f8:	mov	r3, r0
   364fc:	str	r3, [fp, #-36]	; 0xffffffdc
   36500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36504:	cmp	r3, #0
   36508:	beq	3935c <__assert_fail@plt+0x26c70>
   3650c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36510:	str	r3, [fp, #-56]	; 0xffffffc8
   36514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36518:	str	r3, [fp, #-60]	; 0xffffffc4
   3651c:	ldr	r3, [fp, #-84]	; 0xffffffac
   36520:	str	r3, [fp, #-52]	; 0xffffffcc
   36524:	b	36574 <__assert_fail@plt+0x23e88>
   36528:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3652c:	add	r2, r3, #1
   36530:	str	r2, [fp, #-60]	; 0xffffffc4
   36534:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36538:	ldrb	r2, [r2]
   3653c:	cmp	r2, #92	; 0x5c
   36540:	moveq	r2, #1
   36544:	movne	r2, #0
   36548:	uxtb	r2, r2
   3654c:	mov	r1, r2
   36550:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36554:	add	r2, r2, r1
   36558:	str	r2, [fp, #-52]	; 0xffffffcc
   3655c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36560:	ldrb	r2, [r2]
   36564:	strb	r2, [r3]
   36568:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3656c:	add	r3, r3, #1
   36570:	str	r3, [fp, #-52]	; 0xffffffcc
   36574:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36578:	ldrb	r3, [r3]
   3657c:	cmp	r3, #34	; 0x22
   36580:	bne	36528 <__assert_fail@plt+0x23e3c>
   36584:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36588:	mov	r2, #0
   3658c:	strb	r2, [r3]
   36590:	ldr	r0, [fp, #-56]	; 0xffffffc8
   36594:	bl	5df0c <__assert_fail@plt+0x4b820>
   36598:	str	r0, [fp, #-88]	; 0xffffffa8
   3659c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   365a0:	cmp	r3, #0
   365a4:	beq	39364 <__assert_fail@plt+0x26c78>
   365a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   365ac:	str	r3, [fp, #-44]	; 0xffffffd4
   365b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   365b4:	str	r3, [fp, #8]
   365b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   365bc:	add	r3, r3, #1
   365c0:	str	r3, [fp, #-1116]	; 0xfffffba4
   365c4:	b	365d4 <__assert_fail@plt+0x23ee8>
   365c8:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   365cc:	add	r3, r3, #1
   365d0:	str	r3, [fp, #-1116]	; 0xfffffba4
   365d4:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   365d8:	ldrb	r3, [r3]
   365dc:	strb	r3, [fp, #-77]	; 0xffffffb3
   365e0:	ldrb	r3, [fp, #-77]	; 0xffffffb3
   365e4:	mov	r0, r3
   365e8:	bl	5f404 <__assert_fail@plt+0x4cd18>
   365ec:	mov	r3, r0
   365f0:	cmp	r3, #0
   365f4:	bne	365c8 <__assert_fail@plt+0x23edc>
   365f8:	b	36624 <__assert_fail@plt+0x23f38>
   365fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36600:	add	r3, r3, #1
   36604:	str	r3, [fp, #-52]	; 0xffffffcc
   36608:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3660c:	add	r3, r3, #1
   36610:	str	r3, [fp, #-48]	; 0xffffffd0
   36614:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36618:	ldrb	r3, [r3]
   3661c:	cmp	r3, #0
   36620:	bne	36488 <__assert_fail@plt+0x23d9c>
   36624:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   36628:	sub	r2, fp, #592	; 0x250
   3662c:	mov	r1, r3
   36630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   36634:	bl	5e4ac <__assert_fail@plt+0x4bdc0>
   36638:	mov	r3, r0
   3663c:	cmp	r3, #0
   36640:	beq	3936c <__assert_fail@plt+0x26c80>
   36644:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   36648:	ldrb	r3, [r3]
   3664c:	cmp	r3, #0
   36650:	bne	3665c <__assert_fail@plt+0x23f70>
   36654:	ldr	r3, [pc, #3412]	; 373b0 <__assert_fail@plt+0x24cc4>
   36658:	str	r3, [fp, #-1116]	; 0xfffffba4
   3665c:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   36660:	str	r3, [fp, #-820]	; 0xfffffccc
   36664:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   36668:	cmp	r3, #0
   3666c:	bge	366cc <__assert_fail@plt+0x23fe0>
   36670:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   36674:	mov	r2, r3
   36678:	asr	r3, r2, #31
   3667c:	mov	r0, #0
   36680:	mov	r1, #-2147483648	; 0x80000000
   36684:	subs	r2, r0, r2
   36688:	sbc	r3, r1, r3
   3668c:	ldr	r0, [pc, #3360]	; 373b4 <__assert_fail@plt+0x24cc8>
   36690:	mov	r1, #0
   36694:	cmp	r0, r2
   36698:	sbcs	r3, r1, r3
   3669c:	bge	366cc <__assert_fail@plt+0x23fe0>
   366a0:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   366a4:	mov	r2, r3
   366a8:	asr	r3, r2, #31
   366ac:	ldr	r0, [pc, #3328]	; 373b4 <__assert_fail@plt+0x24cc8>
   366b0:	mov	r1, #0
   366b4:	adds	r2, r2, r0
   366b8:	adc	r3, r3, r1
   366bc:	sub	r1, fp, #812	; 0x32c
   366c0:	strd	r2, [r1, #32]
   366c4:	mov	r3, #1
   366c8:	b	366f4 <__assert_fail@plt+0x24008>
   366cc:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   366d0:	mov	r2, r3
   366d4:	asr	r3, r2, #31
   366d8:	ldr	r0, [pc, #3284]	; 373b4 <__assert_fail@plt+0x24cc8>
   366dc:	mov	r1, #0
   366e0:	adds	r2, r2, r0
   366e4:	adc	r3, r3, r1
   366e8:	sub	r1, fp, #812	; 0x32c
   366ec:	strd	r2, [r1, #32]
   366f0:	mov	r3, #0
   366f4:	cmp	r3, #0
   366f8:	beq	3672c <__assert_fail@plt+0x24040>
   366fc:	sub	r3, fp, #820	; 0x334
   36700:	mov	r0, r3
   36704:	bl	30028 <__assert_fail@plt+0x1d93c>
   36708:	mov	r3, r0
   3670c:	cmp	r3, #0
   36710:	beq	39374 <__assert_fail@plt+0x26c88>
   36714:	ldr	r0, [pc, #3228]	; 373b8 <__assert_fail@plt+0x24ccc>
   36718:	bl	12398 <gettext@plt>
   3671c:	mov	r3, r0
   36720:	mov	r0, r3
   36724:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36728:	b	39374 <__assert_fail@plt+0x26c88>
   3672c:	mov	r3, #0
   36730:	str	r3, [fp, #-772]	; 0xfffffcfc
   36734:	ldr	r3, [fp, #-576]	; 0xfffffdc0
   36738:	add	r3, r3, #1
   3673c:	mov	r2, r3
   36740:	asr	r3, r2, #31
   36744:	sub	r1, fp, #812	; 0x32c
   36748:	strd	r2, [r1, #48]	; 0x30
   3674c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
   36750:	mov	r2, r3
   36754:	asr	r3, r2, #31
   36758:	sub	r1, fp, #812	; 0x32c
   3675c:	strd	r2, [r1, #56]	; 0x38
   36760:	ldr	r3, [fp, #-584]	; 0xfffffdb8
   36764:	mov	r2, r3
   36768:	asr	r3, r2, #31
   3676c:	sub	r1, fp, #812	; 0x32c
   36770:	strd	r2, [r1, #64]	; 0x40
   36774:	ldr	r3, [fp, #-588]	; 0xfffffdb4
   36778:	mov	r2, r3
   3677c:	asr	r3, r2, #31
   36780:	sub	r1, fp, #812	; 0x32c
   36784:	strd	r2, [r1, #72]	; 0x48
   36788:	ldr	r3, [fp, #-592]	; 0xfffffdb0
   3678c:	str	r3, [fp, #-732]	; 0xfffffd24
   36790:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36794:	str	r3, [fp, #-728]	; 0xfffffd28
   36798:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   3679c:	str	r3, [fp, #-180]	; 0xffffff4c
   367a0:	mov	r3, #2
   367a4:	str	r3, [fp, #-792]	; 0xfffffce8
   367a8:	sub	ip, fp, #724	; 0x2d4
   367ac:	sub	lr, fp, #548	; 0x224
   367b0:	ldm	lr!, {r0, r1, r2, r3}
   367b4:	stmia	ip!, {r0, r1, r2, r3}
   367b8:	ldm	lr!, {r0, r1, r2, r3}
   367bc:	stmia	ip!, {r0, r1, r2, r3}
   367c0:	ldm	lr!, {r0, r1, r2, r3}
   367c4:	stmia	ip!, {r0, r1, r2, r3}
   367c8:	ldm	lr, {r0, r1}
   367cc:	stm	ip, {r0, r1}
   367d0:	mov	r3, #0
   367d4:	strb	r3, [fp, #-668]	; 0xfffffd64
   367d8:	mov	r3, #0
   367dc:	strb	r3, [fp, #-667]	; 0xfffffd65
   367e0:	mov	r3, #0
   367e4:	str	r3, [fp, #-664]	; 0xfffffd68
   367e8:	mov	r3, #0
   367ec:	str	r3, [fp, #-660]	; 0xfffffd6c
   367f0:	mov	r3, #0
   367f4:	str	r3, [fp, #-648]	; 0xfffffd78
   367f8:	mov	r3, #0
   367fc:	str	r3, [fp, #-656]	; 0xfffffd70
   36800:	mov	r3, #0
   36804:	str	r3, [fp, #-652]	; 0xfffffd74
   36808:	mov	r3, #0
   3680c:	str	r3, [fp, #-644]	; 0xfffffd7c
   36810:	mov	r3, #0
   36814:	strb	r3, [fp, #-640]	; 0xfffffd80
   36818:	mov	r3, #0
   3681c:	strb	r3, [fp, #-639]	; 0xfffffd81
   36820:	mov	r3, #0
   36824:	strb	r3, [fp, #-638]	; 0xfffffd82
   36828:	mov	r3, #0
   3682c:	strb	r3, [fp, #-636]	; 0xfffffd84
   36830:	mov	r3, #0
   36834:	strb	r3, [fp, #-637]	; 0xfffffd83
   36838:	mov	r3, #0
   3683c:	strb	r3, [fp, #-635]	; 0xfffffd85
   36840:	mov	r3, #0
   36844:	strb	r3, [fp, #-634]	; 0xfffffd86
   36848:	mov	r3, #0
   3684c:	strb	r3, [fp, #-633]	; 0xfffffd87
   36850:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   36854:	str	r3, [fp, #-632]	; 0xfffffd88
   36858:	ldr	r3, [pc, #2908]	; 373bc <__assert_fail@plt+0x24cd0>
   3685c:	str	r3, [fp, #-628]	; 0xfffffd8c
   36860:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   36864:	str	r3, [fp, #-624]	; 0xfffffd90
   36868:	mov	r3, #0
   3686c:	str	r3, [fp, #-620]	; 0xfffffd94
   36870:	mov	r3, #1
   36874:	str	r3, [fp, #-64]	; 0xffffffc0
   36878:	b	369dc <__assert_fail@plt+0x242f0>
   3687c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36880:	ldr	r2, [pc, #2872]	; 373c0 <__assert_fail@plt+0x24cd4>
   36884:	mul	r3, r2, r3
   36888:	cmp	r3, #0
   3688c:	bge	368b8 <__assert_fail@plt+0x241cc>
   36890:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36894:	ldr	r2, [pc, #2856]	; 373c4 <__assert_fail@plt+0x24cd8>
   36898:	mul	r3, r2, r3
   3689c:	add	r2, r3, #-2147483648	; 0x80000000
   368a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   368a4:	cmp	r2, r3
   368a8:	movgt	r3, #1
   368ac:	movle	r3, #0
   368b0:	uxtb	r3, r3
   368b4:	b	36910 <__assert_fail@plt+0x24224>
   368b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   368bc:	cmp	r3, #0
   368c0:	bge	368ec <__assert_fail@plt+0x24200>
   368c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   368c8:	ldr	r2, [pc, #2800]	; 373c0 <__assert_fail@plt+0x24cd4>
   368cc:	mul	r2, r2, r3
   368d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   368d4:	rsb	r3, r3, #-2147483648	; 0x80000000
   368d8:	cmp	r2, r3
   368dc:	movlt	r3, #1
   368e0:	movge	r3, #0
   368e4:	uxtb	r3, r3
   368e8:	b	36910 <__assert_fail@plt+0x24224>
   368ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   368f0:	ldr	r2, [pc, #2764]	; 373c4 <__assert_fail@plt+0x24cd8>
   368f4:	mul	r3, r2, r3
   368f8:	sub	r2, r3, #-2147483647	; 0x80000001
   368fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36900:	cmp	r2, r3
   36904:	movlt	r3, #1
   36908:	movge	r3, #0
   3690c:	uxtb	r3, r3
   36910:	cmp	r3, #0
   36914:	beq	3693c <__assert_fail@plt+0x24250>
   36918:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3691c:	ldr	r2, [pc, #2716]	; 373c0 <__assert_fail@plt+0x24cd4>
   36920:	mul	r3, r2, r3
   36924:	mov	r2, r3
   36928:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3692c:	add	r3, r2, r3
   36930:	str	r3, [fp, #-824]	; 0xfffffcc8
   36934:	mov	r3, #1
   36938:	b	3695c <__assert_fail@plt+0x24270>
   3693c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36940:	ldr	r2, [pc, #2680]	; 373c0 <__assert_fail@plt+0x24cd4>
   36944:	mul	r3, r2, r3
   36948:	mov	r2, r3
   3694c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36950:	add	r3, r2, r3
   36954:	str	r3, [fp, #-824]	; 0xfffffcc8
   36958:	mov	r3, #0
   3695c:	cmp	r3, #0
   36960:	bne	369ec <__assert_fail@plt+0x24300>
   36964:	sub	r3, fp, #1040	; 0x410
   36968:	sub	r3, r3, #12
   3696c:	sub	r3, r3, #8
   36970:	sub	r1, fp, #824	; 0x338
   36974:	mov	r2, r3
   36978:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3697c:	bl	5e4ac <__assert_fail@plt+0x4bdc0>
   36980:	mov	r3, r0
   36984:	cmp	r3, #0
   36988:	beq	369d0 <__assert_fail@plt+0x242e4>
   3698c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   36990:	cmp	r3, #0
   36994:	beq	369d0 <__assert_fail@plt+0x242e4>
   36998:	ldr	r2, [fp, #-1028]	; 0xfffffbfc
   3699c:	ldr	r3, [fp, #-624]	; 0xfffffd90
   369a0:	cmp	r2, r3
   369a4:	beq	369d0 <__assert_fail@plt+0x242e4>
   369a8:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   369ac:	str	r3, [fp, #-620]	; 0xfffffd94
   369b0:	ldr	r3, [pc, #2564]	; 373bc <__assert_fail@plt+0x24cd0>
   369b4:	str	r3, [fp, #-616]	; 0xfffffd98
   369b8:	ldr	r3, [fp, #-1028]	; 0xfffffbfc
   369bc:	str	r3, [fp, #-612]	; 0xfffffd9c
   369c0:	mov	r3, #0
   369c4:	str	r3, [fp, #-608]	; 0xfffffda0
   369c8:	nop			; (mov r0, r0)
   369cc:	b	369f0 <__assert_fail@plt+0x24304>
   369d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   369d4:	add	r3, r3, #1
   369d8:	str	r3, [fp, #-64]	; 0xffffffc0
   369dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   369e0:	cmp	r3, #3
   369e4:	ble	3687c <__assert_fail@plt+0x24190>
   369e8:	b	369f0 <__assert_fail@plt+0x24304>
   369ec:	nop			; (mov r0, r0)
   369f0:	ldr	r3, [fp, #-632]	; 0xfffffd88
   369f4:	cmp	r3, #0
   369f8:	beq	36a38 <__assert_fail@plt+0x2434c>
   369fc:	ldr	r3, [fp, #-620]	; 0xfffffd94
   36a00:	cmp	r3, #0
   36a04:	beq	36a38 <__assert_fail@plt+0x2434c>
   36a08:	ldr	r3, [fp, #-632]	; 0xfffffd88
   36a0c:	ldr	r2, [fp, #-620]	; 0xfffffd94
   36a10:	mov	r1, r2
   36a14:	mov	r0, r3
   36a18:	bl	11ffc <strcmp@plt>
   36a1c:	mov	r3, r0
   36a20:	cmp	r3, #0
   36a24:	bne	36a38 <__assert_fail@plt+0x2434c>
   36a28:	mvn	r3, #0
   36a2c:	str	r3, [fp, #-624]	; 0xfffffd90
   36a30:	mov	r3, #0
   36a34:	str	r3, [fp, #-620]	; 0xfffffd94
   36a38:	sub	r3, fp, #820	; 0x334
   36a3c:	mov	r0, r3
   36a40:	bl	31cf4 <__assert_fail@plt+0x1f608>
   36a44:	mov	r3, r0
   36a48:	cmp	r3, #0
   36a4c:	beq	36aa8 <__assert_fail@plt+0x243bc>
   36a50:	sub	r3, fp, #820	; 0x334
   36a54:	mov	r0, r3
   36a58:	bl	30028 <__assert_fail@plt+0x1d93c>
   36a5c:	mov	r3, r0
   36a60:	cmp	r3, #0
   36a64:	beq	3937c <__assert_fail@plt+0x26c90>
   36a68:	ldr	r2, [fp, #-820]	; 0xfffffccc
   36a6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   36a70:	cmp	r2, r3
   36a74:	bcc	36a88 <__assert_fail@plt+0x2439c>
   36a78:	ldr	r0, [pc, #2376]	; 373c8 <__assert_fail@plt+0x24cdc>
   36a7c:	bl	12398 <gettext@plt>
   36a80:	mov	r2, r0
   36a84:	b	36a94 <__assert_fail@plt+0x243a8>
   36a88:	ldr	r0, [pc, #2364]	; 373cc <__assert_fail@plt+0x24ce0>
   36a8c:	bl	12398 <gettext@plt>
   36a90:	mov	r2, r0
   36a94:	ldr	r3, [fp, #-820]	; 0xfffffccc
   36a98:	mov	r1, r3
   36a9c:	mov	r0, r2
   36aa0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36aa4:	b	3937c <__assert_fail@plt+0x26c90>
   36aa8:	sub	r3, fp, #820	; 0x334
   36aac:	mov	r0, r3
   36ab0:	bl	30028 <__assert_fail@plt+0x1d93c>
   36ab4:	mov	r3, r0
   36ab8:	cmp	r3, #0
   36abc:	beq	36c88 <__assert_fail@plt+0x2459c>
   36ac0:	ldr	r0, [pc, #2312]	; 373d0 <__assert_fail@plt+0x24ce4>
   36ac4:	bl	12398 <gettext@plt>
   36ac8:	mov	r3, r0
   36acc:	mov	r0, r3
   36ad0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36ad4:	ldrb	r3, [fp, #-668]	; 0xfffffd64
   36ad8:	cmp	r3, #0
   36adc:	beq	36b04 <__assert_fail@plt+0x24418>
   36ae0:	ldr	r3, [pc, #2284]	; 373d4 <__assert_fail@plt+0x24ce8>
   36ae4:	ldr	r8, [r3]
   36ae8:	ldr	r0, [pc, #2280]	; 373d8 <__assert_fail@plt+0x24cec>
   36aec:	bl	12398 <gettext@plt>
   36af0:	mov	r3, r0
   36af4:	mov	r1, r3
   36af8:	mov	r0, r8
   36afc:	bl	123f8 <fprintf@plt>
   36b00:	b	36bfc <__assert_fail@plt+0x24510>
   36b04:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   36b08:	cmp	r3, #0
   36b0c:	beq	36b34 <__assert_fail@plt+0x24448>
   36b10:	ldr	r3, [pc, #2236]	; 373d4 <__assert_fail@plt+0x24ce8>
   36b14:	ldr	r8, [r3]
   36b18:	ldr	r0, [pc, #2236]	; 373dc <__assert_fail@plt+0x24cf0>
   36b1c:	bl	12398 <gettext@plt>
   36b20:	mov	r3, r0
   36b24:	mov	r1, r3
   36b28:	mov	r0, r8
   36b2c:	bl	123f8 <fprintf@plt>
   36b30:	b	36bfc <__assert_fail@plt+0x24510>
   36b34:	ldr	r3, [fp, #8]
   36b38:	cmp	r3, #0
   36b3c:	beq	36bdc <__assert_fail@plt+0x244f0>
   36b40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   36b44:	ldr	r3, [fp, #4]
   36b48:	cmp	r2, r3
   36b4c:	beq	36b78 <__assert_fail@plt+0x2448c>
   36b50:	ldr	r3, [pc, #2172]	; 373d4 <__assert_fail@plt+0x24ce8>
   36b54:	ldr	r8, [r3]
   36b58:	ldr	r0, [pc, #2176]	; 373e0 <__assert_fail@plt+0x24cf4>
   36b5c:	bl	12398 <gettext@plt>
   36b60:	mov	r3, r0
   36b64:	ldr	r2, [fp, #8]
   36b68:	mov	r1, r3
   36b6c:	mov	r0, r8
   36b70:	bl	123f8 <fprintf@plt>
   36b74:	b	36bfc <__assert_fail@plt+0x24510>
   36b78:	ldr	r1, [pc, #2148]	; 373e4 <__assert_fail@plt+0x24cf8>
   36b7c:	ldr	r0, [fp, #8]
   36b80:	bl	11ffc <strcmp@plt>
   36b84:	mov	r3, r0
   36b88:	cmp	r3, #0
   36b8c:	bne	36bb4 <__assert_fail@plt+0x244c8>
   36b90:	ldr	r3, [pc, #2108]	; 373d4 <__assert_fail@plt+0x24ce8>
   36b94:	ldr	r8, [r3]
   36b98:	ldr	r0, [pc, #2120]	; 373e8 <__assert_fail@plt+0x24cfc>
   36b9c:	bl	12398 <gettext@plt>
   36ba0:	mov	r3, r0
   36ba4:	mov	r1, r3
   36ba8:	mov	r0, r8
   36bac:	bl	123f8 <fprintf@plt>
   36bb0:	b	36bfc <__assert_fail@plt+0x24510>
   36bb4:	ldr	r3, [pc, #2072]	; 373d4 <__assert_fail@plt+0x24ce8>
   36bb8:	ldr	r8, [r3]
   36bbc:	ldr	r0, [pc, #2088]	; 373ec <__assert_fail@plt+0x24d00>
   36bc0:	bl	12398 <gettext@plt>
   36bc4:	mov	r3, r0
   36bc8:	ldr	r2, [fp, #8]
   36bcc:	mov	r1, r3
   36bd0:	mov	r0, r8
   36bd4:	bl	123f8 <fprintf@plt>
   36bd8:	b	36bfc <__assert_fail@plt+0x24510>
   36bdc:	ldr	r3, [pc, #2032]	; 373d4 <__assert_fail@plt+0x24ce8>
   36be0:	ldr	r8, [r3]
   36be4:	ldr	r0, [pc, #2052]	; 373f0 <__assert_fail@plt+0x24d04>
   36be8:	bl	12398 <gettext@plt>
   36bec:	mov	r3, r0
   36bf0:	mov	r1, r3
   36bf4:	mov	r0, r8
   36bf8:	bl	123f8 <fprintf@plt>
   36bfc:	ldr	r3, [fp, #-656]	; 0xfffffd70
   36c00:	cmp	r3, #0
   36c04:	beq	36c38 <__assert_fail@plt+0x2454c>
   36c08:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   36c0c:	cmp	r3, #0
   36c10:	bne	36c38 <__assert_fail@plt+0x2454c>
   36c14:	ldr	r3, [fp, #-800]	; 0xfffffce0
   36c18:	cmp	r3, #0
   36c1c:	ble	36c38 <__assert_fail@plt+0x2454c>
   36c20:	ldr	r3, [pc, #1964]	; 373d4 <__assert_fail@plt+0x24ce8>
   36c24:	ldr	r3, [r3]
   36c28:	mov	r2, #5
   36c2c:	mov	r1, #1
   36c30:	ldr	r0, [pc, #1980]	; 373f4 <__assert_fail@plt+0x24d08>
   36c34:	bl	12224 <fwrite@plt>
   36c38:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   36c3c:	cmp	r3, #0
   36c40:	beq	36c74 <__assert_fail@plt+0x24588>
   36c44:	ldr	r3, [pc, #1928]	; 373d4 <__assert_fail@plt+0x24ce8>
   36c48:	ldr	r8, [r3]
   36c4c:	ldr	r3, [fp, #-796]	; 0xfffffce4
   36c50:	sub	r2, fp, #284	; 0x11c
   36c54:	mov	r1, r2
   36c58:	mov	r0, r3
   36c5c:	bl	31308 <__assert_fail@plt+0x1ec1c>
   36c60:	mov	r3, r0
   36c64:	mov	r2, r3
   36c68:	ldr	r1, [pc, #1928]	; 373f8 <__assert_fail@plt+0x24d0c>
   36c6c:	mov	r0, r8
   36c70:	bl	123f8 <fprintf@plt>
   36c74:	ldr	r3, [pc, #1880]	; 373d4 <__assert_fail@plt+0x24ce8>
   36c78:	ldr	r3, [r3]
   36c7c:	mov	r1, r3
   36c80:	mov	r0, #10
   36c84:	bl	1256c <fputc@plt>
   36c88:	ldrb	r3, [fp, #-668]	; 0xfffffd64
   36c8c:	cmp	r3, #0
   36c90:	beq	36cac <__assert_fail@plt+0x245c0>
   36c94:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   36c98:	mov	r2, r3
   36c9c:	sub	r3, fp, #732	; 0x2dc
   36ca0:	ldm	r3, {r0, r1}
   36ca4:	stm	r2, {r0, r1}
   36ca8:	b	39148 <__assert_fail@plt+0x26a5c>
   36cac:	ldr	r2, [fp, #-648]	; 0xfffffd78
   36cb0:	ldr	r3, [fp, #-664]	; 0xfffffd68
   36cb4:	orr	r2, r2, r3
   36cb8:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   36cbc:	orr	r2, r2, r3
   36cc0:	ldr	r3, [fp, #-652]	; 0xfffffd74
   36cc4:	orr	r2, r2, r3
   36cc8:	ldr	r1, [fp, #-656]	; 0xfffffd70
   36ccc:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   36cd0:	add	r3, r1, r3
   36cd4:	orr	r3, r2, r3
   36cd8:	cmp	r3, #1
   36cdc:	ble	36d68 <__assert_fail@plt+0x2467c>
   36ce0:	sub	r3, fp, #820	; 0x334
   36ce4:	mov	r0, r3
   36ce8:	bl	30028 <__assert_fail@plt+0x1d93c>
   36cec:	mov	r3, r0
   36cf0:	cmp	r3, #0
   36cf4:	beq	39384 <__assert_fail@plt+0x26c98>
   36cf8:	ldr	r3, [fp, #-648]	; 0xfffffd78
   36cfc:	cmp	r3, #1
   36d00:	ble	36d0c <__assert_fail@plt+0x24620>
   36d04:	ldr	r0, [pc, #1776]	; 373fc <__assert_fail@plt+0x24d10>
   36d08:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36d0c:	ldr	r3, [fp, #-664]	; 0xfffffd68
   36d10:	cmp	r3, #1
   36d14:	ble	36d20 <__assert_fail@plt+0x24634>
   36d18:	ldr	r0, [pc, #1760]	; 37400 <__assert_fail@plt+0x24d14>
   36d1c:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36d20:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   36d24:	cmp	r3, #1
   36d28:	ble	36d34 <__assert_fail@plt+0x24648>
   36d2c:	ldr	r0, [pc, #1744]	; 37404 <__assert_fail@plt+0x24d18>
   36d30:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36d34:	ldr	r3, [fp, #-652]	; 0xfffffd74
   36d38:	cmp	r3, #1
   36d3c:	ble	36d48 <__assert_fail@plt+0x2465c>
   36d40:	ldr	r0, [pc, #1728]	; 37408 <__assert_fail@plt+0x24d1c>
   36d44:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36d48:	ldr	r2, [fp, #-656]	; 0xfffffd70
   36d4c:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   36d50:	add	r3, r2, r3
   36d54:	cmp	r3, #1
   36d58:	ble	39384 <__assert_fail@plt+0x26c98>
   36d5c:	ldr	r0, [pc, #1704]	; 3740c <__assert_fail@plt+0x24d20>
   36d60:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36d64:	b	39384 <__assert_fail@plt+0x26c98>
   36d68:	sub	r3, fp, #820	; 0x334
   36d6c:	mov	r0, r3
   36d70:	bl	30028 <__assert_fail@plt+0x1d93c>
   36d74:	mov	r3, r0
   36d78:	mov	r2, r3
   36d7c:	sub	r3, fp, #212	; 0xd4
   36d80:	add	r3, r3, #20
   36d84:	str	r3, [sp, #12]
   36d88:	str	r2, [sp, #8]
   36d8c:	mov	r2, sp
   36d90:	sub	r3, fp, #772	; 0x304
   36d94:	ldm	r3, {r0, r1}
   36d98:	stm	r2, {r0, r1}
   36d9c:	sub	r3, fp, #788	; 0x314
   36da0:	ldm	r3, {r0, r1, r2, r3}
   36da4:	bl	34be0 <__assert_fail@plt+0x224f4>
   36da8:	mov	r3, r0
   36dac:	eor	r3, r3, #1
   36db0:	uxtb	r3, r3
   36db4:	cmp	r3, #0
   36db8:	bne	36f08 <__assert_fail@plt+0x2481c>
   36dbc:	sub	r3, fp, #812	; 0x32c
   36dc0:	ldrd	r2, [r3, #48]	; 0x30
   36dc4:	mov	r0, #-2147483647	; 0x80000001
   36dc8:	mvn	r1, #0
   36dcc:	cmp	r2, r0
   36dd0:	sbcs	r3, r3, r1
   36dd4:	blt	36e10 <__assert_fail@plt+0x24724>
   36dd8:	sub	r3, fp, #812	; 0x32c
   36ddc:	ldrd	r2, [r3, #48]	; 0x30
   36de0:	cmp	r2, #0
   36de4:	sbcs	r3, r3, #0
   36de8:	blt	36e28 <__assert_fail@plt+0x2473c>
   36dec:	sub	r3, fp, #812	; 0x32c
   36df0:	ldrd	r2, [r3, #48]	; 0x30
   36df4:	subs	r2, r2, #1
   36df8:	sbc	r3, r3, #0
   36dfc:	mvn	r0, #-2147483648	; 0x80000000
   36e00:	mov	r1, #0
   36e04:	cmp	r0, r2
   36e08:	sbcs	r3, r1, r3
   36e0c:	bge	36e28 <__assert_fail@plt+0x2473c>
   36e10:	sub	r3, fp, #812	; 0x32c
   36e14:	ldrd	r2, [r3, #48]	; 0x30
   36e18:	mov	r3, r2
   36e1c:	sub	r3, r3, #1
   36e20:	str	r3, [fp, #-196]	; 0xffffff3c
   36e24:	b	36f08 <__assert_fail@plt+0x2481c>
   36e28:	sub	r3, fp, #812	; 0x32c
   36e2c:	ldrd	r2, [r3, #48]	; 0x30
   36e30:	mov	r3, r2
   36e34:	sub	r3, r3, #1
   36e38:	str	r3, [fp, #-196]	; 0xffffff3c
   36e3c:	sub	r3, fp, #812	; 0x32c
   36e40:	ldrd	r2, [r3, #56]	; 0x38
   36e44:	cmp	r2, #0
   36e48:	sbcs	r3, r3, #0
   36e4c:	bge	36ea8 <__assert_fail@plt+0x247bc>
   36e50:	sub	r3, fp, #812	; 0x32c
   36e54:	ldrd	r2, [r3, #56]	; 0x38
   36e58:	mov	r0, #-2147483648	; 0x80000000
   36e5c:	mvn	r1, #0
   36e60:	subs	r2, r0, r2
   36e64:	sbc	r3, r1, r3
   36e68:	cmp	r2, #1
   36e6c:	sbcs	r3, r3, #0
   36e70:	bge	36e90 <__assert_fail@plt+0x247a4>
   36e74:	sub	r3, fp, #812	; 0x32c
   36e78:	ldrd	r2, [r3, #56]	; 0x38
   36e7c:	mvn	r0, #-2147483648	; 0x80000000
   36e80:	mov	r1, #0
   36e84:	cmp	r0, r2
   36e88:	sbcs	r3, r1, r3
   36e8c:	bge	36e98 <__assert_fail@plt+0x247ac>
   36e90:	mov	r3, #1
   36e94:	b	36e9c <__assert_fail@plt+0x247b0>
   36e98:	mov	r3, #0
   36e9c:	and	r3, r3, #1
   36ea0:	uxtb	r3, r3
   36ea4:	b	36ecc <__assert_fail@plt+0x247e0>
   36ea8:	sub	r3, fp, #812	; 0x32c
   36eac:	ldrd	r2, [r3, #56]	; 0x38
   36eb0:	mvn	r0, #-2147483648	; 0x80000000
   36eb4:	mov	r1, #0
   36eb8:	cmp	r0, r2
   36ebc:	sbcs	r3, r1, r3
   36ec0:	movlt	r3, #1
   36ec4:	movge	r3, #0
   36ec8:	uxtb	r3, r3
   36ecc:	cmp	r3, #0
   36ed0:	beq	36ee8 <__assert_fail@plt+0x247fc>
   36ed4:	sub	r3, fp, #812	; 0x32c
   36ed8:	ldrd	r2, [r3, #56]	; 0x38
   36edc:	mov	r3, r2
   36ee0:	str	r3, [fp, #-200]	; 0xffffff38
   36ee4:	b	36f08 <__assert_fail@plt+0x2481c>
   36ee8:	sub	r3, fp, #812	; 0x32c
   36eec:	ldrd	r2, [r3, #56]	; 0x38
   36ef0:	mov	r3, r2
   36ef4:	str	r3, [fp, #-200]	; 0xffffff38
   36ef8:	ldr	r3, [fp, #-648]	; 0xfffffd78
   36efc:	cmp	r3, #0
   36f00:	bne	36f5c <__assert_fail@plt+0x24870>
   36f04:	b	36f38 <__assert_fail@plt+0x2484c>
   36f08:	sub	r3, fp, #820	; 0x334
   36f0c:	mov	r0, r3
   36f10:	bl	30028 <__assert_fail@plt+0x1d93c>
   36f14:	mov	r3, r0
   36f18:	cmp	r3, #0
   36f1c:	beq	3938c <__assert_fail@plt+0x26ca0>
   36f20:	ldr	r0, [pc, #1256]	; 37410 <__assert_fail@plt+0x24d24>
   36f24:	bl	12398 <gettext@plt>
   36f28:	mov	r3, r0
   36f2c:	mov	r0, r3
   36f30:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36f34:	b	3938c <__assert_fail@plt+0x26ca0>
   36f38:	ldrb	r3, [fp, #-667]	; 0xfffffd65
   36f3c:	cmp	r3, #0
   36f40:	beq	3706c <__assert_fail@plt+0x24980>
   36f44:	ldr	r3, [fp, #-664]	; 0xfffffd68
   36f48:	cmp	r3, #0
   36f4c:	bne	3706c <__assert_fail@plt+0x24980>
   36f50:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   36f54:	cmp	r3, #0
   36f58:	bne	3706c <__assert_fail@plt+0x24980>
   36f5c:	sub	r3, fp, #812	; 0x32c
   36f60:	ldrd	r0, [r3, #64]	; 0x40
   36f64:	ldr	r3, [fp, #-792]	; 0xfffffce8
   36f68:	mov	r2, r3
   36f6c:	bl	34a34 <__assert_fail@plt+0x22348>
   36f70:	mov	r3, r0
   36f74:	str	r3, [fp, #-204]	; 0xffffff34
   36f78:	ldr	r3, [fp, #-204]	; 0xffffff34
   36f7c:	cmp	r3, #0
   36f80:	bge	36fec <__assert_fail@plt+0x24900>
   36f84:	ldr	r3, [fp, #-792]	; 0xfffffce8
   36f88:	cmp	r3, #0
   36f8c:	beq	36fac <__assert_fail@plt+0x248c0>
   36f90:	ldr	r3, [fp, #-792]	; 0xfffffce8
   36f94:	cmp	r3, #1
   36f98:	bne	36fa4 <__assert_fail@plt+0x248b8>
   36f9c:	ldr	r3, [pc, #1136]	; 37414 <__assert_fail@plt+0x24d28>
   36fa0:	b	36fb0 <__assert_fail@plt+0x248c4>
   36fa4:	ldr	r3, [pc, #1132]	; 37418 <__assert_fail@plt+0x24d2c>
   36fa8:	b	36fb0 <__assert_fail@plt+0x248c4>
   36fac:	ldr	r3, [pc, #1128]	; 3741c <__assert_fail@plt+0x24d30>
   36fb0:	str	r3, [fp, #-92]	; 0xffffffa4
   36fb4:	sub	r3, fp, #820	; 0x334
   36fb8:	mov	r0, r3
   36fbc:	bl	30028 <__assert_fail@plt+0x1d93c>
   36fc0:	mov	r3, r0
   36fc4:	cmp	r3, #0
   36fc8:	beq	39394 <__assert_fail@plt+0x26ca8>
   36fcc:	ldr	r0, [pc, #1100]	; 37420 <__assert_fail@plt+0x24d34>
   36fd0:	bl	12398 <gettext@plt>
   36fd4:	sub	r3, fp, #812	; 0x32c
   36fd8:	ldrd	r2, [r3, #64]	; 0x40
   36fdc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   36fe0:	str	r1, [sp]
   36fe4:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   36fe8:	b	39394 <__assert_fail@plt+0x26ca8>
   36fec:	sub	r3, fp, #812	; 0x32c
   36ff0:	ldrd	r2, [r3, #72]	; 0x48
   36ff4:	mov	r3, r2
   36ff8:	str	r3, [fp, #-208]	; 0xffffff30
   36ffc:	ldr	r3, [fp, #-732]	; 0xfffffd24
   37000:	str	r3, [fp, #-212]	; 0xffffff2c
   37004:	sub	r3, fp, #820	; 0x334
   37008:	mov	r0, r3
   3700c:	bl	30028 <__assert_fail@plt+0x1d93c>
   37010:	mov	r3, r0
   37014:	cmp	r3, #0
   37018:	beq	370ac <__assert_fail@plt+0x249c0>
   3701c:	ldr	r3, [fp, #-648]	; 0xfffffd78
   37020:	cmp	r3, #0
   37024:	beq	37038 <__assert_fail@plt+0x2494c>
   37028:	ldr	r0, [pc, #1012]	; 37424 <__assert_fail@plt+0x24d38>
   3702c:	bl	12398 <gettext@plt>
   37030:	mov	r8, r0
   37034:	b	37044 <__assert_fail@plt+0x24958>
   37038:	ldr	r0, [pc, #1000]	; 37428 <__assert_fail@plt+0x24d3c>
   3703c:	bl	12398 <gettext@plt>
   37040:	mov	r8, r0
   37044:	sub	r1, fp, #384	; 0x180
   37048:	sub	r3, fp, #212	; 0xd4
   3704c:	mov	r2, #100	; 0x64
   37050:	mov	r0, r3
   37054:	bl	35f04 <__assert_fail@plt+0x23818>
   37058:	mov	r3, r0
   3705c:	mov	r1, r3
   37060:	mov	r0, r8
   37064:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37068:	b	370ac <__assert_fail@plt+0x249c0>
   3706c:	mov	r3, #0
   37070:	str	r3, [fp, #-212]	; 0xffffff2c
   37074:	ldr	r3, [fp, #-212]	; 0xffffff2c
   37078:	str	r3, [fp, #-208]	; 0xffffff30
   3707c:	ldr	r3, [fp, #-208]	; 0xffffff30
   37080:	str	r3, [fp, #-204]	; 0xffffff34
   37084:	mov	r3, #0
   37088:	str	r3, [fp, #-728]	; 0xfffffd28
   3708c:	sub	r3, fp, #820	; 0x334
   37090:	mov	r0, r3
   37094:	bl	30028 <__assert_fail@plt+0x1d93c>
   37098:	mov	r3, r0
   3709c:	cmp	r3, #0
   370a0:	beq	370ac <__assert_fail@plt+0x249c0>
   370a4:	ldr	r0, [pc, #896]	; 3742c <__assert_fail@plt+0x24d40>
   370a8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   370ac:	ldr	r2, [fp, #-664]	; 0xfffffd68
   370b0:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   370b4:	orr	r2, r2, r3
   370b8:	ldr	r3, [fp, #-648]	; 0xfffffd78
   370bc:	orr	r3, r2, r3
   370c0:	cmp	r3, #0
   370c4:	beq	370d0 <__assert_fail@plt+0x249e4>
   370c8:	mvn	r3, #0
   370cc:	str	r3, [fp, #-180]	; 0xffffff4c
   370d0:	ldr	r3, [fp, #-656]	; 0xfffffd70
   370d4:	cmp	r3, #0
   370d8:	beq	370e4 <__assert_fail@plt+0x249f8>
   370dc:	ldr	r3, [fp, #-800]	; 0xfffffce0
   370e0:	str	r3, [fp, #-180]	; 0xffffff4c
   370e4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   370e8:	str	r3, [fp, #-256]	; 0xffffff00
   370ec:	ldr	r3, [fp, #-208]	; 0xffffff30
   370f0:	str	r3, [fp, #-252]	; 0xffffff04
   370f4:	ldr	r3, [fp, #-204]	; 0xffffff34
   370f8:	str	r3, [fp, #-248]	; 0xffffff08
   370fc:	ldr	r3, [fp, #-200]	; 0xffffff38
   37100:	str	r3, [fp, #-244]	; 0xffffff0c
   37104:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37108:	str	r3, [fp, #-240]	; 0xffffff10
   3710c:	ldr	r3, [fp, #-192]	; 0xffffff40
   37110:	str	r3, [fp, #-236]	; 0xffffff14
   37114:	ldr	r3, [fp, #-180]	; 0xffffff4c
   37118:	str	r3, [fp, #-224]	; 0xffffff20
   3711c:	mvn	r3, #0
   37120:	str	r3, [fp, #-188]	; 0xffffff44
   37124:	sub	r3, fp, #212	; 0xd4
   37128:	mov	r1, r3
   3712c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37130:	bl	5e580 <__assert_fail@plt+0x4be94>
   37134:	str	r0, [fp, #-40]	; 0xffffffd8
   37138:	sub	r2, fp, #212	; 0xd4
   3713c:	sub	r3, fp, #256	; 0x100
   37140:	mov	r1, r2
   37144:	mov	r0, r3
   37148:	bl	35c9c <__assert_fail@plt+0x235b0>
   3714c:	mov	r3, r0
   37150:	eor	r3, r3, #1
   37154:	uxtb	r3, r3
   37158:	cmp	r3, #0
   3715c:	beq	372b0 <__assert_fail@plt+0x24bc4>
   37160:	mov	r3, #0
   37164:	strb	r3, [fp, #-65]	; 0xffffffbf
   37168:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   3716c:	cmp	r3, #0
   37170:	movne	r3, #1
   37174:	moveq	r3, #0
   37178:	strb	r3, [fp, #-93]	; 0xffffffa3
   3717c:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   37180:	cmp	r3, #0
   37184:	beq	37284 <__assert_fail@plt+0x24b98>
   37188:	mov	r3, #88	; 0x58
   3718c:	strb	r3, [fp, #-854]	; 0xfffffcaa
   37190:	ldrb	r3, [fp, #-854]	; 0xfffffcaa
   37194:	strb	r3, [fp, #-855]	; 0xfffffca9
   37198:	ldrb	r3, [fp, #-855]	; 0xfffffca9
   3719c:	strb	r3, [fp, #-856]	; 0xfffffca8
   371a0:	ldr	r2, [fp, #-796]	; 0xfffffce4
   371a4:	sub	r3, fp, #856	; 0x358
   371a8:	add	r3, r3, #3
   371ac:	mov	r1, r3
   371b0:	mov	r0, r2
   371b4:	bl	31308 <__assert_fail@plt+0x1ec1c>
   371b8:	sub	r3, fp, #856	; 0x358
   371bc:	mov	r0, r3
   371c0:	bl	5df0c <__assert_fail@plt+0x4b820>
   371c4:	str	r0, [fp, #-100]	; 0xffffff9c
   371c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   371cc:	cmp	r3, #0
   371d0:	bne	3720c <__assert_fail@plt+0x24b20>
   371d4:	sub	r3, fp, #820	; 0x334
   371d8:	mov	r0, r3
   371dc:	bl	30028 <__assert_fail@plt+0x1d93c>
   371e0:	mov	r3, r0
   371e4:	cmp	r3, #0
   371e8:	beq	3939c <__assert_fail@plt+0x26cb0>
   371ec:	ldr	r0, [pc, #572]	; 37430 <__assert_fail@plt+0x24d44>
   371f0:	bl	12398 <gettext@plt>
   371f4:	mov	r2, r0
   371f8:	sub	r3, fp, #856	; 0x358
   371fc:	mov	r1, r3
   37200:	mov	r0, r2
   37204:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37208:	b	39384 <__assert_fail@plt+0x26c98>
   3720c:	ldr	r3, [fp, #-256]	; 0xffffff00
   37210:	str	r3, [fp, #-212]	; 0xffffff2c
   37214:	ldr	r3, [fp, #-252]	; 0xffffff04
   37218:	str	r3, [fp, #-208]	; 0xffffff30
   3721c:	ldr	r3, [fp, #-248]	; 0xffffff08
   37220:	str	r3, [fp, #-204]	; 0xffffff34
   37224:	ldr	r3, [fp, #-244]	; 0xffffff0c
   37228:	str	r3, [fp, #-200]	; 0xffffff38
   3722c:	ldr	r3, [fp, #-240]	; 0xffffff10
   37230:	str	r3, [fp, #-196]	; 0xffffff3c
   37234:	ldr	r3, [fp, #-236]	; 0xffffff14
   37238:	str	r3, [fp, #-192]	; 0xffffff40
   3723c:	ldr	r3, [fp, #-224]	; 0xffffff20
   37240:	str	r3, [fp, #-180]	; 0xffffff4c
   37244:	mvn	r3, #0
   37248:	str	r3, [fp, #-188]	; 0xffffff44
   3724c:	sub	r3, fp, #212	; 0xd4
   37250:	mov	r1, r3
   37254:	ldr	r0, [fp, #-100]	; 0xffffff9c
   37258:	bl	5e580 <__assert_fail@plt+0x4be94>
   3725c:	str	r0, [fp, #-40]	; 0xffffffd8
   37260:	sub	r2, fp, #212	; 0xd4
   37264:	sub	r3, fp, #256	; 0x100
   37268:	mov	r1, r2
   3726c:	mov	r0, r3
   37270:	bl	35c9c <__assert_fail@plt+0x235b0>
   37274:	mov	r3, r0
   37278:	strb	r3, [fp, #-65]	; 0xffffffbf
   3727c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   37280:	bl	5e1e0 <__assert_fail@plt+0x4baf4>
   37284:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   37288:	eor	r3, r3, #1
   3728c:	uxtb	r3, r3
   37290:	cmp	r3, #0
   37294:	beq	372b0 <__assert_fail@plt+0x24bc4>
   37298:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   3729c:	sub	r2, fp, #820	; 0x334
   372a0:	sub	r1, fp, #212	; 0xd4
   372a4:	sub	r0, fp, #256	; 0x100
   372a8:	bl	35f64 <__assert_fail@plt+0x23878>
   372ac:	b	393c0 <__assert_fail@plt+0x26cd4>
   372b0:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   372b4:	cmp	r3, #0
   372b8:	beq	37b44 <__assert_fail@plt+0x25458>
   372bc:	ldr	r3, [fp, #-664]	; 0xfffffd68
   372c0:	cmp	r3, #0
   372c4:	bne	37b44 <__assert_fail@plt+0x25458>
   372c8:	sub	r3, fp, #812	; 0x32c
   372cc:	ldrd	r0, [r3]
   372d0:	sub	r3, fp, #812	; 0x32c
   372d4:	ldrd	r2, [r3]
   372d8:	cmp	r2, #1
   372dc:	sbcs	r3, r3, #0
   372e0:	blt	372fc <__assert_fail@plt+0x24c10>
   372e4:	ldr	r2, [fp, #-188]	; 0xffffff44
   372e8:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   372ec:	cmp	r2, r3
   372f0:	beq	372fc <__assert_fail@plt+0x24c10>
   372f4:	mov	r3, #1
   372f8:	b	37300 <__assert_fail@plt+0x24c14>
   372fc:	mov	r3, #0
   37300:	mov	r2, r3
   37304:	asr	r3, r2, #31
   37308:	subs	r2, r0, r2
   3730c:	sbc	r3, r1, r3
   37310:	cmp	r2, #0
   37314:	sbcs	r3, r3, #0
   37318:	bge	37480 <__assert_fail@plt+0x24d94>
   3731c:	sub	r3, fp, #812	; 0x32c
   37320:	ldrd	r0, [r3]
   37324:	sub	r3, fp, #812	; 0x32c
   37328:	ldrd	r2, [r3]
   3732c:	cmp	r2, #1
   37330:	sbcs	r3, r3, #0
   37334:	blt	37350 <__assert_fail@plt+0x24c64>
   37338:	ldr	r2, [fp, #-188]	; 0xffffff44
   3733c:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   37340:	cmp	r2, r3
   37344:	beq	37350 <__assert_fail@plt+0x24c64>
   37348:	mov	r3, #1
   3734c:	b	37354 <__assert_fail@plt+0x24c68>
   37350:	mov	r3, #0
   37354:	mov	r2, r3
   37358:	asr	r3, r2, #31
   3735c:	subs	r2, r0, r2
   37360:	sbc	r3, r1, r3
   37364:	mvn	r0, #0
   37368:	mvn	r1, #0
   3736c:	cmp	r3, r1
   37370:	cmpeq	r2, r0
   37374:	beq	37470 <__assert_fail@plt+0x24d84>
   37378:	sub	r3, fp, #812	; 0x32c
   3737c:	ldrd	r0, [r3]
   37380:	sub	r3, fp, #812	; 0x32c
   37384:	ldrd	r2, [r3]
   37388:	cmp	r2, #1
   3738c:	sbcs	r3, r3, #0
   37390:	blt	37434 <__assert_fail@plt+0x24d48>
   37394:	ldr	r2, [fp, #-188]	; 0xffffff44
   37398:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   3739c:	cmp	r2, r3
   373a0:	beq	37434 <__assert_fail@plt+0x24d48>
   373a4:	mov	r3, #1
   373a8:	b	37438 <__assert_fail@plt+0x24d4c>
   373ac:	andeq	r9, r6, r8, asr #26
   373b0:	andeq	r9, r6, r0, asr sp
   373b4:	andeq	r0, r0, ip, ror #14
   373b8:	andeq	r9, r6, r4, asr sp
   373bc:	andeq	r0, r0, sp, lsl #2
   373c0:	rsbseq	sl, r6, r0, lsl #14
   373c4:			; <UNDEFINED> instruction: 0xff895900
   373c8:	andeq	r9, r6, r8, ror sp
   373cc:	muleq	r6, r0, sp
   373d0:			; <UNDEFINED> instruction: 0x00069db8
   373d4:	andeq	ip, r7, r8, lsr #14
   373d8:	andeq	r9, r6, ip, asr #27
   373dc:	andeq	r9, r6, r8, ror #27
   373e0:	andeq	r9, r6, r0, lsl #28
   373e4:	andeq	r9, r6, r8, lsl lr
   373e8:	andeq	r9, r6, r0, lsr #28
   373ec:	andeq	r9, r6, r4, asr #28
   373f0:	andeq	r9, r6, r0, ror #28
   373f4:	andeq	r9, r6, r0, ror lr
   373f8:	andeq	r9, r6, r8, ror lr
   373fc:	andeq	r9, r6, r0, lsl #29
   37400:	andeq	r9, r6, r4, lsr #29
   37404:	andeq	r9, r6, r8, asr #29
   37408:	andeq	r9, r6, ip, ror #29
   3740c:	andeq	r9, r6, r8, lsl pc
   37410:	andeq	r9, r6, r0, asr #30
   37414:			; <UNDEFINED> instruction: 0x00068abc
   37418:	strdeq	r8, [r6], -r4
   3741c:	andeq	r9, r6, r8, ror #30
   37420:	andeq	r9, r6, ip, ror #30
   37424:	andeq	r9, r6, r8, lsl #31
   37428:			; <UNDEFINED> instruction: 0x00069fb8
   3742c:	andeq	r9, r6, r4, ror #31
   37430:	andeq	sl, r6, r8, lsl r0
   37434:	mov	r3, #0
   37438:	mov	r2, r3
   3743c:	asr	r3, r2, #31
   37440:	subs	r2, r0, r2
   37444:	sbc	r3, r1, r3
   37448:	mov	r0, #0
   3744c:	mov	r1, #-2147483648	; 0x80000000
   37450:	bl	63d78 <__assert_fail@plt+0x5168c>
   37454:	mov	r2, r0
   37458:	mov	r3, r1
   3745c:	cmp	r2, #7
   37460:	sbcs	r3, r3, #0
   37464:	bge	37470 <__assert_fail@plt+0x24d84>
   37468:	mov	r3, #1
   3746c:	b	37474 <__assert_fail@plt+0x24d88>
   37470:	mov	r3, #0
   37474:	and	r3, r3, #1
   37478:	uxtb	r3, r3
   3747c:	b	374e4 <__assert_fail@plt+0x24df8>
   37480:	sub	r3, fp, #812	; 0x32c
   37484:	ldrd	r0, [r3]
   37488:	sub	r3, fp, #812	; 0x32c
   3748c:	ldrd	r2, [r3]
   37490:	cmp	r2, #1
   37494:	sbcs	r3, r3, #0
   37498:	blt	374b4 <__assert_fail@plt+0x24dc8>
   3749c:	ldr	r2, [fp, #-188]	; 0xffffff44
   374a0:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   374a4:	cmp	r2, r3
   374a8:	beq	374b4 <__assert_fail@plt+0x24dc8>
   374ac:	mov	r3, #1
   374b0:	b	374b8 <__assert_fail@plt+0x24dcc>
   374b4:	mov	r3, #0
   374b8:	mov	r2, r3
   374bc:	asr	r3, r2, #31
   374c0:	subs	r2, r0, r2
   374c4:	sbc	r3, r1, r3
   374c8:	add	r1, pc, #808	; 0x328
   374cc:	ldrd	r0, [r1]
   374d0:	cmp	r0, r2
   374d4:	sbcs	r3, r1, r3
   374d8:	movlt	r3, #1
   374dc:	movge	r3, #0
   374e0:	uxtb	r3, r3
   374e4:	cmp	r3, #0
   374e8:	beq	3756c <__assert_fail@plt+0x24e80>
   374ec:	sub	r3, fp, #812	; 0x32c
   374f0:	ldrd	r0, [r3]
   374f4:	sub	r3, fp, #812	; 0x32c
   374f8:	ldrd	r2, [r3]
   374fc:	cmp	r2, #1
   37500:	sbcs	r3, r3, #0
   37504:	blt	37520 <__assert_fail@plt+0x24e34>
   37508:	ldr	r2, [fp, #-188]	; 0xffffff44
   3750c:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   37510:	cmp	r2, r3
   37514:	beq	37520 <__assert_fail@plt+0x24e34>
   37518:	mov	r3, #1
   3751c:	b	37524 <__assert_fail@plt+0x24e38>
   37520:	mov	r3, #0
   37524:	mov	r2, r3
   37528:	asr	r3, r2, #31
   3752c:	subs	r2, r0, r2
   37530:	sbc	r3, r1, r3
   37534:	mov	r0, r2
   37538:	mov	r1, r3
   3753c:	mov	r2, r0
   37540:	mov	r3, r1
   37544:	lsl	r7, r3, #3
   37548:	orr	r7, r7, r2, lsr #29
   3754c:	lsl	r6, r2, #3
   37550:	mov	r2, r6
   37554:	mov	r3, r7
   37558:	subs	r2, r2, r0
   3755c:	sbc	r3, r3, r1
   37560:	sub	r1, fp, #860	; 0x35c
   37564:	strd	r2, [r1, #-8]
   37568:	b	37a3c <__assert_fail@plt+0x25350>
   3756c:	sub	r3, fp, #812	; 0x32c
   37570:	ldrd	r0, [r3]
   37574:	sub	r3, fp, #812	; 0x32c
   37578:	ldrd	r2, [r3]
   3757c:	cmp	r2, #1
   37580:	sbcs	r3, r3, #0
   37584:	blt	375a0 <__assert_fail@plt+0x24eb4>
   37588:	ldr	r2, [fp, #-188]	; 0xffffff44
   3758c:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   37590:	cmp	r2, r3
   37594:	beq	375a0 <__assert_fail@plt+0x24eb4>
   37598:	mov	r3, #1
   3759c:	b	375a4 <__assert_fail@plt+0x24eb8>
   375a0:	mov	r3, #0
   375a4:	mov	r2, r3
   375a8:	asr	r3, r2, #31
   375ac:	subs	r2, r0, r2
   375b0:	sbc	r3, r1, r3
   375b4:	mov	r0, r2
   375b8:	mov	r1, r3
   375bc:	mov	r2, r0
   375c0:	mov	r3, r1
   375c4:	lsl	r5, r3, #3
   375c8:	orr	r5, r5, r2, lsr #29
   375cc:	lsl	r4, r2, #3
   375d0:	mov	r2, r4
   375d4:	mov	r3, r5
   375d8:	subs	r2, r2, r0
   375dc:	sbc	r3, r3, r1
   375e0:	sub	r1, fp, #860	; 0x35c
   375e4:	strd	r2, [r1, #-8]
   375e8:	sub	r3, fp, #860	; 0x35c
   375ec:	ldrd	r2, [r3, #-8]
   375f0:	cmp	r2, #0
   375f4:	sbcs	r3, r3, #0
   375f8:	bge	3766c <__assert_fail@plt+0x24f80>
   375fc:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   37600:	ldr	r3, [fp, #-188]	; 0xffffff44
   37604:	sub	r3, r2, r3
   37608:	add	r2, r3, #7
   3760c:	ldr	r3, [pc, #492]	; 37800 <__assert_fail@plt+0x25114>
   37610:	smull	r1, r3, r3, r2
   37614:	add	r3, r3, r2
   37618:	asr	r1, r3, #2
   3761c:	asr	r3, r2, #31
   37620:	sub	r1, r1, r3
   37624:	mov	r3, r1
   37628:	lsl	r3, r3, #3
   3762c:	sub	r3, r3, r1
   37630:	sub	r1, r2, r3
   37634:	mov	r0, r1
   37638:	asr	r1, r0, #31
   3763c:	sub	r3, fp, #860	; 0x35c
   37640:	ldrd	r2, [r3, #-8]
   37644:	mov	r4, #0
   37648:	mov	r5, #-2147483648	; 0x80000000
   3764c:	subs	r2, r4, r2
   37650:	sbc	r3, r5, r3
   37654:	cmp	r0, r2
   37658:	sbcs	r3, r1, r3
   3765c:	movlt	r3, #1
   37660:	movge	r3, #0
   37664:	uxtb	r3, r3
   37668:	b	37790 <__assert_fail@plt+0x250a4>
   3766c:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   37670:	ldr	r3, [fp, #-188]	; 0xffffff44
   37674:	sub	r3, r2, r3
   37678:	add	r2, r3, #7
   3767c:	ldr	r3, [pc, #380]	; 37800 <__assert_fail@plt+0x25114>
   37680:	smull	r1, r3, r3, r2
   37684:	add	r3, r3, r2
   37688:	asr	r1, r3, #2
   3768c:	asr	r3, r2, #31
   37690:	sub	r1, r1, r3
   37694:	mov	r3, r1
   37698:	lsl	r3, r3, #3
   3769c:	sub	r3, r3, r1
   376a0:	sub	r1, r2, r3
   376a4:	cmp	r1, #0
   376a8:	bge	3771c <__assert_fail@plt+0x25030>
   376ac:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   376b0:	ldr	r3, [fp, #-188]	; 0xffffff44
   376b4:	sub	r3, r2, r3
   376b8:	add	r2, r3, #7
   376bc:	ldr	r3, [pc, #316]	; 37800 <__assert_fail@plt+0x25114>
   376c0:	smull	r1, r3, r3, r2
   376c4:	add	r3, r3, r2
   376c8:	asr	r1, r3, #2
   376cc:	asr	r3, r2, #31
   376d0:	sub	r1, r1, r3
   376d4:	mov	r3, r1
   376d8:	lsl	r3, r3, #3
   376dc:	sub	r3, r3, r1
   376e0:	sub	r1, r2, r3
   376e4:	mov	r2, r1
   376e8:	asr	r3, r2, #31
   376ec:	mov	r0, #0
   376f0:	mov	r1, #-2147483648	; 0x80000000
   376f4:	subs	r2, r0, r2
   376f8:	sbc	r3, r1, r3
   376fc:	sub	r1, fp, #860	; 0x35c
   37700:	ldrd	r0, [r1, #-8]
   37704:	cmp	r0, r2
   37708:	sbcs	r3, r1, r3
   3770c:	movlt	r3, #1
   37710:	movge	r3, #0
   37714:	uxtb	r3, r3
   37718:	b	37790 <__assert_fail@plt+0x250a4>
   3771c:	sub	r3, fp, #860	; 0x35c
   37720:	ldrd	r2, [r3, #-8]
   37724:	mvn	r0, #0
   37728:	mvn	r1, #-2147483648	; 0x80000000
   3772c:	subs	r0, r0, r2
   37730:	sbc	r1, r1, r3
   37734:	mov	r4, r0
   37738:	mov	r5, r1
   3773c:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   37740:	ldr	r3, [fp, #-188]	; 0xffffff44
   37744:	sub	r3, r2, r3
   37748:	add	r2, r3, #7
   3774c:	ldr	r3, [pc, #172]	; 37800 <__assert_fail@plt+0x25114>
   37750:	smull	r1, r3, r3, r2
   37754:	add	r3, r3, r2
   37758:	asr	r1, r3, #2
   3775c:	asr	r3, r2, #31
   37760:	sub	r1, r1, r3
   37764:	mov	r3, r1
   37768:	lsl	r3, r3, #3
   3776c:	sub	r3, r3, r1
   37770:	sub	r1, r2, r3
   37774:	mov	r2, r1
   37778:	asr	r3, r2, #31
   3777c:	cmp	r4, r2
   37780:	sbcs	r3, r5, r3
   37784:	movlt	r3, #1
   37788:	movge	r3, #0
   3778c:	uxtb	r3, r3
   37790:	cmp	r3, #0
   37794:	beq	37848 <__assert_fail@plt+0x2515c>
   37798:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   3779c:	ldr	r3, [fp, #-188]	; 0xffffff44
   377a0:	sub	r3, r2, r3
   377a4:	add	r2, r3, #7
   377a8:	ldr	r3, [pc, #80]	; 37800 <__assert_fail@plt+0x25114>
   377ac:	smull	r1, r3, r3, r2
   377b0:	add	r3, r3, r2
   377b4:	asr	r1, r3, #2
   377b8:	asr	r3, r2, #31
   377bc:	sub	r1, r1, r3
   377c0:	mov	r3, r1
   377c4:	lsl	r3, r3, #3
   377c8:	sub	r3, r3, r1
   377cc:	sub	r1, r2, r3
   377d0:	mov	r2, r1
   377d4:	asr	r3, r2, #31
   377d8:	sub	r1, fp, #860	; 0x35c
   377dc:	ldrd	r0, [r1, #-8]
   377e0:	adds	r2, r2, r0
   377e4:	adc	r3, r3, r1
   377e8:	sub	r1, fp, #860	; 0x35c
   377ec:	strd	r2, [r1, #-8]
   377f0:	b	37a3c <__assert_fail@plt+0x25350>
   377f4:	nop			; (mov r0, r0)
   377f8:	stmdbmi	r4!, {r0, r3, r6, r9, ip, pc}
   377fc:	subne	r2, r9, #-1845493760	; 0x92000000
   37800:	subls	r2, r9, #-1828716544	; 0x93000000
   37804:	andeq	sl, r6, r8, lsr r0
   37808:	andeq	sl, r6, r8, lsl #1
   3780c:	andeq	sl, r6, r8, lsr #1
   37810:	ldrdeq	sl, [r6], -r4
   37814:	andeq	sl, r6, r0, lsl r1
   37818:	andeq	sl, r6, ip, lsr #2
   3781c:	muleq	r6, r0, r1
   37820:	ldrdeq	sl, [r6], -r8
   37824:	andeq	r0, r0, r5, ror #16
   37828:	andeq	sl, r6, r8, ror #3
   3782c:	strdeq	sl, [r6], -ip
   37830:	andeq	sl, r6, ip, lsr r2
   37834:	andeq	sl, r6, ip, ror r2
   37838:	muleq	r6, r8, r2
   3783c:	ldrdeq	sl, [r6], -r8
   37840:	andeq	sl, r6, r4, lsl r3
   37844:	andeq	sl, r6, r8, lsr r3
   37848:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   3784c:	ldr	r3, [fp, #-188]	; 0xffffff44
   37850:	sub	r3, r2, r3
   37854:	add	r2, r3, #7
   37858:	ldr	r3, [pc, #-96]	; 37800 <__assert_fail@plt+0x25114>
   3785c:	smull	r1, r3, r3, r2
   37860:	add	r3, r3, r2
   37864:	asr	r1, r3, #2
   37868:	asr	r3, r2, #31
   3786c:	sub	r1, r1, r3
   37870:	mov	r3, r1
   37874:	lsl	r3, r3, #3
   37878:	sub	r3, r3, r1
   3787c:	sub	r1, r2, r3
   37880:	mov	r2, r1
   37884:	asr	r3, r2, #31
   37888:	sub	r1, fp, #860	; 0x35c
   3788c:	ldrd	r0, [r1, #-8]
   37890:	adds	r2, r2, r0
   37894:	adc	r3, r3, r1
   37898:	sub	r1, fp, #860	; 0x35c
   3789c:	strd	r2, [r1, #-8]
   378a0:	ldr	r3, [fp, #-200]	; 0xffffff38
   378a4:	cmp	r3, #0
   378a8:	bge	3792c <__assert_fail@plt+0x25240>
   378ac:	ldr	r3, [fp, #-200]	; 0xffffff38
   378b0:	rsb	r3, r3, #-2147483648	; 0x80000000
   378b4:	mov	r2, r3
   378b8:	asr	r3, r2, #31
   378bc:	sub	r1, fp, #860	; 0x35c
   378c0:	ldrd	r0, [r1, #-8]
   378c4:	cmp	r0, r2
   378c8:	sbcs	r3, r1, r3
   378cc:	blt	37914 <__assert_fail@plt+0x25228>
   378d0:	sub	r3, fp, #860	; 0x35c
   378d4:	ldrd	r2, [r3, #-8]
   378d8:	cmp	r2, #0
   378dc:	sbcs	r3, r3, #0
   378e0:	blt	3791c <__assert_fail@plt+0x25230>
   378e4:	ldr	r3, [fp, #-200]	; 0xffffff38
   378e8:	mov	r0, r3
   378ec:	asr	r1, r0, #31
   378f0:	sub	r3, fp, #860	; 0x35c
   378f4:	ldrd	r2, [r3, #-8]
   378f8:	adds	r2, r2, r0
   378fc:	adc	r3, r3, r1
   37900:	mvn	r0, #-2147483648	; 0x80000000
   37904:	mov	r1, #0
   37908:	cmp	r0, r2
   3790c:	sbcs	r3, r1, r3
   37910:	bge	3791c <__assert_fail@plt+0x25230>
   37914:	mov	r3, #1
   37918:	b	37920 <__assert_fail@plt+0x25234>
   3791c:	mov	r3, #0
   37920:	and	r3, r3, #1
   37924:	uxtb	r3, r3
   37928:	b	379e8 <__assert_fail@plt+0x252fc>
   3792c:	sub	r3, fp, #860	; 0x35c
   37930:	ldrd	r2, [r3, #-8]
   37934:	cmp	r2, #0
   37938:	sbcs	r3, r3, #0
   3793c:	bge	379b8 <__assert_fail@plt+0x252cc>
   37940:	ldr	r3, [fp, #-200]	; 0xffffff38
   37944:	mov	r0, r3
   37948:	asr	r1, r0, #31
   3794c:	sub	r3, fp, #860	; 0x35c
   37950:	ldrd	r2, [r3, #-8]
   37954:	mov	r4, #-2147483648	; 0x80000000
   37958:	mvn	r5, #0
   3795c:	subs	r2, r4, r2
   37960:	sbc	r3, r5, r3
   37964:	cmp	r0, r2
   37968:	sbcs	r3, r1, r3
   3796c:	blt	379a0 <__assert_fail@plt+0x252b4>
   37970:	ldr	r3, [fp, #-200]	; 0xffffff38
   37974:	mov	r0, r3
   37978:	asr	r1, r0, #31
   3797c:	sub	r3, fp, #860	; 0x35c
   37980:	ldrd	r2, [r3, #-8]
   37984:	adds	r2, r2, r0
   37988:	adc	r3, r3, r1
   3798c:	mvn	r0, #-2147483648	; 0x80000000
   37990:	mov	r1, #0
   37994:	cmp	r0, r2
   37998:	sbcs	r3, r1, r3
   3799c:	bge	379a8 <__assert_fail@plt+0x252bc>
   379a0:	mov	r3, #1
   379a4:	b	379ac <__assert_fail@plt+0x252c0>
   379a8:	mov	r3, #0
   379ac:	and	r3, r3, #1
   379b0:	uxtb	r3, r3
   379b4:	b	379e8 <__assert_fail@plt+0x252fc>
   379b8:	ldr	r2, [fp, #-200]	; 0xffffff38
   379bc:	mvn	r3, #-2147483648	; 0x80000000
   379c0:	sub	r3, r3, r2
   379c4:	mov	r0, r3
   379c8:	asr	r1, r0, #31
   379cc:	sub	r3, fp, #860	; 0x35c
   379d0:	ldrd	r2, [r3, #-8]
   379d4:	cmp	r0, r2
   379d8:	sbcs	r3, r1, r3
   379dc:	movlt	r3, #1
   379e0:	movge	r3, #0
   379e4:	uxtb	r3, r3
   379e8:	cmp	r3, #0
   379ec:	beq	37a08 <__assert_fail@plt+0x2531c>
   379f0:	sub	r3, fp, #860	; 0x35c
   379f4:	ldrd	r2, [r3, #-8]
   379f8:	ldr	r3, [fp, #-200]	; 0xffffff38
   379fc:	add	r3, r2, r3
   37a00:	str	r3, [fp, #-200]	; 0xffffff38
   37a04:	b	37a3c <__assert_fail@plt+0x25350>
   37a08:	sub	r3, fp, #860	; 0x35c
   37a0c:	ldrd	r2, [r3, #-8]
   37a10:	ldr	r3, [fp, #-200]	; 0xffffff38
   37a14:	add	r3, r2, r3
   37a18:	str	r3, [fp, #-200]	; 0xffffff38
   37a1c:	mvn	r3, #0
   37a20:	str	r3, [fp, #-180]	; 0xffffff4c
   37a24:	sub	r3, fp, #212	; 0xd4
   37a28:	mov	r1, r3
   37a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37a30:	bl	5e580 <__assert_fail@plt+0x4be94>
   37a34:	str	r0, [fp, #-40]	; 0xffffffd8
   37a38:	b	37a44 <__assert_fail@plt+0x25358>
   37a3c:	mvn	r3, #0
   37a40:	str	r3, [fp, #-40]	; 0xffffffd8
   37a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37a48:	cmn	r3, #1
   37a4c:	bne	37ad8 <__assert_fail@plt+0x253ec>
   37a50:	sub	r3, fp, #820	; 0x334
   37a54:	mov	r0, r3
   37a58:	bl	30028 <__assert_fail@plt+0x1d93c>
   37a5c:	mov	r3, r0
   37a60:	cmp	r3, #0
   37a64:	beq	393a4 <__assert_fail@plt+0x26cb8>
   37a68:	ldr	r0, [pc, #-620]	; 37804 <__assert_fail@plt+0x25118>
   37a6c:	bl	12398 <gettext@plt>
   37a70:	mov	r7, r0
   37a74:	sub	r3, fp, #1040	; 0x410
   37a78:	sub	r3, r3, #12
   37a7c:	sub	r3, r3, #8
   37a80:	sub	r0, fp, #820	; 0x334
   37a84:	mov	r2, #100	; 0x64
   37a88:	mov	r1, r3
   37a8c:	bl	31174 <__assert_fail@plt+0x1ea88>
   37a90:	mov	r8, r0
   37a94:	sub	r3, fp, #812	; 0x32c
   37a98:	ldrd	r4, [r3]
   37a9c:	ldr	r6, [fp, #-804]	; 0xfffffcdc
   37aa0:	sub	r2, fp, #384	; 0x180
   37aa4:	sub	r1, fp, #820	; 0x334
   37aa8:	sub	r0, fp, #212	; 0xd4
   37aac:	mov	r3, #100	; 0x64
   37ab0:	bl	35d74 <__assert_fail@plt+0x23688>
   37ab4:	mov	r3, r0
   37ab8:	str	r3, [sp, #4]
   37abc:	str	r6, [sp]
   37ac0:	mov	r2, r4
   37ac4:	mov	r3, r5
   37ac8:	mov	r1, r8
   37acc:	mov	r0, r7
   37ad0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37ad4:	b	39384 <__assert_fail@plt+0x26c98>
   37ad8:	sub	r3, fp, #820	; 0x334
   37adc:	mov	r0, r3
   37ae0:	bl	30028 <__assert_fail@plt+0x1d93c>
   37ae4:	mov	r3, r0
   37ae8:	cmp	r3, #0
   37aec:	beq	37b44 <__assert_fail@plt+0x25458>
   37af0:	ldr	r0, [pc, #-752]	; 37808 <__assert_fail@plt+0x2511c>
   37af4:	bl	12398 <gettext@plt>
   37af8:	mov	r4, r0
   37afc:	sub	r3, fp, #1040	; 0x410
   37b00:	sub	r3, r3, #12
   37b04:	sub	r3, r3, #8
   37b08:	sub	r0, fp, #820	; 0x334
   37b0c:	mov	r2, #100	; 0x64
   37b10:	mov	r1, r3
   37b14:	bl	31174 <__assert_fail@plt+0x1ea88>
   37b18:	mov	r5, r0
   37b1c:	sub	r2, fp, #384	; 0x180
   37b20:	sub	r1, fp, #820	; 0x334
   37b24:	sub	r0, fp, #212	; 0xd4
   37b28:	mov	r3, #100	; 0x64
   37b2c:	bl	35d74 <__assert_fail@plt+0x23688>
   37b30:	mov	r3, r0
   37b34:	mov	r2, r3
   37b38:	mov	r1, r5
   37b3c:	mov	r0, r4
   37b40:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37b44:	sub	r3, fp, #820	; 0x334
   37b48:	mov	r0, r3
   37b4c:	bl	30028 <__assert_fail@plt+0x1d93c>
   37b50:	mov	r3, r0
   37b54:	cmp	r3, #0
   37b58:	beq	37c24 <__assert_fail@plt+0x25538>
   37b5c:	ldr	r3, [fp, #-664]	; 0xfffffd68
   37b60:	cmp	r3, #0
   37b64:	bne	37ba4 <__assert_fail@plt+0x254b8>
   37b68:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   37b6c:	cmp	r3, #0
   37b70:	bne	37ba4 <__assert_fail@plt+0x254b8>
   37b74:	ldr	r0, [pc, #-880]	; 3780c <__assert_fail@plt+0x25120>
   37b78:	bl	12398 <gettext@plt>
   37b7c:	mov	r4, r0
   37b80:	sub	r1, fp, #384	; 0x180
   37b84:	sub	r3, fp, #212	; 0xd4
   37b88:	mov	r2, #100	; 0x64
   37b8c:	mov	r0, r3
   37b90:	bl	35e88 <__assert_fail@plt+0x2379c>
   37b94:	mov	r3, r0
   37b98:	mov	r1, r3
   37b9c:	mov	r0, r4
   37ba0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37ba4:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   37ba8:	cmp	r3, #0
   37bac:	beq	37bf4 <__assert_fail@plt+0x25508>
   37bb0:	ldr	r3, [fp, #-664]	; 0xfffffd68
   37bb4:	cmp	r3, #0
   37bb8:	beq	37bf4 <__assert_fail@plt+0x25508>
   37bbc:	ldr	r0, [pc, #-948]	; 37810 <__assert_fail@plt+0x25124>
   37bc0:	bl	12398 <gettext@plt>
   37bc4:	mov	r4, r0
   37bc8:	sub	r3, fp, #1040	; 0x410
   37bcc:	sub	r3, r3, #12
   37bd0:	sub	r3, r3, #8
   37bd4:	sub	r0, fp, #820	; 0x334
   37bd8:	mov	r2, #100	; 0x64
   37bdc:	mov	r1, r3
   37be0:	bl	31174 <__assert_fail@plt+0x1ea88>
   37be4:	mov	r3, r0
   37be8:	mov	r1, r3
   37bec:	mov	r0, r4
   37bf0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37bf4:	ldr	r0, [pc, #-1000]	; 37814 <__assert_fail@plt+0x25128>
   37bf8:	bl	12398 <gettext@plt>
   37bfc:	mov	r4, r0
   37c00:	sub	r2, fp, #384	; 0x180
   37c04:	sub	r1, fp, #820	; 0x334
   37c08:	sub	r0, fp, #212	; 0xd4
   37c0c:	mov	r3, #100	; 0x64
   37c10:	bl	35d74 <__assert_fail@plt+0x23688>
   37c14:	mov	r3, r0
   37c18:	mov	r1, r3
   37c1c:	mov	r0, r4
   37c20:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37c24:	sub	r3, fp, #812	; 0x32c
   37c28:	ldrd	r0, [r3, #88]	; 0x58
   37c2c:	sub	r3, fp, #812	; 0x32c
   37c30:	ldrd	r2, [r3, #96]	; 0x60
   37c34:	orr	r0, r0, r2
   37c38:	orr	r1, r1, r3
   37c3c:	sub	r3, fp, #812	; 0x32c
   37c40:	ldrd	r2, [r3, #104]	; 0x68
   37c44:	orr	r2, r2, r0
   37c48:	orr	r3, r3, r1
   37c4c:	orrs	r3, r2, r3
   37c50:	beq	3845c <__assert_fail@plt+0x25d70>
   37c54:	sub	r3, fp, #820	; 0x334
   37c58:	mov	r0, r3
   37c5c:	bl	30028 <__assert_fail@plt+0x1d93c>
   37c60:	mov	r3, r0
   37c64:	cmp	r3, #0
   37c68:	beq	37cdc <__assert_fail@plt+0x255f0>
   37c6c:	sub	r3, fp, #812	; 0x32c
   37c70:	ldrd	r2, [r3, #88]	; 0x58
   37c74:	orrs	r3, r2, r3
   37c78:	bne	37c8c <__assert_fail@plt+0x255a0>
   37c7c:	sub	r3, fp, #812	; 0x32c
   37c80:	ldrd	r2, [r3, #96]	; 0x60
   37c84:	orrs	r3, r2, r3
   37c88:	beq	37cac <__assert_fail@plt+0x255c0>
   37c8c:	ldr	r3, [fp, #-200]	; 0xffffff38
   37c90:	cmp	r3, #15
   37c94:	beq	37cac <__assert_fail@plt+0x255c0>
   37c98:	ldr	r0, [pc, #-1160]	; 37818 <__assert_fail@plt+0x2512c>
   37c9c:	bl	12398 <gettext@plt>
   37ca0:	mov	r3, r0
   37ca4:	mov	r0, r3
   37ca8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37cac:	sub	r3, fp, #812	; 0x32c
   37cb0:	ldrd	r2, [r3, #104]	; 0x68
   37cb4:	orrs	r3, r2, r3
   37cb8:	beq	37cdc <__assert_fail@plt+0x255f0>
   37cbc:	ldr	r3, [fp, #-204]	; 0xffffff34
   37cc0:	cmp	r3, #12
   37cc4:	beq	37cdc <__assert_fail@plt+0x255f0>
   37cc8:	ldr	r0, [pc, #-1204]	; 3781c <__assert_fail@plt+0x25130>
   37ccc:	bl	12398 <gettext@plt>
   37cd0:	mov	r3, r0
   37cd4:	mov	r0, r3
   37cd8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   37cdc:	sub	r3, fp, #812	; 0x32c
   37ce0:	ldrd	r2, [r3, #88]	; 0x58
   37ce4:	cmp	r2, #0
   37ce8:	sbcs	r3, r3, #0
   37cec:	bge	37d74 <__assert_fail@plt+0x25688>
   37cf0:	ldr	r3, [fp, #-192]	; 0xffffff40
   37cf4:	mov	r0, r3
   37cf8:	asr	r1, r0, #31
   37cfc:	sub	r3, fp, #812	; 0x32c
   37d00:	ldrd	r2, [r3, #88]	; 0x58
   37d04:	mov	r4, #-2147483648	; 0x80000000
   37d08:	mvn	r5, #0
   37d0c:	subs	r2, r4, r2
   37d10:	sbc	r3, r5, r3
   37d14:	cmp	r0, r2
   37d18:	sbcs	r3, r1, r3
   37d1c:	blt	37d5c <__assert_fail@plt+0x25670>
   37d20:	ldr	r3, [fp, #-192]	; 0xffffff40
   37d24:	cmp	r3, #0
   37d28:	blt	37d64 <__assert_fail@plt+0x25678>
   37d2c:	ldr	r3, [fp, #-192]	; 0xffffff40
   37d30:	mov	r0, r3
   37d34:	asr	r1, r0, #31
   37d38:	sub	r3, fp, #812	; 0x32c
   37d3c:	ldrd	r2, [r3, #88]	; 0x58
   37d40:	adds	r2, r2, r0
   37d44:	adc	r3, r3, r1
   37d48:	mvn	r0, #-2147483648	; 0x80000000
   37d4c:	mov	r1, #0
   37d50:	cmp	r0, r2
   37d54:	sbcs	r3, r1, r3
   37d58:	bge	37d64 <__assert_fail@plt+0x25678>
   37d5c:	mov	r3, #1
   37d60:	b	37d68 <__assert_fail@plt+0x2567c>
   37d64:	mov	r3, #0
   37d68:	and	r3, r3, #1
   37d6c:	uxtb	r3, r3
   37d70:	b	37e4c <__assert_fail@plt+0x25760>
   37d74:	ldr	r3, [fp, #-192]	; 0xffffff40
   37d78:	cmp	r3, #0
   37d7c:	bge	37dec <__assert_fail@plt+0x25700>
   37d80:	sub	r3, fp, #812	; 0x32c
   37d84:	ldrd	r0, [r3, #88]	; 0x58
   37d88:	ldr	r3, [fp, #-192]	; 0xffffff40
   37d8c:	rsb	r3, r3, #-2147483648	; 0x80000000
   37d90:	mov	r2, r3
   37d94:	asr	r3, r2, #31
   37d98:	cmp	r0, r2
   37d9c:	sbcs	r3, r1, r3
   37da0:	blt	37dd4 <__assert_fail@plt+0x256e8>
   37da4:	ldr	r3, [fp, #-192]	; 0xffffff40
   37da8:	mov	r0, r3
   37dac:	asr	r1, r0, #31
   37db0:	sub	r3, fp, #812	; 0x32c
   37db4:	ldrd	r2, [r3, #88]	; 0x58
   37db8:	adds	r2, r2, r0
   37dbc:	adc	r3, r3, r1
   37dc0:	mvn	r0, #-2147483648	; 0x80000000
   37dc4:	mov	r1, #0
   37dc8:	cmp	r0, r2
   37dcc:	sbcs	r3, r1, r3
   37dd0:	bge	37ddc <__assert_fail@plt+0x256f0>
   37dd4:	mov	r3, #1
   37dd8:	b	37de0 <__assert_fail@plt+0x256f4>
   37ddc:	mov	r3, #0
   37de0:	and	r3, r3, #1
   37de4:	uxtb	r3, r3
   37de8:	b	37e4c <__assert_fail@plt+0x25760>
   37dec:	sub	r3, fp, #812	; 0x32c
   37df0:	ldrd	r2, [r3, #88]	; 0x58
   37df4:	mvn	r0, #-2147483648	; 0x80000000
   37df8:	mov	r1, #0
   37dfc:	cmp	r0, r2
   37e00:	sbcs	r3, r1, r3
   37e04:	blt	37e38 <__assert_fail@plt+0x2574c>
   37e08:	sub	r3, fp, #812	; 0x32c
   37e0c:	ldrd	r2, [r3, #88]	; 0x58
   37e10:	mvn	r0, #-2147483648	; 0x80000000
   37e14:	mov	r1, #0
   37e18:	subs	r0, r0, r2
   37e1c:	sbc	r1, r1, r3
   37e20:	ldr	r3, [fp, #-192]	; 0xffffff40
   37e24:	mov	r2, r3
   37e28:	asr	r3, r2, #31
   37e2c:	cmp	r0, r2
   37e30:	sbcs	r3, r1, r3
   37e34:	bge	37e40 <__assert_fail@plt+0x25754>
   37e38:	mov	r3, #1
   37e3c:	b	37e44 <__assert_fail@plt+0x25758>
   37e40:	mov	r3, #0
   37e44:	and	r3, r3, #1
   37e48:	uxtb	r3, r3
   37e4c:	cmp	r3, #0
   37e50:	beq	37e74 <__assert_fail@plt+0x25788>
   37e54:	ldr	r3, [fp, #-192]	; 0xffffff40
   37e58:	mov	r1, r3
   37e5c:	sub	r3, fp, #812	; 0x32c
   37e60:	ldrd	r2, [r3, #88]	; 0x58
   37e64:	mov	r3, r2
   37e68:	add	r3, r1, r3
   37e6c:	str	r3, [fp, #-872]	; 0xfffffc98
   37e70:	b	38254 <__assert_fail@plt+0x25b68>
   37e74:	ldr	r3, [fp, #-192]	; 0xffffff40
   37e78:	mov	r1, r3
   37e7c:	sub	r3, fp, #812	; 0x32c
   37e80:	ldrd	r2, [r3, #88]	; 0x58
   37e84:	mov	r3, r2
   37e88:	add	r3, r1, r3
   37e8c:	str	r3, [fp, #-872]	; 0xfffffc98
   37e90:	sub	r3, fp, #812	; 0x32c
   37e94:	ldrd	r2, [r3, #96]	; 0x60
   37e98:	cmp	r2, #0
   37e9c:	sbcs	r3, r3, #0
   37ea0:	bge	37f28 <__assert_fail@plt+0x2583c>
   37ea4:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37ea8:	mov	r0, r3
   37eac:	asr	r1, r0, #31
   37eb0:	sub	r3, fp, #812	; 0x32c
   37eb4:	ldrd	r2, [r3, #96]	; 0x60
   37eb8:	mov	r4, #-2147483648	; 0x80000000
   37ebc:	mvn	r5, #0
   37ec0:	subs	r2, r4, r2
   37ec4:	sbc	r3, r5, r3
   37ec8:	cmp	r0, r2
   37ecc:	sbcs	r3, r1, r3
   37ed0:	blt	37f10 <__assert_fail@plt+0x25824>
   37ed4:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37ed8:	cmp	r3, #0
   37edc:	blt	37f18 <__assert_fail@plt+0x2582c>
   37ee0:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37ee4:	mov	r0, r3
   37ee8:	asr	r1, r0, #31
   37eec:	sub	r3, fp, #812	; 0x32c
   37ef0:	ldrd	r2, [r3, #96]	; 0x60
   37ef4:	adds	r2, r2, r0
   37ef8:	adc	r3, r3, r1
   37efc:	mvn	r0, #-2147483648	; 0x80000000
   37f00:	mov	r1, #0
   37f04:	cmp	r0, r2
   37f08:	sbcs	r3, r1, r3
   37f0c:	bge	37f18 <__assert_fail@plt+0x2582c>
   37f10:	mov	r3, #1
   37f14:	b	37f1c <__assert_fail@plt+0x25830>
   37f18:	mov	r3, #0
   37f1c:	and	r3, r3, #1
   37f20:	uxtb	r3, r3
   37f24:	b	38000 <__assert_fail@plt+0x25914>
   37f28:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37f2c:	cmp	r3, #0
   37f30:	bge	37fa0 <__assert_fail@plt+0x258b4>
   37f34:	sub	r3, fp, #812	; 0x32c
   37f38:	ldrd	r0, [r3, #96]	; 0x60
   37f3c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37f40:	rsb	r3, r3, #-2147483648	; 0x80000000
   37f44:	mov	r2, r3
   37f48:	asr	r3, r2, #31
   37f4c:	cmp	r0, r2
   37f50:	sbcs	r3, r1, r3
   37f54:	blt	37f88 <__assert_fail@plt+0x2589c>
   37f58:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37f5c:	mov	r0, r3
   37f60:	asr	r1, r0, #31
   37f64:	sub	r3, fp, #812	; 0x32c
   37f68:	ldrd	r2, [r3, #96]	; 0x60
   37f6c:	adds	r2, r2, r0
   37f70:	adc	r3, r3, r1
   37f74:	mvn	r0, #-2147483648	; 0x80000000
   37f78:	mov	r1, #0
   37f7c:	cmp	r0, r2
   37f80:	sbcs	r3, r1, r3
   37f84:	bge	37f90 <__assert_fail@plt+0x258a4>
   37f88:	mov	r3, #1
   37f8c:	b	37f94 <__assert_fail@plt+0x258a8>
   37f90:	mov	r3, #0
   37f94:	and	r3, r3, #1
   37f98:	uxtb	r3, r3
   37f9c:	b	38000 <__assert_fail@plt+0x25914>
   37fa0:	sub	r3, fp, #812	; 0x32c
   37fa4:	ldrd	r2, [r3, #96]	; 0x60
   37fa8:	mvn	r0, #-2147483648	; 0x80000000
   37fac:	mov	r1, #0
   37fb0:	cmp	r0, r2
   37fb4:	sbcs	r3, r1, r3
   37fb8:	blt	37fec <__assert_fail@plt+0x25900>
   37fbc:	sub	r3, fp, #812	; 0x32c
   37fc0:	ldrd	r2, [r3, #96]	; 0x60
   37fc4:	mvn	r0, #-2147483648	; 0x80000000
   37fc8:	mov	r1, #0
   37fcc:	subs	r0, r0, r2
   37fd0:	sbc	r1, r1, r3
   37fd4:	ldr	r3, [fp, #-196]	; 0xffffff3c
   37fd8:	mov	r2, r3
   37fdc:	asr	r3, r2, #31
   37fe0:	cmp	r0, r2
   37fe4:	sbcs	r3, r1, r3
   37fe8:	bge	37ff4 <__assert_fail@plt+0x25908>
   37fec:	mov	r3, #1
   37ff0:	b	37ff8 <__assert_fail@plt+0x2590c>
   37ff4:	mov	r3, #0
   37ff8:	and	r3, r3, #1
   37ffc:	uxtb	r3, r3
   38000:	cmp	r3, #0
   38004:	beq	38028 <__assert_fail@plt+0x2593c>
   38008:	ldr	r3, [fp, #-196]	; 0xffffff3c
   3800c:	mov	r1, r3
   38010:	sub	r3, fp, #812	; 0x32c
   38014:	ldrd	r2, [r3, #96]	; 0x60
   38018:	mov	r3, r2
   3801c:	add	r3, r1, r3
   38020:	str	r3, [fp, #-876]	; 0xfffffc94
   38024:	b	38254 <__assert_fail@plt+0x25b68>
   38028:	ldr	r3, [fp, #-196]	; 0xffffff3c
   3802c:	mov	r1, r3
   38030:	sub	r3, fp, #812	; 0x32c
   38034:	ldrd	r2, [r3, #96]	; 0x60
   38038:	mov	r3, r2
   3803c:	add	r3, r1, r3
   38040:	str	r3, [fp, #-876]	; 0xfffffc94
   38044:	sub	r3, fp, #812	; 0x32c
   38048:	ldrd	r2, [r3, #104]	; 0x68
   3804c:	cmp	r2, #0
   38050:	sbcs	r3, r3, #0
   38054:	bge	380dc <__assert_fail@plt+0x259f0>
   38058:	ldr	r3, [fp, #-200]	; 0xffffff38
   3805c:	mov	r0, r3
   38060:	asr	r1, r0, #31
   38064:	sub	r3, fp, #812	; 0x32c
   38068:	ldrd	r2, [r3, #104]	; 0x68
   3806c:	mov	r4, #-2147483648	; 0x80000000
   38070:	mvn	r5, #0
   38074:	subs	r2, r4, r2
   38078:	sbc	r3, r5, r3
   3807c:	cmp	r0, r2
   38080:	sbcs	r3, r1, r3
   38084:	blt	380c4 <__assert_fail@plt+0x259d8>
   38088:	ldr	r3, [fp, #-200]	; 0xffffff38
   3808c:	cmp	r3, #0
   38090:	blt	380cc <__assert_fail@plt+0x259e0>
   38094:	ldr	r3, [fp, #-200]	; 0xffffff38
   38098:	mov	r0, r3
   3809c:	asr	r1, r0, #31
   380a0:	sub	r3, fp, #812	; 0x32c
   380a4:	ldrd	r2, [r3, #104]	; 0x68
   380a8:	adds	r2, r2, r0
   380ac:	adc	r3, r3, r1
   380b0:	mvn	r0, #-2147483648	; 0x80000000
   380b4:	mov	r1, #0
   380b8:	cmp	r0, r2
   380bc:	sbcs	r3, r1, r3
   380c0:	bge	380cc <__assert_fail@plt+0x259e0>
   380c4:	mov	r3, #1
   380c8:	b	380d0 <__assert_fail@plt+0x259e4>
   380cc:	mov	r3, #0
   380d0:	and	r3, r3, #1
   380d4:	uxtb	r3, r3
   380d8:	b	381b4 <__assert_fail@plt+0x25ac8>
   380dc:	ldr	r3, [fp, #-200]	; 0xffffff38
   380e0:	cmp	r3, #0
   380e4:	bge	38154 <__assert_fail@plt+0x25a68>
   380e8:	sub	r3, fp, #812	; 0x32c
   380ec:	ldrd	r0, [r3, #104]	; 0x68
   380f0:	ldr	r3, [fp, #-200]	; 0xffffff38
   380f4:	rsb	r3, r3, #-2147483648	; 0x80000000
   380f8:	mov	r2, r3
   380fc:	asr	r3, r2, #31
   38100:	cmp	r0, r2
   38104:	sbcs	r3, r1, r3
   38108:	blt	3813c <__assert_fail@plt+0x25a50>
   3810c:	ldr	r3, [fp, #-200]	; 0xffffff38
   38110:	mov	r0, r3
   38114:	asr	r1, r0, #31
   38118:	sub	r3, fp, #812	; 0x32c
   3811c:	ldrd	r2, [r3, #104]	; 0x68
   38120:	adds	r2, r2, r0
   38124:	adc	r3, r3, r1
   38128:	mvn	r0, #-2147483648	; 0x80000000
   3812c:	mov	r1, #0
   38130:	cmp	r0, r2
   38134:	sbcs	r3, r1, r3
   38138:	bge	38144 <__assert_fail@plt+0x25a58>
   3813c:	mov	r3, #1
   38140:	b	38148 <__assert_fail@plt+0x25a5c>
   38144:	mov	r3, #0
   38148:	and	r3, r3, #1
   3814c:	uxtb	r3, r3
   38150:	b	381b4 <__assert_fail@plt+0x25ac8>
   38154:	sub	r3, fp, #812	; 0x32c
   38158:	ldrd	r2, [r3, #104]	; 0x68
   3815c:	mvn	r0, #-2147483648	; 0x80000000
   38160:	mov	r1, #0
   38164:	cmp	r0, r2
   38168:	sbcs	r3, r1, r3
   3816c:	blt	381a0 <__assert_fail@plt+0x25ab4>
   38170:	sub	r3, fp, #812	; 0x32c
   38174:	ldrd	r2, [r3, #104]	; 0x68
   38178:	mvn	r0, #-2147483648	; 0x80000000
   3817c:	mov	r1, #0
   38180:	subs	r0, r0, r2
   38184:	sbc	r1, r1, r3
   38188:	ldr	r3, [fp, #-200]	; 0xffffff38
   3818c:	mov	r2, r3
   38190:	asr	r3, r2, #31
   38194:	cmp	r0, r2
   38198:	sbcs	r3, r1, r3
   3819c:	bge	381a8 <__assert_fail@plt+0x25abc>
   381a0:	mov	r3, #1
   381a4:	b	381ac <__assert_fail@plt+0x25ac0>
   381a8:	mov	r3, #0
   381ac:	and	r3, r3, #1
   381b0:	uxtb	r3, r3
   381b4:	cmp	r3, #0
   381b8:	beq	381dc <__assert_fail@plt+0x25af0>
   381bc:	ldr	r3, [fp, #-200]	; 0xffffff38
   381c0:	mov	r1, r3
   381c4:	sub	r3, fp, #812	; 0x32c
   381c8:	ldrd	r2, [r3, #104]	; 0x68
   381cc:	mov	r3, r2
   381d0:	add	r3, r1, r3
   381d4:	str	r3, [fp, #-880]	; 0xfffffc90
   381d8:	b	38254 <__assert_fail@plt+0x25b68>
   381dc:	ldr	r3, [fp, #-200]	; 0xffffff38
   381e0:	mov	r1, r3
   381e4:	sub	r3, fp, #812	; 0x32c
   381e8:	ldrd	r2, [r3, #104]	; 0x68
   381ec:	mov	r3, r2
   381f0:	add	r3, r1, r3
   381f4:	str	r3, [fp, #-880]	; 0xfffffc90
   381f8:	ldr	r3, [fp, #-872]	; 0xfffffc98
   381fc:	str	r3, [fp, #-192]	; 0xffffff40
   38200:	ldr	r3, [fp, #-876]	; 0xfffffc94
   38204:	str	r3, [fp, #-196]	; 0xffffff3c
   38208:	ldr	r3, [fp, #-880]	; 0xfffffc90
   3820c:	str	r3, [fp, #-200]	; 0xffffff38
   38210:	ldr	r3, [fp, #-248]	; 0xffffff08
   38214:	str	r3, [fp, #-204]	; 0xffffff34
   38218:	ldr	r3, [fp, #-252]	; 0xffffff04
   3821c:	str	r3, [fp, #-208]	; 0xffffff30
   38220:	ldr	r3, [fp, #-256]	; 0xffffff00
   38224:	str	r3, [fp, #-212]	; 0xffffff2c
   38228:	ldr	r3, [fp, #-224]	; 0xffffff20
   3822c:	str	r3, [fp, #-180]	; 0xffffff4c
   38230:	sub	r3, fp, #212	; 0xd4
   38234:	mov	r1, r3
   38238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3823c:	bl	5e580 <__assert_fail@plt+0x4be94>
   38240:	str	r0, [fp, #-40]	; 0xffffffd8
   38244:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38248:	cmn	r3, #1
   3824c:	bne	382d8 <__assert_fail@plt+0x25bec>
   38250:	b	3828c <__assert_fail@plt+0x25ba0>
   38254:	sub	r3, fp, #820	; 0x334
   38258:	mov	r0, r3
   3825c:	bl	30028 <__assert_fail@plt+0x1d93c>
   38260:	mov	r3, r0
   38264:	cmp	r3, #0
   38268:	beq	393ac <__assert_fail@plt+0x26cc0>
   3826c:	ldr	r0, [pc, #-2644]	; 37820 <__assert_fail@plt+0x25134>
   38270:	bl	12398 <gettext@plt>
   38274:	mov	r3, r0
   38278:	ldr	r2, [pc, #-2652]	; 37824 <__assert_fail@plt+0x25138>
   3827c:	ldr	r1, [pc, #-2652]	; 37828 <__assert_fail@plt+0x2513c>
   38280:	mov	r0, r3
   38284:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   38288:	b	393ac <__assert_fail@plt+0x26cc0>
   3828c:	sub	r3, fp, #820	; 0x334
   38290:	mov	r0, r3
   38294:	bl	30028 <__assert_fail@plt+0x1d93c>
   38298:	mov	r3, r0
   3829c:	cmp	r3, #0
   382a0:	beq	38454 <__assert_fail@plt+0x25d68>
   382a4:	ldr	r0, [pc, #-2688]	; 3782c <__assert_fail@plt+0x25140>
   382a8:	bl	12398 <gettext@plt>
   382ac:	mov	r4, r0
   382b0:	sub	r2, fp, #384	; 0x180
   382b4:	sub	r1, fp, #820	; 0x334
   382b8:	sub	r0, fp, #212	; 0xd4
   382bc:	mov	r3, #100	; 0x64
   382c0:	bl	35d74 <__assert_fail@plt+0x23688>
   382c4:	mov	r3, r0
   382c8:	mov	r1, r3
   382cc:	mov	r0, r4
   382d0:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   382d4:	b	38454 <__assert_fail@plt+0x25d68>
   382d8:	sub	r3, fp, #820	; 0x334
   382dc:	mov	r0, r3
   382e0:	bl	30028 <__assert_fail@plt+0x1d93c>
   382e4:	mov	r3, r0
   382e8:	cmp	r3, #0
   382ec:	beq	3845c <__assert_fail@plt+0x25d70>
   382f0:	ldr	r0, [pc, #-2760]	; 37830 <__assert_fail@plt+0x25144>
   382f4:	bl	12398 <gettext@plt>
   382f8:	mov	ip, r0
   382fc:	sub	r3, fp, #812	; 0x32c
   38300:	ldrd	r4, [r3, #88]	; 0x58
   38304:	sub	r3, fp, #812	; 0x32c
   38308:	ldrd	r2, [r3, #96]	; 0x60
   3830c:	sub	r1, fp, #812	; 0x32c
   38310:	ldrd	r0, [r1, #104]	; 0x68
   38314:	strd	r0, [sp, #8]
   38318:	strd	r2, [sp]
   3831c:	mov	r2, r4
   38320:	mov	r3, r5
   38324:	mov	r0, ip
   38328:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3832c:	ldr	r0, [pc, #-2816]	; 37834 <__assert_fail@plt+0x25148>
   38330:	bl	12398 <gettext@plt>
   38334:	mov	r4, r0
   38338:	sub	r2, fp, #384	; 0x180
   3833c:	sub	r1, fp, #820	; 0x334
   38340:	sub	r0, fp, #212	; 0xd4
   38344:	mov	r3, #100	; 0x64
   38348:	bl	35d74 <__assert_fail@plt+0x23688>
   3834c:	mov	r3, r0
   38350:	mov	r1, r3
   38354:	mov	r0, r4
   38358:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3835c:	ldr	r3, [fp, #-224]	; 0xffffff20
   38360:	cmn	r3, #1
   38364:	beq	3838c <__assert_fail@plt+0x25ca0>
   38368:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3836c:	ldr	r3, [fp, #-224]	; 0xffffff20
   38370:	cmp	r2, r3
   38374:	beq	3838c <__assert_fail@plt+0x25ca0>
   38378:	ldr	r0, [pc, #-2888]	; 37838 <__assert_fail@plt+0x2514c>
   3837c:	bl	12398 <gettext@plt>
   38380:	mov	r3, r0
   38384:	mov	r0, r3
   38388:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3838c:	sub	r3, fp, #812	; 0x32c
   38390:	ldrd	r2, [r3, #104]	; 0x68
   38394:	orrs	r3, r2, r3
   38398:	bne	3845c <__assert_fail@plt+0x25d70>
   3839c:	ldr	r2, [fp, #-200]	; 0xffffff38
   383a0:	ldr	r3, [fp, #-880]	; 0xfffffc90
   383a4:	cmp	r2, r3
   383a8:	bne	383cc <__assert_fail@plt+0x25ce0>
   383ac:	sub	r3, fp, #812	; 0x32c
   383b0:	ldrd	r2, [r3, #96]	; 0x60
   383b4:	orrs	r3, r2, r3
   383b8:	bne	3845c <__assert_fail@plt+0x25d70>
   383bc:	ldr	r2, [fp, #-196]	; 0xffffff3c
   383c0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   383c4:	cmp	r2, r3
   383c8:	beq	3845c <__assert_fail@plt+0x25d70>
   383cc:	ldr	r0, [pc, #-2968]	; 3783c <__assert_fail@plt+0x25150>
   383d0:	bl	12398 <gettext@plt>
   383d4:	mov	r3, r0
   383d8:	mov	r0, r3
   383dc:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   383e0:	ldr	r0, [pc, #-2984]	; 37840 <__assert_fail@plt+0x25154>
   383e4:	bl	12398 <gettext@plt>
   383e8:	mov	r4, r0
   383ec:	ldr	r3, [fp, #-872]	; 0xfffffc98
   383f0:	sub	r2, fp, #896	; 0x380
   383f4:	mov	r1, r2
   383f8:	mov	r0, r3
   383fc:	bl	34b2c <__assert_fail@plt+0x22440>
   38400:	mov	r1, r0
   38404:	ldr	r3, [fp, #-876]	; 0xfffffc94
   38408:	add	r2, r3, #1
   3840c:	ldr	r3, [fp, #-880]	; 0xfffffc90
   38410:	mov	r0, r4
   38414:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   38418:	ldr	r0, [pc, #-3036]	; 37844 <__assert_fail@plt+0x25158>
   3841c:	bl	12398 <gettext@plt>
   38420:	mov	r4, r0
   38424:	ldr	r3, [fp, #-192]	; 0xffffff40
   38428:	sub	r2, fp, #896	; 0x380
   3842c:	mov	r1, r2
   38430:	mov	r0, r3
   38434:	bl	34b2c <__assert_fail@plt+0x22440>
   38438:	mov	r1, r0
   3843c:	ldr	r3, [fp, #-196]	; 0xffffff3c
   38440:	add	r2, r3, #1
   38444:	ldr	r3, [fp, #-200]	; 0xffffff38
   38448:	mov	r0, r4
   3844c:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   38450:	b	3845c <__assert_fail@plt+0x25d70>
   38454:	nop			; (mov r0, r0)
   38458:	b	39384 <__assert_fail@plt+0x26c98>
   3845c:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   38460:	cmp	r3, #0
   38464:	beq	38784 <__assert_fail@plt+0x26098>
   38468:	mov	r3, #0
   3846c:	strb	r3, [fp, #-101]	; 0xffffff9b
   38470:	ldr	r3, [fp, #-176]	; 0xffffff50
   38474:	str	r3, [fp, #-108]	; 0xffffff94
   38478:	ldr	r3, [fp, #-796]	; 0xfffffce4
   3847c:	mvn	r3, r3
   38480:	lsr	r3, r3, #31
   38484:	uxtb	r2, r3
   38488:	ldr	r3, [fp, #-108]	; 0xffffff94
   3848c:	lsr	r3, r3, #31
   38490:	uxtb	r3, r3
   38494:	eor	r3, r3, r2
   38498:	uxtb	r3, r3
   3849c:	cmp	r3, #0
   384a0:	beq	384ac <__assert_fail@plt+0x25dc0>
   384a4:	mov	r3, #0
   384a8:	b	38524 <__assert_fail@plt+0x25e38>
   384ac:	ldr	r3, [fp, #-796]	; 0xfffffce4
   384b0:	cmp	r3, #0
   384b4:	bge	384f0 <__assert_fail@plt+0x25e04>
   384b8:	ldr	r3, [fp, #-796]	; 0xfffffce4
   384bc:	mov	r2, r3
   384c0:	asr	r3, r2, #31
   384c4:	adds	r0, r2, #0
   384c8:	adc	r1, r3, #-2147483648	; 0x80000000
   384cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   384d0:	mov	r2, r3
   384d4:	asr	r3, r2, #31
   384d8:	cmp	r0, r2
   384dc:	sbcs	r3, r1, r3
   384e0:	movlt	r3, #1
   384e4:	movge	r3, #0
   384e8:	uxtb	r3, r3
   384ec:	b	38524 <__assert_fail@plt+0x25e38>
   384f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   384f4:	mov	r2, r3
   384f8:	asr	r3, r2, #31
   384fc:	subs	r0, r2, #1
   38500:	sbc	r1, r3, #-2147483648	; 0x80000000
   38504:	ldr	r3, [fp, #-796]	; 0xfffffce4
   38508:	mov	r2, r3
   3850c:	asr	r3, r2, #31
   38510:	cmp	r0, r2
   38514:	sbcs	r3, r1, r3
   38518:	movlt	r3, #1
   3851c:	movge	r3, #0
   38520:	uxtb	r3, r3
   38524:	cmp	r3, #0
   38528:	beq	3855c <__assert_fail@plt+0x25e70>
   3852c:	ldr	r3, [fp, #-796]	; 0xfffffce4
   38530:	mov	r0, r3
   38534:	asr	r1, r0, #31
   38538:	ldr	r3, [fp, #-108]	; 0xffffff94
   3853c:	mov	r2, r3
   38540:	asr	r3, r2, #31
   38544:	subs	r2, r0, r2
   38548:	sbc	r3, r1, r3
   3854c:	sub	r1, fp, #908	; 0x38c
   38550:	strd	r2, [r1]
   38554:	mov	r3, #1
   38558:	b	38588 <__assert_fail@plt+0x25e9c>
   3855c:	ldr	r3, [fp, #-796]	; 0xfffffce4
   38560:	mov	r0, r3
   38564:	asr	r1, r0, #31
   38568:	ldr	r3, [fp, #-108]	; 0xffffff94
   3856c:	mov	r2, r3
   38570:	asr	r3, r2, #31
   38574:	subs	r2, r0, r2
   38578:	sbc	r3, r1, r3
   3857c:	sub	r1, fp, #908	; 0x38c
   38580:	strd	r2, [r1]
   38584:	mov	r3, #0
   38588:	ldrb	r2, [fp, #-101]	; 0xffffff9b
   3858c:	orr	r3, r2, r3
   38590:	cmp	r3, #0
   38594:	movne	r3, #1
   38598:	moveq	r3, #0
   3859c:	strb	r3, [fp, #-101]	; 0xffffff9b
   385a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   385a4:	mvn	r3, r3
   385a8:	lsr	r3, r3, #31
   385ac:	uxtb	r1, r3
   385b0:	sub	r3, fp, #908	; 0x38c
   385b4:	ldrd	r2, [r3]
   385b8:	lsr	r3, r3, #31
   385bc:	uxtb	r3, r3
   385c0:	eor	r3, r3, r1
   385c4:	uxtb	r3, r3
   385c8:	cmp	r3, #0
   385cc:	beq	38670 <__assert_fail@plt+0x25f84>
   385d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   385d4:	mov	r0, r3
   385d8:	asr	r1, r0, #31
   385dc:	sub	r3, fp, #908	; 0x38c
   385e0:	ldrd	r2, [r3]
   385e4:	cmp	r0, r2
   385e8:	sbcs	r3, r1, r3
   385ec:	bge	38634 <__assert_fail@plt+0x25f48>
   385f0:	sub	r3, fp, #908	; 0x38c
   385f4:	ldrd	r0, [r3]
   385f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   385fc:	mov	r2, r3
   38600:	asr	r3, r2, #31
   38604:	subs	r2, r0, r2
   38608:	sbc	r3, r1, r3
   3860c:	subs	r2, r2, #1
   38610:	sbc	r3, r3, #0
   38614:	mvn	r0, #-2147483648	; 0x80000000
   38618:	mov	r1, #0
   3861c:	cmp	r0, r2
   38620:	sbcs	r3, r1, r3
   38624:	movlt	r3, #1
   38628:	movge	r3, #0
   3862c:	uxtb	r3, r3
   38630:	b	386dc <__assert_fail@plt+0x25ff0>
   38634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38638:	mov	r0, r3
   3863c:	asr	r1, r0, #31
   38640:	sub	r3, fp, #908	; 0x38c
   38644:	ldrd	r2, [r3]
   38648:	subs	r2, r0, r2
   3864c:	sbc	r3, r1, r3
   38650:	mvn	r0, #-2147483648	; 0x80000000
   38654:	mov	r1, #0
   38658:	cmp	r0, r2
   3865c:	sbcs	r3, r1, r3
   38660:	movlt	r3, #1
   38664:	movge	r3, #0
   38668:	uxtb	r3, r3
   3866c:	b	386dc <__assert_fail@plt+0x25ff0>
   38670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38674:	cmp	r3, #0
   38678:	bge	386ac <__assert_fail@plt+0x25fc0>
   3867c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38680:	add	r3, r3, #-2147483648	; 0x80000000
   38684:	mov	r0, r3
   38688:	asr	r1, r0, #31
   3868c:	sub	r3, fp, #908	; 0x38c
   38690:	ldrd	r2, [r3]
   38694:	cmp	r0, r2
   38698:	sbcs	r3, r1, r3
   3869c:	movlt	r3, #1
   386a0:	movge	r3, #0
   386a4:	uxtb	r3, r3
   386a8:	b	386dc <__assert_fail@plt+0x25ff0>
   386ac:	sub	r3, fp, #908	; 0x38c
   386b0:	ldrd	r2, [r3]
   386b4:	subs	r0, r2, #-2147483647	; 0x80000001
   386b8:	adc	r1, r3, #0
   386bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   386c0:	mov	r2, r3
   386c4:	asr	r3, r2, #31
   386c8:	cmp	r0, r2
   386cc:	sbcs	r3, r1, r3
   386d0:	movlt	r3, #1
   386d4:	movge	r3, #0
   386d8:	uxtb	r3, r3
   386dc:	cmp	r3, #0
   386e0:	beq	38704 <__assert_fail@plt+0x26018>
   386e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   386e8:	sub	r3, fp, #908	; 0x38c
   386ec:	ldrd	r2, [r3]
   386f0:	mov	r3, r2
   386f4:	sub	r3, r1, r3
   386f8:	str	r3, [fp, #-912]	; 0xfffffc70
   386fc:	mov	r3, #1
   38700:	b	38720 <__assert_fail@plt+0x26034>
   38704:	ldr	r1, [fp, #-40]	; 0xffffffd8
   38708:	sub	r3, fp, #908	; 0x38c
   3870c:	ldrd	r2, [r3]
   38710:	mov	r3, r2
   38714:	sub	r3, r1, r3
   38718:	str	r3, [fp, #-912]	; 0xfffffc70
   3871c:	mov	r3, #0
   38720:	ldrb	r2, [fp, #-101]	; 0xffffff9b
   38724:	orr	r3, r2, r3
   38728:	cmp	r3, #0
   3872c:	movne	r3, #1
   38730:	moveq	r3, #0
   38734:	strb	r3, [fp, #-101]	; 0xffffff9b
   38738:	ldrb	r3, [fp, #-101]	; 0xffffff9b
   3873c:	cmp	r3, #0
   38740:	beq	3877c <__assert_fail@plt+0x26090>
   38744:	sub	r3, fp, #820	; 0x334
   38748:	mov	r0, r3
   3874c:	bl	30028 <__assert_fail@plt+0x1d93c>
   38750:	mov	r3, r0
   38754:	cmp	r3, #0
   38758:	beq	393b4 <__assert_fail@plt+0x26cc8>
   3875c:	ldr	r0, [pc, #1084]	; 38ba0 <__assert_fail@plt+0x264b4>
   38760:	bl	12398 <gettext@plt>
   38764:	mov	r2, r0
   38768:	ldr	r3, [fp, #-796]	; 0xfffffce4
   3876c:	mov	r1, r3
   38770:	mov	r0, r2
   38774:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   38778:	b	39384 <__assert_fail@plt+0x26c98>
   3877c:	ldr	r3, [fp, #-912]	; 0xfffffc70
   38780:	str	r3, [fp, #-40]	; 0xffffffd8
   38784:	sub	r3, fp, #820	; 0x334
   38788:	mov	r0, r3
   3878c:	bl	30028 <__assert_fail@plt+0x1d93c>
   38790:	mov	r3, r0
   38794:	cmp	r3, #0
   38798:	beq	387dc <__assert_fail@plt+0x260f0>
   3879c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   387a0:	mov	r2, r3
   387a4:	asr	r3, r2, #31
   387a8:	strd	r2, [fp, #-116]	; 0xffffff8c
   387ac:	ldr	r0, [pc, #1008]	; 38ba4 <__assert_fail@plt+0x264b8>
   387b0:	bl	12398 <gettext@plt>
   387b4:	mov	r4, r0
   387b8:	sub	r2, fp, #384	; 0x180
   387bc:	sub	r1, fp, #820	; 0x334
   387c0:	sub	r0, fp, #212	; 0xd4
   387c4:	mov	r3, #100	; 0x64
   387c8:	bl	35d74 <__assert_fail@plt+0x23688>
   387cc:	mov	r1, r0
   387d0:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   387d4:	mov	r0, r4
   387d8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   387dc:	ldr	r3, [fp, #-728]	; 0xfffffd28
   387e0:	mov	r2, r3
   387e4:	asr	r3, r2, #31
   387e8:	strd	r2, [fp, #-124]	; 0xffffff84
   387ec:	ldr	r3, [fp, #-676]	; 0xfffffd5c
   387f0:	mov	r0, r3
   387f4:	asr	r1, r0, #31
   387f8:	ldrd	r2, [fp, #-124]	; 0xffffff84
   387fc:	adds	r2, r2, r0
   38800:	adc	r3, r3, r1
   38804:	strd	r2, [fp, #-132]	; 0xffffff7c
   38808:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   3880c:	add	r3, pc, #884	; 0x374
   38810:	ldrd	r2, [r3]
   38814:	bl	63d78 <__assert_fail@plt+0x5168c>
   38818:	mov	r0, r2
   3881c:	mov	r1, r3
   38820:	add	r3, pc, #864	; 0x360
   38824:	ldrd	r2, [r3]
   38828:	adds	r0, r0, r2
   3882c:	adc	r1, r1, r3
   38830:	add	r3, pc, #848	; 0x350
   38834:	ldrd	r2, [r3]
   38838:	bl	63d78 <__assert_fail@plt+0x5168c>
   3883c:	mov	r3, r2
   38840:	str	r3, [fp, #-136]	; 0xffffff78
   38844:	ldr	r3, [fp, #-136]	; 0xffffff78
   38848:	mov	r2, r3
   3884c:	asr	r3, r2, #31
   38850:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   38854:	subs	r0, r0, r2
   38858:	sbc	r1, r1, r3
   3885c:	add	r3, pc, #804	; 0x324
   38860:	ldrd	r2, [r3]
   38864:	bl	63d78 <__assert_fail@plt+0x5168c>
   38868:	mov	r2, r0
   3886c:	mov	r3, r1
   38870:	mov	r3, r2
   38874:	str	r3, [fp, #-140]	; 0xffffff74
   38878:	sub	r3, fp, #812	; 0x32c
   3887c:	ldrd	r2, [r3, #112]	; 0x70
   38880:	cmp	r2, #0
   38884:	sbcs	r3, r3, #0
   38888:	bge	388f8 <__assert_fail@plt+0x2620c>
   3888c:	sub	r3, fp, #812	; 0x32c
   38890:	ldrd	r2, [r3, #112]	; 0x70
   38894:	mvn	r0, #0
   38898:	mvn	r1, #0
   3889c:	cmp	r3, r1
   388a0:	cmpeq	r2, r0
   388a4:	beq	388e8 <__assert_fail@plt+0x261fc>
   388a8:	sub	r3, fp, #812	; 0x32c
   388ac:	ldrd	r2, [r3, #112]	; 0x70
   388b0:	mov	r0, #0
   388b4:	mov	r1, #-2147483648	; 0x80000000
   388b8:	bl	63d78 <__assert_fail@plt+0x5168c>
   388bc:	mov	r2, r0
   388c0:	mov	r3, r1
   388c4:	mov	r0, r2
   388c8:	mov	r1, r3
   388cc:	ldr	r2, [pc, #724]	; 38ba8 <__assert_fail@plt+0x264bc>
   388d0:	mov	r3, #0
   388d4:	cmp	r2, r0
   388d8:	sbcs	r3, r3, r1
   388dc:	blt	388e8 <__assert_fail@plt+0x261fc>
   388e0:	mov	r3, #1
   388e4:	b	388ec <__assert_fail@plt+0x26200>
   388e8:	mov	r3, #0
   388ec:	and	r3, r3, #1
   388f0:	uxtb	r3, r3
   388f4:	b	3891c <__assert_fail@plt+0x26230>
   388f8:	sub	r3, fp, #812	; 0x32c
   388fc:	ldrd	r2, [r3, #112]	; 0x70
   38900:	add	r1, pc, #648	; 0x288
   38904:	ldrd	r0, [r1]
   38908:	cmp	r0, r2
   3890c:	sbcs	r3, r1, r3
   38910:	movlt	r3, #1
   38914:	movge	r3, #0
   38918:	uxtb	r3, r3
   3891c:	cmp	r3, #0
   38920:	beq	3895c <__assert_fail@plt+0x26270>
   38924:	sub	r3, fp, #812	; 0x32c
   38928:	ldrd	r2, [r3, #112]	; 0x70
   3892c:	mov	r1, #3600	; 0xe10
   38930:	mul	r0, r1, r3
   38934:	mov	r1, #0
   38938:	mul	r1, r1, r2
   3893c:	add	r1, r0, r1
   38940:	mov	r0, #3600	; 0xe10
   38944:	umull	r2, r3, r2, r0
   38948:	add	r1, r1, r3
   3894c:	mov	r3, r1
   38950:	sub	r1, fp, #924	; 0x39c
   38954:	strd	r2, [r1]
   38958:	b	39010 <__assert_fail@plt+0x26924>
   3895c:	sub	r3, fp, #812	; 0x32c
   38960:	ldrd	r2, [r3, #112]	; 0x70
   38964:	mov	r1, #3600	; 0xe10
   38968:	mul	r0, r1, r3
   3896c:	mov	r1, #0
   38970:	mul	r1, r1, r2
   38974:	add	r1, r0, r1
   38978:	mov	r0, #3600	; 0xe10
   3897c:	umull	r2, r3, r2, r0
   38980:	add	r1, r1, r3
   38984:	mov	r3, r1
   38988:	sub	r1, fp, #924	; 0x39c
   3898c:	strd	r2, [r1]
   38990:	sub	r3, fp, #924	; 0x39c
   38994:	ldrd	r2, [r3]
   38998:	cmp	r2, #0
   3899c:	sbcs	r3, r3, #0
   389a0:	bge	389e0 <__assert_fail@plt+0x262f4>
   389a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   389a8:	mov	r0, r3
   389ac:	asr	r1, r0, #31
   389b0:	sub	r3, fp, #924	; 0x39c
   389b4:	ldrd	r2, [r3]
   389b8:	mov	r4, #0
   389bc:	mov	r5, #-2147483648	; 0x80000000
   389c0:	subs	r2, r4, r2
   389c4:	sbc	r3, r5, r3
   389c8:	cmp	r0, r2
   389cc:	sbcs	r3, r1, r3
   389d0:	movlt	r3, #1
   389d4:	movge	r3, #0
   389d8:	uxtb	r3, r3
   389dc:	b	38a60 <__assert_fail@plt+0x26374>
   389e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   389e4:	cmp	r3, #0
   389e8:	bge	38a28 <__assert_fail@plt+0x2633c>
   389ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   389f0:	mov	r2, r3
   389f4:	asr	r3, r2, #31
   389f8:	mov	r0, #0
   389fc:	mov	r1, #-2147483648	; 0x80000000
   38a00:	subs	r2, r0, r2
   38a04:	sbc	r3, r1, r3
   38a08:	sub	r1, fp, #924	; 0x39c
   38a0c:	ldrd	r0, [r1]
   38a10:	cmp	r0, r2
   38a14:	sbcs	r3, r1, r3
   38a18:	movlt	r3, #1
   38a1c:	movge	r3, #0
   38a20:	uxtb	r3, r3
   38a24:	b	38a60 <__assert_fail@plt+0x26374>
   38a28:	sub	r3, fp, #924	; 0x39c
   38a2c:	ldrd	r2, [r3]
   38a30:	mvn	r0, #0
   38a34:	mvn	r1, #-2147483648	; 0x80000000
   38a38:	subs	r0, r0, r2
   38a3c:	sbc	r1, r1, r3
   38a40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38a44:	mov	r2, r3
   38a48:	asr	r3, r2, #31
   38a4c:	cmp	r0, r2
   38a50:	sbcs	r3, r1, r3
   38a54:	movlt	r3, #1
   38a58:	movge	r3, #0
   38a5c:	uxtb	r3, r3
   38a60:	cmp	r3, #0
   38a64:	beq	38a90 <__assert_fail@plt+0x263a4>
   38a68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38a6c:	mov	r2, r3
   38a70:	asr	r3, r2, #31
   38a74:	sub	r1, fp, #924	; 0x39c
   38a78:	ldrd	r0, [r1]
   38a7c:	adds	r2, r2, r0
   38a80:	adc	r3, r3, r1
   38a84:	sub	r1, fp, #924	; 0x39c
   38a88:	strd	r2, [r1, #-8]
   38a8c:	b	39010 <__assert_fail@plt+0x26924>
   38a90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38a94:	mov	r2, r3
   38a98:	asr	r3, r2, #31
   38a9c:	sub	r1, fp, #924	; 0x39c
   38aa0:	ldrd	r0, [r1]
   38aa4:	adds	r2, r2, r0
   38aa8:	adc	r3, r3, r1
   38aac:	sub	r1, fp, #924	; 0x39c
   38ab0:	strd	r2, [r1, #-8]
   38ab4:	sub	r3, fp, #812	; 0x32c
   38ab8:	ldrd	r2, [r3, #120]	; 0x78
   38abc:	cmp	r2, #0
   38ac0:	sbcs	r3, r3, #0
   38ac4:	bge	38b24 <__assert_fail@plt+0x26438>
   38ac8:	sub	r3, fp, #812	; 0x32c
   38acc:	ldrd	r2, [r3, #120]	; 0x78
   38ad0:	mvn	r0, #0
   38ad4:	mvn	r1, #0
   38ad8:	cmp	r3, r1
   38adc:	cmpeq	r2, r0
   38ae0:	beq	38b14 <__assert_fail@plt+0x26428>
   38ae4:	sub	r3, fp, #812	; 0x32c
   38ae8:	ldrd	r2, [r3, #120]	; 0x78
   38aec:	mov	r0, #0
   38af0:	mov	r1, #-2147483648	; 0x80000000
   38af4:	bl	63d78 <__assert_fail@plt+0x5168c>
   38af8:	mov	r2, r0
   38afc:	mov	r3, r1
   38b00:	cmp	r2, #60	; 0x3c
   38b04:	sbcs	r3, r3, #0
   38b08:	bge	38b14 <__assert_fail@plt+0x26428>
   38b0c:	mov	r3, #1
   38b10:	b	38b18 <__assert_fail@plt+0x2642c>
   38b14:	mov	r3, #0
   38b18:	and	r3, r3, #1
   38b1c:	uxtb	r3, r3
   38b20:	b	38b48 <__assert_fail@plt+0x2645c>
   38b24:	sub	r3, fp, #812	; 0x32c
   38b28:	ldrd	r2, [r3, #120]	; 0x78
   38b2c:	add	r1, pc, #100	; 0x64
   38b30:	ldrd	r0, [r1]
   38b34:	cmp	r0, r2
   38b38:	sbcs	r3, r1, r3
   38b3c:	movlt	r3, #1
   38b40:	movge	r3, #0
   38b44:	uxtb	r3, r3
   38b48:	cmp	r3, #0
   38b4c:	beq	38bdc <__assert_fail@plt+0x264f0>
   38b50:	sub	r3, fp, #812	; 0x32c
   38b54:	ldrd	r2, [r3, #120]	; 0x78
   38b58:	mov	r1, #60	; 0x3c
   38b5c:	mul	r0, r1, r3
   38b60:	mov	r1, #0
   38b64:	mul	r1, r1, r2
   38b68:	add	r1, r0, r1
   38b6c:	mov	r0, #60	; 0x3c
   38b70:	umull	r2, r3, r2, r0
   38b74:	add	r1, r1, r3
   38b78:	mov	r3, r1
   38b7c:	sub	r1, fp, #940	; 0x3ac
   38b80:	strd	r2, [r1]
   38b84:	b	39010 <__assert_fail@plt+0x26924>
   38b88:	blcc	fe6eb390 <stdout@@GLIBC_2.4+0xfe66ec5c>
   38b8c:	andeq	r0, r0, r0
   38b90:	mcrrcc	14, 6, r5, sp, cr15
   38b94:	andeq	r1, r9, fp, lsr #20
   38b98:	eorcs	r2, r2, #536870914	; 0x20000002
   38b9c:	eoreq	r2, r2, #536870914	; 0x20000002
   38ba0:	andeq	sl, r6, ip, asr r3
   38ba4:	andeq	sl, r6, r8, lsl #7
   38ba8:	andeq	r0, r0, pc, lsl #28
   38bac:	andeq	sl, r6, r4, lsr #7
   38bb0:	ldrdeq	sl, [r6], -r4
   38bb4:	andeq	sl, r6, r0, lsr #8
   38bb8:	andeq	sl, r6, r4, asr #8
   38bbc:	andeq	sl, r6, r4, lsl #9
   38bc0:	andeq	r9, r6, r8, lsl lr
   38bc4:	andeq	sl, r6, r0, lsr #9
   38bc8:			; <UNDEFINED> instruction: 0x0006a4bc
   38bcc:	andeq	sl, r6, r4, ror #9
   38bd0:	andeq	sl, r6, r8, lsl #10
   38bd4:	andeq	sl, r6, ip, lsl r5
   38bd8:	andeq	sl, r6, r0, lsr r5
   38bdc:	sub	r3, fp, #812	; 0x32c
   38be0:	ldrd	r2, [r3, #120]	; 0x78
   38be4:	mov	r1, #60	; 0x3c
   38be8:	mul	r0, r1, r3
   38bec:	mov	r1, #0
   38bf0:	mul	r1, r1, r2
   38bf4:	add	r1, r0, r1
   38bf8:	mov	r0, #60	; 0x3c
   38bfc:	umull	r2, r3, r2, r0
   38c00:	add	r1, r1, r3
   38c04:	mov	r3, r1
   38c08:	sub	r1, fp, #940	; 0x3ac
   38c0c:	strd	r2, [r1]
   38c10:	sub	r3, fp, #940	; 0x3ac
   38c14:	ldrd	r2, [r3]
   38c18:	cmp	r2, #0
   38c1c:	sbcs	r3, r3, #0
   38c20:	bge	38c5c <__assert_fail@plt+0x26570>
   38c24:	sub	r3, fp, #940	; 0x3ac
   38c28:	ldrd	r2, [r3]
   38c2c:	mov	r0, #0
   38c30:	mov	r1, #-2147483648	; 0x80000000
   38c34:	subs	r2, r0, r2
   38c38:	sbc	r3, r1, r3
   38c3c:	sub	r1, fp, #924	; 0x39c
   38c40:	ldrd	r0, [r1, #-8]
   38c44:	cmp	r0, r2
   38c48:	sbcs	r3, r1, r3
   38c4c:	movlt	r3, #1
   38c50:	movge	r3, #0
   38c54:	uxtb	r3, r3
   38c58:	b	38cdc <__assert_fail@plt+0x265f0>
   38c5c:	sub	r3, fp, #924	; 0x39c
   38c60:	ldrd	r2, [r3, #-8]
   38c64:	cmp	r2, #0
   38c68:	sbcs	r3, r3, #0
   38c6c:	bge	38ca8 <__assert_fail@plt+0x265bc>
   38c70:	sub	r3, fp, #924	; 0x39c
   38c74:	ldrd	r2, [r3, #-8]
   38c78:	mov	r0, #0
   38c7c:	mov	r1, #-2147483648	; 0x80000000
   38c80:	subs	r2, r0, r2
   38c84:	sbc	r3, r1, r3
   38c88:	sub	r1, fp, #940	; 0x3ac
   38c8c:	ldrd	r0, [r1]
   38c90:	cmp	r0, r2
   38c94:	sbcs	r3, r1, r3
   38c98:	movlt	r3, #1
   38c9c:	movge	r3, #0
   38ca0:	uxtb	r3, r3
   38ca4:	b	38cdc <__assert_fail@plt+0x265f0>
   38ca8:	sub	r3, fp, #940	; 0x3ac
   38cac:	ldrd	r2, [r3]
   38cb0:	mvn	r0, #0
   38cb4:	mvn	r1, #-2147483648	; 0x80000000
   38cb8:	subs	r0, r0, r2
   38cbc:	sbc	r1, r1, r3
   38cc0:	sub	r3, fp, #924	; 0x39c
   38cc4:	ldrd	r2, [r3, #-8]
   38cc8:	cmp	r0, r2
   38ccc:	sbcs	r3, r1, r3
   38cd0:	movlt	r3, #1
   38cd4:	movge	r3, #0
   38cd8:	uxtb	r3, r3
   38cdc:	cmp	r3, #0
   38ce0:	beq	38d10 <__assert_fail@plt+0x26624>
   38ce4:	sub	r3, fp, #924	; 0x39c
   38ce8:	ldrd	r2, [r3, #-8]
   38cec:	mov	r0, r2
   38cf0:	mov	r1, r3
   38cf4:	sub	r3, fp, #940	; 0x3ac
   38cf8:	ldrd	r2, [r3]
   38cfc:	adds	r2, r2, r0
   38d00:	adc	r3, r3, r1
   38d04:	sub	r1, fp, #940	; 0x3ac
   38d08:	strd	r2, [r1, #-8]
   38d0c:	b	39010 <__assert_fail@plt+0x26924>
   38d10:	sub	r3, fp, #924	; 0x39c
   38d14:	ldrd	r2, [r3, #-8]
   38d18:	mov	r0, r2
   38d1c:	mov	r1, r3
   38d20:	sub	r3, fp, #940	; 0x3ac
   38d24:	ldrd	r2, [r3]
   38d28:	adds	r2, r2, r0
   38d2c:	adc	r3, r3, r1
   38d30:	sub	r1, fp, #940	; 0x3ac
   38d34:	strd	r2, [r1, #-8]
   38d38:	sub	r3, fp, #812	; 0x32c
   38d3c:	ldrd	r2, [r3, #128]	; 0x80
   38d40:	cmp	r2, #0
   38d44:	sbcs	r3, r3, #0
   38d48:	bge	38d84 <__assert_fail@plt+0x26698>
   38d4c:	sub	r3, fp, #812	; 0x32c
   38d50:	ldrd	r2, [r3, #128]	; 0x80
   38d54:	mov	r0, #0
   38d58:	mov	r1, #-2147483648	; 0x80000000
   38d5c:	subs	r2, r0, r2
   38d60:	sbc	r3, r1, r3
   38d64:	sub	r1, fp, #940	; 0x3ac
   38d68:	ldrd	r0, [r1, #-8]
   38d6c:	cmp	r0, r2
   38d70:	sbcs	r3, r1, r3
   38d74:	movlt	r3, #1
   38d78:	movge	r3, #0
   38d7c:	uxtb	r3, r3
   38d80:	b	38e04 <__assert_fail@plt+0x26718>
   38d84:	sub	r3, fp, #940	; 0x3ac
   38d88:	ldrd	r2, [r3, #-8]
   38d8c:	cmp	r2, #0
   38d90:	sbcs	r3, r3, #0
   38d94:	bge	38dd0 <__assert_fail@plt+0x266e4>
   38d98:	sub	r3, fp, #812	; 0x32c
   38d9c:	ldrd	r0, [r3, #128]	; 0x80
   38da0:	sub	r3, fp, #940	; 0x3ac
   38da4:	ldrd	r2, [r3, #-8]
   38da8:	mov	r4, #0
   38dac:	mov	r5, #-2147483648	; 0x80000000
   38db0:	subs	r2, r4, r2
   38db4:	sbc	r3, r5, r3
   38db8:	cmp	r0, r2
   38dbc:	sbcs	r3, r1, r3
   38dc0:	movlt	r3, #1
   38dc4:	movge	r3, #0
   38dc8:	uxtb	r3, r3
   38dcc:	b	38e04 <__assert_fail@plt+0x26718>
   38dd0:	sub	r3, fp, #812	; 0x32c
   38dd4:	ldrd	r2, [r3, #128]	; 0x80
   38dd8:	mvn	r0, #0
   38ddc:	mvn	r1, #-2147483648	; 0x80000000
   38de0:	subs	r0, r0, r2
   38de4:	sbc	r1, r1, r3
   38de8:	sub	r3, fp, #940	; 0x3ac
   38dec:	ldrd	r2, [r3, #-8]
   38df0:	cmp	r0, r2
   38df4:	sbcs	r3, r1, r3
   38df8:	movlt	r3, #1
   38dfc:	movge	r3, #0
   38e00:	uxtb	r3, r3
   38e04:	cmp	r3, #0
   38e08:	beq	38e38 <__assert_fail@plt+0x2674c>
   38e0c:	sub	r3, fp, #812	; 0x32c
   38e10:	ldrd	r2, [r3, #128]	; 0x80
   38e14:	mov	r0, r2
   38e18:	mov	r1, r3
   38e1c:	sub	r3, fp, #940	; 0x3ac
   38e20:	ldrd	r2, [r3, #-8]
   38e24:	adds	r2, r2, r0
   38e28:	adc	r3, r3, r1
   38e2c:	sub	r1, fp, #956	; 0x3bc
   38e30:	strd	r2, [r1]
   38e34:	b	39010 <__assert_fail@plt+0x26924>
   38e38:	sub	r3, fp, #812	; 0x32c
   38e3c:	ldrd	r2, [r3, #128]	; 0x80
   38e40:	mov	r0, r2
   38e44:	mov	r1, r3
   38e48:	sub	r3, fp, #940	; 0x3ac
   38e4c:	ldrd	r2, [r3, #-8]
   38e50:	adds	r2, r2, r0
   38e54:	adc	r3, r3, r1
   38e58:	sub	r1, fp, #956	; 0x3bc
   38e5c:	strd	r2, [r1]
   38e60:	ldr	r3, [fp, #-140]	; 0xffffff74
   38e64:	cmp	r3, #0
   38e68:	bge	38eec <__assert_fail@plt+0x26800>
   38e6c:	ldr	r3, [fp, #-140]	; 0xffffff74
   38e70:	rsb	r3, r3, #-2147483648	; 0x80000000
   38e74:	mov	r2, r3
   38e78:	asr	r3, r2, #31
   38e7c:	sub	r1, fp, #956	; 0x3bc
   38e80:	ldrd	r0, [r1]
   38e84:	cmp	r0, r2
   38e88:	sbcs	r3, r1, r3
   38e8c:	blt	38ed4 <__assert_fail@plt+0x267e8>
   38e90:	sub	r3, fp, #956	; 0x3bc
   38e94:	ldrd	r2, [r3]
   38e98:	cmp	r2, #0
   38e9c:	sbcs	r3, r3, #0
   38ea0:	blt	38edc <__assert_fail@plt+0x267f0>
   38ea4:	ldr	r3, [fp, #-140]	; 0xffffff74
   38ea8:	mov	r0, r3
   38eac:	asr	r1, r0, #31
   38eb0:	sub	r3, fp, #956	; 0x3bc
   38eb4:	ldrd	r2, [r3]
   38eb8:	adds	r2, r2, r0
   38ebc:	adc	r3, r3, r1
   38ec0:	mvn	r0, #-2147483648	; 0x80000000
   38ec4:	mov	r1, #0
   38ec8:	cmp	r0, r2
   38ecc:	sbcs	r3, r1, r3
   38ed0:	bge	38edc <__assert_fail@plt+0x267f0>
   38ed4:	mov	r3, #1
   38ed8:	b	38ee0 <__assert_fail@plt+0x267f4>
   38edc:	mov	r3, #0
   38ee0:	and	r3, r3, #1
   38ee4:	uxtb	r3, r3
   38ee8:	b	38fa8 <__assert_fail@plt+0x268bc>
   38eec:	sub	r3, fp, #956	; 0x3bc
   38ef0:	ldrd	r2, [r3]
   38ef4:	cmp	r2, #0
   38ef8:	sbcs	r3, r3, #0
   38efc:	bge	38f78 <__assert_fail@plt+0x2688c>
   38f00:	ldr	r3, [fp, #-140]	; 0xffffff74
   38f04:	mov	r0, r3
   38f08:	asr	r1, r0, #31
   38f0c:	sub	r3, fp, #956	; 0x3bc
   38f10:	ldrd	r2, [r3]
   38f14:	mov	r4, #-2147483648	; 0x80000000
   38f18:	mvn	r5, #0
   38f1c:	subs	r2, r4, r2
   38f20:	sbc	r3, r5, r3
   38f24:	cmp	r0, r2
   38f28:	sbcs	r3, r1, r3
   38f2c:	blt	38f60 <__assert_fail@plt+0x26874>
   38f30:	ldr	r3, [fp, #-140]	; 0xffffff74
   38f34:	mov	r0, r3
   38f38:	asr	r1, r0, #31
   38f3c:	sub	r3, fp, #956	; 0x3bc
   38f40:	ldrd	r2, [r3]
   38f44:	adds	r2, r2, r0
   38f48:	adc	r3, r3, r1
   38f4c:	mvn	r0, #-2147483648	; 0x80000000
   38f50:	mov	r1, #0
   38f54:	cmp	r0, r2
   38f58:	sbcs	r3, r1, r3
   38f5c:	bge	38f68 <__assert_fail@plt+0x2687c>
   38f60:	mov	r3, #1
   38f64:	b	38f6c <__assert_fail@plt+0x26880>
   38f68:	mov	r3, #0
   38f6c:	and	r3, r3, #1
   38f70:	uxtb	r3, r3
   38f74:	b	38fa8 <__assert_fail@plt+0x268bc>
   38f78:	ldr	r2, [fp, #-140]	; 0xffffff74
   38f7c:	mvn	r3, #-2147483648	; 0x80000000
   38f80:	sub	r3, r3, r2
   38f84:	mov	r0, r3
   38f88:	asr	r1, r0, #31
   38f8c:	sub	r3, fp, #956	; 0x3bc
   38f90:	ldrd	r2, [r3]
   38f94:	cmp	r0, r2
   38f98:	sbcs	r3, r1, r3
   38f9c:	movlt	r3, #1
   38fa0:	movge	r3, #0
   38fa4:	uxtb	r3, r3
   38fa8:	cmp	r3, #0
   38fac:	beq	38fc8 <__assert_fail@plt+0x268dc>
   38fb0:	sub	r3, fp, #956	; 0x3bc
   38fb4:	ldrd	r2, [r3]
   38fb8:	ldr	r3, [fp, #-140]	; 0xffffff74
   38fbc:	add	r3, r2, r3
   38fc0:	str	r3, [fp, #-960]	; 0xfffffc40
   38fc4:	b	39010 <__assert_fail@plt+0x26924>
   38fc8:	sub	r3, fp, #956	; 0x3bc
   38fcc:	ldrd	r2, [r3]
   38fd0:	ldr	r3, [fp, #-140]	; 0xffffff74
   38fd4:	add	r3, r2, r3
   38fd8:	str	r3, [fp, #-960]	; 0xfffffc40
   38fdc:	ldr	r2, [fp, #-960]	; 0xfffffc40
   38fe0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   38fe4:	str	r2, [r3]
   38fe8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   38fec:	ldr	r2, [fp, #-136]	; 0xffffff78
   38ff0:	str	r2, [r3, #4]
   38ff4:	sub	r3, fp, #820	; 0x334
   38ff8:	mov	r0, r3
   38ffc:	bl	30028 <__assert_fail@plt+0x1d93c>
   39000:	mov	r3, r0
   39004:	cmp	r3, #0
   39008:	beq	39148 <__assert_fail@plt+0x26a5c>
   3900c:	b	39040 <__assert_fail@plt+0x26954>
   39010:	sub	r3, fp, #820	; 0x334
   39014:	mov	r0, r3
   39018:	bl	30028 <__assert_fail@plt+0x1d93c>
   3901c:	mov	r3, r0
   39020:	cmp	r3, #0
   39024:	beq	393bc <__assert_fail@plt+0x26cd0>
   39028:	ldr	r0, [pc, #-1156]	; 38bac <__assert_fail@plt+0x264c0>
   3902c:	bl	12398 <gettext@plt>
   39030:	mov	r3, r0
   39034:	mov	r0, r3
   39038:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3903c:	b	39384 <__assert_fail@plt+0x26c98>
   39040:	sub	r3, fp, #812	; 0x32c
   39044:	ldrd	r0, [r3, #112]	; 0x70
   39048:	sub	r3, fp, #812	; 0x32c
   3904c:	ldrd	r2, [r3, #120]	; 0x78
   39050:	orr	r0, r0, r2
   39054:	orr	r1, r1, r3
   39058:	sub	r3, fp, #812	; 0x32c
   3905c:	ldrd	r2, [r3, #128]	; 0x80
   39060:	orr	r0, r0, r2
   39064:	orr	r1, r1, r3
   39068:	ldr	r3, [fp, #-676]	; 0xfffffd5c
   3906c:	mov	r2, r3
   39070:	asr	r3, r2, #31
   39074:	orr	r2, r2, r0
   39078:	orr	r3, r3, r1
   3907c:	orrs	r3, r2, r3
   39080:	beq	39148 <__assert_fail@plt+0x26a5c>
   39084:	ldr	r0, [pc, #-1244]	; 38bb0 <__assert_fail@plt+0x264c4>
   39088:	bl	12398 <gettext@plt>
   3908c:	mov	lr, r0
   39090:	sub	r3, fp, #812	; 0x32c
   39094:	ldrd	r4, [r3, #112]	; 0x70
   39098:	sub	r3, fp, #812	; 0x32c
   3909c:	ldrd	r2, [r3, #120]	; 0x78
   390a0:	sub	r1, fp, #812	; 0x32c
   390a4:	ldrd	r0, [r1, #128]	; 0x80
   390a8:	ldr	ip, [fp, #-676]	; 0xfffffd5c
   390ac:	str	ip, [sp, #16]
   390b0:	strd	r0, [sp, #8]
   390b4:	strd	r2, [sp]
   390b8:	mov	r2, r4
   390bc:	mov	r3, r5
   390c0:	mov	r0, lr
   390c4:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   390c8:	ldr	r3, [fp, #-960]	; 0xfffffc40
   390cc:	mov	r2, r3
   390d0:	asr	r3, r2, #31
   390d4:	strd	r2, [fp, #-148]	; 0xffffff6c
   390d8:	ldr	r0, [pc, #-1324]	; 38bb4 <__assert_fail@plt+0x264c8>
   390dc:	bl	12398 <gettext@plt>
   390e0:	mov	r1, r0
   390e4:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   390e8:	mov	r0, r1
   390ec:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   390f0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   390f4:	cmn	r3, #1
   390f8:	beq	39148 <__assert_fail@plt+0x26a5c>
   390fc:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   39100:	sub	r3, fp, #1088	; 0x440
   39104:	sub	r3, r3, #12
   39108:	sub	r3, r3, #4
   3910c:	mov	r2, r3
   39110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39114:	bl	5e4ac <__assert_fail@plt+0x4bdc0>
   39118:	mov	r3, r0
   3911c:	cmp	r3, #0
   39120:	beq	39148 <__assert_fail@plt+0x26a5c>
   39124:	ldr	r2, [fp, #-180]	; 0xffffff4c
   39128:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   3912c:	cmp	r2, r3
   39130:	beq	39148 <__assert_fail@plt+0x26a5c>
   39134:	ldr	r0, [pc, #-1412]	; 38bb8 <__assert_fail@plt+0x264cc>
   39138:	bl	12398 <gettext@plt>
   3913c:	mov	r3, r0
   39140:	mov	r0, r3
   39144:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   39148:	sub	r3, fp, #820	; 0x334
   3914c:	mov	r0, r3
   39150:	bl	30028 <__assert_fail@plt+0x1d93c>
   39154:	mov	r3, r0
   39158:	cmp	r3, #0
   3915c:	beq	39350 <__assert_fail@plt+0x26c64>
   39160:	ldr	r3, [fp, #8]
   39164:	cmp	r3, #0
   39168:	bne	39184 <__assert_fail@plt+0x26a98>
   3916c:	ldr	r0, [pc, #-1464]	; 38bbc <__assert_fail@plt+0x264d0>
   39170:	bl	12398 <gettext@plt>
   39174:	mov	r3, r0
   39178:	mov	r0, r3
   3917c:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   39180:	b	391cc <__assert_fail@plt+0x26ae0>
   39184:	ldr	r1, [pc, #-1484]	; 38bc0 <__assert_fail@plt+0x264d4>
   39188:	ldr	r0, [fp, #8]
   3918c:	bl	11ffc <strcmp@plt>
   39190:	mov	r3, r0
   39194:	cmp	r3, #0
   39198:	bne	391b4 <__assert_fail@plt+0x26ac8>
   3919c:	ldr	r0, [pc, #-1504]	; 38bc4 <__assert_fail@plt+0x264d8>
   391a0:	bl	12398 <gettext@plt>
   391a4:	mov	r3, r0
   391a8:	mov	r0, r3
   391ac:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   391b0:	b	391cc <__assert_fail@plt+0x26ae0>
   391b4:	ldr	r0, [pc, #-1524]	; 38bc8 <__assert_fail@plt+0x264dc>
   391b8:	bl	12398 <gettext@plt>
   391bc:	mov	r3, r0
   391c0:	ldr	r1, [fp, #8]
   391c4:	mov	r0, r3
   391c8:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   391cc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   391d0:	ldr	r3, [r3]
   391d4:	mov	r2, r3
   391d8:	asr	r3, r2, #31
   391dc:	strd	r2, [fp, #-156]	; 0xffffff64
   391e0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   391e4:	ldr	r3, [r3, #4]
   391e8:	str	r3, [fp, #-160]	; 0xffffff60
   391ec:	ldr	r0, [pc, #-1576]	; 38bcc <__assert_fail@plt+0x264e0>
   391f0:	bl	12398 <gettext@plt>
   391f4:	mov	r1, r0
   391f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   391fc:	str	r3, [sp]
   39200:	ldrd	r2, [fp, #-156]	; 0xffffff64
   39204:	mov	r0, r1
   39208:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   3920c:	ldr	r2, [fp, #-1112]	; 0xfffffba8
   39210:	sub	r3, fp, #1088	; 0x440
   39214:	sub	r3, r3, #12
   39218:	sub	r3, r3, #4
   3921c:	mov	r1, r3
   39220:	mov	r0, r2
   39224:	bl	11fcc <gmtime_r@plt>
   39228:	mov	r3, r0
   3922c:	cmp	r3, #0
   39230:	movne	r3, #1
   39234:	moveq	r3, #0
   39238:	strb	r3, [fp, #-161]	; 0xffffff5f
   3923c:	ldrb	r3, [fp, #-161]	; 0xffffff5f
   39240:	cmp	r3, #0
   39244:	beq	39280 <__assert_fail@plt+0x26b94>
   39248:	ldr	r0, [pc, #-1664]	; 38bd0 <__assert_fail@plt+0x264e4>
   3924c:	bl	12398 <gettext@plt>
   39250:	mov	r4, r0
   39254:	sub	r2, fp, #384	; 0x180
   39258:	sub	r0, fp, #1088	; 0x440
   3925c:	sub	r0, r0, #12
   39260:	sub	r0, r0, #4
   39264:	mov	r3, #100	; 0x64
   39268:	mov	r1, #0
   3926c:	bl	35d74 <__assert_fail@plt+0x23688>
   39270:	mov	r3, r0
   39274:	mov	r1, r3
   39278:	mov	r0, r4
   3927c:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   39280:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   39284:	sub	r3, fp, #1040	; 0x410
   39288:	sub	r3, r3, #12
   3928c:	sub	r3, r3, #8
   39290:	mov	r2, r3
   39294:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39298:	bl	5e4ac <__assert_fail@plt+0x4bdc0>
   3929c:	mov	r3, r0
   392a0:	cmp	r3, #0
   392a4:	beq	39350 <__assert_fail@plt+0x26c64>
   392a8:	mov	r3, #1
   392ac:	strb	r3, [fp, #-162]	; 0xffffff5e
   392b0:	ldr	r3, [fp, #-1024]	; 0xfffffc00
   392b4:	str	r3, [fp, #-168]	; 0xffffff58
   392b8:	ldrb	r3, [fp, #-162]	; 0xffffff5e
   392bc:	cmp	r3, #0
   392c0:	beq	39318 <__assert_fail@plt+0x26c2c>
   392c4:	ldr	r0, [pc, #-1784]	; 38bd4 <__assert_fail@plt+0x264e8>
   392c8:	bl	12398 <gettext@plt>
   392cc:	mov	r4, r0
   392d0:	sub	r2, fp, #384	; 0x180
   392d4:	sub	r0, fp, #1040	; 0x410
   392d8:	sub	r0, r0, #12
   392dc:	sub	r0, r0, #8
   392e0:	mov	r3, #100	; 0x64
   392e4:	mov	r1, #0
   392e8:	bl	35d74 <__assert_fail@plt+0x23688>
   392ec:	mov	r5, r0
   392f0:	sub	r3, fp, #284	; 0x11c
   392f4:	mov	r1, r3
   392f8:	ldr	r0, [fp, #-168]	; 0xffffff58
   392fc:	bl	31308 <__assert_fail@plt+0x1ec1c>
   39300:	mov	r3, r0
   39304:	mov	r2, r3
   39308:	mov	r1, r5
   3930c:	mov	r0, r4
   39310:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   39314:	b	39350 <__assert_fail@plt+0x26c64>
   39318:	ldr	r0, [pc, #-1864]	; 38bd8 <__assert_fail@plt+0x264ec>
   3931c:	bl	12398 <gettext@plt>
   39320:	mov	r4, r0
   39324:	sub	r2, fp, #384	; 0x180
   39328:	sub	r0, fp, #1040	; 0x410
   3932c:	sub	r0, r0, #12
   39330:	sub	r0, r0, #8
   39334:	mov	r3, #100	; 0x64
   39338:	mov	r1, #0
   3933c:	bl	35d74 <__assert_fail@plt+0x23688>
   39340:	mov	r3, r0
   39344:	mov	r1, r3
   39348:	mov	r0, r4
   3934c:	bl	2ffc4 <__assert_fail@plt+0x1d8d8>
   39350:	mov	r3, #1
   39354:	strb	r3, [fp, #-29]	; 0xffffffe3
   39358:	b	393c0 <__assert_fail@plt+0x26cd4>
   3935c:	nop			; (mov r0, r0)
   39360:	b	393c0 <__assert_fail@plt+0x26cd4>
   39364:	nop			; (mov r0, r0)
   39368:	b	393c0 <__assert_fail@plt+0x26cd4>
   3936c:	nop			; (mov r0, r0)
   39370:	b	393c0 <__assert_fail@plt+0x26cd4>
   39374:	nop			; (mov r0, r0)
   39378:	b	393c0 <__assert_fail@plt+0x26cd4>
   3937c:	nop			; (mov r0, r0)
   39380:	b	393c0 <__assert_fail@plt+0x26cd4>
   39384:	nop			; (mov r0, r0)
   39388:	b	393c0 <__assert_fail@plt+0x26cd4>
   3938c:	nop			; (mov r0, r0)
   39390:	b	393c0 <__assert_fail@plt+0x26cd4>
   39394:	nop			; (mov r0, r0)
   39398:	b	393c0 <__assert_fail@plt+0x26cd4>
   3939c:	nop			; (mov r0, r0)
   393a0:	b	393c0 <__assert_fail@plt+0x26cd4>
   393a4:	nop			; (mov r0, r0)
   393a8:	b	393c0 <__assert_fail@plt+0x26cd4>
   393ac:	nop			; (mov r0, r0)
   393b0:	b	393c0 <__assert_fail@plt+0x26cd4>
   393b4:	nop			; (mov r0, r0)
   393b8:	b	393c0 <__assert_fail@plt+0x26cd4>
   393bc:	nop			; (mov r0, r0)
   393c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   393c4:	ldr	r3, [fp, #4]
   393c8:	cmp	r2, r3
   393cc:	beq	393d8 <__assert_fail@plt+0x26cec>
   393d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   393d4:	bl	5e1e0 <__assert_fail@plt+0x4baf4>
   393d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   393dc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   393e0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   393e4:	mov	r0, r3
   393e8:	sub	sp, fp, #24
   393ec:	pop	{r4, r5, r6, r7, r8, fp, pc}
   393f0:	push	{fp, lr}
   393f4:	add	fp, sp, #4
   393f8:	sub	sp, sp, #40	; 0x28
   393fc:	str	r0, [fp, #-24]	; 0xffffffe8
   39400:	str	r1, [fp, #-28]	; 0xffffffe4
   39404:	str	r2, [fp, #-32]	; 0xffffffe0
   39408:	ldr	r0, [pc, #104]	; 39478 <__assert_fail@plt+0x26d8c>
   3940c:	bl	122f0 <getenv@plt>
   39410:	str	r0, [fp, #-8]
   39414:	ldr	r0, [fp, #-8]
   39418:	bl	5df0c <__assert_fail@plt+0x4b820>
   3941c:	str	r0, [fp, #-12]
   39420:	ldr	r3, [fp, #-12]
   39424:	cmp	r3, #0
   39428:	bne	39434 <__assert_fail@plt+0x26d48>
   3942c:	mov	r3, #0
   39430:	b	3946c <__assert_fail@plt+0x26d80>
   39434:	ldr	r3, [fp, #-8]
   39438:	str	r3, [sp, #4]
   3943c:	ldr	r3, [fp, #-12]
   39440:	str	r3, [sp]
   39444:	mov	r3, #0
   39448:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3944c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39454:	bl	3637c <__assert_fail@plt+0x23c90>
   39458:	mov	r3, r0
   3945c:	strb	r3, [fp, #-13]
   39460:	ldr	r0, [fp, #-12]
   39464:	bl	5e1e0 <__assert_fail@plt+0x4baf4>
   39468:	ldrb	r3, [fp, #-13]
   3946c:	mov	r0, r3
   39470:	sub	sp, fp, #4
   39474:	pop	{fp, pc}
   39478:	andeq	sl, r6, r8, asr r5
   3947c:	push	{fp, lr}
   39480:	add	fp, sp, #4
   39484:	sub	sp, sp, #16
   39488:	str	r0, [fp, #-16]
   3948c:	ldr	r3, [fp, #-16]
   39490:	cmp	r3, #0
   39494:	bne	394b4 <__assert_fail@plt+0x26dc8>
   39498:	ldr	r3, [pc, #220]	; 3957c <__assert_fail@plt+0x26e90>
   3949c:	ldr	r3, [r3]
   394a0:	mov	r2, #55	; 0x37
   394a4:	mov	r1, #1
   394a8:	ldr	r0, [pc, #208]	; 39580 <__assert_fail@plt+0x26e94>
   394ac:	bl	12224 <fwrite@plt>
   394b0:	bl	12698 <abort@plt>
   394b4:	mov	r1, #47	; 0x2f
   394b8:	ldr	r0, [fp, #-16]
   394bc:	bl	12548 <strrchr@plt>
   394c0:	str	r0, [fp, #-8]
   394c4:	ldr	r3, [fp, #-8]
   394c8:	cmp	r3, #0
   394cc:	beq	394dc <__assert_fail@plt+0x26df0>
   394d0:	ldr	r3, [fp, #-8]
   394d4:	add	r3, r3, #1
   394d8:	b	394e0 <__assert_fail@plt+0x26df4>
   394dc:	ldr	r3, [fp, #-16]
   394e0:	str	r3, [fp, #-12]
   394e4:	ldr	r2, [fp, #-12]
   394e8:	ldr	r3, [fp, #-16]
   394ec:	sub	r3, r2, r3
   394f0:	cmp	r3, #6
   394f4:	ble	39558 <__assert_fail@plt+0x26e6c>
   394f8:	ldr	r3, [fp, #-12]
   394fc:	sub	r3, r3, #7
   39500:	mov	r2, #7
   39504:	ldr	r1, [pc, #120]	; 39584 <__assert_fail@plt+0x26e98>
   39508:	mov	r0, r3
   3950c:	bl	1268c <strncmp@plt>
   39510:	mov	r3, r0
   39514:	cmp	r3, #0
   39518:	bne	39558 <__assert_fail@plt+0x26e6c>
   3951c:	ldr	r3, [fp, #-12]
   39520:	str	r3, [fp, #-16]
   39524:	mov	r2, #3
   39528:	ldr	r1, [pc, #88]	; 39588 <__assert_fail@plt+0x26e9c>
   3952c:	ldr	r0, [fp, #-12]
   39530:	bl	1268c <strncmp@plt>
   39534:	mov	r3, r0
   39538:	cmp	r3, #0
   3953c:	bne	39558 <__assert_fail@plt+0x26e6c>
   39540:	ldr	r3, [fp, #-12]
   39544:	add	r3, r3, #3
   39548:	str	r3, [fp, #-16]
   3954c:	ldr	r2, [pc, #56]	; 3958c <__assert_fail@plt+0x26ea0>
   39550:	ldr	r3, [fp, #-16]
   39554:	str	r3, [r2]
   39558:	ldr	r2, [pc, #48]	; 39590 <__assert_fail@plt+0x26ea4>
   3955c:	ldr	r3, [fp, #-16]
   39560:	str	r3, [r2]
   39564:	ldr	r2, [pc, #40]	; 39594 <__assert_fail@plt+0x26ea8>
   39568:	ldr	r3, [fp, #-16]
   3956c:	str	r3, [r2]
   39570:	nop			; (mov r0, r0)
   39574:	sub	sp, fp, #4
   39578:	pop	{fp, pc}
   3957c:	andeq	ip, r7, r8, lsr #14
   39580:	andeq	sl, r6, r4, lsl r6
   39584:	andeq	sl, r6, ip, asr #12
   39588:	andeq	sl, r6, r4, asr r6
   3958c:	andeq	ip, r7, r8, lsl r7
   39590:	andeq	ip, r7, r4, ror #29
   39594:	andeq	ip, r7, r0, lsr #14
   39598:	push	{fp, lr}
   3959c:	add	fp, sp, #4
   395a0:	sub	sp, sp, #16
   395a4:	str	r0, [fp, #-16]
   395a8:	bl	12404 <__errno_location@plt>
   395ac:	mov	r3, r0
   395b0:	ldr	r3, [r3]
   395b4:	str	r3, [fp, #-8]
   395b8:	ldr	r3, [fp, #-16]
   395bc:	cmp	r3, #0
   395c0:	beq	395cc <__assert_fail@plt+0x26ee0>
   395c4:	ldr	r3, [fp, #-16]
   395c8:	b	395d0 <__assert_fail@plt+0x26ee4>
   395cc:	ldr	r3, [pc, #48]	; 39604 <__assert_fail@plt+0x26f18>
   395d0:	mov	r1, #48	; 0x30
   395d4:	mov	r0, r3
   395d8:	bl	3db70 <__assert_fail@plt+0x2b484>
   395dc:	mov	r3, r0
   395e0:	str	r3, [fp, #-12]
   395e4:	bl	12404 <__errno_location@plt>
   395e8:	mov	r2, r0
   395ec:	ldr	r3, [fp, #-8]
   395f0:	str	r3, [r2]
   395f4:	ldr	r3, [fp, #-12]
   395f8:	mov	r0, r3
   395fc:	sub	sp, fp, #4
   39600:	pop	{fp, pc}
   39604:	andeq	ip, r7, r8, ror #29
   39608:	push	{fp}		; (str fp, [sp, #-4]!)
   3960c:	add	fp, sp, #0
   39610:	sub	sp, sp, #12
   39614:	str	r0, [fp, #-8]
   39618:	ldr	r3, [fp, #-8]
   3961c:	cmp	r3, #0
   39620:	beq	3962c <__assert_fail@plt+0x26f40>
   39624:	ldr	r3, [fp, #-8]
   39628:	b	39630 <__assert_fail@plt+0x26f44>
   3962c:	ldr	r3, [pc, #16]	; 39644 <__assert_fail@plt+0x26f58>
   39630:	ldr	r3, [r3]
   39634:	mov	r0, r3
   39638:	add	sp, fp, #0
   3963c:	pop	{fp}		; (ldr fp, [sp], #4)
   39640:	bx	lr
   39644:	andeq	ip, r7, r8, ror #29
   39648:	push	{fp}		; (str fp, [sp, #-4]!)
   3964c:	add	fp, sp, #0
   39650:	sub	sp, sp, #12
   39654:	str	r0, [fp, #-8]
   39658:	str	r1, [fp, #-12]
   3965c:	ldr	r3, [fp, #-8]
   39660:	cmp	r3, #0
   39664:	beq	39670 <__assert_fail@plt+0x26f84>
   39668:	ldr	r3, [fp, #-8]
   3966c:	b	39674 <__assert_fail@plt+0x26f88>
   39670:	ldr	r3, [pc, #20]	; 3968c <__assert_fail@plt+0x26fa0>
   39674:	ldr	r2, [fp, #-12]
   39678:	str	r2, [r3]
   3967c:	nop			; (mov r0, r0)
   39680:	add	sp, fp, #0
   39684:	pop	{fp}		; (ldr fp, [sp], #4)
   39688:	bx	lr
   3968c:	andeq	ip, r7, r8, ror #29
   39690:	push	{fp}		; (str fp, [sp, #-4]!)
   39694:	add	fp, sp, #0
   39698:	sub	sp, sp, #36	; 0x24
   3969c:	str	r0, [fp, #-24]	; 0xffffffe8
   396a0:	mov	r3, r1
   396a4:	str	r2, [fp, #-32]	; 0xffffffe0
   396a8:	strb	r3, [fp, #-25]	; 0xffffffe7
   396ac:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   396b0:	strb	r3, [fp, #-5]
   396b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   396b8:	cmp	r3, #0
   396bc:	beq	396c8 <__assert_fail@plt+0x26fdc>
   396c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   396c4:	b	396cc <__assert_fail@plt+0x26fe0>
   396c8:	ldr	r3, [pc, #124]	; 3974c <__assert_fail@plt+0x27060>
   396cc:	add	r2, r3, #8
   396d0:	ldrb	r3, [fp, #-5]
   396d4:	lsr	r3, r3, #5
   396d8:	uxtb	r3, r3
   396dc:	lsl	r3, r3, #2
   396e0:	add	r3, r2, r3
   396e4:	str	r3, [fp, #-12]
   396e8:	ldrb	r3, [fp, #-5]
   396ec:	and	r3, r3, #31
   396f0:	str	r3, [fp, #-16]
   396f4:	ldr	r3, [fp, #-12]
   396f8:	ldr	r2, [r3]
   396fc:	ldr	r3, [fp, #-16]
   39700:	lsr	r3, r2, r3
   39704:	and	r3, r3, #1
   39708:	str	r3, [fp, #-20]	; 0xffffffec
   3970c:	ldr	r3, [fp, #-12]
   39710:	ldr	r3, [r3]
   39714:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39718:	and	r1, r2, #1
   3971c:	ldr	r2, [fp, #-20]	; 0xffffffec
   39720:	eor	r1, r1, r2
   39724:	ldr	r2, [fp, #-16]
   39728:	lsl	r2, r1, r2
   3972c:	eor	r2, r2, r3
   39730:	ldr	r3, [fp, #-12]
   39734:	str	r2, [r3]
   39738:	ldr	r3, [fp, #-20]	; 0xffffffec
   3973c:	mov	r0, r3
   39740:	add	sp, fp, #0
   39744:	pop	{fp}		; (ldr fp, [sp], #4)
   39748:	bx	lr
   3974c:	andeq	ip, r7, r8, ror #29
   39750:	push	{fp}		; (str fp, [sp, #-4]!)
   39754:	add	fp, sp, #0
   39758:	sub	sp, sp, #20
   3975c:	str	r0, [fp, #-16]
   39760:	str	r1, [fp, #-20]	; 0xffffffec
   39764:	ldr	r3, [fp, #-16]
   39768:	cmp	r3, #0
   3976c:	bne	39778 <__assert_fail@plt+0x2708c>
   39770:	ldr	r3, [pc, #44]	; 397a4 <__assert_fail@plt+0x270b8>
   39774:	str	r3, [fp, #-16]
   39778:	ldr	r3, [fp, #-16]
   3977c:	ldr	r3, [r3, #4]
   39780:	str	r3, [fp, #-8]
   39784:	ldr	r3, [fp, #-16]
   39788:	ldr	r2, [fp, #-20]	; 0xffffffec
   3978c:	str	r2, [r3, #4]
   39790:	ldr	r3, [fp, #-8]
   39794:	mov	r0, r3
   39798:	add	sp, fp, #0
   3979c:	pop	{fp}		; (ldr fp, [sp], #4)
   397a0:	bx	lr
   397a4:	andeq	ip, r7, r8, ror #29
   397a8:	push	{fp, lr}
   397ac:	add	fp, sp, #4
   397b0:	sub	sp, sp, #16
   397b4:	str	r0, [fp, #-8]
   397b8:	str	r1, [fp, #-12]
   397bc:	str	r2, [fp, #-16]
   397c0:	ldr	r3, [fp, #-8]
   397c4:	cmp	r3, #0
   397c8:	bne	397d4 <__assert_fail@plt+0x270e8>
   397cc:	ldr	r3, [pc, #76]	; 39820 <__assert_fail@plt+0x27134>
   397d0:	str	r3, [fp, #-8]
   397d4:	ldr	r3, [fp, #-8]
   397d8:	mov	r2, #10
   397dc:	str	r2, [r3]
   397e0:	ldr	r3, [fp, #-12]
   397e4:	cmp	r3, #0
   397e8:	beq	397f8 <__assert_fail@plt+0x2710c>
   397ec:	ldr	r3, [fp, #-16]
   397f0:	cmp	r3, #0
   397f4:	bne	397fc <__assert_fail@plt+0x27110>
   397f8:	bl	12698 <abort@plt>
   397fc:	ldr	r3, [fp, #-8]
   39800:	ldr	r2, [fp, #-12]
   39804:	str	r2, [r3, #40]	; 0x28
   39808:	ldr	r3, [fp, #-8]
   3980c:	ldr	r2, [fp, #-16]
   39810:	str	r2, [r3, #44]	; 0x2c
   39814:	nop			; (mov r0, r0)
   39818:	sub	sp, fp, #4
   3981c:	pop	{fp, pc}
   39820:	andeq	ip, r7, r8, ror #29
   39824:	push	{fp, lr}
   39828:	add	fp, sp, #4
   3982c:	sub	sp, sp, #56	; 0x38
   39830:	str	r0, [fp, #-56]	; 0xffffffc8
   39834:	str	r1, [fp, #-60]	; 0xffffffc4
   39838:	sub	r3, fp, #52	; 0x34
   3983c:	mov	r2, #48	; 0x30
   39840:	mov	r1, #0
   39844:	mov	r0, r3
   39848:	bl	12434 <memset@plt>
   3984c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39850:	cmp	r3, #10
   39854:	bne	3985c <__assert_fail@plt+0x27170>
   39858:	bl	12698 <abort@plt>
   3985c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39860:	str	r3, [fp, #-52]	; 0xffffffcc
   39864:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39868:	mov	lr, r3
   3986c:	sub	ip, fp, #52	; 0x34
   39870:	ldm	ip!, {r0, r1, r2, r3}
   39874:	stmia	lr!, {r0, r1, r2, r3}
   39878:	ldm	ip!, {r0, r1, r2, r3}
   3987c:	stmia	lr!, {r0, r1, r2, r3}
   39880:	ldm	ip, {r0, r1, r2, r3}
   39884:	stm	lr, {r0, r1, r2, r3}
   39888:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3988c:	sub	sp, fp, #4
   39890:	pop	{fp, pc}
   39894:	push	{fp, lr}
   39898:	add	fp, sp, #4
   3989c:	sub	sp, sp, #16
   398a0:	str	r0, [fp, #-16]
   398a4:	str	r1, [fp, #-20]	; 0xffffffec
   398a8:	ldr	r0, [fp, #-16]
   398ac:	bl	12398 <gettext@plt>
   398b0:	str	r0, [fp, #-8]
   398b4:	ldr	r2, [fp, #-8]
   398b8:	ldr	r3, [fp, #-16]
   398bc:	cmp	r2, r3
   398c0:	beq	398cc <__assert_fail@plt+0x271e0>
   398c4:	ldr	r3, [fp, #-8]
   398c8:	b	3995c <__assert_fail@plt+0x27270>
   398cc:	bl	60288 <__assert_fail@plt+0x4db9c>
   398d0:	str	r0, [fp, #-12]
   398d4:	ldr	r1, [pc, #140]	; 39968 <__assert_fail@plt+0x2727c>
   398d8:	ldr	r0, [fp, #-12]
   398dc:	bl	5f624 <__assert_fail@plt+0x4cf38>
   398e0:	mov	r3, r0
   398e4:	cmp	r3, #0
   398e8:	bne	3990c <__assert_fail@plt+0x27220>
   398ec:	ldr	r3, [fp, #-16]
   398f0:	ldrb	r3, [r3]
   398f4:	cmp	r3, #96	; 0x60
   398f8:	bne	39904 <__assert_fail@plt+0x27218>
   398fc:	ldr	r3, [pc, #104]	; 3996c <__assert_fail@plt+0x27280>
   39900:	b	3995c <__assert_fail@plt+0x27270>
   39904:	ldr	r3, [pc, #100]	; 39970 <__assert_fail@plt+0x27284>
   39908:	b	3995c <__assert_fail@plt+0x27270>
   3990c:	ldr	r1, [pc, #96]	; 39974 <__assert_fail@plt+0x27288>
   39910:	ldr	r0, [fp, #-12]
   39914:	bl	5f624 <__assert_fail@plt+0x4cf38>
   39918:	mov	r3, r0
   3991c:	cmp	r3, #0
   39920:	bne	39944 <__assert_fail@plt+0x27258>
   39924:	ldr	r3, [fp, #-16]
   39928:	ldrb	r3, [r3]
   3992c:	cmp	r3, #96	; 0x60
   39930:	bne	3993c <__assert_fail@plt+0x27250>
   39934:	ldr	r3, [pc, #60]	; 39978 <__assert_fail@plt+0x2728c>
   39938:	b	3995c <__assert_fail@plt+0x27270>
   3993c:	ldr	r3, [pc, #56]	; 3997c <__assert_fail@plt+0x27290>
   39940:	b	3995c <__assert_fail@plt+0x27270>
   39944:	ldr	r3, [fp, #-20]	; 0xffffffec
   39948:	cmp	r3, #9
   3994c:	bne	39958 <__assert_fail@plt+0x2726c>
   39950:	ldr	r3, [pc, #40]	; 39980 <__assert_fail@plt+0x27294>
   39954:	b	3995c <__assert_fail@plt+0x27270>
   39958:	ldr	r3, [pc, #36]	; 39984 <__assert_fail@plt+0x27298>
   3995c:	mov	r0, r3
   39960:	sub	sp, fp, #4
   39964:	pop	{fp, pc}
   39968:	andeq	sl, r6, r4, lsl r7
   3996c:	andeq	sl, r6, ip, lsl r7
   39970:	andeq	sl, r6, r0, lsr #14
   39974:	andeq	sl, r6, r4, lsr #14
   39978:	andeq	sl, r6, ip, lsr #14
   3997c:	andeq	sl, r6, r0, lsr r7
   39980:	andeq	sl, r6, r4, lsr r7
   39984:	andeq	sl, r6, r8, lsr r7
   39988:	push	{r4, fp, lr}
   3998c:	add	fp, sp, #8
   39990:	sub	sp, sp, #116	; 0x74
   39994:	str	r0, [fp, #-88]	; 0xffffffa8
   39998:	str	r1, [fp, #-92]	; 0xffffffa4
   3999c:	str	r2, [fp, #-96]	; 0xffffffa0
   399a0:	str	r3, [fp, #-100]	; 0xffffff9c
   399a4:	mov	r3, #0
   399a8:	str	r3, [fp, #-20]	; 0xffffffec
   399ac:	mov	r3, #0
   399b0:	str	r3, [fp, #-24]	; 0xffffffe8
   399b4:	mov	r3, #0
   399b8:	str	r3, [fp, #-28]	; 0xffffffe4
   399bc:	mov	r3, #0
   399c0:	str	r3, [fp, #-32]	; 0xffffffe0
   399c4:	mov	r3, #0
   399c8:	strb	r3, [fp, #-33]	; 0xffffffdf
   399cc:	bl	12254 <__ctype_get_mb_cur_max@plt>
   399d0:	mov	r3, r0
   399d4:	cmp	r3, #1
   399d8:	moveq	r3, #1
   399dc:	movne	r3, #0
   399e0:	strb	r3, [fp, #-57]	; 0xffffffc7
   399e4:	ldr	r3, [fp, #8]
   399e8:	and	r3, r3, #2
   399ec:	cmp	r3, #0
   399f0:	movne	r3, #1
   399f4:	moveq	r3, #0
   399f8:	strb	r3, [fp, #-34]	; 0xffffffde
   399fc:	mov	r3, #0
   39a00:	strb	r3, [fp, #-35]	; 0xffffffdd
   39a04:	mov	r3, #0
   39a08:	strb	r3, [fp, #-36]	; 0xffffffdc
   39a0c:	mov	r3, #1
   39a10:	strb	r3, [fp, #-37]	; 0xffffffdb
   39a14:	ldr	r3, [fp, #4]
   39a18:	cmp	r3, #10
   39a1c:	ldrls	pc, [pc, r3, lsl #2]
   39a20:	b	39c28 <__assert_fail@plt+0x2753c>
   39a24:	andeq	r9, r3, ip, lsl ip
   39a28:	muleq	r3, r8, fp
   39a2c:			; <UNDEFINED> instruction: 0x00039bbc
   39a30:	muleq	r3, r0, fp
   39a34:	andeq	r9, r3, r0, lsr #23
   39a38:	andeq	r9, r3, r0, ror #20
   39a3c:	andeq	r9, r3, r0, asr sl
   39a40:	andeq	r9, r3, r0, asr #21
   39a44:	ldrdeq	r9, [r3], -r4
   39a48:	ldrdeq	r9, [r3], -r4
   39a4c:	ldrdeq	r9, [r3], -r4
   39a50:	mov	r3, #5
   39a54:	str	r3, [fp, #4]
   39a58:	mov	r3, #1
   39a5c:	strb	r3, [fp, #-34]	; 0xffffffde
   39a60:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39a64:	eor	r3, r3, #1
   39a68:	uxtb	r3, r3
   39a6c:	cmp	r3, #0
   39a70:	beq	39aa4 <__assert_fail@plt+0x273b8>
   39a74:	ldr	r2, [fp, #-20]	; 0xffffffec
   39a78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39a7c:	cmp	r2, r3
   39a80:	bcs	39a98 <__assert_fail@plt+0x273ac>
   39a84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   39a8c:	add	r3, r2, r3
   39a90:	mov	r2, #34	; 0x22
   39a94:	strb	r2, [r3]
   39a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   39a9c:	add	r3, r3, #1
   39aa0:	str	r3, [fp, #-20]	; 0xffffffec
   39aa4:	mov	r3, #1
   39aa8:	strb	r3, [fp, #-33]	; 0xffffffdf
   39aac:	ldr	r3, [pc, #3872]	; 3a9d4 <__assert_fail@plt+0x282e8>
   39ab0:	str	r3, [fp, #-28]	; 0xffffffe4
   39ab4:	mov	r3, #1
   39ab8:	str	r3, [fp, #-32]	; 0xffffffe0
   39abc:	b	39c2c <__assert_fail@plt+0x27540>
   39ac0:	mov	r3, #1
   39ac4:	strb	r3, [fp, #-33]	; 0xffffffdf
   39ac8:	mov	r3, #0
   39acc:	strb	r3, [fp, #-34]	; 0xffffffde
   39ad0:	b	39c2c <__assert_fail@plt+0x27540>
   39ad4:	ldr	r3, [fp, #4]
   39ad8:	cmp	r3, #10
   39adc:	beq	39b00 <__assert_fail@plt+0x27414>
   39ae0:	ldr	r1, [fp, #4]
   39ae4:	ldr	r0, [pc, #3820]	; 3a9d8 <__assert_fail@plt+0x282ec>
   39ae8:	bl	39894 <__assert_fail@plt+0x271a8>
   39aec:	str	r0, [fp, #16]
   39af0:	ldr	r1, [fp, #4]
   39af4:	ldr	r0, [pc, #3808]	; 3a9dc <__assert_fail@plt+0x282f0>
   39af8:	bl	39894 <__assert_fail@plt+0x271a8>
   39afc:	str	r0, [fp, #20]
   39b00:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39b04:	eor	r3, r3, #1
   39b08:	uxtb	r3, r3
   39b0c:	cmp	r3, #0
   39b10:	beq	39b70 <__assert_fail@plt+0x27484>
   39b14:	ldr	r3, [fp, #16]
   39b18:	str	r3, [fp, #-28]	; 0xffffffe4
   39b1c:	b	39b60 <__assert_fail@plt+0x27474>
   39b20:	ldr	r2, [fp, #-20]	; 0xffffffec
   39b24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39b28:	cmp	r2, r3
   39b2c:	bcs	39b48 <__assert_fail@plt+0x2745c>
   39b30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   39b38:	add	r3, r2, r3
   39b3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39b40:	ldrb	r2, [r2]
   39b44:	strb	r2, [r3]
   39b48:	ldr	r3, [fp, #-20]	; 0xffffffec
   39b4c:	add	r3, r3, #1
   39b50:	str	r3, [fp, #-20]	; 0xffffffec
   39b54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39b58:	add	r3, r3, #1
   39b5c:	str	r3, [fp, #-28]	; 0xffffffe4
   39b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39b64:	ldrb	r3, [r3]
   39b68:	cmp	r3, #0
   39b6c:	bne	39b20 <__assert_fail@plt+0x27434>
   39b70:	mov	r3, #1
   39b74:	strb	r3, [fp, #-33]	; 0xffffffdf
   39b78:	ldr	r3, [fp, #20]
   39b7c:	str	r3, [fp, #-28]	; 0xffffffe4
   39b80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39b84:	bl	123bc <strlen@plt>
   39b88:	str	r0, [fp, #-32]	; 0xffffffe0
   39b8c:	b	39c2c <__assert_fail@plt+0x27540>
   39b90:	mov	r3, #1
   39b94:	strb	r3, [fp, #-33]	; 0xffffffdf
   39b98:	mov	r3, #1
   39b9c:	strb	r3, [fp, #-34]	; 0xffffffde
   39ba0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39ba4:	eor	r3, r3, #1
   39ba8:	uxtb	r3, r3
   39bac:	cmp	r3, #0
   39bb0:	beq	39bbc <__assert_fail@plt+0x274d0>
   39bb4:	mov	r3, #1
   39bb8:	strb	r3, [fp, #-33]	; 0xffffffdf
   39bbc:	mov	r3, #2
   39bc0:	str	r3, [fp, #4]
   39bc4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39bc8:	eor	r3, r3, #1
   39bcc:	uxtb	r3, r3
   39bd0:	cmp	r3, #0
   39bd4:	beq	39c08 <__assert_fail@plt+0x2751c>
   39bd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   39bdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39be0:	cmp	r2, r3
   39be4:	bcs	39bfc <__assert_fail@plt+0x27510>
   39be8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   39bf0:	add	r3, r2, r3
   39bf4:	mov	r2, #39	; 0x27
   39bf8:	strb	r2, [r3]
   39bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   39c00:	add	r3, r3, #1
   39c04:	str	r3, [fp, #-20]	; 0xffffffec
   39c08:	ldr	r3, [pc, #3532]	; 3a9dc <__assert_fail@plt+0x282f0>
   39c0c:	str	r3, [fp, #-28]	; 0xffffffe4
   39c10:	mov	r3, #1
   39c14:	str	r3, [fp, #-32]	; 0xffffffe0
   39c18:	b	39c2c <__assert_fail@plt+0x27540>
   39c1c:	mov	r3, #0
   39c20:	strb	r3, [fp, #-34]	; 0xffffffde
   39c24:	b	39c2c <__assert_fail@plt+0x27540>
   39c28:	bl	12698 <abort@plt>
   39c2c:	mov	r3, #0
   39c30:	str	r3, [fp, #-16]
   39c34:	b	3adc4 <__assert_fail@plt+0x286d8>
   39c38:	mov	r3, #0
   39c3c:	strb	r3, [fp, #-40]	; 0xffffffd8
   39c40:	mov	r3, #0
   39c44:	strb	r3, [fp, #-41]	; 0xffffffd7
   39c48:	mov	r3, #0
   39c4c:	strb	r3, [fp, #-42]	; 0xffffffd6
   39c50:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   39c54:	cmp	r3, #0
   39c58:	beq	39cf4 <__assert_fail@plt+0x27608>
   39c5c:	ldr	r3, [fp, #4]
   39c60:	cmp	r3, #2
   39c64:	beq	39cf4 <__assert_fail@plt+0x27608>
   39c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39c6c:	cmp	r3, #0
   39c70:	beq	39cf4 <__assert_fail@plt+0x27608>
   39c74:	ldr	r2, [fp, #-16]
   39c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39c7c:	add	r4, r2, r3
   39c80:	ldr	r3, [fp, #-100]	; 0xffffff9c
   39c84:	cmn	r3, #1
   39c88:	bne	39cac <__assert_fail@plt+0x275c0>
   39c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39c90:	cmp	r3, #1
   39c94:	bls	39cac <__assert_fail@plt+0x275c0>
   39c98:	ldr	r0, [fp, #-96]	; 0xffffffa0
   39c9c:	bl	123bc <strlen@plt>
   39ca0:	str	r0, [fp, #-100]	; 0xffffff9c
   39ca4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   39ca8:	b	39cb0 <__assert_fail@plt+0x275c4>
   39cac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   39cb0:	cmp	r4, r3
   39cb4:	bhi	39cf4 <__assert_fail@plt+0x27608>
   39cb8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   39cbc:	ldr	r3, [fp, #-16]
   39cc0:	add	r3, r2, r3
   39cc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39ccc:	mov	r0, r3
   39cd0:	bl	12158 <memcmp@plt>
   39cd4:	mov	r3, r0
   39cd8:	cmp	r3, #0
   39cdc:	bne	39cf4 <__assert_fail@plt+0x27608>
   39ce0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39ce4:	cmp	r3, #0
   39ce8:	bne	3af80 <__assert_fail@plt+0x28894>
   39cec:	mov	r3, #1
   39cf0:	strb	r3, [fp, #-40]	; 0xffffffd8
   39cf4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   39cf8:	ldr	r3, [fp, #-16]
   39cfc:	add	r3, r2, r3
   39d00:	ldrb	r3, [r3]
   39d04:	strb	r3, [fp, #-38]	; 0xffffffda
   39d08:	ldrb	r3, [fp, #-38]	; 0xffffffda
   39d0c:	cmp	r3, #126	; 0x7e
   39d10:	ldrls	pc, [pc, r3, lsl #2]
   39d14:	b	3a540 <__assert_fail@plt+0x27e54>
   39d18:	andeq	r9, r3, r4, lsl pc
   39d1c:	andeq	sl, r3, r0, asr #10
   39d20:	andeq	sl, r3, r0, asr #10
   39d24:	andeq	sl, r3, r0, asr #10
   39d28:	andeq	sl, r3, r0, asr #10
   39d2c:	andeq	sl, r3, r0, asr #10
   39d30:	andeq	sl, r3, r0, asr #10
   39d34:	andeq	sl, r3, r4, lsl #6
   39d38:	andeq	sl, r3, r0, lsl r3
   39d3c:	andeq	sl, r3, r0, asr #6
   39d40:	andeq	sl, r3, r8, lsr #6
   39d44:	andeq	sl, r3, ip, asr #6
   39d48:	andeq	sl, r3, ip, lsl r3
   39d4c:	andeq	sl, r3, r4, lsr r3
   39d50:	andeq	sl, r3, r0, asr #10
   39d54:	andeq	sl, r3, r0, asr #10
   39d58:	andeq	sl, r3, r0, asr #10
   39d5c:	andeq	sl, r3, r0, asr #10
   39d60:	andeq	sl, r3, r0, asr #10
   39d64:	andeq	sl, r3, r0, asr #10
   39d68:	andeq	sl, r3, r0, asr #10
   39d6c:	andeq	sl, r3, r0, asr #10
   39d70:	andeq	sl, r3, r0, asr #10
   39d74:	andeq	sl, r3, r0, asr #10
   39d78:	andeq	sl, r3, r0, asr #10
   39d7c:	andeq	sl, r3, r0, asr #10
   39d80:	andeq	sl, r3, r0, asr #10
   39d84:	andeq	sl, r3, r0, asr #10
   39d88:	andeq	sl, r3, r0, asr #10
   39d8c:	andeq	sl, r3, r0, asr #10
   39d90:	andeq	sl, r3, r0, asr #10
   39d94:	andeq	sl, r3, r0, asr #10
   39d98:	andeq	sl, r3, r4, lsr #8
   39d9c:	andeq	sl, r3, ip, lsr #8
   39da0:	andeq	sl, r3, ip, lsr #8
   39da4:	andeq	sl, r3, r8, lsl r4
   39da8:	andeq	sl, r3, ip, lsr #8
   39dac:	andeq	sl, r3, r4, lsr r5
   39db0:	andeq	sl, r3, ip, lsr #8
   39db4:	andeq	sl, r3, r8, asr #8
   39db8:	andeq	sl, r3, ip, lsr #8
   39dbc:	andeq	sl, r3, ip, lsr #8
   39dc0:	andeq	sl, r3, ip, lsr #8
   39dc4:	andeq	sl, r3, r4, lsr r5
   39dc8:	andeq	sl, r3, r4, lsr r5
   39dcc:	andeq	sl, r3, r4, lsr r5
   39dd0:	andeq	sl, r3, r4, lsr r5
   39dd4:	andeq	sl, r3, r4, lsr r5
   39dd8:	andeq	sl, r3, r4, lsr r5
   39ddc:	andeq	sl, r3, r4, lsr r5
   39de0:	andeq	sl, r3, r4, lsr r5
   39de4:	andeq	sl, r3, r4, lsr r5
   39de8:	andeq	sl, r3, r4, lsr r5
   39dec:	andeq	sl, r3, r4, lsr r5
   39df0:	andeq	sl, r3, r4, lsr r5
   39df4:	andeq	sl, r3, r4, lsr r5
   39df8:	andeq	sl, r3, r4, lsr r5
   39dfc:	andeq	sl, r3, r4, lsr r5
   39e00:	andeq	sl, r3, r4, lsr r5
   39e04:	andeq	sl, r3, ip, lsr #8
   39e08:	andeq	sl, r3, ip, lsr #8
   39e0c:	andeq	sl, r3, ip, lsr #8
   39e10:	andeq	sl, r3, ip, lsr #8
   39e14:	strdeq	sl, [r3], -r4
   39e18:	andeq	sl, r3, r0, asr #10
   39e1c:	andeq	sl, r3, r4, lsr r5
   39e20:	andeq	sl, r3, r4, lsr r5
   39e24:	andeq	sl, r3, r4, lsr r5
   39e28:	andeq	sl, r3, r4, lsr r5
   39e2c:	andeq	sl, r3, r4, lsr r5
   39e30:	andeq	sl, r3, r4, lsr r5
   39e34:	andeq	sl, r3, r4, lsr r5
   39e38:	andeq	sl, r3, r4, lsr r5
   39e3c:	andeq	sl, r3, r4, lsr r5
   39e40:	andeq	sl, r3, r4, lsr r5
   39e44:	andeq	sl, r3, r4, lsr r5
   39e48:	andeq	sl, r3, r4, lsr r5
   39e4c:	andeq	sl, r3, r4, lsr r5
   39e50:	andeq	sl, r3, r4, lsr r5
   39e54:	andeq	sl, r3, r4, lsr r5
   39e58:	andeq	sl, r3, r4, lsr r5
   39e5c:	andeq	sl, r3, r4, lsr r5
   39e60:	andeq	sl, r3, r4, lsr r5
   39e64:	andeq	sl, r3, r4, lsr r5
   39e68:	andeq	sl, r3, r4, lsr r5
   39e6c:	andeq	sl, r3, r4, lsr r5
   39e70:	andeq	sl, r3, r4, lsr r5
   39e74:	andeq	sl, r3, r4, lsr r5
   39e78:	andeq	sl, r3, r4, lsr r5
   39e7c:	andeq	sl, r3, r4, lsr r5
   39e80:	andeq	sl, r3, r4, lsr r5
   39e84:	andeq	sl, r3, ip, lsr #8
   39e88:	andeq	sl, r3, r8, asr r3
   39e8c:	andeq	sl, r3, r4, lsr r5
   39e90:	andeq	sl, r3, ip, lsr #8
   39e94:	andeq	sl, r3, r4, lsr r5
   39e98:	andeq	sl, r3, ip, lsr #8
   39e9c:	andeq	sl, r3, r4, lsr r5
   39ea0:	andeq	sl, r3, r4, lsr r5
   39ea4:	andeq	sl, r3, r4, lsr r5
   39ea8:	andeq	sl, r3, r4, lsr r5
   39eac:	andeq	sl, r3, r4, lsr r5
   39eb0:	andeq	sl, r3, r4, lsr r5
   39eb4:	andeq	sl, r3, r4, lsr r5
   39eb8:	andeq	sl, r3, r4, lsr r5
   39ebc:	andeq	sl, r3, r4, lsr r5
   39ec0:	andeq	sl, r3, r4, lsr r5
   39ec4:	andeq	sl, r3, r4, lsr r5
   39ec8:	andeq	sl, r3, r4, lsr r5
   39ecc:	andeq	sl, r3, r4, lsr r5
   39ed0:	andeq	sl, r3, r4, lsr r5
   39ed4:	andeq	sl, r3, r4, lsr r5
   39ed8:	andeq	sl, r3, r4, lsr r5
   39edc:	andeq	sl, r3, r4, lsr r5
   39ee0:	andeq	sl, r3, r4, lsr r5
   39ee4:	andeq	sl, r3, r4, lsr r5
   39ee8:	andeq	sl, r3, r4, lsr r5
   39eec:	andeq	sl, r3, r4, lsr r5
   39ef0:	andeq	sl, r3, r4, lsr r5
   39ef4:	andeq	sl, r3, r4, lsr r5
   39ef8:	andeq	sl, r3, r4, lsr r5
   39efc:	andeq	sl, r3, r4, lsr r5
   39f00:	andeq	sl, r3, r4, lsr r5
   39f04:	ldrdeq	sl, [r3], -r0
   39f08:	andeq	sl, r3, ip, lsr #8
   39f0c:	ldrdeq	sl, [r3], -r0
   39f10:	andeq	sl, r3, r8, lsl r4
   39f14:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   39f18:	cmp	r3, #0
   39f1c:	beq	3a0e0 <__assert_fail@plt+0x279f4>
   39f20:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39f24:	cmp	r3, #0
   39f28:	bne	3af88 <__assert_fail@plt+0x2889c>
   39f2c:	mov	r3, #1
   39f30:	strb	r3, [fp, #-41]	; 0xffffffd7
   39f34:	ldr	r3, [fp, #4]
   39f38:	cmp	r3, #2
   39f3c:	bne	39fec <__assert_fail@plt+0x27900>
   39f40:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   39f44:	eor	r3, r3, #1
   39f48:	uxtb	r3, r3
   39f4c:	cmp	r3, #0
   39f50:	beq	39fec <__assert_fail@plt+0x27900>
   39f54:	ldr	r2, [fp, #-20]	; 0xffffffec
   39f58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39f5c:	cmp	r2, r3
   39f60:	bcs	39f78 <__assert_fail@plt+0x2788c>
   39f64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   39f6c:	add	r3, r2, r3
   39f70:	mov	r2, #39	; 0x27
   39f74:	strb	r2, [r3]
   39f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   39f7c:	add	r3, r3, #1
   39f80:	str	r3, [fp, #-20]	; 0xffffffec
   39f84:	ldr	r2, [fp, #-20]	; 0xffffffec
   39f88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39f8c:	cmp	r2, r3
   39f90:	bcs	39fa8 <__assert_fail@plt+0x278bc>
   39f94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   39f9c:	add	r3, r2, r3
   39fa0:	mov	r2, #36	; 0x24
   39fa4:	strb	r2, [r3]
   39fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   39fac:	add	r3, r3, #1
   39fb0:	str	r3, [fp, #-20]	; 0xffffffec
   39fb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   39fb8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39fbc:	cmp	r2, r3
   39fc0:	bcs	39fd8 <__assert_fail@plt+0x278ec>
   39fc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39fc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   39fcc:	add	r3, r2, r3
   39fd0:	mov	r2, #39	; 0x27
   39fd4:	strb	r2, [r3]
   39fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   39fdc:	add	r3, r3, #1
   39fe0:	str	r3, [fp, #-20]	; 0xffffffec
   39fe4:	mov	r3, #1
   39fe8:	strb	r3, [fp, #-35]	; 0xffffffdd
   39fec:	ldr	r2, [fp, #-20]	; 0xffffffec
   39ff0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39ff4:	cmp	r2, r3
   39ff8:	bcs	3a010 <__assert_fail@plt+0x27924>
   39ffc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a000:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a004:	add	r3, r2, r3
   3a008:	mov	r2, #92	; 0x5c
   3a00c:	strb	r2, [r3]
   3a010:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a014:	add	r3, r3, #1
   3a018:	str	r3, [fp, #-20]	; 0xffffffec
   3a01c:	ldr	r3, [fp, #4]
   3a020:	cmp	r3, #2
   3a024:	beq	3a0d4 <__assert_fail@plt+0x279e8>
   3a028:	ldr	r3, [fp, #-16]
   3a02c:	add	r2, r3, #1
   3a030:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a034:	cmp	r2, r3
   3a038:	bcs	3a0d4 <__assert_fail@plt+0x279e8>
   3a03c:	ldr	r3, [fp, #-16]
   3a040:	add	r3, r3, #1
   3a044:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a048:	add	r3, r2, r3
   3a04c:	ldrb	r3, [r3]
   3a050:	cmp	r3, #47	; 0x2f
   3a054:	bls	3a0d4 <__assert_fail@plt+0x279e8>
   3a058:	ldr	r3, [fp, #-16]
   3a05c:	add	r3, r3, #1
   3a060:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a064:	add	r3, r2, r3
   3a068:	ldrb	r3, [r3]
   3a06c:	cmp	r3, #57	; 0x39
   3a070:	bhi	3a0d4 <__assert_fail@plt+0x279e8>
   3a074:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a078:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a07c:	cmp	r2, r3
   3a080:	bcs	3a098 <__assert_fail@plt+0x279ac>
   3a084:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a088:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a08c:	add	r3, r2, r3
   3a090:	mov	r2, #48	; 0x30
   3a094:	strb	r2, [r3]
   3a098:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a09c:	add	r3, r3, #1
   3a0a0:	str	r3, [fp, #-20]	; 0xffffffec
   3a0a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a0a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a0ac:	cmp	r2, r3
   3a0b0:	bcs	3a0c8 <__assert_fail@plt+0x279dc>
   3a0b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a0b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0bc:	add	r3, r2, r3
   3a0c0:	mov	r2, #48	; 0x30
   3a0c4:	strb	r2, [r3]
   3a0c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0cc:	add	r3, r3, #1
   3a0d0:	str	r3, [fp, #-20]	; 0xffffffec
   3a0d4:	mov	r3, #48	; 0x30
   3a0d8:	strb	r3, [fp, #-38]	; 0xffffffda
   3a0dc:	b	3ab1c <__assert_fail@plt+0x28430>
   3a0e0:	ldr	r3, [fp, #8]
   3a0e4:	and	r3, r3, #1
   3a0e8:	cmp	r3, #0
   3a0ec:	beq	3ab1c <__assert_fail@plt+0x28430>
   3a0f0:	b	3adb8 <__assert_fail@plt+0x286cc>
   3a0f4:	ldr	r3, [fp, #4]
   3a0f8:	cmp	r3, #2
   3a0fc:	beq	3a10c <__assert_fail@plt+0x27a20>
   3a100:	cmp	r3, #5
   3a104:	beq	3a11c <__assert_fail@plt+0x27a30>
   3a108:	b	3a300 <__assert_fail@plt+0x27c14>
   3a10c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a110:	cmp	r3, #0
   3a114:	beq	3a2f4 <__assert_fail@plt+0x27c08>
   3a118:	b	3afc4 <__assert_fail@plt+0x288d8>
   3a11c:	ldr	r3, [fp, #8]
   3a120:	and	r3, r3, #4
   3a124:	cmp	r3, #0
   3a128:	beq	3a2fc <__assert_fail@plt+0x27c10>
   3a12c:	ldr	r3, [fp, #-16]
   3a130:	add	r2, r3, #2
   3a134:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a138:	cmp	r2, r3
   3a13c:	bcs	3a2fc <__assert_fail@plt+0x27c10>
   3a140:	ldr	r3, [fp, #-16]
   3a144:	add	r3, r3, #1
   3a148:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a14c:	add	r3, r2, r3
   3a150:	ldrb	r3, [r3]
   3a154:	cmp	r3, #63	; 0x3f
   3a158:	bne	3a2fc <__assert_fail@plt+0x27c10>
   3a15c:	ldr	r3, [fp, #-16]
   3a160:	add	r3, r3, #2
   3a164:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a168:	add	r3, r2, r3
   3a16c:	ldrb	r3, [r3]
   3a170:	sub	r3, r3, #33	; 0x21
   3a174:	cmp	r3, #29
   3a178:	ldrls	pc, [pc, r3, lsl #2]
   3a17c:	b	3a2ec <__assert_fail@plt+0x27c00>
   3a180:	strdeq	sl, [r3], -r8
   3a184:	andeq	sl, r3, ip, ror #5
   3a188:	andeq	sl, r3, ip, ror #5
   3a18c:	andeq	sl, r3, ip, ror #5
   3a190:	andeq	sl, r3, ip, ror #5
   3a194:	andeq	sl, r3, ip, ror #5
   3a198:	strdeq	sl, [r3], -r8
   3a19c:	strdeq	sl, [r3], -r8
   3a1a0:	strdeq	sl, [r3], -r8
   3a1a4:	andeq	sl, r3, ip, ror #5
   3a1a8:	andeq	sl, r3, ip, ror #5
   3a1ac:	andeq	sl, r3, ip, ror #5
   3a1b0:	strdeq	sl, [r3], -r8
   3a1b4:	andeq	sl, r3, ip, ror #5
   3a1b8:	strdeq	sl, [r3], -r8
   3a1bc:	andeq	sl, r3, ip, ror #5
   3a1c0:	andeq	sl, r3, ip, ror #5
   3a1c4:	andeq	sl, r3, ip, ror #5
   3a1c8:	andeq	sl, r3, ip, ror #5
   3a1cc:	andeq	sl, r3, ip, ror #5
   3a1d0:	andeq	sl, r3, ip, ror #5
   3a1d4:	andeq	sl, r3, ip, ror #5
   3a1d8:	andeq	sl, r3, ip, ror #5
   3a1dc:	andeq	sl, r3, ip, ror #5
   3a1e0:	andeq	sl, r3, ip, ror #5
   3a1e4:	andeq	sl, r3, ip, ror #5
   3a1e8:	andeq	sl, r3, ip, ror #5
   3a1ec:	strdeq	sl, [r3], -r8
   3a1f0:	strdeq	sl, [r3], -r8
   3a1f4:	strdeq	sl, [r3], -r8
   3a1f8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a1fc:	cmp	r3, #0
   3a200:	bne	3af90 <__assert_fail@plt+0x288a4>
   3a204:	ldr	r3, [fp, #-16]
   3a208:	add	r3, r3, #2
   3a20c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a210:	add	r3, r2, r3
   3a214:	ldrb	r3, [r3]
   3a218:	strb	r3, [fp, #-38]	; 0xffffffda
   3a21c:	ldr	r3, [fp, #-16]
   3a220:	add	r3, r3, #2
   3a224:	str	r3, [fp, #-16]
   3a228:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a22c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a230:	cmp	r2, r3
   3a234:	bcs	3a24c <__assert_fail@plt+0x27b60>
   3a238:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a23c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a240:	add	r3, r2, r3
   3a244:	mov	r2, #63	; 0x3f
   3a248:	strb	r2, [r3]
   3a24c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a250:	add	r3, r3, #1
   3a254:	str	r3, [fp, #-20]	; 0xffffffec
   3a258:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a25c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a260:	cmp	r2, r3
   3a264:	bcs	3a27c <__assert_fail@plt+0x27b90>
   3a268:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a270:	add	r3, r2, r3
   3a274:	mov	r2, #34	; 0x22
   3a278:	strb	r2, [r3]
   3a27c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a280:	add	r3, r3, #1
   3a284:	str	r3, [fp, #-20]	; 0xffffffec
   3a288:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a28c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a290:	cmp	r2, r3
   3a294:	bcs	3a2ac <__assert_fail@plt+0x27bc0>
   3a298:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a29c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a2a0:	add	r3, r2, r3
   3a2a4:	mov	r2, #34	; 0x22
   3a2a8:	strb	r2, [r3]
   3a2ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a2b0:	add	r3, r3, #1
   3a2b4:	str	r3, [fp, #-20]	; 0xffffffec
   3a2b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a2bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a2c0:	cmp	r2, r3
   3a2c4:	bcs	3a2dc <__assert_fail@plt+0x27bf0>
   3a2c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a2d0:	add	r3, r2, r3
   3a2d4:	mov	r2, #63	; 0x3f
   3a2d8:	strb	r2, [r3]
   3a2dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a2e0:	add	r3, r3, #1
   3a2e4:	str	r3, [fp, #-20]	; 0xffffffec
   3a2e8:	b	3a2f0 <__assert_fail@plt+0x27c04>
   3a2ec:	nop			; (mov r0, r0)
   3a2f0:	b	3a2fc <__assert_fail@plt+0x27c10>
   3a2f4:	nop			; (mov r0, r0)
   3a2f8:	b	3ab48 <__assert_fail@plt+0x2845c>
   3a2fc:	nop			; (mov r0, r0)
   3a300:	b	3ab48 <__assert_fail@plt+0x2845c>
   3a304:	mov	r3, #97	; 0x61
   3a308:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a30c:	b	3a3b8 <__assert_fail@plt+0x27ccc>
   3a310:	mov	r3, #98	; 0x62
   3a314:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a318:	b	3a3b8 <__assert_fail@plt+0x27ccc>
   3a31c:	mov	r3, #102	; 0x66
   3a320:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a324:	b	3a3b8 <__assert_fail@plt+0x27ccc>
   3a328:	mov	r3, #110	; 0x6e
   3a32c:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a330:	b	3a3a0 <__assert_fail@plt+0x27cb4>
   3a334:	mov	r3, #114	; 0x72
   3a338:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a33c:	b	3a3a0 <__assert_fail@plt+0x27cb4>
   3a340:	mov	r3, #116	; 0x74
   3a344:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a348:	b	3a3a0 <__assert_fail@plt+0x27cb4>
   3a34c:	mov	r3, #118	; 0x76
   3a350:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a354:	b	3a3b8 <__assert_fail@plt+0x27ccc>
   3a358:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3a35c:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a360:	ldr	r3, [fp, #4]
   3a364:	cmp	r3, #2
   3a368:	bne	3a37c <__assert_fail@plt+0x27c90>
   3a36c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a370:	cmp	r3, #0
   3a374:	beq	3acd0 <__assert_fail@plt+0x285e4>
   3a378:	b	3afc4 <__assert_fail@plt+0x288d8>
   3a37c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a380:	cmp	r3, #0
   3a384:	beq	3a3a0 <__assert_fail@plt+0x27cb4>
   3a388:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a38c:	cmp	r3, #0
   3a390:	beq	3a3a0 <__assert_fail@plt+0x27cb4>
   3a394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a398:	cmp	r3, #0
   3a39c:	bne	3acd8 <__assert_fail@plt+0x285ec>
   3a3a0:	ldr	r3, [fp, #4]
   3a3a4:	cmp	r3, #2
   3a3a8:	bne	3a3b8 <__assert_fail@plt+0x27ccc>
   3a3ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a3b0:	cmp	r3, #0
   3a3b4:	bne	3af98 <__assert_fail@plt+0x288ac>
   3a3b8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a3bc:	cmp	r3, #0
   3a3c0:	beq	3ab24 <__assert_fail@plt+0x28438>
   3a3c4:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   3a3c8:	strb	r3, [fp, #-38]	; 0xffffffda
   3a3cc:	b	3abd0 <__assert_fail@plt+0x284e4>
   3a3d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a3d4:	cmn	r3, #1
   3a3d8:	bne	3a3fc <__assert_fail@plt+0x27d10>
   3a3dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   3a3e0:	add	r3, r3, #1
   3a3e4:	ldrb	r3, [r3]
   3a3e8:	cmp	r3, #0
   3a3ec:	movne	r3, #1
   3a3f0:	moveq	r3, #0
   3a3f4:	uxtb	r3, r3
   3a3f8:	b	3a410 <__assert_fail@plt+0x27d24>
   3a3fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a400:	cmp	r3, #1
   3a404:	movne	r3, #1
   3a408:	moveq	r3, #0
   3a40c:	uxtb	r3, r3
   3a410:	cmp	r3, #0
   3a414:	bne	3ab2c <__assert_fail@plt+0x28440>
   3a418:	ldr	r3, [fp, #-16]
   3a41c:	cmp	r3, #0
   3a420:	bne	3ab34 <__assert_fail@plt+0x28448>
   3a424:	mov	r3, #1
   3a428:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a42c:	ldr	r3, [fp, #4]
   3a430:	cmp	r3, #2
   3a434:	bne	3ab3c <__assert_fail@plt+0x28450>
   3a438:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a43c:	cmp	r3, #0
   3a440:	beq	3ab3c <__assert_fail@plt+0x28450>
   3a444:	b	3afc4 <__assert_fail@plt+0x288d8>
   3a448:	mov	r3, #1
   3a44c:	strb	r3, [fp, #-36]	; 0xffffffdc
   3a450:	mov	r3, #1
   3a454:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a458:	ldr	r3, [fp, #4]
   3a45c:	cmp	r3, #2
   3a460:	bne	3ab44 <__assert_fail@plt+0x28458>
   3a464:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a468:	cmp	r3, #0
   3a46c:	bne	3afa0 <__assert_fail@plt+0x288b4>
   3a470:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a474:	cmp	r3, #0
   3a478:	beq	3a498 <__assert_fail@plt+0x27dac>
   3a47c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a480:	cmp	r3, #0
   3a484:	bne	3a498 <__assert_fail@plt+0x27dac>
   3a488:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a48c:	str	r3, [fp, #-24]	; 0xffffffe8
   3a490:	mov	r3, #0
   3a494:	str	r3, [fp, #-92]	; 0xffffffa4
   3a498:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a49c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a4a0:	cmp	r2, r3
   3a4a4:	bcs	3a4bc <__assert_fail@plt+0x27dd0>
   3a4a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4b0:	add	r3, r2, r3
   3a4b4:	mov	r2, #39	; 0x27
   3a4b8:	strb	r2, [r3]
   3a4bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4c0:	add	r3, r3, #1
   3a4c4:	str	r3, [fp, #-20]	; 0xffffffec
   3a4c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a4cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a4d0:	cmp	r2, r3
   3a4d4:	bcs	3a4ec <__assert_fail@plt+0x27e00>
   3a4d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4e0:	add	r3, r2, r3
   3a4e4:	mov	r2, #92	; 0x5c
   3a4e8:	strb	r2, [r3]
   3a4ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4f0:	add	r3, r3, #1
   3a4f4:	str	r3, [fp, #-20]	; 0xffffffec
   3a4f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a4fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a500:	cmp	r2, r3
   3a504:	bcs	3a51c <__assert_fail@plt+0x27e30>
   3a508:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a50c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a510:	add	r3, r2, r3
   3a514:	mov	r2, #39	; 0x27
   3a518:	strb	r2, [r3]
   3a51c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a520:	add	r3, r3, #1
   3a524:	str	r3, [fp, #-20]	; 0xffffffec
   3a528:	mov	r3, #0
   3a52c:	strb	r3, [fp, #-35]	; 0xffffffdd
   3a530:	b	3ab44 <__assert_fail@plt+0x28458>
   3a534:	mov	r3, #1
   3a538:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a53c:	b	3ab48 <__assert_fail@plt+0x2845c>
   3a540:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3a544:	cmp	r3, #0
   3a548:	beq	3a588 <__assert_fail@plt+0x27e9c>
   3a54c:	mov	r3, #1
   3a550:	str	r3, [fp, #-48]	; 0xffffffd0
   3a554:	bl	12368 <__ctype_b_loc@plt>
   3a558:	mov	r3, r0
   3a55c:	ldr	r2, [r3]
   3a560:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3a564:	lsl	r3, r3, #1
   3a568:	add	r3, r2, r3
   3a56c:	ldrh	r3, [r3]
   3a570:	and	r3, r3, #16384	; 0x4000
   3a574:	cmp	r3, #0
   3a578:	movne	r3, #1
   3a57c:	moveq	r3, #0
   3a580:	strb	r3, [fp, #-49]	; 0xffffffcf
   3a584:	b	3a7d4 <__assert_fail@plt+0x280e8>
   3a588:	sub	r3, fp, #76	; 0x4c
   3a58c:	mov	r2, #8
   3a590:	mov	r1, #0
   3a594:	mov	r0, r3
   3a598:	bl	12434 <memset@plt>
   3a59c:	mov	r3, #0
   3a5a0:	str	r3, [fp, #-48]	; 0xffffffd0
   3a5a4:	mov	r3, #1
   3a5a8:	strb	r3, [fp, #-49]	; 0xffffffcf
   3a5ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a5b0:	cmn	r3, #1
   3a5b4:	bne	3a5c4 <__assert_fail@plt+0x27ed8>
   3a5b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   3a5bc:	bl	123bc <strlen@plt>
   3a5c0:	str	r0, [fp, #-100]	; 0xffffff9c
   3a5c4:	ldr	r2, [fp, #-16]
   3a5c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a5cc:	add	r3, r2, r3
   3a5d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a5d4:	add	r1, r2, r3
   3a5d8:	ldr	r2, [fp, #-16]
   3a5dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a5e0:	add	r3, r2, r3
   3a5e4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3a5e8:	sub	r2, r2, r3
   3a5ec:	sub	r3, fp, #76	; 0x4c
   3a5f0:	sub	r0, fp, #80	; 0x50
   3a5f4:	bl	42c50 <__assert_fail@plt+0x30564>
   3a5f8:	str	r0, [fp, #-64]	; 0xffffffc0
   3a5fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a600:	cmp	r3, #0
   3a604:	beq	3a7c8 <__assert_fail@plt+0x280dc>
   3a608:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a60c:	cmn	r3, #1
   3a610:	bne	3a620 <__assert_fail@plt+0x27f34>
   3a614:	mov	r3, #0
   3a618:	strb	r3, [fp, #-49]	; 0xffffffcf
   3a61c:	b	3a7d4 <__assert_fail@plt+0x280e8>
   3a620:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a624:	cmn	r3, #2
   3a628:	bne	3a680 <__assert_fail@plt+0x27f94>
   3a62c:	mov	r3, #0
   3a630:	strb	r3, [fp, #-49]	; 0xffffffcf
   3a634:	b	3a644 <__assert_fail@plt+0x27f58>
   3a638:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a63c:	add	r3, r3, #1
   3a640:	str	r3, [fp, #-48]	; 0xffffffd0
   3a644:	ldr	r2, [fp, #-16]
   3a648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a64c:	add	r2, r2, r3
   3a650:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a654:	cmp	r2, r3
   3a658:	bcs	3a7d0 <__assert_fail@plt+0x280e4>
   3a65c:	ldr	r2, [fp, #-16]
   3a660:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a664:	add	r3, r2, r3
   3a668:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a66c:	add	r3, r2, r3
   3a670:	ldrb	r3, [r3]
   3a674:	cmp	r3, #0
   3a678:	bne	3a638 <__assert_fail@plt+0x27f4c>
   3a67c:	b	3a7d0 <__assert_fail@plt+0x280e4>
   3a680:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a684:	cmp	r3, #0
   3a688:	beq	3a77c <__assert_fail@plt+0x28090>
   3a68c:	ldr	r3, [fp, #4]
   3a690:	cmp	r3, #2
   3a694:	bne	3a77c <__assert_fail@plt+0x28090>
   3a698:	mov	r3, #1
   3a69c:	str	r3, [fp, #-56]	; 0xffffffc8
   3a6a0:	b	3a76c <__assert_fail@plt+0x28080>
   3a6a4:	ldr	r2, [fp, #-16]
   3a6a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a6ac:	add	r2, r2, r3
   3a6b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a6b4:	add	r3, r2, r3
   3a6b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a6bc:	add	r3, r2, r3
   3a6c0:	ldrb	r3, [r3]
   3a6c4:	sub	r3, r3, #91	; 0x5b
   3a6c8:	cmp	r3, #33	; 0x21
   3a6cc:	ldrls	pc, [pc, r3, lsl #2]
   3a6d0:	b	3a75c <__assert_fail@plt+0x28070>
   3a6d4:	andeq	sl, r3, r8, lsr #31
   3a6d8:	andeq	sl, r3, r8, lsr #31
   3a6dc:	andeq	sl, r3, ip, asr r7
   3a6e0:	andeq	sl, r3, r8, lsr #31
   3a6e4:	andeq	sl, r3, ip, asr r7
   3a6e8:	andeq	sl, r3, r8, lsr #31
   3a6ec:	andeq	sl, r3, ip, asr r7
   3a6f0:	andeq	sl, r3, ip, asr r7
   3a6f4:	andeq	sl, r3, ip, asr r7
   3a6f8:	andeq	sl, r3, ip, asr r7
   3a6fc:	andeq	sl, r3, ip, asr r7
   3a700:	andeq	sl, r3, ip, asr r7
   3a704:	andeq	sl, r3, ip, asr r7
   3a708:	andeq	sl, r3, ip, asr r7
   3a70c:	andeq	sl, r3, ip, asr r7
   3a710:	andeq	sl, r3, ip, asr r7
   3a714:	andeq	sl, r3, ip, asr r7
   3a718:	andeq	sl, r3, ip, asr r7
   3a71c:	andeq	sl, r3, ip, asr r7
   3a720:	andeq	sl, r3, ip, asr r7
   3a724:	andeq	sl, r3, ip, asr r7
   3a728:	andeq	sl, r3, ip, asr r7
   3a72c:	andeq	sl, r3, ip, asr r7
   3a730:	andeq	sl, r3, ip, asr r7
   3a734:	andeq	sl, r3, ip, asr r7
   3a738:	andeq	sl, r3, ip, asr r7
   3a73c:	andeq	sl, r3, ip, asr r7
   3a740:	andeq	sl, r3, ip, asr r7
   3a744:	andeq	sl, r3, ip, asr r7
   3a748:	andeq	sl, r3, ip, asr r7
   3a74c:	andeq	sl, r3, ip, asr r7
   3a750:	andeq	sl, r3, ip, asr r7
   3a754:	andeq	sl, r3, ip, asr r7
   3a758:	andeq	sl, r3, r8, lsr #31
   3a75c:	nop			; (mov r0, r0)
   3a760:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a764:	add	r3, r3, #1
   3a768:	str	r3, [fp, #-56]	; 0xffffffc8
   3a76c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3a770:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a774:	cmp	r2, r3
   3a778:	bcc	3a6a4 <__assert_fail@plt+0x27fb8>
   3a77c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a780:	mov	r0, r3
   3a784:	bl	121f4 <iswprint@plt>
   3a788:	mov	r3, r0
   3a78c:	cmp	r3, #0
   3a790:	bne	3a79c <__assert_fail@plt+0x280b0>
   3a794:	mov	r3, #0
   3a798:	strb	r3, [fp, #-49]	; 0xffffffcf
   3a79c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3a7a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a7a4:	add	r3, r2, r3
   3a7a8:	str	r3, [fp, #-48]	; 0xffffffd0
   3a7ac:	sub	r3, fp, #76	; 0x4c
   3a7b0:	mov	r0, r3
   3a7b4:	bl	12134 <mbsinit@plt>
   3a7b8:	mov	r3, r0
   3a7bc:	cmp	r3, #0
   3a7c0:	beq	3a5c4 <__assert_fail@plt+0x27ed8>
   3a7c4:	b	3a7d4 <__assert_fail@plt+0x280e8>
   3a7c8:	nop			; (mov r0, r0)
   3a7cc:	b	3a7d4 <__assert_fail@plt+0x280e8>
   3a7d0:	nop			; (mov r0, r0)
   3a7d4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   3a7d8:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a7dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a7e0:	cmp	r3, #1
   3a7e4:	bhi	3a808 <__assert_fail@plt+0x2811c>
   3a7e8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a7ec:	cmp	r3, #0
   3a7f0:	beq	3ab48 <__assert_fail@plt+0x2845c>
   3a7f4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   3a7f8:	eor	r3, r3, #1
   3a7fc:	uxtb	r3, r3
   3a800:	cmp	r3, #0
   3a804:	beq	3ab48 <__assert_fail@plt+0x2845c>
   3a808:	ldr	r2, [fp, #-16]
   3a80c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a810:	add	r3, r2, r3
   3a814:	str	r3, [fp, #-68]	; 0xffffffbc
   3a818:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a81c:	cmp	r3, #0
   3a820:	beq	3a9e0 <__assert_fail@plt+0x282f4>
   3a824:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   3a828:	eor	r3, r3, #1
   3a82c:	uxtb	r3, r3
   3a830:	cmp	r3, #0
   3a834:	beq	3a9e0 <__assert_fail@plt+0x282f4>
   3a838:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a83c:	cmp	r3, #0
   3a840:	bne	3afb0 <__assert_fail@plt+0x288c4>
   3a844:	mov	r3, #1
   3a848:	strb	r3, [fp, #-41]	; 0xffffffd7
   3a84c:	ldr	r3, [fp, #4]
   3a850:	cmp	r3, #2
   3a854:	bne	3a904 <__assert_fail@plt+0x28218>
   3a858:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3a85c:	eor	r3, r3, #1
   3a860:	uxtb	r3, r3
   3a864:	cmp	r3, #0
   3a868:	beq	3a904 <__assert_fail@plt+0x28218>
   3a86c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a870:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a874:	cmp	r2, r3
   3a878:	bcs	3a890 <__assert_fail@plt+0x281a4>
   3a87c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a880:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a884:	add	r3, r2, r3
   3a888:	mov	r2, #39	; 0x27
   3a88c:	strb	r2, [r3]
   3a890:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a894:	add	r3, r3, #1
   3a898:	str	r3, [fp, #-20]	; 0xffffffec
   3a89c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a8a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a8a4:	cmp	r2, r3
   3a8a8:	bcs	3a8c0 <__assert_fail@plt+0x281d4>
   3a8ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a8b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8b4:	add	r3, r2, r3
   3a8b8:	mov	r2, #36	; 0x24
   3a8bc:	strb	r2, [r3]
   3a8c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8c4:	add	r3, r3, #1
   3a8c8:	str	r3, [fp, #-20]	; 0xffffffec
   3a8cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a8d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a8d4:	cmp	r2, r3
   3a8d8:	bcs	3a8f0 <__assert_fail@plt+0x28204>
   3a8dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a8e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8e4:	add	r3, r2, r3
   3a8e8:	mov	r2, #39	; 0x27
   3a8ec:	strb	r2, [r3]
   3a8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8f4:	add	r3, r3, #1
   3a8f8:	str	r3, [fp, #-20]	; 0xffffffec
   3a8fc:	mov	r3, #1
   3a900:	strb	r3, [fp, #-35]	; 0xffffffdd
   3a904:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a908:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a90c:	cmp	r2, r3
   3a910:	bcs	3a928 <__assert_fail@plt+0x2823c>
   3a914:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a918:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a91c:	add	r3, r2, r3
   3a920:	mov	r2, #92	; 0x5c
   3a924:	strb	r2, [r3]
   3a928:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a92c:	add	r3, r3, #1
   3a930:	str	r3, [fp, #-20]	; 0xffffffec
   3a934:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a938:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a93c:	cmp	r2, r3
   3a940:	bcs	3a968 <__assert_fail@plt+0x2827c>
   3a944:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a948:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a94c:	add	r3, r2, r3
   3a950:	ldrb	r2, [fp, #-38]	; 0xffffffda
   3a954:	lsr	r2, r2, #6
   3a958:	uxtb	r2, r2
   3a95c:	add	r2, r2, #48	; 0x30
   3a960:	uxtb	r2, r2
   3a964:	strb	r2, [r3]
   3a968:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a96c:	add	r3, r3, #1
   3a970:	str	r3, [fp, #-20]	; 0xffffffec
   3a974:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a978:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a97c:	cmp	r2, r3
   3a980:	bcs	3a9b0 <__assert_fail@plt+0x282c4>
   3a984:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a988:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a98c:	add	r3, r2, r3
   3a990:	ldrb	r2, [fp, #-38]	; 0xffffffda
   3a994:	lsr	r2, r2, #3
   3a998:	uxtb	r2, r2
   3a99c:	and	r2, r2, #7
   3a9a0:	uxtb	r2, r2
   3a9a4:	add	r2, r2, #48	; 0x30
   3a9a8:	uxtb	r2, r2
   3a9ac:	strb	r2, [r3]
   3a9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9b4:	add	r3, r3, #1
   3a9b8:	str	r3, [fp, #-20]	; 0xffffffec
   3a9bc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3a9c0:	and	r3, r3, #7
   3a9c4:	uxtb	r3, r3
   3a9c8:	add	r3, r3, #48	; 0x30
   3a9cc:	strb	r3, [fp, #-38]	; 0xffffffda
   3a9d0:	b	3aa24 <__assert_fail@plt+0x28338>
   3a9d4:	andeq	sl, r6, r4, lsr r7
   3a9d8:	andeq	sl, r6, ip, lsr r7
   3a9dc:	andeq	sl, r6, r8, lsr r7
   3a9e0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   3a9e4:	cmp	r3, #0
   3a9e8:	beq	3aa24 <__assert_fail@plt+0x28338>
   3a9ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a9f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a9f4:	cmp	r2, r3
   3a9f8:	bcs	3aa10 <__assert_fail@plt+0x28324>
   3a9fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3aa00:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa04:	add	r3, r2, r3
   3aa08:	mov	r2, #92	; 0x5c
   3aa0c:	strb	r2, [r3]
   3aa10:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa14:	add	r3, r3, #1
   3aa18:	str	r3, [fp, #-20]	; 0xffffffec
   3aa1c:	mov	r3, #0
   3aa20:	strb	r3, [fp, #-40]	; 0xffffffd8
   3aa24:	ldr	r3, [fp, #-16]
   3aa28:	add	r2, r3, #1
   3aa2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3aa30:	cmp	r2, r3
   3aa34:	bcs	3ab14 <__assert_fail@plt+0x28428>
   3aa38:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3aa3c:	cmp	r3, #0
   3aa40:	beq	3aac0 <__assert_fail@plt+0x283d4>
   3aa44:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3aa48:	eor	r3, r3, #1
   3aa4c:	uxtb	r3, r3
   3aa50:	cmp	r3, #0
   3aa54:	beq	3aac0 <__assert_fail@plt+0x283d4>
   3aa58:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aa5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3aa60:	cmp	r2, r3
   3aa64:	bcs	3aa7c <__assert_fail@plt+0x28390>
   3aa68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3aa6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa70:	add	r3, r2, r3
   3aa74:	mov	r2, #39	; 0x27
   3aa78:	strb	r2, [r3]
   3aa7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa80:	add	r3, r3, #1
   3aa84:	str	r3, [fp, #-20]	; 0xffffffec
   3aa88:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aa8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3aa90:	cmp	r2, r3
   3aa94:	bcs	3aaac <__assert_fail@plt+0x283c0>
   3aa98:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3aa9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aaa0:	add	r3, r2, r3
   3aaa4:	mov	r2, #39	; 0x27
   3aaa8:	strb	r2, [r3]
   3aaac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aab0:	add	r3, r3, #1
   3aab4:	str	r3, [fp, #-20]	; 0xffffffec
   3aab8:	mov	r3, #0
   3aabc:	strb	r3, [fp, #-35]	; 0xffffffdd
   3aac0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aac4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3aac8:	cmp	r2, r3
   3aacc:	bcs	3aae4 <__assert_fail@plt+0x283f8>
   3aad0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3aad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aad8:	add	r3, r2, r3
   3aadc:	ldrb	r2, [fp, #-38]	; 0xffffffda
   3aae0:	strb	r2, [r3]
   3aae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aae8:	add	r3, r3, #1
   3aaec:	str	r3, [fp, #-20]	; 0xffffffec
   3aaf0:	ldr	r3, [fp, #-16]
   3aaf4:	add	r3, r3, #1
   3aaf8:	str	r3, [fp, #-16]
   3aafc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3ab00:	ldr	r3, [fp, #-16]
   3ab04:	add	r3, r2, r3
   3ab08:	ldrb	r3, [r3]
   3ab0c:	strb	r3, [fp, #-38]	; 0xffffffda
   3ab10:	b	3a818 <__assert_fail@plt+0x2812c>
   3ab14:	nop			; (mov r0, r0)
   3ab18:	b	3ace4 <__assert_fail@plt+0x285f8>
   3ab1c:	nop			; (mov r0, r0)
   3ab20:	b	3ab48 <__assert_fail@plt+0x2845c>
   3ab24:	nop			; (mov r0, r0)
   3ab28:	b	3ab48 <__assert_fail@plt+0x2845c>
   3ab2c:	nop			; (mov r0, r0)
   3ab30:	b	3ab48 <__assert_fail@plt+0x2845c>
   3ab34:	nop			; (mov r0, r0)
   3ab38:	b	3ab48 <__assert_fail@plt+0x2845c>
   3ab3c:	nop			; (mov r0, r0)
   3ab40:	b	3ab48 <__assert_fail@plt+0x2845c>
   3ab44:	nop			; (mov r0, r0)
   3ab48:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3ab4c:	eor	r3, r3, #1
   3ab50:	uxtb	r3, r3
   3ab54:	cmp	r3, #0
   3ab58:	bne	3ab68 <__assert_fail@plt+0x2847c>
   3ab5c:	ldr	r3, [fp, #4]
   3ab60:	cmp	r3, #2
   3ab64:	bne	3ab7c <__assert_fail@plt+0x28490>
   3ab68:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3ab6c:	eor	r3, r3, #1
   3ab70:	uxtb	r3, r3
   3ab74:	cmp	r3, #0
   3ab78:	bne	3abbc <__assert_fail@plt+0x284d0>
   3ab7c:	ldr	r3, [fp, #12]
   3ab80:	cmp	r3, #0
   3ab84:	beq	3abbc <__assert_fail@plt+0x284d0>
   3ab88:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3ab8c:	lsr	r3, r3, #5
   3ab90:	uxtb	r3, r3
   3ab94:	lsl	r3, r3, #2
   3ab98:	ldr	r2, [fp, #12]
   3ab9c:	add	r3, r2, r3
   3aba0:	ldr	r2, [r3]
   3aba4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3aba8:	and	r3, r3, #31
   3abac:	lsr	r3, r2, r3
   3abb0:	and	r3, r3, #1
   3abb4:	cmp	r3, #0
   3abb8:	bne	3abd0 <__assert_fail@plt+0x284e4>
   3abbc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   3abc0:	eor	r3, r3, #1
   3abc4:	uxtb	r3, r3
   3abc8:	cmp	r3, #0
   3abcc:	bne	3ace0 <__assert_fail@plt+0x285f4>
   3abd0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3abd4:	cmp	r3, #0
   3abd8:	bne	3afb8 <__assert_fail@plt+0x288cc>
   3abdc:	mov	r3, #1
   3abe0:	strb	r3, [fp, #-41]	; 0xffffffd7
   3abe4:	ldr	r3, [fp, #4]
   3abe8:	cmp	r3, #2
   3abec:	bne	3ac9c <__assert_fail@plt+0x285b0>
   3abf0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3abf4:	eor	r3, r3, #1
   3abf8:	uxtb	r3, r3
   3abfc:	cmp	r3, #0
   3ac00:	beq	3ac9c <__assert_fail@plt+0x285b0>
   3ac04:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ac08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ac0c:	cmp	r2, r3
   3ac10:	bcs	3ac28 <__assert_fail@plt+0x2853c>
   3ac14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ac18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac1c:	add	r3, r2, r3
   3ac20:	mov	r2, #39	; 0x27
   3ac24:	strb	r2, [r3]
   3ac28:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac2c:	add	r3, r3, #1
   3ac30:	str	r3, [fp, #-20]	; 0xffffffec
   3ac34:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ac38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ac3c:	cmp	r2, r3
   3ac40:	bcs	3ac58 <__assert_fail@plt+0x2856c>
   3ac44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ac48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac4c:	add	r3, r2, r3
   3ac50:	mov	r2, #36	; 0x24
   3ac54:	strb	r2, [r3]
   3ac58:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac5c:	add	r3, r3, #1
   3ac60:	str	r3, [fp, #-20]	; 0xffffffec
   3ac64:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ac68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ac6c:	cmp	r2, r3
   3ac70:	bcs	3ac88 <__assert_fail@plt+0x2859c>
   3ac74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ac78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac7c:	add	r3, r2, r3
   3ac80:	mov	r2, #39	; 0x27
   3ac84:	strb	r2, [r3]
   3ac88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac8c:	add	r3, r3, #1
   3ac90:	str	r3, [fp, #-20]	; 0xffffffec
   3ac94:	mov	r3, #1
   3ac98:	strb	r3, [fp, #-35]	; 0xffffffdd
   3ac9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aca0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3aca4:	cmp	r2, r3
   3aca8:	bcs	3acc0 <__assert_fail@plt+0x285d4>
   3acac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3acb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3acb4:	add	r3, r2, r3
   3acb8:	mov	r2, #92	; 0x5c
   3acbc:	strb	r2, [r3]
   3acc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3acc4:	add	r3, r3, #1
   3acc8:	str	r3, [fp, #-20]	; 0xffffffec
   3accc:	b	3ace4 <__assert_fail@plt+0x285f8>
   3acd0:	nop			; (mov r0, r0)
   3acd4:	b	3ace4 <__assert_fail@plt+0x285f8>
   3acd8:	nop			; (mov r0, r0)
   3acdc:	b	3ace4 <__assert_fail@plt+0x285f8>
   3ace0:	nop			; (mov r0, r0)
   3ace4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3ace8:	cmp	r3, #0
   3acec:	beq	3ad6c <__assert_fail@plt+0x28680>
   3acf0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3acf4:	eor	r3, r3, #1
   3acf8:	uxtb	r3, r3
   3acfc:	cmp	r3, #0
   3ad00:	beq	3ad6c <__assert_fail@plt+0x28680>
   3ad04:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ad08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ad0c:	cmp	r2, r3
   3ad10:	bcs	3ad28 <__assert_fail@plt+0x2863c>
   3ad14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ad18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad1c:	add	r3, r2, r3
   3ad20:	mov	r2, #39	; 0x27
   3ad24:	strb	r2, [r3]
   3ad28:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad2c:	add	r3, r3, #1
   3ad30:	str	r3, [fp, #-20]	; 0xffffffec
   3ad34:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ad38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ad3c:	cmp	r2, r3
   3ad40:	bcs	3ad58 <__assert_fail@plt+0x2866c>
   3ad44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ad48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad4c:	add	r3, r2, r3
   3ad50:	mov	r2, #39	; 0x27
   3ad54:	strb	r2, [r3]
   3ad58:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad5c:	add	r3, r3, #1
   3ad60:	str	r3, [fp, #-20]	; 0xffffffec
   3ad64:	mov	r3, #0
   3ad68:	strb	r3, [fp, #-35]	; 0xffffffdd
   3ad6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ad70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ad74:	cmp	r2, r3
   3ad78:	bcs	3ad90 <__assert_fail@plt+0x286a4>
   3ad7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ad80:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad84:	add	r3, r2, r3
   3ad88:	ldrb	r2, [fp, #-38]	; 0xffffffda
   3ad8c:	strb	r2, [r3]
   3ad90:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad94:	add	r3, r3, #1
   3ad98:	str	r3, [fp, #-20]	; 0xffffffec
   3ad9c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3ada0:	eor	r3, r3, #1
   3ada4:	uxtb	r3, r3
   3ada8:	cmp	r3, #0
   3adac:	beq	3adb8 <__assert_fail@plt+0x286cc>
   3adb0:	mov	r3, #0
   3adb4:	strb	r3, [fp, #-37]	; 0xffffffdb
   3adb8:	ldr	r3, [fp, #-16]
   3adbc:	add	r3, r3, #1
   3adc0:	str	r3, [fp, #-16]
   3adc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3adc8:	cmn	r3, #1
   3adcc:	bne	3adf4 <__assert_fail@plt+0x28708>
   3add0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3add4:	ldr	r3, [fp, #-16]
   3add8:	add	r3, r2, r3
   3addc:	ldrb	r3, [r3]
   3ade0:	cmp	r3, #0
   3ade4:	movne	r3, #1
   3ade8:	moveq	r3, #0
   3adec:	uxtb	r3, r3
   3adf0:	b	3ae0c <__assert_fail@plt+0x28720>
   3adf4:	ldr	r2, [fp, #-16]
   3adf8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3adfc:	cmp	r2, r3
   3ae00:	movne	r3, #1
   3ae04:	moveq	r3, #0
   3ae08:	uxtb	r3, r3
   3ae0c:	cmp	r3, #0
   3ae10:	bne	39c38 <__assert_fail@plt+0x2754c>
   3ae14:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae18:	cmp	r3, #0
   3ae1c:	bne	3ae38 <__assert_fail@plt+0x2874c>
   3ae20:	ldr	r3, [fp, #4]
   3ae24:	cmp	r3, #2
   3ae28:	bne	3ae38 <__assert_fail@plt+0x2874c>
   3ae2c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3ae30:	cmp	r3, #0
   3ae34:	bne	3afc0 <__assert_fail@plt+0x288d4>
   3ae38:	ldr	r3, [fp, #4]
   3ae3c:	cmp	r3, #2
   3ae40:	bne	3aee0 <__assert_fail@plt+0x287f4>
   3ae44:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3ae48:	eor	r3, r3, #1
   3ae4c:	uxtb	r3, r3
   3ae50:	cmp	r3, #0
   3ae54:	beq	3aee0 <__assert_fail@plt+0x287f4>
   3ae58:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   3ae5c:	cmp	r3, #0
   3ae60:	beq	3aee0 <__assert_fail@plt+0x287f4>
   3ae64:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   3ae68:	cmp	r3, #0
   3ae6c:	beq	3aeb4 <__assert_fail@plt+0x287c8>
   3ae70:	ldr	r3, [fp, #20]
   3ae74:	str	r3, [sp, #16]
   3ae78:	ldr	r3, [fp, #16]
   3ae7c:	str	r3, [sp, #12]
   3ae80:	ldr	r3, [fp, #12]
   3ae84:	str	r3, [sp, #8]
   3ae88:	ldr	r3, [fp, #8]
   3ae8c:	str	r3, [sp, #4]
   3ae90:	mov	r3, #5
   3ae94:	str	r3, [sp]
   3ae98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3ae9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3aea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3aea4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3aea8:	bl	39988 <__assert_fail@plt+0x2729c>
   3aeac:	mov	r3, r0
   3aeb0:	b	3b028 <__assert_fail@plt+0x2893c>
   3aeb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3aeb8:	cmp	r3, #0
   3aebc:	bne	3aee0 <__assert_fail@plt+0x287f4>
   3aec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3aec4:	cmp	r3, #0
   3aec8:	beq	3aee0 <__assert_fail@plt+0x287f4>
   3aecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3aed0:	str	r3, [fp, #-92]	; 0xffffffa4
   3aed4:	mov	r3, #0
   3aed8:	str	r3, [fp, #-20]	; 0xffffffec
   3aedc:	b	39a14 <__assert_fail@plt+0x27328>
   3aee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aee4:	cmp	r3, #0
   3aee8:	beq	3af54 <__assert_fail@plt+0x28868>
   3aeec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3aef0:	eor	r3, r3, #1
   3aef4:	uxtb	r3, r3
   3aef8:	cmp	r3, #0
   3aefc:	beq	3af54 <__assert_fail@plt+0x28868>
   3af00:	b	3af44 <__assert_fail@plt+0x28858>
   3af04:	ldr	r2, [fp, #-20]	; 0xffffffec
   3af08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3af0c:	cmp	r2, r3
   3af10:	bcs	3af2c <__assert_fail@plt+0x28840>
   3af14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3af18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af1c:	add	r3, r2, r3
   3af20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3af24:	ldrb	r2, [r2]
   3af28:	strb	r2, [r3]
   3af2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af30:	add	r3, r3, #1
   3af34:	str	r3, [fp, #-20]	; 0xffffffec
   3af38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3af3c:	add	r3, r3, #1
   3af40:	str	r3, [fp, #-28]	; 0xffffffe4
   3af44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3af48:	ldrb	r3, [r3]
   3af4c:	cmp	r3, #0
   3af50:	bne	3af04 <__assert_fail@plt+0x28818>
   3af54:	ldr	r2, [fp, #-20]	; 0xffffffec
   3af58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3af5c:	cmp	r2, r3
   3af60:	bcs	3af78 <__assert_fail@plt+0x2888c>
   3af64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3af68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af6c:	add	r3, r2, r3
   3af70:	mov	r2, #0
   3af74:	strb	r2, [r3]
   3af78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af7c:	b	3b028 <__assert_fail@plt+0x2893c>
   3af80:	nop			; (mov r0, r0)
   3af84:	b	3afc4 <__assert_fail@plt+0x288d8>
   3af88:	nop			; (mov r0, r0)
   3af8c:	b	3afc4 <__assert_fail@plt+0x288d8>
   3af90:	nop			; (mov r0, r0)
   3af94:	b	3afc4 <__assert_fail@plt+0x288d8>
   3af98:	nop			; (mov r0, r0)
   3af9c:	b	3afc4 <__assert_fail@plt+0x288d8>
   3afa0:	nop			; (mov r0, r0)
   3afa4:	b	3afc4 <__assert_fail@plt+0x288d8>
   3afa8:	nop			; (mov r0, r0)
   3afac:	b	3afc4 <__assert_fail@plt+0x288d8>
   3afb0:	nop			; (mov r0, r0)
   3afb4:	b	3afc4 <__assert_fail@plt+0x288d8>
   3afb8:	nop			; (mov r0, r0)
   3afbc:	b	3afc4 <__assert_fail@plt+0x288d8>
   3afc0:	nop			; (mov r0, r0)
   3afc4:	ldr	r3, [fp, #4]
   3afc8:	cmp	r3, #2
   3afcc:	bne	3afe4 <__assert_fail@plt+0x288f8>
   3afd0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3afd4:	cmp	r3, #0
   3afd8:	beq	3afe4 <__assert_fail@plt+0x288f8>
   3afdc:	mov	r3, #4
   3afe0:	str	r3, [fp, #4]
   3afe4:	ldr	r3, [fp, #8]
   3afe8:	bic	r3, r3, #2
   3afec:	ldr	r2, [fp, #20]
   3aff0:	str	r2, [sp, #16]
   3aff4:	ldr	r2, [fp, #16]
   3aff8:	str	r2, [sp, #12]
   3affc:	mov	r2, #0
   3b000:	str	r2, [sp, #8]
   3b004:	str	r3, [sp, #4]
   3b008:	ldr	r3, [fp, #4]
   3b00c:	str	r3, [sp]
   3b010:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3b014:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3b018:	ldr	r1, [fp, #-92]	; 0xffffffa4
   3b01c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3b020:	bl	39988 <__assert_fail@plt+0x2729c>
   3b024:	mov	r3, r0
   3b028:	mov	r0, r3
   3b02c:	sub	sp, fp, #8
   3b030:	pop	{r4, fp, pc}
   3b034:	push	{fp, lr}
   3b038:	add	fp, sp, #4
   3b03c:	sub	sp, sp, #56	; 0x38
   3b040:	str	r0, [fp, #-24]	; 0xffffffe8
   3b044:	str	r1, [fp, #-28]	; 0xffffffe4
   3b048:	str	r2, [fp, #-32]	; 0xffffffe0
   3b04c:	str	r3, [fp, #-36]	; 0xffffffdc
   3b050:	ldr	r3, [fp, #4]
   3b054:	cmp	r3, #0
   3b058:	beq	3b064 <__assert_fail@plt+0x28978>
   3b05c:	ldr	r3, [fp, #4]
   3b060:	b	3b068 <__assert_fail@plt+0x2897c>
   3b064:	ldr	r3, [pc, #132]	; 3b0f0 <__assert_fail@plt+0x28a04>
   3b068:	str	r3, [fp, #-8]
   3b06c:	bl	12404 <__errno_location@plt>
   3b070:	mov	r3, r0
   3b074:	ldr	r3, [r3]
   3b078:	str	r3, [fp, #-12]
   3b07c:	ldr	r3, [fp, #-8]
   3b080:	ldr	r3, [r3]
   3b084:	ldr	r2, [fp, #-8]
   3b088:	ldr	r2, [r2, #4]
   3b08c:	ldr	r1, [fp, #-8]
   3b090:	add	r1, r1, #8
   3b094:	ldr	r0, [fp, #-8]
   3b098:	ldr	r0, [r0, #40]	; 0x28
   3b09c:	ldr	ip, [fp, #-8]
   3b0a0:	ldr	ip, [ip, #44]	; 0x2c
   3b0a4:	str	ip, [sp, #16]
   3b0a8:	str	r0, [sp, #12]
   3b0ac:	str	r1, [sp, #8]
   3b0b0:	str	r2, [sp, #4]
   3b0b4:	str	r3, [sp]
   3b0b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b0bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b0c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b0c8:	bl	39988 <__assert_fail@plt+0x2729c>
   3b0cc:	str	r0, [fp, #-16]
   3b0d0:	bl	12404 <__errno_location@plt>
   3b0d4:	mov	r2, r0
   3b0d8:	ldr	r3, [fp, #-12]
   3b0dc:	str	r3, [r2]
   3b0e0:	ldr	r3, [fp, #-16]
   3b0e4:	mov	r0, r3
   3b0e8:	sub	sp, fp, #4
   3b0ec:	pop	{fp, pc}
   3b0f0:	andeq	ip, r7, r8, ror #29
   3b0f4:	push	{fp, lr}
   3b0f8:	add	fp, sp, #4
   3b0fc:	sub	sp, sp, #16
   3b100:	str	r0, [fp, #-8]
   3b104:	str	r1, [fp, #-12]
   3b108:	str	r2, [fp, #-16]
   3b10c:	ldr	r3, [fp, #-16]
   3b110:	mov	r2, #0
   3b114:	ldr	r1, [fp, #-12]
   3b118:	ldr	r0, [fp, #-8]
   3b11c:	bl	3b130 <__assert_fail@plt+0x28a44>
   3b120:	mov	r3, r0
   3b124:	mov	r0, r3
   3b128:	sub	sp, fp, #4
   3b12c:	pop	{fp, pc}
   3b130:	push	{fp, lr}
   3b134:	add	fp, sp, #4
   3b138:	sub	sp, sp, #64	; 0x40
   3b13c:	str	r0, [fp, #-32]	; 0xffffffe0
   3b140:	str	r1, [fp, #-36]	; 0xffffffdc
   3b144:	str	r2, [fp, #-40]	; 0xffffffd8
   3b148:	str	r3, [fp, #-44]	; 0xffffffd4
   3b14c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b150:	cmp	r3, #0
   3b154:	beq	3b160 <__assert_fail@plt+0x28a74>
   3b158:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b15c:	b	3b164 <__assert_fail@plt+0x28a78>
   3b160:	ldr	r3, [pc, #292]	; 3b28c <__assert_fail@plt+0x28ba0>
   3b164:	str	r3, [fp, #-8]
   3b168:	bl	12404 <__errno_location@plt>
   3b16c:	mov	r3, r0
   3b170:	ldr	r3, [r3]
   3b174:	str	r3, [fp, #-12]
   3b178:	ldr	r3, [fp, #-8]
   3b17c:	ldr	r3, [r3, #4]
   3b180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b184:	cmp	r2, #0
   3b188:	moveq	r2, #1
   3b18c:	movne	r2, #0
   3b190:	uxtb	r2, r2
   3b194:	orr	r3, r3, r2
   3b198:	str	r3, [fp, #-16]
   3b19c:	ldr	r3, [fp, #-8]
   3b1a0:	ldr	r3, [r3]
   3b1a4:	ldr	r2, [fp, #-8]
   3b1a8:	add	r2, r2, #8
   3b1ac:	ldr	r1, [fp, #-8]
   3b1b0:	ldr	r1, [r1, #40]	; 0x28
   3b1b4:	ldr	r0, [fp, #-8]
   3b1b8:	ldr	r0, [r0, #44]	; 0x2c
   3b1bc:	str	r0, [sp, #16]
   3b1c0:	str	r1, [sp, #12]
   3b1c4:	str	r2, [sp, #8]
   3b1c8:	ldr	r2, [fp, #-16]
   3b1cc:	str	r2, [sp, #4]
   3b1d0:	str	r3, [sp]
   3b1d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b1d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b1dc:	mov	r1, #0
   3b1e0:	mov	r0, #0
   3b1e4:	bl	39988 <__assert_fail@plt+0x2729c>
   3b1e8:	mov	r3, r0
   3b1ec:	add	r3, r3, #1
   3b1f0:	str	r3, [fp, #-20]	; 0xffffffec
   3b1f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b1f8:	bl	3d1e0 <__assert_fail@plt+0x2aaf4>
   3b1fc:	mov	r3, r0
   3b200:	str	r3, [fp, #-24]	; 0xffffffe8
   3b204:	ldr	r3, [fp, #-8]
   3b208:	ldr	r3, [r3]
   3b20c:	ldr	r2, [fp, #-8]
   3b210:	add	r2, r2, #8
   3b214:	ldr	r1, [fp, #-8]
   3b218:	ldr	r1, [r1, #40]	; 0x28
   3b21c:	ldr	r0, [fp, #-8]
   3b220:	ldr	r0, [r0, #44]	; 0x2c
   3b224:	str	r0, [sp, #16]
   3b228:	str	r1, [sp, #12]
   3b22c:	str	r2, [sp, #8]
   3b230:	ldr	r2, [fp, #-16]
   3b234:	str	r2, [sp, #4]
   3b238:	str	r3, [sp]
   3b23c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b240:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b244:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b24c:	bl	39988 <__assert_fail@plt+0x2729c>
   3b250:	bl	12404 <__errno_location@plt>
   3b254:	mov	r2, r0
   3b258:	ldr	r3, [fp, #-12]
   3b25c:	str	r3, [r2]
   3b260:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3b264:	cmp	r3, #0
   3b268:	beq	3b27c <__assert_fail@plt+0x28b90>
   3b26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b270:	sub	r2, r3, #1
   3b274:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3b278:	str	r2, [r3]
   3b27c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b280:	mov	r0, r3
   3b284:	sub	sp, fp, #4
   3b288:	pop	{fp, pc}
   3b28c:	andeq	ip, r7, r8, ror #29
   3b290:	push	{fp, lr}
   3b294:	add	fp, sp, #4
   3b298:	sub	sp, sp, #8
   3b29c:	ldr	r3, [pc, #196]	; 3b368 <__assert_fail@plt+0x28c7c>
   3b2a0:	ldr	r3, [r3]
   3b2a4:	str	r3, [fp, #-12]
   3b2a8:	mov	r3, #1
   3b2ac:	str	r3, [fp, #-8]
   3b2b0:	b	3b2dc <__assert_fail@plt+0x28bf0>
   3b2b4:	ldr	r3, [fp, #-8]
   3b2b8:	lsl	r3, r3, #3
   3b2bc:	ldr	r2, [fp, #-12]
   3b2c0:	add	r3, r2, r3
   3b2c4:	ldr	r3, [r3, #4]
   3b2c8:	mov	r0, r3
   3b2cc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3b2d0:	ldr	r3, [fp, #-8]
   3b2d4:	add	r3, r3, #1
   3b2d8:	str	r3, [fp, #-8]
   3b2dc:	ldr	r3, [pc, #136]	; 3b36c <__assert_fail@plt+0x28c80>
   3b2e0:	ldr	r3, [r3]
   3b2e4:	ldr	r2, [fp, #-8]
   3b2e8:	cmp	r2, r3
   3b2ec:	blt	3b2b4 <__assert_fail@plt+0x28bc8>
   3b2f0:	ldr	r3, [fp, #-12]
   3b2f4:	ldr	r3, [r3, #4]
   3b2f8:	ldr	r2, [pc, #112]	; 3b370 <__assert_fail@plt+0x28c84>
   3b2fc:	cmp	r3, r2
   3b300:	beq	3b32c <__assert_fail@plt+0x28c40>
   3b304:	ldr	r3, [fp, #-12]
   3b308:	ldr	r3, [r3, #4]
   3b30c:	mov	r0, r3
   3b310:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3b314:	ldr	r3, [pc, #88]	; 3b374 <__assert_fail@plt+0x28c88>
   3b318:	mov	r2, #256	; 0x100
   3b31c:	str	r2, [r3]
   3b320:	ldr	r3, [pc, #76]	; 3b374 <__assert_fail@plt+0x28c88>
   3b324:	ldr	r2, [pc, #68]	; 3b370 <__assert_fail@plt+0x28c84>
   3b328:	str	r2, [r3, #4]
   3b32c:	ldr	r3, [fp, #-12]
   3b330:	ldr	r2, [pc, #60]	; 3b374 <__assert_fail@plt+0x28c88>
   3b334:	cmp	r3, r2
   3b338:	beq	3b350 <__assert_fail@plt+0x28c64>
   3b33c:	ldr	r0, [fp, #-12]
   3b340:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3b344:	ldr	r3, [pc, #28]	; 3b368 <__assert_fail@plt+0x28c7c>
   3b348:	ldr	r2, [pc, #36]	; 3b374 <__assert_fail@plt+0x28c88>
   3b34c:	str	r2, [r3]
   3b350:	ldr	r3, [pc, #20]	; 3b36c <__assert_fail@plt+0x28c80>
   3b354:	mov	r2, #1
   3b358:	str	r2, [r3]
   3b35c:	nop			; (mov r0, r0)
   3b360:	sub	sp, fp, #4
   3b364:	pop	{fp, pc}
   3b368:	ldrdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   3b36c:	ldrdeq	ip, [r7], -r0
   3b370:	andeq	ip, r7, r8, lsl pc
   3b374:	ldrdeq	ip, [r7], -r4
   3b378:	push	{r4, fp, lr}
   3b37c:	add	fp, sp, #8
   3b380:	sub	sp, sp, #84	; 0x54
   3b384:	str	r0, [fp, #-56]	; 0xffffffc8
   3b388:	str	r1, [fp, #-60]	; 0xffffffc4
   3b38c:	str	r2, [fp, #-64]	; 0xffffffc0
   3b390:	str	r3, [fp, #-68]	; 0xffffffbc
   3b394:	bl	12404 <__errno_location@plt>
   3b398:	mov	r3, r0
   3b39c:	ldr	r3, [r3]
   3b3a0:	str	r3, [fp, #-24]	; 0xffffffe8
   3b3a4:	ldr	r3, [pc, #640]	; 3b62c <__assert_fail@plt+0x28f40>
   3b3a8:	ldr	r3, [r3]
   3b3ac:	str	r3, [fp, #-16]
   3b3b0:	mvn	r3, #-2147483648	; 0x80000000
   3b3b4:	str	r3, [fp, #-28]	; 0xffffffe4
   3b3b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b3bc:	cmp	r3, #0
   3b3c0:	blt	3b3d4 <__assert_fail@plt+0x28ce8>
   3b3c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3b3c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b3cc:	cmp	r2, r3
   3b3d0:	blt	3b3d8 <__assert_fail@plt+0x28cec>
   3b3d4:	bl	12698 <abort@plt>
   3b3d8:	ldr	r3, [pc, #592]	; 3b630 <__assert_fail@plt+0x28f44>
   3b3dc:	ldr	r2, [r3]
   3b3e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b3e4:	cmp	r2, r3
   3b3e8:	bgt	3b4bc <__assert_fail@plt+0x28dd0>
   3b3ec:	ldr	r3, [fp, #-16]
   3b3f0:	ldr	r2, [pc, #572]	; 3b634 <__assert_fail@plt+0x28f48>
   3b3f4:	cmp	r3, r2
   3b3f8:	moveq	r3, #1
   3b3fc:	movne	r3, #0
   3b400:	strb	r3, [fp, #-29]	; 0xffffffe3
   3b404:	ldr	r3, [pc, #548]	; 3b630 <__assert_fail@plt+0x28f44>
   3b408:	ldr	r3, [r3]
   3b40c:	str	r3, [fp, #-48]	; 0xffffffd0
   3b410:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   3b414:	cmp	r3, #0
   3b418:	beq	3b424 <__assert_fail@plt+0x28d38>
   3b41c:	mov	r0, #0
   3b420:	b	3b428 <__assert_fail@plt+0x28d3c>
   3b424:	ldr	r0, [fp, #-16]
   3b428:	ldr	r3, [pc, #512]	; 3b630 <__assert_fail@plt+0x28f44>
   3b42c:	ldr	r3, [r3]
   3b430:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3b434:	sub	r3, r2, r3
   3b438:	add	r2, r3, #1
   3b43c:	sub	r1, fp, #48	; 0x30
   3b440:	mov	r3, #8
   3b444:	str	r3, [sp]
   3b448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b44c:	bl	3d500 <__assert_fail@plt+0x2ae14>
   3b450:	str	r0, [fp, #-16]
   3b454:	ldr	r2, [pc, #464]	; 3b62c <__assert_fail@plt+0x28f40>
   3b458:	ldr	r3, [fp, #-16]
   3b45c:	str	r3, [r2]
   3b460:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   3b464:	cmp	r3, #0
   3b468:	beq	3b47c <__assert_fail@plt+0x28d90>
   3b46c:	ldr	r3, [fp, #-16]
   3b470:	ldr	r2, [pc, #444]	; 3b634 <__assert_fail@plt+0x28f48>
   3b474:	ldm	r2, {r0, r1}
   3b478:	stm	r3, {r0, r1}
   3b47c:	ldr	r3, [pc, #428]	; 3b630 <__assert_fail@plt+0x28f44>
   3b480:	ldr	r3, [r3]
   3b484:	lsl	r3, r3, #3
   3b488:	ldr	r2, [fp, #-16]
   3b48c:	add	r0, r2, r3
   3b490:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3b494:	ldr	r3, [pc, #404]	; 3b630 <__assert_fail@plt+0x28f44>
   3b498:	ldr	r3, [r3]
   3b49c:	sub	r3, r2, r3
   3b4a0:	lsl	r3, r3, #3
   3b4a4:	mov	r2, r3
   3b4a8:	mov	r1, #0
   3b4ac:	bl	12434 <memset@plt>
   3b4b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b4b4:	ldr	r2, [pc, #372]	; 3b630 <__assert_fail@plt+0x28f44>
   3b4b8:	str	r3, [r2]
   3b4bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b4c0:	lsl	r3, r3, #3
   3b4c4:	ldr	r2, [fp, #-16]
   3b4c8:	add	r3, r2, r3
   3b4cc:	ldr	r3, [r3]
   3b4d0:	str	r3, [fp, #-36]	; 0xffffffdc
   3b4d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b4d8:	lsl	r3, r3, #3
   3b4dc:	ldr	r2, [fp, #-16]
   3b4e0:	add	r3, r2, r3
   3b4e4:	ldr	r3, [r3, #4]
   3b4e8:	str	r3, [fp, #-20]	; 0xffffffec
   3b4ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3b4f0:	ldr	r3, [r3, #4]
   3b4f4:	orr	r3, r3, #1
   3b4f8:	str	r3, [fp, #-40]	; 0xffffffd8
   3b4fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3b500:	ldr	r3, [r3]
   3b504:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3b508:	add	r2, r2, #8
   3b50c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3b510:	ldr	r1, [r1, #40]	; 0x28
   3b514:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3b518:	ldr	r0, [r0, #44]	; 0x2c
   3b51c:	str	r0, [sp, #16]
   3b520:	str	r1, [sp, #12]
   3b524:	str	r2, [sp, #8]
   3b528:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b52c:	str	r2, [sp, #4]
   3b530:	str	r3, [sp]
   3b534:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3b538:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3b53c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3b540:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b544:	bl	39988 <__assert_fail@plt+0x2729c>
   3b548:	str	r0, [fp, #-44]	; 0xffffffd4
   3b54c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3b550:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b554:	cmp	r2, r3
   3b558:	bhi	3b60c <__assert_fail@plt+0x28f20>
   3b55c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b560:	lsl	r3, r3, #3
   3b564:	ldr	r2, [fp, #-16]
   3b568:	add	r3, r2, r3
   3b56c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3b570:	add	r2, r2, #1
   3b574:	str	r2, [fp, #-36]	; 0xffffffdc
   3b578:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3b57c:	str	r2, [r3]
   3b580:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b584:	ldr	r2, [pc, #172]	; 3b638 <__assert_fail@plt+0x28f4c>
   3b588:	cmp	r3, r2
   3b58c:	beq	3b598 <__assert_fail@plt+0x28eac>
   3b590:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b594:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3b598:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b59c:	lsl	r3, r3, #3
   3b5a0:	ldr	r2, [fp, #-16]
   3b5a4:	add	r4, r2, r3
   3b5a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b5ac:	bl	3d1e0 <__assert_fail@plt+0x2aaf4>
   3b5b0:	mov	r3, r0
   3b5b4:	str	r3, [fp, #-20]	; 0xffffffec
   3b5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b5bc:	str	r3, [r4, #4]
   3b5c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3b5c4:	ldr	r3, [r3]
   3b5c8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3b5cc:	add	r2, r2, #8
   3b5d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3b5d4:	ldr	r1, [r1, #40]	; 0x28
   3b5d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3b5dc:	ldr	r0, [r0, #44]	; 0x2c
   3b5e0:	str	r0, [sp, #16]
   3b5e4:	str	r1, [sp, #12]
   3b5e8:	str	r2, [sp, #8]
   3b5ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b5f0:	str	r2, [sp, #4]
   3b5f4:	str	r3, [sp]
   3b5f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3b5fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3b600:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3b604:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b608:	bl	39988 <__assert_fail@plt+0x2729c>
   3b60c:	bl	12404 <__errno_location@plt>
   3b610:	mov	r2, r0
   3b614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b618:	str	r3, [r2]
   3b61c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b620:	mov	r0, r3
   3b624:	sub	sp, fp, #8
   3b628:	pop	{r4, fp, pc}
   3b62c:	ldrdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   3b630:	ldrdeq	ip, [r7], -r0
   3b634:	ldrdeq	ip, [r7], -r4
   3b638:	andeq	ip, r7, r8, lsl pc
   3b63c:	push	{fp, lr}
   3b640:	add	fp, sp, #4
   3b644:	sub	sp, sp, #8
   3b648:	str	r0, [fp, #-8]
   3b64c:	str	r1, [fp, #-12]
   3b650:	ldr	r3, [pc, #28]	; 3b674 <__assert_fail@plt+0x28f88>
   3b654:	mvn	r2, #0
   3b658:	ldr	r1, [fp, #-12]
   3b65c:	ldr	r0, [fp, #-8]
   3b660:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3b664:	mov	r3, r0
   3b668:	mov	r0, r3
   3b66c:	sub	sp, fp, #4
   3b670:	pop	{fp, pc}
   3b674:	andeq	ip, r7, r8, ror #29
   3b678:	push	{fp, lr}
   3b67c:	add	fp, sp, #4
   3b680:	sub	sp, sp, #16
   3b684:	str	r0, [fp, #-8]
   3b688:	str	r1, [fp, #-12]
   3b68c:	str	r2, [fp, #-16]
   3b690:	ldr	r3, [pc, #28]	; 3b6b4 <__assert_fail@plt+0x28fc8>
   3b694:	ldr	r2, [fp, #-16]
   3b698:	ldr	r1, [fp, #-12]
   3b69c:	ldr	r0, [fp, #-8]
   3b6a0:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3b6a4:	mov	r3, r0
   3b6a8:	mov	r0, r3
   3b6ac:	sub	sp, fp, #4
   3b6b0:	pop	{fp, pc}
   3b6b4:	andeq	ip, r7, r8, ror #29
   3b6b8:	push	{fp, lr}
   3b6bc:	add	fp, sp, #4
   3b6c0:	sub	sp, sp, #8
   3b6c4:	str	r0, [fp, #-8]
   3b6c8:	ldr	r1, [fp, #-8]
   3b6cc:	mov	r0, #0
   3b6d0:	bl	3b63c <__assert_fail@plt+0x28f50>
   3b6d4:	mov	r3, r0
   3b6d8:	mov	r0, r3
   3b6dc:	sub	sp, fp, #4
   3b6e0:	pop	{fp, pc}
   3b6e4:	push	{fp, lr}
   3b6e8:	add	fp, sp, #4
   3b6ec:	sub	sp, sp, #8
   3b6f0:	str	r0, [fp, #-8]
   3b6f4:	str	r1, [fp, #-12]
   3b6f8:	ldr	r2, [fp, #-12]
   3b6fc:	ldr	r1, [fp, #-8]
   3b700:	mov	r0, #0
   3b704:	bl	3b678 <__assert_fail@plt+0x28f8c>
   3b708:	mov	r3, r0
   3b70c:	mov	r0, r3
   3b710:	sub	sp, fp, #4
   3b714:	pop	{fp, pc}
   3b718:	push	{fp, lr}
   3b71c:	add	fp, sp, #4
   3b720:	sub	sp, sp, #64	; 0x40
   3b724:	str	r0, [fp, #-56]	; 0xffffffc8
   3b728:	str	r1, [fp, #-60]	; 0xffffffc4
   3b72c:	str	r2, [fp, #-64]	; 0xffffffc0
   3b730:	sub	r3, fp, #52	; 0x34
   3b734:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b738:	mov	r0, r3
   3b73c:	bl	39824 <__assert_fail@plt+0x27138>
   3b740:	sub	r3, fp, #52	; 0x34
   3b744:	mvn	r2, #0
   3b748:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3b74c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b750:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3b754:	mov	r3, r0
   3b758:	mov	r0, r3
   3b75c:	sub	sp, fp, #4
   3b760:	pop	{fp, pc}
   3b764:	push	{fp, lr}
   3b768:	add	fp, sp, #4
   3b76c:	sub	sp, sp, #64	; 0x40
   3b770:	str	r0, [fp, #-56]	; 0xffffffc8
   3b774:	str	r1, [fp, #-60]	; 0xffffffc4
   3b778:	str	r2, [fp, #-64]	; 0xffffffc0
   3b77c:	str	r3, [fp, #-68]	; 0xffffffbc
   3b780:	sub	r3, fp, #52	; 0x34
   3b784:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b788:	mov	r0, r3
   3b78c:	bl	39824 <__assert_fail@plt+0x27138>
   3b790:	sub	r3, fp, #52	; 0x34
   3b794:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3b798:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3b79c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b7a0:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3b7a4:	mov	r3, r0
   3b7a8:	mov	r0, r3
   3b7ac:	sub	sp, fp, #4
   3b7b0:	pop	{fp, pc}
   3b7b4:	push	{fp, lr}
   3b7b8:	add	fp, sp, #4
   3b7bc:	sub	sp, sp, #8
   3b7c0:	str	r0, [fp, #-8]
   3b7c4:	str	r1, [fp, #-12]
   3b7c8:	ldr	r2, [fp, #-12]
   3b7cc:	ldr	r1, [fp, #-8]
   3b7d0:	mov	r0, #0
   3b7d4:	bl	3b718 <__assert_fail@plt+0x2902c>
   3b7d8:	mov	r3, r0
   3b7dc:	mov	r0, r3
   3b7e0:	sub	sp, fp, #4
   3b7e4:	pop	{fp, pc}
   3b7e8:	push	{fp, lr}
   3b7ec:	add	fp, sp, #4
   3b7f0:	sub	sp, sp, #16
   3b7f4:	str	r0, [fp, #-8]
   3b7f8:	str	r1, [fp, #-12]
   3b7fc:	str	r2, [fp, #-16]
   3b800:	ldr	r3, [fp, #-16]
   3b804:	ldr	r2, [fp, #-12]
   3b808:	ldr	r1, [fp, #-8]
   3b80c:	mov	r0, #0
   3b810:	bl	3b764 <__assert_fail@plt+0x29078>
   3b814:	mov	r3, r0
   3b818:	mov	r0, r3
   3b81c:	sub	sp, fp, #4
   3b820:	pop	{fp, pc}
   3b824:	push	{fp, lr}
   3b828:	add	fp, sp, #4
   3b82c:	sub	sp, sp, #64	; 0x40
   3b830:	str	r0, [fp, #-56]	; 0xffffffc8
   3b834:	str	r1, [fp, #-60]	; 0xffffffc4
   3b838:	mov	r3, r2
   3b83c:	strb	r3, [fp, #-61]	; 0xffffffc3
   3b840:	ldr	r3, [pc, #84]	; 3b89c <__assert_fail@plt+0x291b0>
   3b844:	sub	ip, fp, #52	; 0x34
   3b848:	mov	lr, r3
   3b84c:	ldm	lr!, {r0, r1, r2, r3}
   3b850:	stmia	ip!, {r0, r1, r2, r3}
   3b854:	ldm	lr!, {r0, r1, r2, r3}
   3b858:	stmia	ip!, {r0, r1, r2, r3}
   3b85c:	ldm	lr, {r0, r1, r2, r3}
   3b860:	stm	ip, {r0, r1, r2, r3}
   3b864:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   3b868:	sub	r3, fp, #52	; 0x34
   3b86c:	mov	r2, #1
   3b870:	mov	r0, r3
   3b874:	bl	39690 <__assert_fail@plt+0x26fa4>
   3b878:	sub	r3, fp, #52	; 0x34
   3b87c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3b880:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3b884:	mov	r0, #0
   3b888:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3b88c:	mov	r3, r0
   3b890:	mov	r0, r3
   3b894:	sub	sp, fp, #4
   3b898:	pop	{fp, pc}
   3b89c:	andeq	ip, r7, r8, ror #29
   3b8a0:	push	{fp, lr}
   3b8a4:	add	fp, sp, #4
   3b8a8:	sub	sp, sp, #8
   3b8ac:	str	r0, [fp, #-8]
   3b8b0:	mov	r3, r1
   3b8b4:	strb	r3, [fp, #-9]
   3b8b8:	ldrb	r3, [fp, #-9]
   3b8bc:	mov	r2, r3
   3b8c0:	mvn	r1, #0
   3b8c4:	ldr	r0, [fp, #-8]
   3b8c8:	bl	3b824 <__assert_fail@plt+0x29138>
   3b8cc:	mov	r3, r0
   3b8d0:	mov	r0, r3
   3b8d4:	sub	sp, fp, #4
   3b8d8:	pop	{fp, pc}
   3b8dc:	push	{fp, lr}
   3b8e0:	add	fp, sp, #4
   3b8e4:	sub	sp, sp, #8
   3b8e8:	str	r0, [fp, #-8]
   3b8ec:	mov	r1, #58	; 0x3a
   3b8f0:	ldr	r0, [fp, #-8]
   3b8f4:	bl	3b8a0 <__assert_fail@plt+0x291b4>
   3b8f8:	mov	r3, r0
   3b8fc:	mov	r0, r3
   3b900:	sub	sp, fp, #4
   3b904:	pop	{fp, pc}
   3b908:	push	{fp, lr}
   3b90c:	add	fp, sp, #4
   3b910:	sub	sp, sp, #8
   3b914:	str	r0, [fp, #-8]
   3b918:	str	r1, [fp, #-12]
   3b91c:	mov	r2, #58	; 0x3a
   3b920:	ldr	r1, [fp, #-12]
   3b924:	ldr	r0, [fp, #-8]
   3b928:	bl	3b824 <__assert_fail@plt+0x29138>
   3b92c:	mov	r3, r0
   3b930:	mov	r0, r3
   3b934:	sub	sp, fp, #4
   3b938:	pop	{fp, pc}
   3b93c:	push	{fp, lr}
   3b940:	add	fp, sp, #4
   3b944:	sub	sp, sp, #112	; 0x70
   3b948:	str	r0, [fp, #-56]	; 0xffffffc8
   3b94c:	str	r1, [fp, #-60]	; 0xffffffc4
   3b950:	str	r2, [fp, #-64]	; 0xffffffc0
   3b954:	sub	r3, fp, #116	; 0x74
   3b958:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b95c:	mov	r0, r3
   3b960:	bl	39824 <__assert_fail@plt+0x27138>
   3b964:	sub	ip, fp, #52	; 0x34
   3b968:	sub	lr, fp, #116	; 0x74
   3b96c:	ldm	lr!, {r0, r1, r2, r3}
   3b970:	stmia	ip!, {r0, r1, r2, r3}
   3b974:	ldm	lr!, {r0, r1, r2, r3}
   3b978:	stmia	ip!, {r0, r1, r2, r3}
   3b97c:	ldm	lr, {r0, r1, r2, r3}
   3b980:	stm	ip, {r0, r1, r2, r3}
   3b984:	sub	r3, fp, #52	; 0x34
   3b988:	mov	r2, #1
   3b98c:	mov	r1, #58	; 0x3a
   3b990:	mov	r0, r3
   3b994:	bl	39690 <__assert_fail@plt+0x26fa4>
   3b998:	sub	r3, fp, #52	; 0x34
   3b99c:	mvn	r2, #0
   3b9a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3b9a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b9a8:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3b9ac:	mov	r3, r0
   3b9b0:	mov	r0, r3
   3b9b4:	sub	sp, fp, #4
   3b9b8:	pop	{fp, pc}
   3b9bc:	push	{fp, lr}
   3b9c0:	add	fp, sp, #4
   3b9c4:	sub	sp, sp, #24
   3b9c8:	str	r0, [fp, #-8]
   3b9cc:	str	r1, [fp, #-12]
   3b9d0:	str	r2, [fp, #-16]
   3b9d4:	str	r3, [fp, #-20]	; 0xffffffec
   3b9d8:	mvn	r3, #0
   3b9dc:	str	r3, [sp]
   3b9e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b9e4:	ldr	r2, [fp, #-16]
   3b9e8:	ldr	r1, [fp, #-12]
   3b9ec:	ldr	r0, [fp, #-8]
   3b9f0:	bl	3ba04 <__assert_fail@plt+0x29318>
   3b9f4:	mov	r3, r0
   3b9f8:	mov	r0, r3
   3b9fc:	sub	sp, fp, #4
   3ba00:	pop	{fp, pc}
   3ba04:	push	{fp, lr}
   3ba08:	add	fp, sp, #4
   3ba0c:	sub	sp, sp, #64	; 0x40
   3ba10:	str	r0, [fp, #-56]	; 0xffffffc8
   3ba14:	str	r1, [fp, #-60]	; 0xffffffc4
   3ba18:	str	r2, [fp, #-64]	; 0xffffffc0
   3ba1c:	str	r3, [fp, #-68]	; 0xffffffbc
   3ba20:	ldr	r3, [pc, #84]	; 3ba7c <__assert_fail@plt+0x29390>
   3ba24:	sub	ip, fp, #52	; 0x34
   3ba28:	mov	lr, r3
   3ba2c:	ldm	lr!, {r0, r1, r2, r3}
   3ba30:	stmia	ip!, {r0, r1, r2, r3}
   3ba34:	ldm	lr!, {r0, r1, r2, r3}
   3ba38:	stmia	ip!, {r0, r1, r2, r3}
   3ba3c:	ldm	lr, {r0, r1, r2, r3}
   3ba40:	stm	ip, {r0, r1, r2, r3}
   3ba44:	sub	r3, fp, #52	; 0x34
   3ba48:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3ba4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3ba50:	mov	r0, r3
   3ba54:	bl	397a8 <__assert_fail@plt+0x270bc>
   3ba58:	sub	r3, fp, #52	; 0x34
   3ba5c:	ldr	r2, [fp, #4]
   3ba60:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3ba64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3ba68:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3ba6c:	mov	r3, r0
   3ba70:	mov	r0, r3
   3ba74:	sub	sp, fp, #4
   3ba78:	pop	{fp, pc}
   3ba7c:	andeq	ip, r7, r8, ror #29
   3ba80:	push	{fp, lr}
   3ba84:	add	fp, sp, #4
   3ba88:	sub	sp, sp, #16
   3ba8c:	str	r0, [fp, #-8]
   3ba90:	str	r1, [fp, #-12]
   3ba94:	str	r2, [fp, #-16]
   3ba98:	ldr	r3, [fp, #-16]
   3ba9c:	ldr	r2, [fp, #-12]
   3baa0:	ldr	r1, [fp, #-8]
   3baa4:	mov	r0, #0
   3baa8:	bl	3b9bc <__assert_fail@plt+0x292d0>
   3baac:	mov	r3, r0
   3bab0:	mov	r0, r3
   3bab4:	sub	sp, fp, #4
   3bab8:	pop	{fp, pc}
   3babc:	push	{fp, lr}
   3bac0:	add	fp, sp, #4
   3bac4:	sub	sp, sp, #24
   3bac8:	str	r0, [fp, #-8]
   3bacc:	str	r1, [fp, #-12]
   3bad0:	str	r2, [fp, #-16]
   3bad4:	str	r3, [fp, #-20]	; 0xffffffec
   3bad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3badc:	str	r3, [sp]
   3bae0:	ldr	r3, [fp, #-16]
   3bae4:	ldr	r2, [fp, #-12]
   3bae8:	ldr	r1, [fp, #-8]
   3baec:	mov	r0, #0
   3baf0:	bl	3ba04 <__assert_fail@plt+0x29318>
   3baf4:	mov	r3, r0
   3baf8:	mov	r0, r3
   3bafc:	sub	sp, fp, #4
   3bb00:	pop	{fp, pc}
   3bb04:	push	{fp, lr}
   3bb08:	add	fp, sp, #4
   3bb0c:	sub	sp, sp, #16
   3bb10:	str	r0, [fp, #-8]
   3bb14:	str	r1, [fp, #-12]
   3bb18:	str	r2, [fp, #-16]
   3bb1c:	ldr	r3, [pc, #28]	; 3bb40 <__assert_fail@plt+0x29454>
   3bb20:	ldr	r2, [fp, #-16]
   3bb24:	ldr	r1, [fp, #-12]
   3bb28:	ldr	r0, [fp, #-8]
   3bb2c:	bl	3b378 <__assert_fail@plt+0x28c8c>
   3bb30:	mov	r3, r0
   3bb34:	mov	r0, r3
   3bb38:	sub	sp, fp, #4
   3bb3c:	pop	{fp, pc}
   3bb40:	andeq	ip, r7, r0, ror #13
   3bb44:	push	{fp, lr}
   3bb48:	add	fp, sp, #4
   3bb4c:	sub	sp, sp, #8
   3bb50:	str	r0, [fp, #-8]
   3bb54:	str	r1, [fp, #-12]
   3bb58:	ldr	r2, [fp, #-12]
   3bb5c:	ldr	r1, [fp, #-8]
   3bb60:	mov	r0, #0
   3bb64:	bl	3bb04 <__assert_fail@plt+0x29418>
   3bb68:	mov	r3, r0
   3bb6c:	mov	r0, r3
   3bb70:	sub	sp, fp, #4
   3bb74:	pop	{fp, pc}
   3bb78:	push	{fp, lr}
   3bb7c:	add	fp, sp, #4
   3bb80:	sub	sp, sp, #8
   3bb84:	str	r0, [fp, #-8]
   3bb88:	str	r1, [fp, #-12]
   3bb8c:	mvn	r2, #0
   3bb90:	ldr	r1, [fp, #-12]
   3bb94:	ldr	r0, [fp, #-8]
   3bb98:	bl	3bb04 <__assert_fail@plt+0x29418>
   3bb9c:	mov	r3, r0
   3bba0:	mov	r0, r3
   3bba4:	sub	sp, fp, #4
   3bba8:	pop	{fp, pc}
   3bbac:	push	{fp, lr}
   3bbb0:	add	fp, sp, #4
   3bbb4:	sub	sp, sp, #8
   3bbb8:	str	r0, [fp, #-8]
   3bbbc:	ldr	r1, [fp, #-8]
   3bbc0:	mov	r0, #0
   3bbc4:	bl	3bb78 <__assert_fail@plt+0x2948c>
   3bbc8:	mov	r3, r0
   3bbcc:	mov	r0, r3
   3bbd0:	sub	sp, fp, #4
   3bbd4:	pop	{fp, pc}
   3bbd8:	push	{fp, lr}
   3bbdc:	add	fp, sp, #4
   3bbe0:	sub	sp, sp, #8
   3bbe4:	str	r0, [fp, #-8]
   3bbe8:	ldr	r3, [fp, #-8]
   3bbec:	mov	r2, #0
   3bbf0:	str	r2, [r3, #4]
   3bbf4:	mov	r1, #524288	; 0x80000
   3bbf8:	ldr	r0, [pc, #100]	; 3bc64 <__assert_fail@plt+0x29578>
   3bbfc:	bl	2a698 <__assert_fail@plt+0x17fac>
   3bc00:	mov	r2, r0
   3bc04:	ldr	r3, [fp, #-8]
   3bc08:	str	r2, [r3]
   3bc0c:	ldr	r3, [fp, #-8]
   3bc10:	ldr	r3, [r3]
   3bc14:	cmp	r3, #0
   3bc18:	bge	3bc54 <__assert_fail@plt+0x29568>
   3bc1c:	mov	r1, #0
   3bc20:	mov	r0, #0
   3bc24:	bl	12374 <getcwd@plt>
   3bc28:	mov	r2, r0
   3bc2c:	ldr	r3, [fp, #-8]
   3bc30:	str	r2, [r3, #4]
   3bc34:	ldr	r3, [fp, #-8]
   3bc38:	ldr	r3, [r3, #4]
   3bc3c:	cmp	r3, #0
   3bc40:	beq	3bc4c <__assert_fail@plt+0x29560>
   3bc44:	mov	r3, #0
   3bc48:	b	3bc58 <__assert_fail@plt+0x2956c>
   3bc4c:	mvn	r3, #0
   3bc50:	b	3bc58 <__assert_fail@plt+0x2956c>
   3bc54:	mov	r3, #0
   3bc58:	mov	r0, r3
   3bc5c:	sub	sp, fp, #4
   3bc60:	pop	{fp, pc}
   3bc64:	andeq	sl, r6, r0, asr #14
   3bc68:	push	{fp, lr}
   3bc6c:	add	fp, sp, #4
   3bc70:	sub	sp, sp, #8
   3bc74:	str	r0, [fp, #-8]
   3bc78:	ldr	r3, [fp, #-8]
   3bc7c:	ldr	r3, [r3]
   3bc80:	cmp	r3, #0
   3bc84:	blt	3bca0 <__assert_fail@plt+0x295b4>
   3bc88:	ldr	r3, [fp, #-8]
   3bc8c:	ldr	r3, [r3]
   3bc90:	mov	r0, r3
   3bc94:	bl	125d8 <fchdir@plt>
   3bc98:	mov	r3, r0
   3bc9c:	b	3bcb4 <__assert_fail@plt+0x295c8>
   3bca0:	ldr	r3, [fp, #-8]
   3bca4:	ldr	r3, [r3, #4]
   3bca8:	mov	r0, r3
   3bcac:	bl	3ef24 <__assert_fail@plt+0x2c838>
   3bcb0:	mov	r3, r0
   3bcb4:	mov	r0, r3
   3bcb8:	sub	sp, fp, #4
   3bcbc:	pop	{fp, pc}
   3bcc0:	push	{fp, lr}
   3bcc4:	add	fp, sp, #4
   3bcc8:	sub	sp, sp, #8
   3bccc:	str	r0, [fp, #-8]
   3bcd0:	ldr	r3, [fp, #-8]
   3bcd4:	ldr	r3, [r3]
   3bcd8:	cmp	r3, #0
   3bcdc:	blt	3bcf0 <__assert_fail@plt+0x29604>
   3bce0:	ldr	r3, [fp, #-8]
   3bce4:	ldr	r3, [r3]
   3bce8:	mov	r0, r3
   3bcec:	bl	126a4 <close@plt>
   3bcf0:	ldr	r3, [fp, #-8]
   3bcf4:	ldr	r3, [r3, #4]
   3bcf8:	mov	r0, r3
   3bcfc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3bd00:	nop			; (mov r0, r0)
   3bd04:	sub	sp, fp, #4
   3bd08:	pop	{fp, pc}
   3bd0c:	push	{fp, lr}
   3bd10:	add	fp, sp, #4
   3bd14:	sub	sp, sp, #4080	; 0xff0
   3bd18:	str	r0, [fp, #-4072]	; 0xfffff018
   3bd1c:	str	r1, [fp, #-4076]	; 0xfffff014
   3bd20:	str	r2, [fp, #-4080]	; 0xfffff010
   3bd24:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3bd28:	cmn	r3, #100	; 0x64
   3bd2c:	beq	3bd40 <__assert_fail@plt+0x29654>
   3bd30:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3bd34:	ldrb	r3, [r3]
   3bd38:	cmp	r3, #47	; 0x2f
   3bd3c:	bne	3bd54 <__assert_fail@plt+0x29668>
   3bd40:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3bd44:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3bd48:	bl	42ae8 <__assert_fail@plt+0x303fc>
   3bd4c:	mov	r3, r0
   3bd50:	b	3bf74 <__assert_fail@plt+0x29888>
   3bd54:	sub	r3, fp, #4048	; 0xfd0
   3bd58:	sub	r3, r3, #4
   3bd5c:	sub	r3, r3, #12
   3bd60:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3bd64:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3bd68:	mov	r0, r3
   3bd6c:	bl	5eb88 <__assert_fail@plt+0x4c49c>
   3bd70:	str	r0, [fp, #-8]
   3bd74:	ldr	r3, [fp, #-8]
   3bd78:	cmp	r3, #0
   3bd7c:	beq	3be34 <__assert_fail@plt+0x29748>
   3bd80:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3bd84:	ldr	r0, [fp, #-8]
   3bd88:	bl	42ae8 <__assert_fail@plt+0x303fc>
   3bd8c:	str	r0, [fp, #-12]
   3bd90:	bl	12404 <__errno_location@plt>
   3bd94:	mov	r3, r0
   3bd98:	ldr	r3, [r3]
   3bd9c:	str	r3, [fp, #-16]
   3bda0:	sub	r3, fp, #4048	; 0xfd0
   3bda4:	sub	r3, r3, #4
   3bda8:	sub	r3, r3, #12
   3bdac:	ldr	r2, [fp, #-8]
   3bdb0:	cmp	r2, r3
   3bdb4:	beq	3bdc0 <__assert_fail@plt+0x296d4>
   3bdb8:	ldr	r0, [fp, #-8]
   3bdbc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3bdc0:	ldr	r3, [fp, #-12]
   3bdc4:	cmn	r3, #1
   3bdc8:	beq	3bdd4 <__assert_fail@plt+0x296e8>
   3bdcc:	ldr	r3, [fp, #-12]
   3bdd0:	b	3bf74 <__assert_fail@plt+0x29888>
   3bdd4:	ldr	r3, [fp, #-16]
   3bdd8:	cmp	r3, #20
   3bddc:	beq	3be34 <__assert_fail@plt+0x29748>
   3bde0:	ldr	r3, [fp, #-16]
   3bde4:	cmp	r3, #2
   3bde8:	beq	3be34 <__assert_fail@plt+0x29748>
   3bdec:	ldr	r3, [fp, #-16]
   3bdf0:	cmp	r3, #1
   3bdf4:	beq	3be34 <__assert_fail@plt+0x29748>
   3bdf8:	ldr	r3, [fp, #-16]
   3bdfc:	cmp	r3, #13
   3be00:	beq	3be34 <__assert_fail@plt+0x29748>
   3be04:	ldr	r3, [fp, #-16]
   3be08:	cmp	r3, #38	; 0x26
   3be0c:	beq	3be34 <__assert_fail@plt+0x29748>
   3be10:	ldr	r3, [fp, #-16]
   3be14:	cmp	r3, #95	; 0x5f
   3be18:	beq	3be34 <__assert_fail@plt+0x29748>
   3be1c:	bl	12404 <__errno_location@plt>
   3be20:	mov	r2, r0
   3be24:	ldr	r3, [fp, #-16]
   3be28:	str	r3, [r2]
   3be2c:	ldr	r3, [fp, #-12]
   3be30:	b	3bf74 <__assert_fail@plt+0x29888>
   3be34:	sub	r3, fp, #32
   3be38:	mov	r0, r3
   3be3c:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   3be40:	mov	r3, r0
   3be44:	cmp	r3, #0
   3be48:	beq	3be60 <__assert_fail@plt+0x29774>
   3be4c:	bl	12404 <__errno_location@plt>
   3be50:	mov	r3, r0
   3be54:	ldr	r3, [r3]
   3be58:	mov	r0, r3
   3be5c:	bl	2fe30 <__assert_fail@plt+0x1d744>
   3be60:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3be64:	cmp	r3, #0
   3be68:	blt	3bea0 <__assert_fail@plt+0x297b4>
   3be6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3be70:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3be74:	cmp	r2, r3
   3be78:	bne	3bea0 <__assert_fail@plt+0x297b4>
   3be7c:	sub	r3, fp, #32
   3be80:	mov	r0, r3
   3be84:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3be88:	bl	12404 <__errno_location@plt>
   3be8c:	mov	r2, r0
   3be90:	mov	r3, #9
   3be94:	str	r3, [r2]
   3be98:	mvn	r3, #0
   3be9c:	b	3bf74 <__assert_fail@plt+0x29888>
   3bea0:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3bea4:	bl	125d8 <fchdir@plt>
   3bea8:	mov	r3, r0
   3beac:	cmp	r3, #0
   3beb0:	beq	3bee8 <__assert_fail@plt+0x297fc>
   3beb4:	bl	12404 <__errno_location@plt>
   3beb8:	mov	r3, r0
   3bebc:	ldr	r3, [r3]
   3bec0:	str	r3, [fp, #-20]	; 0xffffffec
   3bec4:	sub	r3, fp, #32
   3bec8:	mov	r0, r3
   3becc:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3bed0:	bl	12404 <__errno_location@plt>
   3bed4:	mov	r2, r0
   3bed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bedc:	str	r3, [r2]
   3bee0:	mvn	r3, #0
   3bee4:	b	3bf74 <__assert_fail@plt+0x29888>
   3bee8:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3beec:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3bef0:	bl	42ae8 <__assert_fail@plt+0x303fc>
   3bef4:	str	r0, [fp, #-24]	; 0xffffffe8
   3bef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3befc:	cmn	r3, #1
   3bf00:	bne	3bf14 <__assert_fail@plt+0x29828>
   3bf04:	bl	12404 <__errno_location@plt>
   3bf08:	mov	r3, r0
   3bf0c:	ldr	r3, [r3]
   3bf10:	b	3bf18 <__assert_fail@plt+0x2982c>
   3bf14:	mov	r3, #0
   3bf18:	str	r3, [fp, #-20]	; 0xffffffec
   3bf1c:	sub	r3, fp, #32
   3bf20:	mov	r0, r3
   3bf24:	bl	3bc68 <__assert_fail@plt+0x2957c>
   3bf28:	mov	r3, r0
   3bf2c:	cmp	r3, #0
   3bf30:	beq	3bf48 <__assert_fail@plt+0x2985c>
   3bf34:	bl	12404 <__errno_location@plt>
   3bf38:	mov	r3, r0
   3bf3c:	ldr	r3, [r3]
   3bf40:	mov	r0, r3
   3bf44:	bl	2fe70 <__assert_fail@plt+0x1d784>
   3bf48:	sub	r3, fp, #32
   3bf4c:	mov	r0, r3
   3bf50:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3bf54:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf58:	cmp	r3, #0
   3bf5c:	beq	3bf70 <__assert_fail@plt+0x29884>
   3bf60:	bl	12404 <__errno_location@plt>
   3bf64:	mov	r2, r0
   3bf68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf6c:	str	r3, [r2]
   3bf70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf74:	mov	r0, r3
   3bf78:	sub	sp, fp, #4
   3bf7c:	pop	{fp, pc}
   3bf80:	push	{fp, lr}
   3bf84:	add	fp, sp, #4
   3bf88:	sub	sp, sp, #4080	; 0xff0
   3bf8c:	str	r0, [fp, #-4072]	; 0xfffff018
   3bf90:	str	r1, [fp, #-4076]	; 0xfffff014
   3bf94:	str	r2, [fp, #-4080]	; 0xfffff010
   3bf98:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3bf9c:	cmn	r3, #100	; 0x64
   3bfa0:	beq	3bfb4 <__assert_fail@plt+0x298c8>
   3bfa4:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3bfa8:	ldrb	r3, [r3]
   3bfac:	cmp	r3, #47	; 0x2f
   3bfb0:	bne	3bfc8 <__assert_fail@plt+0x298dc>
   3bfb4:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3bfb8:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3bfbc:	bl	42b28 <__assert_fail@plt+0x3043c>
   3bfc0:	mov	r3, r0
   3bfc4:	b	3c1e8 <__assert_fail@plt+0x29afc>
   3bfc8:	sub	r3, fp, #4048	; 0xfd0
   3bfcc:	sub	r3, r3, #4
   3bfd0:	sub	r3, r3, #12
   3bfd4:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3bfd8:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3bfdc:	mov	r0, r3
   3bfe0:	bl	5eb88 <__assert_fail@plt+0x4c49c>
   3bfe4:	str	r0, [fp, #-8]
   3bfe8:	ldr	r3, [fp, #-8]
   3bfec:	cmp	r3, #0
   3bff0:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3bff4:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3bff8:	ldr	r0, [fp, #-8]
   3bffc:	bl	42b28 <__assert_fail@plt+0x3043c>
   3c000:	str	r0, [fp, #-12]
   3c004:	bl	12404 <__errno_location@plt>
   3c008:	mov	r3, r0
   3c00c:	ldr	r3, [r3]
   3c010:	str	r3, [fp, #-16]
   3c014:	sub	r3, fp, #4048	; 0xfd0
   3c018:	sub	r3, r3, #4
   3c01c:	sub	r3, r3, #12
   3c020:	ldr	r2, [fp, #-8]
   3c024:	cmp	r2, r3
   3c028:	beq	3c034 <__assert_fail@plt+0x29948>
   3c02c:	ldr	r0, [fp, #-8]
   3c030:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3c034:	ldr	r3, [fp, #-12]
   3c038:	cmn	r3, #1
   3c03c:	beq	3c048 <__assert_fail@plt+0x2995c>
   3c040:	ldr	r3, [fp, #-12]
   3c044:	b	3c1e8 <__assert_fail@plt+0x29afc>
   3c048:	ldr	r3, [fp, #-16]
   3c04c:	cmp	r3, #20
   3c050:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3c054:	ldr	r3, [fp, #-16]
   3c058:	cmp	r3, #2
   3c05c:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3c060:	ldr	r3, [fp, #-16]
   3c064:	cmp	r3, #1
   3c068:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3c06c:	ldr	r3, [fp, #-16]
   3c070:	cmp	r3, #13
   3c074:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3c078:	ldr	r3, [fp, #-16]
   3c07c:	cmp	r3, #38	; 0x26
   3c080:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3c084:	ldr	r3, [fp, #-16]
   3c088:	cmp	r3, #95	; 0x5f
   3c08c:	beq	3c0a8 <__assert_fail@plt+0x299bc>
   3c090:	bl	12404 <__errno_location@plt>
   3c094:	mov	r2, r0
   3c098:	ldr	r3, [fp, #-16]
   3c09c:	str	r3, [r2]
   3c0a0:	ldr	r3, [fp, #-12]
   3c0a4:	b	3c1e8 <__assert_fail@plt+0x29afc>
   3c0a8:	sub	r3, fp, #32
   3c0ac:	mov	r0, r3
   3c0b0:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   3c0b4:	mov	r3, r0
   3c0b8:	cmp	r3, #0
   3c0bc:	beq	3c0d4 <__assert_fail@plt+0x299e8>
   3c0c0:	bl	12404 <__errno_location@plt>
   3c0c4:	mov	r3, r0
   3c0c8:	ldr	r3, [r3]
   3c0cc:	mov	r0, r3
   3c0d0:	bl	2fe30 <__assert_fail@plt+0x1d744>
   3c0d4:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c0d8:	cmp	r3, #0
   3c0dc:	blt	3c114 <__assert_fail@plt+0x29a28>
   3c0e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c0e4:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c0e8:	cmp	r2, r3
   3c0ec:	bne	3c114 <__assert_fail@plt+0x29a28>
   3c0f0:	sub	r3, fp, #32
   3c0f4:	mov	r0, r3
   3c0f8:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c0fc:	bl	12404 <__errno_location@plt>
   3c100:	mov	r2, r0
   3c104:	mov	r3, #9
   3c108:	str	r3, [r2]
   3c10c:	mvn	r3, #0
   3c110:	b	3c1e8 <__assert_fail@plt+0x29afc>
   3c114:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3c118:	bl	125d8 <fchdir@plt>
   3c11c:	mov	r3, r0
   3c120:	cmp	r3, #0
   3c124:	beq	3c15c <__assert_fail@plt+0x29a70>
   3c128:	bl	12404 <__errno_location@plt>
   3c12c:	mov	r3, r0
   3c130:	ldr	r3, [r3]
   3c134:	str	r3, [fp, #-20]	; 0xffffffec
   3c138:	sub	r3, fp, #32
   3c13c:	mov	r0, r3
   3c140:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c144:	bl	12404 <__errno_location@plt>
   3c148:	mov	r2, r0
   3c14c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c150:	str	r3, [r2]
   3c154:	mvn	r3, #0
   3c158:	b	3c1e8 <__assert_fail@plt+0x29afc>
   3c15c:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c160:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c164:	bl	42b28 <__assert_fail@plt+0x3043c>
   3c168:	str	r0, [fp, #-24]	; 0xffffffe8
   3c16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c170:	cmn	r3, #1
   3c174:	bne	3c188 <__assert_fail@plt+0x29a9c>
   3c178:	bl	12404 <__errno_location@plt>
   3c17c:	mov	r3, r0
   3c180:	ldr	r3, [r3]
   3c184:	b	3c18c <__assert_fail@plt+0x29aa0>
   3c188:	mov	r3, #0
   3c18c:	str	r3, [fp, #-20]	; 0xffffffec
   3c190:	sub	r3, fp, #32
   3c194:	mov	r0, r3
   3c198:	bl	3bc68 <__assert_fail@plt+0x2957c>
   3c19c:	mov	r3, r0
   3c1a0:	cmp	r3, #0
   3c1a4:	beq	3c1bc <__assert_fail@plt+0x29ad0>
   3c1a8:	bl	12404 <__errno_location@plt>
   3c1ac:	mov	r3, r0
   3c1b0:	ldr	r3, [r3]
   3c1b4:	mov	r0, r3
   3c1b8:	bl	2fe70 <__assert_fail@plt+0x1d784>
   3c1bc:	sub	r3, fp, #32
   3c1c0:	mov	r0, r3
   3c1c4:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c1c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c1cc:	cmp	r3, #0
   3c1d0:	beq	3c1e4 <__assert_fail@plt+0x29af8>
   3c1d4:	bl	12404 <__errno_location@plt>
   3c1d8:	mov	r2, r0
   3c1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c1e0:	str	r3, [r2]
   3c1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c1e8:	mov	r0, r3
   3c1ec:	sub	sp, fp, #4
   3c1f0:	pop	{fp, pc}
   3c1f4:	push	{fp, lr}
   3c1f8:	add	fp, sp, #4
   3c1fc:	sub	sp, sp, #4080	; 0xff0
   3c200:	str	r0, [fp, #-4072]	; 0xfffff018
   3c204:	str	r1, [fp, #-4076]	; 0xfffff014
   3c208:	str	r2, [fp, #-4080]	; 0xfffff010
   3c20c:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c210:	cmn	r3, #100	; 0x64
   3c214:	beq	3c228 <__assert_fail@plt+0x29b3c>
   3c218:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3c21c:	ldrb	r3, [r3]
   3c220:	cmp	r3, #47	; 0x2f
   3c224:	bne	3c23c <__assert_fail@plt+0x29b50>
   3c228:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c22c:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c230:	bl	124b8 <setfilecon@plt>
   3c234:	mov	r3, r0
   3c238:	b	3c45c <__assert_fail@plt+0x29d70>
   3c23c:	sub	r3, fp, #4048	; 0xfd0
   3c240:	sub	r3, r3, #4
   3c244:	sub	r3, r3, #12
   3c248:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3c24c:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3c250:	mov	r0, r3
   3c254:	bl	5eb88 <__assert_fail@plt+0x4c49c>
   3c258:	str	r0, [fp, #-8]
   3c25c:	ldr	r3, [fp, #-8]
   3c260:	cmp	r3, #0
   3c264:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c268:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c26c:	ldr	r0, [fp, #-8]
   3c270:	bl	124b8 <setfilecon@plt>
   3c274:	str	r0, [fp, #-12]
   3c278:	bl	12404 <__errno_location@plt>
   3c27c:	mov	r3, r0
   3c280:	ldr	r3, [r3]
   3c284:	str	r3, [fp, #-16]
   3c288:	sub	r3, fp, #4048	; 0xfd0
   3c28c:	sub	r3, r3, #4
   3c290:	sub	r3, r3, #12
   3c294:	ldr	r2, [fp, #-8]
   3c298:	cmp	r2, r3
   3c29c:	beq	3c2a8 <__assert_fail@plt+0x29bbc>
   3c2a0:	ldr	r0, [fp, #-8]
   3c2a4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3c2a8:	ldr	r3, [fp, #-12]
   3c2ac:	cmn	r3, #1
   3c2b0:	beq	3c2bc <__assert_fail@plt+0x29bd0>
   3c2b4:	ldr	r3, [fp, #-12]
   3c2b8:	b	3c45c <__assert_fail@plt+0x29d70>
   3c2bc:	ldr	r3, [fp, #-16]
   3c2c0:	cmp	r3, #20
   3c2c4:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c2c8:	ldr	r3, [fp, #-16]
   3c2cc:	cmp	r3, #2
   3c2d0:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c2d4:	ldr	r3, [fp, #-16]
   3c2d8:	cmp	r3, #1
   3c2dc:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c2e0:	ldr	r3, [fp, #-16]
   3c2e4:	cmp	r3, #13
   3c2e8:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c2ec:	ldr	r3, [fp, #-16]
   3c2f0:	cmp	r3, #38	; 0x26
   3c2f4:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c2f8:	ldr	r3, [fp, #-16]
   3c2fc:	cmp	r3, #95	; 0x5f
   3c300:	beq	3c31c <__assert_fail@plt+0x29c30>
   3c304:	bl	12404 <__errno_location@plt>
   3c308:	mov	r2, r0
   3c30c:	ldr	r3, [fp, #-16]
   3c310:	str	r3, [r2]
   3c314:	ldr	r3, [fp, #-12]
   3c318:	b	3c45c <__assert_fail@plt+0x29d70>
   3c31c:	sub	r3, fp, #32
   3c320:	mov	r0, r3
   3c324:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   3c328:	mov	r3, r0
   3c32c:	cmp	r3, #0
   3c330:	beq	3c348 <__assert_fail@plt+0x29c5c>
   3c334:	bl	12404 <__errno_location@plt>
   3c338:	mov	r3, r0
   3c33c:	ldr	r3, [r3]
   3c340:	mov	r0, r3
   3c344:	bl	2fe30 <__assert_fail@plt+0x1d744>
   3c348:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c34c:	cmp	r3, #0
   3c350:	blt	3c388 <__assert_fail@plt+0x29c9c>
   3c354:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c358:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c35c:	cmp	r2, r3
   3c360:	bne	3c388 <__assert_fail@plt+0x29c9c>
   3c364:	sub	r3, fp, #32
   3c368:	mov	r0, r3
   3c36c:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c370:	bl	12404 <__errno_location@plt>
   3c374:	mov	r2, r0
   3c378:	mov	r3, #9
   3c37c:	str	r3, [r2]
   3c380:	mvn	r3, #0
   3c384:	b	3c45c <__assert_fail@plt+0x29d70>
   3c388:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3c38c:	bl	125d8 <fchdir@plt>
   3c390:	mov	r3, r0
   3c394:	cmp	r3, #0
   3c398:	beq	3c3d0 <__assert_fail@plt+0x29ce4>
   3c39c:	bl	12404 <__errno_location@plt>
   3c3a0:	mov	r3, r0
   3c3a4:	ldr	r3, [r3]
   3c3a8:	str	r3, [fp, #-20]	; 0xffffffec
   3c3ac:	sub	r3, fp, #32
   3c3b0:	mov	r0, r3
   3c3b4:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c3b8:	bl	12404 <__errno_location@plt>
   3c3bc:	mov	r2, r0
   3c3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3c4:	str	r3, [r2]
   3c3c8:	mvn	r3, #0
   3c3cc:	b	3c45c <__assert_fail@plt+0x29d70>
   3c3d0:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c3d4:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c3d8:	bl	124b8 <setfilecon@plt>
   3c3dc:	str	r0, [fp, #-24]	; 0xffffffe8
   3c3e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c3e4:	cmn	r3, #1
   3c3e8:	bne	3c3fc <__assert_fail@plt+0x29d10>
   3c3ec:	bl	12404 <__errno_location@plt>
   3c3f0:	mov	r3, r0
   3c3f4:	ldr	r3, [r3]
   3c3f8:	b	3c400 <__assert_fail@plt+0x29d14>
   3c3fc:	mov	r3, #0
   3c400:	str	r3, [fp, #-20]	; 0xffffffec
   3c404:	sub	r3, fp, #32
   3c408:	mov	r0, r3
   3c40c:	bl	3bc68 <__assert_fail@plt+0x2957c>
   3c410:	mov	r3, r0
   3c414:	cmp	r3, #0
   3c418:	beq	3c430 <__assert_fail@plt+0x29d44>
   3c41c:	bl	12404 <__errno_location@plt>
   3c420:	mov	r3, r0
   3c424:	ldr	r3, [r3]
   3c428:	mov	r0, r3
   3c42c:	bl	2fe70 <__assert_fail@plt+0x1d784>
   3c430:	sub	r3, fp, #32
   3c434:	mov	r0, r3
   3c438:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c43c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c440:	cmp	r3, #0
   3c444:	beq	3c458 <__assert_fail@plt+0x29d6c>
   3c448:	bl	12404 <__errno_location@plt>
   3c44c:	mov	r2, r0
   3c450:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c454:	str	r3, [r2]
   3c458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c45c:	mov	r0, r3
   3c460:	sub	sp, fp, #4
   3c464:	pop	{fp, pc}
   3c468:	push	{fp, lr}
   3c46c:	add	fp, sp, #4
   3c470:	sub	sp, sp, #4080	; 0xff0
   3c474:	str	r0, [fp, #-4072]	; 0xfffff018
   3c478:	str	r1, [fp, #-4076]	; 0xfffff014
   3c47c:	str	r2, [fp, #-4080]	; 0xfffff010
   3c480:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c484:	cmn	r3, #100	; 0x64
   3c488:	beq	3c49c <__assert_fail@plt+0x29db0>
   3c48c:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3c490:	ldrb	r3, [r3]
   3c494:	cmp	r3, #47	; 0x2f
   3c498:	bne	3c4b0 <__assert_fail@plt+0x29dc4>
   3c49c:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c4a0:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c4a4:	bl	12080 <lsetfilecon@plt>
   3c4a8:	mov	r3, r0
   3c4ac:	b	3c6d0 <__assert_fail@plt+0x29fe4>
   3c4b0:	sub	r3, fp, #4048	; 0xfd0
   3c4b4:	sub	r3, r3, #4
   3c4b8:	sub	r3, r3, #12
   3c4bc:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3c4c0:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3c4c4:	mov	r0, r3
   3c4c8:	bl	5eb88 <__assert_fail@plt+0x4c49c>
   3c4cc:	str	r0, [fp, #-8]
   3c4d0:	ldr	r3, [fp, #-8]
   3c4d4:	cmp	r3, #0
   3c4d8:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c4dc:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c4e0:	ldr	r0, [fp, #-8]
   3c4e4:	bl	12080 <lsetfilecon@plt>
   3c4e8:	str	r0, [fp, #-12]
   3c4ec:	bl	12404 <__errno_location@plt>
   3c4f0:	mov	r3, r0
   3c4f4:	ldr	r3, [r3]
   3c4f8:	str	r3, [fp, #-16]
   3c4fc:	sub	r3, fp, #4048	; 0xfd0
   3c500:	sub	r3, r3, #4
   3c504:	sub	r3, r3, #12
   3c508:	ldr	r2, [fp, #-8]
   3c50c:	cmp	r2, r3
   3c510:	beq	3c51c <__assert_fail@plt+0x29e30>
   3c514:	ldr	r0, [fp, #-8]
   3c518:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3c51c:	ldr	r3, [fp, #-12]
   3c520:	cmn	r3, #1
   3c524:	beq	3c530 <__assert_fail@plt+0x29e44>
   3c528:	ldr	r3, [fp, #-12]
   3c52c:	b	3c6d0 <__assert_fail@plt+0x29fe4>
   3c530:	ldr	r3, [fp, #-16]
   3c534:	cmp	r3, #20
   3c538:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c53c:	ldr	r3, [fp, #-16]
   3c540:	cmp	r3, #2
   3c544:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c548:	ldr	r3, [fp, #-16]
   3c54c:	cmp	r3, #1
   3c550:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c554:	ldr	r3, [fp, #-16]
   3c558:	cmp	r3, #13
   3c55c:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c560:	ldr	r3, [fp, #-16]
   3c564:	cmp	r3, #38	; 0x26
   3c568:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c56c:	ldr	r3, [fp, #-16]
   3c570:	cmp	r3, #95	; 0x5f
   3c574:	beq	3c590 <__assert_fail@plt+0x29ea4>
   3c578:	bl	12404 <__errno_location@plt>
   3c57c:	mov	r2, r0
   3c580:	ldr	r3, [fp, #-16]
   3c584:	str	r3, [r2]
   3c588:	ldr	r3, [fp, #-12]
   3c58c:	b	3c6d0 <__assert_fail@plt+0x29fe4>
   3c590:	sub	r3, fp, #32
   3c594:	mov	r0, r3
   3c598:	bl	3bbd8 <__assert_fail@plt+0x294ec>
   3c59c:	mov	r3, r0
   3c5a0:	cmp	r3, #0
   3c5a4:	beq	3c5bc <__assert_fail@plt+0x29ed0>
   3c5a8:	bl	12404 <__errno_location@plt>
   3c5ac:	mov	r3, r0
   3c5b0:	ldr	r3, [r3]
   3c5b4:	mov	r0, r3
   3c5b8:	bl	2fe30 <__assert_fail@plt+0x1d744>
   3c5bc:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c5c0:	cmp	r3, #0
   3c5c4:	blt	3c5fc <__assert_fail@plt+0x29f10>
   3c5c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c5cc:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c5d0:	cmp	r2, r3
   3c5d4:	bne	3c5fc <__assert_fail@plt+0x29f10>
   3c5d8:	sub	r3, fp, #32
   3c5dc:	mov	r0, r3
   3c5e0:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c5e4:	bl	12404 <__errno_location@plt>
   3c5e8:	mov	r2, r0
   3c5ec:	mov	r3, #9
   3c5f0:	str	r3, [r2]
   3c5f4:	mvn	r3, #0
   3c5f8:	b	3c6d0 <__assert_fail@plt+0x29fe4>
   3c5fc:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3c600:	bl	125d8 <fchdir@plt>
   3c604:	mov	r3, r0
   3c608:	cmp	r3, #0
   3c60c:	beq	3c644 <__assert_fail@plt+0x29f58>
   3c610:	bl	12404 <__errno_location@plt>
   3c614:	mov	r3, r0
   3c618:	ldr	r3, [r3]
   3c61c:	str	r3, [fp, #-20]	; 0xffffffec
   3c620:	sub	r3, fp, #32
   3c624:	mov	r0, r3
   3c628:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c62c:	bl	12404 <__errno_location@plt>
   3c630:	mov	r2, r0
   3c634:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c638:	str	r3, [r2]
   3c63c:	mvn	r3, #0
   3c640:	b	3c6d0 <__assert_fail@plt+0x29fe4>
   3c644:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c648:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c64c:	bl	12080 <lsetfilecon@plt>
   3c650:	str	r0, [fp, #-24]	; 0xffffffe8
   3c654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c658:	cmn	r3, #1
   3c65c:	bne	3c670 <__assert_fail@plt+0x29f84>
   3c660:	bl	12404 <__errno_location@plt>
   3c664:	mov	r3, r0
   3c668:	ldr	r3, [r3]
   3c66c:	b	3c674 <__assert_fail@plt+0x29f88>
   3c670:	mov	r3, #0
   3c674:	str	r3, [fp, #-20]	; 0xffffffec
   3c678:	sub	r3, fp, #32
   3c67c:	mov	r0, r3
   3c680:	bl	3bc68 <__assert_fail@plt+0x2957c>
   3c684:	mov	r3, r0
   3c688:	cmp	r3, #0
   3c68c:	beq	3c6a4 <__assert_fail@plt+0x29fb8>
   3c690:	bl	12404 <__errno_location@plt>
   3c694:	mov	r3, r0
   3c698:	ldr	r3, [r3]
   3c69c:	mov	r0, r3
   3c6a0:	bl	2fe70 <__assert_fail@plt+0x1d784>
   3c6a4:	sub	r3, fp, #32
   3c6a8:	mov	r0, r3
   3c6ac:	bl	3bcc0 <__assert_fail@plt+0x295d4>
   3c6b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6b4:	cmp	r3, #0
   3c6b8:	beq	3c6cc <__assert_fail@plt+0x29fe0>
   3c6bc:	bl	12404 <__errno_location@plt>
   3c6c0:	mov	r2, r0
   3c6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6c8:	str	r3, [r2]
   3c6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c6d0:	mov	r0, r3
   3c6d4:	sub	sp, fp, #4
   3c6d8:	pop	{fp, pc}
   3c6dc:	push	{fp}		; (str fp, [sp, #-4]!)
   3c6e0:	add	fp, sp, #0
   3c6e4:	sub	sp, sp, #12
   3c6e8:	str	r0, [fp, #-8]
   3c6ec:	ldr	r3, [fp, #-8]
   3c6f0:	ldr	r3, [r3, #76]	; 0x4c
   3c6f4:	mov	r0, r3
   3c6f8:	add	sp, fp, #0
   3c6fc:	pop	{fp}		; (ldr fp, [sp], #4)
   3c700:	bx	lr
   3c704:	push	{fp}		; (str fp, [sp, #-4]!)
   3c708:	add	fp, sp, #0
   3c70c:	sub	sp, sp, #12
   3c710:	str	r0, [fp, #-8]
   3c714:	ldr	r3, [fp, #-8]
   3c718:	ldr	r3, [r3, #92]	; 0x5c
   3c71c:	mov	r0, r3
   3c720:	add	sp, fp, #0
   3c724:	pop	{fp}		; (ldr fp, [sp], #4)
   3c728:	bx	lr
   3c72c:	push	{fp}		; (str fp, [sp, #-4]!)
   3c730:	add	fp, sp, #0
   3c734:	sub	sp, sp, #12
   3c738:	str	r0, [fp, #-8]
   3c73c:	ldr	r3, [fp, #-8]
   3c740:	ldr	r3, [r3, #84]	; 0x54
   3c744:	mov	r0, r3
   3c748:	add	sp, fp, #0
   3c74c:	pop	{fp}		; (ldr fp, [sp], #4)
   3c750:	bx	lr
   3c754:	push	{fp}		; (str fp, [sp, #-4]!)
   3c758:	add	fp, sp, #0
   3c75c:	sub	sp, sp, #12
   3c760:	str	r0, [fp, #-8]
   3c764:	mov	r3, #0
   3c768:	mov	r0, r3
   3c76c:	add	sp, fp, #0
   3c770:	pop	{fp}		; (ldr fp, [sp], #4)
   3c774:	bx	lr
   3c778:	push	{fp}		; (str fp, [sp, #-4]!)
   3c77c:	add	fp, sp, #0
   3c780:	sub	sp, sp, #12
   3c784:	str	r0, [fp, #-8]
   3c788:	str	r1, [fp, #-12]
   3c78c:	ldr	r2, [fp, #-8]
   3c790:	ldr	r3, [fp, #-12]
   3c794:	add	r3, r3, #72	; 0x48
   3c798:	ldm	r3, {r0, r1}
   3c79c:	stm	r2, {r0, r1}
   3c7a0:	ldr	r0, [fp, #-8]
   3c7a4:	add	sp, fp, #0
   3c7a8:	pop	{fp}		; (ldr fp, [sp], #4)
   3c7ac:	bx	lr
   3c7b0:	push	{fp}		; (str fp, [sp, #-4]!)
   3c7b4:	add	fp, sp, #0
   3c7b8:	sub	sp, sp, #12
   3c7bc:	str	r0, [fp, #-8]
   3c7c0:	str	r1, [fp, #-12]
   3c7c4:	ldr	r2, [fp, #-8]
   3c7c8:	ldr	r3, [fp, #-12]
   3c7cc:	add	r3, r3, #88	; 0x58
   3c7d0:	ldm	r3, {r0, r1}
   3c7d4:	stm	r2, {r0, r1}
   3c7d8:	ldr	r0, [fp, #-8]
   3c7dc:	add	sp, fp, #0
   3c7e0:	pop	{fp}		; (ldr fp, [sp], #4)
   3c7e4:	bx	lr
   3c7e8:	push	{fp}		; (str fp, [sp, #-4]!)
   3c7ec:	add	fp, sp, #0
   3c7f0:	sub	sp, sp, #12
   3c7f4:	str	r0, [fp, #-8]
   3c7f8:	str	r1, [fp, #-12]
   3c7fc:	ldr	r2, [fp, #-8]
   3c800:	ldr	r3, [fp, #-12]
   3c804:	add	r3, r3, #80	; 0x50
   3c808:	ldm	r3, {r0, r1}
   3c80c:	stm	r2, {r0, r1}
   3c810:	ldr	r0, [fp, #-8]
   3c814:	add	sp, fp, #0
   3c818:	pop	{fp}		; (ldr fp, [sp], #4)
   3c81c:	bx	lr
   3c820:	push	{fp}		; (str fp, [sp, #-4]!)
   3c824:	add	fp, sp, #0
   3c828:	sub	sp, sp, #20
   3c82c:	str	r0, [fp, #-16]
   3c830:	str	r1, [fp, #-20]	; 0xffffffec
   3c834:	mvn	r3, #0
   3c838:	str	r3, [fp, #-12]
   3c83c:	mvn	r3, #0
   3c840:	str	r3, [fp, #-8]
   3c844:	ldr	r3, [fp, #-16]
   3c848:	mov	r2, r3
   3c84c:	sub	r3, fp, #12
   3c850:	ldm	r3, {r0, r1}
   3c854:	stm	r2, {r0, r1}
   3c858:	ldr	r0, [fp, #-16]
   3c85c:	add	sp, fp, #0
   3c860:	pop	{fp}		; (ldr fp, [sp], #4)
   3c864:	bx	lr
   3c868:	push	{fp}		; (str fp, [sp, #-4]!)
   3c86c:	add	fp, sp, #0
   3c870:	sub	sp, sp, #12
   3c874:	str	r0, [fp, #-8]
   3c878:	str	r1, [fp, #-12]
   3c87c:	ldr	r3, [fp, #-8]
   3c880:	mov	r0, r3
   3c884:	add	sp, fp, #0
   3c888:	pop	{fp}		; (ldr fp, [sp], #4)
   3c88c:	bx	lr
   3c890:	push	{fp, lr}
   3c894:	add	fp, sp, #4
   3c898:	sub	sp, sp, #16
   3c89c:	str	r0, [fp, #-16]
   3c8a0:	str	r1, [fp, #-20]	; 0xffffffec
   3c8a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c8a8:	mov	r1, #0
   3c8ac:	ldr	r0, [fp, #-16]
   3c8b0:	bl	124ac <memchr@plt>
   3c8b4:	str	r0, [fp, #-8]
   3c8b8:	ldr	r3, [fp, #-8]
   3c8bc:	cmp	r3, #0
   3c8c0:	beq	3c8d8 <__assert_fail@plt+0x2a1ec>
   3c8c4:	ldr	r2, [fp, #-8]
   3c8c8:	ldr	r3, [fp, #-16]
   3c8cc:	sub	r3, r2, r3
   3c8d0:	add	r3, r3, #1
   3c8d4:	b	3c8dc <__assert_fail@plt+0x2a1f0>
   3c8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c8dc:	mov	r0, r3
   3c8e0:	sub	sp, fp, #4
   3c8e4:	pop	{fp, pc}
   3c8e8:	push	{fp, lr}
   3c8ec:	add	fp, sp, #4
   3c8f0:	sub	sp, sp, #8
   3c8f4:	str	r0, [fp, #-8]
   3c8f8:	mov	r2, #3
   3c8fc:	mov	r1, #0
   3c900:	ldr	r0, [fp, #-8]
   3c904:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   3c908:	mov	r3, r0
   3c90c:	mov	r0, r3
   3c910:	sub	sp, fp, #4
   3c914:	pop	{fp, pc}
   3c918:	push	{fp, lr}
   3c91c:	add	fp, sp, #4
   3c920:	sub	sp, sp, #16
   3c924:	str	r0, [fp, #-16]
   3c928:	ldr	r3, [fp, #-16]
   3c92c:	cmp	r3, #0
   3c930:	blt	3c97c <__assert_fail@plt+0x2a290>
   3c934:	ldr	r3, [fp, #-16]
   3c938:	cmp	r3, #2
   3c93c:	bgt	3c97c <__assert_fail@plt+0x2a290>
   3c940:	ldr	r0, [fp, #-16]
   3c944:	bl	3c8e8 <__assert_fail@plt+0x2a1fc>
   3c948:	str	r0, [fp, #-8]
   3c94c:	bl	12404 <__errno_location@plt>
   3c950:	mov	r3, r0
   3c954:	ldr	r3, [r3]
   3c958:	str	r3, [fp, #-12]
   3c95c:	ldr	r0, [fp, #-16]
   3c960:	bl	126a4 <close@plt>
   3c964:	bl	12404 <__errno_location@plt>
   3c968:	mov	r2, r0
   3c96c:	ldr	r3, [fp, #-12]
   3c970:	str	r3, [r2]
   3c974:	ldr	r3, [fp, #-8]
   3c978:	str	r3, [fp, #-16]
   3c97c:	ldr	r3, [fp, #-16]
   3c980:	mov	r0, r3
   3c984:	sub	sp, fp, #4
   3c988:	pop	{fp, pc}
   3c98c:	push	{r4, r5, r6, r7, fp, lr}
   3c990:	add	fp, sp, #20
   3c994:	sub	sp, sp, #48	; 0x30
   3c998:	str	r0, [fp, #-24]	; 0xffffffe8
   3c99c:	str	r1, [fp, #-28]	; 0xffffffe4
   3c9a0:	str	r2, [fp, #-32]	; 0xffffffe0
   3c9a4:	str	r3, [fp, #-36]	; 0xffffffdc
   3c9a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c9ac:	cmp	r3, #0
   3c9b0:	beq	3c9d4 <__assert_fail@plt+0x2a2e8>
   3c9b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c9b8:	str	r3, [sp]
   3c9bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c9c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c9c4:	ldr	r1, [pc, #1260]	; 3ceb8 <__assert_fail@plt+0x2a7cc>
   3c9c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c9cc:	bl	123f8 <fprintf@plt>
   3c9d0:	b	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c9d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c9d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c9dc:	ldr	r1, [pc, #1240]	; 3cebc <__assert_fail@plt+0x2a7d0>
   3c9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c9e4:	bl	123f8 <fprintf@plt>
   3c9e8:	ldr	r0, [pc, #1232]	; 3cec0 <__assert_fail@plt+0x2a7d4>
   3c9ec:	bl	12398 <gettext@plt>
   3c9f0:	mov	r2, r0
   3c9f4:	ldr	r3, [pc, #1224]	; 3cec4 <__assert_fail@plt+0x2a7d8>
   3c9f8:	ldr	r1, [pc, #1224]	; 3cec8 <__assert_fail@plt+0x2a7dc>
   3c9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ca00:	bl	123f8 <fprintf@plt>
   3ca04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ca08:	mov	r0, #10
   3ca0c:	bl	1256c <fputc@plt>
   3ca10:	ldr	r0, [pc, #1204]	; 3cecc <__assert_fail@plt+0x2a7e0>
   3ca14:	bl	12398 <gettext@plt>
   3ca18:	mov	r3, r0
   3ca1c:	ldr	r2, [pc, #1196]	; 3ced0 <__assert_fail@plt+0x2a7e4>
   3ca20:	mov	r1, r3
   3ca24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ca28:	bl	123f8 <fprintf@plt>
   3ca2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ca30:	mov	r0, #10
   3ca34:	bl	1256c <fputc@plt>
   3ca38:	ldr	r3, [fp, #8]
   3ca3c:	cmp	r3, #9
   3ca40:	ldrls	pc, [pc, r3, lsl #2]
   3ca44:	b	3ce00 <__assert_fail@plt+0x2a714>
   3ca48:	andeq	ip, r3, r8, lsr #29
   3ca4c:	andeq	ip, r3, r0, ror sl
   3ca50:	muleq	r3, r4, sl
   3ca54:	andeq	ip, r3, r0, asr #21
   3ca58:	andeq	ip, r3, r0, lsl #22
   3ca5c:	andeq	ip, r3, r8, asr fp
   3ca60:	andeq	ip, r3, r0, asr #23
   3ca64:	andeq	ip, r3, r8, lsr ip
   3ca68:	andeq	ip, r3, r0, asr #25
   3ca6c:	andeq	ip, r3, r8, asr sp
   3ca70:	ldr	r0, [pc, #1116]	; 3ced4 <__assert_fail@plt+0x2a7e8>
   3ca74:	bl	12398 <gettext@plt>
   3ca78:	mov	r1, r0
   3ca7c:	ldr	r3, [fp, #4]
   3ca80:	ldr	r3, [r3]
   3ca84:	mov	r2, r3
   3ca88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ca8c:	bl	123f8 <fprintf@plt>
   3ca90:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3ca94:	ldr	r0, [pc, #1084]	; 3ced8 <__assert_fail@plt+0x2a7ec>
   3ca98:	bl	12398 <gettext@plt>
   3ca9c:	mov	r1, r0
   3caa0:	ldr	r3, [fp, #4]
   3caa4:	ldr	r2, [r3]
   3caa8:	ldr	r3, [fp, #4]
   3caac:	add	r3, r3, #4
   3cab0:	ldr	r3, [r3]
   3cab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cab8:	bl	123f8 <fprintf@plt>
   3cabc:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cac0:	ldr	r0, [pc, #1044]	; 3cedc <__assert_fail@plt+0x2a7f0>
   3cac4:	bl	12398 <gettext@plt>
   3cac8:	ldr	r3, [fp, #4]
   3cacc:	ldr	r2, [r3]
   3cad0:	ldr	r3, [fp, #4]
   3cad4:	add	r3, r3, #4
   3cad8:	ldr	r1, [r3]
   3cadc:	ldr	r3, [fp, #4]
   3cae0:	add	r3, r3, #8
   3cae4:	ldr	r3, [r3]
   3cae8:	str	r3, [sp]
   3caec:	mov	r3, r1
   3caf0:	mov	r1, r0
   3caf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3caf8:	bl	123f8 <fprintf@plt>
   3cafc:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cb00:	ldr	r0, [pc, #984]	; 3cee0 <__assert_fail@plt+0x2a7f4>
   3cb04:	bl	12398 <gettext@plt>
   3cb08:	mov	ip, r0
   3cb0c:	ldr	r3, [fp, #4]
   3cb10:	ldr	r1, [r3]
   3cb14:	ldr	r3, [fp, #4]
   3cb18:	add	r3, r3, #4
   3cb1c:	ldr	r0, [r3]
   3cb20:	ldr	r3, [fp, #4]
   3cb24:	add	r3, r3, #8
   3cb28:	ldr	r3, [r3]
   3cb2c:	ldr	r2, [fp, #4]
   3cb30:	add	r2, r2, #12
   3cb34:	ldr	r2, [r2]
   3cb38:	str	r2, [sp, #4]
   3cb3c:	str	r3, [sp]
   3cb40:	mov	r3, r0
   3cb44:	mov	r2, r1
   3cb48:	mov	r1, ip
   3cb4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cb50:	bl	123f8 <fprintf@plt>
   3cb54:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cb58:	ldr	r0, [pc, #900]	; 3cee4 <__assert_fail@plt+0x2a7f8>
   3cb5c:	bl	12398 <gettext@plt>
   3cb60:	mov	lr, r0
   3cb64:	ldr	r3, [fp, #4]
   3cb68:	ldr	r0, [r3]
   3cb6c:	ldr	r3, [fp, #4]
   3cb70:	add	r3, r3, #4
   3cb74:	ldr	ip, [r3]
   3cb78:	ldr	r3, [fp, #4]
   3cb7c:	add	r3, r3, #8
   3cb80:	ldr	r3, [r3]
   3cb84:	ldr	r2, [fp, #4]
   3cb88:	add	r2, r2, #12
   3cb8c:	ldr	r2, [r2]
   3cb90:	ldr	r1, [fp, #4]
   3cb94:	add	r1, r1, #16
   3cb98:	ldr	r1, [r1]
   3cb9c:	str	r1, [sp, #8]
   3cba0:	str	r2, [sp, #4]
   3cba4:	str	r3, [sp]
   3cba8:	mov	r3, ip
   3cbac:	mov	r2, r0
   3cbb0:	mov	r1, lr
   3cbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cbb8:	bl	123f8 <fprintf@plt>
   3cbbc:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cbc0:	ldr	r0, [pc, #800]	; 3cee8 <__assert_fail@plt+0x2a7fc>
   3cbc4:	bl	12398 <gettext@plt>
   3cbc8:	mov	r4, r0
   3cbcc:	ldr	r3, [fp, #4]
   3cbd0:	ldr	ip, [r3]
   3cbd4:	ldr	r3, [fp, #4]
   3cbd8:	add	r3, r3, #4
   3cbdc:	ldr	lr, [r3]
   3cbe0:	ldr	r3, [fp, #4]
   3cbe4:	add	r3, r3, #8
   3cbe8:	ldr	r3, [r3]
   3cbec:	ldr	r2, [fp, #4]
   3cbf0:	add	r2, r2, #12
   3cbf4:	ldr	r2, [r2]
   3cbf8:	ldr	r1, [fp, #4]
   3cbfc:	add	r1, r1, #16
   3cc00:	ldr	r1, [r1]
   3cc04:	ldr	r0, [fp, #4]
   3cc08:	add	r0, r0, #20
   3cc0c:	ldr	r0, [r0]
   3cc10:	str	r0, [sp, #12]
   3cc14:	str	r1, [sp, #8]
   3cc18:	str	r2, [sp, #4]
   3cc1c:	str	r3, [sp]
   3cc20:	mov	r3, lr
   3cc24:	mov	r2, ip
   3cc28:	mov	r1, r4
   3cc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cc30:	bl	123f8 <fprintf@plt>
   3cc34:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cc38:	ldr	r0, [pc, #684]	; 3ceec <__assert_fail@plt+0x2a800>
   3cc3c:	bl	12398 <gettext@plt>
   3cc40:	mov	r5, r0
   3cc44:	ldr	r3, [fp, #4]
   3cc48:	ldr	lr, [r3]
   3cc4c:	ldr	r3, [fp, #4]
   3cc50:	add	r3, r3, #4
   3cc54:	ldr	r4, [r3]
   3cc58:	ldr	r3, [fp, #4]
   3cc5c:	add	r3, r3, #8
   3cc60:	ldr	r3, [r3]
   3cc64:	ldr	r2, [fp, #4]
   3cc68:	add	r2, r2, #12
   3cc6c:	ldr	r2, [r2]
   3cc70:	ldr	r1, [fp, #4]
   3cc74:	add	r1, r1, #16
   3cc78:	ldr	r1, [r1]
   3cc7c:	ldr	r0, [fp, #4]
   3cc80:	add	r0, r0, #20
   3cc84:	ldr	r0, [r0]
   3cc88:	ldr	ip, [fp, #4]
   3cc8c:	add	ip, ip, #24
   3cc90:	ldr	ip, [ip]
   3cc94:	str	ip, [sp, #16]
   3cc98:	str	r0, [sp, #12]
   3cc9c:	str	r1, [sp, #8]
   3cca0:	str	r2, [sp, #4]
   3cca4:	str	r3, [sp]
   3cca8:	mov	r3, r4
   3ccac:	mov	r2, lr
   3ccb0:	mov	r1, r5
   3ccb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ccb8:	bl	123f8 <fprintf@plt>
   3ccbc:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3ccc0:	ldr	r0, [pc, #552]	; 3cef0 <__assert_fail@plt+0x2a804>
   3ccc4:	bl	12398 <gettext@plt>
   3ccc8:	mov	r6, r0
   3cccc:	ldr	r3, [fp, #4]
   3ccd0:	ldr	r4, [r3]
   3ccd4:	ldr	r3, [fp, #4]
   3ccd8:	add	r3, r3, #4
   3ccdc:	ldr	r5, [r3]
   3cce0:	ldr	r3, [fp, #4]
   3cce4:	add	r3, r3, #8
   3cce8:	ldr	r3, [r3]
   3ccec:	ldr	r2, [fp, #4]
   3ccf0:	add	r2, r2, #12
   3ccf4:	ldr	r2, [r2]
   3ccf8:	ldr	r1, [fp, #4]
   3ccfc:	add	r1, r1, #16
   3cd00:	ldr	r1, [r1]
   3cd04:	ldr	r0, [fp, #4]
   3cd08:	add	r0, r0, #20
   3cd0c:	ldr	r0, [r0]
   3cd10:	ldr	ip, [fp, #4]
   3cd14:	add	ip, ip, #24
   3cd18:	ldr	ip, [ip]
   3cd1c:	ldr	lr, [fp, #4]
   3cd20:	add	lr, lr, #28
   3cd24:	ldr	lr, [lr]
   3cd28:	str	lr, [sp, #20]
   3cd2c:	str	ip, [sp, #16]
   3cd30:	str	r0, [sp, #12]
   3cd34:	str	r1, [sp, #8]
   3cd38:	str	r2, [sp, #4]
   3cd3c:	str	r3, [sp]
   3cd40:	mov	r3, r5
   3cd44:	mov	r2, r4
   3cd48:	mov	r1, r6
   3cd4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cd50:	bl	123f8 <fprintf@plt>
   3cd54:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cd58:	ldr	r0, [pc, #404]	; 3cef4 <__assert_fail@plt+0x2a808>
   3cd5c:	bl	12398 <gettext@plt>
   3cd60:	mov	r7, r0
   3cd64:	ldr	r3, [fp, #4]
   3cd68:	ldr	r5, [r3]
   3cd6c:	ldr	r3, [fp, #4]
   3cd70:	add	r3, r3, #4
   3cd74:	ldr	r6, [r3]
   3cd78:	ldr	r3, [fp, #4]
   3cd7c:	add	r3, r3, #8
   3cd80:	ldr	r3, [r3]
   3cd84:	ldr	r2, [fp, #4]
   3cd88:	add	r2, r2, #12
   3cd8c:	ldr	r2, [r2]
   3cd90:	ldr	r1, [fp, #4]
   3cd94:	add	r1, r1, #16
   3cd98:	ldr	r1, [r1]
   3cd9c:	ldr	r0, [fp, #4]
   3cda0:	add	r0, r0, #20
   3cda4:	ldr	r0, [r0]
   3cda8:	ldr	ip, [fp, #4]
   3cdac:	add	ip, ip, #24
   3cdb0:	ldr	ip, [ip]
   3cdb4:	ldr	lr, [fp, #4]
   3cdb8:	add	lr, lr, #28
   3cdbc:	ldr	lr, [lr]
   3cdc0:	ldr	r4, [fp, #4]
   3cdc4:	add	r4, r4, #32
   3cdc8:	ldr	r4, [r4]
   3cdcc:	str	r4, [sp, #24]
   3cdd0:	str	lr, [sp, #20]
   3cdd4:	str	ip, [sp, #16]
   3cdd8:	str	r0, [sp, #12]
   3cddc:	str	r1, [sp, #8]
   3cde0:	str	r2, [sp, #4]
   3cde4:	str	r3, [sp]
   3cde8:	mov	r3, r6
   3cdec:	mov	r2, r5
   3cdf0:	mov	r1, r7
   3cdf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cdf8:	bl	123f8 <fprintf@plt>
   3cdfc:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3ce00:	ldr	r0, [pc, #240]	; 3cef8 <__assert_fail@plt+0x2a80c>
   3ce04:	bl	12398 <gettext@plt>
   3ce08:	mov	r7, r0
   3ce0c:	ldr	r3, [fp, #4]
   3ce10:	ldr	r5, [r3]
   3ce14:	ldr	r3, [fp, #4]
   3ce18:	add	r3, r3, #4
   3ce1c:	ldr	r6, [r3]
   3ce20:	ldr	r3, [fp, #4]
   3ce24:	add	r3, r3, #8
   3ce28:	ldr	r3, [r3]
   3ce2c:	ldr	r2, [fp, #4]
   3ce30:	add	r2, r2, #12
   3ce34:	ldr	r2, [r2]
   3ce38:	ldr	r1, [fp, #4]
   3ce3c:	add	r1, r1, #16
   3ce40:	ldr	r1, [r1]
   3ce44:	ldr	r0, [fp, #4]
   3ce48:	add	r0, r0, #20
   3ce4c:	ldr	r0, [r0]
   3ce50:	ldr	ip, [fp, #4]
   3ce54:	add	ip, ip, #24
   3ce58:	ldr	ip, [ip]
   3ce5c:	ldr	lr, [fp, #4]
   3ce60:	add	lr, lr, #28
   3ce64:	ldr	lr, [lr]
   3ce68:	ldr	r4, [fp, #4]
   3ce6c:	add	r4, r4, #32
   3ce70:	ldr	r4, [r4]
   3ce74:	str	r4, [sp, #24]
   3ce78:	str	lr, [sp, #20]
   3ce7c:	str	ip, [sp, #16]
   3ce80:	str	r0, [sp, #12]
   3ce84:	str	r1, [sp, #8]
   3ce88:	str	r2, [sp, #4]
   3ce8c:	str	r3, [sp]
   3ce90:	mov	r3, r6
   3ce94:	mov	r2, r5
   3ce98:	mov	r1, r7
   3ce9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cea0:	bl	123f8 <fprintf@plt>
   3cea4:	b	3ceac <__assert_fail@plt+0x2a7c0>
   3cea8:	nop			; (mov r0, r0)
   3ceac:	nop			; (mov r0, r0)
   3ceb0:	sub	sp, fp, #20
   3ceb4:	pop	{r4, r5, r6, r7, fp, pc}
   3ceb8:	andeq	sl, r6, r4, asr #14
   3cebc:	andeq	sl, r6, r0, asr r7
   3cec0:	andeq	sl, r6, r8, asr r7
   3cec4:	andeq	r0, r0, r6, ror #15
   3cec8:	andeq	sl, r6, r8, ror #20
   3cecc:	andeq	sl, r6, ip, asr r7
   3ced0:	andeq	sl, r6, r8, lsl #16
   3ced4:	andeq	sl, r6, ip, lsr #16
   3ced8:	andeq	sl, r6, ip, lsr r8
   3cedc:	andeq	sl, r6, r4, asr r8
   3cee0:	andeq	sl, r6, r0, ror r8
   3cee4:	muleq	r6, r0, r8
   3cee8:			; <UNDEFINED> instruction: 0x0006a8b4
   3ceec:	ldrdeq	sl, [r6], -ip
   3cef0:	andeq	sl, r6, r8, lsl #18
   3cef4:	andeq	sl, r6, r8, lsr r9
   3cef8:	andeq	sl, r6, ip, ror #18
   3cefc:	push	{fp, lr}
   3cf00:	add	fp, sp, #4
   3cf04:	sub	sp, sp, #32
   3cf08:	str	r0, [fp, #-16]
   3cf0c:	str	r1, [fp, #-20]	; 0xffffffec
   3cf10:	str	r2, [fp, #-24]	; 0xffffffe8
   3cf14:	str	r3, [fp, #-28]	; 0xffffffe4
   3cf18:	mov	r3, #0
   3cf1c:	str	r3, [fp, #-8]
   3cf20:	b	3cf30 <__assert_fail@plt+0x2a844>
   3cf24:	ldr	r3, [fp, #-8]
   3cf28:	add	r3, r3, #1
   3cf2c:	str	r3, [fp, #-8]
   3cf30:	ldr	r3, [fp, #-8]
   3cf34:	lsl	r3, r3, #2
   3cf38:	ldr	r2, [fp, #4]
   3cf3c:	add	r3, r2, r3
   3cf40:	ldr	r3, [r3]
   3cf44:	cmp	r3, #0
   3cf48:	bne	3cf24 <__assert_fail@plt+0x2a838>
   3cf4c:	ldr	r3, [fp, #-8]
   3cf50:	str	r3, [sp, #4]
   3cf54:	ldr	r3, [fp, #4]
   3cf58:	str	r3, [sp]
   3cf5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cf60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cf64:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cf68:	ldr	r0, [fp, #-16]
   3cf6c:	bl	3c98c <__assert_fail@plt+0x2a2a0>
   3cf70:	nop			; (mov r0, r0)
   3cf74:	sub	sp, fp, #4
   3cf78:	pop	{fp, pc}
   3cf7c:	push	{fp, lr}
   3cf80:	add	fp, sp, #4
   3cf84:	sub	sp, sp, #72	; 0x48
   3cf88:	str	r0, [fp, #-56]	; 0xffffffc8
   3cf8c:	str	r1, [fp, #-60]	; 0xffffffc4
   3cf90:	str	r2, [fp, #-64]	; 0xffffffc0
   3cf94:	str	r3, [fp, #-68]	; 0xffffffbc
   3cf98:	mov	r3, #0
   3cf9c:	str	r3, [fp, #-8]
   3cfa0:	b	3cfb0 <__assert_fail@plt+0x2a8c4>
   3cfa4:	ldr	r3, [fp, #-8]
   3cfa8:	add	r3, r3, #1
   3cfac:	str	r3, [fp, #-8]
   3cfb0:	ldr	r3, [fp, #-8]
   3cfb4:	cmp	r3, #9
   3cfb8:	bhi	3cffc <__assert_fail@plt+0x2a910>
   3cfbc:	ldr	r3, [fp, #4]
   3cfc0:	add	r2, r3, #4
   3cfc4:	str	r2, [fp, #4]
   3cfc8:	ldr	r2, [r3]
   3cfcc:	ldr	r3, [fp, #-8]
   3cfd0:	lsl	r3, r3, #2
   3cfd4:	sub	r1, fp, #4
   3cfd8:	add	r3, r1, r3
   3cfdc:	str	r2, [r3, #-44]	; 0xffffffd4
   3cfe0:	ldr	r3, [fp, #-8]
   3cfe4:	lsl	r3, r3, #2
   3cfe8:	sub	r2, fp, #4
   3cfec:	add	r3, r2, r3
   3cff0:	ldr	r3, [r3, #-44]	; 0xffffffd4
   3cff4:	cmp	r3, #0
   3cff8:	bne	3cfa4 <__assert_fail@plt+0x2a8b8>
   3cffc:	ldr	r3, [fp, #-8]
   3d000:	str	r3, [sp, #4]
   3d004:	sub	r3, fp, #48	; 0x30
   3d008:	str	r3, [sp]
   3d00c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d010:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3d014:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3d018:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d01c:	bl	3c98c <__assert_fail@plt+0x2a2a0>
   3d020:	nop			; (mov r0, r0)
   3d024:	sub	sp, fp, #4
   3d028:	pop	{fp, pc}
   3d02c:	push	{r3}		; (str r3, [sp, #-4]!)
   3d030:	push	{fp, lr}
   3d034:	add	fp, sp, #4
   3d038:	sub	sp, sp, #36	; 0x24
   3d03c:	str	r0, [fp, #-20]	; 0xffffffec
   3d040:	str	r1, [fp, #-24]	; 0xffffffe8
   3d044:	str	r2, [fp, #-28]	; 0xffffffe4
   3d048:	add	r3, fp, #8
   3d04c:	str	r3, [fp, #-12]
   3d050:	ldr	r3, [fp, #-12]
   3d054:	str	r3, [sp]
   3d058:	ldr	r3, [fp, #4]
   3d05c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d060:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d064:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d068:	bl	3cf7c <__assert_fail@plt+0x2a890>
   3d06c:	nop			; (mov r0, r0)
   3d070:	sub	sp, fp, #4
   3d074:	pop	{fp, lr}
   3d078:	add	sp, sp, #4
   3d07c:	bx	lr
   3d080:	push	{fp, lr}
   3d084:	add	fp, sp, #4
   3d088:	ldr	r3, [pc, #96]	; 3d0f0 <__assert_fail@plt+0x2aa04>
   3d08c:	ldr	r3, [r3]
   3d090:	mov	r1, r3
   3d094:	mov	r0, #10
   3d098:	bl	1256c <fputc@plt>
   3d09c:	ldr	r0, [pc, #80]	; 3d0f4 <__assert_fail@plt+0x2aa08>
   3d0a0:	bl	12398 <gettext@plt>
   3d0a4:	mov	r3, r0
   3d0a8:	ldr	r1, [pc, #72]	; 3d0f8 <__assert_fail@plt+0x2aa0c>
   3d0ac:	mov	r0, r3
   3d0b0:	bl	1202c <printf@plt>
   3d0b4:	ldr	r0, [pc, #64]	; 3d0fc <__assert_fail@plt+0x2aa10>
   3d0b8:	bl	12398 <gettext@plt>
   3d0bc:	mov	r3, r0
   3d0c0:	ldr	r2, [pc, #56]	; 3d100 <__assert_fail@plt+0x2aa14>
   3d0c4:	ldr	r1, [pc, #56]	; 3d104 <__assert_fail@plt+0x2aa18>
   3d0c8:	mov	r0, r3
   3d0cc:	bl	1202c <printf@plt>
   3d0d0:	ldr	r0, [pc, #48]	; 3d108 <__assert_fail@plt+0x2aa1c>
   3d0d4:	bl	12398 <gettext@plt>
   3d0d8:	mov	r3, r0
   3d0dc:	ldr	r1, [pc, #40]	; 3d10c <__assert_fail@plt+0x2aa20>
   3d0e0:	mov	r0, r3
   3d0e4:	bl	1202c <printf@plt>
   3d0e8:	nop			; (mov r0, r0)
   3d0ec:	pop	{fp, pc}
   3d0f0:	andeq	ip, r7, r4, lsr r7
   3d0f4:	andeq	sl, r6, r8, lsr #19
   3d0f8:			; <UNDEFINED> instruction: 0x0006a9bc
   3d0fc:	ldrdeq	sl, [r6], -r4
   3d100:	andeq	sl, r6, r8, ror #19
   3d104:	andeq	sl, r6, r0, lsl sl
   3d108:	andeq	sl, r6, r0, lsr #20
   3d10c:	andeq	sl, r6, r8, asr #20
   3d110:	push	{fp, lr}
   3d114:	add	fp, sp, #4
   3d118:	sub	sp, sp, #16
   3d11c:	str	r0, [fp, #-8]
   3d120:	str	r1, [fp, #-12]
   3d124:	str	r2, [fp, #-16]
   3d128:	ldr	r2, [fp, #-16]
   3d12c:	ldr	r1, [fp, #-12]
   3d130:	ldr	r0, [fp, #-8]
   3d134:	bl	3d2a0 <__assert_fail@plt+0x2abb4>
   3d138:	mov	r3, r0
   3d13c:	mov	r0, r3
   3d140:	sub	sp, fp, #4
   3d144:	pop	{fp, pc}
   3d148:	push	{fp, lr}
   3d14c:	add	fp, sp, #4
   3d150:	sub	sp, sp, #8
   3d154:	str	r0, [fp, #-8]
   3d158:	ldr	r3, [fp, #-8]
   3d15c:	cmp	r3, #0
   3d160:	bne	3d168 <__assert_fail@plt+0x2aa7c>
   3d164:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   3d168:	ldr	r3, [fp, #-8]
   3d16c:	mov	r0, r3
   3d170:	sub	sp, fp, #4
   3d174:	pop	{fp, pc}
   3d178:	push	{fp, lr}
   3d17c:	add	fp, sp, #4
   3d180:	sub	sp, sp, #8
   3d184:	str	r0, [fp, #-8]
   3d188:	ldr	r0, [fp, #-8]
   3d18c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   3d190:	mov	r3, r0
   3d194:	mov	r0, r3
   3d198:	bl	3d148 <__assert_fail@plt+0x2aa5c>
   3d19c:	mov	r3, r0
   3d1a0:	mov	r0, r3
   3d1a4:	sub	sp, fp, #4
   3d1a8:	pop	{fp, pc}
   3d1ac:	push	{fp, lr}
   3d1b0:	add	fp, sp, #4
   3d1b4:	sub	sp, sp, #8
   3d1b8:	str	r0, [fp, #-8]
   3d1bc:	ldr	r0, [fp, #-8]
   3d1c0:	bl	60170 <__assert_fail@plt+0x4da84>
   3d1c4:	mov	r3, r0
   3d1c8:	mov	r0, r3
   3d1cc:	bl	3d148 <__assert_fail@plt+0x2aa5c>
   3d1d0:	mov	r3, r0
   3d1d4:	mov	r0, r3
   3d1d8:	sub	sp, fp, #4
   3d1dc:	pop	{fp, pc}
   3d1e0:	push	{fp, lr}
   3d1e4:	add	fp, sp, #4
   3d1e8:	sub	sp, sp, #8
   3d1ec:	str	r0, [fp, #-8]
   3d1f0:	ldr	r0, [fp, #-8]
   3d1f4:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   3d1f8:	mov	r3, r0
   3d1fc:	mov	r0, r3
   3d200:	sub	sp, fp, #4
   3d204:	pop	{fp, pc}
   3d208:	push	{fp, lr}
   3d20c:	add	fp, sp, #4
   3d210:	sub	sp, sp, #16
   3d214:	str	r0, [fp, #-16]
   3d218:	str	r1, [fp, #-20]	; 0xffffffec
   3d21c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d220:	ldr	r0, [fp, #-16]
   3d224:	bl	43d30 <__assert_fail@plt+0x31644>
   3d228:	str	r0, [fp, #-8]
   3d22c:	ldr	r3, [fp, #-8]
   3d230:	cmp	r3, #0
   3d234:	bne	3d254 <__assert_fail@plt+0x2ab68>
   3d238:	ldr	r3, [fp, #-16]
   3d23c:	cmp	r3, #0
   3d240:	beq	3d250 <__assert_fail@plt+0x2ab64>
   3d244:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d248:	cmp	r3, #0
   3d24c:	beq	3d254 <__assert_fail@plt+0x2ab68>
   3d250:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   3d254:	ldr	r3, [fp, #-8]
   3d258:	mov	r0, r3
   3d25c:	sub	sp, fp, #4
   3d260:	pop	{fp, pc}
   3d264:	push	{fp, lr}
   3d268:	add	fp, sp, #4
   3d26c:	sub	sp, sp, #8
   3d270:	str	r0, [fp, #-8]
   3d274:	str	r1, [fp, #-12]
   3d278:	ldr	r1, [fp, #-12]
   3d27c:	ldr	r0, [fp, #-8]
   3d280:	bl	6019c <__assert_fail@plt+0x4dab0>
   3d284:	mov	r3, r0
   3d288:	mov	r0, r3
   3d28c:	bl	3d148 <__assert_fail@plt+0x2aa5c>
   3d290:	mov	r3, r0
   3d294:	mov	r0, r3
   3d298:	sub	sp, fp, #4
   3d29c:	pop	{fp, pc}
   3d2a0:	push	{fp, lr}
   3d2a4:	add	fp, sp, #4
   3d2a8:	sub	sp, sp, #24
   3d2ac:	str	r0, [fp, #-16]
   3d2b0:	str	r1, [fp, #-20]	; 0xffffffec
   3d2b4:	str	r2, [fp, #-24]	; 0xffffffe8
   3d2b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d2bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d2c0:	ldr	r0, [fp, #-16]
   3d2c4:	bl	43e00 <__assert_fail@plt+0x31714>
   3d2c8:	str	r0, [fp, #-8]
   3d2cc:	ldr	r3, [fp, #-8]
   3d2d0:	cmp	r3, #0
   3d2d4:	bne	3d300 <__assert_fail@plt+0x2ac14>
   3d2d8:	ldr	r3, [fp, #-16]
   3d2dc:	cmp	r3, #0
   3d2e0:	beq	3d2fc <__assert_fail@plt+0x2ac10>
   3d2e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d2e8:	cmp	r3, #0
   3d2ec:	beq	3d300 <__assert_fail@plt+0x2ac14>
   3d2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d2f4:	cmp	r3, #0
   3d2f8:	beq	3d300 <__assert_fail@plt+0x2ac14>
   3d2fc:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   3d300:	ldr	r3, [fp, #-8]
   3d304:	mov	r0, r3
   3d308:	sub	sp, fp, #4
   3d30c:	pop	{fp, pc}
   3d310:	push	{fp, lr}
   3d314:	add	fp, sp, #4
   3d318:	sub	sp, sp, #16
   3d31c:	str	r0, [fp, #-8]
   3d320:	str	r1, [fp, #-12]
   3d324:	str	r2, [fp, #-16]
   3d328:	ldr	r2, [fp, #-16]
   3d32c:	ldr	r1, [fp, #-12]
   3d330:	ldr	r0, [fp, #-8]
   3d334:	bl	60224 <__assert_fail@plt+0x4db38>
   3d338:	mov	r3, r0
   3d33c:	mov	r0, r3
   3d340:	bl	3d148 <__assert_fail@plt+0x2aa5c>
   3d344:	mov	r3, r0
   3d348:	mov	r0, r3
   3d34c:	sub	sp, fp, #4
   3d350:	pop	{fp, pc}
   3d354:	push	{fp, lr}
   3d358:	add	fp, sp, #4
   3d35c:	sub	sp, sp, #8
   3d360:	str	r0, [fp, #-8]
   3d364:	str	r1, [fp, #-12]
   3d368:	ldr	r2, [fp, #-12]
   3d36c:	ldr	r1, [fp, #-8]
   3d370:	mov	r0, #0
   3d374:	bl	3d2a0 <__assert_fail@plt+0x2abb4>
   3d378:	mov	r3, r0
   3d37c:	mov	r0, r3
   3d380:	sub	sp, fp, #4
   3d384:	pop	{fp, pc}
   3d388:	push	{fp, lr}
   3d38c:	add	fp, sp, #4
   3d390:	sub	sp, sp, #8
   3d394:	str	r0, [fp, #-8]
   3d398:	str	r1, [fp, #-12]
   3d39c:	ldr	r2, [fp, #-12]
   3d3a0:	ldr	r1, [fp, #-8]
   3d3a4:	mov	r0, #0
   3d3a8:	bl	3d310 <__assert_fail@plt+0x2ac24>
   3d3ac:	mov	r3, r0
   3d3b0:	mov	r0, r3
   3d3b4:	sub	sp, fp, #4
   3d3b8:	pop	{fp, pc}
   3d3bc:	push	{fp, lr}
   3d3c0:	add	fp, sp, #4
   3d3c4:	sub	sp, sp, #8
   3d3c8:	str	r0, [fp, #-8]
   3d3cc:	str	r1, [fp, #-12]
   3d3d0:	mov	r2, #1
   3d3d4:	ldr	r1, [fp, #-12]
   3d3d8:	ldr	r0, [fp, #-8]
   3d3dc:	bl	3d3f0 <__assert_fail@plt+0x2ad04>
   3d3e0:	mov	r3, r0
   3d3e4:	mov	r0, r3
   3d3e8:	sub	sp, fp, #4
   3d3ec:	pop	{fp, pc}
   3d3f0:	push	{fp, lr}
   3d3f4:	add	fp, sp, #4
   3d3f8:	sub	sp, sp, #24
   3d3fc:	str	r0, [fp, #-16]
   3d400:	str	r1, [fp, #-20]	; 0xffffffec
   3d404:	str	r2, [fp, #-24]	; 0xffffffe8
   3d408:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d40c:	ldr	r3, [r3]
   3d410:	str	r3, [fp, #-8]
   3d414:	ldr	r3, [fp, #-16]
   3d418:	cmp	r3, #0
   3d41c:	bne	3d468 <__assert_fail@plt+0x2ad7c>
   3d420:	ldr	r3, [fp, #-8]
   3d424:	cmp	r3, #0
   3d428:	bne	3d4cc <__assert_fail@plt+0x2ade0>
   3d42c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d430:	mov	r0, #64	; 0x40
   3d434:	bl	63574 <__assert_fail@plt+0x50e88>
   3d438:	mov	r3, r0
   3d43c:	str	r3, [fp, #-8]
   3d440:	ldr	r3, [fp, #-8]
   3d444:	cmp	r3, #0
   3d448:	moveq	r3, #1
   3d44c:	movne	r3, #0
   3d450:	uxtb	r3, r3
   3d454:	mov	r2, r3
   3d458:	ldr	r3, [fp, #-8]
   3d45c:	add	r3, r2, r3
   3d460:	str	r3, [fp, #-8]
   3d464:	b	3d4cc <__assert_fail@plt+0x2ade0>
   3d468:	ldr	r3, [fp, #-8]
   3d46c:	lsr	r3, r3, #1
   3d470:	add	r3, r3, #1
   3d474:	mvn	r2, r3
   3d478:	ldr	r3, [fp, #-8]
   3d47c:	cmp	r2, r3
   3d480:	bcs	3d4a4 <__assert_fail@plt+0x2adb8>
   3d484:	ldr	r3, [fp, #-8]
   3d488:	lsr	r2, r3, #1
   3d48c:	ldr	r3, [fp, #-8]
   3d490:	add	r3, r2, r3
   3d494:	add	r3, r3, #1
   3d498:	str	r3, [fp, #-8]
   3d49c:	mov	r3, #1
   3d4a0:	b	3d4c0 <__assert_fail@plt+0x2add4>
   3d4a4:	ldr	r3, [fp, #-8]
   3d4a8:	lsr	r2, r3, #1
   3d4ac:	ldr	r3, [fp, #-8]
   3d4b0:	add	r3, r2, r3
   3d4b4:	add	r3, r3, #1
   3d4b8:	str	r3, [fp, #-8]
   3d4bc:	mov	r3, #0
   3d4c0:	cmp	r3, #0
   3d4c4:	beq	3d4cc <__assert_fail@plt+0x2ade0>
   3d4c8:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   3d4cc:	ldr	r3, [fp, #-8]
   3d4d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d4d4:	mov	r1, r3
   3d4d8:	ldr	r0, [fp, #-16]
   3d4dc:	bl	3d2a0 <__assert_fail@plt+0x2abb4>
   3d4e0:	str	r0, [fp, #-16]
   3d4e4:	ldr	r2, [fp, #-8]
   3d4e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d4ec:	str	r2, [r3]
   3d4f0:	ldr	r3, [fp, #-16]
   3d4f4:	mov	r0, r3
   3d4f8:	sub	sp, fp, #4
   3d4fc:	pop	{fp, pc}
   3d500:	push	{fp, lr}
   3d504:	add	fp, sp, #4
   3d508:	sub	sp, sp, #32
   3d50c:	str	r0, [fp, #-24]	; 0xffffffe8
   3d510:	str	r1, [fp, #-28]	; 0xffffffe4
   3d514:	str	r2, [fp, #-32]	; 0xffffffe0
   3d518:	str	r3, [fp, #-36]	; 0xffffffdc
   3d51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d520:	ldr	r3, [r3]
   3d524:	str	r3, [fp, #-8]
   3d528:	ldr	r3, [fp, #-8]
   3d52c:	asr	r3, r3, #1
   3d530:	cmp	r3, #0
   3d534:	bge	3d55c <__assert_fail@plt+0x2ae70>
   3d538:	ldr	r3, [fp, #-8]
   3d53c:	asr	r3, r3, #1
   3d540:	rsb	r2, r3, #-2147483648	; 0x80000000
   3d544:	ldr	r3, [fp, #-8]
   3d548:	cmp	r2, r3
   3d54c:	movgt	r3, #1
   3d550:	movle	r3, #0
   3d554:	uxtb	r3, r3
   3d558:	b	3d5b0 <__assert_fail@plt+0x2aec4>
   3d55c:	ldr	r3, [fp, #-8]
   3d560:	cmp	r3, #0
   3d564:	bge	3d58c <__assert_fail@plt+0x2aea0>
   3d568:	ldr	r3, [fp, #-8]
   3d56c:	asr	r2, r3, #1
   3d570:	ldr	r3, [fp, #-8]
   3d574:	rsb	r3, r3, #-2147483648	; 0x80000000
   3d578:	cmp	r2, r3
   3d57c:	movlt	r3, #1
   3d580:	movge	r3, #0
   3d584:	uxtb	r3, r3
   3d588:	b	3d5b0 <__assert_fail@plt+0x2aec4>
   3d58c:	ldr	r3, [fp, #-8]
   3d590:	asr	r2, r3, #1
   3d594:	mvn	r3, #-2147483648	; 0x80000000
   3d598:	sub	r3, r3, r2
   3d59c:	ldr	r2, [fp, #-8]
   3d5a0:	cmp	r3, r2
   3d5a4:	movlt	r3, #1
   3d5a8:	movge	r3, #0
   3d5ac:	uxtb	r3, r3
   3d5b0:	cmp	r3, #0
   3d5b4:	beq	3d5d8 <__assert_fail@plt+0x2aeec>
   3d5b8:	ldr	r3, [fp, #-8]
   3d5bc:	asr	r3, r3, #1
   3d5c0:	mov	r2, r3
   3d5c4:	ldr	r3, [fp, #-8]
   3d5c8:	add	r3, r2, r3
   3d5cc:	str	r3, [fp, #-16]
   3d5d0:	mov	r3, #1
   3d5d4:	b	3d5f4 <__assert_fail@plt+0x2af08>
   3d5d8:	ldr	r3, [fp, #-8]
   3d5dc:	asr	r3, r3, #1
   3d5e0:	mov	r2, r3
   3d5e4:	ldr	r3, [fp, #-8]
   3d5e8:	add	r3, r2, r3
   3d5ec:	str	r3, [fp, #-16]
   3d5f0:	mov	r3, #0
   3d5f4:	cmp	r3, #0
   3d5f8:	beq	3d604 <__assert_fail@plt+0x2af18>
   3d5fc:	mvn	r3, #-2147483648	; 0x80000000
   3d600:	str	r3, [fp, #-16]
   3d604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d608:	cmp	r3, #0
   3d60c:	blt	3d628 <__assert_fail@plt+0x2af3c>
   3d610:	ldr	r3, [fp, #-16]
   3d614:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d618:	cmp	r2, r3
   3d61c:	bge	3d628 <__assert_fail@plt+0x2af3c>
   3d620:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d624:	str	r3, [fp, #-16]
   3d628:	ldr	r3, [fp, #4]
   3d62c:	cmp	r3, #0
   3d630:	bge	3d6c0 <__assert_fail@plt+0x2afd4>
   3d634:	ldr	r3, [fp, #-16]
   3d638:	cmp	r3, #0
   3d63c:	bge	3d66c <__assert_fail@plt+0x2af80>
   3d640:	ldr	r1, [fp, #4]
   3d644:	mvn	r0, #-2147483648	; 0x80000000
   3d648:	bl	63780 <__assert_fail@plt+0x51094>
   3d64c:	mov	r3, r0
   3d650:	mov	r2, r3
   3d654:	ldr	r3, [fp, #-16]
   3d658:	cmp	r2, r3
   3d65c:	movgt	r3, #1
   3d660:	movle	r3, #0
   3d664:	uxtb	r3, r3
   3d668:	b	3d760 <__assert_fail@plt+0x2b074>
   3d66c:	ldr	r3, [fp, #4]
   3d670:	cmn	r3, #1
   3d674:	bne	3d694 <__assert_fail@plt+0x2afa8>
   3d678:	ldr	r3, [fp, #-16]
   3d67c:	add	r3, r3, #-2147483648	; 0x80000000
   3d680:	cmp	r3, #0
   3d684:	movgt	r3, #1
   3d688:	movle	r3, #0
   3d68c:	uxtb	r3, r3
   3d690:	b	3d760 <__assert_fail@plt+0x2b074>
   3d694:	ldr	r1, [fp, #4]
   3d698:	mov	r0, #-2147483648	; 0x80000000
   3d69c:	bl	63780 <__assert_fail@plt+0x51094>
   3d6a0:	mov	r3, r0
   3d6a4:	mov	r2, r3
   3d6a8:	ldr	r3, [fp, #-16]
   3d6ac:	cmp	r2, r3
   3d6b0:	movlt	r3, #1
   3d6b4:	movge	r3, #0
   3d6b8:	uxtb	r3, r3
   3d6bc:	b	3d760 <__assert_fail@plt+0x2b074>
   3d6c0:	ldr	r3, [fp, #4]
   3d6c4:	cmp	r3, #0
   3d6c8:	beq	3d75c <__assert_fail@plt+0x2b070>
   3d6cc:	ldr	r3, [fp, #-16]
   3d6d0:	cmp	r3, #0
   3d6d4:	bge	3d730 <__assert_fail@plt+0x2b044>
   3d6d8:	ldr	r3, [fp, #-16]
   3d6dc:	cmn	r3, #1
   3d6e0:	bne	3d700 <__assert_fail@plt+0x2b014>
   3d6e4:	ldr	r3, [fp, #4]
   3d6e8:	add	r3, r3, #-2147483648	; 0x80000000
   3d6ec:	cmp	r3, #0
   3d6f0:	movgt	r3, #1
   3d6f4:	movle	r3, #0
   3d6f8:	uxtb	r3, r3
   3d6fc:	b	3d760 <__assert_fail@plt+0x2b074>
   3d700:	ldr	r3, [fp, #-16]
   3d704:	mov	r1, r3
   3d708:	mov	r0, #-2147483648	; 0x80000000
   3d70c:	bl	63780 <__assert_fail@plt+0x51094>
   3d710:	mov	r3, r0
   3d714:	mov	r2, r3
   3d718:	ldr	r3, [fp, #4]
   3d71c:	cmp	r2, r3
   3d720:	movlt	r3, #1
   3d724:	movge	r3, #0
   3d728:	uxtb	r3, r3
   3d72c:	b	3d760 <__assert_fail@plt+0x2b074>
   3d730:	ldr	r1, [fp, #4]
   3d734:	mvn	r0, #-2147483648	; 0x80000000
   3d738:	bl	63780 <__assert_fail@plt+0x51094>
   3d73c:	mov	r3, r0
   3d740:	mov	r2, r3
   3d744:	ldr	r3, [fp, #-16]
   3d748:	cmp	r2, r3
   3d74c:	movlt	r3, #1
   3d750:	movge	r3, #0
   3d754:	uxtb	r3, r3
   3d758:	b	3d760 <__assert_fail@plt+0x2b074>
   3d75c:	mov	r3, #0
   3d760:	cmp	r3, #0
   3d764:	beq	3d784 <__assert_fail@plt+0x2b098>
   3d768:	ldr	r3, [fp, #-16]
   3d76c:	mov	r2, r3
   3d770:	ldr	r3, [fp, #4]
   3d774:	mul	r3, r3, r2
   3d778:	str	r3, [fp, #-20]	; 0xffffffec
   3d77c:	mov	r3, #1
   3d780:	b	3d79c <__assert_fail@plt+0x2b0b0>
   3d784:	ldr	r3, [fp, #-16]
   3d788:	mov	r2, r3
   3d78c:	ldr	r3, [fp, #4]
   3d790:	mul	r3, r3, r2
   3d794:	str	r3, [fp, #-20]	; 0xffffffec
   3d798:	mov	r3, #0
   3d79c:	cmp	r3, #0
   3d7a0:	beq	3d7ac <__assert_fail@plt+0x2b0c0>
   3d7a4:	mvn	r3, #-2147483648	; 0x80000000
   3d7a8:	b	3d7c4 <__assert_fail@plt+0x2b0d8>
   3d7ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d7b0:	cmp	r3, #63	; 0x3f
   3d7b4:	bgt	3d7c0 <__assert_fail@plt+0x2b0d4>
   3d7b8:	mov	r3, #64	; 0x40
   3d7bc:	b	3d7c4 <__assert_fail@plt+0x2b0d8>
   3d7c0:	mov	r3, #0
   3d7c4:	str	r3, [fp, #-12]
   3d7c8:	ldr	r3, [fp, #-12]
   3d7cc:	cmp	r3, #0
   3d7d0:	beq	3d80c <__assert_fail@plt+0x2b120>
   3d7d4:	ldr	r1, [fp, #4]
   3d7d8:	ldr	r0, [fp, #-12]
   3d7dc:	bl	63780 <__assert_fail@plt+0x51094>
   3d7e0:	mov	r3, r0
   3d7e4:	str	r3, [fp, #-16]
   3d7e8:	ldr	r3, [fp, #-12]
   3d7ec:	ldr	r1, [fp, #4]
   3d7f0:	mov	r0, r3
   3d7f4:	bl	639a0 <__assert_fail@plt+0x512b4>
   3d7f8:	mov	r3, r1
   3d7fc:	mov	r2, r3
   3d800:	ldr	r3, [fp, #-12]
   3d804:	sub	r3, r3, r2
   3d808:	str	r3, [fp, #-20]	; 0xffffffec
   3d80c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d810:	cmp	r3, #0
   3d814:	bne	3d824 <__assert_fail@plt+0x2b138>
   3d818:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d81c:	mov	r2, #0
   3d820:	str	r2, [r3]
   3d824:	ldr	r2, [fp, #-16]
   3d828:	ldr	r3, [fp, #-8]
   3d82c:	sub	r2, r2, r3
   3d830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d834:	cmp	r2, r3
   3d838:	bge	3da70 <__assert_fail@plt+0x2b384>
   3d83c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d840:	cmp	r3, #0
   3d844:	bge	3d868 <__assert_fail@plt+0x2b17c>
   3d848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d84c:	rsb	r2, r3, #-2147483648	; 0x80000000
   3d850:	ldr	r3, [fp, #-8]
   3d854:	cmp	r2, r3
   3d858:	movgt	r3, #1
   3d85c:	movle	r3, #0
   3d860:	uxtb	r3, r3
   3d864:	b	3d8b4 <__assert_fail@plt+0x2b1c8>
   3d868:	ldr	r3, [fp, #-8]
   3d86c:	cmp	r3, #0
   3d870:	bge	3d894 <__assert_fail@plt+0x2b1a8>
   3d874:	ldr	r3, [fp, #-8]
   3d878:	rsb	r2, r3, #-2147483648	; 0x80000000
   3d87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d880:	cmp	r2, r3
   3d884:	movgt	r3, #1
   3d888:	movle	r3, #0
   3d88c:	uxtb	r3, r3
   3d890:	b	3d8b4 <__assert_fail@plt+0x2b1c8>
   3d894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d898:	mvn	r3, #-2147483648	; 0x80000000
   3d89c:	sub	r3, r3, r2
   3d8a0:	ldr	r2, [fp, #-8]
   3d8a4:	cmp	r3, r2
   3d8a8:	movlt	r3, #1
   3d8ac:	movge	r3, #0
   3d8b0:	uxtb	r3, r3
   3d8b4:	cmp	r3, #0
   3d8b8:	beq	3d8d0 <__assert_fail@plt+0x2b1e4>
   3d8bc:	ldr	r2, [fp, #-8]
   3d8c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d8c4:	add	r3, r2, r3
   3d8c8:	str	r3, [fp, #-16]
   3d8cc:	b	3da6c <__assert_fail@plt+0x2b380>
   3d8d0:	ldr	r2, [fp, #-8]
   3d8d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d8d8:	add	r3, r2, r3
   3d8dc:	str	r3, [fp, #-16]
   3d8e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d8e4:	cmp	r3, #0
   3d8e8:	blt	3d8fc <__assert_fail@plt+0x2b210>
   3d8ec:	ldr	r3, [fp, #-16]
   3d8f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d8f4:	cmp	r2, r3
   3d8f8:	blt	3da6c <__assert_fail@plt+0x2b380>
   3d8fc:	ldr	r3, [fp, #4]
   3d900:	cmp	r3, #0
   3d904:	bge	3d994 <__assert_fail@plt+0x2b2a8>
   3d908:	ldr	r3, [fp, #-16]
   3d90c:	cmp	r3, #0
   3d910:	bge	3d940 <__assert_fail@plt+0x2b254>
   3d914:	ldr	r1, [fp, #4]
   3d918:	mvn	r0, #-2147483648	; 0x80000000
   3d91c:	bl	63780 <__assert_fail@plt+0x51094>
   3d920:	mov	r3, r0
   3d924:	mov	r2, r3
   3d928:	ldr	r3, [fp, #-16]
   3d92c:	cmp	r2, r3
   3d930:	movgt	r3, #1
   3d934:	movle	r3, #0
   3d938:	uxtb	r3, r3
   3d93c:	b	3da34 <__assert_fail@plt+0x2b348>
   3d940:	ldr	r3, [fp, #4]
   3d944:	cmn	r3, #1
   3d948:	bne	3d968 <__assert_fail@plt+0x2b27c>
   3d94c:	ldr	r3, [fp, #-16]
   3d950:	add	r3, r3, #-2147483648	; 0x80000000
   3d954:	cmp	r3, #0
   3d958:	movgt	r3, #1
   3d95c:	movle	r3, #0
   3d960:	uxtb	r3, r3
   3d964:	b	3da34 <__assert_fail@plt+0x2b348>
   3d968:	ldr	r1, [fp, #4]
   3d96c:	mov	r0, #-2147483648	; 0x80000000
   3d970:	bl	63780 <__assert_fail@plt+0x51094>
   3d974:	mov	r3, r0
   3d978:	mov	r2, r3
   3d97c:	ldr	r3, [fp, #-16]
   3d980:	cmp	r2, r3
   3d984:	movlt	r3, #1
   3d988:	movge	r3, #0
   3d98c:	uxtb	r3, r3
   3d990:	b	3da34 <__assert_fail@plt+0x2b348>
   3d994:	ldr	r3, [fp, #4]
   3d998:	cmp	r3, #0
   3d99c:	beq	3da30 <__assert_fail@plt+0x2b344>
   3d9a0:	ldr	r3, [fp, #-16]
   3d9a4:	cmp	r3, #0
   3d9a8:	bge	3da04 <__assert_fail@plt+0x2b318>
   3d9ac:	ldr	r3, [fp, #-16]
   3d9b0:	cmn	r3, #1
   3d9b4:	bne	3d9d4 <__assert_fail@plt+0x2b2e8>
   3d9b8:	ldr	r3, [fp, #4]
   3d9bc:	add	r3, r3, #-2147483648	; 0x80000000
   3d9c0:	cmp	r3, #0
   3d9c4:	movgt	r3, #1
   3d9c8:	movle	r3, #0
   3d9cc:	uxtb	r3, r3
   3d9d0:	b	3da34 <__assert_fail@plt+0x2b348>
   3d9d4:	ldr	r3, [fp, #-16]
   3d9d8:	mov	r1, r3
   3d9dc:	mov	r0, #-2147483648	; 0x80000000
   3d9e0:	bl	63780 <__assert_fail@plt+0x51094>
   3d9e4:	mov	r3, r0
   3d9e8:	mov	r2, r3
   3d9ec:	ldr	r3, [fp, #4]
   3d9f0:	cmp	r2, r3
   3d9f4:	movlt	r3, #1
   3d9f8:	movge	r3, #0
   3d9fc:	uxtb	r3, r3
   3da00:	b	3da34 <__assert_fail@plt+0x2b348>
   3da04:	ldr	r1, [fp, #4]
   3da08:	mvn	r0, #-2147483648	; 0x80000000
   3da0c:	bl	63780 <__assert_fail@plt+0x51094>
   3da10:	mov	r3, r0
   3da14:	mov	r2, r3
   3da18:	ldr	r3, [fp, #-16]
   3da1c:	cmp	r2, r3
   3da20:	movlt	r3, #1
   3da24:	movge	r3, #0
   3da28:	uxtb	r3, r3
   3da2c:	b	3da34 <__assert_fail@plt+0x2b348>
   3da30:	mov	r3, #0
   3da34:	cmp	r3, #0
   3da38:	beq	3da54 <__assert_fail@plt+0x2b368>
   3da3c:	ldr	r3, [fp, #-16]
   3da40:	mov	r2, r3
   3da44:	ldr	r3, [fp, #4]
   3da48:	mul	r3, r3, r2
   3da4c:	str	r3, [fp, #-20]	; 0xffffffec
   3da50:	b	3da6c <__assert_fail@plt+0x2b380>
   3da54:	ldr	r3, [fp, #-16]
   3da58:	mov	r2, r3
   3da5c:	ldr	r3, [fp, #4]
   3da60:	mul	r3, r3, r2
   3da64:	str	r3, [fp, #-20]	; 0xffffffec
   3da68:	b	3da70 <__assert_fail@plt+0x2b384>
   3da6c:	bl	3dc94 <__assert_fail@plt+0x2b5a8>
   3da70:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da74:	mov	r1, r3
   3da78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da7c:	bl	3d208 <__assert_fail@plt+0x2ab1c>
   3da80:	str	r0, [fp, #-24]	; 0xffffffe8
   3da84:	ldr	r2, [fp, #-16]
   3da88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3da8c:	str	r2, [r3]
   3da90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da94:	mov	r0, r3
   3da98:	sub	sp, fp, #4
   3da9c:	pop	{fp, pc}
   3daa0:	push	{fp, lr}
   3daa4:	add	fp, sp, #4
   3daa8:	sub	sp, sp, #8
   3daac:	str	r0, [fp, #-8]
   3dab0:	mov	r1, #1
   3dab4:	ldr	r0, [fp, #-8]
   3dab8:	bl	3daf8 <__assert_fail@plt+0x2b40c>
   3dabc:	mov	r3, r0
   3dac0:	mov	r0, r3
   3dac4:	sub	sp, fp, #4
   3dac8:	pop	{fp, pc}
   3dacc:	push	{fp, lr}
   3dad0:	add	fp, sp, #4
   3dad4:	sub	sp, sp, #8
   3dad8:	str	r0, [fp, #-8]
   3dadc:	mov	r1, #1
   3dae0:	ldr	r0, [fp, #-8]
   3dae4:	bl	3db34 <__assert_fail@plt+0x2b448>
   3dae8:	mov	r3, r0
   3daec:	mov	r0, r3
   3daf0:	sub	sp, fp, #4
   3daf4:	pop	{fp, pc}
   3daf8:	push	{fp, lr}
   3dafc:	add	fp, sp, #4
   3db00:	sub	sp, sp, #8
   3db04:	str	r0, [fp, #-8]
   3db08:	str	r1, [fp, #-12]
   3db0c:	ldr	r1, [fp, #-12]
   3db10:	ldr	r0, [fp, #-8]
   3db14:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   3db18:	mov	r3, r0
   3db1c:	mov	r0, r3
   3db20:	bl	3d148 <__assert_fail@plt+0x2aa5c>
   3db24:	mov	r3, r0
   3db28:	mov	r0, r3
   3db2c:	sub	sp, fp, #4
   3db30:	pop	{fp, pc}
   3db34:	push	{fp, lr}
   3db38:	add	fp, sp, #4
   3db3c:	sub	sp, sp, #8
   3db40:	str	r0, [fp, #-8]
   3db44:	str	r1, [fp, #-12]
   3db48:	ldr	r1, [fp, #-12]
   3db4c:	ldr	r0, [fp, #-8]
   3db50:	bl	601ec <__assert_fail@plt+0x4db00>
   3db54:	mov	r3, r0
   3db58:	mov	r0, r3
   3db5c:	bl	3d148 <__assert_fail@plt+0x2aa5c>
   3db60:	mov	r3, r0
   3db64:	mov	r0, r3
   3db68:	sub	sp, fp, #4
   3db6c:	pop	{fp, pc}
   3db70:	push	{fp, lr}
   3db74:	add	fp, sp, #4
   3db78:	sub	sp, sp, #8
   3db7c:	str	r0, [fp, #-8]
   3db80:	str	r1, [fp, #-12]
   3db84:	ldr	r0, [fp, #-12]
   3db88:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   3db8c:	mov	r3, r0
   3db90:	ldr	r2, [fp, #-12]
   3db94:	ldr	r1, [fp, #-8]
   3db98:	mov	r0, r3
   3db9c:	bl	120f8 <memcpy@plt>
   3dba0:	mov	r3, r0
   3dba4:	mov	r0, r3
   3dba8:	sub	sp, fp, #4
   3dbac:	pop	{fp, pc}
   3dbb0:	push	{fp, lr}
   3dbb4:	add	fp, sp, #4
   3dbb8:	sub	sp, sp, #8
   3dbbc:	str	r0, [fp, #-8]
   3dbc0:	str	r1, [fp, #-12]
   3dbc4:	ldr	r0, [fp, #-12]
   3dbc8:	bl	3d1ac <__assert_fail@plt+0x2aac0>
   3dbcc:	mov	r3, r0
   3dbd0:	mov	r0, r3
   3dbd4:	ldr	r3, [fp, #-12]
   3dbd8:	mov	r2, r3
   3dbdc:	ldr	r1, [fp, #-8]
   3dbe0:	bl	120f8 <memcpy@plt>
   3dbe4:	mov	r3, r0
   3dbe8:	mov	r0, r3
   3dbec:	sub	sp, fp, #4
   3dbf0:	pop	{fp, pc}
   3dbf4:	push	{fp, lr}
   3dbf8:	add	fp, sp, #4
   3dbfc:	sub	sp, sp, #16
   3dc00:	str	r0, [fp, #-16]
   3dc04:	str	r1, [fp, #-20]	; 0xffffffec
   3dc08:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dc0c:	add	r3, r3, #1
   3dc10:	mov	r0, r3
   3dc14:	bl	3d1ac <__assert_fail@plt+0x2aac0>
   3dc18:	mov	r3, r0
   3dc1c:	str	r3, [fp, #-8]
   3dc20:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dc24:	ldr	r2, [fp, #-8]
   3dc28:	add	r3, r2, r3
   3dc2c:	mov	r2, #0
   3dc30:	strb	r2, [r3]
   3dc34:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dc38:	mov	r2, r3
   3dc3c:	ldr	r1, [fp, #-16]
   3dc40:	ldr	r0, [fp, #-8]
   3dc44:	bl	120f8 <memcpy@plt>
   3dc48:	mov	r3, r0
   3dc4c:	mov	r0, r3
   3dc50:	sub	sp, fp, #4
   3dc54:	pop	{fp, pc}
   3dc58:	push	{fp, lr}
   3dc5c:	add	fp, sp, #4
   3dc60:	sub	sp, sp, #8
   3dc64:	str	r0, [fp, #-8]
   3dc68:	ldr	r0, [fp, #-8]
   3dc6c:	bl	123bc <strlen@plt>
   3dc70:	mov	r3, r0
   3dc74:	add	r3, r3, #1
   3dc78:	mov	r1, r3
   3dc7c:	ldr	r0, [fp, #-8]
   3dc80:	bl	3db70 <__assert_fail@plt+0x2b484>
   3dc84:	mov	r3, r0
   3dc88:	mov	r0, r3
   3dc8c:	sub	sp, fp, #4
   3dc90:	pop	{fp, pc}
   3dc94:	push	{r4, r5, fp, lr}
   3dc98:	add	fp, sp, #12
   3dc9c:	ldr	r3, [pc, #32]	; 3dcc4 <__assert_fail@plt+0x2b5d8>
   3dca0:	ldr	r4, [r3]
   3dca4:	ldr	r0, [pc, #28]	; 3dcc8 <__assert_fail@plt+0x2b5dc>
   3dca8:	bl	12398 <gettext@plt>
   3dcac:	mov	r3, r0
   3dcb0:	ldr	r2, [pc, #20]	; 3dccc <__assert_fail@plt+0x2b5e0>
   3dcb4:	mov	r1, #0
   3dcb8:	mov	r0, r4
   3dcbc:	bl	122b4 <error@plt>
   3dcc0:	bl	12698 <abort@plt>
   3dcc4:	andeq	ip, r7, ip, asr #13
   3dcc8:	muleq	r6, r8, sl
   3dccc:	andeq	sl, r6, ip, lsr #21
   3dcd0:	push	{fp, lr}
   3dcd4:	add	fp, sp, #4
   3dcd8:	sub	sp, sp, #40	; 0x28
   3dcdc:	str	r0, [fp, #-32]	; 0xffffffe0
   3dce0:	str	r1, [fp, #-36]	; 0xffffffdc
   3dce4:	str	r2, [fp, #-40]	; 0xffffffd8
   3dce8:	str	r3, [fp, #-44]	; 0xffffffd4
   3dcec:	mov	r3, #1
   3dcf0:	strb	r3, [fp, #-5]
   3dcf4:	bl	12404 <__errno_location@plt>
   3dcf8:	mov	r2, r0
   3dcfc:	mov	r3, #0
   3dd00:	str	r3, [r2]
   3dd04:	sub	r2, fp, #24
   3dd08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3dd0c:	mov	r1, r2
   3dd10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3dd14:	blx	r3
   3dd18:	vstr	d0, [fp, #-20]	; 0xffffffec
   3dd1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3dd20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dd24:	cmp	r2, r3
   3dd28:	beq	3dd48 <__assert_fail@plt+0x2b65c>
   3dd2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd30:	cmp	r3, #0
   3dd34:	bne	3dd54 <__assert_fail@plt+0x2b668>
   3dd38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dd3c:	ldrb	r3, [r3]
   3dd40:	cmp	r3, #0
   3dd44:	beq	3dd54 <__assert_fail@plt+0x2b668>
   3dd48:	mov	r3, #0
   3dd4c:	strb	r3, [fp, #-5]
   3dd50:	b	3dd80 <__assert_fail@plt+0x2b694>
   3dd54:	vldr	d7, [fp, #-20]	; 0xffffffec
   3dd58:	vcmp.f64	d7, #0.0
   3dd5c:	vmrs	APSR_nzcv, fpscr
   3dd60:	beq	3dd80 <__assert_fail@plt+0x2b694>
   3dd64:	bl	12404 <__errno_location@plt>
   3dd68:	mov	r3, r0
   3dd6c:	ldr	r3, [r3]
   3dd70:	cmp	r3, #34	; 0x22
   3dd74:	bne	3dd80 <__assert_fail@plt+0x2b694>
   3dd78:	mov	r3, #0
   3dd7c:	strb	r3, [fp, #-5]
   3dd80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd84:	cmp	r3, #0
   3dd88:	beq	3dd98 <__assert_fail@plt+0x2b6ac>
   3dd8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3dd90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd94:	str	r2, [r3]
   3dd98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3dd9c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3dda0:	strd	r2, [r1]
   3dda4:	ldrb	r3, [fp, #-5]
   3dda8:	mov	r0, r3
   3ddac:	sub	sp, fp, #4
   3ddb0:	pop	{fp, pc}
   3ddb4:	push	{fp, lr}
   3ddb8:	add	fp, sp, #4
   3ddbc:	sub	sp, sp, #8
   3ddc0:	str	r0, [fp, #-8]
   3ddc4:	str	r1, [fp, #-12]
   3ddc8:	ldr	r3, [fp, #-12]
   3ddcc:	mov	r1, r3
   3ddd0:	mvn	r0, #0
   3ddd4:	bl	63574 <__assert_fail@plt+0x50e88>
   3ddd8:	mov	r3, r0
   3dddc:	mov	r2, r3
   3dde0:	ldr	r3, [fp, #-8]
   3dde4:	ldr	r3, [r3]
   3dde8:	cmp	r2, r3
   3ddec:	bcs	3de04 <__assert_fail@plt+0x2b718>
   3ddf0:	ldr	r3, [fp, #-8]
   3ddf4:	mvn	r2, #0
   3ddf8:	str	r2, [r3]
   3ddfc:	mov	r3, #1
   3de00:	b	3de20 <__assert_fail@plt+0x2b734>
   3de04:	ldr	r3, [fp, #-8]
   3de08:	ldr	r3, [r3]
   3de0c:	ldr	r2, [fp, #-12]
   3de10:	mul	r2, r2, r3
   3de14:	ldr	r3, [fp, #-8]
   3de18:	str	r2, [r3]
   3de1c:	mov	r3, #0
   3de20:	mov	r0, r3
   3de24:	sub	sp, fp, #4
   3de28:	pop	{fp, pc}
   3de2c:	push	{fp, lr}
   3de30:	add	fp, sp, #4
   3de34:	sub	sp, sp, #24
   3de38:	str	r0, [fp, #-16]
   3de3c:	str	r1, [fp, #-20]	; 0xffffffec
   3de40:	str	r2, [fp, #-24]	; 0xffffffe8
   3de44:	mov	r3, #0
   3de48:	str	r3, [fp, #-8]
   3de4c:	b	3de6c <__assert_fail@plt+0x2b780>
   3de50:	ldr	r1, [fp, #-20]	; 0xffffffec
   3de54:	ldr	r0, [fp, #-16]
   3de58:	bl	3ddb4 <__assert_fail@plt+0x2b6c8>
   3de5c:	mov	r2, r0
   3de60:	ldr	r3, [fp, #-8]
   3de64:	orr	r3, r3, r2
   3de68:	str	r3, [fp, #-8]
   3de6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3de70:	sub	r2, r3, #1
   3de74:	str	r2, [fp, #-24]	; 0xffffffe8
   3de78:	cmp	r3, #0
   3de7c:	bne	3de50 <__assert_fail@plt+0x2b764>
   3de80:	ldr	r3, [fp, #-8]
   3de84:	mov	r0, r3
   3de88:	sub	sp, fp, #4
   3de8c:	pop	{fp, pc}
   3de90:	push	{fp, lr}
   3de94:	add	fp, sp, #4
   3de98:	sub	sp, sp, #56	; 0x38
   3de9c:	str	r0, [fp, #-48]	; 0xffffffd0
   3dea0:	str	r1, [fp, #-52]	; 0xffffffcc
   3dea4:	str	r2, [fp, #-56]	; 0xffffffc8
   3dea8:	str	r3, [fp, #-60]	; 0xffffffc4
   3deac:	mov	r3, #0
   3deb0:	str	r3, [fp, #-8]
   3deb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3deb8:	cmp	r3, #0
   3debc:	blt	3decc <__assert_fail@plt+0x2b7e0>
   3dec0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3dec4:	cmp	r3, #36	; 0x24
   3dec8:	ble	3dee0 <__assert_fail@plt+0x2b7f4>
   3decc:	ldr	r3, [pc, #1512]	; 3e4bc <__assert_fail@plt+0x2bdd0>
   3ded0:	mov	r2, #84	; 0x54
   3ded4:	ldr	r1, [pc, #1508]	; 3e4c0 <__assert_fail@plt+0x2bdd4>
   3ded8:	ldr	r0, [pc, #1508]	; 3e4c4 <__assert_fail@plt+0x2bdd8>
   3dedc:	bl	126ec <__assert_fail@plt>
   3dee0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3dee4:	cmp	r3, #0
   3dee8:	bne	3def4 <__assert_fail@plt+0x2b808>
   3deec:	sub	r3, fp, #36	; 0x24
   3def0:	b	3def8 <__assert_fail@plt+0x2b80c>
   3def4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3def8:	str	r3, [fp, #-32]	; 0xffffffe0
   3defc:	bl	12404 <__errno_location@plt>
   3df00:	mov	r2, r0
   3df04:	mov	r3, #0
   3df08:	str	r3, [r2]
   3df0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3df10:	str	r3, [fp, #-12]
   3df14:	ldr	r3, [fp, #-12]
   3df18:	ldrb	r3, [r3]
   3df1c:	strb	r3, [fp, #-13]
   3df20:	b	3df3c <__assert_fail@plt+0x2b850>
   3df24:	ldr	r3, [fp, #-12]
   3df28:	add	r3, r3, #1
   3df2c:	str	r3, [fp, #-12]
   3df30:	ldr	r3, [fp, #-12]
   3df34:	ldrb	r3, [r3]
   3df38:	strb	r3, [fp, #-13]
   3df3c:	bl	12368 <__ctype_b_loc@plt>
   3df40:	mov	r3, r0
   3df44:	ldr	r2, [r3]
   3df48:	ldrb	r3, [fp, #-13]
   3df4c:	lsl	r3, r3, #1
   3df50:	add	r3, r2, r3
   3df54:	ldrh	r3, [r3]
   3df58:	and	r3, r3, #8192	; 0x2000
   3df5c:	cmp	r3, #0
   3df60:	bne	3df24 <__assert_fail@plt+0x2b838>
   3df64:	ldrb	r3, [fp, #-13]
   3df68:	cmp	r3, #45	; 0x2d
   3df6c:	bne	3df78 <__assert_fail@plt+0x2b88c>
   3df70:	mov	r3, #4
   3df74:	b	3e4b0 <__assert_fail@plt+0x2bdc4>
   3df78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3df7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3df80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3df84:	bl	123b0 <strtoul@plt>
   3df88:	mov	r3, r0
   3df8c:	str	r3, [fp, #-40]	; 0xffffffd8
   3df90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3df94:	ldr	r2, [r3]
   3df98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3df9c:	cmp	r2, r3
   3dfa0:	bne	3dffc <__assert_fail@plt+0x2b910>
   3dfa4:	ldr	r3, [fp, #4]
   3dfa8:	cmp	r3, #0
   3dfac:	beq	3dff4 <__assert_fail@plt+0x2b908>
   3dfb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dfb4:	ldr	r3, [r3]
   3dfb8:	ldrb	r3, [r3]
   3dfbc:	cmp	r3, #0
   3dfc0:	beq	3dff4 <__assert_fail@plt+0x2b908>
   3dfc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dfc8:	ldr	r3, [r3]
   3dfcc:	ldrb	r3, [r3]
   3dfd0:	mov	r1, r3
   3dfd4:	ldr	r0, [fp, #4]
   3dfd8:	bl	123c8 <strchr@plt>
   3dfdc:	mov	r3, r0
   3dfe0:	cmp	r3, #0
   3dfe4:	beq	3dff4 <__assert_fail@plt+0x2b908>
   3dfe8:	mov	r3, #1
   3dfec:	str	r3, [fp, #-40]	; 0xffffffd8
   3dff0:	b	3e034 <__assert_fail@plt+0x2b948>
   3dff4:	mov	r3, #4
   3dff8:	b	3e4b0 <__assert_fail@plt+0x2bdc4>
   3dffc:	bl	12404 <__errno_location@plt>
   3e000:	mov	r3, r0
   3e004:	ldr	r3, [r3]
   3e008:	cmp	r3, #0
   3e00c:	beq	3e034 <__assert_fail@plt+0x2b948>
   3e010:	bl	12404 <__errno_location@plt>
   3e014:	mov	r3, r0
   3e018:	ldr	r3, [r3]
   3e01c:	cmp	r3, #34	; 0x22
   3e020:	beq	3e02c <__assert_fail@plt+0x2b940>
   3e024:	mov	r3, #4
   3e028:	b	3e4b0 <__assert_fail@plt+0x2bdc4>
   3e02c:	mov	r3, #1
   3e030:	str	r3, [fp, #-8]
   3e034:	ldr	r3, [fp, #4]
   3e038:	cmp	r3, #0
   3e03c:	bne	3e054 <__assert_fail@plt+0x2b968>
   3e040:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e044:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e048:	str	r2, [r3]
   3e04c:	ldr	r3, [fp, #-8]
   3e050:	b	3e4b0 <__assert_fail@plt+0x2bdc4>
   3e054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e058:	ldr	r3, [r3]
   3e05c:	ldrb	r3, [r3]
   3e060:	cmp	r3, #0
   3e064:	beq	3e4a0 <__assert_fail@plt+0x2bdb4>
   3e068:	mov	r3, #1024	; 0x400
   3e06c:	str	r3, [fp, #-20]	; 0xffffffec
   3e070:	mov	r3, #1
   3e074:	str	r3, [fp, #-24]	; 0xffffffe8
   3e078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e07c:	ldr	r3, [r3]
   3e080:	ldrb	r3, [r3]
   3e084:	mov	r1, r3
   3e088:	ldr	r0, [fp, #4]
   3e08c:	bl	123c8 <strchr@plt>
   3e090:	mov	r3, r0
   3e094:	cmp	r3, #0
   3e098:	bne	3e0b4 <__assert_fail@plt+0x2b9c8>
   3e09c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e0a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e0a4:	str	r2, [r3]
   3e0a8:	ldr	r3, [fp, #-8]
   3e0ac:	orr	r3, r3, #2
   3e0b0:	b	3e4b0 <__assert_fail@plt+0x2bdc4>
   3e0b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e0b8:	ldr	r3, [r3]
   3e0bc:	ldrb	r3, [r3]
   3e0c0:	sub	r3, r3, #69	; 0x45
   3e0c4:	cmp	r3, #47	; 0x2f
   3e0c8:	ldrls	pc, [pc, r3, lsl #2]
   3e0cc:	b	3e218 <__assert_fail@plt+0x2bb2c>
   3e0d0:	muleq	r3, r0, r1
   3e0d4:	andeq	lr, r3, r8, lsl r2
   3e0d8:	muleq	r3, r0, r1
   3e0dc:	andeq	lr, r3, r8, lsl r2
   3e0e0:	andeq	lr, r3, r8, lsl r2
   3e0e4:	andeq	lr, r3, r8, lsl r2
   3e0e8:	muleq	r3, r0, r1
   3e0ec:	andeq	lr, r3, r8, lsl r2
   3e0f0:	muleq	r3, r0, r1
   3e0f4:	andeq	lr, r3, r8, lsl r2
   3e0f8:	andeq	lr, r3, r8, lsl r2
   3e0fc:	muleq	r3, r0, r1
   3e100:	andeq	lr, r3, r8, lsl r2
   3e104:	andeq	lr, r3, r8, lsl r2
   3e108:	andeq	lr, r3, r8, lsl r2
   3e10c:	muleq	r3, r0, r1
   3e110:	andeq	lr, r3, r8, lsl r2
   3e114:	andeq	lr, r3, r8, lsl r2
   3e118:	andeq	lr, r3, r8, lsl r2
   3e11c:	andeq	lr, r3, r8, lsl r2
   3e120:	muleq	r3, r0, r1
   3e124:	muleq	r3, r0, r1
   3e128:	andeq	lr, r3, r8, lsl r2
   3e12c:	andeq	lr, r3, r8, lsl r2
   3e130:	andeq	lr, r3, r8, lsl r2
   3e134:	andeq	lr, r3, r8, lsl r2
   3e138:	andeq	lr, r3, r8, lsl r2
   3e13c:	andeq	lr, r3, r8, lsl r2
   3e140:	andeq	lr, r3, r8, lsl r2
   3e144:	andeq	lr, r3, r8, lsl r2
   3e148:	andeq	lr, r3, r8, lsl r2
   3e14c:	andeq	lr, r3, r8, lsl r2
   3e150:	andeq	lr, r3, r8, lsl r2
   3e154:	andeq	lr, r3, r8, lsl r2
   3e158:	muleq	r3, r0, r1
   3e15c:	andeq	lr, r3, r8, lsl r2
   3e160:	andeq	lr, r3, r8, lsl r2
   3e164:	andeq	lr, r3, r8, lsl r2
   3e168:	muleq	r3, r0, r1
   3e16c:	andeq	lr, r3, r8, lsl r2
   3e170:	muleq	r3, r0, r1
   3e174:	andeq	lr, r3, r8, lsl r2
   3e178:	andeq	lr, r3, r8, lsl r2
   3e17c:	andeq	lr, r3, r8, lsl r2
   3e180:	andeq	lr, r3, r8, lsl r2
   3e184:	andeq	lr, r3, r8, lsl r2
   3e188:	andeq	lr, r3, r8, lsl r2
   3e18c:	muleq	r3, r0, r1
   3e190:	mov	r1, #48	; 0x30
   3e194:	ldr	r0, [fp, #4]
   3e198:	bl	123c8 <strchr@plt>
   3e19c:	mov	r3, r0
   3e1a0:	cmp	r3, #0
   3e1a4:	beq	3e218 <__assert_fail@plt+0x2bb2c>
   3e1a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e1ac:	ldr	r3, [r3]
   3e1b0:	add	r3, r3, #1
   3e1b4:	ldrb	r3, [r3]
   3e1b8:	cmp	r3, #68	; 0x44
   3e1bc:	beq	3e1fc <__assert_fail@plt+0x2bb10>
   3e1c0:	cmp	r3, #105	; 0x69
   3e1c4:	beq	3e1d4 <__assert_fail@plt+0x2bae8>
   3e1c8:	cmp	r3, #66	; 0x42
   3e1cc:	beq	3e1fc <__assert_fail@plt+0x2bb10>
   3e1d0:	b	3e218 <__assert_fail@plt+0x2bb2c>
   3e1d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e1d8:	ldr	r3, [r3]
   3e1dc:	add	r3, r3, #2
   3e1e0:	ldrb	r3, [r3]
   3e1e4:	cmp	r3, #66	; 0x42
   3e1e8:	bne	3e214 <__assert_fail@plt+0x2bb28>
   3e1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e1f0:	add	r3, r3, #2
   3e1f4:	str	r3, [fp, #-24]	; 0xffffffe8
   3e1f8:	b	3e214 <__assert_fail@plt+0x2bb28>
   3e1fc:	mov	r3, #1000	; 0x3e8
   3e200:	str	r3, [fp, #-20]	; 0xffffffec
   3e204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e208:	add	r3, r3, #1
   3e20c:	str	r3, [fp, #-24]	; 0xffffffe8
   3e210:	b	3e218 <__assert_fail@plt+0x2bb2c>
   3e214:	nop			; (mov r0, r0)
   3e218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e21c:	ldr	r3, [r3]
   3e220:	ldrb	r3, [r3]
   3e224:	sub	r3, r3, #66	; 0x42
   3e228:	cmp	r3, #53	; 0x35
   3e22c:	ldrls	pc, [pc, r3, lsl #2]
   3e230:	b	3e440 <__assert_fail@plt+0x2bd54>
   3e234:	andeq	lr, r3, r4, lsr #6
   3e238:	andeq	lr, r3, r0, asr #8
   3e23c:	andeq	lr, r3, r0, asr #8
   3e240:	andeq	lr, r3, r8, asr #6
   3e244:	andeq	lr, r3, r0, asr #8
   3e248:	andeq	lr, r3, r4, ror #6
   3e24c:	andeq	lr, r3, r0, asr #8
   3e250:	andeq	lr, r3, r0, asr #8
   3e254:	andeq	lr, r3, r0, asr #8
   3e258:	andeq	lr, r3, r0, lsl #7
   3e25c:	andeq	lr, r3, r0, asr #8
   3e260:	muleq	r3, ip, r3
   3e264:	andeq	lr, r3, r0, asr #8
   3e268:	andeq	lr, r3, r0, asr #8
   3e26c:			; <UNDEFINED> instruction: 0x0003e3b8
   3e270:	andeq	lr, r3, r0, asr #8
   3e274:	andeq	lr, r3, r0, asr #8
   3e278:	andeq	lr, r3, r0, asr #8
   3e27c:	ldrdeq	lr, [r3], -r4
   3e280:	andeq	lr, r3, r0, asr #8
   3e284:	andeq	lr, r3, r0, asr #8
   3e288:	andeq	lr, r3, r0, asr #8
   3e28c:	andeq	lr, r3, r0, asr #8
   3e290:	andeq	lr, r3, r8, lsl #8
   3e294:	andeq	lr, r3, r4, lsr #8
   3e298:	andeq	lr, r3, r0, asr #8
   3e29c:	andeq	lr, r3, r0, asr #8
   3e2a0:	andeq	lr, r3, r0, asr #8
   3e2a4:	andeq	lr, r3, r0, asr #8
   3e2a8:	andeq	lr, r3, r0, asr #8
   3e2ac:	andeq	lr, r3, r0, asr #8
   3e2b0:	andeq	lr, r3, r0, asr #8
   3e2b4:	andeq	lr, r3, ip, lsl #6
   3e2b8:	andeq	lr, r3, ip, lsr r3
   3e2bc:	andeq	lr, r3, r0, asr #8
   3e2c0:	andeq	lr, r3, r0, asr #8
   3e2c4:	andeq	lr, r3, r0, asr #8
   3e2c8:	andeq	lr, r3, r4, ror #6
   3e2cc:	andeq	lr, r3, r0, asr #8
   3e2d0:	andeq	lr, r3, r0, asr #8
   3e2d4:	andeq	lr, r3, r0, asr #8
   3e2d8:	andeq	lr, r3, r0, lsl #7
   3e2dc:	andeq	lr, r3, r0, asr #8
   3e2e0:	muleq	r3, ip, r3
   3e2e4:	andeq	lr, r3, r0, asr #8
   3e2e8:	andeq	lr, r3, r0, asr #8
   3e2ec:	andeq	lr, r3, r0, asr #8
   3e2f0:	andeq	lr, r3, r0, asr #8
   3e2f4:	andeq	lr, r3, r0, asr #8
   3e2f8:	andeq	lr, r3, r0, asr #8
   3e2fc:	ldrdeq	lr, [r3], -r4
   3e300:	andeq	lr, r3, r0, asr #8
   3e304:	andeq	lr, r3, r0, asr #8
   3e308:	strdeq	lr, [r3], -r0
   3e30c:	sub	r3, fp, #40	; 0x28
   3e310:	mov	r1, #512	; 0x200
   3e314:	mov	r0, r3
   3e318:	bl	3ddb4 <__assert_fail@plt+0x2b6c8>
   3e31c:	str	r0, [fp, #-28]	; 0xffffffe4
   3e320:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e324:	sub	r3, fp, #40	; 0x28
   3e328:	mov	r1, #1024	; 0x400
   3e32c:	mov	r0, r3
   3e330:	bl	3ddb4 <__assert_fail@plt+0x2b6c8>
   3e334:	str	r0, [fp, #-28]	; 0xffffffe4
   3e338:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e33c:	mov	r3, #0
   3e340:	str	r3, [fp, #-28]	; 0xffffffe4
   3e344:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e348:	sub	r3, fp, #40	; 0x28
   3e34c:	mov	r2, #6
   3e350:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e354:	mov	r0, r3
   3e358:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e35c:	str	r0, [fp, #-28]	; 0xffffffe4
   3e360:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e364:	sub	r3, fp, #40	; 0x28
   3e368:	mov	r2, #3
   3e36c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e370:	mov	r0, r3
   3e374:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e378:	str	r0, [fp, #-28]	; 0xffffffe4
   3e37c:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e380:	sub	r3, fp, #40	; 0x28
   3e384:	mov	r2, #1
   3e388:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e38c:	mov	r0, r3
   3e390:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e394:	str	r0, [fp, #-28]	; 0xffffffe4
   3e398:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e39c:	sub	r3, fp, #40	; 0x28
   3e3a0:	mov	r2, #2
   3e3a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e3a8:	mov	r0, r3
   3e3ac:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e3b0:	str	r0, [fp, #-28]	; 0xffffffe4
   3e3b4:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e3b8:	sub	r3, fp, #40	; 0x28
   3e3bc:	mov	r2, #5
   3e3c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e3c4:	mov	r0, r3
   3e3c8:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e3cc:	str	r0, [fp, #-28]	; 0xffffffe4
   3e3d0:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e3d4:	sub	r3, fp, #40	; 0x28
   3e3d8:	mov	r2, #4
   3e3dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e3e0:	mov	r0, r3
   3e3e4:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e3e8:	str	r0, [fp, #-28]	; 0xffffffe4
   3e3ec:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e3f0:	sub	r3, fp, #40	; 0x28
   3e3f4:	mov	r1, #2
   3e3f8:	mov	r0, r3
   3e3fc:	bl	3ddb4 <__assert_fail@plt+0x2b6c8>
   3e400:	str	r0, [fp, #-28]	; 0xffffffe4
   3e404:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e408:	sub	r3, fp, #40	; 0x28
   3e40c:	mov	r2, #8
   3e410:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e414:	mov	r0, r3
   3e418:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e41c:	str	r0, [fp, #-28]	; 0xffffffe4
   3e420:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e424:	sub	r3, fp, #40	; 0x28
   3e428:	mov	r2, #7
   3e42c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e430:	mov	r0, r3
   3e434:	bl	3de2c <__assert_fail@plt+0x2b740>
   3e438:	str	r0, [fp, #-28]	; 0xffffffe4
   3e43c:	b	3e458 <__assert_fail@plt+0x2bd6c>
   3e440:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e444:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e448:	str	r2, [r3]
   3e44c:	ldr	r3, [fp, #-8]
   3e450:	orr	r3, r3, #2
   3e454:	b	3e4b0 <__assert_fail@plt+0x2bdc4>
   3e458:	ldr	r2, [fp, #-8]
   3e45c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e460:	orr	r3, r2, r3
   3e464:	str	r3, [fp, #-8]
   3e468:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e46c:	ldr	r2, [r3]
   3e470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e474:	add	r2, r2, r3
   3e478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e47c:	str	r2, [r3]
   3e480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e484:	ldr	r3, [r3]
   3e488:	ldrb	r3, [r3]
   3e48c:	cmp	r3, #0
   3e490:	beq	3e4a0 <__assert_fail@plt+0x2bdb4>
   3e494:	ldr	r3, [fp, #-8]
   3e498:	orr	r3, r3, #2
   3e49c:	str	r3, [fp, #-8]
   3e4a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e4a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e4a8:	str	r2, [r3]
   3e4ac:	ldr	r3, [fp, #-8]
   3e4b0:	mov	r0, r3
   3e4b4:	sub	sp, fp, #4
   3e4b8:	pop	{fp, pc}
   3e4bc:	andeq	sl, r6, r4, ror #21
   3e4c0:			; <UNDEFINED> instruction: 0x0006aab0
   3e4c4:			; <UNDEFINED> instruction: 0x0006aabc
   3e4c8:	push	{fp, lr}
   3e4cc:	add	fp, sp, #4
   3e4d0:	sub	sp, sp, #8
   3e4d4:	str	r0, [fp, #-8]
   3e4d8:	str	r1, [fp, #-12]
   3e4dc:	ldr	r3, [fp, #-12]
   3e4e0:	mov	r2, r3
   3e4e4:	asr	r3, r2, #31
   3e4e8:	mvn	r0, #0
   3e4ec:	mvn	r1, #0
   3e4f0:	bl	63e4c <__assert_fail@plt+0x51760>
   3e4f4:	mov	r2, r0
   3e4f8:	mov	r3, r1
   3e4fc:	mov	r0, r2
   3e500:	mov	r1, r3
   3e504:	ldr	r3, [fp, #-8]
   3e508:	ldrd	r2, [r3]
   3e50c:	cmp	r1, r3
   3e510:	cmpeq	r0, r2
   3e514:	bcs	3e530 <__assert_fail@plt+0x2be44>
   3e518:	ldr	r1, [fp, #-8]
   3e51c:	mvn	r2, #0
   3e520:	mvn	r3, #0
   3e524:	strd	r2, [r1]
   3e528:	mov	r3, #1
   3e52c:	b	3e568 <__assert_fail@plt+0x2be7c>
   3e530:	ldr	r3, [fp, #-8]
   3e534:	ldrd	r0, [r3]
   3e538:	ldr	r3, [fp, #-12]
   3e53c:	mov	r2, r3
   3e540:	asr	r3, r2, #31
   3e544:	mul	lr, r2, r1
   3e548:	mul	ip, r0, r3
   3e54c:	add	ip, lr, ip
   3e550:	umull	r2, r3, r0, r2
   3e554:	add	r1, ip, r3
   3e558:	mov	r3, r1
   3e55c:	ldr	r1, [fp, #-8]
   3e560:	strd	r2, [r1]
   3e564:	mov	r3, #0
   3e568:	mov	r0, r3
   3e56c:	sub	sp, fp, #4
   3e570:	pop	{fp, pc}
   3e574:	push	{fp, lr}
   3e578:	add	fp, sp, #4
   3e57c:	sub	sp, sp, #24
   3e580:	str	r0, [fp, #-16]
   3e584:	str	r1, [fp, #-20]	; 0xffffffec
   3e588:	str	r2, [fp, #-24]	; 0xffffffe8
   3e58c:	mov	r3, #0
   3e590:	str	r3, [fp, #-8]
   3e594:	b	3e5b4 <__assert_fail@plt+0x2bec8>
   3e598:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e59c:	ldr	r0, [fp, #-16]
   3e5a0:	bl	3e4c8 <__assert_fail@plt+0x2bddc>
   3e5a4:	mov	r2, r0
   3e5a8:	ldr	r3, [fp, #-8]
   3e5ac:	orr	r3, r3, r2
   3e5b0:	str	r3, [fp, #-8]
   3e5b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e5b8:	sub	r2, r3, #1
   3e5bc:	str	r2, [fp, #-24]	; 0xffffffe8
   3e5c0:	cmp	r3, #0
   3e5c4:	bne	3e598 <__assert_fail@plt+0x2beac>
   3e5c8:	ldr	r3, [fp, #-8]
   3e5cc:	mov	r0, r3
   3e5d0:	sub	sp, fp, #4
   3e5d4:	pop	{fp, pc}
   3e5d8:	push	{fp, lr}
   3e5dc:	add	fp, sp, #4
   3e5e0:	sub	sp, sp, #56	; 0x38
   3e5e4:	str	r0, [fp, #-48]	; 0xffffffd0
   3e5e8:	str	r1, [fp, #-52]	; 0xffffffcc
   3e5ec:	str	r2, [fp, #-56]	; 0xffffffc8
   3e5f0:	str	r3, [fp, #-60]	; 0xffffffc4
   3e5f4:	mov	r3, #0
   3e5f8:	str	r3, [fp, #-8]
   3e5fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e600:	cmp	r3, #0
   3e604:	blt	3e614 <__assert_fail@plt+0x2bf28>
   3e608:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e60c:	cmp	r3, #36	; 0x24
   3e610:	ble	3e628 <__assert_fail@plt+0x2bf3c>
   3e614:	ldr	r3, [pc, #1520]	; 3ec0c <__assert_fail@plt+0x2c520>
   3e618:	mov	r2, #84	; 0x54
   3e61c:	ldr	r1, [pc, #1516]	; 3ec10 <__assert_fail@plt+0x2c524>
   3e620:	ldr	r0, [pc, #1516]	; 3ec14 <__assert_fail@plt+0x2c528>
   3e624:	bl	126ec <__assert_fail@plt>
   3e628:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e62c:	cmp	r3, #0
   3e630:	bne	3e63c <__assert_fail@plt+0x2bf50>
   3e634:	sub	r3, fp, #36	; 0x24
   3e638:	b	3e640 <__assert_fail@plt+0x2bf54>
   3e63c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e640:	str	r3, [fp, #-32]	; 0xffffffe0
   3e644:	bl	12404 <__errno_location@plt>
   3e648:	mov	r2, r0
   3e64c:	mov	r3, #0
   3e650:	str	r3, [r2]
   3e654:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e658:	str	r3, [fp, #-12]
   3e65c:	ldr	r3, [fp, #-12]
   3e660:	ldrb	r3, [r3]
   3e664:	strb	r3, [fp, #-13]
   3e668:	b	3e684 <__assert_fail@plt+0x2bf98>
   3e66c:	ldr	r3, [fp, #-12]
   3e670:	add	r3, r3, #1
   3e674:	str	r3, [fp, #-12]
   3e678:	ldr	r3, [fp, #-12]
   3e67c:	ldrb	r3, [r3]
   3e680:	strb	r3, [fp, #-13]
   3e684:	bl	12368 <__ctype_b_loc@plt>
   3e688:	mov	r3, r0
   3e68c:	ldr	r2, [r3]
   3e690:	ldrb	r3, [fp, #-13]
   3e694:	lsl	r3, r3, #1
   3e698:	add	r3, r2, r3
   3e69c:	ldrh	r3, [r3]
   3e6a0:	and	r3, r3, #8192	; 0x2000
   3e6a4:	cmp	r3, #0
   3e6a8:	bne	3e66c <__assert_fail@plt+0x2bf80>
   3e6ac:	ldrb	r3, [fp, #-13]
   3e6b0:	cmp	r3, #45	; 0x2d
   3e6b4:	bne	3e6c0 <__assert_fail@plt+0x2bfd4>
   3e6b8:	mov	r3, #4
   3e6bc:	b	3ec00 <__assert_fail@plt+0x2c514>
   3e6c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3e6c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3e6c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3e6cc:	bl	124a0 <strtoumax@plt>
   3e6d0:	mov	r2, r0
   3e6d4:	mov	r3, r1
   3e6d8:	strd	r2, [fp, #-44]	; 0xffffffd4
   3e6dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e6e0:	ldr	r2, [r3]
   3e6e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e6e8:	cmp	r2, r3
   3e6ec:	bne	3e74c <__assert_fail@plt+0x2c060>
   3e6f0:	ldr	r3, [fp, #4]
   3e6f4:	cmp	r3, #0
   3e6f8:	beq	3e744 <__assert_fail@plt+0x2c058>
   3e6fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e700:	ldr	r3, [r3]
   3e704:	ldrb	r3, [r3]
   3e708:	cmp	r3, #0
   3e70c:	beq	3e744 <__assert_fail@plt+0x2c058>
   3e710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e714:	ldr	r3, [r3]
   3e718:	ldrb	r3, [r3]
   3e71c:	mov	r1, r3
   3e720:	ldr	r0, [fp, #4]
   3e724:	bl	123c8 <strchr@plt>
   3e728:	mov	r3, r0
   3e72c:	cmp	r3, #0
   3e730:	beq	3e744 <__assert_fail@plt+0x2c058>
   3e734:	mov	r2, #1
   3e738:	mov	r3, #0
   3e73c:	strd	r2, [fp, #-44]	; 0xffffffd4
   3e740:	b	3e784 <__assert_fail@plt+0x2c098>
   3e744:	mov	r3, #4
   3e748:	b	3ec00 <__assert_fail@plt+0x2c514>
   3e74c:	bl	12404 <__errno_location@plt>
   3e750:	mov	r3, r0
   3e754:	ldr	r3, [r3]
   3e758:	cmp	r3, #0
   3e75c:	beq	3e784 <__assert_fail@plt+0x2c098>
   3e760:	bl	12404 <__errno_location@plt>
   3e764:	mov	r3, r0
   3e768:	ldr	r3, [r3]
   3e76c:	cmp	r3, #34	; 0x22
   3e770:	beq	3e77c <__assert_fail@plt+0x2c090>
   3e774:	mov	r3, #4
   3e778:	b	3ec00 <__assert_fail@plt+0x2c514>
   3e77c:	mov	r3, #1
   3e780:	str	r3, [fp, #-8]
   3e784:	ldr	r3, [fp, #4]
   3e788:	cmp	r3, #0
   3e78c:	bne	3e7a4 <__assert_fail@plt+0x2c0b8>
   3e790:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3e794:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3e798:	strd	r2, [r1]
   3e79c:	ldr	r3, [fp, #-8]
   3e7a0:	b	3ec00 <__assert_fail@plt+0x2c514>
   3e7a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e7a8:	ldr	r3, [r3]
   3e7ac:	ldrb	r3, [r3]
   3e7b0:	cmp	r3, #0
   3e7b4:	beq	3ebf0 <__assert_fail@plt+0x2c504>
   3e7b8:	mov	r3, #1024	; 0x400
   3e7bc:	str	r3, [fp, #-20]	; 0xffffffec
   3e7c0:	mov	r3, #1
   3e7c4:	str	r3, [fp, #-24]	; 0xffffffe8
   3e7c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e7cc:	ldr	r3, [r3]
   3e7d0:	ldrb	r3, [r3]
   3e7d4:	mov	r1, r3
   3e7d8:	ldr	r0, [fp, #4]
   3e7dc:	bl	123c8 <strchr@plt>
   3e7e0:	mov	r3, r0
   3e7e4:	cmp	r3, #0
   3e7e8:	bne	3e804 <__assert_fail@plt+0x2c118>
   3e7ec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3e7f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3e7f4:	strd	r2, [r1]
   3e7f8:	ldr	r3, [fp, #-8]
   3e7fc:	orr	r3, r3, #2
   3e800:	b	3ec00 <__assert_fail@plt+0x2c514>
   3e804:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e808:	ldr	r3, [r3]
   3e80c:	ldrb	r3, [r3]
   3e810:	sub	r3, r3, #69	; 0x45
   3e814:	cmp	r3, #47	; 0x2f
   3e818:	ldrls	pc, [pc, r3, lsl #2]
   3e81c:	b	3e968 <__assert_fail@plt+0x2c27c>
   3e820:	andeq	lr, r3, r0, ror #17
   3e824:	andeq	lr, r3, r8, ror #18
   3e828:	andeq	lr, r3, r0, ror #17
   3e82c:	andeq	lr, r3, r8, ror #18
   3e830:	andeq	lr, r3, r8, ror #18
   3e834:	andeq	lr, r3, r8, ror #18
   3e838:	andeq	lr, r3, r0, ror #17
   3e83c:	andeq	lr, r3, r8, ror #18
   3e840:	andeq	lr, r3, r0, ror #17
   3e844:	andeq	lr, r3, r8, ror #18
   3e848:	andeq	lr, r3, r8, ror #18
   3e84c:	andeq	lr, r3, r0, ror #17
   3e850:	andeq	lr, r3, r8, ror #18
   3e854:	andeq	lr, r3, r8, ror #18
   3e858:	andeq	lr, r3, r8, ror #18
   3e85c:	andeq	lr, r3, r0, ror #17
   3e860:	andeq	lr, r3, r8, ror #18
   3e864:	andeq	lr, r3, r8, ror #18
   3e868:	andeq	lr, r3, r8, ror #18
   3e86c:	andeq	lr, r3, r8, ror #18
   3e870:	andeq	lr, r3, r0, ror #17
   3e874:	andeq	lr, r3, r0, ror #17
   3e878:	andeq	lr, r3, r8, ror #18
   3e87c:	andeq	lr, r3, r8, ror #18
   3e880:	andeq	lr, r3, r8, ror #18
   3e884:	andeq	lr, r3, r8, ror #18
   3e888:	andeq	lr, r3, r8, ror #18
   3e88c:	andeq	lr, r3, r8, ror #18
   3e890:	andeq	lr, r3, r8, ror #18
   3e894:	andeq	lr, r3, r8, ror #18
   3e898:	andeq	lr, r3, r8, ror #18
   3e89c:	andeq	lr, r3, r8, ror #18
   3e8a0:	andeq	lr, r3, r8, ror #18
   3e8a4:	andeq	lr, r3, r8, ror #18
   3e8a8:	andeq	lr, r3, r0, ror #17
   3e8ac:	andeq	lr, r3, r8, ror #18
   3e8b0:	andeq	lr, r3, r8, ror #18
   3e8b4:	andeq	lr, r3, r8, ror #18
   3e8b8:	andeq	lr, r3, r0, ror #17
   3e8bc:	andeq	lr, r3, r8, ror #18
   3e8c0:	andeq	lr, r3, r0, ror #17
   3e8c4:	andeq	lr, r3, r8, ror #18
   3e8c8:	andeq	lr, r3, r8, ror #18
   3e8cc:	andeq	lr, r3, r8, ror #18
   3e8d0:	andeq	lr, r3, r8, ror #18
   3e8d4:	andeq	lr, r3, r8, ror #18
   3e8d8:	andeq	lr, r3, r8, ror #18
   3e8dc:	andeq	lr, r3, r0, ror #17
   3e8e0:	mov	r1, #48	; 0x30
   3e8e4:	ldr	r0, [fp, #4]
   3e8e8:	bl	123c8 <strchr@plt>
   3e8ec:	mov	r3, r0
   3e8f0:	cmp	r3, #0
   3e8f4:	beq	3e968 <__assert_fail@plt+0x2c27c>
   3e8f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e8fc:	ldr	r3, [r3]
   3e900:	add	r3, r3, #1
   3e904:	ldrb	r3, [r3]
   3e908:	cmp	r3, #68	; 0x44
   3e90c:	beq	3e94c <__assert_fail@plt+0x2c260>
   3e910:	cmp	r3, #105	; 0x69
   3e914:	beq	3e924 <__assert_fail@plt+0x2c238>
   3e918:	cmp	r3, #66	; 0x42
   3e91c:	beq	3e94c <__assert_fail@plt+0x2c260>
   3e920:	b	3e968 <__assert_fail@plt+0x2c27c>
   3e924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e928:	ldr	r3, [r3]
   3e92c:	add	r3, r3, #2
   3e930:	ldrb	r3, [r3]
   3e934:	cmp	r3, #66	; 0x42
   3e938:	bne	3e964 <__assert_fail@plt+0x2c278>
   3e93c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e940:	add	r3, r3, #2
   3e944:	str	r3, [fp, #-24]	; 0xffffffe8
   3e948:	b	3e964 <__assert_fail@plt+0x2c278>
   3e94c:	mov	r3, #1000	; 0x3e8
   3e950:	str	r3, [fp, #-20]	; 0xffffffec
   3e954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e958:	add	r3, r3, #1
   3e95c:	str	r3, [fp, #-24]	; 0xffffffe8
   3e960:	b	3e968 <__assert_fail@plt+0x2c27c>
   3e964:	nop			; (mov r0, r0)
   3e968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e96c:	ldr	r3, [r3]
   3e970:	ldrb	r3, [r3]
   3e974:	sub	r3, r3, #66	; 0x42
   3e978:	cmp	r3, #53	; 0x35
   3e97c:	ldrls	pc, [pc, r3, lsl #2]
   3e980:	b	3eb90 <__assert_fail@plt+0x2c4a4>
   3e984:	andeq	lr, r3, r4, ror sl
   3e988:	muleq	r3, r0, fp
   3e98c:	muleq	r3, r0, fp
   3e990:	muleq	r3, r8, sl
   3e994:	muleq	r3, r0, fp
   3e998:			; <UNDEFINED> instruction: 0x0003eab4
   3e99c:	muleq	r3, r0, fp
   3e9a0:	muleq	r3, r0, fp
   3e9a4:	muleq	r3, r0, fp
   3e9a8:	ldrdeq	lr, [r3], -r0
   3e9ac:	muleq	r3, r0, fp
   3e9b0:	andeq	lr, r3, ip, ror #21
   3e9b4:	muleq	r3, r0, fp
   3e9b8:	muleq	r3, r0, fp
   3e9bc:	andeq	lr, r3, r8, lsl #22
   3e9c0:	muleq	r3, r0, fp
   3e9c4:	muleq	r3, r0, fp
   3e9c8:	muleq	r3, r0, fp
   3e9cc:	andeq	lr, r3, r4, lsr #22
   3e9d0:	muleq	r3, r0, fp
   3e9d4:	muleq	r3, r0, fp
   3e9d8:	muleq	r3, r0, fp
   3e9dc:	muleq	r3, r0, fp
   3e9e0:	andeq	lr, r3, r8, asr fp
   3e9e4:	andeq	lr, r3, r4, ror fp
   3e9e8:	muleq	r3, r0, fp
   3e9ec:	muleq	r3, r0, fp
   3e9f0:	muleq	r3, r0, fp
   3e9f4:	muleq	r3, r0, fp
   3e9f8:	muleq	r3, r0, fp
   3e9fc:	muleq	r3, r0, fp
   3ea00:	muleq	r3, r0, fp
   3ea04:	andeq	lr, r3, ip, asr sl
   3ea08:	andeq	lr, r3, ip, lsl #21
   3ea0c:	muleq	r3, r0, fp
   3ea10:	muleq	r3, r0, fp
   3ea14:	muleq	r3, r0, fp
   3ea18:			; <UNDEFINED> instruction: 0x0003eab4
   3ea1c:	muleq	r3, r0, fp
   3ea20:	muleq	r3, r0, fp
   3ea24:	muleq	r3, r0, fp
   3ea28:	ldrdeq	lr, [r3], -r0
   3ea2c:	muleq	r3, r0, fp
   3ea30:	andeq	lr, r3, ip, ror #21
   3ea34:	muleq	r3, r0, fp
   3ea38:	muleq	r3, r0, fp
   3ea3c:	muleq	r3, r0, fp
   3ea40:	muleq	r3, r0, fp
   3ea44:	muleq	r3, r0, fp
   3ea48:	muleq	r3, r0, fp
   3ea4c:	andeq	lr, r3, r4, lsr #22
   3ea50:	muleq	r3, r0, fp
   3ea54:	muleq	r3, r0, fp
   3ea58:	andeq	lr, r3, r0, asr #22
   3ea5c:	sub	r3, fp, #44	; 0x2c
   3ea60:	mov	r1, #512	; 0x200
   3ea64:	mov	r0, r3
   3ea68:	bl	3e4c8 <__assert_fail@plt+0x2bddc>
   3ea6c:	str	r0, [fp, #-28]	; 0xffffffe4
   3ea70:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3ea74:	sub	r3, fp, #44	; 0x2c
   3ea78:	mov	r1, #1024	; 0x400
   3ea7c:	mov	r0, r3
   3ea80:	bl	3e4c8 <__assert_fail@plt+0x2bddc>
   3ea84:	str	r0, [fp, #-28]	; 0xffffffe4
   3ea88:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3ea8c:	mov	r3, #0
   3ea90:	str	r3, [fp, #-28]	; 0xffffffe4
   3ea94:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3ea98:	sub	r3, fp, #44	; 0x2c
   3ea9c:	mov	r2, #6
   3eaa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eaa4:	mov	r0, r3
   3eaa8:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eaac:	str	r0, [fp, #-28]	; 0xffffffe4
   3eab0:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eab4:	sub	r3, fp, #44	; 0x2c
   3eab8:	mov	r2, #3
   3eabc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eac0:	mov	r0, r3
   3eac4:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eac8:	str	r0, [fp, #-28]	; 0xffffffe4
   3eacc:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3ead0:	sub	r3, fp, #44	; 0x2c
   3ead4:	mov	r2, #1
   3ead8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eadc:	mov	r0, r3
   3eae0:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eae4:	str	r0, [fp, #-28]	; 0xffffffe4
   3eae8:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eaec:	sub	r3, fp, #44	; 0x2c
   3eaf0:	mov	r2, #2
   3eaf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eaf8:	mov	r0, r3
   3eafc:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eb00:	str	r0, [fp, #-28]	; 0xffffffe4
   3eb04:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eb08:	sub	r3, fp, #44	; 0x2c
   3eb0c:	mov	r2, #5
   3eb10:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eb14:	mov	r0, r3
   3eb18:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eb1c:	str	r0, [fp, #-28]	; 0xffffffe4
   3eb20:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eb24:	sub	r3, fp, #44	; 0x2c
   3eb28:	mov	r2, #4
   3eb2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eb30:	mov	r0, r3
   3eb34:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eb38:	str	r0, [fp, #-28]	; 0xffffffe4
   3eb3c:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eb40:	sub	r3, fp, #44	; 0x2c
   3eb44:	mov	r1, #2
   3eb48:	mov	r0, r3
   3eb4c:	bl	3e4c8 <__assert_fail@plt+0x2bddc>
   3eb50:	str	r0, [fp, #-28]	; 0xffffffe4
   3eb54:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eb58:	sub	r3, fp, #44	; 0x2c
   3eb5c:	mov	r2, #8
   3eb60:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eb64:	mov	r0, r3
   3eb68:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eb6c:	str	r0, [fp, #-28]	; 0xffffffe4
   3eb70:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eb74:	sub	r3, fp, #44	; 0x2c
   3eb78:	mov	r2, #7
   3eb7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eb80:	mov	r0, r3
   3eb84:	bl	3e574 <__assert_fail@plt+0x2be88>
   3eb88:	str	r0, [fp, #-28]	; 0xffffffe4
   3eb8c:	b	3eba8 <__assert_fail@plt+0x2c4bc>
   3eb90:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3eb94:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3eb98:	strd	r2, [r1]
   3eb9c:	ldr	r3, [fp, #-8]
   3eba0:	orr	r3, r3, #2
   3eba4:	b	3ec00 <__assert_fail@plt+0x2c514>
   3eba8:	ldr	r2, [fp, #-8]
   3ebac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ebb0:	orr	r3, r2, r3
   3ebb4:	str	r3, [fp, #-8]
   3ebb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ebbc:	ldr	r2, [r3]
   3ebc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ebc4:	add	r2, r2, r3
   3ebc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ebcc:	str	r2, [r3]
   3ebd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ebd4:	ldr	r3, [r3]
   3ebd8:	ldrb	r3, [r3]
   3ebdc:	cmp	r3, #0
   3ebe0:	beq	3ebf0 <__assert_fail@plt+0x2c504>
   3ebe4:	ldr	r3, [fp, #-8]
   3ebe8:	orr	r3, r3, #2
   3ebec:	str	r3, [fp, #-8]
   3ebf0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3ebf4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3ebf8:	strd	r2, [r1]
   3ebfc:	ldr	r3, [fp, #-8]
   3ec00:	mov	r0, r3
   3ec04:	sub	sp, fp, #4
   3ec08:	pop	{fp, pc}
   3ec0c:	andeq	sl, r6, r4, lsr #22
   3ec10:	strdeq	sl, [r6], -r0
   3ec14:	strdeq	sl, [r6], -ip
   3ec18:	push	{fp, lr}
   3ec1c:	add	fp, sp, #4
   3ec20:	sub	sp, sp, #16
   3ec24:	mov	r3, #0
   3ec28:	str	r3, [fp, #-16]
   3ec2c:	mov	r3, #0
   3ec30:	str	r3, [fp, #-20]	; 0xffffffec
   3ec34:	ldr	r3, [pc, #156]	; 3ecd8 <__assert_fail@plt+0x2c5ec>
   3ec38:	ldr	r2, [r3]
   3ec3c:	sub	r1, fp, #20
   3ec40:	sub	r3, fp, #16
   3ec44:	mov	r0, r3
   3ec48:	bl	12638 <getline@plt>
   3ec4c:	str	r0, [fp, #-12]
   3ec50:	ldr	r3, [fp, #-12]
   3ec54:	cmp	r3, #0
   3ec58:	bgt	3ec68 <__assert_fail@plt+0x2c57c>
   3ec5c:	mov	r3, #0
   3ec60:	strb	r3, [fp, #-5]
   3ec64:	b	3ecbc <__assert_fail@plt+0x2c5d0>
   3ec68:	ldr	r2, [fp, #-16]
   3ec6c:	ldr	r3, [fp, #-12]
   3ec70:	sub	r3, r3, #1
   3ec74:	add	r3, r2, r3
   3ec78:	ldrb	r3, [r3]
   3ec7c:	cmp	r3, #10
   3ec80:	bne	3ec9c <__assert_fail@plt+0x2c5b0>
   3ec84:	ldr	r2, [fp, #-16]
   3ec88:	ldr	r3, [fp, #-12]
   3ec8c:	sub	r3, r3, #1
   3ec90:	add	r3, r2, r3
   3ec94:	mov	r2, #0
   3ec98:	strb	r2, [r3]
   3ec9c:	ldr	r3, [fp, #-16]
   3eca0:	mov	r0, r3
   3eca4:	bl	1250c <rpmatch@plt>
   3eca8:	mov	r3, r0
   3ecac:	cmp	r3, #0
   3ecb0:	movgt	r3, #1
   3ecb4:	movle	r3, #0
   3ecb8:	strb	r3, [fp, #-5]
   3ecbc:	ldr	r3, [fp, #-16]
   3ecc0:	mov	r0, r3
   3ecc4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3ecc8:	ldrb	r3, [fp, #-5]
   3eccc:	mov	r0, r3
   3ecd0:	sub	sp, fp, #4
   3ecd4:	pop	{fp, pc}
   3ecd8:	andeq	ip, r7, r0, lsr r7
   3ecdc:	push	{r4, r5, fp, lr}
   3ece0:	add	fp, sp, #12
   3ece4:	sub	sp, sp, #16
   3ece8:	str	r0, [fp, #-24]	; 0xffffffe8
   3ecec:	str	r1, [fp, #-28]	; 0xffffffe4
   3ecf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ecf4:	cmp	r3, #0
   3ecf8:	beq	3ed08 <__assert_fail@plt+0x2c61c>
   3ecfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ed00:	cmp	r3, #0
   3ed04:	bne	3ed18 <__assert_fail@plt+0x2c62c>
   3ed08:	mov	r3, #1
   3ed0c:	str	r3, [fp, #-28]	; 0xffffffe4
   3ed10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ed14:	str	r3, [fp, #-24]	; 0xffffffe8
   3ed18:	mov	r1, #0
   3ed1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ed20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ed24:	umull	r2, r3, r2, r3
   3ed28:	mov	r4, r3
   3ed2c:	mov	r5, #0
   3ed30:	cmp	r4, #0
   3ed34:	beq	3ed3c <__assert_fail@plt+0x2c650>
   3ed38:	mov	r1, #1
   3ed3c:	cmp	r2, #0
   3ed40:	bge	3ed48 <__assert_fail@plt+0x2c65c>
   3ed44:	mov	r1, #1
   3ed48:	mov	r3, r2
   3ed4c:	str	r3, [fp, #-20]	; 0xffffffec
   3ed50:	mov	r3, r1
   3ed54:	and	r3, r3, #1
   3ed58:	uxtb	r3, r3
   3ed5c:	cmp	r3, #0
   3ed60:	beq	3ed7c <__assert_fail@plt+0x2c690>
   3ed64:	bl	12404 <__errno_location@plt>
   3ed68:	mov	r2, r0
   3ed6c:	mov	r3, #12
   3ed70:	str	r3, [r2]
   3ed74:	mov	r3, #0
   3ed78:	b	3ed94 <__assert_fail@plt+0x2c6a8>
   3ed7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ed80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ed84:	bl	11f84 <calloc@plt>
   3ed88:	mov	r3, r0
   3ed8c:	str	r3, [fp, #-16]
   3ed90:	ldr	r3, [fp, #-16]
   3ed94:	mov	r0, r3
   3ed98:	sub	sp, fp, #12
   3ed9c:	pop	{r4, r5, fp, pc}
   3eda0:	push	{fp}		; (str fp, [sp, #-4]!)
   3eda4:	add	fp, sp, #0
   3eda8:	sub	sp, sp, #12
   3edac:	str	r0, [fp, #-8]
   3edb0:	ldr	r3, [fp, #-8]
   3edb4:	mvn	r2, #99	; 0x63
   3edb8:	str	r2, [r3]
   3edbc:	nop			; (mov r0, r0)
   3edc0:	add	sp, fp, #0
   3edc4:	pop	{fp}		; (ldr fp, [sp], #4)
   3edc8:	bx	lr
   3edcc:	push	{fp, lr}
   3edd0:	add	fp, sp, #4
   3edd4:	sub	sp, sp, #8
   3edd8:	str	r0, [fp, #-8]
   3eddc:	ldr	r3, [fp, #-8]
   3ede0:	ldr	r3, [r3]
   3ede4:	mov	r0, r3
   3ede8:	bl	125d8 <fchdir@plt>
   3edec:	mov	r3, r0
   3edf0:	mov	r0, r3
   3edf4:	sub	sp, fp, #4
   3edf8:	pop	{fp, pc}
   3edfc:	push	{fp, lr}
   3ee00:	add	fp, sp, #4
   3ee04:	sub	sp, sp, #16
   3ee08:	str	r0, [fp, #-16]
   3ee0c:	ldr	r3, [fp, #-16]
   3ee10:	ldr	r3, [r3]
   3ee14:	cmp	r3, #0
   3ee18:	blt	3ee68 <__assert_fail@plt+0x2c77c>
   3ee1c:	ldr	r3, [fp, #-16]
   3ee20:	ldr	r3, [r3]
   3ee24:	mov	r0, r3
   3ee28:	bl	126a4 <close@plt>
   3ee2c:	mov	r3, r0
   3ee30:	cmp	r3, #0
   3ee34:	movne	r3, #1
   3ee38:	moveq	r3, #0
   3ee3c:	strb	r3, [fp, #-5]
   3ee40:	ldrb	r3, [fp, #-5]
   3ee44:	eor	r3, r3, #1
   3ee48:	uxtb	r3, r3
   3ee4c:	cmp	r3, #0
   3ee50:	bne	3ee68 <__assert_fail@plt+0x2c77c>
   3ee54:	ldr	r3, [pc, #24]	; 3ee74 <__assert_fail@plt+0x2c788>
   3ee58:	mov	r2, #64	; 0x40
   3ee5c:	ldr	r1, [pc, #20]	; 3ee78 <__assert_fail@plt+0x2c78c>
   3ee60:	ldr	r0, [pc, #20]	; 3ee7c <__assert_fail@plt+0x2c790>
   3ee64:	bl	126ec <__assert_fail@plt>
   3ee68:	nop			; (mov r0, r0)
   3ee6c:	sub	sp, fp, #4
   3ee70:	pop	{fp, pc}
   3ee74:	muleq	r6, r8, fp
   3ee78:	andeq	sl, r6, r0, lsr fp
   3ee7c:	andeq	sl, r6, r0, asr #22
   3ee80:	push	{fp, lr}
   3ee84:	add	fp, sp, #4
   3ee88:	sub	sp, sp, #16
   3ee8c:	str	r0, [fp, #-16]
   3ee90:	str	r1, [fp, #-20]	; 0xffffffec
   3ee94:	ldr	r3, [fp, #-16]
   3ee98:	ldr	r3, [r3]
   3ee9c:	mov	r2, #18688	; 0x4900
   3eea0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eea4:	mov	r0, r3
   3eea8:	bl	123e0 <openat64@plt>
   3eeac:	str	r0, [fp, #-8]
   3eeb0:	ldr	r3, [fp, #-8]
   3eeb4:	cmp	r3, #0
   3eeb8:	bge	3eec4 <__assert_fail@plt+0x2c7d8>
   3eebc:	mvn	r3, #0
   3eec0:	b	3eedc <__assert_fail@plt+0x2c7f0>
   3eec4:	ldr	r0, [fp, #-16]
   3eec8:	bl	3edfc <__assert_fail@plt+0x2c710>
   3eecc:	ldr	r3, [fp, #-16]
   3eed0:	ldr	r2, [fp, #-8]
   3eed4:	str	r2, [r3]
   3eed8:	mov	r3, #0
   3eedc:	mov	r0, r3
   3eee0:	sub	sp, fp, #4
   3eee4:	pop	{fp, pc}
   3eee8:	push	{fp, lr}
   3eeec:	add	fp, sp, #4
   3eef0:	sub	sp, sp, #16
   3eef4:	str	r0, [fp, #-16]
   3eef8:	ldr	r1, [pc, #32]	; 3ef20 <__assert_fail@plt+0x2c834>
   3eefc:	ldr	r0, [fp, #-16]
   3ef00:	bl	126e0 <strspn@plt>
   3ef04:	str	r0, [fp, #-8]
   3ef08:	ldr	r2, [fp, #-16]
   3ef0c:	ldr	r3, [fp, #-8]
   3ef10:	add	r3, r2, r3
   3ef14:	mov	r0, r3
   3ef18:	sub	sp, fp, #4
   3ef1c:	pop	{fp, pc}
   3ef20:	andeq	sl, r6, r0, asr fp
   3ef24:	push	{fp, lr}
   3ef28:	add	fp, sp, #4
   3ef2c:	sub	sp, sp, #48	; 0x30
   3ef30:	str	r0, [fp, #-48]	; 0xffffffd0
   3ef34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3ef38:	bl	121dc <chdir@plt>
   3ef3c:	str	r0, [fp, #-8]
   3ef40:	ldr	r3, [fp, #-8]
   3ef44:	cmp	r3, #0
   3ef48:	beq	3ef60 <__assert_fail@plt+0x2c874>
   3ef4c:	bl	12404 <__errno_location@plt>
   3ef50:	mov	r3, r0
   3ef54:	ldr	r3, [r3]
   3ef58:	cmp	r3, #36	; 0x24
   3ef5c:	beq	3ef68 <__assert_fail@plt+0x2c87c>
   3ef60:	ldr	r3, [fp, #-8]
   3ef64:	b	3f274 <__assert_fail@plt+0x2cb88>
   3ef68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3ef6c:	bl	123bc <strlen@plt>
   3ef70:	str	r0, [fp, #-12]
   3ef74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3ef78:	ldr	r3, [fp, #-12]
   3ef7c:	add	r3, r2, r3
   3ef80:	str	r3, [fp, #-16]
   3ef84:	sub	r3, fp, #44	; 0x2c
   3ef88:	mov	r0, r3
   3ef8c:	bl	3eda0 <__assert_fail@plt+0x2c6b4>
   3ef90:	ldr	r3, [fp, #-12]
   3ef94:	cmp	r3, #0
   3ef98:	bne	3efb0 <__assert_fail@plt+0x2c8c4>
   3ef9c:	ldr	r3, [pc, #732]	; 3f280 <__assert_fail@plt+0x2cb94>
   3efa0:	mov	r2, #126	; 0x7e
   3efa4:	ldr	r1, [pc, #728]	; 3f284 <__assert_fail@plt+0x2cb98>
   3efa8:	ldr	r0, [pc, #728]	; 3f288 <__assert_fail@plt+0x2cb9c>
   3efac:	bl	126ec <__assert_fail@plt>
   3efb0:	ldr	r3, [fp, #-12]
   3efb4:	cmp	r3, #4096	; 0x1000
   3efb8:	bcs	3efd0 <__assert_fail@plt+0x2c8e4>
   3efbc:	ldr	r3, [pc, #700]	; 3f280 <__assert_fail@plt+0x2cb94>
   3efc0:	mov	r2, #127	; 0x7f
   3efc4:	ldr	r1, [pc, #696]	; 3f284 <__assert_fail@plt+0x2cb98>
   3efc8:	ldr	r0, [pc, #700]	; 3f28c <__assert_fail@plt+0x2cba0>
   3efcc:	bl	126ec <__assert_fail@plt>
   3efd0:	ldr	r1, [pc, #696]	; 3f290 <__assert_fail@plt+0x2cba4>
   3efd4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3efd8:	bl	126e0 <strspn@plt>
   3efdc:	str	r0, [fp, #-20]	; 0xffffffec
   3efe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3efe4:	cmp	r3, #2
   3efe8:	bne	3f088 <__assert_fail@plt+0x2c99c>
   3efec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3eff0:	add	r0, r3, #3
   3eff4:	ldr	r3, [fp, #-16]
   3eff8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3effc:	add	r2, r2, #3
   3f000:	sub	r3, r3, r2
   3f004:	mov	r2, r3
   3f008:	mov	r1, #47	; 0x2f
   3f00c:	bl	124ac <memchr@plt>
   3f010:	str	r0, [fp, #-24]	; 0xffffffe8
   3f014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f018:	cmp	r3, #0
   3f01c:	bne	3f038 <__assert_fail@plt+0x2c94c>
   3f020:	bl	12404 <__errno_location@plt>
   3f024:	mov	r2, r0
   3f028:	mov	r3, #36	; 0x24
   3f02c:	str	r3, [r2]
   3f030:	mvn	r3, #0
   3f034:	b	3f274 <__assert_fail@plt+0x2cb88>
   3f038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f03c:	mov	r2, #0
   3f040:	strb	r2, [r3]
   3f044:	sub	r3, fp, #44	; 0x2c
   3f048:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f04c:	mov	r0, r3
   3f050:	bl	3ee80 <__assert_fail@plt+0x2c794>
   3f054:	str	r0, [fp, #-28]	; 0xffffffe4
   3f058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f05c:	mov	r2, #47	; 0x2f
   3f060:	strb	r2, [r3]
   3f064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3f068:	cmp	r3, #0
   3f06c:	bne	3f220 <__assert_fail@plt+0x2cb34>
   3f070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f074:	add	r3, r3, #1
   3f078:	mov	r0, r3
   3f07c:	bl	3eee8 <__assert_fail@plt+0x2c7fc>
   3f080:	str	r0, [fp, #-48]	; 0xffffffd0
   3f084:	b	3f0c0 <__assert_fail@plt+0x2c9d4>
   3f088:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f08c:	cmp	r3, #0
   3f090:	beq	3f0c0 <__assert_fail@plt+0x2c9d4>
   3f094:	sub	r3, fp, #44	; 0x2c
   3f098:	ldr	r1, [pc, #496]	; 3f290 <__assert_fail@plt+0x2cba4>
   3f09c:	mov	r0, r3
   3f0a0:	bl	3ee80 <__assert_fail@plt+0x2c794>
   3f0a4:	mov	r3, r0
   3f0a8:	cmp	r3, #0
   3f0ac:	bne	3f228 <__assert_fail@plt+0x2cb3c>
   3f0b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f0b8:	add	r3, r2, r3
   3f0bc:	str	r3, [fp, #-48]	; 0xffffffd0
   3f0c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f0c4:	ldrb	r3, [r3]
   3f0c8:	cmp	r3, #47	; 0x2f
   3f0cc:	bne	3f0e4 <__assert_fail@plt+0x2c9f8>
   3f0d0:	ldr	r3, [pc, #424]	; 3f280 <__assert_fail@plt+0x2cb94>
   3f0d4:	mov	r2, #162	; 0xa2
   3f0d8:	ldr	r1, [pc, #420]	; 3f284 <__assert_fail@plt+0x2cb98>
   3f0dc:	ldr	r0, [pc, #432]	; 3f294 <__assert_fail@plt+0x2cba8>
   3f0e0:	bl	126ec <__assert_fail@plt>
   3f0e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f0e8:	ldr	r3, [fp, #-16]
   3f0ec:	cmp	r2, r3
   3f0f0:	bls	3f1b4 <__assert_fail@plt+0x2cac8>
   3f0f4:	ldr	r3, [pc, #388]	; 3f280 <__assert_fail@plt+0x2cb94>
   3f0f8:	mov	r2, #163	; 0xa3
   3f0fc:	ldr	r1, [pc, #384]	; 3f284 <__assert_fail@plt+0x2cb98>
   3f100:	ldr	r0, [pc, #400]	; 3f298 <__assert_fail@plt+0x2cbac>
   3f104:	bl	126ec <__assert_fail@plt>
   3f108:	mov	r2, #4096	; 0x1000
   3f10c:	mov	r1, #47	; 0x2f
   3f110:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f114:	bl	123ec <memrchr@plt>
   3f118:	str	r0, [fp, #-32]	; 0xffffffe0
   3f11c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f120:	cmp	r3, #0
   3f124:	bne	3f140 <__assert_fail@plt+0x2ca54>
   3f128:	bl	12404 <__errno_location@plt>
   3f12c:	mov	r2, r0
   3f130:	mov	r3, #36	; 0x24
   3f134:	str	r3, [r2]
   3f138:	mvn	r3, #0
   3f13c:	b	3f274 <__assert_fail@plt+0x2cb88>
   3f140:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f144:	mov	r2, #0
   3f148:	strb	r2, [r3]
   3f14c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3f150:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f154:	sub	r3, r2, r3
   3f158:	cmp	r3, #4096	; 0x1000
   3f15c:	blt	3f174 <__assert_fail@plt+0x2ca88>
   3f160:	ldr	r3, [pc, #280]	; 3f280 <__assert_fail@plt+0x2cb94>
   3f164:	mov	r2, #179	; 0xb3
   3f168:	ldr	r1, [pc, #276]	; 3f284 <__assert_fail@plt+0x2cb98>
   3f16c:	ldr	r0, [pc, #296]	; 3f29c <__assert_fail@plt+0x2cbb0>
   3f170:	bl	126ec <__assert_fail@plt>
   3f174:	sub	r3, fp, #44	; 0x2c
   3f178:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f17c:	mov	r0, r3
   3f180:	bl	3ee80 <__assert_fail@plt+0x2c794>
   3f184:	str	r0, [fp, #-36]	; 0xffffffdc
   3f188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f18c:	mov	r2, #47	; 0x2f
   3f190:	strb	r2, [r3]
   3f194:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3f198:	cmp	r3, #0
   3f19c:	bne	3f230 <__assert_fail@plt+0x2cb44>
   3f1a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f1a4:	add	r3, r3, #1
   3f1a8:	mov	r0, r3
   3f1ac:	bl	3eee8 <__assert_fail@plt+0x2c7fc>
   3f1b0:	str	r0, [fp, #-48]	; 0xffffffd0
   3f1b4:	ldr	r2, [fp, #-16]
   3f1b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f1bc:	sub	r3, r2, r3
   3f1c0:	cmp	r3, #4096	; 0x1000
   3f1c4:	bge	3f108 <__assert_fail@plt+0x2ca1c>
   3f1c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f1cc:	ldr	r3, [fp, #-16]
   3f1d0:	cmp	r2, r3
   3f1d4:	bcs	3f1f4 <__assert_fail@plt+0x2cb08>
   3f1d8:	sub	r3, fp, #44	; 0x2c
   3f1dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f1e0:	mov	r0, r3
   3f1e4:	bl	3ee80 <__assert_fail@plt+0x2c794>
   3f1e8:	mov	r3, r0
   3f1ec:	cmp	r3, #0
   3f1f0:	bne	3f238 <__assert_fail@plt+0x2cb4c>
   3f1f4:	sub	r3, fp, #44	; 0x2c
   3f1f8:	mov	r0, r3
   3f1fc:	bl	3edcc <__assert_fail@plt+0x2c6e0>
   3f200:	mov	r3, r0
   3f204:	cmp	r3, #0
   3f208:	bne	3f240 <__assert_fail@plt+0x2cb54>
   3f20c:	sub	r3, fp, #44	; 0x2c
   3f210:	mov	r0, r3
   3f214:	bl	3edfc <__assert_fail@plt+0x2c710>
   3f218:	mov	r3, #0
   3f21c:	b	3f274 <__assert_fail@plt+0x2cb88>
   3f220:	nop			; (mov r0, r0)
   3f224:	b	3f244 <__assert_fail@plt+0x2cb58>
   3f228:	nop			; (mov r0, r0)
   3f22c:	b	3f244 <__assert_fail@plt+0x2cb58>
   3f230:	nop			; (mov r0, r0)
   3f234:	b	3f244 <__assert_fail@plt+0x2cb58>
   3f238:	nop			; (mov r0, r0)
   3f23c:	b	3f244 <__assert_fail@plt+0x2cb58>
   3f240:	nop			; (mov r0, r0)
   3f244:	bl	12404 <__errno_location@plt>
   3f248:	mov	r3, r0
   3f24c:	ldr	r3, [r3]
   3f250:	str	r3, [fp, #-40]	; 0xffffffd8
   3f254:	sub	r3, fp, #44	; 0x2c
   3f258:	mov	r0, r3
   3f25c:	bl	3edfc <__assert_fail@plt+0x2c710>
   3f260:	bl	12404 <__errno_location@plt>
   3f264:	mov	r2, r0
   3f268:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f26c:	str	r3, [r2]
   3f270:	mvn	r3, #0
   3f274:	mov	r0, r3
   3f278:	sub	sp, fp, #4
   3f27c:	pop	{fp, pc}
   3f280:	andeq	sl, r6, r4, lsr #23
   3f284:	andeq	sl, r6, r0, lsr fp
   3f288:	andeq	sl, r6, r4, asr fp
   3f28c:	andeq	sl, r6, ip, asr fp
   3f290:	andeq	sl, r6, r0, asr fp
   3f294:	andeq	sl, r6, r8, ror #22
   3f298:	andeq	sl, r6, r4, ror fp
   3f29c:	andeq	sl, r6, r4, lsl #23
   3f2a0:	push	{r1, r2, r3}
   3f2a4:	push	{fp, lr}
   3f2a8:	add	fp, sp, #4
   3f2ac:	sub	sp, sp, #36	; 0x24
   3f2b0:	str	r0, [fp, #-36]	; 0xffffffdc
   3f2b4:	mvn	r3, #0
   3f2b8:	str	r3, [fp, #-12]
   3f2bc:	add	r3, fp, #8
   3f2c0:	str	r3, [fp, #-32]	; 0xffffffe0
   3f2c4:	ldr	r3, [fp, #4]
   3f2c8:	cmp	r3, #0
   3f2cc:	beq	3f2e0 <__assert_fail@plt+0x2cbf4>
   3f2d0:	ldr	r2, [pc, #432]	; 3f488 <__assert_fail@plt+0x2cd9c>
   3f2d4:	cmp	r3, r2
   3f2d8:	beq	3f308 <__assert_fail@plt+0x2cc1c>
   3f2dc:	b	3f330 <__assert_fail@plt+0x2cc44>
   3f2e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f2e4:	add	r2, r3, #4
   3f2e8:	str	r2, [fp, #-32]	; 0xffffffe0
   3f2ec:	ldr	r3, [r3]
   3f2f0:	str	r3, [fp, #-16]
   3f2f4:	ldr	r1, [fp, #-16]
   3f2f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f2fc:	bl	3f4a0 <__assert_fail@plt+0x2cdb4>
   3f300:	str	r0, [fp, #-12]
   3f304:	b	3f470 <__assert_fail@plt+0x2cd84>
   3f308:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f30c:	add	r2, r3, #4
   3f310:	str	r2, [fp, #-32]	; 0xffffffe0
   3f314:	ldr	r3, [r3]
   3f318:	str	r3, [fp, #-20]	; 0xffffffec
   3f31c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f320:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f324:	bl	3f4d8 <__assert_fail@plt+0x2cdec>
   3f328:	str	r0, [fp, #-12]
   3f32c:	b	3f470 <__assert_fail@plt+0x2cd84>
   3f330:	ldr	r3, [fp, #4]
   3f334:	cmp	r3, #11
   3f338:	beq	3f400 <__assert_fail@plt+0x2cd14>
   3f33c:	cmp	r3, #11
   3f340:	bgt	3f3a0 <__assert_fail@plt+0x2ccb4>
   3f344:	cmp	r3, #3
   3f348:	beq	3f400 <__assert_fail@plt+0x2cd14>
   3f34c:	cmp	r3, #3
   3f350:	bgt	3f370 <__assert_fail@plt+0x2cc84>
   3f354:	cmp	r3, #1
   3f358:	beq	3f400 <__assert_fail@plt+0x2cd14>
   3f35c:	cmp	r3, #1
   3f360:	bgt	3f414 <__assert_fail@plt+0x2cd28>
   3f364:	cmp	r3, #0
   3f368:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f36c:	b	3f440 <__assert_fail@plt+0x2cd54>
   3f370:	cmp	r3, #8
   3f374:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f378:	cmp	r3, #8
   3f37c:	bgt	3f38c <__assert_fail@plt+0x2cca0>
   3f380:	cmp	r3, #4
   3f384:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f388:	b	3f440 <__assert_fail@plt+0x2cd54>
   3f38c:	cmp	r3, #9
   3f390:	beq	3f400 <__assert_fail@plt+0x2cd14>
   3f394:	cmp	r3, #10
   3f398:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f39c:	b	3f440 <__assert_fail@plt+0x2cd54>
   3f3a0:	ldr	r2, [pc, #228]	; 3f48c <__assert_fail@plt+0x2cda0>
   3f3a4:	cmp	r3, r2
   3f3a8:	bgt	3f3dc <__assert_fail@plt+0x2ccf0>
   3f3ac:	ldr	r2, [pc, #212]	; 3f488 <__assert_fail@plt+0x2cd9c>
   3f3b0:	cmp	r3, r2
   3f3b4:	bge	3f414 <__assert_fail@plt+0x2cd28>
   3f3b8:	ldr	r2, [pc, #208]	; 3f490 <__assert_fail@plt+0x2cda4>
   3f3bc:	cmp	r3, r2
   3f3c0:	beq	3f400 <__assert_fail@plt+0x2cd14>
   3f3c4:	ldr	r2, [pc, #200]	; 3f494 <__assert_fail@plt+0x2cda8>
   3f3c8:	cmp	r3, r2
   3f3cc:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f3d0:	cmp	r3, #1024	; 0x400
   3f3d4:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f3d8:	b	3f440 <__assert_fail@plt+0x2cd54>
   3f3dc:	ldr	r2, [pc, #180]	; 3f498 <__assert_fail@plt+0x2cdac>
   3f3e0:	cmp	r3, r2
   3f3e4:	beq	3f414 <__assert_fail@plt+0x2cd28>
   3f3e8:	ldr	r2, [pc, #168]	; 3f498 <__assert_fail@plt+0x2cdac>
   3f3ec:	cmp	r3, r2
   3f3f0:	blt	3f400 <__assert_fail@plt+0x2cd14>
   3f3f4:	ldr	r2, [pc, #160]	; 3f49c <__assert_fail@plt+0x2cdb0>
   3f3f8:	cmp	r3, r2
   3f3fc:	bne	3f440 <__assert_fail@plt+0x2cd54>
   3f400:	ldr	r1, [fp, #4]
   3f404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f408:	bl	12500 <fcntl64@plt>
   3f40c:	str	r0, [fp, #-12]
   3f410:	b	3f46c <__assert_fail@plt+0x2cd80>
   3f414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f418:	add	r2, r3, #4
   3f41c:	str	r2, [fp, #-32]	; 0xffffffe0
   3f420:	ldr	r3, [r3]
   3f424:	str	r3, [fp, #-24]	; 0xffffffe8
   3f428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f42c:	ldr	r1, [fp, #4]
   3f430:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f434:	bl	12500 <fcntl64@plt>
   3f438:	str	r0, [fp, #-12]
   3f43c:	b	3f46c <__assert_fail@plt+0x2cd80>
   3f440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f444:	add	r2, r3, #4
   3f448:	str	r2, [fp, #-32]	; 0xffffffe0
   3f44c:	ldr	r3, [r3]
   3f450:	str	r3, [fp, #-28]	; 0xffffffe4
   3f454:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3f458:	ldr	r1, [fp, #4]
   3f45c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f460:	bl	12500 <fcntl64@plt>
   3f464:	str	r0, [fp, #-12]
   3f468:	nop			; (mov r0, r0)
   3f46c:	nop			; (mov r0, r0)
   3f470:	ldr	r3, [fp, #-12]
   3f474:	mov	r0, r3
   3f478:	sub	sp, fp, #4
   3f47c:	pop	{fp, lr}
   3f480:	add	sp, sp, #12
   3f484:	bx	lr
   3f488:	andeq	r0, r0, r6, lsl #8
   3f48c:	andeq	r0, r0, r7, lsl #8
   3f490:	andeq	r0, r0, r1, lsl #8
   3f494:	andeq	r0, r0, r2, lsl #8
   3f498:	andeq	r0, r0, r9, lsl #8
   3f49c:	andeq	r0, r0, sl, lsl #8
   3f4a0:	push	{fp, lr}
   3f4a4:	add	fp, sp, #4
   3f4a8:	sub	sp, sp, #16
   3f4ac:	str	r0, [fp, #-16]
   3f4b0:	str	r1, [fp, #-20]	; 0xffffffec
   3f4b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f4b8:	mov	r1, #0
   3f4bc:	ldr	r0, [fp, #-16]
   3f4c0:	bl	12500 <fcntl64@plt>
   3f4c4:	str	r0, [fp, #-8]
   3f4c8:	ldr	r3, [fp, #-8]
   3f4cc:	mov	r0, r3
   3f4d0:	sub	sp, fp, #4
   3f4d4:	pop	{fp, pc}
   3f4d8:	push	{fp, lr}
   3f4dc:	add	fp, sp, #4
   3f4e0:	sub	sp, sp, #24
   3f4e4:	str	r0, [fp, #-24]	; 0xffffffe8
   3f4e8:	str	r1, [fp, #-28]	; 0xffffffe4
   3f4ec:	ldr	r3, [pc, #292]	; 3f618 <__assert_fail@plt+0x2cf2c>
   3f4f0:	ldr	r3, [r3]
   3f4f4:	cmp	r3, #0
   3f4f8:	blt	3f56c <__assert_fail@plt+0x2ce80>
   3f4fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3f500:	ldr	r1, [pc, #276]	; 3f61c <__assert_fail@plt+0x2cf30>
   3f504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f508:	bl	12500 <fcntl64@plt>
   3f50c:	str	r0, [fp, #-8]
   3f510:	ldr	r3, [fp, #-8]
   3f514:	cmp	r3, #0
   3f518:	bge	3f530 <__assert_fail@plt+0x2ce44>
   3f51c:	bl	12404 <__errno_location@plt>
   3f520:	mov	r3, r0
   3f524:	ldr	r3, [r3]
   3f528:	cmp	r3, #22
   3f52c:	beq	3f540 <__assert_fail@plt+0x2ce54>
   3f530:	ldr	r3, [pc, #224]	; 3f618 <__assert_fail@plt+0x2cf2c>
   3f534:	mov	r2, #1
   3f538:	str	r2, [r3]
   3f53c:	b	3f57c <__assert_fail@plt+0x2ce90>
   3f540:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3f544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f548:	bl	3f4a0 <__assert_fail@plt+0x2cdb4>
   3f54c:	str	r0, [fp, #-8]
   3f550:	ldr	r3, [fp, #-8]
   3f554:	cmp	r3, #0
   3f558:	blt	3f57c <__assert_fail@plt+0x2ce90>
   3f55c:	ldr	r3, [pc, #180]	; 3f618 <__assert_fail@plt+0x2cf2c>
   3f560:	mvn	r2, #0
   3f564:	str	r2, [r3]
   3f568:	b	3f57c <__assert_fail@plt+0x2ce90>
   3f56c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3f570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f574:	bl	3f4a0 <__assert_fail@plt+0x2cdb4>
   3f578:	str	r0, [fp, #-8]
   3f57c:	ldr	r3, [fp, #-8]
   3f580:	cmp	r3, #0
   3f584:	blt	3f608 <__assert_fail@plt+0x2cf1c>
   3f588:	ldr	r3, [pc, #136]	; 3f618 <__assert_fail@plt+0x2cf2c>
   3f58c:	ldr	r3, [r3]
   3f590:	cmn	r3, #1
   3f594:	bne	3f608 <__assert_fail@plt+0x2cf1c>
   3f598:	mov	r1, #1
   3f59c:	ldr	r0, [fp, #-8]
   3f5a0:	bl	12500 <fcntl64@plt>
   3f5a4:	str	r0, [fp, #-12]
   3f5a8:	ldr	r3, [fp, #-12]
   3f5ac:	cmp	r3, #0
   3f5b0:	blt	3f5d8 <__assert_fail@plt+0x2ceec>
   3f5b4:	ldr	r3, [fp, #-12]
   3f5b8:	orr	r3, r3, #1
   3f5bc:	mov	r2, r3
   3f5c0:	mov	r1, #2
   3f5c4:	ldr	r0, [fp, #-8]
   3f5c8:	bl	12500 <fcntl64@plt>
   3f5cc:	mov	r3, r0
   3f5d0:	cmn	r3, #1
   3f5d4:	bne	3f608 <__assert_fail@plt+0x2cf1c>
   3f5d8:	bl	12404 <__errno_location@plt>
   3f5dc:	mov	r3, r0
   3f5e0:	ldr	r3, [r3]
   3f5e4:	str	r3, [fp, #-16]
   3f5e8:	ldr	r0, [fp, #-8]
   3f5ec:	bl	126a4 <close@plt>
   3f5f0:	bl	12404 <__errno_location@plt>
   3f5f4:	mov	r2, r0
   3f5f8:	ldr	r3, [fp, #-16]
   3f5fc:	str	r3, [r2]
   3f600:	mvn	r3, #0
   3f604:	str	r3, [fp, #-8]
   3f608:	ldr	r3, [fp, #-8]
   3f60c:	mov	r0, r3
   3f610:	sub	sp, fp, #4
   3f614:	pop	{fp, pc}
   3f618:	andeq	sp, r7, r8, lsl r0
   3f61c:	andeq	r0, r0, r6, lsl #8
   3f620:	push	{fp, lr}
   3f624:	add	fp, sp, #4
   3f628:	sub	sp, sp, #16
   3f62c:	str	r0, [fp, #-8]
   3f630:	ldr	r3, [fp, #-8]
   3f634:	ldr	r3, [r3]
   3f638:	and	r3, r3, #256	; 0x100
   3f63c:	cmp	r3, #0
   3f640:	beq	3f65c <__assert_fail@plt+0x2cf70>
   3f644:	mov	r3, #1
   3f648:	str	r3, [sp]
   3f64c:	mov	r2, #0
   3f650:	mov	r3, #0
   3f654:	ldr	r0, [fp, #-8]
   3f658:	bl	3f754 <__assert_fail@plt+0x2d068>
   3f65c:	nop			; (mov r0, r0)
   3f660:	sub	sp, fp, #4
   3f664:	pop	{fp, pc}
   3f668:	push	{fp, lr}
   3f66c:	add	fp, sp, #4
   3f670:	sub	sp, sp, #8
   3f674:	str	r0, [fp, #-8]
   3f678:	ldr	r3, [fp, #-8]
   3f67c:	cmp	r3, #0
   3f680:	beq	3f698 <__assert_fail@plt+0x2cfac>
   3f684:	ldr	r0, [fp, #-8]
   3f688:	bl	12338 <__freading@plt>
   3f68c:	mov	r3, r0
   3f690:	cmp	r3, #0
   3f694:	bne	3f6a8 <__assert_fail@plt+0x2cfbc>
   3f698:	ldr	r0, [fp, #-8]
   3f69c:	bl	1205c <fflush@plt>
   3f6a0:	mov	r3, r0
   3f6a4:	b	3f6bc <__assert_fail@plt+0x2cfd0>
   3f6a8:	ldr	r0, [fp, #-8]
   3f6ac:	bl	3f620 <__assert_fail@plt+0x2cf34>
   3f6b0:	ldr	r0, [fp, #-8]
   3f6b4:	bl	1205c <fflush@plt>
   3f6b8:	mov	r3, r0
   3f6bc:	mov	r0, r3
   3f6c0:	sub	sp, fp, #4
   3f6c4:	pop	{fp, pc}
   3f6c8:	push	{r4, fp, lr}
   3f6cc:	add	fp, sp, #8
   3f6d0:	sub	sp, sp, #20
   3f6d4:	str	r0, [fp, #-24]	; 0xffffffe8
   3f6d8:	bl	12404 <__errno_location@plt>
   3f6dc:	mov	r3, r0
   3f6e0:	ldr	r3, [r3]
   3f6e4:	str	r3, [fp, #-20]	; 0xffffffec
   3f6e8:	bl	12404 <__errno_location@plt>
   3f6ec:	mov	r3, r0
   3f6f0:	ldr	r3, [r3]
   3f6f4:	str	r3, [fp, #-16]
   3f6f8:	bl	12404 <__errno_location@plt>
   3f6fc:	mov	r2, r0
   3f700:	mov	r3, #0
   3f704:	str	r3, [r2]
   3f708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f70c:	bl	12098 <free@plt>
   3f710:	bl	12404 <__errno_location@plt>
   3f714:	mov	r4, r0
   3f718:	bl	12404 <__errno_location@plt>
   3f71c:	mov	r3, r0
   3f720:	ldr	r3, [r3]
   3f724:	cmp	r3, #0
   3f728:	moveq	r3, #1
   3f72c:	movne	r3, #0
   3f730:	uxtb	r3, r3
   3f734:	lsl	r3, r3, #2
   3f738:	sub	r2, fp, #12
   3f73c:	add	r3, r2, r3
   3f740:	ldr	r3, [r3, #-8]
   3f744:	str	r3, [r4]
   3f748:	nop			; (mov r0, r0)
   3f74c:	sub	sp, fp, #8
   3f750:	pop	{r4, fp, pc}
   3f754:	push	{fp, lr}
   3f758:	add	fp, sp, #4
   3f75c:	sub	sp, sp, #32
   3f760:	str	r0, [fp, #-16]
   3f764:	strd	r2, [fp, #-28]	; 0xffffffe4
   3f768:	ldr	r3, [fp, #-16]
   3f76c:	ldr	r2, [r3, #8]
   3f770:	ldr	r3, [fp, #-16]
   3f774:	ldr	r3, [r3, #4]
   3f778:	cmp	r2, r3
   3f77c:	bne	3f814 <__assert_fail@plt+0x2d128>
   3f780:	ldr	r3, [fp, #-16]
   3f784:	ldr	r2, [r3, #20]
   3f788:	ldr	r3, [fp, #-16]
   3f78c:	ldr	r3, [r3, #16]
   3f790:	cmp	r2, r3
   3f794:	bne	3f814 <__assert_fail@plt+0x2d128>
   3f798:	ldr	r3, [fp, #-16]
   3f79c:	ldr	r3, [r3, #36]	; 0x24
   3f7a0:	cmp	r3, #0
   3f7a4:	bne	3f814 <__assert_fail@plt+0x2d128>
   3f7a8:	ldr	r0, [fp, #-16]
   3f7ac:	bl	12488 <fileno@plt>
   3f7b0:	mov	r1, r0
   3f7b4:	ldr	r3, [fp, #4]
   3f7b8:	str	r3, [sp]
   3f7bc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3f7c0:	mov	r0, r1
   3f7c4:	bl	1223c <lseek64@plt>
   3f7c8:	strd	r0, [fp, #-12]
   3f7cc:	ldrd	r2, [fp, #-12]
   3f7d0:	mvn	r0, #0
   3f7d4:	mvn	r1, #0
   3f7d8:	cmp	r3, r1
   3f7dc:	cmpeq	r2, r0
   3f7e0:	bne	3f7ec <__assert_fail@plt+0x2d100>
   3f7e4:	mvn	r3, #0
   3f7e8:	b	3f82c <__assert_fail@plt+0x2d140>
   3f7ec:	ldr	r3, [fp, #-16]
   3f7f0:	ldr	r3, [r3]
   3f7f4:	bic	r2, r3, #16
   3f7f8:	ldr	r3, [fp, #-16]
   3f7fc:	str	r2, [r3]
   3f800:	ldr	r1, [fp, #-16]
   3f804:	ldrd	r2, [fp, #-12]
   3f808:	strd	r2, [r1, #80]	; 0x50
   3f80c:	mov	r3, #0
   3f810:	b	3f82c <__assert_fail@plt+0x2d140>
   3f814:	ldr	r3, [fp, #4]
   3f818:	str	r3, [sp]
   3f81c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3f820:	ldr	r0, [fp, #-16]
   3f824:	bl	124e8 <fseeko64@plt>
   3f828:	mov	r3, r0
   3f82c:	mov	r0, r3
   3f830:	sub	sp, fp, #4
   3f834:	pop	{fp, pc}
   3f838:	push	{fp}		; (str fp, [sp, #-4]!)
   3f83c:	add	fp, sp, #0
   3f840:	sub	sp, sp, #20
   3f844:	str	r0, [fp, #-16]
   3f848:	str	r1, [fp, #-20]	; 0xffffffec
   3f84c:	ldr	r3, [fp, #-16]
   3f850:	str	r3, [fp, #-8]
   3f854:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f858:	str	r3, [fp, #-12]
   3f85c:	ldr	r3, [fp, #-8]
   3f860:	ldrd	r0, [r3, #8]
   3f864:	ldr	r3, [fp, #-12]
   3f868:	ldrd	r2, [r3, #8]
   3f86c:	cmp	r1, r3
   3f870:	cmpeq	r0, r2
   3f874:	bne	3f89c <__assert_fail@plt+0x2d1b0>
   3f878:	ldr	r3, [fp, #-8]
   3f87c:	ldrd	r0, [r3]
   3f880:	ldr	r3, [fp, #-12]
   3f884:	ldrd	r2, [r3]
   3f888:	cmp	r1, r3
   3f88c:	cmpeq	r0, r2
   3f890:	bne	3f89c <__assert_fail@plt+0x2d1b0>
   3f894:	mov	r3, #1
   3f898:	b	3f8a0 <__assert_fail@plt+0x2d1b4>
   3f89c:	mov	r3, #0
   3f8a0:	and	r3, r3, #1
   3f8a4:	uxtb	r3, r3
   3f8a8:	mov	r0, r3
   3f8ac:	add	sp, fp, #0
   3f8b0:	pop	{fp}		; (ldr fp, [sp], #4)
   3f8b4:	bx	lr
   3f8b8:	push	{fp, lr}
   3f8bc:	add	fp, sp, #4
   3f8c0:	sub	sp, sp, #16
   3f8c4:	str	r0, [fp, #-16]
   3f8c8:	str	r1, [fp, #-20]	; 0xffffffec
   3f8cc:	ldr	r3, [fp, #-16]
   3f8d0:	str	r3, [fp, #-8]
   3f8d4:	ldr	r3, [fp, #-8]
   3f8d8:	ldrd	r0, [r3, #8]
   3f8dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f8e0:	mov	r2, r3
   3f8e4:	mov	r3, #0
   3f8e8:	bl	63e4c <__assert_fail@plt+0x51760>
   3f8ec:	mov	r3, r2
   3f8f0:	mov	r0, r3
   3f8f4:	sub	sp, fp, #4
   3f8f8:	pop	{fp, pc}
   3f8fc:	push	{fp, lr}
   3f900:	add	fp, sp, #4
   3f904:	sub	sp, sp, #16
   3f908:	str	r0, [fp, #-8]
   3f90c:	ldr	r3, [fp, #-8]
   3f910:	ldr	r2, [r3, #48]	; 0x30
   3f914:	ldr	r3, [pc, #156]	; 3f9b8 <__assert_fail@plt+0x2d2cc>
   3f918:	and	r3, r3, r2
   3f91c:	cmp	r3, #0
   3f920:	beq	3f968 <__assert_fail@plt+0x2d27c>
   3f924:	ldr	r3, [pc, #144]	; 3f9bc <__assert_fail@plt+0x2d2d0>
   3f928:	str	r3, [sp]
   3f92c:	ldr	r3, [pc, #140]	; 3f9c0 <__assert_fail@plt+0x2d2d4>
   3f930:	ldr	r2, [pc, #140]	; 3f9c4 <__assert_fail@plt+0x2d2d8>
   3f934:	mov	r1, #0
   3f938:	mov	r0, #31
   3f93c:	bl	2b718 <__assert_fail@plt+0x1902c>
   3f940:	mov	r3, r0
   3f944:	mov	r2, r3
   3f948:	ldr	r3, [fp, #-8]
   3f94c:	str	r2, [r3, #56]	; 0x38
   3f950:	ldr	r3, [fp, #-8]
   3f954:	ldr	r3, [r3, #56]	; 0x38
   3f958:	cmp	r3, #0
   3f95c:	bne	3f9a8 <__assert_fail@plt+0x2d2bc>
   3f960:	mov	r3, #0
   3f964:	b	3f9ac <__assert_fail@plt+0x2d2c0>
   3f968:	mov	r0, #32
   3f96c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   3f970:	mov	r3, r0
   3f974:	mov	r2, r3
   3f978:	ldr	r3, [fp, #-8]
   3f97c:	str	r2, [r3, #56]	; 0x38
   3f980:	ldr	r3, [fp, #-8]
   3f984:	ldr	r3, [r3, #56]	; 0x38
   3f988:	cmp	r3, #0
   3f98c:	bne	3f998 <__assert_fail@plt+0x2d2ac>
   3f990:	mov	r3, #0
   3f994:	b	3f9ac <__assert_fail@plt+0x2d2c0>
   3f998:	ldr	r3, [fp, #-8]
   3f99c:	ldr	r3, [r3, #56]	; 0x38
   3f9a0:	mov	r0, r3
   3f9a4:	bl	5f7e0 <__assert_fail@plt+0x4d0f4>
   3f9a8:	mov	r3, #1
   3f9ac:	mov	r0, r3
   3f9b0:	sub	sp, fp, #4
   3f9b4:	pop	{fp, pc}
   3f9b8:	andeq	r0, r0, r2, lsl #2
   3f9bc:	andeq	pc, r3, r8, asr #13
   3f9c0:	andeq	pc, r3, r8, lsr r8	; <UNPREDICTABLE>
   3f9c4:			; <UNDEFINED> instruction: 0x0003f8b8
   3f9c8:	push	{fp, lr}
   3f9cc:	add	fp, sp, #4
   3f9d0:	sub	sp, sp, #24
   3f9d4:	str	r0, [fp, #-24]	; 0xffffffe8
   3f9d8:	str	r1, [fp, #-28]	; 0xffffffe4
   3f9dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f9e0:	ldr	r2, [r3, #48]	; 0x30
   3f9e4:	ldr	r3, [pc, #280]	; 3fb04 <__assert_fail@plt+0x2d418>
   3f9e8:	and	r3, r3, r2
   3f9ec:	cmp	r3, #0
   3f9f0:	beq	3fab4 <__assert_fail@plt+0x2d3c8>
   3f9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3f9f8:	add	r3, r3, #64	; 0x40
   3f9fc:	str	r3, [fp, #-8]
   3fa00:	mov	r0, #24
   3fa04:	bl	42ba8 <__assert_fail@plt+0x304bc>
   3fa08:	mov	r3, r0
   3fa0c:	str	r3, [fp, #-12]
   3fa10:	ldr	r3, [fp, #-12]
   3fa14:	cmp	r3, #0
   3fa18:	bne	3fa24 <__assert_fail@plt+0x2d338>
   3fa1c:	mov	r3, #0
   3fa20:	b	3faf8 <__assert_fail@plt+0x2d40c>
   3fa24:	ldr	r3, [fp, #-8]
   3fa28:	ldrd	r2, [r3]
   3fa2c:	ldr	r1, [fp, #-12]
   3fa30:	strd	r2, [r1]
   3fa34:	ldr	r3, [fp, #-8]
   3fa38:	ldrd	r2, [r3, #96]	; 0x60
   3fa3c:	ldr	r1, [fp, #-12]
   3fa40:	strd	r2, [r1, #8]
   3fa44:	ldr	r3, [fp, #-12]
   3fa48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3fa4c:	str	r2, [r3, #16]
   3fa50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fa54:	ldr	r3, [r3, #56]	; 0x38
   3fa58:	ldr	r1, [fp, #-12]
   3fa5c:	mov	r0, r3
   3fa60:	bl	2c460 <__assert_fail@plt+0x19d74>
   3fa64:	str	r0, [fp, #-16]
   3fa68:	ldr	r2, [fp, #-16]
   3fa6c:	ldr	r3, [fp, #-12]
   3fa70:	cmp	r2, r3
   3fa74:	beq	3faf4 <__assert_fail@plt+0x2d408>
   3fa78:	ldr	r0, [fp, #-12]
   3fa7c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3fa80:	ldr	r3, [fp, #-16]
   3fa84:	cmp	r3, #0
   3fa88:	bne	3fa94 <__assert_fail@plt+0x2d3a8>
   3fa8c:	mov	r3, #0
   3fa90:	b	3faf8 <__assert_fail@plt+0x2d40c>
   3fa94:	ldr	r3, [fp, #-16]
   3fa98:	ldr	r2, [r3, #16]
   3fa9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3faa0:	str	r2, [r3]
   3faa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3faa8:	mov	r2, #2
   3faac:	strh	r2, [r3, #56]	; 0x38
   3fab0:	b	3faf4 <__assert_fail@plt+0x2d408>
   3fab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fab8:	ldr	r2, [r3, #56]	; 0x38
   3fabc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3fac0:	add	r3, r3, #64	; 0x40
   3fac4:	mov	r1, r3
   3fac8:	mov	r0, r2
   3facc:	bl	5f820 <__assert_fail@plt+0x4d134>
   3fad0:	mov	r3, r0
   3fad4:	cmp	r3, #0
   3fad8:	beq	3faf4 <__assert_fail@plt+0x2d408>
   3fadc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3fae0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3fae4:	str	r2, [r3]
   3fae8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3faec:	mov	r2, #2
   3faf0:	strh	r2, [r3, #56]	; 0x38
   3faf4:	mov	r3, #1
   3faf8:	mov	r0, r3
   3fafc:	sub	sp, fp, #4
   3fb00:	pop	{fp, pc}
   3fb04:	andeq	r0, r0, r2, lsl #2
   3fb08:	push	{fp, lr}
   3fb0c:	add	fp, sp, #4
   3fb10:	sub	sp, sp, #48	; 0x30
   3fb14:	str	r0, [fp, #-48]	; 0xffffffd0
   3fb18:	str	r1, [fp, #-52]	; 0xffffffcc
   3fb1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3fb20:	add	r3, r3, #64	; 0x40
   3fb24:	str	r3, [fp, #-8]
   3fb28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fb2c:	ldr	r2, [r3, #48]	; 0x30
   3fb30:	ldr	r3, [pc, #268]	; 3fc44 <__assert_fail@plt+0x2d558>
   3fb34:	and	r3, r3, r2
   3fb38:	cmp	r3, #0
   3fb3c:	beq	3fb90 <__assert_fail@plt+0x2d4a4>
   3fb40:	ldr	r3, [fp, #-8]
   3fb44:	ldrd	r2, [r3]
   3fb48:	strd	r2, [fp, #-44]	; 0xffffffd4
   3fb4c:	ldr	r3, [fp, #-8]
   3fb50:	ldrd	r2, [r3, #96]	; 0x60
   3fb54:	strd	r2, [fp, #-36]	; 0xffffffdc
   3fb58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fb5c:	ldr	r3, [r3, #56]	; 0x38
   3fb60:	sub	r2, fp, #44	; 0x2c
   3fb64:	mov	r1, r2
   3fb68:	mov	r0, r3
   3fb6c:	bl	2c4c4 <__assert_fail@plt+0x19dd8>
   3fb70:	str	r0, [fp, #-12]
   3fb74:	ldr	r3, [fp, #-12]
   3fb78:	cmp	r3, #0
   3fb7c:	bne	3fb84 <__assert_fail@plt+0x2d498>
   3fb80:	bl	12698 <abort@plt>
   3fb84:	ldr	r0, [fp, #-12]
   3fb88:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3fb8c:	b	3fc38 <__assert_fail@plt+0x2d54c>
   3fb90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3fb94:	ldr	r3, [r3, #4]
   3fb98:	str	r3, [fp, #-16]
   3fb9c:	ldr	r3, [fp, #-16]
   3fba0:	cmp	r3, #0
   3fba4:	beq	3fc38 <__assert_fail@plt+0x2d54c>
   3fba8:	ldr	r3, [fp, #-16]
   3fbac:	ldr	r3, [r3, #48]	; 0x30
   3fbb0:	cmp	r3, #0
   3fbb4:	blt	3fc38 <__assert_fail@plt+0x2d54c>
   3fbb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fbbc:	ldr	r3, [r3, #56]	; 0x38
   3fbc0:	ldrd	r2, [r3, #16]
   3fbc4:	orrs	r3, r2, r3
   3fbc8:	bne	3fbd0 <__assert_fail@plt+0x2d4e4>
   3fbcc:	bl	12698 <abort@plt>
   3fbd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fbd4:	ldr	r3, [r3, #56]	; 0x38
   3fbd8:	ldrd	r0, [r3]
   3fbdc:	ldr	r3, [fp, #-8]
   3fbe0:	ldrd	r2, [r3, #96]	; 0x60
   3fbe4:	cmp	r1, r3
   3fbe8:	cmpeq	r0, r2
   3fbec:	bne	3fc38 <__assert_fail@plt+0x2d54c>
   3fbf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fbf4:	ldr	r3, [r3, #56]	; 0x38
   3fbf8:	ldrd	r0, [r3, #8]
   3fbfc:	ldr	r3, [fp, #-8]
   3fc00:	ldrd	r2, [r3]
   3fc04:	cmp	r1, r3
   3fc08:	cmpeq	r0, r2
   3fc0c:	bne	3fc38 <__assert_fail@plt+0x2d54c>
   3fc10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fc14:	ldr	r1, [r3, #56]	; 0x38
   3fc18:	ldr	r3, [fp, #-16]
   3fc1c:	ldrd	r2, [r3, #64]	; 0x40
   3fc20:	strd	r2, [r1, #8]
   3fc24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fc28:	ldr	r1, [r3, #56]	; 0x38
   3fc2c:	ldr	r3, [fp, #-16]
   3fc30:	ldrd	r2, [r3, #160]	; 0xa0
   3fc34:	strd	r2, [r1]
   3fc38:	nop			; (mov r0, r0)
   3fc3c:	sub	sp, fp, #4
   3fc40:	pop	{fp, pc}
   3fc44:	andeq	r0, r0, r2, lsl #2
   3fc48:	push	{fp, lr}
   3fc4c:	add	fp, sp, #4
   3fc50:	sub	sp, sp, #8
   3fc54:	str	r0, [fp, #-8]
   3fc58:	ldr	r3, [fp, #-8]
   3fc5c:	ldr	r2, [r3, #48]	; 0x30
   3fc60:	ldr	r3, [pc, #72]	; 3fcb0 <__assert_fail@plt+0x2d5c4>
   3fc64:	and	r3, r3, r2
   3fc68:	cmp	r3, #0
   3fc6c:	beq	3fc94 <__assert_fail@plt+0x2d5a8>
   3fc70:	ldr	r3, [fp, #-8]
   3fc74:	ldr	r3, [r3, #56]	; 0x38
   3fc78:	cmp	r3, #0
   3fc7c:	beq	3fca4 <__assert_fail@plt+0x2d5b8>
   3fc80:	ldr	r3, [fp, #-8]
   3fc84:	ldr	r3, [r3, #56]	; 0x38
   3fc88:	mov	r0, r3
   3fc8c:	bl	2b9f4 <__assert_fail@plt+0x19308>
   3fc90:	b	3fca4 <__assert_fail@plt+0x2d5b8>
   3fc94:	ldr	r3, [fp, #-8]
   3fc98:	ldr	r3, [r3, #56]	; 0x38
   3fc9c:	mov	r0, r3
   3fca0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   3fca4:	nop			; (mov r0, r0)
   3fca8:	sub	sp, fp, #4
   3fcac:	pop	{fp, pc}
   3fcb0:	andeq	r0, r0, r2, lsl #2
   3fcb4:	push	{fp, lr}
   3fcb8:	add	fp, sp, #4
   3fcbc:	sub	sp, sp, #16
   3fcc0:	str	r0, [fp, #-16]
   3fcc4:	b	3fce8 <__assert_fail@plt+0x2d5fc>
   3fcc8:	ldr	r0, [fp, #-16]
   3fccc:	bl	600a8 <__assert_fail@plt+0x4d9bc>
   3fcd0:	str	r0, [fp, #-8]
   3fcd4:	ldr	r3, [fp, #-8]
   3fcd8:	cmp	r3, #0
   3fcdc:	blt	3fce8 <__assert_fail@plt+0x2d5fc>
   3fce0:	ldr	r0, [fp, #-8]
   3fce4:	bl	126a4 <close@plt>
   3fce8:	ldr	r0, [fp, #-16]
   3fcec:	bl	5ffc0 <__assert_fail@plt+0x4d8d4>
   3fcf0:	mov	r3, r0
   3fcf4:	eor	r3, r3, #1
   3fcf8:	uxtb	r3, r3
   3fcfc:	cmp	r3, #0
   3fd00:	bne	3fcc8 <__assert_fail@plt+0x2d5dc>
   3fd04:	nop			; (mov r0, r0)
   3fd08:	sub	sp, fp, #4
   3fd0c:	pop	{fp, pc}
   3fd10:	push	{fp, lr}
   3fd14:	add	fp, sp, #4
   3fd18:	sub	sp, sp, #8
   3fd1c:	str	r0, [fp, #-8]
   3fd20:	mov	r3, r1
   3fd24:	strb	r3, [fp, #-9]
   3fd28:	ldr	r3, [fp, #-8]
   3fd2c:	ldrh	r3, [r3, #56]	; 0x38
   3fd30:	cmp	r3, #11
   3fd34:	beq	3fd3c <__assert_fail@plt+0x2d650>
   3fd38:	bl	12698 <abort@plt>
   3fd3c:	ldrb	r3, [fp, #-9]
   3fd40:	cmp	r3, #0
   3fd44:	beq	3fd54 <__assert_fail@plt+0x2d668>
   3fd48:	mov	r2, #2
   3fd4c:	mov	r3, #0
   3fd50:	b	3fd5c <__assert_fail@plt+0x2d670>
   3fd54:	mov	r2, #1
   3fd58:	mov	r3, #0
   3fd5c:	ldr	r1, [fp, #-8]
   3fd60:	strd	r2, [r1, #112]	; 0x70
   3fd64:	nop			; (mov r0, r0)
   3fd68:	sub	sp, fp, #4
   3fd6c:	pop	{fp, pc}
   3fd70:	push	{fp, lr}
   3fd74:	add	fp, sp, #4
   3fd78:	sub	sp, sp, #24
   3fd7c:	str	r0, [fp, #-16]
   3fd80:	str	r1, [fp, #-20]	; 0xffffffec
   3fd84:	mov	r3, r2
   3fd88:	strb	r3, [fp, #-21]	; 0xffffffeb
   3fd8c:	ldr	r3, [fp, #-16]
   3fd90:	ldr	r3, [r3, #32]
   3fd94:	str	r3, [fp, #-8]
   3fd98:	ldr	r2, [fp, #-8]
   3fd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fda0:	cmp	r2, r3
   3fda4:	bne	3fdb8 <__assert_fail@plt+0x2d6cc>
   3fda8:	ldr	r3, [fp, #-8]
   3fdac:	cmn	r3, #100	; 0x64
   3fdb0:	beq	3fdb8 <__assert_fail@plt+0x2d6cc>
   3fdb4:	bl	12698 <abort@plt>
   3fdb8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3fdbc:	cmp	r3, #0
   3fdc0:	beq	3fdf4 <__assert_fail@plt+0x2d708>
   3fdc4:	ldr	r3, [fp, #-16]
   3fdc8:	add	r3, r3, #60	; 0x3c
   3fdcc:	ldr	r1, [fp, #-8]
   3fdd0:	mov	r0, r3
   3fdd4:	bl	5ffe8 <__assert_fail@plt+0x4d8fc>
   3fdd8:	str	r0, [fp, #-12]
   3fddc:	ldr	r3, [fp, #-12]
   3fde0:	cmp	r3, #0
   3fde4:	blt	3fe1c <__assert_fail@plt+0x2d730>
   3fde8:	ldr	r0, [fp, #-12]
   3fdec:	bl	126a4 <close@plt>
   3fdf0:	b	3fe1c <__assert_fail@plt+0x2d730>
   3fdf4:	ldr	r3, [fp, #-16]
   3fdf8:	ldr	r3, [r3, #48]	; 0x30
   3fdfc:	and	r3, r3, #4
   3fe00:	cmp	r3, #0
   3fe04:	bne	3fe1c <__assert_fail@plt+0x2d730>
   3fe08:	ldr	r3, [fp, #-8]
   3fe0c:	cmp	r3, #0
   3fe10:	blt	3fe1c <__assert_fail@plt+0x2d730>
   3fe14:	ldr	r0, [fp, #-8]
   3fe18:	bl	126a4 <close@plt>
   3fe1c:	ldr	r3, [fp, #-16]
   3fe20:	ldr	r2, [fp, #-20]	; 0xffffffec
   3fe24:	str	r2, [r3, #32]
   3fe28:	nop			; (mov r0, r0)
   3fe2c:	sub	sp, fp, #4
   3fe30:	pop	{fp, pc}
   3fe34:	push	{fp, lr}
   3fe38:	add	fp, sp, #4
   3fe3c:	sub	sp, sp, #16
   3fe40:	str	r0, [fp, #-16]
   3fe44:	ldr	r3, [fp, #-16]
   3fe48:	ldr	r3, [r3, #48]	; 0x30
   3fe4c:	and	r3, r3, #4
   3fe50:	cmp	r3, #0
   3fe54:	bne	3fee4 <__assert_fail@plt+0x2d7f8>
   3fe58:	ldr	r3, [fp, #-16]
   3fe5c:	ldr	r3, [r3, #48]	; 0x30
   3fe60:	and	r3, r3, #512	; 0x200
   3fe64:	cmp	r3, #0
   3fe68:	beq	3fea4 <__assert_fail@plt+0x2d7b8>
   3fe6c:	ldr	r3, [fp, #-16]
   3fe70:	ldr	r3, [r3, #48]	; 0x30
   3fe74:	and	r3, r3, #512	; 0x200
   3fe78:	cmp	r3, #0
   3fe7c:	bne	3fe8c <__assert_fail@plt+0x2d7a0>
   3fe80:	ldr	r3, [fp, #-16]
   3fe84:	ldr	r3, [r3, #28]
   3fe88:	b	3fe90 <__assert_fail@plt+0x2d7a4>
   3fe8c:	mvn	r3, #99	; 0x63
   3fe90:	mov	r2, #1
   3fe94:	mov	r1, r3
   3fe98:	ldr	r0, [fp, #-16]
   3fe9c:	bl	3fd70 <__assert_fail@plt+0x2d684>
   3fea0:	b	3fee4 <__assert_fail@plt+0x2d7f8>
   3fea4:	ldr	r3, [fp, #-16]
   3fea8:	ldr	r3, [r3, #48]	; 0x30
   3feac:	and	r3, r3, #512	; 0x200
   3feb0:	cmp	r3, #0
   3feb4:	bne	3fec4 <__assert_fail@plt+0x2d7d8>
   3feb8:	ldr	r3, [fp, #-16]
   3febc:	ldr	r3, [r3, #28]
   3fec0:	b	3fec8 <__assert_fail@plt+0x2d7dc>
   3fec4:	mvn	r3, #99	; 0x63
   3fec8:	mov	r0, r3
   3fecc:	bl	125d8 <fchdir@plt>
   3fed0:	mov	r3, r0
   3fed4:	cmp	r3, #0
   3fed8:	beq	3fee4 <__assert_fail@plt+0x2d7f8>
   3fedc:	mov	r3, #1
   3fee0:	b	3fee8 <__assert_fail@plt+0x2d7fc>
   3fee4:	mov	r3, #0
   3fee8:	str	r3, [fp, #-8]
   3feec:	ldr	r3, [fp, #-16]
   3fef0:	add	r3, r3, #60	; 0x3c
   3fef4:	mov	r0, r3
   3fef8:	bl	3fcb4 <__assert_fail@plt+0x2d5c8>
   3fefc:	ldr	r3, [fp, #-8]
   3ff00:	mov	r0, r3
   3ff04:	sub	sp, fp, #4
   3ff08:	pop	{fp, pc}
   3ff0c:	push	{fp, lr}
   3ff10:	add	fp, sp, #4
   3ff14:	sub	sp, sp, #16
   3ff18:	str	r0, [fp, #-16]
   3ff1c:	str	r1, [fp, #-20]	; 0xffffffec
   3ff20:	ldr	r3, [fp, #-16]
   3ff24:	ldr	r3, [r3, #48]	; 0x30
   3ff28:	and	r3, r3, #16
   3ff2c:	cmp	r3, #0
   3ff30:	beq	3ff3c <__assert_fail@plt+0x2d850>
   3ff34:	ldr	r3, [pc, #96]	; 3ff9c <__assert_fail@plt+0x2d8b0>
   3ff38:	b	3ff40 <__assert_fail@plt+0x2d854>
   3ff3c:	ldr	r3, [pc, #92]	; 3ffa0 <__assert_fail@plt+0x2d8b4>
   3ff40:	str	r3, [fp, #-8]
   3ff44:	ldr	r3, [fp, #-16]
   3ff48:	ldr	r3, [r3, #48]	; 0x30
   3ff4c:	and	r3, r3, #512	; 0x200
   3ff50:	cmp	r3, #0
   3ff54:	beq	3ff78 <__assert_fail@plt+0x2d88c>
   3ff58:	ldr	r3, [fp, #-16]
   3ff5c:	ldr	r3, [r3, #32]
   3ff60:	ldr	r2, [fp, #-8]
   3ff64:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ff68:	mov	r0, r3
   3ff6c:	bl	2feb0 <__assert_fail@plt+0x1d7c4>
   3ff70:	mov	r3, r0
   3ff74:	b	3ff88 <__assert_fail@plt+0x2d89c>
   3ff78:	ldr	r1, [fp, #-8]
   3ff7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff80:	bl	2a698 <__assert_fail@plt+0x17fac>
   3ff84:	mov	r3, r0
   3ff88:	str	r3, [fp, #-12]
   3ff8c:	ldr	r3, [fp, #-12]
   3ff90:	mov	r0, r3
   3ff94:	sub	sp, fp, #4
   3ff98:	pop	{fp, pc}
   3ff9c:	andeq	ip, r8, r0, lsl #18
   3ffa0:	andeq	r4, r8, r0, lsl #18
   3ffa4:	push	{r4, r5, r6, r7, r8, fp, lr}
   3ffa8:	add	fp, sp, #24
   3ffac:	sub	sp, sp, #36	; 0x24
   3ffb0:	str	r0, [fp, #-56]	; 0xffffffc8
   3ffb4:	mov	r7, r1
   3ffb8:	str	r2, [fp, #-60]	; 0xffffffc4
   3ffbc:	mov	r3, #0
   3ffc0:	str	r3, [fp, #-32]	; 0xffffffe0
   3ffc4:	mov	r3, #0
   3ffc8:	str	r3, [fp, #-36]	; 0xffffffdc
   3ffcc:	bic	r3, r7, #4080	; 0xff0
   3ffd0:	bic	r3, r3, #15
   3ffd4:	cmp	r3, #0
   3ffd8:	beq	3fff4 <__assert_fail@plt+0x2d908>
   3ffdc:	bl	12404 <__errno_location@plt>
   3ffe0:	mov	r2, r0
   3ffe4:	mov	r3, #22
   3ffe8:	str	r3, [r2]
   3ffec:	mov	r3, #0
   3fff0:	b	40408 <__assert_fail@plt+0x2dd1c>
   3fff4:	and	r3, r7, #4
   3fff8:	cmp	r3, #0
   3fffc:	beq	40024 <__assert_fail@plt+0x2d938>
   40000:	and	r3, r7, #512	; 0x200
   40004:	cmp	r3, #0
   40008:	beq	40024 <__assert_fail@plt+0x2d938>
   4000c:	bl	12404 <__errno_location@plt>
   40010:	mov	r2, r0
   40014:	mov	r3, #22
   40018:	str	r3, [r2]
   4001c:	mov	r3, #0
   40020:	b	40408 <__assert_fail@plt+0x2dd1c>
   40024:	and	r3, r7, #18
   40028:	cmp	r3, #0
   4002c:	bne	40048 <__assert_fail@plt+0x2d95c>
   40030:	bl	12404 <__errno_location@plt>
   40034:	mov	r2, r0
   40038:	mov	r3, #22
   4003c:	str	r3, [r2]
   40040:	mov	r3, #0
   40044:	b	40408 <__assert_fail@plt+0x2dd1c>
   40048:	mov	r1, #96	; 0x60
   4004c:	mov	r0, #1
   40050:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   40054:	mov	r3, r0
   40058:	mov	r4, r3
   4005c:	cmp	r4, #0
   40060:	bne	4006c <__assert_fail@plt+0x2d980>
   40064:	mov	r3, #0
   40068:	b	40408 <__assert_fail@plt+0x2dd1c>
   4006c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40070:	str	r3, [r4, #44]	; 0x2c
   40074:	str	r7, [r4, #48]	; 0x30
   40078:	ldr	r3, [r4, #48]	; 0x30
   4007c:	and	r3, r3, #2
   40080:	cmp	r3, #0
   40084:	beq	400a0 <__assert_fail@plt+0x2d9b4>
   40088:	ldr	r3, [r4, #48]	; 0x30
   4008c:	orr	r3, r3, #4
   40090:	str	r3, [r4, #48]	; 0x30
   40094:	ldr	r3, [r4, #48]	; 0x30
   40098:	bic	r3, r3, #512	; 0x200
   4009c:	str	r3, [r4, #48]	; 0x30
   400a0:	mvn	r3, #99	; 0x63
   400a4:	str	r3, [r4, #32]
   400a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   400ac:	bl	42718 <__assert_fail@plt+0x3002c>
   400b0:	str	r0, [fp, #-44]	; 0xffffffd4
   400b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   400b8:	cmp	r3, #4096	; 0x1000
   400bc:	movcs	r3, r3
   400c0:	movcc	r3, #4096	; 0x1000
   400c4:	mov	r1, r3
   400c8:	mov	r0, r4
   400cc:	bl	424f0 <__assert_fail@plt+0x2fe04>
   400d0:	mov	r3, r0
   400d4:	eor	r3, r3, #1
   400d8:	uxtb	r3, r3
   400dc:	cmp	r3, #0
   400e0:	bne	403f8 <__assert_fail@plt+0x2dd0c>
   400e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   400e8:	ldr	r3, [r3]
   400ec:	cmp	r3, #0
   400f0:	beq	40120 <__assert_fail@plt+0x2da34>
   400f4:	mov	r2, #0
   400f8:	ldr	r1, [pc, #788]	; 40414 <__assert_fail@plt+0x2dd28>
   400fc:	mov	r0, r4
   40100:	bl	423ec <__assert_fail@plt+0x2fd00>
   40104:	str	r0, [fp, #-32]	; 0xffffffe0
   40108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4010c:	cmp	r3, #0
   40110:	beq	403e4 <__assert_fail@plt+0x2dcf8>
   40114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40118:	mvn	r2, #0
   4011c:	str	r2, [r3, #48]	; 0x30
   40120:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40124:	cmp	r3, #0
   40128:	beq	4013c <__assert_fail@plt+0x2da50>
   4012c:	ldr	r3, [r4, #48]	; 0x30
   40130:	and	r3, r3, #1024	; 0x400
   40134:	cmp	r3, #0
   40138:	beq	40144 <__assert_fail@plt+0x2da58>
   4013c:	mov	r3, #1
   40140:	b	40148 <__assert_fail@plt+0x2da5c>
   40144:	mov	r3, #0
   40148:	strb	r3, [fp, #-45]	; 0xffffffd3
   4014c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   40150:	and	r3, r3, #1
   40154:	strb	r3, [fp, #-45]	; 0xffffffd3
   40158:	mov	r6, #0
   4015c:	mov	r8, #0
   40160:	b	402c0 <__assert_fail@plt+0x2dbd4>
   40164:	ldr	r3, [fp, #-56]	; 0xffffffc8
   40168:	ldr	r3, [r3]
   4016c:	mov	r0, r3
   40170:	bl	123bc <strlen@plt>
   40174:	str	r0, [fp, #-40]	; 0xffffffd8
   40178:	and	r3, r7, #2048	; 0x800
   4017c:	cmp	r3, #0
   40180:	bne	401f0 <__assert_fail@plt+0x2db04>
   40184:	ldr	r3, [fp, #-56]	; 0xffffffc8
   40188:	ldr	r3, [r3]
   4018c:	str	r3, [fp, #-52]	; 0xffffffcc
   40190:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40194:	cmp	r3, #2
   40198:	bls	401f0 <__assert_fail@plt+0x2db04>
   4019c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   401a0:	sub	r3, r3, #1
   401a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   401a8:	add	r3, r2, r3
   401ac:	ldrb	r3, [r3]
   401b0:	cmp	r3, #47	; 0x2f
   401b4:	bne	401f0 <__assert_fail@plt+0x2db04>
   401b8:	b	401c8 <__assert_fail@plt+0x2dadc>
   401bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   401c0:	sub	r3, r3, #1
   401c4:	str	r3, [fp, #-40]	; 0xffffffd8
   401c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   401cc:	cmp	r3, #1
   401d0:	bls	401f0 <__assert_fail@plt+0x2db04>
   401d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   401d8:	sub	r3, r3, #2
   401dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   401e0:	add	r3, r2, r3
   401e4:	ldrb	r3, [r3]
   401e8:	cmp	r3, #47	; 0x2f
   401ec:	beq	401bc <__assert_fail@plt+0x2dad0>
   401f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   401f4:	ldr	r3, [r3]
   401f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   401fc:	mov	r1, r3
   40200:	mov	r0, r4
   40204:	bl	423ec <__assert_fail@plt+0x2fd00>
   40208:	mov	r5, r0
   4020c:	cmp	r5, #0
   40210:	beq	403bc <__assert_fail@plt+0x2dcd0>
   40214:	mov	r3, #0
   40218:	str	r3, [r5, #48]	; 0x30
   4021c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40220:	str	r3, [r5, #4]
   40224:	add	r3, r5, #168	; 0xa8
   40228:	str	r3, [r5, #24]
   4022c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   40230:	cmp	r3, #0
   40234:	beq	40258 <__assert_fail@plt+0x2db6c>
   40238:	cmp	r6, #0
   4023c:	beq	40258 <__assert_fail@plt+0x2db6c>
   40240:	mov	r3, #11
   40244:	strh	r3, [r5, #56]	; 0x38
   40248:	mov	r1, #1
   4024c:	mov	r0, r5
   40250:	bl	3fd10 <__assert_fail@plt+0x2d624>
   40254:	b	40270 <__assert_fail@plt+0x2db84>
   40258:	mov	r2, #0
   4025c:	mov	r1, r5
   40260:	mov	r0, r4
   40264:	bl	42074 <__assert_fail@plt+0x2f988>
   40268:	mov	r3, r0
   4026c:	strh	r3, [r5, #56]	; 0x38
   40270:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40274:	cmp	r3, #0
   40278:	beq	40288 <__assert_fail@plt+0x2db9c>
   4027c:	str	r6, [r5, #8]
   40280:	mov	r6, r5
   40284:	b	402b0 <__assert_fail@plt+0x2dbc4>
   40288:	mov	r3, #0
   4028c:	str	r3, [r5, #8]
   40290:	cmp	r6, #0
   40294:	bne	402a4 <__assert_fail@plt+0x2dbb8>
   40298:	mov	r6, r5
   4029c:	str	r6, [fp, #-36]	; 0xffffffdc
   402a0:	b	402b0 <__assert_fail@plt+0x2dbc4>
   402a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   402a8:	str	r5, [r3, #8]
   402ac:	str	r5, [fp, #-36]	; 0xffffffdc
   402b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   402b4:	add	r3, r3, #4
   402b8:	str	r3, [fp, #-56]	; 0xffffffc8
   402bc:	add	r8, r8, #1
   402c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   402c4:	ldr	r3, [r3]
   402c8:	cmp	r3, #0
   402cc:	bne	40164 <__assert_fail@plt+0x2da78>
   402d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   402d4:	cmp	r3, #0
   402d8:	beq	402f8 <__assert_fail@plt+0x2dc0c>
   402dc:	cmp	r8, #1
   402e0:	bls	402f8 <__assert_fail@plt+0x2dc0c>
   402e4:	mov	r2, r8
   402e8:	mov	r1, r6
   402ec:	mov	r0, r4
   402f0:	bl	422a4 <__assert_fail@plt+0x2fbb8>
   402f4:	mov	r6, r0
   402f8:	mov	r2, #0
   402fc:	ldr	r1, [pc, #272]	; 40414 <__assert_fail@plt+0x2dd28>
   40300:	mov	r0, r4
   40304:	bl	423ec <__assert_fail@plt+0x2fd00>
   40308:	mov	r3, r0
   4030c:	str	r3, [r4]
   40310:	ldr	r3, [r4]
   40314:	cmp	r3, #0
   40318:	beq	403c4 <__assert_fail@plt+0x2dcd8>
   4031c:	ldr	r3, [r4]
   40320:	str	r6, [r3, #8]
   40324:	ldr	r3, [r4]
   40328:	mov	r2, #9
   4032c:	strh	r2, [r3, #56]	; 0x38
   40330:	ldr	r3, [r4]
   40334:	mov	r2, #1
   40338:	str	r2, [r3, #48]	; 0x30
   4033c:	mov	r0, r4
   40340:	bl	3f8fc <__assert_fail@plt+0x2d210>
   40344:	mov	r3, r0
   40348:	eor	r3, r3, #1
   4034c:	uxtb	r3, r3
   40350:	cmp	r3, #0
   40354:	bne	403cc <__assert_fail@plt+0x2dce0>
   40358:	ldr	r3, [r4, #48]	; 0x30
   4035c:	and	r3, r3, #4
   40360:	cmp	r3, #0
   40364:	bne	403a4 <__assert_fail@plt+0x2dcb8>
   40368:	ldr	r3, [r4, #48]	; 0x30
   4036c:	and	r3, r3, #512	; 0x200
   40370:	cmp	r3, #0
   40374:	bne	403a4 <__assert_fail@plt+0x2dcb8>
   40378:	ldr	r1, [pc, #152]	; 40418 <__assert_fail@plt+0x2dd2c>
   4037c:	mov	r0, r4
   40380:	bl	3ff0c <__assert_fail@plt+0x2d820>
   40384:	mov	r3, r0
   40388:	str	r3, [r4, #28]
   4038c:	ldr	r3, [r4, #28]
   40390:	cmp	r3, #0
   40394:	bge	403a4 <__assert_fail@plt+0x2dcb8>
   40398:	ldr	r3, [r4, #48]	; 0x30
   4039c:	orr	r3, r3, #4
   403a0:	str	r3, [r4, #48]	; 0x30
   403a4:	add	r3, r4, #60	; 0x3c
   403a8:	mvn	r1, #0
   403ac:	mov	r0, r3
   403b0:	bl	5ff38 <__assert_fail@plt+0x4d84c>
   403b4:	mov	r3, r4
   403b8:	b	40408 <__assert_fail@plt+0x2dd1c>
   403bc:	nop			; (mov r0, r0)
   403c0:	b	403d0 <__assert_fail@plt+0x2dce4>
   403c4:	nop			; (mov r0, r0)
   403c8:	b	403d0 <__assert_fail@plt+0x2dce4>
   403cc:	nop			; (mov r0, r0)
   403d0:	mov	r0, r6
   403d4:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   403d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   403dc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   403e0:	b	403e8 <__assert_fail@plt+0x2dcfc>
   403e4:	nop			; (mov r0, r0)
   403e8:	ldr	r3, [r4, #24]
   403ec:	mov	r0, r3
   403f0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   403f4:	b	403fc <__assert_fail@plt+0x2dd10>
   403f8:	nop			; (mov r0, r0)
   403fc:	mov	r0, r4
   40400:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40404:	mov	r3, #0
   40408:	mov	r0, r3
   4040c:	sub	sp, fp, #24
   40410:	pop	{r4, r5, r6, r7, r8, fp, pc}
   40414:			; <UNDEFINED> instruction: 0x0006abb0
   40418:			; <UNDEFINED> instruction: 0x0006abb4
   4041c:	push	{r4, r5, r6, fp, lr}
   40420:	add	fp, sp, #16
   40424:	sub	sp, sp, #12
   40428:	str	r0, [fp, #-24]	; 0xffffffe8
   4042c:	mov	r4, r1
   40430:	ldr	r3, [r4, #52]	; 0x34
   40434:	str	r3, [r4, #40]	; 0x28
   40438:	ldr	r6, [r4, #40]	; 0x28
   4043c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40440:	ldr	r3, [r3, #24]
   40444:	add	r1, r4, #168	; 0xa8
   40448:	add	r2, r6, #1
   4044c:	mov	r0, r3
   40450:	bl	1208c <memmove@plt>
   40454:	add	r3, r4, #168	; 0xa8
   40458:	mov	r1, #47	; 0x2f
   4045c:	mov	r0, r3
   40460:	bl	12548 <strrchr@plt>
   40464:	mov	r5, r0
   40468:	cmp	r5, #0
   4046c:	beq	404b4 <__assert_fail@plt+0x2ddc8>
   40470:	add	r3, r4, #168	; 0xa8
   40474:	cmp	r3, r5
   40478:	bne	4048c <__assert_fail@plt+0x2dda0>
   4047c:	add	r3, r5, #1
   40480:	ldrb	r3, [r3]
   40484:	cmp	r3, #0
   40488:	beq	404b4 <__assert_fail@plt+0x2ddc8>
   4048c:	add	r5, r5, #1
   40490:	mov	r0, r5
   40494:	bl	123bc <strlen@plt>
   40498:	mov	r6, r0
   4049c:	add	r3, r4, #168	; 0xa8
   404a0:	add	r2, r6, #1
   404a4:	mov	r1, r5
   404a8:	mov	r0, r3
   404ac:	bl	1208c <memmove@plt>
   404b0:	str	r6, [r4, #52]	; 0x34
   404b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   404b8:	ldr	r3, [r3, #24]
   404bc:	str	r3, [r4, #28]
   404c0:	ldr	r3, [r4, #28]
   404c4:	str	r3, [r4, #24]
   404c8:	nop			; (mov r0, r0)
   404cc:	sub	sp, fp, #16
   404d0:	pop	{r4, r5, r6, fp, pc}
   404d4:	push	{r4, r5, fp, lr}
   404d8:	add	fp, sp, #12
   404dc:	sub	sp, sp, #16
   404e0:	str	r0, [fp, #-24]	; 0xffffffe8
   404e4:	mov	r3, #0
   404e8:	str	r3, [fp, #-16]
   404ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   404f0:	ldr	r3, [r3]
   404f4:	cmp	r3, #0
   404f8:	beq	40544 <__assert_fail@plt+0x2de58>
   404fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40500:	ldr	r4, [r3]
   40504:	b	40530 <__assert_fail@plt+0x2de44>
   40508:	mov	r5, r4
   4050c:	ldr	r3, [r4, #8]
   40510:	cmp	r3, #0
   40514:	beq	40520 <__assert_fail@plt+0x2de34>
   40518:	ldr	r3, [r4, #8]
   4051c:	b	40524 <__assert_fail@plt+0x2de38>
   40520:	ldr	r3, [r4, #4]
   40524:	mov	r4, r3
   40528:	mov	r0, r5
   4052c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40530:	ldr	r3, [r4, #48]	; 0x30
   40534:	cmp	r3, #0
   40538:	bge	40508 <__assert_fail@plt+0x2de1c>
   4053c:	mov	r0, r4
   40540:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40548:	ldr	r3, [r3, #4]
   4054c:	cmp	r3, #0
   40550:	beq	40564 <__assert_fail@plt+0x2de78>
   40554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40558:	ldr	r3, [r3, #4]
   4055c:	mov	r0, r3
   40560:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   40564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40568:	ldr	r3, [r3, #8]
   4056c:	mov	r0, r3
   40570:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40578:	ldr	r3, [r3, #24]
   4057c:	mov	r0, r3
   40580:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40588:	ldr	r3, [r3, #48]	; 0x30
   4058c:	and	r3, r3, #512	; 0x200
   40590:	cmp	r3, #0
   40594:	beq	405d8 <__assert_fail@plt+0x2deec>
   40598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4059c:	ldr	r3, [r3, #32]
   405a0:	cmp	r3, #0
   405a4:	blt	40650 <__assert_fail@plt+0x2df64>
   405a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   405ac:	ldr	r3, [r3, #32]
   405b0:	mov	r0, r3
   405b4:	bl	126a4 <close@plt>
   405b8:	mov	r3, r0
   405bc:	cmp	r3, #0
   405c0:	beq	40650 <__assert_fail@plt+0x2df64>
   405c4:	bl	12404 <__errno_location@plt>
   405c8:	mov	r3, r0
   405cc:	ldr	r3, [r3]
   405d0:	str	r3, [fp, #-16]
   405d4:	b	40650 <__assert_fail@plt+0x2df64>
   405d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   405dc:	ldr	r3, [r3, #48]	; 0x30
   405e0:	and	r3, r3, #4
   405e4:	cmp	r3, #0
   405e8:	bne	40650 <__assert_fail@plt+0x2df64>
   405ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   405f0:	ldr	r3, [r3, #28]
   405f4:	mov	r0, r3
   405f8:	bl	125d8 <fchdir@plt>
   405fc:	mov	r3, r0
   40600:	cmp	r3, #0
   40604:	beq	40618 <__assert_fail@plt+0x2df2c>
   40608:	bl	12404 <__errno_location@plt>
   4060c:	mov	r3, r0
   40610:	ldr	r3, [r3]
   40614:	str	r3, [fp, #-16]
   40618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4061c:	ldr	r3, [r3, #28]
   40620:	mov	r0, r3
   40624:	bl	126a4 <close@plt>
   40628:	mov	r3, r0
   4062c:	cmp	r3, #0
   40630:	beq	40650 <__assert_fail@plt+0x2df64>
   40634:	ldr	r3, [fp, #-16]
   40638:	cmp	r3, #0
   4063c:	bne	40650 <__assert_fail@plt+0x2df64>
   40640:	bl	12404 <__errno_location@plt>
   40644:	mov	r3, r0
   40648:	ldr	r3, [r3]
   4064c:	str	r3, [fp, #-16]
   40650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40654:	add	r3, r3, #60	; 0x3c
   40658:	mov	r0, r3
   4065c:	bl	3fcb4 <__assert_fail@plt+0x2d5c8>
   40660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40664:	ldr	r3, [r3, #52]	; 0x34
   40668:	cmp	r3, #0
   4066c:	beq	40680 <__assert_fail@plt+0x2df94>
   40670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40674:	ldr	r3, [r3, #52]	; 0x34
   40678:	mov	r0, r3
   4067c:	bl	2b9f4 <__assert_fail@plt+0x19308>
   40680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40684:	bl	3fc48 <__assert_fail@plt+0x2d55c>
   40688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4068c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40690:	ldr	r3, [fp, #-16]
   40694:	cmp	r3, #0
   40698:	beq	406b4 <__assert_fail@plt+0x2dfc8>
   4069c:	bl	12404 <__errno_location@plt>
   406a0:	mov	r2, r0
   406a4:	ldr	r3, [fp, #-16]
   406a8:	str	r3, [r2]
   406ac:	mvn	r3, #0
   406b0:	b	406b8 <__assert_fail@plt+0x2dfcc>
   406b4:	mov	r3, #0
   406b8:	mov	r0, r3
   406bc:	sub	sp, fp, #12
   406c0:	pop	{r4, r5, fp, pc}
   406c4:	push	{fp, lr}
   406c8:	add	fp, sp, #4
   406cc:	sub	sp, sp, #24
   406d0:	str	r0, [fp, #-24]	; 0xffffffe8
   406d4:	str	r1, [fp, #-28]	; 0xffffffe4
   406d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   406dc:	str	r3, [fp, #-8]
   406e0:	ldr	r3, [fp, #-8]
   406e4:	ldrd	r2, [r3]
   406e8:	strd	r2, [fp, #-20]	; 0xffffffec
   406ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   406f0:	mov	r2, r3
   406f4:	mov	r3, #0
   406f8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   406fc:	bl	63e4c <__assert_fail@plt+0x51760>
   40700:	mov	r3, r2
   40704:	mov	r0, r3
   40708:	sub	sp, fp, #4
   4070c:	pop	{fp, pc}
   40710:	push	{fp}		; (str fp, [sp, #-4]!)
   40714:	add	fp, sp, #0
   40718:	sub	sp, sp, #20
   4071c:	str	r0, [fp, #-16]
   40720:	str	r1, [fp, #-20]	; 0xffffffec
   40724:	ldr	r3, [fp, #-16]
   40728:	str	r3, [fp, #-8]
   4072c:	ldr	r3, [fp, #-20]	; 0xffffffec
   40730:	str	r3, [fp, #-12]
   40734:	ldr	r3, [fp, #-8]
   40738:	ldrd	r0, [r3]
   4073c:	ldr	r3, [fp, #-12]
   40740:	ldrd	r2, [r3]
   40744:	cmp	r1, r3
   40748:	cmpeq	r0, r2
   4074c:	moveq	r3, #1
   40750:	movne	r3, #0
   40754:	uxtb	r3, r3
   40758:	mov	r0, r3
   4075c:	add	sp, fp, #0
   40760:	pop	{fp}		; (ldr fp, [sp], #4)
   40764:	bx	lr
   40768:	push	{fp, lr}
   4076c:	add	fp, sp, #4
   40770:	sub	sp, sp, #136	; 0x88
   40774:	str	r0, [fp, #-128]	; 0xffffff80
   40778:	str	r1, [fp, #-132]	; 0xffffff7c
   4077c:	ldr	r3, [fp, #-128]	; 0xffffff80
   40780:	ldr	r3, [r3, #44]	; 0x2c
   40784:	str	r3, [fp, #-12]
   40788:	ldr	r3, [fp, #-12]
   4078c:	ldr	r3, [r3, #52]	; 0x34
   40790:	str	r3, [fp, #-8]
   40794:	ldr	r3, [fp, #-12]
   40798:	ldr	r3, [r3, #48]	; 0x30
   4079c:	and	r3, r3, #512	; 0x200
   407a0:	cmp	r3, #0
   407a4:	bne	407b0 <__assert_fail@plt+0x2e0c4>
   407a8:	mov	r3, #0
   407ac:	b	408e8 <__assert_fail@plt+0x2e1fc>
   407b0:	ldr	r3, [fp, #-8]
   407b4:	cmp	r3, #0
   407b8:	bne	407f4 <__assert_fail@plt+0x2e108>
   407bc:	ldr	r3, [pc, #304]	; 408f4 <__assert_fail@plt+0x2e208>
   407c0:	str	r3, [sp]
   407c4:	ldr	r3, [pc, #300]	; 408f8 <__assert_fail@plt+0x2e20c>
   407c8:	ldr	r2, [pc, #300]	; 408fc <__assert_fail@plt+0x2e210>
   407cc:	mov	r1, #0
   407d0:	mov	r0, #13
   407d4:	bl	2b718 <__assert_fail@plt+0x1902c>
   407d8:	mov	r3, r0
   407dc:	mov	r2, r3
   407e0:	ldr	r3, [fp, #-12]
   407e4:	str	r2, [r3, #52]	; 0x34
   407e8:	ldr	r3, [fp, #-12]
   407ec:	ldr	r3, [r3, #52]	; 0x34
   407f0:	str	r3, [fp, #-8]
   407f4:	ldr	r3, [fp, #-8]
   407f8:	cmp	r3, #0
   407fc:	beq	40838 <__assert_fail@plt+0x2e14c>
   40800:	ldr	r3, [fp, #-128]	; 0xffffff80
   40804:	ldrd	r2, [r3, #64]	; 0x40
   40808:	strd	r2, [fp, #-124]	; 0xffffff84
   4080c:	sub	r3, fp, #124	; 0x7c
   40810:	mov	r1, r3
   40814:	ldr	r0, [fp, #-8]
   40818:	bl	2aecc <__assert_fail@plt+0x187e0>
   4081c:	str	r0, [fp, #-16]
   40820:	ldr	r3, [fp, #-16]
   40824:	cmp	r3, #0
   40828:	beq	40838 <__assert_fail@plt+0x2e14c>
   4082c:	ldr	r3, [fp, #-16]
   40830:	ldr	r3, [r3, #8]
   40834:	b	408e8 <__assert_fail@plt+0x2e1fc>
   40838:	ldr	r3, [fp, #-132]	; 0xffffff7c
   4083c:	cmp	r3, #0
   40840:	blt	40860 <__assert_fail@plt+0x2e174>
   40844:	sub	r3, fp, #108	; 0x6c
   40848:	mov	r1, r3
   4084c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   40850:	bl	11f78 <fstatfs64@plt>
   40854:	mov	r3, r0
   40858:	cmp	r3, #0
   4085c:	beq	40868 <__assert_fail@plt+0x2e17c>
   40860:	mov	r3, #0
   40864:	b	408e8 <__assert_fail@plt+0x2e1fc>
   40868:	ldr	r3, [fp, #-8]
   4086c:	cmp	r3, #0
   40870:	beq	408e4 <__assert_fail@plt+0x2e1f8>
   40874:	mov	r0, #16
   40878:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4087c:	mov	r3, r0
   40880:	str	r3, [fp, #-20]	; 0xffffffec
   40884:	ldr	r3, [fp, #-20]	; 0xffffffec
   40888:	cmp	r3, #0
   4088c:	beq	408e4 <__assert_fail@plt+0x2e1f8>
   40890:	ldr	r3, [fp, #-128]	; 0xffffff80
   40894:	ldrd	r2, [r3, #64]	; 0x40
   40898:	ldr	r1, [fp, #-20]	; 0xffffffec
   4089c:	strd	r2, [r1]
   408a0:	ldr	r2, [fp, #-108]	; 0xffffff94
   408a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   408a8:	str	r2, [r3, #8]
   408ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   408b0:	ldr	r0, [fp, #-8]
   408b4:	bl	2c460 <__assert_fail@plt+0x19d74>
   408b8:	str	r0, [fp, #-16]
   408bc:	ldr	r3, [fp, #-16]
   408c0:	cmp	r3, #0
   408c4:	beq	408dc <__assert_fail@plt+0x2e1f0>
   408c8:	ldr	r2, [fp, #-16]
   408cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   408d0:	cmp	r2, r3
   408d4:	beq	408e4 <__assert_fail@plt+0x2e1f8>
   408d8:	bl	12698 <abort@plt>
   408dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   408e0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   408e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   408e8:	mov	r0, r3
   408ec:	sub	sp, fp, #4
   408f0:	pop	{fp, pc}
   408f4:	andeq	pc, r3, r8, asr #13
   408f8:	andeq	r0, r4, r0, lsl r7
   408fc:	andeq	r0, r4, r4, asr #13
   40900:	push	{fp, lr}
   40904:	add	fp, sp, #4
   40908:	sub	sp, sp, #8
   4090c:	str	r0, [fp, #-8]
   40910:	str	r1, [fp, #-12]
   40914:	ldr	r1, [fp, #-12]
   40918:	ldr	r0, [fp, #-8]
   4091c:	bl	40768 <__assert_fail@plt+0x2e07c>
   40920:	mov	r3, r0
   40924:	ldr	r2, [pc, #52]	; 40960 <__assert_fail@plt+0x2e274>
   40928:	cmp	r3, r2
   4092c:	beq	40948 <__assert_fail@plt+0x2e25c>
   40930:	ldr	r2, [pc, #44]	; 40964 <__assert_fail@plt+0x2e278>
   40934:	cmp	r3, r2
   40938:	beq	40948 <__assert_fail@plt+0x2e25c>
   4093c:	ldr	r2, [pc, #36]	; 40968 <__assert_fail@plt+0x2e27c>
   40940:	cmp	r3, r2
   40944:	bne	40950 <__assert_fail@plt+0x2e264>
   40948:	mov	r3, #0
   4094c:	b	40954 <__assert_fail@plt+0x2e268>
   40950:	mov	r3, #1
   40954:	mov	r0, r3
   40958:	sub	sp, fp, #4
   4095c:	pop	{fp, pc}
   40960:	andeq	r6, r0, r9, ror #18
   40964:			; <UNDEFINED> instruction: 0x01021994
   40968:			; <UNDEFINED> instruction: 0xff534d42
   4096c:	push	{fp, lr}
   40970:	add	fp, sp, #4
   40974:	sub	sp, sp, #8
   40978:	str	r0, [fp, #-8]
   4097c:	str	r1, [fp, #-12]
   40980:	ldr	r1, [fp, #-12]
   40984:	ldr	r0, [fp, #-8]
   40988:	bl	40768 <__assert_fail@plt+0x2e07c>
   4098c:	mov	r3, r0
   40990:	ldr	r2, [pc, #88]	; 409f0 <__assert_fail@plt+0x2e304>
   40994:	cmp	r3, r2
   40998:	beq	409d8 <__assert_fail@plt+0x2e2ec>
   4099c:	ldr	r2, [pc, #76]	; 409f0 <__assert_fail@plt+0x2e304>
   409a0:	cmp	r3, r2
   409a4:	bgt	409c0 <__assert_fail@plt+0x2e2d4>
   409a8:	ldr	r2, [pc, #68]	; 409f4 <__assert_fail@plt+0x2e308>
   409ac:	cmp	r3, r2
   409b0:	beq	409d8 <__assert_fail@plt+0x2e2ec>
   409b4:	cmp	r3, #0
   409b8:	beq	409d8 <__assert_fail@plt+0x2e2ec>
   409bc:	b	409e0 <__assert_fail@plt+0x2e2f4>
   409c0:	ldr	r2, [pc, #48]	; 409f8 <__assert_fail@plt+0x2e30c>
   409c4:	cmp	r3, r2
   409c8:	beq	409d8 <__assert_fail@plt+0x2e2ec>
   409cc:	ldr	r2, [pc, #40]	; 409fc <__assert_fail@plt+0x2e310>
   409d0:	cmp	r3, r2
   409d4:	bne	409e0 <__assert_fail@plt+0x2e2f4>
   409d8:	mov	r3, #0
   409dc:	b	409e4 <__assert_fail@plt+0x2e2f8>
   409e0:	mov	r3, #1
   409e4:	mov	r0, r3
   409e8:	sub	sp, fp, #4
   409ec:	pop	{fp, pc}
   409f0:	andeq	r6, r0, r9, ror #18
   409f4:			; <UNDEFINED> instruction: 0xff534d42
   409f8:	andeq	r9, r0, r0, lsr #31
   409fc:	movtpl	r4, #24911	; 0x614f
   40a00:	push	{r4, r5, r6, r7, fp, lr}
   40a04:	add	fp, sp, #20
   40a08:	mov	r5, r0
   40a0c:	ldr	r3, [r5]
   40a10:	cmp	r3, #0
   40a14:	beq	40a28 <__assert_fail@plt+0x2e33c>
   40a18:	ldr	r3, [r5, #48]	; 0x30
   40a1c:	and	r3, r3, #8192	; 0x2000
   40a20:	cmp	r3, #0
   40a24:	beq	40a30 <__assert_fail@plt+0x2e344>
   40a28:	mov	r3, #0
   40a2c:	b	41164 <__assert_fail@plt+0x2ea78>
   40a30:	ldr	r4, [r5]
   40a34:	ldrh	r6, [r4, #60]	; 0x3c
   40a38:	mov	r3, #3
   40a3c:	strh	r3, [r4, #60]	; 0x3c
   40a40:	cmp	r6, #1
   40a44:	bne	40a68 <__assert_fail@plt+0x2e37c>
   40a48:	mov	r2, #0
   40a4c:	mov	r1, r4
   40a50:	mov	r0, r5
   40a54:	bl	42074 <__assert_fail@plt+0x2f988>
   40a58:	mov	r3, r0
   40a5c:	strh	r3, [r4, #56]	; 0x38
   40a60:	mov	r3, r4
   40a64:	b	41164 <__assert_fail@plt+0x2ea78>
   40a68:	cmp	r6, #2
   40a6c:	bne	40b0c <__assert_fail@plt+0x2e420>
   40a70:	ldrh	r3, [r4, #56]	; 0x38
   40a74:	cmp	r3, #12
   40a78:	beq	40a88 <__assert_fail@plt+0x2e39c>
   40a7c:	ldrh	r3, [r4, #56]	; 0x38
   40a80:	cmp	r3, #13
   40a84:	bne	40b0c <__assert_fail@plt+0x2e420>
   40a88:	mov	r2, #1
   40a8c:	mov	r1, r4
   40a90:	mov	r0, r5
   40a94:	bl	42074 <__assert_fail@plt+0x2f988>
   40a98:	mov	r3, r0
   40a9c:	strh	r3, [r4, #56]	; 0x38
   40aa0:	ldrh	r3, [r4, #56]	; 0x38
   40aa4:	cmp	r3, #1
   40aa8:	bne	40ebc <__assert_fail@plt+0x2e7d0>
   40aac:	ldr	r3, [r5, #48]	; 0x30
   40ab0:	and	r3, r3, #4
   40ab4:	cmp	r3, #0
   40ab8:	bne	40ebc <__assert_fail@plt+0x2e7d0>
   40abc:	ldr	r1, [pc, #1704]	; 4116c <__assert_fail@plt+0x2ea80>
   40ac0:	mov	r0, r5
   40ac4:	bl	3ff0c <__assert_fail@plt+0x2d820>
   40ac8:	mov	r3, r0
   40acc:	str	r3, [r4, #36]	; 0x24
   40ad0:	ldr	r3, [r4, #36]	; 0x24
   40ad4:	cmp	r3, #0
   40ad8:	bge	40af8 <__assert_fail@plt+0x2e40c>
   40adc:	bl	12404 <__errno_location@plt>
   40ae0:	mov	r3, r0
   40ae4:	ldr	r3, [r3]
   40ae8:	str	r3, [r4, #32]
   40aec:	mov	r3, #7
   40af0:	strh	r3, [r4, #56]	; 0x38
   40af4:	b	40ebc <__assert_fail@plt+0x2e7d0>
   40af8:	ldrh	r3, [r4, #58]	; 0x3a
   40afc:	orr	r3, r3, #2
   40b00:	uxth	r3, r3
   40b04:	strh	r3, [r4, #58]	; 0x3a
   40b08:	b	40ebc <__assert_fail@plt+0x2e7d0>
   40b0c:	ldrh	r3, [r4, #56]	; 0x38
   40b10:	cmp	r3, #1
   40b14:	bne	40cc4 <__assert_fail@plt+0x2e5d8>
   40b18:	cmp	r6, #4
   40b1c:	beq	40b44 <__assert_fail@plt+0x2e458>
   40b20:	ldr	r3, [r5, #48]	; 0x30
   40b24:	and	r3, r3, #64	; 0x40
   40b28:	cmp	r3, #0
   40b2c:	beq	40b9c <__assert_fail@plt+0x2e4b0>
   40b30:	ldrd	r0, [r4, #64]	; 0x40
   40b34:	ldrd	r2, [r5, #16]
   40b38:	cmp	r1, r3
   40b3c:	cmpeq	r0, r2
   40b40:	beq	40b9c <__assert_fail@plt+0x2e4b0>
   40b44:	ldrh	r3, [r4, #58]	; 0x3a
   40b48:	and	r3, r3, #2
   40b4c:	cmp	r3, #0
   40b50:	beq	40b60 <__assert_fail@plt+0x2e474>
   40b54:	ldr	r3, [r4, #36]	; 0x24
   40b58:	mov	r0, r3
   40b5c:	bl	126a4 <close@plt>
   40b60:	ldr	r3, [r5, #4]
   40b64:	cmp	r3, #0
   40b68:	beq	40b80 <__assert_fail@plt+0x2e494>
   40b6c:	ldr	r3, [r5, #4]
   40b70:	mov	r0, r3
   40b74:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   40b78:	mov	r3, #0
   40b7c:	str	r3, [r5, #4]
   40b80:	mov	r3, #6
   40b84:	strh	r3, [r4, #56]	; 0x38
   40b88:	mov	r1, r4
   40b8c:	mov	r0, r5
   40b90:	bl	3fb08 <__assert_fail@plt+0x2d41c>
   40b94:	mov	r3, r4
   40b98:	b	41164 <__assert_fail@plt+0x2ea78>
   40b9c:	ldr	r3, [r5, #4]
   40ba0:	cmp	r3, #0
   40ba4:	beq	40bd8 <__assert_fail@plt+0x2e4ec>
   40ba8:	ldr	r3, [r5, #48]	; 0x30
   40bac:	and	r3, r3, #4096	; 0x1000
   40bb0:	cmp	r3, #0
   40bb4:	beq	40bd8 <__assert_fail@plt+0x2e4ec>
   40bb8:	ldr	r3, [r5, #48]	; 0x30
   40bbc:	bic	r3, r3, #4096	; 0x1000
   40bc0:	str	r3, [r5, #48]	; 0x30
   40bc4:	ldr	r3, [r5, #4]
   40bc8:	mov	r0, r3
   40bcc:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   40bd0:	mov	r3, #0
   40bd4:	str	r3, [r5, #4]
   40bd8:	ldr	r3, [r5, #4]
   40bdc:	cmp	r3, #0
   40be0:	beq	40c48 <__assert_fail@plt+0x2e55c>
   40be4:	ldr	r3, [r4, #24]
   40be8:	mvn	r2, #0
   40bec:	mov	r1, r4
   40bf0:	mov	r0, r5
   40bf4:	bl	42790 <__assert_fail@plt+0x300a4>
   40bf8:	mov	r3, r0
   40bfc:	cmp	r3, #0
   40c00:	beq	40cb4 <__assert_fail@plt+0x2e5c8>
   40c04:	bl	12404 <__errno_location@plt>
   40c08:	mov	r3, r0
   40c0c:	ldr	r3, [r3]
   40c10:	str	r3, [r4, #32]
   40c14:	ldrh	r3, [r4, #58]	; 0x3a
   40c18:	orr	r3, r3, #1
   40c1c:	uxth	r3, r3
   40c20:	strh	r3, [r4, #58]	; 0x3a
   40c24:	ldr	r4, [r5, #4]
   40c28:	b	40c3c <__assert_fail@plt+0x2e550>
   40c2c:	ldr	r3, [r4, #4]
   40c30:	ldr	r3, [r3, #24]
   40c34:	str	r3, [r4, #24]
   40c38:	ldr	r4, [r4, #8]
   40c3c:	cmp	r4, #0
   40c40:	bne	40c2c <__assert_fail@plt+0x2e540>
   40c44:	b	40cb4 <__assert_fail@plt+0x2e5c8>
   40c48:	mov	r1, #3
   40c4c:	mov	r0, r5
   40c50:	bl	4153c <__assert_fail@plt+0x2ee50>
   40c54:	mov	r3, r0
   40c58:	str	r3, [r5, #4]
   40c5c:	ldr	r3, [r5, #4]
   40c60:	cmp	r3, #0
   40c64:	bne	40cb4 <__assert_fail@plt+0x2e5c8>
   40c68:	ldr	r3, [r5, #48]	; 0x30
   40c6c:	and	r3, r3, #8192	; 0x2000
   40c70:	cmp	r3, #0
   40c74:	beq	40c80 <__assert_fail@plt+0x2e594>
   40c78:	mov	r3, #0
   40c7c:	b	41164 <__assert_fail@plt+0x2ea78>
   40c80:	ldr	r3, [r4, #32]
   40c84:	cmp	r3, #0
   40c88:	beq	40ca0 <__assert_fail@plt+0x2e5b4>
   40c8c:	ldrh	r3, [r4, #56]	; 0x38
   40c90:	cmp	r3, #4
   40c94:	beq	40ca0 <__assert_fail@plt+0x2e5b4>
   40c98:	mov	r3, #7
   40c9c:	strh	r3, [r4, #56]	; 0x38
   40ca0:	mov	r1, r4
   40ca4:	mov	r0, r5
   40ca8:	bl	3fb08 <__assert_fail@plt+0x2d41c>
   40cac:	mov	r3, r4
   40cb0:	b	41164 <__assert_fail@plt+0x2ea78>
   40cb4:	ldr	r4, [r5, #4]
   40cb8:	mov	r3, #0
   40cbc:	str	r3, [r5, #4]
   40cc0:	b	40e4c <__assert_fail@plt+0x2e760>
   40cc4:	mov	r6, r4
   40cc8:	ldr	r3, [r4, #8]
   40ccc:	cmp	r3, #0
   40cd0:	bne	40d3c <__assert_fail@plt+0x2e650>
   40cd4:	ldr	r3, [r4, #4]
   40cd8:	ldr	r3, [r3, #12]
   40cdc:	cmp	r3, #0
   40ce0:	beq	40d3c <__assert_fail@plt+0x2e650>
   40ce4:	ldr	r4, [r6, #4]
   40ce8:	str	r4, [r5]
   40cec:	ldr	r2, [r5, #24]
   40cf0:	ldr	r3, [r4, #40]	; 0x28
   40cf4:	add	r3, r2, r3
   40cf8:	mov	r2, #0
   40cfc:	strb	r2, [r3]
   40d00:	mov	r1, #3
   40d04:	mov	r0, r5
   40d08:	bl	4153c <__assert_fail@plt+0x2ee50>
   40d0c:	mov	r4, r0
   40d10:	cmp	r4, #0
   40d14:	bne	40d30 <__assert_fail@plt+0x2e644>
   40d18:	ldr	r3, [r5, #48]	; 0x30
   40d1c:	and	r3, r3, #8192	; 0x2000
   40d20:	cmp	r3, #0
   40d24:	beq	40f70 <__assert_fail@plt+0x2e884>
   40d28:	mov	r3, #0
   40d2c:	b	41164 <__assert_fail@plt+0x2ea78>
   40d30:	mov	r0, r6
   40d34:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40d38:	b	40e4c <__assert_fail@plt+0x2e760>
   40d3c:	ldr	r4, [r4, #8]
   40d40:	cmp	r4, #0
   40d44:	beq	40f74 <__assert_fail@plt+0x2e888>
   40d48:	str	r4, [r5]
   40d4c:	mov	r0, r6
   40d50:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40d54:	ldr	r3, [r4, #48]	; 0x30
   40d58:	cmp	r3, #0
   40d5c:	bne	40da8 <__assert_fail@plt+0x2e6bc>
   40d60:	mov	r0, r5
   40d64:	bl	3fe34 <__assert_fail@plt+0x2d748>
   40d68:	mov	r3, r0
   40d6c:	cmp	r3, #0
   40d70:	beq	40d88 <__assert_fail@plt+0x2e69c>
   40d74:	ldr	r3, [r5, #48]	; 0x30
   40d78:	orr	r3, r3, #8192	; 0x2000
   40d7c:	str	r3, [r5, #48]	; 0x30
   40d80:	mov	r3, #0
   40d84:	b	41164 <__assert_fail@plt+0x2ea78>
   40d88:	mov	r0, r5
   40d8c:	bl	3fc48 <__assert_fail@plt+0x2d55c>
   40d90:	mov	r1, r4
   40d94:	mov	r0, r5
   40d98:	bl	4041c <__assert_fail@plt+0x2dd30>
   40d9c:	mov	r0, r5
   40da0:	bl	3f8fc <__assert_fail@plt+0x2d210>
   40da4:	b	40ec0 <__assert_fail@plt+0x2e7d4>
   40da8:	ldrh	r3, [r4, #60]	; 0x3c
   40dac:	cmp	r3, #4
   40db0:	bne	40db8 <__assert_fail@plt+0x2e6cc>
   40db4:	b	40cc4 <__assert_fail@plt+0x2e5d8>
   40db8:	ldrh	r3, [r4, #60]	; 0x3c
   40dbc:	cmp	r3, #2
   40dc0:	bne	40e4c <__assert_fail@plt+0x2e760>
   40dc4:	mov	r2, #1
   40dc8:	mov	r1, r4
   40dcc:	mov	r0, r5
   40dd0:	bl	42074 <__assert_fail@plt+0x2f988>
   40dd4:	mov	r3, r0
   40dd8:	strh	r3, [r4, #56]	; 0x38
   40ddc:	ldrh	r3, [r4, #56]	; 0x38
   40de0:	cmp	r3, #1
   40de4:	bne	40e44 <__assert_fail@plt+0x2e758>
   40de8:	ldr	r3, [r5, #48]	; 0x30
   40dec:	and	r3, r3, #4
   40df0:	cmp	r3, #0
   40df4:	bne	40e44 <__assert_fail@plt+0x2e758>
   40df8:	ldr	r1, [pc, #876]	; 4116c <__assert_fail@plt+0x2ea80>
   40dfc:	mov	r0, r5
   40e00:	bl	3ff0c <__assert_fail@plt+0x2d820>
   40e04:	mov	r3, r0
   40e08:	str	r3, [r4, #36]	; 0x24
   40e0c:	ldr	r3, [r4, #36]	; 0x24
   40e10:	cmp	r3, #0
   40e14:	bge	40e34 <__assert_fail@plt+0x2e748>
   40e18:	bl	12404 <__errno_location@plt>
   40e1c:	mov	r3, r0
   40e20:	ldr	r3, [r3]
   40e24:	str	r3, [r4, #32]
   40e28:	mov	r3, #7
   40e2c:	strh	r3, [r4, #56]	; 0x38
   40e30:	b	40e44 <__assert_fail@plt+0x2e758>
   40e34:	ldrh	r3, [r4, #58]	; 0x3a
   40e38:	orr	r3, r3, #2
   40e3c:	uxth	r3, r3
   40e40:	strh	r3, [r4, #58]	; 0x3a
   40e44:	mov	r3, #3
   40e48:	strh	r3, [r4, #60]	; 0x3c
   40e4c:	ldr	r2, [r5, #24]
   40e50:	ldr	r3, [r4, #4]
   40e54:	ldr	r1, [r3, #28]
   40e58:	ldr	r3, [r4, #4]
   40e5c:	ldr	r3, [r3, #40]	; 0x28
   40e60:	sub	r3, r3, #1
   40e64:	add	r3, r1, r3
   40e68:	ldrb	r3, [r3]
   40e6c:	cmp	r3, #47	; 0x2f
   40e70:	bne	40e84 <__assert_fail@plt+0x2e798>
   40e74:	ldr	r3, [r4, #4]
   40e78:	ldr	r3, [r3, #40]	; 0x28
   40e7c:	sub	r3, r3, #1
   40e80:	b	40e8c <__assert_fail@plt+0x2e7a0>
   40e84:	ldr	r3, [r4, #4]
   40e88:	ldr	r3, [r3, #40]	; 0x28
   40e8c:	add	r6, r2, r3
   40e90:	mov	r3, r6
   40e94:	add	r6, r3, #1
   40e98:	mov	r2, #47	; 0x2f
   40e9c:	strb	r2, [r3]
   40ea0:	add	r1, r4, #168	; 0xa8
   40ea4:	ldr	r3, [r4, #52]	; 0x34
   40ea8:	add	r3, r3, #1
   40eac:	mov	r2, r3
   40eb0:	mov	r0, r6
   40eb4:	bl	1208c <memmove@plt>
   40eb8:	b	40ec0 <__assert_fail@plt+0x2e7d4>
   40ebc:	nop			; (mov r0, r0)
   40ec0:	str	r4, [r5]
   40ec4:	ldrh	r3, [r4, #56]	; 0x38
   40ec8:	cmp	r3, #11
   40ecc:	bne	40f10 <__assert_fail@plt+0x2e824>
   40ed0:	ldrd	r2, [r4, #112]	; 0x70
   40ed4:	cmp	r3, #0
   40ed8:	cmpeq	r2, #2
   40edc:	bne	40efc <__assert_fail@plt+0x2e810>
   40ee0:	mov	r2, #0
   40ee4:	mov	r1, r4
   40ee8:	mov	r0, r5
   40eec:	bl	42074 <__assert_fail@plt+0x2f988>
   40ef0:	mov	r3, r0
   40ef4:	strh	r3, [r4, #56]	; 0x38
   40ef8:	b	40f10 <__assert_fail@plt+0x2e824>
   40efc:	ldrd	r2, [r4, #112]	; 0x70
   40f00:	cmp	r3, #0
   40f04:	cmpeq	r2, #1
   40f08:	beq	40f10 <__assert_fail@plt+0x2e824>
   40f0c:	bl	12698 <abort@plt>
   40f10:	ldrh	r3, [r4, #56]	; 0x38
   40f14:	cmp	r3, #1
   40f18:	bne	40f68 <__assert_fail@plt+0x2e87c>
   40f1c:	ldr	r3, [r4, #48]	; 0x30
   40f20:	cmp	r3, #0
   40f24:	bne	40f30 <__assert_fail@plt+0x2e844>
   40f28:	ldrd	r2, [r4, #64]	; 0x40
   40f2c:	strd	r2, [r5, #16]
   40f30:	mov	r1, r4
   40f34:	mov	r0, r5
   40f38:	bl	3f9c8 <__assert_fail@plt+0x2d2dc>
   40f3c:	mov	r3, r0
   40f40:	eor	r3, r3, #1
   40f44:	uxtb	r3, r3
   40f48:	cmp	r3, #0
   40f4c:	beq	40f68 <__assert_fail@plt+0x2e87c>
   40f50:	bl	12404 <__errno_location@plt>
   40f54:	mov	r2, r0
   40f58:	mov	r3, #12
   40f5c:	str	r3, [r2]
   40f60:	mov	r3, #0
   40f64:	b	41164 <__assert_fail@plt+0x2ea78>
   40f68:	mov	r3, r4
   40f6c:	b	41164 <__assert_fail@plt+0x2ea78>
   40f70:	nop			; (mov r0, r0)
   40f74:	ldr	r4, [r6, #4]
   40f78:	str	r4, [r5]
   40f7c:	mov	r0, r6
   40f80:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40f84:	ldr	r3, [r4, #48]	; 0x30
   40f88:	cmn	r3, #1
   40f8c:	bne	40fb8 <__assert_fail@plt+0x2e8cc>
   40f90:	mov	r0, r4
   40f94:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   40f98:	bl	12404 <__errno_location@plt>
   40f9c:	mov	r2, r0
   40fa0:	mov	r3, #0
   40fa4:	str	r3, [r2]
   40fa8:	mov	r3, #0
   40fac:	str	r3, [r5]
   40fb0:	mov	r3, #0
   40fb4:	b	41164 <__assert_fail@plt+0x2ea78>
   40fb8:	ldrh	r3, [r4, #56]	; 0x38
   40fbc:	cmp	r3, #11
   40fc0:	bne	40fc8 <__assert_fail@plt+0x2e8dc>
   40fc4:	bl	12698 <abort@plt>
   40fc8:	ldr	r2, [r5, #24]
   40fcc:	ldr	r3, [r4, #40]	; 0x28
   40fd0:	add	r3, r2, r3
   40fd4:	mov	r2, #0
   40fd8:	strb	r2, [r3]
   40fdc:	ldr	r3, [r4, #48]	; 0x30
   40fe0:	cmp	r3, #0
   40fe4:	bne	4101c <__assert_fail@plt+0x2e930>
   40fe8:	mov	r0, r5
   40fec:	bl	3fe34 <__assert_fail@plt+0x2d748>
   40ff0:	mov	r3, r0
   40ff4:	cmp	r3, #0
   40ff8:	beq	41108 <__assert_fail@plt+0x2ea1c>
   40ffc:	bl	12404 <__errno_location@plt>
   41000:	mov	r3, r0
   41004:	ldr	r3, [r3]
   41008:	str	r3, [r4, #32]
   4100c:	ldr	r3, [r5, #48]	; 0x30
   41010:	orr	r3, r3, #8192	; 0x2000
   41014:	str	r3, [r5, #48]	; 0x30
   41018:	b	41108 <__assert_fail@plt+0x2ea1c>
   4101c:	ldrh	r3, [r4, #58]	; 0x3a
   41020:	and	r3, r3, #2
   41024:	cmp	r3, #0
   41028:	beq	410bc <__assert_fail@plt+0x2e9d0>
   4102c:	ldr	r3, [r5, #48]	; 0x30
   41030:	and	r3, r3, #4
   41034:	cmp	r3, #0
   41038:	bne	410ac <__assert_fail@plt+0x2e9c0>
   4103c:	ldr	r3, [r5, #48]	; 0x30
   41040:	and	r3, r3, #512	; 0x200
   41044:	cmp	r3, #0
   41048:	beq	41068 <__assert_fail@plt+0x2e97c>
   4104c:	ldr	r3, [r4, #36]	; 0x24
   41050:	mov	r2, #1
   41054:	mov	r1, r3
   41058:	mov	r0, r5
   4105c:	bl	3fd70 <__assert_fail@plt+0x2d684>
   41060:	mov	r3, #0
   41064:	b	41088 <__assert_fail@plt+0x2e99c>
   41068:	ldr	r3, [r4, #36]	; 0x24
   4106c:	mov	r0, r3
   41070:	bl	125d8 <fchdir@plt>
   41074:	mov	r3, r0
   41078:	cmp	r3, #0
   4107c:	movne	r3, #1
   41080:	moveq	r3, #0
   41084:	uxtb	r3, r3
   41088:	cmp	r3, #0
   4108c:	beq	410ac <__assert_fail@plt+0x2e9c0>
   41090:	bl	12404 <__errno_location@plt>
   41094:	mov	r3, r0
   41098:	ldr	r3, [r3]
   4109c:	str	r3, [r4, #32]
   410a0:	ldr	r3, [r5, #48]	; 0x30
   410a4:	orr	r3, r3, #8192	; 0x2000
   410a8:	str	r3, [r5, #48]	; 0x30
   410ac:	ldr	r3, [r4, #36]	; 0x24
   410b0:	mov	r0, r3
   410b4:	bl	126a4 <close@plt>
   410b8:	b	41108 <__assert_fail@plt+0x2ea1c>
   410bc:	ldrh	r3, [r4, #58]	; 0x3a
   410c0:	and	r3, r3, #1
   410c4:	cmp	r3, #0
   410c8:	bne	41108 <__assert_fail@plt+0x2ea1c>
   410cc:	ldr	r1, [r4, #4]
   410d0:	ldr	r3, [pc, #152]	; 41170 <__assert_fail@plt+0x2ea84>
   410d4:	mvn	r2, #0
   410d8:	mov	r0, r5
   410dc:	bl	42790 <__assert_fail@plt+0x300a4>
   410e0:	mov	r3, r0
   410e4:	cmp	r3, #0
   410e8:	beq	41108 <__assert_fail@plt+0x2ea1c>
   410ec:	bl	12404 <__errno_location@plt>
   410f0:	mov	r3, r0
   410f4:	ldr	r3, [r3]
   410f8:	str	r3, [r4, #32]
   410fc:	ldr	r3, [r5, #48]	; 0x30
   41100:	orr	r3, r3, #8192	; 0x2000
   41104:	str	r3, [r5, #48]	; 0x30
   41108:	ldrh	r3, [r4, #56]	; 0x38
   4110c:	cmp	r3, #2
   41110:	beq	41148 <__assert_fail@plt+0x2ea5c>
   41114:	ldr	r3, [r4, #32]
   41118:	cmp	r3, #0
   4111c:	beq	41128 <__assert_fail@plt+0x2ea3c>
   41120:	mov	r3, #7
   41124:	b	4112c <__assert_fail@plt+0x2ea40>
   41128:	mov	r3, #6
   4112c:	strh	r3, [r4, #56]	; 0x38
   41130:	ldr	r3, [r4, #32]
   41134:	cmp	r3, #0
   41138:	bne	41148 <__assert_fail@plt+0x2ea5c>
   4113c:	mov	r1, r4
   41140:	mov	r0, r5
   41144:	bl	3fb08 <__assert_fail@plt+0x2d41c>
   41148:	ldr	r3, [r5, #48]	; 0x30
   4114c:	and	r3, r3, #8192	; 0x2000
   41150:	cmp	r3, #0
   41154:	bne	41160 <__assert_fail@plt+0x2ea74>
   41158:	mov	r3, r4
   4115c:	b	41164 <__assert_fail@plt+0x2ea78>
   41160:	mov	r3, #0
   41164:	mov	r0, r3
   41168:	pop	{r4, r5, r6, r7, fp, pc}
   4116c:			; <UNDEFINED> instruction: 0x0006abb4
   41170:			; <UNDEFINED> instruction: 0x0006abb8
   41174:	push	{fp, lr}
   41178:	add	fp, sp, #4
   4117c:	sub	sp, sp, #16
   41180:	str	r0, [fp, #-8]
   41184:	str	r1, [fp, #-12]
   41188:	str	r2, [fp, #-16]
   4118c:	ldr	r3, [fp, #-16]
   41190:	cmp	r3, #0
   41194:	beq	411e0 <__assert_fail@plt+0x2eaf4>
   41198:	ldr	r3, [fp, #-16]
   4119c:	cmp	r3, #1
   411a0:	beq	411e0 <__assert_fail@plt+0x2eaf4>
   411a4:	ldr	r3, [fp, #-16]
   411a8:	cmp	r3, #2
   411ac:	beq	411e0 <__assert_fail@plt+0x2eaf4>
   411b0:	ldr	r3, [fp, #-16]
   411b4:	cmp	r3, #3
   411b8:	beq	411e0 <__assert_fail@plt+0x2eaf4>
   411bc:	ldr	r3, [fp, #-16]
   411c0:	cmp	r3, #4
   411c4:	beq	411e0 <__assert_fail@plt+0x2eaf4>
   411c8:	bl	12404 <__errno_location@plt>
   411cc:	mov	r2, r0
   411d0:	mov	r3, #22
   411d4:	str	r3, [r2]
   411d8:	mov	r3, #1
   411dc:	b	411f4 <__assert_fail@plt+0x2eb08>
   411e0:	ldr	r3, [fp, #-16]
   411e4:	uxth	r2, r3
   411e8:	ldr	r3, [fp, #-12]
   411ec:	strh	r2, [r3, #60]	; 0x3c
   411f0:	mov	r3, #0
   411f4:	mov	r0, r3
   411f8:	sub	sp, fp, #4
   411fc:	pop	{fp, pc}
   41200:	push	{r4, r5, fp, lr}
   41204:	add	fp, sp, #12
   41208:	sub	sp, sp, #16
   4120c:	mov	r4, r0
   41210:	str	r1, [fp, #-24]	; 0xffffffe8
   41214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41218:	cmp	r3, #0
   4121c:	beq	41244 <__assert_fail@plt+0x2eb58>
   41220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41224:	cmp	r3, #4096	; 0x1000
   41228:	beq	41244 <__assert_fail@plt+0x2eb58>
   4122c:	bl	12404 <__errno_location@plt>
   41230:	mov	r2, r0
   41234:	mov	r3, #22
   41238:	str	r3, [r2]
   4123c:	mov	r3, #0
   41240:	b	413d8 <__assert_fail@plt+0x2ecec>
   41244:	ldr	r5, [r4]
   41248:	bl	12404 <__errno_location@plt>
   4124c:	mov	r2, r0
   41250:	mov	r3, #0
   41254:	str	r3, [r2]
   41258:	ldr	r3, [r4, #48]	; 0x30
   4125c:	and	r3, r3, #8192	; 0x2000
   41260:	cmp	r3, #0
   41264:	beq	41270 <__assert_fail@plt+0x2eb84>
   41268:	mov	r3, #0
   4126c:	b	413d8 <__assert_fail@plt+0x2ecec>
   41270:	ldrh	r3, [r5, #56]	; 0x38
   41274:	cmp	r3, #9
   41278:	bne	41284 <__assert_fail@plt+0x2eb98>
   4127c:	ldr	r3, [r5, #8]
   41280:	b	413d8 <__assert_fail@plt+0x2ecec>
   41284:	ldrh	r3, [r5, #56]	; 0x38
   41288:	cmp	r3, #1
   4128c:	beq	41298 <__assert_fail@plt+0x2ebac>
   41290:	mov	r3, #0
   41294:	b	413d8 <__assert_fail@plt+0x2ecec>
   41298:	ldr	r3, [r4, #4]
   4129c:	cmp	r3, #0
   412a0:	beq	412b0 <__assert_fail@plt+0x2ebc4>
   412a4:	ldr	r3, [r4, #4]
   412a8:	mov	r0, r3
   412ac:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   412b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   412b4:	cmp	r3, #4096	; 0x1000
   412b8:	bne	412d4 <__assert_fail@plt+0x2ebe8>
   412bc:	ldr	r3, [r4, #48]	; 0x30
   412c0:	orr	r3, r3, #4096	; 0x1000
   412c4:	str	r3, [r4, #48]	; 0x30
   412c8:	mov	r3, #2
   412cc:	str	r3, [fp, #-24]	; 0xffffffe8
   412d0:	b	412dc <__assert_fail@plt+0x2ebf0>
   412d4:	mov	r3, #1
   412d8:	str	r3, [fp, #-24]	; 0xffffffe8
   412dc:	ldr	r3, [r5, #48]	; 0x30
   412e0:	cmp	r3, #0
   412e4:	bne	41308 <__assert_fail@plt+0x2ec1c>
   412e8:	ldr	r3, [r5, #24]
   412ec:	ldrb	r3, [r3]
   412f0:	cmp	r3, #47	; 0x2f
   412f4:	beq	41308 <__assert_fail@plt+0x2ec1c>
   412f8:	ldr	r3, [r4, #48]	; 0x30
   412fc:	and	r3, r3, #4
   41300:	cmp	r3, #0
   41304:	beq	41324 <__assert_fail@plt+0x2ec38>
   41308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4130c:	mov	r0, r4
   41310:	bl	4153c <__assert_fail@plt+0x2ee50>
   41314:	mov	r3, r0
   41318:	str	r3, [r4, #4]
   4131c:	ldr	r3, [r4, #4]
   41320:	b	413d8 <__assert_fail@plt+0x2ecec>
   41324:	ldr	r1, [pc, #184]	; 413e4 <__assert_fail@plt+0x2ecf8>
   41328:	mov	r0, r4
   4132c:	bl	3ff0c <__assert_fail@plt+0x2d820>
   41330:	str	r0, [fp, #-16]
   41334:	ldr	r3, [fp, #-16]
   41338:	cmp	r3, #0
   4133c:	bge	41350 <__assert_fail@plt+0x2ec64>
   41340:	mov	r3, #0
   41344:	str	r3, [r4, #4]
   41348:	mov	r3, #0
   4134c:	b	413d8 <__assert_fail@plt+0x2ecec>
   41350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   41354:	mov	r0, r4
   41358:	bl	4153c <__assert_fail@plt+0x2ee50>
   4135c:	mov	r3, r0
   41360:	str	r3, [r4, #4]
   41364:	ldr	r3, [r4, #48]	; 0x30
   41368:	and	r3, r3, #512	; 0x200
   4136c:	cmp	r3, #0
   41370:	beq	41388 <__assert_fail@plt+0x2ec9c>
   41374:	mov	r2, #1
   41378:	ldr	r1, [fp, #-16]
   4137c:	mov	r0, r4
   41380:	bl	3fd70 <__assert_fail@plt+0x2d684>
   41384:	b	413d4 <__assert_fail@plt+0x2ece8>
   41388:	ldr	r0, [fp, #-16]
   4138c:	bl	125d8 <fchdir@plt>
   41390:	mov	r3, r0
   41394:	cmp	r3, #0
   41398:	beq	413cc <__assert_fail@plt+0x2ece0>
   4139c:	bl	12404 <__errno_location@plt>
   413a0:	mov	r3, r0
   413a4:	ldr	r3, [r3]
   413a8:	str	r3, [fp, #-20]	; 0xffffffec
   413ac:	ldr	r0, [fp, #-16]
   413b0:	bl	126a4 <close@plt>
   413b4:	bl	12404 <__errno_location@plt>
   413b8:	mov	r2, r0
   413bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   413c0:	str	r3, [r2]
   413c4:	mov	r3, #0
   413c8:	b	413d8 <__assert_fail@plt+0x2ecec>
   413cc:	ldr	r0, [fp, #-16]
   413d0:	bl	126a4 <close@plt>
   413d4:	ldr	r3, [r4, #4]
   413d8:	mov	r0, r3
   413dc:	sub	sp, fp, #12
   413e0:	pop	{r4, r5, fp, pc}
   413e4:			; <UNDEFINED> instruction: 0x0006abb4
   413e8:	push	{fp}		; (str fp, [sp, #-4]!)
   413ec:	add	fp, sp, #0
   413f0:	sub	sp, sp, #12
   413f4:	str	r0, [fp, #-8]
   413f8:	str	r1, [fp, #-12]
   413fc:	ldr	r3, [fp, #-8]
   41400:	ldr	r3, [r3]
   41404:	ldrd	r0, [r3, #160]	; 0xa0
   41408:	ldr	r3, [fp, #-12]
   4140c:	ldr	r3, [r3]
   41410:	ldrd	r2, [r3, #160]	; 0xa0
   41414:	cmp	r1, r3
   41418:	cmpeq	r0, r2
   4141c:	movhi	r3, #1
   41420:	movls	r3, #0
   41424:	uxtb	r3, r3
   41428:	mov	ip, r3
   4142c:	ldr	r3, [fp, #-8]
   41430:	ldr	r3, [r3]
   41434:	ldrd	r0, [r3, #160]	; 0xa0
   41438:	ldr	r3, [fp, #-12]
   4143c:	ldr	r3, [r3]
   41440:	ldrd	r2, [r3, #160]	; 0xa0
   41444:	cmp	r1, r3
   41448:	cmpeq	r0, r2
   4144c:	movcc	r3, #1
   41450:	movcs	r3, #0
   41454:	uxtb	r3, r3
   41458:	sub	r3, ip, r3
   4145c:	mov	r0, r3
   41460:	add	sp, fp, #0
   41464:	pop	{fp}		; (ldr fp, [sp], #4)
   41468:	bx	lr
   4146c:	push	{fp}		; (str fp, [sp, #-4]!)
   41470:	add	fp, sp, #0
   41474:	sub	sp, sp, #20
   41478:	str	r0, [fp, #-16]
   4147c:	str	r1, [fp, #-20]	; 0xffffffec
   41480:	ldr	r3, [fp, #-20]	; 0xffffffec
   41484:	sub	r3, r3, #1
   41488:	cmp	r3, #11
   4148c:	ldrls	pc, [pc, r3, lsl #2]
   41490:	b	41518 <__assert_fail@plt+0x2ee2c>
   41494:	andeq	r1, r4, r8, ror #9
   41498:	ldrdeq	r1, [r4], -r0
   4149c:	andeq	r1, r4, r8, lsl r5
   414a0:	ldrdeq	r1, [r4], -ip
   414a4:	andeq	r1, r4, r8, lsl r5
   414a8:	andeq	r1, r4, r4, asr #9
   414ac:	andeq	r1, r4, r8, lsl r5
   414b0:	andeq	r1, r4, r0, lsl #10
   414b4:	andeq	r1, r4, r8, lsl r5
   414b8:	strdeq	r1, [r4], -r4
   414bc:	andeq	r1, r4, r8, lsl r5
   414c0:	andeq	r1, r4, ip, lsl #10
   414c4:	mov	r3, #24576	; 0x6000
   414c8:	str	r3, [fp, #-8]
   414cc:	b	41520 <__assert_fail@plt+0x2ee34>
   414d0:	mov	r3, #8192	; 0x2000
   414d4:	str	r3, [fp, #-8]
   414d8:	b	41520 <__assert_fail@plt+0x2ee34>
   414dc:	mov	r3, #16384	; 0x4000
   414e0:	str	r3, [fp, #-8]
   414e4:	b	41520 <__assert_fail@plt+0x2ee34>
   414e8:	mov	r3, #4096	; 0x1000
   414ec:	str	r3, [fp, #-8]
   414f0:	b	41520 <__assert_fail@plt+0x2ee34>
   414f4:	mov	r3, #40960	; 0xa000
   414f8:	str	r3, [fp, #-8]
   414fc:	b	41520 <__assert_fail@plt+0x2ee34>
   41500:	mov	r3, #32768	; 0x8000
   41504:	str	r3, [fp, #-8]
   41508:	b	41520 <__assert_fail@plt+0x2ee34>
   4150c:	mov	r3, #49152	; 0xc000
   41510:	str	r3, [fp, #-8]
   41514:	b	41520 <__assert_fail@plt+0x2ee34>
   41518:	mov	r3, #0
   4151c:	str	r3, [fp, #-8]
   41520:	ldr	r3, [fp, #-16]
   41524:	ldr	r2, [fp, #-8]
   41528:	str	r2, [r3, #16]
   4152c:	nop			; (mov r0, r0)
   41530:	add	sp, fp, #0
   41534:	pop	{fp}		; (ldr fp, [sp], #4)
   41538:	bx	lr
   4153c:	push	{r4, r5, r6, r7, fp, lr}
   41540:	add	fp, sp, #20
   41544:	sub	sp, sp, #80	; 0x50
   41548:	mov	r4, r0
   4154c:	str	r1, [fp, #-96]	; 0xffffffa0
   41550:	ldr	r3, [r4]
   41554:	str	r3, [fp, #-44]	; 0xffffffd4
   41558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4155c:	ldr	r3, [r3, #12]
   41560:	cmp	r3, #0
   41564:	movne	r3, #1
   41568:	moveq	r3, #0
   4156c:	strb	r3, [fp, #-45]	; 0xffffffd3
   41570:	mov	r3, #0
   41574:	strb	r3, [fp, #-37]	; 0xffffffdb
   41578:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   4157c:	cmp	r3, #0
   41580:	beq	415fc <__assert_fail@plt+0x2ef10>
   41584:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41588:	ldr	r3, [r3, #12]
   4158c:	str	r3, [fp, #-52]	; 0xffffffcc
   41590:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41594:	bl	125cc <dirfd@plt>
   41598:	mov	r3, r0
   4159c:	str	r3, [fp, #-92]	; 0xffffffa4
   415a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   415a4:	cmp	r3, #0
   415a8:	bge	41760 <__assert_fail@plt+0x2f074>
   415ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   415b0:	ldr	r3, [r3, #12]
   415b4:	mov	r0, r3
   415b8:	bl	126bc <closedir@plt>
   415bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   415c0:	mov	r2, #0
   415c4:	str	r2, [r3, #12]
   415c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   415cc:	cmp	r3, #3
   415d0:	bne	415f4 <__assert_fail@plt+0x2ef08>
   415d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   415d8:	mov	r2, #4
   415dc:	strh	r2, [r3, #56]	; 0x38
   415e0:	bl	12404 <__errno_location@plt>
   415e4:	mov	r3, r0
   415e8:	ldr	r2, [r3]
   415ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   415f0:	str	r2, [r3, #32]
   415f4:	mov	r3, #0
   415f8:	b	42054 <__assert_fail@plt+0x2f968>
   415fc:	ldr	r3, [r4, #48]	; 0x30
   41600:	and	r3, r3, #4
   41604:	cmp	r3, #0
   41608:	bne	41624 <__assert_fail@plt+0x2ef38>
   4160c:	ldr	r3, [r4, #48]	; 0x30
   41610:	and	r3, r3, #512	; 0x200
   41614:	cmp	r3, #0
   41618:	beq	41624 <__assert_fail@plt+0x2ef38>
   4161c:	ldr	r0, [r4, #32]
   41620:	b	41628 <__assert_fail@plt+0x2ef3c>
   41624:	mvn	r0, #99	; 0x63
   41628:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4162c:	ldr	r1, [r3, #24]
   41630:	ldr	r3, [r4, #48]	; 0x30
   41634:	and	r3, r3, #16
   41638:	cmp	r3, #0
   4163c:	beq	41668 <__assert_fail@plt+0x2ef7c>
   41640:	ldr	r3, [r4, #48]	; 0x30
   41644:	and	r3, r3, #1
   41648:	cmp	r3, #0
   4164c:	beq	41660 <__assert_fail@plt+0x2ef74>
   41650:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41654:	ldr	r3, [r3, #48]	; 0x30
   41658:	cmp	r3, #0
   4165c:	beq	41668 <__assert_fail@plt+0x2ef7c>
   41660:	mov	r2, #32768	; 0x8000
   41664:	b	4166c <__assert_fail@plt+0x2ef80>
   41668:	mov	r2, #0
   4166c:	sub	r3, fp, #92	; 0x5c
   41670:	bl	63358 <__assert_fail@plt+0x50c6c>
   41674:	mov	r3, r0
   41678:	mov	r2, r3
   4167c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41680:	str	r2, [r3, #12]
   41684:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41688:	ldr	r3, [r3, #12]
   4168c:	cmp	r3, #0
   41690:	bne	416c8 <__assert_fail@plt+0x2efdc>
   41694:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41698:	cmp	r3, #3
   4169c:	bne	416c0 <__assert_fail@plt+0x2efd4>
   416a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   416a4:	mov	r2, #4
   416a8:	strh	r2, [r3, #56]	; 0x38
   416ac:	bl	12404 <__errno_location@plt>
   416b0:	mov	r3, r0
   416b4:	ldr	r2, [r3]
   416b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   416bc:	str	r2, [r3, #32]
   416c0:	mov	r3, #0
   416c4:	b	42054 <__assert_fail@plt+0x2f968>
   416c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   416cc:	ldrh	r3, [r3, #56]	; 0x38
   416d0:	cmp	r3, #11
   416d4:	bne	416fc <__assert_fail@plt+0x2f010>
   416d8:	mov	r2, #0
   416dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   416e0:	mov	r0, r4
   416e4:	bl	42074 <__assert_fail@plt+0x2f988>
   416e8:	mov	r3, r0
   416ec:	mov	r2, r3
   416f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   416f4:	strh	r2, [r3, #56]	; 0x38
   416f8:	b	41760 <__assert_fail@plt+0x2f074>
   416fc:	ldr	r3, [r4, #48]	; 0x30
   41700:	and	r3, r3, #256	; 0x100
   41704:	cmp	r3, #0
   41708:	beq	41760 <__assert_fail@plt+0x2f074>
   4170c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41710:	mov	r0, r4
   41714:	bl	3fb08 <__assert_fail@plt+0x2d41c>
   41718:	mov	r2, #0
   4171c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41720:	mov	r0, r4
   41724:	bl	42074 <__assert_fail@plt+0x2f988>
   41728:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4172c:	mov	r0, r4
   41730:	bl	3f9c8 <__assert_fail@plt+0x2d2dc>
   41734:	mov	r3, r0
   41738:	eor	r3, r3, #1
   4173c:	uxtb	r3, r3
   41740:	cmp	r3, #0
   41744:	beq	41760 <__assert_fail@plt+0x2f074>
   41748:	bl	12404 <__errno_location@plt>
   4174c:	mov	r2, r0
   41750:	mov	r3, #12
   41754:	str	r3, [r2]
   41758:	mov	r3, #0
   4175c:	b	42054 <__assert_fail@plt+0x2f968>
   41760:	ldr	r3, [r4, #44]	; 0x2c
   41764:	cmp	r3, #0
   41768:	beq	41774 <__assert_fail@plt+0x2f088>
   4176c:	mvn	r3, #0
   41770:	b	41778 <__assert_fail@plt+0x2f08c>
   41774:	ldr	r3, [pc, #2276]	; 42060 <__assert_fail@plt+0x2f974>
   41778:	str	r3, [fp, #-56]	; 0xffffffc8
   4177c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   41780:	cmp	r3, #0
   41784:	beq	41794 <__assert_fail@plt+0x2f0a8>
   41788:	mov	r3, #1
   4178c:	strb	r3, [fp, #-25]	; 0xffffffe7
   41790:	b	41930 <__assert_fail@plt+0x2f244>
   41794:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41798:	cmp	r3, #2
   4179c:	beq	41804 <__assert_fail@plt+0x2f118>
   417a0:	ldr	r3, [r4, #48]	; 0x30
   417a4:	and	r3, r3, #8
   417a8:	cmp	r3, #0
   417ac:	beq	417fc <__assert_fail@plt+0x2f110>
   417b0:	ldr	r3, [r4, #48]	; 0x30
   417b4:	and	r3, r3, #16
   417b8:	cmp	r3, #0
   417bc:	beq	417fc <__assert_fail@plt+0x2f110>
   417c0:	ldr	r3, [r4, #48]	; 0x30
   417c4:	and	r3, r3, #32
   417c8:	cmp	r3, #0
   417cc:	bne	417fc <__assert_fail@plt+0x2f110>
   417d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   417d4:	ldr	r3, [r3, #84]	; 0x54
   417d8:	cmp	r3, #2
   417dc:	bne	417fc <__assert_fail@plt+0x2f110>
   417e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   417e4:	mov	r1, r3
   417e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   417ec:	bl	4096c <__assert_fail@plt+0x2e280>
   417f0:	mov	r3, r0
   417f4:	cmp	r3, #0
   417f8:	bne	41804 <__assert_fail@plt+0x2f118>
   417fc:	mov	r3, #1
   41800:	b	41808 <__assert_fail@plt+0x2f11c>
   41804:	mov	r3, #0
   41808:	strb	r3, [fp, #-25]	; 0xffffffe7
   4180c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   41810:	and	r3, r3, #1
   41814:	strb	r3, [fp, #-25]	; 0xffffffe7
   41818:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4181c:	cmp	r3, #0
   41820:	bne	41830 <__assert_fail@plt+0x2f144>
   41824:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41828:	cmp	r3, #3
   4182c:	bne	41930 <__assert_fail@plt+0x2f244>
   41830:	ldr	r3, [r4, #48]	; 0x30
   41834:	and	r3, r3, #512	; 0x200
   41838:	cmp	r3, #0
   4183c:	beq	4185c <__assert_fail@plt+0x2f170>
   41840:	ldr	r3, [fp, #-92]	; 0xffffffa4
   41844:	mov	r2, #3
   41848:	ldr	r1, [pc, #2068]	; 42064 <__assert_fail@plt+0x2f978>
   4184c:	mov	r0, r3
   41850:	bl	3f2a0 <__assert_fail@plt+0x2cbb4>
   41854:	mov	r3, r0
   41858:	str	r3, [fp, #-92]	; 0xffffffa4
   4185c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   41860:	cmp	r3, #0
   41864:	blt	41888 <__assert_fail@plt+0x2f19c>
   41868:	ldr	r2, [fp, #-92]	; 0xffffffa4
   4186c:	mov	r3, #0
   41870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41874:	mov	r0, r4
   41878:	bl	42790 <__assert_fail@plt+0x300a4>
   4187c:	mov	r3, r0
   41880:	cmp	r3, #0
   41884:	beq	41928 <__assert_fail@plt+0x2f23c>
   41888:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4188c:	cmp	r3, #0
   41890:	beq	418b4 <__assert_fail@plt+0x2f1c8>
   41894:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41898:	cmp	r3, #3
   4189c:	bne	418b4 <__assert_fail@plt+0x2f1c8>
   418a0:	bl	12404 <__errno_location@plt>
   418a4:	mov	r3, r0
   418a8:	ldr	r2, [r3]
   418ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   418b0:	str	r2, [r3, #32]
   418b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   418b8:	ldrh	r3, [r3, #58]	; 0x3a
   418bc:	orr	r3, r3, #1
   418c0:	uxth	r2, r3
   418c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   418c8:	strh	r2, [r3, #58]	; 0x3a
   418cc:	mov	r3, #0
   418d0:	strb	r3, [fp, #-25]	; 0xffffffe7
   418d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   418d8:	ldr	r3, [r3, #12]
   418dc:	mov	r0, r3
   418e0:	bl	126bc <closedir@plt>
   418e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   418e8:	mov	r2, #0
   418ec:	str	r2, [r3, #12]
   418f0:	ldr	r3, [r4, #48]	; 0x30
   418f4:	and	r3, r3, #512	; 0x200
   418f8:	cmp	r3, #0
   418fc:	beq	41918 <__assert_fail@plt+0x2f22c>
   41900:	ldr	r3, [fp, #-92]	; 0xffffffa4
   41904:	cmp	r3, #0
   41908:	blt	41918 <__assert_fail@plt+0x2f22c>
   4190c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   41910:	mov	r0, r3
   41914:	bl	126a4 <close@plt>
   41918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4191c:	mov	r2, #0
   41920:	str	r2, [r3, #12]
   41924:	b	41930 <__assert_fail@plt+0x2f244>
   41928:	mov	r3, #1
   4192c:	strb	r3, [fp, #-25]	; 0xffffffe7
   41930:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41934:	ldr	r2, [r3, #28]
   41938:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4193c:	ldr	r3, [r3, #40]	; 0x28
   41940:	sub	r3, r3, #1
   41944:	add	r3, r2, r3
   41948:	ldrb	r3, [r3]
   4194c:	cmp	r3, #47	; 0x2f
   41950:	bne	41964 <__assert_fail@plt+0x2f278>
   41954:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41958:	ldr	r3, [r3, #40]	; 0x28
   4195c:	sub	r3, r3, #1
   41960:	b	4196c <__assert_fail@plt+0x2f280>
   41964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41968:	ldr	r3, [r3, #40]	; 0x28
   4196c:	str	r3, [fp, #-60]	; 0xffffffc4
   41970:	ldr	r3, [r4, #48]	; 0x30
   41974:	and	r3, r3, #4
   41978:	cmp	r3, #0
   4197c:	beq	419a8 <__assert_fail@plt+0x2f2bc>
   41980:	ldr	r2, [r4, #24]
   41984:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41988:	add	r3, r2, r3
   4198c:	str	r3, [fp, #-36]	; 0xffffffdc
   41990:	ldr	r3, [fp, #-36]	; 0xffffffdc
   41994:	add	r2, r3, #1
   41998:	str	r2, [fp, #-36]	; 0xffffffdc
   4199c:	mov	r2, #47	; 0x2f
   419a0:	strb	r2, [r3]
   419a4:	b	419b0 <__assert_fail@plt+0x2f2c4>
   419a8:	mov	r3, #0
   419ac:	str	r3, [fp, #-36]	; 0xffffffdc
   419b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   419b4:	add	r3, r3, #1
   419b8:	str	r3, [fp, #-60]	; 0xffffffc4
   419bc:	ldr	r2, [r4, #36]	; 0x24
   419c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   419c4:	sub	r3, r2, r3
   419c8:	str	r3, [fp, #-32]	; 0xffffffe0
   419cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   419d0:	ldr	r3, [r3, #48]	; 0x30
   419d4:	add	r3, r3, #1
   419d8:	str	r3, [fp, #-64]	; 0xffffffc0
   419dc:	mov	r3, #0
   419e0:	strb	r3, [fp, #-26]	; 0xffffffe6
   419e4:	mov	r7, #0
   419e8:	mov	r3, #0
   419ec:	str	r3, [fp, #-24]	; 0xffffffe8
   419f0:	mov	r6, #0
   419f4:	b	41e44 <__assert_fail@plt+0x2f758>
   419f8:	bl	12404 <__errno_location@plt>
   419fc:	mov	r2, r0
   41a00:	mov	r3, #0
   41a04:	str	r3, [r2]
   41a08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41a0c:	ldr	r3, [r3, #12]
   41a10:	mov	r0, r3
   41a14:	bl	1259c <readdir64@plt>
   41a18:	str	r0, [fp, #-68]	; 0xffffffbc
   41a1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41a20:	cmp	r3, #0
   41a24:	bne	41a7c <__assert_fail@plt+0x2f390>
   41a28:	bl	12404 <__errno_location@plt>
   41a2c:	mov	r3, r0
   41a30:	ldr	r3, [r3]
   41a34:	cmp	r3, #0
   41a38:	beq	41e58 <__assert_fail@plt+0x2f76c>
   41a3c:	bl	12404 <__errno_location@plt>
   41a40:	mov	r3, r0
   41a44:	ldr	r2, [r3]
   41a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41a4c:	str	r2, [r3, #32]
   41a50:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   41a54:	cmp	r3, #0
   41a58:	bne	41a64 <__assert_fail@plt+0x2f378>
   41a5c:	cmp	r6, #0
   41a60:	beq	41a6c <__assert_fail@plt+0x2f380>
   41a64:	mov	r2, #7
   41a68:	b	41a70 <__assert_fail@plt+0x2f384>
   41a6c:	mov	r2, #4
   41a70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41a74:	strh	r2, [r3, #56]	; 0x38
   41a78:	b	41e58 <__assert_fail@plt+0x2f76c>
   41a7c:	ldr	r3, [r4, #48]	; 0x30
   41a80:	and	r3, r3, #32
   41a84:	cmp	r3, #0
   41a88:	bne	41ad0 <__assert_fail@plt+0x2f3e4>
   41a8c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41a90:	ldrb	r3, [r3, #19]
   41a94:	cmp	r3, #46	; 0x2e
   41a98:	bne	41ad0 <__assert_fail@plt+0x2f3e4>
   41a9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41aa0:	ldrb	r3, [r3, #20]
   41aa4:	cmp	r3, #0
   41aa8:	beq	41e44 <__assert_fail@plt+0x2f758>
   41aac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41ab0:	ldrb	r3, [r3, #20]
   41ab4:	cmp	r3, #46	; 0x2e
   41ab8:	bne	41ad0 <__assert_fail@plt+0x2f3e4>
   41abc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41ac0:	ldrb	r3, [r3, #21]
   41ac4:	cmp	r3, #0
   41ac8:	bne	41ad0 <__assert_fail@plt+0x2f3e4>
   41acc:	b	41e44 <__assert_fail@plt+0x2f758>
   41ad0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41ad4:	add	r3, r3, #19
   41ad8:	mov	r0, r3
   41adc:	bl	123bc <strlen@plt>
   41ae0:	str	r0, [fp, #-72]	; 0xffffffb8
   41ae4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41ae8:	add	r3, r3, #19
   41aec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   41af0:	mov	r1, r3
   41af4:	mov	r0, r4
   41af8:	bl	423ec <__assert_fail@plt+0x2fd00>
   41afc:	mov	r5, r0
   41b00:	cmp	r5, #0
   41b04:	beq	41b54 <__assert_fail@plt+0x2f468>
   41b08:	ldr	r2, [fp, #-72]	; 0xffffffb8
   41b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41b10:	cmp	r2, r3
   41b14:	bcc	41c0c <__assert_fail@plt+0x2f520>
   41b18:	ldr	r3, [r4, #24]
   41b1c:	str	r3, [fp, #-76]	; 0xffffffb4
   41b20:	ldr	r2, [fp, #-72]	; 0xffffffb8
   41b24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41b28:	add	r3, r2, r3
   41b2c:	add	r3, r3, #1
   41b30:	mov	r1, r3
   41b34:	mov	r0, r4
   41b38:	bl	424f0 <__assert_fail@plt+0x2fe04>
   41b3c:	mov	r3, r0
   41b40:	eor	r3, r3, #1
   41b44:	uxtb	r3, r3
   41b48:	cmp	r3, #0
   41b4c:	beq	41bc4 <__assert_fail@plt+0x2f4d8>
   41b50:	b	41b58 <__assert_fail@plt+0x2f46c>
   41b54:	nop			; (mov r0, r0)
   41b58:	bl	12404 <__errno_location@plt>
   41b5c:	mov	r3, r0
   41b60:	ldr	r3, [r3]
   41b64:	str	r3, [fp, #-88]	; 0xffffffa8
   41b68:	mov	r0, r5
   41b6c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   41b70:	mov	r0, r7
   41b74:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   41b78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41b7c:	ldr	r3, [r3, #12]
   41b80:	mov	r0, r3
   41b84:	bl	126bc <closedir@plt>
   41b88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41b8c:	mov	r2, #0
   41b90:	str	r2, [r3, #12]
   41b94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41b98:	mov	r2, #7
   41b9c:	strh	r2, [r3, #56]	; 0x38
   41ba0:	ldr	r3, [r4, #48]	; 0x30
   41ba4:	orr	r3, r3, #8192	; 0x2000
   41ba8:	str	r3, [r4, #48]	; 0x30
   41bac:	bl	12404 <__errno_location@plt>
   41bb0:	mov	r2, r0
   41bb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   41bb8:	str	r3, [r2]
   41bbc:	mov	r3, #0
   41bc0:	b	42054 <__assert_fail@plt+0x2f968>
   41bc4:	ldr	r2, [r4, #24]
   41bc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   41bcc:	cmp	r2, r3
   41bd0:	beq	41bfc <__assert_fail@plt+0x2f510>
   41bd4:	mov	r3, #1
   41bd8:	strb	r3, [fp, #-26]	; 0xffffffe6
   41bdc:	ldr	r3, [r4, #48]	; 0x30
   41be0:	and	r3, r3, #4
   41be4:	cmp	r3, #0
   41be8:	beq	41bfc <__assert_fail@plt+0x2f510>
   41bec:	ldr	r2, [r4, #24]
   41bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41bf4:	add	r3, r2, r3
   41bf8:	str	r3, [fp, #-36]	; 0xffffffdc
   41bfc:	ldr	r2, [r4, #36]	; 0x24
   41c00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41c04:	sub	r3, r2, r3
   41c08:	str	r3, [fp, #-32]	; 0xffffffe0
   41c0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   41c10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   41c14:	add	r3, r2, r3
   41c18:	str	r3, [fp, #-80]	; 0xffffffb0
   41c1c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   41c20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41c24:	cmp	r2, r3
   41c28:	bcs	41c88 <__assert_fail@plt+0x2f59c>
   41c2c:	mov	r0, r5
   41c30:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   41c34:	mov	r0, r7
   41c38:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   41c3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41c40:	ldr	r3, [r3, #12]
   41c44:	mov	r0, r3
   41c48:	bl	126bc <closedir@plt>
   41c4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41c50:	mov	r2, #0
   41c54:	str	r2, [r3, #12]
   41c58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41c5c:	mov	r2, #7
   41c60:	strh	r2, [r3, #56]	; 0x38
   41c64:	ldr	r3, [r4, #48]	; 0x30
   41c68:	orr	r3, r3, #8192	; 0x2000
   41c6c:	str	r3, [r4, #48]	; 0x30
   41c70:	bl	12404 <__errno_location@plt>
   41c74:	mov	r2, r0
   41c78:	mov	r3, #36	; 0x24
   41c7c:	str	r3, [r2]
   41c80:	mov	r3, #0
   41c84:	b	42054 <__assert_fail@plt+0x2f968>
   41c88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   41c8c:	str	r3, [r5, #48]	; 0x30
   41c90:	ldr	r3, [r4]
   41c94:	str	r3, [r5, #4]
   41c98:	ldr	r3, [fp, #-80]	; 0xffffffb0
   41c9c:	str	r3, [r5, #40]	; 0x28
   41ca0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41ca4:	ldrd	r2, [r3]
   41ca8:	strd	r2, [r5, #160]	; 0xa0
   41cac:	ldr	r3, [r4, #48]	; 0x30
   41cb0:	and	r3, r3, #4
   41cb4:	cmp	r3, #0
   41cb8:	beq	41ce0 <__assert_fail@plt+0x2f5f4>
   41cbc:	ldr	r3, [r5, #28]
   41cc0:	str	r3, [r5, #24]
   41cc4:	add	r1, r5, #168	; 0xa8
   41cc8:	ldr	r3, [r5, #52]	; 0x34
   41ccc:	add	r3, r3, #1
   41cd0:	mov	r2, r3
   41cd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   41cd8:	bl	1208c <memmove@plt>
   41cdc:	b	41ce8 <__assert_fail@plt+0x2f5fc>
   41ce0:	add	r3, r5, #168	; 0xa8
   41ce4:	str	r3, [r5, #24]
   41ce8:	ldr	r3, [r4, #44]	; 0x2c
   41cec:	cmp	r3, #0
   41cf0:	beq	41d04 <__assert_fail@plt+0x2f618>
   41cf4:	ldr	r3, [r4, #48]	; 0x30
   41cf8:	and	r3, r3, #1024	; 0x400
   41cfc:	cmp	r3, #0
   41d00:	beq	41dc4 <__assert_fail@plt+0x2f6d8>
   41d04:	ldr	r3, [r4, #48]	; 0x30
   41d08:	and	r3, r3, #8
   41d0c:	cmp	r3, #0
   41d10:	beq	41d5c <__assert_fail@plt+0x2f670>
   41d14:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41d18:	ldrb	r3, [r3, #18]
   41d1c:	cmp	r3, #0
   41d20:	beq	41d5c <__assert_fail@plt+0x2f670>
   41d24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41d28:	ldrb	r3, [r3, #18]
   41d2c:	cmp	r3, #4
   41d30:	beq	41d5c <__assert_fail@plt+0x2f670>
   41d34:	ldr	r3, [r4, #48]	; 0x30
   41d38:	and	r3, r3, #16
   41d3c:	cmp	r3, #0
   41d40:	bne	41d54 <__assert_fail@plt+0x2f668>
   41d44:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41d48:	ldrb	r3, [r3, #18]
   41d4c:	cmp	r3, #10
   41d50:	beq	41d5c <__assert_fail@plt+0x2f670>
   41d54:	mov	r3, #1
   41d58:	b	41d60 <__assert_fail@plt+0x2f674>
   41d5c:	mov	r3, #0
   41d60:	strb	r3, [fp, #-81]	; 0xffffffaf
   41d64:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   41d68:	and	r3, r3, #1
   41d6c:	strb	r3, [fp, #-81]	; 0xffffffaf
   41d70:	mov	r3, #11
   41d74:	strh	r3, [r5, #56]	; 0x38
   41d78:	add	r2, r5, #64	; 0x40
   41d7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   41d80:	ldrb	r3, [r3, #18]
   41d84:	mov	r1, r3
   41d88:	mov	r0, r2
   41d8c:	bl	4146c <__assert_fail@plt+0x2ed80>
   41d90:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   41d94:	cmp	r3, #0
   41d98:	movne	r3, #1
   41d9c:	moveq	r3, #0
   41da0:	uxtb	r3, r3
   41da4:	eor	r3, r3, #1
   41da8:	uxtb	r3, r3
   41dac:	and	r3, r3, #1
   41db0:	uxtb	r3, r3
   41db4:	mov	r1, r3
   41db8:	mov	r0, r5
   41dbc:	bl	3fd10 <__assert_fail@plt+0x2d624>
   41dc0:	b	41ddc <__assert_fail@plt+0x2f6f0>
   41dc4:	mov	r2, #0
   41dc8:	mov	r1, r5
   41dcc:	mov	r0, r4
   41dd0:	bl	42074 <__assert_fail@plt+0x2f988>
   41dd4:	mov	r3, r0
   41dd8:	strh	r3, [r5, #56]	; 0x38
   41ddc:	mov	r3, #0
   41de0:	str	r3, [r5, #8]
   41de4:	cmp	r7, #0
   41de8:	bne	41df8 <__assert_fail@plt+0x2f70c>
   41dec:	str	r5, [fp, #-24]	; 0xffffffe8
   41df0:	ldr	r7, [fp, #-24]	; 0xffffffe8
   41df4:	b	41e04 <__assert_fail@plt+0x2f718>
   41df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41dfc:	str	r5, [r3, #8]
   41e00:	str	r5, [fp, #-24]	; 0xffffffe8
   41e04:	ldr	r3, [pc, #604]	; 42068 <__assert_fail@plt+0x2f97c>
   41e08:	cmp	r6, r3
   41e0c:	bne	41e34 <__assert_fail@plt+0x2f748>
   41e10:	ldr	r3, [r4, #44]	; 0x2c
   41e14:	cmp	r3, #0
   41e18:	bne	41e34 <__assert_fail@plt+0x2f748>
   41e1c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   41e20:	mov	r1, r3
   41e24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   41e28:	bl	40900 <__assert_fail@plt+0x2e214>
   41e2c:	mov	r3, r0
   41e30:	strb	r3, [fp, #-37]	; 0xffffffdb
   41e34:	add	r6, r6, #1
   41e38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   41e3c:	cmp	r3, r6
   41e40:	bls	41e8c <__assert_fail@plt+0x2f7a0>
   41e44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e48:	ldr	r3, [r3, #12]
   41e4c:	cmp	r3, #0
   41e50:	bne	419f8 <__assert_fail@plt+0x2f30c>
   41e54:	b	41e5c <__assert_fail@plt+0x2f770>
   41e58:	nop			; (mov r0, r0)
   41e5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e60:	ldr	r3, [r3, #12]
   41e64:	cmp	r3, #0
   41e68:	beq	41e90 <__assert_fail@plt+0x2f7a4>
   41e6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e70:	ldr	r3, [r3, #12]
   41e74:	mov	r0, r3
   41e78:	bl	126bc <closedir@plt>
   41e7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e80:	mov	r2, #0
   41e84:	str	r2, [r3, #12]
   41e88:	b	41e90 <__assert_fail@plt+0x2f7a4>
   41e8c:	nop			; (mov r0, r0)
   41e90:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   41e94:	cmp	r3, #0
   41e98:	beq	41ea8 <__assert_fail@plt+0x2f7bc>
   41e9c:	mov	r1, r7
   41ea0:	mov	r0, r4
   41ea4:	bl	425dc <__assert_fail@plt+0x2fef0>
   41ea8:	ldr	r3, [r4, #48]	; 0x30
   41eac:	and	r3, r3, #4
   41eb0:	cmp	r3, #0
   41eb4:	beq	41ee8 <__assert_fail@plt+0x2f7fc>
   41eb8:	ldr	r2, [r4, #36]	; 0x24
   41ebc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41ec0:	cmp	r2, r3
   41ec4:	beq	41ed0 <__assert_fail@plt+0x2f7e4>
   41ec8:	cmp	r6, #0
   41ecc:	bne	41edc <__assert_fail@plt+0x2f7f0>
   41ed0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   41ed4:	sub	r3, r3, #1
   41ed8:	str	r3, [fp, #-36]	; 0xffffffdc
   41edc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   41ee0:	mov	r2, #0
   41ee4:	strb	r2, [r3]
   41ee8:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   41eec:	eor	r3, r3, #1
   41ef0:	uxtb	r3, r3
   41ef4:	cmp	r3, #0
   41ef8:	beq	41fa8 <__assert_fail@plt+0x2f8bc>
   41efc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   41f00:	cmp	r3, #0
   41f04:	beq	41fa8 <__assert_fail@plt+0x2f8bc>
   41f08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41f0c:	cmp	r3, #1
   41f10:	beq	41f1c <__assert_fail@plt+0x2f830>
   41f14:	cmp	r6, #0
   41f18:	bne	41fa8 <__assert_fail@plt+0x2f8bc>
   41f1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f20:	ldr	r3, [r3, #48]	; 0x30
   41f24:	cmp	r3, #0
   41f28:	bne	41f4c <__assert_fail@plt+0x2f860>
   41f2c:	mov	r0, r4
   41f30:	bl	3fe34 <__assert_fail@plt+0x2d748>
   41f34:	mov	r3, r0
   41f38:	cmp	r3, #0
   41f3c:	movne	r3, #1
   41f40:	moveq	r3, #0
   41f44:	uxtb	r3, r3
   41f48:	b	41f78 <__assert_fail@plt+0x2f88c>
   41f4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f50:	ldr	r1, [r3, #4]
   41f54:	ldr	r3, [pc, #272]	; 4206c <__assert_fail@plt+0x2f980>
   41f58:	mvn	r2, #0
   41f5c:	mov	r0, r4
   41f60:	bl	42790 <__assert_fail@plt+0x300a4>
   41f64:	mov	r3, r0
   41f68:	cmp	r3, #0
   41f6c:	movne	r3, #1
   41f70:	moveq	r3, #0
   41f74:	uxtb	r3, r3
   41f78:	cmp	r3, #0
   41f7c:	beq	41fa8 <__assert_fail@plt+0x2f8bc>
   41f80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f84:	mov	r2, #7
   41f88:	strh	r2, [r3, #56]	; 0x38
   41f8c:	ldr	r3, [r4, #48]	; 0x30
   41f90:	orr	r3, r3, #8192	; 0x2000
   41f94:	str	r3, [r4, #48]	; 0x30
   41f98:	mov	r0, r7
   41f9c:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   41fa0:	mov	r3, #0
   41fa4:	b	42054 <__assert_fail@plt+0x2f968>
   41fa8:	cmp	r6, #0
   41fac:	bne	41ff8 <__assert_fail@plt+0x2f90c>
   41fb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41fb4:	cmp	r3, #3
   41fb8:	bne	41fe8 <__assert_fail@plt+0x2f8fc>
   41fbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41fc0:	ldrh	r3, [r3, #56]	; 0x38
   41fc4:	cmp	r3, #4
   41fc8:	beq	41fe8 <__assert_fail@plt+0x2f8fc>
   41fcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41fd0:	ldrh	r3, [r3, #56]	; 0x38
   41fd4:	cmp	r3, #7
   41fd8:	beq	41fe8 <__assert_fail@plt+0x2f8fc>
   41fdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41fe0:	mov	r2, #6
   41fe4:	strh	r2, [r3, #56]	; 0x38
   41fe8:	mov	r0, r7
   41fec:	bl	424a8 <__assert_fail@plt+0x2fdbc>
   41ff0:	mov	r3, #0
   41ff4:	b	42054 <__assert_fail@plt+0x2f968>
   41ff8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   41ffc:	cmp	r3, #0
   42000:	beq	42028 <__assert_fail@plt+0x2f93c>
   42004:	ldr	r3, [pc, #100]	; 42070 <__assert_fail@plt+0x2f984>
   42008:	str	r3, [r4, #44]	; 0x2c
   4200c:	mov	r2, r6
   42010:	mov	r1, r7
   42014:	mov	r0, r4
   42018:	bl	422a4 <__assert_fail@plt+0x2fbb8>
   4201c:	mov	r7, r0
   42020:	mov	r3, #0
   42024:	str	r3, [r4, #44]	; 0x2c
   42028:	ldr	r3, [r4, #44]	; 0x2c
   4202c:	cmp	r3, #0
   42030:	beq	42050 <__assert_fail@plt+0x2f964>
   42034:	cmp	r6, #1
   42038:	bls	42050 <__assert_fail@plt+0x2f964>
   4203c:	mov	r2, r6
   42040:	mov	r1, r7
   42044:	mov	r0, r4
   42048:	bl	422a4 <__assert_fail@plt+0x2fbb8>
   4204c:	mov	r7, r0
   42050:	mov	r3, r7
   42054:	mov	r0, r3
   42058:	sub	sp, fp, #20
   4205c:	pop	{r4, r5, r6, r7, fp, pc}
   42060:	andeq	r8, r1, r0, lsr #13
   42064:	andeq	r0, r0, r6, lsl #8
   42068:	andeq	r2, r0, r0, lsl r7
   4206c:			; <UNDEFINED> instruction: 0x0006abb8
   42070:	andeq	r1, r4, r8, ror #7
   42074:	push	{r4, fp, lr}
   42078:	add	fp, sp, #8
   4207c:	sub	sp, sp, #20
   42080:	str	r0, [fp, #-24]	; 0xffffffe8
   42084:	mov	r4, r1
   42088:	mov	r3, r2
   4208c:	strb	r3, [fp, #-25]	; 0xffffffe7
   42090:	add	r3, r4, #64	; 0x40
   42094:	str	r3, [fp, #-16]
   42098:	ldr	r3, [r4, #48]	; 0x30
   4209c:	cmp	r3, #0
   420a0:	bne	420c0 <__assert_fail@plt+0x2f9d4>
   420a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   420a8:	ldr	r3, [r3, #48]	; 0x30
   420ac:	and	r3, r3, #1
   420b0:	cmp	r3, #0
   420b4:	beq	420c0 <__assert_fail@plt+0x2f9d4>
   420b8:	mov	r3, #1
   420bc:	strb	r3, [fp, #-25]	; 0xffffffe7
   420c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   420c4:	ldr	r3, [r3, #48]	; 0x30
   420c8:	and	r3, r3, #2
   420cc:	cmp	r3, #0
   420d0:	bne	420e0 <__assert_fail@plt+0x2f9f4>
   420d4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   420d8:	cmp	r3, #0
   420dc:	beq	42158 <__assert_fail@plt+0x2fa6c>
   420e0:	ldr	r3, [r4, #24]
   420e4:	ldr	r1, [fp, #-16]
   420e8:	mov	r0, r3
   420ec:	bl	64084 <__assert_fail@plt+0x51998>
   420f0:	mov	r3, r0
   420f4:	cmp	r3, #0
   420f8:	beq	421a4 <__assert_fail@plt+0x2fab8>
   420fc:	bl	12404 <__errno_location@plt>
   42100:	mov	r3, r0
   42104:	ldr	r3, [r3]
   42108:	cmp	r3, #2
   4210c:	bne	42144 <__assert_fail@plt+0x2fa58>
   42110:	ldr	r3, [r4, #24]
   42114:	ldr	r1, [fp, #-16]
   42118:	mov	r0, r3
   4211c:	bl	640a4 <__assert_fail@plt+0x519b8>
   42120:	mov	r3, r0
   42124:	cmp	r3, #0
   42128:	bne	42144 <__assert_fail@plt+0x2fa58>
   4212c:	bl	12404 <__errno_location@plt>
   42130:	mov	r2, r0
   42134:	mov	r3, #0
   42138:	str	r3, [r2]
   4213c:	mov	r3, #13
   42140:	b	42248 <__assert_fail@plt+0x2fb5c>
   42144:	bl	12404 <__errno_location@plt>
   42148:	mov	r3, r0
   4214c:	ldr	r3, [r3]
   42150:	str	r3, [r4, #32]
   42154:	b	4218c <__assert_fail@plt+0x2faa0>
   42158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4215c:	ldr	r0, [r3, #32]
   42160:	ldr	r1, [r4, #24]
   42164:	mov	r3, #256	; 0x100
   42168:	ldr	r2, [fp, #-16]
   4216c:	bl	640b4 <__assert_fail@plt+0x519c8>
   42170:	mov	r3, r0
   42174:	cmp	r3, #0
   42178:	beq	421a4 <__assert_fail@plt+0x2fab8>
   4217c:	bl	12404 <__errno_location@plt>
   42180:	mov	r3, r0
   42184:	ldr	r3, [r3]
   42188:	str	r3, [r4, #32]
   4218c:	mov	r2, #104	; 0x68
   42190:	mov	r1, #0
   42194:	ldr	r0, [fp, #-16]
   42198:	bl	12434 <memset@plt>
   4219c:	mov	r3, #10
   421a0:	b	42248 <__assert_fail@plt+0x2fb5c>
   421a4:	ldr	r3, [fp, #-16]
   421a8:	ldr	r3, [r3, #16]
   421ac:	and	r3, r3, #61440	; 0xf000
   421b0:	cmp	r3, #16384	; 0x4000
   421b4:	bne	4220c <__assert_fail@plt+0x2fb20>
   421b8:	ldrb	r3, [r4, #168]	; 0xa8
   421bc:	cmp	r3, #46	; 0x2e
   421c0:	bne	42204 <__assert_fail@plt+0x2fb18>
   421c4:	ldrb	r3, [r4, #169]	; 0xa9
   421c8:	cmp	r3, #0
   421cc:	beq	421e8 <__assert_fail@plt+0x2fafc>
   421d0:	ldrb	r3, [r4, #169]	; 0xa9
   421d4:	cmp	r3, #46	; 0x2e
   421d8:	bne	42204 <__assert_fail@plt+0x2fb18>
   421dc:	ldrb	r3, [r4, #170]	; 0xaa
   421e0:	cmp	r3, #0
   421e4:	bne	42204 <__assert_fail@plt+0x2fb18>
   421e8:	ldr	r3, [r4, #48]	; 0x30
   421ec:	cmp	r3, #0
   421f0:	bne	421fc <__assert_fail@plt+0x2fb10>
   421f4:	mov	r3, #1
   421f8:	b	42248 <__assert_fail@plt+0x2fb5c>
   421fc:	mov	r3, #5
   42200:	b	42248 <__assert_fail@plt+0x2fb5c>
   42204:	mov	r3, #1
   42208:	b	42248 <__assert_fail@plt+0x2fb5c>
   4220c:	ldr	r3, [fp, #-16]
   42210:	ldr	r3, [r3, #16]
   42214:	and	r3, r3, #61440	; 0xf000
   42218:	cmp	r3, #40960	; 0xa000
   4221c:	bne	42228 <__assert_fail@plt+0x2fb3c>
   42220:	mov	r3, #12
   42224:	b	42248 <__assert_fail@plt+0x2fb5c>
   42228:	ldr	r3, [fp, #-16]
   4222c:	ldr	r3, [r3, #16]
   42230:	and	r3, r3, #61440	; 0xf000
   42234:	cmp	r3, #32768	; 0x8000
   42238:	bne	42244 <__assert_fail@plt+0x2fb58>
   4223c:	mov	r3, #8
   42240:	b	42248 <__assert_fail@plt+0x2fb5c>
   42244:	mov	r3, #3
   42248:	mov	r0, r3
   4224c:	sub	sp, fp, #8
   42250:	pop	{r4, fp, pc}
   42254:	push	{fp, lr}
   42258:	add	fp, sp, #4
   4225c:	sub	sp, sp, #16
   42260:	str	r0, [fp, #-16]
   42264:	str	r1, [fp, #-20]	; 0xffffffec
   42268:	ldr	r3, [fp, #-16]
   4226c:	str	r3, [fp, #-8]
   42270:	ldr	r3, [fp, #-20]	; 0xffffffec
   42274:	str	r3, [fp, #-12]
   42278:	ldr	r3, [fp, #-8]
   4227c:	ldr	r3, [r3]
   42280:	ldr	r3, [r3, #44]	; 0x2c
   42284:	ldr	r3, [r3, #44]	; 0x2c
   42288:	ldr	r1, [fp, #-12]
   4228c:	ldr	r0, [fp, #-8]
   42290:	blx	r3
   42294:	mov	r3, r0
   42298:	mov	r0, r3
   4229c:	sub	sp, fp, #4
   422a0:	pop	{fp, pc}
   422a4:	push	{r4, r5, r6, fp, lr}
   422a8:	add	fp, sp, #16
   422ac:	sub	sp, sp, #28
   422b0:	str	r0, [fp, #-40]	; 0xffffffd8
   422b4:	str	r1, [fp, #-44]	; 0xffffffd4
   422b8:	mov	r5, r2
   422bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   422c0:	ldr	r3, [r3, #44]	; 0x2c
   422c4:	str	r3, [fp, #-24]	; 0xffffffe8
   422c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   422cc:	ldr	r3, [r3, #40]	; 0x28
   422d0:	cmp	r3, r5
   422d4:	bcs	42360 <__assert_fail@plt+0x2fc74>
   422d8:	add	r2, r5, #40	; 0x28
   422dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   422e0:	str	r2, [r3, #40]	; 0x28
   422e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   422e8:	ldr	r3, [r3, #40]	; 0x28
   422ec:	cmn	r3, #-1073741823	; 0xc0000001
   422f0:	bhi	42324 <__assert_fail@plt+0x2fc38>
   422f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   422f8:	ldr	r2, [r3, #8]
   422fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42300:	ldr	r3, [r3, #40]	; 0x28
   42304:	lsl	r3, r3, #2
   42308:	mov	r1, r3
   4230c:	mov	r0, r2
   42310:	bl	43d30 <__assert_fail@plt+0x31644>
   42314:	str	r0, [fp, #-28]	; 0xffffffe4
   42318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4231c:	cmp	r3, #0
   42320:	bne	42354 <__assert_fail@plt+0x2fc68>
   42324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42328:	ldr	r3, [r3, #8]
   4232c:	mov	r0, r3
   42330:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   42334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42338:	mov	r2, #0
   4233c:	str	r2, [r3, #8]
   42340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42344:	mov	r2, #0
   42348:	str	r2, [r3, #40]	; 0x28
   4234c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42350:	b	423e0 <__assert_fail@plt+0x2fcf4>
   42354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42358:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4235c:	str	r2, [r3, #8]
   42360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42364:	ldr	r4, [r3, #8]
   42368:	ldr	r6, [fp, #-44]	; 0xffffffd4
   4236c:	b	42380 <__assert_fail@plt+0x2fc94>
   42370:	mov	r3, r4
   42374:	add	r4, r3, #4
   42378:	str	r6, [r3]
   4237c:	ldr	r6, [r6, #8]
   42380:	cmp	r6, #0
   42384:	bne	42370 <__assert_fail@plt+0x2fc84>
   42388:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4238c:	ldr	r0, [r3, #8]
   42390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42394:	mov	r2, #4
   42398:	mov	r1, r5
   4239c:	bl	125f0 <qsort@plt>
   423a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   423a4:	ldr	r4, [r3, #8]
   423a8:	ldr	r3, [r4]
   423ac:	str	r3, [fp, #-44]	; 0xffffffd4
   423b0:	b	423c4 <__assert_fail@plt+0x2fcd8>
   423b4:	ldr	r3, [r4]
   423b8:	ldr	r2, [r4, #4]
   423bc:	str	r2, [r3, #8]
   423c0:	add	r4, r4, #4
   423c4:	sub	r5, r5, #1
   423c8:	cmp	r5, #0
   423cc:	bne	423b4 <__assert_fail@plt+0x2fcc8>
   423d0:	ldr	r3, [r4]
   423d4:	mov	r2, #0
   423d8:	str	r2, [r3, #8]
   423dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   423e0:	mov	r0, r3
   423e4:	sub	sp, fp, #16
   423e8:	pop	{r4, r5, r6, fp, pc}
   423ec:	push	{r4, r5, fp, lr}
   423f0:	add	fp, sp, #12
   423f4:	sub	sp, sp, #16
   423f8:	str	r0, [fp, #-24]	; 0xffffffe8
   423fc:	str	r1, [fp, #-28]	; 0xffffffe4
   42400:	mov	r5, r2
   42404:	add	r3, r5, #176	; 0xb0
   42408:	bic	r3, r3, #7
   4240c:	str	r3, [fp, #-16]
   42410:	ldr	r0, [fp, #-16]
   42414:	bl	42ba8 <__assert_fail@plt+0x304bc>
   42418:	mov	r3, r0
   4241c:	mov	r4, r3
   42420:	cmp	r4, #0
   42424:	bne	42430 <__assert_fail@plt+0x2fd44>
   42428:	mov	r3, #0
   4242c:	b	4249c <__assert_fail@plt+0x2fdb0>
   42430:	add	r3, r4, #168	; 0xa8
   42434:	mov	r2, r5
   42438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4243c:	mov	r0, r3
   42440:	bl	120f8 <memcpy@plt>
   42444:	add	r3, r4, r5
   42448:	mov	r2, #0
   4244c:	strb	r2, [r3, #168]	; 0xa8
   42450:	str	r5, [r4, #52]	; 0x34
   42454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42458:	str	r3, [r4, #44]	; 0x2c
   4245c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42460:	ldr	r3, [r3, #24]
   42464:	str	r3, [r4, #28]
   42468:	mov	r3, #0
   4246c:	str	r3, [r4, #32]
   42470:	mov	r3, #0
   42474:	str	r3, [r4, #12]
   42478:	mov	r3, #0
   4247c:	strh	r3, [r4, #58]	; 0x3a
   42480:	mov	r3, #3
   42484:	strh	r3, [r4, #60]	; 0x3c
   42488:	mov	r3, #0
   4248c:	str	r3, [r4, #16]
   42490:	mov	r3, #0
   42494:	str	r3, [r4, #20]
   42498:	mov	r3, r4
   4249c:	mov	r0, r3
   424a0:	sub	sp, fp, #12
   424a4:	pop	{r4, r5, fp, pc}
   424a8:	push	{r4, r5, fp, lr}
   424ac:	add	fp, sp, #12
   424b0:	mov	r5, r0
   424b4:	b	424dc <__assert_fail@plt+0x2fdf0>
   424b8:	ldr	r5, [r5, #8]
   424bc:	ldr	r3, [r4, #12]
   424c0:	cmp	r3, #0
   424c4:	beq	424d4 <__assert_fail@plt+0x2fde8>
   424c8:	ldr	r3, [r4, #12]
   424cc:	mov	r0, r3
   424d0:	bl	126bc <closedir@plt>
   424d4:	mov	r0, r4
   424d8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   424dc:	mov	r4, r5
   424e0:	cmp	r4, #0
   424e4:	bne	424b8 <__assert_fail@plt+0x2fdcc>
   424e8:	nop			; (mov r0, r0)
   424ec:	pop	{r4, r5, fp, pc}
   424f0:	push	{fp, lr}
   424f4:	add	fp, sp, #4
   424f8:	sub	sp, sp, #16
   424fc:	str	r0, [fp, #-16]
   42500:	str	r1, [fp, #-20]	; 0xffffffec
   42504:	ldr	r3, [fp, #-16]
   42508:	ldr	r2, [r3, #36]	; 0x24
   4250c:	ldr	r3, [fp, #-20]	; 0xffffffec
   42510:	add	r3, r2, r3
   42514:	add	r3, r3, #256	; 0x100
   42518:	str	r3, [fp, #-8]
   4251c:	ldr	r3, [fp, #-16]
   42520:	ldr	r2, [r3, #36]	; 0x24
   42524:	ldr	r3, [fp, #-8]
   42528:	cmp	r2, r3
   4252c:	bls	42564 <__assert_fail@plt+0x2fe78>
   42530:	ldr	r3, [fp, #-16]
   42534:	ldr	r3, [r3, #24]
   42538:	mov	r0, r3
   4253c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   42540:	ldr	r3, [fp, #-16]
   42544:	mov	r2, #0
   42548:	str	r2, [r3, #24]
   4254c:	bl	12404 <__errno_location@plt>
   42550:	mov	r2, r0
   42554:	mov	r3, #36	; 0x24
   42558:	str	r3, [r2]
   4255c:	mov	r3, #0
   42560:	b	425d0 <__assert_fail@plt+0x2fee4>
   42564:	ldr	r3, [fp, #-16]
   42568:	ldr	r2, [fp, #-8]
   4256c:	str	r2, [r3, #36]	; 0x24
   42570:	ldr	r3, [fp, #-16]
   42574:	ldr	r2, [r3, #24]
   42578:	ldr	r3, [fp, #-16]
   4257c:	ldr	r3, [r3, #36]	; 0x24
   42580:	mov	r1, r3
   42584:	mov	r0, r2
   42588:	bl	43d30 <__assert_fail@plt+0x31644>
   4258c:	str	r0, [fp, #-12]
   42590:	ldr	r3, [fp, #-12]
   42594:	cmp	r3, #0
   42598:	bne	425c0 <__assert_fail@plt+0x2fed4>
   4259c:	ldr	r3, [fp, #-16]
   425a0:	ldr	r3, [r3, #24]
   425a4:	mov	r0, r3
   425a8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   425ac:	ldr	r3, [fp, #-16]
   425b0:	mov	r2, #0
   425b4:	str	r2, [r3, #24]
   425b8:	mov	r3, #0
   425bc:	b	425d0 <__assert_fail@plt+0x2fee4>
   425c0:	ldr	r3, [fp, #-16]
   425c4:	ldr	r2, [fp, #-12]
   425c8:	str	r2, [r3, #24]
   425cc:	mov	r3, #1
   425d0:	mov	r0, r3
   425d4:	sub	sp, fp, #4
   425d8:	pop	{fp, pc}
   425dc:	push	{fp}		; (str fp, [sp, #-4]!)
   425e0:	add	fp, sp, #0
   425e4:	sub	sp, sp, #20
   425e8:	str	r0, [fp, #-16]
   425ec:	str	r1, [fp, #-20]	; 0xffffffec
   425f0:	ldr	r3, [fp, #-16]
   425f4:	ldr	r3, [r3, #24]
   425f8:	str	r3, [fp, #-12]
   425fc:	ldr	r3, [fp, #-16]
   42600:	ldr	r3, [r3, #4]
   42604:	str	r3, [fp, #-8]
   42608:	b	42668 <__assert_fail@plt+0x2ff7c>
   4260c:	ldr	r3, [fp, #-8]
   42610:	ldr	r2, [r3, #24]
   42614:	ldr	r3, [fp, #-8]
   42618:	add	r3, r3, #168	; 0xa8
   4261c:	cmp	r2, r3
   42620:	beq	42650 <__assert_fail@plt+0x2ff64>
   42624:	ldr	r3, [fp, #-8]
   42628:	ldr	r3, [r3, #24]
   4262c:	mov	r2, r3
   42630:	ldr	r3, [fp, #-8]
   42634:	ldr	r3, [r3, #28]
   42638:	sub	r3, r2, r3
   4263c:	mov	r2, r3
   42640:	ldr	r3, [fp, #-12]
   42644:	add	r2, r3, r2
   42648:	ldr	r3, [fp, #-8]
   4264c:	str	r2, [r3, #24]
   42650:	ldr	r3, [fp, #-8]
   42654:	ldr	r2, [fp, #-12]
   42658:	str	r2, [r3, #28]
   4265c:	ldr	r3, [fp, #-8]
   42660:	ldr	r3, [r3, #8]
   42664:	str	r3, [fp, #-8]
   42668:	ldr	r3, [fp, #-8]
   4266c:	cmp	r3, #0
   42670:	bne	4260c <__assert_fail@plt+0x2ff20>
   42674:	ldr	r3, [fp, #-20]	; 0xffffffec
   42678:	str	r3, [fp, #-8]
   4267c:	b	426f8 <__assert_fail@plt+0x3000c>
   42680:	ldr	r3, [fp, #-8]
   42684:	ldr	r2, [r3, #24]
   42688:	ldr	r3, [fp, #-8]
   4268c:	add	r3, r3, #168	; 0xa8
   42690:	cmp	r2, r3
   42694:	beq	426c4 <__assert_fail@plt+0x2ffd8>
   42698:	ldr	r3, [fp, #-8]
   4269c:	ldr	r3, [r3, #24]
   426a0:	mov	r2, r3
   426a4:	ldr	r3, [fp, #-8]
   426a8:	ldr	r3, [r3, #28]
   426ac:	sub	r3, r2, r3
   426b0:	mov	r2, r3
   426b4:	ldr	r3, [fp, #-12]
   426b8:	add	r2, r3, r2
   426bc:	ldr	r3, [fp, #-8]
   426c0:	str	r2, [r3, #24]
   426c4:	ldr	r3, [fp, #-8]
   426c8:	ldr	r2, [fp, #-12]
   426cc:	str	r2, [r3, #28]
   426d0:	ldr	r3, [fp, #-8]
   426d4:	ldr	r3, [r3, #8]
   426d8:	cmp	r3, #0
   426dc:	beq	426ec <__assert_fail@plt+0x30000>
   426e0:	ldr	r3, [fp, #-8]
   426e4:	ldr	r3, [r3, #8]
   426e8:	b	426f4 <__assert_fail@plt+0x30008>
   426ec:	ldr	r3, [fp, #-8]
   426f0:	ldr	r3, [r3, #4]
   426f4:	str	r3, [fp, #-8]
   426f8:	ldr	r3, [fp, #-8]
   426fc:	ldr	r3, [r3, #48]	; 0x30
   42700:	cmp	r3, #0
   42704:	bge	42680 <__assert_fail@plt+0x2ff94>
   42708:	nop			; (mov r0, r0)
   4270c:	add	sp, fp, #0
   42710:	pop	{fp}		; (ldr fp, [sp], #4)
   42714:	bx	lr
   42718:	push	{fp, lr}
   4271c:	add	fp, sp, #4
   42720:	sub	sp, sp, #16
   42724:	str	r0, [fp, #-16]
   42728:	mov	r3, #0
   4272c:	str	r3, [fp, #-8]
   42730:	b	4276c <__assert_fail@plt+0x30080>
   42734:	ldr	r3, [fp, #-16]
   42738:	ldr	r3, [r3]
   4273c:	mov	r0, r3
   42740:	bl	123bc <strlen@plt>
   42744:	str	r0, [fp, #-12]
   42748:	ldr	r2, [fp, #-12]
   4274c:	ldr	r3, [fp, #-8]
   42750:	cmp	r2, r3
   42754:	bls	42760 <__assert_fail@plt+0x30074>
   42758:	ldr	r3, [fp, #-12]
   4275c:	str	r3, [fp, #-8]
   42760:	ldr	r3, [fp, #-16]
   42764:	add	r3, r3, #4
   42768:	str	r3, [fp, #-16]
   4276c:	ldr	r3, [fp, #-16]
   42770:	ldr	r3, [r3]
   42774:	cmp	r3, #0
   42778:	bne	42734 <__assert_fail@plt+0x30048>
   4277c:	ldr	r3, [fp, #-8]
   42780:	add	r3, r3, #1
   42784:	mov	r0, r3
   42788:	sub	sp, fp, #4
   4278c:	pop	{fp, pc}
   42790:	push	{fp, lr}
   42794:	add	fp, sp, #4
   42798:	sub	sp, sp, #144	; 0x90
   4279c:	str	r0, [fp, #-136]	; 0xffffff78
   427a0:	str	r1, [fp, #-140]	; 0xffffff74
   427a4:	str	r2, [fp, #-144]	; 0xffffff70
   427a8:	str	r3, [fp, #-148]	; 0xffffff6c
   427ac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   427b0:	cmp	r3, #0
   427b4:	beq	427d8 <__assert_fail@plt+0x300ec>
   427b8:	ldr	r1, [pc, #632]	; 42a38 <__assert_fail@plt+0x3034c>
   427bc:	ldr	r0, [fp, #-148]	; 0xffffff6c
   427c0:	bl	11ffc <strcmp@plt>
   427c4:	mov	r3, r0
   427c8:	cmp	r3, #0
   427cc:	bne	427d8 <__assert_fail@plt+0x300ec>
   427d0:	mov	r3, #1
   427d4:	b	427dc <__assert_fail@plt+0x300f0>
   427d8:	mov	r3, #0
   427dc:	strb	r3, [fp, #-13]
   427e0:	ldrb	r3, [fp, #-13]
   427e4:	and	r3, r3, #1
   427e8:	strb	r3, [fp, #-13]
   427ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   427f0:	ldr	r3, [r3, #48]	; 0x30
   427f4:	and	r3, r3, #4
   427f8:	cmp	r3, #0
   427fc:	beq	42830 <__assert_fail@plt+0x30144>
   42800:	ldr	r3, [fp, #-136]	; 0xffffff78
   42804:	ldr	r3, [r3, #48]	; 0x30
   42808:	and	r3, r3, #512	; 0x200
   4280c:	cmp	r3, #0
   42810:	beq	42828 <__assert_fail@plt+0x3013c>
   42814:	ldr	r3, [fp, #-144]	; 0xffffff70
   42818:	cmp	r3, #0
   4281c:	blt	42828 <__assert_fail@plt+0x3013c>
   42820:	ldr	r0, [fp, #-144]	; 0xffffff70
   42824:	bl	126a4 <close@plt>
   42828:	mov	r3, #0
   4282c:	b	42a2c <__assert_fail@plt+0x30340>
   42830:	ldr	r3, [fp, #-144]	; 0xffffff70
   42834:	cmp	r3, #0
   42838:	bge	428b0 <__assert_fail@plt+0x301c4>
   4283c:	ldrb	r3, [fp, #-13]
   42840:	cmp	r3, #0
   42844:	beq	428b0 <__assert_fail@plt+0x301c4>
   42848:	ldr	r3, [fp, #-136]	; 0xffffff78
   4284c:	ldr	r3, [r3, #48]	; 0x30
   42850:	and	r3, r3, #512	; 0x200
   42854:	cmp	r3, #0
   42858:	beq	428b0 <__assert_fail@plt+0x301c4>
   4285c:	ldr	r3, [fp, #-136]	; 0xffffff78
   42860:	add	r3, r3, #60	; 0x3c
   42864:	mov	r0, r3
   42868:	bl	5ffc0 <__assert_fail@plt+0x4d8d4>
   4286c:	mov	r3, r0
   42870:	eor	r3, r3, #1
   42874:	uxtb	r3, r3
   42878:	cmp	r3, #0
   4287c:	beq	428b0 <__assert_fail@plt+0x301c4>
   42880:	ldr	r3, [fp, #-136]	; 0xffffff78
   42884:	add	r3, r3, #60	; 0x3c
   42888:	mov	r0, r3
   4288c:	bl	600a8 <__assert_fail@plt+0x4d9bc>
   42890:	str	r0, [fp, #-20]	; 0xffffffec
   42894:	ldr	r3, [fp, #-20]	; 0xffffffec
   42898:	cmp	r3, #0
   4289c:	blt	428b0 <__assert_fail@plt+0x301c4>
   428a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   428a4:	str	r3, [fp, #-144]	; 0xffffff70
   428a8:	mov	r3, #0
   428ac:	str	r3, [fp, #-148]	; 0xffffff6c
   428b0:	ldr	r3, [fp, #-144]	; 0xffffff70
   428b4:	str	r3, [fp, #-12]
   428b8:	ldr	r3, [fp, #-144]	; 0xffffff70
   428bc:	cmp	r3, #0
   428c0:	bge	428e8 <__assert_fail@plt+0x301fc>
   428c4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   428c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   428cc:	bl	3ff0c <__assert_fail@plt+0x2d820>
   428d0:	str	r0, [fp, #-12]
   428d4:	ldr	r3, [fp, #-12]
   428d8:	cmp	r3, #0
   428dc:	bge	428e8 <__assert_fail@plt+0x301fc>
   428e0:	mvn	r3, #0
   428e4:	b	42a2c <__assert_fail@plt+0x30340>
   428e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   428ec:	ldr	r3, [r3, #48]	; 0x30
   428f0:	and	r3, r3, #2
   428f4:	cmp	r3, #0
   428f8:	bne	42920 <__assert_fail@plt+0x30234>
   428fc:	ldr	r3, [fp, #-148]	; 0xffffff6c
   42900:	cmp	r3, #0
   42904:	beq	42998 <__assert_fail@plt+0x302ac>
   42908:	ldr	r1, [pc, #296]	; 42a38 <__assert_fail@plt+0x3034c>
   4290c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   42910:	bl	11ffc <strcmp@plt>
   42914:	mov	r3, r0
   42918:	cmp	r3, #0
   4291c:	bne	42998 <__assert_fail@plt+0x302ac>
   42920:	sub	r3, fp, #132	; 0x84
   42924:	mov	r1, r3
   42928:	ldr	r0, [fp, #-12]
   4292c:	bl	64094 <__assert_fail@plt+0x519a8>
   42930:	mov	r3, r0
   42934:	cmp	r3, #0
   42938:	beq	42948 <__assert_fail@plt+0x3025c>
   4293c:	mvn	r3, #0
   42940:	str	r3, [fp, #-8]
   42944:	b	429f4 <__assert_fail@plt+0x30308>
   42948:	ldr	r3, [fp, #-140]	; 0xffffff74
   4294c:	ldrd	r0, [r3, #64]	; 0x40
   42950:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   42954:	cmp	r1, r3
   42958:	cmpeq	r0, r2
   4295c:	bne	42978 <__assert_fail@plt+0x3028c>
   42960:	ldr	r3, [fp, #-140]	; 0xffffff74
   42964:	ldrd	r0, [r3, #160]	; 0xa0
   42968:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   4296c:	cmp	r1, r3
   42970:	cmpeq	r0, r2
   42974:	beq	42998 <__assert_fail@plt+0x302ac>
   42978:	bl	12404 <__errno_location@plt>
   4297c:	mov	r2, r0
   42980:	mov	r3, #2
   42984:	str	r3, [r2]
   42988:	mvn	r3, #0
   4298c:	str	r3, [fp, #-8]
   42990:	nop			; (mov r0, r0)
   42994:	b	429f4 <__assert_fail@plt+0x30308>
   42998:	ldr	r3, [fp, #-136]	; 0xffffff78
   4299c:	ldr	r3, [r3, #48]	; 0x30
   429a0:	and	r3, r3, #512	; 0x200
   429a4:	cmp	r3, #0
   429a8:	beq	429e8 <__assert_fail@plt+0x302fc>
   429ac:	ldrb	r3, [fp, #-13]
   429b0:	cmp	r3, #0
   429b4:	movne	r3, #1
   429b8:	moveq	r3, #0
   429bc:	uxtb	r3, r3
   429c0:	eor	r3, r3, #1
   429c4:	uxtb	r3, r3
   429c8:	and	r3, r3, #1
   429cc:	uxtb	r3, r3
   429d0:	mov	r2, r3
   429d4:	ldr	r1, [fp, #-12]
   429d8:	ldr	r0, [fp, #-136]	; 0xffffff78
   429dc:	bl	3fd70 <__assert_fail@plt+0x2d684>
   429e0:	mov	r3, #0
   429e4:	b	42a2c <__assert_fail@plt+0x30340>
   429e8:	ldr	r0, [fp, #-12]
   429ec:	bl	125d8 <fchdir@plt>
   429f0:	str	r0, [fp, #-8]
   429f4:	ldr	r3, [fp, #-144]	; 0xffffff70
   429f8:	cmp	r3, #0
   429fc:	bge	42a28 <__assert_fail@plt+0x3033c>
   42a00:	bl	12404 <__errno_location@plt>
   42a04:	mov	r3, r0
   42a08:	ldr	r3, [r3]
   42a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   42a10:	ldr	r0, [fp, #-12]
   42a14:	bl	126a4 <close@plt>
   42a18:	bl	12404 <__errno_location@plt>
   42a1c:	mov	r2, r0
   42a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42a24:	str	r3, [r2]
   42a28:	ldr	r3, [fp, #-8]
   42a2c:	mov	r0, r3
   42a30:	sub	sp, fp, #4
   42a34:	pop	{fp, pc}
   42a38:			; <UNDEFINED> instruction: 0x0006abb8
   42a3c:	push	{fp, lr}
   42a40:	add	fp, sp, #4
   42a44:	sub	sp, sp, #8
   42a48:	str	r0, [fp, #-8]
   42a4c:	str	r1, [fp, #-12]
   42a50:	ldr	r3, [fp, #-8]
   42a54:	cmp	r3, #0
   42a58:	bne	42a74 <__assert_fail@plt+0x30388>
   42a5c:	bl	12404 <__errno_location@plt>
   42a60:	mov	r2, r0
   42a64:	mov	r3, #95	; 0x5f
   42a68:	str	r3, [r2]
   42a6c:	mvn	r3, #0
   42a70:	b	42ad8 <__assert_fail@plt+0x303ec>
   42a74:	ldr	r3, [fp, #-8]
   42a78:	cmp	r3, #10
   42a7c:	bne	42ad4 <__assert_fail@plt+0x303e8>
   42a80:	ldr	r3, [fp, #-12]
   42a84:	ldr	r3, [r3]
   42a88:	ldr	r1, [pc, #84]	; 42ae4 <__assert_fail@plt+0x303f8>
   42a8c:	mov	r0, r3
   42a90:	bl	11ffc <strcmp@plt>
   42a94:	mov	r3, r0
   42a98:	cmp	r3, #0
   42a9c:	bne	42ad4 <__assert_fail@plt+0x303e8>
   42aa0:	ldr	r3, [fp, #-12]
   42aa4:	ldr	r3, [r3]
   42aa8:	mov	r0, r3
   42aac:	bl	125fc <freecon@plt>
   42ab0:	ldr	r3, [fp, #-12]
   42ab4:	mov	r2, #0
   42ab8:	str	r2, [r3]
   42abc:	bl	12404 <__errno_location@plt>
   42ac0:	mov	r2, r0
   42ac4:	mov	r3, #61	; 0x3d
   42ac8:	str	r3, [r2]
   42acc:	mvn	r3, #0
   42ad0:	b	42ad8 <__assert_fail@plt+0x303ec>
   42ad4:	ldr	r3, [fp, #-8]
   42ad8:	mov	r0, r3
   42adc:	sub	sp, fp, #4
   42ae0:	pop	{fp, pc}
   42ae4:			; <UNDEFINED> instruction: 0x0006abbc
   42ae8:	push	{fp, lr}
   42aec:	add	fp, sp, #4
   42af0:	sub	sp, sp, #16
   42af4:	str	r0, [fp, #-16]
   42af8:	str	r1, [fp, #-20]	; 0xffffffec
   42afc:	ldr	r1, [fp, #-20]	; 0xffffffec
   42b00:	ldr	r0, [fp, #-16]
   42b04:	bl	123a4 <getfilecon@plt>
   42b08:	str	r0, [fp, #-8]
   42b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   42b10:	ldr	r0, [fp, #-8]
   42b14:	bl	42a3c <__assert_fail@plt+0x30350>
   42b18:	mov	r3, r0
   42b1c:	mov	r0, r3
   42b20:	sub	sp, fp, #4
   42b24:	pop	{fp, pc}
   42b28:	push	{fp, lr}
   42b2c:	add	fp, sp, #4
   42b30:	sub	sp, sp, #16
   42b34:	str	r0, [fp, #-16]
   42b38:	str	r1, [fp, #-20]	; 0xffffffec
   42b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   42b40:	ldr	r0, [fp, #-16]
   42b44:	bl	122fc <lgetfilecon@plt>
   42b48:	str	r0, [fp, #-8]
   42b4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   42b50:	ldr	r0, [fp, #-8]
   42b54:	bl	42a3c <__assert_fail@plt+0x30350>
   42b58:	mov	r3, r0
   42b5c:	mov	r0, r3
   42b60:	sub	sp, fp, #4
   42b64:	pop	{fp, pc}
   42b68:	push	{fp, lr}
   42b6c:	add	fp, sp, #4
   42b70:	sub	sp, sp, #16
   42b74:	str	r0, [fp, #-16]
   42b78:	str	r1, [fp, #-20]	; 0xffffffec
   42b7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   42b80:	ldr	r0, [fp, #-16]
   42b84:	bl	121ac <fgetfilecon@plt>
   42b88:	str	r0, [fp, #-8]
   42b8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   42b90:	ldr	r0, [fp, #-8]
   42b94:	bl	42a3c <__assert_fail@plt+0x30350>
   42b98:	mov	r3, r0
   42b9c:	mov	r0, r3
   42ba0:	sub	sp, fp, #4
   42ba4:	pop	{fp, pc}
   42ba8:	push	{r4, r5, fp, lr}
   42bac:	add	fp, sp, #12
   42bb0:	sub	sp, sp, #16
   42bb4:	str	r0, [fp, #-24]	; 0xffffffe8
   42bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42bbc:	cmp	r3, #0
   42bc0:	bne	42bcc <__assert_fail@plt+0x304e0>
   42bc4:	mov	r3, #1
   42bc8:	str	r3, [fp, #-24]	; 0xffffffe8
   42bcc:	mov	r1, #0
   42bd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42bd4:	mov	r2, r3
   42bd8:	mov	r3, #0
   42bdc:	mov	r4, r3
   42be0:	mov	r5, #0
   42be4:	cmp	r4, #0
   42be8:	beq	42bf0 <__assert_fail@plt+0x30504>
   42bec:	mov	r1, #1
   42bf0:	cmp	r2, #0
   42bf4:	bge	42bfc <__assert_fail@plt+0x30510>
   42bf8:	mov	r1, #1
   42bfc:	mov	r3, r2
   42c00:	str	r3, [fp, #-20]	; 0xffffffec
   42c04:	mov	r3, r1
   42c08:	and	r3, r3, #1
   42c0c:	uxtb	r3, r3
   42c10:	cmp	r3, #0
   42c14:	beq	42c30 <__assert_fail@plt+0x30544>
   42c18:	bl	12404 <__errno_location@plt>
   42c1c:	mov	r2, r0
   42c20:	mov	r3, #12
   42c24:	str	r3, [r2]
   42c28:	mov	r3, #0
   42c2c:	b	42c44 <__assert_fail@plt+0x30558>
   42c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42c34:	bl	12308 <malloc@plt>
   42c38:	mov	r3, r0
   42c3c:	str	r3, [fp, #-16]
   42c40:	ldr	r3, [fp, #-16]
   42c44:	mov	r0, r3
   42c48:	sub	sp, fp, #12
   42c4c:	pop	{r4, r5, fp, pc}
   42c50:	push	{fp, lr}
   42c54:	add	fp, sp, #4
   42c58:	sub	sp, sp, #32
   42c5c:	str	r0, [fp, #-24]	; 0xffffffe8
   42c60:	str	r1, [fp, #-28]	; 0xffffffe4
   42c64:	str	r2, [fp, #-32]	; 0xffffffe0
   42c68:	str	r3, [fp, #-36]	; 0xffffffdc
   42c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42c70:	cmp	r3, #0
   42c74:	bne	42c80 <__assert_fail@plt+0x30594>
   42c78:	sub	r3, fp, #16
   42c7c:	str	r3, [fp, #-24]	; 0xffffffe8
   42c80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42c84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   42c88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42c90:	bl	1229c <mbrtowc@plt>
   42c94:	str	r0, [fp, #-8]
   42c98:	ldr	r3, [fp, #-8]
   42c9c:	cmn	r3, #3
   42ca0:	bls	42cec <__assert_fail@plt+0x30600>
   42ca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42ca8:	cmp	r3, #0
   42cac:	beq	42cec <__assert_fail@plt+0x30600>
   42cb0:	mov	r0, #0
   42cb4:	bl	5fe9c <__assert_fail@plt+0x4d7b0>
   42cb8:	mov	r3, r0
   42cbc:	eor	r3, r3, #1
   42cc0:	uxtb	r3, r3
   42cc4:	cmp	r3, #0
   42cc8:	beq	42cec <__assert_fail@plt+0x30600>
   42ccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42cd0:	ldrb	r3, [r3]
   42cd4:	strb	r3, [fp, #-9]
   42cd8:	ldrb	r2, [fp, #-9]
   42cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42ce0:	str	r2, [r3]
   42ce4:	mov	r3, #1
   42ce8:	b	42cf0 <__assert_fail@plt+0x30604>
   42cec:	ldr	r3, [fp, #-8]
   42cf0:	mov	r0, r3
   42cf4:	sub	sp, fp, #4
   42cf8:	pop	{fp, pc}
   42cfc:	push	{fp}		; (str fp, [sp, #-4]!)
   42d00:	add	fp, sp, #0
   42d04:	sub	sp, sp, #12
   42d08:	str	r0, [fp, #-8]
   42d0c:	mvn	r2, #0
   42d10:	mvn	r3, #0
   42d14:	mov	r0, r2
   42d18:	mov	r1, r3
   42d1c:	add	sp, fp, #0
   42d20:	pop	{fp}		; (ldr fp, [sp], #4)
   42d24:	bx	lr
   42d28:	push	{fp, lr}
   42d2c:	add	fp, sp, #4
   42d30:	sub	sp, sp, #24
   42d34:	str	r0, [fp, #-24]	; 0xffffffe8
   42d38:	mov	r3, #0
   42d3c:	str	r3, [fp, #-12]
   42d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42d44:	bl	123bc <strlen@plt>
   42d48:	mov	r3, r0
   42d4c:	add	r3, r3, #1
   42d50:	str	r3, [fp, #-16]
   42d54:	mov	r3, #0
   42d58:	str	r3, [fp, #-8]
   42d5c:	b	42ef8 <__assert_fail@plt+0x3080c>
   42d60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42d64:	ldr	r3, [fp, #-8]
   42d68:	add	r3, r2, r3
   42d6c:	ldrb	r3, [r3]
   42d70:	cmp	r3, #92	; 0x5c
   42d74:	bne	42ec4 <__assert_fail@plt+0x307d8>
   42d78:	ldr	r3, [fp, #-8]
   42d7c:	add	r2, r3, #4
   42d80:	ldr	r3, [fp, #-16]
   42d84:	cmp	r2, r3
   42d88:	bcs	42ec4 <__assert_fail@plt+0x307d8>
   42d8c:	ldr	r3, [fp, #-8]
   42d90:	add	r3, r3, #1
   42d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42d98:	add	r3, r2, r3
   42d9c:	ldrb	r3, [r3]
   42da0:	cmp	r3, #47	; 0x2f
   42da4:	bls	42ec4 <__assert_fail@plt+0x307d8>
   42da8:	ldr	r3, [fp, #-8]
   42dac:	add	r3, r3, #1
   42db0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42db4:	add	r3, r2, r3
   42db8:	ldrb	r3, [r3]
   42dbc:	cmp	r3, #51	; 0x33
   42dc0:	bhi	42ec4 <__assert_fail@plt+0x307d8>
   42dc4:	ldr	r3, [fp, #-8]
   42dc8:	add	r3, r3, #2
   42dcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42dd0:	add	r3, r2, r3
   42dd4:	ldrb	r3, [r3]
   42dd8:	cmp	r3, #47	; 0x2f
   42ddc:	bls	42ec4 <__assert_fail@plt+0x307d8>
   42de0:	ldr	r3, [fp, #-8]
   42de4:	add	r3, r3, #2
   42de8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42dec:	add	r3, r2, r3
   42df0:	ldrb	r3, [r3]
   42df4:	cmp	r3, #55	; 0x37
   42df8:	bhi	42ec4 <__assert_fail@plt+0x307d8>
   42dfc:	ldr	r3, [fp, #-8]
   42e00:	add	r3, r3, #3
   42e04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42e08:	add	r3, r2, r3
   42e0c:	ldrb	r3, [r3]
   42e10:	cmp	r3, #47	; 0x2f
   42e14:	bls	42ec4 <__assert_fail@plt+0x307d8>
   42e18:	ldr	r3, [fp, #-8]
   42e1c:	add	r3, r3, #3
   42e20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42e24:	add	r3, r2, r3
   42e28:	ldrb	r3, [r3]
   42e2c:	cmp	r3, #55	; 0x37
   42e30:	bhi	42ec4 <__assert_fail@plt+0x307d8>
   42e34:	ldr	r3, [fp, #-12]
   42e38:	add	r2, r3, #1
   42e3c:	str	r2, [fp, #-12]
   42e40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42e44:	add	r3, r2, r3
   42e48:	ldr	r2, [fp, #-8]
   42e4c:	add	r2, r2, #1
   42e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42e54:	add	r2, r1, r2
   42e58:	ldrb	r2, [r2]
   42e5c:	sub	r2, r2, #48	; 0x30
   42e60:	lsl	r1, r2, #3
   42e64:	ldr	r2, [fp, #-8]
   42e68:	add	r2, r2, #2
   42e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42e70:	add	r2, r0, r2
   42e74:	ldrb	r2, [r2]
   42e78:	sub	r2, r2, #48	; 0x30
   42e7c:	add	r2, r1, r2
   42e80:	uxtb	r2, r2
   42e84:	lsl	r2, r2, #3
   42e88:	uxtb	r1, r2
   42e8c:	ldr	r2, [fp, #-8]
   42e90:	add	r2, r2, #3
   42e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42e98:	add	r2, r0, r2
   42e9c:	ldrb	r2, [r2]
   42ea0:	add	r2, r1, r2
   42ea4:	uxtb	r2, r2
   42ea8:	sub	r2, r2, #48	; 0x30
   42eac:	uxtb	r2, r2
   42eb0:	strb	r2, [r3]
   42eb4:	ldr	r3, [fp, #-8]
   42eb8:	add	r3, r3, #3
   42ebc:	str	r3, [fp, #-8]
   42ec0:	b	42eec <__assert_fail@plt+0x30800>
   42ec4:	ldr	r3, [fp, #-12]
   42ec8:	add	r2, r3, #1
   42ecc:	str	r2, [fp, #-12]
   42ed0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42ed4:	add	r3, r2, r3
   42ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42edc:	ldr	r2, [fp, #-8]
   42ee0:	add	r2, r1, r2
   42ee4:	ldrb	r2, [r2]
   42ee8:	strb	r2, [r3]
   42eec:	ldr	r3, [fp, #-8]
   42ef0:	add	r3, r3, #1
   42ef4:	str	r3, [fp, #-8]
   42ef8:	ldr	r2, [fp, #-8]
   42efc:	ldr	r3, [fp, #-16]
   42f00:	cmp	r2, r3
   42f04:	bcc	42d60 <__assert_fail@plt+0x30674>
   42f08:	nop			; (mov r0, r0)
   42f0c:	sub	sp, fp, #4
   42f10:	pop	{fp, pc}
   42f14:	push	{fp, lr}
   42f18:	add	fp, sp, #4
   42f1c:	sub	sp, sp, #16
   42f20:	str	r0, [fp, #-16]
   42f24:	mov	r1, #32
   42f28:	ldr	r0, [fp, #-16]
   42f2c:	bl	123c8 <strchr@plt>
   42f30:	str	r0, [fp, #-8]
   42f34:	ldr	r3, [fp, #-8]
   42f38:	cmp	r3, #0
   42f3c:	beq	42f4c <__assert_fail@plt+0x30860>
   42f40:	ldr	r3, [fp, #-8]
   42f44:	mov	r2, #0
   42f48:	strb	r2, [r3]
   42f4c:	ldr	r3, [fp, #-8]
   42f50:	mov	r0, r3
   42f54:	sub	sp, fp, #4
   42f58:	pop	{fp, pc}
   42f5c:	push	{fp, lr}
   42f60:	add	fp, sp, #4
   42f64:	sub	sp, sp, #104	; 0x68
   42f68:	mov	r3, r0
   42f6c:	strb	r3, [fp, #-93]	; 0xffffffa3
   42f70:	sub	r3, fp, #72	; 0x48
   42f74:	str	r3, [fp, #-8]
   42f78:	ldr	r3, [pc, #3244]	; 43c2c <__assert_fail@plt+0x31540>
   42f7c:	str	r3, [fp, #-12]
   42f80:	ldr	r1, [pc, #3240]	; 43c30 <__assert_fail@plt+0x31544>
   42f84:	ldr	r0, [fp, #-12]
   42f88:	bl	125e4 <fopen64@plt>
   42f8c:	str	r0, [fp, #-16]
   42f90:	ldr	r3, [fp, #-16]
   42f94:	cmp	r3, #0
   42f98:	beq	43644 <__assert_fail@plt+0x30f58>
   42f9c:	mov	r3, #0
   42fa0:	str	r3, [fp, #-76]	; 0xffffffb4
   42fa4:	mov	r3, #0
   42fa8:	str	r3, [fp, #-80]	; 0xffffffb0
   42fac:	b	435c0 <__assert_fail@plt+0x30ed4>
   42fb0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   42fb4:	sub	r1, fp, #88	; 0x58
   42fb8:	sub	r2, fp, #84	; 0x54
   42fbc:	sub	r3, fp, #92	; 0x5c
   42fc0:	str	r3, [sp]
   42fc4:	mov	r3, r1
   42fc8:	ldr	r1, [pc, #3172]	; 43c34 <__assert_fail@plt+0x31548>
   42fcc:	bl	12578 <sscanf@plt>
   42fd0:	str	r0, [fp, #-36]	; 0xffffffdc
   42fd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42fd8:	cmp	r3, #2
   42fdc:	beq	42fec <__assert_fail@plt+0x30900>
   42fe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42fe4:	cmp	r3, #3
   42fe8:	bne	43594 <__assert_fail@plt+0x30ea8>
   42fec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   42ff0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   42ff4:	add	r3, r3, r2
   42ff8:	str	r3, [fp, #-40]	; 0xffffffd8
   42ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   43000:	bl	42f14 <__assert_fail@plt+0x30828>
   43004:	str	r0, [fp, #-44]	; 0xffffffd4
   43008:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4300c:	cmp	r3, #0
   43010:	beq	4359c <__assert_fail@plt+0x30eb0>
   43014:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43018:	add	r3, r3, #1
   4301c:	str	r3, [fp, #-48]	; 0xffffffd0
   43020:	ldr	r0, [fp, #-48]	; 0xffffffd0
   43024:	bl	42f14 <__assert_fail@plt+0x30828>
   43028:	str	r0, [fp, #-44]	; 0xffffffd4
   4302c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43030:	cmp	r3, #0
   43034:	beq	435a4 <__assert_fail@plt+0x30eb8>
   43038:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4303c:	add	r3, r3, #1
   43040:	ldr	r1, [pc, #3056]	; 43c38 <__assert_fail@plt+0x3154c>
   43044:	mov	r0, r3
   43048:	bl	5dd00 <__assert_fail@plt+0x4b614>
   4304c:	str	r0, [fp, #-52]	; 0xffffffcc
   43050:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43054:	cmp	r3, #0
   43058:	beq	435ac <__assert_fail@plt+0x30ec0>
   4305c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43060:	add	r3, r3, #3
   43064:	str	r3, [fp, #-56]	; 0xffffffc8
   43068:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4306c:	bl	42f14 <__assert_fail@plt+0x30828>
   43070:	str	r0, [fp, #-44]	; 0xffffffd4
   43074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43078:	cmp	r3, #0
   4307c:	beq	435b4 <__assert_fail@plt+0x30ec8>
   43080:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43084:	add	r3, r3, #1
   43088:	str	r3, [fp, #-60]	; 0xffffffc4
   4308c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   43090:	bl	42f14 <__assert_fail@plt+0x30828>
   43094:	mov	r3, r0
   43098:	cmp	r3, #0
   4309c:	beq	435bc <__assert_fail@plt+0x30ed0>
   430a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   430a4:	bl	42d28 <__assert_fail@plt+0x3063c>
   430a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   430ac:	bl	42d28 <__assert_fail@plt+0x3063c>
   430b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   430b4:	bl	42d28 <__assert_fail@plt+0x3063c>
   430b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   430bc:	bl	42d28 <__assert_fail@plt+0x3063c>
   430c0:	mov	r0, #32
   430c4:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   430c8:	mov	r3, r0
   430cc:	str	r3, [fp, #-32]	; 0xffffffe0
   430d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   430d4:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   430d8:	mov	r3, r0
   430dc:	mov	r2, r3
   430e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   430e4:	str	r2, [r3]
   430e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   430ec:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   430f0:	mov	r3, r0
   430f4:	mov	r2, r3
   430f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   430fc:	str	r2, [r3, #4]
   43100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   43104:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   43108:	mov	r3, r0
   4310c:	mov	r2, r3
   43110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43114:	str	r2, [r3, #8]
   43118:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4311c:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   43120:	mov	r3, r0
   43124:	mov	r2, r3
   43128:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4312c:	str	r2, [r3, #12]
   43130:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43134:	ldrb	r3, [r2, #24]
   43138:	orr	r3, r3, #4
   4313c:	strb	r3, [r2, #24]
   43140:	ldr	r3, [fp, #-84]	; 0xffffffac
   43144:	ldr	r2, [fp, #-88]	; 0xffffffa8
   43148:	mov	r1, r2
   4314c:	mov	r0, r3
   43150:	bl	12020 <gnu_dev_makedev@plt>
   43154:	mov	r2, r0
   43158:	mov	r3, r1
   4315c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43160:	strd	r2, [r1, #16]
   43164:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43168:	ldr	r3, [r3, #12]
   4316c:	ldr	r1, [pc, #2760]	; 43c3c <__assert_fail@plt+0x31550>
   43170:	mov	r0, r3
   43174:	bl	11ffc <strcmp@plt>
   43178:	mov	r3, r0
   4317c:	cmp	r3, #0
   43180:	beq	43324 <__assert_fail@plt+0x30c38>
   43184:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43188:	ldr	r3, [r3, #12]
   4318c:	ldr	r1, [pc, #2732]	; 43c40 <__assert_fail@plt+0x31554>
   43190:	mov	r0, r3
   43194:	bl	11ffc <strcmp@plt>
   43198:	mov	r3, r0
   4319c:	cmp	r3, #0
   431a0:	beq	43324 <__assert_fail@plt+0x30c38>
   431a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   431a8:	ldr	r3, [r3, #12]
   431ac:	ldr	r1, [pc, #2704]	; 43c44 <__assert_fail@plt+0x31558>
   431b0:	mov	r0, r3
   431b4:	bl	11ffc <strcmp@plt>
   431b8:	mov	r3, r0
   431bc:	cmp	r3, #0
   431c0:	beq	43324 <__assert_fail@plt+0x30c38>
   431c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   431c8:	ldr	r3, [r3, #12]
   431cc:	ldr	r1, [pc, #2676]	; 43c48 <__assert_fail@plt+0x3155c>
   431d0:	mov	r0, r3
   431d4:	bl	11ffc <strcmp@plt>
   431d8:	mov	r3, r0
   431dc:	cmp	r3, #0
   431e0:	beq	43324 <__assert_fail@plt+0x30c38>
   431e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   431e8:	ldr	r3, [r3, #12]
   431ec:	ldr	r1, [pc, #2648]	; 43c4c <__assert_fail@plt+0x31560>
   431f0:	mov	r0, r3
   431f4:	bl	11ffc <strcmp@plt>
   431f8:	mov	r3, r0
   431fc:	cmp	r3, #0
   43200:	beq	43324 <__assert_fail@plt+0x30c38>
   43204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43208:	ldr	r3, [r3, #12]
   4320c:	ldr	r1, [pc, #2620]	; 43c50 <__assert_fail@plt+0x31564>
   43210:	mov	r0, r3
   43214:	bl	11ffc <strcmp@plt>
   43218:	mov	r3, r0
   4321c:	cmp	r3, #0
   43220:	beq	43324 <__assert_fail@plt+0x30c38>
   43224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43228:	ldr	r3, [r3, #12]
   4322c:	ldr	r1, [pc, #2592]	; 43c54 <__assert_fail@plt+0x31568>
   43230:	mov	r0, r3
   43234:	bl	11ffc <strcmp@plt>
   43238:	mov	r3, r0
   4323c:	cmp	r3, #0
   43240:	beq	43324 <__assert_fail@plt+0x30c38>
   43244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43248:	ldr	r3, [r3, #12]
   4324c:	ldr	r1, [pc, #2564]	; 43c58 <__assert_fail@plt+0x3156c>
   43250:	mov	r0, r3
   43254:	bl	11ffc <strcmp@plt>
   43258:	mov	r3, r0
   4325c:	cmp	r3, #0
   43260:	beq	43324 <__assert_fail@plt+0x30c38>
   43264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43268:	ldr	r3, [r3, #12]
   4326c:	ldr	r1, [pc, #2536]	; 43c5c <__assert_fail@plt+0x31570>
   43270:	mov	r0, r3
   43274:	bl	11ffc <strcmp@plt>
   43278:	mov	r3, r0
   4327c:	cmp	r3, #0
   43280:	beq	43324 <__assert_fail@plt+0x30c38>
   43284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43288:	ldr	r3, [r3, #12]
   4328c:	ldr	r1, [pc, #2508]	; 43c60 <__assert_fail@plt+0x31574>
   43290:	mov	r0, r3
   43294:	bl	11ffc <strcmp@plt>
   43298:	mov	r3, r0
   4329c:	cmp	r3, #0
   432a0:	beq	43324 <__assert_fail@plt+0x30c38>
   432a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   432a8:	ldr	r3, [r3, #12]
   432ac:	ldr	r1, [pc, #2480]	; 43c64 <__assert_fail@plt+0x31578>
   432b0:	mov	r0, r3
   432b4:	bl	11ffc <strcmp@plt>
   432b8:	mov	r3, r0
   432bc:	cmp	r3, #0
   432c0:	beq	43324 <__assert_fail@plt+0x30c38>
   432c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   432c8:	ldr	r3, [r3, #12]
   432cc:	ldr	r1, [pc, #2452]	; 43c68 <__assert_fail@plt+0x3157c>
   432d0:	mov	r0, r3
   432d4:	bl	11ffc <strcmp@plt>
   432d8:	mov	r3, r0
   432dc:	cmp	r3, #0
   432e0:	beq	43324 <__assert_fail@plt+0x30c38>
   432e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   432e8:	ldr	r3, [r3, #12]
   432ec:	ldr	r1, [pc, #2424]	; 43c6c <__assert_fail@plt+0x31580>
   432f0:	mov	r0, r3
   432f4:	bl	11ffc <strcmp@plt>
   432f8:	mov	r3, r0
   432fc:	cmp	r3, #0
   43300:	beq	43324 <__assert_fail@plt+0x30c38>
   43304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43308:	ldr	r3, [r3, #12]
   4330c:	ldr	r1, [pc, #2396]	; 43c70 <__assert_fail@plt+0x31584>
   43310:	mov	r0, r3
   43314:	bl	11ffc <strcmp@plt>
   43318:	mov	r3, r0
   4331c:	cmp	r3, #0
   43320:	bne	4332c <__assert_fail@plt+0x30c40>
   43324:	mov	r3, #1
   43328:	b	43330 <__assert_fail@plt+0x30c44>
   4332c:	mov	r3, #0
   43330:	uxtb	r3, r3
   43334:	and	r3, r3, #1
   43338:	uxtb	r1, r3
   4333c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43340:	ldrb	r3, [r2, #24]
   43344:	and	r1, r1, #1
   43348:	bic	r3, r3, #1
   4334c:	orr	r3, r1, r3
   43350:	strb	r3, [r2, #24]
   43354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43358:	ldr	r3, [r3]
   4335c:	mov	r1, #58	; 0x3a
   43360:	mov	r0, r3
   43364:	bl	123c8 <strchr@plt>
   43368:	mov	r3, r0
   4336c:	cmp	r3, #0
   43370:	bne	43540 <__assert_fail@plt+0x30e54>
   43374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43378:	ldr	r3, [r3]
   4337c:	ldrb	r3, [r3]
   43380:	cmp	r3, #47	; 0x2f
   43384:	bne	43400 <__assert_fail@plt+0x30d14>
   43388:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4338c:	ldr	r3, [r3]
   43390:	add	r3, r3, #1
   43394:	ldrb	r3, [r3]
   43398:	cmp	r3, #47	; 0x2f
   4339c:	bne	43400 <__assert_fail@plt+0x30d14>
   433a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   433a4:	ldr	r3, [r3, #12]
   433a8:	ldr	r1, [pc, #2244]	; 43c74 <__assert_fail@plt+0x31588>
   433ac:	mov	r0, r3
   433b0:	bl	11ffc <strcmp@plt>
   433b4:	mov	r3, r0
   433b8:	cmp	r3, #0
   433bc:	beq	43540 <__assert_fail@plt+0x30e54>
   433c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   433c4:	ldr	r3, [r3, #12]
   433c8:	ldr	r1, [pc, #2216]	; 43c78 <__assert_fail@plt+0x3158c>
   433cc:	mov	r0, r3
   433d0:	bl	11ffc <strcmp@plt>
   433d4:	mov	r3, r0
   433d8:	cmp	r3, #0
   433dc:	beq	43540 <__assert_fail@plt+0x30e54>
   433e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   433e4:	ldr	r3, [r3, #12]
   433e8:	ldr	r1, [pc, #2188]	; 43c7c <__assert_fail@plt+0x31590>
   433ec:	mov	r0, r3
   433f0:	bl	11ffc <strcmp@plt>
   433f4:	mov	r3, r0
   433f8:	cmp	r3, #0
   433fc:	beq	43540 <__assert_fail@plt+0x30e54>
   43400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43404:	ldr	r3, [r3, #12]
   43408:	ldr	r1, [pc, #2160]	; 43c80 <__assert_fail@plt+0x31594>
   4340c:	mov	r0, r3
   43410:	bl	11ffc <strcmp@plt>
   43414:	mov	r3, r0
   43418:	cmp	r3, #0
   4341c:	beq	43540 <__assert_fail@plt+0x30e54>
   43420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43424:	ldr	r3, [r3, #12]
   43428:	ldr	r1, [pc, #2132]	; 43c84 <__assert_fail@plt+0x31598>
   4342c:	mov	r0, r3
   43430:	bl	11ffc <strcmp@plt>
   43434:	mov	r3, r0
   43438:	cmp	r3, #0
   4343c:	beq	43540 <__assert_fail@plt+0x30e54>
   43440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43444:	ldr	r3, [r3, #12]
   43448:	ldr	r1, [pc, #2104]	; 43c88 <__assert_fail@plt+0x3159c>
   4344c:	mov	r0, r3
   43450:	bl	11ffc <strcmp@plt>
   43454:	mov	r3, r0
   43458:	cmp	r3, #0
   4345c:	beq	43540 <__assert_fail@plt+0x30e54>
   43460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43464:	ldr	r3, [r3, #12]
   43468:	ldr	r1, [pc, #2076]	; 43c8c <__assert_fail@plt+0x315a0>
   4346c:	mov	r0, r3
   43470:	bl	11ffc <strcmp@plt>
   43474:	mov	r3, r0
   43478:	cmp	r3, #0
   4347c:	beq	43540 <__assert_fail@plt+0x30e54>
   43480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43484:	ldr	r3, [r3, #12]
   43488:	ldr	r1, [pc, #2048]	; 43c90 <__assert_fail@plt+0x315a4>
   4348c:	mov	r0, r3
   43490:	bl	11ffc <strcmp@plt>
   43494:	mov	r3, r0
   43498:	cmp	r3, #0
   4349c:	beq	43540 <__assert_fail@plt+0x30e54>
   434a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   434a4:	ldr	r3, [r3, #12]
   434a8:	ldr	r1, [pc, #2020]	; 43c94 <__assert_fail@plt+0x315a8>
   434ac:	mov	r0, r3
   434b0:	bl	11ffc <strcmp@plt>
   434b4:	mov	r3, r0
   434b8:	cmp	r3, #0
   434bc:	beq	43540 <__assert_fail@plt+0x30e54>
   434c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   434c4:	ldr	r3, [r3, #12]
   434c8:	ldr	r1, [pc, #1992]	; 43c98 <__assert_fail@plt+0x315ac>
   434cc:	mov	r0, r3
   434d0:	bl	11ffc <strcmp@plt>
   434d4:	mov	r3, r0
   434d8:	cmp	r3, #0
   434dc:	beq	43540 <__assert_fail@plt+0x30e54>
   434e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   434e4:	ldr	r3, [r3, #12]
   434e8:	ldr	r1, [pc, #1964]	; 43c9c <__assert_fail@plt+0x315b0>
   434ec:	mov	r0, r3
   434f0:	bl	11ffc <strcmp@plt>
   434f4:	mov	r3, r0
   434f8:	cmp	r3, #0
   434fc:	beq	43540 <__assert_fail@plt+0x30e54>
   43500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43504:	ldr	r3, [r3, #12]
   43508:	ldr	r1, [pc, #1936]	; 43ca0 <__assert_fail@plt+0x315b4>
   4350c:	mov	r0, r3
   43510:	bl	11ffc <strcmp@plt>
   43514:	mov	r3, r0
   43518:	cmp	r3, #0
   4351c:	beq	43540 <__assert_fail@plt+0x30e54>
   43520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43524:	ldr	r3, [r3]
   43528:	mov	r1, r3
   4352c:	ldr	r0, [pc, #1904]	; 43ca4 <__assert_fail@plt+0x315b8>
   43530:	bl	11ffc <strcmp@plt>
   43534:	mov	r3, r0
   43538:	cmp	r3, #0
   4353c:	bne	43548 <__assert_fail@plt+0x30e5c>
   43540:	mov	r3, #1
   43544:	b	4354c <__assert_fail@plt+0x30e60>
   43548:	mov	r3, #0
   4354c:	uxtb	r3, r3
   43550:	and	r3, r3, #1
   43554:	uxtb	r3, r3
   43558:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4355c:	ldrb	r2, [r1, #24]
   43560:	and	r3, r3, #1
   43564:	bic	r2, r2, #2
   43568:	lsl	r3, r3, #1
   4356c:	orr	r3, r3, r2
   43570:	mov	r2, r3
   43574:	strb	r2, [r1, #24]
   43578:	ldr	r3, [fp, #-8]
   4357c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43580:	str	r2, [r3]
   43584:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43588:	add	r3, r3, #28
   4358c:	str	r3, [fp, #-8]
   43590:	b	435c0 <__assert_fail@plt+0x30ed4>
   43594:	nop			; (mov r0, r0)
   43598:	b	435c0 <__assert_fail@plt+0x30ed4>
   4359c:	nop			; (mov r0, r0)
   435a0:	b	435c0 <__assert_fail@plt+0x30ed4>
   435a4:	nop			; (mov r0, r0)
   435a8:	b	435c0 <__assert_fail@plt+0x30ed4>
   435ac:	nop			; (mov r0, r0)
   435b0:	b	435c0 <__assert_fail@plt+0x30ed4>
   435b4:	nop			; (mov r0, r0)
   435b8:	b	435c0 <__assert_fail@plt+0x30ed4>
   435bc:	nop			; (mov r0, r0)
   435c0:	sub	r1, fp, #80	; 0x50
   435c4:	sub	r3, fp, #76	; 0x4c
   435c8:	ldr	r2, [fp, #-16]
   435cc:	mov	r0, r3
   435d0:	bl	12638 <getline@plt>
   435d4:	mov	r3, r0
   435d8:	cmn	r3, #1
   435dc:	bne	42fb0 <__assert_fail@plt+0x308c4>
   435e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   435e4:	mov	r0, r3
   435e8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   435ec:	ldr	r0, [fp, #-16]
   435f0:	bl	12290 <ferror_unlocked@plt>
   435f4:	mov	r3, r0
   435f8:	cmp	r3, #0
   435fc:	beq	4362c <__assert_fail@plt+0x30f40>
   43600:	bl	12404 <__errno_location@plt>
   43604:	mov	r3, r0
   43608:	ldr	r3, [r3]
   4360c:	str	r3, [fp, #-64]	; 0xffffffc0
   43610:	ldr	r0, [fp, #-16]
   43614:	bl	124d0 <fclose@plt>
   43618:	bl	12404 <__errno_location@plt>
   4361c:	mov	r2, r0
   43620:	ldr	r3, [fp, #-64]	; 0xffffffc0
   43624:	str	r3, [r2]
   43628:	b	43bc0 <__assert_fail@plt+0x314d4>
   4362c:	ldr	r0, [fp, #-16]
   43630:	bl	124d0 <fclose@plt>
   43634:	mov	r3, r0
   43638:	cmn	r3, #1
   4363c:	bne	43ba8 <__assert_fail@plt+0x314bc>
   43640:	b	43bc0 <__assert_fail@plt+0x314d4>
   43644:	ldr	r3, [pc, #1628]	; 43ca8 <__assert_fail@plt+0x315bc>
   43648:	str	r3, [fp, #-20]	; 0xffffffec
   4364c:	ldr	r1, [pc, #1624]	; 43cac <__assert_fail@plt+0x315c0>
   43650:	ldr	r0, [fp, #-20]	; 0xffffffec
   43654:	bl	12614 <setmntent@plt>
   43658:	str	r0, [fp, #-16]
   4365c:	ldr	r3, [fp, #-16]
   43660:	cmp	r3, #0
   43664:	bne	43b7c <__assert_fail@plt+0x31490>
   43668:	mov	r3, #0
   4366c:	b	43c20 <__assert_fail@plt+0x31534>
   43670:	ldr	r1, [pc, #1592]	; 43cb0 <__assert_fail@plt+0x315c4>
   43674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43678:	bl	12260 <hasmntopt@plt>
   4367c:	mov	r3, r0
   43680:	cmp	r3, #0
   43684:	movne	r3, #1
   43688:	moveq	r3, #0
   4368c:	strb	r3, [fp, #-25]	; 0xffffffe7
   43690:	mov	r0, #32
   43694:	bl	3d178 <__assert_fail@plt+0x2aa8c>
   43698:	mov	r3, r0
   4369c:	str	r3, [fp, #-32]	; 0xffffffe0
   436a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   436a4:	ldr	r3, [r3]
   436a8:	mov	r0, r3
   436ac:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   436b0:	mov	r3, r0
   436b4:	mov	r2, r3
   436b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   436bc:	str	r2, [r3]
   436c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   436c4:	ldr	r3, [r3, #4]
   436c8:	mov	r0, r3
   436cc:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   436d0:	mov	r3, r0
   436d4:	mov	r2, r3
   436d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   436dc:	str	r2, [r3, #4]
   436e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   436e4:	mov	r2, #0
   436e8:	str	r2, [r3, #8]
   436ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   436f0:	ldr	r3, [r3, #8]
   436f4:	mov	r0, r3
   436f8:	bl	3dc58 <__assert_fail@plt+0x2b56c>
   436fc:	mov	r3, r0
   43700:	mov	r2, r3
   43704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43708:	str	r2, [r3, #12]
   4370c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43710:	ldrb	r3, [r2, #24]
   43714:	orr	r3, r3, #4
   43718:	strb	r3, [r2, #24]
   4371c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43720:	ldr	r3, [r3, #12]
   43724:	ldr	r1, [pc, #1296]	; 43c3c <__assert_fail@plt+0x31550>
   43728:	mov	r0, r3
   4372c:	bl	11ffc <strcmp@plt>
   43730:	mov	r3, r0
   43734:	cmp	r3, #0
   43738:	beq	438f0 <__assert_fail@plt+0x31204>
   4373c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43740:	ldr	r3, [r3, #12]
   43744:	ldr	r1, [pc, #1268]	; 43c40 <__assert_fail@plt+0x31554>
   43748:	mov	r0, r3
   4374c:	bl	11ffc <strcmp@plt>
   43750:	mov	r3, r0
   43754:	cmp	r3, #0
   43758:	beq	438f0 <__assert_fail@plt+0x31204>
   4375c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43760:	ldr	r3, [r3, #12]
   43764:	ldr	r1, [pc, #1240]	; 43c44 <__assert_fail@plt+0x31558>
   43768:	mov	r0, r3
   4376c:	bl	11ffc <strcmp@plt>
   43770:	mov	r3, r0
   43774:	cmp	r3, #0
   43778:	beq	438f0 <__assert_fail@plt+0x31204>
   4377c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43780:	ldr	r3, [r3, #12]
   43784:	ldr	r1, [pc, #1212]	; 43c48 <__assert_fail@plt+0x3155c>
   43788:	mov	r0, r3
   4378c:	bl	11ffc <strcmp@plt>
   43790:	mov	r3, r0
   43794:	cmp	r3, #0
   43798:	beq	438f0 <__assert_fail@plt+0x31204>
   4379c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   437a0:	ldr	r3, [r3, #12]
   437a4:	ldr	r1, [pc, #1184]	; 43c4c <__assert_fail@plt+0x31560>
   437a8:	mov	r0, r3
   437ac:	bl	11ffc <strcmp@plt>
   437b0:	mov	r3, r0
   437b4:	cmp	r3, #0
   437b8:	beq	438f0 <__assert_fail@plt+0x31204>
   437bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   437c0:	ldr	r3, [r3, #12]
   437c4:	ldr	r1, [pc, #1156]	; 43c50 <__assert_fail@plt+0x31564>
   437c8:	mov	r0, r3
   437cc:	bl	11ffc <strcmp@plt>
   437d0:	mov	r3, r0
   437d4:	cmp	r3, #0
   437d8:	beq	438f0 <__assert_fail@plt+0x31204>
   437dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   437e0:	ldr	r3, [r3, #12]
   437e4:	ldr	r1, [pc, #1128]	; 43c54 <__assert_fail@plt+0x31568>
   437e8:	mov	r0, r3
   437ec:	bl	11ffc <strcmp@plt>
   437f0:	mov	r3, r0
   437f4:	cmp	r3, #0
   437f8:	beq	438f0 <__assert_fail@plt+0x31204>
   437fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43800:	ldr	r3, [r3, #12]
   43804:	ldr	r1, [pc, #1100]	; 43c58 <__assert_fail@plt+0x3156c>
   43808:	mov	r0, r3
   4380c:	bl	11ffc <strcmp@plt>
   43810:	mov	r3, r0
   43814:	cmp	r3, #0
   43818:	beq	438f0 <__assert_fail@plt+0x31204>
   4381c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43820:	ldr	r3, [r3, #12]
   43824:	ldr	r1, [pc, #1072]	; 43c5c <__assert_fail@plt+0x31570>
   43828:	mov	r0, r3
   4382c:	bl	11ffc <strcmp@plt>
   43830:	mov	r3, r0
   43834:	cmp	r3, #0
   43838:	beq	438f0 <__assert_fail@plt+0x31204>
   4383c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43840:	ldr	r3, [r3, #12]
   43844:	ldr	r1, [pc, #1044]	; 43c60 <__assert_fail@plt+0x31574>
   43848:	mov	r0, r3
   4384c:	bl	11ffc <strcmp@plt>
   43850:	mov	r3, r0
   43854:	cmp	r3, #0
   43858:	beq	438f0 <__assert_fail@plt+0x31204>
   4385c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43860:	ldr	r3, [r3, #12]
   43864:	ldr	r1, [pc, #1016]	; 43c64 <__assert_fail@plt+0x31578>
   43868:	mov	r0, r3
   4386c:	bl	11ffc <strcmp@plt>
   43870:	mov	r3, r0
   43874:	cmp	r3, #0
   43878:	beq	438f0 <__assert_fail@plt+0x31204>
   4387c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43880:	ldr	r3, [r3, #12]
   43884:	ldr	r1, [pc, #988]	; 43c68 <__assert_fail@plt+0x3157c>
   43888:	mov	r0, r3
   4388c:	bl	11ffc <strcmp@plt>
   43890:	mov	r3, r0
   43894:	cmp	r3, #0
   43898:	beq	438f0 <__assert_fail@plt+0x31204>
   4389c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   438a0:	ldr	r3, [r3, #12]
   438a4:	ldr	r1, [pc, #960]	; 43c6c <__assert_fail@plt+0x31580>
   438a8:	mov	r0, r3
   438ac:	bl	11ffc <strcmp@plt>
   438b0:	mov	r3, r0
   438b4:	cmp	r3, #0
   438b8:	beq	438f0 <__assert_fail@plt+0x31204>
   438bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   438c0:	ldr	r3, [r3, #12]
   438c4:	ldr	r1, [pc, #932]	; 43c70 <__assert_fail@plt+0x31584>
   438c8:	mov	r0, r3
   438cc:	bl	11ffc <strcmp@plt>
   438d0:	mov	r3, r0
   438d4:	cmp	r3, #0
   438d8:	bne	438f8 <__assert_fail@plt+0x3120c>
   438dc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   438e0:	eor	r3, r3, #1
   438e4:	uxtb	r3, r3
   438e8:	cmp	r3, #0
   438ec:	beq	438f8 <__assert_fail@plt+0x3120c>
   438f0:	mov	r3, #1
   438f4:	b	438fc <__assert_fail@plt+0x31210>
   438f8:	mov	r3, #0
   438fc:	uxtb	r3, r3
   43900:	and	r3, r3, #1
   43904:	uxtb	r1, r3
   43908:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4390c:	ldrb	r3, [r2, #24]
   43910:	and	r1, r1, #1
   43914:	bic	r3, r3, #1
   43918:	orr	r3, r1, r3
   4391c:	strb	r3, [r2, #24]
   43920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43924:	ldr	r3, [r3]
   43928:	mov	r1, #58	; 0x3a
   4392c:	mov	r0, r3
   43930:	bl	123c8 <strchr@plt>
   43934:	mov	r3, r0
   43938:	cmp	r3, #0
   4393c:	bne	43b0c <__assert_fail@plt+0x31420>
   43940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43944:	ldr	r3, [r3]
   43948:	ldrb	r3, [r3]
   4394c:	cmp	r3, #47	; 0x2f
   43950:	bne	439cc <__assert_fail@plt+0x312e0>
   43954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43958:	ldr	r3, [r3]
   4395c:	add	r3, r3, #1
   43960:	ldrb	r3, [r3]
   43964:	cmp	r3, #47	; 0x2f
   43968:	bne	439cc <__assert_fail@plt+0x312e0>
   4396c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43970:	ldr	r3, [r3, #12]
   43974:	ldr	r1, [pc, #760]	; 43c74 <__assert_fail@plt+0x31588>
   43978:	mov	r0, r3
   4397c:	bl	11ffc <strcmp@plt>
   43980:	mov	r3, r0
   43984:	cmp	r3, #0
   43988:	beq	43b0c <__assert_fail@plt+0x31420>
   4398c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43990:	ldr	r3, [r3, #12]
   43994:	ldr	r1, [pc, #732]	; 43c78 <__assert_fail@plt+0x3158c>
   43998:	mov	r0, r3
   4399c:	bl	11ffc <strcmp@plt>
   439a0:	mov	r3, r0
   439a4:	cmp	r3, #0
   439a8:	beq	43b0c <__assert_fail@plt+0x31420>
   439ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   439b0:	ldr	r3, [r3, #12]
   439b4:	ldr	r1, [pc, #704]	; 43c7c <__assert_fail@plt+0x31590>
   439b8:	mov	r0, r3
   439bc:	bl	11ffc <strcmp@plt>
   439c0:	mov	r3, r0
   439c4:	cmp	r3, #0
   439c8:	beq	43b0c <__assert_fail@plt+0x31420>
   439cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   439d0:	ldr	r3, [r3, #12]
   439d4:	ldr	r1, [pc, #676]	; 43c80 <__assert_fail@plt+0x31594>
   439d8:	mov	r0, r3
   439dc:	bl	11ffc <strcmp@plt>
   439e0:	mov	r3, r0
   439e4:	cmp	r3, #0
   439e8:	beq	43b0c <__assert_fail@plt+0x31420>
   439ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   439f0:	ldr	r3, [r3, #12]
   439f4:	ldr	r1, [pc, #648]	; 43c84 <__assert_fail@plt+0x31598>
   439f8:	mov	r0, r3
   439fc:	bl	11ffc <strcmp@plt>
   43a00:	mov	r3, r0
   43a04:	cmp	r3, #0
   43a08:	beq	43b0c <__assert_fail@plt+0x31420>
   43a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43a10:	ldr	r3, [r3, #12]
   43a14:	ldr	r1, [pc, #620]	; 43c88 <__assert_fail@plt+0x3159c>
   43a18:	mov	r0, r3
   43a1c:	bl	11ffc <strcmp@plt>
   43a20:	mov	r3, r0
   43a24:	cmp	r3, #0
   43a28:	beq	43b0c <__assert_fail@plt+0x31420>
   43a2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43a30:	ldr	r3, [r3, #12]
   43a34:	ldr	r1, [pc, #592]	; 43c8c <__assert_fail@plt+0x315a0>
   43a38:	mov	r0, r3
   43a3c:	bl	11ffc <strcmp@plt>
   43a40:	mov	r3, r0
   43a44:	cmp	r3, #0
   43a48:	beq	43b0c <__assert_fail@plt+0x31420>
   43a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43a50:	ldr	r3, [r3, #12]
   43a54:	ldr	r1, [pc, #564]	; 43c90 <__assert_fail@plt+0x315a4>
   43a58:	mov	r0, r3
   43a5c:	bl	11ffc <strcmp@plt>
   43a60:	mov	r3, r0
   43a64:	cmp	r3, #0
   43a68:	beq	43b0c <__assert_fail@plt+0x31420>
   43a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43a70:	ldr	r3, [r3, #12]
   43a74:	ldr	r1, [pc, #536]	; 43c94 <__assert_fail@plt+0x315a8>
   43a78:	mov	r0, r3
   43a7c:	bl	11ffc <strcmp@plt>
   43a80:	mov	r3, r0
   43a84:	cmp	r3, #0
   43a88:	beq	43b0c <__assert_fail@plt+0x31420>
   43a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43a90:	ldr	r3, [r3, #12]
   43a94:	ldr	r1, [pc, #508]	; 43c98 <__assert_fail@plt+0x315ac>
   43a98:	mov	r0, r3
   43a9c:	bl	11ffc <strcmp@plt>
   43aa0:	mov	r3, r0
   43aa4:	cmp	r3, #0
   43aa8:	beq	43b0c <__assert_fail@plt+0x31420>
   43aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43ab0:	ldr	r3, [r3, #12]
   43ab4:	ldr	r1, [pc, #480]	; 43c9c <__assert_fail@plt+0x315b0>
   43ab8:	mov	r0, r3
   43abc:	bl	11ffc <strcmp@plt>
   43ac0:	mov	r3, r0
   43ac4:	cmp	r3, #0
   43ac8:	beq	43b0c <__assert_fail@plt+0x31420>
   43acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43ad0:	ldr	r3, [r3, #12]
   43ad4:	ldr	r1, [pc, #452]	; 43ca0 <__assert_fail@plt+0x315b4>
   43ad8:	mov	r0, r3
   43adc:	bl	11ffc <strcmp@plt>
   43ae0:	mov	r3, r0
   43ae4:	cmp	r3, #0
   43ae8:	beq	43b0c <__assert_fail@plt+0x31420>
   43aec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43af0:	ldr	r3, [r3]
   43af4:	mov	r1, r3
   43af8:	ldr	r0, [pc, #420]	; 43ca4 <__assert_fail@plt+0x315b8>
   43afc:	bl	11ffc <strcmp@plt>
   43b00:	mov	r3, r0
   43b04:	cmp	r3, #0
   43b08:	bne	43b14 <__assert_fail@plt+0x31428>
   43b0c:	mov	r3, #1
   43b10:	b	43b18 <__assert_fail@plt+0x3142c>
   43b14:	mov	r3, #0
   43b18:	uxtb	r3, r3
   43b1c:	and	r3, r3, #1
   43b20:	uxtb	r3, r3
   43b24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43b28:	ldrb	r2, [r1, #24]
   43b2c:	and	r3, r3, #1
   43b30:	bic	r2, r2, #2
   43b34:	lsl	r3, r3, #1
   43b38:	orr	r3, r3, r2
   43b3c:	mov	r2, r3
   43b40:	strb	r2, [r1, #24]
   43b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43b48:	ldr	r3, [r3, #12]
   43b4c:	mov	r0, r3
   43b50:	bl	42cfc <__assert_fail@plt+0x30610>
   43b54:	mov	r2, r0
   43b58:	mov	r3, r1
   43b5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43b60:	strd	r2, [r1, #16]
   43b64:	ldr	r3, [fp, #-8]
   43b68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43b6c:	str	r2, [r3]
   43b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43b74:	add	r3, r3, #28
   43b78:	str	r3, [fp, #-8]
   43b7c:	ldr	r0, [fp, #-16]
   43b80:	bl	122c0 <getmntent@plt>
   43b84:	str	r0, [fp, #-24]	; 0xffffffe8
   43b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43b8c:	cmp	r3, #0
   43b90:	bne	43670 <__assert_fail@plt+0x30f84>
   43b94:	ldr	r0, [fp, #-16]
   43b98:	bl	124f4 <endmntent@plt>
   43b9c:	mov	r3, r0
   43ba0:	cmp	r3, #0
   43ba4:	beq	43bbc <__assert_fail@plt+0x314d0>
   43ba8:	ldr	r3, [fp, #-8]
   43bac:	mov	r2, #0
   43bb0:	str	r2, [r3]
   43bb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   43bb8:	b	43c20 <__assert_fail@plt+0x31534>
   43bbc:	nop			; (mov r0, r0)
   43bc0:	bl	12404 <__errno_location@plt>
   43bc4:	mov	r3, r0
   43bc8:	ldr	r3, [r3]
   43bcc:	str	r3, [fp, #-68]	; 0xffffffbc
   43bd0:	ldr	r3, [fp, #-8]
   43bd4:	mov	r2, #0
   43bd8:	str	r2, [r3]
   43bdc:	b	43c00 <__assert_fail@plt+0x31514>
   43be0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   43be4:	ldr	r3, [r3, #28]
   43be8:	str	r3, [fp, #-32]	; 0xffffffe0
   43bec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   43bf0:	mov	r0, r3
   43bf4:	bl	43cb4 <__assert_fail@plt+0x315c8>
   43bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43bfc:	str	r3, [fp, #-72]	; 0xffffffb8
   43c00:	ldr	r3, [fp, #-72]	; 0xffffffb8
   43c04:	cmp	r3, #0
   43c08:	bne	43be0 <__assert_fail@plt+0x314f4>
   43c0c:	bl	12404 <__errno_location@plt>
   43c10:	mov	r2, r0
   43c14:	ldr	r3, [fp, #-68]	; 0xffffffbc
   43c18:	str	r3, [r2]
   43c1c:	mov	r3, #0
   43c20:	mov	r0, r3
   43c24:	sub	sp, fp, #4
   43c28:	pop	{fp, pc}
   43c2c:	andeq	sl, r6, r8, asr #23
   43c30:	andeq	sl, r6, r0, ror #23
   43c34:	andeq	sl, r6, r4, ror #23
   43c38:	strdeq	sl, [r6], -r8
   43c3c:	strdeq	sl, [r6], -ip
   43c40:	andeq	sl, r6, r4, lsl #24
   43c44:	andeq	sl, r6, ip, lsl #24
   43c48:	andeq	sl, r6, r4, lsl ip
   43c4c:	andeq	sl, r6, ip, lsl ip
   43c50:	andeq	sl, r6, r4, lsr #24
   43c54:	andeq	sl, r6, ip, lsr #24
   43c58:	andeq	sl, r6, r8, lsr ip
   43c5c:	andeq	sl, r6, r0, asr #24
   43c60:	andeq	sl, r6, ip, asr #24
   43c64:	andeq	sl, r6, r4, asr ip
   43c68:	andeq	sl, r6, ip, asr ip
   43c6c:	andeq	sl, r6, r4, ror #24
   43c70:	andeq	sl, r6, ip, ror #24
   43c74:	andeq	sl, r6, r4, ror ip
   43c78:	andeq	sl, r6, ip, ror ip
   43c7c:	andeq	sl, r6, r4, lsl #25
   43c80:	andeq	sl, r6, ip, lsl #25
   43c84:	muleq	r6, r4, ip
   43c88:	muleq	r6, r8, ip
   43c8c:	andeq	sl, r6, r0, lsr #25
   43c90:	andeq	sl, r6, ip, lsr #25
   43c94:			; <UNDEFINED> instruction: 0x0006acb4
   43c98:			; <UNDEFINED> instruction: 0x0006acbc
   43c9c:	andeq	sl, r6, r4, asr #25
   43ca0:	andeq	sl, r6, ip, asr #25
   43ca4:	ldrdeq	sl, [r6], -r4
   43ca8:	ldrdeq	sl, [r6], -ip
   43cac:	andeq	sl, r6, r8, ror #25
   43cb0:	andeq	sl, r6, ip, ror #25
   43cb4:	push	{fp, lr}
   43cb8:	add	fp, sp, #4
   43cbc:	sub	sp, sp, #8
   43cc0:	str	r0, [fp, #-8]
   43cc4:	ldr	r3, [fp, #-8]
   43cc8:	ldr	r3, [r3]
   43ccc:	mov	r0, r3
   43cd0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   43cd4:	ldr	r3, [fp, #-8]
   43cd8:	ldr	r3, [r3, #4]
   43cdc:	mov	r0, r3
   43ce0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   43ce4:	ldr	r3, [fp, #-8]
   43ce8:	ldr	r3, [r3, #8]
   43cec:	mov	r0, r3
   43cf0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   43cf4:	ldr	r3, [fp, #-8]
   43cf8:	ldrb	r3, [r3, #24]
   43cfc:	and	r3, r3, #4
   43d00:	uxtb	r3, r3
   43d04:	cmp	r3, #0
   43d08:	beq	43d1c <__assert_fail@plt+0x31630>
   43d0c:	ldr	r3, [fp, #-8]
   43d10:	ldr	r3, [r3, #12]
   43d14:	mov	r0, r3
   43d18:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   43d1c:	ldr	r0, [fp, #-8]
   43d20:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   43d24:	nop			; (mov r0, r0)
   43d28:	sub	sp, fp, #4
   43d2c:	pop	{fp, pc}
   43d30:	push	{r4, r5, fp, lr}
   43d34:	add	fp, sp, #12
   43d38:	sub	sp, sp, #16
   43d3c:	str	r0, [fp, #-24]	; 0xffffffe8
   43d40:	str	r1, [fp, #-28]	; 0xffffffe4
   43d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43d48:	cmp	r3, #0
   43d4c:	bne	43d60 <__assert_fail@plt+0x31674>
   43d50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   43d54:	bl	42ba8 <__assert_fail@plt+0x304bc>
   43d58:	mov	r3, r0
   43d5c:	b	43df4 <__assert_fail@plt+0x31708>
   43d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43d64:	cmp	r3, #0
   43d68:	bne	43d7c <__assert_fail@plt+0x31690>
   43d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43d70:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   43d74:	mov	r3, #0
   43d78:	b	43df4 <__assert_fail@plt+0x31708>
   43d7c:	mov	r1, #0
   43d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43d84:	mov	r2, r3
   43d88:	mov	r3, #0
   43d8c:	mov	r4, r3
   43d90:	mov	r5, #0
   43d94:	cmp	r4, #0
   43d98:	beq	43da0 <__assert_fail@plt+0x316b4>
   43d9c:	mov	r1, #1
   43da0:	cmp	r2, #0
   43da4:	bge	43dac <__assert_fail@plt+0x316c0>
   43da8:	mov	r1, #1
   43dac:	mov	r3, r2
   43db0:	str	r3, [fp, #-20]	; 0xffffffec
   43db4:	mov	r3, r1
   43db8:	and	r3, r3, #1
   43dbc:	uxtb	r3, r3
   43dc0:	cmp	r3, #0
   43dc4:	beq	43de0 <__assert_fail@plt+0x316f4>
   43dc8:	bl	12404 <__errno_location@plt>
   43dcc:	mov	r2, r0
   43dd0:	mov	r3, #12
   43dd4:	str	r3, [r2]
   43dd8:	mov	r3, #0
   43ddc:	b	43df4 <__assert_fail@plt+0x31708>
   43de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43de8:	bl	121a0 <realloc@plt>
   43dec:	str	r0, [fp, #-16]
   43df0:	ldr	r3, [fp, #-16]
   43df4:	mov	r0, r3
   43df8:	sub	sp, fp, #12
   43dfc:	pop	{r4, r5, fp, pc}
   43e00:	push	{fp, lr}
   43e04:	add	fp, sp, #4
   43e08:	sub	sp, sp, #24
   43e0c:	str	r0, [fp, #-16]
   43e10:	str	r1, [fp, #-20]	; 0xffffffec
   43e14:	str	r2, [fp, #-24]	; 0xffffffe8
   43e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43e1c:	cmp	r3, #0
   43e20:	beq	43e5c <__assert_fail@plt+0x31770>
   43e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43e28:	mvn	r0, #0
   43e2c:	bl	63574 <__assert_fail@plt+0x50e88>
   43e30:	mov	r3, r0
   43e34:	mov	r2, r3
   43e38:	ldr	r3, [fp, #-20]	; 0xffffffec
   43e3c:	cmp	r2, r3
   43e40:	bcs	43e5c <__assert_fail@plt+0x31770>
   43e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   43e48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43e4c:	mul	r3, r2, r3
   43e50:	str	r3, [fp, #-8]
   43e54:	mov	r3, #1
   43e58:	b	43e70 <__assert_fail@plt+0x31784>
   43e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43e64:	mul	r3, r2, r3
   43e68:	str	r3, [fp, #-8]
   43e6c:	mov	r3, #0
   43e70:	cmp	r3, #0
   43e74:	beq	43e90 <__assert_fail@plt+0x317a4>
   43e78:	bl	12404 <__errno_location@plt>
   43e7c:	mov	r2, r0
   43e80:	mov	r3, #12
   43e84:	str	r3, [r2]
   43e88:	mov	r3, #0
   43e8c:	b	43ea4 <__assert_fail@plt+0x317b8>
   43e90:	ldr	r3, [fp, #-8]
   43e94:	mov	r1, r3
   43e98:	ldr	r0, [fp, #-16]
   43e9c:	bl	43d30 <__assert_fail@plt+0x31644>
   43ea0:	mov	r3, r0
   43ea4:	mov	r0, r3
   43ea8:	sub	sp, fp, #4
   43eac:	pop	{fp, pc}
   43eb0:	push	{fp}		; (str fp, [sp, #-4]!)
   43eb4:	add	fp, sp, #0
   43eb8:	mvn	r3, #0
   43ebc:	mov	r0, r3
   43ec0:	add	sp, fp, #0
   43ec4:	pop	{fp}		; (ldr fp, [sp], #4)
   43ec8:	bx	lr
   43ecc:	push	{fp}		; (str fp, [sp, #-4]!)
   43ed0:	add	fp, sp, #0
   43ed4:	sub	sp, sp, #12
   43ed8:	str	r0, [fp, #-8]
   43edc:	str	r1, [fp, #-12]
   43ee0:	ldr	r3, [fp, #-12]
   43ee4:	add	r2, r3, #31
   43ee8:	cmp	r3, #0
   43eec:	movlt	r3, r2
   43ef0:	movge	r3, r3
   43ef4:	asr	r3, r3, #5
   43ef8:	mov	r0, r3
   43efc:	mov	r3, r0
   43f00:	lsl	r3, r3, #2
   43f04:	ldr	r2, [fp, #-8]
   43f08:	add	r1, r2, r3
   43f0c:	mov	r3, r0
   43f10:	lsl	r3, r3, #2
   43f14:	ldr	r2, [fp, #-8]
   43f18:	add	r3, r2, r3
   43f1c:	ldr	r0, [r3]
   43f20:	ldr	r2, [fp, #-12]
   43f24:	asr	r3, r2, #31
   43f28:	lsr	r3, r3, #27
   43f2c:	add	r2, r2, r3
   43f30:	and	r2, r2, #31
   43f34:	sub	r3, r2, r3
   43f38:	mov	r2, r3
   43f3c:	mov	r3, #1
   43f40:	lsl	r3, r3, r2
   43f44:	orr	r3, r0, r3
   43f48:	str	r3, [r1]
   43f4c:	nop			; (mov r0, r0)
   43f50:	add	sp, fp, #0
   43f54:	pop	{fp}		; (ldr fp, [sp], #4)
   43f58:	bx	lr
   43f5c:	push	{fp}		; (str fp, [sp, #-4]!)
   43f60:	add	fp, sp, #0
   43f64:	sub	sp, sp, #12
   43f68:	str	r0, [fp, #-8]
   43f6c:	str	r1, [fp, #-12]
   43f70:	ldr	r3, [fp, #-12]
   43f74:	add	r2, r3, #31
   43f78:	cmp	r3, #0
   43f7c:	movlt	r3, r2
   43f80:	movge	r3, r3
   43f84:	asr	r3, r3, #5
   43f88:	mov	r0, r3
   43f8c:	mov	r3, r0
   43f90:	lsl	r3, r3, #2
   43f94:	ldr	r2, [fp, #-8]
   43f98:	add	r1, r2, r3
   43f9c:	mov	r3, r0
   43fa0:	lsl	r3, r3, #2
   43fa4:	ldr	r2, [fp, #-8]
   43fa8:	add	r3, r2, r3
   43fac:	ldr	r0, [r3]
   43fb0:	ldr	r2, [fp, #-12]
   43fb4:	asr	r3, r2, #31
   43fb8:	lsr	r3, r3, #27
   43fbc:	add	r2, r2, r3
   43fc0:	and	r2, r2, #31
   43fc4:	sub	r3, r2, r3
   43fc8:	mov	r2, r3
   43fcc:	mov	r3, #1
   43fd0:	lsl	r3, r3, r2
   43fd4:	mvn	r3, r3
   43fd8:	and	r3, r3, r0
   43fdc:	str	r3, [r1]
   43fe0:	nop			; (mov r0, r0)
   43fe4:	add	sp, fp, #0
   43fe8:	pop	{fp}		; (ldr fp, [sp], #4)
   43fec:	bx	lr
   43ff0:	push	{fp}		; (str fp, [sp, #-4]!)
   43ff4:	add	fp, sp, #0
   43ff8:	sub	sp, sp, #12
   43ffc:	str	r0, [fp, #-8]
   44000:	str	r1, [fp, #-12]
   44004:	ldr	r3, [fp, #-12]
   44008:	add	r2, r3, #31
   4400c:	cmp	r3, #0
   44010:	movlt	r3, r2
   44014:	movge	r3, r3
   44018:	asr	r3, r3, #5
   4401c:	lsl	r3, r3, #2
   44020:	ldr	r2, [fp, #-8]
   44024:	add	r3, r2, r3
   44028:	ldr	r1, [r3]
   4402c:	ldr	r2, [fp, #-12]
   44030:	asr	r3, r2, #31
   44034:	lsr	r3, r3, #27
   44038:	add	r2, r2, r3
   4403c:	and	r2, r2, #31
   44040:	sub	r3, r2, r3
   44044:	lsr	r3, r1, r3
   44048:	and	r3, r3, #1
   4404c:	cmp	r3, #0
   44050:	movne	r3, #1
   44054:	moveq	r3, #0
   44058:	uxtb	r3, r3
   4405c:	mov	r0, r3
   44060:	add	sp, fp, #0
   44064:	pop	{fp}		; (ldr fp, [sp], #4)
   44068:	bx	lr
   4406c:	push	{fp, lr}
   44070:	add	fp, sp, #4
   44074:	sub	sp, sp, #8
   44078:	str	r0, [fp, #-8]
   4407c:	mov	r2, #32
   44080:	mov	r1, #0
   44084:	ldr	r0, [fp, #-8]
   44088:	bl	12434 <memset@plt>
   4408c:	nop			; (mov r0, r0)
   44090:	sub	sp, fp, #4
   44094:	pop	{fp, pc}
   44098:	push	{fp, lr}
   4409c:	add	fp, sp, #4
   440a0:	sub	sp, sp, #8
   440a4:	str	r0, [fp, #-8]
   440a8:	mov	r2, #32
   440ac:	mvn	r1, #0
   440b0:	ldr	r0, [fp, #-8]
   440b4:	bl	12434 <memset@plt>
   440b8:	nop			; (mov r0, r0)
   440bc:	sub	sp, fp, #4
   440c0:	pop	{fp, pc}
   440c4:	push	{fp, lr}
   440c8:	add	fp, sp, #4
   440cc:	sub	sp, sp, #8
   440d0:	str	r0, [fp, #-8]
   440d4:	str	r1, [fp, #-12]
   440d8:	mov	r2, #32
   440dc:	ldr	r1, [fp, #-12]
   440e0:	ldr	r0, [fp, #-8]
   440e4:	bl	120f8 <memcpy@plt>
   440e8:	nop			; (mov r0, r0)
   440ec:	sub	sp, fp, #4
   440f0:	pop	{fp, pc}
   440f4:	push	{fp}		; (str fp, [sp, #-4]!)
   440f8:	add	fp, sp, #0
   440fc:	sub	sp, sp, #20
   44100:	str	r0, [fp, #-16]
   44104:	mov	r3, #0
   44108:	str	r3, [fp, #-8]
   4410c:	b	44148 <__assert_fail@plt+0x31a5c>
   44110:	ldr	r3, [fp, #-8]
   44114:	lsl	r3, r3, #2
   44118:	ldr	r2, [fp, #-16]
   4411c:	add	r3, r2, r3
   44120:	ldr	r2, [fp, #-8]
   44124:	lsl	r2, r2, #2
   44128:	ldr	r1, [fp, #-16]
   4412c:	add	r2, r1, r2
   44130:	ldr	r2, [r2]
   44134:	mvn	r2, r2
   44138:	str	r2, [r3]
   4413c:	ldr	r3, [fp, #-8]
   44140:	add	r3, r3, #1
   44144:	str	r3, [fp, #-8]
   44148:	ldr	r3, [fp, #-8]
   4414c:	cmp	r3, #7
   44150:	ble	44110 <__assert_fail@plt+0x31a24>
   44154:	nop			; (mov r0, r0)
   44158:	add	sp, fp, #0
   4415c:	pop	{fp}		; (ldr fp, [sp], #4)
   44160:	bx	lr
   44164:	push	{fp}		; (str fp, [sp, #-4]!)
   44168:	add	fp, sp, #0
   4416c:	sub	sp, sp, #20
   44170:	str	r0, [fp, #-16]
   44174:	str	r1, [fp, #-20]	; 0xffffffec
   44178:	mov	r3, #0
   4417c:	str	r3, [fp, #-8]
   44180:	b	441d0 <__assert_fail@plt+0x31ae4>
   44184:	ldr	r3, [fp, #-8]
   44188:	lsl	r3, r3, #2
   4418c:	ldr	r2, [fp, #-16]
   44190:	add	r3, r2, r3
   44194:	ldr	r2, [fp, #-8]
   44198:	lsl	r2, r2, #2
   4419c:	ldr	r1, [fp, #-16]
   441a0:	add	r2, r1, r2
   441a4:	ldr	r1, [r2]
   441a8:	ldr	r2, [fp, #-8]
   441ac:	lsl	r2, r2, #2
   441b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   441b4:	add	r2, r0, r2
   441b8:	ldr	r2, [r2]
   441bc:	orr	r2, r1, r2
   441c0:	str	r2, [r3]
   441c4:	ldr	r3, [fp, #-8]
   441c8:	add	r3, r3, #1
   441cc:	str	r3, [fp, #-8]
   441d0:	ldr	r3, [fp, #-8]
   441d4:	cmp	r3, #7
   441d8:	ble	44184 <__assert_fail@plt+0x31a98>
   441dc:	nop			; (mov r0, r0)
   441e0:	add	sp, fp, #0
   441e4:	pop	{fp}		; (ldr fp, [sp], #4)
   441e8:	bx	lr
   441ec:	push	{fp}		; (str fp, [sp, #-4]!)
   441f0:	add	fp, sp, #0
   441f4:	sub	sp, sp, #20
   441f8:	str	r0, [fp, #-16]
   441fc:	str	r1, [fp, #-20]	; 0xffffffec
   44200:	mov	r3, #0
   44204:	str	r3, [fp, #-8]
   44208:	b	44258 <__assert_fail@plt+0x31b6c>
   4420c:	ldr	r3, [fp, #-8]
   44210:	lsl	r3, r3, #2
   44214:	ldr	r2, [fp, #-16]
   44218:	add	r3, r2, r3
   4421c:	ldr	r2, [fp, #-8]
   44220:	lsl	r2, r2, #2
   44224:	ldr	r1, [fp, #-16]
   44228:	add	r2, r1, r2
   4422c:	ldr	r1, [r2]
   44230:	ldr	r2, [fp, #-8]
   44234:	lsl	r2, r2, #2
   44238:	ldr	r0, [fp, #-20]	; 0xffffffec
   4423c:	add	r2, r0, r2
   44240:	ldr	r2, [r2]
   44244:	and	r2, r2, r1
   44248:	str	r2, [r3]
   4424c:	ldr	r3, [fp, #-8]
   44250:	add	r3, r3, #1
   44254:	str	r3, [fp, #-8]
   44258:	ldr	r3, [fp, #-8]
   4425c:	cmp	r3, #7
   44260:	ble	4420c <__assert_fail@plt+0x31b20>
   44264:	nop			; (mov r0, r0)
   44268:	add	sp, fp, #0
   4426c:	pop	{fp}		; (ldr fp, [sp], #4)
   44270:	bx	lr
   44274:	push	{fp}		; (str fp, [sp, #-4]!)
   44278:	add	fp, sp, #0
   4427c:	sub	sp, sp, #20
   44280:	str	r0, [fp, #-16]
   44284:	str	r1, [fp, #-20]	; 0xffffffec
   44288:	ldr	r3, [fp, #-16]
   4428c:	ldr	r3, [r3, #80]	; 0x50
   44290:	cmp	r3, #1
   44294:	bne	442a0 <__assert_fail@plt+0x31bb4>
   44298:	mov	r3, #1
   4429c:	b	44308 <__assert_fail@plt+0x31c1c>
   442a0:	mov	r3, #1
   442a4:	str	r3, [fp, #-8]
   442a8:	b	442e0 <__assert_fail@plt+0x31bf4>
   442ac:	ldr	r3, [fp, #-16]
   442b0:	ldr	r2, [r3, #8]
   442b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   442b8:	ldr	r3, [fp, #-8]
   442bc:	add	r3, r1, r3
   442c0:	lsl	r3, r3, #2
   442c4:	add	r3, r2, r3
   442c8:	ldr	r3, [r3]
   442cc:	cmn	r3, #1
   442d0:	bne	44300 <__assert_fail@plt+0x31c14>
   442d4:	ldr	r3, [fp, #-8]
   442d8:	add	r3, r3, #1
   442dc:	str	r3, [fp, #-8]
   442e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   442e4:	ldr	r3, [fp, #-8]
   442e8:	add	r2, r2, r3
   442ec:	ldr	r3, [fp, #-16]
   442f0:	ldr	r3, [r3, #28]
   442f4:	cmp	r2, r3
   442f8:	blt	442ac <__assert_fail@plt+0x31bc0>
   442fc:	b	44304 <__assert_fail@plt+0x31c18>
   44300:	nop			; (mov r0, r0)
   44304:	ldr	r3, [fp, #-8]
   44308:	mov	r0, r3
   4430c:	add	sp, fp, #0
   44310:	pop	{fp}		; (ldr fp, [sp], #4)
   44314:	bx	lr
   44318:	push	{fp}		; (str fp, [sp, #-4]!)
   4431c:	add	fp, sp, #0
   44320:	sub	sp, sp, #12
   44324:	str	r0, [fp, #-8]
   44328:	str	r1, [fp, #-12]
   4432c:	ldr	r3, [fp, #-8]
   44330:	ldr	r3, [r3, #80]	; 0x50
   44334:	cmp	r3, #1
   44338:	bne	44354 <__assert_fail@plt+0x31c68>
   4433c:	ldr	r3, [fp, #-8]
   44340:	ldr	r2, [r3, #4]
   44344:	ldr	r3, [fp, #-12]
   44348:	add	r3, r2, r3
   4434c:	ldrb	r3, [r3]
   44350:	b	4436c <__assert_fail@plt+0x31c80>
   44354:	ldr	r3, [fp, #-8]
   44358:	ldr	r2, [r3, #8]
   4435c:	ldr	r3, [fp, #-12]
   44360:	lsl	r3, r3, #2
   44364:	add	r3, r2, r3
   44368:	ldr	r3, [r3]
   4436c:	mov	r0, r3
   44370:	add	sp, fp, #0
   44374:	pop	{fp}		; (ldr fp, [sp], #4)
   44378:	bx	lr
   4437c:	push	{fp}		; (str fp, [sp, #-4]!)
   44380:	add	fp, sp, #0
   44384:	sub	sp, sp, #12
   44388:	str	r0, [fp, #-8]
   4438c:	str	r1, [fp, #-12]
   44390:	mov	r3, #1
   44394:	mov	r0, r3
   44398:	add	sp, fp, #0
   4439c:	pop	{fp}		; (ldr fp, [sp], #4)
   443a0:	bx	lr
   443a4:	push	{fp, lr}
   443a8:	add	fp, sp, #4
   443ac:	sub	sp, sp, #32
   443b0:	str	r0, [fp, #-16]
   443b4:	str	r1, [fp, #-20]	; 0xffffffec
   443b8:	str	r2, [fp, #-24]	; 0xffffffe8
   443bc:	str	r3, [fp, #-28]	; 0xffffffe4
   443c0:	ldr	r3, [fp, #12]
   443c4:	ldr	r2, [r3, #92]	; 0x5c
   443c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   443cc:	cmp	r2, r3
   443d0:	ble	443e0 <__assert_fail@plt+0x31cf4>
   443d4:	ldr	r3, [fp, #12]
   443d8:	ldr	r3, [r3, #92]	; 0x5c
   443dc:	str	r3, [fp, #-28]	; 0xffffffe4
   443e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   443e4:	add	r2, r3, #1
   443e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   443ec:	cmp	r2, r3
   443f0:	movlt	r3, r2
   443f4:	movge	r3, r3
   443f8:	str	r3, [fp, #-8]
   443fc:	ldr	r3, [fp, #12]
   44400:	str	r3, [sp, #4]
   44404:	ldrb	r3, [fp, #8]
   44408:	str	r3, [sp]
   4440c:	ldr	r3, [fp, #4]
   44410:	ldr	r2, [fp, #-16]
   44414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44418:	ldr	r0, [fp, #-20]	; 0xffffffec
   4441c:	bl	448b0 <__assert_fail@plt+0x321c4>
   44420:	ldr	r1, [fp, #-8]
   44424:	ldr	r0, [fp, #-16]
   44428:	bl	44704 <__assert_fail@plt+0x32018>
   4442c:	str	r0, [fp, #-12]
   44430:	ldr	r3, [fp, #-12]
   44434:	cmp	r3, #0
   44438:	movne	r3, #1
   4443c:	moveq	r3, #0
   44440:	uxtb	r3, r3
   44444:	cmp	r3, #0
   44448:	beq	44454 <__assert_fail@plt+0x31d68>
   4444c:	ldr	r3, [fp, #-12]
   44450:	b	444f4 <__assert_fail@plt+0x31e08>
   44454:	ldr	r3, [fp, #12]
   44458:	add	r2, r3, #96	; 0x60
   4445c:	ldr	r3, [fp, #-16]
   44460:	str	r2, [r3, #68]	; 0x44
   44464:	ldr	r3, [fp, #12]
   44468:	ldrb	r3, [r3, #88]	; 0x58
   4446c:	lsr	r3, r3, #4
   44470:	and	r3, r3, #1
   44474:	uxtb	r3, r3
   44478:	mov	r2, r3
   4447c:	ldr	r3, [fp, #-16]
   44480:	strb	r2, [r3, #78]	; 0x4e
   44484:	ldr	r3, [fp, #-16]
   44488:	ldrb	r3, [r3, #75]	; 0x4b
   4448c:	cmp	r3, #0
   44490:	beq	444a0 <__assert_fail@plt+0x31db4>
   44494:	ldr	r3, [fp, #-16]
   44498:	ldr	r3, [r3, #4]
   4449c:	b	444a4 <__assert_fail@plt+0x31db8>
   444a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   444a4:	ldr	r2, [fp, #-16]
   444a8:	str	r3, [r2, #4]
   444ac:	ldr	r3, [fp, #-16]
   444b0:	ldrb	r3, [r3, #75]	; 0x4b
   444b4:	cmp	r3, #0
   444b8:	bne	444d4 <__assert_fail@plt+0x31de8>
   444bc:	ldr	r3, [fp, #12]
   444c0:	ldr	r3, [r3, #92]	; 0x5c
   444c4:	cmp	r3, #1
   444c8:	bgt	444d4 <__assert_fail@plt+0x31de8>
   444cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   444d0:	b	444d8 <__assert_fail@plt+0x31dec>
   444d4:	mov	r3, #0
   444d8:	ldr	r2, [fp, #-16]
   444dc:	str	r3, [r2, #28]
   444e0:	ldr	r3, [fp, #-16]
   444e4:	ldr	r2, [r3, #28]
   444e8:	ldr	r3, [fp, #-16]
   444ec:	str	r2, [r3, #32]
   444f0:	mov	r3, #0
   444f4:	mov	r0, r3
   444f8:	sub	sp, fp, #4
   444fc:	pop	{fp, pc}
   44500:	push	{fp, lr}
   44504:	add	fp, sp, #4
   44508:	sub	sp, sp, #32
   4450c:	str	r0, [fp, #-16]
   44510:	str	r1, [fp, #-20]	; 0xffffffec
   44514:	str	r2, [fp, #-24]	; 0xffffffe8
   44518:	str	r3, [fp, #-28]	; 0xffffffe4
   4451c:	mov	r2, #84	; 0x54
   44520:	mov	r1, #0
   44524:	ldr	r0, [fp, #-16]
   44528:	bl	12434 <memset@plt>
   4452c:	ldr	r3, [fp, #8]
   44530:	str	r3, [sp, #4]
   44534:	ldrb	r3, [fp, #4]
   44538:	str	r3, [sp]
   4453c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44540:	ldr	r2, [fp, #-16]
   44544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44548:	ldr	r0, [fp, #-20]	; 0xffffffec
   4454c:	bl	448b0 <__assert_fail@plt+0x321c4>
   44550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44554:	cmp	r3, #0
   44558:	ble	44598 <__assert_fail@plt+0x31eac>
   4455c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44560:	add	r3, r3, #1
   44564:	mov	r1, r3
   44568:	ldr	r0, [fp, #-16]
   4456c:	bl	44704 <__assert_fail@plt+0x32018>
   44570:	str	r0, [fp, #-8]
   44574:	ldr	r3, [fp, #-8]
   44578:	cmp	r3, #0
   4457c:	movne	r3, #1
   44580:	moveq	r3, #0
   44584:	uxtb	r3, r3
   44588:	cmp	r3, #0
   4458c:	beq	44598 <__assert_fail@plt+0x31eac>
   44590:	ldr	r3, [fp, #-8]
   44594:	b	446f8 <__assert_fail@plt+0x3200c>
   44598:	ldr	r3, [fp, #-16]
   4459c:	ldrb	r3, [r3, #75]	; 0x4b
   445a0:	cmp	r3, #0
   445a4:	beq	445b4 <__assert_fail@plt+0x31ec8>
   445a8:	ldr	r3, [fp, #-16]
   445ac:	ldr	r3, [r3, #4]
   445b0:	b	445b8 <__assert_fail@plt+0x31ecc>
   445b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   445b8:	ldr	r2, [fp, #-16]
   445bc:	str	r3, [r2, #4]
   445c0:	ldrb	r3, [fp, #4]
   445c4:	cmp	r3, #0
   445c8:	beq	44690 <__assert_fail@plt+0x31fa4>
   445cc:	ldr	r3, [fp, #8]
   445d0:	ldr	r3, [r3, #92]	; 0x5c
   445d4:	cmp	r3, #1
   445d8:	ble	44684 <__assert_fail@plt+0x31f98>
   445dc:	ldr	r0, [fp, #-16]
   445e0:	bl	44d30 <__assert_fail@plt+0x32644>
   445e4:	str	r0, [fp, #-8]
   445e8:	ldr	r3, [fp, #-8]
   445ec:	cmp	r3, #0
   445f0:	movne	r3, #1
   445f4:	moveq	r3, #0
   445f8:	uxtb	r3, r3
   445fc:	cmp	r3, #0
   44600:	beq	4460c <__assert_fail@plt+0x31f20>
   44604:	ldr	r3, [fp, #-8]
   44608:	b	446f8 <__assert_fail@plt+0x3200c>
   4460c:	ldr	r3, [fp, #-16]
   44610:	ldr	r2, [r3, #32]
   44614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44618:	cmp	r2, r3
   4461c:	bge	446e8 <__assert_fail@plt+0x31ffc>
   44620:	ldr	r3, [fp, #-16]
   44624:	ldr	r2, [r3, #36]	; 0x24
   44628:	ldr	r3, [fp, #-16]
   4462c:	ldr	r1, [r3, #28]
   44630:	ldr	r3, [fp, #8]
   44634:	ldr	r3, [r3, #92]	; 0x5c
   44638:	add	r3, r1, r3
   4463c:	cmp	r2, r3
   44640:	bgt	446f0 <__assert_fail@plt+0x32004>
   44644:	ldr	r3, [fp, #-16]
   44648:	ldr	r3, [r3, #36]	; 0x24
   4464c:	lsl	r3, r3, #1
   44650:	mov	r1, r3
   44654:	ldr	r0, [fp, #-16]
   44658:	bl	44704 <__assert_fail@plt+0x32018>
   4465c:	str	r0, [fp, #-8]
   44660:	ldr	r3, [fp, #-8]
   44664:	cmp	r3, #0
   44668:	movne	r3, #1
   4466c:	moveq	r3, #0
   44670:	uxtb	r3, r3
   44674:	cmp	r3, #0
   44678:	beq	445dc <__assert_fail@plt+0x31ef0>
   4467c:	ldr	r3, [fp, #-8]
   44680:	b	446f8 <__assert_fail@plt+0x3200c>
   44684:	ldr	r0, [fp, #-16]
   44688:	bl	459fc <__assert_fail@plt+0x33310>
   4468c:	b	446f4 <__assert_fail@plt+0x32008>
   44690:	ldr	r3, [fp, #8]
   44694:	ldr	r3, [r3, #92]	; 0x5c
   44698:	cmp	r3, #1
   4469c:	ble	446ac <__assert_fail@plt+0x31fc0>
   446a0:	ldr	r0, [fp, #-16]
   446a4:	bl	449b8 <__assert_fail@plt+0x322cc>
   446a8:	b	446f4 <__assert_fail@plt+0x32008>
   446ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   446b0:	cmp	r3, #0
   446b4:	beq	446c4 <__assert_fail@plt+0x31fd8>
   446b8:	ldr	r0, [fp, #-16]
   446bc:	bl	45afc <__assert_fail@plt+0x33410>
   446c0:	b	446f4 <__assert_fail@plt+0x32008>
   446c4:	ldr	r3, [fp, #-16]
   446c8:	ldr	r2, [r3, #36]	; 0x24
   446cc:	ldr	r3, [fp, #-16]
   446d0:	str	r2, [r3, #28]
   446d4:	ldr	r3, [fp, #-16]
   446d8:	ldr	r2, [r3, #36]	; 0x24
   446dc:	ldr	r3, [fp, #-16]
   446e0:	str	r2, [r3, #32]
   446e4:	b	446f4 <__assert_fail@plt+0x32008>
   446e8:	nop			; (mov r0, r0)
   446ec:	b	446f4 <__assert_fail@plt+0x32008>
   446f0:	nop			; (mov r0, r0)
   446f4:	mov	r3, #0
   446f8:	mov	r0, r3
   446fc:	sub	sp, fp, #4
   44700:	pop	{fp, pc}
   44704:	push	{fp, lr}
   44708:	add	fp, sp, #4
   4470c:	sub	sp, sp, #24
   44710:	str	r0, [fp, #-24]	; 0xffffffe8
   44714:	str	r1, [fp, #-28]	; 0xffffffe4
   44718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4471c:	ldr	r3, [r3, #80]	; 0x50
   44720:	cmp	r3, #1
   44724:	ble	44838 <__assert_fail@plt+0x3214c>
   44728:	mov	r3, #4
   4472c:	str	r3, [fp, #-8]
   44730:	ldr	r1, [fp, #-8]
   44734:	mvn	r0, #0
   44738:	bl	63574 <__assert_fail@plt+0x50e88>
   4473c:	mov	r3, r0
   44740:	cmp	r3, #0
   44744:	blt	44760 <__assert_fail@plt+0x32074>
   44748:	ldr	r1, [fp, #-8]
   4474c:	mvn	r0, #0
   44750:	bl	63574 <__assert_fail@plt+0x50e88>
   44754:	mov	r3, r0
   44758:	mov	r2, r3
   4475c:	b	44764 <__assert_fail@plt+0x32078>
   44760:	mvn	r2, #-2147483648	; 0x80000000
   44764:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44768:	cmp	r2, r3
   4476c:	movcc	r3, #1
   44770:	movcs	r3, #0
   44774:	uxtb	r3, r3
   44778:	cmp	r3, #0
   4477c:	beq	44788 <__assert_fail@plt+0x3209c>
   44780:	mov	r3, #12
   44784:	b	448a4 <__assert_fail@plt+0x321b8>
   44788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4478c:	ldr	r2, [r3, #8]
   44790:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44794:	lsl	r3, r3, #2
   44798:	mov	r1, r3
   4479c:	mov	r0, r2
   447a0:	bl	43d30 <__assert_fail@plt+0x31644>
   447a4:	str	r0, [fp, #-12]
   447a8:	ldr	r3, [fp, #-12]
   447ac:	cmp	r3, #0
   447b0:	moveq	r3, #1
   447b4:	movne	r3, #0
   447b8:	uxtb	r3, r3
   447bc:	cmp	r3, #0
   447c0:	beq	447cc <__assert_fail@plt+0x320e0>
   447c4:	mov	r3, #12
   447c8:	b	448a4 <__assert_fail@plt+0x321b8>
   447cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   447d0:	ldr	r2, [fp, #-12]
   447d4:	str	r2, [r3, #8]
   447d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   447dc:	ldr	r3, [r3, #12]
   447e0:	cmp	r3, #0
   447e4:	beq	44838 <__assert_fail@plt+0x3214c>
   447e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   447ec:	ldr	r2, [r3, #12]
   447f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   447f4:	lsl	r3, r3, #2
   447f8:	mov	r1, r3
   447fc:	mov	r0, r2
   44800:	bl	43d30 <__assert_fail@plt+0x31644>
   44804:	str	r0, [fp, #-16]
   44808:	ldr	r3, [fp, #-16]
   4480c:	cmp	r3, #0
   44810:	moveq	r3, #1
   44814:	movne	r3, #0
   44818:	uxtb	r3, r3
   4481c:	cmp	r3, #0
   44820:	beq	4482c <__assert_fail@plt+0x32140>
   44824:	mov	r3, #12
   44828:	b	448a4 <__assert_fail@plt+0x321b8>
   4482c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44830:	ldr	r2, [fp, #-16]
   44834:	str	r2, [r3, #12]
   44838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4483c:	ldrb	r3, [r3, #75]	; 0x4b
   44840:	cmp	r3, #0
   44844:	beq	44894 <__assert_fail@plt+0x321a8>
   44848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4484c:	ldr	r3, [r3, #4]
   44850:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44854:	mov	r1, r2
   44858:	mov	r0, r3
   4485c:	bl	43d30 <__assert_fail@plt+0x31644>
   44860:	str	r0, [fp, #-20]	; 0xffffffec
   44864:	ldr	r3, [fp, #-20]	; 0xffffffec
   44868:	cmp	r3, #0
   4486c:	moveq	r3, #1
   44870:	movne	r3, #0
   44874:	uxtb	r3, r3
   44878:	cmp	r3, #0
   4487c:	beq	44888 <__assert_fail@plt+0x3219c>
   44880:	mov	r3, #12
   44884:	b	448a4 <__assert_fail@plt+0x321b8>
   44888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4488c:	ldr	r2, [fp, #-20]	; 0xffffffec
   44890:	str	r2, [r3, #4]
   44894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44898:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4489c:	str	r2, [r3, #36]	; 0x24
   448a0:	mov	r3, #0
   448a4:	mov	r0, r3
   448a8:	sub	sp, fp, #4
   448ac:	pop	{fp, pc}
   448b0:	push	{fp}		; (str fp, [sp, #-4]!)
   448b4:	add	fp, sp, #0
   448b8:	sub	sp, sp, #20
   448bc:	str	r0, [fp, #-8]
   448c0:	str	r1, [fp, #-12]
   448c4:	str	r2, [fp, #-16]
   448c8:	str	r3, [fp, #-20]	; 0xffffffec
   448cc:	ldr	r3, [fp, #-16]
   448d0:	ldr	r2, [fp, #-8]
   448d4:	str	r2, [r3]
   448d8:	ldr	r3, [fp, #-16]
   448dc:	ldr	r2, [fp, #-12]
   448e0:	str	r2, [r3, #48]	; 0x30
   448e4:	ldr	r3, [fp, #-16]
   448e8:	ldr	r2, [fp, #-12]
   448ec:	str	r2, [r3, #44]	; 0x2c
   448f0:	ldr	r3, [fp, #-16]
   448f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   448f8:	str	r2, [r3, #64]	; 0x40
   448fc:	ldrb	r2, [fp, #4]
   44900:	ldr	r3, [fp, #-16]
   44904:	strb	r2, [r3, #72]	; 0x48
   44908:	ldr	r3, [fp, #-20]	; 0xffffffec
   4490c:	cmp	r3, #0
   44910:	bne	44920 <__assert_fail@plt+0x32234>
   44914:	ldrb	r3, [fp, #4]
   44918:	cmp	r3, #0
   4491c:	beq	44928 <__assert_fail@plt+0x3223c>
   44920:	mov	r3, #1
   44924:	b	4492c <__assert_fail@plt+0x32240>
   44928:	mov	r3, #0
   4492c:	uxtb	r2, r3
   44930:	ldr	r3, [fp, #-16]
   44934:	strb	r2, [r3, #75]	; 0x4b
   44938:	ldr	r3, [fp, #8]
   4493c:	ldr	r2, [r3, #92]	; 0x5c
   44940:	ldr	r3, [fp, #-16]
   44944:	str	r2, [r3, #80]	; 0x50
   44948:	ldr	r3, [fp, #8]
   4494c:	ldrb	r3, [r3, #88]	; 0x58
   44950:	lsr	r3, r3, #2
   44954:	and	r3, r3, #1
   44958:	uxtb	r3, r3
   4495c:	mov	r2, r3
   44960:	ldr	r3, [fp, #-16]
   44964:	strb	r2, [r3, #73]	; 0x49
   44968:	ldr	r3, [fp, #8]
   4496c:	ldrb	r3, [r3, #88]	; 0x58
   44970:	lsr	r3, r3, #3
   44974:	and	r3, r3, #1
   44978:	uxtb	r3, r3
   4497c:	mov	r2, r3
   44980:	ldr	r3, [fp, #-16]
   44984:	strb	r2, [r3, #74]	; 0x4a
   44988:	ldr	r3, [fp, #-16]
   4498c:	ldr	r2, [r3, #48]	; 0x30
   44990:	ldr	r3, [fp, #-16]
   44994:	str	r2, [r3, #56]	; 0x38
   44998:	ldr	r3, [fp, #-16]
   4499c:	ldr	r2, [r3, #56]	; 0x38
   449a0:	ldr	r3, [fp, #-16]
   449a4:	str	r2, [r3, #52]	; 0x34
   449a8:	nop			; (mov r0, r0)
   449ac:	add	sp, fp, #0
   449b0:	pop	{fp}		; (ldr fp, [sp], #4)
   449b4:	bx	lr
   449b8:	push	{fp, lr}
   449bc:	add	fp, sp, #4
   449c0:	sub	sp, sp, #112	; 0x70
   449c4:	str	r0, [fp, #-112]	; 0xffffff90
   449c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   449cc:	ldr	r2, [r3, #36]	; 0x24
   449d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   449d4:	ldr	r3, [r3, #48]	; 0x30
   449d8:	cmp	r2, r3
   449dc:	movlt	r3, r2
   449e0:	movge	r3, r3
   449e4:	str	r3, [fp, #-24]	; 0xffffffe8
   449e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   449ec:	ldr	r3, [r3, #28]
   449f0:	str	r3, [fp, #-8]
   449f4:	b	44cfc <__assert_fail@plt+0x32610>
   449f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   449fc:	ldr	r3, [fp, #-8]
   44a00:	sub	r3, r2, r3
   44a04:	str	r3, [fp, #-28]	; 0xffffffe4
   44a08:	ldr	r2, [fp, #-112]	; 0xffffff90
   44a0c:	sub	r3, fp, #104	; 0x68
   44a10:	add	r2, r2, #16
   44a14:	ldm	r2, {r0, r1}
   44a18:	stm	r3, {r0, r1}
   44a1c:	ldr	r3, [fp, #-112]	; 0xffffff90
   44a20:	ldr	r3, [r3, #64]	; 0x40
   44a24:	cmp	r3, #0
   44a28:	movne	r3, #1
   44a2c:	moveq	r3, #0
   44a30:	uxtb	r3, r3
   44a34:	cmp	r3, #0
   44a38:	beq	44af8 <__assert_fail@plt+0x3240c>
   44a3c:	mov	r3, #0
   44a40:	str	r3, [fp, #-20]	; 0xffffffec
   44a44:	b	44ac8 <__assert_fail@plt+0x323dc>
   44a48:	ldr	r3, [fp, #-112]	; 0xffffff90
   44a4c:	ldr	r3, [r3]
   44a50:	ldr	r2, [fp, #-112]	; 0xffffff90
   44a54:	ldr	r1, [r2, #24]
   44a58:	ldr	r2, [fp, #-8]
   44a5c:	add	r1, r1, r2
   44a60:	ldr	r2, [fp, #-20]	; 0xffffffec
   44a64:	add	r2, r1, r2
   44a68:	add	r3, r3, r2
   44a6c:	ldrb	r3, [r3]
   44a70:	str	r3, [fp, #-32]	; 0xffffffe0
   44a74:	ldr	r3, [fp, #-112]	; 0xffffff90
   44a78:	ldr	r3, [r3, #4]
   44a7c:	ldr	r1, [fp, #-8]
   44a80:	ldr	r2, [fp, #-20]	; 0xffffffec
   44a84:	add	r2, r1, r2
   44a88:	add	r3, r3, r2
   44a8c:	ldr	r2, [fp, #-112]	; 0xffffff90
   44a90:	ldr	r1, [r2, #64]	; 0x40
   44a94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   44a98:	add	r2, r1, r2
   44a9c:	ldrb	r2, [r2]
   44aa0:	strb	r2, [r3]
   44aa4:	ldrb	r1, [r3]
   44aa8:	sub	r2, fp, #96	; 0x60
   44aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   44ab0:	add	r3, r2, r3
   44ab4:	mov	r2, r1
   44ab8:	strb	r2, [r3]
   44abc:	ldr	r3, [fp, #-20]	; 0xffffffec
   44ac0:	add	r3, r3, #1
   44ac4:	str	r3, [fp, #-20]	; 0xffffffec
   44ac8:	ldr	r3, [fp, #-112]	; 0xffffff90
   44acc:	ldr	r2, [r3, #80]	; 0x50
   44ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   44ad4:	cmp	r2, r3
   44ad8:	ble	44aec <__assert_fail@plt+0x32400>
   44adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   44ae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44ae4:	cmp	r2, r3
   44ae8:	blt	44a48 <__assert_fail@plt+0x3235c>
   44aec:	sub	r3, fp, #96	; 0x60
   44af0:	str	r3, [fp, #-16]
   44af4:	b	44b1c <__assert_fail@plt+0x32430>
   44af8:	ldr	r3, [fp, #-112]	; 0xffffff90
   44afc:	ldr	r2, [r3]
   44b00:	ldr	r3, [fp, #-112]	; 0xffffff90
   44b04:	ldr	r3, [r3, #24]
   44b08:	mov	r1, r3
   44b0c:	ldr	r3, [fp, #-8]
   44b10:	add	r3, r1, r3
   44b14:	add	r3, r2, r3
   44b18:	str	r3, [fp, #-16]
   44b1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44b20:	ldr	r3, [fp, #-112]	; 0xffffff90
   44b24:	add	r3, r3, #16
   44b28:	sub	r0, fp, #108	; 0x6c
   44b2c:	ldr	r1, [fp, #-16]
   44b30:	bl	42c50 <__assert_fail@plt+0x30564>
   44b34:	str	r0, [fp, #-12]
   44b38:	ldr	r3, [fp, #-12]
   44b3c:	cmn	r3, #1
   44b40:	moveq	r3, #1
   44b44:	movne	r3, #0
   44b48:	uxtb	r3, r3
   44b4c:	cmp	r3, #0
   44b50:	bne	44b70 <__assert_fail@plt+0x32484>
   44b54:	ldr	r3, [fp, #-12]
   44b58:	cmp	r3, #0
   44b5c:	moveq	r3, #1
   44b60:	movne	r3, #0
   44b64:	uxtb	r3, r3
   44b68:	cmp	r3, #0
   44b6c:	beq	44b78 <__assert_fail@plt+0x3248c>
   44b70:	mov	r3, #1
   44b74:	b	44b7c <__assert_fail@plt+0x32490>
   44b78:	mov	r3, #0
   44b7c:	cmp	r3, #0
   44b80:	bne	44bdc <__assert_fail@plt+0x324f0>
   44b84:	ldr	r3, [fp, #-12]
   44b88:	cmn	r3, #2
   44b8c:	moveq	r3, #1
   44b90:	movne	r3, #0
   44b94:	uxtb	r3, r3
   44b98:	cmp	r3, #0
   44b9c:	beq	44bd0 <__assert_fail@plt+0x324e4>
   44ba0:	ldr	r3, [fp, #-112]	; 0xffffff90
   44ba4:	ldr	r2, [r3, #36]	; 0x24
   44ba8:	ldr	r3, [fp, #-112]	; 0xffffff90
   44bac:	ldr	r3, [r3, #48]	; 0x30
   44bb0:	cmp	r2, r3
   44bb4:	movge	r3, #1
   44bb8:	movlt	r3, #0
   44bbc:	uxtb	r3, r3
   44bc0:	cmp	r3, #0
   44bc4:	beq	44bd0 <__assert_fail@plt+0x324e4>
   44bc8:	mov	r3, #1
   44bcc:	b	44bd4 <__assert_fail@plt+0x324e8>
   44bd0:	mov	r3, #0
   44bd4:	cmp	r3, #0
   44bd8:	beq	44c58 <__assert_fail@plt+0x3256c>
   44bdc:	mov	r3, #1
   44be0:	str	r3, [fp, #-12]
   44be4:	ldr	r3, [fp, #-112]	; 0xffffff90
   44be8:	ldr	r3, [r3]
   44bec:	ldr	r2, [fp, #-112]	; 0xffffff90
   44bf0:	ldr	r1, [r2, #24]
   44bf4:	ldr	r2, [fp, #-8]
   44bf8:	add	r2, r1, r2
   44bfc:	add	r3, r3, r2
   44c00:	ldrb	r3, [r3]
   44c04:	str	r3, [fp, #-108]	; 0xffffff94
   44c08:	ldr	r3, [fp, #-112]	; 0xffffff90
   44c0c:	ldr	r3, [r3, #64]	; 0x40
   44c10:	cmp	r3, #0
   44c14:	movne	r3, #1
   44c18:	moveq	r3, #0
   44c1c:	uxtb	r3, r3
   44c20:	cmp	r3, #0
   44c24:	beq	44c40 <__assert_fail@plt+0x32554>
   44c28:	ldr	r3, [fp, #-112]	; 0xffffff90
   44c2c:	ldr	r2, [r3, #64]	; 0x40
   44c30:	ldr	r3, [fp, #-108]	; 0xffffff94
   44c34:	add	r3, r2, r3
   44c38:	ldrb	r3, [r3]
   44c3c:	str	r3, [fp, #-108]	; 0xffffff94
   44c40:	ldr	r3, [fp, #-112]	; 0xffffff90
   44c44:	add	r3, r3, #16
   44c48:	sub	r2, fp, #104	; 0x68
   44c4c:	ldm	r2, {r0, r1}
   44c50:	stm	r3, {r0, r1}
   44c54:	b	44c8c <__assert_fail@plt+0x325a0>
   44c58:	ldr	r3, [fp, #-12]
   44c5c:	cmn	r3, #2
   44c60:	moveq	r3, #1
   44c64:	movne	r3, #0
   44c68:	uxtb	r3, r3
   44c6c:	cmp	r3, #0
   44c70:	beq	44c8c <__assert_fail@plt+0x325a0>
   44c74:	ldr	r3, [fp, #-112]	; 0xffffff90
   44c78:	add	r3, r3, #16
   44c7c:	sub	r2, fp, #104	; 0x68
   44c80:	ldm	r2, {r0, r1}
   44c84:	stm	r3, {r0, r1}
   44c88:	b	44d0c <__assert_fail@plt+0x32620>
   44c8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   44c90:	ldr	r2, [r3, #8]
   44c94:	ldr	r3, [fp, #-8]
   44c98:	add	r1, r3, #1
   44c9c:	str	r1, [fp, #-8]
   44ca0:	lsl	r3, r3, #2
   44ca4:	add	r3, r2, r3
   44ca8:	ldr	r2, [fp, #-108]	; 0xffffff94
   44cac:	str	r2, [r3]
   44cb0:	ldr	r2, [fp, #-8]
   44cb4:	ldr	r3, [fp, #-12]
   44cb8:	add	r3, r2, r3
   44cbc:	sub	r3, r3, #1
   44cc0:	str	r3, [fp, #-28]	; 0xffffffe4
   44cc4:	b	44cec <__assert_fail@plt+0x32600>
   44cc8:	ldr	r3, [fp, #-112]	; 0xffffff90
   44ccc:	ldr	r2, [r3, #8]
   44cd0:	ldr	r3, [fp, #-8]
   44cd4:	add	r1, r3, #1
   44cd8:	str	r1, [fp, #-8]
   44cdc:	lsl	r3, r3, #2
   44ce0:	add	r3, r2, r3
   44ce4:	mvn	r2, #0
   44ce8:	str	r2, [r3]
   44cec:	ldr	r2, [fp, #-8]
   44cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44cf4:	cmp	r2, r3
   44cf8:	blt	44cc8 <__assert_fail@plt+0x325dc>
   44cfc:	ldr	r2, [fp, #-8]
   44d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44d04:	cmp	r2, r3
   44d08:	blt	449f8 <__assert_fail@plt+0x3230c>
   44d0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   44d10:	ldr	r2, [fp, #-8]
   44d14:	str	r2, [r3, #28]
   44d18:	ldr	r3, [fp, #-112]	; 0xffffff90
   44d1c:	ldr	r2, [fp, #-8]
   44d20:	str	r2, [r3, #32]
   44d24:	nop			; (mov r0, r0)
   44d28:	sub	sp, fp, #4
   44d2c:	pop	{fp, pc}
   44d30:	push	{fp, lr}
   44d34:	add	fp, sp, #4
   44d38:	sub	sp, sp, #160	; 0xa0
   44d3c:	str	r0, [fp, #-160]	; 0xffffff60
   44d40:	ldr	r3, [fp, #-160]	; 0xffffff60
   44d44:	ldr	r3, [r3, #28]
   44d48:	str	r3, [fp, #-12]
   44d4c:	ldr	r3, [fp, #-160]	; 0xffffff60
   44d50:	ldr	r2, [r3, #36]	; 0x24
   44d54:	ldr	r3, [fp, #-160]	; 0xffffff60
   44d58:	ldr	r3, [r3, #48]	; 0x30
   44d5c:	cmp	r2, r3
   44d60:	movlt	r3, r2
   44d64:	movge	r3, r3
   44d68:	str	r3, [fp, #-16]
   44d6c:	ldr	r3, [fp, #-160]	; 0xffffff60
   44d70:	ldrb	r3, [r3, #74]	; 0x4a
   44d74:	cmp	r3, #0
   44d78:	bne	4511c <__assert_fail@plt+0x32a30>
   44d7c:	ldr	r3, [fp, #-160]	; 0xffffff60
   44d80:	ldr	r3, [r3, #64]	; 0x40
   44d84:	cmp	r3, #0
   44d88:	bne	4511c <__assert_fail@plt+0x32a30>
   44d8c:	ldr	r3, [fp, #-160]	; 0xffffff60
   44d90:	ldrb	r3, [r3, #76]	; 0x4c
   44d94:	cmp	r3, #0
   44d98:	bne	4511c <__assert_fail@plt+0x32a30>
   44d9c:	b	450ec <__assert_fail@plt+0x32a00>
   44da0:	ldr	r3, [fp, #-160]	; 0xffffff60
   44da4:	ldr	r3, [r3]
   44da8:	ldr	r2, [fp, #-160]	; 0xffffff60
   44dac:	ldr	r1, [r2, #24]
   44db0:	ldr	r2, [fp, #-12]
   44db4:	add	r2, r1, r2
   44db8:	add	r3, r3, r2
   44dbc:	ldrb	r3, [r3]
   44dc0:	strb	r3, [fp, #-37]	; 0xffffffdb
   44dc4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   44dc8:	bic	r3, r3, #127	; 0x7f
   44dcc:	cmp	r3, #0
   44dd0:	bne	44e58 <__assert_fail@plt+0x3276c>
   44dd4:	ldr	r3, [fp, #-160]	; 0xffffff60
   44dd8:	add	r3, r3, #16
   44ddc:	mov	r0, r3
   44de0:	bl	12134 <mbsinit@plt>
   44de4:	mov	r3, r0
   44de8:	cmp	r3, #0
   44dec:	beq	44e58 <__assert_fail@plt+0x3276c>
   44df0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   44df4:	mov	r0, r3
   44df8:	bl	12674 <towupper@plt>
   44dfc:	str	r0, [fp, #-44]	; 0xffffffd4
   44e00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   44e04:	bic	r3, r3, #127	; 0x7f
   44e08:	cmp	r3, #0
   44e0c:	bne	44e58 <__assert_fail@plt+0x3276c>
   44e10:	ldr	r3, [fp, #-160]	; 0xffffff60
   44e14:	ldr	r2, [r3, #4]
   44e18:	ldr	r3, [fp, #-12]
   44e1c:	add	r3, r2, r3
   44e20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   44e24:	uxtb	r2, r2
   44e28:	strb	r2, [r3]
   44e2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   44e30:	ldr	r2, [r3, #8]
   44e34:	ldr	r3, [fp, #-12]
   44e38:	lsl	r3, r3, #2
   44e3c:	add	r3, r2, r3
   44e40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   44e44:	str	r2, [r3]
   44e48:	ldr	r3, [fp, #-12]
   44e4c:	add	r3, r3, #1
   44e50:	str	r3, [fp, #-12]
   44e54:	b	450ec <__assert_fail@plt+0x32a00>
   44e58:	ldr	r2, [fp, #-16]
   44e5c:	ldr	r3, [fp, #-12]
   44e60:	sub	r3, r2, r3
   44e64:	str	r3, [fp, #-48]	; 0xffffffd0
   44e68:	ldr	r2, [fp, #-160]	; 0xffffff60
   44e6c:	sub	r3, fp, #80	; 0x50
   44e70:	add	r2, r2, #16
   44e74:	ldm	r2, {r0, r1}
   44e78:	stm	r3, {r0, r1}
   44e7c:	ldr	r3, [fp, #-160]	; 0xffffff60
   44e80:	ldr	r2, [r3]
   44e84:	ldr	r3, [fp, #-160]	; 0xffffff60
   44e88:	ldr	r3, [r3, #24]
   44e8c:	mov	r1, r3
   44e90:	ldr	r3, [fp, #-12]
   44e94:	add	r3, r1, r3
   44e98:	add	r1, r2, r3
   44e9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   44ea0:	ldr	r3, [fp, #-160]	; 0xffffff60
   44ea4:	add	r3, r3, #16
   44ea8:	sub	r0, fp, #148	; 0x94
   44eac:	bl	42c50 <__assert_fail@plt+0x30564>
   44eb0:	str	r0, [fp, #-52]	; 0xffffffcc
   44eb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44eb8:	cmp	r3, #0
   44ebc:	movne	r3, #1
   44ec0:	moveq	r3, #0
   44ec4:	uxtb	r3, r3
   44ec8:	cmp	r3, #0
   44ecc:	beq	45028 <__assert_fail@plt+0x3293c>
   44ed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44ed4:	cmn	r3, #3
   44ed8:	movls	r3, #1
   44edc:	movhi	r3, #0
   44ee0:	uxtb	r3, r3
   44ee4:	cmp	r3, #0
   44ee8:	beq	45028 <__assert_fail@plt+0x3293c>
   44eec:	ldr	r3, [fp, #-148]	; 0xffffff6c
   44ef0:	mov	r0, r3
   44ef4:	bl	12674 <towupper@plt>
   44ef8:	str	r0, [fp, #-56]	; 0xffffffc8
   44efc:	ldr	r3, [fp, #-148]	; 0xffffff6c
   44f00:	ldr	r2, [fp, #-56]	; 0xffffffc8
   44f04:	cmp	r2, r3
   44f08:	beq	44f78 <__assert_fail@plt+0x3288c>
   44f0c:	sub	r2, fp, #80	; 0x50
   44f10:	sub	r3, fp, #144	; 0x90
   44f14:	ldr	r1, [fp, #-56]	; 0xffffffc8
   44f18:	mov	r0, r3
   44f1c:	bl	11fc0 <wcrtomb@plt>
   44f20:	str	r0, [fp, #-60]	; 0xffffffc4
   44f24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   44f28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   44f2c:	cmp	r2, r3
   44f30:	moveq	r3, #1
   44f34:	movne	r3, #0
   44f38:	uxtb	r3, r3
   44f3c:	cmp	r3, #0
   44f40:	beq	44f68 <__assert_fail@plt+0x3287c>
   44f44:	ldr	r3, [fp, #-160]	; 0xffffff60
   44f48:	ldr	r2, [r3, #4]
   44f4c:	ldr	r3, [fp, #-12]
   44f50:	add	r3, r2, r3
   44f54:	sub	r1, fp, #144	; 0x90
   44f58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   44f5c:	mov	r0, r3
   44f60:	bl	120f8 <memcpy@plt>
   44f64:	b	44fb4 <__assert_fail@plt+0x328c8>
   44f68:	ldr	r3, [fp, #-12]
   44f6c:	str	r3, [fp, #-8]
   44f70:	nop			; (mov r0, r0)
   44f74:	b	4512c <__assert_fail@plt+0x32a40>
   44f78:	ldr	r3, [fp, #-160]	; 0xffffff60
   44f7c:	ldr	r2, [r3, #4]
   44f80:	ldr	r3, [fp, #-12]
   44f84:	add	r0, r2, r3
   44f88:	ldr	r3, [fp, #-160]	; 0xffffff60
   44f8c:	ldr	r2, [r3]
   44f90:	ldr	r3, [fp, #-160]	; 0xffffff60
   44f94:	ldr	r3, [r3, #24]
   44f98:	mov	r1, r3
   44f9c:	ldr	r3, [fp, #-12]
   44fa0:	add	r3, r1, r3
   44fa4:	add	r3, r2, r3
   44fa8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   44fac:	mov	r1, r3
   44fb0:	bl	120f8 <memcpy@plt>
   44fb4:	ldr	r3, [fp, #-160]	; 0xffffff60
   44fb8:	ldr	r2, [r3, #8]
   44fbc:	ldr	r3, [fp, #-12]
   44fc0:	add	r1, r3, #1
   44fc4:	str	r1, [fp, #-12]
   44fc8:	lsl	r3, r3, #2
   44fcc:	add	r3, r2, r3
   44fd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   44fd4:	str	r2, [r3]
   44fd8:	ldr	r2, [fp, #-12]
   44fdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44fe0:	add	r3, r2, r3
   44fe4:	sub	r3, r3, #1
   44fe8:	str	r3, [fp, #-48]	; 0xffffffd0
   44fec:	b	45014 <__assert_fail@plt+0x32928>
   44ff0:	ldr	r3, [fp, #-160]	; 0xffffff60
   44ff4:	ldr	r2, [r3, #8]
   44ff8:	ldr	r3, [fp, #-12]
   44ffc:	add	r1, r3, #1
   45000:	str	r1, [fp, #-12]
   45004:	lsl	r3, r3, #2
   45008:	add	r3, r2, r3
   4500c:	mvn	r2, #0
   45010:	str	r2, [r3]
   45014:	ldr	r2, [fp, #-12]
   45018:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4501c:	cmp	r2, r3
   45020:	blt	44ff0 <__assert_fail@plt+0x32904>
   45024:	b	450ec <__assert_fail@plt+0x32a00>
   45028:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4502c:	cmn	r3, #1
   45030:	beq	45064 <__assert_fail@plt+0x32978>
   45034:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45038:	cmp	r3, #0
   4503c:	beq	45064 <__assert_fail@plt+0x32978>
   45040:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45044:	cmn	r3, #2
   45048:	bne	450d4 <__assert_fail@plt+0x329e8>
   4504c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45050:	ldr	r2, [r3, #36]	; 0x24
   45054:	ldr	r3, [fp, #-160]	; 0xffffff60
   45058:	ldr	r3, [r3, #48]	; 0x30
   4505c:	cmp	r2, r3
   45060:	blt	450d4 <__assert_fail@plt+0x329e8>
   45064:	ldr	r3, [fp, #-160]	; 0xffffff60
   45068:	ldr	r2, [r3, #4]
   4506c:	ldr	r3, [fp, #-12]
   45070:	add	r3, r2, r3
   45074:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   45078:	strb	r2, [r3]
   4507c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45080:	ldr	r2, [r3, #8]
   45084:	ldr	r3, [fp, #-12]
   45088:	add	r1, r3, #1
   4508c:	str	r1, [fp, #-12]
   45090:	lsl	r3, r3, #2
   45094:	add	r3, r2, r3
   45098:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   4509c:	str	r2, [r3]
   450a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   450a4:	cmn	r3, #1
   450a8:	moveq	r3, #1
   450ac:	movne	r3, #0
   450b0:	uxtb	r3, r3
   450b4:	cmp	r3, #0
   450b8:	beq	450ec <__assert_fail@plt+0x32a00>
   450bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   450c0:	add	r3, r3, #16
   450c4:	sub	r2, fp, #80	; 0x50
   450c8:	ldm	r2, {r0, r1}
   450cc:	stm	r3, {r0, r1}
   450d0:	b	450ec <__assert_fail@plt+0x32a00>
   450d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   450d8:	add	r3, r3, #16
   450dc:	sub	r2, fp, #80	; 0x50
   450e0:	ldm	r2, {r0, r1}
   450e4:	stm	r3, {r0, r1}
   450e8:	b	450fc <__assert_fail@plt+0x32a10>
   450ec:	ldr	r2, [fp, #-12]
   450f0:	ldr	r3, [fp, #-16]
   450f4:	cmp	r2, r3
   450f8:	blt	44da0 <__assert_fail@plt+0x326b4>
   450fc:	ldr	r3, [fp, #-160]	; 0xffffff60
   45100:	ldr	r2, [fp, #-12]
   45104:	str	r2, [r3, #28]
   45108:	ldr	r3, [fp, #-160]	; 0xffffff60
   4510c:	ldr	r2, [fp, #-12]
   45110:	str	r2, [r3, #32]
   45114:	mov	r3, #0
   45118:	b	4585c <__assert_fail@plt+0x33170>
   4511c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45120:	ldr	r3, [r3, #32]
   45124:	str	r3, [fp, #-8]
   45128:	b	45830 <__assert_fail@plt+0x33144>
   4512c:	ldr	r2, [fp, #-16]
   45130:	ldr	r3, [fp, #-12]
   45134:	sub	r3, r2, r3
   45138:	str	r3, [fp, #-48]	; 0xffffffd0
   4513c:	ldr	r2, [fp, #-160]	; 0xffffff60
   45140:	sub	r3, fp, #80	; 0x50
   45144:	add	r2, r2, #16
   45148:	ldm	r2, {r0, r1}
   4514c:	stm	r3, {r0, r1}
   45150:	ldr	r3, [fp, #-160]	; 0xffffff60
   45154:	ldr	r3, [r3, #64]	; 0x40
   45158:	cmp	r3, #0
   4515c:	movne	r3, #1
   45160:	moveq	r3, #0
   45164:	uxtb	r3, r3
   45168:	cmp	r3, #0
   4516c:	beq	4520c <__assert_fail@plt+0x32b20>
   45170:	mov	r3, #0
   45174:	str	r3, [fp, #-24]	; 0xffffffe8
   45178:	b	451dc <__assert_fail@plt+0x32af0>
   4517c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45180:	ldr	r3, [r3]
   45184:	ldr	r2, [fp, #-160]	; 0xffffff60
   45188:	ldr	r1, [r2, #24]
   4518c:	ldr	r2, [fp, #-8]
   45190:	add	r1, r1, r2
   45194:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45198:	add	r2, r1, r2
   4519c:	add	r3, r3, r2
   451a0:	ldrb	r3, [r3]
   451a4:	str	r3, [fp, #-64]	; 0xffffffc0
   451a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   451ac:	ldr	r2, [r3, #64]	; 0x40
   451b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   451b4:	add	r3, r2, r3
   451b8:	ldrb	r1, [r3]
   451bc:	sub	r2, fp, #144	; 0x90
   451c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   451c4:	add	r3, r2, r3
   451c8:	mov	r2, r1
   451cc:	strb	r2, [r3]
   451d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   451d4:	add	r3, r3, #1
   451d8:	str	r3, [fp, #-24]	; 0xffffffe8
   451dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   451e0:	ldr	r2, [r3, #80]	; 0x50
   451e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   451e8:	cmp	r2, r3
   451ec:	ble	45200 <__assert_fail@plt+0x32b14>
   451f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   451f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   451f8:	cmp	r2, r3
   451fc:	blt	4517c <__assert_fail@plt+0x32a90>
   45200:	sub	r3, fp, #144	; 0x90
   45204:	str	r3, [fp, #-20]	; 0xffffffec
   45208:	b	45230 <__assert_fail@plt+0x32b44>
   4520c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45210:	ldr	r2, [r3]
   45214:	ldr	r3, [fp, #-160]	; 0xffffff60
   45218:	ldr	r3, [r3, #24]
   4521c:	mov	r1, r3
   45220:	ldr	r3, [fp, #-8]
   45224:	add	r3, r1, r3
   45228:	add	r3, r2, r3
   4522c:	str	r3, [fp, #-20]	; 0xffffffec
   45230:	ldr	r2, [fp, #-48]	; 0xffffffd0
   45234:	ldr	r3, [fp, #-160]	; 0xffffff60
   45238:	add	r3, r3, #16
   4523c:	sub	r0, fp, #152	; 0x98
   45240:	ldr	r1, [fp, #-20]	; 0xffffffec
   45244:	bl	42c50 <__assert_fail@plt+0x30564>
   45248:	str	r0, [fp, #-52]	; 0xffffffcc
   4524c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45250:	cmp	r3, #0
   45254:	movne	r3, #1
   45258:	moveq	r3, #0
   4525c:	uxtb	r3, r3
   45260:	cmp	r3, #0
   45264:	beq	456bc <__assert_fail@plt+0x32fd0>
   45268:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4526c:	cmn	r3, #3
   45270:	movls	r3, #1
   45274:	movhi	r3, #0
   45278:	uxtb	r3, r3
   4527c:	cmp	r3, #0
   45280:	beq	456bc <__assert_fail@plt+0x32fd0>
   45284:	ldr	r3, [fp, #-152]	; 0xffffff68
   45288:	mov	r0, r3
   4528c:	bl	12674 <towupper@plt>
   45290:	str	r0, [fp, #-68]	; 0xffffffbc
   45294:	ldr	r3, [fp, #-152]	; 0xffffff68
   45298:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4529c:	cmp	r2, r3
   452a0:	beq	455a4 <__assert_fail@plt+0x32eb8>
   452a4:	sub	r2, fp, #80	; 0x50
   452a8:	sub	r3, fp, #144	; 0x90
   452ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   452b0:	mov	r0, r3
   452b4:	bl	11fc0 <wcrtomb@plt>
   452b8:	str	r0, [fp, #-72]	; 0xffffffb8
   452bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   452c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   452c4:	cmp	r2, r3
   452c8:	moveq	r3, #1
   452cc:	movne	r3, #0
   452d0:	uxtb	r3, r3
   452d4:	cmp	r3, #0
   452d8:	beq	45300 <__assert_fail@plt+0x32c14>
   452dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   452e0:	ldr	r2, [r3, #4]
   452e4:	ldr	r3, [fp, #-12]
   452e8:	add	r3, r2, r3
   452ec:	sub	r1, fp, #144	; 0x90
   452f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   452f4:	mov	r0, r3
   452f8:	bl	120f8 <memcpy@plt>
   452fc:	b	455c4 <__assert_fail@plt+0x32ed8>
   45300:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45304:	cmn	r3, #1
   45308:	beq	45580 <__assert_fail@plt+0x32e94>
   4530c:	ldr	r2, [fp, #-12]
   45310:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45314:	add	r3, r2, r3
   45318:	ldr	r2, [fp, #-160]	; 0xffffff60
   4531c:	ldr	r2, [r2, #36]	; 0x24
   45320:	cmp	r3, r2
   45324:	bls	45340 <__assert_fail@plt+0x32c54>
   45328:	ldr	r3, [fp, #-160]	; 0xffffff60
   4532c:	add	r3, r3, #16
   45330:	sub	r2, fp, #80	; 0x50
   45334:	ldm	r2, {r0, r1}
   45338:	stm	r3, {r0, r1}
   4533c:	b	45840 <__assert_fail@plt+0x33154>
   45340:	ldr	r3, [fp, #-160]	; 0xffffff60
   45344:	ldr	r3, [r3, #12]
   45348:	cmp	r3, #0
   4534c:	bne	4538c <__assert_fail@plt+0x32ca0>
   45350:	ldr	r3, [fp, #-160]	; 0xffffff60
   45354:	ldr	r3, [r3, #36]	; 0x24
   45358:	lsl	r3, r3, #2
   4535c:	mov	r0, r3
   45360:	bl	42ba8 <__assert_fail@plt+0x304bc>
   45364:	mov	r3, r0
   45368:	mov	r2, r3
   4536c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45370:	str	r2, [r3, #12]
   45374:	ldr	r3, [fp, #-160]	; 0xffffff60
   45378:	ldr	r3, [r3, #12]
   4537c:	cmp	r3, #0
   45380:	bne	4538c <__assert_fail@plt+0x32ca0>
   45384:	mov	r3, #12
   45388:	b	4585c <__assert_fail@plt+0x33170>
   4538c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45390:	ldrb	r3, [r3, #76]	; 0x4c
   45394:	cmp	r3, #0
   45398:	bne	453ec <__assert_fail@plt+0x32d00>
   4539c:	mov	r3, #0
   453a0:	str	r3, [fp, #-28]	; 0xffffffe4
   453a4:	b	453d0 <__assert_fail@plt+0x32ce4>
   453a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   453ac:	ldr	r2, [r3, #12]
   453b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   453b4:	lsl	r3, r3, #2
   453b8:	add	r3, r2, r3
   453bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   453c0:	str	r2, [r3]
   453c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   453c8:	add	r3, r3, #1
   453cc:	str	r3, [fp, #-28]	; 0xffffffe4
   453d0:	ldr	r3, [fp, #-12]
   453d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   453d8:	cmp	r2, r3
   453dc:	bcc	453a8 <__assert_fail@plt+0x32cbc>
   453e0:	ldr	r3, [fp, #-160]	; 0xffffff60
   453e4:	mov	r2, #1
   453e8:	strb	r2, [r3, #76]	; 0x4c
   453ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   453f0:	ldr	r2, [r3, #4]
   453f4:	ldr	r3, [fp, #-12]
   453f8:	add	r3, r2, r3
   453fc:	sub	r1, fp, #144	; 0x90
   45400:	ldr	r2, [fp, #-72]	; 0xffffffb8
   45404:	mov	r0, r3
   45408:	bl	120f8 <memcpy@plt>
   4540c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45410:	ldr	r2, [r3, #8]
   45414:	ldr	r3, [fp, #-12]
   45418:	lsl	r3, r3, #2
   4541c:	add	r3, r2, r3
   45420:	ldr	r2, [fp, #-68]	; 0xffffffbc
   45424:	str	r2, [r3]
   45428:	ldr	r3, [fp, #-160]	; 0xffffff60
   4542c:	ldr	r2, [r3, #12]
   45430:	ldr	r3, [fp, #-12]
   45434:	lsl	r3, r3, #2
   45438:	add	r3, r2, r3
   4543c:	ldr	r2, [fp, #-8]
   45440:	str	r2, [r3]
   45444:	mov	r3, #1
   45448:	str	r3, [fp, #-28]	; 0xffffffe4
   4544c:	b	454c8 <__assert_fail@plt+0x32ddc>
   45450:	ldr	r3, [fp, #-160]	; 0xffffff60
   45454:	ldr	r2, [r3, #12]
   45458:	ldr	r1, [fp, #-12]
   4545c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45460:	add	r3, r1, r3
   45464:	lsl	r3, r3, #2
   45468:	add	r2, r2, r3
   4546c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45470:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45474:	cmp	r1, r3
   45478:	bcc	45488 <__assert_fail@plt+0x32d9c>
   4547c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45480:	sub	r3, r3, #1
   45484:	b	4548c <__assert_fail@plt+0x32da0>
   45488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4548c:	ldr	r1, [fp, #-8]
   45490:	add	r3, r3, r1
   45494:	str	r3, [r2]
   45498:	ldr	r3, [fp, #-160]	; 0xffffff60
   4549c:	ldr	r2, [r3, #8]
   454a0:	ldr	r1, [fp, #-12]
   454a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   454a8:	add	r3, r1, r3
   454ac:	lsl	r3, r3, #2
   454b0:	add	r3, r2, r3
   454b4:	mvn	r2, #0
   454b8:	str	r2, [r3]
   454bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   454c0:	add	r3, r3, #1
   454c4:	str	r3, [fp, #-28]	; 0xffffffe4
   454c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   454cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   454d0:	cmp	r2, r3
   454d4:	bcc	45450 <__assert_fail@plt+0x32d64>
   454d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   454dc:	ldr	r3, [r3, #48]	; 0x30
   454e0:	mov	r1, r3
   454e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   454e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   454ec:	sub	r3, r2, r3
   454f0:	add	r3, r1, r3
   454f4:	mov	r2, r3
   454f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   454fc:	str	r2, [r3, #48]	; 0x30
   45500:	ldr	r3, [fp, #-160]	; 0xffffff60
   45504:	ldr	r2, [r3, #52]	; 0x34
   45508:	ldr	r3, [fp, #-8]
   4550c:	cmp	r2, r3
   45510:	ble	4553c <__assert_fail@plt+0x32e50>
   45514:	ldr	r3, [fp, #-160]	; 0xffffff60
   45518:	ldr	r3, [r3, #56]	; 0x38
   4551c:	mov	r1, r3
   45520:	ldr	r2, [fp, #-72]	; 0xffffffb8
   45524:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45528:	sub	r3, r2, r3
   4552c:	add	r3, r1, r3
   45530:	mov	r2, r3
   45534:	ldr	r3, [fp, #-160]	; 0xffffff60
   45538:	str	r2, [r3, #56]	; 0x38
   4553c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45540:	ldr	r2, [r3, #36]	; 0x24
   45544:	ldr	r3, [fp, #-160]	; 0xffffff60
   45548:	ldr	r3, [r3, #48]	; 0x30
   4554c:	cmp	r2, r3
   45550:	movlt	r3, r2
   45554:	movge	r3, r3
   45558:	str	r3, [fp, #-16]
   4555c:	ldr	r2, [fp, #-12]
   45560:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45564:	add	r3, r2, r3
   45568:	str	r3, [fp, #-12]
   4556c:	ldr	r2, [fp, #-8]
   45570:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45574:	add	r3, r2, r3
   45578:	str	r3, [fp, #-8]
   4557c:	b	45830 <__assert_fail@plt+0x33144>
   45580:	ldr	r3, [fp, #-160]	; 0xffffff60
   45584:	ldr	r2, [r3, #4]
   45588:	ldr	r3, [fp, #-12]
   4558c:	add	r3, r2, r3
   45590:	ldr	r2, [fp, #-52]	; 0xffffffcc
   45594:	ldr	r1, [fp, #-20]	; 0xffffffec
   45598:	mov	r0, r3
   4559c:	bl	120f8 <memcpy@plt>
   455a0:	b	455c4 <__assert_fail@plt+0x32ed8>
   455a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   455a8:	ldr	r2, [r3, #4]
   455ac:	ldr	r3, [fp, #-12]
   455b0:	add	r3, r2, r3
   455b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   455b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   455bc:	mov	r0, r3
   455c0:	bl	120f8 <memcpy@plt>
   455c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   455c8:	ldrb	r3, [r3, #76]	; 0x4c
   455cc:	cmp	r3, #0
   455d0:	movne	r3, #1
   455d4:	moveq	r3, #0
   455d8:	uxtb	r3, r3
   455dc:	cmp	r3, #0
   455e0:	beq	45638 <__assert_fail@plt+0x32f4c>
   455e4:	mov	r3, #0
   455e8:	str	r3, [fp, #-32]	; 0xffffffe0
   455ec:	b	45628 <__assert_fail@plt+0x32f3c>
   455f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   455f4:	ldr	r2, [r3, #12]
   455f8:	ldr	r1, [fp, #-12]
   455fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45600:	add	r3, r1, r3
   45604:	lsl	r3, r3, #2
   45608:	add	r3, r2, r3
   4560c:	ldr	r1, [fp, #-8]
   45610:	ldr	r2, [fp, #-32]	; 0xffffffe0
   45614:	add	r2, r1, r2
   45618:	str	r2, [r3]
   4561c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45620:	add	r3, r3, #1
   45624:	str	r3, [fp, #-32]	; 0xffffffe0
   45628:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4562c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45630:	cmp	r2, r3
   45634:	bcc	455f0 <__assert_fail@plt+0x32f04>
   45638:	ldr	r2, [fp, #-8]
   4563c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45640:	add	r3, r2, r3
   45644:	str	r3, [fp, #-8]
   45648:	ldr	r3, [fp, #-160]	; 0xffffff60
   4564c:	ldr	r2, [r3, #8]
   45650:	ldr	r3, [fp, #-12]
   45654:	add	r1, r3, #1
   45658:	str	r1, [fp, #-12]
   4565c:	lsl	r3, r3, #2
   45660:	add	r3, r2, r3
   45664:	ldr	r2, [fp, #-68]	; 0xffffffbc
   45668:	str	r2, [r3]
   4566c:	ldr	r2, [fp, #-12]
   45670:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45674:	add	r3, r2, r3
   45678:	sub	r3, r3, #1
   4567c:	str	r3, [fp, #-48]	; 0xffffffd0
   45680:	b	456a8 <__assert_fail@plt+0x32fbc>
   45684:	ldr	r3, [fp, #-160]	; 0xffffff60
   45688:	ldr	r2, [r3, #8]
   4568c:	ldr	r3, [fp, #-12]
   45690:	add	r1, r3, #1
   45694:	str	r1, [fp, #-12]
   45698:	lsl	r3, r3, #2
   4569c:	add	r3, r2, r3
   456a0:	mvn	r2, #0
   456a4:	str	r2, [r3]
   456a8:	ldr	r2, [fp, #-12]
   456ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   456b0:	cmp	r2, r3
   456b4:	blt	45684 <__assert_fail@plt+0x32f98>
   456b8:	b	45830 <__assert_fail@plt+0x33144>
   456bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   456c0:	cmn	r3, #1
   456c4:	beq	456f8 <__assert_fail@plt+0x3300c>
   456c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   456cc:	cmp	r3, #0
   456d0:	beq	456f8 <__assert_fail@plt+0x3300c>
   456d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   456d8:	cmn	r3, #2
   456dc:	bne	45810 <__assert_fail@plt+0x33124>
   456e0:	ldr	r3, [fp, #-160]	; 0xffffff60
   456e4:	ldr	r2, [r3, #36]	; 0x24
   456e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   456ec:	ldr	r3, [r3, #48]	; 0x30
   456f0:	cmp	r2, r3
   456f4:	blt	45810 <__assert_fail@plt+0x33124>
   456f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   456fc:	ldr	r3, [r3]
   45700:	ldr	r2, [fp, #-160]	; 0xffffff60
   45704:	ldr	r1, [r2, #24]
   45708:	ldr	r2, [fp, #-8]
   4570c:	add	r2, r1, r2
   45710:	add	r3, r3, r2
   45714:	ldrb	r3, [r3]
   45718:	str	r3, [fp, #-36]	; 0xffffffdc
   4571c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45720:	ldr	r3, [r3, #64]	; 0x40
   45724:	cmp	r3, #0
   45728:	movne	r3, #1
   4572c:	moveq	r3, #0
   45730:	uxtb	r3, r3
   45734:	cmp	r3, #0
   45738:	beq	45754 <__assert_fail@plt+0x33068>
   4573c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45740:	ldr	r2, [r3, #64]	; 0x40
   45744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   45748:	add	r3, r2, r3
   4574c:	ldrb	r3, [r3]
   45750:	str	r3, [fp, #-36]	; 0xffffffdc
   45754:	ldr	r3, [fp, #-160]	; 0xffffff60
   45758:	ldr	r2, [r3, #4]
   4575c:	ldr	r3, [fp, #-12]
   45760:	add	r3, r2, r3
   45764:	ldr	r2, [fp, #-36]	; 0xffffffdc
   45768:	uxtb	r2, r2
   4576c:	strb	r2, [r3]
   45770:	ldr	r3, [fp, #-160]	; 0xffffff60
   45774:	ldrb	r3, [r3, #76]	; 0x4c
   45778:	cmp	r3, #0
   4577c:	movne	r3, #1
   45780:	moveq	r3, #0
   45784:	uxtb	r3, r3
   45788:	cmp	r3, #0
   4578c:	beq	457ac <__assert_fail@plt+0x330c0>
   45790:	ldr	r3, [fp, #-160]	; 0xffffff60
   45794:	ldr	r2, [r3, #12]
   45798:	ldr	r3, [fp, #-12]
   4579c:	lsl	r3, r3, #2
   457a0:	add	r3, r2, r3
   457a4:	ldr	r2, [fp, #-8]
   457a8:	str	r2, [r3]
   457ac:	ldr	r3, [fp, #-8]
   457b0:	add	r3, r3, #1
   457b4:	str	r3, [fp, #-8]
   457b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   457bc:	ldr	r2, [r3, #8]
   457c0:	ldr	r3, [fp, #-12]
   457c4:	add	r1, r3, #1
   457c8:	str	r1, [fp, #-12]
   457cc:	lsl	r3, r3, #2
   457d0:	add	r3, r2, r3
   457d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   457d8:	str	r2, [r3]
   457dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   457e0:	cmn	r3, #1
   457e4:	moveq	r3, #1
   457e8:	movne	r3, #0
   457ec:	uxtb	r3, r3
   457f0:	cmp	r3, #0
   457f4:	beq	4582c <__assert_fail@plt+0x33140>
   457f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   457fc:	add	r3, r3, #16
   45800:	sub	r2, fp, #80	; 0x50
   45804:	ldm	r2, {r0, r1}
   45808:	stm	r3, {r0, r1}
   4580c:	b	4582c <__assert_fail@plt+0x33140>
   45810:	ldr	r3, [fp, #-160]	; 0xffffff60
   45814:	add	r3, r3, #16
   45818:	sub	r2, fp, #80	; 0x50
   4581c:	ldm	r2, {r0, r1}
   45820:	stm	r3, {r0, r1}
   45824:	nop			; (mov r0, r0)
   45828:	b	45840 <__assert_fail@plt+0x33154>
   4582c:	nop			; (mov r0, r0)
   45830:	ldr	r2, [fp, #-12]
   45834:	ldr	r3, [fp, #-16]
   45838:	cmp	r2, r3
   4583c:	blt	4512c <__assert_fail@plt+0x32a40>
   45840:	ldr	r3, [fp, #-160]	; 0xffffff60
   45844:	ldr	r2, [fp, #-12]
   45848:	str	r2, [r3, #28]
   4584c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45850:	ldr	r2, [fp, #-8]
   45854:	str	r2, [r3, #32]
   45858:	mov	r3, #0
   4585c:	mov	r0, r3
   45860:	sub	sp, fp, #4
   45864:	pop	{fp, pc}
   45868:	push	{fp, lr}
   4586c:	add	fp, sp, #4
   45870:	sub	sp, sp, #48	; 0x30
   45874:	str	r0, [fp, #-40]	; 0xffffffd8
   45878:	str	r1, [fp, #-44]	; 0xffffffd4
   4587c:	str	r2, [fp, #-48]	; 0xffffffd0
   45880:	mvn	r3, #0
   45884:	str	r3, [fp, #-16]
   45888:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4588c:	ldr	r2, [r3, #24]
   45890:	ldr	r3, [fp, #-40]	; 0xffffffd8
   45894:	ldr	r3, [r3, #32]
   45898:	add	r3, r2, r3
   4589c:	str	r3, [fp, #-8]
   458a0:	b	459d0 <__assert_fail@plt+0x332e4>
   458a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   458a8:	ldr	r2, [r3, #44]	; 0x2c
   458ac:	ldr	r3, [fp, #-8]
   458b0:	sub	r3, r2, r3
   458b4:	str	r3, [fp, #-20]	; 0xffffffec
   458b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   458bc:	sub	r3, fp, #28
   458c0:	add	r2, r2, #16
   458c4:	ldm	r2, {r0, r1}
   458c8:	stm	r3, {r0, r1}
   458cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   458d0:	ldr	r2, [r3]
   458d4:	ldr	r3, [fp, #-8]
   458d8:	add	r1, r2, r3
   458dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   458e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   458e4:	add	r3, r3, #16
   458e8:	sub	r0, fp, #32
   458ec:	bl	42c50 <__assert_fail@plt+0x30564>
   458f0:	str	r0, [fp, #-12]
   458f4:	ldr	r3, [fp, #-12]
   458f8:	cmn	r3, #2
   458fc:	moveq	r3, #1
   45900:	movne	r3, #0
   45904:	uxtb	r3, r3
   45908:	cmp	r3, #0
   4590c:	bne	4592c <__assert_fail@plt+0x33240>
   45910:	ldr	r3, [fp, #-12]
   45914:	cmn	r3, #1
   45918:	moveq	r3, #1
   4591c:	movne	r3, #0
   45920:	uxtb	r3, r3
   45924:	cmp	r3, #0
   45928:	beq	45934 <__assert_fail@plt+0x33248>
   4592c:	mov	r3, #1
   45930:	b	45938 <__assert_fail@plt+0x3324c>
   45934:	mov	r3, #0
   45938:	cmp	r3, #0
   4593c:	bne	4595c <__assert_fail@plt+0x33270>
   45940:	ldr	r3, [fp, #-12]
   45944:	cmp	r3, #0
   45948:	moveq	r3, #1
   4594c:	movne	r3, #0
   45950:	uxtb	r3, r3
   45954:	cmp	r3, #0
   45958:	beq	459b8 <__assert_fail@plt+0x332cc>
   4595c:	ldr	r3, [fp, #-12]
   45960:	cmp	r3, #0
   45964:	beq	45974 <__assert_fail@plt+0x33288>
   45968:	ldr	r3, [fp, #-20]	; 0xffffffec
   4596c:	cmp	r3, #0
   45970:	bne	45980 <__assert_fail@plt+0x33294>
   45974:	mov	r3, #0
   45978:	str	r3, [fp, #-16]
   4597c:	b	45998 <__assert_fail@plt+0x332ac>
   45980:	ldr	r3, [fp, #-40]	; 0xffffffd8
   45984:	ldr	r2, [r3]
   45988:	ldr	r3, [fp, #-8]
   4598c:	add	r3, r2, r3
   45990:	ldrb	r3, [r3]
   45994:	str	r3, [fp, #-16]
   45998:	mov	r3, #1
   4599c:	str	r3, [fp, #-12]
   459a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   459a4:	add	r3, r3, #16
   459a8:	sub	r2, fp, #28
   459ac:	ldm	r2, {r0, r1}
   459b0:	stm	r3, {r0, r1}
   459b4:	b	459c0 <__assert_fail@plt+0x332d4>
   459b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   459bc:	str	r3, [fp, #-16]
   459c0:	ldr	r2, [fp, #-8]
   459c4:	ldr	r3, [fp, #-12]
   459c8:	add	r3, r2, r3
   459cc:	str	r3, [fp, #-8]
   459d0:	ldr	r2, [fp, #-8]
   459d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   459d8:	cmp	r2, r3
   459dc:	blt	458a4 <__assert_fail@plt+0x331b8>
   459e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   459e4:	ldr	r2, [fp, #-16]
   459e8:	str	r2, [r3]
   459ec:	ldr	r3, [fp, #-8]
   459f0:	mov	r0, r3
   459f4:	sub	sp, fp, #4
   459f8:	pop	{fp, pc}
   459fc:	push	{r4, fp, lr}
   45a00:	add	fp, sp, #8
   45a04:	sub	sp, sp, #28
   45a08:	str	r0, [fp, #-32]	; 0xffffffe0
   45a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a10:	ldr	r2, [r3, #36]	; 0x24
   45a14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a18:	ldr	r3, [r3, #48]	; 0x30
   45a1c:	cmp	r2, r3
   45a20:	movlt	r3, r2
   45a24:	movge	r3, r3
   45a28:	str	r3, [fp, #-24]	; 0xffffffe8
   45a2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a30:	ldr	r3, [r3, #28]
   45a34:	str	r3, [fp, #-16]
   45a38:	b	45ac8 <__assert_fail@plt+0x333dc>
   45a3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a40:	ldr	r3, [r3]
   45a44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   45a48:	ldr	r1, [r2, #24]
   45a4c:	ldr	r2, [fp, #-16]
   45a50:	add	r2, r1, r2
   45a54:	add	r3, r3, r2
   45a58:	ldrb	r3, [r3]
   45a5c:	str	r3, [fp, #-20]	; 0xffffffec
   45a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a64:	ldr	r3, [r3, #64]	; 0x40
   45a68:	cmp	r3, #0
   45a6c:	movne	r3, #1
   45a70:	moveq	r3, #0
   45a74:	uxtb	r3, r3
   45a78:	cmp	r3, #0
   45a7c:	beq	45a98 <__assert_fail@plt+0x333ac>
   45a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a84:	ldr	r2, [r3, #64]	; 0x40
   45a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   45a8c:	add	r3, r2, r3
   45a90:	ldrb	r3, [r3]
   45a94:	str	r3, [fp, #-20]	; 0xffffffec
   45a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45a9c:	ldr	r2, [r3, #4]
   45aa0:	ldr	r3, [fp, #-16]
   45aa4:	add	r4, r2, r3
   45aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   45aac:	bl	1253c <toupper@plt>
   45ab0:	mov	r3, r0
   45ab4:	uxtb	r3, r3
   45ab8:	strb	r3, [r4]
   45abc:	ldr	r3, [fp, #-16]
   45ac0:	add	r3, r3, #1
   45ac4:	str	r3, [fp, #-16]
   45ac8:	ldr	r2, [fp, #-16]
   45acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45ad0:	cmp	r2, r3
   45ad4:	blt	45a3c <__assert_fail@plt+0x33350>
   45ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45adc:	ldr	r2, [fp, #-16]
   45ae0:	str	r2, [r3, #28]
   45ae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45ae8:	ldr	r2, [fp, #-16]
   45aec:	str	r2, [r3, #32]
   45af0:	nop			; (mov r0, r0)
   45af4:	sub	sp, fp, #8
   45af8:	pop	{r4, fp, pc}
   45afc:	push	{fp}		; (str fp, [sp, #-4]!)
   45b00:	add	fp, sp, #0
   45b04:	sub	sp, sp, #28
   45b08:	str	r0, [fp, #-24]	; 0xffffffe8
   45b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b10:	ldr	r2, [r3, #36]	; 0x24
   45b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b18:	ldr	r3, [r3, #48]	; 0x30
   45b1c:	cmp	r2, r3
   45b20:	movlt	r3, r2
   45b24:	movge	r3, r3
   45b28:	str	r3, [fp, #-12]
   45b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b30:	ldr	r3, [r3, #28]
   45b34:	str	r3, [fp, #-8]
   45b38:	b	45b94 <__assert_fail@plt+0x334a8>
   45b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b40:	ldr	r3, [r3]
   45b44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45b48:	ldr	r1, [r2, #24]
   45b4c:	ldr	r2, [fp, #-8]
   45b50:	add	r2, r1, r2
   45b54:	add	r3, r3, r2
   45b58:	ldrb	r3, [r3]
   45b5c:	str	r3, [fp, #-16]
   45b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b64:	ldr	r2, [r3, #4]
   45b68:	ldr	r3, [fp, #-8]
   45b6c:	add	r3, r2, r3
   45b70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45b74:	ldr	r1, [r2, #64]	; 0x40
   45b78:	ldr	r2, [fp, #-16]
   45b7c:	add	r2, r1, r2
   45b80:	ldrb	r2, [r2]
   45b84:	strb	r2, [r3]
   45b88:	ldr	r3, [fp, #-8]
   45b8c:	add	r3, r3, #1
   45b90:	str	r3, [fp, #-8]
   45b94:	ldr	r2, [fp, #-8]
   45b98:	ldr	r3, [fp, #-12]
   45b9c:	cmp	r2, r3
   45ba0:	blt	45b3c <__assert_fail@plt+0x33450>
   45ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45ba8:	ldr	r2, [fp, #-8]
   45bac:	str	r2, [r3, #28]
   45bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45bb4:	ldr	r2, [fp, #-8]
   45bb8:	str	r2, [r3, #32]
   45bbc:	nop			; (mov r0, r0)
   45bc0:	add	sp, fp, #0
   45bc4:	pop	{fp}		; (ldr fp, [sp], #4)
   45bc8:	bx	lr
   45bcc:	push	{fp, lr}
   45bd0:	add	fp, sp, #4
   45bd4:	sub	sp, sp, #104	; 0x68
   45bd8:	str	r0, [fp, #-96]	; 0xffffffa0
   45bdc:	str	r1, [fp, #-100]	; 0xffffff9c
   45be0:	str	r2, [fp, #-104]	; 0xffffff98
   45be4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45be8:	ldr	r2, [r3, #24]
   45bec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   45bf0:	cmp	r2, r3
   45bf4:	movle	r3, #1
   45bf8:	movgt	r3, #0
   45bfc:	uxtb	r3, r3
   45c00:	cmp	r3, #0
   45c04:	beq	45c20 <__assert_fail@plt+0x33534>
   45c08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c0c:	ldr	r3, [r3, #24]
   45c10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   45c14:	sub	r3, r2, r3
   45c18:	str	r3, [fp, #-8]
   45c1c:	b	45ce4 <__assert_fail@plt+0x335f8>
   45c20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c24:	ldr	r3, [r3, #80]	; 0x50
   45c28:	cmp	r3, #1
   45c2c:	ble	45c48 <__assert_fail@plt+0x3355c>
   45c30:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c34:	add	r3, r3, #16
   45c38:	mov	r2, #8
   45c3c:	mov	r1, #0
   45c40:	mov	r0, r3
   45c44:	bl	12434 <memset@plt>
   45c48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c4c:	ldr	r2, [r3, #44]	; 0x2c
   45c50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c54:	str	r2, [r3, #48]	; 0x30
   45c58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c5c:	ldr	r2, [r3, #52]	; 0x34
   45c60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c64:	str	r2, [r3, #56]	; 0x38
   45c68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c6c:	mov	r2, #0
   45c70:	str	r2, [r3, #28]
   45c74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c78:	mov	r2, #0
   45c7c:	str	r2, [r3, #24]
   45c80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c84:	mov	r2, #0
   45c88:	str	r2, [r3, #32]
   45c8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45c90:	mov	r2, #0
   45c94:	strb	r2, [r3, #76]	; 0x4c
   45c98:	ldr	r3, [fp, #-104]	; 0xffffff98
   45c9c:	and	r3, r3, #1
   45ca0:	cmp	r3, #0
   45ca4:	beq	45cb0 <__assert_fail@plt+0x335c4>
   45ca8:	mov	r2, #4
   45cac:	b	45cb4 <__assert_fail@plt+0x335c8>
   45cb0:	mov	r2, #6
   45cb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45cb8:	str	r2, [r3, #60]	; 0x3c
   45cbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45cc0:	ldrb	r3, [r3, #75]	; 0x4b
   45cc4:	cmp	r3, #0
   45cc8:	bne	45cdc <__assert_fail@plt+0x335f0>
   45ccc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45cd0:	ldr	r2, [r3]
   45cd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45cd8:	str	r2, [r3, #4]
   45cdc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   45ce0:	str	r3, [fp, #-8]
   45ce4:	ldr	r3, [fp, #-8]
   45ce8:	cmp	r3, #0
   45cec:	movne	r3, #1
   45cf0:	moveq	r3, #0
   45cf4:	uxtb	r3, r3
   45cf8:	cmp	r3, #0
   45cfc:	beq	46728 <__assert_fail@plt+0x3403c>
   45d00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45d04:	ldr	r2, [r3, #32]
   45d08:	ldr	r3, [fp, #-8]
   45d0c:	cmp	r2, r3
   45d10:	movgt	r3, #1
   45d14:	movle	r3, #0
   45d18:	uxtb	r3, r3
   45d1c:	cmp	r3, #0
   45d20:	beq	4621c <__assert_fail@plt+0x33b30>
   45d24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45d28:	ldrb	r3, [r3, #76]	; 0x4c
   45d2c:	cmp	r3, #0
   45d30:	beq	46130 <__assert_fail@plt+0x33a44>
   45d34:	mov	r3, #0
   45d38:	str	r3, [fp, #-12]
   45d3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45d40:	ldr	r3, [r3, #28]
   45d44:	str	r3, [fp, #-16]
   45d48:	ldr	r2, [fp, #-16]
   45d4c:	ldr	r3, [fp, #-12]
   45d50:	add	r3, r2, r3
   45d54:	lsr	r2, r3, #31
   45d58:	add	r3, r2, r3
   45d5c:	asr	r3, r3, #1
   45d60:	str	r3, [fp, #-20]	; 0xffffffec
   45d64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45d68:	ldr	r2, [r3, #12]
   45d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45d70:	lsl	r3, r3, #2
   45d74:	add	r3, r2, r3
   45d78:	ldr	r2, [r3]
   45d7c:	ldr	r3, [fp, #-8]
   45d80:	cmp	r2, r3
   45d84:	ble	45d94 <__assert_fail@plt+0x336a8>
   45d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   45d8c:	str	r3, [fp, #-16]
   45d90:	b	45dc4 <__assert_fail@plt+0x336d8>
   45d94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45d98:	ldr	r2, [r3, #12]
   45d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45da0:	lsl	r3, r3, #2
   45da4:	add	r3, r2, r3
   45da8:	ldr	r2, [r3]
   45dac:	ldr	r3, [fp, #-8]
   45db0:	cmp	r2, r3
   45db4:	bge	45dd8 <__assert_fail@plt+0x336ec>
   45db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   45dbc:	add	r3, r3, #1
   45dc0:	str	r3, [fp, #-12]
   45dc4:	ldr	r2, [fp, #-12]
   45dc8:	ldr	r3, [fp, #-16]
   45dcc:	cmp	r2, r3
   45dd0:	blt	45d48 <__assert_fail@plt+0x3365c>
   45dd4:	b	45ddc <__assert_fail@plt+0x336f0>
   45dd8:	nop			; (mov r0, r0)
   45ddc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45de0:	ldr	r2, [r3, #12]
   45de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   45de8:	lsl	r3, r3, #2
   45dec:	add	r3, r2, r3
   45df0:	ldr	r2, [r3]
   45df4:	ldr	r3, [fp, #-8]
   45df8:	cmp	r2, r3
   45dfc:	bge	45e0c <__assert_fail@plt+0x33720>
   45e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   45e04:	add	r3, r3, #1
   45e08:	str	r3, [fp, #-20]	; 0xffffffec
   45e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45e10:	sub	r3, r3, #1
   45e14:	ldr	r2, [fp, #-104]	; 0xffffff98
   45e18:	mov	r1, r3
   45e1c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   45e20:	bl	46c18 <__assert_fail@plt+0x3452c>
   45e24:	mov	r2, r0
   45e28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45e2c:	str	r2, [r3, #60]	; 0x3c
   45e30:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45e34:	ldr	r2, [r3, #28]
   45e38:	ldr	r3, [fp, #-8]
   45e3c:	cmp	r2, r3
   45e40:	ble	45f80 <__assert_fail@plt+0x33894>
   45e44:	ldr	r2, [fp, #-20]	; 0xffffffec
   45e48:	ldr	r3, [fp, #-8]
   45e4c:	cmp	r2, r3
   45e50:	bne	45f80 <__assert_fail@plt+0x33894>
   45e54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45e58:	ldr	r2, [r3, #12]
   45e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45e60:	lsl	r3, r3, #2
   45e64:	add	r3, r2, r3
   45e68:	ldr	r2, [r3]
   45e6c:	ldr	r3, [fp, #-8]
   45e70:	cmp	r2, r3
   45e74:	bne	45f80 <__assert_fail@plt+0x33894>
   45e78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45e7c:	ldr	r0, [r3, #8]
   45e80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45e84:	ldr	r2, [r3, #8]
   45e88:	ldr	r3, [fp, #-8]
   45e8c:	lsl	r3, r3, #2
   45e90:	add	r1, r2, r3
   45e94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45e98:	ldr	r2, [r3, #28]
   45e9c:	ldr	r3, [fp, #-8]
   45ea0:	sub	r3, r2, r3
   45ea4:	lsl	r3, r3, #2
   45ea8:	mov	r2, r3
   45eac:	bl	1208c <memmove@plt>
   45eb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45eb4:	ldr	r0, [r3, #4]
   45eb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45ebc:	ldr	r2, [r3, #4]
   45ec0:	ldr	r3, [fp, #-8]
   45ec4:	add	r1, r2, r3
   45ec8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45ecc:	ldr	r2, [r3, #28]
   45ed0:	ldr	r3, [fp, #-8]
   45ed4:	sub	r3, r2, r3
   45ed8:	mov	r2, r3
   45edc:	bl	1208c <memmove@plt>
   45ee0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45ee4:	ldr	r2, [r3, #28]
   45ee8:	ldr	r3, [fp, #-8]
   45eec:	sub	r2, r2, r3
   45ef0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45ef4:	str	r2, [r3, #28]
   45ef8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45efc:	ldr	r2, [r3, #32]
   45f00:	ldr	r3, [fp, #-8]
   45f04:	sub	r2, r2, r3
   45f08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45f0c:	str	r2, [r3, #32]
   45f10:	mov	r3, #0
   45f14:	str	r3, [fp, #-12]
   45f18:	b	45f68 <__assert_fail@plt+0x3387c>
   45f1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45f20:	ldr	r2, [r3, #12]
   45f24:	ldr	r3, [fp, #-12]
   45f28:	lsl	r3, r3, #2
   45f2c:	add	r3, r2, r3
   45f30:	ldr	r2, [fp, #-96]	; 0xffffffa0
   45f34:	ldr	r1, [r2, #12]
   45f38:	ldr	r0, [fp, #-12]
   45f3c:	ldr	r2, [fp, #-8]
   45f40:	add	r2, r0, r2
   45f44:	lsl	r2, r2, #2
   45f48:	add	r2, r1, r2
   45f4c:	ldr	r1, [r2]
   45f50:	ldr	r2, [fp, #-8]
   45f54:	sub	r2, r1, r2
   45f58:	str	r2, [r3]
   45f5c:	ldr	r3, [fp, #-12]
   45f60:	add	r3, r3, #1
   45f64:	str	r3, [fp, #-12]
   45f68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45f6c:	ldr	r2, [r3, #28]
   45f70:	ldr	r3, [fp, #-12]
   45f74:	cmp	r2, r3
   45f78:	bgt	45f1c <__assert_fail@plt+0x33830>
   45f7c:	b	46700 <__assert_fail@plt+0x34014>
   45f80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45f84:	ldr	r2, [r3, #44]	; 0x2c
   45f88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   45f8c:	sub	r2, r2, r3
   45f90:	ldr	r3, [fp, #-8]
   45f94:	add	r2, r2, r3
   45f98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45f9c:	str	r2, [r3, #48]	; 0x30
   45fa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45fa4:	ldr	r2, [r3, #52]	; 0x34
   45fa8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   45fac:	sub	r2, r2, r3
   45fb0:	ldr	r3, [fp, #-8]
   45fb4:	add	r2, r2, r3
   45fb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45fbc:	str	r2, [r3, #56]	; 0x38
   45fc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45fc4:	mov	r2, #0
   45fc8:	strb	r2, [r3, #76]	; 0x4c
   45fcc:	b	45fdc <__assert_fail@plt+0x338f0>
   45fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   45fd4:	sub	r3, r3, #1
   45fd8:	str	r3, [fp, #-20]	; 0xffffffec
   45fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   45fe0:	cmp	r3, #0
   45fe4:	ble	46040 <__assert_fail@plt+0x33954>
   45fe8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   45fec:	ldr	r2, [r3, #12]
   45ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   45ff4:	sub	r3, r3, #-1073741823	; 0xc0000001
   45ff8:	lsl	r3, r3, #2
   45ffc:	add	r3, r2, r3
   46000:	ldr	r2, [r3]
   46004:	ldr	r3, [fp, #-8]
   46008:	cmp	r2, r3
   4600c:	beq	45fd0 <__assert_fail@plt+0x338e4>
   46010:	b	46040 <__assert_fail@plt+0x33954>
   46014:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46018:	ldr	r2, [r3, #8]
   4601c:	ldr	r3, [fp, #-20]	; 0xffffffec
   46020:	lsl	r3, r3, #2
   46024:	add	r3, r2, r3
   46028:	ldr	r3, [r3]
   4602c:	cmn	r3, #1
   46030:	bne	46058 <__assert_fail@plt+0x3396c>
   46034:	ldr	r3, [fp, #-20]	; 0xffffffec
   46038:	add	r3, r3, #1
   4603c:	str	r3, [fp, #-20]	; 0xffffffec
   46040:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46044:	ldr	r2, [r3, #28]
   46048:	ldr	r3, [fp, #-20]	; 0xffffffec
   4604c:	cmp	r2, r3
   46050:	bgt	46014 <__assert_fail@plt+0x33928>
   46054:	b	4605c <__assert_fail@plt+0x33970>
   46058:	nop			; (mov r0, r0)
   4605c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46060:	ldr	r2, [r3, #28]
   46064:	ldr	r3, [fp, #-20]	; 0xffffffec
   46068:	cmp	r2, r3
   4606c:	bne	46080 <__assert_fail@plt+0x33994>
   46070:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46074:	mov	r2, #0
   46078:	str	r2, [r3, #28]
   4607c:	b	4611c <__assert_fail@plt+0x33a30>
   46080:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46084:	ldr	r2, [r3, #12]
   46088:	ldr	r3, [fp, #-20]	; 0xffffffec
   4608c:	lsl	r3, r3, #2
   46090:	add	r3, r2, r3
   46094:	ldr	r2, [r3]
   46098:	ldr	r3, [fp, #-8]
   4609c:	sub	r2, r2, r3
   460a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   460a4:	str	r2, [r3, #28]
   460a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   460ac:	ldr	r3, [r3, #28]
   460b0:	cmp	r3, #0
   460b4:	beq	4611c <__assert_fail@plt+0x33a30>
   460b8:	mov	r3, #0
   460bc:	str	r3, [fp, #-12]
   460c0:	b	460ec <__assert_fail@plt+0x33a00>
   460c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   460c8:	ldr	r2, [r3, #8]
   460cc:	ldr	r3, [fp, #-12]
   460d0:	lsl	r3, r3, #2
   460d4:	add	r3, r2, r3
   460d8:	mvn	r2, #0
   460dc:	str	r2, [r3]
   460e0:	ldr	r3, [fp, #-12]
   460e4:	add	r3, r3, #1
   460e8:	str	r3, [fp, #-12]
   460ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   460f0:	ldr	r2, [r3, #28]
   460f4:	ldr	r3, [fp, #-12]
   460f8:	cmp	r2, r3
   460fc:	bgt	460c4 <__assert_fail@plt+0x339d8>
   46100:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46104:	ldr	r0, [r3, #4]
   46108:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4610c:	ldr	r3, [r3, #28]
   46110:	mov	r2, r3
   46114:	mov	r1, #255	; 0xff
   46118:	bl	12434 <memset@plt>
   4611c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46120:	ldr	r2, [r3, #28]
   46124:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46128:	str	r2, [r3, #32]
   4612c:	b	46700 <__assert_fail@plt+0x34014>
   46130:	ldr	r3, [fp, #-8]
   46134:	sub	r3, r3, #1
   46138:	ldr	r2, [fp, #-104]	; 0xffffff98
   4613c:	mov	r1, r3
   46140:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46144:	bl	46c18 <__assert_fail@plt+0x3452c>
   46148:	mov	r2, r0
   4614c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46150:	str	r2, [r3, #60]	; 0x3c
   46154:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46158:	ldr	r3, [r3, #80]	; 0x50
   4615c:	cmp	r3, #1
   46160:	ble	4619c <__assert_fail@plt+0x33ab0>
   46164:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46168:	ldr	r0, [r3, #8]
   4616c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46170:	ldr	r2, [r3, #8]
   46174:	ldr	r3, [fp, #-8]
   46178:	lsl	r3, r3, #2
   4617c:	add	r1, r2, r3
   46180:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46184:	ldr	r2, [r3, #28]
   46188:	ldr	r3, [fp, #-8]
   4618c:	sub	r3, r2, r3
   46190:	lsl	r3, r3, #2
   46194:	mov	r2, r3
   46198:	bl	1208c <memmove@plt>
   4619c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461a0:	ldrb	r3, [r3, #75]	; 0x4b
   461a4:	cmp	r3, #0
   461a8:	beq	461dc <__assert_fail@plt+0x33af0>
   461ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461b0:	ldr	r0, [r3, #4]
   461b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461b8:	ldr	r2, [r3, #4]
   461bc:	ldr	r3, [fp, #-8]
   461c0:	add	r1, r2, r3
   461c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461c8:	ldr	r2, [r3, #28]
   461cc:	ldr	r3, [fp, #-8]
   461d0:	sub	r3, r2, r3
   461d4:	mov	r2, r3
   461d8:	bl	1208c <memmove@plt>
   461dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461e0:	ldr	r2, [r3, #28]
   461e4:	ldr	r3, [fp, #-8]
   461e8:	sub	r2, r2, r3
   461ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461f0:	str	r2, [r3, #28]
   461f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   461f8:	ldr	r2, [r3, #32]
   461fc:	ldr	r3, [fp, #-8]
   46200:	sub	r2, r2, r3
   46204:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46208:	str	r2, [r3, #32]
   4620c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46210:	ldr	r3, [r3, #28]
   46214:	cmp	r3, #0
   46218:	b	46700 <__assert_fail@plt+0x34014>
   4621c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46220:	ldr	r3, [r3, #28]
   46224:	str	r3, [fp, #-48]	; 0xffffffd0
   46228:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4622c:	ldrb	r3, [r3, #76]	; 0x4c
   46230:	cmp	r3, #0
   46234:	beq	46284 <__assert_fail@plt+0x33b98>
   46238:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4623c:	ldr	r2, [r3, #44]	; 0x2c
   46240:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46244:	sub	r2, r2, r3
   46248:	ldr	r3, [fp, #-8]
   4624c:	add	r2, r2, r3
   46250:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46254:	str	r2, [r3, #48]	; 0x30
   46258:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4625c:	ldr	r2, [r3, #52]	; 0x34
   46260:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46264:	sub	r2, r2, r3
   46268:	ldr	r3, [fp, #-8]
   4626c:	add	r2, r2, r3
   46270:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46274:	str	r2, [r3, #56]	; 0x38
   46278:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4627c:	mov	r2, #0
   46280:	strb	r2, [r3, #76]	; 0x4c
   46284:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46288:	mov	r2, #0
   4628c:	str	r2, [r3, #28]
   46290:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46294:	ldr	r3, [r3, #80]	; 0x50
   46298:	cmp	r3, #1
   4629c:	ble	4664c <__assert_fail@plt+0x33f60>
   462a0:	mvn	r3, #0
   462a4:	str	r3, [fp, #-68]	; 0xffffffbc
   462a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   462ac:	ldrb	r3, [r3, #73]	; 0x49
   462b0:	cmp	r3, #0
   462b4:	beq	464d0 <__assert_fail@plt+0x33de4>
   462b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   462bc:	ldr	r3, [r3]
   462c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   462c4:	ldr	r2, [r2, #24]
   462c8:	add	r3, r3, r2
   462cc:	str	r3, [fp, #-52]	; 0xffffffcc
   462d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   462d4:	ldr	r3, [r3, #80]	; 0x50
   462d8:	ldr	r2, [fp, #-8]
   462dc:	sub	r3, r2, r3
   462e0:	mov	r2, r3
   462e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   462e8:	add	r3, r3, r2
   462ec:	str	r3, [fp, #-32]	; 0xffffffe0
   462f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   462f4:	ldr	r2, [r3]
   462f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   462fc:	cmp	r2, r3
   46300:	bls	46310 <__assert_fail@plt+0x33c24>
   46304:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46308:	ldr	r3, [r3]
   4630c:	str	r3, [fp, #-32]	; 0xffffffe0
   46310:	ldr	r3, [fp, #-8]
   46314:	sub	r3, r3, #1
   46318:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4631c:	add	r3, r2, r3
   46320:	str	r3, [fp, #-28]	; 0xffffffe4
   46324:	b	464b8 <__assert_fail@plt+0x33dcc>
   46328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4632c:	ldrb	r3, [r3]
   46330:	and	r3, r3, #192	; 0xc0
   46334:	cmp	r3, #128	; 0x80
   46338:	beq	464ac <__assert_fail@plt+0x33dc0>
   4633c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46340:	ldr	r3, [r3, #48]	; 0x30
   46344:	mov	r2, r3
   46348:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4634c:	add	r3, r3, r2
   46350:	mov	r2, r3
   46354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46358:	sub	r3, r2, r3
   4635c:	str	r3, [fp, #-56]	; 0xffffffc8
   46360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46364:	str	r3, [fp, #-36]	; 0xffffffdc
   46368:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4636c:	ldr	r3, [r3, #64]	; 0x40
   46370:	cmp	r3, #0
   46374:	movne	r3, #1
   46378:	moveq	r3, #0
   4637c:	uxtb	r3, r3
   46380:	cmp	r3, #0
   46384:	beq	463f4 <__assert_fail@plt+0x33d08>
   46388:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4638c:	cmp	r3, #6
   46390:	movlt	r3, r3
   46394:	movge	r3, #6
   46398:	str	r3, [fp, #-40]	; 0xffffffd8
   4639c:	b	463d4 <__assert_fail@plt+0x33ce8>
   463a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   463a4:	ldr	r3, [r3, #64]	; 0x40
   463a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   463ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   463b0:	add	r2, r1, r2
   463b4:	ldrb	r2, [r2]
   463b8:	add	r3, r3, r2
   463bc:	ldrb	r1, [r3]
   463c0:	sub	r2, fp, #88	; 0x58
   463c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   463c8:	add	r3, r2, r3
   463cc:	mov	r2, r1
   463d0:	strb	r2, [r3]
   463d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   463d8:	sub	r3, r3, #1
   463dc:	str	r3, [fp, #-40]	; 0xffffffd8
   463e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   463e4:	cmp	r3, #0
   463e8:	bge	463a0 <__assert_fail@plt+0x33cb4>
   463ec:	sub	r3, fp, #88	; 0x58
   463f0:	str	r3, [fp, #-36]	; 0xffffffdc
   463f4:	sub	r3, fp, #76	; 0x4c
   463f8:	mov	r2, #8
   463fc:	mov	r1, #0
   46400:	mov	r0, r3
   46404:	bl	12434 <memset@plt>
   46408:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4640c:	sub	r3, fp, #76	; 0x4c
   46410:	sub	r0, fp, #80	; 0x50
   46414:	ldr	r1, [fp, #-36]	; 0xffffffdc
   46418:	bl	42c50 <__assert_fail@plt+0x30564>
   4641c:	str	r0, [fp, #-60]	; 0xffffffc4
   46420:	ldr	r3, [fp, #-8]
   46424:	ldr	r2, [fp, #-52]	; 0xffffffcc
   46428:	add	r3, r2, r3
   4642c:	mov	r2, r3
   46430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46434:	sub	r3, r2, r3
   46438:	mov	r2, r3
   4643c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   46440:	cmp	r2, r3
   46444:	bhi	464cc <__assert_fail@plt+0x33de0>
   46448:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4644c:	cmn	r3, #3
   46450:	bhi	464cc <__assert_fail@plt+0x33de0>
   46454:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46458:	add	r3, r3, #16
   4645c:	mov	r2, #8
   46460:	mov	r1, #0
   46464:	mov	r0, r3
   46468:	bl	12434 <memset@plt>
   4646c:	ldr	r3, [fp, #-8]
   46470:	ldr	r2, [fp, #-52]	; 0xffffffcc
   46474:	add	r3, r2, r3
   46478:	mov	r2, r3
   4647c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46480:	sub	r3, r2, r3
   46484:	mov	r2, r3
   46488:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4648c:	sub	r3, r3, r2
   46490:	mov	r2, r3
   46494:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46498:	str	r2, [r3, #28]
   4649c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   464a0:	str	r3, [fp, #-68]	; 0xffffffbc
   464a4:	nop			; (mov r0, r0)
   464a8:	b	464cc <__assert_fail@plt+0x33de0>
   464ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   464b0:	sub	r3, r3, #1
   464b4:	str	r3, [fp, #-28]	; 0xffffffe4
   464b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   464bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   464c0:	cmp	r2, r3
   464c4:	bcs	46328 <__assert_fail@plt+0x33c3c>
   464c8:	b	464d0 <__assert_fail@plt+0x33de4>
   464cc:	nop			; (mov r0, r0)
   464d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   464d4:	cmn	r3, #1
   464d8:	bne	46504 <__assert_fail@plt+0x33e18>
   464dc:	sub	r3, fp, #68	; 0x44
   464e0:	mov	r2, r3
   464e4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   464e8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   464ec:	bl	45868 <__assert_fail@plt+0x3317c>
   464f0:	mov	r2, r0
   464f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   464f8:	sub	r2, r2, r3
   464fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46500:	str	r2, [r3, #28]
   46504:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46508:	cmn	r3, #1
   4650c:	bne	46538 <__assert_fail@plt+0x33e4c>
   46510:	ldr	r3, [fp, #-48]	; 0xffffffd0
   46514:	sub	r3, r3, #1
   46518:	ldr	r2, [fp, #-104]	; 0xffffff98
   4651c:	mov	r1, r3
   46520:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46524:	bl	46c18 <__assert_fail@plt+0x3452c>
   46528:	mov	r2, r0
   4652c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46530:	str	r2, [r3, #60]	; 0x3c
   46534:	b	465b4 <__assert_fail@plt+0x33ec8>
   46538:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4653c:	ldrb	r3, [r3, #78]	; 0x4e
   46540:	cmp	r3, #0
   46544:	movne	r3, #1
   46548:	moveq	r3, #0
   4654c:	uxtb	r3, r3
   46550:	cmp	r3, #0
   46554:	beq	4657c <__assert_fail@plt+0x33e90>
   46558:	ldr	r3, [fp, #-68]	; 0xffffffbc
   4655c:	mov	r0, r3
   46560:	bl	12410 <iswalnum@plt>
   46564:	mov	r3, r0
   46568:	cmp	r3, #0
   4656c:	bne	465a8 <__assert_fail@plt+0x33ebc>
   46570:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46574:	cmp	r3, #95	; 0x5f
   46578:	beq	465a8 <__assert_fail@plt+0x33ebc>
   4657c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46580:	cmp	r3, #10
   46584:	bne	465a0 <__assert_fail@plt+0x33eb4>
   46588:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4658c:	ldrb	r3, [r3, #77]	; 0x4d
   46590:	cmp	r3, #0
   46594:	beq	465a0 <__assert_fail@plt+0x33eb4>
   46598:	mov	r3, #2
   4659c:	b	465ac <__assert_fail@plt+0x33ec0>
   465a0:	mov	r3, #0
   465a4:	b	465ac <__assert_fail@plt+0x33ec0>
   465a8:	mov	r3, #1
   465ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   465b0:	str	r3, [r2, #60]	; 0x3c
   465b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   465b8:	ldr	r3, [r3, #28]
   465bc:	cmp	r3, #0
   465c0:	beq	46638 <__assert_fail@plt+0x33f4c>
   465c4:	mov	r3, #0
   465c8:	str	r3, [fp, #-24]	; 0xffffffe8
   465cc:	b	465f8 <__assert_fail@plt+0x33f0c>
   465d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   465d4:	ldr	r2, [r3, #8]
   465d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   465dc:	lsl	r3, r3, #2
   465e0:	add	r3, r2, r3
   465e4:	mvn	r2, #0
   465e8:	str	r2, [r3]
   465ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   465f0:	add	r3, r3, #1
   465f4:	str	r3, [fp, #-24]	; 0xffffffe8
   465f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   465fc:	ldr	r2, [r3, #28]
   46600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46604:	cmp	r2, r3
   46608:	bgt	465d0 <__assert_fail@plt+0x33ee4>
   4660c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46610:	ldrb	r3, [r3, #75]	; 0x4b
   46614:	cmp	r3, #0
   46618:	beq	46638 <__assert_fail@plt+0x33f4c>
   4661c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46620:	ldr	r0, [r3, #4]
   46624:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46628:	ldr	r3, [r3, #28]
   4662c:	mov	r2, r3
   46630:	mov	r1, #255	; 0xff
   46634:	bl	12434 <memset@plt>
   46638:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4663c:	ldr	r2, [r3, #28]
   46640:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46644:	str	r2, [r3, #32]
   46648:	b	46700 <__assert_fail@plt+0x34014>
   4664c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46650:	ldr	r2, [r3]
   46654:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46658:	ldr	r1, [r3, #24]
   4665c:	ldr	r3, [fp, #-8]
   46660:	add	r3, r1, r3
   46664:	sub	r3, r3, #1
   46668:	add	r3, r2, r3
   4666c:	ldrb	r3, [r3]
   46670:	str	r3, [fp, #-44]	; 0xffffffd4
   46674:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46678:	mov	r2, #0
   4667c:	str	r2, [r3, #32]
   46680:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46684:	ldr	r3, [r3, #64]	; 0x40
   46688:	cmp	r3, #0
   4668c:	beq	466a8 <__assert_fail@plt+0x33fbc>
   46690:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46694:	ldr	r2, [r3, #64]	; 0x40
   46698:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4669c:	add	r3, r2, r3
   466a0:	ldrb	r3, [r3]
   466a4:	str	r3, [fp, #-44]	; 0xffffffd4
   466a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466ac:	ldr	r3, [r3, #68]	; 0x44
   466b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   466b4:	mov	r0, r3
   466b8:	bl	43ff0 <__assert_fail@plt+0x31904>
   466bc:	mov	r3, r0
   466c0:	cmp	r3, #0
   466c4:	bne	466f4 <__assert_fail@plt+0x34008>
   466c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   466cc:	cmp	r3, #10
   466d0:	bne	466ec <__assert_fail@plt+0x34000>
   466d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466d8:	ldrb	r3, [r3, #77]	; 0x4d
   466dc:	cmp	r3, #0
   466e0:	beq	466ec <__assert_fail@plt+0x34000>
   466e4:	mov	r3, #2
   466e8:	b	466f8 <__assert_fail@plt+0x3400c>
   466ec:	mov	r3, #0
   466f0:	b	466f8 <__assert_fail@plt+0x3400c>
   466f4:	mov	r3, #1
   466f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   466fc:	str	r3, [r2, #60]	; 0x3c
   46700:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46704:	ldrb	r3, [r3, #75]	; 0x4b
   46708:	cmp	r3, #0
   4670c:	bne	46728 <__assert_fail@plt+0x3403c>
   46710:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46714:	ldr	r2, [r3, #4]
   46718:	ldr	r3, [fp, #-8]
   4671c:	add	r2, r2, r3
   46720:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46724:	str	r2, [r3, #4]
   46728:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4672c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   46730:	str	r2, [r3, #24]
   46734:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46738:	ldr	r2, [r3, #48]	; 0x30
   4673c:	ldr	r3, [fp, #-8]
   46740:	sub	r2, r2, r3
   46744:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46748:	str	r2, [r3, #48]	; 0x30
   4674c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46750:	ldr	r2, [r3, #56]	; 0x38
   46754:	ldr	r3, [fp, #-8]
   46758:	sub	r2, r2, r3
   4675c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46760:	str	r2, [r3, #56]	; 0x38
   46764:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46768:	ldr	r3, [r3, #80]	; 0x50
   4676c:	cmp	r3, #1
   46770:	ble	467c0 <__assert_fail@plt+0x340d4>
   46774:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46778:	ldrb	r3, [r3, #72]	; 0x48
   4677c:	cmp	r3, #0
   46780:	beq	467b4 <__assert_fail@plt+0x340c8>
   46784:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46788:	bl	44d30 <__assert_fail@plt+0x32644>
   4678c:	str	r0, [fp, #-64]	; 0xffffffc0
   46790:	ldr	r3, [fp, #-64]	; 0xffffffc0
   46794:	cmp	r3, #0
   46798:	movne	r3, #1
   4679c:	moveq	r3, #0
   467a0:	uxtb	r3, r3
   467a4:	cmp	r3, #0
   467a8:	beq	46818 <__assert_fail@plt+0x3412c>
   467ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   467b0:	b	46828 <__assert_fail@plt+0x3413c>
   467b4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   467b8:	bl	449b8 <__assert_fail@plt+0x322cc>
   467bc:	b	46818 <__assert_fail@plt+0x3412c>
   467c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   467c4:	ldrb	r3, [r3, #75]	; 0x4b
   467c8:	cmp	r3, #0
   467cc:	beq	46808 <__assert_fail@plt+0x3411c>
   467d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   467d4:	ldrb	r3, [r3, #72]	; 0x48
   467d8:	cmp	r3, #0
   467dc:	beq	467ec <__assert_fail@plt+0x34100>
   467e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   467e4:	bl	459fc <__assert_fail@plt+0x33310>
   467e8:	b	46818 <__assert_fail@plt+0x3412c>
   467ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   467f0:	ldr	r3, [r3, #64]	; 0x40
   467f4:	cmp	r3, #0
   467f8:	beq	46818 <__assert_fail@plt+0x3412c>
   467fc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46800:	bl	45afc <__assert_fail@plt+0x33410>
   46804:	b	46818 <__assert_fail@plt+0x3412c>
   46808:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4680c:	ldr	r2, [r3, #48]	; 0x30
   46810:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46814:	str	r2, [r3, #28]
   46818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4681c:	mov	r2, #0
   46820:	str	r2, [r3, #40]	; 0x28
   46824:	mov	r3, #0
   46828:	mov	r0, r3
   4682c:	sub	sp, fp, #4
   46830:	pop	{fp, pc}
   46834:	push	{fp}		; (str fp, [sp, #-4]!)
   46838:	add	fp, sp, #0
   4683c:	sub	sp, sp, #20
   46840:	str	r0, [fp, #-16]
   46844:	str	r1, [fp, #-20]	; 0xffffffec
   46848:	ldr	r3, [fp, #-16]
   4684c:	ldrb	r3, [r3, #75]	; 0x4b
   46850:	cmp	r3, #0
   46854:	moveq	r3, #1
   46858:	movne	r3, #0
   4685c:	uxtb	r3, r3
   46860:	cmp	r3, #0
   46864:	beq	4688c <__assert_fail@plt+0x341a0>
   46868:	ldr	r3, [fp, #-16]
   4686c:	ldr	r3, [r3, #4]
   46870:	ldr	r2, [fp, #-16]
   46874:	ldr	r1, [r2, #40]	; 0x28
   46878:	ldr	r2, [fp, #-20]	; 0xffffffec
   4687c:	add	r2, r1, r2
   46880:	add	r3, r3, r2
   46884:	ldrb	r3, [r3]
   46888:	b	469f0 <__assert_fail@plt+0x34304>
   4688c:	ldr	r3, [fp, #-16]
   46890:	ldr	r3, [r3, #80]	; 0x50
   46894:	cmp	r3, #1
   46898:	ble	46940 <__assert_fail@plt+0x34254>
   4689c:	ldr	r3, [fp, #-16]
   468a0:	ldr	r2, [r3, #8]
   468a4:	ldr	r3, [fp, #-16]
   468a8:	ldr	r1, [r3, #40]	; 0x28
   468ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   468b0:	add	r3, r1, r3
   468b4:	lsl	r3, r3, #2
   468b8:	add	r3, r2, r3
   468bc:	ldr	r3, [r3]
   468c0:	cmn	r3, #1
   468c4:	beq	4691c <__assert_fail@plt+0x34230>
   468c8:	ldr	r3, [fp, #-16]
   468cc:	ldr	r2, [r3, #28]
   468d0:	ldr	r3, [fp, #-16]
   468d4:	ldr	r1, [r3, #40]	; 0x28
   468d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   468dc:	add	r3, r1, r3
   468e0:	add	r3, r3, #1
   468e4:	cmp	r2, r3
   468e8:	beq	46940 <__assert_fail@plt+0x34254>
   468ec:	ldr	r3, [fp, #-16]
   468f0:	ldr	r2, [r3, #8]
   468f4:	ldr	r3, [fp, #-16]
   468f8:	ldr	r1, [r3, #40]	; 0x28
   468fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   46900:	add	r3, r1, r3
   46904:	add	r3, r3, #1
   46908:	lsl	r3, r3, #2
   4690c:	add	r3, r2, r3
   46910:	ldr	r3, [r3]
   46914:	cmn	r3, #1
   46918:	bne	46940 <__assert_fail@plt+0x34254>
   4691c:	ldr	r3, [fp, #-16]
   46920:	ldr	r3, [r3, #4]
   46924:	ldr	r2, [fp, #-16]
   46928:	ldr	r1, [r2, #40]	; 0x28
   4692c:	ldr	r2, [fp, #-20]	; 0xffffffec
   46930:	add	r2, r1, r2
   46934:	add	r3, r3, r2
   46938:	ldrb	r3, [r3]
   4693c:	b	469f0 <__assert_fail@plt+0x34304>
   46940:	ldr	r3, [fp, #-16]
   46944:	ldr	r2, [r3, #40]	; 0x28
   46948:	ldr	r3, [fp, #-20]	; 0xffffffec
   4694c:	add	r3, r2, r3
   46950:	str	r3, [fp, #-8]
   46954:	ldr	r3, [fp, #-16]
   46958:	ldrb	r3, [r3, #76]	; 0x4c
   4695c:	cmp	r3, #0
   46960:	beq	46980 <__assert_fail@plt+0x34294>
   46964:	ldr	r3, [fp, #-16]
   46968:	ldr	r2, [r3, #12]
   4696c:	ldr	r3, [fp, #-8]
   46970:	lsl	r3, r3, #2
   46974:	add	r3, r2, r3
   46978:	ldr	r3, [r3]
   4697c:	str	r3, [fp, #-8]
   46980:	ldr	r3, [fp, #-16]
   46984:	ldr	r3, [r3]
   46988:	ldr	r2, [fp, #-16]
   4698c:	ldr	r1, [r2, #24]
   46990:	ldr	r2, [fp, #-8]
   46994:	add	r2, r1, r2
   46998:	add	r3, r3, r2
   4699c:	ldrb	r3, [r3]
   469a0:	str	r3, [fp, #-12]
   469a4:	ldr	r3, [fp, #-16]
   469a8:	ldrb	r3, [r3, #76]	; 0x4c
   469ac:	cmp	r3, #0
   469b0:	beq	469e8 <__assert_fail@plt+0x342fc>
   469b4:	ldr	r3, [fp, #-12]
   469b8:	bic	r3, r3, #127	; 0x7f
   469bc:	cmp	r3, #0
   469c0:	beq	469e8 <__assert_fail@plt+0x342fc>
   469c4:	ldr	r3, [fp, #-16]
   469c8:	ldr	r3, [r3, #4]
   469cc:	ldr	r2, [fp, #-16]
   469d0:	ldr	r1, [r2, #40]	; 0x28
   469d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   469d8:	add	r2, r1, r2
   469dc:	add	r3, r3, r2
   469e0:	ldrb	r3, [r3]
   469e4:	b	469f0 <__assert_fail@plt+0x34304>
   469e8:	ldr	r3, [fp, #-12]
   469ec:	uxtb	r3, r3
   469f0:	mov	r0, r3
   469f4:	add	sp, fp, #0
   469f8:	pop	{fp}		; (ldr fp, [sp], #4)
   469fc:	bx	lr
   46a00:	push	{r4, fp, lr}
   46a04:	add	fp, sp, #8
   46a08:	sub	sp, sp, #20
   46a0c:	str	r0, [fp, #-24]	; 0xffffffe8
   46a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a14:	ldrb	r3, [r3, #75]	; 0x4b
   46a18:	cmp	r3, #0
   46a1c:	moveq	r3, #1
   46a20:	movne	r3, #0
   46a24:	uxtb	r3, r3
   46a28:	cmp	r3, #0
   46a2c:	beq	46a58 <__assert_fail@plt+0x3436c>
   46a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a34:	ldr	r2, [r3, #4]
   46a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a3c:	ldr	r3, [r3, #40]	; 0x28
   46a40:	add	r0, r3, #1
   46a44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46a48:	str	r0, [r1, #40]	; 0x28
   46a4c:	add	r3, r2, r3
   46a50:	ldrb	r3, [r3]
   46a54:	b	46bb0 <__assert_fail@plt+0x344c4>
   46a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a5c:	ldrb	r3, [r3, #76]	; 0x4c
   46a60:	cmp	r3, #0
   46a64:	beq	46b80 <__assert_fail@plt+0x34494>
   46a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a6c:	ldr	r2, [r3, #40]	; 0x28
   46a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a74:	ldr	r3, [r3, #28]
   46a78:	cmp	r2, r3
   46a7c:	beq	46acc <__assert_fail@plt+0x343e0>
   46a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a84:	ldr	r2, [r3, #8]
   46a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46a8c:	ldr	r3, [r3, #40]	; 0x28
   46a90:	lsl	r3, r3, #2
   46a94:	add	r3, r2, r3
   46a98:	ldr	r3, [r3]
   46a9c:	cmn	r3, #1
   46aa0:	bne	46acc <__assert_fail@plt+0x343e0>
   46aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46aa8:	ldr	r2, [r3, #4]
   46aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46ab0:	ldr	r3, [r3, #40]	; 0x28
   46ab4:	add	r0, r3, #1
   46ab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46abc:	str	r0, [r1, #40]	; 0x28
   46ac0:	add	r3, r2, r3
   46ac4:	ldrb	r3, [r3]
   46ac8:	b	46bb0 <__assert_fail@plt+0x344c4>
   46acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46ad0:	ldr	r2, [r3, #12]
   46ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46ad8:	ldr	r3, [r3, #40]	; 0x28
   46adc:	lsl	r3, r3, #2
   46ae0:	add	r3, r2, r3
   46ae4:	ldr	r3, [r3]
   46ae8:	str	r3, [fp, #-16]
   46aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46af0:	ldr	r3, [r3]
   46af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46af8:	ldr	r1, [r2, #24]
   46afc:	ldr	r2, [fp, #-16]
   46b00:	add	r2, r1, r2
   46b04:	add	r3, r3, r2
   46b08:	ldrb	r3, [r3]
   46b0c:	str	r3, [fp, #-20]	; 0xffffffec
   46b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   46b14:	bic	r3, r3, #127	; 0x7f
   46b18:	cmp	r3, #0
   46b1c:	beq	46b48 <__assert_fail@plt+0x3445c>
   46b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b24:	ldr	r2, [r3, #4]
   46b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b2c:	ldr	r3, [r3, #40]	; 0x28
   46b30:	add	r0, r3, #1
   46b34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46b38:	str	r0, [r1, #40]	; 0x28
   46b3c:	add	r3, r2, r3
   46b40:	ldrb	r3, [r3]
   46b44:	b	46bb0 <__assert_fail@plt+0x344c4>
   46b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b4c:	ldr	r4, [r3, #40]	; 0x28
   46b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b54:	ldr	r3, [r3, #40]	; 0x28
   46b58:	mov	r1, r3
   46b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46b60:	bl	44274 <__assert_fail@plt+0x31b88>
   46b64:	mov	r3, r0
   46b68:	add	r2, r4, r3
   46b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b70:	str	r2, [r3, #40]	; 0x28
   46b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   46b78:	uxtb	r3, r3
   46b7c:	b	46bb0 <__assert_fail@plt+0x344c4>
   46b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b84:	ldr	r2, [r3]
   46b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b8c:	ldr	r1, [r3, #24]
   46b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46b94:	ldr	r3, [r3, #40]	; 0x28
   46b98:	add	ip, r3, #1
   46b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46ba0:	str	ip, [r0, #40]	; 0x28
   46ba4:	add	r3, r1, r3
   46ba8:	add	r3, r2, r3
   46bac:	ldrb	r3, [r3]
   46bb0:	mov	r0, r3
   46bb4:	sub	sp, fp, #8
   46bb8:	pop	{r4, fp, pc}
   46bbc:	push	{fp, lr}
   46bc0:	add	fp, sp, #4
   46bc4:	sub	sp, sp, #8
   46bc8:	str	r0, [fp, #-8]
   46bcc:	ldr	r3, [fp, #-8]
   46bd0:	ldr	r3, [r3, #8]
   46bd4:	mov	r0, r3
   46bd8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   46bdc:	ldr	r3, [fp, #-8]
   46be0:	ldr	r3, [r3, #12]
   46be4:	mov	r0, r3
   46be8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   46bec:	ldr	r3, [fp, #-8]
   46bf0:	ldrb	r3, [r3, #75]	; 0x4b
   46bf4:	cmp	r3, #0
   46bf8:	beq	46c0c <__assert_fail@plt+0x34520>
   46bfc:	ldr	r3, [fp, #-8]
   46c00:	ldr	r3, [r3, #4]
   46c04:	mov	r0, r3
   46c08:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   46c0c:	nop			; (mov r0, r0)
   46c10:	sub	sp, fp, #4
   46c14:	pop	{fp, pc}
   46c18:	push	{fp, lr}
   46c1c:	add	fp, sp, #4
   46c20:	sub	sp, sp, #32
   46c24:	str	r0, [fp, #-24]	; 0xffffffe8
   46c28:	str	r1, [fp, #-28]	; 0xffffffe4
   46c2c:	str	r2, [fp, #-32]	; 0xffffffe0
   46c30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46c34:	lsr	r3, r3, #31
   46c38:	uxtb	r3, r3
   46c3c:	cmp	r3, #0
   46c40:	beq	46c50 <__assert_fail@plt+0x34564>
   46c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46c48:	ldr	r3, [r3, #60]	; 0x3c
   46c4c:	b	46df4 <__assert_fail@plt+0x34708>
   46c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46c54:	ldr	r2, [r3, #48]	; 0x30
   46c58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46c5c:	cmp	r2, r3
   46c60:	moveq	r3, #1
   46c64:	movne	r3, #0
   46c68:	uxtb	r3, r3
   46c6c:	cmp	r3, #0
   46c70:	beq	46c94 <__assert_fail@plt+0x345a8>
   46c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   46c78:	and	r3, r3, #2
   46c7c:	cmp	r3, #0
   46c80:	beq	46c8c <__assert_fail@plt+0x345a0>
   46c84:	mov	r3, #8
   46c88:	b	46df4 <__assert_fail@plt+0x34708>
   46c8c:	mov	r3, #10
   46c90:	b	46df4 <__assert_fail@plt+0x34708>
   46c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46c98:	ldr	r3, [r3, #80]	; 0x50
   46c9c:	cmp	r3, #1
   46ca0:	ble	46d8c <__assert_fail@plt+0x346a0>
   46ca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46ca8:	str	r3, [fp, #-8]
   46cac:	b	46cdc <__assert_fail@plt+0x345f0>
   46cb0:	ldr	r3, [fp, #-8]
   46cb4:	cmp	r3, #0
   46cb8:	ldr	r3, [fp, #-8]
   46cbc:	sub	r3, r3, #1
   46cc0:	str	r3, [fp, #-8]
   46cc4:	ldr	r3, [fp, #-8]
   46cc8:	cmp	r3, #0
   46ccc:	bge	46cdc <__assert_fail@plt+0x345f0>
   46cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46cd4:	ldr	r3, [r3, #60]	; 0x3c
   46cd8:	b	46df4 <__assert_fail@plt+0x34708>
   46cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46ce0:	ldr	r2, [r3, #8]
   46ce4:	ldr	r3, [fp, #-8]
   46ce8:	lsl	r3, r3, #2
   46cec:	add	r3, r2, r3
   46cf0:	ldr	r3, [r3]
   46cf4:	cmn	r3, #1
   46cf8:	beq	46cb0 <__assert_fail@plt+0x345c4>
   46cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46d00:	ldr	r2, [r3, #8]
   46d04:	ldr	r3, [fp, #-8]
   46d08:	lsl	r3, r3, #2
   46d0c:	add	r3, r2, r3
   46d10:	ldr	r3, [r3]
   46d14:	str	r3, [fp, #-12]
   46d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46d1c:	ldrb	r3, [r3, #78]	; 0x4e
   46d20:	cmp	r3, #0
   46d24:	movne	r3, #1
   46d28:	moveq	r3, #0
   46d2c:	uxtb	r3, r3
   46d30:	cmp	r3, #0
   46d34:	beq	46d60 <__assert_fail@plt+0x34674>
   46d38:	ldr	r0, [fp, #-12]
   46d3c:	bl	12410 <iswalnum@plt>
   46d40:	mov	r3, r0
   46d44:	cmp	r3, #0
   46d48:	bne	46d58 <__assert_fail@plt+0x3466c>
   46d4c:	ldr	r3, [fp, #-12]
   46d50:	cmp	r3, #95	; 0x5f
   46d54:	bne	46d60 <__assert_fail@plt+0x34674>
   46d58:	mov	r3, #1
   46d5c:	b	46df4 <__assert_fail@plt+0x34708>
   46d60:	ldr	r3, [fp, #-12]
   46d64:	cmp	r3, #10
   46d68:	bne	46d84 <__assert_fail@plt+0x34698>
   46d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46d70:	ldrb	r3, [r3, #77]	; 0x4d
   46d74:	cmp	r3, #0
   46d78:	beq	46d84 <__assert_fail@plt+0x34698>
   46d7c:	mov	r3, #2
   46d80:	b	46df4 <__assert_fail@plt+0x34708>
   46d84:	mov	r3, #0
   46d88:	b	46df4 <__assert_fail@plt+0x34708>
   46d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46d90:	ldr	r2, [r3, #4]
   46d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46d98:	add	r3, r2, r3
   46d9c:	ldrb	r3, [r3]
   46da0:	str	r3, [fp, #-16]
   46da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46da8:	ldr	r3, [r3, #68]	; 0x44
   46dac:	ldr	r1, [fp, #-16]
   46db0:	mov	r0, r3
   46db4:	bl	43ff0 <__assert_fail@plt+0x31904>
   46db8:	mov	r3, r0
   46dbc:	cmp	r3, #0
   46dc0:	beq	46dcc <__assert_fail@plt+0x346e0>
   46dc4:	mov	r3, #1
   46dc8:	b	46df4 <__assert_fail@plt+0x34708>
   46dcc:	ldr	r3, [fp, #-16]
   46dd0:	cmp	r3, #10
   46dd4:	bne	46df0 <__assert_fail@plt+0x34704>
   46dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46ddc:	ldrb	r3, [r3, #77]	; 0x4d
   46de0:	cmp	r3, #0
   46de4:	beq	46df0 <__assert_fail@plt+0x34704>
   46de8:	mov	r3, #2
   46dec:	b	46df4 <__assert_fail@plt+0x34708>
   46df0:	mov	r3, #0
   46df4:	mov	r0, r3
   46df8:	sub	sp, fp, #4
   46dfc:	pop	{fp, pc}
   46e00:	push	{fp, lr}
   46e04:	add	fp, sp, #4
   46e08:	sub	sp, sp, #8
   46e0c:	str	r0, [fp, #-8]
   46e10:	str	r1, [fp, #-12]
   46e14:	ldr	r3, [fp, #-8]
   46e18:	ldr	r2, [fp, #-12]
   46e1c:	str	r2, [r3]
   46e20:	ldr	r3, [fp, #-8]
   46e24:	mov	r2, #0
   46e28:	str	r2, [r3, #4]
   46e2c:	ldr	r3, [fp, #-12]
   46e30:	lsl	r3, r3, #2
   46e34:	mov	r0, r3
   46e38:	bl	42ba8 <__assert_fail@plt+0x304bc>
   46e3c:	mov	r3, r0
   46e40:	mov	r2, r3
   46e44:	ldr	r3, [fp, #-8]
   46e48:	str	r2, [r3, #8]
   46e4c:	ldr	r3, [fp, #-8]
   46e50:	ldr	r3, [r3, #8]
   46e54:	cmp	r3, #0
   46e58:	moveq	r3, #1
   46e5c:	movne	r3, #0
   46e60:	uxtb	r3, r3
   46e64:	cmp	r3, #0
   46e68:	beq	46e74 <__assert_fail@plt+0x34788>
   46e6c:	mov	r3, #12
   46e70:	b	46e78 <__assert_fail@plt+0x3478c>
   46e74:	mov	r3, #0
   46e78:	mov	r0, r3
   46e7c:	sub	sp, fp, #4
   46e80:	pop	{fp, pc}
   46e84:	push	{fp, lr}
   46e88:	add	fp, sp, #4
   46e8c:	sub	sp, sp, #8
   46e90:	str	r0, [fp, #-8]
   46e94:	str	r1, [fp, #-12]
   46e98:	ldr	r3, [fp, #-8]
   46e9c:	mov	r2, #1
   46ea0:	str	r2, [r3]
   46ea4:	ldr	r3, [fp, #-8]
   46ea8:	mov	r2, #1
   46eac:	str	r2, [r3, #4]
   46eb0:	mov	r0, #4
   46eb4:	bl	42ba8 <__assert_fail@plt+0x304bc>
   46eb8:	mov	r3, r0
   46ebc:	mov	r2, r3
   46ec0:	ldr	r3, [fp, #-8]
   46ec4:	str	r2, [r3, #8]
   46ec8:	ldr	r3, [fp, #-8]
   46ecc:	ldr	r3, [r3, #8]
   46ed0:	cmp	r3, #0
   46ed4:	moveq	r3, #1
   46ed8:	movne	r3, #0
   46edc:	uxtb	r3, r3
   46ee0:	cmp	r3, #0
   46ee4:	beq	46f0c <__assert_fail@plt+0x34820>
   46ee8:	ldr	r3, [fp, #-8]
   46eec:	mov	r2, #0
   46ef0:	str	r2, [r3, #4]
   46ef4:	ldr	r3, [fp, #-8]
   46ef8:	ldr	r2, [r3, #4]
   46efc:	ldr	r3, [fp, #-8]
   46f00:	str	r2, [r3]
   46f04:	mov	r3, #12
   46f08:	b	46f20 <__assert_fail@plt+0x34834>
   46f0c:	ldr	r3, [fp, #-8]
   46f10:	ldr	r3, [r3, #8]
   46f14:	ldr	r2, [fp, #-12]
   46f18:	str	r2, [r3]
   46f1c:	mov	r3, #0
   46f20:	mov	r0, r3
   46f24:	sub	sp, fp, #4
   46f28:	pop	{fp, pc}
   46f2c:	push	{fp, lr}
   46f30:	add	fp, sp, #4
   46f34:	sub	sp, sp, #16
   46f38:	str	r0, [fp, #-8]
   46f3c:	str	r1, [fp, #-12]
   46f40:	str	r2, [fp, #-16]
   46f44:	ldr	r3, [fp, #-8]
   46f48:	mov	r2, #2
   46f4c:	str	r2, [r3]
   46f50:	mov	r0, #8
   46f54:	bl	42ba8 <__assert_fail@plt+0x304bc>
   46f58:	mov	r3, r0
   46f5c:	mov	r2, r3
   46f60:	ldr	r3, [fp, #-8]
   46f64:	str	r2, [r3, #8]
   46f68:	ldr	r3, [fp, #-8]
   46f6c:	ldr	r3, [r3, #8]
   46f70:	cmp	r3, #0
   46f74:	moveq	r3, #1
   46f78:	movne	r3, #0
   46f7c:	uxtb	r3, r3
   46f80:	cmp	r3, #0
   46f84:	beq	46f90 <__assert_fail@plt+0x348a4>
   46f88:	mov	r3, #12
   46f8c:	b	4702c <__assert_fail@plt+0x34940>
   46f90:	ldr	r2, [fp, #-12]
   46f94:	ldr	r3, [fp, #-16]
   46f98:	cmp	r2, r3
   46f9c:	bne	46fc0 <__assert_fail@plt+0x348d4>
   46fa0:	ldr	r3, [fp, #-8]
   46fa4:	mov	r2, #1
   46fa8:	str	r2, [r3, #4]
   46fac:	ldr	r3, [fp, #-8]
   46fb0:	ldr	r3, [r3, #8]
   46fb4:	ldr	r2, [fp, #-12]
   46fb8:	str	r2, [r3]
   46fbc:	b	47028 <__assert_fail@plt+0x3493c>
   46fc0:	ldr	r3, [fp, #-8]
   46fc4:	mov	r2, #2
   46fc8:	str	r2, [r3, #4]
   46fcc:	ldr	r2, [fp, #-12]
   46fd0:	ldr	r3, [fp, #-16]
   46fd4:	cmp	r2, r3
   46fd8:	bge	47004 <__assert_fail@plt+0x34918>
   46fdc:	ldr	r3, [fp, #-8]
   46fe0:	ldr	r3, [r3, #8]
   46fe4:	ldr	r2, [fp, #-12]
   46fe8:	str	r2, [r3]
   46fec:	ldr	r3, [fp, #-8]
   46ff0:	ldr	r3, [r3, #8]
   46ff4:	add	r3, r3, #4
   46ff8:	ldr	r2, [fp, #-16]
   46ffc:	str	r2, [r3]
   47000:	b	47028 <__assert_fail@plt+0x3493c>
   47004:	ldr	r3, [fp, #-8]
   47008:	ldr	r3, [r3, #8]
   4700c:	ldr	r2, [fp, #-16]
   47010:	str	r2, [r3]
   47014:	ldr	r3, [fp, #-8]
   47018:	ldr	r3, [r3, #8]
   4701c:	add	r3, r3, #4
   47020:	ldr	r2, [fp, #-12]
   47024:	str	r2, [r3]
   47028:	mov	r3, #0
   4702c:	mov	r0, r3
   47030:	sub	sp, fp, #4
   47034:	pop	{fp, pc}
   47038:	push	{fp, lr}
   4703c:	add	fp, sp, #4
   47040:	sub	sp, sp, #8
   47044:	str	r0, [fp, #-8]
   47048:	str	r1, [fp, #-12]
   4704c:	ldr	r3, [fp, #-12]
   47050:	ldr	r2, [r3, #4]
   47054:	ldr	r3, [fp, #-8]
   47058:	str	r2, [r3, #4]
   4705c:	ldr	r3, [fp, #-12]
   47060:	ldr	r3, [r3, #4]
   47064:	cmp	r3, #0
   47068:	ble	4710c <__assert_fail@plt+0x34a20>
   4706c:	ldr	r3, [fp, #-8]
   47070:	ldr	r2, [r3, #4]
   47074:	ldr	r3, [fp, #-8]
   47078:	str	r2, [r3]
   4707c:	ldr	r3, [fp, #-8]
   47080:	ldr	r3, [r3]
   47084:	lsl	r3, r3, #2
   47088:	mov	r0, r3
   4708c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   47090:	mov	r3, r0
   47094:	mov	r2, r3
   47098:	ldr	r3, [fp, #-8]
   4709c:	str	r2, [r3, #8]
   470a0:	ldr	r3, [fp, #-8]
   470a4:	ldr	r3, [r3, #8]
   470a8:	cmp	r3, #0
   470ac:	moveq	r3, #1
   470b0:	movne	r3, #0
   470b4:	uxtb	r3, r3
   470b8:	cmp	r3, #0
   470bc:	beq	470e4 <__assert_fail@plt+0x349f8>
   470c0:	ldr	r3, [fp, #-8]
   470c4:	mov	r2, #0
   470c8:	str	r2, [r3, #4]
   470cc:	ldr	r3, [fp, #-8]
   470d0:	ldr	r2, [r3, #4]
   470d4:	ldr	r3, [fp, #-8]
   470d8:	str	r2, [r3]
   470dc:	mov	r3, #12
   470e0:	b	47120 <__assert_fail@plt+0x34a34>
   470e4:	ldr	r3, [fp, #-8]
   470e8:	ldr	r0, [r3, #8]
   470ec:	ldr	r3, [fp, #-12]
   470f0:	ldr	r1, [r3, #8]
   470f4:	ldr	r3, [fp, #-12]
   470f8:	ldr	r3, [r3, #4]
   470fc:	lsl	r3, r3, #2
   47100:	mov	r2, r3
   47104:	bl	120f8 <memcpy@plt>
   47108:	b	4711c <__assert_fail@plt+0x34a30>
   4710c:	mov	r2, #12
   47110:	mov	r1, #0
   47114:	ldr	r0, [fp, #-8]
   47118:	bl	12434 <memset@plt>
   4711c:	mov	r3, #0
   47120:	mov	r0, r3
   47124:	sub	sp, fp, #4
   47128:	pop	{fp, pc}
   4712c:	push	{fp, lr}
   47130:	add	fp, sp, #4
   47134:	sub	sp, sp, #48	; 0x30
   47138:	str	r0, [fp, #-40]	; 0xffffffd8
   4713c:	str	r1, [fp, #-44]	; 0xffffffd4
   47140:	str	r2, [fp, #-48]	; 0xffffffd0
   47144:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47148:	ldr	r3, [r3, #4]
   4714c:	cmp	r3, #0
   47150:	beq	47164 <__assert_fail@plt+0x34a78>
   47154:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47158:	ldr	r3, [r3, #4]
   4715c:	cmp	r3, #0
   47160:	bne	4716c <__assert_fail@plt+0x34a80>
   47164:	mov	r3, #0
   47168:	b	475b8 <__assert_fail@plt+0x34ecc>
   4716c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47170:	ldr	r2, [r3, #4]
   47174:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47178:	ldr	r3, [r3, #4]
   4717c:	add	r2, r2, r3
   47180:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47184:	ldr	r3, [r3, #4]
   47188:	add	r2, r2, r3
   4718c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47190:	ldr	r3, [r3]
   47194:	cmp	r2, r3
   47198:	ble	4721c <__assert_fail@plt+0x34b30>
   4719c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   471a0:	ldr	r2, [r3, #4]
   471a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   471a8:	ldr	r3, [r3, #4]
   471ac:	add	r2, r2, r3
   471b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   471b4:	ldr	r3, [r3]
   471b8:	add	r3, r2, r3
   471bc:	str	r3, [fp, #-32]	; 0xffffffe0
   471c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   471c4:	ldr	r2, [r3, #8]
   471c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   471cc:	lsl	r3, r3, #2
   471d0:	mov	r1, r3
   471d4:	mov	r0, r2
   471d8:	bl	43d30 <__assert_fail@plt+0x31644>
   471dc:	str	r0, [fp, #-36]	; 0xffffffdc
   471e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   471e4:	cmp	r3, #0
   471e8:	moveq	r3, #1
   471ec:	movne	r3, #0
   471f0:	uxtb	r3, r3
   471f4:	cmp	r3, #0
   471f8:	beq	47204 <__assert_fail@plt+0x34b18>
   471fc:	mov	r3, #12
   47200:	b	475b8 <__assert_fail@plt+0x34ecc>
   47204:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47208:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4720c:	str	r2, [r3, #8]
   47210:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47214:	ldr	r2, [fp, #-32]	; 0xffffffe0
   47218:	str	r2, [r3]
   4721c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47220:	ldr	r2, [r3, #4]
   47224:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47228:	ldr	r3, [r3, #4]
   4722c:	add	r2, r2, r3
   47230:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47234:	ldr	r3, [r3, #4]
   47238:	add	r3, r2, r3
   4723c:	str	r3, [fp, #-28]	; 0xffffffe4
   47240:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47244:	ldr	r3, [r3, #4]
   47248:	sub	r3, r3, #1
   4724c:	str	r3, [fp, #-8]
   47250:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47254:	ldr	r3, [r3, #4]
   47258:	sub	r3, r3, #1
   4725c:	str	r3, [fp, #-12]
   47260:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47264:	ldr	r3, [r3, #4]
   47268:	sub	r3, r3, #1
   4726c:	str	r3, [fp, #-20]	; 0xffffffec
   47270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47274:	ldr	r2, [r3, #8]
   47278:	ldr	r3, [fp, #-8]
   4727c:	lsl	r3, r3, #2
   47280:	add	r3, r2, r3
   47284:	ldr	r2, [r3]
   47288:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4728c:	ldr	r1, [r3, #8]
   47290:	ldr	r3, [fp, #-12]
   47294:	lsl	r3, r3, #2
   47298:	add	r3, r1, r3
   4729c:	ldr	r3, [r3]
   472a0:	cmp	r2, r3
   472a4:	bne	473b0 <__assert_fail@plt+0x34cc4>
   472a8:	b	472b8 <__assert_fail@plt+0x34bcc>
   472ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   472b0:	sub	r3, r3, #1
   472b4:	str	r3, [fp, #-20]	; 0xffffffec
   472b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   472bc:	cmp	r3, #0
   472c0:	blt	472fc <__assert_fail@plt+0x34c10>
   472c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   472c8:	ldr	r2, [r3, #8]
   472cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   472d0:	lsl	r3, r3, #2
   472d4:	add	r3, r2, r3
   472d8:	ldr	r2, [r3]
   472dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   472e0:	ldr	r1, [r3, #8]
   472e4:	ldr	r3, [fp, #-8]
   472e8:	lsl	r3, r3, #2
   472ec:	add	r3, r1, r3
   472f0:	ldr	r3, [r3]
   472f4:	cmp	r2, r3
   472f8:	bgt	472ac <__assert_fail@plt+0x34bc0>
   472fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   47300:	cmp	r3, #0
   47304:	blt	47340 <__assert_fail@plt+0x34c54>
   47308:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4730c:	ldr	r2, [r3, #8]
   47310:	ldr	r3, [fp, #-20]	; 0xffffffec
   47314:	lsl	r3, r3, #2
   47318:	add	r3, r2, r3
   4731c:	ldr	r2, [r3]
   47320:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47324:	ldr	r1, [r3, #8]
   47328:	ldr	r3, [fp, #-8]
   4732c:	lsl	r3, r3, #2
   47330:	add	r3, r1, r3
   47334:	ldr	r3, [r3]
   47338:	cmp	r2, r3
   4733c:	beq	4737c <__assert_fail@plt+0x34c90>
   47340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47344:	ldr	r2, [r3, #8]
   47348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4734c:	sub	r3, r3, #1
   47350:	str	r3, [fp, #-28]	; 0xffffffe4
   47354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47358:	lsl	r3, r3, #2
   4735c:	add	r3, r2, r3
   47360:	ldr	r2, [fp, #-44]	; 0xffffffd4
   47364:	ldr	r1, [r2, #8]
   47368:	ldr	r2, [fp, #-8]
   4736c:	lsl	r2, r2, #2
   47370:	add	r2, r1, r2
   47374:	ldr	r2, [r2]
   47378:	str	r2, [r3]
   4737c:	ldr	r3, [fp, #-8]
   47380:	sub	r3, r3, #1
   47384:	str	r3, [fp, #-8]
   47388:	ldr	r3, [fp, #-8]
   4738c:	cmp	r3, #0
   47390:	blt	47424 <__assert_fail@plt+0x34d38>
   47394:	ldr	r3, [fp, #-12]
   47398:	sub	r3, r3, #1
   4739c:	str	r3, [fp, #-12]
   473a0:	ldr	r3, [fp, #-12]
   473a4:	cmp	r3, #0
   473a8:	blt	47424 <__assert_fail@plt+0x34d38>
   473ac:	b	47270 <__assert_fail@plt+0x34b84>
   473b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   473b4:	ldr	r2, [r3, #8]
   473b8:	ldr	r3, [fp, #-8]
   473bc:	lsl	r3, r3, #2
   473c0:	add	r3, r2, r3
   473c4:	ldr	r2, [r3]
   473c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   473cc:	ldr	r1, [r3, #8]
   473d0:	ldr	r3, [fp, #-12]
   473d4:	lsl	r3, r3, #2
   473d8:	add	r3, r1, r3
   473dc:	ldr	r3, [r3]
   473e0:	cmp	r2, r3
   473e4:	bge	47404 <__assert_fail@plt+0x34d18>
   473e8:	ldr	r3, [fp, #-12]
   473ec:	sub	r3, r3, #1
   473f0:	str	r3, [fp, #-12]
   473f4:	ldr	r3, [fp, #-12]
   473f8:	cmp	r3, #0
   473fc:	bge	47270 <__assert_fail@plt+0x34b84>
   47400:	b	47424 <__assert_fail@plt+0x34d38>
   47404:	ldr	r3, [fp, #-8]
   47408:	sub	r3, r3, #1
   4740c:	str	r3, [fp, #-8]
   47410:	ldr	r3, [fp, #-8]
   47414:	cmp	r3, #0
   47418:	blt	47420 <__assert_fail@plt+0x34d34>
   4741c:	b	47270 <__assert_fail@plt+0x34b84>
   47420:	nop			; (mov r0, r0)
   47424:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47428:	ldr	r3, [r3, #4]
   4742c:	sub	r3, r3, #1
   47430:	str	r3, [fp, #-20]	; 0xffffffec
   47434:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47438:	ldr	r2, [r3, #4]
   4743c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47440:	ldr	r3, [r3, #4]
   47444:	add	r2, r2, r3
   47448:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4744c:	ldr	r3, [r3, #4]
   47450:	add	r3, r2, r3
   47454:	sub	r3, r3, #1
   47458:	str	r3, [fp, #-16]
   4745c:	ldr	r2, [fp, #-16]
   47460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47464:	sub	r3, r2, r3
   47468:	add	r3, r3, #1
   4746c:	str	r3, [fp, #-24]	; 0xffffffe8
   47470:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47474:	ldr	r2, [r3, #4]
   47478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4747c:	add	r2, r2, r3
   47480:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47484:	str	r2, [r3, #4]
   47488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4748c:	cmp	r3, #0
   47490:	ble	47588 <__assert_fail@plt+0x34e9c>
   47494:	ldr	r3, [fp, #-20]	; 0xffffffec
   47498:	cmp	r3, #0
   4749c:	blt	47588 <__assert_fail@plt+0x34e9c>
   474a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   474a4:	ldr	r2, [r3, #8]
   474a8:	ldr	r3, [fp, #-16]
   474ac:	lsl	r3, r3, #2
   474b0:	add	r3, r2, r3
   474b4:	ldr	r2, [r3]
   474b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   474bc:	ldr	r1, [r3, #8]
   474c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   474c4:	lsl	r3, r3, #2
   474c8:	add	r3, r1, r3
   474cc:	ldr	r3, [r3]
   474d0:	cmp	r2, r3
   474d4:	ble	47530 <__assert_fail@plt+0x34e44>
   474d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   474dc:	ldr	r2, [r3, #8]
   474e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   474e4:	sub	r1, r3, #1
   474e8:	str	r1, [fp, #-24]	; 0xffffffe8
   474ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   474f0:	add	r3, r3, r1
   474f4:	lsl	r3, r3, #2
   474f8:	add	r2, r2, r3
   474fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47500:	ldr	r1, [r3, #8]
   47504:	ldr	r3, [fp, #-16]
   47508:	sub	r0, r3, #1
   4750c:	str	r0, [fp, #-16]
   47510:	lsl	r3, r3, #2
   47514:	add	r3, r1, r3
   47518:	ldr	r3, [r3]
   4751c:	str	r3, [r2]
   47520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47524:	cmp	r3, #0
   47528:	bne	474a0 <__assert_fail@plt+0x34db4>
   4752c:	b	47588 <__assert_fail@plt+0x34e9c>
   47530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47534:	ldr	r2, [r3, #8]
   47538:	ldr	r1, [fp, #-20]	; 0xffffffec
   4753c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47540:	add	r3, r1, r3
   47544:	lsl	r3, r3, #2
   47548:	add	r3, r2, r3
   4754c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   47550:	ldr	r1, [r2, #8]
   47554:	ldr	r2, [fp, #-20]	; 0xffffffec
   47558:	lsl	r2, r2, #2
   4755c:	add	r2, r1, r2
   47560:	ldr	r2, [r2]
   47564:	str	r2, [r3]
   47568:	ldr	r3, [fp, #-20]	; 0xffffffec
   4756c:	sub	r3, r3, #1
   47570:	str	r3, [fp, #-20]	; 0xffffffec
   47574:	ldr	r3, [fp, #-20]	; 0xffffffec
   47578:	cmp	r3, #0
   4757c:	blt	47584 <__assert_fail@plt+0x34e98>
   47580:	b	474a0 <__assert_fail@plt+0x34db4>
   47584:	nop			; (mov r0, r0)
   47588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4758c:	ldr	r0, [r3, #8]
   47590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47594:	ldr	r2, [r3, #8]
   47598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4759c:	lsl	r3, r3, #2
   475a0:	add	r1, r2, r3
   475a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   475a8:	lsl	r3, r3, #2
   475ac:	mov	r2, r3
   475b0:	bl	120f8 <memcpy@plt>
   475b4:	mov	r3, #0
   475b8:	mov	r0, r3
   475bc:	sub	sp, fp, #4
   475c0:	pop	{fp, pc}
   475c4:	push	{fp, lr}
   475c8:	add	fp, sp, #4
   475cc:	sub	sp, sp, #32
   475d0:	str	r0, [fp, #-24]	; 0xffffffe8
   475d4:	str	r1, [fp, #-28]	; 0xffffffe4
   475d8:	str	r2, [fp, #-32]	; 0xffffffe0
   475dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   475e0:	cmp	r3, #0
   475e4:	beq	4767c <__assert_fail@plt+0x34f90>
   475e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   475ec:	ldr	r3, [r3, #4]
   475f0:	cmp	r3, #0
   475f4:	ble	4767c <__assert_fail@plt+0x34f90>
   475f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   475fc:	cmp	r3, #0
   47600:	beq	4767c <__assert_fail@plt+0x34f90>
   47604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47608:	ldr	r3, [r3, #4]
   4760c:	cmp	r3, #0
   47610:	ble	4767c <__assert_fail@plt+0x34f90>
   47614:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47618:	ldr	r2, [r3, #4]
   4761c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47620:	ldr	r3, [r3, #4]
   47624:	add	r2, r2, r3
   47628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4762c:	str	r2, [r3]
   47630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47634:	ldr	r3, [r3]
   47638:	lsl	r3, r3, #2
   4763c:	mov	r0, r3
   47640:	bl	42ba8 <__assert_fail@plt+0x304bc>
   47644:	mov	r3, r0
   47648:	mov	r2, r3
   4764c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47650:	str	r2, [r3, #8]
   47654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47658:	ldr	r3, [r3, #8]
   4765c:	cmp	r3, #0
   47660:	moveq	r3, #1
   47664:	movne	r3, #0
   47668:	uxtb	r3, r3
   4766c:	cmp	r3, #0
   47670:	beq	476f4 <__assert_fail@plt+0x35008>
   47674:	mov	r3, #12
   47678:	b	47934 <__assert_fail@plt+0x35248>
   4767c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47680:	cmp	r3, #0
   47684:	beq	476ac <__assert_fail@plt+0x34fc0>
   47688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4768c:	ldr	r3, [r3, #4]
   47690:	cmp	r3, #0
   47694:	ble	476ac <__assert_fail@plt+0x34fc0>
   47698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   476a0:	bl	47038 <__assert_fail@plt+0x3494c>
   476a4:	mov	r3, r0
   476a8:	b	47934 <__assert_fail@plt+0x35248>
   476ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   476b0:	cmp	r3, #0
   476b4:	beq	476dc <__assert_fail@plt+0x34ff0>
   476b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   476bc:	ldr	r3, [r3, #4]
   476c0:	cmp	r3, #0
   476c4:	ble	476dc <__assert_fail@plt+0x34ff0>
   476c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   476cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   476d0:	bl	47038 <__assert_fail@plt+0x3494c>
   476d4:	mov	r3, r0
   476d8:	b	47934 <__assert_fail@plt+0x35248>
   476dc:	mov	r2, #12
   476e0:	mov	r1, #0
   476e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   476e8:	bl	12434 <memset@plt>
   476ec:	mov	r3, #0
   476f0:	b	47934 <__assert_fail@plt+0x35248>
   476f4:	mov	r3, #0
   476f8:	str	r3, [fp, #-16]
   476fc:	ldr	r3, [fp, #-16]
   47700:	str	r3, [fp, #-12]
   47704:	ldr	r3, [fp, #-12]
   47708:	str	r3, [fp, #-8]
   4770c:	b	47810 <__assert_fail@plt+0x35124>
   47710:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47714:	ldr	r2, [r3, #8]
   47718:	ldr	r3, [fp, #-8]
   4771c:	lsl	r3, r3, #2
   47720:	add	r3, r2, r3
   47724:	ldr	r2, [r3]
   47728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4772c:	ldr	r1, [r3, #8]
   47730:	ldr	r3, [fp, #-12]
   47734:	lsl	r3, r3, #2
   47738:	add	r3, r1, r3
   4773c:	ldr	r3, [r3]
   47740:	cmp	r2, r3
   47744:	ble	4778c <__assert_fail@plt+0x350a0>
   47748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4774c:	ldr	r2, [r3, #8]
   47750:	ldr	r3, [fp, #-16]
   47754:	add	r1, r3, #1
   47758:	str	r1, [fp, #-16]
   4775c:	lsl	r3, r3, #2
   47760:	add	r2, r2, r3
   47764:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47768:	ldr	r1, [r3, #8]
   4776c:	ldr	r3, [fp, #-12]
   47770:	add	r0, r3, #1
   47774:	str	r0, [fp, #-12]
   47778:	lsl	r3, r3, #2
   4777c:	add	r3, r1, r3
   47780:	ldr	r3, [r3]
   47784:	str	r3, [r2]
   47788:	b	47810 <__assert_fail@plt+0x35124>
   4778c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47790:	ldr	r2, [r3, #8]
   47794:	ldr	r3, [fp, #-8]
   47798:	lsl	r3, r3, #2
   4779c:	add	r3, r2, r3
   477a0:	ldr	r2, [r3]
   477a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   477a8:	ldr	r1, [r3, #8]
   477ac:	ldr	r3, [fp, #-12]
   477b0:	lsl	r3, r3, #2
   477b4:	add	r3, r1, r3
   477b8:	ldr	r3, [r3]
   477bc:	cmp	r2, r3
   477c0:	bne	477d0 <__assert_fail@plt+0x350e4>
   477c4:	ldr	r3, [fp, #-12]
   477c8:	add	r3, r3, #1
   477cc:	str	r3, [fp, #-12]
   477d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   477d4:	ldr	r2, [r3, #8]
   477d8:	ldr	r3, [fp, #-16]
   477dc:	add	r1, r3, #1
   477e0:	str	r1, [fp, #-16]
   477e4:	lsl	r3, r3, #2
   477e8:	add	r2, r2, r3
   477ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   477f0:	ldr	r1, [r3, #8]
   477f4:	ldr	r3, [fp, #-8]
   477f8:	add	r0, r3, #1
   477fc:	str	r0, [fp, #-8]
   47800:	lsl	r3, r3, #2
   47804:	add	r3, r1, r3
   47808:	ldr	r3, [r3]
   4780c:	str	r3, [r2]
   47810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47814:	ldr	r2, [r3, #4]
   47818:	ldr	r3, [fp, #-8]
   4781c:	cmp	r2, r3
   47820:	ble	47838 <__assert_fail@plt+0x3514c>
   47824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47828:	ldr	r2, [r3, #4]
   4782c:	ldr	r3, [fp, #-12]
   47830:	cmp	r2, r3
   47834:	bgt	47710 <__assert_fail@plt+0x35024>
   47838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4783c:	ldr	r2, [r3, #4]
   47840:	ldr	r3, [fp, #-8]
   47844:	cmp	r2, r3
   47848:	ble	478b0 <__assert_fail@plt+0x351c4>
   4784c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47850:	ldr	r2, [r3, #8]
   47854:	ldr	r3, [fp, #-16]
   47858:	lsl	r3, r3, #2
   4785c:	add	r0, r2, r3
   47860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47864:	ldr	r2, [r3, #8]
   47868:	ldr	r3, [fp, #-8]
   4786c:	lsl	r3, r3, #2
   47870:	add	r1, r2, r3
   47874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47878:	ldr	r2, [r3, #4]
   4787c:	ldr	r3, [fp, #-8]
   47880:	sub	r3, r2, r3
   47884:	lsl	r3, r3, #2
   47888:	mov	r2, r3
   4788c:	bl	120f8 <memcpy@plt>
   47890:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47894:	ldr	r2, [r3, #4]
   47898:	ldr	r3, [fp, #-8]
   4789c:	sub	r3, r2, r3
   478a0:	ldr	r2, [fp, #-16]
   478a4:	add	r3, r2, r3
   478a8:	str	r3, [fp, #-16]
   478ac:	b	47924 <__assert_fail@plt+0x35238>
   478b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   478b4:	ldr	r2, [r3, #4]
   478b8:	ldr	r3, [fp, #-12]
   478bc:	cmp	r2, r3
   478c0:	ble	47924 <__assert_fail@plt+0x35238>
   478c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   478c8:	ldr	r2, [r3, #8]
   478cc:	ldr	r3, [fp, #-16]
   478d0:	lsl	r3, r3, #2
   478d4:	add	r0, r2, r3
   478d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   478dc:	ldr	r2, [r3, #8]
   478e0:	ldr	r3, [fp, #-12]
   478e4:	lsl	r3, r3, #2
   478e8:	add	r1, r2, r3
   478ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   478f0:	ldr	r2, [r3, #4]
   478f4:	ldr	r3, [fp, #-12]
   478f8:	sub	r3, r2, r3
   478fc:	lsl	r3, r3, #2
   47900:	mov	r2, r3
   47904:	bl	120f8 <memcpy@plt>
   47908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4790c:	ldr	r2, [r3, #4]
   47910:	ldr	r3, [fp, #-12]
   47914:	sub	r3, r2, r3
   47918:	ldr	r2, [fp, #-16]
   4791c:	add	r3, r2, r3
   47920:	str	r3, [fp, #-16]
   47924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47928:	ldr	r2, [fp, #-16]
   4792c:	str	r2, [r3, #4]
   47930:	mov	r3, #0
   47934:	mov	r0, r3
   47938:	sub	sp, fp, #4
   4793c:	pop	{fp, pc}
   47940:	push	{fp, lr}
   47944:	add	fp, sp, #4
   47948:	sub	sp, sp, #32
   4794c:	str	r0, [fp, #-32]	; 0xffffffe0
   47950:	str	r1, [fp, #-36]	; 0xffffffdc
   47954:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47958:	cmp	r3, #0
   4795c:	beq	47970 <__assert_fail@plt+0x35284>
   47960:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47964:	ldr	r3, [r3, #4]
   47968:	cmp	r3, #0
   4796c:	bne	47978 <__assert_fail@plt+0x3528c>
   47970:	mov	r3, #0
   47974:	b	47d88 <__assert_fail@plt+0x3569c>
   47978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4797c:	ldr	r2, [r3]
   47980:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47984:	ldr	r3, [r3, #4]
   47988:	lsl	r1, r3, #1
   4798c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47990:	ldr	r3, [r3, #4]
   47994:	add	r3, r1, r3
   47998:	cmp	r2, r3
   4799c:	bge	47a18 <__assert_fail@plt+0x3532c>
   479a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   479a4:	ldr	r2, [r3, #4]
   479a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   479ac:	ldr	r3, [r3]
   479b0:	add	r3, r2, r3
   479b4:	lsl	r3, r3, #1
   479b8:	str	r3, [fp, #-24]	; 0xffffffe8
   479bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   479c0:	ldr	r2, [r3, #8]
   479c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   479c8:	lsl	r3, r3, #2
   479cc:	mov	r1, r3
   479d0:	mov	r0, r2
   479d4:	bl	43d30 <__assert_fail@plt+0x31644>
   479d8:	str	r0, [fp, #-28]	; 0xffffffe4
   479dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   479e0:	cmp	r3, #0
   479e4:	moveq	r3, #1
   479e8:	movne	r3, #0
   479ec:	uxtb	r3, r3
   479f0:	cmp	r3, #0
   479f4:	beq	47a00 <__assert_fail@plt+0x35314>
   479f8:	mov	r3, #12
   479fc:	b	47d88 <__assert_fail@plt+0x3569c>
   47a00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   47a08:	str	r2, [r3, #8]
   47a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47a14:	str	r2, [r3]
   47a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a1c:	ldr	r3, [r3, #4]
   47a20:	cmp	r3, #0
   47a24:	moveq	r3, #1
   47a28:	movne	r3, #0
   47a2c:	uxtb	r3, r3
   47a30:	cmp	r3, #0
   47a34:	beq	47a80 <__assert_fail@plt+0x35394>
   47a38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a3c:	ldr	r3, [r3, #8]
   47a40:	cmp	r3, #0
   47a44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47a48:	ldr	r2, [r3, #4]
   47a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a50:	str	r2, [r3, #4]
   47a54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a58:	ldr	r0, [r3, #8]
   47a5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47a60:	ldr	r1, [r3, #8]
   47a64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47a68:	ldr	r3, [r3, #4]
   47a6c:	lsl	r3, r3, #2
   47a70:	mov	r2, r3
   47a74:	bl	120f8 <memcpy@plt>
   47a78:	mov	r3, #0
   47a7c:	b	47d88 <__assert_fail@plt+0x3569c>
   47a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47a84:	ldr	r2, [r3, #4]
   47a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47a8c:	ldr	r3, [r3, #4]
   47a90:	lsl	r3, r3, #1
   47a94:	add	r3, r2, r3
   47a98:	str	r3, [fp, #-16]
   47a9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47aa0:	ldr	r3, [r3, #4]
   47aa4:	sub	r3, r3, #1
   47aa8:	str	r3, [fp, #-8]
   47aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47ab0:	ldr	r3, [r3, #4]
   47ab4:	sub	r3, r3, #1
   47ab8:	str	r3, [fp, #-12]
   47abc:	b	47ba0 <__assert_fail@plt+0x354b4>
   47ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47ac4:	ldr	r2, [r3, #8]
   47ac8:	ldr	r3, [fp, #-12]
   47acc:	lsl	r3, r3, #2
   47ad0:	add	r3, r2, r3
   47ad4:	ldr	r2, [r3]
   47ad8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47adc:	ldr	r1, [r3, #8]
   47ae0:	ldr	r3, [fp, #-8]
   47ae4:	lsl	r3, r3, #2
   47ae8:	add	r3, r1, r3
   47aec:	ldr	r3, [r3]
   47af0:	cmp	r2, r3
   47af4:	bne	47b14 <__assert_fail@plt+0x35428>
   47af8:	ldr	r3, [fp, #-8]
   47afc:	sub	r3, r3, #1
   47b00:	str	r3, [fp, #-8]
   47b04:	ldr	r3, [fp, #-12]
   47b08:	sub	r3, r3, #1
   47b0c:	str	r3, [fp, #-12]
   47b10:	b	47ba0 <__assert_fail@plt+0x354b4>
   47b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47b18:	ldr	r2, [r3, #8]
   47b1c:	ldr	r3, [fp, #-12]
   47b20:	lsl	r3, r3, #2
   47b24:	add	r3, r2, r3
   47b28:	ldr	r2, [r3]
   47b2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47b30:	ldr	r1, [r3, #8]
   47b34:	ldr	r3, [fp, #-8]
   47b38:	lsl	r3, r3, #2
   47b3c:	add	r3, r1, r3
   47b40:	ldr	r3, [r3]
   47b44:	cmp	r2, r3
   47b48:	bge	47b94 <__assert_fail@plt+0x354a8>
   47b4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47b50:	ldr	r2, [r3, #8]
   47b54:	ldr	r3, [fp, #-16]
   47b58:	sub	r3, r3, #1
   47b5c:	str	r3, [fp, #-16]
   47b60:	ldr	r3, [fp, #-16]
   47b64:	lsl	r3, r3, #2
   47b68:	add	r2, r2, r3
   47b6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47b70:	ldr	r1, [r3, #8]
   47b74:	ldr	r3, [fp, #-8]
   47b78:	sub	r0, r3, #1
   47b7c:	str	r0, [fp, #-8]
   47b80:	lsl	r3, r3, #2
   47b84:	add	r3, r1, r3
   47b88:	ldr	r3, [r3]
   47b8c:	str	r3, [r2]
   47b90:	b	47ba0 <__assert_fail@plt+0x354b4>
   47b94:	ldr	r3, [fp, #-12]
   47b98:	sub	r3, r3, #1
   47b9c:	str	r3, [fp, #-12]
   47ba0:	ldr	r3, [fp, #-8]
   47ba4:	cmp	r3, #0
   47ba8:	blt	47bb8 <__assert_fail@plt+0x354cc>
   47bac:	ldr	r3, [fp, #-12]
   47bb0:	cmp	r3, #0
   47bb4:	bge	47ac0 <__assert_fail@plt+0x353d4>
   47bb8:	ldr	r3, [fp, #-8]
   47bbc:	cmp	r3, #0
   47bc0:	blt	47c08 <__assert_fail@plt+0x3551c>
   47bc4:	ldr	r3, [fp, #-8]
   47bc8:	add	r3, r3, #1
   47bcc:	ldr	r2, [fp, #-16]
   47bd0:	sub	r3, r2, r3
   47bd4:	str	r3, [fp, #-16]
   47bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47bdc:	ldr	r2, [r3, #8]
   47be0:	ldr	r3, [fp, #-16]
   47be4:	lsl	r3, r3, #2
   47be8:	add	r0, r2, r3
   47bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47bf0:	ldr	r1, [r3, #8]
   47bf4:	ldr	r3, [fp, #-8]
   47bf8:	add	r3, r3, #1
   47bfc:	lsl	r3, r3, #2
   47c00:	mov	r2, r3
   47c04:	bl	120f8 <memcpy@plt>
   47c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c0c:	ldr	r3, [r3, #4]
   47c10:	sub	r3, r3, #1
   47c14:	str	r3, [fp, #-12]
   47c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c1c:	ldr	r2, [r3, #4]
   47c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47c24:	ldr	r3, [r3, #4]
   47c28:	lsl	r3, r3, #1
   47c2c:	add	r3, r2, r3
   47c30:	sub	r3, r3, #1
   47c34:	str	r3, [fp, #-8]
   47c38:	ldr	r2, [fp, #-8]
   47c3c:	ldr	r3, [fp, #-16]
   47c40:	sub	r3, r2, r3
   47c44:	add	r3, r3, #1
   47c48:	str	r3, [fp, #-20]	; 0xffffffec
   47c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   47c50:	cmp	r3, #0
   47c54:	bne	47c60 <__assert_fail@plt+0x35574>
   47c58:	mov	r3, #0
   47c5c:	b	47d88 <__assert_fail@plt+0x3569c>
   47c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c64:	ldr	r2, [r3, #4]
   47c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   47c6c:	add	r2, r2, r3
   47c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c74:	str	r2, [r3, #4]
   47c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c7c:	ldr	r2, [r3, #8]
   47c80:	ldr	r3, [fp, #-8]
   47c84:	lsl	r3, r3, #2
   47c88:	add	r3, r2, r3
   47c8c:	ldr	r2, [r3]
   47c90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c94:	ldr	r1, [r3, #8]
   47c98:	ldr	r3, [fp, #-12]
   47c9c:	lsl	r3, r3, #2
   47ca0:	add	r3, r1, r3
   47ca4:	ldr	r3, [r3]
   47ca8:	cmp	r2, r3
   47cac:	ble	47d08 <__assert_fail@plt+0x3561c>
   47cb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47cb4:	ldr	r2, [r3, #8]
   47cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   47cbc:	sub	r1, r3, #1
   47cc0:	str	r1, [fp, #-20]	; 0xffffffec
   47cc4:	ldr	r1, [fp, #-12]
   47cc8:	add	r3, r3, r1
   47ccc:	lsl	r3, r3, #2
   47cd0:	add	r2, r2, r3
   47cd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47cd8:	ldr	r1, [r3, #8]
   47cdc:	ldr	r3, [fp, #-8]
   47ce0:	sub	r0, r3, #1
   47ce4:	str	r0, [fp, #-8]
   47ce8:	lsl	r3, r3, #2
   47cec:	add	r3, r1, r3
   47cf0:	ldr	r3, [r3]
   47cf4:	str	r3, [r2]
   47cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   47cfc:	cmp	r3, #0
   47d00:	bne	47c78 <__assert_fail@plt+0x3558c>
   47d04:	b	47d84 <__assert_fail@plt+0x35698>
   47d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47d0c:	ldr	r2, [r3, #8]
   47d10:	ldr	r1, [fp, #-12]
   47d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d18:	add	r3, r1, r3
   47d1c:	lsl	r3, r3, #2
   47d20:	add	r3, r2, r3
   47d24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   47d28:	ldr	r1, [r2, #8]
   47d2c:	ldr	r2, [fp, #-12]
   47d30:	lsl	r2, r2, #2
   47d34:	add	r2, r1, r2
   47d38:	ldr	r2, [r2]
   47d3c:	str	r2, [r3]
   47d40:	ldr	r3, [fp, #-12]
   47d44:	sub	r3, r3, #1
   47d48:	str	r3, [fp, #-12]
   47d4c:	ldr	r3, [fp, #-12]
   47d50:	cmp	r3, #0
   47d54:	bge	47c78 <__assert_fail@plt+0x3558c>
   47d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47d5c:	ldr	r0, [r3, #8]
   47d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47d64:	ldr	r2, [r3, #8]
   47d68:	ldr	r3, [fp, #-16]
   47d6c:	lsl	r3, r3, #2
   47d70:	add	r1, r2, r3
   47d74:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d78:	lsl	r3, r3, #2
   47d7c:	mov	r2, r3
   47d80:	bl	120f8 <memcpy@plt>
   47d84:	mov	r3, #0
   47d88:	mov	r0, r3
   47d8c:	sub	sp, fp, #4
   47d90:	pop	{fp, pc}
   47d94:	push	{fp, lr}
   47d98:	add	fp, sp, #4
   47d9c:	sub	sp, sp, #16
   47da0:	str	r0, [fp, #-16]
   47da4:	str	r1, [fp, #-20]	; 0xffffffec
   47da8:	ldr	r3, [fp, #-16]
   47dac:	ldr	r3, [r3]
   47db0:	cmp	r3, #0
   47db4:	bne	47dec <__assert_fail@plt+0x35700>
   47db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   47dbc:	ldr	r0, [fp, #-16]
   47dc0:	bl	46e84 <__assert_fail@plt+0x34798>
   47dc4:	mov	r3, r0
   47dc8:	cmp	r3, #0
   47dcc:	moveq	r3, #1
   47dd0:	movne	r3, #0
   47dd4:	uxtb	r3, r3
   47dd8:	cmp	r3, #0
   47ddc:	movne	r3, #1
   47de0:	moveq	r3, #0
   47de4:	uxtb	r3, r3
   47de8:	b	47ffc <__assert_fail@plt+0x35910>
   47dec:	ldr	r3, [fp, #-16]
   47df0:	ldr	r3, [r3, #4]
   47df4:	cmp	r3, #0
   47df8:	bne	47e34 <__assert_fail@plt+0x35748>
   47dfc:	ldr	r3, [fp, #-16]
   47e00:	ldr	r3, [r3, #8]
   47e04:	cmp	r3, #0
   47e08:	ldr	r3, [fp, #-16]
   47e0c:	ldr	r3, [r3, #8]
   47e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   47e14:	str	r2, [r3]
   47e18:	ldr	r3, [fp, #-16]
   47e1c:	ldr	r3, [r3, #4]
   47e20:	add	r2, r3, #1
   47e24:	ldr	r3, [fp, #-16]
   47e28:	str	r2, [r3, #4]
   47e2c:	mov	r3, #1
   47e30:	b	47ffc <__assert_fail@plt+0x35910>
   47e34:	ldr	r3, [fp, #-16]
   47e38:	ldr	r2, [r3]
   47e3c:	ldr	r3, [fp, #-16]
   47e40:	ldr	r3, [r3, #4]
   47e44:	cmp	r2, r3
   47e48:	bne	47eb4 <__assert_fail@plt+0x357c8>
   47e4c:	ldr	r3, [fp, #-16]
   47e50:	ldr	r3, [r3]
   47e54:	lsl	r2, r3, #1
   47e58:	ldr	r3, [fp, #-16]
   47e5c:	str	r2, [r3]
   47e60:	ldr	r3, [fp, #-16]
   47e64:	ldr	r2, [r3, #8]
   47e68:	ldr	r3, [fp, #-16]
   47e6c:	ldr	r3, [r3]
   47e70:	lsl	r3, r3, #2
   47e74:	mov	r1, r3
   47e78:	mov	r0, r2
   47e7c:	bl	43d30 <__assert_fail@plt+0x31644>
   47e80:	str	r0, [fp, #-12]
   47e84:	ldr	r3, [fp, #-12]
   47e88:	cmp	r3, #0
   47e8c:	moveq	r3, #1
   47e90:	movne	r3, #0
   47e94:	uxtb	r3, r3
   47e98:	cmp	r3, #0
   47e9c:	beq	47ea8 <__assert_fail@plt+0x357bc>
   47ea0:	mov	r3, #0
   47ea4:	b	47ffc <__assert_fail@plt+0x35910>
   47ea8:	ldr	r3, [fp, #-16]
   47eac:	ldr	r2, [fp, #-12]
   47eb0:	str	r2, [r3, #8]
   47eb4:	ldr	r3, [fp, #-16]
   47eb8:	ldr	r3, [r3, #8]
   47ebc:	ldr	r2, [r3]
   47ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   47ec4:	cmp	r2, r3
   47ec8:	ble	47f2c <__assert_fail@plt+0x35840>
   47ecc:	ldr	r3, [fp, #-16]
   47ed0:	ldr	r3, [r3, #4]
   47ed4:	str	r3, [fp, #-8]
   47ed8:	b	47f1c <__assert_fail@plt+0x35830>
   47edc:	ldr	r3, [fp, #-16]
   47ee0:	ldr	r2, [r3, #8]
   47ee4:	ldr	r3, [fp, #-8]
   47ee8:	lsl	r3, r3, #2
   47eec:	add	r3, r2, r3
   47ef0:	ldr	r2, [fp, #-16]
   47ef4:	ldr	r1, [r2, #8]
   47ef8:	ldr	r2, [fp, #-8]
   47efc:	sub	r2, r2, #-1073741823	; 0xc0000001
   47f00:	lsl	r2, r2, #2
   47f04:	add	r2, r1, r2
   47f08:	ldr	r2, [r2]
   47f0c:	str	r2, [r3]
   47f10:	ldr	r3, [fp, #-8]
   47f14:	sub	r3, r3, #1
   47f18:	str	r3, [fp, #-8]
   47f1c:	ldr	r3, [fp, #-8]
   47f20:	cmp	r3, #0
   47f24:	bgt	47edc <__assert_fail@plt+0x357f0>
   47f28:	b	47fc8 <__assert_fail@plt+0x358dc>
   47f2c:	ldr	r3, [fp, #-16]
   47f30:	ldr	r3, [r3, #4]
   47f34:	str	r3, [fp, #-8]
   47f38:	b	47f7c <__assert_fail@plt+0x35890>
   47f3c:	ldr	r3, [fp, #-16]
   47f40:	ldr	r2, [r3, #8]
   47f44:	ldr	r3, [fp, #-8]
   47f48:	lsl	r3, r3, #2
   47f4c:	add	r3, r2, r3
   47f50:	ldr	r2, [fp, #-16]
   47f54:	ldr	r1, [r2, #8]
   47f58:	ldr	r2, [fp, #-8]
   47f5c:	sub	r2, r2, #-1073741823	; 0xc0000001
   47f60:	lsl	r2, r2, #2
   47f64:	add	r2, r1, r2
   47f68:	ldr	r2, [r2]
   47f6c:	str	r2, [r3]
   47f70:	ldr	r3, [fp, #-8]
   47f74:	sub	r3, r3, #1
   47f78:	str	r3, [fp, #-8]
   47f7c:	ldr	r3, [fp, #-16]
   47f80:	ldr	r2, [r3, #8]
   47f84:	ldr	r3, [fp, #-8]
   47f88:	sub	r3, r3, #-1073741823	; 0xc0000001
   47f8c:	lsl	r3, r3, #2
   47f90:	add	r3, r2, r3
   47f94:	ldr	r2, [r3]
   47f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   47f9c:	cmp	r2, r3
   47fa0:	bgt	47f3c <__assert_fail@plt+0x35850>
   47fa4:	ldr	r3, [fp, #-16]
   47fa8:	ldr	r2, [r3, #8]
   47fac:	ldr	r3, [fp, #-8]
   47fb0:	sub	r3, r3, #-1073741823	; 0xc0000001
   47fb4:	lsl	r3, r3, #2
   47fb8:	add	r3, r2, r3
   47fbc:	ldr	r2, [r3]
   47fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   47fc4:	cmp	r2, r3
   47fc8:	ldr	r3, [fp, #-16]
   47fcc:	ldr	r2, [r3, #8]
   47fd0:	ldr	r3, [fp, #-8]
   47fd4:	lsl	r3, r3, #2
   47fd8:	add	r3, r2, r3
   47fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   47fe0:	str	r2, [r3]
   47fe4:	ldr	r3, [fp, #-16]
   47fe8:	ldr	r3, [r3, #4]
   47fec:	add	r2, r3, #1
   47ff0:	ldr	r3, [fp, #-16]
   47ff4:	str	r2, [r3, #4]
   47ff8:	mov	r3, #1
   47ffc:	mov	r0, r3
   48000:	sub	sp, fp, #4
   48004:	pop	{fp, pc}
   48008:	push	{fp, lr}
   4800c:	add	fp, sp, #4
   48010:	sub	sp, sp, #16
   48014:	str	r0, [fp, #-16]
   48018:	str	r1, [fp, #-20]	; 0xffffffec
   4801c:	ldr	r3, [fp, #-16]
   48020:	ldr	r2, [r3]
   48024:	ldr	r3, [fp, #-16]
   48028:	ldr	r3, [r3, #4]
   4802c:	cmp	r2, r3
   48030:	bne	480a0 <__assert_fail@plt+0x359b4>
   48034:	ldr	r3, [fp, #-16]
   48038:	ldr	r3, [r3]
   4803c:	add	r3, r3, #1
   48040:	lsl	r2, r3, #1
   48044:	ldr	r3, [fp, #-16]
   48048:	str	r2, [r3]
   4804c:	ldr	r3, [fp, #-16]
   48050:	ldr	r2, [r3, #8]
   48054:	ldr	r3, [fp, #-16]
   48058:	ldr	r3, [r3]
   4805c:	lsl	r3, r3, #2
   48060:	mov	r1, r3
   48064:	mov	r0, r2
   48068:	bl	43d30 <__assert_fail@plt+0x31644>
   4806c:	str	r0, [fp, #-8]
   48070:	ldr	r3, [fp, #-8]
   48074:	cmp	r3, #0
   48078:	moveq	r3, #1
   4807c:	movne	r3, #0
   48080:	uxtb	r3, r3
   48084:	cmp	r3, #0
   48088:	beq	48094 <__assert_fail@plt+0x359a8>
   4808c:	mov	r3, #0
   48090:	b	480d0 <__assert_fail@plt+0x359e4>
   48094:	ldr	r3, [fp, #-16]
   48098:	ldr	r2, [fp, #-8]
   4809c:	str	r2, [r3, #8]
   480a0:	ldr	r3, [fp, #-16]
   480a4:	ldr	r2, [r3, #8]
   480a8:	ldr	r3, [fp, #-16]
   480ac:	ldr	r3, [r3, #4]
   480b0:	add	r0, r3, #1
   480b4:	ldr	r1, [fp, #-16]
   480b8:	str	r0, [r1, #4]
   480bc:	lsl	r3, r3, #2
   480c0:	add	r3, r2, r3
   480c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   480c8:	str	r2, [r3]
   480cc:	mov	r3, #1
   480d0:	mov	r0, r3
   480d4:	sub	sp, fp, #4
   480d8:	pop	{fp, pc}
   480dc:	push	{fp}		; (str fp, [sp, #-4]!)
   480e0:	add	fp, sp, #0
   480e4:	sub	sp, sp, #20
   480e8:	str	r0, [fp, #-16]
   480ec:	str	r1, [fp, #-20]	; 0xffffffec
   480f0:	ldr	r3, [fp, #-16]
   480f4:	cmp	r3, #0
   480f8:	beq	48120 <__assert_fail@plt+0x35a34>
   480fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   48100:	cmp	r3, #0
   48104:	beq	48120 <__assert_fail@plt+0x35a34>
   48108:	ldr	r3, [fp, #-16]
   4810c:	ldr	r2, [r3, #4]
   48110:	ldr	r3, [fp, #-20]	; 0xffffffec
   48114:	ldr	r3, [r3, #4]
   48118:	cmp	r2, r3
   4811c:	beq	48128 <__assert_fail@plt+0x35a3c>
   48120:	mov	r3, #0
   48124:	b	48194 <__assert_fail@plt+0x35aa8>
   48128:	ldr	r3, [fp, #-16]
   4812c:	ldr	r3, [r3, #4]
   48130:	str	r3, [fp, #-8]
   48134:	b	48178 <__assert_fail@plt+0x35a8c>
   48138:	ldr	r3, [fp, #-16]
   4813c:	ldr	r2, [r3, #8]
   48140:	ldr	r3, [fp, #-8]
   48144:	lsl	r3, r3, #2
   48148:	add	r3, r2, r3
   4814c:	ldr	r2, [r3]
   48150:	ldr	r3, [fp, #-20]	; 0xffffffec
   48154:	ldr	r1, [r3, #8]
   48158:	ldr	r3, [fp, #-8]
   4815c:	lsl	r3, r3, #2
   48160:	add	r3, r1, r3
   48164:	ldr	r3, [r3]
   48168:	cmp	r2, r3
   4816c:	beq	48178 <__assert_fail@plt+0x35a8c>
   48170:	mov	r3, #0
   48174:	b	48194 <__assert_fail@plt+0x35aa8>
   48178:	ldr	r3, [fp, #-8]
   4817c:	sub	r3, r3, #1
   48180:	str	r3, [fp, #-8]
   48184:	ldr	r3, [fp, #-8]
   48188:	cmp	r3, #0
   4818c:	bge	48138 <__assert_fail@plt+0x35a4c>
   48190:	mov	r3, #1
   48194:	mov	r0, r3
   48198:	add	sp, fp, #0
   4819c:	pop	{fp}		; (ldr fp, [sp], #4)
   481a0:	bx	lr
   481a4:	push	{fp}		; (str fp, [sp, #-4]!)
   481a8:	add	fp, sp, #0
   481ac:	sub	sp, sp, #28
   481b0:	str	r0, [fp, #-24]	; 0xffffffe8
   481b4:	str	r1, [fp, #-28]	; 0xffffffe4
   481b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   481bc:	ldr	r3, [r3, #4]
   481c0:	cmp	r3, #0
   481c4:	bgt	481d0 <__assert_fail@plt+0x35ae4>
   481c8:	mov	r3, #0
   481cc:	b	48280 <__assert_fail@plt+0x35b94>
   481d0:	mov	r3, #0
   481d4:	str	r3, [fp, #-8]
   481d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   481dc:	ldr	r3, [r3, #4]
   481e0:	sub	r3, r3, #1
   481e4:	str	r3, [fp, #-12]
   481e8:	b	4823c <__assert_fail@plt+0x35b50>
   481ec:	ldr	r2, [fp, #-8]
   481f0:	ldr	r3, [fp, #-12]
   481f4:	add	r3, r2, r3
   481f8:	lsr	r3, r3, #1
   481fc:	str	r3, [fp, #-16]
   48200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48204:	ldr	r2, [r3, #8]
   48208:	ldr	r3, [fp, #-16]
   4820c:	lsl	r3, r3, #2
   48210:	add	r3, r2, r3
   48214:	ldr	r2, [r3]
   48218:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4821c:	cmp	r2, r3
   48220:	bge	48234 <__assert_fail@plt+0x35b48>
   48224:	ldr	r3, [fp, #-16]
   48228:	add	r3, r3, #1
   4822c:	str	r3, [fp, #-8]
   48230:	b	4823c <__assert_fail@plt+0x35b50>
   48234:	ldr	r3, [fp, #-16]
   48238:	str	r3, [fp, #-12]
   4823c:	ldr	r2, [fp, #-8]
   48240:	ldr	r3, [fp, #-12]
   48244:	cmp	r2, r3
   48248:	bcc	481ec <__assert_fail@plt+0x35b00>
   4824c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48250:	ldr	r2, [r3, #8]
   48254:	ldr	r3, [fp, #-8]
   48258:	lsl	r3, r3, #2
   4825c:	add	r3, r2, r3
   48260:	ldr	r2, [r3]
   48264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48268:	cmp	r2, r3
   4826c:	bne	4827c <__assert_fail@plt+0x35b90>
   48270:	ldr	r3, [fp, #-8]
   48274:	add	r3, r3, #1
   48278:	b	48280 <__assert_fail@plt+0x35b94>
   4827c:	mov	r3, #0
   48280:	mov	r0, r3
   48284:	add	sp, fp, #0
   48288:	pop	{fp}		; (ldr fp, [sp], #4)
   4828c:	bx	lr
   48290:	push	{fp}		; (str fp, [sp, #-4]!)
   48294:	add	fp, sp, #0
   48298:	sub	sp, sp, #12
   4829c:	str	r0, [fp, #-8]
   482a0:	str	r1, [fp, #-12]
   482a4:	ldr	r3, [fp, #-12]
   482a8:	cmp	r3, #0
   482ac:	blt	48334 <__assert_fail@plt+0x35c48>
   482b0:	ldr	r3, [fp, #-8]
   482b4:	ldr	r2, [r3, #4]
   482b8:	ldr	r3, [fp, #-12]
   482bc:	cmp	r2, r3
   482c0:	ble	48334 <__assert_fail@plt+0x35c48>
   482c4:	ldr	r3, [fp, #-8]
   482c8:	ldr	r3, [r3, #4]
   482cc:	sub	r2, r3, #1
   482d0:	ldr	r3, [fp, #-8]
   482d4:	str	r2, [r3, #4]
   482d8:	b	4831c <__assert_fail@plt+0x35c30>
   482dc:	ldr	r3, [fp, #-8]
   482e0:	ldr	r2, [r3, #8]
   482e4:	ldr	r3, [fp, #-12]
   482e8:	lsl	r3, r3, #2
   482ec:	add	r3, r2, r3
   482f0:	ldr	r2, [fp, #-8]
   482f4:	ldr	r1, [r2, #8]
   482f8:	ldr	r2, [fp, #-12]
   482fc:	add	r2, r2, #1
   48300:	lsl	r2, r2, #2
   48304:	add	r2, r1, r2
   48308:	ldr	r2, [r2]
   4830c:	str	r2, [r3]
   48310:	ldr	r3, [fp, #-12]
   48314:	add	r3, r3, #1
   48318:	str	r3, [fp, #-12]
   4831c:	ldr	r3, [fp, #-8]
   48320:	ldr	r2, [r3, #4]
   48324:	ldr	r3, [fp, #-12]
   48328:	cmp	r2, r3
   4832c:	bgt	482dc <__assert_fail@plt+0x35bf0>
   48330:	b	48338 <__assert_fail@plt+0x35c4c>
   48334:	nop			; (mov r0, r0)
   48338:	add	sp, fp, #0
   4833c:	pop	{fp}		; (ldr fp, [sp], #4)
   48340:	bx	lr
   48344:	push	{fp, lr}
   48348:	add	fp, sp, #4
   4834c:	sub	sp, sp, #48	; 0x30
   48350:	str	r0, [fp, #-40]	; 0xffffffd8
   48354:	sub	r3, fp, #48	; 0x30
   48358:	stm	r3, {r1, r2}
   4835c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48360:	ldr	r2, [r3, #8]
   48364:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48368:	ldr	r3, [r3, #4]
   4836c:	cmp	r2, r3
   48370:	movcs	r3, #1
   48374:	movcc	r3, #0
   48378:	uxtb	r3, r3
   4837c:	cmp	r3, #0
   48380:	beq	485d0 <__assert_fail@plt+0x35ee4>
   48384:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48388:	ldr	r3, [r3, #4]
   4838c:	lsl	r3, r3, #1
   48390:	str	r3, [fp, #-8]
   48394:	mov	r3, #12
   48398:	str	r3, [fp, #-12]
   4839c:	ldr	r1, [fp, #-12]
   483a0:	mvn	r0, #0
   483a4:	bl	63574 <__assert_fail@plt+0x50e88>
   483a8:	mov	r3, r0
   483ac:	cmp	r3, #0
   483b0:	blt	483cc <__assert_fail@plt+0x35ce0>
   483b4:	ldr	r1, [fp, #-12]
   483b8:	mvn	r0, #0
   483bc:	bl	63574 <__assert_fail@plt+0x50e88>
   483c0:	mov	r3, r0
   483c4:	mov	r2, r3
   483c8:	b	483d0 <__assert_fail@plt+0x35ce4>
   483cc:	mvn	r2, #-2147483648	; 0x80000000
   483d0:	ldr	r3, [fp, #-8]
   483d4:	cmp	r2, r3
   483d8:	movcc	r3, #1
   483dc:	movcs	r3, #0
   483e0:	uxtb	r3, r3
   483e4:	cmp	r3, #0
   483e8:	beq	483f4 <__assert_fail@plt+0x35d08>
   483ec:	mvn	r3, #0
   483f0:	b	48730 <__assert_fail@plt+0x36044>
   483f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   483f8:	ldr	r2, [r3]
   483fc:	ldr	r3, [fp, #-8]
   48400:	lsl	r3, r3, #3
   48404:	mov	r1, r3
   48408:	mov	r0, r2
   4840c:	bl	43d30 <__assert_fail@plt+0x31644>
   48410:	str	r0, [fp, #-16]
   48414:	ldr	r3, [fp, #-16]
   48418:	cmp	r3, #0
   4841c:	moveq	r3, #1
   48420:	movne	r3, #0
   48424:	uxtb	r3, r3
   48428:	cmp	r3, #0
   4842c:	beq	48438 <__assert_fail@plt+0x35d4c>
   48430:	mvn	r3, #0
   48434:	b	48730 <__assert_fail@plt+0x36044>
   48438:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4843c:	ldr	r2, [fp, #-16]
   48440:	str	r2, [r3]
   48444:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48448:	ldr	r2, [r3, #12]
   4844c:	ldr	r3, [fp, #-8]
   48450:	lsl	r3, r3, #2
   48454:	mov	r1, r3
   48458:	mov	r0, r2
   4845c:	bl	43d30 <__assert_fail@plt+0x31644>
   48460:	str	r0, [fp, #-20]	; 0xffffffec
   48464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48468:	ldr	r2, [r3, #16]
   4846c:	ldr	r3, [fp, #-8]
   48470:	lsl	r3, r3, #2
   48474:	mov	r1, r3
   48478:	mov	r0, r2
   4847c:	bl	43d30 <__assert_fail@plt+0x31644>
   48480:	str	r0, [fp, #-24]	; 0xffffffe8
   48484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48488:	ldr	r0, [r3, #20]
   4848c:	ldr	r2, [fp, #-8]
   48490:	mov	r3, r2
   48494:	lsl	r3, r3, #1
   48498:	add	r3, r3, r2
   4849c:	lsl	r3, r3, #2
   484a0:	mov	r1, r3
   484a4:	bl	43d30 <__assert_fail@plt+0x31644>
   484a8:	str	r0, [fp, #-28]	; 0xffffffe4
   484ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   484b0:	ldr	r0, [r3, #24]
   484b4:	ldr	r2, [fp, #-8]
   484b8:	mov	r3, r2
   484bc:	lsl	r3, r3, #1
   484c0:	add	r3, r3, r2
   484c4:	lsl	r3, r3, #2
   484c8:	mov	r1, r3
   484cc:	bl	43d30 <__assert_fail@plt+0x31644>
   484d0:	str	r0, [fp, #-32]	; 0xffffffe0
   484d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   484d8:	cmp	r3, #0
   484dc:	moveq	r3, #1
   484e0:	movne	r3, #0
   484e4:	uxtb	r3, r3
   484e8:	cmp	r3, #0
   484ec:	bne	4850c <__assert_fail@plt+0x35e20>
   484f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   484f4:	cmp	r3, #0
   484f8:	moveq	r3, #1
   484fc:	movne	r3, #0
   48500:	uxtb	r3, r3
   48504:	cmp	r3, #0
   48508:	beq	48514 <__assert_fail@plt+0x35e28>
   4850c:	mov	r3, #1
   48510:	b	48518 <__assert_fail@plt+0x35e2c>
   48514:	mov	r3, #0
   48518:	cmp	r3, #0
   4851c:	bne	4853c <__assert_fail@plt+0x35e50>
   48520:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48524:	cmp	r3, #0
   48528:	moveq	r3, #1
   4852c:	movne	r3, #0
   48530:	uxtb	r3, r3
   48534:	cmp	r3, #0
   48538:	beq	48544 <__assert_fail@plt+0x35e58>
   4853c:	mov	r3, #1
   48540:	b	48548 <__assert_fail@plt+0x35e5c>
   48544:	mov	r3, #0
   48548:	cmp	r3, #0
   4854c:	bne	4856c <__assert_fail@plt+0x35e80>
   48550:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48554:	cmp	r3, #0
   48558:	moveq	r3, #1
   4855c:	movne	r3, #0
   48560:	uxtb	r3, r3
   48564:	cmp	r3, #0
   48568:	beq	48594 <__assert_fail@plt+0x35ea8>
   4856c:	ldr	r0, [fp, #-20]	; 0xffffffec
   48570:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48578:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4857c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   48580:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48588:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4858c:	mvn	r3, #0
   48590:	b	48730 <__assert_fail@plt+0x36044>
   48594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48598:	ldr	r2, [fp, #-20]	; 0xffffffec
   4859c:	str	r2, [r3, #12]
   485a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   485a8:	str	r2, [r3, #16]
   485ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   485b4:	str	r2, [r3, #20]
   485b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   485c0:	str	r2, [r3, #24]
   485c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485c8:	ldr	r2, [fp, #-8]
   485cc:	str	r2, [r3, #4]
   485d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485d4:	ldr	r2, [r3]
   485d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485dc:	ldr	r3, [r3, #8]
   485e0:	lsl	r3, r3, #3
   485e4:	add	r3, r2, r3
   485e8:	mov	r2, r3
   485ec:	sub	r3, fp, #48	; 0x30
   485f0:	ldm	r3, {r0, r1}
   485f4:	stm	r2, {r0, r1}
   485f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   485fc:	ldr	r2, [r3]
   48600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48604:	ldr	r3, [r3, #8]
   48608:	lsl	r3, r3, #3
   4860c:	add	r2, r2, r3
   48610:	ldr	r3, [r2, #4]
   48614:	bic	r3, r3, #261120	; 0x3fc00
   48618:	bic	r3, r3, #768	; 0x300
   4861c:	str	r3, [r2, #4]
   48620:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48624:	ldr	r2, [r3]
   48628:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4862c:	ldr	r3, [r3, #8]
   48630:	lsl	r3, r3, #3
   48634:	add	r1, r2, r3
   48638:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   4863c:	cmp	r3, #5
   48640:	bne	48654 <__assert_fail@plt+0x35f68>
   48644:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48648:	ldr	r3, [r3, #92]	; 0x5c
   4864c:	cmp	r3, #1
   48650:	bgt	48660 <__assert_fail@plt+0x35f74>
   48654:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   48658:	cmp	r3, #6
   4865c:	bne	48668 <__assert_fail@plt+0x35f7c>
   48660:	mov	r3, #1
   48664:	b	4866c <__assert_fail@plt+0x35f80>
   48668:	mov	r3, #0
   4866c:	uxtb	r3, r3
   48670:	and	r3, r3, #1
   48674:	uxtb	r3, r3
   48678:	ldrb	r2, [r1, #6]
   4867c:	and	r3, r3, #1
   48680:	bic	r2, r2, #16
   48684:	lsl	r3, r3, #4
   48688:	orr	r3, r3, r2
   4868c:	mov	r2, r3
   48690:	strb	r2, [r1, #6]
   48694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48698:	ldr	r2, [r3, #12]
   4869c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   486a0:	ldr	r3, [r3, #8]
   486a4:	lsl	r3, r3, #2
   486a8:	add	r3, r2, r3
   486ac:	mvn	r2, #0
   486b0:	str	r2, [r3]
   486b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   486b8:	ldr	r1, [r3, #20]
   486bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   486c0:	ldr	r2, [r3, #8]
   486c4:	mov	r3, r2
   486c8:	lsl	r3, r3, #1
   486cc:	add	r3, r3, r2
   486d0:	lsl	r3, r3, #2
   486d4:	add	r3, r1, r3
   486d8:	mov	r2, #12
   486dc:	mov	r1, #0
   486e0:	mov	r0, r3
   486e4:	bl	12434 <memset@plt>
   486e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   486ec:	ldr	r1, [r3, #24]
   486f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   486f4:	ldr	r2, [r3, #8]
   486f8:	mov	r3, r2
   486fc:	lsl	r3, r3, #1
   48700:	add	r3, r3, r2
   48704:	lsl	r3, r3, #2
   48708:	add	r3, r1, r3
   4870c:	mov	r2, #12
   48710:	mov	r1, #0
   48714:	mov	r0, r3
   48718:	bl	12434 <memset@plt>
   4871c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48720:	ldr	r3, [r3, #8]
   48724:	add	r1, r3, #1
   48728:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4872c:	str	r1, [r2, #8]
   48730:	mov	r0, r3
   48734:	sub	sp, fp, #4
   48738:	pop	{fp, pc}
   4873c:	push	{fp}		; (str fp, [sp, #-4]!)
   48740:	add	fp, sp, #0
   48744:	sub	sp, sp, #20
   48748:	str	r0, [fp, #-16]
   4874c:	str	r1, [fp, #-20]	; 0xffffffec
   48750:	ldr	r3, [fp, #-16]
   48754:	ldr	r3, [r3, #4]
   48758:	mov	r2, r3
   4875c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48760:	add	r3, r2, r3
   48764:	str	r3, [fp, #-8]
   48768:	mov	r3, #0
   4876c:	str	r3, [fp, #-12]
   48770:	b	487a8 <__assert_fail@plt+0x360bc>
   48774:	ldr	r3, [fp, #-16]
   48778:	ldr	r2, [r3, #8]
   4877c:	ldr	r3, [fp, #-12]
   48780:	lsl	r3, r3, #2
   48784:	add	r3, r2, r3
   48788:	ldr	r3, [r3]
   4878c:	mov	r2, r3
   48790:	ldr	r3, [fp, #-8]
   48794:	add	r3, r3, r2
   48798:	str	r3, [fp, #-8]
   4879c:	ldr	r3, [fp, #-12]
   487a0:	add	r3, r3, #1
   487a4:	str	r3, [fp, #-12]
   487a8:	ldr	r3, [fp, #-16]
   487ac:	ldr	r2, [r3, #4]
   487b0:	ldr	r3, [fp, #-12]
   487b4:	cmp	r2, r3
   487b8:	bgt	48774 <__assert_fail@plt+0x36088>
   487bc:	ldr	r3, [fp, #-8]
   487c0:	mov	r0, r3
   487c4:	add	sp, fp, #0
   487c8:	pop	{fp}		; (ldr fp, [sp], #4)
   487cc:	bx	lr
   487d0:	push	{fp, lr}
   487d4:	add	fp, sp, #4
   487d8:	sub	sp, sp, #40	; 0x28
   487dc:	str	r0, [fp, #-32]	; 0xffffffe0
   487e0:	str	r1, [fp, #-36]	; 0xffffffdc
   487e4:	str	r2, [fp, #-40]	; 0xffffffd8
   487e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   487ec:	ldr	r3, [r3, #4]
   487f0:	cmp	r3, #0
   487f4:	moveq	r3, #1
   487f8:	movne	r3, #0
   487fc:	uxtb	r3, r3
   48800:	cmp	r3, #0
   48804:	beq	4881c <__assert_fail@plt+0x36130>
   48808:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4880c:	mov	r2, #0
   48810:	str	r2, [r3]
   48814:	mov	r3, #0
   48818:	b	48924 <__assert_fail@plt+0x36238>
   4881c:	mov	r1, #0
   48820:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48824:	bl	4873c <__assert_fail@plt+0x36050>
   48828:	str	r0, [fp, #-12]
   4882c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48830:	ldr	r1, [r3, #32]
   48834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48838:	ldr	r2, [r3, #68]	; 0x44
   4883c:	ldr	r3, [fp, #-12]
   48840:	and	r2, r2, r3
   48844:	mov	r3, r2
   48848:	lsl	r3, r3, #1
   4884c:	add	r3, r3, r2
   48850:	lsl	r3, r3, #2
   48854:	add	r3, r1, r3
   48858:	str	r3, [fp, #-16]
   4885c:	mov	r3, #0
   48860:	str	r3, [fp, #-8]
   48864:	b	488d0 <__assert_fail@plt+0x361e4>
   48868:	ldr	r3, [fp, #-16]
   4886c:	ldr	r2, [r3, #8]
   48870:	ldr	r3, [fp, #-8]
   48874:	lsl	r3, r3, #2
   48878:	add	r3, r2, r3
   4887c:	ldr	r3, [r3]
   48880:	str	r3, [fp, #-20]	; 0xffffffec
   48884:	ldr	r3, [fp, #-20]	; 0xffffffec
   48888:	ldr	r2, [r3]
   4888c:	ldr	r3, [fp, #-12]
   48890:	cmp	r2, r3
   48894:	bne	488c0 <__assert_fail@plt+0x361d4>
   48898:	ldr	r3, [fp, #-20]	; 0xffffffec
   4889c:	add	r3, r3, #4
   488a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   488a4:	mov	r0, r3
   488a8:	bl	480dc <__assert_fail@plt+0x359f0>
   488ac:	mov	r3, r0
   488b0:	cmp	r3, #0
   488b4:	beq	488c4 <__assert_fail@plt+0x361d8>
   488b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   488bc:	b	48924 <__assert_fail@plt+0x36238>
   488c0:	nop			; (mov r0, r0)
   488c4:	ldr	r3, [fp, #-8]
   488c8:	add	r3, r3, #1
   488cc:	str	r3, [fp, #-8]
   488d0:	ldr	r3, [fp, #-16]
   488d4:	ldr	r2, [r3]
   488d8:	ldr	r3, [fp, #-8]
   488dc:	cmp	r2, r3
   488e0:	bgt	48868 <__assert_fail@plt+0x3617c>
   488e4:	ldr	r2, [fp, #-12]
   488e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   488ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   488f0:	bl	48d5c <__assert_fail@plt+0x36670>
   488f4:	str	r0, [fp, #-24]	; 0xffffffe8
   488f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   488fc:	cmp	r3, #0
   48900:	moveq	r3, #1
   48904:	movne	r3, #0
   48908:	uxtb	r3, r3
   4890c:	cmp	r3, #0
   48910:	beq	48920 <__assert_fail@plt+0x36234>
   48914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48918:	mov	r2, #12
   4891c:	str	r2, [r3]
   48920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48924:	mov	r0, r3
   48928:	sub	sp, fp, #4
   4892c:	pop	{fp, pc}
   48930:	push	{fp, lr}
   48934:	add	fp, sp, #4
   48938:	sub	sp, sp, #40	; 0x28
   4893c:	str	r0, [fp, #-32]	; 0xffffffe0
   48940:	str	r1, [fp, #-36]	; 0xffffffdc
   48944:	str	r2, [fp, #-40]	; 0xffffffd8
   48948:	str	r3, [fp, #-44]	; 0xffffffd4
   4894c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48950:	ldr	r3, [r3, #4]
   48954:	cmp	r3, #0
   48958:	bne	48970 <__assert_fail@plt+0x36284>
   4895c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48960:	mov	r2, #0
   48964:	str	r2, [r3]
   48968:	mov	r3, #0
   4896c:	b	48a98 <__assert_fail@plt+0x363ac>
   48970:	ldr	r1, [fp, #-44]	; 0xffffffd4
   48974:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48978:	bl	4873c <__assert_fail@plt+0x36050>
   4897c:	str	r0, [fp, #-12]
   48980:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48984:	ldr	r1, [r3, #32]
   48988:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4898c:	ldr	r2, [r3, #68]	; 0x44
   48990:	ldr	r3, [fp, #-12]
   48994:	and	r2, r2, r3
   48998:	mov	r3, r2
   4899c:	lsl	r3, r3, #1
   489a0:	add	r3, r3, r2
   489a4:	lsl	r3, r3, #2
   489a8:	add	r3, r1, r3
   489ac:	str	r3, [fp, #-16]
   489b0:	mov	r3, #0
   489b4:	str	r3, [fp, #-8]
   489b8:	b	48a40 <__assert_fail@plt+0x36354>
   489bc:	ldr	r3, [fp, #-16]
   489c0:	ldr	r2, [r3, #8]
   489c4:	ldr	r3, [fp, #-8]
   489c8:	lsl	r3, r3, #2
   489cc:	add	r3, r2, r3
   489d0:	ldr	r3, [r3]
   489d4:	str	r3, [fp, #-20]	; 0xffffffec
   489d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   489dc:	ldr	r2, [r3]
   489e0:	ldr	r3, [fp, #-12]
   489e4:	cmp	r2, r3
   489e8:	bne	48a34 <__assert_fail@plt+0x36348>
   489ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   489f0:	ldrb	r3, [r3, #52]	; 0x34
   489f4:	and	r3, r3, #15
   489f8:	uxtb	r3, r3
   489fc:	mov	r2, r3
   48a00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   48a04:	cmp	r2, r3
   48a08:	bne	48a34 <__assert_fail@plt+0x36348>
   48a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48a10:	ldr	r3, [r3, #40]	; 0x28
   48a14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48a18:	mov	r0, r3
   48a1c:	bl	480dc <__assert_fail@plt+0x359f0>
   48a20:	mov	r3, r0
   48a24:	cmp	r3, #0
   48a28:	beq	48a34 <__assert_fail@plt+0x36348>
   48a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48a30:	b	48a98 <__assert_fail@plt+0x363ac>
   48a34:	ldr	r3, [fp, #-8]
   48a38:	add	r3, r3, #1
   48a3c:	str	r3, [fp, #-8]
   48a40:	ldr	r3, [fp, #-16]
   48a44:	ldr	r2, [r3]
   48a48:	ldr	r3, [fp, #-8]
   48a4c:	cmp	r2, r3
   48a50:	bgt	489bc <__assert_fail@plt+0x362d0>
   48a54:	ldr	r3, [fp, #-12]
   48a58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   48a5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   48a64:	bl	48fa8 <__assert_fail@plt+0x368bc>
   48a68:	str	r0, [fp, #-24]	; 0xffffffe8
   48a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48a70:	cmp	r3, #0
   48a74:	moveq	r3, #1
   48a78:	movne	r3, #0
   48a7c:	uxtb	r3, r3
   48a80:	cmp	r3, #0
   48a84:	beq	48a94 <__assert_fail@plt+0x363a8>
   48a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48a8c:	mov	r2, #12
   48a90:	str	r2, [r3]
   48a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48a98:	mov	r0, r3
   48a9c:	sub	sp, fp, #4
   48aa0:	pop	{fp, pc}
   48aa4:	push	{fp, lr}
   48aa8:	add	fp, sp, #4
   48aac:	sub	sp, sp, #40	; 0x28
   48ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   48ab4:	str	r1, [fp, #-36]	; 0xffffffdc
   48ab8:	str	r2, [fp, #-40]	; 0xffffffd8
   48abc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48ac0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   48ac4:	str	r2, [r3]
   48ac8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48acc:	add	r2, r3, #16
   48ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48ad4:	ldr	r3, [r3, #8]
   48ad8:	mov	r1, r3
   48adc:	mov	r0, r2
   48ae0:	bl	46e00 <__assert_fail@plt+0x34714>
   48ae4:	str	r0, [fp, #-12]
   48ae8:	ldr	r3, [fp, #-12]
   48aec:	cmp	r3, #0
   48af0:	movne	r3, #1
   48af4:	moveq	r3, #0
   48af8:	uxtb	r3, r3
   48afc:	cmp	r3, #0
   48b00:	beq	48b0c <__assert_fail@plt+0x36420>
   48b04:	mov	r3, #12
   48b08:	b	48ca0 <__assert_fail@plt+0x365b4>
   48b0c:	mov	r3, #0
   48b10:	str	r3, [fp, #-8]
   48b14:	b	48b94 <__assert_fail@plt+0x364a8>
   48b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48b1c:	ldr	r2, [r3, #12]
   48b20:	ldr	r3, [fp, #-8]
   48b24:	lsl	r3, r3, #2
   48b28:	add	r3, r2, r3
   48b2c:	ldr	r3, [r3]
   48b30:	str	r3, [fp, #-16]
   48b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48b38:	ldr	r2, [r3]
   48b3c:	ldr	r3, [fp, #-16]
   48b40:	lsl	r3, r3, #3
   48b44:	add	r3, r2, r3
   48b48:	ldrb	r3, [r3, #4]
   48b4c:	and	r3, r3, #8
   48b50:	cmp	r3, #0
   48b54:	bne	48b88 <__assert_fail@plt+0x3649c>
   48b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48b5c:	add	r3, r3, #16
   48b60:	ldr	r1, [fp, #-16]
   48b64:	mov	r0, r3
   48b68:	bl	48008 <__assert_fail@plt+0x3591c>
   48b6c:	mov	r3, r0
   48b70:	eor	r3, r3, #1
   48b74:	uxtb	r3, r3
   48b78:	cmp	r3, #0
   48b7c:	beq	48b88 <__assert_fail@plt+0x3649c>
   48b80:	mov	r3, #12
   48b84:	b	48ca0 <__assert_fail@plt+0x365b4>
   48b88:	ldr	r3, [fp, #-8]
   48b8c:	add	r3, r3, #1
   48b90:	str	r3, [fp, #-8]
   48b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48b98:	ldr	r2, [r3, #8]
   48b9c:	ldr	r3, [fp, #-8]
   48ba0:	cmp	r2, r3
   48ba4:	bgt	48b18 <__assert_fail@plt+0x3642c>
   48ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48bac:	ldr	r1, [r3, #32]
   48bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48bb4:	ldr	r2, [r3, #68]	; 0x44
   48bb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48bbc:	and	r2, r2, r3
   48bc0:	mov	r3, r2
   48bc4:	lsl	r3, r3, #1
   48bc8:	add	r3, r3, r2
   48bcc:	lsl	r3, r3, #2
   48bd0:	add	r3, r1, r3
   48bd4:	str	r3, [fp, #-20]	; 0xffffffec
   48bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   48bdc:	ldr	r2, [r3, #4]
   48be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   48be4:	ldr	r3, [r3]
   48be8:	cmp	r2, r3
   48bec:	movle	r3, #1
   48bf0:	movgt	r3, #0
   48bf4:	uxtb	r3, r3
   48bf8:	cmp	r3, #0
   48bfc:	beq	48c70 <__assert_fail@plt+0x36584>
   48c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c04:	ldr	r3, [r3]
   48c08:	add	r3, r3, #1
   48c0c:	lsl	r3, r3, #1
   48c10:	str	r3, [fp, #-24]	; 0xffffffe8
   48c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c18:	ldr	r2, [r3, #8]
   48c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48c20:	lsl	r3, r3, #2
   48c24:	mov	r1, r3
   48c28:	mov	r0, r2
   48c2c:	bl	43d30 <__assert_fail@plt+0x31644>
   48c30:	str	r0, [fp, #-28]	; 0xffffffe4
   48c34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48c38:	cmp	r3, #0
   48c3c:	moveq	r3, #1
   48c40:	movne	r3, #0
   48c44:	uxtb	r3, r3
   48c48:	cmp	r3, #0
   48c4c:	beq	48c58 <__assert_fail@plt+0x3656c>
   48c50:	mov	r3, #12
   48c54:	b	48ca0 <__assert_fail@plt+0x365b4>
   48c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   48c60:	str	r2, [r3, #8]
   48c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48c6c:	str	r2, [r3, #4]
   48c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c74:	ldr	r2, [r3, #8]
   48c78:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c7c:	ldr	r3, [r3]
   48c80:	add	r0, r3, #1
   48c84:	ldr	r1, [fp, #-20]	; 0xffffffec
   48c88:	str	r0, [r1]
   48c8c:	lsl	r3, r3, #2
   48c90:	add	r3, r2, r3
   48c94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   48c98:	str	r2, [r3]
   48c9c:	mov	r3, #0
   48ca0:	mov	r0, r3
   48ca4:	sub	sp, fp, #4
   48ca8:	pop	{fp, pc}
   48cac:	push	{fp, lr}
   48cb0:	add	fp, sp, #4
   48cb4:	sub	sp, sp, #8
   48cb8:	str	r0, [fp, #-8]
   48cbc:	ldr	r3, [fp, #-8]
   48cc0:	ldr	r3, [r3, #24]
   48cc4:	mov	r0, r3
   48cc8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48ccc:	ldr	r3, [fp, #-8]
   48cd0:	ldr	r3, [r3, #36]	; 0x24
   48cd4:	mov	r0, r3
   48cd8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48cdc:	ldr	r3, [fp, #-8]
   48ce0:	ldr	r2, [r3, #40]	; 0x28
   48ce4:	ldr	r3, [fp, #-8]
   48ce8:	add	r3, r3, #4
   48cec:	cmp	r2, r3
   48cf0:	beq	48d18 <__assert_fail@plt+0x3662c>
   48cf4:	ldr	r3, [fp, #-8]
   48cf8:	ldr	r3, [r3, #40]	; 0x28
   48cfc:	ldr	r3, [r3, #8]
   48d00:	mov	r0, r3
   48d04:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48d08:	ldr	r3, [fp, #-8]
   48d0c:	ldr	r3, [r3, #40]	; 0x28
   48d10:	mov	r0, r3
   48d14:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48d18:	ldr	r3, [fp, #-8]
   48d1c:	ldr	r3, [r3, #12]
   48d20:	mov	r0, r3
   48d24:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48d28:	ldr	r3, [fp, #-8]
   48d2c:	ldr	r3, [r3, #48]	; 0x30
   48d30:	mov	r0, r3
   48d34:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48d38:	ldr	r3, [fp, #-8]
   48d3c:	ldr	r3, [r3, #44]	; 0x2c
   48d40:	mov	r0, r3
   48d44:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48d48:	ldr	r0, [fp, #-8]
   48d4c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48d50:	nop			; (mov r0, r0)
   48d54:	sub	sp, fp, #4
   48d58:	pop	{fp, pc}
   48d5c:	push	{fp, lr}
   48d60:	add	fp, sp, #4
   48d64:	sub	sp, sp, #40	; 0x28
   48d68:	str	r0, [fp, #-32]	; 0xffffffe0
   48d6c:	str	r1, [fp, #-36]	; 0xffffffdc
   48d70:	str	r2, [fp, #-40]	; 0xffffffd8
   48d74:	mov	r1, #1
   48d78:	mov	r0, #56	; 0x38
   48d7c:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   48d80:	mov	r3, r0
   48d84:	str	r3, [fp, #-12]
   48d88:	ldr	r3, [fp, #-12]
   48d8c:	cmp	r3, #0
   48d90:	moveq	r3, #1
   48d94:	movne	r3, #0
   48d98:	uxtb	r3, r3
   48d9c:	cmp	r3, #0
   48da0:	beq	48dac <__assert_fail@plt+0x366c0>
   48da4:	mov	r3, #0
   48da8:	b	48f98 <__assert_fail@plt+0x368ac>
   48dac:	ldr	r3, [fp, #-12]
   48db0:	add	r3, r3, #4
   48db4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   48db8:	mov	r0, r3
   48dbc:	bl	47038 <__assert_fail@plt+0x3494c>
   48dc0:	str	r0, [fp, #-16]
   48dc4:	ldr	r3, [fp, #-16]
   48dc8:	cmp	r3, #0
   48dcc:	movne	r3, #1
   48dd0:	moveq	r3, #0
   48dd4:	uxtb	r3, r3
   48dd8:	cmp	r3, #0
   48ddc:	beq	48df0 <__assert_fail@plt+0x36704>
   48de0:	ldr	r0, [fp, #-12]
   48de4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   48de8:	mov	r3, #0
   48dec:	b	48f98 <__assert_fail@plt+0x368ac>
   48df0:	ldr	r3, [fp, #-12]
   48df4:	add	r2, r3, #4
   48df8:	ldr	r3, [fp, #-12]
   48dfc:	str	r2, [r3, #40]	; 0x28
   48e00:	mov	r3, #0
   48e04:	str	r3, [fp, #-8]
   48e08:	b	48f40 <__assert_fail@plt+0x36854>
   48e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48e10:	ldr	r2, [r3]
   48e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48e18:	ldr	r1, [r3, #8]
   48e1c:	ldr	r3, [fp, #-8]
   48e20:	lsl	r3, r3, #2
   48e24:	add	r3, r1, r3
   48e28:	ldr	r3, [r3]
   48e2c:	lsl	r3, r3, #3
   48e30:	add	r3, r2, r3
   48e34:	str	r3, [fp, #-20]	; 0xffffffec
   48e38:	ldr	r3, [fp, #-20]	; 0xffffffec
   48e3c:	ldrb	r3, [r3, #4]
   48e40:	str	r3, [fp, #-24]	; 0xffffffe8
   48e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48e48:	cmp	r3, #1
   48e4c:	bne	48e68 <__assert_fail@plt+0x3677c>
   48e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   48e54:	ldr	r2, [r3, #4]
   48e58:	ldr	r3, [pc, #324]	; 48fa4 <__assert_fail@plt+0x368b8>
   48e5c:	and	r3, r3, r2
   48e60:	cmp	r3, #0
   48e64:	beq	48f30 <__assert_fail@plt+0x36844>
   48e68:	ldr	r3, [fp, #-12]
   48e6c:	ldrb	r3, [r3, #52]	; 0x34
   48e70:	lsr	r3, r3, #5
   48e74:	and	r3, r3, #1
   48e78:	uxtb	r2, r3
   48e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48e80:	ldrb	r3, [r3, #6]
   48e84:	lsr	r3, r3, #4
   48e88:	and	r3, r3, #1
   48e8c:	uxtb	r3, r3
   48e90:	orr	r3, r2, r3
   48e94:	uxtb	r3, r3
   48e98:	ldr	r1, [fp, #-12]
   48e9c:	ldrb	r2, [r1, #52]	; 0x34
   48ea0:	and	r3, r3, #1
   48ea4:	bic	r2, r2, #32
   48ea8:	lsl	r3, r3, #5
   48eac:	orr	r3, r3, r2
   48eb0:	mov	r2, r3
   48eb4:	strb	r2, [r1, #52]	; 0x34
   48eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48ebc:	cmp	r3, #2
   48ec0:	bne	48ed8 <__assert_fail@plt+0x367ec>
   48ec4:	ldr	r2, [fp, #-12]
   48ec8:	ldrb	r3, [r2, #52]	; 0x34
   48ecc:	orr	r3, r3, #16
   48ed0:	strb	r3, [r2, #52]	; 0x34
   48ed4:	b	48f34 <__assert_fail@plt+0x36848>
   48ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48edc:	cmp	r3, #4
   48ee0:	bne	48ef8 <__assert_fail@plt+0x3680c>
   48ee4:	ldr	r2, [fp, #-12]
   48ee8:	ldrb	r3, [r2, #52]	; 0x34
   48eec:	orr	r3, r3, #64	; 0x40
   48ef0:	strb	r3, [r2, #52]	; 0x34
   48ef4:	b	48f34 <__assert_fail@plt+0x36848>
   48ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48efc:	cmp	r3, #12
   48f00:	beq	48f1c <__assert_fail@plt+0x36830>
   48f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   48f08:	ldr	r2, [r3, #4]
   48f0c:	ldr	r3, [pc, #144]	; 48fa4 <__assert_fail@plt+0x368b8>
   48f10:	and	r3, r3, r2
   48f14:	cmp	r3, #0
   48f18:	beq	48f34 <__assert_fail@plt+0x36848>
   48f1c:	ldr	r2, [fp, #-12]
   48f20:	ldrb	r3, [r2, #52]	; 0x34
   48f24:	orr	r3, r3, #128	; 0x80
   48f28:	strb	r3, [r2, #52]	; 0x34
   48f2c:	b	48f34 <__assert_fail@plt+0x36848>
   48f30:	nop			; (mov r0, r0)
   48f34:	ldr	r3, [fp, #-8]
   48f38:	add	r3, r3, #1
   48f3c:	str	r3, [fp, #-8]
   48f40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48f44:	ldr	r2, [r3, #4]
   48f48:	ldr	r3, [fp, #-8]
   48f4c:	cmp	r2, r3
   48f50:	bgt	48e0c <__assert_fail@plt+0x36720>
   48f54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   48f58:	ldr	r1, [fp, #-12]
   48f5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48f60:	bl	48aa4 <__assert_fail@plt+0x363b8>
   48f64:	str	r0, [fp, #-16]
   48f68:	ldr	r3, [fp, #-16]
   48f6c:	cmp	r3, #0
   48f70:	movne	r3, #1
   48f74:	moveq	r3, #0
   48f78:	uxtb	r3, r3
   48f7c:	cmp	r3, #0
   48f80:	beq	48f94 <__assert_fail@plt+0x368a8>
   48f84:	ldr	r0, [fp, #-12]
   48f88:	bl	48cac <__assert_fail@plt+0x365c0>
   48f8c:	mov	r3, #0
   48f90:	str	r3, [fp, #-12]
   48f94:	ldr	r3, [fp, #-12]
   48f98:	mov	r0, r3
   48f9c:	sub	sp, fp, #4
   48fa0:	pop	{fp, pc}
   48fa4:	andeq	pc, r3, r0, lsl #30
   48fa8:	push	{fp, lr}
   48fac:	add	fp, sp, #4
   48fb0:	sub	sp, sp, #48	; 0x30
   48fb4:	str	r0, [fp, #-40]	; 0xffffffd8
   48fb8:	str	r1, [fp, #-44]	; 0xffffffd4
   48fbc:	str	r2, [fp, #-48]	; 0xffffffd0
   48fc0:	str	r3, [fp, #-52]	; 0xffffffcc
   48fc4:	mov	r3, #0
   48fc8:	str	r3, [fp, #-12]
   48fcc:	mov	r1, #1
   48fd0:	mov	r0, #56	; 0x38
   48fd4:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   48fd8:	mov	r3, r0
   48fdc:	str	r3, [fp, #-16]
   48fe0:	ldr	r3, [fp, #-16]
   48fe4:	cmp	r3, #0
   48fe8:	moveq	r3, #1
   48fec:	movne	r3, #0
   48ff0:	uxtb	r3, r3
   48ff4:	cmp	r3, #0
   48ff8:	beq	49004 <__assert_fail@plt+0x36918>
   48ffc:	mov	r3, #0
   49000:	b	4934c <__assert_fail@plt+0x36c60>
   49004:	ldr	r3, [fp, #-16]
   49008:	add	r3, r3, #4
   4900c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49010:	mov	r0, r3
   49014:	bl	47038 <__assert_fail@plt+0x3494c>
   49018:	str	r0, [fp, #-20]	; 0xffffffec
   4901c:	ldr	r3, [fp, #-20]	; 0xffffffec
   49020:	cmp	r3, #0
   49024:	movne	r3, #1
   49028:	moveq	r3, #0
   4902c:	uxtb	r3, r3
   49030:	cmp	r3, #0
   49034:	beq	49048 <__assert_fail@plt+0x3695c>
   49038:	ldr	r0, [fp, #-16]
   4903c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   49040:	mov	r3, #0
   49044:	b	4934c <__assert_fail@plt+0x36c60>
   49048:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4904c:	uxtb	r3, r3
   49050:	and	r3, r3, #15
   49054:	uxtb	r1, r3
   49058:	ldr	r2, [fp, #-16]
   4905c:	ldrb	r3, [r2, #52]	; 0x34
   49060:	and	r1, r1, #15
   49064:	bic	r3, r3, #15
   49068:	orr	r3, r1, r3
   4906c:	strb	r3, [r2, #52]	; 0x34
   49070:	ldr	r3, [fp, #-16]
   49074:	add	r2, r3, #4
   49078:	ldr	r3, [fp, #-16]
   4907c:	str	r2, [r3, #40]	; 0x28
   49080:	mov	r3, #0
   49084:	str	r3, [fp, #-8]
   49088:	b	492f4 <__assert_fail@plt+0x36c08>
   4908c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49090:	ldr	r2, [r3]
   49094:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49098:	ldr	r1, [r3, #8]
   4909c:	ldr	r3, [fp, #-8]
   490a0:	lsl	r3, r3, #2
   490a4:	add	r3, r1, r3
   490a8:	ldr	r3, [r3]
   490ac:	lsl	r3, r3, #3
   490b0:	add	r3, r2, r3
   490b4:	str	r3, [fp, #-24]	; 0xffffffe8
   490b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   490bc:	ldrb	r3, [r3, #4]
   490c0:	str	r3, [fp, #-28]	; 0xffffffe4
   490c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   490c8:	ldr	r3, [r3, #4]
   490cc:	lsr	r3, r3, #8
   490d0:	lsl	r3, r3, #22
   490d4:	lsr	r3, r3, #22
   490d8:	uxth	r3, r3
   490dc:	str	r3, [fp, #-32]	; 0xffffffe0
   490e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   490e4:	cmp	r3, #1
   490e8:	bne	490f8 <__assert_fail@plt+0x36a0c>
   490ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   490f0:	cmp	r3, #0
   490f4:	beq	492e4 <__assert_fail@plt+0x36bf8>
   490f8:	ldr	r3, [fp, #-16]
   490fc:	ldrb	r3, [r3, #52]	; 0x34
   49100:	lsr	r3, r3, #5
   49104:	and	r3, r3, #1
   49108:	uxtb	r2, r3
   4910c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49110:	ldrb	r3, [r3, #6]
   49114:	lsr	r3, r3, #4
   49118:	and	r3, r3, #1
   4911c:	uxtb	r3, r3
   49120:	orr	r3, r2, r3
   49124:	uxtb	r3, r3
   49128:	ldr	r1, [fp, #-16]
   4912c:	ldrb	r2, [r1, #52]	; 0x34
   49130:	and	r3, r3, #1
   49134:	bic	r2, r2, #32
   49138:	lsl	r3, r3, #5
   4913c:	orr	r3, r3, r2
   49140:	mov	r2, r3
   49144:	strb	r2, [r1, #52]	; 0x34
   49148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4914c:	cmp	r3, #2
   49150:	bne	49168 <__assert_fail@plt+0x36a7c>
   49154:	ldr	r2, [fp, #-16]
   49158:	ldrb	r3, [r2, #52]	; 0x34
   4915c:	orr	r3, r3, #16
   49160:	strb	r3, [r2, #52]	; 0x34
   49164:	b	49184 <__assert_fail@plt+0x36a98>
   49168:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4916c:	cmp	r3, #4
   49170:	bne	49184 <__assert_fail@plt+0x36a98>
   49174:	ldr	r2, [fp, #-16]
   49178:	ldrb	r3, [r2, #52]	; 0x34
   4917c:	orr	r3, r3, #64	; 0x40
   49180:	strb	r3, [r2, #52]	; 0x34
   49184:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49188:	cmp	r3, #0
   4918c:	beq	492e8 <__assert_fail@plt+0x36bfc>
   49190:	ldr	r3, [fp, #-16]
   49194:	ldr	r2, [r3, #40]	; 0x28
   49198:	ldr	r3, [fp, #-16]
   4919c:	add	r3, r3, #4
   491a0:	cmp	r2, r3
   491a4:	bne	49238 <__assert_fail@plt+0x36b4c>
   491a8:	mov	r0, #12
   491ac:	bl	42ba8 <__assert_fail@plt+0x304bc>
   491b0:	mov	r3, r0
   491b4:	str	r3, [fp, #-36]	; 0xffffffdc
   491b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   491bc:	cmp	r3, #0
   491c0:	moveq	r3, #1
   491c4:	movne	r3, #0
   491c8:	uxtb	r3, r3
   491cc:	cmp	r3, #0
   491d0:	beq	491e4 <__assert_fail@plt+0x36af8>
   491d4:	ldr	r0, [fp, #-16]
   491d8:	bl	48cac <__assert_fail@plt+0x365c0>
   491dc:	mov	r3, #0
   491e0:	b	4934c <__assert_fail@plt+0x36c60>
   491e4:	ldr	r3, [fp, #-16]
   491e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   491ec:	str	r2, [r3, #40]	; 0x28
   491f0:	ldr	r3, [fp, #-16]
   491f4:	ldr	r3, [r3, #40]	; 0x28
   491f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   491fc:	mov	r0, r3
   49200:	bl	47038 <__assert_fail@plt+0x3494c>
   49204:	mov	r3, r0
   49208:	cmp	r3, #0
   4920c:	beq	49220 <__assert_fail@plt+0x36b34>
   49210:	ldr	r0, [fp, #-16]
   49214:	bl	48cac <__assert_fail@plt+0x365c0>
   49218:	mov	r3, #0
   4921c:	b	4934c <__assert_fail@plt+0x36c60>
   49220:	mov	r3, #0
   49224:	str	r3, [fp, #-12]
   49228:	ldr	r2, [fp, #-16]
   4922c:	ldrb	r3, [r2, #52]	; 0x34
   49230:	orr	r3, r3, #128	; 0x80
   49234:	strb	r3, [r2, #52]	; 0x34
   49238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4923c:	and	r3, r3, #1
   49240:	cmp	r3, #0
   49244:	beq	49258 <__assert_fail@plt+0x36b6c>
   49248:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4924c:	and	r3, r3, #1
   49250:	cmp	r3, #0
   49254:	beq	492b8 <__assert_fail@plt+0x36bcc>
   49258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4925c:	and	r3, r3, #2
   49260:	cmp	r3, #0
   49264:	beq	49278 <__assert_fail@plt+0x36b8c>
   49268:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4926c:	and	r3, r3, #1
   49270:	cmp	r3, #0
   49274:	bne	492b8 <__assert_fail@plt+0x36bcc>
   49278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4927c:	and	r3, r3, #16
   49280:	cmp	r3, #0
   49284:	beq	49298 <__assert_fail@plt+0x36bac>
   49288:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4928c:	and	r3, r3, #2
   49290:	cmp	r3, #0
   49294:	beq	492b8 <__assert_fail@plt+0x36bcc>
   49298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4929c:	and	r3, r3, #64	; 0x40
   492a0:	cmp	r3, #0
   492a4:	beq	492e8 <__assert_fail@plt+0x36bfc>
   492a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   492ac:	and	r3, r3, #4
   492b0:	cmp	r3, #0
   492b4:	bne	492e8 <__assert_fail@plt+0x36bfc>
   492b8:	ldr	r3, [fp, #-16]
   492bc:	add	r0, r3, #4
   492c0:	ldr	r2, [fp, #-8]
   492c4:	ldr	r3, [fp, #-12]
   492c8:	sub	r3, r2, r3
   492cc:	mov	r1, r3
   492d0:	bl	48290 <__assert_fail@plt+0x35ba4>
   492d4:	ldr	r3, [fp, #-12]
   492d8:	add	r3, r3, #1
   492dc:	str	r3, [fp, #-12]
   492e0:	b	492e8 <__assert_fail@plt+0x36bfc>
   492e4:	nop			; (mov r0, r0)
   492e8:	ldr	r3, [fp, #-8]
   492ec:	add	r3, r3, #1
   492f0:	str	r3, [fp, #-8]
   492f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   492f8:	ldr	r2, [r3, #4]
   492fc:	ldr	r3, [fp, #-8]
   49300:	cmp	r2, r3
   49304:	bgt	4908c <__assert_fail@plt+0x369a0>
   49308:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4930c:	ldr	r1, [fp, #-16]
   49310:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49314:	bl	48aa4 <__assert_fail@plt+0x363b8>
   49318:	str	r0, [fp, #-20]	; 0xffffffec
   4931c:	ldr	r3, [fp, #-20]	; 0xffffffec
   49320:	cmp	r3, #0
   49324:	movne	r3, #1
   49328:	moveq	r3, #0
   4932c:	uxtb	r3, r3
   49330:	cmp	r3, #0
   49334:	beq	49348 <__assert_fail@plt+0x36c5c>
   49338:	ldr	r0, [fp, #-16]
   4933c:	bl	48cac <__assert_fail@plt+0x365c0>
   49340:	mov	r3, #0
   49344:	str	r3, [fp, #-16]
   49348:	ldr	r3, [fp, #-16]
   4934c:	mov	r0, r3
   49350:	sub	sp, fp, #4
   49354:	pop	{fp, pc}
   49358:	push	{fp, lr}
   4935c:	add	fp, sp, #4
   49360:	sub	sp, sp, #24
   49364:	str	r0, [fp, #-16]
   49368:	str	r1, [fp, #-20]	; 0xffffffec
   4936c:	str	r2, [fp, #-24]	; 0xffffffe8
   49370:	ldr	r3, [pc, #160]	; 49418 <__assert_fail@plt+0x36d2c>
   49374:	ldr	r3, [r3]
   49378:	and	r3, r3, #33554432	; 0x2000000
   4937c:	cmp	r3, #0
   49380:	movne	r3, #1
   49384:	moveq	r3, #0
   49388:	uxtb	r3, r3
   4938c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49390:	ldrb	r2, [r1, #28]
   49394:	and	r3, r3, #1
   49398:	bic	r2, r2, #16
   4939c:	lsl	r3, r3, #4
   493a0:	orr	r3, r3, r2
   493a4:	mov	r2, r3
   493a8:	strb	r2, [r1, #28]
   493ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   493b0:	ldrb	r3, [r2, #28]
   493b4:	orr	r3, r3, #128	; 0x80
   493b8:	strb	r3, [r2, #28]
   493bc:	ldr	r3, [pc, #84]	; 49418 <__assert_fail@plt+0x36d2c>
   493c0:	ldr	r3, [r3]
   493c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   493c8:	ldr	r1, [fp, #-16]
   493cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   493d0:	bl	4a318 <__assert_fail@plt+0x37c2c>
   493d4:	str	r0, [fp, #-8]
   493d8:	ldr	r3, [fp, #-8]
   493dc:	cmp	r3, #0
   493e0:	bne	493ec <__assert_fail@plt+0x36d00>
   493e4:	mov	r3, #0
   493e8:	b	4940c <__assert_fail@plt+0x36d20>
   493ec:	ldr	r2, [pc, #40]	; 4941c <__assert_fail@plt+0x36d30>
   493f0:	ldr	r3, [fp, #-8]
   493f4:	ldr	r3, [r2, r3, lsl #2]
   493f8:	ldr	r2, [pc, #32]	; 49420 <__assert_fail@plt+0x36d34>
   493fc:	add	r3, r3, r2
   49400:	mov	r0, r3
   49404:	bl	12398 <gettext@plt>
   49408:	mov	r3, r0
   4940c:	mov	r0, r3
   49410:	sub	sp, fp, #4
   49414:	pop	{fp, pc}
   49418:	andeq	sp, r7, r0, lsr #1
   4941c:	andeq	sl, r6, r4, ror lr
   49420:	strdeq	sl, [r6], -r4
   49424:	push	{fp}		; (str fp, [sp, #-4]!)
   49428:	add	fp, sp, #0
   4942c:	sub	sp, sp, #20
   49430:	str	r0, [fp, #-16]
   49434:	ldr	r3, [pc, #36]	; 49460 <__assert_fail@plt+0x36d74>
   49438:	ldr	r3, [r3]
   4943c:	str	r3, [fp, #-8]
   49440:	ldr	r2, [pc, #24]	; 49460 <__assert_fail@plt+0x36d74>
   49444:	ldr	r3, [fp, #-16]
   49448:	str	r3, [r2]
   4944c:	ldr	r3, [fp, #-8]
   49450:	mov	r0, r3
   49454:	add	sp, fp, #0
   49458:	pop	{fp}		; (ldr fp, [sp], #4)
   4945c:	bx	lr
   49460:	andeq	sp, r7, r0, lsr #1
   49464:	push	{fp, lr}
   49468:	add	fp, sp, #4
   4946c:	sub	sp, sp, #16
   49470:	str	r0, [fp, #-16]
   49474:	ldr	r3, [fp, #-16]
   49478:	ldr	r3, [r3]
   4947c:	str	r3, [fp, #-8]
   49480:	ldr	r3, [fp, #-16]
   49484:	ldr	r3, [r3, #16]
   49488:	str	r3, [fp, #-12]
   4948c:	mov	r2, #256	; 0x100
   49490:	mov	r1, #0
   49494:	ldr	r0, [fp, #-12]
   49498:	bl	12434 <memset@plt>
   4949c:	ldr	r3, [fp, #-8]
   494a0:	ldr	r3, [r3, #36]	; 0x24
   494a4:	ldr	r2, [fp, #-12]
   494a8:	mov	r1, r3
   494ac:	ldr	r0, [fp, #-16]
   494b0:	bl	49564 <__assert_fail@plt+0x36e78>
   494b4:	ldr	r3, [fp, #-8]
   494b8:	ldr	r2, [r3, #36]	; 0x24
   494bc:	ldr	r3, [fp, #-8]
   494c0:	ldr	r3, [r3, #40]	; 0x28
   494c4:	cmp	r2, r3
   494c8:	beq	494e4 <__assert_fail@plt+0x36df8>
   494cc:	ldr	r3, [fp, #-8]
   494d0:	ldr	r3, [r3, #40]	; 0x28
   494d4:	ldr	r2, [fp, #-12]
   494d8:	mov	r1, r3
   494dc:	ldr	r0, [fp, #-16]
   494e0:	bl	49564 <__assert_fail@plt+0x36e78>
   494e4:	ldr	r3, [fp, #-8]
   494e8:	ldr	r2, [r3, #36]	; 0x24
   494ec:	ldr	r3, [fp, #-8]
   494f0:	ldr	r3, [r3, #44]	; 0x2c
   494f4:	cmp	r2, r3
   494f8:	beq	49514 <__assert_fail@plt+0x36e28>
   494fc:	ldr	r3, [fp, #-8]
   49500:	ldr	r3, [r3, #44]	; 0x2c
   49504:	ldr	r2, [fp, #-12]
   49508:	mov	r1, r3
   4950c:	ldr	r0, [fp, #-16]
   49510:	bl	49564 <__assert_fail@plt+0x36e78>
   49514:	ldr	r3, [fp, #-8]
   49518:	ldr	r2, [r3, #36]	; 0x24
   4951c:	ldr	r3, [fp, #-8]
   49520:	ldr	r3, [r3, #48]	; 0x30
   49524:	cmp	r2, r3
   49528:	beq	49544 <__assert_fail@plt+0x36e58>
   4952c:	ldr	r3, [fp, #-8]
   49530:	ldr	r3, [r3, #48]	; 0x30
   49534:	ldr	r2, [fp, #-12]
   49538:	mov	r1, r3
   4953c:	ldr	r0, [fp, #-16]
   49540:	bl	49564 <__assert_fail@plt+0x36e78>
   49544:	ldr	r2, [fp, #-16]
   49548:	ldrb	r3, [r2, #28]
   4954c:	orr	r3, r3, #8
   49550:	strb	r3, [r2, #28]
   49554:	mov	r3, #0
   49558:	mov	r0, r3
   4955c:	sub	sp, fp, #4
   49560:	pop	{fp, pc}
   49564:	push	{fp, lr}
   49568:	add	fp, sp, #4
   4956c:	sub	sp, sp, #440	; 0x1b8
   49570:	str	r0, [fp, #-432]	; 0xfffffe50
   49574:	str	r1, [fp, #-436]	; 0xfffffe4c
   49578:	str	r2, [fp, #-440]	; 0xfffffe48
   4957c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   49580:	ldr	r3, [r3]
   49584:	str	r3, [fp, #-36]	; 0xffffffdc
   49588:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4958c:	ldr	r3, [r3, #92]	; 0x5c
   49590:	cmp	r3, #1
   49594:	bne	495b4 <__assert_fail@plt+0x36ec8>
   49598:	ldr	r3, [fp, #-432]	; 0xfffffe50
   4959c:	ldr	r3, [r3, #12]
   495a0:	and	r3, r3, #4194304	; 0x400000
   495a4:	cmp	r3, #0
   495a8:	beq	495b4 <__assert_fail@plt+0x36ec8>
   495ac:	mov	r3, #1
   495b0:	b	495b8 <__assert_fail@plt+0x36ecc>
   495b4:	mov	r3, #0
   495b8:	strb	r3, [fp, #-37]	; 0xffffffdb
   495bc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   495c0:	and	r3, r3, #1
   495c4:	strb	r3, [fp, #-37]	; 0xffffffdb
   495c8:	mov	r3, #0
   495cc:	str	r3, [fp, #-8]
   495d0:	b	49c74 <__assert_fail@plt+0x37588>
   495d4:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   495d8:	ldr	r2, [r3, #12]
   495dc:	ldr	r3, [fp, #-8]
   495e0:	lsl	r3, r3, #2
   495e4:	add	r3, r2, r3
   495e8:	ldr	r3, [r3]
   495ec:	str	r3, [fp, #-12]
   495f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   495f4:	ldr	r2, [r3]
   495f8:	ldr	r3, [fp, #-12]
   495fc:	lsl	r3, r3, #3
   49600:	add	r3, r2, r3
   49604:	ldrb	r3, [r3, #4]
   49608:	str	r3, [fp, #-44]	; 0xffffffd4
   4960c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49610:	cmp	r3, #1
   49614:	bne	49848 <__assert_fail@plt+0x3715c>
   49618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4961c:	ldr	r2, [r3]
   49620:	ldr	r3, [fp, #-12]
   49624:	lsl	r3, r3, #3
   49628:	add	r3, r2, r3
   4962c:	ldrb	r3, [r3]
   49630:	mov	r2, r3
   49634:	ldr	r3, [fp, #-440]	; 0xfffffe48
   49638:	str	r3, [fp, #-56]	; 0xffffffc8
   4963c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   49640:	strb	r3, [fp, #-57]	; 0xffffffc7
   49644:	str	r2, [fp, #-64]	; 0xffffffc0
   49648:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4964c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   49650:	add	r3, r2, r3
   49654:	mov	r2, #1
   49658:	strb	r2, [r3]
   4965c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   49660:	cmp	r3, #0
   49664:	beq	49688 <__assert_fail@plt+0x36f9c>
   49668:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4966c:	bl	12110 <tolower@plt>
   49670:	mov	r3, r0
   49674:	mov	r2, r3
   49678:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4967c:	add	r3, r3, r2
   49680:	mov	r2, #1
   49684:	strb	r2, [r3]
   49688:	ldr	r3, [fp, #-432]	; 0xfffffe50
   4968c:	ldr	r3, [r3, #12]
   49690:	and	r3, r3, #4194304	; 0x400000
   49694:	cmp	r3, #0
   49698:	beq	49c68 <__assert_fail@plt+0x3757c>
   4969c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   496a0:	ldr	r3, [r3, #92]	; 0x5c
   496a4:	cmp	r3, #1
   496a8:	ble	49c68 <__assert_fail@plt+0x3757c>
   496ac:	sub	r3, fp, #140	; 0x8c
   496b0:	str	r3, [fp, #-16]
   496b4:	ldr	r3, [fp, #-16]
   496b8:	add	r2, r3, #1
   496bc:	str	r2, [fp, #-16]
   496c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   496c4:	ldr	r1, [r2]
   496c8:	ldr	r2, [fp, #-12]
   496cc:	lsl	r2, r2, #3
   496d0:	add	r2, r1, r2
   496d4:	ldrb	r2, [r2]
   496d8:	strb	r2, [r3]
   496dc:	b	49708 <__assert_fail@plt+0x3701c>
   496e0:	ldr	r3, [fp, #-16]
   496e4:	add	r2, r3, #1
   496e8:	str	r2, [fp, #-16]
   496ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   496f0:	ldr	r1, [r2]
   496f4:	ldr	r2, [fp, #-12]
   496f8:	lsl	r2, r2, #3
   496fc:	add	r2, r1, r2
   49700:	ldrb	r2, [r2]
   49704:	strb	r2, [r3]
   49708:	ldr	r3, [fp, #-12]
   4970c:	add	r3, r3, #1
   49710:	str	r3, [fp, #-12]
   49714:	ldr	r2, [fp, #-12]
   49718:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4971c:	ldr	r3, [r3, #8]
   49720:	cmp	r2, r3
   49724:	bcs	49770 <__assert_fail@plt+0x37084>
   49728:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4972c:	ldr	r2, [r3]
   49730:	ldr	r3, [fp, #-12]
   49734:	lsl	r3, r3, #3
   49738:	add	r3, r2, r3
   4973c:	ldrb	r3, [r3, #4]
   49740:	cmp	r3, #1
   49744:	bne	49770 <__assert_fail@plt+0x37084>
   49748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4974c:	ldr	r2, [r3]
   49750:	ldr	r3, [fp, #-12]
   49754:	lsl	r3, r3, #3
   49758:	add	r3, r2, r3
   4975c:	ldrb	r3, [r3, #6]
   49760:	and	r3, r3, #32
   49764:	uxtb	r3, r3
   49768:	cmp	r3, #0
   4976c:	bne	496e0 <__assert_fail@plt+0x36ff4>
   49770:	sub	r3, fp, #152	; 0x98
   49774:	mov	r2, #8
   49778:	mov	r1, #0
   4977c:	mov	r0, r3
   49780:	bl	12434 <memset@plt>
   49784:	ldr	r2, [fp, #-16]
   49788:	sub	r3, fp, #140	; 0x8c
   4978c:	sub	r3, r2, r3
   49790:	mov	r2, r3
   49794:	sub	r3, fp, #152	; 0x98
   49798:	sub	r1, fp, #140	; 0x8c
   4979c:	sub	r0, fp, #144	; 0x90
   497a0:	bl	42c50 <__assert_fail@plt+0x30564>
   497a4:	mov	r1, r0
   497a8:	ldr	r2, [fp, #-16]
   497ac:	sub	r3, fp, #140	; 0x8c
   497b0:	sub	r3, r2, r3
   497b4:	cmp	r1, r3
   497b8:	bne	49c68 <__assert_fail@plt+0x3757c>
   497bc:	ldr	r3, [fp, #-144]	; 0xffffff70
   497c0:	mov	r0, r3
   497c4:	bl	12128 <towlower@plt>
   497c8:	mov	r1, r0
   497cc:	sub	r2, fp, #152	; 0x98
   497d0:	sub	r3, fp, #140	; 0x8c
   497d4:	mov	r0, r3
   497d8:	bl	11fc0 <wcrtomb@plt>
   497dc:	mov	r3, r0
   497e0:	cmn	r3, #1
   497e4:	beq	49c68 <__assert_fail@plt+0x3757c>
   497e8:	ldrb	r3, [fp, #-140]	; 0xffffff74
   497ec:	mov	r2, r3
   497f0:	ldr	r3, [fp, #-440]	; 0xfffffe48
   497f4:	str	r3, [fp, #-68]	; 0xffffffbc
   497f8:	mov	r3, #0
   497fc:	strb	r3, [fp, #-69]	; 0xffffffbb
   49800:	str	r2, [fp, #-76]	; 0xffffffb4
   49804:	ldr	r3, [fp, #-76]	; 0xffffffb4
   49808:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4980c:	add	r3, r2, r3
   49810:	mov	r2, #1
   49814:	strb	r2, [r3]
   49818:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   4981c:	cmp	r3, #0
   49820:	beq	49c68 <__assert_fail@plt+0x3757c>
   49824:	ldr	r0, [fp, #-76]	; 0xffffffb4
   49828:	bl	12110 <tolower@plt>
   4982c:	mov	r3, r0
   49830:	mov	r2, r3
   49834:	ldr	r3, [fp, #-68]	; 0xffffffbc
   49838:	add	r3, r3, r2
   4983c:	mov	r2, #1
   49840:	strb	r2, [r3]
   49844:	b	49c68 <__assert_fail@plt+0x3757c>
   49848:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4984c:	cmp	r3, #3
   49850:	bne	49950 <__assert_fail@plt+0x37264>
   49854:	mov	r3, #0
   49858:	str	r3, [fp, #-20]	; 0xffffffec
   4985c:	mov	r3, #0
   49860:	str	r3, [fp, #-24]	; 0xffffffe8
   49864:	b	49940 <__assert_fail@plt+0x37254>
   49868:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4986c:	ldr	r2, [r3]
   49870:	ldr	r3, [fp, #-12]
   49874:	lsl	r3, r3, #3
   49878:	add	r3, r2, r3
   4987c:	ldr	r2, [r3]
   49880:	ldr	r3, [fp, #-20]	; 0xffffffec
   49884:	lsl	r3, r3, #2
   49888:	add	r3, r2, r3
   4988c:	ldr	r3, [r3]
   49890:	str	r3, [fp, #-48]	; 0xffffffd0
   49894:	mov	r3, #0
   49898:	str	r3, [fp, #-28]	; 0xffffffe4
   4989c:	b	49928 <__assert_fail@plt+0x3723c>
   498a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   498a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   498a8:	lsr	r3, r2, r3
   498ac:	and	r3, r3, #1
   498b0:	cmp	r3, #0
   498b4:	beq	49910 <__assert_fail@plt+0x37224>
   498b8:	ldr	r3, [fp, #-440]	; 0xfffffe48
   498bc:	str	r3, [fp, #-80]	; 0xffffffb0
   498c0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   498c4:	strb	r3, [fp, #-81]	; 0xffffffaf
   498c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   498cc:	str	r3, [fp, #-88]	; 0xffffffa8
   498d0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   498d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   498d8:	add	r3, r2, r3
   498dc:	mov	r2, #1
   498e0:	strb	r2, [r3]
   498e4:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   498e8:	cmp	r3, #0
   498ec:	beq	49910 <__assert_fail@plt+0x37224>
   498f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   498f4:	bl	12110 <tolower@plt>
   498f8:	mov	r3, r0
   498fc:	mov	r2, r3
   49900:	ldr	r3, [fp, #-80]	; 0xffffffb0
   49904:	add	r3, r3, r2
   49908:	mov	r2, #1
   4990c:	strb	r2, [r3]
   49910:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49914:	add	r3, r3, #1
   49918:	str	r3, [fp, #-28]	; 0xffffffe4
   4991c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49920:	add	r3, r3, #1
   49924:	str	r3, [fp, #-24]	; 0xffffffe8
   49928:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4992c:	cmp	r3, #31
   49930:	ble	498a0 <__assert_fail@plt+0x371b4>
   49934:	ldr	r3, [fp, #-20]	; 0xffffffec
   49938:	add	r3, r3, #1
   4993c:	str	r3, [fp, #-20]	; 0xffffffec
   49940:	ldr	r3, [fp, #-20]	; 0xffffffec
   49944:	cmp	r3, #7
   49948:	ble	49868 <__assert_fail@plt+0x3717c>
   4994c:	b	49c68 <__assert_fail@plt+0x3757c>
   49950:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49954:	cmp	r3, #6
   49958:	bne	49c14 <__assert_fail@plt+0x37528>
   4995c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49960:	ldr	r2, [r3]
   49964:	ldr	r3, [fp, #-12]
   49968:	lsl	r3, r3, #3
   4996c:	add	r3, r2, r3
   49970:	ldr	r3, [r3]
   49974:	str	r3, [fp, #-52]	; 0xffffffcc
   49978:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4997c:	ldr	r3, [r3, #92]	; 0x5c
   49980:	cmp	r3, #1
   49984:	ble	49a78 <__assert_fail@plt+0x3738c>
   49988:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4998c:	ldr	r3, [r3, #36]	; 0x24
   49990:	cmp	r3, #0
   49994:	bne	499c0 <__assert_fail@plt+0x372d4>
   49998:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4999c:	ldrb	r3, [r3, #16]
   499a0:	and	r3, r3, #1
   499a4:	uxtb	r3, r3
   499a8:	cmp	r3, #0
   499ac:	bne	499c0 <__assert_fail@plt+0x372d4>
   499b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   499b4:	ldr	r3, [r3, #32]
   499b8:	cmp	r3, #0
   499bc:	beq	49a78 <__assert_fail@plt+0x3738c>
   499c0:	mov	r3, #0
   499c4:	strb	r3, [fp, #-153]	; 0xffffff67
   499c8:	sub	r3, fp, #164	; 0xa4
   499cc:	mov	r2, #8
   499d0:	mov	r1, #0
   499d4:	mov	r0, r3
   499d8:	bl	12434 <memset@plt>
   499dc:	sub	r3, fp, #164	; 0xa4
   499e0:	sub	r1, fp, #153	; 0x99
   499e4:	mov	r2, #1
   499e8:	mov	r0, #0
   499ec:	bl	42c50 <__assert_fail@plt+0x30564>
   499f0:	mov	r3, r0
   499f4:	cmn	r3, #2
   499f8:	bne	49a58 <__assert_fail@plt+0x3736c>
   499fc:	ldrb	r3, [fp, #-153]	; 0xffffff67
   49a00:	mov	r2, r3
   49a04:	ldr	r3, [fp, #-440]	; 0xfffffe48
   49a08:	str	r3, [fp, #-92]	; 0xffffffa4
   49a0c:	mov	r3, #0
   49a10:	strb	r3, [fp, #-93]	; 0xffffffa3
   49a14:	str	r2, [fp, #-100]	; 0xffffff9c
   49a18:	ldr	r3, [fp, #-100]	; 0xffffff9c
   49a1c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   49a20:	add	r3, r2, r3
   49a24:	mov	r2, #1
   49a28:	strb	r2, [r3]
   49a2c:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   49a30:	cmp	r3, #0
   49a34:	beq	49a58 <__assert_fail@plt+0x3736c>
   49a38:	ldr	r0, [fp, #-100]	; 0xffffff9c
   49a3c:	bl	12110 <tolower@plt>
   49a40:	mov	r3, r0
   49a44:	mov	r2, r3
   49a48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   49a4c:	add	r3, r3, r2
   49a50:	mov	r2, #1
   49a54:	strb	r2, [r3]
   49a58:	ldrb	r3, [fp, #-153]	; 0xffffff67
   49a5c:	add	r3, r3, #1
   49a60:	uxtb	r3, r3
   49a64:	strb	r3, [fp, #-153]	; 0xffffff67
   49a68:	ldrb	r3, [fp, #-153]	; 0xffffff67
   49a6c:	cmp	r3, #0
   49a70:	bne	499c8 <__assert_fail@plt+0x372dc>
   49a74:	b	49c68 <__assert_fail@plt+0x3757c>
   49a78:	mov	r3, #0
   49a7c:	str	r3, [fp, #-32]	; 0xffffffe0
   49a80:	b	49bfc <__assert_fail@plt+0x37510>
   49a84:	sub	r3, fp, #172	; 0xac
   49a88:	mov	r2, #8
   49a8c:	mov	r1, #0
   49a90:	mov	r0, r3
   49a94:	bl	12434 <memset@plt>
   49a98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   49a9c:	ldr	r2, [r3]
   49aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49aa4:	lsl	r3, r3, #2
   49aa8:	add	r3, r2, r3
   49aac:	ldr	r1, [r3]
   49ab0:	sub	r2, fp, #172	; 0xac
   49ab4:	sub	r3, fp, #428	; 0x1ac
   49ab8:	mov	r0, r3
   49abc:	bl	11fc0 <wcrtomb@plt>
   49ac0:	mov	r3, r0
   49ac4:	cmn	r3, #1
   49ac8:	beq	49b2c <__assert_fail@plt+0x37440>
   49acc:	sub	r3, fp, #428	; 0x1ac
   49ad0:	ldrb	r3, [r3]
   49ad4:	mov	r2, r3
   49ad8:	ldr	r3, [fp, #-440]	; 0xfffffe48
   49adc:	str	r3, [fp, #-104]	; 0xffffff98
   49ae0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   49ae4:	strb	r3, [fp, #-105]	; 0xffffff97
   49ae8:	str	r2, [fp, #-112]	; 0xffffff90
   49aec:	ldr	r3, [fp, #-112]	; 0xffffff90
   49af0:	ldr	r2, [fp, #-104]	; 0xffffff98
   49af4:	add	r3, r2, r3
   49af8:	mov	r2, #1
   49afc:	strb	r2, [r3]
   49b00:	ldrb	r3, [fp, #-105]	; 0xffffff97
   49b04:	cmp	r3, #0
   49b08:	beq	49b2c <__assert_fail@plt+0x37440>
   49b0c:	ldr	r0, [fp, #-112]	; 0xffffff90
   49b10:	bl	12110 <tolower@plt>
   49b14:	mov	r3, r0
   49b18:	mov	r2, r3
   49b1c:	ldr	r3, [fp, #-104]	; 0xffffff98
   49b20:	add	r3, r3, r2
   49b24:	mov	r2, #1
   49b28:	strb	r2, [r3]
   49b2c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   49b30:	ldr	r3, [r3, #12]
   49b34:	and	r3, r3, #4194304	; 0x400000
   49b38:	cmp	r3, #0
   49b3c:	beq	49bf0 <__assert_fail@plt+0x37504>
   49b40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49b44:	ldr	r3, [r3, #92]	; 0x5c
   49b48:	cmp	r3, #1
   49b4c:	ble	49bf0 <__assert_fail@plt+0x37504>
   49b50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   49b54:	ldr	r2, [r3]
   49b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49b5c:	lsl	r3, r3, #2
   49b60:	add	r3, r2, r3
   49b64:	ldr	r3, [r3]
   49b68:	mov	r0, r3
   49b6c:	bl	12128 <towlower@plt>
   49b70:	mov	r1, r0
   49b74:	sub	r2, fp, #172	; 0xac
   49b78:	sub	r3, fp, #428	; 0x1ac
   49b7c:	mov	r0, r3
   49b80:	bl	11fc0 <wcrtomb@plt>
   49b84:	mov	r3, r0
   49b88:	cmn	r3, #1
   49b8c:	beq	49bf0 <__assert_fail@plt+0x37504>
   49b90:	sub	r3, fp, #428	; 0x1ac
   49b94:	ldrb	r3, [r3]
   49b98:	mov	r2, r3
   49b9c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   49ba0:	str	r3, [fp, #-116]	; 0xffffff8c
   49ba4:	mov	r3, #0
   49ba8:	strb	r3, [fp, #-117]	; 0xffffff8b
   49bac:	str	r2, [fp, #-124]	; 0xffffff84
   49bb0:	ldr	r3, [fp, #-124]	; 0xffffff84
   49bb4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   49bb8:	add	r3, r2, r3
   49bbc:	mov	r2, #1
   49bc0:	strb	r2, [r3]
   49bc4:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   49bc8:	cmp	r3, #0
   49bcc:	beq	49bf0 <__assert_fail@plt+0x37504>
   49bd0:	ldr	r0, [fp, #-124]	; 0xffffff84
   49bd4:	bl	12110 <tolower@plt>
   49bd8:	mov	r3, r0
   49bdc:	mov	r2, r3
   49be0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   49be4:	add	r3, r3, r2
   49be8:	mov	r2, #1
   49bec:	strb	r2, [r3]
   49bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49bf4:	add	r3, r3, #1
   49bf8:	str	r3, [fp, #-32]	; 0xffffffe0
   49bfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   49c00:	ldr	r2, [r3, #20]
   49c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49c08:	cmp	r2, r3
   49c0c:	bgt	49a84 <__assert_fail@plt+0x37398>
   49c10:	b	49c68 <__assert_fail@plt+0x3757c>
   49c14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49c18:	cmp	r3, #5
   49c1c:	beq	49c38 <__assert_fail@plt+0x3754c>
   49c20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49c24:	cmp	r3, #7
   49c28:	beq	49c38 <__assert_fail@plt+0x3754c>
   49c2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49c30:	cmp	r3, #2
   49c34:	bne	49c68 <__assert_fail@plt+0x3757c>
   49c38:	mov	r2, #256	; 0x100
   49c3c:	mov	r1, #1
   49c40:	ldr	r0, [fp, #-440]	; 0xfffffe48
   49c44:	bl	12434 <memset@plt>
   49c48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49c4c:	cmp	r3, #2
   49c50:	bne	49c8c <__assert_fail@plt+0x375a0>
   49c54:	ldr	r2, [fp, #-432]	; 0xfffffe50
   49c58:	ldrb	r3, [r2, #28]
   49c5c:	orr	r3, r3, #1
   49c60:	strb	r3, [r2, #28]
   49c64:	b	49c8c <__assert_fail@plt+0x375a0>
   49c68:	ldr	r3, [fp, #-8]
   49c6c:	add	r3, r3, #1
   49c70:	str	r3, [fp, #-8]
   49c74:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   49c78:	ldr	r2, [r3, #8]
   49c7c:	ldr	r3, [fp, #-8]
   49c80:	cmp	r2, r3
   49c84:	bgt	495d4 <__assert_fail@plt+0x36ee8>
   49c88:	b	49c90 <__assert_fail@plt+0x375a4>
   49c8c:	nop			; (mov r0, r0)
   49c90:	sub	sp, fp, #4
   49c94:	pop	{fp, pc}
   49c98:	push	{fp, lr}
   49c9c:	add	fp, sp, #4
   49ca0:	sub	sp, sp, #24
   49ca4:	str	r0, [fp, #-16]
   49ca8:	str	r1, [fp, #-20]	; 0xffffffec
   49cac:	str	r2, [fp, #-24]	; 0xffffffe8
   49cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49cb4:	and	r3, r3, #1
   49cb8:	cmp	r3, #0
   49cbc:	beq	49cc8 <__assert_fail@plt+0x375dc>
   49cc0:	ldr	r3, [pc, #428]	; 49e74 <__assert_fail@plt+0x37788>
   49cc4:	b	49ccc <__assert_fail@plt+0x375e0>
   49cc8:	ldr	r3, [pc, #424]	; 49e78 <__assert_fail@plt+0x3778c>
   49ccc:	str	r3, [fp, #-12]
   49cd0:	ldr	r3, [fp, #-16]
   49cd4:	mov	r2, #0
   49cd8:	str	r2, [r3]
   49cdc:	ldr	r3, [fp, #-16]
   49ce0:	mov	r2, #0
   49ce4:	str	r2, [r3, #4]
   49ce8:	ldr	r3, [fp, #-16]
   49cec:	mov	r2, #0
   49cf0:	str	r2, [r3, #8]
   49cf4:	mov	r0, #256	; 0x100
   49cf8:	bl	42ba8 <__assert_fail@plt+0x304bc>
   49cfc:	mov	r3, r0
   49d00:	mov	r2, r3
   49d04:	ldr	r3, [fp, #-16]
   49d08:	str	r2, [r3, #16]
   49d0c:	ldr	r3, [fp, #-16]
   49d10:	ldr	r3, [r3, #16]
   49d14:	cmp	r3, #0
   49d18:	moveq	r3, #1
   49d1c:	movne	r3, #0
   49d20:	uxtb	r3, r3
   49d24:	cmp	r3, #0
   49d28:	beq	49d34 <__assert_fail@plt+0x37648>
   49d2c:	mov	r3, #12
   49d30:	b	49e68 <__assert_fail@plt+0x3777c>
   49d34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49d38:	and	r3, r3, #2
   49d3c:	cmp	r3, #0
   49d40:	beq	49d4c <__assert_fail@plt+0x37660>
   49d44:	mov	r3, #4194304	; 0x400000
   49d48:	b	49d50 <__assert_fail@plt+0x37664>
   49d4c:	mov	r3, #0
   49d50:	ldr	r2, [fp, #-12]
   49d54:	orr	r3, r2, r3
   49d58:	str	r3, [fp, #-12]
   49d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49d60:	and	r3, r3, #4
   49d64:	cmp	r3, #0
   49d68:	beq	49d98 <__assert_fail@plt+0x376ac>
   49d6c:	ldr	r3, [fp, #-12]
   49d70:	bic	r3, r3, #64	; 0x40
   49d74:	str	r3, [fp, #-12]
   49d78:	ldr	r3, [fp, #-12]
   49d7c:	orr	r3, r3, #256	; 0x100
   49d80:	str	r3, [fp, #-12]
   49d84:	ldr	r2, [fp, #-16]
   49d88:	ldrb	r3, [r2, #28]
   49d8c:	orr	r3, r3, #128	; 0x80
   49d90:	strb	r3, [r2, #28]
   49d94:	b	49da8 <__assert_fail@plt+0x376bc>
   49d98:	ldr	r2, [fp, #-16]
   49d9c:	ldrb	r3, [r2, #28]
   49da0:	bic	r3, r3, #128	; 0x80
   49da4:	strb	r3, [r2, #28]
   49da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49dac:	and	r3, r3, #8
   49db0:	cmp	r3, #0
   49db4:	movne	r3, #1
   49db8:	moveq	r3, #0
   49dbc:	uxtb	r3, r3
   49dc0:	ldr	r1, [fp, #-16]
   49dc4:	ldrb	r2, [r1, #28]
   49dc8:	and	r3, r3, #1
   49dcc:	bic	r2, r2, #16
   49dd0:	lsl	r3, r3, #4
   49dd4:	orr	r3, r3, r2
   49dd8:	mov	r2, r3
   49ddc:	strb	r2, [r1, #28]
   49de0:	ldr	r3, [fp, #-16]
   49de4:	mov	r2, #0
   49de8:	str	r2, [r3, #20]
   49dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   49df0:	bl	123bc <strlen@plt>
   49df4:	mov	r2, r0
   49df8:	ldr	r3, [fp, #-12]
   49dfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   49e00:	ldr	r0, [fp, #-16]
   49e04:	bl	4a318 <__assert_fail@plt+0x37c2c>
   49e08:	str	r0, [fp, #-8]
   49e0c:	ldr	r3, [fp, #-8]
   49e10:	cmp	r3, #16
   49e14:	bne	49e20 <__assert_fail@plt+0x37734>
   49e18:	mov	r3, #8
   49e1c:	str	r3, [fp, #-8]
   49e20:	ldr	r3, [fp, #-8]
   49e24:	cmp	r3, #0
   49e28:	moveq	r3, #1
   49e2c:	movne	r3, #0
   49e30:	uxtb	r3, r3
   49e34:	cmp	r3, #0
   49e38:	beq	49e48 <__assert_fail@plt+0x3775c>
   49e3c:	ldr	r0, [fp, #-16]
   49e40:	bl	49464 <__assert_fail@plt+0x36d78>
   49e44:	b	49e64 <__assert_fail@plt+0x37778>
   49e48:	ldr	r3, [fp, #-16]
   49e4c:	ldr	r3, [r3, #16]
   49e50:	mov	r0, r3
   49e54:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   49e58:	ldr	r3, [fp, #-16]
   49e5c:	mov	r2, #0
   49e60:	str	r2, [r3, #16]
   49e64:	ldr	r3, [fp, #-8]
   49e68:	mov	r0, r3
   49e6c:	sub	sp, fp, #4
   49e70:	pop	{fp, pc}
   49e74:	strdeq	fp, [r3], -ip
   49e78:	smlabteq	r1, r6, r2, r0
   49e7c:	push	{fp, lr}
   49e80:	add	fp, sp, #4
   49e84:	sub	sp, sp, #32
   49e88:	str	r0, [fp, #-24]	; 0xffffffe8
   49e8c:	str	r1, [fp, #-28]	; 0xffffffe4
   49e90:	str	r2, [fp, #-32]	; 0xffffffe0
   49e94:	str	r3, [fp, #-36]	; 0xffffffdc
   49e98:	mov	r3, #17
   49e9c:	str	r3, [fp, #-12]
   49ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49ea4:	lsr	r3, r3, #31
   49ea8:	uxtb	r3, r3
   49eac:	cmp	r3, #0
   49eb0:	bne	49ed4 <__assert_fail@plt+0x377e8>
   49eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49eb8:	ldr	r3, [fp, #-12]
   49ebc:	cmp	r2, r3
   49ec0:	movge	r3, #1
   49ec4:	movlt	r3, #0
   49ec8:	uxtb	r3, r3
   49ecc:	cmp	r3, #0
   49ed0:	beq	49ed8 <__assert_fail@plt+0x377ec>
   49ed4:	bl	12698 <abort@plt>
   49ed8:	ldr	r2, [pc, #176]	; 49f90 <__assert_fail@plt+0x378a4>
   49edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49ee0:	ldr	r3, [r2, r3, lsl #2]
   49ee4:	ldr	r2, [pc, #168]	; 49f94 <__assert_fail@plt+0x378a8>
   49ee8:	add	r3, r3, r2
   49eec:	mov	r0, r3
   49ef0:	bl	12398 <gettext@plt>
   49ef4:	str	r0, [fp, #-16]
   49ef8:	ldr	r0, [fp, #-16]
   49efc:	bl	123bc <strlen@plt>
   49f00:	mov	r3, r0
   49f04:	add	r3, r3, #1
   49f08:	str	r3, [fp, #-20]	; 0xffffffec
   49f0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49f10:	cmp	r3, #0
   49f14:	movne	r3, #1
   49f18:	moveq	r3, #0
   49f1c:	uxtb	r3, r3
   49f20:	cmp	r3, #0
   49f24:	beq	49f80 <__assert_fail@plt+0x37894>
   49f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   49f2c:	str	r3, [fp, #-8]
   49f30:	ldr	r2, [fp, #-20]	; 0xffffffec
   49f34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49f38:	cmp	r2, r3
   49f3c:	movhi	r3, #1
   49f40:	movls	r3, #0
   49f44:	uxtb	r3, r3
   49f48:	cmp	r3, #0
   49f4c:	beq	49f70 <__assert_fail@plt+0x37884>
   49f50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49f54:	sub	r3, r3, #1
   49f58:	str	r3, [fp, #-8]
   49f5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49f60:	ldr	r3, [fp, #-8]
   49f64:	add	r3, r2, r3
   49f68:	mov	r2, #0
   49f6c:	strb	r2, [r3]
   49f70:	ldr	r2, [fp, #-8]
   49f74:	ldr	r1, [fp, #-16]
   49f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49f7c:	bl	120f8 <memcpy@plt>
   49f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   49f84:	mov	r0, r3
   49f88:	sub	sp, fp, #4
   49f8c:	pop	{fp, pc}
   49f90:	andeq	sl, r6, r4, ror lr
   49f94:	strdeq	sl, [r6], -r4
   49f98:	push	{fp, lr}
   49f9c:	add	fp, sp, #4
   49fa0:	sub	sp, sp, #24
   49fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   49fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49fac:	ldr	r3, [r3]
   49fb0:	cmp	r3, #0
   49fb4:	beq	4a000 <__assert_fail@plt+0x37914>
   49fb8:	mov	r3, #0
   49fbc:	str	r3, [fp, #-8]
   49fc0:	b	49fec <__assert_fail@plt+0x37900>
   49fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49fc8:	ldr	r2, [r3]
   49fcc:	ldr	r3, [fp, #-8]
   49fd0:	lsl	r3, r3, #3
   49fd4:	add	r3, r2, r3
   49fd8:	mov	r0, r3
   49fdc:	bl	5225c <__assert_fail@plt+0x3fb70>
   49fe0:	ldr	r3, [fp, #-8]
   49fe4:	add	r3, r3, #1
   49fe8:	str	r3, [fp, #-8]
   49fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49ff0:	ldr	r2, [r3, #8]
   49ff4:	ldr	r3, [fp, #-8]
   49ff8:	cmp	r2, r3
   49ffc:	bhi	49fc4 <__assert_fail@plt+0x378d8>
   4a000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a004:	ldr	r3, [r3, #12]
   4a008:	mov	r0, r3
   4a00c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a010:	mov	r3, #0
   4a014:	str	r3, [fp, #-8]
   4a018:	b	4a0dc <__assert_fail@plt+0x379f0>
   4a01c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a020:	ldr	r3, [r3, #24]
   4a024:	cmp	r3, #0
   4a028:	beq	4a058 <__assert_fail@plt+0x3796c>
   4a02c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a030:	ldr	r1, [r3, #24]
   4a034:	ldr	r2, [fp, #-8]
   4a038:	mov	r3, r2
   4a03c:	lsl	r3, r3, #1
   4a040:	add	r3, r3, r2
   4a044:	lsl	r3, r3, #2
   4a048:	add	r3, r1, r3
   4a04c:	ldr	r3, [r3, #8]
   4a050:	mov	r0, r3
   4a054:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a05c:	ldr	r3, [r3, #28]
   4a060:	cmp	r3, #0
   4a064:	beq	4a094 <__assert_fail@plt+0x379a8>
   4a068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a06c:	ldr	r1, [r3, #28]
   4a070:	ldr	r2, [fp, #-8]
   4a074:	mov	r3, r2
   4a078:	lsl	r3, r3, #1
   4a07c:	add	r3, r3, r2
   4a080:	lsl	r3, r3, #2
   4a084:	add	r3, r1, r3
   4a088:	ldr	r3, [r3, #8]
   4a08c:	mov	r0, r3
   4a090:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a098:	ldr	r3, [r3, #20]
   4a09c:	cmp	r3, #0
   4a0a0:	beq	4a0d0 <__assert_fail@plt+0x379e4>
   4a0a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a0a8:	ldr	r1, [r3, #20]
   4a0ac:	ldr	r2, [fp, #-8]
   4a0b0:	mov	r3, r2
   4a0b4:	lsl	r3, r3, #1
   4a0b8:	add	r3, r3, r2
   4a0bc:	lsl	r3, r3, #2
   4a0c0:	add	r3, r1, r3
   4a0c4:	ldr	r3, [r3, #8]
   4a0c8:	mov	r0, r3
   4a0cc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a0d0:	ldr	r3, [fp, #-8]
   4a0d4:	add	r3, r3, #1
   4a0d8:	str	r3, [fp, #-8]
   4a0dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a0e0:	ldr	r2, [r3, #8]
   4a0e4:	ldr	r3, [fp, #-8]
   4a0e8:	cmp	r2, r3
   4a0ec:	bhi	4a01c <__assert_fail@plt+0x37930>
   4a0f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a0f4:	ldr	r3, [r3, #20]
   4a0f8:	mov	r0, r3
   4a0fc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a104:	ldr	r3, [r3, #24]
   4a108:	mov	r0, r3
   4a10c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a114:	ldr	r3, [r3, #28]
   4a118:	mov	r0, r3
   4a11c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a124:	ldr	r3, [r3]
   4a128:	mov	r0, r3
   4a12c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a134:	ldr	r3, [r3, #32]
   4a138:	cmp	r3, #0
   4a13c:	beq	4a1f0 <__assert_fail@plt+0x37b04>
   4a140:	mov	r3, #0
   4a144:	str	r3, [fp, #-8]
   4a148:	b	4a1dc <__assert_fail@plt+0x37af0>
   4a14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a150:	ldr	r1, [r3, #32]
   4a154:	ldr	r2, [fp, #-8]
   4a158:	mov	r3, r2
   4a15c:	lsl	r3, r3, #1
   4a160:	add	r3, r3, r2
   4a164:	lsl	r3, r3, #2
   4a168:	add	r3, r1, r3
   4a16c:	str	r3, [fp, #-16]
   4a170:	mov	r3, #0
   4a174:	str	r3, [fp, #-12]
   4a178:	b	4a1ac <__assert_fail@plt+0x37ac0>
   4a17c:	ldr	r3, [fp, #-16]
   4a180:	ldr	r2, [r3, #8]
   4a184:	ldr	r3, [fp, #-12]
   4a188:	lsl	r3, r3, #2
   4a18c:	add	r3, r2, r3
   4a190:	ldr	r3, [r3]
   4a194:	str	r3, [fp, #-20]	; 0xffffffec
   4a198:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a19c:	bl	48cac <__assert_fail@plt+0x365c0>
   4a1a0:	ldr	r3, [fp, #-12]
   4a1a4:	add	r3, r3, #1
   4a1a8:	str	r3, [fp, #-12]
   4a1ac:	ldr	r3, [fp, #-16]
   4a1b0:	ldr	r2, [r3]
   4a1b4:	ldr	r3, [fp, #-12]
   4a1b8:	cmp	r2, r3
   4a1bc:	bgt	4a17c <__assert_fail@plt+0x37a90>
   4a1c0:	ldr	r3, [fp, #-16]
   4a1c4:	ldr	r3, [r3, #8]
   4a1c8:	mov	r0, r3
   4a1cc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a1d0:	ldr	r3, [fp, #-8]
   4a1d4:	add	r3, r3, #1
   4a1d8:	str	r3, [fp, #-8]
   4a1dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a1e0:	ldr	r2, [r3, #68]	; 0x44
   4a1e4:	ldr	r3, [fp, #-8]
   4a1e8:	cmp	r2, r3
   4a1ec:	bcs	4a14c <__assert_fail@plt+0x37a60>
   4a1f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a1f4:	ldr	r3, [r3, #32]
   4a1f8:	mov	r0, r3
   4a1fc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a204:	ldr	r3, [r3, #60]	; 0x3c
   4a208:	ldr	r2, [pc, #56]	; 4a248 <__assert_fail@plt+0x37b5c>
   4a20c:	cmp	r3, r2
   4a210:	beq	4a224 <__assert_fail@plt+0x37b38>
   4a214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a218:	ldr	r3, [r3, #60]	; 0x3c
   4a21c:	mov	r0, r3
   4a220:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a228:	ldr	r3, [r3, #132]	; 0x84
   4a22c:	mov	r0, r3
   4a230:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a238:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a23c:	nop			; (mov r0, r0)
   4a240:	sub	sp, fp, #4
   4a244:	pop	{fp, pc}
   4a248:			; <UNDEFINED> instruction: 0x0006aeb8
   4a24c:	push	{fp, lr}
   4a250:	add	fp, sp, #4
   4a254:	sub	sp, sp, #16
   4a258:	str	r0, [fp, #-16]
   4a25c:	ldr	r3, [fp, #-16]
   4a260:	ldr	r3, [r3]
   4a264:	str	r3, [fp, #-8]
   4a268:	ldr	r3, [fp, #-8]
   4a26c:	cmp	r3, #0
   4a270:	movne	r3, #1
   4a274:	moveq	r3, #0
   4a278:	uxtb	r3, r3
   4a27c:	cmp	r3, #0
   4a280:	beq	4a2b4 <__assert_fail@plt+0x37bc8>
   4a284:	ldr	r3, [pc, #132]	; 4a310 <__assert_fail@plt+0x37c24>
   4a288:	cmp	r3, #0
   4a28c:	bne	4a29c <__assert_fail@plt+0x37bb0>
   4a290:	ldr	r3, [pc, #124]	; 4a314 <__assert_fail@plt+0x37c28>
   4a294:	cmp	r3, #0
   4a298:	beq	4a2ac <__assert_fail@plt+0x37bc0>
   4a29c:	ldr	r3, [fp, #-8]
   4a2a0:	add	r3, r3, #136	; 0x88
   4a2a4:	mov	r0, r3
   4a2a8:	bl	12044 <pthread_mutex_destroy@plt>
   4a2ac:	ldr	r0, [fp, #-8]
   4a2b0:	bl	49f98 <__assert_fail@plt+0x378ac>
   4a2b4:	ldr	r3, [fp, #-16]
   4a2b8:	mov	r2, #0
   4a2bc:	str	r2, [r3]
   4a2c0:	ldr	r3, [fp, #-16]
   4a2c4:	mov	r2, #0
   4a2c8:	str	r2, [r3, #4]
   4a2cc:	ldr	r3, [fp, #-16]
   4a2d0:	ldr	r3, [r3, #16]
   4a2d4:	mov	r0, r3
   4a2d8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a2dc:	ldr	r3, [fp, #-16]
   4a2e0:	mov	r2, #0
   4a2e4:	str	r2, [r3, #16]
   4a2e8:	ldr	r3, [fp, #-16]
   4a2ec:	ldr	r3, [r3, #20]
   4a2f0:	mov	r0, r3
   4a2f4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4a2f8:	ldr	r3, [fp, #-16]
   4a2fc:	mov	r2, #0
   4a300:	str	r2, [r3, #20]
   4a304:	nop			; (mov r0, r0)
   4a308:	sub	sp, fp, #4
   4a30c:	pop	{fp, pc}
   4a310:	andeq	r2, r1, r4, ror #8
   4a314:	andeq	r2, r1, r8, asr #1
   4a318:	push	{fp, lr}
   4a31c:	add	fp, sp, #4
   4a320:	sub	sp, sp, #120	; 0x78
   4a324:	str	r0, [fp, #-104]	; 0xffffff98
   4a328:	str	r1, [fp, #-108]	; 0xffffff94
   4a32c:	str	r2, [fp, #-112]	; 0xffffff90
   4a330:	str	r3, [fp, #-116]	; 0xffffff8c
   4a334:	mov	r3, #0
   4a338:	str	r3, [fp, #-12]
   4a33c:	ldr	r2, [fp, #-104]	; 0xffffff98
   4a340:	ldrb	r3, [r2, #28]
   4a344:	bic	r3, r3, #8
   4a348:	strb	r3, [r2, #28]
   4a34c:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a350:	ldr	r2, [fp, #-116]	; 0xffffff8c
   4a354:	str	r2, [r3, #12]
   4a358:	ldr	r2, [fp, #-104]	; 0xffffff98
   4a35c:	ldrb	r3, [r2, #28]
   4a360:	bic	r3, r3, #64	; 0x40
   4a364:	strb	r3, [r2, #28]
   4a368:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a36c:	ldrb	r3, [r3, #28]
   4a370:	lsr	r3, r3, #6
   4a374:	and	r3, r3, #1
   4a378:	uxtb	r3, r3
   4a37c:	ldr	r1, [fp, #-104]	; 0xffffff98
   4a380:	ldrb	r2, [r1, #28]
   4a384:	and	r3, r3, #1
   4a388:	bic	r2, r2, #32
   4a38c:	lsl	r3, r3, #5
   4a390:	orr	r3, r3, r2
   4a394:	mov	r2, r3
   4a398:	strb	r2, [r1, #28]
   4a39c:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a3a0:	mov	r2, #0
   4a3a4:	str	r2, [r3, #8]
   4a3a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a3ac:	mov	r2, #0
   4a3b0:	str	r2, [r3, #24]
   4a3b4:	ldr	r2, [fp, #-104]	; 0xffffff98
   4a3b8:	ldrb	r3, [r2, #28]
   4a3bc:	bic	r3, r3, #1
   4a3c0:	strb	r3, [r2, #28]
   4a3c4:	ldr	r2, [fp, #-104]	; 0xffffff98
   4a3c8:	ldrb	r3, [r2, #28]
   4a3cc:	bic	r3, r3, #6
   4a3d0:	strb	r3, [r2, #28]
   4a3d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a3d8:	ldr	r3, [r3]
   4a3dc:	str	r3, [fp, #-8]
   4a3e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a3e4:	ldr	r3, [r3, #4]
   4a3e8:	cmp	r3, #159	; 0x9f
   4a3ec:	movls	r3, #1
   4a3f0:	movhi	r3, #0
   4a3f4:	uxtb	r3, r3
   4a3f8:	cmp	r3, #0
   4a3fc:	beq	4a444 <__assert_fail@plt+0x37d58>
   4a400:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a404:	ldr	r3, [r3]
   4a408:	mov	r1, #160	; 0xa0
   4a40c:	mov	r0, r3
   4a410:	bl	43d30 <__assert_fail@plt+0x31644>
   4a414:	str	r0, [fp, #-8]
   4a418:	ldr	r3, [fp, #-8]
   4a41c:	cmp	r3, #0
   4a420:	bne	4a42c <__assert_fail@plt+0x37d40>
   4a424:	mov	r3, #12
   4a428:	b	4a75c <__assert_fail@plt+0x38070>
   4a42c:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a430:	mov	r2, #160	; 0xa0
   4a434:	str	r2, [r3, #4]
   4a438:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a43c:	ldr	r2, [fp, #-8]
   4a440:	str	r2, [r3]
   4a444:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a448:	mov	r2, #160	; 0xa0
   4a44c:	str	r2, [r3, #8]
   4a450:	ldr	r1, [fp, #-112]	; 0xffffff90
   4a454:	ldr	r0, [fp, #-8]
   4a458:	bl	4a770 <__assert_fail@plt+0x38084>
   4a45c:	mov	r3, r0
   4a460:	str	r3, [fp, #-12]
   4a464:	ldr	r3, [fp, #-12]
   4a468:	cmp	r3, #0
   4a46c:	moveq	r3, #1
   4a470:	movne	r3, #0
   4a474:	uxtb	r3, r3
   4a478:	cmp	r3, #0
   4a47c:	beq	4a4f8 <__assert_fail@plt+0x37e0c>
   4a480:	ldr	r3, [pc, #736]	; 4a768 <__assert_fail@plt+0x3807c>
   4a484:	cmp	r3, #0
   4a488:	bne	4a498 <__assert_fail@plt+0x37dac>
   4a48c:	ldr	r3, [pc, #728]	; 4a76c <__assert_fail@plt+0x38080>
   4a490:	cmp	r3, #0
   4a494:	beq	4a4a0 <__assert_fail@plt+0x37db4>
   4a498:	mov	r3, #1
   4a49c:	b	4a4a4 <__assert_fail@plt+0x37db8>
   4a4a0:	mov	r3, #0
   4a4a4:	cmp	r3, #0
   4a4a8:	beq	4a4e4 <__assert_fail@plt+0x37df8>
   4a4ac:	ldr	r3, [fp, #-8]
   4a4b0:	add	r3, r3, #136	; 0x88
   4a4b4:	mov	r1, #0
   4a4b8:	mov	r0, r3
   4a4bc:	bl	1211c <pthread_mutex_init@plt>
   4a4c0:	mov	r3, r0
   4a4c4:	cmp	r3, #0
   4a4c8:	movne	r3, #1
   4a4cc:	moveq	r3, #0
   4a4d0:	uxtb	r3, r3
   4a4d4:	cmp	r3, #0
   4a4d8:	beq	4a4e4 <__assert_fail@plt+0x37df8>
   4a4dc:	mov	r3, #1
   4a4e0:	b	4a4e8 <__assert_fail@plt+0x37dfc>
   4a4e4:	mov	r3, #0
   4a4e8:	cmp	r3, #0
   4a4ec:	beq	4a4f8 <__assert_fail@plt+0x37e0c>
   4a4f0:	mov	r3, #12
   4a4f4:	str	r3, [fp, #-12]
   4a4f8:	ldr	r3, [fp, #-12]
   4a4fc:	cmp	r3, #0
   4a500:	movne	r3, #1
   4a504:	moveq	r3, #0
   4a508:	uxtb	r3, r3
   4a50c:	cmp	r3, #0
   4a510:	beq	4a53c <__assert_fail@plt+0x37e50>
   4a514:	ldr	r0, [fp, #-8]
   4a518:	bl	49f98 <__assert_fail@plt+0x378ac>
   4a51c:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a520:	mov	r2, #0
   4a524:	str	r2, [r3]
   4a528:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a52c:	mov	r2, #0
   4a530:	str	r2, [r3, #4]
   4a534:	ldr	r3, [fp, #-12]
   4a538:	b	4a75c <__assert_fail@plt+0x38070>
   4a53c:	ldr	r1, [fp, #-112]	; 0xffffff90
   4a540:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a544:	ldr	ip, [r3, #20]
   4a548:	ldr	r3, [fp, #-116]	; 0xffffff8c
   4a54c:	and	r3, r3, #4194304	; 0x400000
   4a550:	cmp	r3, #0
   4a554:	movne	r3, #1
   4a558:	moveq	r3, #0
   4a55c:	uxtb	r3, r3
   4a560:	sub	r0, fp, #96	; 0x60
   4a564:	ldr	r2, [fp, #-8]
   4a568:	str	r2, [sp, #4]
   4a56c:	str	r3, [sp]
   4a570:	mov	r3, ip
   4a574:	mov	r2, r1
   4a578:	ldr	r1, [fp, #-108]	; 0xffffff94
   4a57c:	bl	44500 <__assert_fail@plt+0x31e14>
   4a580:	mov	r3, r0
   4a584:	str	r3, [fp, #-12]
   4a588:	ldr	r3, [fp, #-12]
   4a58c:	cmp	r3, #0
   4a590:	movne	r3, #1
   4a594:	moveq	r3, #0
   4a598:	uxtb	r3, r3
   4a59c:	cmp	r3, #0
   4a5a0:	beq	4a618 <__assert_fail@plt+0x37f2c>
   4a5a4:	b	4a5b4 <__assert_fail@plt+0x37ec8>
   4a5a8:	nop			; (mov r0, r0)
   4a5ac:	b	4a5b4 <__assert_fail@plt+0x37ec8>
   4a5b0:	nop			; (mov r0, r0)
   4a5b4:	ldr	r0, [fp, #-104]	; 0xffffff98
   4a5b8:	bl	4ad8c <__assert_fail@plt+0x386a0>
   4a5bc:	sub	r3, fp, #96	; 0x60
   4a5c0:	mov	r0, r3
   4a5c4:	bl	46bbc <__assert_fail@plt+0x344d0>
   4a5c8:	ldr	r3, [pc, #408]	; 4a768 <__assert_fail@plt+0x3807c>
   4a5cc:	cmp	r3, #0
   4a5d0:	bne	4a5e0 <__assert_fail@plt+0x37ef4>
   4a5d4:	ldr	r3, [pc, #400]	; 4a76c <__assert_fail@plt+0x38080>
   4a5d8:	cmp	r3, #0
   4a5dc:	beq	4a5f0 <__assert_fail@plt+0x37f04>
   4a5e0:	ldr	r3, [fp, #-8]
   4a5e4:	add	r3, r3, #136	; 0x88
   4a5e8:	mov	r0, r3
   4a5ec:	bl	12044 <pthread_mutex_destroy@plt>
   4a5f0:	ldr	r0, [fp, #-8]
   4a5f4:	bl	49f98 <__assert_fail@plt+0x378ac>
   4a5f8:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a5fc:	mov	r2, #0
   4a600:	str	r2, [r3]
   4a604:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a608:	mov	r2, #0
   4a60c:	str	r2, [r3, #4]
   4a610:	ldr	r3, [fp, #-12]
   4a614:	b	4a75c <__assert_fail@plt+0x38070>
   4a618:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a61c:	mov	r2, #0
   4a620:	str	r2, [r3, #24]
   4a624:	sub	r3, fp, #12
   4a628:	sub	r0, fp, #96	; 0x60
   4a62c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   4a630:	ldr	r1, [fp, #-104]	; 0xffffff98
   4a634:	bl	4e474 <__assert_fail@plt+0x3bd88>
   4a638:	mov	r2, r0
   4a63c:	ldr	r3, [fp, #-8]
   4a640:	str	r2, [r3, #52]	; 0x34
   4a644:	ldr	r3, [fp, #-8]
   4a648:	ldr	r3, [r3, #52]	; 0x34
   4a64c:	cmp	r3, #0
   4a650:	moveq	r3, #1
   4a654:	movne	r3, #0
   4a658:	uxtb	r3, r3
   4a65c:	cmp	r3, #0
   4a660:	bne	4a5a8 <__assert_fail@plt+0x37ebc>
   4a664:	ldr	r0, [fp, #-104]	; 0xffffff98
   4a668:	bl	4b530 <__assert_fail@plt+0x38e44>
   4a66c:	mov	r3, r0
   4a670:	str	r3, [fp, #-12]
   4a674:	ldr	r3, [fp, #-12]
   4a678:	cmp	r3, #0
   4a67c:	movne	r3, #1
   4a680:	moveq	r3, #0
   4a684:	uxtb	r3, r3
   4a688:	cmp	r3, #0
   4a68c:	bne	4a5b0 <__assert_fail@plt+0x37ec4>
   4a690:	ldr	r3, [fp, #-8]
   4a694:	ldrb	r3, [r3, #88]	; 0x58
   4a698:	and	r3, r3, #4
   4a69c:	uxtb	r3, r3
   4a6a0:	cmp	r3, #0
   4a6a4:	beq	4a6d0 <__assert_fail@plt+0x37fe4>
   4a6a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   4a6ac:	and	r3, r3, #4194304	; 0x400000
   4a6b0:	cmp	r3, #0
   4a6b4:	bne	4a6d0 <__assert_fail@plt+0x37fe4>
   4a6b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a6bc:	ldr	r3, [r3, #20]
   4a6c0:	cmp	r3, #0
   4a6c4:	bne	4a6d0 <__assert_fail@plt+0x37fe4>
   4a6c8:	ldr	r0, [fp, #-8]
   4a6cc:	bl	4b210 <__assert_fail@plt+0x38b24>
   4a6d0:	ldr	r0, [fp, #-8]
   4a6d4:	bl	4ae2c <__assert_fail@plt+0x38740>
   4a6d8:	mov	r3, r0
   4a6dc:	str	r3, [fp, #-12]
   4a6e0:	ldr	r0, [fp, #-104]	; 0xffffff98
   4a6e4:	bl	4ad8c <__assert_fail@plt+0x386a0>
   4a6e8:	sub	r3, fp, #96	; 0x60
   4a6ec:	mov	r0, r3
   4a6f0:	bl	46bbc <__assert_fail@plt+0x344d0>
   4a6f4:	ldr	r3, [fp, #-12]
   4a6f8:	cmp	r3, #0
   4a6fc:	movne	r3, #1
   4a700:	moveq	r3, #0
   4a704:	uxtb	r3, r3
   4a708:	cmp	r3, #0
   4a70c:	beq	4a758 <__assert_fail@plt+0x3806c>
   4a710:	ldr	r3, [pc, #80]	; 4a768 <__assert_fail@plt+0x3807c>
   4a714:	cmp	r3, #0
   4a718:	bne	4a728 <__assert_fail@plt+0x3803c>
   4a71c:	ldr	r3, [pc, #72]	; 4a76c <__assert_fail@plt+0x38080>
   4a720:	cmp	r3, #0
   4a724:	beq	4a738 <__assert_fail@plt+0x3804c>
   4a728:	ldr	r3, [fp, #-8]
   4a72c:	add	r3, r3, #136	; 0x88
   4a730:	mov	r0, r3
   4a734:	bl	12044 <pthread_mutex_destroy@plt>
   4a738:	ldr	r0, [fp, #-8]
   4a73c:	bl	49f98 <__assert_fail@plt+0x378ac>
   4a740:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a744:	mov	r2, #0
   4a748:	str	r2, [r3]
   4a74c:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a750:	mov	r2, #0
   4a754:	str	r2, [r3, #4]
   4a758:	ldr	r3, [fp, #-12]
   4a75c:	mov	r0, r3
   4a760:	sub	sp, fp, #4
   4a764:	pop	{fp, pc}
   4a768:	andeq	r2, r1, r4, ror #8
   4a76c:	andeq	r2, r1, r8, asr #1
   4a770:	push	{fp, lr}
   4a774:	add	fp, sp, #4
   4a778:	sub	sp, sp, #40	; 0x28
   4a77c:	str	r0, [fp, #-40]	; 0xffffffd8
   4a780:	str	r1, [fp, #-44]	; 0xffffffd4
   4a784:	mov	r3, #4
   4a788:	str	r3, [fp, #-24]	; 0xffffffe8
   4a78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a790:	cmp	r3, #12
   4a794:	bls	4a7a4 <__assert_fail@plt+0x380b8>
   4a798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a79c:	cmp	r3, #8
   4a7a0:	bls	4a808 <__assert_fail@plt+0x3811c>
   4a7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7a8:	cmp	r3, #12
   4a7ac:	bls	4a808 <__assert_fail@plt+0x3811c>
   4a7b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7b4:	cmp	r3, #12
   4a7b8:	bls	4a808 <__assert_fail@plt+0x3811c>
   4a7bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7c0:	cmp	r3, #12
   4a7c4:	bls	4a7d4 <__assert_fail@plt+0x380e8>
   4a7c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7cc:	cmp	r3, #8
   4a7d0:	bls	4a7fc <__assert_fail@plt+0x38110>
   4a7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7d8:	cmp	r3, #12
   4a7dc:	bls	4a7f4 <__assert_fail@plt+0x38108>
   4a7e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7e4:	cmp	r3, #8
   4a7e8:	movcs	r3, r3
   4a7ec:	movcc	r3, #8
   4a7f0:	b	4a804 <__assert_fail@plt+0x38118>
   4a7f4:	mov	r3, #12
   4a7f8:	b	4a804 <__assert_fail@plt+0x38118>
   4a7fc:	mov	r3, #8
   4a800:	b	4a80c <__assert_fail@plt+0x38120>
   4a804:	b	4a80c <__assert_fail@plt+0x38120>
   4a808:	mov	r3, #12
   4a80c:	str	r3, [fp, #-28]	; 0xffffffe4
   4a810:	mov	r2, #160	; 0xa0
   4a814:	mov	r1, #0
   4a818:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a81c:	bl	12434 <memset@plt>
   4a820:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a824:	mov	r2, #31
   4a828:	str	r2, [r3, #64]	; 0x40
   4a82c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a830:	mvn	r0, #0
   4a834:	bl	63574 <__assert_fail@plt+0x50e88>
   4a838:	mov	r3, r0
   4a83c:	cmp	r3, #0
   4a840:	blt	4a85c <__assert_fail@plt+0x38170>
   4a844:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a848:	mvn	r0, #0
   4a84c:	bl	63574 <__assert_fail@plt+0x50e88>
   4a850:	mov	r3, r0
   4a854:	lsr	r3, r3, #1
   4a858:	b	4a860 <__assert_fail@plt+0x38174>
   4a85c:	mvn	r3, #-1073741824	; 0xc0000000
   4a860:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4a864:	cmp	r3, r2
   4a868:	movls	r3, #1
   4a86c:	movhi	r3, #0
   4a870:	uxtb	r3, r3
   4a874:	cmp	r3, #0
   4a878:	beq	4a884 <__assert_fail@plt+0x38198>
   4a87c:	mov	r3, #12
   4a880:	b	4abac <__assert_fail@plt+0x384c0>
   4a884:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a888:	add	r2, r3, #1
   4a88c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a890:	str	r2, [r3, #4]
   4a894:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a898:	ldr	r3, [r3, #4]
   4a89c:	lsl	r3, r3, #3
   4a8a0:	mov	r0, r3
   4a8a4:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4a8a8:	mov	r3, r0
   4a8ac:	mov	r2, r3
   4a8b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a8b4:	str	r2, [r3]
   4a8b8:	mov	r3, #1
   4a8bc:	str	r3, [fp, #-8]
   4a8c0:	ldr	r2, [fp, #-8]
   4a8c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a8c8:	cmp	r2, r3
   4a8cc:	bhi	4a8e0 <__assert_fail@plt+0x381f4>
   4a8d0:	ldr	r3, [fp, #-8]
   4a8d4:	lsl	r3, r3, #1
   4a8d8:	str	r3, [fp, #-8]
   4a8dc:	b	4a8c0 <__assert_fail@plt+0x381d4>
   4a8e0:	nop			; (mov r0, r0)
   4a8e4:	ldr	r1, [fp, #-8]
   4a8e8:	mov	r0, #12
   4a8ec:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   4a8f0:	mov	r3, r0
   4a8f4:	mov	r2, r3
   4a8f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a8fc:	str	r2, [r3, #32]
   4a900:	ldr	r3, [fp, #-8]
   4a904:	sub	r2, r3, #1
   4a908:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a90c:	str	r2, [r3, #68]	; 0x44
   4a910:	bl	12254 <__ctype_get_mb_cur_max@plt>
   4a914:	mov	r3, r0
   4a918:	mov	r2, r3
   4a91c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a920:	str	r2, [r3, #92]	; 0x5c
   4a924:	mov	r0, #14
   4a928:	bl	12560 <nl_langinfo@plt>
   4a92c:	str	r0, [fp, #-32]	; 0xffffffe0
   4a930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a934:	ldrb	r3, [r3]
   4a938:	cmp	r3, #85	; 0x55
   4a93c:	beq	4a950 <__assert_fail@plt+0x38264>
   4a940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a944:	ldrb	r3, [r3]
   4a948:	cmp	r3, #117	; 0x75
   4a94c:	bne	4a9f0 <__assert_fail@plt+0x38304>
   4a950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a954:	add	r3, r3, #1
   4a958:	ldrb	r3, [r3]
   4a95c:	cmp	r3, #84	; 0x54
   4a960:	beq	4a978 <__assert_fail@plt+0x3828c>
   4a964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a968:	add	r3, r3, #1
   4a96c:	ldrb	r3, [r3]
   4a970:	cmp	r3, #116	; 0x74
   4a974:	bne	4a9f0 <__assert_fail@plt+0x38304>
   4a978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a97c:	add	r3, r3, #2
   4a980:	ldrb	r3, [r3]
   4a984:	cmp	r3, #70	; 0x46
   4a988:	beq	4a9a0 <__assert_fail@plt+0x382b4>
   4a98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a990:	add	r3, r3, #2
   4a994:	ldrb	r3, [r3]
   4a998:	cmp	r3, #102	; 0x66
   4a99c:	bne	4a9f0 <__assert_fail@plt+0x38304>
   4a9a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a9a4:	add	r3, r3, #3
   4a9a8:	ldrb	r3, [r3]
   4a9ac:	cmp	r3, #45	; 0x2d
   4a9b0:	bne	4a9bc <__assert_fail@plt+0x382d0>
   4a9b4:	mov	r3, #4
   4a9b8:	b	4a9c0 <__assert_fail@plt+0x382d4>
   4a9bc:	mov	r3, #3
   4a9c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a9c4:	add	r3, r2, r3
   4a9c8:	ldr	r1, [pc, #488]	; 4abb8 <__assert_fail@plt+0x384cc>
   4a9cc:	mov	r0, r3
   4a9d0:	bl	11ffc <strcmp@plt>
   4a9d4:	mov	r3, r0
   4a9d8:	cmp	r3, #0
   4a9dc:	bne	4a9f0 <__assert_fail@plt+0x38304>
   4a9e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4a9e4:	ldrb	r3, [r2, #88]	; 0x58
   4a9e8:	orr	r3, r3, #4
   4a9ec:	strb	r3, [r2, #88]	; 0x58
   4a9f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4a9f4:	ldrb	r3, [r2, #88]	; 0x58
   4a9f8:	bic	r3, r3, #8
   4a9fc:	strb	r3, [r2, #88]	; 0x58
   4aa00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aa04:	ldr	r3, [r3, #92]	; 0x5c
   4aa08:	cmp	r3, #1
   4aa0c:	ble	4ab60 <__assert_fail@plt+0x38474>
   4aa10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aa14:	ldrb	r3, [r3, #88]	; 0x58
   4aa18:	and	r3, r3, #4
   4aa1c:	uxtb	r3, r3
   4aa20:	cmp	r3, #0
   4aa24:	beq	4aa38 <__assert_fail@plt+0x3834c>
   4aa28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aa2c:	ldr	r2, [pc, #392]	; 4abbc <__assert_fail@plt+0x384d0>
   4aa30:	str	r2, [r3, #60]	; 0x3c
   4aa34:	b	4ab60 <__assert_fail@plt+0x38474>
   4aa38:	mov	r1, #1
   4aa3c:	mov	r0, #32
   4aa40:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   4aa44:	mov	r3, r0
   4aa48:	mov	r2, r3
   4aa4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aa50:	str	r2, [r3, #60]	; 0x3c
   4aa54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aa58:	ldr	r3, [r3, #60]	; 0x3c
   4aa5c:	cmp	r3, #0
   4aa60:	moveq	r3, #1
   4aa64:	movne	r3, #0
   4aa68:	uxtb	r3, r3
   4aa6c:	cmp	r3, #0
   4aa70:	beq	4aa7c <__assert_fail@plt+0x38390>
   4aa74:	mov	r3, #12
   4aa78:	b	4abac <__assert_fail@plt+0x384c0>
   4aa7c:	mov	r3, #0
   4aa80:	str	r3, [fp, #-12]
   4aa84:	mov	r3, #0
   4aa88:	str	r3, [fp, #-20]	; 0xffffffec
   4aa8c:	b	4ab54 <__assert_fail@plt+0x38468>
   4aa90:	mov	r3, #0
   4aa94:	str	r3, [fp, #-16]
   4aa98:	b	4ab3c <__assert_fail@plt+0x38450>
   4aa9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4aaa0:	bl	12470 <btowc@plt>
   4aaa4:	str	r0, [fp, #-36]	; 0xffffffdc
   4aaa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4aaac:	cmn	r3, #1
   4aab0:	beq	4aaf4 <__assert_fail@plt+0x38408>
   4aab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aab8:	ldr	r2, [r3, #60]	; 0x3c
   4aabc:	ldr	r3, [fp, #-12]
   4aac0:	lsl	r3, r3, #2
   4aac4:	add	r3, r2, r3
   4aac8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4aacc:	ldr	r1, [r2, #60]	; 0x3c
   4aad0:	ldr	r2, [fp, #-12]
   4aad4:	lsl	r2, r2, #2
   4aad8:	add	r2, r1, r2
   4aadc:	ldr	r1, [r2]
   4aae0:	mov	r0, #1
   4aae4:	ldr	r2, [fp, #-16]
   4aae8:	lsl	r2, r0, r2
   4aaec:	orr	r2, r1, r2
   4aaf0:	str	r2, [r3]
   4aaf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4aaf8:	bic	r3, r3, #127	; 0x7f
   4aafc:	cmp	r3, #0
   4ab00:	bne	4ab24 <__assert_fail@plt+0x38438>
   4ab04:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ab08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4ab0c:	cmp	r2, r3
   4ab10:	beq	4ab24 <__assert_fail@plt+0x38438>
   4ab14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ab18:	ldrb	r3, [r2, #88]	; 0x58
   4ab1c:	orr	r3, r3, #8
   4ab20:	strb	r3, [r2, #88]	; 0x58
   4ab24:	ldr	r3, [fp, #-16]
   4ab28:	add	r3, r3, #1
   4ab2c:	str	r3, [fp, #-16]
   4ab30:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ab34:	add	r3, r3, #1
   4ab38:	str	r3, [fp, #-20]	; 0xffffffec
   4ab3c:	ldr	r3, [fp, #-16]
   4ab40:	cmp	r3, #31
   4ab44:	ble	4aa9c <__assert_fail@plt+0x383b0>
   4ab48:	ldr	r3, [fp, #-12]
   4ab4c:	add	r3, r3, #1
   4ab50:	str	r3, [fp, #-12]
   4ab54:	ldr	r3, [fp, #-12]
   4ab58:	cmp	r3, #7
   4ab5c:	ble	4aa90 <__assert_fail@plt+0x383a4>
   4ab60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ab64:	ldr	r3, [r3]
   4ab68:	cmp	r3, #0
   4ab6c:	moveq	r3, #1
   4ab70:	movne	r3, #0
   4ab74:	uxtb	r3, r3
   4ab78:	cmp	r3, #0
   4ab7c:	bne	4aba0 <__assert_fail@plt+0x384b4>
   4ab80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ab84:	ldr	r3, [r3, #32]
   4ab88:	cmp	r3, #0
   4ab8c:	moveq	r3, #1
   4ab90:	movne	r3, #0
   4ab94:	uxtb	r3, r3
   4ab98:	cmp	r3, #0
   4ab9c:	beq	4aba8 <__assert_fail@plt+0x384bc>
   4aba0:	mov	r3, #12
   4aba4:	b	4abac <__assert_fail@plt+0x384c0>
   4aba8:	mov	r3, #0
   4abac:	mov	r0, r3
   4abb0:	sub	sp, fp, #4
   4abb4:	pop	{fp, pc}
   4abb8:	ldrdeq	sl, [r6], -r8
   4abbc:			; <UNDEFINED> instruction: 0x0006aeb8
   4abc0:	push	{fp, lr}
   4abc4:	add	fp, sp, #4
   4abc8:	sub	sp, sp, #40	; 0x28
   4abcc:	str	r0, [fp, #-40]	; 0xffffffd8
   4abd0:	mov	r3, #0
   4abd4:	str	r3, [fp, #-8]
   4abd8:	mov	r3, #0
   4abdc:	str	r3, [fp, #-16]
   4abe0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4abe4:	ldrb	r3, [r2, #88]	; 0x58
   4abe8:	orr	r3, r3, #16
   4abec:	strb	r3, [r2, #88]	; 0x58
   4abf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4abf4:	ldrb	r3, [r3, #88]	; 0x58
   4abf8:	and	r3, r3, #8
   4abfc:	uxtb	r3, r3
   4ac00:	cmp	r3, #0
   4ac04:	moveq	r3, #1
   4ac08:	movne	r3, #0
   4ac0c:	uxtb	r3, r3
   4ac10:	cmp	r3, #0
   4ac14:	beq	4ad74 <__assert_fail@plt+0x38688>
   4ac18:	mov	r3, #0
   4ac1c:	str	r3, [fp, #-20]	; 0xffffffec
   4ac20:	ldr	r3, [pc, #352]	; 4ad88 <__assert_fail@plt+0x3869c>
   4ac24:	str	r3, [fp, #-24]	; 0xffffffe8
   4ac28:	mvn	r3, #2013265921	; 0x78000001
   4ac2c:	str	r3, [fp, #-28]	; 0xffffffe4
   4ac30:	mvn	r3, #-134217727	; 0xf8000001
   4ac34:	str	r3, [fp, #-32]	; 0xffffffe0
   4ac38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ac3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4ac40:	str	r2, [r3, #96]	; 0x60
   4ac44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ac48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ac4c:	str	r2, [r3, #100]	; 0x64
   4ac50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ac54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4ac58:	str	r2, [r3, #104]	; 0x68
   4ac5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ac60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4ac64:	str	r2, [r3, #108]	; 0x6c
   4ac68:	mov	r3, #4
   4ac6c:	str	r3, [fp, #-8]
   4ac70:	mov	r3, #128	; 0x80
   4ac74:	str	r3, [fp, #-16]
   4ac78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ac7c:	ldrb	r3, [r3, #88]	; 0x58
   4ac80:	lsr	r3, r3, #2
   4ac84:	and	r3, r3, #1
   4ac88:	uxtb	r3, r3
   4ac8c:	cmp	r3, #0
   4ac90:	beq	4ad74 <__assert_fail@plt+0x38688>
   4ac94:	ldr	r3, [fp, #-8]
   4ac98:	add	r3, r3, #24
   4ac9c:	lsl	r3, r3, #2
   4aca0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4aca4:	add	r0, r2, r3
   4aca8:	ldr	r3, [fp, #-16]
   4acac:	rsb	r3, r3, #256	; 0x100
   4acb0:	add	r2, r3, #7
   4acb4:	cmp	r3, #0
   4acb8:	movlt	r3, r2
   4acbc:	movge	r3, r3
   4acc0:	asr	r3, r3, #3
   4acc4:	mov	r2, r3
   4acc8:	mov	r1, #0
   4accc:	bl	12434 <memset@plt>
   4acd0:	b	4ad80 <__assert_fail@plt+0x38694>
   4acd4:	mov	r3, #0
   4acd8:	str	r3, [fp, #-12]
   4acdc:	b	4ad5c <__assert_fail@plt+0x38670>
   4ace0:	bl	12368 <__ctype_b_loc@plt>
   4ace4:	mov	r3, r0
   4ace8:	ldr	r2, [r3]
   4acec:	ldr	r3, [fp, #-16]
   4acf0:	lsl	r3, r3, #1
   4acf4:	add	r3, r2, r3
   4acf8:	ldrh	r3, [r3]
   4acfc:	and	r3, r3, #8
   4ad00:	cmp	r3, #0
   4ad04:	bne	4ad14 <__assert_fail@plt+0x38628>
   4ad08:	ldr	r3, [fp, #-16]
   4ad0c:	cmp	r3, #95	; 0x5f
   4ad10:	bne	4ad44 <__assert_fail@plt+0x38658>
   4ad14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ad18:	ldr	r2, [fp, #-8]
   4ad1c:	add	r2, r2, #24
   4ad20:	ldr	r2, [r3, r2, lsl #2]
   4ad24:	mov	r1, #1
   4ad28:	ldr	r3, [fp, #-12]
   4ad2c:	lsl	r3, r1, r3
   4ad30:	orr	r1, r2, r3
   4ad34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ad38:	ldr	r2, [fp, #-8]
   4ad3c:	add	r2, r2, #24
   4ad40:	str	r1, [r3, r2, lsl #2]
   4ad44:	ldr	r3, [fp, #-12]
   4ad48:	add	r3, r3, #1
   4ad4c:	str	r3, [fp, #-12]
   4ad50:	ldr	r3, [fp, #-16]
   4ad54:	add	r3, r3, #1
   4ad58:	str	r3, [fp, #-16]
   4ad5c:	ldr	r3, [fp, #-12]
   4ad60:	cmp	r3, #31
   4ad64:	ble	4ace0 <__assert_fail@plt+0x385f4>
   4ad68:	ldr	r3, [fp, #-8]
   4ad6c:	add	r3, r3, #1
   4ad70:	str	r3, [fp, #-8]
   4ad74:	ldr	r3, [fp, #-8]
   4ad78:	cmp	r3, #7
   4ad7c:	ble	4acd4 <__assert_fail@plt+0x385e8>
   4ad80:	sub	sp, fp, #4
   4ad84:	pop	{fp, pc}
   4ad88:	mvnseq	r0, #0
   4ad8c:	push	{fp, lr}
   4ad90:	add	fp, sp, #4
   4ad94:	sub	sp, sp, #24
   4ad98:	str	r0, [fp, #-24]	; 0xffffffe8
   4ad9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ada0:	ldr	r3, [r3]
   4ada4:	str	r3, [fp, #-12]
   4ada8:	ldr	r3, [fp, #-12]
   4adac:	ldr	r3, [r3, #56]	; 0x38
   4adb0:	str	r3, [fp, #-8]
   4adb4:	b	4add4 <__assert_fail@plt+0x386e8>
   4adb8:	ldr	r3, [fp, #-8]
   4adbc:	ldr	r3, [r3]
   4adc0:	str	r3, [fp, #-16]
   4adc4:	ldr	r0, [fp, #-8]
   4adc8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4adcc:	ldr	r3, [fp, #-16]
   4add0:	str	r3, [fp, #-8]
   4add4:	ldr	r3, [fp, #-8]
   4add8:	cmp	r3, #0
   4addc:	bne	4adb8 <__assert_fail@plt+0x386cc>
   4ade0:	ldr	r3, [fp, #-12]
   4ade4:	mov	r2, #0
   4ade8:	str	r2, [r3, #56]	; 0x38
   4adec:	ldr	r3, [fp, #-12]
   4adf0:	mov	r2, #31
   4adf4:	str	r2, [r3, #64]	; 0x40
   4adf8:	ldr	r3, [fp, #-12]
   4adfc:	mov	r2, #0
   4ae00:	str	r2, [r3, #52]	; 0x34
   4ae04:	ldr	r3, [fp, #-12]
   4ae08:	ldr	r3, [r3, #16]
   4ae0c:	mov	r0, r3
   4ae10:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4ae14:	ldr	r3, [fp, #-12]
   4ae18:	mov	r2, #0
   4ae1c:	str	r2, [r3, #16]
   4ae20:	nop			; (mov r0, r0)
   4ae24:	sub	sp, fp, #4
   4ae28:	pop	{fp, pc}
   4ae2c:	push	{fp, lr}
   4ae30:	add	fp, sp, #4
   4ae34:	sub	sp, sp, #56	; 0x38
   4ae38:	str	r0, [fp, #-56]	; 0xffffffc8
   4ae3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4ae40:	ldr	r3, [r3, #52]	; 0x34
   4ae44:	ldr	r3, [r3, #12]
   4ae48:	ldr	r3, [r3, #28]
   4ae4c:	str	r3, [fp, #-16]
   4ae50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4ae54:	ldr	r2, [fp, #-16]
   4ae58:	str	r2, [r3, #72]	; 0x48
   4ae5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4ae60:	ldr	r1, [r3, #24]
   4ae64:	ldr	r2, [fp, #-16]
   4ae68:	mov	r3, r2
   4ae6c:	lsl	r3, r3, #1
   4ae70:	add	r3, r3, r2
   4ae74:	lsl	r3, r3, #2
   4ae78:	add	r2, r1, r3
   4ae7c:	sub	r3, fp, #52	; 0x34
   4ae80:	mov	r1, r2
   4ae84:	mov	r0, r3
   4ae88:	bl	47038 <__assert_fail@plt+0x3494c>
   4ae8c:	mov	r3, r0
   4ae90:	str	r3, [fp, #-40]	; 0xffffffd8
   4ae94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ae98:	cmp	r3, #0
   4ae9c:	movne	r3, #1
   4aea0:	moveq	r3, #0
   4aea4:	uxtb	r3, r3
   4aea8:	cmp	r3, #0
   4aeac:	beq	4aeb8 <__assert_fail@plt+0x387cc>
   4aeb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4aeb4:	b	4b204 <__assert_fail@plt+0x38b18>
   4aeb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4aebc:	ldr	r3, [r3, #76]	; 0x4c
   4aec0:	cmp	r3, #0
   4aec4:	ble	4b084 <__assert_fail@plt+0x38998>
   4aec8:	mov	r3, #0
   4aecc:	str	r3, [fp, #-8]
   4aed0:	b	4b074 <__assert_fail@plt+0x38988>
   4aed4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4aed8:	ldr	r3, [fp, #-8]
   4aedc:	lsl	r3, r3, #2
   4aee0:	add	r3, r2, r3
   4aee4:	ldr	r3, [r3]
   4aee8:	str	r3, [fp, #-20]	; 0xffffffec
   4aeec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4aef0:	ldr	r2, [r3]
   4aef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4aef8:	lsl	r3, r3, #3
   4aefc:	add	r3, r2, r3
   4af00:	ldrb	r3, [r3, #4]
   4af04:	str	r3, [fp, #-24]	; 0xffffffe8
   4af08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4af0c:	cmp	r3, #4
   4af10:	bne	4b05c <__assert_fail@plt+0x38970>
   4af14:	mov	r3, #0
   4af18:	str	r3, [fp, #-12]
   4af1c:	b	4af8c <__assert_fail@plt+0x388a0>
   4af20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4af24:	ldr	r2, [r3]
   4af28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4af2c:	ldr	r3, [fp, #-12]
   4af30:	lsl	r3, r3, #2
   4af34:	add	r3, r1, r3
   4af38:	ldr	r3, [r3]
   4af3c:	lsl	r3, r3, #3
   4af40:	add	r3, r2, r3
   4af44:	str	r3, [fp, #-28]	; 0xffffffe4
   4af48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4af4c:	ldrb	r3, [r3, #4]
   4af50:	cmp	r3, #9
   4af54:	bne	4af80 <__assert_fail@plt+0x38894>
   4af58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4af5c:	ldr	r2, [r3]
   4af60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4af64:	ldr	r1, [r3]
   4af68:	ldr	r3, [fp, #-20]	; 0xffffffec
   4af6c:	lsl	r3, r3, #3
   4af70:	add	r3, r1, r3
   4af74:	ldr	r3, [r3]
   4af78:	cmp	r2, r3
   4af7c:	beq	4afa0 <__assert_fail@plt+0x388b4>
   4af80:	ldr	r3, [fp, #-12]
   4af84:	add	r3, r3, #1
   4af88:	str	r3, [fp, #-12]
   4af8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4af90:	ldr	r3, [fp, #-12]
   4af94:	cmp	r2, r3
   4af98:	bgt	4af20 <__assert_fail@plt+0x38834>
   4af9c:	b	4afa4 <__assert_fail@plt+0x388b8>
   4afa0:	nop			; (mov r0, r0)
   4afa4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4afa8:	ldr	r3, [fp, #-12]
   4afac:	cmp	r2, r3
   4afb0:	beq	4b064 <__assert_fail@plt+0x38978>
   4afb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4afb8:	cmp	r3, #4
   4afbc:	bne	4b068 <__assert_fail@plt+0x3897c>
   4afc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4afc4:	ldr	r1, [r3, #20]
   4afc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4afcc:	mov	r3, r2
   4afd0:	lsl	r3, r3, #1
   4afd4:	add	r3, r3, r2
   4afd8:	lsl	r3, r3, #2
   4afdc:	add	r3, r1, r3
   4afe0:	ldr	r3, [r3, #8]
   4afe4:	ldr	r3, [r3]
   4afe8:	str	r3, [fp, #-32]	; 0xffffffe0
   4afec:	sub	r3, fp, #52	; 0x34
   4aff0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4aff4:	mov	r0, r3
   4aff8:	bl	481a4 <__assert_fail@plt+0x35ab8>
   4affc:	mov	r3, r0
   4b000:	cmp	r3, #0
   4b004:	bne	4b068 <__assert_fail@plt+0x3897c>
   4b008:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b00c:	ldr	r1, [r3, #24]
   4b010:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4b014:	mov	r3, r2
   4b018:	lsl	r3, r3, #1
   4b01c:	add	r3, r3, r2
   4b020:	lsl	r3, r3, #2
   4b024:	add	r2, r1, r3
   4b028:	sub	r3, fp, #52	; 0x34
   4b02c:	mov	r1, r2
   4b030:	mov	r0, r3
   4b034:	bl	47940 <__assert_fail@plt+0x35254>
   4b038:	str	r0, [fp, #-36]	; 0xffffffdc
   4b03c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4b040:	cmp	r3, #0
   4b044:	beq	4b050 <__assert_fail@plt+0x38964>
   4b048:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4b04c:	b	4b204 <__assert_fail@plt+0x38b18>
   4b050:	mov	r3, #0
   4b054:	str	r3, [fp, #-8]
   4b058:	b	4b068 <__assert_fail@plt+0x3897c>
   4b05c:	nop			; (mov r0, r0)
   4b060:	b	4b068 <__assert_fail@plt+0x3897c>
   4b064:	nop			; (mov r0, r0)
   4b068:	ldr	r3, [fp, #-8]
   4b06c:	add	r3, r3, #1
   4b070:	str	r3, [fp, #-8]
   4b074:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4b078:	ldr	r3, [fp, #-8]
   4b07c:	cmp	r2, r3
   4b080:	bgt	4aed4 <__assert_fail@plt+0x387e8>
   4b084:	sub	r2, fp, #52	; 0x34
   4b088:	sub	r0, fp, #40	; 0x28
   4b08c:	mov	r3, #0
   4b090:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4b094:	bl	48930 <__assert_fail@plt+0x36244>
   4b098:	mov	r2, r0
   4b09c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b0a0:	str	r2, [r3, #36]	; 0x24
   4b0a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b0a8:	ldr	r3, [r3, #36]	; 0x24
   4b0ac:	cmp	r3, #0
   4b0b0:	moveq	r3, #1
   4b0b4:	movne	r3, #0
   4b0b8:	uxtb	r3, r3
   4b0bc:	cmp	r3, #0
   4b0c0:	beq	4b0cc <__assert_fail@plt+0x389e0>
   4b0c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b0c8:	b	4b204 <__assert_fail@plt+0x38b18>
   4b0cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b0d0:	ldr	r3, [r3, #36]	; 0x24
   4b0d4:	ldrb	r3, [r3, #52]	; 0x34
   4b0d8:	bic	r3, r3, #127	; 0x7f
   4b0dc:	uxtb	r3, r3
   4b0e0:	cmp	r3, #0
   4b0e4:	beq	4b1c4 <__assert_fail@plt+0x38ad8>
   4b0e8:	sub	r2, fp, #52	; 0x34
   4b0ec:	sub	r0, fp, #40	; 0x28
   4b0f0:	mov	r3, #1
   4b0f4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4b0f8:	bl	48930 <__assert_fail@plt+0x36244>
   4b0fc:	mov	r2, r0
   4b100:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b104:	str	r2, [r3, #40]	; 0x28
   4b108:	sub	r2, fp, #52	; 0x34
   4b10c:	sub	r0, fp, #40	; 0x28
   4b110:	mov	r3, #2
   4b114:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4b118:	bl	48930 <__assert_fail@plt+0x36244>
   4b11c:	mov	r2, r0
   4b120:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b124:	str	r2, [r3, #44]	; 0x2c
   4b128:	sub	r2, fp, #52	; 0x34
   4b12c:	sub	r0, fp, #40	; 0x28
   4b130:	mov	r3, #6
   4b134:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4b138:	bl	48930 <__assert_fail@plt+0x36244>
   4b13c:	mov	r2, r0
   4b140:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b144:	str	r2, [r3, #48]	; 0x30
   4b148:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b14c:	ldr	r3, [r3, #40]	; 0x28
   4b150:	cmp	r3, #0
   4b154:	moveq	r3, #1
   4b158:	movne	r3, #0
   4b15c:	uxtb	r3, r3
   4b160:	cmp	r3, #0
   4b164:	bne	4b188 <__assert_fail@plt+0x38a9c>
   4b168:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b16c:	ldr	r3, [r3, #44]	; 0x2c
   4b170:	cmp	r3, #0
   4b174:	moveq	r3, #1
   4b178:	movne	r3, #0
   4b17c:	uxtb	r3, r3
   4b180:	cmp	r3, #0
   4b184:	beq	4b190 <__assert_fail@plt+0x38aa4>
   4b188:	mov	r3, #1
   4b18c:	b	4b194 <__assert_fail@plt+0x38aa8>
   4b190:	mov	r3, #0
   4b194:	cmp	r3, #0
   4b198:	bne	4b1bc <__assert_fail@plt+0x38ad0>
   4b19c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1a0:	ldr	r3, [r3, #48]	; 0x30
   4b1a4:	cmp	r3, #0
   4b1a8:	moveq	r3, #1
   4b1ac:	movne	r3, #0
   4b1b0:	uxtb	r3, r3
   4b1b4:	cmp	r3, #0
   4b1b8:	beq	4b1f4 <__assert_fail@plt+0x38b08>
   4b1bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b1c0:	b	4b204 <__assert_fail@plt+0x38b18>
   4b1c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1c8:	ldr	r2, [r3, #36]	; 0x24
   4b1cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1d0:	str	r2, [r3, #48]	; 0x30
   4b1d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1d8:	ldr	r2, [r3, #48]	; 0x30
   4b1dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1e0:	str	r2, [r3, #44]	; 0x2c
   4b1e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1e8:	ldr	r2, [r3, #44]	; 0x2c
   4b1ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b1f0:	str	r2, [r3, #40]	; 0x28
   4b1f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4b1f8:	mov	r0, r3
   4b1fc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4b200:	mov	r3, #0
   4b204:	mov	r0, r3
   4b208:	sub	sp, fp, #4
   4b20c:	pop	{fp, pc}
   4b210:	push	{fp, lr}
   4b214:	add	fp, sp, #4
   4b218:	sub	sp, sp, #24
   4b21c:	str	r0, [fp, #-24]	; 0xffffffe8
   4b220:	mov	r3, #0
   4b224:	strb	r3, [fp, #-13]
   4b228:	mov	r3, #0
   4b22c:	strb	r3, [fp, #-14]
   4b230:	mov	r3, #0
   4b234:	str	r3, [fp, #-8]
   4b238:	b	4b3ac <__assert_fail@plt+0x38cc0>
   4b23c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b240:	ldr	r2, [r3]
   4b244:	ldr	r3, [fp, #-8]
   4b248:	lsl	r3, r3, #3
   4b24c:	add	r3, r2, r3
   4b250:	ldrb	r3, [r3, #4]
   4b254:	sub	r3, r3, #1
   4b258:	cmp	r3, #11
   4b25c:	ldrls	pc, [pc, r3, lsl #2]
   4b260:	b	4b390 <__assert_fail@plt+0x38ca4>
   4b264:	muleq	r4, r4, r2
   4b268:	muleq	r4, r4, r3
   4b26c:	andeq	fp, r4, r0, lsr #6
   4b270:	muleq	r4, r4, r3
   4b274:	andeq	fp, r4, r4, lsl r3
   4b278:	andeq	fp, r4, ip, lsl r5
   4b27c:	muleq	r4, r0, r3
   4b280:	muleq	r4, r4, r3
   4b284:	muleq	r4, r4, r3
   4b288:	muleq	r4, r4, r3
   4b28c:	muleq	r4, r4, r3
   4b290:	andeq	fp, r4, r4, asr #5
   4b294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b298:	ldr	r2, [r3]
   4b29c:	ldr	r3, [fp, #-8]
   4b2a0:	lsl	r3, r3, #3
   4b2a4:	add	r3, r2, r3
   4b2a8:	ldrb	r3, [r3]
   4b2ac:	sxtb	r3, r3
   4b2b0:	cmp	r3, #0
   4b2b4:	bge	4b39c <__assert_fail@plt+0x38cb0>
   4b2b8:	mov	r3, #1
   4b2bc:	strb	r3, [fp, #-13]
   4b2c0:	b	4b39c <__assert_fail@plt+0x38cb0>
   4b2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b2c8:	ldr	r2, [r3]
   4b2cc:	ldr	r3, [fp, #-8]
   4b2d0:	lsl	r3, r3, #3
   4b2d4:	add	r3, r2, r3
   4b2d8:	ldr	r3, [r3]
   4b2dc:	cmp	r3, #32
   4b2e0:	beq	4b30c <__assert_fail@plt+0x38c20>
   4b2e4:	cmp	r3, #32
   4b2e8:	bhi	4b2f8 <__assert_fail@plt+0x38c0c>
   4b2ec:	cmp	r3, #16
   4b2f0:	beq	4b30c <__assert_fail@plt+0x38c20>
   4b2f4:	b	4b528 <__assert_fail@plt+0x38e3c>
   4b2f8:	cmp	r3, #64	; 0x40
   4b2fc:	beq	4b30c <__assert_fail@plt+0x38c20>
   4b300:	cmp	r3, #128	; 0x80
   4b304:	beq	4b30c <__assert_fail@plt+0x38c20>
   4b308:	b	4b528 <__assert_fail@plt+0x38e3c>
   4b30c:	nop			; (mov r0, r0)
   4b310:	b	4b3a0 <__assert_fail@plt+0x38cb4>
   4b314:	mov	r3, #1
   4b318:	strb	r3, [fp, #-14]
   4b31c:	b	4b3a0 <__assert_fail@plt+0x38cb4>
   4b320:	mov	r3, #0
   4b324:	str	r3, [fp, #-20]	; 0xffffffec
   4b328:	mov	r3, #4
   4b32c:	str	r3, [fp, #-12]
   4b330:	b	4b380 <__assert_fail@plt+0x38c94>
   4b334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b338:	ldr	r2, [r3]
   4b33c:	ldr	r3, [fp, #-8]
   4b340:	lsl	r3, r3, #3
   4b344:	add	r3, r2, r3
   4b348:	ldr	r2, [r3]
   4b34c:	ldr	r3, [fp, #-12]
   4b350:	lsl	r3, r3, #2
   4b354:	add	r3, r2, r3
   4b358:	ldr	r2, [r3]
   4b35c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b360:	lsr	r3, r2, r3
   4b364:	cmp	r3, #0
   4b368:	bne	4b524 <__assert_fail@plt+0x38e38>
   4b36c:	mov	r3, #0
   4b370:	str	r3, [fp, #-20]	; 0xffffffec
   4b374:	ldr	r3, [fp, #-12]
   4b378:	add	r3, r3, #1
   4b37c:	str	r3, [fp, #-12]
   4b380:	ldr	r3, [fp, #-12]
   4b384:	cmp	r3, #7
   4b388:	ble	4b334 <__assert_fail@plt+0x38c48>
   4b38c:	b	4b3a0 <__assert_fail@plt+0x38cb4>
   4b390:	bl	12698 <abort@plt>
   4b394:	nop			; (mov r0, r0)
   4b398:	b	4b3a0 <__assert_fail@plt+0x38cb4>
   4b39c:	nop			; (mov r0, r0)
   4b3a0:	ldr	r3, [fp, #-8]
   4b3a4:	add	r3, r3, #1
   4b3a8:	str	r3, [fp, #-8]
   4b3ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b3b0:	ldr	r2, [r3, #8]
   4b3b4:	ldr	r3, [fp, #-8]
   4b3b8:	cmp	r2, r3
   4b3bc:	bhi	4b23c <__assert_fail@plt+0x38b50>
   4b3c0:	ldrb	r3, [fp, #-13]
   4b3c4:	cmp	r3, #0
   4b3c8:	bne	4b3d8 <__assert_fail@plt+0x38cec>
   4b3cc:	ldrb	r3, [fp, #-14]
   4b3d0:	cmp	r3, #0
   4b3d4:	beq	4b4a8 <__assert_fail@plt+0x38dbc>
   4b3d8:	mov	r3, #0
   4b3dc:	str	r3, [fp, #-8]
   4b3e0:	b	4b494 <__assert_fail@plt+0x38da8>
   4b3e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b3e8:	ldr	r2, [r3]
   4b3ec:	ldr	r3, [fp, #-8]
   4b3f0:	lsl	r3, r3, #3
   4b3f4:	add	r3, r2, r3
   4b3f8:	ldrb	r3, [r3, #4]
   4b3fc:	cmp	r3, #1
   4b400:	bne	4b44c <__assert_fail@plt+0x38d60>
   4b404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b408:	ldr	r2, [r3]
   4b40c:	ldr	r3, [fp, #-8]
   4b410:	lsl	r3, r3, #3
   4b414:	add	r3, r2, r3
   4b418:	ldrb	r3, [r3]
   4b41c:	sxtb	r3, r3
   4b420:	cmp	r3, #0
   4b424:	bge	4b44c <__assert_fail@plt+0x38d60>
   4b428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b42c:	ldr	r2, [r3]
   4b430:	ldr	r3, [fp, #-8]
   4b434:	lsl	r3, r3, #3
   4b438:	add	r2, r2, r3
   4b43c:	ldrb	r3, [r2, #6]
   4b440:	bic	r3, r3, #32
   4b444:	strb	r3, [r2, #6]
   4b448:	b	4b488 <__assert_fail@plt+0x38d9c>
   4b44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b450:	ldr	r2, [r3]
   4b454:	ldr	r3, [fp, #-8]
   4b458:	lsl	r3, r3, #3
   4b45c:	add	r3, r2, r3
   4b460:	ldrb	r3, [r3, #4]
   4b464:	cmp	r3, #5
   4b468:	bne	4b488 <__assert_fail@plt+0x38d9c>
   4b46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b470:	ldr	r2, [r3]
   4b474:	ldr	r3, [fp, #-8]
   4b478:	lsl	r3, r3, #3
   4b47c:	add	r3, r2, r3
   4b480:	mov	r2, #7
   4b484:	strb	r2, [r3, #4]
   4b488:	ldr	r3, [fp, #-8]
   4b48c:	add	r3, r3, #1
   4b490:	str	r3, [fp, #-8]
   4b494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b498:	ldr	r2, [r3, #8]
   4b49c:	ldr	r3, [fp, #-8]
   4b4a0:	cmp	r2, r3
   4b4a4:	bhi	4b3e4 <__assert_fail@plt+0x38cf8>
   4b4a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b4ac:	mov	r2, #1
   4b4b0:	str	r2, [r3, #92]	; 0x5c
   4b4b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b4b8:	ldrb	r3, [r2, #88]	; 0x58
   4b4bc:	bic	r3, r3, #4
   4b4c0:	strb	r3, [r2, #88]	; 0x58
   4b4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b4c8:	ldr	r3, [r3, #76]	; 0x4c
   4b4cc:	cmp	r3, #0
   4b4d0:	bgt	4b4e0 <__assert_fail@plt+0x38df4>
   4b4d4:	ldrb	r3, [fp, #-14]
   4b4d8:	cmp	r3, #0
   4b4dc:	beq	4b4e8 <__assert_fail@plt+0x38dfc>
   4b4e0:	mov	r3, #1
   4b4e4:	b	4b4ec <__assert_fail@plt+0x38e00>
   4b4e8:	mov	r3, #0
   4b4ec:	uxtb	r3, r3
   4b4f0:	and	r3, r3, #1
   4b4f4:	uxtb	r3, r3
   4b4f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b4fc:	ldrb	r2, [r1, #88]	; 0x58
   4b500:	and	r3, r3, #1
   4b504:	bic	r2, r2, #2
   4b508:	lsl	r3, r3, #1
   4b50c:	orr	r3, r3, r2
   4b510:	mov	r2, r3
   4b514:	strb	r2, [r1, #88]	; 0x58
   4b518:	b	4b528 <__assert_fail@plt+0x38e3c>
   4b51c:	nop			; (mov r0, r0)
   4b520:	b	4b528 <__assert_fail@plt+0x38e3c>
   4b524:	nop			; (mov r0, r0)
   4b528:	sub	sp, fp, #4
   4b52c:	pop	{fp, pc}
   4b530:	push	{fp, lr}
   4b534:	add	fp, sp, #4
   4b538:	sub	sp, sp, #24
   4b53c:	str	r0, [fp, #-24]	; 0xffffffe8
   4b540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b544:	ldr	r3, [r3]
   4b548:	str	r3, [fp, #-16]
   4b54c:	ldr	r3, [fp, #-16]
   4b550:	ldr	r3, [r3, #4]
   4b554:	lsl	r3, r3, #2
   4b558:	mov	r0, r3
   4b55c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4b560:	mov	r3, r0
   4b564:	mov	r2, r3
   4b568:	ldr	r3, [fp, #-16]
   4b56c:	str	r2, [r3, #12]
   4b570:	ldr	r3, [fp, #-16]
   4b574:	ldr	r3, [r3, #4]
   4b578:	lsl	r3, r3, #2
   4b57c:	mov	r0, r3
   4b580:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4b584:	mov	r3, r0
   4b588:	mov	r2, r3
   4b58c:	ldr	r3, [fp, #-16]
   4b590:	str	r2, [r3, #16]
   4b594:	ldr	r3, [fp, #-16]
   4b598:	ldr	r2, [r3, #4]
   4b59c:	mov	r3, r2
   4b5a0:	lsl	r3, r3, #1
   4b5a4:	add	r3, r3, r2
   4b5a8:	lsl	r3, r3, #2
   4b5ac:	mov	r0, r3
   4b5b0:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4b5b4:	mov	r3, r0
   4b5b8:	mov	r2, r3
   4b5bc:	ldr	r3, [fp, #-16]
   4b5c0:	str	r2, [r3, #20]
   4b5c4:	ldr	r3, [fp, #-16]
   4b5c8:	ldr	r2, [r3, #4]
   4b5cc:	mov	r3, r2
   4b5d0:	lsl	r3, r3, #1
   4b5d4:	add	r3, r3, r2
   4b5d8:	lsl	r3, r3, #2
   4b5dc:	mov	r0, r3
   4b5e0:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4b5e4:	mov	r3, r0
   4b5e8:	mov	r2, r3
   4b5ec:	ldr	r3, [fp, #-16]
   4b5f0:	str	r2, [r3, #24]
   4b5f4:	ldr	r3, [fp, #-16]
   4b5f8:	ldr	r3, [r3, #12]
   4b5fc:	cmp	r3, #0
   4b600:	moveq	r3, #1
   4b604:	movne	r3, #0
   4b608:	uxtb	r3, r3
   4b60c:	cmp	r3, #0
   4b610:	bne	4b634 <__assert_fail@plt+0x38f48>
   4b614:	ldr	r3, [fp, #-16]
   4b618:	ldr	r3, [r3, #16]
   4b61c:	cmp	r3, #0
   4b620:	moveq	r3, #1
   4b624:	movne	r3, #0
   4b628:	uxtb	r3, r3
   4b62c:	cmp	r3, #0
   4b630:	beq	4b63c <__assert_fail@plt+0x38f50>
   4b634:	mov	r3, #1
   4b638:	b	4b640 <__assert_fail@plt+0x38f54>
   4b63c:	mov	r3, #0
   4b640:	cmp	r3, #0
   4b644:	bne	4b668 <__assert_fail@plt+0x38f7c>
   4b648:	ldr	r3, [fp, #-16]
   4b64c:	ldr	r3, [r3, #20]
   4b650:	cmp	r3, #0
   4b654:	moveq	r3, #1
   4b658:	movne	r3, #0
   4b65c:	uxtb	r3, r3
   4b660:	cmp	r3, #0
   4b664:	beq	4b670 <__assert_fail@plt+0x38f84>
   4b668:	mov	r3, #1
   4b66c:	b	4b674 <__assert_fail@plt+0x38f88>
   4b670:	mov	r3, #0
   4b674:	cmp	r3, #0
   4b678:	bne	4b69c <__assert_fail@plt+0x38fb0>
   4b67c:	ldr	r3, [fp, #-16]
   4b680:	ldr	r3, [r3, #24]
   4b684:	cmp	r3, #0
   4b688:	moveq	r3, #1
   4b68c:	movne	r3, #0
   4b690:	uxtb	r3, r3
   4b694:	cmp	r3, #0
   4b698:	beq	4b6a4 <__assert_fail@plt+0x38fb8>
   4b69c:	mov	r3, #12
   4b6a0:	b	4b980 <__assert_fail@plt+0x39294>
   4b6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b6a8:	ldr	r3, [r3, #24]
   4b6ac:	lsl	r3, r3, #2
   4b6b0:	mov	r0, r3
   4b6b4:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4b6b8:	mov	r3, r0
   4b6bc:	mov	r2, r3
   4b6c0:	ldr	r3, [fp, #-16]
   4b6c4:	str	r2, [r3, #132]	; 0x84
   4b6c8:	ldr	r3, [fp, #-16]
   4b6cc:	ldr	r3, [r3, #132]	; 0x84
   4b6d0:	cmp	r3, #0
   4b6d4:	beq	4b7c0 <__assert_fail@plt+0x390d4>
   4b6d8:	mov	r3, #0
   4b6dc:	str	r3, [fp, #-12]
   4b6e0:	b	4b70c <__assert_fail@plt+0x39020>
   4b6e4:	ldr	r3, [fp, #-16]
   4b6e8:	ldr	r2, [r3, #132]	; 0x84
   4b6ec:	ldr	r3, [fp, #-12]
   4b6f0:	lsl	r3, r3, #2
   4b6f4:	add	r3, r2, r3
   4b6f8:	ldr	r2, [fp, #-12]
   4b6fc:	str	r2, [r3]
   4b700:	ldr	r3, [fp, #-12]
   4b704:	add	r3, r3, #1
   4b708:	str	r3, [fp, #-12]
   4b70c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b710:	ldr	r2, [r3, #24]
   4b714:	ldr	r3, [fp, #-12]
   4b718:	cmp	r2, r3
   4b71c:	bhi	4b6e4 <__assert_fail@plt+0x38ff8>
   4b720:	ldr	r3, [fp, #-16]
   4b724:	ldr	r3, [r3, #52]	; 0x34
   4b728:	ldr	r2, [fp, #-16]
   4b72c:	ldr	r1, [pc, #600]	; 4b98c <__assert_fail@plt+0x392a0>
   4b730:	mov	r0, r3
   4b734:	bl	4bab4 <__assert_fail@plt+0x393c8>
   4b738:	mov	r3, #0
   4b73c:	str	r3, [fp, #-12]
   4b740:	b	4b774 <__assert_fail@plt+0x39088>
   4b744:	ldr	r3, [fp, #-16]
   4b748:	ldr	r2, [r3, #132]	; 0x84
   4b74c:	ldr	r3, [fp, #-12]
   4b750:	lsl	r3, r3, #2
   4b754:	add	r3, r2, r3
   4b758:	ldr	r2, [r3]
   4b75c:	ldr	r3, [fp, #-12]
   4b760:	cmp	r2, r3
   4b764:	bne	4b78c <__assert_fail@plt+0x390a0>
   4b768:	ldr	r3, [fp, #-12]
   4b76c:	add	r3, r3, #1
   4b770:	str	r3, [fp, #-12]
   4b774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b778:	ldr	r2, [r3, #24]
   4b77c:	ldr	r3, [fp, #-12]
   4b780:	cmp	r2, r3
   4b784:	bhi	4b744 <__assert_fail@plt+0x39058>
   4b788:	b	4b790 <__assert_fail@plt+0x390a4>
   4b78c:	nop			; (mov r0, r0)
   4b790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b794:	ldr	r2, [r3, #24]
   4b798:	ldr	r3, [fp, #-12]
   4b79c:	cmp	r2, r3
   4b7a0:	bne	4b7c0 <__assert_fail@plt+0x390d4>
   4b7a4:	ldr	r3, [fp, #-16]
   4b7a8:	ldr	r3, [r3, #132]	; 0x84
   4b7ac:	mov	r0, r3
   4b7b0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4b7b4:	ldr	r3, [fp, #-16]
   4b7b8:	mov	r2, #0
   4b7bc:	str	r2, [r3, #132]	; 0x84
   4b7c0:	ldr	r3, [fp, #-16]
   4b7c4:	ldr	r3, [r3, #52]	; 0x34
   4b7c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b7cc:	ldr	r1, [pc, #444]	; 4b990 <__assert_fail@plt+0x392a4>
   4b7d0:	mov	r0, r3
   4b7d4:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4b7d8:	str	r0, [fp, #-8]
   4b7dc:	ldr	r3, [fp, #-8]
   4b7e0:	cmp	r3, #0
   4b7e4:	movne	r3, #1
   4b7e8:	moveq	r3, #0
   4b7ec:	uxtb	r3, r3
   4b7f0:	cmp	r3, #0
   4b7f4:	beq	4b800 <__assert_fail@plt+0x39114>
   4b7f8:	ldr	r3, [fp, #-8]
   4b7fc:	b	4b980 <__assert_fail@plt+0x39294>
   4b800:	ldr	r3, [fp, #-16]
   4b804:	ldr	r3, [r3, #52]	; 0x34
   4b808:	ldr	r2, [fp, #-16]
   4b80c:	ldr	r1, [pc, #384]	; 4b994 <__assert_fail@plt+0x392a8>
   4b810:	mov	r0, r3
   4b814:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4b818:	str	r0, [fp, #-8]
   4b81c:	ldr	r3, [fp, #-8]
   4b820:	cmp	r3, #0
   4b824:	movne	r3, #1
   4b828:	moveq	r3, #0
   4b82c:	uxtb	r3, r3
   4b830:	cmp	r3, #0
   4b834:	beq	4b840 <__assert_fail@plt+0x39154>
   4b838:	ldr	r3, [fp, #-8]
   4b83c:	b	4b980 <__assert_fail@plt+0x39294>
   4b840:	ldr	r3, [fp, #-16]
   4b844:	ldr	r3, [r3, #52]	; 0x34
   4b848:	ldr	r2, [fp, #-16]
   4b84c:	ldr	r1, [pc, #324]	; 4b998 <__assert_fail@plt+0x392ac>
   4b850:	mov	r0, r3
   4b854:	bl	4bab4 <__assert_fail@plt+0x393c8>
   4b858:	ldr	r3, [fp, #-16]
   4b85c:	ldr	r3, [r3, #52]	; 0x34
   4b860:	ldr	r2, [fp, #-16]
   4b864:	ldr	r1, [pc, #304]	; 4b99c <__assert_fail@plt+0x392b0>
   4b868:	mov	r0, r3
   4b86c:	bl	4bab4 <__assert_fail@plt+0x393c8>
   4b870:	str	r0, [fp, #-8]
   4b874:	ldr	r3, [fp, #-8]
   4b878:	cmp	r3, #0
   4b87c:	movne	r3, #1
   4b880:	moveq	r3, #0
   4b884:	uxtb	r3, r3
   4b888:	cmp	r3, #0
   4b88c:	beq	4b898 <__assert_fail@plt+0x391ac>
   4b890:	ldr	r3, [fp, #-8]
   4b894:	b	4b980 <__assert_fail@plt+0x39294>
   4b898:	ldr	r0, [fp, #-16]
   4b89c:	bl	4ce7c <__assert_fail@plt+0x3a790>
   4b8a0:	str	r0, [fp, #-8]
   4b8a4:	ldr	r3, [fp, #-8]
   4b8a8:	cmp	r3, #0
   4b8ac:	movne	r3, #1
   4b8b0:	moveq	r3, #0
   4b8b4:	uxtb	r3, r3
   4b8b8:	cmp	r3, #0
   4b8bc:	beq	4b8c8 <__assert_fail@plt+0x391dc>
   4b8c0:	ldr	r3, [fp, #-8]
   4b8c4:	b	4b980 <__assert_fail@plt+0x39294>
   4b8c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b8cc:	ldrb	r3, [r3, #28]
   4b8d0:	and	r3, r3, #16
   4b8d4:	uxtb	r3, r3
   4b8d8:	cmp	r3, #0
   4b8dc:	bne	4b908 <__assert_fail@plt+0x3921c>
   4b8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b8e4:	ldr	r3, [r3, #24]
   4b8e8:	cmp	r3, #0
   4b8ec:	beq	4b908 <__assert_fail@plt+0x3921c>
   4b8f0:	ldr	r3, [fp, #-16]
   4b8f4:	ldrb	r3, [r3, #88]	; 0x58
   4b8f8:	and	r3, r3, #1
   4b8fc:	uxtb	r3, r3
   4b900:	cmp	r3, #0
   4b904:	bne	4b918 <__assert_fail@plt+0x3922c>
   4b908:	ldr	r3, [fp, #-16]
   4b90c:	ldr	r3, [r3, #76]	; 0x4c
   4b910:	cmp	r3, #0
   4b914:	beq	4b97c <__assert_fail@plt+0x39290>
   4b918:	ldr	r3, [fp, #-16]
   4b91c:	ldr	r2, [r3, #8]
   4b920:	mov	r3, r2
   4b924:	lsl	r3, r3, #1
   4b928:	add	r3, r3, r2
   4b92c:	lsl	r3, r3, #2
   4b930:	mov	r0, r3
   4b934:	bl	42ba8 <__assert_fail@plt+0x304bc>
   4b938:	mov	r3, r0
   4b93c:	mov	r2, r3
   4b940:	ldr	r3, [fp, #-16]
   4b944:	str	r2, [r3, #28]
   4b948:	ldr	r3, [fp, #-16]
   4b94c:	ldr	r3, [r3, #28]
   4b950:	cmp	r3, #0
   4b954:	moveq	r3, #1
   4b958:	movne	r3, #0
   4b95c:	uxtb	r3, r3
   4b960:	cmp	r3, #0
   4b964:	beq	4b970 <__assert_fail@plt+0x39284>
   4b968:	mov	r3, #12
   4b96c:	b	4b980 <__assert_fail@plt+0x39294>
   4b970:	ldr	r0, [fp, #-16]
   4b974:	bl	4cd00 <__assert_fail@plt+0x3a614>
   4b978:	str	r0, [fp, #-8]
   4b97c:	ldr	r3, [fp, #-8]
   4b980:	mov	r0, r3
   4b984:	sub	sp, fp, #4
   4b988:	pop	{fp, pc}
   4b98c:	andeq	fp, r4, r0, lsr #23
   4b990:	andeq	fp, r4, r0, lsr #26
   4b994:	andeq	ip, r4, r4, ror r0
   4b998:	muleq	r4, r4, r1
   4b99c:	andeq	ip, r4, r8, ror #4
   4b9a0:	push	{fp, lr}
   4b9a4:	add	fp, sp, #4
   4b9a8:	sub	sp, sp, #32
   4b9ac:	str	r0, [fp, #-24]	; 0xffffffe8
   4b9b0:	str	r1, [fp, #-28]	; 0xffffffe4
   4b9b4:	str	r2, [fp, #-32]	; 0xffffffe0
   4b9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b9bc:	str	r3, [fp, #-8]
   4b9c0:	b	4b9f0 <__assert_fail@plt+0x39304>
   4b9c4:	ldr	r3, [fp, #-8]
   4b9c8:	ldr	r3, [r3, #4]
   4b9cc:	cmp	r3, #0
   4b9d0:	beq	4b9e4 <__assert_fail@plt+0x392f8>
   4b9d4:	ldr	r3, [fp, #-8]
   4b9d8:	ldr	r3, [r3, #4]
   4b9dc:	str	r3, [fp, #-8]
   4b9e0:	b	4b9f0 <__assert_fail@plt+0x39304>
   4b9e4:	ldr	r3, [fp, #-8]
   4b9e8:	ldr	r3, [r3, #8]
   4b9ec:	str	r3, [fp, #-8]
   4b9f0:	ldr	r3, [fp, #-8]
   4b9f4:	ldr	r3, [r3, #4]
   4b9f8:	cmp	r3, #0
   4b9fc:	bne	4b9c4 <__assert_fail@plt+0x392d8>
   4ba00:	ldr	r3, [fp, #-8]
   4ba04:	ldr	r3, [r3, #8]
   4ba08:	cmp	r3, #0
   4ba0c:	bne	4b9c4 <__assert_fail@plt+0x392d8>
   4ba10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ba14:	ldr	r1, [fp, #-8]
   4ba18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ba1c:	blx	r3
   4ba20:	str	r0, [fp, #-12]
   4ba24:	ldr	r3, [fp, #-12]
   4ba28:	cmp	r3, #0
   4ba2c:	movne	r3, #1
   4ba30:	moveq	r3, #0
   4ba34:	uxtb	r3, r3
   4ba38:	cmp	r3, #0
   4ba3c:	beq	4ba48 <__assert_fail@plt+0x3935c>
   4ba40:	ldr	r3, [fp, #-12]
   4ba44:	b	4baa8 <__assert_fail@plt+0x393bc>
   4ba48:	ldr	r3, [fp, #-8]
   4ba4c:	ldr	r3, [r3]
   4ba50:	cmp	r3, #0
   4ba54:	bne	4ba60 <__assert_fail@plt+0x39374>
   4ba58:	mov	r3, #0
   4ba5c:	b	4baa8 <__assert_fail@plt+0x393bc>
   4ba60:	ldr	r3, [fp, #-8]
   4ba64:	str	r3, [fp, #-16]
   4ba68:	ldr	r3, [fp, #-8]
   4ba6c:	ldr	r3, [r3]
   4ba70:	str	r3, [fp, #-8]
   4ba74:	ldr	r3, [fp, #-8]
   4ba78:	ldr	r2, [r3, #8]
   4ba7c:	ldr	r3, [fp, #-16]
   4ba80:	cmp	r2, r3
   4ba84:	beq	4ba10 <__assert_fail@plt+0x39324>
   4ba88:	ldr	r3, [fp, #-8]
   4ba8c:	ldr	r3, [r3, #8]
   4ba90:	cmp	r3, #0
   4ba94:	beq	4ba10 <__assert_fail@plt+0x39324>
   4ba98:	ldr	r3, [fp, #-8]
   4ba9c:	ldr	r3, [r3, #8]
   4baa0:	str	r3, [fp, #-8]
   4baa4:	b	4b9f0 <__assert_fail@plt+0x39304>
   4baa8:	mov	r0, r3
   4baac:	sub	sp, fp, #4
   4bab0:	pop	{fp, pc}
   4bab4:	push	{fp, lr}
   4bab8:	add	fp, sp, #4
   4babc:	sub	sp, sp, #32
   4bac0:	str	r0, [fp, #-24]	; 0xffffffe8
   4bac4:	str	r1, [fp, #-28]	; 0xffffffe4
   4bac8:	str	r2, [fp, #-32]	; 0xffffffe0
   4bacc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bad0:	str	r3, [fp, #-8]
   4bad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bad8:	ldr	r1, [fp, #-8]
   4badc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bae0:	blx	r3
   4bae4:	str	r0, [fp, #-16]
   4bae8:	ldr	r3, [fp, #-16]
   4baec:	cmp	r3, #0
   4baf0:	movne	r3, #1
   4baf4:	moveq	r3, #0
   4baf8:	uxtb	r3, r3
   4bafc:	cmp	r3, #0
   4bb00:	beq	4bb0c <__assert_fail@plt+0x39420>
   4bb04:	ldr	r3, [fp, #-16]
   4bb08:	b	4bb94 <__assert_fail@plt+0x394a8>
   4bb0c:	ldr	r3, [fp, #-8]
   4bb10:	ldr	r3, [r3, #4]
   4bb14:	cmp	r3, #0
   4bb18:	beq	4bb2c <__assert_fail@plt+0x39440>
   4bb1c:	ldr	r3, [fp, #-8]
   4bb20:	ldr	r3, [r3, #4]
   4bb24:	str	r3, [fp, #-8]
   4bb28:	b	4bad4 <__assert_fail@plt+0x393e8>
   4bb2c:	mov	r3, #0
   4bb30:	str	r3, [fp, #-12]
   4bb34:	b	4bb60 <__assert_fail@plt+0x39474>
   4bb38:	ldr	r3, [fp, #-8]
   4bb3c:	str	r3, [fp, #-12]
   4bb40:	ldr	r3, [fp, #-8]
   4bb44:	ldr	r3, [r3]
   4bb48:	str	r3, [fp, #-8]
   4bb4c:	ldr	r3, [fp, #-8]
   4bb50:	cmp	r3, #0
   4bb54:	bne	4bb60 <__assert_fail@plt+0x39474>
   4bb58:	mov	r3, #0
   4bb5c:	b	4bb94 <__assert_fail@plt+0x394a8>
   4bb60:	ldr	r3, [fp, #-8]
   4bb64:	ldr	r2, [r3, #8]
   4bb68:	ldr	r3, [fp, #-12]
   4bb6c:	cmp	r2, r3
   4bb70:	beq	4bb38 <__assert_fail@plt+0x3944c>
   4bb74:	ldr	r3, [fp, #-8]
   4bb78:	ldr	r3, [r3, #8]
   4bb7c:	cmp	r3, #0
   4bb80:	beq	4bb38 <__assert_fail@plt+0x3944c>
   4bb84:	ldr	r3, [fp, #-8]
   4bb88:	ldr	r3, [r3, #8]
   4bb8c:	str	r3, [fp, #-8]
   4bb90:	b	4bad4 <__assert_fail@plt+0x393e8>
   4bb94:	mov	r0, r3
   4bb98:	sub	sp, fp, #4
   4bb9c:	pop	{fp, pc}
   4bba0:	push	{fp}		; (str fp, [sp, #-4]!)
   4bba4:	add	fp, sp, #0
   4bba8:	sub	sp, sp, #28
   4bbac:	str	r0, [fp, #-24]	; 0xffffffe8
   4bbb0:	str	r1, [fp, #-28]	; 0xffffffe4
   4bbb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bbb8:	str	r3, [fp, #-8]
   4bbbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bbc0:	ldrb	r3, [r3, #24]
   4bbc4:	cmp	r3, #4
   4bbc8:	bne	4bc30 <__assert_fail@plt+0x39544>
   4bbcc:	ldr	r3, [fp, #-8]
   4bbd0:	ldr	r3, [r3, #132]	; 0x84
   4bbd4:	cmp	r3, #0
   4bbd8:	beq	4bc30 <__assert_fail@plt+0x39544>
   4bbdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bbe0:	ldr	r3, [r3, #20]
   4bbe4:	str	r3, [fp, #-12]
   4bbe8:	ldr	r3, [fp, #-8]
   4bbec:	ldr	r2, [r3, #132]	; 0x84
   4bbf0:	ldr	r3, [fp, #-12]
   4bbf4:	lsl	r3, r3, #2
   4bbf8:	add	r3, r2, r3
   4bbfc:	ldr	r2, [r3]
   4bc00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc04:	str	r2, [r3, #20]
   4bc08:	ldr	r3, [fp, #-8]
   4bc0c:	ldr	r3, [r3, #80]	; 0x50
   4bc10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4bc14:	ldr	r2, [r2, #20]
   4bc18:	mov	r1, #1
   4bc1c:	lsl	r2, r1, r2
   4bc20:	orr	r2, r3, r2
   4bc24:	ldr	r3, [fp, #-8]
   4bc28:	str	r2, [r3, #80]	; 0x50
   4bc2c:	b	4bd0c <__assert_fail@plt+0x39620>
   4bc30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc34:	ldrb	r3, [r3, #24]
   4bc38:	cmp	r3, #17
   4bc3c:	bne	4bd0c <__assert_fail@plt+0x39620>
   4bc40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc44:	ldr	r3, [r3, #4]
   4bc48:	cmp	r3, #0
   4bc4c:	beq	4bd0c <__assert_fail@plt+0x39620>
   4bc50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc54:	ldr	r3, [r3, #4]
   4bc58:	ldrb	r3, [r3, #24]
   4bc5c:	cmp	r3, #17
   4bc60:	bne	4bd0c <__assert_fail@plt+0x39620>
   4bc64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc68:	ldr	r3, [r3, #4]
   4bc6c:	ldr	r3, [r3, #20]
   4bc70:	str	r3, [fp, #-16]
   4bc74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc78:	ldr	r3, [r3, #4]
   4bc7c:	ldr	r2, [r3, #4]
   4bc80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc84:	str	r2, [r3, #4]
   4bc88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc8c:	ldr	r3, [r3, #4]
   4bc90:	cmp	r3, #0
   4bc94:	beq	4bca8 <__assert_fail@plt+0x395bc>
   4bc98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bc9c:	ldr	r3, [r3, #4]
   4bca0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4bca4:	str	r2, [r3]
   4bca8:	ldr	r3, [fp, #-8]
   4bcac:	ldr	r2, [r3, #132]	; 0x84
   4bcb0:	ldr	r3, [fp, #-16]
   4bcb4:	lsl	r3, r3, #2
   4bcb8:	add	r3, r2, r3
   4bcbc:	ldr	r2, [fp, #-8]
   4bcc0:	ldr	r1, [r2, #132]	; 0x84
   4bcc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4bcc8:	ldr	r2, [r2, #20]
   4bccc:	lsl	r2, r2, #2
   4bcd0:	add	r2, r1, r2
   4bcd4:	ldr	r2, [r2]
   4bcd8:	str	r2, [r3]
   4bcdc:	ldr	r3, [fp, #-16]
   4bce0:	cmp	r3, #31
   4bce4:	bgt	4bd0c <__assert_fail@plt+0x39620>
   4bce8:	ldr	r3, [fp, #-8]
   4bcec:	ldr	r2, [r3, #80]	; 0x50
   4bcf0:	mov	r1, #1
   4bcf4:	ldr	r3, [fp, #-16]
   4bcf8:	lsl	r3, r1, r3
   4bcfc:	mvn	r3, r3
   4bd00:	and	r2, r2, r3
   4bd04:	ldr	r3, [fp, #-8]
   4bd08:	str	r2, [r3, #80]	; 0x50
   4bd0c:	mov	r3, #0
   4bd10:	mov	r0, r3
   4bd14:	add	sp, fp, #0
   4bd18:	pop	{fp}		; (ldr fp, [sp], #4)
   4bd1c:	bx	lr
   4bd20:	push	{fp, lr}
   4bd24:	add	fp, sp, #4
   4bd28:	sub	sp, sp, #16
   4bd2c:	str	r0, [fp, #-16]
   4bd30:	str	r1, [fp, #-20]	; 0xffffffec
   4bd34:	ldr	r3, [fp, #-16]
   4bd38:	str	r3, [fp, #-8]
   4bd3c:	mov	r3, #0
   4bd40:	str	r3, [fp, #-12]
   4bd44:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bd48:	ldr	r3, [r3, #4]
   4bd4c:	cmp	r3, #0
   4bd50:	beq	4bdac <__assert_fail@plt+0x396c0>
   4bd54:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bd58:	ldr	r3, [r3, #4]
   4bd5c:	ldrb	r3, [r3, #24]
   4bd60:	cmp	r3, #17
   4bd64:	bne	4bdac <__assert_fail@plt+0x396c0>
   4bd68:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bd6c:	ldr	r2, [r3, #4]
   4bd70:	sub	r3, fp, #12
   4bd74:	ldr	r1, [fp, #-8]
   4bd78:	mov	r0, r3
   4bd7c:	bl	4be24 <__assert_fail@plt+0x39738>
   4bd80:	mov	r2, r0
   4bd84:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bd88:	str	r2, [r3, #4]
   4bd8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bd90:	ldr	r3, [r3, #4]
   4bd94:	cmp	r3, #0
   4bd98:	beq	4bdac <__assert_fail@plt+0x396c0>
   4bd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bda0:	ldr	r3, [r3, #4]
   4bda4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4bda8:	str	r2, [r3]
   4bdac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bdb0:	ldr	r3, [r3, #8]
   4bdb4:	cmp	r3, #0
   4bdb8:	beq	4be14 <__assert_fail@plt+0x39728>
   4bdbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bdc0:	ldr	r3, [r3, #8]
   4bdc4:	ldrb	r3, [r3, #24]
   4bdc8:	cmp	r3, #17
   4bdcc:	bne	4be14 <__assert_fail@plt+0x39728>
   4bdd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bdd4:	ldr	r2, [r3, #8]
   4bdd8:	sub	r3, fp, #12
   4bddc:	ldr	r1, [fp, #-8]
   4bde0:	mov	r0, r3
   4bde4:	bl	4be24 <__assert_fail@plt+0x39738>
   4bde8:	mov	r2, r0
   4bdec:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bdf0:	str	r2, [r3, #8]
   4bdf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bdf8:	ldr	r3, [r3, #8]
   4bdfc:	cmp	r3, #0
   4be00:	beq	4be14 <__assert_fail@plt+0x39728>
   4be04:	ldr	r3, [fp, #-20]	; 0xffffffec
   4be08:	ldr	r3, [r3, #8]
   4be0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4be10:	str	r2, [r3]
   4be14:	ldr	r3, [fp, #-12]
   4be18:	mov	r0, r3
   4be1c:	sub	sp, fp, #4
   4be20:	pop	{fp, pc}
   4be24:	push	{fp, lr}
   4be28:	add	fp, sp, #4
   4be2c:	sub	sp, sp, #40	; 0x28
   4be30:	str	r0, [fp, #-32]	; 0xffffffe0
   4be34:	str	r1, [fp, #-36]	; 0xffffffdc
   4be38:	str	r2, [fp, #-40]	; 0xffffffd8
   4be3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4be40:	ldr	r3, [r3]
   4be44:	str	r3, [fp, #-8]
   4be48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4be4c:	ldr	r3, [r3, #4]
   4be50:	str	r3, [fp, #-12]
   4be54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4be58:	ldrb	r3, [r3, #28]
   4be5c:	and	r3, r3, #16
   4be60:	uxtb	r3, r3
   4be64:	cmp	r3, #0
   4be68:	beq	4beb8 <__assert_fail@plt+0x397cc>
   4be6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4be70:	ldr	r3, [r3, #4]
   4be74:	cmp	r3, #0
   4be78:	beq	4beb8 <__assert_fail@plt+0x397cc>
   4be7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4be80:	ldr	r3, [r3, #20]
   4be84:	cmp	r3, #31
   4be88:	bgt	4beac <__assert_fail@plt+0x397c0>
   4be8c:	ldr	r3, [fp, #-8]
   4be90:	ldr	r2, [r3, #80]	; 0x50
   4be94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4be98:	ldr	r3, [r3, #20]
   4be9c:	lsr	r3, r2, r3
   4bea0:	and	r3, r3, #1
   4bea4:	cmp	r3, #0
   4bea8:	bne	4beb8 <__assert_fail@plt+0x397cc>
   4beac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4beb0:	ldr	r3, [r3, #4]
   4beb4:	b	4c068 <__assert_fail@plt+0x3997c>
   4beb8:	mov	r3, #8
   4bebc:	mov	r2, #0
   4bec0:	mov	r1, #0
   4bec4:	ldr	r0, [fp, #-8]
   4bec8:	bl	5202c <__assert_fail@plt+0x3f940>
   4becc:	str	r0, [fp, #-16]
   4bed0:	mov	r3, #9
   4bed4:	mov	r2, #0
   4bed8:	mov	r1, #0
   4bedc:	ldr	r0, [fp, #-8]
   4bee0:	bl	5202c <__assert_fail@plt+0x3f940>
   4bee4:	str	r0, [fp, #-20]	; 0xffffffec
   4bee8:	ldr	r3, [fp, #-12]
   4beec:	cmp	r3, #0
   4bef0:	beq	4bf10 <__assert_fail@plt+0x39824>
   4bef4:	mov	r3, #16
   4bef8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4befc:	ldr	r1, [fp, #-12]
   4bf00:	ldr	r0, [fp, #-8]
   4bf04:	bl	5202c <__assert_fail@plt+0x3f940>
   4bf08:	mov	r3, r0
   4bf0c:	b	4bf14 <__assert_fail@plt+0x39828>
   4bf10:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bf14:	str	r3, [fp, #-24]	; 0xffffffe8
   4bf18:	mov	r3, #16
   4bf1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4bf20:	ldr	r1, [fp, #-16]
   4bf24:	ldr	r0, [fp, #-8]
   4bf28:	bl	5202c <__assert_fail@plt+0x3f940>
   4bf2c:	str	r0, [fp, #-28]	; 0xffffffe4
   4bf30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4bf34:	cmp	r3, #0
   4bf38:	moveq	r3, #1
   4bf3c:	movne	r3, #0
   4bf40:	uxtb	r3, r3
   4bf44:	cmp	r3, #0
   4bf48:	bne	4bf68 <__assert_fail@plt+0x3987c>
   4bf4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bf50:	cmp	r3, #0
   4bf54:	moveq	r3, #1
   4bf58:	movne	r3, #0
   4bf5c:	uxtb	r3, r3
   4bf60:	cmp	r3, #0
   4bf64:	beq	4bf70 <__assert_fail@plt+0x39884>
   4bf68:	mov	r3, #1
   4bf6c:	b	4bf74 <__assert_fail@plt+0x39888>
   4bf70:	mov	r3, #0
   4bf74:	cmp	r3, #0
   4bf78:	bne	4bf98 <__assert_fail@plt+0x398ac>
   4bf7c:	ldr	r3, [fp, #-16]
   4bf80:	cmp	r3, #0
   4bf84:	moveq	r3, #1
   4bf88:	movne	r3, #0
   4bf8c:	uxtb	r3, r3
   4bf90:	cmp	r3, #0
   4bf94:	beq	4bfa0 <__assert_fail@plt+0x398b4>
   4bf98:	mov	r3, #1
   4bf9c:	b	4bfa4 <__assert_fail@plt+0x398b8>
   4bfa0:	mov	r3, #0
   4bfa4:	cmp	r3, #0
   4bfa8:	bne	4bfc8 <__assert_fail@plt+0x398dc>
   4bfac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bfb0:	cmp	r3, #0
   4bfb4:	moveq	r3, #1
   4bfb8:	movne	r3, #0
   4bfbc:	uxtb	r3, r3
   4bfc0:	cmp	r3, #0
   4bfc4:	beq	4bfdc <__assert_fail@plt+0x398f0>
   4bfc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4bfcc:	mov	r2, #12
   4bfd0:	str	r2, [r3]
   4bfd4:	mov	r3, #0
   4bfd8:	b	4c068 <__assert_fail@plt+0x3997c>
   4bfdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4bfe0:	ldr	r2, [r3, #20]
   4bfe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bfe8:	str	r2, [r3, #20]
   4bfec:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bff0:	ldr	r2, [r3, #20]
   4bff4:	ldr	r3, [fp, #-16]
   4bff8:	str	r2, [r3, #20]
   4bffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c000:	ldrb	r3, [r3, #26]
   4c004:	lsr	r3, r3, #3
   4c008:	and	r3, r3, #1
   4c00c:	uxtb	r3, r3
   4c010:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c014:	ldrb	r2, [r1, #26]
   4c018:	and	r3, r3, #1
   4c01c:	bic	r2, r2, #8
   4c020:	lsl	r3, r3, #3
   4c024:	orr	r3, r3, r2
   4c028:	mov	r2, r3
   4c02c:	strb	r2, [r1, #26]
   4c030:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c034:	ldrb	r3, [r3, #26]
   4c038:	lsr	r3, r3, #3
   4c03c:	and	r3, r3, #1
   4c040:	uxtb	r3, r3
   4c044:	ldr	r1, [fp, #-16]
   4c048:	ldrb	r2, [r1, #26]
   4c04c:	and	r3, r3, #1
   4c050:	bic	r2, r2, #8
   4c054:	lsl	r3, r3, #3
   4c058:	orr	r3, r3, r2
   4c05c:	mov	r2, r3
   4c060:	strb	r2, [r1, #26]
   4c064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c068:	mov	r0, r3
   4c06c:	sub	sp, fp, #4
   4c070:	pop	{fp, pc}
   4c074:	push	{fp, lr}
   4c078:	add	fp, sp, #4
   4c07c:	sub	sp, sp, #16
   4c080:	str	r0, [fp, #-16]
   4c084:	str	r1, [fp, #-20]	; 0xffffffec
   4c088:	ldr	r3, [fp, #-16]
   4c08c:	str	r3, [fp, #-8]
   4c090:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c094:	ldrb	r3, [r3, #24]
   4c098:	cmp	r3, #16
   4c09c:	bne	4c0cc <__assert_fail@plt+0x399e0>
   4c0a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0a4:	ldr	r3, [r3, #4]
   4c0a8:	ldr	r2, [r3, #12]
   4c0ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0b0:	str	r2, [r3, #12]
   4c0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0b8:	ldr	r3, [r3, #4]
   4c0bc:	ldr	r2, [r3, #28]
   4c0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0c4:	str	r2, [r3, #28]
   4c0c8:	b	4c180 <__assert_fail@plt+0x39a94>
   4c0cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4c0d4:	str	r2, [r3, #12]
   4c0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0dc:	add	r3, r3, #20
   4c0e0:	ldm	r3, {r1, r2}
   4c0e4:	ldr	r0, [fp, #-8]
   4c0e8:	bl	48344 <__assert_fail@plt+0x35c58>
   4c0ec:	mov	r2, r0
   4c0f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0f4:	str	r2, [r3, #28]
   4c0f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c0fc:	ldr	r3, [r3, #28]
   4c100:	cmn	r3, #1
   4c104:	moveq	r3, #1
   4c108:	movne	r3, #0
   4c10c:	uxtb	r3, r3
   4c110:	cmp	r3, #0
   4c114:	beq	4c120 <__assert_fail@plt+0x39a34>
   4c118:	mov	r3, #12
   4c11c:	b	4c184 <__assert_fail@plt+0x39a98>
   4c120:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c124:	ldrb	r3, [r3, #24]
   4c128:	cmp	r3, #12
   4c12c:	bne	4c180 <__assert_fail@plt+0x39a94>
   4c130:	ldr	r3, [fp, #-8]
   4c134:	ldr	r2, [r3]
   4c138:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c13c:	ldr	r3, [r3, #28]
   4c140:	lsl	r3, r3, #3
   4c144:	add	r0, r2, r3
   4c148:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c14c:	ldr	r3, [r3, #20]
   4c150:	uxth	r3, r3
   4c154:	lsl	r3, r3, #22
   4c158:	lsr	r3, r3, #22
   4c15c:	uxth	r1, r3
   4c160:	ldr	r2, [r0, #4]
   4c164:	ldr	r3, [pc, #36]	; 4c190 <__assert_fail@plt+0x39aa4>
   4c168:	and	r1, r1, r3
   4c16c:	lsl	r3, r3, #8
   4c170:	bic	r3, r2, r3
   4c174:	lsl	r1, r1, #8
   4c178:	orr	r2, r1, r3
   4c17c:	str	r2, [r0, #4]
   4c180:	mov	r3, #0
   4c184:	mov	r0, r3
   4c188:	sub	sp, fp, #4
   4c18c:	pop	{fp, pc}
   4c190:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   4c194:	push	{fp}		; (str fp, [sp, #-4]!)
   4c198:	add	fp, sp, #0
   4c19c:	sub	sp, sp, #12
   4c1a0:	str	r0, [fp, #-8]
   4c1a4:	str	r1, [fp, #-12]
   4c1a8:	ldr	r3, [fp, #-12]
   4c1ac:	ldrb	r3, [r3, #24]
   4c1b0:	cmp	r3, #11
   4c1b4:	beq	4c1c4 <__assert_fail@plt+0x39ad8>
   4c1b8:	cmp	r3, #16
   4c1bc:	beq	4c1d8 <__assert_fail@plt+0x39aec>
   4c1c0:	b	4c208 <__assert_fail@plt+0x39b1c>
   4c1c4:	ldr	r3, [fp, #-12]
   4c1c8:	ldr	r3, [r3, #4]
   4c1cc:	ldr	r2, [fp, #-12]
   4c1d0:	str	r2, [r3, #16]
   4c1d4:	b	4c254 <__assert_fail@plt+0x39b68>
   4c1d8:	ldr	r3, [fp, #-12]
   4c1dc:	ldr	r3, [r3, #4]
   4c1e0:	ldr	r2, [fp, #-12]
   4c1e4:	ldr	r2, [r2, #8]
   4c1e8:	ldr	r2, [r2, #12]
   4c1ec:	str	r2, [r3, #16]
   4c1f0:	ldr	r3, [fp, #-12]
   4c1f4:	ldr	r3, [r3, #8]
   4c1f8:	ldr	r2, [fp, #-12]
   4c1fc:	ldr	r2, [r2, #16]
   4c200:	str	r2, [r3, #16]
   4c204:	b	4c254 <__assert_fail@plt+0x39b68>
   4c208:	ldr	r3, [fp, #-12]
   4c20c:	ldr	r3, [r3, #4]
   4c210:	cmp	r3, #0
   4c214:	beq	4c22c <__assert_fail@plt+0x39b40>
   4c218:	ldr	r3, [fp, #-12]
   4c21c:	ldr	r3, [r3, #4]
   4c220:	ldr	r2, [fp, #-12]
   4c224:	ldr	r2, [r2, #16]
   4c228:	str	r2, [r3, #16]
   4c22c:	ldr	r3, [fp, #-12]
   4c230:	ldr	r3, [r3, #8]
   4c234:	cmp	r3, #0
   4c238:	beq	4c250 <__assert_fail@plt+0x39b64>
   4c23c:	ldr	r3, [fp, #-12]
   4c240:	ldr	r3, [r3, #8]
   4c244:	ldr	r2, [fp, #-12]
   4c248:	ldr	r2, [r2, #16]
   4c24c:	str	r2, [r3, #16]
   4c250:	nop			; (mov r0, r0)
   4c254:	mov	r3, #0
   4c258:	mov	r0, r3
   4c25c:	add	sp, fp, #0
   4c260:	pop	{fp}		; (ldr fp, [sp], #4)
   4c264:	bx	lr
   4c268:	push	{fp, lr}
   4c26c:	add	fp, sp, #4
   4c270:	sub	sp, sp, #32
   4c274:	str	r0, [fp, #-32]	; 0xffffffe0
   4c278:	str	r1, [fp, #-36]	; 0xffffffdc
   4c27c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c280:	str	r3, [fp, #-20]	; 0xffffffec
   4c284:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c288:	ldr	r3, [r3, #28]
   4c28c:	str	r3, [fp, #-24]	; 0xffffffe8
   4c290:	mov	r3, #0
   4c294:	str	r3, [fp, #-8]
   4c298:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c29c:	ldrb	r3, [r3, #24]
   4c2a0:	sub	r3, r3, #2
   4c2a4:	cmp	r3, #14
   4c2a8:	ldrls	pc, [pc, r3, lsl #2]
   4c2ac:	b	4c480 <__assert_fail@plt+0x39d94>
   4c2b0:	andeq	ip, r4, ip, ror #5
   4c2b4:	andeq	ip, r4, r0, lsl #9
   4c2b8:	andeq	ip, r4, r4, lsl #8
   4c2bc:	andeq	ip, r4, r0, lsl #9
   4c2c0:	andeq	ip, r4, r0, lsl #9
   4c2c4:	andeq	ip, r4, r0, lsl #9
   4c2c8:	andeq	ip, r4, r4, asr #7
   4c2cc:	andeq	ip, r4, r4, asr #7
   4c2d0:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   4c2d4:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   4c2d8:	andeq	ip, r4, r4, asr #7
   4c2dc:	andeq	ip, r4, r0, lsl #9
   4c2e0:	andeq	ip, r4, r0, lsl #9
   4c2e4:	andeq	ip, r4, r0, lsl #9
   4c2e8:			; <UNDEFINED> instruction: 0x0004c4b8
   4c2ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c2f0:	ldr	r3, [r3, #16]
   4c2f4:	cmp	r3, #0
   4c2f8:	b	4c4c4 <__assert_fail@plt+0x39dd8>
   4c2fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   4c300:	ldrb	r3, [r2, #88]	; 0x58
   4c304:	orr	r3, r3, #1
   4c308:	strb	r3, [r2, #88]	; 0x58
   4c30c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c310:	ldr	r3, [r3, #4]
   4c314:	cmp	r3, #0
   4c318:	beq	4c334 <__assert_fail@plt+0x39c48>
   4c31c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c320:	ldr	r3, [r3, #4]
   4c324:	ldr	r3, [r3, #12]
   4c328:	ldr	r3, [r3, #28]
   4c32c:	str	r3, [fp, #-12]
   4c330:	b	4c344 <__assert_fail@plt+0x39c58>
   4c334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c338:	ldr	r3, [r3, #16]
   4c33c:	ldr	r3, [r3, #28]
   4c340:	str	r3, [fp, #-12]
   4c344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c348:	ldr	r3, [r3, #8]
   4c34c:	cmp	r3, #0
   4c350:	beq	4c36c <__assert_fail@plt+0x39c80>
   4c354:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c358:	ldr	r3, [r3, #8]
   4c35c:	ldr	r3, [r3, #12]
   4c360:	ldr	r3, [r3, #28]
   4c364:	str	r3, [fp, #-16]
   4c368:	b	4c37c <__assert_fail@plt+0x39c90>
   4c36c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c370:	ldr	r3, [r3, #16]
   4c374:	ldr	r3, [r3, #28]
   4c378:	str	r3, [fp, #-16]
   4c37c:	ldr	r3, [fp, #-12]
   4c380:	cmp	r3, #0
   4c384:	ldr	r3, [fp, #-16]
   4c388:	cmp	r3, #0
   4c38c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c390:	ldr	r1, [r3, #20]
   4c394:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4c398:	mov	r3, r2
   4c39c:	lsl	r3, r3, #1
   4c3a0:	add	r3, r3, r2
   4c3a4:	lsl	r3, r3, #2
   4c3a8:	add	r3, r1, r3
   4c3ac:	ldr	r2, [fp, #-16]
   4c3b0:	ldr	r1, [fp, #-12]
   4c3b4:	mov	r0, r3
   4c3b8:	bl	46f2c <__assert_fail@plt+0x34840>
   4c3bc:	str	r0, [fp, #-8]
   4c3c0:	b	4c4c4 <__assert_fail@plt+0x39dd8>
   4c3c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c3c8:	ldr	r1, [r3, #20]
   4c3cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4c3d0:	mov	r3, r2
   4c3d4:	lsl	r3, r3, #1
   4c3d8:	add	r3, r3, r2
   4c3dc:	lsl	r3, r3, #2
   4c3e0:	add	r2, r1, r3
   4c3e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c3e8:	ldr	r3, [r3, #16]
   4c3ec:	ldr	r3, [r3, #28]
   4c3f0:	mov	r1, r3
   4c3f4:	mov	r0, r2
   4c3f8:	bl	46e84 <__assert_fail@plt+0x34798>
   4c3fc:	str	r0, [fp, #-8]
   4c400:	b	4c4c4 <__assert_fail@plt+0x39dd8>
   4c404:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c408:	ldr	r2, [r3, #12]
   4c40c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c410:	lsl	r3, r3, #2
   4c414:	add	r3, r2, r3
   4c418:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4c41c:	ldr	r2, [r2, #16]
   4c420:	ldr	r2, [r2, #28]
   4c424:	str	r2, [r3]
   4c428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c42c:	ldrb	r3, [r3, #24]
   4c430:	cmp	r3, #4
   4c434:	bne	4c4c0 <__assert_fail@plt+0x39dd4>
   4c438:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c43c:	ldr	r1, [r3, #20]
   4c440:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4c444:	mov	r3, r2
   4c448:	lsl	r3, r3, #1
   4c44c:	add	r3, r3, r2
   4c450:	lsl	r3, r3, #2
   4c454:	add	r0, r1, r3
   4c458:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c45c:	ldr	r2, [r3, #12]
   4c460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c464:	lsl	r3, r3, #2
   4c468:	add	r3, r2, r3
   4c46c:	ldr	r3, [r3]
   4c470:	mov	r1, r3
   4c474:	bl	46e84 <__assert_fail@plt+0x34798>
   4c478:	str	r0, [fp, #-8]
   4c47c:	b	4c4c0 <__assert_fail@plt+0x39dd4>
   4c480:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c484:	ldrb	r3, [r3, #24]
   4c488:	and	r3, r3, #8
   4c48c:	cmp	r3, #0
   4c490:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c494:	ldr	r2, [r3, #12]
   4c498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c49c:	lsl	r3, r3, #2
   4c4a0:	add	r3, r2, r3
   4c4a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4c4a8:	ldr	r2, [r2, #16]
   4c4ac:	ldr	r2, [r2, #28]
   4c4b0:	str	r2, [r3]
   4c4b4:	b	4c4c4 <__assert_fail@plt+0x39dd8>
   4c4b8:	nop			; (mov r0, r0)
   4c4bc:	b	4c4c4 <__assert_fail@plt+0x39dd8>
   4c4c0:	nop			; (mov r0, r0)
   4c4c4:	ldr	r3, [fp, #-8]
   4c4c8:	mov	r0, r3
   4c4cc:	sub	sp, fp, #4
   4c4d0:	pop	{fp, pc}
   4c4d4:	push	{fp, lr}
   4c4d8:	add	fp, sp, #4
   4c4dc:	sub	sp, sp, #56	; 0x38
   4c4e0:	str	r0, [fp, #-40]	; 0xffffffd8
   4c4e4:	str	r1, [fp, #-44]	; 0xffffffd4
   4c4e8:	str	r2, [fp, #-48]	; 0xffffffd0
   4c4ec:	str	r3, [fp, #-52]	; 0xffffffcc
   4c4f0:	ldr	r3, [fp, #4]
   4c4f4:	str	r3, [fp, #-16]
   4c4f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4c4fc:	str	r3, [fp, #-8]
   4c500:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4c504:	str	r3, [fp, #-12]
   4c508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c50c:	ldr	r2, [r3]
   4c510:	ldr	r3, [fp, #-8]
   4c514:	lsl	r3, r3, #3
   4c518:	add	r3, r2, r3
   4c51c:	ldrb	r3, [r3, #4]
   4c520:	cmp	r3, #4
   4c524:	bne	4c624 <__assert_fail@plt+0x39f38>
   4c528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c52c:	ldr	r2, [r3, #12]
   4c530:	ldr	r3, [fp, #-8]
   4c534:	lsl	r3, r3, #2
   4c538:	add	r3, r2, r3
   4c53c:	ldr	r3, [r3]
   4c540:	str	r3, [fp, #-20]	; 0xffffffec
   4c544:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c548:	ldr	r1, [r3, #20]
   4c54c:	ldr	r2, [fp, #-12]
   4c550:	mov	r3, r2
   4c554:	lsl	r3, r3, #1
   4c558:	add	r3, r3, r2
   4c55c:	lsl	r3, r3, #2
   4c560:	add	r3, r1, r3
   4c564:	mov	r2, #0
   4c568:	str	r2, [r3, #4]
   4c56c:	ldr	r2, [fp, #-16]
   4c570:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c574:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c578:	bl	4cb84 <__assert_fail@plt+0x3a498>
   4c57c:	str	r0, [fp, #-24]	; 0xffffffe8
   4c580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c584:	cmn	r3, #1
   4c588:	moveq	r3, #1
   4c58c:	movne	r3, #0
   4c590:	uxtb	r3, r3
   4c594:	cmp	r3, #0
   4c598:	beq	4c5a4 <__assert_fail@plt+0x39eb8>
   4c59c:	mov	r3, #12
   4c5a0:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c5a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c5a8:	ldr	r2, [r3, #12]
   4c5ac:	ldr	r3, [fp, #-12]
   4c5b0:	lsl	r3, r3, #2
   4c5b4:	add	r3, r2, r3
   4c5b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4c5bc:	ldr	r1, [r2, #12]
   4c5c0:	ldr	r2, [fp, #-8]
   4c5c4:	lsl	r2, r2, #2
   4c5c8:	add	r2, r1, r2
   4c5cc:	ldr	r2, [r2]
   4c5d0:	str	r2, [r3]
   4c5d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c5d8:	ldr	r1, [r3, #20]
   4c5dc:	ldr	r2, [fp, #-12]
   4c5e0:	mov	r3, r2
   4c5e4:	lsl	r3, r3, #1
   4c5e8:	add	r3, r3, r2
   4c5ec:	lsl	r3, r3, #2
   4c5f0:	add	r3, r1, r3
   4c5f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c5f8:	mov	r0, r3
   4c5fc:	bl	47d94 <__assert_fail@plt+0x356a8>
   4c600:	mov	r3, r0
   4c604:	strb	r3, [fp, #-25]	; 0xffffffe7
   4c608:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4c60c:	eor	r3, r3, #1
   4c610:	uxtb	r3, r3
   4c614:	cmp	r3, #0
   4c618:	beq	4ca78 <__assert_fail@plt+0x3a38c>
   4c61c:	mov	r3, #12
   4c620:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c624:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c628:	ldr	r1, [r3, #20]
   4c62c:	ldr	r2, [fp, #-8]
   4c630:	mov	r3, r2
   4c634:	lsl	r3, r3, #1
   4c638:	add	r3, r3, r2
   4c63c:	lsl	r3, r3, #2
   4c640:	add	r3, r1, r3
   4c644:	ldr	r3, [r3, #4]
   4c648:	cmp	r3, #0
   4c64c:	bne	4c684 <__assert_fail@plt+0x39f98>
   4c650:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c654:	ldr	r2, [r3, #12]
   4c658:	ldr	r3, [fp, #-12]
   4c65c:	lsl	r3, r3, #2
   4c660:	add	r3, r2, r3
   4c664:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4c668:	ldr	r1, [r2, #12]
   4c66c:	ldr	r2, [fp, #-8]
   4c670:	lsl	r2, r2, #2
   4c674:	add	r2, r1, r2
   4c678:	ldr	r2, [r2]
   4c67c:	str	r2, [r3]
   4c680:	b	4ca90 <__assert_fail@plt+0x3a3a4>
   4c684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c688:	ldr	r1, [r3, #20]
   4c68c:	ldr	r2, [fp, #-8]
   4c690:	mov	r3, r2
   4c694:	lsl	r3, r3, #1
   4c698:	add	r3, r3, r2
   4c69c:	lsl	r3, r3, #2
   4c6a0:	add	r3, r1, r3
   4c6a4:	ldr	r3, [r3, #4]
   4c6a8:	cmp	r3, #1
   4c6ac:	bne	4c834 <__assert_fail@plt+0x3a148>
   4c6b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c6b4:	ldr	r1, [r3, #20]
   4c6b8:	ldr	r2, [fp, #-8]
   4c6bc:	mov	r3, r2
   4c6c0:	lsl	r3, r3, #1
   4c6c4:	add	r3, r3, r2
   4c6c8:	lsl	r3, r3, #2
   4c6cc:	add	r3, r1, r3
   4c6d0:	ldr	r3, [r3, #8]
   4c6d4:	ldr	r3, [r3]
   4c6d8:	str	r3, [fp, #-20]	; 0xffffffec
   4c6dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c6e0:	ldr	r1, [r3, #20]
   4c6e4:	ldr	r2, [fp, #-12]
   4c6e8:	mov	r3, r2
   4c6ec:	lsl	r3, r3, #1
   4c6f0:	add	r3, r3, r2
   4c6f4:	lsl	r3, r3, #2
   4c6f8:	add	r3, r1, r3
   4c6fc:	mov	r2, #0
   4c700:	str	r2, [r3, #4]
   4c704:	ldr	r2, [fp, #-8]
   4c708:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4c70c:	cmp	r2, r3
   4c710:	bne	4c774 <__assert_fail@plt+0x3a088>
   4c714:	ldr	r2, [fp, #-12]
   4c718:	ldr	r3, [fp, #-8]
   4c71c:	cmp	r2, r3
   4c720:	beq	4c774 <__assert_fail@plt+0x3a088>
   4c724:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c728:	ldr	r1, [r3, #20]
   4c72c:	ldr	r2, [fp, #-12]
   4c730:	mov	r3, r2
   4c734:	lsl	r3, r3, #1
   4c738:	add	r3, r3, r2
   4c73c:	lsl	r3, r3, #2
   4c740:	add	r3, r1, r3
   4c744:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c748:	mov	r0, r3
   4c74c:	bl	47d94 <__assert_fail@plt+0x356a8>
   4c750:	mov	r3, r0
   4c754:	strb	r3, [fp, #-25]	; 0xffffffe7
   4c758:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4c75c:	eor	r3, r3, #1
   4c760:	uxtb	r3, r3
   4c764:	cmp	r3, #0
   4c768:	beq	4ca8c <__assert_fail@plt+0x3a3a0>
   4c76c:	mov	r3, #12
   4c770:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c778:	ldr	r2, [r3]
   4c77c:	ldr	r3, [fp, #-8]
   4c780:	lsl	r3, r3, #3
   4c784:	add	r3, r2, r3
   4c788:	ldr	r3, [r3, #4]
   4c78c:	lsr	r3, r3, #8
   4c790:	lsl	r3, r3, #22
   4c794:	lsr	r3, r3, #22
   4c798:	uxth	r3, r3
   4c79c:	mov	r2, r3
   4c7a0:	ldr	r3, [fp, #-16]
   4c7a4:	orr	r3, r3, r2
   4c7a8:	str	r3, [fp, #-16]
   4c7ac:	ldr	r2, [fp, #-16]
   4c7b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c7b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c7b8:	bl	4cb84 <__assert_fail@plt+0x3a498>
   4c7bc:	str	r0, [fp, #-24]	; 0xffffffe8
   4c7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c7c4:	cmn	r3, #1
   4c7c8:	moveq	r3, #1
   4c7cc:	movne	r3, #0
   4c7d0:	uxtb	r3, r3
   4c7d4:	cmp	r3, #0
   4c7d8:	beq	4c7e4 <__assert_fail@plt+0x3a0f8>
   4c7dc:	mov	r3, #12
   4c7e0:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c7e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c7e8:	ldr	r1, [r3, #20]
   4c7ec:	ldr	r2, [fp, #-12]
   4c7f0:	mov	r3, r2
   4c7f4:	lsl	r3, r3, #1
   4c7f8:	add	r3, r3, r2
   4c7fc:	lsl	r3, r3, #2
   4c800:	add	r3, r1, r3
   4c804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c808:	mov	r0, r3
   4c80c:	bl	47d94 <__assert_fail@plt+0x356a8>
   4c810:	mov	r3, r0
   4c814:	strb	r3, [fp, #-25]	; 0xffffffe7
   4c818:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4c81c:	eor	r3, r3, #1
   4c820:	uxtb	r3, r3
   4c824:	cmp	r3, #0
   4c828:	beq	4ca78 <__assert_fail@plt+0x3a38c>
   4c82c:	mov	r3, #12
   4c830:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c834:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c838:	ldr	r1, [r3, #20]
   4c83c:	ldr	r2, [fp, #-8]
   4c840:	mov	r3, r2
   4c844:	lsl	r3, r3, #1
   4c848:	add	r3, r3, r2
   4c84c:	lsl	r3, r3, #2
   4c850:	add	r3, r1, r3
   4c854:	ldr	r3, [r3, #8]
   4c858:	ldr	r3, [r3]
   4c85c:	str	r3, [fp, #-20]	; 0xffffffec
   4c860:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c864:	ldr	r1, [r3, #20]
   4c868:	ldr	r2, [fp, #-12]
   4c86c:	mov	r3, r2
   4c870:	lsl	r3, r3, #1
   4c874:	add	r3, r3, r2
   4c878:	lsl	r3, r3, #2
   4c87c:	add	r3, r1, r3
   4c880:	mov	r2, #0
   4c884:	str	r2, [r3, #4]
   4c888:	ldr	r2, [fp, #-16]
   4c88c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c890:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c894:	bl	4caa0 <__assert_fail@plt+0x3a3b4>
   4c898:	str	r0, [fp, #-24]	; 0xffffffe8
   4c89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c8a0:	cmn	r3, #1
   4c8a4:	bne	4c974 <__assert_fail@plt+0x3a288>
   4c8a8:	ldr	r2, [fp, #-16]
   4c8ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c8b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c8b4:	bl	4cb84 <__assert_fail@plt+0x3a498>
   4c8b8:	str	r0, [fp, #-24]	; 0xffffffe8
   4c8bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c8c0:	cmn	r3, #1
   4c8c4:	moveq	r3, #1
   4c8c8:	movne	r3, #0
   4c8cc:	uxtb	r3, r3
   4c8d0:	cmp	r3, #0
   4c8d4:	beq	4c8e0 <__assert_fail@plt+0x3a1f4>
   4c8d8:	mov	r3, #12
   4c8dc:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c8e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c8e4:	ldr	r1, [r3, #20]
   4c8e8:	ldr	r2, [fp, #-12]
   4c8ec:	mov	r3, r2
   4c8f0:	lsl	r3, r3, #1
   4c8f4:	add	r3, r3, r2
   4c8f8:	lsl	r3, r3, #2
   4c8fc:	add	r3, r1, r3
   4c900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c904:	mov	r0, r3
   4c908:	bl	47d94 <__assert_fail@plt+0x356a8>
   4c90c:	mov	r3, r0
   4c910:	strb	r3, [fp, #-25]	; 0xffffffe7
   4c914:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4c918:	eor	r3, r3, #1
   4c91c:	uxtb	r3, r3
   4c920:	cmp	r3, #0
   4c924:	beq	4c930 <__assert_fail@plt+0x3a244>
   4c928:	mov	r3, #12
   4c92c:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c930:	ldr	r3, [fp, #-16]
   4c934:	str	r3, [sp]
   4c938:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4c93c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4c940:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c944:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c948:	bl	4c4d4 <__assert_fail@plt+0x39de8>
   4c94c:	str	r0, [fp, #-32]	; 0xffffffe0
   4c950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c954:	cmp	r3, #0
   4c958:	movne	r3, #1
   4c95c:	moveq	r3, #0
   4c960:	uxtb	r3, r3
   4c964:	cmp	r3, #0
   4c968:	beq	4c9c4 <__assert_fail@plt+0x3a2d8>
   4c96c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c970:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c978:	ldr	r1, [r3, #20]
   4c97c:	ldr	r2, [fp, #-12]
   4c980:	mov	r3, r2
   4c984:	lsl	r3, r3, #1
   4c988:	add	r3, r3, r2
   4c98c:	lsl	r3, r3, #2
   4c990:	add	r3, r1, r3
   4c994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c998:	mov	r0, r3
   4c99c:	bl	47d94 <__assert_fail@plt+0x356a8>
   4c9a0:	mov	r3, r0
   4c9a4:	strb	r3, [fp, #-25]	; 0xffffffe7
   4c9a8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4c9ac:	eor	r3, r3, #1
   4c9b0:	uxtb	r3, r3
   4c9b4:	cmp	r3, #0
   4c9b8:	beq	4c9c4 <__assert_fail@plt+0x3a2d8>
   4c9bc:	mov	r3, #12
   4c9c0:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4c9c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c9c8:	ldr	r1, [r3, #20]
   4c9cc:	ldr	r2, [fp, #-8]
   4c9d0:	mov	r3, r2
   4c9d4:	lsl	r3, r3, #1
   4c9d8:	add	r3, r3, r2
   4c9dc:	lsl	r3, r3, #2
   4c9e0:	add	r3, r1, r3
   4c9e4:	ldr	r3, [r3, #8]
   4c9e8:	ldr	r3, [r3, #4]
   4c9ec:	str	r3, [fp, #-20]	; 0xffffffec
   4c9f0:	ldr	r2, [fp, #-16]
   4c9f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c9f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c9fc:	bl	4cb84 <__assert_fail@plt+0x3a498>
   4ca00:	str	r0, [fp, #-24]	; 0xffffffe8
   4ca04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ca08:	cmn	r3, #1
   4ca0c:	moveq	r3, #1
   4ca10:	movne	r3, #0
   4ca14:	uxtb	r3, r3
   4ca18:	cmp	r3, #0
   4ca1c:	beq	4ca28 <__assert_fail@plt+0x3a33c>
   4ca20:	mov	r3, #12
   4ca24:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4ca28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ca2c:	ldr	r1, [r3, #20]
   4ca30:	ldr	r2, [fp, #-12]
   4ca34:	mov	r3, r2
   4ca38:	lsl	r3, r3, #1
   4ca3c:	add	r3, r3, r2
   4ca40:	lsl	r3, r3, #2
   4ca44:	add	r3, r1, r3
   4ca48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ca4c:	mov	r0, r3
   4ca50:	bl	47d94 <__assert_fail@plt+0x356a8>
   4ca54:	mov	r3, r0
   4ca58:	strb	r3, [fp, #-25]	; 0xffffffe7
   4ca5c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4ca60:	eor	r3, r3, #1
   4ca64:	uxtb	r3, r3
   4ca68:	cmp	r3, #0
   4ca6c:	beq	4ca78 <__assert_fail@plt+0x3a38c>
   4ca70:	mov	r3, #12
   4ca74:	b	4ca94 <__assert_fail@plt+0x3a3a8>
   4ca78:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ca7c:	str	r3, [fp, #-8]
   4ca80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ca84:	str	r3, [fp, #-12]
   4ca88:	b	4c508 <__assert_fail@plt+0x39e1c>
   4ca8c:	nop			; (mov r0, r0)
   4ca90:	mov	r3, #0
   4ca94:	mov	r0, r3
   4ca98:	sub	sp, fp, #4
   4ca9c:	pop	{fp, pc}
   4caa0:	push	{fp}		; (str fp, [sp, #-4]!)
   4caa4:	add	fp, sp, #0
   4caa8:	sub	sp, sp, #28
   4caac:	str	r0, [fp, #-16]
   4cab0:	str	r1, [fp, #-20]	; 0xffffffec
   4cab4:	str	r2, [fp, #-24]	; 0xffffffe8
   4cab8:	ldr	r3, [fp, #-16]
   4cabc:	ldr	r3, [r3, #8]
   4cac0:	sub	r3, r3, #1
   4cac4:	str	r3, [fp, #-8]
   4cac8:	b	4cb3c <__assert_fail@plt+0x3a450>
   4cacc:	ldr	r3, [fp, #-16]
   4cad0:	ldr	r2, [r3, #16]
   4cad4:	ldr	r3, [fp, #-8]
   4cad8:	lsl	r3, r3, #2
   4cadc:	add	r3, r2, r3
   4cae0:	ldr	r2, [r3]
   4cae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cae8:	cmp	r2, r3
   4caec:	bne	4cb30 <__assert_fail@plt+0x3a444>
   4caf0:	ldr	r3, [fp, #-16]
   4caf4:	ldr	r2, [r3]
   4caf8:	ldr	r3, [fp, #-8]
   4cafc:	lsl	r3, r3, #3
   4cb00:	add	r3, r2, r3
   4cb04:	ldr	r3, [r3, #4]
   4cb08:	lsr	r3, r3, #8
   4cb0c:	lsl	r3, r3, #22
   4cb10:	lsr	r3, r3, #22
   4cb14:	uxth	r3, r3
   4cb18:	mov	r2, r3
   4cb1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cb20:	cmp	r2, r3
   4cb24:	bne	4cb30 <__assert_fail@plt+0x3a444>
   4cb28:	ldr	r3, [fp, #-8]
   4cb2c:	b	4cb74 <__assert_fail@plt+0x3a488>
   4cb30:	ldr	r3, [fp, #-8]
   4cb34:	sub	r3, r3, #1
   4cb38:	str	r3, [fp, #-8]
   4cb3c:	ldr	r3, [fp, #-16]
   4cb40:	ldr	r2, [r3]
   4cb44:	ldr	r3, [fp, #-8]
   4cb48:	lsl	r3, r3, #3
   4cb4c:	add	r3, r2, r3
   4cb50:	ldrb	r3, [r3, #6]
   4cb54:	and	r3, r3, #4
   4cb58:	uxtb	r3, r3
   4cb5c:	cmp	r3, #0
   4cb60:	beq	4cb70 <__assert_fail@plt+0x3a484>
   4cb64:	ldr	r3, [fp, #-8]
   4cb68:	cmp	r3, #0
   4cb6c:	bgt	4cacc <__assert_fail@plt+0x3a3e0>
   4cb70:	mvn	r3, #0
   4cb74:	mov	r0, r3
   4cb78:	add	sp, fp, #0
   4cb7c:	pop	{fp}		; (ldr fp, [sp], #4)
   4cb80:	bx	lr
   4cb84:	push	{fp, lr}
   4cb88:	add	fp, sp, #4
   4cb8c:	sub	sp, sp, #24
   4cb90:	str	r0, [fp, #-16]
   4cb94:	str	r1, [fp, #-20]	; 0xffffffec
   4cb98:	str	r2, [fp, #-24]	; 0xffffffe8
   4cb9c:	ldr	r3, [fp, #-16]
   4cba0:	ldr	r2, [r3]
   4cba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cba8:	lsl	r3, r3, #3
   4cbac:	add	r3, r2, r3
   4cbb0:	ldm	r3, {r1, r2}
   4cbb4:	ldr	r0, [fp, #-16]
   4cbb8:	bl	48344 <__assert_fail@plt+0x35c58>
   4cbbc:	str	r0, [fp, #-8]
   4cbc0:	ldr	r3, [fp, #-8]
   4cbc4:	cmn	r3, #1
   4cbc8:	movne	r3, #1
   4cbcc:	moveq	r3, #0
   4cbd0:	uxtb	r3, r3
   4cbd4:	cmp	r3, #0
   4cbd8:	beq	4ccec <__assert_fail@plt+0x3a600>
   4cbdc:	ldr	r3, [fp, #-16]
   4cbe0:	ldr	r2, [r3]
   4cbe4:	ldr	r3, [fp, #-8]
   4cbe8:	lsl	r3, r3, #3
   4cbec:	add	r0, r2, r3
   4cbf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cbf4:	uxth	r3, r3
   4cbf8:	lsl	r3, r3, #22
   4cbfc:	lsr	r3, r3, #22
   4cc00:	uxth	r1, r3
   4cc04:	ldr	r2, [r0, #4]
   4cc08:	ldr	r3, [pc, #236]	; 4ccfc <__assert_fail@plt+0x3a610>
   4cc0c:	and	r1, r1, r3
   4cc10:	lsl	r3, r3, #8
   4cc14:	bic	r3, r2, r3
   4cc18:	lsl	r1, r1, #8
   4cc1c:	orr	r2, r1, r3
   4cc20:	str	r2, [r0, #4]
   4cc24:	ldr	r3, [fp, #-16]
   4cc28:	ldr	r2, [r3]
   4cc2c:	ldr	r3, [fp, #-8]
   4cc30:	lsl	r3, r3, #3
   4cc34:	add	r0, r2, r3
   4cc38:	ldr	r3, [fp, #-16]
   4cc3c:	ldr	r2, [r3]
   4cc40:	ldr	r3, [fp, #-8]
   4cc44:	lsl	r3, r3, #3
   4cc48:	add	r3, r2, r3
   4cc4c:	ldr	r3, [r3, #4]
   4cc50:	lsr	r3, r3, #8
   4cc54:	lsl	r3, r3, #22
   4cc58:	lsr	r3, r3, #22
   4cc5c:	uxth	r2, r3
   4cc60:	ldr	r3, [fp, #-16]
   4cc64:	ldr	r1, [r3]
   4cc68:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cc6c:	lsl	r3, r3, #3
   4cc70:	add	r3, r1, r3
   4cc74:	ldr	r3, [r3, #4]
   4cc78:	lsr	r3, r3, #8
   4cc7c:	lsl	r3, r3, #22
   4cc80:	lsr	r3, r3, #22
   4cc84:	uxth	r3, r3
   4cc88:	orr	r3, r2, r3
   4cc8c:	uxth	r1, r3
   4cc90:	ldr	r2, [r0, #4]
   4cc94:	ldr	r3, [pc, #96]	; 4ccfc <__assert_fail@plt+0x3a610>
   4cc98:	and	r1, r1, r3
   4cc9c:	lsl	r3, r3, #8
   4cca0:	bic	r3, r2, r3
   4cca4:	lsl	r1, r1, #8
   4cca8:	orr	r2, r1, r3
   4ccac:	str	r2, [r0, #4]
   4ccb0:	ldr	r3, [fp, #-16]
   4ccb4:	ldr	r2, [r3]
   4ccb8:	ldr	r3, [fp, #-8]
   4ccbc:	lsl	r3, r3, #3
   4ccc0:	add	r2, r2, r3
   4ccc4:	ldrb	r3, [r2, #6]
   4ccc8:	orr	r3, r3, #4
   4cccc:	strb	r3, [r2, #6]
   4ccd0:	ldr	r3, [fp, #-16]
   4ccd4:	ldr	r2, [r3, #16]
   4ccd8:	ldr	r3, [fp, #-8]
   4ccdc:	lsl	r3, r3, #2
   4cce0:	add	r3, r2, r3
   4cce4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4cce8:	str	r2, [r3]
   4ccec:	ldr	r3, [fp, #-8]
   4ccf0:	mov	r0, r3
   4ccf4:	sub	sp, fp, #4
   4ccf8:	pop	{fp, pc}
   4ccfc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   4cd00:	push	{fp, lr}
   4cd04:	add	fp, sp, #4
   4cd08:	sub	sp, sp, #24
   4cd0c:	str	r0, [fp, #-24]	; 0xffffffe8
   4cd10:	mov	r3, #0
   4cd14:	str	r3, [fp, #-12]
   4cd18:	b	4cd58 <__assert_fail@plt+0x3a66c>
   4cd1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cd20:	ldr	r1, [r3, #28]
   4cd24:	ldr	r2, [fp, #-12]
   4cd28:	mov	r3, r2
   4cd2c:	lsl	r3, r3, #1
   4cd30:	add	r3, r3, r2
   4cd34:	lsl	r3, r3, #2
   4cd38:	add	r3, r1, r3
   4cd3c:	mov	r2, #12
   4cd40:	mov	r1, #0
   4cd44:	mov	r0, r3
   4cd48:	bl	12434 <memset@plt>
   4cd4c:	ldr	r3, [fp, #-12]
   4cd50:	add	r3, r3, #1
   4cd54:	str	r3, [fp, #-12]
   4cd58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cd5c:	ldr	r2, [r3, #8]
   4cd60:	ldr	r3, [fp, #-12]
   4cd64:	cmp	r2, r3
   4cd68:	bhi	4cd1c <__assert_fail@plt+0x3a630>
   4cd6c:	mov	r3, #0
   4cd70:	str	r3, [fp, #-8]
   4cd74:	b	4ce58 <__assert_fail@plt+0x3a76c>
   4cd78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cd7c:	ldr	r1, [r3, #24]
   4cd80:	ldr	r2, [fp, #-8]
   4cd84:	mov	r3, r2
   4cd88:	lsl	r3, r3, #1
   4cd8c:	add	r3, r3, r2
   4cd90:	lsl	r3, r3, #2
   4cd94:	add	r3, r1, r3
   4cd98:	ldr	r3, [r3, #8]
   4cd9c:	str	r3, [fp, #-16]
   4cda0:	mov	r3, #0
   4cda4:	str	r3, [fp, #-12]
   4cda8:	b	4ce1c <__assert_fail@plt+0x3a730>
   4cdac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cdb0:	ldr	r2, [r3, #28]
   4cdb4:	ldr	r3, [fp, #-12]
   4cdb8:	lsl	r3, r3, #2
   4cdbc:	ldr	r1, [fp, #-16]
   4cdc0:	add	r3, r1, r3
   4cdc4:	ldr	r3, [r3]
   4cdc8:	mov	r1, r3
   4cdcc:	mov	r3, r1
   4cdd0:	lsl	r3, r3, #1
   4cdd4:	add	r3, r3, r1
   4cdd8:	lsl	r3, r3, #2
   4cddc:	add	r3, r2, r3
   4cde0:	ldr	r1, [fp, #-8]
   4cde4:	mov	r0, r3
   4cde8:	bl	48008 <__assert_fail@plt+0x3591c>
   4cdec:	mov	r3, r0
   4cdf0:	strb	r3, [fp, #-17]	; 0xffffffef
   4cdf4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   4cdf8:	eor	r3, r3, #1
   4cdfc:	uxtb	r3, r3
   4ce00:	cmp	r3, #0
   4ce04:	beq	4ce10 <__assert_fail@plt+0x3a724>
   4ce08:	mov	r3, #12
   4ce0c:	b	4ce70 <__assert_fail@plt+0x3a784>
   4ce10:	ldr	r3, [fp, #-12]
   4ce14:	add	r3, r3, #1
   4ce18:	str	r3, [fp, #-12]
   4ce1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ce20:	ldr	r1, [r3, #24]
   4ce24:	ldr	r2, [fp, #-8]
   4ce28:	mov	r3, r2
   4ce2c:	lsl	r3, r3, #1
   4ce30:	add	r3, r3, r2
   4ce34:	lsl	r3, r3, #2
   4ce38:	add	r3, r1, r3
   4ce3c:	ldr	r2, [r3, #4]
   4ce40:	ldr	r3, [fp, #-12]
   4ce44:	cmp	r2, r3
   4ce48:	bgt	4cdac <__assert_fail@plt+0x3a6c0>
   4ce4c:	ldr	r3, [fp, #-8]
   4ce50:	add	r3, r3, #1
   4ce54:	str	r3, [fp, #-8]
   4ce58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ce5c:	ldr	r2, [r3, #8]
   4ce60:	ldr	r3, [fp, #-8]
   4ce64:	cmp	r2, r3
   4ce68:	bhi	4cd78 <__assert_fail@plt+0x3a68c>
   4ce6c:	mov	r3, #0
   4ce70:	mov	r0, r3
   4ce74:	sub	sp, fp, #4
   4ce78:	pop	{fp, pc}
   4ce7c:	push	{fp, lr}
   4ce80:	add	fp, sp, #4
   4ce84:	sub	sp, sp, #32
   4ce88:	str	r0, [fp, #-32]	; 0xffffffe0
   4ce8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ce90:	ldr	r3, [r3, #8]
   4ce94:	cmp	r3, #0
   4ce98:	mov	r3, #0
   4ce9c:	strb	r3, [fp, #-9]
   4cea0:	mov	r3, #0
   4cea4:	str	r3, [fp, #-8]
   4cea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ceac:	ldr	r2, [r3, #8]
   4ceb0:	ldr	r3, [fp, #-8]
   4ceb4:	cmp	r2, r3
   4ceb8:	bne	4cee8 <__assert_fail@plt+0x3a7fc>
   4cebc:	ldrb	r3, [fp, #-9]
   4cec0:	eor	r3, r3, #1
   4cec4:	uxtb	r3, r3
   4cec8:	cmp	r3, #0
   4cecc:	beq	4ced8 <__assert_fail@plt+0x3a7ec>
   4ced0:	mov	r3, #0
   4ced4:	b	4cfd0 <__assert_fail@plt+0x3a8e4>
   4ced8:	mov	r3, #0
   4cedc:	strb	r3, [fp, #-9]
   4cee0:	mov	r3, #0
   4cee4:	str	r3, [fp, #-8]
   4cee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ceec:	ldr	r1, [r3, #24]
   4cef0:	ldr	r2, [fp, #-8]
   4cef4:	mov	r3, r2
   4cef8:	lsl	r3, r3, #1
   4cefc:	add	r3, r3, r2
   4cf00:	lsl	r3, r3, #2
   4cf04:	add	r3, r1, r3
   4cf08:	ldr	r3, [r3, #4]
   4cf0c:	cmn	r3, #1
   4cf10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4cf14:	ldr	r1, [r3, #24]
   4cf18:	ldr	r2, [fp, #-8]
   4cf1c:	mov	r3, r2
   4cf20:	lsl	r3, r3, #1
   4cf24:	add	r3, r3, r2
   4cf28:	lsl	r3, r3, #2
   4cf2c:	add	r3, r1, r3
   4cf30:	ldr	r3, [r3, #4]
   4cf34:	cmp	r3, #0
   4cf38:	bne	4cfbc <__assert_fail@plt+0x3a8d0>
   4cf3c:	sub	r0, fp, #28
   4cf40:	mov	r3, #1
   4cf44:	ldr	r2, [fp, #-8]
   4cf48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4cf4c:	bl	4cfdc <__assert_fail@plt+0x3a8f0>
   4cf50:	str	r0, [fp, #-16]
   4cf54:	ldr	r3, [fp, #-16]
   4cf58:	cmp	r3, #0
   4cf5c:	movne	r3, #1
   4cf60:	moveq	r3, #0
   4cf64:	uxtb	r3, r3
   4cf68:	cmp	r3, #0
   4cf6c:	beq	4cf78 <__assert_fail@plt+0x3a88c>
   4cf70:	ldr	r3, [fp, #-16]
   4cf74:	b	4cfd0 <__assert_fail@plt+0x3a8e4>
   4cf78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4cf7c:	ldr	r1, [r3, #24]
   4cf80:	ldr	r2, [fp, #-8]
   4cf84:	mov	r3, r2
   4cf88:	lsl	r3, r3, #1
   4cf8c:	add	r3, r3, r2
   4cf90:	lsl	r3, r3, #2
   4cf94:	add	r3, r1, r3
   4cf98:	ldr	r3, [r3, #4]
   4cf9c:	cmp	r3, #0
   4cfa0:	bne	4cfc0 <__assert_fail@plt+0x3a8d4>
   4cfa4:	mov	r3, #1
   4cfa8:	strb	r3, [fp, #-9]
   4cfac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cfb0:	mov	r0, r3
   4cfb4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4cfb8:	b	4cfc0 <__assert_fail@plt+0x3a8d4>
   4cfbc:	nop			; (mov r0, r0)
   4cfc0:	ldr	r3, [fp, #-8]
   4cfc4:	add	r3, r3, #1
   4cfc8:	str	r3, [fp, #-8]
   4cfcc:	b	4cea8 <__assert_fail@plt+0x3a7bc>
   4cfd0:	mov	r0, r3
   4cfd4:	sub	sp, fp, #4
   4cfd8:	pop	{fp, pc}
   4cfdc:	push	{fp, lr}
   4cfe0:	add	fp, sp, #4
   4cfe4:	sub	sp, sp, #64	; 0x40
   4cfe8:	str	r0, [fp, #-48]	; 0xffffffd0
   4cfec:	str	r1, [fp, #-52]	; 0xffffffcc
   4cff0:	str	r2, [fp, #-56]	; 0xffffffc8
   4cff4:	strb	r3, [fp, #-57]	; 0xffffffc7
   4cff8:	mov	r3, #0
   4cffc:	strb	r3, [fp, #-9]
   4d000:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d004:	ldr	r1, [r3, #20]
   4d008:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d00c:	mov	r3, r2
   4d010:	lsl	r3, r3, #1
   4d014:	add	r3, r3, r2
   4d018:	lsl	r3, r3, #2
   4d01c:	add	r3, r1, r3
   4d020:	ldr	r3, [r3, #4]
   4d024:	add	r2, r3, #1
   4d028:	sub	r3, fp, #32
   4d02c:	mov	r1, r2
   4d030:	mov	r0, r3
   4d034:	bl	46e00 <__assert_fail@plt+0x34714>
   4d038:	str	r0, [fp, #-16]
   4d03c:	ldr	r3, [fp, #-16]
   4d040:	cmp	r3, #0
   4d044:	movne	r3, #1
   4d048:	moveq	r3, #0
   4d04c:	uxtb	r3, r3
   4d050:	cmp	r3, #0
   4d054:	beq	4d060 <__assert_fail@plt+0x3a974>
   4d058:	ldr	r3, [fp, #-16]
   4d05c:	b	4d430 <__assert_fail@plt+0x3ad44>
   4d060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4d064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4d068:	add	r1, r3, #1
   4d06c:	str	r1, [fp, #-28]	; 0xffffffe4
   4d070:	lsl	r3, r3, #2
   4d074:	add	r3, r2, r3
   4d078:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d07c:	str	r2, [r3]
   4d080:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d084:	ldr	r1, [r3, #24]
   4d088:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d08c:	mov	r3, r2
   4d090:	lsl	r3, r3, #1
   4d094:	add	r3, r3, r2
   4d098:	lsl	r3, r3, #2
   4d09c:	add	r3, r1, r3
   4d0a0:	mvn	r2, #0
   4d0a4:	str	r2, [r3, #4]
   4d0a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d0ac:	ldr	r2, [r3]
   4d0b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4d0b4:	lsl	r3, r3, #3
   4d0b8:	add	r3, r2, r3
   4d0bc:	ldr	r2, [r3, #4]
   4d0c0:	ldr	r3, [pc, #884]	; 4d43c <__assert_fail@plt+0x3ad50>
   4d0c4:	and	r3, r3, r2
   4d0c8:	cmp	r3, #0
   4d0cc:	beq	4d1b0 <__assert_fail@plt+0x3aac4>
   4d0d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d0d4:	ldr	r1, [r3, #20]
   4d0d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d0dc:	mov	r3, r2
   4d0e0:	lsl	r3, r3, #1
   4d0e4:	add	r3, r3, r2
   4d0e8:	lsl	r3, r3, #2
   4d0ec:	add	r3, r1, r3
   4d0f0:	ldr	r3, [r3, #4]
   4d0f4:	cmp	r3, #0
   4d0f8:	beq	4d1b0 <__assert_fail@plt+0x3aac4>
   4d0fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d100:	ldr	r1, [r3]
   4d104:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d108:	ldr	r0, [r3, #20]
   4d10c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d110:	mov	r3, r2
   4d114:	lsl	r3, r3, #1
   4d118:	add	r3, r3, r2
   4d11c:	lsl	r3, r3, #2
   4d120:	add	r3, r0, r3
   4d124:	ldr	r3, [r3, #8]
   4d128:	ldr	r3, [r3]
   4d12c:	lsl	r3, r3, #3
   4d130:	add	r3, r1, r3
   4d134:	ldrb	r3, [r3, #6]
   4d138:	and	r3, r3, #4
   4d13c:	uxtb	r3, r3
   4d140:	cmp	r3, #0
   4d144:	bne	4d1b0 <__assert_fail@plt+0x3aac4>
   4d148:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d14c:	ldr	r2, [r3]
   4d150:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4d154:	lsl	r3, r3, #3
   4d158:	add	r3, r2, r3
   4d15c:	ldr	r3, [r3, #4]
   4d160:	lsr	r3, r3, #8
   4d164:	lsl	r3, r3, #22
   4d168:	lsr	r3, r3, #22
   4d16c:	uxth	r3, r3
   4d170:	str	r3, [sp]
   4d174:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4d178:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d17c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4d180:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4d184:	bl	4c4d4 <__assert_fail@plt+0x39de8>
   4d188:	str	r0, [fp, #-16]
   4d18c:	ldr	r3, [fp, #-16]
   4d190:	cmp	r3, #0
   4d194:	movne	r3, #1
   4d198:	moveq	r3, #0
   4d19c:	uxtb	r3, r3
   4d1a0:	cmp	r3, #0
   4d1a4:	beq	4d1b0 <__assert_fail@plt+0x3aac4>
   4d1a8:	ldr	r3, [fp, #-16]
   4d1ac:	b	4d430 <__assert_fail@plt+0x3ad44>
   4d1b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d1b4:	ldr	r2, [r3]
   4d1b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4d1bc:	lsl	r3, r3, #3
   4d1c0:	add	r3, r2, r3
   4d1c4:	ldrb	r3, [r3, #4]
   4d1c8:	and	r3, r3, #8
   4d1cc:	cmp	r3, #0
   4d1d0:	beq	4d39c <__assert_fail@plt+0x3acb0>
   4d1d4:	mov	r3, #0
   4d1d8:	str	r3, [fp, #-8]
   4d1dc:	b	4d36c <__assert_fail@plt+0x3ac80>
   4d1e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d1e4:	ldr	r1, [r3, #20]
   4d1e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d1ec:	mov	r3, r2
   4d1f0:	lsl	r3, r3, #1
   4d1f4:	add	r3, r3, r2
   4d1f8:	lsl	r3, r3, #2
   4d1fc:	add	r3, r1, r3
   4d200:	ldr	r2, [r3, #8]
   4d204:	ldr	r3, [fp, #-8]
   4d208:	lsl	r3, r3, #2
   4d20c:	add	r3, r2, r3
   4d210:	ldr	r3, [r3]
   4d214:	str	r3, [fp, #-20]	; 0xffffffec
   4d218:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d21c:	ldr	r1, [r3, #24]
   4d220:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d224:	mov	r3, r2
   4d228:	lsl	r3, r3, #1
   4d22c:	add	r3, r3, r2
   4d230:	lsl	r3, r3, #2
   4d234:	add	r3, r1, r3
   4d238:	ldr	r3, [r3, #4]
   4d23c:	cmn	r3, #1
   4d240:	bne	4d250 <__assert_fail@plt+0x3ab64>
   4d244:	mov	r3, #1
   4d248:	strb	r3, [fp, #-9]
   4d24c:	b	4d360 <__assert_fail@plt+0x3ac74>
   4d250:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d254:	ldr	r1, [r3, #24]
   4d258:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d25c:	mov	r3, r2
   4d260:	lsl	r3, r3, #1
   4d264:	add	r3, r3, r2
   4d268:	lsl	r3, r3, #2
   4d26c:	add	r3, r1, r3
   4d270:	ldr	r3, [r3, #4]
   4d274:	cmp	r3, #0
   4d278:	bne	4d2b8 <__assert_fail@plt+0x3abcc>
   4d27c:	sub	r0, fp, #44	; 0x2c
   4d280:	mov	r3, #0
   4d284:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d288:	ldr	r1, [fp, #-52]	; 0xffffffcc
   4d28c:	bl	4cfdc <__assert_fail@plt+0x3a8f0>
   4d290:	str	r0, [fp, #-16]
   4d294:	ldr	r3, [fp, #-16]
   4d298:	cmp	r3, #0
   4d29c:	movne	r3, #1
   4d2a0:	moveq	r3, #0
   4d2a4:	uxtb	r3, r3
   4d2a8:	cmp	r3, #0
   4d2ac:	beq	4d2e4 <__assert_fail@plt+0x3abf8>
   4d2b0:	ldr	r3, [fp, #-16]
   4d2b4:	b	4d430 <__assert_fail@plt+0x3ad44>
   4d2b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d2bc:	ldr	r1, [r3, #24]
   4d2c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d2c4:	mov	r3, r2
   4d2c8:	lsl	r3, r3, #1
   4d2cc:	add	r3, r3, r2
   4d2d0:	lsl	r3, r3, #2
   4d2d4:	add	r2, r1, r3
   4d2d8:	sub	r3, fp, #44	; 0x2c
   4d2dc:	ldm	r2, {r0, r1, r2}
   4d2e0:	stm	r3, {r0, r1, r2}
   4d2e4:	sub	r2, fp, #44	; 0x2c
   4d2e8:	sub	r3, fp, #32
   4d2ec:	mov	r1, r2
   4d2f0:	mov	r0, r3
   4d2f4:	bl	47940 <__assert_fail@plt+0x35254>
   4d2f8:	str	r0, [fp, #-16]
   4d2fc:	ldr	r3, [fp, #-16]
   4d300:	cmp	r3, #0
   4d304:	movne	r3, #1
   4d308:	moveq	r3, #0
   4d30c:	uxtb	r3, r3
   4d310:	cmp	r3, #0
   4d314:	beq	4d320 <__assert_fail@plt+0x3ac34>
   4d318:	ldr	r3, [fp, #-16]
   4d31c:	b	4d430 <__assert_fail@plt+0x3ad44>
   4d320:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d324:	ldr	r1, [r3, #24]
   4d328:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d32c:	mov	r3, r2
   4d330:	lsl	r3, r3, #1
   4d334:	add	r3, r3, r2
   4d338:	lsl	r3, r3, #2
   4d33c:	add	r3, r1, r3
   4d340:	ldr	r3, [r3, #4]
   4d344:	cmp	r3, #0
   4d348:	bne	4d360 <__assert_fail@plt+0x3ac74>
   4d34c:	mov	r3, #1
   4d350:	strb	r3, [fp, #-9]
   4d354:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d358:	mov	r0, r3
   4d35c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4d360:	ldr	r3, [fp, #-8]
   4d364:	add	r3, r3, #1
   4d368:	str	r3, [fp, #-8]
   4d36c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d370:	ldr	r1, [r3, #20]
   4d374:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d378:	mov	r3, r2
   4d37c:	lsl	r3, r3, #1
   4d380:	add	r3, r3, r2
   4d384:	lsl	r3, r3, #2
   4d388:	add	r3, r1, r3
   4d38c:	ldr	r2, [r3, #4]
   4d390:	ldr	r3, [fp, #-8]
   4d394:	cmp	r2, r3
   4d398:	bgt	4d1e0 <__assert_fail@plt+0x3aaf4>
   4d39c:	ldrb	r3, [fp, #-9]
   4d3a0:	cmp	r3, #0
   4d3a4:	beq	4d3e8 <__assert_fail@plt+0x3acfc>
   4d3a8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   4d3ac:	eor	r3, r3, #1
   4d3b0:	uxtb	r3, r3
   4d3b4:	cmp	r3, #0
   4d3b8:	beq	4d3e8 <__assert_fail@plt+0x3acfc>
   4d3bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d3c0:	ldr	r1, [r3, #24]
   4d3c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d3c8:	mov	r3, r2
   4d3cc:	lsl	r3, r3, #1
   4d3d0:	add	r3, r3, r2
   4d3d4:	lsl	r3, r3, #2
   4d3d8:	add	r3, r1, r3
   4d3dc:	mov	r2, #0
   4d3e0:	str	r2, [r3, #4]
   4d3e4:	b	4d418 <__assert_fail@plt+0x3ad2c>
   4d3e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d3ec:	ldr	r1, [r3, #24]
   4d3f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4d3f4:	mov	r3, r2
   4d3f8:	lsl	r3, r3, #1
   4d3fc:	add	r3, r3, r2
   4d400:	lsl	r3, r3, #2
   4d404:	add	r3, r1, r3
   4d408:	mov	ip, r3
   4d40c:	sub	r3, fp, #32
   4d410:	ldm	r3, {r0, r1, r2}
   4d414:	stm	ip, {r0, r1, r2}
   4d418:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4d41c:	mov	ip, r3
   4d420:	sub	r3, fp, #32
   4d424:	ldm	r3, {r0, r1, r2}
   4d428:	stm	ip, {r0, r1, r2}
   4d42c:	mov	r3, #0
   4d430:	mov	r0, r3
   4d434:	sub	sp, fp, #4
   4d438:	pop	{fp, pc}
   4d43c:	andeq	pc, r3, r0, lsl #30
   4d440:	push	{fp, lr}
   4d444:	add	fp, sp, #4
   4d448:	sub	sp, sp, #16
   4d44c:	str	r0, [fp, #-8]
   4d450:	str	r1, [fp, #-12]
   4d454:	str	r2, [fp, #-16]
   4d458:	ldr	r2, [fp, #-16]
   4d45c:	ldr	r1, [fp, #-12]
   4d460:	ldr	r0, [fp, #-8]
   4d464:	bl	4d48c <__assert_fail@plt+0x3ada0>
   4d468:	mov	r2, r0
   4d46c:	ldr	r3, [fp, #-12]
   4d470:	ldr	r3, [r3, #40]	; 0x28
   4d474:	add	r2, r3, r2
   4d478:	ldr	r3, [fp, #-12]
   4d47c:	str	r2, [r3, #40]	; 0x28
   4d480:	nop			; (mov r0, r0)
   4d484:	sub	sp, fp, #4
   4d488:	pop	{fp, pc}
   4d48c:	push	{fp, lr}
   4d490:	add	fp, sp, #4
   4d494:	sub	sp, sp, #40	; 0x28
   4d498:	str	r0, [fp, #-32]	; 0xffffffe0
   4d49c:	str	r1, [fp, #-36]	; 0xffffffdc
   4d4a0:	str	r2, [fp, #-40]	; 0xffffffd8
   4d4a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d4a8:	ldr	r2, [r3, #56]	; 0x38
   4d4ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d4b0:	ldr	r3, [r3, #40]	; 0x28
   4d4b4:	cmp	r2, r3
   4d4b8:	bgt	4d4d0 <__assert_fail@plt+0x3ade4>
   4d4bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d4c0:	mov	r2, #2
   4d4c4:	strb	r2, [r3, #4]
   4d4c8:	mov	r3, #0
   4d4cc:	b	4e1b4 <__assert_fail@plt+0x3bac8>
   4d4d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d4d4:	ldr	r3, [r3, #4]
   4d4d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4d4dc:	ldr	r2, [r2, #40]	; 0x28
   4d4e0:	add	r3, r3, r2
   4d4e4:	ldrb	r3, [r3]
   4d4e8:	strb	r3, [fp, #-5]
   4d4ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d4f0:	ldrb	r2, [fp, #-5]
   4d4f4:	strb	r2, [r3]
   4d4f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4d4fc:	ldrb	r3, [r2, #6]
   4d500:	bic	r3, r3, #64	; 0x40
   4d504:	strb	r3, [r2, #6]
   4d508:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4d50c:	ldrb	r3, [r2, #6]
   4d510:	bic	r3, r3, #32
   4d514:	strb	r3, [r2, #6]
   4d518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d51c:	ldr	r3, [r3, #80]	; 0x50
   4d520:	cmp	r3, #1
   4d524:	ble	4d588 <__assert_fail@plt+0x3ae9c>
   4d528:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d52c:	ldr	r2, [r3, #40]	; 0x28
   4d530:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d534:	ldr	r3, [r3, #28]
   4d538:	cmp	r2, r3
   4d53c:	beq	4d588 <__assert_fail@plt+0x3ae9c>
   4d540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d544:	ldr	r2, [r3, #8]
   4d548:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d54c:	ldr	r3, [r3, #40]	; 0x28
   4d550:	lsl	r3, r3, #2
   4d554:	add	r3, r2, r3
   4d558:	ldr	r3, [r3]
   4d55c:	cmn	r3, #1
   4d560:	bne	4d588 <__assert_fail@plt+0x3ae9c>
   4d564:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d568:	mov	r2, #1
   4d56c:	strb	r2, [r3, #4]
   4d570:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4d574:	ldrb	r3, [r2, #6]
   4d578:	orr	r3, r3, #32
   4d57c:	strb	r3, [r2, #6]
   4d580:	mov	r3, #1
   4d584:	b	4e1b4 <__assert_fail@plt+0x3bac8>
   4d588:	ldrb	r3, [fp, #-5]
   4d58c:	cmp	r3, #92	; 0x5c
   4d590:	bne	4dbe0 <__assert_fail@plt+0x3b4f4>
   4d594:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d598:	ldr	r3, [r3, #40]	; 0x28
   4d59c:	add	r2, r3, #1
   4d5a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d5a4:	ldr	r3, [r3, #48]	; 0x30
   4d5a8:	cmp	r2, r3
   4d5ac:	blt	4d5c4 <__assert_fail@plt+0x3aed8>
   4d5b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d5b4:	mov	r2, #36	; 0x24
   4d5b8:	strb	r2, [r3, #4]
   4d5bc:	mov	r3, #1
   4d5c0:	b	4e1b4 <__assert_fail@plt+0x3bac8>
   4d5c4:	mov	r1, #1
   4d5c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4d5cc:	bl	46834 <__assert_fail@plt+0x34148>
   4d5d0:	mov	r3, r0
   4d5d4:	strb	r3, [fp, #-6]
   4d5d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d5dc:	ldrb	r2, [fp, #-6]
   4d5e0:	strb	r2, [r3]
   4d5e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d5e8:	mov	r2, #1
   4d5ec:	strb	r2, [r3, #4]
   4d5f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d5f4:	ldr	r3, [r3, #80]	; 0x50
   4d5f8:	cmp	r3, #1
   4d5fc:	ble	4d67c <__assert_fail@plt+0x3af90>
   4d600:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4d604:	ldr	r3, [r3, #40]	; 0x28
   4d608:	add	r3, r3, #1
   4d60c:	mov	r1, r3
   4d610:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4d614:	bl	44318 <__assert_fail@plt+0x31c2c>
   4d618:	str	r0, [fp, #-12]
   4d61c:	ldr	r0, [fp, #-12]
   4d620:	bl	12410 <iswalnum@plt>
   4d624:	mov	r3, r0
   4d628:	cmp	r3, #0
   4d62c:	bne	4d63c <__assert_fail@plt+0x3af50>
   4d630:	ldr	r3, [fp, #-12]
   4d634:	cmp	r3, #95	; 0x5f
   4d638:	bne	4d644 <__assert_fail@plt+0x3af58>
   4d63c:	mov	r3, #1
   4d640:	b	4d648 <__assert_fail@plt+0x3af5c>
   4d644:	mov	r3, #0
   4d648:	cmp	r3, #0
   4d64c:	movne	r3, #1
   4d650:	moveq	r3, #0
   4d654:	uxtb	r3, r3
   4d658:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4d65c:	ldrb	r2, [r1, #6]
   4d660:	and	r3, r3, #1
   4d664:	bic	r2, r2, #64	; 0x40
   4d668:	lsl	r3, r3, #6
   4d66c:	orr	r3, r3, r2
   4d670:	mov	r2, r3
   4d674:	strb	r2, [r1, #6]
   4d678:	b	4d6ec <__assert_fail@plt+0x3b000>
   4d67c:	bl	12368 <__ctype_b_loc@plt>
   4d680:	mov	r3, r0
   4d684:	ldr	r2, [r3]
   4d688:	ldrb	r3, [fp, #-6]
   4d68c:	lsl	r3, r3, #1
   4d690:	add	r3, r2, r3
   4d694:	ldrh	r3, [r3]
   4d698:	and	r3, r3, #8
   4d69c:	cmp	r3, #0
   4d6a0:	bne	4d6b0 <__assert_fail@plt+0x3afc4>
   4d6a4:	ldrb	r3, [fp, #-6]
   4d6a8:	cmp	r3, #95	; 0x5f
   4d6ac:	bne	4d6b8 <__assert_fail@plt+0x3afcc>
   4d6b0:	mov	r3, #1
   4d6b4:	b	4d6bc <__assert_fail@plt+0x3afd0>
   4d6b8:	mov	r3, #0
   4d6bc:	cmp	r3, #0
   4d6c0:	movne	r3, #1
   4d6c4:	moveq	r3, #0
   4d6c8:	uxtb	r3, r3
   4d6cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4d6d0:	ldrb	r2, [r1, #6]
   4d6d4:	and	r3, r3, #1
   4d6d8:	bic	r2, r2, #64	; 0x40
   4d6dc:	lsl	r3, r3, #6
   4d6e0:	orr	r3, r3, r2
   4d6e4:	mov	r2, r3
   4d6e8:	strb	r2, [r1, #6]
   4d6ec:	ldrb	r3, [fp, #-6]
   4d6f0:	sub	r3, r3, #39	; 0x27
   4d6f4:	cmp	r3, #86	; 0x56
   4d6f8:	ldrls	pc, [pc, r3, lsl #2]
   4d6fc:	b	4db44 <__assert_fail@plt+0x3b458>
   4d700:	andeq	sp, r4, r8, lsl sl
   4d704:	andeq	sp, r4, r4, asr #20
   4d708:	andeq	sp, r4, r4, ror #20
   4d70c:	andeq	sp, r4, r4, asr #22
   4d710:	andeq	sp, r4, r4, lsl #21
   4d714:	andeq	sp, r4, r4, asr #22
   4d718:	andeq	sp, r4, r4, asr #22
   4d71c:	andeq	sp, r4, r4, asr #22
   4d720:	andeq	sp, r4, r4, asr #22
   4d724:	andeq	sp, r4, r4, asr #22
   4d728:	andeq	sp, r4, ip, lsl #17
   4d72c:	andeq	sp, r4, ip, lsl #17
   4d730:	andeq	sp, r4, ip, lsl #17
   4d734:	andeq	sp, r4, ip, lsl #17
   4d738:	andeq	sp, r4, ip, lsl #17
   4d73c:	andeq	sp, r4, ip, lsl #17
   4d740:	andeq	sp, r4, ip, lsl #17
   4d744:	andeq	sp, r4, ip, lsl #17
   4d748:	andeq	sp, r4, ip, lsl #17
   4d74c:	andeq	sp, r4, r4, asr #22
   4d750:	andeq	sp, r4, r4, asr #22
   4d754:			; <UNDEFINED> instruction: 0x0004d8bc
   4d758:	andeq	sp, r4, r4, asr #22
   4d75c:	andeq	sp, r4, r8, ror #17
   4d760:			; <UNDEFINED> instruction: 0x0004dab4
   4d764:	andeq	sp, r4, r4, asr #22
   4d768:	andeq	sp, r4, r4, asr #22
   4d76c:	andeq	sp, r4, r0, asr #18
   4d770:	andeq	sp, r4, r4, asr #22
   4d774:	andeq	sp, r4, r4, asr #22
   4d778:	andeq	sp, r4, r4, asr #22
   4d77c:	andeq	sp, r4, r4, asr #22
   4d780:	andeq	sp, r4, r4, asr #22
   4d784:	andeq	sp, r4, r4, asr #22
   4d788:	andeq	sp, r4, r4, asr #22
   4d78c:	andeq	sp, r4, r4, asr #22
   4d790:	andeq	sp, r4, r4, asr #22
   4d794:	andeq	sp, r4, r4, asr #22
   4d798:	andeq	sp, r4, r4, asr #22
   4d79c:	andeq	sp, r4, r4, asr #22
   4d7a0:	andeq	sp, r4, r4, asr #22
   4d7a4:	andeq	sp, r4, r4, asr #22
   4d7a8:	andeq	sp, r4, r4, asr #22
   4d7ac:	andeq	sp, r4, r4, asr #22
   4d7b0:	andeq	sp, r4, ip, asr #19
   4d7b4:	andeq	sp, r4, r4, asr #22
   4d7b8:	andeq	sp, r4, r4, asr #22
   4d7bc:	andeq	sp, r4, r4, asr #22
   4d7c0:	andeq	sp, r4, ip, lsl #19
   4d7c4:	andeq	sp, r4, r4, asr #22
   4d7c8:	andeq	sp, r4, r4, asr #22
   4d7cc:	andeq	sp, r4, r4, asr #22
   4d7d0:	andeq	sp, r4, r4, asr #22
   4d7d4:	andeq	sp, r4, r4, asr #22
   4d7d8:	andeq	sp, r4, r4, asr #22
   4d7dc:	andeq	sp, r4, r4, asr #22
   4d7e0:	andeq	sp, r4, r4, asr #22
   4d7e4:	andeq	sp, r4, ip, ror #19
   4d7e8:	andeq	sp, r4, r4, asr #22
   4d7ec:	andeq	sp, r4, r4, lsl r9
   4d7f0:	andeq	sp, r4, r4, asr #22
   4d7f4:	andeq	sp, r4, r4, asr #22
   4d7f8:	andeq	sp, r4, r4, asr #22
   4d7fc:	andeq	sp, r4, r4, asr #22
   4d800:	andeq	sp, r4, r4, asr #22
   4d804:	andeq	sp, r4, r4, asr #22
   4d808:	andeq	sp, r4, r4, asr #22
   4d80c:	andeq	sp, r4, r4, asr #22
   4d810:	andeq	sp, r4, r4, asr #22
   4d814:	andeq	sp, r4, r4, asr #22
   4d818:	andeq	sp, r4, r4, asr #22
   4d81c:	andeq	sp, r4, r4, asr #22
   4d820:	andeq	sp, r4, r4, asr #22
   4d824:	andeq	sp, r4, r4, asr #22
   4d828:	andeq	sp, r4, r4, asr #22
   4d82c:	andeq	sp, r4, r4, asr #22
   4d830:	andeq	sp, r4, ip, lsr #19
   4d834:	andeq	sp, r4, r4, asr #22
   4d838:	andeq	sp, r4, r4, asr #22
   4d83c:	andeq	sp, r4, r4, asr #22
   4d840:	andeq	sp, r4, ip, ror #18
   4d844:	andeq	sp, r4, r4, asr #22
   4d848:	andeq	sp, r4, r4, asr #22
   4d84c:	andeq	sp, r4, r4, asr #22
   4d850:	andeq	sp, r4, r4, ror #21
   4d854:	andeq	sp, r4, ip, asr r8
   4d858:	andeq	sp, r4, r4, lsl fp
   4d85c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d860:	and	r3, r3, #1024	; 0x400
   4d864:	cmp	r3, #0
   4d868:	bne	4db4c <__assert_fail@plt+0x3b460>
   4d86c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d870:	and	r3, r3, #32768	; 0x8000
   4d874:	cmp	r3, #0
   4d878:	bne	4db4c <__assert_fail@plt+0x3b460>
   4d87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d880:	mov	r2, #10
   4d884:	strb	r2, [r3, #4]
   4d888:	b	4db4c <__assert_fail@plt+0x3b460>
   4d88c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d890:	and	r3, r3, #16384	; 0x4000
   4d894:	cmp	r3, #0
   4d898:	bne	4db54 <__assert_fail@plt+0x3b468>
   4d89c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d8a0:	mov	r2, #4
   4d8a4:	strb	r2, [r3, #4]
   4d8a8:	ldrb	r3, [fp, #-6]
   4d8ac:	sub	r2, r3, #49	; 0x31
   4d8b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d8b4:	str	r2, [r3]
   4d8b8:	b	4db54 <__assert_fail@plt+0x3b468>
   4d8bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d8c0:	and	r3, r3, #524288	; 0x80000
   4d8c4:	cmp	r3, #0
   4d8c8:	bne	4db5c <__assert_fail@plt+0x3b470>
   4d8cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d8d0:	mov	r2, #12
   4d8d4:	strb	r2, [r3, #4]
   4d8d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d8dc:	mov	r2, #6
   4d8e0:	str	r2, [r3]
   4d8e4:	b	4db5c <__assert_fail@plt+0x3b470>
   4d8e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d8ec:	and	r3, r3, #524288	; 0x80000
   4d8f0:	cmp	r3, #0
   4d8f4:	bne	4db64 <__assert_fail@plt+0x3b478>
   4d8f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d8fc:	mov	r2, #12
   4d900:	strb	r2, [r3, #4]
   4d904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d908:	mov	r2, #9
   4d90c:	str	r2, [r3]
   4d910:	b	4db64 <__assert_fail@plt+0x3b478>
   4d914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d918:	and	r3, r3, #524288	; 0x80000
   4d91c:	cmp	r3, #0
   4d920:	bne	4db6c <__assert_fail@plt+0x3b480>
   4d924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d928:	mov	r2, #12
   4d92c:	strb	r2, [r3, #4]
   4d930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d934:	mov	r2, #256	; 0x100
   4d938:	str	r2, [r3]
   4d93c:	b	4db6c <__assert_fail@plt+0x3b480>
   4d940:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d944:	and	r3, r3, #524288	; 0x80000
   4d948:	cmp	r3, #0
   4d94c:	bne	4db74 <__assert_fail@plt+0x3b488>
   4d950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d954:	mov	r2, #12
   4d958:	strb	r2, [r3, #4]
   4d95c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d960:	mov	r2, #512	; 0x200
   4d964:	str	r2, [r3]
   4d968:	b	4db74 <__assert_fail@plt+0x3b488>
   4d96c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d970:	and	r3, r3, #524288	; 0x80000
   4d974:	cmp	r3, #0
   4d978:	bne	4db7c <__assert_fail@plt+0x3b490>
   4d97c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d980:	mov	r2, #32
   4d984:	strb	r2, [r3, #4]
   4d988:	b	4db7c <__assert_fail@plt+0x3b490>
   4d98c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d990:	and	r3, r3, #524288	; 0x80000
   4d994:	cmp	r3, #0
   4d998:	bne	4db84 <__assert_fail@plt+0x3b498>
   4d99c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d9a0:	mov	r2, #33	; 0x21
   4d9a4:	strb	r2, [r3, #4]
   4d9a8:	b	4db84 <__assert_fail@plt+0x3b498>
   4d9ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d9b0:	and	r3, r3, #524288	; 0x80000
   4d9b4:	cmp	r3, #0
   4d9b8:	bne	4db8c <__assert_fail@plt+0x3b4a0>
   4d9bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d9c0:	mov	r2, #34	; 0x22
   4d9c4:	strb	r2, [r3, #4]
   4d9c8:	b	4db8c <__assert_fail@plt+0x3b4a0>
   4d9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d9d0:	and	r3, r3, #524288	; 0x80000
   4d9d4:	cmp	r3, #0
   4d9d8:	bne	4db94 <__assert_fail@plt+0x3b4a8>
   4d9dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d9e0:	mov	r2, #35	; 0x23
   4d9e4:	strb	r2, [r3, #4]
   4d9e8:	b	4db94 <__assert_fail@plt+0x3b4a8>
   4d9ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d9f0:	and	r3, r3, #524288	; 0x80000
   4d9f4:	cmp	r3, #0
   4d9f8:	bne	4db9c <__assert_fail@plt+0x3b4b0>
   4d9fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da00:	mov	r2, #12
   4da04:	strb	r2, [r3, #4]
   4da08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da0c:	mov	r2, #64	; 0x40
   4da10:	str	r2, [r3]
   4da14:	b	4db9c <__assert_fail@plt+0x3b4b0>
   4da18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4da1c:	and	r3, r3, #524288	; 0x80000
   4da20:	cmp	r3, #0
   4da24:	bne	4dba4 <__assert_fail@plt+0x3b4b8>
   4da28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da2c:	mov	r2, #12
   4da30:	strb	r2, [r3, #4]
   4da34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da38:	mov	r2, #128	; 0x80
   4da3c:	str	r2, [r3]
   4da40:	b	4dba4 <__assert_fail@plt+0x3b4b8>
   4da44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4da48:	and	r3, r3, #8192	; 0x2000
   4da4c:	cmp	r3, #0
   4da50:	bne	4dbac <__assert_fail@plt+0x3b4c0>
   4da54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da58:	mov	r2, #8
   4da5c:	strb	r2, [r3, #4]
   4da60:	b	4dbac <__assert_fail@plt+0x3b4c0>
   4da64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4da68:	and	r3, r3, #8192	; 0x2000
   4da6c:	cmp	r3, #0
   4da70:	bne	4dbb4 <__assert_fail@plt+0x3b4c8>
   4da74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da78:	mov	r2, #9
   4da7c:	strb	r2, [r3, #4]
   4da80:	b	4dbb4 <__assert_fail@plt+0x3b4c8>
   4da84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4da88:	and	r3, r3, #1024	; 0x400
   4da8c:	cmp	r3, #0
   4da90:	bne	4dbbc <__assert_fail@plt+0x3b4d0>
   4da94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4da98:	and	r3, r3, #2
   4da9c:	cmp	r3, #0
   4daa0:	beq	4dbbc <__assert_fail@plt+0x3b4d0>
   4daa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4daa8:	mov	r2, #18
   4daac:	strb	r2, [r3, #4]
   4dab0:	b	4dbbc <__assert_fail@plt+0x3b4d0>
   4dab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dab8:	and	r3, r3, #1024	; 0x400
   4dabc:	cmp	r3, #0
   4dac0:	bne	4dbc4 <__assert_fail@plt+0x3b4d8>
   4dac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dac8:	and	r3, r3, #2
   4dacc:	cmp	r3, #0
   4dad0:	beq	4dbc4 <__assert_fail@plt+0x3b4d8>
   4dad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dad8:	mov	r2, #19
   4dadc:	strb	r2, [r3, #4]
   4dae0:	b	4dbc4 <__assert_fail@plt+0x3b4d8>
   4dae4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dae8:	and	r3, r3, #512	; 0x200
   4daec:	cmp	r3, #0
   4daf0:	beq	4dbcc <__assert_fail@plt+0x3b4e0>
   4daf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4daf8:	and	r3, r3, #4096	; 0x1000
   4dafc:	cmp	r3, #0
   4db00:	bne	4dbcc <__assert_fail@plt+0x3b4e0>
   4db04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4db08:	mov	r2, #23
   4db0c:	strb	r2, [r3, #4]
   4db10:	b	4dbcc <__assert_fail@plt+0x3b4e0>
   4db14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4db18:	and	r3, r3, #512	; 0x200
   4db1c:	cmp	r3, #0
   4db20:	beq	4dbd4 <__assert_fail@plt+0x3b4e8>
   4db24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4db28:	and	r3, r3, #4096	; 0x1000
   4db2c:	cmp	r3, #0
   4db30:	bne	4dbd4 <__assert_fail@plt+0x3b4e8>
   4db34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4db38:	mov	r2, #24
   4db3c:	strb	r2, [r3, #4]
   4db40:	b	4dbd4 <__assert_fail@plt+0x3b4e8>
   4db44:	nop			; (mov r0, r0)
   4db48:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db4c:	nop			; (mov r0, r0)
   4db50:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db54:	nop			; (mov r0, r0)
   4db58:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db5c:	nop			; (mov r0, r0)
   4db60:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db64:	nop			; (mov r0, r0)
   4db68:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db6c:	nop			; (mov r0, r0)
   4db70:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db74:	nop			; (mov r0, r0)
   4db78:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db7c:	nop			; (mov r0, r0)
   4db80:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db84:	nop			; (mov r0, r0)
   4db88:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db8c:	nop			; (mov r0, r0)
   4db90:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db94:	nop			; (mov r0, r0)
   4db98:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4db9c:	nop			; (mov r0, r0)
   4dba0:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dba4:	nop			; (mov r0, r0)
   4dba8:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dbac:	nop			; (mov r0, r0)
   4dbb0:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dbb4:	nop			; (mov r0, r0)
   4dbb8:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dbbc:	nop			; (mov r0, r0)
   4dbc0:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dbc4:	nop			; (mov r0, r0)
   4dbc8:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dbcc:	nop			; (mov r0, r0)
   4dbd0:	b	4dbd8 <__assert_fail@plt+0x3b4ec>
   4dbd4:	nop			; (mov r0, r0)
   4dbd8:	mov	r3, #2
   4dbdc:	b	4e1b4 <__assert_fail@plt+0x3bac8>
   4dbe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dbe4:	mov	r2, #1
   4dbe8:	strb	r2, [r3, #4]
   4dbec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4dbf0:	ldr	r3, [r3, #80]	; 0x50
   4dbf4:	cmp	r3, #1
   4dbf8:	ble	4dc74 <__assert_fail@plt+0x3b588>
   4dbfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4dc00:	ldr	r3, [r3, #40]	; 0x28
   4dc04:	mov	r1, r3
   4dc08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4dc0c:	bl	44318 <__assert_fail@plt+0x31c2c>
   4dc10:	str	r0, [fp, #-16]
   4dc14:	ldr	r0, [fp, #-16]
   4dc18:	bl	12410 <iswalnum@plt>
   4dc1c:	mov	r3, r0
   4dc20:	cmp	r3, #0
   4dc24:	bne	4dc34 <__assert_fail@plt+0x3b548>
   4dc28:	ldr	r3, [fp, #-16]
   4dc2c:	cmp	r3, #95	; 0x5f
   4dc30:	bne	4dc3c <__assert_fail@plt+0x3b550>
   4dc34:	mov	r3, #1
   4dc38:	b	4dc40 <__assert_fail@plt+0x3b554>
   4dc3c:	mov	r3, #0
   4dc40:	cmp	r3, #0
   4dc44:	movne	r3, #1
   4dc48:	moveq	r3, #0
   4dc4c:	uxtb	r3, r3
   4dc50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4dc54:	ldrb	r2, [r1, #6]
   4dc58:	and	r3, r3, #1
   4dc5c:	bic	r2, r2, #64	; 0x40
   4dc60:	lsl	r3, r3, #6
   4dc64:	orr	r3, r3, r2
   4dc68:	mov	r2, r3
   4dc6c:	strb	r2, [r1, #6]
   4dc70:	b	4dce8 <__assert_fail@plt+0x3b5fc>
   4dc74:	bl	12368 <__ctype_b_loc@plt>
   4dc78:	mov	r3, r0
   4dc7c:	ldr	r2, [r3]
   4dc80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dc84:	ldrb	r3, [r3]
   4dc88:	lsl	r3, r3, #1
   4dc8c:	add	r3, r2, r3
   4dc90:	ldrh	r3, [r3]
   4dc94:	and	r3, r3, #8
   4dc98:	cmp	r3, #0
   4dc9c:	bne	4dcb0 <__assert_fail@plt+0x3b5c4>
   4dca0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dca4:	ldrb	r3, [r3]
   4dca8:	cmp	r3, #95	; 0x5f
   4dcac:	bne	4dcb8 <__assert_fail@plt+0x3b5cc>
   4dcb0:	mov	r3, #1
   4dcb4:	b	4dcbc <__assert_fail@plt+0x3b5d0>
   4dcb8:	mov	r3, #0
   4dcbc:	uxtb	r3, r3
   4dcc0:	and	r3, r3, #1
   4dcc4:	uxtb	r3, r3
   4dcc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4dccc:	ldrb	r2, [r1, #6]
   4dcd0:	and	r3, r3, #1
   4dcd4:	bic	r2, r2, #64	; 0x40
   4dcd8:	lsl	r3, r3, #6
   4dcdc:	orr	r3, r3, r2
   4dce0:	mov	r2, r3
   4dce4:	strb	r2, [r1, #6]
   4dce8:	ldrb	r3, [fp, #-5]
   4dcec:	sub	r3, r3, #10
   4dcf0:	cmp	r3, #115	; 0x73
   4dcf4:	ldrls	pc, [pc, r3, lsl #2]
   4dcf8:	b	4e164 <__assert_fail@plt+0x3ba78>
   4dcfc:	andeq	sp, r4, ip, asr #29
   4dd00:	andeq	lr, r4, r4, ror #2
   4dd04:	andeq	lr, r4, r4, ror #2
   4dd08:	andeq	lr, r4, r4, ror #2
   4dd0c:	andeq	lr, r4, r4, ror #2
   4dd10:	andeq	lr, r4, r4, ror #2
   4dd14:	andeq	lr, r4, r4, ror #2
   4dd18:	andeq	lr, r4, r4, ror #2
   4dd1c:	andeq	lr, r4, r4, ror #2
   4dd20:	andeq	lr, r4, r4, ror #2
   4dd24:	andeq	lr, r4, r4, ror #2
   4dd28:	andeq	lr, r4, r4, ror #2
   4dd2c:	andeq	lr, r4, r4, ror #2
   4dd30:	andeq	lr, r4, r4, ror #2
   4dd34:	andeq	lr, r4, r4, ror #2
   4dd38:	andeq	lr, r4, r4, ror #2
   4dd3c:	andeq	lr, r4, r4, ror #2
   4dd40:	andeq	lr, r4, r4, ror #2
   4dd44:	andeq	lr, r4, r4, ror #2
   4dd48:	andeq	lr, r4, r4, ror #2
   4dd4c:	andeq	lr, r4, r4, ror #2
   4dd50:	andeq	lr, r4, r4, ror #2
   4dd54:	andeq	lr, r4, r4, ror #2
   4dd58:	andeq	lr, r4, r4, ror #2
   4dd5c:	andeq	lr, r4, r4, ror #2
   4dd60:	andeq	lr, r4, r4, ror #2
   4dd64:	andeq	lr, r4, r8, asr #1
   4dd68:	andeq	lr, r4, r4, ror #2
   4dd6c:	andeq	lr, r4, r4, ror #2
   4dd70:	andeq	lr, r4, r4, ror #2
   4dd74:	andeq	sp, r4, ip, ror #31
   4dd78:	andeq	lr, r4, ip
   4dd7c:	andeq	sp, r4, ip, lsl pc
   4dd80:	andeq	sp, r4, ip, lsr #30
   4dd84:	andeq	lr, r4, r4, ror #2
   4dd88:	andeq	lr, r4, r4, ror #2
   4dd8c:	andeq	lr, r4, ip, lsr r0
   4dd90:	andeq	lr, r4, r4, ror #2
   4dd94:	andeq	lr, r4, r4, ror #2
   4dd98:	andeq	lr, r4, r4, ror #2
   4dd9c:	andeq	lr, r4, r4, ror #2
   4dda0:	andeq	lr, r4, r4, ror #2
   4dda4:	andeq	lr, r4, r4, ror #2
   4dda8:	andeq	lr, r4, r4, ror #2
   4ddac:	andeq	lr, r4, r4, ror #2
   4ddb0:	andeq	lr, r4, r4, ror #2
   4ddb4:	andeq	lr, r4, r4, ror #2
   4ddb8:	andeq	lr, r4, r4, ror #2
   4ddbc:	andeq	lr, r4, r4, ror #2
   4ddc0:	andeq	lr, r4, r4, ror #2
   4ddc4:	andeq	lr, r4, r4, ror #2
   4ddc8:	andeq	lr, r4, r4, ror #2
   4ddcc:	andeq	lr, r4, r4, ror #2
   4ddd0:	andeq	sp, r4, ip, asr pc
   4ddd4:	andeq	lr, r4, r4, ror #2
   4ddd8:	andeq	lr, r4, r4, ror #2
   4dddc:	andeq	lr, r4, r4, ror #2
   4dde0:	andeq	lr, r4, r4, ror #2
   4dde4:	andeq	lr, r4, r4, ror #2
   4dde8:	andeq	lr, r4, r4, ror #2
   4ddec:	andeq	lr, r4, r4, ror #2
   4ddf0:	andeq	lr, r4, r4, ror #2
   4ddf4:	andeq	lr, r4, r4, ror #2
   4ddf8:	andeq	lr, r4, r4, ror #2
   4ddfc:	andeq	lr, r4, r4, ror #2
   4de00:	andeq	lr, r4, r4, ror #2
   4de04:	andeq	lr, r4, r4, ror #2
   4de08:	andeq	lr, r4, r4, ror #2
   4de0c:	andeq	lr, r4, r4, ror #2
   4de10:	andeq	lr, r4, r4, ror #2
   4de14:	andeq	lr, r4, r4, ror #2
   4de18:	andeq	lr, r4, r4, ror #2
   4de1c:	andeq	lr, r4, r4, ror #2
   4de20:	andeq	lr, r4, r4, ror #2
   4de24:	andeq	lr, r4, r4, ror #2
   4de28:	andeq	lr, r4, r4, ror #2
   4de2c:	andeq	lr, r4, r4, ror #2
   4de30:	andeq	lr, r4, r4, ror #2
   4de34:	andeq	lr, r4, r4, ror #2
   4de38:	andeq	lr, r4, r4, ror #2
   4de3c:	andeq	lr, r4, r4, ror #2
   4de40:	andeq	lr, r4, ip, lsr #32
   4de44:	andeq	lr, r4, r4, ror #2
   4de48:	andeq	lr, r4, r4, ror #2
   4de4c:	andeq	lr, r4, ip, asr #32
   4de50:	andeq	lr, r4, r4, ror #2
   4de54:	andeq	lr, r4, r4, ror #2
   4de58:	andeq	lr, r4, r4, ror #2
   4de5c:	andeq	lr, r4, r4, ror #2
   4de60:	andeq	lr, r4, r4, ror #2
   4de64:	andeq	lr, r4, r4, ror #2
   4de68:	andeq	lr, r4, r4, ror #2
   4de6c:	andeq	lr, r4, r4, ror #2
   4de70:	andeq	lr, r4, r4, ror #2
   4de74:	andeq	lr, r4, r4, ror #2
   4de78:	andeq	lr, r4, r4, ror #2
   4de7c:	andeq	lr, r4, r4, ror #2
   4de80:	andeq	lr, r4, r4, ror #2
   4de84:	andeq	lr, r4, r4, ror #2
   4de88:	andeq	lr, r4, r4, ror #2
   4de8c:	andeq	lr, r4, r4, ror #2
   4de90:	andeq	lr, r4, r4, ror #2
   4de94:	andeq	lr, r4, r4, ror #2
   4de98:	andeq	lr, r4, r4, ror #2
   4de9c:	andeq	lr, r4, r4, ror #2
   4dea0:	andeq	lr, r4, r4, ror #2
   4dea4:	andeq	lr, r4, r4, ror #2
   4dea8:	andeq	lr, r4, r4, ror #2
   4deac:	andeq	lr, r4, r4, ror #2
   4deb0:	andeq	lr, r4, r4, ror #2
   4deb4:	andeq	lr, r4, r4, ror #2
   4deb8:	andeq	lr, r4, r4, ror #2
   4debc:	andeq	lr, r4, r4, ror #2
   4dec0:	andeq	sp, r4, ip, lsl #31
   4dec4:	andeq	sp, r4, ip, ror #29
   4dec8:			; <UNDEFINED> instruction: 0x0004dfbc
   4decc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ded0:	and	r3, r3, #2048	; 0x800
   4ded4:	cmp	r3, #0
   4ded8:	beq	4e16c <__assert_fail@plt+0x3ba80>
   4dedc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dee0:	mov	r2, #10
   4dee4:	strb	r2, [r3, #4]
   4dee8:	b	4e16c <__assert_fail@plt+0x3ba80>
   4deec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4def0:	and	r3, r3, #1024	; 0x400
   4def4:	cmp	r3, #0
   4def8:	bne	4e174 <__assert_fail@plt+0x3ba88>
   4defc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4df00:	and	r3, r3, #32768	; 0x8000
   4df04:	cmp	r3, #0
   4df08:	beq	4e174 <__assert_fail@plt+0x3ba88>
   4df0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4df10:	mov	r2, #10
   4df14:	strb	r2, [r3, #4]
   4df18:	b	4e174 <__assert_fail@plt+0x3ba88>
   4df1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4df20:	mov	r2, #11
   4df24:	strb	r2, [r3, #4]
   4df28:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4df2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4df30:	and	r3, r3, #1024	; 0x400
   4df34:	cmp	r3, #0
   4df38:	bne	4e17c <__assert_fail@plt+0x3ba90>
   4df3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4df40:	and	r3, r3, #2
   4df44:	cmp	r3, #0
   4df48:	bne	4e17c <__assert_fail@plt+0x3ba90>
   4df4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4df50:	mov	r2, #18
   4df54:	strb	r2, [r3, #4]
   4df58:	b	4e17c <__assert_fail@plt+0x3ba90>
   4df5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4df60:	and	r3, r3, #1024	; 0x400
   4df64:	cmp	r3, #0
   4df68:	bne	4e184 <__assert_fail@plt+0x3ba98>
   4df6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4df70:	and	r3, r3, #2
   4df74:	cmp	r3, #0
   4df78:	bne	4e184 <__assert_fail@plt+0x3ba98>
   4df7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4df80:	mov	r2, #19
   4df84:	strb	r2, [r3, #4]
   4df88:	b	4e184 <__assert_fail@plt+0x3ba98>
   4df8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4df90:	and	r3, r3, #512	; 0x200
   4df94:	cmp	r3, #0
   4df98:	beq	4e18c <__assert_fail@plt+0x3baa0>
   4df9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dfa0:	and	r3, r3, #4096	; 0x1000
   4dfa4:	cmp	r3, #0
   4dfa8:	beq	4e18c <__assert_fail@plt+0x3baa0>
   4dfac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dfb0:	mov	r2, #23
   4dfb4:	strb	r2, [r3, #4]
   4dfb8:	b	4e18c <__assert_fail@plt+0x3baa0>
   4dfbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dfc0:	and	r3, r3, #512	; 0x200
   4dfc4:	cmp	r3, #0
   4dfc8:	beq	4e194 <__assert_fail@plt+0x3baa8>
   4dfcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dfd0:	and	r3, r3, #4096	; 0x1000
   4dfd4:	cmp	r3, #0
   4dfd8:	beq	4e194 <__assert_fail@plt+0x3baa8>
   4dfdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dfe0:	mov	r2, #24
   4dfe4:	strb	r2, [r3, #4]
   4dfe8:	b	4e194 <__assert_fail@plt+0x3baa8>
   4dfec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4dff0:	and	r3, r3, #8192	; 0x2000
   4dff4:	cmp	r3, #0
   4dff8:	beq	4e19c <__assert_fail@plt+0x3bab0>
   4dffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e000:	mov	r2, #8
   4e004:	strb	r2, [r3, #4]
   4e008:	b	4e19c <__assert_fail@plt+0x3bab0>
   4e00c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e010:	and	r3, r3, #8192	; 0x2000
   4e014:	cmp	r3, #0
   4e018:	beq	4e1a4 <__assert_fail@plt+0x3bab8>
   4e01c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e020:	mov	r2, #9
   4e024:	strb	r2, [r3, #4]
   4e028:	b	4e1a4 <__assert_fail@plt+0x3bab8>
   4e02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e030:	mov	r2, #20
   4e034:	strb	r2, [r3, #4]
   4e038:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e03c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e040:	mov	r2, #5
   4e044:	strb	r2, [r3, #4]
   4e048:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e04c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4e050:	ldr	r3, [pc, #360]	; 4e1c0 <__assert_fail@plt+0x3bad4>
   4e054:	and	r3, r3, r2
   4e058:	cmp	r3, #0
   4e05c:	bne	4e0ac <__assert_fail@plt+0x3b9c0>
   4e060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e064:	ldr	r3, [r3, #40]	; 0x28
   4e068:	cmp	r3, #0
   4e06c:	beq	4e0ac <__assert_fail@plt+0x3b9c0>
   4e070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e074:	ldr	r2, [r3, #4]
   4e078:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e07c:	ldr	r3, [r3, #40]	; 0x28
   4e080:	sub	r3, r3, #1
   4e084:	add	r3, r2, r3
   4e088:	ldrb	r3, [r3]
   4e08c:	strb	r3, [fp, #-17]	; 0xffffffef
   4e090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e094:	and	r3, r3, #2048	; 0x800
   4e098:	cmp	r3, #0
   4e09c:	beq	4e1b0 <__assert_fail@plt+0x3bac4>
   4e0a0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   4e0a4:	cmp	r3, #10
   4e0a8:	bne	4e1b0 <__assert_fail@plt+0x3bac4>
   4e0ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e0b0:	mov	r2, #12
   4e0b4:	strb	r2, [r3, #4]
   4e0b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e0bc:	mov	r2, #16
   4e0c0:	str	r2, [r3]
   4e0c4:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e0c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e0cc:	and	r3, r3, #8
   4e0d0:	cmp	r3, #0
   4e0d4:	bne	4e148 <__assert_fail@plt+0x3ba5c>
   4e0d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e0dc:	ldr	r3, [r3, #40]	; 0x28
   4e0e0:	add	r2, r3, #1
   4e0e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e0e8:	ldr	r3, [r3, #48]	; 0x30
   4e0ec:	cmp	r2, r3
   4e0f0:	beq	4e148 <__assert_fail@plt+0x3ba5c>
   4e0f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e0f8:	ldr	r3, [r3, #40]	; 0x28
   4e0fc:	add	r2, r3, #1
   4e100:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e104:	str	r2, [r3, #40]	; 0x28
   4e108:	sub	r3, fp, #28
   4e10c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4e110:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4e114:	mov	r0, r3
   4e118:	bl	4d48c <__assert_fail@plt+0x3ada0>
   4e11c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e120:	ldr	r3, [r3, #40]	; 0x28
   4e124:	sub	r2, r3, #1
   4e128:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e12c:	str	r2, [r3, #40]	; 0x28
   4e130:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   4e134:	cmp	r3, #10
   4e138:	beq	4e148 <__assert_fail@plt+0x3ba5c>
   4e13c:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   4e140:	cmp	r3, #9
   4e144:	bne	4e1ac <__assert_fail@plt+0x3bac0>
   4e148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e14c:	mov	r2, #12
   4e150:	strb	r2, [r3, #4]
   4e154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e158:	mov	r2, #32
   4e15c:	str	r2, [r3]
   4e160:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e164:	nop			; (mov r0, r0)
   4e168:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e16c:	nop			; (mov r0, r0)
   4e170:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e174:	nop			; (mov r0, r0)
   4e178:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e17c:	nop			; (mov r0, r0)
   4e180:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e184:	nop			; (mov r0, r0)
   4e188:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e18c:	nop			; (mov r0, r0)
   4e190:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e194:	nop			; (mov r0, r0)
   4e198:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e19c:	nop			; (mov r0, r0)
   4e1a0:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e1a4:	nop			; (mov r0, r0)
   4e1a8:	b	4e1b0 <__assert_fail@plt+0x3bac4>
   4e1ac:	nop			; (mov r0, r0)
   4e1b0:	mov	r3, #1
   4e1b4:	mov	r0, r3
   4e1b8:	sub	sp, fp, #4
   4e1bc:	pop	{fp, pc}
   4e1c0:	addeq	r0, r0, r8
   4e1c4:	push	{fp}		; (str fp, [sp, #-4]!)
   4e1c8:	add	fp, sp, #0
   4e1cc:	sub	sp, sp, #36	; 0x24
   4e1d0:	str	r0, [fp, #-24]	; 0xffffffe8
   4e1d4:	str	r1, [fp, #-28]	; 0xffffffe4
   4e1d8:	str	r2, [fp, #-32]	; 0xffffffe0
   4e1dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e1e0:	ldr	r2, [r3, #56]	; 0x38
   4e1e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e1e8:	ldr	r3, [r3, #40]	; 0x28
   4e1ec:	cmp	r2, r3
   4e1f0:	bgt	4e208 <__assert_fail@plt+0x3bb1c>
   4e1f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e1f8:	mov	r2, #2
   4e1fc:	strb	r2, [r3, #4]
   4e200:	mov	r3, #0
   4e204:	b	4e464 <__assert_fail@plt+0x3bd78>
   4e208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e20c:	ldr	r3, [r3, #4]
   4e210:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4e214:	ldr	r2, [r2, #40]	; 0x28
   4e218:	add	r3, r3, r2
   4e21c:	ldrb	r3, [r3]
   4e220:	strb	r3, [fp, #-13]
   4e224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e228:	ldrb	r2, [fp, #-13]
   4e22c:	strb	r2, [r3]
   4e230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e234:	ldr	r3, [r3, #80]	; 0x50
   4e238:	cmp	r3, #1
   4e23c:	ble	4e290 <__assert_fail@plt+0x3bba4>
   4e240:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e244:	ldr	r2, [r3, #40]	; 0x28
   4e248:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e24c:	ldr	r3, [r3, #28]
   4e250:	cmp	r2, r3
   4e254:	beq	4e290 <__assert_fail@plt+0x3bba4>
   4e258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e25c:	ldr	r2, [r3, #8]
   4e260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e264:	ldr	r3, [r3, #40]	; 0x28
   4e268:	lsl	r3, r3, #2
   4e26c:	add	r3, r2, r3
   4e270:	ldr	r3, [r3]
   4e274:	cmn	r3, #1
   4e278:	bne	4e290 <__assert_fail@plt+0x3bba4>
   4e27c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e280:	mov	r2, #1
   4e284:	strb	r2, [r3, #4]
   4e288:	mov	r3, #1
   4e28c:	b	4e464 <__assert_fail@plt+0x3bd78>
   4e290:	ldrb	r3, [fp, #-13]
   4e294:	cmp	r3, #92	; 0x5c
   4e298:	bne	4e318 <__assert_fail@plt+0x3bc2c>
   4e29c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e2a0:	and	r3, r3, #1
   4e2a4:	cmp	r3, #0
   4e2a8:	beq	4e318 <__assert_fail@plt+0x3bc2c>
   4e2ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e2b0:	ldr	r3, [r3, #40]	; 0x28
   4e2b4:	add	r2, r3, #1
   4e2b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e2bc:	ldr	r3, [r3, #48]	; 0x30
   4e2c0:	cmp	r2, r3
   4e2c4:	bge	4e318 <__assert_fail@plt+0x3bc2c>
   4e2c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e2cc:	ldr	r3, [r3, #40]	; 0x28
   4e2d0:	add	r2, r3, #1
   4e2d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e2d8:	str	r2, [r3, #40]	; 0x28
   4e2dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e2e0:	ldr	r3, [r3, #4]
   4e2e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4e2e8:	ldr	r2, [r2, #40]	; 0x28
   4e2ec:	add	r3, r3, r2
   4e2f0:	ldrb	r3, [r3]
   4e2f4:	strb	r3, [fp, #-14]
   4e2f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e2fc:	ldrb	r2, [fp, #-14]
   4e300:	strb	r2, [r3]
   4e304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e308:	mov	r2, #1
   4e30c:	strb	r2, [r3, #4]
   4e310:	mov	r3, #1
   4e314:	b	4e464 <__assert_fail@plt+0x3bd78>
   4e318:	ldrb	r3, [fp, #-13]
   4e31c:	cmp	r3, #91	; 0x5b
   4e320:	bne	4e408 <__assert_fail@plt+0x3bd1c>
   4e324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e328:	ldr	r3, [r3, #40]	; 0x28
   4e32c:	add	r2, r3, #1
   4e330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e334:	ldr	r3, [r3, #48]	; 0x30
   4e338:	cmp	r2, r3
   4e33c:	bge	4e364 <__assert_fail@plt+0x3bc78>
   4e340:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e344:	ldr	r2, [r3, #4]
   4e348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e34c:	ldr	r3, [r3, #40]	; 0x28
   4e350:	add	r3, r3, #1
   4e354:	add	r3, r2, r3
   4e358:	ldrb	r3, [r3]
   4e35c:	strb	r3, [fp, #-5]
   4e360:	b	4e36c <__assert_fail@plt+0x3bc80>
   4e364:	mov	r3, #0
   4e368:	strb	r3, [fp, #-5]
   4e36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e370:	ldrb	r2, [fp, #-5]
   4e374:	strb	r2, [r3]
   4e378:	mov	r3, #2
   4e37c:	str	r3, [fp, #-12]
   4e380:	ldrb	r3, [fp, #-5]
   4e384:	cmp	r3, #58	; 0x3a
   4e388:	beq	4e3bc <__assert_fail@plt+0x3bcd0>
   4e38c:	cmp	r3, #61	; 0x3d
   4e390:	beq	4e3ac <__assert_fail@plt+0x3bcc0>
   4e394:	cmp	r3, #46	; 0x2e
   4e398:	bne	4e3dc <__assert_fail@plt+0x3bcf0>
   4e39c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e3a0:	mov	r2, #26
   4e3a4:	strb	r2, [r3, #4]
   4e3a8:	b	4e400 <__assert_fail@plt+0x3bd14>
   4e3ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e3b0:	mov	r2, #28
   4e3b4:	strb	r2, [r3, #4]
   4e3b8:	b	4e400 <__assert_fail@plt+0x3bd14>
   4e3bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e3c0:	and	r3, r3, #4
   4e3c4:	cmp	r3, #0
   4e3c8:	beq	4e3dc <__assert_fail@plt+0x3bcf0>
   4e3cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e3d0:	mov	r2, #30
   4e3d4:	strb	r2, [r3, #4]
   4e3d8:	b	4e400 <__assert_fail@plt+0x3bd14>
   4e3dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e3e0:	mov	r2, #1
   4e3e4:	strb	r2, [r3, #4]
   4e3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e3ec:	ldrb	r2, [fp, #-13]
   4e3f0:	strb	r2, [r3]
   4e3f4:	mov	r3, #1
   4e3f8:	str	r3, [fp, #-12]
   4e3fc:	nop			; (mov r0, r0)
   4e400:	ldr	r3, [fp, #-12]
   4e404:	b	4e464 <__assert_fail@plt+0x3bd78>
   4e408:	ldrb	r3, [fp, #-13]
   4e40c:	cmp	r3, #93	; 0x5d
   4e410:	beq	4e434 <__assert_fail@plt+0x3bd48>
   4e414:	cmp	r3, #94	; 0x5e
   4e418:	beq	4e444 <__assert_fail@plt+0x3bd58>
   4e41c:	cmp	r3, #45	; 0x2d
   4e420:	bne	4e454 <__assert_fail@plt+0x3bd68>
   4e424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e428:	mov	r2, #22
   4e42c:	strb	r2, [r3, #4]
   4e430:	b	4e460 <__assert_fail@plt+0x3bd74>
   4e434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e438:	mov	r2, #21
   4e43c:	strb	r2, [r3, #4]
   4e440:	b	4e460 <__assert_fail@plt+0x3bd74>
   4e444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e448:	mov	r2, #25
   4e44c:	strb	r2, [r3, #4]
   4e450:	b	4e460 <__assert_fail@plt+0x3bd74>
   4e454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e458:	mov	r2, #1
   4e45c:	strb	r2, [r3, #4]
   4e460:	mov	r3, #1
   4e464:	mov	r0, r3
   4e468:	add	sp, fp, #0
   4e46c:	pop	{fp}		; (ldr fp, [sp], #4)
   4e470:	bx	lr
   4e474:	push	{fp, lr}
   4e478:	add	fp, sp, #4
   4e47c:	sub	sp, sp, #48	; 0x30
   4e480:	str	r0, [fp, #-32]	; 0xffffffe0
   4e484:	str	r1, [fp, #-36]	; 0xffffffdc
   4e488:	str	r2, [fp, #-40]	; 0xffffffd8
   4e48c:	str	r3, [fp, #-44]	; 0xffffffd4
   4e490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e494:	ldr	r3, [r3]
   4e498:	str	r3, [fp, #-12]
   4e49c:	ldr	r3, [fp, #-12]
   4e4a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4e4a4:	str	r2, [r3, #128]	; 0x80
   4e4a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e4ac:	orr	r2, r3, #8388608	; 0x800000
   4e4b0:	sub	r3, fp, #28
   4e4b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4e4b8:	mov	r0, r3
   4e4bc:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4e4c0:	sub	r2, fp, #28
   4e4c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4e4c8:	str	r3, [sp, #4]
   4e4cc:	mov	r3, #0
   4e4d0:	str	r3, [sp]
   4e4d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e4d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4e4dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4e4e0:	bl	4e5d0 <__assert_fail@plt+0x3bee4>
   4e4e4:	str	r0, [fp, #-16]
   4e4e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4e4ec:	ldr	r3, [r3]
   4e4f0:	cmp	r3, #0
   4e4f4:	movne	r3, #1
   4e4f8:	moveq	r3, #0
   4e4fc:	uxtb	r3, r3
   4e500:	cmp	r3, #0
   4e504:	beq	4e52c <__assert_fail@plt+0x3be40>
   4e508:	ldr	r3, [fp, #-16]
   4e50c:	cmp	r3, #0
   4e510:	moveq	r3, #1
   4e514:	movne	r3, #0
   4e518:	uxtb	r3, r3
   4e51c:	cmp	r3, #0
   4e520:	beq	4e52c <__assert_fail@plt+0x3be40>
   4e524:	mov	r3, #0
   4e528:	b	4e5c4 <__assert_fail@plt+0x3bed8>
   4e52c:	mov	r3, #2
   4e530:	mov	r2, #0
   4e534:	mov	r1, #0
   4e538:	ldr	r0, [fp, #-12]
   4e53c:	bl	5202c <__assert_fail@plt+0x3f940>
   4e540:	str	r0, [fp, #-20]	; 0xffffffec
   4e544:	ldr	r3, [fp, #-16]
   4e548:	cmp	r3, #0
   4e54c:	beq	4e56c <__assert_fail@plt+0x3be80>
   4e550:	mov	r3, #16
   4e554:	ldr	r2, [fp, #-20]	; 0xffffffec
   4e558:	ldr	r1, [fp, #-16]
   4e55c:	ldr	r0, [fp, #-12]
   4e560:	bl	5202c <__assert_fail@plt+0x3f940>
   4e564:	str	r0, [fp, #-8]
   4e568:	b	4e574 <__assert_fail@plt+0x3be88>
   4e56c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4e570:	str	r3, [fp, #-8]
   4e574:	ldr	r3, [fp, #-20]	; 0xffffffec
   4e578:	cmp	r3, #0
   4e57c:	moveq	r3, #1
   4e580:	movne	r3, #0
   4e584:	uxtb	r3, r3
   4e588:	cmp	r3, #0
   4e58c:	bne	4e5ac <__assert_fail@plt+0x3bec0>
   4e590:	ldr	r3, [fp, #-8]
   4e594:	cmp	r3, #0
   4e598:	moveq	r3, #1
   4e59c:	movne	r3, #0
   4e5a0:	uxtb	r3, r3
   4e5a4:	cmp	r3, #0
   4e5a8:	beq	4e5c0 <__assert_fail@plt+0x3bed4>
   4e5ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4e5b0:	mov	r2, #12
   4e5b4:	str	r2, [r3]
   4e5b8:	mov	r3, #0
   4e5bc:	b	4e5c4 <__assert_fail@plt+0x3bed8>
   4e5c0:	ldr	r3, [fp, #-8]
   4e5c4:	mov	r0, r3
   4e5c8:	sub	sp, fp, #4
   4e5cc:	pop	{fp, pc}
   4e5d0:	push	{fp, lr}
   4e5d4:	add	fp, sp, #4
   4e5d8:	sub	sp, sp, #48	; 0x30
   4e5dc:	str	r0, [fp, #-32]	; 0xffffffe0
   4e5e0:	str	r1, [fp, #-36]	; 0xffffffdc
   4e5e4:	str	r2, [fp, #-40]	; 0xffffffd8
   4e5e8:	str	r3, [fp, #-44]	; 0xffffffd4
   4e5ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e5f0:	ldr	r3, [r3]
   4e5f4:	str	r3, [fp, #-16]
   4e5f8:	mov	r3, #0
   4e5fc:	str	r3, [fp, #-12]
   4e600:	ldr	r3, [fp, #-16]
   4e604:	ldr	r3, [r3, #84]	; 0x54
   4e608:	str	r3, [fp, #-20]	; 0xffffffec
   4e60c:	ldr	r3, [fp, #8]
   4e610:	str	r3, [sp, #4]
   4e614:	ldr	r3, [fp, #4]
   4e618:	str	r3, [sp]
   4e61c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4e620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4e624:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4e628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4e62c:	bl	4e7fc <__assert_fail@plt+0x3c110>
   4e630:	str	r0, [fp, #-8]
   4e634:	ldr	r3, [fp, #8]
   4e638:	ldr	r3, [r3]
   4e63c:	cmp	r3, #0
   4e640:	movne	r3, #1
   4e644:	moveq	r3, #0
   4e648:	uxtb	r3, r3
   4e64c:	cmp	r3, #0
   4e650:	beq	4e7d8 <__assert_fail@plt+0x3c0ec>
   4e654:	ldr	r3, [fp, #-8]
   4e658:	cmp	r3, #0
   4e65c:	moveq	r3, #1
   4e660:	movne	r3, #0
   4e664:	uxtb	r3, r3
   4e668:	cmp	r3, #0
   4e66c:	beq	4e7d8 <__assert_fail@plt+0x3c0ec>
   4e670:	mov	r3, #0
   4e674:	b	4e7ec <__assert_fail@plt+0x3c100>
   4e678:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4e67c:	orr	r3, r3, #8388608	; 0x800000
   4e680:	mov	r2, r3
   4e684:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4e688:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4e68c:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4e690:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e694:	ldrb	r3, [r3, #4]
   4e698:	cmp	r3, #10
   4e69c:	beq	4e788 <__assert_fail@plt+0x3c09c>
   4e6a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e6a4:	ldrb	r3, [r3, #4]
   4e6a8:	cmp	r3, #2
   4e6ac:	beq	4e788 <__assert_fail@plt+0x3c09c>
   4e6b0:	ldr	r3, [fp, #4]
   4e6b4:	cmp	r3, #0
   4e6b8:	beq	4e6cc <__assert_fail@plt+0x3bfe0>
   4e6bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e6c0:	ldrb	r3, [r3, #4]
   4e6c4:	cmp	r3, #9
   4e6c8:	beq	4e788 <__assert_fail@plt+0x3c09c>
   4e6cc:	ldr	r3, [fp, #-16]
   4e6d0:	ldr	r3, [r3, #84]	; 0x54
   4e6d4:	str	r3, [fp, #-24]	; 0xffffffe8
   4e6d8:	ldr	r3, [fp, #-16]
   4e6dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   4e6e0:	str	r2, [r3, #84]	; 0x54
   4e6e4:	ldr	r3, [fp, #8]
   4e6e8:	str	r3, [sp, #4]
   4e6ec:	ldr	r3, [fp, #4]
   4e6f0:	str	r3, [sp]
   4e6f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4e6f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4e6fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4e700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4e704:	bl	4e7fc <__assert_fail@plt+0x3c110>
   4e708:	str	r0, [fp, #-12]
   4e70c:	ldr	r3, [fp, #8]
   4e710:	ldr	r3, [r3]
   4e714:	cmp	r3, #0
   4e718:	movne	r3, #1
   4e71c:	moveq	r3, #0
   4e720:	uxtb	r3, r3
   4e724:	cmp	r3, #0
   4e728:	beq	4e76c <__assert_fail@plt+0x3c080>
   4e72c:	ldr	r3, [fp, #-12]
   4e730:	cmp	r3, #0
   4e734:	moveq	r3, #1
   4e738:	movne	r3, #0
   4e73c:	uxtb	r3, r3
   4e740:	cmp	r3, #0
   4e744:	beq	4e76c <__assert_fail@plt+0x3c080>
   4e748:	ldr	r3, [fp, #-8]
   4e74c:	cmp	r3, #0
   4e750:	beq	4e764 <__assert_fail@plt+0x3c078>
   4e754:	mov	r2, #0
   4e758:	ldr	r1, [pc, #152]	; 4e7f8 <__assert_fail@plt+0x3c10c>
   4e75c:	ldr	r0, [fp, #-8]
   4e760:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4e764:	mov	r3, #0
   4e768:	b	4e7ec <__assert_fail@plt+0x3c100>
   4e76c:	ldr	r3, [fp, #-16]
   4e770:	ldr	r2, [r3, #84]	; 0x54
   4e774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4e778:	orr	r2, r2, r3
   4e77c:	ldr	r3, [fp, #-16]
   4e780:	str	r2, [r3, #84]	; 0x54
   4e784:	b	4e790 <__assert_fail@plt+0x3c0a4>
   4e788:	mov	r3, #0
   4e78c:	str	r3, [fp, #-12]
   4e790:	mov	r3, #10
   4e794:	ldr	r2, [fp, #-12]
   4e798:	ldr	r1, [fp, #-8]
   4e79c:	ldr	r0, [fp, #-16]
   4e7a0:	bl	5202c <__assert_fail@plt+0x3f940>
   4e7a4:	str	r0, [fp, #-8]
   4e7a8:	ldr	r3, [fp, #-8]
   4e7ac:	cmp	r3, #0
   4e7b0:	moveq	r3, #1
   4e7b4:	movne	r3, #0
   4e7b8:	uxtb	r3, r3
   4e7bc:	cmp	r3, #0
   4e7c0:	beq	4e7d8 <__assert_fail@plt+0x3c0ec>
   4e7c4:	ldr	r3, [fp, #8]
   4e7c8:	mov	r2, #12
   4e7cc:	str	r2, [r3]
   4e7d0:	mov	r3, #0
   4e7d4:	b	4e7ec <__assert_fail@plt+0x3c100>
   4e7d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e7dc:	ldrb	r3, [r3, #4]
   4e7e0:	cmp	r3, #10
   4e7e4:	beq	4e678 <__assert_fail@plt+0x3bf8c>
   4e7e8:	ldr	r3, [fp, #-8]
   4e7ec:	mov	r0, r3
   4e7f0:	sub	sp, fp, #4
   4e7f4:	pop	{fp, pc}
   4e7f8:	andeq	r2, r5, ip, ror #5
   4e7fc:	push	{fp, lr}
   4e800:	add	fp, sp, #4
   4e804:	sub	sp, sp, #40	; 0x28
   4e808:	str	r0, [fp, #-24]	; 0xffffffe8
   4e80c:	str	r1, [fp, #-28]	; 0xffffffe4
   4e810:	str	r2, [fp, #-32]	; 0xffffffe0
   4e814:	str	r3, [fp, #-36]	; 0xffffffdc
   4e818:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4e81c:	ldr	r3, [r3]
   4e820:	str	r3, [fp, #-12]
   4e824:	ldr	r3, [fp, #8]
   4e828:	str	r3, [sp, #4]
   4e82c:	ldr	r3, [fp, #4]
   4e830:	str	r3, [sp]
   4e834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e838:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e83c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4e840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e844:	bl	4e9f8 <__assert_fail@plt+0x3c30c>
   4e848:	str	r0, [fp, #-8]
   4e84c:	ldr	r3, [fp, #8]
   4e850:	ldr	r3, [r3]
   4e854:	cmp	r3, #0
   4e858:	movne	r3, #1
   4e85c:	moveq	r3, #0
   4e860:	uxtb	r3, r3
   4e864:	cmp	r3, #0
   4e868:	beq	4e9a8 <__assert_fail@plt+0x3c2bc>
   4e86c:	ldr	r3, [fp, #-8]
   4e870:	cmp	r3, #0
   4e874:	moveq	r3, #1
   4e878:	movne	r3, #0
   4e87c:	uxtb	r3, r3
   4e880:	cmp	r3, #0
   4e884:	beq	4e9a8 <__assert_fail@plt+0x3c2bc>
   4e888:	mov	r3, #0
   4e88c:	b	4e9e8 <__assert_fail@plt+0x3c2fc>
   4e890:	ldr	r3, [fp, #8]
   4e894:	str	r3, [sp, #4]
   4e898:	ldr	r3, [fp, #4]
   4e89c:	str	r3, [sp]
   4e8a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e8a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e8a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4e8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e8b0:	bl	4e9f8 <__assert_fail@plt+0x3c30c>
   4e8b4:	str	r0, [fp, #-16]
   4e8b8:	ldr	r3, [fp, #8]
   4e8bc:	ldr	r3, [r3]
   4e8c0:	cmp	r3, #0
   4e8c4:	movne	r3, #1
   4e8c8:	moveq	r3, #0
   4e8cc:	uxtb	r3, r3
   4e8d0:	cmp	r3, #0
   4e8d4:	beq	4e918 <__assert_fail@plt+0x3c22c>
   4e8d8:	ldr	r3, [fp, #-16]
   4e8dc:	cmp	r3, #0
   4e8e0:	moveq	r3, #1
   4e8e4:	movne	r3, #0
   4e8e8:	uxtb	r3, r3
   4e8ec:	cmp	r3, #0
   4e8f0:	beq	4e918 <__assert_fail@plt+0x3c22c>
   4e8f4:	ldr	r3, [fp, #-8]
   4e8f8:	cmp	r3, #0
   4e8fc:	beq	4e910 <__assert_fail@plt+0x3c224>
   4e900:	mov	r2, #0
   4e904:	ldr	r1, [pc, #232]	; 4e9f4 <__assert_fail@plt+0x3c308>
   4e908:	ldr	r0, [fp, #-8]
   4e90c:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4e910:	mov	r3, #0
   4e914:	b	4e9e8 <__assert_fail@plt+0x3c2fc>
   4e918:	ldr	r3, [fp, #-8]
   4e91c:	cmp	r3, #0
   4e920:	beq	4e994 <__assert_fail@plt+0x3c2a8>
   4e924:	ldr	r3, [fp, #-16]
   4e928:	cmp	r3, #0
   4e92c:	beq	4e994 <__assert_fail@plt+0x3c2a8>
   4e930:	mov	r3, #16
   4e934:	ldr	r2, [fp, #-16]
   4e938:	ldr	r1, [fp, #-8]
   4e93c:	ldr	r0, [fp, #-12]
   4e940:	bl	5202c <__assert_fail@plt+0x3f940>
   4e944:	str	r0, [fp, #-20]	; 0xffffffec
   4e948:	ldr	r3, [fp, #-20]	; 0xffffffec
   4e94c:	cmp	r3, #0
   4e950:	bne	4e988 <__assert_fail@plt+0x3c29c>
   4e954:	mov	r2, #0
   4e958:	ldr	r1, [pc, #148]	; 4e9f4 <__assert_fail@plt+0x3c308>
   4e95c:	ldr	r0, [fp, #-16]
   4e960:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4e964:	mov	r2, #0
   4e968:	ldr	r1, [pc, #132]	; 4e9f4 <__assert_fail@plt+0x3c308>
   4e96c:	ldr	r0, [fp, #-8]
   4e970:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4e974:	ldr	r3, [fp, #8]
   4e978:	mov	r2, #12
   4e97c:	str	r2, [r3]
   4e980:	mov	r3, #0
   4e984:	b	4e9e8 <__assert_fail@plt+0x3c2fc>
   4e988:	ldr	r3, [fp, #-20]	; 0xffffffec
   4e98c:	str	r3, [fp, #-8]
   4e990:	b	4e9a8 <__assert_fail@plt+0x3c2bc>
   4e994:	ldr	r3, [fp, #-8]
   4e998:	cmp	r3, #0
   4e99c:	bne	4e9a8 <__assert_fail@plt+0x3c2bc>
   4e9a0:	ldr	r3, [fp, #-16]
   4e9a4:	str	r3, [fp, #-8]
   4e9a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e9ac:	ldrb	r3, [r3, #4]
   4e9b0:	cmp	r3, #10
   4e9b4:	beq	4e9e4 <__assert_fail@plt+0x3c2f8>
   4e9b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e9bc:	ldrb	r3, [r3, #4]
   4e9c0:	cmp	r3, #2
   4e9c4:	beq	4e9e4 <__assert_fail@plt+0x3c2f8>
   4e9c8:	ldr	r3, [fp, #4]
   4e9cc:	cmp	r3, #0
   4e9d0:	beq	4e890 <__assert_fail@plt+0x3c1a4>
   4e9d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e9d8:	ldrb	r3, [r3, #4]
   4e9dc:	cmp	r3, #9
   4e9e0:	bne	4e890 <__assert_fail@plt+0x3c1a4>
   4e9e4:	ldr	r3, [fp, #-8]
   4e9e8:	mov	r0, r3
   4e9ec:	sub	sp, fp, #4
   4e9f0:	pop	{fp, pc}
   4e9f4:	andeq	r2, r5, ip, ror #5
   4e9f8:	push	{fp, lr}
   4e9fc:	add	fp, sp, #4
   4ea00:	sub	sp, sp, #48	; 0x30
   4ea04:	str	r0, [fp, #-32]	; 0xffffffe0
   4ea08:	str	r1, [fp, #-36]	; 0xffffffdc
   4ea0c:	str	r2, [fp, #-40]	; 0xffffffd8
   4ea10:	str	r3, [fp, #-44]	; 0xffffffd4
   4ea14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ea18:	ldr	r3, [r3]
   4ea1c:	str	r3, [fp, #-16]
   4ea20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea24:	ldrb	r3, [r3, #4]
   4ea28:	sub	r3, r3, #1
   4ea2c:	cmp	r3, #35	; 0x23
   4ea30:	ldrls	pc, [pc, r3, lsl #2]
   4ea34:	b	4f230 <__assert_fail@plt+0x3cb44>
   4ea38:	andeq	lr, r4, r8, asr #21
   4ea3c:	andeq	pc, r4, r4, lsl r2	; <UNPREDICTABLE>
   4ea40:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea44:	ldrdeq	lr, [r4], -ip
   4ea48:	andeq	pc, r4, r0, lsr #1
   4ea4c:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea50:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea54:	andeq	lr, r4, r8, lsl #24
   4ea58:	andeq	lr, r4, ip, lsr lr
   4ea5c:	andeq	pc, r4, r4, lsl r2	; <UNPREDICTABLE>
   4ea60:	andeq	lr, r4, ip, asr #27
   4ea64:	andeq	lr, r4, r4, asr #29
   4ea68:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea6c:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea70:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea74:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea78:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea7c:	andeq	lr, r4, ip, asr #27
   4ea80:	andeq	lr, r4, ip, asr #27
   4ea84:	andeq	lr, r4, r8, ror ip
   4ea88:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea8c:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea90:	andeq	lr, r4, r8, lsr #27
   4ea94:	andeq	lr, r4, r0, ror lr
   4ea98:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4ea9c:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4eaa0:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4eaa4:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4eaa8:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4eaac:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4eab0:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   4eab4:	andeq	pc, r4, ip, lsl #2
   4eab8:	andeq	pc, r4, ip, lsl #2
   4eabc:	muleq	r4, r0, r1
   4eac0:	muleq	r4, r0, r1
   4eac4:	andeq	pc, r4, ip, lsl r2	; <UNPREDICTABLE>
   4eac8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eacc:	mov	r2, #0
   4ead0:	mov	r1, #0
   4ead4:	ldr	r0, [fp, #-16]
   4ead8:	bl	52088 <__assert_fail@plt+0x3f99c>
   4eadc:	str	r0, [fp, #-8]
   4eae0:	ldr	r3, [fp, #-8]
   4eae4:	cmp	r3, #0
   4eae8:	moveq	r3, #1
   4eaec:	movne	r3, #0
   4eaf0:	uxtb	r3, r3
   4eaf4:	cmp	r3, #0
   4eaf8:	beq	4eb10 <__assert_fail@plt+0x3c424>
   4eafc:	ldr	r3, [fp, #8]
   4eb00:	mov	r2, #12
   4eb04:	str	r2, [r3]
   4eb08:	mov	r3, #0
   4eb0c:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4eb10:	ldr	r3, [fp, #-16]
   4eb14:	ldr	r3, [r3, #92]	; 0x5c
   4eb18:	cmp	r3, #1
   4eb1c:	ble	4f230 <__assert_fail@plt+0x3cb44>
   4eb20:	b	4ebb0 <__assert_fail@plt+0x3c4c4>
   4eb24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4eb28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4eb2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4eb30:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4eb34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eb38:	mov	r2, #0
   4eb3c:	mov	r1, #0
   4eb40:	ldr	r0, [fp, #-16]
   4eb44:	bl	52088 <__assert_fail@plt+0x3f99c>
   4eb48:	str	r0, [fp, #-20]	; 0xffffffec
   4eb4c:	mov	r3, #16
   4eb50:	ldr	r2, [fp, #-20]	; 0xffffffec
   4eb54:	ldr	r1, [fp, #-8]
   4eb58:	ldr	r0, [fp, #-16]
   4eb5c:	bl	5202c <__assert_fail@plt+0x3f940>
   4eb60:	str	r0, [fp, #-8]
   4eb64:	ldr	r3, [fp, #-20]	; 0xffffffec
   4eb68:	cmp	r3, #0
   4eb6c:	moveq	r3, #1
   4eb70:	movne	r3, #0
   4eb74:	uxtb	r3, r3
   4eb78:	cmp	r3, #0
   4eb7c:	bne	4eb9c <__assert_fail@plt+0x3c4b0>
   4eb80:	ldr	r3, [fp, #-8]
   4eb84:	cmp	r3, #0
   4eb88:	moveq	r3, #1
   4eb8c:	movne	r3, #0
   4eb90:	uxtb	r3, r3
   4eb94:	cmp	r3, #0
   4eb98:	beq	4ebb0 <__assert_fail@plt+0x3c4c4>
   4eb9c:	ldr	r3, [fp, #8]
   4eba0:	mov	r2, #12
   4eba4:	str	r2, [r3]
   4eba8:	mov	r3, #0
   4ebac:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ebb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ebb4:	ldr	r2, [r3, #56]	; 0x38
   4ebb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ebbc:	ldr	r3, [r3, #40]	; 0x28
   4ebc0:	cmp	r2, r3
   4ebc4:	ble	4f230 <__assert_fail@plt+0x3cb44>
   4ebc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ebcc:	ldr	r2, [r3, #40]	; 0x28
   4ebd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ebd4:	ldr	r3, [r3, #28]
   4ebd8:	cmp	r2, r3
   4ebdc:	beq	4f230 <__assert_fail@plt+0x3cb44>
   4ebe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ebe4:	ldr	r2, [r3, #8]
   4ebe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ebec:	ldr	r3, [r3, #40]	; 0x28
   4ebf0:	lsl	r3, r3, #2
   4ebf4:	add	r3, r2, r3
   4ebf8:	ldr	r3, [r3]
   4ebfc:	cmn	r3, #1
   4ec00:	beq	4eb24 <__assert_fail@plt+0x3c438>
   4ec04:	b	4f230 <__assert_fail@plt+0x3cb44>
   4ec08:	ldr	r3, [fp, #4]
   4ec0c:	add	r3, r3, #1
   4ec10:	ldr	r2, [fp, #8]
   4ec14:	str	r2, [sp, #4]
   4ec18:	str	r3, [sp]
   4ec1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ec20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ec24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4ec28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ec2c:	bl	4f3d0 <__assert_fail@plt+0x3cce4>
   4ec30:	str	r0, [fp, #-8]
   4ec34:	ldr	r3, [fp, #8]
   4ec38:	ldr	r3, [r3]
   4ec3c:	cmp	r3, #0
   4ec40:	movne	r3, #1
   4ec44:	moveq	r3, #0
   4ec48:	uxtb	r3, r3
   4ec4c:	cmp	r3, #0
   4ec50:	beq	4f238 <__assert_fail@plt+0x3cb4c>
   4ec54:	ldr	r3, [fp, #-8]
   4ec58:	cmp	r3, #0
   4ec5c:	moveq	r3, #1
   4ec60:	movne	r3, #0
   4ec64:	uxtb	r3, r3
   4ec68:	cmp	r3, #0
   4ec6c:	beq	4f238 <__assert_fail@plt+0x3cb4c>
   4ec70:	mov	r3, #0
   4ec74:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ec78:	ldr	r3, [fp, #8]
   4ec7c:	str	r3, [sp]
   4ec80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ec84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ec88:	ldr	r1, [fp, #-16]
   4ec8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ec90:	bl	50148 <__assert_fail@plt+0x3da5c>
   4ec94:	str	r0, [fp, #-8]
   4ec98:	ldr	r3, [fp, #8]
   4ec9c:	ldr	r3, [r3]
   4eca0:	cmp	r3, #0
   4eca4:	movne	r3, #1
   4eca8:	moveq	r3, #0
   4ecac:	uxtb	r3, r3
   4ecb0:	cmp	r3, #0
   4ecb4:	beq	4f240 <__assert_fail@plt+0x3cb54>
   4ecb8:	ldr	r3, [fp, #-8]
   4ecbc:	cmp	r3, #0
   4ecc0:	moveq	r3, #1
   4ecc4:	movne	r3, #0
   4ecc8:	uxtb	r3, r3
   4eccc:	cmp	r3, #0
   4ecd0:	beq	4f240 <__assert_fail@plt+0x3cb54>
   4ecd4:	mov	r3, #0
   4ecd8:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ecdc:	ldr	r3, [fp, #-16]
   4ece0:	ldr	r3, [r3, #84]	; 0x54
   4ece4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ece8:	ldr	r2, [r2]
   4ecec:	mov	r1, #1
   4ecf0:	lsl	r2, r1, r2
   4ecf4:	and	r3, r3, r2
   4ecf8:	cmp	r3, #0
   4ecfc:	bne	4ed14 <__assert_fail@plt+0x3c628>
   4ed00:	ldr	r3, [fp, #8]
   4ed04:	mov	r2, #6
   4ed08:	str	r2, [r3]
   4ed0c:	mov	r3, #0
   4ed10:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ed14:	ldr	r3, [fp, #-16]
   4ed18:	ldr	r3, [r3, #80]	; 0x50
   4ed1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ed20:	ldr	r2, [r2]
   4ed24:	mov	r1, #1
   4ed28:	lsl	r2, r1, r2
   4ed2c:	orr	r2, r3, r2
   4ed30:	ldr	r3, [fp, #-16]
   4ed34:	str	r2, [r3, #80]	; 0x50
   4ed38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ed3c:	mov	r2, #0
   4ed40:	mov	r1, #0
   4ed44:	ldr	r0, [fp, #-16]
   4ed48:	bl	52088 <__assert_fail@plt+0x3f99c>
   4ed4c:	str	r0, [fp, #-8]
   4ed50:	ldr	r3, [fp, #-8]
   4ed54:	cmp	r3, #0
   4ed58:	moveq	r3, #1
   4ed5c:	movne	r3, #0
   4ed60:	uxtb	r3, r3
   4ed64:	cmp	r3, #0
   4ed68:	beq	4ed80 <__assert_fail@plt+0x3c694>
   4ed6c:	ldr	r3, [fp, #8]
   4ed70:	mov	r2, #12
   4ed74:	str	r2, [r3]
   4ed78:	mov	r3, #0
   4ed7c:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ed80:	ldr	r3, [fp, #-16]
   4ed84:	ldr	r3, [r3, #76]	; 0x4c
   4ed88:	add	r2, r3, #1
   4ed8c:	ldr	r3, [fp, #-16]
   4ed90:	str	r2, [r3, #76]	; 0x4c
   4ed94:	ldr	r2, [fp, #-16]
   4ed98:	ldrb	r3, [r2, #88]	; 0x58
   4ed9c:	orr	r3, r3, #2
   4eda0:	strb	r3, [r2, #88]	; 0x58
   4eda4:	b	4f264 <__assert_fail@plt+0x3cb78>
   4eda8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4edac:	and	r3, r3, #16777216	; 0x1000000
   4edb0:	cmp	r3, #0
   4edb4:	beq	4edcc <__assert_fail@plt+0x3c6e0>
   4edb8:	ldr	r3, [fp, #8]
   4edbc:	mov	r2, #13
   4edc0:	str	r2, [r3]
   4edc4:	mov	r3, #0
   4edc8:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4edcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4edd0:	and	r3, r3, #32
   4edd4:	cmp	r3, #0
   4edd8:	beq	4edf0 <__assert_fail@plt+0x3c704>
   4eddc:	ldr	r3, [fp, #8]
   4ede0:	mov	r2, #13
   4ede4:	str	r2, [r3]
   4ede8:	mov	r3, #0
   4edec:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4edf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4edf4:	and	r3, r3, #16
   4edf8:	cmp	r3, #0
   4edfc:	beq	4ee3c <__assert_fail@plt+0x3c750>
   4ee00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4ee04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4ee08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4ee0c:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4ee10:	ldr	r3, [fp, #8]
   4ee14:	str	r3, [sp, #4]
   4ee18:	ldr	r3, [fp, #4]
   4ee1c:	str	r3, [sp]
   4ee20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ee24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ee28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4ee2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ee30:	bl	4e9f8 <__assert_fail@plt+0x3c30c>
   4ee34:	mov	r3, r0
   4ee38:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ee3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ee40:	ldrb	r3, [r3, #4]
   4ee44:	cmp	r3, #9
   4ee48:	bne	4ee70 <__assert_fail@plt+0x3c784>
   4ee4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ee50:	and	r3, r3, #131072	; 0x20000
   4ee54:	cmp	r3, #0
   4ee58:	bne	4ee70 <__assert_fail@plt+0x3c784>
   4ee5c:	ldr	r3, [fp, #8]
   4ee60:	mov	r2, #16
   4ee64:	str	r2, [r3]
   4ee68:	mov	r3, #0
   4ee6c:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4ee70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ee74:	mov	r2, #1
   4ee78:	strb	r2, [r3, #4]
   4ee7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ee80:	mov	r2, #0
   4ee84:	mov	r1, #0
   4ee88:	ldr	r0, [fp, #-16]
   4ee8c:	bl	52088 <__assert_fail@plt+0x3f99c>
   4ee90:	str	r0, [fp, #-8]
   4ee94:	ldr	r3, [fp, #-8]
   4ee98:	cmp	r3, #0
   4ee9c:	moveq	r3, #1
   4eea0:	movne	r3, #0
   4eea4:	uxtb	r3, r3
   4eea8:	cmp	r3, #0
   4eeac:	beq	4f248 <__assert_fail@plt+0x3cb5c>
   4eeb0:	ldr	r3, [fp, #8]
   4eeb4:	mov	r2, #12
   4eeb8:	str	r2, [r3]
   4eebc:	mov	r3, #0
   4eec0:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4eec4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eec8:	ldr	r2, [r3]
   4eecc:	ldr	r3, [pc, #1252]	; 4f3b8 <__assert_fail@plt+0x3cccc>
   4eed0:	and	r3, r3, r2
   4eed4:	cmp	r3, #0
   4eed8:	beq	4eefc <__assert_fail@plt+0x3c810>
   4eedc:	ldr	r3, [fp, #-16]
   4eee0:	ldrb	r3, [r3, #88]	; 0x58
   4eee4:	and	r3, r3, #16
   4eee8:	uxtb	r3, r3
   4eeec:	cmp	r3, #0
   4eef0:	bne	4eefc <__assert_fail@plt+0x3c810>
   4eef4:	ldr	r0, [fp, #-16]
   4eef8:	bl	4abc0 <__assert_fail@plt+0x384d4>
   4eefc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef00:	ldr	r3, [r3]
   4ef04:	cmp	r3, #256	; 0x100
   4ef08:	beq	4ef1c <__assert_fail@plt+0x3c830>
   4ef0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef10:	ldr	r3, [r3]
   4ef14:	cmp	r3, #512	; 0x200
   4ef18:	bne	4f03c <__assert_fail@plt+0x3c950>
   4ef1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef20:	ldr	r3, [r3]
   4ef24:	cmp	r3, #256	; 0x100
   4ef28:	bne	4ef60 <__assert_fail@plt+0x3c874>
   4ef2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef30:	mov	r2, #6
   4ef34:	str	r2, [r3]
   4ef38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef3c:	mov	r2, #0
   4ef40:	mov	r1, #0
   4ef44:	ldr	r0, [fp, #-16]
   4ef48:	bl	52088 <__assert_fail@plt+0x3f99c>
   4ef4c:	str	r0, [fp, #-12]
   4ef50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef54:	mov	r2, #9
   4ef58:	str	r2, [r3]
   4ef5c:	b	4ef90 <__assert_fail@plt+0x3c8a4>
   4ef60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef64:	mov	r2, #5
   4ef68:	str	r2, [r3]
   4ef6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef70:	mov	r2, #0
   4ef74:	mov	r1, #0
   4ef78:	ldr	r0, [fp, #-16]
   4ef7c:	bl	52088 <__assert_fail@plt+0x3f99c>
   4ef80:	str	r0, [fp, #-12]
   4ef84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef88:	mov	r2, #10
   4ef8c:	str	r2, [r3]
   4ef90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef94:	mov	r2, #0
   4ef98:	mov	r1, #0
   4ef9c:	ldr	r0, [fp, #-16]
   4efa0:	bl	52088 <__assert_fail@plt+0x3f99c>
   4efa4:	str	r0, [fp, #-24]	; 0xffffffe8
   4efa8:	mov	r3, #10
   4efac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4efb0:	ldr	r1, [fp, #-12]
   4efb4:	ldr	r0, [fp, #-16]
   4efb8:	bl	5202c <__assert_fail@plt+0x3f940>
   4efbc:	str	r0, [fp, #-8]
   4efc0:	ldr	r3, [fp, #-12]
   4efc4:	cmp	r3, #0
   4efc8:	moveq	r3, #1
   4efcc:	movne	r3, #0
   4efd0:	uxtb	r3, r3
   4efd4:	cmp	r3, #0
   4efd8:	bne	4eff8 <__assert_fail@plt+0x3c90c>
   4efdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4efe0:	cmp	r3, #0
   4efe4:	moveq	r3, #1
   4efe8:	movne	r3, #0
   4efec:	uxtb	r3, r3
   4eff0:	cmp	r3, #0
   4eff4:	beq	4f000 <__assert_fail@plt+0x3c914>
   4eff8:	mov	r3, #1
   4effc:	b	4f004 <__assert_fail@plt+0x3c918>
   4f000:	mov	r3, #0
   4f004:	cmp	r3, #0
   4f008:	bne	4f028 <__assert_fail@plt+0x3c93c>
   4f00c:	ldr	r3, [fp, #-8]
   4f010:	cmp	r3, #0
   4f014:	moveq	r3, #1
   4f018:	movne	r3, #0
   4f01c:	uxtb	r3, r3
   4f020:	cmp	r3, #0
   4f024:	beq	4f084 <__assert_fail@plt+0x3c998>
   4f028:	ldr	r3, [fp, #8]
   4f02c:	mov	r2, #12
   4f030:	str	r2, [r3]
   4f034:	mov	r3, #0
   4f038:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f03c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f040:	mov	r2, #0
   4f044:	mov	r1, #0
   4f048:	ldr	r0, [fp, #-16]
   4f04c:	bl	52088 <__assert_fail@plt+0x3f99c>
   4f050:	str	r0, [fp, #-8]
   4f054:	ldr	r3, [fp, #-8]
   4f058:	cmp	r3, #0
   4f05c:	moveq	r3, #1
   4f060:	movne	r3, #0
   4f064:	uxtb	r3, r3
   4f068:	cmp	r3, #0
   4f06c:	beq	4f088 <__assert_fail@plt+0x3c99c>
   4f070:	ldr	r3, [fp, #8]
   4f074:	mov	r2, #12
   4f078:	str	r2, [r3]
   4f07c:	mov	r3, #0
   4f080:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f084:	nop			; (mov r0, r0)
   4f088:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4f08c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4f090:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4f094:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4f098:	ldr	r3, [fp, #-8]
   4f09c:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f0a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f0a4:	mov	r2, #0
   4f0a8:	mov	r1, #0
   4f0ac:	ldr	r0, [fp, #-16]
   4f0b0:	bl	52088 <__assert_fail@plt+0x3f99c>
   4f0b4:	str	r0, [fp, #-8]
   4f0b8:	ldr	r3, [fp, #-8]
   4f0bc:	cmp	r3, #0
   4f0c0:	moveq	r3, #1
   4f0c4:	movne	r3, #0
   4f0c8:	uxtb	r3, r3
   4f0cc:	cmp	r3, #0
   4f0d0:	beq	4f0e8 <__assert_fail@plt+0x3c9fc>
   4f0d4:	ldr	r3, [fp, #8]
   4f0d8:	mov	r2, #12
   4f0dc:	str	r2, [r3]
   4f0e0:	mov	r3, #0
   4f0e4:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f0e8:	ldr	r3, [fp, #-16]
   4f0ec:	ldr	r3, [r3, #92]	; 0x5c
   4f0f0:	cmp	r3, #1
   4f0f4:	ble	4f250 <__assert_fail@plt+0x3cb64>
   4f0f8:	ldr	r2, [fp, #-16]
   4f0fc:	ldrb	r3, [r2, #88]	; 0x58
   4f100:	orr	r3, r3, #2
   4f104:	strb	r3, [r2, #88]	; 0x58
   4f108:	b	4f250 <__assert_fail@plt+0x3cb64>
   4f10c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f110:	ldr	r1, [r3, #64]	; 0x40
   4f114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f118:	ldrb	r3, [r3, #4]
   4f11c:	cmp	r3, #33	; 0x21
   4f120:	moveq	r3, #1
   4f124:	movne	r3, #0
   4f128:	uxtb	r3, r3
   4f12c:	ldr	r2, [fp, #8]
   4f130:	str	r2, [sp, #4]
   4f134:	str	r3, [sp]
   4f138:	ldr	r3, [pc, #636]	; 4f3bc <__assert_fail@plt+0x3ccd0>
   4f13c:	ldr	r2, [pc, #636]	; 4f3c0 <__assert_fail@plt+0x3ccd4>
   4f140:	ldr	r0, [fp, #-16]
   4f144:	bl	51bcc <__assert_fail@plt+0x3f4e0>
   4f148:	str	r0, [fp, #-8]
   4f14c:	ldr	r3, [fp, #8]
   4f150:	ldr	r3, [r3]
   4f154:	cmp	r3, #0
   4f158:	movne	r3, #1
   4f15c:	moveq	r3, #0
   4f160:	uxtb	r3, r3
   4f164:	cmp	r3, #0
   4f168:	beq	4f258 <__assert_fail@plt+0x3cb6c>
   4f16c:	ldr	r3, [fp, #-8]
   4f170:	cmp	r3, #0
   4f174:	moveq	r3, #1
   4f178:	movne	r3, #0
   4f17c:	uxtb	r3, r3
   4f180:	cmp	r3, #0
   4f184:	beq	4f258 <__assert_fail@plt+0x3cb6c>
   4f188:	mov	r3, #0
   4f18c:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f190:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f194:	ldr	r1, [r3, #64]	; 0x40
   4f198:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f19c:	ldrb	r3, [r3, #4]
   4f1a0:	cmp	r3, #35	; 0x23
   4f1a4:	moveq	r3, #1
   4f1a8:	movne	r3, #0
   4f1ac:	uxtb	r3, r3
   4f1b0:	ldr	r2, [fp, #8]
   4f1b4:	str	r2, [sp, #4]
   4f1b8:	str	r3, [sp]
   4f1bc:	ldr	r3, [pc, #512]	; 4f3c4 <__assert_fail@plt+0x3ccd8>
   4f1c0:	ldr	r2, [pc, #512]	; 4f3c8 <__assert_fail@plt+0x3ccdc>
   4f1c4:	ldr	r0, [fp, #-16]
   4f1c8:	bl	51bcc <__assert_fail@plt+0x3f4e0>
   4f1cc:	str	r0, [fp, #-8]
   4f1d0:	ldr	r3, [fp, #8]
   4f1d4:	ldr	r3, [r3]
   4f1d8:	cmp	r3, #0
   4f1dc:	movne	r3, #1
   4f1e0:	moveq	r3, #0
   4f1e4:	uxtb	r3, r3
   4f1e8:	cmp	r3, #0
   4f1ec:	beq	4f260 <__assert_fail@plt+0x3cb74>
   4f1f0:	ldr	r3, [fp, #-8]
   4f1f4:	cmp	r3, #0
   4f1f8:	moveq	r3, #1
   4f1fc:	movne	r3, #0
   4f200:	uxtb	r3, r3
   4f204:	cmp	r3, #0
   4f208:	beq	4f260 <__assert_fail@plt+0x3cb74>
   4f20c:	mov	r3, #0
   4f210:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f214:	mov	r3, #0
   4f218:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f21c:	ldr	r3, [fp, #8]
   4f220:	mov	r2, #5
   4f224:	str	r2, [r3]
   4f228:	mov	r3, #0
   4f22c:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f230:	nop			; (mov r0, r0)
   4f234:	b	4f264 <__assert_fail@plt+0x3cb78>
   4f238:	nop			; (mov r0, r0)
   4f23c:	b	4f264 <__assert_fail@plt+0x3cb78>
   4f240:	nop			; (mov r0, r0)
   4f244:	b	4f264 <__assert_fail@plt+0x3cb78>
   4f248:	nop			; (mov r0, r0)
   4f24c:	b	4f264 <__assert_fail@plt+0x3cb78>
   4f250:	nop			; (mov r0, r0)
   4f254:	b	4f264 <__assert_fail@plt+0x3cb78>
   4f258:	nop			; (mov r0, r0)
   4f25c:	b	4f264 <__assert_fail@plt+0x3cb78>
   4f260:	nop			; (mov r0, r0)
   4f264:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4f268:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4f26c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4f270:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4f274:	b	4f368 <__assert_fail@plt+0x3cc7c>
   4f278:	ldr	r3, [fp, #8]
   4f27c:	str	r3, [sp, #4]
   4f280:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f284:	str	r3, [sp]
   4f288:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f28c:	ldr	r2, [fp, #-16]
   4f290:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4f294:	ldr	r0, [fp, #-8]
   4f298:	bl	4f590 <__assert_fail@plt+0x3cea4>
   4f29c:	str	r0, [fp, #-28]	; 0xffffffe4
   4f2a0:	ldr	r3, [fp, #8]
   4f2a4:	ldr	r3, [r3]
   4f2a8:	cmp	r3, #0
   4f2ac:	movne	r3, #1
   4f2b0:	moveq	r3, #0
   4f2b4:	uxtb	r3, r3
   4f2b8:	cmp	r3, #0
   4f2bc:	beq	4f300 <__assert_fail@plt+0x3cc14>
   4f2c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4f2c4:	cmp	r3, #0
   4f2c8:	moveq	r3, #1
   4f2cc:	movne	r3, #0
   4f2d0:	uxtb	r3, r3
   4f2d4:	cmp	r3, #0
   4f2d8:	beq	4f300 <__assert_fail@plt+0x3cc14>
   4f2dc:	ldr	r3, [fp, #-8]
   4f2e0:	cmp	r3, #0
   4f2e4:	beq	4f2f8 <__assert_fail@plt+0x3cc0c>
   4f2e8:	mov	r2, #0
   4f2ec:	ldr	r1, [pc, #216]	; 4f3cc <__assert_fail@plt+0x3cce0>
   4f2f0:	ldr	r0, [fp, #-8]
   4f2f4:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4f2f8:	mov	r3, #0
   4f2fc:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4f304:	str	r3, [fp, #-8]
   4f308:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f30c:	and	r3, r3, #16777216	; 0x1000000
   4f310:	cmp	r3, #0
   4f314:	beq	4f368 <__assert_fail@plt+0x3cc7c>
   4f318:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f31c:	ldrb	r3, [r3, #4]
   4f320:	cmp	r3, #11
   4f324:	beq	4f338 <__assert_fail@plt+0x3cc4c>
   4f328:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f32c:	ldrb	r3, [r3, #4]
   4f330:	cmp	r3, #23
   4f334:	bne	4f368 <__assert_fail@plt+0x3cc7c>
   4f338:	ldr	r3, [fp, #-8]
   4f33c:	cmp	r3, #0
   4f340:	beq	4f354 <__assert_fail@plt+0x3cc68>
   4f344:	mov	r2, #0
   4f348:	ldr	r1, [pc, #124]	; 4f3cc <__assert_fail@plt+0x3cce0>
   4f34c:	ldr	r0, [fp, #-8]
   4f350:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4f354:	ldr	r3, [fp, #8]
   4f358:	mov	r2, #13
   4f35c:	str	r2, [r3]
   4f360:	mov	r3, #0
   4f364:	b	4f3ac <__assert_fail@plt+0x3ccc0>
   4f368:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f36c:	ldrb	r3, [r3, #4]
   4f370:	cmp	r3, #11
   4f374:	beq	4f278 <__assert_fail@plt+0x3cb8c>
   4f378:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f37c:	ldrb	r3, [r3, #4]
   4f380:	cmp	r3, #18
   4f384:	beq	4f278 <__assert_fail@plt+0x3cb8c>
   4f388:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f38c:	ldrb	r3, [r3, #4]
   4f390:	cmp	r3, #19
   4f394:	beq	4f278 <__assert_fail@plt+0x3cb8c>
   4f398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f39c:	ldrb	r3, [r3, #4]
   4f3a0:	cmp	r3, #23
   4f3a4:	beq	4f278 <__assert_fail@plt+0x3cb8c>
   4f3a8:	ldr	r3, [fp, #-8]
   4f3ac:	mov	r0, r3
   4f3b0:	sub	sp, fp, #4
   4f3b4:	pop	{fp, pc}
   4f3b8:	andeq	r0, r0, pc, lsl #6
   4f3bc:	ldrdeq	sl, [r6], -ip
   4f3c0:	andeq	sl, r6, r0, ror #29
   4f3c4:	andeq	sl, r6, r8, ror #29
   4f3c8:	andeq	sl, r6, ip, ror #29
   4f3cc:	andeq	r2, r5, ip, ror #5
   4f3d0:	push	{fp, lr}
   4f3d4:	add	fp, sp, #4
   4f3d8:	sub	sp, sp, #40	; 0x28
   4f3dc:	str	r0, [fp, #-24]	; 0xffffffe8
   4f3e0:	str	r1, [fp, #-28]	; 0xffffffe4
   4f3e4:	str	r2, [fp, #-32]	; 0xffffffe0
   4f3e8:	str	r3, [fp, #-36]	; 0xffffffdc
   4f3ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4f3f0:	ldr	r3, [r3]
   4f3f4:	str	r3, [fp, #-12]
   4f3f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4f3fc:	ldr	r3, [r3, #24]
   4f400:	add	r1, r3, #1
   4f404:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4f408:	str	r1, [r2, #24]
   4f40c:	str	r3, [fp, #-16]
   4f410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4f414:	orr	r3, r3, #8388608	; 0x800000
   4f418:	mov	r2, r3
   4f41c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4f420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f424:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4f428:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f42c:	ldrb	r3, [r3, #4]
   4f430:	cmp	r3, #9
   4f434:	bne	4f444 <__assert_fail@plt+0x3cd58>
   4f438:	mov	r3, #0
   4f43c:	str	r3, [fp, #-8]
   4f440:	b	4f4fc <__assert_fail@plt+0x3ce10>
   4f444:	ldr	r3, [fp, #8]
   4f448:	str	r3, [sp, #4]
   4f44c:	ldr	r3, [fp, #4]
   4f450:	str	r3, [sp]
   4f454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4f458:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4f45c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f464:	bl	4e5d0 <__assert_fail@plt+0x3bee4>
   4f468:	str	r0, [fp, #-8]
   4f46c:	ldr	r3, [fp, #8]
   4f470:	ldr	r3, [r3]
   4f474:	cmp	r3, #0
   4f478:	moveq	r3, #1
   4f47c:	movne	r3, #0
   4f480:	uxtb	r3, r3
   4f484:	cmp	r3, #0
   4f488:	beq	4f4d4 <__assert_fail@plt+0x3cde8>
   4f48c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f490:	ldrb	r3, [r3, #4]
   4f494:	cmp	r3, #9
   4f498:	movne	r3, #1
   4f49c:	moveq	r3, #0
   4f4a0:	uxtb	r3, r3
   4f4a4:	cmp	r3, #0
   4f4a8:	beq	4f4d4 <__assert_fail@plt+0x3cde8>
   4f4ac:	ldr	r3, [fp, #-8]
   4f4b0:	cmp	r3, #0
   4f4b4:	beq	4f4c8 <__assert_fail@plt+0x3cddc>
   4f4b8:	mov	r2, #0
   4f4bc:	ldr	r1, [pc, #200]	; 4f58c <__assert_fail@plt+0x3cea0>
   4f4c0:	ldr	r0, [fp, #-8]
   4f4c4:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4f4c8:	ldr	r3, [fp, #8]
   4f4cc:	mov	r2, #8
   4f4d0:	str	r2, [r3]
   4f4d4:	ldr	r3, [fp, #8]
   4f4d8:	ldr	r3, [r3]
   4f4dc:	cmp	r3, #0
   4f4e0:	movne	r3, #1
   4f4e4:	moveq	r3, #0
   4f4e8:	uxtb	r3, r3
   4f4ec:	cmp	r3, #0
   4f4f0:	beq	4f4fc <__assert_fail@plt+0x3ce10>
   4f4f4:	mov	r3, #0
   4f4f8:	b	4f580 <__assert_fail@plt+0x3ce94>
   4f4fc:	ldr	r3, [fp, #-16]
   4f500:	cmp	r3, #8
   4f504:	bhi	4f528 <__assert_fail@plt+0x3ce3c>
   4f508:	ldr	r3, [fp, #-12]
   4f50c:	ldr	r3, [r3, #84]	; 0x54
   4f510:	mov	r1, #1
   4f514:	ldr	r2, [fp, #-16]
   4f518:	lsl	r2, r1, r2
   4f51c:	orr	r2, r3, r2
   4f520:	ldr	r3, [fp, #-12]
   4f524:	str	r2, [r3, #84]	; 0x54
   4f528:	mov	r3, #17
   4f52c:	mov	r2, #0
   4f530:	ldr	r1, [fp, #-8]
   4f534:	ldr	r0, [fp, #-12]
   4f538:	bl	5202c <__assert_fail@plt+0x3f940>
   4f53c:	str	r0, [fp, #-8]
   4f540:	ldr	r3, [fp, #-8]
   4f544:	cmp	r3, #0
   4f548:	moveq	r3, #1
   4f54c:	movne	r3, #0
   4f550:	uxtb	r3, r3
   4f554:	cmp	r3, #0
   4f558:	beq	4f570 <__assert_fail@plt+0x3ce84>
   4f55c:	ldr	r3, [fp, #8]
   4f560:	mov	r2, #12
   4f564:	str	r2, [r3]
   4f568:	mov	r3, #0
   4f56c:	b	4f580 <__assert_fail@plt+0x3ce94>
   4f570:	ldr	r2, [fp, #-16]
   4f574:	ldr	r3, [fp, #-8]
   4f578:	str	r2, [r3, #20]
   4f57c:	ldr	r3, [fp, #-8]
   4f580:	mov	r0, r3
   4f584:	sub	sp, fp, #4
   4f588:	pop	{fp, pc}
   4f58c:	andeq	r2, r5, ip, ror #5
   4f590:	push	{fp, lr}
   4f594:	add	fp, sp, #4
   4f598:	sub	sp, sp, #56	; 0x38
   4f59c:	str	r0, [fp, #-48]	; 0xffffffd0
   4f5a0:	str	r1, [fp, #-52]	; 0xffffffcc
   4f5a4:	str	r2, [fp, #-56]	; 0xffffffc8
   4f5a8:	str	r3, [fp, #-60]	; 0xffffffc4
   4f5ac:	mov	r3, #0
   4f5b0:	str	r3, [fp, #-8]
   4f5b4:	mov	r3, #0
   4f5b8:	str	r3, [fp, #-12]
   4f5bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4f5c0:	ldr	r3, [r3, #40]	; 0x28
   4f5c4:	str	r3, [fp, #-28]	; 0xffffffe4
   4f5c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   4f5cc:	sub	r3, fp, #40	; 0x28
   4f5d0:	ldm	r2, {r0, r1}
   4f5d4:	stm	r3, {r0, r1}
   4f5d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f5dc:	ldrb	r3, [r3, #4]
   4f5e0:	cmp	r3, #23
   4f5e4:	bne	4f864 <__assert_fail@plt+0x3d178>
   4f5e8:	mov	r3, #0
   4f5ec:	str	r3, [fp, #-24]	; 0xffffffe8
   4f5f0:	ldr	r2, [fp, #4]
   4f5f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   4f5f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4f5fc:	bl	51eac <__assert_fail@plt+0x3f7c0>
   4f600:	str	r0, [fp, #-20]	; 0xffffffec
   4f604:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f608:	cmn	r3, #1
   4f60c:	bne	4f650 <__assert_fail@plt+0x3cf64>
   4f610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f614:	ldrb	r3, [r3, #4]
   4f618:	cmp	r3, #1
   4f61c:	bne	4f63c <__assert_fail@plt+0x3cf50>
   4f620:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f624:	ldrb	r3, [r3]
   4f628:	cmp	r3, #44	; 0x2c
   4f62c:	bne	4f63c <__assert_fail@plt+0x3cf50>
   4f630:	mov	r3, #0
   4f634:	str	r3, [fp, #-20]	; 0xffffffec
   4f638:	b	4f650 <__assert_fail@plt+0x3cf64>
   4f63c:	ldr	r3, [fp, #8]
   4f640:	mov	r2, #10
   4f644:	str	r2, [r3]
   4f648:	mov	r3, #0
   4f64c:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f650:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f654:	cmn	r3, #2
   4f658:	movne	r3, #1
   4f65c:	moveq	r3, #0
   4f660:	uxtb	r3, r3
   4f664:	cmp	r3, #0
   4f668:	beq	4f6c4 <__assert_fail@plt+0x3cfd8>
   4f66c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f670:	ldrb	r3, [r3, #4]
   4f674:	cmp	r3, #24
   4f678:	beq	4f6bc <__assert_fail@plt+0x3cfd0>
   4f67c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f680:	ldrb	r3, [r3, #4]
   4f684:	cmp	r3, #1
   4f688:	bne	4f6b4 <__assert_fail@plt+0x3cfc8>
   4f68c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f690:	ldrb	r3, [r3]
   4f694:	cmp	r3, #44	; 0x2c
   4f698:	bne	4f6b4 <__assert_fail@plt+0x3cfc8>
   4f69c:	ldr	r2, [fp, #4]
   4f6a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   4f6a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4f6a8:	bl	51eac <__assert_fail@plt+0x3f7c0>
   4f6ac:	mov	r3, r0
   4f6b0:	b	4f6c0 <__assert_fail@plt+0x3cfd4>
   4f6b4:	mvn	r3, #1
   4f6b8:	b	4f6c0 <__assert_fail@plt+0x3cfd4>
   4f6bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f6c0:	str	r3, [fp, #-24]	; 0xffffffe8
   4f6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f6c8:	cmn	r3, #2
   4f6cc:	moveq	r3, #1
   4f6d0:	movne	r3, #0
   4f6d4:	uxtb	r3, r3
   4f6d8:	cmp	r3, #0
   4f6dc:	bne	4f6fc <__assert_fail@plt+0x3d010>
   4f6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f6e4:	cmn	r3, #2
   4f6e8:	moveq	r3, #1
   4f6ec:	movne	r3, #0
   4f6f0:	uxtb	r3, r3
   4f6f4:	cmp	r3, #0
   4f6f8:	beq	4f784 <__assert_fail@plt+0x3d098>
   4f6fc:	ldr	r3, [fp, #4]
   4f700:	and	r3, r3, #2097152	; 0x200000
   4f704:	cmp	r3, #0
   4f708:	moveq	r3, #1
   4f70c:	movne	r3, #0
   4f710:	uxtb	r3, r3
   4f714:	cmp	r3, #0
   4f718:	beq	4f750 <__assert_fail@plt+0x3d064>
   4f71c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f720:	ldrb	r3, [r3, #4]
   4f724:	cmp	r3, #2
   4f728:	bne	4f73c <__assert_fail@plt+0x3d050>
   4f72c:	ldr	r3, [fp, #8]
   4f730:	mov	r2, #9
   4f734:	str	r2, [r3]
   4f738:	b	4f748 <__assert_fail@plt+0x3d05c>
   4f73c:	ldr	r3, [fp, #8]
   4f740:	mov	r2, #10
   4f744:	str	r2, [r3]
   4f748:	mov	r3, #0
   4f74c:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f750:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4f754:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4f758:	str	r2, [r3, #40]	; 0x28
   4f75c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f760:	mov	r2, r3
   4f764:	sub	r3, fp, #40	; 0x28
   4f768:	ldm	r3, {r0, r1}
   4f76c:	stm	r2, {r0, r1}
   4f770:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f774:	mov	r2, #1
   4f778:	strb	r2, [r3, #4]
   4f77c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4f780:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f788:	cmn	r3, #1
   4f78c:	movne	r3, #1
   4f790:	moveq	r3, #0
   4f794:	uxtb	r3, r3
   4f798:	cmp	r3, #0
   4f79c:	beq	4f7c8 <__assert_fail@plt+0x3d0dc>
   4f7a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4f7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f7a8:	cmp	r2, r3
   4f7ac:	movgt	r3, #1
   4f7b0:	movle	r3, #0
   4f7b4:	uxtb	r3, r3
   4f7b8:	cmp	r3, #0
   4f7bc:	beq	4f7c8 <__assert_fail@plt+0x3d0dc>
   4f7c0:	mov	r3, #1
   4f7c4:	b	4f7cc <__assert_fail@plt+0x3d0e0>
   4f7c8:	mov	r3, #0
   4f7cc:	cmp	r3, #0
   4f7d0:	bne	4f7f4 <__assert_fail@plt+0x3d108>
   4f7d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f7d8:	ldrb	r3, [r3, #4]
   4f7dc:	cmp	r3, #24
   4f7e0:	movne	r3, #1
   4f7e4:	moveq	r3, #0
   4f7e8:	uxtb	r3, r3
   4f7ec:	cmp	r3, #0
   4f7f0:	beq	4f808 <__assert_fail@plt+0x3d11c>
   4f7f4:	ldr	r3, [fp, #8]
   4f7f8:	mov	r2, #10
   4f7fc:	str	r2, [r3]
   4f800:	mov	r3, #0
   4f804:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f80c:	cmn	r3, #1
   4f810:	bne	4f830 <__assert_fail@plt+0x3d144>
   4f814:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f818:	ldr	r2, [pc, #924]	; 4fbbc <__assert_fail@plt+0x3d4d0>
   4f81c:	cmp	r3, r2
   4f820:	movgt	r3, #1
   4f824:	movle	r3, #0
   4f828:	uxtb	r3, r3
   4f82c:	b	4f848 <__assert_fail@plt+0x3d15c>
   4f830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f834:	ldr	r2, [pc, #896]	; 4fbbc <__assert_fail@plt+0x3d4d0>
   4f838:	cmp	r3, r2
   4f83c:	movgt	r3, #1
   4f840:	movle	r3, #0
   4f844:	uxtb	r3, r3
   4f848:	cmp	r3, #0
   4f84c:	beq	4f8a0 <__assert_fail@plt+0x3d1b4>
   4f850:	ldr	r3, [fp, #8]
   4f854:	mov	r2, #15
   4f858:	str	r2, [r3]
   4f85c:	mov	r3, #0
   4f860:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f864:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f868:	ldrb	r3, [r3, #4]
   4f86c:	cmp	r3, #18
   4f870:	moveq	r3, #1
   4f874:	movne	r3, #0
   4f878:	uxtb	r3, r3
   4f87c:	str	r3, [fp, #-20]	; 0xffffffec
   4f880:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4f884:	ldrb	r3, [r3, #4]
   4f888:	cmp	r3, #19
   4f88c:	bne	4f898 <__assert_fail@plt+0x3d1ac>
   4f890:	mov	r3, #1
   4f894:	b	4f89c <__assert_fail@plt+0x3d1b0>
   4f898:	mvn	r3, #0
   4f89c:	str	r3, [fp, #-24]	; 0xffffffe8
   4f8a0:	ldr	r2, [fp, #4]
   4f8a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   4f8a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4f8ac:	bl	4d440 <__assert_fail@plt+0x3ad54>
   4f8b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4f8b4:	cmp	r3, #0
   4f8b8:	moveq	r3, #1
   4f8bc:	movne	r3, #0
   4f8c0:	uxtb	r3, r3
   4f8c4:	cmp	r3, #0
   4f8c8:	beq	4f8d4 <__assert_fail@plt+0x3d1e8>
   4f8cc:	mov	r3, #0
   4f8d0:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f8d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f8d8:	cmp	r3, #0
   4f8dc:	moveq	r3, #1
   4f8e0:	movne	r3, #0
   4f8e4:	uxtb	r3, r3
   4f8e8:	cmp	r3, #0
   4f8ec:	beq	4f924 <__assert_fail@plt+0x3d238>
   4f8f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f8f4:	cmp	r3, #0
   4f8f8:	moveq	r3, #1
   4f8fc:	movne	r3, #0
   4f900:	uxtb	r3, r3
   4f904:	cmp	r3, #0
   4f908:	beq	4f924 <__assert_fail@plt+0x3d238>
   4f90c:	mov	r2, #0
   4f910:	ldr	r1, [pc, #680]	; 4fbc0 <__assert_fail@plt+0x3d4d4>
   4f914:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4f918:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4f91c:	mov	r3, #0
   4f920:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f924:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f928:	cmp	r3, #0
   4f92c:	movgt	r3, #1
   4f930:	movle	r3, #0
   4f934:	uxtb	r3, r3
   4f938:	cmp	r3, #0
   4f93c:	beq	4fa20 <__assert_fail@plt+0x3d334>
   4f940:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4f944:	str	r3, [fp, #-8]
   4f948:	mov	r3, #2
   4f94c:	str	r3, [fp, #-16]
   4f950:	b	4f9c0 <__assert_fail@plt+0x3d2d4>
   4f954:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4f958:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4f95c:	bl	52320 <__assert_fail@plt+0x3fc34>
   4f960:	str	r0, [fp, #-48]	; 0xffffffd0
   4f964:	mov	r3, #16
   4f968:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4f96c:	ldr	r1, [fp, #-8]
   4f970:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4f974:	bl	5202c <__assert_fail@plt+0x3f940>
   4f978:	str	r0, [fp, #-8]
   4f97c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4f980:	cmp	r3, #0
   4f984:	moveq	r3, #1
   4f988:	movne	r3, #0
   4f98c:	uxtb	r3, r3
   4f990:	cmp	r3, #0
   4f994:	bne	4fba0 <__assert_fail@plt+0x3d4b4>
   4f998:	ldr	r3, [fp, #-8]
   4f99c:	cmp	r3, #0
   4f9a0:	moveq	r3, #1
   4f9a4:	movne	r3, #0
   4f9a8:	uxtb	r3, r3
   4f9ac:	cmp	r3, #0
   4f9b0:	bne	4fba0 <__assert_fail@plt+0x3d4b4>
   4f9b4:	ldr	r3, [fp, #-16]
   4f9b8:	add	r3, r3, #1
   4f9bc:	str	r3, [fp, #-16]
   4f9c0:	ldr	r2, [fp, #-16]
   4f9c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f9c8:	cmp	r2, r3
   4f9cc:	ble	4f954 <__assert_fail@plt+0x3d268>
   4f9d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4f9d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f9d8:	cmp	r2, r3
   4f9dc:	bne	4f9e8 <__assert_fail@plt+0x3d2fc>
   4f9e0:	ldr	r3, [fp, #-8]
   4f9e4:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4f9e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4f9ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4f9f0:	bl	52320 <__assert_fail@plt+0x3fc34>
   4f9f4:	str	r0, [fp, #-48]	; 0xffffffd0
   4f9f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4f9fc:	cmp	r3, #0
   4fa00:	moveq	r3, #1
   4fa04:	movne	r3, #0
   4fa08:	uxtb	r3, r3
   4fa0c:	cmp	r3, #0
   4fa10:	bne	4fb8c <__assert_fail@plt+0x3d4a0>
   4fa14:	ldr	r3, [fp, #-8]
   4fa18:	str	r3, [fp, #-12]
   4fa1c:	b	4fa28 <__assert_fail@plt+0x3d33c>
   4fa20:	mov	r3, #0
   4fa24:	str	r3, [fp, #-12]
   4fa28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4fa2c:	ldrb	r3, [r3, #24]
   4fa30:	cmp	r3, #17
   4fa34:	bne	4fa58 <__assert_fail@plt+0x3d36c>
   4fa38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4fa3c:	ldr	r3, [r3, #20]
   4fa40:	str	r3, [fp, #-32]	; 0xffffffe0
   4fa44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4fa48:	mov	r2, r3
   4fa4c:	ldr	r1, [pc, #368]	; 4fbc4 <__assert_fail@plt+0x3d4d8>
   4fa50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4fa54:	bl	4b9a0 <__assert_fail@plt+0x392b4>
   4fa58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4fa5c:	cmn	r3, #1
   4fa60:	bne	4fa6c <__assert_fail@plt+0x3d380>
   4fa64:	mov	r3, #11
   4fa68:	b	4fa70 <__assert_fail@plt+0x3d384>
   4fa6c:	mov	r3, #10
   4fa70:	mov	r2, #0
   4fa74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   4fa78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4fa7c:	bl	5202c <__assert_fail@plt+0x3f940>
   4fa80:	str	r0, [fp, #-8]
   4fa84:	ldr	r3, [fp, #-8]
   4fa88:	cmp	r3, #0
   4fa8c:	moveq	r3, #1
   4fa90:	movne	r3, #0
   4fa94:	uxtb	r3, r3
   4fa98:	cmp	r3, #0
   4fa9c:	bne	4fb94 <__assert_fail@plt+0x3d4a8>
   4faa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4faa4:	add	r3, r3, #2
   4faa8:	str	r3, [fp, #-16]
   4faac:	b	4fb50 <__assert_fail@plt+0x3d464>
   4fab0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4fab4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4fab8:	bl	52320 <__assert_fail@plt+0x3fc34>
   4fabc:	str	r0, [fp, #-48]	; 0xffffffd0
   4fac0:	mov	r3, #16
   4fac4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4fac8:	ldr	r1, [fp, #-8]
   4facc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4fad0:	bl	5202c <__assert_fail@plt+0x3f940>
   4fad4:	str	r0, [fp, #-8]
   4fad8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4fadc:	cmp	r3, #0
   4fae0:	moveq	r3, #1
   4fae4:	movne	r3, #0
   4fae8:	uxtb	r3, r3
   4faec:	cmp	r3, #0
   4faf0:	bne	4fba0 <__assert_fail@plt+0x3d4b4>
   4faf4:	ldr	r3, [fp, #-8]
   4faf8:	cmp	r3, #0
   4fafc:	moveq	r3, #1
   4fb00:	movne	r3, #0
   4fb04:	uxtb	r3, r3
   4fb08:	cmp	r3, #0
   4fb0c:	bne	4fba0 <__assert_fail@plt+0x3d4b4>
   4fb10:	mov	r3, #10
   4fb14:	mov	r2, #0
   4fb18:	ldr	r1, [fp, #-8]
   4fb1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4fb20:	bl	5202c <__assert_fail@plt+0x3f940>
   4fb24:	str	r0, [fp, #-8]
   4fb28:	ldr	r3, [fp, #-8]
   4fb2c:	cmp	r3, #0
   4fb30:	moveq	r3, #1
   4fb34:	movne	r3, #0
   4fb38:	uxtb	r3, r3
   4fb3c:	cmp	r3, #0
   4fb40:	bne	4fb9c <__assert_fail@plt+0x3d4b0>
   4fb44:	ldr	r3, [fp, #-16]
   4fb48:	add	r3, r3, #1
   4fb4c:	str	r3, [fp, #-16]
   4fb50:	ldr	r2, [fp, #-16]
   4fb54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4fb58:	cmp	r2, r3
   4fb5c:	ble	4fab0 <__assert_fail@plt+0x3d3c4>
   4fb60:	ldr	r3, [fp, #-12]
   4fb64:	cmp	r3, #0
   4fb68:	beq	4fb84 <__assert_fail@plt+0x3d498>
   4fb6c:	mov	r3, #16
   4fb70:	ldr	r2, [fp, #-8]
   4fb74:	ldr	r1, [fp, #-12]
   4fb78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4fb7c:	bl	5202c <__assert_fail@plt+0x3f940>
   4fb80:	str	r0, [fp, #-8]
   4fb84:	ldr	r3, [fp, #-8]
   4fb88:	b	4fbb0 <__assert_fail@plt+0x3d4c4>
   4fb8c:	nop			; (mov r0, r0)
   4fb90:	b	4fba0 <__assert_fail@plt+0x3d4b4>
   4fb94:	nop			; (mov r0, r0)
   4fb98:	b	4fba0 <__assert_fail@plt+0x3d4b4>
   4fb9c:	nop			; (mov r0, r0)
   4fba0:	ldr	r3, [fp, #8]
   4fba4:	mov	r2, #12
   4fba8:	str	r2, [r3]
   4fbac:	mov	r3, #0
   4fbb0:	mov	r0, r3
   4fbb4:	sub	sp, fp, #4
   4fbb8:	pop	{fp, pc}
   4fbbc:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   4fbc0:	andeq	r2, r5, ip, ror #5
   4fbc4:	strdeq	r2, [r5], -r8
   4fbc8:	push	{fp, lr}
   4fbcc:	add	fp, sp, #4
   4fbd0:	sub	sp, sp, #8
   4fbd4:	mov	r3, r0
   4fbd8:	str	r1, [fp, #-12]
   4fbdc:	strb	r3, [fp, #-5]
   4fbe0:	ldr	r3, [fp, #-12]
   4fbe4:	ldr	r3, [r3, #92]	; 0x5c
   4fbe8:	cmp	r3, #1
   4fbec:	ble	4fc04 <__assert_fail@plt+0x3d518>
   4fbf0:	ldrb	r3, [fp, #-5]
   4fbf4:	mov	r0, r3
   4fbf8:	bl	12470 <btowc@plt>
   4fbfc:	mov	r3, r0
   4fc00:	b	4fc08 <__assert_fail@plt+0x3d51c>
   4fc04:	ldrb	r3, [fp, #-5]
   4fc08:	mov	r0, r3
   4fc0c:	sub	sp, fp, #4
   4fc10:	pop	{fp, pc}
   4fc14:	push	{fp, lr}
   4fc18:	add	fp, sp, #4
   4fc1c:	sub	sp, sp, #48	; 0x30
   4fc20:	str	r0, [fp, #-40]	; 0xffffffd8
   4fc24:	str	r1, [fp, #-44]	; 0xffffffd4
   4fc28:	str	r2, [fp, #-48]	; 0xffffffd0
   4fc2c:	str	r3, [fp, #-52]	; 0xffffffcc
   4fc30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fc34:	ldr	r3, [r3]
   4fc38:	cmp	r3, #2
   4fc3c:	moveq	r3, #1
   4fc40:	movne	r3, #0
   4fc44:	uxtb	r3, r3
   4fc48:	cmp	r3, #0
   4fc4c:	bne	4fc70 <__assert_fail@plt+0x3d584>
   4fc50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fc54:	ldr	r3, [r3]
   4fc58:	cmp	r3, #4
   4fc5c:	moveq	r3, #1
   4fc60:	movne	r3, #0
   4fc64:	uxtb	r3, r3
   4fc68:	cmp	r3, #0
   4fc6c:	beq	4fc78 <__assert_fail@plt+0x3d58c>
   4fc70:	mov	r3, #1
   4fc74:	b	4fc7c <__assert_fail@plt+0x3d590>
   4fc78:	mov	r3, #0
   4fc7c:	cmp	r3, #0
   4fc80:	bne	4fca4 <__assert_fail@plt+0x3d5b8>
   4fc84:	ldr	r3, [fp, #4]
   4fc88:	ldr	r3, [r3]
   4fc8c:	cmp	r3, #2
   4fc90:	moveq	r3, #1
   4fc94:	movne	r3, #0
   4fc98:	uxtb	r3, r3
   4fc9c:	cmp	r3, #0
   4fca0:	beq	4fcac <__assert_fail@plt+0x3d5c0>
   4fca4:	mov	r3, #1
   4fca8:	b	4fcb0 <__assert_fail@plt+0x3d5c4>
   4fcac:	mov	r3, #0
   4fcb0:	cmp	r3, #0
   4fcb4:	bne	4fcd8 <__assert_fail@plt+0x3d5ec>
   4fcb8:	ldr	r3, [fp, #4]
   4fcbc:	ldr	r3, [r3]
   4fcc0:	cmp	r3, #4
   4fcc4:	moveq	r3, #1
   4fcc8:	movne	r3, #0
   4fccc:	uxtb	r3, r3
   4fcd0:	cmp	r3, #0
   4fcd4:	beq	4fce0 <__assert_fail@plt+0x3d5f4>
   4fcd8:	mov	r3, #11
   4fcdc:	b	500cc <__assert_fail@plt+0x3d9e0>
   4fce0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fce4:	ldr	r3, [r3]
   4fce8:	cmp	r3, #3
   4fcec:	moveq	r3, #1
   4fcf0:	movne	r3, #0
   4fcf4:	uxtb	r3, r3
   4fcf8:	cmp	r3, #0
   4fcfc:	beq	4fd34 <__assert_fail@plt+0x3d648>
   4fd00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fd04:	ldr	r3, [r3, #4]
   4fd08:	mov	r0, r3
   4fd0c:	bl	123bc <strlen@plt>
   4fd10:	mov	r3, r0
   4fd14:	cmp	r3, #1
   4fd18:	movhi	r3, #1
   4fd1c:	movls	r3, #0
   4fd20:	uxtb	r3, r3
   4fd24:	cmp	r3, #0
   4fd28:	beq	4fd34 <__assert_fail@plt+0x3d648>
   4fd2c:	mov	r3, #1
   4fd30:	b	4fd38 <__assert_fail@plt+0x3d64c>
   4fd34:	mov	r3, #0
   4fd38:	cmp	r3, #0
   4fd3c:	bne	4fda0 <__assert_fail@plt+0x3d6b4>
   4fd40:	ldr	r3, [fp, #4]
   4fd44:	ldr	r3, [r3]
   4fd48:	cmp	r3, #3
   4fd4c:	moveq	r3, #1
   4fd50:	movne	r3, #0
   4fd54:	uxtb	r3, r3
   4fd58:	cmp	r3, #0
   4fd5c:	beq	4fd94 <__assert_fail@plt+0x3d6a8>
   4fd60:	ldr	r3, [fp, #4]
   4fd64:	ldr	r3, [r3, #4]
   4fd68:	mov	r0, r3
   4fd6c:	bl	123bc <strlen@plt>
   4fd70:	mov	r3, r0
   4fd74:	cmp	r3, #1
   4fd78:	movhi	r3, #1
   4fd7c:	movls	r3, #0
   4fd80:	uxtb	r3, r3
   4fd84:	cmp	r3, #0
   4fd88:	beq	4fd94 <__assert_fail@plt+0x3d6a8>
   4fd8c:	mov	r3, #1
   4fd90:	b	4fd98 <__assert_fail@plt+0x3d6ac>
   4fd94:	mov	r3, #0
   4fd98:	cmp	r3, #0
   4fd9c:	beq	4fda8 <__assert_fail@plt+0x3d6bc>
   4fda0:	mov	r3, #3
   4fda4:	b	500cc <__assert_fail@plt+0x3d9e0>
   4fda8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fdac:	ldr	r3, [r3]
   4fdb0:	cmp	r3, #0
   4fdb4:	bne	4fdc4 <__assert_fail@plt+0x3d6d8>
   4fdb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fdbc:	ldrb	r3, [r3, #4]
   4fdc0:	b	4fde8 <__assert_fail@plt+0x3d6fc>
   4fdc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fdc8:	ldr	r3, [r3]
   4fdcc:	cmp	r3, #3
   4fdd0:	bne	4fde4 <__assert_fail@plt+0x3d6f8>
   4fdd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fdd8:	ldr	r3, [r3, #4]
   4fddc:	ldrb	r3, [r3]
   4fde0:	b	4fde8 <__assert_fail@plt+0x3d6fc>
   4fde4:	mov	r3, #0
   4fde8:	str	r3, [fp, #-12]
   4fdec:	ldr	r3, [fp, #4]
   4fdf0:	ldr	r3, [r3]
   4fdf4:	cmp	r3, #0
   4fdf8:	bne	4fe08 <__assert_fail@plt+0x3d71c>
   4fdfc:	ldr	r3, [fp, #4]
   4fe00:	ldrb	r3, [r3, #4]
   4fe04:	b	4fe2c <__assert_fail@plt+0x3d740>
   4fe08:	ldr	r3, [fp, #4]
   4fe0c:	ldr	r3, [r3]
   4fe10:	cmp	r3, #3
   4fe14:	bne	4fe28 <__assert_fail@plt+0x3d73c>
   4fe18:	ldr	r3, [fp, #4]
   4fe1c:	ldr	r3, [r3, #4]
   4fe20:	ldrb	r3, [r3]
   4fe24:	b	4fe2c <__assert_fail@plt+0x3d740>
   4fe28:	mov	r3, #0
   4fe2c:	str	r3, [fp, #-16]
   4fe30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fe34:	ldr	r3, [r3]
   4fe38:	cmp	r3, #0
   4fe3c:	beq	4fe50 <__assert_fail@plt+0x3d764>
   4fe40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fe44:	ldr	r3, [r3]
   4fe48:	cmp	r3, #3
   4fe4c:	bne	4fe6c <__assert_fail@plt+0x3d780>
   4fe50:	ldr	r3, [fp, #-12]
   4fe54:	uxtb	r3, r3
   4fe58:	ldr	r1, [fp, #8]
   4fe5c:	mov	r0, r3
   4fe60:	bl	4fbc8 <__assert_fail@plt+0x3d4dc>
   4fe64:	mov	r3, r0
   4fe68:	b	4fe74 <__assert_fail@plt+0x3d788>
   4fe6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4fe70:	ldr	r3, [r3, #4]
   4fe74:	str	r3, [fp, #-20]	; 0xffffffec
   4fe78:	ldr	r3, [fp, #4]
   4fe7c:	ldr	r3, [r3]
   4fe80:	cmp	r3, #0
   4fe84:	beq	4fe98 <__assert_fail@plt+0x3d7ac>
   4fe88:	ldr	r3, [fp, #4]
   4fe8c:	ldr	r3, [r3]
   4fe90:	cmp	r3, #3
   4fe94:	bne	4feb4 <__assert_fail@plt+0x3d7c8>
   4fe98:	ldr	r3, [fp, #-16]
   4fe9c:	uxtb	r3, r3
   4fea0:	ldr	r1, [fp, #8]
   4fea4:	mov	r0, r3
   4fea8:	bl	4fbc8 <__assert_fail@plt+0x3d4dc>
   4feac:	mov	r3, r0
   4feb0:	b	4febc <__assert_fail@plt+0x3d7d0>
   4feb4:	ldr	r3, [fp, #4]
   4feb8:	ldr	r3, [r3, #4]
   4febc:	str	r3, [fp, #-24]	; 0xffffffe8
   4fec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4fec4:	cmn	r3, #1
   4fec8:	beq	4fed8 <__assert_fail@plt+0x3d7ec>
   4fecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4fed0:	cmn	r3, #1
   4fed4:	bne	4fee0 <__assert_fail@plt+0x3d7f4>
   4fed8:	mov	r3, #3
   4fedc:	b	500cc <__assert_fail@plt+0x3d9e0>
   4fee0:	ldr	r3, [fp, #12]
   4fee4:	and	r3, r3, #65536	; 0x10000
   4fee8:	cmp	r3, #0
   4feec:	movne	r3, #1
   4fef0:	moveq	r3, #0
   4fef4:	uxtb	r3, r3
   4fef8:	cmp	r3, #0
   4fefc:	beq	4ff28 <__assert_fail@plt+0x3d83c>
   4ff00:	ldr	r2, [fp, #-20]	; 0xffffffec
   4ff04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ff08:	cmp	r2, r3
   4ff0c:	movhi	r3, #1
   4ff10:	movls	r3, #0
   4ff14:	uxtb	r3, r3
   4ff18:	cmp	r3, #0
   4ff1c:	beq	4ff28 <__assert_fail@plt+0x3d83c>
   4ff20:	mov	r3, #11
   4ff24:	b	500cc <__assert_fail@plt+0x3d9e0>
   4ff28:	ldr	r3, [fp, #8]
   4ff2c:	ldr	r3, [r3, #92]	; 0x5c
   4ff30:	cmp	r3, #1
   4ff34:	ble	50074 <__assert_fail@plt+0x3d988>
   4ff38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4ff3c:	ldr	r2, [r3]
   4ff40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ff44:	ldr	r3, [r3, #32]
   4ff48:	cmp	r2, r3
   4ff4c:	moveq	r3, #1
   4ff50:	movne	r3, #0
   4ff54:	uxtb	r3, r3
   4ff58:	cmp	r3, #0
   4ff5c:	beq	50028 <__assert_fail@plt+0x3d93c>
   4ff60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ff64:	ldr	r3, [r3, #32]
   4ff68:	lsl	r3, r3, #1
   4ff6c:	add	r3, r3, #1
   4ff70:	str	r3, [fp, #-28]	; 0xffffffe4
   4ff74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ff78:	ldr	r2, [r3, #4]
   4ff7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ff80:	lsl	r3, r3, #2
   4ff84:	mov	r1, r3
   4ff88:	mov	r0, r2
   4ff8c:	bl	43d30 <__assert_fail@plt+0x31644>
   4ff90:	str	r0, [fp, #-32]	; 0xffffffe0
   4ff94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ff98:	ldr	r2, [r3, #8]
   4ff9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ffa0:	lsl	r3, r3, #2
   4ffa4:	mov	r1, r3
   4ffa8:	mov	r0, r2
   4ffac:	bl	43d30 <__assert_fail@plt+0x31644>
   4ffb0:	str	r0, [fp, #-36]	; 0xffffffdc
   4ffb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ffb8:	cmp	r3, #0
   4ffbc:	moveq	r3, #1
   4ffc0:	movne	r3, #0
   4ffc4:	uxtb	r3, r3
   4ffc8:	cmp	r3, #0
   4ffcc:	bne	4ffec <__assert_fail@plt+0x3d900>
   4ffd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ffd4:	cmp	r3, #0
   4ffd8:	moveq	r3, #1
   4ffdc:	movne	r3, #0
   4ffe0:	uxtb	r3, r3
   4ffe4:	cmp	r3, #0
   4ffe8:	beq	50004 <__assert_fail@plt+0x3d918>
   4ffec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4fff0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4fff4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4fff8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   4fffc:	mov	r3, #12
   50000:	b	500cc <__assert_fail@plt+0x3d9e0>
   50004:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50008:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5000c:	str	r2, [r3, #4]
   50010:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50014:	ldr	r2, [fp, #-36]	; 0xffffffdc
   50018:	str	r2, [r3, #8]
   5001c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50020:	ldr	r2, [fp, #-28]	; 0xffffffe4
   50024:	str	r2, [r3]
   50028:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5002c:	ldr	r2, [r3, #4]
   50030:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50034:	ldr	r3, [r3, #32]
   50038:	lsl	r3, r3, #2
   5003c:	add	r3, r2, r3
   50040:	ldr	r2, [fp, #-20]	; 0xffffffec
   50044:	str	r2, [r3]
   50048:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5004c:	ldr	r2, [r3, #8]
   50050:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50054:	ldr	r3, [r3, #32]
   50058:	add	r0, r3, #1
   5005c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   50060:	str	r0, [r1, #32]
   50064:	lsl	r3, r3, #2
   50068:	add	r3, r2, r3
   5006c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   50070:	str	r2, [r3]
   50074:	mov	r3, #0
   50078:	str	r3, [fp, #-8]
   5007c:	b	500bc <__assert_fail@plt+0x3d9d0>
   50080:	ldr	r2, [fp, #-20]	; 0xffffffec
   50084:	ldr	r3, [fp, #-8]
   50088:	cmp	r2, r3
   5008c:	bhi	500b0 <__assert_fail@plt+0x3d9c4>
   50090:	ldr	r2, [fp, #-8]
   50094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50098:	cmp	r2, r3
   5009c:	bhi	500b0 <__assert_fail@plt+0x3d9c4>
   500a0:	ldr	r3, [fp, #-8]
   500a4:	mov	r1, r3
   500a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   500ac:	bl	43ecc <__assert_fail@plt+0x317e0>
   500b0:	ldr	r3, [fp, #-8]
   500b4:	add	r3, r3, #1
   500b8:	str	r3, [fp, #-8]
   500bc:	ldr	r3, [fp, #-8]
   500c0:	cmp	r3, #255	; 0xff
   500c4:	bls	50080 <__assert_fail@plt+0x3d994>
   500c8:	mov	r3, #0
   500cc:	mov	r0, r3
   500d0:	sub	sp, fp, #4
   500d4:	pop	{fp, pc}
   500d8:	push	{fp, lr}
   500dc:	add	fp, sp, #4
   500e0:	sub	sp, sp, #24
   500e4:	str	r0, [fp, #-16]
   500e8:	str	r1, [fp, #-20]	; 0xffffffec
   500ec:	str	r2, [fp, #-24]	; 0xffffffe8
   500f0:	str	r3, [fp, #-28]	; 0xffffffe4
   500f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   500f8:	bl	123bc <strlen@plt>
   500fc:	str	r0, [fp, #-8]
   50100:	ldr	r3, [fp, #-8]
   50104:	cmp	r3, #1
   50108:	movne	r3, #1
   5010c:	moveq	r3, #0
   50110:	uxtb	r3, r3
   50114:	cmp	r3, #0
   50118:	beq	50124 <__assert_fail@plt+0x3da38>
   5011c:	mov	r3, #3
   50120:	b	5013c <__assert_fail@plt+0x3da50>
   50124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50128:	ldrb	r3, [r3]
   5012c:	mov	r1, r3
   50130:	ldr	r0, [fp, #-16]
   50134:	bl	43ecc <__assert_fail@plt+0x317e0>
   50138:	mov	r3, #0
   5013c:	mov	r0, r3
   50140:	sub	sp, fp, #4
   50144:	pop	{fp, pc}
   50148:	push	{fp, lr}
   5014c:	add	fp, sp, #4
   50150:	sub	sp, sp, #248	; 0xf8
   50154:	str	r0, [fp, #-200]	; 0xffffff38
   50158:	str	r1, [fp, #-204]	; 0xffffff34
   5015c:	str	r2, [fp, #-208]	; 0xffffff30
   50160:	str	r3, [fp, #-212]	; 0xffffff2c
   50164:	mov	r3, #0
   50168:	str	r3, [fp, #-40]	; 0xffffffd8
   5016c:	mov	r3, #0
   50170:	str	r3, [fp, #-44]	; 0xffffffd4
   50174:	mov	r3, #0
   50178:	str	r3, [fp, #-48]	; 0xffffffd0
   5017c:	mov	r3, #0
   50180:	str	r3, [fp, #-52]	; 0xffffffcc
   50184:	mov	r3, #0
   50188:	str	r3, [fp, #-56]	; 0xffffffc8
   5018c:	mov	r3, #0
   50190:	str	r3, [fp, #-60]	; 0xffffffc4
   50194:	mov	r3, #0
   50198:	str	r3, [fp, #-92]	; 0xffffffa4
   5019c:	mov	r3, #0
   501a0:	str	r3, [fp, #-96]	; 0xffffffa0
   501a4:	mov	r3, #0
   501a8:	str	r3, [fp, #-8]
   501ac:	mov	r3, #0
   501b0:	str	r3, [fp, #-100]	; 0xffffff9c
   501b4:	mov	r3, #0
   501b8:	str	r3, [fp, #-104]	; 0xffffff98
   501bc:	mov	r3, #0
   501c0:	strb	r3, [fp, #-9]
   501c4:	mov	r3, #1
   501c8:	strb	r3, [fp, #-21]	; 0xffffffeb
   501cc:	mov	r1, #1
   501d0:	mov	r0, #32
   501d4:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   501d8:	mov	r3, r0
   501dc:	str	r3, [fp, #-64]	; 0xffffffc0
   501e0:	mov	r1, #1
   501e4:	mov	r0, #40	; 0x28
   501e8:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   501ec:	mov	r3, r0
   501f0:	str	r3, [fp, #-68]	; 0xffffffbc
   501f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   501f8:	cmp	r3, #0
   501fc:	moveq	r3, #1
   50200:	movne	r3, #0
   50204:	uxtb	r3, r3
   50208:	cmp	r3, #0
   5020c:	bne	5022c <__assert_fail@plt+0x3db40>
   50210:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50214:	cmp	r3, #0
   50218:	moveq	r3, #1
   5021c:	movne	r3, #0
   50220:	uxtb	r3, r3
   50224:	cmp	r3, #0
   50228:	beq	50250 <__assert_fail@plt+0x3db64>
   5022c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50230:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   50234:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50238:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5023c:	ldr	r3, [fp, #4]
   50240:	mov	r2, #12
   50244:	str	r2, [r3]
   50248:	mov	r3, #0
   5024c:	b	50ad8 <__assert_fail@plt+0x3e3ec>
   50250:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50254:	ldr	r1, [fp, #-200]	; 0xffffff38
   50258:	ldr	r0, [fp, #-208]	; 0xffffff30
   5025c:	bl	4e1c4 <__assert_fail@plt+0x3bad8>
   50260:	str	r0, [fp, #-20]	; 0xffffffec
   50264:	ldr	r3, [fp, #-208]	; 0xffffff30
   50268:	ldrb	r3, [r3, #4]
   5026c:	cmp	r3, #2
   50270:	moveq	r3, #1
   50274:	movne	r3, #0
   50278:	uxtb	r3, r3
   5027c:	cmp	r3, #0
   50280:	beq	50294 <__assert_fail@plt+0x3dba8>
   50284:	ldr	r3, [fp, #4]
   50288:	mov	r2, #2
   5028c:	str	r2, [r3]
   50290:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   50294:	ldr	r3, [fp, #-208]	; 0xffffff30
   50298:	ldrb	r3, [r3, #4]
   5029c:	cmp	r3, #25
   502a0:	bne	50334 <__assert_fail@plt+0x3dc48>
   502a4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   502a8:	ldrb	r3, [r2, #16]
   502ac:	orr	r3, r3, #1
   502b0:	strb	r3, [r2, #16]
   502b4:	mov	r3, #1
   502b8:	strb	r3, [fp, #-9]
   502bc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   502c0:	and	r3, r3, #256	; 0x100
   502c4:	cmp	r3, #0
   502c8:	beq	502d8 <__assert_fail@plt+0x3dbec>
   502cc:	mov	r1, #10
   502d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   502d4:	bl	43ecc <__assert_fail@plt+0x317e0>
   502d8:	ldr	r3, [fp, #-200]	; 0xffffff38
   502dc:	ldr	r2, [r3, #40]	; 0x28
   502e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   502e4:	add	r2, r2, r3
   502e8:	ldr	r3, [fp, #-200]	; 0xffffff38
   502ec:	str	r2, [r3, #40]	; 0x28
   502f0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   502f4:	ldr	r1, [fp, #-200]	; 0xffffff38
   502f8:	ldr	r0, [fp, #-208]	; 0xffffff30
   502fc:	bl	4e1c4 <__assert_fail@plt+0x3bad8>
   50300:	str	r0, [fp, #-20]	; 0xffffffec
   50304:	ldr	r3, [fp, #-208]	; 0xffffff30
   50308:	ldrb	r3, [r3, #4]
   5030c:	cmp	r3, #2
   50310:	moveq	r3, #1
   50314:	movne	r3, #0
   50318:	uxtb	r3, r3
   5031c:	cmp	r3, #0
   50320:	beq	50334 <__assert_fail@plt+0x3dc48>
   50324:	ldr	r3, [fp, #4]
   50328:	mov	r2, #2
   5032c:	str	r2, [r3]
   50330:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   50334:	ldr	r3, [fp, #-208]	; 0xffffff30
   50338:	ldrb	r3, [r3, #4]
   5033c:	cmp	r3, #21
   50340:	bne	50350 <__assert_fail@plt+0x3dc64>
   50344:	ldr	r3, [fp, #-208]	; 0xffffff30
   50348:	mov	r2, #1
   5034c:	strb	r2, [r3, #4]
   50350:	mov	r3, #0
   50354:	str	r3, [fp, #-28]	; 0xffffffe4
   50358:	mov	r3, #0
   5035c:	strb	r3, [fp, #-29]	; 0xffffffe3
   50360:	sub	r3, fp, #192	; 0xc0
   50364:	str	r3, [fp, #-108]	; 0xffffff94
   50368:	mov	r3, #3
   5036c:	str	r3, [fp, #-112]	; 0xffffff90
   50370:	sub	r0, fp, #112	; 0x70
   50374:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   50378:	str	r3, [sp, #8]
   5037c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   50380:	str	r3, [sp, #4]
   50384:	ldr	r3, [fp, #-204]	; 0xffffff34
   50388:	str	r3, [sp]
   5038c:	ldr	r3, [fp, #-20]	; 0xffffffec
   50390:	ldr	r2, [fp, #-208]	; 0xffffff30
   50394:	ldr	r1, [fp, #-200]	; 0xffffff38
   50398:	bl	50ae4 <__assert_fail@plt+0x3e3f8>
   5039c:	str	r0, [fp, #-72]	; 0xffffffb8
   503a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   503a4:	cmp	r3, #0
   503a8:	movne	r3, #1
   503ac:	moveq	r3, #0
   503b0:	uxtb	r3, r3
   503b4:	cmp	r3, #0
   503b8:	beq	503cc <__assert_fail@plt+0x3dce0>
   503bc:	ldr	r3, [fp, #4]
   503c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   503c4:	str	r2, [r3]
   503c8:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   503cc:	mov	r3, #0
   503d0:	strb	r3, [fp, #-21]	; 0xffffffeb
   503d4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   503d8:	ldr	r1, [fp, #-200]	; 0xffffff38
   503dc:	ldr	r0, [fp, #-208]	; 0xffffff30
   503e0:	bl	4e1c4 <__assert_fail@plt+0x3bad8>
   503e4:	str	r0, [fp, #-20]	; 0xffffffec
   503e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   503ec:	cmp	r3, #4
   503f0:	beq	504d8 <__assert_fail@plt+0x3ddec>
   503f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   503f8:	cmp	r3, #2
   503fc:	beq	504d8 <__assert_fail@plt+0x3ddec>
   50400:	ldr	r3, [fp, #-208]	; 0xffffff30
   50404:	ldrb	r3, [r3, #4]
   50408:	cmp	r3, #2
   5040c:	moveq	r3, #1
   50410:	movne	r3, #0
   50414:	uxtb	r3, r3
   50418:	cmp	r3, #0
   5041c:	beq	50430 <__assert_fail@plt+0x3dd44>
   50420:	ldr	r3, [fp, #4]
   50424:	mov	r2, #7
   50428:	str	r2, [r3]
   5042c:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   50430:	ldr	r3, [fp, #-208]	; 0xffffff30
   50434:	ldrb	r3, [r3, #4]
   50438:	cmp	r3, #22
   5043c:	bne	504d8 <__assert_fail@plt+0x3ddec>
   50440:	ldr	r3, [fp, #-200]	; 0xffffff38
   50444:	ldr	r2, [r3, #40]	; 0x28
   50448:	ldr	r3, [fp, #-20]	; 0xffffffec
   5044c:	add	r2, r2, r3
   50450:	ldr	r3, [fp, #-200]	; 0xffffff38
   50454:	str	r2, [r3, #40]	; 0x28
   50458:	sub	r3, fp, #128	; 0x80
   5045c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50460:	ldr	r1, [fp, #-200]	; 0xffffff38
   50464:	mov	r0, r3
   50468:	bl	4e1c4 <__assert_fail@plt+0x3bad8>
   5046c:	str	r0, [fp, #-28]	; 0xffffffe4
   50470:	ldrb	r3, [fp, #-124]	; 0xffffff84
   50474:	cmp	r3, #2
   50478:	moveq	r3, #1
   5047c:	movne	r3, #0
   50480:	uxtb	r3, r3
   50484:	cmp	r3, #0
   50488:	beq	5049c <__assert_fail@plt+0x3ddb0>
   5048c:	ldr	r3, [fp, #4]
   50490:	mov	r2, #7
   50494:	str	r2, [r3]
   50498:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   5049c:	ldrb	r3, [fp, #-124]	; 0xffffff84
   504a0:	cmp	r3, #21
   504a4:	bne	504d0 <__assert_fail@plt+0x3dde4>
   504a8:	ldr	r3, [fp, #-200]	; 0xffffff38
   504ac:	ldr	r2, [r3, #40]	; 0x28
   504b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   504b4:	sub	r2, r2, r3
   504b8:	ldr	r3, [fp, #-200]	; 0xffffff38
   504bc:	str	r2, [r3, #40]	; 0x28
   504c0:	ldr	r3, [fp, #-208]	; 0xffffff30
   504c4:	mov	r2, #1
   504c8:	strb	r2, [r3, #4]
   504cc:	b	504d8 <__assert_fail@plt+0x3ddec>
   504d0:	mov	r3, #1
   504d4:	strb	r3, [fp, #-29]	; 0xffffffe3
   504d8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   504dc:	cmp	r3, #0
   504e0:	beq	505f4 <__assert_fail@plt+0x3df08>
   504e4:	sub	r3, fp, #160	; 0xa0
   504e8:	str	r3, [fp, #-116]	; 0xffffff8c
   504ec:	mov	r3, #3
   504f0:	str	r3, [fp, #-120]	; 0xffffff88
   504f4:	sub	r2, fp, #128	; 0x80
   504f8:	sub	r0, fp, #120	; 0x78
   504fc:	mov	r3, #1
   50500:	str	r3, [sp, #8]
   50504:	ldr	r3, [fp, #-212]	; 0xffffff2c
   50508:	str	r3, [sp, #4]
   5050c:	ldr	r3, [fp, #-204]	; 0xffffff34
   50510:	str	r3, [sp]
   50514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50518:	ldr	r1, [fp, #-200]	; 0xffffff38
   5051c:	bl	50ae4 <__assert_fail@plt+0x3e3f8>
   50520:	str	r0, [fp, #-72]	; 0xffffffb8
   50524:	ldr	r3, [fp, #-72]	; 0xffffffb8
   50528:	cmp	r3, #0
   5052c:	movne	r3, #1
   50530:	moveq	r3, #0
   50534:	uxtb	r3, r3
   50538:	cmp	r3, #0
   5053c:	beq	50550 <__assert_fail@plt+0x3de64>
   50540:	ldr	r3, [fp, #4]
   50544:	ldr	r2, [fp, #-72]	; 0xffffffb8
   50548:	str	r2, [r3]
   5054c:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   50550:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50554:	ldr	r1, [fp, #-200]	; 0xffffff38
   50558:	ldr	r0, [fp, #-208]	; 0xffffff30
   5055c:	bl	4e1c4 <__assert_fail@plt+0x3bad8>
   50560:	str	r0, [fp, #-20]	; 0xffffffec
   50564:	sub	r1, fp, #112	; 0x70
   50568:	sub	r2, fp, #96	; 0x60
   5056c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50570:	str	r3, [sp, #32]
   50574:	ldr	r3, [fp, #-56]	; 0xffffffc8
   50578:	str	r3, [sp, #28]
   5057c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50580:	str	r3, [sp, #24]
   50584:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50588:	str	r3, [sp, #20]
   5058c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50590:	str	r3, [sp, #16]
   50594:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50598:	str	r3, [sp, #12]
   5059c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   505a0:	str	r3, [sp, #8]
   505a4:	ldr	r3, [fp, #-204]	; 0xffffff34
   505a8:	str	r3, [sp, #4]
   505ac:	sub	r3, fp, #120	; 0x78
   505b0:	str	r3, [sp]
   505b4:	mov	r3, r1
   505b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   505bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   505c0:	bl	4fc14 <__assert_fail@plt+0x3d528>
   505c4:	mov	r2, r0
   505c8:	ldr	r3, [fp, #4]
   505cc:	str	r2, [r3]
   505d0:	ldr	r3, [fp, #4]
   505d4:	ldr	r3, [r3]
   505d8:	cmp	r3, #0
   505dc:	movne	r3, #1
   505e0:	moveq	r3, #0
   505e4:	uxtb	r3, r3
   505e8:	cmp	r3, #0
   505ec:	beq	507f8 <__assert_fail@plt+0x3e10c>
   505f0:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   505f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   505f8:	cmp	r3, #4
   505fc:	ldrls	pc, [pc, r3, lsl #2]
   50600:	b	507e4 <__assert_fail@plt+0x3e0f8>
   50604:	andeq	r0, r5, r8, lsl r6
   50608:	andeq	r0, r5, ip, lsr #12
   5060c:	ldrdeq	r0, [r5], -ip
   50610:	andeq	r0, r5, r0, lsr #14
   50614:	andeq	r0, r5, r8, lsl #15
   50618:	ldrb	r3, [fp, #-108]	; 0xffffff94
   5061c:	mov	r1, r3
   50620:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50624:	bl	43ecc <__assert_fail@plt+0x317e0>
   50628:	b	507f8 <__assert_fail@plt+0x3e10c>
   5062c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50630:	ldr	r2, [r3, #20]
   50634:	ldr	r3, [fp, #-8]
   50638:	cmp	r2, r3
   5063c:	moveq	r3, #1
   50640:	movne	r3, #0
   50644:	uxtb	r3, r3
   50648:	cmp	r3, #0
   5064c:	beq	506ac <__assert_fail@plt+0x3dfc0>
   50650:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50654:	ldr	r3, [r3, #20]
   50658:	lsl	r3, r3, #1
   5065c:	add	r3, r3, #1
   50660:	str	r3, [fp, #-8]
   50664:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50668:	ldr	r2, [r3]
   5066c:	ldr	r3, [fp, #-8]
   50670:	lsl	r3, r3, #2
   50674:	mov	r1, r3
   50678:	mov	r0, r2
   5067c:	bl	43d30 <__assert_fail@plt+0x31644>
   50680:	str	r0, [fp, #-76]	; 0xffffffb4
   50684:	ldr	r3, [fp, #-76]	; 0xffffffb4
   50688:	cmp	r3, #0
   5068c:	moveq	r3, #1
   50690:	movne	r3, #0
   50694:	uxtb	r3, r3
   50698:	cmp	r3, #0
   5069c:	bne	50a9c <__assert_fail@plt+0x3e3b0>
   506a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   506a4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   506a8:	str	r2, [r3]
   506ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   506b0:	ldr	r2, [r3]
   506b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   506b8:	ldr	r3, [r3, #20]
   506bc:	add	r0, r3, #1
   506c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   506c4:	str	r0, [r1, #20]
   506c8:	lsl	r3, r3, #2
   506cc:	add	r3, r2, r3
   506d0:	ldr	r2, [fp, #-108]	; 0xffffff94
   506d4:	str	r2, [r3]
   506d8:	b	507f8 <__assert_fail@plt+0x3e10c>
   506dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   506e0:	sub	r2, fp, #100	; 0x64
   506e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   506e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   506ec:	bl	50e10 <__assert_fail@plt+0x3e724>
   506f0:	mov	r2, r0
   506f4:	ldr	r3, [fp, #4]
   506f8:	str	r2, [r3]
   506fc:	ldr	r3, [fp, #4]
   50700:	ldr	r3, [r3]
   50704:	cmp	r3, #0
   50708:	movne	r3, #1
   5070c:	moveq	r3, #0
   50710:	uxtb	r3, r3
   50714:	cmp	r3, #0
   50718:	beq	507e4 <__assert_fail@plt+0x3e0f8>
   5071c:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   50720:	ldr	r1, [fp, #-108]	; 0xffffff94
   50724:	sub	r2, fp, #92	; 0x5c
   50728:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5072c:	str	r3, [sp, #12]
   50730:	ldr	r3, [fp, #-56]	; 0xffffffc8
   50734:	str	r3, [sp, #8]
   50738:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5073c:	str	r3, [sp, #4]
   50740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50744:	str	r3, [sp]
   50748:	mov	r3, r1
   5074c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50750:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50754:	bl	500d8 <__assert_fail@plt+0x3d9ec>
   50758:	mov	r2, r0
   5075c:	ldr	r3, [fp, #4]
   50760:	str	r2, [r3]
   50764:	ldr	r3, [fp, #4]
   50768:	ldr	r3, [r3]
   5076c:	cmp	r3, #0
   50770:	movne	r3, #1
   50774:	moveq	r3, #0
   50778:	uxtb	r3, r3
   5077c:	cmp	r3, #0
   50780:	beq	507ec <__assert_fail@plt+0x3e100>
   50784:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   50788:	ldr	r3, [fp, #-200]	; 0xffffff38
   5078c:	ldr	r0, [r3, #64]	; 0x40
   50790:	ldr	r3, [fp, #-108]	; 0xffffff94
   50794:	sub	r1, fp, #104	; 0x68
   50798:	ldr	r2, [fp, #-212]	; 0xffffff2c
   5079c:	str	r2, [sp, #4]
   507a0:	str	r3, [sp]
   507a4:	mov	r3, r1
   507a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   507ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   507b0:	bl	50e7c <__assert_fail@plt+0x3e790>
   507b4:	mov	r2, r0
   507b8:	ldr	r3, [fp, #4]
   507bc:	str	r2, [r3]
   507c0:	ldr	r3, [fp, #4]
   507c4:	ldr	r3, [r3]
   507c8:	cmp	r3, #0
   507cc:	movne	r3, #1
   507d0:	moveq	r3, #0
   507d4:	uxtb	r3, r3
   507d8:	cmp	r3, #0
   507dc:	beq	507f4 <__assert_fail@plt+0x3e108>
   507e0:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   507e4:	nop			; (mov r0, r0)
   507e8:	b	507f8 <__assert_fail@plt+0x3e10c>
   507ec:	nop			; (mov r0, r0)
   507f0:	b	507f8 <__assert_fail@plt+0x3e10c>
   507f4:	nop			; (mov r0, r0)
   507f8:	ldr	r3, [fp, #-208]	; 0xffffff30
   507fc:	ldrb	r3, [r3, #4]
   50800:	cmp	r3, #2
   50804:	moveq	r3, #1
   50808:	movne	r3, #0
   5080c:	uxtb	r3, r3
   50810:	cmp	r3, #0
   50814:	beq	5082c <__assert_fail@plt+0x3e140>
   50818:	ldr	r3, [fp, #4]
   5081c:	mov	r2, #7
   50820:	str	r2, [r3]
   50824:	nop			; (mov r0, r0)
   50828:	b	50ac4 <__assert_fail@plt+0x3e3d8>
   5082c:	ldr	r3, [fp, #-208]	; 0xffffff30
   50830:	ldrb	r3, [r3, #4]
   50834:	cmp	r3, #21
   50838:	bne	50350 <__assert_fail@plt+0x3dc64>
   5083c:	ldr	r3, [fp, #-200]	; 0xffffff38
   50840:	ldr	r2, [r3, #40]	; 0x28
   50844:	ldr	r3, [fp, #-20]	; 0xffffffec
   50848:	add	r2, r2, r3
   5084c:	ldr	r3, [fp, #-200]	; 0xffffff38
   50850:	str	r2, [r3, #40]	; 0x28
   50854:	ldrb	r3, [fp, #-9]
   50858:	cmp	r3, #0
   5085c:	bne	50864 <__assert_fail@plt+0x3e178>
   50860:	b	5086c <__assert_fail@plt+0x3e180>
   50864:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50868:	bl	440f4 <__assert_fail@plt+0x31a08>
   5086c:	ldr	r3, [fp, #-204]	; 0xffffff34
   50870:	ldr	r3, [r3, #92]	; 0x5c
   50874:	cmp	r3, #1
   50878:	ble	50890 <__assert_fail@plt+0x3e1a4>
   5087c:	ldr	r3, [fp, #-204]	; 0xffffff34
   50880:	ldr	r3, [r3, #60]	; 0x3c
   50884:	mov	r1, r3
   50888:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5088c:	bl	441ec <__assert_fail@plt+0x31b00>
   50890:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50894:	ldr	r3, [r3, #20]
   50898:	cmp	r3, #0
   5089c:	bne	50908 <__assert_fail@plt+0x3e21c>
   508a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   508a4:	ldr	r3, [r3, #24]
   508a8:	cmp	r3, #0
   508ac:	bne	50908 <__assert_fail@plt+0x3e21c>
   508b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   508b4:	ldr	r3, [r3, #28]
   508b8:	cmp	r3, #0
   508bc:	bne	50908 <__assert_fail@plt+0x3e21c>
   508c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   508c4:	ldr	r3, [r3, #32]
   508c8:	cmp	r3, #0
   508cc:	bne	50908 <__assert_fail@plt+0x3e21c>
   508d0:	ldr	r3, [fp, #-204]	; 0xffffff34
   508d4:	ldr	r3, [r3, #92]	; 0x5c
   508d8:	cmp	r3, #1
   508dc:	ble	50a40 <__assert_fail@plt+0x3e354>
   508e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   508e4:	ldr	r3, [r3, #36]	; 0x24
   508e8:	cmp	r3, #0
   508ec:	bne	50908 <__assert_fail@plt+0x3e21c>
   508f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   508f4:	ldrb	r3, [r3, #16]
   508f8:	and	r3, r3, #1
   508fc:	uxtb	r3, r3
   50900:	cmp	r3, #0
   50904:	beq	50a40 <__assert_fail@plt+0x3e354>
   50908:	ldr	r2, [fp, #-204]	; 0xffffff34
   5090c:	ldrb	r3, [r2, #88]	; 0x58
   50910:	orr	r3, r3, #2
   50914:	strb	r3, [r2, #88]	; 0x58
   50918:	mov	r3, #6
   5091c:	strb	r3, [fp, #-84]	; 0xffffffac
   50920:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50924:	str	r3, [fp, #-88]	; 0xffffffa8
   50928:	sub	r3, fp, #88	; 0x58
   5092c:	mov	r2, #0
   50930:	mov	r1, #0
   50934:	ldr	r0, [fp, #-204]	; 0xffffff34
   50938:	bl	52088 <__assert_fail@plt+0x3f99c>
   5093c:	str	r0, [fp, #-80]	; 0xffffffb0
   50940:	ldr	r3, [fp, #-80]	; 0xffffffb0
   50944:	cmp	r3, #0
   50948:	moveq	r3, #1
   5094c:	movne	r3, #0
   50950:	uxtb	r3, r3
   50954:	cmp	r3, #0
   50958:	bne	50aa4 <__assert_fail@plt+0x3e3b8>
   5095c:	mov	r3, #0
   50960:	str	r3, [fp, #-36]	; 0xffffffdc
   50964:	b	50990 <__assert_fail@plt+0x3e2a4>
   50968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5096c:	lsl	r3, r3, #2
   50970:	ldr	r2, [fp, #-64]	; 0xffffffc0
   50974:	add	r3, r2, r3
   50978:	ldr	r3, [r3]
   5097c:	cmp	r3, #0
   50980:	bne	509a0 <__assert_fail@plt+0x3e2b4>
   50984:	ldr	r3, [fp, #-36]	; 0xffffffdc
   50988:	add	r3, r3, #1
   5098c:	str	r3, [fp, #-36]	; 0xffffffdc
   50990:	ldr	r3, [fp, #-36]	; 0xffffffdc
   50994:	cmp	r3, #7
   50998:	ble	50968 <__assert_fail@plt+0x3e27c>
   5099c:	b	509a4 <__assert_fail@plt+0x3e2b8>
   509a0:	nop			; (mov r0, r0)
   509a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   509a8:	cmp	r3, #7
   509ac:	bgt	50a2c <__assert_fail@plt+0x3e340>
   509b0:	mov	r3, #3
   509b4:	strb	r3, [fp, #-84]	; 0xffffffac
   509b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   509bc:	str	r3, [fp, #-88]	; 0xffffffa8
   509c0:	sub	r3, fp, #88	; 0x58
   509c4:	mov	r2, #0
   509c8:	mov	r1, #0
   509cc:	ldr	r0, [fp, #-204]	; 0xffffff34
   509d0:	bl	52088 <__assert_fail@plt+0x3f99c>
   509d4:	str	r0, [fp, #-16]
   509d8:	ldr	r3, [fp, #-16]
   509dc:	cmp	r3, #0
   509e0:	moveq	r3, #1
   509e4:	movne	r3, #0
   509e8:	uxtb	r3, r3
   509ec:	cmp	r3, #0
   509f0:	bne	50aac <__assert_fail@plt+0x3e3c0>
   509f4:	mov	r3, #10
   509f8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   509fc:	ldr	r1, [fp, #-16]
   50a00:	ldr	r0, [fp, #-204]	; 0xffffff34
   50a04:	bl	5202c <__assert_fail@plt+0x3f940>
   50a08:	str	r0, [fp, #-16]
   50a0c:	ldr	r3, [fp, #-16]
   50a10:	cmp	r3, #0
   50a14:	moveq	r3, #1
   50a18:	movne	r3, #0
   50a1c:	uxtb	r3, r3
   50a20:	cmp	r3, #0
   50a24:	beq	50a90 <__assert_fail@plt+0x3e3a4>
   50a28:	b	50ab8 <__assert_fail@plt+0x3e3cc>
   50a2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50a30:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   50a34:	ldr	r3, [fp, #-80]	; 0xffffffb0
   50a38:	str	r3, [fp, #-16]
   50a3c:	b	50a90 <__assert_fail@plt+0x3e3a4>
   50a40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50a44:	bl	51fc8 <__assert_fail@plt+0x3f8dc>
   50a48:	mov	r3, #3
   50a4c:	strb	r3, [fp, #-84]	; 0xffffffac
   50a50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   50a54:	str	r3, [fp, #-88]	; 0xffffffa8
   50a58:	sub	r3, fp, #88	; 0x58
   50a5c:	mov	r2, #0
   50a60:	mov	r1, #0
   50a64:	ldr	r0, [fp, #-204]	; 0xffffff34
   50a68:	bl	52088 <__assert_fail@plt+0x3f99c>
   50a6c:	str	r0, [fp, #-16]
   50a70:	ldr	r3, [fp, #-16]
   50a74:	cmp	r3, #0
   50a78:	moveq	r3, #1
   50a7c:	movne	r3, #0
   50a80:	uxtb	r3, r3
   50a84:	cmp	r3, #0
   50a88:	bne	50ab4 <__assert_fail@plt+0x3e3c8>
   50a8c:	b	50a94 <__assert_fail@plt+0x3e3a8>
   50a90:	nop			; (mov r0, r0)
   50a94:	ldr	r3, [fp, #-16]
   50a98:	b	50ad8 <__assert_fail@plt+0x3e3ec>
   50a9c:	nop			; (mov r0, r0)
   50aa0:	b	50ab8 <__assert_fail@plt+0x3e3cc>
   50aa4:	nop			; (mov r0, r0)
   50aa8:	b	50ab8 <__assert_fail@plt+0x3e3cc>
   50aac:	nop			; (mov r0, r0)
   50ab0:	b	50ab8 <__assert_fail@plt+0x3e3cc>
   50ab4:	nop			; (mov r0, r0)
   50ab8:	ldr	r3, [fp, #4]
   50abc:	mov	r2, #12
   50ac0:	str	r2, [r3]
   50ac4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50ac8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   50acc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50ad0:	bl	51fc8 <__assert_fail@plt+0x3f8dc>
   50ad4:	mov	r3, #0
   50ad8:	mov	r0, r3
   50adc:	sub	sp, fp, #4
   50ae0:	pop	{fp, pc}
   50ae4:	push	{fp, lr}
   50ae8:	add	fp, sp, #4
   50aec:	sub	sp, sp, #32
   50af0:	str	r0, [fp, #-24]	; 0xffffffe8
   50af4:	str	r1, [fp, #-28]	; 0xffffffe4
   50af8:	str	r2, [fp, #-32]	; 0xffffffe0
   50afc:	str	r3, [fp, #-36]	; 0xffffffdc
   50b00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50b04:	ldr	r3, [r3, #40]	; 0x28
   50b08:	mov	r1, r3
   50b0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   50b10:	bl	44274 <__assert_fail@plt+0x31b88>
   50b14:	str	r0, [fp, #-8]
   50b18:	ldr	r3, [fp, #-8]
   50b1c:	cmp	r3, #1
   50b20:	ble	50b70 <__assert_fail@plt+0x3e484>
   50b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50b28:	mov	r2, #1
   50b2c:	str	r2, [r3]
   50b30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50b34:	ldr	r3, [r3, #40]	; 0x28
   50b38:	mov	r1, r3
   50b3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   50b40:	bl	44318 <__assert_fail@plt+0x31c2c>
   50b44:	mov	r2, r0
   50b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50b4c:	str	r2, [r3, #4]
   50b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50b54:	ldr	r2, [r3, #40]	; 0x28
   50b58:	ldr	r3, [fp, #-8]
   50b5c:	add	r2, r2, r3
   50b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50b64:	str	r2, [r3, #40]	; 0x28
   50b68:	mov	r3, #0
   50b6c:	b	50c4c <__assert_fail@plt+0x3e560>
   50b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50b74:	ldr	r2, [r3, #40]	; 0x28
   50b78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   50b7c:	add	r2, r2, r3
   50b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50b84:	str	r2, [r3, #40]	; 0x28
   50b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50b8c:	ldrb	r3, [r3, #4]
   50b90:	cmp	r3, #26
   50b94:	beq	50bb8 <__assert_fail@plt+0x3e4cc>
   50b98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50b9c:	ldrb	r3, [r3, #4]
   50ba0:	cmp	r3, #30
   50ba4:	beq	50bb8 <__assert_fail@plt+0x3e4cc>
   50ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50bac:	ldrb	r3, [r3, #4]
   50bb0:	cmp	r3, #28
   50bb4:	bne	50bd0 <__assert_fail@plt+0x3e4e4>
   50bb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   50bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   50bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   50bc4:	bl	50c58 <__assert_fail@plt+0x3e56c>
   50bc8:	mov	r3, r0
   50bcc:	b	50c4c <__assert_fail@plt+0x3e560>
   50bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50bd4:	ldrb	r3, [r3, #4]
   50bd8:	cmp	r3, #22
   50bdc:	moveq	r3, #1
   50be0:	movne	r3, #0
   50be4:	uxtb	r3, r3
   50be8:	cmp	r3, #0
   50bec:	beq	50c2c <__assert_fail@plt+0x3e540>
   50bf0:	ldrb	r3, [fp, #12]
   50bf4:	eor	r3, r3, #1
   50bf8:	uxtb	r3, r3
   50bfc:	cmp	r3, #0
   50c00:	beq	50c2c <__assert_fail@plt+0x3e540>
   50c04:	sub	r3, fp, #16
   50c08:	ldr	r2, [fp, #8]
   50c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   50c10:	mov	r0, r3
   50c14:	bl	4e1c4 <__assert_fail@plt+0x3bad8>
   50c18:	ldrb	r3, [fp, #-12]
   50c1c:	cmp	r3, #21
   50c20:	beq	50c2c <__assert_fail@plt+0x3e540>
   50c24:	mov	r3, #11
   50c28:	b	50c4c <__assert_fail@plt+0x3e560>
   50c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50c30:	mov	r2, #0
   50c34:	str	r2, [r3]
   50c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50c3c:	ldrb	r2, [r3]
   50c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50c44:	strb	r2, [r3, #4]
   50c48:	mov	r3, #0
   50c4c:	mov	r0, r3
   50c50:	sub	sp, fp, #4
   50c54:	pop	{fp, pc}
   50c58:	push	{fp, lr}
   50c5c:	add	fp, sp, #4
   50c60:	sub	sp, sp, #32
   50c64:	str	r0, [fp, #-24]	; 0xffffffe8
   50c68:	str	r1, [fp, #-28]	; 0xffffffe4
   50c6c:	str	r2, [fp, #-32]	; 0xffffffe0
   50c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50c74:	ldrb	r3, [r3]
   50c78:	strb	r3, [fp, #-13]
   50c7c:	mov	r3, #0
   50c80:	str	r3, [fp, #-12]
   50c84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50c88:	ldr	r2, [r3, #56]	; 0x38
   50c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50c90:	ldr	r3, [r3, #40]	; 0x28
   50c94:	cmp	r2, r3
   50c98:	bgt	50ca4 <__assert_fail@plt+0x3e5b8>
   50c9c:	mov	r3, #7
   50ca0:	b	50e04 <__assert_fail@plt+0x3e718>
   50ca4:	ldr	r3, [fp, #-12]
   50ca8:	cmp	r3, #31
   50cac:	ble	50cb8 <__assert_fail@plt+0x3e5cc>
   50cb0:	mov	r3, #7
   50cb4:	b	50e04 <__assert_fail@plt+0x3e718>
   50cb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50cbc:	ldrb	r3, [r3, #4]
   50cc0:	cmp	r3, #30
   50cc4:	bne	50cdc <__assert_fail@plt+0x3e5f0>
   50cc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   50ccc:	bl	46a00 <__assert_fail@plt+0x34314>
   50cd0:	mov	r3, r0
   50cd4:	strb	r3, [fp, #-5]
   50cd8:	b	50d04 <__assert_fail@plt+0x3e618>
   50cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50ce0:	ldr	r2, [r3, #4]
   50ce4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50ce8:	ldr	r3, [r3, #40]	; 0x28
   50cec:	add	r0, r3, #1
   50cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   50cf4:	str	r0, [r1, #40]	; 0x28
   50cf8:	add	r3, r2, r3
   50cfc:	ldrb	r3, [r3]
   50d00:	strb	r3, [fp, #-5]
   50d04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50d08:	ldr	r2, [r3, #56]	; 0x38
   50d0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50d10:	ldr	r3, [r3, #40]	; 0x28
   50d14:	cmp	r2, r3
   50d18:	bgt	50d24 <__assert_fail@plt+0x3e638>
   50d1c:	mov	r3, #7
   50d20:	b	50e04 <__assert_fail@plt+0x3e718>
   50d24:	ldrb	r2, [fp, #-5]
   50d28:	ldrb	r3, [fp, #-13]
   50d2c:	cmp	r2, r3
   50d30:	bne	50d54 <__assert_fail@plt+0x3e668>
   50d34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50d38:	ldr	r3, [r3, #4]
   50d3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   50d40:	ldr	r2, [r2, #40]	; 0x28
   50d44:	add	r3, r3, r2
   50d48:	ldrb	r3, [r3]
   50d4c:	cmp	r3, #93	; 0x5d
   50d50:	beq	50d7c <__assert_fail@plt+0x3e690>
   50d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50d58:	ldr	r2, [r3, #4]
   50d5c:	ldr	r3, [fp, #-12]
   50d60:	add	r3, r2, r3
   50d64:	ldrb	r2, [fp, #-5]
   50d68:	strb	r2, [r3]
   50d6c:	ldr	r3, [fp, #-12]
   50d70:	add	r3, r3, #1
   50d74:	str	r3, [fp, #-12]
   50d78:	b	50ca4 <__assert_fail@plt+0x3e5b8>
   50d7c:	nop			; (mov r0, r0)
   50d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50d84:	ldr	r3, [r3, #40]	; 0x28
   50d88:	add	r2, r3, #1
   50d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50d90:	str	r2, [r3, #40]	; 0x28
   50d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50d98:	ldr	r2, [r3, #4]
   50d9c:	ldr	r3, [fp, #-12]
   50da0:	add	r3, r2, r3
   50da4:	mov	r2, #0
   50da8:	strb	r2, [r3]
   50dac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50db0:	ldrb	r3, [r3, #4]
   50db4:	cmp	r3, #28
   50db8:	beq	50de0 <__assert_fail@plt+0x3e6f4>
   50dbc:	cmp	r3, #30
   50dc0:	beq	50df0 <__assert_fail@plt+0x3e704>
   50dc4:	cmp	r3, #26
   50dc8:	beq	50dd0 <__assert_fail@plt+0x3e6e4>
   50dcc:	b	50e00 <__assert_fail@plt+0x3e714>
   50dd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50dd4:	mov	r2, #3
   50dd8:	str	r2, [r3]
   50ddc:	b	50e00 <__assert_fail@plt+0x3e714>
   50de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50de4:	mov	r2, #2
   50de8:	str	r2, [r3]
   50dec:	b	50e00 <__assert_fail@plt+0x3e714>
   50df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50df4:	mov	r2, #4
   50df8:	str	r2, [r3]
   50dfc:	nop			; (mov r0, r0)
   50e00:	mov	r3, #0
   50e04:	mov	r0, r3
   50e08:	sub	sp, fp, #4
   50e0c:	pop	{fp, pc}
   50e10:	push	{fp, lr}
   50e14:	add	fp, sp, #4
   50e18:	sub	sp, sp, #16
   50e1c:	str	r0, [fp, #-8]
   50e20:	str	r1, [fp, #-12]
   50e24:	str	r2, [fp, #-16]
   50e28:	str	r3, [fp, #-20]	; 0xffffffec
   50e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   50e30:	bl	123bc <strlen@plt>
   50e34:	mov	r3, r0
   50e38:	cmp	r3, #1
   50e3c:	movne	r3, #1
   50e40:	moveq	r3, #0
   50e44:	uxtb	r3, r3
   50e48:	cmp	r3, #0
   50e4c:	beq	50e58 <__assert_fail@plt+0x3e76c>
   50e50:	mov	r3, #3
   50e54:	b	50e70 <__assert_fail@plt+0x3e784>
   50e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   50e5c:	ldrb	r3, [r3]
   50e60:	mov	r1, r3
   50e64:	ldr	r0, [fp, #-8]
   50e68:	bl	43ecc <__assert_fail@plt+0x317e0>
   50e6c:	mov	r3, #0
   50e70:	mov	r0, r3
   50e74:	sub	sp, fp, #4
   50e78:	pop	{fp, pc}
   50e7c:	push	{r4, fp, lr}
   50e80:	add	fp, sp, #8
   50e84:	sub	sp, sp, #36	; 0x24
   50e88:	str	r0, [fp, #-32]	; 0xffffffe0
   50e8c:	str	r1, [fp, #-36]	; 0xffffffdc
   50e90:	str	r2, [fp, #-40]	; 0xffffffd8
   50e94:	str	r3, [fp, #-44]	; 0xffffffd4
   50e98:	ldr	r3, [fp, #4]
   50e9c:	str	r3, [fp, #-20]	; 0xffffffec
   50ea0:	ldr	r3, [fp, #8]
   50ea4:	and	r3, r3, #4194304	; 0x400000
   50ea8:	cmp	r3, #0
   50eac:	beq	50ee8 <__assert_fail@plt+0x3e7fc>
   50eb0:	ldr	r1, [pc, #3300]	; 51b9c <__assert_fail@plt+0x3f4b0>
   50eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   50eb8:	bl	11ffc <strcmp@plt>
   50ebc:	mov	r3, r0
   50ec0:	cmp	r3, #0
   50ec4:	beq	50ee0 <__assert_fail@plt+0x3e7f4>
   50ec8:	ldr	r1, [pc, #3280]	; 51ba0 <__assert_fail@plt+0x3f4b4>
   50ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   50ed0:	bl	11ffc <strcmp@plt>
   50ed4:	mov	r3, r0
   50ed8:	cmp	r3, #0
   50edc:	bne	50ee8 <__assert_fail@plt+0x3e7fc>
   50ee0:	ldr	r3, [pc, #3260]	; 51ba4 <__assert_fail@plt+0x3f4b8>
   50ee4:	str	r3, [fp, #-20]	; 0xffffffec
   50ee8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50eec:	ldr	r2, [r3]
   50ef0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50ef4:	ldr	r3, [r3, #36]	; 0x24
   50ef8:	cmp	r2, r3
   50efc:	moveq	r3, #1
   50f00:	movne	r3, #0
   50f04:	uxtb	r3, r3
   50f08:	cmp	r3, #0
   50f0c:	beq	50f80 <__assert_fail@plt+0x3e894>
   50f10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50f14:	ldr	r3, [r3, #36]	; 0x24
   50f18:	lsl	r3, r3, #1
   50f1c:	add	r3, r3, #1
   50f20:	str	r3, [fp, #-24]	; 0xffffffe8
   50f24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50f28:	ldr	r2, [r3, #12]
   50f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50f30:	lsl	r3, r3, #2
   50f34:	mov	r1, r3
   50f38:	mov	r0, r2
   50f3c:	bl	43d30 <__assert_fail@plt+0x31644>
   50f40:	str	r0, [fp, #-28]	; 0xffffffe4
   50f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50f48:	cmp	r3, #0
   50f4c:	moveq	r3, #1
   50f50:	movne	r3, #0
   50f54:	uxtb	r3, r3
   50f58:	cmp	r3, #0
   50f5c:	beq	50f68 <__assert_fail@plt+0x3e87c>
   50f60:	mov	r3, #12
   50f64:	b	51b90 <__assert_fail@plt+0x3f4a4>
   50f68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50f6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   50f70:	str	r2, [r3, #12]
   50f74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   50f7c:	str	r2, [r3]
   50f80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50f84:	ldr	r2, [r3, #12]
   50f88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   50f8c:	ldr	r3, [r3, #36]	; 0x24
   50f90:	add	r0, r3, #1
   50f94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   50f98:	str	r0, [r1, #36]	; 0x24
   50f9c:	lsl	r3, r3, #2
   50fa0:	add	r4, r2, r3
   50fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   50fa8:	bl	11f9c <wctype@plt>
   50fac:	mov	r3, r0
   50fb0:	str	r3, [r4]
   50fb4:	ldr	r1, [pc, #3052]	; 51ba8 <__assert_fail@plt+0x3f4bc>
   50fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   50fbc:	bl	11ffc <strcmp@plt>
   50fc0:	mov	r3, r0
   50fc4:	cmp	r3, #0
   50fc8:	bne	510b0 <__assert_fail@plt+0x3e9c4>
   50fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50fd0:	cmp	r3, #0
   50fd4:	movne	r3, #1
   50fd8:	moveq	r3, #0
   50fdc:	uxtb	r3, r3
   50fe0:	cmp	r3, #0
   50fe4:	beq	51054 <__assert_fail@plt+0x3e968>
   50fe8:	mov	r3, #0
   50fec:	str	r3, [fp, #-16]
   50ff0:	b	51044 <__assert_fail@plt+0x3e958>
   50ff4:	bl	12368 <__ctype_b_loc@plt>
   50ff8:	mov	r3, r0
   50ffc:	ldr	r2, [r3]
   51000:	ldr	r3, [fp, #-16]
   51004:	lsl	r3, r3, #1
   51008:	add	r3, r2, r3
   5100c:	ldrh	r3, [r3]
   51010:	and	r3, r3, #8
   51014:	cmp	r3, #0
   51018:	beq	51038 <__assert_fail@plt+0x3e94c>
   5101c:	ldr	r3, [fp, #-16]
   51020:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51024:	add	r3, r2, r3
   51028:	ldrb	r3, [r3]
   5102c:	mov	r1, r3
   51030:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51034:	bl	43ecc <__assert_fail@plt+0x317e0>
   51038:	ldr	r3, [fp, #-16]
   5103c:	add	r3, r3, #1
   51040:	str	r3, [fp, #-16]
   51044:	ldr	r3, [fp, #-16]
   51048:	cmp	r3, #255	; 0xff
   5104c:	ble	50ff4 <__assert_fail@plt+0x3e908>
   51050:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51054:	mov	r3, #0
   51058:	str	r3, [fp, #-16]
   5105c:	b	510a0 <__assert_fail@plt+0x3e9b4>
   51060:	bl	12368 <__ctype_b_loc@plt>
   51064:	mov	r3, r0
   51068:	ldr	r2, [r3]
   5106c:	ldr	r3, [fp, #-16]
   51070:	lsl	r3, r3, #1
   51074:	add	r3, r2, r3
   51078:	ldrh	r3, [r3]
   5107c:	and	r3, r3, #8
   51080:	cmp	r3, #0
   51084:	beq	51094 <__assert_fail@plt+0x3e9a8>
   51088:	ldr	r1, [fp, #-16]
   5108c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51090:	bl	43ecc <__assert_fail@plt+0x317e0>
   51094:	ldr	r3, [fp, #-16]
   51098:	add	r3, r3, #1
   5109c:	str	r3, [fp, #-16]
   510a0:	ldr	r3, [fp, #-16]
   510a4:	cmp	r3, #255	; 0xff
   510a8:	ble	51060 <__assert_fail@plt+0x3e974>
   510ac:	b	51b8c <__assert_fail@plt+0x3f4a0>
   510b0:	ldr	r1, [pc, #2804]	; 51bac <__assert_fail@plt+0x3f4c0>
   510b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   510b8:	bl	11ffc <strcmp@plt>
   510bc:	mov	r3, r0
   510c0:	cmp	r3, #0
   510c4:	bne	511ac <__assert_fail@plt+0x3eac0>
   510c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   510cc:	cmp	r3, #0
   510d0:	movne	r3, #1
   510d4:	moveq	r3, #0
   510d8:	uxtb	r3, r3
   510dc:	cmp	r3, #0
   510e0:	beq	51150 <__assert_fail@plt+0x3ea64>
   510e4:	mov	r3, #0
   510e8:	str	r3, [fp, #-16]
   510ec:	b	51140 <__assert_fail@plt+0x3ea54>
   510f0:	bl	12368 <__ctype_b_loc@plt>
   510f4:	mov	r3, r0
   510f8:	ldr	r2, [r3]
   510fc:	ldr	r3, [fp, #-16]
   51100:	lsl	r3, r3, #1
   51104:	add	r3, r2, r3
   51108:	ldrh	r3, [r3]
   5110c:	and	r3, r3, #2
   51110:	cmp	r3, #0
   51114:	beq	51134 <__assert_fail@plt+0x3ea48>
   51118:	ldr	r3, [fp, #-16]
   5111c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51120:	add	r3, r2, r3
   51124:	ldrb	r3, [r3]
   51128:	mov	r1, r3
   5112c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51130:	bl	43ecc <__assert_fail@plt+0x317e0>
   51134:	ldr	r3, [fp, #-16]
   51138:	add	r3, r3, #1
   5113c:	str	r3, [fp, #-16]
   51140:	ldr	r3, [fp, #-16]
   51144:	cmp	r3, #255	; 0xff
   51148:	ble	510f0 <__assert_fail@plt+0x3ea04>
   5114c:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51150:	mov	r3, #0
   51154:	str	r3, [fp, #-16]
   51158:	b	5119c <__assert_fail@plt+0x3eab0>
   5115c:	bl	12368 <__ctype_b_loc@plt>
   51160:	mov	r3, r0
   51164:	ldr	r2, [r3]
   51168:	ldr	r3, [fp, #-16]
   5116c:	lsl	r3, r3, #1
   51170:	add	r3, r2, r3
   51174:	ldrh	r3, [r3]
   51178:	and	r3, r3, #2
   5117c:	cmp	r3, #0
   51180:	beq	51190 <__assert_fail@plt+0x3eaa4>
   51184:	ldr	r1, [fp, #-16]
   51188:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5118c:	bl	43ecc <__assert_fail@plt+0x317e0>
   51190:	ldr	r3, [fp, #-16]
   51194:	add	r3, r3, #1
   51198:	str	r3, [fp, #-16]
   5119c:	ldr	r3, [fp, #-16]
   511a0:	cmp	r3, #255	; 0xff
   511a4:	ble	5115c <__assert_fail@plt+0x3ea70>
   511a8:	b	51b8c <__assert_fail@plt+0x3f4a0>
   511ac:	ldr	r1, [pc, #2540]	; 51ba0 <__assert_fail@plt+0x3f4b4>
   511b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   511b4:	bl	11ffc <strcmp@plt>
   511b8:	mov	r3, r0
   511bc:	cmp	r3, #0
   511c0:	bne	512a8 <__assert_fail@plt+0x3ebbc>
   511c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   511c8:	cmp	r3, #0
   511cc:	movne	r3, #1
   511d0:	moveq	r3, #0
   511d4:	uxtb	r3, r3
   511d8:	cmp	r3, #0
   511dc:	beq	5124c <__assert_fail@plt+0x3eb60>
   511e0:	mov	r3, #0
   511e4:	str	r3, [fp, #-16]
   511e8:	b	5123c <__assert_fail@plt+0x3eb50>
   511ec:	bl	12368 <__ctype_b_loc@plt>
   511f0:	mov	r3, r0
   511f4:	ldr	r2, [r3]
   511f8:	ldr	r3, [fp, #-16]
   511fc:	lsl	r3, r3, #1
   51200:	add	r3, r2, r3
   51204:	ldrh	r3, [r3]
   51208:	and	r3, r3, #512	; 0x200
   5120c:	cmp	r3, #0
   51210:	beq	51230 <__assert_fail@plt+0x3eb44>
   51214:	ldr	r3, [fp, #-16]
   51218:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5121c:	add	r3, r2, r3
   51220:	ldrb	r3, [r3]
   51224:	mov	r1, r3
   51228:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5122c:	bl	43ecc <__assert_fail@plt+0x317e0>
   51230:	ldr	r3, [fp, #-16]
   51234:	add	r3, r3, #1
   51238:	str	r3, [fp, #-16]
   5123c:	ldr	r3, [fp, #-16]
   51240:	cmp	r3, #255	; 0xff
   51244:	ble	511ec <__assert_fail@plt+0x3eb00>
   51248:	b	51b8c <__assert_fail@plt+0x3f4a0>
   5124c:	mov	r3, #0
   51250:	str	r3, [fp, #-16]
   51254:	b	51298 <__assert_fail@plt+0x3ebac>
   51258:	bl	12368 <__ctype_b_loc@plt>
   5125c:	mov	r3, r0
   51260:	ldr	r2, [r3]
   51264:	ldr	r3, [fp, #-16]
   51268:	lsl	r3, r3, #1
   5126c:	add	r3, r2, r3
   51270:	ldrh	r3, [r3]
   51274:	and	r3, r3, #512	; 0x200
   51278:	cmp	r3, #0
   5127c:	beq	5128c <__assert_fail@plt+0x3eba0>
   51280:	ldr	r1, [fp, #-16]
   51284:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51288:	bl	43ecc <__assert_fail@plt+0x317e0>
   5128c:	ldr	r3, [fp, #-16]
   51290:	add	r3, r3, #1
   51294:	str	r3, [fp, #-16]
   51298:	ldr	r3, [fp, #-16]
   5129c:	cmp	r3, #255	; 0xff
   512a0:	ble	51258 <__assert_fail@plt+0x3eb6c>
   512a4:	b	51b8c <__assert_fail@plt+0x3f4a0>
   512a8:	ldr	r1, [pc, #2304]	; 51bb0 <__assert_fail@plt+0x3f4c4>
   512ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   512b0:	bl	11ffc <strcmp@plt>
   512b4:	mov	r3, r0
   512b8:	cmp	r3, #0
   512bc:	bne	513a4 <__assert_fail@plt+0x3ecb8>
   512c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   512c4:	cmp	r3, #0
   512c8:	movne	r3, #1
   512cc:	moveq	r3, #0
   512d0:	uxtb	r3, r3
   512d4:	cmp	r3, #0
   512d8:	beq	51348 <__assert_fail@plt+0x3ec5c>
   512dc:	mov	r3, #0
   512e0:	str	r3, [fp, #-16]
   512e4:	b	51338 <__assert_fail@plt+0x3ec4c>
   512e8:	bl	12368 <__ctype_b_loc@plt>
   512ec:	mov	r3, r0
   512f0:	ldr	r2, [r3]
   512f4:	ldr	r3, [fp, #-16]
   512f8:	lsl	r3, r3, #1
   512fc:	add	r3, r2, r3
   51300:	ldrh	r3, [r3]
   51304:	and	r3, r3, #8192	; 0x2000
   51308:	cmp	r3, #0
   5130c:	beq	5132c <__assert_fail@plt+0x3ec40>
   51310:	ldr	r3, [fp, #-16]
   51314:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51318:	add	r3, r2, r3
   5131c:	ldrb	r3, [r3]
   51320:	mov	r1, r3
   51324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51328:	bl	43ecc <__assert_fail@plt+0x317e0>
   5132c:	ldr	r3, [fp, #-16]
   51330:	add	r3, r3, #1
   51334:	str	r3, [fp, #-16]
   51338:	ldr	r3, [fp, #-16]
   5133c:	cmp	r3, #255	; 0xff
   51340:	ble	512e8 <__assert_fail@plt+0x3ebfc>
   51344:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51348:	mov	r3, #0
   5134c:	str	r3, [fp, #-16]
   51350:	b	51394 <__assert_fail@plt+0x3eca8>
   51354:	bl	12368 <__ctype_b_loc@plt>
   51358:	mov	r3, r0
   5135c:	ldr	r2, [r3]
   51360:	ldr	r3, [fp, #-16]
   51364:	lsl	r3, r3, #1
   51368:	add	r3, r2, r3
   5136c:	ldrh	r3, [r3]
   51370:	and	r3, r3, #8192	; 0x2000
   51374:	cmp	r3, #0
   51378:	beq	51388 <__assert_fail@plt+0x3ec9c>
   5137c:	ldr	r1, [fp, #-16]
   51380:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51384:	bl	43ecc <__assert_fail@plt+0x317e0>
   51388:	ldr	r3, [fp, #-16]
   5138c:	add	r3, r3, #1
   51390:	str	r3, [fp, #-16]
   51394:	ldr	r3, [fp, #-16]
   51398:	cmp	r3, #255	; 0xff
   5139c:	ble	51354 <__assert_fail@plt+0x3ec68>
   513a0:	b	51b8c <__assert_fail@plt+0x3f4a0>
   513a4:	ldr	r1, [pc, #2040]	; 51ba4 <__assert_fail@plt+0x3f4b8>
   513a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   513ac:	bl	11ffc <strcmp@plt>
   513b0:	mov	r3, r0
   513b4:	cmp	r3, #0
   513b8:	bne	514a0 <__assert_fail@plt+0x3edb4>
   513bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   513c0:	cmp	r3, #0
   513c4:	movne	r3, #1
   513c8:	moveq	r3, #0
   513cc:	uxtb	r3, r3
   513d0:	cmp	r3, #0
   513d4:	beq	51444 <__assert_fail@plt+0x3ed58>
   513d8:	mov	r3, #0
   513dc:	str	r3, [fp, #-16]
   513e0:	b	51434 <__assert_fail@plt+0x3ed48>
   513e4:	bl	12368 <__ctype_b_loc@plt>
   513e8:	mov	r3, r0
   513ec:	ldr	r2, [r3]
   513f0:	ldr	r3, [fp, #-16]
   513f4:	lsl	r3, r3, #1
   513f8:	add	r3, r2, r3
   513fc:	ldrh	r3, [r3]
   51400:	and	r3, r3, #1024	; 0x400
   51404:	cmp	r3, #0
   51408:	beq	51428 <__assert_fail@plt+0x3ed3c>
   5140c:	ldr	r3, [fp, #-16]
   51410:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51414:	add	r3, r2, r3
   51418:	ldrb	r3, [r3]
   5141c:	mov	r1, r3
   51420:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51424:	bl	43ecc <__assert_fail@plt+0x317e0>
   51428:	ldr	r3, [fp, #-16]
   5142c:	add	r3, r3, #1
   51430:	str	r3, [fp, #-16]
   51434:	ldr	r3, [fp, #-16]
   51438:	cmp	r3, #255	; 0xff
   5143c:	ble	513e4 <__assert_fail@plt+0x3ecf8>
   51440:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51444:	mov	r3, #0
   51448:	str	r3, [fp, #-16]
   5144c:	b	51490 <__assert_fail@plt+0x3eda4>
   51450:	bl	12368 <__ctype_b_loc@plt>
   51454:	mov	r3, r0
   51458:	ldr	r2, [r3]
   5145c:	ldr	r3, [fp, #-16]
   51460:	lsl	r3, r3, #1
   51464:	add	r3, r2, r3
   51468:	ldrh	r3, [r3]
   5146c:	and	r3, r3, #1024	; 0x400
   51470:	cmp	r3, #0
   51474:	beq	51484 <__assert_fail@plt+0x3ed98>
   51478:	ldr	r1, [fp, #-16]
   5147c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51480:	bl	43ecc <__assert_fail@plt+0x317e0>
   51484:	ldr	r3, [fp, #-16]
   51488:	add	r3, r3, #1
   5148c:	str	r3, [fp, #-16]
   51490:	ldr	r3, [fp, #-16]
   51494:	cmp	r3, #255	; 0xff
   51498:	ble	51450 <__assert_fail@plt+0x3ed64>
   5149c:	b	51b8c <__assert_fail@plt+0x3f4a0>
   514a0:	ldr	r1, [pc, #1804]	; 51bb4 <__assert_fail@plt+0x3f4c8>
   514a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   514a8:	bl	11ffc <strcmp@plt>
   514ac:	mov	r3, r0
   514b0:	cmp	r3, #0
   514b4:	bne	5159c <__assert_fail@plt+0x3eeb0>
   514b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   514bc:	cmp	r3, #0
   514c0:	movne	r3, #1
   514c4:	moveq	r3, #0
   514c8:	uxtb	r3, r3
   514cc:	cmp	r3, #0
   514d0:	beq	51540 <__assert_fail@plt+0x3ee54>
   514d4:	mov	r3, #0
   514d8:	str	r3, [fp, #-16]
   514dc:	b	51530 <__assert_fail@plt+0x3ee44>
   514e0:	bl	12368 <__ctype_b_loc@plt>
   514e4:	mov	r3, r0
   514e8:	ldr	r2, [r3]
   514ec:	ldr	r3, [fp, #-16]
   514f0:	lsl	r3, r3, #1
   514f4:	add	r3, r2, r3
   514f8:	ldrh	r3, [r3]
   514fc:	and	r3, r3, #2048	; 0x800
   51500:	cmp	r3, #0
   51504:	beq	51524 <__assert_fail@plt+0x3ee38>
   51508:	ldr	r3, [fp, #-16]
   5150c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51510:	add	r3, r2, r3
   51514:	ldrb	r3, [r3]
   51518:	mov	r1, r3
   5151c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51520:	bl	43ecc <__assert_fail@plt+0x317e0>
   51524:	ldr	r3, [fp, #-16]
   51528:	add	r3, r3, #1
   5152c:	str	r3, [fp, #-16]
   51530:	ldr	r3, [fp, #-16]
   51534:	cmp	r3, #255	; 0xff
   51538:	ble	514e0 <__assert_fail@plt+0x3edf4>
   5153c:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51540:	mov	r3, #0
   51544:	str	r3, [fp, #-16]
   51548:	b	5158c <__assert_fail@plt+0x3eea0>
   5154c:	bl	12368 <__ctype_b_loc@plt>
   51550:	mov	r3, r0
   51554:	ldr	r2, [r3]
   51558:	ldr	r3, [fp, #-16]
   5155c:	lsl	r3, r3, #1
   51560:	add	r3, r2, r3
   51564:	ldrh	r3, [r3]
   51568:	and	r3, r3, #2048	; 0x800
   5156c:	cmp	r3, #0
   51570:	beq	51580 <__assert_fail@plt+0x3ee94>
   51574:	ldr	r1, [fp, #-16]
   51578:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5157c:	bl	43ecc <__assert_fail@plt+0x317e0>
   51580:	ldr	r3, [fp, #-16]
   51584:	add	r3, r3, #1
   51588:	str	r3, [fp, #-16]
   5158c:	ldr	r3, [fp, #-16]
   51590:	cmp	r3, #255	; 0xff
   51594:	ble	5154c <__assert_fail@plt+0x3ee60>
   51598:	b	51b8c <__assert_fail@plt+0x3f4a0>
   5159c:	ldr	r1, [pc, #1556]	; 51bb8 <__assert_fail@plt+0x3f4cc>
   515a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   515a4:	bl	11ffc <strcmp@plt>
   515a8:	mov	r3, r0
   515ac:	cmp	r3, #0
   515b0:	bne	51698 <__assert_fail@plt+0x3efac>
   515b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   515b8:	cmp	r3, #0
   515bc:	movne	r3, #1
   515c0:	moveq	r3, #0
   515c4:	uxtb	r3, r3
   515c8:	cmp	r3, #0
   515cc:	beq	5163c <__assert_fail@plt+0x3ef50>
   515d0:	mov	r3, #0
   515d4:	str	r3, [fp, #-16]
   515d8:	b	5162c <__assert_fail@plt+0x3ef40>
   515dc:	bl	12368 <__ctype_b_loc@plt>
   515e0:	mov	r3, r0
   515e4:	ldr	r2, [r3]
   515e8:	ldr	r3, [fp, #-16]
   515ec:	lsl	r3, r3, #1
   515f0:	add	r3, r2, r3
   515f4:	ldrh	r3, [r3]
   515f8:	and	r3, r3, #16384	; 0x4000
   515fc:	cmp	r3, #0
   51600:	beq	51620 <__assert_fail@plt+0x3ef34>
   51604:	ldr	r3, [fp, #-16]
   51608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5160c:	add	r3, r2, r3
   51610:	ldrb	r3, [r3]
   51614:	mov	r1, r3
   51618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5161c:	bl	43ecc <__assert_fail@plt+0x317e0>
   51620:	ldr	r3, [fp, #-16]
   51624:	add	r3, r3, #1
   51628:	str	r3, [fp, #-16]
   5162c:	ldr	r3, [fp, #-16]
   51630:	cmp	r3, #255	; 0xff
   51634:	ble	515dc <__assert_fail@plt+0x3eef0>
   51638:	b	51b8c <__assert_fail@plt+0x3f4a0>
   5163c:	mov	r3, #0
   51640:	str	r3, [fp, #-16]
   51644:	b	51688 <__assert_fail@plt+0x3ef9c>
   51648:	bl	12368 <__ctype_b_loc@plt>
   5164c:	mov	r3, r0
   51650:	ldr	r2, [r3]
   51654:	ldr	r3, [fp, #-16]
   51658:	lsl	r3, r3, #1
   5165c:	add	r3, r2, r3
   51660:	ldrh	r3, [r3]
   51664:	and	r3, r3, #16384	; 0x4000
   51668:	cmp	r3, #0
   5166c:	beq	5167c <__assert_fail@plt+0x3ef90>
   51670:	ldr	r1, [fp, #-16]
   51674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51678:	bl	43ecc <__assert_fail@plt+0x317e0>
   5167c:	ldr	r3, [fp, #-16]
   51680:	add	r3, r3, #1
   51684:	str	r3, [fp, #-16]
   51688:	ldr	r3, [fp, #-16]
   5168c:	cmp	r3, #255	; 0xff
   51690:	ble	51648 <__assert_fail@plt+0x3ef5c>
   51694:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51698:	ldr	r1, [pc, #1276]	; 51b9c <__assert_fail@plt+0x3f4b0>
   5169c:	ldr	r0, [fp, #-20]	; 0xffffffec
   516a0:	bl	11ffc <strcmp@plt>
   516a4:	mov	r3, r0
   516a8:	cmp	r3, #0
   516ac:	bne	51794 <__assert_fail@plt+0x3f0a8>
   516b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   516b4:	cmp	r3, #0
   516b8:	movne	r3, #1
   516bc:	moveq	r3, #0
   516c0:	uxtb	r3, r3
   516c4:	cmp	r3, #0
   516c8:	beq	51738 <__assert_fail@plt+0x3f04c>
   516cc:	mov	r3, #0
   516d0:	str	r3, [fp, #-16]
   516d4:	b	51728 <__assert_fail@plt+0x3f03c>
   516d8:	bl	12368 <__ctype_b_loc@plt>
   516dc:	mov	r3, r0
   516e0:	ldr	r2, [r3]
   516e4:	ldr	r3, [fp, #-16]
   516e8:	lsl	r3, r3, #1
   516ec:	add	r3, r2, r3
   516f0:	ldrh	r3, [r3]
   516f4:	and	r3, r3, #256	; 0x100
   516f8:	cmp	r3, #0
   516fc:	beq	5171c <__assert_fail@plt+0x3f030>
   51700:	ldr	r3, [fp, #-16]
   51704:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51708:	add	r3, r2, r3
   5170c:	ldrb	r3, [r3]
   51710:	mov	r1, r3
   51714:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51718:	bl	43ecc <__assert_fail@plt+0x317e0>
   5171c:	ldr	r3, [fp, #-16]
   51720:	add	r3, r3, #1
   51724:	str	r3, [fp, #-16]
   51728:	ldr	r3, [fp, #-16]
   5172c:	cmp	r3, #255	; 0xff
   51730:	ble	516d8 <__assert_fail@plt+0x3efec>
   51734:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51738:	mov	r3, #0
   5173c:	str	r3, [fp, #-16]
   51740:	b	51784 <__assert_fail@plt+0x3f098>
   51744:	bl	12368 <__ctype_b_loc@plt>
   51748:	mov	r3, r0
   5174c:	ldr	r2, [r3]
   51750:	ldr	r3, [fp, #-16]
   51754:	lsl	r3, r3, #1
   51758:	add	r3, r2, r3
   5175c:	ldrh	r3, [r3]
   51760:	and	r3, r3, #256	; 0x100
   51764:	cmp	r3, #0
   51768:	beq	51778 <__assert_fail@plt+0x3f08c>
   5176c:	ldr	r1, [fp, #-16]
   51770:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51774:	bl	43ecc <__assert_fail@plt+0x317e0>
   51778:	ldr	r3, [fp, #-16]
   5177c:	add	r3, r3, #1
   51780:	str	r3, [fp, #-16]
   51784:	ldr	r3, [fp, #-16]
   51788:	cmp	r3, #255	; 0xff
   5178c:	ble	51744 <__assert_fail@plt+0x3f058>
   51790:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51794:	ldr	r1, [pc, #1056]	; 51bbc <__assert_fail@plt+0x3f4d0>
   51798:	ldr	r0, [fp, #-20]	; 0xffffffec
   5179c:	bl	11ffc <strcmp@plt>
   517a0:	mov	r3, r0
   517a4:	cmp	r3, #0
   517a8:	bne	51890 <__assert_fail@plt+0x3f1a4>
   517ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   517b0:	cmp	r3, #0
   517b4:	movne	r3, #1
   517b8:	moveq	r3, #0
   517bc:	uxtb	r3, r3
   517c0:	cmp	r3, #0
   517c4:	beq	51834 <__assert_fail@plt+0x3f148>
   517c8:	mov	r3, #0
   517cc:	str	r3, [fp, #-16]
   517d0:	b	51824 <__assert_fail@plt+0x3f138>
   517d4:	bl	12368 <__ctype_b_loc@plt>
   517d8:	mov	r3, r0
   517dc:	ldr	r2, [r3]
   517e0:	ldr	r3, [fp, #-16]
   517e4:	lsl	r3, r3, #1
   517e8:	add	r3, r2, r3
   517ec:	ldrh	r3, [r3]
   517f0:	and	r3, r3, #1
   517f4:	cmp	r3, #0
   517f8:	beq	51818 <__assert_fail@plt+0x3f12c>
   517fc:	ldr	r3, [fp, #-16]
   51800:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51804:	add	r3, r2, r3
   51808:	ldrb	r3, [r3]
   5180c:	mov	r1, r3
   51810:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51814:	bl	43ecc <__assert_fail@plt+0x317e0>
   51818:	ldr	r3, [fp, #-16]
   5181c:	add	r3, r3, #1
   51820:	str	r3, [fp, #-16]
   51824:	ldr	r3, [fp, #-16]
   51828:	cmp	r3, #255	; 0xff
   5182c:	ble	517d4 <__assert_fail@plt+0x3f0e8>
   51830:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51834:	mov	r3, #0
   51838:	str	r3, [fp, #-16]
   5183c:	b	51880 <__assert_fail@plt+0x3f194>
   51840:	bl	12368 <__ctype_b_loc@plt>
   51844:	mov	r3, r0
   51848:	ldr	r2, [r3]
   5184c:	ldr	r3, [fp, #-16]
   51850:	lsl	r3, r3, #1
   51854:	add	r3, r2, r3
   51858:	ldrh	r3, [r3]
   5185c:	and	r3, r3, #1
   51860:	cmp	r3, #0
   51864:	beq	51874 <__assert_fail@plt+0x3f188>
   51868:	ldr	r1, [fp, #-16]
   5186c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51870:	bl	43ecc <__assert_fail@plt+0x317e0>
   51874:	ldr	r3, [fp, #-16]
   51878:	add	r3, r3, #1
   5187c:	str	r3, [fp, #-16]
   51880:	ldr	r3, [fp, #-16]
   51884:	cmp	r3, #255	; 0xff
   51888:	ble	51840 <__assert_fail@plt+0x3f154>
   5188c:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51890:	ldr	r1, [pc, #808]	; 51bc0 <__assert_fail@plt+0x3f4d4>
   51894:	ldr	r0, [fp, #-20]	; 0xffffffec
   51898:	bl	11ffc <strcmp@plt>
   5189c:	mov	r3, r0
   518a0:	cmp	r3, #0
   518a4:	bne	5198c <__assert_fail@plt+0x3f2a0>
   518a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   518ac:	cmp	r3, #0
   518b0:	movne	r3, #1
   518b4:	moveq	r3, #0
   518b8:	uxtb	r3, r3
   518bc:	cmp	r3, #0
   518c0:	beq	51930 <__assert_fail@plt+0x3f244>
   518c4:	mov	r3, #0
   518c8:	str	r3, [fp, #-16]
   518cc:	b	51920 <__assert_fail@plt+0x3f234>
   518d0:	bl	12368 <__ctype_b_loc@plt>
   518d4:	mov	r3, r0
   518d8:	ldr	r2, [r3]
   518dc:	ldr	r3, [fp, #-16]
   518e0:	lsl	r3, r3, #1
   518e4:	add	r3, r2, r3
   518e8:	ldrh	r3, [r3]
   518ec:	sxth	r3, r3
   518f0:	cmp	r3, #0
   518f4:	bge	51914 <__assert_fail@plt+0x3f228>
   518f8:	ldr	r3, [fp, #-16]
   518fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51900:	add	r3, r2, r3
   51904:	ldrb	r3, [r3]
   51908:	mov	r1, r3
   5190c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51910:	bl	43ecc <__assert_fail@plt+0x317e0>
   51914:	ldr	r3, [fp, #-16]
   51918:	add	r3, r3, #1
   5191c:	str	r3, [fp, #-16]
   51920:	ldr	r3, [fp, #-16]
   51924:	cmp	r3, #255	; 0xff
   51928:	ble	518d0 <__assert_fail@plt+0x3f1e4>
   5192c:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51930:	mov	r3, #0
   51934:	str	r3, [fp, #-16]
   51938:	b	5197c <__assert_fail@plt+0x3f290>
   5193c:	bl	12368 <__ctype_b_loc@plt>
   51940:	mov	r3, r0
   51944:	ldr	r2, [r3]
   51948:	ldr	r3, [fp, #-16]
   5194c:	lsl	r3, r3, #1
   51950:	add	r3, r2, r3
   51954:	ldrh	r3, [r3]
   51958:	sxth	r3, r3
   5195c:	cmp	r3, #0
   51960:	bge	51970 <__assert_fail@plt+0x3f284>
   51964:	ldr	r1, [fp, #-16]
   51968:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5196c:	bl	43ecc <__assert_fail@plt+0x317e0>
   51970:	ldr	r3, [fp, #-16]
   51974:	add	r3, r3, #1
   51978:	str	r3, [fp, #-16]
   5197c:	ldr	r3, [fp, #-16]
   51980:	cmp	r3, #255	; 0xff
   51984:	ble	5193c <__assert_fail@plt+0x3f250>
   51988:	b	51b8c <__assert_fail@plt+0x3f4a0>
   5198c:	ldr	r1, [pc, #560]	; 51bc4 <__assert_fail@plt+0x3f4d8>
   51990:	ldr	r0, [fp, #-20]	; 0xffffffec
   51994:	bl	11ffc <strcmp@plt>
   51998:	mov	r3, r0
   5199c:	cmp	r3, #0
   519a0:	bne	51a88 <__assert_fail@plt+0x3f39c>
   519a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   519a8:	cmp	r3, #0
   519ac:	movne	r3, #1
   519b0:	moveq	r3, #0
   519b4:	uxtb	r3, r3
   519b8:	cmp	r3, #0
   519bc:	beq	51a2c <__assert_fail@plt+0x3f340>
   519c0:	mov	r3, #0
   519c4:	str	r3, [fp, #-16]
   519c8:	b	51a1c <__assert_fail@plt+0x3f330>
   519cc:	bl	12368 <__ctype_b_loc@plt>
   519d0:	mov	r3, r0
   519d4:	ldr	r2, [r3]
   519d8:	ldr	r3, [fp, #-16]
   519dc:	lsl	r3, r3, #1
   519e0:	add	r3, r2, r3
   519e4:	ldrh	r3, [r3]
   519e8:	and	r3, r3, #4
   519ec:	cmp	r3, #0
   519f0:	beq	51a10 <__assert_fail@plt+0x3f324>
   519f4:	ldr	r3, [fp, #-16]
   519f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   519fc:	add	r3, r2, r3
   51a00:	ldrb	r3, [r3]
   51a04:	mov	r1, r3
   51a08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51a0c:	bl	43ecc <__assert_fail@plt+0x317e0>
   51a10:	ldr	r3, [fp, #-16]
   51a14:	add	r3, r3, #1
   51a18:	str	r3, [fp, #-16]
   51a1c:	ldr	r3, [fp, #-16]
   51a20:	cmp	r3, #255	; 0xff
   51a24:	ble	519cc <__assert_fail@plt+0x3f2e0>
   51a28:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51a2c:	mov	r3, #0
   51a30:	str	r3, [fp, #-16]
   51a34:	b	51a78 <__assert_fail@plt+0x3f38c>
   51a38:	bl	12368 <__ctype_b_loc@plt>
   51a3c:	mov	r3, r0
   51a40:	ldr	r2, [r3]
   51a44:	ldr	r3, [fp, #-16]
   51a48:	lsl	r3, r3, #1
   51a4c:	add	r3, r2, r3
   51a50:	ldrh	r3, [r3]
   51a54:	and	r3, r3, #4
   51a58:	cmp	r3, #0
   51a5c:	beq	51a6c <__assert_fail@plt+0x3f380>
   51a60:	ldr	r1, [fp, #-16]
   51a64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51a68:	bl	43ecc <__assert_fail@plt+0x317e0>
   51a6c:	ldr	r3, [fp, #-16]
   51a70:	add	r3, r3, #1
   51a74:	str	r3, [fp, #-16]
   51a78:	ldr	r3, [fp, #-16]
   51a7c:	cmp	r3, #255	; 0xff
   51a80:	ble	51a38 <__assert_fail@plt+0x3f34c>
   51a84:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51a88:	ldr	r1, [pc, #312]	; 51bc8 <__assert_fail@plt+0x3f4dc>
   51a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   51a90:	bl	11ffc <strcmp@plt>
   51a94:	mov	r3, r0
   51a98:	cmp	r3, #0
   51a9c:	bne	51b84 <__assert_fail@plt+0x3f498>
   51aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51aa4:	cmp	r3, #0
   51aa8:	movne	r3, #1
   51aac:	moveq	r3, #0
   51ab0:	uxtb	r3, r3
   51ab4:	cmp	r3, #0
   51ab8:	beq	51b28 <__assert_fail@plt+0x3f43c>
   51abc:	mov	r3, #0
   51ac0:	str	r3, [fp, #-16]
   51ac4:	b	51b18 <__assert_fail@plt+0x3f42c>
   51ac8:	bl	12368 <__ctype_b_loc@plt>
   51acc:	mov	r3, r0
   51ad0:	ldr	r2, [r3]
   51ad4:	ldr	r3, [fp, #-16]
   51ad8:	lsl	r3, r3, #1
   51adc:	add	r3, r2, r3
   51ae0:	ldrh	r3, [r3]
   51ae4:	and	r3, r3, #4096	; 0x1000
   51ae8:	cmp	r3, #0
   51aec:	beq	51b0c <__assert_fail@plt+0x3f420>
   51af0:	ldr	r3, [fp, #-16]
   51af4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51af8:	add	r3, r2, r3
   51afc:	ldrb	r3, [r3]
   51b00:	mov	r1, r3
   51b04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51b08:	bl	43ecc <__assert_fail@plt+0x317e0>
   51b0c:	ldr	r3, [fp, #-16]
   51b10:	add	r3, r3, #1
   51b14:	str	r3, [fp, #-16]
   51b18:	ldr	r3, [fp, #-16]
   51b1c:	cmp	r3, #255	; 0xff
   51b20:	ble	51ac8 <__assert_fail@plt+0x3f3dc>
   51b24:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51b28:	mov	r3, #0
   51b2c:	str	r3, [fp, #-16]
   51b30:	b	51b74 <__assert_fail@plt+0x3f488>
   51b34:	bl	12368 <__ctype_b_loc@plt>
   51b38:	mov	r3, r0
   51b3c:	ldr	r2, [r3]
   51b40:	ldr	r3, [fp, #-16]
   51b44:	lsl	r3, r3, #1
   51b48:	add	r3, r2, r3
   51b4c:	ldrh	r3, [r3]
   51b50:	and	r3, r3, #4096	; 0x1000
   51b54:	cmp	r3, #0
   51b58:	beq	51b68 <__assert_fail@plt+0x3f47c>
   51b5c:	ldr	r1, [fp, #-16]
   51b60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51b64:	bl	43ecc <__assert_fail@plt+0x317e0>
   51b68:	ldr	r3, [fp, #-16]
   51b6c:	add	r3, r3, #1
   51b70:	str	r3, [fp, #-16]
   51b74:	ldr	r3, [fp, #-16]
   51b78:	cmp	r3, #255	; 0xff
   51b7c:	ble	51b34 <__assert_fail@plt+0x3f448>
   51b80:	b	51b8c <__assert_fail@plt+0x3f4a0>
   51b84:	mov	r3, #4
   51b88:	b	51b90 <__assert_fail@plt+0x3f4a4>
   51b8c:	mov	r3, #0
   51b90:	mov	r0, r3
   51b94:	sub	sp, fp, #8
   51b98:	pop	{r4, fp, pc}
   51b9c:	strdeq	sl, [r6], -r4
   51ba0:	strdeq	sl, [r6], -ip
   51ba4:	andeq	sl, r6, r4, lsl #30
   51ba8:	andeq	sl, r6, r0, ror #29
   51bac:	andeq	sl, r6, ip, lsl #30
   51bb0:	andeq	sl, r6, ip, ror #29
   51bb4:	andeq	sl, r6, r4, lsl pc
   51bb8:	andeq	sl, r6, ip, lsl pc
   51bbc:	andeq	sl, r6, r4, lsr #30
   51bc0:	andeq	sl, r6, ip, lsr #30
   51bc4:	andeq	sl, r6, r4, lsr pc
   51bc8:	andeq	sl, r6, ip, lsr pc
   51bcc:	push	{fp, lr}
   51bd0:	add	fp, sp, #4
   51bd4:	sub	sp, sp, #56	; 0x38
   51bd8:	str	r0, [fp, #-40]	; 0xffffffd8
   51bdc:	str	r1, [fp, #-44]	; 0xffffffd4
   51be0:	str	r2, [fp, #-48]	; 0xffffffd0
   51be4:	str	r3, [fp, #-52]	; 0xffffffcc
   51be8:	mov	r3, #0
   51bec:	str	r3, [fp, #-28]	; 0xffffffe4
   51bf0:	mov	r1, #1
   51bf4:	mov	r0, #32
   51bf8:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   51bfc:	mov	r3, r0
   51c00:	str	r3, [fp, #-8]
   51c04:	ldr	r3, [fp, #-8]
   51c08:	cmp	r3, #0
   51c0c:	moveq	r3, #1
   51c10:	movne	r3, #0
   51c14:	uxtb	r3, r3
   51c18:	cmp	r3, #0
   51c1c:	beq	51c34 <__assert_fail@plt+0x3f548>
   51c20:	ldr	r3, [fp, #8]
   51c24:	mov	r2, #12
   51c28:	str	r2, [r3]
   51c2c:	mov	r3, #0
   51c30:	b	51ea0 <__assert_fail@plt+0x3f7b4>
   51c34:	mov	r1, #1
   51c38:	mov	r0, #40	; 0x28
   51c3c:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   51c40:	mov	r3, r0
   51c44:	str	r3, [fp, #-12]
   51c48:	ldr	r3, [fp, #-12]
   51c4c:	cmp	r3, #0
   51c50:	moveq	r3, #1
   51c54:	movne	r3, #0
   51c58:	uxtb	r3, r3
   51c5c:	cmp	r3, #0
   51c60:	beq	51c80 <__assert_fail@plt+0x3f594>
   51c64:	ldr	r0, [fp, #-8]
   51c68:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   51c6c:	ldr	r3, [fp, #8]
   51c70:	mov	r2, #12
   51c74:	str	r2, [r3]
   51c78:	mov	r3, #0
   51c7c:	b	51ea0 <__assert_fail@plt+0x3f7b4>
   51c80:	ldr	r2, [fp, #-12]
   51c84:	ldrb	r3, [r2, #16]
   51c88:	ldrb	r1, [fp, #4]
   51c8c:	and	r1, r1, #1
   51c90:	bic	r3, r3, #1
   51c94:	orr	r3, r1, r3
   51c98:	strb	r3, [r2, #16]
   51c9c:	sub	r2, fp, #28
   51ca0:	mov	r3, #0
   51ca4:	str	r3, [sp, #4]
   51ca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   51cac:	str	r3, [sp]
   51cb0:	mov	r3, r2
   51cb4:	ldr	r2, [fp, #-12]
   51cb8:	ldr	r1, [fp, #-8]
   51cbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   51cc0:	bl	50e7c <__assert_fail@plt+0x3e790>
   51cc4:	str	r0, [fp, #-16]
   51cc8:	ldr	r3, [fp, #-16]
   51ccc:	cmp	r3, #0
   51cd0:	movne	r3, #1
   51cd4:	moveq	r3, #0
   51cd8:	uxtb	r3, r3
   51cdc:	cmp	r3, #0
   51ce0:	beq	51d28 <__assert_fail@plt+0x3f63c>
   51ce4:	ldr	r0, [fp, #-8]
   51ce8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   51cec:	ldr	r0, [fp, #-12]
   51cf0:	bl	51fc8 <__assert_fail@plt+0x3f8dc>
   51cf4:	ldr	r3, [fp, #8]
   51cf8:	ldr	r2, [fp, #-16]
   51cfc:	str	r2, [r3]
   51d00:	mov	r3, #0
   51d04:	b	51ea0 <__assert_fail@plt+0x3f7b4>
   51d08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   51d0c:	ldrb	r3, [r3]
   51d10:	mov	r1, r3
   51d14:	ldr	r0, [fp, #-8]
   51d18:	bl	43ecc <__assert_fail@plt+0x317e0>
   51d1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   51d20:	add	r3, r3, #1
   51d24:	str	r3, [fp, #-52]	; 0xffffffcc
   51d28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   51d2c:	ldrb	r3, [r3]
   51d30:	cmp	r3, #0
   51d34:	bne	51d08 <__assert_fail@plt+0x3f61c>
   51d38:	ldrb	r3, [fp, #4]
   51d3c:	cmp	r3, #0
   51d40:	beq	51d4c <__assert_fail@plt+0x3f660>
   51d44:	ldr	r0, [fp, #-8]
   51d48:	bl	440f4 <__assert_fail@plt+0x31a08>
   51d4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51d50:	ldr	r3, [r3, #92]	; 0x5c
   51d54:	cmp	r3, #1
   51d58:	ble	51d70 <__assert_fail@plt+0x3f684>
   51d5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51d60:	ldr	r3, [r3, #60]	; 0x3c
   51d64:	mov	r1, r3
   51d68:	ldr	r0, [fp, #-8]
   51d6c:	bl	441ec <__assert_fail@plt+0x31b00>
   51d70:	sub	r3, fp, #36	; 0x24
   51d74:	mov	r2, #0
   51d78:	str	r2, [r3]
   51d7c:	str	r2, [r3, #4]
   51d80:	ldr	r3, [fp, #-8]
   51d84:	str	r3, [fp, #-36]	; 0xffffffdc
   51d88:	mov	r3, #3
   51d8c:	strb	r3, [fp, #-32]	; 0xffffffe0
   51d90:	sub	r3, fp, #36	; 0x24
   51d94:	mov	r2, #0
   51d98:	mov	r1, #0
   51d9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   51da0:	bl	52088 <__assert_fail@plt+0x3f99c>
   51da4:	str	r0, [fp, #-20]	; 0xffffffec
   51da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   51dac:	cmp	r3, #0
   51db0:	moveq	r3, #1
   51db4:	movne	r3, #0
   51db8:	uxtb	r3, r3
   51dbc:	cmp	r3, #0
   51dc0:	bne	51e74 <__assert_fail@plt+0x3f788>
   51dc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51dc8:	ldr	r3, [r3, #92]	; 0x5c
   51dcc:	cmp	r3, #1
   51dd0:	ble	51e64 <__assert_fail@plt+0x3f778>
   51dd4:	mov	r3, #6
   51dd8:	strb	r3, [fp, #-32]	; 0xffffffe0
   51ddc:	ldr	r3, [fp, #-12]
   51de0:	str	r3, [fp, #-36]	; 0xffffffdc
   51de4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   51de8:	ldrb	r3, [r2, #88]	; 0x58
   51dec:	orr	r3, r3, #2
   51df0:	strb	r3, [r2, #88]	; 0x58
   51df4:	sub	r3, fp, #36	; 0x24
   51df8:	mov	r2, #0
   51dfc:	mov	r1, #0
   51e00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   51e04:	bl	52088 <__assert_fail@plt+0x3f99c>
   51e08:	str	r0, [fp, #-24]	; 0xffffffe8
   51e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51e10:	cmp	r3, #0
   51e14:	moveq	r3, #1
   51e18:	movne	r3, #0
   51e1c:	uxtb	r3, r3
   51e20:	cmp	r3, #0
   51e24:	bne	51e7c <__assert_fail@plt+0x3f790>
   51e28:	mov	r3, #10
   51e2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   51e30:	ldr	r1, [fp, #-20]	; 0xffffffec
   51e34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   51e38:	bl	5202c <__assert_fail@plt+0x3f940>
   51e3c:	str	r0, [fp, #-20]	; 0xffffffec
   51e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51e44:	cmp	r3, #0
   51e48:	movne	r3, #1
   51e4c:	moveq	r3, #0
   51e50:	uxtb	r3, r3
   51e54:	cmp	r3, #0
   51e58:	beq	51e80 <__assert_fail@plt+0x3f794>
   51e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   51e60:	b	51ea0 <__assert_fail@plt+0x3f7b4>
   51e64:	ldr	r0, [fp, #-12]
   51e68:	bl	51fc8 <__assert_fail@plt+0x3f8dc>
   51e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   51e70:	b	51ea0 <__assert_fail@plt+0x3f7b4>
   51e74:	nop			; (mov r0, r0)
   51e78:	b	51e80 <__assert_fail@plt+0x3f794>
   51e7c:	nop			; (mov r0, r0)
   51e80:	ldr	r0, [fp, #-8]
   51e84:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   51e88:	ldr	r0, [fp, #-12]
   51e8c:	bl	51fc8 <__assert_fail@plt+0x3f8dc>
   51e90:	ldr	r3, [fp, #8]
   51e94:	mov	r2, #12
   51e98:	str	r2, [r3]
   51e9c:	mov	r3, #0
   51ea0:	mov	r0, r3
   51ea4:	sub	sp, fp, #4
   51ea8:	pop	{fp, pc}
   51eac:	push	{fp, lr}
   51eb0:	add	fp, sp, #4
   51eb4:	sub	sp, sp, #24
   51eb8:	str	r0, [fp, #-16]
   51ebc:	str	r1, [fp, #-20]	; 0xffffffec
   51ec0:	str	r2, [fp, #-24]	; 0xffffffe8
   51ec4:	mvn	r3, #0
   51ec8:	str	r3, [fp, #-8]
   51ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   51ed0:	ldr	r1, [fp, #-16]
   51ed4:	ldr	r0, [fp, #-20]	; 0xffffffec
   51ed8:	bl	4d440 <__assert_fail@plt+0x3ad54>
   51edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   51ee0:	ldrb	r3, [r3]
   51ee4:	strb	r3, [fp, #-9]
   51ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   51eec:	ldrb	r3, [r3, #4]
   51ef0:	cmp	r3, #2
   51ef4:	moveq	r3, #1
   51ef8:	movne	r3, #0
   51efc:	uxtb	r3, r3
   51f00:	cmp	r3, #0
   51f04:	beq	51f10 <__assert_fail@plt+0x3f824>
   51f08:	mvn	r3, #1
   51f0c:	b	51fbc <__assert_fail@plt+0x3f8d0>
   51f10:	ldr	r3, [fp, #-20]	; 0xffffffec
   51f14:	ldrb	r3, [r3, #4]
   51f18:	cmp	r3, #24
   51f1c:	beq	51fb8 <__assert_fail@plt+0x3f8cc>
   51f20:	ldrb	r3, [fp, #-9]
   51f24:	cmp	r3, #44	; 0x2c
   51f28:	beq	51fb8 <__assert_fail@plt+0x3f8cc>
   51f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   51f30:	ldrb	r3, [r3, #4]
   51f34:	cmp	r3, #1
   51f38:	bne	51fac <__assert_fail@plt+0x3f8c0>
   51f3c:	ldrb	r3, [fp, #-9]
   51f40:	cmp	r3, #47	; 0x2f
   51f44:	bls	51fac <__assert_fail@plt+0x3f8c0>
   51f48:	ldrb	r3, [fp, #-9]
   51f4c:	cmp	r3, #57	; 0x39
   51f50:	bhi	51fac <__assert_fail@plt+0x3f8c0>
   51f54:	ldr	r3, [fp, #-8]
   51f58:	cmn	r3, #2
   51f5c:	beq	51fac <__assert_fail@plt+0x3f8c0>
   51f60:	ldr	r3, [fp, #-8]
   51f64:	cmn	r3, #1
   51f68:	bne	51f78 <__assert_fail@plt+0x3f88c>
   51f6c:	ldrb	r3, [fp, #-9]
   51f70:	sub	r3, r3, #48	; 0x30
   51f74:	b	51fb0 <__assert_fail@plt+0x3f8c4>
   51f78:	ldr	r2, [fp, #-8]
   51f7c:	mov	r3, r2
   51f80:	lsl	r3, r3, #2
   51f84:	add	r3, r3, r2
   51f88:	lsl	r3, r3, #1
   51f8c:	mov	r2, r3
   51f90:	ldrb	r3, [fp, #-9]
   51f94:	add	r3, r2, r3
   51f98:	sub	r3, r3, #48	; 0x30
   51f9c:	cmp	r3, #32768	; 0x8000
   51fa0:	movlt	r3, r3
   51fa4:	movge	r3, #32768	; 0x8000
   51fa8:	b	51fb0 <__assert_fail@plt+0x3f8c4>
   51fac:	mvn	r3, #1
   51fb0:	str	r3, [fp, #-8]
   51fb4:	b	51ecc <__assert_fail@plt+0x3f7e0>
   51fb8:	ldr	r3, [fp, #-8]
   51fbc:	mov	r0, r3
   51fc0:	sub	sp, fp, #4
   51fc4:	pop	{fp, pc}
   51fc8:	push	{fp, lr}
   51fcc:	add	fp, sp, #4
   51fd0:	sub	sp, sp, #8
   51fd4:	str	r0, [fp, #-8]
   51fd8:	ldr	r3, [fp, #-8]
   51fdc:	ldr	r3, [r3]
   51fe0:	mov	r0, r3
   51fe4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   51fe8:	ldr	r3, [fp, #-8]
   51fec:	ldr	r3, [r3, #4]
   51ff0:	mov	r0, r3
   51ff4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   51ff8:	ldr	r3, [fp, #-8]
   51ffc:	ldr	r3, [r3, #8]
   52000:	mov	r0, r3
   52004:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   52008:	ldr	r3, [fp, #-8]
   5200c:	ldr	r3, [r3, #12]
   52010:	mov	r0, r3
   52014:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   52018:	ldr	r0, [fp, #-8]
   5201c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   52020:	nop			; (mov r0, r0)
   52024:	sub	sp, fp, #4
   52028:	pop	{fp, pc}
   5202c:	push	{fp, lr}
   52030:	add	fp, sp, #4
   52034:	sub	sp, sp, #24
   52038:	str	r0, [fp, #-16]
   5203c:	str	r1, [fp, #-20]	; 0xffffffec
   52040:	str	r2, [fp, #-24]	; 0xffffffe8
   52044:	str	r3, [fp, #-28]	; 0xffffffe4
   52048:	sub	r3, fp, #12
   5204c:	mov	r2, #0
   52050:	str	r2, [r3]
   52054:	str	r2, [r3, #4]
   52058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5205c:	uxtb	r3, r3
   52060:	strb	r3, [fp, #-8]
   52064:	sub	r3, fp, #12
   52068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5206c:	ldr	r1, [fp, #-20]	; 0xffffffec
   52070:	ldr	r0, [fp, #-16]
   52074:	bl	52088 <__assert_fail@plt+0x3f99c>
   52078:	mov	r3, r0
   5207c:	mov	r0, r3
   52080:	sub	sp, fp, #4
   52084:	pop	{fp, pc}
   52088:	push	{fp, lr}
   5208c:	add	fp, sp, #4
   52090:	sub	sp, sp, #24
   52094:	str	r0, [fp, #-16]
   52098:	str	r1, [fp, #-20]	; 0xffffffec
   5209c:	str	r2, [fp, #-24]	; 0xffffffe8
   520a0:	str	r3, [fp, #-28]	; 0xffffffe4
   520a4:	ldr	r3, [fp, #-16]
   520a8:	ldr	r3, [r3, #64]	; 0x40
   520ac:	cmp	r3, #31
   520b0:	moveq	r3, #1
   520b4:	movne	r3, #0
   520b8:	uxtb	r3, r3
   520bc:	cmp	r3, #0
   520c0:	beq	52110 <__assert_fail@plt+0x3fa24>
   520c4:	mov	r0, #996	; 0x3e4
   520c8:	bl	42ba8 <__assert_fail@plt+0x304bc>
   520cc:	mov	r3, r0
   520d0:	str	r3, [fp, #-8]
   520d4:	ldr	r3, [fp, #-8]
   520d8:	cmp	r3, #0
   520dc:	bne	520e8 <__assert_fail@plt+0x3f9fc>
   520e0:	mov	r3, #0
   520e4:	b	521ec <__assert_fail@plt+0x3fb00>
   520e8:	ldr	r3, [fp, #-16]
   520ec:	ldr	r2, [r3, #56]	; 0x38
   520f0:	ldr	r3, [fp, #-8]
   520f4:	str	r2, [r3]
   520f8:	ldr	r3, [fp, #-16]
   520fc:	ldr	r2, [fp, #-8]
   52100:	str	r2, [r3, #56]	; 0x38
   52104:	ldr	r3, [fp, #-16]
   52108:	mov	r2, #0
   5210c:	str	r2, [r3, #64]	; 0x40
   52110:	ldr	r3, [fp, #-16]
   52114:	ldr	r2, [r3, #56]	; 0x38
   52118:	ldr	r3, [fp, #-16]
   5211c:	ldr	r3, [r3, #64]	; 0x40
   52120:	add	r0, r3, #1
   52124:	ldr	r1, [fp, #-16]
   52128:	str	r0, [r1, #64]	; 0x40
   5212c:	lsl	r3, r3, #5
   52130:	add	r3, r2, r3
   52134:	add	r3, r3, #4
   52138:	str	r3, [fp, #-12]
   5213c:	ldr	r3, [fp, #-12]
   52140:	mov	r2, #0
   52144:	str	r2, [r3]
   52148:	ldr	r3, [fp, #-12]
   5214c:	ldr	r2, [fp, #-20]	; 0xffffffec
   52150:	str	r2, [r3, #4]
   52154:	ldr	r3, [fp, #-12]
   52158:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5215c:	str	r2, [r3, #8]
   52160:	ldr	r3, [fp, #-12]
   52164:	ldr	r2, [fp, #-28]	; 0xffffffe4
   52168:	add	r3, r3, #20
   5216c:	ldm	r2, {r0, r1}
   52170:	stm	r3, {r0, r1}
   52174:	ldr	r2, [fp, #-12]
   52178:	ldrb	r3, [r2, #26]
   5217c:	bic	r3, r3, #4
   52180:	strb	r3, [r2, #26]
   52184:	ldr	r2, [fp, #-12]
   52188:	ldrb	r3, [r2, #26]
   5218c:	bic	r3, r3, #8
   52190:	strb	r3, [r2, #26]
   52194:	ldr	r3, [fp, #-12]
   52198:	mov	r2, #0
   5219c:	str	r2, [r3, #12]
   521a0:	ldr	r3, [fp, #-12]
   521a4:	mov	r2, #0
   521a8:	str	r2, [r3, #16]
   521ac:	ldr	r3, [fp, #-12]
   521b0:	mvn	r2, #0
   521b4:	str	r2, [r3, #28]
   521b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   521bc:	cmp	r3, #0
   521c0:	beq	521d0 <__assert_fail@plt+0x3fae4>
   521c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   521c8:	ldr	r2, [fp, #-12]
   521cc:	str	r2, [r3]
   521d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   521d4:	cmp	r3, #0
   521d8:	beq	521e8 <__assert_fail@plt+0x3fafc>
   521dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   521e0:	ldr	r2, [fp, #-12]
   521e4:	str	r2, [r3]
   521e8:	ldr	r3, [fp, #-12]
   521ec:	mov	r0, r3
   521f0:	sub	sp, fp, #4
   521f4:	pop	{fp, pc}
   521f8:	push	{fp}		; (str fp, [sp, #-4]!)
   521fc:	add	fp, sp, #0
   52200:	sub	sp, sp, #20
   52204:	str	r0, [fp, #-16]
   52208:	str	r1, [fp, #-20]	; 0xffffffec
   5220c:	ldr	r3, [fp, #-16]
   52210:	str	r3, [fp, #-8]
   52214:	ldr	r3, [fp, #-20]	; 0xffffffec
   52218:	ldrb	r3, [r3, #24]
   5221c:	cmp	r3, #17
   52220:	bne	52248 <__assert_fail@plt+0x3fb5c>
   52224:	ldr	r3, [fp, #-20]	; 0xffffffec
   52228:	ldr	r2, [r3, #20]
   5222c:	ldr	r3, [fp, #-8]
   52230:	cmp	r2, r3
   52234:	bne	52248 <__assert_fail@plt+0x3fb5c>
   52238:	ldr	r2, [fp, #-20]	; 0xffffffec
   5223c:	ldrb	r3, [r2, #26]
   52240:	orr	r3, r3, #8
   52244:	strb	r3, [r2, #26]
   52248:	mov	r3, #0
   5224c:	mov	r0, r3
   52250:	add	sp, fp, #0
   52254:	pop	{fp}		; (ldr fp, [sp], #4)
   52258:	bx	lr
   5225c:	push	{fp, lr}
   52260:	add	fp, sp, #4
   52264:	sub	sp, sp, #8
   52268:	str	r0, [fp, #-8]
   5226c:	ldr	r3, [fp, #-8]
   52270:	ldrb	r3, [r3, #4]
   52274:	cmp	r3, #6
   52278:	bne	522a8 <__assert_fail@plt+0x3fbbc>
   5227c:	ldr	r3, [fp, #-8]
   52280:	ldrb	r3, [r3, #6]
   52284:	and	r3, r3, #4
   52288:	uxtb	r3, r3
   5228c:	cmp	r3, #0
   52290:	bne	522a8 <__assert_fail@plt+0x3fbbc>
   52294:	ldr	r3, [fp, #-8]
   52298:	ldr	r3, [r3]
   5229c:	mov	r0, r3
   522a0:	bl	51fc8 <__assert_fail@plt+0x3f8dc>
   522a4:	b	522e0 <__assert_fail@plt+0x3fbf4>
   522a8:	ldr	r3, [fp, #-8]
   522ac:	ldrb	r3, [r3, #4]
   522b0:	cmp	r3, #3
   522b4:	bne	522e0 <__assert_fail@plt+0x3fbf4>
   522b8:	ldr	r3, [fp, #-8]
   522bc:	ldrb	r3, [r3, #6]
   522c0:	and	r3, r3, #4
   522c4:	uxtb	r3, r3
   522c8:	cmp	r3, #0
   522cc:	bne	522e0 <__assert_fail@plt+0x3fbf4>
   522d0:	ldr	r3, [fp, #-8]
   522d4:	ldr	r3, [r3]
   522d8:	mov	r0, r3
   522dc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   522e0:	nop			; (mov r0, r0)
   522e4:	sub	sp, fp, #4
   522e8:	pop	{fp, pc}
   522ec:	push	{fp, lr}
   522f0:	add	fp, sp, #4
   522f4:	sub	sp, sp, #8
   522f8:	str	r0, [fp, #-8]
   522fc:	str	r1, [fp, #-12]
   52300:	ldr	r3, [fp, #-12]
   52304:	add	r3, r3, #20
   52308:	mov	r0, r3
   5230c:	bl	5225c <__assert_fail@plt+0x3fb70>
   52310:	mov	r3, #0
   52314:	mov	r0, r3
   52318:	sub	sp, fp, #4
   5231c:	pop	{fp, pc}
   52320:	push	{fp, lr}
   52324:	add	fp, sp, #4
   52328:	sub	sp, sp, #32
   5232c:	str	r0, [fp, #-32]	; 0xffffffe0
   52330:	str	r1, [fp, #-36]	; 0xffffffdc
   52334:	sub	r3, fp, #24
   52338:	str	r3, [fp, #-12]
   5233c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52340:	ldr	r3, [r3]
   52344:	str	r3, [fp, #-16]
   52348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5234c:	str	r3, [fp, #-8]
   52350:	ldr	r3, [fp, #-8]
   52354:	add	r3, r3, #20
   52358:	mov	r2, #0
   5235c:	mov	r1, #0
   52360:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52364:	bl	52088 <__assert_fail@plt+0x3f99c>
   52368:	mov	r2, r0
   5236c:	ldr	r3, [fp, #-12]
   52370:	str	r2, [r3]
   52374:	ldr	r3, [fp, #-12]
   52378:	ldr	r3, [r3]
   5237c:	cmp	r3, #0
   52380:	bne	5238c <__assert_fail@plt+0x3fca0>
   52384:	mov	r3, #0
   52388:	b	52468 <__assert_fail@plt+0x3fd7c>
   5238c:	ldr	r3, [fp, #-12]
   52390:	ldr	r3, [r3]
   52394:	ldr	r2, [fp, #-16]
   52398:	str	r2, [r3]
   5239c:	ldr	r3, [fp, #-12]
   523a0:	ldr	r2, [r3]
   523a4:	ldrb	r3, [r2, #26]
   523a8:	orr	r3, r3, #4
   523ac:	strb	r3, [r2, #26]
   523b0:	ldr	r3, [fp, #-12]
   523b4:	ldr	r3, [r3]
   523b8:	str	r3, [fp, #-16]
   523bc:	ldr	r3, [fp, #-8]
   523c0:	ldr	r3, [r3, #4]
   523c4:	cmp	r3, #0
   523c8:	beq	523e8 <__assert_fail@plt+0x3fcfc>
   523cc:	ldr	r3, [fp, #-8]
   523d0:	ldr	r3, [r3, #4]
   523d4:	str	r3, [fp, #-8]
   523d8:	ldr	r3, [fp, #-16]
   523dc:	add	r3, r3, #4
   523e0:	str	r3, [fp, #-12]
   523e4:	b	52350 <__assert_fail@plt+0x3fc64>
   523e8:	mov	r3, #0
   523ec:	str	r3, [fp, #-20]	; 0xffffffec
   523f0:	b	52428 <__assert_fail@plt+0x3fd3c>
   523f4:	ldr	r3, [fp, #-8]
   523f8:	str	r3, [fp, #-20]	; 0xffffffec
   523fc:	ldr	r3, [fp, #-8]
   52400:	ldr	r3, [r3]
   52404:	str	r3, [fp, #-8]
   52408:	ldr	r3, [fp, #-16]
   5240c:	ldr	r3, [r3]
   52410:	str	r3, [fp, #-16]
   52414:	ldr	r3, [fp, #-8]
   52418:	cmp	r3, #0
   5241c:	bne	52428 <__assert_fail@plt+0x3fd3c>
   52420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52424:	b	52468 <__assert_fail@plt+0x3fd7c>
   52428:	ldr	r3, [fp, #-8]
   5242c:	ldr	r2, [r3, #8]
   52430:	ldr	r3, [fp, #-20]	; 0xffffffec
   52434:	cmp	r2, r3
   52438:	beq	523f4 <__assert_fail@plt+0x3fd08>
   5243c:	ldr	r3, [fp, #-8]
   52440:	ldr	r3, [r3, #8]
   52444:	cmp	r3, #0
   52448:	beq	523f4 <__assert_fail@plt+0x3fd08>
   5244c:	ldr	r3, [fp, #-8]
   52450:	ldr	r3, [r3, #8]
   52454:	str	r3, [fp, #-8]
   52458:	ldr	r3, [fp, #-16]
   5245c:	add	r3, r3, #8
   52460:	str	r3, [fp, #-12]
   52464:	b	52350 <__assert_fail@plt+0x3fc64>
   52468:	mov	r0, r3
   5246c:	sub	sp, fp, #4
   52470:	pop	{fp, pc}
   52474:	push	{fp, lr}
   52478:	add	fp, sp, #4
   5247c:	sub	sp, sp, #56	; 0x38
   52480:	str	r0, [fp, #-24]	; 0xffffffe8
   52484:	str	r1, [fp, #-28]	; 0xffffffe4
   52488:	str	r2, [fp, #-32]	; 0xffffffe0
   5248c:	str	r3, [fp, #-36]	; 0xffffffdc
   52490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52494:	ldr	r3, [r3]
   52498:	str	r3, [fp, #-20]	; 0xffffffec
   5249c:	ldr	r3, [fp, #4]
   524a0:	bic	r3, r3, #7
   524a4:	cmp	r3, #0
   524a8:	beq	524b4 <__assert_fail@plt+0x3fdc8>
   524ac:	mov	r3, #2
   524b0:	b	525f8 <__assert_fail@plt+0x3ff0c>
   524b4:	ldr	r3, [fp, #4]
   524b8:	and	r3, r3, #4
   524bc:	cmp	r3, #0
   524c0:	beq	524e0 <__assert_fail@plt+0x3fdf4>
   524c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   524c8:	ldr	r3, [r3]
   524cc:	str	r3, [fp, #-12]
   524d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   524d4:	ldr	r3, [r3, #4]
   524d8:	str	r3, [fp, #-16]
   524dc:	b	524f8 <__assert_fail@plt+0x3fe0c>
   524e0:	mov	r3, #0
   524e4:	str	r3, [fp, #-12]
   524e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   524ec:	bl	123bc <strlen@plt>
   524f0:	mov	r3, r0
   524f4:	str	r3, [fp, #-16]
   524f8:	ldr	r3, [pc, #260]	; 52604 <__assert_fail@plt+0x3ff18>
   524fc:	cmp	r3, #0
   52500:	bne	52510 <__assert_fail@plt+0x3fe24>
   52504:	ldr	r3, [pc, #252]	; 52608 <__assert_fail@plt+0x3ff1c>
   52508:	cmp	r3, #0
   5250c:	beq	52520 <__assert_fail@plt+0x3fe34>
   52510:	ldr	r3, [fp, #-20]	; 0xffffffec
   52514:	add	r3, r3, #136	; 0x88
   52518:	mov	r0, r3
   5251c:	bl	120a4 <pthread_mutex_lock@plt>
   52520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52524:	ldrb	r3, [r3, #28]
   52528:	and	r3, r3, #16
   5252c:	uxtb	r3, r3
   52530:	cmp	r3, #0
   52534:	beq	5257c <__assert_fail@plt+0x3fe90>
   52538:	ldr	r3, [fp, #4]
   5253c:	str	r3, [sp, #16]
   52540:	mov	r3, #0
   52544:	str	r3, [sp, #12]
   52548:	mov	r3, #0
   5254c:	str	r3, [sp, #8]
   52550:	ldr	r3, [fp, #-16]
   52554:	str	r3, [sp, #4]
   52558:	ldr	r3, [fp, #-16]
   5255c:	str	r3, [sp]
   52560:	ldr	r3, [fp, #-12]
   52564:	ldr	r2, [fp, #-16]
   52568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5256c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52570:	bl	5324c <__assert_fail@plt+0x40b60>
   52574:	str	r0, [fp, #-8]
   52578:	b	525bc <__assert_fail@plt+0x3fed0>
   5257c:	ldr	r3, [fp, #4]
   52580:	str	r3, [sp, #16]
   52584:	ldr	r3, [fp, #-36]	; 0xffffffdc
   52588:	str	r3, [sp, #12]
   5258c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52590:	str	r3, [sp, #8]
   52594:	ldr	r3, [fp, #-16]
   52598:	str	r3, [sp, #4]
   5259c:	ldr	r3, [fp, #-16]
   525a0:	str	r3, [sp]
   525a4:	ldr	r3, [fp, #-12]
   525a8:	ldr	r2, [fp, #-16]
   525ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   525b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   525b4:	bl	5324c <__assert_fail@plt+0x40b60>
   525b8:	str	r0, [fp, #-8]
   525bc:	ldr	r3, [pc, #64]	; 52604 <__assert_fail@plt+0x3ff18>
   525c0:	cmp	r3, #0
   525c4:	bne	525d4 <__assert_fail@plt+0x3fee8>
   525c8:	ldr	r3, [pc, #56]	; 52608 <__assert_fail@plt+0x3ff1c>
   525cc:	cmp	r3, #0
   525d0:	beq	525e4 <__assert_fail@plt+0x3fef8>
   525d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   525d8:	add	r3, r3, #136	; 0x88
   525dc:	mov	r0, r3
   525e0:	bl	11f60 <pthread_mutex_unlock@plt>
   525e4:	ldr	r3, [fp, #-8]
   525e8:	cmp	r3, #0
   525ec:	movne	r3, #1
   525f0:	moveq	r3, #0
   525f4:	uxtb	r3, r3
   525f8:	mov	r0, r3
   525fc:	sub	sp, fp, #4
   52600:	pop	{fp, pc}
   52604:	andeq	r2, r1, r4, ror #8
   52608:	andeq	r2, r1, r8, asr #1
   5260c:	push	{fp, lr}
   52610:	add	fp, sp, #4
   52614:	sub	sp, sp, #32
   52618:	str	r0, [fp, #-8]
   5261c:	str	r1, [fp, #-12]
   52620:	str	r2, [fp, #-16]
   52624:	str	r3, [fp, #-20]	; 0xffffffec
   52628:	mov	r3, #1
   5262c:	str	r3, [sp, #12]
   52630:	ldr	r3, [fp, #4]
   52634:	str	r3, [sp, #8]
   52638:	ldr	r3, [fp, #-16]
   5263c:	str	r3, [sp, #4]
   52640:	mov	r3, #0
   52644:	str	r3, [sp]
   52648:	ldr	r3, [fp, #-20]	; 0xffffffec
   5264c:	ldr	r2, [fp, #-16]
   52650:	ldr	r1, [fp, #-12]
   52654:	ldr	r0, [fp, #-8]
   52658:	bl	529e0 <__assert_fail@plt+0x402f4>
   5265c:	mov	r3, r0
   52660:	mov	r0, r3
   52664:	sub	sp, fp, #4
   52668:	pop	{fp, pc}
   5266c:	push	{fp, lr}
   52670:	add	fp, sp, #4
   52674:	sub	sp, sp, #32
   52678:	str	r0, [fp, #-8]
   5267c:	str	r1, [fp, #-12]
   52680:	str	r2, [fp, #-16]
   52684:	str	r3, [fp, #-20]	; 0xffffffec
   52688:	mov	r3, #0
   5268c:	str	r3, [sp, #12]
   52690:	ldr	r3, [fp, #8]
   52694:	str	r3, [sp, #8]
   52698:	ldr	r3, [fp, #-16]
   5269c:	str	r3, [sp, #4]
   526a0:	ldr	r3, [fp, #4]
   526a4:	str	r3, [sp]
   526a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   526ac:	ldr	r2, [fp, #-16]
   526b0:	ldr	r1, [fp, #-12]
   526b4:	ldr	r0, [fp, #-8]
   526b8:	bl	529e0 <__assert_fail@plt+0x402f4>
   526bc:	mov	r3, r0
   526c0:	mov	r0, r3
   526c4:	sub	sp, fp, #4
   526c8:	pop	{fp, pc}
   526cc:	push	{fp, lr}
   526d0:	add	fp, sp, #4
   526d4:	sub	sp, sp, #40	; 0x28
   526d8:	str	r0, [fp, #-8]
   526dc:	str	r1, [fp, #-12]
   526e0:	str	r2, [fp, #-16]
   526e4:	str	r3, [fp, #-20]	; 0xffffffec
   526e8:	mov	r3, #1
   526ec:	str	r3, [sp, #20]
   526f0:	ldr	r3, [fp, #16]
   526f4:	str	r3, [sp, #16]
   526f8:	ldr	r3, [fp, #12]
   526fc:	str	r3, [sp, #12]
   52700:	mov	r3, #0
   52704:	str	r3, [sp, #8]
   52708:	ldr	r3, [fp, #8]
   5270c:	str	r3, [sp, #4]
   52710:	ldr	r3, [fp, #4]
   52714:	str	r3, [sp]
   52718:	ldr	r3, [fp, #-20]	; 0xffffffec
   5271c:	ldr	r2, [fp, #-16]
   52720:	ldr	r1, [fp, #-12]
   52724:	ldr	r0, [fp, #-8]
   52728:	bl	527ac <__assert_fail@plt+0x400c0>
   5272c:	mov	r3, r0
   52730:	mov	r0, r3
   52734:	sub	sp, fp, #4
   52738:	pop	{fp, pc}
   5273c:	push	{fp, lr}
   52740:	add	fp, sp, #4
   52744:	sub	sp, sp, #40	; 0x28
   52748:	str	r0, [fp, #-8]
   5274c:	str	r1, [fp, #-12]
   52750:	str	r2, [fp, #-16]
   52754:	str	r3, [fp, #-20]	; 0xffffffec
   52758:	mov	r3, #0
   5275c:	str	r3, [sp, #20]
   52760:	ldr	r3, [fp, #20]
   52764:	str	r3, [sp, #16]
   52768:	ldr	r3, [fp, #16]
   5276c:	str	r3, [sp, #12]
   52770:	ldr	r3, [fp, #12]
   52774:	str	r3, [sp, #8]
   52778:	ldr	r3, [fp, #8]
   5277c:	str	r3, [sp, #4]
   52780:	ldr	r3, [fp, #4]
   52784:	str	r3, [sp]
   52788:	ldr	r3, [fp, #-20]	; 0xffffffec
   5278c:	ldr	r2, [fp, #-16]
   52790:	ldr	r1, [fp, #-12]
   52794:	ldr	r0, [fp, #-8]
   52798:	bl	527ac <__assert_fail@plt+0x400c0>
   5279c:	mov	r3, r0
   527a0:	mov	r0, r3
   527a4:	sub	sp, fp, #4
   527a8:	pop	{fp, pc}
   527ac:	push	{fp, lr}
   527b0:	add	fp, sp, #4
   527b4:	sub	sp, sp, #48	; 0x30
   527b8:	str	r0, [fp, #-24]	; 0xffffffe8
   527bc:	str	r1, [fp, #-28]	; 0xffffffe4
   527c0:	str	r2, [fp, #-32]	; 0xffffffe0
   527c4:	str	r3, [fp, #-36]	; 0xffffffdc
   527c8:	mov	r3, #0
   527cc:	str	r3, [fp, #-12]
   527d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   527d4:	lsr	r3, r3, #31
   527d8:	uxtb	r3, r3
   527dc:	cmp	r3, #0
   527e0:	bne	527f8 <__assert_fail@plt+0x4010c>
   527e4:	ldr	r3, [fp, #4]
   527e8:	lsr	r3, r3, #31
   527ec:	uxtb	r3, r3
   527f0:	cmp	r3, #0
   527f4:	beq	52800 <__assert_fail@plt+0x40114>
   527f8:	mov	r3, #1
   527fc:	b	52804 <__assert_fail@plt+0x40118>
   52800:	mov	r3, #0
   52804:	cmp	r3, #0
   52808:	bne	52820 <__assert_fail@plt+0x40134>
   5280c:	ldr	r3, [fp, #20]
   52810:	lsr	r3, r3, #31
   52814:	uxtb	r3, r3
   52818:	cmp	r3, #0
   5281c:	beq	52828 <__assert_fail@plt+0x4013c>
   52820:	mov	r3, #1
   52824:	b	5282c <__assert_fail@plt+0x40140>
   52828:	mov	r3, #0
   5282c:	cmp	r3, #0
   52830:	bne	528e8 <__assert_fail@plt+0x401fc>
   52834:	ldr	r3, [fp, #4]
   52838:	cmp	r3, #0
   5283c:	bge	52860 <__assert_fail@plt+0x40174>
   52840:	ldr	r3, [fp, #4]
   52844:	rsb	r2, r3, #-2147483648	; 0x80000000
   52848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5284c:	cmp	r2, r3
   52850:	movgt	r3, #1
   52854:	movle	r3, #0
   52858:	uxtb	r3, r3
   5285c:	b	528ac <__assert_fail@plt+0x401c0>
   52860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52864:	cmp	r3, #0
   52868:	bge	5288c <__assert_fail@plt+0x401a0>
   5286c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52870:	rsb	r2, r3, #-2147483648	; 0x80000000
   52874:	ldr	r3, [fp, #4]
   52878:	cmp	r2, r3
   5287c:	movgt	r3, #1
   52880:	movle	r3, #0
   52884:	uxtb	r3, r3
   52888:	b	528ac <__assert_fail@plt+0x401c0>
   5288c:	ldr	r2, [fp, #4]
   52890:	mvn	r3, #-2147483648	; 0x80000000
   52894:	sub	r3, r3, r2
   52898:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5289c:	cmp	r3, r2
   528a0:	movlt	r3, #1
   528a4:	movge	r3, #0
   528a8:	uxtb	r3, r3
   528ac:	cmp	r3, #0
   528b0:	beq	528cc <__assert_fail@plt+0x401e0>
   528b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   528b8:	ldr	r3, [fp, #4]
   528bc:	add	r3, r2, r3
   528c0:	str	r3, [fp, #-20]	; 0xffffffec
   528c4:	mov	r3, #1
   528c8:	b	528e0 <__assert_fail@plt+0x401f4>
   528cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   528d0:	ldr	r3, [fp, #4]
   528d4:	add	r3, r2, r3
   528d8:	str	r3, [fp, #-20]	; 0xffffffec
   528dc:	mov	r3, #0
   528e0:	cmp	r3, #0
   528e4:	beq	528f0 <__assert_fail@plt+0x40204>
   528e8:	mvn	r3, #1
   528ec:	b	529d4 <__assert_fail@plt+0x402e8>
   528f0:	ldr	r3, [fp, #4]
   528f4:	cmp	r3, #0
   528f8:	ble	52988 <__assert_fail@plt+0x4029c>
   528fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52900:	cmp	r3, #0
   52904:	ble	5297c <__assert_fail@plt+0x40290>
   52908:	ldr	r3, [fp, #-20]	; 0xffffffec
   5290c:	mov	r0, r3
   52910:	bl	42ba8 <__assert_fail@plt+0x304bc>
   52914:	mov	r3, r0
   52918:	str	r3, [fp, #-12]
   5291c:	ldr	r3, [fp, #-12]
   52920:	cmp	r3, #0
   52924:	moveq	r3, #1
   52928:	movne	r3, #0
   5292c:	uxtb	r3, r3
   52930:	cmp	r3, #0
   52934:	beq	52940 <__assert_fail@plt+0x40254>
   52938:	mvn	r3, #1
   5293c:	b	529d4 <__assert_fail@plt+0x402e8>
   52940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52944:	mov	r2, r3
   52948:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5294c:	ldr	r0, [fp, #-12]
   52950:	bl	120f8 <memcpy@plt>
   52954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52958:	ldr	r2, [fp, #-12]
   5295c:	add	r3, r2, r3
   52960:	ldr	r2, [fp, #4]
   52964:	ldr	r1, [fp, #-36]	; 0xffffffdc
   52968:	mov	r0, r3
   5296c:	bl	120f8 <memcpy@plt>
   52970:	ldr	r3, [fp, #-12]
   52974:	str	r3, [fp, #-8]
   52978:	b	52990 <__assert_fail@plt+0x402a4>
   5297c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   52980:	str	r3, [fp, #-8]
   52984:	b	52990 <__assert_fail@plt+0x402a4>
   52988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5298c:	str	r3, [fp, #-8]
   52990:	ldr	r2, [fp, #-20]	; 0xffffffec
   52994:	ldrb	r3, [fp, #24]
   52998:	str	r3, [sp, #12]
   5299c:	ldr	r3, [fp, #16]
   529a0:	str	r3, [sp, #8]
   529a4:	ldr	r3, [fp, #20]
   529a8:	str	r3, [sp, #4]
   529ac:	ldr	r3, [fp, #12]
   529b0:	str	r3, [sp]
   529b4:	ldr	r3, [fp, #8]
   529b8:	ldr	r1, [fp, #-8]
   529bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   529c0:	bl	529e0 <__assert_fail@plt+0x402f4>
   529c4:	str	r0, [fp, #-16]
   529c8:	ldr	r0, [fp, #-12]
   529cc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   529d0:	ldr	r3, [fp, #-16]
   529d4:	mov	r0, r3
   529d8:	sub	sp, fp, #4
   529dc:	pop	{fp, pc}
   529e0:	push	{fp, lr}
   529e4:	add	fp, sp, #4
   529e8:	sub	sp, sp, #72	; 0x48
   529ec:	str	r0, [fp, #-40]	; 0xffffffd8
   529f0:	str	r1, [fp, #-44]	; 0xffffffd4
   529f4:	str	r2, [fp, #-48]	; 0xffffffd0
   529f8:	str	r3, [fp, #-52]	; 0xffffffcc
   529fc:	mov	r3, #0
   52a00:	str	r3, [fp, #-20]	; 0xffffffec
   52a04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52a08:	ldr	r3, [r3]
   52a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   52a10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   52a14:	ldr	r3, [fp, #4]
   52a18:	add	r3, r2, r3
   52a1c:	str	r3, [fp, #-16]
   52a20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   52a24:	lsr	r3, r3, #31
   52a28:	uxtb	r3, r3
   52a2c:	cmp	r3, #0
   52a30:	bne	52a54 <__assert_fail@plt+0x40368>
   52a34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   52a38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   52a3c:	cmp	r2, r3
   52a40:	movgt	r3, #1
   52a44:	movle	r3, #0
   52a48:	uxtb	r3, r3
   52a4c:	cmp	r3, #0
   52a50:	beq	52a5c <__assert_fail@plt+0x40370>
   52a54:	mvn	r3, #0
   52a58:	b	52eac <__assert_fail@plt+0x407c0>
   52a5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   52a60:	ldr	r3, [fp, #-16]
   52a64:	cmp	r2, r3
   52a68:	movlt	r3, #1
   52a6c:	movge	r3, #0
   52a70:	uxtb	r3, r3
   52a74:	cmp	r3, #0
   52a78:	bne	52ac8 <__assert_fail@plt+0x403dc>
   52a7c:	ldr	r3, [fp, #4]
   52a80:	mvn	r3, r3
   52a84:	lsr	r3, r3, #31
   52a88:	uxtb	r3, r3
   52a8c:	cmp	r3, #0
   52a90:	beq	52abc <__assert_fail@plt+0x403d0>
   52a94:	ldr	r2, [fp, #-16]
   52a98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   52a9c:	cmp	r2, r3
   52aa0:	movlt	r3, #1
   52aa4:	movge	r3, #0
   52aa8:	uxtb	r3, r3
   52aac:	cmp	r3, #0
   52ab0:	beq	52abc <__assert_fail@plt+0x403d0>
   52ab4:	mov	r3, #1
   52ab8:	b	52ac0 <__assert_fail@plt+0x403d4>
   52abc:	mov	r3, #0
   52ac0:	cmp	r3, #0
   52ac4:	beq	52ad4 <__assert_fail@plt+0x403e8>
   52ac8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   52acc:	str	r3, [fp, #-16]
   52ad0:	b	52b38 <__assert_fail@plt+0x4044c>
   52ad4:	ldr	r3, [fp, #-16]
   52ad8:	lsr	r3, r3, #31
   52adc:	uxtb	r3, r3
   52ae0:	cmp	r3, #0
   52ae4:	bne	52b30 <__assert_fail@plt+0x40444>
   52ae8:	ldr	r3, [fp, #4]
   52aec:	lsr	r3, r3, #31
   52af0:	uxtb	r3, r3
   52af4:	cmp	r3, #0
   52af8:	beq	52b24 <__assert_fail@plt+0x40438>
   52afc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   52b00:	ldr	r3, [fp, #-16]
   52b04:	cmp	r2, r3
   52b08:	movle	r3, #1
   52b0c:	movgt	r3, #0
   52b10:	uxtb	r3, r3
   52b14:	cmp	r3, #0
   52b18:	beq	52b24 <__assert_fail@plt+0x40438>
   52b1c:	mov	r3, #1
   52b20:	b	52b28 <__assert_fail@plt+0x4043c>
   52b24:	mov	r3, #0
   52b28:	cmp	r3, #0
   52b2c:	beq	52b38 <__assert_fail@plt+0x4044c>
   52b30:	mov	r3, #0
   52b34:	str	r3, [fp, #-16]
   52b38:	ldr	r3, [pc, #888]	; 52eb8 <__assert_fail@plt+0x407cc>
   52b3c:	cmp	r3, #0
   52b40:	bne	52b50 <__assert_fail@plt+0x40464>
   52b44:	ldr	r3, [pc, #880]	; 52ebc <__assert_fail@plt+0x407d0>
   52b48:	cmp	r3, #0
   52b4c:	beq	52b60 <__assert_fail@plt+0x40474>
   52b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52b54:	add	r3, r3, #136	; 0x88
   52b58:	mov	r0, r3
   52b5c:	bl	120a4 <pthread_mutex_lock@plt>
   52b60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52b64:	ldrb	r3, [r3, #28]
   52b68:	and	r3, r3, #32
   52b6c:	uxtb	r3, r3
   52b70:	cmp	r3, #0
   52b74:	movne	r3, #1
   52b78:	moveq	r3, #0
   52b7c:	uxtb	r3, r3
   52b80:	mov	r2, r3
   52b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   52b88:	orr	r3, r3, r2
   52b8c:	str	r3, [fp, #-20]	; 0xffffffec
   52b90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52b94:	ldrb	r3, [r3, #28]
   52b98:	and	r3, r3, #64	; 0x40
   52b9c:	uxtb	r3, r3
   52ba0:	cmp	r3, #0
   52ba4:	beq	52bb0 <__assert_fail@plt+0x404c4>
   52ba8:	mov	r3, #2
   52bac:	b	52bb4 <__assert_fail@plt+0x404c8>
   52bb0:	mov	r3, #0
   52bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   52bb8:	orr	r3, r2, r3
   52bbc:	str	r3, [fp, #-20]	; 0xffffffec
   52bc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   52bc4:	ldr	r3, [fp, #-16]
   52bc8:	cmp	r2, r3
   52bcc:	bge	52c00 <__assert_fail@plt+0x40514>
   52bd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52bd4:	ldr	r3, [r3, #16]
   52bd8:	cmp	r3, #0
   52bdc:	beq	52c00 <__assert_fail@plt+0x40514>
   52be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52be4:	ldrb	r3, [r3, #28]
   52be8:	and	r3, r3, #8
   52bec:	uxtb	r3, r3
   52bf0:	cmp	r3, #0
   52bf4:	bne	52c00 <__assert_fail@plt+0x40514>
   52bf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   52bfc:	bl	49464 <__assert_fail@plt+0x36d78>
   52c00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52c04:	ldrb	r3, [r3, #28]
   52c08:	lsr	r3, r3, #4
   52c0c:	and	r3, r3, #1
   52c10:	uxtb	r3, r3
   52c14:	cmp	r3, #0
   52c18:	beq	52c24 <__assert_fail@plt+0x40538>
   52c1c:	mov	r3, #0
   52c20:	str	r3, [fp, #12]
   52c24:	ldr	r3, [fp, #12]
   52c28:	cmp	r3, #0
   52c2c:	bne	52c3c <__assert_fail@plt+0x40550>
   52c30:	mov	r3, #1
   52c34:	str	r3, [fp, #-8]
   52c38:	b	52cd8 <__assert_fail@plt+0x405ec>
   52c3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52c40:	ldrb	r3, [r3, #28]
   52c44:	and	r3, r3, #6
   52c48:	uxtb	r3, r3
   52c4c:	cmp	r3, #4
   52c50:	moveq	r3, #1
   52c54:	movne	r3, #0
   52c58:	uxtb	r3, r3
   52c5c:	cmp	r3, #0
   52c60:	beq	52cc8 <__assert_fail@plt+0x405dc>
   52c64:	ldr	r3, [fp, #12]
   52c68:	ldr	r2, [r3]
   52c6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52c70:	ldr	r3, [r3, #24]
   52c74:	cmp	r2, r3
   52c78:	movls	r3, #1
   52c7c:	movhi	r3, #0
   52c80:	uxtb	r3, r3
   52c84:	cmp	r3, #0
   52c88:	beq	52cc8 <__assert_fail@plt+0x405dc>
   52c8c:	ldr	r3, [fp, #12]
   52c90:	ldr	r3, [r3]
   52c94:	str	r3, [fp, #-8]
   52c98:	ldr	r3, [fp, #-8]
   52c9c:	cmp	r3, #0
   52ca0:	movle	r3, #1
   52ca4:	movgt	r3, #0
   52ca8:	uxtb	r3, r3
   52cac:	cmp	r3, #0
   52cb0:	beq	52cd8 <__assert_fail@plt+0x405ec>
   52cb4:	mov	r3, #0
   52cb8:	str	r3, [fp, #12]
   52cbc:	mov	r3, #1
   52cc0:	str	r3, [fp, #-8]
   52cc4:	b	52cd8 <__assert_fail@plt+0x405ec>
   52cc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52ccc:	ldr	r3, [r3, #24]
   52cd0:	add	r3, r3, #1
   52cd4:	str	r3, [fp, #-8]
   52cd8:	ldr	r3, [fp, #-8]
   52cdc:	lsl	r3, r3, #3
   52ce0:	mov	r0, r3
   52ce4:	bl	42ba8 <__assert_fail@plt+0x304bc>
   52ce8:	mov	r3, r0
   52cec:	str	r3, [fp, #-28]	; 0xffffffe4
   52cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   52cf4:	cmp	r3, #0
   52cf8:	moveq	r3, #1
   52cfc:	movne	r3, #0
   52d00:	uxtb	r3, r3
   52d04:	cmp	r3, #0
   52d08:	beq	52d18 <__assert_fail@plt+0x4062c>
   52d0c:	mvn	r3, #1
   52d10:	str	r3, [fp, #-12]
   52d14:	b	52e80 <__assert_fail@plt+0x40794>
   52d18:	ldr	r3, [fp, #-8]
   52d1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   52d20:	str	r2, [sp, #16]
   52d24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   52d28:	str	r2, [sp, #12]
   52d2c:	str	r3, [sp, #8]
   52d30:	ldr	r3, [fp, #8]
   52d34:	str	r3, [sp, #4]
   52d38:	ldr	r3, [fp, #-16]
   52d3c:	str	r3, [sp]
   52d40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   52d44:	ldr	r2, [fp, #-48]	; 0xffffffd0
   52d48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   52d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   52d50:	bl	5324c <__assert_fail@plt+0x40b60>
   52d54:	str	r0, [fp, #-32]	; 0xffffffe0
   52d58:	mov	r3, #0
   52d5c:	str	r3, [fp, #-12]
   52d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52d64:	cmp	r3, #0
   52d68:	beq	52d8c <__assert_fail@plt+0x406a0>
   52d6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52d70:	cmp	r3, #1
   52d74:	bne	52d80 <__assert_fail@plt+0x40694>
   52d78:	mvn	r3, #0
   52d7c:	b	52d84 <__assert_fail@plt+0x40698>
   52d80:	mvn	r3, #1
   52d84:	str	r3, [fp, #-12]
   52d88:	b	52e1c <__assert_fail@plt+0x40730>
   52d8c:	ldr	r3, [fp, #12]
   52d90:	cmp	r3, #0
   52d94:	beq	52e1c <__assert_fail@plt+0x40730>
   52d98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52d9c:	ldrb	r3, [r3, #28]
   52da0:	lsr	r3, r3, #1
   52da4:	and	r3, r3, #3
   52da8:	uxtb	r3, r3
   52dac:	ldr	r2, [fp, #-8]
   52db0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   52db4:	ldr	r0, [fp, #12]
   52db8:	bl	52ec0 <__assert_fail@plt+0x407d4>
   52dbc:	mov	r3, r0
   52dc0:	uxtb	r3, r3
   52dc4:	and	r3, r3, #3
   52dc8:	uxtb	r3, r3
   52dcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   52dd0:	ldrb	r2, [r1, #28]
   52dd4:	and	r3, r3, #3
   52dd8:	bic	r2, r2, #6
   52ddc:	lsl	r3, r3, #1
   52de0:	orr	r3, r3, r2
   52de4:	mov	r2, r3
   52de8:	strb	r2, [r1, #28]
   52dec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52df0:	ldrb	r3, [r3, #28]
   52df4:	and	r3, r3, #6
   52df8:	uxtb	r3, r3
   52dfc:	cmp	r3, #0
   52e00:	moveq	r3, #1
   52e04:	movne	r3, #0
   52e08:	uxtb	r3, r3
   52e0c:	cmp	r3, #0
   52e10:	beq	52e1c <__assert_fail@plt+0x40730>
   52e14:	mvn	r3, #1
   52e18:	str	r3, [fp, #-12]
   52e1c:	ldr	r3, [fp, #-12]
   52e20:	cmp	r3, #0
   52e24:	moveq	r3, #1
   52e28:	movne	r3, #0
   52e2c:	uxtb	r3, r3
   52e30:	cmp	r3, #0
   52e34:	beq	52e78 <__assert_fail@plt+0x4078c>
   52e38:	ldrb	r3, [fp, #16]
   52e3c:	cmp	r3, #0
   52e40:	beq	52e6c <__assert_fail@plt+0x40780>
   52e44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   52e48:	ldr	r2, [r3]
   52e4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   52e50:	cmp	r2, r3
   52e54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   52e58:	ldr	r2, [r3, #4]
   52e5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   52e60:	sub	r3, r2, r3
   52e64:	str	r3, [fp, #-12]
   52e68:	b	52e78 <__assert_fail@plt+0x4078c>
   52e6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   52e70:	ldr	r3, [r3]
   52e74:	str	r3, [fp, #-12]
   52e78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   52e7c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   52e80:	ldr	r3, [pc, #48]	; 52eb8 <__assert_fail@plt+0x407cc>
   52e84:	cmp	r3, #0
   52e88:	bne	52e98 <__assert_fail@plt+0x407ac>
   52e8c:	ldr	r3, [pc, #40]	; 52ebc <__assert_fail@plt+0x407d0>
   52e90:	cmp	r3, #0
   52e94:	beq	52ea8 <__assert_fail@plt+0x407bc>
   52e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52e9c:	add	r3, r3, #136	; 0x88
   52ea0:	mov	r0, r3
   52ea4:	bl	11f60 <pthread_mutex_unlock@plt>
   52ea8:	ldr	r3, [fp, #-12]
   52eac:	mov	r0, r3
   52eb0:	sub	sp, fp, #4
   52eb4:	pop	{fp, pc}
   52eb8:	andeq	r2, r1, r4, ror #8
   52ebc:	andeq	r2, r1, r8, asr #1
   52ec0:	push	{fp, lr}
   52ec4:	add	fp, sp, #4
   52ec8:	sub	sp, sp, #40	; 0x28
   52ecc:	str	r0, [fp, #-32]	; 0xffffffe0
   52ed0:	str	r1, [fp, #-36]	; 0xffffffdc
   52ed4:	str	r2, [fp, #-40]	; 0xffffffd8
   52ed8:	str	r3, [fp, #-44]	; 0xffffffd4
   52edc:	mov	r3, #1
   52ee0:	str	r3, [fp, #-8]
   52ee4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   52ee8:	add	r3, r3, #1
   52eec:	str	r3, [fp, #-16]
   52ef0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   52ef4:	cmp	r3, #0
   52ef8:	bne	52fac <__assert_fail@plt+0x408c0>
   52efc:	ldr	r3, [fp, #-16]
   52f00:	lsl	r3, r3, #2
   52f04:	mov	r0, r3
   52f08:	bl	42ba8 <__assert_fail@plt+0x304bc>
   52f0c:	mov	r3, r0
   52f10:	mov	r2, r3
   52f14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f18:	str	r2, [r3, #4]
   52f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f20:	ldr	r3, [r3, #4]
   52f24:	cmp	r3, #0
   52f28:	moveq	r3, #1
   52f2c:	movne	r3, #0
   52f30:	uxtb	r3, r3
   52f34:	cmp	r3, #0
   52f38:	beq	52f44 <__assert_fail@plt+0x40858>
   52f3c:	mov	r3, #0
   52f40:	b	53194 <__assert_fail@plt+0x40aa8>
   52f44:	ldr	r3, [fp, #-16]
   52f48:	lsl	r3, r3, #2
   52f4c:	mov	r0, r3
   52f50:	bl	42ba8 <__assert_fail@plt+0x304bc>
   52f54:	mov	r3, r0
   52f58:	mov	r2, r3
   52f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f60:	str	r2, [r3, #8]
   52f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f68:	ldr	r3, [r3, #8]
   52f6c:	cmp	r3, #0
   52f70:	moveq	r3, #1
   52f74:	movne	r3, #0
   52f78:	uxtb	r3, r3
   52f7c:	cmp	r3, #0
   52f80:	beq	52f9c <__assert_fail@plt+0x408b0>
   52f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f88:	ldr	r3, [r3, #4]
   52f8c:	mov	r0, r3
   52f90:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   52f94:	mov	r3, #0
   52f98:	b	53194 <__assert_fail@plt+0x40aa8>
   52f9c:	ldr	r2, [fp, #-16]
   52fa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52fa4:	str	r2, [r3]
   52fa8:	b	530b4 <__assert_fail@plt+0x409c8>
   52fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   52fb0:	cmp	r3, #1
   52fb4:	bne	53094 <__assert_fail@plt+0x409a8>
   52fb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52fbc:	ldr	r2, [r3]
   52fc0:	ldr	r3, [fp, #-16]
   52fc4:	cmp	r2, r3
   52fc8:	movcc	r3, #1
   52fcc:	movcs	r3, #0
   52fd0:	uxtb	r3, r3
   52fd4:	cmp	r3, #0
   52fd8:	beq	530b4 <__assert_fail@plt+0x409c8>
   52fdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52fe0:	ldr	r2, [r3, #4]
   52fe4:	ldr	r3, [fp, #-16]
   52fe8:	lsl	r3, r3, #2
   52fec:	mov	r1, r3
   52ff0:	mov	r0, r2
   52ff4:	bl	43d30 <__assert_fail@plt+0x31644>
   52ff8:	str	r0, [fp, #-20]	; 0xffffffec
   52ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   53000:	cmp	r3, #0
   53004:	moveq	r3, #1
   53008:	movne	r3, #0
   5300c:	uxtb	r3, r3
   53010:	cmp	r3, #0
   53014:	beq	53020 <__assert_fail@plt+0x40934>
   53018:	mov	r3, #0
   5301c:	b	53194 <__assert_fail@plt+0x40aa8>
   53020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53024:	ldr	r2, [r3, #8]
   53028:	ldr	r3, [fp, #-16]
   5302c:	lsl	r3, r3, #2
   53030:	mov	r1, r3
   53034:	mov	r0, r2
   53038:	bl	43d30 <__assert_fail@plt+0x31644>
   5303c:	str	r0, [fp, #-24]	; 0xffffffe8
   53040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53044:	cmp	r3, #0
   53048:	moveq	r3, #1
   5304c:	movne	r3, #0
   53050:	uxtb	r3, r3
   53054:	cmp	r3, #0
   53058:	beq	5306c <__assert_fail@plt+0x40980>
   5305c:	ldr	r0, [fp, #-20]	; 0xffffffec
   53060:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   53064:	mov	r3, #0
   53068:	b	53194 <__assert_fail@plt+0x40aa8>
   5306c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53070:	ldr	r2, [fp, #-20]	; 0xffffffec
   53074:	str	r2, [r3, #4]
   53078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5307c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   53080:	str	r2, [r3, #8]
   53084:	ldr	r2, [fp, #-16]
   53088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5308c:	str	r2, [r3]
   53090:	b	530b4 <__assert_fail@plt+0x409c8>
   53094:	ldr	r3, [fp, #-44]	; 0xffffffd4
   53098:	cmp	r3, #2
   5309c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   530a0:	ldr	r2, [r3]
   530a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   530a8:	cmp	r2, r3
   530ac:	mov	r3, #2
   530b0:	str	r3, [fp, #-8]
   530b4:	mov	r3, #0
   530b8:	str	r3, [fp, #-12]
   530bc:	b	53124 <__assert_fail@plt+0x40a38>
   530c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   530c4:	ldr	r2, [r3, #4]
   530c8:	ldr	r3, [fp, #-12]
   530cc:	lsl	r3, r3, #2
   530d0:	add	r3, r2, r3
   530d4:	ldr	r2, [fp, #-12]
   530d8:	lsl	r2, r2, #3
   530dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   530e0:	add	r2, r1, r2
   530e4:	ldr	r2, [r2]
   530e8:	str	r2, [r3]
   530ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   530f0:	ldr	r2, [r3, #8]
   530f4:	ldr	r3, [fp, #-12]
   530f8:	lsl	r3, r3, #2
   530fc:	add	r3, r2, r3
   53100:	ldr	r2, [fp, #-12]
   53104:	lsl	r2, r2, #3
   53108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5310c:	add	r2, r1, r2
   53110:	ldr	r2, [r2, #4]
   53114:	str	r2, [r3]
   53118:	ldr	r3, [fp, #-12]
   5311c:	add	r3, r3, #1
   53120:	str	r3, [fp, #-12]
   53124:	ldr	r2, [fp, #-12]
   53128:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5312c:	cmp	r2, r3
   53130:	blt	530c0 <__assert_fail@plt+0x409d4>
   53134:	b	5317c <__assert_fail@plt+0x40a90>
   53138:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5313c:	ldr	r2, [r3, #4]
   53140:	ldr	r3, [fp, #-12]
   53144:	lsl	r3, r3, #2
   53148:	add	r2, r2, r3
   5314c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53150:	ldr	r1, [r3, #8]
   53154:	ldr	r3, [fp, #-12]
   53158:	lsl	r3, r3, #2
   5315c:	add	r3, r1, r3
   53160:	mvn	r1, #0
   53164:	str	r1, [r3]
   53168:	ldr	r3, [r3]
   5316c:	str	r3, [r2]
   53170:	ldr	r3, [fp, #-12]
   53174:	add	r3, r3, #1
   53178:	str	r3, [fp, #-12]
   5317c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53180:	ldr	r2, [r3]
   53184:	ldr	r3, [fp, #-12]
   53188:	cmp	r2, r3
   5318c:	bhi	53138 <__assert_fail@plt+0x40a4c>
   53190:	ldr	r3, [fp, #-8]
   53194:	mov	r0, r3
   53198:	sub	sp, fp, #4
   5319c:	pop	{fp, pc}
   531a0:	push	{fp}		; (str fp, [sp, #-4]!)
   531a4:	add	fp, sp, #0
   531a8:	sub	sp, sp, #20
   531ac:	str	r0, [fp, #-8]
   531b0:	str	r1, [fp, #-12]
   531b4:	str	r2, [fp, #-16]
   531b8:	str	r3, [fp, #-20]	; 0xffffffec
   531bc:	ldr	r3, [fp, #-16]
   531c0:	cmp	r3, #0
   531c4:	beq	53204 <__assert_fail@plt+0x40b18>
   531c8:	ldr	r2, [fp, #-8]
   531cc:	ldrb	r3, [r2, #28]
   531d0:	bic	r3, r3, #4
   531d4:	orr	r3, r3, #2
   531d8:	strb	r3, [r2, #28]
   531dc:	ldr	r3, [fp, #-12]
   531e0:	ldr	r2, [fp, #-16]
   531e4:	str	r2, [r3]
   531e8:	ldr	r3, [fp, #-12]
   531ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   531f0:	str	r2, [r3, #4]
   531f4:	ldr	r3, [fp, #-12]
   531f8:	ldr	r2, [fp, #4]
   531fc:	str	r2, [r3, #8]
   53200:	b	5323c <__assert_fail@plt+0x40b50>
   53204:	ldr	r2, [fp, #-8]
   53208:	ldrb	r3, [r2, #28]
   5320c:	bic	r3, r3, #6
   53210:	strb	r3, [r2, #28]
   53214:	ldr	r3, [fp, #-12]
   53218:	mov	r2, #0
   5321c:	str	r2, [r3]
   53220:	ldr	r3, [fp, #-12]
   53224:	mov	r2, #0
   53228:	str	r2, [r3, #8]
   5322c:	ldr	r3, [fp, #-12]
   53230:	ldr	r2, [r3, #8]
   53234:	ldr	r3, [fp, #-12]
   53238:	str	r2, [r3, #4]
   5323c:	nop			; (mov r0, r0)
   53240:	add	sp, fp, #0
   53244:	pop	{fp}		; (ldr fp, [sp], #4)
   53248:	bx	lr
   5324c:	push	{fp, lr}
   53250:	add	fp, sp, #4
   53254:	sub	sp, sp, #240	; 0xf0
   53258:	str	r0, [fp, #-216]	; 0xffffff28
   5325c:	str	r1, [fp, #-220]	; 0xffffff24
   53260:	str	r2, [fp, #-224]	; 0xffffff20
   53264:	str	r3, [fp, #-228]	; 0xffffff1c
   53268:	ldr	r3, [fp, #-216]	; 0xffffff28
   5326c:	ldr	r3, [r3]
   53270:	str	r3, [fp, #-20]	; 0xffffffec
   53274:	mvn	r3, #0
   53278:	str	r3, [fp, #-24]	; 0xffffffe8
   5327c:	sub	r3, fp, #208	; 0xd0
   53280:	mov	r2, #136	; 0x88
   53284:	mov	r1, #0
   53288:	mov	r0, r3
   5328c:	bl	12434 <memset@plt>
   53290:	ldr	r3, [fp, #-20]	; 0xffffffec
   53294:	str	r3, [fp, #-124]	; 0xffffff84
   53298:	ldr	r3, [fp, #-216]	; 0xffffff28
   5329c:	ldr	r3, [r3, #16]
   532a0:	cmp	r3, #0
   532a4:	beq	532f4 <__assert_fail@plt+0x40c08>
   532a8:	ldr	r3, [fp, #-216]	; 0xffffff28
   532ac:	ldrb	r3, [r3, #28]
   532b0:	and	r3, r3, #8
   532b4:	uxtb	r3, r3
   532b8:	cmp	r3, #0
   532bc:	beq	532f4 <__assert_fail@plt+0x40c08>
   532c0:	ldr	r2, [fp, #-228]	; 0xffffff1c
   532c4:	ldr	r3, [fp, #4]
   532c8:	cmp	r2, r3
   532cc:	beq	532f4 <__assert_fail@plt+0x40c08>
   532d0:	ldr	r3, [fp, #-216]	; 0xffffff28
   532d4:	ldrb	r3, [r3, #28]
   532d8:	and	r3, r3, #1
   532dc:	uxtb	r3, r3
   532e0:	cmp	r3, #0
   532e4:	bne	532f4 <__assert_fail@plt+0x40c08>
   532e8:	ldr	r3, [fp, #-216]	; 0xffffff28
   532ec:	ldr	r3, [r3, #16]
   532f0:	b	532f8 <__assert_fail@plt+0x40c0c>
   532f4:	mov	r3, #0
   532f8:	str	r3, [fp, #-28]	; 0xffffffe4
   532fc:	ldr	r3, [fp, #-216]	; 0xffffff28
   53300:	ldr	r3, [r3, #20]
   53304:	str	r3, [fp, #-32]	; 0xffffffe0
   53308:	ldr	r3, [fp, #-216]	; 0xffffff28
   5330c:	ldr	r2, [r3, #24]
   53310:	ldr	r3, [fp, #12]
   53314:	cmp	r2, r3
   53318:	bcs	53334 <__assert_fail@plt+0x40c48>
   5331c:	ldr	r3, [fp, #-216]	; 0xffffff28
   53320:	ldr	r3, [r3, #24]
   53324:	ldr	r2, [fp, #12]
   53328:	sub	r3, r2, r3
   5332c:	sub	r3, r3, #1
   53330:	b	53338 <__assert_fail@plt+0x40c4c>
   53334:	mov	r3, #0
   53338:	str	r3, [fp, #-36]	; 0xffffffdc
   5333c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   53340:	ldr	r2, [fp, #12]
   53344:	sub	r3, r2, r3
   53348:	str	r3, [fp, #12]
   5334c:	ldr	r3, [fp, #-216]	; 0xffffff28
   53350:	ldr	r3, [r3, #8]
   53354:	cmp	r3, #0
   53358:	moveq	r3, #1
   5335c:	movne	r3, #0
   53360:	uxtb	r3, r3
   53364:	cmp	r3, #0
   53368:	bne	5338c <__assert_fail@plt+0x40ca0>
   5336c:	ldr	r3, [fp, #-20]	; 0xffffffec
   53370:	ldr	r3, [r3, #36]	; 0x24
   53374:	cmp	r3, #0
   53378:	moveq	r3, #1
   5337c:	movne	r3, #0
   53380:	uxtb	r3, r3
   53384:	cmp	r3, #0
   53388:	beq	53394 <__assert_fail@plt+0x40ca8>
   5338c:	mov	r3, #1
   53390:	b	53398 <__assert_fail@plt+0x40cac>
   53394:	mov	r3, #0
   53398:	cmp	r3, #0
   5339c:	bne	533c0 <__assert_fail@plt+0x40cd4>
   533a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   533a4:	ldr	r3, [r3, #40]	; 0x28
   533a8:	cmp	r3, #0
   533ac:	moveq	r3, #1
   533b0:	movne	r3, #0
   533b4:	uxtb	r3, r3
   533b8:	cmp	r3, #0
   533bc:	beq	533c8 <__assert_fail@plt+0x40cdc>
   533c0:	mov	r3, #1
   533c4:	b	533cc <__assert_fail@plt+0x40ce0>
   533c8:	mov	r3, #0
   533cc:	cmp	r3, #0
   533d0:	bne	533f4 <__assert_fail@plt+0x40d08>
   533d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   533d8:	ldr	r3, [r3, #44]	; 0x2c
   533dc:	cmp	r3, #0
   533e0:	moveq	r3, #1
   533e4:	movne	r3, #0
   533e8:	uxtb	r3, r3
   533ec:	cmp	r3, #0
   533f0:	beq	533fc <__assert_fail@plt+0x40d10>
   533f4:	mov	r3, #1
   533f8:	b	53400 <__assert_fail@plt+0x40d14>
   533fc:	mov	r3, #0
   53400:	cmp	r3, #0
   53404:	bne	53428 <__assert_fail@plt+0x40d3c>
   53408:	ldr	r3, [fp, #-20]	; 0xffffffec
   5340c:	ldr	r3, [r3, #48]	; 0x30
   53410:	cmp	r3, #0
   53414:	moveq	r3, #1
   53418:	movne	r3, #0
   5341c:	uxtb	r3, r3
   53420:	cmp	r3, #0
   53424:	beq	53430 <__assert_fail@plt+0x40d44>
   53428:	mov	r3, #1
   5342c:	b	54150 <__assert_fail@plt+0x41a64>
   53430:	ldr	r3, [fp, #4]
   53434:	cmp	r3, #0
   53438:	blt	5344c <__assert_fail@plt+0x40d60>
   5343c:	ldr	r2, [fp, #4]
   53440:	ldr	r3, [fp, #-224]	; 0xffffff20
   53444:	cmp	r2, r3
   53448:	ble	5344c <__assert_fail@plt+0x40d60>
   5344c:	ldr	r3, [fp, #-20]	; 0xffffffec
   53450:	ldr	r3, [r3, #36]	; 0x24
   53454:	ldr	r3, [r3, #8]
   53458:	cmp	r3, #0
   5345c:	bne	534d0 <__assert_fail@plt+0x40de4>
   53460:	ldr	r3, [fp, #-20]	; 0xffffffec
   53464:	ldr	r3, [r3, #40]	; 0x28
   53468:	ldr	r3, [r3, #8]
   5346c:	cmp	r3, #0
   53470:	bne	534d0 <__assert_fail@plt+0x40de4>
   53474:	ldr	r3, [fp, #-20]	; 0xffffffec
   53478:	ldr	r3, [r3, #44]	; 0x2c
   5347c:	ldr	r3, [r3, #8]
   53480:	cmp	r3, #0
   53484:	beq	534a0 <__assert_fail@plt+0x40db4>
   53488:	ldr	r3, [fp, #-216]	; 0xffffff28
   5348c:	ldrb	r3, [r3, #28]
   53490:	bic	r3, r3, #127	; 0x7f
   53494:	uxtb	r3, r3
   53498:	cmp	r3, #0
   5349c:	bne	534d0 <__assert_fail@plt+0x40de4>
   534a0:	ldr	r3, [fp, #-228]	; 0xffffff1c
   534a4:	cmp	r3, #0
   534a8:	beq	534c0 <__assert_fail@plt+0x40dd4>
   534ac:	ldr	r3, [fp, #4]
   534b0:	cmp	r3, #0
   534b4:	beq	534c0 <__assert_fail@plt+0x40dd4>
   534b8:	mov	r3, #1
   534bc:	b	54150 <__assert_fail@plt+0x41a64>
   534c0:	mov	r3, #0
   534c4:	str	r3, [fp, #4]
   534c8:	ldr	r3, [fp, #4]
   534cc:	str	r3, [fp, #-228]	; 0xffffff1c
   534d0:	ldr	r3, [fp, #12]
   534d4:	cmp	r3, #0
   534d8:	bne	534ec <__assert_fail@plt+0x40e00>
   534dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   534e0:	ldr	r3, [r3, #76]	; 0x4c
   534e4:	cmp	r3, #0
   534e8:	beq	534f4 <__assert_fail@plt+0x40e08>
   534ec:	mov	r3, #1
   534f0:	b	534f8 <__assert_fail@plt+0x40e0c>
   534f4:	mov	r3, #0
   534f8:	strb	r3, [fp, #-37]	; 0xffffffdb
   534fc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   53500:	and	r3, r3, #1
   53504:	strb	r3, [fp, #-37]	; 0xffffffdb
   53508:	ldr	r3, [fp, #-20]	; 0xffffffec
   5350c:	ldr	r3, [r3, #8]
   53510:	add	r3, r3, #1
   53514:	mov	ip, r3
   53518:	ldr	r3, [fp, #-216]	; 0xffffff28
   5351c:	ldr	r3, [r3, #20]
   53520:	ldr	r2, [fp, #-216]	; 0xffffff28
   53524:	ldr	r2, [r2, #12]
   53528:	and	r2, r2, #4194304	; 0x400000
   5352c:	cmp	r2, #0
   53530:	movne	r2, #1
   53534:	moveq	r2, #0
   53538:	uxtb	r2, r2
   5353c:	sub	r0, fp, #208	; 0xd0
   53540:	ldr	r1, [fp, #-20]	; 0xffffffec
   53544:	str	r1, [sp, #8]
   53548:	str	r2, [sp, #4]
   5354c:	str	r3, [sp]
   53550:	mov	r3, ip
   53554:	ldr	r2, [fp, #-224]	; 0xffffff20
   53558:	ldr	r1, [fp, #-220]	; 0xffffff24
   5355c:	bl	443a4 <__assert_fail@plt+0x31cb8>
   53560:	str	r0, [fp, #-8]
   53564:	ldr	r3, [fp, #-8]
   53568:	cmp	r3, #0
   5356c:	movne	r3, #1
   53570:	moveq	r3, #0
   53574:	uxtb	r3, r3
   53578:	cmp	r3, #0
   5357c:	bne	540ec <__assert_fail@plt+0x41a00>
   53580:	ldr	r3, [fp, #8]
   53584:	str	r3, [fp, #-152]	; 0xffffff68
   53588:	ldr	r3, [fp, #8]
   5358c:	str	r3, [fp, #-156]	; 0xffffff64
   53590:	ldr	r3, [fp, #-216]	; 0xffffff28
   53594:	ldrb	r3, [r3, #28]
   53598:	lsr	r3, r3, #7
   5359c:	uxtb	r3, r3
   535a0:	strb	r3, [fp, #-131]	; 0xffffff7d
   535a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   535a8:	ldr	r3, [r3, #76]	; 0x4c
   535ac:	lsl	r2, r3, #1
   535b0:	sub	r3, fp, #208	; 0xd0
   535b4:	ldr	r1, [fp, #20]
   535b8:	mov	r0, r3
   535bc:	bl	5c744 <__assert_fail@plt+0x4a058>
   535c0:	str	r0, [fp, #-8]
   535c4:	ldr	r3, [fp, #-8]
   535c8:	cmp	r3, #0
   535cc:	movne	r3, #1
   535d0:	moveq	r3, #0
   535d4:	uxtb	r3, r3
   535d8:	cmp	r3, #0
   535dc:	bne	540f4 <__assert_fail@plt+0x41a08>
   535e0:	ldr	r3, [fp, #12]
   535e4:	cmp	r3, #1
   535e8:	bhi	53604 <__assert_fail@plt+0x40f18>
   535ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   535f0:	ldrb	r3, [r3, #88]	; 0x58
   535f4:	and	r3, r3, #2
   535f8:	uxtb	r3, r3
   535fc:	cmp	r3, #0
   53600:	beq	53670 <__assert_fail@plt+0x40f84>
   53604:	ldr	r3, [fp, #-172]	; 0xffffff54
   53608:	cmn	r3, #-1073741822	; 0xc0000002
   5360c:	movhi	r3, #1
   53610:	movls	r3, #0
   53614:	uxtb	r3, r3
   53618:	cmp	r3, #0
   5361c:	beq	5362c <__assert_fail@plt+0x40f40>
   53620:	mov	r3, #12
   53624:	str	r3, [fp, #-8]
   53628:	b	54118 <__assert_fail@plt+0x41a2c>
   5362c:	ldr	r3, [fp, #-172]	; 0xffffff54
   53630:	add	r3, r3, #1
   53634:	lsl	r3, r3, #2
   53638:	mov	r0, r3
   5363c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   53640:	mov	r3, r0
   53644:	str	r3, [fp, #-108]	; 0xffffff94
   53648:	ldr	r3, [fp, #-108]	; 0xffffff94
   5364c:	cmp	r3, #0
   53650:	moveq	r3, #1
   53654:	movne	r3, #0
   53658:	uxtb	r3, r3
   5365c:	cmp	r3, #0
   53660:	beq	53670 <__assert_fail@plt+0x40f84>
   53664:	mov	r3, #12
   53668:	str	r3, [fp, #-8]
   5366c:	b	54118 <__assert_fail@plt+0x41a2c>
   53670:	ldr	r3, [fp, #-228]	; 0xffffff1c
   53674:	str	r3, [fp, #-72]	; 0xffffffb8
   53678:	ldr	r3, [fp, #20]
   5367c:	and	r3, r3, #1
   53680:	cmp	r3, #0
   53684:	beq	53690 <__assert_fail@plt+0x40fa4>
   53688:	mov	r3, #4
   5368c:	b	53694 <__assert_fail@plt+0x40fa8>
   53690:	mov	r3, #6
   53694:	str	r3, [fp, #-148]	; 0xffffff6c
   53698:	ldr	r2, [fp, #4]
   5369c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   536a0:	cmp	r2, r3
   536a4:	bge	536b0 <__assert_fail@plt+0x40fc4>
   536a8:	mvn	r3, #0
   536ac:	b	536b4 <__assert_fail@plt+0x40fc8>
   536b0:	mov	r3, #1
   536b4:	str	r3, [fp, #-44]	; 0xffffffd4
   536b8:	ldr	r2, [fp, #-228]	; 0xffffff1c
   536bc:	ldr	r3, [fp, #4]
   536c0:	cmp	r2, r3
   536c4:	movlt	r3, r2
   536c8:	movge	r3, r3
   536cc:	str	r3, [fp, #-48]	; 0xffffffd0
   536d0:	ldr	r2, [fp, #4]
   536d4:	ldr	r3, [fp, #-228]	; 0xffffff1c
   536d8:	cmp	r2, r3
   536dc:	movge	r3, r2
   536e0:	movlt	r3, r3
   536e4:	str	r3, [fp, #-52]	; 0xffffffcc
   536e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   536ec:	ldr	r3, [r3, #92]	; 0x5c
   536f0:	cmp	r3, #1
   536f4:	moveq	r3, #1
   536f8:	movne	r3, #0
   536fc:	strb	r3, [fp, #-53]	; 0xffffffcb
   53700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   53704:	cmp	r3, #0
   53708:	beq	53780 <__assert_fail@plt+0x41094>
   5370c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   53710:	cmp	r3, #0
   53714:	bne	53738 <__assert_fail@plt+0x4104c>
   53718:	ldr	r3, [fp, #-216]	; 0xffffff28
   5371c:	ldr	r3, [r3, #12]
   53720:	and	r3, r3, #4194304	; 0x400000
   53724:	cmp	r3, #0
   53728:	bne	53740 <__assert_fail@plt+0x41054>
   5372c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53730:	cmp	r3, #0
   53734:	bne	53740 <__assert_fail@plt+0x41054>
   53738:	mov	r2, #4
   5373c:	b	53744 <__assert_fail@plt+0x41058>
   53740:	mov	r2, #0
   53744:	ldr	r1, [fp, #-228]	; 0xffffff1c
   53748:	ldr	r3, [fp, #4]
   5374c:	cmp	r1, r3
   53750:	bgt	5375c <__assert_fail@plt+0x41070>
   53754:	mov	r3, #2
   53758:	b	53760 <__assert_fail@plt+0x41074>
   5375c:	mov	r3, #0
   53760:	orr	r3, r2, r3
   53764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   53768:	cmp	r2, #0
   5376c:	movne	r2, #1
   53770:	moveq	r2, #0
   53774:	uxtb	r2, r2
   53778:	orr	r3, r3, r2
   5377c:	b	53784 <__assert_fail@plt+0x41098>
   53780:	mov	r3, #8
   53784:	str	r3, [fp, #-60]	; 0xffffffc4
   53788:	mov	r3, #1
   5378c:	str	r3, [fp, #-8]
   53790:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53794:	ldr	r3, [fp, #-48]	; 0xffffffd0
   53798:	cmp	r2, r3
   5379c:	blt	54118 <__assert_fail@plt+0x41a2c>
   537a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   537a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   537a8:	cmp	r2, r3
   537ac:	blt	54118 <__assert_fail@plt+0x41a2c>
   537b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   537b4:	sub	r3, r3, #4
   537b8:	cmp	r3, #4
   537bc:	ldrls	pc, [pc, r3, lsl #2]
   537c0:	b	539d0 <__assert_fail@plt+0x412e4>
   537c4:	andeq	r3, r5, r4, lsr #19
   537c8:	andeq	r3, r5, r4, lsr #19
   537cc:	andeq	r3, r5, r0, asr r8
   537d0:	andeq	r3, r5, r4, ror #15
   537d4:	ldrdeq	r3, [r5], -r4
   537d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   537dc:	add	r3, r3, #1
   537e0:	str	r3, [fp, #-72]	; 0xffffffb8
   537e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   537e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   537ec:	cmp	r2, r3
   537f0:	movlt	r3, #1
   537f4:	movge	r3, #0
   537f8:	uxtb	r3, r3
   537fc:	cmp	r3, #0
   53800:	beq	538a0 <__assert_fail@plt+0x411b4>
   53804:	ldr	r3, [fp, #-72]	; 0xffffffb8
   53808:	mov	r2, r3
   5380c:	ldr	r3, [fp, #-220]	; 0xffffff24
   53810:	add	r3, r3, r2
   53814:	ldrb	r3, [r3]
   53818:	mov	r2, r3
   5381c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53820:	add	r3, r3, r2
   53824:	ldrb	r3, [r3]
   53828:	mov	r2, r3
   5382c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   53830:	add	r3, r3, r2
   53834:	ldrb	r3, [r3]
   53838:	cmp	r3, #0
   5383c:	beq	537d8 <__assert_fail@plt+0x410ec>
   53840:	b	538a0 <__assert_fail@plt+0x411b4>
   53844:	ldr	r3, [fp, #-72]	; 0xffffffb8
   53848:	add	r3, r3, #1
   5384c:	str	r3, [fp, #-72]	; 0xffffffb8
   53850:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53854:	ldr	r3, [fp, #-52]	; 0xffffffcc
   53858:	cmp	r2, r3
   5385c:	movlt	r3, #1
   53860:	movge	r3, #0
   53864:	uxtb	r3, r3
   53868:	cmp	r3, #0
   5386c:	beq	538a4 <__assert_fail@plt+0x411b8>
   53870:	ldr	r3, [fp, #-72]	; 0xffffffb8
   53874:	mov	r2, r3
   53878:	ldr	r3, [fp, #-220]	; 0xffffff24
   5387c:	add	r3, r3, r2
   53880:	ldrb	r3, [r3]
   53884:	mov	r2, r3
   53888:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5388c:	add	r3, r3, r2
   53890:	ldrb	r3, [r3]
   53894:	cmp	r3, #0
   53898:	beq	53844 <__assert_fail@plt+0x41158>
   5389c:	b	538a4 <__assert_fail@plt+0x411b8>
   538a0:	nop			; (mov r0, r0)
   538a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   538a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   538ac:	cmp	r2, r3
   538b0:	moveq	r3, #1
   538b4:	movne	r3, #0
   538b8:	uxtb	r3, r3
   538bc:	cmp	r3, #0
   538c0:	beq	53adc <__assert_fail@plt+0x413f0>
   538c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   538c8:	ldr	r3, [fp, #-224]	; 0xffffff20
   538cc:	cmp	r2, r3
   538d0:	bge	538ec <__assert_fail@plt+0x41200>
   538d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   538d8:	mov	r2, r3
   538dc:	ldr	r3, [fp, #-220]	; 0xffffff24
   538e0:	add	r3, r3, r2
   538e4:	ldrb	r3, [r3]
   538e8:	b	538f0 <__assert_fail@plt+0x41204>
   538ec:	mov	r3, #0
   538f0:	str	r3, [fp, #-64]	; 0xffffffc0
   538f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   538f8:	cmp	r3, #0
   538fc:	beq	53914 <__assert_fail@plt+0x41228>
   53900:	ldr	r3, [fp, #-64]	; 0xffffffc0
   53904:	ldr	r2, [fp, #-32]	; 0xffffffe0
   53908:	add	r3, r2, r3
   5390c:	ldrb	r3, [r3]
   53910:	b	53918 <__assert_fail@plt+0x4122c>
   53914:	ldr	r3, [fp, #-64]	; 0xffffffc0
   53918:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5391c:	add	r3, r2, r3
   53920:	ldrb	r3, [r3]
   53924:	cmp	r3, #0
   53928:	bne	53adc <__assert_fail@plt+0x413f0>
   5392c:	b	54118 <__assert_fail@plt+0x41a2c>
   53930:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53934:	ldr	r3, [fp, #-224]	; 0xffffff20
   53938:	cmp	r2, r3
   5393c:	bge	53958 <__assert_fail@plt+0x4126c>
   53940:	ldr	r3, [fp, #-72]	; 0xffffffb8
   53944:	mov	r2, r3
   53948:	ldr	r3, [fp, #-220]	; 0xffffff24
   5394c:	add	r3, r3, r2
   53950:	ldrb	r3, [r3]
   53954:	b	5395c <__assert_fail@plt+0x41270>
   53958:	mov	r3, #0
   5395c:	str	r3, [fp, #-64]	; 0xffffffc0
   53960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53964:	cmp	r3, #0
   53968:	beq	53980 <__assert_fail@plt+0x41294>
   5396c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   53970:	ldr	r2, [fp, #-32]	; 0xffffffe0
   53974:	add	r3, r2, r3
   53978:	ldrb	r3, [r3]
   5397c:	b	53984 <__assert_fail@plt+0x41298>
   53980:	ldr	r3, [fp, #-64]	; 0xffffffc0
   53984:	ldr	r2, [fp, #-28]	; 0xffffffe4
   53988:	add	r3, r2, r3
   5398c:	ldrb	r3, [r3]
   53990:	cmp	r3, #0
   53994:	bne	539b8 <__assert_fail@plt+0x412cc>
   53998:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5399c:	sub	r3, r3, #1
   539a0:	str	r3, [fp, #-72]	; 0xffffffb8
   539a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   539a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   539ac:	cmp	r2, r3
   539b0:	bge	53930 <__assert_fail@plt+0x41244>
   539b4:	b	539bc <__assert_fail@plt+0x412d0>
   539b8:	nop			; (mov r0, r0)
   539bc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   539c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   539c4:	cmp	r2, r3
   539c8:	bge	53ae4 <__assert_fail@plt+0x413f8>
   539cc:	b	54118 <__assert_fail@plt+0x41a2c>
   539d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   539d4:	ldr	r3, [fp, #-184]	; 0xffffff48
   539d8:	sub	r3, r2, r3
   539dc:	str	r3, [fp, #-12]
   539e0:	ldr	r3, [fp, #-176]	; 0xffffff50
   539e4:	mov	r2, r3
   539e8:	ldr	r3, [fp, #-12]
   539ec:	cmp	r2, r3
   539f0:	movls	r3, #1
   539f4:	movhi	r3, #0
   539f8:	uxtb	r3, r3
   539fc:	cmp	r3, #0
   53a00:	beq	53a48 <__assert_fail@plt+0x4135c>
   53a04:	ldr	r1, [fp, #-72]	; 0xffffffb8
   53a08:	sub	r3, fp, #208	; 0xd0
   53a0c:	ldr	r2, [fp, #20]
   53a10:	mov	r0, r3
   53a14:	bl	45bcc <__assert_fail@plt+0x334e0>
   53a18:	str	r0, [fp, #-8]
   53a1c:	ldr	r3, [fp, #-8]
   53a20:	cmp	r3, #0
   53a24:	movne	r3, #1
   53a28:	moveq	r3, #0
   53a2c:	uxtb	r3, r3
   53a30:	cmp	r3, #0
   53a34:	bne	540fc <__assert_fail@plt+0x41a10>
   53a38:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53a3c:	ldr	r3, [fp, #-184]	; 0xffffff48
   53a40:	sub	r3, r2, r3
   53a44:	str	r3, [fp, #-12]
   53a48:	ldr	r3, [fp, #-180]	; 0xffffff4c
   53a4c:	mov	r2, r3
   53a50:	ldr	r3, [fp, #-12]
   53a54:	cmp	r2, r3
   53a58:	bls	53a70 <__assert_fail@plt+0x41384>
   53a5c:	ldr	r2, [fp, #-204]	; 0xffffff34
   53a60:	ldr	r3, [fp, #-12]
   53a64:	add	r3, r2, r3
   53a68:	ldrb	r3, [r3]
   53a6c:	b	53a74 <__assert_fail@plt+0x41388>
   53a70:	mov	r3, #0
   53a74:	str	r3, [fp, #-64]	; 0xffffffc0
   53a78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   53a7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   53a80:	add	r3, r2, r3
   53a84:	ldrb	r3, [r3]
   53a88:	cmp	r3, #0
   53a8c:	bne	53acc <__assert_fail@plt+0x413e0>
   53a90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53a94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   53a98:	add	r3, r2, r3
   53a9c:	str	r3, [fp, #-72]	; 0xffffffb8
   53aa0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53aa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   53aa8:	cmp	r2, r3
   53aac:	blt	53ac0 <__assert_fail@plt+0x413d4>
   53ab0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53ab4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   53ab8:	cmp	r2, r3
   53abc:	ble	539d0 <__assert_fail@plt+0x412e4>
   53ac0:	mov	r3, #1
   53ac4:	str	r3, [fp, #-8]
   53ac8:	b	54118 <__assert_fail@plt+0x41a2c>
   53acc:	nop			; (mov r0, r0)
   53ad0:	b	53ae8 <__assert_fail@plt+0x413fc>
   53ad4:	nop			; (mov r0, r0)
   53ad8:	b	53ae8 <__assert_fail@plt+0x413fc>
   53adc:	nop			; (mov r0, r0)
   53ae0:	b	53ae8 <__assert_fail@plt+0x413fc>
   53ae4:	nop			; (mov r0, r0)
   53ae8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   53aec:	sub	r3, fp, #208	; 0xd0
   53af0:	ldr	r2, [fp, #20]
   53af4:	mov	r0, r3
   53af8:	bl	45bcc <__assert_fail@plt+0x334e0>
   53afc:	str	r0, [fp, #-8]
   53b00:	ldr	r3, [fp, #-8]
   53b04:	cmp	r3, #0
   53b08:	movne	r3, #1
   53b0c:	moveq	r3, #0
   53b10:	uxtb	r3, r3
   53b14:	cmp	r3, #0
   53b18:	bne	54104 <__assert_fail@plt+0x41a18>
   53b1c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   53b20:	eor	r3, r3, #1
   53b24:	uxtb	r3, r3
   53b28:	cmp	r3, #0
   53b2c:	beq	53b4c <__assert_fail@plt+0x41460>
   53b30:	ldr	r3, [fp, #-180]	; 0xffffff4c
   53b34:	cmp	r3, #0
   53b38:	beq	53b4c <__assert_fail@plt+0x41460>
   53b3c:	ldr	r3, [fp, #-200]	; 0xffffff38
   53b40:	ldr	r3, [r3]
   53b44:	cmn	r3, #1
   53b48:	beq	53cd4 <__assert_fail@plt+0x415e8>
   53b4c:	mov	r3, #0
   53b50:	str	r3, [fp, #-88]	; 0xffffffa8
   53b54:	ldr	r3, [fp, #-88]	; 0xffffffa8
   53b58:	str	r3, [fp, #-100]	; 0xffffff9c
   53b5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   53b60:	str	r3, [fp, #-104]	; 0xffffff98
   53b64:	ldr	r2, [fp, #-228]	; 0xffffff1c
   53b68:	ldr	r3, [fp, #4]
   53b6c:	cmp	r2, r3
   53b70:	bgt	53b7c <__assert_fail@plt+0x41490>
   53b74:	sub	r3, fp, #72	; 0x48
   53b78:	b	53b80 <__assert_fail@plt+0x41494>
   53b7c:	mov	r3, #0
   53b80:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   53b84:	sub	r0, fp, #208	; 0xd0
   53b88:	mov	r2, r3
   53b8c:	bl	544c8 <__assert_fail@plt+0x41ddc>
   53b90:	str	r0, [fp, #-24]	; 0xffffffe8
   53b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53b98:	cmn	r3, #1
   53b9c:	beq	53cc4 <__assert_fail@plt+0x415d8>
   53ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53ba4:	cmn	r3, #2
   53ba8:	moveq	r3, #1
   53bac:	movne	r3, #0
   53bb0:	uxtb	r3, r3
   53bb4:	cmp	r3, #0
   53bb8:	beq	53bc8 <__assert_fail@plt+0x414dc>
   53bbc:	mov	r3, #12
   53bc0:	str	r3, [fp, #-8]
   53bc4:	b	54118 <__assert_fail@plt+0x41a2c>
   53bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53bcc:	str	r3, [fp, #-116]	; 0xffffff8c
   53bd0:	ldr	r3, [fp, #-216]	; 0xffffff28
   53bd4:	ldrb	r3, [r3, #28]
   53bd8:	and	r3, r3, #16
   53bdc:	uxtb	r3, r3
   53be0:	cmp	r3, #0
   53be4:	bne	53bf4 <__assert_fail@plt+0x41508>
   53be8:	ldr	r3, [fp, #12]
   53bec:	cmp	r3, #1
   53bf0:	bhi	53c04 <__assert_fail@plt+0x41518>
   53bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   53bf8:	ldr	r3, [r3, #76]	; 0x4c
   53bfc:	cmp	r3, #0
   53c00:	beq	53c38 <__assert_fail@plt+0x4154c>
   53c04:	ldr	r2, [fp, #-108]	; 0xffffff94
   53c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53c0c:	lsl	r3, r3, #2
   53c10:	add	r3, r2, r3
   53c14:	ldr	r3, [r3]
   53c18:	str	r3, [fp, #-68]	; 0xffffffbc
   53c1c:	sub	r3, fp, #208	; 0xd0
   53c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   53c24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   53c28:	mov	r0, r3
   53c2c:	bl	54ba8 <__assert_fail@plt+0x424bc>
   53c30:	mov	r3, r0
   53c34:	str	r3, [fp, #-112]	; 0xffffff90
   53c38:	ldr	r3, [fp, #-216]	; 0xffffff28
   53c3c:	ldrb	r3, [r3, #28]
   53c40:	and	r3, r3, #16
   53c44:	uxtb	r3, r3
   53c48:	cmp	r3, #0
   53c4c:	bne	53c74 <__assert_fail@plt+0x41588>
   53c50:	ldr	r3, [fp, #12]
   53c54:	cmp	r3, #1
   53c58:	bls	53c74 <__assert_fail@plt+0x41588>
   53c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   53c60:	ldrb	r3, [r3, #88]	; 0x58
   53c64:	and	r3, r3, #1
   53c68:	uxtb	r3, r3
   53c6c:	cmp	r3, #0
   53c70:	bne	53c84 <__assert_fail@plt+0x41598>
   53c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   53c78:	ldr	r3, [r3, #76]	; 0x4c
   53c7c:	cmp	r3, #0
   53c80:	beq	53cf0 <__assert_fail@plt+0x41604>
   53c84:	sub	r3, fp, #208	; 0xd0
   53c88:	mov	r0, r3
   53c8c:	bl	5415c <__assert_fail@plt+0x41a70>
   53c90:	str	r0, [fp, #-8]
   53c94:	ldr	r3, [fp, #-8]
   53c98:	cmp	r3, #0
   53c9c:	beq	53cec <__assert_fail@plt+0x41600>
   53ca0:	ldr	r3, [fp, #-8]
   53ca4:	cmp	r3, #1
   53ca8:	movne	r3, #1
   53cac:	moveq	r3, #0
   53cb0:	uxtb	r3, r3
   53cb4:	cmp	r3, #0
   53cb8:	bne	5410c <__assert_fail@plt+0x41a20>
   53cbc:	mvn	r3, #0
   53cc0:	str	r3, [fp, #-24]	; 0xffffffe8
   53cc4:	sub	r3, fp, #208	; 0xd0
   53cc8:	mov	r0, r3
   53ccc:	bl	5c8a8 <__assert_fail@plt+0x4a1bc>
   53cd0:	b	53cd8 <__assert_fail@plt+0x415ec>
   53cd4:	nop			; (mov r0, r0)
   53cd8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   53ce0:	add	r3, r2, r3
   53ce4:	str	r3, [fp, #-72]	; 0xffffffb8
   53ce8:	b	53788 <__assert_fail@plt+0x4109c>
   53cec:	nop			; (mov r0, r0)
   53cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53cf4:	cmn	r3, #1
   53cf8:	ldr	r3, [fp, #-8]
   53cfc:	cmp	r3, #0
   53d00:	ldr	r3, [fp, #12]
   53d04:	cmp	r3, #0
   53d08:	beq	54118 <__assert_fail@plt+0x41a2c>
   53d0c:	mov	r3, #1
   53d10:	str	r3, [fp, #-16]
   53d14:	b	53d54 <__assert_fail@plt+0x41668>
   53d18:	ldr	r3, [fp, #-16]
   53d1c:	lsl	r3, r3, #3
   53d20:	ldr	r2, [fp, #16]
   53d24:	add	r2, r2, r3
   53d28:	ldr	r3, [fp, #-16]
   53d2c:	lsl	r3, r3, #3
   53d30:	ldr	r1, [fp, #16]
   53d34:	add	r3, r1, r3
   53d38:	mvn	r1, #0
   53d3c:	str	r1, [r3, #4]
   53d40:	ldr	r3, [r3, #4]
   53d44:	str	r3, [r2]
   53d48:	ldr	r3, [fp, #-16]
   53d4c:	add	r3, r3, #1
   53d50:	str	r3, [fp, #-16]
   53d54:	ldr	r2, [fp, #-16]
   53d58:	ldr	r3, [fp, #12]
   53d5c:	cmp	r2, r3
   53d60:	bcc	53d18 <__assert_fail@plt+0x4162c>
   53d64:	ldr	r3, [fp, #16]
   53d68:	mov	r2, #0
   53d6c:	str	r2, [r3]
   53d70:	ldr	r2, [fp, #-116]	; 0xffffff8c
   53d74:	ldr	r3, [fp, #16]
   53d78:	str	r2, [r3, #4]
   53d7c:	ldr	r3, [fp, #-216]	; 0xffffff28
   53d80:	ldrb	r3, [r3, #28]
   53d84:	and	r3, r3, #16
   53d88:	uxtb	r3, r3
   53d8c:	cmp	r3, #0
   53d90:	bne	53e14 <__assert_fail@plt+0x41728>
   53d94:	ldr	r3, [fp, #12]
   53d98:	cmp	r3, #1
   53d9c:	bls	53e14 <__assert_fail@plt+0x41728>
   53da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   53da4:	ldrb	r3, [r3, #88]	; 0x58
   53da8:	and	r3, r3, #1
   53dac:	uxtb	r3, r3
   53db0:	cmp	r3, #0
   53db4:	beq	53dd0 <__assert_fail@plt+0x416e4>
   53db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   53dbc:	ldr	r3, [r3, #76]	; 0x4c
   53dc0:	cmp	r3, #0
   53dc4:	ble	53dd0 <__assert_fail@plt+0x416e4>
   53dc8:	mov	r3, #1
   53dcc:	b	53dd4 <__assert_fail@plt+0x416e8>
   53dd0:	mov	r3, #0
   53dd4:	and	r3, r3, #1
   53dd8:	uxtb	r3, r3
   53ddc:	sub	r1, fp, #208	; 0xd0
   53de0:	str	r3, [sp]
   53de4:	ldr	r3, [fp, #16]
   53de8:	ldr	r2, [fp, #12]
   53dec:	ldr	r0, [fp, #-216]	; 0xffffff28
   53df0:	bl	55a98 <__assert_fail@plt+0x433ac>
   53df4:	str	r0, [fp, #-8]
   53df8:	ldr	r3, [fp, #-8]
   53dfc:	cmp	r3, #0
   53e00:	movne	r3, #1
   53e04:	moveq	r3, #0
   53e08:	uxtb	r3, r3
   53e0c:	cmp	r3, #0
   53e10:	bne	54114 <__assert_fail@plt+0x41a28>
   53e14:	mov	r3, #0
   53e18:	str	r3, [fp, #-16]
   53e1c:	b	53f84 <__assert_fail@plt+0x41898>
   53e20:	ldr	r3, [fp, #-16]
   53e24:	lsl	r3, r3, #3
   53e28:	ldr	r2, [fp, #16]
   53e2c:	add	r3, r2, r3
   53e30:	ldr	r3, [r3]
   53e34:	cmn	r3, #1
   53e38:	beq	53f78 <__assert_fail@plt+0x4188c>
   53e3c:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   53e40:	cmp	r3, #0
   53e44:	movne	r3, #1
   53e48:	moveq	r3, #0
   53e4c:	uxtb	r3, r3
   53e50:	cmp	r3, #0
   53e54:	beq	53f18 <__assert_fail@plt+0x4182c>
   53e58:	ldr	r3, [fp, #-16]
   53e5c:	lsl	r3, r3, #3
   53e60:	ldr	r2, [fp, #16]
   53e64:	add	r2, r2, r3
   53e68:	ldr	r3, [fp, #-16]
   53e6c:	lsl	r3, r3, #3
   53e70:	ldr	r1, [fp, #16]
   53e74:	add	r3, r1, r3
   53e78:	ldr	r1, [r3]
   53e7c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   53e80:	cmp	r1, r3
   53e84:	bne	53e90 <__assert_fail@plt+0x417a4>
   53e88:	ldr	r3, [fp, #-176]	; 0xffffff50
   53e8c:	b	53eb4 <__assert_fail@plt+0x417c8>
   53e90:	ldr	r1, [fp, #-196]	; 0xffffff3c
   53e94:	ldr	r3, [fp, #-16]
   53e98:	lsl	r3, r3, #3
   53e9c:	ldr	r0, [fp, #16]
   53ea0:	add	r3, r0, r3
   53ea4:	ldr	r3, [r3]
   53ea8:	lsl	r3, r3, #2
   53eac:	add	r3, r1, r3
   53eb0:	ldr	r3, [r3]
   53eb4:	str	r3, [r2]
   53eb8:	ldr	r3, [fp, #-16]
   53ebc:	lsl	r3, r3, #3
   53ec0:	ldr	r2, [fp, #16]
   53ec4:	add	r2, r2, r3
   53ec8:	ldr	r3, [fp, #-16]
   53ecc:	lsl	r3, r3, #3
   53ed0:	ldr	r1, [fp, #16]
   53ed4:	add	r3, r1, r3
   53ed8:	ldr	r1, [r3, #4]
   53edc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   53ee0:	cmp	r1, r3
   53ee4:	bne	53ef0 <__assert_fail@plt+0x41804>
   53ee8:	ldr	r3, [fp, #-176]	; 0xffffff50
   53eec:	b	53f14 <__assert_fail@plt+0x41828>
   53ef0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   53ef4:	ldr	r3, [fp, #-16]
   53ef8:	lsl	r3, r3, #3
   53efc:	ldr	r0, [fp, #16]
   53f00:	add	r3, r0, r3
   53f04:	ldr	r3, [r3, #4]
   53f08:	lsl	r3, r3, #2
   53f0c:	add	r3, r1, r3
   53f10:	ldr	r3, [r3]
   53f14:	str	r3, [r2, #4]
   53f18:	ldr	r3, [fp, #-16]
   53f1c:	lsl	r3, r3, #3
   53f20:	ldr	r2, [fp, #16]
   53f24:	add	r3, r2, r3
   53f28:	ldr	r2, [fp, #-16]
   53f2c:	lsl	r2, r2, #3
   53f30:	ldr	r1, [fp, #16]
   53f34:	add	r2, r1, r2
   53f38:	ldr	r1, [r2]
   53f3c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53f40:	add	r2, r1, r2
   53f44:	str	r2, [r3]
   53f48:	ldr	r3, [fp, #-16]
   53f4c:	lsl	r3, r3, #3
   53f50:	ldr	r2, [fp, #16]
   53f54:	add	r3, r2, r3
   53f58:	ldr	r2, [fp, #-16]
   53f5c:	lsl	r2, r2, #3
   53f60:	ldr	r1, [fp, #16]
   53f64:	add	r2, r1, r2
   53f68:	ldr	r1, [r2, #4]
   53f6c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   53f70:	add	r2, r1, r2
   53f74:	str	r2, [r3, #4]
   53f78:	ldr	r3, [fp, #-16]
   53f7c:	add	r3, r3, #1
   53f80:	str	r3, [fp, #-16]
   53f84:	ldr	r2, [fp, #-16]
   53f88:	ldr	r3, [fp, #12]
   53f8c:	cmp	r2, r3
   53f90:	bcc	53e20 <__assert_fail@plt+0x41734>
   53f94:	mov	r3, #0
   53f98:	str	r3, [fp, #-16]
   53f9c:	b	53fec <__assert_fail@plt+0x41900>
   53fa0:	ldr	r2, [fp, #-16]
   53fa4:	ldr	r3, [fp, #12]
   53fa8:	add	r3, r2, r3
   53fac:	lsl	r3, r3, #3
   53fb0:	ldr	r2, [fp, #16]
   53fb4:	add	r3, r2, r3
   53fb8:	mvn	r2, #0
   53fbc:	str	r2, [r3]
   53fc0:	ldr	r2, [fp, #-16]
   53fc4:	ldr	r3, [fp, #12]
   53fc8:	add	r3, r2, r3
   53fcc:	lsl	r3, r3, #3
   53fd0:	ldr	r2, [fp, #16]
   53fd4:	add	r3, r2, r3
   53fd8:	mvn	r2, #0
   53fdc:	str	r2, [r3, #4]
   53fe0:	ldr	r3, [fp, #-16]
   53fe4:	add	r3, r3, #1
   53fe8:	str	r3, [fp, #-16]
   53fec:	ldr	r2, [fp, #-16]
   53ff0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   53ff4:	cmp	r2, r3
   53ff8:	blt	53fa0 <__assert_fail@plt+0x418b4>
   53ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   54000:	ldr	r3, [r3, #132]	; 0x84
   54004:	cmp	r3, #0
   54008:	beq	54118 <__assert_fail@plt+0x41a2c>
   5400c:	mov	r3, #0
   54010:	str	r3, [fp, #-16]
   54014:	b	540d0 <__assert_fail@plt+0x419e4>
   54018:	ldr	r3, [fp, #-20]	; 0xffffffec
   5401c:	ldr	r2, [r3, #132]	; 0x84
   54020:	ldr	r3, [fp, #-16]
   54024:	lsl	r3, r3, #2
   54028:	add	r3, r2, r3
   5402c:	ldr	r2, [r3]
   54030:	ldr	r3, [fp, #-16]
   54034:	cmp	r2, r3
   54038:	beq	540c4 <__assert_fail@plt+0x419d8>
   5403c:	ldr	r3, [fp, #-16]
   54040:	add	r3, r3, #1
   54044:	lsl	r3, r3, #3
   54048:	ldr	r2, [fp, #16]
   5404c:	add	r3, r2, r3
   54050:	ldr	r2, [fp, #-20]	; 0xffffffec
   54054:	ldr	r1, [r2, #132]	; 0x84
   54058:	ldr	r2, [fp, #-16]
   5405c:	lsl	r2, r2, #2
   54060:	add	r2, r1, r2
   54064:	ldr	r2, [r2]
   54068:	add	r2, r2, #1
   5406c:	lsl	r2, r2, #3
   54070:	ldr	r1, [fp, #16]
   54074:	add	r2, r1, r2
   54078:	ldr	r2, [r2]
   5407c:	str	r2, [r3]
   54080:	ldr	r3, [fp, #-16]
   54084:	add	r3, r3, #1
   54088:	lsl	r3, r3, #3
   5408c:	ldr	r2, [fp, #16]
   54090:	add	r3, r2, r3
   54094:	ldr	r2, [fp, #-20]	; 0xffffffec
   54098:	ldr	r1, [r2, #132]	; 0x84
   5409c:	ldr	r2, [fp, #-16]
   540a0:	lsl	r2, r2, #2
   540a4:	add	r2, r1, r2
   540a8:	ldr	r2, [r2]
   540ac:	add	r2, r2, #1
   540b0:	lsl	r2, r2, #3
   540b4:	ldr	r1, [fp, #16]
   540b8:	add	r2, r1, r2
   540bc:	ldr	r2, [r2, #4]
   540c0:	str	r2, [r3, #4]
   540c4:	ldr	r3, [fp, #-16]
   540c8:	add	r3, r3, #1
   540cc:	str	r3, [fp, #-16]
   540d0:	ldr	r3, [fp, #-16]
   540d4:	add	r3, r3, #1
   540d8:	mov	r2, r3
   540dc:	ldr	r3, [fp, #12]
   540e0:	cmp	r2, r3
   540e4:	bcc	54018 <__assert_fail@plt+0x4192c>
   540e8:	b	54118 <__assert_fail@plt+0x41a2c>
   540ec:	nop			; (mov r0, r0)
   540f0:	b	54118 <__assert_fail@plt+0x41a2c>
   540f4:	nop			; (mov r0, r0)
   540f8:	b	54118 <__assert_fail@plt+0x41a2c>
   540fc:	nop			; (mov r0, r0)
   54100:	b	54118 <__assert_fail@plt+0x41a2c>
   54104:	nop			; (mov r0, r0)
   54108:	b	54118 <__assert_fail@plt+0x41a2c>
   5410c:	nop			; (mov r0, r0)
   54110:	b	54118 <__assert_fail@plt+0x41a2c>
   54114:	nop			; (mov r0, r0)
   54118:	ldr	r3, [fp, #-108]	; 0xffffff94
   5411c:	mov	r0, r3
   54120:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   54124:	ldr	r3, [fp, #-20]	; 0xffffffec
   54128:	ldr	r3, [r3, #76]	; 0x4c
   5412c:	cmp	r3, #0
   54130:	beq	54140 <__assert_fail@plt+0x41a54>
   54134:	sub	r3, fp, #208	; 0xd0
   54138:	mov	r0, r3
   5413c:	bl	5c9d0 <__assert_fail@plt+0x4a2e4>
   54140:	sub	r3, fp, #208	; 0xd0
   54144:	mov	r0, r3
   54148:	bl	46bbc <__assert_fail@plt+0x344d0>
   5414c:	ldr	r3, [fp, #-8]
   54150:	mov	r0, r3
   54154:	sub	sp, fp, #4
   54158:	pop	{fp, pc}
   5415c:	push	{fp, lr}
   54160:	add	fp, sp, #4
   54164:	sub	sp, sp, #72	; 0x48
   54168:	str	r0, [fp, #-64]	; 0xffffffc0
   5416c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54170:	ldr	r3, [r3, #84]	; 0x54
   54174:	str	r3, [fp, #-28]	; 0xffffffe4
   54178:	mov	r3, #0
   5417c:	str	r3, [fp, #-24]	; 0xffffffe8
   54180:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54184:	ldr	r3, [r3, #100]	; 0x64
   54188:	cmp	r3, #0
   5418c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54190:	ldr	r3, [r3, #92]	; 0x5c
   54194:	str	r3, [fp, #-12]
   54198:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5419c:	ldr	r3, [r3, #96]	; 0x60
   541a0:	str	r3, [fp, #-8]
   541a4:	ldr	r3, [fp, #-12]
   541a8:	cmn	r3, #-1073741822	; 0xc0000002
   541ac:	movhi	r3, #1
   541b0:	movls	r3, #0
   541b4:	uxtb	r3, r3
   541b8:	cmp	r3, #0
   541bc:	beq	541c8 <__assert_fail@plt+0x41adc>
   541c0:	mov	r3, #12
   541c4:	b	544bc <__assert_fail@plt+0x41dd0>
   541c8:	ldr	r3, [fp, #-12]
   541cc:	add	r3, r3, #1
   541d0:	lsl	r3, r3, #2
   541d4:	mov	r0, r3
   541d8:	bl	42ba8 <__assert_fail@plt+0x304bc>
   541dc:	mov	r3, r0
   541e0:	str	r3, [fp, #-20]	; 0xffffffec
   541e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   541e8:	cmp	r3, #0
   541ec:	moveq	r3, #1
   541f0:	movne	r3, #0
   541f4:	uxtb	r3, r3
   541f8:	cmp	r3, #0
   541fc:	beq	5420c <__assert_fail@plt+0x41b20>
   54200:	mov	r3, #12
   54204:	str	r3, [fp, #-16]
   54208:	b	544a8 <__assert_fail@plt+0x41dbc>
   5420c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   54210:	ldr	r3, [r3, #76]	; 0x4c
   54214:	cmp	r3, #0
   54218:	beq	543e0 <__assert_fail@plt+0x41cf4>
   5421c:	ldr	r3, [fp, #-12]
   54220:	add	r3, r3, #1
   54224:	lsl	r3, r3, #2
   54228:	mov	r0, r3
   5422c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   54230:	mov	r3, r0
   54234:	str	r3, [fp, #-24]	; 0xffffffe8
   54238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5423c:	cmp	r3, #0
   54240:	moveq	r3, #1
   54244:	movne	r3, #0
   54248:	uxtb	r3, r3
   5424c:	cmp	r3, #0
   54250:	beq	54260 <__assert_fail@plt+0x41b74>
   54254:	mov	r3, #12
   54258:	str	r3, [fp, #-16]
   5425c:	b	544a8 <__assert_fail@plt+0x41dbc>
   54260:	ldr	r3, [fp, #-12]
   54264:	add	r3, r3, #1
   54268:	lsl	r3, r3, #2
   5426c:	mov	r2, r3
   54270:	mov	r1, #0
   54274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   54278:	bl	12434 <memset@plt>
   5427c:	sub	r0, fp, #56	; 0x38
   54280:	ldr	r3, [fp, #-12]
   54284:	str	r3, [sp]
   54288:	ldr	r3, [fp, #-8]
   5428c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   54290:	ldr	r1, [fp, #-20]	; 0xffffffec
   54294:	bl	5d0ec <__assert_fail@plt+0x4aa00>
   54298:	sub	r3, fp, #56	; 0x38
   5429c:	mov	r1, r3
   542a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   542a4:	bl	560ec <__assert_fail@plt+0x43a00>
   542a8:	str	r0, [fp, #-16]
   542ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   542b0:	mov	r0, r3
   542b4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   542b8:	ldr	r3, [fp, #-16]
   542bc:	cmp	r3, #0
   542c0:	movne	r3, #1
   542c4:	moveq	r3, #0
   542c8:	uxtb	r3, r3
   542cc:	cmp	r3, #0
   542d0:	bne	5449c <__assert_fail@plt+0x41db0>
   542d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   542d8:	ldr	r3, [r3]
   542dc:	cmp	r3, #0
   542e0:	bne	54394 <__assert_fail@plt+0x41ca8>
   542e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   542e8:	ldr	r3, [r3]
   542ec:	cmp	r3, #0
   542f0:	bne	54394 <__assert_fail@plt+0x41ca8>
   542f4:	ldr	r3, [fp, #-12]
   542f8:	sub	r3, r3, #1
   542fc:	str	r3, [fp, #-12]
   54300:	ldr	r3, [fp, #-12]
   54304:	cmp	r3, #0
   54308:	bge	54318 <__assert_fail@plt+0x41c2c>
   5430c:	mov	r3, #1
   54310:	str	r3, [fp, #-16]
   54314:	b	544a8 <__assert_fail@plt+0x41dbc>
   54318:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5431c:	ldr	r2, [r3, #100]	; 0x64
   54320:	ldr	r3, [fp, #-12]
   54324:	lsl	r3, r3, #2
   54328:	add	r3, r2, r3
   5432c:	ldr	r3, [r3]
   54330:	cmp	r3, #0
   54334:	beq	542f4 <__assert_fail@plt+0x41c08>
   54338:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5433c:	ldr	r2, [r3, #100]	; 0x64
   54340:	ldr	r3, [fp, #-12]
   54344:	lsl	r3, r3, #2
   54348:	add	r3, r2, r3
   5434c:	ldr	r3, [r3]
   54350:	ldrb	r3, [r3, #52]	; 0x34
   54354:	and	r3, r3, #16
   54358:	uxtb	r3, r3
   5435c:	cmp	r3, #0
   54360:	beq	542f4 <__assert_fail@plt+0x41c08>
   54364:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54368:	ldr	r2, [r3, #100]	; 0x64
   5436c:	ldr	r3, [fp, #-12]
   54370:	lsl	r3, r3, #2
   54374:	add	r3, r2, r3
   54378:	ldr	r3, [r3]
   5437c:	ldr	r2, [fp, #-12]
   54380:	mov	r1, r3
   54384:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54388:	bl	54ba8 <__assert_fail@plt+0x424bc>
   5438c:	str	r0, [fp, #-8]
   54390:	b	54260 <__assert_fail@plt+0x41b74>
   54394:	ldr	r3, [fp, #-12]
   54398:	add	r3, r3, #1
   5439c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   543a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   543a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   543a8:	bl	566b0 <__assert_fail@plt+0x43fc4>
   543ac:	str	r0, [fp, #-16]
   543b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   543b4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   543b8:	mov	r3, #0
   543bc:	str	r3, [fp, #-24]	; 0xffffffe8
   543c0:	ldr	r3, [fp, #-16]
   543c4:	cmp	r3, #0
   543c8:	movne	r3, #1
   543cc:	moveq	r3, #0
   543d0:	uxtb	r3, r3
   543d4:	cmp	r3, #0
   543d8:	beq	54454 <__assert_fail@plt+0x41d68>
   543dc:	b	544a8 <__assert_fail@plt+0x41dbc>
   543e0:	sub	r0, fp, #56	; 0x38
   543e4:	ldr	r3, [fp, #-12]
   543e8:	str	r3, [sp]
   543ec:	ldr	r3, [fp, #-8]
   543f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   543f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   543f8:	bl	5d0ec <__assert_fail@plt+0x4aa00>
   543fc:	sub	r3, fp, #56	; 0x38
   54400:	mov	r1, r3
   54404:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54408:	bl	560ec <__assert_fail@plt+0x43a00>
   5440c:	str	r0, [fp, #-16]
   54410:	ldr	r3, [fp, #-32]	; 0xffffffe0
   54414:	mov	r0, r3
   54418:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5441c:	ldr	r3, [fp, #-16]
   54420:	cmp	r3, #0
   54424:	movne	r3, #1
   54428:	moveq	r3, #0
   5442c:	uxtb	r3, r3
   54430:	cmp	r3, #0
   54434:	bne	544a4 <__assert_fail@plt+0x41db8>
   54438:	ldr	r3, [fp, #-20]	; 0xffffffec
   5443c:	ldr	r3, [r3]
   54440:	cmp	r3, #0
   54444:	bne	54454 <__assert_fail@plt+0x41d68>
   54448:	mov	r3, #1
   5444c:	str	r3, [fp, #-16]
   54450:	b	544a8 <__assert_fail@plt+0x41dbc>
   54454:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54458:	ldr	r3, [r3, #100]	; 0x64
   5445c:	mov	r0, r3
   54460:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   54464:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54468:	ldr	r2, [fp, #-20]	; 0xffffffec
   5446c:	str	r2, [r3, #100]	; 0x64
   54470:	mov	r3, #0
   54474:	str	r3, [fp, #-20]	; 0xffffffec
   54478:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5447c:	ldr	r2, [fp, #-8]
   54480:	str	r2, [r3, #96]	; 0x60
   54484:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54488:	ldr	r2, [fp, #-12]
   5448c:	str	r2, [r3, #92]	; 0x5c
   54490:	mov	r3, #0
   54494:	str	r3, [fp, #-16]
   54498:	b	544a8 <__assert_fail@plt+0x41dbc>
   5449c:	nop			; (mov r0, r0)
   544a0:	b	544a8 <__assert_fail@plt+0x41dbc>
   544a4:	nop			; (mov r0, r0)
   544a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   544ac:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   544b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   544b4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   544b8:	ldr	r3, [fp, #-16]
   544bc:	mov	r0, r3
   544c0:	sub	sp, fp, #4
   544c4:	pop	{fp, pc}
   544c8:	push	{fp, lr}
   544cc:	add	fp, sp, #4
   544d0:	sub	sp, sp, #80	; 0x50
   544d4:	str	r0, [fp, #-72]	; 0xffffffb8
   544d8:	mov	r3, r1
   544dc:	str	r2, [fp, #-80]	; 0xffffffb0
   544e0:	strb	r3, [fp, #-73]	; 0xffffffb7
   544e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   544e8:	ldr	r3, [r3, #84]	; 0x54
   544ec:	str	r3, [fp, #-28]	; 0xffffffe4
   544f0:	mov	r3, #0
   544f4:	str	r3, [fp, #-8]
   544f8:	mvn	r3, #0
   544fc:	str	r3, [fp, #-12]
   54500:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54504:	ldr	r3, [r3, #40]	; 0x28
   54508:	str	r3, [fp, #-32]	; 0xffffffe0
   5450c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   54510:	cmp	r3, #0
   54514:	movne	r3, #1
   54518:	moveq	r3, #0
   5451c:	strb	r3, [fp, #-17]	; 0xffffffef
   54520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   54524:	str	r3, [fp, #-24]	; 0xffffffe8
   54528:	mov	r3, #0
   5452c:	str	r3, [fp, #-64]	; 0xffffffc0
   54530:	sub	r3, fp, #64	; 0x40
   54534:	str	r3, [fp, #-44]	; 0xffffffd4
   54538:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5453c:	str	r3, [fp, #-48]	; 0xffffffd0
   54540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   54544:	str	r3, [fp, #-52]	; 0xffffffcc
   54548:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5454c:	ldr	r3, [r3, #84]	; 0x54
   54550:	str	r3, [fp, #-56]	; 0xffffffc8
   54554:	ldr	r3, [fp, #-56]	; 0xffffffc8
   54558:	ldr	r3, [r3, #36]	; 0x24
   5455c:	ldrb	r3, [r3, #52]	; 0x34
   54560:	bic	r3, r3, #127	; 0x7f
   54564:	uxtb	r3, r3
   54568:	cmp	r3, #0
   5456c:	beq	5464c <__assert_fail@plt+0x41f60>
   54570:	ldr	r0, [fp, #-48]	; 0xffffffd0
   54574:	ldr	r3, [fp, #-52]	; 0xffffffcc
   54578:	sub	r1, r3, #1
   5457c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   54580:	ldr	r3, [r3, #88]	; 0x58
   54584:	mov	r2, r3
   54588:	bl	46c18 <__assert_fail@plt+0x3452c>
   5458c:	str	r0, [fp, #-60]	; 0xffffffc4
   54590:	ldr	r3, [fp, #-60]	; 0xffffffc4
   54594:	and	r3, r3, #1
   54598:	cmp	r3, #0
   5459c:	beq	545ac <__assert_fail@plt+0x41ec0>
   545a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   545a4:	ldr	r3, [r3, #40]	; 0x28
   545a8:	b	54654 <__assert_fail@plt+0x41f68>
   545ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   545b0:	cmp	r3, #0
   545b4:	bne	545c4 <__assert_fail@plt+0x41ed8>
   545b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   545bc:	ldr	r3, [r3, #36]	; 0x24
   545c0:	b	54654 <__assert_fail@plt+0x41f68>
   545c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   545c8:	and	r3, r3, #4
   545cc:	cmp	r3, #0
   545d0:	beq	545f0 <__assert_fail@plt+0x41f04>
   545d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   545d8:	and	r3, r3, #2
   545dc:	cmp	r3, #0
   545e0:	beq	545f0 <__assert_fail@plt+0x41f04>
   545e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   545e8:	ldr	r3, [r3, #48]	; 0x30
   545ec:	b	54654 <__assert_fail@plt+0x41f68>
   545f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   545f4:	and	r3, r3, #2
   545f8:	cmp	r3, #0
   545fc:	beq	5460c <__assert_fail@plt+0x41f20>
   54600:	ldr	r3, [fp, #-56]	; 0xffffffc8
   54604:	ldr	r3, [r3, #44]	; 0x2c
   54608:	b	54654 <__assert_fail@plt+0x41f68>
   5460c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   54610:	and	r3, r3, #4
   54614:	cmp	r3, #0
   54618:	beq	54640 <__assert_fail@plt+0x41f54>
   5461c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   54620:	ldr	r3, [r3, #36]	; 0x24
   54624:	ldr	r2, [r3, #40]	; 0x28
   54628:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5462c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   54630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   54634:	bl	48930 <__assert_fail@plt+0x36244>
   54638:	mov	r3, r0
   5463c:	b	54654 <__assert_fail@plt+0x41f68>
   54640:	ldr	r3, [fp, #-56]	; 0xffffffc8
   54644:	ldr	r3, [r3, #36]	; 0x24
   54648:	b	54654 <__assert_fail@plt+0x41f68>
   5464c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   54650:	ldr	r3, [r3, #36]	; 0x24
   54654:	str	r3, [fp, #-16]
   54658:	ldr	r3, [fp, #-16]
   5465c:	cmp	r3, #0
   54660:	moveq	r3, #1
   54664:	movne	r3, #0
   54668:	uxtb	r3, r3
   5466c:	cmp	r3, #0
   54670:	beq	54684 <__assert_fail@plt+0x41f98>
   54674:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54678:	cmp	r3, #12
   5467c:	mvn	r3, #1
   54680:	b	54a78 <__assert_fail@plt+0x4238c>
   54684:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54688:	ldr	r3, [r3, #100]	; 0x64
   5468c:	cmp	r3, #0
   54690:	beq	54764 <__assert_fail@plt+0x42078>
   54694:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54698:	ldr	r2, [r3, #100]	; 0x64
   5469c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   546a0:	lsl	r3, r3, #2
   546a4:	add	r3, r2, r3
   546a8:	ldr	r2, [fp, #-16]
   546ac:	str	r2, [r3]
   546b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   546b4:	ldr	r3, [r3, #76]	; 0x4c
   546b8:	cmp	r3, #0
   546bc:	beq	54764 <__assert_fail@plt+0x42078>
   546c0:	mov	r3, #0
   546c4:	strb	r3, [fp, #-17]	; 0xffffffef
   546c8:	ldr	r3, [fp, #-16]
   546cc:	add	r3, r3, #4
   546d0:	mov	r2, #0
   546d4:	mov	r1, r3
   546d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   546dc:	bl	582fc <__assert_fail@plt+0x45c10>
   546e0:	mov	r3, r0
   546e4:	str	r3, [fp, #-64]	; 0xffffffc0
   546e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   546ec:	cmp	r3, #0
   546f0:	movne	r3, #1
   546f4:	moveq	r3, #0
   546f8:	uxtb	r3, r3
   546fc:	cmp	r3, #0
   54700:	beq	5470c <__assert_fail@plt+0x42020>
   54704:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54708:	b	54a78 <__assert_fail@plt+0x4238c>
   5470c:	ldr	r3, [fp, #-16]
   54710:	ldrb	r3, [r3, #52]	; 0x34
   54714:	and	r3, r3, #64	; 0x40
   54718:	uxtb	r3, r3
   5471c:	cmp	r3, #0
   54720:	beq	54764 <__assert_fail@plt+0x42078>
   54724:	ldr	r3, [fp, #-16]
   54728:	add	r3, r3, #4
   5472c:	mov	r1, r3
   54730:	ldr	r0, [fp, #-72]	; 0xffffffb8
   54734:	bl	58858 <__assert_fail@plt+0x4616c>
   54738:	mov	r3, r0
   5473c:	str	r3, [fp, #-64]	; 0xffffffc0
   54740:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54744:	cmp	r3, #0
   54748:	movne	r3, #1
   5474c:	moveq	r3, #0
   54750:	uxtb	r3, r3
   54754:	cmp	r3, #0
   54758:	beq	54764 <__assert_fail@plt+0x42078>
   5475c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54760:	b	54a78 <__assert_fail@plt+0x4238c>
   54764:	ldr	r3, [fp, #-16]
   54768:	ldrb	r3, [r3, #52]	; 0x34
   5476c:	lsr	r3, r3, #4
   54770:	and	r3, r3, #1
   54774:	uxtb	r3, r3
   54778:	cmp	r3, #0
   5477c:	beq	54a30 <__assert_fail@plt+0x42344>
   54780:	ldr	r3, [fp, #-16]
   54784:	ldrb	r3, [r3, #52]	; 0x34
   54788:	bic	r3, r3, #127	; 0x7f
   5478c:	uxtb	r3, r3
   54790:	cmp	r3, #0
   54794:	beq	547b4 <__assert_fail@plt+0x420c8>
   54798:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5479c:	ldr	r1, [fp, #-16]
   547a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   547a4:	bl	54ba8 <__assert_fail@plt+0x424bc>
   547a8:	mov	r3, r0
   547ac:	cmp	r3, #0
   547b0:	beq	54a30 <__assert_fail@plt+0x42344>
   547b4:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   547b8:	eor	r3, r3, #1
   547bc:	uxtb	r3, r3
   547c0:	cmp	r3, #0
   547c4:	beq	547d0 <__assert_fail@plt+0x420e4>
   547c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   547cc:	b	54a78 <__assert_fail@plt+0x4238c>
   547d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   547d4:	str	r3, [fp, #-12]
   547d8:	mov	r3, #1
   547dc:	str	r3, [fp, #-8]
   547e0:	b	54a30 <__assert_fail@plt+0x42344>
   547e4:	ldr	r3, [fp, #-16]
   547e8:	str	r3, [fp, #-36]	; 0xffffffdc
   547ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   547f0:	ldr	r3, [r3, #40]	; 0x28
   547f4:	add	r3, r3, #1
   547f8:	str	r3, [fp, #-40]	; 0xffffffd8
   547fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54800:	ldr	r2, [r3, #36]	; 0x24
   54804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   54808:	cmp	r2, r3
   5480c:	movle	r3, #1
   54810:	movgt	r3, #0
   54814:	uxtb	r3, r3
   54818:	cmp	r3, #0
   5481c:	beq	54838 <__assert_fail@plt+0x4214c>
   54820:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54824:	ldr	r2, [r3, #36]	; 0x24
   54828:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5482c:	ldr	r3, [r3, #48]	; 0x30
   54830:	cmp	r2, r3
   54834:	blt	54874 <__assert_fail@plt+0x42188>
   54838:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5483c:	ldr	r2, [r3, #28]
   54840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   54844:	cmp	r2, r3
   54848:	movle	r3, #1
   5484c:	movgt	r3, #0
   54850:	uxtb	r3, r3
   54854:	cmp	r3, #0
   54858:	beq	548bc <__assert_fail@plt+0x421d0>
   5485c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54860:	ldr	r2, [r3, #28]
   54864:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54868:	ldr	r3, [r3, #48]	; 0x30
   5486c:	cmp	r2, r3
   54870:	bge	548bc <__assert_fail@plt+0x421d0>
   54874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   54878:	add	r3, r3, #1
   5487c:	mov	r1, r3
   54880:	ldr	r0, [fp, #-72]	; 0xffffffb8
   54884:	bl	5c594 <__assert_fail@plt+0x49ea8>
   54888:	mov	r3, r0
   5488c:	str	r3, [fp, #-64]	; 0xffffffc0
   54890:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54894:	cmp	r3, #0
   54898:	movne	r3, #1
   5489c:	moveq	r3, #0
   548a0:	uxtb	r3, r3
   548a4:	cmp	r3, #0
   548a8:	beq	548bc <__assert_fail@plt+0x421d0>
   548ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   548b0:	cmp	r3, #12
   548b4:	mvn	r3, #1
   548b8:	b	54a78 <__assert_fail@plt+0x4238c>
   548bc:	sub	r3, fp, #64	; 0x40
   548c0:	ldr	r2, [fp, #-16]
   548c4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   548c8:	mov	r0, r3
   548cc:	bl	57dd0 <__assert_fail@plt+0x456e4>
   548d0:	str	r0, [fp, #-16]
   548d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   548d8:	ldr	r3, [r3, #100]	; 0x64
   548dc:	cmp	r3, #0
   548e0:	beq	548fc <__assert_fail@plt+0x42210>
   548e4:	sub	r3, fp, #64	; 0x40
   548e8:	ldr	r2, [fp, #-16]
   548ec:	ldr	r1, [fp, #-72]	; 0xffffffb8
   548f0:	mov	r0, r3
   548f4:	bl	57f80 <__assert_fail@plt+0x45894>
   548f8:	str	r0, [fp, #-16]
   548fc:	ldr	r3, [fp, #-16]
   54900:	cmp	r3, #0
   54904:	bne	5497c <__assert_fail@plt+0x42290>
   54908:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5490c:	cmp	r3, #0
   54910:	movne	r3, #1
   54914:	moveq	r3, #0
   54918:	uxtb	r3, r3
   5491c:	cmp	r3, #0
   54920:	beq	5492c <__assert_fail@plt+0x42240>
   54924:	mvn	r3, #1
   54928:	b	54a78 <__assert_fail@plt+0x4238c>
   5492c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54930:	ldr	r3, [r3, #100]	; 0x64
   54934:	cmp	r3, #0
   54938:	beq	54a50 <__assert_fail@plt+0x42364>
   5493c:	ldr	r3, [fp, #-8]
   54940:	cmp	r3, #0
   54944:	beq	5495c <__assert_fail@plt+0x42270>
   54948:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   5494c:	eor	r3, r3, #1
   54950:	uxtb	r3, r3
   54954:	cmp	r3, #0
   54958:	bne	54a50 <__assert_fail@plt+0x42364>
   5495c:	sub	r3, fp, #64	; 0x40
   54960:	ldr	r1, [fp, #-72]	; 0xffffffb8
   54964:	mov	r0, r3
   54968:	bl	58238 <__assert_fail@plt+0x45b4c>
   5496c:	str	r0, [fp, #-16]
   54970:	ldr	r3, [fp, #-16]
   54974:	cmp	r3, #0
   54978:	beq	54a50 <__assert_fail@plt+0x42364>
   5497c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   54980:	cmp	r3, #0
   54984:	beq	549ac <__assert_fail@plt+0x422c0>
   54988:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5498c:	ldr	r3, [fp, #-16]
   54990:	cmp	r2, r3
   54994:	bne	549a4 <__assert_fail@plt+0x422b8>
   54998:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5499c:	str	r3, [fp, #-24]	; 0xffffffe8
   549a0:	b	549ac <__assert_fail@plt+0x422c0>
   549a4:	mov	r3, #0
   549a8:	strb	r3, [fp, #-17]	; 0xffffffef
   549ac:	ldr	r3, [fp, #-16]
   549b0:	ldrb	r3, [r3, #52]	; 0x34
   549b4:	and	r3, r3, #16
   549b8:	uxtb	r3, r3
   549bc:	cmp	r3, #0
   549c0:	beq	54a30 <__assert_fail@plt+0x42344>
   549c4:	ldr	r3, [fp, #-16]
   549c8:	ldrb	r3, [r3, #52]	; 0x34
   549cc:	bic	r3, r3, #127	; 0x7f
   549d0:	uxtb	r3, r3
   549d4:	cmp	r3, #0
   549d8:	beq	54a00 <__assert_fail@plt+0x42314>
   549dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   549e0:	ldr	r3, [r3, #40]	; 0x28
   549e4:	mov	r2, r3
   549e8:	ldr	r1, [fp, #-16]
   549ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   549f0:	bl	54ba8 <__assert_fail@plt+0x424bc>
   549f4:	mov	r3, r0
   549f8:	cmp	r3, #0
   549fc:	beq	54a30 <__assert_fail@plt+0x42344>
   54a00:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54a04:	ldr	r3, [r3, #40]	; 0x28
   54a08:	str	r3, [fp, #-12]
   54a0c:	mov	r3, #1
   54a10:	str	r3, [fp, #-8]
   54a14:	mov	r3, #0
   54a18:	str	r3, [fp, #-80]	; 0xffffffb0
   54a1c:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   54a20:	eor	r3, r3, #1
   54a24:	uxtb	r3, r3
   54a28:	cmp	r3, #0
   54a2c:	bne	54a4c <__assert_fail@plt+0x42360>
   54a30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54a34:	ldr	r2, [r3, #56]	; 0x38
   54a38:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54a3c:	ldr	r3, [r3, #40]	; 0x28
   54a40:	cmp	r2, r3
   54a44:	bgt	547e4 <__assert_fail@plt+0x420f8>
   54a48:	b	54a50 <__assert_fail@plt+0x42364>
   54a4c:	nop			; (mov r0, r0)
   54a50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   54a54:	cmp	r3, #0
   54a58:	beq	54a74 <__assert_fail@plt+0x42388>
   54a5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   54a60:	ldr	r2, [r3]
   54a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54a68:	add	r2, r2, r3
   54a6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   54a70:	str	r2, [r3]
   54a74:	ldr	r3, [fp, #-12]
   54a78:	mov	r0, r3
   54a7c:	sub	sp, fp, #4
   54a80:	pop	{fp, pc}
   54a84:	push	{fp}		; (str fp, [sp, #-4]!)
   54a88:	add	fp, sp, #0
   54a8c:	sub	sp, sp, #28
   54a90:	str	r0, [fp, #-16]
   54a94:	str	r1, [fp, #-20]	; 0xffffffec
   54a98:	str	r2, [fp, #-24]	; 0xffffffe8
   54a9c:	ldr	r3, [fp, #-16]
   54aa0:	ldr	r2, [r3]
   54aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   54aa8:	lsl	r3, r3, #3
   54aac:	add	r3, r2, r3
   54ab0:	ldrb	r3, [r3, #4]
   54ab4:	str	r3, [fp, #-8]
   54ab8:	ldr	r3, [fp, #-16]
   54abc:	ldr	r2, [r3]
   54ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   54ac4:	lsl	r3, r3, #3
   54ac8:	add	r3, r2, r3
   54acc:	ldr	r3, [r3, #4]
   54ad0:	lsr	r3, r3, #8
   54ad4:	lsl	r3, r3, #22
   54ad8:	lsr	r3, r3, #22
   54adc:	uxth	r3, r3
   54ae0:	str	r3, [fp, #-12]
   54ae4:	ldr	r3, [fp, #-8]
   54ae8:	cmp	r3, #2
   54aec:	beq	54af8 <__assert_fail@plt+0x4240c>
   54af0:	mov	r3, #0
   54af4:	b	54b98 <__assert_fail@plt+0x424ac>
   54af8:	ldr	r3, [fp, #-12]
   54afc:	cmp	r3, #0
   54b00:	bne	54b0c <__assert_fail@plt+0x42420>
   54b04:	mov	r3, #1
   54b08:	b	54b98 <__assert_fail@plt+0x424ac>
   54b0c:	ldr	r3, [fp, #-12]
   54b10:	and	r3, r3, #4
   54b14:	cmp	r3, #0
   54b18:	beq	54b2c <__assert_fail@plt+0x42440>
   54b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54b20:	and	r3, r3, #1
   54b24:	cmp	r3, #0
   54b28:	beq	54b8c <__assert_fail@plt+0x424a0>
   54b2c:	ldr	r3, [fp, #-12]
   54b30:	and	r3, r3, #8
   54b34:	cmp	r3, #0
   54b38:	beq	54b4c <__assert_fail@plt+0x42460>
   54b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54b40:	and	r3, r3, #1
   54b44:	cmp	r3, #0
   54b48:	bne	54b8c <__assert_fail@plt+0x424a0>
   54b4c:	ldr	r3, [fp, #-12]
   54b50:	and	r3, r3, #32
   54b54:	cmp	r3, #0
   54b58:	beq	54b6c <__assert_fail@plt+0x42480>
   54b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54b60:	and	r3, r3, #2
   54b64:	cmp	r3, #0
   54b68:	beq	54b8c <__assert_fail@plt+0x424a0>
   54b6c:	ldr	r3, [fp, #-12]
   54b70:	and	r3, r3, #128	; 0x80
   54b74:	cmp	r3, #0
   54b78:	beq	54b94 <__assert_fail@plt+0x424a8>
   54b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54b80:	and	r3, r3, #8
   54b84:	cmp	r3, #0
   54b88:	bne	54b94 <__assert_fail@plt+0x424a8>
   54b8c:	mov	r3, #0
   54b90:	b	54b98 <__assert_fail@plt+0x424ac>
   54b94:	mov	r3, #1
   54b98:	mov	r0, r3
   54b9c:	add	sp, fp, #0
   54ba0:	pop	{fp}		; (ldr fp, [sp], #4)
   54ba4:	bx	lr
   54ba8:	push	{fp, lr}
   54bac:	add	fp, sp, #4
   54bb0:	sub	sp, sp, #24
   54bb4:	str	r0, [fp, #-16]
   54bb8:	str	r1, [fp, #-20]	; 0xffffffec
   54bbc:	str	r2, [fp, #-24]	; 0xffffffe8
   54bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   54bc4:	ldrb	r3, [r3, #52]	; 0x34
   54bc8:	and	r3, r3, #16
   54bcc:	uxtb	r3, r3
   54bd0:	cmp	r3, #0
   54bd4:	ldr	r0, [fp, #-16]
   54bd8:	ldr	r3, [fp, #-16]
   54bdc:	ldr	r3, [r3, #88]	; 0x58
   54be0:	mov	r2, r3
   54be4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   54be8:	bl	46c18 <__assert_fail@plt+0x3452c>
   54bec:	str	r0, [fp, #-12]
   54bf0:	mov	r3, #0
   54bf4:	str	r3, [fp, #-8]
   54bf8:	b	54c5c <__assert_fail@plt+0x42570>
   54bfc:	ldr	r3, [fp, #-16]
   54c00:	ldr	r0, [r3, #84]	; 0x54
   54c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   54c08:	ldr	r2, [r3, #12]
   54c0c:	ldr	r3, [fp, #-8]
   54c10:	lsl	r3, r3, #2
   54c14:	add	r3, r2, r3
   54c18:	ldr	r3, [r3]
   54c1c:	ldr	r2, [fp, #-12]
   54c20:	mov	r1, r3
   54c24:	bl	54a84 <__assert_fail@plt+0x42398>
   54c28:	mov	r3, r0
   54c2c:	cmp	r3, #0
   54c30:	beq	54c50 <__assert_fail@plt+0x42564>
   54c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   54c38:	ldr	r2, [r3, #12]
   54c3c:	ldr	r3, [fp, #-8]
   54c40:	lsl	r3, r3, #2
   54c44:	add	r3, r2, r3
   54c48:	ldr	r3, [r3]
   54c4c:	b	54c74 <__assert_fail@plt+0x42588>
   54c50:	ldr	r3, [fp, #-8]
   54c54:	add	r3, r3, #1
   54c58:	str	r3, [fp, #-8]
   54c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   54c60:	ldr	r2, [r3, #8]
   54c64:	ldr	r3, [fp, #-8]
   54c68:	cmp	r2, r3
   54c6c:	bgt	54bfc <__assert_fail@plt+0x42510>
   54c70:	mov	r3, #0
   54c74:	mov	r0, r3
   54c78:	sub	sp, fp, #4
   54c7c:	pop	{fp, pc}
   54c80:	push	{fp, lr}
   54c84:	add	fp, sp, #4
   54c88:	sub	sp, sp, #88	; 0x58
   54c8c:	str	r0, [fp, #-64]	; 0xffffffc0
   54c90:	str	r1, [fp, #-68]	; 0xffffffbc
   54c94:	str	r2, [fp, #-72]	; 0xffffffb8
   54c98:	str	r3, [fp, #-76]	; 0xffffffb4
   54c9c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54ca0:	ldr	r3, [r3, #84]	; 0x54
   54ca4:	str	r3, [fp, #-20]	; 0xffffffec
   54ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   54cac:	ldr	r2, [r3]
   54cb0:	ldr	r3, [fp, #8]
   54cb4:	lsl	r3, r3, #3
   54cb8:	add	r3, r2, r3
   54cbc:	ldrb	r3, [r3, #4]
   54cc0:	and	r3, r3, #8
   54cc4:	cmp	r3, #0
   54cc8:	beq	54e60 <__assert_fail@plt+0x42774>
   54ccc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54cd0:	ldr	r2, [r3, #100]	; 0x64
   54cd4:	ldr	r3, [fp, #4]
   54cd8:	ldr	r3, [r3]
   54cdc:	lsl	r3, r3, #2
   54ce0:	add	r3, r2, r3
   54ce4:	ldr	r3, [r3]
   54ce8:	add	r3, r3, #4
   54cec:	str	r3, [fp, #-24]	; 0xffffffe8
   54cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   54cf4:	ldr	r1, [r3, #20]
   54cf8:	ldr	r2, [fp, #8]
   54cfc:	mov	r3, r2
   54d00:	lsl	r3, r3, #1
   54d04:	add	r3, r3, r2
   54d08:	lsl	r3, r3, #2
   54d0c:	add	r3, r1, r3
   54d10:	str	r3, [fp, #-28]	; 0xffffffe4
   54d14:	ldr	r1, [fp, #8]
   54d18:	ldr	r0, [fp, #12]
   54d1c:	bl	481a4 <__assert_fail@plt+0x35ab8>
   54d20:	mov	r3, r0
   54d24:	cmp	r3, #0
   54d28:	bne	54d5c <__assert_fail@plt+0x42670>
   54d2c:	ldr	r1, [fp, #8]
   54d30:	ldr	r0, [fp, #12]
   54d34:	bl	47d94 <__assert_fail@plt+0x356a8>
   54d38:	mov	r3, r0
   54d3c:	strb	r3, [fp, #-29]	; 0xffffffe3
   54d40:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   54d44:	eor	r3, r3, #1
   54d48:	uxtb	r3, r3
   54d4c:	cmp	r3, #0
   54d50:	beq	54d5c <__assert_fail@plt+0x42670>
   54d54:	mvn	r3, #1
   54d58:	b	551f8 <__assert_fail@plt+0x42b0c>
   54d5c:	mvn	r3, #0
   54d60:	str	r3, [fp, #-8]
   54d64:	mov	r3, #0
   54d68:	str	r3, [fp, #-12]
   54d6c:	b	54e3c <__assert_fail@plt+0x42750>
   54d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   54d74:	ldr	r2, [r3, #8]
   54d78:	ldr	r3, [fp, #-12]
   54d7c:	lsl	r3, r3, #2
   54d80:	add	r3, r2, r3
   54d84:	ldr	r3, [r3]
   54d88:	str	r3, [fp, #-36]	; 0xffffffdc
   54d8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   54d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   54d94:	bl	481a4 <__assert_fail@plt+0x35ab8>
   54d98:	mov	r3, r0
   54d9c:	cmp	r3, #0
   54da0:	beq	54e2c <__assert_fail@plt+0x42740>
   54da4:	ldr	r3, [fp, #-8]
   54da8:	cmn	r3, #1
   54dac:	bne	54dbc <__assert_fail@plt+0x426d0>
   54db0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   54db4:	str	r3, [fp, #-8]
   54db8:	b	54e30 <__assert_fail@plt+0x42744>
   54dbc:	ldr	r1, [fp, #-8]
   54dc0:	ldr	r0, [fp, #12]
   54dc4:	bl	481a4 <__assert_fail@plt+0x35ab8>
   54dc8:	mov	r3, r0
   54dcc:	cmp	r3, #0
   54dd0:	beq	54ddc <__assert_fail@plt+0x426f0>
   54dd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   54dd8:	b	551f8 <__assert_fail@plt+0x42b0c>
   54ddc:	ldr	r3, [fp, #16]
   54de0:	cmp	r3, #0
   54de4:	beq	54e54 <__assert_fail@plt+0x42768>
   54de8:	ldr	r3, [fp, #4]
   54dec:	ldr	r1, [r3]
   54df0:	ldr	r3, [fp, #12]
   54df4:	str	r3, [sp, #8]
   54df8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   54dfc:	str	r3, [sp, #4]
   54e00:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54e04:	str	r3, [sp]
   54e08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   54e0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   54e10:	ldr	r0, [fp, #16]
   54e14:	bl	55204 <__assert_fail@plt+0x42b18>
   54e18:	mov	r3, r0
   54e1c:	cmp	r3, #0
   54e20:	beq	54e54 <__assert_fail@plt+0x42768>
   54e24:	mvn	r3, #1
   54e28:	b	551f8 <__assert_fail@plt+0x42b0c>
   54e2c:	nop			; (mov r0, r0)
   54e30:	ldr	r3, [fp, #-12]
   54e34:	add	r3, r3, #1
   54e38:	str	r3, [fp, #-12]
   54e3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   54e40:	ldr	r2, [r3, #4]
   54e44:	ldr	r3, [fp, #-12]
   54e48:	cmp	r2, r3
   54e4c:	bgt	54d70 <__assert_fail@plt+0x42684>
   54e50:	b	54e58 <__assert_fail@plt+0x4276c>
   54e54:	nop			; (mov r0, r0)
   54e58:	ldr	r3, [fp, #-8]
   54e5c:	b	551f8 <__assert_fail@plt+0x42b0c>
   54e60:	mov	r3, #0
   54e64:	str	r3, [fp, #-16]
   54e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   54e6c:	ldr	r2, [r3]
   54e70:	ldr	r3, [fp, #8]
   54e74:	lsl	r3, r3, #3
   54e78:	add	r3, r2, r3
   54e7c:	ldrb	r3, [r3, #4]
   54e80:	str	r3, [fp, #-40]	; 0xffffffd8
   54e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   54e88:	ldr	r2, [r3]
   54e8c:	ldr	r3, [fp, #8]
   54e90:	lsl	r3, r3, #3
   54e94:	add	r3, r2, r3
   54e98:	ldrb	r3, [r3, #6]
   54e9c:	and	r3, r3, #16
   54ea0:	uxtb	r3, r3
   54ea4:	cmp	r3, #0
   54ea8:	beq	54ecc <__assert_fail@plt+0x427e0>
   54eac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   54eb0:	ldr	r3, [fp, #4]
   54eb4:	ldr	r3, [r3]
   54eb8:	ldr	r1, [fp, #8]
   54ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   54ec0:	bl	5bde0 <__assert_fail@plt+0x496f4>
   54ec4:	str	r0, [fp, #-16]
   54ec8:	b	550c8 <__assert_fail@plt+0x429dc>
   54ecc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   54ed0:	cmp	r3, #4
   54ed4:	bne	550c8 <__assert_fail@plt+0x429dc>
   54ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   54edc:	ldr	r2, [r3]
   54ee0:	ldr	r3, [fp, #8]
   54ee4:	lsl	r3, r3, #3
   54ee8:	add	r3, r2, r3
   54eec:	ldr	r3, [r3]
   54ef0:	add	r3, r3, #1
   54ef4:	str	r3, [fp, #-44]	; 0xffffffd4
   54ef8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   54efc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   54f00:	cmp	r2, r3
   54f04:	bge	54f38 <__assert_fail@plt+0x4284c>
   54f08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   54f0c:	lsl	r3, r3, #3
   54f10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54f14:	add	r3, r2, r3
   54f18:	ldr	r2, [r3, #4]
   54f1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   54f20:	lsl	r3, r3, #3
   54f24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   54f28:	add	r3, r1, r3
   54f2c:	ldr	r3, [r3]
   54f30:	sub	r3, r2, r3
   54f34:	str	r3, [fp, #-16]
   54f38:	ldr	r3, [fp, #16]
   54f3c:	cmp	r3, #0
   54f40:	beq	55020 <__assert_fail@plt+0x42934>
   54f44:	ldr	r2, [fp, #-44]	; 0xffffffd4
   54f48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   54f4c:	cmp	r2, r3
   54f50:	bge	54f8c <__assert_fail@plt+0x428a0>
   54f54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   54f58:	lsl	r3, r3, #3
   54f5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54f60:	add	r3, r2, r3
   54f64:	ldr	r3, [r3]
   54f68:	cmn	r3, #1
   54f6c:	beq	54f8c <__assert_fail@plt+0x428a0>
   54f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   54f74:	lsl	r3, r3, #3
   54f78:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54f7c:	add	r3, r2, r3
   54f80:	ldr	r3, [r3, #4]
   54f84:	cmn	r3, #1
   54f88:	bne	54f94 <__assert_fail@plt+0x428a8>
   54f8c:	mvn	r3, #0
   54f90:	b	551f8 <__assert_fail@plt+0x42b0c>
   54f94:	ldr	r3, [fp, #-16]
   54f98:	cmp	r3, #0
   54f9c:	beq	55020 <__assert_fail@plt+0x42934>
   54fa0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54fa4:	ldr	r3, [r3, #4]
   54fa8:	str	r3, [fp, #-48]	; 0xffffffd0
   54fac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54fb0:	ldr	r2, [r3, #28]
   54fb4:	ldr	r3, [fp, #4]
   54fb8:	ldr	r3, [r3]
   54fbc:	sub	r2, r2, r3
   54fc0:	ldr	r3, [fp, #-16]
   54fc4:	cmp	r2, r3
   54fc8:	blt	55018 <__assert_fail@plt+0x4292c>
   54fcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   54fd0:	lsl	r3, r3, #3
   54fd4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54fd8:	add	r3, r2, r3
   54fdc:	ldr	r3, [r3]
   54fe0:	mov	r2, r3
   54fe4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   54fe8:	add	r0, r3, r2
   54fec:	ldr	r3, [fp, #4]
   54ff0:	ldr	r3, [r3]
   54ff4:	mov	r2, r3
   54ff8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   54ffc:	add	r3, r3, r2
   55000:	ldr	r2, [fp, #-16]
   55004:	mov	r1, r3
   55008:	bl	12158 <memcmp@plt>
   5500c:	mov	r3, r0
   55010:	cmp	r3, #0
   55014:	beq	55020 <__assert_fail@plt+0x42934>
   55018:	mvn	r3, #0
   5501c:	b	551f8 <__assert_fail@plt+0x42b0c>
   55020:	ldr	r3, [fp, #-16]
   55024:	cmp	r3, #0
   55028:	bne	550c8 <__assert_fail@plt+0x429dc>
   5502c:	ldr	r1, [fp, #8]
   55030:	ldr	r0, [fp, #12]
   55034:	bl	47d94 <__assert_fail@plt+0x356a8>
   55038:	mov	r3, r0
   5503c:	strb	r3, [fp, #-49]	; 0xffffffcf
   55040:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   55044:	eor	r3, r3, #1
   55048:	uxtb	r3, r3
   5504c:	cmp	r3, #0
   55050:	beq	5505c <__assert_fail@plt+0x42970>
   55054:	mvn	r3, #1
   55058:	b	551f8 <__assert_fail@plt+0x42b0c>
   5505c:	ldr	r3, [fp, #-20]	; 0xffffffec
   55060:	ldr	r1, [r3, #20]
   55064:	ldr	r2, [fp, #8]
   55068:	mov	r3, r2
   5506c:	lsl	r3, r3, #1
   55070:	add	r3, r3, r2
   55074:	lsl	r3, r3, #2
   55078:	add	r3, r1, r3
   5507c:	ldr	r3, [r3, #8]
   55080:	ldr	r3, [r3]
   55084:	str	r3, [fp, #-56]	; 0xffffffc8
   55088:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5508c:	ldr	r2, [r3, #100]	; 0x64
   55090:	ldr	r3, [fp, #4]
   55094:	ldr	r3, [r3]
   55098:	lsl	r3, r3, #2
   5509c:	add	r3, r2, r3
   550a0:	ldr	r3, [r3]
   550a4:	add	r3, r3, #4
   550a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   550ac:	mov	r0, r3
   550b0:	bl	481a4 <__assert_fail@plt+0x35ab8>
   550b4:	mov	r3, r0
   550b8:	cmp	r3, #0
   550bc:	beq	550c8 <__assert_fail@plt+0x429dc>
   550c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   550c4:	b	551f8 <__assert_fail@plt+0x42b0c>
   550c8:	ldr	r3, [fp, #-16]
   550cc:	cmp	r3, #0
   550d0:	bne	55108 <__assert_fail@plt+0x42a1c>
   550d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   550d8:	ldr	r2, [r3]
   550dc:	ldr	r3, [fp, #8]
   550e0:	lsl	r3, r3, #3
   550e4:	add	r1, r2, r3
   550e8:	ldr	r3, [fp, #4]
   550ec:	ldr	r3, [r3]
   550f0:	mov	r2, r3
   550f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   550f8:	bl	5c340 <__assert_fail@plt+0x49c54>
   550fc:	mov	r3, r0
   55100:	cmp	r3, #0
   55104:	beq	551f4 <__assert_fail@plt+0x42b08>
   55108:	ldr	r3, [fp, #-20]	; 0xffffffec
   5510c:	ldr	r2, [r3, #12]
   55110:	ldr	r3, [fp, #8]
   55114:	lsl	r3, r3, #2
   55118:	add	r3, r2, r3
   5511c:	ldr	r3, [r3]
   55120:	str	r3, [fp, #-60]	; 0xffffffc4
   55124:	ldr	r3, [fp, #-16]
   55128:	cmp	r3, #0
   5512c:	bne	55140 <__assert_fail@plt+0x42a54>
   55130:	ldr	r3, [fp, #4]
   55134:	ldr	r3, [r3]
   55138:	add	r3, r3, #1
   5513c:	b	55150 <__assert_fail@plt+0x42a64>
   55140:	ldr	r3, [fp, #4]
   55144:	ldr	r2, [r3]
   55148:	ldr	r3, [fp, #-16]
   5514c:	add	r3, r2, r3
   55150:	ldr	r2, [fp, #4]
   55154:	str	r3, [r2]
   55158:	ldr	r3, [fp, #16]
   5515c:	cmp	r3, #0
   55160:	beq	551e0 <__assert_fail@plt+0x42af4>
   55164:	ldr	r3, [fp, #4]
   55168:	ldr	r2, [r3]
   5516c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55170:	ldr	r3, [r3, #92]	; 0x5c
   55174:	cmp	r2, r3
   55178:	bgt	551d8 <__assert_fail@plt+0x42aec>
   5517c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55180:	ldr	r2, [r3, #100]	; 0x64
   55184:	ldr	r3, [fp, #4]
   55188:	ldr	r3, [r3]
   5518c:	lsl	r3, r3, #2
   55190:	add	r3, r2, r3
   55194:	ldr	r3, [r3]
   55198:	cmp	r3, #0
   5519c:	beq	551d8 <__assert_fail@plt+0x42aec>
   551a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   551a4:	ldr	r2, [r3, #100]	; 0x64
   551a8:	ldr	r3, [fp, #4]
   551ac:	ldr	r3, [r3]
   551b0:	lsl	r3, r3, #2
   551b4:	add	r3, r2, r3
   551b8:	ldr	r3, [r3]
   551bc:	add	r3, r3, #4
   551c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   551c4:	mov	r0, r3
   551c8:	bl	481a4 <__assert_fail@plt+0x35ab8>
   551cc:	mov	r3, r0
   551d0:	cmp	r3, #0
   551d4:	bne	551e0 <__assert_fail@plt+0x42af4>
   551d8:	mvn	r3, #0
   551dc:	b	551f8 <__assert_fail@plt+0x42b0c>
   551e0:	ldr	r3, [fp, #12]
   551e4:	mov	r2, #0
   551e8:	str	r2, [r3, #4]
   551ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   551f0:	b	551f8 <__assert_fail@plt+0x42b0c>
   551f4:	mvn	r3, #0
   551f8:	mov	r0, r3
   551fc:	sub	sp, fp, #4
   55200:	pop	{fp, pc}
   55204:	push	{r4, fp, lr}
   55208:	add	fp, sp, #8
   5520c:	sub	sp, sp, #36	; 0x24
   55210:	str	r0, [fp, #-32]	; 0xffffffe0
   55214:	str	r1, [fp, #-36]	; 0xffffffdc
   55218:	str	r2, [fp, #-40]	; 0xffffffd8
   5521c:	str	r3, [fp, #-44]	; 0xffffffd4
   55220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55224:	ldr	r3, [r3]
   55228:	add	r1, r3, #1
   5522c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   55230:	str	r1, [r2]
   55234:	str	r3, [fp, #-16]
   55238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5523c:	ldr	r2, [r3]
   55240:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55244:	ldr	r3, [r3, #4]
   55248:	cmp	r2, r3
   5524c:	bne	552b0 <__assert_fail@plt+0x42bc4>
   55250:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55254:	ldr	r0, [r3, #8]
   55258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5525c:	ldr	r2, [r3, #4]
   55260:	mov	r3, r2
   55264:	lsl	r3, r3, #1
   55268:	add	r3, r3, r2
   5526c:	lsl	r3, r3, #4
   55270:	mov	r1, r3
   55274:	bl	43d30 <__assert_fail@plt+0x31644>
   55278:	str	r0, [fp, #-20]	; 0xffffffec
   5527c:	ldr	r3, [fp, #-20]	; 0xffffffec
   55280:	cmp	r3, #0
   55284:	bne	55290 <__assert_fail@plt+0x42ba4>
   55288:	mov	r3, #12
   5528c:	b	55420 <__assert_fail@plt+0x42d34>
   55290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55294:	ldr	r3, [r3, #4]
   55298:	lsl	r2, r3, #1
   5529c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   552a0:	str	r2, [r3, #4]
   552a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   552a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   552ac:	str	r2, [r3, #8]
   552b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   552b4:	ldr	r1, [r3, #8]
   552b8:	ldr	r2, [fp, #-16]
   552bc:	mov	r3, r2
   552c0:	lsl	r3, r3, #1
   552c4:	add	r3, r3, r2
   552c8:	lsl	r3, r3, #3
   552cc:	add	r3, r1, r3
   552d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   552d4:	str	r2, [r3]
   552d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   552dc:	ldr	r1, [r3, #8]
   552e0:	ldr	r2, [fp, #-16]
   552e4:	mov	r3, r2
   552e8:	lsl	r3, r3, #1
   552ec:	add	r3, r3, r2
   552f0:	lsl	r3, r3, #3
   552f4:	add	r3, r1, r3
   552f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   552fc:	str	r2, [r3, #4]
   55300:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55304:	ldr	r1, [r3, #8]
   55308:	ldr	r2, [fp, #-16]
   5530c:	mov	r3, r2
   55310:	lsl	r3, r3, #1
   55314:	add	r3, r3, r2
   55318:	lsl	r3, r3, #3
   5531c:	add	r4, r1, r3
   55320:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55324:	lsl	r3, r3, #4
   55328:	mov	r0, r3
   5532c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   55330:	mov	r3, r0
   55334:	str	r3, [r4, #8]
   55338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5533c:	ldr	r1, [r3, #8]
   55340:	ldr	r2, [fp, #-16]
   55344:	mov	r3, r2
   55348:	lsl	r3, r3, #1
   5534c:	add	r3, r3, r2
   55350:	lsl	r3, r3, #3
   55354:	add	r3, r1, r3
   55358:	ldr	r3, [r3, #8]
   5535c:	cmp	r3, #0
   55360:	bne	5536c <__assert_fail@plt+0x42c80>
   55364:	mov	r3, #12
   55368:	b	55420 <__assert_fail@plt+0x42d34>
   5536c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55370:	ldr	r1, [r3, #8]
   55374:	ldr	r2, [fp, #-16]
   55378:	mov	r3, r2
   5537c:	lsl	r3, r3, #1
   55380:	add	r3, r3, r2
   55384:	lsl	r3, r3, #3
   55388:	add	r3, r1, r3
   5538c:	ldr	r0, [r3, #8]
   55390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55394:	lsl	r3, r3, #3
   55398:	mov	r2, r3
   5539c:	ldr	r1, [fp, #4]
   553a0:	bl	120f8 <memcpy@plt>
   553a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   553a8:	ldr	r1, [r3, #8]
   553ac:	ldr	r2, [fp, #-16]
   553b0:	mov	r3, r2
   553b4:	lsl	r3, r3, #1
   553b8:	add	r3, r3, r2
   553bc:	lsl	r3, r3, #3
   553c0:	add	r3, r1, r3
   553c4:	ldr	r2, [r3, #8]
   553c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   553cc:	lsl	r3, r3, #3
   553d0:	add	r0, r2, r3
   553d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   553d8:	lsl	r3, r3, #3
   553dc:	mov	r2, r3
   553e0:	ldr	r1, [fp, #8]
   553e4:	bl	120f8 <memcpy@plt>
   553e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   553ec:	ldr	r1, [r3, #8]
   553f0:	ldr	r2, [fp, #-16]
   553f4:	mov	r3, r2
   553f8:	lsl	r3, r3, #1
   553fc:	add	r3, r3, r2
   55400:	lsl	r3, r3, #3
   55404:	add	r3, r1, r3
   55408:	add	r3, r3, #12
   5540c:	ldr	r1, [fp, #12]
   55410:	mov	r0, r3
   55414:	bl	47038 <__assert_fail@plt+0x3494c>
   55418:	str	r0, [fp, #-24]	; 0xffffffe8
   5541c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55420:	mov	r0, r3
   55424:	sub	sp, fp, #8
   55428:	pop	{r4, fp, pc}
   5542c:	push	{fp, lr}
   55430:	add	fp, sp, #4
   55434:	sub	sp, sp, #24
   55438:	str	r0, [fp, #-16]
   5543c:	str	r1, [fp, #-20]	; 0xffffffec
   55440:	str	r2, [fp, #-24]	; 0xffffffe8
   55444:	str	r3, [fp, #-28]	; 0xffffffe4
   55448:	ldr	r3, [fp, #-16]
   5544c:	cmp	r3, #0
   55450:	beq	55464 <__assert_fail@plt+0x42d78>
   55454:	ldr	r3, [fp, #-16]
   55458:	ldr	r3, [r3]
   5545c:	cmp	r3, #0
   55460:	bne	5546c <__assert_fail@plt+0x42d80>
   55464:	mvn	r3, #0
   55468:	b	555f0 <__assert_fail@plt+0x42f04>
   5546c:	ldr	r3, [fp, #-16]
   55470:	ldr	r3, [r3]
   55474:	sub	r2, r3, #1
   55478:	ldr	r3, [fp, #-16]
   5547c:	str	r2, [r3]
   55480:	ldr	r3, [fp, #-16]
   55484:	ldr	r3, [r3]
   55488:	str	r3, [fp, #-8]
   5548c:	ldr	r3, [fp, #-16]
   55490:	ldr	r1, [r3, #8]
   55494:	ldr	r2, [fp, #-8]
   55498:	mov	r3, r2
   5549c:	lsl	r3, r3, #1
   554a0:	add	r3, r3, r2
   554a4:	lsl	r3, r3, #3
   554a8:	add	r3, r1, r3
   554ac:	ldr	r2, [r3]
   554b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   554b4:	str	r2, [r3]
   554b8:	ldr	r3, [fp, #-16]
   554bc:	ldr	r1, [r3, #8]
   554c0:	ldr	r2, [fp, #-8]
   554c4:	mov	r3, r2
   554c8:	lsl	r3, r3, #1
   554cc:	add	r3, r3, r2
   554d0:	lsl	r3, r3, #3
   554d4:	add	r3, r1, r3
   554d8:	ldr	r1, [r3, #8]
   554dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   554e0:	lsl	r3, r3, #3
   554e4:	mov	r2, r3
   554e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   554ec:	bl	120f8 <memcpy@plt>
   554f0:	ldr	r3, [fp, #-16]
   554f4:	ldr	r1, [r3, #8]
   554f8:	ldr	r2, [fp, #-8]
   554fc:	mov	r3, r2
   55500:	lsl	r3, r3, #1
   55504:	add	r3, r3, r2
   55508:	lsl	r3, r3, #3
   5550c:	add	r3, r1, r3
   55510:	ldr	r2, [r3, #8]
   55514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55518:	lsl	r3, r3, #3
   5551c:	add	r1, r2, r3
   55520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55524:	lsl	r3, r3, #3
   55528:	mov	r2, r3
   5552c:	ldr	r0, [fp, #4]
   55530:	bl	120f8 <memcpy@plt>
   55534:	ldr	r3, [fp, #8]
   55538:	ldr	r3, [r3, #8]
   5553c:	mov	r0, r3
   55540:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55544:	ldr	r3, [fp, #-16]
   55548:	ldr	r1, [r3, #8]
   5554c:	ldr	r2, [fp, #-8]
   55550:	mov	r3, r2
   55554:	lsl	r3, r3, #1
   55558:	add	r3, r3, r2
   5555c:	lsl	r3, r3, #3
   55560:	add	r3, r1, r3
   55564:	ldr	r3, [r3, #8]
   55568:	mov	r0, r3
   5556c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55570:	ldr	r3, [fp, #-16]
   55574:	ldr	r1, [r3, #8]
   55578:	ldr	r2, [fp, #-8]
   5557c:	mov	r3, r2
   55580:	lsl	r3, r3, #1
   55584:	add	r3, r3, r2
   55588:	lsl	r3, r3, #3
   5558c:	add	r3, r1, r3
   55590:	ldr	r2, [fp, #8]
   55594:	mov	ip, r2
   55598:	add	r3, r3, #12
   5559c:	ldm	r3, {r0, r1, r2}
   555a0:	stm	ip, {r0, r1, r2}
   555a4:	ldr	r3, [fp, #-16]
   555a8:	ldr	r1, [r3, #8]
   555ac:	ldr	r2, [fp, #-8]
   555b0:	mov	r3, r2
   555b4:	lsl	r3, r3, #1
   555b8:	add	r3, r3, r2
   555bc:	lsl	r3, r3, #3
   555c0:	add	r3, r1, r3
   555c4:	ldr	r3, [r3, #4]
   555c8:	cmp	r3, #0
   555cc:	ldr	r3, [fp, #-16]
   555d0:	ldr	r1, [r3, #8]
   555d4:	ldr	r2, [fp, #-8]
   555d8:	mov	r3, r2
   555dc:	lsl	r3, r3, #1
   555e0:	add	r3, r3, r2
   555e4:	lsl	r3, r3, #3
   555e8:	add	r3, r1, r3
   555ec:	ldr	r3, [r3, #4]
   555f0:	mov	r0, r3
   555f4:	sub	sp, fp, #4
   555f8:	pop	{fp, pc}
   555fc:	push	{fp}		; (str fp, [sp, #-4]!)
   55600:	add	fp, sp, #0
   55604:	sub	sp, sp, #12
   55608:	str	r0, [fp, #-8]
   5560c:	str	r1, [fp, #-12]
   55610:	nop			; (mov r0, r0)
   55614:	add	sp, fp, #0
   55618:	pop	{fp}		; (ldr fp, [sp], #4)
   5561c:	bx	lr
   55620:	push	{fp, lr}
   55624:	add	fp, sp, #4
   55628:	sub	sp, sp, #8
   5562c:	str	r0, [fp, #-8]
   55630:	ldr	r3, [fp, #-8]
   55634:	ldr	r2, [r3, #8]
   55638:	ldr	r3, [fp, #-8]
   5563c:	add	r3, r3, #12
   55640:	cmp	r2, r3
   55644:	beq	55658 <__assert_fail@plt+0x42f6c>
   55648:	ldr	r3, [fp, #-8]
   5564c:	ldr	r3, [r3, #8]
   55650:	mov	r0, r3
   55654:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55658:	nop			; (mov r0, r0)
   5565c:	sub	sp, fp, #4
   55660:	pop	{fp, pc}
   55664:	push	{fp}		; (str fp, [sp, #-4]!)
   55668:	add	fp, sp, #0
   5566c:	sub	sp, sp, #12
   55670:	str	r0, [fp, #-8]
   55674:	ldr	r3, [fp, #-8]
   55678:	mov	r2, #0
   5567c:	str	r2, [r3]
   55680:	ldr	r3, [fp, #-8]
   55684:	mov	r2, #16
   55688:	str	r2, [r3, #4]
   5568c:	ldr	r3, [fp, #-8]
   55690:	add	r2, r3, #12
   55694:	ldr	r3, [fp, #-8]
   55698:	str	r2, [r3, #8]
   5569c:	nop			; (mov r0, r0)
   556a0:	add	sp, fp, #0
   556a4:	pop	{fp}		; (ldr fp, [sp], #4)
   556a8:	bx	lr
   556ac:	push	{fp, lr}
   556b0:	add	fp, sp, #4
   556b4:	sub	sp, sp, #8
   556b8:	str	r0, [fp, #-8]
   556bc:	ldr	r3, [fp, #-8]
   556c0:	ldr	r2, [r3, #8]
   556c4:	ldr	r3, [fp, #-8]
   556c8:	ldr	r3, [r3]
   556cc:	mov	r1, r3
   556d0:	mov	r0, r2
   556d4:	bl	555fc <__assert_fail@plt+0x42f10>
   556d8:	ldr	r0, [fp, #-8]
   556dc:	bl	55620 <__assert_fail@plt+0x42f34>
   556e0:	ldr	r0, [fp, #-8]
   556e4:	bl	55664 <__assert_fail@plt+0x42f78>
   556e8:	nop			; (mov r0, r0)
   556ec:	sub	sp, fp, #4
   556f0:	pop	{fp, pc}
   556f4:	push	{fp, lr}
   556f8:	add	fp, sp, #4
   556fc:	sub	sp, sp, #8
   55700:	str	r0, [fp, #-8]
   55704:	ldr	r3, [fp, #-8]
   55708:	ldr	r2, [r3, #8]
   5570c:	ldr	r3, [fp, #-8]
   55710:	ldr	r3, [r3]
   55714:	mov	r1, r3
   55718:	mov	r0, r2
   5571c:	bl	555fc <__assert_fail@plt+0x42f10>
   55720:	ldr	r0, [fp, #-8]
   55724:	bl	55620 <__assert_fail@plt+0x42f34>
   55728:	ldr	r3, [fp, #-8]
   5572c:	add	r2, r3, #12
   55730:	ldr	r3, [fp, #-8]
   55734:	str	r2, [r3, #8]
   55738:	ldr	r3, [fp, #-8]
   5573c:	mov	r2, #0
   55740:	str	r2, [r3]
   55744:	bl	43eb0 <__assert_fail@plt+0x317c4>
   55748:	mov	r2, r0
   5574c:	ldr	r3, [fp, #-8]
   55750:	str	r2, [r3, #4]
   55754:	nop			; (mov r0, r0)
   55758:	sub	sp, fp, #4
   5575c:	pop	{fp, pc}
   55760:	push	{fp}		; (str fp, [sp, #-4]!)
   55764:	add	fp, sp, #0
   55768:	sub	sp, sp, #12
   5576c:	str	r0, [fp, #-8]
   55770:	ldr	r3, [fp, #-8]
   55774:	ldr	r3, [r3, #8]
   55778:	mov	r0, r3
   5577c:	add	sp, fp, #0
   55780:	pop	{fp}		; (ldr fp, [sp], #4)
   55784:	bx	lr
   55788:	push	{fp, lr}
   5578c:	add	fp, sp, #4
   55790:	sub	sp, sp, #16
   55794:	str	r0, [fp, #-8]
   55798:	sub	r3, fp, #16
   5579c:	stm	r3, {r1, r2}
   557a0:	ldr	r0, [fp, #-8]
   557a4:	ldr	r3, [fp, #-8]
   557a8:	add	r3, r3, #12
   557ac:	mov	r2, #8
   557b0:	mov	r1, r3
   557b4:	bl	5f93c <__assert_fail@plt+0x4d250>
   557b8:	mov	r3, r0
   557bc:	eor	r3, r3, #1
   557c0:	uxtb	r3, r3
   557c4:	cmp	r3, #0
   557c8:	beq	557d8 <__assert_fail@plt+0x430ec>
   557cc:	ldr	r0, [fp, #-8]
   557d0:	bl	556f4 <__assert_fail@plt+0x43008>
   557d4:	b	5580c <__assert_fail@plt+0x43120>
   557d8:	ldr	r3, [fp, #-8]
   557dc:	ldr	r2, [r3, #8]
   557e0:	ldr	r3, [fp, #-8]
   557e4:	ldr	r3, [r3]
   557e8:	add	r0, r3, #1
   557ec:	ldr	r1, [fp, #-8]
   557f0:	str	r0, [r1]
   557f4:	lsl	r3, r3, #3
   557f8:	add	r3, r2, r3
   557fc:	mov	r2, r3
   55800:	sub	r3, fp, #16
   55804:	ldm	r3, {r0, r1}
   55808:	stm	r2, {r0, r1}
   5580c:	sub	sp, fp, #4
   55810:	pop	{fp, pc}
   55814:	push	{fp}		; (str fp, [sp, #-4]!)
   55818:	add	fp, sp, #0
   5581c:	sub	sp, sp, #20
   55820:	str	r0, [fp, #-16]
   55824:	ldr	r3, [fp, #-16]
   55828:	ldr	r2, [r3, #8]
   5582c:	ldr	r3, [fp, #-16]
   55830:	ldr	r3, [r3]
   55834:	lsl	r3, r3, #3
   55838:	add	r3, r2, r3
   5583c:	str	r3, [fp, #-8]
   55840:	ldr	r3, [fp, #-16]
   55844:	ldr	r3, [r3]
   55848:	add	r2, r3, #1
   5584c:	ldr	r3, [fp, #-16]
   55850:	str	r2, [r3]
   55854:	ldr	r3, [fp, #-8]
   55858:	mov	r0, r3
   5585c:	add	sp, fp, #0
   55860:	pop	{fp}		; (ldr fp, [sp], #4)
   55864:	bx	lr
   55868:	push	{fp, lr}
   5586c:	add	fp, sp, #4
   55870:	sub	sp, sp, #8
   55874:	str	r0, [fp, #-8]
   55878:	ldr	r0, [fp, #-8]
   5587c:	ldr	r3, [fp, #-8]
   55880:	add	r3, r3, #12
   55884:	mov	r2, #8
   55888:	mov	r1, r3
   5588c:	bl	5f93c <__assert_fail@plt+0x4d250>
   55890:	mov	r3, r0
   55894:	eor	r3, r3, #1
   55898:	uxtb	r3, r3
   5589c:	cmp	r3, #0
   558a0:	beq	558b4 <__assert_fail@plt+0x431c8>
   558a4:	ldr	r0, [fp, #-8]
   558a8:	bl	556f4 <__assert_fail@plt+0x43008>
   558ac:	mov	r3, #0
   558b0:	b	558c0 <__assert_fail@plt+0x431d4>
   558b4:	ldr	r0, [fp, #-8]
   558b8:	bl	55814 <__assert_fail@plt+0x43128>
   558bc:	mov	r3, r0
   558c0:	mov	r0, r3
   558c4:	sub	sp, fp, #4
   558c8:	pop	{fp, pc}
   558cc:	push	{fp, lr}
   558d0:	add	fp, sp, #4
   558d4:	sub	sp, sp, #16
   558d8:	str	r0, [fp, #-16]
   558dc:	str	r1, [fp, #-20]	; 0xffffffec
   558e0:	ldr	r3, [fp, #-16]
   558e4:	ldr	r2, [r3]
   558e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   558ec:	cmp	r2, r3
   558f0:	bcs	55938 <__assert_fail@plt+0x4324c>
   558f4:	ldr	r0, [fp, #-16]
   558f8:	ldr	r3, [fp, #-16]
   558fc:	add	r2, r3, #12
   55900:	mov	r3, #8
   55904:	ldr	r1, [fp, #-20]	; 0xffffffec
   55908:	bl	5fcac <__assert_fail@plt+0x4d5c0>
   5590c:	mov	r3, r0
   55910:	strb	r3, [fp, #-5]
   55914:	ldrb	r3, [fp, #-5]
   55918:	eor	r3, r3, #1
   5591c:	uxtb	r3, r3
   55920:	cmp	r3, #0
   55924:	beq	55930 <__assert_fail@plt+0x43244>
   55928:	ldr	r0, [fp, #-16]
   5592c:	bl	556f4 <__assert_fail@plt+0x43008>
   55930:	ldrb	r3, [fp, #-5]
   55934:	b	55974 <__assert_fail@plt+0x43288>
   55938:	ldr	r3, [fp, #-16]
   5593c:	ldr	r2, [r3, #8]
   55940:	ldr	r3, [fp, #-20]	; 0xffffffec
   55944:	lsl	r3, r3, #3
   55948:	add	r0, r2, r3
   5594c:	ldr	r3, [fp, #-16]
   55950:	ldr	r2, [r3]
   55954:	ldr	r3, [fp, #-20]	; 0xffffffec
   55958:	sub	r3, r2, r3
   5595c:	mov	r1, r3
   55960:	bl	555fc <__assert_fail@plt+0x42f10>
   55964:	ldr	r3, [fp, #-16]
   55968:	ldr	r2, [fp, #-20]	; 0xffffffec
   5596c:	str	r2, [r3]
   55970:	mov	r3, #1
   55974:	mov	r0, r3
   55978:	sub	sp, fp, #4
   5597c:	pop	{fp, pc}
   55980:	push	{fp}		; (str fp, [sp, #-4]!)
   55984:	add	fp, sp, #0
   55988:	sub	sp, sp, #20
   5598c:	str	r0, [fp, #-16]
   55990:	ldr	r3, [fp, #-16]
   55994:	ldr	r3, [r3]
   55998:	cmp	r3, #0
   5599c:	beq	559bc <__assert_fail@plt+0x432d0>
   559a0:	ldr	r3, [fp, #-16]
   559a4:	ldr	r3, [r3]
   559a8:	sub	r3, r3, #1
   559ac:	str	r3, [fp, #-8]
   559b0:	ldr	r3, [fp, #-16]
   559b4:	ldr	r2, [fp, #-8]
   559b8:	str	r2, [r3]
   559bc:	nop			; (mov r0, r0)
   559c0:	add	sp, fp, #0
   559c4:	pop	{fp}		; (ldr fp, [sp], #4)
   559c8:	bx	lr
   559cc:	push	{fp, lr}
   559d0:	add	fp, sp, #4
   559d4:	sub	sp, sp, #8
   559d8:	str	r0, [fp, #-8]
   559dc:	ldr	r3, [fp, #-8]
   559e0:	ldr	r2, [r3, #8]
   559e4:	ldr	r3, [fp, #-8]
   559e8:	ldr	r3, [r3]
   559ec:	mov	r1, r3
   559f0:	mov	r0, r2
   559f4:	bl	555fc <__assert_fail@plt+0x42f10>
   559f8:	ldr	r3, [fp, #-8]
   559fc:	mov	r2, #0
   55a00:	str	r2, [r3]
   55a04:	nop			; (mov r0, r0)
   55a08:	sub	sp, fp, #4
   55a0c:	pop	{fp, pc}
   55a10:	push	{fp, lr}
   55a14:	add	fp, sp, #4
   55a18:	sub	sp, sp, #16
   55a1c:	str	r0, [fp, #-16]
   55a20:	str	r1, [fp, #-20]	; 0xffffffec
   55a24:	ldr	r0, [fp, #-16]
   55a28:	ldr	r3, [fp, #-16]
   55a2c:	add	r1, r3, #12
   55a30:	sub	r3, fp, #12
   55a34:	mov	r2, #8
   55a38:	bl	5fb70 <__assert_fail@plt+0x4d484>
   55a3c:	mov	r3, r0
   55a40:	cmp	r3, #0
   55a44:	beq	55a70 <__assert_fail@plt+0x43384>
   55a48:	ldr	r0, [fp, #-16]
   55a4c:	bl	55664 <__assert_fail@plt+0x42f78>
   55a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   55a54:	cmp	r3, #0
   55a58:	beq	55a68 <__assert_fail@plt+0x4337c>
   55a5c:	ldr	r2, [fp, #-8]
   55a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   55a64:	str	r2, [r3]
   55a68:	ldr	r3, [fp, #-12]
   55a6c:	b	55a8c <__assert_fail@plt+0x433a0>
   55a70:	ldr	r0, [fp, #-16]
   55a74:	bl	556ac <__assert_fail@plt+0x42fc0>
   55a78:	bl	12404 <__errno_location@plt>
   55a7c:	mov	r2, r0
   55a80:	mov	r3, #12
   55a84:	str	r3, [r2]
   55a88:	mov	r3, #0
   55a8c:	mov	r0, r3
   55a90:	sub	sp, fp, #4
   55a94:	pop	{fp, pc}
   55a98:	push	{fp, lr}
   55a9c:	add	fp, sp, #4
   55aa0:	sub	sp, sp, #224	; 0xe0
   55aa4:	str	r0, [fp, #-200]	; 0xffffff38
   55aa8:	str	r1, [fp, #-204]	; 0xffffff34
   55aac:	str	r2, [fp, #-208]	; 0xffffff30
   55ab0:	str	r3, [fp, #-212]	; 0xffffff2c
   55ab4:	ldr	r3, [fp, #-200]	; 0xffffff38
   55ab8:	ldr	r3, [r3]
   55abc:	str	r3, [fp, #-20]	; 0xffffffec
   55ac0:	mov	r3, #0
   55ac4:	str	r3, [fp, #-52]	; 0xffffffcc
   55ac8:	mov	r3, #2
   55acc:	str	r3, [fp, #-48]	; 0xffffffd0
   55ad0:	mov	r3, #0
   55ad4:	str	r3, [fp, #-44]	; 0xffffffd4
   55ad8:	sub	r3, fp, #192	; 0xc0
   55adc:	mov	r0, r3
   55ae0:	bl	55664 <__assert_fail@plt+0x42f78>
   55ae4:	ldr	r3, [fp, #-208]	; 0xffffff30
   55ae8:	cmp	r3, #1
   55aec:	ldr	r3, [fp, #-204]	; 0xffffff34
   55af0:	ldr	r3, [r3, #100]	; 0x64
   55af4:	cmp	r3, #0
   55af8:	ldrb	r3, [fp, #4]
   55afc:	cmp	r3, #0
   55b00:	beq	55b58 <__assert_fail@plt+0x4346c>
   55b04:	sub	r3, fp, #52	; 0x34
   55b08:	str	r3, [fp, #-12]
   55b0c:	ldr	r3, [fp, #-12]
   55b10:	ldr	r3, [r3, #4]
   55b14:	mov	r2, r3
   55b18:	mov	r3, r2
   55b1c:	lsl	r3, r3, #1
   55b20:	add	r3, r3, r2
   55b24:	lsl	r3, r3, #3
   55b28:	mov	r0, r3
   55b2c:	bl	42ba8 <__assert_fail@plt+0x304bc>
   55b30:	mov	r3, r0
   55b34:	mov	r2, r3
   55b38:	ldr	r3, [fp, #-12]
   55b3c:	str	r2, [r3, #8]
   55b40:	ldr	r3, [fp, #-12]
   55b44:	ldr	r3, [r3, #8]
   55b48:	cmp	r3, #0
   55b4c:	bne	55b60 <__assert_fail@plt+0x43474>
   55b50:	mov	r3, #12
   55b54:	b	55e64 <__assert_fail@plt+0x43778>
   55b58:	mov	r3, #0
   55b5c:	str	r3, [fp, #-12]
   55b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   55b64:	ldr	r3, [r3, #72]	; 0x48
   55b68:	str	r3, [fp, #-8]
   55b6c:	sub	r3, fp, #40	; 0x28
   55b70:	mov	r2, #12
   55b74:	mov	r1, #0
   55b78:	mov	r0, r3
   55b7c:	bl	12434 <memset@plt>
   55b80:	sub	r3, fp, #192	; 0xc0
   55b84:	ldr	r1, [fp, #-208]	; 0xffffff30
   55b88:	mov	r0, r3
   55b8c:	bl	558cc <__assert_fail@plt+0x431e0>
   55b90:	mov	r3, r0
   55b94:	eor	r3, r3, #1
   55b98:	uxtb	r3, r3
   55b9c:	cmp	r3, #0
   55ba0:	beq	55bc0 <__assert_fail@plt+0x434d4>
   55ba4:	sub	r3, fp, #192	; 0xc0
   55ba8:	mov	r0, r3
   55bac:	bl	556ac <__assert_fail@plt+0x42fc0>
   55bb0:	ldr	r0, [fp, #-12]
   55bb4:	bl	55e70 <__assert_fail@plt+0x43784>
   55bb8:	mov	r3, #12
   55bbc:	b	55e64 <__assert_fail@plt+0x43778>
   55bc0:	sub	r3, fp, #192	; 0xc0
   55bc4:	mov	r0, r3
   55bc8:	bl	55760 <__assert_fail@plt+0x43074>
   55bcc:	str	r0, [fp, #-24]	; 0xffffffe8
   55bd0:	ldr	r3, [fp, #-208]	; 0xffffff30
   55bd4:	lsl	r3, r3, #3
   55bd8:	mov	r2, r3
   55bdc:	ldr	r1, [fp, #-212]	; 0xffffff2c
   55be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55be4:	bl	120f8 <memcpy@plt>
   55be8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   55bec:	ldr	r3, [r3]
   55bf0:	str	r3, [fp, #-28]	; 0xffffffe4
   55bf4:	b	55e2c <__assert_fail@plt+0x43740>
   55bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   55bfc:	ldr	r2, [fp, #-208]	; 0xffffff30
   55c00:	str	r2, [sp, #4]
   55c04:	str	r3, [sp]
   55c08:	ldr	r3, [fp, #-8]
   55c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   55c10:	ldr	r1, [fp, #-212]	; 0xffffff2c
   55c14:	ldr	r0, [fp, #-20]	; 0xffffffec
   55c18:	bl	55f30 <__assert_fail@plt+0x43844>
   55c1c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   55c20:	ldr	r2, [r3, #4]
   55c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   55c28:	cmp	r2, r3
   55c2c:	bne	55c44 <__assert_fail@plt+0x43558>
   55c30:	ldr	r3, [fp, #-204]	; 0xffffff34
   55c34:	ldr	r2, [r3, #96]	; 0x60
   55c38:	ldr	r3, [fp, #-8]
   55c3c:	cmp	r2, r3
   55c40:	beq	55c6c <__assert_fail@plt+0x43580>
   55c44:	ldr	r3, [fp, #-12]
   55c48:	cmp	r3, #0
   55c4c:	beq	55d40 <__assert_fail@plt+0x43654>
   55c50:	sub	r3, fp, #40	; 0x28
   55c54:	ldr	r1, [fp, #-8]
   55c58:	mov	r0, r3
   55c5c:	bl	481a4 <__assert_fail@plt+0x35ab8>
   55c60:	mov	r3, r0
   55c64:	cmp	r3, #0
   55c68:	beq	55d40 <__assert_fail@plt+0x43654>
   55c6c:	mvn	r3, #0
   55c70:	str	r3, [fp, #-8]
   55c74:	ldr	r3, [fp, #-12]
   55c78:	cmp	r3, #0
   55c7c:	beq	55d0c <__assert_fail@plt+0x43620>
   55c80:	mov	r3, #0
   55c84:	str	r3, [fp, #-16]
   55c88:	b	55cfc <__assert_fail@plt+0x43610>
   55c8c:	ldr	r3, [fp, #-16]
   55c90:	lsl	r3, r3, #3
   55c94:	ldr	r2, [fp, #-212]	; 0xffffff2c
   55c98:	add	r3, r2, r3
   55c9c:	ldr	r3, [r3]
   55ca0:	cmp	r3, #0
   55ca4:	blt	55cf0 <__assert_fail@plt+0x43604>
   55ca8:	ldr	r3, [fp, #-16]
   55cac:	lsl	r3, r3, #3
   55cb0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   55cb4:	add	r3, r2, r3
   55cb8:	ldr	r3, [r3, #4]
   55cbc:	cmn	r3, #1
   55cc0:	bne	55cf0 <__assert_fail@plt+0x43604>
   55cc4:	ldr	r2, [fp, #-208]	; 0xffffff30
   55cc8:	sub	r1, fp, #28
   55ccc:	sub	r3, fp, #40	; 0x28
   55cd0:	str	r3, [sp, #4]
   55cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55cd8:	str	r3, [sp]
   55cdc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   55ce0:	ldr	r0, [fp, #-12]
   55ce4:	bl	5542c <__assert_fail@plt+0x42d40>
   55ce8:	str	r0, [fp, #-8]
   55cec:	b	55d0c <__assert_fail@plt+0x43620>
   55cf0:	ldr	r3, [fp, #-16]
   55cf4:	add	r3, r3, #1
   55cf8:	str	r3, [fp, #-16]
   55cfc:	ldr	r2, [fp, #-16]
   55d00:	ldr	r3, [fp, #-208]	; 0xffffff30
   55d04:	cmp	r2, r3
   55d08:	bcc	55c8c <__assert_fail@plt+0x435a0>
   55d0c:	ldr	r3, [fp, #-8]
   55d10:	cmp	r3, #0
   55d14:	bge	55d40 <__assert_fail@plt+0x43654>
   55d18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55d1c:	mov	r0, r3
   55d20:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55d24:	sub	r3, fp, #192	; 0xc0
   55d28:	mov	r0, r3
   55d2c:	bl	556ac <__assert_fail@plt+0x42fc0>
   55d30:	ldr	r0, [fp, #-12]
   55d34:	bl	55e70 <__assert_fail@plt+0x43784>
   55d38:	mov	r3, r0
   55d3c:	b	55e64 <__assert_fail@plt+0x43778>
   55d40:	ldr	r1, [fp, #-208]	; 0xffffff30
   55d44:	ldr	r3, [fp, #-12]
   55d48:	str	r3, [sp, #12]
   55d4c:	sub	r3, fp, #40	; 0x28
   55d50:	str	r3, [sp, #8]
   55d54:	ldr	r3, [fp, #-8]
   55d58:	str	r3, [sp, #4]
   55d5c:	sub	r3, fp, #28
   55d60:	str	r3, [sp]
   55d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55d68:	ldr	r2, [fp, #-212]	; 0xffffff2c
   55d6c:	ldr	r0, [fp, #-204]	; 0xffffff34
   55d70:	bl	54c80 <__assert_fail@plt+0x42594>
   55d74:	str	r0, [fp, #-8]
   55d78:	ldr	r3, [fp, #-8]
   55d7c:	lsr	r3, r3, #31
   55d80:	uxtb	r3, r3
   55d84:	cmp	r3, #0
   55d88:	beq	55e2c <__assert_fail@plt+0x43740>
   55d8c:	ldr	r3, [fp, #-8]
   55d90:	cmn	r3, #2
   55d94:	moveq	r3, #1
   55d98:	movne	r3, #0
   55d9c:	uxtb	r3, r3
   55da0:	cmp	r3, #0
   55da4:	beq	55dd0 <__assert_fail@plt+0x436e4>
   55da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55dac:	mov	r0, r3
   55db0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55db4:	sub	r3, fp, #192	; 0xc0
   55db8:	mov	r0, r3
   55dbc:	bl	556ac <__assert_fail@plt+0x42fc0>
   55dc0:	ldr	r0, [fp, #-12]
   55dc4:	bl	55e70 <__assert_fail@plt+0x43784>
   55dc8:	mov	r3, #12
   55dcc:	b	55e64 <__assert_fail@plt+0x43778>
   55dd0:	ldr	r2, [fp, #-208]	; 0xffffff30
   55dd4:	sub	r1, fp, #28
   55dd8:	sub	r3, fp, #40	; 0x28
   55ddc:	str	r3, [sp, #4]
   55de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55de4:	str	r3, [sp]
   55de8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   55dec:	ldr	r0, [fp, #-12]
   55df0:	bl	5542c <__assert_fail@plt+0x42d40>
   55df4:	str	r0, [fp, #-8]
   55df8:	ldr	r3, [fp, #-8]
   55dfc:	cmp	r3, #0
   55e00:	bge	55e2c <__assert_fail@plt+0x43740>
   55e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e08:	mov	r0, r3
   55e0c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55e10:	sub	r3, fp, #192	; 0xc0
   55e14:	mov	r0, r3
   55e18:	bl	556ac <__assert_fail@plt+0x42fc0>
   55e1c:	ldr	r0, [fp, #-12]
   55e20:	bl	55e70 <__assert_fail@plt+0x43784>
   55e24:	mov	r3, #1
   55e28:	b	55e64 <__assert_fail@plt+0x43778>
   55e2c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   55e30:	ldr	r2, [r3, #4]
   55e34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   55e38:	cmp	r2, r3
   55e3c:	bge	55bf8 <__assert_fail@plt+0x4350c>
   55e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e44:	mov	r0, r3
   55e48:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55e4c:	sub	r3, fp, #192	; 0xc0
   55e50:	mov	r0, r3
   55e54:	bl	556ac <__assert_fail@plt+0x42fc0>
   55e58:	ldr	r0, [fp, #-12]
   55e5c:	bl	55e70 <__assert_fail@plt+0x43784>
   55e60:	mov	r3, r0
   55e64:	mov	r0, r3
   55e68:	sub	sp, fp, #4
   55e6c:	pop	{fp, pc}
   55e70:	push	{fp, lr}
   55e74:	add	fp, sp, #4
   55e78:	sub	sp, sp, #16
   55e7c:	str	r0, [fp, #-16]
   55e80:	ldr	r3, [fp, #-16]
   55e84:	cmp	r3, #0
   55e88:	beq	55f20 <__assert_fail@plt+0x43834>
   55e8c:	mov	r3, #0
   55e90:	str	r3, [fp, #-8]
   55e94:	b	55efc <__assert_fail@plt+0x43810>
   55e98:	ldr	r3, [fp, #-16]
   55e9c:	ldr	r1, [r3, #8]
   55ea0:	ldr	r2, [fp, #-8]
   55ea4:	mov	r3, r2
   55ea8:	lsl	r3, r3, #1
   55eac:	add	r3, r3, r2
   55eb0:	lsl	r3, r3, #3
   55eb4:	add	r3, r1, r3
   55eb8:	ldr	r3, [r3, #20]
   55ebc:	mov	r0, r3
   55ec0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55ec4:	ldr	r3, [fp, #-16]
   55ec8:	ldr	r1, [r3, #8]
   55ecc:	ldr	r2, [fp, #-8]
   55ed0:	mov	r3, r2
   55ed4:	lsl	r3, r3, #1
   55ed8:	add	r3, r3, r2
   55edc:	lsl	r3, r3, #3
   55ee0:	add	r3, r1, r3
   55ee4:	ldr	r3, [r3, #8]
   55ee8:	mov	r0, r3
   55eec:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55ef0:	ldr	r3, [fp, #-8]
   55ef4:	add	r3, r3, #1
   55ef8:	str	r3, [fp, #-8]
   55efc:	ldr	r3, [fp, #-16]
   55f00:	ldr	r2, [r3]
   55f04:	ldr	r3, [fp, #-8]
   55f08:	cmp	r2, r3
   55f0c:	bgt	55e98 <__assert_fail@plt+0x437ac>
   55f10:	ldr	r3, [fp, #-16]
   55f14:	ldr	r3, [r3, #8]
   55f18:	mov	r0, r3
   55f1c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   55f20:	mov	r3, #0
   55f24:	mov	r0, r3
   55f28:	sub	sp, fp, #4
   55f2c:	pop	{fp, pc}
   55f30:	push	{fp, lr}
   55f34:	add	fp, sp, #4
   55f38:	sub	sp, sp, #32
   55f3c:	str	r0, [fp, #-24]	; 0xffffffe8
   55f40:	str	r1, [fp, #-28]	; 0xffffffe4
   55f44:	str	r2, [fp, #-32]	; 0xffffffe0
   55f48:	str	r3, [fp, #-36]	; 0xffffffdc
   55f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55f50:	ldr	r2, [r3]
   55f54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   55f58:	lsl	r3, r3, #3
   55f5c:	add	r3, r2, r3
   55f60:	ldrb	r3, [r3, #4]
   55f64:	str	r3, [fp, #-8]
   55f68:	ldr	r3, [fp, #-8]
   55f6c:	cmp	r3, #8
   55f70:	bne	55fd8 <__assert_fail@plt+0x438ec>
   55f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55f78:	ldr	r2, [r3]
   55f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   55f80:	lsl	r3, r3, #3
   55f84:	add	r3, r2, r3
   55f88:	ldr	r3, [r3]
   55f8c:	add	r3, r3, #1
   55f90:	str	r3, [fp, #-12]
   55f94:	ldr	r2, [fp, #-12]
   55f98:	ldr	r3, [fp, #8]
   55f9c:	cmp	r2, r3
   55fa0:	bge	560e0 <__assert_fail@plt+0x439f4>
   55fa4:	ldr	r3, [fp, #-12]
   55fa8:	lsl	r3, r3, #3
   55fac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   55fb0:	add	r3, r2, r3
   55fb4:	ldr	r2, [fp, #4]
   55fb8:	str	r2, [r3]
   55fbc:	ldr	r3, [fp, #-12]
   55fc0:	lsl	r3, r3, #3
   55fc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   55fc8:	add	r3, r2, r3
   55fcc:	mvn	r2, #0
   55fd0:	str	r2, [r3, #4]
   55fd4:	b	560e0 <__assert_fail@plt+0x439f4>
   55fd8:	ldr	r3, [fp, #-8]
   55fdc:	cmp	r3, #9
   55fe0:	bne	560e0 <__assert_fail@plt+0x439f4>
   55fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55fe8:	ldr	r2, [r3]
   55fec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   55ff0:	lsl	r3, r3, #3
   55ff4:	add	r3, r2, r3
   55ff8:	ldr	r3, [r3]
   55ffc:	add	r3, r3, #1
   56000:	str	r3, [fp, #-16]
   56004:	ldr	r2, [fp, #-16]
   56008:	ldr	r3, [fp, #8]
   5600c:	cmp	r2, r3
   56010:	bge	560e0 <__assert_fail@plt+0x439f4>
   56014:	ldr	r3, [fp, #-16]
   56018:	lsl	r3, r3, #3
   5601c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56020:	add	r3, r2, r3
   56024:	ldr	r2, [r3]
   56028:	ldr	r3, [fp, #4]
   5602c:	cmp	r2, r3
   56030:	bge	56068 <__assert_fail@plt+0x4397c>
   56034:	ldr	r3, [fp, #-16]
   56038:	lsl	r3, r3, #3
   5603c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56040:	add	r3, r2, r3
   56044:	ldr	r2, [fp, #4]
   56048:	str	r2, [r3, #4]
   5604c:	ldr	r3, [fp, #8]
   56050:	lsl	r3, r3, #3
   56054:	mov	r2, r3
   56058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5605c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56060:	bl	120f8 <memcpy@plt>
   56064:	b	560e0 <__assert_fail@plt+0x439f4>
   56068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5606c:	ldr	r2, [r3]
   56070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56074:	lsl	r3, r3, #3
   56078:	add	r3, r2, r3
   5607c:	ldrb	r3, [r3, #6]
   56080:	and	r3, r3, #8
   56084:	uxtb	r3, r3
   56088:	cmp	r3, #0
   5608c:	beq	560c8 <__assert_fail@plt+0x439dc>
   56090:	ldr	r3, [fp, #-16]
   56094:	lsl	r3, r3, #3
   56098:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5609c:	add	r3, r2, r3
   560a0:	ldr	r3, [r3]
   560a4:	cmn	r3, #1
   560a8:	beq	560c8 <__assert_fail@plt+0x439dc>
   560ac:	ldr	r3, [fp, #8]
   560b0:	lsl	r3, r3, #3
   560b4:	mov	r2, r3
   560b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   560bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   560c0:	bl	120f8 <memcpy@plt>
   560c4:	b	560e0 <__assert_fail@plt+0x439f4>
   560c8:	ldr	r3, [fp, #-16]
   560cc:	lsl	r3, r3, #3
   560d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   560d4:	add	r3, r2, r3
   560d8:	ldr	r2, [fp, #4]
   560dc:	str	r2, [r3, #4]
   560e0:	nop			; (mov r0, r0)
   560e4:	sub	sp, fp, #4
   560e8:	pop	{fp, pc}
   560ec:	push	{fp, lr}
   560f0:	add	fp, sp, #4
   560f4:	sub	sp, sp, #32
   560f8:	str	r0, [fp, #-32]	; 0xffffffe0
   560fc:	str	r1, [fp, #-36]	; 0xffffffdc
   56100:	mov	r3, #0
   56104:	str	r3, [fp, #-12]
   56108:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5610c:	ldr	r3, [r3, #12]
   56110:	str	r3, [fp, #-16]
   56114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56118:	ldr	r3, [r3, #100]	; 0x64
   5611c:	cmp	r3, #0
   56120:	beq	56144 <__assert_fail@plt+0x43a58>
   56124:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56128:	ldr	r2, [r3, #100]	; 0x64
   5612c:	ldr	r3, [fp, #-16]
   56130:	lsl	r3, r3, #2
   56134:	add	r3, r2, r3
   56138:	ldr	r3, [r3]
   5613c:	cmp	r3, #0
   56140:	bne	56144 <__assert_fail@plt+0x43a58>
   56144:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56148:	ldr	r2, [r3, #8]
   5614c:	sub	r3, fp, #28
   56150:	mov	r1, r2
   56154:	mov	r0, r3
   56158:	bl	46e84 <__assert_fail@plt+0x34798>
   5615c:	str	r0, [fp, #-8]
   56160:	ldr	r3, [fp, #-8]
   56164:	cmp	r3, #0
   56168:	movne	r3, #1
   5616c:	moveq	r3, #0
   56170:	uxtb	r3, r3
   56174:	cmp	r3, #0
   56178:	beq	56184 <__assert_fail@plt+0x43a98>
   5617c:	ldr	r3, [fp, #-8]
   56180:	b	5630c <__assert_fail@plt+0x43c20>
   56184:	sub	r3, fp, #28
   56188:	ldr	r2, [fp, #-16]
   5618c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56190:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56194:	bl	5682c <__assert_fail@plt+0x44140>
   56198:	str	r0, [fp, #-8]
   5619c:	ldr	r3, [fp, #-8]
   561a0:	cmp	r3, #0
   561a4:	movne	r3, #1
   561a8:	moveq	r3, #0
   561ac:	uxtb	r3, r3
   561b0:	cmp	r3, #0
   561b4:	bne	562e8 <__assert_fail@plt+0x43bfc>
   561b8:	b	562d0 <__assert_fail@plt+0x43be4>
   561bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   561c0:	ldr	r2, [r3]
   561c4:	ldr	r3, [fp, #-16]
   561c8:	lsl	r3, r3, #2
   561cc:	add	r3, r2, r3
   561d0:	ldr	r3, [r3]
   561d4:	cmp	r3, #0
   561d8:	bne	561e8 <__assert_fail@plt+0x43afc>
   561dc:	ldr	r3, [fp, #-12]
   561e0:	add	r3, r3, #1
   561e4:	b	561ec <__assert_fail@plt+0x43b00>
   561e8:	mov	r3, #0
   561ec:	str	r3, [fp, #-12]
   561f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   561f4:	ldr	r2, [r3, #120]	; 0x78
   561f8:	ldr	r3, [fp, #-12]
   561fc:	cmp	r2, r3
   56200:	bge	56234 <__assert_fail@plt+0x43b48>
   56204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56208:	ldr	r0, [r3]
   5620c:	ldr	r3, [fp, #-16]
   56210:	lsl	r3, r3, #2
   56214:	mov	r2, r3
   56218:	mov	r1, #0
   5621c:	bl	12434 <memset@plt>
   56220:	ldr	r3, [fp, #-20]	; 0xffffffec
   56224:	mov	r0, r3
   56228:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5622c:	mov	r3, #0
   56230:	b	5630c <__assert_fail@plt+0x43c20>
   56234:	mov	r3, #0
   56238:	str	r3, [fp, #-24]	; 0xffffffe8
   5623c:	ldr	r3, [fp, #-16]
   56240:	sub	r3, r3, #1
   56244:	str	r3, [fp, #-16]
   56248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5624c:	ldr	r2, [r3, #100]	; 0x64
   56250:	ldr	r3, [fp, #-16]
   56254:	lsl	r3, r3, #2
   56258:	add	r3, r2, r3
   5625c:	ldr	r3, [r3]
   56260:	cmp	r3, #0
   56264:	beq	5629c <__assert_fail@plt+0x43bb0>
   56268:	sub	r3, fp, #28
   5626c:	ldr	r2, [fp, #-16]
   56270:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56278:	bl	56318 <__assert_fail@plt+0x43c2c>
   5627c:	str	r0, [fp, #-8]
   56280:	ldr	r3, [fp, #-8]
   56284:	cmp	r3, #0
   56288:	movne	r3, #1
   5628c:	moveq	r3, #0
   56290:	uxtb	r3, r3
   56294:	cmp	r3, #0
   56298:	bne	562f0 <__assert_fail@plt+0x43c04>
   5629c:	sub	r3, fp, #28
   562a0:	ldr	r2, [fp, #-16]
   562a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   562a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   562ac:	bl	5682c <__assert_fail@plt+0x44140>
   562b0:	str	r0, [fp, #-8]
   562b4:	ldr	r3, [fp, #-8]
   562b8:	cmp	r3, #0
   562bc:	movne	r3, #1
   562c0:	moveq	r3, #0
   562c4:	uxtb	r3, r3
   562c8:	cmp	r3, #0
   562cc:	bne	562f8 <__assert_fail@plt+0x43c0c>
   562d0:	ldr	r3, [fp, #-16]
   562d4:	cmp	r3, #0
   562d8:	bgt	561bc <__assert_fail@plt+0x43ad0>
   562dc:	mov	r3, #0
   562e0:	str	r3, [fp, #-8]
   562e4:	b	562fc <__assert_fail@plt+0x43c10>
   562e8:	nop			; (mov r0, r0)
   562ec:	b	562fc <__assert_fail@plt+0x43c10>
   562f0:	nop			; (mov r0, r0)
   562f4:	b	562fc <__assert_fail@plt+0x43c10>
   562f8:	nop			; (mov r0, r0)
   562fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   56300:	mov	r0, r3
   56304:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   56308:	ldr	r3, [fp, #-8]
   5630c:	mov	r0, r3
   56310:	sub	sp, fp, #4
   56314:	pop	{fp, pc}
   56318:	push	{fp, lr}
   5631c:	add	fp, sp, #4
   56320:	sub	sp, sp, #56	; 0x38
   56324:	str	r0, [fp, #-40]	; 0xffffffd8
   56328:	str	r1, [fp, #-44]	; 0xffffffd4
   5632c:	str	r2, [fp, #-48]	; 0xffffffd0
   56330:	str	r3, [fp, #-52]	; 0xffffffcc
   56334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56338:	ldr	r3, [r3, #84]	; 0x54
   5633c:	str	r3, [fp, #-16]
   56340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56344:	ldr	r2, [r3, #100]	; 0x64
   56348:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5634c:	lsl	r3, r3, #2
   56350:	add	r3, r2, r3
   56354:	ldr	r3, [r3]
   56358:	add	r3, r3, #16
   5635c:	str	r3, [fp, #-20]	; 0xffffffec
   56360:	mov	r3, #0
   56364:	str	r3, [fp, #-8]
   56368:	b	5656c <__assert_fail@plt+0x43e80>
   5636c:	ldr	r3, [fp, #-20]	; 0xffffffec
   56370:	ldr	r2, [r3, #8]
   56374:	ldr	r3, [fp, #-8]
   56378:	lsl	r3, r3, #2
   5637c:	add	r3, r2, r3
   56380:	ldr	r3, [r3]
   56384:	str	r3, [fp, #-24]	; 0xffffffe8
   56388:	mov	r3, #0
   5638c:	str	r3, [fp, #-12]
   56390:	ldr	r3, [fp, #-16]
   56394:	ldr	r2, [r3]
   56398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5639c:	lsl	r3, r3, #3
   563a0:	add	r3, r2, r3
   563a4:	ldrb	r3, [r3, #4]
   563a8:	and	r3, r3, #8
   563ac:	cmp	r3, #0
   563b0:	ldr	r3, [fp, #-16]
   563b4:	ldr	r2, [r3]
   563b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   563bc:	lsl	r3, r3, #3
   563c0:	add	r3, r2, r3
   563c4:	ldrb	r3, [r3, #6]
   563c8:	and	r3, r3, #16
   563cc:	uxtb	r3, r3
   563d0:	cmp	r3, #0
   563d4:	beq	563fc <__assert_fail@plt+0x43d10>
   563d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   563dc:	ldr	r3, [r3, #12]
   563e0:	str	r3, [sp]
   563e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   563e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   563ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   563f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   563f4:	bl	57cdc <__assert_fail@plt+0x455f0>
   563f8:	str	r0, [fp, #-12]
   563fc:	ldr	r3, [fp, #-12]
   56400:	cmp	r3, #0
   56404:	bne	564b0 <__assert_fail@plt+0x43dc4>
   56408:	ldr	r3, [fp, #-16]
   5640c:	ldr	r2, [r3]
   56410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56414:	lsl	r3, r3, #3
   56418:	add	r3, r2, r3
   5641c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   56420:	mov	r1, r3
   56424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56428:	bl	5c340 <__assert_fail@plt+0x49c54>
   5642c:	mov	r3, r0
   56430:	cmp	r3, #0
   56434:	beq	564b0 <__assert_fail@plt+0x43dc4>
   56438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5643c:	ldr	r2, [r3]
   56440:	ldr	r3, [fp, #-48]	; 0xffffffd0
   56444:	add	r3, r3, #1
   56448:	lsl	r3, r3, #2
   5644c:	add	r3, r2, r3
   56450:	ldr	r3, [r3]
   56454:	cmp	r3, #0
   56458:	beq	564b0 <__assert_fail@plt+0x43dc4>
   5645c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   56460:	ldr	r2, [r3]
   56464:	ldr	r3, [fp, #-48]	; 0xffffffd0
   56468:	add	r3, r3, #1
   5646c:	lsl	r3, r3, #2
   56470:	add	r3, r2, r3
   56474:	ldr	r3, [r3]
   56478:	add	r0, r3, #4
   5647c:	ldr	r3, [fp, #-16]
   56480:	ldr	r2, [r3, #12]
   56484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56488:	lsl	r3, r3, #2
   5648c:	add	r3, r2, r3
   56490:	ldr	r3, [r3]
   56494:	mov	r1, r3
   56498:	bl	481a4 <__assert_fail@plt+0x35ab8>
   5649c:	mov	r3, r0
   564a0:	cmp	r3, #0
   564a4:	beq	564b0 <__assert_fail@plt+0x43dc4>
   564a8:	mov	r3, #1
   564ac:	str	r3, [fp, #-12]
   564b0:	ldr	r3, [fp, #-12]
   564b4:	cmp	r3, #0
   564b8:	beq	56554 <__assert_fail@plt+0x43e68>
   564bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   564c0:	ldr	r3, [r3, #20]
   564c4:	cmp	r3, #0
   564c8:	beq	56524 <__assert_fail@plt+0x43e38>
   564cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   564d0:	ldr	r3, [fp, #-12]
   564d4:	add	r3, r2, r3
   564d8:	str	r3, [fp, #-28]	; 0xffffffe4
   564dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   564e0:	add	r1, r3, #16
   564e4:	ldr	r3, [fp, #-16]
   564e8:	ldr	r2, [r3, #12]
   564ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   564f0:	lsl	r3, r3, #2
   564f4:	add	r3, r2, r3
   564f8:	ldr	r2, [r3]
   564fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   56500:	str	r3, [sp, #4]
   56504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56508:	str	r3, [sp]
   5650c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56510:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56514:	bl	56eb8 <__assert_fail@plt+0x447cc>
   56518:	mov	r3, r0
   5651c:	cmp	r3, #0
   56520:	bne	5655c <__assert_fail@plt+0x43e70>
   56524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   56528:	ldr	r0, [fp, #-52]	; 0xffffffcc
   5652c:	bl	47d94 <__assert_fail@plt+0x356a8>
   56530:	mov	r3, r0
   56534:	strb	r3, [fp, #-29]	; 0xffffffe3
   56538:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   5653c:	eor	r3, r3, #1
   56540:	uxtb	r3, r3
   56544:	cmp	r3, #0
   56548:	beq	56560 <__assert_fail@plt+0x43e74>
   5654c:	mov	r3, #12
   56550:	b	56584 <__assert_fail@plt+0x43e98>
   56554:	nop			; (mov r0, r0)
   56558:	b	56560 <__assert_fail@plt+0x43e74>
   5655c:	nop			; (mov r0, r0)
   56560:	ldr	r3, [fp, #-8]
   56564:	add	r3, r3, #1
   56568:	str	r3, [fp, #-8]
   5656c:	ldr	r3, [fp, #-20]	; 0xffffffec
   56570:	ldr	r2, [r3, #4]
   56574:	ldr	r3, [fp, #-8]
   56578:	cmp	r2, r3
   5657c:	bgt	5636c <__assert_fail@plt+0x43c80>
   56580:	mov	r3, #0
   56584:	mov	r0, r3
   56588:	sub	sp, fp, #4
   5658c:	pop	{fp, pc}
   56590:	push	{fp, lr}
   56594:	add	fp, sp, #4
   56598:	sub	sp, sp, #16
   5659c:	str	r0, [fp, #-16]
   565a0:	str	r1, [fp, #-20]	; 0xffffffec
   565a4:	ldr	r3, [fp, #-16]
   565a8:	ldr	r3, [r3, #104]	; 0x68
   565ac:	str	r3, [fp, #-8]
   565b0:	ldr	r3, [fp, #-16]
   565b4:	ldr	r2, [r3, #36]	; 0x24
   565b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   565bc:	cmp	r2, r3
   565c0:	bgt	565dc <__assert_fail@plt+0x43ef0>
   565c4:	ldr	r3, [fp, #-16]
   565c8:	ldr	r2, [r3, #36]	; 0x24
   565cc:	ldr	r3, [fp, #-16]
   565d0:	ldr	r3, [r3, #48]	; 0x30
   565d4:	cmp	r2, r3
   565d8:	blt	56608 <__assert_fail@plt+0x43f1c>
   565dc:	ldr	r3, [fp, #-16]
   565e0:	ldr	r2, [r3, #28]
   565e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   565e8:	cmp	r2, r3
   565ec:	bgt	56644 <__assert_fail@plt+0x43f58>
   565f0:	ldr	r3, [fp, #-16]
   565f4:	ldr	r2, [r3, #28]
   565f8:	ldr	r3, [fp, #-16]
   565fc:	ldr	r3, [r3, #48]	; 0x30
   56600:	cmp	r2, r3
   56604:	bge	56644 <__assert_fail@plt+0x43f58>
   56608:	ldr	r3, [fp, #-20]	; 0xffffffec
   5660c:	add	r3, r3, #1
   56610:	mov	r1, r3
   56614:	ldr	r0, [fp, #-16]
   56618:	bl	5c594 <__assert_fail@plt+0x49ea8>
   5661c:	str	r0, [fp, #-12]
   56620:	ldr	r3, [fp, #-12]
   56624:	cmp	r3, #0
   56628:	movne	r3, #1
   5662c:	moveq	r3, #0
   56630:	uxtb	r3, r3
   56634:	cmp	r3, #0
   56638:	beq	56644 <__assert_fail@plt+0x43f58>
   5663c:	ldr	r3, [fp, #-12]
   56640:	b	566a4 <__assert_fail@plt+0x43fb8>
   56644:	ldr	r2, [fp, #-8]
   56648:	ldr	r3, [fp, #-20]	; 0xffffffec
   5664c:	cmp	r2, r3
   56650:	bge	566a0 <__assert_fail@plt+0x43fb4>
   56654:	ldr	r3, [fp, #-16]
   56658:	ldr	r3, [r3, #100]	; 0x64
   5665c:	cmp	r3, #0
   56660:	ldr	r3, [fp, #-16]
   56664:	ldr	r2, [r3, #100]	; 0x64
   56668:	ldr	r3, [fp, #-8]
   5666c:	add	r3, r3, #1
   56670:	lsl	r3, r3, #2
   56674:	add	r0, r2, r3
   56678:	ldr	r2, [fp, #-20]	; 0xffffffec
   5667c:	ldr	r3, [fp, #-8]
   56680:	sub	r3, r2, r3
   56684:	lsl	r3, r3, #2
   56688:	mov	r2, r3
   5668c:	mov	r1, #0
   56690:	bl	12434 <memset@plt>
   56694:	ldr	r3, [fp, #-16]
   56698:	ldr	r2, [fp, #-20]	; 0xffffffec
   5669c:	str	r2, [r3, #104]	; 0x68
   566a0:	mov	r3, #0
   566a4:	mov	r0, r3
   566a8:	sub	sp, fp, #4
   566ac:	pop	{fp, pc}
   566b0:	push	{r4, fp, lr}
   566b4:	add	fp, sp, #8
   566b8:	sub	sp, sp, #44	; 0x2c
   566bc:	str	r0, [fp, #-40]	; 0xffffffd8
   566c0:	str	r1, [fp, #-44]	; 0xffffffd4
   566c4:	str	r2, [fp, #-48]	; 0xffffffd0
   566c8:	str	r3, [fp, #-52]	; 0xffffffcc
   566cc:	mov	r3, #0
   566d0:	str	r3, [fp, #-16]
   566d4:	b	5680c <__assert_fail@plt+0x44120>
   566d8:	ldr	r3, [fp, #-16]
   566dc:	lsl	r3, r3, #2
   566e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   566e4:	add	r3, r2, r3
   566e8:	ldr	r3, [r3]
   566ec:	cmp	r3, #0
   566f0:	bne	56720 <__assert_fail@plt+0x44034>
   566f4:	ldr	r3, [fp, #-16]
   566f8:	lsl	r3, r3, #2
   566fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   56700:	add	r3, r2, r3
   56704:	ldr	r2, [fp, #-16]
   56708:	lsl	r2, r2, #2
   5670c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   56710:	add	r2, r1, r2
   56714:	ldr	r2, [r2]
   56718:	str	r2, [r3]
   5671c:	b	56800 <__assert_fail@plt+0x44114>
   56720:	ldr	r3, [fp, #-16]
   56724:	lsl	r3, r3, #2
   56728:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5672c:	add	r3, r2, r3
   56730:	ldr	r3, [r3]
   56734:	cmp	r3, #0
   56738:	beq	56800 <__assert_fail@plt+0x44114>
   5673c:	ldr	r3, [fp, #-16]
   56740:	lsl	r3, r3, #2
   56744:	ldr	r2, [fp, #-44]	; 0xffffffd4
   56748:	add	r3, r2, r3
   5674c:	ldr	r3, [r3]
   56750:	add	r1, r3, #4
   56754:	ldr	r3, [fp, #-16]
   56758:	lsl	r3, r3, #2
   5675c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   56760:	add	r3, r2, r3
   56764:	ldr	r3, [r3]
   56768:	add	r2, r3, #4
   5676c:	sub	r3, fp, #32
   56770:	mov	r0, r3
   56774:	bl	475c4 <__assert_fail@plt+0x34ed8>
   56778:	mov	r3, r0
   5677c:	str	r3, [fp, #-20]	; 0xffffffec
   56780:	ldr	r3, [fp, #-20]	; 0xffffffec
   56784:	cmp	r3, #0
   56788:	movne	r3, #1
   5678c:	moveq	r3, #0
   56790:	uxtb	r3, r3
   56794:	cmp	r3, #0
   56798:	beq	567a4 <__assert_fail@plt+0x440b8>
   5679c:	ldr	r3, [fp, #-20]	; 0xffffffec
   567a0:	b	56820 <__assert_fail@plt+0x44134>
   567a4:	ldr	r3, [fp, #-16]
   567a8:	lsl	r3, r3, #2
   567ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   567b0:	add	r4, r2, r3
   567b4:	sub	r2, fp, #32
   567b8:	sub	r3, fp, #20
   567bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   567c0:	mov	r0, r3
   567c4:	bl	487d0 <__assert_fail@plt+0x360e4>
   567c8:	mov	r3, r0
   567cc:	str	r3, [r4]
   567d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   567d4:	mov	r0, r3
   567d8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   567dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   567e0:	cmp	r3, #0
   567e4:	movne	r3, #1
   567e8:	moveq	r3, #0
   567ec:	uxtb	r3, r3
   567f0:	cmp	r3, #0
   567f4:	beq	56800 <__assert_fail@plt+0x44114>
   567f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   567fc:	b	56820 <__assert_fail@plt+0x44134>
   56800:	ldr	r3, [fp, #-16]
   56804:	add	r3, r3, #1
   56808:	str	r3, [fp, #-16]
   5680c:	ldr	r2, [fp, #-16]
   56810:	ldr	r3, [fp, #-52]	; 0xffffffcc
   56814:	cmp	r2, r3
   56818:	blt	566d8 <__assert_fail@plt+0x43fec>
   5681c:	mov	r3, #0
   56820:	mov	r0, r3
   56824:	sub	sp, fp, #8
   56828:	pop	{r4, fp, pc}
   5682c:	push	{r4, fp, lr}
   56830:	add	fp, sp, #8
   56834:	sub	sp, sp, #44	; 0x2c
   56838:	str	r0, [fp, #-32]	; 0xffffffe0
   5683c:	str	r1, [fp, #-36]	; 0xffffffdc
   56840:	str	r2, [fp, #-40]	; 0xffffffd8
   56844:	str	r3, [fp, #-44]	; 0xffffffd4
   56848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5684c:	ldr	r3, [r3, #84]	; 0x54
   56850:	str	r3, [fp, #-16]
   56854:	mov	r3, #0
   56858:	str	r3, [fp, #-24]	; 0xffffffe8
   5685c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56860:	ldr	r2, [r3, #100]	; 0x64
   56864:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56868:	lsl	r3, r3, #2
   5686c:	add	r3, r2, r3
   56870:	ldr	r3, [r3]
   56874:	cmp	r3, #0
   56878:	beq	5689c <__assert_fail@plt+0x441b0>
   5687c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56880:	ldr	r2, [r3, #100]	; 0x64
   56884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56888:	lsl	r3, r3, #2
   5688c:	add	r3, r2, r3
   56890:	ldr	r3, [r3]
   56894:	add	r3, r3, #4
   56898:	b	568a0 <__assert_fail@plt+0x441b4>
   5689c:	mov	r3, #0
   568a0:	str	r3, [fp, #-20]	; 0xffffffec
   568a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   568a8:	ldr	r3, [r3, #4]
   568ac:	cmp	r3, #0
   568b0:	bne	568d4 <__assert_fail@plt+0x441e8>
   568b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   568b8:	ldr	r2, [r3]
   568bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   568c0:	lsl	r3, r3, #2
   568c4:	add	r3, r2, r3
   568c8:	mov	r2, #0
   568cc:	str	r2, [r3]
   568d0:	b	569dc <__assert_fail@plt+0x442f0>
   568d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   568d8:	cmp	r3, #0
   568dc:	beq	56988 <__assert_fail@plt+0x4429c>
   568e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   568e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   568e8:	ldr	r0, [fp, #-16]
   568ec:	bl	56a64 <__assert_fail@plt+0x44378>
   568f0:	mov	r3, r0
   568f4:	str	r3, [fp, #-24]	; 0xffffffe8
   568f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   568fc:	cmp	r3, #0
   56900:	movne	r3, #1
   56904:	moveq	r3, #0
   56908:	uxtb	r3, r3
   5690c:	cmp	r3, #0
   56910:	beq	5691c <__assert_fail@plt+0x44230>
   56914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56918:	b	56a58 <__assert_fail@plt+0x4436c>
   5691c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56920:	ldr	r3, [r3, #20]
   56924:	cmp	r3, #0
   56928:	beq	56988 <__assert_fail@plt+0x4429c>
   5692c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56930:	add	r1, r3, #16
   56934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56938:	ldr	r3, [r3, #116]	; 0x74
   5693c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   56940:	str	r2, [sp, #4]
   56944:	str	r3, [sp]
   56948:	mov	r3, r1
   5694c:	ldr	r2, [fp, #-20]	; 0xffffffec
   56950:	ldr	r1, [fp, #-44]	; 0xffffffd4
   56954:	ldr	r0, [fp, #-16]
   56958:	bl	57424 <__assert_fail@plt+0x44d38>
   5695c:	mov	r3, r0
   56960:	str	r3, [fp, #-24]	; 0xffffffe8
   56964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56968:	cmp	r3, #0
   5696c:	movne	r3, #1
   56970:	moveq	r3, #0
   56974:	uxtb	r3, r3
   56978:	cmp	r3, #0
   5697c:	beq	56988 <__assert_fail@plt+0x4429c>
   56980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56984:	b	56a58 <__assert_fail@plt+0x4436c>
   56988:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5698c:	ldr	r2, [r3]
   56990:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56994:	lsl	r3, r3, #2
   56998:	add	r4, r2, r3
   5699c:	sub	r3, fp, #24
   569a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   569a4:	ldr	r1, [fp, #-16]
   569a8:	mov	r0, r3
   569ac:	bl	487d0 <__assert_fail@plt+0x360e4>
   569b0:	mov	r3, r0
   569b4:	str	r3, [r4]
   569b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   569bc:	cmp	r3, #0
   569c0:	movne	r3, #1
   569c4:	moveq	r3, #0
   569c8:	uxtb	r3, r3
   569cc:	cmp	r3, #0
   569d0:	beq	569dc <__assert_fail@plt+0x442f0>
   569d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   569d8:	b	56a58 <__assert_fail@plt+0x4436c>
   569dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   569e0:	cmp	r3, #0
   569e4:	beq	56a54 <__assert_fail@plt+0x44368>
   569e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   569ec:	ldr	r2, [r3, #100]	; 0x64
   569f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   569f4:	lsl	r3, r3, #2
   569f8:	add	r3, r2, r3
   569fc:	ldr	r3, [r3]
   56a00:	ldrb	r3, [r3, #52]	; 0x34
   56a04:	and	r3, r3, #64	; 0x40
   56a08:	uxtb	r3, r3
   56a0c:	cmp	r3, #0
   56a10:	beq	56a54 <__assert_fail@plt+0x44368>
   56a14:	ldr	r3, [fp, #-20]	; 0xffffffec
   56a18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   56a1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56a24:	bl	5783c <__assert_fail@plt+0x45150>
   56a28:	mov	r3, r0
   56a2c:	str	r3, [fp, #-24]	; 0xffffffe8
   56a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56a34:	cmp	r3, #0
   56a38:	movne	r3, #1
   56a3c:	moveq	r3, #0
   56a40:	uxtb	r3, r3
   56a44:	cmp	r3, #0
   56a48:	beq	56a54 <__assert_fail@plt+0x44368>
   56a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56a50:	b	56a58 <__assert_fail@plt+0x4436c>
   56a54:	mov	r3, #0
   56a58:	mov	r0, r3
   56a5c:	sub	sp, fp, #8
   56a60:	pop	{r4, fp, pc}
   56a64:	push	{fp, lr}
   56a68:	add	fp, sp, #4
   56a6c:	sub	sp, sp, #32
   56a70:	str	r0, [fp, #-24]	; 0xffffffe8
   56a74:	str	r1, [fp, #-28]	; 0xffffffe4
   56a78:	str	r2, [fp, #-32]	; 0xffffffe0
   56a7c:	mov	r3, #0
   56a80:	str	r3, [fp, #-16]
   56a84:	sub	r3, fp, #16
   56a88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   56a90:	mov	r0, r3
   56a94:	bl	487d0 <__assert_fail@plt+0x360e4>
   56a98:	str	r0, [fp, #-12]
   56a9c:	ldr	r3, [fp, #-16]
   56aa0:	cmp	r3, #0
   56aa4:	movne	r3, #1
   56aa8:	moveq	r3, #0
   56aac:	uxtb	r3, r3
   56ab0:	cmp	r3, #0
   56ab4:	beq	56ac0 <__assert_fail@plt+0x443d4>
   56ab8:	ldr	r3, [fp, #-16]
   56abc:	b	56bd4 <__assert_fail@plt+0x444e8>
   56ac0:	ldr	r3, [fp, #-12]
   56ac4:	ldr	r3, [r3, #28]
   56ac8:	cmp	r3, #0
   56acc:	bne	56bb8 <__assert_fail@plt+0x444cc>
   56ad0:	ldr	r3, [fp, #-12]
   56ad4:	add	r2, r3, #28
   56ad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56adc:	ldr	r3, [r3, #4]
   56ae0:	mov	r1, r3
   56ae4:	mov	r0, r2
   56ae8:	bl	46e00 <__assert_fail@plt+0x34714>
   56aec:	mov	r3, r0
   56af0:	str	r3, [fp, #-16]
   56af4:	ldr	r3, [fp, #-16]
   56af8:	cmp	r3, #0
   56afc:	movne	r3, #1
   56b00:	moveq	r3, #0
   56b04:	uxtb	r3, r3
   56b08:	cmp	r3, #0
   56b0c:	beq	56b18 <__assert_fail@plt+0x4442c>
   56b10:	mov	r3, #12
   56b14:	b	56bd4 <__assert_fail@plt+0x444e8>
   56b18:	mov	r3, #0
   56b1c:	str	r3, [fp, #-8]
   56b20:	b	56ba4 <__assert_fail@plt+0x444b8>
   56b24:	ldr	r3, [fp, #-12]
   56b28:	add	r0, r3, #28
   56b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56b30:	ldr	r2, [r3, #28]
   56b34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56b38:	ldr	r1, [r3, #8]
   56b3c:	ldr	r3, [fp, #-8]
   56b40:	lsl	r3, r3, #2
   56b44:	add	r3, r1, r3
   56b48:	ldr	r3, [r3]
   56b4c:	mov	r1, r3
   56b50:	mov	r3, r1
   56b54:	lsl	r3, r3, #1
   56b58:	add	r3, r3, r1
   56b5c:	lsl	r3, r3, #2
   56b60:	add	r3, r2, r3
   56b64:	mov	r1, r3
   56b68:	bl	47940 <__assert_fail@plt+0x35254>
   56b6c:	mov	r3, r0
   56b70:	str	r3, [fp, #-16]
   56b74:	ldr	r3, [fp, #-16]
   56b78:	cmp	r3, #0
   56b7c:	movne	r3, #1
   56b80:	moveq	r3, #0
   56b84:	uxtb	r3, r3
   56b88:	cmp	r3, #0
   56b8c:	beq	56b98 <__assert_fail@plt+0x444ac>
   56b90:	mov	r3, #12
   56b94:	b	56bd4 <__assert_fail@plt+0x444e8>
   56b98:	ldr	r3, [fp, #-8]
   56b9c:	add	r3, r3, #1
   56ba0:	str	r3, [fp, #-8]
   56ba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56ba8:	ldr	r2, [r3, #4]
   56bac:	ldr	r3, [fp, #-8]
   56bb0:	cmp	r2, r3
   56bb4:	bgt	56b24 <__assert_fail@plt+0x44438>
   56bb8:	ldr	r3, [fp, #-12]
   56bbc:	add	r3, r3, #28
   56bc0:	mov	r2, r3
   56bc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   56bc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   56bcc:	bl	4712c <__assert_fail@plt+0x34a40>
   56bd0:	mov	r3, r0
   56bd4:	mov	r0, r3
   56bd8:	sub	sp, fp, #4
   56bdc:	pop	{fp, pc}
   56be0:	push	{fp, lr}
   56be4:	add	fp, sp, #4
   56be8:	sub	sp, sp, #64	; 0x40
   56bec:	str	r0, [fp, #-56]	; 0xffffffc8
   56bf0:	str	r1, [fp, #-60]	; 0xffffffc4
   56bf4:	str	r2, [fp, #-64]	; 0xffffffc0
   56bf8:	str	r3, [fp, #-68]	; 0xffffffbc
   56bfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   56c00:	ldr	r1, [r3, #28]
   56c04:	ldr	r2, [fp, #-60]	; 0xffffffc4
   56c08:	mov	r3, r2
   56c0c:	lsl	r3, r3, #1
   56c10:	add	r3, r3, r2
   56c14:	lsl	r3, r3, #2
   56c18:	add	r3, r1, r3
   56c1c:	str	r3, [fp, #-12]
   56c20:	sub	r3, fp, #48	; 0x30
   56c24:	mov	r2, #12
   56c28:	mov	r1, #0
   56c2c:	mov	r0, r3
   56c30:	bl	12434 <memset@plt>
   56c34:	mov	r3, #0
   56c38:	str	r3, [fp, #-8]
   56c3c:	b	56e00 <__assert_fail@plt+0x44714>
   56c40:	ldr	r3, [fp, #-12]
   56c44:	ldr	r2, [r3, #8]
   56c48:	ldr	r3, [fp, #-8]
   56c4c:	lsl	r3, r3, #2
   56c50:	add	r3, r2, r3
   56c54:	ldr	r3, [r3]
   56c58:	str	r3, [fp, #-16]
   56c5c:	ldr	r2, [fp, #-16]
   56c60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   56c64:	cmp	r2, r3
   56c68:	beq	56df0 <__assert_fail@plt+0x44704>
   56c6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   56c70:	ldr	r2, [r3]
   56c74:	ldr	r3, [fp, #-16]
   56c78:	lsl	r3, r3, #3
   56c7c:	add	r3, r2, r3
   56c80:	ldrb	r3, [r3, #4]
   56c84:	and	r3, r3, #8
   56c88:	cmp	r3, #0
   56c8c:	beq	56df4 <__assert_fail@plt+0x44708>
   56c90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   56c94:	ldr	r1, [r3, #20]
   56c98:	ldr	r2, [fp, #-16]
   56c9c:	mov	r3, r2
   56ca0:	lsl	r3, r3, #1
   56ca4:	add	r3, r3, r2
   56ca8:	lsl	r3, r3, #2
   56cac:	add	r3, r1, r3
   56cb0:	ldr	r3, [r3, #8]
   56cb4:	ldr	r3, [r3]
   56cb8:	str	r3, [fp, #-20]	; 0xffffffec
   56cbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   56cc0:	ldr	r1, [r3, #20]
   56cc4:	ldr	r2, [fp, #-16]
   56cc8:	mov	r3, r2
   56ccc:	lsl	r3, r3, #1
   56cd0:	add	r3, r3, r2
   56cd4:	lsl	r3, r3, #2
   56cd8:	add	r3, r1, r3
   56cdc:	ldr	r3, [r3, #4]
   56ce0:	cmp	r3, #1
   56ce4:	ble	56d18 <__assert_fail@plt+0x4462c>
   56ce8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   56cec:	ldr	r1, [r3, #20]
   56cf0:	ldr	r2, [fp, #-16]
   56cf4:	mov	r3, r2
   56cf8:	lsl	r3, r3, #1
   56cfc:	add	r3, r3, r2
   56d00:	lsl	r3, r3, #2
   56d04:	add	r3, r1, r3
   56d08:	ldr	r3, [r3, #8]
   56d0c:	add	r3, r3, #4
   56d10:	ldr	r3, [r3]
   56d14:	b	56d1c <__assert_fail@plt+0x44630>
   56d18:	mvn	r3, #0
   56d1c:	str	r3, [fp, #-24]	; 0xffffffe8
   56d20:	ldr	r1, [fp, #-20]	; 0xffffffec
   56d24:	ldr	r0, [fp, #-12]
   56d28:	bl	481a4 <__assert_fail@plt+0x35ab8>
   56d2c:	mov	r3, r0
   56d30:	cmp	r3, #0
   56d34:	bne	56d50 <__assert_fail@plt+0x44664>
   56d38:	ldr	r1, [fp, #-20]	; 0xffffffec
   56d3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   56d40:	bl	481a4 <__assert_fail@plt+0x35ab8>
   56d44:	mov	r3, r0
   56d48:	cmp	r3, #0
   56d4c:	bne	56d8c <__assert_fail@plt+0x446a0>
   56d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56d54:	cmp	r3, #0
   56d58:	ble	56df4 <__assert_fail@plt+0x44708>
   56d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   56d60:	ldr	r0, [fp, #-12]
   56d64:	bl	481a4 <__assert_fail@plt+0x35ab8>
   56d68:	mov	r3, r0
   56d6c:	cmp	r3, #0
   56d70:	bne	56df4 <__assert_fail@plt+0x44708>
   56d74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   56d78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   56d7c:	bl	481a4 <__assert_fail@plt+0x35ab8>
   56d80:	mov	r3, r0
   56d84:	cmp	r3, #0
   56d88:	beq	56df4 <__assert_fail@plt+0x44708>
   56d8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   56d90:	ldr	r1, [r3, #28]
   56d94:	ldr	r2, [fp, #-16]
   56d98:	mov	r3, r2
   56d9c:	lsl	r3, r3, #1
   56da0:	add	r3, r3, r2
   56da4:	lsl	r3, r3, #2
   56da8:	add	r2, r1, r3
   56dac:	sub	r3, fp, #48	; 0x30
   56db0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   56db4:	mov	r0, r3
   56db8:	bl	4712c <__assert_fail@plt+0x34a40>
   56dbc:	str	r0, [fp, #-28]	; 0xffffffe4
   56dc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56dc4:	cmp	r3, #0
   56dc8:	movne	r3, #1
   56dcc:	moveq	r3, #0
   56dd0:	uxtb	r3, r3
   56dd4:	cmp	r3, #0
   56dd8:	beq	56df4 <__assert_fail@plt+0x44708>
   56ddc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56de0:	mov	r0, r3
   56de4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   56de8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56dec:	b	56eac <__assert_fail@plt+0x447c0>
   56df0:	nop			; (mov r0, r0)
   56df4:	ldr	r3, [fp, #-8]
   56df8:	add	r3, r3, #1
   56dfc:	str	r3, [fp, #-8]
   56e00:	ldr	r3, [fp, #-12]
   56e04:	ldr	r2, [r3, #4]
   56e08:	ldr	r3, [fp, #-8]
   56e0c:	cmp	r2, r3
   56e10:	bgt	56c40 <__assert_fail@plt+0x44554>
   56e14:	mov	r3, #0
   56e18:	str	r3, [fp, #-8]
   56e1c:	b	56e88 <__assert_fail@plt+0x4479c>
   56e20:	ldr	r3, [fp, #-12]
   56e24:	ldr	r2, [r3, #8]
   56e28:	ldr	r3, [fp, #-8]
   56e2c:	lsl	r3, r3, #2
   56e30:	add	r3, r2, r3
   56e34:	ldr	r3, [r3]
   56e38:	str	r3, [fp, #-32]	; 0xffffffe0
   56e3c:	sub	r3, fp, #48	; 0x30
   56e40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   56e44:	mov	r0, r3
   56e48:	bl	481a4 <__assert_fail@plt+0x35ab8>
   56e4c:	mov	r3, r0
   56e50:	cmp	r3, #0
   56e54:	bne	56e7c <__assert_fail@plt+0x44790>
   56e58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   56e5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   56e60:	bl	481a4 <__assert_fail@plt+0x35ab8>
   56e64:	mov	r3, r0
   56e68:	sub	r3, r3, #1
   56e6c:	str	r3, [fp, #-36]	; 0xffffffdc
   56e70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56e74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   56e78:	bl	48290 <__assert_fail@plt+0x35ba4>
   56e7c:	ldr	r3, [fp, #-8]
   56e80:	add	r3, r3, #1
   56e84:	str	r3, [fp, #-8]
   56e88:	ldr	r3, [fp, #-12]
   56e8c:	ldr	r2, [r3, #4]
   56e90:	ldr	r3, [fp, #-8]
   56e94:	cmp	r2, r3
   56e98:	bgt	56e20 <__assert_fail@plt+0x44734>
   56e9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56ea0:	mov	r0, r3
   56ea4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   56ea8:	mov	r3, #0
   56eac:	mov	r0, r3
   56eb0:	sub	sp, fp, #4
   56eb4:	pop	{fp, pc}
   56eb8:	push	{fp, lr}
   56ebc:	add	fp, sp, #4
   56ec0:	sub	sp, sp, #56	; 0x38
   56ec4:	str	r0, [fp, #-40]	; 0xffffffd8
   56ec8:	str	r1, [fp, #-44]	; 0xffffffd4
   56ecc:	str	r2, [fp, #-48]	; 0xffffffd0
   56ed0:	str	r3, [fp, #-52]	; 0xffffffcc
   56ed4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56ed8:	ldr	r3, [r3, #84]	; 0x54
   56edc:	str	r3, [fp, #-12]
   56ee0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   56ee4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56ee8:	bl	5cd1c <__assert_fail@plt+0x4a630>
   56eec:	str	r0, [fp, #-16]
   56ef0:	ldr	r1, [fp, #8]
   56ef4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56ef8:	bl	5cd1c <__assert_fail@plt+0x4a630>
   56efc:	str	r0, [fp, #-20]	; 0xffffffec
   56f00:	mov	r3, #0
   56f04:	str	r3, [fp, #-8]
   56f08:	b	57008 <__assert_fail@plt+0x4491c>
   56f0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56f10:	ldr	r2, [r3, #116]	; 0x74
   56f14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   56f18:	ldr	r1, [r3, #8]
   56f1c:	ldr	r3, [fp, #-8]
   56f20:	lsl	r3, r3, #2
   56f24:	add	r3, r1, r3
   56f28:	ldr	r3, [r3]
   56f2c:	mov	r1, r3
   56f30:	mov	r3, r1
   56f34:	lsl	r3, r3, #1
   56f38:	add	r3, r3, r1
   56f3c:	lsl	r3, r3, #3
   56f40:	add	r3, r2, r3
   56f44:	str	r3, [fp, #-24]	; 0xffffffe8
   56f48:	ldr	r3, [fp, #-12]
   56f4c:	ldr	r2, [r3]
   56f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56f54:	ldr	r3, [r3]
   56f58:	lsl	r3, r3, #3
   56f5c:	add	r3, r2, r3
   56f60:	ldr	r3, [r3]
   56f64:	str	r3, [fp, #-28]	; 0xffffffe4
   56f68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   56f6c:	ldr	r2, [r3, #8]
   56f70:	ldr	r3, [fp, #-8]
   56f74:	lsl	r3, r3, #2
   56f78:	add	r3, r2, r3
   56f7c:	ldr	r1, [r3]
   56f80:	ldr	r3, [fp, #-16]
   56f84:	str	r3, [sp, #4]
   56f88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   56f8c:	str	r3, [sp]
   56f90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   56f94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56f98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56f9c:	bl	57320 <__assert_fail@plt+0x44c34>
   56fa0:	str	r0, [fp, #-32]	; 0xffffffe0
   56fa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   56fa8:	ldr	r2, [r3, #8]
   56fac:	ldr	r3, [fp, #-8]
   56fb0:	lsl	r3, r3, #2
   56fb4:	add	r3, r2, r3
   56fb8:	ldr	r1, [r3]
   56fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   56fc0:	str	r3, [sp, #4]
   56fc4:	ldr	r3, [fp, #8]
   56fc8:	str	r3, [sp]
   56fcc:	ldr	r3, [fp, #4]
   56fd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56fd8:	bl	57320 <__assert_fail@plt+0x44c34>
   56fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   56fe0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   56fe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56fe8:	cmp	r2, r3
   56fec:	bne	57000 <__assert_fail@plt+0x44914>
   56ff0:	ldr	r3, [fp, #-8]
   56ff4:	add	r3, r3, #1
   56ff8:	str	r3, [fp, #-8]
   56ffc:	b	57008 <__assert_fail@plt+0x4491c>
   57000:	mov	r3, #1
   57004:	b	57020 <__assert_fail@plt+0x44934>
   57008:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5700c:	ldr	r2, [r3, #4]
   57010:	ldr	r3, [fp, #-8]
   57014:	cmp	r2, r3
   57018:	bgt	56f0c <__assert_fail@plt+0x44820>
   5701c:	mov	r3, #0
   57020:	mov	r0, r3
   57024:	sub	sp, fp, #4
   57028:	pop	{fp, pc}
   5702c:	push	{fp, lr}
   57030:	add	fp, sp, #4
   57034:	sub	sp, sp, #56	; 0x38
   57038:	str	r0, [fp, #-40]	; 0xffffffd8
   5703c:	str	r1, [fp, #-44]	; 0xffffffd4
   57040:	str	r2, [fp, #-48]	; 0xffffffd0
   57044:	str	r3, [fp, #-52]	; 0xffffffcc
   57048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5704c:	ldr	r3, [r3, #84]	; 0x54
   57050:	str	r3, [fp, #-16]
   57054:	ldr	r3, [fp, #-16]
   57058:	ldr	r1, [r3, #24]
   5705c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   57060:	mov	r3, r2
   57064:	lsl	r3, r3, #1
   57068:	add	r3, r3, r2
   5706c:	lsl	r3, r3, #2
   57070:	add	r3, r1, r3
   57074:	str	r3, [fp, #-20]	; 0xffffffec
   57078:	mov	r3, #0
   5707c:	str	r3, [fp, #-8]
   57080:	b	572e8 <__assert_fail@plt+0x44bfc>
   57084:	ldr	r3, [fp, #-20]	; 0xffffffec
   57088:	ldr	r2, [r3, #8]
   5708c:	ldr	r3, [fp, #-8]
   57090:	lsl	r3, r3, #2
   57094:	add	r3, r2, r3
   57098:	ldr	r3, [r3]
   5709c:	str	r3, [fp, #-24]	; 0xffffffe8
   570a0:	ldr	r3, [fp, #-16]
   570a4:	ldr	r2, [r3]
   570a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   570ac:	lsl	r3, r3, #3
   570b0:	add	r3, r2, r3
   570b4:	ldrb	r3, [r3, #4]
   570b8:	cmp	r3, #8
   570bc:	beq	57250 <__assert_fail@plt+0x44b64>
   570c0:	cmp	r3, #9
   570c4:	beq	5728c <__assert_fail@plt+0x44ba0>
   570c8:	cmp	r3, #4
   570cc:	beq	570d4 <__assert_fail@plt+0x449e8>
   570d0:	b	572dc <__assert_fail@plt+0x44bf0>
   570d4:	ldr	r3, [fp, #4]
   570d8:	cmn	r3, #1
   570dc:	beq	572c8 <__assert_fail@plt+0x44bdc>
   570e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   570e4:	ldr	r1, [r3, #116]	; 0x74
   570e8:	ldr	r2, [fp, #4]
   570ec:	mov	r3, r2
   570f0:	lsl	r3, r3, #1
   570f4:	add	r3, r3, r2
   570f8:	lsl	r3, r3, #3
   570fc:	add	r3, r1, r3
   57100:	str	r3, [fp, #-12]
   57104:	ldr	r3, [fp, #-12]
   57108:	ldr	r2, [r3]
   5710c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57110:	cmp	r2, r3
   57114:	bne	57228 <__assert_fail@plt+0x44b3c>
   57118:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5711c:	cmp	r3, #31
   57120:	bgt	57140 <__assert_fail@plt+0x44a54>
   57124:	ldr	r3, [fp, #-12]
   57128:	ldr	r2, [r3, #16]
   5712c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57130:	lsr	r3, r2, r3
   57134:	and	r3, r3, #1
   57138:	cmp	r3, #0
   5713c:	beq	57230 <__assert_fail@plt+0x44b44>
   57140:	ldr	r3, [fp, #-16]
   57144:	ldr	r1, [r3, #20]
   57148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5714c:	mov	r3, r2
   57150:	lsl	r3, r3, #1
   57154:	add	r3, r3, r2
   57158:	lsl	r3, r3, #2
   5715c:	add	r3, r1, r3
   57160:	ldr	r3, [r3, #8]
   57164:	ldr	r3, [r3]
   57168:	str	r3, [fp, #-28]	; 0xffffffe4
   5716c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57170:	ldr	r3, [fp, #-52]	; 0xffffffcc
   57174:	cmp	r2, r3
   57178:	bne	5719c <__assert_fail@plt+0x44ab0>
   5717c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57180:	and	r3, r3, #1
   57184:	cmp	r3, #0
   57188:	beq	57194 <__assert_fail@plt+0x44aa8>
   5718c:	mvn	r3, #0
   57190:	b	57314 <__assert_fail@plt+0x44c28>
   57194:	mov	r3, #0
   57198:	b	57314 <__assert_fail@plt+0x44c28>
   5719c:	ldr	r3, [fp, #4]
   571a0:	str	r3, [sp]
   571a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   571a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   571ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   571b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   571b4:	bl	5702c <__assert_fail@plt+0x44940>
   571b8:	str	r0, [fp, #-32]	; 0xffffffe0
   571bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   571c0:	cmn	r3, #1
   571c4:	bne	571d0 <__assert_fail@plt+0x44ae4>
   571c8:	mvn	r3, #0
   571cc:	b	57314 <__assert_fail@plt+0x44c28>
   571d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   571d4:	cmp	r3, #0
   571d8:	bne	571f4 <__assert_fail@plt+0x44b08>
   571dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   571e0:	and	r3, r3, #2
   571e4:	cmp	r3, #0
   571e8:	beq	571f4 <__assert_fail@plt+0x44b08>
   571ec:	mov	r3, #0
   571f0:	b	57314 <__assert_fail@plt+0x44c28>
   571f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   571f8:	cmp	r3, #31
   571fc:	bgt	57234 <__assert_fail@plt+0x44b48>
   57200:	ldr	r3, [fp, #-12]
   57204:	ldr	r2, [r3, #16]
   57208:	mov	r1, #1
   5720c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57210:	lsl	r3, r1, r3
   57214:	mvn	r3, r3
   57218:	and	r2, r2, r3
   5721c:	ldr	r3, [fp, #-12]
   57220:	str	r2, [r3, #16]
   57224:	b	57234 <__assert_fail@plt+0x44b48>
   57228:	nop			; (mov r0, r0)
   5722c:	b	57234 <__assert_fail@plt+0x44b48>
   57230:	nop			; (mov r0, r0)
   57234:	ldr	r3, [fp, #-12]
   57238:	add	r2, r3, #24
   5723c:	str	r2, [fp, #-12]
   57240:	ldrb	r3, [r3, #20]
   57244:	cmp	r3, #0
   57248:	bne	57104 <__assert_fail@plt+0x44a18>
   5724c:	b	572c8 <__assert_fail@plt+0x44bdc>
   57250:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57254:	and	r3, r3, #1
   57258:	cmp	r3, #0
   5725c:	beq	572d0 <__assert_fail@plt+0x44be4>
   57260:	ldr	r3, [fp, #-16]
   57264:	ldr	r2, [r3]
   57268:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5726c:	lsl	r3, r3, #3
   57270:	add	r3, r2, r3
   57274:	ldr	r2, [r3]
   57278:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5727c:	cmp	r2, r3
   57280:	bne	572d0 <__assert_fail@plt+0x44be4>
   57284:	mvn	r3, #0
   57288:	b	57314 <__assert_fail@plt+0x44c28>
   5728c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57290:	and	r3, r3, #2
   57294:	cmp	r3, #0
   57298:	beq	572d8 <__assert_fail@plt+0x44bec>
   5729c:	ldr	r3, [fp, #-16]
   572a0:	ldr	r2, [r3]
   572a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   572a8:	lsl	r3, r3, #3
   572ac:	add	r3, r2, r3
   572b0:	ldr	r2, [r3]
   572b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   572b8:	cmp	r2, r3
   572bc:	bne	572d8 <__assert_fail@plt+0x44bec>
   572c0:	mov	r3, #0
   572c4:	b	57314 <__assert_fail@plt+0x44c28>
   572c8:	nop			; (mov r0, r0)
   572cc:	b	572dc <__assert_fail@plt+0x44bf0>
   572d0:	nop			; (mov r0, r0)
   572d4:	b	572dc <__assert_fail@plt+0x44bf0>
   572d8:	nop			; (mov r0, r0)
   572dc:	ldr	r3, [fp, #-8]
   572e0:	add	r3, r3, #1
   572e4:	str	r3, [fp, #-8]
   572e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   572ec:	ldr	r2, [r3, #4]
   572f0:	ldr	r3, [fp, #-8]
   572f4:	cmp	r2, r3
   572f8:	bgt	57084 <__assert_fail@plt+0x44998>
   572fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57300:	and	r3, r3, #2
   57304:	cmp	r3, #0
   57308:	movne	r3, #1
   5730c:	moveq	r3, #0
   57310:	uxtb	r3, r3
   57314:	mov	r0, r3
   57318:	sub	sp, fp, #4
   5731c:	pop	{fp, pc}
   57320:	push	{fp, lr}
   57324:	add	fp, sp, #4
   57328:	sub	sp, sp, #32
   5732c:	str	r0, [fp, #-16]
   57330:	str	r1, [fp, #-20]	; 0xffffffec
   57334:	str	r2, [fp, #-24]	; 0xffffffe8
   57338:	str	r3, [fp, #-28]	; 0xffffffe4
   5733c:	ldr	r3, [fp, #-16]
   57340:	ldr	r1, [r3, #116]	; 0x74
   57344:	ldr	r2, [fp, #-20]	; 0xffffffec
   57348:	mov	r3, r2
   5734c:	lsl	r3, r3, #1
   57350:	add	r3, r3, r2
   57354:	lsl	r3, r3, #3
   57358:	add	r3, r1, r3
   5735c:	str	r3, [fp, #-8]
   57360:	ldr	r3, [fp, #-8]
   57364:	ldr	r2, [r3, #8]
   57368:	ldr	r3, [fp, #4]
   5736c:	cmp	r2, r3
   57370:	ble	5737c <__assert_fail@plt+0x44c90>
   57374:	mvn	r3, #0
   57378:	b	57418 <__assert_fail@plt+0x44d2c>
   5737c:	ldr	r3, [fp, #-8]
   57380:	ldr	r2, [r3, #12]
   57384:	ldr	r3, [fp, #4]
   57388:	cmp	r2, r3
   5738c:	bge	57398 <__assert_fail@plt+0x44cac>
   57390:	mov	r3, #1
   57394:	b	57418 <__assert_fail@plt+0x44d2c>
   57398:	ldr	r3, [fp, #-8]
   5739c:	ldr	r2, [r3, #8]
   573a0:	ldr	r3, [fp, #4]
   573a4:	cmp	r2, r3
   573a8:	moveq	r3, #1
   573ac:	movne	r3, #0
   573b0:	uxtb	r3, r3
   573b4:	str	r3, [fp, #-12]
   573b8:	ldr	r3, [fp, #-8]
   573bc:	ldr	r2, [r3, #12]
   573c0:	ldr	r3, [fp, #4]
   573c4:	cmp	r2, r3
   573c8:	bne	573d4 <__assert_fail@plt+0x44ce8>
   573cc:	mov	r3, #2
   573d0:	b	573d8 <__assert_fail@plt+0x44cec>
   573d4:	mov	r3, #0
   573d8:	ldr	r2, [fp, #-12]
   573dc:	orr	r3, r2, r3
   573e0:	str	r3, [fp, #-12]
   573e4:	ldr	r3, [fp, #-12]
   573e8:	cmp	r3, #0
   573ec:	bne	573f8 <__assert_fail@plt+0x44d0c>
   573f0:	mov	r3, #0
   573f4:	b	57418 <__assert_fail@plt+0x44d2c>
   573f8:	ldr	r3, [fp, #8]
   573fc:	str	r3, [sp]
   57400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57404:	ldr	r2, [fp, #-24]	; 0xffffffe8
   57408:	ldr	r1, [fp, #-12]
   5740c:	ldr	r0, [fp, #-16]
   57410:	bl	5702c <__assert_fail@plt+0x44940>
   57414:	mov	r3, r0
   57418:	mov	r0, r3
   5741c:	sub	sp, fp, #4
   57420:	pop	{fp, pc}
   57424:	push	{fp, lr}
   57428:	add	fp, sp, #4
   5742c:	sub	sp, sp, #64	; 0x40
   57430:	str	r0, [fp, #-56]	; 0xffffffc8
   57434:	str	r1, [fp, #-60]	; 0xffffffc4
   57438:	str	r2, [fp, #-64]	; 0xffffffc0
   5743c:	str	r3, [fp, #-68]	; 0xffffffbc
   57440:	mov	r3, #0
   57444:	str	r3, [fp, #-12]
   57448:	b	57818 <__assert_fail@plt+0x4512c>
   5744c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   57450:	ldr	r2, [r3, #8]
   57454:	ldr	r3, [fp, #-12]
   57458:	lsl	r3, r3, #2
   5745c:	add	r3, r2, r3
   57460:	ldr	r3, [r3]
   57464:	mov	r2, r3
   57468:	mov	r3, r2
   5746c:	lsl	r3, r3, #1
   57470:	add	r3, r3, r2
   57474:	lsl	r3, r3, #3
   57478:	mov	r2, r3
   5747c:	ldr	r3, [fp, #4]
   57480:	add	r3, r3, r2
   57484:	str	r3, [fp, #-24]	; 0xffffffe8
   57488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5748c:	ldr	r2, [r3, #8]
   57490:	ldr	r3, [fp, #8]
   57494:	cmp	r2, r3
   57498:	bge	57808 <__assert_fail@plt+0x4511c>
   5749c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   574a0:	ldr	r2, [r3, #4]
   574a4:	ldr	r3, [fp, #8]
   574a8:	cmp	r2, r3
   574ac:	blt	57808 <__assert_fail@plt+0x4511c>
   574b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   574b4:	ldr	r2, [r3]
   574b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   574bc:	ldr	r3, [r3]
   574c0:	lsl	r3, r3, #3
   574c4:	add	r3, r2, r3
   574c8:	ldr	r3, [r3]
   574cc:	str	r3, [fp, #-28]	; 0xffffffe4
   574d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   574d4:	ldr	r2, [r3, #12]
   574d8:	ldr	r3, [fp, #8]
   574dc:	cmp	r2, r3
   574e0:	bne	57724 <__assert_fail@plt+0x45038>
   574e4:	mvn	r3, #0
   574e8:	str	r3, [fp, #-16]
   574ec:	mvn	r3, #0
   574f0:	str	r3, [fp, #-20]	; 0xffffffec
   574f4:	mov	r3, #0
   574f8:	str	r3, [fp, #-8]
   574fc:	b	575b8 <__assert_fail@plt+0x44ecc>
   57500:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57504:	ldr	r2, [r3, #8]
   57508:	ldr	r3, [fp, #-8]
   5750c:	lsl	r3, r3, #2
   57510:	add	r3, r2, r3
   57514:	ldr	r3, [r3]
   57518:	str	r3, [fp, #-44]	; 0xffffffd4
   5751c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57520:	ldr	r2, [r3]
   57524:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57528:	lsl	r3, r3, #3
   5752c:	add	r3, r2, r3
   57530:	ldrb	r3, [r3, #4]
   57534:	str	r3, [fp, #-48]	; 0xffffffd0
   57538:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5753c:	cmp	r3, #8
   57540:	bne	57574 <__assert_fail@plt+0x44e88>
   57544:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57548:	ldr	r2, [r3]
   5754c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57550:	lsl	r3, r3, #3
   57554:	add	r3, r2, r3
   57558:	ldr	r2, [r3]
   5755c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57560:	cmp	r2, r3
   57564:	bne	57574 <__assert_fail@plt+0x44e88>
   57568:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5756c:	str	r3, [fp, #-16]
   57570:	b	575ac <__assert_fail@plt+0x44ec0>
   57574:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57578:	cmp	r3, #9
   5757c:	bne	575ac <__assert_fail@plt+0x44ec0>
   57580:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57584:	ldr	r2, [r3]
   57588:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5758c:	lsl	r3, r3, #3
   57590:	add	r3, r2, r3
   57594:	ldr	r2, [r3]
   57598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5759c:	cmp	r2, r3
   575a0:	bne	575ac <__assert_fail@plt+0x44ec0>
   575a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   575a8:	str	r3, [fp, #-20]	; 0xffffffec
   575ac:	ldr	r3, [fp, #-8]
   575b0:	add	r3, r3, #1
   575b4:	str	r3, [fp, #-8]
   575b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   575bc:	ldr	r2, [r3, #4]
   575c0:	ldr	r3, [fp, #-8]
   575c4:	cmp	r2, r3
   575c8:	bgt	57500 <__assert_fail@plt+0x44e14>
   575cc:	ldr	r3, [fp, #-16]
   575d0:	cmp	r3, #0
   575d4:	blt	57614 <__assert_fail@plt+0x44f28>
   575d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   575dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   575e0:	ldr	r1, [fp, #-16]
   575e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   575e8:	bl	56be0 <__assert_fail@plt+0x444f4>
   575ec:	str	r0, [fp, #-40]	; 0xffffffd8
   575f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   575f4:	cmp	r3, #0
   575f8:	movne	r3, #1
   575fc:	moveq	r3, #0
   57600:	uxtb	r3, r3
   57604:	cmp	r3, #0
   57608:	beq	57614 <__assert_fail@plt+0x44f28>
   5760c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57610:	b	57830 <__assert_fail@plt+0x45144>
   57614:	ldr	r3, [fp, #-20]	; 0xffffffec
   57618:	cmp	r3, #0
   5761c:	blt	5780c <__assert_fail@plt+0x45120>
   57620:	mov	r3, #0
   57624:	str	r3, [fp, #-8]
   57628:	b	5770c <__assert_fail@plt+0x45020>
   5762c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57630:	ldr	r2, [r3, #8]
   57634:	ldr	r3, [fp, #-8]
   57638:	lsl	r3, r3, #2
   5763c:	add	r3, r2, r3
   57640:	ldr	r3, [r3]
   57644:	str	r3, [fp, #-52]	; 0xffffffcc
   57648:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5764c:	ldr	r1, [r3, #28]
   57650:	ldr	r2, [fp, #-52]	; 0xffffffcc
   57654:	mov	r3, r2
   57658:	lsl	r3, r3, #1
   5765c:	add	r3, r3, r2
   57660:	lsl	r3, r3, #2
   57664:	add	r3, r1, r3
   57668:	ldr	r1, [fp, #-20]	; 0xffffffec
   5766c:	mov	r0, r3
   57670:	bl	481a4 <__assert_fail@plt+0x35ab8>
   57674:	mov	r3, r0
   57678:	cmp	r3, #0
   5767c:	bne	57700 <__assert_fail@plt+0x45014>
   57680:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57684:	ldr	r1, [r3, #24]
   57688:	ldr	r2, [fp, #-52]	; 0xffffffcc
   5768c:	mov	r3, r2
   57690:	lsl	r3, r3, #1
   57694:	add	r3, r3, r2
   57698:	lsl	r3, r3, #2
   5769c:	add	r3, r1, r3
   576a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   576a4:	mov	r0, r3
   576a8:	bl	481a4 <__assert_fail@plt+0x35ab8>
   576ac:	mov	r3, r0
   576b0:	cmp	r3, #0
   576b4:	bne	57700 <__assert_fail@plt+0x45014>
   576b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   576bc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   576c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   576c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   576c8:	bl	56be0 <__assert_fail@plt+0x444f4>
   576cc:	str	r0, [fp, #-40]	; 0xffffffd8
   576d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   576d4:	cmp	r3, #0
   576d8:	movne	r3, #1
   576dc:	moveq	r3, #0
   576e0:	uxtb	r3, r3
   576e4:	cmp	r3, #0
   576e8:	beq	576f4 <__assert_fail@plt+0x45008>
   576ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   576f0:	b	57830 <__assert_fail@plt+0x45144>
   576f4:	ldr	r3, [fp, #-8]
   576f8:	sub	r3, r3, #1
   576fc:	str	r3, [fp, #-8]
   57700:	ldr	r3, [fp, #-8]
   57704:	add	r3, r3, #1
   57708:	str	r3, [fp, #-8]
   5770c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57710:	ldr	r2, [r3, #4]
   57714:	ldr	r3, [fp, #-8]
   57718:	cmp	r2, r3
   5771c:	bgt	5762c <__assert_fail@plt+0x44f40>
   57720:	b	5780c <__assert_fail@plt+0x45120>
   57724:	mov	r3, #0
   57728:	str	r3, [fp, #-8]
   5772c:	b	577f0 <__assert_fail@plt+0x45104>
   57730:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57734:	ldr	r2, [r3, #8]
   57738:	ldr	r3, [fp, #-8]
   5773c:	lsl	r3, r3, #2
   57740:	add	r3, r2, r3
   57744:	ldr	r3, [r3]
   57748:	str	r3, [fp, #-32]	; 0xffffffe0
   5774c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57750:	ldr	r2, [r3]
   57754:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57758:	lsl	r3, r3, #3
   5775c:	add	r3, r2, r3
   57760:	ldrb	r3, [r3, #4]
   57764:	str	r3, [fp, #-36]	; 0xffffffdc
   57768:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5776c:	cmp	r3, #9
   57770:	beq	57780 <__assert_fail@plt+0x45094>
   57774:	ldr	r3, [fp, #-36]	; 0xffffffdc
   57778:	cmp	r3, #8
   5777c:	bne	577e4 <__assert_fail@plt+0x450f8>
   57780:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57784:	ldr	r2, [r3]
   57788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5778c:	lsl	r3, r3, #3
   57790:	add	r3, r2, r3
   57794:	ldr	r2, [r3]
   57798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5779c:	cmp	r2, r3
   577a0:	bne	577e0 <__assert_fail@plt+0x450f4>
   577a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   577a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   577ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   577b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   577b4:	bl	56be0 <__assert_fail@plt+0x444f4>
   577b8:	str	r0, [fp, #-40]	; 0xffffffd8
   577bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   577c0:	cmp	r3, #0
   577c4:	movne	r3, #1
   577c8:	moveq	r3, #0
   577cc:	uxtb	r3, r3
   577d0:	cmp	r3, #0
   577d4:	beq	577e4 <__assert_fail@plt+0x450f8>
   577d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   577dc:	b	57830 <__assert_fail@plt+0x45144>
   577e0:	nop			; (mov r0, r0)
   577e4:	ldr	r3, [fp, #-8]
   577e8:	add	r3, r3, #1
   577ec:	str	r3, [fp, #-8]
   577f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   577f4:	ldr	r2, [r3, #4]
   577f8:	ldr	r3, [fp, #-8]
   577fc:	cmp	r2, r3
   57800:	bgt	57730 <__assert_fail@plt+0x45044>
   57804:	b	5780c <__assert_fail@plt+0x45120>
   57808:	nop			; (mov r0, r0)
   5780c:	ldr	r3, [fp, #-12]
   57810:	add	r3, r3, #1
   57814:	str	r3, [fp, #-12]
   57818:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5781c:	ldr	r2, [r3, #4]
   57820:	ldr	r3, [fp, #-12]
   57824:	cmp	r2, r3
   57828:	bgt	5744c <__assert_fail@plt+0x44d60>
   5782c:	mov	r3, #0
   57830:	mov	r0, r3
   57834:	sub	sp, fp, #4
   57838:	pop	{fp, pc}
   5783c:	push	{fp, lr}
   57840:	add	fp, sp, #4
   57844:	sub	sp, sp, #104	; 0x68
   57848:	str	r0, [fp, #-88]	; 0xffffffa8
   5784c:	str	r1, [fp, #-92]	; 0xffffffa4
   57850:	str	r2, [fp, #-96]	; 0xffffffa0
   57854:	str	r3, [fp, #-100]	; 0xffffff9c
   57858:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5785c:	ldr	r3, [r3, #84]	; 0x54
   57860:	str	r3, [fp, #-24]	; 0xffffffe8
   57864:	ldr	r1, [fp, #-96]	; 0xffffffa0
   57868:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5786c:	bl	5cd1c <__assert_fail@plt+0x4a630>
   57870:	str	r0, [fp, #-28]	; 0xffffffe4
   57874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57878:	cmn	r3, #1
   5787c:	bne	57888 <__assert_fail@plt+0x4519c>
   57880:	mov	r3, #0
   57884:	b	57cd0 <__assert_fail@plt+0x455e4>
   57888:	mov	r3, #0
   5788c:	str	r3, [fp, #-84]	; 0xffffffac
   57890:	mov	r3, #0
   57894:	str	r3, [fp, #-12]
   57898:	b	57c80 <__assert_fail@plt+0x45594>
   5789c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   578a0:	ldr	r2, [r3, #8]
   578a4:	ldr	r3, [fp, #-12]
   578a8:	lsl	r3, r3, #2
   578ac:	add	r3, r2, r3
   578b0:	ldr	r3, [r3]
   578b4:	str	r3, [fp, #-32]	; 0xffffffe0
   578b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   578bc:	ldr	r2, [r3]
   578c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   578c4:	lsl	r3, r3, #3
   578c8:	add	r3, r2, r3
   578cc:	ldrb	r3, [r3, #4]
   578d0:	str	r3, [fp, #-36]	; 0xffffffdc
   578d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   578d8:	ldr	r2, [r3, #8]
   578dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   578e0:	cmp	r2, r3
   578e4:	bne	578fc <__assert_fail@plt+0x45210>
   578e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   578ec:	ldr	r2, [r3, #12]
   578f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   578f4:	cmp	r2, r3
   578f8:	beq	57c68 <__assert_fail@plt+0x4557c>
   578fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   57900:	cmp	r3, #4
   57904:	bne	57c70 <__assert_fail@plt+0x45584>
   57908:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5790c:	ldr	r1, [r3, #116]	; 0x74
   57910:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57914:	mov	r3, r2
   57918:	lsl	r3, r3, #1
   5791c:	add	r3, r3, r2
   57920:	lsl	r3, r3, #3
   57924:	add	r3, r1, r3
   57928:	str	r3, [fp, #-20]	; 0xffffffec
   5792c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57930:	str	r3, [fp, #-16]
   57934:	ldr	r3, [fp, #-20]	; 0xffffffec
   57938:	ldr	r2, [r3]
   5793c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57940:	cmp	r2, r3
   57944:	bne	57c34 <__assert_fail@plt+0x45548>
   57948:	ldr	r3, [fp, #-20]	; 0xffffffec
   5794c:	ldr	r2, [r3, #12]
   57950:	ldr	r3, [fp, #-20]	; 0xffffffec
   57954:	ldr	r3, [r3, #8]
   57958:	sub	r3, r2, r3
   5795c:	str	r3, [fp, #-40]	; 0xffffffd8
   57960:	ldr	r2, [fp, #-96]	; 0xffffffa0
   57964:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57968:	add	r3, r2, r3
   5796c:	str	r3, [fp, #-44]	; 0xffffffd4
   57970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57974:	cmp	r3, #0
   57978:	beq	57998 <__assert_fail@plt+0x452ac>
   5797c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57980:	ldr	r2, [r3, #12]
   57984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57988:	lsl	r3, r3, #2
   5798c:	add	r3, r2, r3
   57990:	ldr	r3, [r3]
   57994:	b	579c0 <__assert_fail@plt+0x452d4>
   57998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5799c:	ldr	r1, [r3, #20]
   579a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   579a4:	mov	r3, r2
   579a8:	lsl	r3, r3, #1
   579ac:	add	r3, r3, r2
   579b0:	lsl	r3, r3, #2
   579b4:	add	r3, r1, r3
   579b8:	ldr	r3, [r3, #8]
   579bc:	ldr	r3, [r3]
   579c0:	str	r3, [fp, #-48]	; 0xffffffd0
   579c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   579c8:	ldr	r2, [r3, #12]
   579cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   579d0:	cmp	r2, r3
   579d4:	blt	57c3c <__assert_fail@plt+0x45550>
   579d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   579dc:	ldr	r2, [r3]
   579e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   579e4:	lsl	r3, r3, #2
   579e8:	add	r3, r2, r3
   579ec:	ldr	r3, [r3]
   579f0:	cmp	r3, #0
   579f4:	beq	57c3c <__assert_fail@plt+0x45550>
   579f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   579fc:	ldr	r2, [r3]
   57a00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57a04:	lsl	r3, r3, #2
   57a08:	add	r3, r2, r3
   57a0c:	ldr	r3, [r3]
   57a10:	cmp	r3, #0
   57a14:	beq	57c3c <__assert_fail@plt+0x45550>
   57a18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   57a1c:	ldr	r2, [r3]
   57a20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57a24:	lsl	r3, r3, #2
   57a28:	add	r3, r2, r3
   57a2c:	ldr	r3, [r3]
   57a30:	add	r3, r3, #4
   57a34:	ldr	r1, [fp, #-48]	; 0xffffffd0
   57a38:	mov	r0, r3
   57a3c:	bl	481a4 <__assert_fail@plt+0x35ab8>
   57a40:	mov	r3, r0
   57a44:	cmp	r3, #0
   57a48:	beq	57c3c <__assert_fail@plt+0x45550>
   57a4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   57a50:	add	r1, r3, #16
   57a54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57a58:	str	r3, [sp, #4]
   57a5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57a60:	str	r3, [sp]
   57a64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   57a68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   57a6c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   57a70:	bl	56eb8 <__assert_fail@plt+0x447cc>
   57a74:	mov	r3, r0
   57a78:	cmp	r3, #0
   57a7c:	bne	57c3c <__assert_fail@plt+0x45550>
   57a80:	ldr	r3, [fp, #-84]	; 0xffffffac
   57a84:	cmp	r3, #0
   57a88:	bne	57ae4 <__assert_fail@plt+0x453f8>
   57a8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   57a90:	sub	ip, fp, #84	; 0x54
   57a94:	mov	lr, r3
   57a98:	ldm	lr!, {r0, r1, r2, r3}
   57a9c:	stmia	ip!, {r0, r1, r2, r3}
   57aa0:	ldm	lr, {r0, r1, r2}
   57aa4:	stm	ip, {r0, r1, r2}
   57aa8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   57aac:	add	r2, r3, #16
   57ab0:	sub	r3, fp, #84	; 0x54
   57ab4:	add	r3, r3, #16
   57ab8:	mov	r1, r2
   57abc:	mov	r0, r3
   57ac0:	bl	47038 <__assert_fail@plt+0x3494c>
   57ac4:	str	r0, [fp, #-8]
   57ac8:	ldr	r3, [fp, #-8]
   57acc:	cmp	r3, #0
   57ad0:	movne	r3, #1
   57ad4:	moveq	r3, #0
   57ad8:	uxtb	r3, r3
   57adc:	cmp	r3, #0
   57ae0:	bne	57ca0 <__assert_fail@plt+0x455b4>
   57ae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57ae8:	str	r3, [fp, #-76]	; 0xffffffb4
   57aec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   57af0:	str	r3, [fp, #-72]	; 0xffffffb8
   57af4:	sub	r3, fp, #84	; 0x54
   57af8:	add	r3, r3, #16
   57afc:	ldr	r1, [fp, #-16]
   57b00:	mov	r0, r3
   57b04:	bl	47d94 <__assert_fail@plt+0x356a8>
   57b08:	mov	r3, r0
   57b0c:	strb	r3, [fp, #-49]	; 0xffffffcf
   57b10:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   57b14:	eor	r3, r3, #1
   57b18:	uxtb	r3, r3
   57b1c:	cmp	r3, #0
   57b20:	beq	57b30 <__assert_fail@plt+0x45444>
   57b24:	mov	r3, #12
   57b28:	str	r3, [fp, #-8]
   57b2c:	b	57cb4 <__assert_fail@plt+0x455c8>
   57b30:	ldr	r2, [fp, #-84]	; 0xffffffac
   57b34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   57b38:	lsl	r3, r3, #2
   57b3c:	add	r3, r2, r3
   57b40:	ldr	r3, [r3]
   57b44:	str	r3, [fp, #-56]	; 0xffffffc8
   57b48:	sub	r3, fp, #84	; 0x54
   57b4c:	mov	r1, r3
   57b50:	ldr	r0, [fp, #-88]	; 0xffffffa8
   57b54:	bl	560ec <__assert_fail@plt+0x43a00>
   57b58:	str	r0, [fp, #-8]
   57b5c:	ldr	r3, [fp, #-8]
   57b60:	cmp	r3, #0
   57b64:	movne	r3, #1
   57b68:	moveq	r3, #0
   57b6c:	uxtb	r3, r3
   57b70:	cmp	r3, #0
   57b74:	bne	57ca8 <__assert_fail@plt+0x455bc>
   57b78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   57b7c:	ldr	r3, [r3, #4]
   57b80:	cmp	r3, #0
   57b84:	beq	57bc4 <__assert_fail@plt+0x454d8>
   57b88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   57b8c:	ldr	r1, [r3, #4]
   57b90:	ldr	r2, [fp, #-84]	; 0xffffffac
   57b94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   57b98:	add	r3, r3, #1
   57b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57ba0:	bl	566b0 <__assert_fail@plt+0x43fc4>
   57ba4:	str	r0, [fp, #-8]
   57ba8:	ldr	r3, [fp, #-8]
   57bac:	cmp	r3, #0
   57bb0:	movne	r3, #1
   57bb4:	moveq	r3, #0
   57bb8:	uxtb	r3, r3
   57bbc:	cmp	r3, #0
   57bc0:	bne	57cb0 <__assert_fail@plt+0x455c4>
   57bc4:	ldr	r2, [fp, #-84]	; 0xffffffac
   57bc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   57bcc:	lsl	r3, r3, #2
   57bd0:	add	r3, r2, r3
   57bd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   57bd8:	str	r2, [r3]
   57bdc:	sub	r3, fp, #84	; 0x54
   57be0:	add	r3, r3, #16
   57be4:	ldr	r1, [fp, #-16]
   57be8:	mov	r0, r3
   57bec:	bl	481a4 <__assert_fail@plt+0x35ab8>
   57bf0:	mov	r3, r0
   57bf4:	sub	r2, r3, #1
   57bf8:	sub	r3, fp, #84	; 0x54
   57bfc:	add	r3, r3, #16
   57c00:	mov	r1, r2
   57c04:	mov	r0, r3
   57c08:	bl	48290 <__assert_fail@plt+0x35ba4>
   57c0c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   57c10:	ldr	r1, [r3, #116]	; 0x74
   57c14:	ldr	r2, [fp, #-16]
   57c18:	mov	r3, r2
   57c1c:	lsl	r3, r3, #1
   57c20:	add	r3, r3, r2
   57c24:	lsl	r3, r3, #3
   57c28:	add	r3, r1, r3
   57c2c:	str	r3, [fp, #-20]	; 0xffffffec
   57c30:	b	57c40 <__assert_fail@plt+0x45554>
   57c34:	nop			; (mov r0, r0)
   57c38:	b	57c40 <__assert_fail@plt+0x45554>
   57c3c:	nop			; (mov r0, r0)
   57c40:	ldr	r3, [fp, #-16]
   57c44:	add	r3, r3, #1
   57c48:	str	r3, [fp, #-16]
   57c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   57c50:	add	r2, r3, #24
   57c54:	str	r2, [fp, #-20]	; 0xffffffec
   57c58:	ldrb	r3, [r3, #20]
   57c5c:	cmp	r3, #0
   57c60:	bne	57934 <__assert_fail@plt+0x45248>
   57c64:	b	57c74 <__assert_fail@plt+0x45588>
   57c68:	nop			; (mov r0, r0)
   57c6c:	b	57c74 <__assert_fail@plt+0x45588>
   57c70:	nop			; (mov r0, r0)
   57c74:	ldr	r3, [fp, #-12]
   57c78:	add	r3, r3, #1
   57c7c:	str	r3, [fp, #-12]
   57c80:	ldr	r3, [fp, #-100]	; 0xffffff9c
   57c84:	ldr	r2, [r3, #4]
   57c88:	ldr	r3, [fp, #-12]
   57c8c:	cmp	r2, r3
   57c90:	bgt	5789c <__assert_fail@plt+0x451b0>
   57c94:	mov	r3, #0
   57c98:	str	r3, [fp, #-8]
   57c9c:	b	57cb4 <__assert_fail@plt+0x455c8>
   57ca0:	nop			; (mov r0, r0)
   57ca4:	b	57cb4 <__assert_fail@plt+0x455c8>
   57ca8:	nop			; (mov r0, r0)
   57cac:	b	57cb4 <__assert_fail@plt+0x455c8>
   57cb0:	nop			; (mov r0, r0)
   57cb4:	ldr	r3, [fp, #-84]	; 0xffffffac
   57cb8:	cmp	r3, #0
   57cbc:	beq	57ccc <__assert_fail@plt+0x455e0>
   57cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57cc4:	mov	r0, r3
   57cc8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   57ccc:	ldr	r3, [fp, #-8]
   57cd0:	mov	r0, r3
   57cd4:	sub	sp, fp, #4
   57cd8:	pop	{fp, pc}
   57cdc:	push	{fp, lr}
   57ce0:	add	fp, sp, #4
   57ce4:	sub	sp, sp, #24
   57ce8:	str	r0, [fp, #-16]
   57cec:	str	r1, [fp, #-20]	; 0xffffffec
   57cf0:	str	r2, [fp, #-24]	; 0xffffffe8
   57cf4:	str	r3, [fp, #-28]	; 0xffffffe4
   57cf8:	ldr	r3, [fp, #-16]
   57cfc:	ldr	r3, [r3, #84]	; 0x54
   57d00:	str	r3, [fp, #-12]
   57d04:	ldr	r2, [fp, #-16]
   57d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   57d10:	ldr	r0, [fp, #-12]
   57d14:	bl	5bde0 <__assert_fail@plt+0x496f4>
   57d18:	str	r0, [fp, #-8]
   57d1c:	ldr	r3, [fp, #-8]
   57d20:	cmp	r3, #0
   57d24:	ble	57dc0 <__assert_fail@plt+0x456d4>
   57d28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57d2c:	ldr	r3, [fp, #-8]
   57d30:	add	r2, r2, r3
   57d34:	ldr	r3, [fp, #4]
   57d38:	cmp	r2, r3
   57d3c:	bgt	57dc0 <__assert_fail@plt+0x456d4>
   57d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   57d44:	ldr	r2, [r3]
   57d48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   57d4c:	ldr	r3, [fp, #-8]
   57d50:	add	r3, r1, r3
   57d54:	lsl	r3, r3, #2
   57d58:	add	r3, r2, r3
   57d5c:	ldr	r3, [r3]
   57d60:	cmp	r3, #0
   57d64:	beq	57db8 <__assert_fail@plt+0x456cc>
   57d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   57d6c:	ldr	r2, [r3]
   57d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   57d74:	ldr	r3, [fp, #-8]
   57d78:	add	r3, r1, r3
   57d7c:	lsl	r3, r3, #2
   57d80:	add	r3, r2, r3
   57d84:	ldr	r3, [r3]
   57d88:	add	r0, r3, #4
   57d8c:	ldr	r3, [fp, #-12]
   57d90:	ldr	r2, [r3, #12]
   57d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57d98:	lsl	r3, r3, #2
   57d9c:	add	r3, r2, r3
   57da0:	ldr	r3, [r3]
   57da4:	mov	r1, r3
   57da8:	bl	481a4 <__assert_fail@plt+0x35ab8>
   57dac:	mov	r3, r0
   57db0:	cmp	r3, #0
   57db4:	bne	57dc0 <__assert_fail@plt+0x456d4>
   57db8:	mov	r3, #0
   57dbc:	str	r3, [fp, #-8]
   57dc0:	ldr	r3, [fp, #-8]
   57dc4:	mov	r0, r3
   57dc8:	sub	sp, fp, #4
   57dcc:	pop	{fp, pc}
   57dd0:	push	{fp, lr}
   57dd4:	add	fp, sp, #4
   57dd8:	sub	sp, sp, #32
   57ddc:	str	r0, [fp, #-24]	; 0xffffffe8
   57de0:	str	r1, [fp, #-28]	; 0xffffffe4
   57de4:	str	r2, [fp, #-32]	; 0xffffffe0
   57de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57dec:	ldrb	r3, [r3, #52]	; 0x34
   57df0:	lsr	r3, r3, #5
   57df4:	and	r3, r3, #1
   57df8:	uxtb	r3, r3
   57dfc:	cmp	r3, #0
   57e00:	beq	57e44 <__assert_fail@plt+0x45758>
   57e04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57e08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57e0c:	bl	58420 <__assert_fail@plt+0x45d34>
   57e10:	mov	r2, r0
   57e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57e18:	str	r2, [r3]
   57e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57e20:	ldr	r3, [r3]
   57e24:	cmp	r3, #0
   57e28:	movne	r3, #1
   57e2c:	moveq	r3, #0
   57e30:	uxtb	r3, r3
   57e34:	cmp	r3, #0
   57e38:	beq	57e44 <__assert_fail@plt+0x45758>
   57e3c:	mov	r3, #0
   57e40:	b	57f74 <__assert_fail@plt+0x45888>
   57e44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57e48:	ldr	r2, [r3, #4]
   57e4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57e50:	ldr	r3, [r3, #40]	; 0x28
   57e54:	add	r0, r3, #1
   57e58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   57e5c:	str	r0, [r1, #40]	; 0x28
   57e60:	add	r3, r2, r3
   57e64:	ldrb	r3, [r3]
   57e68:	strb	r3, [fp, #-5]
   57e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57e70:	ldr	r3, [r3, #44]	; 0x2c
   57e74:	str	r3, [fp, #-12]
   57e78:	ldr	r3, [fp, #-12]
   57e7c:	cmp	r3, #0
   57e80:	movne	r3, #1
   57e84:	moveq	r3, #0
   57e88:	uxtb	r3, r3
   57e8c:	cmp	r3, #0
   57e90:	beq	57eac <__assert_fail@plt+0x457c0>
   57e94:	ldrb	r3, [fp, #-5]
   57e98:	lsl	r3, r3, #2
   57e9c:	ldr	r2, [fp, #-12]
   57ea0:	add	r3, r2, r3
   57ea4:	ldr	r3, [r3]
   57ea8:	b	57f74 <__assert_fail@plt+0x45888>
   57eac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57eb0:	ldr	r3, [r3, #48]	; 0x30
   57eb4:	str	r3, [fp, #-12]
   57eb8:	ldr	r3, [fp, #-12]
   57ebc:	cmp	r3, #0
   57ec0:	movne	r3, #1
   57ec4:	moveq	r3, #0
   57ec8:	uxtb	r3, r3
   57ecc:	cmp	r3, #0
   57ed0:	beq	57f3c <__assert_fail@plt+0x45850>
   57ed4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57ed8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57edc:	ldr	r3, [r3, #40]	; 0x28
   57ee0:	sub	r1, r3, #1
   57ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57ee8:	ldr	r3, [r3, #88]	; 0x58
   57eec:	mov	r2, r3
   57ef0:	bl	46c18 <__assert_fail@plt+0x3452c>
   57ef4:	str	r0, [fp, #-16]
   57ef8:	ldr	r3, [fp, #-16]
   57efc:	and	r3, r3, #1
   57f00:	cmp	r3, #0
   57f04:	beq	57f24 <__assert_fail@plt+0x45838>
   57f08:	ldrb	r3, [fp, #-5]
   57f0c:	add	r3, r3, #256	; 0x100
   57f10:	lsl	r3, r3, #2
   57f14:	ldr	r2, [fp, #-12]
   57f18:	add	r3, r2, r3
   57f1c:	ldr	r3, [r3]
   57f20:	b	57f74 <__assert_fail@plt+0x45888>
   57f24:	ldrb	r3, [fp, #-5]
   57f28:	lsl	r3, r3, #2
   57f2c:	ldr	r2, [fp, #-12]
   57f30:	add	r3, r2, r3
   57f34:	ldr	r3, [r3]
   57f38:	b	57f74 <__assert_fail@plt+0x45888>
   57f3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57f40:	ldr	r3, [r3, #84]	; 0x54
   57f44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57f48:	mov	r0, r3
   57f4c:	bl	5a908 <__assert_fail@plt+0x4821c>
   57f50:	mov	r3, r0
   57f54:	eor	r3, r3, #1
   57f58:	uxtb	r3, r3
   57f5c:	cmp	r3, #0
   57f60:	beq	57e6c <__assert_fail@plt+0x45780>
   57f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57f68:	mov	r2, #12
   57f6c:	str	r2, [r3]
   57f70:	mov	r3, #0
   57f74:	mov	r0, r3
   57f78:	sub	sp, fp, #4
   57f7c:	pop	{fp, pc}
   57f80:	push	{r4, fp, lr}
   57f84:	add	fp, sp, #8
   57f88:	sub	sp, sp, #60	; 0x3c
   57f8c:	str	r0, [fp, #-56]	; 0xffffffc8
   57f90:	str	r1, [fp, #-60]	; 0xffffffc4
   57f94:	str	r2, [fp, #-64]	; 0xffffffc0
   57f98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57f9c:	ldr	r3, [r3, #84]	; 0x54
   57fa0:	str	r3, [fp, #-20]	; 0xffffffec
   57fa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57fa8:	ldr	r3, [r3, #40]	; 0x28
   57fac:	str	r3, [fp, #-24]	; 0xffffffe8
   57fb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57fb4:	ldr	r2, [r3, #104]	; 0x68
   57fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57fbc:	cmp	r2, r3
   57fc0:	bge	57ff0 <__assert_fail@plt+0x45904>
   57fc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57fc8:	ldr	r2, [r3, #100]	; 0x64
   57fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57fd0:	lsl	r3, r3, #2
   57fd4:	add	r3, r2, r3
   57fd8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   57fdc:	str	r2, [r3]
   57fe0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57fe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   57fe8:	str	r2, [r3, #104]	; 0x68
   57fec:	b	58144 <__assert_fail@plt+0x45a58>
   57ff0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   57ff4:	ldr	r2, [r3, #100]	; 0x64
   57ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57ffc:	lsl	r3, r3, #2
   58000:	add	r3, r2, r3
   58004:	ldr	r3, [r3]
   58008:	cmp	r3, #0
   5800c:	bne	58030 <__assert_fail@plt+0x45944>
   58010:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58014:	ldr	r2, [r3, #100]	; 0x64
   58018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5801c:	lsl	r3, r3, #2
   58020:	add	r3, r2, r3
   58024:	ldr	r2, [fp, #-64]	; 0xffffffc0
   58028:	str	r2, [r3]
   5802c:	b	58144 <__assert_fail@plt+0x45a58>
   58030:	mov	r3, #0
   58034:	str	r3, [fp, #-16]
   58038:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5803c:	ldr	r2, [r3, #100]	; 0x64
   58040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58044:	lsl	r3, r3, #2
   58048:	add	r3, r2, r3
   5804c:	ldr	r3, [r3]
   58050:	str	r3, [fp, #-28]	; 0xffffffe4
   58054:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58058:	ldr	r3, [r3, #40]	; 0x28
   5805c:	str	r3, [fp, #-32]	; 0xffffffe0
   58060:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58064:	cmp	r3, #0
   58068:	beq	580c0 <__assert_fail@plt+0x459d4>
   5806c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58070:	ldr	r3, [r3, #40]	; 0x28
   58074:	str	r3, [fp, #-16]
   58078:	sub	r3, fp, #48	; 0x30
   5807c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   58080:	ldr	r1, [fp, #-16]
   58084:	mov	r0, r3
   58088:	bl	475c4 <__assert_fail@plt+0x34ed8>
   5808c:	mov	r2, r0
   58090:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58094:	str	r2, [r3]
   58098:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5809c:	ldr	r3, [r3]
   580a0:	cmp	r3, #0
   580a4:	movne	r3, #1
   580a8:	moveq	r3, #0
   580ac:	uxtb	r3, r3
   580b0:	cmp	r3, #0
   580b4:	beq	580d0 <__assert_fail@plt+0x459e4>
   580b8:	mov	r3, #0
   580bc:	b	5822c <__assert_fail@plt+0x45b40>
   580c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   580c4:	sub	r3, fp, #48	; 0x30
   580c8:	ldm	r2, {r0, r1, r2}
   580cc:	stm	r3, {r0, r1, r2}
   580d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   580d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   580d8:	ldr	r3, [r3, #40]	; 0x28
   580dc:	sub	r1, r3, #1
   580e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   580e4:	ldr	r3, [r3, #88]	; 0x58
   580e8:	mov	r2, r3
   580ec:	bl	46c18 <__assert_fail@plt+0x3452c>
   580f0:	str	r0, [fp, #-36]	; 0xffffffdc
   580f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   580f8:	ldr	r2, [r3, #100]	; 0x64
   580fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58100:	lsl	r3, r3, #2
   58104:	add	r4, r2, r3
   58108:	sub	r2, fp, #48	; 0x30
   5810c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   58110:	ldr	r1, [fp, #-20]	; 0xffffffec
   58114:	ldr	r0, [fp, #-56]	; 0xffffffc8
   58118:	bl	48930 <__assert_fail@plt+0x36244>
   5811c:	mov	r3, r0
   58120:	str	r3, [r4]
   58124:	ldr	r3, [r4]
   58128:	str	r3, [fp, #-64]	; 0xffffffc0
   5812c:	ldr	r3, [fp, #-16]
   58130:	cmp	r3, #0
   58134:	beq	58144 <__assert_fail@plt+0x45a58>
   58138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5813c:	mov	r0, r3
   58140:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   58144:	ldr	r3, [fp, #-20]	; 0xffffffec
   58148:	ldr	r3, [r3, #76]	; 0x4c
   5814c:	cmp	r3, #0
   58150:	beq	58228 <__assert_fail@plt+0x45b3c>
   58154:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58158:	cmp	r3, #0
   5815c:	beq	58228 <__assert_fail@plt+0x45b3c>
   58160:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58164:	add	r3, r3, #4
   58168:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5816c:	mov	r1, r3
   58170:	ldr	r0, [fp, #-60]	; 0xffffffc4
   58174:	bl	582fc <__assert_fail@plt+0x45c10>
   58178:	mov	r2, r0
   5817c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58180:	str	r2, [r3]
   58184:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58188:	ldr	r3, [r3]
   5818c:	cmp	r3, #0
   58190:	movne	r3, #1
   58194:	moveq	r3, #0
   58198:	uxtb	r3, r3
   5819c:	cmp	r3, #0
   581a0:	beq	581ac <__assert_fail@plt+0x45ac0>
   581a4:	mov	r3, #0
   581a8:	b	5822c <__assert_fail@plt+0x45b40>
   581ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   581b0:	ldrb	r3, [r3, #52]	; 0x34
   581b4:	and	r3, r3, #64	; 0x40
   581b8:	uxtb	r3, r3
   581bc:	cmp	r3, #0
   581c0:	beq	58228 <__assert_fail@plt+0x45b3c>
   581c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   581c8:	add	r3, r3, #4
   581cc:	mov	r1, r3
   581d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   581d4:	bl	58858 <__assert_fail@plt+0x4616c>
   581d8:	mov	r2, r0
   581dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   581e0:	str	r2, [r3]
   581e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   581e8:	ldr	r3, [r3]
   581ec:	cmp	r3, #0
   581f0:	movne	r3, #1
   581f4:	moveq	r3, #0
   581f8:	uxtb	r3, r3
   581fc:	cmp	r3, #0
   58200:	beq	5820c <__assert_fail@plt+0x45b20>
   58204:	mov	r3, #0
   58208:	b	5822c <__assert_fail@plt+0x45b40>
   5820c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58210:	ldr	r2, [r3, #100]	; 0x64
   58214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58218:	lsl	r3, r3, #2
   5821c:	add	r3, r2, r3
   58220:	ldr	r3, [r3]
   58224:	str	r3, [fp, #-64]	; 0xffffffc0
   58228:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5822c:	mov	r0, r3
   58230:	sub	sp, fp, #8
   58234:	pop	{r4, fp, pc}
   58238:	push	{fp, lr}
   5823c:	add	fp, sp, #4
   58240:	sub	sp, sp, #24
   58244:	str	r0, [fp, #-24]	; 0xffffffe8
   58248:	str	r1, [fp, #-28]	; 0xffffffe4
   5824c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58250:	ldr	r3, [r3, #104]	; 0x68
   58254:	str	r3, [fp, #-12]
   58258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5825c:	ldr	r3, [r3, #40]	; 0x28
   58260:	str	r3, [fp, #-8]
   58264:	ldr	r3, [fp, #-8]
   58268:	add	r3, r3, #1
   5826c:	str	r3, [fp, #-8]
   58270:	ldr	r2, [fp, #-8]
   58274:	ldr	r3, [fp, #-12]
   58278:	cmp	r2, r3
   5827c:	ble	58288 <__assert_fail@plt+0x45b9c>
   58280:	mov	r3, #0
   58284:	b	582f0 <__assert_fail@plt+0x45c04>
   58288:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5828c:	ldr	r3, [r3, #40]	; 0x28
   58290:	add	r2, r3, #1
   58294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58298:	str	r2, [r3, #40]	; 0x28
   5829c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   582a0:	ldr	r2, [r3, #100]	; 0x64
   582a4:	ldr	r3, [fp, #-8]
   582a8:	lsl	r3, r3, #2
   582ac:	add	r3, r2, r3
   582b0:	ldr	r3, [r3]
   582b4:	cmp	r3, #0
   582b8:	beq	58264 <__assert_fail@plt+0x45b78>
   582bc:	mov	r2, #0
   582c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   582c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   582c8:	bl	57f80 <__assert_fail@plt+0x45894>
   582cc:	str	r0, [fp, #-16]
   582d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   582d4:	ldr	r3, [r3]
   582d8:	cmp	r3, #0
   582dc:	bne	582ec <__assert_fail@plt+0x45c00>
   582e0:	ldr	r3, [fp, #-16]
   582e4:	cmp	r3, #0
   582e8:	beq	5824c <__assert_fail@plt+0x45b60>
   582ec:	ldr	r3, [fp, #-16]
   582f0:	mov	r0, r3
   582f4:	sub	sp, fp, #4
   582f8:	pop	{fp, pc}
   582fc:	push	{fp, lr}
   58300:	add	fp, sp, #4
   58304:	sub	sp, sp, #32
   58308:	str	r0, [fp, #-24]	; 0xffffffe8
   5830c:	str	r1, [fp, #-28]	; 0xffffffe4
   58310:	str	r2, [fp, #-32]	; 0xffffffe0
   58314:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58318:	ldr	r3, [r3, #84]	; 0x54
   5831c:	str	r3, [fp, #-12]
   58320:	mov	r3, #0
   58324:	str	r3, [fp, #-8]
   58328:	b	583fc <__assert_fail@plt+0x45d10>
   5832c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58330:	ldr	r2, [r3, #8]
   58334:	ldr	r3, [fp, #-8]
   58338:	lsl	r3, r3, #2
   5833c:	add	r3, r2, r3
   58340:	ldr	r3, [r3]
   58344:	str	r3, [fp, #-16]
   58348:	ldr	r3, [fp, #-12]
   5834c:	ldr	r2, [r3]
   58350:	ldr	r3, [fp, #-16]
   58354:	lsl	r3, r3, #3
   58358:	add	r3, r2, r3
   5835c:	ldrb	r3, [r3, #4]
   58360:	cmp	r3, #8
   58364:	bne	583f0 <__assert_fail@plt+0x45d04>
   58368:	ldr	r3, [fp, #-12]
   5836c:	ldr	r2, [r3]
   58370:	ldr	r3, [fp, #-16]
   58374:	lsl	r3, r3, #3
   58378:	add	r3, r2, r3
   5837c:	ldr	r3, [r3]
   58380:	cmp	r3, #31
   58384:	bgt	583f0 <__assert_fail@plt+0x45d04>
   58388:	ldr	r3, [fp, #-12]
   5838c:	ldr	r2, [r3, #80]	; 0x50
   58390:	ldr	r3, [fp, #-12]
   58394:	ldr	r1, [r3]
   58398:	ldr	r3, [fp, #-16]
   5839c:	lsl	r3, r3, #3
   583a0:	add	r3, r1, r3
   583a4:	ldr	r3, [r3]
   583a8:	lsr	r3, r2, r3
   583ac:	and	r3, r3, #1
   583b0:	cmp	r3, #0
   583b4:	beq	583f0 <__assert_fail@plt+0x45d04>
   583b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   583bc:	ldr	r1, [fp, #-16]
   583c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   583c4:	bl	5ce20 <__assert_fail@plt+0x4a734>
   583c8:	str	r0, [fp, #-20]	; 0xffffffec
   583cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   583d0:	cmp	r3, #0
   583d4:	movne	r3, #1
   583d8:	moveq	r3, #0
   583dc:	uxtb	r3, r3
   583e0:	cmp	r3, #0
   583e4:	beq	583f0 <__assert_fail@plt+0x45d04>
   583e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   583ec:	b	58414 <__assert_fail@plt+0x45d28>
   583f0:	ldr	r3, [fp, #-8]
   583f4:	add	r3, r3, #1
   583f8:	str	r3, [fp, #-8]
   583fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58400:	ldr	r2, [r3, #4]
   58404:	ldr	r3, [fp, #-8]
   58408:	cmp	r2, r3
   5840c:	bgt	5832c <__assert_fail@plt+0x45c40>
   58410:	mov	r3, #0
   58414:	mov	r0, r3
   58418:	sub	sp, fp, #4
   5841c:	pop	{fp, pc}
   58420:	push	{r4, fp, lr}
   58424:	add	fp, sp, #8
   58428:	sub	sp, sp, #60	; 0x3c
   5842c:	str	r0, [fp, #-64]	; 0xffffffc0
   58430:	str	r1, [fp, #-68]	; 0xffffffbc
   58434:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58438:	ldr	r3, [r3, #84]	; 0x54
   5843c:	str	r3, [fp, #-20]	; 0xffffffec
   58440:	mov	r3, #0
   58444:	str	r3, [fp, #-16]
   58448:	b	58830 <__assert_fail@plt+0x46144>
   5844c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58450:	ldr	r2, [r3, #12]
   58454:	ldr	r3, [fp, #-16]
   58458:	lsl	r3, r3, #2
   5845c:	add	r3, r2, r3
   58460:	ldr	r3, [r3]
   58464:	str	r3, [fp, #-24]	; 0xffffffe8
   58468:	ldr	r3, [fp, #-20]	; 0xffffffec
   5846c:	ldr	r2, [r3]
   58470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58474:	lsl	r3, r3, #3
   58478:	add	r3, r2, r3
   5847c:	ldrb	r3, [r3, #6]
   58480:	and	r3, r3, #16
   58484:	uxtb	r3, r3
   58488:	cmp	r3, #0
   5848c:	beq	58810 <__assert_fail@plt+0x46124>
   58490:	ldr	r3, [fp, #-20]	; 0xffffffec
   58494:	ldr	r2, [r3]
   58498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5849c:	lsl	r3, r3, #3
   584a0:	add	r3, r2, r3
   584a4:	ldr	r2, [r3, #4]
   584a8:	ldr	r3, [pc, #932]	; 58854 <__assert_fail@plt+0x46168>
   584ac:	and	r3, r3, r2
   584b0:	cmp	r3, #0
   584b4:	beq	585e8 <__assert_fail@plt+0x45efc>
   584b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   584bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   584c0:	ldr	r1, [r3, #40]	; 0x28
   584c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   584c8:	ldr	r3, [r3, #88]	; 0x58
   584cc:	mov	r2, r3
   584d0:	bl	46c18 <__assert_fail@plt+0x3452c>
   584d4:	str	r0, [fp, #-28]	; 0xffffffe4
   584d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   584dc:	ldr	r2, [r3]
   584e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   584e4:	lsl	r3, r3, #3
   584e8:	add	r3, r2, r3
   584ec:	ldr	r3, [r3, #4]
   584f0:	lsr	r3, r3, #8
   584f4:	lsl	r3, r3, #22
   584f8:	lsr	r3, r3, #22
   584fc:	uxth	r3, r3
   58500:	and	r3, r3, #4
   58504:	cmp	r3, #0
   58508:	beq	5851c <__assert_fail@plt+0x45e30>
   5850c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58510:	and	r3, r3, #1
   58514:	cmp	r3, #0
   58518:	beq	58818 <__assert_fail@plt+0x4612c>
   5851c:	ldr	r3, [fp, #-20]	; 0xffffffec
   58520:	ldr	r2, [r3]
   58524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58528:	lsl	r3, r3, #3
   5852c:	add	r3, r2, r3
   58530:	ldr	r3, [r3, #4]
   58534:	lsr	r3, r3, #8
   58538:	lsl	r3, r3, #22
   5853c:	lsr	r3, r3, #22
   58540:	uxth	r3, r3
   58544:	and	r3, r3, #8
   58548:	cmp	r3, #0
   5854c:	beq	58560 <__assert_fail@plt+0x45e74>
   58550:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58554:	and	r3, r3, #1
   58558:	cmp	r3, #0
   5855c:	bne	58818 <__assert_fail@plt+0x4612c>
   58560:	ldr	r3, [fp, #-20]	; 0xffffffec
   58564:	ldr	r2, [r3]
   58568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5856c:	lsl	r3, r3, #3
   58570:	add	r3, r2, r3
   58574:	ldr	r3, [r3, #4]
   58578:	lsr	r3, r3, #8
   5857c:	lsl	r3, r3, #22
   58580:	lsr	r3, r3, #22
   58584:	uxth	r3, r3
   58588:	and	r3, r3, #32
   5858c:	cmp	r3, #0
   58590:	beq	585a4 <__assert_fail@plt+0x45eb8>
   58594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58598:	and	r3, r3, #2
   5859c:	cmp	r3, #0
   585a0:	beq	58818 <__assert_fail@plt+0x4612c>
   585a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   585a8:	ldr	r2, [r3]
   585ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   585b0:	lsl	r3, r3, #3
   585b4:	add	r3, r2, r3
   585b8:	ldr	r3, [r3, #4]
   585bc:	lsr	r3, r3, #8
   585c0:	lsl	r3, r3, #22
   585c4:	lsr	r3, r3, #22
   585c8:	uxth	r3, r3
   585cc:	and	r3, r3, #128	; 0x80
   585d0:	cmp	r3, #0
   585d4:	beq	585e8 <__assert_fail@plt+0x45efc>
   585d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   585dc:	and	r3, r3, #8
   585e0:	cmp	r3, #0
   585e4:	beq	58818 <__assert_fail@plt+0x4612c>
   585e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   585ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   585f0:	ldr	r3, [r3, #40]	; 0x28
   585f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   585f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   585fc:	bl	5bde0 <__assert_fail@plt+0x496f4>
   58600:	str	r0, [fp, #-32]	; 0xffffffe0
   58604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58608:	cmp	r3, #0
   5860c:	beq	58820 <__assert_fail@plt+0x46134>
   58610:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58614:	ldr	r2, [r3, #40]	; 0x28
   58618:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5861c:	add	r3, r2, r3
   58620:	str	r3, [fp, #-36]	; 0xffffffdc
   58624:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58628:	ldr	r2, [r3, #120]	; 0x78
   5862c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58630:	cmp	r2, r3
   58634:	movge	r2, r2
   58638:	movlt	r2, r3
   5863c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58640:	str	r2, [r3, #120]	; 0x78
   58644:	ldr	r1, [fp, #-36]	; 0xffffffdc
   58648:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5864c:	bl	56590 <__assert_fail@plt+0x43ea4>
   58650:	mov	r3, r0
   58654:	str	r3, [fp, #-48]	; 0xffffffd0
   58658:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5865c:	cmp	r3, #0
   58660:	movne	r3, #1
   58664:	moveq	r3, #0
   58668:	uxtb	r3, r3
   5866c:	cmp	r3, #0
   58670:	beq	5867c <__assert_fail@plt+0x45f90>
   58674:	ldr	r3, [fp, #-48]	; 0xffffffd0
   58678:	b	58848 <__assert_fail@plt+0x4615c>
   5867c:	ldr	r3, [fp, #-20]	; 0xffffffec
   58680:	ldr	r2, [r3, #12]
   58684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58688:	lsl	r3, r3, #2
   5868c:	add	r3, r2, r3
   58690:	ldr	r3, [r3]
   58694:	cmn	r3, #1
   58698:	ldr	r3, [fp, #-20]	; 0xffffffec
   5869c:	ldr	r2, [r3, #24]
   586a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   586a4:	ldr	r1, [r3, #12]
   586a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   586ac:	lsl	r3, r3, #2
   586b0:	add	r3, r1, r3
   586b4:	ldr	r3, [r3]
   586b8:	mov	r1, r3
   586bc:	mov	r3, r1
   586c0:	lsl	r3, r3, #1
   586c4:	add	r3, r3, r1
   586c8:	lsl	r3, r3, #2
   586cc:	add	r3, r2, r3
   586d0:	str	r3, [fp, #-40]	; 0xffffffd8
   586d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   586d8:	ldr	r2, [r3, #100]	; 0x64
   586dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   586e0:	lsl	r3, r3, #2
   586e4:	add	r3, r2, r3
   586e8:	ldr	r3, [r3]
   586ec:	str	r3, [fp, #-44]	; 0xffffffd4
   586f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   586f4:	cmp	r3, #0
   586f8:	bne	58710 <__assert_fail@plt+0x46024>
   586fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   58700:	sub	r3, fp, #60	; 0x3c
   58704:	ldm	r2, {r0, r1, r2}
   58708:	stm	r3, {r0, r1, r2}
   5870c:	b	58754 <__assert_fail@plt+0x46068>
   58710:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58714:	ldr	r1, [r3, #40]	; 0x28
   58718:	sub	r3, fp, #60	; 0x3c
   5871c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   58720:	mov	r0, r3
   58724:	bl	475c4 <__assert_fail@plt+0x34ed8>
   58728:	mov	r3, r0
   5872c:	str	r3, [fp, #-48]	; 0xffffffd0
   58730:	ldr	r3, [fp, #-48]	; 0xffffffd0
   58734:	cmp	r3, #0
   58738:	movne	r3, #1
   5873c:	moveq	r3, #0
   58740:	uxtb	r3, r3
   58744:	cmp	r3, #0
   58748:	beq	58754 <__assert_fail@plt+0x46068>
   5874c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   58750:	b	58848 <__assert_fail@plt+0x4615c>
   58754:	ldr	r0, [fp, #-64]	; 0xffffffc0
   58758:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5875c:	sub	r1, r3, #1
   58760:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58764:	ldr	r3, [r3, #88]	; 0x58
   58768:	mov	r2, r3
   5876c:	bl	46c18 <__assert_fail@plt+0x3452c>
   58770:	str	r0, [fp, #-28]	; 0xffffffe4
   58774:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58778:	ldr	r2, [r3, #100]	; 0x64
   5877c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   58780:	lsl	r3, r3, #2
   58784:	add	r4, r2, r3
   58788:	sub	r2, fp, #60	; 0x3c
   5878c:	sub	r0, fp, #48	; 0x30
   58790:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58794:	ldr	r1, [fp, #-20]	; 0xffffffec
   58798:	bl	48930 <__assert_fail@plt+0x36244>
   5879c:	mov	r3, r0
   587a0:	str	r3, [r4]
   587a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   587a8:	cmp	r3, #0
   587ac:	beq	587bc <__assert_fail@plt+0x460d0>
   587b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   587b4:	mov	r0, r3
   587b8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   587bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   587c0:	ldr	r2, [r3, #100]	; 0x64
   587c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   587c8:	lsl	r3, r3, #2
   587cc:	add	r3, r2, r3
   587d0:	ldr	r3, [r3]
   587d4:	cmp	r3, #0
   587d8:	moveq	r3, #1
   587dc:	movne	r3, #0
   587e0:	uxtb	r3, r3
   587e4:	cmp	r3, #0
   587e8:	beq	58824 <__assert_fail@plt+0x46138>
   587ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   587f0:	cmp	r3, #0
   587f4:	movne	r3, #1
   587f8:	moveq	r3, #0
   587fc:	uxtb	r3, r3
   58800:	cmp	r3, #0
   58804:	beq	58824 <__assert_fail@plt+0x46138>
   58808:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5880c:	b	58848 <__assert_fail@plt+0x4615c>
   58810:	nop			; (mov r0, r0)
   58814:	b	58824 <__assert_fail@plt+0x46138>
   58818:	nop			; (mov r0, r0)
   5881c:	b	58824 <__assert_fail@plt+0x46138>
   58820:	nop			; (mov r0, r0)
   58824:	ldr	r3, [fp, #-16]
   58828:	add	r3, r3, #1
   5882c:	str	r3, [fp, #-16]
   58830:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58834:	ldr	r2, [r3, #8]
   58838:	ldr	r3, [fp, #-16]
   5883c:	cmp	r2, r3
   58840:	bgt	5844c <__assert_fail@plt+0x45d60>
   58844:	mov	r3, #0
   58848:	mov	r0, r3
   5884c:	sub	sp, fp, #8
   58850:	pop	{r4, fp, pc}
   58854:	andeq	pc, r3, r0, lsl #30
   58858:	push	{r4, fp, lr}
   5885c:	add	fp, sp, #8
   58860:	sub	sp, sp, #84	; 0x54
   58864:	str	r0, [fp, #-88]	; 0xffffffa8
   58868:	str	r1, [fp, #-92]	; 0xffffffa4
   5886c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58870:	ldr	r3, [r3, #84]	; 0x54
   58874:	str	r3, [fp, #-24]	; 0xffffffe8
   58878:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5887c:	ldr	r3, [r3, #40]	; 0x28
   58880:	str	r3, [fp, #-28]	; 0xffffffe4
   58884:	mov	r3, #0
   58888:	str	r3, [fp, #-16]
   5888c:	b	58e18 <__assert_fail@plt+0x4672c>
   58890:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58894:	ldr	r2, [r3, #8]
   58898:	ldr	r3, [fp, #-16]
   5889c:	lsl	r3, r3, #2
   588a0:	add	r3, r2, r3
   588a4:	ldr	r3, [r3]
   588a8:	str	r3, [fp, #-32]	; 0xffffffe0
   588ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   588b0:	ldr	r2, [r3]
   588b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   588b8:	lsl	r3, r3, #3
   588bc:	add	r3, r2, r3
   588c0:	str	r3, [fp, #-36]	; 0xffffffdc
   588c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   588c8:	ldrb	r3, [r3, #4]
   588cc:	cmp	r3, #4
   588d0:	bne	58e00 <__assert_fail@plt+0x46714>
   588d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   588d8:	ldr	r2, [r3, #4]
   588dc:	ldr	r3, [pc, #1400]	; 58e5c <__assert_fail@plt+0x46770>
   588e0:	and	r3, r3, r2
   588e4:	cmp	r3, #0
   588e8:	beq	589d8 <__assert_fail@plt+0x462ec>
   588ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   588f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   588f4:	ldr	r3, [r3, #88]	; 0x58
   588f8:	mov	r2, r3
   588fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   58900:	bl	46c18 <__assert_fail@plt+0x3452c>
   58904:	str	r0, [fp, #-40]	; 0xffffffd8
   58908:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5890c:	ldr	r3, [r3, #4]
   58910:	lsr	r3, r3, #8
   58914:	lsl	r3, r3, #22
   58918:	lsr	r3, r3, #22
   5891c:	uxth	r3, r3
   58920:	and	r3, r3, #4
   58924:	cmp	r3, #0
   58928:	beq	5893c <__assert_fail@plt+0x46250>
   5892c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58930:	and	r3, r3, #1
   58934:	cmp	r3, #0
   58938:	beq	58e08 <__assert_fail@plt+0x4671c>
   5893c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   58940:	ldr	r3, [r3, #4]
   58944:	lsr	r3, r3, #8
   58948:	lsl	r3, r3, #22
   5894c:	lsr	r3, r3, #22
   58950:	uxth	r3, r3
   58954:	and	r3, r3, #8
   58958:	cmp	r3, #0
   5895c:	beq	58970 <__assert_fail@plt+0x46284>
   58960:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58964:	and	r3, r3, #1
   58968:	cmp	r3, #0
   5896c:	bne	58e08 <__assert_fail@plt+0x4671c>
   58970:	ldr	r3, [fp, #-36]	; 0xffffffdc
   58974:	ldr	r3, [r3, #4]
   58978:	lsr	r3, r3, #8
   5897c:	lsl	r3, r3, #22
   58980:	lsr	r3, r3, #22
   58984:	uxth	r3, r3
   58988:	and	r3, r3, #32
   5898c:	cmp	r3, #0
   58990:	beq	589a4 <__assert_fail@plt+0x462b8>
   58994:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58998:	and	r3, r3, #2
   5899c:	cmp	r3, #0
   589a0:	beq	58e08 <__assert_fail@plt+0x4671c>
   589a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   589a8:	ldr	r3, [r3, #4]
   589ac:	lsr	r3, r3, #8
   589b0:	lsl	r3, r3, #22
   589b4:	lsr	r3, r3, #22
   589b8:	uxth	r3, r3
   589bc:	and	r3, r3, #128	; 0x80
   589c0:	cmp	r3, #0
   589c4:	beq	589d8 <__assert_fail@plt+0x462ec>
   589c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   589cc:	and	r3, r3, #8
   589d0:	cmp	r3, #0
   589d4:	beq	58e08 <__assert_fail@plt+0x4671c>
   589d8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   589dc:	ldr	r3, [r3, #108]	; 0x6c
   589e0:	str	r3, [fp, #-20]	; 0xffffffec
   589e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   589e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   589ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   589f0:	bl	58e60 <__assert_fail@plt+0x46774>
   589f4:	mov	r3, r0
   589f8:	str	r3, [fp, #-68]	; 0xffffffbc
   589fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58a00:	cmp	r3, #0
   58a04:	movne	r3, #1
   58a08:	moveq	r3, #0
   58a0c:	uxtb	r3, r3
   58a10:	cmp	r3, #0
   58a14:	bne	58e38 <__assert_fail@plt+0x4674c>
   58a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58a1c:	ldr	r2, [r3, #12]
   58a20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58a24:	lsl	r3, r3, #2
   58a28:	add	r3, r2, r3
   58a2c:	ldr	r3, [r3]
   58a30:	cmn	r3, #1
   58a34:	b	58de8 <__assert_fail@plt+0x466fc>
   58a38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58a3c:	ldr	r1, [r3, #116]	; 0x74
   58a40:	ldr	r2, [fp, #-20]	; 0xffffffec
   58a44:	mov	r3, r2
   58a48:	lsl	r3, r3, #1
   58a4c:	add	r3, r3, r2
   58a50:	lsl	r3, r3, #3
   58a54:	add	r3, r1, r3
   58a58:	str	r3, [fp, #-44]	; 0xffffffd4
   58a5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58a60:	ldr	r2, [r3]
   58a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58a68:	cmp	r2, r3
   58a6c:	bne	58dd8 <__assert_fail@plt+0x466ec>
   58a70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58a74:	ldr	r2, [r3, #4]
   58a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58a7c:	cmp	r2, r3
   58a80:	bne	58dd8 <__assert_fail@plt+0x466ec>
   58a84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58a88:	ldr	r2, [r3, #12]
   58a8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58a90:	ldr	r3, [r3, #8]
   58a94:	sub	r3, r2, r3
   58a98:	str	r3, [fp, #-48]	; 0xffffffd0
   58a9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   58aa0:	cmp	r3, #0
   58aa4:	bne	58af4 <__assert_fail@plt+0x46408>
   58aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58aac:	ldr	r1, [r3, #24]
   58ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58ab4:	ldr	r0, [r3, #20]
   58ab8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   58abc:	mov	r3, r2
   58ac0:	lsl	r3, r3, #1
   58ac4:	add	r3, r3, r2
   58ac8:	lsl	r3, r3, #2
   58acc:	add	r3, r0, r3
   58ad0:	ldr	r3, [r3, #8]
   58ad4:	ldr	r3, [r3]
   58ad8:	mov	r2, r3
   58adc:	mov	r3, r2
   58ae0:	lsl	r3, r3, #1
   58ae4:	add	r3, r3, r2
   58ae8:	lsl	r3, r3, #2
   58aec:	add	r3, r1, r3
   58af0:	b	58b2c <__assert_fail@plt+0x46440>
   58af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58af8:	ldr	r2, [r3, #24]
   58afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58b00:	ldr	r1, [r3, #12]
   58b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58b08:	lsl	r3, r3, #2
   58b0c:	add	r3, r1, r3
   58b10:	ldr	r3, [r3]
   58b14:	mov	r1, r3
   58b18:	mov	r3, r1
   58b1c:	lsl	r3, r3, #1
   58b20:	add	r3, r3, r1
   58b24:	lsl	r3, r3, #2
   58b28:	add	r3, r2, r3
   58b2c:	str	r3, [fp, #-52]	; 0xffffffcc
   58b30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58b34:	ldr	r2, [r3, #12]
   58b38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58b3c:	add	r2, r2, r3
   58b40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58b44:	ldr	r3, [r3, #8]
   58b48:	sub	r3, r2, r3
   58b4c:	str	r3, [fp, #-56]	; 0xffffffc8
   58b50:	ldr	r0, [fp, #-88]	; 0xffffffa8
   58b54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58b58:	sub	r1, r3, #1
   58b5c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58b60:	ldr	r3, [r3, #88]	; 0x58
   58b64:	mov	r2, r3
   58b68:	bl	46c18 <__assert_fail@plt+0x3452c>
   58b6c:	str	r0, [fp, #-40]	; 0xffffffd8
   58b70:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58b74:	ldr	r2, [r3, #100]	; 0x64
   58b78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58b7c:	lsl	r3, r3, #2
   58b80:	add	r3, r2, r3
   58b84:	ldr	r3, [r3]
   58b88:	str	r3, [fp, #-60]	; 0xffffffc4
   58b8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58b90:	ldr	r2, [r3, #100]	; 0x64
   58b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58b98:	lsl	r3, r3, #2
   58b9c:	add	r3, r2, r3
   58ba0:	ldr	r3, [r3]
   58ba4:	cmp	r3, #0
   58ba8:	beq	58bcc <__assert_fail@plt+0x464e0>
   58bac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58bb0:	ldr	r2, [r3, #100]	; 0x64
   58bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58bb8:	lsl	r3, r3, #2
   58bbc:	add	r3, r2, r3
   58bc0:	ldr	r3, [r3]
   58bc4:	ldr	r3, [r3, #8]
   58bc8:	b	58bd0 <__assert_fail@plt+0x464e4>
   58bcc:	mov	r3, #0
   58bd0:	str	r3, [fp, #-64]	; 0xffffffc0
   58bd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58bd8:	cmp	r3, #0
   58bdc:	bne	58c60 <__assert_fail@plt+0x46574>
   58be0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58be4:	ldr	r2, [r3, #100]	; 0x64
   58be8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58bec:	lsl	r3, r3, #2
   58bf0:	add	r4, r2, r3
   58bf4:	sub	r0, fp, #68	; 0x44
   58bf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58bfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   58c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   58c04:	bl	48930 <__assert_fail@plt+0x36244>
   58c08:	mov	r3, r0
   58c0c:	str	r3, [r4]
   58c10:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58c14:	ldr	r2, [r3, #100]	; 0x64
   58c18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58c1c:	lsl	r3, r3, #2
   58c20:	add	r3, r2, r3
   58c24:	ldr	r3, [r3]
   58c28:	cmp	r3, #0
   58c2c:	moveq	r3, #1
   58c30:	movne	r3, #0
   58c34:	uxtb	r3, r3
   58c38:	cmp	r3, #0
   58c3c:	beq	58d3c <__assert_fail@plt+0x46650>
   58c40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58c44:	cmp	r3, #0
   58c48:	movne	r3, #1
   58c4c:	moveq	r3, #0
   58c50:	uxtb	r3, r3
   58c54:	cmp	r3, #0
   58c58:	beq	58d3c <__assert_fail@plt+0x46650>
   58c5c:	b	58e4c <__assert_fail@plt+0x46760>
   58c60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58c64:	ldr	r1, [r3, #40]	; 0x28
   58c68:	sub	r3, fp, #80	; 0x50
   58c6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   58c70:	mov	r0, r3
   58c74:	bl	475c4 <__assert_fail@plt+0x34ed8>
   58c78:	mov	r3, r0
   58c7c:	str	r3, [fp, #-68]	; 0xffffffbc
   58c80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58c84:	cmp	r3, #0
   58c88:	movne	r3, #1
   58c8c:	moveq	r3, #0
   58c90:	uxtb	r3, r3
   58c94:	cmp	r3, #0
   58c98:	beq	58cac <__assert_fail@plt+0x465c0>
   58c9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58ca0:	mov	r0, r3
   58ca4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   58ca8:	b	58e4c <__assert_fail@plt+0x46760>
   58cac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58cb0:	ldr	r2, [r3, #100]	; 0x64
   58cb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58cb8:	lsl	r3, r3, #2
   58cbc:	add	r4, r2, r3
   58cc0:	sub	r2, fp, #80	; 0x50
   58cc4:	sub	r0, fp, #68	; 0x44
   58cc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58ccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   58cd0:	bl	48930 <__assert_fail@plt+0x36244>
   58cd4:	mov	r3, r0
   58cd8:	str	r3, [r4]
   58cdc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58ce0:	mov	r0, r3
   58ce4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   58ce8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58cec:	ldr	r2, [r3, #100]	; 0x64
   58cf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58cf4:	lsl	r3, r3, #2
   58cf8:	add	r3, r2, r3
   58cfc:	ldr	r3, [r3]
   58d00:	cmp	r3, #0
   58d04:	moveq	r3, #1
   58d08:	movne	r3, #0
   58d0c:	uxtb	r3, r3
   58d10:	cmp	r3, #0
   58d14:	beq	58d3c <__assert_fail@plt+0x46650>
   58d18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58d1c:	cmp	r3, #0
   58d20:	movne	r3, #1
   58d24:	moveq	r3, #0
   58d28:	uxtb	r3, r3
   58d2c:	cmp	r3, #0
   58d30:	beq	58d3c <__assert_fail@plt+0x46650>
   58d34:	nop			; (mov r0, r0)
   58d38:	b	58e4c <__assert_fail@plt+0x46760>
   58d3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   58d40:	cmp	r3, #0
   58d44:	bne	58ddc <__assert_fail@plt+0x466f0>
   58d48:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58d4c:	ldr	r2, [r3, #100]	; 0x64
   58d50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58d54:	lsl	r3, r3, #2
   58d58:	add	r3, r2, r3
   58d5c:	ldr	r3, [r3]
   58d60:	ldr	r2, [r3, #8]
   58d64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58d68:	cmp	r2, r3
   58d6c:	ble	58ddc <__assert_fail@plt+0x466f0>
   58d70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   58d74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   58d78:	ldr	r0, [fp, #-88]	; 0xffffffa8
   58d7c:	bl	582fc <__assert_fail@plt+0x45c10>
   58d80:	mov	r3, r0
   58d84:	str	r3, [fp, #-68]	; 0xffffffbc
   58d88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58d8c:	cmp	r3, #0
   58d90:	movne	r3, #1
   58d94:	moveq	r3, #0
   58d98:	uxtb	r3, r3
   58d9c:	cmp	r3, #0
   58da0:	bne	58e40 <__assert_fail@plt+0x46754>
   58da4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   58da8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   58dac:	bl	58858 <__assert_fail@plt+0x4616c>
   58db0:	mov	r3, r0
   58db4:	str	r3, [fp, #-68]	; 0xffffffbc
   58db8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58dbc:	cmp	r3, #0
   58dc0:	movne	r3, #1
   58dc4:	moveq	r3, #0
   58dc8:	uxtb	r3, r3
   58dcc:	cmp	r3, #0
   58dd0:	bne	58e48 <__assert_fail@plt+0x4675c>
   58dd4:	b	58ddc <__assert_fail@plt+0x466f0>
   58dd8:	nop			; (mov r0, r0)
   58ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   58de0:	add	r3, r3, #1
   58de4:	str	r3, [fp, #-20]	; 0xffffffec
   58de8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58dec:	ldr	r2, [r3, #108]	; 0x6c
   58df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   58df4:	cmp	r2, r3
   58df8:	bgt	58a38 <__assert_fail@plt+0x4634c>
   58dfc:	b	58e0c <__assert_fail@plt+0x46720>
   58e00:	nop			; (mov r0, r0)
   58e04:	b	58e0c <__assert_fail@plt+0x46720>
   58e08:	nop			; (mov r0, r0)
   58e0c:	ldr	r3, [fp, #-16]
   58e10:	add	r3, r3, #1
   58e14:	str	r3, [fp, #-16]
   58e18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58e1c:	ldr	r2, [r3, #4]
   58e20:	ldr	r3, [fp, #-16]
   58e24:	cmp	r2, r3
   58e28:	bgt	58890 <__assert_fail@plt+0x461a4>
   58e2c:	mov	r3, #0
   58e30:	str	r3, [fp, #-68]	; 0xffffffbc
   58e34:	b	58e4c <__assert_fail@plt+0x46760>
   58e38:	nop			; (mov r0, r0)
   58e3c:	b	58e4c <__assert_fail@plt+0x46760>
   58e40:	nop			; (mov r0, r0)
   58e44:	b	58e4c <__assert_fail@plt+0x46760>
   58e48:	nop			; (mov r0, r0)
   58e4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58e50:	mov	r0, r3
   58e54:	sub	sp, fp, #8
   58e58:	pop	{r4, fp, pc}
   58e5c:	andeq	pc, r3, r0, lsl #30
   58e60:	push	{fp, lr}
   58e64:	add	fp, sp, #4
   58e68:	sub	sp, sp, #96	; 0x60
   58e6c:	str	r0, [fp, #-72]	; 0xffffffb8
   58e70:	str	r1, [fp, #-76]	; 0xffffffb4
   58e74:	str	r2, [fp, #-80]	; 0xffffffb0
   58e78:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58e7c:	ldr	r3, [r3, #84]	; 0x54
   58e80:	str	r3, [fp, #-32]	; 0xffffffe0
   58e84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58e88:	ldr	r3, [r3, #4]
   58e8c:	str	r3, [fp, #-12]
   58e90:	ldr	r1, [fp, #-80]	; 0xffffffb0
   58e94:	ldr	r0, [fp, #-72]	; 0xffffffb8
   58e98:	bl	5cd1c <__assert_fail@plt+0x4a630>
   58e9c:	str	r0, [fp, #-36]	; 0xffffffdc
   58ea0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   58ea4:	cmn	r3, #1
   58ea8:	beq	58f04 <__assert_fail@plt+0x46818>
   58eac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58eb0:	ldr	r1, [r3, #116]	; 0x74
   58eb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   58eb8:	mov	r3, r2
   58ebc:	lsl	r3, r3, #1
   58ec0:	add	r3, r3, r2
   58ec4:	lsl	r3, r3, #3
   58ec8:	add	r3, r1, r3
   58ecc:	str	r3, [fp, #-16]
   58ed0:	ldr	r3, [fp, #-16]
   58ed4:	ldr	r2, [r3]
   58ed8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   58edc:	cmp	r2, r3
   58ee0:	bne	58eec <__assert_fail@plt+0x46800>
   58ee4:	mov	r3, #0
   58ee8:	b	59484 <__assert_fail@plt+0x46d98>
   58eec:	ldr	r3, [fp, #-16]
   58ef0:	add	r2, r3, #24
   58ef4:	str	r2, [fp, #-16]
   58ef8:	ldrb	r3, [r3, #20]
   58efc:	cmp	r3, #0
   58f00:	bne	58ed0 <__assert_fail@plt+0x467e4>
   58f04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58f08:	ldr	r2, [r3]
   58f0c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   58f10:	lsl	r3, r3, #3
   58f14:	add	r3, r2, r3
   58f18:	ldr	r3, [r3]
   58f1c:	str	r3, [fp, #-40]	; 0xffffffd8
   58f20:	mov	r3, #0
   58f24:	str	r3, [fp, #-8]
   58f28:	b	5946c <__assert_fail@plt+0x46d80>
   58f2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58f30:	ldr	r2, [r3, #132]	; 0x84
   58f34:	ldr	r3, [fp, #-8]
   58f38:	lsl	r3, r3, #2
   58f3c:	add	r3, r2, r3
   58f40:	ldr	r3, [r3]
   58f44:	str	r3, [fp, #-44]	; 0xffffffd4
   58f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58f4c:	ldr	r2, [r3]
   58f50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58f54:	ldr	r3, [r3, #4]
   58f58:	lsl	r3, r3, #3
   58f5c:	add	r3, r2, r3
   58f60:	ldr	r2, [r3]
   58f64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58f68:	cmp	r2, r3
   58f6c:	bne	59444 <__assert_fail@plt+0x46d58>
   58f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58f74:	ldr	r3, [r3]
   58f78:	str	r3, [fp, #-24]	; 0xffffffe8
   58f7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   58f80:	str	r3, [fp, #-28]	; 0xffffffe4
   58f84:	mov	r3, #0
   58f88:	str	r3, [fp, #-20]	; 0xffffffec
   58f8c:	b	5911c <__assert_fail@plt+0x46a30>
   58f90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58f94:	ldr	r2, [r3, #20]
   58f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   58f9c:	lsl	r3, r3, #2
   58fa0:	add	r3, r2, r3
   58fa4:	ldr	r3, [r3]
   58fa8:	str	r3, [fp, #-64]	; 0xffffffc0
   58fac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58fb0:	ldr	r2, [r3, #4]
   58fb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58fb8:	sub	r3, r2, r3
   58fbc:	str	r3, [fp, #-68]	; 0xffffffbc
   58fc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58fc4:	cmp	r3, #0
   58fc8:	ble	59090 <__assert_fail@plt+0x469a4>
   58fcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   58fd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58fd4:	add	r2, r2, r3
   58fd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   58fdc:	ldr	r3, [r3, #28]
   58fe0:	cmp	r2, r3
   58fe4:	movgt	r3, #1
   58fe8:	movle	r3, #0
   58fec:	uxtb	r3, r3
   58ff0:	cmp	r3, #0
   58ff4:	beq	59060 <__assert_fail@plt+0x46974>
   58ff8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   58ffc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59000:	add	r2, r2, r3
   59004:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59008:	ldr	r3, [r3, #48]	; 0x30
   5900c:	cmp	r2, r3
   59010:	bgt	59134 <__assert_fail@plt+0x46a48>
   59014:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59018:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5901c:	add	r3, r2, r3
   59020:	mov	r1, r3
   59024:	ldr	r0, [fp, #-72]	; 0xffffffb8
   59028:	bl	56590 <__assert_fail@plt+0x43ea4>
   5902c:	str	r0, [fp, #-60]	; 0xffffffc4
   59030:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59034:	cmp	r3, #0
   59038:	movne	r3, #1
   5903c:	moveq	r3, #0
   59040:	uxtb	r3, r3
   59044:	cmp	r3, #0
   59048:	beq	59054 <__assert_fail@plt+0x46968>
   5904c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59050:	b	59484 <__assert_fail@plt+0x46d98>
   59054:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59058:	ldr	r3, [r3, #4]
   5905c:	str	r3, [fp, #-12]
   59060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59064:	ldr	r2, [fp, #-12]
   59068:	add	r0, r2, r3
   5906c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59070:	ldr	r2, [fp, #-12]
   59074:	add	r3, r2, r3
   59078:	ldr	r2, [fp, #-68]	; 0xffffffbc
   5907c:	mov	r1, r3
   59080:	bl	12158 <memcmp@plt>
   59084:	mov	r3, r0
   59088:	cmp	r3, #0
   5908c:	bne	5913c <__assert_fail@plt+0x46a50>
   59090:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59094:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59098:	add	r3, r2, r3
   5909c:	str	r3, [fp, #-28]	; 0xffffffe4
   590a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   590a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   590a8:	add	r3, r2, r3
   590ac:	str	r3, [fp, #-24]	; 0xffffffe8
   590b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   590b4:	str	r3, [sp]
   590b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   590bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   590c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   590c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   590c8:	bl	59490 <__assert_fail@plt+0x46da4>
   590cc:	str	r0, [fp, #-60]	; 0xffffffc4
   590d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   590d4:	ldr	r3, [r3, #4]
   590d8:	str	r3, [fp, #-12]
   590dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   590e0:	cmp	r3, #1
   590e4:	beq	5910c <__assert_fail@plt+0x46a20>
   590e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   590ec:	cmp	r3, #0
   590f0:	movne	r3, #1
   590f4:	moveq	r3, #0
   590f8:	uxtb	r3, r3
   590fc:	cmp	r3, #0
   59100:	beq	59110 <__assert_fail@plt+0x46a24>
   59104:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59108:	b	59484 <__assert_fail@plt+0x46d98>
   5910c:	nop			; (mov r0, r0)
   59110:	ldr	r3, [fp, #-20]	; 0xffffffec
   59114:	add	r3, r3, #1
   59118:	str	r3, [fp, #-20]	; 0xffffffec
   5911c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59120:	ldr	r2, [r3, #16]
   59124:	ldr	r3, [fp, #-20]	; 0xffffffec
   59128:	cmp	r2, r3
   5912c:	bgt	58f90 <__assert_fail@plt+0x468a4>
   59130:	b	59140 <__assert_fail@plt+0x46a54>
   59134:	nop			; (mov r0, r0)
   59138:	b	59140 <__assert_fail@plt+0x46a54>
   5913c:	nop			; (mov r0, r0)
   59140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59144:	ldr	r2, [r3, #16]
   59148:	ldr	r3, [fp, #-20]	; 0xffffffec
   5914c:	cmp	r2, r3
   59150:	bgt	5944c <__assert_fail@plt+0x46d60>
   59154:	ldr	r3, [fp, #-20]	; 0xffffffec
   59158:	cmp	r3, #0
   5915c:	ble	59430 <__assert_fail@plt+0x46d44>
   59160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59164:	add	r3, r3, #1
   59168:	str	r3, [fp, #-24]	; 0xffffffe8
   5916c:	b	59430 <__assert_fail@plt+0x46d44>
   59170:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59174:	ldr	r3, [r3]
   59178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5917c:	sub	r3, r2, r3
   59180:	str	r3, [fp, #-48]	; 0xffffffd0
   59184:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59188:	cmp	r3, #0
   5918c:	ble	59248 <__assert_fail@plt+0x46b5c>
   59190:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59194:	ldr	r2, [r3, #28]
   59198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5919c:	cmp	r2, r3
   591a0:	movle	r3, #1
   591a4:	movgt	r3, #0
   591a8:	uxtb	r3, r3
   591ac:	cmp	r3, #0
   591b0:	beq	59210 <__assert_fail@plt+0x46b24>
   591b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   591b8:	ldr	r2, [r3, #48]	; 0x30
   591bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   591c0:	cmp	r2, r3
   591c4:	ble	59454 <__assert_fail@plt+0x46d68>
   591c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   591cc:	add	r3, r3, #1
   591d0:	mov	r1, r3
   591d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   591d8:	bl	5c594 <__assert_fail@plt+0x49ea8>
   591dc:	str	r0, [fp, #-60]	; 0xffffffc4
   591e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   591e4:	cmp	r3, #0
   591e8:	movne	r3, #1
   591ec:	moveq	r3, #0
   591f0:	uxtb	r3, r3
   591f4:	cmp	r3, #0
   591f8:	beq	59204 <__assert_fail@plt+0x46b18>
   591fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59200:	b	59484 <__assert_fail@plt+0x46d98>
   59204:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59208:	ldr	r3, [r3, #4]
   5920c:	str	r3, [fp, #-12]
   59210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59214:	add	r2, r3, #1
   59218:	str	r2, [fp, #-28]	; 0xffffffe4
   5921c:	mov	r2, r3
   59220:	ldr	r3, [fp, #-12]
   59224:	add	r3, r3, r2
   59228:	ldrb	r2, [r3]
   5922c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59230:	sub	r3, r3, #1
   59234:	ldr	r1, [fp, #-12]
   59238:	add	r3, r1, r3
   5923c:	ldrb	r3, [r3]
   59240:	cmp	r2, r3
   59244:	bne	5945c <__assert_fail@plt+0x46d70>
   59248:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5924c:	ldr	r2, [r3, #100]	; 0x64
   59250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59254:	lsl	r3, r3, #2
   59258:	add	r3, r2, r3
   5925c:	ldr	r3, [r3]
   59260:	cmp	r3, #0
   59264:	beq	59408 <__assert_fail@plt+0x46d1c>
   59268:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5926c:	ldr	r2, [r3, #100]	; 0x64
   59270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59274:	lsl	r3, r3, #2
   59278:	add	r3, r2, r3
   5927c:	ldr	r3, [r3]
   59280:	add	r3, r3, #4
   59284:	str	r3, [fp, #-52]	; 0xffffffcc
   59288:	mov	r3, #9
   5928c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   59290:	ldr	r1, [fp, #-52]	; 0xffffffcc
   59294:	ldr	r0, [fp, #-32]	; 0xffffffe0
   59298:	bl	5958c <__assert_fail@plt+0x46ea0>
   5929c:	str	r0, [fp, #-56]	; 0xffffffc8
   592a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   592a4:	cmn	r3, #1
   592a8:	beq	59410 <__assert_fail@plt+0x46d24>
   592ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   592b0:	ldr	r3, [r3, #8]
   592b4:	cmp	r3, #0
   592b8:	bne	59304 <__assert_fail@plt+0x46c18>
   592bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   592c0:	ldr	r3, [r3]
   592c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   592c8:	sub	r3, r2, r3
   592cc:	add	r3, r3, #1
   592d0:	mov	r1, r3
   592d4:	mov	r0, #12
   592d8:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   592dc:	mov	r3, r0
   592e0:	mov	r2, r3
   592e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   592e8:	str	r2, [r3, #8]
   592ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   592f0:	ldr	r3, [r3, #8]
   592f4:	cmp	r3, #0
   592f8:	bne	59304 <__assert_fail@plt+0x46c18>
   592fc:	mov	r3, #12
   59300:	b	59484 <__assert_fail@plt+0x46d98>
   59304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59308:	ldr	r1, [r3, #8]
   5930c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59310:	ldr	r2, [r3, #4]
   59314:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59318:	ldr	r0, [r3]
   5931c:	mov	r3, #9
   59320:	str	r3, [sp, #8]
   59324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59328:	str	r3, [sp, #4]
   5932c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59330:	str	r3, [sp]
   59334:	mov	r3, r0
   59338:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5933c:	bl	59650 <__assert_fail@plt+0x46f64>
   59340:	str	r0, [fp, #-60]	; 0xffffffc4
   59344:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59348:	cmp	r3, #1
   5934c:	beq	59418 <__assert_fail@plt+0x46d2c>
   59350:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59354:	cmp	r3, #0
   59358:	movne	r3, #1
   5935c:	moveq	r3, #0
   59360:	uxtb	r3, r3
   59364:	cmp	r3, #0
   59368:	beq	59374 <__assert_fail@plt+0x46c88>
   5936c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59370:	b	59484 <__assert_fail@plt+0x46d98>
   59374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59378:	ldr	r1, [fp, #-56]	; 0xffffffc8
   5937c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   59380:	bl	5cfb0 <__assert_fail@plt+0x4a8c4>
   59384:	str	r0, [fp, #-64]	; 0xffffffc0
   59388:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5938c:	cmp	r3, #0
   59390:	moveq	r3, #1
   59394:	movne	r3, #0
   59398:	uxtb	r3, r3
   5939c:	cmp	r3, #0
   593a0:	beq	593ac <__assert_fail@plt+0x46cc0>
   593a4:	mov	r3, #12
   593a8:	b	59484 <__assert_fail@plt+0x46d98>
   593ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   593b0:	str	r3, [sp]
   593b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   593b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   593bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   593c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   593c4:	bl	59490 <__assert_fail@plt+0x46da4>
   593c8:	str	r0, [fp, #-60]	; 0xffffffc4
   593cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   593d0:	ldr	r3, [r3, #4]
   593d4:	str	r3, [fp, #-12]
   593d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   593dc:	cmp	r3, #1
   593e0:	beq	59420 <__assert_fail@plt+0x46d34>
   593e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   593e8:	cmp	r3, #0
   593ec:	movne	r3, #1
   593f0:	moveq	r3, #0
   593f4:	uxtb	r3, r3
   593f8:	cmp	r3, #0
   593fc:	beq	59424 <__assert_fail@plt+0x46d38>
   59400:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59404:	b	59484 <__assert_fail@plt+0x46d98>
   59408:	nop			; (mov r0, r0)
   5940c:	b	59424 <__assert_fail@plt+0x46d38>
   59410:	nop			; (mov r0, r0)
   59414:	b	59424 <__assert_fail@plt+0x46d38>
   59418:	nop			; (mov r0, r0)
   5941c:	b	59424 <__assert_fail@plt+0x46d38>
   59420:	nop			; (mov r0, r0)
   59424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59428:	add	r3, r3, #1
   5942c:	str	r3, [fp, #-24]	; 0xffffffe8
   59430:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59434:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59438:	cmp	r2, r3
   5943c:	ble	59170 <__assert_fail@plt+0x46a84>
   59440:	b	59460 <__assert_fail@plt+0x46d74>
   59444:	nop			; (mov r0, r0)
   59448:	b	59460 <__assert_fail@plt+0x46d74>
   5944c:	nop			; (mov r0, r0)
   59450:	b	59460 <__assert_fail@plt+0x46d74>
   59454:	nop			; (mov r0, r0)
   59458:	b	59460 <__assert_fail@plt+0x46d74>
   5945c:	nop			; (mov r0, r0)
   59460:	ldr	r3, [fp, #-8]
   59464:	add	r3, r3, #1
   59468:	str	r3, [fp, #-8]
   5946c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59470:	ldr	r2, [r3, #124]	; 0x7c
   59474:	ldr	r3, [fp, #-8]
   59478:	cmp	r2, r3
   5947c:	bgt	58f2c <__assert_fail@plt+0x46840>
   59480:	mov	r3, #0
   59484:	mov	r0, r3
   59488:	sub	sp, fp, #4
   5948c:	pop	{fp, pc}
   59490:	push	{fp, lr}
   59494:	add	fp, sp, #4
   59498:	sub	sp, sp, #40	; 0x28
   5949c:	str	r0, [fp, #-16]
   594a0:	str	r1, [fp, #-20]	; 0xffffffec
   594a4:	str	r2, [fp, #-24]	; 0xffffffe8
   594a8:	str	r3, [fp, #-28]	; 0xffffffe4
   594ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   594b0:	add	r1, r3, #8
   594b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   594b8:	ldr	r2, [r3]
   594bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   594c0:	ldr	r0, [r3, #4]
   594c4:	mov	r3, #8
   594c8:	str	r3, [sp, #8]
   594cc:	ldr	r3, [fp, #4]
   594d0:	str	r3, [sp, #4]
   594d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   594d8:	str	r3, [sp]
   594dc:	mov	r3, r0
   594e0:	ldr	r0, [fp, #-16]
   594e4:	bl	59650 <__assert_fail@plt+0x46f64>
   594e8:	str	r0, [fp, #-8]
   594ec:	ldr	r3, [fp, #-8]
   594f0:	cmp	r3, #0
   594f4:	beq	59500 <__assert_fail@plt+0x46e14>
   594f8:	ldr	r3, [fp, #-8]
   594fc:	b	59580 <__assert_fail@plt+0x46e94>
   59500:	ldr	r3, [fp, #-20]	; 0xffffffec
   59504:	ldr	r2, [r3]
   59508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5950c:	ldr	r3, [r3, #4]
   59510:	str	r3, [sp]
   59514:	mov	r3, r2
   59518:	ldr	r2, [fp, #4]
   5951c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   59520:	ldr	r0, [fp, #-16]
   59524:	bl	5ca14 <__assert_fail@plt+0x4a328>
   59528:	str	r0, [fp, #-8]
   5952c:	ldr	r3, [fp, #-8]
   59530:	cmp	r3, #0
   59534:	movne	r3, #1
   59538:	moveq	r3, #0
   5953c:	uxtb	r3, r3
   59540:	cmp	r3, #0
   59544:	beq	59550 <__assert_fail@plt+0x46e64>
   59548:	ldr	r3, [fp, #-8]
   5954c:	b	59580 <__assert_fail@plt+0x46e94>
   59550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59554:	ldr	r2, [r3, #4]
   59558:	ldr	r3, [fp, #4]
   5955c:	add	r2, r2, r3
   59560:	ldr	r3, [fp, #-20]	; 0xffffffec
   59564:	ldr	r3, [r3]
   59568:	sub	r3, r2, r3
   5956c:	str	r3, [fp, #-12]
   59570:	ldr	r1, [fp, #-12]
   59574:	ldr	r0, [fp, #-16]
   59578:	bl	56590 <__assert_fail@plt+0x43ea4>
   5957c:	mov	r3, r0
   59580:	mov	r0, r3
   59584:	sub	sp, fp, #4
   59588:	pop	{fp, pc}
   5958c:	push	{fp}		; (str fp, [sp, #-4]!)
   59590:	add	fp, sp, #0
   59594:	sub	sp, sp, #36	; 0x24
   59598:	str	r0, [fp, #-24]	; 0xffffffe8
   5959c:	str	r1, [fp, #-28]	; 0xffffffe4
   595a0:	str	r2, [fp, #-32]	; 0xffffffe0
   595a4:	str	r3, [fp, #-36]	; 0xffffffdc
   595a8:	mov	r3, #0
   595ac:	str	r3, [fp, #-8]
   595b0:	b	59628 <__assert_fail@plt+0x46f3c>
   595b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   595b8:	ldr	r2, [r3, #8]
   595bc:	ldr	r3, [fp, #-8]
   595c0:	lsl	r3, r3, #2
   595c4:	add	r3, r2, r3
   595c8:	ldr	r3, [r3]
   595cc:	str	r3, [fp, #-12]
   595d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   595d4:	ldr	r2, [r3]
   595d8:	ldr	r3, [fp, #-12]
   595dc:	lsl	r3, r3, #3
   595e0:	add	r3, r2, r3
   595e4:	str	r3, [fp, #-16]
   595e8:	ldr	r3, [fp, #-16]
   595ec:	ldrb	r3, [r3, #4]
   595f0:	mov	r2, r3
   595f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   595f8:	cmp	r2, r3
   595fc:	bne	5961c <__assert_fail@plt+0x46f30>
   59600:	ldr	r3, [fp, #-16]
   59604:	ldr	r2, [r3]
   59608:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5960c:	cmp	r2, r3
   59610:	bne	5961c <__assert_fail@plt+0x46f30>
   59614:	ldr	r3, [fp, #-12]
   59618:	b	59640 <__assert_fail@plt+0x46f54>
   5961c:	ldr	r3, [fp, #-8]
   59620:	add	r3, r3, #1
   59624:	str	r3, [fp, #-8]
   59628:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5962c:	ldr	r2, [r3, #4]
   59630:	ldr	r3, [fp, #-8]
   59634:	cmp	r2, r3
   59638:	bgt	595b4 <__assert_fail@plt+0x46ec8>
   5963c:	mvn	r3, #0
   59640:	mov	r0, r3
   59644:	add	sp, fp, #0
   59648:	pop	{fp}		; (ldr fp, [sp], #4)
   5964c:	bx	lr
   59650:	push	{fp, lr}
   59654:	add	fp, sp, #4
   59658:	sub	sp, sp, #96	; 0x60
   5965c:	str	r0, [fp, #-80]	; 0xffffffb0
   59660:	str	r1, [fp, #-84]	; 0xffffffac
   59664:	str	r2, [fp, #-88]	; 0xffffffa8
   59668:	str	r3, [fp, #-92]	; 0xffffffa4
   5966c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59670:	ldr	r3, [r3, #84]	; 0x54
   59674:	str	r3, [fp, #-20]	; 0xffffffec
   59678:	mov	r3, #0
   5967c:	str	r3, [fp, #-60]	; 0xffffffc4
   59680:	mov	r3, #0
   59684:	str	r3, [fp, #-16]
   59688:	ldr	r3, [fp, #-20]	; 0xffffffec
   5968c:	ldr	r2, [r3]
   59690:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59694:	lsl	r3, r3, #3
   59698:	add	r3, r2, r3
   5969c:	ldr	r3, [r3]
   596a0:	str	r3, [fp, #-24]	; 0xffffffe8
   596a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   596a8:	ldr	r2, [r3, #4]
   596ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   596b0:	ldr	r1, [r3, #120]	; 0x78
   596b4:	ldr	r3, [fp, #8]
   596b8:	add	r3, r1, r3
   596bc:	add	r3, r3, #1
   596c0:	cmp	r2, r3
   596c4:	movlt	r3, #1
   596c8:	movge	r3, #0
   596cc:	uxtb	r3, r3
   596d0:	cmp	r3, #0
   596d4:	beq	597ec <__assert_fail@plt+0x47100>
   596d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   596dc:	ldr	r3, [r3, #4]
   596e0:	str	r3, [fp, #-28]	; 0xffffffe4
   596e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   596e8:	ldr	r2, [r3, #120]	; 0x78
   596ec:	ldr	r3, [fp, #8]
   596f0:	add	r3, r2, r3
   596f4:	add	r3, r3, #1
   596f8:	str	r3, [fp, #-32]	; 0xffffffe0
   596fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59700:	mvn	r3, #-2147483648	; 0x80000000
   59704:	sub	r3, r3, r2
   59708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5970c:	cmp	r3, r2
   59710:	movlt	r3, #1
   59714:	movge	r3, #0
   59718:	uxtb	r3, r3
   5971c:	cmp	r3, #0
   59720:	beq	5972c <__assert_fail@plt+0x47040>
   59724:	mov	r3, #12
   59728:	b	59de8 <__assert_fail@plt+0x476fc>
   5972c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59730:	ldr	r3, [fp, #-32]	; 0xffffffe0
   59734:	add	r3, r2, r3
   59738:	str	r3, [fp, #-36]	; 0xffffffdc
   5973c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   59740:	cmn	r3, #-1073741823	; 0xc0000001
   59744:	movhi	r3, #1
   59748:	movls	r3, #0
   5974c:	uxtb	r3, r3
   59750:	cmp	r3, #0
   59754:	beq	59760 <__assert_fail@plt+0x47074>
   59758:	mov	r3, #12
   5975c:	b	59de8 <__assert_fail@plt+0x476fc>
   59760:	ldr	r3, [fp, #-84]	; 0xffffffac
   59764:	ldr	r2, [r3, #8]
   59768:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5976c:	lsl	r3, r3, #2
   59770:	mov	r1, r3
   59774:	mov	r0, r2
   59778:	bl	43d30 <__assert_fail@plt+0x31644>
   5977c:	str	r0, [fp, #-40]	; 0xffffffd8
   59780:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59784:	cmp	r3, #0
   59788:	moveq	r3, #1
   5978c:	movne	r3, #0
   59790:	uxtb	r3, r3
   59794:	cmp	r3, #0
   59798:	beq	597a4 <__assert_fail@plt+0x470b8>
   5979c:	mov	r3, #12
   597a0:	b	59de8 <__assert_fail@plt+0x476fc>
   597a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   597a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   597ac:	str	r2, [r3, #8]
   597b0:	ldr	r3, [fp, #-84]	; 0xffffffac
   597b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   597b8:	str	r2, [r3, #4]
   597bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   597c0:	lsl	r3, r3, #2
   597c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   597c8:	add	r0, r2, r3
   597cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   597d0:	ldr	r2, [r3, #4]
   597d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   597d8:	sub	r3, r2, r3
   597dc:	lsl	r3, r3, #2
   597e0:	mov	r2, r3
   597e4:	mov	r1, #0
   597e8:	bl	12434 <memset@plt>
   597ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   597f0:	ldr	r3, [r3]
   597f4:	cmp	r3, #0
   597f8:	beq	59808 <__assert_fail@plt+0x4711c>
   597fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   59800:	ldr	r3, [r3]
   59804:	b	5980c <__assert_fail@plt+0x47120>
   59808:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5980c:	str	r3, [fp, #-8]
   59810:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59814:	ldr	r3, [r3, #100]	; 0x64
   59818:	str	r3, [fp, #-44]	; 0xffffffd4
   5981c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59820:	ldr	r3, [r3, #40]	; 0x28
   59824:	str	r3, [fp, #-48]	; 0xffffffd0
   59828:	ldr	r3, [fp, #-84]	; 0xffffffac
   5982c:	ldr	r2, [r3, #8]
   59830:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59834:	str	r2, [r3, #100]	; 0x64
   59838:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5983c:	ldr	r2, [fp, #-8]
   59840:	str	r2, [r3, #40]	; 0x28
   59844:	ldr	r0, [fp, #-80]	; 0xffffffb0
   59848:	ldr	r3, [fp, #-8]
   5984c:	sub	r1, r3, #1
   59850:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59854:	ldr	r3, [r3, #88]	; 0x58
   59858:	mov	r2, r3
   5985c:	bl	46c18 <__assert_fail@plt+0x3452c>
   59860:	str	r0, [fp, #-52]	; 0xffffffcc
   59864:	ldr	r2, [fp, #-8]
   59868:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5986c:	cmp	r2, r3
   59870:	bne	598fc <__assert_fail@plt+0x47210>
   59874:	sub	r3, fp, #72	; 0x48
   59878:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5987c:	mov	r0, r3
   59880:	bl	46e84 <__assert_fail@plt+0x34798>
   59884:	mov	r3, r0
   59888:	str	r3, [fp, #-60]	; 0xffffffc4
   5988c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59890:	cmp	r3, #0
   59894:	movne	r3, #1
   59898:	moveq	r3, #0
   5989c:	uxtb	r3, r3
   598a0:	cmp	r3, #0
   598a4:	beq	598b0 <__assert_fail@plt+0x471c4>
   598a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   598ac:	b	59de8 <__assert_fail@plt+0x476fc>
   598b0:	sub	r1, fp, #72	; 0x48
   598b4:	ldr	r3, [fp, #12]
   598b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   598bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   598c0:	bl	5a11c <__assert_fail@plt+0x47a30>
   598c4:	mov	r3, r0
   598c8:	str	r3, [fp, #-60]	; 0xffffffc4
   598cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   598d0:	cmp	r3, #0
   598d4:	movne	r3, #1
   598d8:	moveq	r3, #0
   598dc:	uxtb	r3, r3
   598e0:	cmp	r3, #0
   598e4:	beq	59994 <__assert_fail@plt+0x472a8>
   598e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   598ec:	mov	r0, r3
   598f0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   598f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   598f8:	b	59de8 <__assert_fail@plt+0x476fc>
   598fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59900:	ldr	r2, [r3, #100]	; 0x64
   59904:	ldr	r3, [fp, #-8]
   59908:	lsl	r3, r3, #2
   5990c:	add	r3, r2, r3
   59910:	ldr	r3, [r3]
   59914:	str	r3, [fp, #-16]
   59918:	ldr	r3, [fp, #-16]
   5991c:	cmp	r3, #0
   59920:	beq	59980 <__assert_fail@plt+0x47294>
   59924:	ldr	r3, [fp, #-16]
   59928:	ldrb	r3, [r3, #52]	; 0x34
   5992c:	and	r3, r3, #64	; 0x40
   59930:	uxtb	r3, r3
   59934:	cmp	r3, #0
   59938:	beq	59980 <__assert_fail@plt+0x47294>
   5993c:	ldr	r3, [fp, #-16]
   59940:	add	r2, r3, #4
   59944:	sub	r3, fp, #72	; 0x48
   59948:	mov	r1, r2
   5994c:	mov	r0, r3
   59950:	bl	47038 <__assert_fail@plt+0x3494c>
   59954:	mov	r3, r0
   59958:	str	r3, [fp, #-60]	; 0xffffffc4
   5995c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59960:	cmp	r3, #0
   59964:	movne	r3, #1
   59968:	moveq	r3, #0
   5996c:	uxtb	r3, r3
   59970:	cmp	r3, #0
   59974:	beq	59994 <__assert_fail@plt+0x472a8>
   59978:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5997c:	b	59de8 <__assert_fail@plt+0x476fc>
   59980:	sub	r3, fp, #72	; 0x48
   59984:	mov	r2, #12
   59988:	mov	r1, #0
   5998c:	mov	r0, r3
   59990:	bl	12434 <memset@plt>
   59994:	ldr	r2, [fp, #-8]
   59998:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5999c:	cmp	r2, r3
   599a0:	beq	599c8 <__assert_fail@plt+0x472dc>
   599a4:	ldr	r3, [fp, #-16]
   599a8:	cmp	r3, #0
   599ac:	beq	59aa8 <__assert_fail@plt+0x473bc>
   599b0:	ldr	r3, [fp, #-16]
   599b4:	ldrb	r3, [r3, #52]	; 0x34
   599b8:	and	r3, r3, #64	; 0x40
   599bc:	uxtb	r3, r3
   599c0:	cmp	r3, #0
   599c4:	beq	59aa8 <__assert_fail@plt+0x473bc>
   599c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   599cc:	cmp	r3, #0
   599d0:	beq	59a28 <__assert_fail@plt+0x4733c>
   599d4:	sub	r1, fp, #72	; 0x48
   599d8:	ldr	r3, [fp, #12]
   599dc:	str	r3, [sp]
   599e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   599e4:	ldr	r2, [fp, #-8]
   599e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   599ec:	bl	5a4e4 <__assert_fail@plt+0x47df8>
   599f0:	mov	r3, r0
   599f4:	str	r3, [fp, #-60]	; 0xffffffc4
   599f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   599fc:	cmp	r3, #0
   59a00:	movne	r3, #1
   59a04:	moveq	r3, #0
   59a08:	uxtb	r3, r3
   59a0c:	cmp	r3, #0
   59a10:	beq	59a28 <__assert_fail@plt+0x4733c>
   59a14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59a18:	mov	r0, r3
   59a1c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59a20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59a24:	b	59de8 <__assert_fail@plt+0x476fc>
   59a28:	sub	r2, fp, #72	; 0x48
   59a2c:	sub	r0, fp, #60	; 0x3c
   59a30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59a34:	ldr	r1, [fp, #-20]	; 0xffffffec
   59a38:	bl	48930 <__assert_fail@plt+0x36244>
   59a3c:	str	r0, [fp, #-16]
   59a40:	ldr	r3, [fp, #-16]
   59a44:	cmp	r3, #0
   59a48:	moveq	r3, #1
   59a4c:	movne	r3, #0
   59a50:	uxtb	r3, r3
   59a54:	cmp	r3, #0
   59a58:	beq	59a8c <__assert_fail@plt+0x473a0>
   59a5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59a60:	cmp	r3, #0
   59a64:	movne	r3, #1
   59a68:	moveq	r3, #0
   59a6c:	uxtb	r3, r3
   59a70:	cmp	r3, #0
   59a74:	beq	59a8c <__assert_fail@plt+0x473a0>
   59a78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59a7c:	mov	r0, r3
   59a80:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59a84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59a88:	b	59de8 <__assert_fail@plt+0x476fc>
   59a8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59a90:	ldr	r2, [r3, #100]	; 0x64
   59a94:	ldr	r3, [fp, #-8]
   59a98:	lsl	r3, r3, #2
   59a9c:	add	r3, r2, r3
   59aa0:	ldr	r2, [fp, #-16]
   59aa4:	str	r2, [r3]
   59aa8:	mov	r3, #0
   59aac:	str	r3, [fp, #-12]
   59ab0:	b	59d1c <__assert_fail@plt+0x47630>
   59ab4:	mov	r3, #0
   59ab8:	str	r3, [fp, #-68]	; 0xffffffbc
   59abc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59ac0:	ldr	r2, [r3, #100]	; 0x64
   59ac4:	ldr	r3, [fp, #-8]
   59ac8:	add	r3, r3, #1
   59acc:	lsl	r3, r3, #2
   59ad0:	add	r3, r2, r3
   59ad4:	ldr	r3, [r3]
   59ad8:	cmp	r3, #0
   59adc:	beq	59b48 <__assert_fail@plt+0x4745c>
   59ae0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59ae4:	ldr	r2, [r3, #100]	; 0x64
   59ae8:	ldr	r3, [fp, #-8]
   59aec:	add	r3, r3, #1
   59af0:	lsl	r3, r3, #2
   59af4:	add	r3, r2, r3
   59af8:	ldr	r3, [r3]
   59afc:	add	r2, r3, #4
   59b00:	sub	r3, fp, #72	; 0x48
   59b04:	mov	r1, r2
   59b08:	mov	r0, r3
   59b0c:	bl	47940 <__assert_fail@plt+0x35254>
   59b10:	mov	r3, r0
   59b14:	str	r3, [fp, #-60]	; 0xffffffc4
   59b18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59b1c:	cmp	r3, #0
   59b20:	movne	r3, #1
   59b24:	moveq	r3, #0
   59b28:	uxtb	r3, r3
   59b2c:	cmp	r3, #0
   59b30:	beq	59b48 <__assert_fail@plt+0x4745c>
   59b34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59b38:	mov	r0, r3
   59b3c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59b40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59b44:	b	59de8 <__assert_fail@plt+0x476fc>
   59b48:	ldr	r3, [fp, #-16]
   59b4c:	cmp	r3, #0
   59b50:	beq	59ba4 <__assert_fail@plt+0x474b8>
   59b54:	ldr	r3, [fp, #-16]
   59b58:	add	r2, r3, #16
   59b5c:	sub	r3, fp, #72	; 0x48
   59b60:	ldr	r1, [fp, #-8]
   59b64:	ldr	r0, [fp, #-80]	; 0xffffffb0
   59b68:	bl	59df4 <__assert_fail@plt+0x47708>
   59b6c:	mov	r3, r0
   59b70:	str	r3, [fp, #-60]	; 0xffffffc4
   59b74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59b78:	cmp	r3, #0
   59b7c:	movne	r3, #1
   59b80:	moveq	r3, #0
   59b84:	uxtb	r3, r3
   59b88:	cmp	r3, #0
   59b8c:	beq	59ba4 <__assert_fail@plt+0x474b8>
   59b90:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59b94:	mov	r0, r3
   59b98:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59b9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59ba0:	b	59de8 <__assert_fail@plt+0x476fc>
   59ba4:	ldr	r3, [fp, #-8]
   59ba8:	add	r3, r3, #1
   59bac:	str	r3, [fp, #-8]
   59bb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59bb4:	cmp	r3, #0
   59bb8:	beq	59c5c <__assert_fail@plt+0x47570>
   59bbc:	sub	r1, fp, #72	; 0x48
   59bc0:	ldr	r3, [fp, #12]
   59bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59bc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   59bcc:	bl	5a11c <__assert_fail@plt+0x47a30>
   59bd0:	mov	r3, r0
   59bd4:	str	r3, [fp, #-60]	; 0xffffffc4
   59bd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59bdc:	cmp	r3, #0
   59be0:	movne	r3, #1
   59be4:	moveq	r3, #0
   59be8:	uxtb	r3, r3
   59bec:	cmp	r3, #0
   59bf0:	beq	59c08 <__assert_fail@plt+0x4751c>
   59bf4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59bf8:	mov	r0, r3
   59bfc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59c00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59c04:	b	59de8 <__assert_fail@plt+0x476fc>
   59c08:	sub	r1, fp, #72	; 0x48
   59c0c:	ldr	r3, [fp, #12]
   59c10:	str	r3, [sp]
   59c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59c18:	ldr	r2, [fp, #-8]
   59c1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   59c20:	bl	5a4e4 <__assert_fail@plt+0x47df8>
   59c24:	mov	r3, r0
   59c28:	str	r3, [fp, #-60]	; 0xffffffc4
   59c2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59c30:	cmp	r3, #0
   59c34:	movne	r3, #1
   59c38:	moveq	r3, #0
   59c3c:	uxtb	r3, r3
   59c40:	cmp	r3, #0
   59c44:	beq	59c5c <__assert_fail@plt+0x47570>
   59c48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59c4c:	mov	r0, r3
   59c50:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59c54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59c58:	b	59de8 <__assert_fail@plt+0x476fc>
   59c5c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   59c60:	ldr	r3, [fp, #-8]
   59c64:	sub	r1, r3, #1
   59c68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59c6c:	ldr	r3, [r3, #88]	; 0x58
   59c70:	mov	r2, r3
   59c74:	bl	46c18 <__assert_fail@plt+0x3452c>
   59c78:	str	r0, [fp, #-52]	; 0xffffffcc
   59c7c:	sub	r2, fp, #72	; 0x48
   59c80:	sub	r0, fp, #60	; 0x3c
   59c84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59c88:	ldr	r1, [fp, #-20]	; 0xffffffec
   59c8c:	bl	48930 <__assert_fail@plt+0x36244>
   59c90:	str	r0, [fp, #-16]
   59c94:	ldr	r3, [fp, #-16]
   59c98:	cmp	r3, #0
   59c9c:	moveq	r3, #1
   59ca0:	movne	r3, #0
   59ca4:	uxtb	r3, r3
   59ca8:	cmp	r3, #0
   59cac:	beq	59ce0 <__assert_fail@plt+0x475f4>
   59cb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59cb4:	cmp	r3, #0
   59cb8:	movne	r3, #1
   59cbc:	moveq	r3, #0
   59cc0:	uxtb	r3, r3
   59cc4:	cmp	r3, #0
   59cc8:	beq	59ce0 <__assert_fail@plt+0x475f4>
   59ccc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59cd0:	mov	r0, r3
   59cd4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59cd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59cdc:	b	59de8 <__assert_fail@plt+0x476fc>
   59ce0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59ce4:	ldr	r2, [r3, #100]	; 0x64
   59ce8:	ldr	r3, [fp, #-8]
   59cec:	lsl	r3, r3, #2
   59cf0:	add	r3, r2, r3
   59cf4:	ldr	r2, [fp, #-16]
   59cf8:	str	r2, [r3]
   59cfc:	ldr	r3, [fp, #-16]
   59d00:	cmp	r3, #0
   59d04:	bne	59d14 <__assert_fail@plt+0x47628>
   59d08:	ldr	r3, [fp, #-12]
   59d0c:	add	r3, r3, #1
   59d10:	b	59d18 <__assert_fail@plt+0x4762c>
   59d14:	mov	r3, #0
   59d18:	str	r3, [fp, #-12]
   59d1c:	ldr	r2, [fp, #-8]
   59d20:	ldr	r3, [fp, #8]
   59d24:	cmp	r2, r3
   59d28:	bge	59d40 <__assert_fail@plt+0x47654>
   59d2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59d30:	ldr	r2, [r3, #120]	; 0x78
   59d34:	ldr	r3, [fp, #-12]
   59d38:	cmp	r2, r3
   59d3c:	bge	59ab4 <__assert_fail@plt+0x473c8>
   59d40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59d44:	mov	r0, r3
   59d48:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59d4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59d50:	ldr	r2, [r3, #100]	; 0x64
   59d54:	ldr	r3, [fp, #8]
   59d58:	lsl	r3, r3, #2
   59d5c:	add	r3, r2, r3
   59d60:	ldr	r3, [r3]
   59d64:	cmp	r3, #0
   59d68:	beq	59d8c <__assert_fail@plt+0x476a0>
   59d6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59d70:	ldr	r2, [r3, #100]	; 0x64
   59d74:	ldr	r3, [fp, #8]
   59d78:	lsl	r3, r3, #2
   59d7c:	add	r3, r2, r3
   59d80:	ldr	r3, [r3]
   59d84:	add	r3, r3, #4
   59d88:	b	59d90 <__assert_fail@plt+0x476a4>
   59d8c:	mov	r3, #0
   59d90:	str	r3, [fp, #-56]	; 0xffffffc8
   59d94:	ldr	r3, [fp, #-84]	; 0xffffffac
   59d98:	ldr	r2, [fp, #-8]
   59d9c:	str	r2, [r3]
   59da0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59da4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   59da8:	str	r2, [r3, #100]	; 0x64
   59dac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59db0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   59db4:	str	r2, [r3, #40]	; 0x28
   59db8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59dbc:	cmp	r3, #0
   59dc0:	beq	59de4 <__assert_fail@plt+0x476f8>
   59dc4:	ldr	r1, [fp, #4]
   59dc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   59dcc:	bl	481a4 <__assert_fail@plt+0x35ab8>
   59dd0:	mov	r3, r0
   59dd4:	cmp	r3, #0
   59dd8:	beq	59de4 <__assert_fail@plt+0x476f8>
   59ddc:	mov	r3, #0
   59de0:	b	59de8 <__assert_fail@plt+0x476fc>
   59de4:	mov	r3, #1
   59de8:	mov	r0, r3
   59dec:	sub	sp, fp, #4
   59df0:	pop	{fp, pc}
   59df4:	push	{r4, fp, lr}
   59df8:	add	fp, sp, #8
   59dfc:	sub	sp, sp, #68	; 0x44
   59e00:	str	r0, [fp, #-64]	; 0xffffffc0
   59e04:	str	r1, [fp, #-68]	; 0xffffffbc
   59e08:	str	r2, [fp, #-72]	; 0xffffffb8
   59e0c:	str	r3, [fp, #-76]	; 0xffffffb4
   59e10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59e14:	ldr	r3, [r3, #84]	; 0x54
   59e18:	str	r3, [fp, #-24]	; 0xffffffe8
   59e1c:	mov	r3, #0
   59e20:	str	r3, [fp, #-48]	; 0xffffffd0
   59e24:	sub	r3, fp, #60	; 0x3c
   59e28:	mov	r2, #12
   59e2c:	mov	r1, #0
   59e30:	mov	r0, r3
   59e34:	bl	12434 <memset@plt>
   59e38:	mov	r3, #0
   59e3c:	str	r3, [fp, #-16]
   59e40:	b	5a0ec <__assert_fail@plt+0x47a00>
   59e44:	mov	r3, #0
   59e48:	str	r3, [fp, #-20]	; 0xffffffec
   59e4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59e50:	ldr	r2, [r3, #8]
   59e54:	ldr	r3, [fp, #-16]
   59e58:	lsl	r3, r3, #2
   59e5c:	add	r3, r2, r3
   59e60:	ldr	r3, [r3]
   59e64:	str	r3, [fp, #-28]	; 0xffffffe4
   59e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59e6c:	ldr	r2, [r3]
   59e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59e74:	lsl	r3, r3, #3
   59e78:	add	r3, r2, r3
   59e7c:	ldrb	r3, [r3, #4]
   59e80:	and	r3, r3, #8
   59e84:	cmp	r3, #0
   59e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59e8c:	ldr	r2, [r3]
   59e90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59e94:	lsl	r3, r3, #3
   59e98:	add	r3, r2, r3
   59e9c:	ldrb	r3, [r3, #6]
   59ea0:	and	r3, r3, #16
   59ea4:	uxtb	r3, r3
   59ea8:	cmp	r3, #0
   59eac:	beq	5a050 <__assert_fail@plt+0x47964>
   59eb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   59eb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59eb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   59ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59ec0:	bl	5bde0 <__assert_fail@plt+0x496f4>
   59ec4:	str	r0, [fp, #-20]	; 0xffffffec
   59ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   59ecc:	cmp	r3, #1
   59ed0:	ble	5a050 <__assert_fail@plt+0x47964>
   59ed4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59ed8:	ldr	r2, [r3, #12]
   59edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59ee0:	lsl	r3, r3, #2
   59ee4:	add	r3, r2, r3
   59ee8:	ldr	r3, [r3]
   59eec:	str	r3, [fp, #-36]	; 0xffffffdc
   59ef0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   59ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   59ef8:	add	r3, r2, r3
   59efc:	str	r3, [fp, #-40]	; 0xffffffd8
   59f00:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59f04:	ldr	r2, [r3, #100]	; 0x64
   59f08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59f0c:	lsl	r3, r3, #2
   59f10:	add	r3, r2, r3
   59f14:	ldr	r3, [r3]
   59f18:	str	r3, [fp, #-44]	; 0xffffffd4
   59f1c:	mov	r3, #0
   59f20:	str	r3, [fp, #-56]	; 0xffffffc8
   59f24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59f28:	cmp	r3, #0
   59f2c:	beq	59f80 <__assert_fail@plt+0x47894>
   59f30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59f34:	add	r2, r3, #4
   59f38:	sub	r3, fp, #60	; 0x3c
   59f3c:	mov	r1, r2
   59f40:	mov	r0, r3
   59f44:	bl	47940 <__assert_fail@plt+0x35254>
   59f48:	mov	r3, r0
   59f4c:	str	r3, [fp, #-48]	; 0xffffffd0
   59f50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59f54:	cmp	r3, #0
   59f58:	movne	r3, #1
   59f5c:	moveq	r3, #0
   59f60:	uxtb	r3, r3
   59f64:	cmp	r3, #0
   59f68:	beq	59f80 <__assert_fail@plt+0x47894>
   59f6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59f70:	mov	r0, r3
   59f74:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59f78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59f7c:	b	5a110 <__assert_fail@plt+0x47a24>
   59f80:	sub	r3, fp, #60	; 0x3c
   59f84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59f88:	mov	r0, r3
   59f8c:	bl	47d94 <__assert_fail@plt+0x356a8>
   59f90:	mov	r3, r0
   59f94:	strb	r3, [fp, #-29]	; 0xffffffe3
   59f98:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   59f9c:	eor	r3, r3, #1
   59fa0:	uxtb	r3, r3
   59fa4:	cmp	r3, #0
   59fa8:	beq	59fc0 <__assert_fail@plt+0x478d4>
   59fac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59fb0:	mov	r0, r3
   59fb4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   59fb8:	mov	r3, #12
   59fbc:	b	5a110 <__assert_fail@plt+0x47a24>
   59fc0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59fc4:	ldr	r2, [r3, #100]	; 0x64
   59fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59fcc:	lsl	r3, r3, #2
   59fd0:	add	r4, r2, r3
   59fd4:	sub	r2, fp, #60	; 0x3c
   59fd8:	sub	r3, fp, #48	; 0x30
   59fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59fe0:	mov	r0, r3
   59fe4:	bl	487d0 <__assert_fail@plt+0x360e4>
   59fe8:	mov	r3, r0
   59fec:	str	r3, [r4]
   59ff0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59ff4:	ldr	r2, [r3, #100]	; 0x64
   59ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59ffc:	lsl	r3, r3, #2
   5a000:	add	r3, r2, r3
   5a004:	ldr	r3, [r3]
   5a008:	cmp	r3, #0
   5a00c:	moveq	r3, #1
   5a010:	movne	r3, #0
   5a014:	uxtb	r3, r3
   5a018:	cmp	r3, #0
   5a01c:	beq	5a050 <__assert_fail@plt+0x47964>
   5a020:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a024:	cmp	r3, #0
   5a028:	movne	r3, #1
   5a02c:	moveq	r3, #0
   5a030:	uxtb	r3, r3
   5a034:	cmp	r3, #0
   5a038:	beq	5a050 <__assert_fail@plt+0x47964>
   5a03c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a040:	mov	r0, r3
   5a044:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a048:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a04c:	b	5a110 <__assert_fail@plt+0x47a24>
   5a050:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a054:	cmp	r3, #0
   5a058:	bne	5a08c <__assert_fail@plt+0x479a0>
   5a05c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a060:	ldr	r2, [r3]
   5a064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a068:	lsl	r3, r3, #3
   5a06c:	add	r3, r2, r3
   5a070:	ldr	r2, [fp, #-68]	; 0xffffffbc
   5a074:	mov	r1, r3
   5a078:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5a07c:	bl	5c340 <__assert_fail@plt+0x49c54>
   5a080:	mov	r3, r0
   5a084:	cmp	r3, #0
   5a088:	beq	5a0e0 <__assert_fail@plt+0x479f4>
   5a08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a090:	ldr	r2, [r3, #12]
   5a094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a098:	lsl	r3, r3, #2
   5a09c:	add	r3, r2, r3
   5a0a0:	ldr	r3, [r3]
   5a0a4:	mov	r1, r3
   5a0a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5a0ac:	bl	47d94 <__assert_fail@plt+0x356a8>
   5a0b0:	mov	r3, r0
   5a0b4:	strb	r3, [fp, #-29]	; 0xffffffe3
   5a0b8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   5a0bc:	eor	r3, r3, #1
   5a0c0:	uxtb	r3, r3
   5a0c4:	cmp	r3, #0
   5a0c8:	beq	5a0e0 <__assert_fail@plt+0x479f4>
   5a0cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a0d0:	mov	r0, r3
   5a0d4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a0d8:	mov	r3, #12
   5a0dc:	b	5a110 <__assert_fail@plt+0x47a24>
   5a0e0:	ldr	r3, [fp, #-16]
   5a0e4:	add	r3, r3, #1
   5a0e8:	str	r3, [fp, #-16]
   5a0ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5a0f0:	ldr	r2, [r3, #4]
   5a0f4:	ldr	r3, [fp, #-16]
   5a0f8:	cmp	r2, r3
   5a0fc:	bgt	59e44 <__assert_fail@plt+0x47758>
   5a100:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a104:	mov	r0, r3
   5a108:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a10c:	mov	r3, #0
   5a110:	mov	r0, r3
   5a114:	sub	sp, fp, #8
   5a118:	pop	{r4, fp, pc}
   5a11c:	push	{fp, lr}
   5a120:	add	fp, sp, #4
   5a124:	sub	sp, sp, #56	; 0x38
   5a128:	str	r0, [fp, #-40]	; 0xffffffd8
   5a12c:	str	r1, [fp, #-44]	; 0xffffffd4
   5a130:	str	r2, [fp, #-48]	; 0xffffffd0
   5a134:	str	r3, [fp, #-52]	; 0xffffffcc
   5a138:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a13c:	ldr	r3, [r3, #4]
   5a140:	cmp	r3, #0
   5a144:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a148:	ldr	r2, [r3, #4]
   5a14c:	sub	r3, fp, #36	; 0x24
   5a150:	mov	r1, r2
   5a154:	mov	r0, r3
   5a158:	bl	46e00 <__assert_fail@plt+0x34714>
   5a15c:	str	r0, [fp, #-12]
   5a160:	ldr	r3, [fp, #-12]
   5a164:	cmp	r3, #0
   5a168:	movne	r3, #1
   5a16c:	moveq	r3, #0
   5a170:	uxtb	r3, r3
   5a174:	cmp	r3, #0
   5a178:	beq	5a184 <__assert_fail@plt+0x47a98>
   5a17c:	ldr	r3, [fp, #-12]
   5a180:	b	5a2d0 <__assert_fail@plt+0x47be4>
   5a184:	mov	r3, #0
   5a188:	str	r3, [fp, #-8]
   5a18c:	b	5a294 <__assert_fail@plt+0x47ba8>
   5a190:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a194:	ldr	r2, [r3, #8]
   5a198:	ldr	r3, [fp, #-8]
   5a19c:	lsl	r3, r3, #2
   5a1a0:	add	r3, r2, r3
   5a1a4:	ldr	r3, [r3]
   5a1a8:	str	r3, [fp, #-16]
   5a1ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5a1b0:	ldr	r1, [r3, #24]
   5a1b4:	ldr	r2, [fp, #-16]
   5a1b8:	mov	r3, r2
   5a1bc:	lsl	r3, r3, #1
   5a1c0:	add	r3, r3, r2
   5a1c4:	lsl	r3, r3, #2
   5a1c8:	add	r3, r1, r3
   5a1cc:	str	r3, [fp, #-20]	; 0xffffffec
   5a1d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a1d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5a1d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a1dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5a1e0:	bl	5958c <__assert_fail@plt+0x46ea0>
   5a1e4:	str	r0, [fp, #-24]	; 0xffffffe8
   5a1e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a1ec:	cmn	r3, #1
   5a1f0:	bne	5a238 <__assert_fail@plt+0x47b4c>
   5a1f4:	sub	r3, fp, #36	; 0x24
   5a1f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a1fc:	mov	r0, r3
   5a200:	bl	47940 <__assert_fail@plt+0x35254>
   5a204:	str	r0, [fp, #-12]
   5a208:	ldr	r3, [fp, #-12]
   5a20c:	cmp	r3, #0
   5a210:	movne	r3, #1
   5a214:	moveq	r3, #0
   5a218:	uxtb	r3, r3
   5a21c:	cmp	r3, #0
   5a220:	beq	5a288 <__assert_fail@plt+0x47b9c>
   5a224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a228:	mov	r0, r3
   5a22c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a230:	ldr	r3, [fp, #-12]
   5a234:	b	5a2d0 <__assert_fail@plt+0x47be4>
   5a238:	sub	r1, fp, #36	; 0x24
   5a23c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a240:	str	r3, [sp]
   5a244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a248:	ldr	r2, [fp, #-16]
   5a24c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5a250:	bl	5a2dc <__assert_fail@plt+0x47bf0>
   5a254:	str	r0, [fp, #-12]
   5a258:	ldr	r3, [fp, #-12]
   5a25c:	cmp	r3, #0
   5a260:	movne	r3, #1
   5a264:	moveq	r3, #0
   5a268:	uxtb	r3, r3
   5a26c:	cmp	r3, #0
   5a270:	beq	5a288 <__assert_fail@plt+0x47b9c>
   5a274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a278:	mov	r0, r3
   5a27c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a280:	ldr	r3, [fp, #-12]
   5a284:	b	5a2d0 <__assert_fail@plt+0x47be4>
   5a288:	ldr	r3, [fp, #-8]
   5a28c:	add	r3, r3, #1
   5a290:	str	r3, [fp, #-8]
   5a294:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a298:	ldr	r2, [r3, #4]
   5a29c:	ldr	r3, [fp, #-8]
   5a2a0:	cmp	r2, r3
   5a2a4:	bgt	5a190 <__assert_fail@plt+0x47aa4>
   5a2a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a2ac:	ldr	r3, [r3, #8]
   5a2b0:	mov	r0, r3
   5a2b4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a2b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a2bc:	mov	ip, r3
   5a2c0:	sub	r3, fp, #36	; 0x24
   5a2c4:	ldm	r3, {r0, r1, r2}
   5a2c8:	stm	ip, {r0, r1, r2}
   5a2cc:	mov	r3, #0
   5a2d0:	mov	r0, r3
   5a2d4:	sub	sp, fp, #4
   5a2d8:	pop	{fp, pc}
   5a2dc:	push	{fp, lr}
   5a2e0:	add	fp, sp, #4
   5a2e4:	sub	sp, sp, #40	; 0x28
   5a2e8:	str	r0, [fp, #-24]	; 0xffffffe8
   5a2ec:	str	r1, [fp, #-28]	; 0xffffffe4
   5a2f0:	str	r2, [fp, #-32]	; 0xffffffe0
   5a2f4:	str	r3, [fp, #-36]	; 0xffffffdc
   5a2f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5a2fc:	str	r3, [fp, #-8]
   5a300:	b	5a4ac <__assert_fail@plt+0x47dc0>
   5a304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a308:	ldr	r2, [r3]
   5a30c:	ldr	r3, [fp, #-8]
   5a310:	lsl	r3, r3, #3
   5a314:	add	r3, r2, r3
   5a318:	ldrb	r3, [r3, #4]
   5a31c:	mov	r2, r3
   5a320:	ldr	r3, [fp, #4]
   5a324:	cmp	r2, r3
   5a328:	bne	5a38c <__assert_fail@plt+0x47ca0>
   5a32c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a330:	ldr	r2, [r3]
   5a334:	ldr	r3, [fp, #-8]
   5a338:	lsl	r3, r3, #3
   5a33c:	add	r3, r2, r3
   5a340:	ldr	r2, [r3]
   5a344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a348:	cmp	r2, r3
   5a34c:	bne	5a38c <__assert_fail@plt+0x47ca0>
   5a350:	ldr	r3, [fp, #4]
   5a354:	cmp	r3, #9
   5a358:	bne	5a4c8 <__assert_fail@plt+0x47ddc>
   5a35c:	ldr	r1, [fp, #-8]
   5a360:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a364:	bl	47d94 <__assert_fail@plt+0x356a8>
   5a368:	mov	r3, r0
   5a36c:	strb	r3, [fp, #-9]
   5a370:	ldrb	r3, [fp, #-9]
   5a374:	eor	r3, r3, #1
   5a378:	uxtb	r3, r3
   5a37c:	cmp	r3, #0
   5a380:	beq	5a4c8 <__assert_fail@plt+0x47ddc>
   5a384:	mov	r3, #12
   5a388:	b	5a4d8 <__assert_fail@plt+0x47dec>
   5a38c:	ldr	r1, [fp, #-8]
   5a390:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a394:	bl	47d94 <__assert_fail@plt+0x356a8>
   5a398:	mov	r3, r0
   5a39c:	strb	r3, [fp, #-9]
   5a3a0:	ldrb	r3, [fp, #-9]
   5a3a4:	eor	r3, r3, #1
   5a3a8:	uxtb	r3, r3
   5a3ac:	cmp	r3, #0
   5a3b0:	beq	5a3bc <__assert_fail@plt+0x47cd0>
   5a3b4:	mov	r3, #12
   5a3b8:	b	5a4d8 <__assert_fail@plt+0x47dec>
   5a3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a3c0:	ldr	r1, [r3, #20]
   5a3c4:	ldr	r2, [fp, #-8]
   5a3c8:	mov	r3, r2
   5a3cc:	lsl	r3, r3, #1
   5a3d0:	add	r3, r3, r2
   5a3d4:	lsl	r3, r3, #2
   5a3d8:	add	r3, r1, r3
   5a3dc:	ldr	r3, [r3, #4]
   5a3e0:	cmp	r3, #0
   5a3e4:	beq	5a4d0 <__assert_fail@plt+0x47de4>
   5a3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a3ec:	ldr	r1, [r3, #20]
   5a3f0:	ldr	r2, [fp, #-8]
   5a3f4:	mov	r3, r2
   5a3f8:	lsl	r3, r3, #1
   5a3fc:	add	r3, r3, r2
   5a400:	lsl	r3, r3, #2
   5a404:	add	r3, r1, r3
   5a408:	ldr	r3, [r3, #4]
   5a40c:	cmp	r3, #2
   5a410:	bne	5a480 <__assert_fail@plt+0x47d94>
   5a414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a418:	ldr	r1, [r3, #20]
   5a41c:	ldr	r2, [fp, #-8]
   5a420:	mov	r3, r2
   5a424:	lsl	r3, r3, #1
   5a428:	add	r3, r3, r2
   5a42c:	lsl	r3, r3, #2
   5a430:	add	r3, r1, r3
   5a434:	ldr	r3, [r3, #8]
   5a438:	add	r3, r3, #4
   5a43c:	ldr	r2, [r3]
   5a440:	ldr	r3, [fp, #4]
   5a444:	str	r3, [sp]
   5a448:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a44c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5a450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a454:	bl	5a2dc <__assert_fail@plt+0x47bf0>
   5a458:	str	r0, [fp, #-16]
   5a45c:	ldr	r3, [fp, #-16]
   5a460:	cmp	r3, #0
   5a464:	movne	r3, #1
   5a468:	moveq	r3, #0
   5a46c:	uxtb	r3, r3
   5a470:	cmp	r3, #0
   5a474:	beq	5a480 <__assert_fail@plt+0x47d94>
   5a478:	ldr	r3, [fp, #-16]
   5a47c:	b	5a4d8 <__assert_fail@plt+0x47dec>
   5a480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a484:	ldr	r1, [r3, #20]
   5a488:	ldr	r2, [fp, #-8]
   5a48c:	mov	r3, r2
   5a490:	lsl	r3, r3, #1
   5a494:	add	r3, r3, r2
   5a498:	lsl	r3, r3, #2
   5a49c:	add	r3, r1, r3
   5a4a0:	ldr	r3, [r3, #8]
   5a4a4:	ldr	r3, [r3]
   5a4a8:	str	r3, [fp, #-8]
   5a4ac:	ldr	r1, [fp, #-8]
   5a4b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a4b4:	bl	481a4 <__assert_fail@plt+0x35ab8>
   5a4b8:	mov	r3, r0
   5a4bc:	cmp	r3, #0
   5a4c0:	beq	5a304 <__assert_fail@plt+0x47c18>
   5a4c4:	b	5a4d4 <__assert_fail@plt+0x47de8>
   5a4c8:	nop			; (mov r0, r0)
   5a4cc:	b	5a4d4 <__assert_fail@plt+0x47de8>
   5a4d0:	nop			; (mov r0, r0)
   5a4d4:	mov	r3, #0
   5a4d8:	mov	r0, r3
   5a4dc:	sub	sp, fp, #4
   5a4e0:	pop	{fp, pc}
   5a4e4:	push	{r4, fp, lr}
   5a4e8:	add	fp, sp, #8
   5a4ec:	sub	sp, sp, #84	; 0x54
   5a4f0:	str	r0, [fp, #-80]	; 0xffffffb0
   5a4f4:	str	r1, [fp, #-84]	; 0xffffffac
   5a4f8:	str	r2, [fp, #-88]	; 0xffffffa8
   5a4fc:	str	r3, [fp, #-92]	; 0xffffffa4
   5a500:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a504:	ldr	r3, [r3, #84]	; 0x54
   5a508:	str	r3, [fp, #-20]	; 0xffffffec
   5a50c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5a510:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5a514:	bl	5cd1c <__assert_fail@plt+0x4a630>
   5a518:	str	r0, [fp, #-24]	; 0xffffffe8
   5a51c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a520:	cmn	r3, #1
   5a524:	bne	5a530 <__assert_fail@plt+0x47e44>
   5a528:	mov	r3, #0
   5a52c:	b	5a8fc <__assert_fail@plt+0x48210>
   5a530:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a534:	ldr	r1, [r3, #116]	; 0x74
   5a538:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a53c:	mov	r3, r2
   5a540:	lsl	r3, r3, #1
   5a544:	add	r3, r3, r2
   5a548:	lsl	r3, r3, #3
   5a54c:	add	r3, r1, r3
   5a550:	str	r3, [fp, #-16]
   5a554:	ldr	r3, [fp, #-16]
   5a558:	ldr	r3, [r3]
   5a55c:	mov	r1, r3
   5a560:	ldr	r0, [fp, #-84]	; 0xffffffac
   5a564:	bl	481a4 <__assert_fail@plt+0x35ab8>
   5a568:	mov	r3, r0
   5a56c:	cmp	r3, #0
   5a570:	beq	5a8cc <__assert_fail@plt+0x481e0>
   5a574:	ldr	r3, [fp, #-16]
   5a578:	ldr	r2, [r3, #12]
   5a57c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5a580:	add	r2, r2, r3
   5a584:	ldr	r3, [fp, #-16]
   5a588:	ldr	r3, [r3, #8]
   5a58c:	sub	r3, r2, r3
   5a590:	str	r3, [fp, #-28]	; 0xffffffe4
   5a594:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5a598:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5a59c:	cmp	r2, r3
   5a5a0:	bne	5a6e0 <__assert_fail@plt+0x47ff4>
   5a5a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a5a8:	ldr	r2, [r3, #20]
   5a5ac:	ldr	r3, [fp, #-16]
   5a5b0:	ldr	r3, [r3]
   5a5b4:	mov	r1, r3
   5a5b8:	mov	r3, r1
   5a5bc:	lsl	r3, r3, #1
   5a5c0:	add	r3, r3, r1
   5a5c4:	lsl	r3, r3, #2
   5a5c8:	add	r3, r2, r3
   5a5cc:	ldr	r3, [r3, #8]
   5a5d0:	ldr	r3, [r3]
   5a5d4:	str	r3, [fp, #-32]	; 0xffffffe0
   5a5d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a5dc:	ldr	r0, [fp, #-84]	; 0xffffffac
   5a5e0:	bl	481a4 <__assert_fail@plt+0x35ab8>
   5a5e4:	mov	r3, r0
   5a5e8:	cmp	r3, #0
   5a5ec:	bne	5a8d4 <__assert_fail@plt+0x481e8>
   5a5f0:	sub	r3, fp, #60	; 0x3c
   5a5f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a5f8:	mov	r0, r3
   5a5fc:	bl	46e84 <__assert_fail@plt+0x34798>
   5a600:	mov	r3, r0
   5a604:	str	r3, [fp, #-48]	; 0xffffffd0
   5a608:	sub	r1, fp, #60	; 0x3c
   5a60c:	ldr	r3, [fp, #4]
   5a610:	ldr	r2, [fp, #-92]	; 0xffffffa4
   5a614:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a618:	bl	5a11c <__assert_fail@plt+0x47a30>
   5a61c:	str	r0, [fp, #-40]	; 0xffffffd8
   5a620:	sub	r3, fp, #60	; 0x3c
   5a624:	mov	r1, r3
   5a628:	ldr	r0, [fp, #-84]	; 0xffffffac
   5a62c:	bl	47940 <__assert_fail@plt+0x35254>
   5a630:	str	r0, [fp, #-44]	; 0xffffffd4
   5a634:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a638:	mov	r0, r3
   5a63c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a640:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a644:	cmp	r3, #0
   5a648:	movne	r3, #1
   5a64c:	moveq	r3, #0
   5a650:	uxtb	r3, r3
   5a654:	cmp	r3, #0
   5a658:	bne	5a678 <__assert_fail@plt+0x47f8c>
   5a65c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5a660:	cmp	r3, #0
   5a664:	movne	r3, #1
   5a668:	moveq	r3, #0
   5a66c:	uxtb	r3, r3
   5a670:	cmp	r3, #0
   5a674:	beq	5a680 <__assert_fail@plt+0x47f94>
   5a678:	mov	r3, #1
   5a67c:	b	5a684 <__assert_fail@plt+0x47f98>
   5a680:	mov	r3, #0
   5a684:	cmp	r3, #0
   5a688:	bne	5a6a8 <__assert_fail@plt+0x47fbc>
   5a68c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a690:	cmp	r3, #0
   5a694:	movne	r3, #1
   5a698:	moveq	r3, #0
   5a69c:	uxtb	r3, r3
   5a6a0:	cmp	r3, #0
   5a6a4:	beq	5a530 <__assert_fail@plt+0x47e44>
   5a6a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a6ac:	cmp	r3, #0
   5a6b0:	bne	5a6d0 <__assert_fail@plt+0x47fe4>
   5a6b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5a6b8:	cmp	r3, #0
   5a6bc:	beq	5a6c8 <__assert_fail@plt+0x47fdc>
   5a6c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5a6c4:	b	5a6d4 <__assert_fail@plt+0x47fe8>
   5a6c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a6cc:	b	5a6d4 <__assert_fail@plt+0x47fe8>
   5a6d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a6d4:	str	r3, [fp, #-48]	; 0xffffffd0
   5a6d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a6dc:	b	5a8fc <__assert_fail@plt+0x48210>
   5a6e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a6e4:	ldr	r2, [r3, #12]
   5a6e8:	ldr	r3, [fp, #-16]
   5a6ec:	ldr	r3, [r3]
   5a6f0:	lsl	r3, r3, #2
   5a6f4:	add	r3, r2, r3
   5a6f8:	ldr	r3, [r3]
   5a6fc:	str	r3, [fp, #-32]	; 0xffffffe0
   5a700:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a704:	ldr	r2, [r3, #100]	; 0x64
   5a708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a70c:	lsl	r3, r3, #2
   5a710:	add	r3, r2, r3
   5a714:	ldr	r3, [r3]
   5a718:	cmp	r3, #0
   5a71c:	beq	5a800 <__assert_fail@plt+0x48114>
   5a720:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a724:	ldr	r2, [r3, #100]	; 0x64
   5a728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a72c:	lsl	r3, r3, #2
   5a730:	add	r3, r2, r3
   5a734:	ldr	r3, [r3]
   5a738:	add	r3, r3, #4
   5a73c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a740:	mov	r0, r3
   5a744:	bl	481a4 <__assert_fail@plt+0x35ab8>
   5a748:	mov	r3, r0
   5a74c:	cmp	r3, #0
   5a750:	bne	5a8dc <__assert_fail@plt+0x481f0>
   5a754:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a758:	ldr	r2, [r3, #100]	; 0x64
   5a75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a760:	lsl	r3, r3, #2
   5a764:	add	r3, r2, r3
   5a768:	ldr	r3, [r3]
   5a76c:	add	r2, r3, #4
   5a770:	sub	r3, fp, #72	; 0x48
   5a774:	mov	r1, r2
   5a778:	mov	r0, r3
   5a77c:	bl	47038 <__assert_fail@plt+0x3494c>
   5a780:	mov	r3, r0
   5a784:	str	r3, [fp, #-48]	; 0xffffffd0
   5a788:	sub	r3, fp, #72	; 0x48
   5a78c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a790:	mov	r0, r3
   5a794:	bl	47d94 <__assert_fail@plt+0x356a8>
   5a798:	mov	r3, r0
   5a79c:	strb	r3, [fp, #-33]	; 0xffffffdf
   5a7a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a7a4:	cmp	r3, #0
   5a7a8:	movne	r3, #1
   5a7ac:	moveq	r3, #0
   5a7b0:	uxtb	r3, r3
   5a7b4:	cmp	r3, #0
   5a7b8:	bne	5a7d0 <__assert_fail@plt+0x480e4>
   5a7bc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   5a7c0:	eor	r3, r3, #1
   5a7c4:	uxtb	r3, r3
   5a7c8:	cmp	r3, #0
   5a7cc:	beq	5a83c <__assert_fail@plt+0x48150>
   5a7d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a7d4:	mov	r0, r3
   5a7d8:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a7dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a7e0:	cmp	r3, #0
   5a7e4:	beq	5a7f0 <__assert_fail@plt+0x48104>
   5a7e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a7ec:	b	5a7f4 <__assert_fail@plt+0x48108>
   5a7f0:	mov	r3, #12
   5a7f4:	str	r3, [fp, #-48]	; 0xffffffd0
   5a7f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a7fc:	b	5a8fc <__assert_fail@plt+0x48210>
   5a800:	sub	r3, fp, #72	; 0x48
   5a804:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a808:	mov	r0, r3
   5a80c:	bl	46e84 <__assert_fail@plt+0x34798>
   5a810:	mov	r3, r0
   5a814:	str	r3, [fp, #-48]	; 0xffffffd0
   5a818:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a81c:	cmp	r3, #0
   5a820:	movne	r3, #1
   5a824:	moveq	r3, #0
   5a828:	uxtb	r3, r3
   5a82c:	cmp	r3, #0
   5a830:	beq	5a83c <__assert_fail@plt+0x48150>
   5a834:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a838:	b	5a8fc <__assert_fail@plt+0x48210>
   5a83c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a840:	ldr	r2, [r3, #100]	; 0x64
   5a844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a848:	lsl	r3, r3, #2
   5a84c:	add	r4, r2, r3
   5a850:	sub	r2, fp, #72	; 0x48
   5a854:	sub	r3, fp, #48	; 0x30
   5a858:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a85c:	mov	r0, r3
   5a860:	bl	487d0 <__assert_fail@plt+0x360e4>
   5a864:	mov	r3, r0
   5a868:	str	r3, [r4]
   5a86c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a870:	mov	r0, r3
   5a874:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5a878:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a87c:	ldr	r2, [r3, #100]	; 0x64
   5a880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a884:	lsl	r3, r3, #2
   5a888:	add	r3, r2, r3
   5a88c:	ldr	r3, [r3]
   5a890:	cmp	r3, #0
   5a894:	moveq	r3, #1
   5a898:	movne	r3, #0
   5a89c:	uxtb	r3, r3
   5a8a0:	cmp	r3, #0
   5a8a4:	beq	5a8e0 <__assert_fail@plt+0x481f4>
   5a8a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a8ac:	cmp	r3, #0
   5a8b0:	movne	r3, #1
   5a8b4:	moveq	r3, #0
   5a8b8:	uxtb	r3, r3
   5a8bc:	cmp	r3, #0
   5a8c0:	beq	5a8e0 <__assert_fail@plt+0x481f4>
   5a8c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a8c8:	b	5a8fc <__assert_fail@plt+0x48210>
   5a8cc:	nop			; (mov r0, r0)
   5a8d0:	b	5a8e0 <__assert_fail@plt+0x481f4>
   5a8d4:	nop			; (mov r0, r0)
   5a8d8:	b	5a8e0 <__assert_fail@plt+0x481f4>
   5a8dc:	nop			; (mov r0, r0)
   5a8e0:	ldr	r3, [fp, #-16]
   5a8e4:	add	r2, r3, #24
   5a8e8:	str	r2, [fp, #-16]
   5a8ec:	ldrb	r3, [r3, #20]
   5a8f0:	cmp	r3, #0
   5a8f4:	bne	5a554 <__assert_fail@plt+0x47e68>
   5a8f8:	mov	r3, #0
   5a8fc:	mov	r0, r3
   5a900:	sub	sp, fp, #8
   5a904:	pop	{r4, fp, pc}
   5a908:	push	{fp, lr}
   5a90c:	add	fp, sp, #4
   5a910:	sub	sp, sp, #14400	; 0x3840
   5a914:	sub	sp, sp, #32
   5a918:	sub	r3, fp, #12288	; 0x3000
   5a91c:	sub	r3, r3, #4
   5a920:	str	r0, [r3, #-2140]	; 0xfffff7a4
   5a924:	sub	r3, fp, #12288	; 0x3000
   5a928:	sub	r3, r3, #4
   5a92c:	str	r1, [r3, #-2144]	; 0xfffff7a0
   5a930:	mov	r3, #0
   5a934:	strb	r3, [fp, #-17]	; 0xffffffef
   5a938:	sub	r3, fp, #12288	; 0x3000
   5a93c:	sub	r3, r3, #4
   5a940:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5a944:	mov	r2, #0
   5a948:	str	r2, [r3, #44]	; 0x2c
   5a94c:	sub	r3, fp, #12288	; 0x3000
   5a950:	sub	r3, r3, #4
   5a954:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5a958:	ldr	r2, [r3, #44]	; 0x2c
   5a95c:	sub	r3, fp, #12288	; 0x3000
   5a960:	sub	r3, r3, #4
   5a964:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5a968:	str	r2, [r3, #48]	; 0x30
   5a96c:	sub	r3, fp, #14400	; 0x3840
   5a970:	sub	r3, r3, #4
   5a974:	sub	r3, r3, #20
   5a978:	sub	r2, fp, #6208	; 0x1840
   5a97c:	sub	r2, r2, #4
   5a980:	sub	r2, r2, #20
   5a984:	sub	r1, fp, #12288	; 0x3000
   5a988:	sub	r1, r1, #4
   5a98c:	sub	r0, fp, #12288	; 0x3000
   5a990:	sub	r0, r0, #4
   5a994:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   5a998:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   5a99c:	bl	5b3a4 <__assert_fail@plt+0x48cb8>
   5a9a0:	str	r0, [fp, #-36]	; 0xffffffdc
   5a9a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a9a8:	cmp	r3, #0
   5a9ac:	movle	r3, #1
   5a9b0:	movgt	r3, #0
   5a9b4:	uxtb	r3, r3
   5a9b8:	cmp	r3, #0
   5a9bc:	beq	5aa30 <__assert_fail@plt+0x48344>
   5a9c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a9c4:	cmp	r3, #0
   5a9c8:	bne	5aa28 <__assert_fail@plt+0x4833c>
   5a9cc:	mov	r1, #256	; 0x100
   5a9d0:	mov	r0, #4
   5a9d4:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   5a9d8:	mov	r3, r0
   5a9dc:	mov	r2, r3
   5a9e0:	sub	r3, fp, #12288	; 0x3000
   5a9e4:	sub	r3, r3, #4
   5a9e8:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5a9ec:	str	r2, [r3, #44]	; 0x2c
   5a9f0:	sub	r3, fp, #12288	; 0x3000
   5a9f4:	sub	r3, r3, #4
   5a9f8:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5a9fc:	ldr	r3, [r3, #44]	; 0x2c
   5aa00:	cmp	r3, #0
   5aa04:	moveq	r3, #1
   5aa08:	movne	r3, #0
   5aa0c:	uxtb	r3, r3
   5aa10:	cmp	r3, #0
   5aa14:	beq	5aa20 <__assert_fail@plt+0x48334>
   5aa18:	mov	r3, #0
   5aa1c:	b	5b398 <__assert_fail@plt+0x48cac>
   5aa20:	mov	r3, #1
   5aa24:	b	5b398 <__assert_fail@plt+0x48cac>
   5aa28:	mov	r3, #0
   5aa2c:	b	5b398 <__assert_fail@plt+0x48cac>
   5aa30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5aa34:	add	r2, r3, #1
   5aa38:	sub	r3, fp, #3120	; 0xc30
   5aa3c:	sub	r3, r3, #4
   5aa40:	sub	r3, r3, #4
   5aa44:	mov	r1, r2
   5aa48:	mov	r0, r3
   5aa4c:	bl	46e00 <__assert_fail@plt+0x34714>
   5aa50:	mov	r3, r0
   5aa54:	str	r3, [fp, #-44]	; 0xffffffd4
   5aa58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5aa5c:	cmp	r3, #0
   5aa60:	movne	r3, #1
   5aa64:	moveq	r3, #0
   5aa68:	uxtb	r3, r3
   5aa6c:	cmp	r3, #0
   5aa70:	beq	5ab0c <__assert_fail@plt+0x48420>
   5aa74:	b	5aa9c <__assert_fail@plt+0x483b0>
   5aa78:	nop			; (mov r0, r0)
   5aa7c:	b	5aa9c <__assert_fail@plt+0x483b0>
   5aa80:	nop			; (mov r0, r0)
   5aa84:	b	5aa9c <__assert_fail@plt+0x483b0>
   5aa88:	nop			; (mov r0, r0)
   5aa8c:	b	5aa9c <__assert_fail@plt+0x483b0>
   5aa90:	nop			; (mov r0, r0)
   5aa94:	b	5aa9c <__assert_fail@plt+0x483b0>
   5aa98:	nop			; (mov r0, r0)
   5aa9c:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   5aaa0:	mov	r0, r3
   5aaa4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5aaa8:	mov	r3, #0
   5aaac:	str	r3, [fp, #-8]
   5aab0:	b	5aaf4 <__assert_fail@plt+0x48408>
   5aab4:	ldr	r2, [fp, #-8]
   5aab8:	mov	r3, r2
   5aabc:	lsl	r3, r3, #1
   5aac0:	add	r3, r3, r2
   5aac4:	lsl	r3, r3, #2
   5aac8:	mov	r2, r3
   5aacc:	sub	r3, fp, #6208	; 0x1840
   5aad0:	sub	r3, r3, #4
   5aad4:	sub	r3, r3, #20
   5aad8:	add	r3, r3, r2
   5aadc:	ldr	r3, [r3, #8]
   5aae0:	mov	r0, r3
   5aae4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5aae8:	ldr	r3, [fp, #-8]
   5aaec:	add	r3, r3, #1
   5aaf0:	str	r3, [fp, #-8]
   5aaf4:	ldr	r2, [fp, #-8]
   5aaf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5aafc:	cmp	r2, r3
   5ab00:	blt	5aab4 <__assert_fail@plt+0x483c8>
   5ab04:	mov	r3, #0
   5ab08:	b	5b398 <__assert_fail@plt+0x48cac>
   5ab0c:	sub	r3, fp, #3152	; 0xc50
   5ab10:	sub	r3, r3, #4
   5ab14:	sub	r3, r3, #4
   5ab18:	mov	r0, r3
   5ab1c:	bl	4406c <__assert_fail@plt+0x31980>
   5ab20:	mov	r3, #0
   5ab24:	str	r3, [fp, #-8]
   5ab28:	b	5aef4 <__assert_fail@plt+0x48808>
   5ab2c:	mov	r3, #0
   5ab30:	str	r3, [fp, #-3124]	; 0xfffff3cc
   5ab34:	mov	r3, #0
   5ab38:	str	r3, [fp, #-12]
   5ab3c:	b	5ac1c <__assert_fail@plt+0x48530>
   5ab40:	sub	r3, fp, #12288	; 0x3000
   5ab44:	sub	r3, r3, #4
   5ab48:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5ab4c:	ldr	r1, [r3, #12]
   5ab50:	sub	r3, fp, #4096	; 0x1000
   5ab54:	sub	r3, r3, #4
   5ab58:	mov	r0, r3
   5ab5c:	ldr	r2, [fp, #-8]
   5ab60:	mov	r3, r2
   5ab64:	lsl	r3, r3, #1
   5ab68:	add	r3, r3, r2
   5ab6c:	lsl	r3, r3, #2
   5ab70:	add	r3, r0, r3
   5ab74:	sub	r3, r3, #2112	; 0x840
   5ab78:	sub	r3, r3, #12
   5ab7c:	ldr	r2, [r3]
   5ab80:	ldr	r3, [fp, #-12]
   5ab84:	lsl	r3, r3, #2
   5ab88:	add	r3, r2, r3
   5ab8c:	ldr	r3, [r3]
   5ab90:	lsl	r3, r3, #2
   5ab94:	add	r3, r1, r3
   5ab98:	ldr	r3, [r3]
   5ab9c:	str	r3, [fp, #-40]	; 0xffffffd8
   5aba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5aba4:	cmn	r3, #1
   5aba8:	beq	5ac10 <__assert_fail@plt+0x48524>
   5abac:	sub	r3, fp, #12288	; 0x3000
   5abb0:	sub	r3, r3, #4
   5abb4:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5abb8:	ldr	r1, [r3, #24]
   5abbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5abc0:	mov	r3, r2
   5abc4:	lsl	r3, r3, #1
   5abc8:	add	r3, r3, r2
   5abcc:	lsl	r3, r3, #2
   5abd0:	add	r2, r1, r3
   5abd4:	sub	r3, fp, #3120	; 0xc30
   5abd8:	sub	r3, r3, #4
   5abdc:	sub	r3, r3, #4
   5abe0:	mov	r1, r2
   5abe4:	mov	r0, r3
   5abe8:	bl	47940 <__assert_fail@plt+0x35254>
   5abec:	mov	r3, r0
   5abf0:	str	r3, [fp, #-44]	; 0xffffffd4
   5abf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5abf8:	cmp	r3, #0
   5abfc:	movne	r3, #1
   5ac00:	moveq	r3, #0
   5ac04:	uxtb	r3, r3
   5ac08:	cmp	r3, #0
   5ac0c:	bne	5aa78 <__assert_fail@plt+0x4838c>
   5ac10:	ldr	r3, [fp, #-12]
   5ac14:	add	r3, r3, #1
   5ac18:	str	r3, [fp, #-12]
   5ac1c:	sub	r3, fp, #4096	; 0x1000
   5ac20:	sub	r3, r3, #4
   5ac24:	mov	r1, r3
   5ac28:	ldr	r2, [fp, #-8]
   5ac2c:	mov	r3, r2
   5ac30:	lsl	r3, r3, #1
   5ac34:	add	r3, r3, r2
   5ac38:	lsl	r3, r3, #2
   5ac3c:	add	r3, r1, r3
   5ac40:	sub	r3, r3, #2128	; 0x850
   5ac44:	ldr	r2, [r3]
   5ac48:	ldr	r3, [fp, #-12]
   5ac4c:	cmp	r2, r3
   5ac50:	bgt	5ab40 <__assert_fail@plt+0x48454>
   5ac54:	sub	r2, fp, #3120	; 0xc30
   5ac58:	sub	r2, r2, #4
   5ac5c:	sub	r2, r2, #4
   5ac60:	sub	r3, fp, #12288	; 0x3000
   5ac64:	sub	r3, r3, #4
   5ac68:	mov	r1, r3
   5ac6c:	sub	r0, fp, #44	; 0x2c
   5ac70:	mov	r3, #0
   5ac74:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   5ac78:	bl	48930 <__assert_fail@plt+0x36244>
   5ac7c:	mov	r2, r0
   5ac80:	ldr	r3, [fp, #-8]
   5ac84:	lsl	r3, r3, #2
   5ac88:	sub	r1, fp, #4
   5ac8c:	add	r3, r1, r3
   5ac90:	str	r2, [r3, #-1064]	; 0xfffffbd8
   5ac94:	ldr	r3, [fp, #-8]
   5ac98:	lsl	r3, r3, #2
   5ac9c:	sub	r2, fp, #4
   5aca0:	add	r3, r2, r3
   5aca4:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5aca8:	cmp	r3, #0
   5acac:	moveq	r3, #1
   5acb0:	movne	r3, #0
   5acb4:	uxtb	r3, r3
   5acb8:	cmp	r3, #0
   5acbc:	beq	5acdc <__assert_fail@plt+0x485f0>
   5acc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5acc4:	cmp	r3, #0
   5acc8:	movne	r3, #1
   5accc:	moveq	r3, #0
   5acd0:	uxtb	r3, r3
   5acd4:	cmp	r3, #0
   5acd8:	bne	5aa80 <__assert_fail@plt+0x48394>
   5acdc:	ldr	r3, [fp, #-8]
   5ace0:	lsl	r3, r3, #2
   5ace4:	sub	r2, fp, #4
   5ace8:	add	r3, r2, r3
   5acec:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5acf0:	ldrb	r3, [r3, #52]	; 0x34
   5acf4:	bic	r3, r3, #127	; 0x7f
   5acf8:	uxtb	r3, r3
   5acfc:	cmp	r3, #0
   5ad00:	beq	5ae68 <__assert_fail@plt+0x4877c>
   5ad04:	sub	r2, fp, #3120	; 0xc30
   5ad08:	sub	r2, r2, #4
   5ad0c:	sub	r2, r2, #4
   5ad10:	sub	r3, fp, #12288	; 0x3000
   5ad14:	sub	r3, r3, #4
   5ad18:	mov	r1, r3
   5ad1c:	sub	r0, fp, #44	; 0x2c
   5ad20:	mov	r3, #1
   5ad24:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   5ad28:	bl	48930 <__assert_fail@plt+0x36244>
   5ad2c:	mov	r2, r0
   5ad30:	ldr	r3, [fp, #-8]
   5ad34:	lsl	r3, r3, #2
   5ad38:	sub	r1, fp, #4
   5ad3c:	add	r3, r1, r3
   5ad40:	str	r2, [r3, #-2088]	; 0xfffff7d8
   5ad44:	ldr	r3, [fp, #-8]
   5ad48:	lsl	r3, r3, #2
   5ad4c:	sub	r2, fp, #4
   5ad50:	add	r3, r2, r3
   5ad54:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5ad58:	cmp	r3, #0
   5ad5c:	moveq	r3, #1
   5ad60:	movne	r3, #0
   5ad64:	uxtb	r3, r3
   5ad68:	cmp	r3, #0
   5ad6c:	beq	5ad8c <__assert_fail@plt+0x486a0>
   5ad70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5ad74:	cmp	r3, #0
   5ad78:	movne	r3, #1
   5ad7c:	moveq	r3, #0
   5ad80:	uxtb	r3, r3
   5ad84:	cmp	r3, #0
   5ad88:	bne	5aa88 <__assert_fail@plt+0x4839c>
   5ad8c:	ldr	r3, [fp, #-8]
   5ad90:	lsl	r3, r3, #2
   5ad94:	sub	r2, fp, #4
   5ad98:	add	r3, r2, r3
   5ad9c:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   5ada0:	ldr	r3, [fp, #-8]
   5ada4:	lsl	r3, r3, #2
   5ada8:	sub	r1, fp, #4
   5adac:	add	r3, r1, r3
   5adb0:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5adb4:	cmp	r2, r3
   5adb8:	beq	5addc <__assert_fail@plt+0x486f0>
   5adbc:	sub	r3, fp, #12288	; 0x3000
   5adc0:	sub	r3, r3, #4
   5adc4:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5adc8:	ldr	r3, [r3, #92]	; 0x5c
   5adcc:	cmp	r3, #1
   5add0:	ble	5addc <__assert_fail@plt+0x486f0>
   5add4:	mov	r3, #1
   5add8:	strb	r3, [fp, #-17]	; 0xffffffef
   5addc:	sub	r2, fp, #3120	; 0xc30
   5ade0:	sub	r2, r2, #4
   5ade4:	sub	r2, r2, #4
   5ade8:	sub	r3, fp, #12288	; 0x3000
   5adec:	sub	r3, r3, #4
   5adf0:	mov	r1, r3
   5adf4:	sub	r0, fp, #44	; 0x2c
   5adf8:	mov	r3, #2
   5adfc:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   5ae00:	bl	48930 <__assert_fail@plt+0x36244>
   5ae04:	mov	r2, r0
   5ae08:	ldr	r3, [fp, #-8]
   5ae0c:	lsl	r3, r3, #2
   5ae10:	sub	r1, fp, #4
   5ae14:	add	r3, r1, r3
   5ae18:	str	r2, [r3, #-3112]	; 0xfffff3d8
   5ae1c:	ldr	r3, [fp, #-8]
   5ae20:	lsl	r3, r3, #2
   5ae24:	sub	r2, fp, #4
   5ae28:	add	r3, r2, r3
   5ae2c:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   5ae30:	cmp	r3, #0
   5ae34:	moveq	r3, #1
   5ae38:	movne	r3, #0
   5ae3c:	uxtb	r3, r3
   5ae40:	cmp	r3, #0
   5ae44:	beq	5aeb8 <__assert_fail@plt+0x487cc>
   5ae48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5ae4c:	cmp	r3, #0
   5ae50:	movne	r3, #1
   5ae54:	moveq	r3, #0
   5ae58:	uxtb	r3, r3
   5ae5c:	cmp	r3, #0
   5ae60:	beq	5aeb8 <__assert_fail@plt+0x487cc>
   5ae64:	b	5aa9c <__assert_fail@plt+0x483b0>
   5ae68:	ldr	r3, [fp, #-8]
   5ae6c:	lsl	r3, r3, #2
   5ae70:	sub	r2, fp, #4
   5ae74:	add	r3, r2, r3
   5ae78:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   5ae7c:	ldr	r3, [fp, #-8]
   5ae80:	lsl	r3, r3, #2
   5ae84:	sub	r1, fp, #4
   5ae88:	add	r3, r1, r3
   5ae8c:	str	r2, [r3, #-2088]	; 0xfffff7d8
   5ae90:	ldr	r3, [fp, #-8]
   5ae94:	lsl	r3, r3, #2
   5ae98:	sub	r2, fp, #4
   5ae9c:	add	r3, r2, r3
   5aea0:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   5aea4:	ldr	r3, [fp, #-8]
   5aea8:	lsl	r3, r3, #2
   5aeac:	sub	r1, fp, #4
   5aeb0:	add	r3, r1, r3
   5aeb4:	str	r2, [r3, #-3112]	; 0xfffff3d8
   5aeb8:	sub	r3, fp, #14400	; 0x3840
   5aebc:	sub	r3, r3, #4
   5aec0:	sub	r3, r3, #20
   5aec4:	ldr	r2, [fp, #-8]
   5aec8:	lsl	r2, r2, #5
   5aecc:	add	r2, r3, r2
   5aed0:	sub	r3, fp, #3152	; 0xc50
   5aed4:	sub	r3, r3, #4
   5aed8:	sub	r3, r3, #4
   5aedc:	mov	r1, r2
   5aee0:	mov	r0, r3
   5aee4:	bl	44164 <__assert_fail@plt+0x31a78>
   5aee8:	ldr	r3, [fp, #-8]
   5aeec:	add	r3, r3, #1
   5aef0:	str	r3, [fp, #-8]
   5aef4:	ldr	r2, [fp, #-8]
   5aef8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5aefc:	cmp	r2, r3
   5af00:	blt	5ab2c <__assert_fail@plt+0x48440>
   5af04:	ldrb	r3, [fp, #-17]	; 0xffffffef
   5af08:	cmp	r3, #0
   5af0c:	bne	5b0c8 <__assert_fail@plt+0x489dc>
   5af10:	mov	r1, #256	; 0x100
   5af14:	mov	r0, #4
   5af18:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   5af1c:	mov	r3, r0
   5af20:	mov	r2, r3
   5af24:	sub	r3, fp, #12288	; 0x3000
   5af28:	sub	r3, r3, #4
   5af2c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5af30:	str	r2, [r3, #44]	; 0x2c
   5af34:	sub	r3, fp, #12288	; 0x3000
   5af38:	sub	r3, r3, #4
   5af3c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5af40:	ldr	r3, [r3, #44]	; 0x2c
   5af44:	str	r3, [fp, #-32]	; 0xffffffe0
   5af48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5af4c:	cmp	r3, #0
   5af50:	moveq	r3, #1
   5af54:	movne	r3, #0
   5af58:	uxtb	r3, r3
   5af5c:	cmp	r3, #0
   5af60:	bne	5aa90 <__assert_fail@plt+0x483a4>
   5af64:	mov	r3, #0
   5af68:	str	r3, [fp, #-8]
   5af6c:	b	5b0b8 <__assert_fail@plt+0x489cc>
   5af70:	ldr	r3, [fp, #-8]
   5af74:	lsl	r3, r3, #5
   5af78:	str	r3, [fp, #-16]
   5af7c:	ldr	r3, [fp, #-8]
   5af80:	lsl	r3, r3, #2
   5af84:	sub	r2, fp, #4
   5af88:	add	r3, r2, r3
   5af8c:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   5af90:	str	r3, [fp, #-24]	; 0xffffffe8
   5af94:	mov	r3, #1
   5af98:	str	r3, [fp, #-28]	; 0xffffffe4
   5af9c:	b	5b0a0 <__assert_fail@plt+0x489b4>
   5afa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5afa4:	and	r3, r3, #1
   5afa8:	cmp	r3, #0
   5afac:	beq	5b07c <__assert_fail@plt+0x48990>
   5afb0:	mov	r3, #0
   5afb4:	str	r3, [fp, #-12]
   5afb8:	b	5afc8 <__assert_fail@plt+0x488dc>
   5afbc:	ldr	r3, [fp, #-12]
   5afc0:	add	r3, r3, #1
   5afc4:	str	r3, [fp, #-12]
   5afc8:	sub	r3, fp, #12288	; 0x3000
   5afcc:	sub	r3, r3, #4
   5afd0:	mov	r1, r3
   5afd4:	ldr	r3, [fp, #-12]
   5afd8:	lsl	r2, r3, #3
   5afdc:	ldr	r3, [fp, #-8]
   5afe0:	add	r3, r2, r3
   5afe4:	lsl	r3, r3, #2
   5afe8:	add	r3, r1, r3
   5afec:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   5aff0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5aff4:	and	r3, r3, r2
   5aff8:	cmp	r3, #0
   5affc:	beq	5afbc <__assert_fail@plt+0x488d0>
   5b000:	sub	r3, fp, #12288	; 0x3000
   5b004:	sub	r3, r3, #4
   5b008:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5b00c:	ldr	r2, [fp, #-8]
   5b010:	add	r2, r2, #24
   5b014:	ldr	r2, [r3, r2, lsl #2]
   5b018:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b01c:	and	r3, r3, r2
   5b020:	cmp	r3, #0
   5b024:	beq	5b054 <__assert_fail@plt+0x48968>
   5b028:	ldr	r3, [fp, #-16]
   5b02c:	lsl	r3, r3, #2
   5b030:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b034:	add	r2, r2, r3
   5b038:	ldr	r3, [fp, #-12]
   5b03c:	lsl	r3, r3, #2
   5b040:	sub	r1, fp, #4
   5b044:	add	r3, r1, r3
   5b048:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5b04c:	str	r3, [r2]
   5b050:	b	5b07c <__assert_fail@plt+0x48990>
   5b054:	ldr	r3, [fp, #-16]
   5b058:	lsl	r3, r3, #2
   5b05c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b060:	add	r2, r2, r3
   5b064:	ldr	r3, [fp, #-12]
   5b068:	lsl	r3, r3, #2
   5b06c:	sub	r1, fp, #4
   5b070:	add	r3, r1, r3
   5b074:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5b078:	str	r3, [r2]
   5b07c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b080:	lsl	r3, r3, #1
   5b084:	str	r3, [fp, #-28]	; 0xffffffe4
   5b088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b08c:	lsr	r3, r3, #1
   5b090:	str	r3, [fp, #-24]	; 0xffffffe8
   5b094:	ldr	r3, [fp, #-16]
   5b098:	add	r3, r3, #1
   5b09c:	str	r3, [fp, #-16]
   5b0a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b0a4:	cmp	r3, #0
   5b0a8:	bne	5afa0 <__assert_fail@plt+0x488b4>
   5b0ac:	ldr	r3, [fp, #-8]
   5b0b0:	add	r3, r3, #1
   5b0b4:	str	r3, [fp, #-8]
   5b0b8:	ldr	r3, [fp, #-8]
   5b0bc:	cmp	r3, #7
   5b0c0:	ble	5af70 <__assert_fail@plt+0x48884>
   5b0c4:	b	5b254 <__assert_fail@plt+0x48b68>
   5b0c8:	mov	r1, #512	; 0x200
   5b0cc:	mov	r0, #4
   5b0d0:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   5b0d4:	mov	r3, r0
   5b0d8:	mov	r2, r3
   5b0dc:	sub	r3, fp, #12288	; 0x3000
   5b0e0:	sub	r3, r3, #4
   5b0e4:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b0e8:	str	r2, [r3, #48]	; 0x30
   5b0ec:	sub	r3, fp, #12288	; 0x3000
   5b0f0:	sub	r3, r3, #4
   5b0f4:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b0f8:	ldr	r3, [r3, #48]	; 0x30
   5b0fc:	str	r3, [fp, #-32]	; 0xffffffe0
   5b100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5b104:	cmp	r3, #0
   5b108:	moveq	r3, #1
   5b10c:	movne	r3, #0
   5b110:	uxtb	r3, r3
   5b114:	cmp	r3, #0
   5b118:	bne	5aa98 <__assert_fail@plt+0x483ac>
   5b11c:	mov	r3, #0
   5b120:	str	r3, [fp, #-8]
   5b124:	b	5b248 <__assert_fail@plt+0x48b5c>
   5b128:	ldr	r3, [fp, #-8]
   5b12c:	lsl	r3, r3, #5
   5b130:	str	r3, [fp, #-16]
   5b134:	ldr	r3, [fp, #-8]
   5b138:	lsl	r3, r3, #2
   5b13c:	sub	r2, fp, #4
   5b140:	add	r3, r2, r3
   5b144:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   5b148:	str	r3, [fp, #-24]	; 0xffffffe8
   5b14c:	mov	r3, #1
   5b150:	str	r3, [fp, #-28]	; 0xffffffe4
   5b154:	b	5b230 <__assert_fail@plt+0x48b44>
   5b158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b15c:	and	r3, r3, #1
   5b160:	cmp	r3, #0
   5b164:	beq	5b20c <__assert_fail@plt+0x48b20>
   5b168:	mov	r3, #0
   5b16c:	str	r3, [fp, #-12]
   5b170:	b	5b180 <__assert_fail@plt+0x48a94>
   5b174:	ldr	r3, [fp, #-12]
   5b178:	add	r3, r3, #1
   5b17c:	str	r3, [fp, #-12]
   5b180:	sub	r3, fp, #12288	; 0x3000
   5b184:	sub	r3, r3, #4
   5b188:	mov	r1, r3
   5b18c:	ldr	r3, [fp, #-12]
   5b190:	lsl	r2, r3, #3
   5b194:	ldr	r3, [fp, #-8]
   5b198:	add	r3, r2, r3
   5b19c:	lsl	r3, r3, #2
   5b1a0:	add	r3, r1, r3
   5b1a4:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   5b1a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b1ac:	and	r3, r3, r2
   5b1b0:	cmp	r3, #0
   5b1b4:	beq	5b174 <__assert_fail@plt+0x48a88>
   5b1b8:	ldr	r3, [fp, #-16]
   5b1bc:	lsl	r3, r3, #2
   5b1c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b1c4:	add	r2, r2, r3
   5b1c8:	ldr	r3, [fp, #-12]
   5b1cc:	lsl	r3, r3, #2
   5b1d0:	sub	r1, fp, #4
   5b1d4:	add	r3, r1, r3
   5b1d8:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5b1dc:	str	r3, [r2]
   5b1e0:	ldr	r3, [fp, #-16]
   5b1e4:	add	r3, r3, #256	; 0x100
   5b1e8:	lsl	r3, r3, #2
   5b1ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b1f0:	add	r2, r2, r3
   5b1f4:	ldr	r3, [fp, #-12]
   5b1f8:	lsl	r3, r3, #2
   5b1fc:	sub	r1, fp, #4
   5b200:	add	r3, r1, r3
   5b204:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5b208:	str	r3, [r2]
   5b20c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b210:	lsl	r3, r3, #1
   5b214:	str	r3, [fp, #-28]	; 0xffffffe4
   5b218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b21c:	lsr	r3, r3, #1
   5b220:	str	r3, [fp, #-24]	; 0xffffffe8
   5b224:	ldr	r3, [fp, #-16]
   5b228:	add	r3, r3, #1
   5b22c:	str	r3, [fp, #-16]
   5b230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b234:	cmp	r3, #0
   5b238:	bne	5b158 <__assert_fail@plt+0x48a6c>
   5b23c:	ldr	r3, [fp, #-8]
   5b240:	add	r3, r3, #1
   5b244:	str	r3, [fp, #-8]
   5b248:	ldr	r3, [fp, #-8]
   5b24c:	cmp	r3, #7
   5b250:	ble	5b128 <__assert_fail@plt+0x48a3c>
   5b254:	sub	r3, fp, #3152	; 0xc50
   5b258:	sub	r3, r3, #4
   5b25c:	sub	r3, r3, #4
   5b260:	mov	r1, #10
   5b264:	mov	r0, r3
   5b268:	bl	43ff0 <__assert_fail@plt+0x31904>
   5b26c:	mov	r3, r0
   5b270:	cmp	r3, #0
   5b274:	beq	5b32c <__assert_fail@plt+0x48c40>
   5b278:	mov	r3, #0
   5b27c:	str	r3, [fp, #-12]
   5b280:	b	5b314 <__assert_fail@plt+0x48c28>
   5b284:	sub	r3, fp, #14400	; 0x3840
   5b288:	sub	r3, r3, #4
   5b28c:	sub	r3, r3, #20
   5b290:	ldr	r2, [fp, #-12]
   5b294:	lsl	r2, r2, #5
   5b298:	add	r3, r3, r2
   5b29c:	mov	r1, #10
   5b2a0:	mov	r0, r3
   5b2a4:	bl	43ff0 <__assert_fail@plt+0x31904>
   5b2a8:	mov	r3, r0
   5b2ac:	cmp	r3, #0
   5b2b0:	beq	5b308 <__assert_fail@plt+0x48c1c>
   5b2b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5b2b8:	add	r2, r3, #40	; 0x28
   5b2bc:	ldr	r3, [fp, #-12]
   5b2c0:	lsl	r3, r3, #2
   5b2c4:	sub	r1, fp, #4
   5b2c8:	add	r3, r1, r3
   5b2cc:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   5b2d0:	str	r3, [r2]
   5b2d4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   5b2d8:	cmp	r3, #0
   5b2dc:	beq	5b328 <__assert_fail@plt+0x48c3c>
   5b2e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5b2e4:	add	r3, r3, #1056	; 0x420
   5b2e8:	add	r3, r3, #8
   5b2ec:	ldr	r2, [fp, #-12]
   5b2f0:	lsl	r2, r2, #2
   5b2f4:	sub	r1, fp, #4
   5b2f8:	add	r2, r1, r2
   5b2fc:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   5b300:	str	r2, [r3]
   5b304:	b	5b328 <__assert_fail@plt+0x48c3c>
   5b308:	ldr	r3, [fp, #-12]
   5b30c:	add	r3, r3, #1
   5b310:	str	r3, [fp, #-12]
   5b314:	ldr	r2, [fp, #-12]
   5b318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b31c:	cmp	r2, r3
   5b320:	blt	5b284 <__assert_fail@plt+0x48b98>
   5b324:	b	5b32c <__assert_fail@plt+0x48c40>
   5b328:	nop			; (mov r0, r0)
   5b32c:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   5b330:	mov	r0, r3
   5b334:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5b338:	mov	r3, #0
   5b33c:	str	r3, [fp, #-8]
   5b340:	b	5b384 <__assert_fail@plt+0x48c98>
   5b344:	ldr	r2, [fp, #-8]
   5b348:	mov	r3, r2
   5b34c:	lsl	r3, r3, #1
   5b350:	add	r3, r3, r2
   5b354:	lsl	r3, r3, #2
   5b358:	mov	r2, r3
   5b35c:	sub	r3, fp, #6208	; 0x1840
   5b360:	sub	r3, r3, #4
   5b364:	sub	r3, r3, #20
   5b368:	add	r3, r3, r2
   5b36c:	ldr	r3, [r3, #8]
   5b370:	mov	r0, r3
   5b374:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5b378:	ldr	r3, [fp, #-8]
   5b37c:	add	r3, r3, #1
   5b380:	str	r3, [fp, #-8]
   5b384:	ldr	r2, [fp, #-8]
   5b388:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b38c:	cmp	r2, r3
   5b390:	blt	5b344 <__assert_fail@plt+0x48c58>
   5b394:	mov	r3, #1
   5b398:	mov	r0, r3
   5b39c:	sub	sp, fp, #4
   5b3a0:	pop	{fp, pc}
   5b3a4:	push	{fp, lr}
   5b3a8:	add	fp, sp, #4
   5b3ac:	sub	sp, sp, #176	; 0xb0
   5b3b0:	str	r0, [fp, #-168]	; 0xffffff58
   5b3b4:	str	r1, [fp, #-172]	; 0xffffff54
   5b3b8:	str	r2, [fp, #-176]	; 0xffffff50
   5b3bc:	str	r3, [fp, #-180]	; 0xffffff4c
   5b3c0:	ldr	r3, [fp, #-172]	; 0xffffff54
   5b3c4:	add	r3, r3, #4
   5b3c8:	str	r3, [fp, #-44]	; 0xffffffd4
   5b3cc:	sub	r3, fp, #100	; 0x64
   5b3d0:	mov	r0, r3
   5b3d4:	bl	4406c <__assert_fail@plt+0x31980>
   5b3d8:	mov	r3, #0
   5b3dc:	str	r3, [fp, #-20]	; 0xffffffec
   5b3e0:	mov	r3, #0
   5b3e4:	str	r3, [fp, #-8]
   5b3e8:	b	5bd44 <__assert_fail@plt+0x49658>
   5b3ec:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b3f0:	ldr	r2, [r3]
   5b3f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5b3f8:	ldr	r1, [r3, #8]
   5b3fc:	ldr	r3, [fp, #-8]
   5b400:	lsl	r3, r3, #2
   5b404:	add	r3, r1, r3
   5b408:	ldr	r3, [r3]
   5b40c:	lsl	r3, r3, #3
   5b410:	add	r3, r2, r3
   5b414:	str	r3, [fp, #-48]	; 0xffffffd0
   5b418:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b41c:	ldrb	r3, [r3, #4]
   5b420:	str	r3, [fp, #-52]	; 0xffffffcc
   5b424:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b428:	ldr	r3, [r3, #4]
   5b42c:	lsr	r3, r3, #8
   5b430:	lsl	r3, r3, #22
   5b434:	lsr	r3, r3, #22
   5b438:	uxth	r3, r3
   5b43c:	str	r3, [fp, #-56]	; 0xffffffc8
   5b440:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b444:	cmp	r3, #1
   5b448:	bne	5b46c <__assert_fail@plt+0x48d80>
   5b44c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b450:	ldrb	r3, [r3]
   5b454:	mov	r2, r3
   5b458:	sub	r3, fp, #100	; 0x64
   5b45c:	mov	r1, r2
   5b460:	mov	r0, r3
   5b464:	bl	43ecc <__assert_fail@plt+0x317e0>
   5b468:	b	5b58c <__assert_fail@plt+0x48ea0>
   5b46c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b470:	cmp	r3, #3
   5b474:	bne	5b494 <__assert_fail@plt+0x48da8>
   5b478:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b47c:	ldr	r2, [r3]
   5b480:	sub	r3, fp, #100	; 0x64
   5b484:	mov	r1, r2
   5b488:	mov	r0, r3
   5b48c:	bl	44164 <__assert_fail@plt+0x31a78>
   5b490:	b	5b58c <__assert_fail@plt+0x48ea0>
   5b494:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b498:	cmp	r3, #5
   5b49c:	bne	5b524 <__assert_fail@plt+0x48e38>
   5b4a0:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b4a4:	ldr	r3, [r3, #92]	; 0x5c
   5b4a8:	cmp	r3, #1
   5b4ac:	ble	5b4cc <__assert_fail@plt+0x48de0>
   5b4b0:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b4b4:	ldr	r2, [r3, #60]	; 0x3c
   5b4b8:	sub	r3, fp, #100	; 0x64
   5b4bc:	mov	r1, r2
   5b4c0:	mov	r0, r3
   5b4c4:	bl	44164 <__assert_fail@plt+0x31a78>
   5b4c8:	b	5b4d8 <__assert_fail@plt+0x48dec>
   5b4cc:	sub	r3, fp, #100	; 0x64
   5b4d0:	mov	r0, r3
   5b4d4:	bl	44098 <__assert_fail@plt+0x319ac>
   5b4d8:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b4dc:	ldr	r3, [r3, #128]	; 0x80
   5b4e0:	and	r3, r3, #64	; 0x40
   5b4e4:	cmp	r3, #0
   5b4e8:	bne	5b4fc <__assert_fail@plt+0x48e10>
   5b4ec:	sub	r3, fp, #100	; 0x64
   5b4f0:	mov	r1, #10
   5b4f4:	mov	r0, r3
   5b4f8:	bl	43f5c <__assert_fail@plt+0x31870>
   5b4fc:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b500:	ldr	r3, [r3, #128]	; 0x80
   5b504:	and	r3, r3, #128	; 0x80
   5b508:	cmp	r3, #0
   5b50c:	beq	5b58c <__assert_fail@plt+0x48ea0>
   5b510:	sub	r3, fp, #100	; 0x64
   5b514:	mov	r1, #0
   5b518:	mov	r0, r3
   5b51c:	bl	43f5c <__assert_fail@plt+0x31870>
   5b520:	b	5b58c <__assert_fail@plt+0x48ea0>
   5b524:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b528:	cmp	r3, #7
   5b52c:	bne	5bd1c <__assert_fail@plt+0x49630>
   5b530:	sub	r3, fp, #100	; 0x64
   5b534:	mov	r2, #16
   5b538:	mvn	r1, #0
   5b53c:	mov	r0, r3
   5b540:	bl	12434 <memset@plt>
   5b544:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b548:	ldr	r3, [r3, #128]	; 0x80
   5b54c:	and	r3, r3, #64	; 0x40
   5b550:	cmp	r3, #0
   5b554:	bne	5b568 <__assert_fail@plt+0x48e7c>
   5b558:	sub	r3, fp, #100	; 0x64
   5b55c:	mov	r1, #10
   5b560:	mov	r0, r3
   5b564:	bl	43f5c <__assert_fail@plt+0x31870>
   5b568:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b56c:	ldr	r3, [r3, #128]	; 0x80
   5b570:	and	r3, r3, #128	; 0x80
   5b574:	cmp	r3, #0
   5b578:	beq	5b58c <__assert_fail@plt+0x48ea0>
   5b57c:	sub	r3, fp, #100	; 0x64
   5b580:	mov	r1, #0
   5b584:	mov	r0, r3
   5b588:	bl	43f5c <__assert_fail@plt+0x31870>
   5b58c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5b590:	cmp	r3, #0
   5b594:	beq	5b924 <__assert_fail@plt+0x49238>
   5b598:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5b59c:	and	r3, r3, #32
   5b5a0:	cmp	r3, #0
   5b5a4:	beq	5b5e8 <__assert_fail@plt+0x48efc>
   5b5a8:	sub	r3, fp, #100	; 0x64
   5b5ac:	mov	r1, #10
   5b5b0:	mov	r0, r3
   5b5b4:	bl	43ff0 <__assert_fail@plt+0x31904>
   5b5b8:	mov	r3, r0
   5b5bc:	strb	r3, [fp, #-57]	; 0xffffffc7
   5b5c0:	sub	r3, fp, #100	; 0x64
   5b5c4:	mov	r0, r3
   5b5c8:	bl	4406c <__assert_fail@plt+0x31980>
   5b5cc:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   5b5d0:	cmp	r3, #0
   5b5d4:	beq	5bd24 <__assert_fail@plt+0x49638>
   5b5d8:	sub	r3, fp, #100	; 0x64
   5b5dc:	mov	r1, #10
   5b5e0:	mov	r0, r3
   5b5e4:	bl	43ecc <__assert_fail@plt+0x317e0>
   5b5e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5b5ec:	and	r3, r3, #128	; 0x80
   5b5f0:	cmp	r3, #0
   5b5f4:	beq	5b608 <__assert_fail@plt+0x48f1c>
   5b5f8:	sub	r3, fp, #100	; 0x64
   5b5fc:	mov	r0, r3
   5b600:	bl	4406c <__assert_fail@plt+0x31980>
   5b604:	b	5bd38 <__assert_fail@plt+0x4964c>
   5b608:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5b60c:	and	r3, r3, #4
   5b610:	cmp	r3, #0
   5b614:	beq	5b794 <__assert_fail@plt+0x490a8>
   5b618:	mov	r3, #0
   5b61c:	str	r3, [fp, #-24]	; 0xffffffe8
   5b620:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b624:	cmp	r3, #1
   5b628:	bne	5b654 <__assert_fail@plt+0x48f68>
   5b62c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b630:	ldrb	r3, [r3, #6]
   5b634:	and	r3, r3, #64	; 0x40
   5b638:	uxtb	r3, r3
   5b63c:	cmp	r3, #0
   5b640:	bne	5b654 <__assert_fail@plt+0x48f68>
   5b644:	sub	r3, fp, #100	; 0x64
   5b648:	mov	r0, r3
   5b64c:	bl	4406c <__assert_fail@plt+0x31980>
   5b650:	b	5bd38 <__assert_fail@plt+0x4964c>
   5b654:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b658:	ldr	r3, [r3, #92]	; 0x5c
   5b65c:	cmp	r3, #1
   5b660:	ble	5b708 <__assert_fail@plt+0x4901c>
   5b664:	mov	r3, #0
   5b668:	str	r3, [fp, #-12]
   5b66c:	b	5b6f8 <__assert_fail@plt+0x4900c>
   5b670:	ldr	r3, [fp, #-12]
   5b674:	lsl	r3, r3, #2
   5b678:	sub	r2, fp, #4
   5b67c:	add	r3, r2, r3
   5b680:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5b684:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b688:	ldr	r1, [fp, #-12]
   5b68c:	add	r1, r1, #24
   5b690:	ldr	r1, [r3, r1, lsl #2]
   5b694:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b698:	ldr	r0, [r3, #60]	; 0x3c
   5b69c:	ldr	r3, [fp, #-12]
   5b6a0:	lsl	r3, r3, #2
   5b6a4:	add	r3, r0, r3
   5b6a8:	ldr	r3, [r3]
   5b6ac:	mvn	r3, r3
   5b6b0:	orr	r3, r1, r3
   5b6b4:	and	r2, r2, r3
   5b6b8:	ldr	r3, [fp, #-12]
   5b6bc:	lsl	r3, r3, #2
   5b6c0:	sub	r1, fp, #4
   5b6c4:	add	r3, r1, r3
   5b6c8:	str	r2, [r3, #-96]	; 0xffffffa0
   5b6cc:	ldr	r3, [fp, #-12]
   5b6d0:	lsl	r3, r3, #2
   5b6d4:	sub	r2, fp, #4
   5b6d8:	add	r3, r2, r3
   5b6dc:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5b6e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b6e4:	orr	r3, r2, r3
   5b6e8:	str	r3, [fp, #-24]	; 0xffffffe8
   5b6ec:	ldr	r3, [fp, #-12]
   5b6f0:	add	r3, r3, #1
   5b6f4:	str	r3, [fp, #-12]
   5b6f8:	ldr	r3, [fp, #-12]
   5b6fc:	cmp	r3, #7
   5b700:	ble	5b670 <__assert_fail@plt+0x48f84>
   5b704:	b	5b788 <__assert_fail@plt+0x4909c>
   5b708:	mov	r3, #0
   5b70c:	str	r3, [fp, #-12]
   5b710:	b	5b77c <__assert_fail@plt+0x49090>
   5b714:	ldr	r3, [fp, #-12]
   5b718:	lsl	r3, r3, #2
   5b71c:	sub	r2, fp, #4
   5b720:	add	r3, r2, r3
   5b724:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5b728:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b72c:	ldr	r1, [fp, #-12]
   5b730:	add	r1, r1, #24
   5b734:	ldr	r3, [r3, r1, lsl #2]
   5b738:	and	r2, r2, r3
   5b73c:	ldr	r3, [fp, #-12]
   5b740:	lsl	r3, r3, #2
   5b744:	sub	r1, fp, #4
   5b748:	add	r3, r1, r3
   5b74c:	str	r2, [r3, #-96]	; 0xffffffa0
   5b750:	ldr	r3, [fp, #-12]
   5b754:	lsl	r3, r3, #2
   5b758:	sub	r2, fp, #4
   5b75c:	add	r3, r2, r3
   5b760:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5b764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b768:	orr	r3, r2, r3
   5b76c:	str	r3, [fp, #-24]	; 0xffffffe8
   5b770:	ldr	r3, [fp, #-12]
   5b774:	add	r3, r3, #1
   5b778:	str	r3, [fp, #-12]
   5b77c:	ldr	r3, [fp, #-12]
   5b780:	cmp	r3, #7
   5b784:	ble	5b714 <__assert_fail@plt+0x49028>
   5b788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b78c:	cmp	r3, #0
   5b790:	beq	5bd2c <__assert_fail@plt+0x49640>
   5b794:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5b798:	and	r3, r3, #8
   5b79c:	cmp	r3, #0
   5b7a0:	beq	5b924 <__assert_fail@plt+0x49238>
   5b7a4:	mov	r3, #0
   5b7a8:	str	r3, [fp, #-28]	; 0xffffffe4
   5b7ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b7b0:	cmp	r3, #1
   5b7b4:	bne	5b7e0 <__assert_fail@plt+0x490f4>
   5b7b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b7bc:	ldrb	r3, [r3, #6]
   5b7c0:	and	r3, r3, #64	; 0x40
   5b7c4:	uxtb	r3, r3
   5b7c8:	cmp	r3, #0
   5b7cc:	beq	5b7e0 <__assert_fail@plt+0x490f4>
   5b7d0:	sub	r3, fp, #100	; 0x64
   5b7d4:	mov	r0, r3
   5b7d8:	bl	4406c <__assert_fail@plt+0x31980>
   5b7dc:	b	5bd38 <__assert_fail@plt+0x4964c>
   5b7e0:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b7e4:	ldr	r3, [r3, #92]	; 0x5c
   5b7e8:	cmp	r3, #1
   5b7ec:	ble	5b894 <__assert_fail@plt+0x491a8>
   5b7f0:	mov	r3, #0
   5b7f4:	str	r3, [fp, #-12]
   5b7f8:	b	5b884 <__assert_fail@plt+0x49198>
   5b7fc:	ldr	r3, [fp, #-12]
   5b800:	lsl	r3, r3, #2
   5b804:	sub	r2, fp, #4
   5b808:	add	r3, r2, r3
   5b80c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5b810:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b814:	ldr	r1, [fp, #-12]
   5b818:	add	r1, r1, #24
   5b81c:	ldr	r1, [r3, r1, lsl #2]
   5b820:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b824:	ldr	r0, [r3, #60]	; 0x3c
   5b828:	ldr	r3, [fp, #-12]
   5b82c:	lsl	r3, r3, #2
   5b830:	add	r3, r0, r3
   5b834:	ldr	r3, [r3]
   5b838:	and	r3, r3, r1
   5b83c:	mvn	r3, r3
   5b840:	and	r2, r2, r3
   5b844:	ldr	r3, [fp, #-12]
   5b848:	lsl	r3, r3, #2
   5b84c:	sub	r1, fp, #4
   5b850:	add	r3, r1, r3
   5b854:	str	r2, [r3, #-96]	; 0xffffffa0
   5b858:	ldr	r3, [fp, #-12]
   5b85c:	lsl	r3, r3, #2
   5b860:	sub	r2, fp, #4
   5b864:	add	r3, r2, r3
   5b868:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5b86c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5b870:	orr	r3, r2, r3
   5b874:	str	r3, [fp, #-28]	; 0xffffffe4
   5b878:	ldr	r3, [fp, #-12]
   5b87c:	add	r3, r3, #1
   5b880:	str	r3, [fp, #-12]
   5b884:	ldr	r3, [fp, #-12]
   5b888:	cmp	r3, #7
   5b88c:	ble	5b7fc <__assert_fail@plt+0x49110>
   5b890:	b	5b918 <__assert_fail@plt+0x4922c>
   5b894:	mov	r3, #0
   5b898:	str	r3, [fp, #-12]
   5b89c:	b	5b90c <__assert_fail@plt+0x49220>
   5b8a0:	ldr	r3, [fp, #-12]
   5b8a4:	lsl	r3, r3, #2
   5b8a8:	sub	r2, fp, #4
   5b8ac:	add	r3, r2, r3
   5b8b0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5b8b4:	ldr	r3, [fp, #-168]	; 0xffffff58
   5b8b8:	ldr	r1, [fp, #-12]
   5b8bc:	add	r1, r1, #24
   5b8c0:	ldr	r3, [r3, r1, lsl #2]
   5b8c4:	mvn	r3, r3
   5b8c8:	and	r2, r2, r3
   5b8cc:	ldr	r3, [fp, #-12]
   5b8d0:	lsl	r3, r3, #2
   5b8d4:	sub	r1, fp, #4
   5b8d8:	add	r3, r1, r3
   5b8dc:	str	r2, [r3, #-96]	; 0xffffffa0
   5b8e0:	ldr	r3, [fp, #-12]
   5b8e4:	lsl	r3, r3, #2
   5b8e8:	sub	r2, fp, #4
   5b8ec:	add	r3, r2, r3
   5b8f0:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5b8f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5b8f8:	orr	r3, r2, r3
   5b8fc:	str	r3, [fp, #-28]	; 0xffffffe4
   5b900:	ldr	r3, [fp, #-12]
   5b904:	add	r3, r3, #1
   5b908:	str	r3, [fp, #-12]
   5b90c:	ldr	r3, [fp, #-12]
   5b910:	cmp	r3, #7
   5b914:	ble	5b8a0 <__assert_fail@plt+0x491b4>
   5b918:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b91c:	cmp	r3, #0
   5b920:	beq	5bd34 <__assert_fail@plt+0x49648>
   5b924:	mov	r3, #0
   5b928:	str	r3, [fp, #-12]
   5b92c:	b	5bc58 <__assert_fail@plt+0x4956c>
   5b930:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b934:	cmp	r3, #1
   5b938:	bne	5b974 <__assert_fail@plt+0x49288>
   5b93c:	ldr	r3, [fp, #-12]
   5b940:	lsl	r3, r3, #5
   5b944:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5b948:	add	r2, r2, r3
   5b94c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b950:	ldrb	r3, [r3]
   5b954:	mov	r1, r3
   5b958:	mov	r0, r2
   5b95c:	bl	43ff0 <__assert_fail@plt+0x31904>
   5b960:	mov	r3, r0
   5b964:	eor	r3, r3, #1
   5b968:	uxtb	r3, r3
   5b96c:	cmp	r3, #0
   5b970:	bne	5bc40 <__assert_fail@plt+0x49554>
   5b974:	mov	r3, #0
   5b978:	str	r3, [fp, #-32]	; 0xffffffe0
   5b97c:	mov	r3, #0
   5b980:	str	r3, [fp, #-16]
   5b984:	b	5b9f8 <__assert_fail@plt+0x4930c>
   5b988:	ldr	r3, [fp, #-16]
   5b98c:	lsl	r3, r3, #2
   5b990:	sub	r2, fp, #4
   5b994:	add	r3, r2, r3
   5b998:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5b99c:	ldr	r3, [fp, #-12]
   5b9a0:	lsl	r3, r3, #5
   5b9a4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   5b9a8:	add	r3, r1, r3
   5b9ac:	ldr	r1, [fp, #-16]
   5b9b0:	ldr	r3, [r3, r1, lsl #2]
   5b9b4:	and	r2, r2, r3
   5b9b8:	ldr	r3, [fp, #-16]
   5b9bc:	lsl	r3, r3, #2
   5b9c0:	sub	r1, fp, #4
   5b9c4:	add	r3, r1, r3
   5b9c8:	str	r2, [r3, #-160]	; 0xffffff60
   5b9cc:	ldr	r3, [fp, #-16]
   5b9d0:	lsl	r3, r3, #2
   5b9d4:	sub	r2, fp, #4
   5b9d8:	add	r3, r2, r3
   5b9dc:	ldr	r3, [r3, #-160]	; 0xffffff60
   5b9e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b9e4:	orr	r3, r2, r3
   5b9e8:	str	r3, [fp, #-32]	; 0xffffffe0
   5b9ec:	ldr	r3, [fp, #-16]
   5b9f0:	add	r3, r3, #1
   5b9f4:	str	r3, [fp, #-16]
   5b9f8:	ldr	r3, [fp, #-16]
   5b9fc:	cmp	r3, #7
   5ba00:	ble	5b988 <__assert_fail@plt+0x4929c>
   5ba04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5ba08:	cmp	r3, #0
   5ba0c:	beq	5bc48 <__assert_fail@plt+0x4955c>
   5ba10:	mov	r3, #0
   5ba14:	str	r3, [fp, #-40]	; 0xffffffd8
   5ba18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5ba1c:	str	r3, [fp, #-36]	; 0xffffffdc
   5ba20:	mov	r3, #0
   5ba24:	str	r3, [fp, #-16]
   5ba28:	b	5bb08 <__assert_fail@plt+0x4941c>
   5ba2c:	ldr	r3, [fp, #-16]
   5ba30:	lsl	r3, r3, #2
   5ba34:	sub	r2, fp, #4
   5ba38:	add	r3, r2, r3
   5ba3c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5ba40:	mvn	r2, r3
   5ba44:	ldr	r3, [fp, #-12]
   5ba48:	lsl	r3, r3, #5
   5ba4c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   5ba50:	add	r3, r1, r3
   5ba54:	ldr	r1, [fp, #-16]
   5ba58:	ldr	r3, [r3, r1, lsl #2]
   5ba5c:	and	r2, r2, r3
   5ba60:	ldr	r3, [fp, #-16]
   5ba64:	lsl	r3, r3, #2
   5ba68:	sub	r1, fp, #4
   5ba6c:	add	r3, r1, r3
   5ba70:	str	r2, [r3, #-128]	; 0xffffff80
   5ba74:	ldr	r3, [fp, #-16]
   5ba78:	lsl	r3, r3, #2
   5ba7c:	sub	r2, fp, #4
   5ba80:	add	r3, r2, r3
   5ba84:	ldr	r3, [r3, #-128]	; 0xffffff80
   5ba88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5ba8c:	orr	r3, r2, r3
   5ba90:	str	r3, [fp, #-36]	; 0xffffffdc
   5ba94:	ldr	r3, [fp, #-16]
   5ba98:	lsl	r3, r3, #2
   5ba9c:	sub	r2, fp, #4
   5baa0:	add	r3, r2, r3
   5baa4:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5baa8:	ldr	r3, [fp, #-12]
   5baac:	lsl	r3, r3, #5
   5bab0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   5bab4:	add	r3, r1, r3
   5bab8:	ldr	r1, [fp, #-16]
   5babc:	ldr	r3, [r3, r1, lsl #2]
   5bac0:	mvn	r3, r3
   5bac4:	and	r2, r2, r3
   5bac8:	ldr	r3, [fp, #-16]
   5bacc:	lsl	r3, r3, #2
   5bad0:	sub	r1, fp, #4
   5bad4:	add	r3, r1, r3
   5bad8:	str	r2, [r3, #-96]	; 0xffffffa0
   5badc:	ldr	r3, [fp, #-16]
   5bae0:	lsl	r3, r3, #2
   5bae4:	sub	r2, fp, #4
   5bae8:	add	r3, r2, r3
   5baec:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5baf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5baf4:	orr	r3, r2, r3
   5baf8:	str	r3, [fp, #-40]	; 0xffffffd8
   5bafc:	ldr	r3, [fp, #-16]
   5bb00:	add	r3, r3, #1
   5bb04:	str	r3, [fp, #-16]
   5bb08:	ldr	r3, [fp, #-16]
   5bb0c:	cmp	r3, #7
   5bb10:	ble	5ba2c <__assert_fail@plt+0x49340>
   5bb14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5bb18:	cmp	r3, #0
   5bb1c:	beq	5bbd4 <__assert_fail@plt+0x494e8>
   5bb20:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bb24:	lsl	r3, r3, #5
   5bb28:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5bb2c:	add	r3, r2, r3
   5bb30:	sub	r2, fp, #132	; 0x84
   5bb34:	mov	r1, r2
   5bb38:	mov	r0, r3
   5bb3c:	bl	440c4 <__assert_fail@plt+0x319d8>
   5bb40:	ldr	r3, [fp, #-12]
   5bb44:	lsl	r3, r3, #5
   5bb48:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5bb4c:	add	r3, r2, r3
   5bb50:	sub	r2, fp, #164	; 0xa4
   5bb54:	mov	r1, r2
   5bb58:	mov	r0, r3
   5bb5c:	bl	440c4 <__assert_fail@plt+0x319d8>
   5bb60:	ldr	r2, [fp, #-20]	; 0xffffffec
   5bb64:	mov	r3, r2
   5bb68:	lsl	r3, r3, #1
   5bb6c:	add	r3, r3, r2
   5bb70:	lsl	r3, r3, #2
   5bb74:	mov	r2, r3
   5bb78:	ldr	r3, [fp, #-176]	; 0xffffff50
   5bb7c:	add	r0, r3, r2
   5bb80:	ldr	r2, [fp, #-12]
   5bb84:	mov	r3, r2
   5bb88:	lsl	r3, r3, #1
   5bb8c:	add	r3, r3, r2
   5bb90:	lsl	r3, r3, #2
   5bb94:	mov	r2, r3
   5bb98:	ldr	r3, [fp, #-176]	; 0xffffff50
   5bb9c:	add	r3, r3, r2
   5bba0:	mov	r1, r3
   5bba4:	bl	47038 <__assert_fail@plt+0x3494c>
   5bba8:	str	r0, [fp, #-64]	; 0xffffffc0
   5bbac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5bbb0:	cmp	r3, #0
   5bbb4:	movne	r3, #1
   5bbb8:	moveq	r3, #0
   5bbbc:	uxtb	r3, r3
   5bbc0:	cmp	r3, #0
   5bbc4:	bne	5bd68 <__assert_fail@plt+0x4967c>
   5bbc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bbcc:	add	r3, r3, #1
   5bbd0:	str	r3, [fp, #-20]	; 0xffffffec
   5bbd4:	ldr	r2, [fp, #-12]
   5bbd8:	mov	r3, r2
   5bbdc:	lsl	r3, r3, #1
   5bbe0:	add	r3, r3, r2
   5bbe4:	lsl	r3, r3, #2
   5bbe8:	mov	r2, r3
   5bbec:	ldr	r3, [fp, #-176]	; 0xffffff50
   5bbf0:	add	r0, r3, r2
   5bbf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5bbf8:	ldr	r2, [r3, #8]
   5bbfc:	ldr	r3, [fp, #-8]
   5bc00:	lsl	r3, r3, #2
   5bc04:	add	r3, r2, r3
   5bc08:	ldr	r3, [r3]
   5bc0c:	mov	r1, r3
   5bc10:	bl	47d94 <__assert_fail@plt+0x356a8>
   5bc14:	mov	r3, r0
   5bc18:	strb	r3, [fp, #-65]	; 0xffffffbf
   5bc1c:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   5bc20:	eor	r3, r3, #1
   5bc24:	uxtb	r3, r3
   5bc28:	cmp	r3, #0
   5bc2c:	bne	5bd70 <__assert_fail@plt+0x49684>
   5bc30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5bc34:	cmp	r3, #0
   5bc38:	beq	5bc6c <__assert_fail@plt+0x49580>
   5bc3c:	b	5bc4c <__assert_fail@plt+0x49560>
   5bc40:	nop			; (mov r0, r0)
   5bc44:	b	5bc4c <__assert_fail@plt+0x49560>
   5bc48:	nop			; (mov r0, r0)
   5bc4c:	ldr	r3, [fp, #-12]
   5bc50:	add	r3, r3, #1
   5bc54:	str	r3, [fp, #-12]
   5bc58:	ldr	r2, [fp, #-12]
   5bc5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bc60:	cmp	r2, r3
   5bc64:	blt	5b930 <__assert_fail@plt+0x49244>
   5bc68:	b	5bc70 <__assert_fail@plt+0x49584>
   5bc6c:	nop			; (mov r0, r0)
   5bc70:	ldr	r2, [fp, #-12]
   5bc74:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bc78:	cmp	r2, r3
   5bc7c:	bne	5bd38 <__assert_fail@plt+0x4964c>
   5bc80:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bc84:	lsl	r3, r3, #5
   5bc88:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5bc8c:	add	r3, r2, r3
   5bc90:	sub	r2, fp, #100	; 0x64
   5bc94:	mov	r1, r2
   5bc98:	mov	r0, r3
   5bc9c:	bl	440c4 <__assert_fail@plt+0x319d8>
   5bca0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5bca4:	mov	r3, r2
   5bca8:	lsl	r3, r3, #1
   5bcac:	add	r3, r3, r2
   5bcb0:	lsl	r3, r3, #2
   5bcb4:	mov	r2, r3
   5bcb8:	ldr	r3, [fp, #-176]	; 0xffffff50
   5bcbc:	add	r0, r3, r2
   5bcc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5bcc4:	ldr	r2, [r3, #8]
   5bcc8:	ldr	r3, [fp, #-8]
   5bccc:	lsl	r3, r3, #2
   5bcd0:	add	r3, r2, r3
   5bcd4:	ldr	r3, [r3]
   5bcd8:	mov	r1, r3
   5bcdc:	bl	46e84 <__assert_fail@plt+0x34798>
   5bce0:	str	r0, [fp, #-64]	; 0xffffffc0
   5bce4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5bce8:	cmp	r3, #0
   5bcec:	movne	r3, #1
   5bcf0:	moveq	r3, #0
   5bcf4:	uxtb	r3, r3
   5bcf8:	cmp	r3, #0
   5bcfc:	bne	5bd78 <__assert_fail@plt+0x4968c>
   5bd00:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bd04:	add	r3, r3, #1
   5bd08:	str	r3, [fp, #-20]	; 0xffffffec
   5bd0c:	sub	r3, fp, #100	; 0x64
   5bd10:	mov	r0, r3
   5bd14:	bl	4406c <__assert_fail@plt+0x31980>
   5bd18:	b	5bd38 <__assert_fail@plt+0x4964c>
   5bd1c:	nop			; (mov r0, r0)
   5bd20:	b	5bd38 <__assert_fail@plt+0x4964c>
   5bd24:	nop			; (mov r0, r0)
   5bd28:	b	5bd38 <__assert_fail@plt+0x4964c>
   5bd2c:	nop			; (mov r0, r0)
   5bd30:	b	5bd38 <__assert_fail@plt+0x4964c>
   5bd34:	nop			; (mov r0, r0)
   5bd38:	ldr	r3, [fp, #-8]
   5bd3c:	add	r3, r3, #1
   5bd40:	str	r3, [fp, #-8]
   5bd44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5bd48:	ldr	r2, [r3, #4]
   5bd4c:	ldr	r3, [fp, #-8]
   5bd50:	cmp	r2, r3
   5bd54:	bgt	5b3ec <__assert_fail@plt+0x48d00>
   5bd58:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bd5c:	cmp	r3, #256	; 0x100
   5bd60:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bd64:	b	5bdd4 <__assert_fail@plt+0x496e8>
   5bd68:	nop			; (mov r0, r0)
   5bd6c:	b	5bd7c <__assert_fail@plt+0x49690>
   5bd70:	nop			; (mov r0, r0)
   5bd74:	b	5bd7c <__assert_fail@plt+0x49690>
   5bd78:	nop			; (mov r0, r0)
   5bd7c:	mov	r3, #0
   5bd80:	str	r3, [fp, #-12]
   5bd84:	b	5bdc0 <__assert_fail@plt+0x496d4>
   5bd88:	ldr	r2, [fp, #-12]
   5bd8c:	mov	r3, r2
   5bd90:	lsl	r3, r3, #1
   5bd94:	add	r3, r3, r2
   5bd98:	lsl	r3, r3, #2
   5bd9c:	mov	r2, r3
   5bda0:	ldr	r3, [fp, #-176]	; 0xffffff50
   5bda4:	add	r3, r3, r2
   5bda8:	ldr	r3, [r3, #8]
   5bdac:	mov	r0, r3
   5bdb0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5bdb4:	ldr	r3, [fp, #-12]
   5bdb8:	add	r3, r3, #1
   5bdbc:	str	r3, [fp, #-12]
   5bdc0:	ldr	r2, [fp, #-12]
   5bdc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bdc8:	cmp	r2, r3
   5bdcc:	blt	5bd88 <__assert_fail@plt+0x4969c>
   5bdd0:	mvn	r3, #0
   5bdd4:	mov	r0, r3
   5bdd8:	sub	sp, fp, #4
   5bddc:	pop	{fp, pc}
   5bde0:	push	{fp, lr}
   5bde4:	add	fp, sp, #4
   5bde8:	sub	sp, sp, #56	; 0x38
   5bdec:	str	r0, [fp, #-48]	; 0xffffffd0
   5bdf0:	str	r1, [fp, #-52]	; 0xffffffcc
   5bdf4:	str	r2, [fp, #-56]	; 0xffffffc8
   5bdf8:	str	r3, [fp, #-60]	; 0xffffffc4
   5bdfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5be00:	ldr	r2, [r3]
   5be04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5be08:	lsl	r3, r3, #3
   5be0c:	add	r3, r2, r3
   5be10:	str	r3, [fp, #-20]	; 0xffffffec
   5be14:	ldr	r3, [fp, #-20]	; 0xffffffec
   5be18:	ldrb	r3, [r3, #4]
   5be1c:	cmp	r3, #7
   5be20:	moveq	r3, #1
   5be24:	movne	r3, #0
   5be28:	uxtb	r3, r3
   5be2c:	cmp	r3, #0
   5be30:	beq	5c04c <__assert_fail@plt+0x49960>
   5be34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5be38:	ldr	r2, [r3, #4]
   5be3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5be40:	add	r3, r2, r3
   5be44:	ldrb	r3, [r3]
   5be48:	strb	r3, [fp, #-21]	; 0xffffffeb
   5be4c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5be50:	cmp	r3, #193	; 0xc1
   5be54:	movls	r3, #1
   5be58:	movhi	r3, #0
   5be5c:	uxtb	r3, r3
   5be60:	cmp	r3, #0
   5be64:	beq	5be70 <__assert_fail@plt+0x49784>
   5be68:	mov	r3, #0
   5be6c:	b	5c334 <__assert_fail@plt+0x49c48>
   5be70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5be74:	add	r2, r3, #2
   5be78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5be7c:	ldr	r3, [r3, #48]	; 0x30
   5be80:	cmp	r2, r3
   5be84:	ble	5be90 <__assert_fail@plt+0x497a4>
   5be88:	mov	r3, #0
   5be8c:	b	5c334 <__assert_fail@plt+0x49c48>
   5be90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5be94:	ldr	r2, [r3, #4]
   5be98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5be9c:	add	r3, r3, #1
   5bea0:	add	r3, r2, r3
   5bea4:	ldrb	r3, [r3]
   5bea8:	strb	r3, [fp, #-22]	; 0xffffffea
   5beac:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5beb0:	cmp	r3, #223	; 0xdf
   5beb4:	bhi	5bee0 <__assert_fail@plt+0x497f4>
   5beb8:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   5bebc:	cmp	r3, #0
   5bec0:	bge	5bed0 <__assert_fail@plt+0x497e4>
   5bec4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5bec8:	cmp	r3, #191	; 0xbf
   5becc:	bls	5bed8 <__assert_fail@plt+0x497ec>
   5bed0:	mov	r3, #0
   5bed4:	b	5c334 <__assert_fail@plt+0x49c48>
   5bed8:	mov	r3, #2
   5bedc:	b	5c334 <__assert_fail@plt+0x49c48>
   5bee0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bee4:	cmp	r3, #239	; 0xef
   5bee8:	bhi	5bf14 <__assert_fail@plt+0x49828>
   5beec:	mov	r3, #3
   5bef0:	str	r3, [fp, #-8]
   5bef4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bef8:	cmp	r3, #224	; 0xe0
   5befc:	bne	5bfb8 <__assert_fail@plt+0x498cc>
   5bf00:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5bf04:	cmp	r3, #159	; 0x9f
   5bf08:	bhi	5bfb8 <__assert_fail@plt+0x498cc>
   5bf0c:	mov	r3, #0
   5bf10:	b	5c334 <__assert_fail@plt+0x49c48>
   5bf14:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bf18:	cmp	r3, #247	; 0xf7
   5bf1c:	bhi	5bf48 <__assert_fail@plt+0x4985c>
   5bf20:	mov	r3, #4
   5bf24:	str	r3, [fp, #-8]
   5bf28:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bf2c:	cmp	r3, #240	; 0xf0
   5bf30:	bne	5bfb8 <__assert_fail@plt+0x498cc>
   5bf34:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5bf38:	cmp	r3, #143	; 0x8f
   5bf3c:	bhi	5bfb8 <__assert_fail@plt+0x498cc>
   5bf40:	mov	r3, #0
   5bf44:	b	5c334 <__assert_fail@plt+0x49c48>
   5bf48:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bf4c:	cmp	r3, #251	; 0xfb
   5bf50:	bhi	5bf7c <__assert_fail@plt+0x49890>
   5bf54:	mov	r3, #5
   5bf58:	str	r3, [fp, #-8]
   5bf5c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bf60:	cmp	r3, #248	; 0xf8
   5bf64:	bne	5bfb8 <__assert_fail@plt+0x498cc>
   5bf68:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5bf6c:	cmp	r3, #135	; 0x87
   5bf70:	bhi	5bfb8 <__assert_fail@plt+0x498cc>
   5bf74:	mov	r3, #0
   5bf78:	b	5c334 <__assert_fail@plt+0x49c48>
   5bf7c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bf80:	cmp	r3, #253	; 0xfd
   5bf84:	bhi	5bfb0 <__assert_fail@plt+0x498c4>
   5bf88:	mov	r3, #6
   5bf8c:	str	r3, [fp, #-8]
   5bf90:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5bf94:	cmp	r3, #252	; 0xfc
   5bf98:	bne	5bfb8 <__assert_fail@plt+0x498cc>
   5bf9c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5bfa0:	cmp	r3, #131	; 0x83
   5bfa4:	bhi	5bfb8 <__assert_fail@plt+0x498cc>
   5bfa8:	mov	r3, #0
   5bfac:	b	5c334 <__assert_fail@plt+0x49c48>
   5bfb0:	mov	r3, #0
   5bfb4:	b	5c334 <__assert_fail@plt+0x49c48>
   5bfb8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   5bfbc:	ldr	r3, [fp, #-8]
   5bfc0:	add	r2, r2, r3
   5bfc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5bfc8:	ldr	r3, [r3, #48]	; 0x30
   5bfcc:	cmp	r2, r3
   5bfd0:	ble	5bfdc <__assert_fail@plt+0x498f0>
   5bfd4:	mov	r3, #0
   5bfd8:	b	5c334 <__assert_fail@plt+0x49c48>
   5bfdc:	mov	r3, #1
   5bfe0:	str	r3, [fp, #-12]
   5bfe4:	b	5c034 <__assert_fail@plt+0x49948>
   5bfe8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5bfec:	ldr	r3, [r3, #4]
   5bff0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5bff4:	ldr	r2, [fp, #-12]
   5bff8:	add	r2, r1, r2
   5bffc:	add	r3, r3, r2
   5c000:	ldrb	r3, [r3]
   5c004:	strb	r3, [fp, #-22]	; 0xffffffea
   5c008:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   5c00c:	cmp	r3, #0
   5c010:	bge	5c020 <__assert_fail@plt+0x49934>
   5c014:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5c018:	cmp	r3, #191	; 0xbf
   5c01c:	bls	5c028 <__assert_fail@plt+0x4993c>
   5c020:	mov	r3, #0
   5c024:	b	5c334 <__assert_fail@plt+0x49c48>
   5c028:	ldr	r3, [fp, #-12]
   5c02c:	add	r3, r3, #1
   5c030:	str	r3, [fp, #-12]
   5c034:	ldr	r2, [fp, #-12]
   5c038:	ldr	r3, [fp, #-8]
   5c03c:	cmp	r2, r3
   5c040:	blt	5bfe8 <__assert_fail@plt+0x498fc>
   5c044:	ldr	r3, [fp, #-8]
   5c048:	b	5c334 <__assert_fail@plt+0x49c48>
   5c04c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5c050:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5c054:	bl	44274 <__assert_fail@plt+0x31b88>
   5c058:	str	r0, [fp, #-8]
   5c05c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c060:	ldrb	r3, [r3, #4]
   5c064:	cmp	r3, #5
   5c068:	bne	5c0f0 <__assert_fail@plt+0x49a04>
   5c06c:	ldr	r3, [fp, #-8]
   5c070:	cmp	r3, #1
   5c074:	bgt	5c080 <__assert_fail@plt+0x49994>
   5c078:	mov	r3, #0
   5c07c:	b	5c334 <__assert_fail@plt+0x49c48>
   5c080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c084:	ldr	r3, [r3, #128]	; 0x80
   5c088:	and	r3, r3, #64	; 0x40
   5c08c:	cmp	r3, #0
   5c090:	bne	5c0b0 <__assert_fail@plt+0x499c4>
   5c094:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c098:	ldr	r2, [r3, #4]
   5c09c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5c0a0:	add	r3, r2, r3
   5c0a4:	ldrb	r3, [r3]
   5c0a8:	cmp	r3, #10
   5c0ac:	beq	5c0e0 <__assert_fail@plt+0x499f4>
   5c0b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c0b4:	ldr	r3, [r3, #128]	; 0x80
   5c0b8:	and	r3, r3, #128	; 0x80
   5c0bc:	cmp	r3, #0
   5c0c0:	beq	5c0e8 <__assert_fail@plt+0x499fc>
   5c0c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c0c8:	ldr	r2, [r3, #4]
   5c0cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5c0d0:	add	r3, r2, r3
   5c0d4:	ldrb	r3, [r3]
   5c0d8:	cmp	r3, #0
   5c0dc:	bne	5c0e8 <__assert_fail@plt+0x499fc>
   5c0e0:	mov	r3, #0
   5c0e4:	b	5c334 <__assert_fail@plt+0x49c48>
   5c0e8:	ldr	r3, [fp, #-8]
   5c0ec:	b	5c334 <__assert_fail@plt+0x49c48>
   5c0f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5c0f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5c0f8:	bl	4437c <__assert_fail@plt+0x31c90>
   5c0fc:	str	r0, [fp, #-28]	; 0xffffffe4
   5c100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c104:	cmp	r3, #1
   5c108:	bgt	5c118 <__assert_fail@plt+0x49a2c>
   5c10c:	ldr	r3, [fp, #-8]
   5c110:	cmp	r3, #1
   5c114:	ble	5c124 <__assert_fail@plt+0x49a38>
   5c118:	ldr	r3, [fp, #-8]
   5c11c:	cmp	r3, #0
   5c120:	bne	5c12c <__assert_fail@plt+0x49a40>
   5c124:	mov	r3, #0
   5c128:	b	5c334 <__assert_fail@plt+0x49c48>
   5c12c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c130:	ldrb	r3, [r3, #4]
   5c134:	cmp	r3, #6
   5c138:	bne	5c330 <__assert_fail@plt+0x49c44>
   5c13c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c140:	ldr	r3, [r3]
   5c144:	str	r3, [fp, #-32]	; 0xffffffe0
   5c148:	mov	r3, #0
   5c14c:	str	r3, [fp, #-16]
   5c150:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c154:	ldr	r3, [r3, #32]
   5c158:	cmp	r3, #0
   5c15c:	bne	5c180 <__assert_fail@plt+0x49a94>
   5c160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c164:	ldr	r3, [r3, #36]	; 0x24
   5c168:	cmp	r3, #0
   5c16c:	bne	5c180 <__assert_fail@plt+0x49a94>
   5c170:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c174:	ldr	r3, [r3, #20]
   5c178:	cmp	r3, #0
   5c17c:	beq	5c194 <__assert_fail@plt+0x49aa8>
   5c180:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5c184:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5c188:	bl	44318 <__assert_fail@plt+0x31c2c>
   5c18c:	mov	r3, r0
   5c190:	b	5c198 <__assert_fail@plt+0x49aac>
   5c194:	mov	r3, #0
   5c198:	str	r3, [fp, #-36]	; 0xffffffdc
   5c19c:	mov	r3, #0
   5c1a0:	str	r3, [fp, #-12]
   5c1a4:	b	5c1e4 <__assert_fail@plt+0x49af8>
   5c1a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c1ac:	ldr	r2, [r3]
   5c1b0:	ldr	r3, [fp, #-12]
   5c1b4:	lsl	r3, r3, #2
   5c1b8:	add	r3, r2, r3
   5c1bc:	ldr	r2, [r3]
   5c1c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5c1c4:	cmp	r2, r3
   5c1c8:	bne	5c1d8 <__assert_fail@plt+0x49aec>
   5c1cc:	ldr	r3, [fp, #-8]
   5c1d0:	str	r3, [fp, #-16]
   5c1d4:	b	5c2e4 <__assert_fail@plt+0x49bf8>
   5c1d8:	ldr	r3, [fp, #-12]
   5c1dc:	add	r3, r3, #1
   5c1e0:	str	r3, [fp, #-12]
   5c1e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c1e8:	ldr	r2, [r3, #20]
   5c1ec:	ldr	r3, [fp, #-12]
   5c1f0:	cmp	r2, r3
   5c1f4:	bgt	5c1a8 <__assert_fail@plt+0x49abc>
   5c1f8:	mov	r3, #0
   5c1fc:	str	r3, [fp, #-12]
   5c200:	b	5c250 <__assert_fail@plt+0x49b64>
   5c204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c208:	ldr	r2, [r3, #12]
   5c20c:	ldr	r3, [fp, #-12]
   5c210:	lsl	r3, r3, #2
   5c214:	add	r3, r2, r3
   5c218:	ldr	r3, [r3]
   5c21c:	str	r3, [fp, #-40]	; 0xffffffd8
   5c220:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5c224:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c228:	bl	11ff0 <iswctype@plt>
   5c22c:	mov	r3, r0
   5c230:	cmp	r3, #0
   5c234:	beq	5c244 <__assert_fail@plt+0x49b58>
   5c238:	ldr	r3, [fp, #-8]
   5c23c:	str	r3, [fp, #-16]
   5c240:	b	5c2e4 <__assert_fail@plt+0x49bf8>
   5c244:	ldr	r3, [fp, #-12]
   5c248:	add	r3, r3, #1
   5c24c:	str	r3, [fp, #-12]
   5c250:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c254:	ldr	r2, [r3, #36]	; 0x24
   5c258:	ldr	r3, [fp, #-12]
   5c25c:	cmp	r2, r3
   5c260:	bgt	5c204 <__assert_fail@plt+0x49b18>
   5c264:	mov	r3, #0
   5c268:	str	r3, [fp, #-12]
   5c26c:	b	5c2d0 <__assert_fail@plt+0x49be4>
   5c270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c274:	ldr	r2, [r3, #4]
   5c278:	ldr	r3, [fp, #-12]
   5c27c:	lsl	r3, r3, #2
   5c280:	add	r3, r2, r3
   5c284:	ldr	r2, [r3]
   5c288:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5c28c:	cmp	r2, r3
   5c290:	bhi	5c2c4 <__assert_fail@plt+0x49bd8>
   5c294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c298:	ldr	r2, [r3, #8]
   5c29c:	ldr	r3, [fp, #-12]
   5c2a0:	lsl	r3, r3, #2
   5c2a4:	add	r3, r2, r3
   5c2a8:	ldr	r2, [r3]
   5c2ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5c2b0:	cmp	r2, r3
   5c2b4:	bcc	5c2c4 <__assert_fail@plt+0x49bd8>
   5c2b8:	ldr	r3, [fp, #-8]
   5c2bc:	str	r3, [fp, #-16]
   5c2c0:	b	5c2e4 <__assert_fail@plt+0x49bf8>
   5c2c4:	ldr	r3, [fp, #-12]
   5c2c8:	add	r3, r3, #1
   5c2cc:	str	r3, [fp, #-12]
   5c2d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c2d4:	ldr	r2, [r3, #32]
   5c2d8:	ldr	r3, [fp, #-12]
   5c2dc:	cmp	r2, r3
   5c2e0:	bgt	5c270 <__assert_fail@plt+0x49b84>
   5c2e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c2e8:	ldrb	r3, [r3, #16]
   5c2ec:	and	r3, r3, #1
   5c2f0:	uxtb	r3, r3
   5c2f4:	cmp	r3, #0
   5c2f8:	bne	5c304 <__assert_fail@plt+0x49c18>
   5c2fc:	ldr	r3, [fp, #-16]
   5c300:	b	5c334 <__assert_fail@plt+0x49c48>
   5c304:	ldr	r3, [fp, #-16]
   5c308:	cmp	r3, #0
   5c30c:	ble	5c318 <__assert_fail@plt+0x49c2c>
   5c310:	mov	r3, #0
   5c314:	b	5c334 <__assert_fail@plt+0x49c48>
   5c318:	ldr	r2, [fp, #-8]
   5c31c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c320:	cmp	r2, r3
   5c324:	movge	r3, r2
   5c328:	movlt	r3, r3
   5c32c:	b	5c334 <__assert_fail@plt+0x49c48>
   5c330:	mov	r3, #0
   5c334:	mov	r0, r3
   5c338:	sub	sp, fp, #4
   5c33c:	pop	{fp, pc}
   5c340:	push	{fp, lr}
   5c344:	add	fp, sp, #4
   5c348:	sub	sp, sp, #24
   5c34c:	str	r0, [fp, #-16]
   5c350:	str	r1, [fp, #-20]	; 0xffffffec
   5c354:	str	r2, [fp, #-24]	; 0xffffffe8
   5c358:	ldr	r3, [fp, #-16]
   5c35c:	ldr	r2, [r3, #4]
   5c360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c364:	add	r3, r2, r3
   5c368:	ldrb	r3, [r3]
   5c36c:	strb	r3, [fp, #-5]
   5c370:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c374:	ldrb	r3, [r3, #4]
   5c378:	sub	r3, r3, #1
   5c37c:	cmp	r3, #6
   5c380:	ldrls	pc, [pc, r3, lsl #2]
   5c384:	b	5c458 <__assert_fail@plt+0x49d6c>
   5c388:	andeq	ip, r5, r4, lsr #7
   5c38c:	andeq	ip, r5, r8, asr r4
   5c390:	andeq	ip, r5, r0, asr #7
   5c394:	andeq	ip, r5, r8, asr r4
   5c398:	andeq	ip, r5, r8, lsl #8
   5c39c:	andeq	ip, r5, r8, asr r4
   5c3a0:	strdeq	ip, [r5], -r4
   5c3a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c3a8:	ldrb	r3, [r3]
   5c3ac:	ldrb	r2, [fp, #-5]
   5c3b0:	cmp	r2, r3
   5c3b4:	beq	5c460 <__assert_fail@plt+0x49d74>
   5c3b8:	mov	r3, #0
   5c3bc:	b	5c584 <__assert_fail@plt+0x49e98>
   5c3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c3c4:	ldr	r3, [r3]
   5c3c8:	ldrb	r2, [fp, #-5]
   5c3cc:	mov	r1, r2
   5c3d0:	mov	r0, r3
   5c3d4:	bl	43ff0 <__assert_fail@plt+0x31904>
   5c3d8:	mov	r3, r0
   5c3dc:	eor	r3, r3, #1
   5c3e0:	uxtb	r3, r3
   5c3e4:	cmp	r3, #0
   5c3e8:	beq	5c468 <__assert_fail@plt+0x49d7c>
   5c3ec:	mov	r3, #0
   5c3f0:	b	5c584 <__assert_fail@plt+0x49e98>
   5c3f4:	ldrsb	r3, [fp, #-5]
   5c3f8:	cmp	r3, #0
   5c3fc:	bge	5c408 <__assert_fail@plt+0x49d1c>
   5c400:	mov	r3, #0
   5c404:	b	5c584 <__assert_fail@plt+0x49e98>
   5c408:	ldrb	r3, [fp, #-5]
   5c40c:	cmp	r3, #10
   5c410:	bne	5c42c <__assert_fail@plt+0x49d40>
   5c414:	ldr	r3, [fp, #-16]
   5c418:	ldr	r3, [r3, #84]	; 0x54
   5c41c:	ldr	r3, [r3, #128]	; 0x80
   5c420:	and	r3, r3, #64	; 0x40
   5c424:	cmp	r3, #0
   5c428:	beq	5c450 <__assert_fail@plt+0x49d64>
   5c42c:	ldrb	r3, [fp, #-5]
   5c430:	cmp	r3, #0
   5c434:	bne	5c470 <__assert_fail@plt+0x49d84>
   5c438:	ldr	r3, [fp, #-16]
   5c43c:	ldr	r3, [r3, #84]	; 0x54
   5c440:	ldr	r3, [r3, #128]	; 0x80
   5c444:	and	r3, r3, #128	; 0x80
   5c448:	cmp	r3, #0
   5c44c:	beq	5c470 <__assert_fail@plt+0x49d84>
   5c450:	mov	r3, #0
   5c454:	b	5c584 <__assert_fail@plt+0x49e98>
   5c458:	mov	r3, #0
   5c45c:	b	5c584 <__assert_fail@plt+0x49e98>
   5c460:	nop			; (mov r0, r0)
   5c464:	b	5c474 <__assert_fail@plt+0x49d88>
   5c468:	nop			; (mov r0, r0)
   5c46c:	b	5c474 <__assert_fail@plt+0x49d88>
   5c470:	nop			; (mov r0, r0)
   5c474:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c478:	ldr	r2, [r3, #4]
   5c47c:	ldr	r3, [pc, #268]	; 5c590 <__assert_fail@plt+0x49ea4>
   5c480:	and	r3, r3, r2
   5c484:	cmp	r3, #0
   5c488:	beq	5c580 <__assert_fail@plt+0x49e94>
   5c48c:	ldr	r0, [fp, #-16]
   5c490:	ldr	r3, [fp, #-16]
   5c494:	ldr	r3, [r3, #88]	; 0x58
   5c498:	mov	r2, r3
   5c49c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5c4a0:	bl	46c18 <__assert_fail@plt+0x3452c>
   5c4a4:	str	r0, [fp, #-12]
   5c4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c4ac:	ldr	r3, [r3, #4]
   5c4b0:	lsr	r3, r3, #8
   5c4b4:	lsl	r3, r3, #22
   5c4b8:	lsr	r3, r3, #22
   5c4bc:	uxth	r3, r3
   5c4c0:	and	r3, r3, #4
   5c4c4:	cmp	r3, #0
   5c4c8:	beq	5c4dc <__assert_fail@plt+0x49df0>
   5c4cc:	ldr	r3, [fp, #-12]
   5c4d0:	and	r3, r3, #1
   5c4d4:	cmp	r3, #0
   5c4d8:	beq	5c578 <__assert_fail@plt+0x49e8c>
   5c4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c4e0:	ldr	r3, [r3, #4]
   5c4e4:	lsr	r3, r3, #8
   5c4e8:	lsl	r3, r3, #22
   5c4ec:	lsr	r3, r3, #22
   5c4f0:	uxth	r3, r3
   5c4f4:	and	r3, r3, #8
   5c4f8:	cmp	r3, #0
   5c4fc:	beq	5c510 <__assert_fail@plt+0x49e24>
   5c500:	ldr	r3, [fp, #-12]
   5c504:	and	r3, r3, #1
   5c508:	cmp	r3, #0
   5c50c:	bne	5c578 <__assert_fail@plt+0x49e8c>
   5c510:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c514:	ldr	r3, [r3, #4]
   5c518:	lsr	r3, r3, #8
   5c51c:	lsl	r3, r3, #22
   5c520:	lsr	r3, r3, #22
   5c524:	uxth	r3, r3
   5c528:	and	r3, r3, #32
   5c52c:	cmp	r3, #0
   5c530:	beq	5c544 <__assert_fail@plt+0x49e58>
   5c534:	ldr	r3, [fp, #-12]
   5c538:	and	r3, r3, #2
   5c53c:	cmp	r3, #0
   5c540:	beq	5c578 <__assert_fail@plt+0x49e8c>
   5c544:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c548:	ldr	r3, [r3, #4]
   5c54c:	lsr	r3, r3, #8
   5c550:	lsl	r3, r3, #22
   5c554:	lsr	r3, r3, #22
   5c558:	uxth	r3, r3
   5c55c:	and	r3, r3, #128	; 0x80
   5c560:	cmp	r3, #0
   5c564:	beq	5c580 <__assert_fail@plt+0x49e94>
   5c568:	ldr	r3, [fp, #-12]
   5c56c:	and	r3, r3, #8
   5c570:	cmp	r3, #0
   5c574:	bne	5c580 <__assert_fail@plt+0x49e94>
   5c578:	mov	r3, #0
   5c57c:	b	5c584 <__assert_fail@plt+0x49e98>
   5c580:	mov	r3, #1
   5c584:	mov	r0, r3
   5c588:	sub	sp, fp, #4
   5c58c:	pop	{fp, pc}
   5c590:	andeq	pc, r3, r0, lsl #30
   5c594:	push	{fp, lr}
   5c598:	add	fp, sp, #4
   5c59c:	sub	sp, sp, #24
   5c5a0:	str	r0, [fp, #-24]	; 0xffffffe8
   5c5a4:	str	r1, [fp, #-28]	; 0xffffffe4
   5c5a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c5ac:	str	r3, [fp, #-8]
   5c5b0:	ldr	r3, [fp, #-8]
   5c5b4:	ldr	r3, [r3, #36]	; 0x24
   5c5b8:	cmn	r3, #-536870910	; 0xe0000002
   5c5bc:	movhi	r3, #1
   5c5c0:	movls	r3, #0
   5c5c4:	uxtb	r3, r3
   5c5c8:	cmp	r3, #0
   5c5cc:	beq	5c5d8 <__assert_fail@plt+0x49eec>
   5c5d0:	mov	r3, #12
   5c5d4:	b	5c738 <__assert_fail@plt+0x4a04c>
   5c5d8:	ldr	r3, [fp, #-8]
   5c5dc:	ldr	r3, [r3, #36]	; 0x24
   5c5e0:	lsl	r2, r3, #1
   5c5e4:	ldr	r3, [fp, #-8]
   5c5e8:	ldr	r3, [r3, #48]	; 0x30
   5c5ec:	cmp	r2, r3
   5c5f0:	movlt	r2, r2
   5c5f4:	movge	r2, r3
   5c5f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c5fc:	cmp	r2, r3
   5c600:	movge	r3, r2
   5c604:	movlt	r3, r3
   5c608:	mov	r1, r3
   5c60c:	ldr	r0, [fp, #-8]
   5c610:	bl	44704 <__assert_fail@plt+0x32018>
   5c614:	str	r0, [fp, #-12]
   5c618:	ldr	r3, [fp, #-12]
   5c61c:	cmp	r3, #0
   5c620:	movne	r3, #1
   5c624:	moveq	r3, #0
   5c628:	uxtb	r3, r3
   5c62c:	cmp	r3, #0
   5c630:	beq	5c63c <__assert_fail@plt+0x49f50>
   5c634:	ldr	r3, [fp, #-12]
   5c638:	b	5c738 <__assert_fail@plt+0x4a04c>
   5c63c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c640:	ldr	r3, [r3, #100]	; 0x64
   5c644:	cmp	r3, #0
   5c648:	beq	5c6a4 <__assert_fail@plt+0x49fb8>
   5c64c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c650:	ldr	r2, [r3, #100]	; 0x64
   5c654:	ldr	r3, [fp, #-8]
   5c658:	ldr	r3, [r3, #36]	; 0x24
   5c65c:	add	r3, r3, #1
   5c660:	lsl	r3, r3, #2
   5c664:	mov	r1, r3
   5c668:	mov	r0, r2
   5c66c:	bl	43d30 <__assert_fail@plt+0x31644>
   5c670:	str	r0, [fp, #-16]
   5c674:	ldr	r3, [fp, #-16]
   5c678:	cmp	r3, #0
   5c67c:	moveq	r3, #1
   5c680:	movne	r3, #0
   5c684:	uxtb	r3, r3
   5c688:	cmp	r3, #0
   5c68c:	beq	5c698 <__assert_fail@plt+0x49fac>
   5c690:	mov	r3, #12
   5c694:	b	5c738 <__assert_fail@plt+0x4a04c>
   5c698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c69c:	ldr	r2, [fp, #-16]
   5c6a0:	str	r2, [r3, #100]	; 0x64
   5c6a4:	ldr	r3, [fp, #-8]
   5c6a8:	ldrb	r3, [r3, #72]	; 0x48
   5c6ac:	cmp	r3, #0
   5c6b0:	beq	5c700 <__assert_fail@plt+0x4a014>
   5c6b4:	ldr	r3, [fp, #-8]
   5c6b8:	ldr	r3, [r3, #80]	; 0x50
   5c6bc:	cmp	r3, #1
   5c6c0:	ble	5c6f4 <__assert_fail@plt+0x4a008>
   5c6c4:	ldr	r0, [fp, #-8]
   5c6c8:	bl	44d30 <__assert_fail@plt+0x32644>
   5c6cc:	str	r0, [fp, #-12]
   5c6d0:	ldr	r3, [fp, #-12]
   5c6d4:	cmp	r3, #0
   5c6d8:	movne	r3, #1
   5c6dc:	moveq	r3, #0
   5c6e0:	uxtb	r3, r3
   5c6e4:	cmp	r3, #0
   5c6e8:	beq	5c734 <__assert_fail@plt+0x4a048>
   5c6ec:	ldr	r3, [fp, #-12]
   5c6f0:	b	5c738 <__assert_fail@plt+0x4a04c>
   5c6f4:	ldr	r0, [fp, #-8]
   5c6f8:	bl	459fc <__assert_fail@plt+0x33310>
   5c6fc:	b	5c734 <__assert_fail@plt+0x4a048>
   5c700:	ldr	r3, [fp, #-8]
   5c704:	ldr	r3, [r3, #80]	; 0x50
   5c708:	cmp	r3, #1
   5c70c:	ble	5c71c <__assert_fail@plt+0x4a030>
   5c710:	ldr	r0, [fp, #-8]
   5c714:	bl	449b8 <__assert_fail@plt+0x322cc>
   5c718:	b	5c734 <__assert_fail@plt+0x4a048>
   5c71c:	ldr	r3, [fp, #-8]
   5c720:	ldr	r3, [r3, #64]	; 0x40
   5c724:	cmp	r3, #0
   5c728:	beq	5c734 <__assert_fail@plt+0x4a048>
   5c72c:	ldr	r0, [fp, #-8]
   5c730:	bl	45afc <__assert_fail@plt+0x33410>
   5c734:	mov	r3, #0
   5c738:	mov	r0, r3
   5c73c:	sub	sp, fp, #4
   5c740:	pop	{fp, pc}
   5c744:	push	{fp, lr}
   5c748:	add	fp, sp, #4
   5c74c:	sub	sp, sp, #24
   5c750:	str	r0, [fp, #-16]
   5c754:	str	r1, [fp, #-20]	; 0xffffffec
   5c758:	str	r2, [fp, #-24]	; 0xffffffe8
   5c75c:	ldr	r3, [fp, #-16]
   5c760:	ldr	r2, [fp, #-20]	; 0xffffffec
   5c764:	str	r2, [r3, #88]	; 0x58
   5c768:	ldr	r3, [fp, #-16]
   5c76c:	mvn	r2, #0
   5c770:	str	r2, [r3, #92]	; 0x5c
   5c774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c778:	cmp	r3, #0
   5c77c:	ble	5c874 <__assert_fail@plt+0x4a188>
   5c780:	mov	r3, #24
   5c784:	str	r3, [fp, #-8]
   5c788:	ldr	r1, [fp, #-8]
   5c78c:	mvn	r0, #0
   5c790:	bl	63574 <__assert_fail@plt+0x50e88>
   5c794:	mov	r3, r0
   5c798:	cmp	r3, #0
   5c79c:	blt	5c7b8 <__assert_fail@plt+0x4a0cc>
   5c7a0:	ldr	r1, [fp, #-8]
   5c7a4:	mvn	r0, #0
   5c7a8:	bl	63574 <__assert_fail@plt+0x50e88>
   5c7ac:	mov	r3, r0
   5c7b0:	mov	r2, r3
   5c7b4:	b	5c7bc <__assert_fail@plt+0x4a0d0>
   5c7b8:	mvn	r2, #-2147483648	; 0x80000000
   5c7bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c7c0:	cmp	r2, r3
   5c7c4:	movcc	r3, #1
   5c7c8:	movcs	r3, #0
   5c7cc:	uxtb	r3, r3
   5c7d0:	cmp	r3, #0
   5c7d4:	beq	5c7e0 <__assert_fail@plt+0x4a0f4>
   5c7d8:	mov	r3, #12
   5c7dc:	b	5c89c <__assert_fail@plt+0x4a1b0>
   5c7e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c7e4:	mov	r3, r2
   5c7e8:	lsl	r3, r3, #1
   5c7ec:	add	r3, r3, r2
   5c7f0:	lsl	r3, r3, #3
   5c7f4:	mov	r0, r3
   5c7f8:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5c7fc:	mov	r3, r0
   5c800:	mov	r2, r3
   5c804:	ldr	r3, [fp, #-16]
   5c808:	str	r2, [r3, #116]	; 0x74
   5c80c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c810:	lsl	r3, r3, #2
   5c814:	mov	r0, r3
   5c818:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5c81c:	mov	r3, r0
   5c820:	mov	r2, r3
   5c824:	ldr	r3, [fp, #-16]
   5c828:	str	r2, [r3, #132]	; 0x84
   5c82c:	ldr	r3, [fp, #-16]
   5c830:	ldr	r3, [r3, #116]	; 0x74
   5c834:	cmp	r3, #0
   5c838:	moveq	r3, #1
   5c83c:	movne	r3, #0
   5c840:	uxtb	r3, r3
   5c844:	cmp	r3, #0
   5c848:	bne	5c86c <__assert_fail@plt+0x4a180>
   5c84c:	ldr	r3, [fp, #-16]
   5c850:	ldr	r3, [r3, #132]	; 0x84
   5c854:	cmp	r3, #0
   5c858:	moveq	r3, #1
   5c85c:	movne	r3, #0
   5c860:	uxtb	r3, r3
   5c864:	cmp	r3, #0
   5c868:	beq	5c874 <__assert_fail@plt+0x4a188>
   5c86c:	mov	r3, #12
   5c870:	b	5c89c <__assert_fail@plt+0x4a1b0>
   5c874:	ldr	r3, [fp, #-16]
   5c878:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c87c:	str	r2, [r3, #112]	; 0x70
   5c880:	ldr	r3, [fp, #-16]
   5c884:	mov	r2, #1
   5c888:	str	r2, [r3, #120]	; 0x78
   5c88c:	ldr	r3, [fp, #-16]
   5c890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c894:	str	r2, [r3, #128]	; 0x80
   5c898:	mov	r3, #0
   5c89c:	mov	r0, r3
   5c8a0:	sub	sp, fp, #4
   5c8a4:	pop	{fp, pc}
   5c8a8:	push	{fp, lr}
   5c8ac:	add	fp, sp, #4
   5c8b0:	sub	sp, sp, #24
   5c8b4:	str	r0, [fp, #-24]	; 0xffffffe8
   5c8b8:	mov	r3, #0
   5c8bc:	str	r3, [fp, #-8]
   5c8c0:	b	5c998 <__assert_fail@plt+0x4a2ac>
   5c8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c8c8:	ldr	r2, [r3, #132]	; 0x84
   5c8cc:	ldr	r3, [fp, #-8]
   5c8d0:	lsl	r3, r3, #2
   5c8d4:	add	r3, r2, r3
   5c8d8:	ldr	r3, [r3]
   5c8dc:	str	r3, [fp, #-16]
   5c8e0:	mov	r3, #0
   5c8e4:	str	r3, [fp, #-12]
   5c8e8:	b	5c92c <__assert_fail@plt+0x4a240>
   5c8ec:	ldr	r3, [fp, #-16]
   5c8f0:	ldr	r2, [r3, #20]
   5c8f4:	ldr	r3, [fp, #-12]
   5c8f8:	lsl	r3, r3, #2
   5c8fc:	add	r3, r2, r3
   5c900:	ldr	r3, [r3]
   5c904:	str	r3, [fp, #-20]	; 0xffffffec
   5c908:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c90c:	ldr	r3, [r3, #16]
   5c910:	mov	r0, r3
   5c914:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c918:	ldr	r0, [fp, #-20]	; 0xffffffec
   5c91c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c920:	ldr	r3, [fp, #-12]
   5c924:	add	r3, r3, #1
   5c928:	str	r3, [fp, #-12]
   5c92c:	ldr	r3, [fp, #-16]
   5c930:	ldr	r2, [r3, #16]
   5c934:	ldr	r3, [fp, #-12]
   5c938:	cmp	r2, r3
   5c93c:	bgt	5c8ec <__assert_fail@plt+0x4a200>
   5c940:	ldr	r3, [fp, #-16]
   5c944:	ldr	r3, [r3, #20]
   5c948:	mov	r0, r3
   5c94c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c950:	ldr	r3, [fp, #-16]
   5c954:	ldr	r3, [r3, #8]
   5c958:	cmp	r3, #0
   5c95c:	beq	5c984 <__assert_fail@plt+0x4a298>
   5c960:	ldr	r3, [fp, #-16]
   5c964:	ldr	r3, [r3, #8]
   5c968:	ldr	r3, [r3, #8]
   5c96c:	mov	r0, r3
   5c970:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c974:	ldr	r3, [fp, #-16]
   5c978:	ldr	r3, [r3, #8]
   5c97c:	mov	r0, r3
   5c980:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c984:	ldr	r0, [fp, #-16]
   5c988:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c98c:	ldr	r3, [fp, #-8]
   5c990:	add	r3, r3, #1
   5c994:	str	r3, [fp, #-8]
   5c998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c99c:	ldr	r2, [r3, #124]	; 0x7c
   5c9a0:	ldr	r3, [fp, #-8]
   5c9a4:	cmp	r2, r3
   5c9a8:	bgt	5c8c4 <__assert_fail@plt+0x4a1d8>
   5c9ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c9b0:	mov	r2, #0
   5c9b4:	str	r2, [r3, #124]	; 0x7c
   5c9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c9bc:	mov	r2, #0
   5c9c0:	str	r2, [r3, #108]	; 0x6c
   5c9c4:	nop			; (mov r0, r0)
   5c9c8:	sub	sp, fp, #4
   5c9cc:	pop	{fp, pc}
   5c9d0:	push	{fp, lr}
   5c9d4:	add	fp, sp, #4
   5c9d8:	sub	sp, sp, #8
   5c9dc:	str	r0, [fp, #-8]
   5c9e0:	ldr	r0, [fp, #-8]
   5c9e4:	bl	5c8a8 <__assert_fail@plt+0x4a1bc>
   5c9e8:	ldr	r3, [fp, #-8]
   5c9ec:	ldr	r3, [r3, #132]	; 0x84
   5c9f0:	mov	r0, r3
   5c9f4:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5c9f8:	ldr	r3, [fp, #-8]
   5c9fc:	ldr	r3, [r3, #116]	; 0x74
   5ca00:	mov	r0, r3
   5ca04:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5ca08:	nop			; (mov r0, r0)
   5ca0c:	sub	sp, fp, #4
   5ca10:	pop	{fp, pc}
   5ca14:	push	{fp, lr}
   5ca18:	add	fp, sp, #4
   5ca1c:	sub	sp, sp, #24
   5ca20:	str	r0, [fp, #-16]
   5ca24:	str	r1, [fp, #-20]	; 0xffffffec
   5ca28:	str	r2, [fp, #-24]	; 0xffffffe8
   5ca2c:	str	r3, [fp, #-28]	; 0xffffffe4
   5ca30:	ldr	r3, [fp, #-16]
   5ca34:	ldr	r2, [r3, #108]	; 0x6c
   5ca38:	ldr	r3, [fp, #-16]
   5ca3c:	ldr	r3, [r3, #112]	; 0x70
   5ca40:	cmp	r2, r3
   5ca44:	blt	5cb18 <__assert_fail@plt+0x4a42c>
   5ca48:	ldr	r3, [fp, #-16]
   5ca4c:	ldr	r0, [r3, #116]	; 0x74
   5ca50:	ldr	r3, [fp, #-16]
   5ca54:	ldr	r2, [r3, #112]	; 0x70
   5ca58:	mov	r3, r2
   5ca5c:	lsl	r3, r3, #1
   5ca60:	add	r3, r3, r2
   5ca64:	lsl	r3, r3, #4
   5ca68:	mov	r1, r3
   5ca6c:	bl	43d30 <__assert_fail@plt+0x31644>
   5ca70:	str	r0, [fp, #-8]
   5ca74:	ldr	r3, [fp, #-8]
   5ca78:	cmp	r3, #0
   5ca7c:	moveq	r3, #1
   5ca80:	movne	r3, #0
   5ca84:	uxtb	r3, r3
   5ca88:	cmp	r3, #0
   5ca8c:	beq	5caa8 <__assert_fail@plt+0x4a3bc>
   5ca90:	ldr	r3, [fp, #-16]
   5ca94:	ldr	r3, [r3, #116]	; 0x74
   5ca98:	mov	r0, r3
   5ca9c:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5caa0:	mov	r3, #12
   5caa4:	b	5cd10 <__assert_fail@plt+0x4a624>
   5caa8:	ldr	r3, [fp, #-16]
   5caac:	ldr	r2, [fp, #-8]
   5cab0:	str	r2, [r3, #116]	; 0x74
   5cab4:	ldr	r3, [fp, #-16]
   5cab8:	ldr	r2, [r3, #116]	; 0x74
   5cabc:	ldr	r3, [fp, #-16]
   5cac0:	ldr	r3, [r3, #108]	; 0x6c
   5cac4:	mov	r1, r3
   5cac8:	mov	r3, r1
   5cacc:	lsl	r3, r3, #1
   5cad0:	add	r3, r3, r1
   5cad4:	lsl	r3, r3, #3
   5cad8:	add	r0, r2, r3
   5cadc:	ldr	r3, [fp, #-16]
   5cae0:	ldr	r3, [r3, #112]	; 0x70
   5cae4:	mov	r2, r3
   5cae8:	mov	r3, r2
   5caec:	lsl	r3, r3, #1
   5caf0:	add	r3, r3, r2
   5caf4:	lsl	r3, r3, #3
   5caf8:	mov	r2, r3
   5cafc:	mov	r1, #0
   5cb00:	bl	12434 <memset@plt>
   5cb04:	ldr	r3, [fp, #-16]
   5cb08:	ldr	r3, [r3, #112]	; 0x70
   5cb0c:	lsl	r2, r3, #1
   5cb10:	ldr	r3, [fp, #-16]
   5cb14:	str	r2, [r3, #112]	; 0x70
   5cb18:	ldr	r3, [fp, #-16]
   5cb1c:	ldr	r3, [r3, #108]	; 0x6c
   5cb20:	cmp	r3, #0
   5cb24:	ble	5cb98 <__assert_fail@plt+0x4a4ac>
   5cb28:	ldr	r3, [fp, #-16]
   5cb2c:	ldr	r2, [r3, #116]	; 0x74
   5cb30:	ldr	r3, [fp, #-16]
   5cb34:	ldr	r3, [r3, #108]	; 0x6c
   5cb38:	mov	r1, r3
   5cb3c:	mov	r3, r1
   5cb40:	lsl	r3, r3, #1
   5cb44:	add	r3, r3, r1
   5cb48:	lsl	r3, r3, #3
   5cb4c:	sub	r3, r3, #24
   5cb50:	add	r3, r2, r3
   5cb54:	ldr	r2, [r3, #4]
   5cb58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cb5c:	cmp	r2, r3
   5cb60:	bne	5cb98 <__assert_fail@plt+0x4a4ac>
   5cb64:	ldr	r3, [fp, #-16]
   5cb68:	ldr	r2, [r3, #116]	; 0x74
   5cb6c:	ldr	r3, [fp, #-16]
   5cb70:	ldr	r3, [r3, #108]	; 0x6c
   5cb74:	mov	r1, r3
   5cb78:	mov	r3, r1
   5cb7c:	lsl	r3, r3, #1
   5cb80:	add	r3, r3, r1
   5cb84:	lsl	r3, r3, #3
   5cb88:	sub	r3, r3, #24
   5cb8c:	add	r3, r2, r3
   5cb90:	mov	r2, #1
   5cb94:	strb	r2, [r3, #20]
   5cb98:	ldr	r3, [fp, #-16]
   5cb9c:	ldr	r2, [r3, #116]	; 0x74
   5cba0:	ldr	r3, [fp, #-16]
   5cba4:	ldr	r3, [r3, #108]	; 0x6c
   5cba8:	mov	r1, r3
   5cbac:	mov	r3, r1
   5cbb0:	lsl	r3, r3, #1
   5cbb4:	add	r3, r3, r1
   5cbb8:	lsl	r3, r3, #3
   5cbbc:	add	r3, r2, r3
   5cbc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5cbc4:	str	r2, [r3]
   5cbc8:	ldr	r3, [fp, #-16]
   5cbcc:	ldr	r2, [r3, #116]	; 0x74
   5cbd0:	ldr	r3, [fp, #-16]
   5cbd4:	ldr	r3, [r3, #108]	; 0x6c
   5cbd8:	mov	r1, r3
   5cbdc:	mov	r3, r1
   5cbe0:	lsl	r3, r3, #1
   5cbe4:	add	r3, r3, r1
   5cbe8:	lsl	r3, r3, #3
   5cbec:	add	r3, r2, r3
   5cbf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5cbf4:	str	r2, [r3, #4]
   5cbf8:	ldr	r3, [fp, #-16]
   5cbfc:	ldr	r2, [r3, #116]	; 0x74
   5cc00:	ldr	r3, [fp, #-16]
   5cc04:	ldr	r3, [r3, #108]	; 0x6c
   5cc08:	mov	r1, r3
   5cc0c:	mov	r3, r1
   5cc10:	lsl	r3, r3, #1
   5cc14:	add	r3, r3, r1
   5cc18:	lsl	r3, r3, #3
   5cc1c:	add	r3, r2, r3
   5cc20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5cc24:	str	r2, [r3, #8]
   5cc28:	ldr	r3, [fp, #-16]
   5cc2c:	ldr	r2, [r3, #116]	; 0x74
   5cc30:	ldr	r3, [fp, #-16]
   5cc34:	ldr	r3, [r3, #108]	; 0x6c
   5cc38:	mov	r1, r3
   5cc3c:	mov	r3, r1
   5cc40:	lsl	r3, r3, #1
   5cc44:	add	r3, r3, r1
   5cc48:	lsl	r3, r3, #3
   5cc4c:	add	r3, r2, r3
   5cc50:	ldr	r2, [fp, #4]
   5cc54:	str	r2, [r3, #12]
   5cc58:	ldr	r3, [fp, #-16]
   5cc5c:	ldr	r2, [r3, #116]	; 0x74
   5cc60:	ldr	r3, [fp, #-16]
   5cc64:	ldr	r3, [r3, #108]	; 0x6c
   5cc68:	mov	r1, r3
   5cc6c:	mov	r3, r1
   5cc70:	lsl	r3, r3, #1
   5cc74:	add	r3, r3, r1
   5cc78:	lsl	r3, r3, #3
   5cc7c:	add	r3, r2, r3
   5cc80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5cc84:	ldr	r2, [fp, #4]
   5cc88:	cmp	r1, r2
   5cc8c:	bne	5cc98 <__assert_fail@plt+0x4a5ac>
   5cc90:	mvn	r2, #0
   5cc94:	b	5cc9c <__assert_fail@plt+0x4a5b0>
   5cc98:	mov	r2, #0
   5cc9c:	str	r2, [r3, #16]
   5cca0:	ldr	r3, [fp, #-16]
   5cca4:	ldr	r2, [r3, #116]	; 0x74
   5cca8:	ldr	r3, [fp, #-16]
   5ccac:	ldr	r3, [r3, #108]	; 0x6c
   5ccb0:	add	r0, r3, #1
   5ccb4:	ldr	r1, [fp, #-16]
   5ccb8:	str	r0, [r1, #108]	; 0x6c
   5ccbc:	mov	r1, r3
   5ccc0:	mov	r3, r1
   5ccc4:	lsl	r3, r3, #1
   5ccc8:	add	r3, r3, r1
   5cccc:	lsl	r3, r3, #3
   5ccd0:	add	r3, r2, r3
   5ccd4:	mov	r2, #0
   5ccd8:	strb	r2, [r3, #20]
   5ccdc:	ldr	r3, [fp, #-16]
   5cce0:	ldr	r2, [r3, #120]	; 0x78
   5cce4:	ldr	r1, [fp, #4]
   5cce8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5ccec:	sub	r3, r1, r3
   5ccf0:	cmp	r2, r3
   5ccf4:	bge	5cd0c <__assert_fail@plt+0x4a620>
   5ccf8:	ldr	r2, [fp, #4]
   5ccfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5cd00:	sub	r2, r2, r3
   5cd04:	ldr	r3, [fp, #-16]
   5cd08:	str	r2, [r3, #120]	; 0x78
   5cd0c:	mov	r3, #0
   5cd10:	mov	r0, r3
   5cd14:	sub	sp, fp, #4
   5cd18:	pop	{fp, pc}
   5cd1c:	push	{fp}		; (str fp, [sp, #-4]!)
   5cd20:	add	fp, sp, #0
   5cd24:	sub	sp, sp, #28
   5cd28:	str	r0, [fp, #-24]	; 0xffffffe8
   5cd2c:	str	r1, [fp, #-28]	; 0xffffffe4
   5cd30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cd34:	ldr	r3, [r3, #108]	; 0x6c
   5cd38:	str	r3, [fp, #-12]
   5cd3c:	ldr	r3, [fp, #-12]
   5cd40:	str	r3, [fp, #-16]
   5cd44:	mov	r3, #0
   5cd48:	str	r3, [fp, #-8]
   5cd4c:	b	5cdb4 <__assert_fail@plt+0x4a6c8>
   5cd50:	ldr	r2, [fp, #-8]
   5cd54:	ldr	r3, [fp, #-12]
   5cd58:	add	r3, r2, r3
   5cd5c:	lsr	r2, r3, #31
   5cd60:	add	r3, r2, r3
   5cd64:	asr	r3, r3, #1
   5cd68:	str	r3, [fp, #-20]	; 0xffffffec
   5cd6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cd70:	ldr	r1, [r3, #116]	; 0x74
   5cd74:	ldr	r2, [fp, #-20]	; 0xffffffec
   5cd78:	mov	r3, r2
   5cd7c:	lsl	r3, r3, #1
   5cd80:	add	r3, r3, r2
   5cd84:	lsl	r3, r3, #3
   5cd88:	add	r3, r1, r3
   5cd8c:	ldr	r2, [r3, #4]
   5cd90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5cd94:	cmp	r2, r3
   5cd98:	bge	5cdac <__assert_fail@plt+0x4a6c0>
   5cd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cda0:	add	r3, r3, #1
   5cda4:	str	r3, [fp, #-8]
   5cda8:	b	5cdb4 <__assert_fail@plt+0x4a6c8>
   5cdac:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cdb0:	str	r3, [fp, #-12]
   5cdb4:	ldr	r2, [fp, #-8]
   5cdb8:	ldr	r3, [fp, #-12]
   5cdbc:	cmp	r2, r3
   5cdc0:	blt	5cd50 <__assert_fail@plt+0x4a664>
   5cdc4:	ldr	r2, [fp, #-8]
   5cdc8:	ldr	r3, [fp, #-16]
   5cdcc:	cmp	r2, r3
   5cdd0:	bge	5ce0c <__assert_fail@plt+0x4a720>
   5cdd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cdd8:	ldr	r1, [r3, #116]	; 0x74
   5cddc:	ldr	r2, [fp, #-8]
   5cde0:	mov	r3, r2
   5cde4:	lsl	r3, r3, #1
   5cde8:	add	r3, r3, r2
   5cdec:	lsl	r3, r3, #3
   5cdf0:	add	r3, r1, r3
   5cdf4:	ldr	r2, [r3, #4]
   5cdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5cdfc:	cmp	r2, r3
   5ce00:	bne	5ce0c <__assert_fail@plt+0x4a720>
   5ce04:	ldr	r3, [fp, #-8]
   5ce08:	b	5ce10 <__assert_fail@plt+0x4a724>
   5ce0c:	mvn	r3, #0
   5ce10:	mov	r0, r3
   5ce14:	add	sp, fp, #0
   5ce18:	pop	{fp}		; (ldr fp, [sp], #4)
   5ce1c:	bx	lr
   5ce20:	push	{r4, fp, lr}
   5ce24:	add	fp, sp, #8
   5ce28:	sub	sp, sp, #28
   5ce2c:	str	r0, [fp, #-24]	; 0xffffffe8
   5ce30:	str	r1, [fp, #-28]	; 0xffffffe4
   5ce34:	str	r2, [fp, #-32]	; 0xffffffe0
   5ce38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ce3c:	ldr	r3, [r3, #132]	; 0x84
   5ce40:	cmp	r3, #0
   5ce44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ce48:	ldr	r3, [r3, #128]	; 0x80
   5ce4c:	cmp	r3, #0
   5ce50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ce54:	ldr	r2, [r3, #124]	; 0x7c
   5ce58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ce5c:	ldr	r3, [r3, #128]	; 0x80
   5ce60:	cmp	r2, r3
   5ce64:	moveq	r3, #1
   5ce68:	movne	r3, #0
   5ce6c:	uxtb	r3, r3
   5ce70:	cmp	r3, #0
   5ce74:	beq	5cee4 <__assert_fail@plt+0x4a7f8>
   5ce78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ce7c:	ldr	r3, [r3, #128]	; 0x80
   5ce80:	lsl	r3, r3, #1
   5ce84:	str	r3, [fp, #-16]
   5ce88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ce8c:	ldr	r2, [r3, #132]	; 0x84
   5ce90:	ldr	r3, [fp, #-16]
   5ce94:	lsl	r3, r3, #2
   5ce98:	mov	r1, r3
   5ce9c:	mov	r0, r2
   5cea0:	bl	43d30 <__assert_fail@plt+0x31644>
   5cea4:	str	r0, [fp, #-20]	; 0xffffffec
   5cea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ceac:	cmp	r3, #0
   5ceb0:	moveq	r3, #1
   5ceb4:	movne	r3, #0
   5ceb8:	uxtb	r3, r3
   5cebc:	cmp	r3, #0
   5cec0:	beq	5cecc <__assert_fail@plt+0x4a7e0>
   5cec4:	mov	r3, #12
   5cec8:	b	5cfa4 <__assert_fail@plt+0x4a8b8>
   5cecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ced0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5ced4:	str	r2, [r3, #132]	; 0x84
   5ced8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cedc:	ldr	r2, [fp, #-16]
   5cee0:	str	r2, [r3, #128]	; 0x80
   5cee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cee8:	ldr	r2, [r3, #132]	; 0x84
   5ceec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cef0:	ldr	r3, [r3, #124]	; 0x7c
   5cef4:	lsl	r3, r3, #2
   5cef8:	add	r4, r2, r3
   5cefc:	mov	r1, #24
   5cf00:	mov	r0, #1
   5cf04:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   5cf08:	mov	r3, r0
   5cf0c:	str	r3, [r4]
   5cf10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cf14:	ldr	r2, [r3, #132]	; 0x84
   5cf18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cf1c:	ldr	r3, [r3, #124]	; 0x7c
   5cf20:	lsl	r3, r3, #2
   5cf24:	add	r3, r2, r3
   5cf28:	ldr	r3, [r3]
   5cf2c:	cmp	r3, #0
   5cf30:	moveq	r3, #1
   5cf34:	movne	r3, #0
   5cf38:	uxtb	r3, r3
   5cf3c:	cmp	r3, #0
   5cf40:	beq	5cf4c <__assert_fail@plt+0x4a860>
   5cf44:	mov	r3, #12
   5cf48:	b	5cfa4 <__assert_fail@plt+0x4a8b8>
   5cf4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cf50:	ldr	r2, [r3, #132]	; 0x84
   5cf54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cf58:	ldr	r3, [r3, #124]	; 0x7c
   5cf5c:	lsl	r3, r3, #2
   5cf60:	add	r3, r2, r3
   5cf64:	ldr	r3, [r3]
   5cf68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5cf6c:	str	r2, [r3, #4]
   5cf70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cf74:	ldr	r2, [r3, #132]	; 0x84
   5cf78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cf7c:	ldr	r3, [r3, #124]	; 0x7c
   5cf80:	add	r0, r3, #1
   5cf84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5cf88:	str	r0, [r1, #124]	; 0x7c
   5cf8c:	lsl	r3, r3, #2
   5cf90:	add	r3, r2, r3
   5cf94:	ldr	r3, [r3]
   5cf98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5cf9c:	str	r2, [r3]
   5cfa0:	mov	r3, #0
   5cfa4:	mov	r0, r3
   5cfa8:	sub	sp, fp, #8
   5cfac:	pop	{r4, fp, pc}
   5cfb0:	push	{fp, lr}
   5cfb4:	add	fp, sp, #4
   5cfb8:	sub	sp, sp, #32
   5cfbc:	str	r0, [fp, #-24]	; 0xffffffe8
   5cfc0:	str	r1, [fp, #-28]	; 0xffffffe4
   5cfc4:	str	r2, [fp, #-32]	; 0xffffffe0
   5cfc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cfcc:	ldr	r2, [r3, #16]
   5cfd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cfd4:	ldr	r3, [r3, #12]
   5cfd8:	cmp	r2, r3
   5cfdc:	moveq	r3, #1
   5cfe0:	movne	r3, #0
   5cfe4:	uxtb	r3, r3
   5cfe8:	cmp	r3, #0
   5cfec:	beq	5d060 <__assert_fail@plt+0x4a974>
   5cff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5cff4:	ldr	r3, [r3, #12]
   5cff8:	lsl	r3, r3, #1
   5cffc:	add	r3, r3, #1
   5d000:	str	r3, [fp, #-8]
   5d004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d008:	ldr	r2, [r3, #20]
   5d00c:	ldr	r3, [fp, #-8]
   5d010:	lsl	r3, r3, #2
   5d014:	mov	r1, r3
   5d018:	mov	r0, r2
   5d01c:	bl	43d30 <__assert_fail@plt+0x31644>
   5d020:	str	r0, [fp, #-12]
   5d024:	ldr	r3, [fp, #-12]
   5d028:	cmp	r3, #0
   5d02c:	moveq	r3, #1
   5d030:	movne	r3, #0
   5d034:	uxtb	r3, r3
   5d038:	cmp	r3, #0
   5d03c:	beq	5d048 <__assert_fail@plt+0x4a95c>
   5d040:	mov	r3, #0
   5d044:	b	5d0e0 <__assert_fail@plt+0x4a9f4>
   5d048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d04c:	ldr	r2, [fp, #-12]
   5d050:	str	r2, [r3, #20]
   5d054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d058:	ldr	r2, [fp, #-8]
   5d05c:	str	r2, [r3, #12]
   5d060:	mov	r1, #20
   5d064:	mov	r0, #1
   5d068:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   5d06c:	mov	r3, r0
   5d070:	str	r3, [fp, #-16]
   5d074:	ldr	r3, [fp, #-16]
   5d078:	cmp	r3, #0
   5d07c:	movne	r3, #1
   5d080:	moveq	r3, #0
   5d084:	uxtb	r3, r3
   5d088:	cmp	r3, #0
   5d08c:	beq	5d0dc <__assert_fail@plt+0x4a9f0>
   5d090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d094:	ldr	r2, [r3, #20]
   5d098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d09c:	ldr	r3, [r3, #16]
   5d0a0:	lsl	r3, r3, #2
   5d0a4:	add	r3, r2, r3
   5d0a8:	ldr	r2, [fp, #-16]
   5d0ac:	str	r2, [r3]
   5d0b0:	ldr	r3, [fp, #-16]
   5d0b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5d0b8:	str	r2, [r3]
   5d0bc:	ldr	r3, [fp, #-16]
   5d0c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d0c4:	str	r2, [r3, #4]
   5d0c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d0cc:	ldr	r3, [r3, #16]
   5d0d0:	add	r2, r3, #1
   5d0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d0d8:	str	r2, [r3, #16]
   5d0dc:	ldr	r3, [fp, #-16]
   5d0e0:	mov	r0, r3
   5d0e4:	sub	sp, fp, #4
   5d0e8:	pop	{fp, pc}
   5d0ec:	push	{fp, lr}
   5d0f0:	add	fp, sp, #4
   5d0f4:	sub	sp, sp, #16
   5d0f8:	str	r0, [fp, #-8]
   5d0fc:	str	r1, [fp, #-12]
   5d100:	str	r2, [fp, #-16]
   5d104:	str	r3, [fp, #-20]	; 0xffffffec
   5d108:	ldr	r3, [fp, #-8]
   5d10c:	ldr	r2, [fp, #-12]
   5d110:	str	r2, [r3]
   5d114:	ldr	r3, [fp, #-8]
   5d118:	ldr	r2, [fp, #-16]
   5d11c:	str	r2, [r3, #4]
   5d120:	ldr	r3, [fp, #-8]
   5d124:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d128:	str	r2, [r3, #8]
   5d12c:	ldr	r3, [fp, #-8]
   5d130:	ldr	r2, [fp, #4]
   5d134:	str	r2, [r3, #12]
   5d138:	ldr	r3, [fp, #-8]
   5d13c:	add	r3, r3, #16
   5d140:	mov	r2, #12
   5d144:	mov	r1, #0
   5d148:	mov	r0, r3
   5d14c:	bl	12434 <memset@plt>
   5d150:	nop			; (mov r0, r0)
   5d154:	sub	sp, fp, #4
   5d158:	pop	{fp, pc}
   5d15c:	push	{fp}		; (str fp, [sp, #-4]!)
   5d160:	add	fp, sp, #0
   5d164:	sub	sp, sp, #44	; 0x2c
   5d168:	str	r0, [fp, #-32]	; 0xffffffe0
   5d16c:	str	r1, [fp, #-36]	; 0xffffffdc
   5d170:	str	r2, [fp, #-40]	; 0xffffffd8
   5d174:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d178:	cmp	r3, #2
   5d17c:	bhi	5d198 <__assert_fail@plt+0x4aaac>
   5d180:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5d184:	mov	r2, #1
   5d188:	str	r2, [r3]
   5d18c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d190:	sub	r3, r3, #1
   5d194:	b	5d414 <__assert_fail@plt+0x4ad28>
   5d198:	mvn	r3, #0
   5d19c:	str	r3, [fp, #-8]
   5d1a0:	mov	r3, #0
   5d1a4:	str	r3, [fp, #-16]
   5d1a8:	mov	r3, #1
   5d1ac:	str	r3, [fp, #-24]	; 0xffffffe8
   5d1b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d1b4:	str	r3, [fp, #-20]	; 0xffffffec
   5d1b8:	b	5d29c <__assert_fail@plt+0x4abb0>
   5d1bc:	ldr	r2, [fp, #-16]
   5d1c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d1c4:	add	r3, r2, r3
   5d1c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d1cc:	add	r3, r2, r3
   5d1d0:	ldrb	r3, [r3]
   5d1d4:	strb	r3, [fp, #-25]	; 0xffffffe7
   5d1d8:	ldr	r2, [fp, #-8]
   5d1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d1e0:	add	r3, r2, r3
   5d1e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d1e8:	add	r3, r2, r3
   5d1ec:	ldrb	r3, [r3]
   5d1f0:	strb	r3, [fp, #-26]	; 0xffffffe6
   5d1f4:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   5d1f8:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   5d1fc:	cmp	r2, r3
   5d200:	bcs	5d230 <__assert_fail@plt+0x4ab44>
   5d204:	ldr	r2, [fp, #-16]
   5d208:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d20c:	add	r3, r2, r3
   5d210:	str	r3, [fp, #-16]
   5d214:	mov	r3, #1
   5d218:	str	r3, [fp, #-20]	; 0xffffffec
   5d21c:	ldr	r2, [fp, #-16]
   5d220:	ldr	r3, [fp, #-8]
   5d224:	sub	r3, r2, r3
   5d228:	str	r3, [fp, #-24]	; 0xffffffe8
   5d22c:	b	5d29c <__assert_fail@plt+0x4abb0>
   5d230:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   5d234:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   5d238:	cmp	r2, r3
   5d23c:	bne	5d27c <__assert_fail@plt+0x4ab90>
   5d240:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d248:	cmp	r2, r3
   5d24c:	beq	5d260 <__assert_fail@plt+0x4ab74>
   5d250:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d254:	add	r3, r3, #1
   5d258:	str	r3, [fp, #-20]	; 0xffffffec
   5d25c:	b	5d29c <__assert_fail@plt+0x4abb0>
   5d260:	ldr	r2, [fp, #-16]
   5d264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d268:	add	r3, r2, r3
   5d26c:	str	r3, [fp, #-16]
   5d270:	mov	r3, #1
   5d274:	str	r3, [fp, #-20]	; 0xffffffec
   5d278:	b	5d29c <__assert_fail@plt+0x4abb0>
   5d27c:	ldr	r3, [fp, #-16]
   5d280:	add	r2, r3, #1
   5d284:	str	r2, [fp, #-16]
   5d288:	str	r3, [fp, #-8]
   5d28c:	mov	r3, #1
   5d290:	str	r3, [fp, #-24]	; 0xffffffe8
   5d294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d298:	str	r3, [fp, #-20]	; 0xffffffec
   5d29c:	ldr	r2, [fp, #-16]
   5d2a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d2a4:	add	r2, r2, r3
   5d2a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d2ac:	cmp	r2, r3
   5d2b0:	bcc	5d1bc <__assert_fail@plt+0x4aad0>
   5d2b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5d2b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d2bc:	str	r2, [r3]
   5d2c0:	mvn	r3, #0
   5d2c4:	str	r3, [fp, #-12]
   5d2c8:	mov	r3, #0
   5d2cc:	str	r3, [fp, #-16]
   5d2d0:	mov	r3, #1
   5d2d4:	str	r3, [fp, #-24]	; 0xffffffe8
   5d2d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d2dc:	str	r3, [fp, #-20]	; 0xffffffec
   5d2e0:	b	5d3c4 <__assert_fail@plt+0x4acd8>
   5d2e4:	ldr	r2, [fp, #-16]
   5d2e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d2ec:	add	r3, r2, r3
   5d2f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d2f4:	add	r3, r2, r3
   5d2f8:	ldrb	r3, [r3]
   5d2fc:	strb	r3, [fp, #-25]	; 0xffffffe7
   5d300:	ldr	r2, [fp, #-12]
   5d304:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d308:	add	r3, r2, r3
   5d30c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d310:	add	r3, r2, r3
   5d314:	ldrb	r3, [r3]
   5d318:	strb	r3, [fp, #-26]	; 0xffffffe6
   5d31c:	ldrb	r2, [fp, #-26]	; 0xffffffe6
   5d320:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   5d324:	cmp	r2, r3
   5d328:	bcs	5d358 <__assert_fail@plt+0x4ac6c>
   5d32c:	ldr	r2, [fp, #-16]
   5d330:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d334:	add	r3, r2, r3
   5d338:	str	r3, [fp, #-16]
   5d33c:	mov	r3, #1
   5d340:	str	r3, [fp, #-20]	; 0xffffffec
   5d344:	ldr	r2, [fp, #-16]
   5d348:	ldr	r3, [fp, #-12]
   5d34c:	sub	r3, r2, r3
   5d350:	str	r3, [fp, #-24]	; 0xffffffe8
   5d354:	b	5d3c4 <__assert_fail@plt+0x4acd8>
   5d358:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   5d35c:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   5d360:	cmp	r2, r3
   5d364:	bne	5d3a4 <__assert_fail@plt+0x4acb8>
   5d368:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d370:	cmp	r2, r3
   5d374:	beq	5d388 <__assert_fail@plt+0x4ac9c>
   5d378:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d37c:	add	r3, r3, #1
   5d380:	str	r3, [fp, #-20]	; 0xffffffec
   5d384:	b	5d3c4 <__assert_fail@plt+0x4acd8>
   5d388:	ldr	r2, [fp, #-16]
   5d38c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d390:	add	r3, r2, r3
   5d394:	str	r3, [fp, #-16]
   5d398:	mov	r3, #1
   5d39c:	str	r3, [fp, #-20]	; 0xffffffec
   5d3a0:	b	5d3c4 <__assert_fail@plt+0x4acd8>
   5d3a4:	ldr	r3, [fp, #-16]
   5d3a8:	add	r2, r3, #1
   5d3ac:	str	r2, [fp, #-16]
   5d3b0:	str	r3, [fp, #-12]
   5d3b4:	mov	r3, #1
   5d3b8:	str	r3, [fp, #-24]	; 0xffffffe8
   5d3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d3c0:	str	r3, [fp, #-20]	; 0xffffffec
   5d3c4:	ldr	r2, [fp, #-16]
   5d3c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d3cc:	add	r2, r2, r3
   5d3d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d3d4:	cmp	r2, r3
   5d3d8:	bcc	5d2e4 <__assert_fail@plt+0x4abf8>
   5d3dc:	ldr	r3, [fp, #-12]
   5d3e0:	add	r2, r3, #1
   5d3e4:	ldr	r3, [fp, #-8]
   5d3e8:	add	r3, r3, #1
   5d3ec:	cmp	r2, r3
   5d3f0:	bcs	5d400 <__assert_fail@plt+0x4ad14>
   5d3f4:	ldr	r3, [fp, #-8]
   5d3f8:	add	r3, r3, #1
   5d3fc:	b	5d414 <__assert_fail@plt+0x4ad28>
   5d400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5d404:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d408:	str	r2, [r3]
   5d40c:	ldr	r3, [fp, #-12]
   5d410:	add	r3, r3, #1
   5d414:	mov	r0, r3
   5d418:	add	sp, fp, #0
   5d41c:	pop	{fp}		; (ldr fp, [sp], #4)
   5d420:	bx	lr
   5d424:	push	{fp, lr}
   5d428:	add	fp, sp, #4
   5d42c:	sub	sp, sp, #40	; 0x28
   5d430:	str	r0, [fp, #-32]	; 0xffffffe0
   5d434:	str	r1, [fp, #-36]	; 0xffffffdc
   5d438:	str	r2, [fp, #-40]	; 0xffffffd8
   5d43c:	str	r3, [fp, #-44]	; 0xffffffd4
   5d440:	sub	r3, fp, #24
   5d444:	mov	r2, r3
   5d448:	ldr	r1, [fp, #-44]	; 0xffffffd4
   5d44c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d450:	bl	5d15c <__assert_fail@plt+0x4aa70>
   5d454:	str	r0, [fp, #-20]	; 0xffffffec
   5d458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d45c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5d460:	add	r3, r2, r3
   5d464:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d468:	mov	r1, r3
   5d46c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d470:	bl	12158 <memcmp@plt>
   5d474:	mov	r3, r0
   5d478:	cmp	r3, #0
   5d47c:	bne	5d634 <__assert_fail@plt+0x4af48>
   5d480:	mov	r3, #0
   5d484:	str	r3, [fp, #-16]
   5d488:	mov	r3, #0
   5d48c:	str	r3, [fp, #-12]
   5d490:	b	5d5dc <__assert_fail@plt+0x4aef0>
   5d494:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d498:	ldr	r3, [fp, #-16]
   5d49c:	cmp	r2, r3
   5d4a0:	movcs	r3, r2
   5d4a4:	movcc	r3, r3
   5d4a8:	str	r3, [fp, #-8]
   5d4ac:	b	5d4bc <__assert_fail@plt+0x4add0>
   5d4b0:	ldr	r3, [fp, #-8]
   5d4b4:	add	r3, r3, #1
   5d4b8:	str	r3, [fp, #-8]
   5d4bc:	ldr	r2, [fp, #-8]
   5d4c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5d4c4:	cmp	r2, r3
   5d4c8:	bcs	5d4fc <__assert_fail@plt+0x4ae10>
   5d4cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5d4d0:	ldr	r3, [fp, #-8]
   5d4d4:	add	r3, r2, r3
   5d4d8:	ldrb	r2, [r3]
   5d4dc:	ldr	r1, [fp, #-8]
   5d4e0:	ldr	r3, [fp, #-12]
   5d4e4:	add	r3, r1, r3
   5d4e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5d4ec:	add	r3, r1, r3
   5d4f0:	ldrb	r3, [r3]
   5d4f4:	cmp	r2, r3
   5d4f8:	beq	5d4b0 <__assert_fail@plt+0x4adc4>
   5d4fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5d500:	ldr	r3, [fp, #-8]
   5d504:	cmp	r2, r3
   5d508:	bhi	5d5b8 <__assert_fail@plt+0x4aecc>
   5d50c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d510:	sub	r3, r3, #1
   5d514:	str	r3, [fp, #-8]
   5d518:	b	5d528 <__assert_fail@plt+0x4ae3c>
   5d51c:	ldr	r3, [fp, #-8]
   5d520:	sub	r3, r3, #1
   5d524:	str	r3, [fp, #-8]
   5d528:	ldr	r3, [fp, #-8]
   5d52c:	add	r2, r3, #1
   5d530:	ldr	r3, [fp, #-16]
   5d534:	cmp	r2, r3
   5d538:	bls	5d56c <__assert_fail@plt+0x4ae80>
   5d53c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5d540:	ldr	r3, [fp, #-8]
   5d544:	add	r3, r2, r3
   5d548:	ldrb	r2, [r3]
   5d54c:	ldr	r1, [fp, #-8]
   5d550:	ldr	r3, [fp, #-12]
   5d554:	add	r3, r1, r3
   5d558:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5d55c:	add	r3, r1, r3
   5d560:	ldrb	r3, [r3]
   5d564:	cmp	r2, r3
   5d568:	beq	5d51c <__assert_fail@plt+0x4ae30>
   5d56c:	ldr	r3, [fp, #-8]
   5d570:	add	r2, r3, #1
   5d574:	ldr	r3, [fp, #-16]
   5d578:	add	r3, r3, #1
   5d57c:	cmp	r2, r3
   5d580:	bcs	5d594 <__assert_fail@plt+0x4aea8>
   5d584:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d588:	ldr	r3, [fp, #-12]
   5d58c:	add	r3, r2, r3
   5d590:	b	5d7c8 <__assert_fail@plt+0x4b0dc>
   5d594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d598:	ldr	r2, [fp, #-12]
   5d59c:	add	r3, r2, r3
   5d5a0:	str	r3, [fp, #-12]
   5d5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d5a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5d5ac:	sub	r3, r2, r3
   5d5b0:	str	r3, [fp, #-16]
   5d5b4:	b	5d5dc <__assert_fail@plt+0x4aef0>
   5d5b8:	ldr	r2, [fp, #-8]
   5d5bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d5c0:	sub	r2, r2, r3
   5d5c4:	ldr	r3, [fp, #-12]
   5d5c8:	add	r3, r2, r3
   5d5cc:	add	r3, r3, #1
   5d5d0:	str	r3, [fp, #-12]
   5d5d4:	mov	r3, #0
   5d5d8:	str	r3, [fp, #-16]
   5d5dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d5e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d5e4:	add	r0, r2, r3
   5d5e8:	ldr	r2, [fp, #-12]
   5d5ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5d5f0:	add	r2, r2, r3
   5d5f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d5f8:	sub	r3, r2, r3
   5d5fc:	mov	r2, r3
   5d600:	mov	r1, #0
   5d604:	bl	124ac <memchr@plt>
   5d608:	mov	r3, r0
   5d60c:	cmp	r3, #0
   5d610:	bne	5d7c4 <__assert_fail@plt+0x4b0d8>
   5d614:	ldr	r2, [fp, #-12]
   5d618:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5d61c:	add	r3, r2, r3
   5d620:	str	r3, [fp, #-36]	; 0xffffffdc
   5d624:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d628:	cmp	r3, #0
   5d62c:	bne	5d494 <__assert_fail@plt+0x4ada8>
   5d630:	b	5d7c4 <__assert_fail@plt+0x4b0d8>
   5d634:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5d638:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d63c:	sub	r2, r2, r3
   5d640:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d644:	cmp	r2, r3
   5d648:	movcs	r3, r2
   5d64c:	movcc	r3, r3
   5d650:	add	r3, r3, #1
   5d654:	str	r3, [fp, #-24]	; 0xffffffe8
   5d658:	mov	r3, #0
   5d65c:	str	r3, [fp, #-12]
   5d660:	b	5d770 <__assert_fail@plt+0x4b084>
   5d664:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d668:	str	r3, [fp, #-8]
   5d66c:	b	5d67c <__assert_fail@plt+0x4af90>
   5d670:	ldr	r3, [fp, #-8]
   5d674:	add	r3, r3, #1
   5d678:	str	r3, [fp, #-8]
   5d67c:	ldr	r2, [fp, #-8]
   5d680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5d684:	cmp	r2, r3
   5d688:	bcs	5d6bc <__assert_fail@plt+0x4afd0>
   5d68c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5d690:	ldr	r3, [fp, #-8]
   5d694:	add	r3, r2, r3
   5d698:	ldrb	r2, [r3]
   5d69c:	ldr	r1, [fp, #-8]
   5d6a0:	ldr	r3, [fp, #-12]
   5d6a4:	add	r3, r1, r3
   5d6a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5d6ac:	add	r3, r1, r3
   5d6b0:	ldrb	r3, [r3]
   5d6b4:	cmp	r2, r3
   5d6b8:	beq	5d670 <__assert_fail@plt+0x4af84>
   5d6bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5d6c0:	ldr	r3, [fp, #-8]
   5d6c4:	cmp	r2, r3
   5d6c8:	bhi	5d754 <__assert_fail@plt+0x4b068>
   5d6cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d6d0:	sub	r3, r3, #1
   5d6d4:	str	r3, [fp, #-8]
   5d6d8:	b	5d6e8 <__assert_fail@plt+0x4affc>
   5d6dc:	ldr	r3, [fp, #-8]
   5d6e0:	sub	r3, r3, #1
   5d6e4:	str	r3, [fp, #-8]
   5d6e8:	ldr	r3, [fp, #-8]
   5d6ec:	cmn	r3, #1
   5d6f0:	beq	5d724 <__assert_fail@plt+0x4b038>
   5d6f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5d6f8:	ldr	r3, [fp, #-8]
   5d6fc:	add	r3, r2, r3
   5d700:	ldrb	r2, [r3]
   5d704:	ldr	r1, [fp, #-8]
   5d708:	ldr	r3, [fp, #-12]
   5d70c:	add	r3, r1, r3
   5d710:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5d714:	add	r3, r1, r3
   5d718:	ldrb	r3, [r3]
   5d71c:	cmp	r2, r3
   5d720:	beq	5d6dc <__assert_fail@plt+0x4aff0>
   5d724:	ldr	r3, [fp, #-8]
   5d728:	cmn	r3, #1
   5d72c:	bne	5d740 <__assert_fail@plt+0x4b054>
   5d730:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d734:	ldr	r3, [fp, #-12]
   5d738:	add	r3, r2, r3
   5d73c:	b	5d7c8 <__assert_fail@plt+0x4b0dc>
   5d740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d744:	ldr	r2, [fp, #-12]
   5d748:	add	r3, r2, r3
   5d74c:	str	r3, [fp, #-12]
   5d750:	b	5d770 <__assert_fail@plt+0x4b084>
   5d754:	ldr	r2, [fp, #-8]
   5d758:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d75c:	sub	r2, r2, r3
   5d760:	ldr	r3, [fp, #-12]
   5d764:	add	r3, r2, r3
   5d768:	add	r3, r3, #1
   5d76c:	str	r3, [fp, #-12]
   5d770:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d774:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d778:	add	r0, r2, r3
   5d77c:	ldr	r2, [fp, #-12]
   5d780:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5d784:	add	r2, r2, r3
   5d788:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d78c:	sub	r3, r2, r3
   5d790:	mov	r2, r3
   5d794:	mov	r1, #0
   5d798:	bl	124ac <memchr@plt>
   5d79c:	mov	r3, r0
   5d7a0:	cmp	r3, #0
   5d7a4:	bne	5d7c4 <__assert_fail@plt+0x4b0d8>
   5d7a8:	ldr	r2, [fp, #-12]
   5d7ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5d7b0:	add	r3, r2, r3
   5d7b4:	str	r3, [fp, #-36]	; 0xffffffdc
   5d7b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5d7bc:	cmp	r3, #0
   5d7c0:	bne	5d664 <__assert_fail@plt+0x4af78>
   5d7c4:	mov	r3, #0
   5d7c8:	mov	r0, r3
   5d7cc:	sub	sp, fp, #4
   5d7d0:	pop	{fp, pc}
   5d7d4:	push	{fp, lr}
   5d7d8:	add	fp, sp, #4
   5d7dc:	sub	sp, sp, #1072	; 0x430
   5d7e0:	str	r0, [fp, #-1064]	; 0xfffffbd8
   5d7e4:	str	r1, [fp, #-1068]	; 0xfffffbd4
   5d7e8:	str	r2, [fp, #-1072]	; 0xfffffbd0
   5d7ec:	str	r3, [fp, #-1076]	; 0xfffffbcc
   5d7f0:	sub	r3, fp, #32
   5d7f4:	mov	r2, r3
   5d7f8:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   5d7fc:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
   5d800:	bl	5d15c <__assert_fail@plt+0x4aa70>
   5d804:	str	r0, [fp, #-24]	; 0xffffffe8
   5d808:	mov	r3, #0
   5d80c:	str	r3, [fp, #-8]
   5d810:	b	5d838 <__assert_fail@plt+0x4b14c>
   5d814:	ldr	r3, [fp, #-8]
   5d818:	lsl	r3, r3, #2
   5d81c:	sub	r2, fp, #4
   5d820:	add	r3, r2, r3
   5d824:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5d828:	str	r2, [r3, #-1052]	; 0xfffffbe4
   5d82c:	ldr	r3, [fp, #-8]
   5d830:	add	r3, r3, #1
   5d834:	str	r3, [fp, #-8]
   5d838:	ldr	r3, [fp, #-8]
   5d83c:	cmp	r3, #255	; 0xff
   5d840:	bls	5d814 <__assert_fail@plt+0x4b128>
   5d844:	mov	r3, #0
   5d848:	str	r3, [fp, #-8]
   5d84c:	b	5d890 <__assert_fail@plt+0x4b1a4>
   5d850:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5d854:	ldr	r3, [fp, #-8]
   5d858:	add	r3, r2, r3
   5d85c:	ldrb	r3, [r3]
   5d860:	mov	r1, r3
   5d864:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5d868:	ldr	r3, [fp, #-8]
   5d86c:	sub	r3, r2, r3
   5d870:	sub	r2, r3, #1
   5d874:	lsl	r3, r1, #2
   5d878:	sub	r1, fp, #4
   5d87c:	add	r3, r1, r3
   5d880:	str	r2, [r3, #-1052]	; 0xfffffbe4
   5d884:	ldr	r3, [fp, #-8]
   5d888:	add	r3, r3, #1
   5d88c:	str	r3, [fp, #-8]
   5d890:	ldr	r2, [fp, #-8]
   5d894:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5d898:	cmp	r2, r3
   5d89c:	bcc	5d850 <__assert_fail@plt+0x4b164>
   5d8a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d8a4:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5d8a8:	add	r3, r2, r3
   5d8ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d8b0:	mov	r1, r3
   5d8b4:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
   5d8b8:	bl	12158 <memcmp@plt>
   5d8bc:	mov	r3, r0
   5d8c0:	cmp	r3, #0
   5d8c4:	bne	5db08 <__assert_fail@plt+0x4b41c>
   5d8c8:	mov	r3, #0
   5d8cc:	str	r3, [fp, #-16]
   5d8d0:	mov	r3, #0
   5d8d4:	str	r3, [fp, #-12]
   5d8d8:	b	5dab0 <__assert_fail@plt+0x4b3c4>
   5d8dc:	ldr	r2, [fp, #-12]
   5d8e0:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5d8e4:	add	r3, r2, r3
   5d8e8:	sub	r3, r3, #1
   5d8ec:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5d8f0:	add	r3, r2, r3
   5d8f4:	ldrb	r3, [r3]
   5d8f8:	lsl	r3, r3, #2
   5d8fc:	sub	r2, fp, #4
   5d900:	add	r3, r2, r3
   5d904:	ldr	r3, [r3, #-1052]	; 0xfffffbe4
   5d908:	str	r3, [fp, #-20]	; 0xffffffec
   5d90c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d910:	cmp	r3, #0
   5d914:	beq	5d960 <__assert_fail@plt+0x4b274>
   5d918:	ldr	r3, [fp, #-16]
   5d91c:	cmp	r3, #0
   5d920:	beq	5d944 <__assert_fail@plt+0x4b258>
   5d924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d928:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d92c:	cmp	r2, r3
   5d930:	bcs	5d944 <__assert_fail@plt+0x4b258>
   5d934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d938:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5d93c:	sub	r3, r2, r3
   5d940:	str	r3, [fp, #-20]	; 0xffffffec
   5d944:	mov	r3, #0
   5d948:	str	r3, [fp, #-16]
   5d94c:	ldr	r2, [fp, #-12]
   5d950:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d954:	add	r3, r2, r3
   5d958:	str	r3, [fp, #-12]
   5d95c:	b	5dab0 <__assert_fail@plt+0x4b3c4>
   5d960:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d964:	ldr	r3, [fp, #-16]
   5d968:	cmp	r2, r3
   5d96c:	movcs	r3, r2
   5d970:	movcc	r3, r3
   5d974:	str	r3, [fp, #-8]
   5d978:	b	5d988 <__assert_fail@plt+0x4b29c>
   5d97c:	ldr	r3, [fp, #-8]
   5d980:	add	r3, r3, #1
   5d984:	str	r3, [fp, #-8]
   5d988:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5d98c:	sub	r2, r3, #1
   5d990:	ldr	r3, [fp, #-8]
   5d994:	cmp	r2, r3
   5d998:	bls	5d9cc <__assert_fail@plt+0x4b2e0>
   5d99c:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5d9a0:	ldr	r3, [fp, #-8]
   5d9a4:	add	r3, r2, r3
   5d9a8:	ldrb	r2, [r3]
   5d9ac:	ldr	r1, [fp, #-8]
   5d9b0:	ldr	r3, [fp, #-12]
   5d9b4:	add	r3, r1, r3
   5d9b8:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5d9bc:	add	r3, r1, r3
   5d9c0:	ldrb	r3, [r3]
   5d9c4:	cmp	r2, r3
   5d9c8:	beq	5d97c <__assert_fail@plt+0x4b290>
   5d9cc:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5d9d0:	sub	r2, r3, #1
   5d9d4:	ldr	r3, [fp, #-8]
   5d9d8:	cmp	r2, r3
   5d9dc:	bhi	5da8c <__assert_fail@plt+0x4b3a0>
   5d9e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d9e4:	sub	r3, r3, #1
   5d9e8:	str	r3, [fp, #-8]
   5d9ec:	b	5d9fc <__assert_fail@plt+0x4b310>
   5d9f0:	ldr	r3, [fp, #-8]
   5d9f4:	sub	r3, r3, #1
   5d9f8:	str	r3, [fp, #-8]
   5d9fc:	ldr	r3, [fp, #-8]
   5da00:	add	r2, r3, #1
   5da04:	ldr	r3, [fp, #-16]
   5da08:	cmp	r2, r3
   5da0c:	bls	5da40 <__assert_fail@plt+0x4b354>
   5da10:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5da14:	ldr	r3, [fp, #-8]
   5da18:	add	r3, r2, r3
   5da1c:	ldrb	r2, [r3]
   5da20:	ldr	r1, [fp, #-8]
   5da24:	ldr	r3, [fp, #-12]
   5da28:	add	r3, r1, r3
   5da2c:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5da30:	add	r3, r1, r3
   5da34:	ldrb	r3, [r3]
   5da38:	cmp	r2, r3
   5da3c:	beq	5d9f0 <__assert_fail@plt+0x4b304>
   5da40:	ldr	r3, [fp, #-8]
   5da44:	add	r2, r3, #1
   5da48:	ldr	r3, [fp, #-16]
   5da4c:	add	r3, r3, #1
   5da50:	cmp	r2, r3
   5da54:	bcs	5da68 <__assert_fail@plt+0x4b37c>
   5da58:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5da5c:	ldr	r3, [fp, #-12]
   5da60:	add	r3, r2, r3
   5da64:	b	5dcf4 <__assert_fail@plt+0x4b608>
   5da68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5da6c:	ldr	r2, [fp, #-12]
   5da70:	add	r3, r2, r3
   5da74:	str	r3, [fp, #-12]
   5da78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5da7c:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5da80:	sub	r3, r2, r3
   5da84:	str	r3, [fp, #-16]
   5da88:	b	5dab0 <__assert_fail@plt+0x4b3c4>
   5da8c:	ldr	r2, [fp, #-8]
   5da90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5da94:	sub	r2, r2, r3
   5da98:	ldr	r3, [fp, #-12]
   5da9c:	add	r3, r2, r3
   5daa0:	add	r3, r3, #1
   5daa4:	str	r3, [fp, #-12]
   5daa8:	mov	r3, #0
   5daac:	str	r3, [fp, #-16]
   5dab0:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5dab4:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5dab8:	add	r0, r2, r3
   5dabc:	ldr	r2, [fp, #-12]
   5dac0:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5dac4:	add	r2, r2, r3
   5dac8:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5dacc:	sub	r3, r2, r3
   5dad0:	mov	r2, r3
   5dad4:	mov	r1, #0
   5dad8:	bl	124ac <memchr@plt>
   5dadc:	mov	r3, r0
   5dae0:	cmp	r3, #0
   5dae4:	bne	5dcf0 <__assert_fail@plt+0x4b604>
   5dae8:	ldr	r2, [fp, #-12]
   5daec:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5daf0:	add	r3, r2, r3
   5daf4:	str	r3, [fp, #-1068]	; 0xfffffbd4
   5daf8:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5dafc:	cmp	r3, #0
   5db00:	bne	5d8dc <__assert_fail@plt+0x4b1f0>
   5db04:	b	5dcf0 <__assert_fail@plt+0x4b604>
   5db08:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5db0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5db10:	sub	r2, r2, r3
   5db14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5db18:	cmp	r2, r3
   5db1c:	movcs	r3, r2
   5db20:	movcc	r3, r3
   5db24:	add	r3, r3, #1
   5db28:	str	r3, [fp, #-32]	; 0xffffffe0
   5db2c:	mov	r3, #0
   5db30:	str	r3, [fp, #-12]
   5db34:	b	5dc9c <__assert_fail@plt+0x4b5b0>
   5db38:	ldr	r2, [fp, #-12]
   5db3c:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5db40:	add	r3, r2, r3
   5db44:	sub	r3, r3, #1
   5db48:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5db4c:	add	r3, r2, r3
   5db50:	ldrb	r3, [r3]
   5db54:	lsl	r3, r3, #2
   5db58:	sub	r2, fp, #4
   5db5c:	add	r3, r2, r3
   5db60:	ldr	r3, [r3, #-1052]	; 0xfffffbe4
   5db64:	str	r3, [fp, #-28]	; 0xffffffe4
   5db68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5db6c:	cmp	r3, #0
   5db70:	beq	5db88 <__assert_fail@plt+0x4b49c>
   5db74:	ldr	r2, [fp, #-12]
   5db78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5db7c:	add	r3, r2, r3
   5db80:	str	r3, [fp, #-12]
   5db84:	b	5dc9c <__assert_fail@plt+0x4b5b0>
   5db88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5db8c:	str	r3, [fp, #-8]
   5db90:	b	5dba0 <__assert_fail@plt+0x4b4b4>
   5db94:	ldr	r3, [fp, #-8]
   5db98:	add	r3, r3, #1
   5db9c:	str	r3, [fp, #-8]
   5dba0:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5dba4:	sub	r2, r3, #1
   5dba8:	ldr	r3, [fp, #-8]
   5dbac:	cmp	r2, r3
   5dbb0:	bls	5dbe4 <__assert_fail@plt+0x4b4f8>
   5dbb4:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5dbb8:	ldr	r3, [fp, #-8]
   5dbbc:	add	r3, r2, r3
   5dbc0:	ldrb	r2, [r3]
   5dbc4:	ldr	r1, [fp, #-8]
   5dbc8:	ldr	r3, [fp, #-12]
   5dbcc:	add	r3, r1, r3
   5dbd0:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5dbd4:	add	r3, r1, r3
   5dbd8:	ldrb	r3, [r3]
   5dbdc:	cmp	r2, r3
   5dbe0:	beq	5db94 <__assert_fail@plt+0x4b4a8>
   5dbe4:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5dbe8:	sub	r2, r3, #1
   5dbec:	ldr	r3, [fp, #-8]
   5dbf0:	cmp	r2, r3
   5dbf4:	bhi	5dc80 <__assert_fail@plt+0x4b594>
   5dbf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dbfc:	sub	r3, r3, #1
   5dc00:	str	r3, [fp, #-8]
   5dc04:	b	5dc14 <__assert_fail@plt+0x4b528>
   5dc08:	ldr	r3, [fp, #-8]
   5dc0c:	sub	r3, r3, #1
   5dc10:	str	r3, [fp, #-8]
   5dc14:	ldr	r3, [fp, #-8]
   5dc18:	cmn	r3, #1
   5dc1c:	beq	5dc50 <__assert_fail@plt+0x4b564>
   5dc20:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5dc24:	ldr	r3, [fp, #-8]
   5dc28:	add	r3, r2, r3
   5dc2c:	ldrb	r2, [r3]
   5dc30:	ldr	r1, [fp, #-8]
   5dc34:	ldr	r3, [fp, #-12]
   5dc38:	add	r3, r1, r3
   5dc3c:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5dc40:	add	r3, r1, r3
   5dc44:	ldrb	r3, [r3]
   5dc48:	cmp	r2, r3
   5dc4c:	beq	5dc08 <__assert_fail@plt+0x4b51c>
   5dc50:	ldr	r3, [fp, #-8]
   5dc54:	cmn	r3, #1
   5dc58:	bne	5dc6c <__assert_fail@plt+0x4b580>
   5dc5c:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5dc60:	ldr	r3, [fp, #-12]
   5dc64:	add	r3, r2, r3
   5dc68:	b	5dcf4 <__assert_fail@plt+0x4b608>
   5dc6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5dc70:	ldr	r2, [fp, #-12]
   5dc74:	add	r3, r2, r3
   5dc78:	str	r3, [fp, #-12]
   5dc7c:	b	5dc9c <__assert_fail@plt+0x4b5b0>
   5dc80:	ldr	r2, [fp, #-8]
   5dc84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dc88:	sub	r2, r2, r3
   5dc8c:	ldr	r3, [fp, #-12]
   5dc90:	add	r3, r2, r3
   5dc94:	add	r3, r3, #1
   5dc98:	str	r3, [fp, #-12]
   5dc9c:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5dca0:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5dca4:	add	r0, r2, r3
   5dca8:	ldr	r2, [fp, #-12]
   5dcac:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5dcb0:	add	r2, r2, r3
   5dcb4:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5dcb8:	sub	r3, r2, r3
   5dcbc:	mov	r2, r3
   5dcc0:	mov	r1, #0
   5dcc4:	bl	124ac <memchr@plt>
   5dcc8:	mov	r3, r0
   5dccc:	cmp	r3, #0
   5dcd0:	bne	5dcf0 <__assert_fail@plt+0x4b604>
   5dcd4:	ldr	r2, [fp, #-12]
   5dcd8:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5dcdc:	add	r3, r2, r3
   5dce0:	str	r3, [fp, #-1068]	; 0xfffffbd4
   5dce4:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5dce8:	cmp	r3, #0
   5dcec:	bne	5db38 <__assert_fail@plt+0x4b44c>
   5dcf0:	mov	r3, #0
   5dcf4:	mov	r0, r3
   5dcf8:	sub	sp, fp, #4
   5dcfc:	pop	{fp, pc}
   5dd00:	push	{fp, lr}
   5dd04:	add	fp, sp, #4
   5dd08:	sub	sp, sp, #32
   5dd0c:	str	r0, [fp, #-32]	; 0xffffffe0
   5dd10:	str	r1, [fp, #-36]	; 0xffffffdc
   5dd14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5dd18:	str	r3, [fp, #-8]
   5dd1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5dd20:	str	r3, [fp, #-12]
   5dd24:	mov	r3, #1
   5dd28:	strb	r3, [fp, #-13]
   5dd2c:	b	5dd7c <__assert_fail@plt+0x4b690>
   5dd30:	ldr	r3, [fp, #-8]
   5dd34:	add	r2, r3, #1
   5dd38:	str	r2, [fp, #-8]
   5dd3c:	ldrb	r2, [r3]
   5dd40:	ldr	r3, [fp, #-12]
   5dd44:	add	r1, r3, #1
   5dd48:	str	r1, [fp, #-12]
   5dd4c:	ldrb	r3, [r3]
   5dd50:	cmp	r2, r3
   5dd54:	moveq	r3, #1
   5dd58:	movne	r3, #0
   5dd5c:	uxtb	r3, r3
   5dd60:	mov	r2, r3
   5dd64:	ldrb	r3, [fp, #-13]
   5dd68:	and	r3, r3, r2
   5dd6c:	cmp	r3, #0
   5dd70:	movne	r3, #1
   5dd74:	moveq	r3, #0
   5dd78:	strb	r3, [fp, #-13]
   5dd7c:	ldr	r3, [fp, #-8]
   5dd80:	ldrb	r3, [r3]
   5dd84:	cmp	r3, #0
   5dd88:	beq	5dd9c <__assert_fail@plt+0x4b6b0>
   5dd8c:	ldr	r3, [fp, #-12]
   5dd90:	ldrb	r3, [r3]
   5dd94:	cmp	r3, #0
   5dd98:	bne	5dd30 <__assert_fail@plt+0x4b644>
   5dd9c:	ldr	r3, [fp, #-12]
   5dda0:	ldrb	r3, [r3]
   5dda4:	cmp	r3, #0
   5dda8:	beq	5ddb4 <__assert_fail@plt+0x4b6c8>
   5ddac:	mov	r3, #0
   5ddb0:	b	5deb8 <__assert_fail@plt+0x4b7cc>
   5ddb4:	ldrb	r3, [fp, #-13]
   5ddb8:	cmp	r3, #0
   5ddbc:	beq	5ddc8 <__assert_fail@plt+0x4b6dc>
   5ddc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5ddc4:	b	5deb8 <__assert_fail@plt+0x4b7cc>
   5ddc8:	ldr	r2, [fp, #-12]
   5ddcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5ddd0:	sub	r3, r2, r3
   5ddd4:	str	r3, [fp, #-20]	; 0xffffffec
   5ddd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5dddc:	add	r2, r3, #1
   5dde0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5dde4:	ldrb	r3, [r3]
   5dde8:	mov	r1, r3
   5ddec:	mov	r0, r2
   5ddf0:	bl	123c8 <strchr@plt>
   5ddf4:	str	r0, [fp, #-8]
   5ddf8:	ldr	r3, [fp, #-8]
   5ddfc:	cmp	r3, #0
   5de00:	beq	5de20 <__assert_fail@plt+0x4b734>
   5de04:	ldr	r3, [fp, #-20]	; 0xffffffec
   5de08:	cmp	r3, #1
   5de0c:	moveq	r3, #1
   5de10:	movne	r3, #0
   5de14:	uxtb	r3, r3
   5de18:	cmp	r3, #0
   5de1c:	beq	5de28 <__assert_fail@plt+0x4b73c>
   5de20:	ldr	r3, [fp, #-8]
   5de24:	b	5deb8 <__assert_fail@plt+0x4b7cc>
   5de28:	ldr	r3, [fp, #-20]	; 0xffffffec
   5de2c:	rsb	r3, r3, #0
   5de30:	ldr	r2, [fp, #-12]
   5de34:	add	r3, r2, r3
   5de38:	str	r3, [fp, #-12]
   5de3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5de40:	ldr	r3, [fp, #-20]	; 0xffffffec
   5de44:	add	r2, r2, r3
   5de48:	ldr	r3, [fp, #-8]
   5de4c:	cmp	r2, r3
   5de50:	bcc	5de70 <__assert_fail@plt+0x4b784>
   5de54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5de58:	ldr	r3, [fp, #-20]	; 0xffffffec
   5de5c:	add	r3, r2, r3
   5de60:	mov	r2, r3
   5de64:	ldr	r3, [fp, #-8]
   5de68:	sub	r3, r2, r3
   5de6c:	b	5de74 <__assert_fail@plt+0x4b788>
   5de70:	mov	r3, #1
   5de74:	str	r3, [fp, #-24]	; 0xffffffe8
   5de78:	ldr	r3, [fp, #-20]	; 0xffffffec
   5de7c:	cmp	r3, #31
   5de80:	bhi	5dea0 <__assert_fail@plt+0x4b7b4>
   5de84:	ldr	r3, [fp, #-20]	; 0xffffffec
   5de88:	ldr	r2, [fp, #-12]
   5de8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5de90:	ldr	r0, [fp, #-8]
   5de94:	bl	5d424 <__assert_fail@plt+0x4ad38>
   5de98:	mov	r3, r0
   5de9c:	b	5deb8 <__assert_fail@plt+0x4b7cc>
   5dea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5dea4:	ldr	r2, [fp, #-12]
   5dea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5deac:	ldr	r0, [fp, #-8]
   5deb0:	bl	5d7d4 <__assert_fail@plt+0x4b0e8>
   5deb4:	mov	r3, r0
   5deb8:	mov	r0, r3
   5debc:	sub	sp, fp, #4
   5dec0:	pop	{fp, pc}
   5dec4:	push	{fp, lr}
   5dec8:	add	fp, sp, #4
   5decc:	sub	sp, sp, #16
   5ded0:	str	r0, [fp, #-8]
   5ded4:	str	r1, [fp, #-12]
   5ded8:	str	r2, [fp, #-16]
   5dedc:	ldr	r2, [fp, #-16]
   5dee0:	ldr	r1, [fp, #-12]
   5dee4:	ldr	r0, [fp, #-8]
   5dee8:	bl	120f8 <memcpy@plt>
   5deec:	ldr	r2, [fp, #-8]
   5def0:	ldr	r3, [fp, #-16]
   5def4:	add	r3, r2, r3
   5def8:	mov	r2, #0
   5defc:	strb	r2, [r3]
   5df00:	nop			; (mov r0, r0)
   5df04:	sub	sp, fp, #4
   5df08:	pop	{fp, pc}
   5df0c:	push	{fp, lr}
   5df10:	add	fp, sp, #4
   5df14:	sub	sp, sp, #24
   5df18:	str	r0, [fp, #-24]	; 0xffffffe8
   5df1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5df20:	cmp	r3, #0
   5df24:	beq	5df3c <__assert_fail@plt+0x4b850>
   5df28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5df2c:	bl	123bc <strlen@plt>
   5df30:	mov	r3, r0
   5df34:	add	r3, r3, #1
   5df38:	b	5df40 <__assert_fail@plt+0x4b854>
   5df3c:	mov	r3, #0
   5df40:	str	r3, [fp, #-8]
   5df44:	ldr	r3, [fp, #-8]
   5df48:	cmp	r3, #58	; 0x3a
   5df4c:	bls	5df5c <__assert_fail@plt+0x4b870>
   5df50:	ldr	r3, [fp, #-8]
   5df54:	add	r3, r3, #1
   5df58:	b	5df60 <__assert_fail@plt+0x4b874>
   5df5c:	mov	r3, #59	; 0x3b
   5df60:	str	r3, [fp, #-12]
   5df64:	ldr	r3, [fp, #-12]
   5df68:	add	r3, r3, #8
   5df6c:	bic	r3, r3, #3
   5df70:	mov	r0, r3
   5df74:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5df78:	mov	r3, r0
   5df7c:	str	r3, [fp, #-16]
   5df80:	ldr	r3, [fp, #-16]
   5df84:	cmp	r3, #0
   5df88:	beq	5dfe8 <__assert_fail@plt+0x4b8fc>
   5df8c:	ldr	r3, [fp, #-16]
   5df90:	mov	r2, #0
   5df94:	str	r2, [r3]
   5df98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5df9c:	cmp	r3, #0
   5dfa0:	movne	r3, #1
   5dfa4:	moveq	r3, #0
   5dfa8:	uxtb	r3, r3
   5dfac:	mov	r2, r3
   5dfb0:	ldr	r3, [fp, #-16]
   5dfb4:	strb	r2, [r3, #4]
   5dfb8:	ldr	r3, [fp, #-16]
   5dfbc:	mov	r2, #0
   5dfc0:	strb	r2, [r3, #5]
   5dfc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dfc8:	cmp	r3, #0
   5dfcc:	beq	5dfe8 <__assert_fail@plt+0x4b8fc>
   5dfd0:	ldr	r3, [fp, #-16]
   5dfd4:	add	r3, r3, #5
   5dfd8:	ldr	r2, [fp, #-8]
   5dfdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5dfe0:	mov	r0, r3
   5dfe4:	bl	5dec4 <__assert_fail@plt+0x4b7d8>
   5dfe8:	ldr	r3, [fp, #-16]
   5dfec:	mov	r0, r3
   5dff0:	sub	sp, fp, #4
   5dff4:	pop	{fp, pc}
   5dff8:	push	{fp, lr}
   5dffc:	add	fp, sp, #4
   5e000:	sub	sp, sp, #24
   5e004:	str	r0, [fp, #-24]	; 0xffffffe8
   5e008:	str	r1, [fp, #-28]	; 0xffffffe4
   5e00c:	mov	r3, #0
   5e010:	str	r3, [fp, #-12]
   5e014:	ldr	r3, [pc, #448]	; 5e1dc <__assert_fail@plt+0x4baf0>
   5e018:	str	r3, [fp, #-8]
   5e01c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5e020:	ldr	r3, [r3, #40]	; 0x28
   5e024:	str	r3, [fp, #-12]
   5e028:	ldr	r3, [fp, #-12]
   5e02c:	cmp	r3, #0
   5e030:	beq	5e058 <__assert_fail@plt+0x4b96c>
   5e034:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e038:	ldr	r3, [fp, #-12]
   5e03c:	cmp	r2, r3
   5e040:	bhi	5e060 <__assert_fail@plt+0x4b974>
   5e044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5e048:	add	r2, r3, #44	; 0x2c
   5e04c:	ldr	r3, [fp, #-12]
   5e050:	cmp	r2, r3
   5e054:	bls	5e060 <__assert_fail@plt+0x4b974>
   5e058:	mov	r3, #1
   5e05c:	b	5e1d0 <__assert_fail@plt+0x4bae4>
   5e060:	ldr	r3, [fp, #-12]
   5e064:	ldrb	r3, [r3]
   5e068:	cmp	r3, #0
   5e06c:	beq	5e1c0 <__assert_fail@plt+0x4bad4>
   5e070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e074:	add	r3, r3, #5
   5e078:	str	r3, [fp, #-8]
   5e07c:	b	5e1a8 <__assert_fail@plt+0x4babc>
   5e080:	ldr	r3, [fp, #-8]
   5e084:	ldrb	r3, [r3]
   5e088:	cmp	r3, #0
   5e08c:	bne	5e154 <__assert_fail@plt+0x4ba68>
   5e090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e094:	add	r2, r3, #5
   5e098:	ldr	r3, [fp, #-8]
   5e09c:	cmp	r2, r3
   5e0a0:	bne	5e0b4 <__assert_fail@plt+0x4b9c8>
   5e0a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e0a8:	ldrb	r3, [r3, #4]
   5e0ac:	cmp	r3, #0
   5e0b0:	bne	5e154 <__assert_fail@plt+0x4ba68>
   5e0b4:	ldr	r0, [fp, #-12]
   5e0b8:	bl	123bc <strlen@plt>
   5e0bc:	mov	r3, r0
   5e0c0:	add	r3, r3, #1
   5e0c4:	str	r3, [fp, #-16]
   5e0c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e0cc:	add	r3, r3, #5
   5e0d0:	add	r3, r3, #59	; 0x3b
   5e0d4:	mov	r2, r3
   5e0d8:	ldr	r3, [fp, #-8]
   5e0dc:	sub	r2, r2, r3
   5e0e0:	ldr	r3, [fp, #-16]
   5e0e4:	cmp	r2, r3
   5e0e8:	ble	5e104 <__assert_fail@plt+0x4ba18>
   5e0ec:	ldr	r3, [fp, #-16]
   5e0f0:	mov	r2, r3
   5e0f4:	ldr	r1, [fp, #-12]
   5e0f8:	ldr	r0, [fp, #-8]
   5e0fc:	bl	5dec4 <__assert_fail@plt+0x4b7d8>
   5e100:	b	5e1c0 <__assert_fail@plt+0x4bad4>
   5e104:	ldr	r0, [fp, #-12]
   5e108:	bl	5df0c <__assert_fail@plt+0x4b820>
   5e10c:	mov	r2, r0
   5e110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e114:	str	r2, [r3]
   5e118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e11c:	ldr	r3, [r3]
   5e120:	str	r3, [fp, #-24]	; 0xffffffe8
   5e124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e128:	cmp	r3, #0
   5e12c:	bne	5e138 <__assert_fail@plt+0x4ba4c>
   5e130:	mov	r3, #0
   5e134:	b	5e1d0 <__assert_fail@plt+0x4bae4>
   5e138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e13c:	mov	r2, #0
   5e140:	strb	r2, [r3, #4]
   5e144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e148:	add	r3, r3, #5
   5e14c:	str	r3, [fp, #-8]
   5e150:	b	5e1c0 <__assert_fail@plt+0x4bad4>
   5e154:	ldr	r0, [fp, #-8]
   5e158:	bl	123bc <strlen@plt>
   5e15c:	mov	r3, r0
   5e160:	add	r3, r3, #1
   5e164:	ldr	r2, [fp, #-8]
   5e168:	add	r3, r2, r3
   5e16c:	str	r3, [fp, #-8]
   5e170:	ldr	r3, [fp, #-8]
   5e174:	ldrb	r3, [r3]
   5e178:	cmp	r3, #0
   5e17c:	bne	5e1a8 <__assert_fail@plt+0x4babc>
   5e180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e184:	ldr	r3, [r3]
   5e188:	cmp	r3, #0
   5e18c:	beq	5e1a8 <__assert_fail@plt+0x4babc>
   5e190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e194:	ldr	r3, [r3]
   5e198:	str	r3, [fp, #-24]	; 0xffffffe8
   5e19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e1a0:	add	r3, r3, #5
   5e1a4:	str	r3, [fp, #-8]
   5e1a8:	ldr	r1, [fp, #-12]
   5e1ac:	ldr	r0, [fp, #-8]
   5e1b0:	bl	11ffc <strcmp@plt>
   5e1b4:	mov	r3, r0
   5e1b8:	cmp	r3, #0
   5e1bc:	bne	5e080 <__assert_fail@plt+0x4b994>
   5e1c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5e1c4:	ldr	r2, [fp, #-8]
   5e1c8:	str	r2, [r3, #40]	; 0x28
   5e1cc:	mov	r3, #1
   5e1d0:	mov	r0, r3
   5e1d4:	sub	sp, fp, #4
   5e1d8:	pop	{fp, pc}
   5e1dc:	andeq	sl, r6, r8, asr #30
   5e1e0:	push	{fp, lr}
   5e1e4:	add	fp, sp, #4
   5e1e8:	sub	sp, sp, #16
   5e1ec:	str	r0, [fp, #-16]
   5e1f0:	mov	r2, #1
   5e1f4:	ldr	r3, [fp, #-16]
   5e1f8:	cmp	r3, r2
   5e1fc:	beq	5e22c <__assert_fail@plt+0x4bb40>
   5e200:	b	5e220 <__assert_fail@plt+0x4bb34>
   5e204:	ldr	r3, [fp, #-16]
   5e208:	ldr	r3, [r3]
   5e20c:	str	r3, [fp, #-8]
   5e210:	ldr	r0, [fp, #-16]
   5e214:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5e218:	ldr	r3, [fp, #-8]
   5e21c:	str	r3, [fp, #-16]
   5e220:	ldr	r3, [fp, #-16]
   5e224:	cmp	r3, #0
   5e228:	bne	5e204 <__assert_fail@plt+0x4bb18>
   5e22c:	nop			; (mov r0, r0)
   5e230:	sub	sp, fp, #4
   5e234:	pop	{fp, pc}
   5e238:	push	{fp, lr}
   5e23c:	add	fp, sp, #4
   5e240:	ldr	r0, [pc, #12]	; 5e254 <__assert_fail@plt+0x4bb68>
   5e244:	bl	122f0 <getenv@plt>
   5e248:	mov	r3, r0
   5e24c:	mov	r0, r3
   5e250:	pop	{fp, pc}
   5e254:	andeq	sl, r6, ip, asr #30
   5e258:	push	{fp, lr}
   5e25c:	add	fp, sp, #4
   5e260:	sub	sp, sp, #8
   5e264:	str	r0, [fp, #-8]
   5e268:	ldr	r3, [fp, #-8]
   5e26c:	cmp	r3, #0
   5e270:	beq	5e28c <__assert_fail@plt+0x4bba0>
   5e274:	mov	r2, #1
   5e278:	ldr	r1, [fp, #-8]
   5e27c:	ldr	r0, [pc, #32]	; 5e2a4 <__assert_fail@plt+0x4bbb8>
   5e280:	bl	123d4 <setenv@plt>
   5e284:	mov	r3, r0
   5e288:	b	5e298 <__assert_fail@plt+0x4bbac>
   5e28c:	ldr	r0, [pc, #16]	; 5e2a4 <__assert_fail@plt+0x4bbb8>
   5e290:	bl	12668 <unsetenv@plt>
   5e294:	mov	r3, r0
   5e298:	mov	r0, r3
   5e29c:	sub	sp, fp, #4
   5e2a0:	pop	{fp, pc}
   5e2a4:	andeq	sl, r6, ip, asr #30
   5e2a8:	push	{fp, lr}
   5e2ac:	add	fp, sp, #4
   5e2b0:	sub	sp, sp, #8
   5e2b4:	str	r0, [fp, #-8]
   5e2b8:	ldr	r3, [fp, #-8]
   5e2bc:	ldrb	r3, [r3, #4]
   5e2c0:	cmp	r3, #0
   5e2c4:	beq	5e2d4 <__assert_fail@plt+0x4bbe8>
   5e2c8:	ldr	r3, [fp, #-8]
   5e2cc:	add	r3, r3, #5
   5e2d0:	b	5e2d8 <__assert_fail@plt+0x4bbec>
   5e2d4:	mov	r3, #0
   5e2d8:	mov	r0, r3
   5e2dc:	bl	5e258 <__assert_fail@plt+0x4bb6c>
   5e2e0:	mov	r3, r0
   5e2e4:	cmp	r3, #0
   5e2e8:	beq	5e2f4 <__assert_fail@plt+0x4bc08>
   5e2ec:	mov	r3, #0
   5e2f0:	b	5e2fc <__assert_fail@plt+0x4bc10>
   5e2f4:	bl	12200 <tzset@plt>
   5e2f8:	mov	r3, #1
   5e2fc:	mov	r0, r3
   5e300:	sub	sp, fp, #4
   5e304:	pop	{fp, pc}
   5e308:	push	{fp, lr}
   5e30c:	add	fp, sp, #4
   5e310:	sub	sp, sp, #24
   5e314:	str	r0, [fp, #-24]	; 0xffffffe8
   5e318:	bl	5e238 <__assert_fail@plt+0x4bb4c>
   5e31c:	str	r0, [fp, #-8]
   5e320:	ldr	r3, [fp, #-8]
   5e324:	cmp	r3, #0
   5e328:	beq	5e374 <__assert_fail@plt+0x4bc88>
   5e32c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e330:	ldrb	r3, [r3, #4]
   5e334:	cmp	r3, #0
   5e338:	beq	5e364 <__assert_fail@plt+0x4bc78>
   5e33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e340:	add	r3, r3, #5
   5e344:	ldr	r1, [fp, #-8]
   5e348:	mov	r0, r3
   5e34c:	bl	11ffc <strcmp@plt>
   5e350:	mov	r3, r0
   5e354:	cmp	r3, #0
   5e358:	bne	5e364 <__assert_fail@plt+0x4bc78>
   5e35c:	mov	r3, #1
   5e360:	b	5e368 <__assert_fail@plt+0x4bc7c>
   5e364:	mov	r3, #0
   5e368:	and	r3, r3, #1
   5e36c:	uxtb	r3, r3
   5e370:	b	5e38c <__assert_fail@plt+0x4bca0>
   5e374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e378:	ldrb	r3, [r3, #4]
   5e37c:	cmp	r3, #0
   5e380:	moveq	r3, #1
   5e384:	movne	r3, #0
   5e388:	uxtb	r3, r3
   5e38c:	cmp	r3, #0
   5e390:	beq	5e39c <__assert_fail@plt+0x4bcb0>
   5e394:	mov	r3, #1
   5e398:	b	5e40c <__assert_fail@plt+0x4bd20>
   5e39c:	ldr	r0, [fp, #-8]
   5e3a0:	bl	5df0c <__assert_fail@plt+0x4b820>
   5e3a4:	str	r0, [fp, #-12]
   5e3a8:	ldr	r3, [fp, #-12]
   5e3ac:	cmp	r3, #0
   5e3b0:	bne	5e3bc <__assert_fail@plt+0x4bcd0>
   5e3b4:	ldr	r3, [fp, #-12]
   5e3b8:	b	5e40c <__assert_fail@plt+0x4bd20>
   5e3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e3c0:	bl	5e2a8 <__assert_fail@plt+0x4bbbc>
   5e3c4:	mov	r3, r0
   5e3c8:	eor	r3, r3, #1
   5e3cc:	uxtb	r3, r3
   5e3d0:	cmp	r3, #0
   5e3d4:	beq	5e408 <__assert_fail@plt+0x4bd1c>
   5e3d8:	bl	12404 <__errno_location@plt>
   5e3dc:	mov	r3, r0
   5e3e0:	ldr	r3, [r3]
   5e3e4:	str	r3, [fp, #-16]
   5e3e8:	ldr	r0, [fp, #-12]
   5e3ec:	bl	5e1e0 <__assert_fail@plt+0x4baf4>
   5e3f0:	bl	12404 <__errno_location@plt>
   5e3f4:	mov	r2, r0
   5e3f8:	ldr	r3, [fp, #-16]
   5e3fc:	str	r3, [r2]
   5e400:	mov	r3, #0
   5e404:	b	5e40c <__assert_fail@plt+0x4bd20>
   5e408:	ldr	r3, [fp, #-12]
   5e40c:	mov	r0, r3
   5e410:	sub	sp, fp, #4
   5e414:	pop	{fp, pc}
   5e418:	push	{fp, lr}
   5e41c:	add	fp, sp, #4
   5e420:	sub	sp, sp, #16
   5e424:	str	r0, [fp, #-16]
   5e428:	mov	r2, #1
   5e42c:	ldr	r3, [fp, #-16]
   5e430:	cmp	r3, r2
   5e434:	bne	5e440 <__assert_fail@plt+0x4bd54>
   5e438:	mov	r3, #1
   5e43c:	b	5e4a0 <__assert_fail@plt+0x4bdb4>
   5e440:	bl	12404 <__errno_location@plt>
   5e444:	mov	r3, r0
   5e448:	ldr	r3, [r3]
   5e44c:	str	r3, [fp, #-8]
   5e450:	ldr	r0, [fp, #-16]
   5e454:	bl	5e2a8 <__assert_fail@plt+0x4bbbc>
   5e458:	mov	r3, r0
   5e45c:	strb	r3, [fp, #-9]
   5e460:	ldrb	r3, [fp, #-9]
   5e464:	eor	r3, r3, #1
   5e468:	uxtb	r3, r3
   5e46c:	cmp	r3, #0
   5e470:	beq	5e484 <__assert_fail@plt+0x4bd98>
   5e474:	bl	12404 <__errno_location@plt>
   5e478:	mov	r3, r0
   5e47c:	ldr	r3, [r3]
   5e480:	str	r3, [fp, #-8]
   5e484:	ldr	r0, [fp, #-16]
   5e488:	bl	5e1e0 <__assert_fail@plt+0x4baf4>
   5e48c:	bl	12404 <__errno_location@plt>
   5e490:	mov	r2, r0
   5e494:	ldr	r3, [fp, #-8]
   5e498:	str	r3, [r2]
   5e49c:	ldrb	r3, [fp, #-9]
   5e4a0:	mov	r0, r3
   5e4a4:	sub	sp, fp, #4
   5e4a8:	pop	{fp, pc}
   5e4ac:	push	{fp, lr}
   5e4b0:	add	fp, sp, #4
   5e4b4:	sub	sp, sp, #24
   5e4b8:	str	r0, [fp, #-16]
   5e4bc:	str	r1, [fp, #-20]	; 0xffffffec
   5e4c0:	str	r2, [fp, #-24]	; 0xffffffe8
   5e4c4:	ldr	r3, [fp, #-16]
   5e4c8:	cmp	r3, #0
   5e4cc:	bne	5e4e4 <__assert_fail@plt+0x4bdf8>
   5e4d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5e4d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e4d8:	bl	11fcc <gmtime_r@plt>
   5e4dc:	mov	r3, r0
   5e4e0:	b	5e574 <__assert_fail@plt+0x4be88>
   5e4e4:	ldr	r0, [fp, #-16]
   5e4e8:	bl	5e308 <__assert_fail@plt+0x4bc1c>
   5e4ec:	str	r0, [fp, #-8]
   5e4f0:	ldr	r3, [fp, #-8]
   5e4f4:	cmp	r3, #0
   5e4f8:	beq	5e570 <__assert_fail@plt+0x4be84>
   5e4fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5e500:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e504:	bl	121b8 <localtime_r@plt>
   5e508:	mov	r3, r0
   5e50c:	cmp	r3, #0
   5e510:	beq	5e534 <__assert_fail@plt+0x4be48>
   5e514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5e518:	ldr	r0, [fp, #-16]
   5e51c:	bl	5dff8 <__assert_fail@plt+0x4b90c>
   5e520:	mov	r3, r0
   5e524:	cmp	r3, #0
   5e528:	beq	5e534 <__assert_fail@plt+0x4be48>
   5e52c:	mov	r3, #1
   5e530:	b	5e538 <__assert_fail@plt+0x4be4c>
   5e534:	mov	r3, #0
   5e538:	strb	r3, [fp, #-9]
   5e53c:	ldrb	r3, [fp, #-9]
   5e540:	and	r3, r3, #1
   5e544:	strb	r3, [fp, #-9]
   5e548:	ldr	r0, [fp, #-8]
   5e54c:	bl	5e418 <__assert_fail@plt+0x4bd2c>
   5e550:	mov	r3, r0
   5e554:	cmp	r3, #0
   5e558:	beq	5e570 <__assert_fail@plt+0x4be84>
   5e55c:	ldrb	r3, [fp, #-9]
   5e560:	cmp	r3, #0
   5e564:	beq	5e570 <__assert_fail@plt+0x4be84>
   5e568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e56c:	b	5e574 <__assert_fail@plt+0x4be88>
   5e570:	mov	r3, #0
   5e574:	mov	r0, r3
   5e578:	sub	sp, fp, #4
   5e57c:	pop	{fp, pc}
   5e580:	push	{fp, lr}
   5e584:	add	fp, sp, #4
   5e588:	sub	sp, sp, #64	; 0x40
   5e58c:	str	r0, [fp, #-64]	; 0xffffffc0
   5e590:	str	r1, [fp, #-68]	; 0xffffffbc
   5e594:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5e598:	cmp	r3, #0
   5e59c:	bne	5e5b0 <__assert_fail@plt+0x4bec4>
   5e5a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5e5a4:	bl	125b4 <timegm@plt>
   5e5a8:	mov	r3, r0
   5e5ac:	b	5e6d8 <__assert_fail@plt+0x4bfec>
   5e5b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5e5b4:	bl	5e308 <__assert_fail@plt+0x4bc1c>
   5e5b8:	str	r0, [fp, #-8]
   5e5bc:	ldr	r3, [fp, #-8]
   5e5c0:	cmp	r3, #0
   5e5c4:	beq	5e6d4 <__assert_fail@plt+0x4bfe8>
   5e5c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e5cc:	ldr	r3, [r3]
   5e5d0:	str	r3, [fp, #-60]	; 0xffffffc4
   5e5d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e5d8:	ldr	r3, [r3, #4]
   5e5dc:	str	r3, [fp, #-56]	; 0xffffffc8
   5e5e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e5e4:	ldr	r3, [r3, #8]
   5e5e8:	str	r3, [fp, #-52]	; 0xffffffcc
   5e5ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e5f0:	ldr	r3, [r3, #12]
   5e5f4:	str	r3, [fp, #-48]	; 0xffffffd0
   5e5f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e5fc:	ldr	r3, [r3, #16]
   5e600:	str	r3, [fp, #-44]	; 0xffffffd4
   5e604:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e608:	ldr	r3, [r3, #20]
   5e60c:	str	r3, [fp, #-40]	; 0xffffffd8
   5e610:	mvn	r3, #0
   5e614:	str	r3, [fp, #-32]	; 0xffffffe0
   5e618:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e61c:	ldr	r3, [r3, #32]
   5e620:	str	r3, [fp, #-28]	; 0xffffffe4
   5e624:	sub	r3, fp, #60	; 0x3c
   5e628:	mov	r0, r3
   5e62c:	bl	12050 <mktime@plt>
   5e630:	str	r0, [fp, #-12]
   5e634:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e638:	mvn	r3, r3
   5e63c:	lsr	r3, r3, #31
   5e640:	strb	r3, [fp, #-13]
   5e644:	ldrb	r3, [fp, #-13]
   5e648:	cmp	r3, #0
   5e64c:	beq	5e674 <__assert_fail@plt+0x4bf88>
   5e650:	sub	r3, fp, #60	; 0x3c
   5e654:	mov	r1, r3
   5e658:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5e65c:	bl	5dff8 <__assert_fail@plt+0x4b90c>
   5e660:	mov	r3, r0
   5e664:	cmp	r3, #0
   5e668:	beq	5e674 <__assert_fail@plt+0x4bf88>
   5e66c:	mov	r3, #1
   5e670:	b	5e678 <__assert_fail@plt+0x4bf8c>
   5e674:	mov	r3, #0
   5e678:	strb	r3, [fp, #-13]
   5e67c:	ldrb	r3, [fp, #-13]
   5e680:	and	r3, r3, #1
   5e684:	strb	r3, [fp, #-13]
   5e688:	ldr	r0, [fp, #-8]
   5e68c:	bl	5e418 <__assert_fail@plt+0x4bd2c>
   5e690:	mov	r3, r0
   5e694:	cmp	r3, #0
   5e698:	beq	5e6d4 <__assert_fail@plt+0x4bfe8>
   5e69c:	ldrb	r3, [fp, #-13]
   5e6a0:	cmp	r3, #0
   5e6a4:	beq	5e6d4 <__assert_fail@plt+0x4bfe8>
   5e6a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5e6ac:	mov	lr, r3
   5e6b0:	sub	ip, fp, #60	; 0x3c
   5e6b4:	ldm	ip!, {r0, r1, r2, r3}
   5e6b8:	stmia	lr!, {r0, r1, r2, r3}
   5e6bc:	ldm	ip!, {r0, r1, r2, r3}
   5e6c0:	stmia	lr!, {r0, r1, r2, r3}
   5e6c4:	ldm	ip, {r0, r1, r2}
   5e6c8:	stm	lr, {r0, r1, r2}
   5e6cc:	ldr	r3, [fp, #-12]
   5e6d0:	b	5e6d8 <__assert_fail@plt+0x4bfec>
   5e6d4:	mvn	r3, #0
   5e6d8:	mov	r0, r3
   5e6dc:	sub	sp, fp, #4
   5e6e0:	pop	{fp, pc}
   5e6e4:	push	{fp, lr}
   5e6e8:	add	fp, sp, #4
   5e6ec:	ldr	r3, [pc, #8]	; 5e6fc <__assert_fail@plt+0x4c010>
   5e6f0:	ldr	r3, [r3]
   5e6f4:	mov	r0, r3
   5e6f8:	bl	12380 <exit@plt>
   5e6fc:	andeq	ip, r7, ip, asr #13
   5e700:	push	{fp, lr}
   5e704:	add	fp, sp, #4
   5e708:	sub	sp, sp, #32
   5e70c:	str	r0, [fp, #-24]	; 0xffffffe8
   5e710:	str	r1, [fp, #-28]	; 0xffffffe4
   5e714:	str	r2, [fp, #-32]	; 0xffffffe0
   5e718:	str	r3, [fp, #-36]	; 0xffffffdc
   5e71c:	mvn	r3, #0
   5e720:	str	r3, [fp, #-12]
   5e724:	mov	r3, #0
   5e728:	strb	r3, [fp, #-13]
   5e72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e730:	bl	123bc <strlen@plt>
   5e734:	str	r0, [fp, #-20]	; 0xffffffec
   5e738:	mov	r3, #0
   5e73c:	str	r3, [fp, #-8]
   5e740:	b	5e820 <__assert_fail@plt+0x4c134>
   5e744:	ldr	r3, [fp, #-8]
   5e748:	lsl	r3, r3, #2
   5e74c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e750:	add	r3, r2, r3
   5e754:	ldr	r3, [r3]
   5e758:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e75c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5e760:	mov	r0, r3
   5e764:	bl	1268c <strncmp@plt>
   5e768:	mov	r3, r0
   5e76c:	cmp	r3, #0
   5e770:	bne	5e814 <__assert_fail@plt+0x4c128>
   5e774:	ldr	r3, [fp, #-8]
   5e778:	lsl	r3, r3, #2
   5e77c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e780:	add	r3, r2, r3
   5e784:	ldr	r3, [r3]
   5e788:	mov	r0, r3
   5e78c:	bl	123bc <strlen@plt>
   5e790:	mov	r2, r0
   5e794:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e798:	cmp	r2, r3
   5e79c:	bne	5e7a8 <__assert_fail@plt+0x4c0bc>
   5e7a0:	ldr	r3, [fp, #-8]
   5e7a4:	b	5e854 <__assert_fail@plt+0x4c168>
   5e7a8:	ldr	r3, [fp, #-12]
   5e7ac:	cmn	r3, #1
   5e7b0:	bne	5e7c0 <__assert_fail@plt+0x4c0d4>
   5e7b4:	ldr	r3, [fp, #-8]
   5e7b8:	str	r3, [fp, #-12]
   5e7bc:	b	5e814 <__assert_fail@plt+0x4c128>
   5e7c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e7c4:	cmp	r3, #0
   5e7c8:	beq	5e80c <__assert_fail@plt+0x4c120>
   5e7cc:	ldr	r3, [fp, #-12]
   5e7d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5e7d4:	mul	r3, r2, r3
   5e7d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e7dc:	add	r0, r2, r3
   5e7e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e7e4:	ldr	r2, [fp, #-8]
   5e7e8:	mul	r3, r2, r3
   5e7ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e7f0:	add	r3, r2, r3
   5e7f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5e7f8:	mov	r1, r3
   5e7fc:	bl	12158 <memcmp@plt>
   5e800:	mov	r3, r0
   5e804:	cmp	r3, #0
   5e808:	beq	5e814 <__assert_fail@plt+0x4c128>
   5e80c:	mov	r3, #1
   5e810:	strb	r3, [fp, #-13]
   5e814:	ldr	r3, [fp, #-8]
   5e818:	add	r3, r3, #1
   5e81c:	str	r3, [fp, #-8]
   5e820:	ldr	r3, [fp, #-8]
   5e824:	lsl	r3, r3, #2
   5e828:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e82c:	add	r3, r2, r3
   5e830:	ldr	r3, [r3]
   5e834:	cmp	r3, #0
   5e838:	bne	5e744 <__assert_fail@plt+0x4c058>
   5e83c:	ldrb	r3, [fp, #-13]
   5e840:	cmp	r3, #0
   5e844:	beq	5e850 <__assert_fail@plt+0x4c164>
   5e848:	mvn	r3, #1
   5e84c:	b	5e854 <__assert_fail@plt+0x4c168>
   5e850:	ldr	r3, [fp, #-12]
   5e854:	mov	r0, r3
   5e858:	sub	sp, fp, #4
   5e85c:	pop	{fp, pc}
   5e860:	push	{r4, fp, lr}
   5e864:	add	fp, sp, #8
   5e868:	sub	sp, sp, #36	; 0x24
   5e86c:	str	r0, [fp, #-24]	; 0xffffffe8
   5e870:	str	r1, [fp, #-28]	; 0xffffffe4
   5e874:	str	r2, [fp, #-32]	; 0xffffffe0
   5e878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e87c:	cmn	r3, #1
   5e880:	bne	5e894 <__assert_fail@plt+0x4c1a8>
   5e884:	ldr	r0, [pc, #96]	; 5e8ec <__assert_fail@plt+0x4c200>
   5e888:	bl	12398 <gettext@plt>
   5e88c:	mov	r3, r0
   5e890:	b	5e8a0 <__assert_fail@plt+0x4c1b4>
   5e894:	ldr	r0, [pc, #84]	; 5e8f0 <__assert_fail@plt+0x4c204>
   5e898:	bl	12398 <gettext@plt>
   5e89c:	mov	r3, r0
   5e8a0:	str	r3, [fp, #-16]
   5e8a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e8a8:	mov	r1, #8
   5e8ac:	mov	r0, #0
   5e8b0:	bl	3b718 <__assert_fail@plt+0x2902c>
   5e8b4:	mov	r4, r0
   5e8b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5e8bc:	mov	r0, #1
   5e8c0:	bl	3bb78 <__assert_fail@plt+0x2948c>
   5e8c4:	mov	r3, r0
   5e8c8:	str	r3, [sp]
   5e8cc:	mov	r3, r4
   5e8d0:	ldr	r2, [fp, #-16]
   5e8d4:	mov	r1, #0
   5e8d8:	mov	r0, #0
   5e8dc:	bl	122b4 <error@plt>
   5e8e0:	nop			; (mov r0, r0)
   5e8e4:	sub	sp, fp, #8
   5e8e8:	pop	{r4, fp, pc}
   5e8ec:	andeq	sl, r6, r0, ror #30
   5e8f0:	andeq	sl, r6, ip, ror pc
   5e8f4:	push	{r4, fp, lr}
   5e8f8:	add	fp, sp, #8
   5e8fc:	sub	sp, sp, #28
   5e900:	str	r0, [fp, #-24]	; 0xffffffe8
   5e904:	str	r1, [fp, #-28]	; 0xffffffe4
   5e908:	str	r2, [fp, #-32]	; 0xffffffe0
   5e90c:	mov	r3, #0
   5e910:	str	r3, [fp, #-20]	; 0xffffffec
   5e914:	ldr	r0, [pc, #308]	; 5ea50 <__assert_fail@plt+0x4c364>
   5e918:	bl	12398 <gettext@plt>
   5e91c:	mov	r2, r0
   5e920:	ldr	r3, [pc, #300]	; 5ea54 <__assert_fail@plt+0x4c368>
   5e924:	ldr	r3, [r3]
   5e928:	mov	r1, r3
   5e92c:	mov	r0, r2
   5e930:	bl	12680 <fputs@plt>
   5e934:	mov	r3, #0
   5e938:	str	r3, [fp, #-16]
   5e93c:	b	5ea14 <__assert_fail@plt+0x4c328>
   5e940:	ldr	r3, [fp, #-16]
   5e944:	cmp	r3, #0
   5e948:	beq	5e97c <__assert_fail@plt+0x4c290>
   5e94c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e950:	ldr	r2, [fp, #-16]
   5e954:	mul	r3, r2, r3
   5e958:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e95c:	add	r3, r2, r3
   5e960:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e964:	mov	r1, r3
   5e968:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e96c:	bl	12158 <memcmp@plt>
   5e970:	mov	r3, r0
   5e974:	cmp	r3, #0
   5e978:	beq	5e9d0 <__assert_fail@plt+0x4c2e4>
   5e97c:	ldr	r3, [pc, #208]	; 5ea54 <__assert_fail@plt+0x4c368>
   5e980:	ldr	r4, [r3]
   5e984:	ldr	r3, [fp, #-16]
   5e988:	lsl	r3, r3, #2
   5e98c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e990:	add	r3, r2, r3
   5e994:	ldr	r3, [r3]
   5e998:	mov	r0, r3
   5e99c:	bl	3bbac <__assert_fail@plt+0x294c0>
   5e9a0:	mov	r3, r0
   5e9a4:	mov	r2, r3
   5e9a8:	ldr	r1, [pc, #168]	; 5ea58 <__assert_fail@plt+0x4c36c>
   5e9ac:	mov	r0, r4
   5e9b0:	bl	123f8 <fprintf@plt>
   5e9b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e9b8:	ldr	r2, [fp, #-16]
   5e9bc:	mul	r3, r2, r3
   5e9c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5e9c4:	add	r3, r2, r3
   5e9c8:	str	r3, [fp, #-20]	; 0xffffffec
   5e9cc:	b	5ea08 <__assert_fail@plt+0x4c31c>
   5e9d0:	ldr	r3, [pc, #124]	; 5ea54 <__assert_fail@plt+0x4c368>
   5e9d4:	ldr	r4, [r3]
   5e9d8:	ldr	r3, [fp, #-16]
   5e9dc:	lsl	r3, r3, #2
   5e9e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e9e4:	add	r3, r2, r3
   5e9e8:	ldr	r3, [r3]
   5e9ec:	mov	r0, r3
   5e9f0:	bl	3bbac <__assert_fail@plt+0x294c0>
   5e9f4:	mov	r3, r0
   5e9f8:	mov	r2, r3
   5e9fc:	ldr	r1, [pc, #88]	; 5ea5c <__assert_fail@plt+0x4c370>
   5ea00:	mov	r0, r4
   5ea04:	bl	123f8 <fprintf@plt>
   5ea08:	ldr	r3, [fp, #-16]
   5ea0c:	add	r3, r3, #1
   5ea10:	str	r3, [fp, #-16]
   5ea14:	ldr	r3, [fp, #-16]
   5ea18:	lsl	r3, r3, #2
   5ea1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5ea20:	add	r3, r2, r3
   5ea24:	ldr	r3, [r3]
   5ea28:	cmp	r3, #0
   5ea2c:	bne	5e940 <__assert_fail@plt+0x4c254>
   5ea30:	ldr	r3, [pc, #28]	; 5ea54 <__assert_fail@plt+0x4c368>
   5ea34:	ldr	r3, [r3]
   5ea38:	mov	r1, r3
   5ea3c:	mov	r0, #10
   5ea40:	bl	125c0 <putc@plt>
   5ea44:	nop			; (mov r0, r0)
   5ea48:	sub	sp, fp, #8
   5ea4c:	pop	{r4, fp, pc}
   5ea50:	muleq	r6, ip, pc	; <UNPREDICTABLE>
   5ea54:	andeq	ip, r7, r8, lsr #14
   5ea58:			; <UNDEFINED> instruction: 0x0006afb4
   5ea5c:			; <UNDEFINED> instruction: 0x0006afbc
   5ea60:	push	{fp, lr}
   5ea64:	add	fp, sp, #4
   5ea68:	sub	sp, sp, #24
   5ea6c:	str	r0, [fp, #-16]
   5ea70:	str	r1, [fp, #-20]	; 0xffffffec
   5ea74:	str	r2, [fp, #-24]	; 0xffffffe8
   5ea78:	str	r3, [fp, #-28]	; 0xffffffe4
   5ea7c:	ldr	r3, [fp, #4]
   5ea80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5ea84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ea88:	ldr	r0, [fp, #-20]	; 0xffffffec
   5ea8c:	bl	5e700 <__assert_fail@plt+0x4c014>
   5ea90:	str	r0, [fp, #-8]
   5ea94:	ldr	r3, [fp, #-8]
   5ea98:	cmp	r3, #0
   5ea9c:	blt	5eaa8 <__assert_fail@plt+0x4c3bc>
   5eaa0:	ldr	r3, [fp, #-8]
   5eaa4:	b	5ead4 <__assert_fail@plt+0x4c3e8>
   5eaa8:	ldr	r2, [fp, #-8]
   5eaac:	ldr	r1, [fp, #-20]	; 0xffffffec
   5eab0:	ldr	r0, [fp, #-16]
   5eab4:	bl	5e860 <__assert_fail@plt+0x4c174>
   5eab8:	ldr	r2, [fp, #4]
   5eabc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5eac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5eac4:	bl	5e8f4 <__assert_fail@plt+0x4c208>
   5eac8:	ldr	r3, [fp, #8]
   5eacc:	blx	r3
   5ead0:	mvn	r3, #0
   5ead4:	mov	r0, r3
   5ead8:	sub	sp, fp, #4
   5eadc:	pop	{fp, pc}
   5eae0:	push	{fp, lr}
   5eae4:	add	fp, sp, #4
   5eae8:	sub	sp, sp, #24
   5eaec:	str	r0, [fp, #-16]
   5eaf0:	str	r1, [fp, #-20]	; 0xffffffec
   5eaf4:	str	r2, [fp, #-24]	; 0xffffffe8
   5eaf8:	str	r3, [fp, #-28]	; 0xffffffe4
   5eafc:	mov	r3, #0
   5eb00:	str	r3, [fp, #-8]
   5eb04:	b	5eb5c <__assert_fail@plt+0x4c470>
   5eb08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5eb0c:	ldr	r2, [fp, #-8]
   5eb10:	mul	r3, r2, r3
   5eb14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5eb18:	add	r3, r2, r3
   5eb1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5eb20:	mov	r1, r3
   5eb24:	ldr	r0, [fp, #-16]
   5eb28:	bl	12158 <memcmp@plt>
   5eb2c:	mov	r3, r0
   5eb30:	cmp	r3, #0
   5eb34:	bne	5eb50 <__assert_fail@plt+0x4c464>
   5eb38:	ldr	r3, [fp, #-8]
   5eb3c:	lsl	r3, r3, #2
   5eb40:	ldr	r2, [fp, #-20]	; 0xffffffec
   5eb44:	add	r3, r2, r3
   5eb48:	ldr	r3, [r3]
   5eb4c:	b	5eb7c <__assert_fail@plt+0x4c490>
   5eb50:	ldr	r3, [fp, #-8]
   5eb54:	add	r3, r3, #1
   5eb58:	str	r3, [fp, #-8]
   5eb5c:	ldr	r3, [fp, #-8]
   5eb60:	lsl	r3, r3, #2
   5eb64:	ldr	r2, [fp, #-20]	; 0xffffffec
   5eb68:	add	r3, r2, r3
   5eb6c:	ldr	r3, [r3]
   5eb70:	cmp	r3, #0
   5eb74:	bne	5eb08 <__assert_fail@plt+0x4c41c>
   5eb78:	mov	r3, #0
   5eb7c:	mov	r0, r3
   5eb80:	sub	sp, fp, #4
   5eb84:	pop	{fp, pc}
   5eb88:	push	{fp, lr}
   5eb8c:	add	fp, sp, #4
   5eb90:	sub	sp, sp, #64	; 0x40
   5eb94:	str	r0, [fp, #-56]	; 0xffffffc8
   5eb98:	str	r1, [fp, #-60]	; 0xffffffc4
   5eb9c:	str	r2, [fp, #-64]	; 0xffffffc0
   5eba0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5eba4:	str	r3, [fp, #-8]
   5eba8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5ebac:	ldrb	r3, [r3]
   5ebb0:	cmp	r3, #0
   5ebb4:	bne	5ebcc <__assert_fail@plt+0x4c4e0>
   5ebb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5ebbc:	mov	r2, #0
   5ebc0:	strb	r2, [r3]
   5ebc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5ebc8:	b	5ece0 <__assert_fail@plt+0x4c5f4>
   5ebcc:	ldr	r3, [pc, #280]	; 5ecec <__assert_fail@plt+0x4c600>
   5ebd0:	ldr	r3, [r3]
   5ebd4:	cmp	r3, #0
   5ebd8:	bne	5ec54 <__assert_fail@plt+0x4c568>
   5ebdc:	ldr	r1, [pc, #268]	; 5ecf0 <__assert_fail@plt+0x4c604>
   5ebe0:	ldr	r0, [pc, #268]	; 5ecf4 <__assert_fail@plt+0x4c608>
   5ebe4:	bl	122e4 <open64@plt>
   5ebe8:	str	r0, [fp, #-12]
   5ebec:	ldr	r3, [fp, #-12]
   5ebf0:	cmp	r3, #0
   5ebf4:	bge	5ec08 <__assert_fail@plt+0x4c51c>
   5ebf8:	ldr	r3, [pc, #236]	; 5ecec <__assert_fail@plt+0x4c600>
   5ebfc:	mvn	r2, #0
   5ec00:	str	r2, [r3]
   5ec04:	b	5ec54 <__assert_fail@plt+0x4c568>
   5ec08:	sub	r3, fp, #52	; 0x34
   5ec0c:	ldr	r2, [fp, #-12]
   5ec10:	ldr	r1, [pc, #224]	; 5ecf8 <__assert_fail@plt+0x4c60c>
   5ec14:	mov	r0, r3
   5ec18:	bl	12590 <sprintf@plt>
   5ec1c:	sub	r3, fp, #52	; 0x34
   5ec20:	mov	r1, #0
   5ec24:	mov	r0, r3
   5ec28:	bl	124c4 <access@plt>
   5ec2c:	mov	r3, r0
   5ec30:	cmp	r3, #0
   5ec34:	beq	5ec40 <__assert_fail@plt+0x4c554>
   5ec38:	mvn	r3, #0
   5ec3c:	b	5ec44 <__assert_fail@plt+0x4c558>
   5ec40:	mov	r3, #1
   5ec44:	ldr	r2, [pc, #160]	; 5ecec <__assert_fail@plt+0x4c600>
   5ec48:	str	r3, [r2]
   5ec4c:	ldr	r0, [fp, #-12]
   5ec50:	bl	126a4 <close@plt>
   5ec54:	ldr	r3, [pc, #144]	; 5ecec <__assert_fail@plt+0x4c600>
   5ec58:	ldr	r3, [r3]
   5ec5c:	cmp	r3, #0
   5ec60:	bge	5ec6c <__assert_fail@plt+0x4c580>
   5ec64:	mov	r3, #0
   5ec68:	b	5ece0 <__assert_fail@plt+0x4c5f4>
   5ec6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5ec70:	bl	123bc <strlen@plt>
   5ec74:	mov	r3, r0
   5ec78:	add	r3, r3, #27
   5ec7c:	str	r3, [fp, #-16]
   5ec80:	ldr	r3, [fp, #-16]
   5ec84:	cmp	r3, #4032	; 0xfc0
   5ec88:	bls	5ecb0 <__assert_fail@plt+0x4c5c4>
   5ec8c:	ldr	r0, [fp, #-16]
   5ec90:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5ec94:	mov	r3, r0
   5ec98:	str	r3, [fp, #-8]
   5ec9c:	ldr	r3, [fp, #-8]
   5eca0:	cmp	r3, #0
   5eca4:	bne	5ecb0 <__assert_fail@plt+0x4c5c4>
   5eca8:	mov	r3, #0
   5ecac:	b	5ece0 <__assert_fail@plt+0x4c5f4>
   5ecb0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   5ecb4:	ldr	r1, [pc, #64]	; 5ecfc <__assert_fail@plt+0x4c610>
   5ecb8:	ldr	r0, [fp, #-8]
   5ecbc:	bl	12590 <sprintf@plt>
   5ecc0:	str	r0, [fp, #-20]	; 0xffffffec
   5ecc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ecc8:	ldr	r2, [fp, #-8]
   5eccc:	add	r3, r2, r3
   5ecd0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   5ecd4:	mov	r0, r3
   5ecd8:	bl	1226c <strcpy@plt>
   5ecdc:	ldr	r3, [fp, #-8]
   5ece0:	mov	r0, r3
   5ece4:	sub	sp, fp, #4
   5ece8:	pop	{fp, pc}
   5ecec:	andeq	sp, r7, ip, lsl r0
   5ecf0:	andeq	r4, r8, r0, lsl #18
   5ecf4:	andeq	sl, r6, r4, asr #31
   5ecf8:	ldrdeq	sl, [r6], -r4
   5ecfc:	andeq	sl, r6, ip, ror #31
   5ed00:	push	{fp}		; (str fp, [sp, #-4]!)
   5ed04:	add	fp, sp, #0
   5ed08:	sub	sp, sp, #28
   5ed0c:	str	r0, [fp, #-24]	; 0xffffffe8
   5ed10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ed14:	str	r3, [fp, #-8]
   5ed18:	mov	r3, #0
   5ed1c:	strb	r3, [fp, #-13]
   5ed20:	b	5ed30 <__assert_fail@plt+0x4c644>
   5ed24:	ldr	r3, [fp, #-8]
   5ed28:	add	r3, r3, #1
   5ed2c:	str	r3, [fp, #-8]
   5ed30:	ldr	r3, [fp, #-8]
   5ed34:	ldrb	r3, [r3]
   5ed38:	cmp	r3, #47	; 0x2f
   5ed3c:	beq	5ed24 <__assert_fail@plt+0x4c638>
   5ed40:	ldr	r3, [fp, #-8]
   5ed44:	str	r3, [fp, #-12]
   5ed48:	b	5ed90 <__assert_fail@plt+0x4c6a4>
   5ed4c:	ldr	r3, [fp, #-12]
   5ed50:	ldrb	r3, [r3]
   5ed54:	cmp	r3, #47	; 0x2f
   5ed58:	bne	5ed68 <__assert_fail@plt+0x4c67c>
   5ed5c:	mov	r3, #1
   5ed60:	strb	r3, [fp, #-13]
   5ed64:	b	5ed84 <__assert_fail@plt+0x4c698>
   5ed68:	ldrb	r3, [fp, #-13]
   5ed6c:	cmp	r3, #0
   5ed70:	beq	5ed84 <__assert_fail@plt+0x4c698>
   5ed74:	ldr	r3, [fp, #-12]
   5ed78:	str	r3, [fp, #-8]
   5ed7c:	mov	r3, #0
   5ed80:	strb	r3, [fp, #-13]
   5ed84:	ldr	r3, [fp, #-12]
   5ed88:	add	r3, r3, #1
   5ed8c:	str	r3, [fp, #-12]
   5ed90:	ldr	r3, [fp, #-12]
   5ed94:	ldrb	r3, [r3]
   5ed98:	cmp	r3, #0
   5ed9c:	bne	5ed4c <__assert_fail@plt+0x4c660>
   5eda0:	ldr	r3, [fp, #-8]
   5eda4:	mov	r0, r3
   5eda8:	add	sp, fp, #0
   5edac:	pop	{fp}		; (ldr fp, [sp], #4)
   5edb0:	bx	lr
   5edb4:	push	{fp, lr}
   5edb8:	add	fp, sp, #4
   5edbc:	sub	sp, sp, #16
   5edc0:	str	r0, [fp, #-16]
   5edc4:	mov	r3, #0
   5edc8:	str	r3, [fp, #-12]
   5edcc:	ldr	r0, [fp, #-16]
   5edd0:	bl	123bc <strlen@plt>
   5edd4:	str	r0, [fp, #-8]
   5edd8:	b	5ede8 <__assert_fail@plt+0x4c6fc>
   5eddc:	ldr	r3, [fp, #-8]
   5ede0:	sub	r3, r3, #1
   5ede4:	str	r3, [fp, #-8]
   5ede8:	ldr	r3, [fp, #-8]
   5edec:	cmp	r3, #1
   5edf0:	bls	5ee10 <__assert_fail@plt+0x4c724>
   5edf4:	ldr	r3, [fp, #-8]
   5edf8:	sub	r3, r3, #1
   5edfc:	ldr	r2, [fp, #-16]
   5ee00:	add	r3, r2, r3
   5ee04:	ldrb	r3, [r3]
   5ee08:	cmp	r3, #47	; 0x2f
   5ee0c:	beq	5eddc <__assert_fail@plt+0x4c6f0>
   5ee10:	ldr	r3, [fp, #-8]
   5ee14:	mov	r0, r3
   5ee18:	sub	sp, fp, #4
   5ee1c:	pop	{fp, pc}
   5ee20:	push	{r4, r5, r6, r7, fp}
   5ee24:	add	fp, sp, #16
   5ee28:	sub	sp, sp, #20
   5ee2c:	strd	r0, [fp, #-28]	; 0xffffffe4
   5ee30:	str	r2, [fp, #-32]	; 0xffffffe0
   5ee34:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   5ee38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ee3c:	sub	ip, r1, #32
   5ee40:	rsb	r0, r1, #32
   5ee44:	lsl	r7, r3, r1
   5ee48:	orr	r7, r7, r2, lsl ip
   5ee4c:	orr	r7, r7, r2, lsr r0
   5ee50:	lsl	r6, r2, r1
   5ee54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ee58:	rsb	r1, r1, #0
   5ee5c:	and	r1, r1, #63	; 0x3f
   5ee60:	rsb	ip, r1, #32
   5ee64:	sub	r0, r1, #32
   5ee68:	lsr	r4, r2, r1
   5ee6c:	orr	r4, r4, r3, lsl ip
   5ee70:	orr	r4, r4, r3, lsr r0
   5ee74:	lsr	r5, r3, r1
   5ee78:	orr	r4, r4, r6
   5ee7c:	orr	r5, r5, r7
   5ee80:	mov	r2, r4
   5ee84:	mov	r3, r5
   5ee88:	mov	r0, r2
   5ee8c:	mov	r1, r3
   5ee90:	sub	sp, fp, #16
   5ee94:	pop	{r4, r5, r6, r7, fp}
   5ee98:	bx	lr
   5ee9c:	push	{r4, r5, r6, r7, fp}
   5eea0:	add	fp, sp, #16
   5eea4:	sub	sp, sp, #20
   5eea8:	strd	r0, [fp, #-28]	; 0xffffffe4
   5eeac:	str	r2, [fp, #-32]	; 0xffffffe0
   5eeb0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   5eeb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5eeb8:	rsb	ip, r1, #32
   5eebc:	sub	r0, r1, #32
   5eec0:	lsr	r6, r2, r1
   5eec4:	orr	r6, r6, r3, lsl ip
   5eec8:	orr	r6, r6, r3, lsr r0
   5eecc:	lsr	r7, r3, r1
   5eed0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5eed4:	rsb	r1, r1, #0
   5eed8:	and	r1, r1, #63	; 0x3f
   5eedc:	sub	ip, r1, #32
   5eee0:	rsb	r0, r1, #32
   5eee4:	lsl	r5, r3, r1
   5eee8:	orr	r5, r5, r2, lsl ip
   5eeec:	orr	r5, r5, r2, lsr r0
   5eef0:	lsl	r4, r2, r1
   5eef4:	orr	r4, r4, r6
   5eef8:	orr	r5, r5, r7
   5eefc:	mov	r2, r4
   5ef00:	mov	r3, r5
   5ef04:	mov	r0, r2
   5ef08:	mov	r1, r3
   5ef0c:	sub	sp, fp, #16
   5ef10:	pop	{r4, r5, r6, r7, fp}
   5ef14:	bx	lr
   5ef18:	push	{fp}		; (str fp, [sp, #-4]!)
   5ef1c:	add	fp, sp, #0
   5ef20:	sub	sp, sp, #12
   5ef24:	str	r0, [fp, #-8]
   5ef28:	str	r1, [fp, #-12]
   5ef2c:	ldr	r2, [fp, #-8]
   5ef30:	ldr	r3, [fp, #-12]
   5ef34:	rsb	r3, r3, #32
   5ef38:	ror	r3, r2, r3
   5ef3c:	mov	r0, r3
   5ef40:	add	sp, fp, #0
   5ef44:	pop	{fp}		; (ldr fp, [sp], #4)
   5ef48:	bx	lr
   5ef4c:	push	{fp}		; (str fp, [sp, #-4]!)
   5ef50:	add	fp, sp, #0
   5ef54:	sub	sp, sp, #12
   5ef58:	str	r0, [fp, #-8]
   5ef5c:	str	r1, [fp, #-12]
   5ef60:	ldr	r2, [fp, #-8]
   5ef64:	ldr	r3, [fp, #-12]
   5ef68:	ror	r3, r2, r3
   5ef6c:	mov	r0, r3
   5ef70:	add	sp, fp, #0
   5ef74:	pop	{fp}		; (ldr fp, [sp], #4)
   5ef78:	bx	lr
   5ef7c:	push	{fp}		; (str fp, [sp, #-4]!)
   5ef80:	add	fp, sp, #0
   5ef84:	sub	sp, sp, #12
   5ef88:	str	r0, [fp, #-8]
   5ef8c:	str	r1, [fp, #-12]
   5ef90:	ldr	r2, [fp, #-8]
   5ef94:	ldr	r3, [fp, #-12]
   5ef98:	rsb	r3, r3, #32
   5ef9c:	ror	r3, r2, r3
   5efa0:	mov	r0, r3
   5efa4:	add	sp, fp, #0
   5efa8:	pop	{fp}		; (ldr fp, [sp], #4)
   5efac:	bx	lr
   5efb0:	push	{fp}		; (str fp, [sp, #-4]!)
   5efb4:	add	fp, sp, #0
   5efb8:	sub	sp, sp, #12
   5efbc:	str	r0, [fp, #-8]
   5efc0:	str	r1, [fp, #-12]
   5efc4:	ldr	r2, [fp, #-8]
   5efc8:	ldr	r3, [fp, #-12]
   5efcc:	ror	r3, r2, r3
   5efd0:	mov	r0, r3
   5efd4:	add	sp, fp, #0
   5efd8:	pop	{fp}		; (ldr fp, [sp], #4)
   5efdc:	bx	lr
   5efe0:	push	{fp}		; (str fp, [sp, #-4]!)
   5efe4:	add	fp, sp, #0
   5efe8:	sub	sp, sp, #12
   5efec:	mov	r3, r0
   5eff0:	str	r1, [fp, #-12]
   5eff4:	strh	r3, [fp, #-6]
   5eff8:	ldrh	r2, [fp, #-6]
   5effc:	ldr	r3, [fp, #-12]
   5f000:	lsl	r3, r2, r3
   5f004:	uxth	r2, r3
   5f008:	ldrh	r1, [fp, #-6]
   5f00c:	ldr	r3, [fp, #-12]
   5f010:	rsb	r3, r3, #16
   5f014:	lsr	r3, r1, r3
   5f018:	uxth	r3, r3
   5f01c:	orr	r3, r2, r3
   5f020:	uxth	r3, r3
   5f024:	mov	r0, r3
   5f028:	add	sp, fp, #0
   5f02c:	pop	{fp}		; (ldr fp, [sp], #4)
   5f030:	bx	lr
   5f034:	push	{fp}		; (str fp, [sp, #-4]!)
   5f038:	add	fp, sp, #0
   5f03c:	sub	sp, sp, #12
   5f040:	mov	r3, r0
   5f044:	str	r1, [fp, #-12]
   5f048:	strh	r3, [fp, #-6]
   5f04c:	ldrh	r2, [fp, #-6]
   5f050:	ldr	r3, [fp, #-12]
   5f054:	lsr	r3, r2, r3
   5f058:	uxth	r2, r3
   5f05c:	ldrh	r1, [fp, #-6]
   5f060:	ldr	r3, [fp, #-12]
   5f064:	rsb	r3, r3, #16
   5f068:	lsl	r3, r1, r3
   5f06c:	uxth	r3, r3
   5f070:	orr	r3, r2, r3
   5f074:	uxth	r3, r3
   5f078:	mov	r0, r3
   5f07c:	add	sp, fp, #0
   5f080:	pop	{fp}		; (ldr fp, [sp], #4)
   5f084:	bx	lr
   5f088:	push	{fp}		; (str fp, [sp, #-4]!)
   5f08c:	add	fp, sp, #0
   5f090:	sub	sp, sp, #12
   5f094:	mov	r3, r0
   5f098:	str	r1, [fp, #-12]
   5f09c:	strb	r3, [fp, #-5]
   5f0a0:	ldrb	r2, [fp, #-5]
   5f0a4:	ldr	r3, [fp, #-12]
   5f0a8:	lsl	r3, r2, r3
   5f0ac:	uxtb	r2, r3
   5f0b0:	ldrb	r1, [fp, #-5]
   5f0b4:	ldr	r3, [fp, #-12]
   5f0b8:	rsb	r3, r3, #8
   5f0bc:	lsr	r3, r1, r3
   5f0c0:	uxtb	r3, r3
   5f0c4:	orr	r3, r2, r3
   5f0c8:	uxtb	r3, r3
   5f0cc:	mov	r0, r3
   5f0d0:	add	sp, fp, #0
   5f0d4:	pop	{fp}		; (ldr fp, [sp], #4)
   5f0d8:	bx	lr
   5f0dc:	push	{fp}		; (str fp, [sp, #-4]!)
   5f0e0:	add	fp, sp, #0
   5f0e4:	sub	sp, sp, #12
   5f0e8:	mov	r3, r0
   5f0ec:	str	r1, [fp, #-12]
   5f0f0:	strb	r3, [fp, #-5]
   5f0f4:	ldrb	r2, [fp, #-5]
   5f0f8:	ldr	r3, [fp, #-12]
   5f0fc:	lsr	r3, r2, r3
   5f100:	uxtb	r2, r3
   5f104:	ldrb	r1, [fp, #-5]
   5f108:	ldr	r3, [fp, #-12]
   5f10c:	rsb	r3, r3, #8
   5f110:	lsl	r3, r1, r3
   5f114:	uxtb	r3, r3
   5f118:	orr	r3, r2, r3
   5f11c:	uxtb	r3, r3
   5f120:	mov	r0, r3
   5f124:	add	sp, fp, #0
   5f128:	pop	{fp}		; (ldr fp, [sp], #4)
   5f12c:	bx	lr
   5f130:	push	{fp}		; (str fp, [sp, #-4]!)
   5f134:	add	fp, sp, #0
   5f138:	sub	sp, sp, #12
   5f13c:	str	r0, [fp, #-8]
   5f140:	ldr	r3, [fp, #-8]
   5f144:	cmp	r3, #90	; 0x5a
   5f148:	bgt	5f164 <__assert_fail@plt+0x4ca78>
   5f14c:	cmp	r3, #65	; 0x41
   5f150:	bge	5f170 <__assert_fail@plt+0x4ca84>
   5f154:	sub	r3, r3, #48	; 0x30
   5f158:	cmp	r3, #9
   5f15c:	bhi	5f178 <__assert_fail@plt+0x4ca8c>
   5f160:	b	5f170 <__assert_fail@plt+0x4ca84>
   5f164:	sub	r3, r3, #97	; 0x61
   5f168:	cmp	r3, #25
   5f16c:	bhi	5f178 <__assert_fail@plt+0x4ca8c>
   5f170:	mov	r3, #1
   5f174:	b	5f17c <__assert_fail@plt+0x4ca90>
   5f178:	mov	r3, #0
   5f17c:	mov	r0, r3
   5f180:	add	sp, fp, #0
   5f184:	pop	{fp}		; (ldr fp, [sp], #4)
   5f188:	bx	lr
   5f18c:	push	{fp}		; (str fp, [sp, #-4]!)
   5f190:	add	fp, sp, #0
   5f194:	sub	sp, sp, #12
   5f198:	str	r0, [fp, #-8]
   5f19c:	ldr	r3, [fp, #-8]
   5f1a0:	cmp	r3, #65	; 0x41
   5f1a4:	blt	5f1c4 <__assert_fail@plt+0x4cad8>
   5f1a8:	cmp	r3, #90	; 0x5a
   5f1ac:	ble	5f1bc <__assert_fail@plt+0x4cad0>
   5f1b0:	sub	r3, r3, #97	; 0x61
   5f1b4:	cmp	r3, #25
   5f1b8:	bhi	5f1c4 <__assert_fail@plt+0x4cad8>
   5f1bc:	mov	r3, #1
   5f1c0:	b	5f1c8 <__assert_fail@plt+0x4cadc>
   5f1c4:	mov	r3, #0
   5f1c8:	mov	r0, r3
   5f1cc:	add	sp, fp, #0
   5f1d0:	pop	{fp}		; (ldr fp, [sp], #4)
   5f1d4:	bx	lr
   5f1d8:	push	{fp}		; (str fp, [sp, #-4]!)
   5f1dc:	add	fp, sp, #0
   5f1e0:	sub	sp, sp, #12
   5f1e4:	str	r0, [fp, #-8]
   5f1e8:	ldr	r3, [fp, #-8]
   5f1ec:	add	r3, r3, #0
   5f1f0:	cmp	r3, #127	; 0x7f
   5f1f4:	bhi	5f200 <__assert_fail@plt+0x4cb14>
   5f1f8:	mov	r3, #1
   5f1fc:	b	5f204 <__assert_fail@plt+0x4cb18>
   5f200:	mov	r3, #0
   5f204:	mov	r0, r3
   5f208:	add	sp, fp, #0
   5f20c:	pop	{fp}		; (ldr fp, [sp], #4)
   5f210:	bx	lr
   5f214:	push	{fp}		; (str fp, [sp, #-4]!)
   5f218:	add	fp, sp, #0
   5f21c:	sub	sp, sp, #12
   5f220:	str	r0, [fp, #-8]
   5f224:	ldr	r3, [fp, #-8]
   5f228:	cmp	r3, #32
   5f22c:	beq	5f23c <__assert_fail@plt+0x4cb50>
   5f230:	ldr	r3, [fp, #-8]
   5f234:	cmp	r3, #9
   5f238:	bne	5f244 <__assert_fail@plt+0x4cb58>
   5f23c:	mov	r3, #1
   5f240:	b	5f248 <__assert_fail@plt+0x4cb5c>
   5f244:	mov	r3, #0
   5f248:	and	r3, r3, #1
   5f24c:	uxtb	r3, r3
   5f250:	mov	r0, r3
   5f254:	add	sp, fp, #0
   5f258:	pop	{fp}		; (ldr fp, [sp], #4)
   5f25c:	bx	lr
   5f260:	push	{fp}		; (str fp, [sp, #-4]!)
   5f264:	add	fp, sp, #0
   5f268:	sub	sp, sp, #12
   5f26c:	str	r0, [fp, #-8]
   5f270:	ldr	r3, [fp, #-8]
   5f274:	cmp	r3, #0
   5f278:	blt	5f294 <__assert_fail@plt+0x4cba8>
   5f27c:	cmp	r3, #31
   5f280:	ble	5f28c <__assert_fail@plt+0x4cba0>
   5f284:	cmp	r3, #127	; 0x7f
   5f288:	bne	5f294 <__assert_fail@plt+0x4cba8>
   5f28c:	mov	r3, #1
   5f290:	b	5f298 <__assert_fail@plt+0x4cbac>
   5f294:	mov	r3, #0
   5f298:	mov	r0, r3
   5f29c:	add	sp, fp, #0
   5f2a0:	pop	{fp}		; (ldr fp, [sp], #4)
   5f2a4:	bx	lr
   5f2a8:	push	{fp}		; (str fp, [sp, #-4]!)
   5f2ac:	add	fp, sp, #0
   5f2b0:	sub	sp, sp, #12
   5f2b4:	str	r0, [fp, #-8]
   5f2b8:	ldr	r3, [fp, #-8]
   5f2bc:	sub	r3, r3, #48	; 0x30
   5f2c0:	cmp	r3, #9
   5f2c4:	bhi	5f2d0 <__assert_fail@plt+0x4cbe4>
   5f2c8:	mov	r3, #1
   5f2cc:	b	5f2d4 <__assert_fail@plt+0x4cbe8>
   5f2d0:	mov	r3, #0
   5f2d4:	mov	r0, r3
   5f2d8:	add	sp, fp, #0
   5f2dc:	pop	{fp}		; (ldr fp, [sp], #4)
   5f2e0:	bx	lr
   5f2e4:	push	{fp}		; (str fp, [sp, #-4]!)
   5f2e8:	add	fp, sp, #0
   5f2ec:	sub	sp, sp, #12
   5f2f0:	str	r0, [fp, #-8]
   5f2f4:	ldr	r3, [fp, #-8]
   5f2f8:	sub	r3, r3, #33	; 0x21
   5f2fc:	cmp	r3, #93	; 0x5d
   5f300:	bhi	5f30c <__assert_fail@plt+0x4cc20>
   5f304:	mov	r3, #1
   5f308:	b	5f310 <__assert_fail@plt+0x4cc24>
   5f30c:	mov	r3, #0
   5f310:	mov	r0, r3
   5f314:	add	sp, fp, #0
   5f318:	pop	{fp}		; (ldr fp, [sp], #4)
   5f31c:	bx	lr
   5f320:	push	{fp}		; (str fp, [sp, #-4]!)
   5f324:	add	fp, sp, #0
   5f328:	sub	sp, sp, #12
   5f32c:	str	r0, [fp, #-8]
   5f330:	ldr	r3, [fp, #-8]
   5f334:	sub	r3, r3, #97	; 0x61
   5f338:	cmp	r3, #25
   5f33c:	bhi	5f348 <__assert_fail@plt+0x4cc5c>
   5f340:	mov	r3, #1
   5f344:	b	5f34c <__assert_fail@plt+0x4cc60>
   5f348:	mov	r3, #0
   5f34c:	mov	r0, r3
   5f350:	add	sp, fp, #0
   5f354:	pop	{fp}		; (ldr fp, [sp], #4)
   5f358:	bx	lr
   5f35c:	push	{fp}		; (str fp, [sp, #-4]!)
   5f360:	add	fp, sp, #0
   5f364:	sub	sp, sp, #12
   5f368:	str	r0, [fp, #-8]
   5f36c:	ldr	r3, [fp, #-8]
   5f370:	sub	r3, r3, #32
   5f374:	cmp	r3, #94	; 0x5e
   5f378:	bhi	5f384 <__assert_fail@plt+0x4cc98>
   5f37c:	mov	r3, #1
   5f380:	b	5f388 <__assert_fail@plt+0x4cc9c>
   5f384:	mov	r3, #0
   5f388:	mov	r0, r3
   5f38c:	add	sp, fp, #0
   5f390:	pop	{fp}		; (ldr fp, [sp], #4)
   5f394:	bx	lr
   5f398:	push	{fp}		; (str fp, [sp, #-4]!)
   5f39c:	add	fp, sp, #0
   5f3a0:	sub	sp, sp, #12
   5f3a4:	str	r0, [fp, #-8]
   5f3a8:	ldr	r3, [fp, #-8]
   5f3ac:	cmp	r3, #64	; 0x40
   5f3b0:	bgt	5f3cc <__assert_fail@plt+0x4cce0>
   5f3b4:	cmp	r3, #58	; 0x3a
   5f3b8:	bge	5f3e8 <__assert_fail@plt+0x4ccfc>
   5f3bc:	sub	r3, r3, #33	; 0x21
   5f3c0:	cmp	r3, #14
   5f3c4:	bhi	5f3f0 <__assert_fail@plt+0x4cd04>
   5f3c8:	b	5f3e8 <__assert_fail@plt+0x4ccfc>
   5f3cc:	cmp	r3, #91	; 0x5b
   5f3d0:	blt	5f3f0 <__assert_fail@plt+0x4cd04>
   5f3d4:	cmp	r3, #96	; 0x60
   5f3d8:	ble	5f3e8 <__assert_fail@plt+0x4ccfc>
   5f3dc:	sub	r3, r3, #123	; 0x7b
   5f3e0:	cmp	r3, #3
   5f3e4:	bhi	5f3f0 <__assert_fail@plt+0x4cd04>
   5f3e8:	mov	r3, #1
   5f3ec:	b	5f3f4 <__assert_fail@plt+0x4cd08>
   5f3f0:	mov	r3, #0
   5f3f4:	mov	r0, r3
   5f3f8:	add	sp, fp, #0
   5f3fc:	pop	{fp}		; (ldr fp, [sp], #4)
   5f400:	bx	lr
   5f404:	push	{fp}		; (str fp, [sp, #-4]!)
   5f408:	add	fp, sp, #0
   5f40c:	sub	sp, sp, #12
   5f410:	str	r0, [fp, #-8]
   5f414:	ldr	r3, [fp, #-8]
   5f418:	cmp	r3, #9
   5f41c:	blt	5f438 <__assert_fail@plt+0x4cd4c>
   5f420:	cmp	r3, #13
   5f424:	ble	5f430 <__assert_fail@plt+0x4cd44>
   5f428:	cmp	r3, #32
   5f42c:	bne	5f438 <__assert_fail@plt+0x4cd4c>
   5f430:	mov	r3, #1
   5f434:	b	5f43c <__assert_fail@plt+0x4cd50>
   5f438:	mov	r3, #0
   5f43c:	mov	r0, r3
   5f440:	add	sp, fp, #0
   5f444:	pop	{fp}		; (ldr fp, [sp], #4)
   5f448:	bx	lr
   5f44c:	push	{fp}		; (str fp, [sp, #-4]!)
   5f450:	add	fp, sp, #0
   5f454:	sub	sp, sp, #12
   5f458:	str	r0, [fp, #-8]
   5f45c:	ldr	r3, [fp, #-8]
   5f460:	sub	r3, r3, #65	; 0x41
   5f464:	cmp	r3, #25
   5f468:	bhi	5f474 <__assert_fail@plt+0x4cd88>
   5f46c:	mov	r3, #1
   5f470:	b	5f478 <__assert_fail@plt+0x4cd8c>
   5f474:	mov	r3, #0
   5f478:	mov	r0, r3
   5f47c:	add	sp, fp, #0
   5f480:	pop	{fp}		; (ldr fp, [sp], #4)
   5f484:	bx	lr
   5f488:	push	{fp}		; (str fp, [sp, #-4]!)
   5f48c:	add	fp, sp, #0
   5f490:	sub	sp, sp, #12
   5f494:	str	r0, [fp, #-8]
   5f498:	ldr	r3, [fp, #-8]
   5f49c:	sub	r3, r3, #48	; 0x30
   5f4a0:	cmp	r3, #54	; 0x36
   5f4a4:	ldrls	pc, [pc, r3, lsl #2]
   5f4a8:	b	5f590 <__assert_fail@plt+0x4cea4>
   5f4ac:	andeq	pc, r5, r8, lsl #11
   5f4b0:	andeq	pc, r5, r8, lsl #11
   5f4b4:	andeq	pc, r5, r8, lsl #11
   5f4b8:	andeq	pc, r5, r8, lsl #11
   5f4bc:	andeq	pc, r5, r8, lsl #11
   5f4c0:	andeq	pc, r5, r8, lsl #11
   5f4c4:	andeq	pc, r5, r8, lsl #11
   5f4c8:	andeq	pc, r5, r8, lsl #11
   5f4cc:	andeq	pc, r5, r8, lsl #11
   5f4d0:	andeq	pc, r5, r8, lsl #11
   5f4d4:	muleq	r5, r0, r5
   5f4d8:	muleq	r5, r0, r5
   5f4dc:	muleq	r5, r0, r5
   5f4e0:	muleq	r5, r0, r5
   5f4e4:	muleq	r5, r0, r5
   5f4e8:	muleq	r5, r0, r5
   5f4ec:	muleq	r5, r0, r5
   5f4f0:	andeq	pc, r5, r8, lsl #11
   5f4f4:	andeq	pc, r5, r8, lsl #11
   5f4f8:	andeq	pc, r5, r8, lsl #11
   5f4fc:	andeq	pc, r5, r8, lsl #11
   5f500:	andeq	pc, r5, r8, lsl #11
   5f504:	andeq	pc, r5, r8, lsl #11
   5f508:	muleq	r5, r0, r5
   5f50c:	muleq	r5, r0, r5
   5f510:	muleq	r5, r0, r5
   5f514:	muleq	r5, r0, r5
   5f518:	muleq	r5, r0, r5
   5f51c:	muleq	r5, r0, r5
   5f520:	muleq	r5, r0, r5
   5f524:	muleq	r5, r0, r5
   5f528:	muleq	r5, r0, r5
   5f52c:	muleq	r5, r0, r5
   5f530:	muleq	r5, r0, r5
   5f534:	muleq	r5, r0, r5
   5f538:	muleq	r5, r0, r5
   5f53c:	muleq	r5, r0, r5
   5f540:	muleq	r5, r0, r5
   5f544:	muleq	r5, r0, r5
   5f548:	muleq	r5, r0, r5
   5f54c:	muleq	r5, r0, r5
   5f550:	muleq	r5, r0, r5
   5f554:	muleq	r5, r0, r5
   5f558:	muleq	r5, r0, r5
   5f55c:	muleq	r5, r0, r5
   5f560:	muleq	r5, r0, r5
   5f564:	muleq	r5, r0, r5
   5f568:	muleq	r5, r0, r5
   5f56c:	muleq	r5, r0, r5
   5f570:	andeq	pc, r5, r8, lsl #11
   5f574:	andeq	pc, r5, r8, lsl #11
   5f578:	andeq	pc, r5, r8, lsl #11
   5f57c:	andeq	pc, r5, r8, lsl #11
   5f580:	andeq	pc, r5, r8, lsl #11
   5f584:	andeq	pc, r5, r8, lsl #11
   5f588:	mov	r3, #1
   5f58c:	b	5f594 <__assert_fail@plt+0x4cea8>
   5f590:	mov	r3, #0
   5f594:	mov	r0, r3
   5f598:	add	sp, fp, #0
   5f59c:	pop	{fp}		; (ldr fp, [sp], #4)
   5f5a0:	bx	lr
   5f5a4:	push	{fp}		; (str fp, [sp, #-4]!)
   5f5a8:	add	fp, sp, #0
   5f5ac:	sub	sp, sp, #12
   5f5b0:	str	r0, [fp, #-8]
   5f5b4:	ldr	r3, [fp, #-8]
   5f5b8:	sub	r3, r3, #65	; 0x41
   5f5bc:	cmp	r3, #25
   5f5c0:	bhi	5f5d0 <__assert_fail@plt+0x4cee4>
   5f5c4:	ldr	r3, [fp, #-8]
   5f5c8:	add	r3, r3, #32
   5f5cc:	b	5f5d4 <__assert_fail@plt+0x4cee8>
   5f5d0:	ldr	r3, [fp, #-8]
   5f5d4:	mov	r0, r3
   5f5d8:	add	sp, fp, #0
   5f5dc:	pop	{fp}		; (ldr fp, [sp], #4)
   5f5e0:	bx	lr
   5f5e4:	push	{fp}		; (str fp, [sp, #-4]!)
   5f5e8:	add	fp, sp, #0
   5f5ec:	sub	sp, sp, #12
   5f5f0:	str	r0, [fp, #-8]
   5f5f4:	ldr	r3, [fp, #-8]
   5f5f8:	sub	r3, r3, #97	; 0x61
   5f5fc:	cmp	r3, #25
   5f600:	bhi	5f610 <__assert_fail@plt+0x4cf24>
   5f604:	ldr	r3, [fp, #-8]
   5f608:	sub	r3, r3, #32
   5f60c:	b	5f614 <__assert_fail@plt+0x4cf28>
   5f610:	ldr	r3, [fp, #-8]
   5f614:	mov	r0, r3
   5f618:	add	sp, fp, #0
   5f61c:	pop	{fp}		; (ldr fp, [sp], #4)
   5f620:	bx	lr
   5f624:	push	{r4, r5, fp, lr}
   5f628:	add	fp, sp, #12
   5f62c:	sub	sp, sp, #16
   5f630:	str	r0, [fp, #-24]	; 0xffffffe8
   5f634:	str	r1, [fp, #-28]	; 0xffffffe4
   5f638:	ldr	r5, [fp, #-24]	; 0xffffffe8
   5f63c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   5f640:	cmp	r5, r4
   5f644:	bne	5f650 <__assert_fail@plt+0x4cf64>
   5f648:	mov	r3, #0
   5f64c:	b	5f6b0 <__assert_fail@plt+0x4cfc4>
   5f650:	ldrb	r3, [r5]
   5f654:	mov	r0, r3
   5f658:	bl	5f5a4 <__assert_fail@plt+0x4ceb8>
   5f65c:	mov	r3, r0
   5f660:	strb	r3, [fp, #-13]
   5f664:	ldrb	r3, [r4]
   5f668:	mov	r0, r3
   5f66c:	bl	5f5a4 <__assert_fail@plt+0x4ceb8>
   5f670:	mov	r3, r0
   5f674:	strb	r3, [fp, #-14]
   5f678:	ldrb	r3, [fp, #-13]
   5f67c:	cmp	r3, #0
   5f680:	beq	5f6a0 <__assert_fail@plt+0x4cfb4>
   5f684:	add	r5, r5, #1
   5f688:	add	r4, r4, #1
   5f68c:	ldrb	r2, [fp, #-13]
   5f690:	ldrb	r3, [fp, #-14]
   5f694:	cmp	r2, r3
   5f698:	beq	5f650 <__assert_fail@plt+0x4cf64>
   5f69c:	b	5f6a4 <__assert_fail@plt+0x4cfb8>
   5f6a0:	nop			; (mov r0, r0)
   5f6a4:	ldrb	r2, [fp, #-13]
   5f6a8:	ldrb	r3, [fp, #-14]
   5f6ac:	sub	r3, r2, r3
   5f6b0:	mov	r0, r3
   5f6b4:	sub	sp, fp, #12
   5f6b8:	pop	{r4, r5, fp, pc}
   5f6bc:	push	{fp, lr}
   5f6c0:	add	fp, sp, #4
   5f6c4:	sub	sp, sp, #16
   5f6c8:	str	r0, [fp, #-16]
   5f6cc:	ldr	r0, [fp, #-16]
   5f6d0:	bl	12284 <__fpending@plt>
   5f6d4:	mov	r3, r0
   5f6d8:	cmp	r3, #0
   5f6dc:	movne	r3, #1
   5f6e0:	moveq	r3, #0
   5f6e4:	strb	r3, [fp, #-5]
   5f6e8:	ldr	r0, [fp, #-16]
   5f6ec:	bl	120bc <ferror@plt>
   5f6f0:	mov	r3, r0
   5f6f4:	cmp	r3, #0
   5f6f8:	movne	r3, #1
   5f6fc:	moveq	r3, #0
   5f700:	strb	r3, [fp, #-6]
   5f704:	ldr	r0, [fp, #-16]
   5f708:	bl	124d0 <fclose@plt>
   5f70c:	mov	r3, r0
   5f710:	cmp	r3, #0
   5f714:	movne	r3, #1
   5f718:	moveq	r3, #0
   5f71c:	strb	r3, [fp, #-7]
   5f720:	ldrb	r3, [fp, #-6]
   5f724:	cmp	r3, #0
   5f728:	bne	5f758 <__assert_fail@plt+0x4d06c>
   5f72c:	ldrb	r3, [fp, #-7]
   5f730:	cmp	r3, #0
   5f734:	beq	5f784 <__assert_fail@plt+0x4d098>
   5f738:	ldrb	r3, [fp, #-5]
   5f73c:	cmp	r3, #0
   5f740:	bne	5f758 <__assert_fail@plt+0x4d06c>
   5f744:	bl	12404 <__errno_location@plt>
   5f748:	mov	r3, r0
   5f74c:	ldr	r3, [r3]
   5f750:	cmp	r3, #9
   5f754:	beq	5f784 <__assert_fail@plt+0x4d098>
   5f758:	ldrb	r3, [fp, #-7]
   5f75c:	eor	r3, r3, #1
   5f760:	uxtb	r3, r3
   5f764:	cmp	r3, #0
   5f768:	beq	5f77c <__assert_fail@plt+0x4d090>
   5f76c:	bl	12404 <__errno_location@plt>
   5f770:	mov	r2, r0
   5f774:	mov	r3, #0
   5f778:	str	r3, [r2]
   5f77c:	mvn	r3, #0
   5f780:	b	5f788 <__assert_fail@plt+0x4d09c>
   5f784:	mov	r3, #0
   5f788:	mov	r0, r3
   5f78c:	sub	sp, fp, #4
   5f790:	pop	{fp, pc}
   5f794:	push	{fp}		; (str fp, [sp, #-4]!)
   5f798:	add	fp, sp, #0
   5f79c:	sub	sp, sp, #12
   5f7a0:	strd	r0, [fp, #-12]
   5f7a4:	ldrd	r2, [fp, #-12]
   5f7a8:	subs	r0, r2, #1
   5f7ac:	sbc	r1, r3, #0
   5f7b0:	ldrd	r2, [fp, #-12]
   5f7b4:	and	r2, r2, r0
   5f7b8:	and	r3, r3, r1
   5f7bc:	orr	r3, r2, r3
   5f7c0:	cmp	r3, #0
   5f7c4:	moveq	r3, #1
   5f7c8:	movne	r3, #0
   5f7cc:	uxtb	r3, r3
   5f7d0:	mov	r0, r3
   5f7d4:	add	sp, fp, #0
   5f7d8:	pop	{fp}		; (ldr fp, [sp], #4)
   5f7dc:	bx	lr
   5f7e0:	push	{fp}		; (str fp, [sp, #-4]!)
   5f7e4:	add	fp, sp, #0
   5f7e8:	sub	sp, sp, #12
   5f7ec:	str	r0, [fp, #-8]
   5f7f0:	ldr	r1, [fp, #-8]
   5f7f4:	mov	r2, #0
   5f7f8:	mov	r3, #0
   5f7fc:	strd	r2, [r1, #16]
   5f800:	ldr	r3, [fp, #-8]
   5f804:	ldr	r2, [pc, #16]	; 5f81c <__assert_fail@plt+0x4d130>
   5f808:	str	r2, [r3, #24]
   5f80c:	nop			; (mov r0, r0)
   5f810:	add	sp, fp, #0
   5f814:	pop	{fp}		; (ldr fp, [sp], #4)
   5f818:	bx	lr
   5f81c:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   5f820:	push	{fp, lr}
   5f824:	add	fp, sp, #4
   5f828:	sub	sp, sp, #8
   5f82c:	str	r0, [fp, #-8]
   5f830:	str	r1, [fp, #-12]
   5f834:	ldr	r3, [fp, #-8]
   5f838:	ldr	r3, [r3, #24]
   5f83c:	ldr	r2, [pc, #232]	; 5f92c <__assert_fail@plt+0x4d240>
   5f840:	cmp	r3, r2
   5f844:	beq	5f85c <__assert_fail@plt+0x4d170>
   5f848:	ldr	r3, [pc, #224]	; 5f930 <__assert_fail@plt+0x4d244>
   5f84c:	mov	r2, #60	; 0x3c
   5f850:	ldr	r1, [pc, #220]	; 5f934 <__assert_fail@plt+0x4d248>
   5f854:	ldr	r0, [pc, #220]	; 5f938 <__assert_fail@plt+0x4d24c>
   5f858:	bl	126ec <__assert_fail@plt>
   5f85c:	ldr	r3, [fp, #-8]
   5f860:	ldrd	r2, [r3, #16]
   5f864:	orrs	r3, r2, r3
   5f868:	beq	5f8ac <__assert_fail@plt+0x4d1c0>
   5f86c:	ldr	r3, [fp, #-12]
   5f870:	ldrd	r0, [r3, #96]	; 0x60
   5f874:	ldr	r3, [fp, #-8]
   5f878:	ldrd	r2, [r3]
   5f87c:	cmp	r1, r3
   5f880:	cmpeq	r0, r2
   5f884:	bne	5f8ac <__assert_fail@plt+0x4d1c0>
   5f888:	ldr	r3, [fp, #-12]
   5f88c:	ldrd	r0, [r3]
   5f890:	ldr	r3, [fp, #-8]
   5f894:	ldrd	r2, [r3, #8]
   5f898:	cmp	r1, r3
   5f89c:	cmpeq	r0, r2
   5f8a0:	bne	5f8ac <__assert_fail@plt+0x4d1c0>
   5f8a4:	mov	r3, #1
   5f8a8:	b	5f920 <__assert_fail@plt+0x4d234>
   5f8ac:	ldr	r3, [fp, #-8]
   5f8b0:	ldrd	r2, [r3, #16]
   5f8b4:	adds	r2, r2, #1
   5f8b8:	adc	r3, r3, #0
   5f8bc:	ldr	r1, [fp, #-8]
   5f8c0:	strd	r2, [r1, #16]
   5f8c4:	ldr	r3, [fp, #-8]
   5f8c8:	ldrd	r2, [r3, #16]
   5f8cc:	mov	r0, r2
   5f8d0:	mov	r1, r3
   5f8d4:	bl	5f794 <__assert_fail@plt+0x4d0a8>
   5f8d8:	mov	r3, r0
   5f8dc:	cmp	r3, #0
   5f8e0:	beq	5f91c <__assert_fail@plt+0x4d230>
   5f8e4:	ldr	r3, [fp, #-8]
   5f8e8:	ldrd	r2, [r3, #16]
   5f8ec:	orrs	r3, r2, r3
   5f8f0:	bne	5f8fc <__assert_fail@plt+0x4d210>
   5f8f4:	mov	r3, #1
   5f8f8:	b	5f920 <__assert_fail@plt+0x4d234>
   5f8fc:	ldr	r3, [fp, #-12]
   5f900:	ldrd	r2, [r3]
   5f904:	ldr	r1, [fp, #-8]
   5f908:	strd	r2, [r1, #8]
   5f90c:	ldr	r3, [fp, #-12]
   5f910:	ldrd	r2, [r3, #96]	; 0x60
   5f914:	ldr	r1, [fp, #-8]
   5f918:	strd	r2, [r1]
   5f91c:	mov	r3, #0
   5f920:	mov	r0, r3
   5f924:	sub	sp, fp, #4
   5f928:	pop	{fp, pc}
   5f92c:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   5f930:	andeq	fp, r6, r8, lsr #32
   5f934:	andeq	fp, r6, r0
   5f938:	andeq	fp, r6, r0, lsl r0
   5f93c:	push	{fp, lr}
   5f940:	add	fp, sp, #4
   5f944:	sub	sp, sp, #32
   5f948:	str	r0, [fp, #-24]	; 0xffffffe8
   5f94c:	str	r1, [fp, #-28]	; 0xffffffe4
   5f950:	str	r2, [fp, #-32]	; 0xffffffe0
   5f954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f958:	ldr	r3, [r3, #4]
   5f95c:	cmp	r3, #0
   5f960:	bne	5f9a0 <__assert_fail@plt+0x4d2b4>
   5f964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f968:	cmp	r3, #3
   5f96c:	bhi	5f97c <__assert_fail@plt+0x4d290>
   5f970:	mov	r3, #16
   5f974:	str	r3, [fp, #-8]
   5f978:	b	5f9ec <__assert_fail@plt+0x4d300>
   5f97c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f980:	cmp	r3, #7
   5f984:	bhi	5f994 <__assert_fail@plt+0x4d2a8>
   5f988:	mov	r3, #8
   5f98c:	str	r3, [fp, #-8]
   5f990:	b	5f9ec <__assert_fail@plt+0x4d300>
   5f994:	mov	r3, #4
   5f998:	str	r3, [fp, #-8]
   5f99c:	b	5f9ec <__assert_fail@plt+0x4d300>
   5f9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f9a4:	ldr	r2, [r3, #4]
   5f9a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f9ac:	ldr	r3, [r3, #4]
   5f9b0:	lsr	r3, r3, #1
   5f9b4:	add	r3, r2, r3
   5f9b8:	add	r3, r3, #1
   5f9bc:	str	r3, [fp, #-8]
   5f9c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f9c4:	ldr	r2, [r3, #4]
   5f9c8:	ldr	r3, [fp, #-8]
   5f9cc:	cmp	r2, r3
   5f9d0:	bcc	5f9ec <__assert_fail@plt+0x4d300>
   5f9d4:	bl	12404 <__errno_location@plt>
   5f9d8:	mov	r2, r0
   5f9dc:	mov	r3, #12
   5f9e0:	str	r3, [r2]
   5f9e4:	mov	r3, #0
   5f9e8:	b	5fb0c <__assert_fail@plt+0x4d420>
   5f9ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f9f0:	cmp	r3, #0
   5f9f4:	beq	5fa30 <__assert_fail@plt+0x4d344>
   5f9f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5f9fc:	mvn	r0, #0
   5fa00:	bl	63574 <__assert_fail@plt+0x50e88>
   5fa04:	mov	r3, r0
   5fa08:	mov	r2, r3
   5fa0c:	ldr	r3, [fp, #-8]
   5fa10:	cmp	r2, r3
   5fa14:	bcs	5fa30 <__assert_fail@plt+0x4d344>
   5fa18:	ldr	r3, [fp, #-8]
   5fa1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5fa20:	mul	r3, r2, r3
   5fa24:	str	r3, [fp, #-16]
   5fa28:	mov	r3, #1
   5fa2c:	b	5fa44 <__assert_fail@plt+0x4d358>
   5fa30:	ldr	r3, [fp, #-8]
   5fa34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5fa38:	mul	r3, r2, r3
   5fa3c:	str	r3, [fp, #-16]
   5fa40:	mov	r3, #0
   5fa44:	cmp	r3, #0
   5fa48:	beq	5fa54 <__assert_fail@plt+0x4d368>
   5fa4c:	mov	r3, #0
   5fa50:	b	5fb0c <__assert_fail@plt+0x4d420>
   5fa54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fa58:	ldr	r2, [r3, #8]
   5fa5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5fa60:	cmp	r2, r3
   5fa64:	bne	5fac0 <__assert_fail@plt+0x4d3d4>
   5fa68:	ldr	r3, [fp, #-16]
   5fa6c:	mov	r0, r3
   5fa70:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5fa74:	mov	r3, r0
   5fa78:	str	r3, [fp, #-12]
   5fa7c:	ldr	r3, [fp, #-12]
   5fa80:	cmp	r3, #0
   5fa84:	beq	5fadc <__assert_fail@plt+0x4d3f0>
   5fa88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fa8c:	ldr	r3, [r3, #8]
   5fa90:	cmp	r3, #0
   5fa94:	beq	5fadc <__assert_fail@plt+0x4d3f0>
   5fa98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fa9c:	ldr	r1, [r3, #8]
   5faa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5faa4:	ldr	r3, [r3]
   5faa8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5faac:	mul	r3, r2, r3
   5fab0:	mov	r2, r3
   5fab4:	ldr	r0, [fp, #-12]
   5fab8:	bl	120f8 <memcpy@plt>
   5fabc:	b	5fadc <__assert_fail@plt+0x4d3f0>
   5fac0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fac4:	ldr	r3, [r3, #8]
   5fac8:	ldr	r2, [fp, #-16]
   5facc:	mov	r1, r2
   5fad0:	mov	r0, r3
   5fad4:	bl	43d30 <__assert_fail@plt+0x31644>
   5fad8:	str	r0, [fp, #-12]
   5fadc:	ldr	r3, [fp, #-12]
   5fae0:	cmp	r3, #0
   5fae4:	bne	5faf0 <__assert_fail@plt+0x4d404>
   5fae8:	mov	r3, #0
   5faec:	b	5fb0c <__assert_fail@plt+0x4d420>
   5faf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5faf4:	ldr	r2, [fp, #-12]
   5faf8:	str	r2, [r3, #8]
   5fafc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fb00:	ldr	r2, [fp, #-8]
   5fb04:	str	r2, [r3, #4]
   5fb08:	mov	r3, #1
   5fb0c:	mov	r0, r3
   5fb10:	sub	sp, fp, #4
   5fb14:	pop	{fp, pc}
   5fb18:	push	{fp}		; (str fp, [sp, #-4]!)
   5fb1c:	add	fp, sp, #0
   5fb20:	mvn	r3, #0
   5fb24:	mov	r0, r3
   5fb28:	add	sp, fp, #0
   5fb2c:	pop	{fp}		; (ldr fp, [sp], #4)
   5fb30:	bx	lr
   5fb34:	push	{r4, fp, lr}
   5fb38:	add	fp, sp, #8
   5fb3c:	sub	sp, sp, #12
   5fb40:	str	r0, [fp, #-16]
   5fb44:	ldr	r3, [fp, #-16]
   5fb48:	ldr	r4, [r3, #4]
   5fb4c:	bl	5fb18 <__assert_fail@plt+0x4d42c>
   5fb50:	mov	r3, r0
   5fb54:	cmp	r4, r3
   5fb58:	moveq	r3, #1
   5fb5c:	movne	r3, #0
   5fb60:	uxtb	r3, r3
   5fb64:	mov	r0, r3
   5fb68:	sub	sp, fp, #8
   5fb6c:	pop	{r4, fp, pc}
   5fb70:	push	{fp, lr}
   5fb74:	add	fp, sp, #4
   5fb78:	sub	sp, sp, #32
   5fb7c:	str	r0, [fp, #-24]	; 0xffffffe8
   5fb80:	str	r1, [fp, #-28]	; 0xffffffe4
   5fb84:	str	r2, [fp, #-32]	; 0xffffffe0
   5fb88:	str	r3, [fp, #-36]	; 0xffffffdc
   5fb8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fb90:	bl	5fb34 <__assert_fail@plt+0x4d448>
   5fb94:	mov	r3, r0
   5fb98:	cmp	r3, #0
   5fb9c:	beq	5fba8 <__assert_fail@plt+0x4d4bc>
   5fba0:	mov	r3, #0
   5fba4:	b	5fca0 <__assert_fail@plt+0x4d5b4>
   5fba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fbac:	ldr	r3, [r3]
   5fbb0:	str	r3, [fp, #-8]
   5fbb4:	ldr	r3, [fp, #-8]
   5fbb8:	cmp	r3, #0
   5fbbc:	bne	5fc04 <__assert_fail@plt+0x4d518>
   5fbc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fbc4:	ldr	r2, [r3, #8]
   5fbc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5fbcc:	cmp	r2, r3
   5fbd0:	beq	5fbe4 <__assert_fail@plt+0x4d4f8>
   5fbd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fbd8:	ldr	r3, [r3, #8]
   5fbdc:	mov	r0, r3
   5fbe0:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5fbe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5fbe8:	mov	r2, #0
   5fbec:	str	r2, [r3]
   5fbf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5fbf4:	mov	r2, #0
   5fbf8:	str	r2, [r3, #4]
   5fbfc:	mov	r3, #1
   5fc00:	b	5fca0 <__assert_fail@plt+0x4d5b4>
   5fc04:	ldr	r3, [fp, #-8]
   5fc08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5fc0c:	mul	r3, r2, r3
   5fc10:	str	r3, [fp, #-12]
   5fc14:	ldr	r0, [fp, #-12]
   5fc18:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5fc1c:	mov	r3, r0
   5fc20:	str	r3, [fp, #-16]
   5fc24:	ldr	r3, [fp, #-16]
   5fc28:	cmp	r3, #0
   5fc2c:	beq	5fc9c <__assert_fail@plt+0x4d5b0>
   5fc30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fc34:	ldr	r3, [r3, #8]
   5fc38:	cmp	r3, #0
   5fc3c:	beq	5fc58 <__assert_fail@plt+0x4d56c>
   5fc40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fc44:	ldr	r3, [r3, #8]
   5fc48:	ldr	r2, [fp, #-12]
   5fc4c:	mov	r1, r3
   5fc50:	ldr	r0, [fp, #-16]
   5fc54:	bl	120f8 <memcpy@plt>
   5fc58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fc5c:	ldr	r2, [r3, #8]
   5fc60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5fc64:	cmp	r2, r3
   5fc68:	beq	5fc7c <__assert_fail@plt+0x4d590>
   5fc6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fc70:	ldr	r3, [r3, #8]
   5fc74:	mov	r0, r3
   5fc78:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   5fc7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5fc80:	ldr	r2, [fp, #-16]
   5fc84:	str	r2, [r3]
   5fc88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5fc8c:	ldr	r2, [fp, #-8]
   5fc90:	str	r2, [r3, #4]
   5fc94:	mov	r3, #1
   5fc98:	b	5fca0 <__assert_fail@plt+0x4d5b4>
   5fc9c:	mov	r3, #0
   5fca0:	mov	r0, r3
   5fca4:	sub	sp, fp, #4
   5fca8:	pop	{fp, pc}
   5fcac:	push	{fp, lr}
   5fcb0:	add	fp, sp, #4
   5fcb4:	sub	sp, sp, #24
   5fcb8:	str	r0, [fp, #-16]
   5fcbc:	str	r1, [fp, #-20]	; 0xffffffec
   5fcc0:	str	r2, [fp, #-24]	; 0xffffffe8
   5fcc4:	str	r3, [fp, #-28]	; 0xffffffe4
   5fcc8:	ldr	r3, [fp, #-16]
   5fccc:	ldr	r2, [r3, #4]
   5fcd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5fcd4:	cmp	r2, r3
   5fcd8:	bcc	5fcf0 <__assert_fail@plt+0x4d604>
   5fcdc:	ldr	r3, [fp, #-16]
   5fce0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5fce4:	str	r2, [r3]
   5fce8:	mov	r3, #1
   5fcec:	b	5fe2c <__assert_fail@plt+0x4d740>
   5fcf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5fcf4:	cmp	r3, #0
   5fcf8:	beq	5fd34 <__assert_fail@plt+0x4d648>
   5fcfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5fd00:	mvn	r0, #0
   5fd04:	bl	63574 <__assert_fail@plt+0x50e88>
   5fd08:	mov	r3, r0
   5fd0c:	mov	r2, r3
   5fd10:	ldr	r3, [fp, #-20]	; 0xffffffec
   5fd14:	cmp	r2, r3
   5fd18:	bcs	5fd34 <__assert_fail@plt+0x4d648>
   5fd1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5fd20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5fd24:	mul	r3, r2, r3
   5fd28:	str	r3, [fp, #-12]
   5fd2c:	mov	r3, #1
   5fd30:	b	5fd48 <__assert_fail@plt+0x4d65c>
   5fd34:	ldr	r3, [fp, #-20]	; 0xffffffec
   5fd38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5fd3c:	mul	r3, r2, r3
   5fd40:	str	r3, [fp, #-12]
   5fd44:	mov	r3, #0
   5fd48:	cmp	r3, #0
   5fd4c:	beq	5fd68 <__assert_fail@plt+0x4d67c>
   5fd50:	bl	12404 <__errno_location@plt>
   5fd54:	mov	r2, r0
   5fd58:	mov	r3, #12
   5fd5c:	str	r3, [r2]
   5fd60:	mov	r3, #0
   5fd64:	b	5fe2c <__assert_fail@plt+0x4d740>
   5fd68:	ldr	r3, [fp, #-16]
   5fd6c:	ldr	r2, [r3, #8]
   5fd70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fd74:	cmp	r2, r3
   5fd78:	bne	5fdd4 <__assert_fail@plt+0x4d6e8>
   5fd7c:	ldr	r3, [fp, #-12]
   5fd80:	mov	r0, r3
   5fd84:	bl	42ba8 <__assert_fail@plt+0x304bc>
   5fd88:	mov	r3, r0
   5fd8c:	str	r3, [fp, #-8]
   5fd90:	ldr	r3, [fp, #-8]
   5fd94:	cmp	r3, #0
   5fd98:	beq	5fdf0 <__assert_fail@plt+0x4d704>
   5fd9c:	ldr	r3, [fp, #-16]
   5fda0:	ldr	r3, [r3, #8]
   5fda4:	cmp	r3, #0
   5fda8:	beq	5fdf0 <__assert_fail@plt+0x4d704>
   5fdac:	ldr	r3, [fp, #-16]
   5fdb0:	ldr	r1, [r3, #8]
   5fdb4:	ldr	r3, [fp, #-16]
   5fdb8:	ldr	r3, [r3]
   5fdbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5fdc0:	mul	r3, r2, r3
   5fdc4:	mov	r2, r3
   5fdc8:	ldr	r0, [fp, #-8]
   5fdcc:	bl	120f8 <memcpy@plt>
   5fdd0:	b	5fdf0 <__assert_fail@plt+0x4d704>
   5fdd4:	ldr	r3, [fp, #-16]
   5fdd8:	ldr	r3, [r3, #8]
   5fddc:	ldr	r2, [fp, #-12]
   5fde0:	mov	r1, r2
   5fde4:	mov	r0, r3
   5fde8:	bl	43d30 <__assert_fail@plt+0x31644>
   5fdec:	str	r0, [fp, #-8]
   5fdf0:	ldr	r3, [fp, #-8]
   5fdf4:	cmp	r3, #0
   5fdf8:	bne	5fe04 <__assert_fail@plt+0x4d718>
   5fdfc:	mov	r3, #0
   5fe00:	b	5fe2c <__assert_fail@plt+0x4d740>
   5fe04:	ldr	r3, [fp, #-16]
   5fe08:	ldr	r2, [fp, #-8]
   5fe0c:	str	r2, [r3, #8]
   5fe10:	ldr	r3, [fp, #-16]
   5fe14:	ldr	r2, [fp, #-20]	; 0xffffffec
   5fe18:	str	r2, [r3, #4]
   5fe1c:	ldr	r3, [fp, #-16]
   5fe20:	ldr	r2, [fp, #-20]	; 0xffffffec
   5fe24:	str	r2, [r3]
   5fe28:	mov	r3, #1
   5fe2c:	mov	r0, r3
   5fe30:	sub	sp, fp, #4
   5fe34:	pop	{fp, pc}
   5fe38:	push	{fp, lr}
   5fe3c:	add	fp, sp, #4
   5fe40:	sub	sp, sp, #8
   5fe44:	str	r0, [fp, #-8]
   5fe48:	ldr	r1, [fp, #-8]
   5fe4c:	mov	r0, #0
   5fe50:	bl	120e0 <clock_gettime@plt>
   5fe54:	nop			; (mov r0, r0)
   5fe58:	sub	sp, fp, #4
   5fe5c:	pop	{fp, pc}
   5fe60:	push	{fp, lr}
   5fe64:	add	fp, sp, #4
   5fe68:	sub	sp, sp, #16
   5fe6c:	str	r0, [fp, #-16]
   5fe70:	sub	r3, fp, #12
   5fe74:	mov	r0, r3
   5fe78:	bl	5fe38 <__assert_fail@plt+0x4d74c>
   5fe7c:	ldr	r3, [fp, #-16]
   5fe80:	mov	r2, r3
   5fe84:	sub	r3, fp, #12
   5fe88:	ldm	r3, {r0, r1}
   5fe8c:	stm	r2, {r0, r1}
   5fe90:	ldr	r0, [fp, #-16]
   5fe94:	sub	sp, fp, #4
   5fe98:	pop	{fp, pc}
   5fe9c:	push	{fp, lr}
   5fea0:	add	fp, sp, #4
   5fea4:	sub	sp, sp, #272	; 0x110
   5fea8:	str	r0, [fp, #-272]	; 0xfffffef0
   5feac:	sub	r3, fp, #264	; 0x108
   5feb0:	ldr	r2, [pc, #116]	; 5ff2c <__assert_fail@plt+0x4d840>
   5feb4:	mov	r1, r3
   5feb8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   5febc:	bl	63514 <__assert_fail@plt+0x50e28>
   5fec0:	mov	r3, r0
   5fec4:	cmp	r3, #0
   5fec8:	beq	5fed4 <__assert_fail@plt+0x4d7e8>
   5fecc:	mov	r3, #0
   5fed0:	b	5ff20 <__assert_fail@plt+0x4d834>
   5fed4:	sub	r3, fp, #264	; 0x108
   5fed8:	ldr	r1, [pc, #80]	; 5ff30 <__assert_fail@plt+0x4d844>
   5fedc:	mov	r0, r3
   5fee0:	bl	11ffc <strcmp@plt>
   5fee4:	mov	r3, r0
   5fee8:	cmp	r3, #0
   5feec:	beq	5ff14 <__assert_fail@plt+0x4d828>
   5fef0:	sub	r3, fp, #264	; 0x108
   5fef4:	ldr	r1, [pc, #56]	; 5ff34 <__assert_fail@plt+0x4d848>
   5fef8:	mov	r0, r3
   5fefc:	bl	11ffc <strcmp@plt>
   5ff00:	mov	r3, r0
   5ff04:	cmp	r3, #0
   5ff08:	beq	5ff14 <__assert_fail@plt+0x4d828>
   5ff0c:	mov	r3, #1
   5ff10:	b	5ff18 <__assert_fail@plt+0x4d82c>
   5ff14:	mov	r3, #0
   5ff18:	and	r3, r3, #1
   5ff1c:	uxtb	r3, r3
   5ff20:	mov	r0, r3
   5ff24:	sub	sp, fp, #4
   5ff28:	pop	{fp, pc}
   5ff2c:	andeq	r0, r0, r1, lsl #2
   5ff30:	andeq	fp, r6, r4, lsr r0
   5ff34:	andeq	fp, r6, r8, lsr r0
   5ff38:	push	{fp}		; (str fp, [sp, #-4]!)
   5ff3c:	add	fp, sp, #0
   5ff40:	sub	sp, sp, #20
   5ff44:	str	r0, [fp, #-16]
   5ff48:	str	r1, [fp, #-20]	; 0xffffffec
   5ff4c:	ldr	r3, [fp, #-16]
   5ff50:	mov	r2, #1
   5ff54:	strb	r2, [r3, #28]
   5ff58:	ldr	r3, [fp, #-16]
   5ff5c:	mov	r2, #0
   5ff60:	str	r2, [r3, #20]
   5ff64:	ldr	r3, [fp, #-16]
   5ff68:	mov	r2, #0
   5ff6c:	str	r2, [r3, #24]
   5ff70:	mov	r3, #0
   5ff74:	str	r3, [fp, #-8]
   5ff78:	b	5ff98 <__assert_fail@plt+0x4d8ac>
   5ff7c:	ldr	r3, [fp, #-16]
   5ff80:	ldr	r2, [fp, #-8]
   5ff84:	ldr	r1, [fp, #-20]	; 0xffffffec
   5ff88:	str	r1, [r3, r2, lsl #2]
   5ff8c:	ldr	r3, [fp, #-8]
   5ff90:	add	r3, r3, #1
   5ff94:	str	r3, [fp, #-8]
   5ff98:	ldr	r3, [fp, #-8]
   5ff9c:	cmp	r3, #3
   5ffa0:	ble	5ff7c <__assert_fail@plt+0x4d890>
   5ffa4:	ldr	r3, [fp, #-16]
   5ffa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   5ffac:	str	r2, [r3, #16]
   5ffb0:	nop			; (mov r0, r0)
   5ffb4:	add	sp, fp, #0
   5ffb8:	pop	{fp}		; (ldr fp, [sp], #4)
   5ffbc:	bx	lr
   5ffc0:	push	{fp}		; (str fp, [sp, #-4]!)
   5ffc4:	add	fp, sp, #0
   5ffc8:	sub	sp, sp, #12
   5ffcc:	str	r0, [fp, #-8]
   5ffd0:	ldr	r3, [fp, #-8]
   5ffd4:	ldrb	r3, [r3, #28]
   5ffd8:	mov	r0, r3
   5ffdc:	add	sp, fp, #0
   5ffe0:	pop	{fp}		; (ldr fp, [sp], #4)
   5ffe4:	bx	lr
   5ffe8:	push	{fp}		; (str fp, [sp, #-4]!)
   5ffec:	add	fp, sp, #0
   5fff0:	sub	sp, sp, #20
   5fff4:	str	r0, [fp, #-16]
   5fff8:	str	r1, [fp, #-20]	; 0xffffffec
   5fffc:	ldr	r3, [fp, #-16]
   60000:	ldr	r3, [r3, #20]
   60004:	ldr	r2, [fp, #-16]
   60008:	ldrb	r2, [r2, #28]
   6000c:	eor	r2, r2, #1
   60010:	uxtb	r2, r2
   60014:	add	r3, r3, r2
   60018:	and	r3, r3, #3
   6001c:	str	r3, [fp, #-8]
   60020:	ldr	r3, [fp, #-16]
   60024:	ldr	r2, [fp, #-8]
   60028:	ldr	r3, [r3, r2, lsl #2]
   6002c:	str	r3, [fp, #-12]
   60030:	ldr	r3, [fp, #-16]
   60034:	ldr	r2, [fp, #-8]
   60038:	ldr	r1, [fp, #-20]	; 0xffffffec
   6003c:	str	r1, [r3, r2, lsl #2]
   60040:	ldr	r3, [fp, #-16]
   60044:	ldr	r2, [fp, #-8]
   60048:	str	r2, [r3, #20]
   6004c:	ldr	r3, [fp, #-16]
   60050:	ldr	r2, [r3, #24]
   60054:	ldr	r3, [fp, #-8]
   60058:	cmp	r2, r3
   6005c:	bne	60088 <__assert_fail@plt+0x4d99c>
   60060:	ldr	r3, [fp, #-16]
   60064:	ldr	r3, [r3, #24]
   60068:	ldr	r2, [fp, #-16]
   6006c:	ldrb	r2, [r2, #28]
   60070:	eor	r2, r2, #1
   60074:	uxtb	r2, r2
   60078:	add	r3, r3, r2
   6007c:	and	r2, r3, #3
   60080:	ldr	r3, [fp, #-16]
   60084:	str	r2, [r3, #24]
   60088:	ldr	r3, [fp, #-16]
   6008c:	mov	r2, #0
   60090:	strb	r2, [r3, #28]
   60094:	ldr	r3, [fp, #-12]
   60098:	mov	r0, r3
   6009c:	add	sp, fp, #0
   600a0:	pop	{fp}		; (ldr fp, [sp], #4)
   600a4:	bx	lr
   600a8:	push	{fp, lr}
   600ac:	add	fp, sp, #4
   600b0:	sub	sp, sp, #16
   600b4:	str	r0, [fp, #-16]
   600b8:	ldr	r0, [fp, #-16]
   600bc:	bl	5ffc0 <__assert_fail@plt+0x4d8d4>
   600c0:	mov	r3, r0
   600c4:	cmp	r3, #0
   600c8:	beq	600d0 <__assert_fail@plt+0x4d9e4>
   600cc:	bl	12698 <abort@plt>
   600d0:	ldr	r3, [fp, #-16]
   600d4:	ldr	r2, [r3, #20]
   600d8:	ldr	r3, [fp, #-16]
   600dc:	ldr	r3, [r3, r2, lsl #2]
   600e0:	str	r3, [fp, #-8]
   600e4:	ldr	r3, [fp, #-16]
   600e8:	ldr	r2, [r3, #20]
   600ec:	ldr	r3, [fp, #-16]
   600f0:	ldr	r1, [r3, #16]
   600f4:	ldr	r3, [fp, #-16]
   600f8:	str	r1, [r3, r2, lsl #2]
   600fc:	ldr	r3, [fp, #-16]
   60100:	ldr	r2, [r3, #20]
   60104:	ldr	r3, [fp, #-16]
   60108:	ldr	r3, [r3, #24]
   6010c:	cmp	r2, r3
   60110:	bne	60124 <__assert_fail@plt+0x4da38>
   60114:	ldr	r3, [fp, #-16]
   60118:	mov	r2, #1
   6011c:	strb	r2, [r3, #28]
   60120:	b	6013c <__assert_fail@plt+0x4da50>
   60124:	ldr	r3, [fp, #-16]
   60128:	ldr	r3, [r3, #20]
   6012c:	add	r3, r3, #3
   60130:	and	r2, r3, #3
   60134:	ldr	r3, [fp, #-16]
   60138:	str	r2, [r3, #20]
   6013c:	ldr	r3, [fp, #-8]
   60140:	mov	r0, r3
   60144:	sub	sp, fp, #4
   60148:	pop	{fp, pc}
   6014c:	push	{fp, lr}
   60150:	add	fp, sp, #4
   60154:	bl	12404 <__errno_location@plt>
   60158:	mov	r2, r0
   6015c:	mov	r3, #12
   60160:	str	r3, [r2]
   60164:	mov	r3, #0
   60168:	mov	r0, r3
   6016c:	pop	{fp, pc}
   60170:	push	{fp, lr}
   60174:	add	fp, sp, #4
   60178:	sub	sp, sp, #8
   6017c:	str	r0, [fp, #-8]
   60180:	ldr	r3, [fp, #-8]
   60184:	mov	r0, r3
   60188:	bl	42ba8 <__assert_fail@plt+0x304bc>
   6018c:	mov	r3, r0
   60190:	mov	r0, r3
   60194:	sub	sp, fp, #4
   60198:	pop	{fp, pc}
   6019c:	push	{fp, lr}
   601a0:	add	fp, sp, #4
   601a4:	sub	sp, sp, #8
   601a8:	str	r0, [fp, #-8]
   601ac:	str	r1, [fp, #-12]
   601b0:	ldr	r3, [fp, #-12]
   601b4:	cmp	r3, #0
   601b8:	moveq	r3, #1
   601bc:	movne	r3, #0
   601c0:	uxtb	r3, r3
   601c4:	mov	r2, r3
   601c8:	ldr	r3, [fp, #-12]
   601cc:	orr	r3, r2, r3
   601d0:	mov	r1, r3
   601d4:	ldr	r0, [fp, #-8]
   601d8:	bl	43d30 <__assert_fail@plt+0x31644>
   601dc:	mov	r3, r0
   601e0:	mov	r0, r3
   601e4:	sub	sp, fp, #4
   601e8:	pop	{fp, pc}
   601ec:	push	{fp, lr}
   601f0:	add	fp, sp, #4
   601f4:	sub	sp, sp, #8
   601f8:	str	r0, [fp, #-8]
   601fc:	str	r1, [fp, #-12]
   60200:	ldr	r3, [fp, #-8]
   60204:	ldr	r2, [fp, #-12]
   60208:	mov	r1, r2
   6020c:	mov	r0, r3
   60210:	bl	3ecdc <__assert_fail@plt+0x2c5f0>
   60214:	mov	r3, r0
   60218:	mov	r0, r3
   6021c:	sub	sp, fp, #4
   60220:	pop	{fp, pc}
   60224:	push	{fp, lr}
   60228:	add	fp, sp, #4
   6022c:	sub	sp, sp, #16
   60230:	str	r0, [fp, #-8]
   60234:	str	r1, [fp, #-12]
   60238:	str	r2, [fp, #-16]
   6023c:	ldr	r3, [fp, #-12]
   60240:	cmp	r3, #0
   60244:	beq	60254 <__assert_fail@plt+0x4db68>
   60248:	ldr	r3, [fp, #-16]
   6024c:	cmp	r3, #0
   60250:	bne	60264 <__assert_fail@plt+0x4db78>
   60254:	mov	r3, #1
   60258:	str	r3, [fp, #-16]
   6025c:	ldr	r3, [fp, #-16]
   60260:	str	r3, [fp, #-12]
   60264:	ldr	r3, [fp, #-12]
   60268:	ldr	r2, [fp, #-16]
   6026c:	mov	r1, r3
   60270:	ldr	r0, [fp, #-8]
   60274:	bl	43e00 <__assert_fail@plt+0x31714>
   60278:	mov	r3, r0
   6027c:	mov	r0, r3
   60280:	sub	sp, fp, #4
   60284:	pop	{fp, pc}
   60288:	push	{fp, lr}
   6028c:	add	fp, sp, #4
   60290:	sub	sp, sp, #8
   60294:	mov	r0, #14
   60298:	bl	12560 <nl_langinfo@plt>
   6029c:	str	r0, [fp, #-8]
   602a0:	ldr	r3, [fp, #-8]
   602a4:	cmp	r3, #0
   602a8:	bne	602b4 <__assert_fail@plt+0x4dbc8>
   602ac:	ldr	r3, [pc, #40]	; 602dc <__assert_fail@plt+0x4dbf0>
   602b0:	str	r3, [fp, #-8]
   602b4:	ldr	r3, [fp, #-8]
   602b8:	ldrb	r3, [r3]
   602bc:	cmp	r3, #0
   602c0:	bne	602cc <__assert_fail@plt+0x4dbe0>
   602c4:	ldr	r3, [pc, #20]	; 602e0 <__assert_fail@plt+0x4dbf4>
   602c8:	str	r3, [fp, #-8]
   602cc:	ldr	r3, [fp, #-8]
   602d0:	mov	r0, r3
   602d4:	sub	sp, fp, #4
   602d8:	pop	{fp, pc}
   602dc:	andeq	fp, r6, r0, asr #32
   602e0:	andeq	fp, r6, r4, asr #32
   602e4:	push	{fp, lr}
   602e8:	add	fp, sp, #4
   602ec:	sub	sp, sp, #48	; 0x30
   602f0:	str	r0, [fp, #-48]	; 0xffffffd0
   602f4:	mov	r3, #15
   602f8:	str	r3, [fp, #-8]
   602fc:	ldr	r3, [fp, #-8]
   60300:	add	r3, r3, #1
   60304:	str	r3, [fp, #-12]
   60308:	ldr	r3, [fp, #-12]
   6030c:	cmp	r3, #0
   60310:	bge	6034c <__assert_fail@plt+0x4dc60>
   60314:	ldr	r3, [fp, #-48]	; 0xffffffd0
   60318:	cmp	r3, #0
   6031c:	bge	6033c <__assert_fail@plt+0x4dc50>
   60320:	ldr	r2, [fp, #-12]
   60324:	ldr	r3, [fp, #-48]	; 0xffffffd0
   60328:	add	r3, r2, r3
   6032c:	cmp	r3, #0
   60330:	bge	6033c <__assert_fail@plt+0x4dc50>
   60334:	mov	r3, #1
   60338:	b	60340 <__assert_fail@plt+0x4dc54>
   6033c:	mov	r3, #0
   60340:	and	r3, r3, #1
   60344:	uxtb	r3, r3
   60348:	b	60370 <__assert_fail@plt+0x4dc84>
   6034c:	ldr	r2, [fp, #-12]
   60350:	mvn	r3, #-2147483648	; 0x80000000
   60354:	sub	r3, r3, r2
   60358:	mov	r2, r3
   6035c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   60360:	cmp	r2, r3
   60364:	movcc	r3, #1
   60368:	movcs	r3, #0
   6036c:	uxtb	r3, r3
   60370:	cmp	r3, #0
   60374:	beq	60390 <__assert_fail@plt+0x4dca4>
   60378:	ldr	r2, [fp, #-12]
   6037c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   60380:	add	r3, r2, r3
   60384:	str	r3, [fp, #-36]	; 0xffffffdc
   60388:	mov	r3, #0
   6038c:	b	603a4 <__assert_fail@plt+0x4dcb8>
   60390:	ldr	r2, [fp, #-12]
   60394:	ldr	r3, [fp, #-48]	; 0xffffffd0
   60398:	add	r3, r2, r3
   6039c:	str	r3, [fp, #-36]	; 0xffffffdc
   603a0:	mov	r3, #1
   603a4:	cmp	r3, #0
   603a8:	beq	60478 <__assert_fail@plt+0x4dd8c>
   603ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   603b0:	mov	r2, #0
   603b4:	str	r3, [fp, #-40]	; 0xffffffd8
   603b8:	mov	r3, r2
   603bc:	and	r3, r3, #1
   603c0:	uxtb	r3, r3
   603c4:	eor	r3, r3, #1
   603c8:	uxtb	r3, r3
   603cc:	cmp	r3, #0
   603d0:	beq	60478 <__assert_fail@plt+0x4dd8c>
   603d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   603d8:	mov	r0, r3
   603dc:	bl	12308 <malloc@plt>
   603e0:	mov	r3, r0
   603e4:	str	r3, [fp, #-16]
   603e8:	ldr	r3, [fp, #-16]
   603ec:	cmp	r3, #0
   603f0:	beq	60478 <__assert_fail@plt+0x4dd8c>
   603f4:	ldr	r3, [fp, #-16]
   603f8:	str	r3, [fp, #-20]	; 0xffffffec
   603fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   60400:	cmn	r3, #9
   60404:	bls	60418 <__assert_fail@plt+0x4dd2c>
   60408:	ldr	r3, [fp, #-20]	; 0xffffffec
   6040c:	add	r3, r3, #8
   60410:	str	r3, [fp, #-44]	; 0xffffffd4
   60414:	b	60424 <__assert_fail@plt+0x4dd38>
   60418:	ldr	r3, [fp, #-20]	; 0xffffffec
   6041c:	add	r3, r3, #8
   60420:	str	r3, [fp, #-44]	; 0xffffffd4
   60424:	ldr	r3, [fp, #-8]
   60428:	mvn	r2, r3
   6042c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   60430:	and	r2, r2, r3
   60434:	ldr	r3, [fp, #-20]	; 0xffffffec
   60438:	sub	r3, r2, r3
   6043c:	add	r3, r3, #8
   60440:	str	r3, [fp, #-24]	; 0xffffffe8
   60444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60448:	ldr	r2, [fp, #-16]
   6044c:	add	r3, r2, r3
   60450:	str	r3, [fp, #-28]	; 0xffffffe4
   60454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   60458:	str	r3, [fp, #-32]	; 0xffffffe0
   6045c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   60460:	sub	r3, r3, #1
   60464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   60468:	uxtb	r2, r2
   6046c:	strb	r2, [r3]
   60470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   60474:	b	6047c <__assert_fail@plt+0x4dd90>
   60478:	mov	r3, #0
   6047c:	mov	r0, r3
   60480:	sub	sp, fp, #4
   60484:	pop	{fp, pc}
   60488:	push	{fp, lr}
   6048c:	add	fp, sp, #4
   60490:	sub	sp, sp, #16
   60494:	str	r0, [fp, #-16]
   60498:	ldr	r3, [fp, #-16]
   6049c:	and	r3, r3, #7
   604a0:	cmp	r3, #0
   604a4:	beq	604ac <__assert_fail@plt+0x4ddc0>
   604a8:	bl	12698 <abort@plt>
   604ac:	ldr	r3, [fp, #-16]
   604b0:	and	r3, r3, #8
   604b4:	cmp	r3, #0
   604b8:	beq	604e0 <__assert_fail@plt+0x4ddf4>
   604bc:	ldr	r3, [fp, #-16]
   604c0:	sub	r3, r3, #1
   604c4:	ldrb	r3, [r3]
   604c8:	rsb	r3, r3, #0
   604cc:	ldr	r2, [fp, #-16]
   604d0:	add	r3, r2, r3
   604d4:	str	r3, [fp, #-8]
   604d8:	ldr	r0, [fp, #-8]
   604dc:	bl	3f6c8 <__assert_fail@plt+0x2cfdc>
   604e0:	nop			; (mov r0, r0)
   604e4:	sub	sp, fp, #4
   604e8:	pop	{fp, pc}
   604ec:	push	{fp, lr}
   604f0:	add	fp, sp, #4
   604f4:	sub	sp, sp, #16
   604f8:	str	r0, [fp, #-16]
   604fc:	ldr	r0, [fp, #-16]
   60500:	bl	12074 <wcwidth@plt>
   60504:	str	r0, [fp, #-8]
   60508:	ldr	r3, [fp, #-8]
   6050c:	cmp	r3, #0
   60510:	bge	60534 <__assert_fail@plt+0x4de48>
   60514:	ldr	r0, [fp, #-16]
   60518:	bl	121d0 <iswcntrl@plt>
   6051c:	mov	r3, r0
   60520:	cmp	r3, #0
   60524:	moveq	r3, #1
   60528:	movne	r3, #0
   6052c:	uxtb	r3, r3
   60530:	b	60538 <__assert_fail@plt+0x4de4c>
   60534:	ldr	r3, [fp, #-8]
   60538:	mov	r0, r3
   6053c:	sub	sp, fp, #4
   60540:	pop	{fp, pc}
   60544:	push	{fp, lr}
   60548:	add	fp, sp, #4
   6054c:	sub	sp, sp, #8
   60550:	str	r0, [fp, #-8]
   60554:	str	r1, [fp, #-12]
   60558:	ldr	r3, [fp, #-12]
   6055c:	ldr	r2, [r3]
   60560:	ldr	r3, [fp, #-12]
   60564:	add	r3, r3, #16
   60568:	cmp	r2, r3
   6056c:	bne	605a4 <__assert_fail@plt+0x4deb8>
   60570:	ldr	r3, [fp, #-8]
   60574:	add	r0, r3, #16
   60578:	ldr	r3, [fp, #-12]
   6057c:	add	r1, r3, #16
   60580:	ldr	r3, [fp, #-12]
   60584:	ldr	r3, [r3, #4]
   60588:	mov	r2, r3
   6058c:	bl	120f8 <memcpy@plt>
   60590:	ldr	r3, [fp, #-8]
   60594:	add	r2, r3, #16
   60598:	ldr	r3, [fp, #-8]
   6059c:	str	r2, [r3]
   605a0:	b	605b4 <__assert_fail@plt+0x4dec8>
   605a4:	ldr	r3, [fp, #-12]
   605a8:	ldr	r2, [r3]
   605ac:	ldr	r3, [fp, #-8]
   605b0:	str	r2, [r3]
   605b4:	ldr	r3, [fp, #-12]
   605b8:	ldr	r2, [r3, #4]
   605bc:	ldr	r3, [fp, #-8]
   605c0:	str	r2, [r3, #4]
   605c4:	ldr	r3, [fp, #-12]
   605c8:	ldrb	r2, [r3, #8]
   605cc:	ldr	r3, [fp, #-8]
   605d0:	strb	r2, [r3, #8]
   605d4:	ldr	r3, [fp, #-8]
   605d8:	ldrb	r3, [r3, #8]
   605dc:	cmp	r3, #0
   605e0:	beq	605f4 <__assert_fail@plt+0x4df08>
   605e4:	ldr	r3, [fp, #-12]
   605e8:	ldr	r2, [r3, #12]
   605ec:	ldr	r3, [fp, #-8]
   605f0:	str	r2, [r3, #12]
   605f4:	nop			; (mov r0, r0)
   605f8:	sub	sp, fp, #4
   605fc:	pop	{fp, pc}
   60600:	push	{fp}		; (str fp, [sp, #-4]!)
   60604:	add	fp, sp, #0
   60608:	sub	sp, sp, #12
   6060c:	mov	r3, r0
   60610:	strb	r3, [fp, #-5]
   60614:	ldrb	r3, [fp, #-5]
   60618:	lsr	r3, r3, #5
   6061c:	uxtb	r3, r3
   60620:	mov	r2, r3
   60624:	ldr	r3, [pc, #48]	; 6065c <__assert_fail@plt+0x4df70>
   60628:	ldr	r2, [r3, r2, lsl #2]
   6062c:	ldrb	r3, [fp, #-5]
   60630:	and	r3, r3, #31
   60634:	lsr	r3, r2, r3
   60638:	and	r3, r3, #1
   6063c:	cmp	r3, #0
   60640:	movne	r3, #1
   60644:	moveq	r3, #0
   60648:	uxtb	r3, r3
   6064c:	mov	r0, r3
   60650:	add	sp, fp, #0
   60654:	pop	{fp}		; (ldr fp, [sp], #4)
   60658:	bx	lr
   6065c:	andeq	fp, r6, ip, asr #32
   60660:	push	{fp, lr}
   60664:	add	fp, sp, #4
   60668:	sub	sp, sp, #72	; 0x48
   6066c:	str	r0, [fp, #-72]	; 0xffffffb8
   60670:	bl	12254 <__ctype_get_mb_cur_max@plt>
   60674:	mov	r3, r0
   60678:	cmp	r3, #1
   6067c:	bls	60728 <__assert_fail@plt+0x4e03c>
   60680:	mov	r3, #0
   60684:	str	r3, [fp, #-8]
   60688:	ldr	r3, [fp, #-72]	; 0xffffffb8
   6068c:	str	r3, [fp, #-48]	; 0xffffffd0
   60690:	mov	r3, #0
   60694:	strb	r3, [fp, #-64]	; 0xffffffc0
   60698:	sub	r3, fp, #64	; 0x40
   6069c:	add	r3, r3, #4
   606a0:	mov	r2, #8
   606a4:	mov	r1, #0
   606a8:	mov	r0, r3
   606ac:	bl	12434 <memset@plt>
   606b0:	mov	r3, #0
   606b4:	strb	r3, [fp, #-52]	; 0xffffffcc
   606b8:	b	606e0 <__assert_fail@plt+0x4dff4>
   606bc:	ldr	r3, [fp, #-8]
   606c0:	add	r3, r3, #1
   606c4:	str	r3, [fp, #-8]
   606c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   606cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   606d0:	add	r3, r2, r3
   606d4:	str	r3, [fp, #-48]	; 0xffffffd0
   606d8:	mov	r3, #0
   606dc:	strb	r3, [fp, #-52]	; 0xffffffcc
   606e0:	sub	r3, fp, #64	; 0x40
   606e4:	mov	r0, r3
   606e8:	bl	2f184 <__assert_fail@plt+0x1ca98>
   606ec:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   606f0:	eor	r3, r3, #1
   606f4:	uxtb	r3, r3
   606f8:	cmp	r3, #0
   606fc:	bne	6070c <__assert_fail@plt+0x4e020>
   60700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   60704:	cmp	r3, #0
   60708:	beq	60714 <__assert_fail@plt+0x4e028>
   6070c:	mov	r3, #1
   60710:	b	60718 <__assert_fail@plt+0x4e02c>
   60714:	mov	r3, #0
   60718:	cmp	r3, #0
   6071c:	bne	606bc <__assert_fail@plt+0x4dfd0>
   60720:	ldr	r3, [fp, #-8]
   60724:	b	60734 <__assert_fail@plt+0x4e048>
   60728:	ldr	r0, [fp, #-72]	; 0xffffffb8
   6072c:	bl	123bc <strlen@plt>
   60730:	mov	r3, r0
   60734:	mov	r0, r3
   60738:	sub	sp, fp, #4
   6073c:	pop	{fp, pc}
   60740:	push	{r4, fp, lr}
   60744:	add	fp, sp, #8
   60748:	sub	sp, sp, #20
   6074c:	str	r0, [fp, #-16]
   60750:	str	r1, [fp, #-20]	; 0xffffffec
   60754:	str	r2, [fp, #-24]	; 0xffffffe8
   60758:	b	6078c <__assert_fail@plt+0x4e0a0>
   6075c:	ldr	r2, [fp, #-16]
   60760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60764:	add	r4, r2, r3
   60768:	ldr	r2, [fp, #-20]	; 0xffffffec
   6076c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60770:	add	r3, r2, r3
   60774:	ldrb	r3, [r3]
   60778:	mov	r0, r3
   6077c:	bl	12110 <tolower@plt>
   60780:	mov	r3, r0
   60784:	uxtb	r3, r3
   60788:	strb	r3, [r4]
   6078c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60790:	sub	r2, r3, #1
   60794:	str	r2, [fp, #-24]	; 0xffffffe8
   60798:	cmp	r3, #0
   6079c:	bne	6075c <__assert_fail@plt+0x4e070>
   607a0:	ldr	r3, [fp, #-16]
   607a4:	mov	r0, r3
   607a8:	sub	sp, fp, #8
   607ac:	pop	{r4, fp, pc}
   607b0:	push	{r4, fp, lr}
   607b4:	add	fp, sp, #8
   607b8:	sub	sp, sp, #20
   607bc:	str	r0, [fp, #-16]
   607c0:	str	r1, [fp, #-20]	; 0xffffffec
   607c4:	str	r2, [fp, #-24]	; 0xffffffe8
   607c8:	b	607fc <__assert_fail@plt+0x4e110>
   607cc:	ldr	r2, [fp, #-16]
   607d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   607d4:	add	r4, r2, r3
   607d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   607dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   607e0:	add	r3, r2, r3
   607e4:	ldrb	r3, [r3]
   607e8:	mov	r0, r3
   607ec:	bl	1253c <toupper@plt>
   607f0:	mov	r3, r0
   607f4:	uxtb	r3, r3
   607f8:	strb	r3, [r4]
   607fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60800:	sub	r2, r3, #1
   60804:	str	r2, [fp, #-24]	; 0xffffffe8
   60808:	cmp	r3, #0
   6080c:	bne	607cc <__assert_fail@plt+0x4e0e0>
   60810:	ldr	r3, [fp, #-16]
   60814:	mov	r0, r3
   60818:	sub	sp, fp, #8
   6081c:	pop	{r4, fp, pc}
   60820:	push	{fp}		; (str fp, [sp, #-4]!)
   60824:	add	fp, sp, #0
   60828:	sub	sp, sp, #20
   6082c:	str	r0, [fp, #-16]
   60830:	str	r1, [fp, #-20]	; 0xffffffec
   60834:	ldr	r3, [pc, #92]	; 60898 <__assert_fail@plt+0x4e1ac>
   60838:	str	r3, [fp, #-8]
   6083c:	ldr	r2, [fp, #-16]
   60840:	ldr	r3, [fp, #-20]	; 0xffffffec
   60844:	sub	r3, r2, r3
   60848:	add	r2, r3, #4
   6084c:	ldr	r3, [fp, #-8]
   60850:	add	r2, r2, r3
   60854:	ldr	r3, [pc, #64]	; 6089c <__assert_fail@plt+0x4e1b0>
   60858:	smull	r1, r3, r3, r2
   6085c:	add	r3, r3, r2
   60860:	asr	r1, r3, #2
   60864:	asr	r3, r2, #31
   60868:	sub	r1, r1, r3
   6086c:	mov	r3, r1
   60870:	lsl	r3, r3, #3
   60874:	sub	r3, r3, r1
   60878:	sub	r1, r2, r3
   6087c:	ldr	r3, [fp, #-16]
   60880:	sub	r3, r3, r1
   60884:	add	r3, r3, #3
   60888:	mov	r0, r3
   6088c:	add	sp, fp, #0
   60890:	pop	{fp}		; (ldr fp, [sp], #4)
   60894:	bx	lr
   60898:	andeq	r0, r0, sl, ror r1
   6089c:	subls	r2, r9, #-1828716544	; 0x93000000
   608a0:	push	{fp, lr}
   608a4:	add	fp, sp, #4
   608a8:	sub	sp, sp, #48	; 0x30
   608ac:	str	r0, [fp, #-16]
   608b0:	str	r1, [fp, #-20]	; 0xffffffec
   608b4:	str	r2, [fp, #-24]	; 0xffffffe8
   608b8:	str	r3, [fp, #-28]	; 0xffffffe4
   608bc:	mov	r3, #0
   608c0:	strb	r3, [fp, #-5]
   608c4:	ldr	r3, [fp, #8]
   608c8:	str	r3, [sp, #20]
   608cc:	ldr	r3, [fp, #4]
   608d0:	str	r3, [sp, #16]
   608d4:	sub	r3, fp, #5
   608d8:	str	r3, [sp, #12]
   608dc:	mvn	r3, #0
   608e0:	str	r3, [sp, #8]
   608e4:	mov	r3, #0
   608e8:	str	r3, [sp, #4]
   608ec:	mov	r3, #0
   608f0:	str	r3, [sp]
   608f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   608f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   608fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   60900:	ldr	r0, [fp, #-16]
   60904:	bl	60918 <__assert_fail@plt+0x4e22c>
   60908:	mov	r3, r0
   6090c:	mov	r0, r3
   60910:	sub	sp, fp, #4
   60914:	pop	{fp, pc}
   60918:	push	{fp, lr}
   6091c:	add	fp, sp, #4
   60920:	sub	sp, sp, #1456	; 0x5b0
   60924:	sub	sp, sp, #8
   60928:	str	r0, [fp, #-1432]	; 0xfffffa68
   6092c:	str	r1, [fp, #-1436]	; 0xfffffa64
   60930:	str	r2, [fp, #-1440]	; 0xfffffa60
   60934:	str	r3, [fp, #-1444]	; 0xfffffa5c
   60938:	bl	12404 <__errno_location@plt>
   6093c:	mov	r3, r0
   60940:	ldr	r3, [r3]
   60944:	str	r3, [fp, #-116]	; 0xffffff8c
   60948:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6094c:	ldr	r3, [r3, #8]
   60950:	str	r3, [fp, #-8]
   60954:	mov	r3, #0
   60958:	str	r3, [fp, #-16]
   6095c:	ldr	r3, [fp, #-1432]	; 0xfffffa68
   60960:	str	r3, [fp, #-20]	; 0xffffffec
   60964:	mov	r3, #0
   60968:	str	r3, [fp, #-12]
   6096c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   60970:	ldr	r3, [r3, #40]	; 0x28
   60974:	str	r3, [fp, #-12]
   60978:	ldr	r3, [fp, #-12]
   6097c:	cmp	r3, #0
   60980:	bne	6098c <__assert_fail@plt+0x4e2a0>
   60984:	ldr	r3, [pc, #3856]	; 6189c <__assert_fail@plt+0x4f1b0>
   60988:	str	r3, [fp, #-12]
   6098c:	ldr	r3, [fp, #-8]
   60990:	cmp	r3, #12
   60994:	ble	609a8 <__assert_fail@plt+0x4e2bc>
   60998:	ldr	r3, [fp, #-8]
   6099c:	sub	r3, r3, #12
   609a0:	str	r3, [fp, #-8]
   609a4:	b	609bc <__assert_fail@plt+0x4e2d0>
   609a8:	ldr	r3, [fp, #-8]
   609ac:	cmp	r3, #0
   609b0:	bne	609bc <__assert_fail@plt+0x4e2d0>
   609b4:	mov	r3, #12
   609b8:	str	r3, [fp, #-8]
   609bc:	ldr	r3, [fp, #-1440]	; 0xfffffa60
   609c0:	str	r3, [fp, #-24]	; 0xffffffe8
   609c4:	b	632ec <__assert_fail@plt+0x50c00>
   609c8:	mov	r3, #0
   609cc:	str	r3, [fp, #-28]	; 0xffffffe4
   609d0:	mov	r3, #0
   609d4:	str	r3, [fp, #-36]	; 0xffffffdc
   609d8:	mov	r3, #0
   609dc:	strb	r3, [fp, #-61]	; 0xffffffc3
   609e0:	ldrb	r3, [fp, #4]
   609e4:	strb	r3, [fp, #-62]	; 0xffffffc2
   609e8:	mov	r3, #0
   609ec:	strb	r3, [fp, #-69]	; 0xffffffbb
   609f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   609f4:	ldrb	r3, [r3]
   609f8:	cmp	r3, #37	; 0x25
   609fc:	beq	60b34 <__assert_fail@plt+0x4e448>
   60a00:	mov	r3, #1
   60a04:	str	r3, [fp, #-368]	; 0xfffffe90
   60a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   60a0c:	cmp	r3, #45	; 0x2d
   60a10:	beq	60a28 <__assert_fail@plt+0x4e33c>
   60a14:	ldr	r3, [fp, #12]
   60a18:	cmp	r3, #0
   60a1c:	blt	60a28 <__assert_fail@plt+0x4e33c>
   60a20:	ldr	r3, [fp, #12]
   60a24:	b	60a2c <__assert_fail@plt+0x4e340>
   60a28:	mov	r3, #0
   60a2c:	str	r3, [fp, #-372]	; 0xfffffe8c
   60a30:	ldr	r2, [fp, #-368]	; 0xfffffe90
   60a34:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   60a38:	cmp	r2, r3
   60a3c:	movcs	r3, r2
   60a40:	movcc	r3, r3
   60a44:	str	r3, [fp, #-376]	; 0xfffffe88
   60a48:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   60a4c:	ldr	r3, [fp, #-16]
   60a50:	sub	r2, r2, r3
   60a54:	ldr	r3, [fp, #-376]	; 0xfffffe88
   60a58:	cmp	r2, r3
   60a5c:	bhi	60a78 <__assert_fail@plt+0x4e38c>
   60a60:	bl	12404 <__errno_location@plt>
   60a64:	mov	r2, r0
   60a68:	mov	r3, #34	; 0x22
   60a6c:	str	r3, [r2]
   60a70:	mov	r3, #0
   60a74:	b	63334 <__assert_fail@plt+0x50c48>
   60a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   60a7c:	cmp	r3, #0
   60a80:	beq	60b20 <__assert_fail@plt+0x4e434>
   60a84:	ldr	r2, [fp, #-368]	; 0xfffffe90
   60a88:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   60a8c:	cmp	r2, r3
   60a90:	bcs	60b00 <__assert_fail@plt+0x4e414>
   60a94:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   60a98:	ldr	r3, [fp, #-368]	; 0xfffffe90
   60a9c:	sub	r3, r2, r3
   60aa0:	str	r3, [fp, #-380]	; 0xfffffe84
   60aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   60aa8:	cmp	r3, #48	; 0x30
   60aac:	beq	60abc <__assert_fail@plt+0x4e3d0>
   60ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   60ab4:	cmp	r3, #43	; 0x2b
   60ab8:	bne	60ae0 <__assert_fail@plt+0x4e3f4>
   60abc:	ldr	r2, [fp, #-380]	; 0xfffffe84
   60ac0:	mov	r1, #48	; 0x30
   60ac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   60ac8:	bl	12434 <memset@plt>
   60acc:	ldr	r2, [fp, #-20]	; 0xffffffec
   60ad0:	ldr	r3, [fp, #-380]	; 0xfffffe84
   60ad4:	add	r3, r2, r3
   60ad8:	str	r3, [fp, #-20]	; 0xffffffec
   60adc:	b	60b00 <__assert_fail@plt+0x4e414>
   60ae0:	ldr	r2, [fp, #-380]	; 0xfffffe84
   60ae4:	mov	r1, #32
   60ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   60aec:	bl	12434 <memset@plt>
   60af0:	ldr	r2, [fp, #-20]	; 0xffffffec
   60af4:	ldr	r3, [fp, #-380]	; 0xfffffe84
   60af8:	add	r3, r2, r3
   60afc:	str	r3, [fp, #-20]	; 0xffffffec
   60b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b04:	ldrb	r2, [r3]
   60b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   60b0c:	strb	r2, [r3]
   60b10:	ldr	r2, [fp, #-20]	; 0xffffffec
   60b14:	ldr	r3, [fp, #-368]	; 0xfffffe90
   60b18:	add	r3, r2, r3
   60b1c:	str	r3, [fp, #-20]	; 0xffffffec
   60b20:	ldr	r2, [fp, #-16]
   60b24:	ldr	r3, [fp, #-376]	; 0xfffffe88
   60b28:	add	r3, r2, r3
   60b2c:	str	r3, [fp, #-16]
   60b30:	b	632d8 <__assert_fail@plt+0x50bec>
   60b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b38:	str	r3, [fp, #-120]	; 0xffffff88
   60b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b40:	add	r3, r3, #1
   60b44:	str	r3, [fp, #-24]	; 0xffffffe8
   60b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b4c:	ldrb	r3, [r3]
   60b50:	sub	r3, r3, #35	; 0x23
   60b54:	cmp	r3, #60	; 0x3c
   60b58:	ldrls	pc, [pc, r3, lsl #2]
   60b5c:	b	60c7c <__assert_fail@plt+0x4e590>
   60b60:	andeq	r0, r6, r0, ror ip
   60b64:	andeq	r0, r6, ip, ror ip
   60b68:	andeq	r0, r6, ip, ror ip
   60b6c:	andeq	r0, r6, ip, ror ip
   60b70:	andeq	r0, r6, ip, ror ip
   60b74:	andeq	r0, r6, ip, ror ip
   60b78:	andeq	r0, r6, ip, ror ip
   60b7c:	andeq	r0, r6, ip, ror ip
   60b80:	andeq	r0, r6, r4, asr ip
   60b84:	andeq	r0, r6, ip, ror ip
   60b88:	andeq	r0, r6, r4, asr ip
   60b8c:	andeq	r0, r6, ip, ror ip
   60b90:	andeq	r0, r6, ip, ror ip
   60b94:	andeq	r0, r6, r4, asr ip
   60b98:	andeq	r0, r6, ip, ror ip
   60b9c:	andeq	r0, r6, ip, ror ip
   60ba0:	andeq	r0, r6, ip, ror ip
   60ba4:	andeq	r0, r6, ip, ror ip
   60ba8:	andeq	r0, r6, ip, ror ip
   60bac:	andeq	r0, r6, ip, ror ip
   60bb0:	andeq	r0, r6, ip, ror ip
   60bb4:	andeq	r0, r6, ip, ror ip
   60bb8:	andeq	r0, r6, ip, ror ip
   60bbc:	andeq	r0, r6, ip, ror ip
   60bc0:	andeq	r0, r6, ip, ror ip
   60bc4:	andeq	r0, r6, ip, ror ip
   60bc8:	andeq	r0, r6, ip, ror ip
   60bcc:	andeq	r0, r6, ip, ror ip
   60bd0:	andeq	r0, r6, ip, ror ip
   60bd4:	andeq	r0, r6, ip, ror ip
   60bd8:	andeq	r0, r6, ip, ror ip
   60bdc:	andeq	r0, r6, ip, ror ip
   60be0:	andeq	r0, r6, ip, ror ip
   60be4:	andeq	r0, r6, ip, ror ip
   60be8:	andeq	r0, r6, ip, ror ip
   60bec:	andeq	r0, r6, ip, ror ip
   60bf0:	andeq	r0, r6, ip, ror ip
   60bf4:	andeq	r0, r6, ip, ror ip
   60bf8:	andeq	r0, r6, ip, ror ip
   60bfc:	andeq	r0, r6, ip, ror ip
   60c00:	andeq	r0, r6, ip, ror ip
   60c04:	andeq	r0, r6, ip, ror ip
   60c08:	andeq	r0, r6, ip, ror ip
   60c0c:	andeq	r0, r6, ip, ror ip
   60c10:	andeq	r0, r6, ip, ror ip
   60c14:	andeq	r0, r6, ip, ror ip
   60c18:	andeq	r0, r6, ip, ror ip
   60c1c:	andeq	r0, r6, ip, ror ip
   60c20:	andeq	r0, r6, ip, ror ip
   60c24:	andeq	r0, r6, ip, ror ip
   60c28:	andeq	r0, r6, ip, ror ip
   60c2c:	andeq	r0, r6, ip, ror ip
   60c30:	andeq	r0, r6, ip, ror ip
   60c34:	andeq	r0, r6, ip, ror ip
   60c38:	andeq	r0, r6, ip, ror ip
   60c3c:	andeq	r0, r6, ip, ror ip
   60c40:	andeq	r0, r6, ip, ror ip
   60c44:	andeq	r0, r6, ip, ror ip
   60c48:	andeq	r0, r6, ip, ror ip
   60c4c:	andeq	r0, r6, r4, ror #24
   60c50:	andeq	r0, r6, r4, asr ip
   60c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60c58:	ldrb	r3, [r3]
   60c5c:	str	r3, [fp, #-28]	; 0xffffffe4
   60c60:	b	60c9c <__assert_fail@plt+0x4e5b0>
   60c64:	mov	r3, #1
   60c68:	strb	r3, [fp, #-62]	; 0xffffffc2
   60c6c:	b	60c9c <__assert_fail@plt+0x4e5b0>
   60c70:	mov	r3, #1
   60c74:	strb	r3, [fp, #-69]	; 0xffffffbb
   60c78:	b	60c9c <__assert_fail@plt+0x4e5b0>
   60c7c:	nop			; (mov r0, r0)
   60c80:	nop			; (mov r0, r0)
   60c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60c88:	ldrb	r3, [r3]
   60c8c:	sub	r3, r3, #48	; 0x30
   60c90:	cmp	r3, #9
   60c94:	bhi	60e54 <__assert_fail@plt+0x4e768>
   60c98:	b	60ca0 <__assert_fail@plt+0x4e5b4>
   60c9c:	b	60b3c <__assert_fail@plt+0x4e450>
   60ca0:	mov	r3, #0
   60ca4:	str	r3, [fp, #12]
   60ca8:	ldr	r3, [fp, #12]
   60cac:	cmp	r3, #0
   60cb0:	bge	60cf4 <__assert_fail@plt+0x4e608>
   60cb4:	ldr	r3, [fp, #12]
   60cb8:	cmn	r3, #1
   60cbc:	beq	60ce4 <__assert_fail@plt+0x4e5f8>
   60cc0:	ldr	r3, [fp, #12]
   60cc4:	mov	r1, r3
   60cc8:	mov	r0, #-2147483648	; 0x80000000
   60ccc:	bl	63780 <__assert_fail@plt+0x51094>
   60cd0:	mov	r3, r0
   60cd4:	cmp	r3, #9
   60cd8:	bgt	60ce4 <__assert_fail@plt+0x4e5f8>
   60cdc:	mov	r3, #1
   60ce0:	b	60ce8 <__assert_fail@plt+0x4e5fc>
   60ce4:	mov	r3, #0
   60ce8:	and	r3, r3, #1
   60cec:	uxtb	r3, r3
   60cf0:	b	60d0c <__assert_fail@plt+0x4e620>
   60cf4:	ldr	r3, [fp, #12]
   60cf8:	ldr	r2, [pc, #2976]	; 618a0 <__assert_fail@plt+0x4f1b4>
   60cfc:	cmp	r3, r2
   60d00:	movgt	r3, #1
   60d04:	movle	r3, #0
   60d08:	uxtb	r3, r3
   60d0c:	cmp	r3, #0
   60d10:	beq	60d34 <__assert_fail@plt+0x4e648>
   60d14:	ldr	r3, [fp, #12]
   60d18:	mov	r2, r3
   60d1c:	mov	r3, r2
   60d20:	lsl	r3, r3, #2
   60d24:	add	r3, r3, r2
   60d28:	lsl	r3, r3, #1
   60d2c:	str	r3, [fp, #12]
   60d30:	b	60e2c <__assert_fail@plt+0x4e740>
   60d34:	ldr	r3, [fp, #12]
   60d38:	mov	r2, r3
   60d3c:	mov	r3, r2
   60d40:	lsl	r3, r3, #2
   60d44:	add	r3, r3, r2
   60d48:	lsl	r3, r3, #1
   60d4c:	str	r3, [fp, #12]
   60d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60d54:	ldrb	r3, [r3]
   60d58:	sub	r3, r3, #48	; 0x30
   60d5c:	cmp	r3, #0
   60d60:	bge	60d88 <__assert_fail@plt+0x4e69c>
   60d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60d68:	ldrb	r3, [r3]
   60d6c:	rsb	r2, r3, #-2147483600	; 0x80000030
   60d70:	ldr	r3, [fp, #12]
   60d74:	cmp	r2, r3
   60d78:	movgt	r3, #1
   60d7c:	movle	r3, #0
   60d80:	uxtb	r3, r3
   60d84:	b	60de4 <__assert_fail@plt+0x4e6f8>
   60d88:	ldr	r3, [fp, #12]
   60d8c:	cmp	r3, #0
   60d90:	bge	60dbc <__assert_fail@plt+0x4e6d0>
   60d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60d98:	ldrb	r3, [r3]
   60d9c:	sub	r2, r3, #48	; 0x30
   60da0:	ldr	r3, [fp, #12]
   60da4:	rsb	r3, r3, #-2147483648	; 0x80000000
   60da8:	cmp	r2, r3
   60dac:	movlt	r3, #1
   60db0:	movge	r3, #0
   60db4:	uxtb	r3, r3
   60db8:	b	60de4 <__assert_fail@plt+0x4e6f8>
   60dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60dc0:	ldrb	r3, [r3]
   60dc4:	sub	r2, r3, #48	; 0x30
   60dc8:	mvn	r3, #-2147483648	; 0x80000000
   60dcc:	sub	r3, r3, r2
   60dd0:	ldr	r2, [fp, #12]
   60dd4:	cmp	r3, r2
   60dd8:	movlt	r3, #1
   60ddc:	movge	r3, #0
   60de0:	uxtb	r3, r3
   60de4:	cmp	r3, #0
   60de8:	beq	60e0c <__assert_fail@plt+0x4e720>
   60dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60df0:	ldrb	r3, [r3]
   60df4:	mov	r2, r3
   60df8:	ldr	r3, [fp, #12]
   60dfc:	add	r3, r2, r3
   60e00:	sub	r3, r3, #48	; 0x30
   60e04:	str	r3, [fp, #12]
   60e08:	b	60e2c <__assert_fail@plt+0x4e740>
   60e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60e10:	ldrb	r3, [r3]
   60e14:	mov	r2, r3
   60e18:	ldr	r3, [fp, #12]
   60e1c:	add	r3, r2, r3
   60e20:	sub	r3, r3, #48	; 0x30
   60e24:	str	r3, [fp, #12]
   60e28:	b	60e34 <__assert_fail@plt+0x4e748>
   60e2c:	mvn	r3, #-2147483648	; 0x80000000
   60e30:	str	r3, [fp, #12]
   60e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60e38:	add	r3, r3, #1
   60e3c:	str	r3, [fp, #-24]	; 0xffffffe8
   60e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60e44:	ldrb	r3, [r3]
   60e48:	sub	r3, r3, #48	; 0x30
   60e4c:	cmp	r3, #9
   60e50:	bls	60ca8 <__assert_fail@plt+0x4e5bc>
   60e54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60e58:	ldrb	r3, [r3]
   60e5c:	cmp	r3, #69	; 0x45
   60e60:	beq	60e6c <__assert_fail@plt+0x4e780>
   60e64:	cmp	r3, #79	; 0x4f
   60e68:	bne	60e84 <__assert_fail@plt+0x4e798>
   60e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60e70:	add	r2, r3, #1
   60e74:	str	r2, [fp, #-24]	; 0xffffffe8
   60e78:	ldrb	r3, [r3]
   60e7c:	str	r3, [fp, #-32]	; 0xffffffe0
   60e80:	b	60e90 <__assert_fail@plt+0x4e7a4>
   60e84:	mov	r3, #0
   60e88:	str	r3, [fp, #-32]	; 0xffffffe0
   60e8c:	nop			; (mov r0, r0)
   60e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60e94:	ldrb	r3, [r3]
   60e98:	str	r3, [fp, #-76]	; 0xffffffb4
   60e9c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   60ea0:	cmp	r3, #122	; 0x7a
   60ea4:	ldrls	pc, [pc, r3, lsl #2]
   60ea8:	b	63148 <__assert_fail@plt+0x50a5c>
   60eac:	andeq	r3, r6, r4, lsl #1
   60eb0:	andeq	r3, r6, r8, asr #2
   60eb4:	andeq	r3, r6, r8, asr #2
   60eb8:	andeq	r3, r6, r8, asr #2
   60ebc:	andeq	r3, r6, r8, asr #2
   60ec0:	andeq	r3, r6, r8, asr #2
   60ec4:	andeq	r3, r6, r8, asr #2
   60ec8:	andeq	r3, r6, r8, asr #2
   60ecc:	andeq	r3, r6, r8, asr #2
   60ed0:	andeq	r3, r6, r8, asr #2
   60ed4:	andeq	r3, r6, r8, asr #2
   60ed8:	andeq	r3, r6, r8, asr #2
   60edc:	andeq	r3, r6, r8, asr #2
   60ee0:	andeq	r3, r6, r8, asr #2
   60ee4:	andeq	r3, r6, r8, asr #2
   60ee8:	andeq	r3, r6, r8, asr #2
   60eec:	andeq	r3, r6, r8, asr #2
   60ef0:	andeq	r3, r6, r8, asr #2
   60ef4:	andeq	r3, r6, r8, asr #2
   60ef8:	andeq	r3, r6, r8, asr #2
   60efc:	andeq	r3, r6, r8, asr #2
   60f00:	andeq	r3, r6, r8, asr #2
   60f04:	andeq	r3, r6, r8, asr #2
   60f08:	andeq	r3, r6, r8, asr #2
   60f0c:	andeq	r3, r6, r8, asr #2
   60f10:	andeq	r3, r6, r8, asr #2
   60f14:	andeq	r3, r6, r8, asr #2
   60f18:	andeq	r3, r6, r8, asr #2
   60f1c:	andeq	r3, r6, r8, asr #2
   60f20:	andeq	r3, r6, r8, asr #2
   60f24:	andeq	r3, r6, r8, asr #2
   60f28:	andeq	r3, r6, r8, asr #2
   60f2c:	andeq	r3, r6, r8, asr #2
   60f30:	andeq	r3, r6, r8, asr #2
   60f34:	andeq	r3, r6, r8, asr #2
   60f38:	andeq	r3, r6, r8, asr #2
   60f3c:	andeq	r3, r6, r8, asr #2
   60f40:	muleq	r6, r8, r0
   60f44:	andeq	r3, r6, r8, asr #2
   60f48:	andeq	r3, r6, r8, asr #2
   60f4c:	andeq	r3, r6, r8, asr #2
   60f50:	andeq	r3, r6, r8, asr #2
   60f54:	andeq	r3, r6, r8, asr #2
   60f58:	andeq	r3, r6, r8, asr #2
   60f5c:	andeq	r3, r6, r8, asr #2
   60f60:	andeq	r3, r6, r8, asr #2
   60f64:	andeq	r3, r6, r8, asr #2
   60f68:	andeq	r3, r6, r8, asr #2
   60f6c:	andeq	r3, r6, r8, asr #2
   60f70:	andeq	r3, r6, r8, asr #2
   60f74:	andeq	r3, r6, r8, asr #2
   60f78:	andeq	r3, r6, r8, asr #2
   60f7c:	andeq	r3, r6, r8, asr #2
   60f80:	andeq	r3, r6, r8, asr #2
   60f84:	andeq	r3, r6, r8, asr #2
   60f88:	andeq	r3, r6, r8, asr #2
   60f8c:	andeq	r3, r6, r8, asr #2
   60f90:	andeq	r3, r6, r8, asr #2
   60f94:	andeq	r2, r6, ip, lsr #28
   60f98:	andeq	r3, r6, r8, asr #2
   60f9c:	andeq	r3, r6, r8, asr #2
   60fa0:	andeq	r3, r6, r8, asr #2
   60fa4:	andeq	r3, r6, r8, asr #2
   60fa8:	andeq	r3, r6, r8, asr #2
   60fac:	andeq	r3, r6, r8, asr #2
   60fb0:	andeq	r1, r6, ip, lsl #4
   60fb4:	andeq	r1, r6, r4, ror #4
   60fb8:	andeq	r1, r6, r0, lsl #14
   60fbc:			; <UNDEFINED> instruction: 0x000617bc
   60fc0:	andeq	r3, r6, r8, asr #2
   60fc4:	andeq	r1, r6, r0, lsr #27
   60fc8:	strdeq	r2, [r6], -r4
   60fcc:	andeq	r1, r6, r4, lsl #28
   60fd0:	andeq	r1, r6, r8, lsr #28
   60fd4:	andeq	r3, r6, r8, asr #2
   60fd8:	andeq	r3, r6, r8, asr #2
   60fdc:	andeq	r3, r6, r8, asr #2
   60fe0:	andeq	r1, r6, ip, asr #29
   60fe4:	andeq	r1, r6, r0, lsr pc
   60fe8:	andeq	r3, r6, r8, asr #2
   60fec:	andeq	r2, r6, r4, asr #8
   60ff0:	andeq	r3, r6, r8, asr #2
   60ff4:			; <UNDEFINED> instruction: 0x000624b0
   60ff8:			; <UNDEFINED> instruction: 0x000624bc
   60ffc:	andeq	r2, r6, r4, lsr #12
   61000:	andeq	r2, r6, r8, lsr #15
   61004:	strdeq	r2, [r6], -r4
   61008:	andeq	r2, r6, ip, lsl fp
   6100c:	andeq	r2, r6, r4, lsl r6
   61010:			; <UNDEFINED> instruction: 0x00062bb8
   61014:	muleq	r6, r8, ip
   61018:	andeq	r3, r6, r8, asr #2
   6101c:	andeq	r3, r6, r8, asr #2
   61020:	andeq	r3, r6, r8, asr #2
   61024:	andeq	r3, r6, r8, asr #2
   61028:	andeq	r3, r6, r8, asr #2
   6102c:	andeq	r3, r6, r8, asr #2
   61030:	andeq	r1, r6, r0, ror #3
   61034:	andeq	r1, r6, r8, lsr r2
   61038:	muleq	r6, r0, r2
   6103c:	ldrdeq	r1, [r6], -r4
   61040:	strdeq	r1, [r6], -r8
   61044:	andeq	r3, r6, r8, asr #2
   61048:	strdeq	r2, [r6], -r4
   6104c:	andeq	r1, r6, r8, lsr r2
   61050:	andeq	r3, r6, r8, asr #2
   61054:	andeq	r1, r6, ip, lsl #29
   61058:	andeq	r1, r6, r8, asr #28
   6105c:	andeq	r1, r6, ip, ror #28
   61060:	strdeq	r1, [r6], -r0
   61064:	andeq	r2, r6, r4, lsl r3
   61068:	andeq	r3, r6, r8, asr #2
   6106c:	andeq	r2, r6, r4, asr r4
   61070:	andeq	r2, r6, r4, ror r4
   61074:	andeq	r1, r6, r0, ror #8
   61078:	andeq	r2, r6, r0, ror #9
   6107c:	andeq	r2, r6, r0, lsr r6
   61080:	andeq	r2, r6, r0, ror #14
   61084:	andeq	r3, r6, r8, asr #2
   61088:	muleq	r6, r4, fp
   6108c:	andeq	r1, r6, ip, lsr #15
   61090:	andeq	r2, r6, ip, lsl #24
   61094:	andeq	r2, r6, r8, lsl #29
   61098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   6109c:	sub	r2, r3, #1
   610a0:	ldr	r3, [fp, #-120]	; 0xffffff88
   610a4:	cmp	r2, r3
   610a8:	bne	63080 <__assert_fail@plt+0x50994>
   610ac:	mov	r3, #1
   610b0:	str	r3, [fp, #-124]	; 0xffffff84
   610b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   610b8:	cmp	r3, #45	; 0x2d
   610bc:	beq	610d4 <__assert_fail@plt+0x4e9e8>
   610c0:	ldr	r3, [fp, #12]
   610c4:	cmp	r3, #0
   610c8:	blt	610d4 <__assert_fail@plt+0x4e9e8>
   610cc:	ldr	r3, [fp, #12]
   610d0:	b	610d8 <__assert_fail@plt+0x4e9ec>
   610d4:	mov	r3, #0
   610d8:	str	r3, [fp, #-128]	; 0xffffff80
   610dc:	ldr	r2, [fp, #-124]	; 0xffffff84
   610e0:	ldr	r3, [fp, #-128]	; 0xffffff80
   610e4:	cmp	r2, r3
   610e8:	movcs	r3, r2
   610ec:	movcc	r3, r3
   610f0:	str	r3, [fp, #-132]	; 0xffffff7c
   610f4:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   610f8:	ldr	r3, [fp, #-16]
   610fc:	sub	r2, r2, r3
   61100:	ldr	r3, [fp, #-132]	; 0xffffff7c
   61104:	cmp	r2, r3
   61108:	bhi	61124 <__assert_fail@plt+0x4ea38>
   6110c:	bl	12404 <__errno_location@plt>
   61110:	mov	r2, r0
   61114:	mov	r3, #34	; 0x22
   61118:	str	r3, [r2]
   6111c:	mov	r3, #0
   61120:	b	63334 <__assert_fail@plt+0x50c48>
   61124:	ldr	r3, [fp, #-20]	; 0xffffffec
   61128:	cmp	r3, #0
   6112c:	beq	611cc <__assert_fail@plt+0x4eae0>
   61130:	ldr	r2, [fp, #-124]	; 0xffffff84
   61134:	ldr	r3, [fp, #-128]	; 0xffffff80
   61138:	cmp	r2, r3
   6113c:	bcs	611ac <__assert_fail@plt+0x4eac0>
   61140:	ldr	r2, [fp, #-128]	; 0xffffff80
   61144:	ldr	r3, [fp, #-124]	; 0xffffff84
   61148:	sub	r3, r2, r3
   6114c:	str	r3, [fp, #-136]	; 0xffffff78
   61150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61154:	cmp	r3, #48	; 0x30
   61158:	beq	61168 <__assert_fail@plt+0x4ea7c>
   6115c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61160:	cmp	r3, #43	; 0x2b
   61164:	bne	6118c <__assert_fail@plt+0x4eaa0>
   61168:	ldr	r2, [fp, #-136]	; 0xffffff78
   6116c:	mov	r1, #48	; 0x30
   61170:	ldr	r0, [fp, #-20]	; 0xffffffec
   61174:	bl	12434 <memset@plt>
   61178:	ldr	r2, [fp, #-20]	; 0xffffffec
   6117c:	ldr	r3, [fp, #-136]	; 0xffffff78
   61180:	add	r3, r2, r3
   61184:	str	r3, [fp, #-20]	; 0xffffffec
   61188:	b	611ac <__assert_fail@plt+0x4eac0>
   6118c:	ldr	r2, [fp, #-136]	; 0xffffff78
   61190:	mov	r1, #32
   61194:	ldr	r0, [fp, #-20]	; 0xffffffec
   61198:	bl	12434 <memset@plt>
   6119c:	ldr	r2, [fp, #-20]	; 0xffffffec
   611a0:	ldr	r3, [fp, #-136]	; 0xffffff78
   611a4:	add	r3, r2, r3
   611a8:	str	r3, [fp, #-20]	; 0xffffffec
   611ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   611b0:	ldrb	r2, [r3]
   611b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   611b8:	strb	r2, [r3]
   611bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   611c0:	ldr	r3, [fp, #-124]	; 0xffffff84
   611c4:	add	r3, r2, r3
   611c8:	str	r3, [fp, #-20]	; 0xffffffec
   611cc:	ldr	r2, [fp, #-16]
   611d0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   611d4:	add	r3, r2, r3
   611d8:	str	r3, [fp, #-16]
   611dc:	b	632d8 <__assert_fail@plt+0x50bec>
   611e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   611e4:	cmp	r3, #0
   611e8:	bne	63094 <__assert_fail@plt+0x509a8>
   611ec:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   611f0:	cmp	r3, #0
   611f4:	beq	61468 <__assert_fail@plt+0x4ed7c>
   611f8:	mov	r3, #1
   611fc:	strb	r3, [fp, #-62]	; 0xffffffc2
   61200:	mov	r3, #0
   61204:	strb	r3, [fp, #-61]	; 0xffffffc3
   61208:	b	61468 <__assert_fail@plt+0x4ed7c>
   6120c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61210:	cmp	r3, #0
   61214:	bne	6309c <__assert_fail@plt+0x509b0>
   61218:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   6121c:	cmp	r3, #0
   61220:	beq	61470 <__assert_fail@plt+0x4ed84>
   61224:	mov	r3, #1
   61228:	strb	r3, [fp, #-62]	; 0xffffffc2
   6122c:	mov	r3, #0
   61230:	strb	r3, [fp, #-61]	; 0xffffffc3
   61234:	b	61470 <__assert_fail@plt+0x4ed84>
   61238:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   6123c:	cmp	r3, #0
   61240:	beq	61254 <__assert_fail@plt+0x4eb68>
   61244:	mov	r3, #1
   61248:	strb	r3, [fp, #-62]	; 0xffffffc2
   6124c:	mov	r3, #0
   61250:	strb	r3, [fp, #-61]	; 0xffffffc3
   61254:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61258:	cmp	r3, #69	; 0x45
   6125c:	bne	61478 <__assert_fail@plt+0x4ed8c>
   61260:	b	63148 <__assert_fail@plt+0x50a5c>
   61264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61268:	cmp	r3, #69	; 0x45
   6126c:	beq	630a4 <__assert_fail@plt+0x509b8>
   61270:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   61274:	cmp	r3, #0
   61278:	beq	61480 <__assert_fail@plt+0x4ed94>
   6127c:	mov	r3, #1
   61280:	strb	r3, [fp, #-62]	; 0xffffffc2
   61284:	mov	r3, #0
   61288:	strb	r3, [fp, #-61]	; 0xffffffc3
   6128c:	b	61480 <__assert_fail@plt+0x4ed94>
   61290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61294:	cmp	r3, #79	; 0x4f
   61298:	bne	61488 <__assert_fail@plt+0x4ed9c>
   6129c:	b	63148 <__assert_fail@plt+0x50a5c>
   612a0:	mvn	r3, #0
   612a4:	str	r3, [fp, #-80]	; 0xffffffb0
   612a8:	ldr	r3, [fp, #24]
   612ac:	str	r3, [sp, #20]
   612b0:	ldr	r3, [fp, #20]
   612b4:	str	r3, [sp, #16]
   612b8:	ldr	r3, [fp, #16]
   612bc:	str	r3, [sp, #12]
   612c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   612c4:	str	r3, [sp, #8]
   612c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   612cc:	str	r3, [sp, #4]
   612d0:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   612d4:	str	r3, [sp]
   612d8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   612dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   612e0:	mvn	r1, #0
   612e4:	mov	r0, #0
   612e8:	bl	60918 <__assert_fail@plt+0x4e22c>
   612ec:	str	r0, [fp, #-140]	; 0xffffff74
   612f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   612f4:	str	r3, [fp, #-144]	; 0xffffff70
   612f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   612fc:	cmp	r3, #45	; 0x2d
   61300:	beq	61318 <__assert_fail@plt+0x4ec2c>
   61304:	ldr	r3, [fp, #12]
   61308:	cmp	r3, #0
   6130c:	blt	61318 <__assert_fail@plt+0x4ec2c>
   61310:	ldr	r3, [fp, #12]
   61314:	b	6131c <__assert_fail@plt+0x4ec30>
   61318:	mov	r3, #0
   6131c:	str	r3, [fp, #-148]	; 0xffffff6c
   61320:	ldr	r2, [fp, #-144]	; 0xffffff70
   61324:	ldr	r3, [fp, #-148]	; 0xffffff6c
   61328:	cmp	r2, r3
   6132c:	movcs	r3, r2
   61330:	movcc	r3, r3
   61334:	str	r3, [fp, #-152]	; 0xffffff68
   61338:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   6133c:	ldr	r3, [fp, #-16]
   61340:	sub	r2, r2, r3
   61344:	ldr	r3, [fp, #-152]	; 0xffffff68
   61348:	cmp	r2, r3
   6134c:	bhi	61368 <__assert_fail@plt+0x4ec7c>
   61350:	bl	12404 <__errno_location@plt>
   61354:	mov	r2, r0
   61358:	mov	r3, #34	; 0x22
   6135c:	str	r3, [r2]
   61360:	mov	r3, #0
   61364:	b	63334 <__assert_fail@plt+0x50c48>
   61368:	ldr	r3, [fp, #-20]	; 0xffffffec
   6136c:	cmp	r3, #0
   61370:	beq	6144c <__assert_fail@plt+0x4ed60>
   61374:	ldr	r2, [fp, #-144]	; 0xffffff70
   61378:	ldr	r3, [fp, #-148]	; 0xffffff6c
   6137c:	cmp	r2, r3
   61380:	bcs	613f0 <__assert_fail@plt+0x4ed04>
   61384:	ldr	r2, [fp, #-148]	; 0xffffff6c
   61388:	ldr	r3, [fp, #-144]	; 0xffffff70
   6138c:	sub	r3, r2, r3
   61390:	str	r3, [fp, #-156]	; 0xffffff64
   61394:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61398:	cmp	r3, #48	; 0x30
   6139c:	beq	613ac <__assert_fail@plt+0x4ecc0>
   613a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   613a4:	cmp	r3, #43	; 0x2b
   613a8:	bne	613d0 <__assert_fail@plt+0x4ece4>
   613ac:	ldr	r2, [fp, #-156]	; 0xffffff64
   613b0:	mov	r1, #48	; 0x30
   613b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   613b8:	bl	12434 <memset@plt>
   613bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   613c0:	ldr	r3, [fp, #-156]	; 0xffffff64
   613c4:	add	r3, r2, r3
   613c8:	str	r3, [fp, #-20]	; 0xffffffec
   613cc:	b	613f0 <__assert_fail@plt+0x4ed04>
   613d0:	ldr	r2, [fp, #-156]	; 0xffffff64
   613d4:	mov	r1, #32
   613d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   613dc:	bl	12434 <memset@plt>
   613e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   613e4:	ldr	r3, [fp, #-156]	; 0xffffff64
   613e8:	add	r3, r2, r3
   613ec:	str	r3, [fp, #-20]	; 0xffffffec
   613f0:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   613f4:	ldr	r3, [fp, #-16]
   613f8:	sub	r1, r2, r3
   613fc:	ldr	r3, [fp, #24]
   61400:	str	r3, [sp, #20]
   61404:	ldr	r3, [fp, #20]
   61408:	str	r3, [sp, #16]
   6140c:	ldr	r3, [fp, #16]
   61410:	str	r3, [sp, #12]
   61414:	ldr	r3, [fp, #-80]	; 0xffffffb0
   61418:	str	r3, [sp, #8]
   6141c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61420:	str	r3, [sp, #4]
   61424:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   61428:	str	r3, [sp]
   6142c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61430:	ldr	r2, [fp, #-56]	; 0xffffffc8
   61434:	ldr	r0, [fp, #-20]	; 0xffffffec
   61438:	bl	60918 <__assert_fail@plt+0x4e22c>
   6143c:	ldr	r2, [fp, #-20]	; 0xffffffec
   61440:	ldr	r3, [fp, #-144]	; 0xffffff70
   61444:	add	r3, r2, r3
   61448:	str	r3, [fp, #-20]	; 0xffffffec
   6144c:	ldr	r2, [fp, #-16]
   61450:	ldr	r3, [fp, #-152]	; 0xffffff68
   61454:	add	r3, r2, r3
   61458:	str	r3, [fp, #-16]
   6145c:	b	632d8 <__assert_fail@plt+0x50bec>
   61460:	nop			; (mov r0, r0)
   61464:	b	614c4 <__assert_fail@plt+0x4edd8>
   61468:	nop			; (mov r0, r0)
   6146c:	b	614c4 <__assert_fail@plt+0x4edd8>
   61470:	nop			; (mov r0, r0)
   61474:	b	614c4 <__assert_fail@plt+0x4edd8>
   61478:	nop			; (mov r0, r0)
   6147c:	b	614c4 <__assert_fail@plt+0x4edd8>
   61480:	nop			; (mov r0, r0)
   61484:	b	614c4 <__assert_fail@plt+0x4edd8>
   61488:	nop			; (mov r0, r0)
   6148c:	b	614c4 <__assert_fail@plt+0x4edd8>
   61490:	nop			; (mov r0, r0)
   61494:	b	614c4 <__assert_fail@plt+0x4edd8>
   61498:	nop			; (mov r0, r0)
   6149c:	b	614c4 <__assert_fail@plt+0x4edd8>
   614a0:	nop			; (mov r0, r0)
   614a4:	b	614c4 <__assert_fail@plt+0x4edd8>
   614a8:	nop			; (mov r0, r0)
   614ac:	b	614c4 <__assert_fail@plt+0x4edd8>
   614b0:	nop			; (mov r0, r0)
   614b4:	b	614c4 <__assert_fail@plt+0x4edd8>
   614b8:	nop			; (mov r0, r0)
   614bc:	b	614c4 <__assert_fail@plt+0x4edd8>
   614c0:	nop			; (mov r0, r0)
   614c4:	sub	r3, fp, #404	; 0x194
   614c8:	str	r3, [fp, #-84]	; 0xffffffac
   614cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   614d0:	add	r2, r3, #1
   614d4:	str	r2, [fp, #-84]	; 0xffffffac
   614d8:	mov	r2, #32
   614dc:	strb	r2, [r3]
   614e0:	ldr	r3, [fp, #-84]	; 0xffffffac
   614e4:	add	r2, r3, #1
   614e8:	str	r2, [fp, #-84]	; 0xffffffac
   614ec:	mov	r2, #37	; 0x25
   614f0:	strb	r2, [r3]
   614f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   614f8:	cmp	r3, #0
   614fc:	beq	61518 <__assert_fail@plt+0x4ee2c>
   61500:	ldr	r3, [fp, #-84]	; 0xffffffac
   61504:	add	r2, r3, #1
   61508:	str	r2, [fp, #-84]	; 0xffffffac
   6150c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   61510:	uxtb	r2, r2
   61514:	strb	r2, [r3]
   61518:	ldr	r3, [fp, #-84]	; 0xffffffac
   6151c:	add	r2, r3, #1
   61520:	str	r2, [fp, #-84]	; 0xffffffac
   61524:	ldr	r2, [fp, #-76]	; 0xffffffb4
   61528:	uxtb	r2, r2
   6152c:	strb	r2, [r3]
   61530:	ldr	r3, [fp, #-84]	; 0xffffffac
   61534:	mov	r2, #0
   61538:	strb	r2, [r3]
   6153c:	sub	r2, fp, #404	; 0x194
   61540:	sub	r0, fp, #1424	; 0x590
   61544:	sub	r0, r0, #4
   61548:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6154c:	mov	r1, #1024	; 0x400
   61550:	bl	1232c <strftime@plt>
   61554:	str	r0, [fp, #-196]	; 0xffffff3c
   61558:	ldr	r3, [fp, #-196]	; 0xffffff3c
   6155c:	cmp	r3, #0
   61560:	beq	632cc <__assert_fail@plt+0x50be0>
   61564:	ldr	r3, [fp, #-196]	; 0xffffff3c
   61568:	sub	r3, r3, #1
   6156c:	str	r3, [fp, #-200]	; 0xffffff38
   61570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61574:	cmp	r3, #45	; 0x2d
   61578:	beq	61590 <__assert_fail@plt+0x4eea4>
   6157c:	ldr	r3, [fp, #12]
   61580:	cmp	r3, #0
   61584:	blt	61590 <__assert_fail@plt+0x4eea4>
   61588:	ldr	r3, [fp, #12]
   6158c:	b	61594 <__assert_fail@plt+0x4eea8>
   61590:	mov	r3, #0
   61594:	str	r3, [fp, #-204]	; 0xffffff34
   61598:	ldr	r2, [fp, #-200]	; 0xffffff38
   6159c:	ldr	r3, [fp, #-204]	; 0xffffff34
   615a0:	cmp	r2, r3
   615a4:	movcs	r3, r2
   615a8:	movcc	r3, r3
   615ac:	str	r3, [fp, #-208]	; 0xffffff30
   615b0:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   615b4:	ldr	r3, [fp, #-16]
   615b8:	sub	r2, r2, r3
   615bc:	ldr	r3, [fp, #-208]	; 0xffffff30
   615c0:	cmp	r2, r3
   615c4:	bhi	615e0 <__assert_fail@plt+0x4eef4>
   615c8:	bl	12404 <__errno_location@plt>
   615cc:	mov	r2, r0
   615d0:	mov	r3, #34	; 0x22
   615d4:	str	r3, [r2]
   615d8:	mov	r3, #0
   615dc:	b	63334 <__assert_fail@plt+0x50c48>
   615e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   615e4:	cmp	r3, #0
   615e8:	beq	616ec <__assert_fail@plt+0x4f000>
   615ec:	ldr	r2, [fp, #-200]	; 0xffffff38
   615f0:	ldr	r3, [fp, #-204]	; 0xffffff34
   615f4:	cmp	r2, r3
   615f8:	bcs	61668 <__assert_fail@plt+0x4ef7c>
   615fc:	ldr	r2, [fp, #-204]	; 0xffffff34
   61600:	ldr	r3, [fp, #-200]	; 0xffffff38
   61604:	sub	r3, r2, r3
   61608:	str	r3, [fp, #-212]	; 0xffffff2c
   6160c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61610:	cmp	r3, #48	; 0x30
   61614:	beq	61624 <__assert_fail@plt+0x4ef38>
   61618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6161c:	cmp	r3, #43	; 0x2b
   61620:	bne	61648 <__assert_fail@plt+0x4ef5c>
   61624:	ldr	r2, [fp, #-212]	; 0xffffff2c
   61628:	mov	r1, #48	; 0x30
   6162c:	ldr	r0, [fp, #-20]	; 0xffffffec
   61630:	bl	12434 <memset@plt>
   61634:	ldr	r2, [fp, #-20]	; 0xffffffec
   61638:	ldr	r3, [fp, #-212]	; 0xffffff2c
   6163c:	add	r3, r2, r3
   61640:	str	r3, [fp, #-20]	; 0xffffffec
   61644:	b	61668 <__assert_fail@plt+0x4ef7c>
   61648:	ldr	r2, [fp, #-212]	; 0xffffff2c
   6164c:	mov	r1, #32
   61650:	ldr	r0, [fp, #-20]	; 0xffffffec
   61654:	bl	12434 <memset@plt>
   61658:	ldr	r2, [fp, #-20]	; 0xffffffec
   6165c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   61660:	add	r3, r2, r3
   61664:	str	r3, [fp, #-20]	; 0xffffffec
   61668:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   6166c:	cmp	r3, #0
   61670:	beq	61694 <__assert_fail@plt+0x4efa8>
   61674:	sub	r3, fp, #1424	; 0x590
   61678:	sub	r3, r3, #4
   6167c:	add	r3, r3, #1
   61680:	ldr	r2, [fp, #-200]	; 0xffffff38
   61684:	mov	r1, r3
   61688:	ldr	r0, [fp, #-20]	; 0xffffffec
   6168c:	bl	60740 <__assert_fail@plt+0x4e054>
   61690:	b	616dc <__assert_fail@plt+0x4eff0>
   61694:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   61698:	cmp	r3, #0
   6169c:	beq	616c0 <__assert_fail@plt+0x4efd4>
   616a0:	sub	r3, fp, #1424	; 0x590
   616a4:	sub	r3, r3, #4
   616a8:	add	r3, r3, #1
   616ac:	ldr	r2, [fp, #-200]	; 0xffffff38
   616b0:	mov	r1, r3
   616b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   616b8:	bl	607b0 <__assert_fail@plt+0x4e0c4>
   616bc:	b	616dc <__assert_fail@plt+0x4eff0>
   616c0:	sub	r3, fp, #1424	; 0x590
   616c4:	sub	r3, r3, #4
   616c8:	add	r3, r3, #1
   616cc:	ldr	r2, [fp, #-200]	; 0xffffff38
   616d0:	mov	r1, r3
   616d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   616d8:	bl	120f8 <memcpy@plt>
   616dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   616e0:	ldr	r3, [fp, #-200]	; 0xffffff38
   616e4:	add	r3, r2, r3
   616e8:	str	r3, [fp, #-20]	; 0xffffffec
   616ec:	ldr	r2, [fp, #-16]
   616f0:	ldr	r3, [fp, #-208]	; 0xffffff30
   616f4:	add	r3, r2, r3
   616f8:	str	r3, [fp, #-16]
   616fc:	b	632cc <__assert_fail@plt+0x50be0>
   61700:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61704:	cmp	r3, #69	; 0x45
   61708:	beq	61490 <__assert_fail@plt+0x4eda4>
   6170c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61710:	ldr	r3, [r3, #20]
   61714:	ldr	r2, [pc, #392]	; 618a4 <__assert_fail@plt+0x4f1b8>
   61718:	cmp	r3, r2
   6171c:	movlt	r3, #1
   61720:	movge	r3, #0
   61724:	strb	r3, [fp, #-157]	; 0xffffff63
   61728:	ldrb	r3, [fp, #-157]	; 0xffffff63
   6172c:	eor	r3, r3, #1
   61730:	uxtb	r3, r3
   61734:	mov	r2, r3
   61738:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6173c:	ldr	r3, [r3, #20]
   61740:	lsr	r3, r3, #31
   61744:	uxtb	r3, r3
   61748:	and	r3, r3, r2
   6174c:	cmp	r3, #0
   61750:	movne	r3, #1
   61754:	moveq	r3, #0
   61758:	strb	r3, [fp, #-158]	; 0xffffff62
   6175c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61760:	ldr	r2, [r3, #20]
   61764:	ldrb	r3, [fp, #-158]	; 0xffffff62
   61768:	mvn	r1, #98	; 0x62
   6176c:	mul	r3, r1, r3
   61770:	add	r3, r2, r3
   61774:	ldr	r2, [pc, #332]	; 618c8 <__assert_fail@plt+0x4f1dc>
   61778:	smull	r1, r2, r2, r3
   6177c:	asr	r2, r2, #5
   61780:	asr	r3, r3, #31
   61784:	sub	r3, r2, r3
   61788:	add	r3, r3, #19
   6178c:	str	r3, [fp, #-164]	; 0xffffff5c
   61790:	mov	r3, #2
   61794:	str	r3, [fp, #-36]	; 0xffffffdc
   61798:	ldrb	r3, [fp, #-157]	; 0xffffff63
   6179c:	strb	r3, [fp, #-45]	; 0xffffffd3
   617a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   617a4:	str	r3, [fp, #-44]	; 0xffffffd4
   617a8:	b	61828 <__assert_fail@plt+0x4f13c>
   617ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   617b0:	cmp	r3, #79	; 0x4f
   617b4:	bne	61498 <__assert_fail@plt+0x4edac>
   617b8:	b	63148 <__assert_fail@plt+0x50a5c>
   617bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   617c0:	cmp	r3, #0
   617c4:	bne	630ac <__assert_fail@plt+0x509c0>
   617c8:	ldr	r3, [pc, #216]	; 618a8 <__assert_fail@plt+0x4f1bc>
   617cc:	str	r3, [fp, #-56]	; 0xffffffc8
   617d0:	b	612a0 <__assert_fail@plt+0x4ebb4>
   617d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   617d8:	cmp	r3, #69	; 0x45
   617dc:	beq	630b4 <__assert_fail@plt+0x509c8>
   617e0:	mov	r3, #2
   617e4:	str	r3, [fp, #-36]	; 0xffffffdc
   617e8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   617ec:	ldr	r3, [r3, #12]
   617f0:	str	r3, [fp, #-40]	; 0xffffffd8
   617f4:	b	618e0 <__assert_fail@plt+0x4f1f4>
   617f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   617fc:	cmp	r3, #69	; 0x45
   61800:	beq	630bc <__assert_fail@plt+0x509d0>
   61804:	mov	r3, #2
   61808:	str	r3, [fp, #-36]	; 0xffffffdc
   6180c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61810:	ldr	r3, [r3, #12]
   61814:	str	r3, [fp, #-40]	; 0xffffffd8
   61818:	b	618cc <__assert_fail@plt+0x4f1e0>
   6181c:	mov	r3, #1
   61820:	strb	r3, [fp, #-46]	; 0xffffffd2
   61824:	b	61904 <__assert_fail@plt+0x4f218>
   61828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6182c:	cmp	r3, #0
   61830:	bne	6183c <__assert_fail@plt+0x4f150>
   61834:	ldr	r3, [fp, #8]
   61838:	str	r3, [fp, #-28]	; 0xffffffe4
   6183c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61840:	cmp	r3, #43	; 0x2b
   61844:	bne	61884 <__assert_fail@plt+0x4f198>
   61848:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6184c:	cmp	r3, #2
   61850:	bne	6185c <__assert_fail@plt+0x4f170>
   61854:	mov	r2, #99	; 0x63
   61858:	b	61860 <__assert_fail@plt+0x4f174>
   6185c:	ldr	r2, [pc, #72]	; 618ac <__assert_fail@plt+0x4f1c0>
   61860:	ldr	r3, [fp, #-44]	; 0xffffffd4
   61864:	cmp	r2, r3
   61868:	bcc	6187c <__assert_fail@plt+0x4f190>
   6186c:	ldr	r3, [fp, #12]
   61870:	ldr	r2, [fp, #-36]	; 0xffffffdc
   61874:	cmp	r2, r3
   61878:	bge	61884 <__assert_fail@plt+0x4f198>
   6187c:	mov	r3, #1
   61880:	b	61888 <__assert_fail@plt+0x4f19c>
   61884:	mov	r3, #0
   61888:	strb	r3, [fp, #-46]	; 0xffffffd2
   6188c:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   61890:	and	r3, r3, #1
   61894:	strb	r3, [fp, #-46]	; 0xffffffd2
   61898:	b	618fc <__assert_fail@plt+0x4f210>
   6189c:	andeq	fp, r6, ip, rrx
   618a0:	stcleq	12, cr12, [ip], {204}	; 0xcc
   618a4:			; <UNDEFINED> instruction: 0xfffff894
   618a8:	andeq	fp, r6, r0, ror r0
   618ac:	andeq	r2, r0, pc, lsl #14
   618b0:	stclgt	12, cr12, [ip], {205}	; 0xcd
   618b4:	andeq	fp, r6, ip, ror r0
   618b8:	andeq	fp, r6, r8, lsl #1
   618bc:	strbtvs	r6, [r6], -r7, ror #12
   618c0:	muleq	r6, r0, r0
   618c4:	subls	r2, r9, #-1828716544	; 0x93000000
   618c8:	mvnpl	r8, pc, lsl r5
   618cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   618d0:	cmp	r3, #0
   618d4:	bne	618e0 <__assert_fail@plt+0x4f1f4>
   618d8:	mov	r3, #95	; 0x5f
   618dc:	str	r3, [fp, #-28]	; 0xffffffe4
   618e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   618e4:	lsr	r3, r3, #31
   618e8:	strb	r3, [fp, #-45]	; 0xffffffd3
   618ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   618f0:	str	r3, [fp, #-44]	; 0xffffffd4
   618f4:	mov	r3, #0
   618f8:	strb	r3, [fp, #-46]	; 0xffffffd2
   618fc:	mov	r3, #0
   61900:	str	r3, [fp, #-52]	; 0xffffffcc
   61904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61908:	cmp	r3, #79	; 0x4f
   6190c:	bne	61924 <__assert_fail@plt+0x4f238>
   61910:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   61914:	eor	r3, r3, #1
   61918:	uxtb	r3, r3
   6191c:	cmp	r3, #0
   61920:	bne	614a0 <__assert_fail@plt+0x4edb4>
   61924:	sub	r3, fp, #396	; 0x18c
   61928:	add	r3, r3, #14
   6192c:	str	r3, [fp, #-60]	; 0xffffffc4
   61930:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   61934:	cmp	r3, #0
   61938:	beq	61948 <__assert_fail@plt+0x4f25c>
   6193c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   61940:	rsb	r3, r3, #0
   61944:	str	r3, [fp, #-44]	; 0xffffffd4
   61948:	ldr	r3, [fp, #-52]	; 0xffffffcc
   6194c:	and	r3, r3, #1
   61950:	cmp	r3, #0
   61954:	beq	61970 <__assert_fail@plt+0x4f284>
   61958:	ldr	r3, [fp, #-60]	; 0xffffffc4
   6195c:	sub	r3, r3, #1
   61960:	str	r3, [fp, #-60]	; 0xffffffc4
   61964:	ldr	r3, [fp, #-60]	; 0xffffffc4
   61968:	mov	r2, #58	; 0x3a
   6196c:	strb	r2, [r3]
   61970:	ldr	r3, [fp, #-52]	; 0xffffffcc
   61974:	asr	r3, r3, #1
   61978:	str	r3, [fp, #-52]	; 0xffffffcc
   6197c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   61980:	sub	r3, r3, #1
   61984:	str	r3, [fp, #-60]	; 0xffffffc4
   61988:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6198c:	ldr	r3, [pc, #-228]	; 618b0 <__assert_fail@plt+0x4f1c4>
   61990:	umull	r2, r3, r3, r1
   61994:	lsr	r2, r3, #3
   61998:	mov	r3, r2
   6199c:	lsl	r3, r3, #2
   619a0:	add	r3, r3, r2
   619a4:	lsl	r3, r3, #1
   619a8:	sub	r2, r1, r3
   619ac:	uxtb	r3, r2
   619b0:	add	r3, r3, #48	; 0x30
   619b4:	uxtb	r2, r3
   619b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   619bc:	strb	r2, [r3]
   619c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   619c4:	ldr	r2, [pc, #-284]	; 618b0 <__assert_fail@plt+0x4f1c4>
   619c8:	umull	r2, r3, r2, r3
   619cc:	lsr	r3, r3, #3
   619d0:	str	r3, [fp, #-44]	; 0xffffffd4
   619d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   619d8:	cmp	r3, #0
   619dc:	bne	61948 <__assert_fail@plt+0x4f25c>
   619e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   619e4:	cmp	r3, #0
   619e8:	bne	61948 <__assert_fail@plt+0x4f25c>
   619ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   619f0:	cmp	r3, #0
   619f4:	bne	61a00 <__assert_fail@plt+0x4f314>
   619f8:	mov	r3, #48	; 0x30
   619fc:	str	r3, [fp, #-28]	; 0xffffffe4
   61a00:	ldr	r3, [fp, #12]
   61a04:	cmp	r3, #0
   61a08:	bge	61a14 <__assert_fail@plt+0x4f328>
   61a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   61a10:	str	r3, [fp, #12]
   61a14:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   61a18:	cmp	r3, #0
   61a1c:	beq	61a28 <__assert_fail@plt+0x4f33c>
   61a20:	mov	r3, #45	; 0x2d
   61a24:	b	61a40 <__assert_fail@plt+0x4f354>
   61a28:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   61a2c:	cmp	r3, #0
   61a30:	beq	61a3c <__assert_fail@plt+0x4f350>
   61a34:	mov	r3, #43	; 0x2b
   61a38:	b	61a40 <__assert_fail@plt+0x4f354>
   61a3c:	mov	r3, #0
   61a40:	strb	r3, [fp, #-217]	; 0xffffff27
   61a44:	sub	r3, fp, #396	; 0x18c
   61a48:	add	r3, r3, #14
   61a4c:	mov	r2, r3
   61a50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   61a54:	sub	r3, r2, r3
   61a58:	str	r3, [fp, #-224]	; 0xffffff20
   61a5c:	ldr	r3, [fp, #12]
   61a60:	ldrb	r2, [fp, #-217]	; 0xffffff27
   61a64:	cmp	r2, #0
   61a68:	movne	r2, #1
   61a6c:	moveq	r2, #0
   61a70:	uxtb	r2, r2
   61a74:	sub	r2, r3, r2
   61a78:	ldr	r3, [fp, #-224]	; 0xffffff20
   61a7c:	sub	r3, r2, r3
   61a80:	str	r3, [fp, #-228]	; 0xffffff1c
   61a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61a88:	cmp	r3, #45	; 0x2d
   61a8c:	beq	61aa4 <__assert_fail@plt+0x4f3b8>
   61a90:	ldr	r3, [fp, #-228]	; 0xffffff1c
   61a94:	cmp	r3, #0
   61a98:	ble	61aa4 <__assert_fail@plt+0x4f3b8>
   61a9c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   61aa0:	b	61aa8 <__assert_fail@plt+0x4f3bc>
   61aa4:	mov	r3, #0
   61aa8:	str	r3, [fp, #-232]	; 0xffffff18
   61aac:	ldrb	r3, [fp, #-217]	; 0xffffff27
   61ab0:	cmp	r3, #0
   61ab4:	beq	61c2c <__assert_fail@plt+0x4f540>
   61ab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61abc:	cmp	r3, #95	; 0x5f
   61ac0:	bne	61b14 <__assert_fail@plt+0x4f428>
   61ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   61ac8:	cmp	r3, #0
   61acc:	beq	61af4 <__assert_fail@plt+0x4f408>
   61ad0:	ldr	r3, [fp, #-232]	; 0xffffff18
   61ad4:	mov	r2, r3
   61ad8:	mov	r1, #32
   61adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   61ae0:	bl	12434 <memset@plt>
   61ae4:	ldr	r3, [fp, #-232]	; 0xffffff18
   61ae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   61aec:	add	r3, r2, r3
   61af0:	str	r3, [fp, #-20]	; 0xffffffec
   61af4:	ldr	r3, [fp, #-232]	; 0xffffff18
   61af8:	ldr	r2, [fp, #-16]
   61afc:	add	r3, r2, r3
   61b00:	str	r3, [fp, #-16]
   61b04:	ldr	r2, [fp, #12]
   61b08:	ldr	r3, [fp, #-232]	; 0xffffff18
   61b0c:	sub	r3, r2, r3
   61b10:	str	r3, [fp, #12]
   61b14:	mov	r3, #1
   61b18:	str	r3, [fp, #-236]	; 0xffffff14
   61b1c:	mov	r3, #0
   61b20:	str	r3, [fp, #-240]	; 0xffffff10
   61b24:	ldr	r2, [fp, #-236]	; 0xffffff14
   61b28:	ldr	r3, [fp, #-240]	; 0xffffff10
   61b2c:	cmp	r2, r3
   61b30:	movcs	r3, r2
   61b34:	movcc	r3, r3
   61b38:	str	r3, [fp, #-244]	; 0xffffff0c
   61b3c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   61b40:	ldr	r3, [fp, #-16]
   61b44:	sub	r2, r2, r3
   61b48:	ldr	r3, [fp, #-244]	; 0xffffff0c
   61b4c:	cmp	r2, r3
   61b50:	bhi	61b6c <__assert_fail@plt+0x4f480>
   61b54:	bl	12404 <__errno_location@plt>
   61b58:	mov	r2, r0
   61b5c:	mov	r3, #34	; 0x22
   61b60:	str	r3, [r2]
   61b64:	mov	r3, #0
   61b68:	b	63334 <__assert_fail@plt+0x50c48>
   61b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   61b70:	cmp	r3, #0
   61b74:	beq	61c10 <__assert_fail@plt+0x4f524>
   61b78:	ldr	r2, [fp, #-236]	; 0xffffff14
   61b7c:	ldr	r3, [fp, #-240]	; 0xffffff10
   61b80:	cmp	r2, r3
   61b84:	bcs	61bf4 <__assert_fail@plt+0x4f508>
   61b88:	ldr	r2, [fp, #-240]	; 0xffffff10
   61b8c:	ldr	r3, [fp, #-236]	; 0xffffff14
   61b90:	sub	r3, r2, r3
   61b94:	str	r3, [fp, #-248]	; 0xffffff08
   61b98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61b9c:	cmp	r3, #48	; 0x30
   61ba0:	beq	61bb0 <__assert_fail@plt+0x4f4c4>
   61ba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61ba8:	cmp	r3, #43	; 0x2b
   61bac:	bne	61bd4 <__assert_fail@plt+0x4f4e8>
   61bb0:	ldr	r2, [fp, #-248]	; 0xffffff08
   61bb4:	mov	r1, #48	; 0x30
   61bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   61bbc:	bl	12434 <memset@plt>
   61bc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   61bc4:	ldr	r3, [fp, #-248]	; 0xffffff08
   61bc8:	add	r3, r2, r3
   61bcc:	str	r3, [fp, #-20]	; 0xffffffec
   61bd0:	b	61bf4 <__assert_fail@plt+0x4f508>
   61bd4:	ldr	r2, [fp, #-248]	; 0xffffff08
   61bd8:	mov	r1, #32
   61bdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   61be0:	bl	12434 <memset@plt>
   61be4:	ldr	r2, [fp, #-20]	; 0xffffffec
   61be8:	ldr	r3, [fp, #-248]	; 0xffffff08
   61bec:	add	r3, r2, r3
   61bf0:	str	r3, [fp, #-20]	; 0xffffffec
   61bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   61bf8:	ldrb	r2, [fp, #-217]	; 0xffffff27
   61bfc:	strb	r2, [r3]
   61c00:	ldr	r2, [fp, #-20]	; 0xffffffec
   61c04:	ldr	r3, [fp, #-236]	; 0xffffff14
   61c08:	add	r3, r2, r3
   61c0c:	str	r3, [fp, #-20]	; 0xffffffec
   61c10:	ldr	r2, [fp, #-16]
   61c14:	ldr	r3, [fp, #-244]	; 0xffffff0c
   61c18:	add	r3, r2, r3
   61c1c:	str	r3, [fp, #-16]
   61c20:	ldr	r3, [fp, #12]
   61c24:	sub	r3, r3, #1
   61c28:	str	r3, [fp, #12]
   61c2c:	ldr	r3, [fp, #-224]	; 0xffffff20
   61c30:	str	r3, [fp, #-252]	; 0xffffff04
   61c34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61c38:	cmp	r3, #45	; 0x2d
   61c3c:	beq	61c54 <__assert_fail@plt+0x4f568>
   61c40:	ldr	r3, [fp, #12]
   61c44:	cmp	r3, #0
   61c48:	blt	61c54 <__assert_fail@plt+0x4f568>
   61c4c:	ldr	r3, [fp, #12]
   61c50:	b	61c58 <__assert_fail@plt+0x4f56c>
   61c54:	mov	r3, #0
   61c58:	str	r3, [fp, #-256]	; 0xffffff00
   61c5c:	ldr	r2, [fp, #-252]	; 0xffffff04
   61c60:	ldr	r3, [fp, #-256]	; 0xffffff00
   61c64:	cmp	r2, r3
   61c68:	movcs	r3, r2
   61c6c:	movcc	r3, r3
   61c70:	str	r3, [fp, #-260]	; 0xfffffefc
   61c74:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   61c78:	ldr	r3, [fp, #-16]
   61c7c:	sub	r2, r2, r3
   61c80:	ldr	r3, [fp, #-260]	; 0xfffffefc
   61c84:	cmp	r2, r3
   61c88:	bhi	61ca4 <__assert_fail@plt+0x4f5b8>
   61c8c:	bl	12404 <__errno_location@plt>
   61c90:	mov	r2, r0
   61c94:	mov	r3, #34	; 0x22
   61c98:	str	r3, [r2]
   61c9c:	mov	r3, #0
   61ca0:	b	63334 <__assert_fail@plt+0x50c48>
   61ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   61ca8:	cmp	r3, #0
   61cac:	beq	61d8c <__assert_fail@plt+0x4f6a0>
   61cb0:	ldr	r2, [fp, #-252]	; 0xffffff04
   61cb4:	ldr	r3, [fp, #-256]	; 0xffffff00
   61cb8:	cmp	r2, r3
   61cbc:	bcs	61d2c <__assert_fail@plt+0x4f640>
   61cc0:	ldr	r2, [fp, #-256]	; 0xffffff00
   61cc4:	ldr	r3, [fp, #-252]	; 0xffffff04
   61cc8:	sub	r3, r2, r3
   61ccc:	str	r3, [fp, #-264]	; 0xfffffef8
   61cd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61cd4:	cmp	r3, #48	; 0x30
   61cd8:	beq	61ce8 <__assert_fail@plt+0x4f5fc>
   61cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61ce0:	cmp	r3, #43	; 0x2b
   61ce4:	bne	61d0c <__assert_fail@plt+0x4f620>
   61ce8:	ldr	r2, [fp, #-264]	; 0xfffffef8
   61cec:	mov	r1, #48	; 0x30
   61cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   61cf4:	bl	12434 <memset@plt>
   61cf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   61cfc:	ldr	r3, [fp, #-264]	; 0xfffffef8
   61d00:	add	r3, r2, r3
   61d04:	str	r3, [fp, #-20]	; 0xffffffec
   61d08:	b	61d2c <__assert_fail@plt+0x4f640>
   61d0c:	ldr	r2, [fp, #-264]	; 0xfffffef8
   61d10:	mov	r1, #32
   61d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   61d18:	bl	12434 <memset@plt>
   61d1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   61d20:	ldr	r3, [fp, #-264]	; 0xfffffef8
   61d24:	add	r3, r2, r3
   61d28:	str	r3, [fp, #-20]	; 0xffffffec
   61d2c:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   61d30:	cmp	r3, #0
   61d34:	beq	61d4c <__assert_fail@plt+0x4f660>
   61d38:	ldr	r2, [fp, #-252]	; 0xffffff04
   61d3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   61d40:	ldr	r0, [fp, #-20]	; 0xffffffec
   61d44:	bl	60740 <__assert_fail@plt+0x4e054>
   61d48:	b	61d7c <__assert_fail@plt+0x4f690>
   61d4c:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   61d50:	cmp	r3, #0
   61d54:	beq	61d6c <__assert_fail@plt+0x4f680>
   61d58:	ldr	r2, [fp, #-252]	; 0xffffff04
   61d5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   61d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   61d64:	bl	607b0 <__assert_fail@plt+0x4e0c4>
   61d68:	b	61d7c <__assert_fail@plt+0x4f690>
   61d6c:	ldr	r2, [fp, #-252]	; 0xffffff04
   61d70:	ldr	r1, [fp, #-60]	; 0xffffffc4
   61d74:	ldr	r0, [fp, #-20]	; 0xffffffec
   61d78:	bl	120f8 <memcpy@plt>
   61d7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   61d80:	ldr	r3, [fp, #-252]	; 0xffffff04
   61d84:	add	r3, r2, r3
   61d88:	str	r3, [fp, #-20]	; 0xffffffec
   61d8c:	ldr	r2, [fp, #-16]
   61d90:	ldr	r3, [fp, #-260]	; 0xfffffefc
   61d94:	add	r3, r2, r3
   61d98:	str	r3, [fp, #-16]
   61d9c:	b	632d8 <__assert_fail@plt+0x50bec>
   61da0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61da4:	cmp	r3, #0
   61da8:	bne	630c4 <__assert_fail@plt+0x509d8>
   61dac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61db0:	cmp	r3, #0
   61db4:	bne	61dd8 <__assert_fail@plt+0x4f6ec>
   61db8:	ldr	r3, [fp, #12]
   61dbc:	cmp	r3, #0
   61dc0:	bge	61dd8 <__assert_fail@plt+0x4f6ec>
   61dc4:	mov	r3, #43	; 0x2b
   61dc8:	str	r3, [fp, #-28]	; 0xffffffe4
   61dcc:	mov	r3, #4
   61dd0:	str	r3, [fp, #-80]	; 0xffffffb0
   61dd4:	b	61df8 <__assert_fail@plt+0x4f70c>
   61dd8:	ldr	r3, [fp, #12]
   61ddc:	sub	r3, r3, #6
   61de0:	str	r3, [fp, #-80]	; 0xffffffb0
   61de4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   61de8:	cmp	r3, #0
   61dec:	bge	61df8 <__assert_fail@plt+0x4f70c>
   61df0:	mov	r3, #0
   61df4:	str	r3, [fp, #-80]	; 0xffffffb0
   61df8:	ldr	r3, [pc, #-1356]	; 618b4 <__assert_fail@plt+0x4f1c8>
   61dfc:	str	r3, [fp, #-56]	; 0xffffffc8
   61e00:	b	612a8 <__assert_fail@plt+0x4ebbc>
   61e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61e08:	cmp	r3, #69	; 0x45
   61e0c:	beq	630cc <__assert_fail@plt+0x509e0>
   61e10:	mov	r3, #2
   61e14:	str	r3, [fp, #-36]	; 0xffffffdc
   61e18:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61e1c:	ldr	r3, [r3, #8]
   61e20:	str	r3, [fp, #-40]	; 0xffffffd8
   61e24:	b	618e0 <__assert_fail@plt+0x4f1f4>
   61e28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61e2c:	cmp	r3, #69	; 0x45
   61e30:	beq	630d4 <__assert_fail@plt+0x509e8>
   61e34:	mov	r3, #2
   61e38:	str	r3, [fp, #-36]	; 0xffffffdc
   61e3c:	ldr	r3, [fp, #-8]
   61e40:	str	r3, [fp, #-40]	; 0xffffffd8
   61e44:	b	618e0 <__assert_fail@plt+0x4f1f4>
   61e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61e4c:	cmp	r3, #69	; 0x45
   61e50:	beq	630dc <__assert_fail@plt+0x509f0>
   61e54:	mov	r3, #2
   61e58:	str	r3, [fp, #-36]	; 0xffffffdc
   61e5c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61e60:	ldr	r3, [r3, #8]
   61e64:	str	r3, [fp, #-40]	; 0xffffffd8
   61e68:	b	618cc <__assert_fail@plt+0x4f1e0>
   61e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61e70:	cmp	r3, #69	; 0x45
   61e74:	beq	630e4 <__assert_fail@plt+0x509f8>
   61e78:	mov	r3, #2
   61e7c:	str	r3, [fp, #-36]	; 0xffffffdc
   61e80:	ldr	r3, [fp, #-8]
   61e84:	str	r3, [fp, #-40]	; 0xffffffd8
   61e88:	b	618cc <__assert_fail@plt+0x4f1e0>
   61e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61e90:	cmp	r3, #69	; 0x45
   61e94:	beq	630ec <__assert_fail@plt+0x50a00>
   61e98:	mov	r3, #3
   61e9c:	str	r3, [fp, #-36]	; 0xffffffdc
   61ea0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61ea4:	ldr	r3, [r3, #28]
   61ea8:	cmn	r3, #1
   61eac:	movlt	r3, #1
   61eb0:	movge	r3, #0
   61eb4:	strb	r3, [fp, #-45]	; 0xffffffd3
   61eb8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61ebc:	ldr	r3, [r3, #28]
   61ec0:	add	r3, r3, #1
   61ec4:	str	r3, [fp, #-44]	; 0xffffffd4
   61ec8:	b	618f4 <__assert_fail@plt+0x4f208>
   61ecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61ed0:	cmp	r3, #69	; 0x45
   61ed4:	beq	630f4 <__assert_fail@plt+0x50a08>
   61ed8:	mov	r3, #2
   61edc:	str	r3, [fp, #-36]	; 0xffffffdc
   61ee0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61ee4:	ldr	r3, [r3, #4]
   61ee8:	str	r3, [fp, #-40]	; 0xffffffd8
   61eec:	b	618e0 <__assert_fail@plt+0x4f1f4>
   61ef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61ef4:	cmp	r3, #69	; 0x45
   61ef8:	beq	630fc <__assert_fail@plt+0x50a10>
   61efc:	mov	r3, #2
   61f00:	str	r3, [fp, #-36]	; 0xffffffdc
   61f04:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61f08:	ldr	r3, [r3, #16]
   61f0c:	cmn	r3, #1
   61f10:	movlt	r3, #1
   61f14:	movge	r3, #0
   61f18:	strb	r3, [fp, #-45]	; 0xffffffd3
   61f1c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61f20:	ldr	r3, [r3, #16]
   61f24:	add	r3, r3, #1
   61f28:	str	r3, [fp, #-44]	; 0xffffffd4
   61f2c:	b	618f4 <__assert_fail@plt+0x4f208>
   61f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   61f34:	cmp	r3, #69	; 0x45
   61f38:	beq	63104 <__assert_fail@plt+0x50a18>
   61f3c:	ldr	r3, [fp, #24]
   61f40:	str	r3, [fp, #-88]	; 0xffffffa8
   61f44:	mov	r3, #9
   61f48:	str	r3, [fp, #-268]	; 0xfffffef4
   61f4c:	ldr	r3, [fp, #12]
   61f50:	cmp	r3, #0
   61f54:	bgt	61f60 <__assert_fail@plt+0x4f874>
   61f58:	ldr	r3, [fp, #-268]	; 0xfffffef4
   61f5c:	str	r3, [fp, #12]
   61f60:	ldr	r3, [fp, #-268]	; 0xfffffef4
   61f64:	str	r3, [fp, #-92]	; 0xffffffa4
   61f68:	b	61f94 <__assert_fail@plt+0x4f8a8>
   61f6c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   61f70:	sub	r3, r3, #1
   61f74:	str	r3, [fp, #-92]	; 0xffffffa4
   61f78:	ldr	r3, [fp, #-88]	; 0xffffffa8
   61f7c:	ldr	r2, [pc, #-1736]	; 618bc <__assert_fail@plt+0x4f1d0>
   61f80:	smull	r1, r2, r2, r3
   61f84:	asr	r2, r2, #2
   61f88:	asr	r3, r3, #31
   61f8c:	sub	r3, r2, r3
   61f90:	str	r3, [fp, #-88]	; 0xffffffa8
   61f94:	ldr	r2, [fp, #12]
   61f98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   61f9c:	cmp	r2, r3
   61fa0:	blt	61f6c <__assert_fail@plt+0x4f880>
   61fa4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   61fa8:	cmp	r3, #1
   61fac:	ble	61fe4 <__assert_fail@plt+0x4f8f8>
   61fb0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   61fb4:	ldr	r3, [pc, #-1792]	; 618bc <__assert_fail@plt+0x4f1d0>
   61fb8:	smull	r2, r3, r3, r1
   61fbc:	asr	r2, r3, #2
   61fc0:	asr	r3, r1, #31
   61fc4:	sub	r2, r2, r3
   61fc8:	mov	r3, r2
   61fcc:	lsl	r3, r3, #2
   61fd0:	add	r3, r3, r2
   61fd4:	lsl	r3, r3, #1
   61fd8:	sub	r2, r1, r3
   61fdc:	cmp	r2, #0
   61fe0:	beq	61f6c <__assert_fail@plt+0x4f880>
   61fe4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   61fe8:	str	r3, [fp, #-96]	; 0xffffffa0
   61fec:	b	62064 <__assert_fail@plt+0x4f978>
   61ff0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   61ff4:	sub	r0, r3, #1
   61ff8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   61ffc:	ldr	r3, [pc, #-1864]	; 618bc <__assert_fail@plt+0x4f1d0>
   62000:	smull	r1, r3, r3, r2
   62004:	asr	r1, r3, #2
   62008:	asr	r3, r2, #31
   6200c:	sub	r1, r1, r3
   62010:	mov	r3, r1
   62014:	lsl	r3, r3, #2
   62018:	add	r3, r3, r1
   6201c:	lsl	r3, r3, #1
   62020:	sub	r1, r2, r3
   62024:	uxtb	r3, r1
   62028:	add	r3, r3, #48	; 0x30
   6202c:	uxtb	r2, r3
   62030:	sub	r3, fp, #4
   62034:	add	r3, r3, r0
   62038:	strb	r2, [r3, #-392]	; 0xfffffe78
   6203c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   62040:	ldr	r2, [pc, #-1932]	; 618bc <__assert_fail@plt+0x4f1d0>
   62044:	smull	r1, r2, r2, r3
   62048:	asr	r2, r2, #2
   6204c:	asr	r3, r3, #31
   62050:	sub	r3, r2, r3
   62054:	str	r3, [fp, #-88]	; 0xffffffa8
   62058:	ldr	r3, [fp, #-96]	; 0xffffffa0
   6205c:	sub	r3, r3, #1
   62060:	str	r3, [fp, #-96]	; 0xffffffa0
   62064:	ldr	r3, [fp, #-96]	; 0xffffffa0
   62068:	cmp	r3, #0
   6206c:	bgt	61ff0 <__assert_fail@plt+0x4f904>
   62070:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62074:	cmp	r3, #0
   62078:	bne	62084 <__assert_fail@plt+0x4f998>
   6207c:	mov	r3, #48	; 0x30
   62080:	str	r3, [fp, #-28]	; 0xffffffe4
   62084:	ldr	r3, [fp, #-92]	; 0xffffffa4
   62088:	str	r3, [fp, #-272]	; 0xfffffef0
   6208c:	mov	r3, #0
   62090:	str	r3, [fp, #-276]	; 0xfffffeec
   62094:	ldr	r2, [fp, #-272]	; 0xfffffef0
   62098:	ldr	r3, [fp, #-276]	; 0xfffffeec
   6209c:	cmp	r2, r3
   620a0:	movcs	r3, r2
   620a4:	movcc	r3, r3
   620a8:	str	r3, [fp, #-280]	; 0xfffffee8
   620ac:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   620b0:	ldr	r3, [fp, #-16]
   620b4:	sub	r2, r2, r3
   620b8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   620bc:	cmp	r2, r3
   620c0:	bhi	620dc <__assert_fail@plt+0x4f9f0>
   620c4:	bl	12404 <__errno_location@plt>
   620c8:	mov	r2, r0
   620cc:	mov	r3, #34	; 0x22
   620d0:	str	r3, [r2]
   620d4:	mov	r3, #0
   620d8:	b	63334 <__assert_fail@plt+0x50c48>
   620dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   620e0:	cmp	r3, #0
   620e4:	beq	621d0 <__assert_fail@plt+0x4fae4>
   620e8:	ldr	r2, [fp, #-272]	; 0xfffffef0
   620ec:	ldr	r3, [fp, #-276]	; 0xfffffeec
   620f0:	cmp	r2, r3
   620f4:	bcs	62164 <__assert_fail@plt+0x4fa78>
   620f8:	ldr	r2, [fp, #-276]	; 0xfffffeec
   620fc:	ldr	r3, [fp, #-272]	; 0xfffffef0
   62100:	sub	r3, r2, r3
   62104:	str	r3, [fp, #-284]	; 0xfffffee4
   62108:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6210c:	cmp	r3, #48	; 0x30
   62110:	beq	62120 <__assert_fail@plt+0x4fa34>
   62114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62118:	cmp	r3, #43	; 0x2b
   6211c:	bne	62144 <__assert_fail@plt+0x4fa58>
   62120:	ldr	r2, [fp, #-284]	; 0xfffffee4
   62124:	mov	r1, #48	; 0x30
   62128:	ldr	r0, [fp, #-20]	; 0xffffffec
   6212c:	bl	12434 <memset@plt>
   62130:	ldr	r2, [fp, #-20]	; 0xffffffec
   62134:	ldr	r3, [fp, #-284]	; 0xfffffee4
   62138:	add	r3, r2, r3
   6213c:	str	r3, [fp, #-20]	; 0xffffffec
   62140:	b	62164 <__assert_fail@plt+0x4fa78>
   62144:	ldr	r2, [fp, #-284]	; 0xfffffee4
   62148:	mov	r1, #32
   6214c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62150:	bl	12434 <memset@plt>
   62154:	ldr	r2, [fp, #-20]	; 0xffffffec
   62158:	ldr	r3, [fp, #-284]	; 0xfffffee4
   6215c:	add	r3, r2, r3
   62160:	str	r3, [fp, #-20]	; 0xffffffec
   62164:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   62168:	cmp	r3, #0
   6216c:	beq	62188 <__assert_fail@plt+0x4fa9c>
   62170:	sub	r3, fp, #396	; 0x18c
   62174:	ldr	r2, [fp, #-272]	; 0xfffffef0
   62178:	mov	r1, r3
   6217c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62180:	bl	60740 <__assert_fail@plt+0x4e054>
   62184:	b	621c0 <__assert_fail@plt+0x4fad4>
   62188:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   6218c:	cmp	r3, #0
   62190:	beq	621ac <__assert_fail@plt+0x4fac0>
   62194:	sub	r3, fp, #396	; 0x18c
   62198:	ldr	r2, [fp, #-272]	; 0xfffffef0
   6219c:	mov	r1, r3
   621a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   621a4:	bl	607b0 <__assert_fail@plt+0x4e0c4>
   621a8:	b	621c0 <__assert_fail@plt+0x4fad4>
   621ac:	sub	r3, fp, #396	; 0x18c
   621b0:	ldr	r2, [fp, #-272]	; 0xfffffef0
   621b4:	mov	r1, r3
   621b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   621bc:	bl	120f8 <memcpy@plt>
   621c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   621c4:	ldr	r3, [fp, #-272]	; 0xfffffef0
   621c8:	add	r3, r2, r3
   621cc:	str	r3, [fp, #-20]	; 0xffffffec
   621d0:	ldr	r2, [fp, #-16]
   621d4:	ldr	r3, [fp, #-280]	; 0xfffffee8
   621d8:	add	r3, r2, r3
   621dc:	str	r3, [fp, #-16]
   621e0:	mov	r3, #0
   621e4:	str	r3, [fp, #-288]	; 0xfffffee0
   621e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   621ec:	cmp	r3, #45	; 0x2d
   621f0:	beq	62218 <__assert_fail@plt+0x4fb2c>
   621f4:	ldr	r2, [fp, #12]
   621f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   621fc:	sub	r3, r2, r3
   62200:	cmp	r3, #0
   62204:	blt	62218 <__assert_fail@plt+0x4fb2c>
   62208:	ldr	r2, [fp, #12]
   6220c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   62210:	sub	r3, r2, r3
   62214:	b	6221c <__assert_fail@plt+0x4fb30>
   62218:	mov	r3, #0
   6221c:	str	r3, [fp, #-292]	; 0xfffffedc
   62220:	ldr	r2, [fp, #-288]	; 0xfffffee0
   62224:	ldr	r3, [fp, #-292]	; 0xfffffedc
   62228:	cmp	r2, r3
   6222c:	movcs	r3, r2
   62230:	movcc	r3, r3
   62234:	str	r3, [fp, #-296]	; 0xfffffed8
   62238:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   6223c:	ldr	r3, [fp, #-16]
   62240:	sub	r2, r2, r3
   62244:	ldr	r3, [fp, #-296]	; 0xfffffed8
   62248:	cmp	r2, r3
   6224c:	bhi	62268 <__assert_fail@plt+0x4fb7c>
   62250:	bl	12404 <__errno_location@plt>
   62254:	mov	r2, r0
   62258:	mov	r3, #34	; 0x22
   6225c:	str	r3, [r2]
   62260:	mov	r3, #0
   62264:	b	63334 <__assert_fail@plt+0x50c48>
   62268:	ldr	r3, [fp, #-20]	; 0xffffffec
   6226c:	cmp	r3, #0
   62270:	beq	62300 <__assert_fail@plt+0x4fc14>
   62274:	ldr	r2, [fp, #-288]	; 0xfffffee0
   62278:	ldr	r3, [fp, #-292]	; 0xfffffedc
   6227c:	cmp	r2, r3
   62280:	bcs	622f0 <__assert_fail@plt+0x4fc04>
   62284:	ldr	r2, [fp, #-292]	; 0xfffffedc
   62288:	ldr	r3, [fp, #-288]	; 0xfffffee0
   6228c:	sub	r3, r2, r3
   62290:	str	r3, [fp, #-300]	; 0xfffffed4
   62294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62298:	cmp	r3, #48	; 0x30
   6229c:	beq	622ac <__assert_fail@plt+0x4fbc0>
   622a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   622a4:	cmp	r3, #43	; 0x2b
   622a8:	bne	622d0 <__assert_fail@plt+0x4fbe4>
   622ac:	ldr	r2, [fp, #-300]	; 0xfffffed4
   622b0:	mov	r1, #48	; 0x30
   622b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   622b8:	bl	12434 <memset@plt>
   622bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   622c0:	ldr	r3, [fp, #-300]	; 0xfffffed4
   622c4:	add	r3, r2, r3
   622c8:	str	r3, [fp, #-20]	; 0xffffffec
   622cc:	b	622f0 <__assert_fail@plt+0x4fc04>
   622d0:	ldr	r2, [fp, #-300]	; 0xfffffed4
   622d4:	mov	r1, #32
   622d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   622dc:	bl	12434 <memset@plt>
   622e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   622e4:	ldr	r3, [fp, #-300]	; 0xfffffed4
   622e8:	add	r3, r2, r3
   622ec:	str	r3, [fp, #-20]	; 0xffffffec
   622f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   622f4:	ldr	r3, [fp, #-288]	; 0xfffffee0
   622f8:	add	r3, r2, r3
   622fc:	str	r3, [fp, #-20]	; 0xffffffec
   62300:	ldr	r2, [fp, #-16]
   62304:	ldr	r3, [fp, #-296]	; 0xfffffed8
   62308:	add	r3, r2, r3
   6230c:	str	r3, [fp, #-16]
   62310:	b	632d8 <__assert_fail@plt+0x50bec>
   62314:	mov	r3, #1
   62318:	str	r3, [fp, #-304]	; 0xfffffed0
   6231c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62320:	cmp	r3, #45	; 0x2d
   62324:	beq	6233c <__assert_fail@plt+0x4fc50>
   62328:	ldr	r3, [fp, #12]
   6232c:	cmp	r3, #0
   62330:	blt	6233c <__assert_fail@plt+0x4fc50>
   62334:	ldr	r3, [fp, #12]
   62338:	b	62340 <__assert_fail@plt+0x4fc54>
   6233c:	mov	r3, #0
   62340:	str	r3, [fp, #-308]	; 0xfffffecc
   62344:	ldr	r2, [fp, #-304]	; 0xfffffed0
   62348:	ldr	r3, [fp, #-308]	; 0xfffffecc
   6234c:	cmp	r2, r3
   62350:	movcs	r3, r2
   62354:	movcc	r3, r3
   62358:	str	r3, [fp, #-312]	; 0xfffffec8
   6235c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   62360:	ldr	r3, [fp, #-16]
   62364:	sub	r2, r2, r3
   62368:	ldr	r3, [fp, #-312]	; 0xfffffec8
   6236c:	cmp	r2, r3
   62370:	bhi	6238c <__assert_fail@plt+0x4fca0>
   62374:	bl	12404 <__errno_location@plt>
   62378:	mov	r2, r0
   6237c:	mov	r3, #34	; 0x22
   62380:	str	r3, [r2]
   62384:	mov	r3, #0
   62388:	b	63334 <__assert_fail@plt+0x50c48>
   6238c:	ldr	r3, [fp, #-20]	; 0xffffffec
   62390:	cmp	r3, #0
   62394:	beq	62430 <__assert_fail@plt+0x4fd44>
   62398:	ldr	r2, [fp, #-304]	; 0xfffffed0
   6239c:	ldr	r3, [fp, #-308]	; 0xfffffecc
   623a0:	cmp	r2, r3
   623a4:	bcs	62414 <__assert_fail@plt+0x4fd28>
   623a8:	ldr	r2, [fp, #-308]	; 0xfffffecc
   623ac:	ldr	r3, [fp, #-304]	; 0xfffffed0
   623b0:	sub	r3, r2, r3
   623b4:	str	r3, [fp, #-316]	; 0xfffffec4
   623b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   623bc:	cmp	r3, #48	; 0x30
   623c0:	beq	623d0 <__assert_fail@plt+0x4fce4>
   623c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   623c8:	cmp	r3, #43	; 0x2b
   623cc:	bne	623f4 <__assert_fail@plt+0x4fd08>
   623d0:	ldr	r2, [fp, #-316]	; 0xfffffec4
   623d4:	mov	r1, #48	; 0x30
   623d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   623dc:	bl	12434 <memset@plt>
   623e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   623e4:	ldr	r3, [fp, #-316]	; 0xfffffec4
   623e8:	add	r3, r2, r3
   623ec:	str	r3, [fp, #-20]	; 0xffffffec
   623f0:	b	62414 <__assert_fail@plt+0x4fd28>
   623f4:	ldr	r2, [fp, #-316]	; 0xfffffec4
   623f8:	mov	r1, #32
   623fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   62400:	bl	12434 <memset@plt>
   62404:	ldr	r2, [fp, #-20]	; 0xffffffec
   62408:	ldr	r3, [fp, #-316]	; 0xfffffec4
   6240c:	add	r3, r2, r3
   62410:	str	r3, [fp, #-20]	; 0xffffffec
   62414:	ldr	r3, [fp, #-20]	; 0xffffffec
   62418:	mov	r2, #10
   6241c:	strb	r2, [r3]
   62420:	ldr	r2, [fp, #-20]	; 0xffffffec
   62424:	ldr	r3, [fp, #-304]	; 0xfffffed0
   62428:	add	r3, r2, r3
   6242c:	str	r3, [fp, #-20]	; 0xffffffec
   62430:	ldr	r2, [fp, #-16]
   62434:	ldr	r3, [fp, #-312]	; 0xfffffec8
   62438:	add	r3, r2, r3
   6243c:	str	r3, [fp, #-16]
   62440:	b	632d8 <__assert_fail@plt+0x50bec>
   62444:	mov	r3, #1
   62448:	strb	r3, [fp, #-61]	; 0xffffffc3
   6244c:	mov	r3, #112	; 0x70
   62450:	str	r3, [fp, #-76]	; 0xffffffb4
   62454:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   62458:	cmp	r3, #0
   6245c:	beq	614a8 <__assert_fail@plt+0x4edbc>
   62460:	mov	r3, #0
   62464:	strb	r3, [fp, #-62]	; 0xffffffc2
   62468:	mov	r3, #1
   6246c:	strb	r3, [fp, #-61]	; 0xffffffc3
   62470:	b	614a8 <__assert_fail@plt+0x4edbc>
   62474:	mov	r3, #1
   62478:	str	r3, [fp, #-36]	; 0xffffffdc
   6247c:	mov	r3, #0
   62480:	strb	r3, [fp, #-45]	; 0xffffffd3
   62484:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62488:	ldr	r2, [r3, #16]
   6248c:	mov	r3, r2
   62490:	lsl	r3, r3, #2
   62494:	add	r3, r3, r2
   62498:	lsl	r3, r3, #1
   6249c:	add	r3, r3, r2
   624a0:	asr	r3, r3, #5
   624a4:	add	r3, r3, #1
   624a8:	str	r3, [fp, #-44]	; 0xffffffd4
   624ac:	b	618f4 <__assert_fail@plt+0x4f208>
   624b0:	ldr	r3, [pc, #-3072]	; 618b8 <__assert_fail@plt+0x4f1cc>
   624b4:	str	r3, [fp, #-56]	; 0xffffffc8
   624b8:	b	612a0 <__assert_fail@plt+0x4ebb4>
   624bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   624c0:	cmp	r3, #69	; 0x45
   624c4:	beq	6310c <__assert_fail@plt+0x50a20>
   624c8:	mov	r3, #2
   624cc:	str	r3, [fp, #-36]	; 0xffffffdc
   624d0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   624d4:	ldr	r3, [r3]
   624d8:	str	r3, [fp, #-40]	; 0xffffffd8
   624dc:	b	618e0 <__assert_fail@plt+0x4f1f4>
   624e0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   624e4:	sub	ip, fp, #1424	; 0x590
   624e8:	sub	ip, ip, #4
   624ec:	mov	lr, r3
   624f0:	ldm	lr!, {r0, r1, r2, r3}
   624f4:	stmia	ip!, {r0, r1, r2, r3}
   624f8:	ldm	lr!, {r0, r1, r2, r3}
   624fc:	stmia	ip!, {r0, r1, r2, r3}
   62500:	ldm	lr, {r0, r1, r2}
   62504:	stm	ip, {r0, r1, r2}
   62508:	mvn	r3, #0
   6250c:	str	r3, [fp, #-1400]	; 0xfffffa88
   62510:	sub	r3, fp, #1424	; 0x590
   62514:	sub	r3, r3, #4
   62518:	mov	r1, r3
   6251c:	ldr	r0, [fp, #20]
   62520:	bl	5e580 <__assert_fail@plt+0x4be94>
   62524:	str	r0, [fp, #-100]	; 0xffffff9c
   62528:	ldr	r3, [fp, #-1400]	; 0xfffffa88
   6252c:	cmp	r3, #0
   62530:	bge	6254c <__assert_fail@plt+0x4fe60>
   62534:	bl	12404 <__errno_location@plt>
   62538:	mov	r2, r0
   6253c:	mov	r3, #75	; 0x4b
   62540:	str	r3, [r2]
   62544:	mov	r3, #0
   62548:	b	63334 <__assert_fail@plt+0x50c48>
   6254c:	sub	r3, fp, #396	; 0x18c
   62550:	add	r3, r3, #14
   62554:	str	r3, [fp, #-60]	; 0xffffffc4
   62558:	ldr	r3, [fp, #-100]	; 0xffffff9c
   6255c:	lsr	r3, r3, #31
   62560:	strb	r3, [fp, #-45]	; 0xffffffd3
   62564:	ldr	r2, [fp, #-100]	; 0xffffff9c
   62568:	ldr	r3, [pc, #-3252]	; 618bc <__assert_fail@plt+0x4f1d0>
   6256c:	smull	r1, r3, r3, r2
   62570:	asr	r1, r3, #2
   62574:	asr	r3, r2, #31
   62578:	sub	r1, r1, r3
   6257c:	mov	r3, r1
   62580:	lsl	r3, r3, #2
   62584:	add	r3, r3, r1
   62588:	lsl	r3, r3, #1
   6258c:	sub	r3, r2, r3
   62590:	str	r3, [fp, #-216]	; 0xffffff28
   62594:	ldr	r3, [fp, #-100]	; 0xffffff9c
   62598:	ldr	r2, [pc, #-3300]	; 618bc <__assert_fail@plt+0x4f1d0>
   6259c:	smull	r1, r2, r2, r3
   625a0:	asr	r2, r2, #2
   625a4:	asr	r3, r3, #31
   625a8:	sub	r3, r2, r3
   625ac:	str	r3, [fp, #-100]	; 0xffffff9c
   625b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   625b4:	sub	r3, r3, #1
   625b8:	str	r3, [fp, #-60]	; 0xffffffc4
   625bc:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   625c0:	cmp	r3, #0
   625c4:	beq	625dc <__assert_fail@plt+0x4fef0>
   625c8:	ldr	r3, [fp, #-216]	; 0xffffff28
   625cc:	uxtb	r3, r3
   625d0:	rsb	r3, r3, #48	; 0x30
   625d4:	uxtb	r3, r3
   625d8:	b	625ec <__assert_fail@plt+0x4ff00>
   625dc:	ldr	r3, [fp, #-216]	; 0xffffff28
   625e0:	uxtb	r3, r3
   625e4:	add	r3, r3, #48	; 0x30
   625e8:	uxtb	r3, r3
   625ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   625f0:	strb	r3, [r2]
   625f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   625f8:	cmp	r3, #0
   625fc:	bne	62564 <__assert_fail@plt+0x4fe78>
   62600:	mov	r3, #1
   62604:	str	r3, [fp, #-36]	; 0xffffffdc
   62608:	mov	r3, #0
   6260c:	strb	r3, [fp, #-46]	; 0xffffffd2
   62610:	b	619ec <__assert_fail@plt+0x4f300>
   62614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62618:	cmp	r3, #79	; 0x4f
   6261c:	bne	614b0 <__assert_fail@plt+0x4edc4>
   62620:	b	63148 <__assert_fail@plt+0x50a5c>
   62624:	ldr	r3, [pc, #-3436]	; 618c0 <__assert_fail@plt+0x4f1d4>
   62628:	str	r3, [fp, #-56]	; 0xffffffc8
   6262c:	b	612a0 <__assert_fail@plt+0x4ebb4>
   62630:	mov	r3, #1
   62634:	str	r3, [fp, #-320]	; 0xfffffec0
   62638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6263c:	cmp	r3, #45	; 0x2d
   62640:	beq	62658 <__assert_fail@plt+0x4ff6c>
   62644:	ldr	r3, [fp, #12]
   62648:	cmp	r3, #0
   6264c:	blt	62658 <__assert_fail@plt+0x4ff6c>
   62650:	ldr	r3, [fp, #12]
   62654:	b	6265c <__assert_fail@plt+0x4ff70>
   62658:	mov	r3, #0
   6265c:	str	r3, [fp, #-324]	; 0xfffffebc
   62660:	ldr	r2, [fp, #-320]	; 0xfffffec0
   62664:	ldr	r3, [fp, #-324]	; 0xfffffebc
   62668:	cmp	r2, r3
   6266c:	movcs	r3, r2
   62670:	movcc	r3, r3
   62674:	str	r3, [fp, #-328]	; 0xfffffeb8
   62678:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   6267c:	ldr	r3, [fp, #-16]
   62680:	sub	r2, r2, r3
   62684:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   62688:	cmp	r2, r3
   6268c:	bhi	626a8 <__assert_fail@plt+0x4ffbc>
   62690:	bl	12404 <__errno_location@plt>
   62694:	mov	r2, r0
   62698:	mov	r3, #34	; 0x22
   6269c:	str	r3, [r2]
   626a0:	mov	r3, #0
   626a4:	b	63334 <__assert_fail@plt+0x50c48>
   626a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   626ac:	cmp	r3, #0
   626b0:	beq	6274c <__assert_fail@plt+0x50060>
   626b4:	ldr	r2, [fp, #-320]	; 0xfffffec0
   626b8:	ldr	r3, [fp, #-324]	; 0xfffffebc
   626bc:	cmp	r2, r3
   626c0:	bcs	62730 <__assert_fail@plt+0x50044>
   626c4:	ldr	r2, [fp, #-324]	; 0xfffffebc
   626c8:	ldr	r3, [fp, #-320]	; 0xfffffec0
   626cc:	sub	r3, r2, r3
   626d0:	str	r3, [fp, #-332]	; 0xfffffeb4
   626d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   626d8:	cmp	r3, #48	; 0x30
   626dc:	beq	626ec <__assert_fail@plt+0x50000>
   626e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   626e4:	cmp	r3, #43	; 0x2b
   626e8:	bne	62710 <__assert_fail@plt+0x50024>
   626ec:	ldr	r2, [fp, #-332]	; 0xfffffeb4
   626f0:	mov	r1, #48	; 0x30
   626f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   626f8:	bl	12434 <memset@plt>
   626fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   62700:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   62704:	add	r3, r2, r3
   62708:	str	r3, [fp, #-20]	; 0xffffffec
   6270c:	b	62730 <__assert_fail@plt+0x50044>
   62710:	ldr	r2, [fp, #-332]	; 0xfffffeb4
   62714:	mov	r1, #32
   62718:	ldr	r0, [fp, #-20]	; 0xffffffec
   6271c:	bl	12434 <memset@plt>
   62720:	ldr	r2, [fp, #-20]	; 0xffffffec
   62724:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   62728:	add	r3, r2, r3
   6272c:	str	r3, [fp, #-20]	; 0xffffffec
   62730:	ldr	r3, [fp, #-20]	; 0xffffffec
   62734:	mov	r2, #9
   62738:	strb	r2, [r3]
   6273c:	ldr	r2, [fp, #-20]	; 0xffffffec
   62740:	ldr	r3, [fp, #-320]	; 0xfffffec0
   62744:	add	r3, r2, r3
   62748:	str	r3, [fp, #-20]	; 0xffffffec
   6274c:	ldr	r2, [fp, #-16]
   62750:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   62754:	add	r3, r2, r3
   62758:	str	r3, [fp, #-16]
   6275c:	b	632d8 <__assert_fail@plt+0x50bec>
   62760:	mov	r3, #1
   62764:	str	r3, [fp, #-36]	; 0xffffffdc
   62768:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6276c:	ldr	r3, [r3, #24]
   62770:	add	r2, r3, #6
   62774:	ldr	r3, [pc, #-3768]	; 618c4 <__assert_fail@plt+0x4f1d8>
   62778:	smull	r1, r3, r3, r2
   6277c:	add	r3, r3, r2
   62780:	asr	r1, r3, #2
   62784:	asr	r3, r2, #31
   62788:	sub	r1, r1, r3
   6278c:	mov	r3, r1
   62790:	lsl	r3, r3, #3
   62794:	sub	r3, r3, r1
   62798:	sub	r1, r2, r3
   6279c:	add	r3, r1, #1
   627a0:	str	r3, [fp, #-40]	; 0xffffffd8
   627a4:	b	618e0 <__assert_fail@plt+0x4f1f4>
   627a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   627ac:	cmp	r3, #69	; 0x45
   627b0:	beq	63114 <__assert_fail@plt+0x50a28>
   627b4:	mov	r3, #2
   627b8:	str	r3, [fp, #-36]	; 0xffffffdc
   627bc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   627c0:	ldr	r2, [r3, #28]
   627c4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   627c8:	ldr	r3, [r3, #24]
   627cc:	sub	r3, r2, r3
   627d0:	add	r3, r3, #7
   627d4:	ldr	r2, [pc, #-3864]	; 618c4 <__assert_fail@plt+0x4f1d8>
   627d8:	smull	r1, r2, r2, r3
   627dc:	add	r2, r2, r3
   627e0:	asr	r2, r2, #2
   627e4:	asr	r3, r3, #31
   627e8:	sub	r3, r2, r3
   627ec:	str	r3, [fp, #-40]	; 0xffffffd8
   627f0:	b	618e0 <__assert_fail@plt+0x4f1f4>
   627f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   627f8:	cmp	r3, #69	; 0x45
   627fc:	beq	6311c <__assert_fail@plt+0x50a30>
   62800:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62804:	ldr	r2, [r3, #20]
   62808:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6280c:	ldr	r3, [r3, #20]
   62810:	cmp	r3, #0
   62814:	bge	62820 <__assert_fail@plt+0x50134>
   62818:	mov	r3, #300	; 0x12c
   6281c:	b	62824 <__assert_fail@plt+0x50138>
   62820:	mvn	r3, #99	; 0x63
   62824:	add	r3, r2, r3
   62828:	str	r3, [fp, #-184]	; 0xffffff48
   6282c:	mov	r3, #0
   62830:	str	r3, [fp, #-104]	; 0xffffff98
   62834:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62838:	ldr	r2, [r3, #28]
   6283c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62840:	ldr	r3, [r3, #24]
   62844:	mov	r1, r3
   62848:	mov	r0, r2
   6284c:	bl	60820 <__assert_fail@plt+0x4e134>
   62850:	str	r0, [fp, #-108]	; 0xffffff94
   62854:	ldr	r3, [fp, #-108]	; 0xffffff94
   62858:	cmp	r3, #0
   6285c:	bge	62918 <__assert_fail@plt+0x5022c>
   62860:	mvn	r3, #0
   62864:	str	r3, [fp, #-104]	; 0xffffff98
   62868:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6286c:	ldr	r1, [r3, #28]
   62870:	ldr	r3, [fp, #-184]	; 0xffffff48
   62874:	sub	r3, r3, #1
   62878:	and	r3, r3, #3
   6287c:	cmp	r3, #0
   62880:	bne	628ec <__assert_fail@plt+0x50200>
   62884:	ldr	r3, [fp, #-184]	; 0xffffff48
   62888:	sub	r2, r3, #1
   6288c:	ldr	r3, [pc, #-4044]	; 618c8 <__assert_fail@plt+0x4f1dc>
   62890:	smull	r0, r3, r3, r2
   62894:	asr	r0, r3, #5
   62898:	asr	r3, r2, #31
   6289c:	sub	r3, r0, r3
   628a0:	mov	r0, #100	; 0x64
   628a4:	mul	r3, r0, r3
   628a8:	sub	r3, r2, r3
   628ac:	cmp	r3, #0
   628b0:	bne	628e4 <__assert_fail@plt+0x501f8>
   628b4:	ldr	r3, [fp, #-184]	; 0xffffff48
   628b8:	sub	r2, r3, #1
   628bc:	ldr	r3, [pc, #-4092]	; 618c8 <__assert_fail@plt+0x4f1dc>
   628c0:	smull	r0, r3, r3, r2
   628c4:	asr	r0, r3, #7
   628c8:	asr	r3, r2, #31
   628cc:	sub	r3, r0, r3
   628d0:	mov	r0, #400	; 0x190
   628d4:	mul	r3, r0, r3
   628d8:	sub	r3, r2, r3
   628dc:	cmp	r3, #0
   628e0:	bne	628ec <__assert_fail@plt+0x50200>
   628e4:	mov	r3, #1
   628e8:	b	628f0 <__assert_fail@plt+0x50204>
   628ec:	mov	r3, #0
   628f0:	add	r3, r3, #364	; 0x16c
   628f4:	add	r3, r3, #1
   628f8:	add	r2, r1, r3
   628fc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62900:	ldr	r3, [r3, #24]
   62904:	mov	r1, r3
   62908:	mov	r0, r2
   6290c:	bl	60820 <__assert_fail@plt+0x4e134>
   62910:	str	r0, [fp, #-108]	; 0xffffff94
   62914:	b	629d4 <__assert_fail@plt+0x502e8>
   62918:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6291c:	ldr	r1, [r3, #28]
   62920:	ldr	r3, [fp, #-184]	; 0xffffff48
   62924:	and	r3, r3, #3
   62928:	cmp	r3, #0
   6292c:	bne	62990 <__assert_fail@plt+0x502a4>
   62930:	ldr	r2, [fp, #-184]	; 0xffffff48
   62934:	ldr	r3, [pc, #2564]	; 63340 <__assert_fail@plt+0x50c54>
   62938:	smull	r0, r3, r3, r2
   6293c:	asr	r0, r3, #5
   62940:	asr	r3, r2, #31
   62944:	sub	r3, r0, r3
   62948:	mov	r0, #100	; 0x64
   6294c:	mul	r3, r0, r3
   62950:	sub	r3, r2, r3
   62954:	cmp	r3, #0
   62958:	bne	62988 <__assert_fail@plt+0x5029c>
   6295c:	ldr	r2, [fp, #-184]	; 0xffffff48
   62960:	ldr	r3, [pc, #2520]	; 63340 <__assert_fail@plt+0x50c54>
   62964:	smull	r0, r3, r3, r2
   62968:	asr	r0, r3, #7
   6296c:	asr	r3, r2, #31
   62970:	sub	r3, r0, r3
   62974:	mov	r0, #400	; 0x190
   62978:	mul	r3, r0, r3
   6297c:	sub	r3, r2, r3
   62980:	cmp	r3, #0
   62984:	bne	62990 <__assert_fail@plt+0x502a4>
   62988:	mov	r3, #1
   6298c:	b	62994 <__assert_fail@plt+0x502a8>
   62990:	mov	r3, #0
   62994:	add	r3, r3, #364	; 0x16c
   62998:	add	r3, r3, #1
   6299c:	sub	r2, r1, r3
   629a0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   629a4:	ldr	r3, [r3, #24]
   629a8:	mov	r1, r3
   629ac:	mov	r0, r2
   629b0:	bl	60820 <__assert_fail@plt+0x4e134>
   629b4:	str	r0, [fp, #-188]	; 0xffffff44
   629b8:	ldr	r3, [fp, #-188]	; 0xffffff44
   629bc:	cmp	r3, #0
   629c0:	blt	629d4 <__assert_fail@plt+0x502e8>
   629c4:	mov	r3, #1
   629c8:	str	r3, [fp, #-104]	; 0xffffff98
   629cc:	ldr	r3, [fp, #-188]	; 0xffffff44
   629d0:	str	r3, [fp, #-108]	; 0xffffff94
   629d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   629d8:	ldrb	r3, [r3]
   629dc:	cmp	r3, #71	; 0x47
   629e0:	beq	62a9c <__assert_fail@plt+0x503b0>
   629e4:	cmp	r3, #103	; 0x67
   629e8:	bne	62aec <__assert_fail@plt+0x50400>
   629ec:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   629f0:	ldr	r2, [r3, #20]
   629f4:	ldr	r3, [pc, #2372]	; 63340 <__assert_fail@plt+0x50c54>
   629f8:	smull	r1, r3, r3, r2
   629fc:	asr	r1, r3, #5
   62a00:	asr	r3, r2, #31
   62a04:	sub	r3, r1, r3
   62a08:	mov	r1, #100	; 0x64
   62a0c:	mul	r3, r1, r3
   62a10:	sub	r3, r2, r3
   62a14:	ldr	r2, [fp, #-104]	; 0xffffff98
   62a18:	add	r3, r3, r2
   62a1c:	ldr	r2, [pc, #2332]	; 63340 <__assert_fail@plt+0x50c54>
   62a20:	smull	r1, r2, r2, r3
   62a24:	asr	r1, r2, #5
   62a28:	asr	r2, r3, #31
   62a2c:	sub	r2, r1, r2
   62a30:	mov	r1, #100	; 0x64
   62a34:	mul	r2, r1, r2
   62a38:	sub	r3, r3, r2
   62a3c:	str	r3, [fp, #-192]	; 0xffffff40
   62a40:	mov	r3, #2
   62a44:	str	r3, [fp, #-36]	; 0xffffffdc
   62a48:	mov	r3, #0
   62a4c:	strb	r3, [fp, #-45]	; 0xffffffd3
   62a50:	ldr	r3, [fp, #-192]	; 0xffffff40
   62a54:	cmp	r3, #0
   62a58:	bge	62a90 <__assert_fail@plt+0x503a4>
   62a5c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62a60:	ldr	r2, [r3, #20]
   62a64:	ldr	r1, [fp, #-104]	; 0xffffff98
   62a68:	ldr	r3, [pc, #2260]	; 63344 <__assert_fail@plt+0x50c58>
   62a6c:	sub	r3, r3, r1
   62a70:	cmp	r2, r3
   62a74:	bge	62a84 <__assert_fail@plt+0x50398>
   62a78:	ldr	r3, [fp, #-192]	; 0xffffff40
   62a7c:	rsb	r3, r3, #0
   62a80:	b	62a94 <__assert_fail@plt+0x503a8>
   62a84:	ldr	r3, [fp, #-192]	; 0xffffff40
   62a88:	add	r3, r3, #100	; 0x64
   62a8c:	b	62a94 <__assert_fail@plt+0x503a8>
   62a90:	ldr	r3, [fp, #-192]	; 0xffffff40
   62a94:	str	r3, [fp, #-44]	; 0xffffffd4
   62a98:	b	61828 <__assert_fail@plt+0x4f13c>
   62a9c:	mov	r3, #4
   62aa0:	str	r3, [fp, #-36]	; 0xffffffdc
   62aa4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62aa8:	ldr	r2, [r3, #20]
   62aac:	ldr	r1, [fp, #-104]	; 0xffffff98
   62ab0:	ldr	r3, [pc, #2188]	; 63344 <__assert_fail@plt+0x50c58>
   62ab4:	sub	r3, r3, r1
   62ab8:	cmp	r2, r3
   62abc:	movlt	r3, #1
   62ac0:	movge	r3, #0
   62ac4:	strb	r3, [fp, #-45]	; 0xffffffd3
   62ac8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62acc:	ldr	r3, [r3, #20]
   62ad0:	mov	r2, r3
   62ad4:	ldr	r3, [fp, #-104]	; 0xffffff98
   62ad8:	add	r3, r2, r3
   62adc:	add	r3, r3, #1888	; 0x760
   62ae0:	add	r3, r3, #12
   62ae4:	str	r3, [fp, #-44]	; 0xffffffd4
   62ae8:	b	61828 <__assert_fail@plt+0x4f13c>
   62aec:	mov	r3, #2
   62af0:	str	r3, [fp, #-36]	; 0xffffffdc
   62af4:	ldr	r3, [fp, #-108]	; 0xffffff94
   62af8:	ldr	r2, [pc, #2120]	; 63348 <__assert_fail@plt+0x50c5c>
   62afc:	smull	r1, r2, r2, r3
   62b00:	add	r2, r2, r3
   62b04:	asr	r2, r2, #2
   62b08:	asr	r3, r3, #31
   62b0c:	sub	r3, r2, r3
   62b10:	add	r3, r3, #1
   62b14:	str	r3, [fp, #-40]	; 0xffffffd8
   62b18:	b	618e0 <__assert_fail@plt+0x4f1f4>
   62b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62b20:	cmp	r3, #69	; 0x45
   62b24:	beq	63124 <__assert_fail@plt+0x50a38>
   62b28:	mov	r3, #2
   62b2c:	str	r3, [fp, #-36]	; 0xffffffdc
   62b30:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62b34:	ldr	r0, [r3, #28]
   62b38:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62b3c:	ldr	r3, [r3, #24]
   62b40:	add	r2, r3, #6
   62b44:	ldr	r3, [pc, #2044]	; 63348 <__assert_fail@plt+0x50c5c>
   62b48:	smull	r1, r3, r3, r2
   62b4c:	add	r3, r3, r2
   62b50:	asr	r1, r3, #2
   62b54:	asr	r3, r2, #31
   62b58:	sub	r1, r1, r3
   62b5c:	mov	r3, r1
   62b60:	lsl	r3, r3, #3
   62b64:	sub	r3, r3, r1
   62b68:	sub	r1, r2, r3
   62b6c:	sub	r3, r0, r1
   62b70:	add	r3, r3, #7
   62b74:	ldr	r2, [pc, #1996]	; 63348 <__assert_fail@plt+0x50c5c>
   62b78:	smull	r1, r2, r2, r3
   62b7c:	add	r2, r2, r3
   62b80:	asr	r2, r2, #2
   62b84:	asr	r3, r3, #31
   62b88:	sub	r3, r2, r3
   62b8c:	str	r3, [fp, #-40]	; 0xffffffd8
   62b90:	b	618e0 <__assert_fail@plt+0x4f1f4>
   62b94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62b98:	cmp	r3, #69	; 0x45
   62b9c:	beq	6312c <__assert_fail@plt+0x50a40>
   62ba0:	mov	r3, #1
   62ba4:	str	r3, [fp, #-36]	; 0xffffffdc
   62ba8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62bac:	ldr	r3, [r3, #24]
   62bb0:	str	r3, [fp, #-40]	; 0xffffffd8
   62bb4:	b	618e0 <__assert_fail@plt+0x4f1f4>
   62bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62bbc:	cmp	r3, #69	; 0x45
   62bc0:	beq	614b8 <__assert_fail@plt+0x4edcc>
   62bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62bc8:	cmp	r3, #79	; 0x4f
   62bcc:	beq	63134 <__assert_fail@plt+0x50a48>
   62bd0:	mov	r3, #4
   62bd4:	str	r3, [fp, #-36]	; 0xffffffdc
   62bd8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62bdc:	ldr	r3, [r3, #20]
   62be0:	ldr	r2, [pc, #1884]	; 63344 <__assert_fail@plt+0x50c58>
   62be4:	cmp	r3, r2
   62be8:	movlt	r3, #1
   62bec:	movge	r3, #0
   62bf0:	strb	r3, [fp, #-45]	; 0xffffffd3
   62bf4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62bf8:	ldr	r3, [r3, #20]
   62bfc:	add	r3, r3, #1888	; 0x760
   62c00:	add	r3, r3, #12
   62c04:	str	r3, [fp, #-44]	; 0xffffffd4
   62c08:	b	61828 <__assert_fail@plt+0x4f13c>
   62c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62c10:	cmp	r3, #69	; 0x45
   62c14:	beq	614c0 <__assert_fail@plt+0x4edd4>
   62c18:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62c1c:	ldr	r3, [r3, #20]
   62c20:	ldr	r2, [pc, #1816]	; 63340 <__assert_fail@plt+0x50c54>
   62c24:	smull	r1, r2, r2, r3
   62c28:	asr	r1, r2, #5
   62c2c:	asr	r2, r3, #31
   62c30:	sub	r2, r1, r2
   62c34:	mov	r1, #100	; 0x64
   62c38:	mul	r2, r1, r2
   62c3c:	sub	r3, r3, r2
   62c40:	str	r3, [fp, #-112]	; 0xffffff90
   62c44:	ldr	r3, [fp, #-112]	; 0xffffff90
   62c48:	cmp	r3, #0
   62c4c:	bge	62c7c <__assert_fail@plt+0x50590>
   62c50:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62c54:	ldr	r3, [r3, #20]
   62c58:	ldr	r2, [pc, #1764]	; 63344 <__assert_fail@plt+0x50c58>
   62c5c:	cmp	r3, r2
   62c60:	bge	62c70 <__assert_fail@plt+0x50584>
   62c64:	ldr	r3, [fp, #-112]	; 0xffffff90
   62c68:	rsb	r3, r3, #0
   62c6c:	b	62c78 <__assert_fail@plt+0x5058c>
   62c70:	ldr	r3, [fp, #-112]	; 0xffffff90
   62c74:	add	r3, r3, #100	; 0x64
   62c78:	str	r3, [fp, #-112]	; 0xffffff90
   62c7c:	mov	r3, #2
   62c80:	str	r3, [fp, #-36]	; 0xffffffdc
   62c84:	mov	r3, #0
   62c88:	strb	r3, [fp, #-45]	; 0xffffffd3
   62c8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   62c90:	str	r3, [fp, #-44]	; 0xffffffd4
   62c94:	b	61828 <__assert_fail@plt+0x4f13c>
   62c98:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   62c9c:	cmp	r3, #0
   62ca0:	beq	62cb4 <__assert_fail@plt+0x505c8>
   62ca4:	mov	r3, #0
   62ca8:	strb	r3, [fp, #-62]	; 0xffffffc2
   62cac:	mov	r3, #1
   62cb0:	strb	r3, [fp, #-61]	; 0xffffffc3
   62cb4:	ldr	r0, [fp, #-12]
   62cb8:	bl	123bc <strlen@plt>
   62cbc:	str	r0, [fp, #-336]	; 0xfffffeb0
   62cc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62cc4:	cmp	r3, #45	; 0x2d
   62cc8:	beq	62ce0 <__assert_fail@plt+0x505f4>
   62ccc:	ldr	r3, [fp, #12]
   62cd0:	cmp	r3, #0
   62cd4:	blt	62ce0 <__assert_fail@plt+0x505f4>
   62cd8:	ldr	r3, [fp, #12]
   62cdc:	b	62ce4 <__assert_fail@plt+0x505f8>
   62ce0:	mov	r3, #0
   62ce4:	str	r3, [fp, #-340]	; 0xfffffeac
   62ce8:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   62cec:	ldr	r3, [fp, #-340]	; 0xfffffeac
   62cf0:	cmp	r2, r3
   62cf4:	movcs	r3, r2
   62cf8:	movcc	r3, r3
   62cfc:	str	r3, [fp, #-344]	; 0xfffffea8
   62d00:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   62d04:	ldr	r3, [fp, #-16]
   62d08:	sub	r2, r2, r3
   62d0c:	ldr	r3, [fp, #-344]	; 0xfffffea8
   62d10:	cmp	r2, r3
   62d14:	bhi	62d30 <__assert_fail@plt+0x50644>
   62d18:	bl	12404 <__errno_location@plt>
   62d1c:	mov	r2, r0
   62d20:	mov	r3, #34	; 0x22
   62d24:	str	r3, [r2]
   62d28:	mov	r3, #0
   62d2c:	b	63334 <__assert_fail@plt+0x50c48>
   62d30:	ldr	r3, [fp, #-20]	; 0xffffffec
   62d34:	cmp	r3, #0
   62d38:	beq	62e18 <__assert_fail@plt+0x5072c>
   62d3c:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   62d40:	ldr	r3, [fp, #-340]	; 0xfffffeac
   62d44:	cmp	r2, r3
   62d48:	bcs	62db8 <__assert_fail@plt+0x506cc>
   62d4c:	ldr	r2, [fp, #-340]	; 0xfffffeac
   62d50:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   62d54:	sub	r3, r2, r3
   62d58:	str	r3, [fp, #-348]	; 0xfffffea4
   62d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62d60:	cmp	r3, #48	; 0x30
   62d64:	beq	62d74 <__assert_fail@plt+0x50688>
   62d68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62d6c:	cmp	r3, #43	; 0x2b
   62d70:	bne	62d98 <__assert_fail@plt+0x506ac>
   62d74:	ldr	r2, [fp, #-348]	; 0xfffffea4
   62d78:	mov	r1, #48	; 0x30
   62d7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62d80:	bl	12434 <memset@plt>
   62d84:	ldr	r2, [fp, #-20]	; 0xffffffec
   62d88:	ldr	r3, [fp, #-348]	; 0xfffffea4
   62d8c:	add	r3, r2, r3
   62d90:	str	r3, [fp, #-20]	; 0xffffffec
   62d94:	b	62db8 <__assert_fail@plt+0x506cc>
   62d98:	ldr	r2, [fp, #-348]	; 0xfffffea4
   62d9c:	mov	r1, #32
   62da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   62da4:	bl	12434 <memset@plt>
   62da8:	ldr	r2, [fp, #-20]	; 0xffffffec
   62dac:	ldr	r3, [fp, #-348]	; 0xfffffea4
   62db0:	add	r3, r2, r3
   62db4:	str	r3, [fp, #-20]	; 0xffffffec
   62db8:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   62dbc:	cmp	r3, #0
   62dc0:	beq	62dd8 <__assert_fail@plt+0x506ec>
   62dc4:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   62dc8:	ldr	r1, [fp, #-12]
   62dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   62dd0:	bl	60740 <__assert_fail@plt+0x4e054>
   62dd4:	b	62e08 <__assert_fail@plt+0x5071c>
   62dd8:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   62ddc:	cmp	r3, #0
   62de0:	beq	62df8 <__assert_fail@plt+0x5070c>
   62de4:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   62de8:	ldr	r1, [fp, #-12]
   62dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   62df0:	bl	607b0 <__assert_fail@plt+0x4e0c4>
   62df4:	b	62e08 <__assert_fail@plt+0x5071c>
   62df8:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   62dfc:	ldr	r1, [fp, #-12]
   62e00:	ldr	r0, [fp, #-20]	; 0xffffffec
   62e04:	bl	120f8 <memcpy@plt>
   62e08:	ldr	r2, [fp, #-20]	; 0xffffffec
   62e0c:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   62e10:	add	r3, r2, r3
   62e14:	str	r3, [fp, #-20]	; 0xffffffec
   62e18:	ldr	r2, [fp, #-16]
   62e1c:	ldr	r3, [fp, #-344]	; 0xfffffea8
   62e20:	add	r3, r2, r3
   62e24:	str	r3, [fp, #-16]
   62e28:	b	632d8 <__assert_fail@plt+0x50bec>
   62e2c:	mov	r3, #1
   62e30:	str	r3, [fp, #-68]	; 0xffffffbc
   62e34:	b	62e44 <__assert_fail@plt+0x50758>
   62e38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   62e3c:	add	r3, r3, #1
   62e40:	str	r3, [fp, #-68]	; 0xffffffbc
   62e44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   62e48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   62e4c:	add	r3, r2, r3
   62e50:	ldrb	r3, [r3]
   62e54:	cmp	r3, #58	; 0x3a
   62e58:	beq	62e38 <__assert_fail@plt+0x5074c>
   62e5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   62e60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   62e64:	add	r3, r2, r3
   62e68:	ldrb	r3, [r3]
   62e6c:	cmp	r3, #122	; 0x7a
   62e70:	bne	6313c <__assert_fail@plt+0x50a50>
   62e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   62e78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   62e7c:	add	r3, r2, r3
   62e80:	str	r3, [fp, #-24]	; 0xffffffe8
   62e84:	b	62e90 <__assert_fail@plt+0x507a4>
   62e88:	mov	r3, #0
   62e8c:	str	r3, [fp, #-68]	; 0xffffffbc
   62e90:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62e94:	ldr	r3, [r3, #32]
   62e98:	cmp	r3, #0
   62e9c:	blt	632d4 <__assert_fail@plt+0x50be8>
   62ea0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62ea4:	ldr	r3, [r3, #36]	; 0x24
   62ea8:	str	r3, [fp, #-168]	; 0xffffff58
   62eac:	ldr	r3, [fp, #-168]	; 0xffffff58
   62eb0:	cmp	r3, #0
   62eb4:	blt	62ed4 <__assert_fail@plt+0x507e8>
   62eb8:	ldr	r3, [fp, #-168]	; 0xffffff58
   62ebc:	cmp	r3, #0
   62ec0:	bne	62edc <__assert_fail@plt+0x507f0>
   62ec4:	ldr	r3, [fp, #-12]
   62ec8:	ldrb	r3, [r3]
   62ecc:	cmp	r3, #45	; 0x2d
   62ed0:	bne	62edc <__assert_fail@plt+0x507f0>
   62ed4:	mov	r3, #1
   62ed8:	b	62ee0 <__assert_fail@plt+0x507f4>
   62edc:	mov	r3, #0
   62ee0:	strb	r3, [fp, #-45]	; 0xffffffd3
   62ee4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   62ee8:	and	r3, r3, #1
   62eec:	strb	r3, [fp, #-45]	; 0xffffffd3
   62ef0:	ldr	r3, [fp, #-168]	; 0xffffff58
   62ef4:	ldr	r2, [pc, #1104]	; 6334c <__assert_fail@plt+0x50c60>
   62ef8:	smull	r1, r2, r2, r3
   62efc:	add	r2, r2, r3
   62f00:	asr	r2, r2, #11
   62f04:	asr	r3, r3, #31
   62f08:	sub	r3, r2, r3
   62f0c:	str	r3, [fp, #-172]	; 0xffffff54
   62f10:	ldr	r3, [fp, #-168]	; 0xffffff58
   62f14:	ldr	r2, [pc, #1076]	; 63350 <__assert_fail@plt+0x50c64>
   62f18:	smull	r1, r2, r2, r3
   62f1c:	add	r2, r2, r3
   62f20:	asr	r2, r2, #5
   62f24:	asr	r3, r3, #31
   62f28:	sub	r2, r2, r3
   62f2c:	ldr	r3, [pc, #1052]	; 63350 <__assert_fail@plt+0x50c64>
   62f30:	smull	r1, r3, r3, r2
   62f34:	add	r3, r3, r2
   62f38:	asr	r1, r3, #5
   62f3c:	asr	r3, r2, #31
   62f40:	sub	r1, r1, r3
   62f44:	mov	r3, r1
   62f48:	lsl	r3, r3, #4
   62f4c:	sub	r3, r3, r1
   62f50:	lsl	r3, r3, #2
   62f54:	sub	r3, r2, r3
   62f58:	str	r3, [fp, #-176]	; 0xffffff50
   62f5c:	ldr	r2, [fp, #-168]	; 0xffffff58
   62f60:	ldr	r3, [pc, #1000]	; 63350 <__assert_fail@plt+0x50c64>
   62f64:	smull	r1, r3, r3, r2
   62f68:	add	r3, r3, r2
   62f6c:	asr	r1, r3, #5
   62f70:	asr	r3, r2, #31
   62f74:	sub	r1, r1, r3
   62f78:	mov	r3, r1
   62f7c:	lsl	r3, r3, #4
   62f80:	sub	r3, r3, r1
   62f84:	lsl	r3, r3, #2
   62f88:	sub	r3, r2, r3
   62f8c:	str	r3, [fp, #-180]	; 0xffffff4c
   62f90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   62f94:	cmp	r3, #3
   62f98:	ldrls	pc, [pc, r3, lsl #2]
   62f9c:	b	63144 <__assert_fail@plt+0x50a58>
   62fa0:			; <UNDEFINED> instruction: 0x00062fb0
   62fa4:	andeq	r2, r6, r0, ror #31
   62fa8:	andeq	r3, r6, r0, lsl r0
   62fac:	andeq	r3, r6, ip, asr #32
   62fb0:	mov	r3, #5
   62fb4:	str	r3, [fp, #-36]	; 0xffffffdc
   62fb8:	mov	r3, #0
   62fbc:	str	r3, [fp, #-52]	; 0xffffffcc
   62fc0:	ldr	r3, [fp, #-172]	; 0xffffff54
   62fc4:	mov	r2, #100	; 0x64
   62fc8:	mul	r2, r2, r3
   62fcc:	ldr	r3, [fp, #-176]	; 0xffffff50
   62fd0:	add	r3, r2, r3
   62fd4:	str	r3, [fp, #-44]	; 0xffffffd4
   62fd8:	b	6181c <__assert_fail@plt+0x4f130>
   62fdc:	nop			; (mov r0, r0)
   62fe0:	mov	r3, #6
   62fe4:	str	r3, [fp, #-36]	; 0xffffffdc
   62fe8:	mov	r3, #4
   62fec:	str	r3, [fp, #-52]	; 0xffffffcc
   62ff0:	ldr	r3, [fp, #-172]	; 0xffffff54
   62ff4:	mov	r2, #100	; 0x64
   62ff8:	mul	r2, r2, r3
   62ffc:	ldr	r3, [fp, #-176]	; 0xffffff50
   63000:	add	r3, r2, r3
   63004:	str	r3, [fp, #-44]	; 0xffffffd4
   63008:	b	6181c <__assert_fail@plt+0x4f130>
   6300c:	nop			; (mov r0, r0)
   63010:	mov	r3, #9
   63014:	str	r3, [fp, #-36]	; 0xffffffdc
   63018:	mov	r3, #20
   6301c:	str	r3, [fp, #-52]	; 0xffffffcc
   63020:	ldr	r3, [fp, #-172]	; 0xffffff54
   63024:	ldr	r2, [pc, #808]	; 63354 <__assert_fail@plt+0x50c68>
   63028:	mul	r2, r2, r3
   6302c:	ldr	r3, [fp, #-176]	; 0xffffff50
   63030:	mov	r1, #100	; 0x64
   63034:	mul	r3, r1, r3
   63038:	add	r2, r2, r3
   6303c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   63040:	add	r3, r2, r3
   63044:	str	r3, [fp, #-44]	; 0xffffffd4
   63048:	b	6181c <__assert_fail@plt+0x4f130>
   6304c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   63050:	cmp	r3, #0
   63054:	bne	6300c <__assert_fail@plt+0x50920>
   63058:	ldr	r3, [fp, #-176]	; 0xffffff50
   6305c:	cmp	r3, #0
   63060:	bne	62fdc <__assert_fail@plt+0x508f0>
   63064:	mov	r3, #3
   63068:	str	r3, [fp, #-36]	; 0xffffffdc
   6306c:	mov	r3, #0
   63070:	str	r3, [fp, #-52]	; 0xffffffcc
   63074:	ldr	r3, [fp, #-172]	; 0xffffff54
   63078:	str	r3, [fp, #-44]	; 0xffffffd4
   6307c:	b	6181c <__assert_fail@plt+0x4f130>
   63080:	nop			; (mov r0, r0)
   63084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   63088:	sub	r3, r3, #1
   6308c:	str	r3, [fp, #-24]	; 0xffffffe8
   63090:	b	63148 <__assert_fail@plt+0x50a5c>
   63094:	nop			; (mov r0, r0)
   63098:	b	63148 <__assert_fail@plt+0x50a5c>
   6309c:	nop			; (mov r0, r0)
   630a0:	b	63148 <__assert_fail@plt+0x50a5c>
   630a4:	nop			; (mov r0, r0)
   630a8:	b	63148 <__assert_fail@plt+0x50a5c>
   630ac:	nop			; (mov r0, r0)
   630b0:	b	63148 <__assert_fail@plt+0x50a5c>
   630b4:	nop			; (mov r0, r0)
   630b8:	b	63148 <__assert_fail@plt+0x50a5c>
   630bc:	nop			; (mov r0, r0)
   630c0:	b	63148 <__assert_fail@plt+0x50a5c>
   630c4:	nop			; (mov r0, r0)
   630c8:	b	63148 <__assert_fail@plt+0x50a5c>
   630cc:	nop			; (mov r0, r0)
   630d0:	b	63148 <__assert_fail@plt+0x50a5c>
   630d4:	nop			; (mov r0, r0)
   630d8:	b	63148 <__assert_fail@plt+0x50a5c>
   630dc:	nop			; (mov r0, r0)
   630e0:	b	63148 <__assert_fail@plt+0x50a5c>
   630e4:	nop			; (mov r0, r0)
   630e8:	b	63148 <__assert_fail@plt+0x50a5c>
   630ec:	nop			; (mov r0, r0)
   630f0:	b	63148 <__assert_fail@plt+0x50a5c>
   630f4:	nop			; (mov r0, r0)
   630f8:	b	63148 <__assert_fail@plt+0x50a5c>
   630fc:	nop			; (mov r0, r0)
   63100:	b	63148 <__assert_fail@plt+0x50a5c>
   63104:	nop			; (mov r0, r0)
   63108:	b	63148 <__assert_fail@plt+0x50a5c>
   6310c:	nop			; (mov r0, r0)
   63110:	b	63148 <__assert_fail@plt+0x50a5c>
   63114:	nop			; (mov r0, r0)
   63118:	b	63148 <__assert_fail@plt+0x50a5c>
   6311c:	nop			; (mov r0, r0)
   63120:	b	63148 <__assert_fail@plt+0x50a5c>
   63124:	nop			; (mov r0, r0)
   63128:	b	63148 <__assert_fail@plt+0x50a5c>
   6312c:	nop			; (mov r0, r0)
   63130:	b	63148 <__assert_fail@plt+0x50a5c>
   63134:	nop			; (mov r0, r0)
   63138:	b	63148 <__assert_fail@plt+0x50a5c>
   6313c:	nop			; (mov r0, r0)
   63140:	b	63148 <__assert_fail@plt+0x50a5c>
   63144:	nop			; (mov r0, r0)
   63148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6314c:	ldr	r3, [fp, #-120]	; 0xffffff88
   63150:	sub	r3, r2, r3
   63154:	add	r3, r3, #1
   63158:	str	r3, [fp, #-352]	; 0xfffffea0
   6315c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63160:	cmp	r3, #45	; 0x2d
   63164:	beq	6317c <__assert_fail@plt+0x50a90>
   63168:	ldr	r3, [fp, #12]
   6316c:	cmp	r3, #0
   63170:	blt	6317c <__assert_fail@plt+0x50a90>
   63174:	ldr	r3, [fp, #12]
   63178:	b	63180 <__assert_fail@plt+0x50a94>
   6317c:	mov	r3, #0
   63180:	str	r3, [fp, #-356]	; 0xfffffe9c
   63184:	ldr	r2, [fp, #-352]	; 0xfffffea0
   63188:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   6318c:	cmp	r2, r3
   63190:	movcs	r3, r2
   63194:	movcc	r3, r3
   63198:	str	r3, [fp, #-360]	; 0xfffffe98
   6319c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   631a0:	ldr	r3, [fp, #-16]
   631a4:	sub	r2, r2, r3
   631a8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   631ac:	cmp	r2, r3
   631b0:	bhi	631cc <__assert_fail@plt+0x50ae0>
   631b4:	bl	12404 <__errno_location@plt>
   631b8:	mov	r2, r0
   631bc:	mov	r3, #34	; 0x22
   631c0:	str	r3, [r2]
   631c4:	mov	r3, #0
   631c8:	b	63334 <__assert_fail@plt+0x50c48>
   631cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   631d0:	cmp	r3, #0
   631d4:	beq	632b4 <__assert_fail@plt+0x50bc8>
   631d8:	ldr	r2, [fp, #-352]	; 0xfffffea0
   631dc:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   631e0:	cmp	r2, r3
   631e4:	bcs	63254 <__assert_fail@plt+0x50b68>
   631e8:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   631ec:	ldr	r3, [fp, #-352]	; 0xfffffea0
   631f0:	sub	r3, r2, r3
   631f4:	str	r3, [fp, #-364]	; 0xfffffe94
   631f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   631fc:	cmp	r3, #48	; 0x30
   63200:	beq	63210 <__assert_fail@plt+0x50b24>
   63204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63208:	cmp	r3, #43	; 0x2b
   6320c:	bne	63234 <__assert_fail@plt+0x50b48>
   63210:	ldr	r2, [fp, #-364]	; 0xfffffe94
   63214:	mov	r1, #48	; 0x30
   63218:	ldr	r0, [fp, #-20]	; 0xffffffec
   6321c:	bl	12434 <memset@plt>
   63220:	ldr	r2, [fp, #-20]	; 0xffffffec
   63224:	ldr	r3, [fp, #-364]	; 0xfffffe94
   63228:	add	r3, r2, r3
   6322c:	str	r3, [fp, #-20]	; 0xffffffec
   63230:	b	63254 <__assert_fail@plt+0x50b68>
   63234:	ldr	r2, [fp, #-364]	; 0xfffffe94
   63238:	mov	r1, #32
   6323c:	ldr	r0, [fp, #-20]	; 0xffffffec
   63240:	bl	12434 <memset@plt>
   63244:	ldr	r2, [fp, #-20]	; 0xffffffec
   63248:	ldr	r3, [fp, #-364]	; 0xfffffe94
   6324c:	add	r3, r2, r3
   63250:	str	r3, [fp, #-20]	; 0xffffffec
   63254:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   63258:	cmp	r3, #0
   6325c:	beq	63274 <__assert_fail@plt+0x50b88>
   63260:	ldr	r2, [fp, #-352]	; 0xfffffea0
   63264:	ldr	r1, [fp, #-120]	; 0xffffff88
   63268:	ldr	r0, [fp, #-20]	; 0xffffffec
   6326c:	bl	60740 <__assert_fail@plt+0x4e054>
   63270:	b	632a4 <__assert_fail@plt+0x50bb8>
   63274:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   63278:	cmp	r3, #0
   6327c:	beq	63294 <__assert_fail@plt+0x50ba8>
   63280:	ldr	r2, [fp, #-352]	; 0xfffffea0
   63284:	ldr	r1, [fp, #-120]	; 0xffffff88
   63288:	ldr	r0, [fp, #-20]	; 0xffffffec
   6328c:	bl	607b0 <__assert_fail@plt+0x4e0c4>
   63290:	b	632a4 <__assert_fail@plt+0x50bb8>
   63294:	ldr	r2, [fp, #-352]	; 0xfffffea0
   63298:	ldr	r1, [fp, #-120]	; 0xffffff88
   6329c:	ldr	r0, [fp, #-20]	; 0xffffffec
   632a0:	bl	120f8 <memcpy@plt>
   632a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   632a8:	ldr	r3, [fp, #-352]	; 0xfffffea0
   632ac:	add	r3, r2, r3
   632b0:	str	r3, [fp, #-20]	; 0xffffffec
   632b4:	ldr	r2, [fp, #-16]
   632b8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   632bc:	add	r3, r2, r3
   632c0:	str	r3, [fp, #-16]
   632c4:	nop			; (mov r0, r0)
   632c8:	b	632d8 <__assert_fail@plt+0x50bec>
   632cc:	nop			; (mov r0, r0)
   632d0:	b	632d8 <__assert_fail@plt+0x50bec>
   632d4:	nop			; (mov r0, r0)
   632d8:	mvn	r3, #0
   632dc:	str	r3, [fp, #12]
   632e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   632e4:	add	r3, r3, #1
   632e8:	str	r3, [fp, #-24]	; 0xffffffe8
   632ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   632f0:	ldrb	r3, [r3]
   632f4:	cmp	r3, #0
   632f8:	bne	609c8 <__assert_fail@plt+0x4e2dc>
   632fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   63300:	cmp	r3, #0
   63304:	beq	63320 <__assert_fail@plt+0x50c34>
   63308:	ldr	r3, [fp, #-1436]	; 0xfffffa64
   6330c:	cmp	r3, #0
   63310:	beq	63320 <__assert_fail@plt+0x50c34>
   63314:	ldr	r3, [fp, #-20]	; 0xffffffec
   63318:	mov	r2, #0
   6331c:	strb	r2, [r3]
   63320:	bl	12404 <__errno_location@plt>
   63324:	mov	r2, r0
   63328:	ldr	r3, [fp, #-116]	; 0xffffff8c
   6332c:	str	r3, [r2]
   63330:	ldr	r3, [fp, #-16]
   63334:	mov	r0, r3
   63338:	sub	sp, fp, #4
   6333c:	pop	{fp, pc}
   63340:	mvnpl	r8, pc, lsl r5
   63344:			; <UNDEFINED> instruction: 0xfffff894
   63348:	subls	r2, r9, #-1828716544	; 0x93000000
   6334c:			; <UNDEFINED> instruction: 0x91a2b3c5
   63350:	stmhi	r8, {r0, r3, r7, fp, pc}
   63354:	andeq	r2, r0, r0, lsl r7
   63358:	push	{fp, lr}
   6335c:	add	fp, sp, #4
   63360:	sub	sp, sp, #32
   63364:	str	r0, [fp, #-24]	; 0xffffffe8
   63368:	str	r1, [fp, #-28]	; 0xffffffe4
   6336c:	str	r2, [fp, #-32]	; 0xffffffe0
   63370:	str	r3, [fp, #-36]	; 0xffffffdc
   63374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   63378:	orr	r3, r3, #540672	; 0x84000
   6337c:	orr	r3, r3, #2304	; 0x900
   63380:	str	r3, [fp, #-8]
   63384:	ldr	r2, [fp, #-8]
   63388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6338c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63390:	bl	2feb0 <__assert_fail@plt+0x1d7c4>
   63394:	str	r0, [fp, #-12]
   63398:	ldr	r3, [fp, #-12]
   6339c:	cmp	r3, #0
   633a0:	bge	633ac <__assert_fail@plt+0x50cc0>
   633a4:	mov	r3, #0
   633a8:	b	63400 <__assert_fail@plt+0x50d14>
   633ac:	ldr	r0, [fp, #-12]
   633b0:	bl	125a8 <fdopendir@plt>
   633b4:	str	r0, [fp, #-16]
   633b8:	ldr	r3, [fp, #-16]
   633bc:	cmp	r3, #0
   633c0:	beq	633d4 <__assert_fail@plt+0x50ce8>
   633c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   633c8:	ldr	r2, [fp, #-12]
   633cc:	str	r2, [r3]
   633d0:	b	633fc <__assert_fail@plt+0x50d10>
   633d4:	bl	12404 <__errno_location@plt>
   633d8:	mov	r3, r0
   633dc:	ldr	r3, [r3]
   633e0:	str	r3, [fp, #-20]	; 0xffffffec
   633e4:	ldr	r0, [fp, #-12]
   633e8:	bl	126a4 <close@plt>
   633ec:	bl	12404 <__errno_location@plt>
   633f0:	mov	r2, r0
   633f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   633f8:	str	r3, [r2]
   633fc:	ldr	r3, [fp, #-16]
   63400:	mov	r0, r3
   63404:	sub	sp, fp, #4
   63408:	pop	{fp, pc}
   6340c:	push	{fp, lr}
   63410:	add	fp, sp, #4
   63414:	sub	sp, sp, #16
   63418:	str	r0, [fp, #-16]
   6341c:	mov	r1, #0
   63420:	ldr	r0, [fp, #-16]
   63424:	bl	12518 <setlocale@plt>
   63428:	str	r0, [fp, #-8]
   6342c:	ldr	r3, [fp, #-8]
   63430:	mov	r0, r3
   63434:	sub	sp, fp, #4
   63438:	pop	{fp, pc}
   6343c:	push	{fp, lr}
   63440:	add	fp, sp, #4
   63444:	sub	sp, sp, #24
   63448:	str	r0, [fp, #-16]
   6344c:	str	r1, [fp, #-20]	; 0xffffffec
   63450:	str	r2, [fp, #-24]	; 0xffffffe8
   63454:	ldr	r0, [fp, #-16]
   63458:	bl	6340c <__assert_fail@plt+0x50d20>
   6345c:	str	r0, [fp, #-8]
   63460:	ldr	r3, [fp, #-8]
   63464:	cmp	r3, #0
   63468:	bne	6348c <__assert_fail@plt+0x50da0>
   6346c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   63470:	cmp	r3, #0
   63474:	beq	63484 <__assert_fail@plt+0x50d98>
   63478:	ldr	r3, [fp, #-20]	; 0xffffffec
   6347c:	mov	r2, #0
   63480:	strb	r2, [r3]
   63484:	mov	r3, #22
   63488:	b	63508 <__assert_fail@plt+0x50e1c>
   6348c:	ldr	r0, [fp, #-8]
   63490:	bl	123bc <strlen@plt>
   63494:	str	r0, [fp, #-12]
   63498:	ldr	r2, [fp, #-12]
   6349c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   634a0:	cmp	r2, r3
   634a4:	bcs	634c8 <__assert_fail@plt+0x50ddc>
   634a8:	ldr	r3, [fp, #-12]
   634ac:	add	r3, r3, #1
   634b0:	mov	r2, r3
   634b4:	ldr	r1, [fp, #-8]
   634b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   634bc:	bl	120f8 <memcpy@plt>
   634c0:	mov	r3, #0
   634c4:	b	63508 <__assert_fail@plt+0x50e1c>
   634c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   634cc:	cmp	r3, #0
   634d0:	beq	63504 <__assert_fail@plt+0x50e18>
   634d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   634d8:	sub	r3, r3, #1
   634dc:	mov	r2, r3
   634e0:	ldr	r1, [fp, #-8]
   634e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   634e8:	bl	120f8 <memcpy@plt>
   634ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   634f0:	sub	r3, r3, #1
   634f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   634f8:	add	r3, r2, r3
   634fc:	mov	r2, #0
   63500:	strb	r2, [r3]
   63504:	mov	r3, #34	; 0x22
   63508:	mov	r0, r3
   6350c:	sub	sp, fp, #4
   63510:	pop	{fp, pc}
   63514:	push	{fp, lr}
   63518:	add	fp, sp, #4
   6351c:	sub	sp, sp, #16
   63520:	str	r0, [fp, #-8]
   63524:	str	r1, [fp, #-12]
   63528:	str	r2, [fp, #-16]
   6352c:	ldr	r2, [fp, #-16]
   63530:	ldr	r1, [fp, #-12]
   63534:	ldr	r0, [fp, #-8]
   63538:	bl	6343c <__assert_fail@plt+0x50d50>
   6353c:	mov	r3, r0
   63540:	mov	r0, r3
   63544:	sub	sp, fp, #4
   63548:	pop	{fp, pc}
   6354c:	push	{fp, lr}
   63550:	add	fp, sp, #4
   63554:	sub	sp, sp, #8
   63558:	str	r0, [fp, #-8]
   6355c:	ldr	r0, [fp, #-8]
   63560:	bl	6340c <__assert_fail@plt+0x50d20>
   63564:	mov	r3, r0
   63568:	mov	r0, r3
   6356c:	sub	sp, fp, #4
   63570:	pop	{fp, pc}
   63574:	subs	r2, r1, #1
   63578:	bxeq	lr
   6357c:	bcc	63754 <__assert_fail@plt+0x51068>
   63580:	cmp	r0, r1
   63584:	bls	63738 <__assert_fail@plt+0x5104c>
   63588:	tst	r1, r2
   6358c:	beq	63744 <__assert_fail@plt+0x51058>
   63590:	clz	r3, r0
   63594:	clz	r2, r1
   63598:	sub	r3, r2, r3
   6359c:	rsbs	r3, r3, #31
   635a0:	addne	r3, r3, r3, lsl #1
   635a4:	mov	r2, #0
   635a8:	addne	pc, pc, r3, lsl #2
   635ac:	nop			; (mov r0, r0)
   635b0:	cmp	r0, r1, lsl #31
   635b4:	adc	r2, r2, r2
   635b8:	subcs	r0, r0, r1, lsl #31
   635bc:	cmp	r0, r1, lsl #30
   635c0:	adc	r2, r2, r2
   635c4:	subcs	r0, r0, r1, lsl #30
   635c8:	cmp	r0, r1, lsl #29
   635cc:	adc	r2, r2, r2
   635d0:	subcs	r0, r0, r1, lsl #29
   635d4:	cmp	r0, r1, lsl #28
   635d8:	adc	r2, r2, r2
   635dc:	subcs	r0, r0, r1, lsl #28
   635e0:	cmp	r0, r1, lsl #27
   635e4:	adc	r2, r2, r2
   635e8:	subcs	r0, r0, r1, lsl #27
   635ec:	cmp	r0, r1, lsl #26
   635f0:	adc	r2, r2, r2
   635f4:	subcs	r0, r0, r1, lsl #26
   635f8:	cmp	r0, r1, lsl #25
   635fc:	adc	r2, r2, r2
   63600:	subcs	r0, r0, r1, lsl #25
   63604:	cmp	r0, r1, lsl #24
   63608:	adc	r2, r2, r2
   6360c:	subcs	r0, r0, r1, lsl #24
   63610:	cmp	r0, r1, lsl #23
   63614:	adc	r2, r2, r2
   63618:	subcs	r0, r0, r1, lsl #23
   6361c:	cmp	r0, r1, lsl #22
   63620:	adc	r2, r2, r2
   63624:	subcs	r0, r0, r1, lsl #22
   63628:	cmp	r0, r1, lsl #21
   6362c:	adc	r2, r2, r2
   63630:	subcs	r0, r0, r1, lsl #21
   63634:	cmp	r0, r1, lsl #20
   63638:	adc	r2, r2, r2
   6363c:	subcs	r0, r0, r1, lsl #20
   63640:	cmp	r0, r1, lsl #19
   63644:	adc	r2, r2, r2
   63648:	subcs	r0, r0, r1, lsl #19
   6364c:	cmp	r0, r1, lsl #18
   63650:	adc	r2, r2, r2
   63654:	subcs	r0, r0, r1, lsl #18
   63658:	cmp	r0, r1, lsl #17
   6365c:	adc	r2, r2, r2
   63660:	subcs	r0, r0, r1, lsl #17
   63664:	cmp	r0, r1, lsl #16
   63668:	adc	r2, r2, r2
   6366c:	subcs	r0, r0, r1, lsl #16
   63670:	cmp	r0, r1, lsl #15
   63674:	adc	r2, r2, r2
   63678:	subcs	r0, r0, r1, lsl #15
   6367c:	cmp	r0, r1, lsl #14
   63680:	adc	r2, r2, r2
   63684:	subcs	r0, r0, r1, lsl #14
   63688:	cmp	r0, r1, lsl #13
   6368c:	adc	r2, r2, r2
   63690:	subcs	r0, r0, r1, lsl #13
   63694:	cmp	r0, r1, lsl #12
   63698:	adc	r2, r2, r2
   6369c:	subcs	r0, r0, r1, lsl #12
   636a0:	cmp	r0, r1, lsl #11
   636a4:	adc	r2, r2, r2
   636a8:	subcs	r0, r0, r1, lsl #11
   636ac:	cmp	r0, r1, lsl #10
   636b0:	adc	r2, r2, r2
   636b4:	subcs	r0, r0, r1, lsl #10
   636b8:	cmp	r0, r1, lsl #9
   636bc:	adc	r2, r2, r2
   636c0:	subcs	r0, r0, r1, lsl #9
   636c4:	cmp	r0, r1, lsl #8
   636c8:	adc	r2, r2, r2
   636cc:	subcs	r0, r0, r1, lsl #8
   636d0:	cmp	r0, r1, lsl #7
   636d4:	adc	r2, r2, r2
   636d8:	subcs	r0, r0, r1, lsl #7
   636dc:	cmp	r0, r1, lsl #6
   636e0:	adc	r2, r2, r2
   636e4:	subcs	r0, r0, r1, lsl #6
   636e8:	cmp	r0, r1, lsl #5
   636ec:	adc	r2, r2, r2
   636f0:	subcs	r0, r0, r1, lsl #5
   636f4:	cmp	r0, r1, lsl #4
   636f8:	adc	r2, r2, r2
   636fc:	subcs	r0, r0, r1, lsl #4
   63700:	cmp	r0, r1, lsl #3
   63704:	adc	r2, r2, r2
   63708:	subcs	r0, r0, r1, lsl #3
   6370c:	cmp	r0, r1, lsl #2
   63710:	adc	r2, r2, r2
   63714:	subcs	r0, r0, r1, lsl #2
   63718:	cmp	r0, r1, lsl #1
   6371c:	adc	r2, r2, r2
   63720:	subcs	r0, r0, r1, lsl #1
   63724:	cmp	r0, r1
   63728:	adc	r2, r2, r2
   6372c:	subcs	r0, r0, r1
   63730:	mov	r0, r2
   63734:	bx	lr
   63738:	moveq	r0, #1
   6373c:	movne	r0, #0
   63740:	bx	lr
   63744:	clz	r2, r1
   63748:	rsb	r2, r2, #31
   6374c:	lsr	r0, r0, r2
   63750:	bx	lr
   63754:	cmp	r0, #0
   63758:	mvnne	r0, #0
   6375c:	b	63e88 <__assert_fail@plt+0x5179c>
   63760:	cmp	r1, #0
   63764:	beq	63754 <__assert_fail@plt+0x51068>
   63768:	push	{r0, r1, lr}
   6376c:	bl	63574 <__assert_fail@plt+0x50e88>
   63770:	pop	{r1, r2, lr}
   63774:	mul	r3, r2, r0
   63778:	sub	r1, r1, r3
   6377c:	bx	lr
   63780:	cmp	r1, #0
   63784:	beq	63990 <__assert_fail@plt+0x512a4>
   63788:	eor	ip, r0, r1
   6378c:	rsbmi	r1, r1, #0
   63790:	subs	r2, r1, #1
   63794:	beq	6395c <__assert_fail@plt+0x51270>
   63798:	movs	r3, r0
   6379c:	rsbmi	r3, r0, #0
   637a0:	cmp	r3, r1
   637a4:	bls	63968 <__assert_fail@plt+0x5127c>
   637a8:	tst	r1, r2
   637ac:	beq	63978 <__assert_fail@plt+0x5128c>
   637b0:	clz	r2, r3
   637b4:	clz	r0, r1
   637b8:	sub	r2, r0, r2
   637bc:	rsbs	r2, r2, #31
   637c0:	addne	r2, r2, r2, lsl #1
   637c4:	mov	r0, #0
   637c8:	addne	pc, pc, r2, lsl #2
   637cc:	nop			; (mov r0, r0)
   637d0:	cmp	r3, r1, lsl #31
   637d4:	adc	r0, r0, r0
   637d8:	subcs	r3, r3, r1, lsl #31
   637dc:	cmp	r3, r1, lsl #30
   637e0:	adc	r0, r0, r0
   637e4:	subcs	r3, r3, r1, lsl #30
   637e8:	cmp	r3, r1, lsl #29
   637ec:	adc	r0, r0, r0
   637f0:	subcs	r3, r3, r1, lsl #29
   637f4:	cmp	r3, r1, lsl #28
   637f8:	adc	r0, r0, r0
   637fc:	subcs	r3, r3, r1, lsl #28
   63800:	cmp	r3, r1, lsl #27
   63804:	adc	r0, r0, r0
   63808:	subcs	r3, r3, r1, lsl #27
   6380c:	cmp	r3, r1, lsl #26
   63810:	adc	r0, r0, r0
   63814:	subcs	r3, r3, r1, lsl #26
   63818:	cmp	r3, r1, lsl #25
   6381c:	adc	r0, r0, r0
   63820:	subcs	r3, r3, r1, lsl #25
   63824:	cmp	r3, r1, lsl #24
   63828:	adc	r0, r0, r0
   6382c:	subcs	r3, r3, r1, lsl #24
   63830:	cmp	r3, r1, lsl #23
   63834:	adc	r0, r0, r0
   63838:	subcs	r3, r3, r1, lsl #23
   6383c:	cmp	r3, r1, lsl #22
   63840:	adc	r0, r0, r0
   63844:	subcs	r3, r3, r1, lsl #22
   63848:	cmp	r3, r1, lsl #21
   6384c:	adc	r0, r0, r0
   63850:	subcs	r3, r3, r1, lsl #21
   63854:	cmp	r3, r1, lsl #20
   63858:	adc	r0, r0, r0
   6385c:	subcs	r3, r3, r1, lsl #20
   63860:	cmp	r3, r1, lsl #19
   63864:	adc	r0, r0, r0
   63868:	subcs	r3, r3, r1, lsl #19
   6386c:	cmp	r3, r1, lsl #18
   63870:	adc	r0, r0, r0
   63874:	subcs	r3, r3, r1, lsl #18
   63878:	cmp	r3, r1, lsl #17
   6387c:	adc	r0, r0, r0
   63880:	subcs	r3, r3, r1, lsl #17
   63884:	cmp	r3, r1, lsl #16
   63888:	adc	r0, r0, r0
   6388c:	subcs	r3, r3, r1, lsl #16
   63890:	cmp	r3, r1, lsl #15
   63894:	adc	r0, r0, r0
   63898:	subcs	r3, r3, r1, lsl #15
   6389c:	cmp	r3, r1, lsl #14
   638a0:	adc	r0, r0, r0
   638a4:	subcs	r3, r3, r1, lsl #14
   638a8:	cmp	r3, r1, lsl #13
   638ac:	adc	r0, r0, r0
   638b0:	subcs	r3, r3, r1, lsl #13
   638b4:	cmp	r3, r1, lsl #12
   638b8:	adc	r0, r0, r0
   638bc:	subcs	r3, r3, r1, lsl #12
   638c0:	cmp	r3, r1, lsl #11
   638c4:	adc	r0, r0, r0
   638c8:	subcs	r3, r3, r1, lsl #11
   638cc:	cmp	r3, r1, lsl #10
   638d0:	adc	r0, r0, r0
   638d4:	subcs	r3, r3, r1, lsl #10
   638d8:	cmp	r3, r1, lsl #9
   638dc:	adc	r0, r0, r0
   638e0:	subcs	r3, r3, r1, lsl #9
   638e4:	cmp	r3, r1, lsl #8
   638e8:	adc	r0, r0, r0
   638ec:	subcs	r3, r3, r1, lsl #8
   638f0:	cmp	r3, r1, lsl #7
   638f4:	adc	r0, r0, r0
   638f8:	subcs	r3, r3, r1, lsl #7
   638fc:	cmp	r3, r1, lsl #6
   63900:	adc	r0, r0, r0
   63904:	subcs	r3, r3, r1, lsl #6
   63908:	cmp	r3, r1, lsl #5
   6390c:	adc	r0, r0, r0
   63910:	subcs	r3, r3, r1, lsl #5
   63914:	cmp	r3, r1, lsl #4
   63918:	adc	r0, r0, r0
   6391c:	subcs	r3, r3, r1, lsl #4
   63920:	cmp	r3, r1, lsl #3
   63924:	adc	r0, r0, r0
   63928:	subcs	r3, r3, r1, lsl #3
   6392c:	cmp	r3, r1, lsl #2
   63930:	adc	r0, r0, r0
   63934:	subcs	r3, r3, r1, lsl #2
   63938:	cmp	r3, r1, lsl #1
   6393c:	adc	r0, r0, r0
   63940:	subcs	r3, r3, r1, lsl #1
   63944:	cmp	r3, r1
   63948:	adc	r0, r0, r0
   6394c:	subcs	r3, r3, r1
   63950:	cmp	ip, #0
   63954:	rsbmi	r0, r0, #0
   63958:	bx	lr
   6395c:	teq	ip, r0
   63960:	rsbmi	r0, r0, #0
   63964:	bx	lr
   63968:	movcc	r0, #0
   6396c:	asreq	r0, ip, #31
   63970:	orreq	r0, r0, #1
   63974:	bx	lr
   63978:	clz	r2, r1
   6397c:	rsb	r2, r2, #31
   63980:	cmp	ip, #0
   63984:	lsr	r0, r3, r2
   63988:	rsbmi	r0, r0, #0
   6398c:	bx	lr
   63990:	cmp	r0, #0
   63994:	mvngt	r0, #-2147483648	; 0x80000000
   63998:	movlt	r0, #-2147483648	; 0x80000000
   6399c:	b	63e88 <__assert_fail@plt+0x5179c>
   639a0:	cmp	r1, #0
   639a4:	beq	63990 <__assert_fail@plt+0x512a4>
   639a8:	push	{r0, r1, lr}
   639ac:	bl	63788 <__assert_fail@plt+0x5109c>
   639b0:	pop	{r1, r2, lr}
   639b4:	mul	r3, r2, r0
   639b8:	sub	r1, r1, r3
   639bc:	bx	lr
   639c0:	eor	r1, r1, #-2147483648	; 0x80000000
   639c4:	b	639cc <__assert_fail@plt+0x512e0>
   639c8:	eor	r3, r3, #-2147483648	; 0x80000000
   639cc:	push	{r4, r5, lr}
   639d0:	lsl	r4, r1, #1
   639d4:	lsl	r5, r3, #1
   639d8:	teq	r4, r5
   639dc:	teqeq	r0, r2
   639e0:	orrsne	ip, r4, r0
   639e4:	orrsne	ip, r5, r2
   639e8:	mvnsne	ip, r4, asr #21
   639ec:	mvnsne	ip, r5, asr #21
   639f0:	beq	63bdc <__assert_fail@plt+0x514f0>
   639f4:	lsr	r4, r4, #21
   639f8:	rsbs	r5, r4, r5, lsr #21
   639fc:	rsblt	r5, r5, #0
   63a00:	ble	63a20 <__assert_fail@plt+0x51334>
   63a04:	add	r4, r4, r5
   63a08:	eor	r2, r0, r2
   63a0c:	eor	r3, r1, r3
   63a10:	eor	r0, r2, r0
   63a14:	eor	r1, r3, r1
   63a18:	eor	r2, r0, r2
   63a1c:	eor	r3, r1, r3
   63a20:	cmp	r5, #54	; 0x36
   63a24:	pophi	{r4, r5, pc}
   63a28:	tst	r1, #-2147483648	; 0x80000000
   63a2c:	lsl	r1, r1, #12
   63a30:	mov	ip, #1048576	; 0x100000
   63a34:	orr	r1, ip, r1, lsr #12
   63a38:	beq	63a44 <__assert_fail@plt+0x51358>
   63a3c:	rsbs	r0, r0, #0
   63a40:	rsc	r1, r1, #0
   63a44:	tst	r3, #-2147483648	; 0x80000000
   63a48:	lsl	r3, r3, #12
   63a4c:	orr	r3, ip, r3, lsr #12
   63a50:	beq	63a5c <__assert_fail@plt+0x51370>
   63a54:	rsbs	r2, r2, #0
   63a58:	rsc	r3, r3, #0
   63a5c:	teq	r4, r5
   63a60:	beq	63bc4 <__assert_fail@plt+0x514d8>
   63a64:	sub	r4, r4, #1
   63a68:	rsbs	lr, r5, #32
   63a6c:	blt	63a88 <__assert_fail@plt+0x5139c>
   63a70:	lsl	ip, r2, lr
   63a74:	adds	r0, r0, r2, lsr r5
   63a78:	adc	r1, r1, #0
   63a7c:	adds	r0, r0, r3, lsl lr
   63a80:	adcs	r1, r1, r3, asr r5
   63a84:	b	63aa4 <__assert_fail@plt+0x513b8>
   63a88:	sub	r5, r5, #32
   63a8c:	add	lr, lr, #32
   63a90:	cmp	r2, #1
   63a94:	lsl	ip, r3, lr
   63a98:	orrcs	ip, ip, #2
   63a9c:	adds	r0, r0, r3, asr r5
   63aa0:	adcs	r1, r1, r3, asr #31
   63aa4:	and	r5, r1, #-2147483648	; 0x80000000
   63aa8:	bpl	63ab8 <__assert_fail@plt+0x513cc>
   63aac:	rsbs	ip, ip, #0
   63ab0:	rscs	r0, r0, #0
   63ab4:	rsc	r1, r1, #0
   63ab8:	cmp	r1, #1048576	; 0x100000
   63abc:	bcc	63afc <__assert_fail@plt+0x51410>
   63ac0:	cmp	r1, #2097152	; 0x200000
   63ac4:	bcc	63ae4 <__assert_fail@plt+0x513f8>
   63ac8:	lsrs	r1, r1, #1
   63acc:	rrxs	r0, r0
   63ad0:	rrx	ip, ip
   63ad4:	add	r4, r4, #1
   63ad8:	lsl	r2, r4, #21
   63adc:	cmn	r2, #4194304	; 0x400000
   63ae0:	bcs	63c3c <__assert_fail@plt+0x51550>
   63ae4:	cmp	ip, #-2147483648	; 0x80000000
   63ae8:	lsrseq	ip, r0, #1
   63aec:	adcs	r0, r0, #0
   63af0:	adc	r1, r1, r4, lsl #20
   63af4:	orr	r1, r1, r5
   63af8:	pop	{r4, r5, pc}
   63afc:	lsls	ip, ip, #1
   63b00:	adcs	r0, r0, r0
   63b04:	adc	r1, r1, r1
   63b08:	tst	r1, #1048576	; 0x100000
   63b0c:	sub	r4, r4, #1
   63b10:	bne	63ae4 <__assert_fail@plt+0x513f8>
   63b14:	teq	r1, #0
   63b18:	moveq	r1, r0
   63b1c:	moveq	r0, #0
   63b20:	clz	r3, r1
   63b24:	addeq	r3, r3, #32
   63b28:	sub	r3, r3, #11
   63b2c:	subs	r2, r3, #32
   63b30:	bge	63b54 <__assert_fail@plt+0x51468>
   63b34:	adds	r2, r2, #12
   63b38:	ble	63b50 <__assert_fail@plt+0x51464>
   63b3c:	add	ip, r2, #20
   63b40:	rsb	r2, r2, #12
   63b44:	lsl	r0, r1, ip
   63b48:	lsr	r1, r1, r2
   63b4c:	b	63b64 <__assert_fail@plt+0x51478>
   63b50:	add	r2, r2, #20
   63b54:	rsble	ip, r2, #32
   63b58:	lsl	r1, r1, r2
   63b5c:	orrle	r1, r1, r0, lsr ip
   63b60:	lslle	r0, r0, r2
   63b64:	subs	r4, r4, r3
   63b68:	addge	r1, r1, r4, lsl #20
   63b6c:	orrge	r1, r1, r5
   63b70:	popge	{r4, r5, pc}
   63b74:	mvn	r4, r4
   63b78:	subs	r4, r4, #31
   63b7c:	bge	63bb8 <__assert_fail@plt+0x514cc>
   63b80:	adds	r4, r4, #12
   63b84:	bgt	63ba0 <__assert_fail@plt+0x514b4>
   63b88:	add	r4, r4, #20
   63b8c:	rsb	r2, r4, #32
   63b90:	lsr	r0, r0, r4
   63b94:	orr	r0, r0, r1, lsl r2
   63b98:	orr	r1, r5, r1, lsr r4
   63b9c:	pop	{r4, r5, pc}
   63ba0:	rsb	r4, r4, #12
   63ba4:	rsb	r2, r4, #32
   63ba8:	lsr	r0, r0, r2
   63bac:	orr	r0, r0, r1, lsl r4
   63bb0:	mov	r1, r5
   63bb4:	pop	{r4, r5, pc}
   63bb8:	lsr	r0, r1, r4
   63bbc:	mov	r1, r5
   63bc0:	pop	{r4, r5, pc}
   63bc4:	teq	r4, #0
   63bc8:	eor	r3, r3, #1048576	; 0x100000
   63bcc:	eoreq	r1, r1, #1048576	; 0x100000
   63bd0:	addeq	r4, r4, #1
   63bd4:	subne	r5, r5, #1
   63bd8:	b	63a64 <__assert_fail@plt+0x51378>
   63bdc:	mvns	ip, r4, asr #21
   63be0:	mvnsne	ip, r5, asr #21
   63be4:	beq	63c4c <__assert_fail@plt+0x51560>
   63be8:	teq	r4, r5
   63bec:	teqeq	r0, r2
   63bf0:	beq	63c04 <__assert_fail@plt+0x51518>
   63bf4:	orrs	ip, r4, r0
   63bf8:	moveq	r1, r3
   63bfc:	moveq	r0, r2
   63c00:	pop	{r4, r5, pc}
   63c04:	teq	r1, r3
   63c08:	movne	r1, #0
   63c0c:	movne	r0, #0
   63c10:	popne	{r4, r5, pc}
   63c14:	lsrs	ip, r4, #21
   63c18:	bne	63c2c <__assert_fail@plt+0x51540>
   63c1c:	lsls	r0, r0, #1
   63c20:	adcs	r1, r1, r1
   63c24:	orrcs	r1, r1, #-2147483648	; 0x80000000
   63c28:	pop	{r4, r5, pc}
   63c2c:	adds	r4, r4, #4194304	; 0x400000
   63c30:	addcc	r1, r1, #1048576	; 0x100000
   63c34:	popcc	{r4, r5, pc}
   63c38:	and	r5, r1, #-2147483648	; 0x80000000
   63c3c:	orr	r1, r5, #2130706432	; 0x7f000000
   63c40:	orr	r1, r1, #15728640	; 0xf00000
   63c44:	mov	r0, #0
   63c48:	pop	{r4, r5, pc}
   63c4c:	mvns	ip, r4, asr #21
   63c50:	movne	r1, r3
   63c54:	movne	r0, r2
   63c58:	mvnseq	ip, r5, asr #21
   63c5c:	movne	r3, r1
   63c60:	movne	r2, r0
   63c64:	orrs	r4, r0, r1, lsl #12
   63c68:	orrseq	r5, r2, r3, lsl #12
   63c6c:	teqeq	r1, r3
   63c70:	orrne	r1, r1, #524288	; 0x80000
   63c74:	pop	{r4, r5, pc}
   63c78:	teq	r0, #0
   63c7c:	moveq	r1, #0
   63c80:	bxeq	lr
   63c84:	push	{r4, r5, lr}
   63c88:	mov	r4, #1024	; 0x400
   63c8c:	add	r4, r4, #50	; 0x32
   63c90:	mov	r5, #0
   63c94:	mov	r1, #0
   63c98:	b	63b14 <__assert_fail@plt+0x51428>
   63c9c:	teq	r0, #0
   63ca0:	moveq	r1, #0
   63ca4:	bxeq	lr
   63ca8:	push	{r4, r5, lr}
   63cac:	mov	r4, #1024	; 0x400
   63cb0:	add	r4, r4, #50	; 0x32
   63cb4:	ands	r5, r0, #-2147483648	; 0x80000000
   63cb8:	rsbmi	r0, r0, #0
   63cbc:	mov	r1, #0
   63cc0:	b	63b14 <__assert_fail@plt+0x51428>
   63cc4:	lsls	r2, r0, #1
   63cc8:	asr	r1, r2, #3
   63ccc:	rrx	r1, r1
   63cd0:	lsl	r0, r2, #28
   63cd4:	andsne	r3, r2, #-16777216	; 0xff000000
   63cd8:	teqne	r3, #-16777216	; 0xff000000
   63cdc:	eorne	r1, r1, #939524096	; 0x38000000
   63ce0:	bxne	lr
   63ce4:	teq	r2, #0
   63ce8:	teqne	r3, #-16777216	; 0xff000000
   63cec:	bxeq	lr
   63cf0:	push	{r4, r5, lr}
   63cf4:	mov	r4, #896	; 0x380
   63cf8:	and	r5, r1, #-2147483648	; 0x80000000
   63cfc:	bic	r1, r1, #-2147483648	; 0x80000000
   63d00:	b	63b14 <__assert_fail@plt+0x51428>
   63d04:	orrs	r2, r0, r1
   63d08:	bxeq	lr
   63d0c:	push	{r4, r5, lr}
   63d10:	mov	r5, #0
   63d14:	b	63d34 <__assert_fail@plt+0x51648>
   63d18:	orrs	r2, r0, r1
   63d1c:	bxeq	lr
   63d20:	push	{r4, r5, lr}
   63d24:	ands	r5, r1, #-2147483648	; 0x80000000
   63d28:	bpl	63d34 <__assert_fail@plt+0x51648>
   63d2c:	rsbs	r0, r0, #0
   63d30:	rsc	r1, r1, #0
   63d34:	mov	r4, #1024	; 0x400
   63d38:	add	r4, r4, #50	; 0x32
   63d3c:	lsrs	ip, r1, #22
   63d40:	beq	63ab8 <__assert_fail@plt+0x513cc>
   63d44:	mov	r2, #3
   63d48:	lsrs	ip, ip, #3
   63d4c:	addne	r2, r2, #3
   63d50:	lsrs	ip, ip, #3
   63d54:	addne	r2, r2, #3
   63d58:	add	r2, r2, ip, lsr #3
   63d5c:	rsb	r3, r2, #32
   63d60:	lsl	ip, r0, r3
   63d64:	lsr	r0, r0, r2
   63d68:	orr	r0, r0, r1, lsl r3
   63d6c:	lsr	r1, r1, r2
   63d70:	add	r4, r4, r2
   63d74:	b	63ab8 <__assert_fail@plt+0x513cc>
   63d78:	cmp	r3, #0
   63d7c:	cmpeq	r2, #0
   63d80:	bne	63da4 <__assert_fail@plt+0x516b8>
   63d84:	cmp	r1, #0
   63d88:	movlt	r1, #-2147483648	; 0x80000000
   63d8c:	movlt	r0, #0
   63d90:	blt	63da0 <__assert_fail@plt+0x516b4>
   63d94:	cmpeq	r0, #0
   63d98:	mvnne	r1, #-2147483648	; 0x80000000
   63d9c:	mvnne	r0, #0
   63da0:	b	63e88 <__assert_fail@plt+0x5179c>
   63da4:	sub	sp, sp, #8
   63da8:	push	{sp, lr}
   63dac:	cmp	r1, #0
   63db0:	blt	63dd0 <__assert_fail@plt+0x516e4>
   63db4:	cmp	r3, #0
   63db8:	blt	63e04 <__assert_fail@plt+0x51718>
   63dbc:	bl	63ee0 <__assert_fail@plt+0x517f4>
   63dc0:	ldr	lr, [sp, #4]
   63dc4:	add	sp, sp, #8
   63dc8:	pop	{r2, r3}
   63dcc:	bx	lr
   63dd0:	rsbs	r0, r0, #0
   63dd4:	sbc	r1, r1, r1, lsl #1
   63dd8:	cmp	r3, #0
   63ddc:	blt	63e28 <__assert_fail@plt+0x5173c>
   63de0:	bl	63ee0 <__assert_fail@plt+0x517f4>
   63de4:	ldr	lr, [sp, #4]
   63de8:	add	sp, sp, #8
   63dec:	pop	{r2, r3}
   63df0:	rsbs	r0, r0, #0
   63df4:	sbc	r1, r1, r1, lsl #1
   63df8:	rsbs	r2, r2, #0
   63dfc:	sbc	r3, r3, r3, lsl #1
   63e00:	bx	lr
   63e04:	rsbs	r2, r2, #0
   63e08:	sbc	r3, r3, r3, lsl #1
   63e0c:	bl	63ee0 <__assert_fail@plt+0x517f4>
   63e10:	ldr	lr, [sp, #4]
   63e14:	add	sp, sp, #8
   63e18:	pop	{r2, r3}
   63e1c:	rsbs	r0, r0, #0
   63e20:	sbc	r1, r1, r1, lsl #1
   63e24:	bx	lr
   63e28:	rsbs	r2, r2, #0
   63e2c:	sbc	r3, r3, r3, lsl #1
   63e30:	bl	63ee0 <__assert_fail@plt+0x517f4>
   63e34:	ldr	lr, [sp, #4]
   63e38:	add	sp, sp, #8
   63e3c:	pop	{r2, r3}
   63e40:	rsbs	r2, r2, #0
   63e44:	sbc	r3, r3, r3, lsl #1
   63e48:	bx	lr
   63e4c:	cmp	r3, #0
   63e50:	cmpeq	r2, #0
   63e54:	bne	63e6c <__assert_fail@plt+0x51780>
   63e58:	cmp	r1, #0
   63e5c:	cmpeq	r0, #0
   63e60:	mvnne	r1, #0
   63e64:	mvnne	r0, #0
   63e68:	b	63e88 <__assert_fail@plt+0x5179c>
   63e6c:	sub	sp, sp, #8
   63e70:	push	{sp, lr}
   63e74:	bl	63ee0 <__assert_fail@plt+0x517f4>
   63e78:	ldr	lr, [sp, #4]
   63e7c:	add	sp, sp, #8
   63e80:	pop	{r2, r3}
   63e84:	bx	lr
   63e88:	push	{r1, lr}
   63e8c:	mov	r0, #8
   63e90:	bl	11fb4 <raise@plt>
   63e94:	pop	{r1, pc}
   63e98:	vmov	d7, r0, r1
   63e9c:	vldr	d6, [pc, #44]	; 63ed0 <__assert_fail@plt+0x517e4>
   63ea0:	vldr	d5, [pc, #48]	; 63ed8 <__assert_fail@plt+0x517ec>
   63ea4:	mov	r0, #0
   63ea8:	vmul.f64	d6, d7, d6
   63eac:	vcvt.u32.f64	s12, d6
   63eb0:	vcvt.f64.u32	d4, s12
   63eb4:	vmov	r1, s12
   63eb8:	vmls.f64	d7, d4, d5
   63ebc:	vcvt.u32.f64	s14, d7
   63ec0:	vmov	r3, s14
   63ec4:	orr	r0, r0, r3
   63ec8:	bx	lr
   63ecc:	nop			; (mov r0, r0)
   63ed0:	andeq	r0, r0, r0
   63ed4:	ldclcc	0, cr0, [r0]
   63ed8:	andeq	r0, r0, r0
   63edc:	mvnsmi	r0, r0
   63ee0:	cmp	r1, r3
   63ee4:	push	{r4, r5, r6, r7, r8, r9, lr}
   63ee8:	cmpeq	r0, r2
   63eec:	mov	r4, r0
   63ef0:	mov	r5, r1
   63ef4:	ldr	r9, [sp, #28]
   63ef8:	movcc	r0, #0
   63efc:	movcc	r1, #0
   63f00:	bcc	63ff8 <__assert_fail@plt+0x5190c>
   63f04:	cmp	r3, #0
   63f08:	clzeq	ip, r2
   63f0c:	clzne	ip, r3
   63f10:	addeq	ip, ip, #32
   63f14:	cmp	r5, #0
   63f18:	clzeq	r1, r4
   63f1c:	addeq	r1, r1, #32
   63f20:	clzne	r1, r5
   63f24:	sub	ip, ip, r1
   63f28:	sub	lr, ip, #32
   63f2c:	lsl	r7, r3, ip
   63f30:	rsb	r8, ip, #32
   63f34:	orr	r7, r7, r2, lsl lr
   63f38:	orr	r7, r7, r2, lsr r8
   63f3c:	lsl	r6, r2, ip
   63f40:	cmp	r5, r7
   63f44:	cmpeq	r4, r6
   63f48:	movcc	r0, #0
   63f4c:	movcc	r1, #0
   63f50:	bcc	63f6c <__assert_fail@plt+0x51880>
   63f54:	mov	r3, #1
   63f58:	subs	r4, r4, r6
   63f5c:	lsl	r1, r3, lr
   63f60:	lsl	r0, r3, ip
   63f64:	orr	r1, r1, r3, lsr r8
   63f68:	sbc	r5, r5, r7
   63f6c:	cmp	ip, #0
   63f70:	beq	63ff8 <__assert_fail@plt+0x5190c>
   63f74:	lsrs	r3, r7, #1
   63f78:	rrx	r2, r6
   63f7c:	mov	r6, ip
   63f80:	b	63fa4 <__assert_fail@plt+0x518b8>
   63f84:	subs	r4, r4, r2
   63f88:	sbc	r5, r5, r3
   63f8c:	adds	r4, r4, r4
   63f90:	adc	r5, r5, r5
   63f94:	adds	r4, r4, #1
   63f98:	adc	r5, r5, #0
   63f9c:	subs	r6, r6, #1
   63fa0:	beq	63fc0 <__assert_fail@plt+0x518d4>
   63fa4:	cmp	r5, r3
   63fa8:	cmpeq	r4, r2
   63fac:	bcs	63f84 <__assert_fail@plt+0x51898>
   63fb0:	adds	r4, r4, r4
   63fb4:	adc	r5, r5, r5
   63fb8:	subs	r6, r6, #1
   63fbc:	bne	63fa4 <__assert_fail@plt+0x518b8>
   63fc0:	lsr	r6, r4, ip
   63fc4:	lsr	r7, r5, ip
   63fc8:	orr	r6, r6, r5, lsl r8
   63fcc:	adds	r2, r0, r4
   63fd0:	orr	r6, r6, r5, lsr lr
   63fd4:	adc	r3, r1, r5
   63fd8:	lsl	r1, r7, ip
   63fdc:	orr	r1, r1, r6, lsl lr
   63fe0:	lsl	r0, r6, ip
   63fe4:	orr	r1, r1, r6, lsr r8
   63fe8:	subs	r0, r2, r0
   63fec:	mov	r4, r6
   63ff0:	mov	r5, r7
   63ff4:	sbc	r1, r3, r1
   63ff8:	cmp	r9, #0
   63ffc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   64000:	strd	r4, [r9]
   64004:	pop	{r4, r5, r6, r7, r8, r9, pc}
   64008:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   6400c:	mov	r7, r0
   64010:	ldr	r6, [pc, #72]	; 64060 <__assert_fail@plt+0x51974>
   64014:	ldr	r5, [pc, #72]	; 64064 <__assert_fail@plt+0x51978>
   64018:	add	r6, pc, r6
   6401c:	add	r5, pc, r5
   64020:	sub	r6, r6, r5
   64024:	mov	r8, r1
   64028:	mov	r9, r2
   6402c:	bl	11f40 <pthread_mutex_unlock@plt-0x20>
   64030:	asrs	r6, r6, #2
   64034:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   64038:	mov	r4, #0
   6403c:	add	r4, r4, #1
   64040:	ldr	r3, [r5], #4
   64044:	mov	r2, r9
   64048:	mov	r1, r8
   6404c:	mov	r0, r7
   64050:	blx	r3
   64054:	cmp	r6, r4
   64058:	bne	6403c <__assert_fail@plt+0x51950>
   6405c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   64060:	andeq	r7, r1, r0, ror #29
   64064:	ldrdeq	r7, [r1], -r8
   64068:	bx	lr
   6406c:	ldr	r3, [pc, #12]	; 64080 <__assert_fail@plt+0x51994>
   64070:	mov	r1, #0
   64074:	add	r3, pc, r3
   64078:	ldr	r2, [r3]
   6407c:	b	12428 <__cxa_atexit@plt>
   64080:	andeq	r8, r1, r0, lsr #4
   64084:	mov	r2, r1
   64088:	mov	r1, r0
   6408c:	mov	r0, #3
   64090:	b	12650 <__xstat64@plt>
   64094:	mov	r2, r1
   64098:	mov	r1, r0
   6409c:	mov	r0, #3
   640a0:	b	12218 <__fxstat64@plt>
   640a4:	mov	r2, r1
   640a8:	mov	r1, r0
   640ac:	mov	r0, #3
   640b0:	b	126b0 <__lxstat64@plt>
   640b4:	push	{lr}		; (str lr, [sp, #-4]!)
   640b8:	sub	sp, sp, #12
   640bc:	str	r3, [sp]
   640c0:	mov	r3, r2
   640c4:	mov	r2, r1
   640c8:	mov	r1, r0
   640cc:	mov	r0, #3
   640d0:	bl	121e8 <__fxstatat64@plt>
   640d4:	add	sp, sp, #12
   640d8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000640dc <.fini>:
   640dc:	push	{r3, lr}
   640e0:	pop	{r3, pc}
