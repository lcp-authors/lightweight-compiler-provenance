
../repos/charybdis/extensions/.libs/chm_quietunreg_compat.so:     file format elf32-littlearm


Disassembly of section .init:

000003d0 <_init>:
 3d0:	push	{r3, lr}
 3d4:	bl	420 <call_weak_fn>
 3d8:	pop	{r3, pc}

Disassembly of section .plt:

000003dc <.plt>:
 3dc:	push	{lr}		; (str lr, [sp, #-4]!)
 3e0:	ldr	lr, [pc, #4]	; 3ec <.plt+0x10>
 3e4:	add	lr, pc, lr
 3e8:	ldr	pc, [lr, #8]!
 3ec:	.word	0x00010c14

000003f0 <__cxa_finalize@plt>:
 3f0:	add	ip, pc, #0, 12
 3f4:	add	ip, ip, #16, 20	; 0x10000
 3f8:	ldr	pc, [ip, #3092]!	; 0xc14

000003fc <chm_nosuch@plt>:
 3fc:	add	ip, pc, #0, 12
 400:	add	ip, ip, #16, 20	; 0x10000
 404:	ldr	pc, [ip, #3084]!	; 0xc0c

00000408 <__gmon_start__@plt>:
 408:	add	ip, pc, #0, 12
 40c:	add	ip, ip, #16, 20	; 0x10000
 410:	ldr	pc, [ip, #3076]!	; 0xc04

00000414 <chm_ban@plt>:
 414:	add	ip, pc, #0, 12
 418:	add	ip, ip, #16, 20	; 0x10000
 41c:	ldr	pc, [ip, #3068]!	; 0xbfc

Disassembly of section .text:

00000420 <call_weak_fn>:
 420:	ldr	r3, [pc, #20]	; 43c <call_weak_fn+0x1c>
 424:	ldr	r2, [pc, #20]	; 440 <call_weak_fn+0x20>
 428:	add	r3, pc, r3
 42c:	ldr	r2, [r3, r2]
 430:	cmp	r2, #0
 434:	bxeq	lr
 438:	b	408 <__gmon_start__@plt>
 43c:	.word	0x00010bd0
 440:	.word	0x00000028

00000444 <deregister_tm_clones>:
 444:	ldr	r3, [pc, #52]	; 480 <deregister_tm_clones+0x3c>
 448:	ldr	r0, [pc, #52]	; 484 <deregister_tm_clones+0x40>
 44c:	add	r3, pc, r3
 450:	add	r0, pc, r0
 454:	add	r3, r3, #3
 458:	sub	r3, r3, r0
 45c:	cmp	r3, #6
 460:	ldr	r3, [pc, #32]	; 488 <deregister_tm_clones+0x44>
 464:	add	r3, pc, r3
 468:	bxls	lr
 46c:	ldr	r2, [pc, #24]	; 48c <deregister_tm_clones+0x48>
 470:	ldr	r3, [r3, r2]
 474:	cmp	r3, #0
 478:	bxeq	lr
 47c:	bx	r3
 480:	.word	0x00010c10
 484:	.word	0x00010c0c
 488:	.word	0x00010b94
 48c:	.word	0x00000020

00000490 <register_tm_clones>:
 490:	ldr	r1, [pc, #56]	; 4d0 <register_tm_clones+0x40>
 494:	ldr	r0, [pc, #56]	; 4d4 <register_tm_clones+0x44>
 498:	add	r1, pc, r1
 49c:	add	r0, pc, r0
 4a0:	sub	r1, r1, r0
 4a4:	ldr	r3, [pc, #44]	; 4d8 <register_tm_clones+0x48>
 4a8:	asr	r1, r1, #2
 4ac:	add	r3, pc, r3
 4b0:	add	r1, r1, r1, lsr #31
 4b4:	asrs	r1, r1, #1
 4b8:	bxeq	lr
 4bc:	ldr	r2, [pc, #24]	; 4dc <register_tm_clones+0x4c>
 4c0:	ldr	r3, [r3, r2]
 4c4:	cmp	r3, #0
 4c8:	bxeq	lr
 4cc:	bx	r3
 4d0:	.word	0x00010bc4
 4d4:	.word	0x00010bc0
 4d8:	.word	0x00010b4c
 4dc:	.word	0x00000034

000004e0 <__do_global_dtors_aux>:
 4e0:	ldr	r3, [pc, #76]	; 534 <__do_global_dtors_aux+0x54>
 4e4:	ldr	r2, [pc, #76]	; 538 <__do_global_dtors_aux+0x58>
 4e8:	add	r3, pc, r3
 4ec:	add	r2, pc, r2
 4f0:	ldrb	r3, [r3]
 4f4:	cmp	r3, #0
 4f8:	bxne	lr
 4fc:	ldr	r3, [pc, #56]	; 53c <__do_global_dtors_aux+0x5c>
 500:	push	{r4, lr}
 504:	ldr	r3, [r2, r3]
 508:	cmp	r3, #0
 50c:	beq	51c <__do_global_dtors_aux+0x3c>
 510:	ldr	r3, [pc, #40]	; 540 <__do_global_dtors_aux+0x60>
 514:	ldr	r0, [pc, r3]
 518:	bl	3f0 <__cxa_finalize@plt>
 51c:	bl	444 <deregister_tm_clones>
 520:	ldr	r3, [pc, #28]	; 544 <__do_global_dtors_aux+0x64>
 524:	mov	r2, #1
 528:	add	r3, pc, r3
 52c:	strb	r2, [r3]
 530:	pop	{r4, pc}
 534:	.word	0x00010b74
 538:	.word	0x00010b0c
 53c:	.word	0x0000001c
 540:	.word	0x00010b1c
 544:	.word	0x00010b34

00000548 <frame_dummy>:
 548:	ldr	r0, [pc, #56]	; 588 <frame_dummy+0x40>
 54c:	ldr	r3, [pc, #56]	; 58c <frame_dummy+0x44>
 550:	add	r0, pc, r0
 554:	ldr	r2, [r0]
 558:	add	r3, pc, r3
 55c:	cmp	r2, #0
 560:	bne	568 <frame_dummy+0x20>
 564:	b	490 <register_tm_clones>
 568:	ldr	r2, [pc, #32]	; 590 <frame_dummy+0x48>
 56c:	ldr	r3, [r3, r2]
 570:	cmp	r3, #0
 574:	beq	564 <frame_dummy+0x1c>
 578:	push	{r4, lr}
 57c:	blx	r3
 580:	pop	{r4, lr}
 584:	b	490 <register_tm_clones>
 588:	.word	0x000109a4
 58c:	.word	0x00010aa0
 590:	.word	0x00000030

00000594 <_modinit>:
 594:	ldr	r3, [pc, #32]	; 5bc <_modinit+0x28>
 598:	ldr	r2, [pc, #32]	; 5c0 <_modinit+0x2c>
 59c:	add	r3, pc, r3
 5a0:	mov	r0, #0
 5a4:	ldr	r3, [r3, r2]
 5a8:	ldr	r2, [pc, #20]	; 5c4 <_modinit+0x30>
 5ac:	add	r2, pc, r2
 5b0:	str	r2, [r3, #656]	; 0x290
 5b4:	str	r0, [r3, #660]	; 0x294
 5b8:	bx	lr
 5bc:	.word	0x00010a5c
 5c0:	.word	0x0000002c
 5c4:	.word	0x00000048

000005c8 <_moddeinit>:
 5c8:	ldr	r3, [pc, #32]	; 5f0 <_moddeinit+0x28>
 5cc:	ldr	r2, [pc, #32]	; 5f4 <_moddeinit+0x2c>
 5d0:	add	r3, pc, r3
 5d4:	ldr	r1, [pc, #28]	; 5f8 <_moddeinit+0x30>
 5d8:	ldr	r2, [r3, r2]
 5dc:	ldr	r3, [r3, r1]
 5e0:	str	r3, [r2, #656]	; 0x290
 5e4:	mov	r3, #0
 5e8:	str	r3, [r2, #660]	; 0x294
 5ec:	bx	lr
 5f0:	.word	0x00010a28
 5f4:	.word	0x0000002c
 5f8:	.word	0x00000024

000005fc <chm_quietunreg>:
 5fc:	push	{r4, r5, r6, r7, r8, lr}
 600:	sub	sp, sp, #32
 604:	mov	r4, #0
 608:	str	r4, [sp, #24]
 60c:	ldr	r4, [pc, #172]	; 6c0 <chm_quietunreg+0xc4>
 610:	mov	ip, r0
 614:	add	r4, pc, r4
 618:	str	r4, [sp, #28]
 61c:	ldrd	r4, [r0, #64]	; 0x40
 620:	mov	r5, #0
 624:	mov	r7, r1
 628:	and	r4, r4, #8192	; 0x2000
 62c:	orrs	r4, r4, r5
 630:	mov	r8, r2
 634:	ldr	lr, [sp, #64]	; 0x40
 638:	ldr	r6, [sp, #68]	; 0x44
 63c:	beq	684 <chm_quietunreg+0x88>
 640:	ldrh	r4, [r0, #80]	; 0x50
 644:	cmp	r4, #64	; 0x40
 648:	bne	684 <chm_quietunreg+0x88>
 64c:	mov	r3, #-2147483648	; 0x80000000
 650:	str	r3, [sp, #20]
 654:	mov	r3, #113	; 0x71
 658:	str	r3, [sp, #16]
 65c:	add	r3, sp, #28
 660:	str	r3, [sp, #4]
 664:	add	r3, sp, #24
 668:	str	r3, [sp]
 66c:	str	r6, [sp, #12]
 670:	str	lr, [sp, #8]
 674:	mov	r3, #1
 678:	bl	414 <chm_ban@plt>
 67c:	add	sp, sp, #32
 680:	pop	{r4, r5, r6, r7, r8, pc}
 684:	ldr	r2, [sp, #76]	; 0x4c
 688:	str	r6, [sp, #12]
 68c:	str	r2, [sp, #20]
 690:	ldrb	r2, [sp, #72]	; 0x48
 694:	str	lr, [sp, #8]
 698:	mov	r1, r7
 69c:	str	r2, [sp, #16]
 6a0:	ldr	r2, [sp, #60]	; 0x3c
 6a4:	mov	r0, ip
 6a8:	str	r2, [sp, #4]
 6ac:	ldr	r2, [sp, #56]	; 0x38
 6b0:	str	r2, [sp]
 6b4:	mov	r2, r8
 6b8:	bl	3fc <chm_nosuch@plt>
 6bc:	b	67c <chm_quietunreg+0x80>
 6c0:	.word	0x000000f5

Disassembly of section .fini:

000006c4 <_fini>:
 6c4:	push	{r3, lr}
 6c8:	pop	{r3, pc}
