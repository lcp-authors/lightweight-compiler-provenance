
../repos/coreutils/src/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010b94 <.init>:
   10b94:	push	{r3, lr}
   10b98:	bl	10e34 <abort@plt+0x4c>
   10b9c:	pop	{r3, pc}

Disassembly of section .plt:

00010ba0 <calloc@plt-0x14>:
   10ba0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ba4:	ldr	lr, [pc, #4]	; 10bb0 <calloc@plt-0x4>
   10ba8:	add	lr, pc, lr
   10bac:	ldr	pc, [lr, #8]!
   10bb0:	andeq	r5, r1, r0, asr r4

00010bb4 <calloc@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #86016	; 0x15000
   10bbc:	ldr	pc, [ip, #1104]!	; 0x450

00010bc0 <fputs_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #86016	; 0x15000
   10bc8:	ldr	pc, [ip, #1096]!	; 0x448

00010bcc <raise@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #86016	; 0x15000
   10bd4:	ldr	pc, [ip, #1088]!	; 0x440

00010bd8 <strcmp@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #86016	; 0x15000
   10be0:	ldr	pc, [ip, #1080]!	; 0x438

00010be4 <pause@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #86016	; 0x15000
   10bec:	ldr	pc, [ip, #1072]!	; 0x430

00010bf0 <fflush@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #86016	; 0x15000
   10bf8:	ldr	pc, [ip, #1064]!	; 0x428

00010bfc <free@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #86016	; 0x15000
   10c04:	ldr	pc, [ip, #1056]!	; 0x420

00010c08 <nanosleep@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #86016	; 0x15000
   10c10:	ldr	pc, [ip, #1048]!	; 0x418

00010c14 <_exit@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #86016	; 0x15000
   10c1c:	ldr	pc, [ip, #1040]!	; 0x410

00010c20 <memcpy@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #86016	; 0x15000
   10c28:	ldr	pc, [ip, #1032]!	; 0x408

00010c2c <mbsinit@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #86016	; 0x15000
   10c34:	ldr	pc, [ip, #1024]!	; 0x400

00010c38 <memcmp@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #86016	; 0x15000
   10c40:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c44 <fputc_unlocked@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #86016	; 0x15000
   10c4c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c50 <dcgettext@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #86016	; 0x15000
   10c58:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c5c <realloc@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #86016	; 0x15000
   10c64:	ldr	pc, [ip, #992]!	; 0x3e0

00010c68 <textdomain@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #86016	; 0x15000
   10c70:	ldr	pc, [ip, #984]!	; 0x3d8

00010c74 <iswprint@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #86016	; 0x15000
   10c7c:	ldr	pc, [ip, #976]!	; 0x3d0

00010c80 <fwrite@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #86016	; 0x15000
   10c88:	ldr	pc, [ip, #968]!	; 0x3c8

00010c8c <lseek64@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #86016	; 0x15000
   10c94:	ldr	pc, [ip, #960]!	; 0x3c0

00010c98 <__ctype_get_mb_cur_max@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #86016	; 0x15000
   10ca0:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca4 <__fpending@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #86016	; 0x15000
   10cac:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb0 <mbrtowc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #86016	; 0x15000
   10cb8:	ldr	pc, [ip, #936]!	; 0x3a8

00010cbc <error@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #86016	; 0x15000
   10cc4:	ldr	pc, [ip, #928]!	; 0x3a0

00010cc8 <malloc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #86016	; 0x15000
   10cd0:	ldr	pc, [ip, #920]!	; 0x398

00010cd4 <__libc_start_main@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #86016	; 0x15000
   10cdc:	ldr	pc, [ip, #912]!	; 0x390

00010ce0 <__freading@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #86016	; 0x15000
   10ce8:	ldr	pc, [ip, #904]!	; 0x388

00010cec <__gmon_start__@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #86016	; 0x15000
   10cf4:	ldr	pc, [ip, #896]!	; 0x380

00010cf8 <getopt_long@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #86016	; 0x15000
   10d00:	ldr	pc, [ip, #888]!	; 0x378

00010d04 <__ctype_b_loc@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #86016	; 0x15000
   10d0c:	ldr	pc, [ip, #880]!	; 0x370

00010d10 <exit@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #872]!	; 0x368

00010d1c <strlen@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #864]!	; 0x360

00010d28 <__errno_location@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #856]!	; 0x358

00010d34 <__cxa_atexit@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #848]!	; 0x350

00010d40 <memset@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #840]!	; 0x348

00010d4c <__printf_chk@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #832]!	; 0x340

00010d58 <strtod@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #824]!	; 0x338

00010d64 <fileno@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #816]!	; 0x330

00010d70 <__fprintf_chk@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #808]!	; 0x328

00010d7c <fclose@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #800]!	; 0x320

00010d88 <fseeko64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #792]!	; 0x318

00010d94 <strtod_l@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #784]!	; 0x310

00010da0 <setlocale@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #776]!	; 0x308

00010dac <strrchr@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #768]!	; 0x300

00010db8 <nl_langinfo@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #760]!	; 0x2f8

00010dc4 <newlocale@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #752]!	; 0x2f0

00010dd0 <bindtextdomain@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #744]!	; 0x2e8

00010ddc <strncmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #736]!	; 0x2e0

00010de8 <abort@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #728]!	; 0x2d8

Disassembly of section .text:

00010df8 <.text>:
   10df8:	mov	fp, #0
   10dfc:	mov	lr, #0
   10e00:	pop	{r1}		; (ldr r1, [sp], #4)
   10e04:	mov	r2, sp
   10e08:	push	{r2}		; (str r2, [sp, #-4]!)
   10e0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e10:	ldr	ip, [pc, #16]	; 10e28 <abort@plt+0x40>
   10e14:	push	{ip}		; (str ip, [sp, #-4]!)
   10e18:	ldr	r0, [pc, #12]	; 10e2c <abort@plt+0x44>
   10e1c:	ldr	r3, [pc, #12]	; 10e30 <abort@plt+0x48>
   10e20:	bl	10cd4 <__libc_start_main@plt>
   10e24:	bl	10de8 <abort@plt>
   10e28:	andeq	r4, r1, ip, asr #22
   10e2c:	andeq	r1, r1, r4, lsl r2
   10e30:	andeq	r4, r1, ip, ror #21
   10e34:	ldr	r3, [pc, #20]	; 10e50 <abort@plt+0x68>
   10e38:	ldr	r2, [pc, #20]	; 10e54 <abort@plt+0x6c>
   10e3c:	add	r3, pc, r3
   10e40:	ldr	r2, [r3, r2]
   10e44:	cmp	r2, #0
   10e48:	bxeq	lr
   10e4c:	b	10cec <__gmon_start__@plt>
   10e50:			; <UNDEFINED> instruction: 0x000151bc
   10e54:	andeq	r0, r0, ip, asr #1
   10e58:	ldr	r3, [pc, #28]	; 10e7c <abort@plt+0x94>
   10e5c:	ldr	r0, [pc, #28]	; 10e80 <abort@plt+0x98>
   10e60:	sub	r3, r3, r0
   10e64:	cmp	r3, #6
   10e68:	bxls	lr
   10e6c:	ldr	r3, [pc, #16]	; 10e84 <abort@plt+0x9c>
   10e70:	cmp	r3, #0
   10e74:	bxeq	lr
   10e78:	bx	r3
   10e7c:	andeq	r6, r2, r3, lsr #2
   10e80:	andeq	r6, r2, r0, lsr #2
   10e84:	andeq	r0, r0, r0
   10e88:	ldr	r1, [pc, #36]	; 10eb4 <abort@plt+0xcc>
   10e8c:	ldr	r0, [pc, #36]	; 10eb8 <abort@plt+0xd0>
   10e90:	sub	r1, r1, r0
   10e94:	asr	r1, r1, #2
   10e98:	add	r1, r1, r1, lsr #31
   10e9c:	asrs	r1, r1, #1
   10ea0:	bxeq	lr
   10ea4:	ldr	r3, [pc, #16]	; 10ebc <abort@plt+0xd4>
   10ea8:	cmp	r3, #0
   10eac:	bxeq	lr
   10eb0:	bx	r3
   10eb4:	andeq	r6, r2, r0, lsr #2
   10eb8:	andeq	r6, r2, r0, lsr #2
   10ebc:	andeq	r0, r0, r0
   10ec0:	push	{r4, lr}
   10ec4:	ldr	r4, [pc, #24]	; 10ee4 <abort@plt+0xfc>
   10ec8:	ldrb	r3, [r4]
   10ecc:	cmp	r3, #0
   10ed0:	popne	{r4, pc}
   10ed4:	bl	10e58 <abort@plt+0x70>
   10ed8:	mov	r3, #1
   10edc:	strb	r3, [r4]
   10ee0:	pop	{r4, pc}
   10ee4:	andeq	r6, r2, ip, lsr r1
   10ee8:	ldr	r0, [pc, #40]	; 10f18 <abort@plt+0x130>
   10eec:	ldr	r3, [r0]
   10ef0:	cmp	r3, #0
   10ef4:	bne	10efc <abort@plt+0x114>
   10ef8:	b	10e88 <abort@plt+0xa0>
   10efc:	ldr	r3, [pc, #24]	; 10f1c <abort@plt+0x134>
   10f00:	cmp	r3, #0
   10f04:	beq	10ef8 <abort@plt+0x110>
   10f08:	push	{r4, lr}
   10f0c:	blx	r3
   10f10:	pop	{r4, lr}
   10f14:	b	10e88 <abort@plt+0xa0>
   10f18:	andeq	r5, r2, r4, lsl pc
   10f1c:	andeq	r0, r0, r0
   10f20:	push	{lr}		; (str lr, [sp, #-4]!)
   10f24:	sub	sp, sp, #60	; 0x3c
   10f28:	subs	r6, r0, #0
   10f2c:	beq	10f68 <abort@plt+0x180>
   10f30:	ldr	r3, [pc, #660]	; 111cc <abort@plt+0x3e4>
   10f34:	ldr	r4, [r3]
   10f38:	mov	r2, #5
   10f3c:	ldr	r1, [pc, #652]	; 111d0 <abort@plt+0x3e8>
   10f40:	mov	r0, #0
   10f44:	bl	10c50 <dcgettext@plt>
   10f48:	ldr	r3, [pc, #644]	; 111d4 <abort@plt+0x3ec>
   10f4c:	ldr	r3, [r3]
   10f50:	mov	r2, r0
   10f54:	mov	r1, #1
   10f58:	mov	r0, r4
   10f5c:	bl	10d70 <__fprintf_chk@plt>
   10f60:	mov	r0, r6
   10f64:	bl	10d10 <exit@plt>
   10f68:	mov	r2, #5
   10f6c:	ldr	r1, [pc, #612]	; 111d8 <abort@plt+0x3f0>
   10f70:	mov	r0, #0
   10f74:	bl	10c50 <dcgettext@plt>
   10f78:	ldr	r3, [pc, #596]	; 111d4 <abort@plt+0x3ec>
   10f7c:	ldr	r2, [r3]
   10f80:	mov	r3, r2
   10f84:	mov	r1, r0
   10f88:	mov	r0, #1
   10f8c:	bl	10d4c <__printf_chk@plt>
   10f90:	mov	r2, #5
   10f94:	ldr	r1, [pc, #576]	; 111dc <abort@plt+0x3f4>
   10f98:	mov	r0, #0
   10f9c:	bl	10c50 <dcgettext@plt>
   10fa0:	ldr	r4, [pc, #568]	; 111e0 <abort@plt+0x3f8>
   10fa4:	ldr	r1, [r4]
   10fa8:	bl	10bc0 <fputs_unlocked@plt>
   10fac:	mov	r2, #5
   10fb0:	ldr	r1, [pc, #556]	; 111e4 <abort@plt+0x3fc>
   10fb4:	mov	r0, #0
   10fb8:	bl	10c50 <dcgettext@plt>
   10fbc:	ldr	r1, [r4]
   10fc0:	bl	10bc0 <fputs_unlocked@plt>
   10fc4:	mov	ip, sp
   10fc8:	ldr	lr, [pc, #536]	; 111e8 <abort@plt+0x400>
   10fcc:	ldm	lr!, {r0, r1, r2, r3}
   10fd0:	stmia	ip!, {r0, r1, r2, r3}
   10fd4:	ldm	lr!, {r0, r1, r2, r3}
   10fd8:	stmia	ip!, {r0, r1, r2, r3}
   10fdc:	ldm	lr!, {r0, r1, r2, r3}
   10fe0:	stmia	ip!, {r0, r1, r2, r3}
   10fe4:	ldm	lr, {r0, r1}
   10fe8:	stm	ip, {r0, r1}
   10fec:	ldr	r1, [sp]
   10ff0:	cmp	r1, #0
   10ff4:	moveq	r4, sp
   10ff8:	beq	11020 <abort@plt+0x238>
   10ffc:	mov	r4, sp
   11000:	ldr	r5, [pc, #484]	; 111ec <abort@plt+0x404>
   11004:	mov	r0, r5
   11008:	bl	10bd8 <strcmp@plt>
   1100c:	cmp	r0, #0
   11010:	beq	11020 <abort@plt+0x238>
   11014:	ldr	r1, [r4, #8]!
   11018:	cmp	r1, #0
   1101c:	bne	11004 <abort@plt+0x21c>
   11020:	ldr	r4, [r4, #4]
   11024:	cmp	r4, #0
   11028:	beq	1113c <abort@plt+0x354>
   1102c:	mov	r2, #5
   11030:	ldr	r1, [pc, #440]	; 111f0 <abort@plt+0x408>
   11034:	mov	r0, #0
   11038:	bl	10c50 <dcgettext@plt>
   1103c:	ldr	r3, [pc, #432]	; 111f4 <abort@plt+0x40c>
   11040:	ldr	r2, [pc, #432]	; 111f8 <abort@plt+0x410>
   11044:	mov	r1, r0
   11048:	mov	r0, #1
   1104c:	bl	10d4c <__printf_chk@plt>
   11050:	mov	r1, #0
   11054:	mov	r0, #5
   11058:	bl	10da0 <setlocale@plt>
   1105c:	cmp	r0, #0
   11060:	beq	11078 <abort@plt+0x290>
   11064:	mov	r2, #3
   11068:	ldr	r1, [pc, #396]	; 111fc <abort@plt+0x414>
   1106c:	bl	10ddc <strncmp@plt>
   11070:	cmp	r0, #0
   11074:	bne	110d8 <abort@plt+0x2f0>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #380]	; 11200 <abort@plt+0x418>
   11080:	mov	r0, #0
   11084:	bl	10c50 <dcgettext@plt>
   11088:	ldr	r5, [pc, #348]	; 111ec <abort@plt+0x404>
   1108c:	mov	r3, r5
   11090:	ldr	r2, [pc, #348]	; 111f4 <abort@plt+0x40c>
   11094:	mov	r1, r0
   11098:	mov	r0, #1
   1109c:	bl	10d4c <__printf_chk@plt>
   110a0:	mov	r2, #5
   110a4:	ldr	r1, [pc, #344]	; 11204 <abort@plt+0x41c>
   110a8:	mov	r0, #0
   110ac:	bl	10c50 <dcgettext@plt>
   110b0:	mov	r1, r0
   110b4:	ldr	r2, [pc, #332]	; 11208 <abort@plt+0x420>
   110b8:	ldr	r3, [pc, #332]	; 1120c <abort@plt+0x424>
   110bc:	cmp	r4, r5
   110c0:	movne	r3, r2
   110c4:	mov	r2, r4
   110c8:	mov	r0, #1
   110cc:	bl	10d4c <__printf_chk@plt>
   110d0:	b	10f60 <abort@plt+0x178>
   110d4:	ldr	r4, [pc, #272]	; 111ec <abort@plt+0x404>
   110d8:	mov	r2, #5
   110dc:	ldr	r1, [pc, #300]	; 11210 <abort@plt+0x428>
   110e0:	mov	r0, #0
   110e4:	bl	10c50 <dcgettext@plt>
   110e8:	ldr	r3, [pc, #240]	; 111e0 <abort@plt+0x3f8>
   110ec:	ldr	r1, [r3]
   110f0:	bl	10bc0 <fputs_unlocked@plt>
   110f4:	b	11078 <abort@plt+0x290>
   110f8:	mov	r2, #5
   110fc:	ldr	r1, [pc, #252]	; 11200 <abort@plt+0x418>
   11100:	mov	r0, #0
   11104:	bl	10c50 <dcgettext@plt>
   11108:	ldr	r4, [pc, #220]	; 111ec <abort@plt+0x404>
   1110c:	mov	r3, r4
   11110:	ldr	r2, [pc, #220]	; 111f4 <abort@plt+0x40c>
   11114:	mov	r1, r0
   11118:	mov	r0, #1
   1111c:	bl	10d4c <__printf_chk@plt>
   11120:	mov	r2, #5
   11124:	ldr	r1, [pc, #216]	; 11204 <abort@plt+0x41c>
   11128:	mov	r0, #0
   1112c:	bl	10c50 <dcgettext@plt>
   11130:	mov	r1, r0
   11134:	ldr	r3, [pc, #208]	; 1120c <abort@plt+0x424>
   11138:	b	110c4 <abort@plt+0x2dc>
   1113c:	mov	r2, #5
   11140:	ldr	r1, [pc, #168]	; 111f0 <abort@plt+0x408>
   11144:	mov	r0, #0
   11148:	bl	10c50 <dcgettext@plt>
   1114c:	ldr	r3, [pc, #160]	; 111f4 <abort@plt+0x40c>
   11150:	ldr	r2, [pc, #160]	; 111f8 <abort@plt+0x410>
   11154:	mov	r1, r0
   11158:	mov	r0, #1
   1115c:	bl	10d4c <__printf_chk@plt>
   11160:	mov	r1, #0
   11164:	mov	r0, #5
   11168:	bl	10da0 <setlocale@plt>
   1116c:	cmp	r0, #0
   11170:	beq	110f8 <abort@plt+0x310>
   11174:	mov	r2, #3
   11178:	ldr	r1, [pc, #124]	; 111fc <abort@plt+0x414>
   1117c:	bl	10ddc <strncmp@plt>
   11180:	cmp	r0, #0
   11184:	bne	110d4 <abort@plt+0x2ec>
   11188:	mov	r2, #5
   1118c:	ldr	r1, [pc, #108]	; 11200 <abort@plt+0x418>
   11190:	mov	r0, #0
   11194:	bl	10c50 <dcgettext@plt>
   11198:	ldr	r4, [pc, #76]	; 111ec <abort@plt+0x404>
   1119c:	mov	r3, r4
   111a0:	ldr	r2, [pc, #76]	; 111f4 <abort@plt+0x40c>
   111a4:	mov	r1, r0
   111a8:	mov	r0, #1
   111ac:	bl	10d4c <__printf_chk@plt>
   111b0:	mov	r2, #5
   111b4:	ldr	r1, [pc, #72]	; 11204 <abort@plt+0x41c>
   111b8:	mov	r0, #0
   111bc:	bl	10c50 <dcgettext@plt>
   111c0:	mov	r1, r0
   111c4:	ldr	r3, [pc, #64]	; 1120c <abort@plt+0x424>
   111c8:	b	110c4 <abort@plt+0x2dc>
   111cc:	andeq	r6, r2, r0, lsr r1
   111d0:			; <UNDEFINED> instruction: 0x00014bb4
   111d4:	andeq	r6, r2, r8, asr #2
   111d8:	ldrdeq	r4, [r1], -ip
   111dc:	andeq	r4, r1, r4, lsl #26
   111e0:	andeq	r6, r2, r4, lsr r1
   111e4:	andeq	r4, r1, r4, lsr sp
   111e8:	andeq	r4, r1, r4, ror fp
   111ec:	andeq	r4, r1, ip, lsr #23
   111f0:	andeq	r4, r1, ip, ror #26
   111f4:	andeq	r4, r1, r4, lsl #27
   111f8:	andeq	r4, r1, ip, lsr #27
   111fc:			; <UNDEFINED> instruction: 0x00014dbc
   11200:	andeq	r4, r1, r8, lsl #28
   11204:	andeq	r4, r1, r4, lsr #28
   11208:	andeq	r4, r1, r0, lsr sp
   1120c:	ldrdeq	r4, [r1], -ip
   11210:	andeq	r4, r1, r0, asr #27
   11214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11218:	vpush	{d8-d9}
   1121c:	sub	sp, sp, #52	; 0x34
   11220:	mov	r8, r0
   11224:	mov	r4, r1
   11228:	ldr	r0, [r1]
   1122c:	bl	117e8 <abort@plt+0xa00>
   11230:	ldr	r1, [pc, #592]	; 11488 <abort@plt+0x6a0>
   11234:	mov	r0, #6
   11238:	bl	10da0 <setlocale@plt>
   1123c:	ldr	r5, [pc, #584]	; 1148c <abort@plt+0x6a4>
   11240:	ldr	r1, [pc, #584]	; 11490 <abort@plt+0x6a8>
   11244:	mov	r0, r5
   11248:	bl	10dd0 <bindtextdomain@plt>
   1124c:	mov	r0, r5
   11250:	bl	10c68 <textdomain@plt>
   11254:	ldr	r0, [pc, #568]	; 11494 <abort@plt+0x6ac>
   11258:	bl	14b50 <abort@plt+0x3d68>
   1125c:	mov	r3, #0
   11260:	str	r3, [sp, #20]
   11264:	ldr	r3, [pc, #556]	; 11498 <abort@plt+0x6b0>
   11268:	str	r3, [sp, #16]
   1126c:	ldr	r3, [pc, #552]	; 1149c <abort@plt+0x6b4>
   11270:	str	r3, [sp, #12]
   11274:	ldr	r3, [pc, #548]	; 114a0 <abort@plt+0x6b8>
   11278:	str	r3, [sp, #8]
   1127c:	mov	r3, #1
   11280:	str	r3, [sp, #4]
   11284:	ldr	r3, [pc, #536]	; 114a4 <abort@plt+0x6bc>
   11288:	ldr	r3, [r3]
   1128c:	str	r3, [sp]
   11290:	ldr	r3, [pc, #528]	; 114a8 <abort@plt+0x6c0>
   11294:	ldr	r2, [pc, #528]	; 114ac <abort@plt+0x6c4>
   11298:	mov	r1, r4
   1129c:	mov	r0, r8
   112a0:	bl	11718 <abort@plt+0x930>
   112a4:	cmp	r8, #1
   112a8:	beq	112dc <abort@plt+0x4f4>
   112ac:	ldr	r3, [pc, #508]	; 114b0 <abort@plt+0x6c8>
   112b0:	ldr	r5, [r3]
   112b4:	cmp	r8, r5
   112b8:	ble	1135c <abort@plt+0x574>
   112bc:	add	r4, r4, r5, lsl #2
   112c0:	mov	r7, #1
   112c4:	vldr	d8, [pc, #436]	; 11480 <abort@plt+0x698>
   112c8:	ldr	r9, [pc, #484]	; 114b4 <abort@plt+0x6cc>
   112cc:	ldr	sl, [pc, #484]	; 114b8 <abort@plt+0x6d0>
   112d0:	vmov.f64	d9, d8
   112d4:	ldr	fp, [pc, #480]	; 114bc <abort@plt+0x6d4>
   112d8:	b	113f0 <abort@plt+0x608>
   112dc:	mov	r2, #5
   112e0:	ldr	r1, [pc, #472]	; 114c0 <abort@plt+0x6d8>
   112e4:	mov	r0, #0
   112e8:	bl	10c50 <dcgettext@plt>
   112ec:	mov	r2, r0
   112f0:	mov	r1, #0
   112f4:	mov	r0, r1
   112f8:	bl	10cbc <error@plt>
   112fc:	mov	r0, #1
   11300:	bl	10f20 <abort@plt+0x138>
   11304:	mov	r3, #1
   11308:	str	r3, [sp, #28]
   1130c:	vldr	s13, [sp, #28]
   11310:	vcvt.f64.s32	d6, s13
   11314:	vmul.f64	d7, d6, d7
   11318:	vstr	d7, [sp, #40]	; 0x28
   1131c:	b	113d8 <abort@plt+0x5f0>
   11320:	mov	r3, #3600	; 0xe10
   11324:	str	r3, [sp, #28]
   11328:	b	1130c <abort@plt+0x524>
   1132c:	cmp	r7, #0
   11330:	beq	11354 <abort@plt+0x56c>
   11334:	vmov.f64	d0, d8
   11338:	bl	13eb8 <abort@plt+0x30d0>
   1133c:	cmp	r0, #0
   11340:	bne	11364 <abort@plt+0x57c>
   11344:	mov	r0, #0
   11348:	add	sp, sp, #52	; 0x34
   1134c:	vpop	{d8-d9}
   11350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11354:	mov	r0, #1
   11358:	bl	10f20 <abort@plt+0x138>
   1135c:	vldr	d8, [pc, #284]	; 11480 <abort@plt+0x698>
   11360:	b	11334 <abort@plt+0x54c>
   11364:	bl	10d28 <__errno_location@plt>
   11368:	ldr	r4, [r0]
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #332]	; 114c4 <abort@plt+0x6dc>
   11374:	mov	r0, #0
   11378:	bl	10c50 <dcgettext@plt>
   1137c:	mov	r2, r0
   11380:	mov	r1, r4
   11384:	mov	r0, #1
   11388:	bl	10cbc <error@plt>
   1138c:	cmp	r3, #109	; 0x6d
   11390:	moveq	r3, #60	; 0x3c
   11394:	streq	r3, [sp, #28]
   11398:	beq	1130c <abort@plt+0x524>
   1139c:	cmp	r3, #115	; 0x73
   113a0:	beq	11470 <abort@plt+0x688>
   113a4:	mov	r2, #5
   113a8:	mov	r1, sl
   113ac:	mov	r0, #0
   113b0:	bl	10c50 <dcgettext@plt>
   113b4:	mov	r7, r0
   113b8:	ldr	r0, [r6]
   113bc:	bl	13338 <abort@plt+0x2550>
   113c0:	mov	r3, r0
   113c4:	mov	r2, r7
   113c8:	mov	r1, #0
   113cc:	mov	r0, r1
   113d0:	bl	10cbc <error@plt>
   113d4:	mov	r7, #0
   113d8:	vldr	d7, [sp, #40]	; 0x28
   113dc:	vadd.f64	d8, d8, d7
   113e0:	add	r5, r5, #1
   113e4:	add	r4, r4, #4
   113e8:	cmp	r8, r5
   113ec:	beq	1132c <abort@plt+0x544>
   113f0:	mov	r6, r4
   113f4:	mov	r3, r9
   113f8:	add	r2, sp, #40	; 0x28
   113fc:	add	r1, sp, #36	; 0x24
   11400:	ldr	r0, [r4]
   11404:	bl	13f40 <abort@plt+0x3158>
   11408:	cmp	r0, #0
   1140c:	bne	11420 <abort@plt+0x638>
   11410:	bl	10d28 <__errno_location@plt>
   11414:	ldr	r3, [r0]
   11418:	cmp	r3, #34	; 0x22
   1141c:	bne	113a4 <abort@plt+0x5bc>
   11420:	vldr	d7, [sp, #40]	; 0x28
   11424:	vcmpe.f64	d7, d9
   11428:	vmrs	APSR_nzcv, fpscr
   1142c:	blt	113a4 <abort@plt+0x5bc>
   11430:	ldr	r2, [sp, #36]	; 0x24
   11434:	ldrb	r3, [r2]
   11438:	cmp	r3, #0
   1143c:	beq	11304 <abort@plt+0x51c>
   11440:	ldrb	r2, [r2, #1]
   11444:	cmp	r2, #0
   11448:	bne	113a4 <abort@plt+0x5bc>
   1144c:	cmp	r3, #104	; 0x68
   11450:	beq	11320 <abort@plt+0x538>
   11454:	bhi	1138c <abort@plt+0x5a4>
   11458:	cmp	r3, #0
   1145c:	beq	11470 <abort@plt+0x688>
   11460:	cmp	r3, #100	; 0x64
   11464:	streq	fp, [sp, #28]
   11468:	beq	1130c <abort@plt+0x524>
   1146c:	b	113a4 <abort@plt+0x5bc>
   11470:	mov	r3, #1
   11474:	str	r3, [sp, #28]
   11478:	b	1130c <abort@plt+0x524>
   1147c:	nop			; (mov r0, r0)
	...
   11488:	andeq	r4, r1, r0, lsr sp
   1148c:			; <UNDEFINED> instruction: 0x00014db0
   11490:	andeq	r4, r1, r8, asr lr
   11494:	andeq	r1, r1, r8, ror #10
   11498:	andeq	r4, r1, r0, ror lr
   1149c:	andeq	r4, r1, ip, ror lr
   114a0:	andeq	r0, r1, r0, lsr #30
   114a4:	ldrdeq	r6, [r2], -r8
   114a8:	andeq	r4, r1, ip, lsr #27
   114ac:	andeq	r4, r1, ip, lsr #23
   114b0:	andeq	r6, r2, r8, lsr #2
   114b4:	andeq	r1, r1, r8, asr #9
   114b8:	muleq	r1, ip, lr
   114bc:	andeq	r5, r1, r0, lsl #3
   114c0:	andeq	r4, r1, ip, lsl #29
   114c4:			; <UNDEFINED> instruction: 0x00014eb8
   114c8:	push	{r4, r5, r6, r7, lr}
   114cc:	vpush	{d8}
   114d0:	sub	sp, sp, #12
   114d4:	mov	r5, r0
   114d8:	mov	r4, r1
   114dc:	add	r1, sp, #4
   114e0:	bl	10d58 <strtod@plt>
   114e4:	vmov.f64	d8, d0
   114e8:	ldr	r3, [sp, #4]
   114ec:	ldrb	r3, [r3]
   114f0:	cmp	r3, #0
   114f4:	bne	11514 <abort@plt+0x72c>
   114f8:	cmp	r4, #0
   114fc:	ldrne	r3, [sp, #4]
   11500:	strne	r3, [r4]
   11504:	vmov.f64	d0, d8
   11508:	add	sp, sp, #12
   1150c:	vpop	{d8}
   11510:	pop	{r4, r5, r6, r7, pc}
   11514:	bl	10d28 <__errno_location@plt>
   11518:	mov	r6, r0
   1151c:	ldr	r7, [r0]
   11520:	mov	r1, sp
   11524:	mov	r0, r5
   11528:	bl	140b8 <abort@plt+0x32d0>
   1152c:	ldr	r3, [sp]
   11530:	ldr	r2, [sp, #4]
   11534:	cmp	r2, r3
   11538:	strcc	r3, [sp, #4]
   1153c:	vmovcc.f64	d8, d0
   11540:	strcs	r7, [r6]
   11544:	b	114f8 <abort@plt+0x710>
   11548:	ldr	r3, [pc, #4]	; 11554 <abort@plt+0x76c>
   1154c:	str	r0, [r3]
   11550:	bx	lr
   11554:	andeq	r6, r2, r0, asr #2
   11558:	ldr	r3, [pc, #4]	; 11564 <abort@plt+0x77c>
   1155c:	strb	r0, [r3, #4]
   11560:	bx	lr
   11564:	andeq	r6, r2, r0, asr #2
   11568:	push	{r4, r5, r6, lr}
   1156c:	sub	sp, sp, #8
   11570:	ldr	r3, [pc, #200]	; 11640 <abort@plt+0x858>
   11574:	ldr	r0, [r3]
   11578:	bl	14144 <abort@plt+0x335c>
   1157c:	cmp	r0, #0
   11580:	beq	115a4 <abort@plt+0x7bc>
   11584:	ldr	r3, [pc, #184]	; 11644 <abort@plt+0x85c>
   11588:	ldrb	r3, [r3, #4]
   1158c:	cmp	r3, #0
   11590:	beq	115c0 <abort@plt+0x7d8>
   11594:	bl	10d28 <__errno_location@plt>
   11598:	ldr	r3, [r0]
   1159c:	cmp	r3, #32
   115a0:	bne	115c0 <abort@plt+0x7d8>
   115a4:	ldr	r3, [pc, #156]	; 11648 <abort@plt+0x860>
   115a8:	ldr	r0, [r3]
   115ac:	bl	14144 <abort@plt+0x335c>
   115b0:	cmp	r0, #0
   115b4:	bne	11634 <abort@plt+0x84c>
   115b8:	add	sp, sp, #8
   115bc:	pop	{r4, r5, r6, pc}
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #128]	; 1164c <abort@plt+0x864>
   115c8:	mov	r0, #0
   115cc:	bl	10c50 <dcgettext@plt>
   115d0:	mov	r4, r0
   115d4:	ldr	r3, [pc, #104]	; 11644 <abort@plt+0x85c>
   115d8:	ldr	r5, [r3]
   115dc:	cmp	r5, #0
   115e0:	beq	11618 <abort@plt+0x830>
   115e4:	bl	10d28 <__errno_location@plt>
   115e8:	ldr	r6, [r0]
   115ec:	mov	r0, r5
   115f0:	bl	131b0 <abort@plt+0x23c8>
   115f4:	str	r4, [sp]
   115f8:	mov	r3, r0
   115fc:	ldr	r2, [pc, #76]	; 11650 <abort@plt+0x868>
   11600:	mov	r1, r6
   11604:	mov	r0, #0
   11608:	bl	10cbc <error@plt>
   1160c:	ldr	r3, [pc, #64]	; 11654 <abort@plt+0x86c>
   11610:	ldr	r0, [r3]
   11614:	bl	10c14 <_exit@plt>
   11618:	bl	10d28 <__errno_location@plt>
   1161c:	mov	r3, r4
   11620:	ldr	r2, [pc, #48]	; 11658 <abort@plt+0x870>
   11624:	ldr	r1, [r0]
   11628:	mov	r0, #0
   1162c:	bl	10cbc <error@plt>
   11630:	b	1160c <abort@plt+0x824>
   11634:	ldr	r3, [pc, #24]	; 11654 <abort@plt+0x86c>
   11638:	ldr	r0, [r3]
   1163c:	bl	10c14 <_exit@plt>
   11640:	andeq	r6, r2, r4, lsr r1
   11644:	andeq	r6, r2, r0, asr #2
   11648:	andeq	r6, r2, r0, lsr r1
   1164c:	andeq	r4, r1, r0, asr pc
   11650:	andeq	r4, r1, ip, asr pc
   11654:	ldrdeq	r6, [r2], -ip
   11658:	andeq	r4, r1, r0, ror #30
   1165c:	push	{r4, r5, r6, lr}
   11660:	sub	sp, sp, #16
   11664:	ldr	ip, [pc, #152]	; 11704 <abort@plt+0x91c>
   11668:	ldr	r4, [ip]
   1166c:	mov	lr, #0
   11670:	str	lr, [ip]
   11674:	cmp	r0, #2
   11678:	beq	11698 <abort@plt+0x8b0>
   1167c:	ldr	r3, [pc, #128]	; 11704 <abort@plt+0x91c>
   11680:	str	r4, [r3]
   11684:	mov	r2, #0
   11688:	ldr	r3, [pc, #120]	; 11708 <abort@plt+0x920>
   1168c:	str	r2, [r3]
   11690:	add	sp, sp, #16
   11694:	pop	{r4, r5, r6, pc}
   11698:	mov	r6, r3
   1169c:	mov	r5, r2
   116a0:	str	lr, [sp]
   116a4:	ldr	r3, [pc, #96]	; 1170c <abort@plt+0x924>
   116a8:	ldr	r2, [pc, #96]	; 11710 <abort@plt+0x928>
   116ac:	bl	10cf8 <getopt_long@plt>
   116b0:	cmn	r0, #1
   116b4:	beq	1167c <abort@plt+0x894>
   116b8:	cmp	r0, #104	; 0x68
   116bc:	beq	116f4 <abort@plt+0x90c>
   116c0:	cmp	r0, #118	; 0x76
   116c4:	bne	1167c <abort@plt+0x894>
   116c8:	add	r3, sp, #40	; 0x28
   116cc:	str	r3, [sp, #12]
   116d0:	ldr	r2, [pc, #60]	; 11714 <abort@plt+0x92c>
   116d4:	ldr	r0, [r2]
   116d8:	str	r3, [sp]
   116dc:	ldr	r3, [sp, #32]
   116e0:	mov	r2, r6
   116e4:	mov	r1, r5
   116e8:	bl	137b8 <abort@plt+0x29d0>
   116ec:	mov	r0, #0
   116f0:	bl	10d10 <exit@plt>
   116f4:	mov	r0, #0
   116f8:	ldr	r3, [sp, #36]	; 0x24
   116fc:	blx	r3
   11700:	b	1167c <abort@plt+0x894>
   11704:	andeq	r6, r2, r8, lsr r1
   11708:	andeq	r6, r2, r8, lsr #2
   1170c:	andeq	r4, r1, r4, ror #30
   11710:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11714:	andeq	r6, r2, r4, lsr r1
   11718:	push	{r4, r5, r6, lr}
   1171c:	sub	sp, sp, #16
   11720:	mov	r5, r2
   11724:	mov	r6, r3
   11728:	ldr	r3, [pc, #160]	; 117d0 <abort@plt+0x9e8>
   1172c:	ldr	r4, [r3]
   11730:	mov	r2, #1
   11734:	str	r2, [r3]
   11738:	mov	r3, #0
   1173c:	str	r3, [sp]
   11740:	ldr	r3, [pc, #140]	; 117d4 <abort@plt+0x9ec>
   11744:	ldr	ip, [pc, #140]	; 117d8 <abort@plt+0x9f0>
   11748:	ldr	r2, [pc, #140]	; 117dc <abort@plt+0x9f4>
   1174c:	ldrb	lr, [sp, #36]	; 0x24
   11750:	cmp	lr, #0
   11754:	moveq	r2, ip
   11758:	bl	10cf8 <getopt_long@plt>
   1175c:	cmn	r0, #1
   11760:	beq	11794 <abort@plt+0x9ac>
   11764:	cmp	r0, #104	; 0x68
   11768:	beq	11788 <abort@plt+0x9a0>
   1176c:	cmp	r0, #118	; 0x76
   11770:	beq	117a4 <abort@plt+0x9bc>
   11774:	ldr	r3, [pc, #100]	; 117e0 <abort@plt+0x9f8>
   11778:	ldr	r0, [r3]
   1177c:	ldr	r3, [sp, #40]	; 0x28
   11780:	blx	r3
   11784:	b	11794 <abort@plt+0x9ac>
   11788:	mov	r0, #0
   1178c:	ldr	r3, [sp, #40]	; 0x28
   11790:	blx	r3
   11794:	ldr	r3, [pc, #52]	; 117d0 <abort@plt+0x9e8>
   11798:	str	r4, [r3]
   1179c:	add	sp, sp, #16
   117a0:	pop	{r4, r5, r6, pc}
   117a4:	add	r3, sp, #44	; 0x2c
   117a8:	str	r3, [sp, #12]
   117ac:	ldr	r2, [pc, #48]	; 117e4 <abort@plt+0x9fc>
   117b0:	ldr	r0, [r2]
   117b4:	str	r3, [sp]
   117b8:	ldr	r3, [sp, #32]
   117bc:	mov	r2, r6
   117c0:	mov	r1, r5
   117c4:	bl	137b8 <abort@plt+0x29d0>
   117c8:	mov	r0, #0
   117cc:	bl	10d10 <exit@plt>
   117d0:	andeq	r6, r2, r8, lsr r1
   117d4:	andeq	r4, r1, r4, ror #30
   117d8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   117dc:	andeq	r4, r1, r0, lsr sp
   117e0:	ldrdeq	r6, [r2], -ip
   117e4:	andeq	r6, r2, r4, lsr r1
   117e8:	push	{r4, r5, r6, lr}
   117ec:	subs	r4, r0, #0
   117f0:	beq	11868 <abort@plt+0xa80>
   117f4:	mov	r1, #47	; 0x2f
   117f8:	mov	r0, r4
   117fc:	bl	10dac <strrchr@plt>
   11800:	cmp	r0, #0
   11804:	addne	r5, r0, #1
   11808:	moveq	r5, r4
   1180c:	sub	r3, r5, r4
   11810:	cmp	r3, #6
   11814:	ble	11854 <abort@plt+0xa6c>
   11818:	mov	r2, #7
   1181c:	ldr	r1, [pc, #96]	; 11884 <abort@plt+0xa9c>
   11820:	sub	r0, r5, #7
   11824:	bl	10ddc <strncmp@plt>
   11828:	cmp	r0, #0
   1182c:	bne	11854 <abort@plt+0xa6c>
   11830:	mov	r2, #3
   11834:	ldr	r1, [pc, #76]	; 11888 <abort@plt+0xaa0>
   11838:	mov	r0, r5
   1183c:	bl	10ddc <strncmp@plt>
   11840:	cmp	r0, #0
   11844:	addeq	r4, r5, #3
   11848:	ldreq	r3, [pc, #60]	; 1188c <abort@plt+0xaa4>
   1184c:	streq	r4, [r3]
   11850:	movne	r4, r5
   11854:	ldr	r3, [pc, #52]	; 11890 <abort@plt+0xaa8>
   11858:	str	r4, [r3]
   1185c:	ldr	r3, [pc, #48]	; 11894 <abort@plt+0xaac>
   11860:	str	r4, [r3]
   11864:	pop	{r4, r5, r6, pc}
   11868:	ldr	r3, [pc, #40]	; 11898 <abort@plt+0xab0>
   1186c:	ldr	r3, [r3]
   11870:	mov	r2, #55	; 0x37
   11874:	mov	r1, #1
   11878:	ldr	r0, [pc, #28]	; 1189c <abort@plt+0xab4>
   1187c:	bl	10c80 <fwrite@plt>
   11880:	bl	10de8 <abort@plt>
   11884:	andeq	r4, r1, r0, ror #31
   11888:	andeq	r4, r1, r8, ror #31
   1188c:	andeq	r6, r2, r0, lsr #2
   11890:	andeq	r6, r2, r8, asr #2
   11894:	andeq	r6, r2, r4, lsr #2
   11898:	andeq	r6, r2, r0, lsr r1
   1189c:	andeq	r4, r1, r8, lsr #31
   118a0:	push	{r4, r5, r6, lr}
   118a4:	mov	r5, r0
   118a8:	mov	r4, r1
   118ac:	mov	r2, #48	; 0x30
   118b0:	mov	r1, #0
   118b4:	bl	10d40 <memset@plt>
   118b8:	cmp	r4, #10
   118bc:	beq	118cc <abort@plt+0xae4>
   118c0:	str	r4, [r5]
   118c4:	mov	r0, r5
   118c8:	pop	{r4, r5, r6, pc}
   118cc:	bl	10de8 <abort@plt>
   118d0:	push	{r4, r5, r6, lr}
   118d4:	mov	r4, r0
   118d8:	mov	r5, r1
   118dc:	mov	r2, #5
   118e0:	mov	r1, r0
   118e4:	mov	r0, #0
   118e8:	bl	10c50 <dcgettext@plt>
   118ec:	cmp	r4, r0
   118f0:	popne	{r4, r5, r6, pc}
   118f4:	bl	144b0 <abort@plt+0x36c8>
   118f8:	ldrb	r3, [r0]
   118fc:	bic	r3, r3, #32
   11900:	cmp	r3, #85	; 0x55
   11904:	beq	11980 <abort@plt+0xb98>
   11908:	cmp	r3, #71	; 0x47
   1190c:	bne	119dc <abort@plt+0xbf4>
   11910:	ldrb	r3, [r0, #1]
   11914:	bic	r3, r3, #32
   11918:	cmp	r3, #66	; 0x42
   1191c:	bne	119dc <abort@plt+0xbf4>
   11920:	ldrb	r3, [r0, #2]
   11924:	cmp	r3, #49	; 0x31
   11928:	bne	119dc <abort@plt+0xbf4>
   1192c:	ldrb	r3, [r0, #3]
   11930:	cmp	r3, #56	; 0x38
   11934:	bne	119dc <abort@plt+0xbf4>
   11938:	ldrb	r3, [r0, #4]
   1193c:	cmp	r3, #48	; 0x30
   11940:	bne	119dc <abort@plt+0xbf4>
   11944:	ldrb	r3, [r0, #5]
   11948:	cmp	r3, #51	; 0x33
   1194c:	bne	119dc <abort@plt+0xbf4>
   11950:	ldrb	r3, [r0, #6]
   11954:	cmp	r3, #48	; 0x30
   11958:	bne	119dc <abort@plt+0xbf4>
   1195c:	ldrb	r3, [r0, #7]
   11960:	cmp	r3, #0
   11964:	bne	119dc <abort@plt+0xbf4>
   11968:	ldrb	r2, [r4]
   1196c:	ldr	r3, [pc, #124]	; 119f0 <abort@plt+0xc08>
   11970:	ldr	r0, [pc, #124]	; 119f4 <abort@plt+0xc0c>
   11974:	cmp	r2, #96	; 0x60
   11978:	movne	r0, r3
   1197c:	pop	{r4, r5, r6, pc}
   11980:	ldrb	r3, [r0, #1]
   11984:	bic	r3, r3, #32
   11988:	cmp	r3, #84	; 0x54
   1198c:	bne	119dc <abort@plt+0xbf4>
   11990:	ldrb	r3, [r0, #2]
   11994:	bic	r3, r3, #32
   11998:	cmp	r3, #70	; 0x46
   1199c:	bne	119dc <abort@plt+0xbf4>
   119a0:	ldrb	r3, [r0, #3]
   119a4:	cmp	r3, #45	; 0x2d
   119a8:	bne	119dc <abort@plt+0xbf4>
   119ac:	ldrb	r3, [r0, #4]
   119b0:	cmp	r3, #56	; 0x38
   119b4:	bne	119dc <abort@plt+0xbf4>
   119b8:	ldrb	r3, [r0, #5]
   119bc:	cmp	r3, #0
   119c0:	bne	119dc <abort@plt+0xbf4>
   119c4:	ldrb	r2, [r4]
   119c8:	ldr	r3, [pc, #40]	; 119f8 <abort@plt+0xc10>
   119cc:	ldr	r0, [pc, #40]	; 119fc <abort@plt+0xc14>
   119d0:	cmp	r2, #96	; 0x60
   119d4:	movne	r0, r3
   119d8:	pop	{r4, r5, r6, pc}
   119dc:	ldr	r3, [pc, #28]	; 11a00 <abort@plt+0xc18>
   119e0:	ldr	r0, [pc, #28]	; 11a04 <abort@plt+0xc1c>
   119e4:	cmp	r5, #9
   119e8:	movne	r0, r3
   119ec:	pop	{r4, r5, r6, pc}
   119f0:	andeq	r5, r1, r4, asr #32
   119f4:	andeq	r5, r1, r0, asr r0
   119f8:	andeq	r5, r1, r0, asr #32
   119fc:	andeq	r5, r1, r4, asr r0
   11a00:	andeq	r5, r1, r8, asr #32
   11a04:	andeq	r5, r1, ip, asr #32
   11a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a0c:	sub	sp, sp, #116	; 0x74
   11a10:	str	r0, [sp, #36]	; 0x24
   11a14:	mov	sl, r1
   11a18:	str	r2, [sp, #52]	; 0x34
   11a1c:	str	r3, [sp, #28]
   11a20:	ldr	r8, [sp, #152]	; 0x98
   11a24:	bl	10c98 <__ctype_get_mb_cur_max@plt>
   11a28:	str	r0, [sp, #84]	; 0x54
   11a2c:	ldr	r3, [sp, #156]	; 0x9c
   11a30:	lsr	r3, r3, #1
   11a34:	and	r3, r3, #1
   11a38:	str	r3, [sp, #32]
   11a3c:	mov	r3, #1
   11a40:	str	r3, [sp, #40]	; 0x28
   11a44:	mov	r3, #0
   11a48:	str	r3, [sp, #80]	; 0x50
   11a4c:	str	r3, [sp, #44]	; 0x2c
   11a50:	str	r3, [sp, #48]	; 0x30
   11a54:	str	r3, [sp, #60]	; 0x3c
   11a58:	str	r3, [sp, #72]	; 0x48
   11a5c:	str	r3, [sp, #76]	; 0x4c
   11a60:	mov	r7, sl
   11a64:	mov	sl, r8
   11a68:	cmp	sl, #10
   11a6c:	ldrls	pc, [pc, sl, lsl #2]
   11a70:	b	11c28 <abort@plt+0xe40>
   11a74:	ldrdeq	r1, [r1], -r8
   11a78:	andeq	r1, r1, r8, lsr #21
   11a7c:	andeq	r1, r1, r4, lsl #24
   11a80:	andeq	r1, r1, r0, lsr #21
   11a84:			; <UNDEFINED> instruction: 0x00011bb8
   11a88:	andeq	r1, r1, r8, ror #21
   11a8c:	andeq	r2, r1, r4, asr fp
   11a90:	andeq	r1, r1, ip, lsr #24
   11a94:	andeq	r1, r1, r4, lsr #22
   11a98:	andeq	r1, r1, r4, lsr #22
   11a9c:	andeq	r1, r1, r4, lsr #22
   11aa0:	mov	r3, #1
   11aa4:	str	r3, [sp, #48]	; 0x30
   11aa8:	mov	r3, #1
   11aac:	str	r3, [sp, #32]
   11ab0:	str	r3, [sp, #60]	; 0x3c
   11ab4:	ldr	r3, [pc, #4068]	; 12aa0 <abort@plt+0x1cb8>
   11ab8:	str	r3, [sp, #72]	; 0x48
   11abc:	mov	fp, #0
   11ac0:	mov	sl, #2
   11ac4:	mov	r6, #0
   11ac8:	ldr	r3, [sp, #48]	; 0x30
   11acc:	eor	r3, r3, #1
   11ad0:	str	r3, [sp, #68]	; 0x44
   11ad4:	b	123bc <abort@plt+0x15d4>
   11ad8:	mov	r3, #0
   11adc:	str	r3, [sp, #32]
   11ae0:	mov	fp, r3
   11ae4:	b	11ac4 <abort@plt+0xcdc>
   11ae8:	ldr	r3, [sp, #32]
   11aec:	cmp	r3, #0
   11af0:	bne	11c44 <abort@plt+0xe5c>
   11af4:	cmp	r7, #0
   11af8:	beq	11c64 <abort@plt+0xe7c>
   11afc:	ldr	r3, [sp, #36]	; 0x24
   11b00:	mov	r2, #34	; 0x22
   11b04:	strb	r2, [r3]
   11b08:	mov	r3, #1
   11b0c:	str	r3, [sp, #48]	; 0x30
   11b10:	str	r3, [sp, #60]	; 0x3c
   11b14:	ldr	r3, [pc, #3980]	; 12aa8 <abort@plt+0x1cc0>
   11b18:	str	r3, [sp, #72]	; 0x48
   11b1c:	mov	fp, #1
   11b20:	b	11ac4 <abort@plt+0xcdc>
   11b24:	cmp	sl, #10
   11b28:	beq	11b4c <abort@plt+0xd64>
   11b2c:	mov	r1, sl
   11b30:	ldr	r0, [pc, #3948]	; 12aa4 <abort@plt+0x1cbc>
   11b34:	bl	118d0 <abort@plt+0xae8>
   11b38:	str	r0, [sp, #164]	; 0xa4
   11b3c:	mov	r1, sl
   11b40:	ldr	r0, [pc, #3928]	; 12aa0 <abort@plt+0x1cb8>
   11b44:	bl	118d0 <abort@plt+0xae8>
   11b48:	str	r0, [sp, #168]	; 0xa8
   11b4c:	ldr	r3, [sp, #32]
   11b50:	cmp	r3, #0
   11b54:	movne	fp, #0
   11b58:	bne	11b90 <abort@plt+0xda8>
   11b5c:	ldr	r3, [sp, #164]	; 0xa4
   11b60:	ldrb	r3, [r3]
   11b64:	cmp	r3, #0
   11b68:	beq	11bb0 <abort@plt+0xdc8>
   11b6c:	ldr	r2, [sp, #164]	; 0xa4
   11b70:	mov	fp, #0
   11b74:	ldr	r1, [sp, #36]	; 0x24
   11b78:	cmp	r7, fp
   11b7c:	strbhi	r3, [r1, fp]
   11b80:	add	fp, fp, #1
   11b84:	ldrb	r3, [r2, #1]!
   11b88:	cmp	r3, #0
   11b8c:	bne	11b78 <abort@plt+0xd90>
   11b90:	ldr	r0, [sp, #168]	; 0xa8
   11b94:	bl	10d1c <strlen@plt>
   11b98:	str	r0, [sp, #60]	; 0x3c
   11b9c:	ldr	r3, [sp, #168]	; 0xa8
   11ba0:	str	r3, [sp, #72]	; 0x48
   11ba4:	mov	r3, #1
   11ba8:	str	r3, [sp, #48]	; 0x30
   11bac:	b	11ac4 <abort@plt+0xcdc>
   11bb0:	mov	fp, #0
   11bb4:	b	11b90 <abort@plt+0xda8>
   11bb8:	ldr	r3, [sp, #32]
   11bbc:	cmp	r3, #0
   11bc0:	bne	11c80 <abort@plt+0xe98>
   11bc4:	mov	r3, #1
   11bc8:	str	r3, [sp, #48]	; 0x30
   11bcc:	cmp	r7, #0
   11bd0:	beq	11c9c <abort@plt+0xeb4>
   11bd4:	ldr	r3, [sp, #36]	; 0x24
   11bd8:	mov	r2, #39	; 0x27
   11bdc:	strb	r2, [r3]
   11be0:	mov	r3, #0
   11be4:	str	r3, [sp, #32]
   11be8:	mov	r3, #1
   11bec:	str	r3, [sp, #60]	; 0x3c
   11bf0:	ldr	r3, [pc, #3752]	; 12aa0 <abort@plt+0x1cb8>
   11bf4:	str	r3, [sp, #72]	; 0x48
   11bf8:	mov	fp, #1
   11bfc:	mov	sl, #2
   11c00:	b	11ac4 <abort@plt+0xcdc>
   11c04:	ldr	r3, [sp, #32]
   11c08:	cmp	r3, #0
   11c0c:	beq	11bcc <abort@plt+0xde4>
   11c10:	mov	r3, #1
   11c14:	str	r3, [sp, #60]	; 0x3c
   11c18:	ldr	r3, [pc, #3712]	; 12aa0 <abort@plt+0x1cb8>
   11c1c:	str	r3, [sp, #72]	; 0x48
   11c20:	mov	fp, #0
   11c24:	b	11ac4 <abort@plt+0xcdc>
   11c28:	bl	10de8 <abort@plt>
   11c2c:	mov	r3, #0
   11c30:	str	r3, [sp, #32]
   11c34:	mov	r3, #1
   11c38:	str	r3, [sp, #48]	; 0x30
   11c3c:	mov	fp, #0
   11c40:	b	11ac4 <abort@plt+0xcdc>
   11c44:	ldr	r3, [sp, #32]
   11c48:	str	r3, [sp, #48]	; 0x30
   11c4c:	mov	r3, #1
   11c50:	str	r3, [sp, #60]	; 0x3c
   11c54:	ldr	r3, [pc, #3660]	; 12aa8 <abort@plt+0x1cc0>
   11c58:	str	r3, [sp, #72]	; 0x48
   11c5c:	mov	fp, #0
   11c60:	b	11ac4 <abort@plt+0xcdc>
   11c64:	mov	r3, #1
   11c68:	str	r3, [sp, #48]	; 0x30
   11c6c:	str	r3, [sp, #60]	; 0x3c
   11c70:	ldr	r3, [pc, #3632]	; 12aa8 <abort@plt+0x1cc0>
   11c74:	str	r3, [sp, #72]	; 0x48
   11c78:	mov	fp, #1
   11c7c:	b	11ac4 <abort@plt+0xcdc>
   11c80:	mov	r3, #1
   11c84:	str	r3, [sp, #60]	; 0x3c
   11c88:	ldr	r3, [pc, #3600]	; 12aa0 <abort@plt+0x1cb8>
   11c8c:	str	r3, [sp, #72]	; 0x48
   11c90:	mov	fp, #0
   11c94:	mov	sl, #2
   11c98:	b	11ac4 <abort@plt+0xcdc>
   11c9c:	mov	r3, #0
   11ca0:	str	r3, [sp, #32]
   11ca4:	mov	r3, #1
   11ca8:	str	r3, [sp, #60]	; 0x3c
   11cac:	ldr	r3, [pc, #3564]	; 12aa0 <abort@plt+0x1cb8>
   11cb0:	str	r3, [sp, #72]	; 0x48
   11cb4:	mov	fp, #1
   11cb8:	mov	sl, #2
   11cbc:	b	11ac4 <abort@plt+0xcdc>
   11cc0:	mov	r3, #0
   11cc4:	str	r3, [sp, #56]	; 0x38
   11cc8:	ldr	r3, [sp, #52]	; 0x34
   11ccc:	add	r2, r3, r6
   11cd0:	str	r2, [sp, #64]	; 0x40
   11cd4:	ldrb	r4, [r3, r6]
   11cd8:	cmp	r4, #126	; 0x7e
   11cdc:	ldrls	pc, [pc, r4, lsl #2]
   11ce0:	b	1251c <abort@plt+0x1734>
   11ce4:	strdeq	r1, [r1], -ip
   11ce8:	andeq	r2, r1, ip, lsl r5
   11cec:	andeq	r2, r1, ip, lsl r5
   11cf0:	andeq	r2, r1, ip, lsl r5
   11cf4:	andeq	r2, r1, ip, lsl r5
   11cf8:	andeq	r2, r1, ip, lsl r5
   11cfc:	andeq	r2, r1, ip, lsl r5
   11d00:	andeq	r2, r1, r8, asr r2
   11d04:	strdeq	r1, [r1], -r4
   11d08:	andeq	r2, r1, r0, lsl r2
   11d0c:	andeq	r2, r1, r8, lsl #4
   11d10:	andeq	r2, r1, r8, ror r1
   11d14:	andeq	r2, r1, r0, ror r1
   11d18:	andeq	r1, r1, ip, ror #29
   11d1c:	andeq	r2, r1, ip, lsl r5
   11d20:	andeq	r2, r1, ip, lsl r5
   11d24:	andeq	r2, r1, ip, lsl r5
   11d28:	andeq	r2, r1, ip, lsl r5
   11d2c:	andeq	r2, r1, ip, lsl r5
   11d30:	andeq	r2, r1, ip, lsl r5
   11d34:	andeq	r2, r1, ip, lsl r5
   11d38:	andeq	r2, r1, ip, lsl r5
   11d3c:	andeq	r2, r1, ip, lsl r5
   11d40:	andeq	r2, r1, ip, lsl r5
   11d44:	andeq	r2, r1, ip, lsl r5
   11d48:	andeq	r2, r1, ip, lsl r5
   11d4c:	andeq	r2, r1, ip, lsl r5
   11d50:	andeq	r2, r1, ip, lsl r5
   11d54:	andeq	r2, r1, ip, lsl r5
   11d58:	andeq	r2, r1, ip, lsl r5
   11d5c:	andeq	r2, r1, ip, lsl r5
   11d60:	andeq	r2, r1, ip, lsl r5
   11d64:	andeq	r2, r1, ip, lsr #5
   11d68:	andeq	r2, r1, r8, lsr #5
   11d6c:	andeq	r2, r1, r8, lsr #5
   11d70:	andeq	r2, r1, r0, lsl #5
   11d74:	andeq	r2, r1, r8, lsr #5
   11d78:	strdeq	r2, [r1], -r0
   11d7c:	andeq	r2, r1, r8, lsr #5
   11d80:	andeq	r2, r1, r0, lsl #9
   11d84:	andeq	r2, r1, r8, lsr #5
   11d88:	andeq	r2, r1, r8, lsr #5
   11d8c:	andeq	r2, r1, r8, lsr #5
   11d90:	strdeq	r2, [r1], -r0
   11d94:	strdeq	r2, [r1], -r0
   11d98:	strdeq	r2, [r1], -r0
   11d9c:	strdeq	r2, [r1], -r0
   11da0:	strdeq	r2, [r1], -r0
   11da4:	strdeq	r2, [r1], -r0
   11da8:	strdeq	r2, [r1], -r0
   11dac:	strdeq	r2, [r1], -r0
   11db0:	strdeq	r2, [r1], -r0
   11db4:	strdeq	r2, [r1], -r0
   11db8:	strdeq	r2, [r1], -r0
   11dbc:	strdeq	r2, [r1], -r0
   11dc0:	strdeq	r2, [r1], -r0
   11dc4:	strdeq	r2, [r1], -r0
   11dc8:	strdeq	r2, [r1], -r0
   11dcc:	strdeq	r2, [r1], -r0
   11dd0:	andeq	r2, r1, r8, lsr #5
   11dd4:	andeq	r2, r1, r8, lsr #5
   11dd8:	andeq	r2, r1, r8, lsr #5
   11ddc:	andeq	r2, r1, r8, lsr #5
   11de0:	andeq	r2, r1, r4
   11de4:	andeq	r2, r1, ip, lsl r5
   11de8:	strdeq	r2, [r1], -r0
   11dec:	strdeq	r2, [r1], -r0
   11df0:	strdeq	r2, [r1], -r0
   11df4:	strdeq	r2, [r1], -r0
   11df8:	strdeq	r2, [r1], -r0
   11dfc:	strdeq	r2, [r1], -r0
   11e00:	strdeq	r2, [r1], -r0
   11e04:	strdeq	r2, [r1], -r0
   11e08:	strdeq	r2, [r1], -r0
   11e0c:	strdeq	r2, [r1], -r0
   11e10:	strdeq	r2, [r1], -r0
   11e14:	strdeq	r2, [r1], -r0
   11e18:	strdeq	r2, [r1], -r0
   11e1c:	strdeq	r2, [r1], -r0
   11e20:	strdeq	r2, [r1], -r0
   11e24:	strdeq	r2, [r1], -r0
   11e28:	strdeq	r2, [r1], -r0
   11e2c:	strdeq	r2, [r1], -r0
   11e30:	strdeq	r2, [r1], -r0
   11e34:	strdeq	r2, [r1], -r0
   11e38:	strdeq	r2, [r1], -r0
   11e3c:	strdeq	r2, [r1], -r0
   11e40:	strdeq	r2, [r1], -r0
   11e44:	strdeq	r2, [r1], -r0
   11e48:	strdeq	r2, [r1], -r0
   11e4c:	strdeq	r2, [r1], -r0
   11e50:	andeq	r2, r1, r8, lsr #5
   11e54:	andeq	r2, r1, r0, lsl #3
   11e58:	strdeq	r2, [r1], -r0
   11e5c:	andeq	r2, r1, r8, lsr #5
   11e60:	strdeq	r2, [r1], -r0
   11e64:	andeq	r2, r1, r8, lsr #5
   11e68:	strdeq	r2, [r1], -r0
   11e6c:	strdeq	r2, [r1], -r0
   11e70:	strdeq	r2, [r1], -r0
   11e74:	strdeq	r2, [r1], -r0
   11e78:	strdeq	r2, [r1], -r0
   11e7c:	strdeq	r2, [r1], -r0
   11e80:	strdeq	r2, [r1], -r0
   11e84:	strdeq	r2, [r1], -r0
   11e88:	strdeq	r2, [r1], -r0
   11e8c:	strdeq	r2, [r1], -r0
   11e90:	strdeq	r2, [r1], -r0
   11e94:	strdeq	r2, [r1], -r0
   11e98:	strdeq	r2, [r1], -r0
   11e9c:	strdeq	r2, [r1], -r0
   11ea0:	strdeq	r2, [r1], -r0
   11ea4:	strdeq	r2, [r1], -r0
   11ea8:	strdeq	r2, [r1], -r0
   11eac:	strdeq	r2, [r1], -r0
   11eb0:	strdeq	r2, [r1], -r0
   11eb4:	strdeq	r2, [r1], -r0
   11eb8:	strdeq	r2, [r1], -r0
   11ebc:	strdeq	r2, [r1], -r0
   11ec0:	strdeq	r2, [r1], -r0
   11ec4:	strdeq	r2, [r1], -r0
   11ec8:	strdeq	r2, [r1], -r0
   11ecc:	strdeq	r2, [r1], -r0
   11ed0:	andeq	r2, r1, r0, ror #4
   11ed4:	andeq	r2, r1, r8, lsr #5
   11ed8:	andeq	r2, r1, r0, ror #4
   11edc:	andeq	r2, r1, r0, lsl #5
   11ee0:	mov	r3, #0
   11ee4:	str	r3, [sp, #56]	; 0x38
   11ee8:	b	11cc8 <abort@plt+0xee0>
   11eec:	mov	r3, #114	; 0x72
   11ef0:	b	12214 <abort@plt+0x142c>
   11ef4:	mov	r3, #98	; 0x62
   11ef8:	b	1222c <abort@plt+0x1444>
   11efc:	ldr	r3, [sp, #48]	; 0x30
   11f00:	cmp	r3, #0
   11f04:	beq	11fec <abort@plt+0x1204>
   11f08:	ldr	r3, [sp, #32]
   11f0c:	cmp	r3, #0
   11f10:	bne	12a74 <abort@plt+0x1c8c>
   11f14:	ldr	r3, [sp, #44]	; 0x2c
   11f18:	eor	r3, r3, #1
   11f1c:	cmp	sl, #2
   11f20:	movne	r3, #0
   11f24:	andeq	r3, r3, #1
   11f28:	cmp	r3, #0
   11f2c:	moveq	r2, fp
   11f30:	beq	11f74 <abort@plt+0x118c>
   11f34:	cmp	r7, fp
   11f38:	ldrhi	r2, [sp, #36]	; 0x24
   11f3c:	movhi	r1, #39	; 0x27
   11f40:	strbhi	r1, [r2, fp]
   11f44:	add	r2, fp, #1
   11f48:	cmp	r7, r2
   11f4c:	ldrhi	r1, [sp, #36]	; 0x24
   11f50:	movhi	r0, #36	; 0x24
   11f54:	strbhi	r0, [r1, r2]
   11f58:	add	r2, fp, #2
   11f5c:	cmp	r7, r2
   11f60:	ldrhi	r1, [sp, #36]	; 0x24
   11f64:	movhi	r0, #39	; 0x27
   11f68:	strbhi	r0, [r1, r2]
   11f6c:	add	r2, fp, #3
   11f70:	str	r3, [sp, #44]	; 0x2c
   11f74:	cmp	r7, r2
   11f78:	ldrhi	r3, [sp, #36]	; 0x24
   11f7c:	movhi	r1, #92	; 0x5c
   11f80:	strbhi	r1, [r3, r2]
   11f84:	add	fp, r2, #1
   11f88:	cmp	r5, #0
   11f8c:	beq	128f8 <abort@plt+0x1b10>
   11f90:	add	r3, r6, #1
   11f94:	ldr	r1, [sp, #28]
   11f98:	cmp	r1, r3
   11f9c:	bls	12908 <abort@plt+0x1b20>
   11fa0:	ldr	r1, [sp, #52]	; 0x34
   11fa4:	ldrb	r3, [r1, r3]
   11fa8:	sub	r3, r3, #48	; 0x30
   11fac:	uxtb	r3, r3
   11fb0:	cmp	r3, #9
   11fb4:	bhi	12914 <abort@plt+0x1b2c>
   11fb8:	cmp	r7, fp
   11fbc:	movhi	r3, #48	; 0x30
   11fc0:	ldrhi	r1, [sp, #36]	; 0x24
   11fc4:	strbhi	r3, [r1, fp]
   11fc8:	add	r3, r2, #2
   11fcc:	cmp	r7, r3
   11fd0:	movhi	r1, #48	; 0x30
   11fd4:	ldrhi	r0, [sp, #36]	; 0x24
   11fd8:	strbhi	r1, [r0, r3]
   11fdc:	add	fp, r2, #3
   11fe0:	ldr	r8, [sp, #32]
   11fe4:	mov	r4, #48	; 0x30
   11fe8:	b	122c4 <abort@plt+0x14dc>
   11fec:	ldr	r3, [sp, #156]	; 0x9c
   11ff0:	tst	r3, #1
   11ff4:	bne	123b8 <abort@plt+0x15d0>
   11ff8:	ldr	r5, [sp, #48]	; 0x30
   11ffc:	mov	r8, r5
   12000:	b	122c4 <abort@plt+0x14dc>
   12004:	cmp	sl, #2
   12008:	beq	12020 <abort@plt+0x1238>
   1200c:	cmp	sl, #5
   12010:	beq	12038 <abort@plt+0x1250>
   12014:	mov	r8, #0
   12018:	mov	r5, r8
   1201c:	b	122c4 <abort@plt+0x14dc>
   12020:	ldr	r3, [sp, #32]
   12024:	cmp	r3, #0
   12028:	bne	12a88 <abort@plt+0x1ca0>
   1202c:	mov	r8, r3
   12030:	mov	r5, r3
   12034:	b	122c4 <abort@plt+0x14dc>
   12038:	ldr	r3, [sp, #156]	; 0x9c
   1203c:	tst	r3, #4
   12040:	beq	12920 <abort@plt+0x1b38>
   12044:	add	r3, r6, #2
   12048:	ldr	r2, [sp, #28]
   1204c:	cmp	r2, r3
   12050:	bls	1292c <abort@plt+0x1b44>
   12054:	ldr	r2, [sp, #52]	; 0x34
   12058:	add	r2, r2, r6
   1205c:	ldrb	r2, [r2, #1]
   12060:	cmp	r2, #63	; 0x3f
   12064:	movne	r8, #0
   12068:	movne	r5, r8
   1206c:	bne	122c4 <abort@plt+0x14dc>
   12070:	ldr	r2, [sp, #52]	; 0x34
   12074:	ldrb	r2, [r2, r3]
   12078:	sub	r1, r2, #33	; 0x21
   1207c:	cmp	r1, #29
   12080:	ldrls	pc, [pc, r1, lsl #2]
   12084:	b	12938 <abort@plt+0x1b50>
   12088:	andeq	r2, r1, r0, lsl #2
   1208c:	andeq	r2, r1, r8, lsr r9
   12090:	andeq	r2, r1, r8, lsr r9
   12094:	andeq	r2, r1, r8, lsr r9
   12098:	andeq	r2, r1, r8, lsr r9
   1209c:	andeq	r2, r1, r8, lsr r9
   120a0:	andeq	r2, r1, r0, lsl #2
   120a4:	andeq	r2, r1, r0, lsl #2
   120a8:	andeq	r2, r1, r0, lsl #2
   120ac:	andeq	r2, r1, r8, lsr r9
   120b0:	andeq	r2, r1, r8, lsr r9
   120b4:	andeq	r2, r1, r8, lsr r9
   120b8:	andeq	r2, r1, r0, lsl #2
   120bc:	andeq	r2, r1, r8, lsr r9
   120c0:	andeq	r2, r1, r0, lsl #2
   120c4:	andeq	r2, r1, r8, lsr r9
   120c8:	andeq	r2, r1, r8, lsr r9
   120cc:	andeq	r2, r1, r8, lsr r9
   120d0:	andeq	r2, r1, r8, lsr r9
   120d4:	andeq	r2, r1, r8, lsr r9
   120d8:	andeq	r2, r1, r8, lsr r9
   120dc:	andeq	r2, r1, r8, lsr r9
   120e0:	andeq	r2, r1, r8, lsr r9
   120e4:	andeq	r2, r1, r8, lsr r9
   120e8:	andeq	r2, r1, r8, lsr r9
   120ec:	andeq	r2, r1, r8, lsr r9
   120f0:	andeq	r2, r1, r8, lsr r9
   120f4:	andeq	r2, r1, r0, lsl #2
   120f8:	andeq	r2, r1, r0, lsl #2
   120fc:	andeq	r2, r1, r0, lsl #2
   12100:	ldr	r1, [sp, #32]
   12104:	cmp	r1, #0
   12108:	bne	12b48 <abort@plt+0x1d60>
   1210c:	cmp	r7, fp
   12110:	movhi	r1, #63	; 0x3f
   12114:	ldrhi	r0, [sp, #36]	; 0x24
   12118:	strbhi	r1, [r0, fp]
   1211c:	add	r1, fp, #1
   12120:	cmp	r7, r1
   12124:	ldrhi	r0, [sp, #36]	; 0x24
   12128:	movhi	ip, #34	; 0x22
   1212c:	strbhi	ip, [r0, r1]
   12130:	add	r1, fp, #2
   12134:	cmp	r7, r1
   12138:	ldrhi	r0, [sp, #36]	; 0x24
   1213c:	movhi	ip, #34	; 0x22
   12140:	strbhi	ip, [r0, r1]
   12144:	add	r1, fp, #3
   12148:	cmp	r7, r1
   1214c:	movhi	r0, #63	; 0x3f
   12150:	ldrhi	ip, [sp, #36]	; 0x24
   12154:	strbhi	r0, [ip, r1]
   12158:	add	fp, fp, #4
   1215c:	ldr	r5, [sp, #32]
   12160:	mov	r8, r5
   12164:	mov	r4, r2
   12168:	mov	r6, r3
   1216c:	b	122c4 <abort@plt+0x14dc>
   12170:	mov	r3, #102	; 0x66
   12174:	b	1222c <abort@plt+0x1444>
   12178:	mov	r3, #118	; 0x76
   1217c:	b	1222c <abort@plt+0x1444>
   12180:	cmp	sl, #2
   12184:	beq	121f0 <abort@plt+0x1408>
   12188:	ldr	r3, [sp, #48]	; 0x30
   1218c:	ldr	r2, [sp, #32]
   12190:	and	r3, r3, r2
   12194:	tst	r9, r3
   12198:	moveq	r3, r4
   1219c:	beq	1222c <abort@plt+0x1444>
   121a0:	mov	r8, #0
   121a4:	mov	r5, r8
   121a8:	eor	r5, r5, #1
   121ac:	ldr	r3, [sp, #44]	; 0x2c
   121b0:	and	r5, r5, r3
   121b4:	tst	r5, #255	; 0xff
   121b8:	beq	12398 <abort@plt+0x15b0>
   121bc:	cmp	r7, fp
   121c0:	ldrhi	r3, [sp, #36]	; 0x24
   121c4:	movhi	r2, #39	; 0x27
   121c8:	strbhi	r2, [r3, fp]
   121cc:	add	r3, fp, #1
   121d0:	cmp	r7, r3
   121d4:	ldrhi	r2, [sp, #36]	; 0x24
   121d8:	movhi	r1, #39	; 0x27
   121dc:	strbhi	r1, [r2, r3]
   121e0:	add	fp, fp, #2
   121e4:	mov	r3, #0
   121e8:	str	r3, [sp, #44]	; 0x2c
   121ec:	b	12398 <abort@plt+0x15b0>
   121f0:	ldr	r3, [sp, #32]
   121f4:	cmp	r3, #0
   121f8:	bne	12a94 <abort@plt+0x1cac>
   121fc:	mov	r8, r3
   12200:	mov	r5, r3
   12204:	b	121a8 <abort@plt+0x13c0>
   12208:	mov	r3, #110	; 0x6e
   1220c:	b	12214 <abort@plt+0x142c>
   12210:	mov	r3, #116	; 0x74
   12214:	ldr	r2, [sp, #32]
   12218:	cmp	sl, #2
   1221c:	movne	r2, #0
   12220:	andeq	r2, r2, #1
   12224:	cmp	r2, #0
   12228:	bne	1224c <abort@plt+0x1464>
   1222c:	ldr	r2, [sp, #48]	; 0x30
   12230:	cmp	r2, #0
   12234:	moveq	r8, r2
   12238:	moveq	r5, r2
   1223c:	beq	122c4 <abort@plt+0x14dc>
   12240:	mov	r4, r3
   12244:	mov	r8, #0
   12248:	b	1231c <abort@plt+0x1534>
   1224c:	mov	r8, sl
   12250:	mov	sl, r7
   12254:	b	12ac0 <abort@plt+0x1cd8>
   12258:	mov	r3, #97	; 0x61
   1225c:	b	1222c <abort@plt+0x1444>
   12260:	ldr	r3, [sp, #28]
   12264:	cmn	r3, #1
   12268:	beq	12294 <abort@plt+0x14ac>
   1226c:	ldr	r3, [sp, #28]
   12270:	subs	r3, r3, #1
   12274:	movne	r3, #1
   12278:	cmp	r3, #0
   1227c:	bne	12944 <abort@plt+0x1b5c>
   12280:	cmp	r6, #0
   12284:	beq	122ac <abort@plt+0x14c4>
   12288:	mov	r8, #0
   1228c:	mov	r5, r8
   12290:	b	122c4 <abort@plt+0x14dc>
   12294:	ldr	r3, [sp, #52]	; 0x34
   12298:	ldrb	r3, [r3, #1]
   1229c:	adds	r3, r3, #0
   122a0:	movne	r3, #1
   122a4:	b	12278 <abort@plt+0x1490>
   122a8:	mov	r8, #0
   122ac:	ldr	r5, [sp, #32]
   122b0:	cmp	sl, #2
   122b4:	movne	r5, #0
   122b8:	andeq	r5, r5, #1
   122bc:	cmp	r5, #0
   122c0:	bne	12474 <abort@plt+0x168c>
   122c4:	ldr	r3, [sp, #68]	; 0x44
   122c8:	cmp	sl, #2
   122cc:	orreq	r3, r3, #1
   122d0:	eor	r3, r3, #1
   122d4:	ldr	r2, [sp, #32]
   122d8:	orr	r3, r2, r3
   122dc:	tst	r3, #255	; 0xff
   122e0:	beq	12310 <abort@plt+0x1528>
   122e4:	ldr	r3, [sp, #160]	; 0xa0
   122e8:	cmp	r3, #0
   122ec:	beq	12310 <abort@plt+0x1528>
   122f0:	lsr	r2, r4, #5
   122f4:	uxtb	r2, r2
   122f8:	and	r3, r4, #31
   122fc:	ldr	r1, [sp, #160]	; 0xa0
   12300:	ldr	r2, [r1, r2, lsl #2]
   12304:	lsr	r3, r2, r3
   12308:	tst	r3, #1
   1230c:	bne	1231c <abort@plt+0x1534>
   12310:	ldr	r3, [sp, #56]	; 0x38
   12314:	cmp	r3, #0
   12318:	beq	121a8 <abort@plt+0x13c0>
   1231c:	ldr	r3, [sp, #32]
   12320:	cmp	r3, #0
   12324:	bne	12b30 <abort@plt+0x1d48>
   12328:	ldr	r3, [sp, #44]	; 0x2c
   1232c:	eor	r3, r3, #1
   12330:	cmp	sl, #2
   12334:	movne	r3, #0
   12338:	andeq	r3, r3, #1
   1233c:	cmp	r3, #0
   12340:	beq	12384 <abort@plt+0x159c>
   12344:	cmp	r7, fp
   12348:	ldrhi	r2, [sp, #36]	; 0x24
   1234c:	movhi	r1, #39	; 0x27
   12350:	strbhi	r1, [r2, fp]
   12354:	add	r2, fp, #1
   12358:	cmp	r7, r2
   1235c:	ldrhi	r1, [sp, #36]	; 0x24
   12360:	movhi	r0, #36	; 0x24
   12364:	strbhi	r0, [r1, r2]
   12368:	add	r2, fp, #2
   1236c:	cmp	r7, r2
   12370:	ldrhi	r1, [sp, #36]	; 0x24
   12374:	movhi	r0, #39	; 0x27
   12378:	strbhi	r0, [r1, r2]
   1237c:	add	fp, fp, #3
   12380:	str	r3, [sp, #44]	; 0x2c
   12384:	cmp	r7, fp
   12388:	ldrhi	r3, [sp, #36]	; 0x24
   1238c:	movhi	r2, #92	; 0x5c
   12390:	strbhi	r2, [r3, fp]
   12394:	add	fp, fp, #1
   12398:	cmp	fp, r7
   1239c:	ldrcc	r3, [sp, #36]	; 0x24
   123a0:	strbcc	r4, [r3, fp]
   123a4:	add	fp, fp, #1
   123a8:	ldr	r3, [sp, #40]	; 0x28
   123ac:	cmp	r8, #0
   123b0:	moveq	r3, #0
   123b4:	str	r3, [sp, #40]	; 0x28
   123b8:	add	r6, r6, #1
   123bc:	ldr	r3, [sp, #28]
   123c0:	cmn	r3, #1
   123c4:	beq	12950 <abort@plt+0x1b68>
   123c8:	ldr	r3, [sp, #28]
   123cc:	subs	r8, r3, r6
   123d0:	movne	r8, #1
   123d4:	cmp	r8, #0
   123d8:	beq	12964 <abort@plt+0x1b7c>
   123dc:	ldr	r5, [sp, #48]	; 0x30
   123e0:	cmp	sl, #2
   123e4:	moveq	r5, #0
   123e8:	andne	r5, r5, #1
   123ec:	ldr	r3, [sp, #60]	; 0x3c
   123f0:	adds	r9, r3, #0
   123f4:	movne	r9, #1
   123f8:	ands	r2, r5, r9
   123fc:	str	r2, [sp, #56]	; 0x38
   12400:	beq	11cc8 <abort@plt+0xee0>
   12404:	add	r4, r6, r3
   12408:	ldr	r2, [sp, #28]
   1240c:	cmp	r3, #1
   12410:	movls	r3, #0
   12414:	movhi	r3, #1
   12418:	cmn	r2, #1
   1241c:	movne	r3, #0
   12420:	cmp	r3, #0
   12424:	beq	12434 <abort@plt+0x164c>
   12428:	ldr	r0, [sp, #52]	; 0x34
   1242c:	bl	10d1c <strlen@plt>
   12430:	str	r0, [sp, #28]
   12434:	ldr	r3, [sp, #28]
   12438:	cmp	r3, r4
   1243c:	bcc	11cc0 <abort@plt+0xed8>
   12440:	ldr	r2, [sp, #60]	; 0x3c
   12444:	ldr	r1, [sp, #72]	; 0x48
   12448:	ldr	r3, [sp, #52]	; 0x34
   1244c:	add	r0, r3, r6
   12450:	bl	10c38 <memcmp@plt>
   12454:	cmp	r0, #0
   12458:	bne	11ee0 <abort@plt+0x10f8>
   1245c:	ldr	r3, [sp, #32]
   12460:	cmp	r3, #0
   12464:	beq	11cc8 <abort@plt+0xee0>
   12468:	mov	r8, sl
   1246c:	mov	sl, r7
   12470:	b	12ac0 <abort@plt+0x1cd8>
   12474:	mov	r8, sl
   12478:	mov	sl, r7
   1247c:	b	12ac0 <abort@plt+0x1cd8>
   12480:	cmp	sl, #2
   12484:	strne	r8, [sp, #80]	; 0x50
   12488:	movne	r5, #0
   1248c:	bne	122c4 <abort@plt+0x14dc>
   12490:	ldr	r3, [sp, #32]
   12494:	cmp	r3, #0
   12498:	bne	12aac <abort@plt+0x1cc4>
   1249c:	ldr	r2, [sp, #76]	; 0x4c
   124a0:	adds	r3, r7, #0
   124a4:	movne	r3, #1
   124a8:	cmp	r2, #0
   124ac:	movne	r3, #0
   124b0:	cmp	r3, #0
   124b4:	movne	r3, #0
   124b8:	bne	124e8 <abort@plt+0x1700>
   124bc:	cmp	r7, fp
   124c0:	ldrhi	r3, [sp, #36]	; 0x24
   124c4:	movhi	r2, #39	; 0x27
   124c8:	strbhi	r2, [r3, fp]
   124cc:	add	r3, fp, #1
   124d0:	cmp	r7, r3
   124d4:	ldrhi	r2, [sp, #36]	; 0x24
   124d8:	movhi	r1, #92	; 0x5c
   124dc:	strbhi	r1, [r2, r3]
   124e0:	mov	r3, r7
   124e4:	ldr	r7, [sp, #76]	; 0x4c
   124e8:	add	r2, fp, #2
   124ec:	cmp	r2, r3
   124f0:	ldrcc	r1, [sp, #36]	; 0x24
   124f4:	movcc	r0, #39	; 0x27
   124f8:	strbcc	r0, [r1, r2]
   124fc:	add	fp, fp, #3
   12500:	ldr	r2, [sp, #32]
   12504:	mov	r5, r2
   12508:	str	r8, [sp, #80]	; 0x50
   1250c:	str	r2, [sp, #44]	; 0x2c
   12510:	str	r7, [sp, #76]	; 0x4c
   12514:	mov	r7, r3
   12518:	b	122c4 <abort@plt+0x14dc>
   1251c:	ldr	r5, [sp, #84]	; 0x54
   12520:	cmp	r5, #1
   12524:	beq	12554 <abort@plt+0x176c>
   12528:	mov	r3, #0
   1252c:	str	r3, [sp, #104]	; 0x68
   12530:	str	r3, [sp, #108]	; 0x6c
   12534:	ldr	r3, [sp, #28]
   12538:	cmn	r3, #1
   1253c:	beq	12588 <abort@plt+0x17a0>
   12540:	mov	r3, #0
   12544:	str	r4, [sp, #88]	; 0x58
   12548:	str	fp, [sp, #92]	; 0x5c
   1254c:	mov	fp, r3
   12550:	b	126b0 <abort@plt+0x18c8>
   12554:	bl	10d04 <__ctype_b_loc@plt>
   12558:	ldr	r2, [r0]
   1255c:	lsl	r3, r4, #1
   12560:	ldrh	r8, [r2, r3]
   12564:	lsr	r8, r8, #14
   12568:	and	r8, r8, #1
   1256c:	mov	r2, r5
   12570:	eor	r5, r8, #1
   12574:	ldr	r3, [sp, #48]	; 0x30
   12578:	and	r5, r5, r3
   1257c:	ands	r5, r5, #255	; 0xff
   12580:	beq	122c4 <abort@plt+0x14dc>
   12584:	b	12748 <abort@plt+0x1960>
   12588:	ldr	r0, [sp, #52]	; 0x34
   1258c:	bl	10d1c <strlen@plt>
   12590:	str	r0, [sp, #28]
   12594:	b	12540 <abort@plt+0x1758>
   12598:	mov	r2, fp
   1259c:	mov	r1, r4
   125a0:	ldr	r4, [sp, #88]	; 0x58
   125a4:	ldr	fp, [sp, #92]	; 0x5c
   125a8:	ldr	r0, [sp, #28]
   125ac:	cmp	r0, r5
   125b0:	bls	1277c <abort@plt+0x1994>
   125b4:	ldrb	r3, [r1]
   125b8:	cmp	r3, #0
   125bc:	beq	12784 <abort@plt+0x199c>
   125c0:	mov	r3, r1
   125c4:	add	r2, r2, #1
   125c8:	add	r1, r6, r2
   125cc:	cmp	r0, r1
   125d0:	bls	1278c <abort@plt+0x19a4>
   125d4:	ldrb	r1, [r3, #1]!
   125d8:	cmp	r1, #0
   125dc:	bne	125c4 <abort@plt+0x17dc>
   125e0:	mov	r8, #0
   125e4:	b	12740 <abort@plt+0x1958>
   125e8:	cmp	r4, r5
   125ec:	beq	1268c <abort@plt+0x18a4>
   125f0:	ldrb	r3, [r4, #1]!
   125f4:	sub	r3, r3, #91	; 0x5b
   125f8:	cmp	r3, #33	; 0x21
   125fc:	ldrls	pc, [pc, r3, lsl #2]
   12600:	b	125e8 <abort@plt+0x1800>
   12604:			; <UNDEFINED> instruction: 0x00012ab8
   12608:			; <UNDEFINED> instruction: 0x00012ab8
   1260c:	andeq	r2, r1, r8, ror #11
   12610:			; <UNDEFINED> instruction: 0x00012ab8
   12614:	andeq	r2, r1, r8, ror #11
   12618:			; <UNDEFINED> instruction: 0x00012ab8
   1261c:	andeq	r2, r1, r8, ror #11
   12620:	andeq	r2, r1, r8, ror #11
   12624:	andeq	r2, r1, r8, ror #11
   12628:	andeq	r2, r1, r8, ror #11
   1262c:	andeq	r2, r1, r8, ror #11
   12630:	andeq	r2, r1, r8, ror #11
   12634:	andeq	r2, r1, r8, ror #11
   12638:	andeq	r2, r1, r8, ror #11
   1263c:	andeq	r2, r1, r8, ror #11
   12640:	andeq	r2, r1, r8, ror #11
   12644:	andeq	r2, r1, r8, ror #11
   12648:	andeq	r2, r1, r8, ror #11
   1264c:	andeq	r2, r1, r8, ror #11
   12650:	andeq	r2, r1, r8, ror #11
   12654:	andeq	r2, r1, r8, ror #11
   12658:	andeq	r2, r1, r8, ror #11
   1265c:	andeq	r2, r1, r8, ror #11
   12660:	andeq	r2, r1, r8, ror #11
   12664:	andeq	r2, r1, r8, ror #11
   12668:	andeq	r2, r1, r8, ror #11
   1266c:	andeq	r2, r1, r8, ror #11
   12670:	andeq	r2, r1, r8, ror #11
   12674:	andeq	r2, r1, r8, ror #11
   12678:	andeq	r2, r1, r8, ror #11
   1267c:	andeq	r2, r1, r8, ror #11
   12680:	andeq	r2, r1, r8, ror #11
   12684:	andeq	r2, r1, r8, ror #11
   12688:			; <UNDEFINED> instruction: 0x00012ab8
   1268c:	ldr	r0, [sp, #100]	; 0x64
   12690:	bl	10c74 <iswprint@plt>
   12694:	cmp	r0, #0
   12698:	moveq	r8, #0
   1269c:	add	fp, fp, r9
   126a0:	add	r0, sp, #104	; 0x68
   126a4:	bl	10c2c <mbsinit@plt>
   126a8:	cmp	r0, #0
   126ac:	bne	12720 <abort@plt+0x1938>
   126b0:	add	r5, r6, fp
   126b4:	ldr	r3, [sp, #52]	; 0x34
   126b8:	add	r4, r3, r5
   126bc:	add	r3, sp, #104	; 0x68
   126c0:	ldr	r2, [sp, #28]
   126c4:	sub	r2, r2, r5
   126c8:	mov	r1, r4
   126cc:	add	r0, sp, #100	; 0x64
   126d0:	bl	144e4 <abort@plt+0x36fc>
   126d4:	subs	r9, r0, #0
   126d8:	beq	12794 <abort@plt+0x19ac>
   126dc:	cmn	r9, #1
   126e0:	beq	12730 <abort@plt+0x1948>
   126e4:	cmn	r9, #2
   126e8:	beq	12598 <abort@plt+0x17b0>
   126ec:	ldr	r3, [sp, #32]
   126f0:	cmp	sl, #2
   126f4:	movne	r3, #0
   126f8:	andeq	r3, r3, #1
   126fc:	cmp	r3, #0
   12700:	beq	1268c <abort@plt+0x18a4>
   12704:	cmp	r9, #1
   12708:	bls	1268c <abort@plt+0x18a4>
   1270c:	sub	r3, r9, #1
   12710:	add	r5, r3, r5
   12714:	ldr	r3, [sp, #52]	; 0x34
   12718:	add	r5, r3, r5
   1271c:	b	125f0 <abort@plt+0x1808>
   12720:	ldr	r4, [sp, #88]	; 0x58
   12724:	mov	r2, fp
   12728:	ldr	fp, [sp, #92]	; 0x5c
   1272c:	b	12740 <abort@plt+0x1958>
   12730:	ldr	r4, [sp, #88]	; 0x58
   12734:	mov	r2, fp
   12738:	ldr	fp, [sp, #92]	; 0x5c
   1273c:	mov	r8, #0
   12740:	cmp	r2, #1
   12744:	bls	12570 <abort@plt+0x1788>
   12748:	add	r1, r6, r2
   1274c:	ldr	ip, [sp, #64]	; 0x40
   12750:	mov	r5, #0
   12754:	eor	r3, r8, #1
   12758:	ldr	r2, [sp, #48]	; 0x30
   1275c:	and	r3, r3, r2
   12760:	uxtb	r3, r3
   12764:	ldr	r9, [sp, #32]
   12768:	ldr	lr, [sp, #44]	; 0x2c
   1276c:	ldr	r2, [sp, #56]	; 0x38
   12770:	str	r8, [sp, #56]	; 0x38
   12774:	ldr	r0, [sp, #36]	; 0x24
   12778:	b	12814 <abort@plt+0x1a2c>
   1277c:	mov	r8, #0
   12780:	b	12740 <abort@plt+0x1958>
   12784:	mov	r8, #0
   12788:	b	12740 <abort@plt+0x1958>
   1278c:	mov	r8, #0
   12790:	b	12740 <abort@plt+0x1958>
   12794:	ldr	r4, [sp, #88]	; 0x58
   12798:	mov	r2, fp
   1279c:	ldr	fp, [sp, #92]	; 0x5c
   127a0:	b	12740 <abort@plt+0x1958>
   127a4:	cmp	r2, #0
   127a8:	beq	127bc <abort@plt+0x19d4>
   127ac:	cmp	r7, fp
   127b0:	movhi	r2, #92	; 0x5c
   127b4:	strbhi	r2, [r0, fp]
   127b8:	add	fp, fp, #1
   127bc:	add	r8, r6, #1
   127c0:	cmp	r1, r8
   127c4:	bls	128cc <abort@plt+0x1ae4>
   127c8:	eor	r2, r5, #1
   127cc:	and	r2, r2, lr
   127d0:	ands	r2, r2, #255	; 0xff
   127d4:	beq	128e8 <abort@plt+0x1b00>
   127d8:	cmp	r7, fp
   127dc:	movhi	r2, #39	; 0x27
   127e0:	strbhi	r2, [r0, fp]
   127e4:	add	r2, fp, #1
   127e8:	cmp	r7, r2
   127ec:	movhi	lr, #39	; 0x27
   127f0:	strbhi	lr, [r0, r2]
   127f4:	add	fp, fp, #2
   127f8:	mov	r6, r8
   127fc:	mov	r2, r3
   12800:	mov	lr, r3
   12804:	cmp	r7, fp
   12808:	strbhi	r4, [r0, fp]
   1280c:	add	fp, fp, #1
   12810:	ldrb	r4, [ip, #1]!
   12814:	cmp	r3, #0
   12818:	beq	127a4 <abort@plt+0x19bc>
   1281c:	cmp	r9, #0
   12820:	bne	12b24 <abort@plt+0x1d3c>
   12824:	eor	r5, lr, #1
   12828:	cmp	sl, #2
   1282c:	movne	r5, #0
   12830:	andeq	r5, r5, #1
   12834:	cmp	r5, #0
   12838:	beq	12870 <abort@plt+0x1a88>
   1283c:	cmp	r7, fp
   12840:	movhi	lr, #39	; 0x27
   12844:	strbhi	lr, [r0, fp]
   12848:	add	lr, fp, #1
   1284c:	cmp	r7, lr
   12850:	movhi	r8, #36	; 0x24
   12854:	strbhi	r8, [r0, lr]
   12858:	add	lr, fp, #2
   1285c:	cmp	r7, lr
   12860:	movhi	r8, #39	; 0x27
   12864:	strbhi	r8, [r0, lr]
   12868:	add	fp, fp, #3
   1286c:	mov	lr, r5
   12870:	cmp	r7, fp
   12874:	movhi	r5, #92	; 0x5c
   12878:	strbhi	r5, [r0, fp]
   1287c:	add	r5, fp, #1
   12880:	cmp	r7, r5
   12884:	lsrhi	r8, r4, #6
   12888:	addhi	r8, r8, #48	; 0x30
   1288c:	strbhi	r8, [r0, r5]
   12890:	add	r8, fp, #2
   12894:	cmp	r7, r8
   12898:	lsrhi	r5, r4, #3
   1289c:	andhi	r5, r5, #7
   128a0:	addhi	r5, r5, #48	; 0x30
   128a4:	strbhi	r5, [r0, r8]
   128a8:	add	fp, fp, #3
   128ac:	and	r4, r4, #7
   128b0:	add	r4, r4, #48	; 0x30
   128b4:	add	r5, r6, #1
   128b8:	cmp	r1, r5
   128bc:	bls	128d8 <abort@plt+0x1af0>
   128c0:	mov	r6, r5
   128c4:	mov	r5, r3
   128c8:	b	12804 <abort@plt+0x1a1c>
   128cc:	str	lr, [sp, #44]	; 0x2c
   128d0:	ldr	r8, [sp, #56]	; 0x38
   128d4:	b	121a8 <abort@plt+0x13c0>
   128d8:	str	lr, [sp, #44]	; 0x2c
   128dc:	ldr	r8, [sp, #56]	; 0x38
   128e0:	mov	r5, r3
   128e4:	b	121a8 <abort@plt+0x13c0>
   128e8:	mov	r6, r8
   128ec:	b	12804 <abort@plt+0x1a1c>
   128f0:	mov	r5, #0
   128f4:	b	122c4 <abort@plt+0x14dc>
   128f8:	mov	r8, r5
   128fc:	ldr	r5, [sp, #48]	; 0x30
   12900:	mov	r4, #48	; 0x30
   12904:	b	122c4 <abort@plt+0x14dc>
   12908:	ldr	r8, [sp, #32]
   1290c:	mov	r4, #48	; 0x30
   12910:	b	122c4 <abort@plt+0x14dc>
   12914:	ldr	r8, [sp, #32]
   12918:	mov	r4, #48	; 0x30
   1291c:	b	122c4 <abort@plt+0x14dc>
   12920:	mov	r8, #0
   12924:	mov	r5, r8
   12928:	b	122c4 <abort@plt+0x14dc>
   1292c:	mov	r8, #0
   12930:	mov	r5, r8
   12934:	b	122c4 <abort@plt+0x14dc>
   12938:	mov	r8, #0
   1293c:	mov	r5, r8
   12940:	b	122c4 <abort@plt+0x14dc>
   12944:	mov	r8, #0
   12948:	mov	r5, r8
   1294c:	b	122c4 <abort@plt+0x14dc>
   12950:	ldr	r3, [sp, #52]	; 0x34
   12954:	ldrb	r8, [r3, r6]
   12958:	adds	r8, r8, #0
   1295c:	movne	r8, #1
   12960:	b	123d4 <abort@plt+0x15ec>
   12964:	cmp	sl, #2
   12968:	movne	r3, #0
   1296c:	moveq	r3, #1
   12970:	ldr	r1, [sp, #32]
   12974:	mov	r2, r1
   12978:	and	r2, r2, r3
   1297c:	cmp	fp, #0
   12980:	movne	r2, #0
   12984:	andeq	r2, r2, #1
   12988:	cmp	r2, #0
   1298c:	bne	12b3c <abort@plt+0x1d54>
   12990:	eor	r2, r1, #1
   12994:	and	r3, r3, r2
   12998:	ldr	r1, [sp, #80]	; 0x50
   1299c:	tst	r1, r3
   129a0:	beq	12a18 <abort@plt+0x1c30>
   129a4:	ldr	r3, [sp, #40]	; 0x28
   129a8:	cmp	r3, #0
   129ac:	bne	129d4 <abort@plt+0x1bec>
   129b0:	ldr	r1, [sp, #76]	; 0x4c
   129b4:	clz	r3, r7
   129b8:	lsr	r3, r3, #5
   129bc:	cmp	r1, #0
   129c0:	moveq	r3, #0
   129c4:	cmp	r3, #0
   129c8:	beq	12a18 <abort@plt+0x1c30>
   129cc:	ldr	r7, [sp, #76]	; 0x4c
   129d0:	b	11a68 <abort@plt+0xc80>
   129d4:	ldr	r3, [sp, #168]	; 0xa8
   129d8:	str	r3, [sp, #16]
   129dc:	ldr	r3, [sp, #164]	; 0xa4
   129e0:	str	r3, [sp, #12]
   129e4:	ldr	r3, [sp, #160]	; 0xa0
   129e8:	str	r3, [sp, #8]
   129ec:	ldr	r3, [sp, #156]	; 0x9c
   129f0:	str	r3, [sp, #4]
   129f4:	mov	r3, #5
   129f8:	str	r3, [sp]
   129fc:	ldr	r3, [sp, #28]
   12a00:	ldr	r2, [sp, #52]	; 0x34
   12a04:	ldr	r1, [sp, #76]	; 0x4c
   12a08:	ldr	r0, [sp, #36]	; 0x24
   12a0c:	bl	11a08 <abort@plt+0xc20>
   12a10:	mov	fp, r0
   12a14:	b	12b18 <abort@plt+0x1d30>
   12a18:	mov	sl, r7
   12a1c:	ldr	r3, [sp, #72]	; 0x48
   12a20:	cmp	r3, #0
   12a24:	moveq	r2, #0
   12a28:	andne	r2, r2, #1
   12a2c:	cmp	r2, #0
   12a30:	beq	12a60 <abort@plt+0x1c78>
   12a34:	mov	r2, r3
   12a38:	ldrb	r3, [r3]
   12a3c:	cmp	r3, #0
   12a40:	beq	12a60 <abort@plt+0x1c78>
   12a44:	ldr	r1, [sp, #36]	; 0x24
   12a48:	cmp	sl, fp
   12a4c:	strbhi	r3, [r1, fp]
   12a50:	add	fp, fp, #1
   12a54:	ldrb	r3, [r2, #1]!
   12a58:	cmp	r3, #0
   12a5c:	bne	12a48 <abort@plt+0x1c60>
   12a60:	cmp	sl, fp
   12a64:	movhi	r3, #0
   12a68:	ldrhi	r2, [sp, #36]	; 0x24
   12a6c:	strbhi	r3, [r2, fp]
   12a70:	b	12b18 <abort@plt+0x1d30>
   12a74:	mov	r8, sl
   12a78:	mov	sl, r7
   12a7c:	ldr	r3, [sp, #32]
   12a80:	str	r3, [sp, #48]	; 0x30
   12a84:	b	12ac0 <abort@plt+0x1cd8>
   12a88:	mov	r8, sl
   12a8c:	mov	sl, r7
   12a90:	b	12ac0 <abort@plt+0x1cd8>
   12a94:	mov	r8, sl
   12a98:	mov	sl, r7
   12a9c:	b	12ac0 <abort@plt+0x1cd8>
   12aa0:	andeq	r5, r1, r8, asr #32
   12aa4:	andeq	r5, r1, r8, asr r0
   12aa8:	andeq	r5, r1, ip, asr #32
   12aac:	mov	r8, sl
   12ab0:	mov	sl, r7
   12ab4:	b	12ac0 <abort@plt+0x1cd8>
   12ab8:	mov	r8, sl
   12abc:	mov	sl, r7
   12ac0:	ldr	r3, [sp, #48]	; 0x30
   12ac4:	cmp	r8, #2
   12ac8:	movne	r3, #0
   12acc:	andeq	r3, r3, #1
   12ad0:	cmp	r3, #0
   12ad4:	movne	r8, #4
   12ad8:	ldr	r3, [sp, #168]	; 0xa8
   12adc:	str	r3, [sp, #16]
   12ae0:	ldr	r3, [sp, #164]	; 0xa4
   12ae4:	str	r3, [sp, #12]
   12ae8:	mov	r3, #0
   12aec:	str	r3, [sp, #8]
   12af0:	ldr	r3, [sp, #156]	; 0x9c
   12af4:	bic	r3, r3, #2
   12af8:	str	r3, [sp, #4]
   12afc:	str	r8, [sp]
   12b00:	ldr	r3, [sp, #28]
   12b04:	ldr	r2, [sp, #52]	; 0x34
   12b08:	mov	r1, sl
   12b0c:	ldr	r0, [sp, #36]	; 0x24
   12b10:	bl	11a08 <abort@plt+0xc20>
   12b14:	mov	fp, r0
   12b18:	mov	r0, fp
   12b1c:	add	sp, sp, #116	; 0x74
   12b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b24:	mov	r8, sl
   12b28:	mov	sl, r7
   12b2c:	b	12ac0 <abort@plt+0x1cd8>
   12b30:	mov	r8, sl
   12b34:	mov	sl, r7
   12b38:	b	12ac0 <abort@plt+0x1cd8>
   12b3c:	mov	r8, sl
   12b40:	mov	sl, r7
   12b44:	b	12ac0 <abort@plt+0x1cd8>
   12b48:	mov	r8, sl
   12b4c:	mov	sl, r7
   12b50:	b	12ad8 <abort@plt+0x1cf0>
   12b54:	mov	r3, #1
   12b58:	str	r3, [sp, #32]
   12b5c:	str	r3, [sp, #48]	; 0x30
   12b60:	str	r3, [sp, #60]	; 0x3c
   12b64:	ldr	r3, [pc, #-196]	; 12aa8 <abort@plt+0x1cc0>
   12b68:	str	r3, [sp, #72]	; 0x48
   12b6c:	mov	fp, #0
   12b70:	mov	sl, #5
   12b74:	b	11ac4 <abort@plt+0xcdc>
   12b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b7c:	sub	sp, sp, #52	; 0x34
   12b80:	mov	r5, r0
   12b84:	str	r1, [sp, #24]
   12b88:	str	r2, [sp, #28]
   12b8c:	mov	r4, r3
   12b90:	bl	10d28 <__errno_location@plt>
   12b94:	str	r0, [sp, #32]
   12b98:	ldr	r3, [r0]
   12b9c:	str	r3, [sp, #36]	; 0x24
   12ba0:	ldr	r3, [pc, #396]	; 12d34 <abort@plt+0x1f4c>
   12ba4:	ldr	r6, [r3]
   12ba8:	cmn	r5, #-2147483647	; 0x80000001
   12bac:	movne	r3, #0
   12bb0:	moveq	r3, #1
   12bb4:	orrs	r3, r3, r5, lsr #31
   12bb8:	bne	12cf8 <abort@plt+0x1f10>
   12bbc:	ldr	r3, [pc, #368]	; 12d34 <abort@plt+0x1f4c>
   12bc0:	ldr	r2, [r3, #4]
   12bc4:	cmp	r5, r2
   12bc8:	blt	12c30 <abort@plt+0x1e48>
   12bcc:	str	r2, [sp, #44]	; 0x2c
   12bd0:	add	r3, r3, #8
   12bd4:	cmp	r6, r3
   12bd8:	beq	12cfc <abort@plt+0x1f14>
   12bdc:	sub	r2, r5, r2
   12be0:	mov	r3, #8
   12be4:	str	r3, [sp]
   12be8:	mvn	r3, #-2147483648	; 0x80000000
   12bec:	add	r2, r2, #1
   12bf0:	add	r1, sp, #44	; 0x2c
   12bf4:	mov	r0, r6
   12bf8:	bl	13a7c <abort@plt+0x2c94>
   12bfc:	mov	r6, r0
   12c00:	ldr	r3, [pc, #300]	; 12d34 <abort@plt+0x1f4c>
   12c04:	str	r0, [r3]
   12c08:	ldr	r7, [pc, #292]	; 12d34 <abort@plt+0x1f4c>
   12c0c:	ldr	r0, [r7, #4]
   12c10:	ldr	r2, [sp, #44]	; 0x2c
   12c14:	sub	r2, r2, r0
   12c18:	lsl	r2, r2, #3
   12c1c:	mov	r1, #0
   12c20:	add	r0, r6, r0, lsl #3
   12c24:	bl	10d40 <memset@plt>
   12c28:	ldr	r3, [sp, #44]	; 0x2c
   12c2c:	str	r3, [r7, #4]
   12c30:	add	fp, r6, r5, lsl #3
   12c34:	ldr	r8, [r6, r5, lsl #3]
   12c38:	ldr	r7, [fp, #4]
   12c3c:	ldr	r9, [r4, #4]
   12c40:	orr	r9, r9, #1
   12c44:	add	sl, r4, #8
   12c48:	ldr	r3, [r4, #44]	; 0x2c
   12c4c:	str	r3, [sp, #16]
   12c50:	ldr	r3, [r4, #40]	; 0x28
   12c54:	str	r3, [sp, #12]
   12c58:	str	sl, [sp, #8]
   12c5c:	str	r9, [sp, #4]
   12c60:	ldr	r3, [r4]
   12c64:	str	r3, [sp]
   12c68:	ldr	r3, [sp, #28]
   12c6c:	ldr	r2, [sp, #24]
   12c70:	mov	r1, r8
   12c74:	mov	r0, r7
   12c78:	bl	11a08 <abort@plt+0xc20>
   12c7c:	cmp	r8, r0
   12c80:	bhi	12ce0 <abort@plt+0x1ef8>
   12c84:	add	r8, r0, #1
   12c88:	str	r8, [r6, r5, lsl #3]
   12c8c:	ldr	r3, [pc, #164]	; 12d38 <abort@plt+0x1f50>
   12c90:	cmp	r7, r3
   12c94:	beq	12ca0 <abort@plt+0x1eb8>
   12c98:	mov	r0, r7
   12c9c:	bl	143b0 <abort@plt+0x35c8>
   12ca0:	mov	r0, r8
   12ca4:	bl	138f8 <abort@plt+0x2b10>
   12ca8:	mov	r7, r0
   12cac:	str	r0, [fp, #4]
   12cb0:	ldr	r3, [r4, #44]	; 0x2c
   12cb4:	str	r3, [sp, #16]
   12cb8:	ldr	r3, [r4, #40]	; 0x28
   12cbc:	str	r3, [sp, #12]
   12cc0:	str	sl, [sp, #8]
   12cc4:	str	r9, [sp, #4]
   12cc8:	ldr	r3, [r4]
   12ccc:	str	r3, [sp]
   12cd0:	ldr	r3, [sp, #28]
   12cd4:	ldr	r2, [sp, #24]
   12cd8:	mov	r1, r8
   12cdc:	bl	11a08 <abort@plt+0xc20>
   12ce0:	ldr	r3, [sp, #32]
   12ce4:	ldr	r2, [sp, #36]	; 0x24
   12ce8:	str	r2, [r3]
   12cec:	mov	r0, r7
   12cf0:	add	sp, sp, #52	; 0x34
   12cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cf8:	bl	10de8 <abort@plt>
   12cfc:	sub	r2, r5, r2
   12d00:	mov	r3, #8
   12d04:	str	r3, [sp]
   12d08:	mvn	r3, #-2147483648	; 0x80000000
   12d0c:	add	r2, r2, #1
   12d10:	add	r1, sp, #44	; 0x2c
   12d14:	mov	r0, #0
   12d18:	bl	13a7c <abort@plt+0x2c94>
   12d1c:	mov	r6, r0
   12d20:	ldr	r3, [pc, #12]	; 12d34 <abort@plt+0x1f4c>
   12d24:	str	r0, [r3], #8
   12d28:	ldm	r3, {r0, r1}
   12d2c:	stm	r6, {r0, r1}
   12d30:	b	12c08 <abort@plt+0x1e20>
   12d34:	andeq	r6, r2, r0, ror #1
   12d38:	andeq	r6, r2, ip, asr #2
   12d3c:	push	{r4, r5, r6, lr}
   12d40:	mov	r4, r0
   12d44:	bl	10d28 <__errno_location@plt>
   12d48:	mov	r5, r0
   12d4c:	ldr	r6, [r0]
   12d50:	cmp	r4, #0
   12d54:	ldr	r3, [pc, #20]	; 12d70 <abort@plt+0x1f88>
   12d58:	moveq	r4, r3
   12d5c:	mov	r1, #48	; 0x30
   12d60:	mov	r0, r4
   12d64:	bl	13de4 <abort@plt+0x2ffc>
   12d68:	str	r6, [r5]
   12d6c:	pop	{r4, r5, r6, pc}
   12d70:	andeq	r6, r2, ip, asr #4
   12d74:	subs	r3, r0, #0
   12d78:	ldr	r2, [pc, #8]	; 12d88 <abort@plt+0x1fa0>
   12d7c:	moveq	r3, r2
   12d80:	ldr	r0, [r3]
   12d84:	bx	lr
   12d88:	andeq	r6, r2, ip, asr #4
   12d8c:	subs	r3, r0, #0
   12d90:	ldr	r2, [pc, #8]	; 12da0 <abort@plt+0x1fb8>
   12d94:	moveq	r3, r2
   12d98:	str	r1, [r3]
   12d9c:	bx	lr
   12da0:	andeq	r6, r2, ip, asr #4
   12da4:	push	{lr}		; (str lr, [sp, #-4]!)
   12da8:	subs	r3, r0, #0
   12dac:	ldr	r0, [pc, #44]	; 12de0 <abort@plt+0x1ff8>
   12db0:	moveq	r3, r0
   12db4:	add	r3, r3, #8
   12db8:	lsr	lr, r1, #5
   12dbc:	and	r1, r1, #31
   12dc0:	ldr	ip, [r3, lr, lsl #2]
   12dc4:	lsr	r0, ip, r1
   12dc8:	eor	r2, r2, r0
   12dcc:	and	r2, r2, #1
   12dd0:	eor	r1, ip, r2, lsl r1
   12dd4:	str	r1, [r3, lr, lsl #2]
   12dd8:	and	r0, r0, #1
   12ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   12de0:	andeq	r6, r2, ip, asr #4
   12de4:	subs	r3, r0, #0
   12de8:	ldr	r2, [pc, #12]	; 12dfc <abort@plt+0x2014>
   12dec:	moveq	r3, r2
   12df0:	ldr	r0, [r3, #4]
   12df4:	str	r1, [r3, #4]
   12df8:	bx	lr
   12dfc:	andeq	r6, r2, ip, asr #4
   12e00:	subs	r3, r0, #0
   12e04:	ldr	r0, [pc, #40]	; 12e34 <abort@plt+0x204c>
   12e08:	moveq	r3, r0
   12e0c:	mov	r0, #10
   12e10:	str	r0, [r3]
   12e14:	cmp	r2, #0
   12e18:	cmpne	r1, #0
   12e1c:	beq	12e2c <abort@plt+0x2044>
   12e20:	str	r1, [r3, #40]	; 0x28
   12e24:	str	r2, [r3, #44]	; 0x2c
   12e28:	bx	lr
   12e2c:	push	{r4, lr}
   12e30:	bl	10de8 <abort@plt>
   12e34:	andeq	r6, r2, ip, asr #4
   12e38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e3c:	sub	sp, sp, #24
   12e40:	mov	r7, r0
   12e44:	mov	r8, r1
   12e48:	mov	r9, r2
   12e4c:	mov	sl, r3
   12e50:	ldr	r4, [sp, #56]	; 0x38
   12e54:	cmp	r4, #0
   12e58:	ldr	r3, [pc, #84]	; 12eb4 <abort@plt+0x20cc>
   12e5c:	moveq	r4, r3
   12e60:	bl	10d28 <__errno_location@plt>
   12e64:	mov	r5, r0
   12e68:	ldr	r6, [r0]
   12e6c:	ldr	r3, [r4, #44]	; 0x2c
   12e70:	str	r3, [sp, #16]
   12e74:	ldr	r3, [r4, #40]	; 0x28
   12e78:	str	r3, [sp, #12]
   12e7c:	add	r3, r4, #8
   12e80:	str	r3, [sp, #8]
   12e84:	ldr	r3, [r4, #4]
   12e88:	str	r3, [sp, #4]
   12e8c:	ldr	r3, [r4]
   12e90:	str	r3, [sp]
   12e94:	mov	r3, sl
   12e98:	mov	r2, r9
   12e9c:	mov	r1, r8
   12ea0:	mov	r0, r7
   12ea4:	bl	11a08 <abort@plt+0xc20>
   12ea8:	str	r6, [r5]
   12eac:	add	sp, sp, #24
   12eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12eb4:	andeq	r6, r2, ip, asr #4
   12eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ebc:	sub	sp, sp, #44	; 0x2c
   12ec0:	str	r0, [sp, #28]
   12ec4:	str	r1, [sp, #32]
   12ec8:	mov	r6, r2
   12ecc:	subs	r4, r3, #0
   12ed0:	ldr	r3, [pc, #172]	; 12f84 <abort@plt+0x219c>
   12ed4:	moveq	r4, r3
   12ed8:	bl	10d28 <__errno_location@plt>
   12edc:	mov	r7, r0
   12ee0:	ldr	fp, [r0]
   12ee4:	ldr	r5, [r4, #4]
   12ee8:	cmp	r6, #0
   12eec:	orreq	r5, r5, #1
   12ef0:	add	r9, r4, #8
   12ef4:	ldr	r3, [r4, #44]	; 0x2c
   12ef8:	str	r3, [sp, #16]
   12efc:	ldr	r3, [r4, #40]	; 0x28
   12f00:	str	r3, [sp, #12]
   12f04:	str	r9, [sp, #8]
   12f08:	str	r5, [sp, #4]
   12f0c:	ldr	r3, [r4]
   12f10:	str	r3, [sp]
   12f14:	ldr	r3, [sp, #32]
   12f18:	ldr	r2, [sp, #28]
   12f1c:	mov	r1, #0
   12f20:	mov	r0, r1
   12f24:	bl	11a08 <abort@plt+0xc20>
   12f28:	mov	sl, r0
   12f2c:	add	r8, r0, #1
   12f30:	mov	r0, r8
   12f34:	bl	138f8 <abort@plt+0x2b10>
   12f38:	str	r0, [sp, #36]	; 0x24
   12f3c:	ldr	r3, [r4, #44]	; 0x2c
   12f40:	str	r3, [sp, #16]
   12f44:	ldr	r3, [r4, #40]	; 0x28
   12f48:	str	r3, [sp, #12]
   12f4c:	str	r9, [sp, #8]
   12f50:	str	r5, [sp, #4]
   12f54:	ldr	r3, [r4]
   12f58:	str	r3, [sp]
   12f5c:	ldr	r3, [sp, #32]
   12f60:	ldr	r2, [sp, #28]
   12f64:	mov	r1, r8
   12f68:	bl	11a08 <abort@plt+0xc20>
   12f6c:	str	fp, [r7]
   12f70:	cmp	r6, #0
   12f74:	strne	sl, [r6]
   12f78:	ldr	r0, [sp, #36]	; 0x24
   12f7c:	add	sp, sp, #44	; 0x2c
   12f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f84:	andeq	r6, r2, ip, asr #4
   12f88:	push	{r4, lr}
   12f8c:	mov	r3, r2
   12f90:	mov	r2, #0
   12f94:	bl	12eb8 <abort@plt+0x20d0>
   12f98:	pop	{r4, pc}
   12f9c:	push	{r4, r5, r6, r7, r8, lr}
   12fa0:	ldr	r3, [pc, #140]	; 13034 <abort@plt+0x224c>
   12fa4:	ldr	r7, [r3]
   12fa8:	ldr	r3, [r3, #4]
   12fac:	cmp	r3, #1
   12fb0:	ble	12fdc <abort@plt+0x21f4>
   12fb4:	mov	r5, r7
   12fb8:	mov	r4, #1
   12fbc:	ldr	r6, [pc, #112]	; 13034 <abort@plt+0x224c>
   12fc0:	ldr	r0, [r5, #12]
   12fc4:	bl	143b0 <abort@plt+0x35c8>
   12fc8:	add	r4, r4, #1
   12fcc:	add	r5, r5, #8
   12fd0:	ldr	r3, [r6, #4]
   12fd4:	cmp	r3, r4
   12fd8:	bgt	12fc0 <abort@plt+0x21d8>
   12fdc:	ldr	r0, [r7, #4]
   12fe0:	ldr	r3, [pc, #80]	; 13038 <abort@plt+0x2250>
   12fe4:	cmp	r0, r3
   12fe8:	beq	13004 <abort@plt+0x221c>
   12fec:	bl	143b0 <abort@plt+0x35c8>
   12ff0:	ldr	r3, [pc, #60]	; 13034 <abort@plt+0x224c>
   12ff4:	mov	r2, #256	; 0x100
   12ff8:	str	r2, [r3, #8]
   12ffc:	ldr	r2, [pc, #52]	; 13038 <abort@plt+0x2250>
   13000:	str	r2, [r3, #12]
   13004:	ldr	r3, [pc, #48]	; 1303c <abort@plt+0x2254>
   13008:	cmp	r7, r3
   1300c:	beq	13024 <abort@plt+0x223c>
   13010:	mov	r0, r7
   13014:	bl	143b0 <abort@plt+0x35c8>
   13018:	ldr	r3, [pc, #20]	; 13034 <abort@plt+0x224c>
   1301c:	add	r2, r3, #8
   13020:	str	r2, [r3]
   13024:	mov	r2, #1
   13028:	ldr	r3, [pc, #4]	; 13034 <abort@plt+0x224c>
   1302c:	str	r2, [r3, #4]
   13030:	pop	{r4, r5, r6, r7, r8, pc}
   13034:	andeq	r6, r2, r0, ror #1
   13038:	andeq	r6, r2, ip, asr #2
   1303c:	andeq	r6, r2, r8, ror #1
   13040:	push	{r4, lr}
   13044:	ldr	r3, [pc, #8]	; 13054 <abort@plt+0x226c>
   13048:	mvn	r2, #0
   1304c:	bl	12b78 <abort@plt+0x1d90>
   13050:	pop	{r4, pc}
   13054:	andeq	r6, r2, ip, asr #4
   13058:	push	{r4, lr}
   1305c:	ldr	r3, [pc, #4]	; 13068 <abort@plt+0x2280>
   13060:	bl	12b78 <abort@plt+0x1d90>
   13064:	pop	{r4, pc}
   13068:	andeq	r6, r2, ip, asr #4
   1306c:	push	{r4, lr}
   13070:	mov	r1, r0
   13074:	mov	r0, #0
   13078:	bl	13040 <abort@plt+0x2258>
   1307c:	pop	{r4, pc}
   13080:	push	{r4, lr}
   13084:	mov	r2, r1
   13088:	mov	r1, r0
   1308c:	mov	r0, #0
   13090:	bl	13058 <abort@plt+0x2270>
   13094:	pop	{r4, pc}
   13098:	push	{r4, r5, lr}
   1309c:	sub	sp, sp, #52	; 0x34
   130a0:	mov	r4, r0
   130a4:	mov	r5, r2
   130a8:	mov	r0, sp
   130ac:	bl	118a0 <abort@plt+0xab8>
   130b0:	mov	r3, sp
   130b4:	mvn	r2, #0
   130b8:	mov	r1, r5
   130bc:	mov	r0, r4
   130c0:	bl	12b78 <abort@plt+0x1d90>
   130c4:	add	sp, sp, #52	; 0x34
   130c8:	pop	{r4, r5, pc}
   130cc:	push	{r4, r5, r6, lr}
   130d0:	sub	sp, sp, #48	; 0x30
   130d4:	mov	r4, r0
   130d8:	mov	r5, r2
   130dc:	mov	r6, r3
   130e0:	mov	r0, sp
   130e4:	bl	118a0 <abort@plt+0xab8>
   130e8:	mov	r3, sp
   130ec:	mov	r2, r6
   130f0:	mov	r1, r5
   130f4:	mov	r0, r4
   130f8:	bl	12b78 <abort@plt+0x1d90>
   130fc:	add	sp, sp, #48	; 0x30
   13100:	pop	{r4, r5, r6, pc}
   13104:	push	{r4, lr}
   13108:	mov	r2, r1
   1310c:	mov	r1, r0
   13110:	mov	r0, #0
   13114:	bl	13098 <abort@plt+0x22b0>
   13118:	pop	{r4, pc}
   1311c:	push	{r4, lr}
   13120:	mov	r3, r2
   13124:	mov	r2, r1
   13128:	mov	r1, r0
   1312c:	mov	r0, #0
   13130:	bl	130cc <abort@plt+0x22e4>
   13134:	pop	{r4, pc}
   13138:	push	{r4, r5, r6, lr}
   1313c:	sub	sp, sp, #48	; 0x30
   13140:	mov	r4, r0
   13144:	mov	r5, r1
   13148:	mov	r6, r2
   1314c:	mov	ip, sp
   13150:	ldr	lr, [pc, #64]	; 13198 <abort@plt+0x23b0>
   13154:	ldm	lr!, {r0, r1, r2, r3}
   13158:	stmia	ip!, {r0, r1, r2, r3}
   1315c:	ldm	lr!, {r0, r1, r2, r3}
   13160:	stmia	ip!, {r0, r1, r2, r3}
   13164:	ldm	lr, {r0, r1, r2, r3}
   13168:	stm	ip, {r0, r1, r2, r3}
   1316c:	mov	r2, #1
   13170:	mov	r1, r6
   13174:	mov	r0, sp
   13178:	bl	12da4 <abort@plt+0x1fbc>
   1317c:	mov	r3, sp
   13180:	mov	r2, r5
   13184:	mov	r1, r4
   13188:	mov	r0, #0
   1318c:	bl	12b78 <abort@plt+0x1d90>
   13190:	add	sp, sp, #48	; 0x30
   13194:	pop	{r4, r5, r6, pc}
   13198:	andeq	r6, r2, ip, asr #4
   1319c:	push	{r4, lr}
   131a0:	mov	r2, r1
   131a4:	mvn	r1, #0
   131a8:	bl	13138 <abort@plt+0x2350>
   131ac:	pop	{r4, pc}
   131b0:	push	{r4, lr}
   131b4:	mov	r1, #58	; 0x3a
   131b8:	bl	1319c <abort@plt+0x23b4>
   131bc:	pop	{r4, pc}
   131c0:	push	{r4, lr}
   131c4:	mov	r2, #58	; 0x3a
   131c8:	bl	13138 <abort@plt+0x2350>
   131cc:	pop	{r4, pc}
   131d0:	push	{r4, r5, lr}
   131d4:	sub	sp, sp, #100	; 0x64
   131d8:	mov	r4, r0
   131dc:	mov	r5, r2
   131e0:	mov	r0, sp
   131e4:	bl	118a0 <abort@plt+0xab8>
   131e8:	add	lr, sp, #48	; 0x30
   131ec:	mov	ip, sp
   131f0:	ldm	ip!, {r0, r1, r2, r3}
   131f4:	stmia	lr!, {r0, r1, r2, r3}
   131f8:	ldm	ip!, {r0, r1, r2, r3}
   131fc:	stmia	lr!, {r0, r1, r2, r3}
   13200:	ldm	ip, {r0, r1, r2, r3}
   13204:	stm	lr, {r0, r1, r2, r3}
   13208:	mov	r2, #1
   1320c:	mov	r1, #58	; 0x3a
   13210:	add	r0, sp, #48	; 0x30
   13214:	bl	12da4 <abort@plt+0x1fbc>
   13218:	add	r3, sp, #48	; 0x30
   1321c:	mvn	r2, #0
   13220:	mov	r1, r5
   13224:	mov	r0, r4
   13228:	bl	12b78 <abort@plt+0x1d90>
   1322c:	add	sp, sp, #100	; 0x64
   13230:	pop	{r4, r5, pc}
   13234:	push	{r4, r5, r6, r7, lr}
   13238:	sub	sp, sp, #52	; 0x34
   1323c:	mov	r4, r0
   13240:	mov	r6, r1
   13244:	mov	r7, r2
   13248:	mov	r5, r3
   1324c:	mov	ip, sp
   13250:	ldr	lr, [pc, #64]	; 13298 <abort@plt+0x24b0>
   13254:	ldm	lr!, {r0, r1, r2, r3}
   13258:	stmia	ip!, {r0, r1, r2, r3}
   1325c:	ldm	lr!, {r0, r1, r2, r3}
   13260:	stmia	ip!, {r0, r1, r2, r3}
   13264:	ldm	lr, {r0, r1, r2, r3}
   13268:	stm	ip, {r0, r1, r2, r3}
   1326c:	mov	r2, r7
   13270:	mov	r1, r6
   13274:	mov	r0, sp
   13278:	bl	12e00 <abort@plt+0x2018>
   1327c:	mov	r3, sp
   13280:	ldr	r2, [sp, #72]	; 0x48
   13284:	mov	r1, r5
   13288:	mov	r0, r4
   1328c:	bl	12b78 <abort@plt+0x1d90>
   13290:	add	sp, sp, #52	; 0x34
   13294:	pop	{r4, r5, r6, r7, pc}
   13298:	andeq	r6, r2, ip, asr #4
   1329c:	push	{lr}		; (str lr, [sp, #-4]!)
   132a0:	sub	sp, sp, #12
   132a4:	mvn	ip, #0
   132a8:	str	ip, [sp]
   132ac:	bl	13234 <abort@plt+0x244c>
   132b0:	add	sp, sp, #12
   132b4:	pop	{pc}		; (ldr pc, [sp], #4)
   132b8:	push	{r4, lr}
   132bc:	mov	r3, r2
   132c0:	mov	r2, r1
   132c4:	mov	r1, r0
   132c8:	mov	r0, #0
   132cc:	bl	1329c <abort@plt+0x24b4>
   132d0:	pop	{r4, pc}
   132d4:	push	{lr}		; (str lr, [sp, #-4]!)
   132d8:	sub	sp, sp, #12
   132dc:	str	r3, [sp]
   132e0:	mov	r3, r2
   132e4:	mov	r2, r1
   132e8:	mov	r1, r0
   132ec:	mov	r0, #0
   132f0:	bl	13234 <abort@plt+0x244c>
   132f4:	add	sp, sp, #12
   132f8:	pop	{pc}		; (ldr pc, [sp], #4)
   132fc:	push	{r4, lr}
   13300:	ldr	r3, [pc, #4]	; 1330c <abort@plt+0x2524>
   13304:	bl	12b78 <abort@plt+0x1d90>
   13308:	pop	{r4, pc}
   1330c:	strdeq	r6, [r2], -r0
   13310:	push	{r4, lr}
   13314:	mov	r2, r1
   13318:	mov	r1, r0
   1331c:	mov	r0, #0
   13320:	bl	132fc <abort@plt+0x2514>
   13324:	pop	{r4, pc}
   13328:	push	{r4, lr}
   1332c:	mvn	r2, #0
   13330:	bl	132fc <abort@plt+0x2514>
   13334:	pop	{r4, pc}
   13338:	push	{r4, lr}
   1333c:	mov	r1, r0
   13340:	mov	r0, #0
   13344:	bl	13328 <abort@plt+0x2540>
   13348:	pop	{r4, pc}
   1334c:	push	{r4, r5, r6, lr}
   13350:	sub	sp, sp, #32
   13354:	mov	r4, r0
   13358:	ldr	r5, [sp, #48]	; 0x30
   1335c:	ldr	r6, [sp, #52]	; 0x34
   13360:	cmp	r1, #0
   13364:	beq	1341c <abort@plt+0x2634>
   13368:	str	r3, [sp, #4]
   1336c:	str	r2, [sp]
   13370:	mov	r3, r1
   13374:	ldr	r2, [pc, #940]	; 13728 <abort@plt+0x2940>
   13378:	mov	r1, #1
   1337c:	bl	10d70 <__fprintf_chk@plt>
   13380:	mov	r2, #5
   13384:	ldr	r1, [pc, #928]	; 1372c <abort@plt+0x2944>
   13388:	mov	r0, #0
   1338c:	bl	10c50 <dcgettext@plt>
   13390:	ldr	r3, [pc, #920]	; 13730 <abort@plt+0x2948>
   13394:	str	r3, [sp]
   13398:	mov	r3, r0
   1339c:	ldr	r2, [pc, #912]	; 13734 <abort@plt+0x294c>
   133a0:	mov	r1, #1
   133a4:	mov	r0, r4
   133a8:	bl	10d70 <__fprintf_chk@plt>
   133ac:	mov	r1, r4
   133b0:	mov	r0, #10
   133b4:	bl	10c44 <fputc_unlocked@plt>
   133b8:	mov	r2, #5
   133bc:	ldr	r1, [pc, #884]	; 13738 <abort@plt+0x2950>
   133c0:	mov	r0, #0
   133c4:	bl	10c50 <dcgettext@plt>
   133c8:	ldr	r3, [pc, #876]	; 1373c <abort@plt+0x2954>
   133cc:	mov	r2, r0
   133d0:	mov	r1, #1
   133d4:	mov	r0, r4
   133d8:	bl	10d70 <__fprintf_chk@plt>
   133dc:	mov	r1, r4
   133e0:	mov	r0, #10
   133e4:	bl	10c44 <fputc_unlocked@plt>
   133e8:	cmp	r6, #9
   133ec:	ldrls	pc, [pc, r6, lsl #2]
   133f0:	b	136c0 <abort@plt+0x28d8>
   133f4:	andeq	r3, r1, r8, asr r4
   133f8:	andeq	r3, r1, r4, lsr r4
   133fc:	andeq	r3, r1, r0, ror #8
   13400:	muleq	r1, r0, r4
   13404:	andeq	r3, r1, r8, asr #9
   13408:	andeq	r3, r1, r8, lsl #10
   1340c:	andeq	r3, r1, r0, asr r5
   13410:	andeq	r3, r1, r0, lsr #11
   13414:	strdeq	r3, [r1], -r8
   13418:	andeq	r3, r1, r8, asr r6
   1341c:	str	r3, [sp]
   13420:	mov	r3, r2
   13424:	ldr	r2, [pc, #788]	; 13740 <abort@plt+0x2958>
   13428:	mov	r1, #1
   1342c:	bl	10d70 <__fprintf_chk@plt>
   13430:	b	13380 <abort@plt+0x2598>
   13434:	mov	r2, #5
   13438:	ldr	r1, [pc, #772]	; 13744 <abort@plt+0x295c>
   1343c:	mov	r0, #0
   13440:	bl	10c50 <dcgettext@plt>
   13444:	ldr	r3, [r5]
   13448:	mov	r2, r0
   1344c:	mov	r1, #1
   13450:	mov	r0, r4
   13454:	bl	10d70 <__fprintf_chk@plt>
   13458:	add	sp, sp, #32
   1345c:	pop	{r4, r5, r6, pc}
   13460:	mov	r2, #5
   13464:	ldr	r1, [pc, #732]	; 13748 <abort@plt+0x2960>
   13468:	mov	r0, #0
   1346c:	bl	10c50 <dcgettext@plt>
   13470:	ldr	r3, [r5]
   13474:	ldr	r2, [r5, #4]
   13478:	str	r2, [sp]
   1347c:	mov	r2, r0
   13480:	mov	r1, #1
   13484:	mov	r0, r4
   13488:	bl	10d70 <__fprintf_chk@plt>
   1348c:	b	13458 <abort@plt+0x2670>
   13490:	mov	r2, #5
   13494:	ldr	r1, [pc, #688]	; 1374c <abort@plt+0x2964>
   13498:	mov	r0, #0
   1349c:	bl	10c50 <dcgettext@plt>
   134a0:	ldr	r3, [r5]
   134a4:	ldr	r2, [r5, #8]
   134a8:	str	r2, [sp, #4]
   134ac:	ldr	r2, [r5, #4]
   134b0:	str	r2, [sp]
   134b4:	mov	r2, r0
   134b8:	mov	r1, #1
   134bc:	mov	r0, r4
   134c0:	bl	10d70 <__fprintf_chk@plt>
   134c4:	b	13458 <abort@plt+0x2670>
   134c8:	mov	r2, #5
   134cc:	ldr	r1, [pc, #636]	; 13750 <abort@plt+0x2968>
   134d0:	mov	r0, #0
   134d4:	bl	10c50 <dcgettext@plt>
   134d8:	ldr	r3, [r5]
   134dc:	ldr	r2, [r5, #12]
   134e0:	str	r2, [sp, #8]
   134e4:	ldr	r2, [r5, #8]
   134e8:	str	r2, [sp, #4]
   134ec:	ldr	r2, [r5, #4]
   134f0:	str	r2, [sp]
   134f4:	mov	r2, r0
   134f8:	mov	r1, #1
   134fc:	mov	r0, r4
   13500:	bl	10d70 <__fprintf_chk@plt>
   13504:	b	13458 <abort@plt+0x2670>
   13508:	mov	r2, #5
   1350c:	ldr	r1, [pc, #576]	; 13754 <abort@plt+0x296c>
   13510:	mov	r0, #0
   13514:	bl	10c50 <dcgettext@plt>
   13518:	ldr	r3, [r5]
   1351c:	ldr	r2, [r5, #16]
   13520:	str	r2, [sp, #12]
   13524:	ldr	r2, [r5, #12]
   13528:	str	r2, [sp, #8]
   1352c:	ldr	r2, [r5, #8]
   13530:	str	r2, [sp, #4]
   13534:	ldr	r2, [r5, #4]
   13538:	str	r2, [sp]
   1353c:	mov	r2, r0
   13540:	mov	r1, #1
   13544:	mov	r0, r4
   13548:	bl	10d70 <__fprintf_chk@plt>
   1354c:	b	13458 <abort@plt+0x2670>
   13550:	mov	r2, #5
   13554:	ldr	r1, [pc, #508]	; 13758 <abort@plt+0x2970>
   13558:	mov	r0, #0
   1355c:	bl	10c50 <dcgettext@plt>
   13560:	ldr	r3, [r5]
   13564:	ldr	r2, [r5, #20]
   13568:	str	r2, [sp, #16]
   1356c:	ldr	r2, [r5, #16]
   13570:	str	r2, [sp, #12]
   13574:	ldr	r2, [r5, #12]
   13578:	str	r2, [sp, #8]
   1357c:	ldr	r2, [r5, #8]
   13580:	str	r2, [sp, #4]
   13584:	ldr	r2, [r5, #4]
   13588:	str	r2, [sp]
   1358c:	mov	r2, r0
   13590:	mov	r1, #1
   13594:	mov	r0, r4
   13598:	bl	10d70 <__fprintf_chk@plt>
   1359c:	b	13458 <abort@plt+0x2670>
   135a0:	mov	r2, #5
   135a4:	ldr	r1, [pc, #432]	; 1375c <abort@plt+0x2974>
   135a8:	mov	r0, #0
   135ac:	bl	10c50 <dcgettext@plt>
   135b0:	ldr	r3, [r5]
   135b4:	ldr	r2, [r5, #24]
   135b8:	str	r2, [sp, #20]
   135bc:	ldr	r2, [r5, #20]
   135c0:	str	r2, [sp, #16]
   135c4:	ldr	r2, [r5, #16]
   135c8:	str	r2, [sp, #12]
   135cc:	ldr	r2, [r5, #12]
   135d0:	str	r2, [sp, #8]
   135d4:	ldr	r2, [r5, #8]
   135d8:	str	r2, [sp, #4]
   135dc:	ldr	r2, [r5, #4]
   135e0:	str	r2, [sp]
   135e4:	mov	r2, r0
   135e8:	mov	r1, #1
   135ec:	mov	r0, r4
   135f0:	bl	10d70 <__fprintf_chk@plt>
   135f4:	b	13458 <abort@plt+0x2670>
   135f8:	mov	r2, #5
   135fc:	ldr	r1, [pc, #348]	; 13760 <abort@plt+0x2978>
   13600:	mov	r0, #0
   13604:	bl	10c50 <dcgettext@plt>
   13608:	ldr	r3, [r5]
   1360c:	ldr	r2, [r5, #28]
   13610:	str	r2, [sp, #24]
   13614:	ldr	r2, [r5, #24]
   13618:	str	r2, [sp, #20]
   1361c:	ldr	r2, [r5, #20]
   13620:	str	r2, [sp, #16]
   13624:	ldr	r2, [r5, #16]
   13628:	str	r2, [sp, #12]
   1362c:	ldr	r2, [r5, #12]
   13630:	str	r2, [sp, #8]
   13634:	ldr	r2, [r5, #8]
   13638:	str	r2, [sp, #4]
   1363c:	ldr	r2, [r5, #4]
   13640:	str	r2, [sp]
   13644:	mov	r2, r0
   13648:	mov	r1, #1
   1364c:	mov	r0, r4
   13650:	bl	10d70 <__fprintf_chk@plt>
   13654:	b	13458 <abort@plt+0x2670>
   13658:	mov	r2, #5
   1365c:	ldr	r1, [pc, #256]	; 13764 <abort@plt+0x297c>
   13660:	mov	r0, #0
   13664:	bl	10c50 <dcgettext@plt>
   13668:	ldr	r3, [r5]
   1366c:	ldr	r2, [r5, #32]
   13670:	str	r2, [sp, #28]
   13674:	ldr	r2, [r5, #28]
   13678:	str	r2, [sp, #24]
   1367c:	ldr	r2, [r5, #24]
   13680:	str	r2, [sp, #20]
   13684:	ldr	r2, [r5, #20]
   13688:	str	r2, [sp, #16]
   1368c:	ldr	r2, [r5, #16]
   13690:	str	r2, [sp, #12]
   13694:	ldr	r2, [r5, #12]
   13698:	str	r2, [sp, #8]
   1369c:	ldr	r2, [r5, #8]
   136a0:	str	r2, [sp, #4]
   136a4:	ldr	r2, [r5, #4]
   136a8:	str	r2, [sp]
   136ac:	mov	r2, r0
   136b0:	mov	r1, #1
   136b4:	mov	r0, r4
   136b8:	bl	10d70 <__fprintf_chk@plt>
   136bc:	b	13458 <abort@plt+0x2670>
   136c0:	mov	r2, #5
   136c4:	ldr	r1, [pc, #156]	; 13768 <abort@plt+0x2980>
   136c8:	mov	r0, #0
   136cc:	bl	10c50 <dcgettext@plt>
   136d0:	ldr	r3, [r5]
   136d4:	ldr	r2, [r5, #32]
   136d8:	str	r2, [sp, #28]
   136dc:	ldr	r2, [r5, #28]
   136e0:	str	r2, [sp, #24]
   136e4:	ldr	r2, [r5, #24]
   136e8:	str	r2, [sp, #20]
   136ec:	ldr	r2, [r5, #20]
   136f0:	str	r2, [sp, #16]
   136f4:	ldr	r2, [r5, #16]
   136f8:	str	r2, [sp, #12]
   136fc:	ldr	r2, [r5, #12]
   13700:	str	r2, [sp, #8]
   13704:	ldr	r2, [r5, #8]
   13708:	str	r2, [sp, #4]
   1370c:	ldr	r2, [r5, #4]
   13710:	str	r2, [sp]
   13714:	mov	r2, r0
   13718:	mov	r1, #1
   1371c:	mov	r0, r4
   13720:	bl	10d70 <__fprintf_chk@plt>
   13724:	b	13458 <abort@plt+0x2670>
   13728:	andeq	r5, r1, r4, asr #1
   1372c:	ldrdeq	r5, [r1], -r8
   13730:	andeq	r0, r0, r6, ror #15
   13734:			; <UNDEFINED> instruction: 0x000153b0
   13738:	ldrdeq	r5, [r1], -ip
   1373c:	andeq	r5, r1, r8, lsl #3
   13740:	ldrdeq	r5, [r1], -r0
   13744:	andeq	r5, r1, ip, lsr #3
   13748:			; <UNDEFINED> instruction: 0x000151bc
   1374c:	ldrdeq	r5, [r1], -r4
   13750:	strdeq	r5, [r1], -r0
   13754:	andeq	r5, r1, r0, lsl r2
   13758:	andeq	r5, r1, r4, lsr r2
   1375c:	andeq	r5, r1, ip, asr r2
   13760:	andeq	r5, r1, r8, lsl #5
   13764:			; <UNDEFINED> instruction: 0x000152b8
   13768:	andeq	r5, r1, ip, ror #5
   1376c:	push	{r4, r5, lr}
   13770:	sub	sp, sp, #12
   13774:	ldr	r5, [sp, #24]
   13778:	ldr	ip, [r5]
   1377c:	cmp	ip, #0
   13780:	beq	137b0 <abort@plt+0x29c8>
   13784:	mov	lr, r5
   13788:	mov	ip, #0
   1378c:	add	ip, ip, #1
   13790:	ldr	r4, [lr, #4]!
   13794:	cmp	r4, #0
   13798:	bne	1378c <abort@plt+0x29a4>
   1379c:	str	ip, [sp, #4]
   137a0:	str	r5, [sp]
   137a4:	bl	1334c <abort@plt+0x2564>
   137a8:	add	sp, sp, #12
   137ac:	pop	{r4, r5, pc}
   137b0:	mov	ip, #0
   137b4:	b	1379c <abort@plt+0x29b4>
   137b8:	push	{r4, r5, lr}
   137bc:	sub	sp, sp, #52	; 0x34
   137c0:	ldr	r4, [sp, #64]	; 0x40
   137c4:	sub	r4, r4, #4
   137c8:	add	r5, sp, #4
   137cc:	mov	ip, #0
   137d0:	ldr	lr, [r4, #4]!
   137d4:	str	lr, [r5, #4]!
   137d8:	cmp	lr, #0
   137dc:	beq	137ec <abort@plt+0x2a04>
   137e0:	add	ip, ip, #1
   137e4:	cmp	ip, #10
   137e8:	bne	137d0 <abort@plt+0x29e8>
   137ec:	str	ip, [sp, #4]
   137f0:	add	ip, sp, #8
   137f4:	str	ip, [sp]
   137f8:	bl	1334c <abort@plt+0x2564>
   137fc:	add	sp, sp, #52	; 0x34
   13800:	pop	{r4, r5, pc}
   13804:	push	{r3}		; (str r3, [sp, #-4]!)
   13808:	push	{lr}		; (str lr, [sp, #-4]!)
   1380c:	sub	sp, sp, #16
   13810:	add	r3, sp, #24
   13814:	str	r3, [sp, #12]
   13818:	str	r3, [sp]
   1381c:	ldr	r3, [sp, #20]
   13820:	bl	137b8 <abort@plt+0x29d0>
   13824:	add	sp, sp, #16
   13828:	pop	{lr}		; (ldr lr, [sp], #4)
   1382c:	add	sp, sp, #4
   13830:	bx	lr
   13834:	push	{r4, lr}
   13838:	ldr	r3, [pc, #112]	; 138b0 <abort@plt+0x2ac8>
   1383c:	ldr	r1, [r3]
   13840:	mov	r0, #10
   13844:	bl	10c44 <fputc_unlocked@plt>
   13848:	mov	r2, #5
   1384c:	ldr	r1, [pc, #96]	; 138b4 <abort@plt+0x2acc>
   13850:	mov	r0, #0
   13854:	bl	10c50 <dcgettext@plt>
   13858:	ldr	r2, [pc, #88]	; 138b8 <abort@plt+0x2ad0>
   1385c:	mov	r1, r0
   13860:	mov	r0, #1
   13864:	bl	10d4c <__printf_chk@plt>
   13868:	mov	r2, #5
   1386c:	ldr	r1, [pc, #72]	; 138bc <abort@plt+0x2ad4>
   13870:	mov	r0, #0
   13874:	bl	10c50 <dcgettext@plt>
   13878:	ldr	r3, [pc, #64]	; 138c0 <abort@plt+0x2ad8>
   1387c:	ldr	r2, [pc, #64]	; 138c4 <abort@plt+0x2adc>
   13880:	mov	r1, r0
   13884:	mov	r0, #1
   13888:	bl	10d4c <__printf_chk@plt>
   1388c:	mov	r2, #5
   13890:	ldr	r1, [pc, #48]	; 138c8 <abort@plt+0x2ae0>
   13894:	mov	r0, #0
   13898:	bl	10c50 <dcgettext@plt>
   1389c:	ldr	r2, [pc, #40]	; 138cc <abort@plt+0x2ae4>
   138a0:	mov	r1, r0
   138a4:	mov	r0, #1
   138a8:	bl	10d4c <__printf_chk@plt>
   138ac:	pop	{r4, pc}
   138b0:	andeq	r6, r2, r4, lsr r1
   138b4:	andeq	r5, r1, r8, lsr #6
   138b8:	andeq	r5, r1, ip, lsr r3
   138bc:	andeq	r5, r1, r4, asr r3
   138c0:	andeq	r4, r1, r4, lsl #27
   138c4:	andeq	r4, r1, ip, lsr #27
   138c8:	andeq	r5, r1, r8, ror #6
   138cc:	muleq	r1, r0, r3
   138d0:	push	{r4, lr}
   138d4:	bl	14038 <abort@plt+0x3250>
   138d8:	cmp	r0, #0
   138dc:	popne	{r4, pc}
   138e0:	bl	13e74 <abort@plt+0x308c>
   138e4:	push	{r4, lr}
   138e8:	bl	14038 <abort@plt+0x3250>
   138ec:	cmp	r0, #0
   138f0:	popne	{r4, pc}
   138f4:	bl	13e74 <abort@plt+0x308c>
   138f8:	push	{r4, lr}
   138fc:	bl	138d0 <abort@plt+0x2ae8>
   13900:	pop	{r4, pc}
   13904:	push	{r4, r5, r6, lr}
   13908:	mov	r5, r0
   1390c:	mov	r4, r1
   13910:	bl	14068 <abort@plt+0x3280>
   13914:	cmp	r0, #0
   13918:	popne	{r4, r5, r6, pc}
   1391c:	adds	r4, r4, #0
   13920:	movne	r4, #1
   13924:	cmp	r5, #0
   13928:	orreq	r4, r4, #1
   1392c:	cmp	r4, #0
   13930:	popeq	{r4, r5, r6, pc}
   13934:	bl	13e74 <abort@plt+0x308c>
   13938:	push	{r4, lr}
   1393c:	cmp	r1, #0
   13940:	orreq	r1, r1, #1
   13944:	bl	14068 <abort@plt+0x3280>
   13948:	cmp	r0, #0
   1394c:	popne	{r4, pc}
   13950:	bl	13e74 <abort@plt+0x308c>
   13954:	push	{r4, r5, r6, lr}
   13958:	mov	r6, r0
   1395c:	mov	r5, r1
   13960:	mov	r4, r2
   13964:	bl	1453c <abort@plt+0x3754>
   13968:	cmp	r0, #0
   1396c:	popne	{r4, r5, r6, pc}
   13970:	cmp	r6, #0
   13974:	beq	13984 <abort@plt+0x2b9c>
   13978:	cmp	r5, #0
   1397c:	cmpne	r4, #0
   13980:	popeq	{r4, r5, r6, pc}
   13984:	bl	13e74 <abort@plt+0x308c>
   13988:	push	{r4, lr}
   1398c:	bl	13954 <abort@plt+0x2b6c>
   13990:	pop	{r4, pc}
   13994:	push	{r4, lr}
   13998:	mov	ip, r1
   1399c:	mov	r3, r2
   139a0:	cmp	r2, #0
   139a4:	cmpne	r1, #0
   139a8:	moveq	r3, #1
   139ac:	moveq	ip, r3
   139b0:	mov	r2, r3
   139b4:	mov	r1, ip
   139b8:	bl	1453c <abort@plt+0x3754>
   139bc:	cmp	r0, #0
   139c0:	popne	{r4, pc}
   139c4:	bl	13e74 <abort@plt+0x308c>
   139c8:	push	{r4, lr}
   139cc:	mov	r2, r1
   139d0:	mov	r1, r0
   139d4:	mov	r0, #0
   139d8:	bl	13954 <abort@plt+0x2b6c>
   139dc:	pop	{r4, pc}
   139e0:	push	{r4, lr}
   139e4:	mov	r2, r1
   139e8:	mov	r1, r0
   139ec:	mov	r0, #0
   139f0:	bl	13994 <abort@plt+0x2bac>
   139f4:	pop	{r4, pc}
   139f8:	push	{r4, r5, r6, r7, r8, lr}
   139fc:	mov	r5, r1
   13a00:	mov	r6, r2
   13a04:	ldr	r4, [r1]
   13a08:	subs	r7, r0, #0
   13a0c:	beq	13a28 <abort@plt+0x2c40>
   13a10:	lsr	r2, r4, #1
   13a14:	add	r3, r2, #1
   13a18:	mvn	r3, r3
   13a1c:	cmp	r4, r3
   13a20:	bls	13a4c <abort@plt+0x2c64>
   13a24:	bl	13e74 <abort@plt+0x308c>
   13a28:	cmp	r4, #0
   13a2c:	bne	13a54 <abort@plt+0x2c6c>
   13a30:	mov	r1, r2
   13a34:	mov	r0, #64	; 0x40
   13a38:	bl	14690 <abort@plt+0x38a8>
   13a3c:	cmp	r0, #0
   13a40:	movne	r4, r0
   13a44:	addeq	r4, r0, #1
   13a48:	b	13a54 <abort@plt+0x2c6c>
   13a4c:	add	r4, r4, #1
   13a50:	add	r4, r4, r2
   13a54:	mov	r2, r6
   13a58:	mov	r1, r4
   13a5c:	mov	r0, r7
   13a60:	bl	13954 <abort@plt+0x2b6c>
   13a64:	str	r4, [r5]
   13a68:	pop	{r4, r5, r6, r7, r8, pc}
   13a6c:	push	{r4, lr}
   13a70:	mov	r2, #1
   13a74:	bl	139f8 <abort@plt+0x2c10>
   13a78:	pop	{r4, pc}
   13a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a80:	sub	sp, sp, #12
   13a84:	mov	fp, r0
   13a88:	mov	sl, r1
   13a8c:	mov	r9, r2
   13a90:	mov	r7, r3
   13a94:	ldr	r6, [sp, #48]	; 0x30
   13a98:	ldr	r5, [r1]
   13a9c:	asrs	r4, r5, #1
   13aa0:	bmi	13bfc <abort@plt+0x2e14>
   13aa4:	cmp	r5, #0
   13aa8:	blt	13c10 <abort@plt+0x2e28>
   13aac:	mvn	r3, #-2147483648	; 0x80000000
   13ab0:	sub	r3, r3, r4
   13ab4:	cmp	r5, r3
   13ab8:	movle	r3, #0
   13abc:	movgt	r3, #1
   13ac0:	cmp	r3, #0
   13ac4:	addeq	r4, r4, r5
   13ac8:	mvnne	r4, #-2147483648	; 0x80000000
   13acc:	mvn	r8, r7
   13ad0:	lsr	r8, r8, #31
   13ad4:	cmp	r7, r4
   13ad8:	movge	r3, #0
   13adc:	andlt	r3, r8, #1
   13ae0:	cmp	r3, #0
   13ae4:	movne	r4, r7
   13ae8:	cmp	r6, #0
   13aec:	blt	13c24 <abort@plt+0x2e3c>
   13af0:	cmp	r6, #0
   13af4:	beq	13cd0 <abort@plt+0x2ee8>
   13af8:	cmp	r4, #0
   13afc:	blt	13c80 <abort@plt+0x2e98>
   13b00:	mov	r1, r6
   13b04:	mvn	r0, #-2147483648	; 0x80000000
   13b08:	bl	1489c <abort@plt+0x3ab4>
   13b0c:	cmp	r0, r4
   13b10:	movge	r0, #0
   13b14:	movlt	r0, #1
   13b18:	cmp	r0, #0
   13b1c:	mvnne	r3, #-2147483648	; 0x80000000
   13b20:	strne	r3, [sp, #4]
   13b24:	beq	13cb8 <abort@plt+0x2ed0>
   13b28:	mov	r1, r6
   13b2c:	ldr	r0, [sp, #4]
   13b30:	bl	1489c <abort@plt+0x3ab4>
   13b34:	mov	r4, r0
   13b38:	mov	r1, r6
   13b3c:	ldr	r0, [sp, #4]
   13b40:	bl	14abc <abort@plt+0x3cd4>
   13b44:	ldr	r3, [sp, #4]
   13b48:	sub	r1, r3, r1
   13b4c:	cmp	fp, #0
   13b50:	moveq	r3, #0
   13b54:	streq	r3, [sl]
   13b58:	sub	r3, r4, r5
   13b5c:	cmp	r3, r9
   13b60:	bge	13be8 <abort@plt+0x2e00>
   13b64:	cmp	r9, #0
   13b68:	blt	13cdc <abort@plt+0x2ef4>
   13b6c:	cmp	r5, #0
   13b70:	blt	13cf0 <abort@plt+0x2f08>
   13b74:	mvn	r3, #-2147483648	; 0x80000000
   13b78:	sub	r3, r3, r9
   13b7c:	cmp	r5, r3
   13b80:	movle	r3, #0
   13b84:	movgt	r3, #1
   13b88:	cmp	r3, #0
   13b8c:	bne	13d98 <abort@plt+0x2fb0>
   13b90:	add	r5, r5, r9
   13b94:	mov	r4, r5
   13b98:	cmp	r7, r5
   13b9c:	movge	r7, #0
   13ba0:	andlt	r7, r8, #1
   13ba4:	cmp	r7, #0
   13ba8:	bne	13d98 <abort@plt+0x2fb0>
   13bac:	cmp	r6, #0
   13bb0:	blt	13d04 <abort@plt+0x2f1c>
   13bb4:	cmp	r6, #0
   13bb8:	beq	13be4 <abort@plt+0x2dfc>
   13bbc:	cmp	r5, #0
   13bc0:	blt	13d60 <abort@plt+0x2f78>
   13bc4:	mov	r1, r6
   13bc8:	mvn	r0, #-2147483648	; 0x80000000
   13bcc:	bl	1489c <abort@plt+0x3ab4>
   13bd0:	cmp	r5, r0
   13bd4:	movle	r0, #0
   13bd8:	movgt	r0, #1
   13bdc:	cmp	r0, #0
   13be0:	bne	13d98 <abort@plt+0x2fb0>
   13be4:	mul	r1, r5, r6
   13be8:	mov	r0, fp
   13bec:	bl	13904 <abort@plt+0x2b1c>
   13bf0:	str	r4, [sl]
   13bf4:	add	sp, sp, #12
   13bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bfc:	rsb	r3, r4, #-2147483648	; 0x80000000
   13c00:	cmp	r5, r3
   13c04:	movge	r3, #0
   13c08:	movlt	r3, #1
   13c0c:	b	13ac0 <abort@plt+0x2cd8>
   13c10:	rsb	r3, r5, #-2147483648	; 0x80000000
   13c14:	cmp	r4, r3
   13c18:	movge	r3, #0
   13c1c:	movlt	r3, #1
   13c20:	b	13ac0 <abort@plt+0x2cd8>
   13c24:	cmp	r4, #0
   13c28:	blt	13c50 <abort@plt+0x2e68>
   13c2c:	cmn	r6, #1
   13c30:	beq	13c6c <abort@plt+0x2e84>
   13c34:	mov	r1, r6
   13c38:	mov	r0, #-2147483648	; 0x80000000
   13c3c:	bl	1489c <abort@plt+0x3ab4>
   13c40:	cmp	r0, r4
   13c44:	movge	r0, #0
   13c48:	movlt	r0, #1
   13c4c:	b	13b18 <abort@plt+0x2d30>
   13c50:	mov	r1, r6
   13c54:	mvn	r0, #-2147483648	; 0x80000000
   13c58:	bl	1489c <abort@plt+0x3ab4>
   13c5c:	cmp	r0, r4
   13c60:	movle	r0, #0
   13c64:	movgt	r0, #1
   13c68:	b	13b18 <abort@plt+0x2d30>
   13c6c:	add	r0, r4, #-2147483648	; 0x80000000
   13c70:	cmp	r0, #0
   13c74:	movle	r0, #0
   13c78:	movgt	r0, #1
   13c7c:	b	13b18 <abort@plt+0x2d30>
   13c80:	cmn	r4, #1
   13c84:	beq	13ca4 <abort@plt+0x2ebc>
   13c88:	mov	r1, r4
   13c8c:	mov	r0, #-2147483648	; 0x80000000
   13c90:	bl	1489c <abort@plt+0x3ab4>
   13c94:	cmp	r6, r0
   13c98:	movle	r0, #0
   13c9c:	movgt	r0, #1
   13ca0:	b	13b18 <abort@plt+0x2d30>
   13ca4:	add	r0, r6, #-2147483648	; 0x80000000
   13ca8:	cmp	r0, #0
   13cac:	movle	r0, #0
   13cb0:	movgt	r0, #1
   13cb4:	b	13b18 <abort@plt+0x2d30>
   13cb8:	mul	r1, r6, r4
   13cbc:	cmp	r1, #63	; 0x3f
   13cc0:	movle	r3, #64	; 0x40
   13cc4:	strle	r3, [sp, #4]
   13cc8:	bgt	13b4c <abort@plt+0x2d64>
   13ccc:	b	13b28 <abort@plt+0x2d40>
   13cd0:	mov	r3, #64	; 0x40
   13cd4:	str	r3, [sp, #4]
   13cd8:	b	13b28 <abort@plt+0x2d40>
   13cdc:	rsb	r3, r9, #-2147483648	; 0x80000000
   13ce0:	cmp	r5, r3
   13ce4:	movge	r3, #0
   13ce8:	movlt	r3, #1
   13cec:	b	13b88 <abort@plt+0x2da0>
   13cf0:	rsb	r3, r5, #-2147483648	; 0x80000000
   13cf4:	cmp	r9, r3
   13cf8:	movge	r3, #0
   13cfc:	movlt	r3, #1
   13d00:	b	13b88 <abort@plt+0x2da0>
   13d04:	cmp	r5, #0
   13d08:	blt	13d30 <abort@plt+0x2f48>
   13d0c:	cmn	r6, #1
   13d10:	beq	13d4c <abort@plt+0x2f64>
   13d14:	mov	r1, r6
   13d18:	mov	r0, #-2147483648	; 0x80000000
   13d1c:	bl	1489c <abort@plt+0x3ab4>
   13d20:	cmp	r5, r0
   13d24:	movle	r0, #0
   13d28:	movgt	r0, #1
   13d2c:	b	13bdc <abort@plt+0x2df4>
   13d30:	mov	r1, r6
   13d34:	mvn	r0, #-2147483648	; 0x80000000
   13d38:	bl	1489c <abort@plt+0x3ab4>
   13d3c:	cmp	r5, r0
   13d40:	movge	r0, #0
   13d44:	movlt	r0, #1
   13d48:	b	13bdc <abort@plt+0x2df4>
   13d4c:	add	r0, r5, #-2147483648	; 0x80000000
   13d50:	cmp	r0, #0
   13d54:	movle	r0, #0
   13d58:	movgt	r0, #1
   13d5c:	b	13bdc <abort@plt+0x2df4>
   13d60:	cmn	r5, #1
   13d64:	beq	13d84 <abort@plt+0x2f9c>
   13d68:	mov	r1, r5
   13d6c:	mov	r0, #-2147483648	; 0x80000000
   13d70:	bl	1489c <abort@plt+0x3ab4>
   13d74:	cmp	r6, r0
   13d78:	movle	r0, #0
   13d7c:	movgt	r0, #1
   13d80:	b	13bdc <abort@plt+0x2df4>
   13d84:	add	r0, r6, #-2147483648	; 0x80000000
   13d88:	cmp	r0, #0
   13d8c:	movle	r0, #0
   13d90:	movgt	r0, #1
   13d94:	b	13bdc <abort@plt+0x2df4>
   13d98:	bl	13e74 <abort@plt+0x308c>
   13d9c:	push	{r4, lr}
   13da0:	bl	13fe8 <abort@plt+0x3200>
   13da4:	cmp	r0, #0
   13da8:	popne	{r4, pc}
   13dac:	bl	13e74 <abort@plt+0x308c>
   13db0:	push	{r4, lr}
   13db4:	mov	r1, #1
   13db8:	bl	13d9c <abort@plt+0x2fb4>
   13dbc:	pop	{r4, pc}
   13dc0:	push	{r4, lr}
   13dc4:	bl	13fe8 <abort@plt+0x3200>
   13dc8:	cmp	r0, #0
   13dcc:	popne	{r4, pc}
   13dd0:	bl	13e74 <abort@plt+0x308c>
   13dd4:	push	{r4, lr}
   13dd8:	mov	r1, #1
   13ddc:	bl	13dc0 <abort@plt+0x2fd8>
   13de0:	pop	{r4, pc}
   13de4:	push	{r4, r5, r6, lr}
   13de8:	mov	r5, r0
   13dec:	mov	r4, r1
   13df0:	mov	r0, r1
   13df4:	bl	138d0 <abort@plt+0x2ae8>
   13df8:	mov	r2, r4
   13dfc:	mov	r1, r5
   13e00:	bl	10c20 <memcpy@plt>
   13e04:	pop	{r4, r5, r6, pc}
   13e08:	push	{r4, r5, r6, lr}
   13e0c:	mov	r5, r0
   13e10:	mov	r4, r1
   13e14:	mov	r0, r1
   13e18:	bl	138e4 <abort@plt+0x2afc>
   13e1c:	mov	r2, r4
   13e20:	mov	r1, r5
   13e24:	bl	10c20 <memcpy@plt>
   13e28:	pop	{r4, r5, r6, pc}
   13e2c:	push	{r4, r5, r6, lr}
   13e30:	mov	r5, r0
   13e34:	mov	r4, r1
   13e38:	add	r0, r1, #1
   13e3c:	bl	138e4 <abort@plt+0x2afc>
   13e40:	mov	r2, #0
   13e44:	strb	r2, [r0, r4]
   13e48:	mov	r2, r4
   13e4c:	mov	r1, r5
   13e50:	bl	10c20 <memcpy@plt>
   13e54:	pop	{r4, r5, r6, pc}
   13e58:	push	{r4, lr}
   13e5c:	mov	r4, r0
   13e60:	bl	10d1c <strlen@plt>
   13e64:	add	r1, r0, #1
   13e68:	mov	r0, r4
   13e6c:	bl	13de4 <abort@plt+0x2ffc>
   13e70:	pop	{r4, pc}
   13e74:	push	{r4, lr}
   13e78:	ldr	r3, [pc, #40]	; 13ea8 <abort@plt+0x30c0>
   13e7c:	ldr	r4, [r3]
   13e80:	mov	r2, #5
   13e84:	ldr	r1, [pc, #32]	; 13eac <abort@plt+0x30c4>
   13e88:	mov	r0, #0
   13e8c:	bl	10c50 <dcgettext@plt>
   13e90:	mov	r3, r0
   13e94:	ldr	r2, [pc, #20]	; 13eb0 <abort@plt+0x30c8>
   13e98:	mov	r1, #0
   13e9c:	mov	r0, r4
   13ea0:	bl	10cbc <error@plt>
   13ea4:	bl	10de8 <abort@plt>
   13ea8:	ldrdeq	r6, [r2], -ip
   13eac:	andeq	r5, r1, r0, ror #7
   13eb0:	andeq	r4, r1, r0, ror #30
   13eb4:	andeq	r0, r0, r0
   13eb8:	push	{r4, r5, lr}
   13ebc:	vpush	{d8}
   13ec0:	sub	sp, sp, #12
   13ec4:	vmov.f64	d8, d0
   13ec8:	vldr	d7, [pc, #104]	; 13f38 <abort@plt+0x3150>
   13ecc:	vcmpe.f64	d0, d7
   13ed0:	vmrs	APSR_nzcv, fpscr
   13ed4:	blt	13eec <abort@plt+0x3104>
   13ed8:	bl	10be4 <pause@plt>
   13edc:	bl	10d28 <__errno_location@plt>
   13ee0:	ldr	r3, [r0]
   13ee4:	cmp	r3, #4
   13ee8:	beq	13ed8 <abort@plt+0x30f0>
   13eec:	vmov.f64	d0, d8
   13ef0:	mov	r0, sp
   13ef4:	bl	141c0 <abort@plt+0x33d8>
   13ef8:	bl	10d28 <__errno_location@plt>
   13efc:	mov	r4, r0
   13f00:	mov	r5, #0
   13f04:	str	r5, [r4]
   13f08:	mov	r1, sp
   13f0c:	mov	r0, sp
   13f10:	bl	10c08 <nanosleep@plt>
   13f14:	cmp	r0, #0
   13f18:	beq	13f2c <abort@plt+0x3144>
   13f1c:	ldr	r3, [r4]
   13f20:	bics	r3, r3, #4
   13f24:	beq	13f04 <abort@plt+0x311c>
   13f28:	mvn	r0, #0
   13f2c:	add	sp, sp, #12
   13f30:	vpop	{d8}
   13f34:	pop	{r4, r5, pc}
   13f38:	andeq	r0, r0, r0
   13f3c:	mvnmi	r0, r0
   13f40:	push	{r4, r5, r6, r7, r8, lr}
   13f44:	sub	sp, sp, #8
   13f48:	mov	r5, r0
   13f4c:	mov	r4, r1
   13f50:	mov	r7, r2
   13f54:	mov	r8, r3
   13f58:	bl	10d28 <__errno_location@plt>
   13f5c:	mov	r6, r0
   13f60:	mov	r3, #0
   13f64:	str	r3, [r0]
   13f68:	add	r1, sp, #4
   13f6c:	mov	r0, r5
   13f70:	blx	r8
   13f74:	ldr	r3, [sp, #4]
   13f78:	cmp	r5, r3
   13f7c:	beq	13fe0 <abort@plt+0x31f8>
   13f80:	cmp	r4, #0
   13f84:	beq	13fbc <abort@plt+0x31d4>
   13f88:	vcmp.f64	d0, #0.0
   13f8c:	vmrs	APSR_nzcv, fpscr
   13f90:	moveq	r0, #1
   13f94:	beq	13fac <abort@plt+0x31c4>
   13f98:	ldr	r0, [r6]
   13f9c:	subs	r0, r0, #34	; 0x22
   13fa0:	movne	r0, #1
   13fa4:	cmp	r4, #0
   13fa8:	beq	13fb0 <abort@plt+0x31c8>
   13fac:	str	r3, [r4]
   13fb0:	vstr	d0, [r7]
   13fb4:	add	sp, sp, #8
   13fb8:	pop	{r4, r5, r6, r7, r8, pc}
   13fbc:	ldrb	r2, [r3]
   13fc0:	cmp	r2, #0
   13fc4:	movne	r0, #0
   13fc8:	bne	13fb0 <abort@plt+0x31c8>
   13fcc:	vcmp.f64	d0, #0.0
   13fd0:	vmrs	APSR_nzcv, fpscr
   13fd4:	bne	13f98 <abort@plt+0x31b0>
   13fd8:	mov	r0, #1
   13fdc:	b	13fb0 <abort@plt+0x31c8>
   13fe0:	mov	r0, #0
   13fe4:	b	13fa4 <abort@plt+0x31bc>
   13fe8:	push	{r4, lr}
   13fec:	mov	r2, r0
   13ff0:	mov	r3, r1
   13ff4:	cmp	r1, #0
   13ff8:	cmpne	r0, #0
   13ffc:	moveq	r3, #1
   14000:	moveq	r2, r3
   14004:	umull	r0, r1, r2, r3
   14008:	cmp	r0, #0
   1400c:	cmpge	r1, #0
   14010:	bne	14024 <abort@plt+0x323c>
   14014:	mov	r1, r3
   14018:	mov	r0, r2
   1401c:	bl	10bb4 <calloc@plt>
   14020:	pop	{r4, pc}
   14024:	bl	10d28 <__errno_location@plt>
   14028:	mov	r3, #12
   1402c:	str	r3, [r0]
   14030:	mov	r0, #0
   14034:	pop	{r4, pc}
   14038:	push	{r4, lr}
   1403c:	cmp	r0, #0
   14040:	moveq	r0, #1
   14044:	cmp	r0, #0
   14048:	blt	14054 <abort@plt+0x326c>
   1404c:	bl	10cc8 <malloc@plt>
   14050:	pop	{r4, pc}
   14054:	bl	10d28 <__errno_location@plt>
   14058:	mov	r3, #12
   1405c:	str	r3, [r0]
   14060:	mov	r0, #0
   14064:	pop	{r4, pc}
   14068:	push	{r4, lr}
   1406c:	cmp	r0, #0
   14070:	beq	1408c <abort@plt+0x32a4>
   14074:	cmp	r1, #0
   14078:	beq	14098 <abort@plt+0x32b0>
   1407c:	cmp	r1, #0
   14080:	blt	140a4 <abort@plt+0x32bc>
   14084:	bl	10c5c <realloc@plt>
   14088:	pop	{r4, pc}
   1408c:	mov	r0, r1
   14090:	bl	14038 <abort@plt+0x3250>
   14094:	pop	{r4, pc}
   14098:	bl	143b0 <abort@plt+0x35c8>
   1409c:	mov	r0, #0
   140a0:	pop	{r4, pc}
   140a4:	bl	10d28 <__errno_location@plt>
   140a8:	mov	r3, #12
   140ac:	str	r3, [r0]
   140b0:	mov	r0, #0
   140b4:	pop	{r4, pc}
   140b8:	push	{r4, r5, r6, lr}
   140bc:	mov	r5, r0
   140c0:	mov	r4, r1
   140c4:	ldr	r3, [pc, #108]	; 14138 <abort@plt+0x3350>
   140c8:	ldr	r3, [r3]
   140cc:	cmp	r3, #0
   140d0:	beq	140f4 <abort@plt+0x330c>
   140d4:	ldr	r3, [pc, #92]	; 14138 <abort@plt+0x3350>
   140d8:	ldr	r2, [r3]
   140dc:	cmp	r2, #0
   140e0:	beq	14110 <abort@plt+0x3328>
   140e4:	mov	r1, r4
   140e8:	mov	r0, r5
   140ec:	bl	10d94 <strtod_l@plt>
   140f0:	pop	{r4, r5, r6, pc}
   140f4:	mov	r2, #0
   140f8:	ldr	r1, [pc, #60]	; 1413c <abort@plt+0x3354>
   140fc:	ldr	r0, [pc, #60]	; 14140 <abort@plt+0x3358>
   14100:	bl	10dc4 <newlocale@plt>
   14104:	ldr	r3, [pc, #44]	; 14138 <abort@plt+0x3350>
   14108:	str	r0, [r3]
   1410c:	b	140d4 <abort@plt+0x32ec>
   14110:	cmp	r4, #0
   14114:	beq	14124 <abort@plt+0x333c>
   14118:	str	r5, [r4]
   1411c:	vldr	d0, [pc, #12]	; 14130 <abort@plt+0x3348>
   14120:	pop	{r4, r5, r6, pc}
   14124:	vldr	d0, [pc, #4]	; 14130 <abort@plt+0x3348>
   14128:	pop	{r4, r5, r6, pc}
   1412c:	nop			; (mov r0, r0)
	...
   14138:	andeq	r6, r2, ip, ror r2
   1413c:	strdeq	r5, [r1], -r4
   14140:			; <UNDEFINED> instruction: 0x00001fbf
   14144:	push	{r4, r5, r6, lr}
   14148:	mov	r5, r0
   1414c:	bl	10ca4 <__fpending@plt>
   14150:	mov	r6, r0
   14154:	ldr	r4, [r5]
   14158:	and	r4, r4, #32
   1415c:	mov	r0, r5
   14160:	bl	142a4 <abort@plt+0x34bc>
   14164:	cmp	r4, #0
   14168:	bne	14190 <abort@plt+0x33a8>
   1416c:	cmp	r0, #0
   14170:	popeq	{r4, r5, r6, pc}
   14174:	cmp	r6, #0
   14178:	bne	141ac <abort@plt+0x33c4>
   1417c:	bl	10d28 <__errno_location@plt>
   14180:	ldr	r0, [r0]
   14184:	subs	r0, r0, #9
   14188:	mvnne	r0, #0
   1418c:	pop	{r4, r5, r6, pc}
   14190:	cmp	r0, #0
   14194:	bne	141b4 <abort@plt+0x33cc>
   14198:	bl	10d28 <__errno_location@plt>
   1419c:	mov	r3, #0
   141a0:	str	r3, [r0]
   141a4:	mvn	r0, #0
   141a8:	pop	{r4, r5, r6, pc}
   141ac:	mvn	r0, #0
   141b0:	pop	{r4, r5, r6, pc}
   141b4:	mvn	r0, #0
   141b8:	pop	{r4, r5, r6, pc}
   141bc:	andeq	r0, r0, r0
   141c0:	vldr	d7, [pc, #184]	; 14280 <abort@plt+0x3498>
   141c4:	vcmpe.f64	d0, d7
   141c8:	vmrs	APSR_nzcv, fpscr
   141cc:	ble	14254 <abort@plt+0x346c>
   141d0:	vldr	d7, [pc, #176]	; 14288 <abort@plt+0x34a0>
   141d4:	vcmpe.f64	d0, d7
   141d8:	vmrs	APSR_nzcv, fpscr
   141dc:	bpl	14268 <abort@plt+0x3480>
   141e0:	vcvt.s32.f64	s14, d0
   141e4:	vcvt.f64.s32	d6, s14
   141e8:	vsub.f64	d0, d0, d6
   141ec:	vldr	d6, [pc, #156]	; 14290 <abort@plt+0x34a8>
   141f0:	vmul.f64	d0, d0, d6
   141f4:	vcvt.s32.f64	s15, d0
   141f8:	vcvt.f64.s32	d6, s15
   141fc:	vcmpe.f64	d0, d6
   14200:	vmrs	APSR_nzcv, fpscr
   14204:	movgt	r3, #1
   14208:	movle	r3, #0
   1420c:	vmov	r2, s15
   14210:	add	r3, r2, r3
   14214:	ldr	ip, [pc, #124]	; 14298 <abort@plt+0x34b0>
   14218:	smull	r2, ip, ip, r3
   1421c:	asr	r1, r3, #31
   14220:	rsb	ip, r1, ip, asr #28
   14224:	vmov	r2, s14
   14228:	add	r2, ip, r2
   1422c:	ldr	r1, [pc, #104]	; 1429c <abort@plt+0x34b4>
   14230:	mul	r1, r1, ip
   14234:	subs	r3, r3, r1
   14238:	submi	r2, r2, #1
   1423c:	addmi	r3, r3, #998244352	; 0x3b800000
   14240:	addmi	r3, r3, #1753088	; 0x1ac000
   14244:	addmi	r3, r3, #2560	; 0xa00
   14248:	str	r2, [r0]
   1424c:	str	r3, [r0, #4]
   14250:	bx	lr
   14254:	mov	r3, #-2147483648	; 0x80000000
   14258:	str	r3, [r0]
   1425c:	mov	r3, #0
   14260:	str	r3, [r0, #4]
   14264:	bx	lr
   14268:	mvn	r3, #-2147483648	; 0x80000000
   1426c:	str	r3, [r0]
   14270:	ldr	r3, [pc, #40]	; 142a0 <abort@plt+0x34b8>
   14274:	str	r3, [r0, #4]
   14278:	bx	lr
   1427c:	nop			; (mov r0, r0)
   14280:	andeq	r0, r0, r0
   14284:	mvngt	r0, r0
   14288:	andeq	r0, r0, r0
   1428c:	mvnmi	r0, r0
   14290:	andeq	r0, r0, r0
   14294:	bicmi	ip, sp, r5, ror #26
   14298:	ldrtmi	r2, [r8], #4001	; 0xfa1
   1429c:	blcc	fe6c6aa4 <opterr@@GLIBC_2.4+0xfe6a096c>
   142a0:	blcc	fe6c6aa4 <opterr@@GLIBC_2.4+0xfe6a096c>
   142a4:	push	{r4, r5, r6, lr}
   142a8:	sub	sp, sp, #8
   142ac:	mov	r4, r0
   142b0:	bl	10d64 <fileno@plt>
   142b4:	cmp	r0, #0
   142b8:	blt	14330 <abort@plt+0x3548>
   142bc:	mov	r0, r4
   142c0:	bl	10ce0 <__freading@plt>
   142c4:	cmp	r0, #0
   142c8:	beq	142fc <abort@plt+0x3514>
   142cc:	mov	r0, r4
   142d0:	bl	10d64 <fileno@plt>
   142d4:	mov	r3, #1
   142d8:	str	r3, [sp]
   142dc:	mov	r2, #0
   142e0:	mov	r3, #0
   142e4:	bl	10c8c <lseek64@plt>
   142e8:	mvn	r2, #0
   142ec:	mvn	r3, #0
   142f0:	cmp	r1, r3
   142f4:	cmpeq	r0, r2
   142f8:	beq	1433c <abort@plt+0x3554>
   142fc:	mov	r0, r4
   14300:	bl	1434c <abort@plt+0x3564>
   14304:	cmp	r0, #0
   14308:	beq	1433c <abort@plt+0x3554>
   1430c:	bl	10d28 <__errno_location@plt>
   14310:	mov	r5, r0
   14314:	ldr	r6, [r0]
   14318:	mov	r0, r4
   1431c:	bl	10d7c <fclose@plt>
   14320:	cmp	r6, #0
   14324:	strne	r6, [r5]
   14328:	mvnne	r0, #0
   1432c:	b	14344 <abort@plt+0x355c>
   14330:	mov	r0, r4
   14334:	bl	10d7c <fclose@plt>
   14338:	b	14344 <abort@plt+0x355c>
   1433c:	mov	r0, r4
   14340:	bl	10d7c <fclose@plt>
   14344:	add	sp, sp, #8
   14348:	pop	{r4, r5, r6, pc}
   1434c:	push	{r4, lr}
   14350:	sub	sp, sp, #8
   14354:	subs	r4, r0, #0
   14358:	beq	1436c <abort@plt+0x3584>
   1435c:	mov	r0, r4
   14360:	bl	10ce0 <__freading@plt>
   14364:	cmp	r0, #0
   14368:	bne	1437c <abort@plt+0x3594>
   1436c:	mov	r0, r4
   14370:	bl	10bf0 <fflush@plt>
   14374:	add	sp, sp, #8
   14378:	pop	{r4, pc}
   1437c:	ldr	r3, [r4]
   14380:	tst	r3, #256	; 0x100
   14384:	bne	14394 <abort@plt+0x35ac>
   14388:	mov	r0, r4
   1438c:	bl	10bf0 <fflush@plt>
   14390:	b	14374 <abort@plt+0x358c>
   14394:	mov	r3, #1
   14398:	str	r3, [sp]
   1439c:	mov	r2, #0
   143a0:	mov	r3, #0
   143a4:	mov	r0, r4
   143a8:	bl	14408 <abort@plt+0x3620>
   143ac:	b	14388 <abort@plt+0x35a0>
   143b0:	push	{r4, r5, lr}
   143b4:	sub	sp, sp, #12
   143b8:	mov	r5, r0
   143bc:	bl	10d28 <__errno_location@plt>
   143c0:	mov	r4, r0
   143c4:	ldr	r3, [r0]
   143c8:	str	r3, [sp]
   143cc:	str	r3, [sp, #4]
   143d0:	mov	r3, #0
   143d4:	str	r3, [r0]
   143d8:	mov	r0, r5
   143dc:	bl	10bfc <free@plt>
   143e0:	ldr	r3, [r4]
   143e4:	cmp	r3, #0
   143e8:	moveq	r3, #4
   143ec:	movne	r3, #0
   143f0:	add	r2, sp, #8
   143f4:	add	r3, r2, r3
   143f8:	ldr	r3, [r3, #-8]
   143fc:	str	r3, [r4]
   14400:	add	sp, sp, #12
   14404:	pop	{r4, r5, pc}
   14408:	push	{r4, r5, r6, r7, lr}
   1440c:	sub	sp, sp, #12
   14410:	mov	r4, r0
   14414:	mov	r6, r2
   14418:	mov	r7, r3
   1441c:	ldr	r5, [sp, #32]
   14420:	ldr	r2, [r0, #8]
   14424:	ldr	r3, [r0, #4]
   14428:	cmp	r2, r3
   1442c:	beq	1444c <abort@plt+0x3664>
   14430:	str	r5, [sp]
   14434:	mov	r2, r6
   14438:	mov	r3, r7
   1443c:	mov	r0, r4
   14440:	bl	10d88 <fseeko64@plt>
   14444:	add	sp, sp, #12
   14448:	pop	{r4, r5, r6, r7, pc}
   1444c:	ldr	r2, [r0, #20]
   14450:	ldr	r3, [r0, #16]
   14454:	cmp	r2, r3
   14458:	bne	14430 <abort@plt+0x3648>
   1445c:	ldr	r3, [r0, #36]	; 0x24
   14460:	cmp	r3, #0
   14464:	bne	14430 <abort@plt+0x3648>
   14468:	bl	10d64 <fileno@plt>
   1446c:	str	r5, [sp]
   14470:	mov	r2, r6
   14474:	mov	r3, r7
   14478:	bl	10c8c <lseek64@plt>
   1447c:	mvn	r2, #0
   14480:	mvn	r3, #0
   14484:	cmp	r1, r3
   14488:	cmpeq	r0, r2
   1448c:	beq	144a8 <abort@plt+0x36c0>
   14490:	ldr	r3, [r4]
   14494:	bic	r3, r3, #16
   14498:	str	r3, [r4]
   1449c:	strd	r0, [r4, #80]	; 0x50
   144a0:	mov	r0, #0
   144a4:	b	14444 <abort@plt+0x365c>
   144a8:	mvn	r0, #0
   144ac:	b	14444 <abort@plt+0x365c>
   144b0:	push	{r4, lr}
   144b4:	mov	r0, #14
   144b8:	bl	10db8 <nl_langinfo@plt>
   144bc:	cmp	r0, #0
   144c0:	beq	144d8 <abort@plt+0x36f0>
   144c4:	ldrb	r2, [r0]
   144c8:	ldr	r3, [pc, #16]	; 144e0 <abort@plt+0x36f8>
   144cc:	cmp	r2, #0
   144d0:	moveq	r0, r3
   144d4:	pop	{r4, pc}
   144d8:	ldr	r0, [pc]	; 144e0 <abort@plt+0x36f8>
   144dc:	pop	{r4, pc}
   144e0:	strdeq	r5, [r1], -r8
   144e4:	push	{r4, r5, r6, r7, lr}
   144e8:	sub	sp, sp, #12
   144ec:	mov	r7, r1
   144f0:	mov	r5, r2
   144f4:	subs	r6, r0, #0
   144f8:	addeq	r6, sp, #4
   144fc:	mov	r0, r6
   14500:	bl	10cb0 <mbrtowc@plt>
   14504:	mov	r4, r0
   14508:	cmp	r5, #0
   1450c:	cmnne	r0, #3
   14510:	bhi	14520 <abort@plt+0x3738>
   14514:	mov	r0, r4
   14518:	add	sp, sp, #12
   1451c:	pop	{r4, r5, r6, r7, pc}
   14520:	mov	r0, #0
   14524:	bl	14588 <abort@plt+0x37a0>
   14528:	cmp	r0, #0
   1452c:	ldrbeq	r3, [r7]
   14530:	streq	r3, [r6]
   14534:	moveq	r4, #1
   14538:	b	14514 <abort@plt+0x372c>
   1453c:	push	{r4, r5, r6, lr}
   14540:	mov	r6, r0
   14544:	mov	r5, r1
   14548:	subs	r4, r2, #0
   1454c:	beq	14578 <abort@plt+0x3790>
   14550:	mov	r1, r4
   14554:	mvn	r0, #0
   14558:	bl	14690 <abort@plt+0x38a8>
   1455c:	cmp	r0, r5
   14560:	bcs	14578 <abort@plt+0x3790>
   14564:	bl	10d28 <__errno_location@plt>
   14568:	mov	r3, #12
   1456c:	str	r3, [r0]
   14570:	mov	r0, #0
   14574:	pop	{r4, r5, r6, pc}
   14578:	mul	r1, r5, r4
   1457c:	mov	r0, r6
   14580:	bl	14068 <abort@plt+0x3280>
   14584:	pop	{r4, r5, r6, pc}
   14588:	push	{lr}		; (str lr, [sp, #-4]!)
   1458c:	sub	sp, sp, #268	; 0x10c
   14590:	ldr	r2, [pc, #68]	; 145dc <abort@plt+0x37f4>
   14594:	add	r1, sp, #4
   14598:	bl	145e8 <abort@plt+0x3800>
   1459c:	cmp	r0, #0
   145a0:	movne	r0, #0
   145a4:	bne	145d4 <abort@plt+0x37ec>
   145a8:	ldr	r1, [pc, #48]	; 145e0 <abort@plt+0x37f8>
   145ac:	add	r0, sp, #4
   145b0:	bl	10bd8 <strcmp@plt>
   145b4:	cmp	r0, #0
   145b8:	moveq	r0, #0
   145bc:	beq	145d4 <abort@plt+0x37ec>
   145c0:	ldr	r1, [pc, #28]	; 145e4 <abort@plt+0x37fc>
   145c4:	add	r0, sp, #4
   145c8:	bl	10bd8 <strcmp@plt>
   145cc:	adds	r0, r0, #0
   145d0:	movne	r0, #1
   145d4:	add	sp, sp, #268	; 0x10c
   145d8:	pop	{pc}		; (ldr pc, [sp], #4)
   145dc:	andeq	r0, r0, r1, lsl #2
   145e0:	strdeq	r5, [r1], -r4
   145e4:	andeq	r5, r1, r0, lsl #8
   145e8:	push	{r4, r5, r6, lr}
   145ec:	mov	r6, r1
   145f0:	mov	r4, r2
   145f4:	mov	r1, #0
   145f8:	bl	10da0 <setlocale@plt>
   145fc:	subs	r5, r0, #0
   14600:	beq	14624 <abort@plt+0x383c>
   14604:	mov	r0, r5
   14608:	bl	10d1c <strlen@plt>
   1460c:	cmp	r4, r0
   14610:	bhi	1463c <abort@plt+0x3854>
   14614:	cmp	r4, #0
   14618:	bne	14654 <abort@plt+0x386c>
   1461c:	mov	r0, #34	; 0x22
   14620:	pop	{r4, r5, r6, pc}
   14624:	cmp	r4, #0
   14628:	beq	14678 <abort@plt+0x3890>
   1462c:	mov	r3, #0
   14630:	strb	r3, [r6]
   14634:	mov	r0, #22
   14638:	pop	{r4, r5, r6, pc}
   1463c:	add	r2, r0, #1
   14640:	mov	r1, r5
   14644:	mov	r0, r6
   14648:	bl	10c20 <memcpy@plt>
   1464c:	mov	r0, #0
   14650:	pop	{r4, r5, r6, pc}
   14654:	sub	r4, r4, #1
   14658:	mov	r2, r4
   1465c:	mov	r1, r5
   14660:	mov	r0, r6
   14664:	bl	10c20 <memcpy@plt>
   14668:	mov	r3, #0
   1466c:	strb	r3, [r6, r4]
   14670:	mov	r0, #34	; 0x22
   14674:	pop	{r4, r5, r6, pc}
   14678:	mov	r0, #22
   1467c:	pop	{r4, r5, r6, pc}
   14680:	push	{r4, lr}
   14684:	mov	r1, #0
   14688:	bl	10da0 <setlocale@plt>
   1468c:	pop	{r4, pc}
   14690:	subs	r2, r1, #1
   14694:	bxeq	lr
   14698:	bcc	14870 <abort@plt+0x3a88>
   1469c:	cmp	r0, r1
   146a0:	bls	14854 <abort@plt+0x3a6c>
   146a4:	tst	r1, r2
   146a8:	beq	14860 <abort@plt+0x3a78>
   146ac:	clz	r3, r0
   146b0:	clz	r2, r1
   146b4:	sub	r3, r2, r3
   146b8:	rsbs	r3, r3, #31
   146bc:	addne	r3, r3, r3, lsl #1
   146c0:	mov	r2, #0
   146c4:	addne	pc, pc, r3, lsl #2
   146c8:	nop			; (mov r0, r0)
   146cc:	cmp	r0, r1, lsl #31
   146d0:	adc	r2, r2, r2
   146d4:	subcs	r0, r0, r1, lsl #31
   146d8:	cmp	r0, r1, lsl #30
   146dc:	adc	r2, r2, r2
   146e0:	subcs	r0, r0, r1, lsl #30
   146e4:	cmp	r0, r1, lsl #29
   146e8:	adc	r2, r2, r2
   146ec:	subcs	r0, r0, r1, lsl #29
   146f0:	cmp	r0, r1, lsl #28
   146f4:	adc	r2, r2, r2
   146f8:	subcs	r0, r0, r1, lsl #28
   146fc:	cmp	r0, r1, lsl #27
   14700:	adc	r2, r2, r2
   14704:	subcs	r0, r0, r1, lsl #27
   14708:	cmp	r0, r1, lsl #26
   1470c:	adc	r2, r2, r2
   14710:	subcs	r0, r0, r1, lsl #26
   14714:	cmp	r0, r1, lsl #25
   14718:	adc	r2, r2, r2
   1471c:	subcs	r0, r0, r1, lsl #25
   14720:	cmp	r0, r1, lsl #24
   14724:	adc	r2, r2, r2
   14728:	subcs	r0, r0, r1, lsl #24
   1472c:	cmp	r0, r1, lsl #23
   14730:	adc	r2, r2, r2
   14734:	subcs	r0, r0, r1, lsl #23
   14738:	cmp	r0, r1, lsl #22
   1473c:	adc	r2, r2, r2
   14740:	subcs	r0, r0, r1, lsl #22
   14744:	cmp	r0, r1, lsl #21
   14748:	adc	r2, r2, r2
   1474c:	subcs	r0, r0, r1, lsl #21
   14750:	cmp	r0, r1, lsl #20
   14754:	adc	r2, r2, r2
   14758:	subcs	r0, r0, r1, lsl #20
   1475c:	cmp	r0, r1, lsl #19
   14760:	adc	r2, r2, r2
   14764:	subcs	r0, r0, r1, lsl #19
   14768:	cmp	r0, r1, lsl #18
   1476c:	adc	r2, r2, r2
   14770:	subcs	r0, r0, r1, lsl #18
   14774:	cmp	r0, r1, lsl #17
   14778:	adc	r2, r2, r2
   1477c:	subcs	r0, r0, r1, lsl #17
   14780:	cmp	r0, r1, lsl #16
   14784:	adc	r2, r2, r2
   14788:	subcs	r0, r0, r1, lsl #16
   1478c:	cmp	r0, r1, lsl #15
   14790:	adc	r2, r2, r2
   14794:	subcs	r0, r0, r1, lsl #15
   14798:	cmp	r0, r1, lsl #14
   1479c:	adc	r2, r2, r2
   147a0:	subcs	r0, r0, r1, lsl #14
   147a4:	cmp	r0, r1, lsl #13
   147a8:	adc	r2, r2, r2
   147ac:	subcs	r0, r0, r1, lsl #13
   147b0:	cmp	r0, r1, lsl #12
   147b4:	adc	r2, r2, r2
   147b8:	subcs	r0, r0, r1, lsl #12
   147bc:	cmp	r0, r1, lsl #11
   147c0:	adc	r2, r2, r2
   147c4:	subcs	r0, r0, r1, lsl #11
   147c8:	cmp	r0, r1, lsl #10
   147cc:	adc	r2, r2, r2
   147d0:	subcs	r0, r0, r1, lsl #10
   147d4:	cmp	r0, r1, lsl #9
   147d8:	adc	r2, r2, r2
   147dc:	subcs	r0, r0, r1, lsl #9
   147e0:	cmp	r0, r1, lsl #8
   147e4:	adc	r2, r2, r2
   147e8:	subcs	r0, r0, r1, lsl #8
   147ec:	cmp	r0, r1, lsl #7
   147f0:	adc	r2, r2, r2
   147f4:	subcs	r0, r0, r1, lsl #7
   147f8:	cmp	r0, r1, lsl #6
   147fc:	adc	r2, r2, r2
   14800:	subcs	r0, r0, r1, lsl #6
   14804:	cmp	r0, r1, lsl #5
   14808:	adc	r2, r2, r2
   1480c:	subcs	r0, r0, r1, lsl #5
   14810:	cmp	r0, r1, lsl #4
   14814:	adc	r2, r2, r2
   14818:	subcs	r0, r0, r1, lsl #4
   1481c:	cmp	r0, r1, lsl #3
   14820:	adc	r2, r2, r2
   14824:	subcs	r0, r0, r1, lsl #3
   14828:	cmp	r0, r1, lsl #2
   1482c:	adc	r2, r2, r2
   14830:	subcs	r0, r0, r1, lsl #2
   14834:	cmp	r0, r1, lsl #1
   14838:	adc	r2, r2, r2
   1483c:	subcs	r0, r0, r1, lsl #1
   14840:	cmp	r0, r1
   14844:	adc	r2, r2, r2
   14848:	subcs	r0, r0, r1
   1484c:	mov	r0, r2
   14850:	bx	lr
   14854:	moveq	r0, #1
   14858:	movne	r0, #0
   1485c:	bx	lr
   14860:	clz	r2, r1
   14864:	rsb	r2, r2, #31
   14868:	lsr	r0, r0, r2
   1486c:	bx	lr
   14870:	cmp	r0, #0
   14874:	mvnne	r0, #0
   14878:	b	14adc <abort@plt+0x3cf4>
   1487c:	cmp	r1, #0
   14880:	beq	14870 <abort@plt+0x3a88>
   14884:	push	{r0, r1, lr}
   14888:	bl	14690 <abort@plt+0x38a8>
   1488c:	pop	{r1, r2, lr}
   14890:	mul	r3, r2, r0
   14894:	sub	r1, r1, r3
   14898:	bx	lr
   1489c:	cmp	r1, #0
   148a0:	beq	14aac <abort@plt+0x3cc4>
   148a4:	eor	ip, r0, r1
   148a8:	rsbmi	r1, r1, #0
   148ac:	subs	r2, r1, #1
   148b0:	beq	14a78 <abort@plt+0x3c90>
   148b4:	movs	r3, r0
   148b8:	rsbmi	r3, r0, #0
   148bc:	cmp	r3, r1
   148c0:	bls	14a84 <abort@plt+0x3c9c>
   148c4:	tst	r1, r2
   148c8:	beq	14a94 <abort@plt+0x3cac>
   148cc:	clz	r2, r3
   148d0:	clz	r0, r1
   148d4:	sub	r2, r0, r2
   148d8:	rsbs	r2, r2, #31
   148dc:	addne	r2, r2, r2, lsl #1
   148e0:	mov	r0, #0
   148e4:	addne	pc, pc, r2, lsl #2
   148e8:	nop			; (mov r0, r0)
   148ec:	cmp	r3, r1, lsl #31
   148f0:	adc	r0, r0, r0
   148f4:	subcs	r3, r3, r1, lsl #31
   148f8:	cmp	r3, r1, lsl #30
   148fc:	adc	r0, r0, r0
   14900:	subcs	r3, r3, r1, lsl #30
   14904:	cmp	r3, r1, lsl #29
   14908:	adc	r0, r0, r0
   1490c:	subcs	r3, r3, r1, lsl #29
   14910:	cmp	r3, r1, lsl #28
   14914:	adc	r0, r0, r0
   14918:	subcs	r3, r3, r1, lsl #28
   1491c:	cmp	r3, r1, lsl #27
   14920:	adc	r0, r0, r0
   14924:	subcs	r3, r3, r1, lsl #27
   14928:	cmp	r3, r1, lsl #26
   1492c:	adc	r0, r0, r0
   14930:	subcs	r3, r3, r1, lsl #26
   14934:	cmp	r3, r1, lsl #25
   14938:	adc	r0, r0, r0
   1493c:	subcs	r3, r3, r1, lsl #25
   14940:	cmp	r3, r1, lsl #24
   14944:	adc	r0, r0, r0
   14948:	subcs	r3, r3, r1, lsl #24
   1494c:	cmp	r3, r1, lsl #23
   14950:	adc	r0, r0, r0
   14954:	subcs	r3, r3, r1, lsl #23
   14958:	cmp	r3, r1, lsl #22
   1495c:	adc	r0, r0, r0
   14960:	subcs	r3, r3, r1, lsl #22
   14964:	cmp	r3, r1, lsl #21
   14968:	adc	r0, r0, r0
   1496c:	subcs	r3, r3, r1, lsl #21
   14970:	cmp	r3, r1, lsl #20
   14974:	adc	r0, r0, r0
   14978:	subcs	r3, r3, r1, lsl #20
   1497c:	cmp	r3, r1, lsl #19
   14980:	adc	r0, r0, r0
   14984:	subcs	r3, r3, r1, lsl #19
   14988:	cmp	r3, r1, lsl #18
   1498c:	adc	r0, r0, r0
   14990:	subcs	r3, r3, r1, lsl #18
   14994:	cmp	r3, r1, lsl #17
   14998:	adc	r0, r0, r0
   1499c:	subcs	r3, r3, r1, lsl #17
   149a0:	cmp	r3, r1, lsl #16
   149a4:	adc	r0, r0, r0
   149a8:	subcs	r3, r3, r1, lsl #16
   149ac:	cmp	r3, r1, lsl #15
   149b0:	adc	r0, r0, r0
   149b4:	subcs	r3, r3, r1, lsl #15
   149b8:	cmp	r3, r1, lsl #14
   149bc:	adc	r0, r0, r0
   149c0:	subcs	r3, r3, r1, lsl #14
   149c4:	cmp	r3, r1, lsl #13
   149c8:	adc	r0, r0, r0
   149cc:	subcs	r3, r3, r1, lsl #13
   149d0:	cmp	r3, r1, lsl #12
   149d4:	adc	r0, r0, r0
   149d8:	subcs	r3, r3, r1, lsl #12
   149dc:	cmp	r3, r1, lsl #11
   149e0:	adc	r0, r0, r0
   149e4:	subcs	r3, r3, r1, lsl #11
   149e8:	cmp	r3, r1, lsl #10
   149ec:	adc	r0, r0, r0
   149f0:	subcs	r3, r3, r1, lsl #10
   149f4:	cmp	r3, r1, lsl #9
   149f8:	adc	r0, r0, r0
   149fc:	subcs	r3, r3, r1, lsl #9
   14a00:	cmp	r3, r1, lsl #8
   14a04:	adc	r0, r0, r0
   14a08:	subcs	r3, r3, r1, lsl #8
   14a0c:	cmp	r3, r1, lsl #7
   14a10:	adc	r0, r0, r0
   14a14:	subcs	r3, r3, r1, lsl #7
   14a18:	cmp	r3, r1, lsl #6
   14a1c:	adc	r0, r0, r0
   14a20:	subcs	r3, r3, r1, lsl #6
   14a24:	cmp	r3, r1, lsl #5
   14a28:	adc	r0, r0, r0
   14a2c:	subcs	r3, r3, r1, lsl #5
   14a30:	cmp	r3, r1, lsl #4
   14a34:	adc	r0, r0, r0
   14a38:	subcs	r3, r3, r1, lsl #4
   14a3c:	cmp	r3, r1, lsl #3
   14a40:	adc	r0, r0, r0
   14a44:	subcs	r3, r3, r1, lsl #3
   14a48:	cmp	r3, r1, lsl #2
   14a4c:	adc	r0, r0, r0
   14a50:	subcs	r3, r3, r1, lsl #2
   14a54:	cmp	r3, r1, lsl #1
   14a58:	adc	r0, r0, r0
   14a5c:	subcs	r3, r3, r1, lsl #1
   14a60:	cmp	r3, r1
   14a64:	adc	r0, r0, r0
   14a68:	subcs	r3, r3, r1
   14a6c:	cmp	ip, #0
   14a70:	rsbmi	r0, r0, #0
   14a74:	bx	lr
   14a78:	teq	ip, r0
   14a7c:	rsbmi	r0, r0, #0
   14a80:	bx	lr
   14a84:	movcc	r0, #0
   14a88:	asreq	r0, ip, #31
   14a8c:	orreq	r0, r0, #1
   14a90:	bx	lr
   14a94:	clz	r2, r1
   14a98:	rsb	r2, r2, #31
   14a9c:	cmp	ip, #0
   14aa0:	lsr	r0, r3, r2
   14aa4:	rsbmi	r0, r0, #0
   14aa8:	bx	lr
   14aac:	cmp	r0, #0
   14ab0:	mvngt	r0, #-2147483648	; 0x80000000
   14ab4:	movlt	r0, #-2147483648	; 0x80000000
   14ab8:	b	14adc <abort@plt+0x3cf4>
   14abc:	cmp	r1, #0
   14ac0:	beq	14aac <abort@plt+0x3cc4>
   14ac4:	push	{r0, r1, lr}
   14ac8:	bl	148a4 <abort@plt+0x3abc>
   14acc:	pop	{r1, r2, lr}
   14ad0:	mul	r3, r2, r0
   14ad4:	sub	r1, r1, r3
   14ad8:	bx	lr
   14adc:	push	{r1, lr}
   14ae0:	mov	r0, #8
   14ae4:	bl	10bcc <raise@plt>
   14ae8:	pop	{r1, pc}
   14aec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14af0:	mov	r7, r0
   14af4:	ldr	r6, [pc, #72]	; 14b44 <abort@plt+0x3d5c>
   14af8:	ldr	r5, [pc, #72]	; 14b48 <abort@plt+0x3d60>
   14afc:	add	r6, pc, r6
   14b00:	add	r5, pc, r5
   14b04:	sub	r6, r6, r5
   14b08:	mov	r8, r1
   14b0c:	mov	r9, r2
   14b10:	bl	10b94 <calloc@plt-0x20>
   14b14:	asrs	r6, r6, #2
   14b18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b1c:	mov	r4, #0
   14b20:	add	r4, r4, #1
   14b24:	ldr	r3, [r5], #4
   14b28:	mov	r2, r9
   14b2c:	mov	r1, r8
   14b30:	mov	r0, r7
   14b34:	blx	r3
   14b38:	cmp	r6, r4
   14b3c:	bne	14b20 <abort@plt+0x3d38>
   14b40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b44:	andeq	r1, r1, ip, lsl #8
   14b48:	andeq	r1, r1, r4, lsl #8
   14b4c:	bx	lr
   14b50:	ldr	r3, [pc, #12]	; 14b64 <abort@plt+0x3d7c>
   14b54:	mov	r1, #0
   14b58:	add	r3, pc, r3
   14b5c:	ldr	r2, [r3]
   14b60:	b	10d34 <__cxa_atexit@plt>
   14b64:	andeq	r1, r1, r4, ror r5

Disassembly of section .fini:

00014b68 <.fini>:
   14b68:	push	{r3, lr}
   14b6c:	pop	{r3, pc}
