
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

000004d0 <_init>:
 4d0:	push	{r3, lr}
 4d4:	bl	550 <call_weak_fn>
 4d8:	pop	{r3, pc}

Disassembly of section .plt:

000004dc <.plt>:
 4dc:	push	{lr}		; (str lr, [sp, #-4]!)
 4e0:	ldr	lr, [pc, #4]	; 4ec <.plt+0x10>
 4e4:	add	lr, pc, lr
 4e8:	ldr	pc, [lr, #8]!
 4ec:	.word	0x00010b14

000004f0 <__cxa_finalize@plt>:
 4f0:	add	ip, pc, #0, 12
 4f4:	add	ip, ip, #16, 20	; 0x10000
 4f8:	ldr	pc, [ip, #2836]!	; 0xb14

000004fc <ierror@plt>:
 4fc:	add	ip, pc, #0, 12
 500:	add	ip, ip, #16, 20	; 0x10000
 504:	ldr	pc, [ip, #2828]!	; 0xb0c

00000508 <find_umode_slot@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2820]!	; 0xb04

00000514 <__gmon_start__@plt>:
 514:	add	ip, pc, #0, 12
 518:	add	ip, ip, #16, 20	; 0x10000
 51c:	ldr	pc, [ip, #2812]!	; 0xafc

00000520 <sendto_one_numeric@plt>:
 520:	add	ip, pc, #0, 12
 524:	add	ip, ip, #16, 20	; 0x10000
 528:	ldr	pc, [ip, #2804]!	; 0xaf4

0000052c <snprintf@plt>:
 52c:	add	ip, pc, #0, 12
 530:	add	ip, ip, #16, 20	; 0x10000
 534:	ldr	pc, [ip, #2796]!	; 0xaec

00000538 <__assert_fail@plt>:
 538:	add	ip, pc, #0, 12
 53c:	add	ip, ip, #16, 20	; 0x10000
 540:	ldr	pc, [ip, #2788]!	; 0xae4

00000544 <construct_umodebuf@plt>:
 544:	add	ip, pc, #0, 12
 548:	add	ip, ip, #16, 20	; 0x10000
 54c:	ldr	pc, [ip, #2780]!	; 0xadc

Disassembly of section .text:

00000550 <call_weak_fn>:
 550:	ldr	r3, [pc, #20]	; 56c <call_weak_fn+0x1c>
 554:	ldr	r2, [pc, #20]	; 570 <call_weak_fn+0x20>
 558:	add	r3, pc, r3
 55c:	ldr	r2, [r3, r2]
 560:	cmp	r2, #0
 564:	bxeq	lr
 568:	b	514 <__gmon_start__@plt>
 56c:	.word	0x00010aa0
 570:	.word	0x00000038

00000574 <deregister_tm_clones>:
 574:	ldr	r0, [pc, #44]	; 5a8 <deregister_tm_clones+0x34>
 578:	ldr	r3, [pc, #44]	; 5ac <deregister_tm_clones+0x38>
 57c:	add	r0, pc, r0
 580:	add	r3, pc, r3
 584:	cmp	r3, r0
 588:	ldr	r3, [pc, #32]	; 5b0 <deregister_tm_clones+0x3c>
 58c:	add	r3, pc, r3
 590:	bxeq	lr
 594:	ldr	r2, [pc, #24]	; 5b4 <deregister_tm_clones+0x40>
 598:	ldr	r3, [r3, r2]
 59c:	cmp	r3, #0
 5a0:	bxeq	lr
 5a4:	bx	r3
 5a8:	.word	0x00010b0c
 5ac:	.word	0x00010b08
 5b0:	.word	0x00010a6c
 5b4:	.word	0x00000030

000005b8 <register_tm_clones>:
 5b8:	ldr	r0, [pc, #56]	; 5f8 <register_tm_clones+0x40>
 5bc:	ldr	r3, [pc, #56]	; 5fc <register_tm_clones+0x44>
 5c0:	add	r0, pc, r0
 5c4:	add	r3, pc, r3
 5c8:	sub	r1, r3, r0
 5cc:	ldr	r3, [pc, #44]	; 600 <register_tm_clones+0x48>
 5d0:	asr	r1, r1, #2
 5d4:	add	r3, pc, r3
 5d8:	add	r1, r1, r1, lsr #31
 5dc:	asrs	r1, r1, #1
 5e0:	bxeq	lr
 5e4:	ldr	r2, [pc, #24]	; 604 <register_tm_clones+0x4c>
 5e8:	ldr	r3, [r3, r2]
 5ec:	cmp	r3, #0
 5f0:	bxeq	lr
 5f4:	bx	r3
 5f8:	.word	0x00010ac8
 5fc:	.word	0x00010ac4
 600:	.word	0x00010a24
 604:	.word	0x0000003c

00000608 <__do_global_dtors_aux>:
 608:	ldr	r3, [pc, #76]	; 65c <__do_global_dtors_aux+0x54>
 60c:	ldr	r2, [pc, #76]	; 660 <__do_global_dtors_aux+0x58>
 610:	add	r3, pc, r3
 614:	add	r2, pc, r2
 618:	ldrb	r3, [r3]
 61c:	cmp	r3, #0
 620:	bxne	lr
 624:	ldr	r3, [pc, #56]	; 664 <__do_global_dtors_aux+0x5c>
 628:	push	{r4, lr}
 62c:	ldr	r3, [r2, r3]
 630:	cmp	r3, #0
 634:	beq	644 <__do_global_dtors_aux+0x3c>
 638:	ldr	r3, [pc, #40]	; 668 <__do_global_dtors_aux+0x60>
 63c:	ldr	r0, [pc, r3]
 640:	bl	4f0 <__cxa_finalize@plt>
 644:	bl	574 <deregister_tm_clones>
 648:	ldr	r3, [pc, #28]	; 66c <__do_global_dtors_aux+0x64>
 64c:	mov	r2, #1
 650:	add	r3, pc, r3
 654:	strb	r2, [r3]
 658:	pop	{r4, pc}
 65c:	.word	0x00010a78
 660:	.word	0x000109e4
 664:	.word	0x0000002c
 668:	.word	0x000109fc
 66c:	.word	0x00010a38

00000670 <frame_dummy>:
 670:	b	5b8 <register_tm_clones>

00000674 <um_regonlymsg_modinit>:
 674:	push	{fp, lr}
 678:	mov	fp, sp
 67c:	sub	sp, sp, #8
 680:	bl	508 <find_umode_slot@plt>
 684:	ldr	r1, [pc, #76]	; 6d8 <um_regonlymsg_modinit+0x64>
 688:	ldr	r1, [pc, r1]
 68c:	str	r0, [r1, #328]	; 0x148
 690:	bl	544 <construct_umodebuf@plt>
 694:	ldr	r0, [pc, #56]	; 6d4 <um_regonlymsg_modinit+0x60>
 698:	ldr	r0, [pc, r0]
 69c:	ldr	r0, [r0, #328]	; 0x148
 6a0:	cmp	r0, #0
 6a4:	bne	6c0 <um_regonlymsg_modinit+0x4c>
 6a8:	ldr	r0, [pc, #44]	; 6dc <um_regonlymsg_modinit+0x68>
 6ac:	add	r0, pc, r0
 6b0:	bl	4fc <ierror@plt>
 6b4:	mvn	r0, #0
 6b8:	str	r0, [sp, #4]
 6bc:	b	6c8 <um_regonlymsg_modinit+0x54>
 6c0:	movw	r0, #0
 6c4:	str	r0, [sp, #4]
 6c8:	ldr	r0, [sp, #4]
 6cc:	mov	sp, fp
 6d0:	pop	{fp, pc}
 6d4:	.word	0x00010994
 6d8:	.word	0x000109a4
 6dc:	.word	0x0000042b

000006e0 <um_regonlymsg_moddeinit>:
 6e0:	push	{fp, lr}
 6e4:	mov	fp, sp
 6e8:	ldr	r0, [pc, #16]	; 700 <um_regonlymsg_moddeinit+0x20>
 6ec:	ldr	r0, [pc, r0]
 6f0:	movw	r1, #0
 6f4:	str	r1, [r0, #328]	; 0x148
 6f8:	bl	544 <construct_umodebuf@plt>
 6fc:	pop	{fp, pc}
 700:	.word	0x00010940

00000704 <h_hdl_invite>:
 704:	push	{fp, lr}
 708:	mov	fp, sp
 70c:	sub	sp, sp, #16
 710:	str	r0, [fp, #-4]
 714:	ldr	r0, [fp, #-4]
 718:	str	r0, [sp, #8]
 71c:	ldr	r0, [sp, #8]
 720:	ldr	r0, [r0]
 724:	str	r0, [sp, #4]
 728:	ldr	r0, [sp, #8]
 72c:	ldr	r0, [r0, #12]
 730:	str	r0, [sp]
 734:	ldr	r0, [sp, #8]
 738:	ldr	r0, [r0, #16]
 73c:	cmp	r0, #0
 740:	beq	748 <h_hdl_invite+0x44>
 744:	b	79c <h_hdl_invite+0x98>
 748:	ldr	r0, [sp, #4]
 74c:	ldr	r1, [sp]
 750:	bl	854 <allow_message>
 754:	tst	r0, #1
 758:	beq	760 <h_hdl_invite+0x5c>
 75c:	b	79c <h_hdl_invite+0x98>
 760:	ldr	r0, [pc, #64]	; 7a8 <h_hdl_invite+0xa4>
 764:	add	r0, pc, r0
 768:	ldr	r1, [pc, #60]	; 7ac <h_hdl_invite+0xa8>
 76c:	add	r2, pc, r1
 770:	ldr	r1, [sp]
 774:	add	r3, r1, #88	; 0x58
 778:	movw	r1, #512	; 0x200
 77c:	bl	52c <snprintf@plt>
 780:	ldr	r1, [pc, #28]	; 7a4 <h_hdl_invite+0xa0>
 784:	add	r1, pc, r1
 788:	ldr	r2, [sp, #8]
 78c:	movw	r3, #486	; 0x1e6
 790:	str	r3, [r2, #16]
 794:	ldr	r2, [sp, #8]
 798:	str	r1, [r2, #28]
 79c:	mov	sp, fp
 7a0:	pop	{fp, pc}
 7a4:	.word	0x00010905
 7a8:	.word	0x00010925
 7ac:	.word	0x000003c8

000007b0 <h_hdl_privmsg_user>:
 7b0:	push	{fp, lr}
 7b4:	mov	fp, sp
 7b8:	sub	sp, sp, #16
 7bc:	str	r0, [fp, #-4]
 7c0:	ldr	r0, [fp, #-4]
 7c4:	str	r0, [sp, #8]
 7c8:	ldr	r0, [sp, #8]
 7cc:	ldr	r0, [r0, #4]
 7d0:	str	r0, [sp, #4]
 7d4:	ldr	r0, [sp, #8]
 7d8:	ldr	r0, [r0, #8]
 7dc:	str	r0, [sp]
 7e0:	ldr	r0, [sp, #8]
 7e4:	ldr	r0, [r0, #16]
 7e8:	cmp	r0, #0
 7ec:	beq	7f4 <h_hdl_privmsg_user+0x44>
 7f0:	b	848 <h_hdl_privmsg_user+0x98>
 7f4:	ldr	r0, [sp, #4]
 7f8:	ldr	r1, [sp]
 7fc:	bl	854 <allow_message>
 800:	tst	r0, #1
 804:	beq	80c <h_hdl_privmsg_user+0x5c>
 808:	b	848 <h_hdl_privmsg_user+0x98>
 80c:	ldr	r0, [sp, #8]
 810:	ldr	r0, [r0]
 814:	cmp	r0, #0
 818:	bne	820 <h_hdl_privmsg_user+0x70>
 81c:	b	848 <h_hdl_privmsg_user+0x98>
 820:	ldr	r0, [pc, #40]	; 850 <h_hdl_privmsg_user+0xa0>
 824:	add	r2, pc, r0
 828:	ldr	r0, [sp, #4]
 82c:	ldr	r1, [sp]
 830:	add	r3, r1, #88	; 0x58
 834:	movw	r1, #486	; 0x1e6
 838:	bl	520 <sendto_one_numeric@plt>
 83c:	ldr	r0, [sp, #8]
 840:	movw	r1, #486	; 0x1e6
 844:	str	r1, [r0, #16]
 848:	mov	sp, fp
 84c:	pop	{fp, pc}
 850:	.word	0x00000310

00000854 <allow_message>:
 854:	push	{fp, lr}
 858:	mov	fp, sp
 85c:	sub	sp, sp, #16
 860:	str	r0, [sp, #8]
 864:	str	r1, [sp, #4]
 868:	ldr	r0, [sp, #4]
 86c:	ldrb	r0, [r0, #65]	; 0x41
 870:	tst	r0, #32
 874:	beq	88c <allow_message+0x38>
 878:	b	87c <allow_message+0x28>
 87c:	ldr	r0, [sp, #4]
 880:	ldrh	r0, [r0, #80]	; 0x50
 884:	cmp	r0, #64	; 0x40
 888:	beq	89c <allow_message+0x48>
 88c:	movw	r0, #1
 890:	and	r0, r0, #1
 894:	strb	r0, [fp, #-1]
 898:	b	984 <allow_message+0x130>
 89c:	ldr	r0, [pc, #240]	; 994 <allow_message+0x140>
 8a0:	ldr	r0, [pc, r0]
 8a4:	ldr	r1, [sp, #4]
 8a8:	ldr	r1, [r1, #56]	; 0x38
 8ac:	ldr	r2, [r0, #328]	; 0x148
 8b0:	and	r1, r1, r2
 8b4:	ldr	r0, [r0, #328]	; 0x148
 8b8:	cmp	r1, r0
 8bc:	beq	8d0 <allow_message+0x7c>
 8c0:	movw	r0, #1
 8c4:	and	r0, r0, #1
 8c8:	strb	r0, [fp, #-1]
 8cc:	b	984 <allow_message+0x130>
 8d0:	ldr	r0, [sp, #8]
 8d4:	ldrh	r0, [r0, #80]	; 0x50
 8d8:	cmp	r0, #32
 8dc:	bne	8f0 <allow_message+0x9c>
 8e0:	movw	r0, #1
 8e4:	and	r0, r0, #1
 8e8:	strb	r0, [fp, #-1]
 8ec:	b	984 <allow_message+0x130>
 8f0:	ldr	r0, [sp, #8]
 8f4:	ldr	r0, [r0, #56]	; 0x38
 8f8:	and	r0, r0, #4096	; 0x1000
 8fc:	cmp	r0, #0
 900:	beq	914 <allow_message+0xc0>
 904:	movw	r0, #1
 908:	and	r0, r0, #1
 90c:	strb	r0, [fp, #-1]
 910:	b	984 <allow_message+0x130>
 914:	ldr	r0, [sp, #8]
 918:	ldr	r1, [sp, #4]
 91c:	cmp	r0, r1
 920:	beq	944 <allow_message+0xf0>
 924:	ldr	r0, [sp, #8]
 928:	ldr	r1, [sp, #4]
 92c:	ldr	r1, [r1, #432]	; 0x1b0
 930:	add	r1, r1, #316	; 0x13c
 934:	bl	998 <rb_dlinkFind>
 938:	movw	r1, #0
 93c:	cmp	r0, r1
 940:	beq	954 <allow_message+0x100>
 944:	movw	r0, #1
 948:	and	r0, r0, #1
 94c:	strb	r0, [fp, #-1]
 950:	b	984 <allow_message+0x130>
 954:	ldr	r0, [sp, #8]
 958:	ldr	r0, [r0, #24]
 95c:	ldrsb	r0, [r0, #40]	; 0x28
 960:	cmp	r0, #0
 964:	beq	978 <allow_message+0x124>
 968:	movw	r0, #1
 96c:	and	r0, r0, #1
 970:	strb	r0, [fp, #-1]
 974:	b	984 <allow_message+0x130>
 978:	movw	r0, #0
 97c:	and	r0, r0, #1
 980:	strb	r0, [fp, #-1]
 984:	ldrb	r0, [fp, #-1]
 988:	and	r0, r0, #1
 98c:	mov	sp, fp
 990:	pop	{fp, pc}
 994:	.word	0x0001078c

00000998 <rb_dlinkFind>:
 998:	push	{fp, lr}
 99c:	mov	fp, sp
 9a0:	sub	sp, sp, #16
 9a4:	str	r0, [sp, #8]
 9a8:	str	r1, [sp, #4]
 9ac:	ldr	r0, [sp, #4]
 9b0:	movw	r1, #0
 9b4:	cmp	r0, r1
 9b8:	beq	9c0 <rb_dlinkFind+0x28>
 9bc:	b	9e0 <rb_dlinkFind+0x48>
 9c0:	ldr	r0, [pc, #176]	; a78 <rb_dlinkFind+0xe0>
 9c4:	add	r0, pc, r0
 9c8:	ldr	r1, [pc, #172]	; a7c <rb_dlinkFind+0xe4>
 9cc:	add	r1, pc, r1
 9d0:	ldr	r2, [pc, #168]	; a80 <rb_dlinkFind+0xe8>
 9d4:	add	r3, pc, r2
 9d8:	movw	r2, #310	; 0x136
 9dc:	bl	538 <__assert_fail@plt>
 9e0:	ldr	r0, [sp, #8]
 9e4:	movw	r1, #0
 9e8:	cmp	r0, r1
 9ec:	beq	9f4 <rb_dlinkFind+0x5c>
 9f0:	b	a14 <rb_dlinkFind+0x7c>
 9f4:	ldr	r0, [pc, #136]	; a84 <rb_dlinkFind+0xec>
 9f8:	add	r0, pc, r0
 9fc:	ldr	r1, [pc, #132]	; a88 <rb_dlinkFind+0xf0>
 a00:	add	r1, pc, r1
 a04:	ldr	r2, [pc, #128]	; a8c <rb_dlinkFind+0xf4>
 a08:	add	r3, pc, r2
 a0c:	movw	r2, #311	; 0x137
 a10:	bl	538 <__assert_fail@plt>
 a14:	ldr	r0, [sp, #4]
 a18:	ldr	r0, [r0]
 a1c:	str	r0, [sp]
 a20:	ldr	r0, [sp]
 a24:	movw	r1, #0
 a28:	cmp	r0, r1
 a2c:	beq	a64 <rb_dlinkFind+0xcc>
 a30:	ldr	r0, [sp]
 a34:	ldr	r0, [r0]
 a38:	ldr	r1, [sp, #8]
 a3c:	cmp	r0, r1
 a40:	bne	a50 <rb_dlinkFind+0xb8>
 a44:	ldr	r0, [sp]
 a48:	str	r0, [fp, #-4]
 a4c:	b	a6c <rb_dlinkFind+0xd4>
 a50:	b	a54 <rb_dlinkFind+0xbc>
 a54:	ldr	r0, [sp]
 a58:	ldr	r0, [r0, #8]
 a5c:	str	r0, [sp]
 a60:	b	a20 <rb_dlinkFind+0x88>
 a64:	movw	r0, #0
 a68:	str	r0, [fp, #-4]
 a6c:	ldr	r0, [fp, #-4]
 a70:	mov	sp, fp
 a74:	pop	{fp, pc}
 a78:	.word	0x000001a7
 a7c:	.word	0x000001ac
 a80:	.word	0x000001c0
 a84:	.word	0x000001d1
 a88:	.word	0x00000178
 a8c:	.word	0x0000018c

Disassembly of section .fini:

00000a90 <_fini>:
 a90:	push	{r3, lr}
 a94:	pop	{r3, pc}
