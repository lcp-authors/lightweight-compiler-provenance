
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0001107c <.init>:
   1107c:	push	{r3, lr}
   11080:	bl	1244c <mythread_init@plt+0xc>
   11084:	pop	{r3, pc}

Disassembly of section .plt:

00011088 <pthread_mutex_unlock@plt-0x14>:
   11088:	push	{lr}		; (str lr, [sp, #-4]!)
   1108c:	ldr	lr, [pc, #4]	; 11098 <pthread_mutex_unlock@plt-0x4>
   11090:	add	lr, pc, lr
   11094:	ldr	pc, [lr, #8]!
   11098:	andseq	r4, r0, r8, ror #30

0001109c <pthread_mutex_unlock@plt>:
   1109c:	add	ip, pc, #1048576	; 0x100000
   110a0:	add	ip, ip, #4, 20	; 0x4000
   110a4:	ldr	pc, [ip, #3944]!	; 0xf68

000110a8 <myhtml_get_nodes_by_attribute_value_recursion@plt>:
   110a8:	add	ip, pc, #1048576	; 0x100000
   110ac:	add	ip, ip, #4, 20	; 0x4000
   110b0:	ldr	pc, [ip, #3936]!	; 0xf60

000110b4 <mycore_realloc@plt>:
   110b4:	add	ip, pc, #1048576	; 0x100000
   110b8:	add	ip, ip, #4, 20	; 0x4000
   110bc:	ldr	pc, [ip, #3928]!	; 0xf58

000110c0 <calloc@plt>:
   110c0:	add	ip, pc, #1048576	; 0x100000
   110c4:	add	ip, ip, #4, 20	; 0x4000
   110c8:	ldr	pc, [ip, #3920]!	; 0xf50

000110cc <mycore_strcmp@plt>:
   110cc:	add	ip, pc, #1048576	; 0x100000
   110d0:	add	ip, ip, #4, 20	; 0x4000
   110d4:	ldr	pc, [ip, #3912]!	; 0xf48

000110d8 <myhtml_tree_node_insert_root@plt>:
   110d8:	add	ip, pc, #1048576	; 0x100000
   110dc:	add	ip, ip, #4, 20	; 0x4000
   110e0:	ldr	pc, [ip, #3904]!	; 0xf40

000110e4 <mythread_queue_list_entry_delete@plt>:
   110e4:	add	ip, pc, #1048576	; 0x100000
   110e8:	add	ip, ip, #4, 20	; 0x4000
   110ec:	ldr	pc, [ip, #3896]!	; 0xf38

000110f0 <myencoding_string_append_chunk@plt>:
   110f0:	add	ip, pc, #1048576	; 0x100000
   110f4:	add	ip, ip, #4, 20	; 0x4000
   110f8:	ldr	pc, [ip, #3888]!	; 0xf30

000110fc <myhtml_token_release_and_check_doctype_attributes@plt>:
   110fc:	add	ip, pc, #1048576	; 0x100000
   11100:	add	ip, ip, #4, 20	; 0x4000
   11104:	ldr	pc, [ip, #3880]!	; 0xf28

00011108 <myhtml_token_doctype_check_xhtml_1_1@plt>:
   11108:	add	ip, pc, #1048576	; 0x100000
   1110c:	add	ip, ip, #4, 20	; 0x4000
   11110:	ldr	pc, [ip, #3872]!	; 0xf20

00011114 <myencoding_detect_unicode@plt>:
   11114:	add	ip, pc, #1048576	; 0x100000
   11118:	add	ip, ip, #4, 20	; 0x4000
   1111c:	ldr	pc, [ip, #3864]!	; 0xf18

00011120 <myhtml_tree_element_in_scope_by_node@plt>:
   11120:	add	ip, pc, #1048576	; 0x100000
   11124:	add	ip, ip, #4, 20	; 0x4000
   11128:	ldr	pc, [ip, #3856]!	; 0xf10

0001112c <mythread_nanosleep_clean@plt>:
   1112c:	add	ip, pc, #1048576	; 0x100000
   11130:	add	ip, ip, #4, 20	; 0x4000
   11134:	ldr	pc, [ip, #3848]!	; 0xf08

00011138 <myhtml_tree_node_insert_html_element@plt>:
   11138:	add	ip, pc, #1048576	; 0x100000
   1113c:	add	ip, ip, #4, 20	; 0x4000
   11140:	ldr	pc, [ip, #3840]!	; 0xf00

00011144 <myhtml_tree_token_list_destroy@plt>:
   11144:	add	ip, pc, #1048576	; 0x100000
   11148:	add	ip, ip, #4, 20	; 0x4000
   1114c:	ldr	pc, [ip, #3832]!	; 0xef8

00011150 <mcobject_async_init@plt>:
   11150:	add	ip, pc, #1048576	; 0x100000
   11154:	add	ip, ip, #4, 20	; 0x4000
   11158:	ldr	pc, [ip, #3824]!	; 0xef0

0001115c <myhtml_tree_temp_tag_name_append@plt>:
   1115c:	add	ip, pc, #1048576	; 0x100000
   11160:	add	ip, ip, #4, 20	; 0x4000
   11164:	ldr	pc, [ip, #3816]!	; 0xee8

00011168 <myhtml_tokenizer_fragment_init@plt>:
   11168:	add	ip, pc, #1048576	; 0x100000
   1116c:	add	ip, ip, #4, 20	; 0x4000
   11170:	ldr	pc, [ip, #3808]!	; 0xee0

00011174 <mythread_nanosleep_create@plt>:
   11174:	add	ip, pc, #1048576	; 0x100000
   11178:	add	ip, ip, #4, 20	; 0x4000
   1117c:	ldr	pc, [ip, #3800]!	; 0xed8

00011180 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
   11180:	add	ip, pc, #1048576	; 0x100000
   11184:	add	ip, ip, #4, 20	; 0x4000
   11188:	ldr	pc, [ip, #3792]!	; 0xed0

0001118c <myhtml_tokenizer_state_init@plt>:
   1118c:	add	ip, pc, #1048576	; 0x100000
   11190:	add	ip, ip, #4, 20	; 0x4000
   11194:	ldr	pc, [ip, #3784]!	; 0xec8

00011198 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
   11198:	add	ip, pc, #1048576	; 0x100000
   1119c:	add	ip, ip, #4, 20	; 0x4000
   111a0:	ldr	pc, [ip, #3776]!	; 0xec0

000111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
   111a4:	add	ip, pc, #1048576	; 0x100000
   111a8:	add	ip, ip, #4, 20	; 0x4000
   111ac:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b0 <myhtml_tree_wait_for_last_done_token@plt>:
   111b0:	add	ip, pc, #1048576	; 0x100000
   111b4:	add	ip, ip, #4, 20	; 0x4000
   111b8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111bc <mythread_queue_get_prev_node@plt>:
   111bc:	add	ip, pc, #1048576	; 0x100000
   111c0:	add	ip, ip, #4, 20	; 0x4000
   111c4:	ldr	pc, [ip, #3752]!	; 0xea8

000111c8 <setbuf@plt>:
   111c8:	add	ip, pc, #1048576	; 0x100000
   111cc:	add	ip, ip, #4, 20	; 0x4000
   111d0:	ldr	pc, [ip, #3744]!	; 0xea0

000111d4 <mycore_utils_avl_tree_find_min@plt>:
   111d4:	add	ip, pc, #1048576	; 0x100000
   111d8:	add	ip, ip, #4, 20	; 0x4000
   111dc:	ldr	pc, [ip, #3736]!	; 0xe98

000111e0 <myhtml_insertion_mode_in_body_other_end_tag@plt>:
   111e0:	add	ip, pc, #1048576	; 0x100000
   111e4:	add	ip, ip, #4, 20	; 0x4000
   111e8:	ldr	pc, [ip, #3728]!	; 0xe90

000111ec <myhtml_stream_buffer_destroy@plt>:
   111ec:	add	ip, pc, #1048576	; 0x100000
   111f0:	add	ip, ip, #4, 20	; 0x4000
   111f4:	ldr	pc, [ip, #3720]!	; 0xe88

000111f8 <myhtml_token_attr_match_case@plt>:
   111f8:	add	ip, pc, #1048576	; 0x100000
   111fc:	add	ip, ip, #4, 20	; 0x4000
   11200:	ldr	pc, [ip, #3712]!	; 0xe80

00011204 <__cxa_finalize@plt>:
   11204:	add	ip, pc, #1048576	; 0x100000
   11208:	add	ip, ip, #4, 20	; 0x4000
   1120c:	ldr	pc, [ip, #3704]!	; 0xe78

00011210 <mycore_utils_avl_tree_node_rotate_right@plt>:
   11210:	add	ip, pc, #1048576	; 0x100000
   11214:	add	ip, ip, #4, 20	; 0x4000
   11218:	ldr	pc, [ip, #3696]!	; 0xe70

0001121c <mcobject_async_create@plt>:
   1121c:	add	ip, pc, #1048576	; 0x100000
   11220:	add	ip, ip, #4, 20	; 0x4000
   11224:	ldr	pc, [ip, #3688]!	; 0xe68

00011228 <mythread_queue_clean@plt>:
   11228:	add	ip, pc, #1048576	; 0x100000
   1122c:	add	ip, ip, #4, 20	; 0x4000
   11230:	ldr	pc, [ip, #3680]!	; 0xe60

00011234 <mcsync_mutex_destroy@plt>:
   11234:	add	ip, pc, #1048576	; 0x100000
   11238:	add	ip, ip, #4, 20	; 0x4000
   1123c:	ldr	pc, [ip, #3672]!	; 0xe58

00011240 <myhtml_parser_worker@plt>:
   11240:	add	ip, pc, #1048576	; 0x100000
   11244:	add	ip, ip, #4, 20	; 0x4000
   11248:	ldr	pc, [ip, #3664]!	; 0xe50

0001124c <mythread_thread_create@plt>:
   1124c:	add	ip, pc, #1048576	; 0x100000
   11250:	add	ip, ip, #4, 20	; 0x4000
   11254:	ldr	pc, [ip, #3656]!	; 0xe48

00011258 <mcsync_create@plt>:
   11258:	add	ip, pc, #1048576	; 0x100000
   1125c:	add	ip, ip, #4, 20	; 0x4000
   11260:	ldr	pc, [ip, #3648]!	; 0xe40

00011264 <mycore_utils_avl_tree_node_balance_factor@plt>:
   11264:	add	ip, pc, #1048576	; 0x100000
   11268:	add	ip, ip, #4, 20	; 0x4000
   1126c:	ldr	pc, [ip, #3640]!	; 0xe38

00011270 <fopen@plt>:
   11270:	add	ip, pc, #1048576	; 0x100000
   11274:	add	ip, ip, #4, 20	; 0x4000
   11278:	ldr	pc, [ip, #3632]!	; 0xe30

0001127c <mcobject_async_mem_malloc@plt>:
   1127c:	add	ip, pc, #1048576	; 0x100000
   11280:	add	ip, ip, #4, 20	; 0x4000
   11284:	ldr	pc, [ip, #3624]!	; 0xe28

00011288 <mcobject_destroy@plt>:
   11288:	add	ip, pc, #1048576	; 0x100000
   1128c:	add	ip, ip, #4, 20	; 0x4000
   11290:	ldr	pc, [ip, #3616]!	; 0xe20

00011294 <pthread_attr_destroy@plt>:
   11294:	add	ip, pc, #1048576	; 0x100000
   11298:	add	ip, ip, #4, 20	; 0x4000
   1129c:	ldr	pc, [ip, #3608]!	; 0xe18

000112a0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
   112a0:	add	ip, pc, #1048576	; 0x100000
   112a4:	add	ip, ip, #4, 20	; 0x4000
   112a8:	ldr	pc, [ip, #3600]!	; 0xe10

000112ac <pthread_mutex_destroy@plt>:
   112ac:	add	ip, pc, #1048576	; 0x100000
   112b0:	add	ip, ip, #4, 20	; 0x4000
   112b4:	ldr	pc, [ip, #3592]!	; 0xe08

000112b8 <fflush@plt>:
   112b8:	add	ip, pc, #1048576	; 0x100000
   112bc:	add	ip, ip, #4, 20	; 0x4000
   112c0:	ldr	pc, [ip, #3584]!	; 0xe00

000112c4 <mythread_create@plt>:
   112c4:	add	ip, pc, #1048576	; 0x100000
   112c8:	add	ip, ip, #4, 20	; 0x4000
   112cc:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d0 <myhtml_insertion_mode_in_foreign_content@plt>:
   112d0:	add	ip, pc, #1048576	; 0x100000
   112d4:	add	ip, ip, #4, 20	; 0x4000
   112d8:	ldr	pc, [ip, #3568]!	; 0xdf0

000112dc <myhtml_tree_generate_all_implied_end_tags@plt>:
   112dc:	add	ip, pc, #1048576	; 0x100000
   112e0:	add	ip, ip, #4, 20	; 0x4000
   112e4:	ldr	pc, [ip, #3560]!	; 0xde8

000112e8 <myencoding_string_append_lowercase_ascii@plt>:
   112e8:	add	ip, pc, #1048576	; 0x100000
   112ec:	add	ip, ip, #4, 20	; 0x4000
   112f0:	ldr	pc, [ip, #3552]!	; 0xde0

000112f4 <myhread_increase_id_by_entry_id@plt>:
   112f4:	add	ip, pc, #1048576	; 0x100000
   112f8:	add	ip, ip, #4, 20	; 0x4000
   112fc:	ldr	pc, [ip, #3544]!	; 0xdd8

00011300 <myhtml_tree_incomming_buffer_make_data@plt>:
   11300:	add	ip, pc, #1048576	; 0x100000
   11304:	add	ip, ip, #4, 20	; 0x4000
   11308:	ldr	pc, [ip, #3536]!	; 0xdd0

0001130c <_myhtml_token_create_copy_srt@plt>:
   1130c:	add	ip, pc, #1048576	; 0x100000
   11310:	add	ip, ip, #4, 20	; 0x4000
   11314:	ldr	pc, [ip, #3528]!	; 0xdc8

00011318 <memmove@plt>:
   11318:	add	ip, pc, #1048576	; 0x100000
   1131c:	add	ip, ip, #4, 20	; 0x4000
   11320:	ldr	pc, [ip, #3520]!	; 0xdc0

00011324 <mythread_thread_attr_init@plt>:
   11324:	add	ip, pc, #1048576	; 0x100000
   11328:	add	ip, ip, #4, 20	; 0x4000
   1132c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011330 <myhtml_rules_tree_dispatcher@plt>:
   11330:	add	ip, pc, #1048576	; 0x100000
   11334:	add	ip, ip, #4, 20	; 0x4000
   11338:	ldr	pc, [ip, #3504]!	; 0xdb0

0001133c <myhtml_get_nodes_by_attribute_key_recursion@plt>:
   1133c:	add	ip, pc, #1048576	; 0x100000
   11340:	add	ip, ip, #4, 20	; 0x4000
   11344:	ldr	pc, [ip, #3496]!	; 0xda8

00011348 <free@plt>:
   11348:	add	ip, pc, #1048576	; 0x100000
   1134c:	add	ip, ip, #4, 20	; 0x4000
   11350:	ldr	pc, [ip, #3488]!	; 0xda0

00011354 <mchar_async_cache_malloc@plt>:
   11354:	add	ip, pc, #1048576	; 0x100000
   11358:	add	ip, ip, #4, 20	; 0x4000
   1135c:	ldr	pc, [ip, #3480]!	; 0xd98

00011360 <mythread_function_see_opt@plt>:
   11360:	add	ip, pc, #1048576	; 0x100000
   11364:	add	ip, ip, #4, 20	; 0x4000
   11368:	ldr	pc, [ip, #3472]!	; 0xd90

0001136c <myencoding_detect_utf_16@plt>:
   1136c:	add	ip, pc, #1048576	; 0x100000
   11370:	add	ip, ip, #4, 20	; 0x4000
   11374:	ldr	pc, [ip, #3464]!	; 0xd88

00011378 <mcobject_chunk_malloc@plt>:
   11378:	add	ip, pc, #1048576	; 0x100000
   1137c:	add	ip, ip, #4, 20	; 0x4000
   11380:	ldr	pc, [ip, #3456]!	; 0xd80

00011384 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
   11384:	add	ip, pc, #1048576	; 0x100000
   11388:	add	ip, ip, #4, 20	; 0x4000
   1138c:	ldr	pc, [ip, #3448]!	; 0xd78

00011390 <mcsync_mutex_unlock@plt>:
   11390:	add	ip, pc, #1048576	; 0x100000
   11394:	add	ip, ip, #4, 20	; 0x4000
   11398:	ldr	pc, [ip, #3440]!	; 0xd70

0001139c <pthread_mutex_lock@plt>:
   1139c:	add	ip, pc, #1048576	; 0x100000
   113a0:	add	ip, ip, #4, 20	; 0x4000
   113a4:	ldr	pc, [ip, #3432]!	; 0xd68

000113a8 <mycore_calloc@plt>:
   113a8:	add	ip, pc, #1048576	; 0x100000
   113ac:	add	ip, ip, #4, 20	; 0x4000
   113b0:	ldr	pc, [ip, #3424]!	; 0xd60

000113b4 <nanosleep@plt>:
   113b4:	add	ip, pc, #1048576	; 0x100000
   113b8:	add	ip, ip, #4, 20	; 0x4000
   113bc:	ldr	pc, [ip, #3416]!	; 0xd58

000113c0 <myhtml_token_node_clone@plt>:
   113c0:	add	ip, pc, #1048576	; 0x100000
   113c4:	add	ip, ip, #4, 20	; 0x4000
   113c8:	ldr	pc, [ip, #3408]!	; 0xd50

000113cc <myhtml_get_nodes_by_tag_id_in_scope@plt>:
   113cc:	add	ip, pc, #1048576	; 0x100000
   113d0:	add	ip, ip, #4, 20	; 0x4000
   113d4:	ldr	pc, [ip, #3400]!	; 0xd48

000113d8 <mchar_sync_chunk_insert_after@plt>:
   113d8:	add	ip, pc, #1048576	; 0x100000
   113dc:	add	ip, ip, #4, 20	; 0x4000
   113e0:	ldr	pc, [ip, #3392]!	; 0xd40

000113e4 <ferror@plt>:
   113e4:	add	ip, pc, #1048576	; 0x100000
   113e8:	add	ip, ip, #4, 20	; 0x4000
   113ec:	ldr	pc, [ip, #3384]!	; 0xd38

000113f0 <memcpy@plt>:
   113f0:	add	ip, pc, #1048576	; 0x100000
   113f4:	add	ip, ip, #4, 20	; 0x4000
   113f8:	ldr	pc, [ip, #3376]!	; 0xd30

000113fc <myencoding_name_entry_by_name@plt>:
   113fc:	add	ip, pc, #1048576	; 0x100000
   11400:	add	ip, ip, #4, 20	; 0x4000
   11404:	ldr	pc, [ip, #3368]!	; 0xd28

00011408 <myhtml_token_adjust_mathml_attributes@plt>:
   11408:	add	ip, pc, #1048576	; 0x100000
   1140c:	add	ip, ip, #4, 20	; 0x4000
   11410:	ldr	pc, [ip, #3360]!	; 0xd20

00011414 <mcobject_free@plt>:
   11414:	add	ip, pc, #1048576	; 0x100000
   11418:	add	ip, ip, #4, 20	; 0x4000
   1141c:	ldr	pc, [ip, #3352]!	; 0xd18

00011420 <myhtml_tree_node_insert_text@plt>:
   11420:	add	ip, pc, #1048576	; 0x100000
   11424:	add	ip, ip, #4, 20	; 0x4000
   11428:	ldr	pc, [ip, #3344]!	; 0xd10

0001142c <myhtml_tag_set_category@plt>:
   1142c:	add	ip, pc, #1048576	; 0x100000
   11430:	add	ip, ip, #4, 20	; 0x4000
   11434:	ldr	pc, [ip, #3336]!	; 0xd08

00011438 <mcsync_spin_destroy@plt>:
   11438:	add	ip, pc, #1048576	; 0x100000
   1143c:	add	ip, ip, #4, 20	; 0x4000
   11440:	ldr	pc, [ip, #3328]!	; 0xd00

00011444 <myhtml_tree_template_insertion_append@plt>:
   11444:	add	ip, pc, #1048576	; 0x100000
   11448:	add	ip, ip, #4, 20	; 0x4000
   1144c:	ldr	pc, [ip, #3320]!	; 0xcf8

00011450 <mchar_async_realloc@plt>:
   11450:	add	ip, pc, #1048576	; 0x100000
   11454:	add	ip, ip, #4, 20	; 0x4000
   11458:	ldr	pc, [ip, #3312]!	; 0xcf0

0001145c <pthread_mutex_init@plt>:
   1145c:	add	ip, pc, #1048576	; 0x100000
   11460:	add	ip, ip, #4, 20	; 0x4000
   11464:	ldr	pc, [ip, #3304]!	; 0xce8

00011468 <myhtml_tokenizer_state_bogus_comment@plt>:
   11468:	add	ip, pc, #1048576	; 0x100000
   1146c:	add	ip, ip, #4, 20	; 0x4000
   11470:	ldr	pc, [ip, #3296]!	; 0xce0

00011474 <myhtml_tree_node_create@plt>:
   11474:	add	ip, pc, #1048576	; 0x100000
   11478:	add	ip, ip, #4, 20	; 0x4000
   1147c:	ldr	pc, [ip, #3288]!	; 0xcd8

00011480 <myhtml_tree_node_delete_recursive@plt>:
   11480:	add	ip, pc, #1048576	; 0x100000
   11484:	add	ip, ip, #4, 20	; 0x4000
   11488:	ldr	pc, [ip, #3280]!	; 0xcd0

0001148c <myhtml_tag_static_get_by_id@plt>:
   1148c:	add	ip, pc, #1048576	; 0x100000
   11490:	add	ip, ip, #4, 20	; 0x4000
   11494:	ldr	pc, [ip, #3272]!	; 0xcc8

00011498 <myhtml_token_attr_clean@plt>:
   11498:	add	ip, pc, #1048576	; 0x100000
   1149c:	add	ip, ip, #4, 20	; 0x4000
   114a0:	ldr	pc, [ip, #3264]!	; 0xcc0

000114a4 <myhtml_tag_add@plt>:
   114a4:	add	ip, pc, #1048576	; 0x100000
   114a8:	add	ip, ip, #4, 20	; 0x4000
   114ac:	ldr	pc, [ip, #3256]!	; 0xcb8

000114b0 <mcobject_create@plt>:
   114b0:	add	ip, pc, #1048576	; 0x100000
   114b4:	add	ip, ip, #4, 20	; 0x4000
   114b8:	ldr	pc, [ip, #3248]!	; 0xcb0

000114bc <myhtml_queue_add@plt>:
   114bc:	add	ip, pc, #1048576	; 0x100000
   114c0:	add	ip, ip, #4, 20	; 0x4000
   114c4:	ldr	pc, [ip, #3240]!	; 0xca8

000114c8 <pthread_mutex_trylock@plt>:
   114c8:	add	ip, pc, #1048576	; 0x100000
   114cc:	add	ip, ip, #4, 20	; 0x4000
   114d0:	ldr	pc, [ip, #3232]!	; 0xca0

000114d4 <myhtml_tree_is_mathml_integration_point@plt>:
   114d4:	add	ip, pc, #1048576	; 0x100000
   114d8:	add	ip, ip, #4, 20	; 0x4000
   114dc:	ldr	pc, [ip, #3224]!	; 0xc98

000114e0 <mcobject_async_free@plt>:
   114e0:	add	ip, pc, #1048576	; 0x100000
   114e4:	add	ip, ip, #4, 20	; 0x4000
   114e8:	ldr	pc, [ip, #3216]!	; 0xc90

000114ec <myhtml_insertion_mode_in_head@plt>:
   114ec:	add	ip, pc, #1048576	; 0x100000
   114f0:	add	ip, ip, #4, 20	; 0x4000
   114f4:	ldr	pc, [ip, #3208]!	; 0xc88

000114f8 <ftell@plt>:
   114f8:	add	ip, pc, #1048576	; 0x100000
   114fc:	add	ip, ip, #4, 20	; 0x4000
   11500:	ldr	pc, [ip, #3200]!	; 0xc80

00011504 <memcmp@plt>:
   11504:	add	ip, pc, #1048576	; 0x100000
   11508:	add	ip, ip, #4, 20	; 0x4000
   1150c:	ldr	pc, [ip, #3192]!	; 0xc78

00011510 <mycore_utils_mhash_hash@plt>:
   11510:	add	ip, pc, #1048576	; 0x100000
   11514:	add	ip, ip, #4, 20	; 0x4000
   11518:	ldr	pc, [ip, #3184]!	; 0xc70

0001151c <mycore_incoming_buffer_add@plt>:
   1151c:	add	ip, pc, #1048576	; 0x100000
   11520:	add	ip, ip, #4, 20	; 0x4000
   11524:	ldr	pc, [ip, #3176]!	; 0xc68

00011528 <mythread_nanosleep_sleep@plt>:
   11528:	add	ip, pc, #1048576	; 0x100000
   1152c:	add	ip, ip, #4, 20	; 0x4000
   11530:	ldr	pc, [ip, #3168]!	; 0xc60

00011534 <mctree_insert_before@plt>:
   11534:	add	ip, pc, #1048576	; 0x100000
   11538:	add	ip, ip, #4, 20	; 0x4000
   1153c:	ldr	pc, [ip, #3160]!	; 0xc58

00011540 <mctree_destroy@plt>:
   11540:	add	ip, pc, #1048576	; 0x100000
   11544:	add	ip, ip, #4, 20	; 0x4000
   11548:	ldr	pc, [ip, #3152]!	; 0xc50

0001154c <myhtml_tokenizer_chunk@plt>:
   1154c:	add	ip, pc, #1048576	; 0x100000
   11550:	add	ip, ip, #4, 20	; 0x4000
   11554:	ldr	pc, [ip, #3144]!	; 0xc48

00011558 <myhtml_tree_active_formatting_append@plt>:
   11558:	add	ip, pc, #1048576	; 0x100000
   1155c:	add	ip, ip, #4, 20	; 0x4000
   11560:	ldr	pc, [ip, #3136]!	; 0xc40

00011564 <myhtml_tree_active_formatting_destroy@plt>:
   11564:	add	ip, pc, #1048576	; 0x100000
   11568:	add	ip, ip, #4, 20	; 0x4000
   1156c:	ldr	pc, [ip, #3128]!	; 0xc38

00011570 <mythread_suspend@plt>:
   11570:	add	ip, pc, #1048576	; 0x100000
   11574:	add	ip, ip, #4, 20	; 0x4000
   11578:	ldr	pc, [ip, #3120]!	; 0xc30

0001157c <myhtml_tokenizer_state_destroy@plt>:
   1157c:	add	ip, pc, #1048576	; 0x100000
   11580:	add	ip, ip, #4, 20	; 0x4000
   11584:	ldr	pc, [ip, #3112]!	; 0xc28

00011588 <mycore_incoming_buffer_find_by_position@plt>:
   11588:	add	ip, pc, #1048576	; 0x100000
   1158c:	add	ip, ip, #4, 20	; 0x4000
   11590:	ldr	pc, [ip, #3104]!	; 0xc20

00011594 <mcobject_async_chunk_malloc@plt>:
   11594:	add	ip, pc, #1048576	; 0x100000
   11598:	add	ip, ip, #4, 20	; 0x4000
   1159c:	ldr	pc, [ip, #3096]!	; 0xc18

000115a0 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   115a0:	add	ip, pc, #1048576	; 0x100000
   115a4:	add	ip, ip, #4, 20	; 0x4000
   115a8:	ldr	pc, [ip, #3088]!	; 0xc10

000115ac <myhtml_tree_active_formatting_find@plt>:
   115ac:	add	ip, pc, #1048576	; 0x100000
   115b0:	add	ip, ip, #4, 20	; 0x4000
   115b4:	ldr	pc, [ip, #3080]!	; 0xc08

000115b8 <mythread_queue_list_destroy@plt>:
   115b8:	add	ip, pc, #1048576	; 0x100000
   115bc:	add	ip, ip, #4, 20	; 0x4000
   115c0:	ldr	pc, [ip, #3072]!	; 0xc00

000115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>:
   115c4:	add	ip, pc, #1048576	; 0x100000
   115c8:	add	ip, ip, #4, 20	; 0x4000
   115cc:	ldr	pc, [ip, #3064]!	; 0xbf8

000115d0 <myhtml_stream_buffer_entry_destroy@plt>:
   115d0:	add	ip, pc, #1048576	; 0x100000
   115d4:	add	ip, ip, #4, 20	; 0x4000
   115d8:	ldr	pc, [ip, #3056]!	; 0xbf0

000115dc <myhtml_tokenizer_begin@plt>:
   115dc:	add	ip, pc, #1048576	; 0x100000
   115e0:	add	ip, ip, #4, 20	; 0x4000
   115e4:	ldr	pc, [ip, #3048]!	; 0xbe8

000115e8 <mchar_async_create@plt>:
   115e8:	add	ip, pc, #1048576	; 0x100000
   115ec:	add	ip, ip, #4, 20	; 0x4000
   115f0:	ldr	pc, [ip, #3040]!	; 0xbe0

000115f4 <mycore_string_copy@plt>:
   115f4:	add	ip, pc, #1048576	; 0x100000
   115f8:	add	ip, ip, #4, 20	; 0x4000
   115fc:	ldr	pc, [ip, #3032]!	; 0xbd8

00011600 <mythread_queue_list_entry_push@plt>:
   11600:	add	ip, pc, #1048576	; 0x100000
   11604:	add	ip, ip, #4, 20	; 0x4000
   11608:	ldr	pc, [ip, #3024]!	; 0xbd0

0001160c <mythread_queue_get_current_node@plt>:
   1160c:	add	ip, pc, #1048576	; 0x100000
   11610:	add	ip, ip, #4, 20	; 0x4000
   11614:	ldr	pc, [ip, #3016]!	; 0xbc8

00011618 <mcobject_async_chunk_up@plt>:
   11618:	add	ip, pc, #1048576	; 0x100000
   1161c:	add	ip, ip, #4, 20	; 0x4000
   11620:	ldr	pc, [ip, #3008]!	; 0xbc0

00011624 <myhtml_tree_open_elements_pop@plt>:
   11624:	add	ip, pc, #1048576	; 0x100000
   11628:	add	ip, ip, #4, 20	; 0x4000
   1162c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011630 <mcsync_destroy@plt>:
   11630:	add	ip, pc, #1048576	; 0x100000
   11634:	add	ip, ip, #4, 20	; 0x4000
   11638:	ldr	pc, [ip, #2992]!	; 0xbb0

0001163c <myencoding_result_clean@plt>:
   1163c:	add	ip, pc, #1048576	; 0x100000
   11640:	add	ip, ip, #4, 20	; 0x4000
   11644:	ldr	pc, [ip, #2984]!	; 0xba8

00011648 <myhtml_string_append_with_preprocessing@plt>:
   11648:	add	ip, pc, #1048576	; 0x100000
   1164c:	add	ip, ip, #4, 20	; 0x4000
   11650:	ldr	pc, [ip, #2976]!	; 0xba0

00011654 <myhtml_token_adjust_svg_attributes@plt>:
   11654:	add	ip, pc, #1048576	; 0x100000
   11658:	add	ip, ip, #4, 20	; 0x4000
   1165c:	ldr	pc, [ip, #2968]!	; 0xb98

00011660 <realloc@plt>:
   11660:	add	ip, pc, #1048576	; 0x100000
   11664:	add	ip, ip, #4, 20	; 0x4000
   11668:	ldr	pc, [ip, #2960]!	; 0xb90

0001166c <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   1166c:	add	ip, pc, #1048576	; 0x100000
   11670:	add	ip, ip, #4, 20	; 0x4000
   11674:	ldr	pc, [ip, #2952]!	; 0xb88

00011678 <myhtml_tree_is_html_integration_point@plt>:
   11678:	add	ip, pc, #1048576	; 0x100000
   1167c:	add	ip, ip, #4, 20	; 0x4000
   11680:	ldr	pc, [ip, #2944]!	; 0xb80

00011684 <myhtml_namespace_name_entry_by_name@plt>:
   11684:	add	ip, pc, #1048576	; 0x100000
   11688:	add	ip, ip, #4, 20	; 0x4000
   1168c:	ldr	pc, [ip, #2936]!	; 0xb78

00011690 <myencoding_detect_bom@plt>:
   11690:	add	ip, pc, #1048576	; 0x100000
   11694:	add	ip, ip, #4, 20	; 0x4000
   11698:	ldr	pc, [ip, #2928]!	; 0xb70

0001169c <myhtml_tokenizer_calc_current_namespace@plt>:
   1169c:	add	ip, pc, #1048576	; 0x100000
   116a0:	add	ip, ip, #4, 20	; 0x4000
   116a4:	ldr	pc, [ip, #2920]!	; 0xb68

000116a8 <myhtml_tree_open_elements_remove@plt>:
   116a8:	add	ip, pc, #1048576	; 0x100000
   116ac:	add	ip, ip, #4, 20	; 0x4000
   116b0:	ldr	pc, [ip, #2912]!	; 0xb60

000116b4 <mctree_insert_child@plt>:
   116b4:	add	ip, pc, #1048576	; 0x100000
   116b8:	add	ip, ip, #4, 20	; 0x4000
   116bc:	ldr	pc, [ip, #2904]!	; 0xb58

000116c0 <mcsimple_clean@plt>:
   116c0:	add	ip, pc, #1048576	; 0x100000
   116c4:	add	ip, ip, #4, 20	; 0x4000
   116c8:	ldr	pc, [ip, #2896]!	; 0xb50

000116cc <myhtml_tree_node_insert_comment@plt>:
   116cc:	add	ip, pc, #1048576	; 0x100000
   116d0:	add	ip, ip, #4, 20	; 0x4000
   116d4:	ldr	pc, [ip, #2888]!	; 0xb48

000116d8 <myhtml_tokenizer_end@plt>:
   116d8:	add	ip, pc, #1048576	; 0x100000
   116dc:	add	ip, ip, #4, 20	; 0x4000
   116e0:	ldr	pc, [ip, #2880]!	; 0xb40

000116e4 <mycore_utils_avl_tree_list_all_nodes@plt>:
   116e4:	add	ip, pc, #1048576	; 0x100000
   116e8:	add	ip, ip, #4, 20	; 0x4000
   116ec:	ldr	pc, [ip, #2872]!	; 0xb38

000116f0 <myhtml_tree_temp_tag_name_clean@plt>:
   116f0:	add	ip, pc, #1048576	; 0x100000
   116f4:	add	ip, ip, #4, 20	; 0x4000
   116f8:	ldr	pc, [ip, #2864]!	; 0xb30

000116fc <myhtml_tree_list_clean@plt>:
   116fc:	add	ip, pc, #1048576	; 0x100000
   11700:	add	ip, ip, #4, 20	; 0x4000
   11704:	ldr	pc, [ip, #2856]!	; 0xb28

00011708 <mchar_async_node_add@plt>:
   11708:	add	ip, pc, #1048576	; 0x100000
   1170c:	add	ip, ip, #4, 20	; 0x4000
   11710:	ldr	pc, [ip, #2848]!	; 0xb20

00011714 <mycore_strncasecmp@plt>:
   11714:	add	ip, pc, #1048576	; 0x100000
   11718:	add	ip, ip, #4, 20	; 0x4000
   1171c:	ldr	pc, [ip, #2840]!	; 0xb18

00011720 <myhtml_tokenizer_post@plt>:
   11720:	add	ip, pc, #1048576	; 0x100000
   11724:	add	ip, ip, #4, 20	; 0x4000
   11728:	ldr	pc, [ip, #2832]!	; 0xb10

0001172c <myhtml_tree_list_insert_by_index@plt>:
   1172c:	add	ip, pc, #1048576	; 0x100000
   11730:	add	ip, ip, #4, 20	; 0x4000
   11734:	ldr	pc, [ip, #2824]!	; 0xb08

00011738 <mcsimple_create@plt>:
   11738:	add	ip, pc, #1048576	; 0x100000
   1173c:	add	ip, ip, #4, 20	; 0x4000
   11740:	ldr	pc, [ip, #2816]!	; 0xb00

00011744 <mythread_queue_destroy@plt>:
   11744:	add	ip, pc, #1048576	; 0x100000
   11748:	add	ip, ip, #4, 20	; 0x4000
   1174c:	ldr	pc, [ip, #2808]!	; 0xaf8

00011750 <mycore_string_raw_copy@plt>:
   11750:	add	ip, pc, #1048576	; 0x100000
   11754:	add	ip, ip, #4, 20	; 0x4000
   11758:	ldr	pc, [ip, #2800]!	; 0xaf0

0001175c <mycore_string_stay_only_whitespace@plt>:
   1175c:	add	ip, pc, #1048576	; 0x100000
   11760:	add	ip, ip, #4, 20	; 0x4000
   11764:	ldr	pc, [ip, #2792]!	; 0xae8

00011768 <mctree_clean@plt>:
   11768:	add	ip, pc, #1048576	; 0x100000
   1176c:	add	ip, ip, #4, 20	; 0x4000
   11770:	ldr	pc, [ip, #2784]!	; 0xae0

00011774 <myhtml_collection_create@plt>:
   11774:	add	ip, pc, #1048576	; 0x100000
   11778:	add	ip, ip, #4, 20	; 0x4000
   1177c:	ldr	pc, [ip, #2776]!	; 0xad8

00011780 <myhtml_token_set_replacement_character_for_null_token@plt>:
   11780:	add	ip, pc, #1048576	; 0x100000
   11784:	add	ip, ip, #4, 20	; 0x4000
   11788:	ldr	pc, [ip, #2768]!	; 0xad0

0001178c <fwrite@plt>:
   1178c:	add	ip, pc, #1048576	; 0x100000
   11790:	add	ip, ip, #4, 20	; 0x4000
   11794:	ldr	pc, [ip, #2760]!	; 0xac8

00011798 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   11798:	add	ip, pc, #1048576	; 0x100000
   1179c:	add	ip, ip, #4, 20	; 0x4000
   117a0:	ldr	pc, [ip, #2752]!	; 0xac0

000117a4 <myhtml_tree_node_insert_by_mode@plt>:
   117a4:	add	ip, pc, #1048576	; 0x100000
   117a8:	add	ip, ip, #4, 20	; 0x4000
   117ac:	ldr	pc, [ip, #2744]!	; 0xab8

000117b0 <myhtml_tree_node_insert_after@plt>:
   117b0:	add	ip, pc, #1048576	; 0x100000
   117b4:	add	ip, ip, #4, 20	; 0x4000
   117b8:	ldr	pc, [ip, #2736]!	; 0xab0

000117bc <myhtml_data_process_state_end@plt>:
   117bc:	add	ip, pc, #1048576	; 0x100000
   117c0:	add	ip, ip, #4, 20	; 0x4000
   117c4:	ldr	pc, [ip, #2728]!	; 0xaa8

000117c8 <myhtml_serialization_reallocate@plt>:
   117c8:	add	ip, pc, #1048576	; 0x100000
   117cc:	add	ip, ip, #4, 20	; 0x4000
   117d0:	ldr	pc, [ip, #2720]!	; 0xaa0

000117d4 <mycore_string_append_with_replacement_null_characters@plt>:
   117d4:	add	ip, pc, #1048576	; 0x100000
   117d8:	add	ip, ip, #4, 20	; 0x4000
   117dc:	ldr	pc, [ip, #2712]!	; 0xa98

000117e0 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   117e0:	add	ip, pc, #1048576	; 0x100000
   117e4:	add	ip, ip, #4, 20	; 0x4000
   117e8:	ldr	pc, [ip, #2704]!	; 0xa90

000117ec <mcsimple_destroy@plt>:
   117ec:	add	ip, pc, #1048576	; 0x100000
   117f0:	add	ip, ip, #4, 20	; 0x4000
   117f4:	ldr	pc, [ip, #2696]!	; 0xa88

000117f8 <myhtml_token_doctype_check_html_4_01@plt>:
   117f8:	add	ip, pc, #1048576	; 0x100000
   117fc:	add	ip, ip, #4, 20	; 0x4000
   11800:	ldr	pc, [ip, #2688]!	; 0xa80

00011804 <__mtree_insert_to_start@plt>:
   11804:	add	ip, pc, #1048576	; 0x100000
   11808:	add	ip, ip, #4, 20	; 0x4000
   1180c:	ldr	pc, [ip, #2680]!	; 0xa78

00011810 <fread@plt>:
   11810:	add	ip, pc, #1048576	; 0x100000
   11814:	add	ip, ip, #4, 20	; 0x4000
   11818:	ldr	pc, [ip, #2672]!	; 0xa70

0001181c <pthread_create@plt>:
   1181c:	add	ip, pc, #1048576	; 0x100000
   11820:	add	ip, ip, #4, 20	; 0x4000
   11824:	ldr	pc, [ip, #2664]!	; 0xa68

00011828 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   11828:	add	ip, pc, #1048576	; 0x100000
   1182c:	add	ip, ip, #4, 20	; 0x4000
   11830:	ldr	pc, [ip, #2656]!	; 0xa60

00011834 <myhtml_tree_node_insert_before@plt>:
   11834:	add	ip, pc, #1048576	; 0x100000
   11838:	add	ip, ip, #4, 20	; 0x4000
   1183c:	ldr	pc, [ip, #2648]!	; 0xa58

00011840 <myhtml_parser_token_data_to_string_charef@plt>:
   11840:	add	ip, pc, #1048576	; 0x100000
   11844:	add	ip, ip, #4, 20	; 0x4000
   11848:	ldr	pc, [ip, #2640]!	; 0xa50

0001184c <mythread_thread_attr_clean@plt>:
   1184c:	add	ip, pc, #1048576	; 0x100000
   11850:	add	ip, ip, #4, 20	; 0x4000
   11854:	ldr	pc, [ip, #2632]!	; 0xa48

00011858 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   11858:	add	ip, pc, #1048576	; 0x100000
   1185c:	add	ip, ip, #4, 20	; 0x4000
   11860:	ldr	pc, [ip, #2624]!	; 0xa40

00011864 <myhtml_tree_template_insertion_clean@plt>:
   11864:	add	ip, pc, #1048576	; 0x100000
   11868:	add	ip, ip, #4, 20	; 0x4000
   1186c:	ldr	pc, [ip, #2616]!	; 0xa38

00011870 <myhtml_tokenizer_chunk_process@plt>:
   11870:	add	ip, pc, #1048576	; 0x100000
   11874:	add	ip, ip, #4, 20	; 0x4000
   11878:	ldr	pc, [ip, #2608]!	; 0xa30

0001187c <myhtml_stream_create@plt>:
   1187c:	add	ip, pc, #1048576	; 0x100000
   11880:	add	ip, ip, #4, 20	; 0x4000
   11884:	ldr	pc, [ip, #2600]!	; 0xa28

00011888 <myhtml_tree_tags_close_p@plt>:
   11888:	add	ip, pc, #1048576	; 0x100000
   1188c:	add	ip, ip, #4, 20	; 0x4000
   11890:	ldr	pc, [ip, #2592]!	; 0xa20

00011894 <mcsimple_init@plt>:
   11894:	add	ip, pc, #1048576	; 0x100000
   11898:	add	ip, ip, #4, 20	; 0x4000
   1189c:	ldr	pc, [ip, #2584]!	; 0xa18

000118a0 <myencoding_string_append@plt>:
   118a0:	add	ip, pc, #1048576	; 0x100000
   118a4:	add	ip, ip, #4, 20	; 0x4000
   118a8:	ldr	pc, [ip, #2576]!	; 0xa10

000118ac <myhtml_stream_buffer_clean@plt>:
   118ac:	add	ip, pc, #1048576	; 0x100000
   118b0:	add	ip, ip, #4, 20	; 0x4000
   118b4:	ldr	pc, [ip, #2568]!	; 0xa08

000118b8 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   118b8:	add	ip, pc, #1048576	; 0x100000
   118bc:	add	ip, ip, #4, 20	; 0x4000
   118c0:	ldr	pc, [ip, #2560]!	; 0xa00

000118c4 <myhtml_token_merged_two_token_string@plt>:
   118c4:	add	ip, pc, #1048576	; 0x100000
   118c8:	add	ip, ip, #4, 20	; 0x4000
   118cc:	ldr	pc, [ip, #2552]!	; 0x9f8

000118d0 <myhtml_attribute_value@plt>:
   118d0:	add	ip, pc, #1048576	; 0x100000
   118d4:	add	ip, ip, #4, 20	; 0x4000
   118d8:	ldr	pc, [ip, #2544]!	; 0x9f0

000118dc <myhtml_token_strict_doctype_by_token@plt>:
   118dc:	add	ip, pc, #1048576	; 0x100000
   118e0:	add	ip, ip, #4, 20	; 0x4000
   118e4:	ldr	pc, [ip, #2536]!	; 0x9e8

000118e8 <mchar_async_init@plt>:
   118e8:	add	ip, pc, #1048576	; 0x100000
   118ec:	add	ip, ip, #4, 20	; 0x4000
   118f0:	ldr	pc, [ip, #2528]!	; 0x9e0

000118f4 <mycore_string_crop_whitespace_from_begin@plt>:
   118f4:	add	ip, pc, #1048576	; 0x100000
   118f8:	add	ip, ip, #4, 20	; 0x4000
   118fc:	ldr	pc, [ip, #2520]!	; 0x9d8

00011900 <mythread_resume@plt>:
   11900:	add	ip, pc, #1048576	; 0x100000
   11904:	add	ip, ip, #4, 20	; 0x4000
   11908:	ldr	pc, [ip, #2512]!	; 0x9d0

0001190c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   1190c:	add	ip, pc, #1048576	; 0x100000
   11910:	add	ip, ip, #4, 20	; 0x4000
   11914:	ldr	pc, [ip, #2504]!	; 0x9c8

00011918 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   11918:	add	ip, pc, #1048576	; 0x100000
   1191c:	add	ip, ip, #4, 20	; 0x4000
   11920:	ldr	pc, [ip, #2496]!	; 0x9c0

00011924 <myhtml_create_stream_and_batch@plt>:
   11924:	add	ip, pc, #1048576	; 0x100000
   11928:	add	ip, ip, #4, 20	; 0x4000
   1192c:	ldr	pc, [ip, #2488]!	; 0x9b8

00011930 <myhtml_data_process_entry_clean@plt>:
   11930:	add	ip, pc, #1048576	; 0x100000
   11934:	add	ip, ip, #4, 20	; 0x4000
   11938:	ldr	pc, [ip, #2480]!	; 0x9b0

0001193c <mcsync_spin_init@plt>:
   1193c:	add	ip, pc, #1048576	; 0x100000
   11940:	add	ip, ip, #4, 20	; 0x4000
   11944:	ldr	pc, [ip, #2472]!	; 0x9a8

00011948 <malloc@plt>:
   11948:	add	ip, pc, #1048576	; 0x100000
   1194c:	add	ip, ip, #4, 20	; 0x4000
   11950:	ldr	pc, [ip, #2464]!	; 0x9a0

00011954 <mythread_check_status@plt>:
   11954:	add	ip, pc, #1048576	; 0x100000
   11958:	add	ip, ip, #4, 20	; 0x4000
   1195c:	ldr	pc, [ip, #2456]!	; 0x998

00011960 <myhtml_token_doctype_check_html_4_0@plt>:
   11960:	add	ip, pc, #1048576	; 0x100000
   11964:	add	ip, ip, #4, 20	; 0x4000
   11968:	ldr	pc, [ip, #2448]!	; 0x990

0001196c <mycore_strcasecmp@plt>:
   1196c:	add	ip, pc, #1048576	; 0x100000
   11970:	add	ip, ip, #4, 20	; 0x4000
   11974:	ldr	pc, [ip, #2440]!	; 0x988

00011978 <mythread_queue_node_malloc_round@plt>:
   11978:	add	ip, pc, #1048576	; 0x100000
   1197c:	add	ip, ip, #4, 20	; 0x4000
   11980:	ldr	pc, [ip, #2432]!	; 0x980

00011984 <myhtml_tree_active_formatting_reconstruction@plt>:
   11984:	add	ip, pc, #1048576	; 0x100000
   11988:	add	ip, ip, #4, 20	; 0x4000
   1198c:	ldr	pc, [ip, #2424]!	; 0x978

00011990 <myhtml_token_set_done@plt>:
   11990:	add	ip, pc, #1048576	; 0x100000
   11994:	add	ip, ip, #4, 20	; 0x4000
   11998:	ldr	pc, [ip, #2416]!	; 0x970

0001199c <mcsync_spin_create@plt>:
   1199c:	add	ip, pc, #1048576	; 0x100000
   119a0:	add	ip, ip, #4, 20	; 0x4000
   119a4:	ldr	pc, [ip, #2408]!	; 0x968

000119a8 <mythread_thread_join@plt>:
   119a8:	add	ip, pc, #1048576	; 0x100000
   119ac:	add	ip, ip, #4, 20	; 0x4000
   119b0:	ldr	pc, [ip, #2400]!	; 0x960

000119b4 <myhtml_token_attr_remove@plt>:
   119b4:	add	ip, pc, #1048576	; 0x100000
   119b8:	add	ip, ip, #4, 20	; 0x4000
   119bc:	ldr	pc, [ip, #2392]!	; 0x958

000119c0 <myhtml_token_node_attr_copy@plt>:
   119c0:	add	ip, pc, #1048576	; 0x100000
   119c4:	add	ip, ip, #4, 20	; 0x4000
   119c8:	ldr	pc, [ip, #2384]!	; 0x950

000119cc <mythread_quit@plt>:
   119cc:	add	ip, pc, #1048576	; 0x100000
   119d0:	add	ip, ip, #4, 20	; 0x4000
   119d4:	ldr	pc, [ip, #2376]!	; 0x948

000119d8 <myhtml_batch_create@plt>:
   119d8:	add	ip, pc, #1048576	; 0x100000
   119dc:	add	ip, ip, #4, 20	; 0x4000
   119e0:	ldr	pc, [ip, #2368]!	; 0x940

000119e4 <mcsync_spin_lock@plt>:
   119e4:	add	ip, pc, #1048576	; 0x100000
   119e8:	add	ip, ip, #4, 20	; 0x4000
   119ec:	ldr	pc, [ip, #2360]!	; 0x938

000119f0 <myhtml_token_clean@plt>:
   119f0:	add	ip, pc, #1048576	; 0x100000
   119f4:	add	ip, ip, #4, 20	; 0x4000
   119f8:	ldr	pc, [ip, #2352]!	; 0x930

000119fc <mythread_queue_list_get_count@plt>:
   119fc:	add	ip, pc, #1048576	; 0x100000
   11a00:	add	ip, ip, #4, 20	; 0x4000
   11a04:	ldr	pc, [ip, #2344]!	; 0x928

00011a08 <mythread_queue_list_see_for_done_by_thread@plt>:
   11a08:	add	ip, pc, #1048576	; 0x100000
   11a0c:	add	ip, ip, #4, 20	; 0x4000
   11a10:	ldr	pc, [ip, #2336]!	; 0x920

00011a14 <__gmon_start__@plt>:
   11a14:	add	ip, pc, #1048576	; 0x100000
   11a18:	add	ip, ip, #4, 20	; 0x4000
   11a1c:	ldr	pc, [ip, #2328]!	; 0x918

00011a20 <myhtml_tokenizer_pause@plt>:
   11a20:	add	ip, pc, #1048576	; 0x100000
   11a24:	add	ip, ip, #4, 20	; 0x4000
   11a28:	ldr	pc, [ip, #2320]!	; 0x910

00011a2c <myhtml_tokenizer_set_first_settings@plt>:
   11a2c:	add	ip, pc, #1048576	; 0x100000
   11a30:	add	ip, ip, #4, 20	; 0x4000
   11a34:	ldr	pc, [ip, #2312]!	; 0x908

00011a38 <myhtml_tree_temp_tag_name_init@plt>:
   11a38:	add	ip, pc, #1048576	; 0x100000
   11a3c:	add	ip, ip, #4, 20	; 0x4000
   11a40:	ldr	pc, [ip, #2304]!	; 0x900

00011a44 <mycore_string_init@plt>:
   11a44:	add	ip, pc, #1048576	; 0x100000
   11a48:	add	ip, ip, #4, 20	; 0x4000
   11a4c:	ldr	pc, [ip, #2296]!	; 0x8f8

00011a50 <myhtml_tree_node_find_parent_by_tag_id@plt>:
   11a50:	add	ip, pc, #1048576	; 0x100000
   11a54:	add	ip, ip, #4, 20	; 0x4000
   11a58:	ldr	pc, [ip, #2288]!	; 0x8f0

00011a5c <myhtml_tree_current_node@plt>:
   11a5c:	add	ip, pc, #1048576	; 0x100000
   11a60:	add	ip, ip, #4, 20	; 0x4000
   11a64:	ldr	pc, [ip, #2280]!	; 0x8e8

00011a68 <mythread_mutex_close@plt>:
   11a68:	add	ip, pc, #1048576	; 0x100000
   11a6c:	add	ip, ip, #4, 20	; 0x4000
   11a70:	ldr	pc, [ip, #2272]!	; 0x8e0

00011a74 <myhtml_insertion_mode_in_body@plt>:
   11a74:	add	ip, pc, #1048576	; 0x100000
   11a78:	add	ip, ip, #4, 20	; 0x4000
   11a7c:	ldr	pc, [ip, #2264]!	; 0x8d8

00011a80 <myhtml_tree_active_formatting_between_last_marker@plt>:
   11a80:	add	ip, pc, #1048576	; 0x100000
   11a84:	add	ip, ip, #4, 20	; 0x4000
   11a88:	ldr	pc, [ip, #2256]!	; 0x8d0

00011a8c <mctree_create@plt>:
   11a8c:	add	ip, pc, #1048576	; 0x100000
   11a90:	add	ip, ip, #4, 20	; 0x4000
   11a94:	ldr	pc, [ip, #2248]!	; 0x8c8

00011a98 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   11a98:	add	ip, pc, #1048576	; 0x100000
   11a9c:	add	ip, ip, #4, 20	; 0x4000
   11aa0:	ldr	pc, [ip, #2240]!	; 0x8c0

00011aa4 <strlen@plt>:
   11aa4:	add	ip, pc, #1048576	; 0x100000
   11aa8:	add	ip, ip, #4, 20	; 0x4000
   11aac:	ldr	pc, [ip, #2232]!	; 0x8b8

00011ab0 <myhtml_token_node_wait_for_done@plt>:
   11ab0:	add	ip, pc, #1048576	; 0x100000
   11ab4:	add	ip, ip, #4, 20	; 0x4000
   11ab8:	ldr	pc, [ip, #2224]!	; 0x8b0

00011abc <mycore_string_append_lowercase@plt>:
   11abc:	add	ip, pc, #1048576	; 0x100000
   11ac0:	add	ip, ip, #4, 20	; 0x4000
   11ac4:	ldr	pc, [ip, #2216]!	; 0x8a8

00011ac8 <myhtml_token_node_attr_copy_with_check@plt>:
   11ac8:	add	ip, pc, #1048576	; 0x100000
   11acc:	add	ip, ip, #4, 20	; 0x4000
   11ad0:	ldr	pc, [ip, #2208]!	; 0x8a0

00011ad4 <myhtml_encoding_set@plt>:
   11ad4:	add	ip, pc, #1048576	; 0x100000
   11ad8:	add	ip, ip, #4, 20	; 0x4000
   11adc:	ldr	pc, [ip, #2200]!	; 0x898

00011ae0 <mythread_queue_init@plt>:
   11ae0:	add	ip, pc, #1048576	; 0x100000
   11ae4:	add	ip, ip, #4, 20	; 0x4000
   11ae8:	ldr	pc, [ip, #2192]!	; 0x890

00011aec <myhtml_tree_node_add_child@plt>:
   11aec:	add	ip, pc, #1048576	; 0x100000
   11af0:	add	ip, ip, #4, 20	; 0x4000
   11af4:	ldr	pc, [ip, #2184]!	; 0x888

00011af8 <mycore_utils_avl_tree_node_set_height@plt>:
   11af8:	add	ip, pc, #1048576	; 0x100000
   11afc:	add	ip, ip, #4, 20	; 0x4000
   11b00:	ldr	pc, [ip, #2176]!	; 0x880

00011b04 <myhtml_tree_clean@plt>:
   11b04:	add	ip, pc, #1048576	; 0x100000
   11b08:	add	ip, ip, #4, 20	; 0x4000
   11b0c:	ldr	pc, [ip, #2168]!	; 0x878

00011b10 <myhtml_tree_generate_implied_end_tags@plt>:
   11b10:	add	ip, pc, #1048576	; 0x100000
   11b14:	add	ip, ip, #4, 20	; 0x4000
   11b18:	ldr	pc, [ip, #2160]!	; 0x870

00011b1c <mchar_async_node_clean@plt>:
   11b1c:	add	ip, pc, #1048576	; 0x100000
   11b20:	add	ip, ip, #4, 20	; 0x4000
   11b24:	ldr	pc, [ip, #2152]!	; 0x868

00011b28 <myhtml_tree_list_destroy@plt>:
   11b28:	add	ip, pc, #1048576	; 0x100000
   11b2c:	add	ip, ip, #4, 20	; 0x4000
   11b30:	ldr	pc, [ip, #2144]!	; 0x860

00011b34 <myhtml_serialization_node_callback@plt>:
   11b34:	add	ip, pc, #1048576	; 0x100000
   11b38:	add	ip, ip, #4, 20	; 0x4000
   11b3c:	ldr	pc, [ip, #2136]!	; 0x858

00011b40 <myencoding_detect_by_trigram@plt>:
   11b40:	add	ip, pc, #1048576	; 0x100000
   11b44:	add	ip, ip, #4, 20	; 0x4000
   11b48:	ldr	pc, [ip, #2128]!	; 0x850

00011b4c <mchar_async_free@plt>:
   11b4c:	add	ip, pc, #1048576	; 0x100000
   11b50:	add	ip, ip, #4, 20	; 0x4000
   11b54:	ldr	pc, [ip, #2120]!	; 0x848

00011b58 <mchar_async_cache_clean@plt>:
   11b58:	add	ip, pc, #1048576	; 0x100000
   11b5c:	add	ip, ip, #4, 20	; 0x4000
   11b60:	ldr	pc, [ip, #2112]!	; 0x840

00011b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   11b64:	add	ip, pc, #1048576	; 0x100000
   11b68:	add	ip, ip, #4, 20	; 0x4000
   11b6c:	ldr	pc, [ip, #2104]!	; 0x838

00011b70 <mcsimple_malloc@plt>:
   11b70:	add	ip, pc, #1048576	; 0x100000
   11b74:	add	ip, ip, #4, 20	; 0x4000
   11b78:	ldr	pc, [ip, #2096]!	; 0x830

00011b7c <mctree_search_lowercase@plt>:
   11b7c:	add	ip, pc, #1048576	; 0x100000
   11b80:	add	ip, ip, #4, 20	; 0x4000
   11b84:	ldr	pc, [ip, #2088]!	; 0x828

00011b88 <myhtml_data_process@plt>:
   11b88:	add	ip, pc, #1048576	; 0x100000
   11b8c:	add	ip, ip, #4, 20	; 0x4000
   11b90:	ldr	pc, [ip, #2080]!	; 0x820

00011b94 <myhtml_token_attr_copy@plt>:
   11b94:	add	ip, pc, #1048576	; 0x100000
   11b98:	add	ip, ip, #4, 20	; 0x4000
   11b9c:	ldr	pc, [ip, #2072]!	; 0x818

00011ba0 <myhtml_tree_node_insert_by_node@plt>:
   11ba0:	add	ip, pc, #1048576	; 0x100000
   11ba4:	add	ip, ip, #4, 20	; 0x4000
   11ba8:	ldr	pc, [ip, #2064]!	; 0x810

00011bac <mcobject_init@plt>:
   11bac:	add	ip, pc, #1048576	; 0x100000
   11bb0:	add	ip, ip, #4, 20	; 0x4000
   11bb4:	ldr	pc, [ip, #2056]!	; 0x808

00011bb8 <myhtml_token_destroy@plt>:
   11bb8:	add	ip, pc, #1048576	; 0x100000
   11bbc:	add	ip, ip, #4, 20	; 0x4000
   11bc0:	ldr	pc, [ip, #2048]!	; 0x800

00011bc4 <myhtml_destroy_marker@plt>:
   11bc4:	add	ip, pc, #1048576	; 0x100000
   11bc8:	add	ip, ip, #4, 20	; 0x4000
   11bcc:	ldr	pc, [ip, #2040]!	; 0x7f8

00011bd0 <pthread_attr_init@plt>:
   11bd0:	add	ip, pc, #1048576	; 0x100000
   11bd4:	add	ip, ip, #4, 20	; 0x4000
   11bd8:	ldr	pc, [ip, #2032]!	; 0x7f0

00011bdc <myhtml_charef_find_by_pos@plt>:
   11bdc:	add	ip, pc, #1048576	; 0x100000
   11be0:	add	ip, ip, #4, 20	; 0x4000
   11be4:	ldr	pc, [ip, #2024]!	; 0x7e8

00011be8 <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   11be8:	add	ip, pc, #1048576	; 0x100000
   11bec:	add	ip, ip, #4, 20	; 0x4000
   11bf0:	ldr	pc, [ip, #2016]!	; 0x7e0

00011bf4 <mythread_queue_list_create@plt>:
   11bf4:	add	ip, pc, #1048576	; 0x100000
   11bf8:	add	ip, ip, #4, 20	; 0x4000
   11bfc:	ldr	pc, [ip, #2008]!	; 0x7d8

00011c00 <myhtml_token_attr_delete_all@plt>:
   11c00:	add	ip, pc, #1048576	; 0x100000
   11c04:	add	ip, ip, #4, 20	; 0x4000
   11c08:	ldr	pc, [ip, #2000]!	; 0x7d0

00011c0c <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   11c0c:	add	ip, pc, #1048576	; 0x100000
   11c10:	add	ip, ip, #4, 20	; 0x4000
   11c14:	ldr	pc, [ip, #1992]!	; 0x7c8

00011c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   11c18:	add	ip, pc, #1048576	; 0x100000
   11c1c:	add	ip, ip, #4, 20	; 0x4000
   11c20:	ldr	pc, [ip, #1984]!	; 0x7c0

00011c24 <myhtml_stream_buffer_entry_init@plt>:
   11c24:	add	ip, pc, #1048576	; 0x100000
   11c28:	add	ip, ip, #4, 20	; 0x4000
   11c2c:	ldr	pc, [ip, #1976]!	; 0x7b8

00011c30 <myhtml_tree_active_formatting_append_with_check@plt>:
   11c30:	add	ip, pc, #1048576	; 0x100000
   11c34:	add	ip, ip, #4, 20	; 0x4000
   11c38:	ldr	pc, [ip, #1968]!	; 0x7b0

00011c3c <myhtml_tree_active_formatting_clean@plt>:
   11c3c:	add	ip, pc, #1048576	; 0x100000
   11c40:	add	ip, ip, #4, 20	; 0x4000
   11c44:	ldr	pc, [ip, #1960]!	; 0x7a8

00011c48 <myencoding_get_function_by_id@plt>:
   11c48:	add	ip, pc, #1048576	; 0x100000
   11c4c:	add	ip, ip, #4, 20	; 0x4000
   11c50:	ldr	pc, [ip, #1952]!	; 0x7a0

00011c54 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   11c54:	add	ip, pc, #1048576	; 0x100000
   11c58:	add	ip, ip, #4, 20	; 0x4000
   11c5c:	ldr	pc, [ip, #1944]!	; 0x798

00011c60 <myhtml_tree_active_formatting_remove_by_index@plt>:
   11c60:	add	ip, pc, #1048576	; 0x100000
   11c64:	add	ip, ip, #4, 20	; 0x4000
   11c68:	ldr	pc, [ip, #1936]!	; 0x790

00011c6c <mcsync_lock@plt>:
   11c6c:	add	ip, pc, #1048576	; 0x100000
   11c70:	add	ip, ip, #4, 20	; 0x4000
   11c74:	ldr	pc, [ip, #1928]!	; 0x788

00011c78 <myhtml_tree_list_init@plt>:
   11c78:	add	ip, pc, #1048576	; 0x100000
   11c7c:	add	ip, ip, #4, 20	; 0x4000
   11c80:	ldr	pc, [ip, #1920]!	; 0x780

00011c84 <mcsync_init@plt>:
   11c84:	add	ip, pc, #1048576	; 0x100000
   11c88:	add	ip, ip, #4, 20	; 0x4000
   11c8c:	ldr	pc, [ip, #1912]!	; 0x778

00011c90 <myhtml_tree_active_formatting_is_marker@plt>:
   11c90:	add	ip, pc, #1048576	; 0x100000
   11c94:	add	ip, ip, #4, 20	; 0x4000
   11c98:	ldr	pc, [ip, #1904]!	; 0x770

00011c9c <mcobject_async_node_clean@plt>:
   11c9c:	add	ip, pc, #1048576	; 0x100000
   11ca0:	add	ip, ip, #4, 20	; 0x4000
   11ca4:	ldr	pc, [ip, #1896]!	; 0x768

00011ca8 <mchar_async_cache_destroy@plt>:
   11ca8:	add	ip, pc, #1048576	; 0x100000
   11cac:	add	ip, ip, #4, 20	; 0x4000
   11cb0:	ldr	pc, [ip, #1888]!	; 0x760

00011cb4 <myhtml_tree_adoption_agency_algorithm@plt>:
   11cb4:	add	ip, pc, #1048576	; 0x100000
   11cb8:	add	ip, ip, #4, 20	; 0x4000
   11cbc:	ldr	pc, [ip, #1880]!	; 0x758

00011cc0 <myhtml_tree_active_formatting_remove@plt>:
   11cc0:	add	ip, pc, #1048576	; 0x100000
   11cc4:	add	ip, ip, #4, 20	; 0x4000
   11cc8:	ldr	pc, [ip, #1872]!	; 0x750

00011ccc <memset@plt>:
   11ccc:	add	ip, pc, #1048576	; 0x100000
   11cd0:	add	ip, ip, #4, 20	; 0x4000
   11cd4:	ldr	pc, [ip, #1864]!	; 0x748

00011cd8 <myhread_entry_create@plt>:
   11cd8:	add	ip, pc, #1048576	; 0x100000
   11cdc:	add	ip, ip, #4, 20	; 0x4000
   11ce0:	ldr	pc, [ip, #1856]!	; 0x740

00011ce4 <mcsync_mutex_create@plt>:
   11ce4:	add	ip, pc, #1048576	; 0x100000
   11ce8:	add	ip, ip, #4, 20	; 0x4000
   11cec:	ldr	pc, [ip, #1848]!	; 0x738

00011cf0 <mycore_string_append@plt>:
   11cf0:	add	ip, pc, #1048576	; 0x100000
   11cf4:	add	ip, ip, #4, 20	; 0x4000
   11cf8:	ldr	pc, [ip, #1840]!	; 0x730

00011cfc <mcobject_async_chunk_malloc_without_lock@plt>:
   11cfc:	add	ip, pc, #1048576	; 0x100000
   11d00:	add	ip, ip, #4, 20	; 0x4000
   11d04:	ldr	pc, [ip, #1832]!	; 0x728

00011d08 <strncpy@plt>:
   11d08:	add	ip, pc, #1048576	; 0x100000
   11d0c:	add	ip, ip, #4, 20	; 0x4000
   11d10:	ldr	pc, [ip, #1824]!	; 0x720

00011d14 <pthread_cancel@plt>:
   11d14:	add	ip, pc, #1048576	; 0x100000
   11d18:	add	ip, ip, #4, 20	; 0x4000
   11d1c:	ldr	pc, [ip, #1816]!	; 0x718

00011d20 <myhtml_token_attr_create@plt>:
   11d20:	add	ip, pc, #1048576	; 0x100000
   11d24:	add	ip, ip, #4, 20	; 0x4000
   11d28:	ldr	pc, [ip, #1808]!	; 0x710

00011d2c <mchar_async_malloc@plt>:
   11d2c:	add	ip, pc, #1048576	; 0x100000
   11d30:	add	ip, ip, #4, 20	; 0x4000
   11d34:	ldr	pc, [ip, #1800]!	; 0x708

00011d38 <myhtml_tag_static_search@plt>:
   11d38:	add	ip, pc, #1048576	; 0x100000
   11d3c:	add	ip, ip, #4, 20	; 0x4000
   11d40:	ldr	pc, [ip, #1792]!	; 0x700

00011d44 <myhtml_data_process_end@plt>:
   11d44:	add	ip, pc, #1048576	; 0x100000
   11d48:	add	ip, ip, #4, 20	; 0x4000
   11d4c:	ldr	pc, [ip, #1784]!	; 0x6f8

00011d50 <myhtml_stream_buffer_add_entry@plt>:
   11d50:	add	ip, pc, #1048576	; 0x100000
   11d54:	add	ip, ip, #4, 20	; 0x4000
   11d58:	ldr	pc, [ip, #1776]!	; 0x6f0

00011d5c <myhtml_tree_temp_tag_name_destroy@plt>:
   11d5c:	add	ip, pc, #1048576	; 0x100000
   11d60:	add	ip, ip, #4, 20	; 0x4000
   11d64:	ldr	pc, [ip, #1768]!	; 0x6e8

00011d68 <myhtml_tree_open_elements_pop_until@plt>:
   11d68:	add	ip, pc, #1048576	; 0x100000
   11d6c:	add	ip, ip, #4, 20	; 0x4000
   11d70:	ldr	pc, [ip, #1760]!	; 0x6e0

00011d74 <mctree_insert@plt>:
   11d74:	add	ip, pc, #1048576	; 0x100000
   11d78:	add	ip, ip, #4, 20	; 0x4000
   11d7c:	ldr	pc, [ip, #1752]!	; 0x6d8

00011d80 <mycore_string_realloc@plt>:
   11d80:	add	ip, pc, #1048576	; 0x100000
   11d84:	add	ip, ip, #4, 20	; 0x4000
   11d88:	ldr	pc, [ip, #1744]!	; 0x6d0

00011d8c <myhtml_tree_node_insert@plt>:
   11d8c:	add	ip, pc, #1048576	; 0x100000
   11d90:	add	ip, ip, #4, 20	; 0x4000
   11d94:	ldr	pc, [ip, #1736]!	; 0x6c8

00011d98 <mythread_queue_list_entry_wait_for_done@plt>:
   11d98:	add	ip, pc, #1048576	; 0x100000
   11d9c:	add	ip, ip, #4, 20	; 0x4000
   11da0:	ldr	pc, [ip, #1728]!	; 0x6c0

00011da4 <myhtml_tree_open_elements_append@plt>:
   11da4:	add	ip, pc, #1048576	; 0x100000
   11da8:	add	ip, ip, #4, 20	; 0x4000
   11dac:	ldr	pc, [ip, #1720]!	; 0x6b8

00011db0 <mcsimple_init_list_entries@plt>:
   11db0:	add	ip, pc, #1048576	; 0x100000
   11db4:	add	ip, ip, #4, 20	; 0x4000
   11db8:	ldr	pc, [ip, #1712]!	; 0x6b0

00011dbc <mythread_queue_list_entry_clean@plt>:
   11dbc:	add	ip, pc, #1048576	; 0x100000
   11dc0:	add	ip, ip, #4, 20	; 0x4000
   11dc4:	ldr	pc, [ip, #1704]!	; 0x6a8

00011dc8 <mythread_destroy@plt>:
   11dc8:	add	ip, pc, #1048576	; 0x100000
   11dcc:	add	ip, ip, #4, 20	; 0x4000
   11dd0:	ldr	pc, [ip, #1696]!	; 0x6a0

00011dd4 <myhtml_tree_token_list_init@plt>:
   11dd4:	add	ip, pc, #1048576	; 0x100000
   11dd8:	add	ip, ip, #4, 20	; 0x4000
   11ddc:	ldr	pc, [ip, #1688]!	; 0x698

00011de0 <mchar_async_chunk_malloc@plt>:
   11de0:	add	ip, pc, #1048576	; 0x100000
   11de4:	add	ip, ip, #4, 20	; 0x4000
   11de8:	ldr	pc, [ip, #1680]!	; 0x690

00011dec <myhtml_tree_template_insertion_pop@plt>:
   11dec:	add	ip, pc, #1048576	; 0x100000
   11df0:	add	ip, ip, #4, 20	; 0x4000
   11df4:	ldr	pc, [ip, #1672]!	; 0x688

00011df8 <mythread_thread_destroy@plt>:
   11df8:	add	ip, pc, #1048576	; 0x100000
   11dfc:	add	ip, ip, #4, 20	; 0x4000
   11e00:	ldr	pc, [ip, #1664]!	; 0x680

00011e04 <fclose@plt>:
   11e04:	add	ip, pc, #1048576	; 0x100000
   11e08:	add	ip, ip, #4, 20	; 0x4000
   11e0c:	ldr	pc, [ip, #1656]!	; 0x678

00011e10 <myhtml_token_node_create@plt>:
   11e10:	add	ip, pc, #1048576	; 0x100000
   11e14:	add	ip, ip, #4, 20	; 0x4000
   11e18:	ldr	pc, [ip, #1648]!	; 0x670

00011e1c <mycore_utils_avl_tree_node_balance@plt>:
   11e1c:	add	ip, pc, #1048576	; 0x100000
   11e20:	add	ip, ip, #4, 20	; 0x4000
   11e24:	ldr	pc, [ip, #1640]!	; 0x668

00011e28 <myhtml_tag_get_by_id@plt>:
   11e28:	add	ip, pc, #1048576	; 0x100000
   11e2c:	add	ip, ip, #4, 20	; 0x4000
   11e30:	ldr	pc, [ip, #1632]!	; 0x660

00011e34 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   11e34:	add	ip, pc, #1048576	; 0x100000
   11e38:	add	ip, ip, #4, 20	; 0x4000
   11e3c:	ldr	pc, [ip, #1624]!	; 0x658

00011e40 <mycore_utils_mhash_rebuld@plt>:
   11e40:	add	ip, pc, #1048576	; 0x100000
   11e44:	add	ip, ip, #4, 20	; 0x4000
   11e48:	ldr	pc, [ip, #1616]!	; 0x650

00011e4c <myhtml_charef_get_first_position@plt>:
   11e4c:	add	ip, pc, #1048576	; 0x100000
   11e50:	add	ip, ip, #4, 20	; 0x4000
   11e54:	ldr	pc, [ip, #1608]!	; 0x648

00011e58 <mcobject_malloc@plt>:
   11e58:	add	ip, pc, #1048576	; 0x100000
   11e5c:	add	ip, ip, #4, 20	; 0x4000
   11e60:	ldr	pc, [ip, #1600]!	; 0x640

00011e64 <myencoding_detect_unicode_has_end@plt>:
   11e64:	add	ip, pc, #1048576	; 0x100000
   11e68:	add	ip, ip, #4, 20	; 0x4000
   11e6c:	ldr	pc, [ip, #1592]!	; 0x638

00011e70 <mcsync_spin_clean@plt>:
   11e70:	add	ip, pc, #1048576	; 0x100000
   11e74:	add	ip, ip, #4, 20	; 0x4000
   11e78:	ldr	pc, [ip, #1584]!	; 0x630

00011e7c <mythread_queue_create@plt>:
   11e7c:	add	ip, pc, #1048576	; 0x100000
   11e80:	add	ip, ip, #4, 20	; 0x4000
   11e84:	ldr	pc, [ip, #1576]!	; 0x628

00011e88 <mcobject_async_node_add@plt>:
   11e88:	add	ip, pc, #1048576	; 0x100000
   11e8c:	add	ip, ip, #4, 20	; 0x4000
   11e90:	ldr	pc, [ip, #1568]!	; 0x620

00011e94 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   11e94:	add	ip, pc, #1048576	; 0x100000
   11e98:	add	ip, ip, #4, 20	; 0x4000
   11e9c:	ldr	pc, [ip, #1560]!	; 0x618

00011ea0 <myhtml_is_html_node@plt>:
   11ea0:	add	ip, pc, #1048576	; 0x100000
   11ea4:	add	ip, ip, #4, 20	; 0x4000
   11ea8:	ldr	pc, [ip, #1552]!	; 0x610

00011eac <myhtml_init_marker@plt>:
   11eac:	add	ip, pc, #1048576	; 0x100000
   11eb0:	add	ip, ip, #4, 20	; 0x4000
   11eb4:	ldr	pc, [ip, #1544]!	; 0x608

00011eb8 <myhtml_tree_active_formatting_init@plt>:
   11eb8:	add	ip, pc, #1048576	; 0x100000
   11ebc:	add	ip, ip, #4, 20	; 0x4000
   11ec0:	ldr	pc, [ip, #1536]!	; 0x600

00011ec4 <myhtml_parser_token_data_to_string@plt>:
   11ec4:	add	ip, pc, #1048576	; 0x100000
   11ec8:	add	ip, ip, #4, 20	; 0x4000
   11ecc:	ldr	pc, [ip, #1528]!	; 0x5f8

00011ed0 <mythread_stop@plt>:
   11ed0:	add	ip, pc, #1048576	; 0x100000
   11ed4:	add	ip, ip, #4, 20	; 0x4000
   11ed8:	ldr	pc, [ip, #1520]!	; 0x5f0

00011edc <mythread_option_set@plt>:
   11edc:	add	ip, pc, #1048576	; 0x100000
   11ee0:	add	ip, ip, #4, 20	; 0x4000
   11ee4:	ldr	pc, [ip, #1512]!	; 0x5e8

00011ee8 <myhtml_tag_name_by_id@plt>:
   11ee8:	add	ip, pc, #1048576	; 0x100000
   11eec:	add	ip, ip, #4, 20	; 0x4000
   11ef0:	ldr	pc, [ip, #1504]!	; 0x5e0

00011ef4 <mythread_mutex_create@plt>:
   11ef4:	add	ip, pc, #1048576	; 0x100000
   11ef8:	add	ip, ip, #4, 20	; 0x4000
   11efc:	ldr	pc, [ip, #1496]!	; 0x5d8

00011f00 <myhtml_attribute_key@plt>:
   11f00:	add	ip, pc, #1048576	; 0x100000
   11f04:	add	ip, ip, #4, 20	; 0x4000
   11f08:	ldr	pc, [ip, #1488]!	; 0x5d0

00011f0c <mchar_sync_chunk_find_by_size@plt>:
   11f0c:	add	ip, pc, #1048576	; 0x100000
   11f10:	add	ip, ip, #4, 20	; 0x4000
   11f14:	ldr	pc, [ip, #1480]!	; 0x5c8

00011f18 <mcobject_async_destroy@plt>:
   11f18:	add	ip, pc, #1048576	; 0x100000
   11f1c:	add	ip, ip, #4, 20	; 0x4000
   11f20:	ldr	pc, [ip, #1472]!	; 0x5c0

00011f24 <myhtml_token_attr_compare@plt>:
   11f24:	add	ip, pc, #1048576	; 0x100000
   11f28:	add	ip, ip, #4, 20	; 0x4000
   11f2c:	ldr	pc, [ip, #1464]!	; 0x5b8

00011f30 <myhtml_tokenizer_set_state@plt>:
   11f30:	add	ip, pc, #1048576	; 0x100000
   11f34:	add	ip, ip, #4, 20	; 0x4000
   11f38:	ldr	pc, [ip, #1456]!	; 0x5b0

00011f3c <mcsync_mutex_init@plt>:
   11f3c:	add	ip, pc, #1048576	; 0x100000
   11f40:	add	ip, ip, #4, 20	; 0x4000
   11f44:	ldr	pc, [ip, #1448]!	; 0x5a8

00011f48 <myhtml_tag_init@plt>:
   11f48:	add	ip, pc, #1048576	; 0x100000
   11f4c:	add	ip, ip, #4, 20	; 0x4000
   11f50:	ldr	pc, [ip, #1440]!	; 0x5a0

00011f54 <pthread_join@plt>:
   11f54:	add	ip, pc, #1048576	; 0x100000
   11f58:	add	ip, ip, #4, 20	; 0x4000
   11f5c:	ldr	pc, [ip, #1432]!	; 0x598

00011f60 <myhtml_tag_get_by_name@plt>:
   11f60:	add	ip, pc, #1048576	; 0x100000
   11f64:	add	ip, ip, #4, 20	; 0x4000
   11f68:	ldr	pc, [ip, #1424]!	; 0x590

00011f6c <myhtml_stream_buffer_current_entry@plt>:
   11f6c:	add	ip, pc, #1048576	; 0x100000
   11f70:	add	ip, ip, #4, 20	; 0x4000
   11f74:	ldr	pc, [ip, #1416]!	; 0x588

00011f78 <mchar_async_chunk_malloc_without_lock@plt>:
   11f78:	add	ip, pc, #1048576	; 0x100000
   11f7c:	add	ip, ip, #4, 20	; 0x4000
   11f80:	ldr	pc, [ip, #1408]!	; 0x580

00011f84 <myhtml_tree_open_elements_init@plt>:
   11f84:	add	ip, pc, #1048576	; 0x100000
   11f88:	add	ip, ip, #4, 20	; 0x4000
   11f8c:	ldr	pc, [ip, #1400]!	; 0x578

00011f90 <mcobject_async_malloc@plt>:
   11f90:	add	ip, pc, #1048576	; 0x100000
   11f94:	add	ip, ip, #4, 20	; 0x4000
   11f98:	ldr	pc, [ip, #1392]!	; 0x570

00011f9c <mchar_async_clean@plt>:
   11f9c:	add	ip, pc, #1048576	; 0x100000
   11fa0:	add	ip, ip, #4, 20	; 0x4000
   11fa4:	ldr	pc, [ip, #1384]!	; 0x568

00011fa8 <myhtml_token_adjust_foreign_attributes@plt>:
   11fa8:	add	ip, pc, #1048576	; 0x100000
   11fac:	add	ip, ip, #4, 20	; 0x4000
   11fb0:	ldr	pc, [ip, #1376]!	; 0x560

00011fb4 <myhtml_rules_init@plt>:
   11fb4:	add	ip, pc, #1048576	; 0x100000
   11fb8:	add	ip, ip, #4, 20	; 0x4000
   11fbc:	ldr	pc, [ip, #1368]!	; 0x558

00011fc0 <mythread_nanosleep_destroy@plt>:
   11fc0:	add	ip, pc, #1048576	; 0x100000
   11fc4:	add	ip, ip, #4, 20	; 0x4000
   11fc8:	ldr	pc, [ip, #1360]!	; 0x550

00011fcc <mycore_utils_avl_tree_node_rotate_left@plt>:
   11fcc:	add	ip, pc, #1048576	; 0x100000
   11fd0:	add	ip, ip, #4, 20	; 0x4000
   11fd4:	ldr	pc, [ip, #1352]!	; 0x548

00011fd8 <myhtml_string_before_append_any_preprocessing@plt>:
   11fd8:	add	ip, pc, #1048576	; 0x100000
   11fdc:	add	ip, ip, #4, 20	; 0x4000
   11fe0:	ldr	pc, [ip, #1344]!	; 0x540

00011fe4 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   11fe4:	add	ip, pc, #1048576	; 0x100000
   11fe8:	add	ip, ip, #4, 20	; 0x4000
   11fec:	ldr	pc, [ip, #1336]!	; 0x538

00011ff0 <mchar_async_cache_init@plt>:
   11ff0:	add	ip, pc, #1048576	; 0x100000
   11ff4:	add	ip, ip, #4, 20	; 0x4000
   11ff8:	ldr	pc, [ip, #1328]!	; 0x530

00011ffc <myhtml_check_tag_parser@plt>:
   11ffc:	add	ip, pc, #1048576	; 0x100000
   12000:	add	ip, ip, #4, 20	; 0x4000
   12004:	ldr	pc, [ip, #1320]!	; 0x528

00012008 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   12008:	add	ip, pc, #1048576	; 0x100000
   1200c:	add	ip, ip, #4, 20	; 0x4000
   12010:	ldr	pc, [ip, #1312]!	; 0x520

00012014 <mchar_async_node_delete@plt>:
   12014:	add	ip, pc, #1048576	; 0x100000
   12018:	add	ip, ip, #4, 20	; 0x4000
   1201c:	ldr	pc, [ip, #1304]!	; 0x518

00012020 <mchar_async_crop_first_chars_without_cache@plt>:
   12020:	add	ip, pc, #1048576	; 0x100000
   12024:	add	ip, ip, #4, 20	; 0x4000
   12028:	ldr	pc, [ip, #1296]!	; 0x510

0001202c <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   1202c:	add	ip, pc, #1048576	; 0x100000
   12030:	add	ip, ip, #4, 20	; 0x4000
   12034:	ldr	pc, [ip, #1288]!	; 0x508

00012038 <mchar_async_cache_add@plt>:
   12038:	add	ip, pc, #1048576	; 0x100000
   1203c:	add	ip, ip, #4, 20	; 0x4000
   12040:	ldr	pc, [ip, #1280]!	; 0x500

00012044 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   12044:	add	ip, pc, #1048576	; 0x100000
   12048:	add	ip, ip, #4, 20	; 0x4000
   1204c:	ldr	pc, [ip, #1272]!	; 0x4f8

00012050 <mycore_malloc@plt>:
   12050:	add	ip, pc, #1048576	; 0x100000
   12054:	add	ip, ip, #4, 20	; 0x4000
   12058:	ldr	pc, [ip, #1264]!	; 0x4f0

0001205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   1205c:	add	ip, pc, #1048576	; 0x100000
   12060:	add	ip, ip, #4, 20	; 0x4000
   12064:	ldr	pc, [ip, #1256]!	; 0x4e8

00012068 <mythread_queue_node_malloc_limit@plt>:
   12068:	add	ip, pc, #1048576	; 0x100000
   1206c:	add	ip, ip, #4, 20	; 0x4000
   12070:	ldr	pc, [ip, #1248]!	; 0x4e0

00012074 <myhtml_tree_node_insert_by_token@plt>:
   12074:	add	ip, pc, #1048576	; 0x100000
   12078:	add	ip, ip, #4, 20	; 0x4000
   1207c:	ldr	pc, [ip, #1240]!	; 0x4d8

00012080 <mctree_insert_after@plt>:
   12080:	add	ip, pc, #1048576	; 0x100000
   12084:	add	ip, ip, #4, 20	; 0x4000
   12088:	ldr	pc, [ip, #1232]!	; 0x4d0

0001208c <myencoding_by_name@plt>:
   1208c:	add	ip, pc, #1048576	; 0x100000
   12090:	add	ip, ip, #4, 20	; 0x4000
   12094:	ldr	pc, [ip, #1224]!	; 0x4c8

00012098 <myhtml_tree_template_insertion_init@plt>:
   12098:	add	ip, pc, #1048576	; 0x100000
   1209c:	add	ip, ip, #4, 20	; 0x4000
   120a0:	ldr	pc, [ip, #1216]!	; 0x4c0

000120a4 <myhtml_tree_open_elements_destroy@plt>:
   120a4:	add	ip, pc, #1048576	; 0x100000
   120a8:	add	ip, ip, #4, 20	; 0x4000
   120ac:	ldr	pc, [ip, #1208]!	; 0x4b8

000120b0 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   120b0:	add	ip, pc, #1048576	; 0x100000
   120b4:	add	ip, ip, #4, 20	; 0x4000
   120b8:	ldr	pc, [ip, #1200]!	; 0x4b0

000120bc <myhtml_tree_node_free@plt>:
   120bc:	add	ip, pc, #1048576	; 0x100000
   120c0:	add	ip, ip, #4, 20	; 0x4000
   120c4:	ldr	pc, [ip, #1192]!	; 0x4a8

000120c8 <mythread_mutex_post@plt>:
   120c8:	add	ip, pc, #1048576	; 0x100000
   120cc:	add	ip, ip, #4, 20	; 0x4000
   120d0:	ldr	pc, [ip, #1184]!	; 0x4a0

000120d4 <mycore_string_clean@plt>:
   120d4:	add	ip, pc, #1048576	; 0x100000
   120d8:	add	ip, ip, #4, 20	; 0x4000
   120dc:	ldr	pc, [ip, #1176]!	; 0x498

000120e0 <mythread_queue_list_entry_make_batch@plt>:
   120e0:	add	ip, pc, #1048576	; 0x100000
   120e4:	add	ip, ip, #4, 20	; 0x4000
   120e8:	ldr	pc, [ip, #1168]!	; 0x490

000120ec <myhtml_tag_create@plt>:
   120ec:	add	ip, pc, #1048576	; 0x100000
   120f0:	add	ip, ip, #4, 20	; 0x4000
   120f4:	ldr	pc, [ip, #1160]!	; 0x488

000120f8 <myhtml_tree_close_cell@plt>:
   120f8:	add	ip, pc, #1048576	; 0x100000
   120fc:	add	ip, ip, #4, 20	; 0x4000
   12100:	ldr	pc, [ip, #1152]!	; 0x480

00012104 <myhtml_tree_adjusted_current_node@plt>:
   12104:	add	ip, pc, #1048576	; 0x100000
   12108:	add	ip, ip, #4, 20	; 0x4000
   1210c:	ldr	pc, [ip, #1144]!	; 0x478

00012110 <myencoding_detect_russian_has_end@plt>:
   12110:	add	ip, pc, #1048576	; 0x100000
   12114:	add	ip, ip, #4, 20	; 0x4000
   12118:	ldr	pc, [ip, #1136]!	; 0x470

0001211c <myhtml_rules_check_for_first_newline@plt>:
   1211c:	add	ip, pc, #1048576	; 0x100000
   12120:	add	ip, ip, #4, 20	; 0x4000
   12124:	ldr	pc, [ip, #1128]!	; 0x468

00012128 <myhtml_stream_buffer_init@plt>:
   12128:	add	ip, pc, #1048576	; 0x100000
   1212c:	add	ip, ip, #4, 20	; 0x4000
   12130:	ldr	pc, [ip, #1120]!	; 0x460

00012134 <mythread_queue_node_clean@plt>:
   12134:	add	ip, pc, #1048576	; 0x100000
   12138:	add	ip, ip, #4, 20	; 0x4000
   1213c:	ldr	pc, [ip, #1112]!	; 0x458

00012140 <myhtml_tree_node_insert_foreign_element@plt>:
   12140:	add	ip, pc, #1048576	; 0x100000
   12144:	add	ip, ip, #4, 20	; 0x4000
   12148:	ldr	pc, [ip, #1104]!	; 0x450

0001214c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   1214c:	add	ip, pc, #1048576	; 0x100000
   12150:	add	ip, ip, #4, 20	; 0x4000
   12154:	ldr	pc, [ip, #1096]!	; 0x448

00012158 <mythread_mutex_wait@plt>:
   12158:	add	ip, pc, #1048576	; 0x100000
   1215c:	add	ip, ip, #4, 20	; 0x4000
   12160:	ldr	pc, [ip, #1088]!	; 0x440

00012164 <mchar_async_destroy@plt>:
   12164:	add	ip, pc, #1048576	; 0x100000
   12168:	add	ip, ip, #4, 20	; 0x4000
   1216c:	ldr	pc, [ip, #1080]!	; 0x438

00012170 <mycore_utils_mhash_add_with_choice@plt>:
   12170:	add	ip, pc, #1048576	; 0x100000
   12174:	add	ip, ip, #4, 20	; 0x4000
   12178:	ldr	pc, [ip, #1072]!	; 0x430

0001217c <myhtml_tree_node_delete@plt>:
   1217c:	add	ip, pc, #1048576	; 0x100000
   12180:	add	ip, ip, #4, 20	; 0x4000
   12184:	ldr	pc, [ip, #1064]!	; 0x428

00012188 <mycore_free@plt>:
   12188:	add	ip, pc, #1048576	; 0x100000
   1218c:	add	ip, ip, #4, 20	; 0x4000
   12190:	ldr	pc, [ip, #1056]!	; 0x420

00012194 <mythread_queue_list_wait_for_done@plt>:
   12194:	add	ip, pc, #1048576	; 0x100000
   12198:	add	ip, ip, #4, 20	; 0x4000
   1219c:	ldr	pc, [ip, #1048]!	; 0x418

000121a0 <mycore_string_whitespace_from_begin@plt>:
   121a0:	add	ip, pc, #1048576	; 0x100000
   121a4:	add	ip, ip, #4, 20	; 0x4000
   121a8:	ldr	pc, [ip, #1040]!	; 0x410

000121ac <myhtml_tree_node_remove@plt>:
   121ac:	add	ip, pc, #1048576	; 0x100000
   121b0:	add	ip, ip, #4, 20	; 0x4000
   121b4:	ldr	pc, [ip, #1032]!	; 0x408

000121b8 <myhtml_collection_check_size@plt>:
   121b8:	add	ip, pc, #1048576	; 0x100000
   121bc:	add	ip, ip, #4, 20	; 0x4000
   121c0:	ldr	pc, [ip, #1024]!	; 0x400

000121c4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   121c4:	add	ip, pc, #1048576	; 0x100000
   121c8:	add	ip, ip, #4, 20	; 0x4000
   121cc:	ldr	pc, [ip, #1016]!	; 0x3f8

000121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   121d0:	add	ip, pc, #1048576	; 0x100000
   121d4:	add	ip, ip, #4, 20	; 0x4000
   121d8:	ldr	pc, [ip, #1008]!	; 0x3f0

000121dc <myhtml_tree_open_elements_clean@plt>:
   121dc:	add	ip, pc, #1048576	; 0x100000
   121e0:	add	ip, ip, #4, 20	; 0x4000
   121e4:	ldr	pc, [ip, #1000]!	; 0x3e8

000121e8 <myhtml_tree_node_insert_doctype@plt>:
   121e8:	add	ip, pc, #1048576	; 0x100000
   121ec:	add	ip, ip, #4, 20	; 0x4000
   121f0:	ldr	pc, [ip, #992]!	; 0x3e0

000121f4 <myhtml_tree_template_insertion_destroy@plt>:
   121f4:	add	ip, pc, #1048576	; 0x100000
   121f8:	add	ip, ip, #4, 20	; 0x4000
   121fc:	ldr	pc, [ip, #984]!	; 0x3d8

00012200 <myhtml_tag_destroy@plt>:
   12200:	add	ip, pc, #1048576	; 0x100000
   12204:	add	ip, ip, #4, 20	; 0x4000
   12208:	ldr	pc, [ip, #976]!	; 0x3d0

0001220c <mcsync_mutex_clean@plt>:
   1220c:	add	ip, pc, #1048576	; 0x100000
   12210:	add	ip, ip, #4, 20	; 0x4000
   12214:	ldr	pc, [ip, #968]!	; 0x3c8

00012218 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   12218:	add	ip, pc, #1048576	; 0x100000
   1221c:	add	ip, ip, #4, 20	; 0x4000
   12220:	ldr	pc, [ip, #960]!	; 0x3c0

00012224 <myhtml_stream_buffer_create@plt>:
   12224:	add	ip, pc, #1048576	; 0x100000
   12228:	add	ip, ip, #4, 20	; 0x4000
   1222c:	ldr	pc, [ip, #952]!	; 0x3b8

00012230 <myhtml_tree_appropriate_place_inserting@plt>:
   12230:	add	ip, pc, #1048576	; 0x100000
   12234:	add	ip, ip, #4, 20	; 0x4000
   12238:	ldr	pc, [ip, #944]!	; 0x3b0

0001223c <myencoding_codepoint_to_ascii_utf_8@plt>:
   1223c:	add	ip, pc, #1048576	; 0x100000
   12240:	add	ip, ip, #4, 20	; 0x4000
   12244:	ldr	pc, [ip, #936]!	; 0x3a8

00012248 <myhtml_token_attr_remove_by_name@plt>:
   12248:	add	ip, pc, #1048576	; 0x100000
   1224c:	add	ip, ip, #4, 20	; 0x4000
   12250:	ldr	pc, [ip, #928]!	; 0x3a0

00012254 <mycore_utils_mhash_rebuild_add_entry@plt>:
   12254:	add	ip, pc, #1048576	; 0x100000
   12258:	add	ip, ip, #4, 20	; 0x4000
   1225c:	ldr	pc, [ip, #920]!	; 0x398

00012260 <myhtml_token_attr_by_name@plt>:
   12260:	add	ip, pc, #1048576	; 0x100000
   12264:	add	ip, ip, #4, 20	; 0x4000
   12268:	ldr	pc, [ip, #912]!	; 0x390

0001226c <mcsync_unlock@plt>:
   1226c:	add	ip, pc, #1048576	; 0x100000
   12270:	add	ip, ip, #4, 20	; 0x4000
   12274:	ldr	pc, [ip, #904]!	; 0x388

00012278 <myhtml_tree_token_list_append@plt>:
   12278:	add	ip, pc, #1048576	; 0x100000
   1227c:	add	ip, ip, #4, 20	; 0x4000
   12280:	ldr	pc, [ip, #896]!	; 0x380

00012284 <mycore_utils_avl_tree_node_create_root@plt>:
   12284:	add	ip, pc, #1048576	; 0x100000
   12288:	add	ip, ip, #4, 20	; 0x4000
   1228c:	ldr	pc, [ip, #888]!	; 0x378

00012290 <mythread_queue_list_entry_make_stream@plt>:
   12290:	add	ip, pc, #1048576	; 0x100000
   12294:	add	ip, ip, #4, 20	; 0x4000
   12298:	ldr	pc, [ip, #880]!	; 0x370

0001229c <mycore_strncmp@plt>:
   1229c:	add	ip, pc, #1048576	; 0x100000
   122a0:	add	ip, ip, #4, 20	; 0x4000
   122a4:	ldr	pc, [ip, #872]!	; 0x368

000122a8 <mycore_utils_mhash_create_entry@plt>:
   122a8:	add	ip, pc, #1048576	; 0x100000
   122ac:	add	ip, ip, #4, 20	; 0x4000
   122b0:	ldr	pc, [ip, #864]!	; 0x360

000122b4 <myhtml_tree_element_in_scope@plt>:
   122b4:	add	ip, pc, #1048576	; 0x100000
   122b8:	add	ip, ip, #4, 20	; 0x4000
   122bc:	ldr	pc, [ip, #856]!	; 0x358

000122c0 <myencoding_index_gb18030_ranges_code_point@plt>:
   122c0:	add	ip, pc, #1048576	; 0x100000
   122c4:	add	ip, ip, #4, 20	; 0x4000
   122c8:	ldr	pc, [ip, #848]!	; 0x350

000122cc <fseek@plt>:
   122cc:	add	ip, pc, #1048576	; 0x100000
   122d0:	add	ip, ip, #4, 20	; 0x4000
   122d4:	ldr	pc, [ip, #840]!	; 0x348

000122d8 <myhtml_node_clone@plt>:
   122d8:	add	ip, pc, #1048576	; 0x100000
   122dc:	add	ip, ip, #4, 20	; 0x4000
   122e0:	ldr	pc, [ip, #832]!	; 0x340

000122e4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   122e4:	add	ip, pc, #1048576	; 0x100000
   122e8:	add	ip, ip, #4, 20	; 0x4000
   122ec:	ldr	pc, [ip, #824]!	; 0x338

000122f0 <pthread_attr_setdetachstate@plt>:
   122f0:	add	ip, pc, #1048576	; 0x100000
   122f4:	add	ip, ip, #4, 20	; 0x4000
   122f8:	ldr	pc, [ip, #816]!	; 0x330

000122fc <mchar_async_cache_delete@plt>:
   122fc:	add	ip, pc, #1048576	; 0x100000
   12300:	add	ip, ip, #4, 20	; 0x4000
   12304:	ldr	pc, [ip, #808]!	; 0x328

00012308 <mcobject_clean@plt>:
   12308:	add	ip, pc, #1048576	; 0x100000
   1230c:	add	ip, ip, #4, 20	; 0x4000
   12310:	ldr	pc, [ip, #800]!	; 0x320

00012314 <myhtml_token_node_clean@plt>:
   12314:	add	ip, pc, #1048576	; 0x100000
   12318:	add	ip, ip, #4, 20	; 0x4000
   1231c:	ldr	pc, [ip, #792]!	; 0x318

00012320 <myhtml_token_delete@plt>:
   12320:	add	ip, pc, #1048576	; 0x100000
   12324:	add	ip, ip, #4, 20	; 0x4000
   12328:	ldr	pc, [ip, #784]!	; 0x310

0001232c <strncmp@plt>:
   1232c:	add	ip, pc, #1048576	; 0x100000
   12330:	add	ip, ip, #4, 20	; 0x4000
   12334:	ldr	pc, [ip, #776]!	; 0x308

00012338 <mcsimple_get_by_absolute_position@plt>:
   12338:	add	ip, pc, #1048576	; 0x100000
   1233c:	add	ip, ip, #4, 20	; 0x4000
   12340:	ldr	pc, [ip, #768]!	; 0x300

00012344 <mcsync_mutex_try_lock@plt>:
   12344:	add	ip, pc, #1048576	; 0x100000
   12348:	add	ip, ip, #4, 20	; 0x4000
   1234c:	ldr	pc, [ip, #760]!	; 0x2f8

00012350 <mycore_utils_avl_tree_node_height@plt>:
   12350:	add	ip, pc, #1048576	; 0x100000
   12354:	add	ip, ip, #4, 20	; 0x4000
   12358:	ldr	pc, [ip, #752]!	; 0x2f0

0001235c <mycore_utils_avl_tree_node_clean@plt>:
   1235c:	add	ip, pc, #1048576	; 0x100000
   12360:	add	ip, ip, #4, 20	; 0x4000
   12364:	ldr	pc, [ip, #744]!	; 0x2e8

00012368 <myhtml_tree_clear_stack_back_table_context@plt>:
   12368:	add	ip, pc, #1048576	; 0x100000
   1236c:	add	ip, ip, #4, 20	; 0x4000
   12370:	ldr	pc, [ip, #736]!	; 0x2e0

00012374 <myhtml_tree_node_clone@plt>:
   12374:	add	ip, pc, #1048576	; 0x100000
   12378:	add	ip, ip, #4, 20	; 0x4000
   1237c:	ldr	pc, [ip, #728]!	; 0x2d8

00012380 <myhtml_tree_token_list_clean@plt>:
   12380:	add	ip, pc, #1048576	; 0x100000
   12384:	add	ip, ip, #4, 20	; 0x4000
   12388:	ldr	pc, [ip, #720]!	; 0x2d0

0001238c <myhtml_parser_stream@plt>:
   1238c:	add	ip, pc, #1048576	; 0x100000
   12390:	add	ip, ip, #4, 20	; 0x4000
   12394:	ldr	pc, [ip, #712]!	; 0x2c8

00012398 <myhtml_token_create@plt>:
   12398:	add	ip, pc, #1048576	; 0x100000
   1239c:	add	ip, ip, #4, 20	; 0x4000
   123a0:	ldr	pc, [ip, #704]!	; 0x2c0

000123a4 <myhtml_parser_token_data_to_string_lowercase@plt>:
   123a4:	add	ip, pc, #1048576	; 0x100000
   123a8:	add	ip, ip, #4, 20	; 0x4000
   123ac:	ldr	pc, [ip, #696]!	; 0x2b8

000123b0 <myencoding_detect_utf_8@plt>:
   123b0:	add	ip, pc, #1048576	; 0x100000
   123b4:	add	ip, ip, #4, 20	; 0x4000
   123b8:	ldr	pc, [ip, #688]!	; 0x2b0

000123bc <mcsync_spin_unlock@plt>:
   123bc:	add	ip, pc, #1048576	; 0x100000
   123c0:	add	ip, ip, #4, 20	; 0x4000
   123c4:	ldr	pc, [ip, #680]!	; 0x2a8

000123c8 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   123c8:	add	ip, pc, #1048576	; 0x100000
   123cc:	add	ip, ip, #4, 20	; 0x4000
   123d0:	ldr	pc, [ip, #672]!	; 0x2a0

000123d4 <mcsync_mutex_lock@plt>:
   123d4:	add	ip, pc, #1048576	; 0x100000
   123d8:	add	ip, ip, #4, 20	; 0x4000
   123dc:	ldr	pc, [ip, #664]!	; 0x298

000123e0 <myhtml_tree_open_elements_find@plt>:
   123e0:	add	ip, pc, #1048576	; 0x100000
   123e4:	add	ip, ip, #4, 20	; 0x4000
   123e8:	ldr	pc, [ip, #656]!	; 0x290

000123ec <mcobject_async_clean@plt>:
   123ec:	add	ip, pc, #1048576	; 0x100000
   123f0:	add	ip, ip, #4, 20	; 0x4000
   123f4:	ldr	pc, [ip, #648]!	; 0x288

000123f8 <mchar_async_mem_malloc@plt>:
   123f8:	add	ip, pc, #1048576	; 0x100000
   123fc:	add	ip, ip, #4, 20	; 0x4000
   12400:	ldr	pc, [ip, #640]!	; 0x280

00012404 <myhtml_data_process_string_append_char@plt>:
   12404:	add	ip, pc, #1048576	; 0x100000
   12408:	add	ip, ip, #4, 20	; 0x4000
   1240c:	ldr	pc, [ip, #632]!	; 0x278

00012410 <myhtml_tag_clean@plt>:
   12410:	add	ip, pc, #1048576	; 0x100000
   12414:	add	ip, ip, #4, 20	; 0x4000
   12418:	ldr	pc, [ip, #624]!	; 0x270

0001241c <mythread_thread_attr_destroy@plt>:
   1241c:	add	ip, pc, #1048576	; 0x100000
   12420:	add	ip, ip, #4, 20	; 0x4000
   12424:	ldr	pc, [ip, #616]!	; 0x268

00012428 <mycore_string_clean_all@plt>:
   12428:	add	ip, pc, #1048576	; 0x100000
   1242c:	add	ip, ip, #4, 20	; 0x4000
   12430:	ldr	pc, [ip, #608]!	; 0x260

00012434 <myhtml_tree_node_clean@plt>:
   12434:	add	ip, pc, #1048576	; 0x100000
   12438:	add	ip, ip, #4, 20	; 0x4000
   1243c:	ldr	pc, [ip, #600]!	; 0x258

00012440 <mythread_init@plt>:
   12440:	add	ip, pc, #1048576	; 0x100000
   12444:	add	ip, ip, #4, 20	; 0x4000
   12448:	ldr	pc, [ip, #592]!	; 0x250

Disassembly of section .text:

0001244c <mycore_incoming_buffer_add@@Base-0x124>:
   1244c:	ldr	r3, [pc, #20]	; 12468 <mythread_init@plt+0x28>
   12450:	ldr	r2, [pc, #20]	; 1246c <mythread_init@plt+0x2c>
   12454:	add	r3, pc, r3
   12458:	ldr	r2, [r3, r2]
   1245c:	cmp	r2, #0
   12460:	bxeq	lr
   12464:	b	11a14 <__gmon_start__@plt>
   12468:	andseq	r3, r0, r4, lsr #23
   1246c:	andeq	r0, r0, ip, lsl #16
   12470:	ldr	r0, [pc, #44]	; 124a4 <mythread_init@plt+0x64>
   12474:	ldr	r3, [pc, #44]	; 124a8 <mythread_init@plt+0x68>
   12478:	add	r0, pc, r0
   1247c:	add	r3, pc, r3
   12480:	cmp	r3, r0
   12484:	ldr	r3, [pc, #32]	; 124ac <mythread_init@plt+0x6c>
   12488:	add	r3, pc, r3
   1248c:	bxeq	lr
   12490:	ldr	r2, [pc, #24]	; 124b0 <mythread_init@plt+0x70>
   12494:	ldr	r3, [r3, r2]
   12498:	cmp	r3, #0
   1249c:	bxeq	lr
   124a0:	bx	r3
   124a4:	andseq	r4, r0, r8, ror #9
   124a8:	andseq	r4, r0, r4, ror #9
   124ac:	andseq	r3, r0, r0, ror fp
   124b0:	ldrdeq	r0, [r0], -r8
   124b4:	ldr	r0, [pc, #56]	; 124f4 <mythread_init@plt+0xb4>
   124b8:	ldr	r3, [pc, #56]	; 124f8 <mythread_init@plt+0xb8>
   124bc:	add	r0, pc, r0
   124c0:	add	r3, pc, r3
   124c4:	sub	r1, r3, r0
   124c8:	ldr	r3, [pc, #44]	; 124fc <mythread_init@plt+0xbc>
   124cc:	asr	r1, r1, #2
   124d0:	add	r3, pc, r3
   124d4:	add	r1, r1, r1, lsr #31
   124d8:	asrs	r1, r1, #1
   124dc:	bxeq	lr
   124e0:	ldr	r2, [pc, #24]	; 12500 <mythread_init@plt+0xc0>
   124e4:	ldr	r3, [r3, r2]
   124e8:	cmp	r3, #0
   124ec:	bxeq	lr
   124f0:	bx	r3
   124f4:	andseq	r4, r0, r4, lsr #9
   124f8:	andseq	r4, r0, r0, lsr #9
   124fc:	andseq	r3, r0, r8, lsr #22
   12500:	andeq	r0, r0, ip, lsl r9
   12504:	ldr	r3, [pc, #76]	; 12558 <mythread_init@plt+0x118>
   12508:	ldr	r2, [pc, #76]	; 1255c <mythread_init@plt+0x11c>
   1250c:	add	r3, pc, r3
   12510:	add	r2, pc, r2
   12514:	ldrb	r3, [r3]
   12518:	cmp	r3, #0
   1251c:	bxne	lr
   12520:	ldr	r3, [pc, #56]	; 12560 <mythread_init@plt+0x120>
   12524:	push	{r4, lr}
   12528:	ldr	r3, [r2, r3]
   1252c:	cmp	r3, #0
   12530:	beq	12540 <mythread_init@plt+0x100>
   12534:	ldr	r3, [pc, #40]	; 12564 <mythread_init@plt+0x124>
   12538:	ldr	r0, [pc, r3]
   1253c:	bl	11204 <__cxa_finalize@plt>
   12540:	bl	12470 <mythread_init@plt+0x30>
   12544:	ldr	r3, [pc, #28]	; 12568 <mythread_init@plt+0x128>
   12548:	mov	r2, #1
   1254c:	add	r3, pc, r3
   12550:	strb	r2, [r3]
   12554:	pop	{r4, pc}
   12558:	andseq	r4, r0, r4, asr r4
   1255c:	andseq	r3, r0, r8, ror #21
   12560:	andeq	r0, r0, r4, asr #13
   12564:	andseq	r4, r0, r4, lsr #8
   12568:	andseq	r4, r0, r4, lsl r4
   1256c:	b	124b4 <mythread_init@plt+0x74>

00012570 <mycore_incoming_buffer_add@@Base>:
   12570:	push	{r4, r5, r6, r7, fp, lr}
   12574:	add	fp, sp, #16
   12578:	mov	r5, r3
   1257c:	mov	r6, r2
   12580:	mov	r4, r0
   12584:	mov	r7, #0
   12588:	mov	r0, r1
   1258c:	mov	r1, #0
   12590:	bl	11e58 <mcobject_malloc@plt>
   12594:	stm	r0, {r6, r7}
   12598:	str	r5, [r0, #8]
   1259c:	cmp	r4, #0
   125a0:	beq	125bc <mycore_incoming_buffer_add@@Base+0x4c>
   125a4:	ldr	r1, [r4, #8]
   125a8:	ldr	r2, [r4, #12]
   125ac:	add	r1, r1, r2
   125b0:	str	r1, [r0, #12]
   125b4:	str	r0, [r4, #20]
   125b8:	b	125c0 <mycore_incoming_buffer_add@@Base+0x50>
   125bc:	str	r7, [r0, #12]
   125c0:	mov	r1, #0
   125c4:	str	r4, [r0, #16]
   125c8:	str	r1, [r0, #20]
   125cc:	pop	{r4, r5, r6, r7, fp, pc}

000125d0 <mycore_incoming_buffer_clean@@Base>:
   125d0:	mov	r1, #0
   125d4:	vmov.i32	q8, #0	; 0x00000000
   125d8:	str	r1, [r0, #16]
   125dc:	mov	r2, #20
   125e0:	vst1.32	{d16-d17}, [r0], r2
   125e4:	str	r1, [r0]
   125e8:	bx	lr

000125ec <mycore_incoming_buffer_split@@Base>:
   125ec:	push	{r4, r5, r6, sl, fp, lr}
   125f0:	add	fp, sp, #16
   125f4:	mov	r4, r0
   125f8:	ldr	r0, [r0, #12]
   125fc:	sub	r5, r2, r0
   12600:	mov	r6, #0
   12604:	mov	r0, r1
   12608:	mov	r1, #0
   1260c:	bl	11e58 <mcobject_malloc@plt>
   12610:	ldr	r1, [r4, #8]
   12614:	sub	r1, r1, r5
   12618:	str	r1, [r0, #4]
   1261c:	str	r1, [r0, #8]
   12620:	ldr	r1, [r4]
   12624:	add	r1, r1, r5
   12628:	str	r1, [r0]
   1262c:	ldr	r1, [r4, #12]
   12630:	str	r4, [r0, #16]
   12634:	str	r6, [r0, #20]
   12638:	add	r1, r1, r5
   1263c:	str	r1, [r0, #12]
   12640:	str	r0, [r4, #20]
   12644:	str	r5, [r4, #4]
   12648:	str	r5, [r4, #8]
   1264c:	pop	{r4, r5, r6, sl, fp, pc}

00012650 <mycore_incoming_buffer_find_by_position@@Base>:
   12650:	ldr	r2, [r0, #12]
   12654:	cmp	r2, r1
   12658:	bcs	12680 <mycore_incoming_buffer_find_by_position@@Base+0x30>
   1265c:	ldr	r2, [r0, #8]
   12660:	ldr	r3, [r0, #12]
   12664:	add	r2, r2, r3
   12668:	cmp	r2, r1
   1266c:	bcs	1269c <mycore_incoming_buffer_find_by_position@@Base+0x4c>
   12670:	ldr	r0, [r0, #20]
   12674:	cmp	r0, #0
   12678:	bne	1265c <mycore_incoming_buffer_find_by_position@@Base+0xc>
   1267c:	b	12698 <mycore_incoming_buffer_find_by_position@@Base+0x48>
   12680:	ldr	r2, [r0, #12]
   12684:	cmp	r2, r1
   12688:	bxls	lr
   1268c:	ldr	r0, [r0, #16]
   12690:	cmp	r0, #0
   12694:	bne	12680 <mycore_incoming_buffer_find_by_position@@Base+0x30>
   12698:	mov	r0, #0
   1269c:	bx	lr

000126a0 <mycore_incoming_buffer_data@@Base>:
   126a0:	ldr	r0, [r0]
   126a4:	bx	lr

000126a8 <mycore_incoming_buffer_length@@Base>:
   126a8:	ldr	r0, [r0, #4]
   126ac:	bx	lr

000126b0 <mycore_incoming_buffer_size@@Base>:
   126b0:	ldr	r0, [r0, #8]
   126b4:	bx	lr

000126b8 <mycore_incoming_buffer_offset@@Base>:
   126b8:	ldr	r0, [r0, #12]
   126bc:	bx	lr

000126c0 <mycore_incoming_buffer_relative_begin@@Base>:
   126c0:	ldr	r0, [r0, #12]
   126c4:	sub	r0, r1, r0
   126c8:	bx	lr

000126cc <mycore_incoming_buffer_available_length@@Base>:
   126cc:	add	r3, r2, r1
   126d0:	ldr	r0, [r0, #8]
   126d4:	cmp	r3, r0
   126d8:	subhi	r2, r0, r1
   126dc:	mov	r0, r2
   126e0:	bx	lr

000126e4 <mycore_incoming_buffer_next@@Base>:
   126e4:	ldr	r0, [r0, #20]
   126e8:	bx	lr

000126ec <mycore_incoming_buffer_prev@@Base>:
   126ec:	ldr	r0, [r0, #16]
   126f0:	bx	lr

000126f4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   126f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   126f8:	add	fp, sp, #24
   126fc:	ldr	r2, [r1]
   12700:	ldr	r3, [r0]
   12704:	ldr	r7, [r3, #8]
   12708:	cmp	r2, r7
   1270c:	movcs	r2, #0
   12710:	strcs	r2, [r1]
   12714:	ldrcs	r3, [r3, #20]
   12718:	mov	r2, #0
   1271c:	cmp	r3, #0
   12720:	beq	127a4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb0>
   12724:	ldr	r6, [r1]
   12728:	ldr	ip, [r3]
   1272c:	ldrb	r7, [ip, r6]
   12730:	sub	r5, r7, #48	; 0x30
   12734:	cmp	r5, #9
   12738:	bhi	127a8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb4>
   1273c:	mov	lr, #0
   12740:	mov	r4, #1
   12744:	ldr	r8, [pc, #104]	; 127b4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xc0>
   12748:	add	r8, pc, r8
   1274c:	mov	r2, #0
   12750:	add	r6, r6, #1
   12754:	str	r6, [r1]
   12758:	ldrb	r7, [r8, r7]
   1275c:	orr	r2, r7, r2, lsl #4
   12760:	ldr	r7, [r3, #8]
   12764:	cmp	r6, r7
   12768:	bcc	12784 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x90>
   1276c:	ldr	r6, [r3, #20]
   12770:	cmp	r6, #0
   12774:	beq	127a8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb4>
   12778:	str	lr, [r1]
   1277c:	ldr	ip, [r3]
   12780:	mov	r3, r6
   12784:	cmp	r4, #5
   12788:	ldrls	r6, [r1]
   1278c:	ldrbls	r7, [ip, r6]
   12790:	subls	r5, r7, #48	; 0x30
   12794:	addls	r4, r4, #1
   12798:	cmpls	r5, #10
   1279c:	bcc	12750 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x5c>
   127a0:	b	127a8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb4>
   127a4:	mov	r3, #0
   127a8:	str	r3, [r0]
   127ac:	mov	r0, r2
   127b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   127b4:	ldrdeq	ip, [r1], -r8

000127b8 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   127b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127bc:	add	fp, sp, #28
   127c0:	sub	sp, sp, #4
   127c4:	mov	r6, r3
   127c8:	mov	r4, r2
   127cc:	mov	r7, r1
   127d0:	mov	r9, r0
   127d4:	ldr	r0, [r0]
   127d8:	str	r0, [sp]
   127dc:	ldr	r1, [r0, #8]
   127e0:	ldr	r2, [r3]
   127e4:	cmp	r2, r1
   127e8:	bcc	12808 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x50>
   127ec:	ldr	r1, [r0, #20]
   127f0:	cmp	r1, #0
   127f4:	beq	128e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x128>
   127f8:	mov	r1, #0
   127fc:	str	r1, [r6]
   12800:	ldr	r0, [r0, #20]
   12804:	str	r0, [sp]
   12808:	cmp	r4, #0
   1280c:	beq	128d0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x118>
   12810:	ldr	r0, [sp]
   12814:	ldr	r0, [r0]
   12818:	mov	r8, sp
   1281c:	ldr	sl, [pc, #200]	; 128ec <mycore_incoming_buffer_escaped_case_cmp@@Base+0x134>
   12820:	add	sl, pc, sl
   12824:	mov	r5, #0
   12828:	ldr	r1, [r6]
   1282c:	ldrb	r2, [r0, r1]
   12830:	cmp	r2, #92	; 0x5c
   12834:	bne	12874 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xbc>
   12838:	add	r0, r1, #1
   1283c:	str	r0, [r6]
   12840:	mov	r0, r8
   12844:	mov	r1, r6
   12848:	bl	1166c <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   1284c:	cmp	r0, #255	; 0xff
   12850:	bhi	128d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x11c>
   12854:	ldrb	r0, [sl, r0]
   12858:	ldrb	r1, [r7, r5]
   1285c:	ldrb	r1, [sl, r1]
   12860:	cmp	r0, r1
   12864:	bne	128d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x11c>
   12868:	ldr	r0, [sp]
   1286c:	ldr	r0, [r0]
   12870:	b	12890 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd8>
   12874:	ldrb	r2, [sl, r2]
   12878:	ldrb	r3, [r7, r5]
   1287c:	ldrb	r3, [sl, r3]
   12880:	cmp	r2, r3
   12884:	bne	128d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x11c>
   12888:	add	r1, r1, #1
   1288c:	str	r1, [r6]
   12890:	add	r5, r5, #1
   12894:	ldr	r2, [r6]
   12898:	ldr	r1, [sp]
   1289c:	ldr	r3, [r1, #8]
   128a0:	cmp	r2, r3
   128a4:	bcc	128c4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x10c>
   128a8:	ldr	r0, [r1, #20]
   128ac:	cmp	r0, #0
   128b0:	beq	128d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x11c>
   128b4:	str	r0, [sp]
   128b8:	ldr	r0, [r0]
   128bc:	mov	r1, #0
   128c0:	str	r1, [r6]
   128c4:	cmp	r5, r4
   128c8:	bcc	12828 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x70>
   128cc:	b	128d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x11c>
   128d0:	mov	r5, #0
   128d4:	ldr	r0, [sp]
   128d8:	str	r0, [r9]
   128dc:	sub	r4, r4, r5
   128e0:	mov	r0, r4
   128e4:	sub	sp, fp, #28
   128e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128ec:	andeq	ip, r1, r0, lsl #24

000128f0 <mycore_string_init@@Base>:
   128f0:	push	{r4, r5, r6, r7, fp, lr}
   128f4:	add	fp, sp, #16
   128f8:	mov	r4, r3
   128fc:	mov	r5, r2
   12900:	mov	r6, r1
   12904:	mov	r7, r0
   12908:	mov	r2, r3
   1290c:	bl	11d2c <mchar_async_malloc@plt>
   12910:	stm	r5, {r0, r4}
   12914:	str	r7, [r5, #12]
   12918:	str	r6, [r5, #16]
   1291c:	mov	r0, r5
   12920:	bl	120d4 <mycore_string_clean@plt>
   12924:	ldr	r0, [r5]
   12928:	pop	{r4, r5, r6, r7, fp, pc}

0001292c <mycore_string_clean@@Base>:
   1292c:	mov	r1, #0
   12930:	str	r1, [r0, #8]
   12934:	bx	lr

00012938 <mycore_string_clean_all@@Base>:
   12938:	vmov.i32	q8, #0	; 0x00000000
   1293c:	vst1.32	{d16-d17}, [r0]!
   12940:	mov	r1, #0
   12944:	str	r1, [r0]
   12948:	bx	lr

0001294c <mycore_string_destroy@@Base>:
   1294c:	push	{r4, r5, r6, sl, fp, lr}
   12950:	add	fp, sp, #16
   12954:	mov	r4, #0
   12958:	cmp	r0, #0
   1295c:	beq	12998 <mycore_string_destroy@@Base+0x4c>
   12960:	mov	r6, r1
   12964:	mov	r5, r0
   12968:	ldr	r2, [r0]
   1296c:	cmp	r2, #0
   12970:	ldrne	r0, [r5, #12]
   12974:	cmpne	r0, #0
   12978:	beq	12984 <mycore_string_destroy@@Base+0x38>
   1297c:	ldr	r1, [r5, #16]
   12980:	bl	11b4c <mchar_async_free@plt>
   12984:	cmp	r6, #0
   12988:	moveq	r0, r5
   1298c:	popeq	{r4, r5, r6, sl, fp, pc}
   12990:	mov	r0, r5
   12994:	bl	12188 <mycore_free@plt>
   12998:	mov	r0, r4
   1299c:	pop	{r4, r5, r6, sl, fp, pc}

000129a0 <mycore_string_raw_clean@@Base>:
   129a0:	mov	r1, #0
   129a4:	str	r1, [r0, #8]
   129a8:	bx	lr

000129ac <mycore_string_raw_clean_all@@Base>:
   129ac:	mov	r1, #0
   129b0:	str	r1, [r0]
   129b4:	str	r1, [r0, #4]
   129b8:	str	r1, [r0, #8]
   129bc:	bx	lr

000129c0 <mycore_string_raw_destroy@@Base>:
   129c0:	push	{r4, r5, r6, sl, fp, lr}
   129c4:	add	fp, sp, #16
   129c8:	mov	r4, #0
   129cc:	cmp	r0, #0
   129d0:	beq	12a08 <mycore_string_raw_destroy@@Base+0x48>
   129d4:	mov	r6, r1
   129d8:	mov	r5, r0
   129dc:	ldr	r0, [r0]
   129e0:	cmp	r0, #0
   129e4:	beq	129f4 <mycore_string_raw_destroy@@Base+0x34>
   129e8:	bl	12188 <mycore_free@plt>
   129ec:	mov	r0, #0
   129f0:	str	r0, [r5]
   129f4:	cmp	r6, #0
   129f8:	moveq	r0, r5
   129fc:	popeq	{r4, r5, r6, sl, fp, pc}
   12a00:	mov	r0, r5
   12a04:	bl	12188 <mycore_free@plt>
   12a08:	mov	r0, r4
   12a0c:	pop	{r4, r5, r6, sl, fp, pc}

00012a10 <mycore_string_realloc@@Base>:
   12a10:	push	{r4, r5, r6, sl, fp, lr}
   12a14:	add	fp, sp, #16
   12a18:	sub	sp, sp, #8
   12a1c:	mov	r4, #0
   12a20:	cmp	r0, #0
   12a24:	beq	12a54 <mycore_string_realloc@@Base+0x44>
   12a28:	mov	r5, r1
   12a2c:	mov	r6, r0
   12a30:	ldr	r2, [r0]
   12a34:	ldr	r3, [r0, #8]
   12a38:	ldr	r0, [r0, #12]
   12a3c:	ldr	r1, [r6, #16]
   12a40:	str	r5, [sp]
   12a44:	bl	11450 <mchar_async_realloc@plt>
   12a48:	cmp	r0, #0
   12a4c:	stmne	r6, {r0, r5}
   12a50:	movne	r4, r0
   12a54:	mov	r0, r4
   12a58:	sub	sp, fp, #16
   12a5c:	pop	{r4, r5, r6, sl, fp, pc}

00012a60 <mycore_string_data_alloc@@Base>:
   12a60:	b	11d2c <mchar_async_malloc@plt>

00012a64 <mycore_string_data_realloc@@Base>:
   12a64:	b	11450 <mchar_async_realloc@plt>

00012a68 <mycore_string_data_free@@Base>:
   12a68:	b	11b4c <mchar_async_free@plt>

00012a6c <mycore_string_data@@Base>:
   12a6c:	cmp	r0, #0
   12a70:	ldrne	r0, [r0]
   12a74:	moveq	r0, #0
   12a78:	bx	lr

00012a7c <mycore_string_length@@Base>:
   12a7c:	cmp	r0, #0
   12a80:	ldrne	r0, [r0, #8]
   12a84:	moveq	r0, #0
   12a88:	bx	lr

00012a8c <mycore_string_size@@Base>:
   12a8c:	cmp	r0, #0
   12a90:	ldrne	r0, [r0, #4]
   12a94:	moveq	r0, #0
   12a98:	bx	lr

00012a9c <mycore_string_data_set@@Base>:
   12a9c:	cmp	r0, #0
   12aa0:	strne	r1, [r0]
   12aa4:	moveq	r1, #0
   12aa8:	mov	r0, r1
   12aac:	bx	lr

00012ab0 <mycore_string_size_set@@Base>:
   12ab0:	cmp	r0, #0
   12ab4:	strne	r1, [r0, #4]
   12ab8:	moveq	r1, #0
   12abc:	mov	r0, r1
   12ac0:	bx	lr

00012ac4 <mycore_string_length_set@@Base>:
   12ac4:	cmp	r0, #0
   12ac8:	strne	r1, [r0, #8]
   12acc:	moveq	r1, #0
   12ad0:	mov	r0, r1
   12ad4:	bx	lr

00012ad8 <mycore_string_append@@Base>:
   12ad8:	push	{r4, r5, r6, sl, fp, lr}
   12adc:	add	fp, sp, #16
   12ae0:	mov	r4, r2
   12ae4:	mov	r6, r1
   12ae8:	mov	r5, r0
   12aec:	ldr	r0, [r0, #4]
   12af0:	ldr	r1, [r5, #8]
   12af4:	add	r1, r2, r1
   12af8:	add	r1, r1, #1
   12afc:	cmp	r1, r0
   12b00:	movcs	r0, r5
   12b04:	blcs	11d80 <mycore_string_realloc@plt>
   12b08:	ldr	r0, [r5]
   12b0c:	ldr	r1, [r5, #8]
   12b10:	add	r0, r0, r1
   12b14:	mov	r1, r6
   12b18:	mov	r2, r4
   12b1c:	bl	113f0 <memcpy@plt>
   12b20:	ldr	r0, [r5]
   12b24:	ldr	r1, [r5, #8]
   12b28:	add	r1, r1, r4
   12b2c:	str	r1, [r5, #8]
   12b30:	mov	r2, #0
   12b34:	strb	r2, [r0, r1]
   12b38:	pop	{r4, r5, r6, sl, fp, pc}

00012b3c <mycore_string_append_one@@Base>:
   12b3c:	push	{r4, r5, fp, lr}
   12b40:	add	fp, sp, #8
   12b44:	mov	r5, r1
   12b48:	mov	r4, r0
   12b4c:	ldr	r1, [r0, #4]
   12b50:	ldr	r0, [r0, #8]
   12b54:	add	r2, r0, #2
   12b58:	cmp	r2, r1
   12b5c:	bcc	12b6c <mycore_string_append_one@@Base+0x30>
   12b60:	add	r1, r0, #3
   12b64:	mov	r0, r4
   12b68:	bl	11d80 <mycore_string_realloc@plt>
   12b6c:	ldr	r0, [r4]
   12b70:	ldr	r1, [r4, #8]
   12b74:	strb	r5, [r0, r1]
   12b78:	ldr	r0, [r4]
   12b7c:	ldr	r1, [r4, #8]
   12b80:	add	r1, r1, #1
   12b84:	str	r1, [r4, #8]
   12b88:	mov	r2, #0
   12b8c:	strb	r2, [r0, r1]
   12b90:	pop	{r4, r5, fp, pc}

00012b94 <mycore_string_append_lowercase@@Base>:
   12b94:	push	{r4, r5, r6, sl, fp, lr}
   12b98:	add	fp, sp, #16
   12b9c:	mov	r4, r2
   12ba0:	mov	r6, r1
   12ba4:	mov	r5, r0
   12ba8:	ldr	r0, [r0, #4]
   12bac:	ldr	r1, [r5, #8]
   12bb0:	add	r1, r2, r1
   12bb4:	add	r1, r1, #1
   12bb8:	cmp	r1, r0
   12bbc:	movcs	r0, r5
   12bc0:	blcs	11d80 <mycore_string_realloc@plt>
   12bc4:	ldr	r0, [r5]
   12bc8:	ldr	r1, [r5, #8]
   12bcc:	add	ip, r0, r1
   12bd0:	cmp	r4, #0
   12bd4:	beq	12bfc <mycore_string_append_lowercase@@Base+0x68>
   12bd8:	ldr	r1, [pc, #52]	; 12c14 <mycore_string_append_lowercase@@Base+0x80>
   12bdc:	add	r1, pc, r1
   12be0:	mov	r2, r4
   12be4:	mov	r3, ip
   12be8:	ldrb	r0, [r6], #1
   12bec:	ldrb	r0, [r1, r0]
   12bf0:	strb	r0, [r3], #1
   12bf4:	subs	r2, r2, #1
   12bf8:	bne	12be8 <mycore_string_append_lowercase@@Base+0x54>
   12bfc:	mov	r0, #0
   12c00:	strb	r0, [ip, r4]
   12c04:	ldr	r0, [r5, #8]
   12c08:	add	r0, r0, r4
   12c0c:	str	r0, [r5, #8]
   12c10:	pop	{r4, r5, r6, sl, fp, pc}
   12c14:	andeq	ip, r1, r4, asr #18

00012c18 <mycore_string_copy@@Base>:
   12c18:	ldr	r3, [r1]
   12c1c:	ldr	r2, [r1, #8]
   12c20:	mov	r1, r3
   12c24:	b	12ad8 <mycore_string_append@@Base>

00012c28 <mycore_string_raw_copy@@Base>:
   12c28:	mov	r3, #0
   12c2c:	strb	r3, [r0, r2]
   12c30:	cmp	r2, #0
   12c34:	beq	12c50 <mycore_string_raw_copy@@Base+0x28>
   12c38:	sub	r1, r1, #1
   12c3c:	sub	r0, r0, #1
   12c40:	ldrb	r3, [r1, r2]
   12c44:	strb	r3, [r0, r2]
   12c48:	subs	r2, r2, #1
   12c4c:	bne	12c40 <mycore_string_raw_copy@@Base+0x18>
   12c50:	mov	r0, #0
   12c54:	bx	lr

00012c58 <mycore_string_raw_set_replacement_character@@Base>:
   12c58:	ldr	r2, [r0]
   12c5c:	mov	r3, #239	; 0xef
   12c60:	strb	r3, [r2, r1]
   12c64:	ldr	r2, [r0]
   12c68:	add	r2, r2, r1
   12c6c:	mov	r3, #191	; 0xbf
   12c70:	strb	r3, [r2, #1]
   12c74:	ldr	r0, [r0]
   12c78:	add	r0, r0, r1
   12c7c:	mov	r1, #189	; 0xbd
   12c80:	strb	r1, [r0, #2]
   12c84:	mov	r0, #3
   12c88:	bx	lr

00012c8c <mycore_string_append_with_replacement_null_characters@@Base>:
   12c8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c90:	add	fp, sp, #24
   12c94:	mov	r5, r2
   12c98:	mov	r6, r1
   12c9c:	mov	r4, r0
   12ca0:	ldr	r0, [r0, #4]
   12ca4:	ldr	r1, [r4, #8]
   12ca8:	add	r1, r2, r1
   12cac:	add	r1, r1, #1
   12cb0:	cmp	r1, r0
   12cb4:	movcs	r0, r4
   12cb8:	blcs	11d80 <mycore_string_realloc@plt>
   12cbc:	cmp	r5, #0
   12cc0:	beq	12d44 <mycore_string_append_with_replacement_null_characters@@Base+0xb8>
   12cc4:	ldr	r0, [r4]
   12cc8:	mov	r8, #239	; 0xef
   12ccc:	mov	r7, #191	; 0xbf
   12cd0:	ldrb	r1, [r6]
   12cd4:	cmp	r1, #0
   12cd8:	beq	12ce8 <mycore_string_append_with_replacement_null_characters@@Base+0x5c>
   12cdc:	ldr	r2, [r4, #8]
   12ce0:	add	r2, r0, r2
   12ce4:	b	12d28 <mycore_string_append_with_replacement_null_characters@@Base+0x9c>
   12ce8:	ldr	r0, [r4, #4]
   12cec:	add	r1, r0, #5
   12cf0:	mov	r0, r4
   12cf4:	bl	11d80 <mycore_string_realloc@plt>
   12cf8:	ldr	r0, [r4]
   12cfc:	ldr	r1, [r4, #8]
   12d00:	strb	r8, [r0, r1]
   12d04:	ldr	r1, [r4, #8]
   12d08:	add	r1, r1, #1
   12d0c:	str	r1, [r4, #8]
   12d10:	strb	r7, [r0, r1]
   12d14:	ldr	r1, [r4, #8]
   12d18:	add	r1, r1, #1
   12d1c:	str	r1, [r4, #8]
   12d20:	add	r2, r0, r1
   12d24:	mov	r1, #189	; 0xbd
   12d28:	strb	r1, [r2]
   12d2c:	ldr	r1, [r4, #8]
   12d30:	add	r1, r1, #1
   12d34:	str	r1, [r4, #8]
   12d38:	subs	r5, r5, #1
   12d3c:	add	r6, r6, #1
   12d40:	bne	12cd0 <mycore_string_append_with_replacement_null_characters@@Base+0x44>
   12d44:	ldr	r0, [r4]
   12d48:	ldr	r1, [r4, #8]
   12d4c:	mov	r2, #0
   12d50:	strb	r2, [r0, r1]
   12d54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012d58 <mycore_string_stay_only_whitespace@@Base>:
   12d58:	push	{r4, r5, fp, lr}
   12d5c:	add	fp, sp, #8
   12d60:	ldr	r1, [r0, #8]
   12d64:	cmp	r1, #0
   12d68:	beq	12db8 <mycore_string_stay_only_whitespace@@Base+0x60>
   12d6c:	ldr	r1, [r0]
   12d70:	mov	r3, #0
   12d74:	mov	ip, #1
   12d78:	movw	lr, #27
   12d7c:	movt	lr, #128	; 0x80
   12d80:	mov	r2, #0
   12d84:	ldrb	r4, [r1, r3]
   12d88:	sub	r5, r4, #9
   12d8c:	cmp	r5, #23
   12d90:	bhi	12da0 <mycore_string_stay_only_whitespace@@Base+0x48>
   12d94:	tst	lr, ip, lsl r5
   12d98:	strbne	r4, [r1, r2]
   12d9c:	addne	r2, r2, #1
   12da0:	ldr	r4, [r0, #8]
   12da4:	add	r3, r3, #1
   12da8:	cmp	r3, r4
   12dac:	bcc	12d84 <mycore_string_stay_only_whitespace@@Base+0x2c>
   12db0:	str	r2, [r0, #8]
   12db4:	pop	{r4, r5, fp, pc}
   12db8:	mov	r2, #0
   12dbc:	str	r2, [r0, #8]
   12dc0:	pop	{r4, r5, fp, pc}

00012dc4 <mycore_string_crop_whitespace_from_begin@@Base>:
   12dc4:	push	{r4, r5, fp, lr}
   12dc8:	add	fp, sp, #8
   12dcc:	mov	r4, r0
   12dd0:	ldr	r0, [r0, #8]
   12dd4:	cmp	r0, #0
   12dd8:	beq	12e34 <mycore_string_crop_whitespace_from_begin@@Base+0x70>
   12ddc:	ldr	r0, [r4]
   12de0:	mov	r5, #0
   12de4:	mov	r1, #1
   12de8:	movw	r2, #27
   12dec:	movt	r2, #128	; 0x80
   12df0:	ldrb	r3, [r0, r5]
   12df4:	sub	r3, r3, #9
   12df8:	cmp	r3, #23
   12dfc:	bhi	12e1c <mycore_string_crop_whitespace_from_begin@@Base+0x58>
   12e00:	tst	r2, r1, lsl r3
   12e04:	beq	12e1c <mycore_string_crop_whitespace_from_begin@@Base+0x58>
   12e08:	ldr	r3, [r4, #8]
   12e0c:	add	r5, r5, #1
   12e10:	cmp	r5, r3
   12e14:	bcc	12df0 <mycore_string_crop_whitespace_from_begin@@Base+0x2c>
   12e18:	b	12e24 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   12e1c:	cmp	r5, #0
   12e20:	beq	12e34 <mycore_string_crop_whitespace_from_begin@@Base+0x70>
   12e24:	mov	r1, r5
   12e28:	bl	12020 <mchar_async_crop_first_chars_without_cache@plt>
   12e2c:	str	r0, [r4]
   12e30:	b	12e38 <mycore_string_crop_whitespace_from_begin@@Base+0x74>
   12e34:	mov	r5, #0
   12e38:	ldr	r0, [r4, #8]
   12e3c:	sub	r0, r0, r5
   12e40:	str	r0, [r4, #8]
   12e44:	mov	r0, r5
   12e48:	pop	{r4, r5, fp, pc}

00012e4c <mycore_string_whitespace_from_begin@@Base>:
   12e4c:	push	{fp, lr}
   12e50:	mov	fp, sp
   12e54:	mov	r1, r0
   12e58:	ldr	r0, [r0, #8]
   12e5c:	cmp	r0, #0
   12e60:	moveq	r0, #0
   12e64:	popeq	{fp, pc}
   12e68:	ldr	r2, [r1]
   12e6c:	mov	r0, #0
   12e70:	mov	ip, #1
   12e74:	movw	lr, #27
   12e78:	movt	lr, #128	; 0x80
   12e7c:	ldrb	r3, [r2, r0]
   12e80:	sub	r3, r3, #9
   12e84:	cmp	r3, #23
   12e88:	bhi	12ea4 <mycore_string_whitespace_from_begin@@Base+0x58>
   12e8c:	tst	lr, ip, lsl r3
   12e90:	popeq	{fp, pc}
   12e94:	ldr	r3, [r1, #8]
   12e98:	add	r0, r0, #1
   12e9c:	cmp	r0, r3
   12ea0:	bcc	12e7c <mycore_string_whitespace_from_begin@@Base+0x30>
   12ea4:	pop	{fp, pc}

00012ea8 <mythread_create@@Base>:
   12ea8:	mov	r0, #1
   12eac:	mov	r1, #40	; 0x28
   12eb0:	b	113a8 <mycore_calloc@plt>

00012eb4 <mythread_init@@Base>:
   12eb4:	push	{r4, sl, fp, lr}
   12eb8:	add	fp, sp, #8
   12ebc:	cmp	r2, #0
   12ec0:	moveq	r0, #1
   12ec4:	popeq	{r4, sl, fp, pc}
   12ec8:	mov	r4, r0
   12ecc:	mov	r0, #0
   12ed0:	stmib	r4, {r0, r2, r3}
   12ed4:	str	r1, [r4, #32]
   12ed8:	mov	r0, r2
   12edc:	mov	r1, #40	; 0x28
   12ee0:	bl	113a8 <mycore_calloc@plt>
   12ee4:	str	r0, [r4]
   12ee8:	cmp	r0, #0
   12eec:	moveq	r0, #2
   12ef0:	popeq	{r4, sl, fp, pc}
   12ef4:	mov	r0, r4
   12ef8:	bl	11324 <mythread_thread_attr_init@plt>
   12efc:	str	r0, [r4, #20]
   12f00:	cmp	r0, #0
   12f04:	moveq	r0, #12
   12f08:	popeq	{r4, sl, fp, pc}
   12f0c:	mov	r0, r4
   12f10:	bl	11174 <mythread_nanosleep_create@plt>
   12f14:	str	r0, [r4, #24]
   12f18:	mov	r0, #0
   12f1c:	pop	{r4, sl, fp, pc}

00012f20 <mythread_clean@@Base>:
   12f20:	push	{r4, sl, fp, lr}
   12f24:	add	fp, sp, #8
   12f28:	mov	r4, r0
   12f2c:	ldr	r1, [r0, #20]
   12f30:	bl	1184c <mythread_thread_attr_clean@plt>
   12f34:	ldr	r0, [r4, #24]
   12f38:	bl	1112c <mythread_nanosleep_clean@plt>
   12f3c:	mov	r0, #0
   12f40:	str	r0, [r4, #28]
   12f44:	pop	{r4, sl, fp, pc}

00012f48 <mythread_destroy@@Base>:
   12f48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f4c:	add	fp, sp, #24
   12f50:	mov	r4, #0
   12f54:	cmp	r0, #0
   12f58:	beq	12fc4 <mythread_destroy@@Base+0x7c>
   12f5c:	mov	r8, r3
   12f60:	mov	r5, r0
   12f64:	ldr	r0, [r0]
   12f68:	cmp	r0, #0
   12f6c:	beq	12f9c <mythread_destroy@@Base+0x54>
   12f70:	mov	r7, r2
   12f74:	mov	r6, r1
   12f78:	mov	r0, r5
   12f7c:	mov	r1, #2
   12f80:	bl	11900 <mythread_resume@plt>
   12f84:	mov	r0, r5
   12f88:	mov	r1, r6
   12f8c:	mov	r2, r7
   12f90:	bl	119cc <mythread_quit@plt>
   12f94:	ldr	r0, [r5]
   12f98:	bl	12188 <mycore_free@plt>
   12f9c:	ldr	r1, [r5, #20]
   12fa0:	mov	r0, r5
   12fa4:	bl	1241c <mythread_thread_attr_destroy@plt>
   12fa8:	ldr	r0, [r5, #24]
   12fac:	bl	11fc0 <mythread_nanosleep_destroy@plt>
   12fb0:	cmp	r8, #0
   12fb4:	moveq	r0, r5
   12fb8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fbc:	mov	r0, r5
   12fc0:	bl	12188 <mycore_free@plt>
   12fc4:	mov	r0, r4
   12fc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012fcc <mythread_resume@@Base>:
   12fcc:	push	{r4, r5, r6, r7, fp, lr}
   12fd0:	add	fp, sp, #16
   12fd4:	mov	r4, r1
   12fd8:	mov	r5, r0
   12fdc:	ldr	r6, [r0, #36]	; 0x24
   12fe0:	bl	11edc <mythread_option_set@plt>
   12fe4:	mov	r0, #0
   12fe8:	tst	r6, #1
   12fec:	bne	1304c <mythread_resume@@Base+0x80>
   12ff0:	ldr	r1, [r5, #4]
   12ff4:	cmp	r1, #0
   12ff8:	popeq	{r4, r5, r6, r7, fp, pc}
   12ffc:	mov	r6, #0
   13000:	mov	r7, #0
   13004:	ldr	r0, [r5]
   13008:	add	r0, r0, r6
   1300c:	ldr	r1, [r0, #16]
   13010:	tst	r1, #4
   13014:	beq	13034 <mythread_resume@@Base+0x68>
   13018:	str	r4, [r0, #16]
   1301c:	ldr	r1, [r0, #24]
   13020:	mov	r0, r5
   13024:	bl	120c8 <mythread_mutex_post@plt>
   13028:	cmp	r0, #0
   1302c:	movne	r0, #1
   13030:	popne	{r4, r5, r6, r7, fp, pc}
   13034:	add	r6, r6, #40	; 0x28
   13038:	add	r7, r7, #1
   1303c:	ldr	r0, [r5, #4]
   13040:	cmp	r7, r0
   13044:	bcc	13004 <mythread_resume@@Base+0x38>
   13048:	mov	r0, #0
   1304c:	pop	{r4, r5, r6, r7, fp, pc}

00013050 <mythread_quit@@Base>:
   13050:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13054:	add	fp, sp, #24
   13058:	mov	r8, r2
   1305c:	mov	r9, r1
   13060:	mov	r6, r0
   13064:	mov	r1, #2
   13068:	bl	11edc <mythread_option_set@plt>
   1306c:	ldr	r0, [r6, #4]
   13070:	cmp	r0, #0
   13074:	beq	130e4 <mythread_quit@@Base+0x94>
   13078:	mov	r4, #0
   1307c:	mov	r5, #0
   13080:	mov	r7, #1
   13084:	cmp	r9, #0
   13088:	beq	130a0 <mythread_quit@@Base+0x50>
   1308c:	ldr	r0, [r6]
   13090:	add	r1, r0, r4
   13094:	mov	r0, r6
   13098:	mov	r2, r8
   1309c:	blx	r9
   130a0:	ldr	r0, [r6]
   130a4:	ldr	r1, [r0, r4]
   130a8:	mov	r0, r6
   130ac:	bl	119a8 <mythread_thread_join@plt>
   130b0:	cmp	r0, #0
   130b4:	bne	130f0 <mythread_quit@@Base+0xa0>
   130b8:	ldr	r0, [r6]
   130bc:	ldr	r1, [r0, r4]
   130c0:	mov	r0, r6
   130c4:	bl	11df8 <mythread_thread_destroy@plt>
   130c8:	cmp	r0, #0
   130cc:	bne	130f0 <mythread_quit@@Base+0xa0>
   130d0:	add	r5, r5, #1
   130d4:	add	r4, r4, #40	; 0x28
   130d8:	ldr	r0, [r6, #4]
   130dc:	cmp	r5, r0
   130e0:	bcc	13084 <mythread_quit@@Base+0x34>
   130e4:	mov	r7, #0
   130e8:	mov	r0, r7
   130ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130f0:	mov	r0, r7
   130f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000130f8 <myhread_entry_create@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	mov	r8, r1
   13108:	mov	r4, r0
   1310c:	mov	r1, #0
   13110:	str	r1, [r0, #28]
   13114:	ldr	r7, [r0, #4]
   13118:	ldr	r5, [r0, #8]
   1311c:	mov	r0, #15
   13120:	cmp	r7, r5
   13124:	bcs	131d0 <myhread_entry_create@@Base+0xd8>
   13128:	ldr	sl, [r4]
   1312c:	add	r9, r7, r7, lsl #2
   13130:	add	r6, sl, r9, lsl #3
   13134:	str	r7, [r6, #4]!
   13138:	str	r5, [r6, #8]
   1313c:	str	r2, [r6, #4]
   13140:	str	r4, [r6, #28]
   13144:	str	r1, [r6, #16]
   13148:	str	r3, [r6, #12]
   1314c:	mov	r0, r4
   13150:	bl	11174 <mythread_nanosleep_create@plt>
   13154:	str	r0, [r6, #24]
   13158:	mov	r0, r4
   1315c:	bl	11ef4 <mythread_mutex_create@plt>
   13160:	str	r0, [r6, #20]
   13164:	cmp	r0, #0
   13168:	moveq	r0, #71	; 0x47
   1316c:	subeq	sp, fp, #28
   13170:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13174:	mov	r1, r0
   13178:	add	r5, r6, #20
   1317c:	mov	r0, r4
   13180:	bl	12158 <mythread_mutex_wait@plt>
   13184:	cmp	r0, #0
   13188:	beq	131a4 <myhread_entry_create@@Base+0xac>
   1318c:	ldr	r1, [r5]
   13190:	mov	r0, r4
   13194:	bl	11a68 <mythread_mutex_close@plt>
   13198:	mov	r0, #72	; 0x48
   1319c:	sub	sp, fp, #28
   131a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131a4:	mov	r0, r4
   131a8:	mov	r1, r8
   131ac:	mov	r2, r6
   131b0:	bl	1124c <mythread_thread_create@plt>
   131b4:	str	r0, [sl, r9, lsl #3]
   131b8:	cmp	r0, #0
   131bc:	beq	131d8 <myhread_entry_create@@Base+0xe0>
   131c0:	ldr	r0, [r4, #4]
   131c4:	add	r0, r0, #1
   131c8:	str	r0, [r4, #4]
   131cc:	mov	r0, #0
   131d0:	sub	sp, fp, #28
   131d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131d8:	ldr	r1, [r5]
   131dc:	mov	r0, r4
   131e0:	bl	11a68 <mythread_mutex_close@plt>
   131e4:	mov	r0, #1
   131e8:	sub	sp, fp, #28
   131ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000131f0 <myhread_increase_id_by_entry_id@@Base>:
   131f0:	ldr	r0, [r0, #12]
   131f4:	add	r0, r0, r1
   131f8:	bx	lr

000131fc <mythread_join@@Base>:
   131fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13200:	add	fp, sp, #24
   13204:	mov	r6, r0
   13208:	ldr	r0, [r0, #4]
   1320c:	cmp	r0, #0
   13210:	moveq	r0, #0
   13214:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13218:	mov	r8, r2
   1321c:	mov	r5, r1
   13220:	mov	r7, #0
   13224:	mov	r4, #0
   13228:	cmp	r5, #0
   1322c:	bne	1326c <mythread_join@@Base+0x70>
   13230:	ldr	r0, [r6]
   13234:	ldr	r1, [r0, r7]
   13238:	mov	r0, r6
   1323c:	bl	119a8 <mythread_thread_join@plt>
   13240:	cmp	r0, #0
   13244:	movne	r0, #1
   13248:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1324c:	add	r4, r4, #1
   13250:	add	r7, r7, #40	; 0x28
   13254:	ldr	r0, [r6, #4]
   13258:	cmp	r4, r0
   1325c:	movcs	r0, #0
   13260:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   13264:	cmp	r5, #0
   13268:	beq	13230 <mythread_join@@Base+0x34>
   1326c:	ldr	r0, [r6]
   13270:	add	r1, r0, r7
   13274:	mov	r0, r6
   13278:	mov	r2, r8
   1327c:	blx	r5
   13280:	b	13230 <mythread_join@@Base+0x34>

00013284 <mythread_option_set@@Base>:
   13284:	str	r1, [r0, #36]	; 0x24
   13288:	bx	lr

0001328c <mythread_stop@@Base>:
   1328c:	push	{r4, r5, r6, sl, fp, lr}
   13290:	add	fp, sp, #16
   13294:	mov	r4, r0
   13298:	ldr	r0, [r0, #36]	; 0x24
   1329c:	tst	r0, #4
   132a0:	bne	132f8 <mythread_stop@@Base+0x6c>
   132a4:	mov	r0, r4
   132a8:	mov	r1, #4
   132ac:	bl	11edc <mythread_option_set@plt>
   132b0:	ldr	r0, [r4, #4]
   132b4:	cmp	r0, #0
   132b8:	beq	132f8 <mythread_stop@@Base+0x6c>
   132bc:	mov	r5, #0
   132c0:	ldr	r0, [r4]
   132c4:	add	r6, r5, r5, lsl #2
   132c8:	b	132d8 <mythread_stop@@Base+0x4c>
   132cc:	ldr	r0, [r4, #24]
   132d0:	bl	11528 <mythread_nanosleep_sleep@plt>
   132d4:	ldr	r0, [r4]
   132d8:	add	r0, r0, r6, lsl #3
   132dc:	ldr	r0, [r0, #16]
   132e0:	tst	r0, #4
   132e4:	beq	132cc <mythread_stop@@Base+0x40>
   132e8:	ldr	r0, [r4, #4]
   132ec:	add	r5, r5, #1
   132f0:	cmp	r5, r0
   132f4:	bcc	132c0 <mythread_stop@@Base+0x34>
   132f8:	mov	r0, #0
   132fc:	pop	{r4, r5, r6, sl, fp, pc}

00013300 <mythread_suspend@@Base>:
   13300:	push	{r4, r5, r6, sl, fp, lr}
   13304:	add	fp, sp, #16
   13308:	mov	r4, r0
   1330c:	ldr	r0, [r0, #36]	; 0x24
   13310:	tst	r0, #1
   13314:	bne	13374 <mythread_suspend@@Base+0x74>
   13318:	mov	r0, r4
   1331c:	mov	r1, #1
   13320:	bl	11edc <mythread_option_set@plt>
   13324:	ldr	r0, [r4, #4]
   13328:	cmp	r0, #0
   1332c:	beq	13374 <mythread_suspend@@Base+0x74>
   13330:	mov	r5, #0
   13334:	ldr	r0, [r4]
   13338:	add	r6, r5, r5, lsl #2
   1333c:	b	1334c <mythread_suspend@@Base+0x4c>
   13340:	ldr	r0, [r4, #24]
   13344:	bl	11528 <mythread_nanosleep_sleep@plt>
   13348:	ldr	r0, [r4]
   1334c:	add	r0, r0, r6, lsl #3
   13350:	ldr	r1, [r0, #16]!
   13354:	tst	r1, #4
   13358:	ldreq	r0, [r0]
   1335c:	tsteq	r0, #1
   13360:	beq	13340 <mythread_suspend@@Base+0x40>
   13364:	ldr	r0, [r4, #4]
   13368:	add	r5, r5, #1
   1336c:	cmp	r5, r0
   13370:	bcc	13334 <mythread_suspend@@Base+0x34>
   13374:	mov	r0, #0
   13378:	pop	{r4, r5, r6, sl, fp, pc}

0001337c <mythread_check_status@@Base>:
   1337c:	ldr	r1, [r0, #4]
   13380:	cmp	r1, #0
   13384:	beq	133b8 <mythread_check_status@@Base+0x3c>
   13388:	ldr	r1, [r0]
   1338c:	add	r2, r1, #20
   13390:	mov	r3, #0
   13394:	ldr	r1, [r2]
   13398:	cmp	r1, #0
   1339c:	movne	r0, r1
   133a0:	bxne	lr
   133a4:	add	r3, r3, #1
   133a8:	add	r2, r2, #40	; 0x28
   133ac:	ldr	r1, [r0, #4]
   133b0:	cmp	r3, r1
   133b4:	bcc	13394 <mythread_check_status@@Base+0x18>
   133b8:	mov	r1, #0
   133bc:	mov	r0, r1
   133c0:	bx	lr

000133c4 <mythread_option@@Base>:
   133c4:	ldr	r0, [r0, #36]	; 0x24
   133c8:	bx	lr

000133cc <mythread_entry_join@@Base>:
   133cc:	push	{r4, sl, fp, lr}
   133d0:	add	fp, sp, #8
   133d4:	mov	r4, r0
   133d8:	cmp	r1, #0
   133dc:	beq	133f0 <mythread_entry_join@@Base+0x24>
   133e0:	mov	r3, r1
   133e4:	ldr	r0, [r4, #32]
   133e8:	mov	r1, r4
   133ec:	blx	r3
   133f0:	ldr	r1, [r4]
   133f4:	ldr	r0, [r4, #32]
   133f8:	bl	119a8 <mythread_thread_join@plt>
   133fc:	cmp	r0, #0
   13400:	movwne	r0, #1
   13404:	pop	{r4, sl, fp, pc}

00013408 <mythread_entry_quit@@Base>:
   13408:	push	{r4, sl, fp, lr}
   1340c:	add	fp, sp, #8
   13410:	mov	r4, r0
   13414:	cmp	r1, #0
   13418:	beq	1342c <mythread_entry_quit@@Base+0x24>
   1341c:	mov	r3, r1
   13420:	ldr	r0, [r4, #32]
   13424:	mov	r1, r4
   13428:	blx	r3
   1342c:	ldr	r1, [r4]
   13430:	ldr	r0, [r4, #32]
   13434:	bl	119a8 <mythread_thread_join@plt>
   13438:	cmp	r0, #0
   1343c:	movne	r0, #1
   13440:	popne	{r4, sl, fp, pc}
   13444:	ldr	r1, [r4]
   13448:	ldr	r0, [r4, #32]
   1344c:	bl	11df8 <mythread_thread_destroy@plt>
   13450:	cmp	r0, #0
   13454:	movwne	r0, #1
   13458:	pop	{r4, sl, fp, pc}

0001345c <mythread_entry_stop@@Base>:
   1345c:	push	{r4, sl, fp, lr}
   13460:	add	fp, sp, #8
   13464:	mov	r4, r0
   13468:	ldr	r0, [r0, #16]
   1346c:	tst	r0, #4
   13470:	bne	13498 <mythread_entry_stop@@Base+0x3c>
   13474:	mov	r0, #4
   13478:	str	r0, [r4, #16]
   1347c:	b	1348c <mythread_entry_stop@@Base+0x30>
   13480:	ldr	r0, [r4, #32]
   13484:	ldr	r0, [r0, #24]
   13488:	bl	11528 <mythread_nanosleep_sleep@plt>
   1348c:	ldr	r0, [r4, #16]
   13490:	tst	r0, #4
   13494:	beq	13480 <mythread_entry_stop@@Base+0x24>
   13498:	mov	r0, #0
   1349c:	pop	{r4, sl, fp, pc}

000134a0 <mythread_entry_suspend@@Base>:
   134a0:	push	{r4, sl, fp, lr}
   134a4:	add	fp, sp, #8
   134a8:	mov	r4, r0
   134ac:	ldr	r0, [r0, #16]
   134b0:	tst	r0, #1
   134b4:	bne	134e4 <mythread_entry_suspend@@Base+0x44>
   134b8:	mov	r0, #1
   134bc:	str	r0, [r4, #16]
   134c0:	b	134d0 <mythread_entry_suspend@@Base+0x30>
   134c4:	ldr	r0, [r4, #32]
   134c8:	ldr	r0, [r0, #24]
   134cc:	bl	11528 <mythread_nanosleep_sleep@plt>
   134d0:	ldr	r0, [r4, #16]
   134d4:	tst	r0, #4
   134d8:	ldreq	r0, [r4, #16]
   134dc:	tsteq	r0, #1
   134e0:	beq	134c4 <mythread_entry_suspend@@Base+0x24>
   134e4:	mov	r0, #0
   134e8:	pop	{r4, sl, fp, pc}

000134ec <mythread_entry_resume@@Base>:
   134ec:	ldr	r2, [r0, #16]
   134f0:	tst	r2, #1
   134f4:	bne	13534 <mythread_entry_resume@@Base+0x48>
   134f8:	ldr	r2, [r0, #16]
   134fc:	str	r1, [r0, #16]
   13500:	tst	r2, #4
   13504:	beq	13538 <mythread_entry_resume@@Base+0x4c>
   13508:	push	{fp, lr}
   1350c:	mov	fp, sp
   13510:	ldr	r1, [r0, #24]
   13514:	ldr	r0, [r0, #32]
   13518:	bl	120c8 <mythread_mutex_post@plt>
   1351c:	mov	r1, r0
   13520:	mov	r0, #1
   13524:	cmp	r1, #0
   13528:	pop	{fp, lr}
   1352c:	moveq	r0, #0
   13530:	bx	lr
   13534:	str	r1, [r0, #16]
   13538:	mov	r0, #0
   1353c:	bx	lr

00013540 <mythread_entry_status@@Base>:
   13540:	ldr	r0, [r0, #20]
   13544:	bx	lr

00013548 <mythread_entry_mythread@@Base>:
   13548:	ldr	r0, [r0, #32]
   1354c:	bx	lr

00013550 <mythread_callback_quit@@Base>:
   13550:	push	{r4, r5, fp, lr}
   13554:	add	fp, sp, #8
   13558:	mov	r5, r0
   1355c:	ldr	r0, [r1, #16]
   13560:	tst	r0, #2
   13564:	popne	{r4, r5, fp, pc}
   13568:	mov	r4, r1
   1356c:	ldr	r0, [r5, #24]
   13570:	bl	11528 <mythread_nanosleep_sleep@plt>
   13574:	ldr	r0, [r4, #16]
   13578:	tst	r0, #2
   1357c:	beq	1356c <mythread_callback_quit@@Base+0x1c>
   13580:	pop	{r4, r5, fp, pc}

00013584 <mythread_queue_create@@Base>:
   13584:	mov	r0, #1
   13588:	mov	r1, #28
   1358c:	b	113a8 <mycore_calloc@plt>

00013590 <mythread_queue_init@@Base>:
   13590:	push	{r4, sl, fp, lr}
   13594:	add	fp, sp, #8
   13598:	mov	r4, r0
   1359c:	mov	r0, #512	; 0x200
   135a0:	str	r0, [r4, #8]
   135a4:	cmp	r1, #32
   135a8:	movls	r1, #32
   135ac:	str	r1, [r4, #20]
   135b0:	mov	r0, #512	; 0x200
   135b4:	mov	r1, #4
   135b8:	bl	113a8 <mycore_calloc@plt>
   135bc:	str	r0, [r4]
   135c0:	cmp	r0, #0
   135c4:	moveq	r0, #61	; 0x3d
   135c8:	popeq	{r4, sl, fp, pc}
   135cc:	ldr	r0, [r4, #20]
   135d0:	add	r0, r0, r0, lsl #1
   135d4:	lsl	r0, r0, #2
   135d8:	bl	12050 <mycore_malloc@plt>
   135dc:	ldm	r4, {r1, r2}
   135e0:	str	r0, [r1, r2, lsl #2]
   135e4:	ldr	r1, [r4]
   135e8:	ldr	r2, [r1, r2, lsl #2]
   135ec:	mov	r0, #0
   135f0:	cmp	r2, #0
   135f4:	popne	{r4, sl, fp, pc}
   135f8:	mov	r0, r1
   135fc:	bl	12188 <mycore_free@plt>
   13600:	str	r0, [r4]
   13604:	mov	r0, #62	; 0x3e
   13608:	pop	{r4, sl, fp, pc}

0001360c <mythread_queue_clean@@Base>:
   1360c:	mov	r1, #0
   13610:	str	r1, [r0, #24]
   13614:	str	r1, [r0, #4]
   13618:	str	r1, [r0, #12]
   1361c:	str	r1, [r0, #16]
   13620:	bx	lr

00013624 <mythread_queue_destroy@@Base>:
   13624:	cmp	r0, #0
   13628:	beq	13678 <mythread_queue_destroy@@Base+0x54>
   1362c:	push	{r4, r5, fp, lr}
   13630:	add	fp, sp, #8
   13634:	mov	r4, r0
   13638:	ldr	r0, [r0]
   1363c:	cmp	r0, #0
   13640:	beq	1366c <mythread_queue_destroy@@Base+0x48>
   13644:	mov	r5, #0
   13648:	ldr	r0, [r4]
   1364c:	ldr	r0, [r0, r5, lsl #2]
   13650:	bl	12188 <mycore_free@plt>
   13654:	add	r5, r5, #1
   13658:	ldr	r0, [r4, #4]
   1365c:	cmp	r5, r0
   13660:	bls	13648 <mythread_queue_destroy@@Base+0x24>
   13664:	ldr	r0, [r4]
   13668:	bl	12188 <mycore_free@plt>
   1366c:	mov	r0, r4
   13670:	bl	12188 <mycore_free@plt>
   13674:	pop	{r4, r5, fp, lr}
   13678:	mov	r0, #0
   1367c:	bx	lr

00013680 <mythread_queue_node_clean@@Base>:
   13680:	mov	r1, #0
   13684:	str	r1, [r0]
   13688:	str	r1, [r0, #4]
   1368c:	str	r1, [r0, #8]
   13690:	bx	lr

00013694 <mythread_queue_get_prev_node@@Base>:
   13694:	ldr	r0, [r0, #8]
   13698:	bx	lr

0001369c <mythread_queue_get_current_node@@Base>:
   1369c:	ldm	r0, {r1, r2}
   136a0:	ldr	r0, [r0, #12]
   136a4:	ldr	r1, [r1, r2, lsl #2]
   136a8:	add	r0, r0, r0, lsl #1
   136ac:	add	r0, r1, r0, lsl #2
   136b0:	bx	lr

000136b4 <mythread_queue_get_first_node@@Base>:
   136b4:	ldr	r0, [r0]
   136b8:	ldr	r0, [r0]
   136bc:	bx	lr

000136c0 <mythread_queue_count_used_node@@Base>:
   136c0:	ldr	r0, [r0, #16]
   136c4:	bx	lr

000136c8 <mythread_queue_node_malloc@@Base>:
   136c8:	push	{r4, r5, r6, r7, fp, lr}
   136cc:	add	fp, sp, #16
   136d0:	mov	r4, r2
   136d4:	mov	r5, r1
   136d8:	ldr	r1, [r1, #12]
   136dc:	ldr	r2, [r5, #20]
   136e0:	add	r1, r1, #1
   136e4:	str	r1, [r5, #12]
   136e8:	cmp	r1, r2
   136ec:	bcc	13790 <mythread_queue_node_malloc@@Base+0xc8>
   136f0:	ldmib	r5, {r1, r2}
   136f4:	add	r1, r1, #1
   136f8:	str	r1, [r5, #4]
   136fc:	cmp	r1, r2
   13700:	bcc	13750 <mythread_queue_node_malloc@@Base+0x88>
   13704:	cmp	r0, #0
   13708:	ldrne	r1, [r0, #16]
   1370c:	blne	12194 <mythread_queue_list_wait_for_done@plt>
   13710:	ldr	r0, [r5]
   13714:	ldr	r1, [r5, #8]
   13718:	add	r7, r1, #512	; 0x200
   1371c:	lsl	r1, r7, #2
   13720:	bl	110b4 <mycore_realloc@plt>
   13724:	cmp	r0, #0
   13728:	beq	137b4 <mythread_queue_node_malloc@@Base+0xec>
   1372c:	mov	r6, r0
   13730:	ldr	r1, [r5, #4]
   13734:	add	r0, r0, r1, lsl #2
   13738:	sub	r1, r7, r1
   1373c:	lsl	r2, r1, #2
   13740:	mov	r1, #0
   13744:	bl	11ccc <memset@plt>
   13748:	str	r6, [r5]
   1374c:	str	r7, [r5, #8]
   13750:	ldm	r5, {r0, r1}
   13754:	ldr	r0, [r0, r1, lsl #2]
   13758:	cmp	r0, #0
   1375c:	bne	13788 <mythread_queue_node_malloc@@Base+0xc0>
   13760:	ldr	r0, [r5, #20]
   13764:	add	r0, r0, r0, lsl #1
   13768:	lsl	r0, r0, #2
   1376c:	bl	12050 <mycore_malloc@plt>
   13770:	ldm	r5, {r1, r2}
   13774:	str	r0, [r1, r2, lsl #2]
   13778:	ldr	r0, [r5]
   1377c:	ldr	r0, [r0, r2, lsl #2]
   13780:	cmp	r0, #0
   13784:	beq	137cc <mythread_queue_node_malloc@@Base+0x104>
   13788:	mov	r0, #0
   1378c:	str	r0, [r5, #12]
   13790:	ldm	r5, {r0, r1}
   13794:	ldr	r2, [r5, #12]
   13798:	ldr	r3, [r5, #16]
   1379c:	add	r3, r3, #1
   137a0:	str	r3, [r5, #16]
   137a4:	ldr	r0, [r0, r1, lsl #2]
   137a8:	add	r1, r2, r2, lsl #1
   137ac:	add	r0, r0, r1, lsl #2
   137b0:	pop	{r4, r5, r6, r7, fp, pc}
   137b4:	mov	r0, #0
   137b8:	cmp	r4, #0
   137bc:	movne	r1, #61	; 0x3d
   137c0:	strne	r1, [r4]
   137c4:	popne	{r4, r5, r6, r7, fp, pc}
   137c8:	pop	{r4, r5, r6, r7, fp, pc}
   137cc:	mov	r0, #0
   137d0:	cmp	r4, #0
   137d4:	movne	r1, #62	; 0x3e
   137d8:	strne	r1, [r4]
   137dc:	popne	{r4, r5, r6, r7, fp, pc}
   137e0:	pop	{r4, r5, r6, r7, fp, pc}

000137e4 <mythread_queue_list_wait_for_done@@Base>:
   137e4:	push	{r4, r5, r6, sl, fp, lr}
   137e8:	add	fp, sp, #16
   137ec:	cmp	r1, #0
   137f0:	ldrne	r5, [r1]
   137f4:	cmpne	r5, #0
   137f8:	bne	13800 <mythread_queue_list_wait_for_done@@Base+0x1c>
   137fc:	pop	{r4, r5, r6, sl, fp, pc}
   13800:	mov	r4, r0
   13804:	b	13814 <mythread_queue_list_wait_for_done@@Base+0x30>
   13808:	ldr	r5, [r5, #12]
   1380c:	cmp	r5, #0
   13810:	popeq	{r4, r5, r6, sl, fp, pc}
   13814:	ldr	r0, [r4, #4]
   13818:	cmp	r0, #0
   1381c:	beq	13808 <mythread_queue_list_wait_for_done@@Base+0x24>
   13820:	mov	r6, #0
   13824:	b	13830 <mythread_queue_list_wait_for_done@@Base+0x4c>
   13828:	ldr	r0, [r4, #24]
   1382c:	bl	11528 <mythread_nanosleep_sleep@plt>
   13830:	ldr	r0, [r5]
   13834:	ldr	r1, [r5, #4]
   13838:	ldr	r1, [r1, r6, lsl #2]
   1383c:	ldr	r0, [r0, #16]
   13840:	cmp	r1, r0
   13844:	bcc	13828 <mythread_queue_list_wait_for_done@@Base+0x44>
   13848:	ldr	r0, [r4, #4]
   1384c:	add	r6, r6, #1
   13850:	cmp	r6, r0
   13854:	bcc	13830 <mythread_queue_list_wait_for_done@@Base+0x4c>
   13858:	b	13808 <mythread_queue_list_wait_for_done@@Base+0x24>

0001385c <mythread_queue_node_malloc_limit@@Base>:
   1385c:	push	{r4, r5, r6, r7, fp, lr}
   13860:	add	fp, sp, #16
   13864:	mov	r5, r3
   13868:	mov	r4, r1
   1386c:	ldr	r1, [r1, #12]
   13870:	ldr	r3, [r4, #16]
   13874:	add	r1, r1, #1
   13878:	str	r1, [r4, #12]
   1387c:	cmp	r3, r2
   13880:	bcs	13934 <mythread_queue_node_malloc_limit@@Base+0xd8>
   13884:	ldr	r2, [r4, #20]
   13888:	cmp	r1, r2
   1388c:	bcc	13960 <mythread_queue_node_malloc_limit@@Base+0x104>
   13890:	ldmib	r4, {r1, r2}
   13894:	add	r1, r1, #1
   13898:	str	r1, [r4, #4]
   1389c:	cmp	r1, r2
   138a0:	bcc	138f0 <mythread_queue_node_malloc_limit@@Base+0x94>
   138a4:	cmp	r0, #0
   138a8:	ldrne	r1, [r0, #16]
   138ac:	blne	12194 <mythread_queue_list_wait_for_done@plt>
   138b0:	ldr	r0, [r4]
   138b4:	ldr	r1, [r4, #8]
   138b8:	add	r7, r1, #512	; 0x200
   138bc:	lsl	r1, r7, #2
   138c0:	bl	110b4 <mycore_realloc@plt>
   138c4:	cmp	r0, #0
   138c8:	beq	13984 <mythread_queue_node_malloc_limit@@Base+0x128>
   138cc:	mov	r6, r0
   138d0:	ldr	r1, [r4, #4]
   138d4:	add	r0, r0, r1, lsl #2
   138d8:	sub	r1, r7, r1
   138dc:	lsl	r2, r1, #2
   138e0:	mov	r1, #0
   138e4:	bl	11ccc <memset@plt>
   138e8:	str	r6, [r4]
   138ec:	str	r7, [r4, #8]
   138f0:	ldm	r4, {r0, r1}
   138f4:	ldr	r0, [r0, r1, lsl #2]
   138f8:	cmp	r0, #0
   138fc:	bne	13928 <mythread_queue_node_malloc_limit@@Base+0xcc>
   13900:	ldr	r0, [r4, #20]
   13904:	add	r0, r0, r0, lsl #1
   13908:	lsl	r0, r0, #2
   1390c:	bl	12050 <mycore_malloc@plt>
   13910:	ldm	r4, {r1, r2}
   13914:	str	r0, [r1, r2, lsl #2]
   13918:	ldr	r0, [r4]
   1391c:	ldr	r0, [r0, r2, lsl #2]
   13920:	cmp	r0, #0
   13924:	beq	1399c <mythread_queue_node_malloc_limit@@Base+0x140>
   13928:	mov	r0, #0
   1392c:	str	r0, [r4, #12]
   13930:	b	13960 <mythread_queue_node_malloc_limit@@Base+0x104>
   13934:	ldr	r1, [r4, #16]
   13938:	add	r1, r1, #1
   1393c:	str	r1, [r4, #16]
   13940:	cmp	r0, #0
   13944:	ldrne	r1, [r0, #16]
   13948:	blne	12194 <mythread_queue_list_wait_for_done@plt>
   1394c:	mov	r0, #0
   13950:	str	r0, [r4, #24]
   13954:	str	r0, [r4, #4]
   13958:	str	r0, [r4, #12]
   1395c:	str	r0, [r4, #16]
   13960:	ldm	r4, {r0, r1}
   13964:	ldr	r2, [r4, #12]
   13968:	ldr	r3, [r4, #16]
   1396c:	add	r3, r3, #1
   13970:	str	r3, [r4, #16]
   13974:	ldr	r0, [r0, r1, lsl #2]
   13978:	add	r1, r2, r2, lsl #1
   1397c:	add	r0, r0, r1, lsl #2
   13980:	pop	{r4, r5, r6, r7, fp, pc}
   13984:	mov	r0, #0
   13988:	cmp	r5, #0
   1398c:	movne	r1, #61	; 0x3d
   13990:	strne	r1, [r5]
   13994:	popne	{r4, r5, r6, r7, fp, pc}
   13998:	pop	{r4, r5, r6, r7, fp, pc}
   1399c:	mov	r0, #0
   139a0:	cmp	r5, #0
   139a4:	movne	r1, #62	; 0x3e
   139a8:	strne	r1, [r5]
   139ac:	popne	{r4, r5, r6, r7, fp, pc}
   139b0:	pop	{r4, r5, r6, r7, fp, pc}

000139b4 <mythread_queue_node_malloc_round@@Base>:
   139b4:	push	{r4, r5, fp, lr}
   139b8:	add	fp, sp, #8
   139bc:	mov	r4, r1
   139c0:	ldr	r5, [r1]
   139c4:	ldr	r1, [r5, #12]
   139c8:	add	r1, r1, #1
   139cc:	str	r1, [r5, #12]
   139d0:	ldr	r2, [r5, #20]
   139d4:	ldr	r3, [r5, #16]
   139d8:	add	r3, r3, #1
   139dc:	str	r3, [r5, #16]
   139e0:	cmp	r1, r2
   139e4:	bcc	139fc <mythread_queue_node_malloc_round@@Base+0x48>
   139e8:	cmp	r0, #0
   139ec:	movne	r1, r4
   139f0:	blne	11d98 <mythread_queue_list_entry_wait_for_done@plt>
   139f4:	mov	r0, r4
   139f8:	bl	11dbc <mythread_queue_list_entry_clean@plt>
   139fc:	ldm	r5, {r0, r1}
   13a00:	ldr	r2, [r5, #12]
   13a04:	ldr	r0, [r0, r1, lsl #2]
   13a08:	add	r1, r2, r2, lsl #1
   13a0c:	add	r0, r0, r1, lsl #2
   13a10:	pop	{r4, r5, fp, pc}

00013a14 <mythread_queue_list_entry_wait_for_done@@Base>:
   13a14:	push	{r4, r5, r6, sl, fp, lr}
   13a18:	add	fp, sp, #16
   13a1c:	cmp	r1, #0
   13a20:	beq	13a70 <mythread_queue_list_entry_wait_for_done@@Base+0x5c>
   13a24:	mov	r4, r1
   13a28:	mov	r5, r0
   13a2c:	ldr	r0, [r1, #8]
   13a30:	cmp	r0, #0
   13a34:	popeq	{r4, r5, r6, sl, fp, pc}
   13a38:	mov	r6, #0
   13a3c:	b	13a48 <mythread_queue_list_entry_wait_for_done@@Base+0x34>
   13a40:	ldr	r0, [r5, #24]
   13a44:	bl	11528 <mythread_nanosleep_sleep@plt>
   13a48:	ldr	r0, [r4]
   13a4c:	ldr	r1, [r4, #4]
   13a50:	ldr	r1, [r1, r6, lsl #2]
   13a54:	ldr	r0, [r0, #16]
   13a58:	cmp	r1, r0
   13a5c:	bcc	13a40 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   13a60:	ldr	r0, [r4, #8]
   13a64:	add	r6, r6, #1
   13a68:	cmp	r6, r0
   13a6c:	bcc	13a48 <mythread_queue_list_entry_wait_for_done@@Base+0x34>
   13a70:	pop	{r4, r5, r6, sl, fp, pc}

00013a74 <mythread_queue_list_entry_clean@@Base>:
   13a74:	cmp	r0, #0
   13a78:	bxeq	lr
   13a7c:	ldr	r0, [r0]
   13a80:	b	1360c <mythread_queue_clean@@Base>

00013a84 <mythread_queue_list_create@@Base>:
   13a84:	mov	r0, #1
   13a88:	mov	r1, #12
   13a8c:	b	113a8 <mycore_calloc@plt>

00013a90 <mythread_queue_list_destroy@@Base>:
   13a90:	cmp	r0, #0
   13a94:	bxeq	lr
   13a98:	b	12188 <mycore_free@plt>

00013a9c <mythread_queue_list_get_count@@Base>:
   13a9c:	ldr	r0, [r0, #8]
   13aa0:	bx	lr

00013aa4 <mythread_queue_list_see_for_done@@Base>:
   13aa4:	push	{r4, r5, fp, lr}
   13aa8:	add	fp, sp, #8
   13aac:	mov	lr, r0
   13ab0:	mov	r0, #1
   13ab4:	cmp	r1, #0
   13ab8:	ldrne	r1, [r1]
   13abc:	cmpne	r1, #0
   13ac0:	bne	13ac8 <mythread_queue_list_see_for_done@@Base+0x24>
   13ac4:	pop	{r4, r5, fp, pc}
   13ac8:	ldr	ip, [lr, #4]
   13acc:	cmp	ip, #0
   13ad0:	bne	13ae8 <mythread_queue_list_see_for_done@@Base+0x44>
   13ad4:	ldr	r1, [r1, #12]
   13ad8:	cmp	r1, #0
   13adc:	popeq	{r4, r5, fp, pc}
   13ae0:	cmp	ip, #0
   13ae4:	beq	13ad4 <mythread_queue_list_see_for_done@@Base+0x30>
   13ae8:	ldr	r3, [r1, #4]
   13aec:	mov	r2, #0
   13af0:	ldr	r4, [r3, r2, lsl #2]
   13af4:	ldr	r5, [r1]
   13af8:	ldr	r5, [r5, #16]
   13afc:	cmp	r4, r5
   13b00:	movcc	r0, #0
   13b04:	popcc	{r4, r5, fp, pc}
   13b08:	add	r2, r2, #1
   13b0c:	ldr	r4, [lr, #4]
   13b10:	cmp	r2, r4
   13b14:	bcc	13af0 <mythread_queue_list_see_for_done@@Base+0x4c>
   13b18:	b	13ad4 <mythread_queue_list_see_for_done@@Base+0x30>

00013b1c <mythread_queue_list_see_for_done_by_thread@@Base>:
   13b1c:	push	{fp, lr}
   13b20:	mov	fp, sp
   13b24:	mov	r0, #1
   13b28:	cmp	r1, #0
   13b2c:	beq	13b60 <mythread_queue_list_see_for_done_by_thread@@Base+0x44>
   13b30:	ldr	r1, [r1]
   13b34:	b	13b3c <mythread_queue_list_see_for_done_by_thread@@Base+0x20>
   13b38:	ldr	r1, [r1, #12]
   13b3c:	cmp	r1, #0
   13b40:	popeq	{fp, pc}
   13b44:	ldr	ip, [r1]
   13b48:	ldr	r3, [r1, #4]
   13b4c:	ldr	lr, [r3, r2, lsl #2]
   13b50:	ldr	r3, [ip, #16]
   13b54:	cmp	lr, r3
   13b58:	bcs	13b38 <mythread_queue_list_see_for_done_by_thread@@Base+0x1c>
   13b5c:	mov	r0, #0
   13b60:	pop	{fp, pc}

00013b64 <mythread_queue_list_entry_push@@Base>:
   13b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b68:	add	fp, sp, #28
   13b6c:	sub	sp, sp, #4
   13b70:	mov	r8, r3
   13b74:	mov	r9, r2
   13b78:	mov	r5, r1
   13b7c:	mov	r4, r0
   13b80:	ldr	r7, [fp, #12]
   13b84:	cmp	r7, #0
   13b88:	movne	r0, #0
   13b8c:	strne	r0, [r7]
   13b90:	mov	r0, #1
   13b94:	mov	r1, #20
   13b98:	bl	113a8 <mycore_calloc@plt>
   13b9c:	cmp	r0, #0
   13ba0:	beq	13bd4 <mythread_queue_list_entry_push@@Base+0x70>
   13ba4:	mov	sl, r0
   13ba8:	ldr	r0, [fp, #8]
   13bac:	str	r0, [sl, #8]
   13bb0:	cmp	r0, #0
   13bb4:	beq	13be8 <mythread_queue_list_entry_push@@Base+0x84>
   13bb8:	mov	r1, #4
   13bbc:	bl	113a8 <mycore_calloc@plt>
   13bc0:	str	r0, [sl, #4]
   13bc4:	cmp	r0, #0
   13bc8:	bne	13bf0 <mythread_queue_list_entry_push@@Base+0x8c>
   13bcc:	mov	r0, sl
   13bd0:	bl	12188 <mycore_free@plt>
   13bd4:	mov	sl, #0
   13bd8:	cmp	r7, #0
   13bdc:	movne	r0, #60	; 0x3c
   13be0:	strne	r0, [r7]
   13be4:	b	13ca8 <mythread_queue_list_entry_push@@Base+0x144>
   13be8:	mov	r0, #0
   13bec:	str	r0, [sl, #4]
   13bf0:	str	r8, [sl]
   13bf4:	cmp	r5, #0
   13bf8:	beq	13c44 <mythread_queue_list_entry_push@@Base+0xe0>
   13bfc:	mov	r7, r5
   13c00:	mov	r6, r4
   13c04:	ldr	r0, [r6]
   13c08:	ldr	r1, [r0, #32]
   13c0c:	cmp	r1, #1
   13c10:	bne	13c20 <mythread_queue_list_entry_push@@Base+0xbc>
   13c14:	mov	r1, sl
   13c18:	bl	120e0 <mythread_queue_list_entry_make_batch@plt>
   13c1c:	b	13c28 <mythread_queue_list_entry_push@@Base+0xc4>
   13c20:	mov	r1, sl
   13c24:	bl	12290 <mythread_queue_list_entry_make_stream@plt>
   13c28:	ldr	r0, [r6]
   13c2c:	cmp	r0, #0
   13c30:	beq	13c38 <mythread_queue_list_entry_push@@Base+0xd4>
   13c34:	bl	11570 <mythread_suspend@plt>
   13c38:	subs	r7, r7, #1
   13c3c:	add	r6, r6, #4
   13c40:	bne	13c04 <mythread_queue_list_entry_push@@Base+0xa0>
   13c44:	ldr	r0, [r9]
   13c48:	cmp	r0, #0
   13c4c:	beq	13c68 <mythread_queue_list_entry_push@@Base+0x104>
   13c50:	mov	r0, r9
   13c54:	ldr	r1, [r0, #4]!
   13c58:	str	sl, [r1, #12]
   13c5c:	ldr	r1, [r0]
   13c60:	str	r1, [sl, #16]
   13c64:	b	13c70 <mythread_queue_list_entry_push@@Base+0x10c>
   13c68:	mov	r0, r9
   13c6c:	str	sl, [r0], #4
   13c70:	str	sl, [r0]
   13c74:	ldr	r0, [r9, #8]
   13c78:	add	r0, r0, #1
   13c7c:	str	r0, [r9, #8]
   13c80:	cmp	r5, #0
   13c84:	beq	13ca8 <mythread_queue_list_entry_push@@Base+0x144>
   13c88:	ldr	r0, [r4]
   13c8c:	cmp	r0, #0
   13c90:	beq	13c9c <mythread_queue_list_entry_push@@Base+0x138>
   13c94:	mov	r1, #0
   13c98:	bl	11900 <mythread_resume@plt>
   13c9c:	subs	r5, r5, #1
   13ca0:	add	r4, r4, #4
   13ca4:	bne	13c88 <mythread_queue_list_entry_push@@Base+0x124>
   13ca8:	mov	r0, sl
   13cac:	sub	sp, fp, #28
   13cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013cb4 <mythread_queue_list_entry_make_batch@@Base>:
   13cb4:	push	{fp, lr}
   13cb8:	mov	fp, sp
   13cbc:	cmp	r1, #0
   13cc0:	beq	13cf8 <mythread_queue_list_entry_make_batch@@Base+0x44>
   13cc4:	ldr	r3, [r0, #4]
   13cc8:	ldr	ip, [r0, #12]
   13ccc:	cmp	ip, r3
   13cd0:	pophi	{fp, pc}
   13cd4:	ldr	r1, [r1, #4]
   13cd8:	add	lr, r1, ip, lsl #2
   13cdc:	mov	r3, #0
   13ce0:	str	r3, [lr, r3, lsl #2]
   13ce4:	add	r3, r3, #1
   13ce8:	add	r2, ip, r3
   13cec:	ldr	r1, [r0, #4]
   13cf0:	cmp	r2, r1
   13cf4:	bls	13ce0 <mythread_queue_list_entry_make_batch@@Base+0x2c>
   13cf8:	pop	{fp, pc}

00013cfc <mythread_queue_list_entry_make_stream@@Base>:
   13cfc:	cmp	r1, #0
   13d00:	beq	13d30 <mythread_queue_list_entry_make_stream@@Base+0x34>
   13d04:	ldr	r3, [r0, #4]
   13d08:	ldr	r2, [r0, #12]
   13d0c:	cmp	r2, r3
   13d10:	bxhi	lr
   13d14:	ldr	r1, [r1, #4]
   13d18:	mov	ip, #0
   13d1c:	str	ip, [r1, r2, lsl #2]
   13d20:	add	r2, r2, #1
   13d24:	ldr	r3, [r0, #4]
   13d28:	cmp	r2, r3
   13d2c:	bls	13d1c <mythread_queue_list_entry_make_stream@@Base+0x20>
   13d30:	bx	lr

00013d34 <mythread_queue_list_entry_delete@@Base>:
   13d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d38:	add	fp, sp, #28
   13d3c:	sub	sp, sp, #4
   13d40:	mov	r9, r3
   13d44:	mov	sl, r2
   13d48:	mov	r4, r1
   13d4c:	mov	r7, r0
   13d50:	cmp	r1, #0
   13d54:	beq	13d7c <mythread_queue_list_entry_delete@@Base+0x48>
   13d58:	mov	r5, r4
   13d5c:	mov	r6, r7
   13d60:	ldr	r0, [r6]
   13d64:	cmp	r0, #0
   13d68:	beq	13d70 <mythread_queue_list_entry_delete@@Base+0x3c>
   13d6c:	bl	11570 <mythread_suspend@plt>
   13d70:	subs	r5, r5, #1
   13d74:	add	r6, r6, #4
   13d78:	bne	13d60 <mythread_queue_list_entry_delete@@Base+0x2c>
   13d7c:	ldr	r1, [r9, #12]
   13d80:	ldr	r0, [r9, #16]
   13d84:	cmp	r0, #0
   13d88:	strne	r1, [r0, #12]
   13d8c:	cmp	r1, #0
   13d90:	strne	r0, [r1, #16]
   13d94:	ldr	r2, [sl]
   13d98:	cmp	r2, r9
   13d9c:	streq	r1, [sl]
   13da0:	ldr	r1, [sl, #4]
   13da4:	cmp	r1, r9
   13da8:	streq	r0, [sl, #4]
   13dac:	ldr	r8, [fp, #8]
   13db0:	ldr	r0, [sl, #8]
   13db4:	sub	r0, r0, #1
   13db8:	str	r0, [sl, #8]
   13dbc:	cmp	r4, #0
   13dc0:	beq	13de4 <mythread_queue_list_entry_delete@@Base+0xb0>
   13dc4:	ldr	r0, [r7]
   13dc8:	cmp	r0, #0
   13dcc:	beq	13dd8 <mythread_queue_list_entry_delete@@Base+0xa4>
   13dd0:	mov	r1, #0
   13dd4:	bl	11900 <mythread_resume@plt>
   13dd8:	subs	r4, r4, #1
   13ddc:	add	r7, r7, #4
   13de0:	bne	13dc4 <mythread_queue_list_entry_delete@@Base+0x90>
   13de4:	cmp	r8, #0
   13de8:	ldrne	r0, [r9]
   13dec:	cmpne	r0, #0
   13df0:	blne	11744 <mythread_queue_destroy@plt>
   13df4:	ldr	r0, [r9, #4]
   13df8:	cmp	r0, #0
   13dfc:	beq	13e04 <mythread_queue_list_entry_delete@@Base+0xd0>
   13e00:	bl	12188 <mycore_free@plt>
   13e04:	mov	r0, r9
   13e08:	bl	12188 <mycore_free@plt>
   13e0c:	mov	r0, #0
   13e10:	sub	sp, fp, #28
   13e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013e18 <mythread_queue_list_entry_see_for_done@@Base>:
   13e18:	push	{fp, lr}
   13e1c:	mov	fp, sp
   13e20:	mov	lr, r0
   13e24:	mov	r0, #1
   13e28:	cmp	lr, #0
   13e2c:	ldrne	r2, [lr, #8]
   13e30:	cmpne	r2, #0
   13e34:	bne	13e3c <mythread_queue_list_entry_see_for_done@@Base+0x24>
   13e38:	pop	{fp, pc}
   13e3c:	ldr	ip, [lr, #4]
   13e40:	mov	r3, #0
   13e44:	b	13e58 <mythread_queue_list_entry_see_for_done@@Base+0x40>
   13e48:	add	r3, r3, #1
   13e4c:	ldr	r2, [lr, #8]
   13e50:	cmp	r3, r2
   13e54:	popcs	{fp, pc}
   13e58:	ldr	r2, [ip, r3, lsl #2]
   13e5c:	ldr	r1, [lr]
   13e60:	ldr	r1, [r1, #16]
   13e64:	cmp	r2, r1
   13e68:	bcs	13e48 <mythread_queue_list_entry_see_for_done@@Base+0x30>
   13e6c:	mov	r0, #0
   13e70:	pop	{fp, pc}

00013e74 <mythread_function_see_opt@@Base>:
   13e74:	push	{r4, r5, r6, sl, fp, lr}
   13e78:	add	fp, sp, #16
   13e7c:	sub	sp, sp, #8
   13e80:	mov	r4, r0
   13e84:	str	r1, [sp, #4]
   13e88:	ldr	r6, [r0, #28]
   13e8c:	ldr	r1, [r6, #16]
   13e90:	ldr	r0, [r1, #8]
   13e94:	mov	r5, #0
   13e98:	cmp	r0, r3
   13e9c:	bne	13f1c <mythread_function_see_opt@@Base+0xa8>
   13ea0:	ldr	r0, [sp, #4]
   13ea4:	tst	r0, #4
   13ea8:	bne	13ee8 <mythread_function_see_opt@@Base+0x74>
   13eac:	ldr	r0, [sp, #4]
   13eb0:	tst	r0, #2
   13eb4:	beq	13f14 <mythread_function_see_opt@@Base+0xa0>
   13eb8:	bl	11a08 <mythread_queue_list_see_for_done_by_thread@plt>
   13ebc:	cmp	r0, #0
   13ec0:	beq	13f14 <mythread_function_see_opt@@Base+0xa0>
   13ec4:	ldr	r1, [r4, #20]
   13ec8:	mov	r0, r6
   13ecc:	bl	11a68 <mythread_mutex_close@plt>
   13ed0:	ldr	r0, [r4, #24]
   13ed4:	bl	11fc0 <mythread_nanosleep_destroy@plt>
   13ed8:	mov	r0, #2
   13edc:	str	r0, [r4, #12]
   13ee0:	mov	r5, #1
   13ee4:	b	13f1c <mythread_function_see_opt@@Base+0xa8>
   13ee8:	bl	11a08 <mythread_queue_list_see_for_done_by_thread@plt>
   13eec:	cmp	r0, #0
   13ef0:	beq	13f14 <mythread_function_see_opt@@Base+0xa0>
   13ef4:	mov	r0, #4
   13ef8:	str	r0, [r4, #12]
   13efc:	ldr	r1, [r4, #20]
   13f00:	mov	r0, r6
   13f04:	bl	12158 <mythread_mutex_wait@plt>
   13f08:	mov	r5, #0
   13f0c:	str	r5, [r4, #12]
   13f10:	b	13f1c <mythread_function_see_opt@@Base+0xa8>
   13f14:	ldr	r0, [fp, #8]
   13f18:	bl	11528 <mythread_nanosleep_sleep@plt>
   13f1c:	mov	r0, r5
   13f20:	sub	sp, fp, #16
   13f24:	pop	{r4, r5, r6, sl, fp, pc}

00013f28 <mythread_function_queue_batch@@Base>:
   13f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f2c:	add	fp, sp, #28
   13f30:	sub	sp, sp, #12
   13f34:	mov	r5, r0
   13f38:	ldr	r1, [r0]
   13f3c:	ldr	r4, [r0, #28]
   13f40:	ldr	r6, [r4, #16]
   13f44:	mov	r0, r4
   13f48:	bl	112f4 <myhread_increase_id_by_entry_id@plt>
   13f4c:	mov	r7, r0
   13f50:	ldr	r1, [r5, #20]
   13f54:	mov	r0, r4
   13f58:	bl	12158 <mythread_mutex_wait@plt>
   13f5c:	str	r6, [sp, #8]
   13f60:	ldr	r0, [r4, #36]	; 0x24
   13f64:	tst	r0, #1
   13f68:	beq	13f94 <mythread_function_queue_batch@@Base+0x6c>
   13f6c:	mov	r0, #1
   13f70:	str	r0, [r5, #12]
   13f74:	b	13f80 <mythread_function_queue_batch@@Base+0x58>
   13f78:	ldr	r0, [r5, #24]
   13f7c:	bl	11528 <mythread_nanosleep_sleep@plt>
   13f80:	ldr	r0, [r4, #36]	; 0x24
   13f84:	tst	r0, #1
   13f88:	bne	13f78 <mythread_function_queue_batch@@Base+0x50>
   13f8c:	mov	r0, #0
   13f90:	str	r0, [r5, #12]
   13f94:	ldr	r9, [r6]
   13f98:	mov	r8, #0
   13f9c:	cmp	r9, #0
   13fa0:	bne	14010 <mythread_function_queue_batch@@Base+0xe8>
   13fa4:	b	14034 <mythread_function_queue_batch@@Base+0x10c>
   13fa8:	ldr	ip, [sl, r7, lsl #2]
   13fac:	ldr	r2, [r0, #20]
   13fb0:	ldr	r3, [sl, r7, lsl #2]
   13fb4:	mov	r6, r5
   13fb8:	ldr	r5, [r0]
   13fbc:	ldr	r0, [r0, #20]
   13fc0:	mov	r1, r7
   13fc4:	mov	r7, r4
   13fc8:	udiv	r4, r3, r0
   13fcc:	mls	r0, r4, r0, r3
   13fd0:	mov	r4, r7
   13fd4:	mov	r7, r1
   13fd8:	add	r0, r0, r0, lsl #1
   13fdc:	udiv	r1, ip, r2
   13fe0:	ldr	r1, [r5, r1, lsl #2]
   13fe4:	mov	r5, r6
   13fe8:	add	r1, r1, r0, lsl #2
   13fec:	ldm	r6, {r0, r2}
   13ff0:	blx	r2
   13ff4:	ldr	r0, [r4, #4]
   13ff8:	ldr	r1, [sl, r7, lsl #2]
   13ffc:	add	r0, r1, r0
   14000:	str	r0, [sl, r7, lsl #2]
   14004:	ldr	r9, [r9, #12]
   14008:	cmp	r9, #0
   1400c:	beq	14034 <mythread_function_queue_batch@@Base+0x10c>
   14010:	ldm	r9, {r0, sl}
   14014:	ldr	r1, [sl, r7, lsl #2]
   14018:	ldr	r2, [r0, #16]
   1401c:	cmp	r1, r2
   14020:	bcc	13fa8 <mythread_function_queue_batch@@Base+0x80>
   14024:	add	r8, r8, #1
   14028:	ldr	r9, [r9, #12]
   1402c:	cmp	r9, #0
   14030:	bne	14010 <mythread_function_queue_batch@@Base+0xe8>
   14034:	ldr	r6, [sp, #8]
   14038:	ldr	r0, [r6, #8]
   1403c:	cmp	r8, r0
   14040:	bne	13f60 <mythread_function_queue_batch@@Base+0x38>
   14044:	ldr	r1, [r4, #36]	; 0x24
   14048:	ldr	r0, [r5, #24]
   1404c:	str	r0, [sp]
   14050:	mov	r0, r5
   14054:	mov	r2, r7
   14058:	mov	r3, r8
   1405c:	bl	11360 <mythread_function_see_opt@plt>
   14060:	cmp	r0, #0
   14064:	beq	13f60 <mythread_function_queue_batch@@Base+0x38>
   14068:	mov	r0, #0
   1406c:	sub	sp, fp, #28
   14070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014074 <mythread_function_queue_stream@@Base>:
   14074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14078:	add	fp, sp, #28
   1407c:	sub	sp, sp, #12
   14080:	mov	r8, r0
   14084:	ldr	r1, [r0]
   14088:	ldr	r4, [r0, #28]
   1408c:	ldr	r5, [r4, #16]
   14090:	mov	r0, r4
   14094:	bl	112f4 <myhread_increase_id_by_entry_id@plt>
   14098:	mov	r6, r0
   1409c:	ldr	r1, [r8, #20]
   140a0:	mov	r0, r4
   140a4:	bl	12158 <mythread_mutex_wait@plt>
   140a8:	str	r4, [sp, #8]
   140ac:	str	r5, [sp, #4]
   140b0:	ldr	r0, [r4, #36]	; 0x24
   140b4:	tst	r0, #1
   140b8:	beq	140e4 <mythread_function_queue_stream@@Base+0x70>
   140bc:	mov	r0, #1
   140c0:	str	r0, [r8, #12]
   140c4:	b	140d0 <mythread_function_queue_stream@@Base+0x5c>
   140c8:	ldr	r0, [r8, #24]
   140cc:	bl	11528 <mythread_nanosleep_sleep@plt>
   140d0:	ldr	r0, [r4, #36]	; 0x24
   140d4:	tst	r0, #1
   140d8:	bne	140c8 <mythread_function_queue_stream@@Base+0x54>
   140dc:	mov	r0, #0
   140e0:	str	r0, [r8, #12]
   140e4:	ldr	r9, [r5]
   140e8:	mov	r7, #0
   140ec:	cmp	r9, #0
   140f0:	bne	14144 <mythread_function_queue_stream@@Base+0xd0>
   140f4:	b	14168 <mythread_function_queue_stream@@Base+0xf4>
   140f8:	ldr	r1, [sl, r6, lsl #2]
   140fc:	ldr	r2, [r0, #20]
   14100:	ldr	r3, [sl, r6, lsl #2]
   14104:	ldr	r5, [r0]
   14108:	ldr	r0, [r0, #20]
   1410c:	udiv	r4, r3, r0
   14110:	mls	r0, r4, r0, r3
   14114:	add	r0, r0, r0, lsl #1
   14118:	udiv	r1, r1, r2
   1411c:	ldr	r1, [r5, r1, lsl #2]
   14120:	add	r1, r1, r0, lsl #2
   14124:	ldm	r8, {r0, r2}
   14128:	blx	r2
   1412c:	ldr	r0, [sl, r6, lsl #2]
   14130:	add	r0, r0, #1
   14134:	str	r0, [sl, r6, lsl #2]
   14138:	ldr	r9, [r9, #12]
   1413c:	cmp	r9, #0
   14140:	beq	14168 <mythread_function_queue_stream@@Base+0xf4>
   14144:	ldm	r9, {r0, sl}
   14148:	ldr	r1, [sl, r6, lsl #2]
   1414c:	ldr	r2, [r0, #16]
   14150:	cmp	r1, r2
   14154:	bcc	140f8 <mythread_function_queue_stream@@Base+0x84>
   14158:	add	r7, r7, #1
   1415c:	ldr	r9, [r9, #12]
   14160:	cmp	r9, #0
   14164:	bne	14144 <mythread_function_queue_stream@@Base+0xd0>
   14168:	ldr	r5, [sp, #4]
   1416c:	ldr	r0, [r5, #8]
   14170:	cmp	r7, r0
   14174:	ldr	r4, [sp, #8]
   14178:	bne	140b0 <mythread_function_queue_stream@@Base+0x3c>
   1417c:	ldr	r1, [r4, #36]	; 0x24
   14180:	ldr	r0, [r8, #24]
   14184:	str	r0, [sp]
   14188:	mov	r0, r8
   1418c:	mov	r2, r6
   14190:	mov	r3, r7
   14194:	bl	11360 <mythread_function_see_opt@plt>
   14198:	cmp	r0, #0
   1419c:	beq	140b0 <mythread_function_queue_stream@@Base+0x3c>
   141a0:	mov	r0, #0
   141a4:	sub	sp, fp, #28
   141a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000141ac <mythread_function@@Base>:
   141ac:	push	{r4, r5, r6, sl, fp, lr}
   141b0:	add	fp, sp, #16
   141b4:	mov	r4, r0
   141b8:	ldr	r1, [r0, #20]
   141bc:	ldr	r5, [r0, #28]
   141c0:	mov	r0, r5
   141c4:	bl	12158 <mythread_mutex_wait@plt>
   141c8:	mov	r6, #0
   141cc:	b	141d4 <mythread_function@@Base+0x28>
   141d0:	str	r6, [r4, #12]
   141d4:	ldm	r4, {r0, r2}
   141d8:	mov	r1, r4
   141dc:	blx	r2
   141e0:	ldr	r0, [r4, #12]
   141e4:	orr	r0, r0, #8
   141e8:	str	r0, [r4, #12]
   141ec:	ldr	r1, [r4, #12]
   141f0:	ldr	r0, [r4, #12]
   141f4:	tst	r1, #1
   141f8:	bne	14220 <mythread_function@@Base+0x74>
   141fc:	orr	r0, r0, #4
   14200:	str	r0, [r4, #12]
   14204:	ldr	r1, [r4, #20]
   14208:	mov	r0, r5
   1420c:	bl	12158 <mythread_mutex_wait@plt>
   14210:	b	14228 <mythread_function@@Base+0x7c>
   14214:	ldr	r0, [r4, #24]
   14218:	bl	11528 <mythread_nanosleep_sleep@plt>
   1421c:	ldr	r0, [r4, #12]
   14220:	tst	r0, #1
   14224:	bne	14214 <mythread_function@@Base+0x68>
   14228:	ldr	r0, [r5, #36]	; 0x24
   1422c:	tst	r0, #2
   14230:	ldreq	r0, [r4, #12]
   14234:	tsteq	r0, #2
   14238:	beq	141d0 <mythread_function@@Base+0x24>
   1423c:	ldr	r1, [r4, #20]
   14240:	mov	r0, r5
   14244:	bl	11a68 <mythread_mutex_close@plt>
   14248:	ldr	r0, [r4, #24]
   1424c:	bl	11fc0 <mythread_nanosleep_destroy@plt>
   14250:	mov	r0, #2
   14254:	str	r0, [r4, #12]
   14258:	mov	r0, #0
   1425c:	pop	{r4, r5, r6, sl, fp, pc}

00014260 <mycore_power@@Base>:
   14260:	cmp	r1, #0
   14264:	moveq	r0, #1
   14268:	bxeq	lr
   1426c:	mov	r3, r0
   14270:	mov	r0, #1
   14274:	mov	ip, #0
   14278:	tst	r1, #1
   1427c:	mov	r2, r3
   14280:	movweq	r2, #1
   14284:	mul	r0, r2, r0
   14288:	lsr	r2, r1, #1
   1428c:	mul	r3, r3, r3
   14290:	cmp	ip, r1, lsr #1
   14294:	mov	r1, r2
   14298:	bne	14278 <mycore_power@@Base+0x18>
   1429c:	bx	lr

000142a0 <mycore_strncasecmp@@Base>:
   142a0:	push	{r4, sl, fp, lr}
   142a4:	add	fp, sp, #8
   142a8:	cmp	r0, #0
   142ac:	cmpne	r1, #0
   142b0:	bne	142c0 <mycore_strncasecmp@@Base+0x20>
   142b4:	subs	r0, r0, r1
   142b8:	movwne	r0, #1
   142bc:	pop	{r4, sl, fp, pc}
   142c0:	cmp	r2, #0
   142c4:	beq	142fc <mycore_strncasecmp@@Base+0x5c>
   142c8:	mov	lr, #0
   142cc:	ldr	ip, [pc, #48]	; 14304 <mycore_strncasecmp@@Base+0x64>
   142d0:	add	ip, pc, ip
   142d4:	ldrb	r3, [r1, lr]
   142d8:	ldrb	r3, [ip, r3]
   142dc:	ldrb	r4, [r0, lr]
   142e0:	ldrb	r4, [ip, r4]
   142e4:	cmp	r4, r3
   142e8:	subne	r0, r2, lr
   142ec:	popne	{r4, sl, fp, pc}
   142f0:	add	lr, lr, #1
   142f4:	cmp	lr, r2
   142f8:	bcc	142d4 <mycore_strncasecmp@@Base+0x34>
   142fc:	mov	r0, #0
   14300:	pop	{r4, sl, fp, pc}
   14304:	andeq	fp, r1, r0, asr r3

00014308 <mycore_strcasecmp@@Base>:
   14308:	push	{r4, sl, fp, lr}
   1430c:	add	fp, sp, #8
   14310:	cmp	r0, #0
   14314:	cmpne	r1, #0
   14318:	bne	1432c <mycore_strcasecmp@@Base+0x24>
   1431c:	subs	r2, r0, r1
   14320:	movwne	r2, #1
   14324:	mov	r0, r2
   14328:	pop	{r4, sl, fp, pc}
   1432c:	ldrb	r2, [r1]
   14330:	ldr	ip, [pc, #84]	; 1438c <mycore_strcasecmp@@Base+0x84>
   14334:	add	ip, pc, ip
   14338:	ldrb	lr, [ip, r2]
   1433c:	ldrb	r3, [r0]
   14340:	ldrb	r4, [ip, r3]
   14344:	mov	r2, #1
   14348:	cmp	r4, lr
   1434c:	bne	14378 <mycore_strcasecmp@@Base+0x70>
   14350:	mov	r2, #1
   14354:	tst	r3, #255	; 0xff
   14358:	beq	14380 <mycore_strcasecmp@@Base+0x78>
   1435c:	ldrb	r3, [r1, r2]
   14360:	ldrb	lr, [ip, r3]
   14364:	ldrb	r3, [r0, r2]
   14368:	ldrb	r4, [ip, r3]
   1436c:	add	r2, r2, #1
   14370:	cmp	r4, lr
   14374:	beq	14354 <mycore_strcasecmp@@Base+0x4c>
   14378:	mov	r0, r2
   1437c:	pop	{r4, sl, fp, pc}
   14380:	mov	r2, #0
   14384:	mov	r0, r2
   14388:	pop	{r4, sl, fp, pc}
   1438c:	andeq	fp, r1, ip, ror #5

00014390 <mycore_strncmp@@Base>:
   14390:	push	{fp, lr}
   14394:	mov	fp, sp
   14398:	cmp	r0, #0
   1439c:	cmpne	r1, #0
   143a0:	bne	143b0 <mycore_strncmp@@Base+0x20>
   143a4:	subs	r0, r0, r1
   143a8:	movwne	r0, #1
   143ac:	pop	{fp, pc}
   143b0:	cmp	r2, #0
   143b4:	beq	143dc <mycore_strncmp@@Base+0x4c>
   143b8:	mov	lr, #0
   143bc:	ldrb	ip, [r1, lr]
   143c0:	ldrb	r3, [r0, lr]
   143c4:	cmp	r3, ip
   143c8:	subne	r0, r2, lr
   143cc:	popne	{fp, pc}
   143d0:	add	lr, lr, #1
   143d4:	cmp	lr, r2
   143d8:	bcc	143bc <mycore_strncmp@@Base+0x2c>
   143dc:	mov	r0, #0
   143e0:	pop	{fp, pc}

000143e4 <mycore_strcmp@@Base>:
   143e4:	cmp	r0, #0
   143e8:	cmpne	r1, #0
   143ec:	bne	14400 <mycore_strcmp@@Base+0x1c>
   143f0:	subs	r2, r0, r1
   143f4:	movwne	r2, #1
   143f8:	mov	r0, r2
   143fc:	bx	lr
   14400:	ldrb	r3, [r0]
   14404:	ldrb	ip, [r1]
   14408:	mov	r2, #1
   1440c:	cmp	r3, ip
   14410:	bne	14434 <mycore_strcmp@@Base+0x50>
   14414:	mov	r2, #1
   14418:	tst	r3, #255	; 0xff
   1441c:	beq	1443c <mycore_strcmp@@Base+0x58>
   14420:	ldrb	r3, [r0, r2]
   14424:	ldrb	ip, [r1, r2]
   14428:	add	r2, r2, #1
   1442c:	cmp	r3, ip
   14430:	beq	14418 <mycore_strcmp@@Base+0x34>
   14434:	mov	r0, r2
   14438:	bx	lr
   1443c:	mov	r2, #0
   14440:	mov	r0, r2
   14444:	bx	lr

00014448 <mycore_strcmp_ws@@Base>:
   14448:	cmp	r0, #0
   1444c:	cmpne	r1, #0
   14450:	bne	14464 <mycore_strcmp_ws@@Base+0x1c>
   14454:	subs	r2, r0, r1
   14458:	movwne	r2, #1
   1445c:	mov	r0, r2
   14460:	bx	lr
   14464:	ldrb	r3, [r0]
   14468:	ldrb	ip, [r1]
   1446c:	mov	r2, #1
   14470:	cmp	r3, ip
   14474:	bne	1452c <mycore_strcmp_ws@@Base+0xe4>
   14478:	mov	r2, #1
   1447c:	uxtb	r3, r3
   14480:	cmp	r3, #32
   14484:	bhi	14518 <mycore_strcmp_ws@@Base+0xd0>
   14488:	add	ip, pc, #4
   1448c:	ldr	r3, [ip, r3, lsl #2]
   14490:	add	pc, ip, r3
   14494:	andeq	r0, r0, r0, lsr #1
   14498:	andeq	r0, r0, r4, lsl #1
   1449c:	andeq	r0, r0, r4, lsl #1
   144a0:	andeq	r0, r0, r4, lsl #1
   144a4:	andeq	r0, r0, r4, lsl #1
   144a8:	andeq	r0, r0, r4, lsl #1
   144ac:	andeq	r0, r0, r4, lsl #1
   144b0:	andeq	r0, r0, r4, lsl #1
   144b4:	andeq	r0, r0, r4, lsl #1
   144b8:	andeq	r0, r0, r0, lsr #1
   144bc:	andeq	r0, r0, r0, lsr #1
   144c0:	andeq	r0, r0, r4, lsl #1
   144c4:	andeq	r0, r0, r0, lsr #1
   144c8:	andeq	r0, r0, r0, lsr #1
   144cc:	andeq	r0, r0, r4, lsl #1
   144d0:	andeq	r0, r0, r4, lsl #1
   144d4:	andeq	r0, r0, r4, lsl #1
   144d8:	andeq	r0, r0, r4, lsl #1
   144dc:	andeq	r0, r0, r4, lsl #1
   144e0:	andeq	r0, r0, r4, lsl #1
   144e4:	andeq	r0, r0, r4, lsl #1
   144e8:	andeq	r0, r0, r4, lsl #1
   144ec:	andeq	r0, r0, r4, lsl #1
   144f0:	andeq	r0, r0, r4, lsl #1
   144f4:	andeq	r0, r0, r4, lsl #1
   144f8:	andeq	r0, r0, r4, lsl #1
   144fc:	andeq	r0, r0, r4, lsl #1
   14500:	andeq	r0, r0, r4, lsl #1
   14504:	andeq	r0, r0, r4, lsl #1
   14508:	andeq	r0, r0, r4, lsl #1
   1450c:	andeq	r0, r0, r4, lsl #1
   14510:	andeq	r0, r0, r4, lsl #1
   14514:	andeq	r0, r0, r0, lsr #1
   14518:	ldrb	r3, [r0, r2]
   1451c:	ldrb	ip, [r1, r2]
   14520:	add	r2, r2, #1
   14524:	cmp	r3, ip
   14528:	beq	1447c <mycore_strcmp_ws@@Base+0x34>
   1452c:	mov	r0, r2
   14530:	bx	lr
   14534:	mov	r2, #0
   14538:	mov	r0, r2
   1453c:	bx	lr

00014540 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   14540:	push	{fp, lr}
   14544:	mov	fp, sp
   14548:	mov	r2, r0
   1454c:	ldrb	r3, [r0]
   14550:	mov	r0, #1
   14554:	cmp	r3, #0
   14558:	popeq	{fp, pc}
   1455c:	add	r2, r2, #1
   14560:	ldr	ip, [pc, #48]	; 14598 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x58>
   14564:	add	ip, pc, ip
   14568:	uxtb	r3, r3
   1456c:	ldrb	lr, [ip, r3]
   14570:	ldrb	r3, [r1]
   14574:	ldrb	r3, [ip, r3]
   14578:	cmp	lr, r3
   1457c:	movne	r0, #0
   14580:	popne	{fp, pc}
   14584:	add	r1, r1, #1
   14588:	ldrb	r3, [r2], #1
   1458c:	cmp	r3, #0
   14590:	bne	14568 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x28>
   14594:	pop	{fp, pc}
   14598:	strheq	fp, [r1], -ip

0001459c <mycore_utils_avl_tree_create@@Base>:
   1459c:	mov	r0, #1
   145a0:	mov	r1, #4
   145a4:	b	113a8 <mycore_calloc@plt>

000145a8 <mycore_utils_avl_tree_init@@Base>:
   145a8:	push	{r4, sl, fp, lr}
   145ac:	add	fp, sp, #8
   145b0:	mov	r4, r0
   145b4:	bl	114b0 <mcobject_create@plt>
   145b8:	str	r0, [r4]
   145bc:	cmp	r0, #0
   145c0:	moveq	r0, #2
   145c4:	popeq	{r4, sl, fp, pc}
   145c8:	mov	r1, #256	; 0x100
   145cc:	mov	r2, #24
   145d0:	bl	11bac <mcobject_init@plt>
   145d4:	cmp	r0, #0
   145d8:	movwne	r0, #1
   145dc:	pop	{r4, sl, fp, pc}

000145e0 <mycore_utils_avl_tree_clean@@Base>:
   145e0:	ldr	r0, [r0]
   145e4:	b	12308 <mcobject_clean@plt>

000145e8 <mycore_utils_avl_tree_destroy@@Base>:
   145e8:	push	{r4, r5, r6, sl, fp, lr}
   145ec:	add	fp, sp, #16
   145f0:	mov	r4, #0
   145f4:	cmp	r0, #0
   145f8:	beq	14624 <mycore_utils_avl_tree_destroy@@Base+0x3c>
   145fc:	mov	r6, r1
   14600:	mov	r5, r0
   14604:	ldr	r0, [r0]
   14608:	mov	r1, #1
   1460c:	bl	11288 <mcobject_destroy@plt>
   14610:	cmp	r6, #0
   14614:	moveq	r0, r5
   14618:	popeq	{r4, r5, r6, sl, fp, pc}
   1461c:	mov	r0, r5
   14620:	bl	12188 <mycore_free@plt>
   14624:	mov	r0, r4
   14628:	pop	{r4, r5, r6, sl, fp, pc}

0001462c <mycore_utils_avl_tree_node_create_root@@Base>:
   1462c:	push	{r4, r5, fp, lr}
   14630:	add	fp, sp, #8
   14634:	mov	r4, r2
   14638:	mov	r5, r1
   1463c:	ldr	r0, [r0]
   14640:	mov	r1, #0
   14644:	bl	11e58 <mcobject_malloc@plt>
   14648:	vmov.i32	q8, #0	; 0x00000000
   1464c:	stm	r0, {r4, r5}
   14650:	add	r1, r0, #8
   14654:	vst1.32	{d16-d17}, [r1]
   14658:	pop	{r4, r5, fp, pc}

0001465c <mycore_utils_avl_tree_node_clean@@Base>:
   1465c:	mov	r1, #0
   14660:	vmov.i32	q8, #0	; 0x00000000
   14664:	str	r1, [r0, #16]
   14668:	mov	r2, #20
   1466c:	vst1.32	{d16-d17}, [r0], r2
   14670:	str	r1, [r0]
   14674:	bx	lr

00014678 <mycore_utils_avl_tree_node_height@@Base>:
   14678:	cmp	r0, #0
   1467c:	ldrhne	r0, [r0, #20]
   14680:	moveq	r0, #0
   14684:	sxth	r0, r0
   14688:	bx	lr

0001468c <mycore_utils_avl_tree_node_balance_factor@@Base>:
   1468c:	push	{r4, r5, fp, lr}
   14690:	add	fp, sp, #8
   14694:	mov	r4, r0
   14698:	ldr	r0, [r0, #12]
   1469c:	bl	12350 <mycore_utils_avl_tree_node_height@plt>
   146a0:	mov	r5, r0
   146a4:	ldr	r0, [r4, #8]
   146a8:	bl	12350 <mycore_utils_avl_tree_node_height@plt>
   146ac:	sub	r0, r5, r0
   146b0:	sxth	r0, r0
   146b4:	pop	{r4, r5, fp, pc}

000146b8 <mycore_utils_avl_tree_node_set_height@@Base>:
   146b8:	push	{r4, r5, fp, lr}
   146bc:	add	fp, sp, #8
   146c0:	mov	r4, r0
   146c4:	ldr	r0, [r0, #8]
   146c8:	bl	12350 <mycore_utils_avl_tree_node_height@plt>
   146cc:	mov	r5, r0
   146d0:	ldr	r0, [r4, #12]
   146d4:	bl	12350 <mycore_utils_avl_tree_node_height@plt>
   146d8:	cmp	r5, r0
   146dc:	movgt	r0, r5
   146e0:	add	r0, r0, #1
   146e4:	strh	r0, [r4, #20]
   146e8:	pop	{r4, r5, fp, pc}

000146ec <mycore_utils_avl_tree_node_rotate_right@@Base>:
   146ec:	push	{r4, sl, fp, lr}
   146f0:	add	fp, sp, #8
   146f4:	ldr	r4, [r0, #8]
   146f8:	ldr	r1, [r0, #16]
   146fc:	str	r1, [r4, #16]
   14700:	ldr	r1, [r4, #12]
   14704:	cmp	r1, #0
   14708:	strne	r0, [r1, #16]
   1470c:	ldr	r1, [r4, #12]
   14710:	str	r4, [r0, #16]
   14714:	str	r1, [r0, #8]
   14718:	str	r0, [r4, #12]
   1471c:	bl	11af8 <mycore_utils_avl_tree_node_set_height@plt>
   14720:	mov	r0, r4
   14724:	bl	11af8 <mycore_utils_avl_tree_node_set_height@plt>
   14728:	mov	r0, r4
   1472c:	pop	{r4, sl, fp, pc}

00014730 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   14730:	push	{r4, sl, fp, lr}
   14734:	add	fp, sp, #8
   14738:	ldr	r4, [r0, #12]
   1473c:	ldr	r1, [r0, #16]
   14740:	str	r1, [r4, #16]
   14744:	ldr	r1, [r4, #8]
   14748:	cmp	r1, #0
   1474c:	strne	r0, [r1, #16]
   14750:	ldr	r1, [r4, #8]
   14754:	str	r1, [r0, #12]
   14758:	str	r4, [r0, #16]
   1475c:	str	r0, [r4, #8]
   14760:	bl	11af8 <mycore_utils_avl_tree_node_set_height@plt>
   14764:	mov	r0, r4
   14768:	bl	11af8 <mycore_utils_avl_tree_node_set_height@plt>
   1476c:	mov	r0, r4
   14770:	pop	{r4, sl, fp, pc}

00014774 <mycore_utils_avl_tree_node_balance@@Base>:
   14774:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14778:	add	fp, sp, #24
   1477c:	mov	r8, r1
   14780:	mov	r4, r0
   14784:	ldr	r6, [r0, #8]
   14788:	mov	r0, r6
   1478c:	bl	12350 <mycore_utils_avl_tree_node_height@plt>
   14790:	mov	r5, r0
   14794:	ldr	r7, [r4, #12]
   14798:	mov	r0, r7
   1479c:	bl	12350 <mycore_utils_avl_tree_node_height@plt>
   147a0:	cmp	r0, r5
   147a4:	mov	r1, r0
   147a8:	movlt	r1, r5
   147ac:	add	r1, r1, #1
   147b0:	strh	r1, [r4, #20]
   147b4:	sub	r0, r0, r5
   147b8:	cmn	r0, #2
   147bc:	beq	14810 <mycore_utils_avl_tree_node_balance@@Base+0x9c>
   147c0:	cmp	r0, #2
   147c4:	bne	14858 <mycore_utils_avl_tree_node_balance@@Base+0xe4>
   147c8:	mov	r0, r7
   147cc:	bl	11264 <mycore_utils_avl_tree_node_balance_factor@plt>
   147d0:	cmn	r0, #1
   147d4:	bgt	147e4 <mycore_utils_avl_tree_node_balance@@Base+0x70>
   147d8:	mov	r0, r7
   147dc:	bl	11210 <mycore_utils_avl_tree_node_rotate_right@plt>
   147e0:	str	r0, [r4, #12]
   147e4:	ldr	r5, [r4, #16]
   147e8:	cmp	r5, #0
   147ec:	beq	1486c <mycore_utils_avl_tree_node_balance@@Base+0xf8>
   147f0:	ldr	r6, [r5, #12]
   147f4:	mov	r0, r4
   147f8:	bl	11fcc <mycore_utils_avl_tree_node_rotate_left@plt>
   147fc:	cmp	r6, r4
   14800:	strne	r0, [r5, #8]
   14804:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14808:	str	r0, [r5, #12]
   1480c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14810:	mov	r0, r6
   14814:	bl	11264 <mycore_utils_avl_tree_node_balance_factor@plt>
   14818:	cmp	r0, #1
   1481c:	blt	1482c <mycore_utils_avl_tree_node_balance@@Base+0xb8>
   14820:	mov	r0, r6
   14824:	bl	11fcc <mycore_utils_avl_tree_node_rotate_left@plt>
   14828:	str	r0, [r4, #8]
   1482c:	ldr	r5, [r4, #16]
   14830:	cmp	r5, #0
   14834:	beq	14878 <mycore_utils_avl_tree_node_balance@@Base+0x104>
   14838:	ldr	r6, [r5, #12]
   1483c:	mov	r0, r4
   14840:	bl	11210 <mycore_utils_avl_tree_node_rotate_right@plt>
   14844:	cmp	r6, r4
   14848:	strne	r0, [r5, #8]
   1484c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14850:	str	r0, [r5, #12]
   14854:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14858:	ldr	r0, [r4, #16]
   1485c:	cmp	r0, #0
   14860:	streq	r4, [r8]
   14864:	ldr	r0, [r4, #16]
   14868:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1486c:	mov	r0, r4
   14870:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14874:	b	14730 <mycore_utils_avl_tree_node_rotate_left@@Base>
   14878:	mov	r0, r4
   1487c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14880:	b	146ec <mycore_utils_avl_tree_node_rotate_right@@Base>

00014884 <mycore_utils_avl_tree_add@@Base>:
   14884:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14888:	add	fp, sp, #24
   1488c:	mov	r8, r3
   14890:	mov	r6, r2
   14894:	mov	r4, r1
   14898:	ldr	r5, [r1]
   1489c:	cmp	r5, #0
   148a0:	beq	1490c <mycore_utils_avl_tree_add@@Base+0x88>
   148a4:	ldr	r0, [r0]
   148a8:	mov	r1, #0
   148ac:	bl	11e58 <mcobject_malloc@plt>
   148b0:	mov	r7, r0
   148b4:	bl	1235c <mycore_utils_avl_tree_node_clean@plt>
   148b8:	ldr	r1, [r5, #4]
   148bc:	cmp	r1, r6
   148c0:	bne	148d0 <mycore_utils_avl_tree_add@@Base+0x4c>
   148c4:	mov	r0, r5
   148c8:	str	r8, [r0]
   148cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148d0:	cmp	r1, r6
   148d4:	bls	148e8 <mycore_utils_avl_tree_add@@Base+0x64>
   148d8:	ldr	r0, [r5, #8]
   148dc:	cmp	r0, #0
   148e0:	bne	148f4 <mycore_utils_avl_tree_add@@Base+0x70>
   148e4:	b	14920 <mycore_utils_avl_tree_add@@Base+0x9c>
   148e8:	ldr	r0, [r5, #12]
   148ec:	cmp	r0, #0
   148f0:	beq	14928 <mycore_utils_avl_tree_add@@Base+0xa4>
   148f4:	ldr	r1, [r0, #4]
   148f8:	cmp	r1, r6
   148fc:	mov	r5, r0
   14900:	bne	148d0 <mycore_utils_avl_tree_add@@Base+0x4c>
   14904:	str	r8, [r0]
   14908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1490c:	mov	r1, r6
   14910:	mov	r2, r8
   14914:	bl	12284 <mycore_utils_avl_tree_node_create_root@plt>
   14918:	str	r0, [r4]
   1491c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14920:	add	r0, r5, #8
   14924:	b	1492c <mycore_utils_avl_tree_add@@Base+0xa8>
   14928:	add	r0, r5, #12
   1492c:	str	r7, [r0]
   14930:	str	r5, [r7, #16]
   14934:	str	r8, [r7]
   14938:	str	r6, [r7, #4]
   1493c:	mov	r0, r7
   14940:	mov	r1, r4
   14944:	bl	11e1c <mycore_utils_avl_tree_node_balance@plt>
   14948:	mov	r7, r0
   1494c:	cmp	r0, #0
   14950:	bne	1493c <mycore_utils_avl_tree_add@@Base+0xb8>
   14954:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014958 <mycore_utils_avl_tree_find_min@@Base>:
   14958:	cmp	r0, #0
   1495c:	moveq	r1, #0
   14960:	moveq	r0, r1
   14964:	bxeq	lr
   14968:	mov	r1, r0
   1496c:	ldr	r0, [r0, #12]
   14970:	cmp	r0, #0
   14974:	bne	14968 <mycore_utils_avl_tree_find_min@@Base+0x10>
   14978:	mov	r0, r1
   1497c:	bx	lr

00014980 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   14980:	push	{r4, sl, fp, lr}
   14984:	add	fp, sp, #8
   14988:	mov	r4, r2
   1498c:	cmp	r1, #0
   14990:	beq	149e8 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   14994:	ldr	r2, [r0, #8]
   14998:	cmp	r2, r1
   1499c:	beq	14a0c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x8c>
   149a0:	ldr	r2, [r1, #16]
   149a4:	mov	r3, #0
   149a8:	str	r3, [r2, #12]
   149ac:	ldr	r2, [r0, #16]
   149b0:	str	r2, [r1, #16]
   149b4:	ldr	r2, [r0, #12]
   149b8:	str	r2, [r1, #12]
   149bc:	ldr	r2, [r0, #8]
   149c0:	str	r2, [r1, #8]
   149c4:	ldr	r2, [r0, #8]
   149c8:	cmp	r2, #0
   149cc:	strne	r1, [r2, #16]
   149d0:	ldr	r3, [r0, #12]
   149d4:	cmp	r3, #0
   149d8:	mov	r2, r1
   149dc:	strne	r1, [r3, #16]
   149e0:	movne	r2, r1
   149e4:	b	14a34 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xb4>
   149e8:	ldr	r2, [r0, #16]
   149ec:	cmp	r2, #0
   149f0:	beq	14a74 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xf4>
   149f4:	ldr	r1, [r0, #12]
   149f8:	ldr	r3, [r2, #8]
   149fc:	cmp	r3, r0
   14a00:	streq	r1, [r2, #8]
   14a04:	strne	r1, [r2, #12]
   14a08:	b	14a58 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   14a0c:	ldr	r2, [r0, #16]
   14a10:	str	r2, [r1, #16]
   14a14:	ldr	r2, [r0, #12]
   14a18:	str	r2, [r1, #12]
   14a1c:	ldr	r2, [r1, #8]
   14a20:	cmp	r2, #0
   14a24:	moveq	r2, r1
   14a28:	ldr	r3, [r0, #12]
   14a2c:	cmp	r3, #0
   14a30:	strne	r1, [r3, #16]
   14a34:	ldr	lr, [r0, #16]
   14a38:	cmp	lr, #0
   14a3c:	mov	ip, r4
   14a40:	beq	14a54 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd4>
   14a44:	ldr	r3, [lr, #8]!
   14a48:	cmp	r3, r0
   14a4c:	addne	lr, lr, #4
   14a50:	mov	ip, lr
   14a54:	str	r1, [ip]
   14a58:	mov	r0, r2
   14a5c:	mov	r1, r4
   14a60:	bl	11e1c <mycore_utils_avl_tree_node_balance@plt>
   14a64:	mov	r2, r0
   14a68:	cmp	r0, #0
   14a6c:	bne	14a58 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   14a70:	pop	{r4, sl, fp, pc}
   14a74:	ldr	r0, [r0, #12]
   14a78:	str	r0, [r4]
   14a7c:	pop	{r4, sl, fp, pc}

00014a80 <mycore_utils_avl_tree_delete@@Base>:
   14a80:	push	{r4, r5, r6, r7, fp, lr}
   14a84:	add	fp, sp, #16
   14a88:	ldr	r4, [r1]
   14a8c:	mov	r6, #0
   14a90:	cmp	r4, #0
   14a94:	beq	14ac0 <mycore_utils_avl_tree_delete@@Base+0x40>
   14a98:	mov	r7, r1
   14a9c:	mov	r5, r0
   14aa0:	ldr	r0, [r4, #4]
   14aa4:	cmp	r0, r2
   14aa8:	beq	14ac8 <mycore_utils_avl_tree_delete@@Base+0x48>
   14aac:	mov	r0, #12
   14ab0:	movwhi	r0, #8
   14ab4:	ldr	r4, [r4, r0]
   14ab8:	cmp	r4, #0
   14abc:	bne	14aa0 <mycore_utils_avl_tree_delete@@Base+0x20>
   14ac0:	mov	r0, r6
   14ac4:	pop	{r4, r5, r6, r7, fp, pc}
   14ac8:	ldr	r0, [r4, #8]
   14acc:	bl	111d4 <mycore_utils_avl_tree_find_min@plt>
   14ad0:	mov	r1, r0
   14ad4:	mov	r0, r4
   14ad8:	mov	r2, r7
   14adc:	bl	118b8 <mycore_utils_avl_tree_rotate_for_delete@plt>
   14ae0:	ldr	r6, [r4]
   14ae4:	ldr	r0, [r5]
   14ae8:	mov	r1, r4
   14aec:	bl	11414 <mcobject_free@plt>
   14af0:	mov	r0, r6
   14af4:	pop	{r4, r5, r6, r7, fp, pc}

00014af8 <mycore_utils_avl_tree_search_by_type@@Base>:
   14af8:	mov	r0, #0
   14afc:	b	14b0c <mycore_utils_avl_tree_search_by_type@@Base+0x14>
   14b00:	mov	r3, #12
   14b04:	movwhi	r3, #8
   14b08:	ldr	r1, [r1, r3]
   14b0c:	cmp	r1, #0
   14b10:	bxeq	lr
   14b14:	ldr	r3, [r1, #4]
   14b18:	cmp	r3, r2
   14b1c:	bne	14b00 <mycore_utils_avl_tree_search_by_type@@Base+0x8>
   14b20:	mov	r0, r1
   14b24:	bx	lr

00014b28 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   14b28:	push	{r4, r5, r6, r7, fp, lr}
   14b2c:	add	fp, sp, #16
   14b30:	cmp	r1, #0
   14b34:	popeq	{r4, r5, r6, r7, fp, pc}
   14b38:	mov	r4, r3
   14b3c:	mov	r5, r2
   14b40:	mov	r6, r1
   14b44:	mov	r7, r0
   14b48:	mov	r0, r6
   14b4c:	mov	r1, r4
   14b50:	blx	r5
   14b54:	ldr	r1, [r6, #8]
   14b58:	mov	r0, r7
   14b5c:	mov	r2, r5
   14b60:	mov	r3, r4
   14b64:	bl	116e4 <mycore_utils_avl_tree_list_all_nodes@plt>
   14b68:	ldr	r6, [r6, #12]
   14b6c:	cmp	r6, #0
   14b70:	bne	14b48 <mycore_utils_avl_tree_list_all_nodes@@Base+0x20>
   14b74:	pop	{r4, r5, r6, r7, fp, pc}

00014b78 <mchar_async_create@@Base>:
   14b78:	mov	r0, #1
   14b7c:	mov	r1, #84	; 0x54
   14b80:	b	113a8 <mycore_calloc@plt>

00014b84 <mchar_async_init@@Base>:
   14b84:	push	{r4, r5, fp, lr}
   14b88:	add	fp, sp, #8
   14b8c:	mov	r4, r0
   14b90:	str	r1, [r0, #16]
   14b94:	mov	r0, #1024	; 0x400
   14b98:	str	r0, [r4, #8]
   14b9c:	cmp	r2, #4096	; 0x1000
   14ba0:	movls	r2, #4096	; 0x1000
   14ba4:	str	r2, [r4]
   14ba8:	mov	r0, #1024	; 0x400
   14bac:	mov	r1, #4
   14bb0:	bl	113a8 <mycore_calloc@plt>
   14bb4:	str	r0, [r4, #4]
   14bb8:	mov	r5, #2
   14bbc:	cmp	r0, #0
   14bc0:	beq	14c8c <mchar_async_init@@Base+0x108>
   14bc4:	ldr	r0, [r4, #16]
   14bc8:	mov	r1, #20
   14bcc:	bl	113a8 <mycore_calloc@plt>
   14bd0:	ldr	r1, [r4, #4]
   14bd4:	str	r0, [r1]
   14bd8:	ldr	r0, [r4, #4]
   14bdc:	ldr	r1, [r0]
   14be0:	cmp	r1, #0
   14be4:	beq	14c0c <mchar_async_init@@Base+0x88>
   14be8:	add	r0, r4, #24
   14bec:	bl	11ff0 <mchar_async_cache_init@plt>
   14bf0:	cmp	r0, #0
   14bf4:	beq	14c1c <mchar_async_init@@Base+0x98>
   14bf8:	mov	r5, r0
   14bfc:	ldr	r0, [r4, #4]
   14c00:	ldr	r0, [r0]
   14c04:	bl	12188 <mycore_free@plt>
   14c08:	ldr	r0, [r4, #4]
   14c0c:	bl	12188 <mycore_free@plt>
   14c10:	str	r0, [r4, #4]
   14c14:	mov	r0, r5
   14c18:	pop	{r4, r5, fp, pc}
   14c1c:	mov	r0, #64	; 0x40
   14c20:	mov	r5, #0
   14c24:	str	r5, [r4, #60]	; 0x3c
   14c28:	str	r0, [r4, #64]	; 0x40
   14c2c:	mov	r0, #64	; 0x40
   14c30:	mov	r1, #36	; 0x24
   14c34:	bl	113a8 <mycore_calloc@plt>
   14c38:	str	r0, [r4, #56]	; 0x38
   14c3c:	cmp	r0, #0
   14c40:	beq	14c8c <mchar_async_init@@Base+0x108>
   14c44:	mov	r5, #0
   14c48:	ldr	r0, [r4, #64]	; 0x40
   14c4c:	str	r5, [r4, #72]	; 0x48
   14c50:	str	r0, [r4, #76]	; 0x4c
   14c54:	lsl	r0, r0, #2
   14c58:	bl	12050 <mycore_malloc@plt>
   14c5c:	str	r0, [r4, #68]	; 0x44
   14c60:	cmp	r0, #0
   14c64:	beq	14c8c <mchar_async_init@@Base+0x108>
   14c68:	mov	r0, r4
   14c6c:	bl	11f9c <mchar_async_clean@plt>
   14c70:	bl	11258 <mcsync_create@plt>
   14c74:	str	r0, [r4, #80]	; 0x50
   14c78:	cmp	r0, #0
   14c7c:	mov	r5, #2
   14c80:	beq	14c8c <mchar_async_init@@Base+0x108>
   14c84:	pop	{r4, r5, fp, lr}
   14c88:	b	11c84 <mcsync_init@plt>
   14c8c:	mov	r0, r5
   14c90:	pop	{r4, r5, fp, pc}

00014c94 <mchar_async_cache_init@@Base>:
   14c94:	push	{r4, r5, fp, lr}
   14c98:	add	fp, sp, #8
   14c9c:	mov	r4, r0
   14ca0:	mov	r5, #0
   14ca4:	mov	r0, #1
   14ca8:	mov	r1, #1024	; 0x400
   14cac:	str	r1, [r4, #4]
   14cb0:	str	r0, [r4, #8]
   14cb4:	str	r5, [r4, #12]
   14cb8:	str	r5, [r4, #16]
   14cbc:	mov	r0, #20480	; 0x5000
   14cc0:	bl	12050 <mycore_malloc@plt>
   14cc4:	str	r0, [r4]
   14cc8:	cmp	r0, #0
   14ccc:	beq	14d18 <mchar_async_cache_init@@Base+0x84>
   14cd0:	str	r5, [r0, #8]
   14cd4:	ldr	r0, [r4]
   14cd8:	str	r5, [r0]
   14cdc:	str	r5, [r0, #4]
   14ce0:	str	r5, [r0, #12]
   14ce4:	ldr	r0, [r4, #4]
   14ce8:	str	r5, [r4, #24]
   14cec:	str	r0, [r4, #28]
   14cf0:	lsl	r0, r0, #2
   14cf4:	bl	12050 <mycore_malloc@plt>
   14cf8:	str	r0, [r4, #20]
   14cfc:	cmp	r0, #0
   14d00:	beq	14d0c <mchar_async_cache_init@@Base+0x78>
   14d04:	mov	r0, r5
   14d08:	pop	{r4, r5, fp, pc}
   14d0c:	ldr	r0, [r4]
   14d10:	bl	12188 <mycore_free@plt>
   14d14:	str	r0, [r4]
   14d18:	mov	r5, #2
   14d1c:	mov	r0, r5
   14d20:	pop	{r4, r5, fp, pc}

00014d24 <mchar_async_clean@@Base>:
   14d24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d28:	add	fp, sp, #24
   14d2c:	mov	r8, r0
   14d30:	mov	r0, #1
   14d34:	str	r0, [r8, #12]
   14d38:	mov	r5, #0
   14d3c:	str	r5, [r8, #20]
   14d40:	add	r0, r8, #24
   14d44:	bl	11b58 <mchar_async_cache_clean@plt>
   14d48:	ldr	r0, [r8, #60]	; 0x3c
   14d4c:	cmp	r0, #0
   14d50:	beq	14da4 <mchar_async_clean@@Base+0x80>
   14d54:	mov	r6, #0
   14d58:	mov	r7, #0
   14d5c:	ldr	r4, [r8, #56]	; 0x38
   14d60:	add	r5, r4, r6
   14d64:	add	r0, r5, #4
   14d68:	bl	11b58 <mchar_async_cache_clean@plt>
   14d6c:	ldr	r2, [r8]
   14d70:	mov	r0, r8
   14d74:	mov	r1, r5
   14d78:	bl	11de0 <mchar_async_chunk_malloc@plt>
   14d7c:	str	r0, [r4, r6]
   14d80:	cmp	r0, #0
   14d84:	beq	14dac <mchar_async_clean@@Base+0x88>
   14d88:	mov	r5, #0
   14d8c:	str	r5, [r0, #16]
   14d90:	add	r6, r6, #36	; 0x24
   14d94:	add	r7, r7, #1
   14d98:	ldr	r0, [r8, #60]	; 0x3c
   14d9c:	cmp	r7, r0
   14da0:	bcc	14d5c <mchar_async_clean@@Base+0x38>
   14da4:	mov	r0, r5
   14da8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14dac:	mov	r5, #2
   14db0:	mov	r0, r5
   14db4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014db8 <mchar_async_cache_clean@@Base>:
   14db8:	mov	r1, #0
   14dbc:	mov	r2, #1
   14dc0:	str	r2, [r0, #8]
   14dc4:	str	r1, [r0, #12]
   14dc8:	str	r1, [r0, #16]
   14dcc:	str	r1, [r0, #24]
   14dd0:	ldr	r0, [r0]
   14dd4:	cmp	r0, #0
   14dd8:	bxeq	lr
   14ddc:	vmov.i32	q8, #0	; 0x00000000
   14de0:	vst1.32	{d16-d17}, [r0]
   14de4:	bx	lr

00014de8 <mchar_async_chunk_malloc@@Base>:
   14de8:	push	{r4, r5, fp, lr}
   14dec:	add	fp, sp, #8
   14df0:	mov	r4, r2
   14df4:	mov	r5, r0
   14df8:	ldr	r0, [r0, #80]	; 0x50
   14dfc:	bl	11c6c <mcsync_lock@plt>
   14e00:	mov	r0, r5
   14e04:	mov	r2, r4
   14e08:	bl	11f78 <mchar_async_chunk_malloc_without_lock@plt>
   14e0c:	mov	r4, r0
   14e10:	ldr	r0, [r5, #80]	; 0x50
   14e14:	bl	1226c <mcsync_unlock@plt>
   14e18:	mov	r0, r4
   14e1c:	pop	{r4, r5, fp, pc}

00014e20 <mchar_async_destroy@@Base>:
   14e20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e24:	add	fp, sp, #24
   14e28:	cmp	r0, #0
   14e2c:	moveq	r6, #0
   14e30:	moveq	r0, r6
   14e34:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e38:	mov	r8, r1
   14e3c:	mov	r4, r0
   14e40:	ldr	r0, [r0, #56]	; 0x38
   14e44:	cmp	r0, #0
   14e48:	beq	14e94 <mchar_async_destroy@@Base+0x74>
   14e4c:	ldr	r0, [r4, #60]	; 0x3c
   14e50:	cmp	r0, #0
   14e54:	beq	14e84 <mchar_async_destroy@@Base+0x64>
   14e58:	mov	r5, #0
   14e5c:	mov	r6, #4
   14e60:	ldr	r0, [r4, #56]	; 0x38
   14e64:	add	r0, r0, r6
   14e68:	mov	r1, #0
   14e6c:	bl	11ca8 <mchar_async_cache_destroy@plt>
   14e70:	add	r6, r6, #36	; 0x24
   14e74:	add	r5, r5, #1
   14e78:	ldr	r0, [r4, #60]	; 0x3c
   14e7c:	cmp	r5, r0
   14e80:	bcc	14e60 <mchar_async_destroy@@Base+0x40>
   14e84:	ldr	r0, [r4, #56]	; 0x38
   14e88:	bl	12188 <mycore_free@plt>
   14e8c:	mov	r0, #0
   14e90:	str	r0, [r4, #56]	; 0x38
   14e94:	ldr	r0, [r4, #68]	; 0x44
   14e98:	cmp	r0, #0
   14e9c:	beq	14ea4 <mchar_async_destroy@@Base+0x84>
   14ea0:	bl	12188 <mycore_free@plt>
   14ea4:	ldr	r0, [r4, #4]
   14ea8:	cmp	r0, #0
   14eac:	beq	14f44 <mchar_async_destroy@@Base+0x124>
   14eb0:	ldr	r0, [r4, #12]
   14eb4:	cmp	r0, #0
   14eb8:	beq	14f34 <mchar_async_destroy@@Base+0x114>
   14ebc:	mov	r6, #0
   14ec0:	ldr	r0, [r4, #4]
   14ec4:	ldr	r0, [r0, r6, lsl #2]
   14ec8:	cmp	r0, #0
   14ecc:	beq	14f24 <mchar_async_destroy@@Base+0x104>
   14ed0:	ldr	r0, [r4, #4]
   14ed4:	ldr	r1, [r4, #16]
   14ed8:	add	r0, r0, r6, lsl #2
   14edc:	cmp	r1, #0
   14ee0:	beq	14f1c <mchar_async_destroy@@Base+0xfc>
   14ee4:	mov	r7, #0
   14ee8:	mov	r5, #0
   14eec:	ldr	r0, [r0]
   14ef0:	ldr	r0, [r0, r7]
   14ef4:	cmp	r0, #0
   14ef8:	beq	14f00 <mchar_async_destroy@@Base+0xe0>
   14efc:	bl	12188 <mycore_free@plt>
   14f00:	ldr	r0, [r4, #4]
   14f04:	ldr	r1, [r4, #16]
   14f08:	add	r0, r0, r6, lsl #2
   14f0c:	add	r7, r7, #20
   14f10:	add	r5, r5, #1
   14f14:	cmp	r5, r1
   14f18:	bcc	14eec <mchar_async_destroy@@Base+0xcc>
   14f1c:	ldr	r0, [r0]
   14f20:	bl	12188 <mycore_free@plt>
   14f24:	ldr	r0, [r4, #12]
   14f28:	add	r6, r6, #1
   14f2c:	cmp	r6, r0
   14f30:	bcc	14ec0 <mchar_async_destroy@@Base+0xa0>
   14f34:	ldr	r0, [r4, #4]
   14f38:	bl	12188 <mycore_free@plt>
   14f3c:	mov	r0, #0
   14f40:	str	r0, [r4, #4]
   14f44:	add	r0, r4, #24
   14f48:	mov	r6, #0
   14f4c:	mov	r1, #0
   14f50:	bl	11ca8 <mchar_async_cache_destroy@plt>
   14f54:	ldr	r0, [r4, #80]	; 0x50
   14f58:	mov	r1, #1
   14f5c:	bl	11630 <mcsync_destroy@plt>
   14f60:	vmov.i32	q8, #0	; 0x00000000
   14f64:	str	r6, [r4, #80]	; 0x50
   14f68:	add	r0, r4, #48	; 0x30
   14f6c:	vst1.32	{d16-d17}, [r0]
   14f70:	add	r0, r4, #32
   14f74:	vst1.32	{d16-d17}, [r0]
   14f78:	add	r0, r4, #16
   14f7c:	vst1.32	{d16-d17}, [r0]
   14f80:	mov	r0, #64	; 0x40
   14f84:	mov	r1, r4
   14f88:	vst1.32	{d16-d17}, [r1], r0
   14f8c:	vst1.32	{d16-d17}, [r1]
   14f90:	cmp	r8, #0
   14f94:	moveq	r0, r4
   14f98:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f9c:	mov	r0, r4
   14fa0:	bl	12188 <mycore_free@plt>
   14fa4:	mov	r0, r6
   14fa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014fac <mchar_async_cache_destroy@@Base>:
   14fac:	push	{r4, r5, r6, sl, fp, lr}
   14fb0:	add	fp, sp, #16
   14fb4:	mov	r4, #0
   14fb8:	cmp	r0, #0
   14fbc:	beq	14ffc <mchar_async_cache_destroy@@Base+0x50>
   14fc0:	mov	r6, r1
   14fc4:	mov	r5, r0
   14fc8:	ldr	r0, [r0]
   14fcc:	cmp	r0, #0
   14fd0:	beq	14fd8 <mchar_async_cache_destroy@@Base+0x2c>
   14fd4:	bl	12188 <mycore_free@plt>
   14fd8:	ldr	r0, [r5, #20]
   14fdc:	cmp	r0, #0
   14fe0:	beq	14fe8 <mchar_async_cache_destroy@@Base+0x3c>
   14fe4:	bl	12188 <mycore_free@plt>
   14fe8:	cmp	r6, #0
   14fec:	moveq	r0, r5
   14ff0:	popeq	{r4, r5, r6, sl, fp, pc}
   14ff4:	mov	r0, r5
   14ff8:	bl	12188 <mycore_free@plt>
   14ffc:	mov	r0, r4
   15000:	pop	{r4, r5, r6, sl, fp, pc}

00015004 <mchar_async_mem_malloc@@Base>:
   15004:	cmp	r2, #0
   15008:	bxeq	lr
   1500c:	push	{r4, r5, r6, sl, fp, lr}
   15010:	add	fp, sp, #16
   15014:	mov	r5, r3
   15018:	mov	r4, r2
   1501c:	mov	r6, r0
   15020:	ldr	r0, [r2]
   15024:	cmp	r0, #0
   15028:	beq	15048 <mchar_async_mem_malloc@@Base+0x44>
   1502c:	ldr	r1, [r4, #8]
   15030:	cmp	r1, r5
   15034:	bcs	15060 <mchar_async_mem_malloc@@Base+0x5c>
   15038:	bl	12188 <mycore_free@plt>
   1503c:	ldr	r0, [r6]
   15040:	add	r0, r0, r5
   15044:	b	15054 <mchar_async_mem_malloc@@Base+0x50>
   15048:	ldr	r0, [r6]
   1504c:	cmp	r0, r5
   15050:	movcc	r0, r5
   15054:	str	r0, [r4, #8]
   15058:	bl	12050 <mycore_malloc@plt>
   1505c:	str	r0, [r4]
   15060:	mov	r0, #0
   15064:	str	r0, [r4, #4]
   15068:	pop	{r4, r5, r6, sl, fp, lr}
   1506c:	bx	lr

00015070 <mchar_async_chunk_malloc_without_lock@@Base>:
   15070:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15074:	add	fp, sp, #24
   15078:	mov	r8, r2
   1507c:	mov	r5, r0
   15080:	ldr	r0, [r0, #40]	; 0x28
   15084:	cmp	r0, #0
   15088:	beq	150b8 <mchar_async_chunk_malloc_without_lock@@Base+0x48>
   1508c:	add	r5, r5, #24
   15090:	mov	r0, r5
   15094:	mov	r1, r8
   15098:	bl	122fc <mchar_async_cache_delete@plt>
   1509c:	cmp	r0, #0
   150a0:	ldrne	r1, [r5]
   150a4:	addne	r0, r0, r0, lsl #2
   150a8:	ldrne	r0, [r1, r0, lsl #2]
   150ac:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   150b0:	mov	r0, #0
   150b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   150b8:	ldr	r0, [r5, #16]
   150bc:	ldr	r1, [r5, #20]
   150c0:	cmp	r1, r0
   150c4:	bcc	15154 <mchar_async_chunk_malloc_without_lock@@Base+0xe4>
   150c8:	ldr	r1, [r5, #8]
   150cc:	ldr	r7, [r5, #12]
   150d0:	add	r0, r7, #1
   150d4:	str	r0, [r5, #12]
   150d8:	cmp	r0, r1
   150dc:	bcc	15120 <mchar_async_chunk_malloc_without_lock@@Base+0xb0>
   150e0:	lsl	r0, r1, #1
   150e4:	str	r0, [r5, #8]
   150e8:	ldr	r0, [r5, #4]
   150ec:	lsl	r1, r1, #3
   150f0:	bl	110b4 <mycore_realloc@plt>
   150f4:	cmp	r0, #0
   150f8:	beq	150b0 <mchar_async_chunk_malloc_without_lock@@Base+0x40>
   150fc:	mov	r6, r0
   15100:	ldr	r1, [r5, #8]
   15104:	ldr	r2, [r5, #12]
   15108:	add	r0, r0, r2, lsl #2
   1510c:	sub	r1, r1, r2
   15110:	lsl	r2, r1, #2
   15114:	mov	r1, #0
   15118:	bl	11ccc <memset@plt>
   1511c:	str	r6, [r5, #4]
   15120:	ldr	r0, [r5, #4]
   15124:	ldr	r0, [r0, r7, lsl #2]
   15128:	cmp	r0, #0
   1512c:	bne	1514c <mchar_async_chunk_malloc_without_lock@@Base+0xdc>
   15130:	ldr	r0, [r5, #16]
   15134:	mov	r1, #20
   15138:	bl	113a8 <mycore_calloc@plt>
   1513c:	cmp	r0, #0
   15140:	beq	150b0 <mchar_async_chunk_malloc_without_lock@@Base+0x40>
   15144:	ldr	r1, [r5, #4]
   15148:	str	r0, [r1, r7, lsl #2]
   1514c:	mov	r0, #0
   15150:	str	r0, [r5, #20]
   15154:	ldr	r0, [r5, #4]
   15158:	ldr	r1, [r5, #12]
   1515c:	ldr	r2, [r5, #20]
   15160:	add	r0, r0, r1, lsl #2
   15164:	ldr	r7, [r0, #-4]
   15168:	add	r0, r2, #1
   1516c:	str	r0, [r5, #20]
   15170:	add	r4, r2, r2, lsl #2
   15174:	add	r6, r7, r4, lsl #2
   15178:	mov	r0, r5
   1517c:	mov	r2, r6
   15180:	mov	r3, r8
   15184:	bl	123f8 <mchar_async_mem_malloc@plt>
   15188:	ldr	r0, [r7, r4, lsl #2]
   1518c:	cmp	r0, #0
   15190:	movne	r0, r6
   15194:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015198 <mchar_async_cache_delete@@Base>:
   15198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1519c:	add	fp, sp, #28
   151a0:	sub	sp, sp, #4
   151a4:	ldr	r2, [r0, #12]
   151a8:	mov	r8, #0
   151ac:	cmp	r2, #0
   151b0:	beq	153dc <mchar_async_cache_delete@@Base+0x244>
   151b4:	mov	sl, r0
   151b8:	ldr	r0, [r0]
   151bc:	add	r3, r2, r2, lsl #2
   151c0:	add	r3, r0, r3, lsl #2
   151c4:	ldr	r7, [r3, #4]
   151c8:	cmp	r7, r1
   151cc:	bcs	151e0 <mchar_async_cache_delete@@Base+0x48>
   151d0:	ldr	r2, [r3, #12]
   151d4:	cmp	r2, #0
   151d8:	bne	151bc <mchar_async_cache_delete@@Base+0x24>
   151dc:	b	153dc <mchar_async_cache_delete@@Base+0x244>
   151e0:	mov	r6, r2
   151e4:	add	r2, r2, r2, lsl #2
   151e8:	add	r5, r0, r2, lsl #2
   151ec:	mov	r3, r5
   151f0:	ldr	r2, [r3, #12]!
   151f4:	add	r7, r2, r2, lsl #2
   151f8:	add	r7, r0, r7, lsl #2
   151fc:	ldr	r4, [r7, #4]
   15200:	cmp	r4, r1
   15204:	beq	151e0 <mchar_async_cache_delete@@Base+0x48>
   15208:	ldr	lr, [r5, #16]
   1520c:	cmp	lr, #0
   15210:	beq	15280 <mchar_async_cache_delete@@Base+0xe8>
   15214:	add	r1, lr, lr, lsl #2
   15218:	add	ip, r0, r1, lsl #2
   1521c:	mov	r9, ip
   15220:	ldr	r1, [r9, #8]!
   15224:	cmp	r1, r6
   15228:	bne	152d8 <mchar_async_cache_delete@@Base+0x140>
   1522c:	ldr	ip, [r5, #8]!
   15230:	cmp	r2, #0
   15234:	beq	1533c <mchar_async_cache_delete@@Base+0x1a4>
   15238:	cmp	ip, #0
   1523c:	beq	15368 <mchar_async_cache_delete@@Base+0x1d0>
   15240:	ldr	r3, [r7, #8]!
   15244:	mov	r4, r3
   15248:	add	r1, r3, r3, lsl #2
   1524c:	add	r1, r0, r1, lsl #2
   15250:	ldr	r3, [r1, #8]!
   15254:	cmp	r3, #0
   15258:	bne	15244 <mchar_async_cache_delete@@Base+0xac>
   1525c:	cmp	r4, #0
   15260:	beq	15364 <mchar_async_cache_delete@@Base+0x1cc>
   15264:	str	ip, [r1]
   15268:	ldr	r1, [r5]
   1526c:	add	r1, r1, r1, lsl #2
   15270:	add	r1, r0, r1, lsl #2
   15274:	str	r4, [r1, #16]
   15278:	str	r2, [r9]
   1527c:	b	1537c <mchar_async_cache_delete@@Base+0x1e4>
   15280:	ldr	r1, [r5, #8]
   15284:	cmp	r1, #0
   15288:	beq	15330 <mchar_async_cache_delete@@Base+0x198>
   1528c:	cmp	r2, #0
   15290:	beq	15358 <mchar_async_cache_delete@@Base+0x1c0>
   15294:	add	r7, r1, r1, lsl #2
   15298:	add	ip, r0, r7, lsl #2
   1529c:	ldr	r5, [ip, #12]!
   152a0:	mov	r4, r5
   152a4:	add	r7, r5, r5, lsl #2
   152a8:	add	r7, r0, r7, lsl #2
   152ac:	ldr	r5, [r7, #12]!
   152b0:	cmp	r5, #0
   152b4:	bne	152a0 <mchar_async_cache_delete@@Base+0x108>
   152b8:	cmp	r4, #0
   152bc:	beq	15354 <mchar_async_cache_delete@@Base+0x1bc>
   152c0:	str	r2, [r7]
   152c4:	ldr	r2, [r3]
   152c8:	add	r2, r2, r2, lsl #2
   152cc:	add	r2, r0, r2, lsl #2
   152d0:	str	r4, [r2, #16]
   152d4:	b	15358 <mchar_async_cache_delete@@Base+0x1c0>
   152d8:	ldr	r1, [r5, #8]
   152dc:	cmp	r1, #0
   152e0:	beq	15348 <mchar_async_cache_delete@@Base+0x1b0>
   152e4:	cmp	r2, #0
   152e8:	beq	15374 <mchar_async_cache_delete@@Base+0x1dc>
   152ec:	add	r4, r1, r1, lsl #2
   152f0:	add	r9, r0, r4, lsl #2
   152f4:	ldr	r4, [r9, #12]!
   152f8:	mov	r7, r4
   152fc:	add	r4, r4, r4, lsl #2
   15300:	add	r5, r0, r4, lsl #2
   15304:	ldr	r4, [r5, #12]!
   15308:	cmp	r4, #0
   1530c:	bne	152f8 <mchar_async_cache_delete@@Base+0x160>
   15310:	cmp	r7, #0
   15314:	beq	15370 <mchar_async_cache_delete@@Base+0x1d8>
   15318:	str	r2, [r5]
   1531c:	ldr	r2, [r3]
   15320:	add	r2, r2, r2, lsl #2
   15324:	add	r2, r0, r2, lsl #2
   15328:	str	r7, [r2, #16]
   1532c:	b	15374 <mchar_async_cache_delete@@Base+0x1dc>
   15330:	str	r2, [sl, #12]
   15334:	mov	lr, #0
   15338:	b	1537c <mchar_async_cache_delete@@Base+0x1e4>
   1533c:	str	ip, [r9]
   15340:	ldr	r2, [r5]
   15344:	b	1537c <mchar_async_cache_delete@@Base+0x1e4>
   15348:	str	r2, [ip, #12]
   1534c:	ldr	r2, [r3]
   15350:	b	1537c <mchar_async_cache_delete@@Base+0x1e4>
   15354:	str	r2, [ip]
   15358:	str	r1, [sl, #12]
   1535c:	mov	lr, #0
   15360:	b	15378 <mchar_async_cache_delete@@Base+0x1e0>
   15364:	str	ip, [r7]
   15368:	str	r2, [r9]
   1536c:	b	1537c <mchar_async_cache_delete@@Base+0x1e4>
   15370:	str	r2, [r9]
   15374:	str	r1, [ip, #12]
   15378:	mov	r2, r1
   1537c:	add	r1, r2, r2, lsl #2
   15380:	add	r0, r0, r1, lsl #2
   15384:	str	lr, [r0, #16]
   15388:	ldr	r0, [sl, #20]
   1538c:	ldr	r1, [sl, #24]
   15390:	str	r6, [r0, r1, lsl #2]
   15394:	ldr	r0, [sl, #24]
   15398:	ldr	r5, [sl, #28]
   1539c:	add	r0, r0, #1
   153a0:	str	r0, [sl, #24]
   153a4:	cmp	r0, r5
   153a8:	bcc	153cc <mchar_async_cache_delete@@Base+0x234>
   153ac:	ldr	r0, [sl, #20]
   153b0:	lsl	r1, r5, #3
   153b4:	bl	110b4 <mycore_realloc@plt>
   153b8:	cmp	r0, #0
   153bc:	beq	153dc <mchar_async_cache_delete@@Base+0x244>
   153c0:	str	r0, [sl, #20]
   153c4:	lsl	r0, r5, #1
   153c8:	str	r0, [sl, #28]
   153cc:	ldr	r0, [sl, #16]
   153d0:	sub	r0, r0, #1
   153d4:	str	r0, [sl, #16]
   153d8:	mov	r8, r6
   153dc:	mov	r0, r8
   153e0:	sub	sp, fp, #28
   153e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000153e8 <mchar_async_node_add@@Base>:
   153e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   153ec:	add	fp, sp, #24
   153f0:	mov	r4, r1
   153f4:	mov	r5, r0
   153f8:	ldr	r0, [r0, #80]	; 0x50
   153fc:	bl	11c6c <mcsync_lock@plt>
   15400:	cmp	r0, #0
   15404:	beq	15428 <mchar_async_node_add@@Base+0x40>
   15408:	mov	r6, #0
   1540c:	cmp	r4, #0
   15410:	movne	r0, #96	; 0x60
   15414:	strne	r0, [r4]
   15418:	movne	r0, r6
   1541c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15420:	mov	r0, r6
   15424:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15428:	ldr	r0, [r5, #72]	; 0x48
   1542c:	cmp	r0, #0
   15430:	beq	15448 <mchar_async_node_add@@Base+0x60>
   15434:	sub	r0, r0, #1
   15438:	str	r0, [r5, #72]	; 0x48
   1543c:	ldr	r1, [r5, #68]	; 0x44
   15440:	ldr	r6, [r1, r0, lsl #2]
   15444:	b	15460 <mchar_async_node_add@@Base+0x78>
   15448:	ldr	r6, [r5, #60]	; 0x3c
   1544c:	ldr	r0, [r5, #64]	; 0x40
   15450:	cmp	r6, r0
   15454:	bcs	154c8 <mchar_async_node_add@@Base+0xe0>
   15458:	add	r0, r6, #1
   1545c:	str	r0, [r5, #60]	; 0x3c
   15460:	ldr	r8, [r5, #56]	; 0x38
   15464:	add	r7, r6, r6, lsl #3
   15468:	add	r0, r8, r7, lsl #2
   1546c:	add	r0, r0, #4
   15470:	bl	11ff0 <mchar_async_cache_init@plt>
   15474:	cmp	r0, #0
   15478:	beq	1548c <mchar_async_node_add@@Base+0xa4>
   1547c:	cmp	r4, #0
   15480:	beq	154d8 <mchar_async_node_add@@Base+0xf0>
   15484:	mov	r0, #2
   15488:	b	154d4 <mchar_async_node_add@@Base+0xec>
   1548c:	ldr	r2, [r5]
   15490:	mov	r0, r5
   15494:	bl	11f78 <mchar_async_chunk_malloc_without_lock@plt>
   15498:	str	r0, [r8, r7, lsl #2]
   1549c:	cmp	r0, #0
   154a0:	beq	1547c <mchar_async_node_add@@Base+0x94>
   154a4:	mov	r7, #0
   154a8:	str	r7, [r0, #12]
   154ac:	str	r7, [r0, #16]
   154b0:	ldr	r0, [r5, #80]	; 0x50
   154b4:	bl	1226c <mcsync_unlock@plt>
   154b8:	cmp	r4, #0
   154bc:	strne	r7, [r4]
   154c0:	mov	r0, r6
   154c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   154c8:	cmp	r4, #0
   154cc:	beq	154d8 <mchar_async_node_add@@Base+0xf0>
   154d0:	mov	r0, #98	; 0x62
   154d4:	str	r0, [r4]
   154d8:	ldr	r0, [r5, #80]	; 0x50
   154dc:	bl	1226c <mcsync_unlock@plt>
   154e0:	mov	r6, #0
   154e4:	mov	r0, r6
   154e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000154ec <mchar_async_node_clean@@Base>:
   154ec:	ldr	r2, [r0, #60]	; 0x3c
   154f0:	cmp	r2, r1
   154f4:	bxls	lr
   154f8:	ldr	ip, [r0, #56]	; 0x38
   154fc:	add	r1, r1, r1, lsl #3
   15500:	mov	r3, ip
   15504:	ldr	r0, [r3, r1, lsl #2]!
   15508:	ldr	r2, [r0, #16]
   1550c:	cmp	r2, #0
   15510:	beq	15528 <mchar_async_node_clean@@Base+0x3c>
   15514:	mov	r0, r2
   15518:	ldr	r2, [r2, #16]
   1551c:	cmp	r2, #0
   15520:	bne	15514 <mchar_async_node_clean@@Base+0x28>
   15524:	str	r0, [r3]
   15528:	mov	r2, #0
   1552c:	str	r2, [r0, #4]
   15530:	add	r0, ip, r1, lsl #2
   15534:	add	r0, r0, #4
   15538:	b	14db8 <mchar_async_cache_clean@@Base>

0001553c <mchar_async_node_delete@@Base>:
   1553c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15540:	add	fp, sp, #28
   15544:	sub	sp, sp, #4
   15548:	mov	r8, r1
   1554c:	mov	r4, r0
   15550:	ldr	r0, [r0, #80]	; 0x50
   15554:	bl	11c6c <mcsync_lock@plt>
   15558:	ldr	r0, [r4, #60]	; 0x3c
   1555c:	cmp	r0, r8
   15560:	bls	15628 <mchar_async_node_delete@@Base+0xec>
   15564:	ldr	r9, [r4, #56]	; 0x38
   15568:	add	sl, r8, r8, lsl #3
   1556c:	mov	r5, r9
   15570:	ldr	r0, [r5, sl, lsl #2]!
   15574:	mov	r6, r0
   15578:	ldr	r0, [r0, #12]
   1557c:	cmp	r0, #0
   15580:	bne	15574 <mchar_async_node_delete@@Base+0x38>
   15584:	cmp	r6, #0
   15588:	beq	155ac <mchar_async_node_delete@@Base+0x70>
   1558c:	add	r7, r4, #24
   15590:	ldr	r2, [r6, #8]
   15594:	mov	r0, r7
   15598:	mov	r1, r6
   1559c:	bl	12038 <mchar_async_cache_add@plt>
   155a0:	ldr	r6, [r6, #16]
   155a4:	cmp	r6, #0
   155a8:	bne	15590 <mchar_async_node_delete@@Base+0x54>
   155ac:	add	r0, r9, sl, lsl #2
   155b0:	ldr	r1, [r0, #4]!
   155b4:	cmp	r1, #0
   155b8:	movne	r1, #0
   155bc:	blne	11ca8 <mchar_async_cache_destroy@plt>
   155c0:	vmov.i32	q8, #0	; 0x00000000
   155c4:	mov	r0, #32
   155c8:	add	r1, r5, #16
   155cc:	vst1.32	{d16-d17}, [r5], r0
   155d0:	mov	r0, #0
   155d4:	str	r0, [r5]
   155d8:	vst1.32	{d16-d17}, [r1]
   155dc:	ldr	r0, [r4, #72]	; 0x48
   155e0:	ldr	r5, [r4, #76]	; 0x4c
   155e4:	cmp	r0, r5
   155e8:	bcc	15608 <mchar_async_node_delete@@Base+0xcc>
   155ec:	ldr	r0, [r4, #68]	; 0x44
   155f0:	lsl	r1, r5, #2
   155f4:	bl	110b4 <mycore_realloc@plt>
   155f8:	cmp	r0, #0
   155fc:	strne	r0, [r4, #68]	; 0x44
   15600:	lslne	r0, r5, #1
   15604:	strne	r0, [r4, #76]	; 0x4c
   15608:	ldr	r0, [r4, #68]	; 0x44
   1560c:	ldr	r1, [r4, #72]	; 0x48
   15610:	str	r8, [r0, r1, lsl #2]
   15614:	ldr	r1, [r4, #72]	; 0x48
   15618:	ldr	r0, [r4, #80]	; 0x50
   1561c:	add	r1, r1, #1
   15620:	str	r1, [r4, #72]	; 0x48
   15624:	b	1562c <mchar_async_node_delete@@Base+0xf0>
   15628:	ldr	r0, [r4, #80]	; 0x50
   1562c:	sub	sp, fp, #28
   15630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15634:	b	1226c <mcsync_unlock@plt>

00015638 <mchar_async_cache_add@@Base>:
   15638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1563c:	add	fp, sp, #24
   15640:	mov	r5, r2
   15644:	mov	r8, r1
   15648:	mov	r6, r0
   1564c:	mov	r7, r0
   15650:	ldr	r4, [r7, #12]!
   15654:	ldr	r0, [r7, #4]
   15658:	add	r0, r0, #1
   1565c:	str	r0, [r7, #4]
   15660:	cmp	r4, #0
   15664:	beq	156c4 <mchar_async_cache_add@@Base+0x8c>
   15668:	mov	r0, r6
   1566c:	bl	11354 <mchar_async_cache_malloc@plt>
   15670:	ldr	r3, [r6]
   15674:	mov	r1, r4
   15678:	add	r2, r4, r4, lsl #2
   1567c:	add	r2, r3, r2, lsl #2
   15680:	ldr	r6, [r2, #4]
   15684:	cmp	r6, r5
   15688:	beq	156f8 <mchar_async_cache_add@@Base+0xc0>
   1568c:	bhi	15728 <mchar_async_cache_add@@Base+0xf0>
   15690:	ldr	r4, [r2, #12]!
   15694:	cmp	r4, #0
   15698:	bne	15674 <mchar_async_cache_add@@Base+0x3c>
   1569c:	str	r0, [r2]
   156a0:	add	r0, r0, r0, lsl #2
   156a4:	add	r7, r3, r0, lsl #2
   156a8:	mov	r0, #0
   156ac:	str	r5, [r7, #4]
   156b0:	str	r0, [r7, #8]
   156b4:	str	r0, [r7, #12]
   156b8:	str	r1, [r7, #16]
   156bc:	str	r8, [r7]
   156c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156c4:	ldr	r4, [r6]
   156c8:	mov	r0, r6
   156cc:	bl	11354 <mchar_async_cache_malloc@plt>
   156d0:	str	r0, [r6, #12]
   156d4:	add	r0, r0, r0, lsl #2
   156d8:	add	r7, r4, r0, lsl #2
   156dc:	mov	r0, #0
   156e0:	str	r5, [r7, #4]
   156e4:	str	r0, [r7, #8]
   156e8:	str	r0, [r7, #12]
   156ec:	str	r0, [r7, #16]
   156f0:	str	r8, [r7]
   156f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156f8:	add	r7, r0, r0, lsl #2
   156fc:	add	r7, r3, r7, lsl #2
   15700:	add	r6, r7, #12
   15704:	ldr	r4, [r2, #12]!
   15708:	cmp	r4, #0
   1570c:	beq	15778 <mchar_async_cache_add@@Base+0x140>
   15710:	str	r4, [r6]
   15714:	ldr	r6, [r2]
   15718:	add	r6, r6, r6, lsl #2
   1571c:	add	r3, r3, r6, lsl #2
   15720:	str	r0, [r3, #16]
   15724:	b	15780 <mchar_async_cache_add@@Base+0x148>
   15728:	ldr	r4, [r2, #16]!
   1572c:	mov	ip, #0
   15730:	cmp	r4, #0
   15734:	mov	r6, #0
   15738:	beq	15754 <mchar_async_cache_add@@Base+0x11c>
   1573c:	add	r7, r4, r4, lsl #2
   15740:	add	r7, r3, r7, lsl #2
   15744:	ldr	r6, [r7, #8]!
   15748:	cmp	r6, r1
   1574c:	addne	r7, r7, #4
   15750:	mov	r6, r4
   15754:	str	r0, [r7]
   15758:	add	r7, r0, r0, lsl #2
   1575c:	add	r7, r3, r7, lsl #2
   15760:	str	r6, [r7, #16]
   15764:	str	r0, [r2]
   15768:	str	r1, [r7, #12]
   1576c:	stmib	r7, {r5, ip}
   15770:	str	r8, [r7]
   15774:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15778:	mov	r3, #0
   1577c:	str	r3, [r6]
   15780:	str	r0, [r2]
   15784:	mov	r0, #0
   15788:	str	r1, [r7, #16]
   1578c:	str	r5, [r7, #4]
   15790:	str	r0, [r7, #8]
   15794:	str	r8, [r7]
   15798:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001579c <mchar_sync_chunk_find_by_size@@Base>:
   1579c:	ldr	r0, [r0]
   157a0:	ldr	r0, [r0, #12]
   157a4:	cmp	r0, #0
   157a8:	bxeq	lr
   157ac:	ldr	r2, [r0, #8]
   157b0:	cmp	r2, r1
   157b4:	bcc	157a0 <mchar_sync_chunk_find_by_size@@Base+0x4>
   157b8:	bx	lr

000157bc <mchar_sync_chunk_insert_after@@Base>:
   157bc:	ldr	r2, [r0, #12]
   157c0:	cmp	r2, r1
   157c4:	bxeq	lr
   157c8:	ldr	r2, [r1, #16]
   157cc:	cmp	r2, #0
   157d0:	ldrne	r3, [r1, #12]
   157d4:	strne	r3, [r2, #12]
   157d8:	ldr	r2, [r1, #12]
   157dc:	cmp	r2, #0
   157e0:	ldrne	r3, [r1, #16]
   157e4:	strne	r3, [r2, #16]
   157e8:	ldr	r2, [r0, #12]
   157ec:	cmp	r2, #0
   157f0:	strne	r1, [r2, #16]
   157f4:	ldr	r2, [r0, #12]
   157f8:	str	r2, [r1, #12]
   157fc:	str	r0, [r1, #16]
   15800:	str	r1, [r0, #12]
   15804:	bx	lr

00015808 <mchar_async_malloc@@Base>:
   15808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1580c:	add	fp, sp, #24
   15810:	cmp	r2, #0
   15814:	moveq	r0, #0
   15818:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1581c:	mov	r4, r2
   15820:	mov	r8, r0
   15824:	ldr	r5, [r0, #56]	; 0x38
   15828:	add	r0, r1, r1, lsl #3
   1582c:	ldr	r6, [r5, r0, lsl #2]!
   15830:	add	r7, r5, #4
   15834:	ldr	r0, [r5, #20]
   15838:	cmp	r0, #0
   1583c:	beq	15860 <mchar_async_malloc@@Base+0x58>
   15840:	mov	r0, r7
   15844:	mov	r1, r4
   15848:	bl	122fc <mchar_async_cache_delete@plt>
   1584c:	cmp	r0, #0
   15850:	ldrne	r1, [r7]
   15854:	addne	r0, r0, r0, lsl #2
   15858:	ldrne	r0, [r1, r0, lsl #2]
   1585c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15860:	ldmib	r6, {r0, r2}
   15864:	add	r1, r4, r0
   15868:	add	r1, r1, #4
   1586c:	cmp	r1, r2
   15870:	bls	158fc <mchar_async_malloc@@Base+0xf4>
   15874:	add	r1, r0, #4
   15878:	cmp	r1, r2
   1587c:	bcs	158a8 <mchar_async_malloc@@Base+0xa0>
   15880:	sub	r2, r2, r0
   15884:	subs	r2, r2, #4
   15888:	beq	158a8 <mchar_async_malloc@@Base+0xa0>
   1588c:	ldr	r3, [r6]
   15890:	str	r2, [r3, r0]
   15894:	ldr	r0, [r6, #8]
   15898:	str	r0, [r6, #4]
   1589c:	add	r1, r3, r1
   158a0:	mov	r0, r7
   158a4:	bl	12038 <mchar_async_cache_add@plt>
   158a8:	add	r7, r4, #4
   158ac:	mov	r0, r5
   158b0:	mov	r1, r7
   158b4:	bl	11f0c <mchar_sync_chunk_find_by_size@plt>
   158b8:	cmp	r0, #0
   158bc:	beq	158d0 <mchar_async_malloc@@Base+0xc8>
   158c0:	mov	r6, r0
   158c4:	mov	r0, #0
   158c8:	str	r0, [r6, #4]
   158cc:	b	158ec <mchar_async_malloc@@Base+0xe4>
   158d0:	ldr	r2, [r8]
   158d4:	cmp	r7, r2
   158d8:	addhi	r2, r2, r7
   158dc:	mov	r0, r8
   158e0:	mov	r1, r5
   158e4:	bl	11de0 <mchar_async_chunk_malloc@plt>
   158e8:	mov	r6, r0
   158ec:	ldr	r0, [r5]
   158f0:	mov	r1, r6
   158f4:	bl	113d8 <mchar_sync_chunk_insert_after@plt>
   158f8:	str	r6, [r5]
   158fc:	ldm	r6, {r0, r1}
   15900:	str	r4, [r0, r1]!
   15904:	ldr	r1, [r6, #4]
   15908:	add	r1, r4, r1
   1590c:	add	r1, r1, #4
   15910:	str	r1, [r6, #4]
   15914:	add	r0, r0, #4
   15918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001591c <mchar_async_realloc@@Base>:
   1591c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15920:	add	fp, sp, #28
   15924:	sub	sp, sp, #4
   15928:	mov	r5, #0
   1592c:	cmp	r2, #0
   15930:	beq	159d8 <mchar_async_realloc@@Base+0xbc>
   15934:	mov	r4, r2
   15938:	ldr	r2, [fp, #8]
   1593c:	ldr	r7, [r4, #-4]
   15940:	cmp	r7, r2
   15944:	bcs	159d4 <mchar_async_realloc@@Base+0xb8>
   15948:	mov	r8, r3
   1594c:	ldr	r9, [r0, #56]	; 0x38
   15950:	add	sl, r1, r1, lsl #3
   15954:	str	r9, [sp]
   15958:	ldr	r6, [r9, sl, lsl #2]!
   1595c:	ldr	r3, [r6, #4]
   15960:	cmp	r3, r7
   15964:	bcc	1598c <mchar_async_realloc@@Base+0x70>
   15968:	sub	lr, r3, r7
   1596c:	ldr	r3, [r6]
   15970:	add	ip, r3, lr
   15974:	cmp	ip, r4
   15978:	bne	1598c <mchar_async_realloc@@Base+0x70>
   1597c:	add	lr, lr, r2
   15980:	ldr	r3, [r6, #8]
   15984:	cmp	lr, r3
   15988:	bls	159c8 <mchar_async_realloc@@Base+0xac>
   1598c:	bl	11d2c <mchar_async_malloc@plt>
   15990:	cmp	r0, #0
   15994:	beq	159d8 <mchar_async_realloc@@Base+0xbc>
   15998:	mov	r6, r0
   1599c:	mov	r1, r4
   159a0:	mov	r2, r8
   159a4:	bl	113f0 <memcpy@plt>
   159a8:	ldr	r0, [sp]
   159ac:	add	r0, r0, sl, lsl #2
   159b0:	add	r0, r0, #4
   159b4:	mov	r1, r4
   159b8:	mov	r2, r7
   159bc:	bl	12038 <mchar_async_cache_add@plt>
   159c0:	mov	r5, r6
   159c4:	b	159d8 <mchar_async_realloc@@Base+0xbc>
   159c8:	str	r2, [ip, #-4]
   159cc:	ldr	r0, [r9]
   159d0:	str	lr, [r0, #4]
   159d4:	mov	r5, r4
   159d8:	mov	r0, r5
   159dc:	sub	sp, fp, #28
   159e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000159e4 <mchar_async_crop_first_chars@@Base>:
   159e4:	push	{r4, r5, fp, lr}
   159e8:	add	fp, sp, #8
   159ec:	cmp	r2, #0
   159f0:	moveq	r5, #0
   159f4:	moveq	r0, r5
   159f8:	popeq	{r4, r5, fp, pc}
   159fc:	add	r5, r2, r3
   15a00:	ldr	r4, [r2, #-4]
   15a04:	sub	r4, r4, r3
   15a08:	str	r4, [r5, #-4]
   15a0c:	add	r4, r3, #4
   15a10:	cmp	r4, #5
   15a14:	bcc	15a3c <mchar_async_crop_first_chars@@Base+0x58>
   15a18:	sub	r3, r3, #4
   15a1c:	str	r3, [r2, #-4]
   15a20:	ldr	r0, [r0, #56]	; 0x38
   15a24:	add	r1, r1, r1, lsl #3
   15a28:	add	r0, r0, r1, lsl #2
   15a2c:	add	r0, r0, #4
   15a30:	mov	r1, r2
   15a34:	mov	r2, r3
   15a38:	bl	12038 <mchar_async_cache_add@plt>
   15a3c:	mov	r0, r5
   15a40:	pop	{r4, r5, fp, pc}

00015a44 <mchar_async_crop_first_chars_without_cache@@Base>:
   15a44:	cmp	r0, #0
   15a48:	moveq	r0, #0
   15a4c:	bxeq	lr
   15a50:	mov	r2, r0
   15a54:	add	r0, r0, r1
   15a58:	ldr	r2, [r2, #-4]
   15a5c:	sub	r1, r2, r1
   15a60:	str	r1, [r0, #-4]
   15a64:	bx	lr

00015a68 <mchar_async_get_size_by_data@@Base>:
   15a68:	cmp	r0, #0
   15a6c:	ldrne	r0, [r0, #-4]
   15a70:	moveq	r0, #0
   15a74:	bx	lr

00015a78 <mchar_async_free@@Base>:
   15a78:	cmp	r2, #0
   15a7c:	bxeq	lr
   15a80:	ldr	r0, [r0, #56]	; 0x38
   15a84:	add	r1, r1, r1, lsl #3
   15a88:	add	r0, r0, r1, lsl #2
   15a8c:	add	r0, r0, #4
   15a90:	ldr	r3, [r2, #-4]
   15a94:	mov	r1, r2
   15a98:	mov	r2, r3
   15a9c:	b	15638 <mchar_async_cache_add@@Base>

00015aa0 <mchar_async_cache_malloc@@Base>:
   15aa0:	push	{r4, sl, fp, lr}
   15aa4:	add	fp, sp, #8
   15aa8:	mov	r4, r0
   15aac:	ldr	r0, [r0, #24]
   15ab0:	cmp	r0, #0
   15ab4:	subne	r0, r0, #1
   15ab8:	strne	r0, [r4, #24]
   15abc:	ldrne	r1, [r4, #20]
   15ac0:	ldrne	r0, [r1, r0, lsl #2]
   15ac4:	popne	{r4, sl, fp, pc}
   15ac8:	ldr	r1, [r4, #4]
   15acc:	ldr	r0, [r4, #8]
   15ad0:	add	r0, r0, #1
   15ad4:	str	r0, [r4, #8]
   15ad8:	cmp	r0, r1
   15adc:	bcc	15b00 <mchar_async_cache_malloc@@Base+0x60>
   15ae0:	lsl	r0, r1, #1
   15ae4:	str	r0, [r4, #4]
   15ae8:	ldr	r0, [r4]
   15aec:	add	r1, r1, r1, lsl #2
   15af0:	lsl	r1, r1, #3
   15af4:	bl	110b4 <mycore_realloc@plt>
   15af8:	cmp	r0, #0
   15afc:	strne	r0, [r4]
   15b00:	ldr	r0, [r4, #8]
   15b04:	sub	r0, r0, #1
   15b08:	pop	{r4, sl, fp, pc}

00015b0c <mcobject_create@@Base>:
   15b0c:	mov	r0, #1
   15b10:	mov	r1, #24
   15b14:	b	113a8 <mycore_calloc@plt>

00015b18 <mcobject_init@@Base>:
   15b18:	push	{r4, r5, fp, lr}
   15b1c:	add	fp, sp, #8
   15b20:	mov	r4, r0
   15b24:	mov	r5, #0
   15b28:	str	r5, [r0]
   15b2c:	str	r1, [r0, #8]
   15b30:	str	r5, [r0, #12]
   15b34:	str	r2, [r0, #16]
   15b38:	str	r1, [r0, #20]
   15b3c:	lsl	r0, r1, #2
   15b40:	bl	12050 <mycore_malloc@plt>
   15b44:	str	r0, [r4, #4]
   15b48:	cmp	r0, #0
   15b4c:	movweq	r5, #85	; 0x55
   15b50:	mov	r0, r5
   15b54:	pop	{r4, r5, fp, pc}

00015b58 <mcobject_clean@@Base>:
   15b58:	push	{r4, r5, r6, sl, fp, lr}
   15b5c:	add	fp, sp, #16
   15b60:	mov	r4, r0
   15b64:	ldr	r0, [r0]
   15b68:	cmp	r0, #0
   15b6c:	popeq	{r4, r5, r6, sl, fp, pc}
   15b70:	mov	r5, r0
   15b74:	ldr	r0, [r0, #12]
   15b78:	cmp	r0, #0
   15b7c:	bne	15b70 <mcobject_clean@@Base+0x18>
   15b80:	ldr	r0, [r5]
   15b84:	ldr	r6, [r5, #16]
   15b88:	cmp	r0, #0
   15b8c:	beq	15b94 <mcobject_clean@@Base+0x3c>
   15b90:	bl	12188 <mycore_free@plt>
   15b94:	mov	r0, r5
   15b98:	bl	12188 <mycore_free@plt>
   15b9c:	cmp	r6, #0
   15ba0:	mov	r5, r6
   15ba4:	bne	15b80 <mcobject_clean@@Base+0x28>
   15ba8:	mov	r0, #0
   15bac:	str	r0, [r4, #12]
   15bb0:	str	r0, [r4]
   15bb4:	pop	{r4, r5, r6, sl, fp, pc}

00015bb8 <mcobject_destroy@@Base>:
   15bb8:	push	{r4, r5, r6, sl, fp, lr}
   15bbc:	add	fp, sp, #16
   15bc0:	mov	r4, #0
   15bc4:	cmp	r0, #0
   15bc8:	beq	15c04 <mcobject_destroy@@Base+0x4c>
   15bcc:	mov	r6, r1
   15bd0:	mov	r5, r0
   15bd4:	bl	12308 <mcobject_clean@plt>
   15bd8:	ldr	r0, [r5, #4]
   15bdc:	cmp	r0, #0
   15be0:	beq	15bf0 <mcobject_destroy@@Base+0x38>
   15be4:	bl	12188 <mycore_free@plt>
   15be8:	mov	r0, #0
   15bec:	str	r0, [r5, #4]
   15bf0:	cmp	r6, #0
   15bf4:	moveq	r0, r5
   15bf8:	popeq	{r4, r5, r6, sl, fp, pc}
   15bfc:	mov	r0, r5
   15c00:	bl	12188 <mycore_free@plt>
   15c04:	mov	r0, r4
   15c08:	pop	{r4, r5, r6, sl, fp, pc}

00015c0c <mcobject_chunk_malloc@@Base>:
   15c0c:	push	{r4, r5, r6, sl, fp, lr}
   15c10:	add	fp, sp, #16
   15c14:	mov	r4, r1
   15c18:	mov	r5, r0
   15c1c:	cmp	r1, #0
   15c20:	movne	r0, #0
   15c24:	strne	r0, [r4]
   15c28:	ldr	r0, [r5]
   15c2c:	cmp	r0, #0
   15c30:	ldrne	r0, [r0, #12]
   15c34:	cmpne	r0, #0
   15c38:	bne	15c90 <mcobject_chunk_malloc@@Base+0x84>
   15c3c:	mov	r0, #1
   15c40:	mov	r1, #20
   15c44:	bl	113a8 <mycore_calloc@plt>
   15c48:	cmp	r0, #0
   15c4c:	beq	15ca0 <mcobject_chunk_malloc@@Base+0x94>
   15c50:	mov	r6, r0
   15c54:	ldr	r0, [r5, #16]
   15c58:	ldr	r1, [r5, #20]
   15c5c:	mul	r0, r1, r0
   15c60:	bl	12050 <mycore_malloc@plt>
   15c64:	str	r0, [r6]
   15c68:	cmp	r0, #0
   15c6c:	beq	15cb4 <mcobject_chunk_malloc@@Base+0xa8>
   15c70:	ldr	r0, [r5, #20]
   15c74:	str	r0, [r6, #8]
   15c78:	ldr	r0, [r5]
   15c7c:	cmp	r0, #0
   15c80:	strne	r0, [r6, #16]
   15c84:	strne	r6, [r0, #12]
   15c88:	str	r6, [r5]
   15c8c:	pop	{r4, r5, r6, sl, fp, pc}
   15c90:	str	r0, [r5]
   15c94:	mov	r1, #0
   15c98:	str	r1, [r0, #4]
   15c9c:	pop	{r4, r5, r6, sl, fp, pc}
   15ca0:	cmp	r4, #0
   15ca4:	movne	r0, #86	; 0x56
   15ca8:	strne	r0, [r4]
   15cac:	popne	{r4, r5, r6, sl, fp, pc}
   15cb0:	pop	{r4, r5, r6, sl, fp, pc}
   15cb4:	cmp	r4, #0
   15cb8:	movne	r0, #87	; 0x57
   15cbc:	strne	r0, [r4]
   15cc0:	mov	r0, r6
   15cc4:	pop	{r4, r5, r6, sl, fp, lr}
   15cc8:	b	12188 <mycore_free@plt>

00015ccc <mcobject_malloc@@Base>:
   15ccc:	push	{r4, r5, fp, lr}
   15cd0:	add	fp, sp, #8
   15cd4:	sub	sp, sp, #8
   15cd8:	mov	r5, r1
   15cdc:	mov	r4, r0
   15ce0:	ldr	r0, [r0, #12]
   15ce4:	cmp	r0, #0
   15ce8:	beq	15d14 <mcobject_malloc@@Base+0x48>
   15cec:	cmp	r5, #0
   15cf0:	movne	r0, #0
   15cf4:	strne	r0, [r5]
   15cf8:	ldr	r0, [r4, #4]
   15cfc:	ldr	r1, [r4, #12]
   15d00:	sub	r1, r1, #1
   15d04:	str	r1, [r4, #12]
   15d08:	ldr	r0, [r0, r1, lsl #2]
   15d0c:	sub	sp, fp, #8
   15d10:	pop	{r4, r5, fp, pc}
   15d14:	ldr	r0, [r4]
   15d18:	cmp	r0, #0
   15d1c:	beq	15d2c <mcobject_malloc@@Base+0x60>
   15d20:	ldmib	r0, {r1, r2}
   15d24:	cmp	r1, r2
   15d28:	bcc	15d5c <mcobject_malloc@@Base+0x90>
   15d2c:	add	r1, sp, #4
   15d30:	mov	r0, r4
   15d34:	bl	11378 <mcobject_chunk_malloc@plt>
   15d38:	ldr	r0, [sp, #4]
   15d3c:	cmp	r0, #0
   15d40:	beq	15d58 <mcobject_malloc@@Base+0x8c>
   15d44:	cmp	r5, #0
   15d48:	strne	r0, [r5]
   15d4c:	mov	r0, #0
   15d50:	sub	sp, fp, #8
   15d54:	pop	{r4, r5, fp, pc}
   15d58:	ldr	r0, [r4]
   15d5c:	cmp	r5, #0
   15d60:	movne	r1, #0
   15d64:	strne	r1, [r5]
   15d68:	ldm	r0, {r1, r2}
   15d6c:	add	r3, r2, #1
   15d70:	str	r3, [r0, #4]
   15d74:	ldr	r0, [r4, #16]
   15d78:	mla	r0, r0, r2, r1
   15d7c:	sub	sp, fp, #8
   15d80:	pop	{r4, r5, fp, pc}

00015d84 <mcobject_free@@Base>:
   15d84:	push	{r4, r5, r6, sl, fp, lr}
   15d88:	add	fp, sp, #16
   15d8c:	mov	r5, r1
   15d90:	mov	r4, r0
   15d94:	ldr	r6, [r0, #8]
   15d98:	ldr	r0, [r0, #12]
   15d9c:	cmp	r0, r6
   15da0:	bcc	15dc4 <mcobject_free@@Base+0x40>
   15da4:	ldr	r0, [r4, #4]
   15da8:	lsl	r1, r6, #3
   15dac:	bl	110b4 <mycore_realloc@plt>
   15db0:	cmp	r0, #0
   15db4:	moveq	r0, #88	; 0x58
   15db8:	popeq	{r4, r5, r6, sl, fp, pc}
   15dbc:	lsl	r1, r6, #1
   15dc0:	stmib	r4, {r0, r1}
   15dc4:	ldr	r0, [r4, #4]
   15dc8:	ldr	r1, [r4, #12]
   15dcc:	str	r5, [r0, r1, lsl #2]
   15dd0:	add	r0, r1, #1
   15dd4:	str	r0, [r4, #12]
   15dd8:	mov	r0, #0
   15ddc:	pop	{r4, r5, r6, sl, fp, pc}

00015de0 <mcobject_async_create@@Base>:
   15de0:	mov	r0, #1
   15de4:	mov	r1, #72	; 0x48
   15de8:	b	113a8 <mycore_calloc@plt>

00015dec <mcobject_async_chunk_up@@Base>:
   15dec:	push	{r4, r5, fp, lr}
   15df0:	add	fp, sp, #8
   15df4:	mov	r5, r0
   15df8:	mov	r4, #0
   15dfc:	str	r4, [r0, #40]	; 0x28
   15e00:	ldr	r0, [r0, #24]
   15e04:	ldr	r1, [r5, #32]
   15e08:	ldr	r0, [r0, r1, lsl #2]
   15e0c:	cmp	r0, #0
   15e10:	beq	15e1c <mcobject_async_chunk_up@@Base+0x30>
   15e14:	mov	r0, r4
   15e18:	pop	{r4, r5, fp, pc}
   15e1c:	ldr	r0, [r5, #36]	; 0x24
   15e20:	mov	r1, #20
   15e24:	bl	113a8 <mycore_calloc@plt>
   15e28:	ldr	r1, [r5, #24]
   15e2c:	ldr	r2, [r5, #32]
   15e30:	str	r0, [r1, r2, lsl #2]
   15e34:	ldr	r0, [r5, #24]
   15e38:	ldr	r0, [r0, r2, lsl #2]
   15e3c:	cmp	r0, #0
   15e40:	moveq	r4, #2
   15e44:	mov	r0, r4
   15e48:	pop	{r4, r5, fp, pc}

00015e4c <mcobject_async_init@@Base>:
   15e4c:	push	{r4, r5, r6, sl, fp, lr}
   15e50:	add	fp, sp, #16
   15e54:	mov	r4, r0
   15e58:	mov	r0, #0
   15e5c:	mov	r6, #128	; 0x80
   15e60:	str	r6, [r4, #28]
   15e64:	str	r0, [r4, #32]
   15e68:	str	r1, [r4, #36]	; 0x24
   15e6c:	add	r0, r3, #4
   15e70:	stm	r4, {r2, r3}
   15e74:	str	r0, [r4, #8]
   15e78:	mov	r0, #128	; 0x80
   15e7c:	mov	r1, #4
   15e80:	bl	113a8 <mycore_calloc@plt>
   15e84:	str	r0, [r4, #24]
   15e88:	cmp	r0, #0
   15e8c:	moveq	r5, #2
   15e90:	moveq	r0, r5
   15e94:	popeq	{r4, r5, r6, sl, fp, pc}
   15e98:	mov	r0, r4
   15e9c:	bl	11618 <mcobject_async_chunk_up@plt>
   15ea0:	ldr	r0, [r4, #36]	; 0x24
   15ea4:	str	r0, [r4, #16]
   15ea8:	mov	r5, #4
   15eac:	mov	r1, #4
   15eb0:	bl	113a8 <mycore_calloc@plt>
   15eb4:	str	r0, [r4, #12]
   15eb8:	cmp	r0, #0
   15ebc:	moveq	r5, #3
   15ec0:	moveq	r0, r5
   15ec4:	popeq	{r4, r5, r6, sl, fp, pc}
   15ec8:	mov	r0, #64	; 0x40
   15ecc:	mov	r6, #0
   15ed0:	str	r6, [r4, #48]	; 0x30
   15ed4:	str	r0, [r4, #52]	; 0x34
   15ed8:	mov	r0, #64	; 0x40
   15edc:	mov	r1, #16
   15ee0:	bl	113a8 <mycore_calloc@plt>
   15ee4:	str	r0, [r4, #44]	; 0x2c
   15ee8:	cmp	r0, #0
   15eec:	beq	15f40 <mcobject_async_init@@Base+0xf4>
   15ef0:	ldr	r0, [r4, #52]	; 0x34
   15ef4:	str	r6, [r4, #60]	; 0x3c
   15ef8:	str	r0, [r4, #64]	; 0x40
   15efc:	lsl	r0, r0, #2
   15f00:	bl	12050 <mycore_malloc@plt>
   15f04:	str	r0, [r4, #56]	; 0x38
   15f08:	cmp	r0, #0
   15f0c:	beq	15f40 <mcobject_async_init@@Base+0xf4>
   15f10:	mov	r0, r4
   15f14:	bl	123ec <mcobject_async_clean@plt>
   15f18:	bl	11258 <mcsync_create@plt>
   15f1c:	str	r0, [r4, #68]	; 0x44
   15f20:	cmp	r0, #0
   15f24:	moveq	r5, #1
   15f28:	moveq	r0, r5
   15f2c:	popeq	{r4, r5, r6, sl, fp, pc}
   15f30:	bl	11c84 <mcsync_init@plt>
   15f34:	mov	r5, r0
   15f38:	cmp	r0, #0
   15f3c:	movwne	r5, #1
   15f40:	mov	r0, r5
   15f44:	pop	{r4, r5, r6, sl, fp, pc}

00015f48 <mcobject_async_clean@@Base>:
   15f48:	push	{r4, r5, r6, r7, fp, lr}
   15f4c:	add	fp, sp, #16
   15f50:	mov	r4, r0
   15f54:	ldr	r0, [r0, #24]
   15f58:	ldr	r1, [r4, #48]	; 0x30
   15f5c:	ldr	r0, [r0]
   15f60:	mov	r5, #0
   15f64:	str	r5, [r4, #40]	; 0x28
   15f68:	str	r5, [r4, #20]
   15f6c:	cmp	r0, #0
   15f70:	movwne	r0, #1
   15f74:	str	r0, [r4, #32]
   15f78:	cmp	r1, #0
   15f7c:	popeq	{r4, r5, r6, r7, fp, pc}
   15f80:	mov	r6, #0
   15f84:	ldr	r7, [r4, #44]	; 0x2c
   15f88:	mov	r0, r7
   15f8c:	ldr	r1, [r0, r6, lsl #4]!
   15f90:	str	r5, [r0, #12]
   15f94:	cmp	r1, #0
   15f98:	beq	15fb0 <mcobject_async_clean@@Base+0x68>
   15f9c:	ldr	r1, [r4]
   15fa0:	mov	r0, r4
   15fa4:	mov	r2, #0
   15fa8:	bl	11594 <mcobject_async_chunk_malloc@plt>
   15fac:	str	r0, [r7, r6, lsl #4]
   15fb0:	ldr	r0, [r4, #48]	; 0x30
   15fb4:	add	r6, r6, #1
   15fb8:	cmp	r6, r0
   15fbc:	bcc	15f84 <mcobject_async_clean@@Base+0x3c>
   15fc0:	pop	{r4, r5, r6, r7, fp, pc}

00015fc4 <mcobject_async_chunk_malloc@@Base>:
   15fc4:	push	{r4, r5, r6, sl, fp, lr}
   15fc8:	add	fp, sp, #16
   15fcc:	mov	r4, r2
   15fd0:	mov	r6, r1
   15fd4:	mov	r5, r0
   15fd8:	ldr	r0, [r0, #68]	; 0x44
   15fdc:	bl	11c6c <mcsync_lock@plt>
   15fe0:	cmp	r0, #0
   15fe4:	beq	15ffc <mcobject_async_chunk_malloc@@Base+0x38>
   15fe8:	cmp	r4, #0
   15fec:	movne	r0, #1
   15ff0:	strne	r0, [r4]
   15ff4:	mov	r0, #0
   15ff8:	pop	{r4, r5, r6, sl, fp, pc}
   15ffc:	mov	r0, r5
   16000:	mov	r1, r6
   16004:	mov	r2, r4
   16008:	bl	11cfc <mcobject_async_chunk_malloc_without_lock@plt>
   1600c:	mov	r4, r0
   16010:	ldr	r0, [r5, #68]	; 0x44
   16014:	bl	1226c <mcsync_unlock@plt>
   16018:	mov	r0, r4
   1601c:	pop	{r4, r5, r6, sl, fp, pc}

00016020 <mcobject_async_destroy@@Base>:
   16020:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16024:	add	fp, sp, #24
   16028:	cmp	r0, #0
   1602c:	moveq	r6, #0
   16030:	moveq	r0, r6
   16034:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16038:	mov	r8, r1
   1603c:	mov	r4, r0
   16040:	ldr	r0, [r0, #44]	; 0x2c
   16044:	cmp	r0, #0
   16048:	beq	1608c <mcobject_async_destroy@@Base+0x6c>
   1604c:	ldr	r0, [r4, #48]	; 0x30
   16050:	cmp	r0, #0
   16054:	beq	16084 <mcobject_async_destroy@@Base+0x64>
   16058:	mov	r5, #0
   1605c:	ldr	r0, [r4, #44]	; 0x2c
   16060:	add	r0, r0, r5, lsl #4
   16064:	ldr	r0, [r0, #4]
   16068:	cmp	r0, #0
   1606c:	beq	16074 <mcobject_async_destroy@@Base+0x54>
   16070:	bl	12188 <mycore_free@plt>
   16074:	ldr	r0, [r4, #48]	; 0x30
   16078:	add	r5, r5, #1
   1607c:	cmp	r5, r0
   16080:	bcc	1605c <mcobject_async_destroy@@Base+0x3c>
   16084:	ldr	r0, [r4, #44]	; 0x2c
   16088:	bl	12188 <mycore_free@plt>
   1608c:	ldr	r0, [r4, #56]	; 0x38
   16090:	cmp	r0, #0
   16094:	beq	1609c <mcobject_async_destroy@@Base+0x7c>
   16098:	bl	12188 <mycore_free@plt>
   1609c:	ldr	r0, [r4, #24]
   160a0:	cmp	r0, #0
   160a4:	beq	16134 <mcobject_async_destroy@@Base+0x114>
   160a8:	ldr	r0, [r4, #32]
   160ac:	cmp	r0, #0
   160b0:	beq	1612c <mcobject_async_destroy@@Base+0x10c>
   160b4:	mov	r6, #0
   160b8:	ldr	r0, [r4, #24]
   160bc:	ldr	r0, [r0, r6, lsl #2]
   160c0:	cmp	r0, #0
   160c4:	beq	1611c <mcobject_async_destroy@@Base+0xfc>
   160c8:	ldr	r0, [r4, #24]
   160cc:	ldr	r1, [r4, #36]	; 0x24
   160d0:	add	r0, r0, r6, lsl #2
   160d4:	cmp	r1, #0
   160d8:	beq	16114 <mcobject_async_destroy@@Base+0xf4>
   160dc:	mov	r7, #0
   160e0:	mov	r5, #0
   160e4:	ldr	r0, [r0]
   160e8:	ldr	r0, [r0, r7]
   160ec:	cmp	r0, #0
   160f0:	beq	160f8 <mcobject_async_destroy@@Base+0xd8>
   160f4:	bl	12188 <mycore_free@plt>
   160f8:	ldr	r0, [r4, #24]
   160fc:	ldr	r1, [r4, #36]	; 0x24
   16100:	add	r0, r0, r6, lsl #2
   16104:	add	r7, r7, #20
   16108:	add	r5, r5, #1
   1610c:	cmp	r5, r1
   16110:	bcc	160e4 <mcobject_async_destroy@@Base+0xc4>
   16114:	ldr	r0, [r0]
   16118:	bl	12188 <mycore_free@plt>
   1611c:	ldr	r0, [r4, #32]
   16120:	add	r6, r6, #1
   16124:	cmp	r6, r0
   16128:	bcc	160b8 <mcobject_async_destroy@@Base+0x98>
   1612c:	ldr	r0, [r4, #24]
   16130:	bl	12188 <mycore_free@plt>
   16134:	ldr	r0, [r4, #12]
   16138:	cmp	r0, #0
   1613c:	beq	16144 <mcobject_async_destroy@@Base+0x124>
   16140:	bl	12188 <mycore_free@plt>
   16144:	ldr	r0, [r4, #68]	; 0x44
   16148:	mov	r1, #1
   1614c:	bl	11630 <mcsync_destroy@plt>
   16150:	vmov.i32	q8, #0	; 0x00000000
   16154:	add	r0, r4, #48	; 0x30
   16158:	vst1.32	{d16-d17}, [r0]
   1615c:	add	r0, r4, #32
   16160:	vst1.32	{d16-d17}, [r0]
   16164:	add	r0, r4, #16
   16168:	vst1.32	{d16-d17}, [r0]
   1616c:	mov	r6, #0
   16170:	str	r6, [r4, #68]	; 0x44
   16174:	mov	r0, #64	; 0x40
   16178:	mov	r1, r4
   1617c:	vst1.32	{d16-d17}, [r1], r0
   16180:	str	r6, [r1]
   16184:	cmp	r8, #0
   16188:	moveq	r0, r4
   1618c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16190:	mov	r0, r4
   16194:	bl	12188 <mycore_free@plt>
   16198:	mov	r0, r6
   1619c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000161a0 <mcobject_async_mem_malloc@@Base>:
   161a0:	push	{r4, r5, r6, sl, fp, lr}
   161a4:	add	fp, sp, #16
   161a8:	mov	r6, r2
   161ac:	mov	r4, r1
   161b0:	mov	r5, r0
   161b4:	ldr	r0, [r1]
   161b8:	cmp	r0, #0
   161bc:	beq	161e4 <mcobject_async_mem_malloc@@Base+0x44>
   161c0:	ldr	r1, [r4, #8]
   161c4:	cmp	r1, r6
   161c8:	bcs	16204 <mcobject_async_mem_malloc@@Base+0x64>
   161cc:	bl	12188 <mycore_free@plt>
   161d0:	ldr	r0, [r5]
   161d4:	add	r1, r0, r6
   161d8:	str	r1, [r4, #8]
   161dc:	ldr	r0, [r5, #8]
   161e0:	b	161f8 <mcobject_async_mem_malloc@@Base+0x58>
   161e4:	ldr	r0, [r5]
   161e8:	cmp	r0, r6
   161ec:	addcc	r0, r0, r6
   161f0:	str	r0, [r4, #8]
   161f4:	ldr	r1, [r5, #8]
   161f8:	mul	r0, r0, r1
   161fc:	bl	12050 <mycore_malloc@plt>
   16200:	str	r0, [r4]
   16204:	mov	r0, #0
   16208:	str	r0, [r4, #4]
   1620c:	ldr	r0, [r4]
   16210:	clz	r0, r0
   16214:	lsr	r0, r0, #5
   16218:	lsl	r0, r0, #1
   1621c:	pop	{r4, r5, r6, sl, fp, pc}

00016220 <mcobject_async_chunk_malloc_without_lock@@Base>:
   16220:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16224:	add	fp, sp, #24
   16228:	mov	r4, r2
   1622c:	mov	r6, r1
   16230:	mov	r5, r0
   16234:	cmp	r2, #0
   16238:	movne	r0, #0
   1623c:	strne	r0, [r4]
   16240:	ldr	r0, [r5, #20]
   16244:	cmp	r0, #0
   16248:	beq	1627c <mcobject_async_chunk_malloc_without_lock@@Base+0x5c>
   1624c:	sub	r0, r0, #1
   16250:	str	r0, [r5, #20]
   16254:	ldr	r1, [r5, #12]
   16258:	ldr	r2, [r1, r0, lsl #2]
   1625c:	mov	r3, #0
   16260:	str	r3, [r2, #12]
   16264:	str	r3, [r2, #4]
   16268:	ldr	r2, [r1, r0, lsl #2]
   1626c:	str	r3, [r2, #16]
   16270:	ldr	r7, [r1, r0, lsl #2]
   16274:	mov	r0, r7
   16278:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1627c:	ldr	r0, [r5, #36]	; 0x24
   16280:	ldr	r1, [r5, #40]	; 0x28
   16284:	cmp	r1, r0
   16288:	bcc	16310 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   1628c:	ldr	r7, [r5, #28]
   16290:	ldr	r0, [r5, #32]
   16294:	cmp	r0, r7
   16298:	bcc	162d8 <mcobject_async_chunk_malloc_without_lock@@Base+0xb8>
   1629c:	ldr	r0, [r5, #24]
   162a0:	lsl	r1, r7, #3
   162a4:	bl	110b4 <mycore_realloc@plt>
   162a8:	cmp	r0, #0
   162ac:	beq	162e8 <mcobject_async_chunk_malloc_without_lock@@Base+0xc8>
   162b0:	mov	r8, r0
   162b4:	lsl	r7, r7, #1
   162b8:	ldr	r1, [r5, #32]
   162bc:	add	r0, r0, r1, lsl #2
   162c0:	sub	r1, r7, r1
   162c4:	lsl	r2, r1, #2
   162c8:	mov	r1, #0
   162cc:	bl	11ccc <memset@plt>
   162d0:	str	r8, [r5, #24]
   162d4:	str	r7, [r5, #28]
   162d8:	mov	r0, r5
   162dc:	bl	11618 <mcobject_async_chunk_up@plt>
   162e0:	cmp	r0, #0
   162e4:	beq	16304 <mcobject_async_chunk_malloc_without_lock@@Base+0xe4>
   162e8:	mov	r7, #0
   162ec:	cmp	r4, #0
   162f0:	beq	162fc <mcobject_async_chunk_malloc_without_lock@@Base+0xdc>
   162f4:	mov	r0, #2
   162f8:	str	r0, [r4]
   162fc:	mov	r0, r7
   16300:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16304:	ldr	r0, [r5, #32]
   16308:	add	r0, r0, #1
   1630c:	str	r0, [r5, #32]
   16310:	ldr	r0, [r5, #24]
   16314:	ldr	r1, [r5, #32]
   16318:	ldr	r2, [r5, #40]	; 0x28
   1631c:	add	r0, r0, r1, lsl #2
   16320:	ldr	r0, [r0, #-4]
   16324:	add	r1, r2, #1
   16328:	str	r1, [r5, #40]	; 0x28
   1632c:	add	r1, r2, r2, lsl #2
   16330:	add	r7, r0, r1, lsl #2
   16334:	mov	r0, #0
   16338:	str	r0, [r7, #12]
   1633c:	str	r0, [r7, #16]
   16340:	mov	r0, r5
   16344:	mov	r1, r7
   16348:	mov	r2, r6
   1634c:	bl	1127c <mcobject_async_mem_malloc@plt>
   16350:	cmp	r4, #0
   16354:	strne	r0, [r4]
   16358:	mov	r0, r7
   1635c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016360 <mcobject_async_node_add@@Base>:
   16360:	push	{r4, r5, r6, r7, fp, lr}
   16364:	add	fp, sp, #16
   16368:	mov	r5, r1
   1636c:	mov	r4, r0
   16370:	ldr	r0, [r0, #68]	; 0x44
   16374:	bl	11c6c <mcsync_lock@plt>
   16378:	cmp	r5, #0
   1637c:	movne	r0, #0
   16380:	strne	r0, [r5]
   16384:	ldr	r0, [r4, #60]	; 0x3c
   16388:	cmp	r0, #0
   1638c:	beq	163a4 <mcobject_async_node_add@@Base+0x44>
   16390:	sub	r0, r0, #1
   16394:	str	r0, [r4, #60]	; 0x3c
   16398:	ldr	r1, [r4, #56]	; 0x38
   1639c:	ldr	r6, [r1, r0, lsl #2]
   163a0:	b	163bc <mcobject_async_node_add@@Base+0x5c>
   163a4:	ldr	r6, [r4, #48]	; 0x30
   163a8:	ldr	r0, [r4, #52]	; 0x34
   163ac:	cmp	r6, r0
   163b0:	bcs	16430 <mcobject_async_node_add@@Base+0xd0>
   163b4:	add	r0, r6, #1
   163b8:	str	r0, [r4, #48]	; 0x30
   163bc:	ldr	r1, [r4]
   163c0:	ldr	r7, [r4, #44]	; 0x2c
   163c4:	mov	r0, r4
   163c8:	mov	r2, r5
   163cc:	bl	11cfc <mcobject_async_chunk_malloc_without_lock@plt>
   163d0:	str	r0, [r7, r6, lsl #4]
   163d4:	cmp	r5, #0
   163d8:	ldrne	r1, [r5]
   163dc:	cmpne	r1, #0
   163e0:	bne	16430 <mcobject_async_node_add@@Base+0xd0>
   163e4:	mov	r1, #0
   163e8:	str	r1, [r0, #12]
   163ec:	str	r1, [r0, #16]
   163f0:	add	r7, r7, r6, lsl #4
   163f4:	str	r1, [r7, #12]
   163f8:	ldr	r0, [r4]
   163fc:	str	r0, [r7, #8]
   16400:	lsl	r0, r0, #2
   16404:	bl	12050 <mycore_malloc@plt>
   16408:	str	r0, [r7, #4]
   1640c:	cmp	r0, #0
   16410:	beq	16424 <mcobject_async_node_add@@Base+0xc4>
   16414:	ldr	r0, [r4, #68]	; 0x44
   16418:	bl	1226c <mcsync_unlock@plt>
   1641c:	mov	r0, r6
   16420:	pop	{r4, r5, r6, r7, fp, pc}
   16424:	cmp	r5, #0
   16428:	movne	r0, #3
   1642c:	strne	r0, [r5]
   16430:	ldr	r0, [r4, #68]	; 0x44
   16434:	bl	1226c <mcsync_unlock@plt>
   16438:	mov	r6, #0
   1643c:	mov	r0, r6
   16440:	pop	{r4, r5, r6, r7, fp, pc}

00016444 <mcobject_async_node_clean@@Base>:
   16444:	ldr	r2, [r0, #48]	; 0x30
   16448:	cmp	r2, r1
   1644c:	bls	1649c <mcobject_async_node_clean@@Base+0x58>
   16450:	ldr	ip, [r0, #44]	; 0x2c
   16454:	mov	r0, ip
   16458:	ldr	r2, [r0, r1, lsl #4]!
   1645c:	mov	r3, #0
   16460:	str	r3, [r0, #12]!
   16464:	cmp	r2, #0
   16468:	bxeq	lr
   1646c:	ldr	r2, [ip, r1, lsl #4]
   16470:	ldr	r3, [r2, #16]
   16474:	cmp	r3, #0
   16478:	beq	16490 <mcobject_async_node_clean@@Base+0x4c>
   1647c:	mov	r2, r3
   16480:	ldr	r3, [r3, #16]
   16484:	cmp	r3, #0
   16488:	bne	1647c <mcobject_async_node_clean@@Base+0x38>
   1648c:	str	r2, [ip, r1, lsl #4]
   16490:	mov	r1, #0
   16494:	str	r1, [r2, #4]
   16498:	str	r1, [r0]
   1649c:	bx	lr

000164a0 <mcobject_async_node_all_clean@@Base>:
   164a0:	push	{r4, r5, fp, lr}
   164a4:	add	fp, sp, #8
   164a8:	mov	r4, r0
   164ac:	ldr	r0, [r0, #48]	; 0x30
   164b0:	cmp	r0, #0
   164b4:	popeq	{r4, r5, fp, pc}
   164b8:	mov	r5, #0
   164bc:	mov	r0, r4
   164c0:	mov	r1, r5
   164c4:	bl	11c9c <mcobject_async_node_clean@plt>
   164c8:	add	r5, r5, #1
   164cc:	ldr	r0, [r4, #48]	; 0x30
   164d0:	cmp	r5, r0
   164d4:	bcc	164bc <mcobject_async_node_all_clean@@Base+0x1c>
   164d8:	pop	{r4, r5, fp, pc}

000164dc <mcobject_async_node_delete@@Base>:
   164dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   164e0:	add	fp, sp, #24
   164e4:	mov	r5, r1
   164e8:	mov	r4, r0
   164ec:	ldr	r0, [r0, #68]	; 0x44
   164f0:	bl	11c6c <mcsync_lock@plt>
   164f4:	ldr	r0, [r4, #48]	; 0x30
   164f8:	cmp	r0, r5
   164fc:	bls	16574 <mcobject_async_node_delete@@Base+0x98>
   16500:	ldr	r8, [r4, #44]	; 0x2c
   16504:	mov	r9, r8
   16508:	ldr	r0, [r9, r5, lsl #4]!
   1650c:	mov	r7, r0
   16510:	ldr	r0, [r0, #12]
   16514:	cmp	r0, #0
   16518:	bne	1650c <mcobject_async_node_delete@@Base+0x30>
   1651c:	b	16538 <mcobject_async_node_delete@@Base+0x5c>
   16520:	ldr	r0, [r4, #12]
   16524:	ldr	r1, [r4, #20]
   16528:	str	r7, [r0, r1, lsl #2]
   1652c:	add	r0, r1, #1
   16530:	str	r0, [r4, #20]
   16534:	ldr	r7, [r7, #16]
   16538:	cmp	r7, #0
   1653c:	beq	16580 <mcobject_async_node_delete@@Base+0xa4>
   16540:	ldr	r6, [r4, #16]
   16544:	ldr	r0, [r4, #20]
   16548:	cmp	r0, r6
   1654c:	bcc	16520 <mcobject_async_node_delete@@Base+0x44>
   16550:	ldr	r0, [r4, #12]
   16554:	lsl	r1, r6, #3
   16558:	bl	110b4 <mycore_realloc@plt>
   1655c:	cmp	r0, #0
   16560:	beq	16574 <mcobject_async_node_delete@@Base+0x98>
   16564:	lsl	r1, r6, #1
   16568:	str	r0, [r4, #12]
   1656c:	str	r1, [r4, #16]
   16570:	b	16520 <mcobject_async_node_delete@@Base+0x44>
   16574:	ldr	r0, [r4, #68]	; 0x44
   16578:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1657c:	b	1226c <mcsync_unlock@plt>
   16580:	add	r0, r8, r5, lsl #4
   16584:	ldr	r0, [r0, #4]
   16588:	cmp	r0, #0
   1658c:	beq	16594 <mcobject_async_node_delete@@Base+0xb8>
   16590:	bl	12188 <mycore_free@plt>
   16594:	vmov.i32	q8, #0	; 0x00000000
   16598:	vst1.32	{d16-d17}, [r9]
   1659c:	ldr	r0, [r4, #60]	; 0x3c
   165a0:	ldr	r6, [r4, #64]	; 0x40
   165a4:	cmp	r0, r6
   165a8:	bcc	165c8 <mcobject_async_node_delete@@Base+0xec>
   165ac:	ldr	r0, [r4, #56]	; 0x38
   165b0:	lsl	r1, r6, #2
   165b4:	bl	110b4 <mycore_realloc@plt>
   165b8:	cmp	r0, #0
   165bc:	strne	r0, [r4, #56]	; 0x38
   165c0:	lslne	r0, r6, #1
   165c4:	strne	r0, [r4, #64]	; 0x40
   165c8:	ldr	r0, [r4, #56]	; 0x38
   165cc:	ldr	r1, [r4, #60]	; 0x3c
   165d0:	str	r5, [r0, r1, lsl #2]
   165d4:	ldr	r1, [r4, #60]	; 0x3c
   165d8:	ldr	r0, [r4, #68]	; 0x44
   165dc:	add	r1, r1, #1
   165e0:	str	r1, [r4, #60]	; 0x3c
   165e4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   165e8:	b	1226c <mcsync_unlock@plt>

000165ec <mcobject_async_malloc@@Base>:
   165ec:	push	{r4, r5, r6, r7, fp, lr}
   165f0:	add	fp, sp, #16
   165f4:	sub	sp, sp, #8
   165f8:	mov	r4, r2
   165fc:	mov	r5, r1
   16600:	mov	r6, r0
   16604:	ldr	r7, [r0, #44]	; 0x2c
   16608:	add	r0, r7, r1, lsl #4
   1660c:	mov	r1, r0
   16610:	ldr	r2, [r1, #12]!
   16614:	cmp	r2, #0
   16618:	beq	16644 <mcobject_async_malloc@@Base+0x58>
   1661c:	cmp	r4, #0
   16620:	movne	r2, #0
   16624:	strne	r2, [r4]
   16628:	ldr	r2, [r1]
   1662c:	sub	r2, r2, #1
   16630:	str	r2, [r1]
   16634:	ldr	r0, [r0, #4]
   16638:	ldr	r0, [r0, r2, lsl #2]
   1663c:	sub	sp, fp, #16
   16640:	pop	{r4, r5, r6, r7, fp, pc}
   16644:	ldr	r0, [r7, r5, lsl #4]
   16648:	ldmib	r0, {r1, r2}
   1664c:	cmp	r1, r2
   16650:	bcc	1666c <mcobject_async_malloc@@Base+0x80>
   16654:	ldr	r0, [r0, #12]
   16658:	cmp	r0, #0
   1665c:	beq	166a4 <mcobject_async_malloc@@Base+0xb8>
   16660:	str	r0, [r7, r5, lsl #4]
   16664:	mov	r1, #0
   16668:	str	r1, [r0, #4]
   1666c:	cmp	r4, #0
   16670:	movne	r0, #0
   16674:	strne	r0, [r4]
   16678:	ldr	r0, [r7, r5, lsl #4]
   1667c:	ldm	r0, {r1, r2}
   16680:	ldr	r3, [r6, #8]
   16684:	mul	r2, r3, r2
   16688:	str	r5, [r1, r2]!
   1668c:	ldr	r2, [r0, #4]
   16690:	add	r2, r2, #1
   16694:	str	r2, [r0, #4]
   16698:	add	r0, r1, #4
   1669c:	sub	sp, fp, #16
   166a0:	pop	{r4, r5, r6, r7, fp, pc}
   166a4:	ldr	r1, [r6]
   166a8:	add	r2, sp, #4
   166ac:	mov	r0, r6
   166b0:	bl	11594 <mcobject_async_chunk_malloc@plt>
   166b4:	ldr	r1, [sp, #4]
   166b8:	cmp	r1, #0
   166bc:	beq	166d4 <mcobject_async_malloc@@Base+0xe8>
   166c0:	cmp	r4, #0
   166c4:	strne	r1, [r4]
   166c8:	mov	r0, #0
   166cc:	sub	sp, fp, #16
   166d0:	pop	{r4, r5, r6, r7, fp, pc}
   166d4:	ldr	r1, [r7, r5, lsl #4]
   166d8:	str	r1, [r0, #16]
   166dc:	ldr	r1, [r7, r5, lsl #4]
   166e0:	str	r0, [r1, #12]
   166e4:	str	r0, [r7, r5, lsl #4]
   166e8:	b	1666c <mcobject_async_malloc@@Base+0x80>

000166ec <mcobject_async_free@@Base>:
   166ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   166f0:	add	fp, sp, #24
   166f4:	mov	r4, r1
   166f8:	mov	r1, r0
   166fc:	ldr	r2, [r4, #-4]
   16700:	ldr	r3, [r0, #48]	; 0x30
   16704:	mov	r0, #5
   16708:	cmp	r2, r3
   1670c:	popcs	{r4, r5, r6, r7, r8, r9, fp, pc}
   16710:	ldr	r0, [r1, #44]	; 0x2c
   16714:	add	r6, r0, r2, lsl #4
   16718:	mov	r5, r6
   1671c:	ldr	r0, [r5, #12]!
   16720:	mov	r7, r5
   16724:	ldr	r8, [r7, #-4]!
   16728:	cmp	r0, r8
   1672c:	bcc	16758 <mcobject_async_free@@Base+0x6c>
   16730:	mov	r9, r6
   16734:	ldr	r0, [r9, #4]!
   16738:	lsl	r1, r8, #3
   1673c:	bl	110b4 <mycore_realloc@plt>
   16740:	cmp	r0, #0
   16744:	moveq	r0, #6
   16748:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1674c:	str	r0, [r9]
   16750:	lsl	r0, r8, #1
   16754:	str	r0, [r7]
   16758:	ldr	r0, [r6, #4]
   1675c:	ldr	r1, [r5]
   16760:	str	r4, [r0, r1, lsl #2]
   16764:	add	r0, r1, #1
   16768:	str	r0, [r5]
   1676c:	mov	r0, #0
   16770:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016774 <mcsimple_create@@Base>:
   16774:	mov	r0, #1
   16778:	mov	r1, #28
   1677c:	b	113a8 <mycore_calloc@plt>

00016780 <mcsimple_init@@Base>:
   16780:	push	{r4, r5, r6, sl, fp, lr}
   16784:	add	fp, sp, #16
   16788:	mov	r5, r3
   1678c:	mov	r6, r2
   16790:	mov	r4, r0
   16794:	mov	r0, #0
   16798:	str	r3, [r4]
   1679c:	str	r1, [r4, #8]
   167a0:	str	r0, [r4, #12]
   167a4:	str	r0, [r4, #16]
   167a8:	mov	r0, r1
   167ac:	mov	r1, #4
   167b0:	bl	113a8 <mycore_calloc@plt>
   167b4:	str	r0, [r4, #4]
   167b8:	cmp	r0, #0
   167bc:	popeq	{r4, r5, r6, sl, fp, pc}
   167c0:	mul	r0, r5, r6
   167c4:	str	r0, [r4, #20]
   167c8:	ldr	r1, [r4, #12]
   167cc:	mov	r0, r4
   167d0:	pop	{r4, r5, r6, sl, fp, lr}
   167d4:	b	167d8 <mcsimple_init_list_entries@@Base>

000167d8 <mcsimple_init_list_entries@@Base>:
   167d8:	push	{r4, r5, r6, sl, fp, lr}
   167dc:	add	fp, sp, #16
   167e0:	mov	r4, r1
   167e4:	mov	r5, r0
   167e8:	ldr	r6, [r0, #8]
   167ec:	ldr	r0, [r0, #12]
   167f0:	cmp	r0, r6
   167f4:	bcc	16834 <mcsimple_init_list_entries@@Base+0x5c>
   167f8:	ldr	r0, [r5, #4]
   167fc:	lsl	r1, r6, #2
   16800:	bl	110b4 <mycore_realloc@plt>
   16804:	cmp	r0, #0
   16808:	moveq	r0, #0
   1680c:	popeq	{r4, r5, r6, sl, fp, pc}
   16810:	add	r6, r6, #128	; 0x80
   16814:	str	r0, [r5, #4]
   16818:	add	r0, r0, r4, lsl #2
   1681c:	ldr	r1, [r5, #8]
   16820:	sub	r1, r6, r1
   16824:	lsl	r2, r1, #2
   16828:	mov	r1, #0
   1682c:	bl	11ccc <memset@plt>
   16830:	str	r6, [r5, #8]
   16834:	mov	r0, #0
   16838:	str	r0, [r5, #24]
   1683c:	ldr	r0, [r5, #4]
   16840:	ldr	r0, [r0, r4, lsl #2]
   16844:	cmp	r0, #0
   16848:	bne	16868 <mcsimple_init_list_entries@@Base+0x90>
   1684c:	ldr	r1, [r5, #16]
   16850:	ldr	r0, [r5, #20]
   16854:	add	r1, r1, #1
   16858:	str	r1, [r5, #16]
   1685c:	bl	12050 <mycore_malloc@plt>
   16860:	ldr	r1, [r5, #4]
   16864:	str	r0, [r1, r4, lsl #2]
   16868:	ldr	r0, [r5, #4]
   1686c:	ldr	r0, [r0, r4, lsl #2]
   16870:	pop	{r4, r5, r6, sl, fp, pc}

00016874 <mcsimple_clean@@Base>:
   16874:	mov	r1, #0
   16878:	str	r1, [r0, #12]
   1687c:	str	r1, [r0, #24]
   16880:	bx	lr

00016884 <mcsimple_destroy@@Base>:
   16884:	push	{r4, r5, r6, r7, fp, lr}
   16888:	add	fp, sp, #16
   1688c:	mov	r4, #0
   16890:	cmp	r0, #0
   16894:	beq	168fc <mcsimple_destroy@@Base+0x78>
   16898:	mov	r6, r1
   1689c:	mov	r5, r0
   168a0:	ldr	r0, [r0, #4]
   168a4:	cmp	r0, #0
   168a8:	beq	168e8 <mcsimple_destroy@@Base+0x64>
   168ac:	ldr	r0, [r5, #16]
   168b0:	cmp	r0, #0
   168b4:	beq	168e0 <mcsimple_destroy@@Base+0x5c>
   168b8:	mov	r7, #0
   168bc:	ldr	r0, [r5, #4]
   168c0:	ldr	r0, [r0, r7, lsl #2]
   168c4:	cmp	r0, #0
   168c8:	beq	168d0 <mcsimple_destroy@@Base+0x4c>
   168cc:	bl	12188 <mycore_free@plt>
   168d0:	ldr	r0, [r5, #16]
   168d4:	add	r7, r7, #1
   168d8:	cmp	r7, r0
   168dc:	bcc	168bc <mcsimple_destroy@@Base+0x38>
   168e0:	ldr	r0, [r5, #4]
   168e4:	bl	12188 <mycore_free@plt>
   168e8:	cmp	r6, #0
   168ec:	moveq	r0, r5
   168f0:	popeq	{r4, r5, r6, r7, fp, pc}
   168f4:	mov	r0, r5
   168f8:	bl	12188 <mycore_free@plt>
   168fc:	mov	r0, r4
   16900:	pop	{r4, r5, r6, r7, fp, pc}

00016904 <mcsimple_malloc@@Base>:
   16904:	push	{r4, sl, fp, lr}
   16908:	add	fp, sp, #8
   1690c:	mov	r4, r0
   16910:	ldr	r0, [r0, #20]
   16914:	ldr	r1, [r4, #24]
   16918:	cmp	r1, r0
   1691c:	bcc	16940 <mcsimple_malloc@@Base+0x3c>
   16920:	ldr	r0, [r4, #12]
   16924:	add	r1, r0, #1
   16928:	str	r1, [r4, #12]
   1692c:	mov	r0, r4
   16930:	bl	11db0 <mcsimple_init_list_entries@plt>
   16934:	cmp	r0, #0
   16938:	moveq	r0, #0
   1693c:	popeq	{r4, sl, fp, pc}
   16940:	ldm	r4, {r0, r1}
   16944:	ldr	r2, [r4, #12]
   16948:	ldr	r3, [r4, #24]
   1694c:	add	r0, r0, r3
   16950:	str	r0, [r4, #24]
   16954:	ldr	r0, [r1, r2, lsl #2]
   16958:	add	r0, r0, r3
   1695c:	pop	{r4, sl, fp, pc}

00016960 <mcsimple_get_by_absolute_position@@Base>:
   16960:	push	{fp, lr}
   16964:	mov	fp, sp
   16968:	ldr	r2, [r0]
   1696c:	ldr	lr, [r0, #16]
   16970:	ldr	ip, [r0, #20]
   16974:	mul	r2, r2, r1
   16978:	udiv	r3, r2, ip
   1697c:	mov	r1, #0
   16980:	cmp	r3, lr
   16984:	mlscc	r1, r3, ip, r2
   16988:	ldrcc	r0, [r0, #4]
   1698c:	ldrcc	r0, [r0, r3, lsl #2]
   16990:	addcc	r1, r0, r1
   16994:	mov	r0, r1
   16998:	pop	{fp, pc}

0001699c <mcsync_create@@Base>:
   1699c:	mov	r0, #1
   169a0:	mov	r1, #8
   169a4:	b	113a8 <mycore_calloc@plt>

000169a8 <mcsync_init@@Base>:
   169a8:	push	{r4, r5, r6, sl, fp, lr}
   169ac:	add	fp, sp, #16
   169b0:	mov	r5, r0
   169b4:	bl	1199c <mcsync_spin_create@plt>
   169b8:	str	r0, [r5]
   169bc:	mov	r4, #1
   169c0:	cmp	r0, #0
   169c4:	beq	16a20 <mcsync_init@@Base+0x78>
   169c8:	bl	1193c <mcsync_spin_init@plt>
   169cc:	cmp	r0, #0
   169d0:	beq	169e8 <mcsync_init@@Base+0x40>
   169d4:	mov	r6, r0
   169d8:	ldr	r0, [r5]
   169dc:	bl	11438 <mcsync_spin_destroy@plt>
   169e0:	mov	r0, r6
   169e4:	pop	{r4, r5, r6, sl, fp, pc}
   169e8:	bl	11ce4 <mcsync_mutex_create@plt>
   169ec:	str	r0, [r5, #4]
   169f0:	cmp	r0, #0
   169f4:	beq	16a20 <mcsync_init@@Base+0x78>
   169f8:	bl	11f3c <mcsync_mutex_init@plt>
   169fc:	cmp	r0, #0
   16a00:	moveq	r4, #0
   16a04:	moveq	r0, r4
   16a08:	popeq	{r4, r5, r6, sl, fp, pc}
   16a0c:	mov	r4, r0
   16a10:	ldr	r0, [r5]
   16a14:	bl	11438 <mcsync_spin_destroy@plt>
   16a18:	ldr	r0, [r5, #4]
   16a1c:	bl	11234 <mcsync_mutex_destroy@plt>
   16a20:	mov	r0, r4
   16a24:	pop	{r4, r5, r6, sl, fp, pc}

00016a28 <mcsync_clean@@Base>:
   16a28:	push	{r4, sl, fp, lr}
   16a2c:	add	fp, sp, #8
   16a30:	mov	r4, r0
   16a34:	ldr	r0, [r0]
   16a38:	bl	11e70 <mcsync_spin_clean@plt>
   16a3c:	ldr	r0, [r4, #4]
   16a40:	pop	{r4, sl, fp, lr}
   16a44:	b	1220c <mcsync_mutex_clean@plt>

00016a48 <mcsync_destroy@@Base>:
   16a48:	push	{r4, r5, r6, sl, fp, lr}
   16a4c:	add	fp, sp, #16
   16a50:	mov	r4, #0
   16a54:	cmp	r0, #0
   16a58:	beq	16a88 <mcsync_destroy@@Base+0x40>
   16a5c:	mov	r6, r1
   16a60:	mov	r5, r0
   16a64:	ldr	r0, [r0]
   16a68:	bl	11438 <mcsync_spin_destroy@plt>
   16a6c:	ldr	r0, [r5, #4]
   16a70:	bl	11234 <mcsync_mutex_destroy@plt>
   16a74:	cmp	r6, #0
   16a78:	moveq	r0, r5
   16a7c:	popeq	{r4, r5, r6, sl, fp, pc}
   16a80:	mov	r0, r5
   16a84:	bl	12188 <mycore_free@plt>
   16a88:	mov	r0, r4
   16a8c:	pop	{r4, r5, r6, sl, fp, pc}

00016a90 <mcsync_lock@@Base>:
   16a90:	ldr	r0, [r0]
   16a94:	b	119e4 <mcsync_spin_lock@plt>

00016a98 <mcsync_unlock@@Base>:
   16a98:	ldr	r0, [r0]
   16a9c:	b	123bc <mcsync_spin_unlock@plt>

00016aa0 <mctree_create@@Base>:
   16aa0:	push	{r4, r5, r6, sl, fp, lr}
   16aa4:	add	fp, sp, #16
   16aa8:	mov	r5, r0
   16aac:	mov	r0, #16
   16ab0:	bl	12050 <mycore_malloc@plt>
   16ab4:	mov	r4, #0
   16ab8:	cmp	r0, #0
   16abc:	beq	16af0 <mctree_create@@Base+0x50>
   16ac0:	mov	r6, r0
   16ac4:	add	r1, r5, #1
   16ac8:	add	r0, r5, #512	; 0x200
   16acc:	str	r1, [r6, #4]
   16ad0:	str	r0, [r6, #8]
   16ad4:	mov	r1, #28
   16ad8:	bl	113a8 <mycore_calloc@plt>
   16adc:	str	r0, [r6]
   16ae0:	cmp	r0, #0
   16ae4:	beq	16af8 <mctree_create@@Base+0x58>
   16ae8:	str	r5, [r6, #12]
   16aec:	mov	r4, r6
   16af0:	mov	r0, r4
   16af4:	pop	{r4, r5, r6, sl, fp, pc}
   16af8:	mov	r0, r6
   16afc:	bl	12188 <mycore_free@plt>
   16b00:	mov	r0, r4
   16b04:	pop	{r4, r5, r6, sl, fp, pc}

00016b08 <mctree_clean@@Base>:
   16b08:	ldr	r1, [r0]
   16b0c:	ldr	r2, [r0, #8]
   16b10:	ldr	r3, [r0, #12]
   16b14:	add	r3, r3, #1
   16b18:	str	r3, [r0, #4]
   16b1c:	rsb	r0, r2, r2, lsl #3
   16b20:	lsl	r2, r0, #2
   16b24:	mov	r0, r1
   16b28:	mov	r1, #0
   16b2c:	b	11ccc <memset@plt>

00016b30 <mctree_destroy@@Base>:
   16b30:	cmp	r0, #0
   16b34:	beq	16b60 <mctree_destroy@@Base+0x30>
   16b38:	push	{r4, sl, fp, lr}
   16b3c:	add	fp, sp, #8
   16b40:	mov	r4, r0
   16b44:	ldr	r0, [r0]
   16b48:	cmp	r0, #0
   16b4c:	beq	16b54 <mctree_destroy@@Base+0x24>
   16b50:	bl	12188 <mycore_free@plt>
   16b54:	mov	r0, r4
   16b58:	bl	12188 <mycore_free@plt>
   16b5c:	pop	{r4, sl, fp, lr}
   16b60:	mov	r0, #0
   16b64:	bx	lr

00016b68 <__mtree_search_lowercase_to_start@@Base>:
   16b68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b6c:	add	fp, sp, #24
   16b70:	cmp	r1, #0
   16b74:	beq	16c04 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16b78:	mov	r5, r3
   16b7c:	mov	r8, r2
   16b80:	mov	r4, r1
   16b84:	ldr	r7, [r0]
   16b88:	rsb	r0, r4, r4, lsl #3
   16b8c:	add	r6, r7, r0, lsl #2
   16b90:	ldr	r1, [r6, #4]
   16b94:	cmp	r1, r5
   16b98:	bne	16bc4 <__mtree_search_lowercase_to_start@@Base+0x5c>
   16b9c:	ldr	r1, [r7, r0, lsl #2]
   16ba0:	mov	r0, r8
   16ba4:	mov	r2, r5
   16ba8:	bl	11714 <mycore_strncasecmp@plt>
   16bac:	cmp	r0, #0
   16bb0:	beq	16c08 <__mtree_search_lowercase_to_start@@Base+0xa0>
   16bb4:	ldr	r4, [r6, #24]
   16bb8:	cmp	r4, #0
   16bbc:	bne	16b88 <__mtree_search_lowercase_to_start@@Base+0x20>
   16bc0:	b	16c04 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16bc4:	bcs	16bec <__mtree_search_lowercase_to_start@@Base+0x84>
   16bc8:	ldr	r4, [r6, #20]
   16bcc:	rsb	r0, r4, r4, lsl #3
   16bd0:	add	r0, r7, r0, lsl #2
   16bd4:	ldr	r0, [r0, #4]
   16bd8:	cmp	r0, r5
   16bdc:	bhi	16c04 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16be0:	cmp	r4, #0
   16be4:	bne	16b88 <__mtree_search_lowercase_to_start@@Base+0x20>
   16be8:	b	16c04 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16bec:	ldr	r4, [r6, #16]
   16bf0:	rsb	r0, r4, r4, lsl #3
   16bf4:	add	r0, r7, r0, lsl #2
   16bf8:	ldr	r0, [r0, #4]
   16bfc:	cmp	r0, r5
   16c00:	bcs	16be0 <__mtree_search_lowercase_to_start@@Base+0x78>
   16c04:	mov	r4, #0
   16c08:	mov	r0, r4
   16c0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016c10 <__mtree_search_to_start@@Base>:
   16c10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c14:	add	fp, sp, #24
   16c18:	cmp	r1, #0
   16c1c:	beq	16cac <__mtree_search_to_start@@Base+0x9c>
   16c20:	mov	r5, r3
   16c24:	mov	r8, r2
   16c28:	mov	r4, r1
   16c2c:	ldr	r7, [r0]
   16c30:	rsb	r0, r4, r4, lsl #3
   16c34:	add	r6, r7, r0, lsl #2
   16c38:	ldr	r1, [r6, #4]
   16c3c:	cmp	r1, r5
   16c40:	bne	16c6c <__mtree_search_to_start@@Base+0x5c>
   16c44:	ldr	r1, [r7, r0, lsl #2]
   16c48:	mov	r0, r8
   16c4c:	mov	r2, r5
   16c50:	bl	11504 <memcmp@plt>
   16c54:	cmp	r0, #0
   16c58:	beq	16cb0 <__mtree_search_to_start@@Base+0xa0>
   16c5c:	ldr	r4, [r6, #24]
   16c60:	cmp	r4, #0
   16c64:	bne	16c30 <__mtree_search_to_start@@Base+0x20>
   16c68:	b	16cac <__mtree_search_to_start@@Base+0x9c>
   16c6c:	bcs	16c94 <__mtree_search_to_start@@Base+0x84>
   16c70:	ldr	r4, [r6, #20]
   16c74:	rsb	r0, r4, r4, lsl #3
   16c78:	add	r0, r7, r0, lsl #2
   16c7c:	ldr	r0, [r0, #4]
   16c80:	cmp	r0, r5
   16c84:	bhi	16cac <__mtree_search_to_start@@Base+0x9c>
   16c88:	cmp	r4, #0
   16c8c:	bne	16c30 <__mtree_search_to_start@@Base+0x20>
   16c90:	b	16cac <__mtree_search_to_start@@Base+0x9c>
   16c94:	ldr	r4, [r6, #16]
   16c98:	rsb	r0, r4, r4, lsl #3
   16c9c:	add	r0, r7, r0, lsl #2
   16ca0:	ldr	r0, [r0, #4]
   16ca4:	cmp	r0, r5
   16ca8:	bcs	16c88 <__mtree_search_to_start@@Base+0x78>
   16cac:	mov	r4, #0
   16cb0:	mov	r0, r4
   16cb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016cb8 <mctree_insert_child@@Base>:
   16cb8:	push	{r4, r5, fp, lr}
   16cbc:	add	fp, sp, #8
   16cc0:	mov	r5, r0
   16cc4:	ldr	r0, [r0]
   16cc8:	ldr	r4, [r5, #4]
   16ccc:	rsb	r1, r1, r1, lsl #3
   16cd0:	add	r1, r0, r1, lsl #2
   16cd4:	str	r4, [r1, #24]
   16cd8:	rsb	r1, r4, r4, lsl #3
   16cdc:	str	r2, [r0, r1, lsl #2]!
   16ce0:	ldr	r1, [fp, #8]
   16ce4:	str	r3, [r0, #4]
   16ce8:	str	r1, [r0, #8]
   16cec:	add	r0, r4, #1
   16cf0:	str	r0, [r5, #4]
   16cf4:	ldr	r1, [r5, #8]
   16cf8:	cmp	r0, r1
   16cfc:	bcc	16d20 <mctree_insert_child@@Base+0x68>
   16d00:	movw	r0, #4097	; 0x1001
   16d04:	add	r0, r4, r0
   16d08:	str	r0, [r5, #8]
   16d0c:	rsb	r0, r0, r0, lsl #3
   16d10:	lsl	r1, r0, #2
   16d14:	ldr	r0, [r5]
   16d18:	bl	110b4 <mycore_realloc@plt>
   16d1c:	str	r0, [r5]
   16d20:	ldm	r5, {r0, r1}
   16d24:	rsb	r1, r1, r1, lsl #3
   16d28:	mov	r2, #0
   16d2c:	str	r2, [r0, r1, lsl #2]!
   16d30:	vmov.i32	q8, #0	; 0x00000000
   16d34:	str	r2, [r0, #24]
   16d38:	add	r0, r0, #8
   16d3c:	vst1.32	{d16-d17}, [r0]
   16d40:	mov	r0, r4
   16d44:	pop	{r4, r5, fp, pc}

00016d48 <mctree_insert_after@@Base>:
   16d48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d4c:	add	fp, sp, #24
   16d50:	mov	r5, r0
   16d54:	ldr	r0, [r0]
   16d58:	ldr	r8, [r5, #4]
   16d5c:	rsb	r6, r1, r1, lsl #3
   16d60:	add	r4, r0, r6, lsl #2
   16d64:	ldr	r6, [r4, #20]!
   16d68:	ldr	ip, [fp, #8]
   16d6c:	cmp	r6, #0
   16d70:	beq	16d8c <mctree_insert_after@@Base+0x44>
   16d74:	rsb	r7, r6, r6, lsl #3
   16d78:	add	r7, r0, r7, lsl #2
   16d7c:	str	r8, [r7, #16]
   16d80:	rsb	r7, r8, r8, lsl #3
   16d84:	add	r7, r0, r7, lsl #2
   16d88:	str	r6, [r7, #20]
   16d8c:	str	r8, [r4]
   16d90:	rsb	r7, r8, r8, lsl #3
   16d94:	str	r2, [r0, r7, lsl #2]!
   16d98:	str	r1, [r0, #16]
   16d9c:	stmib	r0, {r3, ip}
   16da0:	add	r0, r8, #1
   16da4:	str	r0, [r5, #4]
   16da8:	ldr	r1, [r5, #8]
   16dac:	cmp	r0, r1
   16db0:	bcc	16dd4 <mctree_insert_after@@Base+0x8c>
   16db4:	movw	r0, #4097	; 0x1001
   16db8:	add	r0, r8, r0
   16dbc:	str	r0, [r5, #8]
   16dc0:	rsb	r0, r0, r0, lsl #3
   16dc4:	lsl	r1, r0, #2
   16dc8:	ldr	r0, [r5]
   16dcc:	bl	110b4 <mycore_realloc@plt>
   16dd0:	str	r0, [r5]
   16dd4:	ldm	r5, {r0, r1}
   16dd8:	rsb	r1, r1, r1, lsl #3
   16ddc:	mov	r2, #0
   16de0:	str	r2, [r0, r1, lsl #2]!
   16de4:	vmov.i32	q8, #0	; 0x00000000
   16de8:	str	r2, [r0, #24]
   16dec:	add	r0, r0, #8
   16df0:	vst1.32	{d16-d17}, [r0]
   16df4:	mov	r0, r8
   16df8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016dfc <mctree_insert_before@@Base>:
   16dfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e00:	add	fp, sp, #24
   16e04:	mov	r5, r0
   16e08:	ldr	r0, [r0]
   16e0c:	ldr	r8, [r5, #4]
   16e10:	rsb	r6, r1, r1, lsl #3
   16e14:	add	r4, r0, r6, lsl #2
   16e18:	ldr	r6, [r4, #16]!
   16e1c:	ldr	ip, [fp, #8]
   16e20:	cmp	r6, #0
   16e24:	beq	16e40 <mctree_insert_before@@Base+0x44>
   16e28:	rsb	r7, r6, r6, lsl #3
   16e2c:	add	r7, r0, r7, lsl #2
   16e30:	str	r8, [r7, #20]
   16e34:	rsb	r7, r8, r8, lsl #3
   16e38:	add	r7, r0, r7, lsl #2
   16e3c:	str	r6, [r7, #16]
   16e40:	str	r8, [r4]
   16e44:	rsb	r7, r8, r8, lsl #3
   16e48:	str	r2, [r0, r7, lsl #2]!
   16e4c:	str	r1, [r0, #20]
   16e50:	stmib	r0, {r3, ip}
   16e54:	add	r0, r8, #1
   16e58:	str	r0, [r5, #4]
   16e5c:	ldr	r1, [r5, #8]
   16e60:	cmp	r0, r1
   16e64:	bcc	16e88 <mctree_insert_before@@Base+0x8c>
   16e68:	movw	r0, #4097	; 0x1001
   16e6c:	add	r0, r8, r0
   16e70:	str	r0, [r5, #8]
   16e74:	rsb	r0, r0, r0, lsl #3
   16e78:	lsl	r1, r0, #2
   16e7c:	ldr	r0, [r5]
   16e80:	bl	110b4 <mycore_realloc@plt>
   16e84:	str	r0, [r5]
   16e88:	ldm	r5, {r0, r1}
   16e8c:	rsb	r1, r1, r1, lsl #3
   16e90:	mov	r2, #0
   16e94:	str	r2, [r0, r1, lsl #2]!
   16e98:	vmov.i32	q8, #0	; 0x00000000
   16e9c:	str	r2, [r0, #24]
   16ea0:	add	r0, r0, #8
   16ea4:	vst1.32	{d16-d17}, [r0]
   16ea8:	mov	r0, r8
   16eac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016eb0 <__mtree_insert_to_start@@Base>:
   16eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16eb4:	add	fp, sp, #28
   16eb8:	sub	sp, sp, #4
   16ebc:	cmp	r1, #0
   16ec0:	beq	16f9c <__mtree_insert_to_start@@Base+0xec>
   16ec4:	mov	r5, r3
   16ec8:	mov	r6, r2
   16ecc:	mov	sl, r0
   16ed0:	ldr	r7, [r0]
   16ed4:	ldr	r9, [fp, #8]
   16ed8:	mov	r4, r1
   16edc:	rsb	r0, r1, r1, lsl #3
   16ee0:	add	r8, r7, r0, lsl #2
   16ee4:	ldr	r1, [r8, #4]
   16ee8:	cmp	r1, r5
   16eec:	bne	16f18 <__mtree_insert_to_start@@Base+0x68>
   16ef0:	ldr	r1, [r7, r0, lsl #2]
   16ef4:	mov	r0, r6
   16ef8:	mov	r2, r5
   16efc:	bl	11504 <memcmp@plt>
   16f00:	cmp	r0, #0
   16f04:	beq	16fa4 <__mtree_insert_to_start@@Base+0xf4>
   16f08:	ldr	r1, [r8, #24]
   16f0c:	cmp	r1, #0
   16f10:	bne	16ed8 <__mtree_insert_to_start@@Base+0x28>
   16f14:	b	16fec <__mtree_insert_to_start@@Base+0x13c>
   16f18:	bcs	16f40 <__mtree_insert_to_start@@Base+0x90>
   16f1c:	ldr	r1, [r8, #20]
   16f20:	cmp	r1, #0
   16f24:	beq	16fb0 <__mtree_insert_to_start@@Base+0x100>
   16f28:	rsb	r0, r1, r1, lsl #3
   16f2c:	add	r0, r7, r0, lsl #2
   16f30:	ldr	r0, [r0, #4]
   16f34:	cmp	r0, r5
   16f38:	bls	16ed8 <__mtree_insert_to_start@@Base+0x28>
   16f3c:	b	16fb0 <__mtree_insert_to_start@@Base+0x100>
   16f40:	ldr	r1, [r8, #16]
   16f44:	cmp	r1, #0
   16f48:	beq	16f60 <__mtree_insert_to_start@@Base+0xb0>
   16f4c:	rsb	r0, r1, r1, lsl #3
   16f50:	add	r0, r7, r0, lsl #2
   16f54:	ldr	r0, [r0, #4]
   16f58:	cmp	r0, r5
   16f5c:	bcs	16ed8 <__mtree_insert_to_start@@Base+0x28>
   16f60:	ldr	r3, [fp, #12]
   16f64:	cmp	r3, #0
   16f68:	beq	16f7c <__mtree_insert_to_start@@Base+0xcc>
   16f6c:	add	r2, fp, #8
   16f70:	mov	r0, r6
   16f74:	mov	r1, r5
   16f78:	blx	r3
   16f7c:	ldr	r0, [fp, #8]
   16f80:	str	r0, [sp]
   16f84:	mov	r0, sl
   16f88:	mov	r1, r4
   16f8c:	mov	r2, r6
   16f90:	mov	r3, r5
   16f94:	bl	11534 <mctree_insert_before@plt>
   16f98:	b	17024 <__mtree_insert_to_start@@Base+0x174>
   16f9c:	mov	r4, #0
   16fa0:	b	17028 <__mtree_insert_to_start@@Base+0x178>
   16fa4:	cmp	r9, #0
   16fa8:	strne	r9, [r8, #8]
   16fac:	b	17028 <__mtree_insert_to_start@@Base+0x178>
   16fb0:	ldr	r3, [fp, #12]
   16fb4:	cmp	r3, #0
   16fb8:	beq	16fcc <__mtree_insert_to_start@@Base+0x11c>
   16fbc:	add	r2, fp, #8
   16fc0:	mov	r0, r6
   16fc4:	mov	r1, r5
   16fc8:	blx	r3
   16fcc:	ldr	r0, [fp, #8]
   16fd0:	str	r0, [sp]
   16fd4:	mov	r0, sl
   16fd8:	mov	r1, r4
   16fdc:	mov	r2, r6
   16fe0:	mov	r3, r5
   16fe4:	bl	12080 <mctree_insert_after@plt>
   16fe8:	b	17024 <__mtree_insert_to_start@@Base+0x174>
   16fec:	ldr	r3, [fp, #12]
   16ff0:	cmp	r3, #0
   16ff4:	beq	17008 <__mtree_insert_to_start@@Base+0x158>
   16ff8:	add	r2, fp, #8
   16ffc:	mov	r0, r6
   17000:	mov	r1, r5
   17004:	blx	r3
   17008:	ldr	r0, [fp, #8]
   1700c:	str	r0, [sp]
   17010:	mov	r0, sl
   17014:	mov	r1, r4
   17018:	mov	r2, r6
   1701c:	mov	r3, r5
   17020:	bl	116b4 <mctree_insert_child@plt>
   17024:	mov	r4, r0
   17028:	mov	r0, r4
   1702c:	sub	sp, fp, #28
   17030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017034 <mctree_insert@@Base>:
   17034:	push	{r4, r5, r6, r7, fp, lr}
   17038:	add	fp, sp, #16
   1703c:	sub	sp, sp, #16
   17040:	str	r3, [sp, #12]
   17044:	cmp	r2, #0
   17048:	moveq	r0, #0
   1704c:	subeq	sp, fp, #16
   17050:	popeq	{r4, r5, r6, r7, fp, pc}
   17054:	mov	r4, r2
   17058:	mov	r5, r1
   1705c:	mov	r6, r0
   17060:	ldr	ip, [fp, #8]
   17064:	mov	r0, r1
   17068:	ldrb	r1, [r0], r2
   1706c:	ldr	r2, [pc, #144]	; 17104 <mctree_insert@@Base+0xd0>
   17070:	add	r2, pc, r2
   17074:	ldrb	r1, [r2, r1]
   17078:	ldrb	r0, [r0, #-1]
   1707c:	ldrb	r0, [r2, r0]
   17080:	add	r0, r0, r1
   17084:	ldr	r1, [r6]
   17088:	ldr	r2, [r6, #12]
   1708c:	udiv	r7, r0, r2
   17090:	mls	r0, r7, r2, r0
   17094:	add	r7, r0, #1
   17098:	rsb	r0, r7, r7, lsl #3
   1709c:	add	r0, r1, r0, lsl #2
   170a0:	ldr	r1, [r0, #24]
   170a4:	cmp	r1, #0
   170a8:	beq	170c8 <mctree_insert@@Base+0x94>
   170ac:	stm	sp, {r3, ip}
   170b0:	mov	r0, r6
   170b4:	mov	r2, r5
   170b8:	mov	r3, r4
   170bc:	bl	11804 <__mtree_insert_to_start@plt>
   170c0:	sub	sp, fp, #16
   170c4:	pop	{r4, r5, r6, r7, fp, pc}
   170c8:	cmp	ip, #0
   170cc:	beq	170e0 <mctree_insert@@Base+0xac>
   170d0:	add	r2, sp, #12
   170d4:	mov	r0, r5
   170d8:	mov	r1, r4
   170dc:	blx	ip
   170e0:	ldr	r0, [sp, #12]
   170e4:	str	r0, [sp]
   170e8:	mov	r0, r6
   170ec:	mov	r1, r7
   170f0:	mov	r2, r5
   170f4:	mov	r3, r4
   170f8:	bl	116b4 <mctree_insert_child@plt>
   170fc:	sub	sp, fp, #16
   17100:	pop	{r4, r5, r6, r7, fp, pc}
   17104:			; <UNDEFINED> instruction: 0x000186b0

00017108 <mctree_search@@Base>:
   17108:	cmp	r2, #0
   1710c:	beq	1716c <mctree_search@@Base+0x64>
   17110:	push	{r4, sl, fp, lr}
   17114:	add	fp, sp, #8
   17118:	mov	r3, r2
   1711c:	mov	ip, r1
   17120:	ldrb	r2, [r1], r2
   17124:	ldr	lr, [pc, #72]	; 17174 <mctree_search@@Base+0x6c>
   17128:	add	lr, pc, lr
   1712c:	ldrb	r2, [lr, r2]
   17130:	ldrb	r1, [r1, #-1]
   17134:	ldrb	r1, [lr, r1]
   17138:	add	r1, r1, r2
   1713c:	ldr	lr, [r0]
   17140:	ldr	r2, [r0, #12]
   17144:	udiv	r4, r1, r2
   17148:	mls	r1, r4, r2, r1
   1714c:	rsb	r1, r1, r1, lsl #3
   17150:	add	r1, lr, r1, lsl #2
   17154:	ldr	r1, [r1, #52]	; 0x34
   17158:	cmp	r1, #0
   1715c:	pop	{r4, sl, fp, lr}
   17160:	beq	1716c <mctree_search@@Base+0x64>
   17164:	mov	r2, ip
   17168:	b	16c10 <__mtree_search_to_start@@Base>
   1716c:	mov	r0, #0
   17170:	bx	lr
   17174:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>

00017178 <mctree_search_lowercase@@Base>:
   17178:	cmp	r2, #0
   1717c:	beq	171dc <mctree_search_lowercase@@Base+0x64>
   17180:	push	{r4, sl, fp, lr}
   17184:	add	fp, sp, #8
   17188:	mov	r3, r2
   1718c:	mov	ip, r1
   17190:	ldrb	r2, [r1], r2
   17194:	ldr	lr, [pc, #72]	; 171e4 <mctree_search_lowercase@@Base+0x6c>
   17198:	add	lr, pc, lr
   1719c:	ldrb	r2, [lr, r2]
   171a0:	ldrb	r1, [r1, #-1]
   171a4:	ldrb	r1, [lr, r1]
   171a8:	add	r1, r1, r2
   171ac:	ldr	lr, [r0]
   171b0:	ldr	r2, [r0, #12]
   171b4:	udiv	r4, r1, r2
   171b8:	mls	r1, r4, r2, r1
   171bc:	rsb	r1, r1, r1, lsl #3
   171c0:	add	r1, lr, r1, lsl #2
   171c4:	ldr	r1, [r1, #52]	; 0x34
   171c8:	cmp	r1, #0
   171cc:	pop	{r4, sl, fp, lr}
   171d0:	beq	171dc <mctree_search_lowercase@@Base+0x64>
   171d4:	mov	r2, ip
   171d8:	b	16b68 <__mtree_search_lowercase_to_start@@Base>
   171dc:	mov	r0, #0
   171e0:	bx	lr
   171e4:	andeq	r8, r1, r8, lsl #11

000171e8 <mycore_utils_mhash_hash@@Base>:
   171e8:	cmp	r1, #0
   171ec:	beq	17214 <mycore_utils_mhash_hash@@Base+0x2c>
   171f0:	mov	ip, #0
   171f4:	ldrb	r3, [r0], #1
   171f8:	add	r3, ip, r3
   171fc:	add	r3, r3, r3, lsl #10
   17200:	eor	ip, r3, r3, lsr #6
   17204:	subs	r1, r1, #1
   17208:	bne	171f4 <mycore_utils_mhash_hash@@Base+0xc>
   1720c:	add	r0, ip, ip, lsl #3
   17210:	b	17218 <mycore_utils_mhash_hash@@Base+0x30>
   17214:	mov	r0, #0
   17218:	eor	r0, r0, r0, lsr #11
   1721c:	add	r0, r0, r0, lsl #15
   17220:	udiv	r1, r0, r2
   17224:	mls	r0, r1, r2, r0
   17228:	bx	lr

0001722c <mycore_utils_mhash_create@@Base>:
   1722c:	mov	r0, #1
   17230:	mov	r1, #24
   17234:	b	113a8 <mycore_calloc@plt>

00017238 <mycore_utils_mhash_init@@Base>:
   17238:	push	{r4, r5, r6, sl, fp, lr}
   1723c:	add	fp, sp, #16
   17240:	sub	sp, sp, #8
   17244:	mov	r4, r2
   17248:	mov	r6, r1
   1724c:	mov	r5, r0
   17250:	bl	115e8 <mchar_async_create@plt>
   17254:	mov	r1, r0
   17258:	str	r0, [r5]
   1725c:	mov	r0, #2
   17260:	cmp	r1, #0
   17264:	beq	172d8 <mycore_utils_mhash_init@@Base+0xa0>
   17268:	mov	r0, r1
   1726c:	mov	r1, #128	; 0x80
   17270:	mov	r2, #4096	; 0x1000
   17274:	bl	118e8 <mchar_async_init@plt>
   17278:	str	r0, [sp, #4]
   1727c:	cmp	r0, #0
   17280:	bne	172d8 <mycore_utils_mhash_init@@Base+0xa0>
   17284:	ldr	r0, [r5]
   17288:	add	r1, sp, #4
   1728c:	bl	11708 <mchar_async_node_add@plt>
   17290:	str	r0, [r5, #4]
   17294:	ldr	r0, [sp, #4]
   17298:	cmp	r0, #0
   1729c:	bne	172d8 <mycore_utils_mhash_init@@Base+0xa0>
   172a0:	cmp	r6, #128	; 0x80
   172a4:	movls	r6, #128	; 0x80
   172a8:	mov	r0, r6
   172ac:	mov	r1, #4
   172b0:	bl	113a8 <mycore_calloc@plt>
   172b4:	str	r0, [r5, #8]
   172b8:	cmp	r0, #0
   172bc:	mov	r0, #2
   172c0:	beq	172d8 <mycore_utils_mhash_init@@Base+0xa0>
   172c4:	str	r6, [r5, #12]
   172c8:	cmp	r4, #0
   172cc:	movweq	r4, #1
   172d0:	str	r4, [r5, #20]
   172d4:	mov	r0, #0
   172d8:	sub	sp, fp, #16
   172dc:	pop	{r4, r5, r6, sl, fp, pc}

000172e0 <mycore_utils_mhash_clean@@Base>:
   172e0:	push	{r4, sl, fp, lr}
   172e4:	add	fp, sp, #8
   172e8:	mov	r4, r0
   172ec:	ldr	r0, [r0]
   172f0:	bl	11f9c <mchar_async_clean@plt>
   172f4:	ldr	r0, [r4, #8]
   172f8:	ldr	r1, [r4, #12]
   172fc:	lsl	r2, r1, #2
   17300:	mov	r1, #0
   17304:	pop	{r4, sl, fp, lr}
   17308:	b	11ccc <memset@plt>

0001730c <mycore_utils_mhash_destroy@@Base>:
   1730c:	push	{r4, r5, r6, sl, fp, lr}
   17310:	add	fp, sp, #16
   17314:	mov	r4, #0
   17318:	cmp	r0, #0
   1731c:	beq	17354 <mycore_utils_mhash_destroy@@Base+0x48>
   17320:	mov	r6, r1
   17324:	mov	r5, r0
   17328:	ldr	r0, [r0, #8]
   1732c:	cmp	r0, #0
   17330:	beq	17340 <mycore_utils_mhash_destroy@@Base+0x34>
   17334:	bl	12188 <mycore_free@plt>
   17338:	mov	r0, #0
   1733c:	str	r0, [r5, #8]
   17340:	cmp	r6, #0
   17344:	moveq	r0, r5
   17348:	popeq	{r4, r5, r6, sl, fp, pc}
   1734c:	ldr	r0, [r5, #8]
   17350:	bl	12188 <mycore_free@plt>
   17354:	mov	r0, r4
   17358:	pop	{r4, r5, r6, sl, fp, pc}

0001735c <mycore_utils_mhash_create_entry@@Base>:
   1735c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17360:	add	fp, sp, #24
   17364:	mov	r8, r3
   17368:	mov	r6, r2
   1736c:	mov	r7, r1
   17370:	mov	r5, r0
   17374:	ldr	r0, [r0]
   17378:	ldr	r1, [r5, #4]
   1737c:	mov	r2, #16
   17380:	bl	11d2c <mchar_async_malloc@plt>
   17384:	mov	r4, r0
   17388:	ldm	r5, {r0, r1}
   1738c:	add	r2, r6, #1
   17390:	bl	11d2c <mchar_async_malloc@plt>
   17394:	str	r0, [r4]
   17398:	cmp	r0, #0
   1739c:	beq	173c8 <mycore_utils_mhash_create_entry@@Base+0x6c>
   173a0:	mov	r1, r7
   173a4:	mov	r2, r6
   173a8:	bl	113f0 <memcpy@plt>
   173ac:	ldr	r0, [r4]
   173b0:	mov	r1, #0
   173b4:	strb	r1, [r0, r6]
   173b8:	stmib	r4, {r6, r8}
   173bc:	str	r1, [r4, #12]
   173c0:	mov	r0, r4
   173c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   173c8:	ldm	r5, {r0, r1}
   173cc:	mov	r2, r4
   173d0:	bl	11b4c <mchar_async_free@plt>
   173d4:	mov	r4, #0
   173d8:	mov	r0, r4
   173dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000173e0 <mycore_utils_mhash_add_with_choice@@Base>:
   173e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   173e4:	add	fp, sp, #24
   173e8:	mov	r8, #0
   173ec:	cmp	r1, #0
   173f0:	movne	r5, r2
   173f4:	cmpne	r2, #0
   173f8:	bne	17404 <mycore_utils_mhash_add_with_choice@@Base+0x24>
   173fc:	mov	r0, r8
   17400:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17404:	mov	r6, r1
   17408:	mov	r9, r0
   1740c:	ldr	r4, [r0, #12]
   17410:	mov	r0, r1
   17414:	mov	r1, r5
   17418:	mov	r2, r4
   1741c:	bl	11510 <mycore_utils_mhash_hash@plt>
   17420:	mov	r8, r0
   17424:	ldr	r0, [r9, #8]
   17428:	ldr	r7, [r0, r8, lsl #2]
   1742c:	cmp	r7, #0
   17430:	beq	174ac <mycore_utils_mhash_add_with_choice@@Base+0xcc>
   17434:	mov	r4, #0
   17438:	b	17444 <mycore_utils_mhash_add_with_choice@@Base+0x64>
   1743c:	add	r4, r4, #1
   17440:	mov	r7, r0
   17444:	ldr	r0, [r7, #4]
   17448:	cmp	r0, r5
   1744c:	bne	1746c <mycore_utils_mhash_add_with_choice@@Base+0x8c>
   17450:	ldr	r0, [r7]
   17454:	mov	r1, r6
   17458:	mov	r2, r5
   1745c:	bl	1232c <strncmp@plt>
   17460:	cmp	r0, #0
   17464:	moveq	r0, r7
   17468:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1746c:	ldr	r0, [r7, #12]
   17470:	cmp	r0, #0
   17474:	bne	1743c <mycore_utils_mhash_add_with_choice@@Base+0x5c>
   17478:	mov	r0, r9
   1747c:	mov	r1, r6
   17480:	mov	r2, r5
   17484:	mov	r3, #0
   17488:	bl	122a8 <mycore_utils_mhash_create_entry@plt>
   1748c:	mov	r8, r0
   17490:	str	r0, [r7, #12]
   17494:	ldr	r0, [r9, #20]
   17498:	cmp	r4, r0
   1749c:	movhi	r0, r9
   174a0:	blhi	11e40 <mycore_utils_mhash_rebuld@plt>
   174a4:	mov	r0, r8
   174a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   174ac:	ldr	r0, [r9, #16]
   174b0:	sub	r1, r4, r4, lsr #2
   174b4:	cmp	r0, r1
   174b8:	movcs	r0, r9
   174bc:	blcs	11e40 <mycore_utils_mhash_rebuld@plt>
   174c0:	mov	r0, r9
   174c4:	mov	r1, r6
   174c8:	mov	r2, r5
   174cc:	mov	r3, #0
   174d0:	bl	122a8 <mycore_utils_mhash_create_entry@plt>
   174d4:	ldr	r1, [r9, #8]
   174d8:	str	r0, [r1, r8, lsl #2]
   174dc:	ldr	r0, [r9, #8]
   174e0:	ldr	r8, [r0, r8, lsl #2]
   174e4:	mov	r0, r8
   174e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000174ec <mycore_utils_mhash_rebuld@@Base>:
   174ec:	push	{r4, r5, r6, r7, fp, lr}
   174f0:	add	fp, sp, #16
   174f4:	mov	r4, r0
   174f8:	ldr	r5, [r0, #8]
   174fc:	ldr	r6, [r0, #12]
   17500:	lsl	r0, r6, #1
   17504:	str	r0, [r4, #12]
   17508:	mov	r1, #4
   1750c:	bl	113a8 <mycore_calloc@plt>
   17510:	str	r0, [r4, #8]
   17514:	cmp	r0, #0
   17518:	beq	17574 <mycore_utils_mhash_rebuld@@Base+0x88>
   1751c:	ldr	r0, [r4, #12]
   17520:	cmp	r0, #0
   17524:	beq	17564 <mycore_utils_mhash_rebuld@@Base+0x78>
   17528:	mov	r7, #0
   1752c:	ldr	r6, [r5, r7, lsl #2]
   17530:	cmp	r6, #0
   17534:	beq	17554 <mycore_utils_mhash_rebuld@@Base+0x68>
   17538:	ldm	r6, {r1, r2}
   1753c:	mov	r0, r4
   17540:	mov	r3, r6
   17544:	bl	12254 <mycore_utils_mhash_rebuild_add_entry@plt>
   17548:	ldr	r6, [r6, #12]
   1754c:	cmp	r6, #0
   17550:	bne	17538 <mycore_utils_mhash_rebuld@@Base+0x4c>
   17554:	ldr	r0, [r4, #12]
   17558:	add	r7, r7, #1
   1755c:	cmp	r7, r0
   17560:	bcc	1752c <mycore_utils_mhash_rebuld@@Base+0x40>
   17564:	mov	r0, r5
   17568:	bl	12188 <mycore_free@plt>
   1756c:	ldr	r0, [r4, #8]
   17570:	pop	{r4, r5, r6, r7, fp, pc}
   17574:	str	r5, [r4, #8]
   17578:	str	r6, [r4, #12]
   1757c:	mov	r0, #0
   17580:	pop	{r4, r5, r6, r7, fp, pc}

00017584 <mycore_utils_mhash_add@@Base>:
   17584:	push	{r4, sl, fp, lr}
   17588:	add	fp, sp, #8
   1758c:	mov	r4, r3
   17590:	bl	12170 <mycore_utils_mhash_add_with_choice@plt>
   17594:	cmp	r0, #0
   17598:	strne	r4, [r0, #8]
   1759c:	pop	{r4, sl, fp, pc}

000175a0 <mycore_utils_mhash_search@@Base>:
   175a0:	push	{r4, r5, r6, r7, fp, lr}
   175a4:	add	fp, sp, #16
   175a8:	mov	r4, #0
   175ac:	cmp	r1, #0
   175b0:	movne	r5, r2
   175b4:	cmpne	r2, #0
   175b8:	bne	175c4 <mycore_utils_mhash_search@@Base+0x24>
   175bc:	mov	r0, r4
   175c0:	pop	{r4, r5, r6, r7, fp, pc}
   175c4:	mov	r6, r1
   175c8:	mov	r7, r0
   175cc:	ldr	r2, [r0, #12]
   175d0:	mov	r0, r1
   175d4:	mov	r1, r5
   175d8:	bl	11510 <mycore_utils_mhash_hash@plt>
   175dc:	ldr	r1, [r7, #8]
   175e0:	ldr	r7, [r1, r0, lsl #2]
   175e4:	cmp	r7, #0
   175e8:	bne	175fc <mycore_utils_mhash_search@@Base+0x5c>
   175ec:	b	175bc <mycore_utils_mhash_search@@Base+0x1c>
   175f0:	ldr	r7, [r7, #12]
   175f4:	cmp	r7, #0
   175f8:	beq	175bc <mycore_utils_mhash_search@@Base+0x1c>
   175fc:	ldr	r0, [r7, #4]
   17600:	cmp	r0, r5
   17604:	bne	175f0 <mycore_utils_mhash_search@@Base+0x50>
   17608:	ldr	r0, [r7]
   1760c:	mov	r1, r6
   17610:	mov	r2, r5
   17614:	bl	1232c <strncmp@plt>
   17618:	cmp	r0, #0
   1761c:	bne	175f0 <mycore_utils_mhash_search@@Base+0x50>
   17620:	mov	r4, r7
   17624:	mov	r0, r4
   17628:	pop	{r4, r5, r6, r7, fp, pc}

0001762c <mycore_utils_mhash_entry_by_id@@Base>:
   1762c:	mov	r2, r0
   17630:	ldr	r3, [r0, #12]
   17634:	mov	r0, #0
   17638:	cmp	r3, r1
   1763c:	ldrhi	r0, [r2, #8]
   17640:	ldrhi	r0, [r0, r1, lsl #2]
   17644:	bx	lr

00017648 <mycore_utils_mhash_get_table_size@@Base>:
   17648:	ldr	r0, [r0, #12]
   1764c:	bx	lr

00017650 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   17650:	push	{r4, r5, fp, lr}
   17654:	add	fp, sp, #8
   17658:	mov	r5, r0
   1765c:	mov	r0, #0
   17660:	cmp	r1, #0
   17664:	cmpne	r2, #0
   17668:	bne	17670 <mycore_utils_mhash_rebuild_add_entry@@Base+0x20>
   1766c:	pop	{r4, r5, fp, pc}
   17670:	mov	r4, r3
   17674:	mov	r0, #0
   17678:	str	r0, [r3, #12]
   1767c:	ldr	r3, [r5, #12]
   17680:	mov	r0, r1
   17684:	mov	r1, r2
   17688:	mov	r2, r3
   1768c:	bl	11510 <mycore_utils_mhash_hash@plt>
   17690:	ldr	r1, [r5, #8]
   17694:	ldr	r0, [r1, r0, lsl #2]!
   17698:	cmp	r0, #0
   1769c:	beq	176b4 <mycore_utils_mhash_rebuild_add_entry@@Base+0x64>
   176a0:	mov	r1, r0
   176a4:	ldr	r0, [r0, #12]
   176a8:	cmp	r0, #0
   176ac:	bne	176a0 <mycore_utils_mhash_rebuild_add_entry@@Base+0x50>
   176b0:	add	r1, r1, #12
   176b4:	str	r4, [r1]
   176b8:	mov	r0, r4
   176bc:	pop	{r4, r5, fp, pc}

000176c0 <myencoding_detect_by_trigram@@Base>:
   176c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176c4:	add	fp, sp, #28
   176c8:	sub	sp, sp, #12
   176cc:	str	r3, [sp, #8]
   176d0:	mov	r5, #0
   176d4:	str	r5, [r0]
   176d8:	str	r0, [sp]
   176dc:	str	r5, [r0, #4]
   176e0:	str	r2, [sp, #4]
   176e4:	subs	r7, r2, #3
   176e8:	beq	17778 <myencoding_detect_by_trigram@@Base+0xb8>
   176ec:	mov	r8, r1
   176f0:	ldr	r9, [fp, #8]
   176f4:	mov	r6, r8
   176f8:	ldrsb	r0, [r6, r5]!
   176fc:	cmn	r0, #1
   17700:	bgt	1776c <myencoding_detect_by_trigram@@Base+0xac>
   17704:	cmp	r9, #0
   17708:	beq	1776c <myencoding_detect_by_trigram@@Base+0xac>
   1770c:	mov	sl, #0
   17710:	ldr	r4, [sp, #8]
   17714:	mov	r0, r4
   17718:	mov	r1, r6
   1771c:	mov	r2, #3
   17720:	bl	11504 <memcmp@plt>
   17724:	cmp	r0, #0
   17728:	beq	17740 <myencoding_detect_by_trigram@@Base+0x80>
   1772c:	add	r4, r4, #8
   17730:	add	sl, sl, #1
   17734:	cmp	sl, r9
   17738:	bcc	17714 <myencoding_detect_by_trigram@@Base+0x54>
   1773c:	b	1776c <myencoding_detect_by_trigram@@Base+0xac>
   17740:	ldr	r0, [r4, #4]
   17744:	ldr	r3, [sp]
   17748:	ldm	r3, {r1, r2}
   1774c:	add	r0, r2, r0
   17750:	add	r1, r1, #1
   17754:	str	r1, [r3]
   17758:	str	r0, [r3, #4]
   1775c:	ldr	r1, [fp, #12]
   17760:	cmp	r0, r1
   17764:	ldr	r0, [sp, #4]
   17768:	movcs	r5, r0
   1776c:	add	r5, r5, #1
   17770:	cmp	r5, r7
   17774:	bcc	176f4 <myencoding_detect_by_trigram@@Base+0x34>
   17778:	sub	sp, fp, #28
   1777c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017780 <myencoding_detect_russian_has_end@@Base>:
   17780:	ldr	r3, [r0, #4]
   17784:	cmp	r3, r2
   17788:	movcs	r0, #1
   1778c:	bxcs	lr
   17790:	ldr	r2, [r0]
   17794:	mov	r0, #0
   17798:	cmp	r2, r1
   1779c:	movwcs	r0, #1
   177a0:	bx	lr

000177a4 <myencoding_detect_unicode_has_end@@Base>:
   177a4:	ldmib	r0, {r2, ip}
   177a8:	cmp	r2, #0
   177ac:	mov	r0, r2
   177b0:	movwne	r0, #1
   177b4:	clz	r3, ip
   177b8:	lsr	r3, r3, #5
   177bc:	orr	r0, r3, r0
   177c0:	cmpne	ip, #0
   177c4:	bne	177cc <myencoding_detect_unicode_has_end@@Base+0x28>
   177c8:	bx	lr
   177cc:	mov	r0, #100	; 0x64
   177d0:	mul	r0, ip, r0
   177d4:	udiv	r2, r0, r2
   177d8:	mov	r0, #0
   177dc:	cmp	r2, r1
   177e0:	movwcc	r0, #1
   177e4:	bx	lr

000177e8 <myencoding_detect_utf_8@@Base>:
   177e8:	push	{r4, r5, fp, lr}
   177ec:	add	fp, sp, #8
   177f0:	mov	r3, #0
   177f4:	str	r3, [r0]
   177f8:	str	r3, [r0, #4]
   177fc:	str	r3, [r0, #8]
   17800:	cmp	r2, #0
   17804:	beq	178fc <myencoding_detect_utf_8@@Base+0x114>
   17808:	add	ip, r0, #4
   1780c:	add	lr, r0, #8
   17810:	ldrb	r4, [r1, r3]
   17814:	tst	r4, #128	; 0x80
   17818:	bne	17828 <myencoding_detect_utf_8@@Base+0x40>
   1781c:	add	r3, r3, #1
   17820:	mov	r4, r0
   17824:	b	178e8 <myencoding_detect_utf_8@@Base+0x100>
   17828:	and	r5, r4, #224	; 0xe0
   1782c:	cmp	r5, #192	; 0xc0
   17830:	bne	17860 <myencoding_detect_utf_8@@Base+0x78>
   17834:	add	r5, r3, #2
   17838:	cmp	r5, r2
   1783c:	bcs	178fc <myencoding_detect_utf_8@@Base+0x114>
   17840:	add	r3, r1, r3
   17844:	ldrb	r3, [r3, #1]
   17848:	and	r3, r3, #192	; 0xc0
   1784c:	cmp	r3, #128	; 0x80
   17850:	mov	r4, lr
   17854:	moveq	r4, ip
   17858:	mov	r3, r5
   1785c:	b	178e8 <myencoding_detect_utf_8@@Base+0x100>
   17860:	and	r5, r4, #240	; 0xf0
   17864:	cmp	r5, #224	; 0xe0
   17868:	bne	178a8 <myencoding_detect_utf_8@@Base+0xc0>
   1786c:	add	r5, r3, #3
   17870:	cmp	r5, r2
   17874:	bcs	178fc <myencoding_detect_utf_8@@Base+0x114>
   17878:	add	r3, r1, r3
   1787c:	ldrb	r4, [r3, #2]
   17880:	and	r4, r4, #192	; 0xc0
   17884:	cmp	r4, #128	; 0x80
   17888:	bne	178d4 <myencoding_detect_utf_8@@Base+0xec>
   1788c:	ldrb	r3, [r3, #1]
   17890:	and	r3, r3, #192	; 0xc0
   17894:	cmp	r3, #128	; 0x80
   17898:	bne	178d4 <myencoding_detect_utf_8@@Base+0xec>
   1789c:	mov	r4, ip
   178a0:	mov	r3, r5
   178a4:	b	178e8 <myencoding_detect_utf_8@@Base+0x100>
   178a8:	and	r4, r4, #248	; 0xf8
   178ac:	cmp	r4, #240	; 0xf0
   178b0:	bne	178e0 <myencoding_detect_utf_8@@Base+0xf8>
   178b4:	add	r5, r3, #4
   178b8:	cmp	r5, r2
   178bc:	popcs	{r4, r5, fp, pc}
   178c0:	add	r3, r1, r3
   178c4:	ldrb	r4, [r3, #3]
   178c8:	and	r4, r4, #192	; 0xc0
   178cc:	cmp	r4, #128	; 0x80
   178d0:	beq	1787c <myencoding_detect_utf_8@@Base+0x94>
   178d4:	mov	r4, lr
   178d8:	mov	r3, r5
   178dc:	b	178e8 <myencoding_detect_utf_8@@Base+0x100>
   178e0:	add	r3, r3, #1
   178e4:	mov	r4, lr
   178e8:	ldr	r5, [r4]
   178ec:	add	r5, r5, #1
   178f0:	str	r5, [r4]
   178f4:	cmp	r3, r2
   178f8:	bcc	17810 <myencoding_detect_utf_8@@Base+0x28>
   178fc:	pop	{r4, r5, fp, pc}

00017900 <myencoding_detect_utf_16@@Base>:
   17900:	mov	ip, #0
   17904:	str	ip, [r0]
   17908:	str	ip, [r0, #4]
   1790c:	str	ip, [r0, #8]
   17910:	cmp	r2, #0
   17914:	bxeq	lr
   17918:	ldrb	r3, [r1, ip]
   1791c:	cmp	r3, #0
   17920:	bne	17978 <myencoding_detect_utf_16@@Base+0x78>
   17924:	tst	ip, #1
   17928:	bne	17958 <myencoding_detect_utf_16@@Base+0x58>
   1792c:	add	ip, ip, #1
   17930:	ldrb	r3, [r1, ip]
   17934:	sub	r3, r3, #32
   17938:	uxtb	r3, r3
   1793c:	cmp	r3, #94	; 0x5e
   17940:	ldrls	r3, [r0, #8]
   17944:	addls	r3, r3, #1
   17948:	strls	r3, [r0, #8]
   1794c:	cmp	ip, r2
   17950:	bcc	17918 <myencoding_detect_utf_16@@Base+0x18>
   17954:	b	17984 <myencoding_detect_utf_16@@Base+0x84>
   17958:	add	r3, r1, ip
   1795c:	ldrb	r3, [r3, #-1]
   17960:	sub	r3, r3, #32
   17964:	uxtb	r3, r3
   17968:	cmp	r3, #94	; 0x5e
   1796c:	ldrls	r3, [r0, #4]
   17970:	addls	r3, r3, #1
   17974:	strls	r3, [r0, #4]
   17978:	add	ip, ip, #1
   1797c:	cmp	ip, r2
   17980:	bcc	17918 <myencoding_detect_utf_16@@Base+0x18>
   17984:	bx	lr

00017988 <myencoding_detect_bom@@Base>:
   17988:	cmp	r1, #3
   1798c:	bcc	179b8 <myencoding_detect_bom@@Base+0x30>
   17990:	ldrb	r1, [r0]
   17994:	cmp	r1, #239	; 0xef
   17998:	bne	179c8 <myencoding_detect_bom@@Base+0x40>
   1799c:	ldrb	r1, [r0, #1]
   179a0:	cmp	r1, #187	; 0xbb
   179a4:	ldrbeq	r1, [r0, #2]
   179a8:	cmpeq	r1, #191	; 0xbf
   179ac:	bne	179c4 <myencoding_detect_bom@@Base+0x3c>
   179b0:	mov	r0, #0
   179b4:	b	179fc <myencoding_detect_bom@@Base+0x74>
   179b8:	mov	r3, #0
   179bc:	cmp	r1, #2
   179c0:	bne	17a04 <myencoding_detect_bom@@Base+0x7c>
   179c4:	ldrb	r1, [r0]
   179c8:	mov	r3, #0
   179cc:	cmp	r1, #255	; 0xff
   179d0:	beq	179ec <myencoding_detect_bom@@Base+0x64>
   179d4:	cmp	r1, #254	; 0xfe
   179d8:	ldrbeq	r0, [r0, #1]
   179dc:	cmpeq	r0, #255	; 0xff
   179e0:	bne	17a04 <myencoding_detect_bom@@Base+0x7c>
   179e4:	mov	r0, #5
   179e8:	b	179fc <myencoding_detect_bom@@Base+0x74>
   179ec:	ldrb	r0, [r0, #1]
   179f0:	cmp	r0, #254	; 0xfe
   179f4:	bne	17a04 <myencoding_detect_bom@@Base+0x7c>
   179f8:	mov	r0, #4
   179fc:	str	r0, [r2]
   17a00:	mov	r3, #1
   17a04:	mov	r0, r3
   17a08:	bx	lr

00017a0c <myencoding_detect_and_cut_bom@@Base>:
   17a0c:	push	{r4, r5, r6, r7, fp, lr}
   17a10:	add	fp, sp, #16
   17a14:	mov	r5, r3
   17a18:	mov	r7, r2
   17a1c:	mov	r4, r1
   17a20:	mov	r6, r0
   17a24:	bl	11690 <myencoding_detect_bom@plt>
   17a28:	mov	r1, r0
   17a2c:	mov	r0, #0
   17a30:	cmp	r1, #0
   17a34:	popeq	{r4, r5, r6, r7, fp, pc}
   17a38:	ldr	r0, [fp, #8]
   17a3c:	ldr	r1, [r7]
   17a40:	mov	r2, #2
   17a44:	cmp	r1, #0
   17a48:	movweq	r2, #3
   17a4c:	add	r1, r6, r2
   17a50:	str	r1, [r5]
   17a54:	mvn	r1, #1
   17a58:	mvneq	r1, #2
   17a5c:	add	r1, r1, r4
   17a60:	str	r1, [r0]
   17a64:	mov	r0, #1
   17a68:	pop	{r4, r5, r6, r7, fp, pc}

00017a6c <myencoding_detect_unicode@@Base>:
   17a6c:	push	{r4, r5, r6, r7, fp, lr}
   17a70:	add	fp, sp, #16
   17a74:	sub	sp, sp, #16
   17a78:	mov	r4, r2
   17a7c:	mov	r5, r1
   17a80:	mov	r6, r0
   17a84:	mov	r0, #0
   17a88:	str	r0, [r2]
   17a8c:	add	r0, sp, #4
   17a90:	mov	r1, r6
   17a94:	mov	r2, r5
   17a98:	bl	1136c <myencoding_detect_utf_16@plt>
   17a9c:	ldr	r0, [sp, #12]
   17aa0:	cmp	r0, #0
   17aa4:	beq	17ac4 <myencoding_detect_unicode@@Base+0x58>
   17aa8:	cmp	r0, #3
   17aac:	bcc	17ad4 <myencoding_detect_unicode@@Base+0x68>
   17ab0:	ldr	r0, [sp, #8]
   17ab4:	cmp	r0, #0
   17ab8:	bne	17ad4 <myencoding_detect_unicode@@Base+0x68>
   17abc:	mov	r0, #5
   17ac0:	b	17b04 <myencoding_detect_unicode@@Base+0x98>
   17ac4:	mov	r0, #4
   17ac8:	ldr	r1, [sp, #8]
   17acc:	cmp	r1, #2
   17ad0:	bhi	17b04 <myencoding_detect_unicode@@Base+0x98>
   17ad4:	add	r7, sp, #4
   17ad8:	mov	r0, r7
   17adc:	mov	r1, r6
   17ae0:	mov	r2, r5
   17ae4:	bl	123b0 <myencoding_detect_utf_8@plt>
   17ae8:	mov	r0, r7
   17aec:	mov	r1, #10
   17af0:	bl	11e64 <myencoding_detect_unicode_has_end@plt>
   17af4:	mov	r1, r0
   17af8:	mov	r0, #0
   17afc:	cmp	r1, #0
   17b00:	beq	17b0c <myencoding_detect_unicode@@Base+0xa0>
   17b04:	str	r0, [r4]
   17b08:	mov	r0, #1
   17b0c:	sub	sp, fp, #16
   17b10:	pop	{r4, r5, r6, r7, fp, pc}

00017b14 <myencoding_detect_russian@@Base>:
   17b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b18:	add	fp, sp, #28
   17b1c:	sub	sp, sp, #20
   17b20:	mov	r4, r2
   17b24:	mov	r7, r1
   17b28:	mov	r5, r0
   17b2c:	mov	r0, #0
   17b30:	str	r0, [r2]
   17b34:	movw	r9, #34464	; 0x86a0
   17b38:	movt	r9, #1
   17b3c:	mov	r0, #1000	; 0x3e8
   17b40:	stm	sp, {r0, r9}
   17b44:	add	r6, sp, #8
   17b48:	ldr	r3, [pc, #416]	; 17cf0 <myencoding_detect_russian@@Base+0x1dc>
   17b4c:	add	r3, pc, r3
   17b50:	mov	r0, r6
   17b54:	mov	r1, r5
   17b58:	mov	r2, r7
   17b5c:	bl	11b40 <myencoding_detect_by_trigram@plt>
   17b60:	mov	r0, r6
   17b64:	mov	r1, #50	; 0x32
   17b68:	mov	r2, r9
   17b6c:	bl	12110 <myencoding_detect_russian_has_end@plt>
   17b70:	mov	r8, #1
   17b74:	mov	r1, #32
   17b78:	cmp	r0, #0
   17b7c:	bne	17ccc <myencoding_detect_russian@@Base+0x1b8>
   17b80:	ldr	sl, [sp, #12]
   17b84:	cmp	sl, #0
   17b88:	movne	r0, #32
   17b8c:	strne	r0, [r4]
   17b90:	mov	r0, #1000	; 0x3e8
   17b94:	stm	sp, {r0, r9}
   17b98:	add	r6, sp, #8
   17b9c:	ldr	r3, [pc, #336]	; 17cf4 <myencoding_detect_russian@@Base+0x1e0>
   17ba0:	add	r3, pc, r3
   17ba4:	mov	r0, r6
   17ba8:	mov	r1, r5
   17bac:	mov	r2, r7
   17bb0:	bl	11b40 <myencoding_detect_by_trigram@plt>
   17bb4:	mov	r0, r6
   17bb8:	mov	r1, #50	; 0x32
   17bbc:	mov	r2, r9
   17bc0:	bl	12110 <myencoding_detect_russian_has_end@plt>
   17bc4:	mov	r1, #27
   17bc8:	cmp	r0, #0
   17bcc:	bne	17ccc <myencoding_detect_russian@@Base+0x1b8>
   17bd0:	ldr	r0, [sp, #12]
   17bd4:	cmp	sl, r0
   17bd8:	movcc	r1, #27
   17bdc:	strcc	r1, [r4]
   17be0:	movcc	sl, r0
   17be4:	mov	r0, #1000	; 0x3e8
   17be8:	stm	sp, {r0, r9}
   17bec:	add	r6, sp, #8
   17bf0:	ldr	r3, [pc, #256]	; 17cf8 <myencoding_detect_russian@@Base+0x1e4>
   17bf4:	add	r3, pc, r3
   17bf8:	mov	r0, r6
   17bfc:	mov	r1, r5
   17c00:	mov	r2, r7
   17c04:	bl	11b40 <myencoding_detect_by_trigram@plt>
   17c08:	mov	r0, r6
   17c0c:	mov	r1, #50	; 0x32
   17c10:	mov	r2, r9
   17c14:	bl	12110 <myencoding_detect_russian_has_end@plt>
   17c18:	mov	r1, #22
   17c1c:	cmp	r0, #0
   17c20:	bne	17ccc <myencoding_detect_russian@@Base+0x1b8>
   17c24:	ldr	r0, [sp, #12]
   17c28:	cmp	sl, r0
   17c2c:	movcc	r1, #22
   17c30:	strcc	r1, [r4]
   17c34:	movcc	sl, r0
   17c38:	mov	r0, #1000	; 0x3e8
   17c3c:	stm	sp, {r0, r9}
   17c40:	add	r6, sp, #8
   17c44:	ldr	r3, [pc, #176]	; 17cfc <myencoding_detect_russian@@Base+0x1e8>
   17c48:	add	r3, pc, r3
   17c4c:	mov	r0, r6
   17c50:	mov	r1, r5
   17c54:	mov	r2, r7
   17c58:	bl	11b40 <myencoding_detect_by_trigram@plt>
   17c5c:	mov	r0, r6
   17c60:	mov	r1, #50	; 0x32
   17c64:	mov	r2, r9
   17c68:	bl	12110 <myencoding_detect_russian_has_end@plt>
   17c6c:	mov	r1, #41	; 0x29
   17c70:	cmp	r0, #0
   17c74:	bne	17ccc <myencoding_detect_russian@@Base+0x1b8>
   17c78:	ldr	r0, [sp, #12]
   17c7c:	cmp	sl, r0
   17c80:	movcc	r1, #41	; 0x29
   17c84:	strcc	r1, [r4]
   17c88:	movcc	sl, r0
   17c8c:	mov	r0, #1000	; 0x3e8
   17c90:	stm	sp, {r0, r9}
   17c94:	add	r6, sp, #8
   17c98:	ldr	r3, [pc, #96]	; 17d00 <myencoding_detect_russian@@Base+0x1ec>
   17c9c:	add	r3, pc, r3
   17ca0:	mov	r0, r6
   17ca4:	mov	r1, r5
   17ca8:	mov	r2, r7
   17cac:	bl	11b40 <myencoding_detect_by_trigram@plt>
   17cb0:	mov	r0, r6
   17cb4:	mov	r1, #50	; 0x32
   17cb8:	mov	r2, r9
   17cbc:	bl	12110 <myencoding_detect_russian_has_end@plt>
   17cc0:	mov	r1, #12
   17cc4:	cmp	r0, #0
   17cc8:	beq	17cdc <myencoding_detect_russian@@Base+0x1c8>
   17ccc:	str	r1, [r4]
   17cd0:	mov	r0, r8
   17cd4:	sub	sp, fp, #28
   17cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cdc:	mov	r8, #0
   17ce0:	ldr	r0, [sp, #12]
   17ce4:	cmp	sl, r0
   17ce8:	strcc	r1, [r4]
   17cec:	b	17cd0 <myencoding_detect_russian@@Base+0x1bc>
   17cf0:	ldrdeq	r7, [r1], -r4
   17cf4:	strdeq	r9, [r1], -r0
   17cf8:	andeq	fp, r1, ip, lsl #22
   17cfc:	andeq	sp, r1, r8, lsr #20
   17d00:	andeq	pc, r1, r4, asr #18

00017d04 <myencoding_detect@@Base>:
   17d04:	push	{r4, r5, r6, sl, fp, lr}
   17d08:	add	fp, sp, #16
   17d0c:	mov	r4, r2
   17d10:	mov	r5, r1
   17d14:	mov	r6, r0
   17d18:	mov	r0, #0
   17d1c:	str	r0, [r2]
   17d20:	mov	r0, r6
   17d24:	bl	11114 <myencoding_detect_unicode@plt>
   17d28:	cmp	r0, #0
   17d2c:	movne	r0, #1
   17d30:	popne	{r4, r5, r6, sl, fp, pc}
   17d34:	mov	r0, r6
   17d38:	mov	r1, r5
   17d3c:	mov	r2, r4
   17d40:	pop	{r4, r5, r6, sl, fp, lr}
   17d44:	b	17b14 <myencoding_detect_russian@@Base>

00017d48 <myencoding_name_entry_by_name@@Base>:
   17d48:	push	{r4, r5, r6, r7, fp, lr}
   17d4c:	add	fp, sp, #16
   17d50:	mov	r4, r1
   17d54:	mov	r5, r0
   17d58:	ldrb	r1, [r0], r1
   17d5c:	ldrb	r0, [r0, #-1]
   17d60:	ldr	r2, [pc, #168]	; 17e10 <myencoding_name_entry_by_name@@Base+0xc8>
   17d64:	add	r2, pc, r2
   17d68:	ldrb	r0, [r2, r0]
   17d6c:	ldrb	r1, [r2, r1]
   17d70:	mul	r1, r1, r4
   17d74:	mul	r0, r1, r0
   17d78:	movw	r1, #11575	; 0x2d37
   17d7c:	movt	r1, #14546	; 0x38d2
   17d80:	umull	r1, r2, r0, r1
   17d84:	sub	r1, r0, r2
   17d88:	add	r1, r2, r1, lsr #1
   17d8c:	lsr	r1, r1, #8
   17d90:	movw	r2, #419	; 0x1a3
   17d94:	mls	r0, r1, r2, r0
   17d98:	add	r1, r0, #1
   17d9c:	rsb	r0, r1, r1, lsl #3
   17da0:	ldr	r7, [pc, #108]	; 17e14 <myencoding_name_entry_by_name@@Base+0xcc>
   17da4:	add	r7, pc, r7
   17da8:	b	17db0 <myencoding_name_entry_by_name@@Base+0x68>
   17dac:	rsb	r0, r1, r1, lsl #3
   17db0:	add	r0, r7, r0, lsl #2
   17db4:	ldr	r0, [r0, #8]
   17db8:	cmp	r0, #0
   17dbc:	beq	17e04 <myencoding_name_entry_by_name@@Base+0xbc>
   17dc0:	rsb	r1, r1, r1, lsl #3
   17dc4:	add	r6, r7, r1, lsl #2
   17dc8:	ldr	r1, [r6, #12]
   17dcc:	cmp	r1, r4
   17dd0:	bne	17df8 <myencoding_name_entry_by_name@@Base+0xb0>
   17dd4:	mov	r1, r5
   17dd8:	mov	r2, r4
   17ddc:	bl	11714 <mycore_strncasecmp@plt>
   17de0:	cmp	r0, #0
   17de4:	beq	17e08 <myencoding_name_entry_by_name@@Base+0xc0>
   17de8:	ldr	r1, [r6, #20]
   17dec:	cmp	r1, #0
   17df0:	bne	17dac <myencoding_name_entry_by_name@@Base+0x64>
   17df4:	b	17e04 <myencoding_name_entry_by_name@@Base+0xbc>
   17df8:	bhi	17e04 <myencoding_name_entry_by_name@@Base+0xbc>
   17dfc:	ldr	r1, [r6, #20]
   17e00:	b	17dac <myencoding_name_entry_by_name@@Base+0x64>
   17e04:	mov	r6, #0
   17e08:	mov	r0, r6
   17e0c:	pop	{r4, r5, r6, r7, fp, pc}
   17e10:	andeq	r1, r2, ip, ror #15
   17e14:	andeq	r5, pc, r8, lsr lr	; <UNPREDICTABLE>

00017e18 <myencoding_by_name@@Base>:
   17e18:	push	{r4, sl, fp, lr}
   17e1c:	add	fp, sp, #8
   17e20:	mov	r4, r2
   17e24:	bl	113fc <myencoding_name_entry_by_name@plt>
   17e28:	cmp	r0, #0
   17e2c:	moveq	r0, #0
   17e30:	popeq	{r4, sl, fp, pc}
   17e34:	mov	r1, r0
   17e38:	mov	r0, #1
   17e3c:	cmp	r4, #0
   17e40:	ldrne	r1, [r1, #16]
   17e44:	strne	r1, [r4]
   17e48:	pop	{r4, sl, fp, pc}

00017e4c <myencoding_name_by_id@@Base>:
   17e4c:	cmp	r0, #42	; 0x2a
   17e50:	bcc	17e68 <myencoding_name_by_id@@Base+0x1c>
   17e54:	mov	r0, #0
   17e58:	cmp	r1, #0
   17e5c:	strne	r0, [r1]
   17e60:	bxne	lr
   17e64:	bx	lr
   17e68:	cmp	r1, #0
   17e6c:	ldrne	r2, [pc, #28]	; 17e90 <myencoding_name_by_id@@Base+0x44>
   17e70:	addne	r2, pc, r2
   17e74:	addne	r2, r2, r0, lsl #3
   17e78:	ldrne	r2, [r2, #4]
   17e7c:	strne	r2, [r1]
   17e80:	ldr	r1, [pc, #12]	; 17e94 <myencoding_name_by_id@@Base+0x48>
   17e84:	add	r1, pc, r1
   17e88:	ldr	r0, [r1, r0, lsl #3]
   17e8c:	bx	lr
   17e90:	andeq	r9, pc, r4, ror r3	; <UNPREDICTABLE>
   17e94:	andeq	r9, pc, r0, ror #6

00017e98 <myencoding_extracting_character_encoding_from_charset@@Base>:
   17e98:	push	{fp, lr}
   17e9c:	mov	fp, sp
   17ea0:	sub	sp, sp, #8
   17ea4:	mov	r3, #0
   17ea8:	str	r3, [sp]
   17eac:	mov	r3, #0
   17eb0:	bl	11c54 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17eb4:	mov	sp, fp
   17eb8:	pop	{fp, pc}

00017ebc <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   17ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ec0:	add	fp, sp, #28
   17ec4:	sub	sp, sp, #12
   17ec8:	mov	r7, r1
   17ecc:	mov	r6, r0
   17ed0:	mov	r0, #2
   17ed4:	str	r2, [sp, #4]
   17ed8:	str	r0, [r2]
   17edc:	ldr	r1, [fp, #8]
   17ee0:	cmp	r3, #0
   17ee4:	movne	r0, #0
   17ee8:	strne	r0, [r3]
   17eec:	str	r3, [sp]
   17ef0:	cmp	r1, #0
   17ef4:	movne	r0, #0
   17ef8:	strne	r0, [r1]
   17efc:	str	r1, [sp, #8]
   17f00:	cmp	r7, #8
   17f04:	bcc	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   17f08:	mov	sl, #0
   17f0c:	mov	r8, #7
   17f10:	ldr	r4, [pc, #516]	; 1811c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x260>
   17f14:	add	r4, pc, r4
   17f18:	mov	r9, #1
   17f1c:	movw	r5, #27
   17f20:	movt	r5, #128	; 0x80
   17f24:	add	r1, r6, sl
   17f28:	mov	r0, r4
   17f2c:	bl	111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17f30:	cmp	r0, #0
   17f34:	bne	17f40 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   17f38:	b	17f70 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb4>
   17f3c:	add	r8, r8, #1
   17f40:	cmp	r8, r7
   17f44:	bcs	17f60 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xa4>
   17f48:	ldrb	r0, [r6, r8]
   17f4c:	sub	r0, r0, #9
   17f50:	cmp	r0, #23
   17f54:	bhi	17f60 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xa4>
   17f58:	tst	r5, r9, lsl r0
   17f5c:	bne	17f3c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   17f60:	ldrb	r0, [r6, r8]
   17f64:	cmp	r0, #61	; 0x3d
   17f68:	beq	17f84 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   17f6c:	mov	sl, r8
   17f70:	add	r8, sl, #8
   17f74:	add	sl, sl, #1
   17f78:	cmp	r8, r7
   17f7c:	bcc	17f24 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   17f80:	b	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   17f84:	add	r2, r8, #1
   17f88:	cmp	r2, r7
   17f8c:	bcs	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   17f90:	mov	r0, #1
   17f94:	ldrb	r1, [r6, r2]
   17f98:	sub	r1, r1, #9
   17f9c:	cmp	r1, #23
   17fa0:	bhi	17fc4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x108>
   17fa4:	tst	r5, r0, lsl r1
   17fa8:	beq	17fc4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x108>
   17fac:	add	r2, r2, #1
   17fb0:	cmp	r2, r7
   17fb4:	bcc	17f94 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd8>
   17fb8:	mov	r0, #0
   17fbc:	sub	sp, fp, #28
   17fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fc4:	ldrb	r0, [r6, r2]
   17fc8:	cmp	r0, #34	; 0x22
   17fcc:	beq	18008 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x14c>
   17fd0:	cmp	r0, #39	; 0x27
   17fd4:	bne	18038 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x17c>
   17fd8:	add	r0, r2, #1
   17fdc:	cmp	r0, r7
   17fe0:	bcs	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   17fe4:	mov	r1, #0
   17fe8:	ldrb	r3, [r6, r0]
   17fec:	cmp	r3, #39	; 0x27
   17ff0:	beq	1806c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b0>
   17ff4:	add	r1, r1, #1
   17ff8:	add	r0, r0, #1
   17ffc:	cmp	r0, r7
   18000:	bcc	17fe8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x12c>
   18004:	b	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   18008:	add	r0, r2, #1
   1800c:	cmp	r0, r7
   18010:	bcs	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   18014:	mov	r1, #0
   18018:	ldrb	r3, [r6, r0]
   1801c:	cmp	r3, #34	; 0x22
   18020:	beq	1806c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b0>
   18024:	add	r1, r1, #1
   18028:	add	r0, r0, #1
   1802c:	cmp	r0, r7
   18030:	bcc	18018 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x15c>
   18034:	b	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   18038:	cmp	r2, r7
   1803c:	bcs	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   18040:	mov	r0, #1
   18044:	ldrb	r1, [r6, r2]
   18048:	sub	r1, r1, #9
   1804c:	cmp	r1, #23
   18050:	bhi	18098 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1dc>
   18054:	tst	r5, r0, lsl r1
   18058:	beq	18098 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1dc>
   1805c:	add	r2, r2, #1
   18060:	cmp	r2, r7
   18064:	bcc	18044 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x188>
   18068:	b	17fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   1806c:	ldr	r3, [sp]
   18070:	cmp	r3, #0
   18074:	addne	r0, r6, r2
   18078:	addne	r0, r0, #1
   1807c:	strne	r0, [r3]
   18080:	ldr	r0, [sp, #8]
   18084:	cmp	r0, #0
   18088:	strne	r1, [r0]
   1808c:	add	r0, r6, r2
   18090:	add	r0, r0, #1
   18094:	b	1810c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x250>
   18098:	add	r0, r6, r2
   1809c:	cmp	r2, r7
   180a0:	mov	r1, r2
   180a4:	ldr	r5, [sp, #8]
   180a8:	bcs	180d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x21c>
   180ac:	mov	r1, #0
   180b0:	add	r3, r6, r1
   180b4:	ldrb	r3, [r3, r2]
   180b8:	cmp	r3, #59	; 0x3b
   180bc:	beq	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x23c>
   180c0:	add	r3, r2, r1
   180c4:	add	r3, r3, #1
   180c8:	add	r1, r1, #1
   180cc:	cmp	r3, r7
   180d0:	bcc	180b0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f4>
   180d4:	add	r1, r2, r1
   180d8:	ldr	r3, [sp]
   180dc:	cmp	r3, #0
   180e0:	strne	r0, [r3]
   180e4:	cmp	r5, #0
   180e8:	subne	r3, r1, r2
   180ec:	strne	r3, [r5]
   180f0:	sub	r1, r1, r2
   180f4:	b	1810c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x250>
   180f8:	ldr	r2, [sp]
   180fc:	cmp	r2, #0
   18100:	strne	r0, [r2]
   18104:	cmp	r5, #0
   18108:	strne	r1, [r5]
   1810c:	ldr	r2, [sp, #4]
   18110:	sub	sp, fp, #28
   18114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18118:	b	17e18 <myencoding_by_name@@Base>
   1811c:	andeq	r1, r2, ip, lsr r8

00018120 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   18120:	push	{r4, sl, fp, lr}
   18124:	add	fp, sp, #8
   18128:	mov	ip, r0
   1812c:	ldr	r0, [r3]
   18130:	ldr	lr, [r1]
   18134:	sub	r0, lr, r0
   18138:	str	r0, [r3, #4]
   1813c:	mov	r0, #0
   18140:	cmp	lr, r2
   18144:	bcc	1815c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x3c>
   18148:	str	lr, [r1]
   1814c:	pop	{r4, sl, fp, pc}
   18150:	add	lr, lr, #1
   18154:	cmp	lr, r2
   18158:	bcs	18148 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x28>
   1815c:	ldrb	r3, [ip, lr]
   18160:	sub	r3, r3, #9
   18164:	cmp	r3, #38	; 0x26
   18168:	bhi	18214 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xf4>
   1816c:	add	r4, pc, #4
   18170:	ldr	r3, [r4, r3, lsl #2]
   18174:	add	pc, r4, r3
   18178:			; <UNDEFINED> instruction: 0xffffffd8
   1817c:			; <UNDEFINED> instruction: 0xffffffd8
   18180:	muleq	r0, ip, r0
   18184:			; <UNDEFINED> instruction: 0xffffffd8
   18188:			; <UNDEFINED> instruction: 0xffffffd8
   1818c:	muleq	r0, ip, r0
   18190:	muleq	r0, ip, r0
   18194:	muleq	r0, ip, r0
   18198:	muleq	r0, ip, r0
   1819c:	muleq	r0, ip, r0
   181a0:	muleq	r0, ip, r0
   181a4:	muleq	r0, ip, r0
   181a8:	muleq	r0, ip, r0
   181ac:	muleq	r0, ip, r0
   181b0:	muleq	r0, ip, r0
   181b4:	muleq	r0, ip, r0
   181b8:	muleq	r0, ip, r0
   181bc:	muleq	r0, ip, r0
   181c0:	muleq	r0, ip, r0
   181c4:	muleq	r0, ip, r0
   181c8:	muleq	r0, ip, r0
   181cc:	muleq	r0, ip, r0
   181d0:	muleq	r0, ip, r0
   181d4:			; <UNDEFINED> instruction: 0xffffffd8
   181d8:	muleq	r0, ip, r0
   181dc:	muleq	r0, ip, r0
   181e0:	muleq	r0, ip, r0
   181e4:	muleq	r0, ip, r0
   181e8:	muleq	r0, ip, r0
   181ec:	muleq	r0, ip, r0
   181f0:	muleq	r0, ip, r0
   181f4:	muleq	r0, ip, r0
   181f8:	muleq	r0, ip, r0
   181fc:	muleq	r0, ip, r0
   18200:	muleq	r0, ip, r0
   18204:	muleq	r0, ip, r0
   18208:	muleq	r0, ip, r0
   1820c:	muleq	r0, ip, r0
   18210:			; <UNDEFINED> instruction: 0xffffffd8
   18214:	ldrb	r0, [ip, lr]
   18218:	cmp	r0, #61	; 0x3d
   1821c:	addeq	lr, lr, #1
   18220:	sub	r0, r0, #61	; 0x3d
   18224:	clz	r0, r0
   18228:	lsr	r0, r0, #5
   1822c:	str	lr, [r1]
   18230:	pop	{r4, sl, fp, pc}

00018234 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   18234:	push	{r4, r5, r6, r7, fp, lr}
   18238:	add	fp, sp, #16
   1823c:	mov	ip, r1
   18240:	ldr	r6, [fp, #8]
   18244:	cmp	r1, r2
   18248:	bcs	18290 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x5c>
   1824c:	add	r7, ip, #2
   18250:	mov	r4, #1
   18254:	movw	r5, #27
   18258:	movt	r5, #128	; 0x80
   1825c:	add	lr, r0, r7
   18260:	ldrb	r1, [lr, #-2]
   18264:	sub	r1, r1, #9
   18268:	cmp	r1, #23
   1826c:	bhi	182a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x6c>
   18270:	tst	r5, r4, lsl r1
   18274:	beq	182a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x6c>
   18278:	add	r1, r7, #1
   1827c:	sub	r7, r7, #1
   18280:	cmp	r7, r2
   18284:	mov	r7, r1
   18288:	bcc	1825c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x28>
   1828c:	sub	ip, r1, #2
   18290:	mov	r0, #1
   18294:	strb	r0, [r6]
   18298:	mov	r0, ip
   1829c:	pop	{r4, r5, r6, r7, fp, pc}
   182a0:	ldrb	r0, [lr, #-2]
   182a4:	cmp	r0, #62	; 0x3e
   182a8:	beq	182f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc0>
   182ac:	cmp	r0, #39	; 0x27
   182b0:	beq	18308 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xd4>
   182b4:	cmp	r0, #34	; 0x22
   182b8:	bne	18348 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x114>
   182bc:	sub	ip, r7, #1
   182c0:	str	ip, [r3, #8]
   182c4:	cmp	ip, r2
   182c8:	bcs	18470 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x23c>
   182cc:	mov	r0, #0
   182d0:	add	r1, lr, r0
   182d4:	ldrb	r1, [r1, #-1]
   182d8:	cmp	r1, #34	; 0x22
   182dc:	beq	18484 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x250>
   182e0:	add	r1, r7, r0
   182e4:	add	r0, r0, #1
   182e8:	cmp	r1, r2
   182ec:	bcc	182d0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x9c>
   182f0:	b	1833c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x108>
   182f4:	mov	r0, #1
   182f8:	strb	r0, [r6]
   182fc:	sub	ip, r7, #1
   18300:	mov	r0, ip
   18304:	pop	{r4, r5, r6, r7, fp, pc}
   18308:	sub	ip, r7, #1
   1830c:	str	ip, [r3, #8]
   18310:	cmp	ip, r2
   18314:	bcs	18470 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x23c>
   18318:	mov	r0, #0
   1831c:	add	r1, lr, r0
   18320:	ldrb	r1, [r1, #-1]
   18324:	cmp	r1, #39	; 0x27
   18328:	beq	18484 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x250>
   1832c:	add	r1, r7, r0
   18330:	add	r0, r0, #1
   18334:	cmp	r1, r2
   18338:	bcc	1831c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   1833c:	add	r0, r7, r0
   18340:	sub	ip, r0, #1
   18344:	b	18470 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x23c>
   18348:	sub	ip, r7, #2
   1834c:	str	ip, [r3, #8]
   18350:	cmp	ip, r2
   18354:	bcs	18470 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x23c>
   18358:	mov	r0, #0
   1835c:	add	r1, lr, r0
   18360:	ldrb	r1, [r1, #-2]
   18364:	sub	r1, r1, #9
   18368:	cmp	r1, #53	; 0x35
   1836c:	bhi	18454 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x220>
   18370:	add	r6, pc, #4
   18374:	ldr	r1, [r6, r1, lsl #2]
   18378:	add	pc, r6, r1
   1837c:	andeq	r0, r0, r8, lsl r1
   18380:	andeq	r0, r0, r8, lsl r1
   18384:	ldrdeq	r0, [r0], -r8
   18388:	andeq	r0, r0, r8, lsl r1
   1838c:	andeq	r0, r0, r8, lsl r1
   18390:	ldrdeq	r0, [r0], -r8
   18394:	ldrdeq	r0, [r0], -r8
   18398:	ldrdeq	r0, [r0], -r8
   1839c:	ldrdeq	r0, [r0], -r8
   183a0:	ldrdeq	r0, [r0], -r8
   183a4:	ldrdeq	r0, [r0], -r8
   183a8:	ldrdeq	r0, [r0], -r8
   183ac:	ldrdeq	r0, [r0], -r8
   183b0:	ldrdeq	r0, [r0], -r8
   183b4:	ldrdeq	r0, [r0], -r8
   183b8:	ldrdeq	r0, [r0], -r8
   183bc:	ldrdeq	r0, [r0], -r8
   183c0:	ldrdeq	r0, [r0], -r8
   183c4:	ldrdeq	r0, [r0], -r8
   183c8:	ldrdeq	r0, [r0], -r8
   183cc:	ldrdeq	r0, [r0], -r8
   183d0:	ldrdeq	r0, [r0], -r8
   183d4:	ldrdeq	r0, [r0], -r8
   183d8:	andeq	r0, r0, r8, lsl r1
   183dc:	ldrdeq	r0, [r0], -r8
   183e0:	ldrdeq	r0, [r0], -r8
   183e4:	ldrdeq	r0, [r0], -r8
   183e8:	ldrdeq	r0, [r0], -r8
   183ec:	ldrdeq	r0, [r0], -r8
   183f0:	ldrdeq	r0, [r0], -r8
   183f4:	ldrdeq	r0, [r0], -r8
   183f8:	ldrdeq	r0, [r0], -r8
   183fc:	ldrdeq	r0, [r0], -r8
   18400:	ldrdeq	r0, [r0], -r8
   18404:	ldrdeq	r0, [r0], -r8
   18408:	ldrdeq	r0, [r0], -r8
   1840c:	ldrdeq	r0, [r0], -r8
   18410:	ldrdeq	r0, [r0], -r8
   18414:	ldrdeq	r0, [r0], -r8
   18418:	ldrdeq	r0, [r0], -r8
   1841c:	ldrdeq	r0, [r0], -r8
   18420:	ldrdeq	r0, [r0], -r8
   18424:	ldrdeq	r0, [r0], -r8
   18428:	ldrdeq	r0, [r0], -r8
   1842c:	ldrdeq	r0, [r0], -r8
   18430:	ldrdeq	r0, [r0], -r8
   18434:	ldrdeq	r0, [r0], -r8
   18438:	ldrdeq	r0, [r0], -r8
   1843c:	ldrdeq	r0, [r0], -r8
   18440:	ldrdeq	r0, [r0], -r8
   18444:	ldrdeq	r0, [r0], -r8
   18448:	ldrdeq	r0, [r0], -r8
   1844c:	ldrdeq	r0, [r0], -r8
   18450:	andeq	r0, r0, r8, lsl r1
   18454:	add	r1, r7, r0
   18458:	sub	r1, r1, #1
   1845c:	add	r0, r0, #1
   18460:	cmp	r1, r2
   18464:	bcc	1835c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x128>
   18468:	add	r0, r7, r0
   1846c:	sub	ip, r0, #2
   18470:	ldr	r0, [r3, #8]
   18474:	sub	r0, ip, r0
   18478:	str	r0, [r3, #12]
   1847c:	mov	r0, ip
   18480:	pop	{r4, r5, r6, r7, fp, pc}
   18484:	str	r0, [r3, #12]
   18488:	add	ip, r7, r0
   1848c:	mov	r0, ip
   18490:	pop	{r4, r5, r6, r7, fp, pc}
   18494:	str	r0, [r3, #12]
   18498:	add	r0, r7, r0
   1849c:	sub	ip, r0, #1
   184a0:	mov	r0, ip
   184a4:	pop	{r4, r5, r6, r7, fp, pc}

000184a8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   184a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   184ac:	add	fp, sp, #24
   184b0:	sub	sp, sp, #8
   184b4:	mov	r5, r2
   184b8:	mov	r6, r0
   184bc:	vmov.i32	q8, #0	; 0x00000000
   184c0:	str	r1, [sp, #4]
   184c4:	mov	r0, r3
   184c8:	vst1.32	{d16-d17}, [r0]!
   184cc:	mov	r2, #0
   184d0:	str	r2, [r0]
   184d4:	ldr	r8, [fp, #8]
   184d8:	cmp	r1, r5
   184dc:	bcs	185b8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x110>
   184e0:	mov	r4, r3
   184e4:	ldr	r0, [sp, #4]
   184e8:	ldrb	r2, [r6, r1]
   184ec:	sub	r2, r2, #9
   184f0:	cmp	r2, #38	; 0x26
   184f4:	bhi	185cc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x124>
   184f8:	add	r3, pc, #4
   184fc:	ldr	r2, [r3, r2, lsl #2]
   18500:	add	pc, r3, r2
   18504:	muleq	r0, ip, r0
   18508:	muleq	r0, ip, r0
   1850c:	andeq	r0, r0, r8, asr #1
   18510:	muleq	r0, ip, r0
   18514:	muleq	r0, ip, r0
   18518:	andeq	r0, r0, r8, asr #1
   1851c:	andeq	r0, r0, r8, asr #1
   18520:	andeq	r0, r0, r8, asr #1
   18524:	andeq	r0, r0, r8, asr #1
   18528:	andeq	r0, r0, r8, asr #1
   1852c:	andeq	r0, r0, r8, asr #1
   18530:	andeq	r0, r0, r8, asr #1
   18534:	andeq	r0, r0, r8, asr #1
   18538:	andeq	r0, r0, r8, asr #1
   1853c:	andeq	r0, r0, r8, asr #1
   18540:	andeq	r0, r0, r8, asr #1
   18544:	andeq	r0, r0, r8, asr #1
   18548:	andeq	r0, r0, r8, asr #1
   1854c:	andeq	r0, r0, r8, asr #1
   18550:	andeq	r0, r0, r8, asr #1
   18554:	andeq	r0, r0, r8, asr #1
   18558:	andeq	r0, r0, r8, asr #1
   1855c:	andeq	r0, r0, r8, asr #1
   18560:	muleq	r0, ip, r0
   18564:	andeq	r0, r0, r8, asr #1
   18568:	andeq	r0, r0, r8, asr #1
   1856c:	andeq	r0, r0, r8, asr #1
   18570:	andeq	r0, r0, r8, asr #1
   18574:	andeq	r0, r0, r8, asr #1
   18578:	andeq	r0, r0, r8, asr #1
   1857c:	andeq	r0, r0, r8, asr #1
   18580:	andeq	r0, r0, r8, asr #1
   18584:	andeq	r0, r0, r8, asr #1
   18588:	andeq	r0, r0, r8, asr #1
   1858c:	andeq	r0, r0, r8, asr #1
   18590:	andeq	r0, r0, r8, asr #1
   18594:	andeq	r0, r0, r8, asr #1
   18598:	andeq	r0, r0, r8, asr #1
   1859c:	muleq	r0, ip, r0
   185a0:	add	r0, r1, #1
   185a4:	cmp	r0, r5
   185a8:	mov	r1, r0
   185ac:	bcc	184e8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x40>
   185b0:	str	r0, [sp, #4]
   185b4:	b	185bc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x114>
   185b8:	mov	r0, r1
   185bc:	mov	r1, #1
   185c0:	strb	r1, [r8]
   185c4:	sub	sp, fp, #24
   185c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185cc:	str	r0, [sp, #4]
   185d0:	ldrb	r0, [r6, r1]
   185d4:	cmp	r0, #62	; 0x3e
   185d8:	bne	185f0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x148>
   185dc:	mov	r0, #1
   185e0:	strb	r0, [r8]
   185e4:	add	r0, r1, #1
   185e8:	sub	sp, fp, #24
   185ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185f0:	str	r1, [r4]
   185f4:	ldr	r0, [sp, #4]
   185f8:	cmp	r0, r5
   185fc:	bcs	1871c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x274>
   18600:	ldr	r2, [sp, #4]
   18604:	ldrb	r3, [r6, r0]
   18608:	sub	r3, r3, #9
   1860c:	cmp	r3, #53	; 0x35
   18610:	bhi	186f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x250>
   18614:	add	r7, pc, #4
   18618:	ldr	r3, [r7, r3, lsl #2]
   1861c:	add	pc, r7, r3
   18620:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   18624:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   18628:	ldrdeq	r0, [r0], -r8
   1862c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   18630:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   18634:	ldrdeq	r0, [r0], -r8
   18638:	ldrdeq	r0, [r0], -r8
   1863c:	ldrdeq	r0, [r0], -r8
   18640:	ldrdeq	r0, [r0], -r8
   18644:	ldrdeq	r0, [r0], -r8
   18648:	ldrdeq	r0, [r0], -r8
   1864c:	ldrdeq	r0, [r0], -r8
   18650:	ldrdeq	r0, [r0], -r8
   18654:	ldrdeq	r0, [r0], -r8
   18658:	ldrdeq	r0, [r0], -r8
   1865c:	ldrdeq	r0, [r0], -r8
   18660:	ldrdeq	r0, [r0], -r8
   18664:	ldrdeq	r0, [r0], -r8
   18668:	ldrdeq	r0, [r0], -r8
   1866c:	ldrdeq	r0, [r0], -r8
   18670:	ldrdeq	r0, [r0], -r8
   18674:	ldrdeq	r0, [r0], -r8
   18678:	ldrdeq	r0, [r0], -r8
   1867c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   18680:	ldrdeq	r0, [r0], -r8
   18684:	ldrdeq	r0, [r0], -r8
   18688:	ldrdeq	r0, [r0], -r8
   1868c:	ldrdeq	r0, [r0], -r8
   18690:	ldrdeq	r0, [r0], -r8
   18694:	ldrdeq	r0, [r0], -r8
   18698:	ldrdeq	r0, [r0], -r8
   1869c:	ldrdeq	r0, [r0], -r8
   186a0:	ldrdeq	r0, [r0], -r8
   186a4:	ldrdeq	r0, [r0], -r8
   186a8:	ldrdeq	r0, [r0], -r8
   186ac:	ldrdeq	r0, [r0], -r8
   186b0:	ldrdeq	r0, [r0], -r8
   186b4:	ldrdeq	r0, [r0], -r8
   186b8:	andeq	r0, r0, r8, asr #2
   186bc:	ldrdeq	r0, [r0], -r8
   186c0:	ldrdeq	r0, [r0], -r8
   186c4:	ldrdeq	r0, [r0], -r8
   186c8:	ldrdeq	r0, [r0], -r8
   186cc:	ldrdeq	r0, [r0], -r8
   186d0:	ldrdeq	r0, [r0], -r8
   186d4:	ldrdeq	r0, [r0], -r8
   186d8:	ldrdeq	r0, [r0], -r8
   186dc:	ldrdeq	r0, [r0], -r8
   186e0:	ldrdeq	r0, [r0], -r8
   186e4:	ldrdeq	r0, [r0], -r8
   186e8:	ldrdeq	r0, [r0], -r8
   186ec:	ldrdeq	r0, [r0], -r8
   186f0:	andeq	r0, r0, r8, ror #2
   186f4:	andeq	r0, r0, r8, asr #2
   186f8:	add	r2, r0, #1
   186fc:	cmp	r2, r5
   18700:	mov	r0, r2
   18704:	bcc	18604 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x15c>
   18708:	str	r2, [sp, #4]
   1870c:	b	1871c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x274>
   18710:	str	r2, [sp, #4]
   18714:	add	r0, r0, #1
   18718:	str	r0, [sp, #4]
   1871c:	add	r1, sp, #4
   18720:	mov	r0, r6
   18724:	mov	r2, r5
   18728:	mov	r3, r4
   1872c:	bl	1190c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   18730:	cmp	r0, #0
   18734:	beq	18754 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2ac>
   18738:	ldr	r1, [sp, #4]
   1873c:	mov	r0, r6
   18740:	mov	r2, r5
   18744:	mov	r3, r4
   18748:	sub	sp, fp, #24
   1874c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18750:	b	18234 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>
   18754:	mov	r0, #1
   18758:	strb	r0, [r8]
   1875c:	ldr	r0, [sp, #4]
   18760:	sub	sp, fp, #24
   18764:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18768:	str	r2, [sp, #4]
   1876c:	mov	r2, #1
   18770:	strb	r2, [r8]
   18774:	sub	r1, r0, r1
   18778:	str	r1, [r4, #4]
   1877c:	add	r0, r0, #1
   18780:	sub	sp, fp, #24
   18784:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18788:	str	r2, [sp, #4]
   1878c:	add	r2, r1, #1
   18790:	cmp	r2, r0
   18794:	beq	18714 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x26c>
   18798:	sub	r1, r0, r1
   1879c:	str	r1, [r4, #4]
   187a0:	add	r1, r0, #1
   187a4:	str	r1, [sp, #4]
   187a8:	b	1873c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x294>

000187ac <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   187ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187b0:	add	fp, sp, #28
   187b4:	sub	sp, sp, #36	; 0x24
   187b8:	str	r3, [sp, #8]
   187bc:	mov	r5, r2
   187c0:	mov	r6, r1
   187c4:	mov	r7, r0
   187c8:	mov	r1, #0
   187cc:	mov	r0, #0
   187d0:	str	r0, [sp, #4]
   187d4:	strb	r1, [sp, #15]
   187d8:	add	r8, sp, #15
   187dc:	add	r4, sp, #16
   187e0:	mov	sl, #0
   187e4:	mov	r9, #0
   187e8:	ldr	r1, [r6]
   187ec:	cmp	r1, r5
   187f0:	bcs	1893c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x190>
   187f4:	str	r8, [sp]
   187f8:	mov	r0, r7
   187fc:	mov	r2, r5
   18800:	mov	r3, r4
   18804:	bl	120b0 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18808:	str	r0, [r6]
   1880c:	ldr	r0, [sp, #20]
   18810:	cmp	r0, #7
   18814:	beq	18878 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xcc>
   18818:	cmp	r0, #10
   1881c:	bne	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   18820:	ldr	r0, [sp, #16]
   18824:	add	r1, r7, r0
   18828:	ldr	r0, [pc, #364]	; 1899c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   1882c:	add	r0, pc, r0
   18830:	bl	111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18834:	tst	r9, #1
   18838:	bne	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   1883c:	cmp	r0, #0
   18840:	beq	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   18844:	orr	r9, r9, #1
   18848:	ldr	r0, [sp, #28]
   1884c:	cmp	r0, #12
   18850:	bne	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   18854:	ldr	r0, [sp, #24]
   18858:	add	r1, r7, r0
   1885c:	ldr	r0, [pc, #316]	; 189a0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f4>
   18860:	add	r0, pc, r0
   18864:	bl	111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18868:	ldr	r1, [sp, #4]
   1886c:	orr	r1, r1, r0
   18870:	str	r1, [sp, #4]
   18874:	b	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   18878:	ldr	r0, [sp, #16]
   1887c:	add	r1, r7, r0
   18880:	ldr	r0, [pc, #284]	; 189a4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f8>
   18884:	add	r0, pc, r0
   18888:	bl	111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1888c:	cmp	r0, #0
   18890:	beq	188cc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x120>
   18894:	tst	r9, #2
   18898:	bne	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   1889c:	ldr	r0, [sp, #24]
   188a0:	ldr	r1, [sp, #28]
   188a4:	ldr	r2, [fp, #12]
   188a8:	str	r2, [sp]
   188ac:	add	r0, r7, r0
   188b0:	ldr	r2, [sp, #8]
   188b4:	ldr	r3, [fp, #8]
   188b8:	bl	11c54 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   188bc:	cmp	r0, #0
   188c0:	movwne	sl, #2
   188c4:	orr	r9, r9, #2
   188c8:	b	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   188cc:	ldr	r0, [sp, #16]
   188d0:	add	r1, r7, r0
   188d4:	ldr	r0, [pc, #204]	; 189a8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1fc>
   188d8:	add	r0, pc, r0
   188dc:	bl	111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   188e0:	tst	r9, #4
   188e4:	bne	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   188e8:	cmp	r0, #0
   188ec:	beq	18930 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x184>
   188f0:	ldr	r1, [fp, #8]
   188f4:	cmp	r1, #0
   188f8:	ldrne	r0, [sp, #24]
   188fc:	addne	r0, r7, r0
   18900:	strne	r0, [r1]
   18904:	ldr	r1, [fp, #12]
   18908:	cmp	r1, #0
   1890c:	ldrne	r0, [sp, #28]
   18910:	strne	r0, [r1]
   18914:	orr	r9, r9, #4
   18918:	ldr	r0, [sp, #24]
   1891c:	ldr	r1, [sp, #28]
   18920:	add	r0, r7, r0
   18924:	ldr	r2, [sp, #8]
   18928:	bl	1208c <myencoding_by_name@plt>
   1892c:	mov	sl, #1
   18930:	ldrb	r0, [sp, #15]
   18934:	cmp	r0, #0
   18938:	beq	187e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x3c>
   1893c:	mov	r0, #0
   18940:	mov	r1, #2
   18944:	cmp	sl, #0
   18948:	beq	1898c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e0>
   1894c:	cmp	sl, #2
   18950:	ldreq	r2, [sp, #4]
   18954:	tsteq	r2, #1
   18958:	beq	1898c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e0>
   1895c:	ldr	r0, [sp, #8]
   18960:	ldr	r2, [r0]
   18964:	bic	r0, r2, #1
   18968:	cmp	r0, #4
   1896c:	bne	1897c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1d0>
   18970:	mov	r0, #1
   18974:	mov	r1, #0
   18978:	b	1898c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e0>
   1897c:	mov	r0, #1
   18980:	mov	r1, #33	; 0x21
   18984:	cmp	r2, #6
   18988:	bne	18994 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e8>
   1898c:	ldr	r2, [sp, #8]
   18990:	str	r1, [r2]
   18994:	sub	sp, fp, #28
   18998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1899c:	andeq	r0, r2, ip, lsr #30
   189a0:	andeq	r0, r2, r3, lsl #30
   189a4:	andeq	r0, r2, ip, ror #29
   189a8:	andeq	r0, r2, r8, ror lr

000189ac <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   189ac:	push	{r4, r5, r6, r7, fp, lr}
   189b0:	add	fp, sp, #16
   189b4:	sub	sp, sp, #32
   189b8:	cmp	r1, r2
   189bc:	bcs	18a4c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   189c0:	mov	r4, r2
   189c4:	mov	r5, r0
   189c8:	mov	r0, #1
   189cc:	movw	r2, #27
   189d0:	movt	r2, #128	; 0x80
   189d4:	ldrb	r3, [r5, r1]
   189d8:	sub	r3, r3, #9
   189dc:	cmp	r3, #23
   189e0:	bhi	189fc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x50>
   189e4:	tst	r2, r0, lsl r3
   189e8:	beq	189fc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x50>
   189ec:	add	r1, r1, #1
   189f0:	cmp	r1, r4
   189f4:	bcc	189d4 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x28>
   189f8:	b	18a4c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   189fc:	ldrb	r0, [r5, r1]
   18a00:	cmp	r0, #62	; 0x3e
   18a04:	bne	18a10 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   18a08:	add	r1, r1, #1
   18a0c:	b	18a4c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18a10:	mov	r0, #0
   18a14:	strb	r0, [sp, #11]
   18a18:	add	r7, sp, #11
   18a1c:	add	r6, sp, #12
   18a20:	cmp	r1, r4
   18a24:	bcs	18a4c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18a28:	str	r7, [sp]
   18a2c:	mov	r0, r5
   18a30:	mov	r2, r4
   18a34:	mov	r3, r6
   18a38:	bl	120b0 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18a3c:	mov	r1, r0
   18a40:	ldrb	r0, [sp, #11]
   18a44:	cmp	r0, #0
   18a48:	beq	18a20 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x74>
   18a4c:	mov	r0, r1
   18a50:	sub	sp, fp, #16
   18a54:	pop	{r4, r5, r6, r7, fp, pc}

00018a58 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   18a58:	push	{fp, lr}
   18a5c:	mov	fp, sp
   18a60:	ldrb	r3, [r0, r1]
   18a64:	cmp	r3, #33	; 0x21
   18a68:	beq	18ac8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x70>
   18a6c:	cmp	r3, #63	; 0x3f
   18a70:	beq	18b5c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x104>
   18a74:	cmp	r3, #47	; 0x2f
   18a78:	bne	18b80 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x128>
   18a7c:	add	lr, r1, #1
   18a80:	cmp	lr, r2
   18a84:	bcs	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18a88:	ldrb	ip, [r0, lr]
   18a8c:	ldr	r1, [pc, #256]	; 18b94 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x13c>
   18a90:	add	r1, pc, r1
   18a94:	ldrb	r1, [r1, ip]
   18a98:	cmp	r1, #1
   18a9c:	bne	18aac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   18aa0:	mov	r1, lr
   18aa4:	pop	{fp, lr}
   18aa8:	b	189ac <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>
   18aac:	cmp	lr, r2
   18ab0:	bcs	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18ab4:	ldrb	r1, [r0, lr]
   18ab8:	add	lr, lr, #1
   18abc:	cmp	r1, #62	; 0x3e
   18ac0:	beq	18aac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   18ac4:	b	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18ac8:	add	lr, r1, #1
   18acc:	add	r3, r1, #3
   18ad0:	cmp	r3, r2
   18ad4:	bcs	18b40 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   18ad8:	ldrb	r3, [r0, lr]
   18adc:	cmp	r3, #45	; 0x2d
   18ae0:	bne	18b40 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   18ae4:	add	r3, r0, r1
   18ae8:	ldrb	r3, [r3, #2]
   18aec:	cmp	r3, #45	; 0x2d
   18af0:	bne	18b40 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   18af4:	cmp	lr, r2
   18af8:	bcs	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18afc:	mov	r3, r1
   18b00:	add	ip, r0, r1
   18b04:	ldrb	r1, [ip, #1]
   18b08:	cmp	r1, #62	; 0x3e
   18b0c:	beq	18b24 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xcc>
   18b10:	ldrb	r1, [r0, r3]
   18b14:	cmp	r1, #45	; 0x2d
   18b18:	ldrbeq	r1, [ip, #-1]
   18b1c:	cmpeq	r1, #45	; 0x2d
   18b20:	beq	18b88 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x130>
   18b24:	add	r1, r3, #1
   18b28:	add	r3, r3, #2
   18b2c:	cmp	r3, r2
   18b30:	bcc	18afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   18b34:	add	lr, r1, #1
   18b38:	mov	r0, lr
   18b3c:	pop	{fp, pc}
   18b40:	cmp	lr, r2
   18b44:	bcs	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18b48:	ldrb	r1, [r0, lr]
   18b4c:	add	lr, lr, #1
   18b50:	cmp	r1, #62	; 0x3e
   18b54:	beq	18b40 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   18b58:	b	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18b5c:	add	lr, r1, #1
   18b60:	cmp	lr, r2
   18b64:	bcs	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   18b68:	ldrb	r1, [r0, lr]
   18b6c:	add	lr, lr, #1
   18b70:	cmp	r1, #62	; 0x3e
   18b74:	beq	18b60 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x108>
   18b78:	mov	r0, lr
   18b7c:	pop	{fp, pc}
   18b80:	pop	{fp, lr}
   18b84:	b	189ac <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>
   18b88:	add	lr, r3, #2
   18b8c:	mov	r0, lr
   18b90:	pop	{fp, pc}
   18b94:	andeq	r0, r2, r0, asr #23

00018b98 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   18b98:	mov	r2, #0
   18b9c:	mov	r3, #0
   18ba0:	b	18ba4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>

00018ba4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   18ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ba8:	add	fp, sp, #28
   18bac:	sub	sp, sp, #20
   18bb0:	mov	r4, r3
   18bb4:	mov	r5, r2
   18bb8:	mov	r6, r1
   18bbc:	mov	r7, r0
   18bc0:	mov	r0, #2
   18bc4:	str	r0, [sp, #16]
   18bc8:	cmp	r2, #0
   18bcc:	movne	r0, #0
   18bd0:	strne	r0, [r5]
   18bd4:	cmp	r4, #0
   18bd8:	movne	r0, #0
   18bdc:	strne	r0, [r4]
   18be0:	mov	r9, #0
   18be4:	str	r9, [sp, #12]
   18be8:	cmp	r6, #0
   18bec:	beq	18d50 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1ac>
   18bf0:	ldr	r8, [pc, #356]	; 18d5c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b8>
   18bf4:	add	r8, pc, r8
   18bf8:	ldrb	r0, [r7, r9]
   18bfc:	cmp	r0, #60	; 0x3c
   18c00:	bne	18d2c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x188>
   18c04:	add	sl, r9, #5
   18c08:	cmp	sl, r6
   18c0c:	bcs	18d50 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1ac>
   18c10:	add	r1, r9, #1
   18c14:	str	r1, [sp, #12]
   18c18:	mov	r2, r7
   18c1c:	ldrb	r0, [r2, r1]!
   18c20:	orr	r0, r0, #32
   18c24:	cmp	r0, #109	; 0x6d
   18c28:	bne	18d34 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x190>
   18c2c:	mov	r0, r8
   18c30:	mov	r1, r2
   18c34:	bl	111a4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18c38:	cmp	r0, #0
   18c3c:	beq	18d44 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1a0>
   18c40:	str	sl, [sp, #12]
   18c44:	ldrb	r0, [r7, sl]
   18c48:	sub	r0, r0, #9
   18c4c:	cmp	r0, #38	; 0x26
   18c50:	bhi	18d44 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1a0>
   18c54:	add	r1, pc, #4
   18c58:	ldr	r0, [r1, r0, lsl #2]
   18c5c:	add	pc, r1, r0
   18c60:	muleq	r0, ip, r0
   18c64:	muleq	r0, ip, r0
   18c68:	andeq	r0, r0, r4, ror #1
   18c6c:	muleq	r0, ip, r0
   18c70:	muleq	r0, ip, r0
   18c74:	andeq	r0, r0, r4, ror #1
   18c78:	andeq	r0, r0, r4, ror #1
   18c7c:	andeq	r0, r0, r4, ror #1
   18c80:	andeq	r0, r0, r4, ror #1
   18c84:	andeq	r0, r0, r4, ror #1
   18c88:	andeq	r0, r0, r4, ror #1
   18c8c:	andeq	r0, r0, r4, ror #1
   18c90:	andeq	r0, r0, r4, ror #1
   18c94:	andeq	r0, r0, r4, ror #1
   18c98:	andeq	r0, r0, r4, ror #1
   18c9c:	andeq	r0, r0, r4, ror #1
   18ca0:	andeq	r0, r0, r4, ror #1
   18ca4:	andeq	r0, r0, r4, ror #1
   18ca8:	andeq	r0, r0, r4, ror #1
   18cac:	andeq	r0, r0, r4, ror #1
   18cb0:	andeq	r0, r0, r4, ror #1
   18cb4:	andeq	r0, r0, r4, ror #1
   18cb8:	andeq	r0, r0, r4, ror #1
   18cbc:	muleq	r0, ip, r0
   18cc0:	andeq	r0, r0, r4, ror #1
   18cc4:	andeq	r0, r0, r4, ror #1
   18cc8:	andeq	r0, r0, r4, ror #1
   18ccc:	andeq	r0, r0, r4, ror #1
   18cd0:	andeq	r0, r0, r4, ror #1
   18cd4:	andeq	r0, r0, r4, ror #1
   18cd8:	andeq	r0, r0, r4, ror #1
   18cdc:	andeq	r0, r0, r4, ror #1
   18ce0:	andeq	r0, r0, r4, ror #1
   18ce4:	andeq	r0, r0, r4, ror #1
   18ce8:	andeq	r0, r0, r4, ror #1
   18cec:	andeq	r0, r0, r4, ror #1
   18cf0:	andeq	r0, r0, r4, ror #1
   18cf4:	andeq	r0, r0, r4, ror #1
   18cf8:	muleq	r0, ip, r0
   18cfc:	add	r0, r9, #6
   18d00:	str	r0, [sp, #12]
   18d04:	str	r5, [sp]
   18d08:	str	r4, [sp, #4]
   18d0c:	mov	r0, r7
   18d10:	add	r1, sp, #12
   18d14:	mov	r2, r6
   18d18:	add	r3, sp, #16
   18d1c:	bl	11828 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   18d20:	cmp	r0, #0
   18d24:	beq	18d44 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1a0>
   18d28:	b	18d50 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1ac>
   18d2c:	add	r0, r9, #1
   18d30:	b	18d40 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x19c>
   18d34:	mov	r0, r7
   18d38:	mov	r2, r6
   18d3c:	bl	11798 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   18d40:	str	r0, [sp, #12]
   18d44:	ldr	r9, [sp, #12]
   18d48:	cmp	r9, r6
   18d4c:	bcc	18bf8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   18d50:	ldr	r0, [sp, #16]
   18d54:	sub	sp, fp, #28
   18d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d5c:	andeq	r0, r2, r4, lsl #23

00018d60 <myencoding_get_function_by_id@@Base>:
   18d60:	ldr	r1, [pc, #8]	; 18d70 <myencoding_get_function_by_id@@Base+0x10>
   18d64:	add	r1, pc, r1
   18d68:	ldr	r0, [r1, r0, lsl #2]
   18d6c:	bx	lr
   18d70:	ldrdeq	r8, [pc], -r8	; <UNPREDICTABLE>

00018d74 <myencoding_decode_utf_8@@Base>:
   18d74:	ldr	r2, [r1, #20]
   18d78:	cmp	r2, #0
   18d7c:	beq	18e10 <myencoding_decode_utf_8@@Base+0x9c>
   18d80:	ldr	r3, [r1]
   18d84:	cmp	r3, r0
   18d88:	bls	18dc0 <myencoding_decode_utf_8@@Base+0x4c>
   18d8c:	ldr	r3, [r1, #4]
   18d90:	cmp	r3, r0
   18d94:	bcs	18dc0 <myencoding_decode_utf_8@@Base+0x4c>
   18d98:	mov	r0, #0
   18d9c:	str	r0, [r1, #20]
   18da0:	mov	r2, #128	; 0x80
   18da4:	mov	r3, #191	; 0xbf
   18da8:	stm	r1, {r2, r3}
   18dac:	str	r0, [r1, #8]
   18db0:	str	r0, [r1, #12]
   18db4:	mov	r2, #5
   18db8:	mov	r0, r2
   18dbc:	bx	lr
   18dc0:	mov	r3, #191	; 0xbf
   18dc4:	str	r3, [r1, #4]
   18dc8:	mov	r3, #128	; 0x80
   18dcc:	str	r3, [r1]
   18dd0:	ldr	r3, [r1, #8]
   18dd4:	ldr	ip, [r1, #12]
   18dd8:	add	r3, r3, #1
   18ddc:	str	r3, [r1, #8]
   18de0:	subs	r2, r2, r3
   18de4:	add	r2, r2, r2, lsl #1
   18de8:	lsl	r2, r2, #1
   18dec:	sub	r0, r0, #128	; 0x80
   18df0:	add	r0, ip, r0, lsl r2
   18df4:	str	r0, [r1, #12]
   18df8:	mov	r2, #2
   18dfc:	moveq	r2, #0
   18e00:	streq	r2, [r1, #8]
   18e04:	streq	r2, [r1, #20]
   18e08:	mov	r0, r2
   18e0c:	bx	lr
   18e10:	sxtb	r2, r0
   18e14:	cmp	r2, #0
   18e18:	strge	r0, [r1, #12]
   18e1c:	movge	r2, #0
   18e20:	movge	r0, r2
   18e24:	bxge	lr
   18e28:	add	r2, r0, #62	; 0x3e
   18e2c:	uxtb	r2, r2
   18e30:	cmp	r2, #30
   18e34:	bcs	18e44 <myencoding_decode_utf_8@@Base+0xd0>
   18e38:	mvn	ip, #191	; 0xbf
   18e3c:	mov	r3, #1
   18e40:	b	18eb4 <myencoding_decode_utf_8@@Base+0x140>
   18e44:	and	r2, r0, #240	; 0xf0
   18e48:	cmp	r2, #224	; 0xe0
   18e4c:	bne	18e70 <myencoding_decode_utf_8@@Base+0xfc>
   18e50:	mvn	ip, #223	; 0xdf
   18e54:	mov	r3, #2
   18e58:	cmp	r0, #237	; 0xed
   18e5c:	beq	18ea4 <myencoding_decode_utf_8@@Base+0x130>
   18e60:	cmp	r0, #224	; 0xe0
   18e64:	moveq	r2, #160	; 0xa0
   18e68:	streq	r2, [r1]
   18e6c:	b	18eb4 <myencoding_decode_utf_8@@Base+0x140>
   18e70:	add	r2, r0, #16
   18e74:	uxtb	r3, r2
   18e78:	mov	r2, #1
   18e7c:	cmp	r3, #4
   18e80:	bhi	18e08 <myencoding_decode_utf_8@@Base+0x94>
   18e84:	mvn	ip, #239	; 0xef
   18e88:	mov	r3, #2
   18e8c:	cmp	r0, #244	; 0xf4
   18e90:	beq	18eac <myencoding_decode_utf_8@@Base+0x138>
   18e94:	cmp	r0, #240	; 0xf0
   18e98:	moveq	r2, #144	; 0x90
   18e9c:	streq	r2, [r1]
   18ea0:	b	18eb4 <myencoding_decode_utf_8@@Base+0x140>
   18ea4:	mov	r2, #159	; 0x9f
   18ea8:	b	18eb0 <myencoding_decode_utf_8@@Base+0x13c>
   18eac:	mov	r2, #143	; 0x8f
   18eb0:	str	r2, [r1, #4]
   18eb4:	str	r3, [r1, #20]
   18eb8:	add	r0, ip, r0
   18ebc:	add	r2, r3, r3, lsl #1
   18ec0:	lsl	r2, r2, #1
   18ec4:	lsl	r0, r0, r2
   18ec8:	str	r0, [r1, #12]
   18ecc:	mov	r2, #2
   18ed0:	mov	r0, r2
   18ed4:	bx	lr

00018ed8 <myencoding_decode_ibm866@@Base>:
   18ed8:	sxtb	r2, r0
   18edc:	cmn	r2, #1
   18ee0:	bgt	18ef4 <myencoding_decode_ibm866@@Base+0x1c>
   18ee4:	ldr	r2, [pc, #20]	; 18f00 <myencoding_decode_ibm866@@Base+0x28>
   18ee8:	add	r2, pc, r2
   18eec:	add	r0, r2, r0, lsl #2
   18ef0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18ef4:	str	r0, [r1, #12]
   18ef8:	mov	r0, #0
   18efc:	bx	lr
   18f00:	ldrdeq	r1, [r2], -ip

00018f04 <myencoding_decode_iso_8859_2@@Base>:
   18f04:	sxtb	r2, r0
   18f08:	cmn	r2, #1
   18f0c:	bgt	18f20 <myencoding_decode_iso_8859_2@@Base+0x1c>
   18f10:	ldr	r2, [pc, #20]	; 18f2c <myencoding_decode_iso_8859_2@@Base+0x28>
   18f14:	add	r2, pc, r2
   18f18:	add	r0, r2, r0, lsl #2
   18f1c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18f20:	str	r0, [r1, #12]
   18f24:	mov	r0, #0
   18f28:	bx	lr
   18f2c:			; <UNDEFINED> instruction: 0x000213b0

00018f30 <myencoding_decode_iso_8859_3@@Base>:
   18f30:	sxtb	r2, r0
   18f34:	cmn	r2, #1
   18f38:	bgt	18f4c <myencoding_decode_iso_8859_3@@Base+0x1c>
   18f3c:	ldr	r2, [pc, #20]	; 18f58 <myencoding_decode_iso_8859_3@@Base+0x28>
   18f40:	add	r2, pc, r2
   18f44:	add	r0, r2, r0, lsl #2
   18f48:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18f4c:	str	r0, [r1, #12]
   18f50:	mov	r0, #0
   18f54:	bx	lr
   18f58:	andeq	r1, r2, r4, lsl #11

00018f5c <myencoding_decode_iso_8859_4@@Base>:
   18f5c:	sxtb	r2, r0
   18f60:	cmn	r2, #1
   18f64:	bgt	18f78 <myencoding_decode_iso_8859_4@@Base+0x1c>
   18f68:	ldr	r2, [pc, #20]	; 18f84 <myencoding_decode_iso_8859_4@@Base+0x28>
   18f6c:	add	r2, pc, r2
   18f70:	add	r0, r2, r0, lsl #2
   18f74:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18f78:	str	r0, [r1, #12]
   18f7c:	mov	r0, #0
   18f80:	bx	lr
   18f84:	andeq	r1, r2, r8, asr r7

00018f88 <myencoding_decode_iso_8859_5@@Base>:
   18f88:	sxtb	r2, r0
   18f8c:	cmn	r2, #1
   18f90:	bgt	18fa4 <myencoding_decode_iso_8859_5@@Base+0x1c>
   18f94:	ldr	r2, [pc, #20]	; 18fb0 <myencoding_decode_iso_8859_5@@Base+0x28>
   18f98:	add	r2, pc, r2
   18f9c:	add	r0, r2, r0, lsl #2
   18fa0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18fa4:	str	r0, [r1, #12]
   18fa8:	mov	r0, #0
   18fac:	bx	lr
   18fb0:	andeq	r1, r2, ip, lsr #18

00018fb4 <myencoding_decode_iso_8859_6@@Base>:
   18fb4:	sxtb	r2, r0
   18fb8:	cmn	r2, #1
   18fbc:	bgt	18fd0 <myencoding_decode_iso_8859_6@@Base+0x1c>
   18fc0:	ldr	r2, [pc, #20]	; 18fdc <myencoding_decode_iso_8859_6@@Base+0x28>
   18fc4:	add	r2, pc, r2
   18fc8:	add	r0, r2, r0, lsl #2
   18fcc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18fd0:	str	r0, [r1, #12]
   18fd4:	mov	r0, #0
   18fd8:	bx	lr
   18fdc:	andeq	pc, r4, r0, lsr #15

00018fe0 <myencoding_decode_iso_8859_7@@Base>:
   18fe0:	sxtb	r2, r0
   18fe4:	cmn	r2, #1
   18fe8:	bgt	18ffc <myencoding_decode_iso_8859_7@@Base+0x1c>
   18fec:	ldr	r2, [pc, #20]	; 19008 <myencoding_decode_iso_8859_7@@Base+0x28>
   18ff0:	add	r2, pc, r2
   18ff4:	add	r0, r2, r0, lsl #2
   18ff8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   18ffc:	str	r0, [r1, #12]
   19000:	mov	r0, #0
   19004:	bx	lr
   19008:	ldrdeq	r1, [r2], -r4

0001900c <myencoding_decode_iso_8859_8@@Base>:
   1900c:	sxtb	r2, r0
   19010:	cmn	r2, #1
   19014:	bgt	19028 <myencoding_decode_iso_8859_8@@Base+0x1c>
   19018:	ldr	r2, [pc, #20]	; 19034 <myencoding_decode_iso_8859_8@@Base+0x28>
   1901c:	add	r2, pc, r2
   19020:	add	r0, r2, r0, lsl #2
   19024:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19028:	str	r0, [r1, #12]
   1902c:	mov	r0, #0
   19030:	bx	lr
   19034:	andeq	r1, r2, r8, lsr #25

00019038 <myencoding_decode_iso_8859_8_i@@Base>:
   19038:	sxtb	r2, r0
   1903c:	cmn	r2, #1
   19040:	bgt	19054 <myencoding_decode_iso_8859_8_i@@Base+0x1c>
   19044:	ldr	r2, [pc, #20]	; 19060 <myencoding_decode_iso_8859_8_i@@Base+0x28>
   19048:	add	r2, pc, r2
   1904c:	add	r0, r2, r0, lsl #2
   19050:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19054:	str	r0, [r1, #12]
   19058:	mov	r0, #0
   1905c:	bx	lr
   19060:	andeq	r1, r2, ip, ror ip

00019064 <myencoding_decode_iso_8859_10@@Base>:
   19064:	sxtb	r2, r0
   19068:	cmn	r2, #1
   1906c:	bgt	19080 <myencoding_decode_iso_8859_10@@Base+0x1c>
   19070:	ldr	r2, [pc, #20]	; 1908c <myencoding_decode_iso_8859_10@@Base+0x28>
   19074:	add	r2, pc, r2
   19078:	add	r0, r2, r0, lsl #2
   1907c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19080:	str	r0, [r1, #12]
   19084:	mov	r0, #0
   19088:	bx	lr
   1908c:	andeq	r1, r2, r0, asr lr

00019090 <myencoding_decode_iso_8859_13@@Base>:
   19090:	sxtb	r2, r0
   19094:	cmn	r2, #1
   19098:	bgt	190ac <myencoding_decode_iso_8859_13@@Base+0x1c>
   1909c:	ldr	r2, [pc, #20]	; 190b8 <myencoding_decode_iso_8859_13@@Base+0x28>
   190a0:	add	r2, pc, r2
   190a4:	add	r0, r2, r0, lsl #2
   190a8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   190ac:	str	r0, [r1, #12]
   190b0:	mov	r0, #0
   190b4:	bx	lr
   190b8:	andeq	r2, r2, r4, lsr #32

000190bc <myencoding_decode_iso_8859_14@@Base>:
   190bc:	sxtb	r2, r0
   190c0:	cmn	r2, #1
   190c4:	bgt	190d8 <myencoding_decode_iso_8859_14@@Base+0x1c>
   190c8:	ldr	r2, [pc, #20]	; 190e4 <myencoding_decode_iso_8859_14@@Base+0x28>
   190cc:	add	r2, pc, r2
   190d0:	add	r0, r2, r0, lsl #2
   190d4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   190d8:	str	r0, [r1, #12]
   190dc:	mov	r0, #0
   190e0:	bx	lr
   190e4:	strdeq	r2, [r2], -r8

000190e8 <myencoding_decode_iso_8859_15@@Base>:
   190e8:	sxtb	r2, r0
   190ec:	cmn	r2, #1
   190f0:	bgt	19104 <myencoding_decode_iso_8859_15@@Base+0x1c>
   190f4:	ldr	r2, [pc, #20]	; 19110 <myencoding_decode_iso_8859_15@@Base+0x28>
   190f8:	add	r2, pc, r2
   190fc:	add	r0, r2, r0, lsl #2
   19100:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19104:	str	r0, [r1, #12]
   19108:	mov	r0, #0
   1910c:	bx	lr
   19110:	andeq	r2, r2, ip, asr #7

00019114 <myencoding_decode_iso_8859_16@@Base>:
   19114:	sxtb	r2, r0
   19118:	cmn	r2, #1
   1911c:	bgt	19130 <myencoding_decode_iso_8859_16@@Base+0x1c>
   19120:	ldr	r2, [pc, #20]	; 1913c <myencoding_decode_iso_8859_16@@Base+0x28>
   19124:	add	r2, pc, r2
   19128:	add	r0, r2, r0, lsl #2
   1912c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19130:	str	r0, [r1, #12]
   19134:	mov	r0, #0
   19138:	bx	lr
   1913c:	andeq	r2, r2, r0, lsr #11

00019140 <myencoding_decode_koi8_r@@Base>:
   19140:	sxtb	r2, r0
   19144:	cmn	r2, #1
   19148:	bgt	1915c <myencoding_decode_koi8_r@@Base+0x1c>
   1914c:	ldr	r2, [pc, #20]	; 19168 <myencoding_decode_koi8_r@@Base+0x28>
   19150:	add	r2, pc, r2
   19154:	add	r0, r2, r0, lsl #2
   19158:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1915c:	str	r0, [r1, #12]
   19160:	mov	r0, #0
   19164:	bx	lr
   19168:	andeq	r2, r2, r4, ror r7

0001916c <myencoding_decode_koi8_u@@Base>:
   1916c:	sxtb	r2, r0
   19170:	cmn	r2, #1
   19174:	bgt	19188 <myencoding_decode_koi8_u@@Base+0x1c>
   19178:	ldr	r2, [pc, #20]	; 19194 <myencoding_decode_koi8_u@@Base+0x28>
   1917c:	add	r2, pc, r2
   19180:	add	r0, r2, r0, lsl #2
   19184:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19188:	str	r0, [r1, #12]
   1918c:	mov	r0, #0
   19190:	bx	lr
   19194:	andeq	r2, r2, r8, asr #18

00019198 <myencoding_decode_macintosh@@Base>:
   19198:	sxtb	r2, r0
   1919c:	cmn	r2, #1
   191a0:	bgt	191b4 <myencoding_decode_macintosh@@Base+0x1c>
   191a4:	ldr	r2, [pc, #20]	; 191c0 <myencoding_decode_macintosh@@Base+0x28>
   191a8:	add	r2, pc, r2
   191ac:	add	r0, r2, r0, lsl #2
   191b0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   191b4:	str	r0, [r1, #12]
   191b8:	mov	r0, #0
   191bc:	bx	lr
   191c0:	andeq	r2, r2, ip, lsl fp

000191c4 <myencoding_decode_windows_874@@Base>:
   191c4:	sxtb	r2, r0
   191c8:	cmn	r2, #1
   191cc:	bgt	191e0 <myencoding_decode_windows_874@@Base+0x1c>
   191d0:	ldr	r2, [pc, #20]	; 191ec <myencoding_decode_windows_874@@Base+0x28>
   191d4:	add	r2, pc, r2
   191d8:	add	r0, r2, r0, lsl #2
   191dc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   191e0:	str	r0, [r1, #12]
   191e4:	mov	r0, #0
   191e8:	bx	lr
   191ec:	strdeq	r2, [r2], -r0

000191f0 <myencoding_decode_windows_1250@@Base>:
   191f0:	sxtb	r2, r0
   191f4:	cmn	r2, #1
   191f8:	bgt	1920c <myencoding_decode_windows_1250@@Base+0x1c>
   191fc:	ldr	r2, [pc, #20]	; 19218 <myencoding_decode_windows_1250@@Base+0x28>
   19200:	add	r2, pc, r2
   19204:	add	r0, r2, r0, lsl #2
   19208:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1920c:	str	r0, [r1, #12]
   19210:	mov	r0, #0
   19214:	bx	lr
   19218:	andeq	r2, r2, r4, asr #29

0001921c <myencoding_decode_windows_1251@@Base>:
   1921c:	sxtb	r2, r0
   19220:	cmn	r2, #1
   19224:	bgt	19238 <myencoding_decode_windows_1251@@Base+0x1c>
   19228:	ldr	r2, [pc, #20]	; 19244 <myencoding_decode_windows_1251@@Base+0x28>
   1922c:	add	r2, pc, r2
   19230:	add	r0, r2, r0, lsl #2
   19234:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19238:	str	r0, [r1, #12]
   1923c:	mov	r0, #0
   19240:	bx	lr
   19244:	muleq	r2, r8, r0

00019248 <myencoding_decode_windows_1252@@Base>:
   19248:	sxtb	r2, r0
   1924c:	cmn	r2, #1
   19250:	bgt	19264 <myencoding_decode_windows_1252@@Base+0x1c>
   19254:	ldr	r2, [pc, #20]	; 19270 <myencoding_decode_windows_1252@@Base+0x28>
   19258:	add	r2, pc, r2
   1925c:	add	r0, r2, r0, lsl #2
   19260:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19264:	str	r0, [r1, #12]
   19268:	mov	r0, #0
   1926c:	bx	lr
   19270:	andeq	r3, r2, ip, ror #4

00019274 <myencoding_decode_windows_1253@@Base>:
   19274:	sxtb	r2, r0
   19278:	cmn	r2, #1
   1927c:	bgt	19290 <myencoding_decode_windows_1253@@Base+0x1c>
   19280:	ldr	r2, [pc, #20]	; 1929c <myencoding_decode_windows_1253@@Base+0x28>
   19284:	add	r2, pc, r2
   19288:	add	r0, r2, r0, lsl #2
   1928c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19290:	str	r0, [r1, #12]
   19294:	mov	r0, #0
   19298:	bx	lr
   1929c:	andeq	r3, r2, r0, asr #8

000192a0 <myencoding_decode_windows_1254@@Base>:
   192a0:	sxtb	r2, r0
   192a4:	cmn	r2, #1
   192a8:	bgt	192bc <myencoding_decode_windows_1254@@Base+0x1c>
   192ac:	ldr	r2, [pc, #20]	; 192c8 <myencoding_decode_windows_1254@@Base+0x28>
   192b0:	add	r2, pc, r2
   192b4:	add	r0, r2, r0, lsl #2
   192b8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   192bc:	str	r0, [r1, #12]
   192c0:	mov	r0, #0
   192c4:	bx	lr
   192c8:	andeq	r3, r2, r4, lsl r6

000192cc <myencoding_decode_windows_1255@@Base>:
   192cc:	sxtb	r2, r0
   192d0:	cmn	r2, #1
   192d4:	bgt	192e8 <myencoding_decode_windows_1255@@Base+0x1c>
   192d8:	ldr	r2, [pc, #20]	; 192f4 <myencoding_decode_windows_1255@@Base+0x28>
   192dc:	add	r2, pc, r2
   192e0:	add	r0, r2, r0, lsl #2
   192e4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   192e8:	str	r0, [r1, #12]
   192ec:	mov	r0, #0
   192f0:	bx	lr
   192f4:	andeq	r3, r2, r8, ror #15

000192f8 <myencoding_decode_windows_1256@@Base>:
   192f8:	sxtb	r2, r0
   192fc:	cmn	r2, #1
   19300:	bgt	19314 <myencoding_decode_windows_1256@@Base+0x1c>
   19304:	ldr	r2, [pc, #20]	; 19320 <myencoding_decode_windows_1256@@Base+0x28>
   19308:	add	r2, pc, r2
   1930c:	add	r0, r2, r0, lsl #2
   19310:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19314:	str	r0, [r1, #12]
   19318:	mov	r0, #0
   1931c:	bx	lr
   19320:			; <UNDEFINED> instruction: 0x000239bc

00019324 <myencoding_decode_windows_1257@@Base>:
   19324:	sxtb	r2, r0
   19328:	cmn	r2, #1
   1932c:	bgt	19340 <myencoding_decode_windows_1257@@Base+0x1c>
   19330:	ldr	r2, [pc, #20]	; 1934c <myencoding_decode_windows_1257@@Base+0x28>
   19334:	add	r2, pc, r2
   19338:	add	r0, r2, r0, lsl #2
   1933c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19340:	str	r0, [r1, #12]
   19344:	mov	r0, #0
   19348:	bx	lr
   1934c:	muleq	r2, r0, fp

00019350 <myencoding_decode_windows_1258@@Base>:
   19350:	sxtb	r2, r0
   19354:	cmn	r2, #1
   19358:	bgt	1936c <myencoding_decode_windows_1258@@Base+0x1c>
   1935c:	ldr	r2, [pc, #20]	; 19378 <myencoding_decode_windows_1258@@Base+0x28>
   19360:	add	r2, pc, r2
   19364:	add	r0, r2, r0, lsl #2
   19368:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1936c:	str	r0, [r1, #12]
   19370:	mov	r0, #0
   19374:	bx	lr
   19378:	andeq	r3, r2, r4, ror #26

0001937c <myencoding_decode_x_mac_cyrillic@@Base>:
   1937c:	sxtb	r2, r0
   19380:	cmn	r2, #1
   19384:	bgt	19398 <myencoding_decode_x_mac_cyrillic@@Base+0x1c>
   19388:	ldr	r2, [pc, #20]	; 193a4 <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   1938c:	add	r2, pc, r2
   19390:	add	r0, r2, r0, lsl #2
   19394:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19398:	str	r0, [r1, #12]
   1939c:	mov	r0, #0
   193a0:	bx	lr
   193a4:	andeq	r3, r2, r8, lsr pc

000193a8 <myencoding_decode_gbk@@Base>:
   193a8:	b	193ac <myencoding_decode_gb18030@@Base>

000193ac <myencoding_decode_gb18030@@Base>:
   193ac:	push	{r4, sl, fp, lr}
   193b0:	add	fp, sp, #8
   193b4:	mov	r4, r1
   193b8:	ldr	r1, [r1, #8]
   193bc:	cmp	r1, #0
   193c0:	beq	19428 <myencoding_decode_gb18030@@Base+0x7c>
   193c4:	sub	r2, r0, #48	; 0x30
   193c8:	uxtb	r2, r2
   193cc:	cmp	r2, #9
   193d0:	bhi	19404 <myencoding_decode_gb18030@@Base+0x58>
   193d4:	ldm	r4, {r2, r3}
   193d8:	add	r2, r2, r2, lsl #2
   193dc:	add	r2, r3, r2, lsl #1
   193e0:	rsb	r2, r2, r2, lsl #6
   193e4:	add	r1, r1, r2, lsl #1
   193e8:	add	r1, r1, r1, lsl #2
   193ec:	add	r0, r0, r1, lsl #1
   193f0:	movw	r1, #16718	; 0x414e
   193f4:	movt	r1, #65510	; 0xffe6
   193f8:	add	r0, r0, r1
   193fc:	bl	122c0 <myencoding_index_gb18030_ranges_code_point@plt>
   19400:	str	r0, [r4, #12]
   19404:	mov	r0, #0
   19408:	str	r0, [r4]
   1940c:	str	r0, [r4, #4]
   19410:	str	r0, [r4, #8]
   19414:	ldr	r0, [r4, #12]
   19418:	clz	r0, r0
   1941c:	lsr	r1, r0, #5
   19420:	mov	r0, r1
   19424:	pop	{r4, sl, fp, pc}
   19428:	ldr	r1, [r4, #4]
   1942c:	cmp	r1, #0
   19430:	beq	1944c <myencoding_decode_gb18030@@Base+0xa0>
   19434:	cmp	r0, #129	; 0x81
   19438:	bcc	19478 <myencoding_decode_gb18030@@Base+0xcc>
   1943c:	cmp	r0, #255	; 0xff
   19440:	beq	19478 <myencoding_decode_gb18030@@Base+0xcc>
   19444:	str	r0, [r4, #8]
   19448:	b	1946c <myencoding_decode_gb18030@@Base+0xc0>
   1944c:	ldr	r2, [r4]
   19450:	cmp	r2, #0
   19454:	beq	19490 <myencoding_decode_gb18030@@Base+0xe4>
   19458:	sub	r1, r0, #48	; 0x30
   1945c:	uxtb	r1, r1
   19460:	cmp	r1, #9
   19464:	bhi	194b4 <myencoding_decode_gb18030@@Base+0x108>
   19468:	str	r0, [r4, #4]
   1946c:	mov	r1, #2
   19470:	mov	r0, r1
   19474:	pop	{r4, sl, fp, pc}
   19478:	mov	r0, #0
   1947c:	str	r0, [r4]
   19480:	str	r0, [r4, #4]
   19484:	mov	r1, #1
   19488:	mov	r0, r1
   1948c:	pop	{r4, sl, fp, pc}
   19490:	sxtb	r1, r0
   19494:	cmp	r1, #0
   19498:	bge	1950c <myencoding_decode_gb18030@@Base+0x160>
   1949c:	cmp	r0, #255	; 0xff
   194a0:	beq	19484 <myencoding_decode_gb18030@@Base+0xd8>
   194a4:	cmp	r0, #128	; 0x80
   194a8:	bne	1951c <myencoding_decode_gb18030@@Base+0x170>
   194ac:	movw	r0, #8364	; 0x20ac
   194b0:	b	1950c <myencoding_decode_gb18030@@Base+0x160>
   194b4:	mov	r1, #0
   194b8:	str	r1, [r4]
   194bc:	sxtb	r1, r0
   194c0:	cmn	r1, #1
   194c4:	blt	194dc <myencoding_decode_gb18030@@Base+0x130>
   194c8:	sub	r3, r0, #64	; 0x40
   194cc:	mov	r1, #1
   194d0:	uxtb	r3, r3
   194d4:	cmp	r3, #62	; 0x3e
   194d8:	bhi	19470 <myencoding_decode_gb18030@@Base+0xc4>
   194dc:	mvn	r1, #64	; 0x40
   194e0:	cmp	r0, #127	; 0x7f
   194e4:	mvncc	r1, #63	; 0x3f
   194e8:	add	r0, r0, r1
   194ec:	mov	r1, #190	; 0xbe
   194f0:	mla	r0, r2, r1, r0
   194f4:	ldr	r1, [pc, #40]	; 19524 <myencoding_decode_gb18030@@Base+0x178>
   194f8:	add	r1, pc, r1
   194fc:	add	r0, r1, r0, lsl #2
   19500:	movw	r1, #33032	; 0x8108
   19504:	movt	r1, #65534	; 0xfffe
   19508:	ldr	r0, [r0, r1]
   1950c:	str	r0, [r4, #12]
   19510:	mov	r1, #0
   19514:	mov	r0, r1
   19518:	pop	{r4, sl, fp, pc}
   1951c:	str	r0, [r4]
   19520:	b	1946c <myencoding_decode_gb18030@@Base+0xc0>
   19524:	andeq	r4, r2, r4, asr #12

00019528 <myencoding_index_gb18030_ranges_code_point@@Base>:
   19528:	mov	r1, #0
   1952c:	movw	r2, #57927	; 0xe247
   19530:	movt	r2, #18
   19534:	cmp	r0, r2
   19538:	bhi	195a4 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1953c:	movw	r2, #39420	; 0x99fc
   19540:	sub	r2, r0, r2
   19544:	movw	r3, #18508	; 0x484c
   19548:	movt	r3, #2
   1954c:	cmp	r2, r3
   19550:	bcc	195a4 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   19554:	movw	r1, #59335	; 0xe7c7
   19558:	movw	r2, #7457	; 0x1d21
   1955c:	cmp	r0, r2
   19560:	beq	195a4 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   19564:	ldr	r1, [pc, #64]	; 195ac <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   19568:	add	r1, pc, r1
   1956c:	add	r2, r1, #1648	; 0x670
   19570:	mvn	r1, #206	; 0xce
   19574:	cmp	r1, #0
   19578:	beq	19594 <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   1957c:	add	r1, r1, #1
   19580:	ldr	r3, [r2], #-8
   19584:	cmp	r3, r0
   19588:	bhi	19574 <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   1958c:	ldr	r2, [r2, #12]
   19590:	b	1959c <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   19594:	mov	r1, #0
   19598:	mov	r2, #0
   1959c:	add	r0, r1, r0
   195a0:	add	r1, r0, r2
   195a4:	mov	r0, r1
   195a8:	bx	lr
   195ac:	andeq	r3, r2, ip, asr pc

000195b0 <myencoding_decode_big5@@Base>:
   195b0:	mov	r2, r0
   195b4:	ldr	ip, [r1]
   195b8:	cmp	ip, #0
   195bc:	beq	196b8 <myencoding_decode_big5@@Base+0x108>
   195c0:	mov	r0, #0
   195c4:	str	r0, [r1]
   195c8:	mov	r3, #98	; 0x62
   195cc:	cmp	r2, #127	; 0x7f
   195d0:	movwcc	r3, #64	; 0x40
   195d4:	sub	r0, r2, #64	; 0x40
   195d8:	uxtb	r0, r0
   195dc:	cmp	r0, #63	; 0x3f
   195e0:	bcc	195f8 <myencoding_decode_big5@@Base+0x48>
   195e4:	mov	r0, #1
   195e8:	cmp	r2, #161	; 0xa1
   195ec:	bcc	196e0 <myencoding_decode_big5@@Base+0x130>
   195f0:	cmp	r2, #255	; 0xff
   195f4:	beq	196e0 <myencoding_decode_big5@@Base+0x130>
   195f8:	sub	r0, r2, r3
   195fc:	mov	r2, #157	; 0x9d
   19600:	mla	r0, ip, r2, r0
   19604:	movw	r2, #20253	; 0x4f1d
   19608:	sub	r2, r0, r2
   1960c:	movw	r3, #21386	; 0x538a
   19610:	sub	r0, r0, r3
   19614:	cmp	r0, #33	; 0x21
   19618:	bhi	196e4 <myencoding_decode_big5@@Base+0x134>
   1961c:	add	r3, pc, #4
   19620:	ldr	r0, [r3, r0, lsl #2]
   19624:	add	pc, r3, r0
   19628:	andeq	r0, r0, r8, lsl #1
   1962c:	andeq	r0, r0, r8, asr #1
   19630:	andeq	r0, r0, r4, ror #1
   19634:	andeq	r0, r0, r8, asr #1
   19638:	andeq	r0, r0, r8, asr #1
   1963c:	andeq	r0, r0, r8, asr #1
   19640:	andeq	r0, r0, r8, asr #1
   19644:	andeq	r0, r0, r8, asr #1
   19648:	andeq	r0, r0, r8, asr #1
   1964c:	andeq	r0, r0, r8, asr #1
   19650:	andeq	r0, r0, r8, asr #1
   19654:	andeq	r0, r0, r8, asr #1
   19658:	andeq	r0, r0, r8, asr #1
   1965c:	andeq	r0, r0, r8, asr #1
   19660:	andeq	r0, r0, r8, asr #1
   19664:	andeq	r0, r0, r8, asr #1
   19668:	andeq	r0, r0, r8, asr #1
   1966c:	andeq	r0, r0, r8, asr #1
   19670:	andeq	r0, r0, r8, asr #1
   19674:	andeq	r0, r0, r8, asr #1
   19678:	andeq	r0, r0, r8, asr #1
   1967c:	andeq	r0, r0, r8, asr #1
   19680:	andeq	r0, r0, r8, asr #1
   19684:	andeq	r0, r0, r8, asr #1
   19688:	andeq	r0, r0, r8, asr #1
   1968c:	andeq	r0, r0, r8, asr #1
   19690:	andeq	r0, r0, r8, asr #1
   19694:	andeq	r0, r0, r8, asr #1
   19698:	andeq	r0, r0, r8, asr #1
   1969c:	andeq	r0, r0, r8, asr #1
   196a0:	andeq	r0, r0, r8, asr #1
   196a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   196a8:	andeq	r0, r0, r8, asr #1
   196ac:	strdeq	r0, [r0], -r8
   196b0:	mov	r0, #772	; 0x304
   196b4:	b	19710 <myencoding_decode_big5@@Base+0x160>
   196b8:	sxtb	r0, r2
   196bc:	cmp	r0, #0
   196c0:	strge	r2, [r1, #12]
   196c4:	movge	r0, #0
   196c8:	bxge	lr
   196cc:	mov	r0, #1
   196d0:	cmp	r2, #128	; 0x80
   196d4:	cmpne	r2, #255	; 0xff
   196d8:	strne	r2, [r1]
   196dc:	movne	r0, #2
   196e0:	bx	lr
   196e4:	mov	r0, #1
   196e8:	cmp	r2, #0
   196ec:	bxeq	lr
   196f0:	mov	r0, #0
   196f4:	str	r0, [r1, #16]
   196f8:	ldr	r3, [pc, #56]	; 19738 <myencoding_decode_big5@@Base+0x188>
   196fc:	add	r3, pc, r3
   19700:	ldr	r2, [r3, r2, lsl #2]
   19704:	str	r2, [r1, #12]
   19708:	bx	lr
   1970c:	mov	r0, #780	; 0x30c
   19710:	mov	r2, #202	; 0xca
   19714:	b	19728 <myencoding_decode_big5@@Base+0x178>
   19718:	mov	r0, #772	; 0x304
   1971c:	b	19724 <myencoding_decode_big5@@Base+0x174>
   19720:	mov	r0, #780	; 0x30c
   19724:	mov	r2, #234	; 0xea
   19728:	str	r2, [r1, #12]
   1972c:	str	r0, [r1, #16]
   19730:	mov	r0, #0
   19734:	bx	lr
   19738:	andeq	fp, r3, r0, asr sl

0001973c <myencoding_decode_euc_jp@@Base>:
   1973c:	ldr	r2, [r1]
   19740:	cmp	r2, #0
   19744:	beq	19824 <myencoding_decode_euc_jp@@Base+0xe8>
   19748:	cmp	r2, #143	; 0x8f
   1974c:	beq	19784 <myencoding_decode_euc_jp@@Base+0x48>
   19750:	cmp	r2, #142	; 0x8e
   19754:	bne	197a4 <myencoding_decode_euc_jp@@Base+0x68>
   19758:	add	r2, r0, #95	; 0x5f
   1975c:	uxtb	r2, r2
   19760:	cmp	r2, #62	; 0x3e
   19764:	bhi	1981c <myencoding_decode_euc_jp@@Base+0xe0>
   19768:	mov	r2, #0
   1976c:	str	r2, [r1]
   19770:	movw	r3, #65216	; 0xfec0
   19774:	add	r0, r0, r3
   19778:	str	r0, [r1, #12]
   1977c:	mov	r0, r2
   19780:	bx	lr
   19784:	cmp	r0, #161	; 0xa1
   19788:	bcc	1981c <myencoding_decode_euc_jp@@Base+0xe0>
   1978c:	cmp	r0, #255	; 0xff
   19790:	beq	1981c <myencoding_decode_euc_jp@@Base+0xe0>
   19794:	str	r0, [r1]
   19798:	mov	r0, #1
   1979c:	str	r0, [r1, #20]
   197a0:	b	19860 <myencoding_decode_euc_jp@@Base+0x124>
   197a4:	mov	r3, #0
   197a8:	str	r3, [r1]
   197ac:	sub	r3, r2, #161	; 0xa1
   197b0:	cmp	r3, #93	; 0x5d
   197b4:	bhi	19824 <myencoding_decode_euc_jp@@Base+0xe8>
   197b8:	cmp	r0, #161	; 0xa1
   197bc:	bcc	19824 <myencoding_decode_euc_jp@@Base+0xe8>
   197c0:	cmp	r0, #255	; 0xff
   197c4:	beq	19824 <myencoding_decode_euc_jp@@Base+0xe8>
   197c8:	ldr	ip, [r1, #20]
   197cc:	mov	r3, #0
   197d0:	str	r3, [r1, #20]
   197d4:	mov	r3, #94	; 0x5e
   197d8:	mla	r0, r2, r3, r0
   197dc:	movw	r2, #4356	; 0x1104
   197e0:	movt	r2, #65535	; 0xffff
   197e4:	add	r0, r2, r0, lsl #2
   197e8:	ldr	r2, [pc, #124]	; 1986c <myencoding_decode_euc_jp@@Base+0x130>
   197ec:	add	r2, pc, r2
   197f0:	ldr	r3, [pc, #120]	; 19870 <myencoding_decode_euc_jp@@Base+0x134>
   197f4:	add	r3, pc, r3
   197f8:	add	r3, r3, r0
   197fc:	cmp	ip, #0
   19800:	addeq	r3, r2, r0
   19804:	ldr	r0, [r3]
   19808:	str	r0, [r1, #12]
   1980c:	clz	r0, r0
   19810:	lsr	r2, r0, #5
   19814:	mov	r0, r2
   19818:	bx	lr
   1981c:	mov	r2, #0
   19820:	str	r2, [r1]
   19824:	sxtb	r2, r0
   19828:	cmp	r2, #0
   1982c:	strge	r0, [r1, #12]
   19830:	movge	r2, #0
   19834:	movge	r0, r2
   19838:	bxge	lr
   1983c:	and	r2, r0, #254	; 0xfe
   19840:	cmp	r2, #142	; 0x8e
   19844:	beq	1985c <myencoding_decode_euc_jp@@Base+0x120>
   19848:	mov	r2, #1
   1984c:	cmp	r0, #161	; 0xa1
   19850:	bcc	19864 <myencoding_decode_euc_jp@@Base+0x128>
   19854:	cmp	r0, #255	; 0xff
   19858:	beq	19864 <myencoding_decode_euc_jp@@Base+0x128>
   1985c:	str	r0, [r1]
   19860:	mov	r2, #2
   19864:	mov	r0, r2
   19868:	bx	lr
   1986c:	andeq	r7, r5, r8, lsl #23
   19870:	andeq	pc, r4, r0, ror r1	; <UNPREDICTABLE>

00019874 <myencoding_decode_iso_2022_jp@@Base>:
   19874:	ldr	r3, [r1, #4]
   19878:	mov	ip, #0
   1987c:	cmp	r3, #7
   19880:	bhi	19abc <myencoding_decode_iso_2022_jp@@Base+0x248>
   19884:	add	r2, pc, #4
   19888:	ldr	r3, [r2, r3, lsl #2]
   1988c:	add	pc, r2, r3
   19890:	andeq	r0, r0, r0, lsr #32
   19894:	andeq	r0, r0, r4, asr r0
   19898:	andeq	r0, r0, ip, lsr #4
   1989c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   198a0:	andeq	r0, r0, ip, ror #1
   198a4:	andeq	r0, r0, r0, lsl #2
   198a8:	andeq	r0, r0, ip, lsl r1
   198ac:	andeq	r0, r0, r0, lsr r1
   198b0:	cmp	r0, #27
   198b4:	beq	19984 <myencoding_decode_iso_2022_jp@@Base+0x110>
   198b8:	sxtb	r2, r0
   198bc:	cmp	r2, #0
   198c0:	blt	19934 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   198c4:	cmp	r0, #27
   198c8:	bhi	19af4 <myencoding_decode_iso_2022_jp@@Base+0x280>
   198cc:	mov	r2, #1
   198d0:	movw	r3, #49152	; 0xc000
   198d4:	movt	r3, #2048	; 0x800
   198d8:	tst	r3, r2, lsl r0
   198dc:	bne	19934 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   198e0:	b	19af4 <myencoding_decode_iso_2022_jp@@Base+0x280>
   198e4:	cmp	r0, #126	; 0x7e
   198e8:	beq	19ae8 <myencoding_decode_iso_2022_jp@@Base+0x274>
   198ec:	cmp	r0, #92	; 0x5c
   198f0:	beq	19af0 <myencoding_decode_iso_2022_jp@@Base+0x27c>
   198f4:	cmp	r0, #27
   198f8:	beq	19984 <myencoding_decode_iso_2022_jp@@Base+0x110>
   198fc:	sxtb	r2, r0
   19900:	cmp	r2, #0
   19904:	blt	19934 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19908:	cmp	r0, #27
   1990c:	bhi	19924 <myencoding_decode_iso_2022_jp@@Base+0xb0>
   19910:	mov	r2, #1
   19914:	movw	r3, #49152	; 0xc000
   19918:	movt	r3, #2048	; 0x800
   1991c:	tst	r3, r2, lsl r0
   19920:	bne	19934 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19924:	cmp	r0, #92	; 0x5c
   19928:	beq	19934 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1992c:	cmp	r0, #126	; 0x7e
   19930:	bne	19af4 <myencoding_decode_iso_2022_jp@@Base+0x280>
   19934:	mov	r0, #0
   19938:	str	r0, [r1, #20]
   1993c:	b	19adc <myencoding_decode_iso_2022_jp@@Base+0x268>
   19940:	cmp	r0, #27
   19944:	beq	19984 <myencoding_decode_iso_2022_jp@@Base+0x110>
   19948:	mov	r2, #0
   1994c:	str	r2, [r1, #20]
   19950:	sub	r2, r0, #33	; 0x21
   19954:	uxtb	r2, r2
   19958:	mov	ip, #1
   1995c:	cmp	r2, #62	; 0x3e
   19960:	bhi	19abc <myencoding_decode_iso_2022_jp@@Base+0x248>
   19964:	movw	r2, #65344	; 0xff40
   19968:	add	r0, r0, r2
   1996c:	str	r0, [r1, #12]
   19970:	mov	ip, #0
   19974:	mov	r0, ip
   19978:	bx	lr
   1997c:	cmp	r0, #27
   19980:	bne	19a34 <myencoding_decode_iso_2022_jp@@Base+0x1c0>
   19984:	mov	r0, #6
   19988:	str	r0, [r1, #4]
   1998c:	b	19a5c <myencoding_decode_iso_2022_jp@@Base+0x1e8>
   19990:	cmp	r0, #27
   19994:	bne	19a68 <myencoding_decode_iso_2022_jp@@Base+0x1f4>
   19998:	mov	r0, #6
   1999c:	str	r0, [r1, #4]
   199a0:	mov	ip, #3
   199a4:	mov	r0, ip
   199a8:	bx	lr
   199ac:	cmp	r0, #40	; 0x28
   199b0:	cmpne	r0, #36	; 0x24
   199b4:	bne	19acc <myencoding_decode_iso_2022_jp@@Base+0x258>
   199b8:	mov	r2, #7
   199bc:	b	19a54 <myencoding_decode_iso_2022_jp@@Base+0x1e0>
   199c0:	mov	r3, #0
   199c4:	str	r3, [r1, #4]
   199c8:	ldr	r2, [r1]
   199cc:	str	r3, [r1]
   199d0:	cmp	r0, #66	; 0x42
   199d4:	cmpeq	r2, #40	; 0x28
   199d8:	beq	19ac4 <myencoding_decode_iso_2022_jp@@Base+0x250>
   199dc:	cmp	r0, #74	; 0x4a
   199e0:	moveq	r3, #1
   199e4:	cmpeq	r2, #40	; 0x28
   199e8:	beq	19a14 <myencoding_decode_iso_2022_jp@@Base+0x1a0>
   199ec:	cmp	r0, #73	; 0x49
   199f0:	moveq	r3, #2
   199f4:	cmpeq	r2, #40	; 0x28
   199f8:	beq	19a14 <myencoding_decode_iso_2022_jp@@Base+0x1a0>
   199fc:	cmp	r2, #36	; 0x24
   19a00:	bne	19b08 <myencoding_decode_iso_2022_jp@@Base+0x294>
   19a04:	orr	r0, r0, #2
   19a08:	mov	r3, #4
   19a0c:	cmp	r0, #66	; 0x42
   19a10:	bne	19b08 <myencoding_decode_iso_2022_jp@@Base+0x294>
   19a14:	str	r3, [r1, #4]
   19a18:	str	r3, [r1, #8]
   19a1c:	ldr	r0, [r1, #20]
   19a20:	mov	ip, #1
   19a24:	str	ip, [r1, #20]
   19a28:	cmp	r0, #0
   19a2c:	movweq	ip, #2
   19a30:	b	19abc <myencoding_decode_iso_2022_jp@@Base+0x248>
   19a34:	mov	r2, #0
   19a38:	str	r2, [r1, #20]
   19a3c:	sub	r2, r0, #33	; 0x21
   19a40:	uxtb	r2, r2
   19a44:	mov	ip, #1
   19a48:	cmp	r2, #93	; 0x5d
   19a4c:	bhi	19abc <myencoding_decode_iso_2022_jp@@Base+0x248>
   19a50:	mov	r2, #5
   19a54:	str	r0, [r1]
   19a58:	str	r2, [r1, #4]
   19a5c:	mov	ip, #2
   19a60:	mov	r0, ip
   19a64:	bx	lr
   19a68:	mov	r2, #4
   19a6c:	str	r2, [r1, #4]
   19a70:	sub	r2, r0, #33	; 0x21
   19a74:	uxtb	r2, r2
   19a78:	mov	ip, #1
   19a7c:	cmp	r2, #93	; 0x5d
   19a80:	bhi	19abc <myencoding_decode_iso_2022_jp@@Base+0x248>
   19a84:	ldr	r2, [r1]
   19a88:	mov	r3, #94	; 0x5e
   19a8c:	mla	r0, r2, r3, r0
   19a90:	ldr	r2, [pc, #128]	; 19b18 <myencoding_decode_iso_2022_jp@@Base+0x2a4>
   19a94:	add	r2, pc, r2
   19a98:	add	r0, r2, r0, lsl #2
   19a9c:	movw	r2, #52996	; 0xcf04
   19aa0:	movt	r2, #65535	; 0xffff
   19aa4:	ldr	r0, [r0, r2]
   19aa8:	str	r0, [r1, #12]
   19aac:	clz	r0, r0
   19ab0:	lsr	ip, r0, #5
   19ab4:	mov	r0, ip
   19ab8:	bx	lr
   19abc:	mov	r0, ip
   19ac0:	bx	lr
   19ac4:	mov	r0, #0
   19ac8:	str	r0, [r1, #4]
   19acc:	mov	r0, #0
   19ad0:	str	r0, [r1, #20]
   19ad4:	ldr	r0, [r1, #8]
   19ad8:	str	r0, [r1, #4]
   19adc:	mov	ip, #1
   19ae0:	mov	r0, ip
   19ae4:	bx	lr
   19ae8:	movw	r0, #8254	; 0x203e
   19aec:	b	19af4 <myencoding_decode_iso_2022_jp@@Base+0x280>
   19af0:	mov	r0, #165	; 0xa5
   19af4:	str	r0, [r1, #12]
   19af8:	mov	ip, #0
   19afc:	str	ip, [r1, #20]
   19b00:	mov	r0, ip
   19b04:	bx	lr
   19b08:	ldr	r3, [r1, #4]
   19b0c:	cmp	r3, #0
   19b10:	bne	19a18 <myencoding_decode_iso_2022_jp@@Base+0x1a4>
   19b14:	b	19acc <myencoding_decode_iso_2022_jp@@Base+0x258>
   19b18:	andeq	r7, r5, r0, ror #17

00019b1c <myencoding_decode_shift_jis@@Base>:
   19b1c:	ldr	r2, [r1]
   19b20:	cmp	r2, #0
   19b24:	beq	19bb0 <myencoding_decode_shift_jis@@Base+0x94>
   19b28:	mov	ip, #193	; 0xc1
   19b2c:	cmp	r2, #160	; 0xa0
   19b30:	movwcc	ip, #129	; 0x81
   19b34:	sub	r3, r0, #64	; 0x40
   19b38:	uxtb	r3, r3
   19b3c:	cmp	r3, #63	; 0x3f
   19b40:	bcc	19b58 <myencoding_decode_shift_jis@@Base+0x3c>
   19b44:	sxtb	r3, r0
   19b48:	cmn	r3, #1
   19b4c:	bgt	19bec <myencoding_decode_shift_jis@@Base+0xd0>
   19b50:	cmp	r0, #252	; 0xfc
   19b54:	bhi	19bec <myencoding_decode_shift_jis@@Base+0xd0>
   19b58:	sub	r2, r2, ip
   19b5c:	mvn	r3, #64	; 0x40
   19b60:	cmp	r0, #127	; 0x7f
   19b64:	mvncc	r3, #63	; 0x3f
   19b68:	add	r0, r3, r0
   19b6c:	mov	r3, #188	; 0xbc
   19b70:	mla	r0, r2, r3, r0
   19b74:	cmp	r0, #0
   19b78:	beq	19bec <myencoding_decode_shift_jis@@Base+0xd0>
   19b7c:	ldr	r2, [pc, #172]	; 19c30 <myencoding_decode_shift_jis@@Base+0x114>
   19b80:	add	r2, pc, r2
   19b84:	ldr	r2, [r2, r0, lsl #2]
   19b88:	str	r2, [r1, #12]!
   19b8c:	movw	r3, #8836	; 0x2284
   19b90:	sub	ip, r0, r3
   19b94:	movw	r3, #1692	; 0x69c
   19b98:	cmp	ip, r3
   19b9c:	cmpls	r2, #0
   19ba0:	movweq	r2, #48508	; 0xbd7c
   19ba4:	addeq	r0, r0, r2
   19ba8:	streq	r0, [r1]
   19bac:	b	19bf4 <myencoding_decode_shift_jis@@Base+0xd8>
   19bb0:	sxtb	r2, r0
   19bb4:	cmn	r2, #1
   19bb8:	bgt	19bdc <myencoding_decode_shift_jis@@Base+0xc0>
   19bbc:	cmp	r0, #128	; 0x80
   19bc0:	beq	19bdc <myencoding_decode_shift_jis@@Base+0xc0>
   19bc4:	add	r2, r0, #95	; 0x5f
   19bc8:	uxtb	r2, r2
   19bcc:	cmp	r2, #62	; 0x3e
   19bd0:	bhi	19c08 <myencoding_decode_shift_jis@@Base+0xec>
   19bd4:	movw	r2, #65216	; 0xfec0
   19bd8:	add	r0, r0, r2
   19bdc:	str	r0, [r1, #12]
   19be0:	mov	r2, #0
   19be4:	mov	r0, r2
   19be8:	bx	lr
   19bec:	mov	r0, #0
   19bf0:	str	r0, [r1, #12]!
   19bf4:	ldr	r0, [r1]
   19bf8:	clz	r0, r0
   19bfc:	lsr	r2, r0, #5
   19c00:	mov	r0, r2
   19c04:	bx	lr
   19c08:	cmp	r0, #160	; 0xa0
   19c0c:	addcs	r3, r0, #32
   19c10:	movcs	r2, #1
   19c14:	uxtbcs	r3, r3
   19c18:	cmpcs	r3, #28
   19c1c:	bhi	19c28 <myencoding_decode_shift_jis@@Base+0x10c>
   19c20:	str	r0, [r1]
   19c24:	mov	r2, #2
   19c28:	mov	r0, r2
   19c2c:	bx	lr
   19c30:	strdeq	r7, [r5], -r4

00019c34 <myencoding_decode_euc_kr@@Base>:
   19c34:	ldr	r2, [r1]
   19c38:	cmp	r2, #0
   19c3c:	beq	19c88 <myencoding_decode_euc_kr@@Base+0x54>
   19c40:	mov	r3, #0
   19c44:	str	r3, [r1]
   19c48:	cmp	r0, #65	; 0x41
   19c4c:	bcc	19c74 <myencoding_decode_euc_kr@@Base+0x40>
   19c50:	cmp	r0, #255	; 0xff
   19c54:	movne	r3, #190	; 0xbe
   19c58:	mlane	r0, r2, r3, r0
   19c5c:	movwne	r2, #24575	; 0x5fff
   19c60:	subsne	r0, r0, r2
   19c64:	ldrne	r2, [pc, #80]	; 19cbc <myencoding_decode_euc_kr@@Base+0x88>
   19c68:	addne	r2, pc, r2
   19c6c:	ldrne	r0, [r2, r0, lsl #2]
   19c70:	strne	r0, [r1, #12]
   19c74:	ldr	r0, [r1, #12]
   19c78:	clz	r0, r0
   19c7c:	lsr	r2, r0, #5
   19c80:	mov	r0, r2
   19c84:	bx	lr
   19c88:	sxtb	r2, r0
   19c8c:	cmp	r2, #0
   19c90:	strge	r0, [r1, #12]
   19c94:	movge	r2, #0
   19c98:	movge	r0, r2
   19c9c:	bxge	lr
   19ca0:	mov	r2, #1
   19ca4:	cmp	r0, #128	; 0x80
   19ca8:	cmpne	r0, #255	; 0xff
   19cac:	strne	r0, [r1]
   19cb0:	movne	r2, #2
   19cb4:	mov	r0, r2
   19cb8:	bx	lr
   19cbc:	andeq	r2, r6, ip, asr #14

00019cc0 <myencoding_decode_shared_utf_16@@Base>:
   19cc0:	push	{fp, lr}
   19cc4:	mov	fp, sp
   19cc8:	ldr	r3, [r1]
   19ccc:	cmp	r3, #0
   19cd0:	streq	r0, [r1]
   19cd4:	moveq	r0, #2
   19cd8:	popeq	{fp, pc}
   19cdc:	ldr	r2, [r1, #20]
   19ce0:	cmp	r2, #0
   19ce4:	addeq	lr, r3, r0, lsl #8
   19ce8:	orrne	lr, r0, r3, lsl #8
   19cec:	mov	ip, #0
   19cf0:	str	ip, [r1]
   19cf4:	ldr	r3, [r1, #4]
   19cf8:	cmp	r3, #0
   19cfc:	beq	19d2c <myencoding_decode_shared_utf_16@@Base+0x6c>
   19d00:	str	ip, [r1, #4]
   19d04:	mov	r0, lr
   19d08:	bfc	r0, #0, #10
   19d0c:	cmp	r0, #56320	; 0xdc00
   19d10:	bne	19d5c <myencoding_decode_shared_utf_16@@Base+0x9c>
   19d14:	add	r0, lr, r3, lsl #10
   19d18:	sub	r0, r0, #252928	; 0x3dc00
   19d1c:	sub	r0, r0, #56360960	; 0x35c0000
   19d20:	str	r0, [r1, #12]
   19d24:	mov	r0, #0
   19d28:	pop	{fp, pc}
   19d2c:	mov	r2, lr
   19d30:	bfc	r2, #0, #10
   19d34:	cmp	r2, #56320	; 0xdc00
   19d38:	moveq	r0, #1
   19d3c:	popeq	{fp, pc}
   19d40:	cmp	r2, #55296	; 0xd800
   19d44:	streq	lr, [r1, #4]
   19d48:	moveq	r0, #2
   19d4c:	popeq	{fp, pc}
   19d50:	str	lr, [r1, #12]
   19d54:	mov	r0, #0
   19d58:	pop	{fp, pc}
   19d5c:	lsr	r3, lr, #8
   19d60:	cmp	r2, #0
   19d64:	beq	19d74 <myencoding_decode_shared_utf_16@@Base+0xb4>
   19d68:	uxtb	r0, lr
   19d6c:	uxtb	r2, r3
   19d70:	b	19d7c <myencoding_decode_shared_utf_16@@Base+0xbc>
   19d74:	uxtb	r0, r3
   19d78:	uxtb	r2, lr
   19d7c:	str	r2, [r1, #12]
   19d80:	str	r0, [r1, #16]
   19d84:	mov	r0, #5
   19d88:	pop	{fp, pc}

00019d8c <myencoding_decode_utf_16be@@Base>:
   19d8c:	ldr	r2, [r1, #20]
   19d90:	cmp	r2, #0
   19d94:	moveq	r2, #1
   19d98:	streq	r2, [r1, #20]
   19d9c:	b	19cc0 <myencoding_decode_shared_utf_16@@Base>

00019da0 <myencoding_decode_utf_16le@@Base>:
   19da0:	ldr	r2, [r1, #20]
   19da4:	cmp	r2, #0
   19da8:	movne	r2, #0
   19dac:	strne	r2, [r1, #20]
   19db0:	b	19cc0 <myencoding_decode_shared_utf_16@@Base>

00019db4 <myencoding_decode_x_user_defined@@Base>:
   19db4:	sxtb	r2, r0
   19db8:	cmn	r2, #1
   19dbc:	orrle	r0, r0, #63232	; 0xf700
   19dc0:	str	r0, [r1, #12]
   19dc4:	mov	r0, #0
   19dc8:	bx	lr

00019dcc <myencoding_result_clean@@Base>:
   19dcc:	mov	r1, #0
   19dd0:	vmov.i32	q8, #0	; 0x00000000
   19dd4:	str	r1, [r0, #16]
   19dd8:	mov	r2, #20
   19ddc:	vst1.32	{d16-d17}, [r0], r2
   19de0:	str	r1, [r0]
   19de4:	bx	lr

00019de8 <myencoding_codepoint_ascii_length@@Base>:
   19de8:	mov	r1, #1
   19dec:	cmp	r0, #128	; 0x80
   19df0:	bcc	19e08 <myencoding_codepoint_ascii_length@@Base+0x20>
   19df4:	mov	r1, #2
   19df8:	cmp	r0, #2048	; 0x800
   19dfc:	movcs	r1, #3
   19e00:	cmpcs	r0, #65536	; 0x10000
   19e04:	bcs	19e10 <myencoding_codepoint_ascii_length@@Base+0x28>
   19e08:	mov	r0, r1
   19e0c:	bx	lr
   19e10:	mov	r1, #4
   19e14:	cmp	r0, #2097152	; 0x200000
   19e18:	movcs	r1, #5
   19e1c:	cmpcs	r0, #67108864	; 0x4000000
   19e20:	bcc	19e08 <myencoding_codepoint_ascii_length@@Base+0x20>
   19e24:	mov	r1, #0
   19e28:	cmn	r0, #1
   19e2c:	movwgt	r1, #6
   19e30:	mov	r0, r1
   19e34:	bx	lr

00019e38 <myencoding_ascii_utf_8_length@@Base>:
   19e38:	sxtb	r2, r0
   19e3c:	mov	r1, #1
   19e40:	cmn	r2, #1
   19e44:	bgt	19e94 <myencoding_ascii_utf_8_length@@Base+0x5c>
   19e48:	and	r2, r0, #224	; 0xe0
   19e4c:	mov	r1, #2
   19e50:	cmp	r2, #192	; 0xc0
   19e54:	beq	19e94 <myencoding_ascii_utf_8_length@@Base+0x5c>
   19e58:	and	r2, r0, #240	; 0xf0
   19e5c:	mov	r1, #3
   19e60:	cmp	r2, #224	; 0xe0
   19e64:	beq	19e94 <myencoding_ascii_utf_8_length@@Base+0x5c>
   19e68:	and	r2, r0, #248	; 0xf8
   19e6c:	mov	r1, #4
   19e70:	cmp	r2, #240	; 0xf0
   19e74:	beq	19e94 <myencoding_ascii_utf_8_length@@Base+0x5c>
   19e78:	and	r2, r0, #252	; 0xfc
   19e7c:	mov	r1, #5
   19e80:	cmp	r2, #248	; 0xf8
   19e84:	beq	19e94 <myencoding_ascii_utf_8_length@@Base+0x5c>
   19e88:	mov	r1, #0
   19e8c:	cmp	r0, #252	; 0xfc
   19e90:	movweq	r1, #6
   19e94:	mov	r0, r1
   19e98:	bx	lr

00019e9c <myencoding_codepoint_to_ascii_utf_8@@Base>:
   19e9c:	cmp	r0, #127	; 0x7f
   19ea0:	strbls	r0, [r1]
   19ea4:	movls	r2, #1
   19ea8:	movls	r0, r2
   19eac:	bxls	lr
   19eb0:	mov	r2, #0
   19eb4:	cmp	r2, r0, lsr #11
   19eb8:	bne	19ee0 <myencoding_codepoint_to_ascii_utf_8@@Base+0x44>
   19ebc:	mov	r2, #2
   19ec0:	mov	r3, r0
   19ec4:	bfi	r3, r2, #6, #26
   19ec8:	strb	r3, [r1, #1]
   19ecc:	mov	r3, #192	; 0xc0
   19ed0:	orr	r0, r3, r0, lsr #6
   19ed4:	strb	r0, [r1]
   19ed8:	mov	r0, r2
   19edc:	bx	lr
   19ee0:	cmp	r2, r0, lsr #16
   19ee4:	bne	19f18 <myencoding_codepoint_to_ascii_utf_8@@Base+0x7c>
   19ee8:	mov	r2, #224	; 0xe0
   19eec:	orr	r2, r2, r0, lsr #12
   19ef0:	strb	r2, [r1]
   19ef4:	mov	r2, #2
   19ef8:	lsr	r3, r0, #6
   19efc:	bfi	r0, r2, #6, #26
   19f00:	strb	r0, [r1, #2]
   19f04:	bfi	r3, r2, #6, #26
   19f08:	strb	r3, [r1, #1]
   19f0c:	mov	r2, #3
   19f10:	mov	r0, r2
   19f14:	bx	lr
   19f18:	mov	r2, #0
   19f1c:	cmp	r2, r0, lsr #21
   19f20:	bne	19f5c <myencoding_codepoint_to_ascii_utf_8@@Base+0xc0>
   19f24:	mov	r2, #240	; 0xf0
   19f28:	orr	r2, r2, r0, lsr #18
   19f2c:	strb	r2, [r1]
   19f30:	mov	r2, #2
   19f34:	mov	r3, r0
   19f38:	bfi	r3, r2, #6, #26
   19f3c:	strb	r3, [r1, #3]
   19f40:	lsr	r3, r0, #12
   19f44:	bfi	r3, r2, #6, #26
   19f48:	strb	r3, [r1, #1]
   19f4c:	lsr	r0, r0, #6
   19f50:	bfi	r0, r2, #6, #26
   19f54:	strb	r0, [r1, #2]
   19f58:	mov	r2, #4
   19f5c:	mov	r0, r2
   19f60:	bx	lr

00019f64 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   19f64:	cmp	r0, #127	; 0x7f
   19f68:	bhi	19f88 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   19f6c:	ldr	r2, [pc, #200]	; 1a03c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd8>
   19f70:	add	r2, pc, r2
   19f74:	ldrb	r0, [r2, r0]
   19f78:	strb	r0, [r1]
   19f7c:	mov	r2, #1
   19f80:	mov	r0, r2
   19f84:	bx	lr
   19f88:	mov	r2, #0
   19f8c:	cmp	r2, r0, lsr #11
   19f90:	bne	19fb8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x54>
   19f94:	mov	r2, #2
   19f98:	mov	r3, r0
   19f9c:	bfi	r3, r2, #6, #26
   19fa0:	strb	r3, [r1, #1]
   19fa4:	mov	r3, #192	; 0xc0
   19fa8:	orr	r0, r3, r0, lsr #6
   19fac:	strb	r0, [r1]
   19fb0:	mov	r0, r2
   19fb4:	bx	lr
   19fb8:	cmp	r2, r0, lsr #16
   19fbc:	bne	19ff0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x8c>
   19fc0:	mov	r2, #224	; 0xe0
   19fc4:	orr	r2, r2, r0, lsr #12
   19fc8:	strb	r2, [r1]
   19fcc:	mov	r2, #2
   19fd0:	lsr	r3, r0, #6
   19fd4:	bfi	r0, r2, #6, #26
   19fd8:	strb	r0, [r1, #2]
   19fdc:	bfi	r3, r2, #6, #26
   19fe0:	strb	r3, [r1, #1]
   19fe4:	mov	r2, #3
   19fe8:	mov	r0, r2
   19fec:	bx	lr
   19ff0:	mov	r2, #0
   19ff4:	cmp	r2, r0, lsr #21
   19ff8:	bne	1a034 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd0>
   19ffc:	mov	r2, #240	; 0xf0
   1a000:	orr	r2, r2, r0, lsr #18
   1a004:	strb	r2, [r1]
   1a008:	mov	r2, #2
   1a00c:	mov	r3, r0
   1a010:	bfi	r3, r2, #6, #26
   1a014:	strb	r3, [r1, #3]
   1a018:	lsr	r3, r0, #12
   1a01c:	bfi	r3, r2, #6, #26
   1a020:	strb	r3, [r1, #1]
   1a024:	lsr	r0, r0, #6
   1a028:	bfi	r0, r2, #6, #26
   1a02c:	strb	r0, [r1, #2]
   1a030:	mov	r2, #4
   1a034:	mov	r0, r2
   1a038:	bx	lr
   1a03c:	strdeq	lr, [r4], -r4

0001a040 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   1a040:	ldrsb	r2, [r0]
   1a044:	uxtb	r3, r2
   1a048:	cmn	r2, #1
   1a04c:	ble	1a058 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   1a050:	mov	r2, #1
   1a054:	b	1a0f8 <myencoding_ascii_utf_8_to_codepoint@@Base+0xb8>
   1a058:	and	r2, r3, #224	; 0xe0
   1a05c:	cmp	r2, #192	; 0xc0
   1a060:	bne	1a078 <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   1a064:	mov	r2, #4032	; 0xfc0
   1a068:	and	r3, r2, r3, lsl #6
   1a06c:	mov	r2, #2
   1a070:	mov	ip, #1
   1a074:	b	1a0e8 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1a078:	and	r2, r3, #240	; 0xf0
   1a07c:	cmp	r2, #224	; 0xe0
   1a080:	bne	1a0a8 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   1a084:	mov	r2, #126976	; 0x1f000
   1a088:	and	r2, r2, r3, lsl #12
   1a08c:	str	r2, [r1]
   1a090:	ldrb	r3, [r0, #1]
   1a094:	and	r3, r3, #127	; 0x7f
   1a098:	orr	r3, r2, r3, lsl #6
   1a09c:	mov	r2, #3
   1a0a0:	mov	ip, #2
   1a0a4:	b	1a0e8 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1a0a8:	and	ip, r3, #248	; 0xf8
   1a0ac:	mov	r2, #0
   1a0b0:	cmp	ip, #240	; 0xf0
   1a0b4:	bne	1a0fc <myencoding_ascii_utf_8_to_codepoint@@Base+0xbc>
   1a0b8:	mov	r2, #3932160	; 0x3c0000
   1a0bc:	and	r2, r2, r3, lsl #18
   1a0c0:	str	r2, [r1]
   1a0c4:	ldrb	r3, [r0, #1]
   1a0c8:	and	r3, r3, #127	; 0x7f
   1a0cc:	orr	r2, r2, r3, lsl #12
   1a0d0:	str	r2, [r1]
   1a0d4:	ldrb	r3, [r0, #2]
   1a0d8:	and	r3, r3, #127	; 0x7f
   1a0dc:	orr	r3, r2, r3, lsl #6
   1a0e0:	mov	r2, #4
   1a0e4:	mov	ip, #3
   1a0e8:	str	r3, [r1]
   1a0ec:	ldrb	r0, [r0, ip]
   1a0f0:	and	r0, r0, #127	; 0x7f
   1a0f4:	orr	r3, r3, r0
   1a0f8:	str	r3, [r1]
   1a0fc:	mov	r0, r2
   1a100:	bx	lr

0001a104 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1a104:	cmp	r0, #65536	; 0x10000
   1a108:	bcc	1a140 <myencoding_codepoint_to_ascii_utf_16@@Base+0x3c>
   1a10c:	sub	r0, r0, #65536	; 0x10000
   1a110:	lsr	r2, r0, #10
   1a114:	strb	r2, [r1, #1]
   1a118:	mov	r2, #216	; 0xd8
   1a11c:	orr	r2, r2, r0, lsr #18
   1a120:	strb	r2, [r1]
   1a124:	lsr	r2, r0, #8
   1a128:	mov	r3, #55	; 0x37
   1a12c:	bfi	r2, r3, #2, #30
   1a130:	strb	r2, [r1, #2]
   1a134:	mov	r2, #4
   1a138:	mov	r3, #3
   1a13c:	b	1a150 <myencoding_codepoint_to_ascii_utf_16@@Base+0x4c>
   1a140:	lsr	r2, r0, #8
   1a144:	strb	r2, [r1]
   1a148:	mov	r2, #2
   1a14c:	mov	r3, #1
   1a150:	strb	r0, [r1, r3]
   1a154:	mov	r0, r2
   1a158:	bx	lr

0001a15c <myencoding_convert_to_ascii_utf_8@@Base>:
   1a15c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a160:	add	fp, sp, #28
   1a164:	sub	sp, sp, #36	; 0x24
   1a168:	mov	r5, r3
   1a16c:	mov	sl, r2
   1a170:	mov	r8, r1
   1a174:	mov	r6, r0
   1a178:	ldr	r0, [r0]
   1a17c:	cmp	r0, #0
   1a180:	bne	1a1a0 <myencoding_convert_to_ascii_utf_8@@Base+0x44>
   1a184:	mov	r7, #0
   1a188:	add	r0, sl, #1
   1a18c:	stmib	r6, {r0, r7}
   1a190:	bl	12050 <mycore_malloc@plt>
   1a194:	str	r0, [r6]
   1a198:	cmp	r0, #0
   1a19c:	beq	1a254 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   1a1a0:	vmov.i32	q8, #0	; 0x00000000
   1a1a4:	mov	r0, #20
   1a1a8:	add	r1, sp, #8
   1a1ac:	vst1.64	{d16-d17}, [r1], r0
   1a1b0:	mov	r7, #0
   1a1b4:	str	r7, [r1]
   1a1b8:	str	r7, [sp, #24]
   1a1bc:	mov	r0, r5
   1a1c0:	bl	11c48 <myencoding_get_function_by_id@plt>
   1a1c4:	cmp	sl, #0
   1a1c8:	beq	1a254 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   1a1cc:	mov	r5, r0
   1a1d0:	lsr	r0, sl, #1
   1a1d4:	str	r0, [sp, #4]
   1a1d8:	mov	r7, #0
   1a1dc:	add	r9, sp, #8
   1a1e0:	ldrb	r0, [r8, r7]
   1a1e4:	mov	r1, r9
   1a1e8:	blx	r5
   1a1ec:	cmp	r0, #0
   1a1f0:	bne	1a248 <myencoding_convert_to_ascii_utf_8@@Base+0xec>
   1a1f4:	ldr	r1, [r6, #4]
   1a1f8:	ldr	r0, [r6, #8]
   1a1fc:	add	r0, r0, #6
   1a200:	cmp	r0, r1
   1a204:	bcc	1a228 <myencoding_convert_to_ascii_utf_8@@Base+0xcc>
   1a208:	ldr	r1, [sp, #4]
   1a20c:	add	r4, r0, r1
   1a210:	ldr	r0, [r6]
   1a214:	mov	r1, r4
   1a218:	bl	110b4 <mycore_realloc@plt>
   1a21c:	cmp	r0, #0
   1a220:	beq	1a260 <myencoding_convert_to_ascii_utf_8@@Base+0x104>
   1a224:	stm	r6, {r0, r4}
   1a228:	ldr	r1, [r6]
   1a22c:	ldr	r2, [r6, #8]
   1a230:	ldr	r0, [sp, #20]
   1a234:	add	r1, r1, r2
   1a238:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a23c:	ldr	r1, [r6, #8]
   1a240:	add	r0, r1, r0
   1a244:	str	r0, [r6, #8]
   1a248:	add	r7, r7, #1
   1a24c:	cmp	r7, sl
   1a250:	bcc	1a1e0 <myencoding_convert_to_ascii_utf_8@@Base+0x84>
   1a254:	mov	r0, r7
   1a258:	sub	sp, fp, #28
   1a25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a260:	mov	r7, #0
   1a264:	b	1a254 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>

0001a268 <myencoding_string_append@@Base>:
   1a268:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a26c:	add	fp, sp, #24
   1a270:	sub	sp, sp, #32
   1a274:	mov	r4, r3
   1a278:	mov	r5, r2
   1a27c:	mov	r6, r1
   1a280:	mov	r7, r0
   1a284:	add	r8, sp, #8
   1a288:	mov	r0, r8
   1a28c:	bl	1163c <myencoding_result_clean@plt>
   1a290:	str	r4, [sp]
   1a294:	mov	r0, r7
   1a298:	mov	r1, r8
   1a29c:	mov	r2, r6
   1a2a0:	mov	r3, r5
   1a2a4:	bl	110f0 <myencoding_string_append_chunk@plt>
   1a2a8:	sub	sp, fp, #24
   1a2ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a2b0 <myencoding_string_append_chunk@@Base>:
   1a2b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a2b4:	add	fp, sp, #24
   1a2b8:	mov	r5, r3
   1a2bc:	mov	r6, r2
   1a2c0:	mov	r7, r1
   1a2c4:	mov	r4, r0
   1a2c8:	ldr	r0, [fp, #8]
   1a2cc:	bl	11c48 <myencoding_get_function_by_id@plt>
   1a2d0:	cmp	r5, #0
   1a2d4:	beq	1a334 <myencoding_string_append_chunk@@Base+0x84>
   1a2d8:	mov	r8, r0
   1a2dc:	ldrb	r0, [r6]
   1a2e0:	mov	r1, r7
   1a2e4:	blx	r8
   1a2e8:	cmp	r0, #0
   1a2ec:	bne	1a328 <myencoding_string_append_chunk@@Base+0x78>
   1a2f0:	ldmib	r4, {r0, r1}
   1a2f4:	add	r1, r1, #5
   1a2f8:	cmp	r1, r0
   1a2fc:	bcc	1a308 <myencoding_string_append_chunk@@Base+0x58>
   1a300:	mov	r0, r4
   1a304:	bl	11d80 <mycore_string_realloc@plt>
   1a308:	ldr	r0, [r7, #12]
   1a30c:	ldr	r1, [r4]
   1a310:	ldr	r2, [r4, #8]
   1a314:	add	r1, r1, r2
   1a318:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a31c:	ldr	r1, [r4, #8]
   1a320:	add	r0, r1, r0
   1a324:	str	r0, [r4, #8]
   1a328:	subs	r5, r5, #1
   1a32c:	add	r6, r6, #1
   1a330:	bne	1a2dc <myencoding_string_append_chunk@@Base+0x2c>
   1a334:	ldr	r1, [r4, #4]
   1a338:	ldr	r0, [r4, #8]
   1a33c:	cmp	r0, r1
   1a340:	bcc	1a350 <myencoding_string_append_chunk@@Base+0xa0>
   1a344:	add	r1, r0, #1
   1a348:	mov	r0, r4
   1a34c:	bl	11d80 <mycore_string_realloc@plt>
   1a350:	ldr	r0, [r4]
   1a354:	ldr	r1, [r4, #8]
   1a358:	mov	r2, #0
   1a35c:	strb	r2, [r0, r1]
   1a360:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a364 <myencoding_string_append_one@@Base>:
   1a364:	push	{r4, r5, r6, sl, fp, lr}
   1a368:	add	fp, sp, #16
   1a36c:	mov	r6, r2
   1a370:	mov	r5, r1
   1a374:	mov	r4, r0
   1a378:	mov	r0, r3
   1a37c:	bl	11c48 <myencoding_get_function_by_id@plt>
   1a380:	mov	r2, r0
   1a384:	mov	r0, r6
   1a388:	mov	r1, r5
   1a38c:	blx	r2
   1a390:	cmp	r0, #0
   1a394:	popne	{r4, r5, r6, sl, fp, pc}
   1a398:	ldmib	r4, {r0, r1}
   1a39c:	add	r1, r1, #5
   1a3a0:	cmp	r1, r0
   1a3a4:	bcc	1a3b0 <myencoding_string_append_one@@Base+0x4c>
   1a3a8:	mov	r0, r4
   1a3ac:	bl	11d80 <mycore_string_realloc@plt>
   1a3b0:	ldr	r0, [r5, #12]
   1a3b4:	ldr	r1, [r4]
   1a3b8:	ldr	r2, [r4, #8]
   1a3bc:	add	r1, r1, r2
   1a3c0:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a3c4:	ldr	r1, [r4]
   1a3c8:	ldr	r2, [r4, #8]
   1a3cc:	add	r0, r2, r0
   1a3d0:	str	r0, [r4, #8]
   1a3d4:	mov	r2, #0
   1a3d8:	strb	r2, [r1, r0]
   1a3dc:	pop	{r4, r5, r6, sl, fp, pc}

0001a3e0 <myencoding_string_append_lowercase_ascii@@Base>:
   1a3e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a3e4:	add	fp, sp, #24
   1a3e8:	sub	sp, sp, #32
   1a3ec:	mov	r4, r3
   1a3f0:	mov	r5, r2
   1a3f4:	mov	r6, r1
   1a3f8:	mov	r7, r0
   1a3fc:	add	r8, sp, #8
   1a400:	mov	r0, r8
   1a404:	bl	1163c <myencoding_result_clean@plt>
   1a408:	str	r4, [sp]
   1a40c:	mov	r0, r7
   1a410:	mov	r1, r8
   1a414:	mov	r2, r6
   1a418:	mov	r3, r5
   1a41c:	bl	12044 <myencoding_string_append_chunk_lowercase_ascii@plt>
   1a420:	sub	sp, fp, #24
   1a424:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a428 <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1a428:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a42c:	add	fp, sp, #24
   1a430:	mov	r5, r3
   1a434:	mov	r6, r2
   1a438:	mov	r7, r1
   1a43c:	mov	r4, r0
   1a440:	ldr	r0, [fp, #8]
   1a444:	bl	11c48 <myencoding_get_function_by_id@plt>
   1a448:	cmp	r5, #0
   1a44c:	beq	1a4d8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb0>
   1a450:	mov	r8, r0
   1a454:	ldr	r9, [pc, #172]	; 1a508 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe0>
   1a458:	add	r9, pc, r9
   1a45c:	ldrb	r0, [r6]
   1a460:	mov	r1, r7
   1a464:	blx	r8
   1a468:	cmp	r0, #0
   1a46c:	bne	1a4cc <myencoding_string_append_chunk_lowercase_ascii@@Base+0xa4>
   1a470:	ldr	r1, [r4, #4]
   1a474:	ldr	r0, [r4, #8]
   1a478:	add	r2, r0, #5
   1a47c:	cmp	r2, r1
   1a480:	bcc	1a490 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x68>
   1a484:	add	r1, r0, #6
   1a488:	mov	r0, r4
   1a48c:	bl	11d80 <mycore_string_realloc@plt>
   1a490:	ldr	r0, [r7, #12]
   1a494:	ldr	r1, [r4]
   1a498:	ldr	r2, [r4, #8]
   1a49c:	add	r1, r1, r2
   1a4a0:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a4a4:	cmp	r0, #1
   1a4a8:	bne	1a4c0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x98>
   1a4ac:	ldrb	r1, [r6]
   1a4b0:	ldrb	r1, [r9, r1]
   1a4b4:	ldr	r2, [r4]
   1a4b8:	ldr	r3, [r4, #8]
   1a4bc:	strb	r1, [r2, r3]
   1a4c0:	ldr	r1, [r4, #8]
   1a4c4:	add	r0, r1, r0
   1a4c8:	str	r0, [r4, #8]
   1a4cc:	subs	r5, r5, #1
   1a4d0:	add	r6, r6, #1
   1a4d4:	bne	1a45c <myencoding_string_append_chunk_lowercase_ascii@@Base+0x34>
   1a4d8:	ldr	r1, [r4, #4]
   1a4dc:	ldr	r0, [r4, #8]
   1a4e0:	cmp	r0, r1
   1a4e4:	bcc	1a4f4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xcc>
   1a4e8:	add	r1, r0, #1
   1a4ec:	mov	r0, r4
   1a4f0:	bl	11d80 <mycore_string_realloc@plt>
   1a4f4:	ldr	r0, [r4]
   1a4f8:	ldr	r1, [r4, #8]
   1a4fc:	mov	r2, #0
   1a500:	strb	r2, [r0, r1]
   1a504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a508:	andeq	r9, r7, ip, ror #10

0001a50c <myhtml_callback_before_token_done@@Base>:
   1a50c:	ldr	r0, [r0, #220]	; 0xdc
   1a510:	bx	lr

0001a514 <myhtml_callback_after_token_done@@Base>:
   1a514:	ldr	r0, [r0, #224]	; 0xe0
   1a518:	bx	lr

0001a51c <myhtml_callback_before_token_done_set@@Base>:
   1a51c:	str	r2, [r0, #228]	; 0xe4
   1a520:	str	r1, [r0, #220]	; 0xdc
   1a524:	bx	lr

0001a528 <myhtml_callback_after_token_done_set@@Base>:
   1a528:	str	r2, [r0, #232]	; 0xe8
   1a52c:	str	r1, [r0, #224]	; 0xe0
   1a530:	bx	lr

0001a534 <myhtml_callback_tree_node_insert@@Base>:
   1a534:	ldr	r0, [r0, #236]	; 0xec
   1a538:	bx	lr

0001a53c <myhtml_callback_tree_node_remove@@Base>:
   1a53c:	ldr	r0, [r0, #240]	; 0xf0
   1a540:	bx	lr

0001a544 <myhtml_callback_tree_node_insert_set@@Base>:
   1a544:	str	r2, [r0, #244]	; 0xf4
   1a548:	str	r1, [r0, #236]	; 0xec
   1a54c:	bx	lr

0001a550 <myhtml_callback_tree_node_remove_set@@Base>:
   1a550:	str	r2, [r0, #248]	; 0xf8
   1a554:	str	r1, [r0, #240]	; 0xf0
   1a558:	bx	lr

0001a55c <myhtml_charef_find@@Base>:
   1a55c:	push	{r4, r5, r6, r7, fp, lr}
   1a560:	add	fp, sp, #16
   1a564:	mov	ip, r0
   1a568:	ldrb	r4, [r0]
   1a56c:	add	r5, r4, r4, lsl #1
   1a570:	ldr	lr, [pc, #144]	; 1a608 <myhtml_charef_find@@Base+0xac>
   1a574:	add	lr, pc, lr
   1a578:	b	1a580 <myhtml_charef_find@@Base+0x24>
   1a57c:	add	r5, r4, r4, lsl #1
   1a580:	mov	r0, lr
   1a584:	ldrb	r5, [r0, r5, lsl #3]!
   1a588:	cmp	r5, #0
   1a58c:	beq	1a5dc <myhtml_charef_find@@Base+0x80>
   1a590:	ldr	r6, [r1]
   1a594:	ldrb	r7, [ip, r6]
   1a598:	uxtb	r5, r5
   1a59c:	cmp	r5, r7
   1a5a0:	bne	1a5cc <myhtml_charef_find@@Base+0x70>
   1a5a4:	add	r6, r6, #1
   1a5a8:	str	r6, [r1]
   1a5ac:	add	r4, r4, r4, lsl #1
   1a5b0:	add	r5, lr, r4, lsl #3
   1a5b4:	cmp	r6, r2
   1a5b8:	bcs	1a5f8 <myhtml_charef_find@@Base+0x9c>
   1a5bc:	ldr	r4, [r5, #4]
   1a5c0:	cmp	r4, #0
   1a5c4:	bne	1a57c <myhtml_charef_find@@Base+0x20>
   1a5c8:	b	1a5f8 <myhtml_charef_find@@Base+0x9c>
   1a5cc:	cmp	r7, r5
   1a5d0:	bls	1a5dc <myhtml_charef_find@@Base+0x80>
   1a5d4:	add	r4, r4, #1
   1a5d8:	b	1a57c <myhtml_charef_find@@Base+0x20>
   1a5dc:	cmp	r3, #0
   1a5e0:	popeq	{r4, r5, r6, r7, fp, pc}
   1a5e4:	add	r1, r4, r4, lsl #1
   1a5e8:	add	r1, lr, r1, lsl #3
   1a5ec:	ldr	r1, [r1, #20]
   1a5f0:	str	r1, [r3]
   1a5f4:	pop	{r4, r5, r6, r7, fp, pc}
   1a5f8:	cmp	r3, #0
   1a5fc:	beq	1a5f4 <myhtml_charef_find@@Base+0x98>
   1a600:	ldr	r1, [r5, #20]
   1a604:	b	1a5f0 <myhtml_charef_find@@Base+0x94>
   1a608:	andeq	r9, r7, r0, asr r5

0001a60c <myhtml_charef_get_first_position@@Base>:
   1a60c:	add	r0, r0, r0, lsl #1
   1a610:	ldr	r1, [pc, #8]	; 1a620 <myhtml_charef_get_first_position@@Base+0x14>
   1a614:	add	r1, pc, r1
   1a618:	add	r0, r1, r0, lsl #3
   1a61c:	bx	lr
   1a620:			; <UNDEFINED> instruction: 0x000794b0

0001a624 <myhtml_charef_find_by_pos@@Base>:
   1a624:	push	{r4, r5, r6, r7, fp, lr}
   1a628:	add	fp, sp, #16
   1a62c:	mov	ip, r0
   1a630:	ldr	r0, [r2]
   1a634:	ldrb	r0, [r1, r0]
   1a638:	ldr	lr, [fp, #8]
   1a63c:	cmp	r0, #38	; 0x26
   1a640:	bne	1a678 <myhtml_charef_find_by_pos@@Base+0x54>
   1a644:	mov	r0, #1
   1a648:	str	r0, [lr, #12]
   1a64c:	ldr	r0, [lr]
   1a650:	ldr	r1, [r0, #20]
   1a654:	cmp	r1, #0
   1a658:	popne	{r4, r5, r6, r7, fp, pc}
   1a65c:	ldr	r0, [lr, #4]
   1a660:	cmp	r0, #0
   1a664:	ldreq	r0, [pc, #276]	; 1a780 <myhtml_charef_find_by_pos@@Base+0x15c>
   1a668:	addeq	r0, pc, r0
   1a66c:	ldrne	r1, [lr, #8]
   1a670:	strne	r1, [r2]
   1a674:	pop	{r4, r5, r6, r7, fp, pc}
   1a678:	mov	r0, #0
   1a67c:	str	r0, [lr, #12]
   1a680:	add	r5, ip, ip, lsl #1
   1a684:	ldr	r4, [pc, #248]	; 1a784 <myhtml_charef_find_by_pos@@Base+0x160>
   1a688:	add	r4, pc, r4
   1a68c:	b	1a694 <myhtml_charef_find_by_pos@@Base+0x70>
   1a690:	add	r5, ip, ip, lsl #1
   1a694:	mov	r0, r4
   1a698:	ldrb	r5, [r0, r5, lsl #3]!
   1a69c:	cmp	r5, #0
   1a6a0:	beq	1a718 <myhtml_charef_find_by_pos@@Base+0xf4>
   1a6a4:	ldr	r6, [r2]
   1a6a8:	ldrb	r7, [r1, r6]
   1a6ac:	uxtb	r5, r5
   1a6b0:	cmp	r5, r7
   1a6b4:	bne	1a708 <myhtml_charef_find_by_pos@@Base+0xe4>
   1a6b8:	cmp	r7, #59	; 0x3b
   1a6bc:	beq	1a73c <myhtml_charef_find_by_pos@@Base+0x118>
   1a6c0:	add	r5, r6, #1
   1a6c4:	str	r5, [r2]
   1a6c8:	add	r7, ip, ip, lsl #1
   1a6cc:	add	r6, r4, r7, lsl #3
   1a6d0:	ldr	ip, [r6, #4]
   1a6d4:	cmp	ip, #0
   1a6d8:	beq	1a740 <myhtml_charef_find_by_pos@@Base+0x11c>
   1a6dc:	cmp	r5, r3
   1a6e0:	bcs	1a74c <myhtml_charef_find_by_pos@@Base+0x128>
   1a6e4:	ldrb	r7, [r1, r5]
   1a6e8:	cmp	r7, #38	; 0x26
   1a6ec:	beq	1a764 <myhtml_charef_find_by_pos@@Base+0x140>
   1a6f0:	ldr	r6, [r6, #20]
   1a6f4:	cmp	r6, #0
   1a6f8:	beq	1a690 <myhtml_charef_find_by_pos@@Base+0x6c>
   1a6fc:	stmib	lr, {r0, r5}
   1a700:	add	r5, ip, ip, lsl #1
   1a704:	b	1a694 <myhtml_charef_find_by_pos@@Base+0x70>
   1a708:	cmp	r7, r5
   1a70c:	bls	1a718 <myhtml_charef_find_by_pos@@Base+0xf4>
   1a710:	add	ip, ip, #1
   1a714:	b	1a690 <myhtml_charef_find_by_pos@@Base+0x6c>
   1a718:	mov	r0, #1
   1a71c:	str	r0, [lr, #12]
   1a720:	ldr	r1, [lr, #4]
   1a724:	cmp	r1, #0
   1a728:	mov	r0, r4
   1a72c:	ldrne	r0, [lr, #8]
   1a730:	strne	r0, [r2]
   1a734:	movne	r0, r1
   1a738:	pop	{r4, r5, r6, r7, fp, pc}
   1a73c:	str	r0, [lr]
   1a740:	mov	r1, #1
   1a744:	str	r1, [lr, #12]
   1a748:	pop	{r4, r5, r6, r7, fp, pc}
   1a74c:	str	r0, [lr]
   1a750:	ldr	r1, [r6, #20]
   1a754:	cmp	r1, #0
   1a758:	stmibne	lr, {r0, r5}
   1a75c:	popne	{r4, r5, r6, r7, fp, pc}
   1a760:	pop	{r4, r5, r6, r7, fp, pc}
   1a764:	str	r0, [lr]
   1a768:	mov	r1, #1
   1a76c:	str	r1, [lr, #12]
   1a770:	ldr	r1, [r6, #20]
   1a774:	cmp	r1, #0
   1a778:	bne	1a738 <myhtml_charef_find_by_pos@@Base+0x114>
   1a77c:	b	1a720 <myhtml_charef_find_by_pos@@Base+0xfc>
   1a780:	andeq	r9, r7, ip, asr r4
   1a784:	andeq	r9, r7, ip, lsr r4

0001a788 <myhtml_data_process_entry_clean@@Base>:
   1a788:	vmov.i32	q8, #0	; 0x00000000
   1a78c:	add	r1, r0, #48	; 0x30
   1a790:	vst1.32	{d16-d17}, [r1]
   1a794:	add	r1, r0, #36	; 0x24
   1a798:	vst1.32	{d16-d17}, [r1]
   1a79c:	add	r1, r0, #4
   1a7a0:	vst1.32	{d16-d17}, [r1]
   1a7a4:	ldr	r1, [pc, #12]	; 1a7b8 <myhtml_data_process_entry_clean@@Base+0x30>
   1a7a8:	ldr	r1, [pc, r1]
   1a7ac:	str	r1, [r0], #20
   1a7b0:	vst1.32	{d16-d17}, [r0]
   1a7b4:	bx	lr
   1a7b8:	muleq	pc, r8, r1	; <UNPREDICTABLE>

0001a7bc <myhtml_data_process_state_data@@Base>:
   1a7bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7c0:	add	fp, sp, #28
   1a7c4:	sub	sp, sp, #12
   1a7c8:	mov	r4, r3
   1a7cc:	mov	r9, r2
   1a7d0:	mov	r8, r1
   1a7d4:	mov	sl, r0
   1a7d8:	ldr	r0, [fp, #8]
   1a7dc:	cmp	r3, r0
   1a7e0:	mov	r6, r3
   1a7e4:	bcs	1a80c <myhtml_data_process_state_data@@Base+0x50>
   1a7e8:	add	r7, r9, r4
   1a7ec:	mov	r5, #0
   1a7f0:	ldrb	r1, [r7, r5]
   1a7f4:	cmp	r1, #38	; 0x26
   1a7f8:	beq	1a858 <myhtml_data_process_state_data@@Base+0x9c>
   1a7fc:	add	r5, r5, #1
   1a800:	add	r6, r4, r5
   1a804:	cmp	r6, r0
   1a808:	bcc	1a7f0 <myhtml_data_process_state_data@@Base+0x34>
   1a80c:	add	r1, r9, r4
   1a810:	sub	r2, r6, r4
   1a814:	ldr	r3, [sl, #32]
   1a818:	mov	r0, r8
   1a81c:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1a820:	add	r0, r0, r4
   1a824:	cmp	r6, r0
   1a828:	beq	1a910 <myhtml_data_process_state_data@@Base+0x154>
   1a82c:	ldr	r1, [sl, #4]
   1a830:	cmp	r1, #0
   1a834:	beq	1a8b0 <myhtml_data_process_state_data@@Base+0xf4>
   1a838:	ldrb	r2, [sl, #61]	; 0x3d
   1a83c:	stm	sp, {r1, r2}
   1a840:	add	r2, r9, r0
   1a844:	sub	r3, r6, r0
   1a848:	add	r1, sl, #8
   1a84c:	mov	r0, r8
   1a850:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a854:	b	1a8c4 <myhtml_data_process_state_data@@Base+0x108>
   1a858:	ldr	r3, [sl, #32]
   1a85c:	mov	r0, r8
   1a860:	mov	r1, r7
   1a864:	mov	r2, r5
   1a868:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1a86c:	subs	r3, r5, r0
   1a870:	beq	1a8e8 <myhtml_data_process_state_data@@Base+0x12c>
   1a874:	add	r0, r0, r4
   1a878:	ldr	r1, [sl, #4]
   1a87c:	cmp	r1, #0
   1a880:	beq	1a8cc <myhtml_data_process_state_data@@Base+0x110>
   1a884:	ldrb	r2, [sl, #61]	; 0x3d
   1a888:	stm	sp, {r1, r2}
   1a88c:	add	r2, r9, r0
   1a890:	add	r6, sl, #8
   1a894:	mov	r0, r8
   1a898:	mov	r1, r6
   1a89c:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a8a0:	str	r0, [sl, #32]
   1a8a4:	mov	r0, r6
   1a8a8:	bl	1163c <myencoding_result_clean@plt>
   1a8ac:	b	1a8e8 <myhtml_data_process_state_data@@Base+0x12c>
   1a8b0:	add	r1, r9, r0
   1a8b4:	sub	r2, r6, r0
   1a8b8:	ldrb	r3, [sl, #61]	; 0x3d
   1a8bc:	mov	r0, r8
   1a8c0:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1a8c4:	str	r0, [sl, #32]
   1a8c8:	b	1a910 <myhtml_data_process_state_data@@Base+0x154>
   1a8cc:	add	r1, r9, r0
   1a8d0:	ldrb	r6, [sl, #61]	; 0x3d
   1a8d4:	mov	r0, r8
   1a8d8:	mov	r2, r3
   1a8dc:	mov	r3, r6
   1a8e0:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1a8e4:	str	r0, [sl, #32]
   1a8e8:	ldr	r0, [r8, #8]
   1a8ec:	ldr	r1, [pc, #40]	; 1a91c <myhtml_data_process_state_data@@Base+0x160>
   1a8f0:	ldr	r1, [pc, r1]
   1a8f4:	str	r1, [sl]
   1a8f8:	str	r0, [sl, #36]	; 0x24
   1a8fc:	ldrb	r1, [r7, r5]
   1a900:	mov	r0, r8
   1a904:	bl	12404 <myhtml_data_process_string_append_char@plt>
   1a908:	add	r0, r4, r5
   1a90c:	add	r6, r0, #1
   1a910:	mov	r0, r6
   1a914:	sub	sp, fp, #28
   1a918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a91c:	andeq	ip, pc, r4, lsl r0	; <UNPREDICTABLE>

0001a920 <myhtml_data_process_string_append_char@@Base>:
   1a920:	push	{r4, r5, fp, lr}
   1a924:	add	fp, sp, #8
   1a928:	mov	r5, r1
   1a92c:	mov	r4, r0
   1a930:	ldr	r0, [r0, #4]
   1a934:	ldr	r1, [r4, #8]
   1a938:	add	r1, r1, #2
   1a93c:	cmp	r1, r0
   1a940:	bcc	1a94c <myhtml_data_process_string_append_char@@Base+0x2c>
   1a944:	mov	r0, r4
   1a948:	bl	11d80 <mycore_string_realloc@plt>
   1a94c:	ldr	r0, [r4]
   1a950:	ldr	r1, [r4, #8]
   1a954:	strb	r5, [r0, r1]
   1a958:	ldr	r0, [r4]
   1a95c:	ldr	r1, [r4, #8]
   1a960:	add	r1, r1, #1
   1a964:	str	r1, [r4, #8]
   1a968:	mov	r2, #0
   1a96c:	strb	r2, [r0, r1]
   1a970:	pop	{r4, r5, fp, pc}

0001a974 <myhtml_data_process_state_ampersand@@Base>:
   1a974:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a978:	add	fp, sp, #24
   1a97c:	mov	r4, r3
   1a980:	mov	r7, r2
   1a984:	mov	r6, r1
   1a988:	mov	r5, r0
   1a98c:	ldrb	r1, [r2, r3]
   1a990:	cmp	r1, #35	; 0x23
   1a994:	bne	1a9f0 <myhtml_data_process_state_ampersand@@Base+0x7c>
   1a998:	ldr	r8, [fp, #8]
   1a99c:	mov	r0, r6
   1a9a0:	bl	12404 <myhtml_data_process_string_append_char@plt>
   1a9a4:	mov	r0, #0
   1a9a8:	str	r0, [r5, #40]	; 0x28
   1a9ac:	add	r0, r4, #1
   1a9b0:	cmp	r0, r8
   1a9b4:	ldrcs	r1, [pc, #152]	; 1aa54 <myhtml_data_process_state_ampersand@@Base+0xe0>
   1a9b8:	ldrcs	r1, [pc, r1]
   1a9bc:	strcs	r1, [r5]
   1a9c0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a9c4:	ldrb	r1, [r7, r0]
   1a9c8:	orr	r2, r1, #32
   1a9cc:	cmp	r2, #120	; 0x78
   1a9d0:	bne	1aa30 <myhtml_data_process_state_ampersand@@Base+0xbc>
   1a9d4:	mov	r0, r6
   1a9d8:	bl	12404 <myhtml_data_process_string_append_char@plt>
   1a9dc:	ldr	r0, [pc, #116]	; 1aa58 <myhtml_data_process_state_ampersand@@Base+0xe4>
   1a9e0:	ldr	r0, [pc, r0]
   1a9e4:	str	r0, [r5]
   1a9e8:	add	r0, r4, #2
   1a9ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a9f0:	mov	r0, #0
   1a9f4:	str	r0, [r5, #48]	; 0x30
   1a9f8:	ldrb	r0, [r7, r4]
   1a9fc:	bl	11e4c <myhtml_charef_get_first_position@plt>
   1aa00:	str	r0, [r5, #44]	; 0x2c
   1aa04:	ldrb	r0, [r0]
   1aa08:	cmp	r0, #0
   1aa0c:	beq	1aa40 <myhtml_data_process_state_ampersand@@Base+0xcc>
   1aa10:	ldr	r0, [pc, #76]	; 1aa64 <myhtml_data_process_state_ampersand@@Base+0xf0>
   1aa14:	ldr	r0, [pc, r0]
   1aa18:	str	r0, [r5]
   1aa1c:	ldrb	r1, [r7, r4]
   1aa20:	mov	r0, r6
   1aa24:	bl	12404 <myhtml_data_process_string_append_char@plt>
   1aa28:	add	r0, r4, #1
   1aa2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa30:	ldr	r1, [pc, #36]	; 1aa5c <myhtml_data_process_state_ampersand@@Base+0xe8>
   1aa34:	ldr	r1, [pc, r1]
   1aa38:	str	r1, [r5]
   1aa3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa40:	ldr	r0, [pc, #24]	; 1aa60 <myhtml_data_process_state_ampersand@@Base+0xec>
   1aa44:	ldr	r0, [pc, r0]
   1aa48:	str	r0, [r5]
   1aa4c:	mov	r0, r4
   1aa50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa54:	andeq	fp, pc, r4, asr #26
   1aa58:	andeq	fp, pc, r4, lsr #26
   1aa5c:	strdeq	fp, [pc], -r4
   1aa60:	strdeq	fp, [pc], -ip
   1aa64:	andeq	fp, pc, r4, asr #27

0001aa68 <myhtml_data_process_state_ampersand_hash@@Base>:
   1aa68:	push	{r4, r5, fp, lr}
   1aa6c:	add	fp, sp, #8
   1aa70:	mov	r4, r3
   1aa74:	mov	r5, r0
   1aa78:	ldrb	r2, [r2, r3]
   1aa7c:	orr	r0, r2, #32
   1aa80:	cmp	r0, #120	; 0x78
   1aa84:	bne	1aaa4 <myhtml_data_process_state_ampersand_hash@@Base+0x3c>
   1aa88:	mov	r0, r1
   1aa8c:	mov	r1, r2
   1aa90:	bl	12404 <myhtml_data_process_string_append_char@plt>
   1aa94:	add	r4, r4, #1
   1aa98:	ldr	r0, [pc, #28]	; 1aabc <myhtml_data_process_state_ampersand_hash@@Base+0x54>
   1aa9c:	ldr	r0, [pc, r0]
   1aaa0:	b	1aaac <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1aaa4:	ldr	r0, [pc, #12]	; 1aab8 <myhtml_data_process_state_ampersand_hash@@Base+0x50>
   1aaa8:	ldr	r0, [pc, r0]
   1aaac:	str	r0, [r5]
   1aab0:	mov	r0, r4
   1aab4:	pop	{r4, r5, fp, pc}
   1aab8:	andeq	fp, pc, r0, lsl #29
   1aabc:	andeq	fp, pc, r8, ror #24

0001aac0 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1aac0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1aac4:	add	fp, sp, #24
   1aac8:	sub	sp, sp, #8
   1aacc:	mov	r6, r3
   1aad0:	mov	r9, r2
   1aad4:	mov	r8, r1
   1aad8:	mov	r4, r0
   1aadc:	ldr	r0, [fp, #8]
   1aae0:	cmp	r3, r0
   1aae4:	mov	r5, r3
   1aae8:	bcs	1ab44 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x84>
   1aaec:	add	r1, r9, r6
   1aaf0:	mov	r7, #0
   1aaf4:	ldr	r2, [pc, #320]	; 1ac3c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x17c>
   1aaf8:	add	r2, pc, r2
   1aafc:	ldrb	r3, [r1, r7]
   1ab00:	ldrb	r3, [r2, r3]
   1ab04:	cmp	r3, #255	; 0xff
   1ab08:	beq	1ab90 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd0>
   1ab0c:	ldr	r3, [r4, #40]	; 0x28
   1ab10:	lsr	r5, r3, #16
   1ab14:	cmp	r5, #16
   1ab18:	bhi	1ab34 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x74>
   1ab1c:	lsl	r5, r3, #4
   1ab20:	str	r5, [r4, #40]	; 0x28
   1ab24:	ldrb	r5, [r1, r7]
   1ab28:	ldrb	r5, [r2, r5]
   1ab2c:	orr	r3, r5, r3, lsl #4
   1ab30:	str	r3, [r4, #40]	; 0x28
   1ab34:	add	r7, r7, #1
   1ab38:	add	r5, r6, r7
   1ab3c:	cmp	r5, r0
   1ab40:	bcc	1aafc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x3c>
   1ab44:	add	r1, r9, r6
   1ab48:	sub	r2, r5, r6
   1ab4c:	ldr	r3, [r4, #32]
   1ab50:	mov	r0, r8
   1ab54:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1ab58:	add	r0, r0, r6
   1ab5c:	cmp	r5, r0
   1ab60:	beq	1abdc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x11c>
   1ab64:	ldr	r1, [r4, #4]
   1ab68:	cmp	r1, #0
   1ab6c:	beq	1abc4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x104>
   1ab70:	ldrb	r2, [r4, #61]	; 0x3d
   1ab74:	stm	sp, {r1, r2}
   1ab78:	add	r2, r9, r0
   1ab7c:	sub	r3, r5, r0
   1ab80:	add	r1, r4, #8
   1ab84:	mov	r0, r8
   1ab88:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ab8c:	b	1abd8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x118>
   1ab90:	ldr	r0, [pc, #168]	; 1ac40 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x180>
   1ab94:	ldr	r0, [pc, r0]
   1ab98:	str	r0, [r4]
   1ab9c:	cmp	r7, #0
   1aba0:	beq	1abe8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1aba4:	ldrb	r5, [r1, r7]
   1aba8:	mov	r0, r4
   1abac:	mov	r1, r8
   1abb0:	bl	117bc <myhtml_data_process_state_end@plt>
   1abb4:	cmp	r5, #59	; 0x3b
   1abb8:	addeq	r6, r6, #1
   1abbc:	add	r5, r6, r7
   1abc0:	b	1abdc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x11c>
   1abc4:	add	r1, r9, r0
   1abc8:	sub	r2, r5, r0
   1abcc:	ldrb	r3, [r4, #61]	; 0x3d
   1abd0:	mov	r0, r8
   1abd4:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1abd8:	str	r0, [r4, #32]
   1abdc:	mov	r0, r5
   1abe0:	sub	sp, fp, #24
   1abe4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1abe8:	add	r5, r6, r7
   1abec:	ldr	r3, [r4, #32]
   1abf0:	mov	r0, r8
   1abf4:	mov	r2, r7
   1abf8:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1abfc:	subs	r3, r7, r0
   1ac00:	beq	1abdc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x11c>
   1ac04:	add	r0, r0, r6
   1ac08:	ldr	r1, [r4, #4]
   1ac0c:	cmp	r1, #0
   1ac10:	beq	1ac24 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x164>
   1ac14:	ldrb	r2, [r4, #61]	; 0x3d
   1ac18:	stm	sp, {r1, r2}
   1ac1c:	add	r2, r9, r0
   1ac20:	b	1ab80 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xc0>
   1ac24:	add	r1, r9, r0
   1ac28:	ldrb	r7, [r4, #61]	; 0x3d
   1ac2c:	mov	r0, r8
   1ac30:	mov	r2, r3
   1ac34:	mov	r3, r7
   1ac38:	b	1abd4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x114>
   1ac3c:	andeq	r1, lr, ip, lsr r8
   1ac40:	andeq	fp, pc, ip, lsr #27

0001ac44 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1ac44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ac48:	add	fp, sp, #24
   1ac4c:	sub	sp, sp, #8
   1ac50:	mov	r6, r3
   1ac54:	mov	r9, r2
   1ac58:	mov	r8, r1
   1ac5c:	mov	r4, r0
   1ac60:	ldr	r0, [fp, #8]
   1ac64:	cmp	r3, r0
   1ac68:	mov	r5, r3
   1ac6c:	bcs	1acbc <myhtml_data_process_state_ampersand_hash_data@@Base+0x78>
   1ac70:	add	r1, r9, r6
   1ac74:	mov	r7, #0
   1ac78:	ldr	ip, [pc, #308]	; 1adb4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x170>
   1ac7c:	add	ip, pc, ip
   1ac80:	ldrb	r3, [r1, r7]
   1ac84:	sub	r5, r3, #48	; 0x30
   1ac88:	cmp	r5, #10
   1ac8c:	bcs	1ad08 <myhtml_data_process_state_ampersand_hash_data@@Base+0xc4>
   1ac90:	ldr	r5, [r4, #40]	; 0x28
   1ac94:	lsr	r2, r5, #16
   1ac98:	cmp	r2, #16
   1ac9c:	ldrbls	r2, [ip, r3]
   1aca0:	addls	r3, r5, r5, lsl #2
   1aca4:	addls	r2, r2, r3, lsl #1
   1aca8:	strls	r2, [r4, #40]	; 0x28
   1acac:	add	r7, r7, #1
   1acb0:	add	r5, r6, r7
   1acb4:	cmp	r5, r0
   1acb8:	bcc	1ac80 <myhtml_data_process_state_ampersand_hash_data@@Base+0x3c>
   1acbc:	add	r1, r9, r6
   1acc0:	sub	r2, r5, r6
   1acc4:	ldr	r3, [r4, #32]
   1acc8:	mov	r0, r8
   1accc:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1acd0:	add	r0, r0, r6
   1acd4:	cmp	r5, r0
   1acd8:	beq	1ad54 <myhtml_data_process_state_ampersand_hash_data@@Base+0x110>
   1acdc:	ldr	r1, [r4, #4]
   1ace0:	cmp	r1, #0
   1ace4:	beq	1ad3c <myhtml_data_process_state_ampersand_hash_data@@Base+0xf8>
   1ace8:	ldrb	r2, [r4, #61]	; 0x3d
   1acec:	stm	sp, {r1, r2}
   1acf0:	add	r2, r9, r0
   1acf4:	sub	r3, r5, r0
   1acf8:	add	r1, r4, #8
   1acfc:	mov	r0, r8
   1ad00:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ad04:	b	1ad50 <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   1ad08:	ldr	r0, [pc, #168]	; 1adb8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x174>
   1ad0c:	ldr	r0, [pc, r0]
   1ad10:	str	r0, [r4]
   1ad14:	cmp	r7, #0
   1ad18:	beq	1ad60 <myhtml_data_process_state_ampersand_hash_data@@Base+0x11c>
   1ad1c:	ldrb	r5, [r1, r7]
   1ad20:	mov	r0, r4
   1ad24:	mov	r1, r8
   1ad28:	bl	117bc <myhtml_data_process_state_end@plt>
   1ad2c:	cmp	r5, #59	; 0x3b
   1ad30:	addeq	r6, r6, #1
   1ad34:	add	r5, r6, r7
   1ad38:	b	1ad54 <myhtml_data_process_state_ampersand_hash_data@@Base+0x110>
   1ad3c:	add	r1, r9, r0
   1ad40:	sub	r2, r5, r0
   1ad44:	ldrb	r3, [r4, #61]	; 0x3d
   1ad48:	mov	r0, r8
   1ad4c:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1ad50:	str	r0, [r4, #32]
   1ad54:	mov	r0, r5
   1ad58:	sub	sp, fp, #24
   1ad5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ad60:	add	r5, r6, r7
   1ad64:	ldr	r3, [r4, #32]
   1ad68:	mov	r0, r8
   1ad6c:	mov	r2, r7
   1ad70:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1ad74:	subs	r3, r7, r0
   1ad78:	beq	1ad54 <myhtml_data_process_state_ampersand_hash_data@@Base+0x110>
   1ad7c:	add	r0, r0, r6
   1ad80:	ldr	r1, [r4, #4]
   1ad84:	cmp	r1, #0
   1ad88:	beq	1ad9c <myhtml_data_process_state_ampersand_hash_data@@Base+0x158>
   1ad8c:	ldrb	r2, [r4, #61]	; 0x3d
   1ad90:	stm	sp, {r1, r2}
   1ad94:	add	r2, r9, r0
   1ad98:	b	1acf8 <myhtml_data_process_state_ampersand_hash_data@@Base+0xb4>
   1ad9c:	add	r1, r9, r0
   1ada0:	ldrb	r7, [r4, #61]	; 0x3d
   1ada4:	mov	r0, r8
   1ada8:	mov	r2, r3
   1adac:	mov	r3, r7
   1adb0:	b	1ad4c <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   1adb4:			; <UNDEFINED> instruction: 0x000e15b8
   1adb8:	andeq	fp, pc, r4, lsr ip	; <UNPREDICTABLE>

0001adbc <myhtml_data_process_state_ampersand_data@@Base>:
   1adbc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1adc0:	add	fp, sp, #24
   1adc4:	sub	sp, sp, #16
   1adc8:	mov	r7, r3
   1adcc:	mov	r8, r2
   1add0:	mov	r5, r1
   1add4:	mov	r4, r0
   1add8:	str	r3, [sp, #12]
   1addc:	mov	r6, r0
   1ade0:	ldr	r0, [r6, #44]!	; 0x2c
   1ade4:	ldr	r0, [r0, #4]
   1ade8:	str	r6, [sp]
   1adec:	ldr	r3, [fp, #8]
   1adf0:	add	r2, sp, #12
   1adf4:	mov	r1, r8
   1adf8:	bl	11bdc <myhtml_charef_find_by_pos@plt>
   1adfc:	mov	r9, r0
   1ae00:	ldr	r0, [r6, #12]
   1ae04:	cmp	r0, #0
   1ae08:	beq	1ae34 <myhtml_data_process_state_ampersand_data@@Base+0x78>
   1ae0c:	ldr	r0, [pc, #448]	; 1afd4 <myhtml_data_process_state_ampersand_data@@Base+0x218>
   1ae10:	ldr	r0, [pc, r0]
   1ae14:	str	r0, [r4]
   1ae18:	ldr	r0, [sp, #12]
   1ae1c:	ldrb	r1, [r8, r0]
   1ae20:	cmp	r1, #59	; 0x3b
   1ae24:	bne	1ae40 <myhtml_data_process_state_ampersand_data@@Base+0x84>
   1ae28:	add	r0, r0, #1
   1ae2c:	str	r0, [sp, #12]
   1ae30:	b	1ae68 <myhtml_data_process_state_ampersand_data@@Base+0xac>
   1ae34:	add	r1, r8, r7
   1ae38:	ldr	r0, [sp, #12]
   1ae3c:	b	1af40 <myhtml_data_process_state_ampersand_data@@Base+0x184>
   1ae40:	ldrb	r2, [r4, #60]	; 0x3c
   1ae44:	cmp	r2, #0
   1ae48:	beq	1ae68 <myhtml_data_process_state_ampersand_data@@Base+0xac>
   1ae4c:	cmp	r1, #61	; 0x3d
   1ae50:	beq	1af3c <myhtml_data_process_state_ampersand_data@@Base+0x180>
   1ae54:	ldr	r2, [pc, #380]	; 1afd8 <myhtml_data_process_state_ampersand_data@@Base+0x21c>
   1ae58:	add	r2, pc, r2
   1ae5c:	ldr	r1, [r2, r1, lsl #2]
   1ae60:	cmp	r1, #255	; 0xff
   1ae64:	bne	1af3c <myhtml_data_process_state_ampersand_data@@Base+0x180>
   1ae68:	ldr	r0, [r9, #20]
   1ae6c:	cmp	r0, #0
   1ae70:	beq	1aee8 <myhtml_data_process_state_ampersand_data@@Base+0x12c>
   1ae74:	ldr	r0, [r9, #20]
   1ae78:	cmp	r0, #0
   1ae7c:	beq	1aed0 <myhtml_data_process_state_ampersand_data@@Base+0x114>
   1ae80:	add	r7, r9, #12
   1ae84:	mov	r6, #0
   1ae88:	ldmib	r5, {r0, r1}
   1ae8c:	add	r1, r1, #5
   1ae90:	cmp	r1, r0
   1ae94:	bcc	1aea0 <myhtml_data_process_state_ampersand_data@@Base+0xe4>
   1ae98:	mov	r0, r5
   1ae9c:	bl	11d80 <mycore_string_realloc@plt>
   1aea0:	ldr	r0, [r7, r6, lsl #2]
   1aea4:	ldr	r1, [r4, #36]	; 0x24
   1aea8:	ldr	r2, [r5]
   1aeac:	add	r1, r2, r1
   1aeb0:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1aeb4:	ldr	r1, [r4, #36]	; 0x24
   1aeb8:	add	r0, r1, r0
   1aebc:	str	r0, [r4, #36]	; 0x24
   1aec0:	add	r6, r6, #1
   1aec4:	ldr	r0, [r9, #20]
   1aec8:	cmp	r6, r0
   1aecc:	bcc	1ae88 <myhtml_data_process_state_ampersand_data@@Base+0xcc>
   1aed0:	ldr	r0, [r4, #36]	; 0x24
   1aed4:	str	r0, [r5, #8]
   1aed8:	ldr	r1, [r5]
   1aedc:	mov	r2, #0
   1aee0:	strb	r2, [r1, r0]
   1aee4:	b	1afc0 <myhtml_data_process_state_ampersand_data@@Base+0x204>
   1aee8:	add	r1, r8, r7
   1aeec:	ldr	r0, [sp, #12]
   1aef0:	sub	r2, r0, r7
   1aef4:	ldr	r3, [r4, #32]
   1aef8:	mov	r0, r5
   1aefc:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1af00:	add	r0, r0, r7
   1af04:	ldr	r3, [sp, #12]
   1af08:	cmp	r3, r0
   1af0c:	beq	1afc0 <myhtml_data_process_state_ampersand_data@@Base+0x204>
   1af10:	ldr	r1, [r4, #4]
   1af14:	cmp	r1, #0
   1af18:	beq	1afa8 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1af1c:	ldrb	r2, [r4, #61]	; 0x3d
   1af20:	stm	sp, {r1, r2}
   1af24:	add	r2, r8, r0
   1af28:	sub	r3, r3, r0
   1af2c:	add	r1, r4, #8
   1af30:	mov	r0, r5
   1af34:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1af38:	b	1afbc <myhtml_data_process_state_ampersand_data@@Base+0x200>
   1af3c:	add	r1, r8, r7
   1af40:	sub	r2, r0, r7
   1af44:	ldr	r3, [r4, #32]
   1af48:	mov	r0, r5
   1af4c:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1af50:	add	r0, r0, r7
   1af54:	ldr	r3, [sp, #12]
   1af58:	cmp	r3, r0
   1af5c:	beq	1afc8 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   1af60:	ldr	r1, [r4, #4]
   1af64:	cmp	r1, #0
   1af68:	beq	1af8c <myhtml_data_process_state_ampersand_data@@Base+0x1d0>
   1af6c:	ldrb	r2, [r4, #61]	; 0x3d
   1af70:	stm	sp, {r1, r2}
   1af74:	add	r2, r8, r0
   1af78:	sub	r3, r3, r0
   1af7c:	add	r1, r4, #8
   1af80:	mov	r0, r5
   1af84:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1af88:	b	1afa0 <myhtml_data_process_state_ampersand_data@@Base+0x1e4>
   1af8c:	add	r1, r8, r0
   1af90:	sub	r2, r3, r0
   1af94:	ldrb	r3, [r4, #61]	; 0x3d
   1af98:	mov	r0, r5
   1af9c:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1afa0:	str	r0, [r4, #32]
   1afa4:	b	1afc8 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   1afa8:	add	r1, r8, r0
   1afac:	sub	r2, r3, r0
   1afb0:	ldrb	r3, [r4, #61]	; 0x3d
   1afb4:	mov	r0, r5
   1afb8:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1afbc:	str	r0, [r4, #32]
   1afc0:	mov	r0, #0
   1afc4:	str	r0, [r4, #48]	; 0x30
   1afc8:	ldr	r0, [sp, #12]
   1afcc:	sub	sp, fp, #24
   1afd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1afd4:	andeq	fp, pc, r0, lsr fp	; <UNPREDICTABLE>
   1afd8:	ldrdeq	r0, [lr], -ip

0001afdc <myhtml_data_process_state_end@@Base>:
   1afdc:	push	{r4, r5, r6, sl, fp, lr}
   1afe0:	add	fp, sp, #16
   1afe4:	mov	r4, r1
   1afe8:	mov	r5, r0
   1afec:	ldmib	r1, {r0, r1}
   1aff0:	add	r1, r1, #5
   1aff4:	cmp	r1, r0
   1aff8:	bcc	1b004 <myhtml_data_process_state_end@@Base+0x28>
   1affc:	mov	r0, r4
   1b000:	bl	11d80 <mycore_string_realloc@plt>
   1b004:	ldr	r1, [r5, #40]	; 0x28
   1b008:	cmp	r1, #159	; 0x9f
   1b00c:	bhi	1b024 <myhtml_data_process_state_end@@Base+0x48>
   1b010:	ldr	r0, [pc, #84]	; 1b06c <myhtml_data_process_state_end@@Base+0x90>
   1b014:	add	r0, pc, r0
   1b018:	ldr	r0, [r0, r1, lsl #2]
   1b01c:	str	r0, [r5, #40]	; 0x28
   1b020:	b	1b040 <myhtml_data_process_state_end@@Base+0x64>
   1b024:	mov	r2, r1
   1b028:	bfc	r2, #0, #11
   1b02c:	movw	r0, #65533	; 0xfffd
   1b030:	cmp	r2, #55296	; 0xd800
   1b034:	beq	1b01c <myhtml_data_process_state_end@@Base+0x40>
   1b038:	cmp	r1, #1114112	; 0x110000
   1b03c:	strcs	r0, [r5, #40]	; 0x28
   1b040:	ldr	r6, [r5, #36]	; 0x24
   1b044:	ldr	r0, [r5, #40]	; 0x28
   1b048:	ldr	r1, [r4]
   1b04c:	add	r1, r1, r6
   1b050:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1b054:	add	r0, r0, r6
   1b058:	str	r0, [r4, #8]
   1b05c:	ldr	r1, [r4]
   1b060:	mov	r2, #0
   1b064:	strb	r2, [r1, r0]
   1b068:	pop	{r4, r5, r6, sl, fp, pc}
   1b06c:	andeq	r1, lr, r0, lsr #8

0001b070 <myhtml_data_process@@Base>:
   1b070:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b074:	add	fp, sp, #24
   1b078:	sub	sp, sp, #8
   1b07c:	cmp	r3, #0
   1b080:	beq	1b0bc <myhtml_data_process@@Base+0x4c>
   1b084:	mov	r4, r3
   1b088:	mov	r8, r2
   1b08c:	mov	r6, r1
   1b090:	mov	r7, r0
   1b094:	mov	r3, #0
   1b098:	ldr	r5, [r7]
   1b09c:	str	r4, [sp]
   1b0a0:	mov	r0, r7
   1b0a4:	mov	r1, r6
   1b0a8:	mov	r2, r8
   1b0ac:	blx	r5
   1b0b0:	mov	r3, r0
   1b0b4:	cmp	r0, r4
   1b0b8:	bcc	1b098 <myhtml_data_process@@Base+0x28>
   1b0bc:	sub	sp, fp, #24
   1b0c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001b0c4 <myhtml_data_process_end@@Base>:
   1b0c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b0c8:	add	fp, sp, #24
   1b0cc:	mov	r4, r1
   1b0d0:	mov	r5, r0
   1b0d4:	ldr	r0, [r0]
   1b0d8:	ldr	r1, [pc, #232]	; 1b1c8 <myhtml_data_process_end@@Base+0x104>
   1b0dc:	ldr	r1, [pc, r1]
   1b0e0:	cmp	r0, r1
   1b0e4:	beq	1b120 <myhtml_data_process_end@@Base+0x5c>
   1b0e8:	ldr	r1, [pc, #220]	; 1b1cc <myhtml_data_process_end@@Base+0x108>
   1b0ec:	ldr	r1, [pc, r1]
   1b0f0:	cmp	r0, r1
   1b0f4:	beq	1b1a0 <myhtml_data_process_end@@Base+0xdc>
   1b0f8:	ldr	r1, [pc, #208]	; 1b1d0 <myhtml_data_process_end@@Base+0x10c>
   1b0fc:	ldr	r1, [pc, r1]
   1b100:	cmp	r0, r1
   1b104:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b108:	ldr	r0, [r4, #8]
   1b10c:	ldr	r1, [r5, #36]	; 0x24
   1b110:	add	r1, r1, #3
   1b114:	cmp	r0, r1
   1b118:	beq	1b1b4 <myhtml_data_process_end@@Base+0xf0>
   1b11c:	b	1b1b8 <myhtml_data_process_end@@Base+0xf4>
   1b120:	ldr	r6, [r5, #48]	; 0x30
   1b124:	cmp	r6, #0
   1b128:	beq	1b1b4 <myhtml_data_process_end@@Base+0xf0>
   1b12c:	ldr	r0, [r6, #20]
   1b130:	cmp	r0, #0
   1b134:	beq	1b188 <myhtml_data_process_end@@Base+0xc4>
   1b138:	add	r8, r6, #12
   1b13c:	mov	r7, #0
   1b140:	ldmib	r4, {r0, r1}
   1b144:	add	r1, r1, #5
   1b148:	cmp	r1, r0
   1b14c:	bcc	1b158 <myhtml_data_process_end@@Base+0x94>
   1b150:	mov	r0, r4
   1b154:	bl	11d80 <mycore_string_realloc@plt>
   1b158:	ldr	r0, [r8, r7, lsl #2]
   1b15c:	ldr	r1, [r5, #36]	; 0x24
   1b160:	ldr	r2, [r4]
   1b164:	add	r1, r2, r1
   1b168:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1b16c:	ldr	r1, [r5, #36]	; 0x24
   1b170:	add	r0, r1, r0
   1b174:	str	r0, [r5, #36]	; 0x24
   1b178:	add	r7, r7, #1
   1b17c:	ldr	r0, [r6, #20]
   1b180:	cmp	r7, r0
   1b184:	bcc	1b140 <myhtml_data_process_end@@Base+0x7c>
   1b188:	ldr	r0, [r5, #36]	; 0x24
   1b18c:	str	r0, [r4, #8]
   1b190:	ldr	r1, [r4]
   1b194:	mov	r2, #0
   1b198:	strb	r2, [r1, r0]
   1b19c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b1a0:	ldr	r0, [r4, #8]
   1b1a4:	ldr	r1, [r5, #36]	; 0x24
   1b1a8:	add	r1, r1, #2
   1b1ac:	cmp	r0, r1
   1b1b0:	bne	1b1b8 <myhtml_data_process_end@@Base+0xf4>
   1b1b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b1b8:	mov	r0, r5
   1b1bc:	mov	r1, r4
   1b1c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b1c4:	b	1afdc <myhtml_data_process_state_end@@Base>
   1b1c8:	strdeq	fp, [pc], -ip
   1b1cc:	andeq	fp, pc, ip, lsr r8	; <UNPREDICTABLE>
   1b1d0:	andeq	fp, pc, r8, lsl #12

0001b1d4 <myhtml_init_marker@@Base>:
   1b1d4:	push	{r4, sl, fp, lr}
   1b1d8:	add	fp, sp, #8
   1b1dc:	mov	r4, r0
   1b1e0:	mov	r0, #44	; 0x2c
   1b1e4:	bl	12050 <mycore_malloc@plt>
   1b1e8:	str	r0, [r4, #36]	; 0x24
   1b1ec:	cmp	r0, #0
   1b1f0:	popeq	{r4, sl, fp, pc}
   1b1f4:	pop	{r4, sl, fp, lr}
   1b1f8:	b	12434 <myhtml_tree_node_clean@plt>

0001b1fc <myhtml_destroy_marker@@Base>:
   1b1fc:	ldr	r0, [r0, #36]	; 0x24
   1b200:	cmp	r0, #0
   1b204:	bxeq	lr
   1b208:	b	12188 <mycore_free@plt>

0001b20c <myhtml_stream_create@@Base>:
   1b20c:	push	{r4, r5, r6, r7, fp, lr}
   1b210:	add	fp, sp, #16
   1b214:	mov	r4, r1
   1b218:	mov	r5, r0
   1b21c:	cmp	r2, #0
   1b220:	beq	1b27c <myhtml_stream_create@@Base+0x70>
   1b224:	mov	r6, r3
   1b228:	mov	r7, r2
   1b22c:	bl	112c4 <mythread_create@plt>
   1b230:	str	r0, [r5]
   1b234:	cmp	r0, #0
   1b238:	moveq	r1, #9
   1b23c:	streq	r1, [r4]
   1b240:	mov	r1, #0
   1b244:	mov	r2, r7
   1b248:	mov	r3, r6
   1b24c:	bl	12440 <mythread_init@plt>
   1b250:	str	r0, [r4]
   1b254:	cmp	r0, #0
   1b258:	beq	1b274 <myhtml_stream_create@@Base+0x68>
   1b25c:	ldr	r0, [r5]
   1b260:	mov	r1, #0
   1b264:	mov	r2, #0
   1b268:	mov	r3, #1
   1b26c:	bl	11dc8 <mythread_destroy@plt>
   1b270:	str	r0, [r5]
   1b274:	ldr	r0, [r4]
   1b278:	pop	{r4, r5, r6, r7, fp, pc}
   1b27c:	mov	r0, #0
   1b280:	str	r0, [r5]
   1b284:	str	r0, [r4]
   1b288:	pop	{r4, r5, r6, r7, fp, pc}

0001b28c <myhtml_batch_create@@Base>:
   1b28c:	push	{r4, r5, r6, r7, fp, lr}
   1b290:	add	fp, sp, #16
   1b294:	mov	r4, r1
   1b298:	mov	r5, r0
   1b29c:	cmp	r2, #0
   1b2a0:	beq	1b31c <myhtml_batch_create@@Base+0x90>
   1b2a4:	mov	r6, r3
   1b2a8:	mov	r7, r2
   1b2ac:	bl	112c4 <mythread_create@plt>
   1b2b0:	str	r0, [r5, #4]
   1b2b4:	ldr	r0, [r5]
   1b2b8:	cmp	r0, #0
   1b2bc:	bne	1b2dc <myhtml_batch_create@@Base+0x50>
   1b2c0:	mov	r1, #0
   1b2c4:	mov	r2, #0
   1b2c8:	mov	r3, #1
   1b2cc:	bl	11dc8 <mythread_destroy@plt>
   1b2d0:	str	r0, [r5]
   1b2d4:	mov	r0, #9
   1b2d8:	str	r0, [r4]
   1b2dc:	ldr	r0, [r5, #4]
   1b2e0:	mov	r1, #1
   1b2e4:	mov	r2, r7
   1b2e8:	mov	r3, r6
   1b2ec:	bl	12440 <mythread_init@plt>
   1b2f0:	str	r0, [r4]
   1b2f4:	cmp	r0, #0
   1b2f8:	beq	1b314 <myhtml_batch_create@@Base+0x88>
   1b2fc:	ldr	r0, [r5, #4]
   1b300:	mov	r1, #0
   1b304:	mov	r2, #0
   1b308:	mov	r3, #1
   1b30c:	bl	11dc8 <mythread_destroy@plt>
   1b310:	str	r0, [r5, #4]
   1b314:	ldr	r0, [r4]
   1b318:	pop	{r4, r5, r6, r7, fp, pc}
   1b31c:	mov	r0, #0
   1b320:	str	r0, [r5, #4]
   1b324:	str	r0, [r4]
   1b328:	pop	{r4, r5, r6, r7, fp, pc}

0001b32c <myhtml_create_stream_and_batch@@Base>:
   1b32c:	push	{r4, r5, r6, sl, fp, lr}
   1b330:	add	fp, sp, #16
   1b334:	sub	sp, sp, #8
   1b338:	mov	r6, r2
   1b33c:	mov	r5, r1
   1b340:	mov	r4, r0
   1b344:	add	r1, sp, #4
   1b348:	mov	r2, r5
   1b34c:	mov	r3, #0
   1b350:	bl	1187c <myhtml_stream_create@plt>
   1b354:	cmp	r0, #0
   1b358:	bne	1b390 <myhtml_create_stream_and_batch@@Base+0x64>
   1b35c:	add	r1, sp, #4
   1b360:	mov	r0, r4
   1b364:	mov	r2, r6
   1b368:	mov	r3, r5
   1b36c:	bl	119d8 <myhtml_batch_create@plt>
   1b370:	cmp	r0, #0
   1b374:	beq	1b390 <myhtml_create_stream_and_batch@@Base+0x64>
   1b378:	ldr	r0, [r4]
   1b37c:	mov	r1, #0
   1b380:	mov	r2, #0
   1b384:	mov	r3, #1
   1b388:	bl	11dc8 <mythread_destroy@plt>
   1b38c:	str	r0, [r4]
   1b390:	ldr	r0, [sp, #4]
   1b394:	sub	sp, fp, #16
   1b398:	pop	{r4, r5, r6, sl, fp, pc}

0001b39c <myhtml_create@@Base>:
   1b39c:	mov	r0, #1
   1b3a0:	mov	r1, #40	; 0x28
   1b3a4:	b	113a8 <mycore_calloc@plt>

0001b3a8 <myhtml_init@@Base>:
   1b3a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b3ac:	add	fp, sp, #24
   1b3b0:	sub	sp, sp, #8
   1b3b4:	mov	r4, r2
   1b3b8:	mov	r6, r1
   1b3bc:	mov	r5, r0
   1b3c0:	str	r1, [r0, #32]
   1b3c4:	bl	11eac <myhtml_init_marker@plt>
   1b3c8:	mov	r0, r5
   1b3cc:	bl	1118c <myhtml_tokenizer_state_init@plt>
   1b3d0:	str	r0, [sp, #4]
   1b3d4:	cmp	r0, #0
   1b3d8:	bne	1b3f0 <myhtml_init@@Base+0x48>
   1b3dc:	mov	r0, r5
   1b3e0:	bl	11fb4 <myhtml_rules_init@plt>
   1b3e4:	str	r0, [sp, #4]
   1b3e8:	cmp	r0, #0
   1b3ec:	beq	1b3f8 <myhtml_init@@Base+0x50>
   1b3f0:	sub	sp, fp, #24
   1b3f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b3f8:	cmp	r4, #0
   1b3fc:	movweq	r4, #1
   1b400:	cmp	r6, #2
   1b404:	beq	1b430 <myhtml_init@@Base+0x88>
   1b408:	cmp	r6, #1
   1b40c:	bne	1b4a0 <myhtml_init@@Base+0xf8>
   1b410:	mov	r0, r5
   1b414:	mov	r1, #0
   1b418:	mov	r2, #0
   1b41c:	bl	11924 <myhtml_create_stream_and_batch@plt>
   1b420:	str	r0, [sp, #4]
   1b424:	cmp	r0, #0
   1b428:	bne	1b3f0 <myhtml_init@@Base+0x48>
   1b42c:	b	1b47c <myhtml_init@@Base+0xd4>
   1b430:	mov	r0, r5
   1b434:	mov	r1, #1
   1b438:	mov	r2, #0
   1b43c:	bl	11924 <myhtml_create_stream_and_batch@plt>
   1b440:	str	r0, [sp, #4]
   1b444:	cmp	r0, #0
   1b448:	bne	1b3f0 <myhtml_init@@Base+0x48>
   1b44c:	add	r0, sp, #4
   1b450:	bl	11bf4 <mythread_queue_list_create@plt>
   1b454:	ldr	r3, [r5]
   1b458:	str	r0, [r3, #16]
   1b45c:	ldr	r1, [pc, #248]	; 1b55c <myhtml_init@@Base+0x1b4>
   1b460:	ldr	r1, [pc, r1]
   1b464:	ldr	r2, [pc, #244]	; 1b560 <myhtml_init@@Base+0x1b8>
   1b468:	ldr	r2, [pc, r2]
   1b46c:	mov	r0, r3
   1b470:	mov	r3, #4
   1b474:	bl	11cd8 <myhread_entry_create@plt>
   1b478:	str	r0, [sp, #4]
   1b47c:	mov	r0, #0
   1b480:	ldm	r5, {r1, r2}
   1b484:	str	r1, [r5, #8]
   1b488:	str	r2, [r5, #12]
   1b48c:	str	r0, [r5, #16]
   1b490:	str	r4, [r5, #20]
   1b494:	ldr	r0, [sp, #4]
   1b498:	sub	sp, fp, #24
   1b49c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b4a0:	cmp	r4, #2
   1b4a4:	movls	r4, #2
   1b4a8:	sub	r2, r4, #1
   1b4ac:	mov	r0, r5
   1b4b0:	mov	r1, #1
   1b4b4:	bl	11924 <myhtml_create_stream_and_batch@plt>
   1b4b8:	str	r0, [sp, #4]
   1b4bc:	cmp	r0, #0
   1b4c0:	bne	1b3f0 <myhtml_init@@Base+0x48>
   1b4c4:	add	r0, sp, #4
   1b4c8:	bl	11bf4 <mythread_queue_list_create@plt>
   1b4cc:	ldr	r3, [r5]
   1b4d0:	str	r0, [r3, #16]
   1b4d4:	ldr	r1, [r5, #4]
   1b4d8:	str	r0, [r1, #16]
   1b4dc:	ldr	r1, [pc, #128]	; 1b564 <myhtml_init@@Base+0x1bc>
   1b4e0:	ldr	r1, [pc, r1]
   1b4e4:	ldr	r2, [pc, #124]	; 1b568 <myhtml_init@@Base+0x1c0>
   1b4e8:	ldr	r2, [pc, r2]
   1b4ec:	mov	r0, r3
   1b4f0:	mov	r3, #4
   1b4f4:	bl	11cd8 <myhread_entry_create@plt>
   1b4f8:	str	r0, [sp, #4]
   1b4fc:	cmp	r0, #0
   1b500:	bne	1b3f0 <myhtml_init@@Base+0x48>
   1b504:	ldr	r0, [r5, #4]
   1b508:	ldr	r1, [r0, #8]
   1b50c:	cmp	r1, #0
   1b510:	beq	1b47c <myhtml_init@@Base+0xd4>
   1b514:	mov	r6, #0
   1b518:	ldr	r8, [pc, #76]	; 1b56c <myhtml_init@@Base+0x1c4>
   1b51c:	ldr	r8, [pc, r8]
   1b520:	ldr	r7, [pc, #72]	; 1b570 <myhtml_init@@Base+0x1c8>
   1b524:	ldr	r7, [pc, r7]
   1b528:	mov	r1, r8
   1b52c:	mov	r2, r7
   1b530:	mov	r3, #4
   1b534:	bl	11cd8 <myhread_entry_create@plt>
   1b538:	str	r0, [sp, #4]
   1b53c:	cmp	r0, #0
   1b540:	bne	1b3f0 <myhtml_init@@Base+0x48>
   1b544:	add	r6, r6, #1
   1b548:	ldr	r0, [r5, #4]
   1b54c:	ldr	r1, [r0, #8]
   1b550:	cmp	r6, r1
   1b554:	bcc	1b528 <myhtml_init@@Base+0x180>
   1b558:	b	1b47c <myhtml_init@@Base+0xd4>
   1b55c:	andeq	fp, pc, ip, ror #4
   1b560:	andeq	fp, pc, r0, ror r2	; <UNPREDICTABLE>
   1b564:	andeq	fp, pc, ip, ror #3
   1b568:	andeq	fp, pc, ip, ror #8
   1b56c:	andeq	fp, pc, r4, lsr #3
   1b570:			; <UNDEFINED> instruction: 0x000fb1bc

0001b574 <myhtml_clean@@Base>:
   1b574:	bx	lr

0001b578 <myhtml_destroy@@Base>:
   1b578:	cmp	r0, #0
   1b57c:	beq	1b624 <myhtml_destroy@@Base+0xac>
   1b580:	push	{r4, r5, fp, lr}
   1b584:	add	fp, sp, #8
   1b588:	mov	r4, r0
   1b58c:	bl	11bc4 <myhtml_destroy_marker@plt>
   1b590:	ldr	r0, [r4]
   1b594:	cmp	r0, #0
   1b598:	beq	1b600 <myhtml_destroy@@Base+0x88>
   1b59c:	ldr	r5, [r0, #16]
   1b5a0:	cmp	r5, #0
   1b5a4:	beq	1b5b0 <myhtml_destroy@@Base+0x38>
   1b5a8:	mov	r1, r5
   1b5ac:	bl	12194 <mythread_queue_list_wait_for_done@plt>
   1b5b0:	ldr	r0, [r4]
   1b5b4:	ldr	r1, [pc, #112]	; 1b62c <myhtml_destroy@@Base+0xb4>
   1b5b8:	ldr	r1, [pc, r1]
   1b5bc:	mov	r2, #0
   1b5c0:	mov	r3, #1
   1b5c4:	bl	11dc8 <mythread_destroy@plt>
   1b5c8:	str	r0, [r4]
   1b5cc:	ldr	r0, [r4, #4]
   1b5d0:	cmp	r0, #0
   1b5d4:	beq	1b5f0 <myhtml_destroy@@Base+0x78>
   1b5d8:	ldr	r1, [pc, #80]	; 1b630 <myhtml_destroy@@Base+0xb8>
   1b5dc:	ldr	r1, [pc, r1]
   1b5e0:	mov	r2, #0
   1b5e4:	mov	r3, #1
   1b5e8:	bl	11dc8 <mythread_destroy@plt>
   1b5ec:	str	r0, [r4, #4]
   1b5f0:	cmp	r5, #0
   1b5f4:	beq	1b600 <myhtml_destroy@@Base+0x88>
   1b5f8:	mov	r0, r5
   1b5fc:	bl	115b8 <mythread_queue_list_destroy@plt>
   1b600:	mov	r0, r4
   1b604:	bl	1157c <myhtml_tokenizer_state_destroy@plt>
   1b608:	ldr	r0, [r4, #28]
   1b60c:	cmp	r0, #0
   1b610:	beq	1b618 <myhtml_destroy@@Base+0xa0>
   1b614:	bl	12188 <mycore_free@plt>
   1b618:	mov	r0, r4
   1b61c:	bl	12188 <mycore_free@plt>
   1b620:	pop	{r4, r5, fp, lr}
   1b624:	mov	r0, #0
   1b628:	bx	lr
   1b62c:	andeq	fp, pc, ip, lsr r2	; <UNPREDICTABLE>
   1b630:	andeq	fp, pc, r8, lsl r2	; <UNPREDICTABLE>

0001b634 <myhtml_parse@@Base>:
   1b634:	push	{r4, r5, r6, r7, fp, lr}
   1b638:	add	fp, sp, #16
   1b63c:	mov	r5, r3
   1b640:	mov	r6, r2
   1b644:	mov	r7, r1
   1b648:	mov	r4, r0
   1b64c:	ldr	r0, [r0, #180]	; 0xb4
   1b650:	tst	r0, #32
   1b654:	beq	1b660 <myhtml_parse@@Base+0x2c>
   1b658:	mov	r0, r4
   1b65c:	bl	11b04 <myhtml_tree_clean@plt>
   1b660:	mov	r0, r4
   1b664:	mov	r1, r7
   1b668:	bl	11ad4 <myhtml_encoding_set@plt>
   1b66c:	mov	r0, r4
   1b670:	mov	r1, r6
   1b674:	mov	r2, r5
   1b678:	bl	115dc <myhtml_tokenizer_begin@plt>
   1b67c:	cmp	r0, #0
   1b680:	popne	{r4, r5, r6, r7, fp, pc}
   1b684:	mov	r0, r4
   1b688:	pop	{r4, r5, r6, r7, fp, lr}
   1b68c:	b	116d8 <myhtml_tokenizer_end@plt>

0001b690 <myhtml_encoding_set@@Base>:
   1b690:	cmp	r1, #41	; 0x29
   1b694:	strls	r1, [r0, #200]	; 0xc8
   1b698:	strls	r1, [r0, #204]	; 0xcc
   1b69c:	bx	lr

0001b6a0 <myhtml_parse_fragment@@Base>:
   1b6a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b6a4:	add	fp, sp, #24
   1b6a8:	mov	r8, r3
   1b6ac:	mov	r9, r2
   1b6b0:	mov	r7, r1
   1b6b4:	mov	r4, r0
   1b6b8:	ldr	r0, [r0, #180]	; 0xb4
   1b6bc:	ldr	r5, [fp, #12]
   1b6c0:	ldr	r6, [fp, #8]
   1b6c4:	tst	r0, #32
   1b6c8:	beq	1b6d4 <myhtml_parse_fragment@@Base+0x34>
   1b6cc:	mov	r0, r4
   1b6d0:	bl	11b04 <myhtml_tree_clean@plt>
   1b6d4:	cmp	r6, #0
   1b6d8:	movweq	r6, #42	; 0x2a
   1b6dc:	cmp	r5, #0
   1b6e0:	movweq	r5, #1
   1b6e4:	mov	r0, r4
   1b6e8:	mov	r1, r6
   1b6ec:	mov	r2, r5
   1b6f0:	bl	11168 <myhtml_tokenizer_fragment_init@plt>
   1b6f4:	cmp	r0, #0
   1b6f8:	beq	1b72c <myhtml_parse_fragment@@Base+0x8c>
   1b6fc:	mov	r0, r4
   1b700:	mov	r1, r7
   1b704:	bl	11ad4 <myhtml_encoding_set@plt>
   1b708:	mov	r0, r4
   1b70c:	mov	r1, r9
   1b710:	mov	r2, r8
   1b714:	bl	115dc <myhtml_tokenizer_begin@plt>
   1b718:	cmp	r0, #0
   1b71c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b720:	mov	r0, r4
   1b724:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b728:	b	116d8 <myhtml_tokenizer_end@plt>
   1b72c:	movw	r0, #37165	; 0x912d
   1b730:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001b734 <myhtml_parse_single@@Base>:
   1b734:	push	{r4, r5, r6, r7, fp, lr}
   1b738:	add	fp, sp, #16
   1b73c:	mov	r5, r3
   1b740:	mov	r6, r2
   1b744:	mov	r7, r1
   1b748:	mov	r4, r0
   1b74c:	ldr	r0, [r0, #180]	; 0xb4
   1b750:	tst	r0, #32
   1b754:	beq	1b760 <myhtml_parse_single@@Base+0x2c>
   1b758:	mov	r0, r4
   1b75c:	bl	11b04 <myhtml_tree_clean@plt>
   1b760:	ldr	r0, [r4, #180]	; 0xb4
   1b764:	orr	r0, r0, #16
   1b768:	str	r0, [r4, #180]	; 0xb4
   1b76c:	mov	r0, r4
   1b770:	mov	r1, r7
   1b774:	bl	11ad4 <myhtml_encoding_set@plt>
   1b778:	mov	r0, r4
   1b77c:	mov	r1, r6
   1b780:	mov	r2, r5
   1b784:	bl	115dc <myhtml_tokenizer_begin@plt>
   1b788:	cmp	r0, #0
   1b78c:	popne	{r4, r5, r6, r7, fp, pc}
   1b790:	mov	r0, r4
   1b794:	pop	{r4, r5, r6, r7, fp, lr}
   1b798:	b	116d8 <myhtml_tokenizer_end@plt>

0001b79c <myhtml_parse_fragment_single@@Base>:
   1b79c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b7a0:	add	fp, sp, #24
   1b7a4:	mov	r8, r3
   1b7a8:	mov	r9, r2
   1b7ac:	mov	r7, r1
   1b7b0:	mov	r4, r0
   1b7b4:	ldr	r0, [r0, #180]	; 0xb4
   1b7b8:	ldr	r5, [fp, #12]
   1b7bc:	ldr	r6, [fp, #8]
   1b7c0:	tst	r0, #32
   1b7c4:	beq	1b7d0 <myhtml_parse_fragment_single@@Base+0x34>
   1b7c8:	mov	r0, r4
   1b7cc:	bl	11b04 <myhtml_tree_clean@plt>
   1b7d0:	ldr	r0, [r4, #180]	; 0xb4
   1b7d4:	orr	r0, r0, #16
   1b7d8:	str	r0, [r4, #180]	; 0xb4
   1b7dc:	cmp	r6, #0
   1b7e0:	movweq	r6, #42	; 0x2a
   1b7e4:	cmp	r5, #0
   1b7e8:	movweq	r5, #1
   1b7ec:	mov	r0, r4
   1b7f0:	mov	r1, r6
   1b7f4:	mov	r2, r5
   1b7f8:	bl	11168 <myhtml_tokenizer_fragment_init@plt>
   1b7fc:	cmp	r0, #0
   1b800:	beq	1b834 <myhtml_parse_fragment_single@@Base+0x98>
   1b804:	mov	r0, r4
   1b808:	mov	r1, r7
   1b80c:	bl	11ad4 <myhtml_encoding_set@plt>
   1b810:	mov	r0, r4
   1b814:	mov	r1, r9
   1b818:	mov	r2, r8
   1b81c:	bl	115dc <myhtml_tokenizer_begin@plt>
   1b820:	cmp	r0, #0
   1b824:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b828:	mov	r0, r4
   1b82c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b830:	b	116d8 <myhtml_tokenizer_end@plt>
   1b834:	movw	r0, #37165	; 0x912d
   1b838:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001b83c <myhtml_parse_chunk@@Base>:
   1b83c:	push	{r4, r5, r6, sl, fp, lr}
   1b840:	add	fp, sp, #16
   1b844:	mov	r4, r2
   1b848:	mov	r5, r1
   1b84c:	mov	r6, r0
   1b850:	ldr	r0, [r0, #180]	; 0xb4
   1b854:	tst	r0, #32
   1b858:	beq	1b864 <myhtml_parse_chunk@@Base+0x28>
   1b85c:	mov	r0, r6
   1b860:	bl	11b04 <myhtml_tree_clean@plt>
   1b864:	mov	r0, r6
   1b868:	mov	r1, r5
   1b86c:	mov	r2, r4
   1b870:	pop	{r4, r5, r6, sl, fp, lr}
   1b874:	b	1154c <myhtml_tokenizer_chunk@plt>

0001b878 <myhtml_parse_chunk_fragment@@Base>:
   1b878:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b87c:	add	fp, sp, #24
   1b880:	mov	r7, r3
   1b884:	mov	r8, r2
   1b888:	mov	r5, r1
   1b88c:	mov	r6, r0
   1b890:	ldr	r0, [r0, #180]	; 0xb4
   1b894:	ldr	r4, [fp, #8]
   1b898:	tst	r0, #32
   1b89c:	beq	1b8a8 <myhtml_parse_chunk_fragment@@Base+0x30>
   1b8a0:	mov	r0, r6
   1b8a4:	bl	11b04 <myhtml_tree_clean@plt>
   1b8a8:	cmp	r7, #0
   1b8ac:	movweq	r7, #42	; 0x2a
   1b8b0:	cmp	r4, #0
   1b8b4:	movweq	r4, #1
   1b8b8:	mov	r0, r6
   1b8bc:	mov	r1, r7
   1b8c0:	mov	r2, r4
   1b8c4:	bl	11168 <myhtml_tokenizer_fragment_init@plt>
   1b8c8:	cmp	r0, #0
   1b8cc:	movweq	r0, #37165	; 0x912d
   1b8d0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b8d4:	mov	r0, r6
   1b8d8:	mov	r1, r5
   1b8dc:	mov	r2, r8
   1b8e0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b8e4:	b	1154c <myhtml_tokenizer_chunk@plt>

0001b8e8 <myhtml_parse_chunk_single@@Base>:
   1b8e8:	ldr	r3, [r0, #180]	; 0xb4
   1b8ec:	tst	r3, #16
   1b8f0:	ldreq	r3, [r0, #180]	; 0xb4
   1b8f4:	orreq	r3, r3, #16
   1b8f8:	streq	r3, [r0, #180]	; 0xb4
   1b8fc:	b	1b83c <myhtml_parse_chunk@@Base>

0001b900 <myhtml_parse_chunk_fragment_single@@Base>:
   1b900:	ldr	ip, [r0, #180]	; 0xb4
   1b904:	tst	ip, #16
   1b908:	ldreq	ip, [r0, #180]	; 0xb4
   1b90c:	orreq	ip, ip, #16
   1b910:	streq	ip, [r0, #180]	; 0xb4
   1b914:	b	1b878 <myhtml_parse_chunk_fragment@@Base>

0001b918 <myhtml_parse_chunk_end@@Base>:
   1b918:	b	116d8 <myhtml_tokenizer_end@plt>

0001b91c <myhtml_encoding_get@@Base>:
   1b91c:	ldr	r0, [r0, #200]	; 0xc8
   1b920:	bx	lr

0001b924 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1b924:	push	{r4, r5, r6, sl, fp, lr}
   1b928:	add	fp, sp, #16
   1b92c:	cmp	r0, #0
   1b930:	beq	1b9a8 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x84>
   1b934:	mov	r4, r2
   1b938:	mov	r5, r1
   1b93c:	mov	r6, r0
   1b940:	ldr	r0, [r6, #4]
   1b944:	cmp	r0, r4
   1b948:	bne	1b984 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1b94c:	ldr	r0, [r5]
   1b950:	ldr	r1, [r5, #8]
   1b954:	str	r6, [r0, r1, lsl #2]
   1b958:	add	r0, r1, #1
   1b95c:	str	r0, [r5, #8]
   1b960:	ldr	r1, [r5, #4]
   1b964:	cmp	r0, r1
   1b968:	bcc	1b984 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1b96c:	mov	r0, r5
   1b970:	mov	r1, #1024	; 0x400
   1b974:	mov	r2, #0
   1b978:	bl	121b8 <myhtml_collection_check_size@plt>
   1b97c:	cmp	r0, #0
   1b980:	popne	{r4, r5, r6, sl, fp, pc}
   1b984:	ldr	r0, [r6, #20]
   1b988:	cmp	r0, #0
   1b98c:	beq	1b99c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x78>
   1b990:	mov	r1, r5
   1b994:	mov	r2, r4
   1b998:	bl	12008 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1b99c:	ldr	r6, [r6, #16]
   1b9a0:	cmp	r6, #0
   1b9a4:	bne	1b940 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x1c>
   1b9a8:	mov	r0, #0
   1b9ac:	pop	{r4, r5, r6, sl, fp, pc}

0001b9b0 <myhtml_collection_check_size@@Base>:
   1b9b0:	push	{r4, r5, r6, sl, fp, lr}
   1b9b4:	add	fp, sp, #16
   1b9b8:	mov	r5, r0
   1b9bc:	ldr	r3, [r0, #4]
   1b9c0:	ldr	r0, [r0, #8]
   1b9c4:	add	r0, r0, r1
   1b9c8:	mov	r4, #0
   1b9cc:	cmp	r0, r3
   1b9d0:	bcc	1b9fc <myhtml_collection_check_size@@Base+0x4c>
   1b9d4:	add	r0, r2, r0
   1b9d8:	add	r6, r0, #1
   1b9dc:	lsl	r1, r6, #2
   1b9e0:	ldr	r0, [r5]
   1b9e4:	bl	110b4 <mycore_realloc@plt>
   1b9e8:	cmp	r0, #0
   1b9ec:	moveq	r4, #2
   1b9f0:	moveq	r0, r4
   1b9f4:	popeq	{r4, r5, r6, sl, fp, pc}
   1b9f8:	stm	r5, {r0, r6}
   1b9fc:	mov	r0, r4
   1ba00:	pop	{r4, r5, r6, sl, fp, pc}

0001ba04 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1ba04:	push	{r4, r5, r6, r7, fp, lr}
   1ba08:	add	fp, sp, #16
   1ba0c:	sub	sp, sp, #8
   1ba10:	cmp	r2, #0
   1ba14:	beq	1ba78 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x74>
   1ba18:	mov	r5, r3
   1ba1c:	mov	r6, r2
   1ba20:	mov	r4, r1
   1ba24:	ldr	r7, [fp, #8]
   1ba28:	mov	r0, #0
   1ba2c:	str	r0, [sp, #4]
   1ba30:	cmp	r1, #0
   1ba34:	beq	1ba80 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x7c>
   1ba38:	ldr	r0, [r6, #20]
   1ba3c:	cmp	r0, #0
   1ba40:	beq	1ba54 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1ba44:	mov	r1, r4
   1ba48:	mov	r2, r5
   1ba4c:	bl	12008 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1ba50:	str	r0, [sp, #4]
   1ba54:	ldr	r0, [r4]
   1ba58:	ldr	r1, [r4, #8]
   1ba5c:	mov	r2, #0
   1ba60:	str	r2, [r0, r1, lsl #2]
   1ba64:	cmp	r7, #0
   1ba68:	beq	1baa4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1ba6c:	ldr	r0, [sp, #4]
   1ba70:	str	r0, [r7]
   1ba74:	b	1baa4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1ba78:	mov	r4, #0
   1ba7c:	b	1baa4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1ba80:	add	r1, sp, #4
   1ba84:	mov	r0, #1024	; 0x400
   1ba88:	bl	11774 <myhtml_collection_create@plt>
   1ba8c:	mov	r4, r0
   1ba90:	ldr	r0, [sp, #4]
   1ba94:	cmp	r0, #0
   1ba98:	beq	1ba38 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x34>
   1ba9c:	cmp	r7, #0
   1baa0:	strne	r0, [r7]
   1baa4:	mov	r0, r4
   1baa8:	sub	sp, fp, #16
   1baac:	pop	{r4, r5, r6, r7, fp, pc}

0001bab0 <myhtml_collection_create@@Base>:
   1bab0:	push	{r4, r5, r6, r7, fp, lr}
   1bab4:	add	fp, sp, #16
   1bab8:	mov	r4, r1
   1babc:	mov	r7, r0
   1bac0:	mov	r0, #12
   1bac4:	bl	12050 <mycore_malloc@plt>
   1bac8:	cmp	r0, #0
   1bacc:	beq	1bb0c <myhtml_collection_create@@Base+0x5c>
   1bad0:	mov	r6, r0
   1bad4:	mov	r5, #0
   1bad8:	str	r7, [r0, #4]
   1badc:	str	r5, [r0, #8]
   1bae0:	lsl	r0, r7, #2
   1bae4:	bl	12050 <mycore_malloc@plt>
   1bae8:	str	r0, [r6]
   1baec:	cmp	r0, #0
   1baf0:	beq	1bb14 <myhtml_collection_create@@Base+0x64>
   1baf4:	cmp	r4, #0
   1baf8:	movne	r0, #0
   1bafc:	strne	r0, [r4]
   1bb00:	mov	r5, r6
   1bb04:	mov	r0, r5
   1bb08:	pop	{r4, r5, r6, r7, fp, pc}
   1bb0c:	mov	r5, #0
   1bb10:	b	1bb1c <myhtml_collection_create@@Base+0x6c>
   1bb14:	mov	r0, r6
   1bb18:	bl	12188 <mycore_free@plt>
   1bb1c:	cmp	r4, #0
   1bb20:	movne	r0, #2
   1bb24:	strne	r0, [r4]
   1bb28:	movne	r0, r5
   1bb2c:	popne	{r4, r5, r6, r7, fp, pc}
   1bb30:	mov	r0, r5
   1bb34:	pop	{r4, r5, r6, r7, fp, pc}

0001bb38 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1bb38:	push	{r4, r5, fp, lr}
   1bb3c:	add	fp, sp, #8
   1bb40:	sub	sp, sp, #8
   1bb44:	mov	r4, r2
   1bb48:	mov	r5, r1
   1bb4c:	ldr	r0, [r0, #28]
   1bb50:	ldr	r2, [fp, #8]
   1bb54:	mov	r1, r3
   1bb58:	bl	11f60 <myhtml_tag_get_by_name@plt>
   1bb5c:	cmp	r0, #0
   1bb60:	moveq	r0, #0
   1bb64:	subeq	sp, fp, #8
   1bb68:	popeq	{r4, r5, fp, pc}
   1bb6c:	ldr	r1, [fp, #12]
   1bb70:	ldr	r3, [r0]
   1bb74:	str	r1, [sp]
   1bb78:	mov	r1, r5
   1bb7c:	mov	r2, r4
   1bb80:	bl	113cc <myhtml_get_nodes_by_tag_id_in_scope@plt>
   1bb84:	sub	sp, fp, #8
   1bb88:	pop	{r4, r5, fp, pc}

0001bb8c <myhtml_get_nodes_by_tag_id@@Base>:
   1bb8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bb90:	add	fp, sp, #24
   1bb94:	mov	r8, r3
   1bb98:	mov	r6, r2
   1bb9c:	mov	r5, r1
   1bba0:	mov	r7, r0
   1bba4:	cmp	r1, #0
   1bba8:	bne	1bbc8 <myhtml_get_nodes_by_tag_id@@Base+0x3c>
   1bbac:	mov	r4, #0
   1bbb0:	mov	r0, #1024	; 0x400
   1bbb4:	mov	r1, #0
   1bbb8:	bl	11774 <myhtml_collection_create@plt>
   1bbbc:	mov	r5, r0
   1bbc0:	cmp	r0, #0
   1bbc4:	beq	1bc84 <myhtml_get_nodes_by_tag_id@@Base+0xf8>
   1bbc8:	ldr	r4, [r7, #96]	; 0x60
   1bbcc:	cmp	r4, #0
   1bbd0:	beq	1bc48 <myhtml_get_nodes_by_tag_id@@Base+0xbc>
   1bbd4:	ldr	r0, [r4, #4]
   1bbd8:	cmp	r0, r6
   1bbdc:	bne	1bc0c <myhtml_get_nodes_by_tag_id@@Base+0x80>
   1bbe0:	mov	r0, r5
   1bbe4:	mov	r1, #1
   1bbe8:	mov	r2, #1024	; 0x400
   1bbec:	bl	121b8 <myhtml_collection_check_size@plt>
   1bbf0:	cmp	r0, #0
   1bbf4:	bne	1bc60 <myhtml_get_nodes_by_tag_id@@Base+0xd4>
   1bbf8:	ldr	r0, [r5]
   1bbfc:	ldr	r1, [r5, #8]
   1bc00:	str	r4, [r0, r1, lsl #2]
   1bc04:	add	r0, r1, #1
   1bc08:	str	r0, [r5, #8]
   1bc0c:	ldr	r0, [r4, #20]
   1bc10:	cmp	r0, #0
   1bc14:	bne	1bc3c <myhtml_get_nodes_by_tag_id@@Base+0xb0>
   1bc18:	b	1bc20 <myhtml_get_nodes_by_tag_id@@Base+0x94>
   1bc1c:	ldr	r4, [r4, #24]
   1bc20:	ldr	r0, [r7, #96]	; 0x60
   1bc24:	cmp	r4, r0
   1bc28:	beq	1bc48 <myhtml_get_nodes_by_tag_id@@Base+0xbc>
   1bc2c:	ldr	r0, [r4, #16]
   1bc30:	cmp	r0, #0
   1bc34:	beq	1bc1c <myhtml_get_nodes_by_tag_id@@Base+0x90>
   1bc38:	ldr	r0, [r4, #16]
   1bc3c:	cmp	r0, #0
   1bc40:	mov	r4, r0
   1bc44:	bne	1bbd4 <myhtml_get_nodes_by_tag_id@@Base+0x48>
   1bc48:	mov	r0, r5
   1bc4c:	mov	r1, #1
   1bc50:	mov	r2, #1024	; 0x400
   1bc54:	bl	121b8 <myhtml_collection_check_size@plt>
   1bc58:	cmp	r0, #0
   1bc5c:	beq	1bc70 <myhtml_get_nodes_by_tag_id@@Base+0xe4>
   1bc60:	cmp	r8, #0
   1bc64:	movne	r0, #2
   1bc68:	strne	r0, [r8]
   1bc6c:	b	1bc80 <myhtml_get_nodes_by_tag_id@@Base+0xf4>
   1bc70:	ldr	r0, [r5]
   1bc74:	ldr	r1, [r5, #8]
   1bc78:	mov	r2, #0
   1bc7c:	str	r2, [r0, r1, lsl #2]
   1bc80:	mov	r4, r5
   1bc84:	mov	r0, r4
   1bc88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001bc8c <myhtml_get_nodes_by_name@@Base>:
   1bc8c:	push	{r4, r5, fp, lr}
   1bc90:	add	fp, sp, #8
   1bc94:	mov	r4, r1
   1bc98:	mov	r5, r0
   1bc9c:	ldr	r0, [r0, #28]
   1bca0:	mov	r1, r2
   1bca4:	mov	r2, r3
   1bca8:	bl	11f60 <myhtml_tag_get_by_name@plt>
   1bcac:	cmp	r0, #0
   1bcb0:	moveq	r0, #0
   1bcb4:	popeq	{r4, r5, fp, pc}
   1bcb8:	ldr	r3, [fp, #8]
   1bcbc:	ldr	r2, [r0]
   1bcc0:	mov	r0, r5
   1bcc4:	mov	r1, r4
   1bcc8:	pop	{r4, r5, fp, lr}
   1bccc:	b	1bb8c <myhtml_get_nodes_by_tag_id@@Base>

0001bcd0 <myhtml_node_first@@Base>:
   1bcd0:	ldr	r1, [r0, #84]	; 0x54
   1bcd4:	ldr	r0, [r0, #88]	; 0x58
   1bcd8:	cmp	r0, #0
   1bcdc:	beq	1bcf8 <myhtml_node_first@@Base+0x28>
   1bce0:	mov	r0, #0
   1bce4:	cmp	r1, #0
   1bce8:	ldrne	r1, [r1, #20]
   1bcec:	cmpne	r1, #0
   1bcf0:	bne	1bd00 <myhtml_node_first@@Base+0x30>
   1bcf4:	bx	lr
   1bcf8:	cmp	r1, #0
   1bcfc:	beq	1bd08 <myhtml_node_first@@Base+0x38>
   1bd00:	ldr	r0, [r1, #20]
   1bd04:	bx	lr
   1bd08:	mov	r0, #0
   1bd0c:	bx	lr

0001bd10 <myhtml_node_next@@Base>:
   1bd10:	ldr	r0, [r0, #16]
   1bd14:	bx	lr

0001bd18 <myhtml_node_prev@@Base>:
   1bd18:	ldr	r0, [r0, #12]
   1bd1c:	bx	lr

0001bd20 <myhtml_node_parent@@Base>:
   1bd20:	ldr	r0, [r0, #24]
   1bd24:	bx	lr

0001bd28 <myhtml_node_child@@Base>:
   1bd28:	ldr	r0, [r0, #20]
   1bd2c:	bx	lr

0001bd30 <myhtml_node_last_child@@Base>:
   1bd30:	ldr	r0, [r0, #28]
   1bd34:	bx	lr

0001bd38 <myhtml_node_create@@Base>:
   1bd38:	push	{r4, r5, fp, lr}
   1bd3c:	add	fp, sp, #8
   1bd40:	mov	r4, r2
   1bd44:	mov	r5, r1
   1bd48:	bl	11474 <myhtml_tree_node_create@plt>
   1bd4c:	str	r5, [r0, #4]
   1bd50:	str	r4, [r0, #8]
   1bd54:	pop	{r4, r5, fp, pc}

0001bd58 <myhtml_node_remove@@Base>:
   1bd58:	b	121ac <myhtml_tree_node_remove@plt>

0001bd5c <myhtml_node_delete@@Base>:
   1bd5c:	b	1217c <myhtml_tree_node_delete@plt>

0001bd60 <myhtml_node_delete_recursive@@Base>:
   1bd60:	b	11480 <myhtml_tree_node_delete_recursive@plt>

0001bd64 <myhtml_node_free@@Base>:
   1bd64:	b	120bc <myhtml_tree_node_free@plt>

0001bd68 <myhtml_node_insert_before@@Base>:
   1bd68:	push	{r4, sl, fp, lr}
   1bd6c:	add	fp, sp, #8
   1bd70:	mov	r4, r1
   1bd74:	mov	r1, r0
   1bd78:	mov	r0, #0
   1bd7c:	cmp	r1, #0
   1bd80:	cmpne	r4, #0
   1bd84:	bne	1bd8c <myhtml_node_insert_before@@Base+0x24>
   1bd88:	pop	{r4, sl, fp, pc}
   1bd8c:	mov	r0, r1
   1bd90:	mov	r1, r4
   1bd94:	bl	11834 <myhtml_tree_node_insert_before@plt>
   1bd98:	mov	r0, r4
   1bd9c:	pop	{r4, sl, fp, pc}

0001bda0 <myhtml_node_insert_after@@Base>:
   1bda0:	push	{r4, sl, fp, lr}
   1bda4:	add	fp, sp, #8
   1bda8:	mov	r4, r1
   1bdac:	mov	r1, r0
   1bdb0:	mov	r0, #0
   1bdb4:	cmp	r1, #0
   1bdb8:	cmpne	r4, #0
   1bdbc:	bne	1bdc4 <myhtml_node_insert_after@@Base+0x24>
   1bdc0:	pop	{r4, sl, fp, pc}
   1bdc4:	mov	r0, r1
   1bdc8:	mov	r1, r4
   1bdcc:	bl	117b0 <myhtml_tree_node_insert_after@plt>
   1bdd0:	mov	r0, r4
   1bdd4:	pop	{r4, sl, fp, pc}

0001bdd8 <myhtml_node_append_child@@Base>:
   1bdd8:	push	{r4, sl, fp, lr}
   1bddc:	add	fp, sp, #8
   1bde0:	mov	r4, r1
   1bde4:	mov	r1, r0
   1bde8:	mov	r0, #0
   1bdec:	cmp	r1, #0
   1bdf0:	cmpne	r4, #0
   1bdf4:	bne	1bdfc <myhtml_node_append_child@@Base+0x24>
   1bdf8:	pop	{r4, sl, fp, pc}
   1bdfc:	mov	r0, r1
   1be00:	mov	r1, r4
   1be04:	bl	11aec <myhtml_tree_node_add_child@plt>
   1be08:	mov	r0, r4
   1be0c:	pop	{r4, sl, fp, pc}

0001be10 <myhtml_node_insert_to_appropriate_place@@Base>:
   1be10:	push	{r4, sl, fp, lr}
   1be14:	add	fp, sp, #8
   1be18:	sub	sp, sp, #8
   1be1c:	mov	r4, r1
   1be20:	mov	r1, #0
   1be24:	cmp	r0, #0
   1be28:	cmpne	r4, #0
   1be2c:	beq	1be60 <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1be30:	ldr	r1, [r0, #40]	; 0x28
   1be34:	mov	r2, #1
   1be38:	strb	r2, [r1, #188]	; 0xbc
   1be3c:	add	r1, sp, #4
   1be40:	bl	11e34 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1be44:	ldr	r1, [r0, #40]	; 0x28
   1be48:	mov	r2, #0
   1be4c:	strb	r2, [r1, #188]	; 0xbc
   1be50:	ldr	r2, [sp, #4]
   1be54:	mov	r1, r4
   1be58:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   1be5c:	mov	r1, r4
   1be60:	mov	r0, r1
   1be64:	sub	sp, fp, #8
   1be68:	pop	{r4, sl, fp, pc}

0001be6c <myhtml_node_text_set@@Base>:
   1be6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1be70:	add	fp, sp, #24
   1be74:	mov	r7, #0
   1be78:	cmp	r0, #0
   1be7c:	beq	1bf70 <myhtml_node_text_set@@Base+0x104>
   1be80:	mov	r6, r3
   1be84:	cmp	r3, #41	; 0x29
   1be88:	bhi	1bf70 <myhtml_node_text_set@@Base+0x104>
   1be8c:	mov	r9, r2
   1be90:	mov	r8, r1
   1be94:	mov	r4, r0
   1be98:	ldr	r0, [r0, #32]
   1be9c:	ldr	r5, [r4, #40]	; 0x28
   1bea0:	cmp	r0, #0
   1bea4:	bne	1becc <myhtml_node_text_set@@Base+0x60>
   1bea8:	ldr	r0, [r5, #8]
   1beac:	ldr	r1, [r5, #40]	; 0x28
   1beb0:	bl	11e10 <myhtml_token_node_create@plt>
   1beb4:	str	r0, [r4, #32]
   1beb8:	cmp	r0, #0
   1bebc:	beq	1bf70 <myhtml_node_text_set@@Base+0x104>
   1bec0:	ldr	r1, [r0, #48]	; 0x30
   1bec4:	orr	r1, r1, #4
   1bec8:	str	r1, [r0, #48]	; 0x30
   1becc:	ldr	r0, [r4, #32]
   1bed0:	mov	r7, r0
   1bed4:	ldr	r2, [r7, #4]!
   1bed8:	cmp	r2, #0
   1bedc:	beq	1bf14 <myhtml_node_text_set@@Base+0xa8>
   1bee0:	ldr	r1, [r0, #8]
   1bee4:	cmp	r1, r9
   1bee8:	bcs	1bf2c <myhtml_node_text_set@@Base+0xc0>
   1beec:	ldr	r1, [r0, #20]
   1bef0:	ldr	r0, [r5, #4]
   1bef4:	bl	11b4c <mchar_async_free@plt>
   1bef8:	ldr	r0, [r5, #4]
   1befc:	ldr	r1, [r5, #52]	; 0x34
   1bf00:	ldr	r2, [r4, #32]
   1bf04:	add	r2, r2, #4
   1bf08:	mov	r3, r9
   1bf0c:	bl	11a44 <mycore_string_init@plt>
   1bf10:	b	1bf34 <myhtml_node_text_set@@Base+0xc8>
   1bf14:	ldr	r0, [r5, #4]
   1bf18:	ldr	r1, [r5, #52]	; 0x34
   1bf1c:	add	r3, r9, #2
   1bf20:	mov	r2, r7
   1bf24:	bl	11a44 <mycore_string_init@plt>
   1bf28:	b	1bf34 <myhtml_node_text_set@@Base+0xc8>
   1bf2c:	mov	r1, #0
   1bf30:	str	r1, [r0, #12]
   1bf34:	ldr	r0, [r4, #32]
   1bf38:	add	r0, r0, #4
   1bf3c:	mov	r1, r8
   1bf40:	mov	r2, r9
   1bf44:	cmp	r6, #0
   1bf48:	beq	1bf58 <myhtml_node_text_set@@Base+0xec>
   1bf4c:	mov	r3, r6
   1bf50:	bl	118a0 <myencoding_string_append@plt>
   1bf54:	b	1bf5c <myhtml_node_text_set@@Base+0xf0>
   1bf58:	bl	11cf0 <mycore_string_append@plt>
   1bf5c:	ldr	r0, [r4, #32]
   1bf60:	mov	r1, #0
   1bf64:	str	r1, [r0, #24]
   1bf68:	str	r1, [r0, #28]
   1bf6c:	add	r7, r0, #4
   1bf70:	mov	r0, r7
   1bf74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001bf78 <myhtml_node_text_set_with_charef@@Base>:
   1bf78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1bf7c:	add	fp, sp, #24
   1bf80:	sub	sp, sp, #64	; 0x40
   1bf84:	mov	r6, #0
   1bf88:	cmp	r0, #0
   1bf8c:	beq	1c098 <myhtml_node_text_set_with_charef@@Base+0x120>
   1bf90:	mov	r7, r3
   1bf94:	cmp	r3, #41	; 0x29
   1bf98:	bhi	1c098 <myhtml_node_text_set_with_charef@@Base+0x120>
   1bf9c:	mov	r9, r2
   1bfa0:	mov	r8, r1
   1bfa4:	mov	r4, r0
   1bfa8:	ldr	r0, [r0, #32]
   1bfac:	ldr	r5, [r4, #40]	; 0x28
   1bfb0:	cmp	r0, #0
   1bfb4:	bne	1bfdc <myhtml_node_text_set_with_charef@@Base+0x64>
   1bfb8:	ldr	r0, [r5, #8]
   1bfbc:	ldr	r1, [r5, #40]	; 0x28
   1bfc0:	bl	11e10 <myhtml_token_node_create@plt>
   1bfc4:	str	r0, [r4, #32]
   1bfc8:	cmp	r0, #0
   1bfcc:	beq	1c098 <myhtml_node_text_set_with_charef@@Base+0x120>
   1bfd0:	ldr	r1, [r0, #48]	; 0x30
   1bfd4:	orr	r1, r1, #4
   1bfd8:	str	r1, [r0, #48]	; 0x30
   1bfdc:	ldr	r0, [r4, #32]
   1bfe0:	mov	r6, r0
   1bfe4:	ldr	r2, [r6, #4]!
   1bfe8:	cmp	r2, #0
   1bfec:	beq	1c024 <myhtml_node_text_set_with_charef@@Base+0xac>
   1bff0:	ldr	r1, [r0, #8]
   1bff4:	cmp	r1, r9
   1bff8:	bcs	1c03c <myhtml_node_text_set_with_charef@@Base+0xc4>
   1bffc:	ldr	r1, [r0, #20]
   1c000:	ldr	r0, [r5, #4]
   1c004:	bl	11b4c <mchar_async_free@plt>
   1c008:	ldr	r0, [r5, #4]
   1c00c:	ldr	r1, [r5, #52]	; 0x34
   1c010:	ldr	r2, [r4, #32]
   1c014:	add	r2, r2, #4
   1c018:	mov	r3, r9
   1c01c:	bl	11a44 <mycore_string_init@plt>
   1c020:	b	1c044 <myhtml_node_text_set_with_charef@@Base+0xcc>
   1c024:	ldr	r0, [r5, #4]
   1c028:	ldr	r1, [r5, #52]	; 0x34
   1c02c:	add	r3, r9, #2
   1c030:	mov	r2, r6
   1c034:	bl	11a44 <mycore_string_init@plt>
   1c038:	b	1c044 <myhtml_node_text_set_with_charef@@Base+0xcc>
   1c03c:	mov	r1, #0
   1c040:	str	r1, [r0, #12]
   1c044:	mov	r6, sp
   1c048:	mov	r0, r6
   1c04c:	bl	11930 <myhtml_data_process_entry_clean@plt>
   1c050:	str	r7, [sp, #4]
   1c054:	add	r0, r6, #8
   1c058:	bl	1163c <myencoding_result_clean@plt>
   1c05c:	ldr	r0, [r4, #32]
   1c060:	add	r1, r0, #4
   1c064:	mov	r0, r6
   1c068:	mov	r2, r8
   1c06c:	mov	r3, r9
   1c070:	bl	11b88 <myhtml_data_process@plt>
   1c074:	ldr	r0, [r4, #32]
   1c078:	add	r1, r0, #4
   1c07c:	mov	r0, r6
   1c080:	bl	11d44 <myhtml_data_process_end@plt>
   1c084:	ldr	r0, [r4, #32]
   1c088:	mov	r1, #0
   1c08c:	str	r1, [r0, #24]
   1c090:	str	r1, [r0, #28]
   1c094:	add	r6, r0, #4
   1c098:	mov	r0, r6
   1c09c:	sub	sp, fp, #24
   1c0a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001c0a4 <myhtml_node_token@@Base>:
   1c0a4:	ldr	r0, [r0, #32]
   1c0a8:	bx	lr

0001c0ac <myhtml_node_namespace@@Base>:
   1c0ac:	ldr	r0, [r0, #8]
   1c0b0:	bx	lr

0001c0b4 <myhtml_node_namespace_set@@Base>:
   1c0b4:	str	r1, [r0, #8]
   1c0b8:	bx	lr

0001c0bc <myhtml_node_tag_id@@Base>:
   1c0bc:	ldr	r0, [r0, #4]
   1c0c0:	bx	lr

0001c0c4 <myhtml_tag_name_by_id@@Base>:
   1c0c4:	push	{r4, r5, fp, lr}
   1c0c8:	add	fp, sp, #8
   1c0cc:	mov	r4, r2
   1c0d0:	cmp	r2, #0
   1c0d4:	movne	r2, #0
   1c0d8:	strne	r2, [r4]
   1c0dc:	mov	r5, #0
   1c0e0:	cmp	r0, #0
   1c0e4:	ldrne	r0, [r0, #28]
   1c0e8:	cmpne	r0, #0
   1c0ec:	bne	1c0f8 <myhtml_tag_name_by_id@@Base+0x34>
   1c0f0:	mov	r0, r5
   1c0f4:	pop	{r4, r5, fp, pc}
   1c0f8:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1c0fc:	cmp	r0, #0
   1c100:	beq	1c0f0 <myhtml_tag_name_by_id@@Base+0x2c>
   1c104:	cmp	r4, #0
   1c108:	ldrne	r1, [r0, #8]
   1c10c:	strne	r1, [r4]
   1c110:	ldr	r5, [r0, #4]
   1c114:	mov	r0, r5
   1c118:	pop	{r4, r5, fp, pc}

0001c11c <myhtml_tag_id_by_name@@Base>:
   1c11c:	push	{r4, sl, fp, lr}
   1c120:	add	fp, sp, #8
   1c124:	mov	r4, #0
   1c128:	cmp	r0, #0
   1c12c:	ldrne	r0, [r0, #28]
   1c130:	cmpne	r0, #0
   1c134:	bne	1c140 <myhtml_tag_id_by_name@@Base+0x24>
   1c138:	mov	r0, r4
   1c13c:	pop	{r4, sl, fp, pc}
   1c140:	bl	11f60 <myhtml_tag_get_by_name@plt>
   1c144:	cmp	r0, #0
   1c148:	ldrne	r4, [r0]
   1c14c:	mov	r0, r4
   1c150:	pop	{r4, sl, fp, pc}

0001c154 <myhtml_node_is_close_self@@Base>:
   1c154:	ldr	r0, [r0, #32]
   1c158:	cmp	r0, #0
   1c15c:	moveq	r0, #0
   1c160:	ldrne	r0, [r0, #48]	; 0x30
   1c164:	ubfxne	r0, r0, #1, #1
   1c168:	bx	lr

0001c16c <myhtml_node_is_void_element@@Base>:
   1c16c:	ldr	r0, [r0, #4]
   1c170:	sub	r1, r0, #10
   1c174:	cmp	r1, #132	; 0x84
   1c178:	bhi	1c3a4 <myhtml_node_is_void_element@@Base+0x238>
   1c17c:	mov	r0, #1
   1c180:	add	r2, pc, #4
   1c184:	ldr	r1, [r2, r1, lsl #2]
   1c188:	add	pc, r2, r1
   1c18c:	andeq	r0, r0, r4, lsl r2
   1c190:	andeq	r0, r0, r8, lsl r2
   1c194:	andeq	r0, r0, r8, lsl r2
   1c198:	andeq	r0, r0, r8, lsl r2
   1c19c:	andeq	r0, r0, r8, lsl r2
   1c1a0:	andeq	r0, r0, r4, lsl r2
   1c1a4:	andeq	r0, r0, r8, lsl r2
   1c1a8:	andeq	r0, r0, r8, lsl r2
   1c1ac:	andeq	r0, r0, r8, lsl r2
   1c1b0:	andeq	r0, r0, r8, lsl r2
   1c1b4:	andeq	r0, r0, r8, lsl r2
   1c1b8:	andeq	r0, r0, r8, lsl r2
   1c1bc:	andeq	r0, r0, r8, lsl r2
   1c1c0:	andeq	r0, r0, r8, lsl r2
   1c1c4:	andeq	r0, r0, r4, lsl r2
   1c1c8:	andeq	r0, r0, r8, lsl r2
   1c1cc:	andeq	r0, r0, r8, lsl r2
   1c1d0:	andeq	r0, r0, r8, lsl r2
   1c1d4:	andeq	r0, r0, r8, lsl r2
   1c1d8:	andeq	r0, r0, r8, lsl r2
   1c1dc:	andeq	r0, r0, r8, lsl r2
   1c1e0:	andeq	r0, r0, r4, lsl r2
   1c1e4:	andeq	r0, r0, r8, lsl r2
   1c1e8:	andeq	r0, r0, r4, lsl r2
   1c1ec:	andeq	r0, r0, r8, lsl r2
   1c1f0:	andeq	r0, r0, r8, lsl r2
   1c1f4:	andeq	r0, r0, r8, lsl r2
   1c1f8:	andeq	r0, r0, r8, lsl r2
   1c1fc:	andeq	r0, r0, r8, lsl r2
   1c200:	andeq	r0, r0, r8, lsl r2
   1c204:	andeq	r0, r0, r8, lsl r2
   1c208:	andeq	r0, r0, r8, lsl r2
   1c20c:	andeq	r0, r0, r8, lsl r2
   1c210:	andeq	r0, r0, r8, lsl r2
   1c214:	andeq	r0, r0, r8, lsl r2
   1c218:	andeq	r0, r0, r8, lsl r2
   1c21c:	andeq	r0, r0, r4, lsl r2
   1c220:	andeq	r0, r0, r8, lsl r2
   1c224:	andeq	r0, r0, r8, lsl r2
   1c228:	andeq	r0, r0, r8, lsl r2
   1c22c:	andeq	r0, r0, r8, lsl r2
   1c230:	andeq	r0, r0, r8, lsl r2
   1c234:	andeq	r0, r0, r8, lsl r2
   1c238:	andeq	r0, r0, r8, lsl r2
   1c23c:	andeq	r0, r0, r8, lsl r2
   1c240:	andeq	r0, r0, r8, lsl r2
   1c244:	andeq	r0, r0, r8, lsl r2
   1c248:	andeq	r0, r0, r8, lsl r2
   1c24c:	andeq	r0, r0, r8, lsl r2
   1c250:	andeq	r0, r0, r8, lsl r2
   1c254:	andeq	r0, r0, r8, lsl r2
   1c258:	andeq	r0, r0, r8, lsl r2
   1c25c:	andeq	r0, r0, r8, lsl r2
   1c260:	andeq	r0, r0, r8, lsl r2
   1c264:	andeq	r0, r0, r4, lsl r2
   1c268:	andeq	r0, r0, r8, lsl r2
   1c26c:	andeq	r0, r0, r8, lsl r2
   1c270:	andeq	r0, r0, r8, lsl r2
   1c274:	andeq	r0, r0, r8, lsl r2
   1c278:	andeq	r0, r0, r4, lsl r2
   1c27c:	andeq	r0, r0, r4, lsl r2
   1c280:	andeq	r0, r0, r8, lsl r2
   1c284:	andeq	r0, r0, r8, lsl r2
   1c288:	andeq	r0, r0, r8, lsl r2
   1c28c:	andeq	r0, r0, r4, lsl r2
   1c290:	andeq	r0, r0, r8, lsl r2
   1c294:	andeq	r0, r0, r8, lsl r2
   1c298:	andeq	r0, r0, r8, lsl r2
   1c29c:	andeq	r0, r0, r4, lsl r2
   1c2a0:	andeq	r0, r0, r8, lsl r2
   1c2a4:	andeq	r0, r0, r8, lsl r2
   1c2a8:	andeq	r0, r0, r8, lsl r2
   1c2ac:	andeq	r0, r0, r8, lsl r2
   1c2b0:	andeq	r0, r0, r8, lsl r2
   1c2b4:	andeq	r0, r0, r8, lsl r2
   1c2b8:	andeq	r0, r0, r8, lsl r2
   1c2bc:	andeq	r0, r0, r4, lsl r2
   1c2c0:	andeq	r0, r0, r8, lsl r2
   1c2c4:	andeq	r0, r0, r8, lsl r2
   1c2c8:	andeq	r0, r0, r8, lsl r2
   1c2cc:	andeq	r0, r0, r8, lsl r2
   1c2d0:	andeq	r0, r0, r8, lsl r2
   1c2d4:	andeq	r0, r0, r8, lsl r2
   1c2d8:	andeq	r0, r0, r8, lsl r2
   1c2dc:	andeq	r0, r0, r8, lsl r2
   1c2e0:	andeq	r0, r0, r8, lsl r2
   1c2e4:	andeq	r0, r0, r8, lsl r2
   1c2e8:	andeq	r0, r0, r8, lsl r2
   1c2ec:	andeq	r0, r0, r8, lsl r2
   1c2f0:	andeq	r0, r0, r8, lsl r2
   1c2f4:	andeq	r0, r0, r4, lsl r2
   1c2f8:	andeq	r0, r0, r8, lsl r2
   1c2fc:	andeq	r0, r0, r8, lsl r2
   1c300:	andeq	r0, r0, r8, lsl r2
   1c304:	andeq	r0, r0, r8, lsl r2
   1c308:	andeq	r0, r0, r8, lsl r2
   1c30c:	andeq	r0, r0, r8, lsl r2
   1c310:	andeq	r0, r0, r8, lsl r2
   1c314:	andeq	r0, r0, r8, lsl r2
   1c318:	andeq	r0, r0, r8, lsl r2
   1c31c:	andeq	r0, r0, r8, lsl r2
   1c320:	andeq	r0, r0, r8, lsl r2
   1c324:	andeq	r0, r0, r8, lsl r2
   1c328:	andeq	r0, r0, r8, lsl r2
   1c32c:	andeq	r0, r0, r8, lsl r2
   1c330:	andeq	r0, r0, r8, lsl r2
   1c334:	andeq	r0, r0, r4, lsl r2
   1c338:	andeq	r0, r0, r8, lsl r2
   1c33c:	andeq	r0, r0, r8, lsl r2
   1c340:	andeq	r0, r0, r8, lsl r2
   1c344:	andeq	r0, r0, r8, lsl r2
   1c348:	andeq	r0, r0, r8, lsl r2
   1c34c:	andeq	r0, r0, r8, lsl r2
   1c350:	andeq	r0, r0, r8, lsl r2
   1c354:	andeq	r0, r0, r8, lsl r2
   1c358:	andeq	r0, r0, r8, lsl r2
   1c35c:	andeq	r0, r0, r8, lsl r2
   1c360:	andeq	r0, r0, r8, lsl r2
   1c364:	andeq	r0, r0, r8, lsl r2
   1c368:	andeq	r0, r0, r8, lsl r2
   1c36c:	andeq	r0, r0, r8, lsl r2
   1c370:	andeq	r0, r0, r8, lsl r2
   1c374:	andeq	r0, r0, r8, lsl r2
   1c378:	andeq	r0, r0, r8, lsl r2
   1c37c:	andeq	r0, r0, r8, lsl r2
   1c380:	andeq	r0, r0, r8, lsl r2
   1c384:	andeq	r0, r0, r4, lsl r2
   1c388:	andeq	r0, r0, r8, lsl r2
   1c38c:	andeq	r0, r0, r8, lsl r2
   1c390:	andeq	r0, r0, r8, lsl r2
   1c394:	andeq	r0, r0, r8, lsl r2
   1c398:	andeq	r0, r0, r8, lsl r2
   1c39c:	andeq	r0, r0, r4, lsl r2
   1c3a0:	bx	lr
   1c3a4:	mov	r0, #0
   1c3a8:	bx	lr

0001c3ac <myhtml_node_attribute_first@@Base>:
   1c3ac:	ldr	r0, [r0, #32]
   1c3b0:	cmp	r0, #0
   1c3b4:	ldrne	r0, [r0, #40]	; 0x28
   1c3b8:	moveq	r0, #0
   1c3bc:	bx	lr

0001c3c0 <myhtml_node_attribute_last@@Base>:
   1c3c0:	ldr	r0, [r0, #32]
   1c3c4:	cmp	r0, #0
   1c3c8:	ldrne	r0, [r0, #44]	; 0x2c
   1c3cc:	moveq	r0, #0
   1c3d0:	bx	lr

0001c3d4 <myhtml_node_text@@Base>:
   1c3d4:	ldr	r0, [r0, #32]
   1c3d8:	cmp	r0, #0
   1c3dc:	beq	1c3f4 <myhtml_node_text@@Base+0x20>
   1c3e0:	ldr	r2, [r0, #12]
   1c3e4:	cmp	r2, #0
   1c3e8:	ldrne	r0, [r0, #4]
   1c3ec:	cmpne	r0, #0
   1c3f0:	bne	1c404 <myhtml_node_text@@Base+0x30>
   1c3f4:	mov	r0, #0
   1c3f8:	cmp	r1, #0
   1c3fc:	strne	r0, [r1]
   1c400:	bx	lr
   1c404:	cmp	r1, #0
   1c408:	strne	r2, [r1]
   1c40c:	bxne	lr
   1c410:	bx	lr

0001c414 <myhtml_node_string@@Base>:
   1c414:	cmp	r0, #0
   1c418:	moveq	r0, #0
   1c41c:	bxeq	lr
   1c420:	ldr	r0, [r0, #32]
   1c424:	cmp	r0, #0
   1c428:	addne	r0, r0, #4
   1c42c:	bx	lr

0001c430 <myhtml_node_raw_position@@Base>:
   1c430:	cmp	r1, #0
   1c434:	ldrne	r1, [r1, #32]
   1c438:	cmpne	r1, #0
   1c43c:	bne	1c450 <myhtml_node_raw_position@@Base+0x20>
   1c440:	mov	r1, #0
   1c444:	str	r1, [r0]
   1c448:	str	r1, [r0, #4]
   1c44c:	bx	lr
   1c450:	ldr	r2, [r1, #24]
   1c454:	ldr	r1, [r1, #28]
   1c458:	str	r2, [r0]
   1c45c:	str	r1, [r0, #4]
   1c460:	bx	lr

0001c464 <myhtml_node_element_position@@Base>:
   1c464:	cmp	r1, #0
   1c468:	ldrne	r1, [r1, #32]
   1c46c:	cmpne	r1, #0
   1c470:	bne	1c484 <myhtml_node_element_position@@Base+0x20>
   1c474:	mov	r1, #0
   1c478:	str	r1, [r0]
   1c47c:	str	r1, [r0, #4]
   1c480:	bx	lr
   1c484:	ldr	r2, [r1, #32]
   1c488:	ldr	r1, [r1, #36]	; 0x24
   1c48c:	str	r2, [r0]
   1c490:	str	r1, [r0, #4]
   1c494:	bx	lr

0001c498 <myhtml_node_set_data@@Base>:
   1c498:	str	r1, [r0, #36]	; 0x24
   1c49c:	bx	lr

0001c4a0 <myhtml_node_get_data@@Base>:
   1c4a0:	ldr	r0, [r0, #36]	; 0x24
   1c4a4:	bx	lr

0001c4a8 <myhtml_node_tree@@Base>:
   1c4a8:	ldr	r0, [r0, #40]	; 0x28
   1c4ac:	bx	lr

0001c4b0 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1c4b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c4b4:	add	fp, sp, #24
   1c4b8:	cmp	r0, #0
   1c4bc:	beq	1c580 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd0>
   1c4c0:	mov	r4, r3
   1c4c4:	mov	r8, r2
   1c4c8:	mov	r6, r1
   1c4cc:	mov	r9, r0
   1c4d0:	mov	r5, r0
   1c4d4:	ldr	r0, [r0, #32]
   1c4d8:	cmp	r0, #0
   1c4dc:	beq	1c55c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c4e0:	ldr	r7, [r0, #40]	; 0x28
   1c4e4:	cmp	r7, #0
   1c4e8:	bne	1c4fc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1c4ec:	b	1c55c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c4f0:	ldr	r7, [r7]
   1c4f4:	cmp	r7, #0
   1c4f8:	beq	1c55c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c4fc:	ldr	r0, [r7, #16]
   1c500:	cmp	r0, r4
   1c504:	bne	1c4f0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c508:	ldr	r0, [r7, #8]
   1c50c:	mov	r1, r8
   1c510:	mov	r2, r4
   1c514:	bl	11714 <mycore_strncasecmp@plt>
   1c518:	cmp	r0, #0
   1c51c:	bne	1c4f0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c520:	ldr	r0, [r6]
   1c524:	ldr	r1, [r6, #8]
   1c528:	str	r5, [r0, r1, lsl #2]
   1c52c:	add	r0, r1, #1
   1c530:	str	r0, [r6, #8]
   1c534:	ldr	r1, [r6, #4]
   1c538:	cmp	r0, r1
   1c53c:	bcc	1c4f0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c540:	mov	r0, r6
   1c544:	mov	r1, #1024	; 0x400
   1c548:	mov	r2, #0
   1c54c:	bl	121b8 <myhtml_collection_check_size@plt>
   1c550:	cmp	r0, #0
   1c554:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c558:	b	1c4f0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c55c:	ldr	r0, [r5, #20]
   1c560:	cmp	r0, #0
   1c564:	bne	1c4d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1c568:	ldr	r0, [r5, #16]
   1c56c:	cmp	r0, #0
   1c570:	bne	1c4d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1c574:	ldr	r5, [r5, #24]
   1c578:	cmp	r5, r9
   1c57c:	bne	1c568 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xb8>
   1c580:	mov	r0, #0
   1c584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001c588 <myhtml_get_nodes_by_attribute_key@@Base>:
   1c588:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c58c:	add	fp, sp, #24
   1c590:	mov	r6, r3
   1c594:	mov	r7, r2
   1c598:	mov	r5, r1
   1c59c:	mov	r4, r0
   1c5a0:	ldr	r8, [fp, #12]
   1c5a4:	cmp	r1, #0
   1c5a8:	bne	1c5e8 <myhtml_get_nodes_by_attribute_key@@Base+0x60>
   1c5ac:	mov	r0, #1024	; 0x400
   1c5b0:	mov	r1, r8
   1c5b4:	bl	11774 <myhtml_collection_create@plt>
   1c5b8:	mov	r5, r0
   1c5bc:	cmp	r8, #0
   1c5c0:	beq	1c5e0 <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1c5c4:	mov	r0, #0
   1c5c8:	cmp	r5, #0
   1c5cc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c5d0:	ldr	r1, [r8]
   1c5d4:	cmp	r1, #0
   1c5d8:	beq	1c5e8 <myhtml_get_nodes_by_attribute_key@@Base+0x60>
   1c5dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c5e0:	cmp	r5, #0
   1c5e4:	beq	1c618 <myhtml_get_nodes_by_attribute_key@@Base+0x90>
   1c5e8:	ldr	r3, [fp, #8]
   1c5ec:	cmp	r7, #0
   1c5f0:	ldreq	r7, [r4, #96]	; 0x60
   1c5f4:	mov	r0, r7
   1c5f8:	mov	r1, r5
   1c5fc:	mov	r2, r6
   1c600:	bl	1133c <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1c604:	cmp	r8, #0
   1c608:	cmpne	r0, #0
   1c60c:	strne	r0, [r8]
   1c610:	mov	r0, r5
   1c614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c618:	mov	r0, #0
   1c61c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c620 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1c620:	mov	r3, r0
   1c624:	ldr	ip, [r0, #8]
   1c628:	mov	r0, #0
   1c62c:	cmp	ip, r2
   1c630:	bxne	lr
   1c634:	push	{fp, lr}
   1c638:	mov	fp, sp
   1c63c:	ldr	r0, [r3]
   1c640:	bl	1229c <mycore_strncmp@plt>
   1c644:	clz	r0, r0
   1c648:	lsr	r0, r0, #5
   1c64c:	pop	{fp, lr}
   1c650:	bx	lr

0001c654 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1c654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c658:	add	fp, sp, #28
   1c65c:	sub	sp, sp, #4
   1c660:	mov	r6, r0
   1c664:	ldr	r0, [r0, #8]
   1c668:	cmp	r0, r2
   1c66c:	bcc	1c778 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1c670:	mov	r4, r2
   1c674:	mov	sl, r1
   1c678:	ldr	r7, [r6]
   1c67c:	mov	r0, r7
   1c680:	bl	1229c <mycore_strncmp@plt>
   1c684:	cmp	r0, #0
   1c688:	bne	1c6d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x84>
   1c68c:	ldr	r1, [r6, #8]
   1c690:	cmp	r1, r4
   1c694:	bls	1c6cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x78>
   1c698:	ldrb	r0, [r7, r4]
   1c69c:	sub	r0, r0, #9
   1c6a0:	uxtb	r2, r0
   1c6a4:	cmp	r2, #24
   1c6a8:	bcs	1c6cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x78>
   1c6ac:	mov	r0, #1
   1c6b0:	movw	r3, #27
   1c6b4:	movt	r3, #128	; 0x80
   1c6b8:	tst	r0, r3, lsr r2
   1c6bc:	bne	1c784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c6c0:	cmp	r1, r4
   1c6c4:	bne	1c6d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x84>
   1c6c8:	b	1c784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c6cc:	mov	r0, #1
   1c6d0:	cmp	r1, r4
   1c6d4:	beq	1c784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c6d8:	ldr	r0, [r6, #8]
   1c6dc:	sub	r0, r0, #1
   1c6e0:	cmp	r0, r4
   1c6e4:	bcc	1c778 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1c6e8:	mov	r8, #1
   1c6ec:	movw	r9, #27
   1c6f0:	movt	r9, #128	; 0x80
   1c6f4:	mov	r5, #1
   1c6f8:	add	r0, r7, r5
   1c6fc:	ldrb	r1, [r0, #-1]
   1c700:	sub	r1, r1, #9
   1c704:	cmp	r1, #23
   1c708:	bhi	1c764 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x110>
   1c70c:	tst	r9, r8, lsl r1
   1c710:	beq	1c764 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x110>
   1c714:	mov	r1, sl
   1c718:	mov	r2, r4
   1c71c:	bl	1229c <mycore_strncmp@plt>
   1c720:	cmp	r0, #0
   1c724:	bne	1c764 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x110>
   1c728:	cmp	r5, r4
   1c72c:	bls	1c754 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x100>
   1c730:	add	r0, r5, r4
   1c734:	ldrb	r0, [r7, r0]
   1c738:	sub	r0, r0, #9
   1c73c:	uxtb	r1, r0
   1c740:	cmp	r1, #24
   1c744:	bcs	1c754 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x100>
   1c748:	mov	r0, #1
   1c74c:	tst	r0, r9, lsr r1
   1c750:	bne	1c784 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c754:	ldr	r0, [r6, #8]
   1c758:	sub	r0, r0, r5
   1c75c:	cmp	r0, r4
   1c760:	beq	1c78c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x138>
   1c764:	ldr	r0, [r6, #8]
   1c768:	add	r5, r5, #1
   1c76c:	sub	r0, r0, r5
   1c770:	cmp	r0, r4
   1c774:	bcs	1c6f8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa4>
   1c778:	mov	r0, #0
   1c77c:	sub	sp, fp, #28
   1c780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c784:	sub	sp, fp, #28
   1c788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c78c:	mov	r0, #1
   1c790:	sub	sp, fp, #28
   1c794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c798 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1c798:	mov	r3, r0
   1c79c:	ldr	ip, [r0, #8]
   1c7a0:	mov	r0, #0
   1c7a4:	cmp	ip, r2
   1c7a8:	bxcc	lr
   1c7ac:	push	{fp, lr}
   1c7b0:	mov	fp, sp
   1c7b4:	ldr	r0, [r3]
   1c7b8:	bl	1229c <mycore_strncmp@plt>
   1c7bc:	clz	r0, r0
   1c7c0:	lsr	r0, r0, #5
   1c7c4:	pop	{fp, lr}
   1c7c8:	bx	lr

0001c7cc <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1c7cc:	ldr	r3, [r0, #8]
   1c7d0:	mov	ip, #0
   1c7d4:	cmp	r3, r2
   1c7d8:	bcc	1c800 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x34>
   1c7dc:	push	{fp, lr}
   1c7e0:	mov	fp, sp
   1c7e4:	sub	r3, r3, r2
   1c7e8:	ldr	r0, [r0]
   1c7ec:	add	r0, r0, r3
   1c7f0:	bl	1229c <mycore_strncmp@plt>
   1c7f4:	clz	r0, r0
   1c7f8:	lsr	ip, r0, #5
   1c7fc:	pop	{fp, lr}
   1c800:	mov	r0, ip
   1c804:	bx	lr

0001c808 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1c808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c80c:	add	fp, sp, #24
   1c810:	mov	r8, r1
   1c814:	mov	r6, r0
   1c818:	ldr	r1, [r0, #8]
   1c81c:	mov	r0, #0
   1c820:	cmp	r1, r2
   1c824:	bcc	1c87c <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x74>
   1c828:	mov	r4, r2
   1c82c:	ldr	r1, [r6, #8]
   1c830:	cmp	r1, r2
   1c834:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c838:	ldr	r7, [r6]
   1c83c:	mov	r5, #0
   1c840:	b	1c860 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x58>
   1c844:	ldr	r0, [r6, #8]
   1c848:	sub	r5, r5, #1
   1c84c:	add	r0, r0, r5
   1c850:	add	r7, r7, #1
   1c854:	cmp	r0, r4
   1c858:	movcc	r0, #0
   1c85c:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c860:	mov	r0, r7
   1c864:	mov	r1, r8
   1c868:	mov	r2, r4
   1c86c:	bl	1229c <mycore_strncmp@plt>
   1c870:	cmp	r0, #0
   1c874:	bne	1c844 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x3c>
   1c878:	mov	r0, #1
   1c87c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c880 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1c880:	push	{r4, r5, r6, sl, fp, lr}
   1c884:	add	fp, sp, #16
   1c888:	mov	r4, r2
   1c88c:	mov	r6, r1
   1c890:	mov	r1, r0
   1c894:	ldr	r2, [r0, #8]
   1c898:	mov	r0, #0
   1c89c:	cmp	r2, r4
   1c8a0:	popcc	{r4, r5, r6, sl, fp, pc}
   1c8a4:	ldr	r5, [r1]
   1c8a8:	bne	1c8c8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x48>
   1c8ac:	mov	r0, r5
   1c8b0:	mov	r1, r6
   1c8b4:	mov	r2, r4
   1c8b8:	bl	1229c <mycore_strncmp@plt>
   1c8bc:	cmp	r0, #0
   1c8c0:	moveq	r0, #1
   1c8c4:	popeq	{r4, r5, r6, sl, fp, pc}
   1c8c8:	mov	r0, r5
   1c8cc:	mov	r1, r6
   1c8d0:	mov	r2, r4
   1c8d4:	bl	1229c <mycore_strncmp@plt>
   1c8d8:	cmp	r0, #0
   1c8dc:	beq	1c8e8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x68>
   1c8e0:	mov	r0, #0
   1c8e4:	pop	{r4, r5, r6, sl, fp, pc}
   1c8e8:	ldrb	r1, [r5, r4]
   1c8ec:	mov	r0, #1
   1c8f0:	cmp	r1, #45	; 0x2d
   1c8f4:	movne	r0, #0
   1c8f8:	pop	{r4, r5, r6, sl, fp, pc}

0001c8fc <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1c8fc:	mov	r3, r0
   1c900:	ldr	ip, [r0, #8]
   1c904:	mov	r0, #0
   1c908:	cmp	ip, r2
   1c90c:	bxne	lr
   1c910:	push	{fp, lr}
   1c914:	mov	fp, sp
   1c918:	ldr	r0, [r3]
   1c91c:	bl	11714 <mycore_strncasecmp@plt>
   1c920:	clz	r0, r0
   1c924:	lsr	r0, r0, #5
   1c928:	pop	{fp, lr}
   1c92c:	bx	lr

0001c930 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1c930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c934:	add	fp, sp, #28
   1c938:	sub	sp, sp, #4
   1c93c:	mov	r6, r0
   1c940:	ldr	r0, [r0, #8]
   1c944:	cmp	r0, r2
   1c948:	bcc	1ca54 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1c94c:	mov	r4, r2
   1c950:	mov	sl, r1
   1c954:	ldr	r7, [r6]
   1c958:	mov	r0, r7
   1c95c:	bl	11714 <mycore_strncasecmp@plt>
   1c960:	cmp	r0, #0
   1c964:	bne	1c9b4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x84>
   1c968:	ldr	r1, [r6, #8]
   1c96c:	cmp	r1, r4
   1c970:	bls	1c9a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x78>
   1c974:	ldrb	r0, [r7, r4]
   1c978:	sub	r0, r0, #9
   1c97c:	uxtb	r2, r0
   1c980:	cmp	r2, #24
   1c984:	bcs	1c9a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x78>
   1c988:	mov	r0, #1
   1c98c:	movw	r3, #27
   1c990:	movt	r3, #128	; 0x80
   1c994:	tst	r0, r3, lsr r2
   1c998:	bne	1ca60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1c99c:	cmp	r1, r4
   1c9a0:	bne	1c9b4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x84>
   1c9a4:	b	1ca60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1c9a8:	mov	r0, #1
   1c9ac:	cmp	r1, r4
   1c9b0:	beq	1ca60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1c9b4:	ldr	r0, [r6, #8]
   1c9b8:	sub	r0, r0, #1
   1c9bc:	cmp	r0, r4
   1c9c0:	bcc	1ca54 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1c9c4:	mov	r8, #1
   1c9c8:	movw	r9, #27
   1c9cc:	movt	r9, #128	; 0x80
   1c9d0:	mov	r5, #1
   1c9d4:	add	r0, r7, r5
   1c9d8:	ldrb	r1, [r0, #-1]
   1c9dc:	sub	r1, r1, #9
   1c9e0:	cmp	r1, #23
   1c9e4:	bhi	1ca40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x110>
   1c9e8:	tst	r9, r8, lsl r1
   1c9ec:	beq	1ca40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x110>
   1c9f0:	mov	r1, sl
   1c9f4:	mov	r2, r4
   1c9f8:	bl	11714 <mycore_strncasecmp@plt>
   1c9fc:	cmp	r0, #0
   1ca00:	bne	1ca40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x110>
   1ca04:	cmp	r5, r4
   1ca08:	bls	1ca30 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x100>
   1ca0c:	add	r0, r5, r4
   1ca10:	ldrb	r0, [r7, r0]
   1ca14:	sub	r0, r0, #9
   1ca18:	uxtb	r1, r0
   1ca1c:	cmp	r1, #24
   1ca20:	bcs	1ca30 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x100>
   1ca24:	mov	r0, #1
   1ca28:	tst	r0, r9, lsr r1
   1ca2c:	bne	1ca60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1ca30:	ldr	r0, [r6, #8]
   1ca34:	sub	r0, r0, r5
   1ca38:	cmp	r0, r4
   1ca3c:	beq	1ca68 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x138>
   1ca40:	ldr	r0, [r6, #8]
   1ca44:	add	r5, r5, #1
   1ca48:	sub	r0, r0, r5
   1ca4c:	cmp	r0, r4
   1ca50:	bcs	1c9d4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa4>
   1ca54:	mov	r0, #0
   1ca58:	sub	sp, fp, #28
   1ca5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca60:	sub	sp, fp, #28
   1ca64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca68:	mov	r0, #1
   1ca6c:	sub	sp, fp, #28
   1ca70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ca74 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1ca74:	mov	r3, r0
   1ca78:	ldr	ip, [r0, #8]
   1ca7c:	mov	r0, #0
   1ca80:	cmp	ip, r2
   1ca84:	bxcc	lr
   1ca88:	push	{fp, lr}
   1ca8c:	mov	fp, sp
   1ca90:	ldr	r0, [r3]
   1ca94:	bl	11714 <mycore_strncasecmp@plt>
   1ca98:	clz	r0, r0
   1ca9c:	lsr	r0, r0, #5
   1caa0:	pop	{fp, lr}
   1caa4:	bx	lr

0001caa8 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1caa8:	ldr	r3, [r0, #8]
   1caac:	mov	ip, #0
   1cab0:	cmp	r3, r2
   1cab4:	bcc	1cadc <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x34>
   1cab8:	push	{fp, lr}
   1cabc:	mov	fp, sp
   1cac0:	sub	r3, r3, r2
   1cac4:	ldr	r0, [r0]
   1cac8:	add	r0, r0, r3
   1cacc:	bl	11714 <mycore_strncasecmp@plt>
   1cad0:	clz	r0, r0
   1cad4:	lsr	ip, r0, #5
   1cad8:	pop	{fp, lr}
   1cadc:	mov	r0, ip
   1cae0:	bx	lr

0001cae4 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1cae4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cae8:	add	fp, sp, #24
   1caec:	mov	r8, r1
   1caf0:	mov	r6, r0
   1caf4:	ldr	r1, [r0, #8]
   1caf8:	mov	r0, #0
   1cafc:	cmp	r1, r2
   1cb00:	bcc	1cb58 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x74>
   1cb04:	mov	r4, r2
   1cb08:	ldr	r1, [r6, #8]
   1cb0c:	cmp	r1, r2
   1cb10:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cb14:	ldr	r7, [r6]
   1cb18:	mov	r5, #0
   1cb1c:	b	1cb3c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x58>
   1cb20:	ldr	r0, [r6, #8]
   1cb24:	sub	r5, r5, #1
   1cb28:	add	r0, r0, r5
   1cb2c:	add	r7, r7, #1
   1cb30:	cmp	r0, r4
   1cb34:	movcc	r0, #0
   1cb38:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cb3c:	mov	r0, r7
   1cb40:	mov	r1, r8
   1cb44:	mov	r2, r4
   1cb48:	bl	11714 <mycore_strncasecmp@plt>
   1cb4c:	cmp	r0, #0
   1cb50:	bne	1cb20 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x3c>
   1cb54:	mov	r0, #1
   1cb58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001cb5c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1cb5c:	push	{r4, r5, r6, sl, fp, lr}
   1cb60:	add	fp, sp, #16
   1cb64:	mov	r4, r2
   1cb68:	mov	r6, r1
   1cb6c:	mov	r1, r0
   1cb70:	ldr	r2, [r0, #8]
   1cb74:	mov	r0, #0
   1cb78:	cmp	r2, r4
   1cb7c:	popcc	{r4, r5, r6, sl, fp, pc}
   1cb80:	ldr	r5, [r1]
   1cb84:	bne	1cba4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x48>
   1cb88:	mov	r0, r5
   1cb8c:	mov	r1, r6
   1cb90:	mov	r2, r4
   1cb94:	bl	11714 <mycore_strncasecmp@plt>
   1cb98:	cmp	r0, #0
   1cb9c:	moveq	r0, #1
   1cba0:	popeq	{r4, r5, r6, sl, fp, pc}
   1cba4:	mov	r0, r5
   1cba8:	mov	r1, r6
   1cbac:	mov	r2, r4
   1cbb0:	bl	11714 <mycore_strncasecmp@plt>
   1cbb4:	cmp	r0, #0
   1cbb8:	beq	1cbc4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x68>
   1cbbc:	mov	r0, #0
   1cbc0:	pop	{r4, r5, r6, sl, fp, pc}
   1cbc4:	ldrb	r1, [r5, r4]
   1cbc8:	mov	r0, #1
   1cbcc:	cmp	r1, #45	; 0x2d
   1cbd0:	movne	r0, #0
   1cbd4:	pop	{r4, r5, r6, sl, fp, pc}

0001cbd8 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1cbd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cbdc:	add	fp, sp, #28
   1cbe0:	sub	sp, sp, #4
   1cbe4:	cmp	r0, #0
   1cbe8:	beq	1cca4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xcc>
   1cbec:	mov	sl, r3
   1cbf0:	mov	r5, r2
   1cbf4:	mov	r6, r1
   1cbf8:	mov	r9, r0
   1cbfc:	ldr	r8, [fp, #8]
   1cc00:	mov	r7, r0
   1cc04:	ldr	r0, [r0, #32]
   1cc08:	cmp	r0, #0
   1cc0c:	beq	1cc80 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1cc10:	ldr	r4, [r0, #40]	; 0x28
   1cc14:	cmp	r4, #0
   1cc18:	bne	1cc2c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1cc1c:	b	1cc80 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1cc20:	ldr	r4, [r4]
   1cc24:	cmp	r4, #0
   1cc28:	beq	1cc80 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1cc2c:	add	r0, r4, #28
   1cc30:	mov	r1, sl
   1cc34:	mov	r2, r8
   1cc38:	blx	r5
   1cc3c:	cmp	r0, #0
   1cc40:	beq	1cc20 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1cc44:	ldr	r0, [r6]
   1cc48:	ldr	r1, [r6, #8]
   1cc4c:	str	r7, [r0, r1, lsl #2]
   1cc50:	add	r0, r1, #1
   1cc54:	str	r0, [r6, #8]
   1cc58:	ldr	r1, [r6, #4]
   1cc5c:	cmp	r0, r1
   1cc60:	bcc	1cc20 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1cc64:	mov	r0, r6
   1cc68:	mov	r1, #1024	; 0x400
   1cc6c:	mov	r2, #0
   1cc70:	bl	121b8 <myhtml_collection_check_size@plt>
   1cc74:	cmp	r0, #0
   1cc78:	beq	1cc20 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1cc7c:	b	1cca8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xd0>
   1cc80:	ldr	r0, [r7, #20]
   1cc84:	cmp	r0, #0
   1cc88:	bne	1cc00 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1cc8c:	ldr	r0, [r7, #16]
   1cc90:	cmp	r0, #0
   1cc94:	bne	1cc00 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1cc98:	ldr	r7, [r7, #24]
   1cc9c:	cmp	r7, r9
   1cca0:	bne	1cc8c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb4>
   1cca4:	mov	r0, #0
   1cca8:	sub	sp, fp, #28
   1ccac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ccb0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1ccb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccb4:	add	fp, sp, #28
   1ccb8:	sub	sp, sp, #4
   1ccbc:	cmp	r0, #0
   1ccc0:	beq	1cda0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf0>
   1ccc4:	mov	r4, r3
   1ccc8:	mov	sl, r2
   1cccc:	mov	r6, r1
   1ccd0:	mov	r7, r0
   1ccd4:	ldr	r5, [fp, #8]
   1ccd8:	mov	r8, r0
   1ccdc:	ldr	r0, [r0, #32]
   1cce0:	cmp	r0, #0
   1cce4:	beq	1cd7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1cce8:	ldr	r9, [r0, #40]	; 0x28
   1ccec:	cmp	r9, #0
   1ccf0:	bne	1cd04 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1ccf4:	b	1cd7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1ccf8:	ldr	r9, [r9]
   1ccfc:	cmp	r9, #0
   1cd00:	beq	1cd7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1cd04:	ldr	r0, [r9, #16]
   1cd08:	cmp	r0, r5
   1cd0c:	bne	1ccf8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cd10:	ldr	r0, [r9, #8]
   1cd14:	mov	r1, r4
   1cd18:	mov	r2, r5
   1cd1c:	bl	11714 <mycore_strncasecmp@plt>
   1cd20:	cmp	r0, #0
   1cd24:	bne	1ccf8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cd28:	add	r0, r9, #28
   1cd2c:	ldr	r1, [fp, #12]
   1cd30:	ldr	r2, [fp, #16]
   1cd34:	blx	sl
   1cd38:	cmp	r0, #0
   1cd3c:	beq	1ccf8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cd40:	ldr	r0, [r6]
   1cd44:	ldr	r1, [r6, #8]
   1cd48:	str	r8, [r0, r1, lsl #2]
   1cd4c:	add	r0, r1, #1
   1cd50:	str	r0, [r6, #8]
   1cd54:	ldr	r1, [r6, #4]
   1cd58:	cmp	r0, r1
   1cd5c:	bcc	1ccf8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cd60:	mov	r0, r6
   1cd64:	mov	r1, #1024	; 0x400
   1cd68:	mov	r2, #0
   1cd6c:	bl	121b8 <myhtml_collection_check_size@plt>
   1cd70:	cmp	r0, #0
   1cd74:	beq	1ccf8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cd78:	b	1cda4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf4>
   1cd7c:	ldr	r0, [r8, #20]
   1cd80:	cmp	r0, #0
   1cd84:	bne	1ccd8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cd88:	ldr	r0, [r8, #16]
   1cd8c:	cmp	r0, #0
   1cd90:	bne	1ccd8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cd94:	ldr	r8, [r8, #24]
   1cd98:	cmp	r8, r7
   1cd9c:	bne	1cd88 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd8>
   1cda0:	mov	r0, #0
   1cda4:	sub	sp, fp, #28
   1cda8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cdac <_myhtml_get_nodes_by_attribute_value@@Base>:
   1cdac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cdb0:	add	fp, sp, #24
   1cdb4:	sub	sp, sp, #16
   1cdb8:	mov	r6, r3
   1cdbc:	mov	r7, r2
   1cdc0:	mov	r5, r1
   1cdc4:	mov	r4, r0
   1cdc8:	ldr	r8, [fp, #24]
   1cdcc:	cmp	r1, #0
   1cdd0:	beq	1ce14 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1cdd4:	ldr	r3, [fp, #8]
   1cdd8:	cmp	r7, #0
   1cddc:	ldreq	r7, [r4, #96]	; 0x60
   1cde0:	ldr	r0, [fp, #20]
   1cde4:	ldr	r4, [fp, #16]
   1cde8:	cmp	r3, #0
   1cdec:	ldrne	r1, [fp, #12]
   1cdf0:	cmpne	r1, #0
   1cdf4:	bne	1ce4c <_myhtml_get_nodes_by_attribute_value@@Base+0xa0>
   1cdf8:	str	r0, [sp]
   1cdfc:	mov	r0, r7
   1ce00:	mov	r1, r5
   1ce04:	mov	r2, r6
   1ce08:	mov	r3, r4
   1ce0c:	bl	110a8 <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1ce10:	b	1ce64 <_myhtml_get_nodes_by_attribute_value@@Base+0xb8>
   1ce14:	mov	r0, #1024	; 0x400
   1ce18:	mov	r1, r8
   1ce1c:	bl	11774 <myhtml_collection_create@plt>
   1ce20:	mov	r5, r0
   1ce24:	cmp	r8, #0
   1ce28:	beq	1ce7c <_myhtml_get_nodes_by_attribute_value@@Base+0xd0>
   1ce2c:	mov	r0, #0
   1ce30:	cmp	r5, #0
   1ce34:	beq	1ce44 <_myhtml_get_nodes_by_attribute_value@@Base+0x98>
   1ce38:	ldr	r1, [r8]
   1ce3c:	cmp	r1, #0
   1ce40:	beq	1cdd4 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1ce44:	sub	sp, fp, #24
   1ce48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ce4c:	stm	sp, {r1, r4}
   1ce50:	str	r0, [sp, #8]
   1ce54:	mov	r0, r7
   1ce58:	mov	r1, r5
   1ce5c:	mov	r2, r6
   1ce60:	bl	112a0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1ce64:	cmp	r8, #0
   1ce68:	cmpne	r0, #0
   1ce6c:	strne	r0, [r8]
   1ce70:	mov	r0, r5
   1ce74:	sub	sp, fp, #24
   1ce78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ce7c:	cmp	r5, #0
   1ce80:	moveq	r0, #0
   1ce84:	subeq	sp, fp, #24
   1ce88:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ce8c:	b	1cdd4 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>

0001ce90 <myhtml_get_nodes_by_attribute_value@@Base>:
   1ce90:	push	{fp, lr}
   1ce94:	mov	fp, sp
   1ce98:	ldr	lr, [pc, #28]	; 1cebc <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1ce9c:	ldr	lr, [pc, lr]
   1cea0:	ldr	ip, [pc, #24]	; 1cec0 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1cea4:	ldr	ip, [pc, ip]
   1cea8:	cmp	r3, #0
   1ceac:	movne	ip, lr
   1ceb0:	mov	r3, ip
   1ceb4:	pop	{fp, lr}
   1ceb8:	b	1cdac <_myhtml_get_nodes_by_attribute_value@@Base>
   1cebc:	andeq	r9, pc, r4, ror r9	; <UNPREDICTABLE>
   1cec0:	muleq	pc, r4, r9	; <UNPREDICTABLE>

0001cec4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1cec4:	push	{fp, lr}
   1cec8:	mov	fp, sp
   1cecc:	ldr	lr, [pc, #28]	; 1cef0 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1ced0:	ldr	lr, [pc, lr]
   1ced4:	ldr	ip, [pc, #24]	; 1cef4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1ced8:	ldr	ip, [pc, ip]
   1cedc:	cmp	r3, #0
   1cee0:	movne	ip, lr
   1cee4:	mov	r3, ip
   1cee8:	pop	{fp, lr}
   1ceec:	b	1cdac <_myhtml_get_nodes_by_attribute_value@@Base>
   1cef0:	ldrdeq	r9, [pc], -r4
   1cef4:	ldrdeq	r9, [pc], -ip

0001cef8 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1cef8:	push	{fp, lr}
   1cefc:	mov	fp, sp
   1cf00:	ldr	lr, [pc, #28]	; 1cf24 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1cf04:	ldr	lr, [pc, lr]
   1cf08:	ldr	ip, [pc, #24]	; 1cf28 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1cf0c:	ldr	ip, [pc, ip]
   1cf10:	cmp	r3, #0
   1cf14:	movne	ip, lr
   1cf18:	mov	r3, ip
   1cf1c:	pop	{fp, lr}
   1cf20:	b	1cdac <_myhtml_get_nodes_by_attribute_value@@Base>
   1cf24:	strdeq	r9, [pc], -ip
   1cf28:	andeq	r9, pc, r4, ror #15

0001cf2c <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1cf2c:	push	{fp, lr}
   1cf30:	mov	fp, sp
   1cf34:	ldr	lr, [pc, #28]	; 1cf58 <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1cf38:	ldr	lr, [pc, lr]
   1cf3c:	ldr	ip, [pc, #24]	; 1cf5c <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1cf40:	ldr	ip, [pc, ip]
   1cf44:	cmp	r3, #0
   1cf48:	movne	ip, lr
   1cf4c:	mov	r3, ip
   1cf50:	pop	{fp, lr}
   1cf54:	b	1cdac <_myhtml_get_nodes_by_attribute_value@@Base>
   1cf58:	ldrdeq	r9, [pc], -r4
   1cf5c:	andeq	r9, pc, r0, asr #16

0001cf60 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1cf60:	push	{fp, lr}
   1cf64:	mov	fp, sp
   1cf68:	ldr	lr, [pc, #28]	; 1cf8c <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1cf6c:	ldr	lr, [pc, lr]
   1cf70:	ldr	ip, [pc, #24]	; 1cf90 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1cf74:	ldr	ip, [pc, ip]
   1cf78:	cmp	r3, #0
   1cf7c:	movne	ip, lr
   1cf80:	mov	r3, ip
   1cf84:	pop	{fp, lr}
   1cf88:	b	1cdac <_myhtml_get_nodes_by_attribute_value@@Base>
   1cf8c:	andeq	r9, pc, r8, lsl #15
   1cf90:	andeq	r9, pc, r0, lsr #17

0001cf94 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1cf94:	push	{fp, lr}
   1cf98:	mov	fp, sp
   1cf9c:	ldr	lr, [pc, #28]	; 1cfc0 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1cfa0:	ldr	lr, [pc, lr]
   1cfa4:	ldr	ip, [pc, #24]	; 1cfc4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1cfa8:	ldr	ip, [pc, ip]
   1cfac:	cmp	r3, #0
   1cfb0:	movne	ip, lr
   1cfb4:	mov	r3, ip
   1cfb8:	pop	{fp, lr}
   1cfbc:	b	1cdac <_myhtml_get_nodes_by_attribute_value@@Base>
   1cfc0:	strdeq	r9, [pc], -r0
   1cfc4:	andeq	r9, pc, r4, asr r8	; <UNPREDICTABLE>

0001cfc8 <myhtml_attribute_next@@Base>:
   1cfc8:	ldr	r0, [r0]
   1cfcc:	bx	lr

0001cfd0 <myhtml_attribute_prev@@Base>:
   1cfd0:	ldr	r0, [r0, #4]
   1cfd4:	bx	lr

0001cfd8 <myhtml_attribute_namespace@@Base>:
   1cfd8:	ldr	r0, [r0, #64]	; 0x40
   1cfdc:	bx	lr

0001cfe0 <myhtml_attribute_namespace_set@@Base>:
   1cfe0:	str	r1, [r0, #64]	; 0x40
   1cfe4:	bx	lr

0001cfe8 <myhtml_attribute_key@@Base>:
   1cfe8:	mov	r2, r0
   1cfec:	ldr	r0, [r0, #8]
   1cff0:	cmp	r0, #0
   1cff4:	ldrne	r2, [r2, #16]
   1cff8:	cmpne	r2, #0
   1cffc:	bne	1d010 <myhtml_attribute_key@@Base+0x28>
   1d000:	mov	r0, #0
   1d004:	cmp	r1, #0
   1d008:	strne	r0, [r1]
   1d00c:	bx	lr
   1d010:	cmp	r1, #0
   1d014:	strne	r2, [r1]
   1d018:	bxne	lr
   1d01c:	bx	lr

0001d020 <myhtml_attribute_value@@Base>:
   1d020:	mov	r2, r0
   1d024:	ldr	r0, [r0, #28]
   1d028:	cmp	r0, #0
   1d02c:	ldrne	r2, [r2, #36]	; 0x24
   1d030:	cmpne	r2, #0
   1d034:	bne	1d048 <myhtml_attribute_value@@Base+0x28>
   1d038:	mov	r0, #0
   1d03c:	cmp	r1, #0
   1d040:	strne	r0, [r1]
   1d044:	bx	lr
   1d048:	cmp	r1, #0
   1d04c:	strne	r2, [r1]
   1d050:	bxne	lr
   1d054:	bx	lr

0001d058 <myhtml_attribute_key_string@@Base>:
   1d058:	cmp	r0, #0
   1d05c:	addne	r0, r0, #8
   1d060:	bx	lr

0001d064 <myhtml_attribute_value_string@@Base>:
   1d064:	cmp	r0, #0
   1d068:	addne	r0, r0, #28
   1d06c:	bx	lr

0001d070 <myhtml_attribute_by_key@@Base>:
   1d070:	cmp	r0, #0
   1d074:	ldrne	r0, [r0, #32]
   1d078:	cmpne	r0, #0
   1d07c:	bne	1d088 <myhtml_attribute_by_key@@Base+0x18>
   1d080:	mov	r0, #0
   1d084:	bx	lr
   1d088:	b	12260 <myhtml_token_attr_by_name@plt>

0001d08c <myhtml_attribute_add@@Base>:
   1d08c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d090:	add	fp, sp, #24
   1d094:	sub	sp, sp, #16
   1d098:	cmp	r0, #0
   1d09c:	beq	1d118 <myhtml_attribute_add@@Base+0x8c>
   1d0a0:	mov	r6, r3
   1d0a4:	mov	r8, r2
   1d0a8:	mov	r5, r1
   1d0ac:	mov	r7, r0
   1d0b0:	ldr	r0, [r0, #32]
   1d0b4:	ldr	r4, [r7, #40]	; 0x28
   1d0b8:	cmp	r0, #0
   1d0bc:	bne	1d0e4 <myhtml_attribute_add@@Base+0x58>
   1d0c0:	ldr	r0, [r4, #8]
   1d0c4:	ldr	r1, [r4, #40]	; 0x28
   1d0c8:	bl	11e10 <myhtml_token_node_create@plt>
   1d0cc:	str	r0, [r7, #32]
   1d0d0:	cmp	r0, #0
   1d0d4:	beq	1d118 <myhtml_attribute_add@@Base+0x8c>
   1d0d8:	ldr	r1, [r0, #48]	; 0x30
   1d0dc:	orr	r1, r1, #4
   1d0e0:	str	r1, [r0, #48]	; 0x30
   1d0e4:	ldr	r2, [fp, #12]
   1d0e8:	ldr	r3, [fp, #8]
   1d0ec:	ldr	r1, [r7, #32]
   1d0f0:	ldr	r0, [r4, #8]
   1d0f4:	ldr	r7, [r4, #40]	; 0x28
   1d0f8:	str	r6, [sp]
   1d0fc:	stmib	sp, {r3, r7}
   1d100:	str	r2, [sp, #12]
   1d104:	mov	r2, r5
   1d108:	mov	r3, r8
   1d10c:	bl	11c0c <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1d110:	sub	sp, fp, #24
   1d114:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d118:	mov	r0, #0
   1d11c:	sub	sp, fp, #24
   1d120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d124 <myhtml_attribute_remove@@Base>:
   1d124:	cmp	r0, #0
   1d128:	ldrne	r0, [r0, #32]
   1d12c:	cmpne	r0, #0
   1d130:	bne	1d13c <myhtml_attribute_remove@@Base+0x18>
   1d134:	mov	r0, #0
   1d138:	bx	lr
   1d13c:	b	119b4 <myhtml_token_attr_remove@plt>

0001d140 <myhtml_attribute_remove_by_key@@Base>:
   1d140:	cmp	r0, #0
   1d144:	ldrne	r0, [r0, #32]
   1d148:	cmpne	r0, #0
   1d14c:	bne	1d158 <myhtml_attribute_remove_by_key@@Base+0x18>
   1d150:	mov	r0, #0
   1d154:	bx	lr
   1d158:	b	12248 <myhtml_token_attr_remove_by_name@plt>

0001d15c <myhtml_attribute_delete@@Base>:
   1d15c:	push	{r4, r5, fp, lr}
   1d160:	add	fp, sp, #8
   1d164:	cmp	r1, #0
   1d168:	popeq	{r4, r5, fp, pc}
   1d16c:	mov	r5, r0
   1d170:	ldr	r0, [r1, #32]
   1d174:	cmp	r0, #0
   1d178:	beq	1d198 <myhtml_attribute_delete@@Base+0x3c>
   1d17c:	mov	r4, r2
   1d180:	mov	r1, r2
   1d184:	bl	119b4 <myhtml_token_attr_remove@plt>
   1d188:	mov	r0, r5
   1d18c:	mov	r1, r4
   1d190:	pop	{r4, r5, fp, lr}
   1d194:	b	1d19c <myhtml_attribute_free@@Base>
   1d198:	pop	{r4, r5, fp, pc}

0001d19c <myhtml_attribute_free@@Base>:
   1d19c:	push	{r4, r5, fp, lr}
   1d1a0:	add	fp, sp, #8
   1d1a4:	mov	r4, r1
   1d1a8:	mov	r5, r0
   1d1ac:	ldr	r2, [r1, #8]
   1d1b0:	cmp	r2, #0
   1d1b4:	beq	1d1c4 <myhtml_attribute_free@@Base+0x28>
   1d1b8:	ldr	r0, [r4, #20]
   1d1bc:	ldr	r1, [r4, #24]
   1d1c0:	bl	11b4c <mchar_async_free@plt>
   1d1c4:	ldr	r2, [r4, #28]
   1d1c8:	cmp	r2, #0
   1d1cc:	beq	1d1dc <myhtml_attribute_free@@Base+0x40>
   1d1d0:	ldr	r0, [r4, #40]	; 0x28
   1d1d4:	ldr	r1, [r4, #44]	; 0x2c
   1d1d8:	bl	11b4c <mchar_async_free@plt>
   1d1dc:	ldr	r0, [r5, #8]
   1d1e0:	ldr	r0, [r0, #8]
   1d1e4:	mov	r1, r4
   1d1e8:	pop	{r4, r5, fp, lr}
   1d1ec:	b	114e0 <mcobject_async_free@plt>

0001d1f0 <myhtml_attribute_key_raw_position@@Base>:
   1d1f0:	cmp	r1, #0
   1d1f4:	ldrne	r2, [r1, #48]	; 0x30
   1d1f8:	ldrne	r1, [r1, #52]	; 0x34
   1d1fc:	strne	r2, [r0]
   1d200:	strne	r1, [r0, #4]
   1d204:	bxne	lr
   1d208:	mov	r1, #0
   1d20c:	str	r1, [r0]
   1d210:	str	r1, [r0, #4]
   1d214:	bx	lr

0001d218 <myhtml_attribute_value_raw_position@@Base>:
   1d218:	cmp	r1, #0
   1d21c:	ldrne	r2, [r1, #56]	; 0x38
   1d220:	ldrne	r1, [r1, #60]	; 0x3c
   1d224:	strne	r2, [r0]
   1d228:	strne	r1, [r0, #4]
   1d22c:	bxne	lr
   1d230:	mov	r1, #0
   1d234:	str	r1, [r0]
   1d238:	str	r1, [r0, #4]
   1d23c:	bx	lr

0001d240 <myhtml_collection_clean@@Base>:
   1d240:	cmp	r0, #0
   1d244:	movne	r1, #0
   1d248:	strne	r1, [r0, #8]
   1d24c:	bx	lr

0001d250 <myhtml_collection_destroy@@Base>:
   1d250:	cmp	r0, #0
   1d254:	beq	1d280 <myhtml_collection_destroy@@Base+0x30>
   1d258:	push	{r4, sl, fp, lr}
   1d25c:	add	fp, sp, #8
   1d260:	mov	r4, r0
   1d264:	ldr	r0, [r0]
   1d268:	cmp	r0, #0
   1d26c:	beq	1d274 <myhtml_collection_destroy@@Base+0x24>
   1d270:	bl	12188 <mycore_free@plt>
   1d274:	mov	r0, r4
   1d278:	bl	12188 <mycore_free@plt>
   1d27c:	pop	{r4, sl, fp, lr}
   1d280:	mov	r0, #0
   1d284:	bx	lr

0001d288 <myhtml_queue_add@@Base>:
   1d288:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d28c:	add	fp, sp, #24
   1d290:	mov	r6, r2
   1d294:	mov	r8, r1
   1d298:	mov	r5, r0
   1d29c:	ldr	r7, [r0, #68]	; 0x44
   1d2a0:	ldr	r0, [r0, #184]	; 0xb8
   1d2a4:	cmp	r2, #0
   1d2a8:	andsne	r0, r0, #4
   1d2ac:	bne	1d3ac <myhtml_queue_add@@Base+0x124>
   1d2b0:	ldr	r0, [r5, #180]	; 0xb4
   1d2b4:	tst	r0, #16
   1d2b8:	bne	1d310 <myhtml_queue_add@@Base+0x88>
   1d2bc:	cmp	r7, #0
   1d2c0:	strne	r6, [r7, #4]
   1d2c4:	ldr	r0, [r5]
   1d2c8:	ldr	r1, [r5, #20]
   1d2cc:	ldr	r0, [r0]
   1d2d0:	bl	11978 <mythread_queue_node_malloc_round@plt>
   1d2d4:	str	r0, [r5, #68]	; 0x44
   1d2d8:	ldr	r1, [r5, #20]
   1d2dc:	ldr	r0, [r1]
   1d2e0:	ldr	r0, [r0, #12]
   1d2e4:	cmp	r0, #0
   1d2e8:	bne	1d308 <myhtml_queue_add@@Base+0x80>
   1d2ec:	ldr	r0, [r5]
   1d2f0:	ldr	r0, [r0, #4]
   1d2f4:	bl	120e0 <mythread_queue_list_entry_make_batch@plt>
   1d2f8:	ldr	r0, [r5]
   1d2fc:	ldr	r1, [r5, #20]
   1d300:	ldr	r0, [r0]
   1d304:	bl	12290 <mythread_queue_list_entry_make_stream@plt>
   1d308:	ldr	r0, [r5, #68]	; 0x44
   1d30c:	b	1d354 <myhtml_queue_add@@Base+0xcc>
   1d310:	cmp	r6, #0
   1d314:	cmpne	r7, #0
   1d318:	beq	1d338 <myhtml_queue_add@@Base+0xb0>
   1d31c:	str	r6, [r7, #4]
   1d320:	mov	r0, #0
   1d324:	mov	r1, r7
   1d328:	bl	11240 <myhtml_parser_worker@plt>
   1d32c:	mov	r0, #0
   1d330:	mov	r1, r7
   1d334:	bl	1238c <myhtml_parser_stream@plt>
   1d338:	ldr	r0, [r5]
   1d33c:	ldr	r1, [r5, #24]
   1d340:	ldr	r0, [r0]
   1d344:	mov	r2, #4
   1d348:	mov	r3, #0
   1d34c:	bl	12068 <mythread_queue_node_malloc_limit@plt>
   1d350:	str	r0, [r5, #68]	; 0x44
   1d354:	mov	r4, #2
   1d358:	cmp	r0, #0
   1d35c:	beq	1d3e0 <myhtml_queue_add@@Base+0x158>
   1d360:	str	r7, [r0, #8]
   1d364:	str	r5, [r0]
   1d368:	cmp	r6, #0
   1d36c:	cmpne	r7, #0
   1d370:	beq	1d380 <myhtml_queue_add@@Base+0xf8>
   1d374:	mov	r0, r5
   1d378:	mov	r1, r6
   1d37c:	bl	1169c <myhtml_tokenizer_calc_current_namespace@plt>
   1d380:	ldr	r0, [r5, #8]
   1d384:	ldr	r1, [r0, #12]
   1d388:	bl	11e10 <myhtml_token_node_create@plt>
   1d38c:	str	r0, [r5, #64]	; 0x40
   1d390:	cmp	r0, #0
   1d394:	beq	1d3e0 <myhtml_queue_add@@Base+0x158>
   1d398:	ldr	r1, [r5, #192]	; 0xc0
   1d39c:	add	r1, r1, r8
   1d3a0:	str	r1, [r0, #24]
   1d3a4:	str	r1, [r0, #32]
   1d3a8:	b	1d3dc <myhtml_queue_add@@Base+0x154>
   1d3ac:	ldr	r0, [r6]
   1d3b0:	cmp	r0, #1
   1d3b4:	bne	1d2b0 <myhtml_queue_add@@Base+0x28>
   1d3b8:	ldr	r0, [r6, #48]	; 0x30
   1d3bc:	tst	r0, #8
   1d3c0:	beq	1d2b0 <myhtml_queue_add@@Base+0x28>
   1d3c4:	mov	r0, r6
   1d3c8:	bl	12314 <myhtml_token_node_clean@plt>
   1d3cc:	ldr	r0, [r5, #192]	; 0xc0
   1d3d0:	add	r0, r0, r8
   1d3d4:	str	r0, [r6, #24]
   1d3d8:	str	r0, [r6, #32]
   1d3dc:	mov	r4, #0
   1d3e0:	mov	r0, r4
   1d3e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d3e8 <myhtml_utils_strcmp@@Base>:
   1d3e8:	push	{fp, lr}
   1d3ec:	mov	fp, sp
   1d3f0:	mov	ip, r0
   1d3f4:	mov	r0, #1
   1d3f8:	cmp	r2, #0
   1d3fc:	bne	1d414 <myhtml_utils_strcmp@@Base+0x2c>
   1d400:	pop	{fp, pc}
   1d404:	subs	r2, r2, #1
   1d408:	add	ip, ip, #1
   1d40c:	add	r1, r1, #1
   1d410:	popeq	{fp, pc}
   1d414:	ldrb	lr, [r1]
   1d418:	sub	r3, lr, #65	; 0x41
   1d41c:	uxtb	r3, r3
   1d420:	cmp	r3, #26
   1d424:	orrcc	lr, lr, #96	; 0x60
   1d428:	uxtb	lr, lr
   1d42c:	ldrb	r3, [ip]
   1d430:	cmp	lr, r3
   1d434:	beq	1d404 <myhtml_utils_strcmp@@Base+0x1c>
   1d438:	mov	r0, #0
   1d43c:	pop	{fp, pc}

0001d440 <myhtml_is_html_node@@Base>:
   1d440:	mov	r2, r0
   1d444:	mov	r0, #0
   1d448:	cmp	r2, #0
   1d44c:	bxeq	lr
   1d450:	ldr	r3, [r2, #4]
   1d454:	cmp	r3, r1
   1d458:	ldreq	r0, [r2, #8]
   1d45c:	subeq	r0, r0, #1
   1d460:	clzeq	r0, r0
   1d464:	lsreq	r0, r0, #5
   1d468:	bx	lr

0001d46c <myhtml_version@@Base>:
   1d46c:	mov	r1, #0
   1d470:	mov	r2, #4
   1d474:	mov	r3, #5
   1d478:	str	r2, [r0]
   1d47c:	stmib	r0, {r1, r3}
   1d480:	bx	lr

0001d484 <myhtml_node_clone@@Base>:
   1d484:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d488:	add	fp, sp, #24
   1d48c:	sub	sp, sp, #8
   1d490:	mov	r5, r1
   1d494:	mov	r6, r0
   1d498:	bl	11474 <myhtml_tree_node_create@plt>
   1d49c:	mov	r4, r0
   1d4a0:	ldr	r7, [r5, #4]
   1d4a4:	cmp	r7, #252	; 0xfc
   1d4a8:	bcc	1d518 <myhtml_node_clone@@Base+0x94>
   1d4ac:	ldr	r0, [r6, #28]
   1d4b0:	mov	r1, r7
   1d4b4:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1d4b8:	mov	r9, r0
   1d4bc:	ldr	r1, [r5, #4]
   1d4c0:	ldr	r0, [r5, #40]	; 0x28
   1d4c4:	ldr	r0, [r0, #28]
   1d4c8:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1d4cc:	mov	r8, r0
   1d4d0:	cmp	r9, #0
   1d4d4:	beq	1d4fc <myhtml_node_clone@@Base+0x78>
   1d4d8:	ldr	r2, [r8, #8]
   1d4dc:	ldr	r0, [r9, #8]
   1d4e0:	cmp	r0, r2
   1d4e4:	bne	1d4fc <myhtml_node_clone@@Base+0x78>
   1d4e8:	ldr	r1, [r8, #4]
   1d4ec:	ldr	r0, [r9, #4]
   1d4f0:	bl	1229c <mycore_strncmp@plt>
   1d4f4:	cmp	r0, #0
   1d4f8:	beq	1d518 <myhtml_node_clone@@Base+0x94>
   1d4fc:	ldmib	r8, {r1, r2}
   1d500:	ldr	r0, [r6, #28]
   1d504:	mov	r3, #1
   1d508:	str	r3, [sp]
   1d50c:	mov	r3, #0
   1d510:	bl	114a4 <myhtml_tag_add@plt>
   1d514:	mov	r7, r0
   1d518:	ldr	r1, [r5, #32]
   1d51c:	ldr	r0, [r6, #8]
   1d520:	ldr	r2, [r6, #40]	; 0x28
   1d524:	ldr	r3, [r6, #44]	; 0x2c
   1d528:	bl	113c0 <myhtml_token_node_clone@plt>
   1d52c:	str	r0, [r4, #32]
   1d530:	str	r7, [r4, #4]
   1d534:	ldr	r1, [r5, #8]
   1d538:	str	r1, [r4, #8]
   1d53c:	cmp	r0, #0
   1d540:	strne	r7, [r0]
   1d544:	ldrne	r1, [r0, #48]	; 0x30
   1d548:	orrne	r1, r1, #4
   1d54c:	strne	r1, [r0, #48]	; 0x30
   1d550:	mov	r0, r4
   1d554:	sub	sp, fp, #24
   1d558:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001d55c <myhtml_node_clone_deep@@Base>:
   1d55c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d560:	add	fp, sp, #28
   1d564:	sub	sp, sp, #4
   1d568:	mov	r5, r1
   1d56c:	mov	r9, r0
   1d570:	mov	r8, #0
   1d574:	cmp	r1, #0
   1d578:	mov	r4, #0
   1d57c:	beq	1d5a0 <myhtml_node_clone_deep@@Base+0x44>
   1d580:	ldr	r0, [r5, #40]	; 0x28
   1d584:	cmp	r0, #0
   1d588:	mov	r4, r5
   1d58c:	beq	1d5a0 <myhtml_node_clone_deep@@Base+0x44>
   1d590:	ldr	r0, [r0, #84]	; 0x54
   1d594:	cmp	r0, r5
   1d598:	mov	r4, r5
   1d59c:	ldreq	r4, [r5, #20]
   1d5a0:	mov	r0, r9
   1d5a4:	mov	r1, r4
   1d5a8:	bl	122d8 <myhtml_node_clone@plt>
   1d5ac:	cmp	r0, #0
   1d5b0:	beq	1d634 <myhtml_node_clone_deep@@Base+0xd8>
   1d5b4:	mov	sl, r0
   1d5b8:	ldr	r4, [r4, #20]
   1d5bc:	cmp	r4, #0
   1d5c0:	beq	1d630 <myhtml_node_clone_deep@@Base+0xd4>
   1d5c4:	mov	r7, sl
   1d5c8:	mov	r0, r9
   1d5cc:	mov	r1, r4
   1d5d0:	bl	122d8 <myhtml_node_clone@plt>
   1d5d4:	cmp	r0, #0
   1d5d8:	beq	1d634 <myhtml_node_clone_deep@@Base+0xd8>
   1d5dc:	mov	r6, r0
   1d5e0:	mov	r0, r7
   1d5e4:	mov	r1, r6
   1d5e8:	bl	11aec <myhtml_tree_node_add_child@plt>
   1d5ec:	ldr	r0, [r4, #20]
   1d5f0:	cmp	r0, #0
   1d5f4:	bne	1d620 <myhtml_node_clone_deep@@Base+0xc4>
   1d5f8:	b	1d604 <myhtml_node_clone_deep@@Base+0xa8>
   1d5fc:	ldr	r4, [r4, #24]
   1d600:	ldr	r7, [r7, #24]
   1d604:	cmp	r4, r5
   1d608:	beq	1d630 <myhtml_node_clone_deep@@Base+0xd4>
   1d60c:	ldr	r0, [r4, #16]
   1d610:	cmp	r0, #0
   1d614:	beq	1d5fc <myhtml_node_clone_deep@@Base+0xa0>
   1d618:	ldr	r0, [r4, #16]
   1d61c:	mov	r6, r7
   1d620:	cmp	r0, #0
   1d624:	mov	r7, r6
   1d628:	mov	r4, r0
   1d62c:	bne	1d5c8 <myhtml_node_clone_deep@@Base+0x6c>
   1d630:	mov	r8, sl
   1d634:	mov	r0, r8
   1d638:	sub	sp, fp, #28
   1d63c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d640 <myhtml_namespace_name_entry_by_name@@Base>:
   1d640:	push	{r4, sl, fp, lr}
   1d644:	add	fp, sp, #8
   1d648:	mov	r2, r1
   1d64c:	mov	ip, r0
   1d650:	ldrb	r1, [r0], r1
   1d654:	ldrb	r0, [r0, #-1]
   1d658:	ldr	r3, [pc, #156]	; 1d6fc <myhtml_namespace_name_entry_by_name@@Base+0xbc>
   1d65c:	add	r3, pc, r3
   1d660:	ldrb	r0, [r3, r0]
   1d664:	ldrb	r1, [r3, r1]
   1d668:	mul	r1, r1, r2
   1d66c:	mul	r0, r1, r0
   1d670:	movw	r1, #27595	; 0x6bcb
   1d674:	movt	r1, #44840	; 0xaf28
   1d678:	umull	r1, r3, r0, r1
   1d67c:	sub	r1, r0, r3
   1d680:	add	r1, r3, r1, lsr #1
   1d684:	lsr	r1, r1, #4
   1d688:	mov	r3, #19
   1d68c:	mls	r0, r1, r3, r0
   1d690:	add	r1, r0, #1
   1d694:	add	r3, r1, r1, lsl #2
   1d698:	ldr	lr, [pc, #96]	; 1d700 <myhtml_namespace_name_entry_by_name@@Base+0xc0>
   1d69c:	add	lr, pc, lr
   1d6a0:	b	1d6b4 <myhtml_namespace_name_entry_by_name@@Base+0x74>
   1d6a4:	add	r0, r1, r1, lsl #2
   1d6a8:	add	r0, lr, r0, lsl #2
   1d6ac:	ldr	r1, [r0, #12]
   1d6b0:	add	r3, r1, r1, lsl #2
   1d6b4:	mov	r4, lr
   1d6b8:	ldr	r0, [r4, r3, lsl #2]!
   1d6bc:	cmp	r0, #0
   1d6c0:	beq	1d6dc <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1d6c4:	add	r3, lr, r3, lsl #2
   1d6c8:	ldr	r3, [r3, #4]
   1d6cc:	cmp	r3, r2
   1d6d0:	beq	1d6e4 <myhtml_namespace_name_entry_by_name@@Base+0xa4>
   1d6d4:	cmp	r3, r2
   1d6d8:	bls	1d6a4 <myhtml_namespace_name_entry_by_name@@Base+0x64>
   1d6dc:	mov	r0, #0
   1d6e0:	pop	{r4, sl, fp, pc}
   1d6e4:	mov	r1, ip
   1d6e8:	bl	11714 <mycore_strncasecmp@plt>
   1d6ec:	cmp	r0, #0
   1d6f0:	movne	r4, #0
   1d6f4:	mov	r0, r4
   1d6f8:	pop	{r4, sl, fp, pc}
   1d6fc:	andeq	pc, sp, r8, asr r0	; <UNPREDICTABLE>
   1d700:	andeq	r3, pc, ip, asr #26

0001d704 <myhtml_namespace_id_by_name@@Base>:
   1d704:	push	{r4, sl, fp, lr}
   1d708:	add	fp, sp, #8
   1d70c:	mov	r4, r2
   1d710:	bl	11684 <myhtml_namespace_name_entry_by_name@plt>
   1d714:	cmp	r0, #0
   1d718:	moveq	r0, #0
   1d71c:	popeq	{r4, sl, fp, pc}
   1d720:	mov	r1, r0
   1d724:	mov	r0, #1
   1d728:	cmp	r4, #0
   1d72c:	ldrne	r1, [r1, #8]
   1d730:	strne	r1, [r4]
   1d734:	pop	{r4, sl, fp, pc}

0001d738 <myhtml_namespace_name_by_id@@Base>:
   1d738:	push	{r4, r5, fp, lr}
   1d73c:	add	fp, sp, #8
   1d740:	mov	r5, r1
   1d744:	cmp	r0, #8
   1d748:	bcc	1d768 <myhtml_namespace_name_by_id@@Base+0x30>
   1d74c:	mov	r4, #0
   1d750:	cmp	r5, #0
   1d754:	strne	r4, [r5]
   1d758:	movne	r0, r4
   1d75c:	popne	{r4, r5, fp, pc}
   1d760:	mov	r0, r4
   1d764:	pop	{r4, r5, fp, pc}
   1d768:	ldr	r1, [pc, #32]	; 1d790 <myhtml_namespace_name_by_id@@Base+0x58>
   1d76c:	add	r1, pc, r1
   1d770:	add	r4, r1, r0, lsl #3
   1d774:	cmp	r5, #0
   1d778:	beq	1d788 <myhtml_namespace_name_by_id@@Base+0x50>
   1d77c:	mov	r0, r4
   1d780:	bl	11aa4 <strlen@plt>
   1d784:	str	r0, [r5]
   1d788:	mov	r0, r4
   1d78c:	pop	{r4, r5, fp, pc}
   1d790:	andeq	pc, sp, r8, asr #32

0001d794 <myhtml_namespace_url_by_id@@Base>:
   1d794:	cmp	r0, #8
   1d798:	bcc	1d7b0 <myhtml_namespace_url_by_id@@Base+0x1c>
   1d79c:	mov	r0, #0
   1d7a0:	cmp	r1, #0
   1d7a4:	strne	r0, [r1]
   1d7a8:	bxne	lr
   1d7ac:	bx	lr
   1d7b0:	cmp	r1, #0
   1d7b4:	beq	1d7d0 <myhtml_namespace_url_by_id@@Base+0x3c>
   1d7b8:	add	r2, r0, r0, lsl #1
   1d7bc:	ldr	r3, [pc, #32]	; 1d7e4 <myhtml_namespace_url_by_id@@Base+0x50>
   1d7c0:	add	r3, pc, r3
   1d7c4:	add	r2, r3, r2, lsl #2
   1d7c8:	ldr	r2, [r2, #4]
   1d7cc:	str	r2, [r1]
   1d7d0:	add	r0, r0, r0, lsl #1
   1d7d4:	ldr	r1, [pc, #12]	; 1d7e8 <myhtml_namespace_url_by_id@@Base+0x54>
   1d7d8:	add	r1, pc, r1
   1d7dc:	ldr	r0, [r1, r0, lsl #2]
   1d7e0:	bx	lr
   1d7e4:			; <UNDEFINED> instruction: 0x000f3db8
   1d7e8:	andeq	r3, pc, r0, lsr #27

0001d7ec <myhtml_namespace_id_by_url@@Base>:
   1d7ec:	mov	r0, #0
   1d7f0:	bx	lr

0001d7f4 <myhtml_string_append_with_preprocessing@@Base>:
   1d7f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7f8:	add	fp, sp, #28
   1d7fc:	sub	sp, sp, #4
   1d800:	mov	r8, r3
   1d804:	mov	r6, r2
   1d808:	mov	r7, r1
   1d80c:	mov	r4, r0
   1d810:	ldr	r0, [r0, #4]
   1d814:	ldr	r1, [r4, #8]
   1d818:	add	r1, r2, r1
   1d81c:	add	r1, r1, #1
   1d820:	cmp	r1, r0
   1d824:	bcc	1d830 <myhtml_string_append_with_preprocessing@@Base+0x3c>
   1d828:	mov	r0, r4
   1d82c:	bl	11d80 <mycore_string_realloc@plt>
   1d830:	cmp	r6, #0
   1d834:	beq	1d8f0 <myhtml_string_append_with_preprocessing@@Base+0xfc>
   1d838:	ldr	r0, [r4]
   1d83c:	mov	r5, #0
   1d840:	mov	r9, #189	; 0xbd
   1d844:	mov	sl, #10
   1d848:	ldrb	r1, [r7, r5]
   1d84c:	cmp	r1, #0
   1d850:	beq	1d880 <myhtml_string_append_with_preprocessing@@Base+0x8c>
   1d854:	cmp	r1, #13
   1d858:	bne	1d888 <myhtml_string_append_with_preprocessing@@Base+0x94>
   1d85c:	ldr	r1, [r4, #8]
   1d860:	strb	sl, [r0, r1]
   1d864:	add	r1, r5, #1
   1d868:	cmp	r1, r6
   1d86c:	bcs	1d908 <myhtml_string_append_with_preprocessing@@Base+0x114>
   1d870:	ldrb	r2, [r7, r1]
   1d874:	cmp	r2, #10
   1d878:	moveq	r5, r1
   1d87c:	b	1d8d8 <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1d880:	cmp	r8, #0
   1d884:	beq	1d894 <myhtml_string_append_with_preprocessing@@Base+0xa0>
   1d888:	ldr	r2, [r4, #8]
   1d88c:	strb	r1, [r0, r2]
   1d890:	b	1d8d8 <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1d894:	ldr	r0, [r4, #4]
   1d898:	add	r1, r0, #5
   1d89c:	mov	r0, r4
   1d8a0:	bl	11d80 <mycore_string_realloc@plt>
   1d8a4:	ldr	r0, [r4]
   1d8a8:	ldr	r1, [r4, #8]
   1d8ac:	mov	r2, #239	; 0xef
   1d8b0:	strb	r2, [r0, r1]
   1d8b4:	ldr	r1, [r4, #8]
   1d8b8:	add	r1, r1, #1
   1d8bc:	str	r1, [r4, #8]
   1d8c0:	mov	r2, #191	; 0xbf
   1d8c4:	strb	r2, [r0, r1]
   1d8c8:	ldr	r1, [r4, #8]
   1d8cc:	add	r1, r1, #1
   1d8d0:	str	r1, [r4, #8]
   1d8d4:	strb	r9, [r0, r1]
   1d8d8:	ldr	r1, [r4, #8]
   1d8dc:	add	r1, r1, #1
   1d8e0:	str	r1, [r4, #8]
   1d8e4:	add	r5, r5, #1
   1d8e8:	cmp	r5, r6
   1d8ec:	bcc	1d848 <myhtml_string_append_with_preprocessing@@Base+0x54>
   1d8f0:	ldr	r1, [r4]
   1d8f4:	ldr	r2, [r4, #8]
   1d8f8:	mov	r0, #0
   1d8fc:	strb	r0, [r1, r2]
   1d900:	sub	sp, fp, #28
   1d904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d908:	ldr	r1, [r4, #4]
   1d90c:	ldr	r0, [r4, #8]
   1d910:	add	r2, r0, #1
   1d914:	str	r2, [r4, #8]
   1d918:	cmp	r2, r1
   1d91c:	bcc	1d92c <myhtml_string_append_with_preprocessing@@Base+0x138>
   1d920:	add	r1, r0, #3
   1d924:	mov	r0, r4
   1d928:	bl	11d80 <mycore_string_realloc@plt>
   1d92c:	ldr	r0, [r4]
   1d930:	ldr	r1, [r4, #8]
   1d934:	mov	r2, #0
   1d938:	strb	r2, [r0, r1]
   1d93c:	ldr	r0, [r4, #8]
   1d940:	sub	sp, fp, #28
   1d944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d948 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1d948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d94c:	add	fp, sp, #28
   1d950:	sub	sp, sp, #4
   1d954:	mov	r8, r3
   1d958:	mov	r6, r2
   1d95c:	mov	r7, r1
   1d960:	mov	r4, r0
   1d964:	ldr	r0, [r0, #4]
   1d968:	ldr	r1, [r4, #8]
   1d96c:	add	r1, r2, r1
   1d970:	add	r1, r1, #1
   1d974:	cmp	r1, r0
   1d978:	bcc	1d984 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x3c>
   1d97c:	mov	r0, r4
   1d980:	bl	11d80 <mycore_string_realloc@plt>
   1d984:	cmp	r6, #0
   1d988:	beq	1da50 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x108>
   1d98c:	ldr	r0, [r4]
   1d990:	mov	r5, #0
   1d994:	ldr	sl, [pc, #268]	; 1daa8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x160>
   1d998:	add	sl, pc, sl
   1d99c:	mov	r9, #10
   1d9a0:	ldrb	r1, [r7, r5]
   1d9a4:	cmp	r1, #0
   1d9a8:	beq	1d9d8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x90>
   1d9ac:	cmp	r1, #13
   1d9b0:	bne	1d9e0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x98>
   1d9b4:	ldr	r1, [r4, #8]
   1d9b8:	strb	r9, [r0, r1]
   1d9bc:	add	r1, r5, #1
   1d9c0:	cmp	r1, r6
   1d9c4:	bcs	1da68 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x120>
   1d9c8:	ldrb	r2, [r7, r1]
   1d9cc:	cmp	r2, #10
   1d9d0:	moveq	r5, r1
   1d9d4:	b	1da38 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf0>
   1d9d8:	cmp	r8, #0
   1d9dc:	beq	1d9f0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa8>
   1d9e0:	ldrb	r1, [sl, r1]
   1d9e4:	ldr	r2, [r4, #8]
   1d9e8:	strb	r1, [r0, r2]
   1d9ec:	b	1da38 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf0>
   1d9f0:	ldr	r0, [r4, #4]
   1d9f4:	add	r1, r0, #5
   1d9f8:	mov	r0, r4
   1d9fc:	bl	11d80 <mycore_string_realloc@plt>
   1da00:	ldr	r0, [r4]
   1da04:	ldr	r1, [r4, #8]
   1da08:	mov	r2, #239	; 0xef
   1da0c:	strb	r2, [r0, r1]
   1da10:	ldr	r1, [r4, #8]
   1da14:	add	r1, r1, #1
   1da18:	str	r1, [r4, #8]
   1da1c:	mov	r2, #191	; 0xbf
   1da20:	strb	r2, [r0, r1]
   1da24:	ldr	r1, [r4, #8]
   1da28:	add	r1, r1, #1
   1da2c:	str	r1, [r4, #8]
   1da30:	mov	r2, #189	; 0xbd
   1da34:	strb	r2, [r0, r1]
   1da38:	ldr	r1, [r4, #8]
   1da3c:	add	r1, r1, #1
   1da40:	str	r1, [r4, #8]
   1da44:	add	r5, r5, #1
   1da48:	cmp	r5, r6
   1da4c:	bcc	1d9a0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x58>
   1da50:	ldr	r1, [r4]
   1da54:	ldr	r2, [r4, #8]
   1da58:	mov	r0, #0
   1da5c:	strb	r0, [r1, r2]
   1da60:	sub	sp, fp, #28
   1da64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da68:	ldr	r1, [r4, #4]
   1da6c:	ldr	r0, [r4, #8]
   1da70:	add	r2, r0, #1
   1da74:	str	r2, [r4, #8]
   1da78:	cmp	r2, r1
   1da7c:	bcc	1da8c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x144>
   1da80:	add	r1, r0, #3
   1da84:	mov	r0, r4
   1da88:	bl	11d80 <mycore_string_realloc@plt>
   1da8c:	ldr	r0, [r4]
   1da90:	ldr	r1, [r4, #8]
   1da94:	mov	r2, #0
   1da98:	strb	r2, [r0, r1]
   1da9c:	ldr	r0, [r4, #8]
   1daa0:	sub	sp, fp, #28
   1daa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1daa8:	andeq	lr, sp, r7, lsr pc

0001daac <myhtml_string_before_append_any_preprocessing@@Base>:
   1daac:	mov	r0, #0
   1dab0:	cmp	r2, #0
   1dab4:	cmpne	r3, #0
   1dab8:	ldrbne	r0, [r1]
   1dabc:	subne	r0, r0, #10
   1dac0:	clzne	r0, r0
   1dac4:	lsrne	r0, r0, #5
   1dac8:	bx	lr

0001dacc <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1dacc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dad0:	add	fp, sp, #24
   1dad4:	sub	sp, sp, #32
   1dad8:	mov	r4, r3
   1dadc:	mov	r5, r2
   1dae0:	mov	r6, r1
   1dae4:	mov	r7, r0
   1dae8:	add	r8, sp, #8
   1daec:	mov	r0, r8
   1daf0:	bl	1163c <myencoding_result_clean@plt>
   1daf4:	ldr	r0, [fp, #8]
   1daf8:	str	r4, [sp]
   1dafc:	str	r0, [sp, #4]
   1db00:	mov	r0, r7
   1db04:	mov	r1, r8
   1db08:	mov	r2, r6
   1db0c:	mov	r3, r5
   1db10:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1db14:	sub	sp, fp, #24
   1db18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001db1c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1db1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db20:	add	fp, sp, #28
   1db24:	sub	sp, sp, #4
   1db28:	mov	r5, r3
   1db2c:	mov	r8, r2
   1db30:	mov	r7, r1
   1db34:	mov	r4, r0
   1db38:	ldr	r0, [r0, #4]
   1db3c:	ldr	r1, [r4, #8]
   1db40:	add	r1, r3, r1
   1db44:	add	r1, r1, #1
   1db48:	ldr	r6, [fp, #8]
   1db4c:	cmp	r1, r0
   1db50:	bcc	1db5c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   1db54:	mov	r0, r4
   1db58:	bl	11d80 <mycore_string_realloc@plt>
   1db5c:	mov	r0, r6
   1db60:	bl	11c48 <myencoding_get_function_by_id@plt>
   1db64:	cmp	r5, #0
   1db68:	beq	1dc7c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x160>
   1db6c:	mov	r9, r0
   1db70:	mov	sl, #0
   1db74:	ldrb	r0, [r8, sl]
   1db78:	mov	r1, r7
   1db7c:	blx	r9
   1db80:	cmp	r0, #0
   1db84:	bne	1dc70 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1db88:	ldr	r1, [r4, #4]
   1db8c:	ldr	r0, [r4, #8]
   1db90:	add	r2, r0, #5
   1db94:	cmp	r2, r1
   1db98:	bcc	1dba8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x8c>
   1db9c:	add	r1, r0, #6
   1dba0:	mov	r0, r4
   1dba4:	bl	11d80 <mycore_string_realloc@plt>
   1dba8:	ldr	r0, [r7, #12]
   1dbac:	ldr	r1, [r4]
   1dbb0:	ldr	r2, [r4, #8]
   1dbb4:	add	r1, r1, r2
   1dbb8:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   1dbbc:	mov	r6, r0
   1dbc0:	cmp	r0, #1
   1dbc4:	bne	1dc64 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1dbc8:	ldr	r0, [r4]
   1dbcc:	ldr	r1, [r4, #8]
   1dbd0:	ldrb	r2, [r0, r1]
   1dbd4:	cmp	r2, #0
   1dbd8:	beq	1dc08 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xec>
   1dbdc:	cmp	r2, #13
   1dbe0:	bne	1dc64 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1dbe4:	mov	r2, #10
   1dbe8:	strb	r2, [r0, r1]
   1dbec:	add	r0, sl, #1
   1dbf0:	cmp	r0, r5
   1dbf4:	bcs	1dcb0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x194>
   1dbf8:	ldrb	r1, [r8, r0]
   1dbfc:	cmp	r1, #10
   1dc00:	moveq	sl, r0
   1dc04:	b	1dc64 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1dc08:	ldr	r0, [fp, #12]
   1dc0c:	cmp	r0, #0
   1dc10:	bne	1dc64 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1dc14:	ldr	r0, [r4, #4]
   1dc18:	add	r1, r0, #5
   1dc1c:	mov	r0, r4
   1dc20:	bl	11d80 <mycore_string_realloc@plt>
   1dc24:	ldr	r0, [r4]
   1dc28:	ldr	r1, [r4, #8]
   1dc2c:	mov	r2, #239	; 0xef
   1dc30:	strb	r2, [r0, r1]
   1dc34:	ldr	r0, [r4]
   1dc38:	ldr	r1, [r4, #8]
   1dc3c:	add	r1, r1, #1
   1dc40:	str	r1, [r4, #8]
   1dc44:	mov	r2, #191	; 0xbf
   1dc48:	strb	r2, [r0, r1]
   1dc4c:	ldr	r0, [r4]
   1dc50:	ldr	r1, [r4, #8]
   1dc54:	add	r1, r1, #1
   1dc58:	str	r1, [r4, #8]
   1dc5c:	mov	r2, #189	; 0xbd
   1dc60:	strb	r2, [r0, r1]
   1dc64:	ldr	r0, [r4, #8]
   1dc68:	add	r0, r0, r6
   1dc6c:	str	r0, [r4, #8]
   1dc70:	add	sl, sl, #1
   1dc74:	cmp	sl, r5
   1dc78:	bcc	1db74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1dc7c:	ldr	r1, [r4, #4]
   1dc80:	ldr	r0, [r4, #8]
   1dc84:	cmp	r0, r1
   1dc88:	bcc	1dc98 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1dc8c:	add	r1, r0, #1
   1dc90:	mov	r0, r4
   1dc94:	bl	11d80 <mycore_string_realloc@plt>
   1dc98:	ldr	r1, [r4]
   1dc9c:	ldr	r2, [r4, #8]
   1dca0:	mov	r0, #0
   1dca4:	strb	r0, [r1, r2]
   1dca8:	sub	sp, fp, #28
   1dcac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dcb0:	ldr	r1, [r4, #4]
   1dcb4:	ldr	r0, [r4, #8]
   1dcb8:	add	r2, r0, #1
   1dcbc:	str	r2, [r4, #8]
   1dcc0:	cmp	r2, r1
   1dcc4:	bcc	1dcd4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   1dcc8:	add	r1, r0, #3
   1dccc:	mov	r0, r4
   1dcd0:	bl	11d80 <mycore_string_realloc@plt>
   1dcd4:	ldr	r0, [r4]
   1dcd8:	ldr	r1, [r4, #8]
   1dcdc:	mov	r2, #0
   1dce0:	strb	r2, [r0, r1]
   1dce4:	ldr	r0, [r4, #8]
   1dce8:	sub	sp, fp, #28
   1dcec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dcf0 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1dcf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dcf4:	add	fp, sp, #24
   1dcf8:	sub	sp, sp, #32
   1dcfc:	mov	r4, r3
   1dd00:	mov	r5, r2
   1dd04:	mov	r6, r1
   1dd08:	mov	r7, r0
   1dd0c:	add	r8, sp, #8
   1dd10:	mov	r0, r8
   1dd14:	bl	1163c <myencoding_result_clean@plt>
   1dd18:	ldr	r0, [fp, #8]
   1dd1c:	str	r4, [sp]
   1dd20:	str	r0, [sp, #4]
   1dd24:	mov	r0, r7
   1dd28:	mov	r1, r8
   1dd2c:	mov	r2, r6
   1dd30:	mov	r3, r5
   1dd34:	bl	1214c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1dd38:	sub	sp, fp, #24
   1dd3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001dd40 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1dd40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd44:	add	fp, sp, #28
   1dd48:	sub	sp, sp, #4
   1dd4c:	mov	r5, r3
   1dd50:	mov	r8, r2
   1dd54:	mov	r7, r1
   1dd58:	mov	r4, r0
   1dd5c:	ldr	r0, [r0, #4]
   1dd60:	ldr	r1, [r4, #8]
   1dd64:	add	r1, r3, r1
   1dd68:	add	r1, r1, #1
   1dd6c:	ldr	r6, [fp, #8]
   1dd70:	cmp	r1, r0
   1dd74:	bcc	1dd80 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   1dd78:	mov	r0, r4
   1dd7c:	bl	11d80 <mycore_string_realloc@plt>
   1dd80:	mov	r0, r6
   1dd84:	bl	11c48 <myencoding_get_function_by_id@plt>
   1dd88:	cmp	r5, #0
   1dd8c:	beq	1dea0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x160>
   1dd90:	mov	r9, r0
   1dd94:	mov	sl, #0
   1dd98:	ldrb	r0, [r8, sl]
   1dd9c:	mov	r1, r7
   1dda0:	blx	r9
   1dda4:	cmp	r0, #0
   1dda8:	bne	1de94 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1ddac:	ldr	r1, [r4, #4]
   1ddb0:	ldr	r0, [r4, #8]
   1ddb4:	add	r2, r0, #5
   1ddb8:	cmp	r2, r1
   1ddbc:	bcc	1ddcc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x8c>
   1ddc0:	add	r1, r0, #6
   1ddc4:	mov	r0, r4
   1ddc8:	bl	11d80 <mycore_string_realloc@plt>
   1ddcc:	ldr	r0, [r7, #12]
   1ddd0:	ldr	r1, [r4]
   1ddd4:	ldr	r2, [r4, #8]
   1ddd8:	add	r1, r1, r2
   1dddc:	bl	11198 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1dde0:	mov	r6, r0
   1dde4:	cmp	r0, #1
   1dde8:	bne	1de88 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1ddec:	ldr	r0, [r4]
   1ddf0:	ldr	r1, [r4, #8]
   1ddf4:	ldrb	r2, [r0, r1]
   1ddf8:	cmp	r2, #0
   1ddfc:	beq	1de2c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xec>
   1de00:	cmp	r2, #13
   1de04:	bne	1de88 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1de08:	mov	r2, #10
   1de0c:	strb	r2, [r0, r1]
   1de10:	add	r0, sl, #1
   1de14:	cmp	r0, r5
   1de18:	bcs	1ded4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x194>
   1de1c:	ldrb	r1, [r8, r0]
   1de20:	cmp	r1, #10
   1de24:	moveq	sl, r0
   1de28:	b	1de88 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1de2c:	ldr	r0, [fp, #12]
   1de30:	cmp	r0, #0
   1de34:	bne	1de88 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   1de38:	ldr	r0, [r4, #4]
   1de3c:	add	r1, r0, #5
   1de40:	mov	r0, r4
   1de44:	bl	11d80 <mycore_string_realloc@plt>
   1de48:	ldr	r0, [r4]
   1de4c:	ldr	r1, [r4, #8]
   1de50:	mov	r2, #239	; 0xef
   1de54:	strb	r2, [r0, r1]
   1de58:	ldr	r0, [r4]
   1de5c:	ldr	r1, [r4, #8]
   1de60:	add	r1, r1, #1
   1de64:	str	r1, [r4, #8]
   1de68:	mov	r2, #191	; 0xbf
   1de6c:	strb	r2, [r0, r1]
   1de70:	ldr	r0, [r4]
   1de74:	ldr	r1, [r4, #8]
   1de78:	add	r1, r1, #1
   1de7c:	str	r1, [r4, #8]
   1de80:	mov	r2, #189	; 0xbd
   1de84:	strb	r2, [r0, r1]
   1de88:	ldr	r0, [r4, #8]
   1de8c:	add	r0, r0, r6
   1de90:	str	r0, [r4, #8]
   1de94:	add	sl, sl, #1
   1de98:	cmp	sl, r5
   1de9c:	bcc	1dd98 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1dea0:	ldr	r1, [r4, #4]
   1dea4:	ldr	r0, [r4, #8]
   1dea8:	cmp	r0, r1
   1deac:	bcc	1debc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1deb0:	add	r1, r0, #1
   1deb4:	mov	r0, r4
   1deb8:	bl	11d80 <mycore_string_realloc@plt>
   1debc:	ldr	r1, [r4]
   1dec0:	ldr	r2, [r4, #8]
   1dec4:	mov	r0, #0
   1dec8:	strb	r0, [r1, r2]
   1decc:	sub	sp, fp, #28
   1ded0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ded4:	ldr	r1, [r4, #4]
   1ded8:	ldr	r0, [r4, #8]
   1dedc:	add	r2, r0, #1
   1dee0:	str	r2, [r4, #8]
   1dee4:	cmp	r2, r1
   1dee8:	bcc	1def8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   1deec:	add	r1, r0, #3
   1def0:	mov	r0, r4
   1def4:	bl	11d80 <mycore_string_realloc@plt>
   1def8:	ldr	r0, [r4]
   1defc:	ldr	r1, [r4, #8]
   1df00:	mov	r2, #0
   1df04:	strb	r2, [r0, r1]
   1df08:	ldr	r0, [r4, #8]
   1df0c:	sub	sp, fp, #28
   1df10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001df14 <myhtml_parser_stream@@Base>:
   1df14:	push	{r4, sl, fp, lr}
   1df18:	add	fp, sp, #8
   1df1c:	ldr	r0, [r1]
   1df20:	ldr	r0, [r0, #184]	; 0xb8
   1df24:	tst	r0, #1
   1df28:	popne	{r4, sl, fp, pc}
   1df2c:	mov	r4, r1
   1df30:	ldm	r4, {r0, r1}
   1df34:	bl	11330 <myhtml_rules_tree_dispatcher@plt>
   1df38:	cmp	r0, #0
   1df3c:	bne	1df30 <myhtml_parser_stream@@Base+0x1c>
   1df40:	pop	{r4, sl, fp, pc}

0001df44 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1df44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df48:	add	fp, sp, #28
   1df4c:	sub	sp, sp, #20
   1df50:	mov	r5, r3
   1df54:	str	r2, [sp, #16]
   1df58:	mov	sl, r1
   1df5c:	mov	r4, r0
   1df60:	ldr	r0, [r0, #80]	; 0x50
   1df64:	mov	r1, r3
   1df68:	bl	11588 <mycore_incoming_buffer_find_by_position@plt>
   1df6c:	mov	r7, r0
   1df70:	ldr	r0, [r0, #8]
   1df74:	ldr	r1, [r7, #12]
   1df78:	sub	r8, r5, r1
   1df7c:	ldr	r6, [fp, #8]
   1df80:	add	r1, r8, r6
   1df84:	cmp	r1, r0
   1df88:	bls	1e04c <myhtml_parser_token_data_to_string_lowercase@@Base+0x108>
   1df8c:	cmp	r7, #0
   1df90:	beq	1e0fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1df94:	ldr	r0, [sp, #16]
   1df98:	add	r0, r0, #8
   1df9c:	str	r0, [sp, #12]
   1dfa0:	mov	r5, #0
   1dfa4:	add	r1, r6, r8
   1dfa8:	ldr	r0, [r7, #8]
   1dfac:	cmp	r1, r0
   1dfb0:	bls	1e0a4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x160>
   1dfb4:	sub	r9, r0, r8
   1dfb8:	ldr	r0, [r7]
   1dfbc:	add	r1, r0, r8
   1dfc0:	mov	r0, sl
   1dfc4:	mov	r2, r9
   1dfc8:	mov	r3, r5
   1dfcc:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1dfd0:	cmp	r9, #0
   1dfd4:	beq	1e034 <myhtml_parser_token_data_to_string_lowercase@@Base+0xf0>
   1dfd8:	sub	r3, r9, r0
   1dfdc:	add	r0, r0, r8
   1dfe0:	ldr	r1, [r7]
   1dfe4:	add	r2, r1, r0
   1dfe8:	ldr	r0, [r4, #200]	; 0xc8
   1dfec:	cmp	r0, #0
   1dff0:	beq	1e014 <myhtml_parser_token_data_to_string_lowercase@@Base+0xd0>
   1dff4:	ldr	r1, [sp, #16]
   1dff8:	ldr	r0, [r1, #4]
   1dffc:	ldrb	r1, [r1, #61]	; 0x3d
   1e000:	stm	sp, {r0, r1}
   1e004:	mov	r0, sl
   1e008:	ldr	r1, [sp, #12]
   1e00c:	bl	1214c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e010:	b	1e030 <myhtml_parser_token_data_to_string_lowercase@@Base+0xec>
   1e014:	ldr	r0, [sp, #16]
   1e018:	ldrb	r5, [r0, #61]	; 0x3d
   1e01c:	mov	r0, sl
   1e020:	mov	r1, r2
   1e024:	mov	r2, r3
   1e028:	mov	r3, r5
   1e02c:	bl	123c8 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e030:	mov	r5, r0
   1e034:	sub	r6, r6, r9
   1e038:	ldr	r7, [r7, #20]
   1e03c:	mov	r8, #0
   1e040:	cmp	r7, #0
   1e044:	bne	1dfa4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x60>
   1e048:	b	1e0fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e04c:	ldr	r0, [r4, #200]	; 0xc8
   1e050:	cmp	r0, #0
   1e054:	beq	1e084 <myhtml_parser_token_data_to_string_lowercase@@Base+0x140>
   1e058:	ldr	r0, [r7]
   1e05c:	ldr	r3, [sp, #16]
   1e060:	ldr	r1, [r3, #4]
   1e064:	ldrb	r2, [r3, #61]	; 0x3d
   1e068:	stm	sp, {r1, r2}
   1e06c:	add	r2, r0, r8
   1e070:	add	r1, r3, #8
   1e074:	mov	r0, sl
   1e078:	mov	r3, r6
   1e07c:	bl	1214c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e080:	b	1e0fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e084:	ldr	r0, [r7]
   1e088:	add	r1, r0, r8
   1e08c:	ldr	r0, [sp, #16]
   1e090:	ldrb	r3, [r0, #61]	; 0x3d
   1e094:	mov	r0, sl
   1e098:	mov	r2, r6
   1e09c:	bl	123c8 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e0a0:	b	1e0fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e0a4:	ldr	r0, [r7]
   1e0a8:	add	r1, r0, r8
   1e0ac:	mov	r0, sl
   1e0b0:	mov	r2, r6
   1e0b4:	mov	r3, r5
   1e0b8:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1e0bc:	cmp	r6, #0
   1e0c0:	beq	1e0fc <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e0c4:	ldr	r1, [r4, #200]	; 0xc8
   1e0c8:	cmp	r1, #0
   1e0cc:	beq	1e108 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1c4>
   1e0d0:	ldr	r1, [r7]
   1e0d4:	ldr	r3, [sp, #16]
   1e0d8:	ldr	r2, [r3, #4]
   1e0dc:	ldrb	r3, [r3, #61]	; 0x3d
   1e0e0:	stm	sp, {r2, r3}
   1e0e4:	sub	r3, r6, r0
   1e0e8:	add	r0, r0, r8
   1e0ec:	add	r2, r1, r0
   1e0f0:	mov	r0, sl
   1e0f4:	ldr	r1, [sp, #12]
   1e0f8:	b	1e07c <myhtml_parser_token_data_to_string_lowercase@@Base+0x138>
   1e0fc:	ldr	r0, [sl, #8]
   1e100:	sub	sp, fp, #28
   1e104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e108:	sub	r2, r6, r0
   1e10c:	add	r0, r0, r8
   1e110:	ldr	r1, [r7]
   1e114:	add	r1, r1, r0
   1e118:	ldr	r0, [sp, #16]
   1e11c:	ldrb	r3, [r0, #61]	; 0x3d
   1e120:	mov	r0, sl
   1e124:	b	1e09c <myhtml_parser_token_data_to_string_lowercase@@Base+0x158>

0001e128 <myhtml_parser_token_data_to_string@@Base>:
   1e128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e12c:	add	fp, sp, #28
   1e130:	sub	sp, sp, #20
   1e134:	mov	r5, r3
   1e138:	str	r2, [sp, #16]
   1e13c:	mov	sl, r1
   1e140:	mov	r4, r0
   1e144:	ldr	r0, [r0, #80]	; 0x50
   1e148:	mov	r1, r3
   1e14c:	bl	11588 <mycore_incoming_buffer_find_by_position@plt>
   1e150:	mov	r7, r0
   1e154:	ldr	r0, [r0, #8]
   1e158:	ldr	r1, [r7, #12]
   1e15c:	sub	r8, r5, r1
   1e160:	ldr	r6, [fp, #8]
   1e164:	add	r1, r8, r6
   1e168:	cmp	r1, r0
   1e16c:	bls	1e230 <myhtml_parser_token_data_to_string@@Base+0x108>
   1e170:	cmp	r7, #0
   1e174:	beq	1e2e0 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e178:	ldr	r0, [sp, #16]
   1e17c:	add	r0, r0, #8
   1e180:	str	r0, [sp, #12]
   1e184:	mov	r5, #0
   1e188:	add	r1, r6, r8
   1e18c:	ldr	r0, [r7, #8]
   1e190:	cmp	r1, r0
   1e194:	bls	1e288 <myhtml_parser_token_data_to_string@@Base+0x160>
   1e198:	sub	r9, r0, r8
   1e19c:	ldr	r0, [r7]
   1e1a0:	add	r1, r0, r8
   1e1a4:	mov	r0, sl
   1e1a8:	mov	r2, r9
   1e1ac:	mov	r3, r5
   1e1b0:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1e1b4:	cmp	r9, #0
   1e1b8:	beq	1e218 <myhtml_parser_token_data_to_string@@Base+0xf0>
   1e1bc:	sub	r3, r9, r0
   1e1c0:	add	r0, r0, r8
   1e1c4:	ldr	r1, [r7]
   1e1c8:	add	r2, r1, r0
   1e1cc:	ldr	r0, [r4, #200]	; 0xc8
   1e1d0:	cmp	r0, #0
   1e1d4:	beq	1e1f8 <myhtml_parser_token_data_to_string@@Base+0xd0>
   1e1d8:	ldr	r1, [sp, #16]
   1e1dc:	ldr	r0, [r1, #4]
   1e1e0:	ldrb	r1, [r1, #61]	; 0x3d
   1e1e4:	stm	sp, {r0, r1}
   1e1e8:	mov	r0, sl
   1e1ec:	ldr	r1, [sp, #12]
   1e1f0:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e1f4:	b	1e214 <myhtml_parser_token_data_to_string@@Base+0xec>
   1e1f8:	ldr	r0, [sp, #16]
   1e1fc:	ldrb	r5, [r0, #61]	; 0x3d
   1e200:	mov	r0, sl
   1e204:	mov	r1, r2
   1e208:	mov	r2, r3
   1e20c:	mov	r3, r5
   1e210:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1e214:	mov	r5, r0
   1e218:	sub	r6, r6, r9
   1e21c:	ldr	r7, [r7, #20]
   1e220:	mov	r8, #0
   1e224:	cmp	r7, #0
   1e228:	bne	1e188 <myhtml_parser_token_data_to_string@@Base+0x60>
   1e22c:	b	1e2e0 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e230:	ldr	r0, [r4, #200]	; 0xc8
   1e234:	cmp	r0, #0
   1e238:	beq	1e268 <myhtml_parser_token_data_to_string@@Base+0x140>
   1e23c:	ldr	r0, [r7]
   1e240:	ldr	r3, [sp, #16]
   1e244:	ldr	r1, [r3, #4]
   1e248:	ldrb	r2, [r3, #61]	; 0x3d
   1e24c:	stm	sp, {r1, r2}
   1e250:	add	r2, r0, r8
   1e254:	add	r1, r3, #8
   1e258:	mov	r0, sl
   1e25c:	mov	r3, r6
   1e260:	bl	121d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e264:	b	1e2e0 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e268:	ldr	r0, [r7]
   1e26c:	add	r1, r0, r8
   1e270:	ldr	r0, [sp, #16]
   1e274:	ldrb	r3, [r0, #61]	; 0x3d
   1e278:	mov	r0, sl
   1e27c:	mov	r2, r6
   1e280:	bl	11648 <myhtml_string_append_with_preprocessing@plt>
   1e284:	b	1e2e0 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e288:	ldr	r0, [r7]
   1e28c:	add	r1, r0, r8
   1e290:	mov	r0, sl
   1e294:	mov	r2, r6
   1e298:	mov	r3, r5
   1e29c:	bl	11fd8 <myhtml_string_before_append_any_preprocessing@plt>
   1e2a0:	cmp	r6, #0
   1e2a4:	beq	1e2e0 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e2a8:	ldr	r1, [r4, #200]	; 0xc8
   1e2ac:	cmp	r1, #0
   1e2b0:	beq	1e2ec <myhtml_parser_token_data_to_string@@Base+0x1c4>
   1e2b4:	ldr	r1, [r7]
   1e2b8:	ldr	r3, [sp, #16]
   1e2bc:	ldr	r2, [r3, #4]
   1e2c0:	ldrb	r3, [r3, #61]	; 0x3d
   1e2c4:	stm	sp, {r2, r3}
   1e2c8:	sub	r3, r6, r0
   1e2cc:	add	r0, r0, r8
   1e2d0:	add	r2, r1, r0
   1e2d4:	mov	r0, sl
   1e2d8:	ldr	r1, [sp, #12]
   1e2dc:	b	1e260 <myhtml_parser_token_data_to_string@@Base+0x138>
   1e2e0:	ldr	r0, [sl, #8]
   1e2e4:	sub	sp, fp, #28
   1e2e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2ec:	sub	r2, r6, r0
   1e2f0:	add	r0, r0, r8
   1e2f4:	ldr	r1, [r7]
   1e2f8:	add	r1, r1, r0
   1e2fc:	ldr	r0, [sp, #16]
   1e300:	ldrb	r3, [r0, #61]	; 0x3d
   1e304:	mov	r0, sl
   1e308:	b	1e280 <myhtml_parser_token_data_to_string@@Base+0x158>

0001e30c <myhtml_parser_token_data_to_string_charef@@Base>:
   1e30c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e310:	add	fp, sp, #24
   1e314:	mov	r6, r3
   1e318:	mov	r8, r2
   1e31c:	mov	r4, r1
   1e320:	ldr	r0, [r0, #80]	; 0x50
   1e324:	mov	r1, r3
   1e328:	bl	11588 <mycore_incoming_buffer_find_by_position@plt>
   1e32c:	mov	r7, r0
   1e330:	ldr	r1, [r0, #8]
   1e334:	ldr	r0, [r0, #12]
   1e338:	sub	r0, r6, r0
   1e33c:	ldr	r6, [fp, #8]
   1e340:	add	r2, r0, r6
   1e344:	cmp	r2, r1
   1e348:	bhi	1e390 <myhtml_parser_token_data_to_string_charef@@Base+0x84>
   1e34c:	ldr	r1, [r7]
   1e350:	add	r2, r1, r0
   1e354:	mov	r0, r8
   1e358:	mov	r1, r4
   1e35c:	mov	r3, r6
   1e360:	bl	11b88 <myhtml_data_process@plt>
   1e364:	b	1e3ac <myhtml_parser_token_data_to_string_charef@@Base+0xa0>
   1e368:	sub	r5, r1, r0
   1e36c:	ldr	r1, [r7]
   1e370:	add	r2, r1, r0
   1e374:	mov	r0, r8
   1e378:	mov	r1, r4
   1e37c:	mov	r3, r5
   1e380:	bl	11b88 <myhtml_data_process@plt>
   1e384:	sub	r6, r6, r5
   1e388:	ldr	r7, [r7, #20]
   1e38c:	mov	r0, #0
   1e390:	cmp	r7, #0
   1e394:	beq	1e3ac <myhtml_parser_token_data_to_string_charef@@Base+0xa0>
   1e398:	add	r2, r0, r6
   1e39c:	ldr	r1, [r7, #8]
   1e3a0:	cmp	r2, r1
   1e3a4:	bhi	1e368 <myhtml_parser_token_data_to_string_charef@@Base+0x5c>
   1e3a8:	b	1e34c <myhtml_parser_token_data_to_string_charef@@Base+0x40>
   1e3ac:	mov	r0, r8
   1e3b0:	mov	r1, r4
   1e3b4:	bl	11d44 <myhtml_data_process_end@plt>
   1e3b8:	ldr	r0, [r4, #8]
   1e3bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e3c0 <myhtml_parser_worker@@Base>:
   1e3c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3c4:	add	fp, sp, #28
   1e3c8:	sub	sp, sp, #68	; 0x44
   1e3cc:	ldm	r1, {r4, r8}
   1e3d0:	ldr	r1, [r4, #184]	; 0xb8
   1e3d4:	tst	r1, #3
   1e3d8:	ldrne	r1, [r4, #184]	; 0xb8
   1e3dc:	tstne	r1, #2
   1e3e0:	bne	1e5a4 <myhtml_parser_worker@@Base+0x1e4>
   1e3e4:	ldr	r2, [r4]
   1e3e8:	ldr	r1, [r4, #144]	; 0x90
   1e3ec:	ldr	r2, [r2, #4]
   1e3f0:	cmp	r2, #0
   1e3f4:	ldrne	r2, [r2, #12]
   1e3f8:	addne	r0, r2, r0
   1e3fc:	ldr	r9, [r1, r0, lsl #2]
   1e400:	ldr	r3, [r4, #220]	; 0xdc
   1e404:	cmp	r3, #0
   1e408:	beq	1e420 <myhtml_parser_worker@@Base+0x60>
   1e40c:	ldr	r2, [r4, #228]	; 0xe4
   1e410:	mov	r0, r4
   1e414:	mov	r1, r8
   1e418:	blx	r3
   1e41c:	str	r0, [r4, #228]	; 0xe4
   1e420:	ldr	r0, [r8]
   1e424:	sub	r0, r0, #1
   1e428:	cmp	r0, #1
   1e42c:	bhi	1e4a8 <myhtml_parser_worker@@Base+0xe8>
   1e430:	ldr	r0, [r4, #4]
   1e434:	ldr	r1, [r8, #28]
   1e438:	add	r7, r8, #4
   1e43c:	add	r3, r1, #1
   1e440:	mov	r1, r9
   1e444:	mov	r2, r7
   1e448:	bl	11a44 <mycore_string_init@plt>
   1e44c:	mov	r0, #0
   1e450:	str	r0, [r8, #40]	; 0x28
   1e454:	str	r0, [r8, #44]	; 0x2c
   1e458:	add	r0, sp, #4
   1e45c:	bl	11930 <myhtml_data_process_entry_clean@plt>
   1e460:	ldr	r0, [r4, #200]	; 0xc8
   1e464:	str	r0, [sp, #8]
   1e468:	ldr	r0, [r8, #48]	; 0x30
   1e46c:	tst	r0, #512	; 0x200
   1e470:	bne	1e5c8 <myhtml_parser_worker@@Base+0x208>
   1e474:	ldr	r0, [r8, #48]	; 0x30
   1e478:	tst	r0, #16
   1e47c:	ldreq	r0, [r8, #48]	; 0x30
   1e480:	tsteq	r0, #256	; 0x100
   1e484:	bne	1e5d0 <myhtml_parser_worker@@Base+0x210>
   1e488:	ldr	r3, [r8, #24]
   1e48c:	ldr	r0, [r8, #28]
   1e490:	str	r0, [sp]
   1e494:	add	r2, sp, #4
   1e498:	mov	r0, r4
   1e49c:	mov	r1, r7
   1e4a0:	bl	11ec4 <myhtml_parser_token_data_to_string@plt>
   1e4a4:	b	1e604 <myhtml_parser_worker@@Base+0x244>
   1e4a8:	ldr	r0, [r8, #40]	; 0x28
   1e4ac:	cmp	r0, #0
   1e4b0:	beq	1e5f0 <myhtml_parser_worker@@Base+0x230>
   1e4b4:	add	r0, r8, #4
   1e4b8:	bl	12428 <mycore_string_clean_all@plt>
   1e4bc:	ldr	r6, [r8, #40]	; 0x28
   1e4c0:	cmp	r6, #0
   1e4c4:	beq	1e604 <myhtml_parser_worker@@Base+0x244>
   1e4c8:	add	r7, sp, #4
   1e4cc:	mov	sl, #1
   1e4d0:	ldr	r0, [r6, #52]	; 0x34
   1e4d4:	cmp	r0, #0
   1e4d8:	beq	1e528 <myhtml_parser_worker@@Base+0x168>
   1e4dc:	mov	r0, r7
   1e4e0:	bl	11930 <myhtml_data_process_entry_clean@plt>
   1e4e4:	ldr	r0, [r4, #200]	; 0xc8
   1e4e8:	str	r0, [sp, #8]
   1e4ec:	ldr	r0, [r4, #4]
   1e4f0:	ldr	r1, [r6, #52]	; 0x34
   1e4f4:	add	r5, r6, #8
   1e4f8:	add	r3, r1, #1
   1e4fc:	mov	r1, r9
   1e500:	mov	r2, r5
   1e504:	bl	11a44 <mycore_string_init@plt>
   1e508:	ldr	r3, [r6, #48]	; 0x30
   1e50c:	ldr	r0, [r6, #52]	; 0x34
   1e510:	str	r0, [sp]
   1e514:	mov	r0, r4
   1e518:	mov	r1, r5
   1e51c:	mov	r2, r7
   1e520:	bl	123a4 <myhtml_parser_token_data_to_string_lowercase@plt>
   1e524:	b	1e530 <myhtml_parser_worker@@Base+0x170>
   1e528:	add	r0, r6, #8
   1e52c:	bl	12428 <mycore_string_clean_all@plt>
   1e530:	ldr	r0, [r6, #60]	; 0x3c
   1e534:	cmp	r0, #0
   1e538:	beq	1e58c <myhtml_parser_worker@@Base+0x1cc>
   1e53c:	mov	r0, r7
   1e540:	bl	11930 <myhtml_data_process_entry_clean@plt>
   1e544:	ldr	r0, [r4, #200]	; 0xc8
   1e548:	strb	sl, [sp, #64]	; 0x40
   1e54c:	str	r0, [sp, #8]
   1e550:	ldr	r0, [r4, #4]
   1e554:	ldr	r1, [r6, #60]	; 0x3c
   1e558:	add	r5, r6, #28
   1e55c:	add	r3, r1, #1
   1e560:	mov	r1, r9
   1e564:	mov	r2, r5
   1e568:	bl	11a44 <mycore_string_init@plt>
   1e56c:	ldr	r3, [r6, #56]	; 0x38
   1e570:	ldr	r0, [r6, #60]	; 0x3c
   1e574:	str	r0, [sp]
   1e578:	mov	r0, r4
   1e57c:	mov	r1, r5
   1e580:	mov	r2, r7
   1e584:	bl	11840 <myhtml_parser_token_data_to_string_charef@plt>
   1e588:	b	1e594 <myhtml_parser_worker@@Base+0x1d4>
   1e58c:	add	r0, r6, #28
   1e590:	bl	12428 <mycore_string_clean_all@plt>
   1e594:	ldr	r6, [r6]
   1e598:	cmp	r6, #0
   1e59c:	bne	1e4d0 <myhtml_parser_worker@@Base+0x110>
   1e5a0:	b	1e604 <myhtml_parser_worker@@Base+0x244>
   1e5a4:	ldr	r3, [r4, #220]	; 0xdc
   1e5a8:	cmp	r3, #0
   1e5ac:	beq	1e604 <myhtml_parser_worker@@Base+0x244>
   1e5b0:	ldr	r2, [r4, #228]	; 0xe4
   1e5b4:	mov	r0, r4
   1e5b8:	mov	r1, r8
   1e5bc:	blx	r3
   1e5c0:	str	r0, [r4, #228]	; 0xe4
   1e5c4:	b	1e604 <myhtml_parser_worker@@Base+0x244>
   1e5c8:	mov	r0, #1
   1e5cc:	strb	r0, [sp, #65]	; 0x41
   1e5d0:	ldr	r3, [r8, #24]
   1e5d4:	ldr	r0, [r8, #28]
   1e5d8:	str	r0, [sp]
   1e5dc:	add	r2, sp, #4
   1e5e0:	mov	r0, r4
   1e5e4:	mov	r1, r7
   1e5e8:	bl	11840 <myhtml_parser_token_data_to_string_charef@plt>
   1e5ec:	b	1e604 <myhtml_parser_worker@@Base+0x244>
   1e5f0:	mov	r0, #0
   1e5f4:	str	r0, [r8, #40]	; 0x28
   1e5f8:	str	r0, [r8, #44]	; 0x2c
   1e5fc:	add	r0, r8, #4
   1e600:	bl	12428 <mycore_string_clean_all@plt>
   1e604:	ldr	r0, [r8, #48]	; 0x30
   1e608:	orr	r0, r0, #4
   1e60c:	str	r0, [r8, #48]	; 0x30
   1e610:	ldr	r3, [r4, #224]	; 0xe0
   1e614:	cmp	r3, #0
   1e618:	beq	1e630 <myhtml_parser_worker@@Base+0x270>
   1e61c:	ldr	r2, [r4, #232]	; 0xe8
   1e620:	mov	r0, r4
   1e624:	mov	r1, r8
   1e628:	blx	r3
   1e62c:	str	r0, [r4, #232]	; 0xe8
   1e630:	sub	sp, fp, #28
   1e634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e638 <myhtml_parser_worker_stream@@Base>:
   1e638:	push	{r4, sl, fp, lr}
   1e63c:	add	fp, sp, #8
   1e640:	mov	r4, r1
   1e644:	bl	11240 <myhtml_parser_worker@plt>
   1e648:	mov	r1, r4
   1e64c:	pop	{r4, sl, fp, lr}
   1e650:	b	1df14 <myhtml_parser_stream@@Base>

0001e654 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1e654:	push	{r4, sl, fp, lr}
   1e658:	add	fp, sp, #8
   1e65c:	mov	r4, r1
   1e660:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1e664:	add	r0, r4, #4
   1e668:	pop	{r4, sl, fp, lr}
   1e66c:	b	118f4 <mycore_string_crop_whitespace_from_begin@plt>

0001e670 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1e670:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e674:	add	fp, sp, #24
   1e678:	mov	r4, r1
   1e67c:	mov	r7, r0
   1e680:	ldr	r0, [r0, #8]
   1e684:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1e688:	add	r0, r4, #4
   1e68c:	bl	121a0 <mycore_string_whitespace_from_begin@plt>
   1e690:	mov	r6, #0
   1e694:	cmp	r0, #0
   1e698:	beq	1e70c <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   1e69c:	mov	r5, r0
   1e6a0:	ldr	r0, [r7, #8]
   1e6a4:	ldr	r1, [r7, #40]	; 0x28
   1e6a8:	bl	11e10 <myhtml_token_node_create@plt>
   1e6ac:	cmp	r0, #0
   1e6b0:	beq	1e70c <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   1e6b4:	mov	r8, r0
   1e6b8:	ldr	r0, [r7, #4]
   1e6bc:	ldr	r1, [r7, #52]	; 0x34
   1e6c0:	add	r6, r8, #4
   1e6c4:	add	r3, r5, #2
   1e6c8:	mov	r2, r6
   1e6cc:	bl	11a44 <mycore_string_init@plt>
   1e6d0:	ldr	r1, [r4, #4]
   1e6d4:	mov	r0, r6
   1e6d8:	mov	r2, r5
   1e6dc:	bl	11cf0 <mycore_string_append@plt>
   1e6e0:	ldr	r0, [r8, #48]	; 0x30
   1e6e4:	orr	r0, r0, #4
   1e6e8:	str	r0, [r8, #48]	; 0x30
   1e6ec:	ldr	r0, [r4, #4]
   1e6f0:	mov	r1, r5
   1e6f4:	bl	12020 <mchar_async_crop_first_chars_without_cache@plt>
   1e6f8:	str	r0, [r4, #4]
   1e6fc:	ldr	r0, [r4, #12]
   1e700:	sub	r0, r0, r5
   1e704:	str	r0, [r4, #12]
   1e708:	mov	r6, r8
   1e70c:	mov	r0, r6
   1e710:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e714 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1e714:	push	{r4, r5, r6, r7, fp, lr}
   1e718:	add	fp, sp, #16
   1e71c:	mov	r4, r1
   1e720:	ldr	r0, [r0, #8]
   1e724:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1e728:	ldr	r5, [r4, #12]
   1e72c:	cmp	r5, #0
   1e730:	popeq	{r4, r5, r6, r7, fp, pc}
   1e734:	mov	r0, #0
   1e738:	mov	r6, #0
   1e73c:	ldr	r3, [r4, #4]
   1e740:	ldrb	r1, [r3, r0]
   1e744:	cmp	r1, #0
   1e748:	bne	1e7c8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb4>
   1e74c:	cmp	r0, r5
   1e750:	mov	r2, r0
   1e754:	bcs	1e774 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x60>
   1e758:	mov	r2, r0
   1e75c:	ldrb	r1, [r3, r2]
   1e760:	cmp	r1, #0
   1e764:	bne	1e774 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x60>
   1e768:	add	r2, r2, #1
   1e76c:	cmp	r2, r5
   1e770:	bcc	1e75c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x48>
   1e774:	sub	r1, r0, r2
   1e778:	ldr	r7, [r4, #12]
   1e77c:	add	r1, r1, r7
   1e780:	str	r1, [r4, #12]
   1e784:	cmp	r2, r5
   1e788:	mov	r7, r2
   1e78c:	bcs	1e7ac <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x98>
   1e790:	mov	r7, r2
   1e794:	ldrb	r1, [r3, r7]
   1e798:	cmp	r1, #0
   1e79c:	beq	1e7ac <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x98>
   1e7a0:	add	r7, r7, #1
   1e7a4:	cmp	r7, r5
   1e7a8:	bcc	1e794 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x80>
   1e7ac:	add	r1, r3, r2
   1e7b0:	sub	r2, r7, r2
   1e7b4:	sub	r0, r0, r6
   1e7b8:	add	r0, r3, r0
   1e7bc:	bl	11318 <memmove@plt>
   1e7c0:	add	r6, r6, #1
   1e7c4:	sub	r0, r7, #1
   1e7c8:	add	r0, r0, #1
   1e7cc:	cmp	r0, r5
   1e7d0:	bcc	1e73c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   1e7d4:	pop	{r4, r5, r6, r7, fp, pc}

0001e7d8 <myhtml_insertion_mode_initial@@Base>:
   1e7d8:	push	{r4, r5, r6, sl, fp, lr}
   1e7dc:	add	fp, sp, #16
   1e7e0:	mov	r5, r1
   1e7e4:	mov	r4, r0
   1e7e8:	ldr	r0, [r1]
   1e7ec:	cmp	r0, #3
   1e7f0:	beq	1e830 <myhtml_insertion_mode_initial@@Base+0x58>
   1e7f4:	cmp	r0, #2
   1e7f8:	beq	1e8a0 <myhtml_insertion_mode_initial@@Base+0xc8>
   1e7fc:	cmp	r0, #1
   1e800:	bne	1e820 <myhtml_insertion_mode_initial@@Base+0x48>
   1e804:	ldr	r1, [r5, #48]	; 0x30
   1e808:	mov	r0, #0
   1e80c:	tst	r1, #8
   1e810:	popne	{r4, r5, r6, sl, fp, pc}
   1e814:	ldr	r0, [r4, #8]
   1e818:	mov	r1, r5
   1e81c:	bl	115a0 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1e820:	mov	r0, #1
   1e824:	str	r0, [r4, #168]	; 0xa8
   1e828:	str	r0, [r4, #176]	; 0xb0
   1e82c:	pop	{r4, r5, r6, sl, fp, pc}
   1e830:	ldr	r0, [r4, #8]
   1e834:	mov	r1, r5
   1e838:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1e83c:	ldr	r0, [r4, #8]
   1e840:	add	r6, r4, #108	; 0x6c
   1e844:	mov	r1, r5
   1e848:	mov	r2, r6
   1e84c:	bl	110fc <myhtml_token_release_and_check_doctype_attributes@plt>
   1e850:	ldr	r0, [r4, #184]	; 0xb8
   1e854:	tst	r0, #8
   1e858:	bne	1e868 <myhtml_insertion_mode_initial@@Base+0x90>
   1e85c:	mov	r0, r4
   1e860:	mov	r1, r5
   1e864:	bl	121e8 <myhtml_tree_node_insert_doctype@plt>
   1e868:	ldrb	r0, [r6]
   1e86c:	cmp	r0, #0
   1e870:	bne	1e890 <myhtml_insertion_mode_initial@@Base+0xb8>
   1e874:	ldr	r0, [r4, #116]	; 0x74
   1e878:	cmp	r0, #0
   1e87c:	ldrne	r0, [r4, #120]	; 0x78
   1e880:	cmpne	r0, #0
   1e884:	bne	1e890 <myhtml_insertion_mode_initial@@Base+0xb8>
   1e888:	mov	r0, #1
   1e88c:	str	r0, [r4, #176]	; 0xb0
   1e890:	mov	r0, #1
   1e894:	str	r0, [r4, #168]	; 0xa8
   1e898:	mov	r0, #0
   1e89c:	pop	{r4, r5, r6, sl, fp, pc}
   1e8a0:	ldr	r2, [r4, #84]	; 0x54
   1e8a4:	mov	r0, r4
   1e8a8:	mov	r1, r5
   1e8ac:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   1e8b0:	mov	r0, #0
   1e8b4:	pop	{r4, r5, r6, sl, fp, pc}

0001e8b8 <myhtml_insertion_mode_before_html@@Base>:
   1e8b8:	push	{r4, r5, fp, lr}
   1e8bc:	add	fp, sp, #8
   1e8c0:	mov	r4, r0
   1e8c4:	ldr	r0, [r1]
   1e8c8:	ldr	r2, [r1, #48]	; 0x30
   1e8cc:	tst	r2, #1
   1e8d0:	bne	1e904 <myhtml_insertion_mode_before_html@@Base+0x4c>
   1e8d4:	mov	r5, #0
   1e8d8:	cmp	r0, #2
   1e8dc:	bgt	1e928 <myhtml_insertion_mode_before_html@@Base+0x70>
   1e8e0:	cmp	r0, #1
   1e8e4:	beq	1e940 <myhtml_insertion_mode_before_html@@Base+0x88>
   1e8e8:	cmp	r0, #2
   1e8ec:	bne	1e954 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1e8f0:	ldr	r2, [r4, #84]	; 0x54
   1e8f4:	mov	r0, r4
   1e8f8:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   1e8fc:	mov	r0, r5
   1e900:	pop	{r4, r5, fp, pc}
   1e904:	sub	r1, r0, #23
   1e908:	cmp	r1, #2
   1e90c:	bcc	1e954 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1e910:	cmp	r0, #65	; 0x41
   1e914:	beq	1e954 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1e918:	mov	r5, #0
   1e91c:	cmp	r0, #61	; 0x3d
   1e920:	beq	1e954 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1e924:	b	1e970 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1e928:	cmp	r0, #3
   1e92c:	beq	1e970 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1e930:	cmp	r0, #65	; 0x41
   1e934:	bne	1e954 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1e938:	mov	r0, r4
   1e93c:	b	1e960 <myhtml_insertion_mode_before_html@@Base+0xa8>
   1e940:	ldr	r0, [r1, #48]	; 0x30
   1e944:	tst	r0, #8
   1e948:	bne	1e970 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1e94c:	ldr	r0, [r4, #8]
   1e950:	bl	115a0 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1e954:	mov	r5, #1
   1e958:	mov	r0, r4
   1e95c:	mov	r1, #0
   1e960:	mov	r2, #1
   1e964:	bl	110d8 <myhtml_tree_node_insert_root@plt>
   1e968:	mov	r0, #2
   1e96c:	str	r0, [r4, #168]	; 0xa8
   1e970:	mov	r0, r5
   1e974:	pop	{r4, r5, fp, pc}

0001e978 <myhtml_insertion_mode_before_head@@Base>:
   1e978:	push	{r4, r5, fp, lr}
   1e97c:	add	fp, sp, #8
   1e980:	mov	r4, r0
   1e984:	ldr	r0, [r1]
   1e988:	ldr	r2, [r1, #48]	; 0x30
   1e98c:	tst	r2, #1
   1e990:	bne	1e9c4 <myhtml_insertion_mode_before_head@@Base+0x4c>
   1e994:	mov	r5, #0
   1e998:	cmp	r0, #2
   1e99c:	ble	1e9e8 <myhtml_insertion_mode_before_head@@Base+0x70>
   1e9a0:	cmp	r0, #3
   1e9a4:	beq	1ea50 <myhtml_insertion_mode_before_head@@Base+0xd8>
   1e9a8:	cmp	r0, #61	; 0x3d
   1e9ac:	beq	1ea10 <myhtml_insertion_mode_before_head@@Base+0x98>
   1e9b0:	cmp	r0, #65	; 0x41
   1e9b4:	bne	1ea30 <myhtml_insertion_mode_before_head@@Base+0xb8>
   1e9b8:	mov	r0, r4
   1e9bc:	pop	{r4, r5, fp, lr}
   1e9c0:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   1e9c4:	sub	r1, r0, #23
   1e9c8:	cmp	r1, #2
   1e9cc:	bcc	1ea30 <myhtml_insertion_mode_before_head@@Base+0xb8>
   1e9d0:	cmp	r0, #65	; 0x41
   1e9d4:	beq	1ea30 <myhtml_insertion_mode_before_head@@Base+0xb8>
   1e9d8:	mov	r5, #0
   1e9dc:	cmp	r0, #61	; 0x3d
   1e9e0:	beq	1ea30 <myhtml_insertion_mode_before_head@@Base+0xb8>
   1e9e4:	b	1ea50 <myhtml_insertion_mode_before_head@@Base+0xd8>
   1e9e8:	cmp	r0, #1
   1e9ec:	beq	1ea1c <myhtml_insertion_mode_before_head@@Base+0xa4>
   1e9f0:	cmp	r0, #2
   1e9f4:	bne	1ea30 <myhtml_insertion_mode_before_head@@Base+0xb8>
   1e9f8:	mov	r5, #0
   1e9fc:	mov	r0, r4
   1ea00:	mov	r2, #0
   1ea04:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   1ea08:	mov	r0, r5
   1ea0c:	pop	{r4, r5, fp, pc}
   1ea10:	mov	r0, r4
   1ea14:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1ea18:	b	1ea44 <myhtml_insertion_mode_before_head@@Base+0xcc>
   1ea1c:	ldr	r0, [r1, #48]	; 0x30
   1ea20:	tst	r0, #8
   1ea24:	bne	1ea50 <myhtml_insertion_mode_before_head@@Base+0xd8>
   1ea28:	ldr	r0, [r4, #8]
   1ea2c:	bl	115a0 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1ea30:	mov	r5, #1
   1ea34:	mov	r0, r4
   1ea38:	mov	r1, #61	; 0x3d
   1ea3c:	mov	r2, #1
   1ea40:	bl	11d8c <myhtml_tree_node_insert@plt>
   1ea44:	str	r0, [r4, #92]	; 0x5c
   1ea48:	mov	r0, #3
   1ea4c:	str	r0, [r4, #168]	; 0xa8
   1ea50:	mov	r0, r5
   1ea54:	pop	{r4, r5, fp, pc}

0001ea58 <myhtml_insertion_mode_in_body@@Base>:
   1ea58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea5c:	add	fp, sp, #28
   1ea60:	sub	sp, sp, #12
   1ea64:	mov	r6, r1
   1ea68:	mov	r5, r0
   1ea6c:	ldr	r2, [r1]
   1ea70:	ldr	r0, [r1, #48]	; 0x30
   1ea74:	tst	r0, #1
   1ea78:	bne	1eeb0 <myhtml_insertion_mode_in_body@@Base+0x458>
   1ea7c:	sub	r0, r2, #1
   1ea80:	mov	r8, #0
   1ea84:	cmp	r0, #250	; 0xfa
   1ea88:	bhi	1fcdc <myhtml_insertion_mode_in_body@@Base+0x1284>
   1ea8c:	add	r1, pc, #4
   1ea90:	ldr	r0, [r1, r0, lsl #2]
   1ea94:	add	pc, r1, r0
   1ea98:	andeq	r0, r0, r0, asr #25
   1ea9c:	andeq	r0, r0, r8, lsl #26
   1eaa0:	andeq	r1, r0, r8, asr r2
   1eaa4:	andeq	r0, r0, r0, lsr #26
   1eaa8:	andeq	r1, r0, r4, asr #4
   1eaac:	andeq	r1, r0, r4, asr #4
   1eab0:	andeq	r0, r0, ip, ror #7
   1eab4:	andeq	r1, r0, r4, asr #4
   1eab8:	andeq	r0, r0, r4, asr #16
   1eabc:	andeq	r0, r0, r0, asr #14
   1eac0:	andeq	r0, r0, ip, ror #7
   1eac4:	andeq	r0, r0, ip, ror #7
   1eac8:	andeq	r1, r0, r4, asr #4
   1eacc:	andeq	r1, r0, r4, lsl r2
   1ead0:			; <UNDEFINED> instruction: 0x000006bc
   1ead4:			; <UNDEFINED> instruction: 0x000006bc
   1ead8:	andeq	r1, r0, r4, asr #4
   1eadc:	andeq	r1, r0, r4, asr #4
   1eae0:			; <UNDEFINED> instruction: 0x000006bc
   1eae4:	andeq	r1, r0, r4, lsl r2
   1eae8:	andeq	r1, r0, r4, asr #4
   1eaec:	andeq	r0, r0, ip, ror #7
   1eaf0:	andeq	r0, r0, r4, lsl #27
   1eaf4:	andeq	r0, r0, r0, asr #14
   1eaf8:	andeq	r0, r0, r0, lsl #28
   1eafc:	andeq	r1, r0, r4, asr #4
   1eb00:	andeq	r1, r0, r8, asr r2
   1eb04:	andeq	r0, r0, ip, ror #7
   1eb08:	andeq	r1, r0, r4, asr #4
   1eb0c:	andeq	r1, r0, r4, lsl r2
   1eb10:	andeq	r1, r0, r8, asr r2
   1eb14:	andeq	r1, r0, r8, asr r2
   1eb18:	andeq	r1, r0, r4, asr #4
   1eb1c:	andeq	r1, r0, r4, asr #4
   1eb20:	andeq	r1, r0, r4, asr #4
   1eb24:	andeq	r0, r0, ip, asr #18
   1eb28:	andeq	r1, r0, r4, asr #4
   1eb2c:	andeq	r0, r0, ip, ror #7
   1eb30:	andeq	r1, r0, r4, asr #4
   1eb34:	andeq	r0, r0, ip, ror #7
   1eb38:	andeq	r0, r0, ip, ror #7
   1eb3c:	andeq	r0, r0, ip, ror #7
   1eb40:	andeq	r0, r0, ip, ror #7
   1eb44:	andeq	r0, r0, ip, asr #18
   1eb48:	andeq	r1, r0, r4, lsl r2
   1eb4c:	andeq	r0, r0, r0, asr #14
   1eb50:	andeq	r0, r0, ip, ror #7
   1eb54:	andeq	r0, r0, ip, ror #7
   1eb58:	andeq	r0, r0, ip, ror #7
   1eb5c:	andeq	r1, r0, r4, lsl r2
   1eb60:	andeq	r0, r0, ip, ror #7
   1eb64:	andeq	r0, r0, r8, asr lr
   1eb68:	andeq	r1, r0, r8, asr r2
   1eb6c:	andeq	r0, r0, r8, asr #29
   1eb70:	andeq	r0, r0, ip, asr #14
   1eb74:	andeq	r0, r0, ip, asr #14
   1eb78:	andeq	r0, r0, ip, asr #14
   1eb7c:	andeq	r0, r0, ip, asr #14
   1eb80:	andeq	r0, r0, ip, asr #14
   1eb84:	andeq	r0, r0, ip, asr #14
   1eb88:	andeq	r1, r0, r8, asr r2
   1eb8c:	andeq	r0, r0, ip, ror #7
   1eb90:	andeq	r0, r0, ip, ror #7
   1eb94:	andeq	r0, r0, r0, lsr pc
   1eb98:	andeq	r0, r0, r4, lsr #31
   1eb9c:	andeq	r1, r0, r4, lsl r2
   1eba0:	andeq	r1, r0, r8, ror #7
   1eba4:	andeq	r1, r0, r8, lsl r0
   1eba8:	andeq	r0, r0, r0, asr #14
   1ebac:	andeq	r1, r0, r8, lsr #32
   1ebb0:	andeq	r1, r0, r4, asr #4
   1ebb4:	andeq	r1, r0, r4, asr #4
   1ebb8:	andeq	r1, r0, r4, asr #4
   1ebbc:	andeq	r0, r0, r0, asr #14
   1ebc0:	andeq	r1, r0, r4, asr #4
   1ebc4:	andeq	r1, r0, r4, asr #4
   1ebc8:	andeq	r1, r0, r8, lsl #1
   1ebcc:			; <UNDEFINED> instruction: 0x000006bc
   1ebd0:	andeq	r0, r0, r8, asr #20
   1ebd4:	andeq	r0, r0, ip, ror #7
   1ebd8:	andeq	r1, r0, r4, asr #4
   1ebdc:	andeq	r1, r0, r4, asr #4
   1ebe0:	andeq	r0, r0, r4, asr #16
   1ebe4:	andeq	r1, r0, r0, ror r1
   1ebe8:			; <UNDEFINED> instruction: 0x000011bc
   1ebec:			; <UNDEFINED> instruction: 0x000006bc
   1ebf0:	andeq	r1, r0, r4, asr #4
   1ebf4:	andeq	r1, r0, r4, asr #4
   1ebf8:	andeq	r0, r0, ip, ror #7
   1ebfc:	andeq	r1, r0, r0, ror #3
   1ec00:	andeq	r1, r0, r4, ror #4
   1ec04:			; <UNDEFINED> instruction: 0x000006bc
   1ec08:	andeq	r1, r0, r8, lsr r2
   1ec0c:	andeq	r0, r0, r4, asr #16
   1ec10:	andeq	r0, r0, ip, ror #7
   1ec14:	andeq	r0, r0, ip, lsl #21
   1ec18:	andeq	r0, r0, ip, lsl #21
   1ec1c:	andeq	r1, r0, r4, asr #4
   1ec20:	andeq	r0, r0, ip, ror #7
   1ec24:	andeq	r0, r0, ip, ror #16
   1ec28:	andeq	r1, r0, r0, ror r2
   1ec2c:	andeq	r0, r0, r8, asr #20
   1ec30:	andeq	r1, r0, r4, asr #4
   1ec34:	andeq	r1, r0, r4, asr #4
   1ec38:	muleq	r0, ip, sl
   1ec3c:	andeq	r0, r0, r8, asr #21
   1ec40:	andeq	r0, r0, r8, asr #21
   1ec44:	muleq	r0, ip, sl
   1ec48:	andeq	r1, r0, r4, asr #4
   1ec4c:	andeq	r1, r0, r4, lsl r2
   1ec50:	andeq	r1, r0, r4, asr #4
   1ec54:			; <UNDEFINED> instruction: 0x000006bc
   1ec58:	andeq	r0, r0, ip, ror #7
   1ec5c:			; <UNDEFINED> instruction: 0x000012b0
   1ec60:	andeq	r1, r0, r4, lsl r2
   1ec64:	andeq	r0, r0, ip, ror #16
   1ec68:	andeq	r1, r0, r4, asr #4
   1ec6c:	andeq	r1, r0, r4, lsl r2
   1ec70:	andeq	r1, r0, r4, lsl r2
   1ec74:			; <UNDEFINED> instruction: 0x000006bc
   1ec78:	andeq	r1, r0, r4, asr #4
   1ec7c:	andeq	r0, r0, ip, ror #7
   1ec80:	andeq	r1, r0, r4, asr #4
   1ec84:	andeq	r1, r0, r0, lsl #6
   1ec88:	andeq	r1, r0, r8, lsr r3
   1ec8c:	andeq	r1, r0, r8, asr r2
   1ec90:	andeq	r1, r0, r8, asr r2
   1ec94:			; <UNDEFINED> instruction: 0x000006bc
   1ec98:	andeq	r1, r0, r4, lsl #7
   1ec9c:	andeq	r1, r0, r8, asr r2
   1eca0:	andeq	r1, r0, r8, asr r2
   1eca4:	andeq	r1, r0, r8, asr r2
   1eca8:	andeq	r1, r0, r4, asr #4
   1ecac:			; <UNDEFINED> instruction: 0x000006bc
   1ecb0:	andeq	r1, r0, r8, asr r2
   1ecb4:	andeq	r0, r0, ip, ror #16
   1ecb8:	andeq	r1, r0, r4, lsl r2
   1ecbc:	andeq	r1, r0, r4, lsl r2
   1ecc0:	andeq	r0, r0, ip, ror #7
   1ecc4:	andeq	r1, r0, r4, asr #4
   1ecc8:	andeq	r1, r0, r4, asr #4
   1eccc:	andeq	r0, r0, r0, asr #14
   1ecd0:			; <UNDEFINED> instruction: 0x000013b8
   1ecd4:	andeq	r1, r0, r4, asr #4
   1ecd8:	andeq	r1, r0, r4, asr #4
   1ecdc:	andeq	r1, r0, r4, asr #4
   1ece0:	andeq	r1, r0, r4, asr #4
   1ece4:	andeq	r1, r0, r4, asr #4
   1ece8:	andeq	r1, r0, r4, asr #4
   1ecec:	andeq	r1, r0, r4, asr #4
   1ecf0:	andeq	r1, r0, r4, asr #4
   1ecf4:	andeq	r1, r0, r4, asr #4
   1ecf8:	andeq	r1, r0, r4, asr #4
   1ecfc:	andeq	r1, r0, r4, asr #4
   1ed00:	andeq	r1, r0, r4, asr #4
   1ed04:	andeq	r1, r0, r4, asr #4
   1ed08:	andeq	r1, r0, r4, asr #4
   1ed0c:	andeq	r1, r0, r4, asr #4
   1ed10:	andeq	r1, r0, r4, asr #4
   1ed14:	andeq	r1, r0, r4, asr #4
   1ed18:	andeq	r1, r0, r4, asr #4
   1ed1c:	andeq	r1, r0, r4, asr #4
   1ed20:	andeq	r1, r0, r4, asr #4
   1ed24:	andeq	r1, r0, r4, asr #4
   1ed28:	andeq	r1, r0, r4, asr #4
   1ed2c:	andeq	r1, r0, r4, asr #4
   1ed30:	andeq	r1, r0, r4, asr #4
   1ed34:	andeq	r1, r0, r4, asr #4
   1ed38:	andeq	r1, r0, r4, asr #4
   1ed3c:	andeq	r1, r0, r4, asr #4
   1ed40:	andeq	r1, r0, r4, asr #4
   1ed44:	andeq	r1, r0, r4, asr #4
   1ed48:	andeq	r1, r0, r4, asr #4
   1ed4c:	andeq	r1, r0, r4, asr #4
   1ed50:	andeq	r1, r0, r4, asr #4
   1ed54:	andeq	r1, r0, r4, asr #4
   1ed58:	andeq	r1, r0, r4, asr #4
   1ed5c:	andeq	r1, r0, r4, asr #4
   1ed60:	andeq	r1, r0, r4, asr #4
   1ed64:	andeq	r1, r0, r4, asr #4
   1ed68:	andeq	r1, r0, r4, asr #4
   1ed6c:	andeq	r1, r0, r4, asr #4
   1ed70:	andeq	r1, r0, r4, asr #4
   1ed74:	andeq	r1, r0, r4, asr #4
   1ed78:	andeq	r1, r0, r4, asr #4
   1ed7c:	andeq	r1, r0, r4, asr #4
   1ed80:	andeq	r1, r0, r4, asr #4
   1ed84:	andeq	r1, r0, r4, asr #4
   1ed88:	andeq	r1, r0, r4, asr #4
   1ed8c:	andeq	r1, r0, r4, asr #4
   1ed90:	andeq	r1, r0, r4, asr #4
   1ed94:	andeq	r1, r0, r4, asr #4
   1ed98:	andeq	r1, r0, r4, asr #4
   1ed9c:	andeq	r1, r0, r4, asr #4
   1eda0:	andeq	r1, r0, r4, asr #4
   1eda4:	andeq	r1, r0, r4, asr #4
   1eda8:	andeq	r1, r0, r4, asr #4
   1edac:	andeq	r1, r0, r4, asr #4
   1edb0:	andeq	r1, r0, r4, asr #4
   1edb4:	andeq	r1, r0, r4, asr #4
   1edb8:	andeq	r1, r0, r4, asr #4
   1edbc:	andeq	r1, r0, r4, asr #4
   1edc0:	andeq	r1, r0, r4, asr #4
   1edc4:	andeq	r1, r0, r4, asr #4
   1edc8:	andeq	r1, r0, r4, asr #4
   1edcc:	andeq	r1, r0, r4, asr #4
   1edd0:	andeq	r1, r0, r4, asr #4
   1edd4:	andeq	r1, r0, r4, asr #4
   1edd8:	andeq	r1, r0, r4, asr #4
   1eddc:	andeq	r1, r0, r4, asr #4
   1ede0:	andeq	r1, r0, r4, asr #4
   1ede4:	andeq	r1, r0, r4, asr #4
   1ede8:	andeq	r1, r0, r4, asr #4
   1edec:	andeq	r1, r0, r4, asr #4
   1edf0:	andeq	r1, r0, r4, asr #4
   1edf4:	andeq	r1, r0, r4, asr #4
   1edf8:	andeq	r1, r0, r4, asr #4
   1edfc:	andeq	r1, r0, r4, lsl r4
   1ee00:	andeq	r1, r0, r4, asr #4
   1ee04:	andeq	r1, r0, r4, asr #4
   1ee08:	andeq	r1, r0, r4, asr #4
   1ee0c:	andeq	r1, r0, r4, asr #4
   1ee10:	andeq	r1, r0, r4, asr #4
   1ee14:	andeq	r1, r0, r4, asr #4
   1ee18:	andeq	r1, r0, r4, asr #4
   1ee1c:	andeq	r1, r0, r4, asr #4
   1ee20:	andeq	r1, r0, r4, asr #4
   1ee24:	andeq	r1, r0, r4, asr #4
   1ee28:	andeq	r1, r0, r4, asr #4
   1ee2c:	andeq	r1, r0, r4, asr #4
   1ee30:	andeq	r1, r0, r4, asr #4
   1ee34:	andeq	r1, r0, r4, asr #4
   1ee38:	andeq	r1, r0, r4, asr #4
   1ee3c:	andeq	r1, r0, r4, asr #4
   1ee40:	andeq	r1, r0, r4, asr #4
   1ee44:	andeq	r1, r0, r4, asr #4
   1ee48:	andeq	r1, r0, r4, asr #4
   1ee4c:	andeq	r1, r0, r4, asr #4
   1ee50:	andeq	r1, r0, r4, asr #4
   1ee54:	andeq	r1, r0, r4, asr #4
   1ee58:	andeq	r1, r0, r4, asr #4
   1ee5c:	andeq	r1, r0, r4, asr #4
   1ee60:	andeq	r1, r0, r4, asr #4
   1ee64:	andeq	r1, r0, r4, asr #4
   1ee68:	andeq	r1, r0, r4, asr #4
   1ee6c:	andeq	r1, r0, r4, asr #4
   1ee70:	andeq	r1, r0, r4, asr #4
   1ee74:	andeq	r1, r0, r4, asr #4
   1ee78:	andeq	r1, r0, r4, asr #4
   1ee7c:	andeq	r1, r0, r4, asr #4
   1ee80:	andeq	r1, r0, r4, ror #8
   1ee84:	mov	r0, r5
   1ee88:	mov	r1, #99	; 0x63
   1ee8c:	mov	r2, #1
   1ee90:	mov	r3, #32
   1ee94:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1ee98:	cmp	r0, #0
   1ee9c:	beq	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1eea0:	mov	r0, r5
   1eea4:	mov	r1, r6
   1eea8:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1eeac:	b	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1eeb0:	sub	r0, r2, #4
   1eeb4:	cmp	r0, #135	; 0x87
   1eeb8:	bhi	1f598 <myhtml_insertion_mode_in_body@@Base+0xb40>
   1eebc:	add	r1, pc, #4
   1eec0:	ldr	r0, [r1, r0, lsl #2]
   1eec4:	add	pc, r1, r0
   1eec8:	andeq	r0, r0, r8, ror r2
   1eecc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eed0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eed4:	andeq	r0, r0, r0, lsr #4
   1eed8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eedc:	andeq	r0, r0, ip, ror #6
   1eee0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eee4:	andeq	r0, r0, r0, lsr #4
   1eee8:	andeq	r0, r0, r0, lsr #4
   1eeec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eef0:	andeq	r0, r0, r8, ror r2
   1eef4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eef8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eefc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef04:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef08:	andeq	r0, r0, r8, ror r2
   1ef0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef10:	andeq	r0, r0, r0, lsr #4
   1ef14:	andeq	r0, r0, r0, ror #13
   1ef18:	andeq	r0, r0, r4, lsr #14
   1ef1c:	andeq	r0, r0, r0, lsr #4
   1ef20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef28:	andeq	r0, r0, r0, lsr #4
   1ef2c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef30:	andeq	r0, r0, r8, ror r2
   1ef34:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef3c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef40:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef44:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef48:	andeq	r0, r0, ip, asr #7
   1ef4c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef50:	andeq	r0, r0, r0, lsr #4
   1ef54:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef58:	andeq	r0, r0, r0, lsr #4
   1ef5c:	andeq	r0, r0, r0, lsr #4
   1ef60:	andeq	r0, r0, r0, lsr #4
   1ef64:	andeq	r0, r0, r0, lsr #4
   1ef68:	andeq	r0, r0, ip, asr #7
   1ef6c:	andeq	r0, r0, r8, ror r2
   1ef70:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef74:	andeq	r0, r0, r0, lsr #4
   1ef78:	andeq	r0, r0, r0, lsr #4
   1ef7c:	andeq	r0, r0, r0, lsr #4
   1ef80:	andeq	r0, r0, r8, ror r2
   1ef84:	andeq	r0, r0, r0, lsr #4
   1ef88:	andeq	r0, r0, r8, asr r7
   1ef8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1ef94:	andeq	r0, r0, r0, lsr #5
   1ef98:	andeq	r0, r0, r0, lsr #5
   1ef9c:	andeq	r0, r0, r0, lsr #5
   1efa0:	andeq	r0, r0, r0, lsr #5
   1efa4:	andeq	r0, r0, r0, lsr #5
   1efa8:	andeq	r0, r0, r0, lsr #5
   1efac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efb0:	andeq	r0, r0, r0, lsr #4
   1efb4:	andeq	r0, r0, r0, lsr #4
   1efb8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efbc:	andeq	r0, r0, r4, asr #15
   1efc0:	andeq	r0, r0, r8, ror r2
   1efc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efc8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efcc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efd0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efd4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efd8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efdc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efe0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efe4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efe8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1efec:	andeq	r0, r0, r8, lsl #16
   1eff0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1eff4:	andeq	r0, r0, r0, lsr #4
   1eff8:	andeq	r0, r0, r0, lsr #4
   1effc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f000:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f004:	andeq	r0, r0, ip, ror #6
   1f008:	andeq	r0, r0, r0, lsr #4
   1f00c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f010:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f014:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f018:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f01c:	andeq	r0, r0, r0, lsr #4
   1f020:	andeq	r0, r0, r8, ror r2
   1f024:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f028:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f02c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f030:	andeq	r0, r0, ip, ror #6
   1f034:	andeq	r0, r0, r0, lsr #4
   1f038:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f03c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f040:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f044:	andeq	r0, r0, r4, asr r8
   1f048:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f04c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f050:	andeq	r0, r0, r0, lsr #4
   1f054:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f058:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f05c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f060:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f064:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f068:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f06c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f070:	andeq	r0, r0, r8, ror r2
   1f074:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f078:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f07c:	andeq	r0, r0, r0, lsr #4
   1f080:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f084:	andeq	r0, r0, r8, ror r2
   1f088:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f08c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f090:	andeq	r0, r0, r8, ror r2
   1f094:	andeq	r0, r0, r8, ror r2
   1f098:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f09c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0a0:	andeq	r0, r0, r0, lsr #4
   1f0a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0b8:	andeq	r0, r0, ip, lsl #5
   1f0bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1f0dc:	andeq	r0, r0, r8, ror r2
   1f0e0:	andeq	r0, r0, r8, ror r2
   1f0e4:	andeq	r0, r0, r0, lsr #4
   1f0e8:	mov	r0, r5
   1f0ec:	mov	r1, r2
   1f0f0:	mov	r2, #1
   1f0f4:	mov	r3, #8
   1f0f8:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f0fc:	mov	r8, #0
   1f100:	cmp	r0, #0
   1f104:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f108:	mov	r0, r5
   1f10c:	mov	r1, #0
   1f110:	mov	r2, #0
   1f114:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f118:	mov	r0, r5
   1f11c:	bl	11a5c <myhtml_tree_current_node@plt>
   1f120:	ldr	r1, [r6]
   1f124:	bl	11ea0 <myhtml_is_html_node@plt>
   1f128:	ldr	r1, [r6]
   1f12c:	mov	r0, r5
   1f130:	mov	r2, #1
   1f134:	mov	r3, #0
   1f138:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   1f13c:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f140:	mov	r0, r5
   1f144:	mov	r1, r6
   1f148:	bl	11cb4 <myhtml_tree_adoption_agency_algorithm@plt>
   1f14c:	mov	r8, #0
   1f150:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f154:	mov	r0, r5
   1f158:	mov	r1, r6
   1f15c:	sub	sp, fp, #28
   1f160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f164:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   1f168:	ldr	r1, [r5, #128]	; 0x80
   1f16c:	ldr	r0, [r1, #4]
   1f170:	mov	r8, #0
   1f174:	cmp	r0, #0
   1f178:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f17c:	ldr	r4, [r1]
   1f180:	rsb	r7, r0, #1
   1f184:	ldr	r0, [r4, -r7, lsl #2]
   1f188:	ldr	r1, [r0, #4]
   1f18c:	ldr	r0, [r5, #28]
   1f190:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1f194:	ldr	r1, [r4, -r7, lsl #2]
   1f198:	ldr	r2, [r1, #4]
   1f19c:	sub	r2, r2, #55	; 0x37
   1f1a0:	cmp	r2, #5
   1f1a4:	bhi	1f1b4 <myhtml_insertion_mode_in_body@@Base+0x75c>
   1f1a8:	ldr	r2, [r1, #8]
   1f1ac:	cmp	r2, #1
   1f1b0:	beq	1f314 <myhtml_insertion_mode_in_body@@Base+0x8bc>
   1f1b4:	cmp	r7, #0
   1f1b8:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f1bc:	ldr	r1, [r1, #8]
   1f1c0:	add	r0, r0, r1, lsl #2
   1f1c4:	ldr	r0, [r0, #16]
   1f1c8:	ands	r0, r0, #8
   1f1cc:	add	r7, r7, #1
   1f1d0:	beq	1f184 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1d4:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f1d8:	mov	r0, r5
   1f1dc:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1f1e0:	b	1fa10 <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1f1e4:	mov	r0, r5
   1f1e8:	mov	r1, #99	; 0x63
   1f1ec:	mov	r2, #1
   1f1f0:	mov	r3, #32
   1f1f4:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f1f8:	cmp	r0, #0
   1f1fc:	beq	1f20c <myhtml_insertion_mode_in_body@@Base+0x7b4>
   1f200:	mov	r0, r5
   1f204:	mov	r1, r6
   1f208:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1f20c:	mov	r0, r5
   1f210:	bl	11a5c <myhtml_tree_current_node@plt>
   1f214:	ldr	r1, [r0, #4]
   1f218:	sub	r1, r1, #55	; 0x37
   1f21c:	cmp	r1, #5
   1f220:	bhi	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f224:	ldr	r0, [r0, #8]
   1f228:	cmp	r0, #1
   1f22c:	beq	1fc48 <myhtml_insertion_mode_in_body@@Base+0x11f0>
   1f230:	b	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f234:	mov	r0, r5
   1f238:	mov	r1, r2
   1f23c:	mov	r2, #1
   1f240:	mov	r3, #8
   1f244:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f248:	mov	r8, #0
   1f24c:	cmp	r0, #0
   1f250:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f254:	mov	r0, r5
   1f258:	mov	r1, #0
   1f25c:	mov	r2, #0
   1f260:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f264:	mov	r0, r5
   1f268:	bl	11a5c <myhtml_tree_current_node@plt>
   1f26c:	ldr	r1, [r6]
   1f270:	bl	11ea0 <myhtml_is_html_node@plt>
   1f274:	ldr	r1, [r6]
   1f278:	mov	r0, r5
   1f27c:	mov	r2, #1
   1f280:	mov	r3, #0
   1f284:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   1f288:	mov	r0, r5
   1f28c:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1f290:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f294:	mov	r0, r5
   1f298:	mov	r1, r2
   1f29c:	mov	r2, #1
   1f2a0:	mov	r3, #8
   1f2a4:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f2a8:	cmp	r0, #0
   1f2ac:	beq	1f14c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f2b0:	ldr	r1, [r6]
   1f2b4:	mov	r0, r5
   1f2b8:	mov	r2, #1
   1f2bc:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f2c0:	mov	r0, r5
   1f2c4:	bl	11a5c <myhtml_tree_current_node@plt>
   1f2c8:	ldr	r1, [r6]
   1f2cc:	bl	11ea0 <myhtml_is_html_node@plt>
   1f2d0:	ldr	r1, [r6]
   1f2d4:	mov	r8, #0
   1f2d8:	b	1f12c <myhtml_insertion_mode_in_body@@Base+0x6d4>
   1f2dc:	mov	r0, r5
   1f2e0:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1f2e4:	mov	r0, r5
   1f2e8:	mov	r1, r6
   1f2ec:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1f2f0:	ldr	r0, [r5]
   1f2f4:	ldr	r1, [r0, #36]	; 0x24
   1f2f8:	mov	r0, r5
   1f2fc:	bl	11558 <myhtml_tree_active_formatting_append@plt>
   1f300:	b	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f304:	mov	r0, r5
   1f308:	mov	r1, r6
   1f30c:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1f310:	b	1fef0 <myhtml_insertion_mode_in_body@@Base+0x1498>
   1f314:	mov	r8, #0
   1f318:	mov	r0, r5
   1f31c:	mov	r1, #0
   1f320:	mov	r2, #0
   1f324:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f328:	mov	r0, r5
   1f32c:	bl	11a5c <myhtml_tree_current_node@plt>
   1f330:	ldr	r1, [r6]
   1f334:	bl	11ea0 <myhtml_is_html_node@plt>
   1f338:	ldr	r0, [r5, #128]	; 0x80
   1f33c:	ldr	r1, [r0, #4]!
   1f340:	cmp	r1, #0
   1f344:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f348:	ldr	r1, [r0]
   1f34c:	sub	r1, r1, #1
   1f350:	str	r1, [r0]
   1f354:	ldr	r1, [r0]
   1f358:	ldr	r1, [r4, r1, lsl #2]
   1f35c:	ldr	r1, [r1, #4]
   1f360:	cmp	r1, #55	; 0x37
   1f364:	beq	1f3cc <myhtml_insertion_mode_in_body@@Base+0x974>
   1f368:	ldr	r1, [r0]
   1f36c:	ldr	r1, [r4, r1, lsl #2]
   1f370:	ldr	r1, [r1, #4]
   1f374:	cmp	r1, #56	; 0x38
   1f378:	beq	1f3cc <myhtml_insertion_mode_in_body@@Base+0x974>
   1f37c:	ldr	r1, [r0]
   1f380:	ldr	r1, [r4, r1, lsl #2]
   1f384:	ldr	r1, [r1, #4]
   1f388:	cmp	r1, #57	; 0x39
   1f38c:	beq	1f3cc <myhtml_insertion_mode_in_body@@Base+0x974>
   1f390:	ldr	r1, [r0]
   1f394:	ldr	r1, [r4, r1, lsl #2]
   1f398:	ldr	r1, [r1, #4]
   1f39c:	cmp	r1, #58	; 0x3a
   1f3a0:	beq	1f3cc <myhtml_insertion_mode_in_body@@Base+0x974>
   1f3a4:	ldr	r1, [r0]
   1f3a8:	ldr	r1, [r4, r1, lsl #2]
   1f3ac:	ldr	r1, [r1, #4]
   1f3b0:	cmp	r1, #59	; 0x3b
   1f3b4:	beq	1f3cc <myhtml_insertion_mode_in_body@@Base+0x974>
   1f3b8:	ldr	r1, [r0]
   1f3bc:	ldr	r1, [r4, r1, lsl #2]
   1f3c0:	ldr	r1, [r1, #4]
   1f3c4:	cmp	r1, #60	; 0x3c
   1f3c8:	bne	1f338 <myhtml_insertion_mode_in_body@@Base+0x8e0>
   1f3cc:	ldr	r0, [r0]
   1f3d0:	ldr	r0, [r4, r0, lsl #2]
   1f3d4:	ldr	r0, [r0, #8]
   1f3d8:	cmp	r0, #1
   1f3dc:	bne	1f338 <myhtml_insertion_mode_in_body@@Base+0x8e0>
   1f3e0:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f3e4:	ldr	r0, [r5, #128]	; 0x80
   1f3e8:	ldr	r1, [r5, #180]	; 0xb4
   1f3ec:	ldr	r2, [r5, #180]	; 0xb4
   1f3f0:	and	r1, r1, #2
   1f3f4:	eor	r1, r2, r1
   1f3f8:	str	r1, [r5, #180]	; 0xb4
   1f3fc:	ldr	sl, [r0, #4]
   1f400:	cmp	sl, #0
   1f404:	beq	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f408:	ldr	r0, [r5, #28]
   1f40c:	ldr	r1, [r5, #128]	; 0x80
   1f410:	ldr	r1, [r1]
   1f414:	add	r1, r1, sl, lsl #2
   1f418:	ldr	r4, [r1, #-4]
   1f41c:	mov	r7, r4
   1f420:	ldr	r1, [r7, #4]!
   1f424:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1f428:	mov	r9, r0
   1f42c:	mov	r0, r4
   1f430:	mov	r1, #36	; 0x24
   1f434:	bl	11ea0 <myhtml_is_html_node@plt>
   1f438:	cmp	r0, #0
   1f43c:	bne	1ff20 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f440:	rsb	sl, sl, #2
   1f444:	mov	r0, r4
   1f448:	mov	r1, #44	; 0x2c
   1f44c:	bl	11ea0 <myhtml_is_html_node@plt>
   1f450:	cmp	r0, #0
   1f454:	bne	1ffe8 <myhtml_insertion_mode_in_body@@Base+0x1590>
   1f458:	ldr	r0, [r4, #8]
   1f45c:	add	r1, r9, r0, lsl #2
   1f460:	ldrb	r1, [r1, #16]
   1f464:	tst	r1, #2
   1f468:	bne	1f478 <myhtml_insertion_mode_in_body@@Base+0xa20>
   1f46c:	cmp	sl, #1
   1f470:	bne	1f498 <myhtml_insertion_mode_in_body@@Base+0xa40>
   1f474:	b	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f478:	ldr	r1, [r7]
   1f47c:	cmp	r1, #7
   1f480:	cmpne	r1, #99	; 0x63
   1f484:	bne	1f4d4 <myhtml_insertion_mode_in_body@@Base+0xa7c>
   1f488:	cmp	sl, #1
   1f48c:	beq	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f490:	cmp	r0, #1
   1f494:	bne	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f498:	ldr	r0, [r5, #28]
   1f49c:	ldr	r1, [r5, #128]	; 0x80
   1f4a0:	ldr	r1, [r1]
   1f4a4:	ldr	r4, [r1, -sl, lsl #2]
   1f4a8:	mov	r7, r4
   1f4ac:	ldr	r1, [r7, #4]!
   1f4b0:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1f4b4:	mov	r9, r0
   1f4b8:	mov	r0, r4
   1f4bc:	mov	r1, #36	; 0x24
   1f4c0:	bl	11ea0 <myhtml_is_html_node@plt>
   1f4c4:	add	sl, sl, #1
   1f4c8:	cmp	r0, #0
   1f4cc:	beq	1f444 <myhtml_insertion_mode_in_body@@Base+0x9ec>
   1f4d0:	b	1ff20 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f4d4:	cmp	r1, #42	; 0x2a
   1f4d8:	beq	1f488 <myhtml_insertion_mode_in_body@@Base+0xa30>
   1f4dc:	b	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f4e0:	mov	r0, r5
   1f4e4:	mov	r1, #99	; 0x63
   1f4e8:	mov	r2, #1
   1f4ec:	mov	r3, #32
   1f4f0:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f4f4:	cmp	r0, #0
   1f4f8:	beq	1f508 <myhtml_insertion_mode_in_body@@Base+0xab0>
   1f4fc:	mov	r0, r5
   1f500:	mov	r1, r6
   1f504:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1f508:	mov	r0, r5
   1f50c:	mov	r1, r6
   1f510:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1f514:	ldr	r0, [r5, #180]	; 0xb4
   1f518:	orr	r0, r0, #192	; 0xc0
   1f51c:	str	r0, [r5, #180]	; 0xb4
   1f520:	b	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f524:	mov	r0, r5
   1f528:	bl	11a5c <myhtml_tree_current_node@plt>
   1f52c:	mov	r1, #97	; 0x61
   1f530:	b	1fc60 <myhtml_insertion_mode_in_body@@Base+0x1208>
   1f534:	mov	r0, r5
   1f538:	mov	r1, #109	; 0x6d
   1f53c:	mov	r2, #1
   1f540:	mov	r3, #8
   1f544:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f548:	cmp	r0, #0
   1f54c:	beq	1f58c <myhtml_insertion_mode_in_body@@Base+0xb34>
   1f550:	mov	r0, r5
   1f554:	mov	r1, #0
   1f558:	mov	r2, #0
   1f55c:	b	1f588 <myhtml_insertion_mode_in_body@@Base+0xb30>
   1f560:	mov	r0, r5
   1f564:	mov	r1, #109	; 0x6d
   1f568:	mov	r2, #1
   1f56c:	mov	r3, #8
   1f570:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f574:	cmp	r0, #0
   1f578:	beq	1f58c <myhtml_insertion_mode_in_body@@Base+0xb34>
   1f57c:	mov	r0, r5
   1f580:	mov	r1, #108	; 0x6c
   1f584:	mov	r2, #1
   1f588:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f58c:	mov	r0, r5
   1f590:	bl	11a5c <myhtml_tree_current_node@plt>
   1f594:	b	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f598:	mov	r0, r5
   1f59c:	mov	r1, r6
   1f5a0:	bl	111e0 <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1f5a4:	b	1f14c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f5a8:	mov	r0, r5
   1f5ac:	mov	r1, #23
   1f5b0:	mov	r2, #1
   1f5b4:	mov	r3, #8
   1f5b8:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f5bc:	mov	r8, #0
   1f5c0:	cmp	r0, #0
   1f5c4:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f5c8:	ldr	r0, [r5, #128]	; 0x80
   1f5cc:	mvn	r1, #0
   1f5d0:	add	r1, r1, #1
   1f5d4:	ldr	r2, [r0, #4]
   1f5d8:	cmp	r1, r2
   1f5dc:	bcc	1f5d0 <myhtml_insertion_mode_in_body@@Base+0xb78>
   1f5e0:	mov	r0, #18
   1f5e4:	str	r0, [r5, #168]	; 0xa8
   1f5e8:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f5ec:	ldr	r0, [r6, #40]	; 0x28
   1f5f0:	cmp	r0, #0
   1f5f4:	movne	r0, #0
   1f5f8:	strne	r0, [r6, #40]	; 0x28
   1f5fc:	ldr	r0, [r6, #44]	; 0x2c
   1f600:	cmp	r0, #0
   1f604:	movne	r0, #0
   1f608:	strne	r0, [r6, #44]	; 0x2c
   1f60c:	mov	r0, r5
   1f610:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1f614:	mov	r8, #0
   1f618:	str	r8, [r6, #48]	; 0x30
   1f61c:	b	1fa10 <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1f620:	mov	r8, #0
   1f624:	mov	r0, r5
   1f628:	mov	r1, #128	; 0x80
   1f62c:	mov	r2, #1
   1f630:	mov	r3, #0
   1f634:	bl	11c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f638:	cmp	r0, #0
   1f63c:	beq	1ff4c <myhtml_insertion_mode_in_body@@Base+0x14f4>
   1f640:	mov	r0, r5
   1f644:	mov	r1, #52	; 0x34
   1f648:	mov	r2, #1
   1f64c:	mov	r3, #8
   1f650:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f654:	cmp	r0, #0
   1f658:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f65c:	mov	r8, #0
   1f660:	mov	r0, r5
   1f664:	mov	r1, #0
   1f668:	mov	r2, #0
   1f66c:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f670:	mov	r0, r5
   1f674:	bl	11a5c <myhtml_tree_current_node@plt>
   1f678:	mov	r1, #52	; 0x34
   1f67c:	bl	11ea0 <myhtml_is_html_node@plt>
   1f680:	mov	r0, r5
   1f684:	mov	r1, #52	; 0x34
   1f688:	b	1f130 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1f68c:	mov	r0, r5
   1f690:	mov	r1, #23
   1f694:	mov	r2, #1
   1f698:	mov	r3, #8
   1f69c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f6a0:	cmp	r0, #0
   1f6a4:	beq	1f14c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f6a8:	ldr	r0, [r5, #128]	; 0x80
   1f6ac:	mvn	r1, #0
   1f6b0:	add	r1, r1, #1
   1f6b4:	ldr	r2, [r0, #4]
   1f6b8:	cmp	r1, r2
   1f6bc:	bcc	1f6b0 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1f6c0:	mov	r0, #18
   1f6c4:	str	r0, [r5, #168]	; 0xa8
   1f6c8:	mov	r8, #1
   1f6cc:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f6d0:	mov	r0, r5
   1f6d4:	mov	r1, #77	; 0x4d
   1f6d8:	mov	r2, #1
   1f6dc:	mov	r3, #16
   1f6e0:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f6e4:	cmp	r0, #0
   1f6e8:	beq	1f14c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f6ec:	mov	r0, r5
   1f6f0:	mov	r1, #77	; 0x4d
   1f6f4:	mov	r2, #1
   1f6f8:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f6fc:	mov	r0, r5
   1f700:	bl	11a5c <myhtml_tree_current_node@plt>
   1f704:	mov	r1, #77	; 0x4d
   1f708:	bl	11ea0 <myhtml_is_html_node@plt>
   1f70c:	mov	r8, #0
   1f710:	mov	r0, r5
   1f714:	mov	r1, #77	; 0x4d
   1f718:	b	1f130 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1f71c:	mov	r0, r5
   1f720:	mov	r1, #99	; 0x63
   1f724:	mov	r2, #1
   1f728:	mov	r3, #32
   1f72c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f730:	cmp	r0, #0
   1f734:	bne	1f748 <myhtml_insertion_mode_in_body@@Base+0xcf0>
   1f738:	mov	r0, r5
   1f73c:	mov	r1, #99	; 0x63
   1f740:	mov	r2, #1
   1f744:	bl	11d8c <myhtml_tree_node_insert@plt>
   1f748:	mov	r0, r5
   1f74c:	mov	r1, r6
   1f750:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1f754:	b	1f14c <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f758:	ldr	r0, [r6, #48]	; 0x30
   1f75c:	tst	r0, #2048	; 0x800
   1f760:	beq	1f77c <myhtml_insertion_mode_in_body@@Base+0xd24>
   1f764:	mov	r0, r5
   1f768:	mov	r1, r6
   1f76c:	bl	11be8 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f770:	ldr	r0, [r6, #12]
   1f774:	cmp	r0, #0
   1f778:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f77c:	mov	r0, r5
   1f780:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1f784:	mov	r0, r5
   1f788:	mov	r1, r6
   1f78c:	bl	11420 <myhtml_tree_node_insert_text@plt>
   1f790:	ldr	r0, [r6, #48]	; 0x30
   1f794:	tst	r0, #8
   1f798:	beq	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f79c:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f7a0:	mov	r8, #0
   1f7a4:	mov	r0, r5
   1f7a8:	mov	r1, r6
   1f7ac:	mov	r2, #0
   1f7b0:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   1f7b4:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f7b8:	mov	r8, #0
   1f7bc:	mov	r0, r5
   1f7c0:	mov	r1, #4
   1f7c4:	mov	r2, #0
   1f7c8:	bl	11a80 <myhtml_tree_active_formatting_between_last_marker@plt>
   1f7cc:	cmp	r0, #0
   1f7d0:	beq	1fcac <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f7d4:	mov	r0, r5
   1f7d8:	mov	r1, r6
   1f7dc:	mov	r2, #4
   1f7e0:	bl	11cb4 <myhtml_tree_adoption_agency_algorithm@plt>
   1f7e4:	mov	r0, r5
   1f7e8:	mov	r1, #4
   1f7ec:	mov	r2, #0
   1f7f0:	bl	11a80 <myhtml_tree_active_formatting_between_last_marker@plt>
   1f7f4:	cmp	r0, #0
   1f7f8:	beq	1fcac <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f7fc:	mov	r4, r0
   1f800:	mov	r0, r5
   1f804:	mov	r1, r4
   1f808:	bl	116a8 <myhtml_tree_open_elements_remove@plt>
   1f80c:	mov	r0, r5
   1f810:	mov	r1, r4
   1f814:	bl	11cc0 <myhtml_tree_active_formatting_remove@plt>
   1f818:	b	1fcac <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f81c:	ldr	r0, [r5, #128]	; 0x80
   1f820:	ldr	r1, [r0, #4]
   1f824:	cmp	r1, #2
   1f828:	bcc	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f82c:	ldr	r0, [r0]
   1f830:	ldr	r0, [r0, #4]
   1f834:	ldr	r1, [r0, #4]
   1f838:	cmp	r1, #23
   1f83c:	ldreq	r0, [r0, #8]
   1f840:	cmpeq	r0, #1
   1f844:	bne	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f848:	mov	r8, #0
   1f84c:	mov	r0, r5
   1f850:	mov	r1, #128	; 0x80
   1f854:	mov	r2, #1
   1f858:	mov	r3, #0
   1f85c:	bl	11c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f860:	cmp	r0, #0
   1f864:	bne	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f868:	ldr	r0, [r5, #128]	; 0x80
   1f86c:	ldr	r1, [r5, #180]	; 0xb4
   1f870:	ldr	r2, [r5, #180]	; 0xb4
   1f874:	and	r1, r1, #2
   1f878:	eor	r1, r2, r1
   1f87c:	str	r1, [r5, #180]	; 0xb4
   1f880:	ldr	r1, [r0, #4]
   1f884:	cmp	r1, #2
   1f888:	bcc	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f88c:	ldr	r0, [r0]
   1f890:	ldr	r4, [r0, #4]
   1f894:	b	1fa74 <myhtml_insertion_mode_in_body@@Base+0x101c>
   1f898:	mov	r0, r5
   1f89c:	mov	r1, #25
   1f8a0:	mov	r2, #1
   1f8a4:	mov	r3, #8
   1f8a8:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f8ac:	cmp	r0, #0
   1f8b0:	beq	1f8d8 <myhtml_insertion_mode_in_body@@Base+0xe80>
   1f8b4:	mov	r0, r5
   1f8b8:	mov	r1, #0
   1f8bc:	mov	r2, #0
   1f8c0:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1f8c4:	mov	r0, r5
   1f8c8:	mov	r1, #25
   1f8cc:	mov	r2, #1
   1f8d0:	mov	r3, #0
   1f8d4:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   1f8d8:	mov	r0, r5
   1f8dc:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1f8e0:	mov	r0, r5
   1f8e4:	mov	r1, r6
   1f8e8:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1f8ec:	b	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f8f0:	mov	r8, #0
   1f8f4:	mov	r0, r5
   1f8f8:	mov	r1, #128	; 0x80
   1f8fc:	mov	r2, #1
   1f900:	mov	r3, #0
   1f904:	bl	11c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f908:	mov	r4, r0
   1f90c:	cmp	r0, #0
   1f910:	bne	1f920 <myhtml_insertion_mode_in_body@@Base+0xec8>
   1f914:	ldr	r0, [r5, #104]	; 0x68
   1f918:	cmp	r0, #0
   1f91c:	bne	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f920:	mov	r0, r5
   1f924:	mov	r1, #99	; 0x63
   1f928:	mov	r2, #1
   1f92c:	mov	r3, #32
   1f930:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f934:	cmp	r0, #0
   1f938:	beq	1f948 <myhtml_insertion_mode_in_body@@Base+0xef0>
   1f93c:	mov	r0, r5
   1f940:	mov	r1, r6
   1f944:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1f948:	mov	r0, r5
   1f94c:	mov	r1, r6
   1f950:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1f954:	cmp	r4, #0
   1f958:	streq	r0, [r5, #104]	; 0x68
   1f95c:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f960:	ldr	r0, [r5, #128]	; 0x80
   1f964:	ldr	r1, [r0, #4]
   1f968:	cmp	r1, #2
   1f96c:	bcc	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f970:	ldr	r0, [r0]
   1f974:	ldr	r0, [r0, #4]
   1f978:	ldr	r1, [r0, #4]
   1f97c:	cmp	r1, #23
   1f980:	ldreq	r1, [r0, #8]
   1f984:	cmpeq	r1, #1
   1f988:	bne	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f98c:	ldr	r1, [r5, #180]	; 0xb4
   1f990:	tst	r1, #2
   1f994:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f998:	bl	121ac <myhtml_tree_node_remove@plt>
   1f99c:	mov	r0, r5
   1f9a0:	mov	r1, #65	; 0x41
   1f9a4:	mov	r2, #1
   1f9a8:	mov	r3, #1
   1f9ac:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   1f9b0:	mov	r0, r5
   1f9b4:	mov	r1, r6
   1f9b8:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1f9bc:	mov	r0, #19
   1f9c0:	str	r0, [r5, #168]	; 0xa8
   1f9c4:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1f9c8:	mov	r0, r5
   1f9cc:	mov	r1, #99	; 0x63
   1f9d0:	mov	r2, #1
   1f9d4:	mov	r3, #32
   1f9d8:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1f9dc:	cmp	r0, #0
   1f9e0:	beq	1f9f0 <myhtml_insertion_mode_in_body@@Base+0xf98>
   1f9e4:	mov	r0, r5
   1f9e8:	mov	r1, r6
   1f9ec:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1f9f0:	mov	r0, r5
   1f9f4:	bl	11a5c <myhtml_tree_current_node@plt>
   1f9f8:	mov	r1, #85	; 0x55
   1f9fc:	bl	11ea0 <myhtml_is_html_node@plt>
   1fa00:	cmp	r0, #0
   1fa04:	beq	1fa10 <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1fa08:	mov	r0, r5
   1fa0c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   1fa10:	mov	r0, r5
   1fa14:	mov	r1, r6
   1fa18:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fa1c:	mov	r0, r5
   1fa20:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   1fa24:	ldr	r0, [r5, #180]	; 0xb4
   1fa28:	ldr	r1, [r5, #180]	; 0xb4
   1fa2c:	and	r0, r0, #2
   1fa30:	eor	r0, r1, r0
   1fa34:	str	r0, [r5, #180]	; 0xb4
   1fa38:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fa3c:	mov	r8, #0
   1fa40:	mov	r0, r5
   1fa44:	mov	r1, #128	; 0x80
   1fa48:	mov	r2, #1
   1fa4c:	mov	r3, #0
   1fa50:	bl	11c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1fa54:	cmp	r0, #0
   1fa58:	bne	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fa5c:	ldr	r0, [r5, #128]	; 0x80
   1fa60:	ldr	r1, [r0, #4]
   1fa64:	cmp	r1, #0
   1fa68:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fa6c:	ldr	r0, [r0]
   1fa70:	ldr	r4, [r0]
   1fa74:	ldr	r0, [r4, #32]
   1fa78:	cmp	r0, #0
   1fa7c:	beq	2002c <myhtml_insertion_mode_in_body@@Base+0x15d4>
   1fa80:	ldr	r0, [r5, #8]
   1fa84:	mov	r1, r6
   1fa88:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1fa8c:	ldr	r1, [r4, #32]
   1fa90:	ldr	r0, [r5, #8]
   1fa94:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1fa98:	ldr	r2, [r4, #32]
   1fa9c:	ldr	r0, [r5, #8]
   1faa0:	ldr	r3, [r5, #44]	; 0x2c
   1faa4:	mov	r1, r6
   1faa8:	bl	11ac8 <myhtml_token_node_attr_copy_with_check@plt>
   1faac:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fab0:	mov	r0, #69	; 0x45
   1fab4:	str	r0, [r6]
   1fab8:	mov	r8, #1
   1fabc:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fac0:	mov	r0, r5
   1fac4:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fac8:	mov	r0, r5
   1facc:	mov	r1, r6
   1fad0:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fad4:	mov	r0, r5
   1fad8:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   1fadc:	ldr	r0, [r5, #8]
   1fae0:	mov	r1, r6
   1fae4:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1fae8:	ldr	r0, [r5, #8]
   1faec:	mov	r1, #6
   1faf0:	ldr	r2, [pc, #1340]	; 20034 <myhtml_insertion_mode_in_body@@Base+0x15dc>
   1faf4:	add	r2, pc, r2
   1faf8:	str	r2, [sp]
   1fafc:	str	r1, [sp, #4]
   1fb00:	ldr	r2, [pc, #1328]	; 20038 <myhtml_insertion_mode_in_body@@Base+0x15e0>
   1fb04:	add	r2, pc, r2
   1fb08:	mov	r1, r6
   1fb0c:	mov	r3, #4
   1fb10:	bl	111f8 <myhtml_token_attr_match_case@plt>
   1fb14:	cmp	r0, #0
   1fb18:	bne	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fb1c:	b	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1fb20:	ldr	r0, [r5, #128]	; 0x80
   1fb24:	ldr	r1, [r5, #180]	; 0xb4
   1fb28:	ldr	r2, [r5, #180]	; 0xb4
   1fb2c:	and	r1, r1, #2
   1fb30:	eor	r1, r2, r1
   1fb34:	str	r1, [r5, #180]	; 0xb4
   1fb38:	ldr	r4, [r0, #4]
   1fb3c:	cmp	r4, #0
   1fb40:	beq	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fb44:	ldr	r0, [r5, #28]
   1fb48:	ldr	r1, [r5, #128]	; 0x80
   1fb4c:	ldr	r1, [r1]
   1fb50:	add	r1, r1, r4, lsl #2
   1fb54:	ldr	sl, [r1, #-4]
   1fb58:	mov	r7, sl
   1fb5c:	ldr	r1, [r7, #4]!
   1fb60:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1fb64:	mov	r9, r0
   1fb68:	mov	r0, sl
   1fb6c:	mov	r1, #77	; 0x4d
   1fb70:	bl	11ea0 <myhtml_is_html_node@plt>
   1fb74:	cmp	r0, #0
   1fb78:	bne	1ffa0 <myhtml_insertion_mode_in_body@@Base+0x1548>
   1fb7c:	rsb	r4, r4, #2
   1fb80:	ldr	r0, [sl, #8]
   1fb84:	add	r1, r9, r0, lsl #2
   1fb88:	ldrb	r1, [r1, #16]
   1fb8c:	tst	r1, #2
   1fb90:	bne	1fba0 <myhtml_insertion_mode_in_body@@Base+0x1148>
   1fb94:	cmp	r4, #1
   1fb98:	bne	1fbc0 <myhtml_insertion_mode_in_body@@Base+0x1168>
   1fb9c:	b	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fba0:	ldr	r1, [r7]
   1fba4:	cmp	r1, #7
   1fba8:	cmpne	r1, #99	; 0x63
   1fbac:	bne	1fbfc <myhtml_insertion_mode_in_body@@Base+0x11a4>
   1fbb0:	cmp	r4, #1
   1fbb4:	beq	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fbb8:	cmp	r0, #1
   1fbbc:	bne	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fbc0:	ldr	r0, [r5, #28]
   1fbc4:	ldr	r1, [r5, #128]	; 0x80
   1fbc8:	ldr	r1, [r1]
   1fbcc:	ldr	sl, [r1, -r4, lsl #2]
   1fbd0:	mov	r7, sl
   1fbd4:	ldr	r1, [r7, #4]!
   1fbd8:	bl	11e28 <myhtml_tag_get_by_id@plt>
   1fbdc:	mov	r9, r0
   1fbe0:	mov	r0, sl
   1fbe4:	mov	r1, #77	; 0x4d
   1fbe8:	bl	11ea0 <myhtml_is_html_node@plt>
   1fbec:	add	r4, r4, #1
   1fbf0:	cmp	r0, #0
   1fbf4:	beq	1fb80 <myhtml_insertion_mode_in_body@@Base+0x1128>
   1fbf8:	b	1ffa0 <myhtml_insertion_mode_in_body@@Base+0x1548>
   1fbfc:	cmp	r1, #42	; 0x2a
   1fc00:	beq	1fbb0 <myhtml_insertion_mode_in_body@@Base+0x1158>
   1fc04:	b	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fc08:	mov	r0, r5
   1fc0c:	mov	r1, #99	; 0x63
   1fc10:	mov	r2, #1
   1fc14:	mov	r3, #32
   1fc18:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1fc1c:	cmp	r0, #0
   1fc20:	beq	1fc30 <myhtml_insertion_mode_in_body@@Base+0x11d8>
   1fc24:	mov	r0, r5
   1fc28:	mov	r1, r6
   1fc2c:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1fc30:	mov	r0, r5
   1fc34:	bl	11a5c <myhtml_tree_current_node@plt>
   1fc38:	mov	r1, #85	; 0x55
   1fc3c:	bl	11ea0 <myhtml_is_html_node@plt>
   1fc40:	cmp	r0, #0
   1fc44:	beq	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fc48:	mov	r0, r5
   1fc4c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   1fc50:	b	1fce4 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fc54:	mov	r0, r5
   1fc58:	bl	11a5c <myhtml_tree_current_node@plt>
   1fc5c:	mov	r1, #85	; 0x55
   1fc60:	bl	11ea0 <myhtml_is_html_node@plt>
   1fc64:	cmp	r0, #0
   1fc68:	beq	1fcdc <myhtml_insertion_mode_in_body@@Base+0x1284>
   1fc6c:	mov	r0, r5
   1fc70:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   1fc74:	b	1fcdc <myhtml_insertion_mode_in_body@@Base+0x1284>
   1fc78:	mov	r0, r5
   1fc7c:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fc80:	mov	r0, r5
   1fc84:	mov	r1, #90	; 0x5a
   1fc88:	mov	r2, #1
   1fc8c:	mov	r3, #8
   1fc90:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1fc94:	cmp	r0, #0
   1fc98:	beq	1fcb4 <myhtml_insertion_mode_in_body@@Base+0x125c>
   1fc9c:	mov	r0, r5
   1fca0:	mov	r1, r6
   1fca4:	mov	r2, #90	; 0x5a
   1fca8:	bl	11cb4 <myhtml_tree_adoption_agency_algorithm@plt>
   1fcac:	mov	r0, r5
   1fcb0:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fcb4:	mov	r0, r5
   1fcb8:	mov	r1, r6
   1fcbc:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fcc0:	mov	r1, r0
   1fcc4:	mov	r0, r5
   1fcc8:	bl	11c30 <myhtml_tree_active_formatting_append_with_check@plt>
   1fccc:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fcd0:	ldr	r0, [r5, #180]	; 0xb4
   1fcd4:	tst	r0, #1
   1fcd8:	bne	1fcfc <myhtml_insertion_mode_in_body@@Base+0x12a4>
   1fcdc:	mov	r0, r5
   1fce0:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fce4:	mov	r0, r5
   1fce8:	mov	r1, r6
   1fcec:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fcf0:	mov	r0, r8
   1fcf4:	sub	sp, fp, #28
   1fcf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fcfc:	mov	r0, #4
   1fd00:	str	r0, [r5, #164]	; 0xa4
   1fd04:	b	1fe9c <myhtml_insertion_mode_in_body@@Base+0x1444>
   1fd08:	mov	r0, r5
   1fd0c:	mov	r1, #99	; 0x63
   1fd10:	mov	r2, #1
   1fd14:	mov	r3, #32
   1fd18:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1fd1c:	cmp	r0, #0
   1fd20:	beq	1fd30 <myhtml_insertion_mode_in_body@@Base+0x12d8>
   1fd24:	mov	r0, r5
   1fd28:	mov	r1, r6
   1fd2c:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1fd30:	mov	r0, r5
   1fd34:	mov	r1, r6
   1fd38:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fd3c:	mov	r0, #6
   1fd40:	str	r0, [r5, #164]	; 0xa4
   1fd44:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fd48:	mov	r0, r5
   1fd4c:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fd50:	mov	r0, r5
   1fd54:	mov	r1, r6
   1fd58:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fd5c:	ldr	r0, [r5, #168]	; 0xa8
   1fd60:	ldr	r1, [r5, #180]	; 0xb4
   1fd64:	ldr	r2, [r5, #180]	; 0xb4
   1fd68:	and	r1, r1, #2
   1fd6c:	eor	r1, r2, r1
   1fd70:	str	r1, [r5, #180]	; 0xb4
   1fd74:	cmp	r0, #14
   1fd78:	bhi	20020 <myhtml_insertion_mode_in_body@@Base+0x15c8>
   1fd7c:	mov	r1, #1
   1fd80:	mov	r2, #29952	; 0x7500
   1fd84:	tst	r2, r1, lsl r0
   1fd88:	beq	20020 <myhtml_insertion_mode_in_body@@Base+0x15c8>
   1fd8c:	mov	r0, #16
   1fd90:	str	r0, [r5, #168]	; 0xa8
   1fd94:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fd98:	mov	r0, r5
   1fd9c:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fda0:	ldr	r0, [r5, #8]
   1fda4:	mov	r1, r6
   1fda8:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1fdac:	mov	r0, r6
   1fdb0:	bl	11654 <myhtml_token_adjust_svg_attributes@plt>
   1fdb4:	mov	r0, r6
   1fdb8:	bl	11fa8 <myhtml_token_adjust_foreign_attributes@plt>
   1fdbc:	mov	r0, r5
   1fdc0:	mov	r1, r6
   1fdc4:	bl	12140 <myhtml_tree_node_insert_foreign_element@plt>
   1fdc8:	mov	r1, #3
   1fdcc:	b	1fee0 <myhtml_insertion_mode_in_body@@Base+0x1488>
   1fdd0:	ldrb	r0, [r5, #176]	; 0xb0
   1fdd4:	tst	r0, #1
   1fdd8:	bne	1fe04 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1fddc:	mov	r0, r5
   1fde0:	mov	r1, #99	; 0x63
   1fde4:	mov	r2, #1
   1fde8:	mov	r3, #32
   1fdec:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1fdf0:	cmp	r0, #0
   1fdf4:	beq	1fe04 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1fdf8:	mov	r0, r5
   1fdfc:	mov	r1, r6
   1fe00:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1fe04:	mov	r0, r5
   1fe08:	mov	r1, r6
   1fe0c:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fe10:	mov	r0, #8
   1fe14:	str	r0, [r5, #168]	; 0xa8
   1fe18:	b	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1fe1c:	mov	r0, r5
   1fe20:	mov	r1, r6
   1fe24:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   1fe28:	ldr	r0, [r5, #168]	; 0xa8
   1fe2c:	ldr	r1, [r5, #180]	; 0xb4
   1fe30:	orr	r1, r1, #192	; 0xc0
   1fe34:	str	r1, [r5, #180]	; 0xb4
   1fe38:	mov	r1, #2
   1fe3c:	mov	r2, #7
   1fe40:	str	r1, [r5, #164]	; 0xa4
   1fe44:	str	r2, [r5, #168]	; 0xa8
   1fe48:	str	r0, [r5, #172]	; 0xac
   1fe4c:	b	1fa24 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1fe50:	mov	r0, r5
   1fe54:	mov	r1, #99	; 0x63
   1fe58:	mov	r2, #1
   1fe5c:	mov	r3, #32
   1fe60:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   1fe64:	cmp	r0, #0
   1fe68:	beq	1fe78 <myhtml_insertion_mode_in_body@@Base+0x1420>
   1fe6c:	mov	r0, r5
   1fe70:	mov	r1, r6
   1fe74:	bl	11888 <myhtml_tree_tags_close_p@plt>
   1fe78:	mov	r0, r5
   1fe7c:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1fe80:	mov	r0, #4
   1fe84:	str	r0, [r5, #164]	; 0xa4
   1fe88:	ldr	r0, [r5, #180]	; 0xb4
   1fe8c:	ldr	r1, [r5, #180]	; 0xb4
   1fe90:	and	r0, r0, #2
   1fe94:	eor	r0, r1, r0
   1fe98:	str	r0, [r5, #180]	; 0xb4
   1fe9c:	mov	r0, r5
   1fea0:	mov	r1, r6
   1fea4:	bl	122e4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1fea8:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1feac:	mov	r0, r5
   1feb0:	bl	11984 <myhtml_tree_active_formatting_reconstruction@plt>
   1feb4:	ldr	r0, [r5, #8]
   1feb8:	mov	r1, r6
   1febc:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   1fec0:	mov	r0, r6
   1fec4:	bl	11408 <myhtml_token_adjust_mathml_attributes@plt>
   1fec8:	mov	r0, r6
   1fecc:	bl	11fa8 <myhtml_token_adjust_foreign_attributes@plt>
   1fed0:	mov	r0, r5
   1fed4:	mov	r1, r6
   1fed8:	bl	12140 <myhtml_tree_node_insert_foreign_element@plt>
   1fedc:	mov	r1, #2
   1fee0:	str	r1, [r0, #8]
   1fee4:	ldr	r0, [r6, #48]	; 0x30
   1fee8:	tst	r0, #2
   1feec:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fef0:	mov	r0, r5
   1fef4:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   1fef8:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1fefc:	ldr	r0, [r5, #140]	; 0x8c
   1ff00:	ldr	r0, [r0, #4]
   1ff04:	cmp	r0, #0
   1ff08:	beq	1ffcc <myhtml_insertion_mode_in_body@@Base+0x1574>
   1ff0c:	mov	r0, r5
   1ff10:	mov	r1, r6
   1ff14:	sub	sp, fp, #28
   1ff18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff1c:	b	20ba4 <myhtml_insertion_mode_in_template@@Base>
   1ff20:	mov	r0, r5
   1ff24:	mov	r1, #36	; 0x24
   1ff28:	mov	r2, #1
   1ff2c:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1ff30:	mov	r0, r5
   1ff34:	bl	11a5c <myhtml_tree_current_node@plt>
   1ff38:	mov	r1, #36	; 0x24
   1ff3c:	bl	11ea0 <myhtml_is_html_node@plt>
   1ff40:	mov	r0, r5
   1ff44:	mov	r1, #36	; 0x24
   1ff48:	b	20010 <myhtml_insertion_mode_in_body@@Base+0x15b8>
   1ff4c:	ldr	r4, [r5, #104]	; 0x68
   1ff50:	mov	r8, #0
   1ff54:	str	r8, [r5, #104]	; 0x68
   1ff58:	cmp	r4, #0
   1ff5c:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1ff60:	mov	r0, r4
   1ff64:	mov	r1, #8
   1ff68:	bl	11120 <myhtml_tree_element_in_scope_by_node@plt>
   1ff6c:	cmp	r0, #0
   1ff70:	beq	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1ff74:	mov	r8, #0
   1ff78:	mov	r0, r5
   1ff7c:	mov	r1, #0
   1ff80:	mov	r2, #0
   1ff84:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1ff88:	mov	r0, r5
   1ff8c:	bl	11a5c <myhtml_tree_current_node@plt>
   1ff90:	mov	r0, r5
   1ff94:	mov	r1, r4
   1ff98:	bl	116a8 <myhtml_tree_open_elements_remove@plt>
   1ff9c:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1ffa0:	mov	r0, r5
   1ffa4:	mov	r1, #77	; 0x4d
   1ffa8:	mov	r2, #1
   1ffac:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1ffb0:	mov	r0, r5
   1ffb4:	bl	11a5c <myhtml_tree_current_node@plt>
   1ffb8:	mov	r1, #77	; 0x4d
   1ffbc:	bl	11ea0 <myhtml_is_html_node@plt>
   1ffc0:	mov	r0, r5
   1ffc4:	mov	r1, #77	; 0x4d
   1ffc8:	b	20010 <myhtml_insertion_mode_in_body@@Base+0x15b8>
   1ffcc:	ldr	r0, [r5, #128]	; 0x80
   1ffd0:	mvn	r1, #0
   1ffd4:	add	r1, r1, #1
   1ffd8:	ldr	r2, [r0, #4]
   1ffdc:	cmp	r1, r2
   1ffe0:	bcc	1ffd4 <myhtml_insertion_mode_in_body@@Base+0x157c>
   1ffe4:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   1ffe8:	mov	r0, r5
   1ffec:	mov	r1, #44	; 0x2c
   1fff0:	mov	r2, #1
   1fff4:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   1fff8:	mov	r0, r5
   1fffc:	bl	11a5c <myhtml_tree_current_node@plt>
   20000:	mov	r1, #44	; 0x2c
   20004:	bl	11ea0 <myhtml_is_html_node@plt>
   20008:	mov	r0, r5
   2000c:	mov	r1, #44	; 0x2c
   20010:	mov	r2, #1
   20014:	mov	r3, #0
   20018:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   2001c:	b	1ee84 <myhtml_insertion_mode_in_body@@Base+0x42c>
   20020:	mov	r0, #15
   20024:	str	r0, [r5, #168]	; 0xa8
   20028:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   2002c:	str	r6, [r4, #32]
   20030:	b	1fcf0 <myhtml_insertion_mode_in_body@@Base+0x1298>
   20034:	ldrdeq	ip, [sp], -fp
   20038:	andeq	r9, r1, r7, ror #24

0002003c <myhtml_insertion_mode_in_head@@Base>:
   2003c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20040:	add	fp, sp, #24
   20044:	sub	sp, sp, #8
   20048:	mov	r6, r1
   2004c:	mov	r5, r0
   20050:	ldr	r0, [r1]
   20054:	ldr	r1, [r1, #48]	; 0x30
   20058:	tst	r1, #1
   2005c:	bne	202ac <myhtml_insertion_mode_in_head@@Base+0x270>
   20060:	sub	r0, r0, #1
   20064:	cmp	r0, #133	; 0x85
   20068:	bhi	2039c <myhtml_insertion_mode_in_head@@Base+0x360>
   2006c:	mov	r4, #0
   20070:	add	r1, pc, #4
   20074:	ldr	r0, [r1, r0, lsl #2]
   20078:	add	pc, r1, r0
   2007c:	strdeq	r0, [r0], -r4
   20080:	andeq	r0, r0, r8, lsr r3
   20084:	andeq	r0, r0, r4, asr r4
   20088:	andeq	r0, r0, r0, lsr #6
   2008c:	andeq	r0, r0, r0, lsr #6
   20090:	andeq	r0, r0, r0, lsr #6
   20094:	andeq	r0, r0, r0, lsr #6
   20098:	andeq	r0, r0, r0, lsr #6
   2009c:	andeq	r0, r0, r0, lsr #6
   200a0:	andeq	r0, r0, r0, lsr #6
   200a4:	andeq	r0, r0, r0, lsr #6
   200a8:	andeq	r0, r0, r0, lsr #6
   200ac:	andeq	r0, r0, r0, lsr #6
   200b0:	andeq	r0, r0, r0, lsr #6
   200b4:	andeq	r0, r0, r8, lsl r2
   200b8:	andeq	r0, r0, r8, lsl r2
   200bc:	andeq	r0, r0, r0, lsr #6
   200c0:	andeq	r0, r0, r0, lsr #6
   200c4:	andeq	r0, r0, r8, lsl r2
   200c8:	andeq	r0, r0, r0, lsr #6
   200cc:	andeq	r0, r0, r0, lsr #6
   200d0:	andeq	r0, r0, r0, lsr #6
   200d4:	andeq	r0, r0, r0, lsr #6
   200d8:	andeq	r0, r0, r0, lsr #6
   200dc:	andeq	r0, r0, r0, lsr #6
   200e0:	andeq	r0, r0, r0, lsr #6
   200e4:	andeq	r0, r0, r0, lsr #6
   200e8:	andeq	r0, r0, r0, lsr #6
   200ec:	andeq	r0, r0, r0, lsr #6
   200f0:	andeq	r0, r0, r0, lsr #6
   200f4:	andeq	r0, r0, r0, lsr #6
   200f8:	andeq	r0, r0, r0, lsr #6
   200fc:	andeq	r0, r0, r0, lsr #6
   20100:	andeq	r0, r0, r0, lsr #6
   20104:	andeq	r0, r0, r0, lsr #6
   20108:	andeq	r0, r0, r0, lsr #6
   2010c:	andeq	r0, r0, r0, lsr #6
   20110:	andeq	r0, r0, r0, lsr #6
   20114:	andeq	r0, r0, r0, lsr #6
   20118:	andeq	r0, r0, r0, lsr #6
   2011c:	andeq	r0, r0, r0, lsr #6
   20120:	andeq	r0, r0, r0, lsr #6
   20124:	andeq	r0, r0, r0, lsr #6
   20128:	andeq	r0, r0, r0, lsr #6
   2012c:	andeq	r0, r0, r0, lsr #6
   20130:	andeq	r0, r0, r0, lsr #6
   20134:	andeq	r0, r0, r0, lsr #6
   20138:	andeq	r0, r0, r0, lsr #6
   2013c:	andeq	r0, r0, r0, lsr #6
   20140:	andeq	r0, r0, r0, lsr #6
   20144:	andeq	r0, r0, r0, lsr #6
   20148:	andeq	r0, r0, r0, lsr #6
   2014c:	andeq	r0, r0, r0, lsr #6
   20150:	andeq	r0, r0, r0, lsr #6
   20154:	andeq	r0, r0, r0, lsr #6
   20158:	andeq	r0, r0, r0, lsr #6
   2015c:	andeq	r0, r0, r0, lsr #6
   20160:	andeq	r0, r0, r0, lsr #6
   20164:	andeq	r0, r0, r0, lsr #6
   20168:	andeq	r0, r0, r0, lsr #6
   2016c:	andeq	r0, r0, r4, asr r4
   20170:	andeq	r0, r0, r0, lsr #6
   20174:	andeq	r0, r0, r0, lsr #6
   20178:	andeq	r0, r0, r0, lsr #6
   2017c:	andeq	r0, r0, r0, asr r3
   20180:	andeq	r0, r0, r0, lsr #6
   20184:	andeq	r0, r0, r0, lsr #6
   20188:	andeq	r0, r0, r0, lsr #6
   2018c:	andeq	r0, r0, r0, lsr #6
   20190:	andeq	r0, r0, r0, lsr #6
   20194:	andeq	r0, r0, r0, lsr #6
   20198:	andeq	r0, r0, r0, lsr #6
   2019c:	andeq	r0, r0, r0, lsr #6
   201a0:	andeq	r0, r0, r0, lsr #6
   201a4:	andeq	r0, r0, r0, lsr #6
   201a8:	andeq	r0, r0, r0, lsr #6
   201ac:	andeq	r0, r0, r0, lsr #6
   201b0:	andeq	r0, r0, r8, lsl r2
   201b4:	andeq	r0, r0, r0, lsr #6
   201b8:	andeq	r0, r0, r0, lsr #6
   201bc:	andeq	r0, r0, r0, lsr #6
   201c0:	andeq	r0, r0, r0, lsr #6
   201c4:	andeq	r0, r0, r0, lsr #6
   201c8:	andeq	r0, r0, r0, lsr #6
   201cc:	andeq	r0, r0, r0, lsr #6
   201d0:	andeq	r0, r0, r8, lsl r2
   201d4:	andeq	r0, r0, r0, lsr #6
   201d8:	andeq	r0, r0, r0, lsr #6
   201dc:	andeq	r0, r0, r0, lsr #6
   201e0:	andeq	r0, r0, r0, lsr #6
   201e4:	andeq	r0, r0, r0, lsr #6
   201e8:	andeq	r0, r0, r0, ror #5
   201ec:	andeq	r0, r0, r4, ror #6
   201f0:	andeq	r0, r0, r0, lsr #6
   201f4:	andeq	r0, r0, r0, lsr #6
   201f8:	andeq	r0, r0, r0, lsr #6
   201fc:	andeq	r0, r0, r0, lsr #6
   20200:	andeq	r0, r0, r0, lsr #6
   20204:	andeq	r0, r0, r0, lsr #6
   20208:	andeq	r0, r0, r0, lsr #6
   2020c:	andeq	r0, r0, r0, lsr #6
   20210:	andeq	r0, r0, r0, lsr #6
   20214:	andeq	r0, r0, r0, lsr #6
   20218:	andeq	r0, r0, r0, lsr #6
   2021c:	andeq	r0, r0, r0, lsr #6
   20220:	andeq	r0, r0, r0, lsr #6
   20224:	andeq	r0, r0, r0, lsr #6
   20228:	andeq	r0, r0, r0, lsr #6
   2022c:	andeq	r0, r0, r0, lsr #6
   20230:	andeq	r0, r0, r0, lsr #6
   20234:	andeq	r0, r0, r0, lsr #6
   20238:	andeq	r0, r0, r8, lsl #7
   2023c:	andeq	r0, r0, r0, lsr #6
   20240:	andeq	r0, r0, r0, lsr #6
   20244:	andeq	r0, r0, r0, lsr #6
   20248:	andeq	r0, r0, r0, lsr #6
   2024c:	andeq	r0, r0, r0, lsr #6
   20250:	andeq	r0, r0, r0, lsr #6
   20254:	andeq	r0, r0, r0, lsr #6
   20258:	andeq	r0, r0, r0, ror #5
   2025c:	andeq	r0, r0, r0, lsr #6
   20260:	andeq	r0, r0, r0, lsr #6
   20264:	andeq	r0, r0, r0, lsr #6
   20268:	andeq	r0, r0, r0, lsr #6
   2026c:	andeq	r0, r0, r0, lsr #6
   20270:	andeq	r0, r0, r0, lsr #6
   20274:	andeq	r0, r0, r0, lsr #6
   20278:	andeq	r0, r0, r8, ror #7
   2027c:	andeq	r0, r0, r0, lsr #6
   20280:	andeq	r0, r0, r0, lsr #6
   20284:	andeq	r0, r0, r0, lsr #6
   20288:	andeq	r0, r0, r0, lsr #6
   2028c:	andeq	r0, r0, r0, lsr #6
   20290:	andeq	r0, r0, r0, lsr r4
   20294:	mov	r0, r5
   20298:	mov	r1, r6
   2029c:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   202a0:	mov	r0, r5
   202a4:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   202a8:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   202ac:	mov	r4, #0
   202b0:	cmp	r0, #64	; 0x40
   202b4:	bgt	202e0 <myhtml_insertion_mode_in_head@@Base+0x2a4>
   202b8:	sub	r1, r0, #23
   202bc:	cmp	r1, #2
   202c0:	bcc	2039c <myhtml_insertion_mode_in_head@@Base+0x360>
   202c4:	cmp	r0, #61	; 0x3d
   202c8:	bne	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   202cc:	mov	r0, r5
   202d0:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   202d4:	mov	r0, #5
   202d8:	str	r0, [r5, #168]	; 0xa8
   202dc:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   202e0:	cmp	r0, #65	; 0x41
   202e4:	beq	2039c <myhtml_insertion_mode_in_head@@Base+0x360>
   202e8:	cmp	r0, #128	; 0x80
   202ec:	bne	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   202f0:	mov	r4, #0
   202f4:	mov	r0, r5
   202f8:	mov	r1, #128	; 0x80
   202fc:	mov	r2, #1
   20300:	mov	r3, #0
   20304:	bl	11180 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   20308:	cmp	r0, #0
   2030c:	beq	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   20310:	mov	r4, #0
   20314:	mov	r0, r5
   20318:	mov	r1, #0
   2031c:	mov	r2, #0
   20320:	bl	112dc <myhtml_tree_generate_all_implied_end_tags@plt>
   20324:	mov	r0, r5
   20328:	bl	11a5c <myhtml_tree_current_node@plt>
   2032c:	mov	r0, r5
   20330:	mov	r1, #128	; 0x80
   20334:	mov	r2, #1
   20338:	mov	r3, #0
   2033c:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   20340:	mov	r0, r5
   20344:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20348:	mov	r0, r5
   2034c:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20350:	mov	r0, r5
   20354:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20358:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   2035c:	mov	r0, r5
   20360:	mov	r1, r6
   20364:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   20368:	mov	r0, #4
   2036c:	b	204bc <myhtml_insertion_mode_in_head@@Base+0x480>
   20370:	ldr	r0, [r6, #48]	; 0x30
   20374:	tst	r0, #8
   20378:	bne	204dc <myhtml_insertion_mode_in_head@@Base+0x4a0>
   2037c:	mov	r0, r5
   20380:	mov	r1, r6
   20384:	bl	11384 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   20388:	cmp	r0, #0
   2038c:	beq	2039c <myhtml_insertion_mode_in_head@@Base+0x360>
   20390:	mov	r1, r0
   20394:	mov	r0, r5
   20398:	bl	11420 <myhtml_tree_node_insert_text@plt>
   2039c:	mov	r0, r5
   203a0:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   203a4:	mov	r0, #5
   203a8:	str	r0, [r5, #168]	; 0xa8
   203ac:	mov	r4, #1
   203b0:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   203b4:	mov	r4, #0
   203b8:	mov	r0, r5
   203bc:	mov	r1, r6
   203c0:	mov	r2, #0
   203c4:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   203c8:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   203cc:	mov	r0, r5
   203d0:	mov	r1, r6
   203d4:	sub	sp, fp, #24
   203d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   203dc:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   203e0:	ldr	r7, [r5, #180]	; 0xb4
   203e4:	mov	r0, r5
   203e8:	mov	r1, r6
   203ec:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   203f0:	tst	r7, #1
   203f4:	bne	20368 <myhtml_insertion_mode_in_head@@Base+0x32c>
   203f8:	mov	r0, #4
   203fc:	str	r0, [r5, #168]	; 0xa8
   20400:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   20404:	mov	r4, #0
   20408:	add	r2, sp, #4
   2040c:	mov	r0, r5
   20410:	mov	r1, #0
   20414:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   20418:	mov	r8, r0
   2041c:	mov	r0, r5
   20420:	bl	11474 <myhtml_tree_node_create@plt>
   20424:	mov	r7, r0
   20428:	mov	r0, #112	; 0x70
   2042c:	str	r6, [r7, #32]
   20430:	mov	r1, #1
   20434:	mov	r2, #3
   20438:	str	r2, [r7]
   2043c:	stmib	r7, {r0, r1}
   20440:	ldr	r2, [sp, #4]
   20444:	mov	r0, r8
   20448:	mov	r1, r7
   2044c:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   20450:	mov	r0, r5
   20454:	mov	r1, r7
   20458:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2045c:	mov	r0, #5
   20460:	b	204bc <myhtml_insertion_mode_in_head@@Base+0x480>
   20464:	mov	r0, r5
   20468:	mov	r1, r6
   2046c:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   20470:	ldr	r0, [r5]
   20474:	ldr	r1, [r0, #36]	; 0x24
   20478:	mov	r0, r5
   2047c:	bl	11558 <myhtml_tree_active_formatting_append@plt>
   20480:	mov	r0, #17
   20484:	str	r0, [r5, #168]	; 0xa8
   20488:	ldr	r0, [r5, #180]	; 0xb4
   2048c:	ldr	r1, [r5, #180]	; 0xb4
   20490:	and	r0, r0, #2
   20494:	eor	r0, r1, r0
   20498:	str	r0, [r5, #180]	; 0xb4
   2049c:	mov	r0, r5
   204a0:	mov	r1, #17
   204a4:	bl	11444 <myhtml_tree_template_insertion_append@plt>
   204a8:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>
   204ac:	mov	r0, r5
   204b0:	mov	r1, r6
   204b4:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   204b8:	mov	r0, #2
   204bc:	str	r0, [r5, #164]	; 0xa4
   204c0:	ldr	r0, [r5, #168]	; 0xa8
   204c4:	mov	r1, #7
   204c8:	str	r1, [r5, #168]	; 0xa8
   204cc:	str	r0, [r5, #172]	; 0xac
   204d0:	mov	r0, r4
   204d4:	sub	sp, fp, #24
   204d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   204dc:	mov	r0, r5
   204e0:	mov	r1, r6
   204e4:	bl	11420 <myhtml_tree_node_insert_text@plt>
   204e8:	b	204d0 <myhtml_insertion_mode_in_head@@Base+0x494>

000204ec <myhtml_insertion_mode_in_head_noscript@@Base>:
   204ec:	push	{r4, r5, fp, lr}
   204f0:	add	fp, sp, #8
   204f4:	mov	r4, r0
   204f8:	ldr	r0, [r1]
   204fc:	ldr	r2, [r1, #48]	; 0x30
   20500:	tst	r2, #1
   20504:	bne	20710 <myhtml_insertion_mode_in_head_noscript@@Base+0x224>
   20508:	sub	r0, r0, #1
   2050c:	cmp	r0, #119	; 0x77
   20510:	bhi	20748 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   20514:	mov	r5, #0
   20518:	add	r2, pc, #4
   2051c:	ldr	r0, [r2, r0, lsl #2]
   20520:	add	pc, r2, r0
   20524:	andeq	r0, r0, r8, lsl r2
   20528:	andeq	r0, r0, r0, ror #3
   2052c:	andeq	r0, r0, r8, lsr r2
   20530:	andeq	r0, r0, r4, lsr #4
   20534:	andeq	r0, r0, r4, lsr #4
   20538:	andeq	r0, r0, r4, lsr #4
   2053c:	andeq	r0, r0, r4, lsr #4
   20540:	andeq	r0, r0, r4, lsr #4
   20544:	andeq	r0, r0, r4, lsr #4
   20548:	andeq	r0, r0, r4, lsr #4
   2054c:	andeq	r0, r0, r4, lsr #4
   20550:	andeq	r0, r0, r4, lsr #4
   20554:	andeq	r0, r0, r4, lsr #4
   20558:	andeq	r0, r0, r4, lsr #4
   2055c:	andeq	r0, r0, r4, lsr #4
   20560:	andeq	r0, r0, r0, ror #3
   20564:	andeq	r0, r0, r4, lsr #4
   20568:	andeq	r0, r0, r4, lsr #4
   2056c:	andeq	r0, r0, r0, ror #3
   20570:	andeq	r0, r0, r4, lsr #4
   20574:	andeq	r0, r0, r4, lsr #4
   20578:	andeq	r0, r0, r4, lsr #4
   2057c:	andeq	r0, r0, r4, lsr #4
   20580:	andeq	r0, r0, r4, lsr #4
   20584:	andeq	r0, r0, r4, lsr #4
   20588:	andeq	r0, r0, r4, lsr #4
   2058c:	andeq	r0, r0, r4, lsr #4
   20590:	andeq	r0, r0, r4, lsr #4
   20594:	andeq	r0, r0, r4, lsr #4
   20598:	andeq	r0, r0, r4, lsr #4
   2059c:	andeq	r0, r0, r4, lsr #4
   205a0:	andeq	r0, r0, r4, lsr #4
   205a4:	andeq	r0, r0, r4, lsr #4
   205a8:	andeq	r0, r0, r4, lsr #4
   205ac:	andeq	r0, r0, r4, lsr #4
   205b0:	andeq	r0, r0, r4, lsr #4
   205b4:	andeq	r0, r0, r4, lsr #4
   205b8:	andeq	r0, r0, r4, lsr #4
   205bc:	andeq	r0, r0, r4, lsr #4
   205c0:	andeq	r0, r0, r4, lsr #4
   205c4:	andeq	r0, r0, r4, lsr #4
   205c8:	andeq	r0, r0, r4, lsr #4
   205cc:	andeq	r0, r0, r4, lsr #4
   205d0:	andeq	r0, r0, r4, lsr #4
   205d4:	andeq	r0, r0, r4, lsr #4
   205d8:	andeq	r0, r0, r4, lsr #4
   205dc:	andeq	r0, r0, r4, lsr #4
   205e0:	andeq	r0, r0, r4, lsr #4
   205e4:	andeq	r0, r0, r4, lsr #4
   205e8:	andeq	r0, r0, r4, lsr #4
   205ec:	andeq	r0, r0, r4, lsr #4
   205f0:	andeq	r0, r0, r4, lsr #4
   205f4:	andeq	r0, r0, r4, lsr #4
   205f8:	andeq	r0, r0, r4, lsr #4
   205fc:	andeq	r0, r0, r4, lsr #4
   20600:	andeq	r0, r0, r4, lsr #4
   20604:	andeq	r0, r0, r4, lsr #4
   20608:	andeq	r0, r0, r4, lsr #4
   2060c:	andeq	r0, r0, r4, lsr #4
   20610:	andeq	r0, r0, r4, lsr #4
   20614:	andeq	r0, r0, r8, lsr r2
   20618:	andeq	r0, r0, r4, lsr #4
   2061c:	andeq	r0, r0, r4, lsr #4
   20620:	andeq	r0, r0, r4, lsr #4
   20624:	andeq	r0, r0, r0, asr #4
   20628:	andeq	r0, r0, r4, lsr #4
   2062c:	andeq	r0, r0, r4, lsr #4
   20630:	andeq	r0, r0, r4, lsr #4
   20634:	andeq	r0, r0, r4, lsr #4
   20638:	andeq	r0, r0, r4, lsr #4
   2063c:	andeq	r0, r0, r4, lsr #4
   20640:	andeq	r0, r0, r4, lsr #4
   20644:	andeq	r0, r0, r4, lsr #4
   20648:	andeq	r0, r0, r4, lsr #4
   2064c:	andeq	r0, r0, r4, lsr #4
   20650:	andeq	r0, r0, r4, lsr #4
   20654:	andeq	r0, r0, r4, lsr #4
   20658:	andeq	r0, r0, r0, ror #3
   2065c:	andeq	r0, r0, r4, lsr #4
   20660:	andeq	r0, r0, r4, lsr #4
   20664:	andeq	r0, r0, r4, lsr #4
   20668:	andeq	r0, r0, r4, lsr #4
   2066c:	andeq	r0, r0, r4, lsr #4
   20670:	andeq	r0, r0, r4, lsr #4
   20674:	andeq	r0, r0, r4, lsr #4
   20678:	andeq	r0, r0, r0, ror #3
   2067c:	andeq	r0, r0, r4, lsr #4
   20680:	andeq	r0, r0, r4, lsr #4
   20684:	andeq	r0, r0, r4, lsr #4
   20688:	andeq	r0, r0, r4, lsr #4
   2068c:	andeq	r0, r0, r4, lsr #4
   20690:	andeq	r0, r0, r0, ror #3
   20694:	andeq	r0, r0, r8, lsr r2
   20698:	andeq	r0, r0, r4, lsr #4
   2069c:	andeq	r0, r0, r4, lsr #4
   206a0:	andeq	r0, r0, r4, lsr #4
   206a4:	andeq	r0, r0, r4, lsr #4
   206a8:	andeq	r0, r0, r4, lsr #4
   206ac:	andeq	r0, r0, r4, lsr #4
   206b0:	andeq	r0, r0, r4, lsr #4
   206b4:	andeq	r0, r0, r4, lsr #4
   206b8:	andeq	r0, r0, r4, lsr #4
   206bc:	andeq	r0, r0, r4, lsr #4
   206c0:	andeq	r0, r0, r4, lsr #4
   206c4:	andeq	r0, r0, r4, lsr #4
   206c8:	andeq	r0, r0, r4, lsr #4
   206cc:	andeq	r0, r0, r4, lsr #4
   206d0:	andeq	r0, r0, r4, lsr #4
   206d4:	andeq	r0, r0, r4, lsr #4
   206d8:	andeq	r0, r0, r4, lsr #4
   206dc:	andeq	r0, r0, r4, lsr #4
   206e0:	andeq	r0, r0, r4, lsr #4
   206e4:	andeq	r0, r0, r4, lsr #4
   206e8:	andeq	r0, r0, r4, lsr #4
   206ec:	andeq	r0, r0, r4, lsr #4
   206f0:	andeq	r0, r0, r4, lsr #4
   206f4:	andeq	r0, r0, r4, lsr #4
   206f8:	andeq	r0, r0, r4, lsr #4
   206fc:	andeq	r0, r0, r4, lsr #4
   20700:	andeq	r0, r0, r0, ror #3
   20704:	mov	r0, r4
   20708:	pop	{r4, r5, fp, lr}
   2070c:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   20710:	cmp	r0, #24
   20714:	beq	20748 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   20718:	mov	r5, #0
   2071c:	cmp	r0, #93	; 0x5d
   20720:	bne	2075c <myhtml_insertion_mode_in_head_noscript@@Base+0x270>
   20724:	mov	r0, r4
   20728:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2072c:	mov	r0, #3
   20730:	str	r0, [r4, #168]	; 0xa8
   20734:	mov	r0, r5
   20738:	pop	{r4, r5, fp, pc}
   2073c:	ldr	r0, [r1, #48]	; 0x30
   20740:	tst	r0, #8
   20744:	bne	20704 <myhtml_insertion_mode_in_head_noscript@@Base+0x218>
   20748:	mov	r0, r4
   2074c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   20750:	mov	r0, #3
   20754:	str	r0, [r4, #168]	; 0xa8
   20758:	mov	r5, #1
   2075c:	mov	r0, r5
   20760:	pop	{r4, r5, fp, pc}
   20764:	mov	r0, r4
   20768:	pop	{r4, r5, fp, lr}
   2076c:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>

00020770 <myhtml_insertion_mode_after_head@@Base>:
   20770:	push	{r4, r5, r6, sl, fp, lr}
   20774:	add	fp, sp, #16
   20778:	mov	r6, r1
   2077c:	mov	r4, r0
   20780:	ldr	r0, [r1]
   20784:	ldr	r1, [r1, #48]	; 0x30
   20788:	tst	r1, #1
   2078c:	bne	209ec <myhtml_insertion_mode_after_head@@Base+0x27c>
   20790:	sub	r0, r0, #1
   20794:	cmp	r0, #133	; 0x85
   20798:	bhi	20a0c <myhtml_insertion_mode_after_head@@Base+0x29c>
   2079c:	mov	r5, #0
   207a0:	add	r1, pc, #4
   207a4:	ldr	r0, [r1, r0, lsl #2]
   207a8:	add	pc, r1, r0
   207ac:	andeq	r0, r0, r0, lsr #5
   207b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   207b4:	andeq	r0, r0, r8, lsl #5
   207b8:	andeq	r0, r0, r0, ror #4
   207bc:	andeq	r0, r0, r0, ror #4
   207c0:	andeq	r0, r0, r0, ror #4
   207c4:	andeq	r0, r0, r0, ror #4
   207c8:	andeq	r0, r0, r0, ror #4
   207cc:	andeq	r0, r0, r0, ror #4
   207d0:	andeq	r0, r0, r0, ror #4
   207d4:	andeq	r0, r0, r0, ror #4
   207d8:	andeq	r0, r0, r0, ror #4
   207dc:	andeq	r0, r0, r0, ror #4
   207e0:	andeq	r0, r0, r0, ror #4
   207e4:	andeq	r0, r0, r8, lsl r2
   207e8:	andeq	r0, r0, r8, lsl r2
   207ec:	andeq	r0, r0, r0, ror #4
   207f0:	andeq	r0, r0, r0, ror #4
   207f4:	andeq	r0, r0, r8, lsl r2
   207f8:	andeq	r0, r0, r0, ror #4
   207fc:	andeq	r0, r0, r0, ror #4
   20800:	andeq	r0, r0, r0, ror #4
   20804:	andeq	r0, r0, ip, ror #5
   20808:	andeq	r0, r0, r0, ror #4
   2080c:	andeq	r0, r0, r0, ror #4
   20810:	andeq	r0, r0, r0, ror #4
   20814:	andeq	r0, r0, r0, ror #4
   20818:	andeq	r0, r0, r0, ror #4
   2081c:	andeq	r0, r0, r0, ror #4
   20820:	andeq	r0, r0, r0, ror #4
   20824:	andeq	r0, r0, r0, ror #4
   20828:	andeq	r0, r0, r0, ror #4
   2082c:	andeq	r0, r0, r0, ror #4
   20830:	andeq	r0, r0, r0, ror #4
   20834:	andeq	r0, r0, r0, ror #4
   20838:	andeq	r0, r0, r0, ror #4
   2083c:	andeq	r0, r0, r0, ror #4
   20840:	andeq	r0, r0, r0, ror #4
   20844:	andeq	r0, r0, r0, ror #4
   20848:	andeq	r0, r0, r0, ror #4
   2084c:	andeq	r0, r0, r0, ror #4
   20850:	andeq	r0, r0, r0, ror #4
   20854:	andeq	r0, r0, r0, ror #4
   20858:	andeq	r0, r0, r0, ror #4
   2085c:	andeq	r0, r0, r0, ror #4
   20860:	andeq	r0, r0, r0, ror #4
   20864:	andeq	r0, r0, r0, ror #4
   20868:	andeq	r0, r0, r0, ror #4
   2086c:	andeq	r0, r0, r0, ror #4
   20870:	andeq	r0, r0, r0, ror #4
   20874:	andeq	r0, r0, r0, ror #4
   20878:	andeq	r0, r0, r0, ror #4
   2087c:	andeq	r0, r0, r0, ror #4
   20880:	andeq	r0, r0, r0, lsr #6
   20884:	andeq	r0, r0, r0, ror #4
   20888:	andeq	r0, r0, r0, ror #4
   2088c:	andeq	r0, r0, r0, ror #4
   20890:	andeq	r0, r0, r0, ror #4
   20894:	andeq	r0, r0, r0, ror #4
   20898:	andeq	r0, r0, r0, ror #4
   2089c:	andeq	r0, r0, r8, lsl #5
   208a0:	andeq	r0, r0, r0, ror #4
   208a4:	andeq	r0, r0, r0, ror #4
   208a8:	andeq	r0, r0, r0, ror #4
   208ac:	andeq	r0, r0, r4, lsr r3
   208b0:	andeq	r0, r0, r0, ror #4
   208b4:	andeq	r0, r0, r0, ror #4
   208b8:	andeq	r0, r0, r0, ror #4
   208bc:	andeq	r0, r0, r0, ror #4
   208c0:	andeq	r0, r0, r0, ror #4
   208c4:	andeq	r0, r0, r0, ror #4
   208c8:	andeq	r0, r0, r0, ror #4
   208cc:	andeq	r0, r0, r0, ror #4
   208d0:	andeq	r0, r0, r0, ror #4
   208d4:	andeq	r0, r0, r0, ror #4
   208d8:	andeq	r0, r0, r0, ror #4
   208dc:	andeq	r0, r0, r0, ror #4
   208e0:	andeq	r0, r0, r8, lsl r2
   208e4:	andeq	r0, r0, r0, ror #4
   208e8:	andeq	r0, r0, r0, ror #4
   208ec:	andeq	r0, r0, r0, ror #4
   208f0:	andeq	r0, r0, r0, ror #4
   208f4:	andeq	r0, r0, r0, ror #4
   208f8:	andeq	r0, r0, r0, ror #4
   208fc:	andeq	r0, r0, r0, ror #4
   20900:	andeq	r0, r0, r8, lsl r2
   20904:	andeq	r0, r0, r0, ror #4
   20908:	andeq	r0, r0, r0, ror #4
   2090c:	andeq	r0, r0, r0, ror #4
   20910:	andeq	r0, r0, r0, ror #4
   20914:	andeq	r0, r0, r0, ror #4
   20918:	andeq	r0, r0, r8, lsl r2
   2091c:	andeq	r0, r0, r0, ror #4
   20920:	andeq	r0, r0, r0, ror #4
   20924:	andeq	r0, r0, r0, ror #4
   20928:	andeq	r0, r0, r0, ror #4
   2092c:	andeq	r0, r0, r0, ror #4
   20930:	andeq	r0, r0, r0, ror #4
   20934:	andeq	r0, r0, r0, ror #4
   20938:	andeq	r0, r0, r0, ror #4
   2093c:	andeq	r0, r0, r0, ror #4
   20940:	andeq	r0, r0, r0, ror #4
   20944:	andeq	r0, r0, r0, ror #4
   20948:	andeq	r0, r0, r0, ror #4
   2094c:	andeq	r0, r0, r0, ror #4
   20950:	andeq	r0, r0, r0, ror #4
   20954:	andeq	r0, r0, r0, ror #4
   20958:	andeq	r0, r0, r0, ror #4
   2095c:	andeq	r0, r0, r0, ror #4
   20960:	andeq	r0, r0, r0, ror #4
   20964:	andeq	r0, r0, r0, ror #4
   20968:	andeq	r0, r0, r8, lsl r2
   2096c:	andeq	r0, r0, r0, ror #4
   20970:	andeq	r0, r0, r0, ror #4
   20974:	andeq	r0, r0, r0, ror #4
   20978:	andeq	r0, r0, r0, ror #4
   2097c:	andeq	r0, r0, r0, ror #4
   20980:	andeq	r0, r0, r0, ror #4
   20984:	andeq	r0, r0, r0, ror #4
   20988:	andeq	r0, r0, r8, lsl r2
   2098c:	andeq	r0, r0, r0, ror #4
   20990:	andeq	r0, r0, r0, ror #4
   20994:	andeq	r0, r0, r0, ror #4
   20998:	andeq	r0, r0, r0, ror #4
   2099c:	andeq	r0, r0, r0, ror #4
   209a0:	andeq	r0, r0, r0, ror #4
   209a4:	andeq	r0, r0, r0, ror #4
   209a8:	andeq	r0, r0, r8, lsl r2
   209ac:	andeq	r0, r0, r0, ror #4
   209b0:	andeq	r0, r0, r0, ror #4
   209b4:	andeq	r0, r0, r0, ror #4
   209b8:	andeq	r0, r0, r0, ror #4
   209bc:	andeq	r0, r0, r0, ror #4
   209c0:	andeq	r0, r0, r8, lsl r2
   209c4:	ldr	r1, [r4, #92]	; 0x5c
   209c8:	mov	r0, r4
   209cc:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   209d0:	mov	r0, r4
   209d4:	mov	r1, r6
   209d8:	bl	114ec <myhtml_insertion_mode_in_head@plt>
   209dc:	ldr	r1, [r4, #92]	; 0x5c
   209e0:	mov	r0, r4
   209e4:	bl	116a8 <myhtml_tree_open_elements_remove@plt>
   209e8:	b	20a34 <myhtml_insertion_mode_after_head@@Base+0x2c4>
   209ec:	sub	r1, r0, #23
   209f0:	cmp	r1, #2
   209f4:	bcc	20a0c <myhtml_insertion_mode_after_head@@Base+0x29c>
   209f8:	cmp	r0, #128	; 0x80
   209fc:	beq	20a3c <myhtml_insertion_mode_after_head@@Base+0x2cc>
   20a00:	mov	r5, #0
   20a04:	cmp	r0, #65	; 0x41
   20a08:	bne	20a34 <myhtml_insertion_mode_after_head@@Base+0x2c4>
   20a0c:	mov	r5, #1
   20a10:	mov	r0, r4
   20a14:	mov	r1, #23
   20a18:	mov	r2, #1
   20a1c:	bl	11d8c <myhtml_tree_node_insert@plt>
   20a20:	str	r0, [r4, #100]	; 0x64
   20a24:	mov	r0, #6
   20a28:	str	r0, [r4, #168]	; 0xa8
   20a2c:	mov	r0, r5
   20a30:	pop	{r4, r5, r6, sl, fp, pc}
   20a34:	mov	r0, r5
   20a38:	pop	{r4, r5, r6, sl, fp, pc}
   20a3c:	mov	r0, r4
   20a40:	mov	r1, r6
   20a44:	pop	{r4, r5, r6, sl, fp, lr}
   20a48:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   20a4c:	ldr	r0, [r6, #48]	; 0x30
   20a50:	tst	r0, #8
   20a54:	bne	20af0 <myhtml_insertion_mode_after_head@@Base+0x380>
   20a58:	mov	r0, r4
   20a5c:	mov	r1, r6
   20a60:	bl	11384 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   20a64:	cmp	r0, #0
   20a68:	beq	20a0c <myhtml_insertion_mode_after_head@@Base+0x29c>
   20a6c:	mov	r1, r0
   20a70:	mov	r0, r4
   20a74:	bl	11420 <myhtml_tree_node_insert_text@plt>
   20a78:	b	20a0c <myhtml_insertion_mode_after_head@@Base+0x29c>
   20a7c:	mov	r5, #0
   20a80:	mov	r0, r4
   20a84:	mov	r1, r6
   20a88:	mov	r2, #0
   20a8c:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   20a90:	mov	r0, r5
   20a94:	pop	{r4, r5, r6, sl, fp, pc}
   20a98:	mov	r0, r4
   20a9c:	mov	r1, r6
   20aa0:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   20aa4:	str	r0, [r4, #100]	; 0x64
   20aa8:	mov	r0, #6
   20aac:	str	r0, [r4, #168]	; 0xa8
   20ab0:	ldr	r0, [r4, #180]	; 0xb4
   20ab4:	ldr	r1, [r4, #180]	; 0xb4
   20ab8:	and	r0, r0, #2
   20abc:	eor	r0, r1, r0
   20ac0:	str	r0, [r4, #180]	; 0xb4
   20ac4:	mov	r0, r5
   20ac8:	pop	{r4, r5, r6, sl, fp, pc}
   20acc:	mov	r0, r4
   20ad0:	mov	r1, r6
   20ad4:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   20ad8:	mov	r0, #19
   20adc:	b	20a28 <myhtml_insertion_mode_after_head@@Base+0x2b8>
   20ae0:	mov	r0, r4
   20ae4:	mov	r1, r6
   20ae8:	pop	{r4, r5, r6, sl, fp, lr}
   20aec:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   20af0:	mov	r0, r4
   20af4:	mov	r1, r6
   20af8:	bl	11420 <myhtml_tree_node_insert_text@plt>
   20afc:	mov	r0, r5
   20b00:	pop	{r4, r5, r6, sl, fp, pc}

00020b04 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   20b04:	push	{r4, r5, r6, r7, fp, lr}
   20b08:	add	fp, sp, #16
   20b0c:	mov	r5, r1
   20b10:	mov	r4, r0
   20b14:	ldr	r0, [r0, #128]	; 0x80
   20b18:	ldr	r0, [r0, #4]
   20b1c:	rsb	r7, r0, #1
   20b20:	cmp	r7, #1
   20b24:	beq	20b6c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x68>
   20b28:	ldr	r0, [r4, #128]	; 0x80
   20b2c:	ldr	r0, [r0]
   20b30:	ldr	r6, [r0, -r7, lsl #2]
   20b34:	ldr	r1, [r6, #4]
   20b38:	ldr	r2, [r5]
   20b3c:	cmp	r1, r2
   20b40:	ldreq	r0, [r6, #8]
   20b44:	cmpeq	r0, #1
   20b48:	beq	20b74 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   20b4c:	ldr	r0, [r4, #28]
   20b50:	bl	11e28 <myhtml_tag_get_by_id@plt>
   20b54:	ldr	r1, [r6, #8]
   20b58:	add	r0, r0, r1, lsl #2
   20b5c:	ldrb	r0, [r0, #16]
   20b60:	add	r7, r7, #1
   20b64:	tst	r0, #2
   20b68:	beq	20b20 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x1c>
   20b6c:	mov	r0, #0
   20b70:	pop	{r4, r5, r6, r7, fp, pc}
   20b74:	mov	r0, r4
   20b78:	mov	r1, r2
   20b7c:	mov	r2, #1
   20b80:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   20b84:	mov	r0, r4
   20b88:	bl	11a5c <myhtml_tree_current_node@plt>
   20b8c:	mov	r0, r4
   20b90:	mov	r1, r6
   20b94:	mov	r2, #0
   20b98:	bl	115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   20b9c:	mov	r0, #0
   20ba0:	pop	{r4, r5, r6, r7, fp, pc}

00020ba4 <myhtml_insertion_mode_in_template@@Base>:
   20ba4:	push	{r4, r5, fp, lr}
   20ba8:	add	fp, sp, #8
   20bac:	mov	r4, r0
   20bb0:	ldr	r0, [r1]
   20bb4:	ldr	r2, [r1, #48]	; 0x30
   20bb8:	tst	r2, #1
   20bbc:	bne	20e00 <myhtml_insertion_mode_in_template@@Base+0x25c>
   20bc0:	sub	r2, r0, #1
   20bc4:	cmp	r2, #134	; 0x86
   20bc8:	bhi	20e48 <myhtml_insertion_mode_in_template@@Base+0x2a4>
   20bcc:	add	r0, pc, #4
   20bd0:	ldr	r2, [r0, r2, lsl #2]
   20bd4:	add	pc, r0, r2
   20bd8:	andeq	r0, r0, r4, lsr r2
   20bdc:	andeq	r0, r0, r4, lsr r2
   20be0:	andeq	r0, r0, r4, lsr r2
   20be4:	andeq	r0, r0, r4, asr #5
   20be8:	andeq	r0, r0, r4, asr #5
   20bec:	andeq	r0, r0, r4, asr #5
   20bf0:	andeq	r0, r0, r4, asr #5
   20bf4:	andeq	r0, r0, r4, asr #5
   20bf8:	andeq	r0, r0, r4, asr #5
   20bfc:	andeq	r0, r0, r4, asr #5
   20c00:	andeq	r0, r0, r4, asr #5
   20c04:	andeq	r0, r0, r4, asr #5
   20c08:	andeq	r0, r0, r4, asr #5
   20c0c:	andeq	r0, r0, r4, asr #5
   20c10:	andeq	r0, r0, ip, lsl r2
   20c14:	andeq	r0, r0, ip, lsl r2
   20c18:	andeq	r0, r0, r4, asr #5
   20c1c:	andeq	r0, r0, r4, asr #5
   20c20:	andeq	r0, r0, ip, lsl r2
   20c24:	andeq	r0, r0, r4, asr #5
   20c28:	andeq	r0, r0, r4, asr #5
   20c2c:	andeq	r0, r0, r4, asr #5
   20c30:	andeq	r0, r0, r4, asr #5
   20c34:	andeq	r0, r0, r4, asr #5
   20c38:	andeq	r0, r0, r4, asr #5
   20c3c:	andeq	r0, r0, r4, asr #5
   20c40:	andeq	r0, r0, r0, asr #4
   20c44:	andeq	r0, r0, r4, asr #5
   20c48:	andeq	r0, r0, r4, asr #5
   20c4c:	andeq	r0, r0, r4, asr #5
   20c50:	ldrdeq	r0, [r0], -ip
   20c54:	andeq	r0, r0, r0, asr #4
   20c58:	andeq	r0, r0, r4, asr #5
   20c5c:	andeq	r0, r0, r4, asr #5
   20c60:	andeq	r0, r0, r4, asr #5
   20c64:	andeq	r0, r0, r4, asr #5
   20c68:	andeq	r0, r0, r4, asr #5
   20c6c:	andeq	r0, r0, r4, asr #5
   20c70:	andeq	r0, r0, r4, asr #5
   20c74:	andeq	r0, r0, r4, asr #5
   20c78:	andeq	r0, r0, r4, asr #5
   20c7c:	andeq	r0, r0, r4, asr #5
   20c80:	andeq	r0, r0, r4, asr #5
   20c84:	andeq	r0, r0, r4, asr #5
   20c88:	andeq	r0, r0, r4, asr #5
   20c8c:	andeq	r0, r0, r4, asr #5
   20c90:	andeq	r0, r0, r4, asr #5
   20c94:	andeq	r0, r0, r4, asr #5
   20c98:	andeq	r0, r0, r4, asr #5
   20c9c:	andeq	r0, r0, r4, asr #5
   20ca0:	andeq	r0, r0, r4, asr #5
   20ca4:	andeq	r0, r0, r4, asr #5
   20ca8:	andeq	r0, r0, r4, asr #5
   20cac:	andeq	r0, r0, r4, asr #5
   20cb0:	andeq	r0, r0, r4, asr #5
   20cb4:	andeq	r0, r0, r4, asr #5
   20cb8:	andeq	r0, r0, r4, asr #5
   20cbc:	andeq	r0, r0, r4, asr #5
   20cc0:	andeq	r0, r0, r4, asr #5
   20cc4:	andeq	r0, r0, r4, asr #5
   20cc8:	andeq	r0, r0, r4, asr #5
   20ccc:	andeq	r0, r0, r4, asr #5
   20cd0:	andeq	r0, r0, r4, asr #5
   20cd4:	andeq	r0, r0, r4, asr #5
   20cd8:	andeq	r0, r0, r4, asr #5
   20cdc:	andeq	r0, r0, r4, asr #5
   20ce0:	andeq	r0, r0, r4, asr #5
   20ce4:	andeq	r0, r0, r4, asr #5
   20ce8:	andeq	r0, r0, r4, asr #5
   20cec:	andeq	r0, r0, r4, asr #5
   20cf0:	andeq	r0, r0, r4, asr #5
   20cf4:	andeq	r0, r0, r4, asr #5
   20cf8:	andeq	r0, r0, r4, asr #5
   20cfc:	andeq	r0, r0, r4, asr #5
   20d00:	andeq	r0, r0, r4, asr #5
   20d04:	andeq	r0, r0, r4, asr #5
   20d08:	andeq	r0, r0, r4, asr #5
   20d0c:	andeq	r0, r0, ip, lsl r2
   20d10:	andeq	r0, r0, r4, asr #5
   20d14:	andeq	r0, r0, r4, asr #5
   20d18:	andeq	r0, r0, r4, asr #5
   20d1c:	andeq	r0, r0, r4, asr #5
   20d20:	andeq	r0, r0, r4, asr #5
   20d24:	andeq	r0, r0, r4, asr #5
   20d28:	andeq	r0, r0, r4, asr #5
   20d2c:	andeq	r0, r0, ip, lsl r2
   20d30:	andeq	r0, r0, r4, asr #5
   20d34:	andeq	r0, r0, r4, asr #5
   20d38:	andeq	r0, r0, r4, asr #5
   20d3c:	andeq	r0, r0, r4, asr #5
   20d40:	andeq	r0, r0, r4, asr #5
   20d44:	andeq	r0, r0, ip, lsl r2
   20d48:	andeq	r0, r0, r4, asr #5
   20d4c:	andeq	r0, r0, r4, asr #5
   20d50:	andeq	r0, r0, r4, asr #5
   20d54:	andeq	r0, r0, r4, asr #5
   20d58:	andeq	r0, r0, r4, asr #5
   20d5c:	andeq	r0, r0, r4, asr #5
   20d60:	andeq	r0, r0, r4, asr #5
   20d64:	andeq	r0, r0, r4, asr #5
   20d68:	andeq	r0, r0, r4, asr #5
   20d6c:	andeq	r0, r0, r4, asr #5
   20d70:	andeq	r0, r0, r4, asr #5
   20d74:	andeq	r0, r0, r4, asr #5
   20d78:	andeq	r0, r0, r4, asr #5
   20d7c:	andeq	r0, r0, r4, asr #5
   20d80:	andeq	r0, r0, r4, asr #5
   20d84:	andeq	r0, r0, r4, asr #5
   20d88:	andeq	r0, r0, r4, asr #5
   20d8c:	andeq	r0, r0, r4, asr #5
   20d90:	andeq	r0, r0, r4, asr #5
   20d94:	andeq	r0, r0, ip, lsl r2
   20d98:	andeq	r0, r0, r4, asr #5
   20d9c:	andeq	r0, r0, r4, asr #5
   20da0:	andeq	r0, r0, r4, asr #5
   20da4:	andeq	r0, r0, r4, asr #5
   20da8:	andeq	r0, r0, r4, asr #5
   20dac:	andeq	r0, r0, r4, asr #5
   20db0:	andeq	r0, r0, r4, asr #5
   20db4:	andeq	r0, r0, ip, lsl r2
   20db8:	andeq	r0, r0, r4, asr #5
   20dbc:	andeq	r0, r0, r4, asr #5
   20dc0:	andeq	r0, r0, r4, asr #5
   20dc4:	andeq	r0, r0, r4, asr #5
   20dc8:	andeq	r0, r0, r4, asr #5
   20dcc:	andeq	r0, r0, r0, asr #4
   20dd0:	andeq	r0, r0, r8, asr r2
   20dd4:	andeq	r0, r0, ip, lsl r2
   20dd8:	andeq	r0, r0, r4, asr #5
   20ddc:	andeq	r0, r0, r0, asr #4
   20de0:	andeq	r0, r0, r8, asr r2
   20de4:	andeq	r0, r0, r0, asr #4
   20de8:	andeq	r0, r0, r4, asr #5
   20dec:	andeq	r0, r0, ip, lsl r2
   20df0:	strdeq	r0, [r0], -r4
   20df4:	mov	r0, r4
   20df8:	pop	{r4, r5, fp, lr}
   20dfc:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   20e00:	mov	r5, #0
   20e04:	cmp	r0, #128	; 0x80
   20e08:	bne	20eec <myhtml_insertion_mode_in_template@@Base+0x348>
   20e0c:	mov	r0, r4
   20e10:	pop	{r4, r5, fp, lr}
   20e14:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   20e18:	mov	r0, r4
   20e1c:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20e20:	mov	r5, #8
   20e24:	mov	r0, r4
   20e28:	mov	r1, #8
   20e2c:	b	20ee0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   20e30:	mov	r0, r4
   20e34:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20e38:	mov	r5, #13
   20e3c:	mov	r0, r4
   20e40:	mov	r1, #13
   20e44:	b	20ee0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   20e48:	cmp	r0, #251	; 0xfb
   20e4c:	bne	20e9c <myhtml_insertion_mode_in_template@@Base+0x2f8>
   20e50:	mov	r5, #0
   20e54:	mov	r0, r4
   20e58:	mov	r1, #128	; 0x80
   20e5c:	mov	r2, #1
   20e60:	mov	r3, #0
   20e64:	bl	11c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20e68:	cmp	r0, #0
   20e6c:	beq	20eec <myhtml_insertion_mode_in_template@@Base+0x348>
   20e70:	mov	r1, r0
   20e74:	mov	r0, r4
   20e78:	mov	r2, #0
   20e7c:	bl	115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   20e80:	mov	r0, r4
   20e84:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20e88:	mov	r0, r4
   20e8c:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20e90:	mov	r0, r4
   20e94:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20e98:	b	20ee8 <myhtml_insertion_mode_in_template@@Base+0x344>
   20e9c:	mov	r0, r4
   20ea0:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20ea4:	mov	r5, #6
   20ea8:	mov	r0, r4
   20eac:	mov	r1, #6
   20eb0:	b	20ee0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   20eb4:	mov	r0, r4
   20eb8:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20ebc:	mov	r5, #11
   20ec0:	mov	r0, r4
   20ec4:	mov	r1, #11
   20ec8:	b	20ee0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   20ecc:	mov	r0, r4
   20ed0:	bl	11dec <myhtml_tree_template_insertion_pop@plt>
   20ed4:	mov	r5, #12
   20ed8:	mov	r0, r4
   20edc:	mov	r1, #12
   20ee0:	bl	11444 <myhtml_tree_template_insertion_append@plt>
   20ee4:	str	r5, [r4, #168]	; 0xa8
   20ee8:	mov	r5, #1
   20eec:	mov	r0, r5
   20ef0:	pop	{r4, r5, fp, pc}

00020ef4 <myhtml_rules_stop_parsing@@Base>:
   20ef4:	bx	lr

00020ef8 <myhtml_insertion_mode_text@@Base>:
   20ef8:	push	{r4, sl, fp, lr}
   20efc:	add	fp, sp, #8
   20f00:	mov	r4, r0
   20f04:	ldr	r0, [r1, #48]	; 0x30
   20f08:	tst	r0, #1
   20f0c:	bne	20f50 <myhtml_insertion_mode_text@@Base+0x58>
   20f10:	ldr	r0, [r1]
   20f14:	cmp	r0, #251	; 0xfb
   20f18:	bne	20f68 <myhtml_insertion_mode_text@@Base+0x70>
   20f1c:	mov	r0, r4
   20f20:	bl	11a5c <myhtml_tree_current_node@plt>
   20f24:	ldr	r1, [r0, #4]
   20f28:	cmp	r1, #112	; 0x70
   20f2c:	ldreq	r1, [r0]
   20f30:	orreq	r1, r1, #8
   20f34:	streq	r1, [r0]
   20f38:	mov	r0, r4
   20f3c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   20f40:	ldr	r0, [r4, #172]	; 0xac
   20f44:	str	r0, [r4, #168]	; 0xa8
   20f48:	mov	r0, #1
   20f4c:	pop	{r4, sl, fp, pc}
   20f50:	mov	r0, r4
   20f54:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   20f58:	ldr	r0, [r4, #172]	; 0xac
   20f5c:	str	r0, [r4, #168]	; 0xa8
   20f60:	mov	r0, #0
   20f64:	pop	{r4, sl, fp, pc}
   20f68:	mov	r0, r4
   20f6c:	bl	11420 <myhtml_tree_node_insert_text@plt>
   20f70:	mov	r0, #0
   20f74:	pop	{r4, sl, fp, pc}

00020f78 <myhtml_insertion_mode_in_table@@Base>:
   20f78:	push	{r4, r5, r6, sl, fp, lr}
   20f7c:	add	fp, sp, #16
   20f80:	sub	sp, sp, #8
   20f84:	mov	r6, r1
   20f88:	mov	r4, r0
   20f8c:	ldr	r0, [r1]
   20f90:	ldr	r1, [r1, #48]	; 0x30
   20f94:	tst	r1, #1
   20f98:	bne	211ec <myhtml_insertion_mode_in_table@@Base+0x274>
   20f9c:	sub	r1, r0, #1
   20fa0:	cmp	r1, #134	; 0x86
   20fa4:	bhi	21444 <myhtml_insertion_mode_in_table@@Base+0x4cc>
   20fa8:	mov	r5, #0
   20fac:	add	r0, pc, #4
   20fb0:	ldr	r1, [r0, r1, lsl #2]
   20fb4:	add	pc, r0, r1
   20fb8:	muleq	r0, r8, r4
   20fbc:	andeq	r0, r0, ip, ror #9
   20fc0:	andeq	r0, r0, r4, asr #12
   20fc4:	andeq	r0, r0, r8, lsr #12
   20fc8:	andeq	r0, r0, r8, lsr #12
   20fcc:	andeq	r0, r0, r8, lsr #12
   20fd0:	andeq	r0, r0, r8, lsr #12
   20fd4:	andeq	r0, r0, r8, lsr #12
   20fd8:	andeq	r0, r0, r8, lsr #12
   20fdc:	andeq	r0, r0, r8, lsr #12
   20fe0:	andeq	r0, r0, r8, lsr #12
   20fe4:	andeq	r0, r0, r8, lsr #12
   20fe8:	andeq	r0, r0, r8, lsr #12
   20fec:	andeq	r0, r0, r8, lsr #12
   20ff0:	andeq	r0, r0, r8, lsr #12
   20ff4:	andeq	r0, r0, r8, lsr #12
   20ff8:	andeq	r0, r0, r8, lsr #12
   20ffc:	andeq	r0, r0, r8, lsr #12
   21000:	andeq	r0, r0, r8, lsr #12
   21004:	andeq	r0, r0, r8, lsr #12
   21008:	andeq	r0, r0, r8, lsr #12
   2100c:	andeq	r0, r0, r8, lsr #12
   21010:	andeq	r0, r0, r8, lsr #12
   21014:	andeq	r0, r0, r8, lsr #12
   21018:	andeq	r0, r0, r8, lsr #12
   2101c:	andeq	r0, r0, r8, lsr #12
   21020:	andeq	r0, r0, r4, lsl #10
   21024:	andeq	r0, r0, r8, lsr #12
   21028:	andeq	r0, r0, r8, lsr #12
   2102c:	andeq	r0, r0, r8, lsr #12
   21030:	andeq	r0, r0, r4, lsr r5
   21034:	andeq	r0, r0, r4, asr r5
   21038:	andeq	r0, r0, r8, lsr #12
   2103c:	andeq	r0, r0, r8, lsr #12
   21040:	andeq	r0, r0, r8, lsr #12
   21044:	andeq	r0, r0, r8, lsr #12
   21048:	andeq	r0, r0, r8, lsr #12
   2104c:	andeq	r0, r0, r8, lsr #12
   21050:	andeq	r0, r0, r8, lsr #12
   21054:	andeq	r0, r0, r8, lsr #12
   21058:	andeq	r0, r0, r8, lsr #12
   2105c:	andeq	r0, r0, r8, lsr #12
   21060:	andeq	r0, r0, r8, lsr #12
   21064:	andeq	r0, r0, r8, lsr #12
   21068:	andeq	r0, r0, r8, lsr #12
   2106c:	andeq	r0, r0, r8, lsr #12
   21070:	andeq	r0, r0, r8, lsr #12
   21074:	andeq	r0, r0, r8, lsr #12
   21078:	andeq	r0, r0, r8, lsr #12
   2107c:	andeq	r0, r0, r8, lsr #12
   21080:	andeq	r0, r0, r8, lsr #12
   21084:	andeq	r0, r0, r4, ror r5
   21088:	andeq	r0, r0, r8, lsr #12
   2108c:	andeq	r0, r0, r8, lsr #12
   21090:	andeq	r0, r0, r8, lsr #12
   21094:	andeq	r0, r0, r8, lsr #12
   21098:	andeq	r0, r0, r8, lsr #12
   2109c:	andeq	r0, r0, r8, lsr #12
   210a0:	andeq	r0, r0, r8, lsr #12
   210a4:	andeq	r0, r0, r8, lsr #12
   210a8:	andeq	r0, r0, r8, lsr #12
   210ac:	andeq	r0, r0, r8, lsr #12
   210b0:	andeq	r0, r0, r8, lsr #12
   210b4:	andeq	r0, r0, r8, lsr #12
   210b8:	andeq	r0, r0, r8, lsr #12
   210bc:	andeq	r0, r0, r8, lsr #12
   210c0:	andeq	r0, r0, r8, lsr #12
   210c4:	andeq	r0, r0, r8, lsr #12
   210c8:	andeq	r0, r0, r8, lsr #12
   210cc:	andeq	r0, r0, r4, asr #11
   210d0:	andeq	r0, r0, r8, lsr #12
   210d4:	andeq	r0, r0, r8, lsr #12
   210d8:	andeq	r0, r0, r8, lsr #12
   210dc:	andeq	r0, r0, r8, lsr #12
   210e0:	andeq	r0, r0, r8, lsr #12
   210e4:	andeq	r0, r0, r8, lsr #12
   210e8:	andeq	r0, r0, r8, lsr #12
   210ec:	andeq	r0, r0, r8, lsr #12
   210f0:	andeq	r0, r0, r8, lsr #12
   210f4:	andeq	r0, r0, r8, lsr #12
   210f8:	andeq	r0, r0, r8, lsr #12
   210fc:	andeq	r0, r0, r8, lsr #12
   21100:	andeq	r0, r0, r8, lsr #12
   21104:	andeq	r0, r0, r8, lsr #12
   21108:	andeq	r0, r0, r8, lsr #12
   2110c:	andeq	r0, r0, r8, lsr #12
   21110:	andeq	r0, r0, r8, lsr #12
   21114:	andeq	r0, r0, r8, lsr #12
   21118:	andeq	r0, r0, r8, lsr #12
   2111c:	andeq	r0, r0, r8, lsr #12
   21120:	andeq	r0, r0, r8, lsr #12
   21124:	andeq	r0, r0, r8, lsr #12
   21128:	andeq	r0, r0, r8, lsr #12
   2112c:	andeq	r0, r0, r8, lsr #12
   21130:	andeq	r0, r0, r8, lsr #12
   21134:	andeq	r0, r0, r8, lsr #12
   21138:	andeq	r0, r0, r8, lsr #12
   2113c:	andeq	r0, r0, r8, lsr #12
   21140:	andeq	r0, r0, r8, lsr #12
   21144:	andeq	r0, r0, r8, lsr #12
   21148:	andeq	r0, r0, r8, lsr #12
   2114c:	andeq	r0, r0, r8, lsr #12
   21150:	andeq	r0, r0, r8, lsr #12
   21154:	andeq	r0, r0, r8, lsr #12
   21158:	andeq	r0, r0, r8, lsr #12
   2115c:	andeq	r0, r0, r8, lsr #12
   21160:	andeq	r0, r0, r8, lsr #12
   21164:	andeq	r0, r0, r8, lsr #12
   21168:	andeq	r0, r0, r8, lsr #12
   2116c:	andeq	r0, r0, r8, lsr #12
   21170:	andeq	r0, r0, r8, lsr #12
   21174:	andeq	r0, r0, r0, asr r4
   21178:	andeq	r0, r0, r8, lsr #12
   2117c:	andeq	r0, r0, r8, lsr #12
   21180:	andeq	r0, r0, r8, lsr #12
   21184:	andeq	r0, r0, r8, lsr #12
   21188:	andeq	r0, r0, r8, lsr #12
   2118c:	andeq	r0, r0, r8, lsr #12
   21190:	andeq	r0, r0, r8, lsr #12
   21194:	andeq	r0, r0, r0, asr r4
   21198:	andeq	r0, r0, r8, lsr #12
   2119c:	andeq	r0, r0, r8, lsr #12
   211a0:	andeq	r0, r0, r8, lsr #12
   211a4:	andeq	r0, r0, r8, lsr #12
   211a8:	andeq	r0, r0, r0, asr r6
   211ac:	andeq	r0, r0, ip, lsl r2
   211b0:	andeq	r0, r0, r4, ror #8
   211b4:	andeq	r0, r0, r0, asr r4
   211b8:	andeq	r0, r0, r8, lsr #12
   211bc:	andeq	r0, r0, ip, lsl r2
   211c0:	andeq	r0, r0, r4, ror #8
   211c4:	andeq	r0, r0, ip, lsl r2
   211c8:	andeq	r0, r0, r8, lsr #12
   211cc:	andeq	r0, r0, r8, lsr #12
   211d0:	andeq	r0, r0, r4, ror #8
   211d4:	mov	r0, r4
   211d8:	bl	12368 <myhtml_tree_clear_stack_back_table_context@plt>
   211dc:	mov	r0, r4
   211e0:	mov	r1, r6
   211e4:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   211e8:	b	21438 <myhtml_insertion_mode_in_table@@Base+0x4c0>
   211ec:	sub	r0, r0, #23
   211f0:	cmp	r0, #112	; 0x70
   211f4:	bhi	215e0 <myhtml_insertion_mode_in_table@@Base+0x668>
   211f8:	mov	r5, #0
   211fc:	add	r1, pc, #4
   21200:	ldr	r0, [r1, r0, lsl #2]
   21204:	add	pc, r1, r0
   21208:	strdeq	r0, [r0], -r4
   2120c:	ldrdeq	r0, [r0], -r8
   21210:	ldrdeq	r0, [r0], -r8
   21214:	ldrdeq	r0, [r0], -r8
   21218:	strdeq	r0, [r0], -r4
   2121c:	ldrdeq	r0, [r0], -r8
   21220:	ldrdeq	r0, [r0], -r8
   21224:	ldrdeq	r0, [r0], -r8
   21228:	strdeq	r0, [r0], -r4
   2122c:	strdeq	r0, [r0], -r4
   21230:	ldrdeq	r0, [r0], -r8
   21234:	ldrdeq	r0, [r0], -r8
   21238:	ldrdeq	r0, [r0], -r8
   2123c:	ldrdeq	r0, [r0], -r8
   21240:	ldrdeq	r0, [r0], -r8
   21244:	ldrdeq	r0, [r0], -r8
   21248:	ldrdeq	r0, [r0], -r8
   2124c:	ldrdeq	r0, [r0], -r8
   21250:	ldrdeq	r0, [r0], -r8
   21254:	ldrdeq	r0, [r0], -r8
   21258:	ldrdeq	r0, [r0], -r8
   2125c:	ldrdeq	r0, [r0], -r8
   21260:	ldrdeq	r0, [r0], -r8
   21264:	ldrdeq	r0, [r0], -r8
   21268:	ldrdeq	r0, [r0], -r8
   2126c:	ldrdeq	r0, [r0], -r8
   21270:	ldrdeq	r0, [r0], -r8
   21274:	ldrdeq	r0, [r0], -r8
   21278:	ldrdeq	r0, [r0], -r8
   2127c:	ldrdeq	r0, [r0], -r8
   21280:	ldrdeq	r0, [r0], -r8
   21284:	ldrdeq	r0, [r0], -r8
   21288:	ldrdeq	r0, [r0], -r8
   2128c:	ldrdeq	r0, [r0], -r8
   21290:	ldrdeq	r0, [r0], -r8
   21294:	ldrdeq	r0, [r0], -r8
   21298:	ldrdeq	r0, [r0], -r8
   2129c:	ldrdeq	r0, [r0], -r8
   212a0:	ldrdeq	r0, [r0], -r8
   212a4:	ldrdeq	r0, [r0], -r8
   212a8:	ldrdeq	r0, [r0], -r8
   212ac:	ldrdeq	r0, [r0], -r8
   212b0:	strdeq	r0, [r0], -r4
   212b4:	ldrdeq	r0, [r0], -r8
   212b8:	ldrdeq	r0, [r0], -r8
   212bc:	ldrdeq	r0, [r0], -r8
   212c0:	ldrdeq	r0, [r0], -r8
   212c4:	ldrdeq	r0, [r0], -r8
   212c8:	ldrdeq	r0, [r0], -r8
   212cc:	ldrdeq	r0, [r0], -r8
   212d0:	ldrdeq	r0, [r0], -r8
   212d4:	ldrdeq	r0, [r0], -r8
   212d8:	ldrdeq	r0, [r0], -r8
   212dc:	ldrdeq	r0, [r0], -r8
   212e0:	ldrdeq	r0, [r0], -r8
   212e4:	ldrdeq	r0, [r0], -r8
   212e8:	ldrdeq	r0, [r0], -r8
   212ec:	ldrdeq	r0, [r0], -r8
   212f0:	ldrdeq	r0, [r0], -r8
   212f4:	ldrdeq	r0, [r0], -r8
   212f8:	ldrdeq	r0, [r0], -r8
   212fc:	ldrdeq	r0, [r0], -r8
   21300:	ldrdeq	r0, [r0], -r8
   21304:	ldrdeq	r0, [r0], -r8
   21308:	ldrdeq	r0, [r0], -r8
   2130c:	ldrdeq	r0, [r0], -r8
   21310:	ldrdeq	r0, [r0], -r8
   21314:	ldrdeq	r0, [r0], -r8
   21318:	ldrdeq	r0, [r0], -r8
   2131c:	ldrdeq	r0, [r0], -r8
   21320:	ldrdeq	r0, [r0], -r8
   21324:	ldrdeq	r0, [r0], -r8
   21328:	ldrdeq	r0, [r0], -r8
   2132c:	ldrdeq	r0, [r0], -r8
   21330:	ldrdeq	r0, [r0], -r8
   21334:	ldrdeq	r0, [r0], -r8
   21338:	ldrdeq	r0, [r0], -r8
   2133c:	ldrdeq	r0, [r0], -r8
   21340:	ldrdeq	r0, [r0], -r8
   21344:	ldrdeq	r0, [r0], -r8
   21348:	ldrdeq	r0, [r0], -r8
   2134c:	ldrdeq	r0, [r0], -r8
   21350:	ldrdeq	r0, [r0], -r8
   21354:	ldrdeq	r0, [r0], -r8
   21358:	ldrdeq	r0, [r0], -r8
   2135c:	ldrdeq	r0, [r0], -r8
   21360:	ldrdeq	r0, [r0], -r8
   21364:	ldrdeq	r0, [r0], -r8
   21368:	ldrdeq	r0, [r0], -r8
   2136c:	ldrdeq	r0, [r0], -r8
   21370:	ldrdeq	r0, [r0], -r8
   21374:	ldrdeq	r0, [r0], -r8
   21378:	ldrdeq	r0, [r0], -r8
   2137c:	ldrdeq	r0, [r0], -r8
   21380:	ldrdeq	r0, [r0], -r8
   21384:	ldrdeq	r0, [r0], -r8
   21388:	ldrdeq	r0, [r0], -r8
   2138c:	ldrdeq	r0, [r0], -r8
   21390:	ldrdeq	r0, [r0], -r8
   21394:	ldrdeq	r0, [r0], -r8
   21398:	ldrdeq	r0, [r0], -r8
   2139c:	ldrdeq	r0, [r0], -r8
   213a0:	andeq	r0, r0, r4, asr #3
   213a4:	strdeq	r0, [r0], -r4
   213a8:	strdeq	r0, [r0], -r4
   213ac:	andeq	r0, r0, r0, lsl #4
   213b0:	ldrdeq	r0, [r0], -r8
   213b4:	strdeq	r0, [r0], -r4
   213b8:	strdeq	r0, [r0], -r4
   213bc:	strdeq	r0, [r0], -r4
   213c0:	ldrdeq	r0, [r0], -r8
   213c4:	ldrdeq	r0, [r0], -r8
   213c8:	strdeq	r0, [r0], -r4
   213cc:	mov	r0, r4
   213d0:	mov	r1, #125	; 0x7d
   213d4:	mov	r2, #1
   213d8:	mov	r3, #64	; 0x40
   213dc:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   213e0:	cmp	r0, #0
   213e4:	beq	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   213e8:	mov	r1, r0
   213ec:	mov	r5, #0
   213f0:	mov	r0, r4
   213f4:	mov	r2, #0
   213f8:	bl	115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   213fc:	mov	r0, r4
   21400:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21404:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   21408:	mov	r0, r4
   2140c:	mov	r1, r6
   21410:	sub	sp, fp, #16
   21414:	pop	{r4, r5, r6, sl, fp, lr}
   21418:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   2141c:	mov	r0, r4
   21420:	bl	12368 <myhtml_tree_clear_stack_back_table_context@plt>
   21424:	mov	r5, #1
   21428:	mov	r0, r4
   2142c:	mov	r1, #126	; 0x7e
   21430:	mov	r2, #1
   21434:	bl	11d8c <myhtml_tree_node_insert@plt>
   21438:	mov	r0, #12
   2143c:	str	r0, [r4, #168]	; 0xa8
   21440:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   21444:	cmp	r0, #251	; 0xfb
   21448:	beq	21568 <myhtml_insertion_mode_in_table@@Base+0x5f0>
   2144c:	b	215e0 <myhtml_insertion_mode_in_table@@Base+0x668>
   21450:	mov	r0, r4
   21454:	bl	11a5c <myhtml_tree_current_node@plt>
   21458:	ldr	r1, [r0, #4]
   2145c:	sub	r1, r1, #125	; 0x7d
   21460:	cmp	r1, #10
   21464:	bhi	215e0 <myhtml_insertion_mode_in_table@@Base+0x668>
   21468:	mov	r2, #1
   2146c:	movw	r3, #1187	; 0x4a3
   21470:	tst	r3, r2, lsl r1
   21474:	beq	215e0 <myhtml_insertion_mode_in_table@@Base+0x668>
   21478:	ldr	r0, [r0, #8]
   2147c:	cmp	r0, #1
   21480:	bne	215e0 <myhtml_insertion_mode_in_table@@Base+0x668>
   21484:	ldr	r0, [r4, #136]	; 0x88
   21488:	bl	12380 <myhtml_tree_token_list_clean@plt>
   2148c:	ldr	r0, [r4, #168]	; 0xa8
   21490:	mov	r1, #9
   21494:	str	r1, [r4, #168]	; 0xa8
   21498:	str	r0, [r4, #172]	; 0xac
   2149c:	mov	r5, #1
   214a0:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   214a4:	mov	r5, #0
   214a8:	mov	r0, r4
   214ac:	mov	r1, r6
   214b0:	mov	r2, #0
   214b4:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   214b8:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   214bc:	mov	r0, r4
   214c0:	bl	12368 <myhtml_tree_clear_stack_back_table_context@plt>
   214c4:	mov	r0, r4
   214c8:	mov	r1, r6
   214cc:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   214d0:	ldr	r0, [r4]
   214d4:	ldr	r1, [r0, #36]	; 0x24
   214d8:	mov	r0, r4
   214dc:	bl	11558 <myhtml_tree_active_formatting_append@plt>
   214e0:	mov	r0, #10
   214e4:	str	r0, [r4, #168]	; 0xa8
   214e8:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   214ec:	mov	r0, r4
   214f0:	bl	12368 <myhtml_tree_clear_stack_back_table_context@plt>
   214f4:	mov	r5, #1
   214f8:	mov	r0, r4
   214fc:	mov	r1, #32
   21500:	mov	r2, #1
   21504:	bl	11d8c <myhtml_tree_node_insert@plt>
   21508:	b	21520 <myhtml_insertion_mode_in_table@@Base+0x5a8>
   2150c:	mov	r0, r4
   21510:	bl	12368 <myhtml_tree_clear_stack_back_table_context@plt>
   21514:	mov	r0, r4
   21518:	mov	r1, r6
   2151c:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   21520:	mov	r0, #11
   21524:	str	r0, [r4, #168]	; 0xa8
   21528:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   2152c:	mov	r5, #0
   21530:	mov	r0, r4
   21534:	mov	r1, #128	; 0x80
   21538:	mov	r2, #1
   2153c:	mov	r3, #0
   21540:	bl	11c18 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21544:	ldr	r1, [r4, #104]	; 0x68
   21548:	orrs	r0, r0, r1
   2154c:	bne	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   21550:	mov	r0, r4
   21554:	mov	r1, r6
   21558:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   2155c:	str	r0, [r4, #104]	; 0x68
   21560:	mov	r0, r4
   21564:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   21568:	mov	r0, r4
   2156c:	mov	r1, r6
   21570:	sub	sp, fp, #16
   21574:	pop	{r4, r5, r6, sl, fp, lr}
   21578:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   2157c:	ldr	r0, [r4, #8]
   21580:	mov	r1, r6
   21584:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   21588:	ldr	r0, [r4, #8]
   2158c:	mov	r1, #6
   21590:	ldr	r2, [pc, #176]	; 21648 <myhtml_insertion_mode_in_table@@Base+0x6d0>
   21594:	add	r2, pc, r2
   21598:	str	r2, [sp]
   2159c:	str	r1, [sp, #4]
   215a0:	ldr	r2, [pc, #164]	; 2164c <myhtml_insertion_mode_in_table@@Base+0x6d4>
   215a4:	add	r2, pc, r2
   215a8:	mov	r1, r6
   215ac:	mov	r3, #4
   215b0:	bl	111f8 <myhtml_token_attr_match_case@plt>
   215b4:	cmp	r0, #0
   215b8:	beq	215e0 <myhtml_insertion_mode_in_table@@Base+0x668>
   215bc:	mov	r0, r4
   215c0:	mov	r1, r6
   215c4:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   215c8:	mov	r0, r4
   215cc:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   215d0:	ldr	r0, [r6, #48]	; 0x30
   215d4:	orr	r0, r0, #2
   215d8:	str	r0, [r6, #48]	; 0x30
   215dc:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   215e0:	mov	r0, #1
   215e4:	strb	r0, [r4, #188]	; 0xbc
   215e8:	mov	r0, r4
   215ec:	mov	r1, r6
   215f0:	bl	11a74 <myhtml_insertion_mode_in_body@plt>
   215f4:	mov	r5, #0
   215f8:	strb	r5, [r4, #188]	; 0xbc
   215fc:	mov	r0, r5
   21600:	sub	sp, fp, #16
   21604:	pop	{r4, r5, r6, sl, fp, pc}
   21608:	mov	r0, r4
   2160c:	mov	r1, #125	; 0x7d
   21610:	mov	r2, #1
   21614:	mov	r3, #64	; 0x40
   21618:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   2161c:	cmp	r0, #0
   21620:	beq	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   21624:	mov	r0, r4
   21628:	mov	r1, #125	; 0x7d
   2162c:	mov	r2, #1
   21630:	mov	r3, #0
   21634:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   21638:	mov	r0, r4
   2163c:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21640:	mov	r5, #1
   21644:	b	215fc <myhtml_insertion_mode_in_table@@Base+0x684>
   21648:	andeq	fp, sp, fp, lsr r4
   2164c:	andeq	r8, r1, r7, asr #3

00021650 <myhtml_insertion_mode_in_table_text@@Base>:
   21650:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21654:	add	fp, sp, #24
   21658:	mov	r4, r0
   2165c:	ldr	r0, [r1]
   21660:	cmp	r0, #1
   21664:	bne	21690 <myhtml_insertion_mode_in_table_text@@Base+0x40>
   21668:	mov	r5, r1
   2166c:	ldr	r0, [r1, #48]	; 0x30
   21670:	tst	r0, #2048	; 0x800
   21674:	bne	216f8 <myhtml_insertion_mode_in_table_text@@Base+0xa8>
   21678:	ldr	r0, [r4, #136]	; 0x88
   2167c:	mov	r1, r5
   21680:	bl	12278 <myhtml_tree_token_list_append@plt>
   21684:	mov	r6, #0
   21688:	mov	r0, r6
   2168c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21690:	ldr	r5, [r4, #136]	; 0x88
   21694:	ldr	r0, [r5, #4]
   21698:	cmp	r0, #0
   2169c:	beq	21768 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   216a0:	ldr	r0, [r5]
   216a4:	mov	r1, #0
   216a8:	ldr	r2, [r0, r1, lsl #2]
   216ac:	ldr	r2, [r2, #48]	; 0x30
   216b0:	tst	r2, #8
   216b4:	beq	21728 <myhtml_insertion_mode_in_table_text@@Base+0xd8>
   216b8:	add	r1, r1, #1
   216bc:	ldr	r2, [r5, #4]
   216c0:	cmp	r1, r2
   216c4:	bcc	216a8 <myhtml_insertion_mode_in_table_text@@Base+0x58>
   216c8:	cmp	r2, #0
   216cc:	beq	21768 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   216d0:	mov	r6, #0
   216d4:	ldr	r0, [r5]
   216d8:	ldr	r1, [r0, r6, lsl #2]
   216dc:	mov	r0, r4
   216e0:	bl	11420 <myhtml_tree_node_insert_text@plt>
   216e4:	add	r6, r6, #1
   216e8:	ldr	r0, [r5, #4]
   216ec:	cmp	r6, r0
   216f0:	bcc	216d4 <myhtml_insertion_mode_in_table_text@@Base+0x84>
   216f4:	b	21768 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   216f8:	mov	r0, r4
   216fc:	mov	r1, r5
   21700:	bl	11be8 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21704:	ldr	r0, [r5, #12]
   21708:	mov	r6, #0
   2170c:	cmp	r0, #0
   21710:	beq	21774 <myhtml_insertion_mode_in_table_text@@Base+0x124>
   21714:	ldr	r0, [r4, #136]	; 0x88
   21718:	mov	r1, r5
   2171c:	bl	12278 <myhtml_tree_token_list_append@plt>
   21720:	mov	r0, r6
   21724:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21728:	ldr	r0, [r5, #4]
   2172c:	cmp	r0, #0
   21730:	beq	21768 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   21734:	mov	r8, #0
   21738:	mov	r7, #1
   2173c:	mov	r6, #0
   21740:	strb	r7, [r4, #188]	; 0xbc
   21744:	ldr	r0, [r5]
   21748:	ldr	r1, [r0, r6, lsl #2]
   2174c:	mov	r0, r4
   21750:	bl	11a74 <myhtml_insertion_mode_in_body@plt>
   21754:	strb	r8, [r4, #188]	; 0xbc
   21758:	add	r6, r6, #1
   2175c:	ldr	r0, [r5, #4]
   21760:	cmp	r6, r0
   21764:	bcc	21740 <myhtml_insertion_mode_in_table_text@@Base+0xf0>
   21768:	ldr	r0, [r4, #172]	; 0xac
   2176c:	str	r0, [r4, #168]	; 0xa8
   21770:	mov	r6, #1
   21774:	mov	r0, r6
   21778:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002177c <myhtml_insertion_mode_in_caption@@Base>:
   2177c:	push	{r4, r5, fp, lr}
   21780:	add	fp, sp, #8
   21784:	mov	r4, r0
   21788:	ldr	r0, [r1]
   2178c:	ldr	r2, [r1, #48]	; 0x30
   21790:	tst	r2, #1
   21794:	bne	2183c <myhtml_insertion_mode_in_caption@@Base+0xc0>
   21798:	sub	r2, r0, #126	; 0x7e
   2179c:	cmp	r2, #9
   217a0:	bhi	217b4 <myhtml_insertion_mode_in_caption@@Base+0x38>
   217a4:	mov	r3, #1
   217a8:	movw	r5, #627	; 0x273
   217ac:	tst	r5, r3, lsl r2
   217b0:	bne	217d0 <myhtml_insertion_mode_in_caption@@Base+0x54>
   217b4:	sub	r0, r0, #27
   217b8:	cmp	r0, #5
   217bc:	bhi	21a4c <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   217c0:	mov	r2, #1
   217c4:	mov	r3, #49	; 0x31
   217c8:	tst	r3, r2, lsl r0
   217cc:	beq	21a4c <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   217d0:	mov	r5, #1
   217d4:	mov	r0, r4
   217d8:	mov	r1, #27
   217dc:	mov	r2, #1
   217e0:	mov	r3, #64	; 0x40
   217e4:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   217e8:	cmp	r0, #0
   217ec:	beq	21a40 <myhtml_insertion_mode_in_caption@@Base+0x2c4>
   217f0:	mov	r0, r4
   217f4:	mov	r1, #0
   217f8:	mov	r2, #0
   217fc:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   21800:	mov	r0, r4
   21804:	bl	11a5c <myhtml_tree_current_node@plt>
   21808:	mov	r1, #27
   2180c:	bl	11ea0 <myhtml_is_html_node@plt>
   21810:	mov	r0, r4
   21814:	mov	r1, #27
   21818:	mov	r2, #1
   2181c:	mov	r3, #0
   21820:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   21824:	mov	r0, r4
   21828:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2182c:	mov	r0, #8
   21830:	str	r0, [r4, #168]	; 0xa8
   21834:	mov	r0, r5
   21838:	pop	{r4, r5, fp, pc}
   2183c:	sub	r0, r0, #23
   21840:	cmp	r0, #112	; 0x70
   21844:	bhi	21a4c <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   21848:	mov	r5, #0
   2184c:	add	r2, pc, #4
   21850:	ldr	r0, [r2, r0, lsl #2]
   21854:	add	pc, r2, r0
   21858:	andeq	r0, r0, ip, ror #3
   2185c:	strdeq	r0, [r0], -r4
   21860:	strdeq	r0, [r0], -r4
   21864:	strdeq	r0, [r0], -r4
   21868:	andeq	r0, r0, r4, asr #3
   2186c:	strdeq	r0, [r0], -r4
   21870:	strdeq	r0, [r0], -r4
   21874:	strdeq	r0, [r0], -r4
   21878:	andeq	r0, r0, ip, ror #3
   2187c:	andeq	r0, r0, ip, ror #3
   21880:	strdeq	r0, [r0], -r4
   21884:	strdeq	r0, [r0], -r4
   21888:	strdeq	r0, [r0], -r4
   2188c:	strdeq	r0, [r0], -r4
   21890:	strdeq	r0, [r0], -r4
   21894:	strdeq	r0, [r0], -r4
   21898:	strdeq	r0, [r0], -r4
   2189c:	strdeq	r0, [r0], -r4
   218a0:	strdeq	r0, [r0], -r4
   218a4:	strdeq	r0, [r0], -r4
   218a8:	strdeq	r0, [r0], -r4
   218ac:	strdeq	r0, [r0], -r4
   218b0:	strdeq	r0, [r0], -r4
   218b4:	strdeq	r0, [r0], -r4
   218b8:	strdeq	r0, [r0], -r4
   218bc:	strdeq	r0, [r0], -r4
   218c0:	strdeq	r0, [r0], -r4
   218c4:	strdeq	r0, [r0], -r4
   218c8:	strdeq	r0, [r0], -r4
   218cc:	strdeq	r0, [r0], -r4
   218d0:	strdeq	r0, [r0], -r4
   218d4:	strdeq	r0, [r0], -r4
   218d8:	strdeq	r0, [r0], -r4
   218dc:	strdeq	r0, [r0], -r4
   218e0:	strdeq	r0, [r0], -r4
   218e4:	strdeq	r0, [r0], -r4
   218e8:	strdeq	r0, [r0], -r4
   218ec:	strdeq	r0, [r0], -r4
   218f0:	strdeq	r0, [r0], -r4
   218f4:	strdeq	r0, [r0], -r4
   218f8:	strdeq	r0, [r0], -r4
   218fc:	strdeq	r0, [r0], -r4
   21900:	andeq	r0, r0, ip, ror #3
   21904:	strdeq	r0, [r0], -r4
   21908:	strdeq	r0, [r0], -r4
   2190c:	strdeq	r0, [r0], -r4
   21910:	strdeq	r0, [r0], -r4
   21914:	strdeq	r0, [r0], -r4
   21918:	strdeq	r0, [r0], -r4
   2191c:	strdeq	r0, [r0], -r4
   21920:	strdeq	r0, [r0], -r4
   21924:	strdeq	r0, [r0], -r4
   21928:	strdeq	r0, [r0], -r4
   2192c:	strdeq	r0, [r0], -r4
   21930:	strdeq	r0, [r0], -r4
   21934:	strdeq	r0, [r0], -r4
   21938:	strdeq	r0, [r0], -r4
   2193c:	strdeq	r0, [r0], -r4
   21940:	strdeq	r0, [r0], -r4
   21944:	strdeq	r0, [r0], -r4
   21948:	strdeq	r0, [r0], -r4
   2194c:	strdeq	r0, [r0], -r4
   21950:	strdeq	r0, [r0], -r4
   21954:	strdeq	r0, [r0], -r4
   21958:	strdeq	r0, [r0], -r4
   2195c:	strdeq	r0, [r0], -r4
   21960:	strdeq	r0, [r0], -r4
   21964:	strdeq	r0, [r0], -r4
   21968:	strdeq	r0, [r0], -r4
   2196c:	strdeq	r0, [r0], -r4
   21970:	strdeq	r0, [r0], -r4
   21974:	strdeq	r0, [r0], -r4
   21978:	strdeq	r0, [r0], -r4
   2197c:	strdeq	r0, [r0], -r4
   21980:	strdeq	r0, [r0], -r4
   21984:	strdeq	r0, [r0], -r4
   21988:	strdeq	r0, [r0], -r4
   2198c:	strdeq	r0, [r0], -r4
   21990:	strdeq	r0, [r0], -r4
   21994:	strdeq	r0, [r0], -r4
   21998:	strdeq	r0, [r0], -r4
   2199c:	strdeq	r0, [r0], -r4
   219a0:	strdeq	r0, [r0], -r4
   219a4:	strdeq	r0, [r0], -r4
   219a8:	strdeq	r0, [r0], -r4
   219ac:	strdeq	r0, [r0], -r4
   219b0:	strdeq	r0, [r0], -r4
   219b4:	strdeq	r0, [r0], -r4
   219b8:	strdeq	r0, [r0], -r4
   219bc:	strdeq	r0, [r0], -r4
   219c0:	strdeq	r0, [r0], -r4
   219c4:	strdeq	r0, [r0], -r4
   219c8:	strdeq	r0, [r0], -r4
   219cc:	strdeq	r0, [r0], -r4
   219d0:	strdeq	r0, [r0], -r4
   219d4:	strdeq	r0, [r0], -r4
   219d8:	strdeq	r0, [r0], -r4
   219dc:	strdeq	r0, [r0], -r4
   219e0:	strdeq	r0, [r0], -r4
   219e4:	strdeq	r0, [r0], -r4
   219e8:	strdeq	r0, [r0], -r4
   219ec:	strdeq	r0, [r0], -r4
   219f0:	andeq	r0, r0, r0, lsl #4
   219f4:	andeq	r0, r0, ip, ror #3
   219f8:	andeq	r0, r0, ip, ror #3
   219fc:	strdeq	r0, [r0], -r4
   21a00:	strdeq	r0, [r0], -r4
   21a04:	andeq	r0, r0, ip, ror #3
   21a08:	andeq	r0, r0, ip, ror #3
   21a0c:	andeq	r0, r0, ip, ror #3
   21a10:	strdeq	r0, [r0], -r4
   21a14:	strdeq	r0, [r0], -r4
   21a18:	andeq	r0, r0, ip, ror #3
   21a1c:	mov	r0, r4
   21a20:	mov	r1, #27
   21a24:	mov	r2, #1
   21a28:	mov	r3, #64	; 0x40
   21a2c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   21a30:	cmp	r0, #0
   21a34:	beq	21a44 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   21a38:	mov	r5, #0
   21a3c:	b	217f0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   21a40:	mov	r5, #0
   21a44:	mov	r0, r5
   21a48:	pop	{r4, r5, fp, pc}
   21a4c:	mov	r0, r4
   21a50:	pop	{r4, r5, fp, lr}
   21a54:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   21a58:	mov	r0, r4
   21a5c:	mov	r1, #27
   21a60:	mov	r2, #1
   21a64:	mov	r3, #64	; 0x40
   21a68:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   21a6c:	cmp	r0, #0
   21a70:	beq	21a44 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   21a74:	mov	r0, r4
   21a78:	mov	r1, #0
   21a7c:	mov	r2, #0
   21a80:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   21a84:	mov	r0, r4
   21a88:	bl	11a5c <myhtml_tree_current_node@plt>
   21a8c:	mov	r1, #27
   21a90:	bl	11ea0 <myhtml_is_html_node@plt>
   21a94:	mov	r0, r4
   21a98:	mov	r1, #27
   21a9c:	mov	r2, #1
   21aa0:	mov	r3, #0
   21aa4:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   21aa8:	mov	r0, r4
   21aac:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21ab0:	mov	r0, #8
   21ab4:	str	r0, [r4, #168]	; 0xa8
   21ab8:	mov	r5, #1
   21abc:	mov	r0, r5
   21ac0:	pop	{r4, r5, fp, pc}

00021ac4 <myhtml_insertion_mode_in_column_group@@Base>:
   21ac4:	push	{r4, r5, fp, lr}
   21ac8:	add	fp, sp, #8
   21acc:	mov	r5, r0
   21ad0:	ldr	r0, [r1]
   21ad4:	ldr	r2, [r1, #48]	; 0x30
   21ad8:	mov	r4, #0
   21adc:	tst	r2, #1
   21ae0:	bne	21bac <myhtml_insertion_mode_in_column_group@@Base+0xe8>
   21ae4:	cmp	r0, #64	; 0x40
   21ae8:	bgt	21bf8 <myhtml_insertion_mode_in_column_group@@Base+0x134>
   21aec:	sub	r0, r0, #1
   21af0:	cmp	r0, #30
   21af4:	bhi	21c1c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   21af8:	add	r2, pc, #4
   21afc:	ldr	r0, [r2, r0, lsl #2]
   21b00:	add	pc, r2, r0
   21b04:	andeq	r0, r0, ip, ror r0
   21b08:	andeq	r0, r0, r8, ror #2
   21b0c:	andeq	r0, r0, r4, asr r1
   21b10:	andeq	r0, r0, r8, lsl r1
   21b14:	andeq	r0, r0, r8, lsl r1
   21b18:	andeq	r0, r0, r8, lsl r1
   21b1c:	andeq	r0, r0, r8, lsl r1
   21b20:	andeq	r0, r0, r8, lsl r1
   21b24:	andeq	r0, r0, r8, lsl r1
   21b28:	andeq	r0, r0, r8, lsl r1
   21b2c:	andeq	r0, r0, r8, lsl r1
   21b30:	andeq	r0, r0, r8, lsl r1
   21b34:	andeq	r0, r0, r8, lsl r1
   21b38:	andeq	r0, r0, r8, lsl r1
   21b3c:	andeq	r0, r0, r8, lsl r1
   21b40:	andeq	r0, r0, r8, lsl r1
   21b44:	andeq	r0, r0, r8, lsl r1
   21b48:	andeq	r0, r0, r8, lsl r1
   21b4c:	andeq	r0, r0, r8, lsl r1
   21b50:	andeq	r0, r0, r8, lsl r1
   21b54:	andeq	r0, r0, r8, lsl r1
   21b58:	andeq	r0, r0, r8, lsl r1
   21b5c:	andeq	r0, r0, r8, lsl r1
   21b60:	andeq	r0, r0, r8, lsl r1
   21b64:	andeq	r0, r0, r8, lsl r1
   21b68:	andeq	r0, r0, r8, lsl r1
   21b6c:	andeq	r0, r0, r8, lsl r1
   21b70:	andeq	r0, r0, r8, lsl r1
   21b74:	andeq	r0, r0, r8, lsl r1
   21b78:	andeq	r0, r0, r8, lsl r1
   21b7c:	andeq	r0, r0, r0, lsl #3
   21b80:	ldr	r0, [r1, #48]	; 0x30
   21b84:	tst	r0, #8
   21b88:	bne	21c9c <myhtml_insertion_mode_in_column_group@@Base+0x1d8>
   21b8c:	mov	r0, r5
   21b90:	bl	11384 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   21b94:	cmp	r0, #0
   21b98:	beq	21c1c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   21b9c:	mov	r1, r0
   21ba0:	mov	r0, r5
   21ba4:	bl	11420 <myhtml_tree_node_insert_text@plt>
   21ba8:	b	21c1c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   21bac:	cmp	r0, #31
   21bb0:	beq	21c58 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   21bb4:	cmp	r0, #128	; 0x80
   21bb8:	beq	21c60 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   21bbc:	cmp	r0, #32
   21bc0:	bne	21c1c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   21bc4:	mov	r0, r5
   21bc8:	bl	11a5c <myhtml_tree_current_node@plt>
   21bcc:	cmp	r0, #0
   21bd0:	beq	21c58 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   21bd4:	mov	r1, #32
   21bd8:	bl	11ea0 <myhtml_is_html_node@plt>
   21bdc:	cmp	r0, #0
   21be0:	beq	21c58 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   21be4:	mov	r0, r5
   21be8:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   21bec:	mov	r0, #8
   21bf0:	str	r0, [r5, #168]	; 0xa8
   21bf4:	b	21c58 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   21bf8:	cmp	r0, #65	; 0x41
   21bfc:	beq	21c10 <myhtml_insertion_mode_in_column_group@@Base+0x14c>
   21c00:	cmp	r0, #128	; 0x80
   21c04:	beq	21c60 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   21c08:	cmp	r0, #251	; 0xfb
   21c0c:	bne	21c1c <myhtml_insertion_mode_in_column_group@@Base+0x158>
   21c10:	mov	r0, r5
   21c14:	pop	{r4, r5, fp, lr}
   21c18:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   21c1c:	mov	r0, r5
   21c20:	bl	11a5c <myhtml_tree_current_node@plt>
   21c24:	cmp	r0, #0
   21c28:	beq	21c58 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   21c2c:	mov	r1, #32
   21c30:	bl	11ea0 <myhtml_is_html_node@plt>
   21c34:	cmp	r0, #0
   21c38:	beq	21c58 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   21c3c:	mov	r0, r5
   21c40:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   21c44:	mov	r0, #8
   21c48:	str	r0, [r5, #168]	; 0xa8
   21c4c:	mov	r4, #1
   21c50:	mov	r0, r4
   21c54:	pop	{r4, r5, fp, pc}
   21c58:	mov	r0, r4
   21c5c:	pop	{r4, r5, fp, pc}
   21c60:	mov	r0, r5
   21c64:	pop	{r4, r5, fp, lr}
   21c68:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   21c6c:	mov	r4, #0
   21c70:	mov	r0, r5
   21c74:	mov	r2, #0
   21c78:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   21c7c:	mov	r0, r4
   21c80:	pop	{r4, r5, fp, pc}
   21c84:	mov	r0, r5
   21c88:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   21c8c:	mov	r0, r5
   21c90:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   21c94:	mov	r0, r4
   21c98:	pop	{r4, r5, fp, pc}
   21c9c:	mov	r0, r5
   21ca0:	bl	11420 <myhtml_tree_node_insert_text@plt>
   21ca4:	mov	r0, r4
   21ca8:	pop	{r4, r5, fp, pc}

00021cac <myhtml_insertion_mode_in_table_body@@Base>:
   21cac:	push	{r4, r5, r6, r7, fp, lr}
   21cb0:	add	fp, sp, #16
   21cb4:	mov	r6, r1
   21cb8:	mov	r4, r0
   21cbc:	ldr	r1, [r1]
   21cc0:	ldr	r0, [r6, #48]	; 0x30
   21cc4:	tst	r0, #1
   21cc8:	bne	21d18 <myhtml_insertion_mode_in_table_body@@Base+0x6c>
   21ccc:	sub	r0, r1, #126	; 0x7e
   21cd0:	cmp	r0, #9
   21cd4:	bhi	21f60 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   21cd8:	mov	r2, #1
   21cdc:	mov	r3, #81	; 0x51
   21ce0:	tst	r3, r2, lsl r0
   21ce4:	bne	21f7c <myhtml_insertion_mode_in_table_body@@Base+0x2d0>
   21ce8:	mov	r3, #34	; 0x22
   21cec:	tst	r3, r2, lsl r0
   21cf0:	beq	21f30 <myhtml_insertion_mode_in_table_body@@Base+0x284>
   21cf4:	mov	r0, r4
   21cf8:	bl	117e0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21cfc:	mov	r5, #1
   21d00:	mov	r0, r4
   21d04:	mov	r1, #135	; 0x87
   21d08:	mov	r2, #1
   21d0c:	bl	11d8c <myhtml_tree_node_insert@plt>
   21d10:	mov	r0, #13
   21d14:	b	21f24 <myhtml_insertion_mode_in_table_body@@Base+0x278>
   21d18:	sub	r0, r1, #23
   21d1c:	cmp	r0, #112	; 0x70
   21d20:	bhi	22004 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   21d24:	mov	r5, #0
   21d28:	add	r2, pc, #4
   21d2c:	ldr	r0, [r2, r0, lsl #2]
   21d30:	add	pc, r2, r0
   21d34:	andeq	r0, r0, r8, asr #5
   21d38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d3c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d40:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d44:	andeq	r0, r0, r8, asr #5
   21d48:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d4c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d50:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d54:	andeq	r0, r0, r8, asr #5
   21d58:	andeq	r0, r0, r8, asr #5
   21d5c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d68:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d6c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d70:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d74:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d78:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d7c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d80:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d88:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21d9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21da0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21da4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21da8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21db0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21db4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21db8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dbc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dc0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dc8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dcc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dd0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dd4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dd8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ddc:	andeq	r0, r0, r8, asr #5
   21de0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21de4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21de8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21df0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21df4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21df8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21dfc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e04:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e08:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e14:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e18:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e1c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e28:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e2c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e30:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e34:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e3c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e40:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e44:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e48:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e4c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e50:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e54:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e58:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e5c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e68:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e6c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e70:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e74:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e78:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e7c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e80:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e88:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21e9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ea0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ea4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ea8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21eac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21eb0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21eb4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21eb8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ebc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ec0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ec4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ec8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ecc:	andeq	r0, r0, r0, ror #5
   21ed0:	andeq	r0, r0, r4, asr #3
   21ed4:	andeq	r0, r0, r8, asr #5
   21ed8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21edc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ee0:	andeq	r0, r0, r4, asr #3
   21ee4:	andeq	r0, r0, r8, asr #5
   21ee8:	andeq	r0, r0, r4, asr #3
   21eec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ef0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ef4:	andeq	r0, r0, r8, asr #5
   21ef8:	mov	r0, r4
   21efc:	mov	r2, #1
   21f00:	mov	r3, #64	; 0x40
   21f04:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   21f08:	cmp	r0, #0
   21f0c:	beq	21ffc <myhtml_insertion_mode_in_table_body@@Base+0x350>
   21f10:	mov	r0, r4
   21f14:	bl	117e0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21f18:	mov	r0, r4
   21f1c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   21f20:	mov	r0, #8
   21f24:	str	r0, [r4, #168]	; 0xa8
   21f28:	mov	r0, r5
   21f2c:	pop	{r4, r5, r6, r7, fp, pc}
   21f30:	cmp	r0, #9
   21f34:	bne	21f60 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   21f38:	mov	r0, r4
   21f3c:	bl	117e0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21f40:	mov	r0, r4
   21f44:	mov	r1, r6
   21f48:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   21f4c:	mov	r0, #13
   21f50:	str	r0, [r4, #168]	; 0xa8
   21f54:	mov	r5, #0
   21f58:	mov	r0, r5
   21f5c:	pop	{r4, r5, r6, r7, fp, pc}
   21f60:	sub	r0, r1, #27
   21f64:	cmp	r0, #5
   21f68:	bhi	22004 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   21f6c:	mov	r1, #1
   21f70:	mov	r2, #49	; 0x31
   21f74:	tst	r2, r1, lsl r0
   21f78:	beq	22004 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   21f7c:	mov	r0, r4
   21f80:	mov	r1, #126	; 0x7e
   21f84:	mov	r2, #1
   21f88:	mov	r3, #64	; 0x40
   21f8c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   21f90:	mov	r6, r0
   21f94:	mov	r0, r4
   21f98:	mov	r1, #130	; 0x82
   21f9c:	mov	r2, #1
   21fa0:	mov	r3, #64	; 0x40
   21fa4:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   21fa8:	mov	r5, r0
   21fac:	mov	r0, r4
   21fb0:	mov	r1, #132	; 0x84
   21fb4:	mov	r2, #1
   21fb8:	mov	r3, #64	; 0x40
   21fbc:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   21fc0:	cmp	r6, #0
   21fc4:	cmpeq	r5, #0
   21fc8:	beq	21ff0 <myhtml_insertion_mode_in_table_body@@Base+0x344>
   21fcc:	mov	r0, r4
   21fd0:	bl	117e0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21fd4:	mov	r0, r4
   21fd8:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   21fdc:	mov	r0, #8
   21fe0:	str	r0, [r4, #168]	; 0xa8
   21fe4:	mov	r5, #1
   21fe8:	mov	r0, r5
   21fec:	pop	{r4, r5, r6, r7, fp, pc}
   21ff0:	mov	r5, #0
   21ff4:	cmp	r0, #0
   21ff8:	bne	21fcc <myhtml_insertion_mode_in_table_body@@Base+0x320>
   21ffc:	mov	r0, r5
   22000:	pop	{r4, r5, r6, r7, fp, pc}
   22004:	mov	r0, r4
   22008:	mov	r1, r6
   2200c:	pop	{r4, r5, r6, r7, fp, lr}
   22010:	b	20f78 <myhtml_insertion_mode_in_table@@Base>
   22014:	mov	r0, r4
   22018:	mov	r1, #126	; 0x7e
   2201c:	mov	r2, #1
   22020:	mov	r3, #64	; 0x40
   22024:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22028:	mov	r7, r0
   2202c:	mov	r0, r4
   22030:	mov	r1, #130	; 0x82
   22034:	mov	r2, #1
   22038:	mov	r3, #64	; 0x40
   2203c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22040:	mov	r6, r0
   22044:	mov	r0, r4
   22048:	mov	r1, #132	; 0x84
   2204c:	mov	r2, #1
   22050:	mov	r3, #64	; 0x40
   22054:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22058:	cmp	r7, #0
   2205c:	cmpeq	r6, #0
   22060:	bne	21fcc <myhtml_insertion_mode_in_table_body@@Base+0x320>
   22064:	b	21ff4 <myhtml_insertion_mode_in_table_body@@Base+0x348>

00022068 <myhtml_insertion_mode_in_row@@Base>:
   22068:	push	{r4, r5, r6, sl, fp, lr}
   2206c:	add	fp, sp, #16
   22070:	mov	r6, r1
   22074:	mov	r4, r0
   22078:	ldr	r1, [r1]
   2207c:	ldr	r0, [r6, #48]	; 0x30
   22080:	tst	r0, #1
   22084:	bne	220e0 <myhtml_insertion_mode_in_row@@Base+0x78>
   22088:	sub	r0, r1, #126	; 0x7e
   2208c:	cmp	r0, #9
   22090:	bhi	22318 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22094:	mov	r2, #1
   22098:	movw	r3, #593	; 0x251
   2209c:	tst	r3, r2, lsl r0
   220a0:	bne	22334 <myhtml_insertion_mode_in_row@@Base+0x2cc>
   220a4:	mov	r3, #34	; 0x22
   220a8:	tst	r3, r2, lsl r0
   220ac:	beq	22318 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   220b0:	mov	r0, r4
   220b4:	bl	11858 <myhtml_tree_clear_stack_back_table_row_context@plt>
   220b8:	mov	r0, r4
   220bc:	mov	r1, r6
   220c0:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   220c4:	ldr	r0, [r4]
   220c8:	ldr	r1, [r0, #36]	; 0x24
   220cc:	mov	r0, r4
   220d0:	bl	11558 <myhtml_tree_active_formatting_append@plt>
   220d4:	mov	r0, #14
   220d8:	str	r0, [r4, #168]	; 0xa8
   220dc:	b	22374 <myhtml_insertion_mode_in_row@@Base+0x30c>
   220e0:	sub	r0, r1, #23
   220e4:	cmp	r0, #112	; 0x70
   220e8:	bhi	22380 <myhtml_insertion_mode_in_row@@Base+0x318>
   220ec:	mov	r5, #0
   220f0:	add	r2, pc, #4
   220f4:	ldr	r0, [r2, r0, lsl #2]
   220f8:	add	pc, r2, r0
   220fc:	andeq	r0, r0, ip, ror r2
   22100:	andeq	r0, r0, r4, lsl #5
   22104:	andeq	r0, r0, r4, lsl #5
   22108:	andeq	r0, r0, r4, lsl #5
   2210c:	andeq	r0, r0, ip, ror r2
   22110:	andeq	r0, r0, r4, lsl #5
   22114:	andeq	r0, r0, r4, lsl #5
   22118:	andeq	r0, r0, r4, lsl #5
   2211c:	andeq	r0, r0, ip, ror r2
   22120:	andeq	r0, r0, ip, ror r2
   22124:	andeq	r0, r0, r4, lsl #5
   22128:	andeq	r0, r0, r4, lsl #5
   2212c:	andeq	r0, r0, r4, lsl #5
   22130:	andeq	r0, r0, r4, lsl #5
   22134:	andeq	r0, r0, r4, lsl #5
   22138:	andeq	r0, r0, r4, lsl #5
   2213c:	andeq	r0, r0, r4, lsl #5
   22140:	andeq	r0, r0, r4, lsl #5
   22144:	andeq	r0, r0, r4, lsl #5
   22148:	andeq	r0, r0, r4, lsl #5
   2214c:	andeq	r0, r0, r4, lsl #5
   22150:	andeq	r0, r0, r4, lsl #5
   22154:	andeq	r0, r0, r4, lsl #5
   22158:	andeq	r0, r0, r4, lsl #5
   2215c:	andeq	r0, r0, r4, lsl #5
   22160:	andeq	r0, r0, r4, lsl #5
   22164:	andeq	r0, r0, r4, lsl #5
   22168:	andeq	r0, r0, r4, lsl #5
   2216c:	andeq	r0, r0, r4, lsl #5
   22170:	andeq	r0, r0, r4, lsl #5
   22174:	andeq	r0, r0, r4, lsl #5
   22178:	andeq	r0, r0, r4, lsl #5
   2217c:	andeq	r0, r0, r4, lsl #5
   22180:	andeq	r0, r0, r4, lsl #5
   22184:	andeq	r0, r0, r4, lsl #5
   22188:	andeq	r0, r0, r4, lsl #5
   2218c:	andeq	r0, r0, r4, lsl #5
   22190:	andeq	r0, r0, r4, lsl #5
   22194:	andeq	r0, r0, r4, lsl #5
   22198:	andeq	r0, r0, r4, lsl #5
   2219c:	andeq	r0, r0, r4, lsl #5
   221a0:	andeq	r0, r0, r4, lsl #5
   221a4:	andeq	r0, r0, ip, ror r2
   221a8:	andeq	r0, r0, r4, lsl #5
   221ac:	andeq	r0, r0, r4, lsl #5
   221b0:	andeq	r0, r0, r4, lsl #5
   221b4:	andeq	r0, r0, r4, lsl #5
   221b8:	andeq	r0, r0, r4, lsl #5
   221bc:	andeq	r0, r0, r4, lsl #5
   221c0:	andeq	r0, r0, r4, lsl #5
   221c4:	andeq	r0, r0, r4, lsl #5
   221c8:	andeq	r0, r0, r4, lsl #5
   221cc:	andeq	r0, r0, r4, lsl #5
   221d0:	andeq	r0, r0, r4, lsl #5
   221d4:	andeq	r0, r0, r4, lsl #5
   221d8:	andeq	r0, r0, r4, lsl #5
   221dc:	andeq	r0, r0, r4, lsl #5
   221e0:	andeq	r0, r0, r4, lsl #5
   221e4:	andeq	r0, r0, r4, lsl #5
   221e8:	andeq	r0, r0, r4, lsl #5
   221ec:	andeq	r0, r0, r4, lsl #5
   221f0:	andeq	r0, r0, r4, lsl #5
   221f4:	andeq	r0, r0, r4, lsl #5
   221f8:	andeq	r0, r0, r4, lsl #5
   221fc:	andeq	r0, r0, r4, lsl #5
   22200:	andeq	r0, r0, r4, lsl #5
   22204:	andeq	r0, r0, r4, lsl #5
   22208:	andeq	r0, r0, r4, lsl #5
   2220c:	andeq	r0, r0, r4, lsl #5
   22210:	andeq	r0, r0, r4, lsl #5
   22214:	andeq	r0, r0, r4, lsl #5
   22218:	andeq	r0, r0, r4, lsl #5
   2221c:	andeq	r0, r0, r4, lsl #5
   22220:	andeq	r0, r0, r4, lsl #5
   22224:	andeq	r0, r0, r4, lsl #5
   22228:	andeq	r0, r0, r4, lsl #5
   2222c:	andeq	r0, r0, r4, lsl #5
   22230:	andeq	r0, r0, r4, lsl #5
   22234:	andeq	r0, r0, r4, lsl #5
   22238:	andeq	r0, r0, r4, lsl #5
   2223c:	andeq	r0, r0, r4, lsl #5
   22240:	andeq	r0, r0, r4, lsl #5
   22244:	andeq	r0, r0, r4, lsl #5
   22248:	andeq	r0, r0, r4, lsl #5
   2224c:	andeq	r0, r0, r4, lsl #5
   22250:	andeq	r0, r0, r4, lsl #5
   22254:	andeq	r0, r0, r4, lsl #5
   22258:	andeq	r0, r0, r4, lsl #5
   2225c:	andeq	r0, r0, r4, lsl #5
   22260:	andeq	r0, r0, r4, lsl #5
   22264:	andeq	r0, r0, r4, lsl #5
   22268:	andeq	r0, r0, r4, lsl #5
   2226c:	andeq	r0, r0, r4, lsl #5
   22270:	andeq	r0, r0, r4, lsl #5
   22274:	andeq	r0, r0, r4, lsl #5
   22278:	andeq	r0, r0, r4, lsl #5
   2227c:	andeq	r0, r0, r4, lsl #5
   22280:	andeq	r0, r0, r4, lsl #5
   22284:	andeq	r0, r0, r4, lsl #5
   22288:	andeq	r0, r0, r4, lsl #5
   2228c:	andeq	r0, r0, r4, lsl #5
   22290:	andeq	r0, r0, r4, lsl #5
   22294:	ldrdeq	r0, [r0], -ip
   22298:	andeq	r0, r0, r4, asr #3
   2229c:	andeq	r0, r0, ip, ror r2
   222a0:	andeq	r0, r0, r4, lsl #5
   222a4:	andeq	r0, r0, r4, lsl #5
   222a8:	andeq	r0, r0, r4, asr #3
   222ac:	andeq	r0, r0, ip, ror r2
   222b0:	andeq	r0, r0, r4, asr #3
   222b4:	andeq	r0, r0, r4, lsl #5
   222b8:	andeq	r0, r0, r4, lsl #5
   222bc:	muleq	r0, r4, r2
   222c0:	mov	r0, r4
   222c4:	mov	r2, #1
   222c8:	mov	r3, #64	; 0x40
   222cc:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   222d0:	cmp	r0, #0
   222d4:	beq	22378 <myhtml_insertion_mode_in_row@@Base+0x310>
   222d8:	mov	r0, r4
   222dc:	mov	r1, #135	; 0x87
   222e0:	mov	r2, #1
   222e4:	mov	r3, #64	; 0x40
   222e8:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   222ec:	cmp	r0, #0
   222f0:	beq	22378 <myhtml_insertion_mode_in_row@@Base+0x310>
   222f4:	mov	r0, r4
   222f8:	bl	11858 <myhtml_tree_clear_stack_back_table_row_context@plt>
   222fc:	mov	r0, r4
   22300:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22304:	mov	r0, #12
   22308:	str	r0, [r4, #168]	; 0xa8
   2230c:	mov	r5, #1
   22310:	mov	r0, r5
   22314:	pop	{r4, r5, r6, sl, fp, pc}
   22318:	sub	r0, r1, #27
   2231c:	cmp	r0, #5
   22320:	bhi	22380 <myhtml_insertion_mode_in_row@@Base+0x318>
   22324:	mov	r1, #1
   22328:	mov	r2, #49	; 0x31
   2232c:	tst	r2, r1, lsl r0
   22330:	beq	22380 <myhtml_insertion_mode_in_row@@Base+0x318>
   22334:	mov	r5, #1
   22338:	mov	r0, r4
   2233c:	mov	r1, #135	; 0x87
   22340:	mov	r2, #1
   22344:	mov	r3, #64	; 0x40
   22348:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   2234c:	cmp	r0, #0
   22350:	beq	22374 <myhtml_insertion_mode_in_row@@Base+0x30c>
   22354:	mov	r0, r4
   22358:	bl	11858 <myhtml_tree_clear_stack_back_table_row_context@plt>
   2235c:	mov	r0, r4
   22360:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22364:	mov	r0, #12
   22368:	str	r0, [r4, #168]	; 0xa8
   2236c:	mov	r0, r5
   22370:	pop	{r4, r5, r6, sl, fp, pc}
   22374:	mov	r5, #0
   22378:	mov	r0, r5
   2237c:	pop	{r4, r5, r6, sl, fp, pc}
   22380:	mov	r0, r4
   22384:	mov	r1, r6
   22388:	pop	{r4, r5, r6, sl, fp, lr}
   2238c:	b	20f78 <myhtml_insertion_mode_in_table@@Base>
   22390:	mov	r0, r4
   22394:	mov	r1, #135	; 0x87
   22398:	mov	r2, #1
   2239c:	mov	r3, #64	; 0x40
   223a0:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   223a4:	cmp	r0, #0
   223a8:	bne	22354 <myhtml_insertion_mode_in_row@@Base+0x2ec>
   223ac:	b	22378 <myhtml_insertion_mode_in_row@@Base+0x310>

000223b0 <myhtml_insertion_mode_in_cell@@Base>:
   223b0:	push	{r4, r5, r6, r7, fp, lr}
   223b4:	add	fp, sp, #16
   223b8:	mov	r5, r1
   223bc:	mov	r4, r0
   223c0:	ldr	r1, [r1]
   223c4:	ldr	r0, [r5, #48]	; 0x30
   223c8:	tst	r0, #1
   223cc:	bne	22460 <myhtml_insertion_mode_in_cell@@Base+0xb0>
   223d0:	sub	r0, r1, #126	; 0x7e
   223d4:	cmp	r0, #9
   223d8:	bhi	223ec <myhtml_insertion_mode_in_cell@@Base+0x3c>
   223dc:	mov	r2, #1
   223e0:	movw	r3, #627	; 0x273
   223e4:	tst	r3, r2, lsl r0
   223e8:	bne	22408 <myhtml_insertion_mode_in_cell@@Base+0x58>
   223ec:	sub	r0, r1, #27
   223f0:	cmp	r0, #5
   223f4:	bhi	22720 <myhtml_insertion_mode_in_cell@@Base+0x370>
   223f8:	mov	r1, #1
   223fc:	mov	r2, #49	; 0x31
   22400:	tst	r2, r1, lsl r0
   22404:	beq	22720 <myhtml_insertion_mode_in_cell@@Base+0x370>
   22408:	mov	r0, r4
   2240c:	mov	r1, #127	; 0x7f
   22410:	mov	r2, #1
   22414:	mov	r3, #64	; 0x40
   22418:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   2241c:	mov	r7, r0
   22420:	mov	r0, r4
   22424:	mov	r1, #131	; 0x83
   22428:	mov	r2, #1
   2242c:	mov	r3, #64	; 0x40
   22430:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22434:	mov	r1, r0
   22438:	orrs	r0, r7, r0
   2243c:	mov	r6, #0
   22440:	beq	22718 <myhtml_insertion_mode_in_cell@@Base+0x368>
   22444:	cmp	r7, #0
   22448:	movne	r1, r7
   2244c:	mov	r0, r4
   22450:	mov	r2, r5
   22454:	bl	120f8 <myhtml_tree_close_cell@plt>
   22458:	mov	r6, #1
   2245c:	b	22718 <myhtml_insertion_mode_in_cell@@Base+0x368>
   22460:	sub	r0, r1, #23
   22464:	cmp	r0, #112	; 0x70
   22468:	bhi	22730 <myhtml_insertion_mode_in_cell@@Base+0x380>
   2246c:	mov	r6, #0
   22470:	add	r2, pc, #4
   22474:	ldr	r0, [r2, r0, lsl #2]
   22478:	add	pc, r2, r0
   2247c:	muleq	r0, ip, r2
   22480:			; <UNDEFINED> instruction: 0x000002b4
   22484:			; <UNDEFINED> instruction: 0x000002b4
   22488:			; <UNDEFINED> instruction: 0x000002b4
   2248c:	muleq	r0, ip, r2
   22490:			; <UNDEFINED> instruction: 0x000002b4
   22494:			; <UNDEFINED> instruction: 0x000002b4
   22498:			; <UNDEFINED> instruction: 0x000002b4
   2249c:	muleq	r0, ip, r2
   224a0:	muleq	r0, ip, r2
   224a4:			; <UNDEFINED> instruction: 0x000002b4
   224a8:			; <UNDEFINED> instruction: 0x000002b4
   224ac:			; <UNDEFINED> instruction: 0x000002b4
   224b0:			; <UNDEFINED> instruction: 0x000002b4
   224b4:			; <UNDEFINED> instruction: 0x000002b4
   224b8:			; <UNDEFINED> instruction: 0x000002b4
   224bc:			; <UNDEFINED> instruction: 0x000002b4
   224c0:			; <UNDEFINED> instruction: 0x000002b4
   224c4:			; <UNDEFINED> instruction: 0x000002b4
   224c8:			; <UNDEFINED> instruction: 0x000002b4
   224cc:			; <UNDEFINED> instruction: 0x000002b4
   224d0:			; <UNDEFINED> instruction: 0x000002b4
   224d4:			; <UNDEFINED> instruction: 0x000002b4
   224d8:			; <UNDEFINED> instruction: 0x000002b4
   224dc:			; <UNDEFINED> instruction: 0x000002b4
   224e0:			; <UNDEFINED> instruction: 0x000002b4
   224e4:			; <UNDEFINED> instruction: 0x000002b4
   224e8:			; <UNDEFINED> instruction: 0x000002b4
   224ec:			; <UNDEFINED> instruction: 0x000002b4
   224f0:			; <UNDEFINED> instruction: 0x000002b4
   224f4:			; <UNDEFINED> instruction: 0x000002b4
   224f8:			; <UNDEFINED> instruction: 0x000002b4
   224fc:			; <UNDEFINED> instruction: 0x000002b4
   22500:			; <UNDEFINED> instruction: 0x000002b4
   22504:			; <UNDEFINED> instruction: 0x000002b4
   22508:			; <UNDEFINED> instruction: 0x000002b4
   2250c:			; <UNDEFINED> instruction: 0x000002b4
   22510:			; <UNDEFINED> instruction: 0x000002b4
   22514:			; <UNDEFINED> instruction: 0x000002b4
   22518:			; <UNDEFINED> instruction: 0x000002b4
   2251c:			; <UNDEFINED> instruction: 0x000002b4
   22520:			; <UNDEFINED> instruction: 0x000002b4
   22524:	muleq	r0, ip, r2
   22528:			; <UNDEFINED> instruction: 0x000002b4
   2252c:			; <UNDEFINED> instruction: 0x000002b4
   22530:			; <UNDEFINED> instruction: 0x000002b4
   22534:			; <UNDEFINED> instruction: 0x000002b4
   22538:			; <UNDEFINED> instruction: 0x000002b4
   2253c:			; <UNDEFINED> instruction: 0x000002b4
   22540:			; <UNDEFINED> instruction: 0x000002b4
   22544:			; <UNDEFINED> instruction: 0x000002b4
   22548:			; <UNDEFINED> instruction: 0x000002b4
   2254c:			; <UNDEFINED> instruction: 0x000002b4
   22550:			; <UNDEFINED> instruction: 0x000002b4
   22554:			; <UNDEFINED> instruction: 0x000002b4
   22558:			; <UNDEFINED> instruction: 0x000002b4
   2255c:			; <UNDEFINED> instruction: 0x000002b4
   22560:			; <UNDEFINED> instruction: 0x000002b4
   22564:			; <UNDEFINED> instruction: 0x000002b4
   22568:			; <UNDEFINED> instruction: 0x000002b4
   2256c:			; <UNDEFINED> instruction: 0x000002b4
   22570:			; <UNDEFINED> instruction: 0x000002b4
   22574:			; <UNDEFINED> instruction: 0x000002b4
   22578:			; <UNDEFINED> instruction: 0x000002b4
   2257c:			; <UNDEFINED> instruction: 0x000002b4
   22580:			; <UNDEFINED> instruction: 0x000002b4
   22584:			; <UNDEFINED> instruction: 0x000002b4
   22588:			; <UNDEFINED> instruction: 0x000002b4
   2258c:			; <UNDEFINED> instruction: 0x000002b4
   22590:			; <UNDEFINED> instruction: 0x000002b4
   22594:			; <UNDEFINED> instruction: 0x000002b4
   22598:			; <UNDEFINED> instruction: 0x000002b4
   2259c:			; <UNDEFINED> instruction: 0x000002b4
   225a0:			; <UNDEFINED> instruction: 0x000002b4
   225a4:			; <UNDEFINED> instruction: 0x000002b4
   225a8:			; <UNDEFINED> instruction: 0x000002b4
   225ac:			; <UNDEFINED> instruction: 0x000002b4
   225b0:			; <UNDEFINED> instruction: 0x000002b4
   225b4:			; <UNDEFINED> instruction: 0x000002b4
   225b8:			; <UNDEFINED> instruction: 0x000002b4
   225bc:			; <UNDEFINED> instruction: 0x000002b4
   225c0:			; <UNDEFINED> instruction: 0x000002b4
   225c4:			; <UNDEFINED> instruction: 0x000002b4
   225c8:			; <UNDEFINED> instruction: 0x000002b4
   225cc:			; <UNDEFINED> instruction: 0x000002b4
   225d0:			; <UNDEFINED> instruction: 0x000002b4
   225d4:			; <UNDEFINED> instruction: 0x000002b4
   225d8:			; <UNDEFINED> instruction: 0x000002b4
   225dc:			; <UNDEFINED> instruction: 0x000002b4
   225e0:			; <UNDEFINED> instruction: 0x000002b4
   225e4:			; <UNDEFINED> instruction: 0x000002b4
   225e8:			; <UNDEFINED> instruction: 0x000002b4
   225ec:			; <UNDEFINED> instruction: 0x000002b4
   225f0:			; <UNDEFINED> instruction: 0x000002b4
   225f4:			; <UNDEFINED> instruction: 0x000002b4
   225f8:			; <UNDEFINED> instruction: 0x000002b4
   225fc:			; <UNDEFINED> instruction: 0x000002b4
   22600:			; <UNDEFINED> instruction: 0x000002b4
   22604:			; <UNDEFINED> instruction: 0x000002b4
   22608:			; <UNDEFINED> instruction: 0x000002b4
   2260c:			; <UNDEFINED> instruction: 0x000002b4
   22610:			; <UNDEFINED> instruction: 0x000002b4
   22614:	andeq	r0, r0, r4, asr #3
   22618:	andeq	r0, r0, r4, asr #3
   2261c:	andeq	r0, r0, r4, lsr r2
   22620:			; <UNDEFINED> instruction: 0x000002b4
   22624:			; <UNDEFINED> instruction: 0x000002b4
   22628:	andeq	r0, r0, r4, asr #3
   2262c:	andeq	r0, r0, r4, lsr r2
   22630:	andeq	r0, r0, r4, asr #3
   22634:			; <UNDEFINED> instruction: 0x000002b4
   22638:			; <UNDEFINED> instruction: 0x000002b4
   2263c:	andeq	r0, r0, r4, asr #3
   22640:	mov	r0, r4
   22644:	mov	r2, #1
   22648:	mov	r3, #64	; 0x40
   2264c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22650:	cmp	r0, #0
   22654:	beq	22718 <myhtml_insertion_mode_in_cell@@Base+0x368>
   22658:	mov	r6, #1
   2265c:	mov	r0, r4
   22660:	mov	r1, #127	; 0x7f
   22664:	mov	r2, #1
   22668:	mov	r3, #64	; 0x40
   2266c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22670:	cmp	r0, #0
   22674:	bne	22698 <myhtml_insertion_mode_in_cell@@Base+0x2e8>
   22678:	mov	r6, #1
   2267c:	mov	r0, r4
   22680:	mov	r1, #131	; 0x83
   22684:	mov	r2, #1
   22688:	mov	r3, #64	; 0x40
   2268c:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22690:	cmp	r0, #0
   22694:	beq	22718 <myhtml_insertion_mode_in_cell@@Base+0x368>
   22698:	mov	r1, r0
   2269c:	mov	r0, r4
   226a0:	mov	r2, r5
   226a4:	bl	120f8 <myhtml_tree_close_cell@plt>
   226a8:	mov	r0, r6
   226ac:	pop	{r4, r5, r6, r7, fp, pc}
   226b0:	mov	r0, r4
   226b4:	mov	r2, #1
   226b8:	mov	r3, #64	; 0x40
   226bc:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   226c0:	cmp	r0, #0
   226c4:	beq	22718 <myhtml_insertion_mode_in_cell@@Base+0x368>
   226c8:	mov	r6, #0
   226cc:	mov	r0, r4
   226d0:	mov	r1, #0
   226d4:	mov	r2, #0
   226d8:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   226dc:	mov	r0, r4
   226e0:	bl	11a5c <myhtml_tree_current_node@plt>
   226e4:	ldr	r1, [r5]
   226e8:	bl	11ea0 <myhtml_is_html_node@plt>
   226ec:	ldr	r1, [r5]
   226f0:	mov	r0, r4
   226f4:	mov	r2, #1
   226f8:	mov	r3, #0
   226fc:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   22700:	mov	r0, r4
   22704:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22708:	mov	r0, #13
   2270c:	str	r0, [r4, #168]	; 0xa8
   22710:	mov	r0, r6
   22714:	pop	{r4, r5, r6, r7, fp, pc}
   22718:	mov	r0, r6
   2271c:	pop	{r4, r5, r6, r7, fp, pc}
   22720:	mov	r0, r4
   22724:	mov	r1, r5
   22728:	pop	{r4, r5, r6, r7, fp, lr}
   2272c:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   22730:	mov	r0, r4
   22734:	mov	r1, r5
   22738:	pop	{r4, r5, r6, r7, fp, lr}
   2273c:	b	20f78 <myhtml_insertion_mode_in_table@@Base>

00022740 <myhtml_insertion_mode_in_select@@Base>:
   22740:	push	{r4, r5, r6, sl, fp, lr}
   22744:	add	fp, sp, #16
   22748:	mov	r6, r1
   2274c:	mov	r5, r0
   22750:	ldr	r0, [r1]
   22754:	ldr	r1, [r1, #48]	; 0x30
   22758:	tst	r1, #1
   2275c:	bne	228c8 <myhtml_insertion_mode_in_select@@Base+0x188>
   22760:	mov	r4, #0
   22764:	cmp	r0, #64	; 0x40
   22768:	ble	22a3c <myhtml_insertion_mode_in_select@@Base+0x2fc>
   2276c:	sub	r1, r0, #65	; 0x41
   22770:	cmp	r1, #64	; 0x40
   22774:	bhi	22a68 <myhtml_insertion_mode_in_select@@Base+0x328>
   22778:	add	r0, pc, #4
   2277c:	ldr	r1, [r0, r1, lsl #2]
   22780:	add	pc, r0, r1
   22784:	andeq	r0, r0, ip, ror #5
   22788:	andeq	r0, r0, ip, lsr #7
   2278c:	andeq	r0, r0, ip, lsr #7
   22790:	andeq	r0, r0, ip, lsr #7
   22794:	andeq	r0, r0, ip, lsr #7
   22798:	andeq	r0, r0, r4, lsl #2
   2279c:	andeq	r0, r0, ip, lsr #7
   227a0:	andeq	r0, r0, ip, lsr #7
   227a4:	andeq	r0, r0, ip, lsr #7
   227a8:	andeq	r0, r0, r4, lsl #2
   227ac:	andeq	r0, r0, ip, lsr #7
   227b0:	andeq	r0, r0, ip, lsr #7
   227b4:	andeq	r0, r0, ip, lsr #7
   227b8:	andeq	r0, r0, ip, lsr #7
   227bc:	andeq	r0, r0, ip, lsr #7
   227c0:	andeq	r0, r0, ip, lsr #7
   227c4:	andeq	r0, r0, ip, lsr #7
   227c8:	andeq	r0, r0, ip, lsr #7
   227cc:	andeq	r0, r0, ip, lsr #7
   227d0:	andeq	r0, r0, ip, lsr #7
   227d4:	andeq	r0, r0, ip, lsr #7
   227d8:	andeq	r0, r0, ip, lsr #7
   227dc:	andeq	r0, r0, ip, lsr #7
   227e0:	andeq	r0, r0, ip, lsr #7
   227e4:	andeq	r0, r0, ip, lsr #7
   227e8:	andeq	r0, r0, ip, lsr #7
   227ec:	andeq	r0, r0, ip, lsr #7
   227f0:	andeq	r0, r0, ip, lsr #7
   227f4:	andeq	r0, r0, ip, lsr #7
   227f8:	andeq	r0, r0, ip, lsr #7
   227fc:	andeq	r0, r0, ip, lsr #7
   22800:	strdeq	r0, [r0], -ip
   22804:	andeq	r0, r0, r0, asr #6
   22808:	andeq	r0, r0, ip, lsr #7
   2280c:	andeq	r0, r0, ip, lsr #7
   22810:	andeq	r0, r0, ip, lsr #7
   22814:	andeq	r0, r0, ip, lsr #7
   22818:	andeq	r0, r0, ip, lsr #7
   2281c:	andeq	r0, r0, ip, lsr #7
   22820:	andeq	r0, r0, ip, lsr #7
   22824:	andeq	r0, r0, ip, lsr #7
   22828:	andeq	r0, r0, ip, lsr #7
   2282c:	andeq	r0, r0, ip, lsr #7
   22830:	andeq	r0, r0, ip, lsr #7
   22834:	andeq	r0, r0, ip, lsr #7
   22838:	andeq	r0, r0, ip, lsr #7
   2283c:	andeq	r0, r0, ip, lsr #7
   22840:	andeq	r0, r0, r4, asr #4
   22844:	andeq	r0, r0, ip, lsr #7
   22848:	andeq	r0, r0, r4, asr r2
   2284c:	andeq	r0, r0, ip, lsr #7
   22850:	andeq	r0, r0, ip, lsr #7
   22854:	andeq	r0, r0, ip, lsr #7
   22858:	andeq	r0, r0, ip, lsr #7
   2285c:	andeq	r0, r0, ip, lsr #7
   22860:	andeq	r0, r0, ip, lsr #7
   22864:	andeq	r0, r0, ip, lsr #7
   22868:	andeq	r0, r0, ip, lsr #7
   2286c:	andeq	r0, r0, ip, lsr #7
   22870:	andeq	r0, r0, ip, lsr #7
   22874:	andeq	r0, r0, ip, lsr #7
   22878:	andeq	r0, r0, ip, lsr #7
   2287c:	andeq	r0, r0, ip, lsr #7
   22880:	andeq	r0, r0, r4, asr #4
   22884:	andeq	r0, r0, r4, lsl #2
   22888:	mov	r0, r5
   2288c:	mov	r1, #114	; 0x72
   22890:	mov	r2, #1
   22894:	mov	r3, #128	; 0x80
   22898:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   2289c:	cmp	r0, #0
   228a0:	beq	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   228a4:	mov	r1, r0
   228a8:	mov	r0, r5
   228ac:	mov	r2, #0
   228b0:	bl	115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   228b4:	mov	r0, r5
   228b8:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   228bc:	mov	r4, #1
   228c0:	mov	r0, r4
   228c4:	pop	{r4, r5, r6, sl, fp, pc}
   228c8:	sub	r0, r0, #96	; 0x60
   228cc:	mov	r4, #0
   228d0:	cmp	r0, #32
   228d4:	bhi	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   228d8:	add	r1, pc, #4
   228dc:	ldr	r0, [r1, r0, lsl #2]
   228e0:	add	pc, r1, r0
   228e4:	andeq	r0, r0, r4, lsl #1
   228e8:	andeq	r0, r0, r0, lsr r1
   228ec:	andeq	r0, r0, ip, asr #4
   228f0:	andeq	r0, r0, ip, asr #4
   228f4:	andeq	r0, r0, ip, asr #4
   228f8:	andeq	r0, r0, ip, asr #4
   228fc:	andeq	r0, r0, ip, asr #4
   22900:	andeq	r0, r0, ip, asr #4
   22904:	andeq	r0, r0, ip, asr #4
   22908:	andeq	r0, r0, ip, asr #4
   2290c:	andeq	r0, r0, ip, asr #4
   22910:	andeq	r0, r0, ip, asr #4
   22914:	andeq	r0, r0, ip, asr #4
   22918:	andeq	r0, r0, ip, asr #4
   2291c:	andeq	r0, r0, ip, asr #4
   22920:	andeq	r0, r0, ip, asr #4
   22924:	andeq	r0, r0, ip, asr #4
   22928:	andeq	r0, r0, ip, asr #4
   2292c:	strdeq	r0, [r0], -r4
   22930:	andeq	r0, r0, ip, asr #4
   22934:	andeq	r0, r0, ip, asr #4
   22938:	andeq	r0, r0, ip, asr #4
   2293c:	andeq	r0, r0, ip, asr #4
   22940:	andeq	r0, r0, ip, asr #4
   22944:	andeq	r0, r0, ip, asr #4
   22948:	andeq	r0, r0, ip, asr #4
   2294c:	andeq	r0, r0, ip, asr #4
   22950:	andeq	r0, r0, ip, asr #4
   22954:	andeq	r0, r0, ip, asr #4
   22958:	andeq	r0, r0, ip, asr #4
   2295c:	andeq	r0, r0, ip, asr #4
   22960:	andeq	r0, r0, ip, asr #4
   22964:	andeq	r0, r0, r4, ror #1
   22968:	mov	r0, r5
   2296c:	bl	11a5c <myhtml_tree_current_node@plt>
   22970:	mov	r1, #97	; 0x61
   22974:	bl	11ea0 <myhtml_is_html_node@plt>
   22978:	cmp	r0, #0
   2297c:	beq	229b8 <myhtml_insertion_mode_in_select@@Base+0x278>
   22980:	ldr	r0, [r5, #128]	; 0x80
   22984:	ldr	r1, [r0, #4]
   22988:	cmp	r1, #2
   2298c:	bcc	229b8 <myhtml_insertion_mode_in_select@@Base+0x278>
   22990:	ldr	r1, [r0]
   22994:	ldr	r0, [r0, #4]
   22998:	add	r0, r1, r0, lsl #2
   2299c:	ldr	r0, [r0, #-8]
   229a0:	mov	r1, #96	; 0x60
   229a4:	bl	11ea0 <myhtml_is_html_node@plt>
   229a8:	cmp	r0, #0
   229ac:	beq	229b8 <myhtml_insertion_mode_in_select@@Base+0x278>
   229b0:	mov	r0, r5
   229b4:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   229b8:	mov	r0, r5
   229bc:	bl	11a5c <myhtml_tree_current_node@plt>
   229c0:	mov	r1, #96	; 0x60
   229c4:	b	22a20 <myhtml_insertion_mode_in_select@@Base+0x2e0>
   229c8:	mov	r0, r5
   229cc:	mov	r1, r6
   229d0:	pop	{r4, r5, r6, sl, fp, lr}
   229d4:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   229d8:	mov	r0, r5
   229dc:	mov	r1, #114	; 0x72
   229e0:	mov	r2, #1
   229e4:	mov	r3, #128	; 0x80
   229e8:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   229ec:	cmp	r0, #0
   229f0:	beq	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   229f4:	mov	r1, r0
   229f8:	mov	r4, #0
   229fc:	mov	r0, r5
   22a00:	mov	r2, #0
   22a04:	bl	115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   22a08:	mov	r0, r5
   22a0c:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22a10:	b	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   22a14:	mov	r0, r5
   22a18:	bl	11a5c <myhtml_tree_current_node@plt>
   22a1c:	mov	r1, #97	; 0x61
   22a20:	bl	11ea0 <myhtml_is_html_node@plt>
   22a24:	cmp	r0, #0
   22a28:	beq	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   22a2c:	mov	r0, r5
   22a30:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22a34:	mov	r0, r4
   22a38:	pop	{r4, r5, r6, sl, fp, pc}
   22a3c:	cmp	r0, #1
   22a40:	beq	22af8 <myhtml_insertion_mode_in_select@@Base+0x3b8>
   22a44:	cmp	r0, #2
   22a48:	bne	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   22a4c:	mov	r4, #0
   22a50:	mov	r0, r5
   22a54:	mov	r1, r6
   22a58:	mov	r2, #0
   22a5c:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   22a60:	mov	r0, r4
   22a64:	pop	{r4, r5, r6, sl, fp, pc}
   22a68:	cmp	r0, #251	; 0xfb
   22a6c:	bne	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   22a70:	mov	r0, r5
   22a74:	mov	r1, r6
   22a78:	pop	{r4, r5, r6, sl, fp, lr}
   22a7c:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   22a80:	mov	r0, r5
   22a84:	bl	11a5c <myhtml_tree_current_node@plt>
   22a88:	ldr	r1, [r0, #4]
   22a8c:	cmp	r1, #97	; 0x61
   22a90:	ldreq	r0, [r0, #8]
   22a94:	cmpeq	r0, #1
   22a98:	beq	22b38 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22a9c:	mov	r0, r5
   22aa0:	bl	11a5c <myhtml_tree_current_node@plt>
   22aa4:	ldr	r1, [r6]
   22aa8:	ldr	r2, [r0, #4]
   22aac:	cmp	r2, r1
   22ab0:	bne	22ae4 <myhtml_insertion_mode_in_select@@Base+0x3a4>
   22ab4:	ldr	r0, [r0, #8]
   22ab8:	cmp	r0, #1
   22abc:	beq	22adc <myhtml_insertion_mode_in_select@@Base+0x39c>
   22ac0:	b	22ae4 <myhtml_insertion_mode_in_select@@Base+0x3a4>
   22ac4:	mov	r0, r5
   22ac8:	bl	11a5c <myhtml_tree_current_node@plt>
   22acc:	ldr	r1, [r6]
   22ad0:	bl	11ea0 <myhtml_is_html_node@plt>
   22ad4:	cmp	r0, #0
   22ad8:	beq	22ae4 <myhtml_insertion_mode_in_select@@Base+0x3a4>
   22adc:	mov	r0, r5
   22ae0:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22ae4:	mov	r0, r5
   22ae8:	mov	r1, r6
   22aec:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   22af0:	mov	r0, r4
   22af4:	pop	{r4, r5, r6, sl, fp, pc}
   22af8:	ldr	r0, [r6, #48]	; 0x30
   22afc:	tst	r0, #2048	; 0x800
   22b00:	beq	22b1c <myhtml_insertion_mode_in_select@@Base+0x3dc>
   22b04:	mov	r0, r5
   22b08:	mov	r1, r6
   22b0c:	bl	11be8 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   22b10:	ldr	r0, [r6, #12]
   22b14:	cmp	r0, #0
   22b18:	beq	22b30 <myhtml_insertion_mode_in_select@@Base+0x3f0>
   22b1c:	mov	r0, r5
   22b20:	mov	r1, r6
   22b24:	bl	11420 <myhtml_tree_node_insert_text@plt>
   22b28:	mov	r0, r4
   22b2c:	pop	{r4, r5, r6, sl, fp, pc}
   22b30:	mov	r0, r4
   22b34:	pop	{r4, r5, r6, sl, fp, pc}
   22b38:	mov	r0, r5
   22b3c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22b40:	b	22a9c <myhtml_insertion_mode_in_select@@Base+0x35c>

00022b44 <myhtml_insertion_mode_in_select_in_table@@Base>:
   22b44:	push	{r4, r5, fp, lr}
   22b48:	add	fp, sp, #8
   22b4c:	mov	r4, r0
   22b50:	ldr	r2, [r1]
   22b54:	ldr	r0, [r1, #48]	; 0x30
   22b58:	tst	r0, #1
   22b5c:	bne	22b84 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   22b60:	sub	r0, r2, #125	; 0x7d
   22b64:	cmp	r0, #10
   22b68:	bhi	22bec <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   22b6c:	mov	r3, #1
   22b70:	movw	r5, #1255	; 0x4e7
   22b74:	tst	r5, r3, lsl r0
   22b78:	beq	22bec <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   22b7c:	mov	r5, #1
   22b80:	b	22bc8 <myhtml_insertion_mode_in_select_in_table@@Base+0x84>
   22b84:	sub	r0, r2, #125	; 0x7d
   22b88:	cmp	r0, #10
   22b8c:	bhi	22bf8 <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   22b90:	mov	r3, #1
   22b94:	movw	r5, #1255	; 0x4e7
   22b98:	tst	r5, r3, lsl r0
   22b9c:	beq	22bf8 <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   22ba0:	mov	r5, #1
   22ba4:	mov	r0, r4
   22ba8:	mov	r1, r2
   22bac:	mov	r2, #1
   22bb0:	mov	r3, #64	; 0x40
   22bb4:	bl	122b4 <myhtml_tree_element_in_scope@plt>
   22bb8:	cmp	r0, #0
   22bbc:	moveq	r5, #0
   22bc0:	moveq	r0, r5
   22bc4:	popeq	{r4, r5, fp, pc}
   22bc8:	mov	r0, r4
   22bcc:	mov	r1, #114	; 0x72
   22bd0:	mov	r2, #1
   22bd4:	mov	r3, #0
   22bd8:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   22bdc:	mov	r0, r4
   22be0:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22be4:	mov	r0, r5
   22be8:	pop	{r4, r5, fp, pc}
   22bec:	cmp	r2, #27
   22bf0:	beq	22b7c <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   22bf4:	b	22c00 <myhtml_insertion_mode_in_select_in_table@@Base+0xbc>
   22bf8:	cmp	r2, #27
   22bfc:	beq	22ba0 <myhtml_insertion_mode_in_select_in_table@@Base+0x5c>
   22c00:	mov	r0, r4
   22c04:	pop	{r4, r5, fp, lr}
   22c08:	b	22740 <myhtml_insertion_mode_in_select@@Base>

00022c0c <myhtml_insertion_mode_after_body@@Base>:
   22c0c:	push	{r4, r5, r6, sl, fp, lr}
   22c10:	add	fp, sp, #16
   22c14:	mov	r5, r1
   22c18:	ldr	r1, [r1]
   22c1c:	ldr	r2, [r5, #48]	; 0x30
   22c20:	tst	r2, #1
   22c24:	bne	22c50 <myhtml_insertion_mode_after_body@@Base+0x44>
   22c28:	mov	r4, #0
   22c2c:	cmp	r1, #2
   22c30:	ble	22c78 <myhtml_insertion_mode_after_body@@Base+0x6c>
   22c34:	cmp	r1, #3
   22c38:	beq	22ce4 <myhtml_insertion_mode_after_body@@Base+0xd8>
   22c3c:	cmp	r1, #65	; 0x41
   22c40:	beq	22cec <myhtml_insertion_mode_after_body@@Base+0xe0>
   22c44:	cmp	r1, #251	; 0xfb
   22c48:	beq	22ce4 <myhtml_insertion_mode_after_body@@Base+0xd8>
   22c4c:	b	22cd8 <myhtml_insertion_mode_after_body@@Base+0xcc>
   22c50:	cmp	r1, #65	; 0x41
   22c54:	bne	22cd8 <myhtml_insertion_mode_after_body@@Base+0xcc>
   22c58:	ldr	r1, [r0, #88]	; 0x58
   22c5c:	mov	r4, #0
   22c60:	cmp	r1, #0
   22c64:	bne	22ce4 <myhtml_insertion_mode_after_body@@Base+0xd8>
   22c68:	mov	r1, #21
   22c6c:	str	r1, [r0, #168]	; 0xa8
   22c70:	mov	r0, r4
   22c74:	pop	{r4, r5, r6, sl, fp, pc}
   22c78:	cmp	r1, #1
   22c7c:	beq	22ccc <myhtml_insertion_mode_after_body@@Base+0xc0>
   22c80:	cmp	r1, #2
   22c84:	bne	22cd8 <myhtml_insertion_mode_after_body@@Base+0xcc>
   22c88:	ldr	r1, [r0, #128]	; 0x80
   22c8c:	ldr	r2, [r1, #4]
   22c90:	cmp	r2, #0
   22c94:	beq	22ce4 <myhtml_insertion_mode_after_body@@Base+0xd8>
   22c98:	ldr	r1, [r1]
   22c9c:	ldr	r6, [r1]
   22ca0:	bl	11474 <myhtml_tree_node_create@plt>
   22ca4:	mov	r1, r0
   22ca8:	mov	r0, #2
   22cac:	str	r0, [r1, #4]
   22cb0:	str	r5, [r1, #32]
   22cb4:	ldr	r0, [r6, #8]
   22cb8:	str	r0, [r1, #8]
   22cbc:	mov	r0, r6
   22cc0:	bl	11aec <myhtml_tree_node_add_child@plt>
   22cc4:	mov	r0, r4
   22cc8:	pop	{r4, r5, r6, sl, fp, pc}
   22ccc:	ldr	r1, [r5, #48]	; 0x30
   22cd0:	tst	r1, #8
   22cd4:	bne	22cec <myhtml_insertion_mode_after_body@@Base+0xe0>
   22cd8:	mov	r1, #6
   22cdc:	str	r1, [r0, #168]	; 0xa8
   22ce0:	mov	r4, #1
   22ce4:	mov	r0, r4
   22ce8:	pop	{r4, r5, r6, sl, fp, pc}
   22cec:	mov	r1, r5
   22cf0:	pop	{r4, r5, r6, sl, fp, lr}
   22cf4:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>

00022cf8 <myhtml_insertion_mode_in_frameset@@Base>:
   22cf8:	push	{r4, r5, fp, lr}
   22cfc:	add	fp, sp, #8
   22d00:	mov	r5, r1
   22d04:	mov	r4, r0
   22d08:	ldr	r0, [r1]
   22d0c:	ldr	r1, [r1, #48]	; 0x30
   22d10:	tst	r1, #1
   22d14:	bne	22df4 <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   22d18:	cmp	r0, #52	; 0x34
   22d1c:	ble	22e50 <myhtml_insertion_mode_in_frameset@@Base+0x158>
   22d20:	sub	r1, r0, #53	; 0x35
   22d24:	cmp	r1, #39	; 0x27
   22d28:	bhi	22e78 <myhtml_insertion_mode_in_frameset@@Base+0x180>
   22d2c:	add	r0, pc, #4
   22d30:	ldr	r1, [r0, r1, lsl #2]
   22d34:	add	pc, r0, r1
   22d38:	andeq	r0, r0, r0, lsr #1
   22d3c:	andeq	r0, r0, r8, asr r1
   22d40:	andeq	r0, r0, ip, asr #3
   22d44:	andeq	r0, r0, ip, asr #3
   22d48:	andeq	r0, r0, ip, asr #3
   22d4c:	andeq	r0, r0, ip, asr #3
   22d50:	andeq	r0, r0, ip, asr #3
   22d54:	andeq	r0, r0, ip, asr #3
   22d58:	andeq	r0, r0, ip, asr #3
   22d5c:	andeq	r0, r0, ip, asr #3
   22d60:	andeq	r0, r0, ip, asr #3
   22d64:	andeq	r0, r0, ip, asr #3
   22d68:	andeq	r0, r0, ip, ror #2
   22d6c:	andeq	r0, r0, ip, asr #3
   22d70:	andeq	r0, r0, ip, asr #3
   22d74:	andeq	r0, r0, ip, asr #3
   22d78:	andeq	r0, r0, ip, asr #3
   22d7c:	andeq	r0, r0, ip, asr #3
   22d80:	andeq	r0, r0, ip, asr #3
   22d84:	andeq	r0, r0, ip, asr #3
   22d88:	andeq	r0, r0, ip, asr #3
   22d8c:	andeq	r0, r0, ip, asr #3
   22d90:	andeq	r0, r0, ip, asr #3
   22d94:	andeq	r0, r0, ip, asr #3
   22d98:	andeq	r0, r0, ip, asr #3
   22d9c:	andeq	r0, r0, ip, asr #3
   22da0:	andeq	r0, r0, ip, asr #3
   22da4:	andeq	r0, r0, ip, asr #3
   22da8:	andeq	r0, r0, ip, asr #3
   22dac:	andeq	r0, r0, ip, asr #3
   22db0:	andeq	r0, r0, ip, asr #3
   22db4:	andeq	r0, r0, ip, asr #3
   22db8:	andeq	r0, r0, ip, asr #3
   22dbc:	andeq	r0, r0, ip, asr #3
   22dc0:	andeq	r0, r0, ip, asr #3
   22dc4:	andeq	r0, r0, ip, asr #3
   22dc8:	andeq	r0, r0, ip, asr #3
   22dcc:	andeq	r0, r0, ip, asr #3
   22dd0:	andeq	r0, r0, ip, asr #3
   22dd4:	andeq	r0, r0, ip, ror r1
   22dd8:	mov	r0, r4
   22ddc:	mov	r1, r5
   22de0:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   22de4:	mov	r0, r4
   22de8:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22dec:	mov	r0, #0
   22df0:	pop	{r4, r5, fp, pc}
   22df4:	cmp	r0, #54	; 0x36
   22df8:	bne	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22dfc:	mov	r0, r4
   22e00:	bl	11a5c <myhtml_tree_current_node@plt>
   22e04:	ldr	r1, [r4, #84]	; 0x54
   22e08:	ldr	r1, [r1, #20]
   22e0c:	cmp	r0, r1
   22e10:	beq	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22e14:	mov	r0, r4
   22e18:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   22e1c:	mov	r0, r4
   22e20:	bl	11a5c <myhtml_tree_current_node@plt>
   22e24:	ldr	r1, [r4, #88]	; 0x58
   22e28:	cmp	r1, #0
   22e2c:	bne	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22e30:	ldr	r1, [r0, #4]
   22e34:	cmp	r1, #54	; 0x36
   22e38:	ldreq	r0, [r0, #8]
   22e3c:	cmpeq	r0, #1
   22e40:	beq	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22e44:	mov	r0, #20
   22e48:	str	r0, [r4, #168]	; 0xa8
   22e4c:	b	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22e50:	cmp	r0, #1
   22e54:	beq	22ec4 <myhtml_insertion_mode_in_frameset@@Base+0x1cc>
   22e58:	cmp	r0, #2
   22e5c:	bne	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22e60:	mov	r0, r4
   22e64:	mov	r1, r5
   22e68:	mov	r2, #0
   22e6c:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   22e70:	mov	r0, #0
   22e74:	pop	{r4, r5, fp, pc}
   22e78:	cmp	r0, #251	; 0xfb
   22e7c:	bne	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22e80:	mov	r0, r4
   22e84:	bl	11a5c <myhtml_tree_current_node@plt>
   22e88:	mov	r0, #0
   22e8c:	pop	{r4, r5, fp, pc}
   22e90:	mov	r0, r4
   22e94:	mov	r1, r5
   22e98:	bl	11138 <myhtml_tree_node_insert_html_element@plt>
   22e9c:	mov	r0, #0
   22ea0:	pop	{r4, r5, fp, pc}
   22ea4:	mov	r0, r4
   22ea8:	mov	r1, r5
   22eac:	pop	{r4, r5, fp, lr}
   22eb0:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   22eb4:	mov	r0, r4
   22eb8:	mov	r1, r5
   22ebc:	pop	{r4, r5, fp, lr}
   22ec0:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   22ec4:	ldr	r0, [r5, #48]	; 0x30
   22ec8:	tst	r0, #8
   22ecc:	bne	22ef0 <myhtml_insertion_mode_in_frameset@@Base+0x1f8>
   22ed0:	ldr	r0, [r4, #8]
   22ed4:	mov	r1, r5
   22ed8:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   22edc:	add	r0, r5, #4
   22ee0:	bl	1175c <mycore_string_stay_only_whitespace@plt>
   22ee4:	ldr	r0, [r5, #12]
   22ee8:	cmp	r0, #0
   22eec:	beq	22f04 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   22ef0:	mov	r0, r4
   22ef4:	mov	r1, r5
   22ef8:	bl	11420 <myhtml_tree_node_insert_text@plt>
   22efc:	mov	r0, #0
   22f00:	pop	{r4, r5, fp, pc}
   22f04:	mov	r0, #0
   22f08:	pop	{r4, r5, fp, pc}

00022f0c <myhtml_insertion_mode_after_frameset@@Base>:
   22f0c:	push	{r4, r5, fp, lr}
   22f10:	add	fp, sp, #8
   22f14:	mov	r5, r1
   22f18:	mov	r4, r0
   22f1c:	ldr	r0, [r1]
   22f20:	ldr	r1, [r1, #48]	; 0x30
   22f24:	tst	r1, #1
   22f28:	bne	22f5c <myhtml_insertion_mode_after_frameset@@Base+0x50>
   22f2c:	cmp	r0, #64	; 0x40
   22f30:	bgt	22f70 <myhtml_insertion_mode_after_frameset@@Base+0x64>
   22f34:	cmp	r0, #1
   22f38:	beq	22f90 <myhtml_insertion_mode_after_frameset@@Base+0x84>
   22f3c:	cmp	r0, #2
   22f40:	bne	22f68 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   22f44:	mov	r0, r4
   22f48:	mov	r1, r5
   22f4c:	mov	r2, #0
   22f50:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   22f54:	mov	r0, #0
   22f58:	pop	{r4, r5, fp, pc}
   22f5c:	cmp	r0, #65	; 0x41
   22f60:	moveq	r0, #22
   22f64:	streq	r0, [r4, #168]	; 0xa8
   22f68:	mov	r0, #0
   22f6c:	pop	{r4, r5, fp, pc}
   22f70:	cmp	r0, #65	; 0x41
   22f74:	beq	22fd0 <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   22f78:	cmp	r0, #92	; 0x5c
   22f7c:	bne	22f68 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   22f80:	mov	r0, r4
   22f84:	mov	r1, r5
   22f88:	pop	{r4, r5, fp, lr}
   22f8c:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   22f90:	ldr	r0, [r5, #48]	; 0x30
   22f94:	tst	r0, #8
   22f98:	bne	22fbc <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   22f9c:	ldr	r0, [r4, #8]
   22fa0:	mov	r1, r5
   22fa4:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   22fa8:	add	r0, r5, #4
   22fac:	bl	1175c <mycore_string_stay_only_whitespace@plt>
   22fb0:	ldr	r0, [r5, #12]
   22fb4:	cmp	r0, #0
   22fb8:	beq	22f68 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   22fbc:	mov	r0, r4
   22fc0:	mov	r1, r5
   22fc4:	bl	11420 <myhtml_tree_node_insert_text@plt>
   22fc8:	mov	r0, #0
   22fcc:	pop	{r4, r5, fp, pc}
   22fd0:	mov	r0, r4
   22fd4:	mov	r1, r5
   22fd8:	pop	{r4, r5, fp, lr}
   22fdc:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>

00022fe0 <myhtml_insertion_mode_after_after_body@@Base>:
   22fe0:	push	{r4, r5, r6, sl, fp, lr}
   22fe4:	add	fp, sp, #16
   22fe8:	mov	r5, r1
   22fec:	ldr	r1, [r1, #48]	; 0x30
   22ff0:	tst	r1, #1
   22ff4:	bne	2307c <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   22ff8:	ldr	r1, [r5]
   22ffc:	mov	r4, #0
   23000:	cmp	r1, #2
   23004:	ble	23020 <myhtml_insertion_mode_after_after_body@@Base+0x40>
   23008:	cmp	r1, #3
   2300c:	cmpne	r1, #65	; 0x41
   23010:	bne	23060 <myhtml_insertion_mode_after_after_body@@Base+0x80>
   23014:	mov	r1, r5
   23018:	pop	{r4, r5, r6, sl, fp, lr}
   2301c:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   23020:	cmp	r1, #1
   23024:	beq	23070 <myhtml_insertion_mode_after_after_body@@Base+0x90>
   23028:	cmp	r1, #2
   2302c:	bne	2307c <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   23030:	ldr	r6, [r0, #84]	; 0x54
   23034:	bl	11474 <myhtml_tree_node_create@plt>
   23038:	mov	r1, r0
   2303c:	mov	r0, #2
   23040:	str	r0, [r1, #4]
   23044:	str	r5, [r1, #32]
   23048:	ldr	r0, [r6, #8]
   2304c:	str	r0, [r1, #8]
   23050:	mov	r0, r6
   23054:	bl	11aec <myhtml_tree_node_add_child@plt>
   23058:	mov	r0, r4
   2305c:	pop	{r4, r5, r6, sl, fp, pc}
   23060:	cmp	r1, #251	; 0xfb
   23064:	bne	2307c <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   23068:	mov	r0, r4
   2306c:	pop	{r4, r5, r6, sl, fp, pc}
   23070:	ldr	r1, [r5, #48]	; 0x30
   23074:	tst	r1, #8
   23078:	bne	23014 <myhtml_insertion_mode_after_after_body@@Base+0x34>
   2307c:	mov	r1, #6
   23080:	str	r1, [r0, #168]	; 0xa8
   23084:	mov	r4, #1
   23088:	mov	r0, r4
   2308c:	pop	{r4, r5, r6, sl, fp, pc}

00023090 <myhtml_insertion_mode_after_after_frameset@@Base>:
   23090:	push	{r4, r5, r6, sl, fp, lr}
   23094:	add	fp, sp, #16
   23098:	mov	r5, r0
   2309c:	ldr	r0, [r1, #48]	; 0x30
   230a0:	tst	r0, #1
   230a4:	bne	2315c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   230a8:	mov	r4, r1
   230ac:	ldr	r0, [r1]
   230b0:	cmp	r0, #2
   230b4:	ble	230d4 <myhtml_insertion_mode_after_after_frameset@@Base+0x44>
   230b8:	cmp	r0, #3
   230bc:	cmpne	r0, #65	; 0x41
   230c0:	bne	23114 <myhtml_insertion_mode_after_after_frameset@@Base+0x84>
   230c4:	mov	r0, r5
   230c8:	mov	r1, r4
   230cc:	pop	{r4, r5, r6, sl, fp, lr}
   230d0:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   230d4:	cmp	r0, #1
   230d8:	beq	2312c <myhtml_insertion_mode_after_after_frameset@@Base+0x9c>
   230dc:	cmp	r0, #2
   230e0:	bne	2315c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   230e4:	ldr	r6, [r5, #84]	; 0x54
   230e8:	mov	r0, r5
   230ec:	bl	11474 <myhtml_tree_node_create@plt>
   230f0:	mov	r1, r0
   230f4:	mov	r0, #2
   230f8:	str	r0, [r1, #4]
   230fc:	str	r4, [r1, #32]
   23100:	ldr	r0, [r6, #8]
   23104:	str	r0, [r1, #8]
   23108:	mov	r0, r6
   2310c:	bl	11aec <myhtml_tree_node_add_child@plt>
   23110:	b	2315c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   23114:	cmp	r0, #92	; 0x5c
   23118:	bne	2315c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2311c:	mov	r0, r5
   23120:	mov	r1, r4
   23124:	pop	{r4, r5, r6, sl, fp, lr}
   23128:	b	2003c <myhtml_insertion_mode_in_head@@Base>
   2312c:	ldr	r0, [r4, #48]	; 0x30
   23130:	tst	r0, #8
   23134:	bne	230c4 <myhtml_insertion_mode_after_after_frameset@@Base+0x34>
   23138:	mov	r0, r5
   2313c:	mov	r1, r4
   23140:	bl	11384 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   23144:	cmp	r0, #0
   23148:	beq	2315c <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2314c:	mov	r1, r0
   23150:	mov	r0, r5
   23154:	pop	{r4, r5, r6, sl, fp, lr}
   23158:	b	1ea58 <myhtml_insertion_mode_in_body@@Base>
   2315c:	mov	r0, #0
   23160:	pop	{r4, r5, r6, sl, fp, pc}

00023164 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   23164:	push	{r4, sl, fp, lr}
   23168:	add	fp, sp, #8
   2316c:	ldr	r1, [r0, #128]	; 0x80
   23170:	ldr	r3, [r1, #4]
   23174:	cmp	r3, #0
   23178:	ldrne	ip, [r1]
   2317c:	ldrne	r1, [r1, #4]
   23180:	subsne	r3, r1, #1
   23184:	bne	231a4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x40>
   23188:	ldr	r1, [r0]
   2318c:	ldr	r3, [r0, #168]	; 0xa8
   23190:	ldr	r1, [r1, #28]
   23194:	ldr	r3, [r1, r3, lsl #2]
   23198:	mov	r1, r2
   2319c:	pop	{r4, sl, fp, lr}
   231a0:	bx	r3
   231a4:	add	ip, ip, r3, lsl #2
   231a8:	rsb	r3, r1, #1
   231ac:	ldr	lr, [r2]
   231b0:	ldr	r1, [ip]
   231b4:	ldr	r4, [r1, #4]
   231b8:	cmp	r4, lr
   231bc:	beq	231dc <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x78>
   231c0:	cmn	r3, #1
   231c4:	addne	r3, r3, #1
   231c8:	ldrne	r1, [ip, #-4]!
   231cc:	ldrne	r1, [r1, #8]
   231d0:	cmpne	r1, #1
   231d4:	bne	231b0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x4c>
   231d8:	b	23188 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x24>
   231dc:	mov	r2, #0
   231e0:	bl	115c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   231e4:	mov	r0, #0
   231e8:	pop	{r4, sl, fp, pc}

000231ec <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   231ec:	push	{r4, r5, r6, sl, fp, lr}
   231f0:	add	fp, sp, #16
   231f4:	mov	r4, r1
   231f8:	mov	r5, r0
   231fc:	bl	12104 <myhtml_tree_adjusted_current_node@plt>
   23200:	mov	r6, r0
   23204:	ldr	r0, [r5, #8]
   23208:	mov	r1, r4
   2320c:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   23210:	ldr	r0, [r6, #8]
   23214:	cmp	r0, #3
   23218:	beq	23230 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x44>
   2321c:	cmp	r0, #2
   23220:	bne	23238 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   23224:	mov	r0, r4
   23228:	bl	11408 <myhtml_token_adjust_mathml_attributes@plt>
   2322c:	b	23238 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   23230:	mov	r0, r4
   23234:	bl	11654 <myhtml_token_adjust_svg_attributes@plt>
   23238:	mov	r0, r4
   2323c:	bl	11fa8 <myhtml_token_adjust_foreign_attributes@plt>
   23240:	mov	r0, r5
   23244:	mov	r1, r4
   23248:	bl	12140 <myhtml_tree_node_insert_foreign_element@plt>
   2324c:	ldr	r1, [r6, #8]
   23250:	str	r1, [r0, #8]
   23254:	ldr	r0, [r4, #48]	; 0x30
   23258:	tst	r0, #2
   2325c:	beq	23278 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x8c>
   23260:	cmp	r1, #3
   23264:	ldreq	r0, [r4]
   23268:	cmpeq	r0, #112	; 0x70
   2326c:	beq	23280 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   23270:	mov	r0, r5
   23274:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   23278:	mov	r0, #0
   2327c:	pop	{r4, r5, r6, sl, fp, pc}
   23280:	mov	r0, r5
   23284:	bl	11a5c <myhtml_tree_current_node@plt>
   23288:	mov	r1, r0
   2328c:	mov	r0, r5
   23290:	mov	r2, r4
   23294:	pop	{r4, r5, r6, sl, fp, lr}
   23298:	b	23164 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>

0002329c <myhtml_insertion_mode_in_foreign_content@@Base>:
   2329c:	push	{r4, r5, r6, sl, fp, lr}
   232a0:	add	fp, sp, #16
   232a4:	mov	r5, r1
   232a8:	mov	r4, r0
   232ac:	ldr	r0, [r1, #48]	; 0x30
   232b0:	tst	r0, #1
   232b4:	bne	23524 <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   232b8:	ldr	r0, [r5]
   232bc:	sub	r0, r0, #1
   232c0:	cmp	r0, #139	; 0x8b
   232c4:	bhi	23514 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   232c8:	mov	r6, #0
   232cc:	add	r1, pc, #4
   232d0:	ldr	r0, [r1, r0, lsl #2]
   232d4:	add	pc, r1, r0
   232d8:	strdeq	r0, [r0], -r8
   232dc:	andeq	r0, r0, r0, asr r3
   232e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   232e4:	andeq	r0, r0, ip, lsr r2
   232e8:	andeq	r0, r0, ip, lsr r2
   232ec:	andeq	r0, r0, ip, lsr r2
   232f0:	andeq	r0, r0, ip, lsr r2
   232f4:	andeq	r0, r0, ip, lsr r2
   232f8:	andeq	r0, r0, ip, lsr r2
   232fc:	andeq	r0, r0, ip, lsr r2
   23300:	andeq	r0, r0, ip, lsr r2
   23304:	andeq	r0, r0, ip, lsr r2
   23308:	andeq	r0, r0, ip, lsr r2
   2330c:	andeq	r0, r0, r0, lsr r2
   23310:	andeq	r0, r0, ip, lsr r2
   23314:	andeq	r0, r0, ip, lsr r2
   23318:	andeq	r0, r0, ip, lsr r2
   2331c:	andeq	r0, r0, ip, lsr r2
   23320:	andeq	r0, r0, ip, lsr r2
   23324:	andeq	r0, r0, r0, lsr r2
   23328:	andeq	r0, r0, ip, lsr r2
   2332c:	andeq	r0, r0, r0, lsr r2
   23330:	andeq	r0, r0, r0, lsr r2
   23334:	andeq	r0, r0, r0, lsr r2
   23338:	andeq	r0, r0, ip, lsr r2
   2333c:	andeq	r0, r0, ip, lsr r2
   23340:	andeq	r0, r0, ip, lsr r2
   23344:	andeq	r0, r0, r0, lsr r2
   23348:	andeq	r0, r0, ip, lsr r2
   2334c:	andeq	r0, r0, r0, lsr r2
   23350:	andeq	r0, r0, ip, lsr r2
   23354:	andeq	r0, r0, ip, lsr r2
   23358:	andeq	r0, r0, ip, lsr r2
   2335c:	andeq	r0, r0, ip, lsr r2
   23360:	andeq	r0, r0, ip, lsr r2
   23364:	andeq	r0, r0, r0, lsr r2
   23368:	andeq	r0, r0, ip, lsr r2
   2336c:	andeq	r0, r0, ip, lsr r2
   23370:	andeq	r0, r0, ip, lsr r2
   23374:	andeq	r0, r0, ip, lsr r2
   23378:	andeq	r0, r0, ip, lsr r2
   2337c:	andeq	r0, r0, r0, lsr r2
   23380:	andeq	r0, r0, r0, lsr r2
   23384:	andeq	r0, r0, r0, lsr r2
   23388:	andeq	r0, r0, r0, lsr r2
   2338c:	andeq	r0, r0, r0, lsr r2
   23390:	andeq	r0, r0, ip, lsr r2
   23394:	andeq	r0, r0, ip, lsr r2
   23398:	andeq	r0, r0, ip, lsr r2
   2339c:	andeq	r0, r0, ip, ror #6
   233a0:	andeq	r0, r0, ip, lsr r2
   233a4:	andeq	r0, r0, ip, lsr r2
   233a8:	andeq	r0, r0, ip, lsr r2
   233ac:	andeq	r0, r0, ip, lsr r2
   233b0:	andeq	r0, r0, r0, lsr r2
   233b4:	andeq	r0, r0, r0, lsr r2
   233b8:	andeq	r0, r0, r0, lsr r2
   233bc:	andeq	r0, r0, r0, lsr r2
   233c0:	andeq	r0, r0, r0, lsr r2
   233c4:	andeq	r0, r0, r0, lsr r2
   233c8:	andeq	r0, r0, r0, lsr r2
   233cc:	andeq	r0, r0, ip, lsr r2
   233d0:	andeq	r0, r0, ip, lsr r2
   233d4:	andeq	r0, r0, r0, lsr r2
   233d8:	andeq	r0, r0, ip, lsr r2
   233dc:	andeq	r0, r0, r0, lsr r2
   233e0:	andeq	r0, r0, ip, lsr r2
   233e4:	andeq	r0, r0, ip, lsr r2
   233e8:	andeq	r0, r0, r0, lsr r2
   233ec:	andeq	r0, r0, ip, lsr r2
   233f0:	andeq	r0, r0, ip, lsr r2
   233f4:	andeq	r0, r0, ip, lsr r2
   233f8:	andeq	r0, r0, ip, lsr r2
   233fc:	andeq	r0, r0, ip, lsr r2
   23400:	andeq	r0, r0, ip, lsr r2
   23404:	andeq	r0, r0, ip, lsr r2
   23408:	andeq	r0, r0, r0, lsr r2
   2340c:	andeq	r0, r0, ip, lsr r2
   23410:	andeq	r0, r0, r0, lsr r2
   23414:	andeq	r0, r0, ip, lsr r2
   23418:	andeq	r0, r0, ip, lsr r2
   2341c:	andeq	r0, r0, ip, lsr r2
   23420:	andeq	r0, r0, ip, lsr r2
   23424:	andeq	r0, r0, r0, lsr r2
   23428:	andeq	r0, r0, ip, lsr r2
   2342c:	andeq	r0, r0, r0, lsr r2
   23430:	andeq	r0, r0, ip, lsr r2
   23434:	andeq	r0, r0, ip, lsr r2
   23438:	andeq	r0, r0, ip, lsr r2
   2343c:	andeq	r0, r0, r0, lsr r2
   23440:	andeq	r0, r0, ip, lsr r2
   23444:	andeq	r0, r0, ip, lsr r2
   23448:	andeq	r0, r0, ip, lsr r2
   2344c:	andeq	r0, r0, ip, lsr r2
   23450:	andeq	r0, r0, r0, lsr r2
   23454:	andeq	r0, r0, ip, lsr r2
   23458:	andeq	r0, r0, ip, lsr r2
   2345c:	andeq	r0, r0, ip, lsr r2
   23460:	andeq	r0, r0, r0, lsr r2
   23464:	andeq	r0, r0, ip, lsr r2
   23468:	andeq	r0, r0, ip, lsr r2
   2346c:	andeq	r0, r0, r0, lsr r2
   23470:	andeq	r0, r0, ip, lsr r2
   23474:	andeq	r0, r0, ip, lsr r2
   23478:	andeq	r0, r0, ip, lsr r2
   2347c:	andeq	r0, r0, ip, lsr r2
   23480:	andeq	r0, r0, ip, lsr r2
   23484:	andeq	r0, r0, ip, lsr r2
   23488:	andeq	r0, r0, r0, lsr r2
   2348c:	andeq	r0, r0, r0, lsr r2
   23490:	andeq	r0, r0, ip, lsr r2
   23494:	andeq	r0, r0, ip, lsr r2
   23498:	andeq	r0, r0, ip, lsr r2
   2349c:	andeq	r0, r0, ip, lsr r2
   234a0:	andeq	r0, r0, r0, lsr r2
   234a4:	andeq	r0, r0, ip, lsr r2
   234a8:	andeq	r0, r0, r0, lsr r2
   234ac:	andeq	r0, r0, r0, lsr r2
   234b0:	andeq	r0, r0, r0, lsr r2
   234b4:	andeq	r0, r0, ip, lsr r2
   234b8:	andeq	r0, r0, r0, lsr r2
   234bc:	andeq	r0, r0, ip, lsr r2
   234c0:	andeq	r0, r0, r0, lsr r2
   234c4:	andeq	r0, r0, ip, lsr r2
   234c8:	andeq	r0, r0, r0, lsr r2
   234cc:	andeq	r0, r0, ip, lsr r2
   234d0:	andeq	r0, r0, ip, lsr r2
   234d4:	andeq	r0, r0, ip, lsr r2
   234d8:	andeq	r0, r0, ip, lsr r2
   234dc:	andeq	r0, r0, ip, lsr r2
   234e0:	andeq	r0, r0, ip, lsr r2
   234e4:	andeq	r0, r0, ip, lsr r2
   234e8:	andeq	r0, r0, ip, lsr r2
   234ec:	andeq	r0, r0, ip, lsr r2
   234f0:	andeq	r0, r0, ip, lsr r2
   234f4:	andeq	r0, r0, ip, lsr r2
   234f8:	andeq	r0, r0, r0, lsr r2
   234fc:	andeq	r0, r0, r0, lsr r2
   23500:	andeq	r0, r0, r0, lsr r2
   23504:	andeq	r0, r0, r0, lsr r2
   23508:	ldr	r0, [r4, #88]	; 0x58
   2350c:	cmp	r0, #0
   23510:	beq	23554 <myhtml_insertion_mode_in_foreign_content@@Base+0x2b8>
   23514:	mov	r0, r4
   23518:	mov	r1, r5
   2351c:	pop	{r4, r5, r6, sl, fp, lr}
   23520:	b	231ec <myhtml_insertion_mode_in_foreign_content_start_other@@Base>
   23524:	mov	r0, r4
   23528:	bl	11a5c <myhtml_tree_current_node@plt>
   2352c:	mov	r1, r0
   23530:	ldr	r0, [r5]
   23534:	cmp	r0, #112	; 0x70
   23538:	ldreq	r0, [r1, #4]
   2353c:	cmpeq	r0, #112	; 0x70
   23540:	beq	235b0 <myhtml_insertion_mode_in_foreign_content@@Base+0x314>
   23544:	mov	r0, r4
   23548:	mov	r2, r5
   2354c:	pop	{r4, r5, r6, sl, fp, lr}
   23550:	b	23164 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>
   23554:	mov	r6, #1
   23558:	mov	r0, r4
   2355c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   23560:	mov	r0, r4
   23564:	bl	11a5c <myhtml_tree_current_node@plt>
   23568:	cmp	r0, #0
   2356c:	beq	235a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x30c>
   23570:	mov	r5, r0
   23574:	mov	r0, r4
   23578:	mov	r1, r5
   2357c:	bl	114d4 <myhtml_tree_is_mathml_integration_point@plt>
   23580:	cmp	r0, #0
   23584:	bne	235a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x30c>
   23588:	mov	r0, r4
   2358c:	mov	r1, r5
   23590:	bl	11678 <myhtml_tree_is_html_integration_point@plt>
   23594:	cmp	r0, #0
   23598:	bne	235a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x30c>
   2359c:	ldr	r0, [r5, #8]
   235a0:	cmp	r0, #1
   235a4:	bne	23558 <myhtml_insertion_mode_in_foreign_content@@Base+0x2bc>
   235a8:	mov	r0, r6
   235ac:	pop	{r4, r5, r6, sl, fp, pc}
   235b0:	ldr	r0, [r1, #8]
   235b4:	cmp	r0, #3
   235b8:	bne	23544 <myhtml_insertion_mode_in_foreign_content@@Base+0x2a8>
   235bc:	mov	r0, r4
   235c0:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   235c4:	mov	r6, #0
   235c8:	mov	r0, r6
   235cc:	pop	{r4, r5, r6, sl, fp, pc}
   235d0:	ldr	r0, [r5, #48]	; 0x30
   235d4:	tst	r0, #2048	; 0x800
   235d8:	beq	235f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x358>
   235dc:	ldr	r0, [r4, #8]
   235e0:	mov	r1, r5
   235e4:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   235e8:	mov	r0, r4
   235ec:	mov	r1, r5
   235f0:	bl	11780 <myhtml_token_set_replacement_character_for_null_token@plt>
   235f4:	mov	r0, r4
   235f8:	mov	r1, r5
   235fc:	bl	11420 <myhtml_tree_node_insert_text@plt>
   23600:	ldr	r0, [r5, #48]	; 0x30
   23604:	tst	r0, #8
   23608:	bne	235a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x30c>
   2360c:	ldr	r0, [r4, #180]	; 0xb4
   23610:	ldr	r1, [r4, #180]	; 0xb4
   23614:	and	r0, r0, #2
   23618:	eor	r0, r1, r0
   2361c:	str	r0, [r4, #180]	; 0xb4
   23620:	mov	r0, r6
   23624:	pop	{r4, r5, r6, sl, fp, pc}
   23628:	mov	r6, #0
   2362c:	mov	r0, r4
   23630:	mov	r1, r5
   23634:	mov	r2, #0
   23638:	bl	116cc <myhtml_tree_node_insert_comment@plt>
   2363c:	mov	r0, r6
   23640:	pop	{r4, r5, r6, sl, fp, pc}
   23644:	ldr	r0, [r4, #8]
   23648:	mov	r1, r5
   2364c:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   23650:	ldr	r1, [pc, #80]	; 236a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x40c>
   23654:	add	r1, pc, r1
   23658:	mov	r0, r5
   2365c:	mov	r2, #5
   23660:	bl	12260 <myhtml_token_attr_by_name@plt>
   23664:	cmp	r0, #0
   23668:	bne	23508 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   2366c:	ldr	r1, [pc, #56]	; 236ac <myhtml_insertion_mode_in_foreign_content@@Base+0x410>
   23670:	add	r1, pc, r1
   23674:	mov	r0, r5
   23678:	mov	r2, #4
   2367c:	bl	12260 <myhtml_token_attr_by_name@plt>
   23680:	cmp	r0, #0
   23684:	bne	23508 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   23688:	ldr	r1, [pc, #32]	; 236b0 <myhtml_insertion_mode_in_foreign_content@@Base+0x414>
   2368c:	add	r1, pc, r1
   23690:	mov	r0, r5
   23694:	mov	r2, #4
   23698:	bl	12260 <myhtml_token_attr_by_name@plt>
   2369c:	cmp	r0, #0
   236a0:	bne	23508 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   236a4:	b	23514 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   236a8:	andeq	r9, sp, r2, lsl #7
   236ac:	andeq	r9, sp, fp, asr #18
   236b0:	andeq	r9, sp, r0, asr r3

000236b4 <myhtml_rules_check_for_first_newline@@Base>:
   236b4:	push	{r4, r5, r6, sl, fp, lr}
   236b8:	add	fp, sp, #16
   236bc:	mov	r5, r0
   236c0:	ldr	r0, [r0, #180]	; 0xb4
   236c4:	mov	r4, #0
   236c8:	tst	r0, #64	; 0x40
   236cc:	beq	23744 <myhtml_rules_check_for_first_newline@@Base+0x90>
   236d0:	ldr	r0, [r5, #180]	; 0xb4
   236d4:	tst	r0, #128	; 0x80
   236d8:	beq	23730 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   236dc:	mov	r6, r1
   236e0:	ldr	r0, [r1]
   236e4:	cmp	r0, #1
   236e8:	bne	23730 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   236ec:	ldr	r0, [r5, #8]
   236f0:	mov	r1, r6
   236f4:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   236f8:	ldr	r0, [r6, #12]
   236fc:	cmp	r0, #0
   23700:	beq	23760 <myhtml_rules_check_for_first_newline@@Base+0xac>
   23704:	ldr	r0, [r6, #4]
   23708:	ldrb	r1, [r0]
   2370c:	cmp	r1, #10
   23710:	bne	23730 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   23714:	mov	r1, #1
   23718:	bl	12020 <mchar_async_crop_first_chars_without_cache@plt>
   2371c:	str	r0, [r6, #4]
   23720:	ldr	r0, [r6, #12]
   23724:	subs	r0, r0, #1
   23728:	str	r0, [r6, #12]
   2372c:	beq	2374c <myhtml_rules_check_for_first_newline@@Base+0x98>
   23730:	ldr	r0, [r5, #180]	; 0xb4
   23734:	ldr	r1, [r5, #180]	; 0xb4
   23738:	and	r0, r0, #64	; 0x40
   2373c:	eor	r0, r1, r0
   23740:	str	r0, [r5, #180]	; 0xb4
   23744:	mov	r0, r4
   23748:	pop	{r4, r5, r6, sl, fp, pc}
   2374c:	ldr	r0, [r5, #180]	; 0xb4
   23750:	ldr	r1, [r5, #180]	; 0xb4
   23754:	and	r0, r0, #64	; 0x40
   23758:	eor	r0, r1, r0
   2375c:	str	r0, [r5, #180]	; 0xb4
   23760:	mov	r4, #1
   23764:	mov	r0, r4
   23768:	pop	{r4, r5, r6, sl, fp, pc}

0002376c <myhtml_rules_tree_dispatcher@@Base>:
   2376c:	push	{r4, r5, r6, sl, fp, lr}
   23770:	add	fp, sp, #16
   23774:	mov	r4, r1
   23778:	mov	r5, r0
   2377c:	bl	1211c <myhtml_rules_check_for_first_newline@plt>
   23780:	cmp	r0, #0
   23784:	bne	237e8 <myhtml_rules_tree_dispatcher@@Base+0x7c>
   23788:	ldr	r0, [r5, #164]	; 0xa4
   2378c:	cmp	r0, #0
   23790:	movne	r0, #0
   23794:	strne	r0, [r5, #164]	; 0xa4
   23798:	mov	r0, r5
   2379c:	bl	12104 <myhtml_tree_adjusted_current_node@plt>
   237a0:	mov	r6, r0
   237a4:	ldr	r0, [r5, #128]	; 0x80
   237a8:	ldr	r0, [r0, #4]
   237ac:	cmp	r0, #0
   237b0:	ldrne	r0, [r6, #8]
   237b4:	cmpne	r0, #1
   237b8:	bne	237f4 <myhtml_rules_tree_dispatcher@@Base+0x88>
   237bc:	ldr	r0, [r5]
   237c0:	ldr	r1, [r5, #168]	; 0xa8
   237c4:	ldr	r0, [r0, #28]
   237c8:	ldr	r2, [r0, r1, lsl #2]
   237cc:	mov	r0, r5
   237d0:	mov	r1, r4
   237d4:	blx	r2
   237d8:	mov	r1, r0
   237dc:	mov	r0, #1
   237e0:	cmp	r1, #0
   237e4:	popne	{r4, r5, r6, sl, fp, pc}
   237e8:	str	r4, [r5, #152]	; 0x98
   237ec:	mov	r0, #0
   237f0:	pop	{r4, r5, r6, sl, fp, pc}
   237f4:	mov	r0, r5
   237f8:	mov	r1, r6
   237fc:	bl	114d4 <myhtml_tree_is_mathml_integration_point@plt>
   23800:	cmp	r0, #0
   23804:	beq	23818 <myhtml_rules_tree_dispatcher@@Base+0xac>
   23808:	ldr	r0, [r4]
   2380c:	cmp	r0, #221	; 0xdd
   23810:	cmpne	r0, #226	; 0xe2
   23814:	bne	2387c <myhtml_rules_tree_dispatcher@@Base+0x110>
   23818:	ldr	r0, [r6, #4]
   2381c:	cmp	r0, #8
   23820:	bne	23838 <myhtml_rules_tree_dispatcher@@Base+0xcc>
   23824:	ldr	r0, [r6, #8]
   23828:	cmp	r0, #2
   2382c:	ldreq	r0, [r4]
   23830:	cmpeq	r0, #124	; 0x7c
   23834:	beq	2388c <myhtml_rules_tree_dispatcher@@Base+0x120>
   23838:	mov	r0, r5
   2383c:	mov	r1, r6
   23840:	bl	11678 <myhtml_tree_is_html_integration_point@plt>
   23844:	cmp	r0, #0
   23848:	beq	23860 <myhtml_rules_tree_dispatcher@@Base+0xf4>
   2384c:	ldr	r0, [r4, #48]	; 0x30
   23850:	tst	r0, #1
   23854:	ldrne	r0, [r4]
   23858:	cmpne	r0, #1
   2385c:	beq	237bc <myhtml_rules_tree_dispatcher@@Base+0x50>
   23860:	ldr	r0, [r4]
   23864:	cmp	r0, #251	; 0xfb
   23868:	beq	237bc <myhtml_rules_tree_dispatcher@@Base+0x50>
   2386c:	mov	r0, r5
   23870:	mov	r1, r4
   23874:	bl	112d0 <myhtml_insertion_mode_in_foreign_content@plt>
   23878:	b	237d8 <myhtml_rules_tree_dispatcher@@Base+0x6c>
   2387c:	ldr	r0, [r4, #48]	; 0x30
   23880:	tst	r0, #1
   23884:	beq	237bc <myhtml_rules_tree_dispatcher@@Base+0x50>
   23888:	b	23818 <myhtml_rules_tree_dispatcher@@Base+0xac>
   2388c:	ldr	r0, [r4, #48]	; 0x30
   23890:	tst	r0, #1
   23894:	beq	237bc <myhtml_rules_tree_dispatcher@@Base+0x50>
   23898:	b	23838 <myhtml_rules_tree_dispatcher@@Base+0xcc>

0002389c <myhtml_rules_init@@Base>:
   2389c:	push	{r4, sl, fp, lr}
   238a0:	add	fp, sp, #8
   238a4:	mov	r4, r0
   238a8:	mov	r0, #92	; 0x5c
   238ac:	bl	12050 <mycore_malloc@plt>
   238b0:	str	r0, [r4, #28]!
   238b4:	cmp	r0, #0
   238b8:	movweq	r0, #36964	; 0x9064
   238bc:	popeq	{r4, sl, fp, pc}
   238c0:	ldr	r1, [pc, #364]	; 23a34 <myhtml_rules_init@@Base+0x198>
   238c4:	ldr	r1, [pc, r1]
   238c8:	str	r1, [r0]
   238cc:	ldr	r0, [r4]
   238d0:	ldr	r1, [pc, #352]	; 23a38 <myhtml_rules_init@@Base+0x19c>
   238d4:	ldr	r1, [pc, r1]
   238d8:	str	r1, [r0, #4]
   238dc:	ldr	r0, [r4]
   238e0:	ldr	r1, [pc, #340]	; 23a3c <myhtml_rules_init@@Base+0x1a0>
   238e4:	ldr	r1, [pc, r1]
   238e8:	str	r1, [r0, #8]
   238ec:	ldr	r0, [r4]
   238f0:	ldr	r1, [pc, #328]	; 23a40 <myhtml_rules_init@@Base+0x1a4>
   238f4:	ldr	r1, [pc, r1]
   238f8:	str	r1, [r0, #12]
   238fc:	ldr	r0, [r4]
   23900:	ldr	r1, [pc, #316]	; 23a44 <myhtml_rules_init@@Base+0x1a8>
   23904:	ldr	r1, [pc, r1]
   23908:	str	r1, [r0, #16]
   2390c:	ldr	r0, [r4]
   23910:	ldr	r1, [pc, #304]	; 23a48 <myhtml_rules_init@@Base+0x1ac>
   23914:	ldr	r1, [pc, r1]
   23918:	str	r1, [r0, #20]
   2391c:	ldr	r0, [r4]
   23920:	ldr	r1, [pc, #292]	; 23a4c <myhtml_rules_init@@Base+0x1b0>
   23924:	ldr	r1, [pc, r1]
   23928:	str	r1, [r0, #24]
   2392c:	ldr	r0, [r4]
   23930:	ldr	r1, [pc, #280]	; 23a50 <myhtml_rules_init@@Base+0x1b4>
   23934:	ldr	r1, [pc, r1]
   23938:	str	r1, [r0, #28]
   2393c:	ldr	r0, [r4]
   23940:	ldr	r1, [pc, #268]	; 23a54 <myhtml_rules_init@@Base+0x1b8>
   23944:	ldr	r1, [pc, r1]
   23948:	str	r1, [r0, #32]
   2394c:	ldr	r0, [r4]
   23950:	ldr	r1, [pc, #256]	; 23a58 <myhtml_rules_init@@Base+0x1bc>
   23954:	ldr	r1, [pc, r1]
   23958:	str	r1, [r0, #36]	; 0x24
   2395c:	ldr	r0, [r4]
   23960:	ldr	r1, [pc, #244]	; 23a5c <myhtml_rules_init@@Base+0x1c0>
   23964:	ldr	r1, [pc, r1]
   23968:	str	r1, [r0, #40]	; 0x28
   2396c:	ldr	r0, [r4]
   23970:	ldr	r1, [pc, #232]	; 23a60 <myhtml_rules_init@@Base+0x1c4>
   23974:	ldr	r1, [pc, r1]
   23978:	str	r1, [r0, #44]	; 0x2c
   2397c:	ldr	r0, [r4]
   23980:	ldr	r1, [pc, #220]	; 23a64 <myhtml_rules_init@@Base+0x1c8>
   23984:	ldr	r1, [pc, r1]
   23988:	str	r1, [r0, #48]	; 0x30
   2398c:	ldr	r0, [r4]
   23990:	ldr	r1, [pc, #208]	; 23a68 <myhtml_rules_init@@Base+0x1cc>
   23994:	ldr	r1, [pc, r1]
   23998:	str	r1, [r0, #52]	; 0x34
   2399c:	ldr	r0, [r4]
   239a0:	ldr	r1, [pc, #196]	; 23a6c <myhtml_rules_init@@Base+0x1d0>
   239a4:	ldr	r1, [pc, r1]
   239a8:	str	r1, [r0, #56]	; 0x38
   239ac:	ldr	r0, [r4]
   239b0:	ldr	r1, [pc, #184]	; 23a70 <myhtml_rules_init@@Base+0x1d4>
   239b4:	ldr	r1, [pc, r1]
   239b8:	str	r1, [r0, #60]	; 0x3c
   239bc:	ldr	r0, [r4]
   239c0:	ldr	r1, [pc, #172]	; 23a74 <myhtml_rules_init@@Base+0x1d8>
   239c4:	ldr	r1, [pc, r1]
   239c8:	str	r1, [r0, #64]	; 0x40
   239cc:	ldr	r0, [r4]
   239d0:	ldr	r1, [pc, #160]	; 23a78 <myhtml_rules_init@@Base+0x1dc>
   239d4:	ldr	r1, [pc, r1]
   239d8:	str	r1, [r0, #68]	; 0x44
   239dc:	ldr	r0, [r4]
   239e0:	ldr	r1, [pc, #148]	; 23a7c <myhtml_rules_init@@Base+0x1e0>
   239e4:	ldr	r1, [pc, r1]
   239e8:	str	r1, [r0, #72]	; 0x48
   239ec:	ldr	r0, [r4]
   239f0:	ldr	r1, [pc, #136]	; 23a80 <myhtml_rules_init@@Base+0x1e4>
   239f4:	ldr	r1, [pc, r1]
   239f8:	str	r1, [r0, #76]	; 0x4c
   239fc:	ldr	r0, [r4]
   23a00:	ldr	r1, [pc, #124]	; 23a84 <myhtml_rules_init@@Base+0x1e8>
   23a04:	ldr	r1, [pc, r1]
   23a08:	str	r1, [r0, #80]	; 0x50
   23a0c:	ldr	r0, [r4]
   23a10:	ldr	r1, [pc, #112]	; 23a88 <myhtml_rules_init@@Base+0x1ec>
   23a14:	ldr	r1, [pc, r1]
   23a18:	str	r1, [r0, #84]	; 0x54
   23a1c:	ldr	r0, [r4]
   23a20:	ldr	r1, [pc, #100]	; 23a8c <myhtml_rules_init@@Base+0x1f0>
   23a24:	ldr	r1, [pc, r1]
   23a28:	str	r1, [r0, #88]	; 0x58
   23a2c:	mov	r0, #0
   23a30:	pop	{r4, sl, fp, pc}
   23a34:	strdeq	r2, [pc], -r0
   23a38:	andeq	r3, pc, ip
   23a3c:	andeq	r3, pc, r8
   23a40:	andeq	r2, pc, r4, asr #28
   23a44:	andeq	r2, pc, r8, lsl #31
   23a48:	andeq	r2, pc, r4, lsr #31
   23a4c:	andeq	r2, pc, r0, lsl #30
   23a50:	andeq	r2, pc, r8, asr lr	; <UNPREDICTABLE>
   23a54:	andeq	r2, pc, r4, lsr #28
   23a58:	andeq	r2, pc, ip, lsl pc	; <UNPREDICTABLE>
   23a5c:	andeq	r2, pc, ip, asr #30
   23a60:	andeq	r2, pc, ip, lsr #30
   23a64:	andeq	r2, pc, r4, lsr #30
   23a68:	andeq	r2, pc, r0, lsr #27
   23a6c:	andeq	r2, pc, ip, lsl #31
   23a70:	andeq	r2, pc, r0, lsl lr	; <UNPREDICTABLE>
   23a74:	andeq	r2, pc, r4, ror #28
   23a78:	andeq	r2, pc, r8, lsl sp	; <UNPREDICTABLE>
   23a7c:	andeq	r2, pc, r4, ror pc	; <UNPREDICTABLE>
   23a80:	andeq	r2, pc, r8, lsl #30
   23a84:	andeq	r2, pc, ip, lsr #25
   23a88:	muleq	pc, r8, ip	; <UNPREDICTABLE>
   23a8c:	andeq	r2, pc, r8, lsl #27

00023a90 <myhtml_serialization@@Base>:
   23a90:	b	23a94 <myhtml_serialization_tree_buffer@@Base>

00023a94 <myhtml_serialization_tree_buffer@@Base>:
   23a94:	push	{r4, r5, r6, sl, fp, lr}
   23a98:	add	fp, sp, #16
   23a9c:	cmp	r1, #0
   23aa0:	moveq	r0, #0
   23aa4:	popeq	{r4, r5, r6, sl, fp, pc}
   23aa8:	mov	r4, r1
   23aac:	mov	r5, r0
   23ab0:	ldr	r0, [r1]
   23ab4:	cmp	r0, #0
   23ab8:	bne	23ae4 <myhtml_serialization_tree_buffer@@Base+0x50>
   23abc:	mov	r6, #0
   23ac0:	movw	r0, #20490	; 0x500a
   23ac4:	stmib	r4, {r0, r6}
   23ac8:	movw	r0, #20490	; 0x500a
   23acc:	bl	12050 <mycore_malloc@plt>
   23ad0:	str	r0, [r4]
   23ad4:	cmp	r0, #0
   23ad8:	streq	r6, [r4, #4]
   23adc:	moveq	r0, #2
   23ae0:	popeq	{r4, r5, r6, sl, fp, pc}
   23ae4:	ldr	r1, [pc, #16]	; 23afc <myhtml_serialization_tree_buffer@@Base+0x68>
   23ae8:	ldr	r1, [pc, r1]
   23aec:	mov	r0, r5
   23af0:	mov	r2, r4
   23af4:	pop	{r4, r5, r6, sl, fp, lr}
   23af8:	b	23b70 <myhtml_serialization_tree_callback@@Base>
   23afc:	andeq	r2, pc, ip, asr #26

00023b00 <myhtml_serialization_node@@Base>:
   23b00:	b	23b04 <myhtml_serialization_node_buffer@@Base>

00023b04 <myhtml_serialization_node_buffer@@Base>:
   23b04:	push	{r4, r5, r6, sl, fp, lr}
   23b08:	add	fp, sp, #16
   23b0c:	cmp	r1, #0
   23b10:	beq	23b64 <myhtml_serialization_node_buffer@@Base+0x60>
   23b14:	mov	r4, r1
   23b18:	mov	r5, r0
   23b1c:	ldr	r0, [r1]
   23b20:	cmp	r0, #0
   23b24:	bne	23b48 <myhtml_serialization_node_buffer@@Base+0x44>
   23b28:	mov	r6, #0
   23b2c:	mov	r0, #2048	; 0x800
   23b30:	stmib	r4, {r0, r6}
   23b34:	mov	r0, #2048	; 0x800
   23b38:	bl	12050 <mycore_malloc@plt>
   23b3c:	str	r0, [r4]
   23b40:	cmp	r0, #0
   23b44:	beq	23b60 <myhtml_serialization_node_buffer@@Base+0x5c>
   23b48:	ldr	r1, [pc, #28]	; 23b6c <myhtml_serialization_node_buffer@@Base+0x68>
   23b4c:	ldr	r1, [pc, r1]
   23b50:	mov	r0, r5
   23b54:	mov	r2, r4
   23b58:	pop	{r4, r5, r6, sl, fp, lr}
   23b5c:	b	23c70 <myhtml_serialization_node_callback@@Base>
   23b60:	str	r6, [r4, #4]
   23b64:	mov	r0, #0
   23b68:	pop	{r4, r5, r6, sl, fp, pc}
   23b6c:	andeq	r2, pc, r8, ror #25

00023b70 <myhtml_serialization_tree_callback@@Base>:
   23b70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23b74:	add	fp, sp, #24
   23b78:	cmp	r0, #0
   23b7c:	beq	23c64 <myhtml_serialization_tree_callback@@Base+0xf4>
   23b80:	mov	r9, r2
   23b84:	mov	r5, r1
   23b88:	mov	r6, r0
   23b8c:	ldr	r0, [r0, #40]	; 0x28
   23b90:	cmp	r0, #0
   23b94:	mov	r7, r6
   23b98:	beq	23bb8 <myhtml_serialization_tree_callback@@Base+0x48>
   23b9c:	ldr	r0, [r0, #84]	; 0x54
   23ba0:	cmp	r0, r6
   23ba4:	mov	r7, r6
   23ba8:	bne	23bb8 <myhtml_serialization_tree_callback@@Base+0x48>
   23bac:	ldr	r7, [r6, #20]
   23bb0:	cmp	r7, #0
   23bb4:	beq	23c64 <myhtml_serialization_tree_callback@@Base+0xf4>
   23bb8:	mov	r8, #2
   23bbc:	mov	r0, r7
   23bc0:	mov	r1, r5
   23bc4:	mov	r2, r9
   23bc8:	bl	11b34 <myhtml_serialization_node_callback@plt>
   23bcc:	cmp	r0, #0
   23bd0:	bne	23c5c <myhtml_serialization_tree_callback@@Base+0xec>
   23bd4:	ldr	r0, [r7, #20]
   23bd8:	cmp	r0, #0
   23bdc:	beq	23bf4 <myhtml_serialization_tree_callback@@Base+0x84>
   23be0:	cmp	r0, #0
   23be4:	mov	r7, r0
   23be8:	bne	23bbc <myhtml_serialization_tree_callback@@Base+0x4c>
   23bec:	b	23c64 <myhtml_serialization_tree_callback@@Base+0xf4>
   23bf0:	ldr	r7, [r7, #24]
   23bf4:	cmp	r7, r6
   23bf8:	beq	23c34 <myhtml_serialization_tree_callback@@Base+0xc4>
   23bfc:	ldr	r4, [r7, #16]
   23c00:	mov	r0, r7
   23c04:	mov	r1, r5
   23c08:	mov	r2, r9
   23c0c:	bl	24008 <myhtml_serialization_node_callback@@Base+0x398>
   23c10:	cmp	r4, #0
   23c14:	bne	23c24 <myhtml_serialization_tree_callback@@Base+0xb4>
   23c18:	cmp	r0, #0
   23c1c:	beq	23bf0 <myhtml_serialization_tree_callback@@Base+0x80>
   23c20:	b	23c5c <myhtml_serialization_tree_callback@@Base+0xec>
   23c24:	cmp	r0, #0
   23c28:	bne	23c5c <myhtml_serialization_tree_callback@@Base+0xec>
   23c2c:	ldr	r0, [r7, #16]
   23c30:	b	23be0 <myhtml_serialization_tree_callback@@Base+0x70>
   23c34:	ldr	r0, [r7, #40]	; 0x28
   23c38:	ldr	r0, [r0, #84]	; 0x54
   23c3c:	cmp	r7, r0
   23c40:	beq	23c64 <myhtml_serialization_tree_callback@@Base+0xf4>
   23c44:	mov	r0, r7
   23c48:	mov	r1, r5
   23c4c:	mov	r2, r9
   23c50:	bl	24008 <myhtml_serialization_node_callback@@Base+0x398>
   23c54:	cmp	r0, #0
   23c58:	moveq	r8, #0
   23c5c:	mov	r0, r8
   23c60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23c64:	mov	r8, #0
   23c68:	mov	r0, r8
   23c6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00023c70 <myhtml_serialization_node_callback@@Base>:
   23c70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23c74:	add	fp, sp, #24
   23c78:	sub	sp, sp, #8
   23c7c:	mov	r5, r2
   23c80:	mov	r4, r1
   23c84:	mov	r7, r0
   23c88:	ldr	r1, [r0, #4]
   23c8c:	cmp	r1, #3
   23c90:	beq	23cc4 <myhtml_serialization_node_callback@@Base+0x54>
   23c94:	cmp	r1, #2
   23c98:	beq	23d4c <myhtml_serialization_node_callback@@Base+0xdc>
   23c9c:	cmp	r1, #1
   23ca0:	bne	23da4 <myhtml_serialization_node_callback@@Base+0x134>
   23ca4:	mov	r0, r7
   23ca8:	mov	r1, r4
   23cac:	mov	r2, r5
   23cb0:	bl	242fc <myhtml_serialization_node_callback@@Base+0x68c>
   23cb4:	mov	r6, #2
   23cb8:	cmp	r0, #0
   23cbc:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23cc0:	b	23d9c <myhtml_serialization_node_callback@@Base+0x12c>
   23cc4:	ldr	r0, [pc, #780]	; 23fd8 <myhtml_serialization_node_callback@@Base+0x368>
   23cc8:	add	r0, pc, r0
   23ccc:	mov	r1, #9
   23cd0:	mov	r2, r5
   23cd4:	blx	r4
   23cd8:	mov	r6, #2
   23cdc:	cmp	r0, #0
   23ce0:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23ce4:	ldr	r0, [pc, #752]	; 23fdc <myhtml_serialization_node_callback@@Base+0x36c>
   23ce8:	add	r0, pc, r0
   23cec:	mov	r1, #1
   23cf0:	mov	r2, r5
   23cf4:	blx	r4
   23cf8:	cmp	r0, #0
   23cfc:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23d00:	ldr	r0, [r7, #32]
   23d04:	cmp	r0, #0
   23d08:	ldrne	r7, [r0, #40]	; 0x28
   23d0c:	cmpne	r7, #0
   23d10:	beq	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23d14:	ldr	r0, [r7, #8]
   23d18:	cmp	r0, #0
   23d1c:	ldrne	r1, [r7, #16]
   23d20:	cmpne	r1, #0
   23d24:	bne	23e4c <myhtml_serialization_node_callback@@Base+0x1dc>
   23d28:	ldr	r0, [pc, #716]	; 23ffc <myhtml_serialization_node_callback@@Base+0x38c>
   23d2c:	add	r0, pc, r0
   23d30:	mov	r1, #1
   23d34:	mov	r2, r5
   23d38:	blx	r4
   23d3c:	cmp	r0, #0
   23d40:	mov	r6, #2
   23d44:	moveq	r6, #0
   23d48:	b	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23d4c:	ldr	r0, [pc, #636]	; 23fd0 <myhtml_serialization_node_callback@@Base+0x360>
   23d50:	add	r0, pc, r0
   23d54:	mov	r1, #4
   23d58:	mov	r2, r5
   23d5c:	blx	r4
   23d60:	mov	r6, #2
   23d64:	cmp	r0, #0
   23d68:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23d6c:	ldr	r1, [r7, #32]
   23d70:	cmp	r1, #0
   23d74:	ldrne	r0, [r1, #4]
   23d78:	cmpne	r0, #0
   23d7c:	bne	23e34 <myhtml_serialization_node_callback@@Base+0x1c4>
   23d80:	ldr	r0, [pc, #588]	; 23fd4 <myhtml_serialization_node_callback@@Base+0x364>
   23d84:	add	r0, pc, r0
   23d88:	mov	r1, #3
   23d8c:	mov	r2, r5
   23d90:	blx	r4
   23d94:	cmp	r0, #0
   23d98:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23d9c:	mov	r6, #0
   23da0:	b	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23da4:	ldr	r0, [r7, #40]	; 0x28
   23da8:	add	r2, sp, #4
   23dac:	bl	11ee8 <myhtml_tag_name_by_id@plt>
   23db0:	mov	r6, r0
   23db4:	ldr	r0, [pc, #580]	; 24000 <myhtml_serialization_node_callback@@Base+0x390>
   23db8:	add	r0, pc, r0
   23dbc:	mov	r1, #1
   23dc0:	mov	r2, r5
   23dc4:	blx	r4
   23dc8:	cmp	r0, #0
   23dcc:	bne	23de8 <myhtml_serialization_node_callback@@Base+0x178>
   23dd0:	ldr	r1, [sp, #4]
   23dd4:	mov	r0, r6
   23dd8:	mov	r2, r5
   23ddc:	blx	r4
   23de0:	cmp	r0, #0
   23de4:	beq	23df8 <myhtml_serialization_node_callback@@Base+0x188>
   23de8:	mov	r6, #2
   23dec:	mov	r0, r6
   23df0:	sub	sp, fp, #24
   23df4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23df8:	ldr	r0, [r7, #32]
   23dfc:	cmp	r0, #0
   23e00:	beq	23e1c <myhtml_serialization_node_callback@@Base+0x1ac>
   23e04:	ldr	r0, [r0, #40]	; 0x28
   23e08:	mov	r1, r4
   23e0c:	mov	r2, r5
   23e10:	bl	2448c <myhtml_serialization_node_callback@@Base+0x81c>
   23e14:	cmp	r0, #0
   23e18:	bne	23de8 <myhtml_serialization_node_callback@@Base+0x178>
   23e1c:	ldr	r0, [pc, #480]	; 24004 <myhtml_serialization_node_callback@@Base+0x394>
   23e20:	add	r0, pc, r0
   23e24:	mov	r1, #1
   23e28:	mov	r2, r5
   23e2c:	blx	r4
   23e30:	b	23cb4 <myhtml_serialization_node_callback@@Base+0x44>
   23e34:	ldr	r1, [r1, #12]
   23e38:	mov	r2, r5
   23e3c:	blx	r4
   23e40:	cmp	r0, #0
   23e44:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23e48:	b	23d80 <myhtml_serialization_node_callback@@Base+0x110>
   23e4c:	mov	r2, r5
   23e50:	blx	r4
   23e54:	cmp	r0, #0
   23e58:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23e5c:	ldr	r7, [r7]
   23e60:	cmp	r7, #0
   23e64:	beq	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23e68:	ldr	r0, [r7, #36]	; 0x24
   23e6c:	cmp	r0, #6
   23e70:	bne	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23e74:	ldr	r0, [r7, #28]
   23e78:	ldr	r1, [pc, #352]	; 23fe0 <myhtml_serialization_node_callback@@Base+0x370>
   23e7c:	add	r1, pc, r1
   23e80:	bl	1196c <mycore_strcasecmp@plt>
   23e84:	cmp	r0, #0
   23e88:	beq	23f18 <myhtml_serialization_node_callback@@Base+0x2a8>
   23e8c:	ldr	r0, [r7, #28]
   23e90:	ldr	r1, [pc, #332]	; 23fe4 <myhtml_serialization_node_callback@@Base+0x374>
   23e94:	add	r1, pc, r1
   23e98:	bl	1196c <mycore_strcasecmp@plt>
   23e9c:	cmp	r0, #0
   23ea0:	bne	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23ea4:	ldr	r7, [r7]
   23ea8:	cmp	r7, #0
   23eac:	beq	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23eb0:	ldr	r8, [r7]
   23eb4:	ldr	r0, [r7, #36]	; 0x24
   23eb8:	cmp	r0, #0
   23ebc:	beq	23fb4 <myhtml_serialization_node_callback@@Base+0x344>
   23ec0:	ldr	r0, [pc, #288]	; 23fe8 <myhtml_serialization_node_callback@@Base+0x378>
   23ec4:	add	r0, pc, r0
   23ec8:	mov	r1, #9
   23ecc:	mov	r2, r5
   23ed0:	blx	r4
   23ed4:	cmp	r0, #0
   23ed8:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23edc:	ldr	r0, [r7, #28]
   23ee0:	ldr	r1, [r7, #36]	; 0x24
   23ee4:	mov	r2, r5
   23ee8:	blx	r4
   23eec:	cmp	r0, #0
   23ef0:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23ef4:	ldr	r0, [pc, #240]	; 23fec <myhtml_serialization_node_callback@@Base+0x37c>
   23ef8:	add	r0, pc, r0
   23efc:	mov	r9, #1
   23f00:	mov	r1, #1
   23f04:	mov	r2, r5
   23f08:	blx	r4
   23f0c:	cmp	r0, #0
   23f10:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23f14:	b	23f24 <myhtml_serialization_node_callback@@Base+0x2b4>
   23f18:	ldr	r8, [r7]
   23f1c:	mov	r9, #0
   23f20:	mov	r7, #0
   23f24:	cmp	r8, #0
   23f28:	ldrne	r0, [r8, #36]	; 0x24
   23f2c:	cmpne	r0, #0
   23f30:	beq	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23f34:	cmp	r9, #0
   23f38:	ldrne	r0, [r7, #36]	; 0x24
   23f3c:	cmpne	r0, #0
   23f40:	bne	23f60 <myhtml_serialization_node_callback@@Base+0x2f0>
   23f44:	ldr	r0, [pc, #164]	; 23ff0 <myhtml_serialization_node_callback@@Base+0x380>
   23f48:	add	r0, pc, r0
   23f4c:	mov	r1, #7
   23f50:	mov	r2, r5
   23f54:	blx	r4
   23f58:	cmp	r0, #0
   23f5c:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23f60:	ldr	r0, [pc, #140]	; 23ff4 <myhtml_serialization_node_callback@@Base+0x384>
   23f64:	add	r0, pc, r0
   23f68:	mov	r6, #2
   23f6c:	mov	r1, #2
   23f70:	mov	r2, r5
   23f74:	blx	r4
   23f78:	cmp	r0, #0
   23f7c:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23f80:	ldr	r0, [r8, #28]
   23f84:	cmp	r0, #0
   23f88:	ldrne	r1, [r8, #36]	; 0x24
   23f8c:	cmpne	r1, #0
   23f90:	bne	23fbc <myhtml_serialization_node_callback@@Base+0x34c>
   23f94:	ldr	r0, [pc, #92]	; 23ff8 <myhtml_serialization_node_callback@@Base+0x388>
   23f98:	add	r0, pc, r0
   23f9c:	mov	r1, #1
   23fa0:	mov	r2, r5
   23fa4:	blx	r4
   23fa8:	cmp	r0, #0
   23fac:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23fb0:	b	23d28 <myhtml_serialization_node_callback@@Base+0xb8>
   23fb4:	mov	r9, #1
   23fb8:	b	23f24 <myhtml_serialization_node_callback@@Base+0x2b4>
   23fbc:	mov	r2, r5
   23fc0:	blx	r4
   23fc4:	cmp	r0, #0
   23fc8:	bne	23dec <myhtml_serialization_node_callback@@Base+0x17c>
   23fcc:	b	23f94 <myhtml_serialization_node_callback@@Base+0x324>
   23fd0:	muleq	sp, r1, ip
   23fd4:	andeq	r8, sp, r2, ror #24
   23fd8:	andeq	r8, sp, r2, lsr #26
   23fdc:	andeq	r8, sp, ip, lsl #26
   23fe0:	andeq	r8, sp, ip, lsl #23
   23fe4:	andeq	r8, sp, r2, ror #22
   23fe8:	andeq	r8, sp, r9, lsr fp
   23fec:	andeq	r8, sp, sp, lsl #22
   23ff0:			; <UNDEFINED> instruction: 0x000d8abf
   23ff4:	andeq	r8, sp, r0, lsr #21
   23ff8:	andeq	r8, sp, sp, ror #20
   23ffc:			; <UNDEFINED> instruction: 0x000d8cbc
   24000:	andeq	r8, sp, r7, asr ip
   24004:	andeq	r8, sp, r8, asr #23
   24008:	push	{r4, r5, r6, r7, fp, lr}
   2400c:	add	fp, sp, #16
   24010:	sub	sp, sp, #8
   24014:	mov	r5, r2
   24018:	mov	r4, r1
   2401c:	ldr	r1, [r0, #4]
   24020:	sub	r2, r1, #1
   24024:	cmp	r2, #141	; 0x8d
   24028:	bhi	24280 <myhtml_serialization_node_callback@@Base+0x610>
   2402c:	mov	r6, #0
   24030:	add	r3, pc, #4
   24034:	ldr	r2, [r3, r2, lsl #2]
   24038:	add	pc, r3, r2
   2403c:	andeq	r0, r0, ip, lsr #5
   24040:	andeq	r0, r0, ip, lsr #5
   24044:	andeq	r0, r0, ip, lsr #5
   24048:	andeq	r0, r0, r4, asr #4
   2404c:	andeq	r0, r0, r4, asr #4
   24050:	andeq	r0, r0, r4, asr #4
   24054:	andeq	r0, r0, r4, asr #4
   24058:	andeq	r0, r0, r4, asr #4
   2405c:	andeq	r0, r0, r4, asr #4
   24060:	andeq	r0, r0, r8, lsr r2
   24064:	andeq	r0, r0, r4, asr #4
   24068:	andeq	r0, r0, r4, asr #4
   2406c:	andeq	r0, r0, r4, asr #4
   24070:	andeq	r0, r0, r4, asr #4
   24074:	andeq	r0, r0, r8, lsr r2
   24078:	andeq	r0, r0, r4, asr #4
   2407c:	andeq	r0, r0, r4, asr #4
   24080:	andeq	r0, r0, r4, asr #4
   24084:	andeq	r0, r0, r8, lsr r2
   24088:	andeq	r0, r0, r4, asr #4
   2408c:	andeq	r0, r0, r4, asr #4
   24090:	andeq	r0, r0, r4, asr #4
   24094:	andeq	r0, r0, r4, asr #4
   24098:	andeq	r0, r0, r8, lsr r2
   2409c:	andeq	r0, r0, r4, asr #4
   240a0:	andeq	r0, r0, r4, asr #4
   240a4:	andeq	r0, r0, r4, asr #4
   240a8:	andeq	r0, r0, r4, asr #4
   240ac:	andeq	r0, r0, r4, asr #4
   240b0:	andeq	r0, r0, r4, asr #4
   240b4:	andeq	r0, r0, r8, lsr r2
   240b8:	andeq	r0, r0, r4, asr #4
   240bc:	andeq	r0, r0, r4, asr #4
   240c0:	andeq	r0, r0, r4, asr #4
   240c4:	andeq	r0, r0, r4, asr #4
   240c8:	andeq	r0, r0, r4, asr #4
   240cc:	andeq	r0, r0, r4, asr #4
   240d0:	andeq	r0, r0, r4, asr #4
   240d4:	andeq	r0, r0, r4, asr #4
   240d8:	andeq	r0, r0, r4, asr #4
   240dc:	andeq	r0, r0, r4, asr #4
   240e0:	andeq	r0, r0, r4, asr #4
   240e4:	andeq	r0, r0, r4, asr #4
   240e8:	andeq	r0, r0, r4, asr #4
   240ec:	andeq	r0, r0, r4, asr #4
   240f0:	andeq	r0, r0, r8, lsr r2
   240f4:	andeq	r0, r0, r4, asr #4
   240f8:	andeq	r0, r0, r4, asr #4
   240fc:	andeq	r0, r0, r4, asr #4
   24100:	andeq	r0, r0, r4, asr #4
   24104:	andeq	r0, r0, r4, asr #4
   24108:	andeq	r0, r0, r4, asr #4
   2410c:	andeq	r0, r0, r8, lsr r2
   24110:	andeq	r0, r0, r4, asr #4
   24114:	andeq	r0, r0, r4, asr #4
   24118:	andeq	r0, r0, r4, asr #4
   2411c:	andeq	r0, r0, r4, asr #4
   24120:	andeq	r0, r0, r4, asr #4
   24124:	andeq	r0, r0, r4, asr #4
   24128:	andeq	r0, r0, r4, asr #4
   2412c:	andeq	r0, r0, r4, asr #4
   24130:	andeq	r0, r0, r4, asr #4
   24134:	andeq	r0, r0, r4, asr #4
   24138:	andeq	r0, r0, r8, lsr r2
   2413c:	andeq	r0, r0, r4, asr #4
   24140:	andeq	r0, r0, r4, asr #4
   24144:	andeq	r0, r0, r4, asr #4
   24148:	andeq	r0, r0, r4, asr #4
   2414c:	andeq	r0, r0, r8, lsr r2
   24150:	andeq	r0, r0, r8, lsr r2
   24154:	andeq	r0, r0, r4, asr #4
   24158:	andeq	r0, r0, r4, asr #4
   2415c:	andeq	r0, r0, r4, asr #4
   24160:	andeq	r0, r0, r8, lsr r2
   24164:	andeq	r0, r0, r4, asr #4
   24168:	andeq	r0, r0, r4, asr #4
   2416c:	andeq	r0, r0, r4, asr #4
   24170:	andeq	r0, r0, r8, lsr r2
   24174:	andeq	r0, r0, r4, asr #4
   24178:	andeq	r0, r0, r4, asr #4
   2417c:	andeq	r0, r0, r4, asr #4
   24180:	andeq	r0, r0, r4, asr #4
   24184:	andeq	r0, r0, r4, asr #4
   24188:	andeq	r0, r0, r4, asr #4
   2418c:	andeq	r0, r0, r4, asr #4
   24190:	andeq	r0, r0, r8, lsr r2
   24194:	andeq	r0, r0, r4, asr #4
   24198:	andeq	r0, r0, r4, asr #4
   2419c:	andeq	r0, r0, r4, asr #4
   241a0:	andeq	r0, r0, r4, asr #4
   241a4:	andeq	r0, r0, r4, asr #4
   241a8:	andeq	r0, r0, r4, asr #4
   241ac:	andeq	r0, r0, r4, asr #4
   241b0:	andeq	r0, r0, r4, asr #4
   241b4:	andeq	r0, r0, r4, asr #4
   241b8:	andeq	r0, r0, r4, asr #4
   241bc:	andeq	r0, r0, r4, asr #4
   241c0:	andeq	r0, r0, r4, asr #4
   241c4:	andeq	r0, r0, r4, asr #4
   241c8:	andeq	r0, r0, r8, lsr r2
   241cc:	andeq	r0, r0, r4, asr #4
   241d0:	andeq	r0, r0, r4, asr #4
   241d4:	andeq	r0, r0, r4, asr #4
   241d8:	andeq	r0, r0, r4, asr #4
   241dc:	andeq	r0, r0, r4, asr #4
   241e0:	andeq	r0, r0, r4, asr #4
   241e4:	andeq	r0, r0, r4, asr #4
   241e8:	andeq	r0, r0, r4, asr #4
   241ec:	andeq	r0, r0, r4, asr #4
   241f0:	andeq	r0, r0, r4, asr #4
   241f4:	andeq	r0, r0, r4, asr #4
   241f8:	andeq	r0, r0, r4, asr #4
   241fc:	andeq	r0, r0, r4, asr #4
   24200:	andeq	r0, r0, r4, asr #4
   24204:	andeq	r0, r0, r4, asr #4
   24208:	andeq	r0, r0, r8, lsr r2
   2420c:	andeq	r0, r0, r4, asr #4
   24210:	andeq	r0, r0, r4, asr #4
   24214:	andeq	r0, r0, r4, asr #4
   24218:	andeq	r0, r0, r4, asr #4
   2421c:	andeq	r0, r0, r4, asr #4
   24220:	andeq	r0, r0, r4, asr #4
   24224:	andeq	r0, r0, r4, asr #4
   24228:	andeq	r0, r0, r4, asr #4
   2422c:	andeq	r0, r0, r4, asr #4
   24230:	andeq	r0, r0, r4, asr #4
   24234:	andeq	r0, r0, r4, asr #4
   24238:	andeq	r0, r0, r4, asr #4
   2423c:	andeq	r0, r0, r4, asr #4
   24240:	andeq	r0, r0, r4, asr #4
   24244:	andeq	r0, r0, r4, asr #4
   24248:	andeq	r0, r0, r4, asr #4
   2424c:	andeq	r0, r0, r4, asr #4
   24250:	andeq	r0, r0, r4, asr #4
   24254:	andeq	r0, r0, r4, asr #4
   24258:	andeq	r0, r0, r8, lsr r2
   2425c:	andeq	r0, r0, r4, asr #4
   24260:	andeq	r0, r0, r4, asr #4
   24264:	andeq	r0, r0, r4, asr #4
   24268:	andeq	r0, r0, r4, asr #4
   2426c:	andeq	r0, r0, r4, asr #4
   24270:	andeq	r0, r0, r8, lsr r2
   24274:	ldr	r2, [r0, #8]
   24278:	cmp	r2, #1
   2427c:	beq	242e8 <myhtml_serialization_node_callback@@Base+0x678>
   24280:	ldr	r0, [r0, #40]	; 0x28
   24284:	add	r2, sp, #4
   24288:	bl	11ee8 <myhtml_tag_name_by_id@plt>
   2428c:	mov	r7, r0
   24290:	ldr	r0, [pc, #92]	; 242f4 <myhtml_serialization_node_callback@@Base+0x684>
   24294:	add	r0, pc, r0
   24298:	mov	r6, #2
   2429c:	mov	r1, #2
   242a0:	mov	r2, r5
   242a4:	blx	r4
   242a8:	cmp	r0, #0
   242ac:	bne	242e8 <myhtml_serialization_node_callback@@Base+0x678>
   242b0:	ldr	r1, [sp, #4]
   242b4:	mov	r0, r7
   242b8:	mov	r2, r5
   242bc:	blx	r4
   242c0:	cmp	r0, #0
   242c4:	bne	242e8 <myhtml_serialization_node_callback@@Base+0x678>
   242c8:	ldr	r0, [pc, #40]	; 242f8 <myhtml_serialization_node_callback@@Base+0x688>
   242cc:	add	r0, pc, r0
   242d0:	mov	r1, #1
   242d4:	mov	r2, r5
   242d8:	blx	r4
   242dc:	mov	r6, r0
   242e0:	cmp	r0, #0
   242e4:	movwne	r6, #2
   242e8:	mov	r0, r6
   242ec:	sub	sp, fp, #16
   242f0:	pop	{r4, r5, r6, r7, fp, pc}
   242f4:	andeq	r8, sp, sp, lsr #15
   242f8:	andeq	r8, sp, ip, lsl r7
   242fc:	push	{fp, lr}
   24300:	mov	fp, sp
   24304:	mov	ip, r2
   24308:	mov	lr, r1
   2430c:	mov	r2, r0
   24310:	ldr	r1, [r0, #32]
   24314:	mov	r0, #0
   24318:	cmp	r1, #0
   2431c:	ldrne	r3, [r1, #4]
   24320:	cmpne	r3, #0
   24324:	bne	2432c <myhtml_serialization_node_callback@@Base+0x6bc>
   24328:	pop	{fp, pc}
   2432c:	ldr	r0, [r2, #24]
   24330:	cmp	r0, #0
   24334:	beq	2444c <myhtml_serialization_node_callback@@Base+0x7dc>
   24338:	ldr	r0, [r0, #4]
   2433c:	sub	r2, r0, #91	; 0x5b
   24340:	cmp	r2, #52	; 0x34
   24344:	bhi	2446c <myhtml_serialization_node_callback@@Base+0x7fc>
   24348:	add	r0, pc, #4
   2434c:	ldr	r2, [r0, r2, lsl #2]
   24350:	add	pc, r0, r2
   24354:	ldrdeq	r0, [r0], -r4
   24358:	ldrdeq	r0, [r0], -r4
   2435c:	andeq	r0, r0, r0, lsr #2
   24360:	andeq	r0, r0, r0, lsr #2
   24364:	andeq	r0, r0, r0, lsr #2
   24368:	andeq	r0, r0, r0, lsr #2
   2436c:	andeq	r0, r0, r0, lsr #2
   24370:	andeq	r0, r0, r0, lsr #2
   24374:	andeq	r0, r0, r0, lsr #2
   24378:	andeq	r0, r0, r0, lsr #2
   2437c:	ldrdeq	r0, [r0], -r4
   24380:	andeq	r0, r0, r0, lsr #2
   24384:	andeq	r0, r0, r0, lsr #2
   24388:	andeq	r0, r0, r0, lsr #2
   2438c:	andeq	r0, r0, r0, lsr #2
   24390:	andeq	r0, r0, r0, lsr #2
   24394:	andeq	r0, r0, r0, lsr #2
   24398:	andeq	r0, r0, r0, lsr #2
   2439c:	andeq	r0, r0, r0, lsr #2
   243a0:	andeq	r0, r0, r0, lsr #2
   243a4:	andeq	r0, r0, r0, lsr #2
   243a8:	ldrdeq	r0, [r0], -r4
   243ac:	andeq	r0, r0, r0, lsr #2
   243b0:	andeq	r0, r0, r0, lsr #2
   243b4:	andeq	r0, r0, r0, lsr #2
   243b8:	andeq	r0, r0, r0, lsr #2
   243bc:	andeq	r0, r0, r0, lsr #2
   243c0:	andeq	r0, r0, r0, lsr #2
   243c4:	andeq	r0, r0, r0, lsr #2
   243c8:	ldrdeq	r0, [r0], -r4
   243cc:	andeq	r0, r0, r0, lsr #2
   243d0:	andeq	r0, r0, r0, lsr #2
   243d4:	andeq	r0, r0, r0, lsr #2
   243d8:	andeq	r0, r0, r0, lsr #2
   243dc:	andeq	r0, r0, r0, lsr #2
   243e0:	andeq	r0, r0, r0, lsr #2
   243e4:	andeq	r0, r0, r0, lsr #2
   243e8:	andeq	r0, r0, r0, lsr #2
   243ec:	andeq	r0, r0, r0, lsr #2
   243f0:	andeq	r0, r0, r0, lsr #2
   243f4:	andeq	r0, r0, r0, lsr #2
   243f8:	andeq	r0, r0, r0, lsr #2
   243fc:	andeq	r0, r0, r0, lsr #2
   24400:	andeq	r0, r0, r0, lsr #2
   24404:	andeq	r0, r0, r0, lsr #2
   24408:	andeq	r0, r0, r0, lsr #2
   2440c:	andeq	r0, r0, r0, lsr #2
   24410:	andeq	r0, r0, r0, lsr #2
   24414:	andeq	r0, r0, r0, lsr #2
   24418:	andeq	r0, r0, r0, lsr #2
   2441c:	andeq	r0, r0, r0, lsr #2
   24420:	andeq	r0, r0, r0, lsr #2
   24424:	ldrdeq	r0, [r0], -r4
   24428:	ldr	r1, [r1, #12]
   2442c:	mov	r0, r3
   24430:	mov	r2, ip
   24434:	blx	lr
   24438:	mov	r1, r0
   2443c:	mov	r0, #2
   24440:	cmp	r1, #0
   24444:	moveq	r0, #0
   24448:	pop	{fp, pc}
   2444c:	ldr	r1, [r1, #12]
   24450:	mov	r0, r3
   24454:	mov	r2, lr
   24458:	mov	r3, ip
   2445c:	bl	24850 <myhtml_serialization_concatenate@@Base+0x1e8>
   24460:	cmp	r0, #0
   24464:	movwne	r0, #2
   24468:	pop	{fp, pc}
   2446c:	cmp	r0, #67	; 0x43
   24470:	beq	24428 <myhtml_serialization_node_callback@@Base+0x7b8>
   24474:	ldr	r1, [r1, #12]
   24478:	mov	r0, r3
   2447c:	mov	r2, lr
   24480:	mov	r3, ip
   24484:	bl	24850 <myhtml_serialization_concatenate@@Base+0x1e8>
   24488:	b	24438 <myhtml_serialization_node_callback@@Base+0x7c8>
   2448c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24490:	add	fp, sp, #28
   24494:	sub	sp, sp, #4
   24498:	cmp	r0, #0
   2449c:	beq	24600 <myhtml_serialization_node_callback@@Base+0x990>
   244a0:	mov	r5, r2
   244a4:	mov	r6, r1
   244a8:	mov	r7, r0
   244ac:	ldr	sl, [pc, #344]	; 2460c <myhtml_serialization_node_callback@@Base+0x99c>
   244b0:	add	sl, pc, sl
   244b4:	mov	r4, sp
   244b8:	ldr	r9, [pc, #336]	; 24610 <myhtml_serialization_node_callback@@Base+0x9a0>
   244bc:	add	r9, pc, r9
   244c0:	ldr	r8, [pc, #332]	; 24614 <myhtml_serialization_node_callback@@Base+0x9a4>
   244c4:	add	r8, pc, r8
   244c8:	mov	r0, sl
   244cc:	mov	r1, #1
   244d0:	mov	r2, r5
   244d4:	blx	r6
   244d8:	cmp	r0, #0
   244dc:	bne	245f4 <myhtml_serialization_node_callback@@Base+0x984>
   244e0:	ldr	r0, [r7, #64]	; 0x40
   244e4:	cmp	r0, #4
   244e8:	beq	2450c <myhtml_serialization_node_callback@@Base+0x89c>
   244ec:	cmp	r0, #6
   244f0:	beq	245bc <myhtml_serialization_node_callback@@Base+0x94c>
   244f4:	cmp	r0, #5
   244f8:	bne	24528 <myhtml_serialization_node_callback@@Base+0x8b8>
   244fc:	ldr	r0, [pc, #276]	; 24618 <myhtml_serialization_node_callback@@Base+0x9a8>
   24500:	add	r0, pc, r0
   24504:	mov	r1, #4
   24508:	b	24518 <myhtml_serialization_node_callback@@Base+0x8a8>
   2450c:	ldr	r0, [pc, #272]	; 24624 <myhtml_serialization_node_callback@@Base+0x9b4>
   24510:	add	r0, pc, r0
   24514:	mov	r1, #6
   24518:	mov	r2, r5
   2451c:	blx	r6
   24520:	cmp	r0, #0
   24524:	bne	245f4 <myhtml_serialization_node_callback@@Base+0x984>
   24528:	mov	r0, r7
   2452c:	mov	r1, r4
   24530:	bl	11f00 <myhtml_attribute_key@plt>
   24534:	cmp	r0, #0
   24538:	beq	24550 <myhtml_serialization_node_callback@@Base+0x8e0>
   2453c:	ldr	r1, [sp]
   24540:	mov	r2, r5
   24544:	blx	r6
   24548:	cmp	r0, #0
   2454c:	bne	245f4 <myhtml_serialization_node_callback@@Base+0x984>
   24550:	mov	r0, r9
   24554:	mov	r1, #2
   24558:	mov	r2, r5
   2455c:	blx	r6
   24560:	cmp	r0, #0
   24564:	bne	245f4 <myhtml_serialization_node_callback@@Base+0x984>
   24568:	mov	r0, r7
   2456c:	mov	r1, r4
   24570:	bl	118d0 <myhtml_attribute_value@plt>
   24574:	cmp	r0, #0
   24578:	beq	24594 <myhtml_serialization_node_callback@@Base+0x924>
   2457c:	ldr	r1, [sp]
   24580:	mov	r2, r6
   24584:	mov	r3, r5
   24588:	bl	246e0 <myhtml_serialization_concatenate@@Base+0x78>
   2458c:	cmp	r0, #0
   24590:	bne	245f4 <myhtml_serialization_node_callback@@Base+0x984>
   24594:	mov	r0, r8
   24598:	mov	r1, #1
   2459c:	mov	r2, r5
   245a0:	blx	r6
   245a4:	cmp	r0, #0
   245a8:	bne	245f4 <myhtml_serialization_node_callback@@Base+0x984>
   245ac:	ldr	r7, [r7]
   245b0:	cmp	r7, #0
   245b4:	bne	244c8 <myhtml_serialization_node_callback@@Base+0x858>
   245b8:	b	24600 <myhtml_serialization_node_callback@@Base+0x990>
   245bc:	ldr	r0, [r7, #8]
   245c0:	cmp	r0, #0
   245c4:	beq	24528 <myhtml_serialization_node_callback@@Base+0x8b8>
   245c8:	ldr	r1, [r7, #16]
   245cc:	cmp	r1, #5
   245d0:	bne	24528 <myhtml_serialization_node_callback@@Base+0x8b8>
   245d4:	ldr	r1, [pc, #64]	; 2461c <myhtml_serialization_node_callback@@Base+0x9ac>
   245d8:	add	r1, pc, r1
   245dc:	bl	110cc <mycore_strcmp@plt>
   245e0:	cmp	r0, #0
   245e4:	beq	24528 <myhtml_serialization_node_callback@@Base+0x8b8>
   245e8:	ldr	r0, [pc, #48]	; 24620 <myhtml_serialization_node_callback@@Base+0x9b0>
   245ec:	add	r0, pc, r0
   245f0:	b	24514 <myhtml_serialization_node_callback@@Base+0x8a4>
   245f4:	mov	r0, #2
   245f8:	sub	sp, fp, #28
   245fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24600:	mov	r0, #0
   24604:	sub	sp, fp, #28
   24608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2460c:	andeq	r8, sp, r4, asr #10
   24610:	andeq	r8, sp, lr, ror #10
   24614:	andeq	r8, sp, r1, asr #10
   24618:	andeq	r8, sp, r1, lsl r5
   2461c:	andeq	r8, sp, lr, lsr r4
   24620:	andeq	r8, sp, r0, lsr r4
   24624:	andeq	r8, sp, r3, lsl r5

00024628 <myhtml_serialization_reallocate@@Base>:
   24628:	push	{r4, r5, fp, lr}
   2462c:	add	fp, sp, #8
   24630:	mov	r5, r1
   24634:	mov	r4, r0
   24638:	ldr	r0, [r0]
   2463c:	bl	110b4 <mycore_realloc@plt>
   24640:	cmp	r0, #0
   24644:	stmne	r4, {r0, r5}
   24648:	movne	r0, #0
   2464c:	popne	{r4, r5, fp, pc}
   24650:	mov	r0, #0
   24654:	str	r0, [r4]
   24658:	str	r0, [r4, #4]
   2465c:	str	r0, [r4, #8]
   24660:	mov	r0, #2
   24664:	pop	{r4, r5, fp, pc}

00024668 <myhtml_serialization_concatenate@@Base>:
   24668:	push	{r4, r5, r6, sl, fp, lr}
   2466c:	add	fp, sp, #16
   24670:	mov	r4, r2
   24674:	mov	r5, r1
   24678:	mov	r6, r0
   2467c:	ldr	r1, [r2, #4]
   24680:	ldr	r0, [r2, #8]
   24684:	add	r0, r0, r5
   24688:	cmp	r0, r1
   2468c:	bcc	246ac <myhtml_serialization_concatenate@@Base+0x44>
   24690:	add	r1, r0, #4096	; 0x1000
   24694:	mov	r0, r4
   24698:	bl	117c8 <myhtml_serialization_reallocate@plt>
   2469c:	mov	r1, r0
   246a0:	mov	r0, #2
   246a4:	cmp	r1, #0
   246a8:	popne	{r4, r5, r6, sl, fp, pc}
   246ac:	ldr	r0, [r4]
   246b0:	ldr	r1, [r4, #8]
   246b4:	add	r0, r0, r1
   246b8:	mov	r1, r6
   246bc:	mov	r2, r5
   246c0:	bl	11d08 <strncpy@plt>
   246c4:	ldr	r1, [r4]
   246c8:	ldr	r0, [r4, #8]
   246cc:	add	r2, r0, r5
   246d0:	str	r2, [r4, #8]
   246d4:	mov	r0, #0
   246d8:	strb	r0, [r1, r2]
   246dc:	pop	{r4, r5, r6, sl, fp, pc}
   246e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246e4:	add	fp, sp, #28
   246e8:	sub	sp, sp, #4
   246ec:	cmp	r1, #0
   246f0:	beq	2482c <myhtml_serialization_concatenate@@Base+0x1c4>
   246f4:	mov	r5, r3
   246f8:	mov	r4, r2
   246fc:	mov	r6, r1
   24700:	mov	r7, r0
   24704:	mov	r9, #0
   24708:	ldr	r8, [pc, #308]	; 24844 <myhtml_serialization_concatenate@@Base+0x1dc>
   2470c:	add	r8, pc, r8
   24710:	ldr	sl, [pc, #304]	; 24848 <myhtml_serialization_concatenate@@Base+0x1e0>
   24714:	add	sl, pc, sl
   24718:	mov	r1, #0
   2471c:	ldrb	r0, [r7, r9]
   24720:	cmp	r0, #34	; 0x22
   24724:	beq	24764 <myhtml_serialization_concatenate@@Base+0xfc>
   24728:	cmp	r0, #160	; 0xa0
   2472c:	beq	2478c <myhtml_serialization_concatenate@@Base+0x124>
   24730:	cmp	r0, #38	; 0x26
   24734:	bne	247ec <myhtml_serialization_concatenate@@Base+0x184>
   24738:	cmp	r1, #0
   2473c:	beq	24758 <myhtml_serialization_concatenate@@Base+0xf0>
   24740:	sub	r0, r9, r1
   24744:	add	r0, r7, r0
   24748:	mov	r2, r5
   2474c:	blx	r4
   24750:	cmp	r0, #0
   24754:	bne	24838 <myhtml_serialization_concatenate@@Base+0x1d0>
   24758:	mov	r0, sl
   2475c:	mov	r1, #5
   24760:	b	247d4 <myhtml_serialization_concatenate@@Base+0x16c>
   24764:	cmp	r1, #0
   24768:	beq	24784 <myhtml_serialization_concatenate@@Base+0x11c>
   2476c:	sub	r0, r9, r1
   24770:	add	r0, r7, r0
   24774:	mov	r2, r5
   24778:	blx	r4
   2477c:	cmp	r0, #0
   24780:	bne	24838 <myhtml_serialization_concatenate@@Base+0x1d0>
   24784:	mov	r0, r8
   24788:	b	247d0 <myhtml_serialization_concatenate@@Base+0x168>
   2478c:	cmp	r9, #0
   24790:	beq	247ec <myhtml_serialization_concatenate@@Base+0x184>
   24794:	add	r0, r7, r9
   24798:	ldrb	r0, [r0, #-1]
   2479c:	cmp	r0, #194	; 0xc2
   247a0:	bne	247ec <myhtml_serialization_concatenate@@Base+0x184>
   247a4:	cmp	r1, #0
   247a8:	beq	247c8 <myhtml_serialization_concatenate@@Base+0x160>
   247ac:	sub	r0, r9, r1
   247b0:	add	r0, r7, r0
   247b4:	sub	r1, r1, #1
   247b8:	mov	r2, r5
   247bc:	blx	r4
   247c0:	cmp	r0, #0
   247c4:	bne	24838 <myhtml_serialization_concatenate@@Base+0x1d0>
   247c8:	ldr	r0, [pc, #124]	; 2484c <myhtml_serialization_concatenate@@Base+0x1e4>
   247cc:	add	r0, pc, r0
   247d0:	mov	r1, #6
   247d4:	mov	r2, r5
   247d8:	blx	r4
   247dc:	mov	r1, #0
   247e0:	cmp	r0, #0
   247e4:	beq	247f0 <myhtml_serialization_concatenate@@Base+0x188>
   247e8:	b	24838 <myhtml_serialization_concatenate@@Base+0x1d0>
   247ec:	add	r1, r1, #1
   247f0:	add	r9, r9, #1
   247f4:	cmp	r9, r6
   247f8:	bcc	2471c <myhtml_serialization_concatenate@@Base+0xb4>
   247fc:	cmp	r1, #0
   24800:	beq	2482c <myhtml_serialization_concatenate@@Base+0x1c4>
   24804:	add	r0, r7, r6
   24808:	sub	r0, r0, r1
   2480c:	mov	r2, r5
   24810:	blx	r4
   24814:	mov	r1, r0
   24818:	mov	r0, #2
   2481c:	cmp	r1, #0
   24820:	moveq	r0, #0
   24824:	sub	sp, fp, #28
   24828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2482c:	mov	r0, #0
   24830:	sub	sp, fp, #28
   24834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24838:	mov	r0, #2
   2483c:	sub	sp, fp, #28
   24840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24844:	andeq	r8, sp, r7, lsr #6
   24848:	andeq	r8, sp, r9, lsl r3
   2484c:	andeq	r8, sp, lr, ror #4
   24850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24854:	add	fp, sp, #28
   24858:	sub	sp, sp, #4
   2485c:	cmp	r1, #0
   24860:	beq	249dc <myhtml_serialization_concatenate@@Base+0x374>
   24864:	mov	r5, r3
   24868:	mov	r4, r2
   2486c:	mov	r6, r1
   24870:	mov	r7, r0
   24874:	mov	r8, #0
   24878:	ldr	r9, [pc, #372]	; 249f4 <myhtml_serialization_concatenate@@Base+0x38c>
   2487c:	add	r9, pc, r9
   24880:	ldr	sl, [pc, #368]	; 249f8 <myhtml_serialization_concatenate@@Base+0x390>
   24884:	add	sl, pc, sl
   24888:	mov	r1, #0
   2488c:	ldrb	r0, [r7, r8]
   24890:	cmp	r0, #61	; 0x3d
   24894:	bgt	248d0 <myhtml_serialization_concatenate@@Base+0x268>
   24898:	cmp	r0, #38	; 0x26
   2489c:	beq	24934 <myhtml_serialization_concatenate@@Base+0x2cc>
   248a0:	cmp	r0, #60	; 0x3c
   248a4:	bne	2492c <myhtml_serialization_concatenate@@Base+0x2c4>
   248a8:	cmp	r1, #0
   248ac:	beq	248c8 <myhtml_serialization_concatenate@@Base+0x260>
   248b0:	sub	r0, r8, r1
   248b4:	add	r0, r7, r0
   248b8:	mov	r2, r5
   248bc:	blx	r4
   248c0:	cmp	r0, #0
   248c4:	bne	249e8 <myhtml_serialization_concatenate@@Base+0x380>
   248c8:	mov	r0, r9
   248cc:	b	24988 <myhtml_serialization_concatenate@@Base+0x320>
   248d0:	cmp	r0, #62	; 0x3e
   248d4:	beq	24964 <myhtml_serialization_concatenate@@Base+0x2fc>
   248d8:	cmp	r0, #160	; 0xa0
   248dc:	bne	2492c <myhtml_serialization_concatenate@@Base+0x2c4>
   248e0:	cmp	r8, #0
   248e4:	beq	2492c <myhtml_serialization_concatenate@@Base+0x2c4>
   248e8:	add	r0, r7, r8
   248ec:	ldrb	r0, [r0, #-1]
   248f0:	cmp	r0, #194	; 0xc2
   248f4:	bne	2492c <myhtml_serialization_concatenate@@Base+0x2c4>
   248f8:	cmp	r1, #0
   248fc:	beq	2491c <myhtml_serialization_concatenate@@Base+0x2b4>
   24900:	sub	r0, r8, r1
   24904:	add	r0, r7, r0
   24908:	sub	r1, r1, #1
   2490c:	mov	r2, r5
   24910:	blx	r4
   24914:	cmp	r0, #0
   24918:	bne	249e8 <myhtml_serialization_concatenate@@Base+0x380>
   2491c:	ldr	r0, [pc, #220]	; 24a00 <myhtml_serialization_concatenate@@Base+0x398>
   24920:	add	r0, pc, r0
   24924:	mov	r1, #6
   24928:	b	2498c <myhtml_serialization_concatenate@@Base+0x324>
   2492c:	add	r1, r1, #1
   24930:	b	249a0 <myhtml_serialization_concatenate@@Base+0x338>
   24934:	cmp	r1, #0
   24938:	beq	24954 <myhtml_serialization_concatenate@@Base+0x2ec>
   2493c:	sub	r0, r8, r1
   24940:	add	r0, r7, r0
   24944:	mov	r2, r5
   24948:	blx	r4
   2494c:	cmp	r0, #0
   24950:	bne	249e8 <myhtml_serialization_concatenate@@Base+0x380>
   24954:	ldr	r0, [pc, #160]	; 249fc <myhtml_serialization_concatenate@@Base+0x394>
   24958:	add	r0, pc, r0
   2495c:	mov	r1, #5
   24960:	b	2498c <myhtml_serialization_concatenate@@Base+0x324>
   24964:	cmp	r1, #0
   24968:	beq	24984 <myhtml_serialization_concatenate@@Base+0x31c>
   2496c:	sub	r0, r8, r1
   24970:	add	r0, r7, r0
   24974:	mov	r2, r5
   24978:	blx	r4
   2497c:	cmp	r0, #0
   24980:	bne	249e8 <myhtml_serialization_concatenate@@Base+0x380>
   24984:	mov	r0, sl
   24988:	mov	r1, #4
   2498c:	mov	r2, r5
   24990:	blx	r4
   24994:	mov	r1, #0
   24998:	cmp	r0, #0
   2499c:	bne	249e8 <myhtml_serialization_concatenate@@Base+0x380>
   249a0:	add	r8, r8, #1
   249a4:	cmp	r8, r6
   249a8:	bcc	2488c <myhtml_serialization_concatenate@@Base+0x224>
   249ac:	cmp	r1, #0
   249b0:	beq	249dc <myhtml_serialization_concatenate@@Base+0x374>
   249b4:	add	r0, r7, r6
   249b8:	sub	r0, r0, r1
   249bc:	mov	r2, r5
   249c0:	blx	r4
   249c4:	mov	r1, r0
   249c8:	mov	r0, #2
   249cc:	cmp	r1, #0
   249d0:	moveq	r0, #0
   249d4:	sub	sp, fp, #28
   249d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249dc:	mov	r0, #0
   249e0:	sub	sp, fp, #28
   249e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249e8:	mov	r0, #2
   249ec:	sub	sp, fp, #28
   249f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249f4:	andeq	r8, sp, r8, asr #3
   249f8:	andeq	r8, sp, r5, asr #3
   249fc:	ldrdeq	r8, [sp], -r5
   24a00:	andeq	r8, sp, sl, lsl r1

00024a04 <myhtml_stream_buffer_create@@Base>:
   24a04:	mov	r0, #1
   24a08:	mov	r1, #36	; 0x24
   24a0c:	b	113a8 <mycore_calloc@plt>

00024a10 <myhtml_stream_buffer_init@@Base>:
   24a10:	push	{r4, r5, fp, lr}
   24a14:	add	fp, sp, #8
   24a18:	mov	r4, r0
   24a1c:	mov	r5, #0
   24a20:	str	r5, [r0, #4]
   24a24:	str	r1, [r0, #8]
   24a28:	mov	r0, r1
   24a2c:	mov	r1, #12
   24a30:	bl	113a8 <mycore_calloc@plt>
   24a34:	str	r0, [r4]
   24a38:	cmp	r0, #0
   24a3c:	movweq	r5, #37633	; 0x9301
   24a40:	mov	r0, r5
   24a44:	pop	{r4, r5, fp, pc}

00024a48 <myhtml_stream_buffer_entry_init@@Base>:
   24a48:	push	{r4, r5, r6, sl, fp, lr}
   24a4c:	add	fp, sp, #16
   24a50:	mov	r5, r1
   24a54:	mov	r4, r0
   24a58:	ldr	r0, [r0]
   24a5c:	cmp	r0, #0
   24a60:	beq	24a78 <myhtml_stream_buffer_entry_init@@Base+0x30>
   24a64:	ldr	r1, [r4, #8]
   24a68:	mov	r6, #0
   24a6c:	cmp	r1, r5
   24a70:	bcs	24a98 <myhtml_stream_buffer_entry_init@@Base+0x50>
   24a74:	bl	12188 <mycore_free@plt>
   24a78:	mov	r6, #0
   24a7c:	str	r6, [r4, #4]
   24a80:	str	r5, [r4, #8]
   24a84:	mov	r0, r5
   24a88:	bl	12050 <mycore_malloc@plt>
   24a8c:	str	r0, [r4]
   24a90:	cmp	r0, #0
   24a94:	movweq	r6, #37635	; 0x9303
   24a98:	mov	r0, r6
   24a9c:	pop	{r4, r5, r6, sl, fp, pc}

00024aa0 <myhtml_stream_buffer_entry_clean@@Base>:
   24aa0:	cmp	r0, #0
   24aa4:	movne	r1, #0
   24aa8:	strne	r1, [r0, #4]
   24aac:	bx	lr

00024ab0 <myhtml_stream_buffer_entry_destroy@@Base>:
   24ab0:	push	{r4, r5, r6, sl, fp, lr}
   24ab4:	add	fp, sp, #16
   24ab8:	mov	r4, #0
   24abc:	cmp	r0, #0
   24ac0:	beq	24af0 <myhtml_stream_buffer_entry_destroy@@Base+0x40>
   24ac4:	mov	r6, r1
   24ac8:	mov	r5, r0
   24acc:	ldr	r0, [r0]
   24ad0:	cmp	r0, #0
   24ad4:	beq	24adc <myhtml_stream_buffer_entry_destroy@@Base+0x2c>
   24ad8:	bl	12188 <mycore_free@plt>
   24adc:	cmp	r6, #0
   24ae0:	moveq	r0, r5
   24ae4:	popeq	{r4, r5, r6, sl, fp, pc}
   24ae8:	mov	r0, r5
   24aec:	bl	12188 <mycore_free@plt>
   24af0:	mov	r0, r4
   24af4:	pop	{r4, r5, r6, sl, fp, pc}

00024af8 <myhtml_stream_buffer_clean@@Base>:
   24af8:	cmp	r0, #0
   24afc:	movne	r1, #0
   24b00:	strne	r1, [r0, #4]
   24b04:	bx	lr

00024b08 <myhtml_stream_buffer_destroy@@Base>:
   24b08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24b0c:	add	fp, sp, #24
   24b10:	mov	r4, #0
   24b14:	cmp	r0, #0
   24b18:	beq	24b84 <myhtml_stream_buffer_destroy@@Base+0x7c>
   24b1c:	mov	r8, r1
   24b20:	mov	r5, r0
   24b24:	ldr	r0, [r0]
   24b28:	cmp	r0, #0
   24b2c:	beq	24b70 <myhtml_stream_buffer_destroy@@Base+0x68>
   24b30:	ldr	r0, [r5, #4]
   24b34:	cmp	r0, #0
   24b38:	beq	24b68 <myhtml_stream_buffer_destroy@@Base+0x60>
   24b3c:	mov	r7, #0
   24b40:	mov	r6, #0
   24b44:	ldr	r0, [r5]
   24b48:	add	r0, r0, r7
   24b4c:	mov	r1, #0
   24b50:	bl	115d0 <myhtml_stream_buffer_entry_destroy@plt>
   24b54:	add	r7, r7, #12
   24b58:	add	r6, r6, #1
   24b5c:	ldr	r0, [r5, #4]
   24b60:	cmp	r6, r0
   24b64:	bcc	24b44 <myhtml_stream_buffer_destroy@@Base+0x3c>
   24b68:	ldr	r0, [r5]
   24b6c:	bl	12188 <mycore_free@plt>
   24b70:	cmp	r8, #0
   24b74:	moveq	r0, r5
   24b78:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   24b7c:	mov	r0, r5
   24b80:	bl	12188 <mycore_free@plt>
   24b84:	mov	r0, r4
   24b88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024b8c <myhtml_stream_buffer_add_entry@@Base>:
   24b8c:	push	{r4, r5, r6, r7, fp, lr}
   24b90:	add	fp, sp, #16
   24b94:	mov	r5, r1
   24b98:	mov	r4, r0
   24b9c:	ldr	r0, [r0, #4]
   24ba0:	ldr	r7, [r4, #8]
   24ba4:	cmp	r0, r7
   24ba8:	bcc	24bf0 <myhtml_stream_buffer_add_entry@@Base+0x64>
   24bac:	add	r0, r7, r7, lsl #1
   24bb0:	lsl	r1, r0, #3
   24bb4:	mov	r0, r4
   24bb8:	bl	110b4 <mycore_realloc@plt>
   24bbc:	cmp	r0, #0
   24bc0:	moveq	r0, #0
   24bc4:	popeq	{r4, r5, r6, r7, fp, pc}
   24bc8:	mov	r6, r0
   24bcc:	lsl	r7, r7, #1
   24bd0:	ldr	r0, [r4, #8]
   24bd4:	sub	r2, r7, r0
   24bd8:	add	r0, r0, r0, lsl #1
   24bdc:	add	r0, r6, r0, lsl #2
   24be0:	mov	r1, #0
   24be4:	bl	11ccc <memset@plt>
   24be8:	str	r6, [r4]
   24bec:	str	r7, [r4, #8]
   24bf0:	ldm	r4, {r0, r1}
   24bf4:	add	r1, r1, r1, lsl #1
   24bf8:	add	r6, r0, r1, lsl #2
   24bfc:	mov	r0, r6
   24c00:	mov	r1, r5
   24c04:	bl	11c24 <myhtml_stream_buffer_entry_init@plt>
   24c08:	mov	r1, r0
   24c0c:	mov	r0, #0
   24c10:	cmp	r1, #0
   24c14:	popne	{r4, r5, r6, r7, fp, pc}
   24c18:	ldr	r0, [r4, #4]
   24c1c:	add	r0, r0, #1
   24c20:	str	r0, [r4, #4]
   24c24:	mov	r0, r6
   24c28:	pop	{r4, r5, r6, r7, fp, pc}

00024c2c <myhtml_stream_buffer_current_entry@@Base>:
   24c2c:	ldr	r1, [r0, #4]
   24c30:	cmp	r1, #0
   24c34:	ldrne	r0, [r0]
   24c38:	addne	r1, r1, r1, lsl #1
   24c3c:	addne	r0, r0, r1, lsl #2
   24c40:	subne	r0, r0, #12
   24c44:	bxne	lr
   24c48:	mov	r0, #0
   24c4c:	bx	lr

00024c50 <myhtml_tag_create@@Base>:
   24c50:	mov	r0, #20
   24c54:	b	12050 <mycore_malloc@plt>

00024c58 <myhtml_tag_init@@Base>:
   24c58:	push	{r4, r5, fp, lr}
   24c5c:	add	fp, sp, #8
   24c60:	sub	sp, sp, #8
   24c64:	mov	r4, r1
   24c68:	mov	r5, r0
   24c6c:	bl	11738 <mcsimple_create@plt>
   24c70:	str	r0, [r4, #4]
   24c74:	cmp	r0, #0
   24c78:	movweq	r0, #37264	; 0x9190
   24c7c:	subeq	sp, fp, #8
   24c80:	popeq	{r4, r5, fp, pc}
   24c84:	mov	r1, #128	; 0x80
   24c88:	mov	r2, #1024	; 0x400
   24c8c:	mov	r3, #44	; 0x2c
   24c90:	bl	11894 <mcsimple_init@plt>
   24c94:	ldr	r0, [r5, #4]
   24c98:	add	r1, sp, #4
   24c9c:	bl	11708 <mchar_async_node_add@plt>
   24ca0:	str	r0, [r4, #12]
   24ca4:	mov	r0, #2
   24ca8:	bl	11a8c <mctree_create@plt>
   24cac:	mov	r1, r0
   24cb0:	str	r0, [r4]
   24cb4:	ldr	r0, [r5, #4]
   24cb8:	mov	r2, #252	; 0xfc
   24cbc:	str	r2, [r4, #8]
   24cc0:	str	r0, [r4, #16]
   24cc4:	ldr	r0, [sp, #4]
   24cc8:	cmp	r0, #0
   24ccc:	bne	24ce8 <myhtml_tag_init@@Base+0x90>
   24cd0:	cmp	r1, #0
   24cd4:	mov	r0, #2
   24cd8:	beq	24ce8 <myhtml_tag_init@@Base+0x90>
   24cdc:	mov	r0, r4
   24ce0:	bl	12410 <myhtml_tag_clean@plt>
   24ce4:	mov	r0, #0
   24ce8:	sub	sp, fp, #8
   24cec:	pop	{r4, r5, fp, pc}

00024cf0 <myhtml_tag_clean@@Base>:
   24cf0:	push	{r4, sl, fp, lr}
   24cf4:	add	fp, sp, #8
   24cf8:	mov	r4, r0
   24cfc:	mov	r0, #252	; 0xfc
   24d00:	str	r0, [r4, #8]
   24d04:	ldr	r0, [r4, #4]
   24d08:	bl	116c0 <mcsimple_clean@plt>
   24d0c:	ldr	r1, [r4, #12]
   24d10:	ldr	r0, [r4, #16]
   24d14:	bl	11b1c <mchar_async_node_clean@plt>
   24d18:	ldr	r0, [r4]
   24d1c:	pop	{r4, sl, fp, lr}
   24d20:	b	11768 <mctree_clean@plt>

00024d24 <myhtml_tag_destroy@@Base>:
   24d24:	cmp	r0, #0
   24d28:	beq	24d6c <myhtml_tag_destroy@@Base+0x48>
   24d2c:	push	{r4, sl, fp, lr}
   24d30:	add	fp, sp, #8
   24d34:	mov	r4, r0
   24d38:	ldr	r0, [r0]
   24d3c:	bl	11540 <mctree_destroy@plt>
   24d40:	str	r0, [r4]
   24d44:	ldr	r0, [r4, #4]
   24d48:	mov	r1, #1
   24d4c:	bl	117ec <mcsimple_destroy@plt>
   24d50:	str	r0, [r4, #4]
   24d54:	ldr	r1, [r4, #12]
   24d58:	ldr	r0, [r4, #16]
   24d5c:	bl	12014 <mchar_async_node_delete@plt>
   24d60:	mov	r0, r4
   24d64:	bl	12188 <mycore_free@plt>
   24d68:	pop	{r4, sl, fp, lr}
   24d6c:	mov	r0, #0
   24d70:	bx	lr

00024d74 <myhtml_tag_add@@Base>:
   24d74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24d78:	add	fp, sp, #24
   24d7c:	sub	sp, sp, #8
   24d80:	mov	r8, r3
   24d84:	mov	r6, r2
   24d88:	mov	r4, r1
   24d8c:	mov	r5, r0
   24d90:	ldr	r1, [r0, #12]
   24d94:	ldr	r0, [r0, #16]
   24d98:	add	r2, r2, #1
   24d9c:	bl	11d2c <mchar_async_malloc@plt>
   24da0:	mov	r7, r0
   24da4:	ldr	r0, [fp, #8]
   24da8:	cmp	r0, #0
   24dac:	beq	24de4 <myhtml_tag_add@@Base+0x70>
   24db0:	cmp	r6, #0
   24db4:	beq	24df4 <myhtml_tag_add@@Base+0x80>
   24db8:	mov	r0, r6
   24dbc:	mov	r1, r7
   24dc0:	ldrb	r2, [r4], #1
   24dc4:	sub	r3, r2, #65	; 0x41
   24dc8:	uxtb	r3, r3
   24dcc:	cmp	r3, #26
   24dd0:	orrcc	r2, r2, #96	; 0x60
   24dd4:	strb	r2, [r1], #1
   24dd8:	subs	r0, r0, #1
   24ddc:	bne	24dc0 <myhtml_tag_add@@Base+0x4c>
   24de0:	b	24df4 <myhtml_tag_add@@Base+0x80>
   24de4:	mov	r0, r7
   24de8:	mov	r1, r4
   24dec:	mov	r2, r6
   24df0:	bl	11d08 <strncpy@plt>
   24df4:	mov	r9, #0
   24df8:	strb	r9, [r7, r6]
   24dfc:	ldr	r0, [r5, #4]
   24e00:	bl	11b70 <mcsimple_malloc@plt>
   24e04:	mov	r4, r0
   24e08:	ldr	r0, [r5]
   24e0c:	str	r9, [sp]
   24e10:	mov	r1, r7
   24e14:	mov	r2, r6
   24e18:	mov	r3, r4
   24e1c:	bl	11d74 <mctree_insert@plt>
   24e20:	ldr	r0, [r5, #8]
   24e24:	stm	r4, {r0, r7}
   24e28:	str	r6, [r4, #8]
   24e2c:	str	r8, [r4, #12]
   24e30:	add	r1, r0, #1
   24e34:	str	r1, [r5, #8]
   24e38:	vmov.i32	q8, #0	; 0x00000000
   24e3c:	add	r1, r4, #28
   24e40:	vst1.32	{d16-d17}, [r1]
   24e44:	add	r1, r4, #16
   24e48:	vst1.32	{d16-d17}, [r1]
   24e4c:	sub	sp, fp, #24
   24e50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00024e54 <myhtml_tag_set_category@@Base>:
   24e54:	cmp	r1, #252	; 0xfc
   24e58:	bxcc	lr
   24e5c:	push	{r4, r5, fp, lr}
   24e60:	add	fp, sp, #8
   24e64:	mov	r4, r3
   24e68:	mov	r5, r2
   24e6c:	ldr	r0, [r0, #4]
   24e70:	sub	r1, r1, #252	; 0xfc
   24e74:	bl	12338 <mcsimple_get_by_absolute_position@plt>
   24e78:	add	r0, r0, r5, lsl #2
   24e7c:	str	r4, [r0, #16]
   24e80:	pop	{r4, r5, fp, lr}
   24e84:	bx	lr

00024e88 <myhtml_tag_get_by_id@@Base>:
   24e88:	cmp	r1, #252	; 0xfc
   24e8c:	bcc	24e9c <myhtml_tag_get_by_id@@Base+0x14>
   24e90:	ldr	r0, [r0, #4]
   24e94:	sub	r1, r1, #252	; 0xfc
   24e98:	b	12338 <mcsimple_get_by_absolute_position@plt>
   24e9c:	mov	r0, r1
   24ea0:	b	1148c <myhtml_tag_static_get_by_id@plt>

00024ea4 <myhtml_tag_get_by_name@@Base>:
   24ea4:	push	{r4, r5, r6, sl, fp, lr}
   24ea8:	add	fp, sp, #16
   24eac:	mov	r5, r2
   24eb0:	mov	r6, r1
   24eb4:	mov	r4, r0
   24eb8:	mov	r0, r1
   24ebc:	mov	r1, r2
   24ec0:	bl	11d38 <myhtml_tag_static_search@plt>
   24ec4:	cmp	r0, #0
   24ec8:	popne	{r4, r5, r6, sl, fp, pc}
   24ecc:	ldr	r0, [r4]
   24ed0:	mov	r1, r6
   24ed4:	mov	r2, r5
   24ed8:	bl	11b7c <mctree_search_lowercase@plt>
   24edc:	rsb	r0, r0, r0, lsl #3
   24ee0:	ldr	r1, [r4]
   24ee4:	ldr	r1, [r1]
   24ee8:	add	r0, r1, r0, lsl #2
   24eec:	ldr	r0, [r0, #8]
   24ef0:	pop	{r4, r5, r6, sl, fp, pc}

00024ef4 <myhtml_tag_static_search@@Base>:
   24ef4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24ef8:	add	fp, sp, #24
   24efc:	mov	r4, r1
   24f00:	mov	r8, r0
   24f04:	ldrb	r1, [r0], r1
   24f08:	ldrb	r0, [r0, #-1]
   24f0c:	ldr	r2, [pc, #176]	; 24fc4 <myhtml_tag_static_search@@Base+0xd0>
   24f10:	add	r2, pc, r2
   24f14:	ldrb	r0, [r2, r0]
   24f18:	ldrb	r1, [r2, r1]
   24f1c:	mul	r1, r1, r4
   24f20:	mul	r0, r1, r0
   24f24:	movw	r1, #411	; 0x19b
   24f28:	movt	r1, #4515	; 0x11a3
   24f2c:	umull	r1, r2, r0, r1
   24f30:	sub	r1, r0, r2
   24f34:	add	r1, r2, r1, lsr #1
   24f38:	lsr	r1, r1, #8
   24f3c:	movw	r2, #479	; 0x1df
   24f40:	mls	r0, r1, r2, r0
   24f44:	add	r5, r0, #1
   24f48:	add	r0, r5, r5, lsl #1
   24f4c:	ldr	r7, [pc, #116]	; 24fc8 <myhtml_tag_static_search@@Base+0xd4>
   24f50:	add	r7, pc, r7
   24f54:	b	24f5c <myhtml_tag_static_search@@Base+0x68>
   24f58:	add	r0, r5, r5, lsl #1
   24f5c:	ldr	r6, [r7, r0, lsl #2]
   24f60:	cmp	r6, #0
   24f64:	beq	24fb8 <myhtml_tag_static_search@@Base+0xc4>
   24f68:	ldr	r0, [r6, #8]
   24f6c:	cmp	r0, r4
   24f70:	bne	24fa4 <myhtml_tag_static_search@@Base+0xb0>
   24f74:	ldr	r0, [r6, #4]
   24f78:	mov	r1, r8
   24f7c:	mov	r2, r4
   24f80:	bl	11714 <mycore_strncasecmp@plt>
   24f84:	cmp	r0, #0
   24f88:	beq	24fbc <myhtml_tag_static_search@@Base+0xc8>
   24f8c:	add	r0, r5, r5, lsl #1
   24f90:	add	r0, r7, r0, lsl #2
   24f94:	ldr	r5, [r0, #4]
   24f98:	cmp	r5, #0
   24f9c:	bne	24f58 <myhtml_tag_static_search@@Base+0x64>
   24fa0:	b	24fb8 <myhtml_tag_static_search@@Base+0xc4>
   24fa4:	bhi	24fb8 <myhtml_tag_static_search@@Base+0xc4>
   24fa8:	add	r0, r5, r5, lsl #1
   24fac:	add	r0, r7, r0, lsl #2
   24fb0:	ldr	r5, [r0, #4]
   24fb4:	b	24f58 <myhtml_tag_static_search@@Base+0x64>
   24fb8:	mov	r6, #0
   24fbc:	mov	r0, r6
   24fc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24fc4:	andeq	r7, sp, lr, lsr fp
   24fc8:	andeq	ip, lr, r8, lsl #13

00024fcc <myhtml_tag_static_get_by_id@@Base>:
   24fcc:	ldr	r1, [pc, #12]	; 24fe0 <myhtml_tag_static_get_by_id@@Base+0x14>
   24fd0:	add	r1, pc, r1
   24fd4:	mov	r2, #44	; 0x2c
   24fd8:	mla	r0, r0, r2, r1
   24fdc:	bx	lr
   24fe0:	andeq	sp, lr, r4, ror #30

00024fe4 <myhtml_token_create@@Base>:
   24fe4:	push	{r4, r5, r6, r7, fp, lr}
   24fe8:	add	fp, sp, #16
   24fec:	mov	r6, r1
   24ff0:	mov	r5, r0
   24ff4:	cmp	r1, #0
   24ff8:	movweq	r6, #4096	; 0x1000
   24ffc:	mov	r0, #24
   25000:	bl	12050 <mycore_malloc@plt>
   25004:	mov	r7, #0
   25008:	cmp	r0, #0
   2500c:	beq	25088 <myhtml_token_create@@Base+0xa4>
   25010:	mov	r4, r0
   25014:	bl	1121c <mcobject_async_create@plt>
   25018:	str	r0, [r4, #4]
   2501c:	cmp	r0, #0
   25020:	beq	25094 <myhtml_token_create@@Base+0xb0>
   25024:	bl	1121c <mcobject_async_create@plt>
   25028:	mov	r1, r0
   2502c:	str	r0, [r4, #8]
   25030:	ldr	r0, [r4, #4]
   25034:	cmp	r1, #0
   25038:	beq	25090 <myhtml_token_create@@Base+0xac>
   2503c:	mov	r1, #128	; 0x80
   25040:	mov	r2, r6
   25044:	mov	r3, #52	; 0x34
   25048:	bl	11150 <mcobject_async_init@plt>
   2504c:	ldr	r0, [r4, #8]
   25050:	mov	r1, #128	; 0x80
   25054:	mov	r2, r6
   25058:	mov	r3, #68	; 0x44
   2505c:	bl	11150 <mcobject_async_init@plt>
   25060:	ldr	r0, [r4, #4]
   25064:	mov	r1, #0
   25068:	bl	11e88 <mcobject_async_node_add@plt>
   2506c:	str	r0, [r4, #12]
   25070:	ldr	r0, [r4, #8]
   25074:	mov	r1, #0
   25078:	bl	11e88 <mcobject_async_node_add@plt>
   2507c:	str	r0, [r4, #16]
   25080:	str	r5, [r4]
   25084:	mov	r7, r4
   25088:	mov	r0, r7
   2508c:	pop	{r4, r5, r6, r7, fp, pc}
   25090:	bl	12188 <mycore_free@plt>
   25094:	mov	r0, r4
   25098:	bl	12188 <mycore_free@plt>
   2509c:	mov	r0, r7
   250a0:	pop	{r4, r5, r6, r7, fp, pc}

000250a4 <myhtml_token_clean@@Base>:
   250a4:	push	{r4, sl, fp, lr}
   250a8:	add	fp, sp, #8
   250ac:	mov	r4, r0
   250b0:	ldr	r0, [r0, #4]
   250b4:	ldr	r1, [r4, #12]
   250b8:	bl	11c9c <mcobject_async_node_clean@plt>
   250bc:	ldr	r0, [r4, #8]
   250c0:	ldr	r1, [r4, #16]
   250c4:	pop	{r4, sl, fp, lr}
   250c8:	b	11c9c <mcobject_async_node_clean@plt>

000250cc <myhtml_token_clean_all@@Base>:
   250cc:	push	{r4, sl, fp, lr}
   250d0:	add	fp, sp, #8
   250d4:	mov	r4, r0
   250d8:	ldr	r0, [r0, #4]
   250dc:	bl	123ec <mcobject_async_clean@plt>
   250e0:	ldr	r0, [r4, #8]
   250e4:	pop	{r4, sl, fp, lr}
   250e8:	b	123ec <mcobject_async_clean@plt>

000250ec <myhtml_token_destroy@@Base>:
   250ec:	cmp	r0, #0
   250f0:	beq	2513c <myhtml_token_destroy@@Base+0x50>
   250f4:	push	{r4, sl, fp, lr}
   250f8:	add	fp, sp, #8
   250fc:	mov	r4, r0
   25100:	ldr	r0, [r0, #4]
   25104:	cmp	r0, #0
   25108:	beq	25118 <myhtml_token_destroy@@Base+0x2c>
   2510c:	mov	r1, #1
   25110:	bl	11f18 <mcobject_async_destroy@plt>
   25114:	str	r0, [r4, #4]
   25118:	ldr	r0, [r4, #8]
   2511c:	cmp	r0, #0
   25120:	beq	25130 <myhtml_token_destroy@@Base+0x44>
   25124:	mov	r1, #1
   25128:	bl	11f18 <mcobject_async_destroy@plt>
   2512c:	str	r0, [r4, #8]
   25130:	mov	r0, r4
   25134:	bl	12188 <mycore_free@plt>
   25138:	pop	{r4, sl, fp, lr}
   2513c:	mov	r0, #0
   25140:	bx	lr

00025144 <myhtml_token_node_create@@Base>:
   25144:	push	{r4, r5, fp, lr}
   25148:	add	fp, sp, #8
   2514c:	ldr	r0, [r0, #4]
   25150:	mov	r4, #0
   25154:	mov	r2, #0
   25158:	bl	11f90 <mcobject_async_malloc@plt>
   2515c:	cmp	r0, #0
   25160:	beq	25170 <myhtml_token_node_create@@Base+0x2c>
   25164:	mov	r5, r0
   25168:	bl	12314 <myhtml_token_node_clean@plt>
   2516c:	mov	r4, r5
   25170:	mov	r0, r4
   25174:	pop	{r4, r5, fp, pc}

00025178 <myhtml_token_node_clean@@Base>:
   25178:	mov	r1, #0
   2517c:	vmov.i32	q8, #0	; 0x00000000
   25180:	str	r1, [r0, #48]	; 0x30
   25184:	add	r1, r0, #32
   25188:	vst1.32	{d16-d17}, [r1]
   2518c:	add	r1, r0, #16
   25190:	vst1.32	{d16-d17}, [r1]
   25194:	mov	r1, #8
   25198:	str	r1, [r0, #48]	; 0x30
   2519c:	mov	r1, #4
   251a0:	vst1.32	{d16-d17}, [r0], r1
   251a4:	b	12428 <mycore_string_clean_all@plt>

000251a8 <myhtml_token_attr_create@@Base>:
   251a8:	push	{r4, r5, fp, lr}
   251ac:	add	fp, sp, #8
   251b0:	ldr	r0, [r0, #8]
   251b4:	mov	r4, #0
   251b8:	mov	r2, #0
   251bc:	bl	11f90 <mcobject_async_malloc@plt>
   251c0:	cmp	r0, #0
   251c4:	beq	251d4 <myhtml_token_attr_create@@Base+0x2c>
   251c8:	mov	r5, r0
   251cc:	bl	11498 <myhtml_token_attr_clean@plt>
   251d0:	mov	r4, r5
   251d4:	mov	r0, r4
   251d8:	pop	{r4, r5, fp, pc}

000251dc <myhtml_token_attr_clean@@Base>:
   251dc:	push	{r4, sl, fp, lr}
   251e0:	add	fp, sp, #8
   251e4:	mov	r1, #1
   251e8:	vmov.i32	q8, #0	; 0x00000000
   251ec:	str	r1, [r0, #64]	; 0x40
   251f0:	add	r1, r0, #48	; 0x30
   251f4:	vst1.32	{d16-d17}, [r1]
   251f8:	add	r1, r0, #32
   251fc:	vst1.32	{d16-d17}, [r1]
   25200:	add	r1, r0, #16
   25204:	vst1.32	{d16-d17}, [r1]
   25208:	mov	r1, #28
   2520c:	mov	r4, r0
   25210:	vst1.32	{d16-d17}, [r4], r1
   25214:	add	r0, r0, #8
   25218:	bl	12428 <mycore_string_clean_all@plt>
   2521c:	mov	r0, r4
   25220:	pop	{r4, sl, fp, lr}
   25224:	b	12428 <mycore_string_clean_all@plt>

00025228 <myhtml_token_node_tag_id@@Base>:
   25228:	ldr	r0, [r0]
   2522c:	bx	lr

00025230 <myhtml_token_node_raw_position@@Base>:
   25230:	cmp	r1, #0
   25234:	ldrne	r2, [r1, #24]
   25238:	ldrne	r1, [r1, #28]
   2523c:	strne	r2, [r0]
   25240:	strne	r1, [r0, #4]
   25244:	bxne	lr
   25248:	mov	r1, #0
   2524c:	str	r1, [r0]
   25250:	str	r1, [r0, #4]
   25254:	bx	lr

00025258 <myhtml_token_node_element_position@@Base>:
   25258:	cmp	r1, #0
   2525c:	ldrne	r2, [r1, #32]
   25260:	ldrne	r1, [r1, #36]	; 0x24
   25264:	strne	r2, [r0]
   25268:	strne	r1, [r0, #4]
   2526c:	bxne	lr
   25270:	mov	r1, #0
   25274:	str	r1, [r0]
   25278:	str	r1, [r0, #4]
   2527c:	bx	lr

00025280 <myhtml_token_node_attribute_first@@Base>:
   25280:	ldr	r0, [r0, #40]	; 0x28
   25284:	bx	lr

00025288 <myhtml_token_node_attribute_last@@Base>:
   25288:	ldr	r0, [r0, #44]	; 0x2c
   2528c:	bx	lr

00025290 <myhtml_token_node_text@@Base>:
   25290:	cmp	r1, #0
   25294:	ldrne	r2, [r0, #12]
   25298:	strne	r2, [r1]
   2529c:	ldr	r0, [r0, #4]
   252a0:	bx	lr

000252a4 <myhtml_token_node_string@@Base>:
   252a4:	add	r0, r0, #4
   252a8:	bx	lr

000252ac <myhtml_token_node_is_close@@Base>:
   252ac:	ldr	r0, [r0, #48]	; 0x30
   252b0:	and	r0, r0, #1
   252b4:	bx	lr

000252b8 <myhtml_token_node_is_close_self@@Base>:
   252b8:	ldr	r0, [r0, #48]	; 0x30
   252bc:	ubfx	r0, r0, #1, #1
   252c0:	bx	lr

000252c4 <myhtml_token_node_wait_for_done@@Base>:
   252c4:	push	{r4, r5, fp, lr}
   252c8:	add	fp, sp, #8
   252cc:	mov	r5, r0
   252d0:	ldr	r0, [r1, #48]	; 0x30
   252d4:	tst	r0, #4
   252d8:	popne	{r4, r5, fp, pc}
   252dc:	mov	r4, r1
   252e0:	ldr	r0, [r5]
   252e4:	ldr	r0, [r0]
   252e8:	ldr	r0, [r0]
   252ec:	ldr	r0, [r0, #24]
   252f0:	bl	11528 <mythread_nanosleep_sleep@plt>
   252f4:	ldr	r0, [r4, #48]	; 0x30
   252f8:	tst	r0, #4
   252fc:	beq	252e0 <myhtml_token_node_wait_for_done@@Base+0x1c>
   25300:	pop	{r4, r5, fp, pc}

00025304 <myhtml_token_set_done@@Base>:
   25304:	ldr	r1, [r0, #48]	; 0x30
   25308:	orr	r1, r1, #4
   2530c:	str	r1, [r0, #48]	; 0x30
   25310:	bx	lr

00025314 <myhtml_token_node_clone@@Base>:
   25314:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25318:	add	fp, sp, #24
   2531c:	mov	r4, #0
   25320:	cmp	r1, #0
   25324:	beq	253e0 <myhtml_token_node_clone@@Base+0xcc>
   25328:	mov	r8, r3
   2532c:	mov	r5, r1
   25330:	mov	r6, r0
   25334:	ldr	r9, [r0]
   25338:	mov	r1, r2
   2533c:	bl	11e10 <myhtml_token_node_create@plt>
   25340:	cmp	r0, #0
   25344:	beq	253e0 <myhtml_token_node_clone@@Base+0xcc>
   25348:	mov	r7, r0
   2534c:	ldr	r0, [r5]
   25350:	str	r0, [r7]
   25354:	ldr	r0, [r5, #48]	; 0x30
   25358:	mov	r1, #0
   2535c:	str	r1, [r7, #40]	; 0x28
   25360:	str	r1, [r7, #44]	; 0x2c
   25364:	str	r0, [r7, #48]	; 0x30
   25368:	ldr	r0, [r5, #24]
   2536c:	str	r0, [r7, #24]
   25370:	ldr	r0, [r5, #28]
   25374:	str	r0, [r7, #28]
   25378:	ldr	r0, [r5, #32]
   2537c:	str	r0, [r7, #32]
   25380:	ldr	r0, [r5, #36]	; 0x24
   25384:	str	r0, [r7, #36]	; 0x24
   25388:	ldr	r2, [r5, #12]
   2538c:	cmp	r2, #0
   25390:	beq	253c0 <myhtml_token_node_clone@@Base+0xac>
   25394:	ldr	r0, [r9, #4]
   25398:	ldr	r1, [r9, #52]	; 0x34
   2539c:	add	r4, r7, #4
   253a0:	add	r3, r2, #1
   253a4:	mov	r2, r4
   253a8:	bl	11a44 <mycore_string_init@plt>
   253ac:	ldr	r1, [r5, #4]
   253b0:	ldr	r2, [r5, #12]
   253b4:	mov	r0, r4
   253b8:	bl	11cf0 <mycore_string_append@plt>
   253bc:	b	253c8 <myhtml_token_node_clone@@Base+0xb4>
   253c0:	add	r0, r7, #4
   253c4:	bl	12428 <mycore_string_clean_all@plt>
   253c8:	mov	r0, r6
   253cc:	mov	r1, r5
   253d0:	mov	r2, r7
   253d4:	mov	r3, r8
   253d8:	bl	119c0 <myhtml_token_node_attr_copy@plt>
   253dc:	mov	r4, r7
   253e0:	mov	r0, r4
   253e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000253e8 <myhtml_token_node_attr_copy@@Base>:
   253e8:	push	{r4, r5, r6, r7, fp, lr}
   253ec:	add	fp, sp, #16
   253f0:	ldr	r7, [r1, #40]	; 0x28
   253f4:	cmp	r7, #0
   253f8:	popeq	{r4, r5, r6, r7, fp, pc}
   253fc:	mov	r4, r3
   25400:	mov	r5, r2
   25404:	mov	r6, r0
   25408:	mov	r0, r6
   2540c:	mov	r1, r7
   25410:	mov	r2, r5
   25414:	mov	r3, r4
   25418:	bl	11b94 <myhtml_token_attr_copy@plt>
   2541c:	ldr	r7, [r7]
   25420:	cmp	r7, #0
   25424:	bne	25408 <myhtml_token_node_attr_copy@@Base+0x20>
   25428:	pop	{r4, r5, r6, r7, fp, pc}

0002542c <myhtml_token_node_text_append@@Base>:
   2542c:	push	{r4, r5, r6, sl, fp, lr}
   25430:	add	fp, sp, #16
   25434:	mov	r4, r3
   25438:	mov	r5, r2
   2543c:	ldr	r2, [r0]
   25440:	ldr	r0, [r2, #4]
   25444:	ldr	r2, [r2, #52]	; 0x34
   25448:	add	r6, r1, #4
   2544c:	add	r3, r3, #2
   25450:	mov	r1, r2
   25454:	mov	r2, r6
   25458:	bl	11a44 <mycore_string_init@plt>
   2545c:	mov	r0, r6
   25460:	mov	r1, r5
   25464:	mov	r2, r4
   25468:	pop	{r4, r5, r6, sl, fp, lr}
   2546c:	b	11cf0 <mycore_string_append@plt>

00025470 <myhtml_token_node_attr_append@@Base>:
   25470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25474:	add	fp, sp, #28
   25478:	sub	sp, sp, #4
   2547c:	mov	r6, r3
   25480:	mov	r9, r2
   25484:	mov	r4, r1
   25488:	mov	sl, r0
   2548c:	ldr	r0, [r0, #8]
   25490:	ldr	r1, [fp, #16]
   25494:	mov	r7, #0
   25498:	mov	r2, #0
   2549c:	bl	11f90 <mcobject_async_malloc@plt>
   254a0:	mov	r5, r0
   254a4:	str	r7, [r0]
   254a8:	ldr	r8, [fp, #12]
   254ac:	cmp	r6, #0
   254b0:	beq	2551c <myhtml_token_node_attr_append@@Base+0xac>
   254b4:	ldr	r1, [sl]
   254b8:	ldr	r0, [r1, #4]
   254bc:	ldr	r1, [r1, #52]	; 0x34
   254c0:	add	r7, r5, #8
   254c4:	add	r3, r6, #1
   254c8:	mov	r2, r7
   254cc:	bl	11a44 <mycore_string_init@plt>
   254d0:	mov	r0, r7
   254d4:	mov	r1, r9
   254d8:	mov	r2, r6
   254dc:	bl	11abc <mycore_string_append_lowercase@plt>
   254e0:	cmp	r8, #0
   254e4:	beq	2552c <myhtml_token_node_attr_append@@Base+0xbc>
   254e8:	ldr	r6, [fp, #8]
   254ec:	ldr	r1, [sl]
   254f0:	ldr	r0, [r1, #4]
   254f4:	ldr	r1, [r1, #52]	; 0x34
   254f8:	add	r7, r5, #28
   254fc:	add	r3, r8, #1
   25500:	mov	r2, r7
   25504:	bl	11a44 <mycore_string_init@plt>
   25508:	mov	r0, r7
   2550c:	mov	r1, r6
   25510:	mov	r2, r8
   25514:	bl	11cf0 <mycore_string_append@plt>
   25518:	b	25534 <myhtml_token_node_attr_append@@Base+0xc4>
   2551c:	add	r0, r5, #8
   25520:	bl	12428 <mycore_string_clean_all@plt>
   25524:	cmp	r8, #0
   25528:	bne	254e8 <myhtml_token_node_attr_append@@Base+0x78>
   2552c:	add	r0, r5, #28
   25530:	bl	12428 <mycore_string_clean_all@plt>
   25534:	ldr	r0, [r4, #40]	; 0x28
   25538:	cmp	r0, #0
   2553c:	beq	25554 <myhtml_token_node_attr_append@@Base+0xe4>
   25540:	ldr	r0, [r4, #44]!	; 0x2c
   25544:	str	r5, [r0]
   25548:	ldr	r0, [r4]
   2554c:	str	r0, [r5, #4]
   25550:	b	25564 <myhtml_token_node_attr_append@@Base+0xf4>
   25554:	mov	r0, #0
   25558:	str	r0, [r5, #4]
   2555c:	str	r5, [r4, #40]	; 0x28
   25560:	add	r4, r4, #44	; 0x2c
   25564:	str	r5, [r4]
   25568:	mov	r0, #1
   2556c:	str	r0, [r5, #64]	; 0x40
   25570:	mov	r0, r5
   25574:	sub	sp, fp, #28
   25578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002557c <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   2557c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25580:	add	fp, sp, #28
   25584:	sub	sp, sp, #4
   25588:	mov	r6, r3
   2558c:	str	r2, [sp]
   25590:	mov	r9, r1
   25594:	mov	sl, r0
   25598:	ldr	r0, [r0, #8]
   2559c:	ldr	r1, [fp, #16]
   255a0:	mov	r8, #0
   255a4:	mov	r2, #0
   255a8:	bl	11f90 <mcobject_async_malloc@plt>
   255ac:	mov	r5, r0
   255b0:	str	r8, [r0]
   255b4:	ldr	r4, [fp, #20]
   255b8:	ldr	r7, [fp, #12]
   255bc:	cmp	r6, #0
   255c0:	beq	25644 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xc8>
   255c4:	ldr	r1, [sl]
   255c8:	ldr	r0, [r1, #4]
   255cc:	ldr	r1, [r1, #52]	; 0x34
   255d0:	add	r8, r5, #8
   255d4:	add	r3, r6, #1
   255d8:	mov	r2, r8
   255dc:	bl	11a44 <mycore_string_init@plt>
   255e0:	mov	r0, r8
   255e4:	cmp	r4, #0
   255e8:	beq	25660 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe4>
   255ec:	ldr	r1, [sp]
   255f0:	mov	r2, r6
   255f4:	mov	r3, r4
   255f8:	bl	112e8 <myencoding_string_append_lowercase_ascii@plt>
   255fc:	cmp	r7, #0
   25600:	beq	25654 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   25604:	ldr	r8, [fp, #8]
   25608:	ldr	r1, [sl]
   2560c:	ldr	r0, [r1, #4]
   25610:	ldr	r1, [r1, #52]	; 0x34
   25614:	add	r6, r5, #28
   25618:	add	r3, r7, #1
   2561c:	mov	r2, r6
   25620:	bl	11a44 <mycore_string_init@plt>
   25624:	mov	r0, r6
   25628:	mov	r1, r8
   2562c:	mov	r2, r7
   25630:	cmp	r4, #0
   25634:	beq	25678 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xfc>
   25638:	mov	r3, r4
   2563c:	bl	118a0 <myencoding_string_append@plt>
   25640:	b	2567c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   25644:	add	r0, r5, #8
   25648:	bl	12428 <mycore_string_clean_all@plt>
   2564c:	cmp	r7, #0
   25650:	bne	25604 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   25654:	add	r0, r5, #28
   25658:	bl	12428 <mycore_string_clean_all@plt>
   2565c:	b	2567c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   25660:	ldr	r1, [sp]
   25664:	mov	r2, r6
   25668:	bl	11abc <mycore_string_append_lowercase@plt>
   2566c:	cmp	r7, #0
   25670:	bne	25604 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   25674:	b	25654 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   25678:	bl	11cf0 <mycore_string_append@plt>
   2567c:	ldr	r0, [r9, #40]	; 0x28
   25680:	cmp	r0, #0
   25684:	beq	2569c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x120>
   25688:	ldr	r0, [r9, #44]!	; 0x2c
   2568c:	str	r5, [r0]
   25690:	ldr	r0, [r9]
   25694:	str	r0, [r5, #4]
   25698:	b	256ac <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x130>
   2569c:	mov	r0, #0
   256a0:	str	r0, [r5, #4]
   256a4:	str	r5, [r9, #40]	; 0x28
   256a8:	add	r9, r9, #44	; 0x2c
   256ac:	str	r5, [r9]
   256b0:	mov	r0, #1
   256b4:	str	r0, [r5, #64]	; 0x40
   256b8:	mov	r0, r5
   256bc:	sub	sp, fp, #28
   256c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000256c4 <myhtml_token_node_attr_copy_with_check@@Base>:
   256c4:	push	{r4, r5, r6, r7, fp, lr}
   256c8:	add	fp, sp, #16
   256cc:	ldr	r7, [r1, #40]	; 0x28
   256d0:	cmp	r7, #0
   256d4:	popeq	{r4, r5, r6, r7, fp, pc}
   256d8:	mov	r4, r3
   256dc:	mov	r5, r2
   256e0:	mov	r6, r0
   256e4:	ldr	r2, [r7, #16]
   256e8:	cmp	r2, #0
   256ec:	beq	25718 <myhtml_token_node_attr_copy_with_check@@Base+0x54>
   256f0:	ldr	r1, [r7, #8]
   256f4:	mov	r0, r5
   256f8:	bl	12260 <myhtml_token_attr_by_name@plt>
   256fc:	cmp	r0, #0
   25700:	bne	25718 <myhtml_token_node_attr_copy_with_check@@Base+0x54>
   25704:	mov	r0, r6
   25708:	mov	r1, r7
   2570c:	mov	r2, r5
   25710:	mov	r3, r4
   25714:	bl	11b94 <myhtml_token_attr_copy@plt>
   25718:	ldr	r7, [r7]
   2571c:	cmp	r7, #0
   25720:	bne	256e4 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   25724:	pop	{r4, r5, r6, r7, fp, pc}

00025728 <myhtml_token_attr_by_name@@Base>:
   25728:	push	{r4, r5, r6, r7, fp, lr}
   2572c:	add	fp, sp, #16
   25730:	ldr	r7, [r0, #40]	; 0x28
   25734:	mov	r4, #0
   25738:	cmp	r7, #0
   2573c:	beq	25778 <myhtml_token_attr_by_name@@Base+0x50>
   25740:	mov	r5, r2
   25744:	mov	r6, r1
   25748:	ldr	r0, [r7, #16]
   2574c:	cmp	r0, r5
   25750:	bne	2576c <myhtml_token_attr_by_name@@Base+0x44>
   25754:	ldr	r0, [r7, #8]
   25758:	mov	r1, r6
   2575c:	bl	110cc <mycore_strcmp@plt>
   25760:	cmp	r0, #0
   25764:	moveq	r0, r7
   25768:	popeq	{r4, r5, r6, r7, fp, pc}
   2576c:	ldr	r7, [r7]
   25770:	cmp	r7, #0
   25774:	bne	25748 <myhtml_token_attr_by_name@@Base+0x20>
   25778:	mov	r0, r4
   2577c:	pop	{r4, r5, r6, r7, fp, pc}

00025780 <myhtml_token_attr_copy@@Base>:
   25780:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25784:	add	fp, sp, #24
   25788:	mov	r5, r2
   2578c:	mov	r4, r1
   25790:	mov	r8, r0
   25794:	ldr	r0, [r0, #8]
   25798:	mov	r7, #0
   2579c:	mov	r1, r3
   257a0:	mov	r2, #0
   257a4:	bl	11f90 <mcobject_async_malloc@plt>
   257a8:	mov	r6, r0
   257ac:	str	r7, [r0]
   257b0:	ldr	r2, [r4, #16]
   257b4:	cmp	r2, #0
   257b8:	beq	257ec <myhtml_token_attr_copy@@Base+0x6c>
   257bc:	ldr	r1, [r8]
   257c0:	ldr	r0, [r1, #4]
   257c4:	ldr	r1, [r1, #52]	; 0x34
   257c8:	add	r7, r6, #8
   257cc:	add	r3, r2, #1
   257d0:	mov	r2, r7
   257d4:	bl	11a44 <mycore_string_init@plt>
   257d8:	ldr	r1, [r4, #8]
   257dc:	ldr	r2, [r4, #16]
   257e0:	mov	r0, r7
   257e4:	bl	11abc <mycore_string_append_lowercase@plt>
   257e8:	b	257f4 <myhtml_token_attr_copy@@Base+0x74>
   257ec:	add	r0, r6, #8
   257f0:	bl	12428 <mycore_string_clean_all@plt>
   257f4:	ldr	r2, [r4, #36]	; 0x24
   257f8:	cmp	r2, #0
   257fc:	beq	25830 <myhtml_token_attr_copy@@Base+0xb0>
   25800:	ldr	r1, [r8]
   25804:	ldr	r0, [r1, #4]
   25808:	ldr	r1, [r1, #52]	; 0x34
   2580c:	add	r7, r6, #28
   25810:	add	r3, r2, #1
   25814:	mov	r2, r7
   25818:	bl	11a44 <mycore_string_init@plt>
   2581c:	ldr	r1, [r4, #28]
   25820:	ldr	r2, [r4, #36]	; 0x24
   25824:	mov	r0, r7
   25828:	bl	11cf0 <mycore_string_append@plt>
   2582c:	b	25838 <myhtml_token_attr_copy@@Base+0xb8>
   25830:	add	r0, r6, #28
   25834:	bl	12428 <mycore_string_clean_all@plt>
   25838:	ldr	r0, [r5, #40]	; 0x28
   2583c:	cmp	r0, #0
   25840:	beq	25858 <myhtml_token_attr_copy@@Base+0xd8>
   25844:	ldr	r0, [r5, #44]!	; 0x2c
   25848:	str	r6, [r0]
   2584c:	ldr	r0, [r5]
   25850:	str	r0, [r6, #4]
   25854:	b	25868 <myhtml_token_attr_copy@@Base+0xe8>
   25858:	mov	r0, #0
   2585c:	str	r0, [r6, #4]
   25860:	str	r6, [r5, #40]	; 0x28
   25864:	add	r5, r5, #44	; 0x2c
   25868:	str	r6, [r5]
   2586c:	ldr	r0, [r4, #64]	; 0x40
   25870:	str	r0, [r6, #64]	; 0x40
   25874:	mov	r0, #1
   25878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002587c <myhtml_token_attr_match@@Base>:
   2587c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25880:	add	fp, sp, #24
   25884:	ldr	r4, [r1, #40]	; 0x28
   25888:	cmp	r4, #0
   2588c:	beq	258f4 <myhtml_token_attr_match@@Base+0x78>
   25890:	mov	r5, r3
   25894:	mov	r6, r2
   25898:	ldr	r7, [fp, #12]
   2589c:	ldr	r8, [fp, #8]
   258a0:	ldr	r0, [r4, #16]
   258a4:	cmp	r0, r5
   258a8:	ldreq	r0, [r4, #36]	; 0x24
   258ac:	cmpeq	r0, r7
   258b0:	beq	258c4 <myhtml_token_attr_match@@Base+0x48>
   258b4:	ldr	r4, [r4]
   258b8:	cmp	r4, #0
   258bc:	bne	258a0 <myhtml_token_attr_match@@Base+0x24>
   258c0:	b	258f4 <myhtml_token_attr_match@@Base+0x78>
   258c4:	ldr	r0, [r4, #8]
   258c8:	mov	r1, r6
   258cc:	bl	110cc <mycore_strcmp@plt>
   258d0:	cmp	r0, #0
   258d4:	bne	258b4 <myhtml_token_attr_match@@Base+0x38>
   258d8:	ldr	r0, [r4, #28]
   258dc:	mov	r1, r8
   258e0:	bl	110cc <mycore_strcmp@plt>
   258e4:	cmp	r0, #0
   258e8:	movne	r4, #0
   258ec:	mov	r0, r4
   258f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   258f4:	mov	r4, #0
   258f8:	mov	r0, r4
   258fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025900 <myhtml_token_attr_match_case@@Base>:
   25900:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25904:	add	fp, sp, #24
   25908:	ldr	r4, [r1, #40]	; 0x28
   2590c:	cmp	r4, #0
   25910:	beq	25978 <myhtml_token_attr_match_case@@Base+0x78>
   25914:	mov	r5, r3
   25918:	mov	r6, r2
   2591c:	ldr	r7, [fp, #12]
   25920:	ldr	r8, [fp, #8]
   25924:	ldr	r0, [r4, #16]
   25928:	cmp	r0, r5
   2592c:	ldreq	r0, [r4, #36]	; 0x24
   25930:	cmpeq	r0, r7
   25934:	beq	25948 <myhtml_token_attr_match_case@@Base+0x48>
   25938:	ldr	r4, [r4]
   2593c:	cmp	r4, #0
   25940:	bne	25924 <myhtml_token_attr_match_case@@Base+0x24>
   25944:	b	25978 <myhtml_token_attr_match_case@@Base+0x78>
   25948:	ldr	r0, [r4, #8]
   2594c:	mov	r1, r6
   25950:	bl	110cc <mycore_strcmp@plt>
   25954:	cmp	r0, #0
   25958:	bne	25938 <myhtml_token_attr_match_case@@Base+0x38>
   2595c:	ldr	r0, [r4, #28]
   25960:	mov	r1, r8
   25964:	bl	1196c <mycore_strcasecmp@plt>
   25968:	cmp	r0, #0
   2596c:	movne	r4, #0
   25970:	mov	r0, r4
   25974:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25978:	mov	r4, #0
   2597c:	mov	r0, r4
   25980:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025984 <myhtml_token_adjust_mathml_attributes@@Base>:
   25984:	push	{fp, lr}
   25988:	mov	fp, sp
   2598c:	ldr	r1, [pc, #56]	; 259cc <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   25990:	add	r1, pc, r1
   25994:	mov	r2, #13
   25998:	bl	12260 <myhtml_token_attr_by_name@plt>
   2599c:	cmp	r0, #0
   259a0:	popeq	{fp, pc}
   259a4:	ldr	r0, [r0, #8]
   259a8:	ldr	r1, [pc, #32]	; 259d0 <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   259ac:	add	r1, pc, r1
   259b0:	vldr	d16, [r1]
   259b4:	add	r1, r1, #5
   259b8:	vld1.8	{d17}, [r1]
   259bc:	vst1.8	{d16}, [r0]
   259c0:	add	r0, r0, #5
   259c4:	vst1.8	{d17}, [r0]
   259c8:	pop	{fp, pc}
   259cc:	andeq	r7, sp, lr, lsl r8
   259d0:	andeq	r7, sp, ip, ror pc

000259d4 <_myhtml_token_create_copy_srt@@Base>:
   259d4:	push	{r4, r5, r6, sl, fp, lr}
   259d8:	add	fp, sp, #16
   259dc:	mov	r4, r3
   259e0:	mov	r5, r2
   259e4:	mov	r6, r1
   259e8:	ldr	r1, [r0]
   259ec:	ldr	r0, [r1, #4]
   259f0:	ldr	r1, [r1, #52]	; 0x34
   259f4:	add	r2, r2, #2
   259f8:	bl	11d2c <mchar_async_malloc@plt>
   259fc:	str	r0, [r4]
   25a00:	mov	r1, r6
   25a04:	mov	r2, r5
   25a08:	pop	{r4, r5, r6, sl, fp, lr}
   25a0c:	b	11750 <mycore_string_raw_copy@plt>

00025a10 <myhtml_token_strict_doctype_by_token@@Base>:
   25a10:	push	{r4, r5, r6, sl, fp, lr}
   25a14:	add	fp, sp, #16
   25a18:	mov	r4, r2
   25a1c:	mov	r5, r0
   25a20:	ldr	r6, [r1, #40]	; 0x28
   25a24:	cmp	r6, #0
   25a28:	ldrne	r2, [r6, #16]
   25a2c:	cmpne	r2, #0
   25a30:	bne	25a84 <myhtml_token_strict_doctype_by_token@@Base+0x74>
   25a34:	mov	r6, #0
   25a38:	strb	r6, [r4]
   25a3c:	add	r3, r4, #4
   25a40:	ldr	r1, [pc, #412]	; 25be4 <myhtml_token_strict_doctype_by_token@@Base+0x1d4>
   25a44:	add	r1, pc, r1
   25a48:	mov	r0, r5
   25a4c:	mov	r2, #1
   25a50:	bl	1130c <_myhtml_token_create_copy_srt@plt>
   25a54:	ldr	r0, [r4, #8]
   25a58:	cmp	r0, #0
   25a5c:	beq	25a64 <myhtml_token_strict_doctype_by_token@@Base+0x54>
   25a60:	bl	12188 <mycore_free@plt>
   25a64:	str	r6, [r4, #8]
   25a68:	ldr	r0, [r4, #12]
   25a6c:	cmp	r0, #0
   25a70:	beq	25a78 <myhtml_token_strict_doctype_by_token@@Base+0x68>
   25a74:	bl	12188 <mycore_free@plt>
   25a78:	mov	r0, #0
   25a7c:	str	r0, [r4, #12]
   25a80:	pop	{r4, r5, r6, sl, fp, pc}
   25a84:	ldr	r1, [r6, #8]
   25a88:	add	r3, r4, #4
   25a8c:	mov	r0, r5
   25a90:	bl	1130c <_myhtml_token_create_copy_srt@plt>
   25a94:	ldr	r1, [r4, #4]
   25a98:	ldr	r0, [pc, #316]	; 25bdc <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   25a9c:	add	r0, pc, r0
   25aa0:	bl	110cc <mycore_strcmp@plt>
   25aa4:	clz	r0, r0
   25aa8:	lsr	r0, r0, #5
   25aac:	strb	r0, [r4]
   25ab0:	ldr	r6, [r6]
   25ab4:	cmp	r6, #0
   25ab8:	ldrne	r0, [r6, #36]	; 0x24
   25abc:	cmpne	r0, #0
   25ac0:	bne	25ac8 <myhtml_token_strict_doctype_by_token@@Base+0xb8>
   25ac4:	pop	{r4, r5, r6, sl, fp, pc}
   25ac8:	ldr	r0, [r6, #28]
   25acc:	ldr	r1, [pc, #268]	; 25be0 <myhtml_token_strict_doctype_by_token@@Base+0x1d0>
   25ad0:	add	r1, pc, r1
   25ad4:	bl	1196c <mycore_strcasecmp@plt>
   25ad8:	cmp	r0, #0
   25adc:	beq	25b34 <myhtml_token_strict_doctype_by_token@@Base+0x124>
   25ae0:	ldr	r0, [r6, #28]
   25ae4:	ldr	r2, [r6, #36]	; 0x24
   25ae8:	ldr	r1, [pc, #252]	; 25bec <myhtml_token_strict_doctype_by_token@@Base+0x1dc>
   25aec:	add	r1, pc, r1
   25af0:	bl	11714 <mycore_strncasecmp@plt>
   25af4:	cmp	r0, #0
   25af8:	bne	25b48 <myhtml_token_strict_doctype_by_token@@Base+0x138>
   25afc:	ldr	r6, [r6]
   25b00:	cmp	r6, #0
   25b04:	ldrne	r0, [r6, #36]	; 0x24
   25b08:	cmpne	r0, #0
   25b0c:	beq	25b48 <myhtml_token_strict_doctype_by_token@@Base+0x138>
   25b10:	add	r3, r4, #8
   25b14:	ldr	r1, [pc, #212]	; 25bf0 <myhtml_token_strict_doctype_by_token@@Base+0x1e0>
   25b18:	add	r1, pc, r1
   25b1c:	mov	r0, r5
   25b20:	mov	r2, #1
   25b24:	bl	1130c <_myhtml_token_create_copy_srt@plt>
   25b28:	ldr	r1, [r6, #28]
   25b2c:	ldr	r2, [r6, #36]	; 0x24
   25b30:	b	25bcc <myhtml_token_strict_doctype_by_token@@Base+0x1bc>
   25b34:	ldr	r6, [r6]
   25b38:	cmp	r6, #0
   25b3c:	ldrne	r2, [r6, #36]	; 0x24
   25b40:	cmpne	r2, #0
   25b44:	bne	25b78 <myhtml_token_strict_doctype_by_token@@Base+0x168>
   25b48:	ldr	r0, [r4, #8]
   25b4c:	cmp	r0, #0
   25b50:	beq	25b58 <myhtml_token_strict_doctype_by_token@@Base+0x148>
   25b54:	bl	12188 <mycore_free@plt>
   25b58:	mov	r5, #0
   25b5c:	str	r5, [r4, #8]
   25b60:	ldr	r0, [r4, #12]
   25b64:	cmp	r0, #0
   25b68:	beq	25b70 <myhtml_token_strict_doctype_by_token@@Base+0x160>
   25b6c:	bl	12188 <mycore_free@plt>
   25b70:	str	r5, [r4, #12]
   25b74:	pop	{r4, r5, r6, sl, fp, pc}
   25b78:	ldr	r1, [r6, #28]
   25b7c:	add	r3, r4, #8
   25b80:	mov	r0, r5
   25b84:	bl	1130c <_myhtml_token_create_copy_srt@plt>
   25b88:	ldr	r0, [r6]
   25b8c:	cmp	r0, #0
   25b90:	ldrne	r2, [r0, #36]	; 0x24
   25b94:	cmpne	r2, #0
   25b98:	bne	25bc8 <myhtml_token_strict_doctype_by_token@@Base+0x1b8>
   25b9c:	ldr	r0, [r4, #12]!
   25ba0:	cmp	r0, #0
   25ba4:	beq	25bac <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   25ba8:	bl	12188 <mycore_free@plt>
   25bac:	ldr	r1, [pc, #52]	; 25be8 <myhtml_token_strict_doctype_by_token@@Base+0x1d8>
   25bb0:	add	r1, pc, r1
   25bb4:	mov	r0, r5
   25bb8:	mov	r2, #1
   25bbc:	mov	r3, r4
   25bc0:	pop	{r4, r5, r6, sl, fp, lr}
   25bc4:	b	259d4 <_myhtml_token_create_copy_srt@@Base>
   25bc8:	ldr	r1, [r0, #28]
   25bcc:	add	r3, r4, #12
   25bd0:	mov	r0, r5
   25bd4:	pop	{r4, r5, r6, sl, fp, lr}
   25bd8:	b	259d4 <_myhtml_token_create_copy_srt@@Base>
   25bdc:			; <UNDEFINED> instruction: 0x000d7fb4
   25be0:	andeq	r6, sp, r6, lsr #30
   25be4:	strdeq	r7, [sp], -r4
   25be8:	andeq	r7, sp, r8, lsl #27
   25bec:	andeq	r6, sp, ip, lsl pc
   25bf0:	andeq	r7, sp, r0, lsr #28

00025bf4 <myhtml_token_doctype_check_html_4_0@@Base>:
   25bf4:	push	{r4, sl, fp, lr}
   25bf8:	add	fp, sp, #8
   25bfc:	mov	r4, r0
   25c00:	ldr	r0, [r0, #8]
   25c04:	ldr	r1, [pc, #56]	; 25c44 <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   25c08:	add	r1, pc, r1
   25c0c:	bl	110cc <mycore_strcmp@plt>
   25c10:	cmp	r0, #0
   25c14:	moveq	r0, #0
   25c18:	popeq	{r4, sl, fp, pc}
   25c1c:	ldr	r0, [r4, #12]
   25c20:	cmp	r0, #0
   25c24:	moveq	r0, #1
   25c28:	popeq	{r4, sl, fp, pc}
   25c2c:	ldr	r1, [pc, #20]	; 25c48 <myhtml_token_doctype_check_html_4_0@@Base+0x54>
   25c30:	add	r1, pc, r1
   25c34:	bl	110cc <mycore_strcmp@plt>
   25c38:	cmp	r0, #0
   25c3c:	movwne	r0, #1
   25c40:	pop	{r4, sl, fp, pc}
   25c44:			; <UNDEFINED> instruction: 0x000d75b4
   25c48:	andeq	r7, sp, r5, lsr #11

00025c4c <myhtml_token_doctype_check_html_4_01@@Base>:
   25c4c:	push	{r4, sl, fp, lr}
   25c50:	add	fp, sp, #8
   25c54:	mov	r4, r0
   25c58:	ldr	r0, [r0, #8]
   25c5c:	ldr	r1, [pc, #56]	; 25c9c <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   25c60:	add	r1, pc, r1
   25c64:	bl	110cc <mycore_strcmp@plt>
   25c68:	cmp	r0, #0
   25c6c:	moveq	r0, #0
   25c70:	popeq	{r4, sl, fp, pc}
   25c74:	ldr	r0, [r4, #12]
   25c78:	cmp	r0, #0
   25c7c:	moveq	r0, #1
   25c80:	popeq	{r4, sl, fp, pc}
   25c84:	ldr	r1, [pc, #20]	; 25ca0 <myhtml_token_doctype_check_html_4_01@@Base+0x54>
   25c88:	add	r1, pc, r1
   25c8c:	bl	110cc <mycore_strcmp@plt>
   25c90:	cmp	r0, #0
   25c94:	movwne	r0, #1
   25c98:	pop	{r4, sl, fp, pc}
   25c9c:	andeq	r7, sp, r0, lsr #11
   25ca0:	muleq	sp, r2, r5

00025ca4 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   25ca4:	push	{r4, sl, fp, lr}
   25ca8:	add	fp, sp, #8
   25cac:	mov	r4, r0
   25cb0:	ldr	r0, [r0, #12]
   25cb4:	cmp	r0, #0
   25cb8:	moveq	r0, #1
   25cbc:	popeq	{r4, sl, fp, pc}
   25cc0:	ldr	r0, [r4, #8]
   25cc4:	ldr	r1, [pc, #44]	; 25cf8 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   25cc8:	add	r1, pc, r1
   25ccc:	bl	110cc <mycore_strcmp@plt>
   25cd0:	cmp	r0, #0
   25cd4:	moveq	r0, #0
   25cd8:	popeq	{r4, sl, fp, pc}
   25cdc:	ldr	r0, [r4, #12]
   25ce0:	ldr	r1, [pc, #20]	; 25cfc <myhtml_token_doctype_check_xhtml_1_0@@Base+0x58>
   25ce4:	add	r1, pc, r1
   25ce8:	bl	110cc <mycore_strcmp@plt>
   25cec:	cmp	r0, #0
   25cf0:	movwne	r0, #1
   25cf4:	pop	{r4, sl, fp, pc}
   25cf8:	andeq	r7, sp, r8, ror r5
   25cfc:	andeq	r7, sp, sp, ror r5

00025d00 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   25d00:	push	{r4, sl, fp, lr}
   25d04:	add	fp, sp, #8
   25d08:	mov	r4, r0
   25d0c:	ldr	r0, [r0, #12]
   25d10:	cmp	r0, #0
   25d14:	moveq	r0, #1
   25d18:	popeq	{r4, sl, fp, pc}
   25d1c:	ldr	r0, [r4, #8]
   25d20:	ldr	r1, [pc, #44]	; 25d54 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   25d24:	add	r1, pc, r1
   25d28:	bl	110cc <mycore_strcmp@plt>
   25d2c:	cmp	r0, #0
   25d30:	moveq	r0, #0
   25d34:	popeq	{r4, sl, fp, pc}
   25d38:	ldr	r0, [r4, #12]
   25d3c:	ldr	r1, [pc, #20]	; 25d58 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x58>
   25d40:	add	r1, pc, r1
   25d44:	bl	110cc <mycore_strcmp@plt>
   25d48:	cmp	r0, #0
   25d4c:	movwne	r0, #1
   25d50:	pop	{r4, sl, fp, pc}
   25d54:	andeq	r7, sp, pc, ror #10
   25d58:	andeq	r7, sp, sp, ror #10

00025d5c <myhtml_token_release_and_check_doctype_attributes@@Base>:
   25d5c:	push	{r4, r5, fp, lr}
   25d60:	add	fp, sp, #8
   25d64:	mov	r4, #0
   25d68:	cmp	r2, #0
   25d6c:	beq	25e20 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   25d70:	mov	r5, r2
   25d74:	bl	118dc <myhtml_token_strict_doctype_by_token@plt>
   25d78:	ldr	r0, [r5, #4]
   25d7c:	cmp	r0, #0
   25d80:	beq	25e20 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   25d84:	ldrb	r0, [r5]
   25d88:	cmp	r0, #0
   25d8c:	bne	25d9c <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25d90:	ldr	r0, [r5, #8]
   25d94:	cmp	r0, #0
   25d98:	beq	25dfc <myhtml_token_release_and_check_doctype_attributes@@Base+0xa0>
   25d9c:	ldr	r0, [r5, #8]
   25da0:	cmp	r0, #0
   25da4:	beq	25e20 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   25da8:	ldrb	r0, [r5]
   25dac:	cmp	r0, #0
   25db0:	beq	25e1c <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   25db4:	mov	r0, r5
   25db8:	bl	11960 <myhtml_token_doctype_check_html_4_0@plt>
   25dbc:	cmp	r0, #0
   25dc0:	beq	25e1c <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   25dc4:	mov	r0, r5
   25dc8:	bl	117f8 <myhtml_token_doctype_check_html_4_01@plt>
   25dcc:	cmp	r0, #0
   25dd0:	beq	25e1c <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   25dd4:	mov	r0, r5
   25dd8:	bl	11a98 <myhtml_token_doctype_check_xhtml_1_0@plt>
   25ddc:	cmp	r0, #0
   25de0:	beq	25e1c <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   25de4:	mov	r0, r5
   25de8:	bl	11108 <myhtml_token_doctype_check_xhtml_1_1@plt>
   25dec:	cmp	r0, #0
   25df0:	moveq	r4, #1
   25df4:	mov	r0, r4
   25df8:	pop	{r4, r5, fp, pc}
   25dfc:	ldr	r0, [r5, #12]
   25e00:	cmp	r0, #0
   25e04:	beq	25e1c <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   25e08:	ldr	r1, [pc, #24]	; 25e28 <myhtml_token_release_and_check_doctype_attributes@@Base+0xcc>
   25e0c:	add	r1, pc, r1
   25e10:	bl	110cc <mycore_strcmp@plt>
   25e14:	cmp	r0, #0
   25e18:	bne	25d9c <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25e1c:	mov	r4, #1
   25e20:	mov	r0, r4
   25e24:	pop	{r4, r5, fp, pc}
   25e28:	andeq	r7, sp, lr, asr #9

00025e2c <myhtml_token_adjust_svg_attributes@@Base>:
   25e2c:	push	{r4, r5, r6, r7, fp, lr}
   25e30:	add	fp, sp, #16
   25e34:	mov	r4, r0
   25e38:	mov	r6, #0
   25e3c:	ldr	r7, [pc, #80]	; 25e94 <myhtml_token_adjust_svg_attributes@@Base+0x68>
   25e40:	add	r7, pc, r7
   25e44:	b	25e54 <myhtml_token_adjust_svg_attributes@@Base+0x28>
   25e48:	add	r6, r6, #16
   25e4c:	cmp	r6, #928	; 0x3a0
   25e50:	popeq	{r4, r5, r6, r7, fp, pc}
   25e54:	mov	r0, r7
   25e58:	ldr	r1, [r0, r6]!
   25e5c:	ldr	r2, [r0, #4]
   25e60:	mov	r0, r4
   25e64:	bl	12260 <myhtml_token_attr_by_name@plt>
   25e68:	cmp	r0, #0
   25e6c:	beq	25e48 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   25e70:	add	r5, r0, #8
   25e74:	mov	r0, r5
   25e78:	bl	120d4 <mycore_string_clean@plt>
   25e7c:	add	r0, r7, r6
   25e80:	ldr	r1, [r0, #8]
   25e84:	ldr	r2, [r0, #12]
   25e88:	mov	r0, r5
   25e8c:	bl	11cf0 <mycore_string_append@plt>
   25e90:	b	25e48 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   25e94:	andeq	pc, lr, r4, asr #24

00025e98 <myhtml_token_adjust_foreign_attributes@@Base>:
   25e98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25e9c:	add	fp, sp, #24
   25ea0:	mov	r9, r0
   25ea4:	mov	r7, #0
   25ea8:	ldr	r8, [pc, #88]	; 25f08 <myhtml_token_adjust_foreign_attributes@@Base+0x70>
   25eac:	add	r8, pc, r8
   25eb0:	b	25ec0 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   25eb4:	add	r7, r7, #20
   25eb8:	cmp	r7, #220	; 0xdc
   25ebc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   25ec0:	mov	r0, r8
   25ec4:	ldr	r1, [r0, r7]!
   25ec8:	ldr	r2, [r0, #4]
   25ecc:	mov	r0, r9
   25ed0:	bl	12260 <myhtml_token_attr_by_name@plt>
   25ed4:	cmp	r0, #0
   25ed8:	beq	25eb4 <myhtml_token_adjust_foreign_attributes@@Base+0x1c>
   25edc:	mov	r5, r0
   25ee0:	add	r6, r0, #8
   25ee4:	mov	r0, r6
   25ee8:	bl	120d4 <mycore_string_clean@plt>
   25eec:	add	r0, r8, r7
   25ef0:	add	r4, r0, #8
   25ef4:	ldm	r4, {r1, r2, r4}
   25ef8:	mov	r0, r6
   25efc:	bl	11cf0 <mycore_string_append@plt>
   25f00:	str	r4, [r5, #64]	; 0x40
   25f04:	b	25eb4 <myhtml_token_adjust_foreign_attributes@@Base+0x1c>
   25f08:	andeq	pc, lr, r8, ror pc	; <UNPREDICTABLE>

00025f0c <myhtml_token_attr_compare@@Base>:
   25f0c:	mov	r2, r0
   25f10:	mov	r0, #0
   25f14:	cmp	r2, #0
   25f18:	cmpne	r1, #0
   25f1c:	bne	25f24 <myhtml_token_attr_compare@@Base+0x18>
   25f20:	bx	lr
   25f24:	push	{r4, r5, fp, lr}
   25f28:	add	fp, sp, #8
   25f2c:	ldr	r4, [r2, #40]	; 0x28
   25f30:	ldr	r5, [r1, #40]	; 0x28
   25f34:	b	25f40 <myhtml_token_attr_compare@@Base+0x34>
   25f38:	ldr	r4, [r4]
   25f3c:	ldr	r5, [r5]
   25f40:	cmp	r5, #0
   25f44:	cmpne	r4, #0
   25f48:	beq	25f90 <myhtml_token_attr_compare@@Base+0x84>
   25f4c:	ldr	r0, [r5, #16]
   25f50:	ldr	r1, [r4, #16]
   25f54:	cmp	r1, r0
   25f58:	ldreq	r0, [r5, #36]	; 0x24
   25f5c:	ldreq	r1, [r4, #36]	; 0x24
   25f60:	cmpeq	r1, r0
   25f64:	bne	25f90 <myhtml_token_attr_compare@@Base+0x84>
   25f68:	ldr	r1, [r5, #8]
   25f6c:	ldr	r0, [r4, #8]
   25f70:	bl	110cc <mycore_strcmp@plt>
   25f74:	cmp	r0, #0
   25f78:	bne	25f90 <myhtml_token_attr_compare@@Base+0x84>
   25f7c:	ldr	r1, [r5, #28]
   25f80:	ldr	r0, [r4, #28]
   25f84:	bl	1196c <mycore_strcasecmp@plt>
   25f88:	cmp	r0, #0
   25f8c:	beq	25f38 <myhtml_token_attr_compare@@Base+0x2c>
   25f90:	orr	r0, r5, r4
   25f94:	clz	r0, r0
   25f98:	lsr	r0, r0, #5
   25f9c:	pop	{r4, r5, fp, lr}
   25fa0:	bx	lr

00025fa4 <myhtml_token_delete@@Base>:
   25fa4:	push	{r4, r5, fp, lr}
   25fa8:	add	fp, sp, #8
   25fac:	mov	r4, r1
   25fb0:	mov	r5, r0
   25fb4:	ldr	r2, [r1, #4]
   25fb8:	cmp	r2, #0
   25fbc:	ldrne	r0, [r4, #16]
   25fc0:	cmpne	r0, #0
   25fc4:	beq	25fd0 <myhtml_token_delete@@Base+0x2c>
   25fc8:	ldr	r1, [r4, #20]
   25fcc:	bl	11b4c <mchar_async_free@plt>
   25fd0:	ldr	r0, [r5, #4]
   25fd4:	mov	r1, r4
   25fd8:	pop	{r4, r5, fp, lr}
   25fdc:	b	114e0 <mcobject_async_free@plt>

00025fe0 <myhtml_token_attr_delete_all@@Base>:
   25fe0:	push	{r4, sl, fp, lr}
   25fe4:	add	fp, sp, #8
   25fe8:	ldr	r4, [r1, #40]	; 0x28
   25fec:	b	25ff4 <myhtml_token_attr_delete_all@@Base+0x14>
   25ff0:	ldr	r4, [r4]
   25ff4:	cmp	r4, #0
   25ff8:	popeq	{r4, sl, fp, pc}
   25ffc:	ldr	r2, [r4, #8]
   26000:	cmp	r2, #0
   26004:	ldrne	r0, [r4, #20]
   26008:	cmpne	r0, #0
   2600c:	beq	26018 <myhtml_token_attr_delete_all@@Base+0x38>
   26010:	ldr	r1, [r4, #24]
   26014:	bl	11b4c <mchar_async_free@plt>
   26018:	ldr	r2, [r4, #28]
   2601c:	cmp	r2, #0
   26020:	ldrne	r0, [r4, #40]	; 0x28
   26024:	cmpne	r0, #0
   26028:	beq	25ff0 <myhtml_token_attr_delete_all@@Base+0x10>
   2602c:	ldr	r1, [r4, #44]	; 0x2c
   26030:	bl	11b4c <mchar_async_free@plt>
   26034:	b	25ff0 <myhtml_token_attr_delete_all@@Base+0x10>

00026038 <myhtml_token_attr_remove@@Base>:
   26038:	cmp	r1, #0
   2603c:	beq	26070 <myhtml_token_attr_remove@@Base+0x38>
   26040:	ldm	r1, {r2, r3}
   26044:	cmp	r3, #0
   26048:	addeq	r3, r0, #40	; 0x28
   2604c:	str	r2, [r3]
   26050:	ldm	r1, {r2, ip}
   26054:	add	r3, r2, #4
   26058:	cmp	r2, #0
   2605c:	addeq	r3, r0, #44	; 0x2c
   26060:	str	ip, [r3]
   26064:	mov	r0, #0
   26068:	str	r0, [r1]
   2606c:	str	r0, [r1, #4]
   26070:	mov	r0, r1
   26074:	bx	lr

00026078 <myhtml_token_attr_remove_by_name@@Base>:
   26078:	push	{r4, sl, fp, lr}
   2607c:	add	fp, sp, #8
   26080:	mov	r4, r0
   26084:	bl	12260 <myhtml_token_attr_by_name@plt>
   26088:	mov	r1, r0
   2608c:	mov	r0, r4
   26090:	pop	{r4, sl, fp, lr}
   26094:	b	26038 <myhtml_token_attr_remove@@Base>

00026098 <myhtml_token_merged_two_token_string@@Base>:
   26098:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2609c:	add	fp, sp, #24
   260a0:	sub	sp, sp, #24
   260a4:	mov	r6, r3
   260a8:	mov	r7, r2
   260ac:	mov	r4, r1
   260b0:	mov	r5, r0
   260b4:	ldr	r0, [r0, #8]
   260b8:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   260bc:	ldr	r0, [r5, #8]
   260c0:	mov	r1, r7
   260c4:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   260c8:	mov	r0, #0
   260cc:	str	r0, [r4, #24]
   260d0:	str	r0, [r4, #28]
   260d4:	add	r8, r7, #4
   260d8:	add	r9, r4, #4
   260dc:	ldr	r1, [r5, #52]	; 0x34
   260e0:	ldr	r0, [r4, #20]
   260e4:	cmp	r0, r1
   260e8:	bne	26104 <myhtml_token_merged_two_token_string@@Base+0x6c>
   260ec:	cmp	r6, #0
   260f0:	bne	261a0 <myhtml_token_merged_two_token_string@@Base+0x108>
   260f4:	mov	r0, r9
   260f8:	mov	r1, r8
   260fc:	bl	115f4 <mycore_string_copy@plt>
   26100:	b	261a0 <myhtml_token_merged_two_token_string@@Base+0x108>
   26104:	ldr	r0, [r7, #20]
   26108:	cmp	r0, r1
   2610c:	bne	26124 <myhtml_token_merged_two_token_string@@Base+0x8c>
   26110:	cmp	r6, #0
   26114:	beq	26168 <myhtml_token_merged_two_token_string@@Base+0xd0>
   26118:	mov	r0, r8
   2611c:	mov	r1, r9
   26120:	b	26170 <myhtml_token_merged_two_token_string@@Base+0xd8>
   26124:	ldr	r0, [r7, #12]
   26128:	ldr	r2, [r4, #12]
   2612c:	add	r0, r2, r0
   26130:	add	r3, r0, #2
   26134:	ldr	r0, [r5, #4]
   26138:	mov	r7, sp
   2613c:	mov	r2, r7
   26140:	bl	11a44 <mycore_string_init@plt>
   26144:	mov	r5, sp
   26148:	mov	r0, r5
   2614c:	cmp	r6, #0
   26150:	beq	2617c <myhtml_token_merged_two_token_string@@Base+0xe4>
   26154:	mov	r1, r8
   26158:	bl	115f4 <mycore_string_copy@plt>
   2615c:	mov	r0, r5
   26160:	mov	r1, r9
   26164:	b	2618c <myhtml_token_merged_two_token_string@@Base+0xf4>
   26168:	mov	r0, r9
   2616c:	mov	r1, r8
   26170:	bl	115f4 <mycore_string_copy@plt>
   26174:	mov	r4, r7
   26178:	b	261a0 <myhtml_token_merged_two_token_string@@Base+0x108>
   2617c:	mov	r1, r9
   26180:	bl	115f4 <mycore_string_copy@plt>
   26184:	mov	r0, r5
   26188:	mov	r1, r8
   2618c:	bl	115f4 <mycore_string_copy@plt>
   26190:	vld1.32	{d16-d17}, [r7]!
   26194:	vst1.32	{d16-d17}, [r9]!
   26198:	ldr	r0, [r7]
   2619c:	str	r0, [r9]
   261a0:	mov	r0, r4
   261a4:	sub	sp, fp, #24
   261a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000261ac <myhtml_token_set_replacement_character_for_null_token@@Base>:
   261ac:	push	{r4, r5, r6, sl, fp, lr}
   261b0:	add	fp, sp, #16
   261b4:	sub	sp, sp, #24
   261b8:	mov	r4, r1
   261bc:	mov	r5, r0
   261c0:	ldr	r0, [r0, #8]
   261c4:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   261c8:	ldr	r0, [r5, #4]
   261cc:	ldr	r1, [r5, #52]	; 0x34
   261d0:	ldr	r2, [r4, #12]
   261d4:	add	r3, r2, #2
   261d8:	mov	r5, sp
   261dc:	mov	r2, r5
   261e0:	bl	11a44 <mycore_string_init@plt>
   261e4:	mov	r6, r4
   261e8:	ldr	r1, [r6, #4]!
   261ec:	ldr	r2, [r4, #12]
   261f0:	mov	r0, r5
   261f4:	bl	117d4 <mycore_string_append_with_replacement_null_characters@plt>
   261f8:	vld1.64	{d16-d17}, [r5]!
   261fc:	vst1.32	{d16-d17}, [r6]
   26200:	ldr	r0, [r5]
   26204:	str	r0, [r6, #16]
   26208:	sub	sp, fp, #16
   2620c:	pop	{r4, r5, r6, sl, fp, pc}

00026210 <myhtml_tokenizer_set_first_settings@@Base>:
   26210:	push	{r4, sl, fp, lr}
   26214:	add	fp, sp, #8
   26218:	mov	r4, r0
   2621c:	ldr	r0, [r0, #24]
   26220:	bl	1160c <mythread_queue_get_current_node@plt>
   26224:	str	r0, [r4, #68]	; 0x44
   26228:	bl	12134 <mythread_queue_node_clean@plt>
   2622c:	ldr	r0, [r4, #68]	; 0x44
   26230:	str	r4, [r0]
   26234:	ldr	r0, [r4, #8]
   26238:	ldr	r1, [r0, #12]
   2623c:	bl	11e10 <myhtml_token_node_create@plt>
   26240:	str	r0, [r4, #64]	; 0x40
   26244:	cmp	r0, #0
   26248:	moveq	r0, #2
   2624c:	ldrne	r0, [r4, #76]	; 0x4c
   26250:	strne	r0, [r4, #80]	; 0x50
   26254:	movne	r0, #0
   26258:	pop	{r4, sl, fp, pc}

0002625c <myhtml_tokenizer_begin@@Base>:
   2625c:	b	26260 <myhtml_tokenizer_chunk@@Base>

00026260 <myhtml_tokenizer_chunk@@Base>:
   26260:	ldr	r3, [r0, #204]	; 0xcc
   26264:	bic	r3, r3, #1
   26268:	cmp	r3, #4
   2626c:	bne	26274 <myhtml_tokenizer_chunk@@Base+0x14>
   26270:	b	263d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   26274:	b	26278 <myhtml_tokenizer_chunk_process@@Base>

00026278 <myhtml_tokenizer_chunk_process@@Base>:
   26278:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2627c:	add	fp, sp, #24
   26280:	sub	sp, sp, #16
   26284:	mov	r4, r2
   26288:	mov	r6, r1
   2628c:	mov	r5, r0
   26290:	ldr	r8, [r0]
   26294:	ldr	r1, [r0, #72]	; 0x48
   26298:	ldr	r0, [r0, #76]	; 0x4c
   2629c:	ldr	r9, [r8, #24]
   262a0:	mov	r2, r6
   262a4:	mov	r3, r4
   262a8:	bl	1151c <mycore_incoming_buffer_add@plt>
   262ac:	str	r0, [r5, #76]	; 0x4c
   262b0:	ldrb	r0, [r8, #32]
   262b4:	tst	r0, #1
   262b8:	ldrne	r0, [r5, #180]	; 0xb4
   262bc:	orrne	r0, r0, #16
   262c0:	strne	r0, [r5, #180]	; 0xb4
   262c4:	ldr	r0, [r5, #180]	; 0xb4
   262c8:	tst	r0, #16
   262cc:	bne	26324 <myhtml_tokenizer_chunk_process@@Base+0xac>
   262d0:	ldr	r0, [r5, #20]
   262d4:	cmp	r0, #0
   262d8:	bne	2631c <myhtml_tokenizer_chunk_process@@Base+0xa4>
   262dc:	mov	r0, #0
   262e0:	str	r0, [sp, #12]
   262e4:	ldr	r3, [r5, #24]
   262e8:	ldr	r0, [r8]
   262ec:	ldr	r1, [r8, #20]
   262f0:	ldr	r2, [r0, #16]
   262f4:	add	r0, sp, #12
   262f8:	str	r1, [sp]
   262fc:	str	r0, [sp, #4]
   26300:	add	r0, r8, #8
   26304:	mov	r1, #2
   26308:	bl	11600 <mythread_queue_list_entry_push@plt>
   2630c:	str	r0, [r5, #20]
   26310:	ldr	r0, [sp, #12]
   26314:	cmp	r0, #0
   26318:	bne	2638c <myhtml_tokenizer_chunk_process@@Base+0x114>
   2631c:	mov	r0, r5
   26320:	bl	11720 <myhtml_tokenizer_post@plt>
   26324:	ldr	r0, [r5, #68]	; 0x44
   26328:	cmp	r0, #0
   2632c:	beq	2637c <myhtml_tokenizer_chunk_process@@Base+0x104>
   26330:	cmp	r4, #0
   26334:	beq	26364 <myhtml_tokenizer_chunk_process@@Base+0xec>
   26338:	mov	r3, #0
   2633c:	ldr	r1, [r5, #64]	; 0x40
   26340:	ldr	r0, [r5, #160]	; 0xa0
   26344:	ldr	r7, [r9, r0, lsl #2]
   26348:	str	r4, [sp]
   2634c:	mov	r0, r5
   26350:	mov	r2, r6
   26354:	blx	r7
   26358:	mov	r3, r0
   2635c:	cmp	r0, r4
   26360:	bcc	2633c <myhtml_tokenizer_chunk_process@@Base+0xc4>
   26364:	ldr	r0, [r5, #192]	; 0xc0
   26368:	add	r0, r0, r4
   2636c:	str	r0, [r5, #192]	; 0xc0
   26370:	mov	r0, #0
   26374:	sub	sp, fp, #24
   26378:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2637c:	mov	r0, r5
   26380:	bl	11a2c <myhtml_tokenizer_set_first_settings@plt>
   26384:	cmp	r0, #0
   26388:	beq	26330 <myhtml_tokenizer_chunk_process@@Base+0xb8>
   2638c:	sub	sp, fp, #24
   26390:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026394 <myhtml_tokenizer_post@@Base>:
   26394:	push	{r4, sl, fp, lr}
   26398:	add	fp, sp, #8
   2639c:	mov	r4, r0
   263a0:	ldr	r0, [r0]
   263a4:	ldr	r0, [r0]
   263a8:	cmp	r0, #0
   263ac:	beq	263b8 <myhtml_tokenizer_post@@Base+0x24>
   263b0:	mov	r1, #0
   263b4:	bl	11900 <mythread_resume@plt>
   263b8:	ldr	r0, [r4]
   263bc:	ldr	r0, [r0, #4]
   263c0:	cmp	r0, #0
   263c4:	popeq	{r4, sl, fp, pc}
   263c8:	mov	r1, #0
   263cc:	pop	{r4, sl, fp, lr}
   263d0:	b	11900 <mythread_resume@plt>

000263d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   263d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   263d8:	add	fp, sp, #28
   263dc:	sub	sp, sp, #12
   263e0:	mov	r5, r2
   263e4:	mov	sl, r1
   263e8:	mov	r9, r0
   263ec:	ldr	r0, [r0, #200]	; 0xc8
   263f0:	bl	11c48 <myencoding_get_function_by_id@plt>
   263f4:	mov	r7, r0
   263f8:	ldr	r0, [r9, #148]	; 0x94
   263fc:	cmp	r0, #0
   26400:	beq	264ec <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x118>
   26404:	ldr	r6, [r9, #148]	; 0x94
   26408:	mov	r0, r6
   2640c:	bl	11f6c <myhtml_stream_buffer_current_entry@plt>
   26410:	mov	r4, r0
   26414:	ldr	r8, [r0, #4]
   26418:	cmp	r5, #0
   2641c:	str	r9, [sp, #4]
   26420:	beq	264bc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xe8>
   26424:	str	r6, [sp, #8]
   26428:	add	r6, r6, #12
   2642c:	mov	r9, #0
   26430:	ldrb	r0, [sl, r9]
   26434:	mov	r1, r6
   26438:	blx	r7
   2643c:	cmp	r0, #0
   26440:	bne	264b0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xdc>
   26444:	ldr	r3, [r4, #4]
   26448:	ldr	r1, [r4, #8]
   2644c:	add	r2, r3, #4
   26450:	cmp	r2, r1
   26454:	bcc	26490 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xbc>
   26458:	ldr	r0, [sp, #4]
   2645c:	mov	r1, #0
   26460:	str	r1, [r0, #200]	; 0xc8
   26464:	sub	r2, r3, r8
   26468:	ldr	r1, [r4]
   2646c:	add	r1, r1, r8
   26470:	bl	11870 <myhtml_tokenizer_chunk_process@plt>
   26474:	ldr	r0, [sp, #8]
   26478:	mov	r1, #16384	; 0x4000
   2647c:	bl	11d50 <myhtml_stream_buffer_add_entry@plt>
   26480:	cmp	r0, #0
   26484:	beq	26524 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x150>
   26488:	mov	r4, r0
   2648c:	ldr	r8, [r0, #4]
   26490:	ldr	r0, [sp, #8]
   26494:	ldr	r0, [r0, #24]
   26498:	ldm	r4, {r1, r2}
   2649c:	add	r1, r1, r2
   264a0:	bl	1223c <myencoding_codepoint_to_ascii_utf_8@plt>
   264a4:	ldr	r1, [r4, #4]
   264a8:	add	r0, r1, r0
   264ac:	str	r0, [r4, #4]
   264b0:	add	r9, r9, #1
   264b4:	cmp	r9, r5
   264b8:	bcc	26430 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x5c>
   264bc:	ldr	r1, [r4, #4]
   264c0:	mov	r6, #0
   264c4:	cmp	r1, r8
   264c8:	ldr	r0, [sp, #4]
   264cc:	beq	26530 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   264d0:	mov	r6, #0
   264d4:	str	r6, [r0, #200]	; 0xc8
   264d8:	sub	r2, r1, r8
   264dc:	ldr	r1, [r4]
   264e0:	add	r1, r1, r8
   264e4:	bl	11870 <myhtml_tokenizer_chunk_process@plt>
   264e8:	b	26530 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   264ec:	bl	12224 <myhtml_stream_buffer_create@plt>
   264f0:	str	r0, [r9, #148]	; 0x94
   264f4:	cmp	r0, #0
   264f8:	beq	2652c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x158>
   264fc:	mov	r1, #1024	; 0x400
   26500:	bl	12128 <myhtml_stream_buffer_init@plt>
   26504:	mov	r6, r0
   26508:	cmp	r0, #0
   2650c:	bne	26530 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   26510:	ldr	r0, [r9, #148]	; 0x94
   26514:	mov	r1, #16384	; 0x4000
   26518:	bl	11d50 <myhtml_stream_buffer_add_entry@plt>
   2651c:	cmp	r0, #0
   26520:	bne	26404 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x30>
   26524:	movw	r6, #37636	; 0x9304
   26528:	b	26530 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   2652c:	mov	r6, #37632	; 0x9300
   26530:	mov	r0, r6
   26534:	sub	sp, fp, #28
   26538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002653c <myhtml_tokenizer_end@@Base>:
   2653c:	push	{r4, r5, fp, lr}
   26540:	add	fp, sp, #8
   26544:	sub	sp, sp, #8
   26548:	mov	r4, r0
   2654c:	ldr	r0, [r0, #76]	; 0x4c
   26550:	cmp	r0, #0
   26554:	beq	26590 <myhtml_tokenizer_end@@Base+0x54>
   26558:	ldr	r3, [r0, #8]
   2655c:	ldr	ip, [r4]
   26560:	ldr	r1, [r4, #64]	; 0x40
   26564:	ldr	r5, [r4, #160]	; 0xa0
   26568:	ldr	r2, [r4, #192]	; 0xc0
   2656c:	sub	r2, r2, r3
   26570:	str	r2, [r4, #192]	; 0xc0
   26574:	ldr	r2, [ip, #24]
   26578:	add	r2, r2, r5, lsl #2
   2657c:	ldr	r5, [r2, #280]	; 0x118
   26580:	ldr	r2, [r0]
   26584:	str	r3, [sp]
   26588:	mov	r0, r4
   2658c:	blx	r5
   26590:	ldr	r2, [r4, #64]	; 0x40
   26594:	mov	r0, #251	; 0xfb
   26598:	str	r0, [r2]
   2659c:	mov	r0, r4
   265a0:	mov	r1, #0
   265a4:	bl	114bc <myhtml_queue_add@plt>
   265a8:	cmp	r0, #0
   265ac:	movne	r0, #2
   265b0:	strne	r0, [r4, #196]	; 0xc4
   265b4:	ldr	r0, [r4, #180]	; 0xb4
   265b8:	ldr	r5, [r4, #196]	; 0xc4
   265bc:	tst	r0, #16
   265c0:	bne	26618 <myhtml_tokenizer_end@@Base+0xdc>
   265c4:	ldr	r0, [r4]
   265c8:	ldr	r1, [r4, #20]
   265cc:	ldr	r0, [r0]
   265d0:	bl	11d98 <mythread_queue_list_entry_wait_for_done@plt>
   265d4:	ldr	r0, [r4]
   265d8:	ldr	r3, [r4, #20]
   265dc:	ldr	r1, [r0], #8
   265e0:	ldr	r2, [r1, #16]
   265e4:	mov	r1, #0
   265e8:	str	r1, [sp]
   265ec:	mov	r1, #2
   265f0:	bl	110e4 <mythread_queue_list_entry_delete@plt>
   265f4:	str	r0, [r4, #20]
   265f8:	ldr	r0, [r4]
   265fc:	ldr	r0, [r0]
   26600:	ldr	r0, [r0, #16]
   26604:	bl	119fc <mythread_queue_list_get_count@plt>
   26608:	cmp	r0, #0
   2660c:	beq	26630 <myhtml_tokenizer_end@@Base+0xf4>
   26610:	cmp	r5, #0
   26614:	beq	26640 <myhtml_tokenizer_end@@Base+0x104>
   26618:	ldr	r0, [r4, #180]	; 0xb4
   2661c:	orr	r0, r0, #32
   26620:	str	r0, [r4, #180]	; 0xb4
   26624:	mov	r0, r5
   26628:	sub	sp, fp, #8
   2662c:	pop	{r4, r5, fp, pc}
   26630:	mov	r0, r4
   26634:	bl	11a20 <myhtml_tokenizer_pause@plt>
   26638:	cmp	r5, #0
   2663c:	bne	26618 <myhtml_tokenizer_end@@Base+0xdc>
   26640:	ldr	r0, [r4]
   26644:	ldr	r0, [r0]
   26648:	bl	11954 <mythread_check_status@plt>
   2664c:	mov	r5, r0
   26650:	b	26618 <myhtml_tokenizer_end@@Base+0xdc>

00026654 <myhtml_tokenizer_pause@@Base>:
   26654:	push	{r4, sl, fp, lr}
   26658:	add	fp, sp, #8
   2665c:	mov	r4, r0
   26660:	ldr	r0, [r0]
   26664:	ldr	r0, [r0]
   26668:	cmp	r0, #0
   2666c:	beq	26674 <myhtml_tokenizer_pause@@Base+0x20>
   26670:	bl	11ed0 <mythread_stop@plt>
   26674:	ldr	r0, [r4]
   26678:	ldr	r0, [r0, #4]
   2667c:	cmp	r0, #0
   26680:	popeq	{r4, sl, fp, pc}
   26684:	pop	{r4, sl, fp, lr}
   26688:	b	11ed0 <mythread_stop@plt>

0002668c <myhtml_tokenizer_fragment_init@@Base>:
   2668c:	push	{r4, r5, r6, sl, fp, lr}
   26690:	add	fp, sp, #16
   26694:	mov	r6, r2
   26698:	mov	r5, r1
   2669c:	mov	r4, r0
   266a0:	bl	11474 <myhtml_tree_node_create@plt>
   266a4:	str	r0, [r4, #88]	; 0x58
   266a8:	stmib	r0, {r5, r6}
   266ac:	cmp	r6, #1
   266b0:	bne	266e4 <myhtml_tokenizer_fragment_init@@Base+0x58>
   266b4:	cmp	r5, #93	; 0x5d
   266b8:	bne	266d0 <myhtml_tokenizer_fragment_init@@Base+0x44>
   266bc:	ldr	r0, [r4, #180]	; 0xb4
   266c0:	tst	r0, #1
   266c4:	moveq	r0, #0
   266c8:	movne	r0, #4
   266cc:	b	266e0 <myhtml_tokenizer_fragment_init@@Base+0x54>
   266d0:	ldr	r0, [r4, #28]
   266d4:	mov	r1, r5
   266d8:	bl	11e28 <myhtml_tag_get_by_id@plt>
   266dc:	ldr	r0, [r0, #12]
   266e0:	str	r0, [r4, #160]	; 0xa0
   266e4:	ldr	r0, [r4, #8]
   266e8:	ldr	r1, [r0, #12]
   266ec:	bl	11e10 <myhtml_token_node_create@plt>
   266f0:	ldr	r1, [r4, #88]	; 0x58
   266f4:	str	r0, [r1, #32]
   266f8:	cmp	r0, #0
   266fc:	moveq	r6, #0
   26700:	moveq	r0, r6
   26704:	popeq	{r4, r5, r6, sl, fp, pc}
   26708:	bl	11990 <myhtml_token_set_done@plt>
   2670c:	ldr	r0, [r4, #88]	; 0x58
   26710:	ldr	r0, [r0, #32]
   26714:	str	r0, [r4, #156]	; 0x9c
   26718:	mov	r0, r4
   2671c:	mov	r1, #0
   26720:	mov	r2, #1
   26724:	bl	110d8 <myhtml_tree_node_insert_root@plt>
   26728:	mov	r6, r0
   2672c:	cmp	r5, #128	; 0x80
   26730:	bne	26740 <myhtml_tokenizer_fragment_init@@Base+0xb4>
   26734:	mov	r0, r4
   26738:	mov	r1, #17
   2673c:	bl	11444 <myhtml_tree_template_insertion_append@plt>
   26740:	mov	r0, r4
   26744:	bl	11b64 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   26748:	mov	r0, r6
   2674c:	pop	{r4, r5, r6, sl, fp, pc}

00026750 <myhtml_tokenizer_wait@@Base>:
   26750:	ldr	r1, [r0]
   26754:	ldr	r2, [r1]
   26758:	cmp	r2, #0
   2675c:	bxeq	lr
   26760:	ldr	r1, [r0, #20]
   26764:	mov	r0, r2
   26768:	b	11d98 <mythread_queue_list_entry_wait_for_done@plt>

0002676c <myhtml_tokenizer_calc_current_namespace@@Base>:
   2676c:	push	{r4, r5, fp, lr}
   26770:	add	fp, sp, #8
   26774:	mov	r4, r0
   26778:	ldr	r0, [r0, #184]	; 0xb8
   2677c:	tst	r0, #1
   26780:	bne	267f4 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   26784:	ldr	r0, [r4, #180]	; 0xb4
   26788:	tst	r0, #16
   2678c:	bne	267ec <myhtml_tokenizer_calc_current_namespace@@Base+0x80>
   26790:	mov	r5, r1
   26794:	ldr	r1, [r1]
   26798:	cmp	r1, #54	; 0x36
   2679c:	beq	267ac <myhtml_tokenizer_calc_current_namespace@@Base+0x40>
   267a0:	cmp	r1, #218	; 0xda
   267a4:	cmpne	r1, #124	; 0x7c
   267a8:	bne	267b4 <myhtml_tokenizer_calc_current_namespace@@Base+0x48>
   267ac:	str	r5, [r4, #156]	; 0x9c
   267b0:	pop	{r4, r5, fp, pc}
   267b4:	ldr	r0, [r4, #156]	; 0x9c
   267b8:	cmp	r0, #0
   267bc:	beq	267f4 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   267c0:	ldr	r0, [r5, #48]	; 0x30
   267c4:	tst	r0, #1
   267c8:	bne	267f4 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   267cc:	ldr	r0, [r4, #28]
   267d0:	bl	11e28 <myhtml_tag_get_by_id@plt>
   267d4:	ldr	r0, [r0, #12]
   267d8:	cmp	r0, #0
   267dc:	popeq	{r4, r5, fp, pc}
   267e0:	mov	r0, r4
   267e4:	mov	r1, r5
   267e8:	bl	111b0 <myhtml_tree_wait_for_last_done_token@plt>
   267ec:	ldr	r0, [r4, #164]	; 0xa4
   267f0:	str	r0, [r4, #160]	; 0xa0
   267f4:	pop	{r4, r5, fp, pc}

000267f8 <myhtml_check_tag_parser@@Base>:
   267f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   267fc:	add	fp, sp, #24
   26800:	sub	sp, sp, #8
   26804:	mov	r6, r3
   26808:	mov	r8, r2
   2680c:	mov	r4, r1
   26810:	mov	r7, r0
   26814:	ldr	r1, [r1, #24]
   26818:	ldr	r2, [r4, #28]
   2681c:	ldr	r5, [r0, #28]
   26820:	cmp	r2, r3
   26824:	bls	2683c <myhtml_check_tag_parser@@Base+0x44>
   26828:	mov	r0, r7
   2682c:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   26830:	mov	r1, r0
   26834:	ldr	r2, [r4, #28]
   26838:	b	26848 <myhtml_check_tag_parser@@Base+0x50>
   2683c:	ldr	r0, [r7, #192]	; 0xc0
   26840:	sub	r0, r1, r0
   26844:	add	r1, r8, r0
   26848:	mov	r0, r5
   2684c:	bl	11f60 <myhtml_tag_get_by_name@plt>
   26850:	cmp	r0, #0
   26854:	ldrne	r0, [r0]
   26858:	strne	r0, [r4]
   2685c:	subne	sp, fp, #24
   26860:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   26864:	ldr	r1, [r4, #24]
   26868:	ldr	r2, [r4, #28]
   2686c:	cmp	r2, r6
   26870:	bls	26890 <myhtml_check_tag_parser@@Base+0x98>
   26874:	mov	r0, r7
   26878:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2687c:	mov	r1, r0
   26880:	ldr	r2, [r4, #28]
   26884:	mov	r0, #1
   26888:	str	r0, [sp]
   2688c:	b	268a4 <myhtml_check_tag_parser@@Base+0xac>
   26890:	ldr	r0, [r7, #192]	; 0xc0
   26894:	mov	r3, #1
   26898:	str	r3, [sp]
   2689c:	sub	r0, r1, r0
   268a0:	add	r1, r8, r0
   268a4:	mov	r0, r5
   268a8:	mov	r3, #0
   268ac:	bl	114a4 <myhtml_tag_add@plt>
   268b0:	mov	r1, r0
   268b4:	str	r0, [r4]
   268b8:	mov	r0, r5
   268bc:	mov	r2, #1
   268c0:	mov	r3, #1
   268c4:	sub	sp, fp, #24
   268c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   268cc:	b	1142c <myhtml_tag_set_category@plt>

000268d0 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   268d0:	push	{r4, sl, fp, lr}
   268d4:	add	fp, sp, #8
   268d8:	mov	r2, r1
   268dc:	mov	r4, r0
   268e0:	ldr	r0, [r1]
   268e4:	cmp	r0, #0
   268e8:	bne	26938 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   268ec:	ldr	r0, [r2, #24]
   268f0:	cmp	r0, r3
   268f4:	bcs	26938 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   268f8:	ldr	ip, [fp, #8]
   268fc:	mov	r1, #1
   26900:	str	r1, [r2]
   26904:	ldr	r1, [r2, #32]
   26908:	ldr	lr, [r2, #48]	; 0x30
   2690c:	sub	r3, r3, r0
   26910:	str	r3, [r2, #28]
   26914:	str	r0, [r2, #32]
   26918:	str	r3, [r2, #36]	; 0x24
   2691c:	orr	r0, lr, ip
   26920:	str	r0, [r2, #48]	; 0x30
   26924:	mov	r0, r4
   26928:	bl	114bc <myhtml_queue_add@plt>
   2692c:	mov	r2, #0
   26930:	cmp	r0, #0
   26934:	ldreq	r2, [r4, #64]	; 0x40
   26938:	mov	r0, r2
   2693c:	pop	{r4, sl, fp, pc}

00026940 <myhtml_tokenizer_set_state@@Base>:
   26940:	push	{r4, sl, fp, lr}
   26944:	add	fp, sp, #8
   26948:	mov	r4, r0
   2694c:	ldr	r2, [r1, #48]	; 0x30
   26950:	mov	r0, #0
   26954:	tst	r2, #1
   26958:	bne	2697c <myhtml_tokenizer_set_state@@Base+0x3c>
   2695c:	ldr	r1, [r1]
   26960:	cmp	r1, #93	; 0x5d
   26964:	ldreq	r2, [r4, #180]	; 0xb4
   26968:	tsteq	r2, #1
   2696c:	beq	2697c <myhtml_tokenizer_set_state@@Base+0x3c>
   26970:	ldr	r0, [r4, #28]
   26974:	bl	11e28 <myhtml_tag_get_by_id@plt>
   26978:	ldr	r0, [r0, #12]
   2697c:	str	r0, [r4, #160]	; 0xa0
   26980:	pop	{r4, sl, fp, pc}

00026984 <myhtml_tokenizer_state_rcdata@@Base>:
   26984:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26988:	add	fp, sp, #24
   2698c:	mov	r4, r3
   26990:	mov	r7, r2
   26994:	mov	r8, r1
   26998:	mov	r5, r0
   2699c:	ldr	r0, [r0, #60]	; 0x3c
   269a0:	ldr	r6, [fp, #8]
   269a4:	cmp	r0, #0
   269a8:	bne	269fc <myhtml_tokenizer_state_rcdata@@Base+0x78>
   269ac:	ldr	r0, [r5, #192]	; 0xc0
   269b0:	add	r0, r0, r4
   269b4:	str	r0, [r8, #24]
   269b8:	ldr	r0, [r5, #68]	; 0x44
   269bc:	bl	111bc <mythread_queue_get_prev_node@plt>
   269c0:	cmp	r0, #0
   269c4:	ldrne	r0, [r0, #4]
   269c8:	cmpne	r0, #0
   269cc:	bne	269e4 <myhtml_tokenizer_state_rcdata@@Base+0x60>
   269d0:	ldr	r0, [r5, #88]	; 0x58
   269d4:	cmp	r0, #0
   269d8:	beq	269fc <myhtml_tokenizer_state_rcdata@@Base+0x78>
   269dc:	ldr	r0, [r0, #4]
   269e0:	b	269e8 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   269e4:	ldr	r0, [r0]
   269e8:	str	r0, [r5, #60]	; 0x3c
   269ec:	cmp	r4, r6
   269f0:	bcc	26a04 <myhtml_tokenizer_state_rcdata@@Base+0x80>
   269f4:	b	26a28 <myhtml_tokenizer_state_rcdata@@Base+0xa4>
   269f8:	add	r4, r4, #1
   269fc:	cmp	r4, r6
   26a00:	bcs	26a28 <myhtml_tokenizer_state_rcdata@@Base+0xa4>
   26a04:	ldrb	r0, [r7, r4]
   26a08:	cmp	r0, #60	; 0x3c
   26a0c:	bne	269f8 <myhtml_tokenizer_state_rcdata@@Base+0x74>
   26a10:	ldr	r0, [r5, #192]	; 0xc0
   26a14:	add	r0, r0, r4
   26a18:	str	r0, [r8, #32]
   26a1c:	mov	r0, #10
   26a20:	str	r0, [r5, #160]	; 0xa0
   26a24:	add	r4, r4, #1
   26a28:	mov	r0, r4
   26a2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026a30 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   26a30:	ldrb	r1, [r2, r3]
   26a34:	mov	r2, #2
   26a38:	cmp	r1, #47	; 0x2f
   26a3c:	movweq	r2, #11
   26a40:	str	r2, [r0, #160]	; 0xa0
   26a44:	addeq	r3, r3, #1
   26a48:	mov	r0, r3
   26a4c:	bx	lr

00026a50 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   26a50:	ldrb	r1, [r2, r3]
   26a54:	ldr	r2, [pc, #28]	; 26a78 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   26a58:	add	r2, pc, r2
   26a5c:	ldrb	r1, [r2, r1]
   26a60:	mov	r2, #2
   26a64:	cmp	r1, #1
   26a68:	movweq	r2, #12
   26a6c:	str	r2, [r0, #160]	; 0xa0
   26a70:	mov	r0, r3
   26a74:	bx	lr
   26a78:	andeq	r6, sp, sl, ror #29

00026a7c <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   26a7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26a80:	add	fp, sp, #24
   26a84:	mov	r4, r3
   26a88:	mov	r5, r1
   26a8c:	mov	r6, r0
   26a90:	ldr	r0, [r3]
   26a94:	ldr	r1, [r6, #192]	; 0xc0
   26a98:	add	r0, r1, r0
   26a9c:	ldr	r1, [r5, #24]
   26aa0:	sub	r0, r0, r1
   26aa4:	str	r0, [r5, #28]
   26aa8:	ldr	r3, [r3]
   26aac:	mov	r0, r6
   26ab0:	mov	r1, r5
   26ab4:	bl	11ffc <myhtml_check_tag_parser@plt>
   26ab8:	ldr	r0, [r6, #60]	; 0x3c
   26abc:	ldr	r2, [r5]
   26ac0:	ldr	r1, [fp, #8]
   26ac4:	cmp	r2, r0
   26ac8:	bne	26b70 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xf4>
   26acc:	ldr	r7, [r5, #24]
   26ad0:	sub	r0, r7, #2
   26ad4:	cmp	r0, r1
   26ad8:	bls	26b3c <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xc0>
   26adc:	ldr	r2, [fp, #12]
   26ae0:	ldr	r8, [r5, #32]
   26ae4:	ldr	r3, [r5, #48]	; 0x30
   26ae8:	orr	r2, r3, r2
   26aec:	str	r2, [r5, #48]	; 0x30
   26af0:	mov	r2, #1
   26af4:	str	r2, [r5]
   26af8:	sub	r0, r0, r1
   26afc:	str	r1, [r5, #24]
   26b00:	str	r0, [r5, #28]
   26b04:	str	r1, [r5, #32]
   26b08:	str	r0, [r5, #36]	; 0x24
   26b0c:	ldr	r0, [r5, #48]	; 0x30
   26b10:	ldr	r1, [r5, #48]	; 0x30
   26b14:	and	r0, r0, #8
   26b18:	eor	r0, r1, r0
   26b1c:	str	r0, [r5, #48]	; 0x30
   26b20:	ldr	r1, [r4]
   26b24:	mov	r0, r6
   26b28:	mov	r2, r5
   26b2c:	bl	114bc <myhtml_queue_add@plt>
   26b30:	ldr	r5, [r6, #64]	; 0x40
   26b34:	str	r7, [r5, #24]
   26b38:	str	r8, [r5, #32]
   26b3c:	ldr	r0, [r6, #60]	; 0x3c
   26b40:	str	r0, [r5]
   26b44:	ldr	r0, [r5, #48]	; 0x30
   26b48:	orr	r0, r0, #1
   26b4c:	str	r0, [r5, #48]	; 0x30
   26b50:	ldr	r0, [r6, #192]	; 0xc0
   26b54:	ldr	r1, [r4]
   26b58:	add	r0, r1, r0
   26b5c:	ldr	r1, [r5, #24]
   26b60:	sub	r0, r0, r1
   26b64:	str	r0, [r5, #28]
   26b68:	mov	r0, #1
   26b6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26b70:	mov	r0, #0
   26b74:	str	r1, [r5, #24]
   26b78:	str	r0, [r5, #28]
   26b7c:	mov	r1, #2
   26b80:	str	r1, [r6, #160]	; 0xa0
   26b84:	ldr	r1, [r4]
   26b88:	add	r1, r1, #1
   26b8c:	str	r1, [r4]
   26b90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026b94 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   26b94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26b98:	add	fp, sp, #24
   26b9c:	sub	sp, sp, #16
   26ba0:	mov	r5, r1
   26ba4:	mov	r9, r0
   26ba8:	str	r3, [sp, #12]
   26bac:	ldr	r0, [r0, #192]	; 0xc0
   26bb0:	add	r0, r0, r3
   26bb4:	ldr	r8, [r1, #24]
   26bb8:	str	r0, [r1, #24]
   26bbc:	ldr	r0, [fp, #8]
   26bc0:	ldr	r3, [sp, #12]
   26bc4:	cmp	r3, r0
   26bc8:	bcs	26cdc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26bcc:	ldr	r1, [sp, #12]
   26bd0:	ldr	r6, [pc, #296]	; 26d00 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x16c>
   26bd4:	add	r6, pc, r6
   26bd8:	ldrb	r4, [r2, r3]
   26bdc:	ldrb	r7, [r6, r4]
   26be0:	cmp	r7, #2
   26be4:	cmpne	r4, #47	; 0x2f
   26be8:	beq	26c14 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x80>
   26bec:	cmp	r4, #62	; 0x3e
   26bf0:	beq	26c6c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd8>
   26bf4:	cmp	r7, #1
   26bf8:	bne	26c5c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   26bfc:	add	r1, r3, #1
   26c00:	cmp	r1, r0
   26c04:	mov	r3, r1
   26c08:	bcc	26bd8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x44>
   26c0c:	str	r1, [sp, #12]
   26c10:	b	26cdc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26c14:	str	r1, [sp, #12]
   26c18:	mov	r0, #16
   26c1c:	str	r8, [sp]
   26c20:	str	r0, [sp, #4]
   26c24:	add	r3, sp, #12
   26c28:	mov	r0, r9
   26c2c:	mov	r1, r5
   26c30:	bl	1202c <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26c34:	cmp	r0, #0
   26c38:	beq	26cdc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26c3c:	mov	r0, #0
   26c40:	str	r0, [r9, #60]	; 0x3c
   26c44:	mov	r0, #33	; 0x21
   26c48:	str	r0, [r9, #160]	; 0xa0
   26c4c:	ldr	r0, [sp, #12]
   26c50:	add	r5, r0, #1
   26c54:	str	r5, [sp, #12]
   26c58:	b	26ce4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   26c5c:	str	r1, [sp, #12]
   26c60:	mov	r0, #2
   26c64:	str	r0, [r9, #160]	; 0xa0
   26c68:	b	26cdc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26c6c:	str	r1, [sp, #12]
   26c70:	mov	r0, #16
   26c74:	str	r8, [sp]
   26c78:	str	r0, [sp, #4]
   26c7c:	add	r3, sp, #12
   26c80:	mov	r0, r9
   26c84:	mov	r1, r5
   26c88:	bl	1202c <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26c8c:	cmp	r0, #0
   26c90:	beq	26cdc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26c94:	ldr	r0, [sp, #12]
   26c98:	add	r5, r0, #1
   26c9c:	str	r5, [sp, #12]
   26ca0:	ldr	r2, [r9, #64]	; 0x40
   26ca4:	ldr	r0, [r9, #192]	; 0xc0
   26ca8:	add	r0, r0, r5
   26cac:	ldr	r1, [r2, #32]
   26cb0:	sub	r0, r0, r1
   26cb4:	str	r0, [r2, #36]	; 0x24
   26cb8:	mov	r0, r9
   26cbc:	mov	r1, r5
   26cc0:	bl	114bc <myhtml_queue_add@plt>
   26cc4:	cmp	r0, #0
   26cc8:	beq	26cf0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x15c>
   26ccc:	mov	r0, #69	; 0x45
   26cd0:	str	r0, [r9, #160]	; 0xa0
   26cd4:	mov	r5, #0
   26cd8:	b	26ce4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   26cdc:	str	r8, [r5, #24]
   26ce0:	ldr	r5, [sp, #12]
   26ce4:	mov	r0, r5
   26ce8:	sub	sp, fp, #24
   26cec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26cf0:	mov	r0, #0
   26cf4:	str	r0, [r9, #160]	; 0xa0
   26cf8:	str	r0, [r9, #60]	; 0x3c
   26cfc:	b	26ce4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   26d00:	andeq	r6, sp, lr, ror #26

00026d04 <myhtml_tokenizer_state_rawtext@@Base>:
   26d04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26d08:	add	fp, sp, #24
   26d0c:	mov	r4, r3
   26d10:	mov	r7, r2
   26d14:	mov	r8, r1
   26d18:	mov	r5, r0
   26d1c:	ldr	r0, [r0, #60]	; 0x3c
   26d20:	ldr	r6, [fp, #8]
   26d24:	cmp	r0, #0
   26d28:	bne	26d7c <myhtml_tokenizer_state_rawtext@@Base+0x78>
   26d2c:	ldr	r0, [r5, #192]	; 0xc0
   26d30:	add	r0, r0, r4
   26d34:	str	r0, [r8, #24]
   26d38:	ldr	r0, [r5, #68]	; 0x44
   26d3c:	bl	111bc <mythread_queue_get_prev_node@plt>
   26d40:	cmp	r0, #0
   26d44:	ldrne	r0, [r0, #4]
   26d48:	cmpne	r0, #0
   26d4c:	bne	26d64 <myhtml_tokenizer_state_rawtext@@Base+0x60>
   26d50:	ldr	r0, [r5, #88]	; 0x58
   26d54:	cmp	r0, #0
   26d58:	beq	26d7c <myhtml_tokenizer_state_rawtext@@Base+0x78>
   26d5c:	ldr	r0, [r0, #4]
   26d60:	b	26d68 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   26d64:	ldr	r0, [r0]
   26d68:	str	r0, [r5, #60]	; 0x3c
   26d6c:	cmp	r4, r6
   26d70:	bcc	26d84 <myhtml_tokenizer_state_rawtext@@Base+0x80>
   26d74:	b	26da8 <myhtml_tokenizer_state_rawtext@@Base+0xa4>
   26d78:	add	r4, r4, #1
   26d7c:	cmp	r4, r6
   26d80:	bcs	26da8 <myhtml_tokenizer_state_rawtext@@Base+0xa4>
   26d84:	ldrb	r0, [r7, r4]
   26d88:	cmp	r0, #60	; 0x3c
   26d8c:	bne	26d78 <myhtml_tokenizer_state_rawtext@@Base+0x74>
   26d90:	ldr	r0, [r5, #192]	; 0xc0
   26d94:	add	r0, r0, r4
   26d98:	str	r0, [r8, #32]
   26d9c:	mov	r0, #13
   26da0:	str	r0, [r5, #160]	; 0xa0
   26da4:	add	r4, r4, #1
   26da8:	mov	r0, r4
   26dac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026db0 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   26db0:	ldrb	r1, [r2, r3]
   26db4:	mov	r2, #4
   26db8:	cmp	r1, #47	; 0x2f
   26dbc:	movweq	r2, #14
   26dc0:	str	r2, [r0, #160]	; 0xa0
   26dc4:	addeq	r3, r3, #1
   26dc8:	mov	r0, r3
   26dcc:	bx	lr

00026dd0 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   26dd0:	ldrb	r1, [r2, r3]
   26dd4:	ldr	r2, [pc, #28]	; 26df8 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   26dd8:	add	r2, pc, r2
   26ddc:	ldrb	r1, [r2, r1]
   26de0:	mov	r2, #4
   26de4:	cmp	r1, #1
   26de8:	movweq	r2, #15
   26dec:	str	r2, [r0, #160]	; 0xa0
   26df0:	mov	r0, r3
   26df4:	bx	lr
   26df8:	andeq	r6, sp, sl, ror #22

00026dfc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   26dfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26e00:	add	fp, sp, #24
   26e04:	sub	sp, sp, #16
   26e08:	mov	r8, r0
   26e0c:	str	r3, [sp, #12]
   26e10:	ldr	r0, [r0, #192]	; 0xc0
   26e14:	add	r0, r0, r3
   26e18:	ldr	ip, [r1, #24]
   26e1c:	str	r0, [r1, #24]
   26e20:	ldr	r5, [fp, #8]
   26e24:	ldr	r0, [sp, #12]
   26e28:	cmp	r0, r5
   26e2c:	bcs	26e78 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x7c>
   26e30:	ldr	r4, [sp, #12]
   26e34:	ldr	r6, [pc, #292]	; 26f60 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x164>
   26e38:	add	r6, pc, r6
   26e3c:	ldrb	r3, [r2, r0]
   26e40:	ldrb	r7, [r6, r3]
   26e44:	cmp	r7, #2
   26e48:	cmpne	r3, #47	; 0x2f
   26e4c:	beq	26e84 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x88>
   26e50:	cmp	r3, #62	; 0x3e
   26e54:	beq	26ee0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xe4>
   26e58:	cmp	r7, #1
   26e5c:	bne	26ec8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xcc>
   26e60:	add	r4, r0, #1
   26e64:	cmp	r4, r5
   26e68:	mov	r0, r4
   26e6c:	bcc	26e3c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x40>
   26e70:	str	r4, [sp, #12]
   26e74:	mov	r0, r4
   26e78:	str	ip, [r1, #24]
   26e7c:	sub	sp, fp, #24
   26e80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26e84:	str	r4, [sp, #12]
   26e88:	mov	r0, #32
   26e8c:	str	ip, [sp]
   26e90:	str	r0, [sp, #4]
   26e94:	add	r3, sp, #12
   26e98:	mov	r0, r8
   26e9c:	bl	1202c <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26ea0:	cmp	r0, #0
   26ea4:	beq	26f54 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x158>
   26ea8:	mov	r0, #0
   26eac:	str	r0, [r8, #60]	; 0x3c
   26eb0:	mov	r0, #33	; 0x21
   26eb4:	str	r0, [r8, #160]	; 0xa0
   26eb8:	ldr	r0, [sp, #12]
   26ebc:	add	r0, r0, #1
   26ec0:	str	r0, [sp, #12]
   26ec4:	b	26f54 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x158>
   26ec8:	str	r4, [sp, #12]
   26ecc:	str	ip, [r1, #24]
   26ed0:	mov	r1, #4
   26ed4:	str	r1, [r8, #160]	; 0xa0
   26ed8:	sub	sp, fp, #24
   26edc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26ee0:	str	r4, [sp, #12]
   26ee4:	mov	r0, #32
   26ee8:	str	ip, [sp]
   26eec:	str	r0, [sp, #4]
   26ef0:	add	r3, sp, #12
   26ef4:	mov	r0, r8
   26ef8:	bl	1202c <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26efc:	cmp	r0, #0
   26f00:	beq	26f54 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x158>
   26f04:	ldr	r0, [sp, #12]
   26f08:	add	r1, r0, #1
   26f0c:	str	r1, [sp, #12]
   26f10:	ldr	r2, [r8, #64]	; 0x40
   26f14:	ldr	r0, [r8, #192]	; 0xc0
   26f18:	add	r0, r0, r1
   26f1c:	ldr	r3, [r2, #32]
   26f20:	sub	r0, r0, r3
   26f24:	str	r0, [r2, #36]	; 0x24
   26f28:	mov	r0, r8
   26f2c:	bl	114bc <myhtml_queue_add@plt>
   26f30:	cmp	r0, #0
   26f34:	movne	r0, #69	; 0x45
   26f38:	strne	r0, [r8, #160]	; 0xa0
   26f3c:	movne	r0, #0
   26f40:	subne	sp, fp, #24
   26f44:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   26f48:	mov	r0, #0
   26f4c:	str	r0, [r8, #160]	; 0xa0
   26f50:	str	r0, [r8, #60]	; 0x3c
   26f54:	ldr	r0, [sp, #12]
   26f58:	sub	sp, fp, #24
   26f5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26f60:	andeq	r6, sp, sl, lsl #22

00026f64 <myhtml_tokenizer_state_plaintext@@Base>:
   26f64:	push	{r4, r5, fp, lr}
   26f68:	add	fp, sp, #8
   26f6c:	mov	r2, r1
   26f70:	mov	r4, r0
   26f74:	ldr	r0, [r1, #48]	; 0x30
   26f78:	ldr	r5, [fp, #8]
   26f7c:	tst	r0, #128	; 0x80
   26f80:	ldreq	r0, [r2, #48]	; 0x30
   26f84:	orreq	r0, r0, #128	; 0x80
   26f88:	streq	r0, [r2, #48]	; 0x30
   26f8c:	ldr	r0, [r2, #48]	; 0x30
   26f90:	ldr	r1, [r2, #48]	; 0x30
   26f94:	and	r0, r0, #8
   26f98:	eor	r0, r1, r0
   26f9c:	str	r0, [r2, #48]	; 0x30
   26fa0:	ldr	r0, [r4, #192]	; 0xc0
   26fa4:	mov	r1, #1
   26fa8:	str	r1, [r2]
   26fac:	add	r1, r0, r3
   26fb0:	add	r0, r0, r5
   26fb4:	sub	r0, r0, r1
   26fb8:	str	r0, [r2, #36]	; 0x24
   26fbc:	str	r1, [r2, #24]
   26fc0:	str	r0, [r2, #28]
   26fc4:	mov	r0, #0
   26fc8:	str	r0, [r4, #160]	; 0xa0
   26fcc:	mov	r0, r4
   26fd0:	mov	r1, r5
   26fd4:	bl	114bc <myhtml_queue_add@plt>
   26fd8:	cmp	r0, #0
   26fdc:	movne	r0, #69	; 0x45
   26fe0:	strne	r0, [r4, #160]	; 0xa0
   26fe4:	movne	r5, #0
   26fe8:	mov	r0, r5
   26fec:	pop	{r4, r5, fp, pc}

00026ff0 <myhtml_tokenizer_state_cdata_section@@Base>:
   26ff0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26ff4:	add	fp, sp, #24
   26ff8:	mov	r4, r3
   26ffc:	mov	r7, r2
   27000:	mov	r8, r1
   27004:	mov	r5, r0
   27008:	ldr	r0, [r1, #48]	; 0x30
   2700c:	ldr	r6, [fp, #8]
   27010:	tst	r0, #256	; 0x100
   27014:	ldreq	r0, [r8, #48]	; 0x30
   27018:	orreq	r0, r0, #256	; 0x100
   2701c:	streq	r0, [r8, #48]	; 0x30
   27020:	cmp	r4, r6
   27024:	bcs	27090 <myhtml_tokenizer_state_cdata_section@@Base+0xa0>
   27028:	add	r0, r4, #1
   2702c:	mov	r4, r0
   27030:	add	r0, r7, r0
   27034:	ldrb	r1, [r0, #-1]
   27038:	cmp	r1, #62	; 0x3e
   2703c:	bne	27080 <myhtml_tokenizer_state_cdata_section@@Base+0x90>
   27040:	sub	r1, r4, #1
   27044:	cmp	r1, #1
   27048:	bhi	27068 <myhtml_tokenizer_state_cdata_section@@Base+0x78>
   2704c:	ldr	r0, [r5, #192]	; 0xc0
   27050:	add	r0, r4, r0
   27054:	sub	r1, r0, #3
   27058:	mov	r0, r5
   2705c:	mov	r2, #2
   27060:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   27064:	b	2706c <myhtml_tokenizer_state_cdata_section@@Base+0x7c>
   27068:	sub	r0, r0, #3
   2706c:	ldrb	r1, [r0]
   27070:	cmp	r1, #93	; 0x5d
   27074:	ldrbeq	r0, [r0, #1]
   27078:	cmpeq	r0, #93	; 0x5d
   2707c:	beq	27098 <myhtml_tokenizer_state_cdata_section@@Base+0xa8>
   27080:	add	r0, r4, #1
   27084:	cmp	r4, r6
   27088:	bcc	2702c <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   2708c:	sub	r4, r0, #1
   27090:	mov	r0, r4
   27094:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27098:	ldr	r1, [r8, #24]
   2709c:	ldr	r0, [r5, #192]	; 0xc0
   270a0:	sub	r1, r0, r1
   270a4:	add	r1, r1, r4
   270a8:	subs	r1, r1, #3
   270ac:	str	r1, [r8, #28]
   270b0:	bne	270c0 <myhtml_tokenizer_state_cdata_section@@Base+0xd0>
   270b4:	add	r0, r0, r4
   270b8:	str	r0, [r8, #24]
   270bc:	b	270f8 <myhtml_tokenizer_state_cdata_section@@Base+0x108>
   270c0:	ldr	r1, [r8, #32]
   270c4:	sub	r0, r0, r1
   270c8:	add	r0, r0, r4
   270cc:	str	r0, [r8, #36]	; 0x24
   270d0:	mov	r0, r5
   270d4:	mov	r1, r4
   270d8:	mov	r2, r8
   270dc:	bl	114bc <myhtml_queue_add@plt>
   270e0:	cmp	r0, #0
   270e4:	movne	r0, #69	; 0x45
   270e8:	strne	r0, [r5, #160]	; 0xa0
   270ec:	movne	r4, #0
   270f0:	movne	r0, r4
   270f4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   270f8:	mov	r0, #0
   270fc:	str	r0, [r5, #160]	; 0xa0
   27100:	mov	r0, r4
   27104:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027108 <myhtml_tokenizer_state_data@@Base>:
   27108:	push	{r4, r5, fp, lr}
   2710c:	add	fp, sp, #8
   27110:	ldr	ip, [fp, #8]
   27114:	cmp	r3, ip
   27118:	bcs	27194 <myhtml_tokenizer_state_data@@Base+0x8c>
   2711c:	ldr	lr, [pc, #152]	; 271bc <myhtml_tokenizer_state_data@@Base+0xb4>
   27120:	add	lr, pc, lr
   27124:	ldrb	r4, [r2, r3]
   27128:	cmp	r4, #0
   2712c:	beq	2713c <myhtml_tokenizer_state_data@@Base+0x34>
   27130:	cmp	r4, #60	; 0x3c
   27134:	bne	27154 <myhtml_tokenizer_state_data@@Base+0x4c>
   27138:	b	2719c <myhtml_tokenizer_state_data@@Base+0x94>
   2713c:	ldr	r5, [r1, #48]	; 0x30
   27140:	tst	r5, #2048	; 0x800
   27144:	bne	27154 <myhtml_tokenizer_state_data@@Base+0x4c>
   27148:	ldr	r4, [r1, #48]	; 0x30
   2714c:	orr	r4, r4, #2048	; 0x800
   27150:	b	27184 <myhtml_tokenizer_state_data@@Base+0x7c>
   27154:	ldr	r5, [r1, #48]	; 0x30
   27158:	tst	r5, #8
   2715c:	ldrbne	r4, [lr, r4]
   27160:	cmpne	r4, #2
   27164:	beq	27188 <myhtml_tokenizer_state_data@@Base+0x80>
   27168:	ldr	r4, [r1, #48]	; 0x30
   2716c:	ldr	r5, [r1, #48]	; 0x30
   27170:	and	r4, r4, #8
   27174:	eor	r4, r5, r4
   27178:	str	r4, [r1, #48]	; 0x30
   2717c:	ldr	r4, [r1, #48]	; 0x30
   27180:	orr	r4, r4, #512	; 0x200
   27184:	str	r4, [r1, #48]	; 0x30
   27188:	add	r3, r3, #1
   2718c:	cmp	r3, ip
   27190:	bcc	27124 <myhtml_tokenizer_state_data@@Base+0x1c>
   27194:	mov	r0, r3
   27198:	pop	{r4, r5, fp, pc}
   2719c:	ldr	r2, [r0, #192]	; 0xc0
   271a0:	add	r2, r2, r3
   271a4:	str	r2, [r1, #32]
   271a8:	mov	r1, #7
   271ac:	str	r1, [r0, #160]	; 0xa0
   271b0:	add	r3, r3, #1
   271b4:	mov	r0, r3
   271b8:	pop	{r4, r5, fp, pc}
   271bc:	andeq	r6, sp, r2, lsr #16

000271c0 <myhtml_tokenizer_state_tag_open@@Base>:
   271c0:	push	{r4, r5, fp, lr}
   271c4:	add	fp, sp, #8
   271c8:	sub	sp, sp, #8
   271cc:	mov	r4, r3
   271d0:	mov	r5, r0
   271d4:	ldrb	r0, [r2, r3]
   271d8:	ldr	r2, [pc, #272]	; 272f0 <myhtml_tokenizer_state_tag_open@@Base+0x130>
   271dc:	add	r2, pc, r2
   271e0:	ldrb	r2, [r2, r0]
   271e4:	cmp	r2, #1
   271e8:	bne	27224 <myhtml_tokenizer_state_tag_open@@Base+0x64>
   271ec:	ldr	r0, [r5, #192]	; 0xc0
   271f0:	mov	r2, #512	; 0x200
   271f4:	str	r2, [sp]
   271f8:	add	r0, r4, r0
   271fc:	sub	r3, r0, #1
   27200:	mov	r0, r5
   27204:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27208:	cmp	r0, #0
   2720c:	beq	272b0 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   27210:	ldr	r1, [r5, #192]	; 0xc0
   27214:	add	r1, r1, r4
   27218:	str	r1, [r0, #24]
   2721c:	mov	r0, #9
   27220:	b	272e0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   27224:	cmp	r0, #63	; 0x3f
   27228:	beq	27278 <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   2722c:	cmp	r0, #47	; 0x2f
   27230:	beq	272bc <myhtml_tokenizer_state_tag_open@@Base+0xfc>
   27234:	cmp	r0, #33	; 0x21
   27238:	bne	272c8 <myhtml_tokenizer_state_tag_open@@Base+0x108>
   2723c:	ldr	r0, [r5, #192]	; 0xc0
   27240:	mov	r2, #512	; 0x200
   27244:	str	r2, [sp]
   27248:	add	r0, r4, r0
   2724c:	sub	r3, r0, #1
   27250:	mov	r0, r5
   27254:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27258:	cmp	r0, #0
   2725c:	beq	272b0 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   27260:	ldr	r1, [r5, #192]	; 0xc0
   27264:	add	r4, r4, #1
   27268:	add	r1, r1, r4
   2726c:	str	r1, [r0, #24]
   27270:	mov	r0, #44	; 0x2c
   27274:	b	272e0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   27278:	ldr	r0, [r5, #192]	; 0xc0
   2727c:	mov	r2, #512	; 0x200
   27280:	str	r2, [sp]
   27284:	add	r0, r4, r0
   27288:	sub	r3, r0, #1
   2728c:	mov	r0, r5
   27290:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27294:	cmp	r0, #0
   27298:	beq	272b0 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   2729c:	ldr	r1, [r5, #192]	; 0xc0
   272a0:	add	r1, r1, r4
   272a4:	str	r1, [r0, #24]
   272a8:	mov	r0, #43	; 0x2b
   272ac:	b	272e0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   272b0:	mov	r4, #0
   272b4:	mov	r0, #69	; 0x45
   272b8:	b	272e0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   272bc:	add	r4, r4, #1
   272c0:	mov	r0, #8
   272c4:	b	272e0 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   272c8:	ldr	r0, [r1, #48]	; 0x30
   272cc:	ldr	r2, [r1, #48]	; 0x30
   272d0:	and	r0, r0, #8
   272d4:	eor	r0, r2, r0
   272d8:	str	r0, [r1, #48]	; 0x30
   272dc:	mov	r0, #0
   272e0:	str	r0, [r5, #160]	; 0xa0
   272e4:	mov	r0, r4
   272e8:	sub	sp, fp, #8
   272ec:	pop	{r4, r5, fp, pc}
   272f0:	andeq	r6, sp, r6, ror #14

000272f4 <myhtml_tokenizer_state_end_tag_open@@Base>:
   272f4:	push	{r4, r5, fp, lr}
   272f8:	add	fp, sp, #8
   272fc:	sub	sp, sp, #8
   27300:	mov	r4, r3
   27304:	mov	r5, r0
   27308:	ldrb	r0, [r2, r3]
   2730c:	ldr	r2, [pc, #176]	; 273c4 <myhtml_tokenizer_state_end_tag_open@@Base+0xd0>
   27310:	add	r2, pc, r2
   27314:	ldrb	r2, [r2, r0]
   27318:	cmp	r2, #1
   2731c:	bne	27360 <myhtml_tokenizer_state_end_tag_open@@Base+0x6c>
   27320:	ldr	r0, [r5, #192]	; 0xc0
   27324:	mov	r2, #512	; 0x200
   27328:	str	r2, [sp]
   2732c:	add	r0, r4, r0
   27330:	sub	r3, r0, #2
   27334:	mov	r0, r5
   27338:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2733c:	cmp	r0, #0
   27340:	beq	273ac <myhtml_tokenizer_state_end_tag_open@@Base+0xb8>
   27344:	ldr	r1, [r5, #192]	; 0xc0
   27348:	mov	r2, #1
   2734c:	str	r2, [r0, #48]	; 0x30
   27350:	add	r1, r1, r4
   27354:	str	r1, [r0, #24]
   27358:	mov	r0, #9
   2735c:	b	273b4 <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   27360:	cmp	r0, #62	; 0x3e
   27364:	bne	27374 <myhtml_tokenizer_state_end_tag_open@@Base+0x80>
   27368:	add	r4, r4, #1
   2736c:	mov	r0, #0
   27370:	b	273b4 <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   27374:	ldr	r0, [r5, #192]	; 0xc0
   27378:	mov	r2, #512	; 0x200
   2737c:	str	r2, [sp]
   27380:	add	r0, r4, r0
   27384:	sub	r3, r0, #2
   27388:	mov	r0, r5
   2738c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27390:	cmp	r0, #0
   27394:	beq	273ac <myhtml_tokenizer_state_end_tag_open@@Base+0xb8>
   27398:	ldr	r1, [r5, #192]	; 0xc0
   2739c:	add	r1, r1, r4
   273a0:	str	r1, [r0, #24]
   273a4:	mov	r0, #43	; 0x2b
   273a8:	b	273b4 <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   273ac:	mov	r4, #0
   273b0:	mov	r0, #69	; 0x45
   273b4:	str	r0, [r5, #160]	; 0xa0
   273b8:	mov	r0, r4
   273bc:	sub	sp, fp, #8
   273c0:	pop	{r4, r5, fp, pc}
   273c4:	andeq	r6, sp, r2, lsr r6

000273c8 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   273c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   273cc:	add	fp, sp, #24
   273d0:	mov	r5, r3
   273d4:	mov	r4, r1
   273d8:	mov	r6, r0
   273dc:	ldr	r0, [r0, #192]	; 0xc0
   273e0:	ldr	r7, [fp, #8]
   273e4:	add	r0, r0, r7
   273e8:	ldr	r1, [r1, #24]
   273ec:	add	r2, r1, #2
   273f0:	cmp	r2, r0
   273f4:	bhi	27430 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x68>
   273f8:	mov	r0, r6
   273fc:	mov	r2, #2
   27400:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   27404:	ldrb	r1, [r0]
   27408:	cmp	r1, #45	; 0x2d
   2740c:	ldrbeq	r0, [r0, #1]
   27410:	cmpeq	r0, #45	; 0x2d
   27414:	beq	274d8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x110>
   27418:	ldr	r0, [r6, #192]	; 0xc0
   2741c:	add	r0, r0, r7
   27420:	ldr	r1, [r4, #24]
   27424:	add	r2, r1, #7
   27428:	cmp	r2, r0
   2742c:	bls	27440 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x78>
   27430:	ldr	r0, [r6, #76]	; 0x4c
   27434:	str	r5, [r0, #4]
   27438:	mov	r0, r7
   2743c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27440:	mov	r8, #7
   27444:	mov	r0, r6
   27448:	mov	r2, #7
   2744c:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   27450:	mov	r7, r0
   27454:	ldr	r1, [pc, #280]	; 27574 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1ac>
   27458:	add	r1, pc, r1
   2745c:	mov	r2, #7
   27460:	bl	11714 <mycore_strncasecmp@plt>
   27464:	cmp	r0, #0
   27468:	beq	27500 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x138>
   2746c:	ldr	r1, [pc, #260]	; 27578 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b0>
   27470:	add	r1, pc, r1
   27474:	mov	r0, r7
   27478:	mov	r2, #7
   2747c:	bl	1232c <strncmp@plt>
   27480:	cmp	r0, #0
   27484:	bne	274c0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf8>
   27488:	ldr	r0, [r6, #68]	; 0x44
   2748c:	ldr	r0, [r0, #8]
   27490:	cmp	r0, #0
   27494:	ldrne	r1, [r0, #4]
   27498:	cmpne	r1, #0
   2749c:	beq	274c0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf8>
   274a0:	mov	r0, r6
   274a4:	bl	111b0 <myhtml_tree_wait_for_last_done_token@plt>
   274a8:	mov	r0, r6
   274ac:	bl	12104 <myhtml_tree_adjusted_current_node@plt>
   274b0:	cmp	r0, #0
   274b4:	ldrne	r0, [r0, #8]
   274b8:	cmpne	r0, #1
   274bc:	bne	27530 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x168>
   274c0:	mov	r0, #0
   274c4:	str	r0, [r4, #28]
   274c8:	mov	r0, #43	; 0x2b
   274cc:	str	r0, [r6, #160]	; 0xa0
   274d0:	mov	r0, r5
   274d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   274d8:	mov	r0, #45	; 0x2d
   274dc:	str	r0, [r6, #160]	; 0xa0
   274e0:	ldr	r0, [r6, #192]	; 0xc0
   274e4:	mov	r1, #0
   274e8:	add	r5, r5, #2
   274ec:	add	r0, r0, r5
   274f0:	str	r0, [r4, #24]
   274f4:	str	r1, [r4, #28]
   274f8:	mov	r0, r5
   274fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27500:	mov	r0, #51	; 0x33
   27504:	str	r0, [r6, #160]	; 0xa0
   27508:	ldr	r0, [r6, #76]	; 0x4c
   2750c:	ldr	r0, [r0, #12]
   27510:	str	r8, [r4, #28]
   27514:	mov	r1, #3
   27518:	str	r1, [r4]
   2751c:	ldr	r1, [r4, #24]
   27520:	add	r1, r1, #7
   27524:	sub	r5, r1, r0
   27528:	mov	r0, r5
   2752c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27530:	mov	r0, #67	; 0x43
   27534:	str	r0, [r6, #160]	; 0xa0
   27538:	ldr	r0, [r6, #76]	; 0x4c
   2753c:	ldr	r0, [r0, #12]
   27540:	mov	r1, #0
   27544:	str	r1, [r4, #28]
   27548:	mov	r1, #1
   2754c:	str	r1, [r4]
   27550:	ldr	r1, [r4, #24]
   27554:	add	r1, r1, #7
   27558:	str	r1, [r4, #24]
   2755c:	ldr	r2, [r4, #48]	; 0x30
   27560:	ldr	r3, [r4, #48]	; 0x30
   27564:	and	r2, r2, #8
   27568:	eor	r2, r3, r2
   2756c:	str	r2, [r4, #48]	; 0x30
   27570:	b	27524 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x15c>
   27574:	muleq	sp, r4, r5
   27578:	andeq	r6, sp, sl, asr #9

0002757c <myhtml_tokenizer_state_tag_name@@Base>:
   2757c:	push	{r4, r5, r6, r7, fp, lr}
   27580:	add	fp, sp, #16
   27584:	mov	r4, r3
   27588:	mov	r7, r0
   2758c:	ldr	r0, [fp, #8]
   27590:	cmp	r3, r0
   27594:	bcs	275d0 <myhtml_tokenizer_state_tag_name@@Base+0x54>
   27598:	mov	r6, r1
   2759c:	ldr	r1, [pc, #276]	; 276b8 <myhtml_tokenizer_state_tag_name@@Base+0x13c>
   275a0:	add	r1, pc, r1
   275a4:	ldrb	r3, [r2, r4]
   275a8:	ldrb	r5, [r1, r3]
   275ac:	cmp	r5, #2
   275b0:	beq	275d8 <myhtml_tokenizer_state_tag_name@@Base+0x5c>
   275b4:	cmp	r3, #62	; 0x3e
   275b8:	beq	27604 <myhtml_tokenizer_state_tag_name@@Base+0x88>
   275bc:	cmp	r3, #47	; 0x2f
   275c0:	beq	27680 <myhtml_tokenizer_state_tag_name@@Base+0x104>
   275c4:	add	r4, r4, #1
   275c8:	cmp	r4, r0
   275cc:	bcc	275a4 <myhtml_tokenizer_state_tag_name@@Base+0x28>
   275d0:	mov	r0, r4
   275d4:	pop	{r4, r5, r6, r7, fp, pc}
   275d8:	ldr	r0, [r6, #24]
   275dc:	ldr	r1, [r7, #192]	; 0xc0
   275e0:	sub	r0, r1, r0
   275e4:	add	r0, r0, r4
   275e8:	str	r0, [r6, #28]
   275ec:	mov	r0, r7
   275f0:	mov	r1, r6
   275f4:	mov	r3, r4
   275f8:	bl	11ffc <myhtml_check_tag_parser@plt>
   275fc:	mov	r0, #33	; 0x21
   27600:	b	276a8 <myhtml_tokenizer_state_tag_name@@Base+0x12c>
   27604:	ldr	r0, [r6, #24]
   27608:	ldr	r1, [r7, #192]	; 0xc0
   2760c:	sub	r0, r1, r0
   27610:	add	r0, r0, r4
   27614:	str	r0, [r6, #28]
   27618:	mov	r0, r7
   2761c:	mov	r1, r6
   27620:	mov	r3, r4
   27624:	bl	11ffc <myhtml_check_tag_parser@plt>
   27628:	mov	r0, r7
   2762c:	mov	r1, r6
   27630:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   27634:	ldr	r0, [r6, #32]
   27638:	ldr	r1, [r7, #192]	; 0xc0
   2763c:	sub	r0, r1, r0
   27640:	add	r0, r0, r4
   27644:	add	r0, r0, #1
   27648:	str	r0, [r6, #36]	; 0x24
   2764c:	add	r4, r4, #1
   27650:	mov	r0, r7
   27654:	mov	r1, r4
   27658:	mov	r2, r6
   2765c:	bl	114bc <myhtml_queue_add@plt>
   27660:	cmp	r0, #0
   27664:	movne	r0, #69	; 0x45
   27668:	strne	r0, [r7, #160]	; 0xa0
   2766c:	movne	r4, #0
   27670:	movne	r0, r4
   27674:	popne	{r4, r5, r6, r7, fp, pc}
   27678:	mov	r0, r4
   2767c:	pop	{r4, r5, r6, r7, fp, pc}
   27680:	ldr	r0, [r6, #24]
   27684:	ldr	r1, [r7, #192]	; 0xc0
   27688:	sub	r0, r1, r0
   2768c:	add	r0, r0, r4
   27690:	str	r0, [r6, #28]
   27694:	mov	r0, r7
   27698:	mov	r1, r6
   2769c:	mov	r3, r4
   276a0:	bl	11ffc <myhtml_check_tag_parser@plt>
   276a4:	mov	r0, #42	; 0x2a
   276a8:	str	r0, [r7, #160]	; 0xa0
   276ac:	add	r4, r4, #1
   276b0:	mov	r0, r4
   276b4:	pop	{r4, r5, r6, r7, fp, pc}
   276b8:	andeq	r6, sp, r2, lsr #7

000276bc <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   276bc:	push	{r4, r5, r6, sl, fp, lr}
   276c0:	add	fp, sp, #16
   276c4:	mov	r4, r3
   276c8:	mov	r6, r1
   276cc:	mov	r5, r0
   276d0:	ldrb	r1, [r2, r3]
   276d4:	mov	r0, #33	; 0x21
   276d8:	cmp	r1, #62	; 0x3e
   276dc:	bne	27730 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x74>
   276e0:	ldr	r0, [r6, #48]	; 0x30
   276e4:	orr	r0, r0, #2
   276e8:	str	r0, [r6, #48]	; 0x30
   276ec:	mov	r0, r5
   276f0:	mov	r1, r6
   276f4:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   276f8:	ldr	r0, [r5, #192]	; 0xc0
   276fc:	add	r4, r4, #1
   27700:	add	r0, r0, r4
   27704:	ldr	r1, [r6, #32]
   27708:	sub	r0, r0, r1
   2770c:	str	r0, [r6, #36]	; 0x24
   27710:	mov	r0, r5
   27714:	mov	r1, r4
   27718:	mov	r2, r6
   2771c:	bl	114bc <myhtml_queue_add@plt>
   27720:	cmp	r0, #0
   27724:	beq	27734 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x78>
   27728:	mov	r4, #0
   2772c:	mov	r0, #69	; 0x45
   27730:	str	r0, [r5, #160]	; 0xa0
   27734:	mov	r0, r4
   27738:	pop	{r4, r5, r6, sl, fp, pc}

0002773c <myhtml_tokenizer_state_before_attribute_name@@Base>:
   2773c:	push	{r4, r5, r6, r7, fp, lr}
   27740:	add	fp, sp, #16
   27744:	mov	r4, r3
   27748:	mov	r6, r1
   2774c:	mov	r7, r0
   27750:	ldrb	r0, [r2, r3]
   27754:	sub	r3, r0, #9
   27758:	ldr	r0, [fp, #8]
   2775c:	cmp	r3, #23
   27760:	bhi	277a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x6c>
   27764:	mov	r5, #1
   27768:	movw	r1, #27
   2776c:	movt	r1, #128	; 0x80
   27770:	tst	r1, r5, lsl r3
   27774:	beq	277a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x6c>
   27778:	cmp	r4, r0
   2777c:	bcs	277a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x6c>
   27780:	mov	r3, #1
   27784:	ldrb	r5, [r2, r4]
   27788:	sub	r5, r5, #9
   2778c:	cmp	r5, #23
   27790:	bhi	277a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x6c>
   27794:	tst	r1, r3, lsl r5
   27798:	beq	277a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x6c>
   2779c:	add	r4, r4, #1
   277a0:	cmp	r4, r0
   277a4:	bcc	27784 <myhtml_tokenizer_state_before_attribute_name@@Base+0x48>
   277a8:	cmp	r4, r0
   277ac:	bcs	27810 <myhtml_tokenizer_state_before_attribute_name@@Base+0xd4>
   277b0:	ldrb	r0, [r2, r4]
   277b4:	cmp	r0, #47	; 0x2f
   277b8:	beq	27818 <myhtml_tokenizer_state_before_attribute_name@@Base+0xdc>
   277bc:	cmp	r0, #62	; 0x3e
   277c0:	bne	27830 <myhtml_tokenizer_state_before_attribute_name@@Base+0xf4>
   277c4:	mov	r0, r7
   277c8:	mov	r1, r6
   277cc:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   277d0:	ldr	r0, [r7, #192]	; 0xc0
   277d4:	add	r4, r4, #1
   277d8:	add	r0, r0, r4
   277dc:	ldr	r1, [r6, #32]
   277e0:	sub	r0, r0, r1
   277e4:	str	r0, [r6, #36]	; 0x24
   277e8:	mov	r0, r7
   277ec:	mov	r1, r4
   277f0:	mov	r2, r6
   277f4:	bl	114bc <myhtml_queue_add@plt>
   277f8:	cmp	r0, #0
   277fc:	movne	r0, #69	; 0x45
   27800:	strne	r0, [r7, #160]	; 0xa0
   27804:	movne	r4, #0
   27808:	movne	r0, r4
   2780c:	popne	{r4, r5, r6, r7, fp, pc}
   27810:	mov	r0, r4
   27814:	pop	{r4, r5, r6, r7, fp, pc}
   27818:	ldr	r0, [r6, #48]	; 0x30
   2781c:	orr	r0, r0, #2
   27820:	str	r0, [r6, #48]	; 0x30
   27824:	add	r4, r4, #1
   27828:	mov	r0, r4
   2782c:	pop	{r4, r5, r6, r7, fp, pc}
   27830:	ldr	r0, [r7, #56]	; 0x38
   27834:	ldr	r1, [r6, #40]	; 0x28
   27838:	cmp	r1, #0
   2783c:	beq	27864 <myhtml_tokenizer_state_before_attribute_name@@Base+0x128>
   27840:	ldr	r1, [r6, #44]	; 0x2c
   27844:	str	r0, [r1]
   27848:	str	r1, [r0, #4]
   2784c:	str	r0, [r6, #44]	; 0x2c
   27850:	mov	r1, #0
   27854:	str	r1, [r0]
   27858:	ldr	r0, [r6, #44]	; 0x2c
   2785c:	str	r0, [r7, #56]	; 0x38
   27860:	b	27878 <myhtml_tokenizer_state_before_attribute_name@@Base+0x13c>
   27864:	str	r0, [r6, #40]	; 0x28
   27868:	str	r0, [r6, #44]	; 0x2c
   2786c:	mov	r1, #0
   27870:	str	r1, [r0]
   27874:	str	r1, [r0, #4]
   27878:	ldr	r0, [r7, #56]	; 0x38
   2787c:	ldr	r1, [r7, #192]	; 0xc0
   27880:	mov	r3, #0
   27884:	add	r1, r1, r4
   27888:	str	r1, [r0, #48]	; 0x30
   2788c:	str	r3, [r0, #52]	; 0x34
   27890:	str	r3, [r0, #56]	; 0x38
   27894:	str	r3, [r0, #60]	; 0x3c
   27898:	ldrb	r0, [r2, r4]
   2789c:	mov	r1, #34	; 0x22
   278a0:	str	r1, [r7, #160]	; 0xa0
   278a4:	cmp	r0, #61	; 0x3d
   278a8:	addeq	r4, r4, #1
   278ac:	mov	r0, r4
   278b0:	pop	{r4, r5, r6, r7, fp, pc}

000278b4 <myhtml_tokenizer_state_attribute_name@@Base>:
   278b4:	push	{r4, r5, r6, sl, fp, lr}
   278b8:	add	fp, sp, #16
   278bc:	mov	r4, r3
   278c0:	mov	r5, r0
   278c4:	ldr	r0, [fp, #8]
   278c8:	cmp	r3, r0
   278cc:	bcs	279d4 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   278d0:	mov	r6, r1
   278d4:	ldrb	r1, [r2, r4]
   278d8:	sub	r1, r1, #9
   278dc:	cmp	r1, #53	; 0x35
   278e0:	bhi	279c8 <myhtml_tokenizer_state_attribute_name@@Base+0x114>
   278e4:	add	r3, pc, #4
   278e8:	ldr	r1, [r3, r1, lsl #2]
   278ec:	add	pc, r3, r1
   278f0:	andeq	r0, r0, ip, ror #1
   278f4:	andeq	r0, r0, ip, ror #1
   278f8:	ldrdeq	r0, [r0], -r8
   278fc:	andeq	r0, r0, ip, ror #1
   27900:	andeq	r0, r0, ip, ror #1
   27904:	ldrdeq	r0, [r0], -r8
   27908:	ldrdeq	r0, [r0], -r8
   2790c:	ldrdeq	r0, [r0], -r8
   27910:	ldrdeq	r0, [r0], -r8
   27914:	ldrdeq	r0, [r0], -r8
   27918:	ldrdeq	r0, [r0], -r8
   2791c:	ldrdeq	r0, [r0], -r8
   27920:	ldrdeq	r0, [r0], -r8
   27924:	ldrdeq	r0, [r0], -r8
   27928:	ldrdeq	r0, [r0], -r8
   2792c:	ldrdeq	r0, [r0], -r8
   27930:	ldrdeq	r0, [r0], -r8
   27934:	ldrdeq	r0, [r0], -r8
   27938:	ldrdeq	r0, [r0], -r8
   2793c:	ldrdeq	r0, [r0], -r8
   27940:	ldrdeq	r0, [r0], -r8
   27944:	ldrdeq	r0, [r0], -r8
   27948:	ldrdeq	r0, [r0], -r8
   2794c:	andeq	r0, r0, ip, ror #1
   27950:	ldrdeq	r0, [r0], -r8
   27954:	ldrdeq	r0, [r0], -r8
   27958:	ldrdeq	r0, [r0], -r8
   2795c:	ldrdeq	r0, [r0], -r8
   27960:	ldrdeq	r0, [r0], -r8
   27964:	ldrdeq	r0, [r0], -r8
   27968:	ldrdeq	r0, [r0], -r8
   2796c:	ldrdeq	r0, [r0], -r8
   27970:	ldrdeq	r0, [r0], -r8
   27974:	ldrdeq	r0, [r0], -r8
   27978:	ldrdeq	r0, [r0], -r8
   2797c:	ldrdeq	r0, [r0], -r8
   27980:	ldrdeq	r0, [r0], -r8
   27984:	ldrdeq	r0, [r0], -r8
   27988:	andeq	r0, r0, r8, lsl r1
   2798c:	ldrdeq	r0, [r0], -r8
   27990:	ldrdeq	r0, [r0], -r8
   27994:	ldrdeq	r0, [r0], -r8
   27998:	ldrdeq	r0, [r0], -r8
   2799c:	ldrdeq	r0, [r0], -r8
   279a0:	ldrdeq	r0, [r0], -r8
   279a4:	ldrdeq	r0, [r0], -r8
   279a8:	ldrdeq	r0, [r0], -r8
   279ac:	ldrdeq	r0, [r0], -r8
   279b0:	ldrdeq	r0, [r0], -r8
   279b4:	ldrdeq	r0, [r0], -r8
   279b8:	ldrdeq	r0, [r0], -r8
   279bc:	ldrdeq	r0, [r0], -r8
   279c0:	andeq	r0, r0, r0, ror #2
   279c4:	andeq	r0, r0, r0, lsl #3
   279c8:	add	r4, r4, #1
   279cc:	cmp	r4, r0
   279d0:	bcc	278d4 <myhtml_tokenizer_state_attribute_name@@Base+0x20>
   279d4:	mov	r0, r4
   279d8:	pop	{r4, r5, r6, sl, fp, pc}
   279dc:	ldr	r0, [r5, #56]	; 0x38
   279e0:	ldr	r1, [r5, #192]	; 0xc0
   279e4:	ldr	r2, [r0, #48]	; 0x30
   279e8:	sub	r1, r1, r2
   279ec:	add	r1, r1, r4
   279f0:	str	r1, [r0, #52]	; 0x34
   279f4:	mov	r0, #35	; 0x23
   279f8:	str	r0, [r5, #160]	; 0xa0
   279fc:	add	r4, r4, #1
   27a00:	mov	r0, r4
   27a04:	pop	{r4, r5, r6, sl, fp, pc}
   27a08:	ldr	r0, [r5, #56]	; 0x38
   27a0c:	ldr	r1, [r5, #192]	; 0xc0
   27a10:	ldr	r2, [r0, #48]	; 0x30
   27a14:	sub	r1, r1, r2
   27a18:	add	r1, r1, r4
   27a1c:	str	r1, [r0, #52]	; 0x34
   27a20:	ldr	r0, [r6, #48]	; 0x30
   27a24:	orr	r0, r0, #2
   27a28:	str	r0, [r6, #48]	; 0x30
   27a2c:	mov	r0, #33	; 0x21
   27a30:	str	r0, [r5, #160]	; 0xa0
   27a34:	ldr	r0, [r5, #8]
   27a38:	ldr	r1, [r0, #16]
   27a3c:	bl	11d20 <myhtml_token_attr_create@plt>
   27a40:	str	r0, [r5, #56]	; 0x38
   27a44:	cmp	r0, #0
   27a48:	bne	279fc <myhtml_tokenizer_state_attribute_name@@Base+0x148>
   27a4c:	b	27ae0 <myhtml_tokenizer_state_attribute_name@@Base+0x22c>
   27a50:	ldr	r0, [r5, #56]	; 0x38
   27a54:	ldr	r1, [r5, #192]	; 0xc0
   27a58:	ldr	r2, [r0, #48]	; 0x30
   27a5c:	sub	r1, r1, r2
   27a60:	add	r1, r1, r4
   27a64:	str	r1, [r0, #52]	; 0x34
   27a68:	mov	r0, #36	; 0x24
   27a6c:	b	279f8 <myhtml_tokenizer_state_attribute_name@@Base+0x144>
   27a70:	ldr	r0, [r5, #56]	; 0x38
   27a74:	ldr	r1, [r5, #192]	; 0xc0
   27a78:	ldr	r2, [r0, #48]	; 0x30
   27a7c:	sub	r1, r1, r2
   27a80:	add	r1, r1, r4
   27a84:	str	r1, [r0, #52]	; 0x34
   27a88:	mov	r0, r5
   27a8c:	mov	r1, r6
   27a90:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   27a94:	ldr	r0, [r6, #32]
   27a98:	ldr	r1, [r5, #192]	; 0xc0
   27a9c:	sub	r0, r1, r0
   27aa0:	add	r0, r0, r4
   27aa4:	add	r0, r0, #1
   27aa8:	str	r0, [r6, #36]	; 0x24
   27aac:	add	r4, r4, #1
   27ab0:	mov	r0, r5
   27ab4:	mov	r1, r4
   27ab8:	mov	r2, r6
   27abc:	bl	114bc <myhtml_queue_add@plt>
   27ac0:	cmp	r0, #0
   27ac4:	bne	27ae0 <myhtml_tokenizer_state_attribute_name@@Base+0x22c>
   27ac8:	ldr	r0, [r5, #8]
   27acc:	ldr	r1, [r0, #16]
   27ad0:	bl	11d20 <myhtml_token_attr_create@plt>
   27ad4:	str	r0, [r5, #56]	; 0x38
   27ad8:	cmp	r0, #0
   27adc:	bne	279d4 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   27ae0:	mov	r0, #69	; 0x45
   27ae4:	str	r0, [r5, #160]	; 0xa0
   27ae8:	mov	r4, #0
   27aec:	mov	r0, r4
   27af0:	pop	{r4, r5, r6, sl, fp, pc}

00027af4 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   27af4:	push	{r4, r5, r6, sl, fp, lr}
   27af8:	add	fp, sp, #16
   27afc:	mov	r4, r3
   27b00:	mov	r5, r0
   27b04:	ldr	r0, [fp, #8]
   27b08:	cmp	r3, r0
   27b0c:	bcs	27c14 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   27b10:	mov	r6, r1
   27b14:	ldrb	r1, [r2, r4]
   27b18:	sub	r1, r1, #9
   27b1c:	cmp	r1, #53	; 0x35
   27b20:	bhi	27c1c <myhtml_tokenizer_state_after_attribute_name@@Base+0x128>
   27b24:	add	r3, pc, #4
   27b28:	ldr	r1, [r3, r1, lsl #2]
   27b2c:	add	pc, r3, r1
   27b30:	ldrdeq	r0, [r0], -r8
   27b34:	ldrdeq	r0, [r0], -r8
   27b38:	andeq	r0, r0, ip, ror #1
   27b3c:	ldrdeq	r0, [r0], -r8
   27b40:	ldrdeq	r0, [r0], -r8
   27b44:	andeq	r0, r0, ip, ror #1
   27b48:	andeq	r0, r0, ip, ror #1
   27b4c:	andeq	r0, r0, ip, ror #1
   27b50:	andeq	r0, r0, ip, ror #1
   27b54:	andeq	r0, r0, ip, ror #1
   27b58:	andeq	r0, r0, ip, ror #1
   27b5c:	andeq	r0, r0, ip, ror #1
   27b60:	andeq	r0, r0, ip, ror #1
   27b64:	andeq	r0, r0, ip, ror #1
   27b68:	andeq	r0, r0, ip, ror #1
   27b6c:	andeq	r0, r0, ip, ror #1
   27b70:	andeq	r0, r0, ip, ror #1
   27b74:	andeq	r0, r0, ip, ror #1
   27b78:	andeq	r0, r0, ip, ror #1
   27b7c:	andeq	r0, r0, ip, ror #1
   27b80:	andeq	r0, r0, ip, ror #1
   27b84:	andeq	r0, r0, ip, ror #1
   27b88:	andeq	r0, r0, ip, ror #1
   27b8c:	ldrdeq	r0, [r0], -r8
   27b90:	andeq	r0, r0, ip, ror #1
   27b94:	andeq	r0, r0, ip, ror #1
   27b98:	andeq	r0, r0, ip, ror #1
   27b9c:	andeq	r0, r0, ip, ror #1
   27ba0:	andeq	r0, r0, ip, ror #1
   27ba4:	andeq	r0, r0, ip, ror #1
   27ba8:	andeq	r0, r0, ip, ror #1
   27bac:	andeq	r0, r0, ip, ror #1
   27bb0:	andeq	r0, r0, ip, ror #1
   27bb4:	andeq	r0, r0, ip, ror #1
   27bb8:	andeq	r0, r0, ip, ror #1
   27bbc:	andeq	r0, r0, ip, ror #1
   27bc0:	andeq	r0, r0, ip, ror #1
   27bc4:	andeq	r0, r0, ip, ror #1
   27bc8:	andeq	r0, r0, ip, ror #1
   27bcc:	andeq	r0, r0, ip, ror #1
   27bd0:	andeq	r0, r0, ip, ror #1
   27bd4:	andeq	r0, r0, ip, ror #1
   27bd8:	andeq	r0, r0, ip, ror #1
   27bdc:	andeq	r0, r0, ip, ror #1
   27be0:	andeq	r0, r0, ip, ror #1
   27be4:	andeq	r0, r0, ip, ror #1
   27be8:	andeq	r0, r0, ip, ror #1
   27bec:	andeq	r0, r0, ip, ror #1
   27bf0:	andeq	r0, r0, ip, ror #1
   27bf4:	andeq	r0, r0, ip, ror #1
   27bf8:	andeq	r0, r0, ip, ror #1
   27bfc:	andeq	r0, r0, ip, ror #1
   27c00:	andeq	r0, r0, r4, lsr r1
   27c04:	andeq	r0, r0, r8, asr #2
   27c08:	add	r4, r4, #1
   27c0c:	cmp	r4, r0
   27c10:	bcc	27b14 <myhtml_tokenizer_state_after_attribute_name@@Base+0x20>
   27c14:	mov	r0, r4
   27c18:	pop	{r4, r5, r6, sl, fp, pc}
   27c1c:	ldr	r0, [r5, #8]
   27c20:	ldr	r1, [r0, #16]
   27c24:	bl	11d20 <myhtml_token_attr_create@plt>
   27c28:	str	r0, [r5, #56]	; 0x38
   27c2c:	cmp	r0, #0
   27c30:	beq	27cd0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1dc>
   27c34:	ldr	r1, [r6, #40]	; 0x28
   27c38:	cmp	r1, #0
   27c3c:	beq	27ce4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   27c40:	ldr	r1, [r6, #44]	; 0x2c
   27c44:	str	r0, [r1]
   27c48:	str	r1, [r0, #4]
   27c4c:	str	r0, [r6, #44]	; 0x2c
   27c50:	mov	r1, #0
   27c54:	str	r1, [r0]
   27c58:	ldr	r0, [r6, #44]	; 0x2c
   27c5c:	str	r0, [r5, #56]	; 0x38
   27c60:	b	27cfc <myhtml_tokenizer_state_after_attribute_name@@Base+0x208>
   27c64:	mov	r0, #36	; 0x24
   27c68:	str	r0, [r5, #160]	; 0xa0
   27c6c:	add	r4, r4, #1
   27c70:	mov	r0, r4
   27c74:	pop	{r4, r5, r6, sl, fp, pc}
   27c78:	mov	r0, r5
   27c7c:	mov	r1, r6
   27c80:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   27c84:	ldr	r0, [r6, #32]
   27c88:	ldr	r1, [r5, #192]	; 0xc0
   27c8c:	sub	r0, r1, r0
   27c90:	add	r0, r0, r4
   27c94:	add	r0, r0, #1
   27c98:	str	r0, [r6, #36]	; 0x24
   27c9c:	add	r4, r4, #1
   27ca0:	mov	r0, r5
   27ca4:	mov	r1, r4
   27ca8:	mov	r2, r6
   27cac:	bl	114bc <myhtml_queue_add@plt>
   27cb0:	cmp	r0, #0
   27cb4:	bne	27cd0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1dc>
   27cb8:	ldr	r0, [r5, #8]
   27cbc:	ldr	r1, [r0, #16]
   27cc0:	bl	11d20 <myhtml_token_attr_create@plt>
   27cc4:	str	r0, [r5, #56]	; 0x38
   27cc8:	cmp	r0, #0
   27ccc:	bne	27c14 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   27cd0:	mov	r0, #69	; 0x45
   27cd4:	str	r0, [r5, #160]	; 0xa0
   27cd8:	mov	r4, #0
   27cdc:	mov	r0, r4
   27ce0:	pop	{r4, r5, r6, sl, fp, pc}
   27ce4:	str	r0, [r6, #40]	; 0x28
   27ce8:	str	r0, [r6, #44]	; 0x2c
   27cec:	str	r0, [r5, #56]	; 0x38
   27cf0:	mov	r1, #0
   27cf4:	str	r1, [r0]
   27cf8:	str	r1, [r0, #4]
   27cfc:	ldr	r0, [r5, #56]	; 0x38
   27d00:	ldr	r1, [r5, #192]	; 0xc0
   27d04:	mov	r2, #0
   27d08:	add	r1, r1, r4
   27d0c:	str	r1, [r0, #48]	; 0x30
   27d10:	str	r2, [r0, #52]	; 0x34
   27d14:	str	r2, [r0, #56]	; 0x38
   27d18:	str	r2, [r0, #60]	; 0x3c
   27d1c:	mov	r0, #34	; 0x22
   27d20:	str	r0, [r5, #160]	; 0xa0
   27d24:	mov	r0, r4
   27d28:	pop	{r4, r5, r6, sl, fp, pc}

00027d2c <myhtml_tokenizer_state_before_attribute_value@@Base>:
   27d2c:	push	{r4, r5, r6, sl, fp, lr}
   27d30:	add	fp, sp, #16
   27d34:	mov	r4, r3
   27d38:	mov	r5, r0
   27d3c:	ldr	r0, [fp, #8]
   27d40:	cmp	r3, r0
   27d44:	bcs	27e4c <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   27d48:	mov	r6, r1
   27d4c:	ldrb	r1, [r2, r4]
   27d50:	sub	r1, r1, #9
   27d54:	cmp	r1, #53	; 0x35
   27d58:	bhi	27e54 <myhtml_tokenizer_state_before_attribute_value@@Base+0x128>
   27d5c:	add	r3, pc, #4
   27d60:	ldr	r1, [r3, r1, lsl #2]
   27d64:	add	pc, r3, r1
   27d68:	ldrdeq	r0, [r0], -r8
   27d6c:	ldrdeq	r0, [r0], -r8
   27d70:	andeq	r0, r0, ip, ror #1
   27d74:	ldrdeq	r0, [r0], -r8
   27d78:	ldrdeq	r0, [r0], -r8
   27d7c:	andeq	r0, r0, ip, ror #1
   27d80:	andeq	r0, r0, ip, ror #1
   27d84:	andeq	r0, r0, ip, ror #1
   27d88:	andeq	r0, r0, ip, ror #1
   27d8c:	andeq	r0, r0, ip, ror #1
   27d90:	andeq	r0, r0, ip, ror #1
   27d94:	andeq	r0, r0, ip, ror #1
   27d98:	andeq	r0, r0, ip, ror #1
   27d9c:	andeq	r0, r0, ip, ror #1
   27da0:	andeq	r0, r0, ip, ror #1
   27da4:	andeq	r0, r0, ip, ror #1
   27da8:	andeq	r0, r0, ip, ror #1
   27dac:	andeq	r0, r0, ip, ror #1
   27db0:	andeq	r0, r0, ip, ror #1
   27db4:	andeq	r0, r0, ip, ror #1
   27db8:	andeq	r0, r0, ip, ror #1
   27dbc:	andeq	r0, r0, ip, ror #1
   27dc0:	andeq	r0, r0, ip, ror #1
   27dc4:	ldrdeq	r0, [r0], -r8
   27dc8:	andeq	r0, r0, ip, ror #1
   27dcc:	strdeq	r0, [r0], -r4
   27dd0:	andeq	r0, r0, ip, ror #1
   27dd4:	andeq	r0, r0, ip, ror #1
   27dd8:	andeq	r0, r0, ip, ror #1
   27ddc:	andeq	r0, r0, ip, ror #1
   27de0:	andeq	r0, r0, r0, lsl #2
   27de4:	andeq	r0, r0, ip, ror #1
   27de8:	andeq	r0, r0, ip, ror #1
   27dec:	andeq	r0, r0, ip, ror #1
   27df0:	andeq	r0, r0, ip, ror #1
   27df4:	andeq	r0, r0, ip, ror #1
   27df8:	andeq	r0, r0, ip, ror #1
   27dfc:	andeq	r0, r0, ip, ror #1
   27e00:	andeq	r0, r0, ip, ror #1
   27e04:	andeq	r0, r0, ip, ror #1
   27e08:	andeq	r0, r0, ip, ror #1
   27e0c:	andeq	r0, r0, ip, ror #1
   27e10:	andeq	r0, r0, ip, ror #1
   27e14:	andeq	r0, r0, ip, ror #1
   27e18:	andeq	r0, r0, ip, ror #1
   27e1c:	andeq	r0, r0, ip, ror #1
   27e20:	andeq	r0, r0, ip, ror #1
   27e24:	andeq	r0, r0, ip, ror #1
   27e28:	andeq	r0, r0, ip, ror #1
   27e2c:	andeq	r0, r0, ip, ror #1
   27e30:	andeq	r0, r0, ip, ror #1
   27e34:	andeq	r0, r0, ip, ror #1
   27e38:	andeq	r0, r0, ip, ror #1
   27e3c:	andeq	r0, r0, r4, lsr #2
   27e40:	add	r4, r4, #1
   27e44:	cmp	r4, r0
   27e48:	bcc	27d4c <myhtml_tokenizer_state_before_attribute_value@@Base+0x20>
   27e4c:	mov	r0, r4
   27e50:	pop	{r4, r5, r6, sl, fp, pc}
   27e54:	mov	r0, #39	; 0x27
   27e58:	b	27e70 <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   27e5c:	add	r4, r4, #1
   27e60:	mov	r0, #37	; 0x25
   27e64:	b	27e70 <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   27e68:	add	r4, r4, #1
   27e6c:	mov	r0, #38	; 0x26
   27e70:	str	r0, [r5, #160]	; 0xa0
   27e74:	ldr	r0, [r5, #56]	; 0x38
   27e78:	ldr	r1, [r5, #192]	; 0xc0
   27e7c:	add	r1, r1, r4
   27e80:	str	r1, [r0, #56]	; 0x38
   27e84:	mov	r0, r4
   27e88:	pop	{r4, r5, r6, sl, fp, pc}
   27e8c:	mov	r0, r5
   27e90:	mov	r1, r6
   27e94:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   27e98:	ldr	r0, [r6, #32]
   27e9c:	ldr	r1, [r5, #192]	; 0xc0
   27ea0:	sub	r0, r1, r0
   27ea4:	add	r0, r0, r4
   27ea8:	add	r0, r0, #1
   27eac:	str	r0, [r6, #36]	; 0x24
   27eb0:	add	r4, r4, #1
   27eb4:	mov	r0, r5
   27eb8:	mov	r1, r4
   27ebc:	mov	r2, r6
   27ec0:	bl	114bc <myhtml_queue_add@plt>
   27ec4:	cmp	r0, #0
   27ec8:	bne	27ee4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1b8>
   27ecc:	ldr	r0, [r5, #8]
   27ed0:	ldr	r1, [r0, #16]
   27ed4:	bl	11d20 <myhtml_token_attr_create@plt>
   27ed8:	str	r0, [r5, #56]	; 0x38
   27edc:	cmp	r0, #0
   27ee0:	bne	27e4c <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   27ee4:	mov	r0, #69	; 0x45
   27ee8:	str	r0, [r5, #160]	; 0xa0
   27eec:	mov	r4, #0
   27ef0:	mov	r0, r4
   27ef4:	pop	{r4, r5, r6, sl, fp, pc}

00027ef8 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   27ef8:	push	{r4, r5, fp, lr}
   27efc:	add	fp, sp, #8
   27f00:	mov	r4, r3
   27f04:	mov	r5, r0
   27f08:	ldr	r0, [fp, #8]
   27f0c:	cmp	r3, r0
   27f10:	bcs	27f2c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x34>
   27f14:	ldrb	r1, [r2, r4]
   27f18:	cmp	r1, #34	; 0x22
   27f1c:	beq	27f34 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x3c>
   27f20:	add	r4, r4, #1
   27f24:	cmp	r4, r0
   27f28:	bcc	27f14 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x1c>
   27f2c:	mov	r0, r4
   27f30:	pop	{r4, r5, fp, pc}
   27f34:	ldr	r0, [r5, #56]	; 0x38
   27f38:	ldr	r1, [r5, #192]	; 0xc0
   27f3c:	ldr	r2, [r0, #56]	; 0x38
   27f40:	sub	r1, r1, r2
   27f44:	add	r1, r1, r4
   27f48:	str	r1, [r0, #60]	; 0x3c
   27f4c:	ldr	r0, [r5, #8]
   27f50:	ldr	r1, [r0, #16]
   27f54:	bl	11d20 <myhtml_token_attr_create@plt>
   27f58:	str	r0, [r5, #56]	; 0x38
   27f5c:	cmp	r0, #0
   27f60:	movne	r0, #41	; 0x29
   27f64:	strne	r0, [r5, #160]	; 0xa0
   27f68:	addne	r4, r4, #1
   27f6c:	movne	r0, r4
   27f70:	popne	{r4, r5, fp, pc}
   27f74:	mov	r0, #69	; 0x45
   27f78:	str	r0, [r5, #160]	; 0xa0
   27f7c:	mov	r4, #0
   27f80:	mov	r0, r4
   27f84:	pop	{r4, r5, fp, pc}

00027f88 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   27f88:	push	{r4, r5, fp, lr}
   27f8c:	add	fp, sp, #8
   27f90:	mov	r4, r3
   27f94:	mov	r5, r0
   27f98:	ldr	r0, [fp, #8]
   27f9c:	cmp	r3, r0
   27fa0:	bcs	27fbc <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x34>
   27fa4:	ldrb	r1, [r2, r4]
   27fa8:	cmp	r1, #39	; 0x27
   27fac:	beq	27fc4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x3c>
   27fb0:	add	r4, r4, #1
   27fb4:	cmp	r4, r0
   27fb8:	bcc	27fa4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x1c>
   27fbc:	mov	r0, r4
   27fc0:	pop	{r4, r5, fp, pc}
   27fc4:	ldr	r0, [r5, #56]	; 0x38
   27fc8:	ldr	r1, [r5, #192]	; 0xc0
   27fcc:	ldr	r2, [r0, #56]	; 0x38
   27fd0:	sub	r1, r1, r2
   27fd4:	add	r1, r1, r4
   27fd8:	str	r1, [r0, #60]	; 0x3c
   27fdc:	ldr	r0, [r5, #8]
   27fe0:	ldr	r1, [r0, #16]
   27fe4:	bl	11d20 <myhtml_token_attr_create@plt>
   27fe8:	str	r0, [r5, #56]	; 0x38
   27fec:	cmp	r0, #0
   27ff0:	movne	r0, #41	; 0x29
   27ff4:	strne	r0, [r5, #160]	; 0xa0
   27ff8:	addne	r4, r4, #1
   27ffc:	movne	r0, r4
   28000:	popne	{r4, r5, fp, pc}
   28004:	mov	r0, #69	; 0x45
   28008:	str	r0, [r5, #160]	; 0xa0
   2800c:	mov	r4, #0
   28010:	mov	r0, r4
   28014:	pop	{r4, r5, fp, pc}

00028018 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   28018:	push	{r4, r5, r6, sl, fp, lr}
   2801c:	add	fp, sp, #16
   28020:	mov	r4, r3
   28024:	mov	r5, r0
   28028:	ldr	r0, [fp, #8]
   2802c:	cmp	r3, r0
   28030:	bcs	28138 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   28034:	mov	r6, r1
   28038:	ldrb	r1, [r2, r4]
   2803c:	sub	r1, r1, #9
   28040:	cmp	r1, #53	; 0x35
   28044:	bhi	2812c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x114>
   28048:	add	r3, pc, #4
   2804c:	ldr	r1, [r3, r1, lsl #2]
   28050:	add	pc, r3, r1
   28054:	andeq	r0, r0, ip, ror #1
   28058:	andeq	r0, r0, ip, ror #1
   2805c:	ldrdeq	r0, [r0], -r8
   28060:	andeq	r0, r0, ip, ror #1
   28064:	andeq	r0, r0, ip, ror #1
   28068:	ldrdeq	r0, [r0], -r8
   2806c:	ldrdeq	r0, [r0], -r8
   28070:	ldrdeq	r0, [r0], -r8
   28074:	ldrdeq	r0, [r0], -r8
   28078:	ldrdeq	r0, [r0], -r8
   2807c:	ldrdeq	r0, [r0], -r8
   28080:	ldrdeq	r0, [r0], -r8
   28084:	ldrdeq	r0, [r0], -r8
   28088:	ldrdeq	r0, [r0], -r8
   2808c:	ldrdeq	r0, [r0], -r8
   28090:	ldrdeq	r0, [r0], -r8
   28094:	ldrdeq	r0, [r0], -r8
   28098:	ldrdeq	r0, [r0], -r8
   2809c:	ldrdeq	r0, [r0], -r8
   280a0:	ldrdeq	r0, [r0], -r8
   280a4:	ldrdeq	r0, [r0], -r8
   280a8:	ldrdeq	r0, [r0], -r8
   280ac:	ldrdeq	r0, [r0], -r8
   280b0:	andeq	r0, r0, ip, ror #1
   280b4:	ldrdeq	r0, [r0], -r8
   280b8:	ldrdeq	r0, [r0], -r8
   280bc:	ldrdeq	r0, [r0], -r8
   280c0:	ldrdeq	r0, [r0], -r8
   280c4:	ldrdeq	r0, [r0], -r8
   280c8:	ldrdeq	r0, [r0], -r8
   280cc:	ldrdeq	r0, [r0], -r8
   280d0:	ldrdeq	r0, [r0], -r8
   280d4:	ldrdeq	r0, [r0], -r8
   280d8:	ldrdeq	r0, [r0], -r8
   280dc:	ldrdeq	r0, [r0], -r8
   280e0:	ldrdeq	r0, [r0], -r8
   280e4:	ldrdeq	r0, [r0], -r8
   280e8:	ldrdeq	r0, [r0], -r8
   280ec:	ldrdeq	r0, [r0], -r8
   280f0:	ldrdeq	r0, [r0], -r8
   280f4:	ldrdeq	r0, [r0], -r8
   280f8:	ldrdeq	r0, [r0], -r8
   280fc:	ldrdeq	r0, [r0], -r8
   28100:	ldrdeq	r0, [r0], -r8
   28104:	ldrdeq	r0, [r0], -r8
   28108:	ldrdeq	r0, [r0], -r8
   2810c:	ldrdeq	r0, [r0], -r8
   28110:	ldrdeq	r0, [r0], -r8
   28114:	ldrdeq	r0, [r0], -r8
   28118:	ldrdeq	r0, [r0], -r8
   2811c:	ldrdeq	r0, [r0], -r8
   28120:	ldrdeq	r0, [r0], -r8
   28124:	ldrdeq	r0, [r0], -r8
   28128:	andeq	r0, r0, r0, lsr r1
   2812c:	add	r4, r4, #1
   28130:	cmp	r4, r0
   28134:	bcc	28038 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20>
   28138:	mov	r0, r4
   2813c:	pop	{r4, r5, r6, sl, fp, pc}
   28140:	mov	r0, #33	; 0x21
   28144:	str	r0, [r5, #160]	; 0xa0
   28148:	ldr	r0, [r5, #56]	; 0x38
   2814c:	ldr	r1, [r5, #192]	; 0xc0
   28150:	ldr	r2, [r0, #56]	; 0x38
   28154:	sub	r1, r1, r2
   28158:	add	r1, r1, r4
   2815c:	str	r1, [r0, #60]	; 0x3c
   28160:	ldr	r0, [r5, #8]
   28164:	ldr	r1, [r0, #16]
   28168:	bl	11d20 <myhtml_token_attr_create@plt>
   2816c:	str	r0, [r5, #56]	; 0x38
   28170:	cmp	r0, #0
   28174:	addne	r4, r4, #1
   28178:	movne	r0, r4
   2817c:	popne	{r4, r5, r6, sl, fp, pc}
   28180:	b	281f4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1dc>
   28184:	ldr	r0, [r5, #56]	; 0x38
   28188:	ldr	r1, [r5, #192]	; 0xc0
   2818c:	ldr	r2, [r0, #56]	; 0x38
   28190:	sub	r1, r1, r2
   28194:	add	r1, r1, r4
   28198:	str	r1, [r0, #60]	; 0x3c
   2819c:	mov	r0, r5
   281a0:	mov	r1, r6
   281a4:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   281a8:	ldr	r0, [r6, #32]
   281ac:	ldr	r1, [r5, #192]	; 0xc0
   281b0:	sub	r0, r1, r0
   281b4:	add	r0, r0, r4
   281b8:	add	r0, r0, #1
   281bc:	str	r0, [r6, #36]	; 0x24
   281c0:	add	r4, r4, #1
   281c4:	mov	r0, r5
   281c8:	mov	r1, r4
   281cc:	mov	r2, r6
   281d0:	bl	114bc <myhtml_queue_add@plt>
   281d4:	cmp	r0, #0
   281d8:	bne	281f4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1dc>
   281dc:	ldr	r0, [r5, #8]
   281e0:	ldr	r1, [r0, #16]
   281e4:	bl	11d20 <myhtml_token_attr_create@plt>
   281e8:	str	r0, [r5, #56]	; 0x38
   281ec:	cmp	r0, #0
   281f0:	bne	28138 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   281f4:	mov	r0, #69	; 0x45
   281f8:	str	r0, [r5, #160]	; 0xa0
   281fc:	mov	r4, #0
   28200:	mov	r0, r4
   28204:	pop	{r4, r5, r6, sl, fp, pc}

00028208 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   28208:	push	{r4, r5, r6, sl, fp, lr}
   2820c:	add	fp, sp, #16
   28210:	mov	r4, r3
   28214:	mov	r5, r0
   28218:	ldrb	r0, [r2, r3]
   2821c:	sub	r0, r0, #9
   28220:	cmp	r0, #53	; 0x35
   28224:	bhi	28324 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x11c>
   28228:	mov	r6, r1
   2822c:	add	r1, pc, #4
   28230:	ldr	r0, [r1, r0, lsl #2]
   28234:	add	pc, r1, r0
   28238:	ldrdeq	r0, [r0], -r8
   2823c:	ldrdeq	r0, [r0], -r8
   28240:	andeq	r0, r0, ip, ror #1
   28244:	ldrdeq	r0, [r0], -r8
   28248:	ldrdeq	r0, [r0], -r8
   2824c:	andeq	r0, r0, ip, ror #1
   28250:	andeq	r0, r0, ip, ror #1
   28254:	andeq	r0, r0, ip, ror #1
   28258:	andeq	r0, r0, ip, ror #1
   2825c:	andeq	r0, r0, ip, ror #1
   28260:	andeq	r0, r0, ip, ror #1
   28264:	andeq	r0, r0, ip, ror #1
   28268:	andeq	r0, r0, ip, ror #1
   2826c:	andeq	r0, r0, ip, ror #1
   28270:	andeq	r0, r0, ip, ror #1
   28274:	andeq	r0, r0, ip, ror #1
   28278:	andeq	r0, r0, ip, ror #1
   2827c:	andeq	r0, r0, ip, ror #1
   28280:	andeq	r0, r0, ip, ror #1
   28284:	andeq	r0, r0, ip, ror #1
   28288:	andeq	r0, r0, ip, ror #1
   2828c:	andeq	r0, r0, ip, ror #1
   28290:	andeq	r0, r0, ip, ror #1
   28294:	ldrdeq	r0, [r0], -r8
   28298:	andeq	r0, r0, ip, ror #1
   2829c:	andeq	r0, r0, ip, ror #1
   282a0:	andeq	r0, r0, ip, ror #1
   282a4:	andeq	r0, r0, ip, ror #1
   282a8:	andeq	r0, r0, ip, ror #1
   282ac:	andeq	r0, r0, ip, ror #1
   282b0:	andeq	r0, r0, ip, ror #1
   282b4:	andeq	r0, r0, ip, ror #1
   282b8:	andeq	r0, r0, ip, ror #1
   282bc:	andeq	r0, r0, ip, ror #1
   282c0:	andeq	r0, r0, ip, ror #1
   282c4:	andeq	r0, r0, ip, ror #1
   282c8:	andeq	r0, r0, ip, ror #1
   282cc:	andeq	r0, r0, ip, ror #1
   282d0:	strdeq	r0, [r0], -ip
   282d4:	andeq	r0, r0, ip, ror #1
   282d8:	andeq	r0, r0, ip, ror #1
   282dc:	andeq	r0, r0, ip, ror #1
   282e0:	andeq	r0, r0, ip, ror #1
   282e4:	andeq	r0, r0, ip, ror #1
   282e8:	andeq	r0, r0, ip, ror #1
   282ec:	andeq	r0, r0, ip, ror #1
   282f0:	andeq	r0, r0, ip, ror #1
   282f4:	andeq	r0, r0, ip, ror #1
   282f8:	andeq	r0, r0, ip, ror #1
   282fc:	andeq	r0, r0, ip, ror #1
   28300:	andeq	r0, r0, ip, ror #1
   28304:	andeq	r0, r0, ip, ror #1
   28308:	andeq	r0, r0, ip, ror #1
   2830c:	andeq	r0, r0, r4, lsl #2
   28310:	mov	r0, #33	; 0x21
   28314:	str	r0, [r5, #160]	; 0xa0
   28318:	add	r4, r4, #1
   2831c:	mov	r0, r4
   28320:	pop	{r4, r5, r6, sl, fp, pc}
   28324:	mov	r0, #33	; 0x21
   28328:	str	r0, [r5, #160]	; 0xa0
   2832c:	mov	r0, r4
   28330:	pop	{r4, r5, r6, sl, fp, pc}
   28334:	mov	r0, #42	; 0x2a
   28338:	b	28314 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x10c>
   2833c:	mov	r0, r5
   28340:	mov	r1, r6
   28344:	bl	11f30 <myhtml_tokenizer_set_state@plt>
   28348:	ldr	r0, [r5, #192]	; 0xc0
   2834c:	add	r4, r4, #1
   28350:	add	r0, r0, r4
   28354:	ldr	r1, [r6, #32]
   28358:	sub	r0, r0, r1
   2835c:	str	r0, [r6, #36]	; 0x24
   28360:	mov	r0, r5
   28364:	mov	r1, r4
   28368:	mov	r2, r6
   2836c:	bl	114bc <myhtml_queue_add@plt>
   28370:	cmp	r0, #0
   28374:	movne	r0, #69	; 0x45
   28378:	strne	r0, [r5, #160]	; 0xa0
   2837c:	movne	r4, #0
   28380:	movne	r0, r4
   28384:	popne	{r4, r5, r6, sl, fp, pc}
   28388:	mov	r0, r4
   2838c:	pop	{r4, r5, r6, sl, fp, pc}

00028390 <myhtml_tokenizer_state_comment_start@@Base>:
   28390:	push	{r4, r5, r6, r7, fp, lr}
   28394:	add	fp, sp, #16
   28398:	mov	r4, r0
   2839c:	mov	r0, #2
   283a0:	str	r0, [r1]
   283a4:	ldrb	r0, [r2, r3]
   283a8:	cmp	r0, #45	; 0x2d
   283ac:	beq	28410 <myhtml_tokenizer_state_comment_start@@Base+0x80>
   283b0:	cmp	r0, #62	; 0x3e
   283b4:	bne	28418 <myhtml_tokenizer_state_comment_start@@Base+0x88>
   283b8:	mov	r6, r1
   283bc:	ldr	r0, [r4, #192]	; 0xc0
   283c0:	mov	r5, #0
   283c4:	str	r5, [r1, #28]
   283c8:	add	r7, r3, #1
   283cc:	add	r0, r0, r7
   283d0:	ldr	r1, [r1, #32]
   283d4:	sub	r0, r0, r1
   283d8:	str	r0, [r6, #36]	; 0x24
   283dc:	mov	r0, r4
   283e0:	mov	r1, r7
   283e4:	mov	r2, r6
   283e8:	bl	114bc <myhtml_queue_add@plt>
   283ec:	cmp	r0, #0
   283f0:	movne	r0, #69	; 0x45
   283f4:	strne	r0, [r4, #160]	; 0xa0
   283f8:	movne	r0, r5
   283fc:	popne	{r4, r5, r6, r7, fp, pc}
   28400:	mov	r0, #0
   28404:	str	r0, [r4, #160]	; 0xa0
   28408:	mov	r0, r7
   2840c:	pop	{r4, r5, r6, r7, fp, pc}
   28410:	mov	r0, #46	; 0x2e
   28414:	b	2841c <myhtml_tokenizer_state_comment_start@@Base+0x8c>
   28418:	mov	r0, #47	; 0x2f
   2841c:	str	r0, [r4, #160]	; 0xa0
   28420:	add	r5, r3, #1
   28424:	mov	r0, r5
   28428:	pop	{r4, r5, r6, r7, fp, pc}

0002842c <myhtml_tokenizer_state_comment_start_dash@@Base>:
   2842c:	push	{r4, r5, r6, r7, fp, lr}
   28430:	add	fp, sp, #16
   28434:	mov	r4, r0
   28438:	mov	r0, #2
   2843c:	str	r0, [r1]
   28440:	ldrb	r0, [r2, r3]
   28444:	cmp	r0, #45	; 0x2d
   28448:	beq	284ac <myhtml_tokenizer_state_comment_start_dash@@Base+0x80>
   2844c:	cmp	r0, #62	; 0x3e
   28450:	bne	284b4 <myhtml_tokenizer_state_comment_start_dash@@Base+0x88>
   28454:	mov	r6, r1
   28458:	ldr	r0, [r4, #192]	; 0xc0
   2845c:	mov	r5, #0
   28460:	str	r5, [r1, #28]
   28464:	add	r7, r3, #1
   28468:	add	r0, r0, r7
   2846c:	ldr	r1, [r1, #32]
   28470:	sub	r0, r0, r1
   28474:	str	r0, [r6, #36]	; 0x24
   28478:	mov	r0, r4
   2847c:	mov	r1, r7
   28480:	mov	r2, r6
   28484:	bl	114bc <myhtml_queue_add@plt>
   28488:	cmp	r0, #0
   2848c:	movne	r0, #69	; 0x45
   28490:	strne	r0, [r4, #160]	; 0xa0
   28494:	movne	r0, r5
   28498:	popne	{r4, r5, r6, r7, fp, pc}
   2849c:	mov	r0, #0
   284a0:	str	r0, [r4, #160]	; 0xa0
   284a4:	mov	r0, r7
   284a8:	pop	{r4, r5, r6, r7, fp, pc}
   284ac:	mov	r0, #49	; 0x31
   284b0:	b	284b8 <myhtml_tokenizer_state_comment_start_dash@@Base+0x8c>
   284b4:	mov	r0, #47	; 0x2f
   284b8:	str	r0, [r4, #160]	; 0xa0
   284bc:	add	r5, r3, #1
   284c0:	mov	r0, r5
   284c4:	pop	{r4, r5, r6, r7, fp, pc}

000284c8 <myhtml_tokenizer_state_comment@@Base>:
   284c8:	mov	ip, r3
   284cc:	mov	r3, #2
   284d0:	str	r3, [r1]
   284d4:	ldr	r1, [sp]
   284d8:	cmp	ip, r1
   284dc:	bcc	284f4 <myhtml_tokenizer_state_comment@@Base+0x2c>
   284e0:	mov	r0, ip
   284e4:	bx	lr
   284e8:	add	ip, ip, #1
   284ec:	cmp	ip, r1
   284f0:	bcs	284e0 <myhtml_tokenizer_state_comment@@Base+0x18>
   284f4:	ldrb	r3, [r2, ip]
   284f8:	cmp	r3, #45	; 0x2d
   284fc:	bne	284e8 <myhtml_tokenizer_state_comment@@Base+0x20>
   28500:	mov	r1, #48	; 0x30
   28504:	str	r1, [r0, #160]	; 0xa0
   28508:	add	ip, ip, #1
   2850c:	mov	r0, ip
   28510:	bx	lr

00028514 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   28514:	ldrb	r1, [r2, r3]
   28518:	mov	r2, #47	; 0x2f
   2851c:	cmp	r1, #45	; 0x2d
   28520:	movweq	r2, #49	; 0x31
   28524:	str	r2, [r0, #160]	; 0xa0
   28528:	add	r0, r3, #1
   2852c:	bx	lr

00028530 <myhtml_tokenizer_state_comment_end@@Base>:
   28530:	push	{r4, r5, r6, r7, fp, lr}
   28534:	add	fp, sp, #16
   28538:	mov	r4, r0
   2853c:	ldrb	r0, [r2, r3]
   28540:	cmp	r0, #33	; 0x21
   28544:	beq	285ac <myhtml_tokenizer_state_comment_end@@Base+0x7c>
   28548:	cmp	r0, #62	; 0x3e
   2854c:	bne	285c0 <myhtml_tokenizer_state_comment_end@@Base+0x90>
   28550:	mov	r6, r1
   28554:	ldr	r0, [r4, #192]	; 0xc0
   28558:	add	r7, r3, #1
   2855c:	add	r1, r0, r7
   28560:	ldr	r2, [r6, #24]
   28564:	ldr	r5, [r6, #32]
   28568:	sub	r1, r1, r5
   2856c:	str	r1, [r6, #36]	; 0x24
   28570:	add	r0, r0, r3
   28574:	sub	r0, r0, r2
   28578:	mov	r5, #0
   2857c:	cmp	r0, #1
   28580:	mov	r1, #0
   28584:	subhi	r1, r0, #2
   28588:	str	r1, [r6, #28]
   2858c:	mov	r0, r4
   28590:	mov	r1, r7
   28594:	mov	r2, r6
   28598:	bl	114bc <myhtml_queue_add@plt>
   2859c:	cmp	r0, #0
   285a0:	beq	285dc <myhtml_tokenizer_state_comment_end@@Base+0xac>
   285a4:	mov	r0, #69	; 0x45
   285a8:	b	285d0 <myhtml_tokenizer_state_comment_end@@Base+0xa0>
   285ac:	mov	r0, #50	; 0x32
   285b0:	str	r0, [r4, #160]	; 0xa0
   285b4:	add	r5, r3, #1
   285b8:	mov	r0, r5
   285bc:	pop	{r4, r5, r6, r7, fp, pc}
   285c0:	add	r5, r3, #1
   285c4:	cmp	r0, #45	; 0x2d
   285c8:	beq	285d4 <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   285cc:	mov	r0, #47	; 0x2f
   285d0:	str	r0, [r4, #160]	; 0xa0
   285d4:	mov	r0, r5
   285d8:	pop	{r4, r5, r6, r7, fp, pc}
   285dc:	mov	r0, #0
   285e0:	str	r0, [r4, #160]	; 0xa0
   285e4:	mov	r0, r7
   285e8:	pop	{r4, r5, r6, r7, fp, pc}

000285ec <myhtml_tokenizer_state_comment_end_bang@@Base>:
   285ec:	push	{r4, r5, r6, sl, fp, lr}
   285f0:	add	fp, sp, #16
   285f4:	mov	r6, r0
   285f8:	ldrb	r0, [r2, r3]
   285fc:	cmp	r0, #62	; 0x3e
   28600:	bne	28628 <myhtml_tokenizer_state_comment_end_bang@@Base+0x3c>
   28604:	mov	r4, r1
   28608:	ldr	r0, [r6, #192]	; 0xc0
   2860c:	add	r1, r0, r3
   28610:	sub	r5, r1, #3
   28614:	ldr	r2, [r4, #24]
   28618:	cmp	r5, r2
   2861c:	bcs	2863c <myhtml_tokenizer_state_comment_end_bang@@Base+0x50>
   28620:	mov	r1, #0
   28624:	b	28648 <myhtml_tokenizer_state_comment_end_bang@@Base+0x5c>
   28628:	add	r5, r3, #1
   2862c:	cmp	r0, #45	; 0x2d
   28630:	movne	r0, #47	; 0x2f
   28634:	moveq	r0, #48	; 0x30
   28638:	b	2868c <myhtml_tokenizer_state_comment_end_bang@@Base+0xa0>
   2863c:	mvn	r5, #2
   28640:	sub	r2, r5, r2
   28644:	add	r1, r2, r1
   28648:	str	r1, [r4, #28]
   2864c:	add	r5, r3, #1
   28650:	add	r0, r0, r5
   28654:	ldr	r1, [r4, #32]
   28658:	sub	r0, r0, r1
   2865c:	str	r0, [r4, #36]	; 0x24
   28660:	mov	r0, r6
   28664:	mov	r1, r5
   28668:	mov	r2, r4
   2866c:	bl	114bc <myhtml_queue_add@plt>
   28670:	cmp	r0, #0
   28674:	movne	r0, #69	; 0x45
   28678:	strne	r0, [r6, #160]	; 0xa0
   2867c:	movne	r5, #0
   28680:	movne	r0, r5
   28684:	popne	{r4, r5, r6, sl, fp, pc}
   28688:	mov	r0, #0
   2868c:	str	r0, [r6, #160]	; 0xa0
   28690:	mov	r0, r5
   28694:	pop	{r4, r5, r6, sl, fp, pc}

00028698 <myhtml_tokenizer_state_bogus_comment@@Base>:
   28698:	push	{r4, r5, fp, lr}
   2869c:	add	fp, sp, #8
   286a0:	mov	r4, r3
   286a4:	mov	r5, r0
   286a8:	mov	r0, #2
   286ac:	str	r0, [r1]
   286b0:	ldr	r0, [r1, #48]	; 0x30
   286b4:	orr	r0, r0, #1024	; 0x400
   286b8:	str	r0, [r1, #48]	; 0x30
   286bc:	ldr	r0, [fp, #8]
   286c0:	cmp	r3, r0
   286c4:	bcs	286e4 <myhtml_tokenizer_state_bogus_comment@@Base+0x4c>
   286c8:	mov	r3, r1
   286cc:	ldrb	r1, [r2, r4]
   286d0:	cmp	r1, #62	; 0x3e
   286d4:	beq	286ec <myhtml_tokenizer_state_bogus_comment@@Base+0x54>
   286d8:	add	r4, r4, #1
   286dc:	cmp	r4, r0
   286e0:	bcc	286cc <myhtml_tokenizer_state_bogus_comment@@Base+0x34>
   286e4:	mov	r0, r4
   286e8:	pop	{r4, r5, fp, pc}
   286ec:	ldr	r0, [r3, #24]
   286f0:	ldr	r1, [r3, #32]
   286f4:	ldr	r2, [r5, #192]	; 0xc0
   286f8:	sub	r0, r2, r0
   286fc:	add	r0, r0, r4
   28700:	str	r0, [r3, #28]
   28704:	sub	r0, r2, r1
   28708:	add	r0, r0, r4
   2870c:	add	r0, r0, #1
   28710:	str	r0, [r3, #36]	; 0x24
   28714:	add	r4, r4, #1
   28718:	mov	r0, r5
   2871c:	mov	r1, r4
   28720:	mov	r2, r3
   28724:	bl	114bc <myhtml_queue_add@plt>
   28728:	cmp	r0, #0
   2872c:	movne	r0, #69	; 0x45
   28730:	strne	r0, [r5, #160]	; 0xa0
   28734:	movne	r4, #0
   28738:	movne	r0, r4
   2873c:	popne	{r4, r5, fp, pc}
   28740:	mov	r0, #0
   28744:	str	r0, [r5, #160]	; 0xa0
   28748:	mov	r0, r4
   2874c:	pop	{r4, r5, fp, pc}

00028750 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   28750:	movw	r1, #37164	; 0x912c
   28754:	str	r1, [r0, #196]	; 0xc4
   28758:	ldr	r0, [sp]
   2875c:	bx	lr

00028760 <myhtml_tokenizer_state_init@@Base>:
   28760:	push	{r4, sl, fp, lr}
   28764:	add	fp, sp, #8
   28768:	mov	r4, r0
   2876c:	movw	r0, #19604	; 0x4c94
   28770:	bl	12050 <mycore_malloc@plt>
   28774:	str	r0, [r4, #24]!
   28778:	cmp	r0, #0
   2877c:	movweq	r0, #37164	; 0x912c
   28780:	popeq	{r4, sl, fp, pc}
   28784:	ldr	r1, [pc, #2012]	; 28f68 <myhtml_tokenizer_state_init@@Base+0x808>
   28788:	ldr	r1, [pc, r1]
   2878c:	str	r1, [r0]
   28790:	ldr	r0, [r4]
   28794:	ldr	r1, [pc, #2000]	; 28f6c <myhtml_tokenizer_state_init@@Base+0x80c>
   28798:	ldr	r1, [pc, r1]
   2879c:	str	r1, [r0, #28]
   287a0:	ldr	r0, [r4]
   287a4:	ldr	r1, [pc, #1988]	; 28f70 <myhtml_tokenizer_state_init@@Base+0x810>
   287a8:	ldr	r1, [pc, r1]
   287ac:	str	r1, [r0, #36]	; 0x24
   287b0:	ldr	r0, [r4]
   287b4:	ldr	r1, [pc, #1976]	; 28f74 <myhtml_tokenizer_state_init@@Base+0x814>
   287b8:	ldr	r1, [pc, r1]
   287bc:	str	r1, [r0, #32]
   287c0:	ldr	r0, [r4]
   287c4:	ldr	r1, [pc, #1964]	; 28f78 <myhtml_tokenizer_state_init@@Base+0x818>
   287c8:	ldr	r1, [pc, r1]
   287cc:	str	r1, [r0, #168]	; 0xa8
   287d0:	ldr	r0, [r4]
   287d4:	ldr	r1, [pc, #1952]	; 28f7c <myhtml_tokenizer_state_init@@Base+0x81c>
   287d8:	ldr	r1, [pc, r1]
   287dc:	str	r1, [r0, #176]	; 0xb0
   287e0:	ldr	r0, [r4]
   287e4:	ldr	r1, [pc, #1940]	; 28f80 <myhtml_tokenizer_state_init@@Base+0x820>
   287e8:	ldr	r1, [pc, r1]
   287ec:	str	r1, [r0, #132]	; 0x84
   287f0:	ldr	r0, [r4]
   287f4:	ldr	r1, [pc, #1928]	; 28f84 <myhtml_tokenizer_state_init@@Base+0x824>
   287f8:	ldr	r1, [pc, r1]
   287fc:	str	r1, [r0, #136]	; 0x88
   28800:	ldr	r0, [r4]
   28804:	ldr	r1, [pc, #1916]	; 28f88 <myhtml_tokenizer_state_init@@Base+0x828>
   28808:	ldr	r1, [pc, r1]
   2880c:	str	r1, [r0, #140]	; 0x8c
   28810:	ldr	r0, [r4]
   28814:	ldr	r1, [pc, #1904]	; 28f8c <myhtml_tokenizer_state_init@@Base+0x82c>
   28818:	ldr	r1, [pc, r1]
   2881c:	str	r1, [r0, #144]	; 0x90
   28820:	ldr	r0, [r4]
   28824:	ldr	r1, [pc, #1892]	; 28f90 <myhtml_tokenizer_state_init@@Base+0x830>
   28828:	ldr	r1, [pc, r1]
   2882c:	str	r1, [r0, #164]	; 0xa4
   28830:	ldr	r0, [r4]
   28834:	ldr	r1, [pc, #1880]	; 28f94 <myhtml_tokenizer_state_init@@Base+0x834>
   28838:	ldr	r1, [pc, r1]
   2883c:	str	r1, [r0, #148]	; 0x94
   28840:	ldr	r0, [r4]
   28844:	ldr	r1, [pc, #1868]	; 28f98 <myhtml_tokenizer_state_init@@Base+0x838>
   28848:	ldr	r1, [pc, r1]
   2884c:	str	r1, [r0, #152]	; 0x98
   28850:	ldr	r0, [r4]
   28854:	ldr	r1, [pc, #1856]	; 28f9c <myhtml_tokenizer_state_init@@Base+0x83c>
   28858:	ldr	r1, [pc, r1]
   2885c:	str	r1, [r0, #156]	; 0x9c
   28860:	ldr	r0, [r4]
   28864:	ldr	r1, [pc, #1844]	; 28fa0 <myhtml_tokenizer_state_init@@Base+0x840>
   28868:	ldr	r1, [pc, r1]
   2886c:	str	r1, [r0, #180]	; 0xb4
   28870:	ldr	r0, [r4]
   28874:	ldr	r1, [pc, #1832]	; 28fa4 <myhtml_tokenizer_state_init@@Base+0x844>
   28878:	ldr	r1, [pc, r1]
   2887c:	str	r1, [r0, #184]	; 0xb8
   28880:	ldr	r0, [r4]
   28884:	ldr	r1, [pc, #1820]	; 28fa8 <myhtml_tokenizer_state_init@@Base+0x848>
   28888:	ldr	r1, [pc, r1]
   2888c:	str	r1, [r0, #188]	; 0xbc
   28890:	ldr	r0, [r4]
   28894:	ldr	r1, [pc, #1808]	; 28fac <myhtml_tokenizer_state_init@@Base+0x84c>
   28898:	ldr	r1, [pc, r1]
   2889c:	str	r1, [r0, #196]	; 0xc4
   288a0:	ldr	r0, [r4]
   288a4:	ldr	r1, [pc, #1796]	; 28fb0 <myhtml_tokenizer_state_init@@Base+0x850>
   288a8:	ldr	r1, [pc, r1]
   288ac:	str	r1, [r0, #192]	; 0xc0
   288b0:	ldr	r0, [r4]
   288b4:	ldr	r1, [pc, #1784]	; 28fb4 <myhtml_tokenizer_state_init@@Base+0x854>
   288b8:	ldr	r1, [pc, r1]
   288bc:	str	r1, [r0, #200]	; 0xc8
   288c0:	ldr	r0, [r4]
   288c4:	ldr	r1, [pc, #1772]	; 28fb8 <myhtml_tokenizer_state_init@@Base+0x858>
   288c8:	ldr	r1, [pc, r1]
   288cc:	str	r1, [r0, #172]	; 0xac
   288d0:	ldr	r0, [r4]
   288d4:	ldr	r1, [pc, #1760]	; 28fbc <myhtml_tokenizer_state_init@@Base+0x85c>
   288d8:	ldr	r1, [pc, r1]
   288dc:	str	r1, [r0, #268]	; 0x10c
   288e0:	ldr	r0, [r4]
   288e4:	ldr	r1, [pc, #1748]	; 28fc0 <myhtml_tokenizer_state_init@@Base+0x860>
   288e8:	ldr	r1, [pc, r1]
   288ec:	str	r1, [r0, #8]
   288f0:	ldr	r0, [r4]
   288f4:	ldr	r1, [pc, #1736]	; 28fc4 <myhtml_tokenizer_state_init@@Base+0x864>
   288f8:	ldr	r1, [pc, r1]
   288fc:	str	r1, [r0, #40]	; 0x28
   28900:	ldr	r0, [r4]
   28904:	ldr	r1, [pc, #1724]	; 28fc8 <myhtml_tokenizer_state_init@@Base+0x868>
   28908:	ldr	r1, [pc, r1]
   2890c:	str	r1, [r0, #44]	; 0x2c
   28910:	ldr	r0, [r4]
   28914:	ldr	r1, [pc, #1712]	; 28fcc <myhtml_tokenizer_state_init@@Base+0x86c>
   28918:	ldr	r1, [pc, r1]
   2891c:	str	r1, [r0, #48]	; 0x30
   28920:	ldr	r0, [r4]
   28924:	ldr	r1, [pc, #1700]	; 28fd0 <myhtml_tokenizer_state_init@@Base+0x870>
   28928:	ldr	r1, [pc, r1]
   2892c:	str	r1, [r0, #16]
   28930:	ldr	r0, [r4]
   28934:	ldr	r1, [pc, #1688]	; 28fd4 <myhtml_tokenizer_state_init@@Base+0x874>
   28938:	ldr	r1, [pc, r1]
   2893c:	str	r1, [r0, #52]	; 0x34
   28940:	ldr	r0, [r4]
   28944:	ldr	r1, [pc, #1676]	; 28fd8 <myhtml_tokenizer_state_init@@Base+0x878>
   28948:	ldr	r1, [pc, r1]
   2894c:	str	r1, [r0, #56]	; 0x38
   28950:	ldr	r0, [r4]
   28954:	ldr	r1, [pc, #1664]	; 28fdc <myhtml_tokenizer_state_init@@Base+0x87c>
   28958:	ldr	r1, [pc, r1]
   2895c:	str	r1, [r0, #60]	; 0x3c
   28960:	ldr	r0, [r4]
   28964:	ldr	r1, [pc, #1652]	; 28fe0 <myhtml_tokenizer_state_init@@Base+0x880>
   28968:	ldr	r1, [pc, r1]
   2896c:	str	r1, [r0, #24]
   28970:	ldr	r0, [r4]
   28974:	ldr	r1, [pc, #1640]	; 28fe4 <myhtml_tokenizer_state_init@@Base+0x884>
   28978:	ldr	r1, [pc, r1]
   2897c:	str	r1, [r0, #204]	; 0xcc
   28980:	ldr	r0, [r4]
   28984:	ldr	r1, [pc, #1628]	; 28fe8 <myhtml_tokenizer_state_init@@Base+0x888>
   28988:	ldr	r1, [pc, r1]
   2898c:	str	r1, [r0, #208]	; 0xd0
   28990:	ldr	r0, [r4]
   28994:	ldr	r1, [pc, #1616]	; 28fec <myhtml_tokenizer_state_init@@Base+0x88c>
   28998:	ldr	r1, [pc, r1]
   2899c:	str	r1, [r0, #212]	; 0xd4
   289a0:	ldr	r0, [r4]
   289a4:	ldr	r1, [pc, #1604]	; 28ff0 <myhtml_tokenizer_state_init@@Base+0x890>
   289a8:	ldr	r1, [pc, r1]
   289ac:	str	r1, [r0, #216]	; 0xd8
   289b0:	ldr	r0, [r4]
   289b4:	ldr	r1, [pc, #1592]	; 28ff4 <myhtml_tokenizer_state_init@@Base+0x894>
   289b8:	ldr	r1, [pc, r1]
   289bc:	str	r1, [r0, #272]	; 0x110
   289c0:	ldr	r0, [r4]
   289c4:	ldr	r1, [pc, #1580]	; 28ff8 <myhtml_tokenizer_state_init@@Base+0x898>
   289c8:	ldr	r1, [pc, r1]
   289cc:	str	r1, [r0, #224]	; 0xe0
   289d0:	ldr	r0, [r4]
   289d4:	ldr	r1, [pc, #1568]	; 28ffc <myhtml_tokenizer_state_init@@Base+0x89c>
   289d8:	ldr	r1, [pc, r1]
   289dc:	str	r1, [r0, #228]	; 0xe4
   289e0:	ldr	r0, [r4]
   289e4:	ldr	r1, [pc, #1556]	; 29000 <myhtml_tokenizer_state_init@@Base+0x8a0>
   289e8:	ldr	r1, [pc, r1]
   289ec:	str	r1, [r0, #232]	; 0xe8
   289f0:	ldr	r0, [r4]
   289f4:	ldr	r1, [pc, #1544]	; 29004 <myhtml_tokenizer_state_init@@Base+0x8a4>
   289f8:	ldr	r1, [pc, r1]
   289fc:	str	r1, [r0, #236]	; 0xec
   28a00:	ldr	r0, [r4]
   28a04:	ldr	r1, [pc, #1532]	; 29008 <myhtml_tokenizer_state_init@@Base+0x8a8>
   28a08:	ldr	r1, [pc, r1]
   28a0c:	str	r1, [r0, #252]	; 0xfc
   28a10:	ldr	r0, [r4]
   28a14:	ldr	r1, [pc, #1520]	; 2900c <myhtml_tokenizer_state_init@@Base+0x8ac>
   28a18:	ldr	r1, [pc, r1]
   28a1c:	str	r1, [r0, #256]	; 0x100
   28a20:	ldr	r0, [r4]
   28a24:	ldr	r1, [pc, #1508]	; 29010 <myhtml_tokenizer_state_init@@Base+0x8b0>
   28a28:	ldr	r1, [pc, r1]
   28a2c:	str	r1, [r0, #260]	; 0x104
   28a30:	ldr	r0, [r4]
   28a34:	ldr	r1, [pc, #1496]	; 29014 <myhtml_tokenizer_state_init@@Base+0x8b4>
   28a38:	ldr	r1, [pc, r1]
   28a3c:	str	r1, [r0, #264]	; 0x108
   28a40:	ldr	r0, [r4]
   28a44:	ldr	r1, [pc, #1484]	; 29018 <myhtml_tokenizer_state_init@@Base+0x8b8>
   28a48:	ldr	r1, [pc, r1]
   28a4c:	str	r1, [r0, #20]
   28a50:	ldr	r0, [r4]
   28a54:	ldr	r1, [pc, #1472]	; 2901c <myhtml_tokenizer_state_init@@Base+0x8bc>
   28a58:	ldr	r1, [pc, r1]
   28a5c:	str	r1, [r0, #64]	; 0x40
   28a60:	ldr	r0, [r4]
   28a64:	ldr	r1, [pc, #1460]	; 29020 <myhtml_tokenizer_state_init@@Base+0x8c0>
   28a68:	ldr	r1, [pc, r1]
   28a6c:	str	r1, [r0, #68]	; 0x44
   28a70:	ldr	r0, [r4]
   28a74:	ldr	r1, [pc, #1448]	; 29024 <myhtml_tokenizer_state_init@@Base+0x8c4>
   28a78:	ldr	r1, [pc, r1]
   28a7c:	str	r1, [r0, #72]	; 0x48
   28a80:	ldr	r0, [r4]
   28a84:	ldr	r1, [pc, #1436]	; 29028 <myhtml_tokenizer_state_init@@Base+0x8c8>
   28a88:	ldr	r1, [pc, r1]
   28a8c:	str	r1, [r0, #76]	; 0x4c
   28a90:	ldr	r0, [r4]
   28a94:	ldr	r1, [pc, #1424]	; 2902c <myhtml_tokenizer_state_init@@Base+0x8cc>
   28a98:	ldr	r1, [pc, r1]
   28a9c:	str	r1, [r0, #80]	; 0x50
   28aa0:	ldr	r0, [r4]
   28aa4:	ldr	r1, [pc, #1412]	; 29030 <myhtml_tokenizer_state_init@@Base+0x8d0>
   28aa8:	ldr	r1, [pc, r1]
   28aac:	str	r1, [r0, #84]	; 0x54
   28ab0:	ldr	r0, [r4]
   28ab4:	ldr	r1, [pc, #1400]	; 29034 <myhtml_tokenizer_state_init@@Base+0x8d4>
   28ab8:	ldr	r1, [pc, r1]
   28abc:	str	r1, [r0, #88]	; 0x58
   28ac0:	ldr	r0, [r4]
   28ac4:	ldr	r1, [pc, #1388]	; 29038 <myhtml_tokenizer_state_init@@Base+0x8d8>
   28ac8:	ldr	r1, [pc, r1]
   28acc:	str	r1, [r0, #92]	; 0x5c
   28ad0:	ldr	r0, [r4]
   28ad4:	ldr	r1, [pc, #1376]	; 2903c <myhtml_tokenizer_state_init@@Base+0x8dc>
   28ad8:	ldr	r1, [pc, r1]
   28adc:	str	r1, [r0, #96]	; 0x60
   28ae0:	ldr	r0, [r4]
   28ae4:	ldr	r1, [pc, #1364]	; 29040 <myhtml_tokenizer_state_init@@Base+0x8e0>
   28ae8:	ldr	r1, [pc, r1]
   28aec:	str	r1, [r0, #100]	; 0x64
   28af0:	ldr	r0, [r4]
   28af4:	ldr	r1, [pc, #1352]	; 29044 <myhtml_tokenizer_state_init@@Base+0x8e4>
   28af8:	ldr	r1, [pc, r1]
   28afc:	str	r1, [r0, #104]	; 0x68
   28b00:	ldr	r0, [r4]
   28b04:	ldr	r1, [pc, #1340]	; 29048 <myhtml_tokenizer_state_init@@Base+0x8e8>
   28b08:	ldr	r1, [pc, r1]
   28b0c:	str	r1, [r0, #108]	; 0x6c
   28b10:	ldr	r0, [r4]
   28b14:	ldr	r1, [pc, #1328]	; 2904c <myhtml_tokenizer_state_init@@Base+0x8ec>
   28b18:	ldr	r1, [pc, r1]
   28b1c:	str	r1, [r0, #112]	; 0x70
   28b20:	ldr	r0, [r4]
   28b24:	ldr	r1, [pc, #1316]	; 29050 <myhtml_tokenizer_state_init@@Base+0x8f0>
   28b28:	ldr	r1, [pc, r1]
   28b2c:	str	r1, [r0, #116]	; 0x74
   28b30:	ldr	r0, [r4]
   28b34:	ldr	r1, [pc, #1304]	; 29054 <myhtml_tokenizer_state_init@@Base+0x8f4>
   28b38:	ldr	r1, [pc, r1]
   28b3c:	str	r1, [r0, #120]	; 0x78
   28b40:	ldr	r0, [r4]
   28b44:	ldr	r1, [pc, #1292]	; 29058 <myhtml_tokenizer_state_init@@Base+0x8f8>
   28b48:	ldr	r1, [pc, r1]
   28b4c:	str	r1, [r0, #124]	; 0x7c
   28b50:	ldr	r0, [r4]
   28b54:	ldr	r1, [pc, #1280]	; 2905c <myhtml_tokenizer_state_init@@Base+0x8fc>
   28b58:	ldr	r1, [pc, r1]
   28b5c:	str	r1, [r0, #128]	; 0x80
   28b60:	ldr	r0, [r4]
   28b64:	ldr	r1, [pc, #1268]	; 29060 <myhtml_tokenizer_state_init@@Base+0x900>
   28b68:	ldr	r1, [pc, r1]
   28b6c:	str	r1, [r0, #276]	; 0x114
   28b70:	ldr	r0, [r4]
   28b74:	ldr	r1, [pc, #1256]	; 29064 <myhtml_tokenizer_state_init@@Base+0x904>
   28b78:	ldr	r1, [pc, r1]
   28b7c:	str	r1, [r0, #280]	; 0x118
   28b80:	ldr	r0, [r4]
   28b84:	ldr	r1, [pc, #1244]	; 29068 <myhtml_tokenizer_state_init@@Base+0x908>
   28b88:	ldr	r1, [pc, r1]
   28b8c:	str	r1, [r0, #308]	; 0x134
   28b90:	ldr	r0, [r4]
   28b94:	ldr	r1, [pc, #1232]	; 2906c <myhtml_tokenizer_state_init@@Base+0x90c>
   28b98:	ldr	r1, [pc, r1]
   28b9c:	str	r1, [r0, #316]	; 0x13c
   28ba0:	ldr	r0, [r4]
   28ba4:	ldr	r1, [pc, #1220]	; 29070 <myhtml_tokenizer_state_init@@Base+0x910>
   28ba8:	ldr	r1, [pc, r1]
   28bac:	str	r1, [r0, #312]	; 0x138
   28bb0:	ldr	r0, [r4]
   28bb4:	ldr	r1, [pc, #1208]	; 29074 <myhtml_tokenizer_state_init@@Base+0x914>
   28bb8:	ldr	r1, [pc, r1]
   28bbc:	str	r1, [r0, #448]	; 0x1c0
   28bc0:	ldr	r0, [r4]
   28bc4:	ldr	r1, [pc, #1196]	; 29078 <myhtml_tokenizer_state_init@@Base+0x918>
   28bc8:	ldr	r1, [pc, r1]
   28bcc:	str	r1, [r0, #456]	; 0x1c8
   28bd0:	ldr	r0, [r4]
   28bd4:	ldr	r1, [pc, #1184]	; 2907c <myhtml_tokenizer_state_init@@Base+0x91c>
   28bd8:	ldr	r1, [pc, r1]
   28bdc:	str	r1, [r0, #412]	; 0x19c
   28be0:	ldr	r0, [r4]
   28be4:	ldr	r1, [pc, #1172]	; 29080 <myhtml_tokenizer_state_init@@Base+0x920>
   28be8:	ldr	r1, [pc, r1]
   28bec:	str	r1, [r0, #416]	; 0x1a0
   28bf0:	ldr	r0, [r4]
   28bf4:	ldr	r1, [pc, #1160]	; 29084 <myhtml_tokenizer_state_init@@Base+0x924>
   28bf8:	ldr	r1, [pc, r1]
   28bfc:	str	r1, [r0, #420]	; 0x1a4
   28c00:	ldr	r0, [r4]
   28c04:	ldr	r1, [pc, #1148]	; 29088 <myhtml_tokenizer_state_init@@Base+0x928>
   28c08:	ldr	r1, [pc, r1]
   28c0c:	str	r1, [r0, #424]	; 0x1a8
   28c10:	ldr	r0, [r4]
   28c14:	ldr	r1, [pc, #1136]	; 2908c <myhtml_tokenizer_state_init@@Base+0x92c>
   28c18:	ldr	r1, [pc, r1]
   28c1c:	str	r1, [r0, #428]	; 0x1ac
   28c20:	ldr	r0, [r4]
   28c24:	ldr	r1, [pc, #1124]	; 29090 <myhtml_tokenizer_state_init@@Base+0x930>
   28c28:	ldr	r1, [pc, r1]
   28c2c:	str	r1, [r0, #432]	; 0x1b0
   28c30:	ldr	r0, [r4]
   28c34:	ldr	r1, [pc, #1112]	; 29094 <myhtml_tokenizer_state_init@@Base+0x934>
   28c38:	ldr	r1, [pc, r1]
   28c3c:	str	r1, [r0, #436]	; 0x1b4
   28c40:	ldr	r0, [r4]
   28c44:	ldr	r1, [pc, #1100]	; 29098 <myhtml_tokenizer_state_init@@Base+0x938>
   28c48:	ldr	r1, [pc, r1]
   28c4c:	str	r1, [r0, #444]	; 0x1bc
   28c50:	ldr	r0, [r4]
   28c54:	ldr	r1, [pc, #1088]	; 2909c <myhtml_tokenizer_state_init@@Base+0x93c>
   28c58:	ldr	r1, [pc, r1]
   28c5c:	str	r1, [r0, #460]	; 0x1cc
   28c60:	ldr	r0, [r4]
   28c64:	ldr	r1, [pc, #1076]	; 290a0 <myhtml_tokenizer_state_init@@Base+0x940>
   28c68:	ldr	r1, [pc, r1]
   28c6c:	str	r1, [r0, #464]	; 0x1d0
   28c70:	ldr	r0, [r4]
   28c74:	ldr	r1, [pc, #1064]	; 290a4 <myhtml_tokenizer_state_init@@Base+0x944>
   28c78:	ldr	r1, [pc, r1]
   28c7c:	str	r1, [r0, #468]	; 0x1d4
   28c80:	ldr	r0, [r4]
   28c84:	ldr	r1, [pc, #1052]	; 290a8 <myhtml_tokenizer_state_init@@Base+0x948>
   28c88:	ldr	r1, [pc, r1]
   28c8c:	str	r1, [r0, #476]	; 0x1dc
   28c90:	ldr	r0, [r4]
   28c94:	ldr	r1, [pc, #1040]	; 290ac <myhtml_tokenizer_state_init@@Base+0x94c>
   28c98:	ldr	r1, [pc, r1]
   28c9c:	str	r1, [r0, #472]	; 0x1d8
   28ca0:	ldr	r0, [r4]
   28ca4:	ldr	r1, [pc, #1028]	; 290b0 <myhtml_tokenizer_state_init@@Base+0x950>
   28ca8:	ldr	r1, [pc, r1]
   28cac:	str	r1, [r0, #480]	; 0x1e0
   28cb0:	ldr	r0, [r4]
   28cb4:	ldr	r1, [pc, #1016]	; 290b4 <myhtml_tokenizer_state_init@@Base+0x954>
   28cb8:	ldr	r1, [pc, r1]
   28cbc:	str	r1, [r0, #452]	; 0x1c4
   28cc0:	ldr	r0, [r4]
   28cc4:	ldr	r1, [pc, #1004]	; 290b8 <myhtml_tokenizer_state_init@@Base+0x958>
   28cc8:	ldr	r1, [pc, r1]
   28ccc:	str	r1, [r0, #548]	; 0x224
   28cd0:	ldr	r0, [r4]
   28cd4:	ldr	r1, [pc, #992]	; 290bc <myhtml_tokenizer_state_init@@Base+0x95c>
   28cd8:	ldr	r1, [pc, r1]
   28cdc:	str	r1, [r0, #288]	; 0x120
   28ce0:	ldr	r0, [r4]
   28ce4:	ldr	r1, [pc, #980]	; 290c0 <myhtml_tokenizer_state_init@@Base+0x960>
   28ce8:	ldr	r1, [pc, r1]
   28cec:	str	r1, [r0, #320]	; 0x140
   28cf0:	ldr	r0, [r4]
   28cf4:	ldr	r1, [pc, #968]	; 290c4 <myhtml_tokenizer_state_init@@Base+0x964>
   28cf8:	ldr	r1, [pc, r1]
   28cfc:	str	r1, [r0, #324]	; 0x144
   28d00:	ldr	r0, [r4]
   28d04:	ldr	r1, [pc, #956]	; 290c8 <myhtml_tokenizer_state_init@@Base+0x968>
   28d08:	ldr	r1, [pc, r1]
   28d0c:	str	r1, [r0, #328]	; 0x148
   28d10:	ldr	r0, [r4]
   28d14:	ldr	r1, [pc, #944]	; 290cc <myhtml_tokenizer_state_init@@Base+0x96c>
   28d18:	ldr	r1, [pc, r1]
   28d1c:	str	r1, [r0, #296]	; 0x128
   28d20:	ldr	r0, [r4]
   28d24:	ldr	r1, [pc, #932]	; 290d0 <myhtml_tokenizer_state_init@@Base+0x970>
   28d28:	ldr	r1, [pc, r1]
   28d2c:	str	r1, [r0, #332]	; 0x14c
   28d30:	ldr	r0, [r4]
   28d34:	ldr	r1, [pc, #920]	; 290d4 <myhtml_tokenizer_state_init@@Base+0x974>
   28d38:	ldr	r1, [pc, r1]
   28d3c:	str	r1, [r0, #336]	; 0x150
   28d40:	ldr	r0, [r4]
   28d44:	ldr	r1, [pc, #908]	; 290d8 <myhtml_tokenizer_state_init@@Base+0x978>
   28d48:	ldr	r1, [pc, r1]
   28d4c:	str	r1, [r0, #340]	; 0x154
   28d50:	ldr	r0, [r4]
   28d54:	ldr	r1, [pc, #896]	; 290dc <myhtml_tokenizer_state_init@@Base+0x97c>
   28d58:	ldr	r1, [pc, r1]
   28d5c:	str	r1, [r0, #304]	; 0x130
   28d60:	ldr	r0, [r4]
   28d64:	ldr	r1, [pc, #884]	; 290e0 <myhtml_tokenizer_state_init@@Base+0x980>
   28d68:	ldr	r1, [pc, r1]
   28d6c:	str	r1, [r0, #484]	; 0x1e4
   28d70:	ldr	r0, [r4]
   28d74:	ldr	r1, [pc, #872]	; 290e4 <myhtml_tokenizer_state_init@@Base+0x984>
   28d78:	ldr	r1, [pc, r1]
   28d7c:	str	r1, [r0, #488]	; 0x1e8
   28d80:	ldr	r0, [r4]
   28d84:	ldr	r1, [pc, #860]	; 290e8 <myhtml_tokenizer_state_init@@Base+0x988>
   28d88:	ldr	r1, [pc, r1]
   28d8c:	str	r1, [r0, #492]	; 0x1ec
   28d90:	ldr	r0, [r4]
   28d94:	ldr	r1, [pc, #848]	; 290ec <myhtml_tokenizer_state_init@@Base+0x98c>
   28d98:	ldr	r1, [pc, r1]
   28d9c:	str	r1, [r0, #496]	; 0x1f0
   28da0:	ldr	r0, [r4]
   28da4:	ldr	r1, [pc, #836]	; 290f0 <myhtml_tokenizer_state_init@@Base+0x990>
   28da8:	ldr	r1, [pc, r1]
   28dac:	str	r1, [r0, #552]	; 0x228
   28db0:	ldr	r0, [r4]
   28db4:	ldr	r1, [pc, #824]	; 290f4 <myhtml_tokenizer_state_init@@Base+0x994>
   28db8:	ldr	r1, [pc, r1]
   28dbc:	str	r1, [r0, #504]	; 0x1f8
   28dc0:	ldr	r0, [r4]
   28dc4:	ldr	r1, [pc, #812]	; 290f8 <myhtml_tokenizer_state_init@@Base+0x998>
   28dc8:	ldr	r1, [pc, r1]
   28dcc:	str	r1, [r0, #508]	; 0x1fc
   28dd0:	ldr	r0, [r4]
   28dd4:	ldr	r1, [pc, #800]	; 290fc <myhtml_tokenizer_state_init@@Base+0x99c>
   28dd8:	ldr	r1, [pc, r1]
   28ddc:	str	r1, [r0, #512]	; 0x200
   28de0:	ldr	r0, [r4]
   28de4:	ldr	r1, [pc, #788]	; 29100 <myhtml_tokenizer_state_init@@Base+0x9a0>
   28de8:	ldr	r1, [pc, r1]
   28dec:	str	r1, [r0, #516]	; 0x204
   28df0:	ldr	r0, [r4]
   28df4:	ldr	r1, [pc, #776]	; 29104 <myhtml_tokenizer_state_init@@Base+0x9a4>
   28df8:	ldr	r1, [pc, r1]
   28dfc:	str	r1, [r0, #532]	; 0x214
   28e00:	ldr	r0, [r4]
   28e04:	ldr	r1, [pc, #764]	; 29108 <myhtml_tokenizer_state_init@@Base+0x9a8>
   28e08:	ldr	r1, [pc, r1]
   28e0c:	str	r1, [r0, #536]	; 0x218
   28e10:	ldr	r0, [r4]
   28e14:	ldr	r1, [pc, #752]	; 2910c <myhtml_tokenizer_state_init@@Base+0x9ac>
   28e18:	ldr	r1, [pc, r1]
   28e1c:	str	r1, [r0, #540]	; 0x21c
   28e20:	ldr	r0, [r4]
   28e24:	ldr	r1, [pc, #740]	; 29110 <myhtml_tokenizer_state_init@@Base+0x9b0>
   28e28:	ldr	r1, [pc, r1]
   28e2c:	str	r1, [r0, #544]	; 0x220
   28e30:	ldr	r0, [r4]
   28e34:	ldr	r1, [pc, #728]	; 29114 <myhtml_tokenizer_state_init@@Base+0x9b4>
   28e38:	ldr	r1, [pc, r1]
   28e3c:	str	r1, [r0, #300]	; 0x12c
   28e40:	ldr	r0, [r4]
   28e44:	ldr	r1, [pc, #716]	; 29118 <myhtml_tokenizer_state_init@@Base+0x9b8>
   28e48:	ldr	r1, [pc, r1]
   28e4c:	str	r1, [r0, #344]	; 0x158
   28e50:	ldr	r0, [r4]
   28e54:	ldr	r1, [pc, #704]	; 2911c <myhtml_tokenizer_state_init@@Base+0x9bc>
   28e58:	ldr	r1, [pc, r1]
   28e5c:	str	r1, [r0, #348]	; 0x15c
   28e60:	ldr	r0, [r4]
   28e64:	ldr	r1, [pc, #692]	; 29120 <myhtml_tokenizer_state_init@@Base+0x9c0>
   28e68:	ldr	r1, [pc, r1]
   28e6c:	str	r1, [r0, #352]	; 0x160
   28e70:	ldr	r0, [r4]
   28e74:	ldr	r1, [pc, #680]	; 29124 <myhtml_tokenizer_state_init@@Base+0x9c4>
   28e78:	ldr	r1, [pc, r1]
   28e7c:	str	r1, [r0, #356]	; 0x164
   28e80:	ldr	r0, [r4]
   28e84:	ldr	r1, [pc, #668]	; 29128 <myhtml_tokenizer_state_init@@Base+0x9c8>
   28e88:	ldr	r1, [pc, r1]
   28e8c:	str	r1, [r0, #360]	; 0x168
   28e90:	ldr	r0, [r4]
   28e94:	ldr	r1, [pc, #656]	; 2912c <myhtml_tokenizer_state_init@@Base+0x9cc>
   28e98:	ldr	r1, [pc, r1]
   28e9c:	str	r1, [r0, #364]	; 0x16c
   28ea0:	ldr	r0, [r4]
   28ea4:	ldr	r1, [pc, #644]	; 29130 <myhtml_tokenizer_state_init@@Base+0x9d0>
   28ea8:	ldr	r1, [pc, r1]
   28eac:	str	r1, [r0, #368]	; 0x170
   28eb0:	ldr	r0, [r4]
   28eb4:	ldr	r1, [pc, #632]	; 29134 <myhtml_tokenizer_state_init@@Base+0x9d4>
   28eb8:	ldr	r1, [pc, r1]
   28ebc:	str	r1, [r0, #372]	; 0x174
   28ec0:	ldr	r0, [r4]
   28ec4:	ldr	r1, [pc, #620]	; 29138 <myhtml_tokenizer_state_init@@Base+0x9d8>
   28ec8:	ldr	r1, [pc, r1]
   28ecc:	str	r1, [r0, #376]	; 0x178
   28ed0:	ldr	r0, [r4]
   28ed4:	ldr	r1, [pc, #608]	; 2913c <myhtml_tokenizer_state_init@@Base+0x9dc>
   28ed8:	ldr	r1, [pc, r1]
   28edc:	str	r1, [r0, #380]	; 0x17c
   28ee0:	ldr	r0, [r4]
   28ee4:	ldr	r1, [pc, #596]	; 29140 <myhtml_tokenizer_state_init@@Base+0x9e0>
   28ee8:	ldr	r1, [pc, r1]
   28eec:	str	r1, [r0, #384]	; 0x180
   28ef0:	ldr	r0, [r4]
   28ef4:	ldr	r1, [pc, #584]	; 29144 <myhtml_tokenizer_state_init@@Base+0x9e4>
   28ef8:	ldr	r1, [pc, r1]
   28efc:	str	r1, [r0, #388]	; 0x184
   28f00:	ldr	r0, [r4]
   28f04:	ldr	r1, [pc, #572]	; 29148 <myhtml_tokenizer_state_init@@Base+0x9e8>
   28f08:	ldr	r1, [pc, r1]
   28f0c:	str	r1, [r0, #392]	; 0x188
   28f10:	ldr	r0, [r4]
   28f14:	ldr	r1, [pc, #560]	; 2914c <myhtml_tokenizer_state_init@@Base+0x9ec>
   28f18:	ldr	r1, [pc, r1]
   28f1c:	str	r1, [r0, #396]	; 0x18c
   28f20:	ldr	r0, [r4]
   28f24:	ldr	r1, [pc, #548]	; 29150 <myhtml_tokenizer_state_init@@Base+0x9f0>
   28f28:	ldr	r1, [pc, r1]
   28f2c:	str	r1, [r0, #400]	; 0x190
   28f30:	ldr	r0, [r4]
   28f34:	ldr	r1, [pc, #536]	; 29154 <myhtml_tokenizer_state_init@@Base+0x9f4>
   28f38:	ldr	r1, [pc, r1]
   28f3c:	str	r1, [r0, #404]	; 0x194
   28f40:	ldr	r0, [r4]
   28f44:	ldr	r1, [pc, #524]	; 29158 <myhtml_tokenizer_state_init@@Base+0x9f8>
   28f48:	ldr	r1, [pc, r1]
   28f4c:	str	r1, [r0, #408]	; 0x198
   28f50:	ldr	r0, [r4]
   28f54:	ldr	r1, [pc, #512]	; 2915c <myhtml_tokenizer_state_init@@Base+0x9fc>
   28f58:	ldr	r1, [pc, r1]
   28f5c:	str	r1, [r0, #556]	; 0x22c
   28f60:	mov	r0, #0
   28f64:	pop	{r4, sl, fp, pc}
   28f68:	muleq	lr, r4, pc	; <UNPREDICTABLE>
   28f6c:	andeq	lr, lr, r4, lsr #2
   28f70:	ldrdeq	lr, [lr], -r0
   28f74:	andeq	lr, lr, ip, lsr #2
   28f78:	andeq	sp, lr, r4, asr #30
   28f7c:	andeq	sp, lr, r4, lsr #31
   28f80:	andeq	lr, lr, r0, ror r0
   28f84:	muleq	lr, ip, lr
   28f88:	strheq	lr, [lr], -ip
   28f8c:	andeq	lr, lr, r8, ror #1
   28f90:	andeq	lr, lr, r4, lsl #1
   28f94:	andeq	lr, lr, r0, rrx
   28f98:	muleq	lr, r4, r0
   28f9c:	andeq	sp, lr, r0, ror pc
   28fa0:	andeq	lr, lr, ip, lsl #1
   28fa4:	andeq	sp, lr, r0, ror pc
   28fa8:	andeq	lr, lr, ip
   28fac:	andeq	sp, lr, r0, lsl #28
   28fb0:	muleq	lr, r4, lr
   28fb4:	andeq	sp, lr, r8, ror #30
   28fb8:	andeq	sp, lr, ip, asr lr
   28fbc:	andeq	lr, lr, r8, ror r0
   28fc0:	andeq	sp, lr, r8, asr #30
   28fc4:	andeq	sp, lr, ip, asr lr
   28fc8:			; <UNDEFINED> instruction: 0x000eddb0
   28fcc:	andeq	sp, lr, r0, asr #28
   28fd0:	andeq	sp, lr, r0, ror #27
   28fd4:	andeq	sp, lr, r0, asr #28
   28fd8:	muleq	lr, ip, sp
   28fdc:	muleq	lr, r0, pc	; <UNPREDICTABLE>
   28fe0:	ldrdeq	sp, [lr], -r0
   28fe4:	andeq	sp, lr, r0, lsr #28
   28fe8:	andeq	sp, lr, r8, lsl sp
   28fec:	andeq	sp, lr, r8, asr #28
   28ff0:	andeq	sp, lr, r0, ror pc
   28ff4:	andeq	sp, lr, r0, asr lr
   28ff8:	andeq	sp, lr, r8, ror sp
   28ffc:	andeq	sp, lr, r0, lsr #28
   29000:	andeq	sp, lr, r4, lsr #28
   29004:	andeq	sp, lr, r0, asr pc
   29008:	strdeq	sp, [lr], -r0
   2900c:	muleq	lr, r0, sp
   29010:	andeq	sp, lr, r4, lsr #26
   29014:	andeq	sp, lr, r0, lsl #27
   29018:	andeq	sp, lr, r0, lsl #26
   2901c:	andeq	sp, lr, r8, asr sp
   29020:	andeq	sp, lr, r4, lsl #26
   29024:	andeq	sp, lr, r8, ror lr
   29028:	andeq	sp, lr, r0, lsl #26
   2902c:	andeq	sp, lr, ip, asr #26
   29030:	andeq	sp, lr, r8, ror #27
   29034:	andeq	sp, lr, r4, lsl #26
   29038:	andeq	sp, lr, r4, lsl sp
   2903c:	andeq	sp, lr, ip, asr #28
   29040:	andeq	sp, lr, r8, lsr ip
   29044:	andeq	sp, lr, r4, lsr ip
   29048:	muleq	lr, ip, ip
   2904c:			; <UNDEFINED> instruction: 0x000eddbc
   29050:	muleq	lr, ip, fp
   29054:	andeq	sp, lr, r4, lsr #24
   29058:	andeq	sp, lr, r8, lsl #24
   2905c:	andeq	sp, lr, r4, asr #26
   29060:	andeq	sp, lr, r8, asr #23
   29064:	strdeq	sp, [lr], -ip
   29068:	andeq	sp, lr, r4, lsl ip
   2906c:	andeq	sp, lr, r4, lsl #27
   29070:	andeq	sp, lr, r8, ror sp
   29074:	andeq	sp, lr, r8, lsr #25
   29078:			; <UNDEFINED> instruction: 0x000edcb4
   2907c:	andeq	sp, lr, r8, lsr #25
   29080:	andeq	sp, lr, r0, ror #25
   29084:	strdeq	sp, [lr], -r0
   29088:	andeq	sp, lr, r4, lsr ip
   2908c:	andeq	sp, lr, r8, lsr #23
   29090:	andeq	sp, lr, r0, ror #24
   29094:	andeq	sp, lr, r8, lsr fp
   29098:	andeq	sp, lr, r8, lsl #24
   2909c:	andeq	sp, lr, r0, lsr #25
   290a0:	strdeq	sp, [lr], -ip
   290a4:			; <UNDEFINED> instruction: 0x000edbb4
   290a8:	muleq	lr, r0, sl
   290ac:	muleq	lr, ip, ip
   290b0:	andeq	sp, lr, r8, ror #20
   290b4:	andeq	sp, lr, r8, lsr fp
   290b8:			; <UNDEFINED> instruction: 0x000edabc
   290bc:	andeq	sp, lr, r0, lsl #24
   290c0:	andeq	sp, lr, r0, asr #20
   290c4:	andeq	sp, lr, r4, ror fp
   290c8:	andeq	sp, lr, r0, asr #22
   290cc:	andeq	sp, lr, r8, ror #21
   290d0:	andeq	sp, lr, r4, lsr #24
   290d4:	andeq	sp, lr, ip, lsr fp
   290d8:	strdeq	sp, [lr], -r8
   290dc:	andeq	sp, lr, ip, ror sl
   290e0:	andeq	sp, lr, r0, asr #18
   290e4:	andeq	sp, lr, ip, lsr #22
   290e8:	andeq	sp, lr, ip, lsr #18
   290ec:	andeq	sp, lr, r0, lsr r9
   290f0:	andeq	sp, lr, ip, lsr #18
   290f4:	andeq	sp, lr, r0, ror #20
   290f8:	andeq	sp, lr, r8, lsl #22
   290fc:	andeq	sp, lr, ip, lsr r9
   29100:	andeq	sp, lr, r4, asr fp
   29104:	andeq	sp, lr, r8, lsl fp
   29108:	andeq	sp, lr, ip, lsr sl
   2910c:	strdeq	sp, [lr], -r0
   29110:	andeq	sp, lr, r4, asr #19
   29114:	andeq	sp, lr, ip, lsl #18
   29118:	ldrdeq	sp, [lr], -r4
   2911c:	andeq	sp, lr, r0, lsl sl
   29120:	strdeq	sp, [lr], -ip
   29124:	andeq	sp, lr, r8, asr #20
   29128:	andeq	sp, lr, r8, lsl r9
   2912c:	andeq	sp, lr, r4, lsl #16
   29130:	andeq	sp, lr, r4, lsl #21
   29134:	andeq	sp, lr, r4, lsr #19
   29138:	andeq	sp, lr, ip, ror sl
   2913c:	andeq	sp, lr, r4, lsl #16
   29140:	andeq	sp, lr, ip, ror #18
   29144:	andeq	sp, lr, ip, lsl #19
   29148:	andeq	sp, lr, r8, asr #17
   2914c:			; <UNDEFINED> instruction: 0x000ed9b4
   29150:	andeq	sp, lr, r4, lsr #17
   29154:	andeq	sp, lr, r4, lsl r9
   29158:	andeq	sp, lr, r8, lsl r8
   2915c:	andeq	sp, lr, ip, lsr r8

00029160 <myhtml_tokenizer_state_destroy@@Base>:
   29160:	ldr	r0, [r0, #24]
   29164:	cmp	r0, #0
   29168:	bxeq	lr
   2916c:	b	12188 <mycore_free@plt>

00029170 <myhtml_tokenizer_state_doctype@@Base>:
   29170:	mov	r1, #52	; 0x34
   29174:	str	r1, [r0, #160]	; 0xa0
   29178:	mov	r0, r3
   2917c:	bx	lr

00029180 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   29180:	push	{r4, r5, r6, r7, fp, lr}
   29184:	add	fp, sp, #16
   29188:	mov	r4, r3
   2918c:	mov	r3, r1
   29190:	mov	r7, r0
   29194:	ldrb	r0, [r2, r4]
   29198:	sub	r5, r0, #9
   2919c:	ldr	r0, [fp, #8]
   291a0:	cmp	r5, #23
   291a4:	bhi	291ec <myhtml_tokenizer_state_before_doctype_name@@Base+0x6c>
   291a8:	mov	r6, #1
   291ac:	movw	r1, #27
   291b0:	movt	r1, #128	; 0x80
   291b4:	tst	r1, r6, lsl r5
   291b8:	beq	291ec <myhtml_tokenizer_state_before_doctype_name@@Base+0x6c>
   291bc:	cmp	r4, r0
   291c0:	bcs	291ec <myhtml_tokenizer_state_before_doctype_name@@Base+0x6c>
   291c4:	mov	r5, #1
   291c8:	ldrb	r6, [r2, r4]
   291cc:	sub	r6, r6, #9
   291d0:	cmp	r6, #23
   291d4:	bhi	291ec <myhtml_tokenizer_state_before_doctype_name@@Base+0x6c>
   291d8:	tst	r1, r5, lsl r6
   291dc:	beq	291ec <myhtml_tokenizer_state_before_doctype_name@@Base+0x6c>
   291e0:	add	r4, r4, #1
   291e4:	cmp	r4, r0
   291e8:	bcc	291c8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x48>
   291ec:	cmp	r4, r0
   291f0:	bcs	292cc <myhtml_tokenizer_state_before_doctype_name@@Base+0x14c>
   291f4:	ldrb	r0, [r2, r4]
   291f8:	cmp	r0, #62	; 0x3e
   291fc:	bne	2924c <myhtml_tokenizer_state_before_doctype_name@@Base+0xcc>
   29200:	mov	r0, #1
   29204:	str	r0, [r7, #176]	; 0xb0
   29208:	ldr	r0, [r7, #192]	; 0xc0
   2920c:	add	r4, r4, #1
   29210:	add	r0, r0, r4
   29214:	ldr	r1, [r3, #32]
   29218:	sub	r0, r0, r1
   2921c:	str	r0, [r3, #36]	; 0x24
   29220:	mov	r0, r7
   29224:	mov	r1, r4
   29228:	mov	r2, r3
   2922c:	bl	114bc <myhtml_queue_add@plt>
   29230:	cmp	r0, #0
   29234:	beq	29280 <myhtml_tokenizer_state_before_doctype_name@@Base+0x100>
   29238:	mov	r0, #69	; 0x45
   2923c:	str	r0, [r7, #160]	; 0xa0
   29240:	mov	r4, #0
   29244:	mov	r0, r4
   29248:	pop	{r4, r5, r6, r7, fp, pc}
   2924c:	ldr	r0, [r7, #56]	; 0x38
   29250:	ldr	r1, [r3, #40]	; 0x28
   29254:	cmp	r1, #0
   29258:	beq	292a0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x120>
   2925c:	ldr	r1, [r3, #44]	; 0x2c
   29260:	str	r0, [r1]
   29264:	str	r1, [r0, #4]
   29268:	str	r0, [r3, #44]	; 0x2c
   2926c:	mov	r1, #0
   29270:	str	r1, [r0]
   29274:	ldr	r0, [r3, #44]	; 0x2c
   29278:	str	r0, [r7, #56]	; 0x38
   2927c:	b	292b4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x134>
   29280:	ldr	r0, [r7, #8]
   29284:	ldr	r1, [r0, #16]
   29288:	bl	11d20 <myhtml_token_attr_create@plt>
   2928c:	str	r0, [r7, #56]	; 0x38
   29290:	cmp	r0, #0
   29294:	beq	29238 <myhtml_tokenizer_state_before_doctype_name@@Base+0xb8>
   29298:	mov	r0, #0
   2929c:	b	292c8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x148>
   292a0:	str	r0, [r3, #40]	; 0x28
   292a4:	str	r0, [r3, #44]	; 0x2c
   292a8:	mov	r1, #0
   292ac:	str	r1, [r0]
   292b0:	str	r1, [r0, #4]
   292b4:	ldr	r0, [r7, #56]	; 0x38
   292b8:	ldr	r1, [r7, #192]	; 0xc0
   292bc:	add	r1, r1, r4
   292c0:	str	r1, [r0, #48]	; 0x30
   292c4:	mov	r0, #53	; 0x35
   292c8:	str	r0, [r7, #160]	; 0xa0
   292cc:	mov	r0, r4
   292d0:	pop	{r4, r5, r6, r7, fp, pc}

000292d4 <myhtml_tokenizer_state_doctype_name@@Base>:
   292d4:	push	{r4, r5, fp, lr}
   292d8:	add	fp, sp, #8
   292dc:	mov	r4, r3
   292e0:	mov	r5, r0
   292e4:	ldr	r0, [fp, #8]
   292e8:	cmp	r3, r0
   292ec:	bcs	293f4 <myhtml_tokenizer_state_doctype_name@@Base+0x120>
   292f0:	mov	ip, r1
   292f4:	ldrb	r1, [r2, r4]
   292f8:	sub	r1, r1, #9
   292fc:	cmp	r1, #53	; 0x35
   29300:	bhi	293e8 <myhtml_tokenizer_state_doctype_name@@Base+0x114>
   29304:	add	r3, pc, #4
   29308:	ldr	r1, [r3, r1, lsl #2]
   2930c:	add	pc, r3, r1
   29310:	andeq	r0, r0, ip, ror #1
   29314:	andeq	r0, r0, ip, ror #1
   29318:	ldrdeq	r0, [r0], -r8
   2931c:	andeq	r0, r0, ip, ror #1
   29320:	andeq	r0, r0, ip, ror #1
   29324:	ldrdeq	r0, [r0], -r8
   29328:	ldrdeq	r0, [r0], -r8
   2932c:	ldrdeq	r0, [r0], -r8
   29330:	ldrdeq	r0, [r0], -r8
   29334:	ldrdeq	r0, [r0], -r8
   29338:	ldrdeq	r0, [r0], -r8
   2933c:	ldrdeq	r0, [r0], -r8
   29340:	ldrdeq	r0, [r0], -r8
   29344:	ldrdeq	r0, [r0], -r8
   29348:	ldrdeq	r0, [r0], -r8
   2934c:	ldrdeq	r0, [r0], -r8
   29350:	ldrdeq	r0, [r0], -r8
   29354:	ldrdeq	r0, [r0], -r8
   29358:	ldrdeq	r0, [r0], -r8
   2935c:	ldrdeq	r0, [r0], -r8
   29360:	ldrdeq	r0, [r0], -r8
   29364:	ldrdeq	r0, [r0], -r8
   29368:	ldrdeq	r0, [r0], -r8
   2936c:	andeq	r0, r0, ip, ror #1
   29370:	ldrdeq	r0, [r0], -r8
   29374:	ldrdeq	r0, [r0], -r8
   29378:	ldrdeq	r0, [r0], -r8
   2937c:	ldrdeq	r0, [r0], -r8
   29380:	ldrdeq	r0, [r0], -r8
   29384:	ldrdeq	r0, [r0], -r8
   29388:	ldrdeq	r0, [r0], -r8
   2938c:	ldrdeq	r0, [r0], -r8
   29390:	ldrdeq	r0, [r0], -r8
   29394:	ldrdeq	r0, [r0], -r8
   29398:	ldrdeq	r0, [r0], -r8
   2939c:	ldrdeq	r0, [r0], -r8
   293a0:	ldrdeq	r0, [r0], -r8
   293a4:	ldrdeq	r0, [r0], -r8
   293a8:	ldrdeq	r0, [r0], -r8
   293ac:	ldrdeq	r0, [r0], -r8
   293b0:	ldrdeq	r0, [r0], -r8
   293b4:	ldrdeq	r0, [r0], -r8
   293b8:	ldrdeq	r0, [r0], -r8
   293bc:	ldrdeq	r0, [r0], -r8
   293c0:	ldrdeq	r0, [r0], -r8
   293c4:	ldrdeq	r0, [r0], -r8
   293c8:	ldrdeq	r0, [r0], -r8
   293cc:	ldrdeq	r0, [r0], -r8
   293d0:	ldrdeq	r0, [r0], -r8
   293d4:	ldrdeq	r0, [r0], -r8
   293d8:	ldrdeq	r0, [r0], -r8
   293dc:	ldrdeq	r0, [r0], -r8
   293e0:	ldrdeq	r0, [r0], -r8
   293e4:	andeq	r0, r0, r0, lsr r1
   293e8:	add	r4, r4, #1
   293ec:	cmp	r4, r0
   293f0:	bcc	292f4 <myhtml_tokenizer_state_doctype_name@@Base+0x20>
   293f4:	mov	r0, r4
   293f8:	pop	{r4, r5, fp, pc}
   293fc:	ldr	r0, [r5, #56]	; 0x38
   29400:	ldr	r1, [r5, #192]	; 0xc0
   29404:	ldr	r2, [r0, #48]	; 0x30
   29408:	sub	r1, r1, r2
   2940c:	add	r1, r1, r4
   29410:	str	r1, [r0, #52]	; 0x34
   29414:	ldr	r0, [r5, #8]
   29418:	ldr	r1, [r0, #16]
   2941c:	bl	11d20 <myhtml_token_attr_create@plt>
   29420:	str	r0, [r5, #56]	; 0x38
   29424:	cmp	r0, #0
   29428:	movne	r0, #54	; 0x36
   2942c:	strne	r0, [r5, #160]	; 0xa0
   29430:	addne	r4, r4, #1
   29434:	movne	r0, r4
   29438:	popne	{r4, r5, fp, pc}
   2943c:	b	29488 <myhtml_tokenizer_state_doctype_name@@Base+0x1b4>
   29440:	ldr	r0, [r5, #56]	; 0x38
   29444:	ldr	r1, [r5, #192]	; 0xc0
   29448:	ldr	r2, [r0, #48]	; 0x30
   2944c:	sub	r2, r1, r2
   29450:	add	r2, r2, r4
   29454:	str	r2, [r0, #52]	; 0x34
   29458:	ldr	r0, [ip, #32]
   2945c:	sub	r0, r1, r0
   29460:	add	r0, r0, r4
   29464:	add	r0, r0, #1
   29468:	str	r0, [ip, #36]	; 0x24
   2946c:	add	r4, r4, #1
   29470:	mov	r0, r5
   29474:	mov	r1, r4
   29478:	mov	r2, ip
   2947c:	bl	114bc <myhtml_queue_add@plt>
   29480:	cmp	r0, #0
   29484:	beq	2949c <myhtml_tokenizer_state_doctype_name@@Base+0x1c8>
   29488:	mov	r0, #69	; 0x45
   2948c:	str	r0, [r5, #160]	; 0xa0
   29490:	mov	r4, #0
   29494:	mov	r0, r4
   29498:	pop	{r4, r5, fp, pc}
   2949c:	ldr	r0, [r5, #8]
   294a0:	ldr	r1, [r0, #16]
   294a4:	bl	11d20 <myhtml_token_attr_create@plt>
   294a8:	str	r0, [r5, #56]	; 0x38
   294ac:	cmp	r0, #0
   294b0:	movne	r0, #0
   294b4:	strne	r0, [r5, #160]	; 0xa0
   294b8:	b	29434 <myhtml_tokenizer_state_doctype_name@@Base+0x160>

000294bc <myhtml_tokenizer_state_after_doctype_name@@Base>:
   294bc:	push	{r4, r5, r6, r7, fp, lr}
   294c0:	add	fp, sp, #16
   294c4:	mov	r4, r3
   294c8:	mov	r3, r1
   294cc:	mov	r7, r0
   294d0:	ldrb	r0, [r2, r4]
   294d4:	sub	r5, r0, #9
   294d8:	ldr	r0, [fp, #8]
   294dc:	cmp	r5, #23
   294e0:	bhi	29528 <myhtml_tokenizer_state_after_doctype_name@@Base+0x6c>
   294e4:	mov	r6, #1
   294e8:	movw	r1, #27
   294ec:	movt	r1, #128	; 0x80
   294f0:	tst	r1, r6, lsl r5
   294f4:	beq	29528 <myhtml_tokenizer_state_after_doctype_name@@Base+0x6c>
   294f8:	cmp	r4, r0
   294fc:	bcs	29528 <myhtml_tokenizer_state_after_doctype_name@@Base+0x6c>
   29500:	mov	r5, #1
   29504:	ldrb	r6, [r2, r4]
   29508:	sub	r6, r6, #9
   2950c:	cmp	r6, #23
   29510:	bhi	29528 <myhtml_tokenizer_state_after_doctype_name@@Base+0x6c>
   29514:	tst	r1, r5, lsl r6
   29518:	beq	29528 <myhtml_tokenizer_state_after_doctype_name@@Base+0x6c>
   2951c:	add	r4, r4, #1
   29520:	cmp	r4, r0
   29524:	bcc	29504 <myhtml_tokenizer_state_after_doctype_name@@Base+0x48>
   29528:	cmp	r4, r0
   2952c:	bcs	29598 <myhtml_tokenizer_state_after_doctype_name@@Base+0xdc>
   29530:	ldrb	r0, [r2, r4]
   29534:	cmp	r0, #62	; 0x3e
   29538:	bne	29584 <myhtml_tokenizer_state_after_doctype_name@@Base+0xc8>
   2953c:	ldr	r0, [r7, #192]	; 0xc0
   29540:	add	r4, r4, #1
   29544:	add	r0, r0, r4
   29548:	ldr	r1, [r3, #32]
   2954c:	sub	r0, r0, r1
   29550:	str	r0, [r3, #36]	; 0x24
   29554:	mov	r0, r7
   29558:	mov	r1, r4
   2955c:	mov	r2, r3
   29560:	bl	114bc <myhtml_queue_add@plt>
   29564:	cmp	r0, #0
   29568:	movne	r0, #69	; 0x45
   2956c:	strne	r0, [r7, #160]	; 0xa0
   29570:	movne	r4, #0
   29574:	movne	r0, r4
   29578:	popne	{r4, r5, r6, r7, fp, pc}
   2957c:	mov	r0, #0
   29580:	b	29594 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   29584:	ldr	r0, [r7, #192]	; 0xc0
   29588:	add	r0, r0, r4
   2958c:	str	r0, [r3, #12]
   29590:	mov	r0, #68	; 0x44
   29594:	str	r0, [r7, #160]	; 0xa0
   29598:	mov	r0, r4
   2959c:	pop	{r4, r5, r6, r7, fp, pc}

000295a0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   295a0:	push	{r4, r5, r6, r7, fp, lr}
   295a4:	add	fp, sp, #16
   295a8:	mov	r6, r3
   295ac:	mov	r5, r1
   295b0:	mov	r4, r0
   295b4:	ldr	r1, [r0, #192]	; 0xc0
   295b8:	ldr	r0, [fp, #8]
   295bc:	add	r2, r1, r0
   295c0:	ldr	r1, [r5, #12]
   295c4:	add	r3, r1, #6
   295c8:	cmp	r3, r2
   295cc:	pophi	{r4, r5, r6, r7, fp, pc}
   295d0:	mov	r0, r4
   295d4:	mov	r2, #6
   295d8:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   295dc:	mov	r7, r0
   295e0:	ldr	r1, [pc, #356]	; 2974c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1ac>
   295e4:	add	r1, pc, r1
   295e8:	mov	r2, #6
   295ec:	bl	11714 <mycore_strncasecmp@plt>
   295f0:	cmp	r0, #0
   295f4:	beq	2962c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x8c>
   295f8:	ldr	r1, [pc, #336]	; 29750 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1b0>
   295fc:	add	r1, pc, r1
   29600:	mov	r0, r7
   29604:	mov	r2, #6
   29608:	bl	11714 <mycore_strncasecmp@plt>
   2960c:	cmp	r0, #0
   29610:	beq	29660 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xc0>
   29614:	mov	r0, #66	; 0x42
   29618:	str	r0, [r4, #160]	; 0xa0
   2961c:	mov	r0, #1
   29620:	str	r0, [r4, #176]	; 0xb0
   29624:	mov	r0, r6
   29628:	pop	{r4, r5, r6, r7, fp, pc}
   2962c:	ldr	r0, [r4, #56]	; 0x38
   29630:	ldr	r1, [r5, #40]	; 0x28
   29634:	cmp	r1, #0
   29638:	beq	29694 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xf4>
   2963c:	ldr	r1, [r5, #44]	; 0x2c
   29640:	str	r0, [r1]
   29644:	str	r1, [r0, #4]
   29648:	str	r0, [r5, #44]	; 0x2c
   2964c:	mov	r1, #0
   29650:	str	r1, [r0]
   29654:	ldr	r0, [r5, #44]	; 0x2c
   29658:	str	r0, [r4, #56]	; 0x38
   2965c:	b	296a8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x108>
   29660:	ldr	r0, [r4, #56]	; 0x38
   29664:	ldr	r1, [r5, #40]	; 0x28
   29668:	cmp	r1, #0
   2966c:	beq	296dc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x13c>
   29670:	ldr	r1, [r5, #44]	; 0x2c
   29674:	str	r0, [r1]
   29678:	str	r1, [r0, #4]
   2967c:	str	r0, [r5, #44]	; 0x2c
   29680:	mov	r1, #0
   29684:	str	r1, [r0]
   29688:	ldr	r0, [r5, #44]	; 0x2c
   2968c:	str	r0, [r4, #56]	; 0x38
   29690:	b	296f0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x150>
   29694:	str	r0, [r5, #40]	; 0x28
   29698:	str	r0, [r5, #44]	; 0x2c
   2969c:	mov	r1, #0
   296a0:	str	r1, [r0]
   296a4:	str	r1, [r0, #4]
   296a8:	ldr	r0, [r5, #12]
   296ac:	ldr	r1, [r4, #56]	; 0x38
   296b0:	mov	r2, #6
   296b4:	str	r0, [r1, #56]	; 0x38
   296b8:	str	r2, [r1, #60]	; 0x3c
   296bc:	ldr	r0, [r4, #8]
   296c0:	ldr	r1, [r0, #16]
   296c4:	bl	11d20 <myhtml_token_attr_create@plt>
   296c8:	str	r0, [r4, #56]	; 0x38
   296cc:	cmp	r0, #0
   296d0:	beq	2973c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   296d4:	mov	r0, #56	; 0x38
   296d8:	b	29720 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x180>
   296dc:	str	r0, [r5, #40]	; 0x28
   296e0:	str	r0, [r5, #44]	; 0x2c
   296e4:	mov	r1, #0
   296e8:	str	r1, [r0]
   296ec:	str	r1, [r0, #4]
   296f0:	ldr	r0, [r5, #12]
   296f4:	ldr	r1, [r4, #56]	; 0x38
   296f8:	mov	r2, #6
   296fc:	str	r0, [r1, #56]	; 0x38
   29700:	str	r2, [r1, #60]	; 0x3c
   29704:	ldr	r0, [r4, #8]
   29708:	ldr	r1, [r0, #16]
   2970c:	bl	11d20 <myhtml_token_attr_create@plt>
   29710:	str	r0, [r4, #56]	; 0x38
   29714:	cmp	r0, #0
   29718:	beq	2973c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   2971c:	mov	r0, #59	; 0x3b
   29720:	str	r0, [r4, #160]	; 0xa0
   29724:	ldr	r0, [r4, #76]	; 0x4c
   29728:	ldr	r0, [r0, #12]
   2972c:	ldr	r1, [r5, #12]
   29730:	add	r1, r1, #6
   29734:	sub	r0, r1, r0
   29738:	pop	{r4, r5, r6, r7, fp, pc}
   2973c:	mov	r0, #69	; 0x45
   29740:	str	r0, [r4, #160]	; 0xa0
   29744:	mov	r0, #0
   29748:	pop	{r4, r5, r6, r7, fp, pc}
   2974c:	andeq	r3, sp, r2, lsl r4
   29750:	andeq	r3, sp, ip, lsl #8

00029754 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   29754:	push	{r4, r5, r6, sl, fp, lr}
   29758:	add	fp, sp, #16
   2975c:	mov	r4, r3
   29760:	mov	ip, r1
   29764:	mov	r6, r0
   29768:	ldrb	r0, [r2, r3]
   2976c:	sub	r3, r0, #9
   29770:	ldr	r0, [fp, #8]
   29774:	cmp	r3, #23
   29778:	bhi	297c0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x6c>
   2977c:	mov	r5, #1
   29780:	movw	r1, #27
   29784:	movt	r1, #128	; 0x80
   29788:	tst	r1, r5, lsl r3
   2978c:	beq	297c0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x6c>
   29790:	cmp	r4, r0
   29794:	bcs	297c0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x6c>
   29798:	mov	r3, #1
   2979c:	ldrb	r5, [r2, r4]
   297a0:	sub	r5, r5, #9
   297a4:	cmp	r5, #23
   297a8:	bhi	297c0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x6c>
   297ac:	tst	r1, r3, lsl r5
   297b0:	beq	297c0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x6c>
   297b4:	add	r4, r4, #1
   297b8:	cmp	r4, r0
   297bc:	bcc	2979c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x48>
   297c0:	cmp	r4, r0
   297c4:	bcs	29864 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x110>
   297c8:	ldrb	r1, [r2, r4]
   297cc:	cmp	r1, #34	; 0x22
   297d0:	beq	297e4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x90>
   297d4:	cmp	r1, #39	; 0x27
   297d8:	bne	29808 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb4>
   297dc:	mov	r0, #58	; 0x3a
   297e0:	b	297e8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x94>
   297e4:	mov	r0, #57	; 0x39
   297e8:	ldr	r1, [r6, #56]	; 0x38
   297ec:	ldr	r2, [r6, #192]	; 0xc0
   297f0:	mov	r3, #0
   297f4:	add	r2, r4, r2
   297f8:	add	r2, r2, #1
   297fc:	str	r2, [r1, #56]	; 0x38
   29800:	str	r3, [r1, #60]	; 0x3c
   29804:	b	2986c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x118>
   29808:	mov	r0, #1
   2980c:	str	r0, [r6, #176]	; 0xb0
   29810:	mov	r0, #66	; 0x42
   29814:	cmp	r1, #62	; 0x3e
   29818:	bne	2986c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x118>
   2981c:	ldr	r0, [r6, #192]	; 0xc0
   29820:	add	r4, r4, #1
   29824:	add	r0, r0, r4
   29828:	ldr	r1, [ip, #32]
   2982c:	sub	r0, r0, r1
   29830:	str	r0, [ip, #36]	; 0x24
   29834:	mov	r0, r6
   29838:	mov	r1, r4
   2983c:	mov	r2, ip
   29840:	bl	114bc <myhtml_queue_add@plt>
   29844:	cmp	r0, #0
   29848:	movne	r0, #69	; 0x45
   2984c:	strne	r0, [r6, #160]	; 0xa0
   29850:	movne	r4, #0
   29854:	movne	r0, r4
   29858:	popne	{r4, r5, r6, sl, fp, pc}
   2985c:	mov	r0, #0
   29860:	str	r0, [r6, #160]	; 0xa0
   29864:	mov	r0, r4
   29868:	pop	{r4, r5, r6, sl, fp, pc}
   2986c:	str	r0, [r6, #160]	; 0xa0
   29870:	add	r4, r4, #1
   29874:	mov	r0, r4
   29878:	pop	{r4, r5, r6, sl, fp, pc}

0002987c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   2987c:	push	{r4, r5, r6, sl, fp, lr}
   29880:	add	fp, sp, #16
   29884:	mov	r4, r3
   29888:	mov	r5, r0
   2988c:	ldr	r0, [fp, #8]
   29890:	cmp	r3, r0
   29894:	bcs	298c0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x44>
   29898:	mov	r6, r1
   2989c:	ldr	r1, [fp, #12]
   298a0:	ldrb	r3, [r2, r4]
   298a4:	cmp	r3, r1
   298a8:	beq	298c8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   298ac:	cmp	r3, #62	; 0x3e
   298b0:	beq	29910 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x94>
   298b4:	add	r4, r4, #1
   298b8:	cmp	r4, r0
   298bc:	bcc	298a0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x24>
   298c0:	mov	r0, r4
   298c4:	pop	{r4, r5, r6, sl, fp, pc}
   298c8:	ldr	r0, [r5, #56]	; 0x38
   298cc:	ldr	r1, [r5, #192]	; 0xc0
   298d0:	ldr	r2, [r0, #56]	; 0x38
   298d4:	sub	r1, r1, r2
   298d8:	add	r1, r1, r4
   298dc:	str	r1, [r0, #60]	; 0x3c
   298e0:	ldr	r1, [r6, #40]	; 0x28
   298e4:	cmp	r1, #0
   298e8:	beq	2996c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf0>
   298ec:	ldr	r1, [r6, #44]	; 0x2c
   298f0:	str	r0, [r1]
   298f4:	str	r1, [r0, #4]
   298f8:	str	r0, [r6, #44]	; 0x2c
   298fc:	mov	r1, #0
   29900:	str	r1, [r0]
   29904:	ldr	r0, [r6, #44]	; 0x2c
   29908:	str	r0, [r5, #56]	; 0x38
   2990c:	b	29980 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x104>
   29910:	mov	r0, #1
   29914:	str	r0, [r5, #176]	; 0xb0
   29918:	ldr	r0, [r5, #56]	; 0x38
   2991c:	ldr	r1, [r5, #192]	; 0xc0
   29920:	add	r3, r1, r4
   29924:	ldr	r2, [r0, #56]	; 0x38
   29928:	cmp	r3, r2
   2992c:	bls	299d8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x15c>
   29930:	sub	r1, r1, r2
   29934:	add	r1, r1, r4
   29938:	str	r1, [r0, #60]	; 0x3c
   2993c:	ldr	r1, [r6, #40]	; 0x28
   29940:	cmp	r1, #0
   29944:	beq	299ac <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x130>
   29948:	ldr	r1, [r6, #44]	; 0x2c
   2994c:	str	r0, [r1]
   29950:	str	r1, [r0, #4]
   29954:	str	r0, [r6, #44]	; 0x2c
   29958:	mov	r1, #0
   2995c:	str	r1, [r0]
   29960:	ldr	r0, [r6, #44]	; 0x2c
   29964:	str	r0, [r5, #56]	; 0x38
   29968:	b	299c0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x144>
   2996c:	str	r0, [r6, #40]	; 0x28
   29970:	str	r0, [r6, #44]	; 0x2c
   29974:	mov	r1, #0
   29978:	str	r1, [r0]
   2997c:	str	r1, [r0, #4]
   29980:	ldr	r0, [r5, #8]
   29984:	ldr	r1, [r0, #16]
   29988:	bl	11d20 <myhtml_token_attr_create@plt>
   2998c:	str	r0, [r5, #56]	; 0x38
   29990:	cmp	r0, #0
   29994:	movne	r0, #59	; 0x3b
   29998:	strne	r0, [r5, #160]	; 0xa0
   2999c:	addne	r4, r4, #1
   299a0:	movne	r0, r4
   299a4:	popne	{r4, r5, r6, sl, fp, pc}
   299a8:	b	29a0c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x190>
   299ac:	str	r0, [r6, #40]	; 0x28
   299b0:	str	r0, [r6, #44]	; 0x2c
   299b4:	mov	r1, #0
   299b8:	str	r1, [r0]
   299bc:	str	r1, [r0, #4]
   299c0:	ldr	r0, [r5, #8]
   299c4:	ldr	r1, [r0, #16]
   299c8:	bl	11d20 <myhtml_token_attr_create@plt>
   299cc:	str	r0, [r5, #56]	; 0x38
   299d0:	cmp	r0, #0
   299d4:	beq	29a0c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x190>
   299d8:	ldr	r0, [r6, #32]
   299dc:	ldr	r1, [r5, #192]	; 0xc0
   299e0:	sub	r0, r1, r0
   299e4:	add	r0, r0, r4
   299e8:	add	r0, r0, #1
   299ec:	str	r0, [r6, #36]	; 0x24
   299f0:	add	r4, r4, #1
   299f4:	mov	r0, r5
   299f8:	mov	r1, r4
   299fc:	mov	r2, r6
   29a00:	bl	114bc <myhtml_queue_add@plt>
   29a04:	cmp	r0, #0
   29a08:	beq	29a20 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1a4>
   29a0c:	mov	r0, #69	; 0x45
   29a10:	str	r0, [r5, #160]	; 0xa0
   29a14:	mov	r4, #0
   29a18:	mov	r0, r4
   29a1c:	pop	{r4, r5, r6, sl, fp, pc}
   29a20:	mov	r0, #0
   29a24:	str	r0, [r5, #160]	; 0xa0
   29a28:	mov	r0, r4
   29a2c:	pop	{r4, r5, r6, sl, fp, pc}

00029a30 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   29a30:	push	{fp, lr}
   29a34:	mov	fp, sp
   29a38:	sub	sp, sp, #8
   29a3c:	mov	ip, #34	; 0x22
   29a40:	str	ip, [sp, #4]
   29a44:	ldr	ip, [fp, #8]
   29a48:	str	ip, [sp]
   29a4c:	bl	11918 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   29a50:	mov	sp, fp
   29a54:	pop	{fp, pc}

00029a58 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   29a58:	push	{fp, lr}
   29a5c:	mov	fp, sp
   29a60:	sub	sp, sp, #8
   29a64:	mov	ip, #39	; 0x27
   29a68:	str	ip, [sp, #4]
   29a6c:	ldr	ip, [fp, #8]
   29a70:	str	ip, [sp]
   29a74:	bl	11918 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   29a78:	mov	sp, fp
   29a7c:	pop	{fp, pc}

00029a80 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   29a80:	push	{r4, r5, r6, sl, fp, lr}
   29a84:	add	fp, sp, #16
   29a88:	mov	r4, r3
   29a8c:	mov	ip, r1
   29a90:	mov	r6, r0
   29a94:	ldrb	r0, [r2, r3]
   29a98:	sub	r3, r0, #9
   29a9c:	ldr	r0, [fp, #8]
   29aa0:	cmp	r3, #23
   29aa4:	bhi	29aec <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x6c>
   29aa8:	mov	r5, #1
   29aac:	movw	r1, #27
   29ab0:	movt	r1, #128	; 0x80
   29ab4:	tst	r1, r5, lsl r3
   29ab8:	beq	29aec <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x6c>
   29abc:	cmp	r4, r0
   29ac0:	bcs	29aec <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x6c>
   29ac4:	mov	r3, #1
   29ac8:	ldrb	r5, [r2, r4]
   29acc:	sub	r5, r5, #9
   29ad0:	cmp	r5, #23
   29ad4:	bhi	29aec <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x6c>
   29ad8:	tst	r1, r3, lsl r5
   29adc:	beq	29aec <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x6c>
   29ae0:	add	r4, r4, #1
   29ae4:	cmp	r4, r0
   29ae8:	bcc	29ac8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x48>
   29aec:	cmp	r4, r0
   29af0:	bcs	29b9c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x11c>
   29af4:	ldrb	r0, [r2, r4]
   29af8:	cmp	r0, #34	; 0x22
   29afc:	beq	29b18 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x98>
   29b00:	cmp	r0, #62	; 0x3e
   29b04:	beq	29b3c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xbc>
   29b08:	cmp	r0, #39	; 0x27
   29b0c:	bne	29b8c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x10c>
   29b10:	mov	r0, #64	; 0x40
   29b14:	b	29b1c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x9c>
   29b18:	mov	r0, #63	; 0x3f
   29b1c:	ldr	r1, [r6, #56]	; 0x38
   29b20:	ldr	r2, [r6, #192]	; 0xc0
   29b24:	mov	r3, #0
   29b28:	add	r4, r4, #1
   29b2c:	add	r2, r4, r2
   29b30:	str	r2, [r1, #56]	; 0x38
   29b34:	str	r3, [r1, #60]	; 0x3c
   29b38:	b	29b80 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x100>
   29b3c:	ldr	r0, [r6, #192]	; 0xc0
   29b40:	add	r4, r4, #1
   29b44:	add	r0, r0, r4
   29b48:	ldr	r1, [ip, #32]
   29b4c:	sub	r0, r0, r1
   29b50:	str	r0, [ip, #36]	; 0x24
   29b54:	mov	r0, r6
   29b58:	mov	r1, r4
   29b5c:	mov	r2, ip
   29b60:	bl	114bc <myhtml_queue_add@plt>
   29b64:	cmp	r0, #0
   29b68:	movne	r0, #69	; 0x45
   29b6c:	strne	r0, [r6, #160]	; 0xa0
   29b70:	movne	r4, #0
   29b74:	movne	r0, r4
   29b78:	popne	{r4, r5, r6, sl, fp, pc}
   29b7c:	mov	r0, #0
   29b80:	str	r0, [r6, #160]	; 0xa0
   29b84:	mov	r0, r4
   29b88:	pop	{r4, r5, r6, sl, fp, pc}
   29b8c:	mov	r0, #66	; 0x42
   29b90:	str	r0, [r6, #160]	; 0xa0
   29b94:	mov	r0, #1
   29b98:	str	r0, [r6, #176]	; 0xb0
   29b9c:	mov	r0, r4
   29ba0:	pop	{r4, r5, r6, sl, fp, pc}

00029ba4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   29ba4:	push	{r4, r5, r6, sl, fp, lr}
   29ba8:	add	fp, sp, #16
   29bac:	mov	r4, r3
   29bb0:	mov	r5, r0
   29bb4:	ldr	r0, [fp, #8]
   29bb8:	cmp	r3, r0
   29bbc:	bcs	29be8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x44>
   29bc0:	mov	r6, r1
   29bc4:	ldr	r1, [fp, #12]
   29bc8:	ldrb	r3, [r2, r4]
   29bcc:	cmp	r3, r1
   29bd0:	beq	29bf0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   29bd4:	cmp	r3, #62	; 0x3e
   29bd8:	beq	29c38 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x94>
   29bdc:	add	r4, r4, #1
   29be0:	cmp	r4, r0
   29be4:	bcc	29bc8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x24>
   29be8:	mov	r0, r4
   29bec:	pop	{r4, r5, r6, sl, fp, pc}
   29bf0:	ldr	r0, [r5, #56]	; 0x38
   29bf4:	ldr	r1, [r5, #192]	; 0xc0
   29bf8:	ldr	r2, [r0, #56]	; 0x38
   29bfc:	sub	r1, r1, r2
   29c00:	add	r1, r1, r4
   29c04:	str	r1, [r0, #60]	; 0x3c
   29c08:	ldr	r1, [r6, #40]	; 0x28
   29c0c:	cmp	r1, #0
   29c10:	beq	29c94 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf0>
   29c14:	ldr	r1, [r6, #44]	; 0x2c
   29c18:	str	r0, [r1]
   29c1c:	str	r1, [r0, #4]
   29c20:	str	r0, [r6, #44]	; 0x2c
   29c24:	mov	r1, #0
   29c28:	str	r1, [r0]
   29c2c:	ldr	r0, [r6, #44]	; 0x2c
   29c30:	str	r0, [r5, #56]	; 0x38
   29c34:	b	29ca8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x104>
   29c38:	mov	r0, #1
   29c3c:	str	r0, [r5, #176]	; 0xb0
   29c40:	ldr	r0, [r5, #56]	; 0x38
   29c44:	ldr	r1, [r5, #192]	; 0xc0
   29c48:	add	r3, r1, r4
   29c4c:	ldr	r2, [r0, #56]	; 0x38
   29c50:	cmp	r3, r2
   29c54:	bls	29d00 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x15c>
   29c58:	sub	r1, r1, r2
   29c5c:	add	r1, r1, r4
   29c60:	str	r1, [r0, #60]	; 0x3c
   29c64:	ldr	r1, [r6, #40]	; 0x28
   29c68:	cmp	r1, #0
   29c6c:	beq	29cd4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x130>
   29c70:	ldr	r1, [r6, #44]	; 0x2c
   29c74:	str	r0, [r1]
   29c78:	str	r1, [r0, #4]
   29c7c:	str	r0, [r6, #44]	; 0x2c
   29c80:	mov	r1, #0
   29c84:	str	r1, [r0]
   29c88:	ldr	r0, [r6, #44]	; 0x2c
   29c8c:	str	r0, [r5, #56]	; 0x38
   29c90:	b	29ce8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x144>
   29c94:	str	r0, [r6, #40]	; 0x28
   29c98:	str	r0, [r6, #44]	; 0x2c
   29c9c:	mov	r1, #0
   29ca0:	str	r1, [r0]
   29ca4:	str	r1, [r0, #4]
   29ca8:	ldr	r0, [r5, #8]
   29cac:	ldr	r1, [r0, #16]
   29cb0:	bl	11d20 <myhtml_token_attr_create@plt>
   29cb4:	str	r0, [r5, #56]	; 0x38
   29cb8:	cmp	r0, #0
   29cbc:	movne	r0, #65	; 0x41
   29cc0:	strne	r0, [r5, #160]	; 0xa0
   29cc4:	addne	r4, r4, #1
   29cc8:	movne	r0, r4
   29ccc:	popne	{r4, r5, r6, sl, fp, pc}
   29cd0:	b	29d34 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x190>
   29cd4:	str	r0, [r6, #40]	; 0x28
   29cd8:	str	r0, [r6, #44]	; 0x2c
   29cdc:	mov	r1, #0
   29ce0:	str	r1, [r0]
   29ce4:	str	r1, [r0, #4]
   29ce8:	ldr	r0, [r5, #8]
   29cec:	ldr	r1, [r0, #16]
   29cf0:	bl	11d20 <myhtml_token_attr_create@plt>
   29cf4:	str	r0, [r5, #56]	; 0x38
   29cf8:	cmp	r0, #0
   29cfc:	beq	29d34 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x190>
   29d00:	ldr	r0, [r6, #32]
   29d04:	ldr	r1, [r5, #192]	; 0xc0
   29d08:	sub	r0, r1, r0
   29d0c:	add	r0, r0, r4
   29d10:	add	r0, r0, #1
   29d14:	str	r0, [r6, #36]	; 0x24
   29d18:	add	r4, r4, #1
   29d1c:	mov	r0, r5
   29d20:	mov	r1, r4
   29d24:	mov	r2, r6
   29d28:	bl	114bc <myhtml_queue_add@plt>
   29d2c:	cmp	r0, #0
   29d30:	beq	29d48 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1a4>
   29d34:	mov	r0, #69	; 0x45
   29d38:	str	r0, [r5, #160]	; 0xa0
   29d3c:	mov	r4, #0
   29d40:	mov	r0, r4
   29d44:	pop	{r4, r5, r6, sl, fp, pc}
   29d48:	mov	r0, #0
   29d4c:	str	r0, [r5, #160]	; 0xa0
   29d50:	mov	r0, r4
   29d54:	pop	{r4, r5, r6, sl, fp, pc}

00029d58 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   29d58:	push	{fp, lr}
   29d5c:	mov	fp, sp
   29d60:	sub	sp, sp, #8
   29d64:	mov	ip, #34	; 0x22
   29d68:	str	ip, [sp, #4]
   29d6c:	ldr	ip, [fp, #8]
   29d70:	str	ip, [sp]
   29d74:	bl	11e94 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   29d78:	mov	sp, fp
   29d7c:	pop	{fp, pc}

00029d80 <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   29d80:	push	{fp, lr}
   29d84:	mov	fp, sp
   29d88:	sub	sp, sp, #8
   29d8c:	mov	ip, #39	; 0x27
   29d90:	str	ip, [sp, #4]
   29d94:	ldr	ip, [fp, #8]
   29d98:	str	ip, [sp]
   29d9c:	bl	11e94 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   29da0:	mov	sp, fp
   29da4:	pop	{fp, pc}

00029da8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   29da8:	push	{r4, r5, r6, sl, fp, lr}
   29dac:	add	fp, sp, #16
   29db0:	mov	r4, r3
   29db4:	mov	ip, r1
   29db8:	mov	r6, r0
   29dbc:	ldrb	r0, [r2, r3]
   29dc0:	sub	r3, r0, #9
   29dc4:	ldr	r0, [fp, #8]
   29dc8:	cmp	r3, #23
   29dcc:	bhi	29e14 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x6c>
   29dd0:	mov	r5, #1
   29dd4:	movw	r1, #27
   29dd8:	movt	r1, #128	; 0x80
   29ddc:	tst	r1, r5, lsl r3
   29de0:	beq	29e14 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x6c>
   29de4:	cmp	r4, r0
   29de8:	bcs	29e14 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x6c>
   29dec:	mov	r3, #1
   29df0:	ldrb	r5, [r2, r4]
   29df4:	sub	r5, r5, #9
   29df8:	cmp	r5, #23
   29dfc:	bhi	29e14 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x6c>
   29e00:	tst	r1, r3, lsl r5
   29e04:	beq	29e14 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x6c>
   29e08:	add	r4, r4, #1
   29e0c:	cmp	r4, r0
   29e10:	bcc	29df0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x48>
   29e14:	cmp	r4, r0
   29e18:	bcs	29e78 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd0>
   29e1c:	ldrb	r0, [r2, r4]
   29e20:	cmp	r0, #62	; 0x3e
   29e24:	bne	29e70 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xc8>
   29e28:	ldr	r0, [r6, #192]	; 0xc0
   29e2c:	add	r4, r4, #1
   29e30:	add	r0, r0, r4
   29e34:	ldr	r1, [ip, #32]
   29e38:	sub	r0, r0, r1
   29e3c:	str	r0, [ip, #36]	; 0x24
   29e40:	mov	r0, r6
   29e44:	mov	r1, r4
   29e48:	mov	r2, ip
   29e4c:	bl	114bc <myhtml_queue_add@plt>
   29e50:	cmp	r0, #0
   29e54:	movne	r0, #69	; 0x45
   29e58:	strne	r0, [r6, #160]	; 0xa0
   29e5c:	movne	r4, #0
   29e60:	movne	r0, r4
   29e64:	popne	{r4, r5, r6, sl, fp, pc}
   29e68:	mov	r0, #0
   29e6c:	b	29e74 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   29e70:	mov	r0, #66	; 0x42
   29e74:	str	r0, [r6, #160]	; 0xa0
   29e78:	mov	r0, r4
   29e7c:	pop	{r4, r5, r6, sl, fp, pc}

00029e80 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   29e80:	push	{r4, r5, fp, lr}
   29e84:	add	fp, sp, #8
   29e88:	mov	r4, r3
   29e8c:	mov	r3, r1
   29e90:	mov	r5, r0
   29e94:	ldr	r0, [fp, #8]
   29e98:	cmp	r4, r0
   29e9c:	bcs	29ee4 <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   29ea0:	ldrb	r1, [r2, r4]
   29ea4:	add	r4, r4, #1
   29ea8:	cmp	r1, #62	; 0x3e
   29eac:	bne	29e98 <myhtml_tokenizer_state_bogus_doctype@@Base+0x18>
   29eb0:	ldr	r0, [r3, #32]
   29eb4:	ldr	r1, [r5, #192]	; 0xc0
   29eb8:	sub	r0, r1, r0
   29ebc:	add	r0, r0, r4
   29ec0:	str	r0, [r3, #36]	; 0x24
   29ec4:	mov	r0, r5
   29ec8:	mov	r1, r4
   29ecc:	mov	r2, r3
   29ed0:	bl	114bc <myhtml_queue_add@plt>
   29ed4:	cmp	r0, #0
   29ed8:	movwne	r0, #69	; 0x45
   29edc:	str	r0, [r5, #160]	; 0xa0
   29ee0:	movne	r4, #0
   29ee4:	mov	r0, r4
   29ee8:	pop	{r4, r5, fp, pc}

00029eec <myhtml_tokenizer_end_state_data@@Base>:
   29eec:	push	{r4, r5, fp, lr}
   29ef0:	add	fp, sp, #8
   29ef4:	sub	sp, sp, #8
   29ef8:	mov	r5, r3
   29efc:	ldr	r3, [r0, #192]	; 0xc0
   29f00:	ldr	r4, [fp, #8]
   29f04:	add	r3, r3, r4
   29f08:	ldr	r4, [r1, #32]
   29f0c:	sub	r4, r3, r4
   29f10:	str	r4, [r1, #36]	; 0x24
   29f14:	mov	r4, #512	; 0x200
   29f18:	str	r4, [sp]
   29f1c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29f20:	mov	r0, r5
   29f24:	sub	sp, fp, #8
   29f28:	pop	{r4, r5, fp, pc}

00029f2c <myhtml_tokenizer_end_state_tag_open@@Base>:
   29f2c:	push	{r4, r5, r6, r7, fp, lr}
   29f30:	add	fp, sp, #16
   29f34:	sub	sp, sp, #8
   29f38:	mov	r7, r3
   29f3c:	mov	r6, r1
   29f40:	mov	r5, r0
   29f44:	ldr	r0, [r0, #192]	; 0xc0
   29f48:	ldr	r1, [fp, #8]
   29f4c:	add	r3, r0, r1
   29f50:	ldr	r1, [r6, #24]
   29f54:	ldr	r4, [r6, #32]
   29f58:	sub	r4, r3, r4
   29f5c:	str	r4, [r6, #36]	; 0x24
   29f60:	cmp	r1, r3
   29f64:	bcs	29fd8 <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   29f68:	cmp	r1, #0
   29f6c:	beq	29fb0 <myhtml_tokenizer_end_state_tag_open@@Base+0x84>
   29f70:	add	r0, r0, r7
   29f74:	sub	r0, r0, r1
   29f78:	str	r0, [r6, #28]
   29f7c:	mov	r0, r5
   29f80:	mov	r1, r6
   29f84:	mov	r3, r7
   29f88:	bl	11ffc <myhtml_check_tag_parser@plt>
   29f8c:	mov	r0, r5
   29f90:	mov	r1, r7
   29f94:	mov	r2, r6
   29f98:	bl	114bc <myhtml_queue_add@plt>
   29f9c:	cmp	r0, #0
   29fa0:	movne	r0, #69	; 0x45
   29fa4:	strne	r0, [r5, #160]	; 0xa0
   29fa8:	movne	r7, #0
   29fac:	b	29fd8 <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   29fb0:	ldr	r0, [r6, #48]	; 0x30
   29fb4:	ldr	r1, [r6, #48]	; 0x30
   29fb8:	and	r0, r0, #8
   29fbc:	eor	r0, r1, r0
   29fc0:	str	r0, [r6, #48]	; 0x30
   29fc4:	mov	r0, #512	; 0x200
   29fc8:	str	r0, [sp]
   29fcc:	mov	r0, r5
   29fd0:	mov	r1, r6
   29fd4:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29fd8:	mov	r0, r7
   29fdc:	sub	sp, fp, #16
   29fe0:	pop	{r4, r5, r6, r7, fp, pc}

00029fe4 <myhtml_tokenizer_end_state_tag_name@@Base>:
   29fe4:	push	{r4, r5, fp, lr}
   29fe8:	add	fp, sp, #8
   29fec:	sub	sp, sp, #8
   29ff0:	mov	r5, r3
   29ff4:	ldr	r3, [r0, #192]	; 0xc0
   29ff8:	ldr	r4, [fp, #8]
   29ffc:	add	r3, r3, r4
   2a000:	ldr	r4, [r1, #32]
   2a004:	sub	r4, r3, r4
   2a008:	str	r4, [r1, #36]	; 0x24
   2a00c:	mov	r4, #512	; 0x200
   2a010:	str	r4, [sp]
   2a014:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a018:	mov	r0, r5
   2a01c:	sub	sp, fp, #8
   2a020:	pop	{r4, r5, fp, pc}

0002a024 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2a024:	push	{r4, r5, r6, r7, fp, lr}
   2a028:	add	fp, sp, #16
   2a02c:	sub	sp, sp, #8
   2a030:	mov	r7, r3
   2a034:	ldr	r4, [r0, #192]	; 0xc0
   2a038:	ldr	r3, [fp, #8]
   2a03c:	add	r3, r4, r3
   2a040:	ldr	r5, [r1, #24]
   2a044:	ldr	r6, [r1, #32]
   2a048:	sub	r6, r3, r6
   2a04c:	str	r6, [r1, #36]	; 0x24
   2a050:	cmp	r5, r3
   2a054:	bcs	2a084 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   2a058:	add	r6, r4, r7
   2a05c:	sub	r6, r6, r5
   2a060:	str	r6, [r1, #28]
   2a064:	ldr	r6, [r1, #48]	; 0x30
   2a068:	ldr	r5, [r1, #48]	; 0x30
   2a06c:	and	r6, r6, #8
   2a070:	eor	r6, r5, r6
   2a074:	str	r6, [r1, #48]	; 0x30
   2a078:	mov	r6, #512	; 0x200
   2a07c:	str	r6, [sp]
   2a080:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a084:	mov	r0, r7
   2a088:	sub	sp, fp, #16
   2a08c:	pop	{r4, r5, r6, r7, fp, pc}

0002a090 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2a090:	push	{r4, r5, fp, lr}
   2a094:	add	fp, sp, #8
   2a098:	sub	sp, sp, #8
   2a09c:	mov	r5, r3
   2a0a0:	ldr	r3, [r0, #192]	; 0xc0
   2a0a4:	ldr	r4, [fp, #8]
   2a0a8:	add	r3, r3, r4
   2a0ac:	ldr	r4, [r1, #32]
   2a0b0:	sub	r4, r3, r4
   2a0b4:	str	r4, [r1, #36]	; 0x24
   2a0b8:	mov	r4, #512	; 0x200
   2a0bc:	str	r4, [sp]
   2a0c0:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a0c4:	mov	r0, r5
   2a0c8:	sub	sp, fp, #8
   2a0cc:	pop	{r4, r5, fp, pc}

0002a0d0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2a0d0:	push	{r4, r5, r6, r7, fp, lr}
   2a0d4:	add	fp, sp, #16
   2a0d8:	sub	sp, sp, #8
   2a0dc:	mov	r4, r3
   2a0e0:	mov	r6, r1
   2a0e4:	mov	r5, r0
   2a0e8:	ldr	r0, [r0, #192]	; 0xc0
   2a0ec:	ldr	r7, [fp, #8]
   2a0f0:	add	r0, r0, r7
   2a0f4:	ldr	r3, [r1, #24]
   2a0f8:	ldr	r1, [r1, #32]
   2a0fc:	sub	r0, r0, r1
   2a100:	str	r0, [r6, #36]	; 0x24
   2a104:	cmp	r3, #2
   2a108:	bcc	2a1dc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x10c>
   2a10c:	str	r7, [sp]
   2a110:	mov	r0, r5
   2a114:	mov	r1, r6
   2a118:	bl	11468 <myhtml_tokenizer_state_bogus_comment@plt>
   2a11c:	ldr	r1, [r5, #76]	; 0x4c
   2a120:	str	r0, [r1, #4]
   2a124:	ldr	r2, [r5, #64]	; 0x40
   2a128:	cmp	r2, r6
   2a12c:	beq	2a180 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xb0>
   2a130:	ldr	r0, [r5, #192]	; 0xc0
   2a134:	add	r0, r0, r7
   2a138:	ldr	r1, [r2, #24]
   2a13c:	subs	r0, r0, r1
   2a140:	str	r0, [r2, #28]
   2a144:	beq	2a1dc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x10c>
   2a148:	ldr	r1, [r2, #48]	; 0x30
   2a14c:	ldr	r3, [r2, #48]	; 0x30
   2a150:	and	r1, r1, #8
   2a154:	eor	r1, r3, r1
   2a158:	str	r1, [r2, #48]	; 0x30
   2a15c:	mov	r1, #1
   2a160:	str	r1, [r2]
   2a164:	str	r0, [r2, #28]
   2a168:	ldr	r0, [r2, #48]	; 0x30
   2a16c:	orr	r0, r0, #512	; 0x200
   2a170:	str	r0, [r2, #48]	; 0x30
   2a174:	mov	r0, r5
   2a178:	mov	r1, r4
   2a17c:	b	2a1c8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf8>
   2a180:	ldr	r0, [r6, #24]
   2a184:	ldr	r1, [r6, #48]	; 0x30
   2a188:	ldr	r2, [r6, #48]	; 0x30
   2a18c:	and	r1, r1, #8
   2a190:	eor	r1, r2, r1
   2a194:	str	r1, [r6, #48]	; 0x30
   2a198:	mov	r1, #2
   2a19c:	str	r1, [r6]
   2a1a0:	ldr	r1, [r6, #48]	; 0x30
   2a1a4:	orr	r1, r1, #1024	; 0x400
   2a1a8:	str	r1, [r6, #48]	; 0x30
   2a1ac:	ldr	r1, [r5, #192]	; 0xc0
   2a1b0:	add	r1, r1, r7
   2a1b4:	sub	r0, r1, r0
   2a1b8:	str	r0, [r6, #28]
   2a1bc:	mov	r0, r5
   2a1c0:	mov	r1, r4
   2a1c4:	mov	r2, r6
   2a1c8:	bl	114bc <myhtml_queue_add@plt>
   2a1cc:	cmp	r0, #0
   2a1d0:	movne	r0, #69	; 0x45
   2a1d4:	strne	r0, [r5, #160]	; 0xa0
   2a1d8:	movne	r4, #0
   2a1dc:	mov	r0, r4
   2a1e0:	sub	sp, fp, #16
   2a1e4:	pop	{r4, r5, r6, r7, fp, pc}

0002a1e8 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2a1e8:	push	{r4, r5, fp, lr}
   2a1ec:	add	fp, sp, #8
   2a1f0:	mov	r4, r3
   2a1f4:	mov	r2, r1
   2a1f8:	mov	r5, r0
   2a1fc:	ldr	r0, [r0, #192]	; 0xc0
   2a200:	ldr	r1, [fp, #8]
   2a204:	add	r0, r0, r1
   2a208:	ldr	r1, [r2, #32]
   2a20c:	sub	r0, r0, r1
   2a210:	str	r0, [r2, #36]	; 0x24
   2a214:	mov	r0, r5
   2a218:	mov	r1, r3
   2a21c:	bl	114bc <myhtml_queue_add@plt>
   2a220:	cmp	r0, #0
   2a224:	movne	r0, #69	; 0x45
   2a228:	strne	r0, [r5, #160]	; 0xa0
   2a22c:	movne	r4, #0
   2a230:	mov	r0, r4
   2a234:	pop	{r4, r5, fp, pc}

0002a238 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2a238:	push	{r4, r5, fp, lr}
   2a23c:	add	fp, sp, #8
   2a240:	mov	r4, r3
   2a244:	mov	r2, r1
   2a248:	mov	r5, r0
   2a24c:	ldr	r0, [r0, #192]	; 0xc0
   2a250:	ldr	r1, [fp, #8]
   2a254:	add	r1, r0, r1
   2a258:	ldr	r3, [r2, #32]
   2a25c:	sub	r1, r1, r3
   2a260:	str	r1, [r2, #36]	; 0x24
   2a264:	add	r0, r0, r4
   2a268:	ldr	r1, [r5, #56]	; 0x38
   2a26c:	ldr	r3, [r1, #48]	; 0x30
   2a270:	sub	r0, r0, r3
   2a274:	str	r0, [r1, #52]	; 0x34
   2a278:	mov	r0, r5
   2a27c:	mov	r1, r4
   2a280:	bl	114bc <myhtml_queue_add@plt>
   2a284:	cmp	r0, #0
   2a288:	movne	r0, #69	; 0x45
   2a28c:	strne	r0, [r5, #160]	; 0xa0
   2a290:	movne	r4, #0
   2a294:	mov	r0, r4
   2a298:	pop	{r4, r5, fp, pc}

0002a29c <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2a29c:	push	{r4, r5, fp, lr}
   2a2a0:	add	fp, sp, #8
   2a2a4:	mov	r4, r3
   2a2a8:	mov	r2, r1
   2a2ac:	mov	r5, r0
   2a2b0:	ldr	r0, [r0, #192]	; 0xc0
   2a2b4:	ldr	r1, [fp, #8]
   2a2b8:	add	r0, r0, r1
   2a2bc:	ldr	r1, [r2, #32]
   2a2c0:	sub	r0, r0, r1
   2a2c4:	str	r0, [r2, #36]	; 0x24
   2a2c8:	mov	r0, r5
   2a2cc:	mov	r1, r3
   2a2d0:	bl	114bc <myhtml_queue_add@plt>
   2a2d4:	cmp	r0, #0
   2a2d8:	movne	r0, #69	; 0x45
   2a2dc:	strne	r0, [r5, #160]	; 0xa0
   2a2e0:	movne	r4, #0
   2a2e4:	mov	r0, r4
   2a2e8:	pop	{r4, r5, fp, pc}

0002a2ec <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2a2ec:	push	{r4, r5, fp, lr}
   2a2f0:	add	fp, sp, #8
   2a2f4:	mov	r4, r3
   2a2f8:	mov	r2, r1
   2a2fc:	mov	r5, r0
   2a300:	ldr	r0, [r0, #192]	; 0xc0
   2a304:	ldr	r1, [fp, #8]
   2a308:	add	r0, r0, r1
   2a30c:	ldr	r1, [r2, #32]
   2a310:	sub	r0, r0, r1
   2a314:	str	r0, [r2, #36]	; 0x24
   2a318:	mov	r0, r5
   2a31c:	mov	r1, r3
   2a320:	bl	114bc <myhtml_queue_add@plt>
   2a324:	cmp	r0, #0
   2a328:	bne	2a34c <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2a32c:	ldr	r0, [r5, #8]
   2a330:	ldr	r1, [r0, #16]
   2a334:	bl	11d20 <myhtml_token_attr_create@plt>
   2a338:	str	r0, [r5, #56]	; 0x38
   2a33c:	cmp	r0, #0
   2a340:	beq	2a34c <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2a344:	mov	r0, r4
   2a348:	pop	{r4, r5, fp, pc}
   2a34c:	mov	r0, #69	; 0x45
   2a350:	str	r0, [r5, #160]	; 0xa0
   2a354:	mov	r4, #0
   2a358:	mov	r0, r4
   2a35c:	pop	{r4, r5, fp, pc}

0002a360 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2a360:	ldr	r0, [r0, #192]	; 0xc0
   2a364:	ldr	r2, [sp]
   2a368:	add	r0, r0, r2
   2a36c:	ldr	r2, [r1, #32]
   2a370:	sub	r0, r0, r2
   2a374:	str	r0, [r1, #36]	; 0x24
   2a378:	mov	r0, r3
   2a37c:	bx	lr

0002a380 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2a380:	ldr	r0, [r0, #192]	; 0xc0
   2a384:	ldr	r2, [sp]
   2a388:	add	r0, r0, r2
   2a38c:	ldr	r2, [r1, #32]
   2a390:	sub	r0, r0, r2
   2a394:	str	r0, [r1, #36]	; 0x24
   2a398:	mov	r0, r3
   2a39c:	bx	lr

0002a3a0 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2a3a0:	push	{r4, r5, fp, lr}
   2a3a4:	add	fp, sp, #8
   2a3a8:	mov	r4, r3
   2a3ac:	mov	r2, r1
   2a3b0:	mov	r5, r0
   2a3b4:	ldr	r0, [r0, #192]	; 0xc0
   2a3b8:	ldr	r1, [fp, #8]
   2a3bc:	add	r1, r0, r1
   2a3c0:	ldr	r3, [r2, #32]
   2a3c4:	sub	r1, r1, r3
   2a3c8:	str	r1, [r2, #36]	; 0x24
   2a3cc:	add	r0, r0, r4
   2a3d0:	ldr	r1, [r5, #56]	; 0x38
   2a3d4:	ldr	r3, [r1, #56]	; 0x38
   2a3d8:	sub	r0, r0, r3
   2a3dc:	str	r0, [r1, #60]	; 0x3c
   2a3e0:	mov	r0, r5
   2a3e4:	mov	r1, r4
   2a3e8:	bl	114bc <myhtml_queue_add@plt>
   2a3ec:	cmp	r0, #0
   2a3f0:	bne	2a414 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2a3f4:	ldr	r0, [r5, #8]
   2a3f8:	ldr	r1, [r0, #16]
   2a3fc:	bl	11d20 <myhtml_token_attr_create@plt>
   2a400:	str	r0, [r5, #56]	; 0x38
   2a404:	cmp	r0, #0
   2a408:	beq	2a414 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2a40c:	mov	r0, r4
   2a410:	pop	{r4, r5, fp, pc}
   2a414:	mov	r0, #69	; 0x45
   2a418:	str	r0, [r5, #160]	; 0xa0
   2a41c:	mov	r4, #0
   2a420:	mov	r0, r4
   2a424:	pop	{r4, r5, fp, pc}

0002a428 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2a428:	push	{r4, r5, fp, lr}
   2a42c:	add	fp, sp, #8
   2a430:	mov	r4, r3
   2a434:	mov	r2, r1
   2a438:	mov	r5, r0
   2a43c:	ldr	r0, [r0, #192]	; 0xc0
   2a440:	ldr	r1, [fp, #8]
   2a444:	add	r1, r0, r1
   2a448:	ldr	ip, [r2, #24]
   2a44c:	ldr	r3, [r2, #32]
   2a450:	sub	r1, r1, r3
   2a454:	str	r1, [r2, #36]	; 0x24
   2a458:	add	r0, r0, r4
   2a45c:	sub	r0, r0, ip
   2a460:	str	r0, [r2, #28]
   2a464:	mov	r0, r5
   2a468:	mov	r1, r4
   2a46c:	bl	114bc <myhtml_queue_add@plt>
   2a470:	cmp	r0, #0
   2a474:	movne	r0, #69	; 0x45
   2a478:	strne	r0, [r5, #160]	; 0xa0
   2a47c:	movne	r4, #0
   2a480:	mov	r0, r4
   2a484:	pop	{r4, r5, fp, pc}

0002a488 <myhtml_tokenizer_end_state_comment_start@@Base>:
   2a488:	push	{r4, r5, fp, lr}
   2a48c:	add	fp, sp, #8
   2a490:	mov	r4, r3
   2a494:	mov	r2, r1
   2a498:	mov	r5, r0
   2a49c:	ldr	r0, [r0, #192]	; 0xc0
   2a4a0:	ldr	r1, [fp, #8]
   2a4a4:	add	r1, r0, r1
   2a4a8:	ldr	ip, [r2, #24]
   2a4ac:	ldr	r3, [r2, #32]
   2a4b0:	sub	r1, r1, r3
   2a4b4:	str	r1, [r2, #36]	; 0x24
   2a4b8:	add	r0, r0, r4
   2a4bc:	sub	r0, r0, ip
   2a4c0:	str	r0, [r2, #28]
   2a4c4:	mov	r0, r5
   2a4c8:	mov	r1, r4
   2a4cc:	bl	114bc <myhtml_queue_add@plt>
   2a4d0:	cmp	r0, #0
   2a4d4:	movne	r0, #69	; 0x45
   2a4d8:	strne	r0, [r5, #160]	; 0xa0
   2a4dc:	movne	r4, #0
   2a4e0:	mov	r0, r4
   2a4e4:	pop	{r4, r5, fp, pc}

0002a4e8 <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2a4e8:	push	{r4, r5, fp, lr}
   2a4ec:	add	fp, sp, #8
   2a4f0:	mov	r4, r3
   2a4f4:	mov	r2, r1
   2a4f8:	mov	r5, r0
   2a4fc:	ldr	r0, [r0, #192]	; 0xc0
   2a500:	ldr	r1, [fp, #8]
   2a504:	add	r1, r0, r1
   2a508:	ldr	ip, [r2, #24]
   2a50c:	ldr	r3, [r2, #32]
   2a510:	sub	r1, r1, r3
   2a514:	str	r1, [r2, #36]	; 0x24
   2a518:	add	r0, r0, r4
   2a51c:	sub	r0, r0, ip
   2a520:	str	r0, [r2, #28]
   2a524:	mov	r0, r5
   2a528:	mov	r1, r4
   2a52c:	bl	114bc <myhtml_queue_add@plt>
   2a530:	cmp	r0, #0
   2a534:	movne	r0, #69	; 0x45
   2a538:	strne	r0, [r5, #160]	; 0xa0
   2a53c:	movne	r4, #0
   2a540:	mov	r0, r4
   2a544:	pop	{r4, r5, fp, pc}

0002a548 <myhtml_tokenizer_end_state_comment@@Base>:
   2a548:	push	{r4, r5, fp, lr}
   2a54c:	add	fp, sp, #8
   2a550:	mov	r4, r3
   2a554:	mov	r2, r1
   2a558:	mov	r5, r0
   2a55c:	ldr	r0, [r0, #192]	; 0xc0
   2a560:	ldr	r1, [fp, #8]
   2a564:	add	r1, r0, r1
   2a568:	ldr	ip, [r2, #24]
   2a56c:	ldr	r3, [r2, #32]
   2a570:	sub	r1, r1, r3
   2a574:	str	r1, [r2, #36]	; 0x24
   2a578:	add	r0, r0, r4
   2a57c:	sub	r0, r0, ip
   2a580:	str	r0, [r2, #28]
   2a584:	mov	r0, r5
   2a588:	mov	r1, r4
   2a58c:	bl	114bc <myhtml_queue_add@plt>
   2a590:	cmp	r0, #0
   2a594:	movne	r0, #69	; 0x45
   2a598:	strne	r0, [r5, #160]	; 0xa0
   2a59c:	movne	r4, #0
   2a5a0:	mov	r0, r4
   2a5a4:	pop	{r4, r5, fp, pc}

0002a5a8 <myhtml_tokenizer_end_state_comment_end@@Base>:
   2a5a8:	push	{r4, r5, r6, sl, fp, lr}
   2a5ac:	add	fp, sp, #16
   2a5b0:	mov	r4, r3
   2a5b4:	mov	r2, r1
   2a5b8:	mov	r6, r0
   2a5bc:	ldr	r0, [r0, #192]	; 0xc0
   2a5c0:	ldr	r1, [fp, #8]
   2a5c4:	add	r1, r0, r1
   2a5c8:	ldr	r3, [r2, #24]
   2a5cc:	ldr	r5, [r2, #32]
   2a5d0:	sub	r1, r1, r5
   2a5d4:	str	r1, [r2, #36]	; 0x24
   2a5d8:	add	r0, r0, r4
   2a5dc:	sub	r0, r0, r3
   2a5e0:	str	r0, [r2, #28]
   2a5e4:	cmp	r0, #3
   2a5e8:	bcc	2a610 <myhtml_tokenizer_end_state_comment_end@@Base+0x68>
   2a5ec:	sub	r0, r0, #2
   2a5f0:	str	r0, [r2, #28]
   2a5f4:	mov	r0, r6
   2a5f8:	mov	r1, r4
   2a5fc:	bl	114bc <myhtml_queue_add@plt>
   2a600:	cmp	r0, #0
   2a604:	movne	r0, #69	; 0x45
   2a608:	strne	r0, [r6, #160]	; 0xa0
   2a60c:	movne	r4, #0
   2a610:	mov	r0, r4
   2a614:	pop	{r4, r5, r6, sl, fp, pc}

0002a618 <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2a618:	push	{r4, r5, fp, lr}
   2a61c:	add	fp, sp, #8
   2a620:	mov	r4, r3
   2a624:	mov	r2, r1
   2a628:	mov	r5, r0
   2a62c:	ldr	r0, [r0, #192]	; 0xc0
   2a630:	ldr	r1, [fp, #8]
   2a634:	add	r1, r0, r1
   2a638:	ldr	ip, [r2, #24]
   2a63c:	ldr	r3, [r2, #32]
   2a640:	sub	r1, r1, r3
   2a644:	str	r1, [r2, #36]	; 0x24
   2a648:	add	r0, r0, r4
   2a64c:	sub	r0, r0, ip
   2a650:	str	r0, [r2, #28]
   2a654:	mov	r0, r5
   2a658:	mov	r1, r4
   2a65c:	bl	114bc <myhtml_queue_add@plt>
   2a660:	cmp	r0, #0
   2a664:	movne	r0, #69	; 0x45
   2a668:	strne	r0, [r5, #160]	; 0xa0
   2a66c:	movne	r4, #0
   2a670:	mov	r0, r4
   2a674:	pop	{r4, r5, fp, pc}

0002a678 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2a678:	push	{r4, r5, fp, lr}
   2a67c:	add	fp, sp, #8
   2a680:	mov	r4, r3
   2a684:	mov	r2, r1
   2a688:	mov	r5, r0
   2a68c:	ldr	r0, [r0, #192]	; 0xc0
   2a690:	ldr	r1, [fp, #8]
   2a694:	add	r1, r0, r1
   2a698:	ldr	ip, [r2, #24]
   2a69c:	ldr	r3, [r2, #32]
   2a6a0:	sub	r1, r1, r3
   2a6a4:	str	r1, [r2, #36]	; 0x24
   2a6a8:	add	r0, r0, r4
   2a6ac:	sub	r0, r0, ip
   2a6b0:	str	r0, [r2, #28]
   2a6b4:	mov	r0, r5
   2a6b8:	mov	r1, r4
   2a6bc:	bl	114bc <myhtml_queue_add@plt>
   2a6c0:	cmp	r0, #0
   2a6c4:	movne	r0, #69	; 0x45
   2a6c8:	strne	r0, [r5, #160]	; 0xa0
   2a6cc:	movne	r4, #0
   2a6d0:	mov	r0, r4
   2a6d4:	pop	{r4, r5, fp, pc}

0002a6d8 <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2a6d8:	push	{r4, r5, fp, lr}
   2a6dc:	add	fp, sp, #8
   2a6e0:	mov	r4, r3
   2a6e4:	mov	r2, r1
   2a6e8:	mov	r5, r0
   2a6ec:	ldr	r0, [r0, #192]	; 0xc0
   2a6f0:	ldr	r1, [fp, #8]
   2a6f4:	add	r1, r0, r1
   2a6f8:	ldr	ip, [r2, #24]
   2a6fc:	ldr	r3, [r2, #32]
   2a700:	sub	r1, r1, r3
   2a704:	str	r1, [r2, #36]	; 0x24
   2a708:	add	r0, r0, r4
   2a70c:	sub	r0, r0, ip
   2a710:	str	r0, [r2, #28]
   2a714:	mov	r0, r5
   2a718:	mov	r1, r4
   2a71c:	bl	114bc <myhtml_queue_add@plt>
   2a720:	cmp	r0, #0
   2a724:	movne	r0, #69	; 0x45
   2a728:	strne	r0, [r5, #160]	; 0xa0
   2a72c:	movne	r4, #0
   2a730:	mov	r0, r4
   2a734:	pop	{r4, r5, fp, pc}

0002a738 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2a738:	push	{r4, r5, r6, sl, fp, lr}
   2a73c:	add	fp, sp, #16
   2a740:	mov	r4, r3
   2a744:	mov	r2, r1
   2a748:	mov	r6, r0
   2a74c:	ldr	r0, [r0, #192]	; 0xc0
   2a750:	ldr	r1, [fp, #8]
   2a754:	add	r1, r0, r1
   2a758:	ldr	r3, [r2, #24]
   2a75c:	ldr	r5, [r2, #32]
   2a760:	sub	r1, r1, r5
   2a764:	str	r1, [r2, #36]	; 0x24
   2a768:	add	r0, r0, r4
   2a76c:	subs	r0, r0, r3
   2a770:	str	r0, [r2, #28]
   2a774:	beq	2a794 <myhtml_tokenizer_end_state_cdata_section@@Base+0x5c>
   2a778:	mov	r0, r6
   2a77c:	mov	r1, r4
   2a780:	bl	114bc <myhtml_queue_add@plt>
   2a784:	cmp	r0, #0
   2a788:	movne	r0, #69	; 0x45
   2a78c:	strne	r0, [r6, #160]	; 0xa0
   2a790:	movne	r4, #0
   2a794:	mov	r0, r4
   2a798:	pop	{r4, r5, r6, sl, fp, pc}

0002a79c <myhtml_tokenizer_end_state_rcdata@@Base>:
   2a79c:	push	{r4, r5, fp, lr}
   2a7a0:	add	fp, sp, #8
   2a7a4:	mov	r4, r3
   2a7a8:	mov	r2, r1
   2a7ac:	mov	r5, r0
   2a7b0:	ldr	r0, [r0, #192]	; 0xc0
   2a7b4:	ldr	r1, [fp, #8]
   2a7b8:	add	r0, r0, r1
   2a7bc:	ldr	r1, [r2, #24]
   2a7c0:	ldr	r3, [r2, #32]
   2a7c4:	sub	r3, r0, r3
   2a7c8:	str	r3, [r2, #36]	; 0x24
   2a7cc:	cmp	r0, r1
   2a7d0:	bls	2a80c <myhtml_tokenizer_end_state_rcdata@@Base+0x70>
   2a7d4:	mov	r3, #1
   2a7d8:	str	r3, [r2]
   2a7dc:	sub	r0, r0, r1
   2a7e0:	str	r0, [r2, #28]
   2a7e4:	ldr	r0, [r2, #48]	; 0x30
   2a7e8:	orr	r0, r0, #16
   2a7ec:	str	r0, [r2, #48]	; 0x30
   2a7f0:	mov	r0, r5
   2a7f4:	mov	r1, #0
   2a7f8:	bl	114bc <myhtml_queue_add@plt>
   2a7fc:	cmp	r0, #0
   2a800:	movne	r0, #69	; 0x45
   2a804:	strne	r0, [r5, #160]	; 0xa0
   2a808:	movne	r4, #0
   2a80c:	mov	r0, r4
   2a810:	pop	{r4, r5, fp, pc}

0002a814 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2a814:	push	{r4, r5, r6, sl, fp, lr}
   2a818:	add	fp, sp, #16
   2a81c:	sub	sp, sp, #8
   2a820:	mov	r6, r3
   2a824:	ldr	r3, [r0, #192]	; 0xc0
   2a828:	ldr	r4, [fp, #8]
   2a82c:	add	r4, r3, r4
   2a830:	ldr	r5, [r1, #32]
   2a834:	sub	r5, r4, r5
   2a838:	str	r5, [r1, #36]	; 0x24
   2a83c:	mov	r5, #16
   2a840:	str	r5, [sp]
   2a844:	add	r3, r3, r6
   2a848:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a84c:	mov	r0, r6
   2a850:	sub	sp, fp, #16
   2a854:	pop	{r4, r5, r6, sl, fp, pc}

0002a858 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2a858:	push	{r4, r5, r6, sl, fp, lr}
   2a85c:	add	fp, sp, #16
   2a860:	sub	sp, sp, #8
   2a864:	mov	r6, r3
   2a868:	ldr	r3, [r0, #192]	; 0xc0
   2a86c:	ldr	r4, [fp, #8]
   2a870:	add	r4, r3, r4
   2a874:	ldr	r5, [r1, #32]
   2a878:	sub	r5, r4, r5
   2a87c:	str	r5, [r1, #36]	; 0x24
   2a880:	mov	r5, #16
   2a884:	str	r5, [sp]
   2a888:	add	r3, r3, r6
   2a88c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a890:	mov	r0, r6
   2a894:	sub	sp, fp, #16
   2a898:	pop	{r4, r5, r6, sl, fp, pc}

0002a89c <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2a89c:	push	{r4, r5, r6, sl, fp, lr}
   2a8a0:	add	fp, sp, #16
   2a8a4:	sub	sp, sp, #8
   2a8a8:	mov	r6, r3
   2a8ac:	ldr	r3, [r0, #192]	; 0xc0
   2a8b0:	ldr	r4, [fp, #8]
   2a8b4:	add	r4, r3, r4
   2a8b8:	ldr	r5, [r1, #32]
   2a8bc:	sub	r5, r4, r5
   2a8c0:	str	r5, [r1, #36]	; 0x24
   2a8c4:	mov	r5, #16
   2a8c8:	str	r5, [sp]
   2a8cc:	add	r3, r3, r6
   2a8d0:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a8d4:	mov	r0, r6
   2a8d8:	sub	sp, fp, #16
   2a8dc:	pop	{r4, r5, r6, sl, fp, pc}

0002a8e0 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2a8e0:	push	{r4, r5, r6, sl, fp, lr}
   2a8e4:	add	fp, sp, #16
   2a8e8:	sub	sp, sp, #8
   2a8ec:	mov	r6, r3
   2a8f0:	ldr	r3, [r0, #192]	; 0xc0
   2a8f4:	ldr	r4, [fp, #8]
   2a8f8:	add	r4, r3, r4
   2a8fc:	ldr	r5, [r1, #32]
   2a900:	sub	r5, r4, r5
   2a904:	str	r5, [r1, #36]	; 0x24
   2a908:	mov	r5, #32
   2a90c:	str	r5, [sp]
   2a910:	add	r3, r3, r6
   2a914:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a918:	mov	r0, r6
   2a91c:	sub	sp, fp, #16
   2a920:	pop	{r4, r5, r6, sl, fp, pc}

0002a924 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2a924:	push	{r4, r5, r6, sl, fp, lr}
   2a928:	add	fp, sp, #16
   2a92c:	sub	sp, sp, #8
   2a930:	mov	r6, r3
   2a934:	ldr	r3, [r0, #192]	; 0xc0
   2a938:	ldr	r4, [fp, #8]
   2a93c:	add	r4, r3, r4
   2a940:	ldr	r5, [r1, #32]
   2a944:	sub	r5, r4, r5
   2a948:	str	r5, [r1, #36]	; 0x24
   2a94c:	mov	r5, #32
   2a950:	str	r5, [sp]
   2a954:	add	r3, r3, r6
   2a958:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a95c:	mov	r0, r6
   2a960:	sub	sp, fp, #16
   2a964:	pop	{r4, r5, r6, sl, fp, pc}

0002a968 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2a968:	push	{r4, r5, r6, sl, fp, lr}
   2a96c:	add	fp, sp, #16
   2a970:	sub	sp, sp, #8
   2a974:	mov	r6, r3
   2a978:	ldr	r3, [r0, #192]	; 0xc0
   2a97c:	ldr	r4, [fp, #8]
   2a980:	add	r4, r3, r4
   2a984:	ldr	r5, [r1, #32]
   2a988:	sub	r5, r4, r5
   2a98c:	str	r5, [r1, #36]	; 0x24
   2a990:	mov	r5, #32
   2a994:	str	r5, [sp]
   2a998:	add	r3, r3, r6
   2a99c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a9a0:	mov	r0, r6
   2a9a4:	sub	sp, fp, #16
   2a9a8:	pop	{r4, r5, r6, sl, fp, pc}

0002a9ac <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2a9ac:	push	{r4, r5, r6, sl, fp, lr}
   2a9b0:	add	fp, sp, #16
   2a9b4:	sub	sp, sp, #8
   2a9b8:	mov	r6, r3
   2a9bc:	ldr	r3, [r0, #192]	; 0xc0
   2a9c0:	ldr	r4, [fp, #8]
   2a9c4:	add	r4, r3, r4
   2a9c8:	ldr	r5, [r1, #32]
   2a9cc:	sub	r5, r4, r5
   2a9d0:	str	r5, [r1, #36]	; 0x24
   2a9d4:	mov	r5, #32
   2a9d8:	str	r5, [sp]
   2a9dc:	add	r3, r3, r6
   2a9e0:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a9e4:	mov	r0, r6
   2a9e8:	sub	sp, fp, #16
   2a9ec:	pop	{r4, r5, r6, sl, fp, pc}

0002a9f0 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2a9f0:	ldr	r0, [r0, #192]	; 0xc0
   2a9f4:	ldr	r2, [sp]
   2a9f8:	add	r0, r0, r2
   2a9fc:	ldr	r2, [r1, #32]
   2aa00:	sub	r0, r0, r2
   2aa04:	str	r0, [r1, #36]	; 0x24
   2aa08:	mov	r0, r3
   2aa0c:	bx	lr

0002aa10 <myhtml_tokenizer_end_state_doctype@@Base>:
   2aa10:	push	{r4, r5, r6, sl, fp, lr}
   2aa14:	add	fp, sp, #16
   2aa18:	sub	sp, sp, #8
   2aa1c:	mov	r6, r3
   2aa20:	ldr	r3, [r0, #192]	; 0xc0
   2aa24:	ldr	r4, [fp, #8]
   2aa28:	add	r4, r3, r4
   2aa2c:	ldr	r5, [r1, #32]
   2aa30:	sub	r5, r4, r5
   2aa34:	str	r5, [r1, #36]	; 0x24
   2aa38:	mov	r5, #32
   2aa3c:	str	r5, [sp]
   2aa40:	add	r3, r3, r6
   2aa44:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2aa48:	mov	r0, r6
   2aa4c:	sub	sp, fp, #16
   2aa50:	pop	{r4, r5, r6, sl, fp, pc}

0002aa54 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2aa54:	push	{r4, r5, fp, lr}
   2aa58:	add	fp, sp, #8
   2aa5c:	mov	r4, r3
   2aa60:	mov	r2, r1
   2aa64:	mov	r5, r0
   2aa68:	ldr	r0, [r0, #192]	; 0xc0
   2aa6c:	ldr	r1, [fp, #8]
   2aa70:	add	r0, r0, r1
   2aa74:	ldr	r1, [r2, #32]
   2aa78:	sub	r0, r0, r1
   2aa7c:	str	r0, [r2, #36]	; 0x24
   2aa80:	mov	r0, #1
   2aa84:	str	r0, [r5, #176]	; 0xb0
   2aa88:	mov	r0, r5
   2aa8c:	mov	r1, r3
   2aa90:	bl	114bc <myhtml_queue_add@plt>
   2aa94:	cmp	r0, #0
   2aa98:	movne	r0, #69	; 0x45
   2aa9c:	strne	r0, [r5, #160]	; 0xa0
   2aaa0:	movne	r4, #0
   2aaa4:	mov	r0, r4
   2aaa8:	pop	{r4, r5, fp, pc}

0002aaac <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2aaac:	push	{r4, r5, fp, lr}
   2aab0:	add	fp, sp, #8
   2aab4:	mov	r4, r3
   2aab8:	mov	r2, r1
   2aabc:	mov	r5, r0
   2aac0:	ldr	r0, [r0, #192]	; 0xc0
   2aac4:	ldr	r1, [fp, #8]
   2aac8:	add	r1, r0, r1
   2aacc:	ldr	r3, [r2, #32]
   2aad0:	sub	r1, r1, r3
   2aad4:	str	r1, [r2, #36]	; 0x24
   2aad8:	add	r0, r0, r4
   2aadc:	ldr	r1, [r5, #56]	; 0x38
   2aae0:	ldr	r3, [r1, #48]	; 0x30
   2aae4:	sub	r0, r0, r3
   2aae8:	str	r0, [r1, #52]	; 0x34
   2aaec:	mov	r0, r5
   2aaf0:	mov	r1, r4
   2aaf4:	bl	114bc <myhtml_queue_add@plt>
   2aaf8:	cmp	r0, #0
   2aafc:	movne	r0, #69	; 0x45
   2ab00:	strne	r0, [r5, #160]	; 0xa0
   2ab04:	movne	r4, #0
   2ab08:	mov	r0, r4
   2ab0c:	pop	{r4, r5, fp, pc}

0002ab10 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2ab10:	push	{r4, r5, fp, lr}
   2ab14:	add	fp, sp, #8
   2ab18:	mov	r4, r3
   2ab1c:	mov	r2, r1
   2ab20:	mov	r5, r0
   2ab24:	ldr	r0, [r0, #192]	; 0xc0
   2ab28:	ldr	r1, [fp, #8]
   2ab2c:	add	r0, r0, r1
   2ab30:	ldr	r1, [r2, #32]
   2ab34:	sub	r0, r0, r1
   2ab38:	str	r0, [r2, #36]	; 0x24
   2ab3c:	mov	r0, r5
   2ab40:	mov	r1, r3
   2ab44:	bl	114bc <myhtml_queue_add@plt>
   2ab48:	cmp	r0, #0
   2ab4c:	movne	r0, #69	; 0x45
   2ab50:	strne	r0, [r5, #160]	; 0xa0
   2ab54:	movne	r4, #0
   2ab58:	mov	r0, r4
   2ab5c:	pop	{r4, r5, fp, pc}

0002ab60 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2ab60:	push	{r4, r5, fp, lr}
   2ab64:	add	fp, sp, #8
   2ab68:	mov	r4, r3
   2ab6c:	mov	r2, r1
   2ab70:	mov	r5, r0
   2ab74:	ldr	r0, [r0, #192]	; 0xc0
   2ab78:	ldr	r1, [fp, #8]
   2ab7c:	add	r0, r0, r1
   2ab80:	ldr	r1, [r2, #32]
   2ab84:	sub	r0, r0, r1
   2ab88:	str	r0, [r2, #36]	; 0x24
   2ab8c:	mov	r0, r5
   2ab90:	mov	r1, r3
   2ab94:	bl	114bc <myhtml_queue_add@plt>
   2ab98:	cmp	r0, #0
   2ab9c:	movne	r0, #69	; 0x45
   2aba0:	strne	r0, [r5, #160]	; 0xa0
   2aba4:	movne	r4, #0
   2aba8:	mov	r0, r4
   2abac:	pop	{r4, r5, fp, pc}

0002abb0 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2abb0:	push	{r4, r5, fp, lr}
   2abb4:	add	fp, sp, #8
   2abb8:	mov	r4, r3
   2abbc:	mov	r2, r1
   2abc0:	mov	r5, r0
   2abc4:	ldr	r0, [r0, #192]	; 0xc0
   2abc8:	ldr	r1, [fp, #8]
   2abcc:	add	r0, r0, r1
   2abd0:	ldr	r1, [r2, #32]
   2abd4:	sub	r0, r0, r1
   2abd8:	str	r0, [r2, #36]	; 0x24
   2abdc:	mov	r0, #1
   2abe0:	str	r0, [r5, #176]	; 0xb0
   2abe4:	mov	r0, r5
   2abe8:	mov	r1, r3
   2abec:	bl	114bc <myhtml_queue_add@plt>
   2abf0:	cmp	r0, #0
   2abf4:	movne	r0, #69	; 0x45
   2abf8:	strne	r0, [r5, #160]	; 0xa0
   2abfc:	movne	r4, #0
   2ac00:	mov	r0, r4
   2ac04:	pop	{r4, r5, fp, pc}

0002ac08 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2ac08:	push	{r4, r5, fp, lr}
   2ac0c:	add	fp, sp, #8
   2ac10:	mov	r4, r3
   2ac14:	mov	r2, r1
   2ac18:	mov	r5, r0
   2ac1c:	ldr	r0, [r0, #192]	; 0xc0
   2ac20:	ldr	ip, [fp, #8]
   2ac24:	add	r3, r0, ip
   2ac28:	ldr	r1, [r1, #32]
   2ac2c:	sub	r1, r3, r1
   2ac30:	str	r1, [r2, #36]	; 0x24
   2ac34:	mov	r1, #1
   2ac38:	str	r1, [r5, #176]	; 0xb0
   2ac3c:	cmp	ip, #0
   2ac40:	ldrne	r1, [r5, #56]	; 0x38
   2ac44:	ldrne	r3, [r1, #48]	; 0x30
   2ac48:	cmpne	r3, #0
   2ac4c:	addne	r0, r0, r4
   2ac50:	subne	r0, r0, r3
   2ac54:	strne	r0, [r1, #52]	; 0x34
   2ac58:	mov	r0, r5
   2ac5c:	mov	r1, r4
   2ac60:	bl	114bc <myhtml_queue_add@plt>
   2ac64:	cmp	r0, #0
   2ac68:	movne	r0, #69	; 0x45
   2ac6c:	strne	r0, [r5, #160]	; 0xa0
   2ac70:	movne	r4, #0
   2ac74:	mov	r0, r4
   2ac78:	pop	{r4, r5, fp, pc}

0002ac7c <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2ac7c:	push	{r4, r5, fp, lr}
   2ac80:	add	fp, sp, #8
   2ac84:	sub	sp, sp, #8
   2ac88:	mov	r5, r3
   2ac8c:	ldr	r2, [r0, #192]	; 0xc0
   2ac90:	ldr	ip, [fp, #8]
   2ac94:	add	r3, r2, ip
   2ac98:	ldr	r4, [r1, #32]
   2ac9c:	sub	r3, r3, r4
   2aca0:	str	r3, [r1, #36]	; 0x24
   2aca4:	str	ip, [sp]
   2aca8:	add	r3, r2, r5
   2acac:	bl	11fe4 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   2acb0:	mov	r0, r5
   2acb4:	sub	sp, fp, #8
   2acb8:	pop	{r4, r5, fp, pc}

0002acbc <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2acbc:	push	{r4, r5, fp, lr}
   2acc0:	add	fp, sp, #8
   2acc4:	mov	r4, r3
   2acc8:	mov	r2, r1
   2accc:	mov	r5, r0
   2acd0:	ldr	r0, [r0, #192]	; 0xc0
   2acd4:	ldr	r1, [fp, #8]
   2acd8:	add	r0, r0, r1
   2acdc:	ldr	r1, [r2, #32]
   2ace0:	sub	r0, r0, r1
   2ace4:	str	r0, [r2, #36]	; 0x24
   2ace8:	mov	r0, r5
   2acec:	mov	r1, r3
   2acf0:	bl	114bc <myhtml_queue_add@plt>
   2acf4:	cmp	r0, #0
   2acf8:	movne	r0, #69	; 0x45
   2acfc:	strne	r0, [r5, #160]	; 0xa0
   2ad00:	movne	r4, #0
   2ad04:	mov	r0, r4
   2ad08:	pop	{r4, r5, fp, pc}

0002ad0c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2ad0c:	push	{r4, r5, fp, lr}
   2ad10:	add	fp, sp, #8
   2ad14:	mov	r4, r3
   2ad18:	mov	r2, r1
   2ad1c:	mov	r5, r0
   2ad20:	ldr	r0, [r0, #192]	; 0xc0
   2ad24:	ldr	ip, [fp, #8]
   2ad28:	add	r3, r0, ip
   2ad2c:	ldr	r1, [r1, #32]
   2ad30:	sub	r1, r3, r1
   2ad34:	str	r1, [r2, #36]	; 0x24
   2ad38:	mov	r1, #1
   2ad3c:	str	r1, [r5, #176]	; 0xb0
   2ad40:	cmp	ip, #0
   2ad44:	ldrne	r1, [r5, #56]	; 0x38
   2ad48:	ldrne	r3, [r1, #48]	; 0x30
   2ad4c:	cmpne	r3, #0
   2ad50:	addne	r0, r0, r4
   2ad54:	subne	r0, r0, r3
   2ad58:	strne	r0, [r1, #52]	; 0x34
   2ad5c:	mov	r0, r5
   2ad60:	mov	r1, r4
   2ad64:	bl	114bc <myhtml_queue_add@plt>
   2ad68:	cmp	r0, #0
   2ad6c:	movne	r0, #69	; 0x45
   2ad70:	strne	r0, [r5, #160]	; 0xa0
   2ad74:	movne	r4, #0
   2ad78:	mov	r0, r4
   2ad7c:	pop	{r4, r5, fp, pc}

0002ad80 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2ad80:	push	{r4, r5, fp, lr}
   2ad84:	add	fp, sp, #8
   2ad88:	sub	sp, sp, #8
   2ad8c:	mov	r5, r3
   2ad90:	ldr	r2, [r0, #192]	; 0xc0
   2ad94:	ldr	ip, [fp, #8]
   2ad98:	add	r3, r2, ip
   2ad9c:	ldr	r4, [r1, #32]
   2ada0:	sub	r3, r3, r4
   2ada4:	str	r3, [r1, #36]	; 0x24
   2ada8:	str	ip, [sp]
   2adac:	add	r3, r2, r5
   2adb0:	bl	121c4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   2adb4:	mov	r0, r5
   2adb8:	sub	sp, fp, #8
   2adbc:	pop	{r4, r5, fp, pc}

0002adc0 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2adc0:	push	{r4, r5, fp, lr}
   2adc4:	add	fp, sp, #8
   2adc8:	mov	r4, r3
   2adcc:	mov	r2, r1
   2add0:	mov	r5, r0
   2add4:	ldr	r0, [r0, #192]	; 0xc0
   2add8:	ldr	r1, [fp, #8]
   2addc:	add	r0, r0, r1
   2ade0:	ldr	r1, [r2, #32]
   2ade4:	sub	r0, r0, r1
   2ade8:	str	r0, [r2, #36]	; 0x24
   2adec:	mov	r0, r5
   2adf0:	mov	r1, r3
   2adf4:	bl	114bc <myhtml_queue_add@plt>
   2adf8:	cmp	r0, #0
   2adfc:	movne	r0, #69	; 0x45
   2ae00:	strne	r0, [r5, #160]	; 0xa0
   2ae04:	movne	r4, #0
   2ae08:	mov	r0, r4
   2ae0c:	pop	{r4, r5, fp, pc}

0002ae10 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2ae10:	push	{r4, r5, fp, lr}
   2ae14:	add	fp, sp, #8
   2ae18:	mov	r4, r3
   2ae1c:	mov	r2, r1
   2ae20:	mov	r5, r0
   2ae24:	ldr	r0, [r0, #192]	; 0xc0
   2ae28:	ldr	r1, [fp, #8]
   2ae2c:	add	r0, r0, r1
   2ae30:	ldr	r1, [r2, #32]
   2ae34:	sub	r0, r0, r1
   2ae38:	str	r0, [r2, #36]	; 0x24
   2ae3c:	mov	r0, r5
   2ae40:	mov	r1, r3
   2ae44:	bl	114bc <myhtml_queue_add@plt>
   2ae48:	cmp	r0, #0
   2ae4c:	movne	r0, #69	; 0x45
   2ae50:	strne	r0, [r5, #160]	; 0xa0
   2ae54:	movne	r4, #0
   2ae58:	mov	r0, r4
   2ae5c:	pop	{r4, r5, fp, pc}

0002ae60 <myhtml_tokenizer_end_state_script_data@@Base>:
   2ae60:	push	{r4, r5, r6, sl, fp, lr}
   2ae64:	add	fp, sp, #16
   2ae68:	sub	sp, sp, #8
   2ae6c:	mov	r6, r3
   2ae70:	ldr	r3, [r0, #192]	; 0xc0
   2ae74:	ldr	r4, [fp, #8]
   2ae78:	add	r4, r3, r4
   2ae7c:	ldr	r5, [r1, #32]
   2ae80:	sub	r5, r4, r5
   2ae84:	str	r5, [r1, #36]	; 0x24
   2ae88:	mov	r5, #64	; 0x40
   2ae8c:	str	r5, [sp]
   2ae90:	add	r3, r3, r6
   2ae94:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ae98:	mov	r0, r6
   2ae9c:	sub	sp, fp, #16
   2aea0:	pop	{r4, r5, r6, sl, fp, pc}

0002aea4 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2aea4:	push	{r4, r5, r6, sl, fp, lr}
   2aea8:	add	fp, sp, #16
   2aeac:	sub	sp, sp, #8
   2aeb0:	mov	r6, r3
   2aeb4:	ldr	r3, [r0, #192]	; 0xc0
   2aeb8:	ldr	r4, [fp, #8]
   2aebc:	add	r4, r3, r4
   2aec0:	ldr	r5, [r1, #32]
   2aec4:	sub	r5, r4, r5
   2aec8:	str	r5, [r1, #36]	; 0x24
   2aecc:	mov	r5, #64	; 0x40
   2aed0:	str	r5, [sp]
   2aed4:	add	r3, r3, r6
   2aed8:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2aedc:	mov	r0, r6
   2aee0:	sub	sp, fp, #16
   2aee4:	pop	{r4, r5, r6, sl, fp, pc}

0002aee8 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2aee8:	push	{r4, r5, r6, sl, fp, lr}
   2aeec:	add	fp, sp, #16
   2aef0:	sub	sp, sp, #8
   2aef4:	mov	r6, r3
   2aef8:	ldr	r3, [r0, #192]	; 0xc0
   2aefc:	ldr	r4, [fp, #8]
   2af00:	add	r4, r3, r4
   2af04:	ldr	r5, [r1, #32]
   2af08:	sub	r5, r4, r5
   2af0c:	str	r5, [r1, #36]	; 0x24
   2af10:	mov	r5, #64	; 0x40
   2af14:	str	r5, [sp]
   2af18:	add	r3, r3, r6
   2af1c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2af20:	mov	r0, r6
   2af24:	sub	sp, fp, #16
   2af28:	pop	{r4, r5, r6, sl, fp, pc}

0002af2c <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2af2c:	push	{r4, r5, r6, sl, fp, lr}
   2af30:	add	fp, sp, #16
   2af34:	sub	sp, sp, #8
   2af38:	mov	r6, r3
   2af3c:	ldr	r3, [r0, #192]	; 0xc0
   2af40:	ldr	r4, [fp, #8]
   2af44:	add	r4, r3, r4
   2af48:	ldr	r5, [r1, #32]
   2af4c:	sub	r5, r4, r5
   2af50:	str	r5, [r1, #36]	; 0x24
   2af54:	mov	r5, #64	; 0x40
   2af58:	str	r5, [sp]
   2af5c:	add	r3, r3, r6
   2af60:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2af64:	mov	r0, r6
   2af68:	sub	sp, fp, #16
   2af6c:	pop	{r4, r5, r6, sl, fp, pc}

0002af70 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2af70:	push	{r4, r5, r6, sl, fp, lr}
   2af74:	add	fp, sp, #16
   2af78:	sub	sp, sp, #8
   2af7c:	mov	r6, r3
   2af80:	ldr	r3, [r0, #192]	; 0xc0
   2af84:	ldr	r4, [fp, #8]
   2af88:	add	r4, r3, r4
   2af8c:	ldr	r5, [r1, #32]
   2af90:	sub	r5, r4, r5
   2af94:	str	r5, [r1, #36]	; 0x24
   2af98:	mov	r5, #64	; 0x40
   2af9c:	str	r5, [sp]
   2afa0:	add	r3, r3, r6
   2afa4:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2afa8:	mov	r0, r6
   2afac:	sub	sp, fp, #16
   2afb0:	pop	{r4, r5, r6, sl, fp, pc}

0002afb4 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2afb4:	push	{r4, r5, r6, sl, fp, lr}
   2afb8:	add	fp, sp, #16
   2afbc:	sub	sp, sp, #8
   2afc0:	mov	r6, r3
   2afc4:	ldr	r3, [r0, #192]	; 0xc0
   2afc8:	ldr	r4, [fp, #8]
   2afcc:	add	r4, r3, r4
   2afd0:	ldr	r5, [r1, #32]
   2afd4:	sub	r5, r4, r5
   2afd8:	str	r5, [r1, #36]	; 0x24
   2afdc:	mov	r5, #64	; 0x40
   2afe0:	str	r5, [sp]
   2afe4:	add	r3, r3, r6
   2afe8:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2afec:	mov	r0, r6
   2aff0:	sub	sp, fp, #16
   2aff4:	pop	{r4, r5, r6, sl, fp, pc}

0002aff8 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2aff8:	push	{r4, r5, r6, sl, fp, lr}
   2affc:	add	fp, sp, #16
   2b000:	sub	sp, sp, #8
   2b004:	mov	r6, r3
   2b008:	ldr	r3, [r0, #192]	; 0xc0
   2b00c:	ldr	r4, [fp, #8]
   2b010:	add	r4, r3, r4
   2b014:	ldr	r5, [r1, #32]
   2b018:	sub	r5, r4, r5
   2b01c:	str	r5, [r1, #36]	; 0x24
   2b020:	mov	r5, #64	; 0x40
   2b024:	str	r5, [sp]
   2b028:	add	r3, r3, r6
   2b02c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b030:	mov	r0, r6
   2b034:	sub	sp, fp, #16
   2b038:	pop	{r4, r5, r6, sl, fp, pc}

0002b03c <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2b03c:	push	{r4, r5, r6, sl, fp, lr}
   2b040:	add	fp, sp, #16
   2b044:	sub	sp, sp, #8
   2b048:	mov	r6, r3
   2b04c:	ldr	r3, [r0, #192]	; 0xc0
   2b050:	ldr	r4, [fp, #8]
   2b054:	add	r4, r3, r4
   2b058:	ldr	r5, [r1, #32]
   2b05c:	sub	r5, r4, r5
   2b060:	str	r5, [r1, #36]	; 0x24
   2b064:	mov	r5, #64	; 0x40
   2b068:	str	r5, [sp]
   2b06c:	add	r3, r3, r6
   2b070:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b074:	mov	r0, r6
   2b078:	sub	sp, fp, #16
   2b07c:	pop	{r4, r5, r6, sl, fp, pc}

0002b080 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2b080:	push	{r4, r5, r6, sl, fp, lr}
   2b084:	add	fp, sp, #16
   2b088:	sub	sp, sp, #8
   2b08c:	mov	r6, r3
   2b090:	ldr	r3, [r0, #192]	; 0xc0
   2b094:	ldr	r4, [fp, #8]
   2b098:	add	r4, r3, r4
   2b09c:	ldr	r5, [r1, #32]
   2b0a0:	sub	r5, r4, r5
   2b0a4:	str	r5, [r1, #36]	; 0x24
   2b0a8:	mov	r5, #64	; 0x40
   2b0ac:	str	r5, [sp]
   2b0b0:	add	r3, r3, r6
   2b0b4:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b0b8:	mov	r0, r6
   2b0bc:	sub	sp, fp, #16
   2b0c0:	pop	{r4, r5, r6, sl, fp, pc}

0002b0c4 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2b0c4:	push	{r4, r5, r6, sl, fp, lr}
   2b0c8:	add	fp, sp, #16
   2b0cc:	sub	sp, sp, #8
   2b0d0:	mov	r6, r3
   2b0d4:	ldr	r3, [r0, #192]	; 0xc0
   2b0d8:	ldr	r4, [fp, #8]
   2b0dc:	add	r4, r3, r4
   2b0e0:	ldr	r5, [r1, #32]
   2b0e4:	sub	r5, r4, r5
   2b0e8:	str	r5, [r1, #36]	; 0x24
   2b0ec:	mov	r5, #64	; 0x40
   2b0f0:	str	r5, [sp]
   2b0f4:	add	r3, r3, r6
   2b0f8:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b0fc:	mov	r0, r6
   2b100:	sub	sp, fp, #16
   2b104:	pop	{r4, r5, r6, sl, fp, pc}

0002b108 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2b108:	push	{r4, r5, r6, sl, fp, lr}
   2b10c:	add	fp, sp, #16
   2b110:	sub	sp, sp, #8
   2b114:	mov	r6, r3
   2b118:	ldr	r3, [r0, #192]	; 0xc0
   2b11c:	ldr	r4, [fp, #8]
   2b120:	add	r4, r3, r4
   2b124:	ldr	r5, [r1, #32]
   2b128:	sub	r5, r4, r5
   2b12c:	str	r5, [r1, #36]	; 0x24
   2b130:	mov	r5, #64	; 0x40
   2b134:	str	r5, [sp]
   2b138:	add	r3, r3, r6
   2b13c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b140:	mov	r0, r6
   2b144:	sub	sp, fp, #16
   2b148:	pop	{r4, r5, r6, sl, fp, pc}

0002b14c <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2b14c:	push	{r4, r5, r6, sl, fp, lr}
   2b150:	add	fp, sp, #16
   2b154:	sub	sp, sp, #8
   2b158:	mov	r6, r3
   2b15c:	ldr	r3, [r0, #192]	; 0xc0
   2b160:	ldr	r4, [fp, #8]
   2b164:	add	r4, r3, r4
   2b168:	ldr	r5, [r1, #32]
   2b16c:	sub	r5, r4, r5
   2b170:	str	r5, [r1, #36]	; 0x24
   2b174:	mov	r5, #64	; 0x40
   2b178:	str	r5, [sp]
   2b17c:	add	r3, r3, r6
   2b180:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b184:	mov	r0, r6
   2b188:	sub	sp, fp, #16
   2b18c:	pop	{r4, r5, r6, sl, fp, pc}

0002b190 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2b190:	push	{r4, r5, r6, sl, fp, lr}
   2b194:	add	fp, sp, #16
   2b198:	sub	sp, sp, #8
   2b19c:	mov	r6, r3
   2b1a0:	ldr	r3, [r0, #192]	; 0xc0
   2b1a4:	ldr	r4, [fp, #8]
   2b1a8:	add	r4, r3, r4
   2b1ac:	ldr	r5, [r1, #32]
   2b1b0:	sub	r5, r4, r5
   2b1b4:	str	r5, [r1, #36]	; 0x24
   2b1b8:	mov	r5, #64	; 0x40
   2b1bc:	str	r5, [sp]
   2b1c0:	add	r3, r3, r6
   2b1c4:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b1c8:	mov	r0, r6
   2b1cc:	sub	sp, fp, #16
   2b1d0:	pop	{r4, r5, r6, sl, fp, pc}

0002b1d4 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2b1d4:	push	{r4, r5, r6, sl, fp, lr}
   2b1d8:	add	fp, sp, #16
   2b1dc:	sub	sp, sp, #8
   2b1e0:	mov	r6, r3
   2b1e4:	ldr	r3, [r0, #192]	; 0xc0
   2b1e8:	ldr	r4, [fp, #8]
   2b1ec:	add	r4, r3, r4
   2b1f0:	ldr	r5, [r1, #32]
   2b1f4:	sub	r5, r4, r5
   2b1f8:	str	r5, [r1, #36]	; 0x24
   2b1fc:	mov	r5, #64	; 0x40
   2b200:	str	r5, [sp]
   2b204:	add	r3, r3, r6
   2b208:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b20c:	mov	r0, r6
   2b210:	sub	sp, fp, #16
   2b214:	pop	{r4, r5, r6, sl, fp, pc}

0002b218 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2b218:	push	{r4, r5, r6, sl, fp, lr}
   2b21c:	add	fp, sp, #16
   2b220:	sub	sp, sp, #8
   2b224:	mov	r6, r3
   2b228:	ldr	r3, [r0, #192]	; 0xc0
   2b22c:	ldr	r4, [fp, #8]
   2b230:	add	r4, r3, r4
   2b234:	ldr	r5, [r1, #32]
   2b238:	sub	r5, r4, r5
   2b23c:	str	r5, [r1, #36]	; 0x24
   2b240:	mov	r5, #64	; 0x40
   2b244:	str	r5, [sp]
   2b248:	add	r3, r3, r6
   2b24c:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b250:	mov	r0, r6
   2b254:	sub	sp, fp, #16
   2b258:	pop	{r4, r5, r6, sl, fp, pc}

0002b25c <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2b25c:	push	{r4, r5, r6, sl, fp, lr}
   2b260:	add	fp, sp, #16
   2b264:	sub	sp, sp, #8
   2b268:	mov	r6, r3
   2b26c:	ldr	r3, [r0, #192]	; 0xc0
   2b270:	ldr	r4, [fp, #8]
   2b274:	add	r4, r3, r4
   2b278:	ldr	r5, [r1, #32]
   2b27c:	sub	r5, r4, r5
   2b280:	str	r5, [r1, #36]	; 0x24
   2b284:	mov	r5, #64	; 0x40
   2b288:	str	r5, [sp]
   2b28c:	add	r3, r3, r6
   2b290:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b294:	mov	r0, r6
   2b298:	sub	sp, fp, #16
   2b29c:	pop	{r4, r5, r6, sl, fp, pc}

0002b2a0 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2b2a0:	push	{r4, r5, r6, sl, fp, lr}
   2b2a4:	add	fp, sp, #16
   2b2a8:	sub	sp, sp, #8
   2b2ac:	mov	r6, r3
   2b2b0:	ldr	r3, [r0, #192]	; 0xc0
   2b2b4:	ldr	r4, [fp, #8]
   2b2b8:	add	r4, r3, r4
   2b2bc:	ldr	r5, [r1, #32]
   2b2c0:	sub	r5, r4, r5
   2b2c4:	str	r5, [r1, #36]	; 0x24
   2b2c8:	mov	r5, #64	; 0x40
   2b2cc:	str	r5, [sp]
   2b2d0:	add	r3, r3, r6
   2b2d4:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b2d8:	mov	r0, r6
   2b2dc:	sub	sp, fp, #16
   2b2e0:	pop	{r4, r5, r6, sl, fp, pc}

0002b2e4 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2b2e4:	push	{r4, r5, r6, sl, fp, lr}
   2b2e8:	add	fp, sp, #16
   2b2ec:	sub	sp, sp, #8
   2b2f0:	mov	r6, r3
   2b2f4:	ldr	r3, [r0, #192]	; 0xc0
   2b2f8:	ldr	r4, [fp, #8]
   2b2fc:	add	r4, r3, r4
   2b300:	ldr	r5, [r1, #32]
   2b304:	sub	r5, r4, r5
   2b308:	str	r5, [r1, #36]	; 0x24
   2b30c:	mov	r5, #64	; 0x40
   2b310:	str	r5, [sp]
   2b314:	add	r3, r3, r6
   2b318:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b31c:	mov	r0, r6
   2b320:	sub	sp, fp, #16
   2b324:	pop	{r4, r5, r6, sl, fp, pc}

0002b328 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2b328:	ldr	r0, [sp]
   2b32c:	bx	lr

0002b330 <myhtml_tokenizer_state_script_data@@Base>:
   2b330:	push	{fp, lr}
   2b334:	mov	fp, sp
   2b338:	mov	lr, r3
   2b33c:	ldr	ip, [fp, #8]
   2b340:	cmp	r3, ip
   2b344:	bcs	2b360 <myhtml_tokenizer_state_script_data@@Base+0x30>
   2b348:	ldrb	r3, [r2, lr]
   2b34c:	cmp	r3, #60	; 0x3c
   2b350:	beq	2b368 <myhtml_tokenizer_state_script_data@@Base+0x38>
   2b354:	add	lr, lr, #1
   2b358:	cmp	lr, ip
   2b35c:	bcc	2b348 <myhtml_tokenizer_state_script_data@@Base+0x18>
   2b360:	mov	r0, lr
   2b364:	pop	{fp, pc}
   2b368:	ldr	r2, [r0, #192]	; 0xc0
   2b36c:	add	r2, r2, lr
   2b370:	str	r2, [r1, #32]
   2b374:	mov	r1, #16
   2b378:	str	r1, [r0, #160]	; 0xa0
   2b37c:	add	lr, lr, #1
   2b380:	mov	r0, lr
   2b384:	pop	{fp, pc}

0002b388 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2b388:	ldrb	r2, [r2, r3]
   2b38c:	cmp	r2, #33	; 0x21
   2b390:	beq	2b3a8 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x20>
   2b394:	mov	r1, #5
   2b398:	cmp	r2, #47	; 0x2f
   2b39c:	addeq	r3, r3, #1
   2b3a0:	moveq	r1, #17
   2b3a4:	b	2b3b0 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x28>
   2b3a8:	add	r3, r3, #1
   2b3ac:	mov	r1, #19
   2b3b0:	str	r1, [r0, #160]	; 0xa0
   2b3b4:	mov	r0, r3
   2b3b8:	bx	lr

0002b3bc <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2b3bc:	ldrb	r1, [r2, r3]
   2b3c0:	mov	r2, #5
   2b3c4:	cmp	r1, #45	; 0x2d
   2b3c8:	movweq	r2, #20
   2b3cc:	str	r2, [r0, #160]	; 0xa0
   2b3d0:	addeq	r3, r3, #1
   2b3d4:	mov	r0, r3
   2b3d8:	bx	lr

0002b3dc <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2b3dc:	ldrb	r1, [r2, r3]
   2b3e0:	mov	r2, #5
   2b3e4:	cmp	r1, #45	; 0x2d
   2b3e8:	movweq	r2, #23
   2b3ec:	str	r2, [r0, #160]	; 0xa0
   2b3f0:	addeq	r3, r3, #1
   2b3f4:	mov	r0, r3
   2b3f8:	bx	lr

0002b3fc <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2b3fc:	ldrb	r2, [r2, r3]
   2b400:	and	r2, r2, #223	; 0xdf
   2b404:	sub	r2, r2, #65	; 0x41
   2b408:	uxtb	r2, r2
   2b40c:	mov	ip, #5
   2b410:	cmp	r2, #25
   2b414:	ldrls	r2, [r0, #192]	; 0xc0
   2b418:	addls	r2, r2, r3
   2b41c:	strls	r2, [r1, #12]
   2b420:	movls	ip, #18
   2b424:	str	ip, [r0, #160]	; 0xa0
   2b428:	mov	r0, r3
   2b42c:	bx	lr

0002b430 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2b430:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b434:	add	fp, sp, #24
   2b438:	sub	sp, sp, #8
   2b43c:	mov	r4, r3
   2b440:	mov	r5, r0
   2b444:	ldr	r0, [fp, #8]
   2b448:	cmp	r3, r0
   2b44c:	bcs	2b6c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b450:	mov	r6, r2
   2b454:	mov	r7, r1
   2b458:	add	r4, r4, #1
   2b45c:	add	r1, r6, r4
   2b460:	ldrb	r1, [r1, #-1]
   2b464:	sub	r2, r1, #9
   2b468:	cmp	r2, #53	; 0x35
   2b46c:	bhi	2b554 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x124>
   2b470:	add	r3, pc, #4
   2b474:	ldr	r2, [r3, r2, lsl #2]
   2b478:	add	pc, r3, r2
   2b47c:	andeq	r0, r0, r0, lsr #2
   2b480:	andeq	r0, r0, r0, lsr #2
   2b484:	ldrdeq	r0, [r0], -r8
   2b488:	andeq	r0, r0, r0, lsr #2
   2b48c:	andeq	r0, r0, r0, lsr #2
   2b490:	ldrdeq	r0, [r0], -r8
   2b494:	ldrdeq	r0, [r0], -r8
   2b498:	ldrdeq	r0, [r0], -r8
   2b49c:	ldrdeq	r0, [r0], -r8
   2b4a0:	ldrdeq	r0, [r0], -r8
   2b4a4:	ldrdeq	r0, [r0], -r8
   2b4a8:	ldrdeq	r0, [r0], -r8
   2b4ac:	ldrdeq	r0, [r0], -r8
   2b4b0:	ldrdeq	r0, [r0], -r8
   2b4b4:	ldrdeq	r0, [r0], -r8
   2b4b8:	ldrdeq	r0, [r0], -r8
   2b4bc:	ldrdeq	r0, [r0], -r8
   2b4c0:	ldrdeq	r0, [r0], -r8
   2b4c4:	ldrdeq	r0, [r0], -r8
   2b4c8:	ldrdeq	r0, [r0], -r8
   2b4cc:	ldrdeq	r0, [r0], -r8
   2b4d0:	ldrdeq	r0, [r0], -r8
   2b4d4:	ldrdeq	r0, [r0], -r8
   2b4d8:	andeq	r0, r0, r0, lsr #2
   2b4dc:	ldrdeq	r0, [r0], -r8
   2b4e0:	ldrdeq	r0, [r0], -r8
   2b4e4:	ldrdeq	r0, [r0], -r8
   2b4e8:	ldrdeq	r0, [r0], -r8
   2b4ec:	ldrdeq	r0, [r0], -r8
   2b4f0:	ldrdeq	r0, [r0], -r8
   2b4f4:	ldrdeq	r0, [r0], -r8
   2b4f8:	ldrdeq	r0, [r0], -r8
   2b4fc:	ldrdeq	r0, [r0], -r8
   2b500:	ldrdeq	r0, [r0], -r8
   2b504:	ldrdeq	r0, [r0], -r8
   2b508:	ldrdeq	r0, [r0], -r8
   2b50c:	ldrdeq	r0, [r0], -r8
   2b510:	ldrdeq	r0, [r0], -r8
   2b514:			; <UNDEFINED> instruction: 0x000001b4
   2b518:	ldrdeq	r0, [r0], -r8
   2b51c:	ldrdeq	r0, [r0], -r8
   2b520:	ldrdeq	r0, [r0], -r8
   2b524:	ldrdeq	r0, [r0], -r8
   2b528:	ldrdeq	r0, [r0], -r8
   2b52c:	ldrdeq	r0, [r0], -r8
   2b530:	ldrdeq	r0, [r0], -r8
   2b534:	ldrdeq	r0, [r0], -r8
   2b538:	ldrdeq	r0, [r0], -r8
   2b53c:	ldrdeq	r0, [r0], -r8
   2b540:	ldrdeq	r0, [r0], -r8
   2b544:	ldrdeq	r0, [r0], -r8
   2b548:	ldrdeq	r0, [r0], -r8
   2b54c:	ldrdeq	r0, [r0], -r8
   2b550:	andeq	r0, r0, r0, lsl #4
   2b554:	sub	r2, r1, #97	; 0x61
   2b558:	uxtb	r2, r2
   2b55c:	cmp	r2, #26
   2b560:	bcc	2b574 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   2b564:	sub	r1, r1, #65	; 0x41
   2b568:	uxtb	r1, r1
   2b56c:	cmp	r1, #26
   2b570:	bcs	2b58c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x15c>
   2b574:	add	r1, r4, #1
   2b578:	cmp	r4, r0
   2b57c:	mov	r4, r1
   2b580:	bcc	2b45c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2c>
   2b584:	sub	r4, r1, #1
   2b588:	b	2b6c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b58c:	mov	r0, #5
   2b590:	str	r0, [r5, #160]	; 0xa0
   2b594:	sub	r4, r4, #1
   2b598:	b	2b6c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b59c:	ldr	r8, [r7, #12]
   2b5a0:	ldr	r0, [r5, #192]	; 0xc0
   2b5a4:	sub	r0, r0, r8
   2b5a8:	add	r0, r0, r4
   2b5ac:	cmp	r0, #7
   2b5b0:	bne	2b6bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2b5b4:	mov	r0, r5
   2b5b8:	mov	r1, r8
   2b5bc:	mov	r2, #6
   2b5c0:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2b5c4:	ldr	r1, [pc, #472]	; 2b7a4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x374>
   2b5c8:	add	r1, pc, r1
   2b5cc:	mov	r2, #6
   2b5d0:	bl	11714 <mycore_strncasecmp@plt>
   2b5d4:	mov	r1, #5
   2b5d8:	cmp	r0, #0
   2b5dc:	bne	2b674 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x244>
   2b5e0:	ldr	r0, [r5, #192]	; 0xc0
   2b5e4:	mov	r1, #64	; 0x40
   2b5e8:	str	r1, [sp]
   2b5ec:	add	r0, r0, r4
   2b5f0:	sub	r3, r0, #9
   2b5f4:	mov	r0, r5
   2b5f8:	mov	r1, r7
   2b5fc:	mov	r2, r6
   2b600:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b604:	cmp	r0, #0
   2b608:	beq	2b78c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x35c>
   2b60c:	mov	r1, #6
   2b610:	str	r8, [r0, #24]
   2b614:	str	r1, [r0, #28]
   2b618:	mov	r1, #112	; 0x70
   2b61c:	str	r1, [r0]
   2b620:	mov	r1, #1
   2b624:	str	r1, [r0, #48]	; 0x30
   2b628:	mov	r1, #33	; 0x21
   2b62c:	b	2b674 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x244>
   2b630:	ldr	r8, [r7, #12]
   2b634:	ldr	r0, [r5, #192]	; 0xc0
   2b638:	sub	r0, r0, r8
   2b63c:	add	r0, r0, r4
   2b640:	cmp	r0, #7
   2b644:	bne	2b6bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2b648:	mov	r0, r5
   2b64c:	mov	r1, r8
   2b650:	mov	r2, #6
   2b654:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2b658:	ldr	r1, [pc, #328]	; 2b7a8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x378>
   2b65c:	add	r1, pc, r1
   2b660:	mov	r2, #6
   2b664:	bl	11714 <mycore_strncasecmp@plt>
   2b668:	mov	r1, #5
   2b66c:	cmp	r0, #0
   2b670:	beq	2b6d0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2a0>
   2b674:	str	r1, [r5, #160]	; 0xa0
   2b678:	b	2b6c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b67c:	ldr	r8, [r7, #12]
   2b680:	ldr	r0, [r5, #192]	; 0xc0
   2b684:	sub	r0, r0, r8
   2b688:	add	r0, r0, r4
   2b68c:	cmp	r0, #7
   2b690:	bne	2b6bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2b694:	mov	r0, r5
   2b698:	mov	r1, r8
   2b69c:	mov	r2, #6
   2b6a0:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2b6a4:	ldr	r1, [pc, #256]	; 2b7ac <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x37c>
   2b6a8:	add	r1, pc, r1
   2b6ac:	mov	r2, #6
   2b6b0:	bl	11714 <mycore_strncasecmp@plt>
   2b6b4:	cmp	r0, #0
   2b6b8:	beq	2b718 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2e8>
   2b6bc:	mov	r0, #5
   2b6c0:	str	r0, [r5, #160]	; 0xa0
   2b6c4:	mov	r0, r4
   2b6c8:	sub	sp, fp, #24
   2b6cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b6d0:	ldr	r0, [r5, #192]	; 0xc0
   2b6d4:	mov	r1, #64	; 0x40
   2b6d8:	str	r1, [sp]
   2b6dc:	add	r0, r0, r4
   2b6e0:	sub	r3, r0, #9
   2b6e4:	mov	r0, r5
   2b6e8:	mov	r1, r7
   2b6ec:	mov	r2, r6
   2b6f0:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b6f4:	cmp	r0, #0
   2b6f8:	beq	2b78c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x35c>
   2b6fc:	mov	r1, #6
   2b700:	str	r8, [r0, #24]
   2b704:	str	r1, [r0, #28]
   2b708:	mov	r1, #112	; 0x70
   2b70c:	str	r1, [r0]
   2b710:	mov	r1, #3
   2b714:	b	2b624 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1f4>
   2b718:	ldr	r0, [r5, #192]	; 0xc0
   2b71c:	mov	r1, #64	; 0x40
   2b720:	str	r1, [sp]
   2b724:	add	r0, r0, r4
   2b728:	sub	r3, r0, #9
   2b72c:	mov	r0, r5
   2b730:	mov	r1, r7
   2b734:	mov	r2, r6
   2b738:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b73c:	cmp	r0, #0
   2b740:	beq	2b78c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x35c>
   2b744:	mov	r2, r0
   2b748:	mov	r0, #6
   2b74c:	str	r8, [r2, #24]
   2b750:	str	r0, [r2, #28]
   2b754:	mov	r0, #112	; 0x70
   2b758:	str	r0, [r2]
   2b75c:	mov	r0, #1
   2b760:	str	r0, [r2, #48]	; 0x30
   2b764:	ldr	r0, [r2, #32]
   2b768:	ldr	r1, [r5, #192]	; 0xc0
   2b76c:	sub	r0, r1, r0
   2b770:	add	r0, r0, r4
   2b774:	str	r0, [r2, #36]	; 0x24
   2b778:	mov	r0, r5
   2b77c:	mov	r1, r4
   2b780:	bl	114bc <myhtml_queue_add@plt>
   2b784:	cmp	r0, #0
   2b788:	beq	2b79c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x36c>
   2b78c:	mov	r0, #69	; 0x45
   2b790:	str	r0, [r5, #160]	; 0xa0
   2b794:	mov	r4, #0
   2b798:	b	2b6c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b79c:	mov	r0, #0
   2b7a0:	b	2b6c0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x290>
   2b7a4:	andeq	r1, sp, r3, asr r7
   2b7a8:			; <UNDEFINED> instruction: 0x000d16bf
   2b7ac:	andeq	r1, sp, r3, ror r6

0002b7b0 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2b7b0:	ldrb	r1, [r2, r3]
   2b7b4:	cmp	r1, #45	; 0x2d
   2b7b8:	beq	2b7dc <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2b7bc:	cmp	r1, #60	; 0x3c
   2b7c0:	bne	2b7cc <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x1c>
   2b7c4:	mov	r1, #24
   2b7c8:	b	2b7d8 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   2b7cc:	cmp	r1, #62	; 0x3e
   2b7d0:	movne	r1, #21
   2b7d4:	moveq	r1, #5
   2b7d8:	str	r1, [r0, #160]	; 0xa0
   2b7dc:	add	r0, r3, #1
   2b7e0:	bx	lr

0002b7e4 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2b7e4:	ldrb	r2, [r2, r3]
   2b7e8:	cmp	r2, #47	; 0x2f
   2b7ec:	bne	2b804 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x20>
   2b7f0:	mov	r1, #25
   2b7f4:	str	r1, [r0, #160]	; 0xa0
   2b7f8:	add	r3, r3, #1
   2b7fc:	mov	r0, r3
   2b800:	bx	lr
   2b804:	and	r2, r2, #223	; 0xdf
   2b808:	sub	r2, r2, #65	; 0x41
   2b80c:	uxtb	r2, r2
   2b810:	cmp	r2, #25
   2b814:	bhi	2b82c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x48>
   2b818:	ldr	r2, [r0, #192]	; 0xc0
   2b81c:	add	r2, r2, r3
   2b820:	str	r2, [r1, #12]
   2b824:	mov	r1, #27
   2b828:	b	2b830 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x4c>
   2b82c:	mov	r1, #21
   2b830:	str	r1, [r0, #160]	; 0xa0
   2b834:	mov	r0, r3
   2b838:	bx	lr

0002b83c <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2b83c:	ldrb	r2, [r2, r3]
   2b840:	and	r2, r2, #223	; 0xdf
   2b844:	sub	r2, r2, #65	; 0x41
   2b848:	uxtb	r2, r2
   2b84c:	mov	ip, #21
   2b850:	cmp	r2, #25
   2b854:	ldrls	r2, [r0, #192]	; 0xc0
   2b858:	addls	r2, r2, r3
   2b85c:	strls	r2, [r1, #12]
   2b860:	movls	ip, #26
   2b864:	str	ip, [r0, #160]	; 0xa0
   2b868:	mov	r0, r3
   2b86c:	bx	lr

0002b870 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2b870:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b874:	add	fp, sp, #24
   2b878:	sub	sp, sp, #8
   2b87c:	mov	r4, r3
   2b880:	mov	r5, r0
   2b884:	ldr	r0, [fp, #8]
   2b888:	cmp	r3, r0
   2b88c:	bcs	2bb04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2b890:	mov	r6, r2
   2b894:	mov	r7, r1
   2b898:	add	r4, r4, #1
   2b89c:	add	r1, r6, r4
   2b8a0:	ldrb	r1, [r1, #-1]
   2b8a4:	sub	r2, r1, #9
   2b8a8:	cmp	r2, #53	; 0x35
   2b8ac:	bhi	2b994 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x124>
   2b8b0:	add	r3, pc, #4
   2b8b4:	ldr	r2, [r3, r2, lsl #2]
   2b8b8:	add	pc, r3, r2
   2b8bc:	andeq	r0, r0, r0, lsr #2
   2b8c0:	andeq	r0, r0, r0, lsr #2
   2b8c4:	ldrdeq	r0, [r0], -r8
   2b8c8:	andeq	r0, r0, r0, lsr #2
   2b8cc:	andeq	r0, r0, r0, lsr #2
   2b8d0:	ldrdeq	r0, [r0], -r8
   2b8d4:	ldrdeq	r0, [r0], -r8
   2b8d8:	ldrdeq	r0, [r0], -r8
   2b8dc:	ldrdeq	r0, [r0], -r8
   2b8e0:	ldrdeq	r0, [r0], -r8
   2b8e4:	ldrdeq	r0, [r0], -r8
   2b8e8:	ldrdeq	r0, [r0], -r8
   2b8ec:	ldrdeq	r0, [r0], -r8
   2b8f0:	ldrdeq	r0, [r0], -r8
   2b8f4:	ldrdeq	r0, [r0], -r8
   2b8f8:	ldrdeq	r0, [r0], -r8
   2b8fc:	ldrdeq	r0, [r0], -r8
   2b900:	ldrdeq	r0, [r0], -r8
   2b904:	ldrdeq	r0, [r0], -r8
   2b908:	ldrdeq	r0, [r0], -r8
   2b90c:	ldrdeq	r0, [r0], -r8
   2b910:	ldrdeq	r0, [r0], -r8
   2b914:	ldrdeq	r0, [r0], -r8
   2b918:	andeq	r0, r0, r0, lsr #2
   2b91c:	ldrdeq	r0, [r0], -r8
   2b920:	ldrdeq	r0, [r0], -r8
   2b924:	ldrdeq	r0, [r0], -r8
   2b928:	ldrdeq	r0, [r0], -r8
   2b92c:	ldrdeq	r0, [r0], -r8
   2b930:	ldrdeq	r0, [r0], -r8
   2b934:	ldrdeq	r0, [r0], -r8
   2b938:	ldrdeq	r0, [r0], -r8
   2b93c:	ldrdeq	r0, [r0], -r8
   2b940:	ldrdeq	r0, [r0], -r8
   2b944:	ldrdeq	r0, [r0], -r8
   2b948:	ldrdeq	r0, [r0], -r8
   2b94c:	ldrdeq	r0, [r0], -r8
   2b950:	ldrdeq	r0, [r0], -r8
   2b954:			; <UNDEFINED> instruction: 0x000001b4
   2b958:	ldrdeq	r0, [r0], -r8
   2b95c:	ldrdeq	r0, [r0], -r8
   2b960:	ldrdeq	r0, [r0], -r8
   2b964:	ldrdeq	r0, [r0], -r8
   2b968:	ldrdeq	r0, [r0], -r8
   2b96c:	ldrdeq	r0, [r0], -r8
   2b970:	ldrdeq	r0, [r0], -r8
   2b974:	ldrdeq	r0, [r0], -r8
   2b978:	ldrdeq	r0, [r0], -r8
   2b97c:	ldrdeq	r0, [r0], -r8
   2b980:	ldrdeq	r0, [r0], -r8
   2b984:	ldrdeq	r0, [r0], -r8
   2b988:	ldrdeq	r0, [r0], -r8
   2b98c:	ldrdeq	r0, [r0], -r8
   2b990:	andeq	r0, r0, r0, lsl #4
   2b994:	sub	r2, r1, #97	; 0x61
   2b998:	uxtb	r2, r2
   2b99c:	cmp	r2, #26
   2b9a0:	bcc	2b9b4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   2b9a4:	sub	r1, r1, #65	; 0x41
   2b9a8:	uxtb	r1, r1
   2b9ac:	cmp	r1, #26
   2b9b0:	bcs	2b9cc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x15c>
   2b9b4:	add	r1, r4, #1
   2b9b8:	cmp	r4, r0
   2b9bc:	mov	r4, r1
   2b9c0:	bcc	2b89c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2c>
   2b9c4:	sub	r4, r1, #1
   2b9c8:	b	2bb04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2b9cc:	mov	r0, #21
   2b9d0:	str	r0, [r5, #160]	; 0xa0
   2b9d4:	sub	r4, r4, #1
   2b9d8:	b	2bb04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2b9dc:	ldr	r8, [r7, #12]
   2b9e0:	ldr	r0, [r5, #192]	; 0xc0
   2b9e4:	sub	r0, r0, r8
   2b9e8:	add	r0, r0, r4
   2b9ec:	cmp	r0, #7
   2b9f0:	bne	2bafc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2b9f4:	mov	r0, r5
   2b9f8:	mov	r1, r8
   2b9fc:	mov	r2, #6
   2ba00:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2ba04:	ldr	r1, [pc, #472]	; 2bbe4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x374>
   2ba08:	add	r1, pc, r1
   2ba0c:	mov	r2, #6
   2ba10:	bl	11714 <mycore_strncasecmp@plt>
   2ba14:	mov	r1, #21
   2ba18:	cmp	r0, #0
   2ba1c:	bne	2bab4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x244>
   2ba20:	ldr	r0, [r5, #192]	; 0xc0
   2ba24:	mov	r1, #64	; 0x40
   2ba28:	str	r1, [sp]
   2ba2c:	add	r0, r0, r4
   2ba30:	sub	r3, r0, #9
   2ba34:	mov	r0, r5
   2ba38:	mov	r1, r7
   2ba3c:	mov	r2, r6
   2ba40:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ba44:	cmp	r0, #0
   2ba48:	beq	2bbd4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x364>
   2ba4c:	mov	r1, #6
   2ba50:	str	r8, [r0, #24]
   2ba54:	str	r1, [r0, #28]
   2ba58:	mov	r1, #112	; 0x70
   2ba5c:	str	r1, [r0]
   2ba60:	mov	r1, #1
   2ba64:	str	r1, [r0, #48]	; 0x30
   2ba68:	mov	r1, #33	; 0x21
   2ba6c:	b	2bab4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x244>
   2ba70:	ldr	r8, [r7, #12]
   2ba74:	ldr	r0, [r5, #192]	; 0xc0
   2ba78:	sub	r0, r0, r8
   2ba7c:	add	r0, r0, r4
   2ba80:	cmp	r0, #7
   2ba84:	bne	2bafc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2ba88:	mov	r0, r5
   2ba8c:	mov	r1, r8
   2ba90:	mov	r2, #6
   2ba94:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2ba98:	ldr	r1, [pc, #328]	; 2bbe8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x378>
   2ba9c:	add	r1, pc, r1
   2baa0:	mov	r2, #6
   2baa4:	bl	11714 <mycore_strncasecmp@plt>
   2baa8:	mov	r1, #21
   2baac:	cmp	r0, #0
   2bab0:	beq	2bb10 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2a0>
   2bab4:	str	r1, [r5, #160]	; 0xa0
   2bab8:	b	2bb04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2babc:	ldr	r8, [r7, #12]
   2bac0:	ldr	r0, [r5, #192]	; 0xc0
   2bac4:	sub	r0, r0, r8
   2bac8:	add	r0, r0, r4
   2bacc:	cmp	r0, #7
   2bad0:	bne	2bafc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2bad4:	mov	r0, r5
   2bad8:	mov	r1, r8
   2badc:	mov	r2, #6
   2bae0:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2bae4:	ldr	r1, [pc, #256]	; 2bbec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x37c>
   2bae8:	add	r1, pc, r1
   2baec:	mov	r2, #6
   2baf0:	bl	11714 <mycore_strncasecmp@plt>
   2baf4:	cmp	r0, #0
   2baf8:	beq	2bb58 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2e8>
   2bafc:	mov	r0, #21
   2bb00:	str	r0, [r5, #160]	; 0xa0
   2bb04:	mov	r0, r4
   2bb08:	sub	sp, fp, #24
   2bb0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bb10:	ldr	r0, [r5, #192]	; 0xc0
   2bb14:	mov	r1, #64	; 0x40
   2bb18:	str	r1, [sp]
   2bb1c:	add	r0, r0, r4
   2bb20:	sub	r3, r0, #9
   2bb24:	mov	r0, r5
   2bb28:	mov	r1, r7
   2bb2c:	mov	r2, r6
   2bb30:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bb34:	cmp	r0, #0
   2bb38:	beq	2bbd4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x364>
   2bb3c:	mov	r1, #6
   2bb40:	str	r8, [r0, #24]
   2bb44:	str	r1, [r0, #28]
   2bb48:	mov	r1, #112	; 0x70
   2bb4c:	str	r1, [r0]
   2bb50:	mov	r1, #3
   2bb54:	b	2ba64 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1f4>
   2bb58:	ldr	r0, [r5, #192]	; 0xc0
   2bb5c:	mov	r1, #64	; 0x40
   2bb60:	str	r1, [sp]
   2bb64:	add	r0, r0, r4
   2bb68:	sub	r3, r0, #9
   2bb6c:	mov	r0, r5
   2bb70:	mov	r1, r7
   2bb74:	mov	r2, r6
   2bb78:	bl	1205c <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bb7c:	cmp	r0, #0
   2bb80:	beq	2bbd4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x364>
   2bb84:	mov	r2, r0
   2bb88:	mov	r0, #6
   2bb8c:	str	r8, [r2, #24]
   2bb90:	str	r0, [r2, #28]
   2bb94:	mov	r0, #112	; 0x70
   2bb98:	str	r0, [r2]
   2bb9c:	mov	r0, #1
   2bba0:	str	r0, [r2, #48]	; 0x30
   2bba4:	mov	r0, #0
   2bba8:	str	r0, [r5, #160]	; 0xa0
   2bbac:	ldr	r0, [r5, #192]	; 0xc0
   2bbb0:	ldr	r1, [r2, #32]
   2bbb4:	sub	r0, r0, r1
   2bbb8:	add	r0, r0, r4
   2bbbc:	str	r0, [r2, #36]	; 0x24
   2bbc0:	mov	r0, r5
   2bbc4:	mov	r1, r4
   2bbc8:	bl	114bc <myhtml_queue_add@plt>
   2bbcc:	cmp	r0, #0
   2bbd0:	beq	2bb04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2bbd4:	mov	r0, #69	; 0x45
   2bbd8:	str	r0, [r5, #160]	; 0xa0
   2bbdc:	mov	r4, #0
   2bbe0:	b	2bb04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2bbe4:	andeq	r1, sp, r3, lsl r3
   2bbe8:	andeq	r1, sp, pc, ror r2
   2bbec:	andeq	r1, sp, r3, lsr r2

0002bbf0 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2bbf0:	ldr	ip, [sp]
   2bbf4:	cmp	r3, ip
   2bbf8:	bcc	2bc10 <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>
   2bbfc:	mov	r0, r3
   2bc00:	bx	lr
   2bc04:	add	r3, r3, #1
   2bc08:	cmp	r3, ip
   2bc0c:	bcs	2bbfc <myhtml_tokenizer_state_script_data_escaped@@Base+0xc>
   2bc10:	ldrb	r1, [r2, r3]
   2bc14:	cmp	r1, #60	; 0x3c
   2bc18:	beq	2bc2c <myhtml_tokenizer_state_script_data_escaped@@Base+0x3c>
   2bc1c:	cmp	r1, #45	; 0x2d
   2bc20:	bne	2bc04 <myhtml_tokenizer_state_script_data_escaped@@Base+0x14>
   2bc24:	mov	r1, #22
   2bc28:	b	2bc30 <myhtml_tokenizer_state_script_data_escaped@@Base+0x40>
   2bc2c:	mov	r1, #24
   2bc30:	str	r1, [r0, #160]	; 0xa0
   2bc34:	add	r3, r3, #1
   2bc38:	mov	r0, r3
   2bc3c:	bx	lr

0002bc40 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2bc40:	ldrb	r1, [r2, r3]
   2bc44:	cmp	r1, #60	; 0x3c
   2bc48:	beq	2bc68 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x28>
   2bc4c:	cmp	r1, #45	; 0x2d
   2bc50:	bne	2bc78 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2bc54:	mov	r1, #23
   2bc58:	str	r1, [r0, #160]	; 0xa0
   2bc5c:	add	r3, r3, #1
   2bc60:	mov	r0, r3
   2bc64:	bx	lr
   2bc68:	mov	r1, #24
   2bc6c:	str	r1, [r0, #160]	; 0xa0
   2bc70:	mov	r0, r3
   2bc74:	bx	lr
   2bc78:	mov	r2, #21
   2bc7c:	str	r2, [r0, #160]	; 0xa0
   2bc80:	cmp	r1, #0
   2bc84:	addne	r3, r3, #1
   2bc88:	mov	r0, r3
   2bc8c:	bx	lr

0002bc90 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2bc90:	push	{r4, r5, r6, r7, fp, lr}
   2bc94:	add	fp, sp, #16
   2bc98:	mov	r4, r3
   2bc9c:	mov	r7, r0
   2bca0:	ldr	r0, [fp, #8]
   2bca4:	cmp	r3, r0
   2bca8:	bcs	2bdcc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x13c>
   2bcac:	ldrb	r3, [r2, r4]
   2bcb0:	sub	r5, r3, #9
   2bcb4:	cmp	r5, #53	; 0x35
   2bcb8:	bhi	2bda0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x110>
   2bcbc:	add	r6, pc, #4
   2bcc0:	ldr	r5, [r6, r5, lsl #2]
   2bcc4:	add	pc, r6, r5
   2bcc8:	andeq	r0, r0, ip, lsl #2
   2bccc:	andeq	r0, r0, ip, lsl #2
   2bcd0:	ldrdeq	r0, [r0], -r8
   2bcd4:	andeq	r0, r0, ip, lsl #2
   2bcd8:	andeq	r0, r0, ip, lsl #2
   2bcdc:	ldrdeq	r0, [r0], -r8
   2bce0:	ldrdeq	r0, [r0], -r8
   2bce4:	ldrdeq	r0, [r0], -r8
   2bce8:	ldrdeq	r0, [r0], -r8
   2bcec:	ldrdeq	r0, [r0], -r8
   2bcf0:	ldrdeq	r0, [r0], -r8
   2bcf4:	ldrdeq	r0, [r0], -r8
   2bcf8:	ldrdeq	r0, [r0], -r8
   2bcfc:	ldrdeq	r0, [r0], -r8
   2bd00:	ldrdeq	r0, [r0], -r8
   2bd04:	ldrdeq	r0, [r0], -r8
   2bd08:	ldrdeq	r0, [r0], -r8
   2bd0c:	ldrdeq	r0, [r0], -r8
   2bd10:	ldrdeq	r0, [r0], -r8
   2bd14:	ldrdeq	r0, [r0], -r8
   2bd18:	ldrdeq	r0, [r0], -r8
   2bd1c:	ldrdeq	r0, [r0], -r8
   2bd20:	ldrdeq	r0, [r0], -r8
   2bd24:	andeq	r0, r0, ip, lsl #2
   2bd28:	ldrdeq	r0, [r0], -r8
   2bd2c:	ldrdeq	r0, [r0], -r8
   2bd30:	ldrdeq	r0, [r0], -r8
   2bd34:	ldrdeq	r0, [r0], -r8
   2bd38:	ldrdeq	r0, [r0], -r8
   2bd3c:	ldrdeq	r0, [r0], -r8
   2bd40:	ldrdeq	r0, [r0], -r8
   2bd44:	ldrdeq	r0, [r0], -r8
   2bd48:	ldrdeq	r0, [r0], -r8
   2bd4c:	ldrdeq	r0, [r0], -r8
   2bd50:	ldrdeq	r0, [r0], -r8
   2bd54:	ldrdeq	r0, [r0], -r8
   2bd58:	ldrdeq	r0, [r0], -r8
   2bd5c:	ldrdeq	r0, [r0], -r8
   2bd60:	andeq	r0, r0, ip, lsl #2
   2bd64:	ldrdeq	r0, [r0], -r8
   2bd68:	ldrdeq	r0, [r0], -r8
   2bd6c:	ldrdeq	r0, [r0], -r8
   2bd70:	ldrdeq	r0, [r0], -r8
   2bd74:	ldrdeq	r0, [r0], -r8
   2bd78:	ldrdeq	r0, [r0], -r8
   2bd7c:	ldrdeq	r0, [r0], -r8
   2bd80:	ldrdeq	r0, [r0], -r8
   2bd84:	ldrdeq	r0, [r0], -r8
   2bd88:	ldrdeq	r0, [r0], -r8
   2bd8c:	ldrdeq	r0, [r0], -r8
   2bd90:	ldrdeq	r0, [r0], -r8
   2bd94:	ldrdeq	r0, [r0], -r8
   2bd98:	ldrdeq	r0, [r0], -r8
   2bd9c:	andeq	r0, r0, ip, lsl #2
   2bda0:	sub	r6, r3, #97	; 0x61
   2bda4:	uxtb	r6, r6
   2bda8:	cmp	r6, #26
   2bdac:	bcc	2bdc0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x130>
   2bdb0:	sub	r3, r3, #65	; 0x41
   2bdb4:	uxtb	r3, r3
   2bdb8:	cmp	r3, #26
   2bdbc:	bcs	2be1c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x18c>
   2bdc0:	add	r4, r4, #1
   2bdc4:	cmp	r4, r0
   2bdc8:	bcc	2bcac <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1c>
   2bdcc:	mov	r0, r4
   2bdd0:	pop	{r4, r5, r6, r7, fp, pc}
   2bdd4:	ldr	r0, [r7, #192]	; 0xc0
   2bdd8:	ldr	r1, [r1, #12]
   2bddc:	sub	r0, r1, r0
   2bde0:	add	r0, r0, #6
   2bde4:	cmp	r0, r4
   2bde8:	bne	2be2c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x19c>
   2bdec:	mov	r0, r7
   2bdf0:	mov	r2, #6
   2bdf4:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2bdf8:	ldr	r1, [pc, #64]	; 2be40 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1b0>
   2bdfc:	add	r1, pc, r1
   2be00:	mov	r2, #6
   2be04:	bl	11714 <mycore_strncasecmp@plt>
   2be08:	mov	r1, #21
   2be0c:	cmp	r0, #0
   2be10:	movweq	r1, #28
   2be14:	str	r1, [r7, #160]	; 0xa0
   2be18:	b	2be34 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1a4>
   2be1c:	mov	r0, #21
   2be20:	str	r0, [r7, #160]	; 0xa0
   2be24:	mov	r0, r4
   2be28:	pop	{r4, r5, r6, r7, fp, pc}
   2be2c:	mov	r0, #21
   2be30:	str	r0, [r7, #160]	; 0xa0
   2be34:	add	r4, r4, #1
   2be38:	mov	r0, r4
   2be3c:	pop	{r4, r5, r6, r7, fp, pc}
   2be40:	andeq	r0, sp, pc, lsl pc

0002be44 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2be44:	ldr	ip, [sp]
   2be48:	cmp	r3, ip
   2be4c:	bcc	2be64 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>
   2be50:	mov	r0, r3
   2be54:	bx	lr
   2be58:	add	r3, r3, #1
   2be5c:	cmp	r3, ip
   2be60:	bcs	2be50 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xc>
   2be64:	ldrb	r1, [r2, r3]
   2be68:	cmp	r1, #60	; 0x3c
   2be6c:	beq	2be80 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x3c>
   2be70:	cmp	r1, #45	; 0x2d
   2be74:	bne	2be58 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x14>
   2be78:	mov	r1, #29
   2be7c:	b	2be84 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x40>
   2be80:	mov	r1, #31
   2be84:	str	r1, [r0, #160]	; 0xa0
   2be88:	add	r3, r3, #1
   2be8c:	mov	r0, r3
   2be90:	bx	lr

0002be94 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2be94:	ldrb	r1, [r2, r3]
   2be98:	cmp	r1, #45	; 0x2d
   2be9c:	bne	2bea8 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x14>
   2bea0:	mov	r1, #30
   2bea4:	b	2beb4 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x20>
   2bea8:	cmp	r1, #60	; 0x3c
   2beac:	movne	r1, #28
   2beb0:	moveq	r1, #31
   2beb4:	str	r1, [r0, #160]	; 0xa0
   2beb8:	add	r0, r3, #1
   2bebc:	bx	lr

0002bec0 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2bec0:	ldrb	r1, [r2, r3]
   2bec4:	cmp	r1, #45	; 0x2d
   2bec8:	beq	2beec <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2becc:	cmp	r1, #60	; 0x3c
   2bed0:	bne	2bedc <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x1c>
   2bed4:	mov	r1, #31
   2bed8:	b	2bee8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   2bedc:	cmp	r1, #62	; 0x3e
   2bee0:	movne	r1, #28
   2bee4:	moveq	r1, #5
   2bee8:	str	r1, [r0, #160]	; 0xa0
   2beec:	add	r0, r3, #1
   2bef0:	bx	lr

0002bef4 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2bef4:	ldrb	r2, [r2, r3]
   2bef8:	cmp	r2, #47	; 0x2f
   2befc:	movne	r1, #28
   2bf00:	strne	r1, [r0, #160]	; 0xa0
   2bf04:	movne	r0, r3
   2bf08:	bxne	lr
   2bf0c:	mov	r2, #32
   2bf10:	str	r2, [r0, #160]	; 0xa0
   2bf14:	ldr	r0, [r0, #192]	; 0xc0
   2bf18:	add	r3, r3, #1
   2bf1c:	add	r0, r0, r3
   2bf20:	str	r0, [r1, #12]
   2bf24:	mov	r0, r3
   2bf28:	bx	lr

0002bf2c <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2bf2c:	push	{r4, r5, r6, r7, fp, lr}
   2bf30:	add	fp, sp, #16
   2bf34:	mov	r4, r3
   2bf38:	mov	r7, r0
   2bf3c:	ldr	r0, [fp, #8]
   2bf40:	cmp	r3, r0
   2bf44:	bcs	2c068 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x13c>
   2bf48:	ldrb	r3, [r2, r4]
   2bf4c:	sub	r5, r3, #9
   2bf50:	cmp	r5, #53	; 0x35
   2bf54:	bhi	2c03c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x110>
   2bf58:	add	r6, pc, #4
   2bf5c:	ldr	r5, [r6, r5, lsl #2]
   2bf60:	add	pc, r6, r5
   2bf64:	andeq	r0, r0, ip, lsl #2
   2bf68:	andeq	r0, r0, ip, lsl #2
   2bf6c:	ldrdeq	r0, [r0], -r8
   2bf70:	andeq	r0, r0, ip, lsl #2
   2bf74:	andeq	r0, r0, ip, lsl #2
   2bf78:	ldrdeq	r0, [r0], -r8
   2bf7c:	ldrdeq	r0, [r0], -r8
   2bf80:	ldrdeq	r0, [r0], -r8
   2bf84:	ldrdeq	r0, [r0], -r8
   2bf88:	ldrdeq	r0, [r0], -r8
   2bf8c:	ldrdeq	r0, [r0], -r8
   2bf90:	ldrdeq	r0, [r0], -r8
   2bf94:	ldrdeq	r0, [r0], -r8
   2bf98:	ldrdeq	r0, [r0], -r8
   2bf9c:	ldrdeq	r0, [r0], -r8
   2bfa0:	ldrdeq	r0, [r0], -r8
   2bfa4:	ldrdeq	r0, [r0], -r8
   2bfa8:	ldrdeq	r0, [r0], -r8
   2bfac:	ldrdeq	r0, [r0], -r8
   2bfb0:	ldrdeq	r0, [r0], -r8
   2bfb4:	ldrdeq	r0, [r0], -r8
   2bfb8:	ldrdeq	r0, [r0], -r8
   2bfbc:	ldrdeq	r0, [r0], -r8
   2bfc0:	andeq	r0, r0, ip, lsl #2
   2bfc4:	ldrdeq	r0, [r0], -r8
   2bfc8:	ldrdeq	r0, [r0], -r8
   2bfcc:	ldrdeq	r0, [r0], -r8
   2bfd0:	ldrdeq	r0, [r0], -r8
   2bfd4:	ldrdeq	r0, [r0], -r8
   2bfd8:	ldrdeq	r0, [r0], -r8
   2bfdc:	ldrdeq	r0, [r0], -r8
   2bfe0:	ldrdeq	r0, [r0], -r8
   2bfe4:	ldrdeq	r0, [r0], -r8
   2bfe8:	ldrdeq	r0, [r0], -r8
   2bfec:	ldrdeq	r0, [r0], -r8
   2bff0:	ldrdeq	r0, [r0], -r8
   2bff4:	ldrdeq	r0, [r0], -r8
   2bff8:	ldrdeq	r0, [r0], -r8
   2bffc:	andeq	r0, r0, ip, lsl #2
   2c000:	ldrdeq	r0, [r0], -r8
   2c004:	ldrdeq	r0, [r0], -r8
   2c008:	ldrdeq	r0, [r0], -r8
   2c00c:	ldrdeq	r0, [r0], -r8
   2c010:	ldrdeq	r0, [r0], -r8
   2c014:	ldrdeq	r0, [r0], -r8
   2c018:	ldrdeq	r0, [r0], -r8
   2c01c:	ldrdeq	r0, [r0], -r8
   2c020:	ldrdeq	r0, [r0], -r8
   2c024:	ldrdeq	r0, [r0], -r8
   2c028:	ldrdeq	r0, [r0], -r8
   2c02c:	ldrdeq	r0, [r0], -r8
   2c030:	ldrdeq	r0, [r0], -r8
   2c034:	ldrdeq	r0, [r0], -r8
   2c038:	andeq	r0, r0, ip, lsl #2
   2c03c:	sub	r6, r3, #97	; 0x61
   2c040:	uxtb	r6, r6
   2c044:	cmp	r6, #26
   2c048:	bcc	2c05c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x130>
   2c04c:	sub	r3, r3, #65	; 0x41
   2c050:	uxtb	r3, r3
   2c054:	cmp	r3, #26
   2c058:	bcs	2c0b8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x18c>
   2c05c:	add	r4, r4, #1
   2c060:	cmp	r4, r0
   2c064:	bcc	2bf48 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1c>
   2c068:	mov	r0, r4
   2c06c:	pop	{r4, r5, r6, r7, fp, pc}
   2c070:	ldr	r0, [r7, #192]	; 0xc0
   2c074:	ldr	r1, [r1, #12]
   2c078:	sub	r0, r1, r0
   2c07c:	add	r0, r0, #6
   2c080:	cmp	r0, r4
   2c084:	bne	2c0c8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x19c>
   2c088:	mov	r0, r7
   2c08c:	mov	r2, #6
   2c090:	bl	11300 <myhtml_tree_incomming_buffer_make_data@plt>
   2c094:	ldr	r1, [pc, #64]	; 2c0dc <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1b0>
   2c098:	add	r1, pc, r1
   2c09c:	mov	r2, #6
   2c0a0:	bl	11714 <mycore_strncasecmp@plt>
   2c0a4:	mov	r1, #28
   2c0a8:	cmp	r0, #0
   2c0ac:	movweq	r1, #21
   2c0b0:	str	r1, [r7, #160]	; 0xa0
   2c0b4:	b	2c0d0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1a4>
   2c0b8:	mov	r0, #28
   2c0bc:	str	r0, [r7, #160]	; 0xa0
   2c0c0:	mov	r0, r4
   2c0c4:	pop	{r4, r5, r6, r7, fp, pc}
   2c0c8:	mov	r0, #28
   2c0cc:	str	r0, [r7, #160]	; 0xa0
   2c0d0:	add	r4, r4, #1
   2c0d4:	mov	r0, r4
   2c0d8:	pop	{r4, r5, r6, r7, fp, pc}
   2c0dc:	andeq	r0, sp, r3, lsl #25

0002c0e0 <myhtml_tree_create@@Base>:
   2c0e0:	mov	r0, #1
   2c0e4:	mov	r1, #252	; 0xfc
   2c0e8:	b	113a8 <mycore_calloc@plt>

0002c0ec <myhtml_tree_init@@Base>:
   2c0ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c0f0:	add	fp, sp, #24
   2c0f4:	sub	sp, sp, #8
   2c0f8:	mov	r5, r1
   2c0fc:	mov	r4, r0
   2c100:	mov	r6, #0
   2c104:	str	r6, [sp, #4]
   2c108:	str	r1, [r0]
   2c10c:	mov	r1, #512	; 0x200
   2c110:	bl	12398 <myhtml_token_create@plt>
   2c114:	str	r0, [r4, #8]
   2c118:	cmp	r0, #0
   2c11c:	beq	2c340 <myhtml_tree_init@@Base+0x254>
   2c120:	vmov.i32	q8, #0	; 0x00000000
   2c124:	str	r6, [r4, #36]	; 0x24
   2c128:	str	r6, [r4, #184]	; 0xb8
   2c12c:	str	r6, [r4, #148]	; 0x94
   2c130:	str	r6, [r4, #208]	; 0xd0
   2c134:	add	r0, r4, #236	; 0xec
   2c138:	vst1.32	{d16-d17}, [r0]
   2c13c:	add	r0, r4, #220	; 0xdc
   2c140:	vst1.32	{d16-d17}, [r0]
   2c144:	ldr	r6, [sp, #4]
   2c148:	cmp	r6, #0
   2c14c:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c150:	bl	11e7c <mythread_queue_create@plt>
   2c154:	str	r0, [r4, #24]
   2c158:	cmp	r0, #0
   2c15c:	beq	2c350 <myhtml_tree_init@@Base+0x264>
   2c160:	movw	r1, #9182	; 0x23de
   2c164:	bl	11ae0 <mythread_queue_init@plt>
   2c168:	mov	r6, r0
   2c16c:	str	r0, [sp, #4]
   2c170:	cmp	r0, #0
   2c174:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c178:	bl	114b0 <mcobject_create@plt>
   2c17c:	str	r0, [r4, #72]	; 0x48
   2c180:	cmp	r0, #0
   2c184:	beq	2c358 <myhtml_tree_init@@Base+0x26c>
   2c188:	mov	r1, #256	; 0x100
   2c18c:	mov	r2, #24
   2c190:	bl	11bac <mcobject_init@plt>
   2c194:	mov	r6, r0
   2c198:	str	r0, [sp, #4]
   2c19c:	cmp	r0, #0
   2c1a0:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c1a4:	bl	1121c <mcobject_async_create@plt>
   2c1a8:	str	r0, [r4, #12]
   2c1ac:	cmp	r0, #0
   2c1b0:	beq	2c360 <myhtml_tree_init@@Base+0x274>
   2c1b4:	mov	r1, #128	; 0x80
   2c1b8:	mov	r2, #1024	; 0x400
   2c1bc:	mov	r3, #44	; 0x2c
   2c1c0:	bl	11150 <mcobject_async_init@plt>
   2c1c4:	str	r0, [sp]
   2c1c8:	movw	r6, #37366	; 0x91f6
   2c1cc:	cmp	r0, #0
   2c1d0:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c1d4:	bl	115e8 <mchar_async_create@plt>
   2c1d8:	str	r0, [r4, #4]
   2c1dc:	bl	11eb8 <myhtml_tree_active_formatting_init@plt>
   2c1e0:	str	r0, [r4, #124]	; 0x7c
   2c1e4:	bl	11f84 <myhtml_tree_open_elements_init@plt>
   2c1e8:	str	r0, [r4, #128]	; 0x80
   2c1ec:	bl	11c78 <myhtml_tree_list_init@plt>
   2c1f0:	str	r0, [r4, #132]	; 0x84
   2c1f4:	bl	11dd4 <myhtml_tree_token_list_init@plt>
   2c1f8:	str	r0, [r4, #136]	; 0x88
   2c1fc:	mov	r0, r4
   2c200:	bl	12098 <myhtml_tree_template_insertion_init@plt>
   2c204:	str	r0, [r4, #140]	; 0x8c
   2c208:	ldr	r0, [r4, #4]
   2c20c:	cmp	r0, #0
   2c210:	beq	2c350 <myhtml_tree_init@@Base+0x264>
   2c214:	mov	r1, #128	; 0x80
   2c218:	mov	r2, #20480	; 0x5000
   2c21c:	bl	118e8 <mchar_async_init@plt>
   2c220:	mov	r6, r0
   2c224:	str	r0, [sp, #4]
   2c228:	cmp	r0, #0
   2c22c:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c230:	ldr	r0, [r4, #12]
   2c234:	mov	r1, sp
   2c238:	bl	11e88 <mcobject_async_node_add@plt>
   2c23c:	str	r0, [r4, #48]	; 0x30
   2c240:	movw	r6, #37367	; 0x91f7
   2c244:	ldr	r0, [sp]
   2c248:	cmp	r0, #0
   2c24c:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c250:	ldr	r0, [r4, #8]
   2c254:	ldr	r0, [r0, #4]
   2c258:	mov	r1, sp
   2c25c:	bl	11e88 <mcobject_async_node_add@plt>
   2c260:	str	r0, [r4, #40]	; 0x28
   2c264:	ldr	r0, [sp]
   2c268:	cmp	r0, #0
   2c26c:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c270:	ldr	r0, [r4, #8]
   2c274:	ldr	r0, [r0, #8]
   2c278:	mov	r1, sp
   2c27c:	bl	11e88 <mcobject_async_node_add@plt>
   2c280:	str	r0, [r4, #44]	; 0x2c
   2c284:	ldr	r0, [sp]
   2c288:	cmp	r0, #0
   2c28c:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c290:	ldr	r0, [r5, #20]
   2c294:	mov	r1, #4
   2c298:	bl	113a8 <mycore_calloc@plt>
   2c29c:	str	r0, [r4, #144]	; 0x90
   2c2a0:	cmp	r0, #0
   2c2a4:	beq	2c350 <myhtml_tree_init@@Base+0x264>
   2c2a8:	ldr	r0, [r5, #20]
   2c2ac:	cmp	r0, #0
   2c2b0:	beq	2c2ec <myhtml_tree_init@@Base+0x200>
   2c2b4:	mov	r7, #0
   2c2b8:	add	r8, sp, #4
   2c2bc:	ldr	r0, [r4, #4]
   2c2c0:	mov	r1, r8
   2c2c4:	bl	11708 <mchar_async_node_add@plt>
   2c2c8:	ldr	r1, [r4, #144]	; 0x90
   2c2cc:	str	r0, [r1, r7, lsl #2]
   2c2d0:	ldr	r6, [sp, #4]
   2c2d4:	cmp	r6, #0
   2c2d8:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c2dc:	add	r7, r7, #1
   2c2e0:	ldr	r0, [r5, #20]
   2c2e4:	cmp	r7, r0
   2c2e8:	bcc	2c2bc <myhtml_tree_init@@Base+0x1d0>
   2c2ec:	ldr	r0, [r4, #144]	; 0x90
   2c2f0:	ldr	r0, [r0]
   2c2f4:	str	r0, [r4, #52]	; 0x34
   2c2f8:	bl	11258 <mcsync_create@plt>
   2c2fc:	str	r0, [r4, #16]
   2c300:	cmp	r0, #0
   2c304:	beq	2c350 <myhtml_tree_init@@Base+0x264>
   2c308:	bl	11c84 <mcsync_init@plt>
   2c30c:	cmp	r0, #0
   2c310:	mov	r6, #2
   2c314:	bne	2c344 <myhtml_tree_init@@Base+0x258>
   2c318:	bl	120ec <myhtml_tag_create@plt>
   2c31c:	mov	r1, r0
   2c320:	str	r0, [r4, #28]
   2c324:	mov	r0, r4
   2c328:	bl	11f48 <myhtml_tag_init@plt>
   2c32c:	str	r0, [sp, #4]
   2c330:	mov	r0, r4
   2c334:	bl	11b04 <myhtml_tree_clean@plt>
   2c338:	ldr	r6, [sp, #4]
   2c33c:	b	2c344 <myhtml_tree_init@@Base+0x258>
   2c340:	movw	r6, #37164	; 0x912c
   2c344:	mov	r0, r6
   2c348:	sub	sp, fp, #24
   2c34c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c350:	mov	r6, #2
   2c354:	b	2c344 <myhtml_tree_init@@Base+0x258>
   2c358:	movw	r6, #37368	; 0x91f8
   2c35c:	b	2c344 <myhtml_tree_init@@Base+0x258>
   2c360:	movw	r6, #37365	; 0x91f5
   2c364:	b	2c344 <myhtml_tree_init@@Base+0x258>

0002c368 <myhtml_tree_active_formatting_init@@Base>:
   2c368:	b	2c370 <myhtml_tree_list_init@@Base>

0002c36c <myhtml_tree_open_elements_init@@Base>:
   2c36c:	b	2c370 <myhtml_tree_list_init@@Base>

0002c370 <myhtml_tree_list_init@@Base>:
   2c370:	push	{r4, sl, fp, lr}
   2c374:	add	fp, sp, #8
   2c378:	mov	r0, #12
   2c37c:	bl	12050 <mycore_malloc@plt>
   2c380:	mov	r4, r0
   2c384:	mov	r0, #0
   2c388:	str	r0, [r4, #4]
   2c38c:	mov	r0, #4096	; 0x1000
   2c390:	str	r0, [r4, #8]
   2c394:	mov	r0, #16384	; 0x4000
   2c398:	bl	12050 <mycore_malloc@plt>
   2c39c:	str	r0, [r4]
   2c3a0:	mov	r0, r4
   2c3a4:	pop	{r4, sl, fp, pc}

0002c3a8 <myhtml_tree_token_list_init@@Base>:
   2c3a8:	push	{r4, sl, fp, lr}
   2c3ac:	add	fp, sp, #8
   2c3b0:	mov	r0, #12
   2c3b4:	bl	12050 <mycore_malloc@plt>
   2c3b8:	mov	r4, r0
   2c3bc:	mov	r0, #0
   2c3c0:	mov	r1, #4096	; 0x1000
   2c3c4:	stmib	r4, {r0, r1}
   2c3c8:	mov	r0, #16384	; 0x4000
   2c3cc:	bl	12050 <mycore_malloc@plt>
   2c3d0:	str	r0, [r4]
   2c3d4:	mov	r0, r4
   2c3d8:	pop	{r4, sl, fp, pc}

0002c3dc <myhtml_tree_template_insertion_init@@Base>:
   2c3dc:	push	{r4, r5, fp, lr}
   2c3e0:	add	fp, sp, #8
   2c3e4:	mov	r4, r0
   2c3e8:	mov	r0, #12
   2c3ec:	bl	12050 <mycore_malloc@plt>
   2c3f0:	mov	r5, r0
   2c3f4:	mov	r0, #0
   2c3f8:	mov	r1, #1024	; 0x400
   2c3fc:	stmib	r5, {r0, r1}
   2c400:	mov	r0, #4096	; 0x1000
   2c404:	bl	12050 <mycore_malloc@plt>
   2c408:	str	r0, [r5]
   2c40c:	str	r5, [r4, #140]	; 0x8c
   2c410:	mov	r0, r5
   2c414:	pop	{r4, r5, fp, pc}

0002c418 <myhtml_tree_clean@@Base>:
   2c418:	push	{r4, r5, r6, sl, fp, lr}
   2c41c:	add	fp, sp, #16
   2c420:	mov	r4, r0
   2c424:	ldr	r5, [r0]
   2c428:	ldr	r0, [r5, #20]
   2c42c:	cmp	r0, #0
   2c430:	beq	2c458 <myhtml_tree_clean@@Base+0x40>
   2c434:	mov	r6, #0
   2c438:	ldr	r0, [r4, #4]
   2c43c:	ldr	r1, [r4, #144]	; 0x90
   2c440:	ldr	r1, [r1, r6, lsl #2]
   2c444:	bl	11b1c <mchar_async_node_clean@plt>
   2c448:	add	r6, r6, #1
   2c44c:	ldr	r0, [r5, #20]
   2c450:	cmp	r6, r0
   2c454:	bcc	2c438 <myhtml_tree_clean@@Base+0x20>
   2c458:	ldr	r0, [r4, #12]
   2c45c:	ldr	r1, [r4, #48]	; 0x30
   2c460:	bl	11c9c <mcobject_async_node_clean@plt>
   2c464:	ldr	r0, [r4, #8]
   2c468:	ldr	r1, [r4, #40]	; 0x28
   2c46c:	ldr	r0, [r0, #4]
   2c470:	bl	11c9c <mcobject_async_node_clean@plt>
   2c474:	ldr	r0, [r4, #8]
   2c478:	ldr	r1, [r4, #44]	; 0x2c
   2c47c:	ldr	r0, [r0, #8]
   2c480:	bl	11c9c <mcobject_async_node_clean@plt>
   2c484:	ldr	r0, [r4, #20]
   2c488:	bl	11dbc <mythread_queue_list_entry_clean@plt>
   2c48c:	ldr	r0, [r4]
   2c490:	ldr	r1, [r4, #20]
   2c494:	ldr	r0, [r0, #4]
   2c498:	bl	120e0 <mythread_queue_list_entry_make_batch@plt>
   2c49c:	ldr	r0, [r4]
   2c4a0:	ldr	r1, [r4, #20]
   2c4a4:	ldr	r0, [r0]
   2c4a8:	bl	12290 <mythread_queue_list_entry_make_stream@plt>
   2c4ac:	ldr	r0, [r4, #8]
   2c4b0:	bl	119f0 <myhtml_token_clean@plt>
   2c4b4:	mov	r0, r4
   2c4b8:	bl	11474 <myhtml_tree_node_create@plt>
   2c4bc:	mov	r0, r4
   2c4c0:	bl	11474 <myhtml_tree_node_create@plt>
   2c4c4:	mov	r1, #2
   2c4c8:	vmov.i32	q8, #0	; 0x00000000
   2c4cc:	str	r1, [r4, #180]	; 0xb4
   2c4d0:	str	r0, [r4, #84]	; 0x54
   2c4d4:	mov	r0, #0
   2c4d8:	str	r0, [r4, #112]	; 0x70
   2c4dc:	str	r0, [r4, #116]	; 0x74
   2c4e0:	str	r0, [r4, #120]	; 0x78
   2c4e4:	str	r0, [r4, #60]	; 0x3c
   2c4e8:	add	r1, r4, #88	; 0x58
   2c4ec:	vst1.32	{d16-d17}, [r1]
   2c4f0:	str	r0, [r4, #105]	; 0x69
   2c4f4:	str	r0, [r4, #101]	; 0x65
   2c4f8:	str	r0, [r4, #176]	; 0xb0
   2c4fc:	add	r1, r4, #160	; 0xa0
   2c500:	vst1.32	{d16-d17}, [r1]
   2c504:	strb	r0, [r4, #188]	; 0xbc
   2c508:	str	r0, [r4, #156]	; 0x9c
   2c50c:	str	r0, [r4, #76]	; 0x4c
   2c510:	str	r0, [r4, #80]	; 0x50
   2c514:	str	r0, [r4, #68]	; 0x44
   2c518:	str	r0, [r4, #152]	; 0x98
   2c51c:	str	r0, [r4, #192]	; 0xc0
   2c520:	str	r0, [r4, #196]	; 0xc4
   2c524:	str	r0, [r4, #200]	; 0xc8
   2c528:	str	r0, [r4, #204]	; 0xcc
   2c52c:	ldr	r0, [r4, #148]	; 0x94
   2c530:	bl	118ac <myhtml_stream_buffer_clean@plt>
   2c534:	mov	r0, r4
   2c538:	bl	11c3c <myhtml_tree_active_formatting_clean@plt>
   2c53c:	mov	r0, r4
   2c540:	bl	121dc <myhtml_tree_open_elements_clean@plt>
   2c544:	ldr	r0, [r4, #132]	; 0x84
   2c548:	bl	116fc <myhtml_tree_list_clean@plt>
   2c54c:	ldr	r0, [r4, #136]	; 0x88
   2c550:	bl	12380 <myhtml_tree_token_list_clean@plt>
   2c554:	mov	r0, r4
   2c558:	bl	11864 <myhtml_tree_template_insertion_clean@plt>
   2c55c:	ldr	r0, [r4, #72]	; 0x48
   2c560:	bl	12308 <mcobject_clean@plt>
   2c564:	ldr	r0, [r4, #28]
   2c568:	bl	12410 <myhtml_tag_clean@plt>
   2c56c:	ldr	r0, [r4, #24]
   2c570:	bl	11228 <mythread_queue_clean@plt>
   2c574:	ldr	r0, [r4, #8]
   2c578:	ldr	r1, [r0, #16]
   2c57c:	bl	11d20 <myhtml_token_attr_create@plt>
   2c580:	str	r0, [r4, #56]	; 0x38
   2c584:	pop	{r4, r5, r6, sl, fp, pc}

0002c588 <myhtml_tree_node_create@@Base>:
   2c588:	push	{r4, r5, fp, lr}
   2c58c:	add	fp, sp, #8
   2c590:	mov	r4, r0
   2c594:	ldr	r0, [r0, #12]
   2c598:	ldr	r1, [r4, #48]	; 0x30
   2c59c:	mov	r2, #0
   2c5a0:	bl	11f90 <mcobject_async_malloc@plt>
   2c5a4:	mov	r5, r0
   2c5a8:	bl	12434 <myhtml_tree_node_clean@plt>
   2c5ac:	str	r4, [r5, #40]	; 0x28
   2c5b0:	mov	r0, r5
   2c5b4:	pop	{r4, r5, fp, pc}

0002c5b8 <myhtml_tree_active_formatting_clean@@Base>:
   2c5b8:	ldr	r0, [r0, #124]	; 0x7c
   2c5bc:	mov	r1, #0
   2c5c0:	str	r1, [r0, #4]
   2c5c4:	bx	lr

0002c5c8 <myhtml_tree_open_elements_clean@@Base>:
   2c5c8:	ldr	r0, [r0, #128]	; 0x80
   2c5cc:	mov	r1, #0
   2c5d0:	str	r1, [r0, #4]
   2c5d4:	bx	lr

0002c5d8 <myhtml_tree_list_clean@@Base>:
   2c5d8:	mov	r1, #0
   2c5dc:	str	r1, [r0, #4]
   2c5e0:	bx	lr

0002c5e4 <myhtml_tree_token_list_clean@@Base>:
   2c5e4:	mov	r1, #0
   2c5e8:	str	r1, [r0, #4]
   2c5ec:	bx	lr

0002c5f0 <myhtml_tree_template_insertion_clean@@Base>:
   2c5f0:	ldr	r0, [r0, #140]	; 0x8c
   2c5f4:	mov	r1, #0
   2c5f8:	str	r1, [r0, #4]
   2c5fc:	bx	lr

0002c600 <myhtml_tree_clean_all@@Base>:
   2c600:	push	{r4, sl, fp, lr}
   2c604:	add	fp, sp, #8
   2c608:	mov	r4, r0
   2c60c:	ldr	r0, [r0, #12]
   2c610:	bl	123ec <mcobject_async_clean@plt>
   2c614:	ldr	r0, [r4, #8]
   2c618:	bl	119f0 <myhtml_token_clean@plt>
   2c61c:	ldr	r0, [r4, #4]
   2c620:	bl	11f9c <mchar_async_clean@plt>
   2c624:	mov	r0, r4
   2c628:	bl	11474 <myhtml_tree_node_create@plt>
   2c62c:	mov	r0, r4
   2c630:	bl	11474 <myhtml_tree_node_create@plt>
   2c634:	mov	r1, #2
   2c638:	vmov.i32	q8, #0	; 0x00000000
   2c63c:	str	r1, [r4, #180]	; 0xb4
   2c640:	str	r0, [r4, #84]	; 0x54
   2c644:	mov	r0, #0
   2c648:	str	r0, [r4, #112]	; 0x70
   2c64c:	str	r0, [r4, #116]	; 0x74
   2c650:	str	r0, [r4, #120]	; 0x78
   2c654:	str	r0, [r4, #60]	; 0x3c
   2c658:	add	r1, r4, #88	; 0x58
   2c65c:	vst1.32	{d16-d17}, [r1]
   2c660:	str	r0, [r4, #105]	; 0x69
   2c664:	str	r0, [r4, #101]	; 0x65
   2c668:	str	r0, [r4, #176]	; 0xb0
   2c66c:	add	r1, r4, #160	; 0xa0
   2c670:	vst1.32	{d16-d17}, [r1]
   2c674:	strb	r0, [r4, #188]	; 0xbc
   2c678:	str	r0, [r4, #156]	; 0x9c
   2c67c:	str	r0, [r4, #76]	; 0x4c
   2c680:	str	r0, [r4, #80]	; 0x50
   2c684:	str	r0, [r4, #68]	; 0x44
   2c688:	str	r0, [r4, #152]	; 0x98
   2c68c:	str	r0, [r4, #192]	; 0xc0
   2c690:	str	r0, [r4, #196]	; 0xc4
   2c694:	str	r0, [r4, #200]	; 0xc8
   2c698:	str	r0, [r4, #204]	; 0xcc
   2c69c:	ldr	r0, [r4, #148]	; 0x94
   2c6a0:	bl	118ac <myhtml_stream_buffer_clean@plt>
   2c6a4:	mov	r0, r4
   2c6a8:	bl	11c3c <myhtml_tree_active_formatting_clean@plt>
   2c6ac:	mov	r0, r4
   2c6b0:	bl	121dc <myhtml_tree_open_elements_clean@plt>
   2c6b4:	ldr	r0, [r4, #132]	; 0x84
   2c6b8:	bl	116fc <myhtml_tree_list_clean@plt>
   2c6bc:	ldr	r0, [r4, #136]	; 0x88
   2c6c0:	bl	12380 <myhtml_tree_token_list_clean@plt>
   2c6c4:	mov	r0, r4
   2c6c8:	bl	11864 <myhtml_tree_template_insertion_clean@plt>
   2c6cc:	ldr	r0, [r4, #72]	; 0x48
   2c6d0:	bl	12308 <mcobject_clean@plt>
   2c6d4:	ldr	r0, [r4, #28]
   2c6d8:	bl	12410 <myhtml_tag_clean@plt>
   2c6dc:	ldr	r0, [r4, #20]
   2c6e0:	bl	11dbc <mythread_queue_list_entry_clean@plt>
   2c6e4:	ldr	r0, [r4]
   2c6e8:	ldr	r1, [r4, #20]
   2c6ec:	ldr	r0, [r0, #4]
   2c6f0:	bl	120e0 <mythread_queue_list_entry_make_batch@plt>
   2c6f4:	ldr	r0, [r4]
   2c6f8:	ldr	r1, [r4, #20]
   2c6fc:	ldr	r0, [r0]
   2c700:	bl	12290 <mythread_queue_list_entry_make_stream@plt>
   2c704:	ldr	r0, [r4, #8]
   2c708:	ldr	r1, [r0, #16]
   2c70c:	bl	11d20 <myhtml_token_attr_create@plt>
   2c710:	str	r0, [r4, #56]	; 0x38
   2c714:	pop	{r4, sl, fp, pc}

0002c718 <myhtml_tree_destroy@@Base>:
   2c718:	cmp	r0, #0
   2c71c:	beq	2c808 <myhtml_tree_destroy@@Base+0xf0>
   2c720:	push	{r4, sl, fp, lr}
   2c724:	add	fp, sp, #8
   2c728:	mov	r4, r0
   2c72c:	ldr	r0, [r0, #28]
   2c730:	bl	12200 <myhtml_tag_destroy@plt>
   2c734:	str	r0, [r4, #28]
   2c738:	mov	r0, r4
   2c73c:	bl	11564 <myhtml_tree_active_formatting_destroy@plt>
   2c740:	str	r0, [r4, #124]	; 0x7c
   2c744:	mov	r0, r4
   2c748:	bl	120a4 <myhtml_tree_open_elements_destroy@plt>
   2c74c:	str	r0, [r4, #128]	; 0x80
   2c750:	ldr	r0, [r4, #132]	; 0x84
   2c754:	mov	r1, #1
   2c758:	bl	11b28 <myhtml_tree_list_destroy@plt>
   2c75c:	str	r0, [r4, #132]	; 0x84
   2c760:	ldr	r0, [r4, #136]	; 0x88
   2c764:	mov	r1, #1
   2c768:	bl	11144 <myhtml_tree_token_list_destroy@plt>
   2c76c:	str	r0, [r4, #136]	; 0x88
   2c770:	mov	r0, r4
   2c774:	bl	121f4 <myhtml_tree_template_insertion_destroy@plt>
   2c778:	mov	r0, #0
   2c77c:	str	r0, [r4, #140]	; 0x8c
   2c780:	ldr	r0, [r4, #16]
   2c784:	mov	r1, #1
   2c788:	bl	11630 <mcsync_destroy@plt>
   2c78c:	str	r0, [r4, #16]
   2c790:	ldr	r0, [r4, #12]
   2c794:	mov	r1, #1
   2c798:	bl	11f18 <mcobject_async_destroy@plt>
   2c79c:	str	r0, [r4, #12]
   2c7a0:	ldr	r0, [r4, #8]
   2c7a4:	bl	11bb8 <myhtml_token_destroy@plt>
   2c7a8:	str	r0, [r4, #8]
   2c7ac:	ldr	r0, [r4, #4]
   2c7b0:	mov	r1, #1
   2c7b4:	bl	12164 <mchar_async_destroy@plt>
   2c7b8:	str	r0, [r4, #4]
   2c7bc:	ldr	r0, [r4, #148]	; 0x94
   2c7c0:	mov	r1, #1
   2c7c4:	bl	111ec <myhtml_stream_buffer_destroy@plt>
   2c7c8:	str	r0, [r4, #148]	; 0x94
   2c7cc:	ldr	r0, [r4, #24]
   2c7d0:	bl	11744 <mythread_queue_destroy@plt>
   2c7d4:	str	r0, [r4, #24]
   2c7d8:	ldr	r0, [r4, #72]	; 0x48
   2c7dc:	mov	r1, #1
   2c7e0:	bl	11288 <mcobject_destroy@plt>
   2c7e4:	str	r0, [r4, #72]	; 0x48
   2c7e8:	add	r0, r4, #208	; 0xd0
   2c7ec:	mov	r1, #0
   2c7f0:	bl	11d5c <myhtml_tree_temp_tag_name_destroy@plt>
   2c7f4:	ldr	r0, [r4, #144]	; 0x90
   2c7f8:	bl	12188 <mycore_free@plt>
   2c7fc:	mov	r0, r4
   2c800:	bl	12188 <mycore_free@plt>
   2c804:	pop	{r4, sl, fp, lr}
   2c808:	mov	r0, #0
   2c80c:	bx	lr

0002c810 <myhtml_tree_active_formatting_destroy@@Base>:
   2c810:	ldr	r0, [r0, #124]	; 0x7c
   2c814:	mov	r1, #1
   2c818:	b	2c828 <myhtml_tree_list_destroy@@Base>

0002c81c <myhtml_tree_open_elements_destroy@@Base>:
   2c81c:	ldr	r0, [r0, #128]	; 0x80
   2c820:	mov	r1, #1
   2c824:	b	2c828 <myhtml_tree_list_destroy@@Base>

0002c828 <myhtml_tree_list_destroy@@Base>:
   2c828:	push	{r4, r5, r6, sl, fp, lr}
   2c82c:	add	fp, sp, #16
   2c830:	mov	r4, #0
   2c834:	cmp	r0, #0
   2c838:	beq	2c868 <myhtml_tree_list_destroy@@Base+0x40>
   2c83c:	mov	r6, r1
   2c840:	mov	r5, r0
   2c844:	ldr	r0, [r0]
   2c848:	cmp	r0, #0
   2c84c:	beq	2c854 <myhtml_tree_list_destroy@@Base+0x2c>
   2c850:	bl	12188 <mycore_free@plt>
   2c854:	cmp	r6, #0
   2c858:	moveq	r0, r5
   2c85c:	popeq	{r4, r5, r6, sl, fp, pc}
   2c860:	mov	r0, r5
   2c864:	bl	12188 <mycore_free@plt>
   2c868:	mov	r0, r4
   2c86c:	pop	{r4, r5, r6, sl, fp, pc}

0002c870 <myhtml_tree_token_list_destroy@@Base>:
   2c870:	push	{r4, r5, r6, sl, fp, lr}
   2c874:	add	fp, sp, #16
   2c878:	mov	r4, #0
   2c87c:	cmp	r0, #0
   2c880:	beq	2c8b0 <myhtml_tree_token_list_destroy@@Base+0x40>
   2c884:	mov	r6, r1
   2c888:	mov	r5, r0
   2c88c:	ldr	r0, [r0]
   2c890:	cmp	r0, #0
   2c894:	beq	2c89c <myhtml_tree_token_list_destroy@@Base+0x2c>
   2c898:	bl	12188 <mycore_free@plt>
   2c89c:	cmp	r6, #0
   2c8a0:	moveq	r0, r5
   2c8a4:	popeq	{r4, r5, r6, sl, fp, pc}
   2c8a8:	mov	r0, r5
   2c8ac:	bl	12188 <mycore_free@plt>
   2c8b0:	mov	r0, r4
   2c8b4:	pop	{r4, r5, r6, sl, fp, pc}

0002c8b8 <myhtml_tree_template_insertion_destroy@@Base>:
   2c8b8:	push	{r4, sl, fp, lr}
   2c8bc:	add	fp, sp, #8
   2c8c0:	mov	r4, r0
   2c8c4:	ldr	r0, [r0, #140]	; 0x8c
   2c8c8:	cmp	r0, #0
   2c8cc:	beq	2c8f0 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2c8d0:	ldr	r0, [r0]
   2c8d4:	cmp	r0, #0
   2c8d8:	beq	2c8e0 <myhtml_tree_template_insertion_destroy@@Base+0x28>
   2c8dc:	bl	12188 <mycore_free@plt>
   2c8e0:	ldr	r0, [r4, #140]	; 0x8c
   2c8e4:	cmp	r0, #0
   2c8e8:	beq	2c8f0 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2c8ec:	bl	12188 <mycore_free@plt>
   2c8f0:	mov	r0, #0
   2c8f4:	pop	{r4, sl, fp, pc}

0002c8f8 <myhtml_tree_temp_tag_name_destroy@@Base>:
   2c8f8:	push	{r4, r5, r6, sl, fp, lr}
   2c8fc:	add	fp, sp, #16
   2c900:	mov	r4, #0
   2c904:	cmp	r0, #0
   2c908:	beq	2c940 <myhtml_tree_temp_tag_name_destroy@@Base+0x48>
   2c90c:	mov	r6, r1
   2c910:	mov	r5, r0
   2c914:	ldr	r0, [r0]
   2c918:	cmp	r0, #0
   2c91c:	beq	2c92c <myhtml_tree_temp_tag_name_destroy@@Base+0x34>
   2c920:	bl	12188 <mycore_free@plt>
   2c924:	mov	r0, #0
   2c928:	str	r0, [r5]
   2c92c:	cmp	r6, #0
   2c930:	moveq	r0, r5
   2c934:	popeq	{r4, r5, r6, sl, fp, pc}
   2c938:	mov	r0, r5
   2c93c:	bl	12188 <mycore_free@plt>
   2c940:	mov	r0, r4
   2c944:	pop	{r4, r5, r6, sl, fp, pc}

0002c948 <myhtml_tree_node_clean@@Base>:
   2c948:	vmov.i32	q8, #0	; 0x00000000
   2c94c:	add	r1, r0, #28
   2c950:	vst1.32	{d16-d17}, [r1]
   2c954:	add	r1, r0, #16
   2c958:	vst1.32	{d16-d17}, [r1]
   2c95c:	mov	r1, #8
   2c960:	vst1.32	{d16-d17}, [r0], r1
   2c964:	mov	r1, #1
   2c968:	str	r1, [r0]
   2c96c:	bx	lr

0002c970 <myhtml_tree_parse_flags@@Base>:
   2c970:	ldr	r0, [r0, #184]	; 0xb8
   2c974:	bx	lr

0002c978 <myhtml_tree_parse_flags_set@@Base>:
   2c978:	str	r1, [r0, #184]	; 0xb8
   2c97c:	bx	lr

0002c980 <myhtml_tree_get_myhtml@@Base>:
   2c980:	cmp	r0, #0
   2c984:	ldrne	r0, [r0]
   2c988:	moveq	r0, #0
   2c98c:	bx	lr

0002c990 <myhtml_tree_get_tag@@Base>:
   2c990:	cmp	r0, #0
   2c994:	ldrne	r0, [r0, #28]
   2c998:	moveq	r0, #0
   2c99c:	bx	lr

0002c9a0 <myhtml_tree_get_document@@Base>:
   2c9a0:	ldr	r0, [r0, #84]	; 0x54
   2c9a4:	bx	lr

0002c9a8 <myhtml_tree_get_node_html@@Base>:
   2c9a8:	ldr	r0, [r0, #96]	; 0x60
   2c9ac:	bx	lr

0002c9b0 <myhtml_tree_get_node_body@@Base>:
   2c9b0:	ldr	r0, [r0, #100]	; 0x64
   2c9b4:	bx	lr

0002c9b8 <myhtml_tree_get_node_head@@Base>:
   2c9b8:	ldr	r0, [r0, #92]	; 0x5c
   2c9bc:	bx	lr

0002c9c0 <myhtml_tree_get_mchar@@Base>:
   2c9c0:	ldr	r0, [r0, #4]
   2c9c4:	bx	lr

0002c9c8 <myhtml_tree_get_mchar_node_id@@Base>:
   2c9c8:	ldr	r0, [r0, #52]	; 0x34
   2c9cc:	bx	lr

0002c9d0 <myhtml_tree_node_add_child@@Base>:
   2c9d0:	ldr	r2, [r0, #28]
   2c9d4:	cmp	r2, #0
   2c9d8:	beq	2c9ec <myhtml_tree_node_add_child@@Base+0x1c>
   2c9dc:	str	r1, [r2, #16]
   2c9e0:	ldr	r2, [r0, #28]
   2c9e4:	str	r2, [r1, #12]
   2c9e8:	b	2c9f0 <myhtml_tree_node_add_child@@Base+0x20>
   2c9ec:	str	r1, [r0, #20]
   2c9f0:	str	r0, [r1, #24]
   2c9f4:	str	r1, [r0, #28]
   2c9f8:	ldr	r0, [r1, #40]	; 0x28
   2c9fc:	ldr	r3, [r0, #236]	; 0xec
   2ca00:	cmp	r3, #0
   2ca04:	bxeq	lr
   2ca08:	ldr	r2, [r0, #244]	; 0xf4
   2ca0c:	bx	r3

0002ca10 <myhtml_tree_node_insert_before@@Base>:
   2ca10:	ldr	r2, [r0, #12]
   2ca14:	cmp	r2, #0
   2ca18:	beq	2ca2c <myhtml_tree_node_insert_before@@Base+0x1c>
   2ca1c:	str	r1, [r2, #16]
   2ca20:	ldr	r2, [r0, #12]
   2ca24:	str	r2, [r1, #12]
   2ca28:	b	2ca34 <myhtml_tree_node_insert_before@@Base+0x24>
   2ca2c:	ldr	r2, [r0, #24]
   2ca30:	str	r1, [r2, #20]
   2ca34:	ldr	r2, [r0, #24]
   2ca38:	str	r0, [r1, #16]
   2ca3c:	str	r2, [r1, #24]
   2ca40:	str	r1, [r0, #12]
   2ca44:	ldr	r0, [r1, #40]	; 0x28
   2ca48:	ldr	r3, [r0, #236]	; 0xec
   2ca4c:	cmp	r3, #0
   2ca50:	bxeq	lr
   2ca54:	ldr	r2, [r0, #244]	; 0xf4
   2ca58:	bx	r3

0002ca5c <myhtml_tree_node_insert_after@@Base>:
   2ca5c:	ldr	r2, [r0, #16]
   2ca60:	cmp	r2, #0
   2ca64:	beq	2ca78 <myhtml_tree_node_insert_after@@Base+0x1c>
   2ca68:	str	r1, [r2, #12]
   2ca6c:	ldr	r2, [r0, #16]
   2ca70:	str	r2, [r1, #16]
   2ca74:	b	2ca80 <myhtml_tree_node_insert_after@@Base+0x24>
   2ca78:	ldr	r2, [r0, #24]
   2ca7c:	str	r1, [r2, #28]
   2ca80:	ldr	r2, [r0, #24]
   2ca84:	str	r0, [r1, #12]
   2ca88:	str	r2, [r1, #24]
   2ca8c:	str	r1, [r0, #16]
   2ca90:	ldr	r0, [r1, #40]	; 0x28
   2ca94:	ldr	r3, [r0, #236]	; 0xec
   2ca98:	cmp	r3, #0
   2ca9c:	bxeq	lr
   2caa0:	ldr	r2, [r0, #244]	; 0xf4
   2caa4:	bx	r3

0002caa8 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2caa8:	ldr	r0, [r0, #24]
   2caac:	cmp	r0, #0
   2cab0:	ldrne	r2, [r0, #4]
   2cab4:	cmpne	r2, r1
   2cab8:	bne	2caa8 <myhtml_tree_node_find_parent_by_tag_id@@Base>
   2cabc:	bx	lr

0002cac0 <myhtml_tree_node_remove@@Base>:
   2cac0:	push	{r4, sl, fp, lr}
   2cac4:	add	fp, sp, #8
   2cac8:	mov	r4, r0
   2cacc:	ldr	r0, [r0, #16]
   2cad0:	cmp	r0, #0
   2cad4:	beq	2cae0 <myhtml_tree_node_remove@@Base+0x20>
   2cad8:	add	r0, r0, #12
   2cadc:	b	2caf0 <myhtml_tree_node_remove@@Base+0x30>
   2cae0:	ldr	r0, [r4, #24]
   2cae4:	cmp	r0, #0
   2cae8:	beq	2caf8 <myhtml_tree_node_remove@@Base+0x38>
   2caec:	add	r0, r0, #28
   2caf0:	ldr	r1, [r4, #12]
   2caf4:	str	r1, [r0]
   2caf8:	ldr	r0, [r4, #12]
   2cafc:	cmp	r0, #0
   2cb00:	beq	2cb0c <myhtml_tree_node_remove@@Base+0x4c>
   2cb04:	add	r0, r0, #16
   2cb08:	b	2cb1c <myhtml_tree_node_remove@@Base+0x5c>
   2cb0c:	ldr	r0, [r4, #24]
   2cb10:	cmp	r0, #0
   2cb14:	beq	2cb24 <myhtml_tree_node_remove@@Base+0x64>
   2cb18:	add	r0, r0, #20
   2cb1c:	ldr	r1, [r4, #16]
   2cb20:	str	r1, [r0]
   2cb24:	ldr	r0, [r4, #40]	; 0x28
   2cb28:	ldr	r3, [r0, #240]	; 0xf0
   2cb2c:	cmp	r3, #0
   2cb30:	beq	2cb40 <myhtml_tree_node_remove@@Base+0x80>
   2cb34:	ldr	r2, [r0, #248]	; 0xf8
   2cb38:	mov	r1, r4
   2cb3c:	blx	r3
   2cb40:	mov	r0, #0
   2cb44:	str	r0, [r4, #12]
   2cb48:	str	r0, [r4, #16]
   2cb4c:	str	r0, [r4, #24]
   2cb50:	mov	r0, r4
   2cb54:	pop	{r4, sl, fp, pc}

0002cb58 <myhtml_tree_node_free@@Base>:
   2cb58:	cmp	r0, #0
   2cb5c:	bxeq	lr
   2cb60:	push	{r4, sl, fp, lr}
   2cb64:	add	fp, sp, #8
   2cb68:	mov	r4, r0
   2cb6c:	ldr	r1, [r0, #32]
   2cb70:	cmp	r1, #0
   2cb74:	beq	2cb94 <myhtml_tree_node_free@@Base+0x3c>
   2cb78:	ldr	r0, [r4, #40]	; 0x28
   2cb7c:	ldr	r0, [r0, #8]
   2cb80:	bl	11c00 <myhtml_token_attr_delete_all@plt>
   2cb84:	ldr	r1, [r4, #32]
   2cb88:	ldr	r0, [r4, #40]	; 0x28
   2cb8c:	ldr	r0, [r0, #8]
   2cb90:	bl	12320 <myhtml_token_delete@plt>
   2cb94:	ldr	r0, [r4, #40]	; 0x28
   2cb98:	ldr	r0, [r0, #12]
   2cb9c:	mov	r1, r4
   2cba0:	pop	{r4, sl, fp, lr}
   2cba4:	b	114e0 <mcobject_async_free@plt>

0002cba8 <myhtml_tree_node_delete@@Base>:
   2cba8:	cmp	r0, #0
   2cbac:	bxeq	lr
   2cbb0:	push	{fp, lr}
   2cbb4:	mov	fp, sp
   2cbb8:	bl	121ac <myhtml_tree_node_remove@plt>
   2cbbc:	pop	{fp, lr}
   2cbc0:	b	2cb58 <myhtml_tree_node_free@@Base>

0002cbc4 <myhtml_tree_node_delete_recursive@@Base>:
   2cbc4:	cmp	r0, #0
   2cbc8:	bxeq	lr
   2cbcc:	push	{r4, sl, fp, lr}
   2cbd0:	add	fp, sp, #8
   2cbd4:	mov	r4, r0
   2cbd8:	ldr	r0, [r0, #20]
   2cbdc:	cmp	r0, #0
   2cbe0:	blne	2cbf0 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   2cbe4:	mov	r0, r4
   2cbe8:	pop	{r4, sl, fp, lr}
   2cbec:	b	2cba8 <myhtml_tree_node_delete@@Base>
   2cbf0:	push	{r4, sl, fp, lr}
   2cbf4:	add	fp, sp, #8
   2cbf8:	cmp	r0, #0
   2cbfc:	popeq	{r4, sl, fp, pc}
   2cc00:	mov	r4, r0
   2cc04:	ldr	r0, [r4, #20]
   2cc08:	cmp	r0, #0
   2cc0c:	blne	2cbf0 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   2cc10:	ldr	r4, [r4, #16]
   2cc14:	mov	r0, r4
   2cc18:	bl	1217c <myhtml_tree_node_delete@plt>
   2cc1c:	cmp	r4, #0
   2cc20:	bne	2cc04 <myhtml_tree_node_delete_recursive@@Base+0x40>
   2cc24:	pop	{r4, sl, fp, pc}

0002cc28 <myhtml_tree_node_clone@@Base>:
   2cc28:	push	{r4, r5, fp, lr}
   2cc2c:	add	fp, sp, #8
   2cc30:	mov	r5, r0
   2cc34:	ldr	r0, [r0, #40]	; 0x28
   2cc38:	bl	11474 <myhtml_tree_node_create@plt>
   2cc3c:	mov	r4, r0
   2cc40:	ldr	r1, [r5, #32]
   2cc44:	cmp	r1, #0
   2cc48:	beq	2cc58 <myhtml_tree_node_clone@@Base+0x30>
   2cc4c:	ldr	r0, [r5, #40]	; 0x28
   2cc50:	ldr	r0, [r0, #8]
   2cc54:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   2cc58:	ldr	r1, [r5, #32]
   2cc5c:	ldr	r3, [r5, #40]	; 0x28
   2cc60:	ldr	r0, [r3, #8]
   2cc64:	ldr	r2, [r3, #40]	; 0x28
   2cc68:	ldr	r3, [r3, #44]	; 0x2c
   2cc6c:	bl	113c0 <myhtml_token_node_clone@plt>
   2cc70:	str	r0, [r4, #32]
   2cc74:	ldr	r1, [r5, #4]
   2cc78:	str	r1, [r4, #4]
   2cc7c:	ldr	r1, [r5, #8]
   2cc80:	str	r1, [r4, #8]
   2cc84:	cmp	r0, #0
   2cc88:	ldrne	r1, [r0, #48]	; 0x30
   2cc8c:	orrne	r1, r1, #4
   2cc90:	strne	r1, [r0, #48]	; 0x30
   2cc94:	mov	r0, r4
   2cc98:	pop	{r4, r5, fp, pc}

0002cc9c <myhtml_tree_node_insert_by_mode@@Base>:
   2cc9c:	cmp	r2, #1
   2cca0:	beq	2ccb0 <myhtml_tree_node_insert_by_mode@@Base+0x14>
   2cca4:	cmp	r2, #0
   2cca8:	bne	2ccb4 <myhtml_tree_node_insert_by_mode@@Base+0x18>
   2ccac:	b	2c9d0 <myhtml_tree_node_add_child@@Base>
   2ccb0:	b	2ca10 <myhtml_tree_node_insert_before@@Base>
   2ccb4:	b	2ca5c <myhtml_tree_node_insert_after@@Base>

0002ccb8 <myhtml_tree_node_insert_by_token@@Base>:
   2ccb8:	push	{r4, r5, r6, r7, fp, lr}
   2ccbc:	add	fp, sp, #16
   2ccc0:	sub	sp, sp, #8
   2ccc4:	mov	r4, r2
   2ccc8:	mov	r5, r1
   2cccc:	mov	r6, r0
   2ccd0:	bl	11474 <myhtml_tree_node_create@plt>
   2ccd4:	mov	r7, r0
   2ccd8:	ldr	r0, [r5]
   2ccdc:	str	r5, [r7, #32]
   2cce0:	stmib	r7, {r0, r4}
   2cce4:	add	r2, sp, #4
   2cce8:	mov	r0, r6
   2ccec:	mov	r1, #0
   2ccf0:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2ccf4:	ldr	r2, [sp, #4]
   2ccf8:	mov	r1, r7
   2ccfc:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2cd00:	mov	r0, r6
   2cd04:	mov	r1, r7
   2cd08:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2cd0c:	mov	r0, r7
   2cd10:	sub	sp, fp, #16
   2cd14:	pop	{r4, r5, r6, r7, fp, pc}

0002cd18 <myhtml_tree_appropriate_place_inserting@@Base>:
   2cd18:	push	{r4, r5, r6, sl, fp, lr}
   2cd1c:	add	fp, sp, #16
   2cd20:	sub	sp, sp, #8
   2cd24:	mov	r4, r2
   2cd28:	mov	r6, r1
   2cd2c:	mov	r5, r0
   2cd30:	mov	r0, #0
   2cd34:	str	r0, [r2]
   2cd38:	cmp	r1, #0
   2cd3c:	bne	2cd4c <myhtml_tree_appropriate_place_inserting@@Base+0x34>
   2cd40:	mov	r0, r5
   2cd44:	bl	11a5c <myhtml_tree_current_node@plt>
   2cd48:	mov	r6, r0
   2cd4c:	ldrb	r0, [r5, #188]	; 0xbc
   2cd50:	cmp	r0, #0
   2cd54:	beq	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2cd58:	ldr	r0, [r6, #8]
   2cd5c:	cmp	r0, #1
   2cd60:	bne	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2cd64:	ldr	r0, [r6, #4]
   2cd68:	sub	r0, r0, #125	; 0x7d
   2cd6c:	cmp	r0, #10
   2cd70:	bhi	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2cd74:	mov	r1, #1
   2cd78:	movw	r2, #1187	; 0x4a3
   2cd7c:	tst	r2, r1, lsl r0
   2cd80:	beq	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2cd84:	add	r3, sp, #4
   2cd88:	mov	r0, r5
   2cd8c:	mov	r1, #128	; 0x80
   2cd90:	mov	r2, #1
   2cd94:	bl	11180 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2cd98:	mov	r6, r0
   2cd9c:	mov	r3, sp
   2cda0:	mov	r0, r5
   2cda4:	mov	r1, #125	; 0x7d
   2cda8:	mov	r2, #1
   2cdac:	bl	11180 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2cdb0:	cmp	r6, #0
   2cdb4:	beq	2cdd0 <myhtml_tree_appropriate_place_inserting@@Base+0xb8>
   2cdb8:	cmp	r0, #0
   2cdbc:	beq	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2cdc0:	ldm	sp, {r1, r2}
   2cdc4:	cmp	r2, r1
   2cdc8:	bls	2cdd8 <myhtml_tree_appropriate_place_inserting@@Base+0xc0>
   2cdcc:	b	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2cdd0:	cmp	r0, #0
   2cdd4:	beq	2ce1c <myhtml_tree_appropriate_place_inserting@@Base+0x104>
   2cdd8:	ldr	r1, [r0, #24]
   2cddc:	cmp	r1, #0
   2cde0:	beq	2ce04 <myhtml_tree_appropriate_place_inserting@@Base+0xec>
   2cde4:	ldr	r1, [r0, #12]
   2cde8:	mov	r2, #2
   2cdec:	cmp	r1, #0
   2cdf0:	movweq	r2, #1
   2cdf4:	str	r2, [r4]
   2cdf8:	movne	r0, r1
   2cdfc:	mov	r6, r0
   2ce00:	b	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2ce04:	ldr	r0, [r5, #128]	; 0x80
   2ce08:	ldr	r0, [r0]
   2ce0c:	ldr	r1, [sp]
   2ce10:	add	r0, r0, r1, lsl #2
   2ce14:	ldr	r6, [r0, #-4]
   2ce18:	b	2ce28 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2ce1c:	ldr	r0, [r5, #128]	; 0x80
   2ce20:	ldr	r0, [r0]
   2ce24:	ldr	r6, [r0]
   2ce28:	mov	r0, r6
   2ce2c:	sub	sp, fp, #16
   2ce30:	pop	{r4, r5, r6, sl, fp, pc}

0002ce34 <myhtml_tree_open_elements_append@@Base>:
   2ce34:	ldr	r0, [r0, #128]	; 0x80
   2ce38:	b	2d358 <myhtml_tree_list_append@@Base>

0002ce3c <myhtml_tree_node_insert@@Base>:
   2ce3c:	push	{r4, r5, r6, r7, fp, lr}
   2ce40:	add	fp, sp, #16
   2ce44:	sub	sp, sp, #8
   2ce48:	mov	r4, r2
   2ce4c:	mov	r5, r1
   2ce50:	mov	r6, r0
   2ce54:	bl	11474 <myhtml_tree_node_create@plt>
   2ce58:	mov	r7, r0
   2ce5c:	mov	r0, #0
   2ce60:	str	r0, [r7, #32]
   2ce64:	str	r5, [r7, #4]
   2ce68:	str	r4, [r7, #8]
   2ce6c:	add	r2, sp, #4
   2ce70:	mov	r0, r6
   2ce74:	mov	r1, #0
   2ce78:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2ce7c:	ldr	r2, [sp, #4]
   2ce80:	mov	r1, r7
   2ce84:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2ce88:	mov	r0, r6
   2ce8c:	mov	r1, r7
   2ce90:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2ce94:	mov	r0, r7
   2ce98:	sub	sp, fp, #16
   2ce9c:	pop	{r4, r5, r6, r7, fp, pc}

0002cea0 <myhtml_tree_node_insert_comment@@Base>:
   2cea0:	push	{r4, r5, r6, r7, fp, lr}
   2cea4:	add	fp, sp, #16
   2cea8:	sub	sp, sp, #8
   2ceac:	mov	r5, r2
   2ceb0:	mov	r7, r1
   2ceb4:	mov	r6, r0
   2ceb8:	bl	11474 <myhtml_tree_node_create@plt>
   2cebc:	mov	r4, r0
   2cec0:	str	r7, [r0, #32]
   2cec4:	mov	r0, #2
   2cec8:	str	r0, [r4, #4]
   2cecc:	mov	r0, #0
   2ced0:	str	r0, [sp, #4]
   2ced4:	cmp	r5, #0
   2ced8:	bne	2cef0 <myhtml_tree_node_insert_comment@@Base+0x50>
   2cedc:	add	r2, sp, #4
   2cee0:	mov	r0, r6
   2cee4:	mov	r1, #0
   2cee8:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2ceec:	mov	r5, r0
   2cef0:	ldr	r2, [sp, #4]
   2cef4:	mov	r0, r5
   2cef8:	mov	r1, r4
   2cefc:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2cf00:	ldr	r0, [r5, #8]
   2cf04:	str	r0, [r4, #8]
   2cf08:	mov	r0, r4
   2cf0c:	sub	sp, fp, #16
   2cf10:	pop	{r4, r5, r6, r7, fp, pc}

0002cf14 <myhtml_tree_node_insert_doctype@@Base>:
   2cf14:	push	{r4, r5, r6, sl, fp, lr}
   2cf18:	add	fp, sp, #16
   2cf1c:	mov	r4, r1
   2cf20:	mov	r5, r0
   2cf24:	bl	11474 <myhtml_tree_node_create@plt>
   2cf28:	mov	r6, r0
   2cf2c:	str	r4, [r0, #32]
   2cf30:	mov	r0, #1
   2cf34:	mov	r1, #3
   2cf38:	str	r1, [r6, #4]
   2cf3c:	str	r0, [r6, #8]
   2cf40:	ldr	r0, [r5, #84]	; 0x54
   2cf44:	mov	r1, r6
   2cf48:	bl	11aec <myhtml_tree_node_add_child@plt>
   2cf4c:	mov	r0, r6
   2cf50:	pop	{r4, r5, r6, sl, fp, pc}

0002cf54 <myhtml_tree_node_insert_root@@Base>:
   2cf54:	push	{r4, r5, r6, r7, fp, lr}
   2cf58:	add	fp, sp, #16
   2cf5c:	mov	r6, r2
   2cf60:	mov	r7, r1
   2cf64:	mov	r4, r0
   2cf68:	bl	11474 <myhtml_tree_node_create@plt>
   2cf6c:	mov	r5, r0
   2cf70:	cmp	r7, #0
   2cf74:	ldrne	r0, [r7]
   2cf78:	moveq	r0, #65	; 0x41
   2cf7c:	str	r7, [r5, #32]
   2cf80:	stmib	r5, {r0, r6}
   2cf84:	ldr	r0, [r4, #84]	; 0x54
   2cf88:	mov	r1, r5
   2cf8c:	bl	11aec <myhtml_tree_node_add_child@plt>
   2cf90:	mov	r0, r4
   2cf94:	mov	r1, r5
   2cf98:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2cf9c:	str	r5, [r4, #96]	; 0x60
   2cfa0:	mov	r0, r5
   2cfa4:	pop	{r4, r5, r6, r7, fp, pc}

0002cfa8 <myhtml_tree_node_insert_text@@Base>:
   2cfa8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cfac:	add	fp, sp, #24
   2cfb0:	sub	sp, sp, #8
   2cfb4:	mov	r8, r1
   2cfb8:	mov	r6, r0
   2cfbc:	mov	r4, #0
   2cfc0:	add	r2, sp, #4
   2cfc4:	mov	r1, #0
   2cfc8:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2cfcc:	mov	r5, r0
   2cfd0:	ldr	r0, [r6, #84]	; 0x54
   2cfd4:	cmp	r5, r0
   2cfd8:	beq	2d0b4 <myhtml_tree_node_insert_text@@Base+0x10c>
   2cfdc:	ldr	r7, [sp, #4]
   2cfe0:	cmp	r7, #1
   2cfe4:	beq	2d018 <myhtml_tree_node_insert_text@@Base+0x70>
   2cfe8:	cmp	r7, #2
   2cfec:	bne	2d048 <myhtml_tree_node_insert_text@@Base+0xa0>
   2cff0:	ldr	r0, [r5, #4]
   2cff4:	cmp	r0, #1
   2cff8:	bne	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2cffc:	ldr	r1, [r5, #32]
   2d000:	cmp	r1, #0
   2d004:	beq	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d008:	mov	r0, r6
   2d00c:	mov	r2, r8
   2d010:	mov	r3, #0
   2d014:	b	2d03c <myhtml_tree_node_insert_text@@Base+0x94>
   2d018:	ldr	r0, [r5, #4]
   2d01c:	cmp	r0, #1
   2d020:	bne	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d024:	ldr	r2, [r5, #32]
   2d028:	cmp	r2, #0
   2d02c:	beq	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d030:	mov	r0, r6
   2d034:	mov	r1, r8
   2d038:	mov	r3, #1
   2d03c:	bl	118c4 <myhtml_token_merged_two_token_string@plt>
   2d040:	mov	r4, r5
   2d044:	b	2d0b4 <myhtml_tree_node_insert_text@@Base+0x10c>
   2d048:	ldr	r0, [r5, #28]
   2d04c:	cmp	r0, #0
   2d050:	beq	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d054:	ldr	r1, [r0, #4]
   2d058:	cmp	r1, #1
   2d05c:	bne	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d060:	ldr	r1, [r0, #32]
   2d064:	cmp	r1, #0
   2d068:	beq	2d084 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d06c:	mov	r0, r6
   2d070:	mov	r2, r8
   2d074:	mov	r3, #0
   2d078:	bl	118c4 <myhtml_token_merged_two_token_string@plt>
   2d07c:	ldr	r4, [r5, #28]
   2d080:	b	2d0b4 <myhtml_tree_node_insert_text@@Base+0x10c>
   2d084:	mov	r0, r6
   2d088:	bl	11474 <myhtml_tree_node_create@plt>
   2d08c:	mov	r4, r0
   2d090:	mov	r0, #1
   2d094:	str	r0, [r4, #4]
   2d098:	str	r8, [r4, #32]
   2d09c:	ldr	r0, [r5, #8]
   2d0a0:	str	r0, [r4, #8]
   2d0a4:	mov	r0, r5
   2d0a8:	mov	r1, r4
   2d0ac:	mov	r2, r7
   2d0b0:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2d0b4:	mov	r0, r4
   2d0b8:	sub	sp, fp, #24
   2d0bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002d0c0 <myhtml_tree_node_insert_by_node@@Base>:
   2d0c0:	push	{r4, r5, fp, lr}
   2d0c4:	add	fp, sp, #8
   2d0c8:	sub	sp, sp, #8
   2d0cc:	mov	r4, r1
   2d0d0:	mov	r5, r0
   2d0d4:	add	r2, sp, #4
   2d0d8:	mov	r1, #0
   2d0dc:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2d0e0:	ldr	r2, [sp, #4]
   2d0e4:	mov	r1, r4
   2d0e8:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2d0ec:	mov	r0, r5
   2d0f0:	mov	r1, r4
   2d0f4:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2d0f8:	mov	r0, r4
   2d0fc:	sub	sp, fp, #8
   2d100:	pop	{r4, r5, fp, pc}

0002d104 <myhtml_tree_node_insert_foreign_element@@Base>:
   2d104:	push	{r4, r5, r6, r7, fp, lr}
   2d108:	add	fp, sp, #16
   2d10c:	sub	sp, sp, #8
   2d110:	mov	r4, r1
   2d114:	mov	r5, r0
   2d118:	add	r2, sp, #4
   2d11c:	mov	r1, #0
   2d120:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2d124:	mov	r6, r0
   2d128:	mov	r0, r5
   2d12c:	bl	11474 <myhtml_tree_node_create@plt>
   2d130:	mov	r7, r0
   2d134:	ldr	r0, [r4]
   2d138:	str	r4, [r7, #32]
   2d13c:	str	r0, [r7, #4]
   2d140:	ldr	r0, [r6, #8]
   2d144:	str	r0, [r7, #8]
   2d148:	ldr	r2, [sp, #4]
   2d14c:	mov	r0, r6
   2d150:	mov	r1, r7
   2d154:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2d158:	mov	r0, r5
   2d15c:	mov	r1, r7
   2d160:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2d164:	mov	r0, r7
   2d168:	sub	sp, fp, #16
   2d16c:	pop	{r4, r5, r6, r7, fp, pc}

0002d170 <myhtml_tree_node_insert_html_element@@Base>:
   2d170:	push	{r4, r5, r6, r7, fp, lr}
   2d174:	add	fp, sp, #16
   2d178:	sub	sp, sp, #8
   2d17c:	mov	r4, r1
   2d180:	mov	r5, r0
   2d184:	add	r2, sp, #4
   2d188:	mov	r1, #0
   2d18c:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2d190:	mov	r6, r0
   2d194:	mov	r0, r5
   2d198:	bl	11474 <myhtml_tree_node_create@plt>
   2d19c:	mov	r7, r0
   2d1a0:	ldr	r0, [r4]
   2d1a4:	str	r4, [r7, #32]
   2d1a8:	mov	r1, #1
   2d1ac:	stmib	r7, {r0, r1}
   2d1b0:	ldr	r2, [sp, #4]
   2d1b4:	mov	r0, r6
   2d1b8:	mov	r1, r7
   2d1bc:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2d1c0:	mov	r0, r5
   2d1c4:	mov	r1, r7
   2d1c8:	bl	11da4 <myhtml_tree_open_elements_append@plt>
   2d1cc:	mov	r0, r7
   2d1d0:	sub	sp, fp, #16
   2d1d4:	pop	{r4, r5, r6, r7, fp, pc}

0002d1d8 <myhtml_tree_element_in_scope@@Base>:
   2d1d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d1dc:	add	fp, sp, #28
   2d1e0:	sub	sp, sp, #4
   2d1e4:	mov	sl, r1
   2d1e8:	mov	r4, r0
   2d1ec:	ldr	r1, [r0, #128]	; 0x80
   2d1f0:	ldr	r0, [r1, #4]
   2d1f4:	mov	r8, #0
   2d1f8:	cmp	r0, #0
   2d1fc:	beq	2d28c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d200:	mov	r5, r3
   2d204:	mov	r9, r2
   2d208:	ldr	r6, [r1]
   2d20c:	rsb	r7, r0, #1
   2d210:	b	2d218 <myhtml_tree_element_in_scope@@Base+0x40>
   2d214:	add	r7, r7, #1
   2d218:	ldr	r0, [r6, -r7, lsl #2]
   2d21c:	ldr	r1, [r0, #4]
   2d220:	ldr	r0, [r4, #28]
   2d224:	bl	11e28 <myhtml_tag_get_by_id@plt>
   2d228:	ldr	r1, [r6, -r7, lsl #2]
   2d22c:	ldr	r2, [r1, #4]
   2d230:	cmp	r2, sl
   2d234:	bne	2d248 <myhtml_tree_element_in_scope@@Base+0x70>
   2d238:	cmp	r9, #0
   2d23c:	ldrne	r2, [r1, #8]
   2d240:	cmpne	r2, r9
   2d244:	beq	2d288 <myhtml_tree_element_in_scope@@Base+0xb0>
   2d248:	ldr	r1, [r1, #8]
   2d24c:	add	r0, r0, r1, lsl #2
   2d250:	ldr	r0, [r0, #16]
   2d254:	and	r0, r0, r5
   2d258:	cmp	r5, #128	; 0x80
   2d25c:	bne	2d274 <myhtml_tree_element_in_scope@@Base+0x9c>
   2d260:	cmp	r0, #0
   2d264:	beq	2d28c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d268:	cmp	r7, #0
   2d26c:	bne	2d214 <myhtml_tree_element_in_scope@@Base+0x3c>
   2d270:	b	2d28c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d274:	cmp	r7, #0
   2d278:	beq	2d28c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d27c:	cmp	r0, #0
   2d280:	beq	2d214 <myhtml_tree_element_in_scope@@Base+0x3c>
   2d284:	b	2d28c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d288:	mov	r8, r1
   2d28c:	mov	r0, r8
   2d290:	sub	sp, fp, #28
   2d294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002d298 <myhtml_tree_element_in_scope_by_node@@Base>:
   2d298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d29c:	add	fp, sp, #28
   2d2a0:	sub	sp, sp, #4
   2d2a4:	mov	r9, r0
   2d2a8:	ldr	r7, [r0, #40]	; 0x28
   2d2ac:	ldr	r0, [r7, #128]	; 0x80
   2d2b0:	ldr	r4, [r0, #4]
   2d2b4:	mov	r8, #0
   2d2b8:	cmp	r4, #0
   2d2bc:	beq	2d34c <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2d2c0:	mov	r5, r1
   2d2c4:	ldr	sl, [r0]
   2d2c8:	add	r6, sl, r4, lsl #2
   2d2cc:	ldr	r0, [r6, #-4]
   2d2d0:	ldr	r1, [r0, #4]
   2d2d4:	ldr	r0, [r7, #28]
   2d2d8:	bl	11e28 <myhtml_tag_get_by_id@plt>
   2d2dc:	ldr	r1, [r6, #-4]
   2d2e0:	cmp	r1, r9
   2d2e4:	beq	2d348 <myhtml_tree_element_in_scope_by_node@@Base+0xb0>
   2d2e8:	sub	r6, sl, #8
   2d2ec:	ldr	r1, [r1, #8]
   2d2f0:	add	r0, r0, r1, lsl #2
   2d2f4:	ldr	r0, [r0, #16]
   2d2f8:	and	r0, r0, r5
   2d2fc:	cmp	r5, #128	; 0x80
   2d300:	bne	2d318 <myhtml_tree_element_in_scope_by_node@@Base+0x80>
   2d304:	cmp	r0, #0
   2d308:	beq	2d34c <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2d30c:	cmp	r4, #1
   2d310:	bne	2d328 <myhtml_tree_element_in_scope_by_node@@Base+0x90>
   2d314:	b	2d34c <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2d318:	cmp	r4, #1
   2d31c:	beq	2d34c <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2d320:	cmp	r0, #0
   2d324:	bne	2d34c <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   2d328:	ldr	r0, [r6, r4, lsl #2]
   2d32c:	ldr	r1, [r0, #4]
   2d330:	ldr	r0, [r7, #28]
   2d334:	bl	11e28 <myhtml_tag_get_by_id@plt>
   2d338:	ldr	r1, [r6, r4, lsl #2]
   2d33c:	sub	r4, r4, #1
   2d340:	cmp	r1, r9
   2d344:	bne	2d2ec <myhtml_tree_element_in_scope_by_node@@Base+0x54>
   2d348:	mov	r8, #1
   2d34c:	mov	r0, r8
   2d350:	sub	sp, fp, #28
   2d354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002d358 <myhtml_tree_list_append@@Base>:
   2d358:	push	{r4, r5, fp, lr}
   2d35c:	add	fp, sp, #8
   2d360:	mov	r5, r1
   2d364:	mov	r4, r0
   2d368:	ldr	r0, [r0, #4]
   2d36c:	ldr	r1, [r4, #8]
   2d370:	cmp	r0, r1
   2d374:	bcc	2d394 <myhtml_tree_list_append@@Base+0x3c>
   2d378:	lsl	r0, r1, #1
   2d37c:	str	r0, [r4, #8]
   2d380:	ldr	r0, [r4]
   2d384:	lsl	r1, r1, #3
   2d388:	bl	110b4 <mycore_realloc@plt>
   2d38c:	cmp	r0, #0
   2d390:	strne	r0, [r4]
   2d394:	ldr	r0, [r4]
   2d398:	ldr	r1, [r4, #4]
   2d39c:	str	r5, [r0, r1, lsl #2]
   2d3a0:	ldr	r0, [r4, #4]
   2d3a4:	add	r0, r0, #1
   2d3a8:	str	r0, [r4, #4]
   2d3ac:	pop	{r4, r5, fp, pc}

0002d3b0 <myhtml_tree_list_append_after_index@@Base>:
   2d3b0:	add	r2, r2, #1
   2d3b4:	b	2d3b8 <myhtml_tree_list_insert_by_index@@Base>

0002d3b8 <myhtml_tree_list_insert_by_index@@Base>:
   2d3b8:	push	{r4, r5, r6, sl, fp, lr}
   2d3bc:	add	fp, sp, #16
   2d3c0:	mov	r5, r2
   2d3c4:	mov	r6, r1
   2d3c8:	mov	r4, r0
   2d3cc:	ldr	r0, [r0, #4]
   2d3d0:	ldr	r1, [r4, #8]
   2d3d4:	cmp	r0, r1
   2d3d8:	bcc	2d3f8 <myhtml_tree_list_insert_by_index@@Base+0x40>
   2d3dc:	lsl	r0, r1, #1
   2d3e0:	str	r0, [r4, #8]
   2d3e4:	ldr	r0, [r4]
   2d3e8:	lsl	r1, r1, #3
   2d3ec:	bl	110b4 <mycore_realloc@plt>
   2d3f0:	cmp	r0, #0
   2d3f4:	strne	r0, [r4]
   2d3f8:	ldr	r0, [r4]
   2d3fc:	ldr	r2, [r4, #4]
   2d400:	add	r1, r0, r5, lsl #2
   2d404:	add	r0, r1, #4
   2d408:	sub	r2, r2, r5
   2d40c:	lsl	r2, r2, #2
   2d410:	bl	11318 <memmove@plt>
   2d414:	ldr	r0, [r4]
   2d418:	str	r6, [r0, r5, lsl #2]
   2d41c:	ldr	r0, [r4, #4]
   2d420:	add	r0, r0, #1
   2d424:	str	r0, [r4, #4]
   2d428:	pop	{r4, r5, r6, sl, fp, pc}

0002d42c <myhtml_tree_list_current_node@@Base>:
   2d42c:	ldr	r1, [r0, #4]
   2d430:	cmp	r1, #0
   2d434:	ldrne	r1, [r0]
   2d438:	ldrne	r0, [r0, #4]
   2d43c:	addne	r0, r1, r0, lsl #2
   2d440:	ldrne	r0, [r0, #-4]
   2d444:	bxne	lr
   2d448:	mov	r0, #0
   2d44c:	bx	lr

0002d450 <myhtml_tree_current_node@@Base>:
   2d450:	ldr	r0, [r0, #128]	; 0x80
   2d454:	ldr	r1, [r0, #4]
   2d458:	cmp	r1, #0
   2d45c:	ldrne	r1, [r0]
   2d460:	ldrne	r0, [r0, #4]
   2d464:	addne	r0, r1, r0, lsl #2
   2d468:	ldrne	r0, [r0, #-4]
   2d46c:	bxne	lr
   2d470:	mov	r0, #0
   2d474:	bx	lr

0002d478 <myhtml_tree_adjusted_current_node@@Base>:
   2d478:	ldr	r1, [r0, #128]	; 0x80
   2d47c:	ldr	r1, [r1, #4]
   2d480:	cmp	r1, #1
   2d484:	bne	2d498 <myhtml_tree_adjusted_current_node@@Base+0x20>
   2d488:	ldr	r1, [r0, #88]	; 0x58
   2d48c:	cmp	r1, #0
   2d490:	movne	r0, r1
   2d494:	bxne	lr
   2d498:	b	2d450 <myhtml_tree_current_node@@Base>

0002d49c <myhtml_tree_open_elements_append_after_index@@Base>:
   2d49c:	ldr	r0, [r0, #128]	; 0x80
   2d4a0:	b	2d3b0 <myhtml_tree_list_append_after_index@@Base>

0002d4a4 <myhtml_tree_open_elements_pop@@Base>:
   2d4a4:	ldr	r0, [r0, #128]	; 0x80
   2d4a8:	ldr	r1, [r0, #4]
   2d4ac:	cmp	r1, #0
   2d4b0:	ldrne	r1, [r0, #4]
   2d4b4:	subne	r1, r1, #1
   2d4b8:	strne	r1, [r0, #4]
   2d4bc:	bx	lr

0002d4c0 <myhtml_tree_open_elements_remove@@Base>:
   2d4c0:	push	{r4, r5, fp, lr}
   2d4c4:	add	fp, sp, #8
   2d4c8:	mov	r5, r0
   2d4cc:	ldr	r0, [r0, #128]	; 0x80
   2d4d0:	ldr	r2, [r0, #4]
   2d4d4:	ldr	r3, [r0]
   2d4d8:	add	r3, r3, r2, lsl #2
   2d4dc:	add	r3, r3, #4
   2d4e0:	cmp	r2, #0
   2d4e4:	popeq	{r4, r5, fp, pc}
   2d4e8:	sub	r4, r3, #4
   2d4ec:	sub	r2, r2, #1
   2d4f0:	ldr	r3, [r3, #-8]
   2d4f4:	cmp	r3, r1
   2d4f8:	mov	r3, r4
   2d4fc:	bne	2d4e0 <myhtml_tree_open_elements_remove@@Base+0x20>
   2d500:	ldr	r0, [r0, #4]
   2d504:	sub	r0, r0, r2
   2d508:	lsl	r2, r0, #2
   2d50c:	sub	r0, r4, #4
   2d510:	mov	r1, r4
   2d514:	bl	11318 <memmove@plt>
   2d518:	ldr	r0, [r5, #128]	; 0x80
   2d51c:	ldr	r1, [r0, #4]
   2d520:	sub	r1, r1, #1
   2d524:	str	r1, [r0, #4]
   2d528:	pop	{r4, r5, fp, pc}

0002d52c <myhtml_tree_open_elements_pop_until@@Base>:
   2d52c:	push	{fp, lr}
   2d530:	mov	fp, sp
   2d534:	ldr	lr, [r0, #128]	; 0x80
   2d538:	ldr	ip, [lr]
   2d53c:	ldr	r0, [lr, #4]
   2d540:	cmp	r0, #0
   2d544:	popeq	{fp, pc}
   2d548:	ldr	r0, [lr, #4]
   2d54c:	sub	r0, r0, #1
   2d550:	str	r0, [lr, #4]
   2d554:	ldr	r0, [lr, #4]
   2d558:	ldr	r0, [ip, r0, lsl #2]
   2d55c:	ldr	r0, [r0, #4]
   2d560:	cmp	r0, r1
   2d564:	bne	2d53c <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2d568:	cmp	r2, #0
   2d56c:	ldrne	r0, [lr, #4]
   2d570:	ldrne	r0, [ip, r0, lsl #2]
   2d574:	ldrne	r0, [r0, #8]
   2d578:	cmpne	r0, r2
   2d57c:	bne	2d53c <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2d580:	cmp	r3, #0
   2d584:	ldrne	r0, [lr, #4]
   2d588:	addne	r0, r0, #1
   2d58c:	strne	r0, [lr, #4]
   2d590:	pop	{fp, pc}

0002d594 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2d594:	ldr	r0, [r0, #128]	; 0x80
   2d598:	ldr	ip, [r0]
   2d59c:	ldr	r3, [r0, #4]
   2d5a0:	cmp	r3, #0
   2d5a4:	bxeq	lr
   2d5a8:	ldr	r3, [r0, #4]
   2d5ac:	sub	r3, r3, #1
   2d5b0:	str	r3, [r0, #4]
   2d5b4:	ldr	r3, [r0, #4]
   2d5b8:	ldr	r3, [ip, r3, lsl #2]
   2d5bc:	cmp	r3, r1
   2d5c0:	bne	2d59c <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   2d5c4:	cmp	r2, #0
   2d5c8:	ldrne	r1, [r0, #4]
   2d5cc:	addne	r1, r1, #1
   2d5d0:	strne	r1, [r0, #4]
   2d5d4:	bx	lr

0002d5d8 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2d5d8:	ldr	r0, [r0, #128]	; 0x80
   2d5dc:	ldr	r3, [r0, #4]
   2d5e0:	cmp	r3, #0
   2d5e4:	bxeq	lr
   2d5e8:	ldr	r3, [r0, #4]
   2d5ec:	sub	r3, r3, #1
   2d5f0:	str	r3, [r0, #4]
   2d5f4:	ldr	r3, [r0, #4]
   2d5f8:	cmp	r3, r1
   2d5fc:	bne	2d5dc <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   2d600:	cmp	r2, #0
   2d604:	ldrne	r1, [r0, #4]
   2d608:	addne	r1, r1, #1
   2d60c:	strne	r1, [r0, #4]
   2d610:	bx	lr

0002d614 <myhtml_tree_open_elements_find_reverse@@Base>:
   2d614:	ldr	r0, [r0, #128]	; 0x80
   2d618:	ldr	r3, [r0, #4]
   2d61c:	ldr	r0, [r0]
   2d620:	sub	ip, r0, #4
   2d624:	cmp	r3, #0
   2d628:	moveq	r0, #0
   2d62c:	bxeq	lr
   2d630:	ldr	r0, [ip, r3, lsl #2]
   2d634:	sub	r3, r3, #1
   2d638:	cmp	r0, r1
   2d63c:	bne	2d624 <myhtml_tree_open_elements_find_reverse@@Base+0x10>
   2d640:	mov	r0, #1
   2d644:	cmp	r2, #0
   2d648:	strne	r3, [r2]
   2d64c:	bx	lr

0002d650 <myhtml_tree_open_elements_find@@Base>:
   2d650:	push	{fp, lr}
   2d654:	mov	fp, sp
   2d658:	ldr	lr, [r0, #128]	; 0x80
   2d65c:	ldr	ip, [lr]
   2d660:	ldr	r3, [lr, #4]
   2d664:	cmp	r3, #0
   2d668:	beq	2d68c <myhtml_tree_open_elements_find@@Base+0x3c>
   2d66c:	mov	r3, #0
   2d670:	ldr	r0, [ip, r3, lsl #2]
   2d674:	cmp	r0, r1
   2d678:	beq	2d694 <myhtml_tree_open_elements_find@@Base+0x44>
   2d67c:	add	r3, r3, #1
   2d680:	ldr	r0, [lr, #4]
   2d684:	cmp	r3, r0
   2d688:	bcc	2d670 <myhtml_tree_open_elements_find@@Base+0x20>
   2d68c:	mov	r0, #0
   2d690:	pop	{fp, pc}
   2d694:	mov	r0, #1
   2d698:	cmp	r2, #0
   2d69c:	strne	r3, [r2]
   2d6a0:	popne	{fp, pc}
   2d6a4:	pop	{fp, pc}

0002d6a8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2d6a8:	push	{r4, sl, fp, lr}
   2d6ac:	add	fp, sp, #8
   2d6b0:	ldr	ip, [r0, #128]	; 0x80
   2d6b4:	ldr	r0, [ip, #4]
   2d6b8:	cmp	r0, #0
   2d6bc:	beq	2d6f4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x4c>
   2d6c0:	ldr	lr, [ip]
   2d6c4:	rsb	ip, r0, #1
   2d6c8:	ldr	r0, [lr, -ip, lsl #2]
   2d6cc:	ldr	r4, [r0, #4]
   2d6d0:	cmp	r4, r1
   2d6d4:	bne	2d6e8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x40>
   2d6d8:	cmp	r2, #0
   2d6dc:	ldrne	r4, [r0, #8]
   2d6e0:	cmpne	r4, r2
   2d6e4:	beq	2d6fc <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x54>
   2d6e8:	add	ip, ip, #1
   2d6ec:	cmp	ip, #1
   2d6f0:	bne	2d6c8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   2d6f4:	mov	r0, #0
   2d6f8:	pop	{r4, sl, fp, pc}
   2d6fc:	cmp	r3, #0
   2d700:	rsbne	r1, ip, #0
   2d704:	strne	r1, [r3]
   2d708:	popne	{r4, sl, fp, pc}
   2d70c:	pop	{r4, sl, fp, pc}

0002d710 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2d710:	push	{r4, r5, fp, lr}
   2d714:	add	fp, sp, #8
   2d718:	ldr	ip, [r0, #128]	; 0x80
   2d71c:	ldr	lr, [ip]
   2d720:	ldr	r0, [ip, #4]
   2d724:	cmp	r0, #0
   2d728:	beq	2d760 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x50>
   2d72c:	mov	r4, #0
   2d730:	ldr	r0, [lr, r4, lsl #2]
   2d734:	ldr	r5, [r0, #4]
   2d738:	cmp	r5, r1
   2d73c:	bne	2d750 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x40>
   2d740:	cmp	r2, #0
   2d744:	ldrne	r5, [r0, #8]
   2d748:	cmpne	r5, r2
   2d74c:	beq	2d768 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>
   2d750:	add	r4, r4, #1
   2d754:	ldr	r0, [ip, #4]
   2d758:	cmp	r4, r0
   2d75c:	bcc	2d730 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x20>
   2d760:	mov	r0, #0
   2d764:	pop	{r4, r5, fp, pc}
   2d768:	cmp	r3, #0
   2d76c:	strne	r4, [r3]
   2d770:	popne	{r4, r5, fp, pc}
   2d774:	pop	{r4, r5, fp, pc}

0002d778 <myhtml_tree_generate_implied_end_tags@@Base>:
   2d778:	push	{r4, r5, r6, sl, fp, lr}
   2d77c:	add	fp, sp, #16
   2d780:	mov	r6, r0
   2d784:	ldr	r0, [r0, #128]	; 0x80
   2d788:	ldr	r0, [r0, #4]
   2d78c:	cmp	r0, #0
   2d790:	beq	2d924 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2d794:	ldr	r0, [r6, #128]	; 0x80
   2d798:	ldr	r0, [r0, #4]
   2d79c:	cmp	r0, #0
   2d7a0:	beq	2d924 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2d7a4:	mov	r4, r2
   2d7a8:	mov	r5, r1
   2d7ac:	mov	r0, r6
   2d7b0:	bl	11a5c <myhtml_tree_current_node@plt>
   2d7b4:	ldr	r1, [r0, #4]
   2d7b8:	sub	r2, r1, #36	; 0x24
   2d7bc:	cmp	r2, #72	; 0x48
   2d7c0:	pophi	{r4, r5, r6, sl, fp, pc}
   2d7c4:	add	r3, pc, #4
   2d7c8:	ldr	r2, [r3, r2, lsl #2]
   2d7cc:	add	pc, r3, r2
   2d7d0:	andeq	r0, r0, r4, lsr #2
   2d7d4:	andeq	r0, r0, r4, asr r1
   2d7d8:	andeq	r0, r0, r4, asr r1
   2d7dc:	andeq	r0, r0, r4, asr r1
   2d7e0:	andeq	r0, r0, r4, asr r1
   2d7e4:	andeq	r0, r0, r4, asr r1
   2d7e8:	andeq	r0, r0, r4, asr r1
   2d7ec:	andeq	r0, r0, r4, asr r1
   2d7f0:	andeq	r0, r0, r4, lsr #2
   2d7f4:	andeq	r0, r0, r4, asr r1
   2d7f8:	andeq	r0, r0, r4, asr r1
   2d7fc:	andeq	r0, r0, r4, asr r1
   2d800:	andeq	r0, r0, r4, asr r1
   2d804:	andeq	r0, r0, r4, asr r1
   2d808:	andeq	r0, r0, r4, asr r1
   2d80c:	andeq	r0, r0, r4, asr r1
   2d810:	andeq	r0, r0, r4, asr r1
   2d814:	andeq	r0, r0, r4, asr r1
   2d818:	andeq	r0, r0, r4, asr r1
   2d81c:	andeq	r0, r0, r4, asr r1
   2d820:	andeq	r0, r0, r4, asr r1
   2d824:	andeq	r0, r0, r4, asr r1
   2d828:	andeq	r0, r0, r4, asr r1
   2d82c:	andeq	r0, r0, r4, asr r1
   2d830:	andeq	r0, r0, r4, asr r1
   2d834:	andeq	r0, r0, r4, asr r1
   2d838:	andeq	r0, r0, r4, asr r1
   2d83c:	andeq	r0, r0, r4, asr r1
   2d840:	andeq	r0, r0, r4, asr r1
   2d844:	andeq	r0, r0, r4, asr r1
   2d848:	andeq	r0, r0, r4, asr r1
   2d84c:	andeq	r0, r0, r4, asr r1
   2d850:	andeq	r0, r0, r4, asr r1
   2d854:	andeq	r0, r0, r4, asr r1
   2d858:	andeq	r0, r0, r4, asr r1
   2d85c:	andeq	r0, r0, r4, asr r1
   2d860:	andeq	r0, r0, r4, asr r1
   2d864:	andeq	r0, r0, r4, asr r1
   2d868:	andeq	r0, r0, r4, asr r1
   2d86c:	andeq	r0, r0, r4, asr r1
   2d870:	andeq	r0, r0, r4, asr r1
   2d874:	andeq	r0, r0, r4, lsr #2
   2d878:	andeq	r0, r0, r4, asr r1
   2d87c:	andeq	r0, r0, r4, asr r1
   2d880:	andeq	r0, r0, r4, asr r1
   2d884:	andeq	r0, r0, r4, asr r1
   2d888:	andeq	r0, r0, r4, asr r1
   2d88c:	andeq	r0, r0, r4, asr r1
   2d890:	andeq	r0, r0, r4, asr r1
   2d894:	andeq	r0, r0, r4, lsr #2
   2d898:	andeq	r0, r0, r4, asr r1
   2d89c:	andeq	r0, r0, r4, asr r1
   2d8a0:	andeq	r0, r0, r4, asr r1
   2d8a4:	andeq	r0, r0, r4, asr r1
   2d8a8:	andeq	r0, r0, r4, asr r1
   2d8ac:	andeq	r0, r0, r4, asr r1
   2d8b0:	andeq	r0, r0, r4, asr r1
   2d8b4:	andeq	r0, r0, r4, asr r1
   2d8b8:	andeq	r0, r0, r4, asr r1
   2d8bc:	andeq	r0, r0, r4, asr r1
   2d8c0:	andeq	r0, r0, r4, lsr #2
   2d8c4:	andeq	r0, r0, r4, lsr #2
   2d8c8:	andeq	r0, r0, r4, asr r1
   2d8cc:	andeq	r0, r0, r4, lsr #2
   2d8d0:	andeq	r0, r0, r4, asr r1
   2d8d4:	andeq	r0, r0, r4, asr r1
   2d8d8:	andeq	r0, r0, r4, asr r1
   2d8dc:	andeq	r0, r0, r4, asr r1
   2d8e0:	andeq	r0, r0, r4, asr r1
   2d8e4:	andeq	r0, r0, r4, lsr #2
   2d8e8:	andeq	r0, r0, r4, lsr #2
   2d8ec:	andeq	r0, r0, r4, lsr #2
   2d8f0:	andeq	r0, r0, r4, lsr #2
   2d8f4:	cmp	r1, r5
   2d8f8:	bne	2d90c <myhtml_tree_generate_implied_end_tags@@Base+0x194>
   2d8fc:	cmp	r4, #0
   2d900:	ldrne	r0, [r0, #8]
   2d904:	cmpne	r0, r4
   2d908:	beq	2d924 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   2d90c:	mov	r0, r6
   2d910:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2d914:	ldr	r0, [r6, #128]	; 0x80
   2d918:	ldr	r0, [r0, #4]
   2d91c:	cmp	r0, #0
   2d920:	bne	2d7ac <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2d924:	pop	{r4, r5, r6, sl, fp, pc}

0002d928 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2d928:	push	{r4, r5, r6, sl, fp, lr}
   2d92c:	add	fp, sp, #16
   2d930:	mov	r6, r0
   2d934:	ldr	r0, [r0, #128]	; 0x80
   2d938:	ldr	r0, [r0, #4]
   2d93c:	cmp	r0, #0
   2d940:	beq	2db64 <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2d944:	ldr	r0, [r6, #128]	; 0x80
   2d948:	ldr	r0, [r0, #4]
   2d94c:	cmp	r0, #0
   2d950:	beq	2db64 <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2d954:	mov	r4, r2
   2d958:	mov	r5, r1
   2d95c:	mov	r0, r6
   2d960:	bl	11a5c <myhtml_tree_current_node@plt>
   2d964:	ldr	r1, [r0, #4]
   2d968:	sub	r2, r1, #27
   2d96c:	cmp	r2, #108	; 0x6c
   2d970:	pophi	{r4, r5, r6, sl, fp, pc}
   2d974:	add	r3, pc, #4
   2d978:	ldr	r2, [r3, r2, lsl #2]
   2d97c:	add	pc, r3, r2
   2d980:			; <UNDEFINED> instruction: 0x000001b4
   2d984:	andeq	r0, r0, r4, ror #3
   2d988:	andeq	r0, r0, r4, ror #3
   2d98c:	andeq	r0, r0, r4, ror #3
   2d990:	andeq	r0, r0, r4, ror #3
   2d994:			; <UNDEFINED> instruction: 0x000001b4
   2d998:	andeq	r0, r0, r4, ror #3
   2d99c:	andeq	r0, r0, r4, ror #3
   2d9a0:	andeq	r0, r0, r4, ror #3
   2d9a4:			; <UNDEFINED> instruction: 0x000001b4
   2d9a8:	andeq	r0, r0, r4, ror #3
   2d9ac:	andeq	r0, r0, r4, ror #3
   2d9b0:	andeq	r0, r0, r4, ror #3
   2d9b4:	andeq	r0, r0, r4, ror #3
   2d9b8:	andeq	r0, r0, r4, ror #3
   2d9bc:	andeq	r0, r0, r4, ror #3
   2d9c0:	andeq	r0, r0, r4, ror #3
   2d9c4:			; <UNDEFINED> instruction: 0x000001b4
   2d9c8:	andeq	r0, r0, r4, ror #3
   2d9cc:	andeq	r0, r0, r4, ror #3
   2d9d0:	andeq	r0, r0, r4, ror #3
   2d9d4:	andeq	r0, r0, r4, ror #3
   2d9d8:	andeq	r0, r0, r4, ror #3
   2d9dc:	andeq	r0, r0, r4, ror #3
   2d9e0:	andeq	r0, r0, r4, ror #3
   2d9e4:	andeq	r0, r0, r4, ror #3
   2d9e8:	andeq	r0, r0, r4, ror #3
   2d9ec:	andeq	r0, r0, r4, ror #3
   2d9f0:	andeq	r0, r0, r4, ror #3
   2d9f4:	andeq	r0, r0, r4, ror #3
   2d9f8:	andeq	r0, r0, r4, ror #3
   2d9fc:	andeq	r0, r0, r4, ror #3
   2da00:	andeq	r0, r0, r4, ror #3
   2da04:	andeq	r0, r0, r4, ror #3
   2da08:	andeq	r0, r0, r4, ror #3
   2da0c:	andeq	r0, r0, r4, ror #3
   2da10:	andeq	r0, r0, r4, ror #3
   2da14:	andeq	r0, r0, r4, ror #3
   2da18:	andeq	r0, r0, r4, ror #3
   2da1c:	andeq	r0, r0, r4, ror #3
   2da20:	andeq	r0, r0, r4, ror #3
   2da24:	andeq	r0, r0, r4, ror #3
   2da28:	andeq	r0, r0, r4, ror #3
   2da2c:	andeq	r0, r0, r4, ror #3
   2da30:	andeq	r0, r0, r4, ror #3
   2da34:	andeq	r0, r0, r4, ror #3
   2da38:	andeq	r0, r0, r4, ror #3
   2da3c:	andeq	r0, r0, r4, ror #3
   2da40:	andeq	r0, r0, r4, ror #3
   2da44:	andeq	r0, r0, r4, ror #3
   2da48:			; <UNDEFINED> instruction: 0x000001b4
   2da4c:	andeq	r0, r0, r4, ror #3
   2da50:	andeq	r0, r0, r4, ror #3
   2da54:	andeq	r0, r0, r4, ror #3
   2da58:	andeq	r0, r0, r4, ror #3
   2da5c:	andeq	r0, r0, r4, ror #3
   2da60:	andeq	r0, r0, r4, ror #3
   2da64:	andeq	r0, r0, r4, ror #3
   2da68:	andeq	r0, r0, r4, ror #3
   2da6c:	andeq	r0, r0, r4, ror #3
   2da70:	andeq	r0, r0, r4, ror #3
   2da74:	andeq	r0, r0, r4, ror #3
   2da78:	andeq	r0, r0, r4, ror #3
   2da7c:	andeq	r0, r0, r4, ror #3
   2da80:	andeq	r0, r0, r4, ror #3
   2da84:	andeq	r0, r0, r4, ror #3
   2da88:	andeq	r0, r0, r4, ror #3
   2da8c:	andeq	r0, r0, r4, ror #3
   2da90:	andeq	r0, r0, r4, ror #3
   2da94:			; <UNDEFINED> instruction: 0x000001b4
   2da98:			; <UNDEFINED> instruction: 0x000001b4
   2da9c:	andeq	r0, r0, r4, ror #3
   2daa0:			; <UNDEFINED> instruction: 0x000001b4
   2daa4:	andeq	r0, r0, r4, ror #3
   2daa8:	andeq	r0, r0, r4, ror #3
   2daac:	andeq	r0, r0, r4, ror #3
   2dab0:	andeq	r0, r0, r4, ror #3
   2dab4:	andeq	r0, r0, r4, ror #3
   2dab8:			; <UNDEFINED> instruction: 0x000001b4
   2dabc:			; <UNDEFINED> instruction: 0x000001b4
   2dac0:			; <UNDEFINED> instruction: 0x000001b4
   2dac4:			; <UNDEFINED> instruction: 0x000001b4
   2dac8:	andeq	r0, r0, r4, ror #3
   2dacc:	andeq	r0, r0, r4, ror #3
   2dad0:	andeq	r0, r0, r4, ror #3
   2dad4:	andeq	r0, r0, r4, ror #3
   2dad8:	andeq	r0, r0, r4, ror #3
   2dadc:	andeq	r0, r0, r4, ror #3
   2dae0:	andeq	r0, r0, r4, ror #3
   2dae4:	andeq	r0, r0, r4, ror #3
   2dae8:	andeq	r0, r0, r4, ror #3
   2daec:	andeq	r0, r0, r4, ror #3
   2daf0:	andeq	r0, r0, r4, ror #3
   2daf4:	andeq	r0, r0, r4, ror #3
   2daf8:	andeq	r0, r0, r4, ror #3
   2dafc:	andeq	r0, r0, r4, ror #3
   2db00:	andeq	r0, r0, r4, ror #3
   2db04:	andeq	r0, r0, r4, ror #3
   2db08:	andeq	r0, r0, r4, ror #3
   2db0c:			; <UNDEFINED> instruction: 0x000001b4
   2db10:			; <UNDEFINED> instruction: 0x000001b4
   2db14:	andeq	r0, r0, r4, ror #3
   2db18:	andeq	r0, r0, r4, ror #3
   2db1c:			; <UNDEFINED> instruction: 0x000001b4
   2db20:			; <UNDEFINED> instruction: 0x000001b4
   2db24:			; <UNDEFINED> instruction: 0x000001b4
   2db28:	andeq	r0, r0, r4, ror #3
   2db2c:	andeq	r0, r0, r4, ror #3
   2db30:			; <UNDEFINED> instruction: 0x000001b4
   2db34:	cmp	r1, r5
   2db38:	bne	2db4c <myhtml_tree_generate_all_implied_end_tags@@Base+0x224>
   2db3c:	cmp	r4, #0
   2db40:	ldrne	r0, [r0, #8]
   2db44:	cmpne	r0, r4
   2db48:	beq	2db64 <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   2db4c:	mov	r0, r6
   2db50:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2db54:	ldr	r0, [r6, #128]	; 0x80
   2db58:	ldr	r0, [r0, #4]
   2db5c:	cmp	r0, #0
   2db60:	bne	2d95c <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2db64:	pop	{r4, r5, r6, sl, fp, pc}

0002db68 <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2db68:	push	{r4, sl, fp, lr}
   2db6c:	add	fp, sp, #8
   2db70:	ldr	r1, [r0, #128]	; 0x80
   2db74:	ldr	r2, [r1, #4]
   2db78:	cmp	r2, #0
   2db7c:	popeq	{r4, sl, fp, pc}
   2db80:	ldr	ip, [r1]
   2db84:	ldr	r2, [r1, #4]
   2db88:	cmp	r2, #0
   2db8c:	beq	2ddb0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x248>
   2db90:	sub	lr, ip, #4
   2db94:	ldr	r3, [lr, r2, lsl #2]
   2db98:	mov	r1, #0
   2db9c:	cmp	r2, #1
   2dba0:	bne	2dbb4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>
   2dba4:	ldr	r1, [r0, #88]	; 0x58
   2dba8:	cmp	r1, #0
   2dbac:	movne	r3, r1
   2dbb0:	mov	r1, #1
   2dbb4:	ldr	r4, [r3, #8]
   2dbb8:	cmp	r4, #1
   2dbbc:	bne	2dda0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   2dbc0:	ldr	r3, [r3, #4]
   2dbc4:	sub	r3, r3, #23
   2dbc8:	cmp	r3, #112	; 0x70
   2dbcc:	bhi	2dda0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   2dbd0:	add	r4, pc, #4
   2dbd4:	ldr	r3, [r4, r3, lsl #2]
   2dbd8:	add	pc, r4, r3
   2dbdc:	andeq	r0, r0, ip, lsr #4
   2dbe0:	andeq	r0, r0, r4, asr #3
   2dbe4:	andeq	r0, r0, r4, asr #3
   2dbe8:	andeq	r0, r0, r4, asr #3
   2dbec:	andeq	r0, r0, r0, lsl #4
   2dbf0:	andeq	r0, r0, r4, asr #3
   2dbf4:	andeq	r0, r0, r4, asr #3
   2dbf8:	andeq	r0, r0, r4, asr #3
   2dbfc:	andeq	r0, r0, r4, asr #3
   2dc00:	andeq	r0, r0, ip, lsl #4
   2dc04:	andeq	r0, r0, r4, asr #3
   2dc08:	andeq	r0, r0, r4, asr #3
   2dc0c:	andeq	r0, r0, r4, asr #3
   2dc10:	andeq	r0, r0, r4, asr #3
   2dc14:	andeq	r0, r0, r4, asr #3
   2dc18:	andeq	r0, r0, r4, asr #3
   2dc1c:	andeq	r0, r0, r4, asr #3
   2dc20:	andeq	r0, r0, r4, asr #3
   2dc24:	andeq	r0, r0, r4, asr #3
   2dc28:	andeq	r0, r0, r4, asr #3
   2dc2c:	andeq	r0, r0, r4, asr #3
   2dc30:	andeq	r0, r0, r4, asr #3
   2dc34:	andeq	r0, r0, r4, asr #3
   2dc38:	andeq	r0, r0, r4, asr #3
   2dc3c:	andeq	r0, r0, r4, asr #3
   2dc40:	andeq	r0, r0, r4, asr #3
   2dc44:	andeq	r0, r0, r4, asr #3
   2dc48:	andeq	r0, r0, r4, asr #3
   2dc4c:	andeq	r0, r0, r4, asr #3
   2dc50:	andeq	r0, r0, r4, asr #3
   2dc54:	andeq	r0, r0, r4, asr #3
   2dc58:	andeq	r0, r0, r8, lsl r2
   2dc5c:	andeq	r0, r0, r4, asr #3
   2dc60:	andeq	r0, r0, r4, asr #3
   2dc64:	andeq	r0, r0, r4, asr #3
   2dc68:	andeq	r0, r0, r4, asr #3
   2dc6c:	andeq	r0, r0, r4, asr #3
   2dc70:	andeq	r0, r0, r4, asr #3
   2dc74:	andeq	r0, r0, r4, lsr #4
   2dc78:	andeq	r0, r0, r4, asr #3
   2dc7c:	andeq	r0, r0, r4, asr #3
   2dc80:	andeq	r0, r0, r4, asr #3
   2dc84:	andeq	r0, r0, r8, lsr r2
   2dc88:	andeq	r0, r0, r4, asr #3
   2dc8c:	andeq	r0, r0, r4, asr #3
   2dc90:	andeq	r0, r0, r4, asr #3
   2dc94:	andeq	r0, r0, r4, asr #3
   2dc98:	andeq	r0, r0, r4, asr #3
   2dc9c:	andeq	r0, r0, r4, asr #3
   2dca0:	andeq	r0, r0, r4, asr #3
   2dca4:	andeq	r0, r0, r4, asr #3
   2dca8:	andeq	r0, r0, r4, asr #3
   2dcac:	andeq	r0, r0, r4, asr #3
   2dcb0:	andeq	r0, r0, r4, asr #3
   2dcb4:	andeq	r0, r0, r4, asr #3
   2dcb8:	andeq	r0, r0, r4, asr #3
   2dcbc:	andeq	r0, r0, r4, asr #3
   2dcc0:	andeq	r0, r0, r4, asr #3
   2dcc4:	andeq	r0, r0, r4, asr #3
   2dcc8:	andeq	r0, r0, r4, asr #3
   2dccc:	andeq	r0, r0, r4, asr #3
   2dcd0:	andeq	r0, r0, r4, asr #3
   2dcd4:	andeq	r0, r0, r4, asr #3
   2dcd8:	andeq	r0, r0, r4, asr #3
   2dcdc:	andeq	r0, r0, r4, asr #3
   2dce0:	andeq	r0, r0, r4, asr #3
   2dce4:	andeq	r0, r0, r4, asr #3
   2dce8:	andeq	r0, r0, r4, asr #3
   2dcec:	andeq	r0, r0, r4, asr #3
   2dcf0:	andeq	r0, r0, r4, asr #3
   2dcf4:	andeq	r0, r0, r4, asr #3
   2dcf8:	andeq	r0, r0, r4, asr #3
   2dcfc:	andeq	r0, r0, r4, asr #3
   2dd00:	andeq	r0, r0, r4, asr #3
   2dd04:	andeq	r0, r0, r4, asr #3
   2dd08:	andeq	r0, r0, r4, asr #3
   2dd0c:	andeq	r0, r0, r4, asr #3
   2dd10:	andeq	r0, r0, r4, asr #3
   2dd14:	andeq	r0, r0, r4, asr #3
   2dd18:	andeq	r0, r0, r4, asr #3
   2dd1c:	andeq	r0, r0, r4, asr #3
   2dd20:	andeq	r0, r0, r4, asr #3
   2dd24:	andeq	r0, r0, r4, asr #3
   2dd28:	andeq	r0, r0, r4, asr #3
   2dd2c:	andeq	r0, r0, r4, asr #3
   2dd30:	andeq	r0, r0, r4, asr #3
   2dd34:	andeq	r0, r0, r4, asr #3
   2dd38:	andeq	r0, r0, r4, asr #3
   2dd3c:	andeq	r0, r0, r4, asr #3
   2dd40:	andeq	r0, r0, r4, asr #3
   2dd44:	andeq	r0, r0, r4, asr #3
   2dd48:	andeq	r0, r0, r0, asr r2
   2dd4c:	andeq	r0, r0, r4, asr #3
   2dd50:	andeq	r0, r0, r4, asr #3
   2dd54:	andeq	r0, r0, r4, asr #3
   2dd58:	andeq	r0, r0, r4, asr #3
   2dd5c:	andeq	r0, r0, r4, asr #3
   2dd60:	andeq	r0, r0, r4, asr #3
   2dd64:	andeq	r0, r0, r4, asr #3
   2dd68:	andeq	r0, r0, r4, asr #3
   2dd6c:	andeq	r0, r0, r4, asr #3
   2dd70:	andeq	r0, r0, r4, asr #3
   2dd74:	andeq	r0, r0, ip, lsl #5
   2dd78:	andeq	r0, r0, r0, ror #3
   2dd7c:	andeq	r0, r0, ip, ror #3
   2dd80:	muleq	r0, r8, r2
   2dd84:	andeq	r0, r0, r4, asr #3
   2dd88:	andeq	r0, r0, r0, ror #3
   2dd8c:	andeq	r0, r0, ip, ror #3
   2dd90:	andeq	r0, r0, r0, ror #3
   2dd94:	andeq	r0, r0, r4, asr #3
   2dd98:	andeq	r0, r0, r4, asr #3
   2dd9c:			; <UNDEFINED> instruction: 0x000002b4
   2dda0:	cmp	r1, #0
   2dda4:	bne	2de08 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   2dda8:	subs	r2, r2, #1
   2ddac:	bne	2db94 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c>
   2ddb0:	mov	r1, #0
   2ddb4:	str	r1, [r0, #168]	; 0xa8
   2ddb8:	pop	{r4, sl, fp, pc}
   2ddbc:	mov	r1, #12
   2ddc0:	str	r1, [r0, #168]	; 0xa8
   2ddc4:	pop	{r4, sl, fp, pc}
   2ddc8:	cmp	r1, #0
   2ddcc:	bne	2de08 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   2ddd0:	mov	r1, #14
   2ddd4:	str	r1, [r0, #168]	; 0xa8
   2ddd8:	pop	{r4, sl, fp, pc}
   2dddc:	mov	r1, #10
   2dde0:	str	r1, [r0, #168]	; 0xa8
   2dde4:	pop	{r4, sl, fp, pc}
   2dde8:	mov	r1, #11
   2ddec:	str	r1, [r0, #168]	; 0xa8
   2ddf0:	pop	{r4, sl, fp, pc}
   2ddf4:	mov	r1, #19
   2ddf8:	str	r1, [r0, #168]	; 0xa8
   2ddfc:	pop	{r4, sl, fp, pc}
   2de00:	cmp	r1, #0
   2de04:	beq	2de9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x334>
   2de08:	mov	r1, #6
   2de0c:	str	r1, [r0, #168]	; 0xa8
   2de10:	pop	{r4, sl, fp, pc}
   2de14:	ldr	r1, [r0, #92]	; 0x5c
   2de18:	cmp	r1, #0
   2de1c:	moveq	r1, #2
   2de20:	movne	r1, #5
   2de24:	str	r1, [r0, #168]	; 0xa8
   2de28:	pop	{r4, sl, fp, pc}
   2de2c:	cmp	r1, #0
   2de30:	bne	2de5c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   2de34:	rsb	r1, r2, #2
   2de38:	cmp	r1, #1
   2de3c:	beq	2de5c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   2de40:	ldr	r2, [ip, -r1, lsl #2]
   2de44:	ldr	r2, [r2, #4]
   2de48:	cmp	r2, #125	; 0x7d
   2de4c:	beq	2dea8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x340>
   2de50:	add	r1, r1, #1
   2de54:	cmp	r2, #128	; 0x80
   2de58:	bne	2de38 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d0>
   2de5c:	mov	r1, #15
   2de60:	str	r1, [r0, #168]	; 0xa8
   2de64:	pop	{r4, sl, fp, pc}
   2de68:	mov	r1, #8
   2de6c:	str	r1, [r0, #168]	; 0xa8
   2de70:	pop	{r4, sl, fp, pc}
   2de74:	ldr	r1, [r0, #140]	; 0x8c
   2de78:	ldr	r2, [r1]
   2de7c:	ldr	r1, [r1, #4]
   2de80:	add	r1, r2, r1, lsl #2
   2de84:	ldr	r1, [r1, #-4]
   2de88:	str	r1, [r0, #168]	; 0xa8
   2de8c:	pop	{r4, sl, fp, pc}
   2de90:	mov	r1, #13
   2de94:	str	r1, [r0, #168]	; 0xa8
   2de98:	pop	{r4, sl, fp, pc}
   2de9c:	mov	r1, #3
   2dea0:	str	r1, [r0, #168]	; 0xa8
   2dea4:	pop	{r4, sl, fp, pc}
   2dea8:	mov	r1, #16
   2deac:	str	r1, [r0, #168]	; 0xa8
   2deb0:	pop	{r4, sl, fp, pc}

0002deb4 <myhtml_tree_active_formatting_is_marker@@Base>:
   2deb4:	ldr	r0, [r0]
   2deb8:	ldr	r2, [r0, #36]	; 0x24
   2debc:	mov	r0, #1
   2dec0:	cmp	r2, r1
   2dec4:	bxeq	lr
   2dec8:	ldr	r1, [r1, #4]
   2decc:	cmp	r1, #82	; 0x52
   2ded0:	ble	2def0 <myhtml_tree_active_formatting_is_marker@@Base+0x3c>
   2ded4:	cmp	r1, #126	; 0x7e
   2ded8:	bgt	2df10 <myhtml_tree_active_formatting_is_marker@@Base+0x5c>
   2dedc:	cmp	r1, #83	; 0x53
   2dee0:	beq	2df0c <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2dee4:	cmp	r1, #94	; 0x5e
   2dee8:	movne	r0, #0
   2deec:	bx	lr
   2def0:	cmp	r1, #27
   2def4:	bhi	2df1c <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   2def8:	mov	r2, #1
   2defc:	movw	r3, #512	; 0x200
   2df00:	movt	r3, #2560	; 0xa00
   2df04:	tst	r3, r2, lsl r1
   2df08:	beq	2df1c <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   2df0c:	bx	lr
   2df10:	cmp	r1, #127	; 0x7f
   2df14:	cmpne	r1, #131	; 0x83
   2df18:	beq	2df0c <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2df1c:	mov	r0, #0
   2df20:	bx	lr

0002df24 <myhtml_tree_active_formatting_append@@Base>:
   2df24:	ldr	r0, [r0, #124]	; 0x7c
   2df28:	b	2d358 <myhtml_tree_list_append@@Base>

0002df2c <myhtml_tree_active_formatting_pop@@Base>:
   2df2c:	ldr	r0, [r0, #124]	; 0x7c
   2df30:	ldr	r1, [r0, #4]
   2df34:	cmp	r1, #0
   2df38:	ldrne	r1, [r0, #4]
   2df3c:	subne	r1, r1, #1
   2df40:	strne	r1, [r0, #4]
   2df44:	bx	lr

0002df48 <myhtml_tree_active_formatting_remove@@Base>:
   2df48:	push	{r4, r5, fp, lr}
   2df4c:	add	fp, sp, #8
   2df50:	mov	r5, r0
   2df54:	ldr	r0, [r0, #124]	; 0x7c
   2df58:	ldr	r2, [r0, #4]
   2df5c:	ldr	r3, [r0]
   2df60:	add	r3, r3, r2, lsl #2
   2df64:	add	r3, r3, #4
   2df68:	cmp	r2, #0
   2df6c:	popeq	{r4, r5, fp, pc}
   2df70:	sub	r4, r3, #4
   2df74:	sub	r2, r2, #1
   2df78:	ldr	r3, [r3, #-8]
   2df7c:	cmp	r3, r1
   2df80:	mov	r3, r4
   2df84:	bne	2df68 <myhtml_tree_active_formatting_remove@@Base+0x20>
   2df88:	ldr	r0, [r0, #4]
   2df8c:	sub	r0, r0, r2
   2df90:	lsl	r2, r0, #2
   2df94:	sub	r0, r4, #4
   2df98:	mov	r1, r4
   2df9c:	bl	11318 <memmove@plt>
   2dfa0:	ldr	r0, [r5, #124]	; 0x7c
   2dfa4:	ldr	r1, [r0, #4]
   2dfa8:	sub	r1, r1, #1
   2dfac:	str	r1, [r0, #4]
   2dfb0:	pop	{r4, r5, fp, pc}

0002dfb4 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2dfb4:	push	{r4, sl, fp, lr}
   2dfb8:	add	fp, sp, #8
   2dfbc:	mov	r4, r0
   2dfc0:	ldr	r2, [r0, #124]	; 0x7c
   2dfc4:	ldr	r0, [r2]
   2dfc8:	add	r0, r0, r1, lsl #2
   2dfcc:	add	r3, r0, #4
   2dfd0:	ldr	r2, [r2, #4]
   2dfd4:	sub	r1, r2, r1
   2dfd8:	lsl	r2, r1, #2
   2dfdc:	mov	r1, r3
   2dfe0:	bl	11318 <memmove@plt>
   2dfe4:	ldr	r0, [r4, #124]	; 0x7c
   2dfe8:	ldr	r1, [r0, #4]
   2dfec:	sub	r1, r1, #1
   2dff0:	str	r1, [r0, #4]
   2dff4:	pop	{r4, sl, fp, pc}

0002dff8 <myhtml_tree_active_formatting_append_with_check@@Base>:
   2dff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dffc:	add	fp, sp, #28
   2e000:	sub	sp, sp, #4
   2e004:	mov	r4, r1
   2e008:	mov	r5, r0
   2e00c:	ldr	r1, [r0, #124]	; 0x7c
   2e010:	ldr	r0, [r1, #4]
   2e014:	cmp	r0, #0
   2e018:	beq	2e0d0 <myhtml_tree_active_formatting_append_with_check@@Base+0xd8>
   2e01c:	ldr	sl, [r1]
   2e020:	sub	r6, r0, #1
   2e024:	mov	r9, #0
   2e028:	mov	r8, r6
   2e02c:	ldr	r7, [sl, r6, lsl #2]
   2e030:	mov	r0, r5
   2e034:	mov	r1, r7
   2e038:	bl	11c90 <myhtml_tree_active_formatting_is_marker@plt>
   2e03c:	cmp	r0, #0
   2e040:	bne	2e0bc <myhtml_tree_active_formatting_append_with_check@@Base+0xc4>
   2e044:	ldr	r1, [r7, #32]
   2e048:	cmp	r1, #0
   2e04c:	ldrne	r0, [r4, #32]
   2e050:	cmpne	r0, #0
   2e054:	bne	2e068 <myhtml_tree_active_formatting_append_with_check@@Base+0x70>
   2e058:	sub	r6, r6, #1
   2e05c:	cmn	r6, #1
   2e060:	bne	2e02c <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2e064:	b	2e0bc <myhtml_tree_active_formatting_append_with_check@@Base+0xc4>
   2e068:	ldr	r0, [r5, #8]
   2e06c:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   2e070:	ldr	r1, [r4, #32]
   2e074:	ldr	r0, [r5, #8]
   2e078:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   2e07c:	ldr	r0, [sl, r6, lsl #2]
   2e080:	ldr	r1, [r0, #8]
   2e084:	ldr	r2, [r4, #8]
   2e088:	cmp	r1, r2
   2e08c:	bne	2e058 <myhtml_tree_active_formatting_append_with_check@@Base+0x60>
   2e090:	ldr	r1, [r4, #4]
   2e094:	ldr	r2, [r0, #4]
   2e098:	cmp	r2, r1
   2e09c:	bne	2e058 <myhtml_tree_active_formatting_append_with_check@@Base+0x60>
   2e0a0:	ldr	r1, [r4, #32]
   2e0a4:	ldr	r0, [r0, #32]
   2e0a8:	bl	11f24 <myhtml_token_attr_compare@plt>
   2e0ac:	cmp	r0, #0
   2e0b0:	movne	r8, r6
   2e0b4:	add	r9, r9, r0
   2e0b8:	b	2e058 <myhtml_tree_active_formatting_append_with_check@@Base+0x60>
   2e0bc:	cmp	r9, #3
   2e0c0:	bcc	2e0d0 <myhtml_tree_active_formatting_append_with_check@@Base+0xd8>
   2e0c4:	mov	r0, r5
   2e0c8:	mov	r1, r8
   2e0cc:	bl	11c60 <myhtml_tree_active_formatting_remove_by_index@plt>
   2e0d0:	mov	r0, r5
   2e0d4:	mov	r1, r4
   2e0d8:	sub	sp, fp, #28
   2e0dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0e0:	b	2df24 <myhtml_tree_active_formatting_append@@Base>

0002e0e4 <myhtml_tree_active_formatting_current_node@@Base>:
   2e0e4:	ldr	r0, [r0, #124]	; 0x7c
   2e0e8:	ldr	r1, [r0, #4]
   2e0ec:	cmp	r1, #0
   2e0f0:	ldrne	r1, [r0]
   2e0f4:	ldrne	r0, [r0, #4]
   2e0f8:	addne	r0, r1, r0, lsl #2
   2e0fc:	ldrne	r0, [r0, #-4]
   2e100:	bxne	lr
   2e104:	mov	r0, #0
   2e108:	bx	lr

0002e10c <myhtml_tree_active_formatting_find@@Base>:
   2e10c:	ldr	r0, [r0, #124]	; 0x7c
   2e110:	ldr	r3, [r0, #4]
   2e114:	ldr	r0, [r0]
   2e118:	sub	ip, r0, #4
   2e11c:	cmp	r3, #0
   2e120:	moveq	r0, #0
   2e124:	bxeq	lr
   2e128:	ldr	r0, [ip, r3, lsl #2]
   2e12c:	sub	r3, r3, #1
   2e130:	cmp	r0, r1
   2e134:	bne	2e11c <myhtml_tree_active_formatting_find@@Base+0x10>
   2e138:	mov	r0, #1
   2e13c:	cmp	r2, #0
   2e140:	strne	r3, [r2]
   2e144:	bx	lr

0002e148 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2e148:	push	{r4, r5, r6, sl, fp, lr}
   2e14c:	add	fp, sp, #16
   2e150:	mov	r4, r0
   2e154:	ldr	r5, [r0, #124]	; 0x7c
   2e158:	ldr	r6, [r5]
   2e15c:	ldr	r0, [r5, #4]
   2e160:	cmp	r0, #0
   2e164:	beq	2e198 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x50>
   2e168:	ldr	r0, [r5, #4]
   2e16c:	cmp	r0, #0
   2e170:	popeq	{r4, r5, r6, sl, fp, pc}
   2e174:	ldr	r0, [r5, #4]
   2e178:	sub	r0, r0, #1
   2e17c:	str	r0, [r5, #4]
   2e180:	ldr	r0, [r5, #4]
   2e184:	ldr	r1, [r6, r0, lsl #2]
   2e188:	mov	r0, r4
   2e18c:	bl	11c90 <myhtml_tree_active_formatting_is_marker@plt>
   2e190:	cmp	r0, #0
   2e194:	beq	2e168 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x20>
   2e198:	pop	{r4, r5, r6, sl, fp, pc}

0002e19c <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2e19c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e1a0:	add	fp, sp, #24
   2e1a4:	mov	r9, r1
   2e1a8:	mov	r7, r0
   2e1ac:	ldr	r1, [r0, #124]	; 0x7c
   2e1b0:	ldr	r0, [r1, #4]
   2e1b4:	cmp	r0, #0
   2e1b8:	beq	2e200 <myhtml_tree_active_formatting_between_last_marker@@Base+0x64>
   2e1bc:	mov	r8, r2
   2e1c0:	ldr	r5, [r1]
   2e1c4:	rsb	r4, r0, #1
   2e1c8:	ldr	r6, [r5, -r4, lsl #2]
   2e1cc:	mov	r0, r7
   2e1d0:	mov	r1, r6
   2e1d4:	bl	11c90 <myhtml_tree_active_formatting_is_marker@plt>
   2e1d8:	cmp	r0, #0
   2e1dc:	bne	2e200 <myhtml_tree_active_formatting_between_last_marker@@Base+0x64>
   2e1e0:	ldr	r0, [r6, #4]
   2e1e4:	cmp	r0, r9
   2e1e8:	ldreq	r0, [r6, #8]
   2e1ec:	cmpeq	r0, #1
   2e1f0:	beq	2e20c <myhtml_tree_active_formatting_between_last_marker@@Base+0x70>
   2e1f4:	add	r4, r4, #1
   2e1f8:	cmp	r4, #1
   2e1fc:	bne	2e1c8 <myhtml_tree_active_formatting_between_last_marker@@Base+0x2c>
   2e200:	mov	r6, #0
   2e204:	mov	r0, r6
   2e208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e20c:	cmp	r8, #0
   2e210:	rsbne	r0, r4, #0
   2e214:	strne	r0, [r8]
   2e218:	movne	r0, r6
   2e21c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e220:	mov	r0, r6
   2e224:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002e228 <myhtml_tree_active_formatting_reconstruction@@Base>:
   2e228:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e22c:	add	fp, sp, #24
   2e230:	mov	r4, r0
   2e234:	ldr	r9, [r0, #124]	; 0x7c
   2e238:	ldr	r7, [r9]
   2e23c:	ldr	r0, [r9, #4]
   2e240:	cmp	r0, #0
   2e244:	beq	2e2f8 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   2e248:	ldr	r5, [r9, #4]
   2e24c:	add	r0, r7, r5, lsl #2
   2e250:	ldr	r8, [r0, #-4]
   2e254:	mov	r0, r4
   2e258:	mov	r1, r8
   2e25c:	bl	11c90 <myhtml_tree_active_formatting_is_marker@plt>
   2e260:	cmp	r0, #0
   2e264:	bne	2e2f8 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   2e268:	mov	r0, r4
   2e26c:	mov	r1, r8
   2e270:	mov	r2, #0
   2e274:	bl	123e0 <myhtml_tree_open_elements_find@plt>
   2e278:	cmp	r0, #0
   2e27c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e280:	sub	r8, r7, #8
   2e284:	mov	r6, r5
   2e288:	cmp	r5, #1
   2e28c:	beq	2e2c4 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2e290:	ldr	r5, [r8, r6, lsl #2]
   2e294:	mov	r0, r4
   2e298:	mov	r1, r5
   2e29c:	bl	11c90 <myhtml_tree_active_formatting_is_marker@plt>
   2e2a0:	cmp	r0, #0
   2e2a4:	bne	2e2c4 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2e2a8:	mov	r0, r4
   2e2ac:	mov	r1, r5
   2e2b0:	mov	r2, #0
   2e2b4:	bl	123e0 <myhtml_tree_open_elements_find@plt>
   2e2b8:	sub	r5, r6, #1
   2e2bc:	cmp	r0, #0
   2e2c0:	beq	2e284 <myhtml_tree_active_formatting_reconstruction@@Base+0x5c>
   2e2c4:	sub	r6, r6, #1
   2e2c8:	b	2e2ec <myhtml_tree_active_formatting_reconstruction@@Base+0xc4>
   2e2cc:	ldr	r0, [r7, r6, lsl #2]
   2e2d0:	bl	12374 <myhtml_tree_node_clone@plt>
   2e2d4:	mov	r5, r0
   2e2d8:	mov	r0, r4
   2e2dc:	mov	r1, r5
   2e2e0:	bl	11ba0 <myhtml_tree_node_insert_by_node@plt>
   2e2e4:	str	r5, [r7, r6, lsl #2]
   2e2e8:	add	r6, r6, #1
   2e2ec:	ldr	r0, [r9, #4]
   2e2f0:	cmp	r6, r0
   2e2f4:	bcc	2e2cc <myhtml_tree_active_formatting_reconstruction@@Base+0xa4>
   2e2f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002e2fc <myhtml_tree_adoption_agency_algorithm@@Base>:
   2e2fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e300:	add	fp, sp, #28
   2e304:	sub	sp, sp, #52	; 0x34
   2e308:	mov	r4, r0
   2e30c:	ldr	r0, [r0, #128]	; 0x80
   2e310:	ldr	r1, [r0, #4]
   2e314:	cmp	r1, #0
   2e318:	beq	2e730 <myhtml_tree_adoption_agency_algorithm@@Base+0x434>
   2e31c:	mov	r7, r2
   2e320:	ldr	sl, [r0]
   2e324:	ldr	r0, [r0, #4]
   2e328:	ldr	r1, [r4, #124]	; 0x7c
   2e32c:	ldr	r1, [r1]
   2e330:	str	r1, [sp, #16]
   2e334:	add	r0, sl, r0, lsl #2
   2e338:	ldr	r1, [r0, #-4]
   2e33c:	ldr	r0, [r1, #8]
   2e340:	cmp	r0, #1
   2e344:	ldreq	r0, [r1, #4]
   2e348:	cmpeq	r0, r7
   2e34c:	beq	2e700 <myhtml_tree_adoption_agency_algorithm@@Base+0x404>
   2e350:	mov	r0, #0
   2e354:	sub	r8, fp, #36	; 0x24
   2e358:	mov	r1, #0
   2e35c:	cmp	r1, #7
   2e360:	bhi	2e730 <myhtml_tree_adoption_agency_algorithm@@Base+0x434>
   2e364:	str	r0, [fp, #-32]	; 0xffffffe0
   2e368:	add	r1, r1, #1
   2e36c:	str	r1, [sp, #20]
   2e370:	ldr	r0, [r4, #124]	; 0x7c
   2e374:	ldr	r5, [r0, #4]
   2e378:	ldr	r0, [r0]
   2e37c:	sub	r6, r0, #4
   2e380:	cmp	r5, #0
   2e384:	beq	2e6f8 <myhtml_tree_adoption_agency_algorithm@@Base+0x3fc>
   2e388:	ldr	r9, [r6, r5, lsl #2]
   2e38c:	mov	r0, r4
   2e390:	mov	r1, r9
   2e394:	bl	11c90 <myhtml_tree_active_formatting_is_marker@plt>
   2e398:	cmp	r0, #0
   2e39c:	bne	2e730 <myhtml_tree_adoption_agency_algorithm@@Base+0x434>
   2e3a0:	sub	r5, r5, #1
   2e3a4:	ldr	r0, [r9, #4]
   2e3a8:	cmp	r0, r7
   2e3ac:	bne	2e380 <myhtml_tree_adoption_agency_algorithm@@Base+0x84>
   2e3b0:	str	r5, [fp, #-32]	; 0xffffffe0
   2e3b4:	mov	r0, r4
   2e3b8:	mov	r1, r9
   2e3bc:	mov	r2, r8
   2e3c0:	bl	123e0 <myhtml_tree_open_elements_find@plt>
   2e3c4:	cmp	r0, #0
   2e3c8:	beq	2e724 <myhtml_tree_adoption_agency_algorithm@@Base+0x428>
   2e3cc:	mov	r0, r9
   2e3d0:	mov	r1, #8
   2e3d4:	bl	11120 <myhtml_tree_element_in_scope_by_node@plt>
   2e3d8:	cmp	r0, #0
   2e3dc:	beq	2e730 <myhtml_tree_adoption_agency_algorithm@@Base+0x434>
   2e3e0:	mov	r0, r4
   2e3e4:	bl	11a5c <myhtml_tree_current_node@plt>
   2e3e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e3ec:	str	r0, [sp, #40]	; 0x28
   2e3f0:	ldr	r1, [r4, #128]	; 0x80
   2e3f4:	ldr	r1, [r1, #4]
   2e3f8:	cmp	r0, r1
   2e3fc:	bcs	2e488 <myhtml_tree_adoption_agency_algorithm@@Base+0x18c>
   2e400:	ldr	r0, [sl, r0, lsl #2]
   2e404:	ldr	r1, [r0, #4]
   2e408:	ldr	r0, [r4, #28]
   2e40c:	bl	11e28 <myhtml_tag_get_by_id@plt>
   2e410:	ldr	r1, [sp, #40]	; 0x28
   2e414:	ldr	r8, [sl, r1, lsl #2]
   2e418:	ldr	r2, [r8, #8]
   2e41c:	add	r0, r0, r2, lsl #2
   2e420:	ldrb	r0, [r0, #16]
   2e424:	tst	r0, #2
   2e428:	bne	2e448 <myhtml_tree_adoption_agency_algorithm@@Base+0x14c>
   2e42c:	add	r0, r1, #1
   2e430:	str	r0, [sp, #40]	; 0x28
   2e434:	ldr	r1, [r4, #128]	; 0x80
   2e438:	ldr	r1, [r1, #4]
   2e43c:	cmp	r0, r1
   2e440:	bcc	2e400 <myhtml_tree_adoption_agency_algorithm@@Base+0x104>
   2e444:	mov	r8, #0
   2e448:	cmp	r8, #0
   2e44c:	beq	2e488 <myhtml_tree_adoption_agency_algorithm@@Base+0x18c>
   2e450:	str	r7, [sp, #8]
   2e454:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e458:	str	sl, [sp, #24]
   2e45c:	add	r0, sl, r0, lsl #2
   2e460:	ldr	r0, [r0, #-4]
   2e464:	str	r0, [sp, #4]
   2e468:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e46c:	add	r0, r0, #1
   2e470:	str	r0, [sp, #28]
   2e474:	mov	sl, #0
   2e478:	ldr	r7, [sp, #40]	; 0x28
   2e47c:	mov	r6, r8
   2e480:	str	r8, [sp, #12]
   2e484:	b	2e4f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x1f8>
   2e488:	mov	r0, r4
   2e48c:	bl	11a5c <myhtml_tree_current_node@plt>
   2e490:	mov	r6, r0
   2e494:	mov	r0, r4
   2e498:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2e49c:	cmp	r6, r9
   2e4a0:	bne	2e488 <myhtml_tree_adoption_agency_algorithm@@Base+0x18c>
   2e4a4:	mov	r0, r4
   2e4a8:	mov	r1, r9
   2e4ac:	bl	11cc0 <myhtml_tree_active_formatting_remove@plt>
   2e4b0:	mov	r5, #1
   2e4b4:	mov	r0, #0
   2e4b8:	sub	r8, fp, #36	; 0x24
   2e4bc:	ldr	r1, [sp, #20]
   2e4c0:	mov	r6, #0
   2e4c4:	cmp	r5, #0
   2e4c8:	beq	2e35c <myhtml_tree_adoption_agency_algorithm@@Base+0x60>
   2e4cc:	b	2e734 <myhtml_tree_adoption_agency_algorithm@@Base+0x438>
   2e4d0:	ldr	r1, [sp, #32]
   2e4d4:	mov	r0, r4
   2e4d8:	bl	11c60 <myhtml_tree_active_formatting_remove_by_index@plt>
   2e4dc:	ldr	r0, [sp, #32]
   2e4e0:	ldr	r1, [sp, #28]
   2e4e4:	cmp	r0, r1
   2e4e8:	subcc	r1, r1, #1
   2e4ec:	str	r1, [sp, #28]
   2e4f0:	mov	sl, r5
   2e4f4:	mov	r0, r4
   2e4f8:	mov	r1, r6
   2e4fc:	add	r2, sp, #36	; 0x24
   2e500:	bl	123e0 <myhtml_tree_open_elements_find@plt>
   2e504:	cmp	r0, #0
   2e508:	ldrne	r7, [sp, #36]	; 0x24
   2e50c:	streq	r7, [sp, #36]	; 0x24
   2e510:	cmp	r7, #0
   2e514:	beq	2e5dc <myhtml_tree_adoption_agency_algorithm@@Base+0x2e0>
   2e518:	sub	r7, r7, #1
   2e51c:	str	r7, [sp, #36]	; 0x24
   2e520:	ldr	r0, [sp, #24]
   2e524:	ldr	r6, [r0, r7, lsl #2]
   2e528:	cmp	r6, r9
   2e52c:	beq	2e5ec <myhtml_tree_adoption_agency_algorithm@@Base+0x2f0>
   2e530:	add	r5, sl, #1
   2e534:	mov	r0, r4
   2e538:	mov	r1, r6
   2e53c:	add	r2, sp, #32
   2e540:	bl	115ac <myhtml_tree_active_formatting_find@plt>
   2e544:	cmp	sl, #3
   2e548:	bcc	2e554 <myhtml_tree_adoption_agency_algorithm@@Base+0x258>
   2e54c:	cmp	r0, #0
   2e550:	bne	2e4d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x1d4>
   2e554:	cmp	r0, #0
   2e558:	beq	2e5c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x2cc>
   2e55c:	mov	sl, r5
   2e560:	mov	r0, r6
   2e564:	bl	12374 <myhtml_tree_node_clone@plt>
   2e568:	mov	r6, r0
   2e56c:	mov	r0, #1
   2e570:	str	r0, [r6, #8]
   2e574:	ldr	r0, [sp, #32]
   2e578:	ldr	r1, [sp, #16]
   2e57c:	str	r6, [r1, r0, lsl #2]
   2e580:	ldr	r0, [sp, #36]	; 0x24
   2e584:	ldr	r1, [sp, #24]
   2e588:	str	r6, [r1, r0, lsl #2]
   2e58c:	ldr	r0, [sp, #32]
   2e590:	ldr	r5, [sp, #12]
   2e594:	cmp	r5, r8
   2e598:	ldr	r1, [sp, #28]
   2e59c:	addeq	r1, r0, #1
   2e5a0:	str	r1, [sp, #28]
   2e5a4:	ldr	r0, [r5, #24]
   2e5a8:	cmp	r0, #0
   2e5ac:	movne	r0, r5
   2e5b0:	blne	121ac <myhtml_tree_node_remove@plt>
   2e5b4:	mov	r0, r6
   2e5b8:	mov	r1, r5
   2e5bc:	bl	11aec <myhtml_tree_node_add_child@plt>
   2e5c0:	str	r6, [sp, #12]
   2e5c4:	b	2e4f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x1f8>
   2e5c8:	mov	r0, r4
   2e5cc:	mov	r1, r6
   2e5d0:	bl	116a8 <myhtml_tree_open_elements_remove@plt>
   2e5d4:	mov	sl, r5
   2e5d8:	b	2e4f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x1f8>
   2e5dc:	mov	r5, #1
   2e5e0:	ldr	r7, [sp, #8]
   2e5e4:	ldr	sl, [sp, #24]
   2e5e8:	b	2e4b4 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b8>
   2e5ec:	ldr	r5, [sp, #12]
   2e5f0:	ldr	r0, [r5, #24]
   2e5f4:	cmp	r0, #0
   2e5f8:	movne	r0, r5
   2e5fc:	blne	121ac <myhtml_tree_node_remove@plt>
   2e600:	mov	r0, r4
   2e604:	ldr	r1, [sp, #4]
   2e608:	add	r2, sp, #36	; 0x24
   2e60c:	bl	12230 <myhtml_tree_appropriate_place_inserting@plt>
   2e610:	ldr	r2, [sp, #36]	; 0x24
   2e614:	mov	r1, r5
   2e618:	bl	117a4 <myhtml_tree_node_insert_by_mode@plt>
   2e61c:	mov	r0, r9
   2e620:	bl	12374 <myhtml_tree_node_clone@plt>
   2e624:	mov	r6, r0
   2e628:	mov	r0, #1
   2e62c:	str	r0, [r6, #8]
   2e630:	ldr	r7, [r8, #20]
   2e634:	cmp	r7, #0
   2e638:	ldr	sl, [sp, #24]
   2e63c:	beq	2e664 <myhtml_tree_adoption_agency_algorithm@@Base+0x368>
   2e640:	ldr	r5, [r7, #16]
   2e644:	mov	r0, r7
   2e648:	bl	121ac <myhtml_tree_node_remove@plt>
   2e64c:	mov	r0, r6
   2e650:	mov	r1, r7
   2e654:	bl	11aec <myhtml_tree_node_add_child@plt>
   2e658:	cmp	r5, #0
   2e65c:	mov	r7, r5
   2e660:	bne	2e640 <myhtml_tree_adoption_agency_algorithm@@Base+0x344>
   2e664:	mov	r0, r8
   2e668:	mov	r1, r6
   2e66c:	bl	11aec <myhtml_tree_node_add_child@plt>
   2e670:	mov	r0, r4
   2e674:	mov	r1, r9
   2e678:	sub	r2, fp, #32
   2e67c:	bl	115ac <myhtml_tree_active_formatting_find@plt>
   2e680:	mov	r5, #1
   2e684:	cmp	r0, #0
   2e688:	beq	2e6f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x3f4>
   2e68c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   2e690:	mov	r0, r4
   2e694:	mov	r1, r7
   2e698:	bl	11c60 <myhtml_tree_active_formatting_remove_by_index@plt>
   2e69c:	ldr	r2, [sp, #28]
   2e6a0:	cmp	r7, r2
   2e6a4:	subcc	r2, r2, #1
   2e6a8:	ldr	r0, [r4, #124]	; 0x7c
   2e6ac:	mov	r1, r6
   2e6b0:	bl	1172c <myhtml_tree_list_insert_by_index@plt>
   2e6b4:	mov	r0, r4
   2e6b8:	mov	r1, r9
   2e6bc:	bl	116a8 <myhtml_tree_open_elements_remove@plt>
   2e6c0:	mov	r0, r4
   2e6c4:	mov	r1, r8
   2e6c8:	add	r2, sp, #40	; 0x28
   2e6cc:	bl	123e0 <myhtml_tree_open_elements_find@plt>
   2e6d0:	mov	r5, #0
   2e6d4:	cmp	r0, #0
   2e6d8:	beq	2e6f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x3f4>
   2e6dc:	ldr	r0, [r4, #128]	; 0x80
   2e6e0:	ldr	r1, [sp, #40]	; 0x28
   2e6e4:	add	r2, r1, #1
   2e6e8:	mov	r1, r6
   2e6ec:	bl	1172c <myhtml_tree_list_insert_by_index@plt>
   2e6f0:	ldr	r7, [sp, #8]
   2e6f4:	b	2e4b4 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b8>
   2e6f8:	mov	r6, #1
   2e6fc:	b	2e734 <myhtml_tree_adoption_agency_algorithm@@Base+0x438>
   2e700:	mov	r6, #0
   2e704:	mov	r0, r4
   2e708:	mov	r2, #0
   2e70c:	bl	115ac <myhtml_tree_active_formatting_find@plt>
   2e710:	cmp	r0, #0
   2e714:	bne	2e350 <myhtml_tree_adoption_agency_algorithm@@Base+0x54>
   2e718:	mov	r0, r4
   2e71c:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2e720:	b	2e734 <myhtml_tree_adoption_agency_algorithm@@Base+0x438>
   2e724:	mov	r0, r4
   2e728:	mov	r1, r9
   2e72c:	bl	11cc0 <myhtml_tree_active_formatting_remove@plt>
   2e730:	mov	r6, #0
   2e734:	mov	r0, r6
   2e738:	sub	sp, fp, #28
   2e73c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e740 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2e740:	push	{r4, r5, r6, r7, fp, lr}
   2e744:	add	fp, sp, #16
   2e748:	mov	r5, r1
   2e74c:	mov	r4, r0
   2e750:	mov	r0, #1
   2e754:	str	r0, [r1]
   2e758:	ldr	r0, [r4, #40]	; 0x28
   2e75c:	ldrb	r0, [r0, #188]	; 0xbc
   2e760:	cmp	r0, #0
   2e764:	beq	2e7e8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2e768:	ldr	r0, [r4, #8]
   2e76c:	cmp	r0, #1
   2e770:	bne	2e7f0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2e774:	ldr	r0, [r4, #4]
   2e778:	sub	r0, r0, #125	; 0x7d
   2e77c:	cmp	r0, #10
   2e780:	bhi	2e7e8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2e784:	mov	r1, #1
   2e788:	movw	r2, #1187	; 0x4a3
   2e78c:	tst	r2, r1, lsl r0
   2e790:	beq	2e7e8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2e794:	mov	r0, r4
   2e798:	mov	r1, #128	; 0x80
   2e79c:	bl	11a50 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2e7a0:	mov	r7, r0
   2e7a4:	mov	r0, r4
   2e7a8:	mov	r1, #125	; 0x7d
   2e7ac:	bl	11a50 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2e7b0:	mov	r6, r0
   2e7b4:	cmp	r7, #0
   2e7b8:	beq	2e7f8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb8>
   2e7bc:	mov	r0, r7
   2e7c0:	mov	r1, #125	; 0x7d
   2e7c4:	bl	11a50 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2e7c8:	cmp	r6, #0
   2e7cc:	beq	2e7d8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2e7d0:	cmp	r6, r0
   2e7d4:	beq	2e800 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc0>
   2e7d8:	mov	r0, #0
   2e7dc:	str	r0, [r5]
   2e7e0:	mov	r0, r7
   2e7e4:	pop	{r4, r5, r6, r7, fp, pc}
   2e7e8:	mov	r0, #0
   2e7ec:	str	r0, [r5]
   2e7f0:	mov	r0, r4
   2e7f4:	pop	{r4, r5, r6, r7, fp, pc}
   2e7f8:	cmp	r6, #0
   2e7fc:	beq	2e7f0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2e800:	ldr	r0, [r6, #24]
   2e804:	cmp	r0, #0
   2e808:	beq	2e7f0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2e80c:	ldr	r0, [r6, #12]
   2e810:	cmp	r0, #0
   2e814:	mov	r4, r6
   2e818:	movne	r1, #2
   2e81c:	strne	r1, [r5]
   2e820:	popne	{r4, r5, r6, r7, fp, pc}
   2e824:	mov	r0, r4
   2e828:	pop	{r4, r5, r6, r7, fp, pc}

0002e82c <myhtml_tree_template_insertion_append@@Base>:
   2e82c:	push	{r4, r5, fp, lr}
   2e830:	add	fp, sp, #8
   2e834:	mov	r4, r1
   2e838:	ldr	r5, [r0, #140]	; 0x8c
   2e83c:	ldmib	r5, {r0, r1}
   2e840:	cmp	r0, r1
   2e844:	bcc	2e864 <myhtml_tree_template_insertion_append@@Base+0x38>
   2e848:	lsl	r0, r1, #1
   2e84c:	str	r0, [r5, #8]
   2e850:	ldr	r0, [r5]
   2e854:	lsl	r1, r1, #3
   2e858:	bl	110b4 <mycore_realloc@plt>
   2e85c:	cmp	r0, #0
   2e860:	strne	r0, [r5]
   2e864:	ldm	r5, {r0, r1}
   2e868:	str	r4, [r0, r1, lsl #2]
   2e86c:	ldr	r0, [r5, #4]
   2e870:	add	r0, r0, #1
   2e874:	str	r0, [r5, #4]
   2e878:	pop	{r4, r5, fp, pc}

0002e87c <myhtml_tree_template_insertion_pop@@Base>:
   2e87c:	ldr	r0, [r0, #140]	; 0x8c
   2e880:	ldr	r1, [r0, #4]
   2e884:	cmp	r1, #0
   2e888:	subne	r1, r1, #1
   2e88c:	strne	r1, [r0, #4]
   2e890:	bx	lr

0002e894 <myhtml_tree_template_insertion_length@@Base>:
   2e894:	ldr	r0, [r0, #140]	; 0x8c
   2e898:	ldr	r0, [r0, #4]
   2e89c:	bx	lr

0002e8a0 <myhtml_tree_token_list_append@@Base>:
   2e8a0:	push	{r4, r5, fp, lr}
   2e8a4:	add	fp, sp, #8
   2e8a8:	mov	r5, r1
   2e8ac:	mov	r4, r0
   2e8b0:	ldr	r0, [r0, #4]
   2e8b4:	ldr	r1, [r4, #8]
   2e8b8:	cmp	r0, r1
   2e8bc:	bcc	2e8dc <myhtml_tree_token_list_append@@Base+0x3c>
   2e8c0:	lsl	r0, r1, #1
   2e8c4:	str	r0, [r4, #8]
   2e8c8:	ldr	r0, [r4]
   2e8cc:	lsl	r1, r1, #3
   2e8d0:	bl	110b4 <mycore_realloc@plt>
   2e8d4:	cmp	r0, #0
   2e8d8:	strne	r0, [r4]
   2e8dc:	ldm	r4, {r0, r1}
   2e8e0:	str	r5, [r0, r1, lsl #2]
   2e8e4:	add	r0, r1, #1
   2e8e8:	str	r0, [r4, #4]
   2e8ec:	pop	{r4, r5, fp, pc}

0002e8f0 <myhtml_tree_token_list_append_after_index@@Base>:
   2e8f0:	push	{r4, r5, r6, r7, fp, lr}
   2e8f4:	add	fp, sp, #16
   2e8f8:	mov	r6, r2
   2e8fc:	mov	r7, r1
   2e900:	mov	r4, r0
   2e904:	ldr	r0, [r0, #4]
   2e908:	ldr	r1, [r4, #8]
   2e90c:	cmp	r0, r1
   2e910:	bcc	2e930 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   2e914:	lsl	r0, r1, #1
   2e918:	str	r0, [r4, #8]
   2e91c:	ldr	r0, [r4]
   2e920:	lsl	r1, r1, #3
   2e924:	bl	110b4 <mycore_realloc@plt>
   2e928:	cmp	r0, #0
   2e92c:	strne	r0, [r4]
   2e930:	ldr	r0, [r4, #4]
   2e934:	cmp	r0, r6
   2e938:	bcs	2e960 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   2e93c:	ldr	r1, [r4]
   2e940:	ldr	r0, [r4, #4]
   2e944:	mov	r2, r6
   2e948:	mov	r3, r1
   2e94c:	ldr	r5, [r3, r2, lsl #2]!
   2e950:	str	r5, [r3, #4]
   2e954:	add	r2, r2, #1
   2e958:	cmp	r2, r0
   2e95c:	bhi	2e948 <myhtml_tree_token_list_append_after_index@@Base+0x58>
   2e960:	ldr	r1, [r4]
   2e964:	add	r1, r1, r6, lsl #2
   2e968:	str	r7, [r1, #4]
   2e96c:	add	r0, r0, #1
   2e970:	str	r0, [r4, #4]
   2e974:	pop	{r4, r5, r6, r7, fp, pc}

0002e978 <myhtml_tree_token_list_current_node@@Base>:
   2e978:	ldr	r1, [r0, #4]
   2e97c:	cmp	r1, #0
   2e980:	moveq	r0, #0
   2e984:	ldrne	r0, [r0]
   2e988:	addne	r0, r0, r1, lsl #2
   2e98c:	ldrne	r0, [r0, #-4]
   2e990:	bx	lr

0002e994 <myhtml_tree_tags_close_p@@Base>:
   2e994:	push	{r4, sl, fp, lr}
   2e998:	add	fp, sp, #8
   2e99c:	mov	r4, r0
   2e9a0:	mov	r1, #99	; 0x63
   2e9a4:	mov	r2, #1
   2e9a8:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   2e9ac:	mov	r0, r4
   2e9b0:	bl	11a5c <myhtml_tree_current_node@plt>
   2e9b4:	mov	r1, #99	; 0x63
   2e9b8:	bl	11ea0 <myhtml_is_html_node@plt>
   2e9bc:	mov	r0, r4
   2e9c0:	mov	r1, #99	; 0x63
   2e9c4:	mov	r2, #1
   2e9c8:	mov	r3, #0
   2e9cc:	pop	{r4, sl, fp, lr}
   2e9d0:	b	2d52c <myhtml_tree_open_elements_pop_until@@Base>

0002e9d4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   2e9d4:	push	{r4, sl, fp, lr}
   2e9d8:	add	fp, sp, #8
   2e9dc:	mov	r4, r0
   2e9e0:	mov	r2, #1
   2e9e4:	bl	12074 <myhtml_tree_node_insert_by_token@plt>
   2e9e8:	ldr	r1, [r4, #168]	; 0xa8
   2e9ec:	mov	r2, #7
   2e9f0:	str	r2, [r4, #168]	; 0xa8
   2e9f4:	str	r1, [r4, #172]	; 0xac
   2e9f8:	pop	{r4, sl, fp, pc}

0002e9fc <myhtml_tree_clear_stack_back_table_context@@Base>:
   2e9fc:	push	{r4, sl, fp, lr}
   2ea00:	add	fp, sp, #8
   2ea04:	mov	r4, r0
   2ea08:	b	2ea14 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   2ea0c:	mov	r0, r4
   2ea10:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2ea14:	mov	r0, r4
   2ea18:	bl	11a5c <myhtml_tree_current_node@plt>
   2ea1c:	ldr	r1, [r0, #4]
   2ea20:	cmp	r1, #65	; 0x41
   2ea24:	cmpne	r1, #128	; 0x80
   2ea28:	bne	2ea3c <myhtml_tree_clear_stack_back_table_context@@Base+0x40>
   2ea2c:	ldr	r0, [r0, #8]
   2ea30:	cmp	r0, #1
   2ea34:	popeq	{r4, sl, fp, pc}
   2ea38:	b	2ea0c <myhtml_tree_clear_stack_back_table_context@@Base+0x10>
   2ea3c:	cmp	r1, #125	; 0x7d
   2ea40:	bne	2ea0c <myhtml_tree_clear_stack_back_table_context@@Base+0x10>
   2ea44:	b	2ea2c <myhtml_tree_clear_stack_back_table_context@@Base+0x30>

0002ea48 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2ea48:	push	{r4, r5, r6, sl, fp, lr}
   2ea4c:	add	fp, sp, #16
   2ea50:	mov	r4, r0
   2ea54:	mov	r5, #1
   2ea58:	mov	r6, #85	; 0x55
   2ea5c:	b	2ea68 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x20>
   2ea60:	mov	r0, r4
   2ea64:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2ea68:	mov	r0, r4
   2ea6c:	bl	11a5c <myhtml_tree_current_node@plt>
   2ea70:	ldr	r1, [r0, #4]
   2ea74:	sub	r2, r1, #126	; 0x7e
   2ea78:	cmp	r2, #6
   2ea7c:	bhi	2ea88 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x40>
   2ea80:	tst	r6, r5, lsl r2
   2ea84:	bne	2ea90 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x48>
   2ea88:	cmp	r1, #65	; 0x41
   2ea8c:	bne	2ea60 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x18>
   2ea90:	ldr	r0, [r0, #8]
   2ea94:	cmp	r0, #1
   2ea98:	popeq	{r4, r5, r6, sl, fp, pc}
   2ea9c:	b	2ea60 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x18>

0002eaa0 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   2eaa0:	push	{r4, sl, fp, lr}
   2eaa4:	add	fp, sp, #8
   2eaa8:	mov	r4, r0
   2eaac:	b	2eab8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   2eab0:	mov	r0, r4
   2eab4:	bl	11624 <myhtml_tree_open_elements_pop@plt>
   2eab8:	mov	r0, r4
   2eabc:	bl	11a5c <myhtml_tree_current_node@plt>
   2eac0:	ldr	r1, [r0, #4]
   2eac4:	cmp	r1, #65	; 0x41
   2eac8:	cmpne	r1, #135	; 0x87
   2eacc:	bne	2eae0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x40>
   2ead0:	ldr	r0, [r0, #8]
   2ead4:	cmp	r0, #1
   2ead8:	popeq	{r4, sl, fp, pc}
   2eadc:	b	2eab0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x10>
   2eae0:	cmp	r1, #128	; 0x80
   2eae4:	bne	2eab0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x10>
   2eae8:	b	2ead0 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x30>

0002eaec <myhtml_tree_close_cell@@Base>:
   2eaec:	push	{r4, r5, fp, lr}
   2eaf0:	add	fp, sp, #8
   2eaf4:	mov	r4, r1
   2eaf8:	mov	r5, r0
   2eafc:	mov	r1, #0
   2eb00:	mov	r2, #0
   2eb04:	bl	11b10 <myhtml_tree_generate_implied_end_tags@plt>
   2eb08:	mov	r0, r5
   2eb0c:	bl	11a5c <myhtml_tree_current_node@plt>
   2eb10:	ldmib	r4, {r1, r2}
   2eb14:	mov	r0, r5
   2eb18:	mov	r3, #0
   2eb1c:	bl	11d68 <myhtml_tree_open_elements_pop_until@plt>
   2eb20:	mov	r0, r5
   2eb24:	bl	12218 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2eb28:	mov	r0, #13
   2eb2c:	str	r0, [r5, #168]	; 0xa8
   2eb30:	pop	{r4, r5, fp, pc}

0002eb34 <myhtml_tree_is_mathml_integration_point@@Base>:
   2eb34:	ldr	r0, [r1, #8]
   2eb38:	cmp	r0, #2
   2eb3c:	bne	2eb70 <myhtml_tree_is_mathml_integration_point@@Base+0x3c>
   2eb40:	ldr	r1, [r1, #4]
   2eb44:	sub	r2, r1, #227	; 0xe3
   2eb48:	mov	r0, #1
   2eb4c:	cmp	r2, #11
   2eb50:	bhi	2eb68 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   2eb54:	mov	ip, #1
   2eb58:	movw	r3, #2097	; 0x831
   2eb5c:	tst	r3, ip, lsl r2
   2eb60:	beq	2eb68 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   2eb64:	bx	lr
   2eb68:	cmp	r1, #88	; 0x58
   2eb6c:	bxeq	lr
   2eb70:	mov	r0, #0
   2eb74:	bx	lr

0002eb78 <myhtml_tree_is_html_integration_point@@Base>:
   2eb78:	push	{r4, r5, r6, sl, fp, lr}
   2eb7c:	add	fp, sp, #16
   2eb80:	sub	sp, sp, #8
   2eb84:	mov	r4, r1
   2eb88:	mov	r5, r0
   2eb8c:	ldr	r0, [r1, #8]
   2eb90:	cmp	r0, #2
   2eb94:	beq	2ebc0 <myhtml_tree_is_html_integration_point@@Base+0x48>
   2eb98:	cmp	r0, #3
   2eb9c:	bne	2ec58 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2eba0:	ldr	r0, [r4, #4]
   2eba4:	mov	r6, #1
   2eba8:	cmp	r0, #134	; 0x86
   2ebac:	cmpne	r0, #156	; 0x9c
   2ebb0:	beq	2ec5c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ebb4:	cmp	r0, #189	; 0xbd
   2ebb8:	movne	r6, #0
   2ebbc:	b	2ec5c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ebc0:	ldr	r0, [r4, #4]
   2ebc4:	cmp	r0, #8
   2ebc8:	bne	2ec58 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2ebcc:	ldr	r1, [r4, #32]
   2ebd0:	cmp	r1, #0
   2ebd4:	beq	2ec58 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2ebd8:	ldr	r0, [r1, #48]	; 0x30
   2ebdc:	tst	r0, #1
   2ebe0:	bne	2ec58 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2ebe4:	ldr	r0, [r5, #8]
   2ebe8:	bl	11ab0 <myhtml_token_node_wait_for_done@plt>
   2ebec:	ldr	r1, [r4, #32]
   2ebf0:	ldr	r0, [r5, #8]
   2ebf4:	mov	r2, #9
   2ebf8:	ldr	r3, [pc, #104]	; 2ec68 <myhtml_tree_is_html_integration_point@@Base+0xf0>
   2ebfc:	add	r3, pc, r3
   2ec00:	str	r3, [sp]
   2ec04:	str	r2, [sp, #4]
   2ec08:	ldr	r2, [pc, #92]	; 2ec6c <myhtml_tree_is_html_integration_point@@Base+0xf4>
   2ec0c:	add	r2, pc, r2
   2ec10:	mov	r3, #8
   2ec14:	bl	111f8 <myhtml_token_attr_match_case@plt>
   2ec18:	mov	r6, #1
   2ec1c:	cmp	r0, #0
   2ec20:	bne	2ec5c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ec24:	ldr	r1, [r4, #32]
   2ec28:	ldr	r0, [r5, #8]
   2ec2c:	mov	r2, #21
   2ec30:	ldr	r3, [pc, #56]	; 2ec70 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   2ec34:	add	r3, pc, r3
   2ec38:	str	r3, [sp]
   2ec3c:	str	r2, [sp, #4]
   2ec40:	ldr	r2, [pc, #44]	; 2ec74 <myhtml_tree_is_html_integration_point@@Base+0xfc>
   2ec44:	add	r2, pc, r2
   2ec48:	mov	r3, #8
   2ec4c:	bl	111f8 <myhtml_token_attr_match_case@plt>
   2ec50:	cmp	r0, #0
   2ec54:	bne	2ec5c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ec58:	mov	r6, #0
   2ec5c:	mov	r0, r6
   2ec60:	sub	sp, fp, #16
   2ec64:	pop	{r4, r5, r6, sl, fp, pc}
   2ec68:	andeq	lr, ip, pc, asr #28
   2ec6c:	andeq	lr, ip, r6, lsr lr
   2ec70:	andeq	lr, ip, r1, lsr #28
   2ec74:	strdeq	lr, [ip], -lr	; <UNPREDICTABLE>

0002ec78 <myhtml_tree_temp_tag_name_init@@Base>:
   2ec78:	push	{r4, sl, fp, lr}
   2ec7c:	add	fp, sp, #8
   2ec80:	mov	r4, r0
   2ec84:	mov	r0, #0
   2ec88:	mov	r1, #1024	; 0x400
   2ec8c:	stmib	r4, {r0, r1}
   2ec90:	mov	r0, #1024	; 0x400
   2ec94:	bl	12050 <mycore_malloc@plt>
   2ec98:	str	r0, [r4]
   2ec9c:	clz	r0, r0
   2eca0:	lsr	r0, r0, #5
   2eca4:	lsl	r0, r0, #1
   2eca8:	pop	{r4, sl, fp, pc}

0002ecac <myhtml_tree_temp_tag_name_clean@@Base>:
   2ecac:	mov	r1, #0
   2ecb0:	str	r1, [r0, #4]
   2ecb4:	bx	lr

0002ecb8 <myhtml_tree_temp_tag_name_append_one@@Base>:
   2ecb8:	push	{r4, r5, r6, sl, fp, lr}
   2ecbc:	add	fp, sp, #16
   2ecc0:	mov	r5, r1
   2ecc4:	mov	r4, r0
   2ecc8:	ldr	r0, [r0, #4]
   2eccc:	ldr	r1, [r4, #8]
   2ecd0:	cmp	r0, r1
   2ecd4:	bcc	2ecfc <myhtml_tree_temp_tag_name_append_one@@Base+0x44>
   2ecd8:	ldr	r0, [r4]
   2ecdc:	lsl	r6, r1, #1
   2ece0:	mov	r1, r6
   2ece4:	bl	110b4 <mycore_realloc@plt>
   2ece8:	cmp	r0, #0
   2ecec:	moveq	r0, #2
   2ecf0:	popeq	{r4, r5, r6, sl, fp, pc}
   2ecf4:	str	r0, [r4]
   2ecf8:	str	r6, [r4, #8]
   2ecfc:	ldm	r4, {r0, r1}
   2ed00:	strb	r5, [r0, r1]
   2ed04:	ldr	r0, [r4, #4]
   2ed08:	add	r0, r0, #1
   2ed0c:	str	r0, [r4, #4]
   2ed10:	mov	r0, #0
   2ed14:	pop	{r4, r5, r6, sl, fp, pc}

0002ed18 <myhtml_tree_temp_tag_name_append@@Base>:
   2ed18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ed1c:	add	fp, sp, #24
   2ed20:	mov	r4, #0
   2ed24:	cmp	r2, #0
   2ed28:	movne	r6, r0
   2ed2c:	ldrne	r0, [r0]
   2ed30:	cmpne	r0, #0
   2ed34:	bne	2ed40 <myhtml_tree_temp_tag_name_append@@Base+0x28>
   2ed38:	mov	r0, r4
   2ed3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ed40:	mov	r5, r2
   2ed44:	mov	r7, r1
   2ed48:	ldr	r2, [r6, #4]
   2ed4c:	ldr	r1, [r6, #8]
   2ed50:	add	r2, r2, r5
   2ed54:	cmp	r2, r1
   2ed58:	bcc	2ed80 <myhtml_tree_temp_tag_name_append@@Base+0x68>
   2ed5c:	add	r8, r5, r1, lsl #1
   2ed60:	mov	r1, r8
   2ed64:	bl	110b4 <mycore_realloc@plt>
   2ed68:	cmp	r0, #0
   2ed6c:	moveq	r4, #2
   2ed70:	moveq	r0, r4
   2ed74:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ed78:	str	r0, [r6]
   2ed7c:	str	r8, [r6, #8]
   2ed80:	ldm	r6, {r0, r1}
   2ed84:	add	r0, r0, r1
   2ed88:	mov	r1, r7
   2ed8c:	mov	r2, r5
   2ed90:	bl	113f0 <memcpy@plt>
   2ed94:	ldr	r0, [r6, #4]
   2ed98:	add	r0, r0, r5
   2ed9c:	str	r0, [r6, #4]
   2eda0:	mov	r0, r4
   2eda4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002eda8 <myhtml_tree_wait_for_last_done_token@@Base>:
   2eda8:	push	{r4, r5, fp, lr}
   2edac:	add	fp, sp, #8
   2edb0:	mov	r5, r0
   2edb4:	ldr	r0, [r0, #152]	; 0x98
   2edb8:	cmp	r0, r1
   2edbc:	popeq	{r4, r5, fp, pc}
   2edc0:	mov	r4, r1
   2edc4:	ldr	r0, [r5]
   2edc8:	ldr	r0, [r0]
   2edcc:	ldr	r0, [r0, #24]
   2edd0:	bl	11528 <mythread_nanosleep_sleep@plt>
   2edd4:	ldr	r0, [r5, #152]	; 0x98
   2edd8:	cmp	r0, r4
   2eddc:	bne	2edc4 <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   2ede0:	pop	{r4, r5, fp, pc}

0002ede4 <myhtml_tree_special_list_init@@Base>:
   2ede4:	push	{r4, sl, fp, lr}
   2ede8:	add	fp, sp, #8
   2edec:	mov	r4, r0
   2edf0:	mov	r0, #0
   2edf4:	mov	r1, #1024	; 0x400
   2edf8:	stmib	r4, {r0, r1}
   2edfc:	mov	r0, #8192	; 0x2000
   2ee00:	bl	12050 <mycore_malloc@plt>
   2ee04:	str	r0, [r4]
   2ee08:	clz	r0, r0
   2ee0c:	lsr	r0, r0, #5
   2ee10:	lsl	r0, r0, #1
   2ee14:	pop	{r4, sl, fp, pc}

0002ee18 <myhtml_tree_special_list_clean@@Base>:
   2ee18:	mov	r1, #0
   2ee1c:	str	r1, [r0, #4]
   2ee20:	bx	lr

0002ee24 <myhtml_tree_special_list_destroy@@Base>:
   2ee24:	push	{r4, r5, r6, sl, fp, lr}
   2ee28:	add	fp, sp, #16
   2ee2c:	mov	r4, #0
   2ee30:	cmp	r0, #0
   2ee34:	beq	2ee6c <myhtml_tree_special_list_destroy@@Base+0x48>
   2ee38:	mov	r6, r1
   2ee3c:	mov	r5, r0
   2ee40:	ldr	r0, [r0]
   2ee44:	cmp	r0, #0
   2ee48:	beq	2ee58 <myhtml_tree_special_list_destroy@@Base+0x34>
   2ee4c:	bl	12188 <mycore_free@plt>
   2ee50:	mov	r0, #0
   2ee54:	str	r0, [r5]
   2ee58:	cmp	r6, #0
   2ee5c:	moveq	r0, r5
   2ee60:	popeq	{r4, r5, r6, sl, fp, pc}
   2ee64:	mov	r0, r5
   2ee68:	bl	12188 <mycore_free@plt>
   2ee6c:	mov	r0, r4
   2ee70:	pop	{r4, r5, r6, sl, fp, pc}

0002ee74 <myhtml_tree_special_list_append@@Base>:
   2ee74:	push	{r4, r5, r6, r7, fp, lr}
   2ee78:	add	fp, sp, #16
   2ee7c:	mov	r5, r2
   2ee80:	mov	r6, r1
   2ee84:	mov	r4, r0
   2ee88:	ldr	r0, [r0, #4]
   2ee8c:	ldr	r7, [r4, #8]
   2ee90:	cmp	r0, r7
   2ee94:	bcc	2eebc <myhtml_tree_special_list_append@@Base+0x48>
   2ee98:	ldr	r0, [r4]
   2ee9c:	lsl	r1, r7, #4
   2eea0:	bl	110b4 <mycore_realloc@plt>
   2eea4:	cmp	r0, #0
   2eea8:	moveq	r0, #2
   2eeac:	popeq	{r4, r5, r6, r7, fp, pc}
   2eeb0:	str	r0, [r4]
   2eeb4:	lsl	r0, r7, #1
   2eeb8:	str	r0, [r4, #8]
   2eebc:	ldm	r4, {r0, r1}
   2eec0:	str	r6, [r0, r1, lsl #3]!
   2eec4:	str	r5, [r0, #4]
   2eec8:	add	r0, r1, #1
   2eecc:	str	r0, [r4, #4]
   2eed0:	mov	r0, #0
   2eed4:	pop	{r4, r5, r6, r7, fp, pc}

0002eed8 <myhtml_tree_special_list_length@@Base>:
   2eed8:	ldr	r0, [r0, #4]
   2eedc:	bx	lr

0002eee0 <myhtml_tree_special_list_pop@@Base>:
   2eee0:	ldr	r1, [r0, #4]
   2eee4:	cmp	r1, #0
   2eee8:	subne	r1, r1, #1
   2eeec:	strne	r1, [r0, #4]
   2eef0:	ldr	r0, [r0, #4]
   2eef4:	bx	lr

0002eef8 <myhtml_tree_special_list_get_last@@Base>:
   2eef8:	ldr	r1, [r0, #4]
   2eefc:	cmp	r1, #0
   2ef00:	moveq	r0, #0
   2ef04:	ldrne	r0, [r0]
   2ef08:	addne	r0, r0, r1, lsl #3
   2ef0c:	bx	lr

0002ef10 <myhtml_tree_incoming_buffer_first@@Base>:
   2ef10:	ldr	r0, [r0, #80]	; 0x50
   2ef14:	bx	lr

0002ef18 <myhtml_tree_incomming_buffer_make_data@@Base>:
   2ef18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ef1c:	add	fp, sp, #24
   2ef20:	mov	r5, r2
   2ef24:	mov	r7, r1
   2ef28:	mov	r8, r0
   2ef2c:	ldr	r0, [r0, #80]	; 0x50
   2ef30:	bl	11588 <mycore_incoming_buffer_find_by_position@plt>
   2ef34:	mov	r6, r0
   2ef38:	ldr	r0, [r0, #8]
   2ef3c:	ldr	r1, [r6, #12]
   2ef40:	sub	r4, r7, r1
   2ef44:	add	r1, r4, r5
   2ef48:	cmp	r1, r0
   2ef4c:	ldrls	r0, [r6]
   2ef50:	addls	r0, r0, r4
   2ef54:	popls	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ef58:	ldr	r0, [r8, #208]!	; 0xd0
   2ef5c:	cmp	r0, #0
   2ef60:	beq	2ef78 <myhtml_tree_incomming_buffer_make_data@@Base+0x60>
   2ef64:	mov	r0, r8
   2ef68:	bl	116f0 <myhtml_tree_temp_tag_name_clean@plt>
   2ef6c:	cmp	r6, #0
   2ef70:	bne	2efb8 <myhtml_tree_incomming_buffer_make_data@@Base+0xa0>
   2ef74:	b	2efdc <myhtml_tree_incomming_buffer_make_data@@Base+0xc4>
   2ef78:	mov	r0, r8
   2ef7c:	bl	11a38 <myhtml_tree_temp_tag_name_init@plt>
   2ef80:	cmp	r6, #0
   2ef84:	bne	2efb8 <myhtml_tree_incomming_buffer_make_data@@Base+0xa0>
   2ef88:	b	2efdc <myhtml_tree_incomming_buffer_make_data@@Base+0xc4>
   2ef8c:	sub	r7, r0, r4
   2ef90:	ldr	r0, [r6]
   2ef94:	add	r1, r0, r4
   2ef98:	mov	r0, r8
   2ef9c:	mov	r2, r7
   2efa0:	bl	1115c <myhtml_tree_temp_tag_name_append@plt>
   2efa4:	sub	r5, r5, r7
   2efa8:	ldr	r6, [r6, #20]
   2efac:	mov	r4, #0
   2efb0:	cmp	r6, #0
   2efb4:	beq	2efdc <myhtml_tree_incomming_buffer_make_data@@Base+0xc4>
   2efb8:	add	r1, r4, r5
   2efbc:	ldr	r0, [r6, #8]
   2efc0:	cmp	r1, r0
   2efc4:	bhi	2ef8c <myhtml_tree_incomming_buffer_make_data@@Base+0x74>
   2efc8:	ldr	r0, [r6]
   2efcc:	add	r1, r0, r4
   2efd0:	mov	r0, r8
   2efd4:	mov	r2, r5
   2efd8:	bl	1115c <myhtml_tree_temp_tag_name_append@plt>
   2efdc:	ldr	r0, [r8]
   2efe0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002efe4 <mycore_fopen@@Base>:
   2efe4:	b	11270 <fopen@plt>

0002efe8 <mycore_fclose@@Base>:
   2efe8:	b	11e04 <fclose@plt>

0002efec <mycore_fread@@Base>:
   2efec:	b	11810 <fread@plt>

0002eff0 <mycore_fwrite@@Base>:
   2eff0:	b	1178c <fwrite@plt>

0002eff4 <mycore_fflush@@Base>:
   2eff4:	b	112b8 <fflush@plt>

0002eff8 <mycore_fseek@@Base>:
   2eff8:	b	122cc <fseek@plt>

0002effc <mycore_ftell@@Base>:
   2effc:	b	114f8 <ftell@plt>

0002f000 <mycore_ferror@@Base>:
   2f000:	b	113e4 <ferror@plt>

0002f004 <mycore_setbuf@@Base>:
   2f004:	b	111c8 <setbuf@plt>

0002f008 <mycore_malloc@@Base>:
   2f008:	b	11948 <malloc@plt>

0002f00c <mycore_realloc@@Base>:
   2f00c:	b	11660 <realloc@plt>

0002f010 <mycore_calloc@@Base>:
   2f010:	b	110c0 <calloc@plt>

0002f014 <mycore_free@@Base>:
   2f014:	push	{fp, lr}
   2f018:	mov	fp, sp
   2f01c:	bl	11348 <free@plt>
   2f020:	mov	r0, #0
   2f024:	pop	{fp, pc}

0002f028 <mythread_thread_create@@Base>:
   2f028:	push	{r4, r5, r6, r7, fp, lr}
   2f02c:	add	fp, sp, #16
   2f030:	mov	r5, r2
   2f034:	mov	r6, r1
   2f038:	mov	r7, r0
   2f03c:	mov	r0, #1
   2f040:	mov	r1, #4
   2f044:	bl	113a8 <mycore_calloc@plt>
   2f048:	cmp	r0, #0
   2f04c:	moveq	r4, #0
   2f050:	moveq	r0, r4
   2f054:	popeq	{r4, r5, r6, r7, fp, pc}
   2f058:	mov	r4, r0
   2f05c:	ldr	r1, [r7, #20]
   2f060:	mov	r2, r6
   2f064:	mov	r3, r5
   2f068:	bl	1181c <pthread_create@plt>
   2f06c:	cmp	r0, #0
   2f070:	movne	r4, #0
   2f074:	mov	r0, r4
   2f078:	pop	{r4, r5, r6, r7, fp, pc}

0002f07c <mythread_thread_join@@Base>:
   2f07c:	push	{fp, lr}
   2f080:	mov	fp, sp
   2f084:	ldr	r0, [r1]
   2f088:	mov	r1, #0
   2f08c:	bl	11f54 <pthread_join@plt>
   2f090:	cmp	r0, #0
   2f094:	movwne	r0, #1
   2f098:	pop	{fp, pc}

0002f09c <mythread_thread_cancel@@Base>:
   2f09c:	push	{fp, lr}
   2f0a0:	mov	fp, sp
   2f0a4:	ldr	r0, [r1]
   2f0a8:	bl	11d14 <pthread_cancel@plt>
   2f0ac:	cmp	r0, #0
   2f0b0:	movwne	r0, #1
   2f0b4:	pop	{fp, pc}

0002f0b8 <mythread_thread_destroy@@Base>:
   2f0b8:	push	{fp, lr}
   2f0bc:	mov	fp, sp
   2f0c0:	mov	r0, r1
   2f0c4:	bl	12188 <mycore_free@plt>
   2f0c8:	mov	r0, #0
   2f0cc:	pop	{fp, pc}

0002f0d0 <mythread_thread_attr_init@@Base>:
   2f0d0:	push	{r4, r5, r6, sl, fp, lr}
   2f0d4:	add	fp, sp, #16
   2f0d8:	mov	r6, r0
   2f0dc:	mov	r0, #1
   2f0e0:	mov	r1, #36	; 0x24
   2f0e4:	bl	113a8 <mycore_calloc@plt>
   2f0e8:	mov	r4, #0
   2f0ec:	cmp	r0, #0
   2f0f0:	beq	2f130 <mythread_thread_attr_init@@Base+0x60>
   2f0f4:	mov	r5, r0
   2f0f8:	bl	11bd0 <pthread_attr_init@plt>
   2f0fc:	str	r0, [r6, #28]
   2f100:	cmp	r0, #0
   2f104:	bne	2f128 <mythread_thread_attr_init@@Base+0x58>
   2f108:	mov	r4, #0
   2f10c:	mov	r0, r5
   2f110:	mov	r1, #0
   2f114:	bl	122f0 <pthread_attr_setdetachstate@plt>
   2f118:	str	r0, [r6, #28]
   2f11c:	cmp	r0, #0
   2f120:	moveq	r0, r5
   2f124:	popeq	{r4, r5, r6, sl, fp, pc}
   2f128:	mov	r0, r5
   2f12c:	bl	12188 <mycore_free@plt>
   2f130:	mov	r0, r4
   2f134:	pop	{r4, r5, r6, sl, fp, pc}

0002f138 <mythread_thread_attr_clean@@Base>:
   2f138:	bx	lr

0002f13c <mythread_thread_attr_destroy@@Base>:
   2f13c:	cmp	r1, #0
   2f140:	bxeq	lr
   2f144:	push	{r4, r5, fp, lr}
   2f148:	add	fp, sp, #8
   2f14c:	mov	r4, r1
   2f150:	mov	r5, r0
   2f154:	mov	r0, r1
   2f158:	bl	11294 <pthread_attr_destroy@plt>
   2f15c:	str	r0, [r5, #28]
   2f160:	mov	r0, r4
   2f164:	pop	{r4, r5, fp, lr}
   2f168:	b	12188 <mycore_free@plt>

0002f16c <mythread_mutex_create@@Base>:
   2f16c:	push	{r4, r5, fp, lr}
   2f170:	add	fp, sp, #8
   2f174:	bl	11ce4 <mcsync_mutex_create@plt>
   2f178:	mov	r4, #0
   2f17c:	cmp	r0, #0
   2f180:	beq	2f1a0 <mythread_mutex_create@@Base+0x34>
   2f184:	mov	r5, r0
   2f188:	bl	11f3c <mcsync_mutex_init@plt>
   2f18c:	cmp	r0, #0
   2f190:	moveq	r0, r5
   2f194:	popeq	{r4, r5, fp, pc}
   2f198:	mov	r0, r5
   2f19c:	bl	12188 <mycore_free@plt>
   2f1a0:	mov	r0, r4
   2f1a4:	pop	{r4, r5, fp, pc}

0002f1a8 <mythread_mutex_post@@Base>:
   2f1a8:	mov	r0, r1
   2f1ac:	b	11390 <mcsync_mutex_unlock@plt>

0002f1b0 <mythread_mutex_wait@@Base>:
   2f1b0:	mov	r0, r1
   2f1b4:	b	123d4 <mcsync_mutex_lock@plt>

0002f1b8 <mythread_mutex_try_wait@@Base>:
   2f1b8:	mov	r0, r1
   2f1bc:	b	12344 <mcsync_mutex_try_lock@plt>

0002f1c0 <mythread_mutex_close@@Base>:
   2f1c0:	mov	r0, r1
   2f1c4:	b	11234 <mcsync_mutex_destroy@plt>

0002f1c8 <mythread_nanosleep_create@@Base>:
   2f1c8:	mov	r0, #1
   2f1cc:	mov	r1, #8
   2f1d0:	b	113a8 <mycore_calloc@plt>

0002f1d4 <mythread_nanosleep_clean@@Base>:
   2f1d4:	mov	r1, #0
   2f1d8:	str	r1, [r0, #4]
   2f1dc:	str	r1, [r0]
   2f1e0:	bx	lr

0002f1e4 <mythread_nanosleep_destroy@@Base>:
   2f1e4:	b	12188 <mycore_free@plt>

0002f1e8 <mythread_nanosleep_sleep@@Base>:
   2f1e8:	push	{fp, lr}
   2f1ec:	mov	fp, sp
   2f1f0:	mov	r1, #0
   2f1f4:	bl	113b4 <nanosleep@plt>
   2f1f8:	cmp	r0, #0
   2f1fc:	movwne	r0, #1
   2f200:	pop	{fp, pc}

0002f204 <mcsync_spin_create@@Base>:
   2f204:	mov	r0, #1
   2f208:	mov	r1, #4
   2f20c:	b	113a8 <mycore_calloc@plt>

0002f210 <mcsync_spin_init@@Base>:
   2f210:	mov	r0, #0
   2f214:	bx	lr

0002f218 <mcsync_spin_clean@@Base>:
   2f218:	mov	r1, #0
   2f21c:	str	r1, [r0]
   2f220:	bx	lr

0002f224 <mcsync_spin_destroy@@Base>:
   2f224:	b	12188 <mycore_free@plt>

0002f228 <mcsync_spin_lock@@Base>:
   2f228:	push	{fp, lr}
   2f22c:	mov	fp, sp
   2f230:	bl	2f23c <mcsync_spin_lock@@Base+0x14>
   2f234:	mov	r0, #0
   2f238:	pop	{fp, pc}
   2f23c:	mov	r2, #0
   2f240:	mov	r1, #1
   2f244:	b	2f254 <mcsync_spin_lock@@Base+0x2c>
   2f248:	stlex	r3, r1, [r0]
   2f24c:	cmp	r3, #0
   2f250:	bxeq	lr
   2f254:	ldaex	r3, [r0]
   2f258:	cmp	r3, r2
   2f25c:	beq	2f248 <mcsync_spin_lock@@Base+0x20>
   2f260:	clrex
   2f264:	mov	r2, r3
   2f268:	b	2f254 <mcsync_spin_lock@@Base+0x2c>

0002f26c <mcsync_spin_unlock@@Base>:
   2f26c:	push	{fp, lr}
   2f270:	mov	fp, sp
   2f274:	bl	2f280 <mcsync_spin_unlock@@Base+0x14>
   2f278:	mov	r0, #0
   2f27c:	pop	{fp, pc}
   2f280:	mov	r1, #0
   2f284:	stl	r1, [r0]
   2f288:	bx	lr

0002f28c <mcsync_mutex_create@@Base>:
   2f28c:	mov	r0, #1
   2f290:	mov	r1, #24
   2f294:	b	113a8 <mycore_calloc@plt>

0002f298 <mcsync_mutex_init@@Base>:
   2f298:	push	{fp, lr}
   2f29c:	mov	fp, sp
   2f2a0:	mov	r1, #0
   2f2a4:	bl	1145c <pthread_mutex_init@plt>
   2f2a8:	cmp	r0, #0
   2f2ac:	movwne	r0, #1
   2f2b0:	pop	{fp, pc}

0002f2b4 <mcsync_mutex_clean@@Base>:
   2f2b4:	bx	lr

0002f2b8 <mcsync_mutex_destroy@@Base>:
   2f2b8:	push	{r4, sl, fp, lr}
   2f2bc:	add	fp, sp, #8
   2f2c0:	mov	r4, r0
   2f2c4:	bl	112ac <pthread_mutex_destroy@plt>
   2f2c8:	mov	r0, r4
   2f2cc:	pop	{r4, sl, fp, lr}
   2f2d0:	b	12188 <mycore_free@plt>

0002f2d4 <mcsync_mutex_lock@@Base>:
   2f2d4:	push	{fp, lr}
   2f2d8:	mov	fp, sp
   2f2dc:	bl	1139c <pthread_mutex_lock@plt>
   2f2e0:	cmp	r0, #0
   2f2e4:	movwne	r0, #1
   2f2e8:	pop	{fp, pc}

0002f2ec <mcsync_mutex_try_lock@@Base>:
   2f2ec:	push	{fp, lr}
   2f2f0:	mov	fp, sp
   2f2f4:	bl	114c8 <pthread_mutex_trylock@plt>
   2f2f8:	cmp	r0, #0
   2f2fc:	movwne	r0, #1
   2f300:	pop	{fp, pc}

0002f304 <mcsync_mutex_unlock@@Base>:
   2f304:	push	{fp, lr}
   2f308:	mov	fp, sp
   2f30c:	bl	1109c <pthread_mutex_unlock@plt>
   2f310:	cmp	r0, #0
   2f314:	movwne	r0, #1
   2f318:	pop	{fp, pc}

Disassembly of section .fini:

0002f31c <.fini>:
   2f31c:	push	{r3, lr}
   2f320:	pop	{r3, pc}
