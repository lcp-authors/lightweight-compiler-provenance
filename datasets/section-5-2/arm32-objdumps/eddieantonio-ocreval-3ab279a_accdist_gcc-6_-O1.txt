
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

0001089c <.init>:
   1089c:	push	{r3, lr}
   108a0:	bl	10a6c <getc@plt+0x48>
   108a4:	pop	{r3, pc}

Disassembly of section .plt:

000108a8 <calloc@plt-0x14>:
   108a8:	push	{lr}		; (str lr, [sp, #-4]!)
   108ac:	ldr	lr, [pc, #4]	; 108b8 <calloc@plt-0x4>
   108b0:	add	lr, pc, lr
   108b4:	ldr	pc, [lr, #8]!
   108b8:	andeq	r3, r1, r8, asr #14

000108bc <calloc@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #77824	; 0x13000
   108c4:	ldr	pc, [ip, #1864]!	; 0x748

000108c8 <strcmp@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #77824	; 0x13000
   108d0:	ldr	pc, [ip, #1856]!	; 0x740

000108d4 <fopen@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #77824	; 0x13000
   108dc:	ldr	pc, [ip, #1848]!	; 0x738

000108e0 <free@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #77824	; 0x13000
   108e8:	ldr	pc, [ip, #1840]!	; 0x730

000108ec <utf8proc_get_property@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #77824	; 0x13000
   108f4:	ldr	pc, [ip, #1832]!	; 0x728

000108f8 <fgets@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #77824	; 0x13000
   10900:	ldr	pc, [ip, #1824]!	; 0x720

00010904 <utf8proc_encode_char@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #77824	; 0x13000
   1090c:	ldr	pc, [ip, #1816]!	; 0x718

00010910 <strdup@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #77824	; 0x13000
   10918:	ldr	pc, [ip, #1808]!	; 0x710

0001091c <rewind@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #77824	; 0x13000
   10924:	ldr	pc, [ip, #1800]!	; 0x708

00010928 <unlink@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #77824	; 0x13000
   10930:	ldr	pc, [ip, #1792]!	; 0x700

00010934 <utf8proc_tolower@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #77824	; 0x13000
   1093c:	ldr	pc, [ip, #1784]!	; 0x6f8

00010940 <__xstat@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #77824	; 0x13000
   10948:	ldr	pc, [ip, #1776]!	; 0x6f0

0001094c <fwrite@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #77824	; 0x13000
   10954:	ldr	pc, [ip, #1768]!	; 0x6e8

00010958 <fread@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #77824	; 0x13000
   10960:	ldr	pc, [ip, #1760]!	; 0x6e0

00010964 <utf8proc_iterate@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #77824	; 0x13000
   1096c:	ldr	pc, [ip, #1752]!	; 0x6d8

00010970 <__libc_start_main@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #77824	; 0x13000
   10978:	ldr	pc, [ip, #1744]!	; 0x6d0

0001097c <__sysv_signal@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #77824	; 0x13000
   10984:	ldr	pc, [ip, #1736]!	; 0x6c8

00010988 <__gmon_start__@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #77824	; 0x13000
   10990:	ldr	pc, [ip, #1728]!	; 0x6c0

00010994 <getpid@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #77824	; 0x13000
   1099c:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a0 <exit@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #77824	; 0x13000
   109a8:	ldr	pc, [ip, #1712]!	; 0x6b0

000109ac <utf8proc_category@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1704]!	; 0x6a8

000109b8 <strlen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1696]!	; 0x6a0

000109c4 <fprintf@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #77824	; 0x13000
   109cc:	ldr	pc, [ip, #1688]!	; 0x698

000109d0 <__isoc99_sscanf@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #77824	; 0x13000
   109d8:	ldr	pc, [ip, #1680]!	; 0x690

000109dc <fclose@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #77824	; 0x13000
   109e4:	ldr	pc, [ip, #1672]!	; 0x688

000109e8 <sprintf@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #77824	; 0x13000
   109f0:	ldr	pc, [ip, #1664]!	; 0x680

000109f4 <utf8proc_errmsg@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1656]!	; 0x678

00010a00 <fputs@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1648]!	; 0x670

00010a0c <strncmp@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1640]!	; 0x668

00010a18 <abort@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1632]!	; 0x660

00010a24 <getc@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1624]!	; 0x658

Disassembly of section .text:

00010a30 <error@@Base-0x1430>:
   10a30:	mov	fp, #0
   10a34:	mov	lr, #0
   10a38:	pop	{r1}		; (ldr r1, [sp], #4)
   10a3c:	mov	r2, sp
   10a40:	push	{r2}		; (str r2, [sp, #-4]!)
   10a44:	push	{r0}		; (str r0, [sp, #-4]!)
   10a48:	ldr	ip, [pc, #16]	; 10a60 <getc@plt+0x3c>
   10a4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a50:	ldr	r0, [pc, #12]	; 10a64 <getc@plt+0x40>
   10a54:	ldr	r3, [pc, #12]	; 10a68 <getc@plt+0x44>
   10a58:	bl	10970 <__libc_start_main@plt>
   10a5c:	bl	10a18 <abort@plt>
   10a60:	andeq	r2, r1, r4, asr sl
   10a64:	muleq	r1, r8, fp
   10a68:	strdeq	r2, [r1], -r4
   10a6c:	ldr	r3, [pc, #20]	; 10a88 <getc@plt+0x64>
   10a70:	ldr	r2, [pc, #20]	; 10a8c <getc@plt+0x68>
   10a74:	add	r3, pc, r3
   10a78:	ldr	r2, [r3, r2]
   10a7c:	cmp	r2, #0
   10a80:	bxeq	lr
   10a84:	b	10988 <__gmon_start__@plt>
   10a88:	andeq	r3, r1, r4, lsl #11
   10a8c:	andeq	r0, r0, r8, lsl #1
   10a90:	ldr	r3, [pc, #28]	; 10ab4 <getc@plt+0x90>
   10a94:	ldr	r0, [pc, #28]	; 10ab8 <getc@plt+0x94>
   10a98:	sub	r3, r3, r0
   10a9c:	cmp	r3, #6
   10aa0:	bxls	lr
   10aa4:	ldr	r3, [pc, #16]	; 10abc <getc@plt+0x98>
   10aa8:	cmp	r3, #0
   10aac:	bxeq	lr
   10ab0:	bx	r3
   10ab4:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   10ab8:	muleq	r2, ip, r0
   10abc:	andeq	r0, r0, r0
   10ac0:	ldr	r1, [pc, #36]	; 10aec <getc@plt+0xc8>
   10ac4:	ldr	r0, [pc, #36]	; 10af0 <getc@plt+0xcc>
   10ac8:	sub	r1, r1, r0
   10acc:	asr	r1, r1, #2
   10ad0:	add	r1, r1, r1, lsr #31
   10ad4:	asrs	r1, r1, #1
   10ad8:	bxeq	lr
   10adc:	ldr	r3, [pc, #16]	; 10af4 <getc@plt+0xd0>
   10ae0:	cmp	r3, #0
   10ae4:	bxeq	lr
   10ae8:	bx	r3
   10aec:	muleq	r2, ip, r0
   10af0:	muleq	r2, ip, r0
   10af4:	andeq	r0, r0, r0
   10af8:	push	{r4, lr}
   10afc:	ldr	r4, [pc, #24]	; 10b1c <getc@plt+0xf8>
   10b00:	ldrb	r3, [r4]
   10b04:	cmp	r3, #0
   10b08:	popne	{r4, pc}
   10b0c:	bl	10a90 <getc@plt+0x6c>
   10b10:	mov	r3, #1
   10b14:	strb	r3, [r4]
   10b18:	pop	{r4, pc}
   10b1c:	strheq	r4, [r2], -r0
   10b20:	ldr	r0, [pc, #40]	; 10b50 <getc@plt+0x12c>
   10b24:	ldr	r3, [r0]
   10b28:	cmp	r3, #0
   10b2c:	bne	10b34 <getc@plt+0x110>
   10b30:	b	10ac0 <getc@plt+0x9c>
   10b34:	ldr	r3, [pc, #24]	; 10b54 <getc@plt+0x130>
   10b38:	cmp	r3, #0
   10b3c:	beq	10b30 <getc@plt+0x10c>
   10b40:	push	{r4, lr}
   10b44:	blx	r3
   10b48:	pop	{r4, lr}
   10b4c:	b	10ac0 <getc@plt+0x9c>
   10b50:	andeq	r3, r2, r4, lsl #28
   10b54:	andeq	r0, r0, r0
   10b58:	push	{r4, r5, r6, lr}
   10b5c:	ldr	r4, [pc, #44]	; 10b90 <getc@plt+0x16c>
   10b60:	ldr	r5, [r4]
   10b64:	ldr	r6, [r4, #4]
   10b68:	mov	r1, r0
   10b6c:	mov	r0, r4
   10b70:	bl	10f7c <getc@plt+0x558>
   10b74:	ldr	r2, [r4, #4]
   10b78:	ldr	r1, [r4]
   10b7c:	sub	r2, r2, r6
   10b80:	sub	r1, r1, r5
   10b84:	ldr	r0, [pc, #8]	; 10b94 <getc@plt+0x170>
   10b88:	bl	11700 <getc@plt+0xcdc>
   10b8c:	pop	{r4, r5, r6, pc}
   10b90:	andseq	r4, r3, r8, lsr #10
   10b94:	addseq	r6, fp, r4, ror #25
   10b98:	push	{r4, r5, lr}
   10b9c:	sub	sp, sp, #12
   10ba0:	add	ip, sp, #8
   10ba4:	str	r0, [ip, #-4]!
   10ba8:	mov	r5, r1
   10bac:	mov	r3, #0
   10bb0:	ldr	r2, [pc, #64]	; 10bf8 <getc@plt+0x1d4>
   10bb4:	mov	r0, ip
   10bb8:	bl	11fa0 <error@@Base+0x140>
   10bbc:	ldr	r3, [sp, #4]
   10bc0:	cmp	r3, #0
   10bc4:	ble	10be8 <getc@plt+0x1c4>
   10bc8:	sub	r5, r5, #4
   10bcc:	mov	r4, #0
   10bd0:	ldr	r0, [r5, #4]!
   10bd4:	bl	10b58 <getc@plt+0x134>
   10bd8:	add	r4, r4, #1
   10bdc:	ldr	r3, [sp, #4]
   10be0:	cmp	r3, r4
   10be4:	bgt	10bd0 <getc@plt+0x1ac>
   10be8:	mov	r1, #0
   10bec:	ldr	r0, [pc, #8]	; 10bfc <getc@plt+0x1d8>
   10bf0:	bl	11778 <getc@plt+0xd54>
   10bf4:	bl	11e08 <getc@plt+0x13e4>
   10bf8:	andeq	r2, r1, r4, ror #20
   10bfc:	addseq	r6, fp, r4, ror #25
   10c00:	push	{r4, lr}
   10c04:	mov	r2, r0
   10c08:	mov	r1, #99	; 0x63
   10c0c:	ldr	r0, [pc, #12]	; 10c20 <getc@plt+0x1fc>
   10c10:	bl	108f8 <fgets@plt>
   10c14:	adds	r0, r0, #0
   10c18:	movne	r0, #1
   10c1c:	pop	{r4, pc}
   10c20:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   10c24:	push	{r4, r5, r6, lr}
   10c28:	mov	r4, r1
   10c2c:	mov	r5, r2
   10c30:	bl	10c00 <getc@plt+0x1dc>
   10c34:	cmp	r0, #0
   10c38:	popeq	{r4, r5, r6, pc}
   10c3c:	mov	r2, r4
   10c40:	ldr	r1, [pc, #32]	; 10c68 <getc@plt+0x244>
   10c44:	ldr	r0, [pc, #32]	; 10c6c <getc@plt+0x248>
   10c48:	bl	109d0 <__isoc99_sscanf@plt>
   10c4c:	cmp	r0, #1
   10c50:	ldreq	r3, [r5]
   10c54:	ldreq	r2, [r4]
   10c58:	addeq	r3, r3, r2
   10c5c:	streq	r3, [r5]
   10c60:	movne	r0, #0
   10c64:	pop	{r4, r5, r6, pc}
   10c68:	andeq	r2, r1, r0, lsr #21
   10c6c:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   10c70:	push	{r4, lr}
   10c74:	sub	sp, sp, #24
   10c78:	mov	r4, r1
   10c7c:	bl	10c00 <getc@plt+0x1dc>
   10c80:	cmp	r0, #0
   10c84:	bne	10c90 <getc@plt+0x26c>
   10c88:	add	sp, sp, #24
   10c8c:	pop	{r4, pc}
   10c90:	add	r3, sp, #20
   10c94:	str	r3, [sp, #4]
   10c98:	add	r3, sp, #16
   10c9c:	str	r3, [sp]
   10ca0:	add	r3, sp, #12
   10ca4:	add	r2, sp, #8
   10ca8:	ldr	r1, [pc, #88]	; 10d08 <getc@plt+0x2e4>
   10cac:	ldr	r0, [pc, #88]	; 10d0c <getc@plt+0x2e8>
   10cb0:	bl	109d0 <__isoc99_sscanf@plt>
   10cb4:	cmp	r0, #4
   10cb8:	movne	r0, #0
   10cbc:	bne	10c88 <getc@plt+0x264>
   10cc0:	ldr	r3, [r4]
   10cc4:	ldr	r2, [sp, #8]
   10cc8:	add	r3, r3, r2
   10ccc:	str	r3, [r4]
   10cd0:	ldr	r3, [r4, #4]
   10cd4:	ldr	r2, [sp, #12]
   10cd8:	add	r3, r3, r2
   10cdc:	str	r3, [r4, #4]
   10ce0:	ldr	r3, [r4, #8]
   10ce4:	ldr	r2, [sp, #16]
   10ce8:	add	r3, r3, r2
   10cec:	str	r3, [r4, #8]
   10cf0:	ldr	r3, [r4, #12]
   10cf4:	ldr	r2, [sp, #20]
   10cf8:	add	r3, r3, r2
   10cfc:	str	r3, [r4, #12]
   10d00:	mov	r0, #1
   10d04:	b	10c88 <getc@plt+0x264>
   10d08:	muleq	r1, r4, sl
   10d0c:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   10d10:	push	{lr}		; (str lr, [sp, #-4]!)
   10d14:	sub	sp, sp, #20
   10d18:	ldr	r3, [r1, #4]
   10d1c:	ldr	ip, [r1]
   10d20:	str	r2, [sp, #8]
   10d24:	ldr	r2, [r1, #12]
   10d28:	str	r2, [sp, #4]
   10d2c:	ldr	r2, [r1, #8]
   10d30:	str	r2, [sp]
   10d34:	mov	r2, ip
   10d38:	ldr	r1, [pc, #8]	; 10d48 <getc@plt+0x324>
   10d3c:	bl	109c4 <fprintf@plt>
   10d40:	add	sp, sp, #20
   10d44:	pop	{pc}		; (ldr pc, [sp], #4)
   10d48:	andeq	r2, r1, r4, lsr #21
   10d4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d50:	sub	sp, sp, #12
   10d54:	str	r1, [sp, #4]
   10d58:	cmp	r2, #0
   10d5c:	beq	10d90 <getc@plt+0x36c>
   10d60:	vldr	s15, [sp, #4]
   10d64:	vcvt.f64.s32	d7, s15
   10d68:	vldr	d6, [pc, #56]	; 10da8 <getc@plt+0x384>
   10d6c:	vmul.f64	d7, d7, d6
   10d70:	vmov	s13, r2
   10d74:	vcvt.f64.s32	d6, s13
   10d78:	vdiv.f64	d5, d7, d6
   10d7c:	vmov	r2, r3, d5
   10d80:	ldr	r1, [pc, #40]	; 10db0 <getc@plt+0x38c>
   10d84:	bl	109c4 <fprintf@plt>
   10d88:	add	sp, sp, #12
   10d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   10d90:	mov	r3, r0
   10d94:	mov	r2, #8
   10d98:	mov	r1, #1
   10d9c:	ldr	r0, [pc, #16]	; 10db4 <getc@plt+0x390>
   10da0:	bl	1094c <fwrite@plt>
   10da4:	b	10d88 <getc@plt+0x364>
   10da8:	andeq	r0, r0, r0
   10dac:	subsmi	r0, r9, r0
   10db0:	andeq	r2, r1, ip, asr #21
   10db4:	andeq	r2, r1, r0, asr #21
   10db8:	ldr	r2, [r0, #12]
   10dbc:	ldr	r3, [r1, #12]
   10dc0:	cmp	r2, r3
   10dc4:	beq	10dd0 <getc@plt+0x3ac>
   10dc8:	sub	r0, r3, r2
   10dcc:	bx	lr
   10dd0:	ldr	r2, [r0, #16]
   10dd4:	ldr	r3, [r1, #16]
   10dd8:	cmp	r2, r3
   10ddc:	beq	10de8 <getc@plt+0x3c4>
   10de0:	sub	r0, r3, r2
   10de4:	bx	lr
   10de8:	push	{r4, lr}
   10dec:	ldr	r1, [r1, #8]
   10df0:	ldr	r0, [r0, #8]
   10df4:	bl	11cb0 <getc@plt+0x128c>
   10df8:	pop	{r4, pc}
   10dfc:	push	{r4, r5, r6, r7, lr}
   10e00:	sub	sp, sp, #20
   10e04:	mov	r5, r0
   10e08:	mov	r4, r1
   10e0c:	mov	r6, r2
   10e10:	mov	r7, r3
   10e14:	ldr	r3, [r1, #4]
   10e18:	ldr	r2, [r1]
   10e1c:	ldr	r1, [pc, #96]	; 10e84 <getc@plt+0x460>
   10e20:	bl	109c4 <fprintf@plt>
   10e24:	ldr	r3, [r4]
   10e28:	ldr	r1, [r4, #4]
   10e2c:	mov	r2, r3
   10e30:	sub	r1, r3, r1
   10e34:	mov	r0, r5
   10e38:	bl	10d4c <getc@plt+0x328>
   10e3c:	cmp	r6, #0
   10e40:	beq	10e5c <getc@plt+0x438>
   10e44:	mov	r2, r6
   10e48:	ldr	r1, [pc, #56]	; 10e88 <getc@plt+0x464>
   10e4c:	mov	r0, r5
   10e50:	bl	109c4 <fprintf@plt>
   10e54:	add	sp, sp, #20
   10e58:	pop	{r4, r5, r6, r7, pc}
   10e5c:	mov	r3, #1
   10e60:	add	r2, sp, #4
   10e64:	mov	r1, r7
   10e68:	mov	r0, #0
   10e6c:	bl	125e8 <error@@Base+0x788>
   10e70:	add	r2, sp, #4
   10e74:	ldr	r1, [pc, #16]	; 10e8c <getc@plt+0x468>
   10e78:	mov	r0, r5
   10e7c:	bl	109c4 <fprintf@plt>
   10e80:	b	10e54 <getc@plt+0x430>
   10e84:	ldrdeq	r2, [r1], -r4
   10e88:	andeq	r2, r1, r4, lsl #23
   10e8c:	andeq	r2, r1, r0, ror #21
   10e90:	push	{r4, r5, r6, r7, r8, lr}
   10e94:	mov	r4, r0
   10e98:	mov	r7, r1
   10e9c:	mov	r6, r2
   10ea0:	mov	r5, r3
   10ea4:	mov	r0, r1
   10ea8:	bl	11b74 <getc@plt+0x1150>
   10eac:	add	r0, r4, r0, lsl #3
   10eb0:	ldr	r3, [r0, #68]	; 0x44
   10eb4:	add	r3, r3, r6
   10eb8:	str	r3, [r0, #68]	; 0x44
   10ebc:	ldr	r3, [r0, #72]	; 0x48
   10ec0:	add	r3, r3, r5
   10ec4:	str	r3, [r0, #72]	; 0x48
   10ec8:	ldr	r3, [r4, #2116]	; 0x844
   10ecc:	add	r3, r3, r6
   10ed0:	str	r3, [r4, #2116]	; 0x844
   10ed4:	ldr	r3, [r4, #2120]	; 0x848
   10ed8:	add	r3, r3, r5
   10edc:	str	r3, [r4, #2120]	; 0x848
   10ee0:	add	r4, r4, r7, lsl #3
   10ee4:	add	r4, r4, #8192	; 0x2000
   10ee8:	ldr	r2, [r4, #1988]	; 0x7c4
   10eec:	add	r2, r2, r6
   10ef0:	str	r2, [r4, #1988]	; 0x7c4
   10ef4:	ldr	r3, [r4, #1992]	; 0x7c8
   10ef8:	add	r3, r3, r5
   10efc:	str	r3, [r4, #1992]	; 0x7c8
   10f00:	pop	{r4, r5, r6, r7, r8, pc}
   10f04:	push	{r4, r5, r6, r7, r8, lr}
   10f08:	mov	r7, r1
   10f0c:	mov	r6, r2
   10f10:	mov	r5, r3
   10f14:	add	r0, r0, #2112	; 0x840
   10f18:	add	r4, r0, #12
   10f1c:	mov	r0, r4
   10f20:	bl	118a8 <getc@plt+0xe84>
   10f24:	cmp	r0, #0
   10f28:	beq	10f48 <getc@plt+0x524>
   10f2c:	ldr	r2, [r0, #12]
   10f30:	add	r2, r2, r6
   10f34:	str	r2, [r0, #12]
   10f38:	ldr	r3, [r0, #16]
   10f3c:	add	r3, r3, r5
   10f40:	str	r3, [r0, #16]
   10f44:	pop	{r4, r5, r6, r7, r8, pc}
   10f48:	mov	r1, #20
   10f4c:	mov	r0, #1
   10f50:	bl	11e9c <error@@Base+0x3c>
   10f54:	mov	r8, r0
   10f58:	mov	r0, r7
   10f5c:	bl	10910 <strdup@plt>
   10f60:	str	r0, [r8, #8]
   10f64:	str	r6, [r8, #12]
   10f68:	str	r5, [r8, #16]
   10f6c:	mov	r1, r8
   10f70:	mov	r0, r4
   10f74:	bl	118f0 <getc@plt+0xecc>
   10f78:	pop	{r4, r5, r6, r7, r8, pc}
   10f7c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f80:	sub	sp, sp, #28
   10f84:	mov	r5, r0
   10f88:	mov	r6, r1
   10f8c:	ldr	r1, [pc, #716]	; 11260 <getc@plt+0x83c>
   10f90:	mov	r0, r6
   10f94:	bl	11f34 <error@@Base+0xd4>
   10f98:	mov	r4, r0
   10f9c:	bl	10c00 <getc@plt+0x1dc>
   10fa0:	cmp	r0, #0
   10fa4:	beq	1124c <getc@plt+0x828>
   10fa8:	mov	r2, #40	; 0x28
   10fac:	ldr	r1, [pc, #688]	; 11264 <getc@plt+0x840>
   10fb0:	ldr	r0, [pc, #688]	; 11268 <getc@plt+0x844>
   10fb4:	bl	10a0c <strncmp@plt>
   10fb8:	cmp	r0, #0
   10fbc:	bne	1124c <getc@plt+0x828>
   10fc0:	mov	r0, r4
   10fc4:	bl	10c00 <getc@plt+0x1dc>
   10fc8:	cmp	r0, #0
   10fcc:	beq	1124c <getc@plt+0x828>
   10fd0:	ldr	r1, [pc, #660]	; 1126c <getc@plt+0x848>
   10fd4:	ldr	r0, [pc, #652]	; 11268 <getc@plt+0x844>
   10fd8:	bl	108c8 <strcmp@plt>
   10fdc:	cmp	r0, #0
   10fe0:	bne	1124c <getc@plt+0x828>
   10fe4:	mov	r2, r5
   10fe8:	add	r1, sp, #20
   10fec:	mov	r0, r4
   10ff0:	bl	10c24 <getc@plt+0x200>
   10ff4:	cmp	r0, #0
   10ff8:	beq	1124c <getc@plt+0x828>
   10ffc:	add	r2, r5, #4
   11000:	add	r1, sp, #16
   11004:	mov	r0, r4
   11008:	bl	10c24 <getc@plt+0x200>
   1100c:	cmp	r0, #0
   11010:	beq	1124c <getc@plt+0x828>
   11014:	mov	r0, r4
   11018:	bl	10c00 <getc@plt+0x1dc>
   1101c:	cmp	r0, #0
   11020:	beq	1124c <getc@plt+0x828>
   11024:	mov	r0, r4
   11028:	bl	10c00 <getc@plt+0x1dc>
   1102c:	cmp	r0, #0
   11030:	beq	1124c <getc@plt+0x828>
   11034:	add	r2, r5, #8
   11038:	add	r1, sp, #12
   1103c:	mov	r0, r4
   11040:	bl	10c24 <getc@plt+0x200>
   11044:	cmp	r0, #0
   11048:	beq	1124c <getc@plt+0x828>
   1104c:	add	r2, r5, #12
   11050:	add	r1, sp, #12
   11054:	mov	r0, r4
   11058:	bl	10c24 <getc@plt+0x200>
   1105c:	cmp	r0, #0
   11060:	beq	1124c <getc@plt+0x828>
   11064:	add	r2, r5, #16
   11068:	add	r1, sp, #12
   1106c:	mov	r0, r4
   11070:	bl	10c24 <getc@plt+0x200>
   11074:	cmp	r0, #0
   11078:	beq	1124c <getc@plt+0x828>
   1107c:	mov	r0, r4
   11080:	bl	10c00 <getc@plt+0x1dc>
   11084:	cmp	r0, #0
   11088:	beq	1124c <getc@plt+0x828>
   1108c:	mov	r0, r4
   11090:	bl	10c00 <getc@plt+0x1dc>
   11094:	cmp	r0, #0
   11098:	beq	1124c <getc@plt+0x828>
   1109c:	mov	r0, r4
   110a0:	bl	10c00 <getc@plt+0x1dc>
   110a4:	cmp	r0, #0
   110a8:	beq	1124c <getc@plt+0x828>
   110ac:	mov	r0, r4
   110b0:	bl	10c00 <getc@plt+0x1dc>
   110b4:	cmp	r0, #0
   110b8:	beq	1124c <getc@plt+0x828>
   110bc:	add	r1, r5, #20
   110c0:	mov	r0, r4
   110c4:	bl	10c70 <getc@plt+0x24c>
   110c8:	cmp	r0, #0
   110cc:	beq	1124c <getc@plt+0x828>
   110d0:	add	r1, r5, #36	; 0x24
   110d4:	mov	r0, r4
   110d8:	bl	10c70 <getc@plt+0x24c>
   110dc:	cmp	r0, #0
   110e0:	beq	1124c <getc@plt+0x828>
   110e4:	add	r1, r5, #52	; 0x34
   110e8:	mov	r0, r4
   110ec:	bl	10c70 <getc@plt+0x24c>
   110f0:	cmp	r0, #0
   110f4:	beq	1124c <getc@plt+0x828>
   110f8:	mov	r0, r4
   110fc:	bl	10c00 <getc@plt+0x1dc>
   11100:	cmp	r0, #0
   11104:	beq	1124c <getc@plt+0x828>
   11108:	ldr	r6, [pc, #344]	; 11268 <getc@plt+0x844>
   1110c:	mov	r0, r4
   11110:	bl	10c00 <getc@plt+0x1dc>
   11114:	cmp	r0, #0
   11118:	beq	11128 <getc@plt+0x704>
   1111c:	ldrb	r3, [r6]
   11120:	cmp	r3, #10
   11124:	bne	1110c <getc@plt+0x6e8>
   11128:	ldr	r3, [sp, #16]
   1112c:	cmp	r3, #0
   11130:	ble	11194 <getc@plt+0x770>
   11134:	mov	r0, r4
   11138:	bl	10c00 <getc@plt+0x1dc>
   1113c:	cmp	r0, #0
   11140:	beq	11194 <getc@plt+0x770>
   11144:	ldr	r8, [pc, #292]	; 11270 <getc@plt+0x84c>
   11148:	ldr	r7, [pc, #280]	; 11268 <getc@plt+0x844>
   1114c:	add	r6, r7, #20
   11150:	b	11184 <getc@plt+0x760>
   11154:	add	r3, sp, #8
   11158:	add	r2, sp, #12
   1115c:	mov	r1, r8
   11160:	mov	r0, r7
   11164:	bl	109d0 <__isoc99_sscanf@plt>
   11168:	cmp	r0, #2
   1116c:	bne	11194 <getc@plt+0x770>
   11170:	ldr	r3, [sp, #8]
   11174:	ldr	r2, [sp, #12]
   11178:	mov	r1, r6
   1117c:	mov	r0, r5
   11180:	bl	10f04 <getc@plt+0x4e0>
   11184:	mov	r0, r4
   11188:	bl	10c00 <getc@plt+0x1dc>
   1118c:	cmp	r0, #0
   11190:	bne	11154 <getc@plt+0x730>
   11194:	ldr	r3, [sp, #20]
   11198:	cmp	r3, #0
   1119c:	ble	1123c <getc@plt+0x818>
   111a0:	mov	r0, r4
   111a4:	bl	10c00 <getc@plt+0x1dc>
   111a8:	cmp	r0, #0
   111ac:	beq	1123c <getc@plt+0x818>
   111b0:	ldr	r7, [pc, #184]	; 11270 <getc@plt+0x84c>
   111b4:	ldr	r6, [pc, #172]	; 11268 <getc@plt+0x844>
   111b8:	ldr	r9, [pc, #180]	; 11274 <getc@plt+0x850>
   111bc:	add	r8, r6, #31
   111c0:	b	1122c <getc@plt+0x808>
   111c4:	ldrb	r3, [r6, #30]
   111c8:	str	r3, [sp, #4]
   111cc:	b	11218 <getc@plt+0x7f4>
   111d0:	add	r3, sp, #8
   111d4:	add	r2, sp, #12
   111d8:	mov	r1, r7
   111dc:	mov	r0, r6
   111e0:	bl	109d0 <__isoc99_sscanf@plt>
   111e4:	cmp	r0, #2
   111e8:	bne	1123c <getc@plt+0x818>
   111ec:	ldrb	r3, [r6, #31]
   111f0:	cmp	r3, #125	; 0x7d
   111f4:	beq	111c4 <getc@plt+0x7a0>
   111f8:	cmp	r3, #92	; 0x5c
   111fc:	moveq	r3, #10
   11200:	streq	r3, [sp, #4]
   11204:	beq	11218 <getc@plt+0x7f4>
   11208:	add	r2, sp, #4
   1120c:	mov	r1, r9
   11210:	mov	r0, r8
   11214:	bl	109d0 <__isoc99_sscanf@plt>
   11218:	ldr	r3, [sp, #8]
   1121c:	ldr	r2, [sp, #12]
   11220:	ldr	r1, [sp, #4]
   11224:	mov	r0, r5
   11228:	bl	10e90 <getc@plt+0x46c>
   1122c:	mov	r0, r4
   11230:	bl	10c00 <getc@plt+0x1dc>
   11234:	cmp	r0, #0
   11238:	bne	111d0 <getc@plt+0x7ac>
   1123c:	mov	r0, r4
   11240:	bl	11d2c <getc@plt+0x1308>
   11244:	add	sp, sp, #28
   11248:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1124c:	ldr	r1, [pc, #36]	; 11278 <getc@plt+0x854>
   11250:	cmp	r6, #0
   11254:	movne	r1, r6
   11258:	ldr	r0, [pc, #28]	; 1127c <getc@plt+0x858>
   1125c:	bl	11eec <error@@Base+0x8c>
   11260:	strdeq	r2, [r1], -r4
   11264:	strdeq	r2, [r1], -r8
   11268:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   1126c:	andeq	r2, r1, r4, lsr #22
   11270:	muleq	r1, ip, sl
   11274:	andeq	r2, r1, r0, asr fp
   11278:	andeq	r2, r1, ip, ror #21
   1127c:	andeq	r2, r1, r4, asr fp
   11280:	push	{r4, r5, r6, r7, r8, lr}
   11284:	sub	sp, sp, #8
   11288:	mov	r6, r0
   1128c:	mov	r0, r1
   11290:	ldr	r1, [pc, #668]	; 11534 <getc@plt+0xb10>
   11294:	bl	11f34 <error@@Base+0xd4>
   11298:	mov	r7, r0
   1129c:	ldr	r3, [pc, #660]	; 11538 <getc@plt+0xb14>
   112a0:	ldr	r2, [pc, #660]	; 1153c <getc@plt+0xb18>
   112a4:	ldr	r1, [pc, #660]	; 11540 <getc@plt+0xb1c>
   112a8:	bl	109c4 <fprintf@plt>
   112ac:	ldr	r4, [pc, #656]	; 11544 <getc@plt+0xb20>
   112b0:	ldr	r3, [pc, #656]	; 11548 <getc@plt+0xb24>
   112b4:	ldr	r2, [r6]
   112b8:	mov	r1, r4
   112bc:	mov	r0, r7
   112c0:	bl	109c4 <fprintf@plt>
   112c4:	ldr	r3, [pc, #640]	; 1154c <getc@plt+0xb28>
   112c8:	ldr	r2, [r6, #4]
   112cc:	mov	r1, r4
   112d0:	mov	r0, r7
   112d4:	bl	109c4 <fprintf@plt>
   112d8:	ldr	r3, [r6]
   112dc:	ldr	r1, [r6, #4]
   112e0:	mov	r2, r3
   112e4:	sub	r1, r3, r1
   112e8:	mov	r0, r7
   112ec:	bl	10d4c <getc@plt+0x328>
   112f0:	ldr	r1, [pc, #600]	; 11550 <getc@plt+0xb2c>
   112f4:	mov	r0, r7
   112f8:	bl	109c4 <fprintf@plt>
   112fc:	ldr	r3, [pc, #592]	; 11554 <getc@plt+0xb30>
   11300:	ldr	r2, [r6, #8]
   11304:	mov	r1, r4
   11308:	mov	r0, r7
   1130c:	bl	109c4 <fprintf@plt>
   11310:	ldr	r3, [pc, #576]	; 11558 <getc@plt+0xb34>
   11314:	ldr	r2, [r6, #12]
   11318:	mov	r1, r4
   1131c:	mov	r0, r7
   11320:	bl	109c4 <fprintf@plt>
   11324:	ldr	r3, [pc, #560]	; 1155c <getc@plt+0xb38>
   11328:	ldr	r2, [r6, #16]
   1132c:	mov	r1, r4
   11330:	mov	r0, r7
   11334:	bl	109c4 <fprintf@plt>
   11338:	ldr	r1, [r6, #8]
   1133c:	ldr	r3, [r6, #12]
   11340:	ldr	r2, [r6]
   11344:	add	r1, r1, r3
   11348:	mov	r0, r7
   1134c:	bl	10d4c <getc@plt+0x328>
   11350:	ldr	r1, [pc, #520]	; 11560 <getc@plt+0xb3c>
   11354:	mov	r0, r7
   11358:	bl	109c4 <fprintf@plt>
   1135c:	ldr	r3, [r6]
   11360:	ldr	r1, [r6, #48]	; 0x30
   11364:	mov	r2, r3
   11368:	sub	r1, r3, r1
   1136c:	mov	r0, r7
   11370:	bl	10d4c <getc@plt+0x328>
   11374:	ldr	r1, [pc, #488]	; 11564 <getc@plt+0xb40>
   11378:	mov	r0, r7
   1137c:	bl	109c4 <fprintf@plt>
   11380:	mov	r3, r7
   11384:	mov	r2, #37	; 0x25
   11388:	mov	r1, #1
   1138c:	ldr	r0, [pc, #468]	; 11568 <getc@plt+0xb44>
   11390:	bl	1094c <fwrite@plt>
   11394:	ldr	r2, [pc, #464]	; 1156c <getc@plt+0xb48>
   11398:	add	r1, r6, #20
   1139c:	mov	r0, r7
   113a0:	bl	10d10 <getc@plt+0x2ec>
   113a4:	ldr	r2, [pc, #452]	; 11570 <getc@plt+0xb4c>
   113a8:	add	r1, r6, #36	; 0x24
   113ac:	mov	r0, r7
   113b0:	bl	10d10 <getc@plt+0x2ec>
   113b4:	ldr	r2, [pc, #440]	; 11574 <getc@plt+0xb50>
   113b8:	add	r1, r6, #52	; 0x34
   113bc:	mov	r0, r7
   113c0:	bl	10d10 <getc@plt+0x2ec>
   113c4:	ldr	r1, [pc, #428]	; 11578 <getc@plt+0xb54>
   113c8:	mov	r0, r7
   113cc:	bl	109c4 <fprintf@plt>
   113d0:	add	r5, r6, #68	; 0x44
   113d4:	mov	r4, #0
   113d8:	mov	r8, r4
   113dc:	b	113f0 <getc@plt+0x9cc>
   113e0:	add	r4, r4, #1
   113e4:	add	r5, r5, #8
   113e8:	cmp	r4, #256	; 0x100
   113ec:	beq	1141c <getc@plt+0x9f8>
   113f0:	ldr	r3, [r5]
   113f4:	cmp	r3, #0
   113f8:	ble	113e0 <getc@plt+0x9bc>
   113fc:	mov	r0, r4
   11400:	bl	11ba8 <getc@plt+0x1184>
   11404:	mov	r3, r8
   11408:	mov	r2, r0
   1140c:	mov	r1, r5
   11410:	mov	r0, r7
   11414:	bl	10dfc <getc@plt+0x3d8>
   11418:	b	113e0 <getc@plt+0x9bc>
   1141c:	add	r1, r6, #2112	; 0x840
   11420:	mov	r3, #0
   11424:	ldr	r2, [pc, #328]	; 11574 <getc@plt+0xb50>
   11428:	add	r1, r1, #4
   1142c:	mov	r0, r7
   11430:	bl	10dfc <getc@plt+0x3d8>
   11434:	ldr	r3, [r6, #4]
   11438:	cmp	r3, #0
   1143c:	ble	114c0 <getc@plt+0xa9c>
   11440:	add	r0, r6, #2112	; 0x840
   11444:	add	r0, r0, #12
   11448:	bl	11998 <getc@plt+0xf74>
   1144c:	add	r4, r6, #8192	; 0x2000
   11450:	ldr	r2, [pc, #292]	; 1157c <getc@plt+0xb58>
   11454:	ldr	r1, [r4, #1980]	; 0x7bc
   11458:	ldr	r0, [r4, #1984]	; 0x7c0
   1145c:	bl	116d0 <getc@plt+0xcac>
   11460:	mov	r3, r7
   11464:	mov	r2, #39	; 0x27
   11468:	mov	r1, #1
   1146c:	ldr	r0, [pc, #268]	; 11580 <getc@plt+0xb5c>
   11470:	bl	1094c <fwrite@plt>
   11474:	ldr	r3, [r4, #1984]	; 0x7c0
   11478:	cmp	r3, #0
   1147c:	ble	114c0 <getc@plt+0xa9c>
   11480:	mov	r4, #0
   11484:	add	r5, r6, #8192	; 0x2000
   11488:	ldr	r8, [pc, #244]	; 11584 <getc@plt+0xb60>
   1148c:	ldr	r3, [r5, #1980]	; 0x7bc
   11490:	ldr	r1, [r3, r4, lsl #2]
   11494:	ldr	r3, [r1, #16]
   11498:	ldr	r2, [r1, #12]
   1149c:	ldr	r1, [r1, #8]
   114a0:	str	r1, [sp]
   114a4:	mov	r1, r8
   114a8:	mov	r0, r7
   114ac:	bl	109c4 <fprintf@plt>
   114b0:	add	r4, r4, #1
   114b4:	ldr	r3, [r5, #1984]	; 0x7c0
   114b8:	cmp	r3, r4
   114bc:	bgt	1148c <getc@plt+0xa68>
   114c0:	ldr	r3, [r6]
   114c4:	cmp	r3, #0
   114c8:	ble	11524 <getc@plt+0xb00>
   114cc:	ldr	r1, [pc, #164]	; 11578 <getc@plt+0xb54>
   114d0:	mov	r0, r7
   114d4:	bl	109c4 <fprintf@plt>
   114d8:	add	r4, r6, #10176	; 0x27c0
   114dc:	add	r4, r4, #4
   114e0:	mov	r5, #0
   114e4:	mov	r8, r5
   114e8:	ldr	r6, [pc, #152]	; 11588 <getc@plt+0xb64>
   114ec:	b	11500 <getc@plt+0xadc>
   114f0:	add	r5, r5, #1
   114f4:	add	r4, r4, #8
   114f8:	cmp	r5, r6
   114fc:	beq	11524 <getc@plt+0xb00>
   11500:	ldr	r3, [r4]
   11504:	cmp	r3, #0
   11508:	ble	114f0 <getc@plt+0xacc>
   1150c:	mov	r3, r5
   11510:	mov	r2, r8
   11514:	mov	r1, r4
   11518:	mov	r0, r7
   1151c:	bl	10dfc <getc@plt+0x3d8>
   11520:	b	114f0 <getc@plt+0xacc>
   11524:	mov	r0, r7
   11528:	bl	11d2c <getc@plt+0x1308>
   1152c:	add	sp, sp, #8
   11530:	pop	{r4, r5, r6, r7, r8, pc}
   11534:	andeq	r2, r1, r8, ror #22
   11538:	andeq	r2, r1, r4, lsr #22
   1153c:	strdeq	r2, [r1], -r8
   11540:	andeq	r2, r1, ip, ror #22
   11544:	andeq	r2, r1, r0, lsl #23
   11548:	andeq	r2, r1, r4, ror fp
   1154c:	andeq	r2, r1, ip, lsl #23
   11550:	muleq	r1, r4, fp
   11554:	andeq	r2, r1, r4, lsr #23
   11558:			; <UNDEFINED> instruction: 0x00012bb8
   1155c:	andeq	r2, r1, r8, asr #23
   11560:	ldrdeq	r2, [r1], -r4
   11564:	andeq	r2, r1, ip, ror #23
   11568:	andeq	r2, r1, ip, lsl #24
   1156c:	andeq	r2, r1, r4, lsr ip
   11570:	andeq	r2, r1, ip, lsr ip
   11574:	andeq	r2, r1, r8, asr #24
   11578:	andeq	r2, r1, r0, asr ip
   1157c:			; <UNDEFINED> instruction: 0x00010db8
   11580:	andeq	r2, r1, r0, ror ip
   11584:	muleq	r1, r8, ip
   11588:			; <UNDEFINED> instruction: 0x0010ffff
   1158c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11590:	mov	sl, r0
   11594:	mov	r9, r1
   11598:	ldr	r3, [pc, #300]	; 116cc <getc@plt+0xca8>
   1159c:	ldr	r3, [r3]
   115a0:	ldr	r8, [r3, r0, lsl #2]
   115a4:	cmp	r0, r1
   115a8:	movge	r3, r1
   115ac:	movge	r4, r0
   115b0:	bge	11690 <getc@plt+0xc6c>
   115b4:	mov	r4, r0
   115b8:	mov	r3, r1
   115bc:	ldr	r6, [pc, #264]	; 116cc <getc@plt+0xca8>
   115c0:	b	11644 <getc@plt+0xc20>
   115c4:	mov	r5, r3
   115c8:	cmp	r4, r5
   115cc:	beq	11688 <getc@plt+0xc64>
   115d0:	ldr	r2, [r6]
   115d4:	add	r3, r4, #1
   115d8:	lsl	r7, r4, #2
   115dc:	ldr	r1, [r2, r5, lsl #2]
   115e0:	str	r1, [r2, r4, lsl #2]
   115e4:	cmp	r3, r5
   115e8:	movge	r4, r3
   115ec:	bge	11624 <getc@plt+0xc00>
   115f0:	add	r7, r7, #4
   115f4:	mov	r4, r3
   115f8:	ldr	r2, [r6]
   115fc:	ldr	r3, [r6, #4]
   11600:	ldr	r1, [r2, r7]
   11604:	mov	r0, r8
   11608:	blx	r3
   1160c:	cmp	r0, #0
   11610:	ble	11624 <getc@plt+0xc00>
   11614:	add	r4, r4, #1
   11618:	add	r7, r7, #4
   1161c:	cmp	r4, r5
   11620:	blt	115f8 <getc@plt+0xbd4>
   11624:	cmp	r4, r5
   11628:	beq	1168c <getc@plt+0xc68>
   1162c:	ldr	r2, [r6]
   11630:	sub	r3, r5, #1
   11634:	ldr	r1, [r2, r4, lsl #2]
   11638:	str	r1, [r2, r5, lsl #2]
   1163c:	cmp	r3, r4
   11640:	ble	11690 <getc@plt+0xc6c>
   11644:	cmp	r3, r4
   11648:	ble	115c4 <getc@plt+0xba0>
   1164c:	lsl	r7, r3, #2
   11650:	mov	r5, r3
   11654:	ldr	r2, [r6]
   11658:	ldr	r3, [r6, #4]
   1165c:	ldr	r1, [r2, r7]
   11660:	mov	r0, r8
   11664:	blx	r3
   11668:	cmp	r0, #0
   1166c:	bge	115c8 <getc@plt+0xba4>
   11670:	sub	r5, r5, #1
   11674:	sub	r7, r7, #4
   11678:	cmp	r5, r4
   1167c:	bne	11654 <getc@plt+0xc30>
   11680:	mov	r4, r5
   11684:	b	11624 <getc@plt+0xc00>
   11688:	mov	r4, r5
   1168c:	mov	r3, r4
   11690:	ldr	r2, [pc, #52]	; 116cc <getc@plt+0xca8>
   11694:	ldr	r2, [r2]
   11698:	str	r8, [r2, r3, lsl #2]
   1169c:	sub	r1, r3, #1
   116a0:	cmp	sl, r1
   116a4:	blt	116c0 <getc@plt+0xc9c>
   116a8:	add	r0, r4, #1
   116ac:	cmp	r9, r0
   116b0:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   116b4:	mov	r1, r9
   116b8:	bl	1158c <getc@plt+0xb68>
   116bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116c0:	mov	r0, sl
   116c4:	bl	1158c <getc@plt+0xb68>
   116c8:	b	116a8 <getc@plt+0xc84>
   116cc:	andeq	r4, r2, r8, lsl r1
   116d0:	cmp	r0, #1
   116d4:	bxle	lr
   116d8:	push	{r4, lr}
   116dc:	ldr	r3, [pc, #20]	; 116f8 <getc@plt+0xcd4>
   116e0:	str	r1, [r3]
   116e4:	str	r2, [r3, #4]
   116e8:	sub	r1, r0, #1
   116ec:	mov	r0, #0
   116f0:	bl	1158c <getc@plt+0xb68>
   116f4:	pop	{r4, pc}
   116f8:	andeq	r4, r2, r8, lsl r1
   116fc:	andeq	r0, r0, r0
   11700:	cmp	r1, #0
   11704:	bxeq	lr
   11708:	sub	r3, r1, r2
   1170c:	vmov	s14, r3
   11710:	vcvt.f64.s32	d7, s14
   11714:	vldr	d6, [pc, #84]	; 11770 <getc@plt+0xd4c>
   11718:	vmul.f64	d7, d7, d6
   1171c:	vmov	s13, r1
   11720:	vcvt.f64.s32	d5, s13
   11724:	vdiv.f64	d6, d7, d5
   11728:	vcmpe.f64	d6, #0.0
   1172c:	vmrs	APSR_nzcv, fpscr
   11730:	blt	11760 <getc@plt+0xd3c>
   11734:	mov	r3, #0
   11738:	ldr	r2, [r0, r3, lsl #2]
   1173c:	add	r2, r2, r1
   11740:	str	r2, [r0, r3, lsl #2]
   11744:	add	r3, r3, #1
   11748:	sxth	r3, r3
   1174c:	vmov	s15, r3
   11750:	vcvt.f64.s32	d7, s15
   11754:	vcmpe.f64	d6, d7
   11758:	vmrs	APSR_nzcv, fpscr
   1175c:	bge	11738 <getc@plt+0xd14>
   11760:	ldr	r3, [r0, #404]	; 0x194
   11764:	add	r1, r3, r1
   11768:	str	r1, [r0, #404]	; 0x194
   1176c:	bx	lr
   11770:	andeq	r0, r0, r0
   11774:	subsmi	r0, r9, r0
   11778:	ldr	r3, [r0, #404]	; 0x194
   1177c:	cmp	r3, #0
   11780:	bxeq	lr
   11784:	push	{r4, r5, r6, r7, r8, lr}
   11788:	vpush	{d8}
   1178c:	sub	sp, sp, #8
   11790:	mov	r3, r1
   11794:	mov	r6, r0
   11798:	ldr	r1, [pc, #112]	; 11810 <getc@plt+0xdec>
   1179c:	mov	r0, r3
   117a0:	bl	11f34 <error@@Base+0xd4>
   117a4:	mov	r7, r0
   117a8:	sub	r5, r6, #4
   117ac:	mov	r4, #0
   117b0:	ldr	r8, [pc, #92]	; 11814 <getc@plt+0xdf0>
   117b4:	vldr	d8, [pc, #76]	; 11808 <getc@plt+0xde4>
   117b8:	ldr	r3, [r5, #4]!
   117bc:	vmov	s14, r3
   117c0:	vcvt.f64.s32	d7, s14
   117c4:	vmul.f64	d7, d7, d8
   117c8:	vldr	s13, [r6, #404]	; 0x194
   117cc:	vcvt.f64.s32	d6, s13
   117d0:	vdiv.f64	d5, d7, d6
   117d4:	vstr	d5, [sp]
   117d8:	mov	r2, r4
   117dc:	mov	r1, r8
   117e0:	mov	r0, r7
   117e4:	bl	109c4 <fprintf@plt>
   117e8:	add	r4, r4, #1
   117ec:	cmp	r4, #101	; 0x65
   117f0:	bne	117b8 <getc@plt+0xd94>
   117f4:	mov	r0, r7
   117f8:	bl	11d2c <getc@plt+0x1308>
   117fc:	add	sp, sp, #8
   11800:	vpop	{d8}
   11804:	pop	{r4, r5, r6, r7, r8, pc}
   11808:	andeq	r0, r0, r0
   1180c:	subsmi	r0, r9, r0
   11810:	andeq	r2, r1, r8, ror #22
   11814:	andeq	r2, r1, r8, lsr #25
   11818:	ldrb	r3, [r0]
   1181c:	cmp	r3, #0
   11820:	beq	11860 <getc@plt+0xe3c>
   11824:	mov	r2, #0
   11828:	add	r2, r2, r3
   1182c:	ldrb	r3, [r0, #1]!
   11830:	cmp	r3, #0
   11834:	bne	11828 <getc@plt+0xe04>
   11838:	ldr	r0, [pc, #40]	; 11868 <getc@plt+0xe44>
   1183c:	smull	r3, r0, r0, r2
   11840:	add	r3, r0, r2
   11844:	asr	r0, r2, #31
   11848:	rsb	r0, r0, r3, asr #8
   1184c:	rsb	r3, r0, r0, lsl #6
   11850:	rsb	r0, r0, r3, lsl #3
   11854:	sub	r0, r2, r0
   11858:	sxth	r0, r0
   1185c:	bx	lr
   11860:	mov	r2, #0
   11864:	b	11838 <getc@plt+0xe14>
   11868:	subhi	r4, sl, #1552	; 0x610
   1186c:	push	{r4, r5, r6, lr}
   11870:	mov	r6, r0
   11874:	mov	r4, r0
   11878:	add	r5, r0, #8000	; 0x1f40
   1187c:	add	r5, r5, #48	; 0x30
   11880:	mov	r0, r4
   11884:	bl	1287c <error@@Base+0xa1c>
   11888:	add	r4, r4, #16
   1188c:	cmp	r4, r5
   11890:	bne	11880 <getc@plt+0xe5c>
   11894:	add	r6, r6, #4096	; 0x1000
   11898:	mov	r3, #0
   1189c:	str	r3, [r6, #3952]	; 0xf70
   118a0:	str	r3, [r6, #3956]	; 0xf74
   118a4:	pop	{r4, r5, r6, pc}
   118a8:	push	{r4, r5, r6, lr}
   118ac:	mov	r4, r0
   118b0:	mov	r5, r1
   118b4:	mov	r0, r1
   118b8:	bl	11818 <getc@plt+0xdf4>
   118bc:	ldr	r4, [r4, r0, lsl #4]
   118c0:	cmp	r4, #0
   118c4:	beq	118e8 <getc@plt+0xec4>
   118c8:	ldr	r1, [r4, #8]
   118cc:	mov	r0, r5
   118d0:	bl	108c8 <strcmp@plt>
   118d4:	cmp	r0, #0
   118d8:	beq	118e8 <getc@plt+0xec4>
   118dc:	ldr	r4, [r4, #4]
   118e0:	cmp	r4, #0
   118e4:	bne	118c8 <getc@plt+0xea4>
   118e8:	mov	r0, r4
   118ec:	pop	{r4, r5, r6, pc}
   118f0:	push	{r4, r5, r6, lr}
   118f4:	mov	r4, r0
   118f8:	mov	r5, r1
   118fc:	ldr	r0, [r1, #8]
   11900:	bl	11818 <getc@plt+0xdf4>
   11904:	mov	r1, r5
   11908:	add	r0, r4, r0, lsl #4
   1190c:	bl	12894 <error@@Base+0xa34>
   11910:	add	r3, r4, #4096	; 0x1000
   11914:	ldr	r0, [r3, #3952]	; 0xf70
   11918:	cmp	r0, #0
   1191c:	beq	11930 <getc@plt+0xf0c>
   11920:	bl	108e0 <free@plt>
   11924:	add	r3, r4, #4096	; 0x1000
   11928:	mov	r2, #0
   1192c:	str	r2, [r3, #3952]	; 0xf70
   11930:	add	r4, r4, #4096	; 0x1000
   11934:	ldr	r3, [r4, #3956]	; 0xf74
   11938:	add	r3, r3, #1
   1193c:	str	r3, [r4, #3956]	; 0xf74
   11940:	pop	{r4, r5, r6, pc}
   11944:	push	{r4, r5, r6, lr}
   11948:	mov	r4, r0
   1194c:	mov	r5, r1
   11950:	ldr	r0, [r1, #8]
   11954:	bl	11818 <getc@plt+0xdf4>
   11958:	mov	r1, r5
   1195c:	add	r0, r4, r0, lsl #4
   11960:	bl	128f0 <error@@Base+0xa90>
   11964:	add	r3, r4, #4096	; 0x1000
   11968:	ldr	r0, [r3, #3952]	; 0xf70
   1196c:	cmp	r0, #0
   11970:	beq	11984 <getc@plt+0xf60>
   11974:	bl	108e0 <free@plt>
   11978:	add	r3, r4, #4096	; 0x1000
   1197c:	mov	r2, #0
   11980:	str	r2, [r3, #3952]	; 0xf70
   11984:	add	r4, r4, #4096	; 0x1000
   11988:	ldr	r3, [r4, #3956]	; 0xf74
   1198c:	sub	r3, r3, #1
   11990:	str	r3, [r4, #3956]	; 0xf74
   11994:	pop	{r4, r5, r6, pc}
   11998:	add	r3, r0, #4096	; 0x1000
   1199c:	ldr	r3, [r3, #3952]	; 0xf70
   119a0:	cmp	r3, #0
   119a4:	bxne	lr
   119a8:	add	r3, r0, #4096	; 0x1000
   119ac:	ldr	r3, [r3, #3956]	; 0xf74
   119b0:	cmp	r3, #0
   119b4:	bxeq	lr
   119b8:	push	{r4, r5, r6, lr}
   119bc:	mov	r4, r0
   119c0:	mov	r1, #4
   119c4:	mov	r0, r3
   119c8:	bl	11e9c <error@@Base+0x3c>
   119cc:	add	r3, r4, #4096	; 0x1000
   119d0:	str	r0, [r3, #3952]	; 0xf70
   119d4:	mov	r1, #0
   119d8:	mov	lr, r1
   119dc:	mov	ip, r3
   119e0:	ldr	r5, [pc, #64]	; 11a28 <getc@plt+0x1004>
   119e4:	b	119f4 <getc@plt+0xfd0>
   119e8:	add	lr, lr, #1
   119ec:	cmp	lr, r5
   119f0:	beq	11a24 <getc@plt+0x1000>
   119f4:	ldr	r3, [r4, lr, lsl #4]
   119f8:	cmp	r3, #0
   119fc:	beq	119e8 <getc@plt+0xfc4>
   11a00:	lsl	r2, r1, #2
   11a04:	add	r1, r1, #1
   11a08:	ldr	r0, [ip, #3952]	; 0xf70
   11a0c:	str	r3, [r0, r2]
   11a10:	ldr	r3, [r3, #4]
   11a14:	add	r2, r2, #4
   11a18:	cmp	r3, #0
   11a1c:	bne	11a04 <getc@plt+0xfe0>
   11a20:	b	119e8 <getc@plt+0xfc4>
   11a24:	pop	{r4, r5, r6, pc}
   11a28:	strdeq	r0, [r0], -r7
   11a2c:	push	{r4, r5, r6, r7, r8, lr}
   11a30:	mov	r7, r0
   11a34:	mov	r6, r1
   11a38:	mov	r4, r0
   11a3c:	add	r5, r0, #8000	; 0x1f40
   11a40:	add	r5, r5, #48	; 0x30
   11a44:	mov	r1, r6
   11a48:	mov	r0, r4
   11a4c:	bl	129b8 <error@@Base+0xb58>
   11a50:	add	r4, r4, #16
   11a54:	cmp	r4, r5
   11a58:	bne	11a44 <getc@plt+0x1020>
   11a5c:	add	r3, r7, #4096	; 0x1000
   11a60:	ldr	r0, [r3, #3952]	; 0xf70
   11a64:	cmp	r0, #0
   11a68:	beq	11a7c <getc@plt+0x1058>
   11a6c:	bl	108e0 <free@plt>
   11a70:	add	r3, r7, #4096	; 0x1000
   11a74:	mov	r2, #0
   11a78:	str	r2, [r3, #3952]	; 0xf70
   11a7c:	add	r7, r7, #4096	; 0x1000
   11a80:	mov	r3, #0
   11a84:	str	r3, [r7, #3956]	; 0xf74
   11a88:	pop	{r4, r5, r6, r7, r8, pc}
   11a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a90:	sub	sp, sp, #12
   11a94:	ldr	r8, [pc, #204]	; 11b68 <getc@plt+0x1144>
   11a98:	add	fp, r8, #1088	; 0x440
   11a9c:	add	fp, fp, #4
   11aa0:	ldr	sl, [pc, #196]	; 11b6c <getc@plt+0x1148>
   11aa4:	add	r3, sl, #1024	; 0x400
   11aa8:	add	r3, r3, #4
   11aac:	str	r3, [sp, #4]
   11ab0:	b	11afc <getc@plt+0x10d8>
   11ab4:	mov	r4, #0
   11ab8:	cmp	r9, r4
   11abc:	beq	11b38 <getc@plt+0x1114>
   11ac0:	ldr	r2, [r8]
   11ac4:	mov	r3, r2
   11ac8:	ldr	r1, [r8, #4]
   11acc:	cmp	r2, r1
   11ad0:	bhi	11af0 <getc@plt+0x10cc>
   11ad4:	sub	r2, r2, #1
   11ad8:	ldr	r0, [sp, #4]
   11adc:	add	r2, r0, r2
   11ae0:	strb	r4, [r2, #1]!
   11ae4:	add	r3, r3, #1
   11ae8:	cmp	r1, r3
   11aec:	bcs	11ae0 <getc@plt+0x10bc>
   11af0:	add	r8, r8, #12
   11af4:	cmp	r8, fp
   11af8:	beq	11b60 <getc@plt+0x113c>
   11afc:	ldrsh	r9, [sl]
   11b00:	mov	r7, r9
   11b04:	cmp	r9, #0
   11b08:	ble	11ab4 <getc@plt+0x1090>
   11b0c:	ldr	r6, [r8, #8]
   11b10:	mov	r5, sl
   11b14:	mov	r4, #0
   11b18:	ldr	r1, [r5, #4]!
   11b1c:	mov	r0, r6
   11b20:	bl	108c8 <strcmp@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	11ab8 <getc@plt+0x1094>
   11b2c:	add	r4, r4, #1
   11b30:	cmp	r4, r7
   11b34:	bne	11b18 <getc@plt+0x10f4>
   11b38:	cmp	r9, #256	; 0x100
   11b3c:	beq	11b58 <getc@plt+0x1134>
   11b40:	add	r3, r9, #1
   11b44:	strh	r3, [sl]
   11b48:	add	r9, sl, r9, lsl #2
   11b4c:	ldr	r3, [r8, #8]
   11b50:	str	r3, [r9, #4]
   11b54:	b	11ac0 <getc@plt+0x109c>
   11b58:	ldr	r0, [pc, #16]	; 11b70 <getc@plt+0x114c>
   11b5c:	bl	11e60 <error@@Base>
   11b60:	add	sp, sp, #12
   11b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b68:			; <UNDEFINED> instruction: 0x00012cb4
   11b6c:	andeq	r4, r2, r0, lsr #2
   11b70:	strdeq	r3, [r1], -r8
   11b74:	push	{r4, lr}
   11b78:	mov	r4, r0
   11b7c:	ldr	r3, [pc, #32]	; 11ba4 <getc@plt+0x1180>
   11b80:	ldrsh	r3, [r3]
   11b84:	cmp	r3, #0
   11b88:	beq	11b9c <getc@plt+0x1178>
   11b8c:	ldr	r0, [pc, #16]	; 11ba4 <getc@plt+0x1180>
   11b90:	add	r0, r0, r4
   11b94:	ldrb	r0, [r0, #1028]	; 0x404
   11b98:	pop	{r4, pc}
   11b9c:	bl	11a8c <getc@plt+0x1068>
   11ba0:	b	11b8c <getc@plt+0x1168>
   11ba4:	andeq	r4, r2, r0, lsr #2
   11ba8:	push	{r4, lr}
   11bac:	uxtb	r4, r0
   11bb0:	ldr	r3, [pc, #56]	; 11bf0 <getc@plt+0x11cc>
   11bb4:	ldrsh	r3, [r3]
   11bb8:	cmp	r3, #0
   11bbc:	beq	11be0 <getc@plt+0x11bc>
   11bc0:	ldr	r3, [pc, #40]	; 11bf0 <getc@plt+0x11cc>
   11bc4:	ldrsh	r3, [r3]
   11bc8:	cmp	r4, r3
   11bcc:	bge	11be8 <getc@plt+0x11c4>
   11bd0:	ldr	r0, [pc, #24]	; 11bf0 <getc@plt+0x11cc>
   11bd4:	add	r0, r0, r4, lsl #2
   11bd8:	ldr	r0, [r0, #4]
   11bdc:	pop	{r4, pc}
   11be0:	bl	11a8c <getc@plt+0x1068>
   11be4:	b	11bc0 <getc@plt+0x119c>
   11be8:	ldr	r0, [pc, #4]	; 11bf4 <getc@plt+0x11d0>
   11bec:	bl	11e60 <error@@Base>
   11bf0:	andeq	r4, r2, r0, lsr #2
   11bf4:	andeq	r3, r1, r4, lsl r1
   11bf8:	push	{r4, r5, lr}
   11bfc:	sub	sp, sp, #116	; 0x74
   11c00:	mov	r5, r0
   11c04:	ldr	r3, [pc, #44]	; 11c38 <getc@plt+0x1214>
   11c08:	ldr	r4, [r3]
   11c0c:	bl	10994 <getpid@plt>
   11c10:	str	r5, [sp]
   11c14:	mov	r3, r0
   11c18:	mov	r2, r4
   11c1c:	ldr	r1, [pc, #24]	; 11c3c <getc@plt+0x1218>
   11c20:	add	r0, sp, #12
   11c24:	bl	109e8 <sprintf@plt>
   11c28:	add	r0, sp, #12
   11c2c:	bl	10910 <strdup@plt>
   11c30:	add	sp, sp, #116	; 0x74
   11c34:	pop	{r4, r5, pc}
   11c38:	addseq	r6, fp, r0, lsl #29
   11c3c:	andeq	r3, r1, r4, ror #14
   11c40:	push	{r7, lr}
   11c44:	mov	r7, r0
   11c48:	ldr	r3, [pc, #88]	; 11ca8 <getc@plt+0x1284>
   11c4c:	ldr	r3, [r3]
   11c50:	cmp	r3, #0
   11c54:	beq	11c5c <getc@plt+0x1238>
   11c58:	blx	r3
   11c5c:	ldr	r3, [pc, #72]	; 11cac <getc@plt+0x1288>
   11c60:	ldrsh	r3, [r3]
   11c64:	cmp	r3, #0
   11c68:	ble	11ca0 <getc@plt+0x127c>
   11c6c:	mov	r4, #1
   11c70:	ldr	r6, [pc, #52]	; 11cac <getc@plt+0x1288>
   11c74:	mov	r0, r4
   11c78:	bl	11bf8 <getc@plt+0x11d4>
   11c7c:	mov	r5, r0
   11c80:	bl	10928 <unlink@plt>
   11c84:	mov	r0, r5
   11c88:	bl	108e0 <free@plt>
   11c8c:	add	r4, r4, #1
   11c90:	sxth	r4, r4
   11c94:	ldrsh	r3, [r6]
   11c98:	cmp	r3, r4
   11c9c:	bge	11c74 <getc@plt+0x1250>
   11ca0:	mov	r0, r7
   11ca4:	bl	109a0 <exit@plt>
   11ca8:	addseq	r6, fp, r4, lsl #29
   11cac:	andseq	r4, r3, r4, lsr #10
   11cb0:	push	{r4, lr}
   11cb4:	ldrb	r3, [r0]
   11cb8:	cmp	r3, #0
   11cbc:	beq	11d08 <getc@plt+0x12e4>
   11cc0:	ldrb	r2, [r1]
   11cc4:	cmp	r2, r3
   11cc8:	bne	11d24 <getc@plt+0x1300>
   11ccc:	mov	ip, r1
   11cd0:	mov	r2, #0
   11cd4:	add	r2, r2, #1
   11cd8:	mov	r4, r2
   11cdc:	ldrb	r3, [r0, #1]!
   11ce0:	cmp	r3, #0
   11ce4:	beq	11d0c <getc@plt+0x12e8>
   11ce8:	ldrb	lr, [ip, #1]!
   11cec:	cmp	lr, r3
   11cf0:	beq	11cd4 <getc@plt+0x12b0>
   11cf4:	ldrb	r2, [r1, r4]
   11cf8:	cmp	r2, r3
   11cfc:	mvnhi	r0, #0
   11d00:	movls	r0, #1
   11d04:	pop	{r4, pc}
   11d08:	mov	r4, #0
   11d0c:	ldrb	r3, [r1, r4]
   11d10:	cmp	r3, #0
   11d14:	movne	r3, #0
   11d18:	bne	11cf4 <getc@plt+0x12d0>
   11d1c:	mov	r0, #0
   11d20:	pop	{r4, pc}
   11d24:	mov	r4, #0
   11d28:	b	11cf4 <getc@plt+0x12d0>
   11d2c:	ldr	r3, [pc, #36]	; 11d58 <getc@plt+0x1334>
   11d30:	ldr	r3, [r3]
   11d34:	cmp	r3, r0
   11d38:	bxeq	lr
   11d3c:	ldr	r3, [pc, #24]	; 11d5c <getc@plt+0x1338>
   11d40:	ldr	r3, [r3]
   11d44:	cmp	r0, r3
   11d48:	bxeq	lr
   11d4c:	push	{r4, lr}
   11d50:	bl	109dc <fclose@plt>
   11d54:	pop	{r4, pc}
   11d58:	andeq	r4, r2, r8, lsr #1
   11d5c:	andeq	r4, r2, ip, lsr #1
   11d60:	push	{lr}		; (str lr, [sp, #-4]!)
   11d64:	sub	sp, sp, #92	; 0x5c
   11d68:	mov	r2, sp
   11d6c:	mov	r1, r0
   11d70:	mov	r0, #3
   11d74:	bl	10940 <__xstat@plt>
   11d78:	clz	r0, r0
   11d7c:	lsr	r0, r0, #5
   11d80:	add	sp, sp, #92	; 0x5c
   11d84:	pop	{pc}		; (ldr pc, [sp], #4)
   11d88:	push	{r4, lr}
   11d8c:	ldr	r3, [pc, #32]	; 11db4 <getc@plt+0x1390>
   11d90:	ldrh	r0, [r3]
   11d94:	add	r0, r0, #1
   11d98:	sxth	r0, r0
   11d9c:	strh	r0, [r3]
   11da0:	bl	11bf8 <getc@plt+0x11d4>
   11da4:	mov	r4, r0
   11da8:	bl	10928 <unlink@plt>
   11dac:	mov	r0, r4
   11db0:	pop	{r4, pc}
   11db4:	andseq	r4, r3, r4, lsr #10
   11db8:	push	{r4, lr}
   11dbc:	mov	r4, r0
   11dc0:	bl	109b8 <strlen@plt>
   11dc4:	sub	r0, r0, #1
   11dc8:	sxth	r0, r0
   11dcc:	cmp	r0, #0
   11dd0:	blt	11dfc <getc@plt+0x13d8>
   11dd4:	ldrb	r3, [r4, r0]
   11dd8:	cmp	r3, #47	; 0x2f
   11ddc:	beq	11dfc <getc@plt+0x13d8>
   11de0:	sub	r0, r0, #1
   11de4:	sxth	r0, r0
   11de8:	cmp	r0, #0
   11dec:	blt	11dfc <getc@plt+0x13d8>
   11df0:	ldrb	r3, [r4, r0]
   11df4:	cmp	r3, #47	; 0x2f
   11df8:	bne	11de0 <getc@plt+0x13bc>
   11dfc:	add	r0, r0, #1
   11e00:	add	r0, r4, r0
   11e04:	pop	{r4, pc}
   11e08:	push	{r4, lr}
   11e0c:	mov	r0, #0
   11e10:	bl	11c40 <getc@plt+0x121c>
   11e14:	push	{r4, lr}
   11e18:	ldr	r2, [pc, #48]	; 11e50 <getc@plt+0x142c>
   11e1c:	ldr	r2, [r2]
   11e20:	cmp	r2, #0
   11e24:	beq	11e30 <getc@plt+0x140c>
   11e28:	blx	r2
   11e2c:	bl	11e08 <getc@plt+0x13e4>
   11e30:	mov	r3, r0
   11e34:	ldr	r2, [pc, #24]	; 11e54 <getc@plt+0x1430>
   11e38:	ldr	r2, [r2]
   11e3c:	ldr	r1, [pc, #20]	; 11e58 <getc@plt+0x1434>
   11e40:	ldr	r0, [pc, #20]	; 11e5c <getc@plt+0x1438>
   11e44:	ldr	r0, [r0]
   11e48:	bl	109c4 <fprintf@plt>
   11e4c:	b	11e2c <getc@plt+0x1408>
   11e50:	addseq	r6, fp, ip, ror lr
   11e54:	addseq	r6, fp, r0, lsl #29
   11e58:	andeq	r3, r1, r4, ror r7
   11e5c:	andeq	r4, r2, r0, lsr #1

00011e60 <error@@Base>:
   11e60:	push	{r4, lr}
   11e64:	mov	r3, r0
   11e68:	ldr	r2, [pc, #28]	; 11e8c <error@@Base+0x2c>
   11e6c:	ldr	r2, [r2]
   11e70:	ldr	r1, [pc, #24]	; 11e90 <error@@Base+0x30>
   11e74:	ldr	r0, [pc, #24]	; 11e94 <error@@Base+0x34>
   11e78:	ldr	r0, [r0]
   11e7c:	bl	109c4 <fprintf@plt>
   11e80:	ldr	r3, [pc, #16]	; 11e98 <error@@Base+0x38>
   11e84:	ldr	r0, [r3]
   11e88:	bl	11c40 <getc@plt+0x121c>
   11e8c:	addseq	r6, fp, r0, lsl #29
   11e90:	andeq	r3, r1, r4, lsl #15
   11e94:	andeq	r4, r2, r0, lsr #1
   11e98:	muleq	r2, r4, r0
   11e9c:	push	{r4, lr}
   11ea0:	bl	108bc <calloc@plt>
   11ea4:	cmp	r0, #0
   11ea8:	popne	{r4, pc}
   11eac:	ldr	r0, [pc]	; 11eb4 <error@@Base+0x54>
   11eb0:	bl	11e60 <error@@Base>
   11eb4:	andeq	r3, r1, ip, lsl #15
   11eb8:	ldr	r3, [pc, #36]	; 11ee4 <error@@Base+0x84>
   11ebc:	ldrb	r3, [r3, #2]
   11ec0:	cmp	r3, #0
   11ec4:	beq	11ecc <error@@Base+0x6c>
   11ec8:	bx	lr
   11ecc:	push	{r4, lr}
   11ed0:	mov	r2, #1
   11ed4:	ldr	r3, [pc, #8]	; 11ee4 <error@@Base+0x84>
   11ed8:	strb	r2, [r3, #2]
   11edc:	ldr	r0, [pc, #4]	; 11ee8 <error@@Base+0x88>
   11ee0:	bl	11e60 <error@@Base>
   11ee4:	andseq	r4, r3, r4, lsr #10
   11ee8:	andeq	r3, r1, r8, lsr #15
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	sub	sp, sp, #12
   11ef4:	ldr	r3, [pc, #40]	; 11f24 <error@@Base+0xc4>
   11ef8:	ldr	r2, [r3]
   11efc:	ldr	r3, [pc, #36]	; 11f28 <error@@Base+0xc8>
   11f00:	ldr	ip, [r3]
   11f04:	str	r1, [sp]
   11f08:	mov	r3, r0
   11f0c:	ldr	r1, [pc, #24]	; 11f2c <error@@Base+0xcc>
   11f10:	mov	r0, ip
   11f14:	bl	109c4 <fprintf@plt>
   11f18:	ldr	r3, [pc, #16]	; 11f30 <error@@Base+0xd0>
   11f1c:	ldr	r0, [r3]
   11f20:	bl	11c40 <getc@plt+0x121c>
   11f24:	addseq	r6, fp, r0, lsl #29
   11f28:	andeq	r4, r2, r0, lsr #1
   11f2c:			; <UNDEFINED> instruction: 0x000137b8
   11f30:	muleq	r2, r4, r0
   11f34:	push	{r4, r5, r6, lr}
   11f38:	subs	r5, r0, #0
   11f3c:	beq	11f6c <error@@Base+0x10c>
   11f40:	mov	r4, r1
   11f44:	mov	r0, r5
   11f48:	bl	108d4 <fopen@plt>
   11f4c:	cmp	r0, #0
   11f50:	popne	{r4, r5, r6, pc}
   11f54:	ldrb	r3, [r4]
   11f58:	cmp	r3, #119	; 0x77
   11f5c:	beq	11f84 <error@@Base+0x124>
   11f60:	mov	r1, r5
   11f64:	ldr	r0, [pc, #36]	; 11f90 <error@@Base+0x130>
   11f68:	bl	11eec <error@@Base+0x8c>
   11f6c:	ldrb	r3, [r1]
   11f70:	cmp	r3, #114	; 0x72
   11f74:	ldreq	r3, [pc, #24]	; 11f94 <error@@Base+0x134>
   11f78:	ldrne	r3, [pc, #24]	; 11f98 <error@@Base+0x138>
   11f7c:	ldr	r0, [r3]
   11f80:	pop	{r4, r5, r6, pc}
   11f84:	mov	r1, r5
   11f88:	ldr	r0, [pc, #12]	; 11f9c <error@@Base+0x13c>
   11f8c:	bl	11eec <error@@Base+0x8c>
   11f90:	andeq	r3, r1, r0, ror #15
   11f94:	andeq	r4, r2, r8, lsr #1
   11f98:	andeq	r4, r2, ip, lsr #1
   11f9c:	andeq	r3, r1, r8, asr #15
   11fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fa4:	sub	sp, sp, #20
   11fa8:	mov	r5, r0
   11fac:	str	r0, [sp, #8]
   11fb0:	mov	sl, r1
   11fb4:	str	r2, [sp, #12]
   11fb8:	mov	r6, r3
   11fbc:	ldr	r0, [r1]
   11fc0:	bl	11db8 <getc@plt+0x1394>
   11fc4:	ldr	r3, [pc, #468]	; 121a0 <error@@Base+0x340>
   11fc8:	str	r0, [r3]
   11fcc:	ldr	r4, [pc, #464]	; 121a4 <error@@Base+0x344>
   11fd0:	mov	r1, r4
   11fd4:	mov	r0, #2
   11fd8:	bl	1097c <__sysv_signal@plt>
   11fdc:	mov	r1, r4
   11fe0:	mov	r0, #15
   11fe4:	bl	1097c <__sysv_signal@plt>
   11fe8:	ldr	r8, [r5]
   11fec:	cmp	r8, #1
   11ff0:	beq	12010 <error@@Base+0x1b0>
   11ff4:	movle	r7, #0
   11ff8:	ble	12024 <error@@Base+0x1c4>
   11ffc:	mov	r7, #0
   12000:	mov	r3, #1
   12004:	str	r3, [sp, #4]
   12008:	mov	r4, r3
   1200c:	b	120bc <error@@Base+0x25c>
   12010:	ldr	r3, [pc, #400]	; 121a8 <error@@Base+0x348>
   12014:	ldrb	r3, [r3, #4]
   12018:	cmp	r3, #0
   1201c:	moveq	r7, #0
   12020:	bne	12034 <error@@Base+0x1d4>
   12024:	ldr	r3, [sp, #8]
   12028:	str	r7, [r3]
   1202c:	add	sp, sp, #20
   12030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12034:	ldr	r0, [sp, #12]
   12038:	bl	11e14 <getc@plt+0x13f0>
   1203c:	ldr	r0, [sp, #12]
   12040:	bl	11e14 <getc@plt+0x13f0>
   12044:	mov	r1, r6
   12048:	b	12150 <error@@Base+0x2f0>
   1204c:	ldr	r3, [r1, #8]
   12050:	cmp	r3, #0
   12054:	beq	1207c <error@@Base+0x21c>
   12058:	ldrb	r2, [r5, #2]
   1205c:	cmp	r2, #0
   12060:	bne	1207c <error@@Base+0x21c>
   12064:	ldrb	r2, [r3]
   12068:	cmp	r2, #0
   1206c:	bne	12088 <error@@Base+0x228>
   12070:	mov	r2, #1
   12074:	strb	r2, [r3]
   12078:	b	120a0 <error@@Base+0x240>
   1207c:	mov	r1, r5
   12080:	ldr	r0, [pc, #292]	; 121ac <error@@Base+0x34c>
   12084:	bl	11eec <error@@Base+0x8c>
   12088:	mov	r1, r5
   1208c:	ldr	r0, [pc, #284]	; 121b0 <error@@Base+0x350>
   12090:	bl	11eec <error@@Base+0x8c>
   12094:	add	r3, r7, #1
   12098:	str	r5, [sl, r7, lsl #2]
   1209c:	sxth	r7, r3
   120a0:	add	r4, r4, #1
   120a4:	sxth	r4, r4
   120a8:	str	r4, [sp, #4]
   120ac:	ldr	r3, [sp, #8]
   120b0:	ldr	r8, [r3]
   120b4:	cmp	r4, r8
   120b8:	bge	12024 <error@@Base+0x1c4>
   120bc:	lsl	fp, r4, #2
   120c0:	ldr	r5, [sl, r4, lsl #2]
   120c4:	ldrb	r3, [r5]
   120c8:	cmp	r3, #45	; 0x2d
   120cc:	bne	12094 <error@@Base+0x234>
   120d0:	ldrb	r9, [r5, #1]
   120d4:	cmp	r9, #0
   120d8:	beq	12094 <error@@Base+0x234>
   120dc:	mov	r0, r5
   120e0:	bl	109b8 <strlen@plt>
   120e4:	mov	r2, r0
   120e8:	mov	r1, r5
   120ec:	ldr	r0, [pc, #192]	; 121b4 <error@@Base+0x354>
   120f0:	bl	10a0c <strncmp@plt>
   120f4:	cmp	r0, #0
   120f8:	beq	1203c <error@@Base+0x1dc>
   120fc:	ldr	r3, [sp, #4]
   12100:	add	r3, r3, #1
   12104:	cmp	r3, r8
   12108:	addlt	r3, sl, fp
   1210c:	ldrlt	r0, [r3, #4]
   12110:	movge	r0, #0
   12114:	cmp	r6, #0
   12118:	beq	1207c <error@@Base+0x21c>
   1211c:	ldrb	r2, [r6]
   12120:	cmp	r9, r2
   12124:	cmpne	r2, #0
   12128:	beq	12044 <error@@Base+0x1e4>
   1212c:	mov	r3, #0
   12130:	add	r3, r3, #1
   12134:	sxth	r3, r3
   12138:	add	r2, r3, r3, lsl #1
   1213c:	add	r1, r6, r2, lsl #2
   12140:	ldrb	r2, [r6, r2, lsl #2]
   12144:	cmp	r9, r2
   12148:	cmpne	r2, #0
   1214c:	bne	12130 <error@@Base+0x2d0>
   12150:	cmp	r2, #0
   12154:	beq	1207c <error@@Base+0x21c>
   12158:	ldr	r3, [r1, #4]
   1215c:	cmp	r3, #0
   12160:	beq	1204c <error@@Base+0x1ec>
   12164:	ldrb	r2, [r5, #2]
   12168:	cmp	r2, #0
   1216c:	cmpeq	r0, #0
   12170:	beq	1204c <error@@Base+0x1ec>
   12174:	ldr	r1, [r3]
   12178:	cmp	r1, #0
   1217c:	bne	12088 <error@@Base+0x228>
   12180:	cmp	r2, #0
   12184:	addne	r0, r5, #2
   12188:	str	r0, [r3]
   1218c:	ldrb	r3, [r5, #2]
   12190:	cmp	r3, #0
   12194:	addeq	r4, r4, #1
   12198:	sxtheq	r4, r4
   1219c:	b	120a0 <error@@Base+0x240>
   121a0:	addseq	r6, fp, r0, lsl #29
   121a4:			; <UNDEFINED> instruction: 0x00011eb8
   121a8:	muleq	r2, r4, r0
   121ac:	strdeq	r3, [r1], -ip
   121b0:	andeq	r3, r1, ip, lsl #16
   121b4:	strdeq	r3, [r1], -r4
   121b8:	push	{lr}		; (str lr, [sp, #-4]!)
   121bc:	sub	sp, sp, #12
   121c0:	ldr	r3, [pc, #36]	; 121ec <error@@Base+0x38c>
   121c4:	ldr	r2, [r3]
   121c8:	ldr	r3, [pc, #32]	; 121f0 <error@@Base+0x390>
   121cc:	ldr	ip, [r3]
   121d0:	str	r1, [sp]
   121d4:	mov	r3, r0
   121d8:	ldr	r1, [pc, #20]	; 121f4 <error@@Base+0x394>
   121dc:	mov	r0, ip
   121e0:	bl	109c4 <fprintf@plt>
   121e4:	add	sp, sp, #12
   121e8:	pop	{pc}		; (ldr pc, [sp], #4)
   121ec:	addseq	r6, fp, r0, lsl #29
   121f0:	andeq	r4, r2, r0, lsr #1
   121f4:			; <UNDEFINED> instruction: 0x000137b8
   121f8:	push	{r4, r5, r6, lr}
   121fc:	mov	r4, r0
   12200:	mov	r5, r2
   12204:	uxtb	r6, r1
   12208:	mov	r1, #16
   1220c:	mov	r0, #1
   12210:	bl	11e9c <error@@Base+0x3c>
   12214:	mov	r1, r0
   12218:	strb	r6, [r0, #8]
   1221c:	str	r5, [r0, #12]
   12220:	mov	r0, r4
   12224:	bl	128ac <error@@Base+0xa4c>
   12228:	pop	{r4, r5, r6, pc}
   1222c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12230:	sub	sp, sp, #116	; 0x74
   12234:	str	r0, [sp]
   12238:	mov	sl, r2
   1223c:	ldrb	r3, [r2]
   12240:	mov	r0, r1
   12244:	adds	r2, r3, #0
   12248:	movne	r2, #1
   1224c:	cmp	r1, #0
   12250:	movne	r2, #0
   12254:	cmp	r2, #0
   12258:	bne	122bc <error@@Base+0x45c>
   1225c:	ldr	r3, [sp]
   12260:	ldr	r3, [r3, #4]
   12264:	str	r3, [sp, #4]
   12268:	ldr	r1, [pc, #820]	; 125a4 <error@@Base+0x744>
   1226c:	bl	11f34 <error@@Base+0xd4>
   12270:	mov	r6, r0
   12274:	ldrb	r3, [sl]
   12278:	cmp	r3, #0
   1227c:	bne	122c8 <error@@Base+0x468>
   12280:	ldrb	r8, [sl, #1]
   12284:	ldr	fp, [sl, #4]
   12288:	cmp	fp, #0
   1228c:	moveq	fp, #94	; 0x5e
   12290:	mov	r0, r6
   12294:	bl	10a24 <getc@plt>
   12298:	cmn	r0, #1
   1229c:	beq	12408 <error@@Base+0x5a8>
   122a0:	ldr	r3, [pc, #768]	; 125a8 <error@@Base+0x748>
   122a4:	ldrsb	r4, [r3, r0]
   122a8:	cmp	r4, #0
   122ac:	ble	12360 <error@@Base+0x500>
   122b0:	mov	r7, #0
   122b4:	mov	r9, r3
   122b8:	b	123a8 <error@@Base+0x548>
   122bc:	ldr	r1, [pc, #744]	; 125ac <error@@Base+0x74c>
   122c0:	ldr	r0, [pc, #744]	; 125b0 <error@@Base+0x750>
   122c4:	bl	11eec <error@@Base+0x8c>
   122c8:	mov	r2, r0
   122cc:	mov	r1, #99	; 0x63
   122d0:	add	r0, sp, #12
   122d4:	bl	108f8 <fgets@plt>
   122d8:	cmp	r0, #0
   122dc:	beq	122f8 <error@@Base+0x498>
   122e0:	mov	r2, #51	; 0x33
   122e4:	ldr	r1, [pc, #712]	; 125b4 <error@@Base+0x754>
   122e8:	add	r0, sp, #12
   122ec:	bl	10a0c <strncmp@plt>
   122f0:	cmp	r0, #0
   122f4:	beq	1230c <error@@Base+0x4ac>
   122f8:	mov	r0, r6
   122fc:	bl	1091c <rewind@plt>
   12300:	mov	r3, #0
   12304:	strb	r3, [sl, #11]
   12308:	b	12280 <error@@Base+0x420>
   1230c:	mov	r4, #0
   12310:	mov	r5, #99	; 0x63
   12314:	ldr	r7, [pc, #668]	; 125b8 <error@@Base+0x758>
   12318:	mov	r2, r6
   1231c:	mov	r1, r5
   12320:	add	r0, sp, #12
   12324:	bl	108f8 <fgets@plt>
   12328:	cmp	r0, #0
   1232c:	beq	12358 <error@@Base+0x4f8>
   12330:	mov	r1, r7
   12334:	add	r0, sp, #12
   12338:	bl	108c8 <strcmp@plt>
   1233c:	cmp	r0, #0
   12340:	addeq	r4, r4, #1
   12344:	sxtheq	r4, r4
   12348:	cmp	r4, #1
   1234c:	ble	12318 <error@@Base+0x4b8>
   12350:	mov	r3, #1
   12354:	b	12304 <error@@Base+0x4a4>
   12358:	mov	r3, #1
   1235c:	b	12304 <error@@Base+0x4a4>
   12360:	ldr	r0, [pc, #596]	; 125bc <error@@Base+0x75c>
   12364:	bl	11e60 <error@@Base>
   12368:	ldr	r0, [pc, #592]	; 125c0 <error@@Base+0x760>
   1236c:	bl	11e60 <error@@Base>
   12370:	bl	109f4 <utf8proc_errmsg@plt>
   12374:	bl	11e60 <error@@Base>
   12378:	ldr	r2, [sp, #12]
   1237c:	mov	r1, r7
   12380:	ldr	r0, [sp]
   12384:	bl	121f8 <error@@Base+0x398>
   12388:	mov	r7, #0
   1238c:	mov	r0, r6
   12390:	bl	10a24 <getc@plt>
   12394:	cmn	r0, #1
   12398:	beq	12408 <error@@Base+0x5a8>
   1239c:	ldrsb	r4, [r9, r0]
   123a0:	cmp	r4, #0
   123a4:	ble	12360 <error@@Base+0x500>
   123a8:	strb	r0, [sp, #8]
   123ac:	cmp	r4, #1
   123b0:	ble	123d4 <error@@Base+0x574>
   123b4:	sub	r5, r4, #1
   123b8:	mov	r3, r6
   123bc:	mov	r2, r5
   123c0:	mov	r1, #1
   123c4:	add	r0, sp, #9
   123c8:	bl	10958 <fread@plt>
   123cc:	cmp	r5, r0
   123d0:	bne	12368 <error@@Base+0x508>
   123d4:	add	r2, sp, #12
   123d8:	mov	r1, #4
   123dc:	add	r0, sp, #8
   123e0:	bl	10964 <utf8proc_iterate@plt>
   123e4:	cmp	r0, r4
   123e8:	bne	12370 <error@@Base+0x510>
   123ec:	cmp	r8, #0
   123f0:	beq	12378 <error@@Base+0x518>
   123f4:	ldr	r3, [sp, #12]
   123f8:	cmp	fp, r3
   123fc:	moveq	r7, #1
   12400:	bne	12378 <error@@Base+0x518>
   12404:	b	1238c <error@@Base+0x52c>
   12408:	mov	r0, r6
   1240c:	bl	11d2c <getc@plt+0x1308>
   12410:	ldrb	r3, [sl, #9]
   12414:	cmp	r3, #0
   12418:	beq	1255c <error@@Base+0x6fc>
   1241c:	ldr	r3, [sp, #4]
   12420:	cmp	r3, #0
   12424:	ldrne	r6, [r3, #4]
   12428:	ldreq	r3, [sp]
   1242c:	ldreq	r6, [r3]
   12430:	cmp	r6, #0
   12434:	beq	1255c <error@@Base+0x6fc>
   12438:	mov	r5, r6
   1243c:	mov	r7, #32
   12440:	mov	r9, #1
   12444:	mov	r8, #0
   12448:	b	1247c <error@@Base+0x61c>
   1244c:	cmp	r4, #160	; 0xa0
   12450:	beq	1246c <error@@Base+0x60c>
   12454:	ldrsh	r3, [r0]
   12458:	sub	r3, r3, #23
   1245c:	cmp	r3, #2
   12460:	bhi	12470 <error@@Base+0x610>
   12464:	mov	r3, r9
   12468:	b	124ac <error@@Base+0x64c>
   1246c:	str	r7, [r5, #12]
   12470:	ldr	r5, [r5, #4]
   12474:	cmp	r5, #0
   12478:	beq	124f0 <error@@Base+0x690>
   1247c:	ldr	r4, [r5, #12]
   12480:	mov	r0, r4
   12484:	bl	108ec <utf8proc_get_property@plt>
   12488:	cmp	r4, #13
   1248c:	bhi	1244c <error@@Base+0x5ec>
   12490:	cmp	r4, #11
   12494:	bcs	1246c <error@@Base+0x60c>
   12498:	cmp	r4, #9
   1249c:	beq	1246c <error@@Base+0x60c>
   124a0:	cmp	r4, #10
   124a4:	moveq	r3, r8
   124a8:	bne	12454 <error@@Base+0x5f4>
   124ac:	cmp	r3, #0
   124b0:	beq	12470 <error@@Base+0x610>
   124b4:	b	1246c <error@@Base+0x60c>
   124b8:	eor	r2, r5, #1
   124bc:	cmp	r4, #0
   124c0:	orreq	r2, r2, #1
   124c4:	cmp	r2, #0
   124c8:	bne	12518 <error@@Base+0x6b8>
   124cc:	ldr	r2, [r4, #12]
   124d0:	cmp	r2, #32
   124d4:	cmpne	r2, #10
   124d8:	beq	12518 <error@@Base+0x6b8>
   124dc:	subs	r5, r3, #10
   124e0:	movne	r5, #1
   124e4:	mov	r6, r4
   124e8:	cmp	r4, #0
   124ec:	beq	1255c <error@@Base+0x6fc>
   124f0:	ldr	r4, [r6, #4]
   124f4:	ldr	r3, [r6, #12]
   124f8:	cmp	r3, #32
   124fc:	beq	124b8 <error@@Base+0x658>
   12500:	eor	r2, r5, #1
   12504:	cmp	r3, #10
   12508:	movne	r2, #0
   1250c:	andeq	r2, r2, #1
   12510:	cmp	r2, #0
   12514:	beq	124dc <error@@Base+0x67c>
   12518:	cmp	r4, #0
   1251c:	moveq	r3, #0
   12520:	andne	r3, r5, #1
   12524:	cmp	r3, #0
   12528:	beq	12544 <error@@Base+0x6e4>
   1252c:	ldr	r3, [r4, #12]
   12530:	cmp	r3, #32
   12534:	ldrbeq	r3, [r4, #8]
   12538:	ldrbeq	r2, [r6, #8]
   1253c:	orreq	r3, r3, r2
   12540:	strbeq	r3, [r4, #8]
   12544:	mov	r1, r6
   12548:	ldr	r0, [sp]
   1254c:	bl	128f0 <error@@Base+0xa90>
   12550:	mov	r0, r6
   12554:	bl	108e0 <free@plt>
   12558:	b	124e4 <error@@Base+0x684>
   1255c:	ldrb	r3, [sl, #10]
   12560:	cmp	r3, #0
   12564:	beq	1259c <error@@Base+0x73c>
   12568:	ldr	r3, [sp, #4]
   1256c:	cmp	r3, #0
   12570:	ldrne	r4, [r3, #4]
   12574:	ldreq	r3, [sp]
   12578:	ldreq	r4, [r3]
   1257c:	cmp	r4, #0
   12580:	beq	1259c <error@@Base+0x73c>
   12584:	ldr	r0, [r4, #12]
   12588:	bl	10934 <utf8proc_tolower@plt>
   1258c:	str	r0, [r4, #12]
   12590:	ldr	r4, [r4, #4]
   12594:	cmp	r4, #0
   12598:	bne	12584 <error@@Base+0x724>
   1259c:	add	sp, sp, #116	; 0x74
   125a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125a4:	strdeq	r2, [r1], -r4
   125a8:	andeq	r3, r2, r8, lsl #28
   125ac:	andeq	r3, r1, r0, lsr #16
   125b0:	andeq	r3, r1, ip, lsr #16
   125b4:	andeq	r3, r1, ip, lsr r8
   125b8:	andeq	r3, r1, r4, ror r8
   125bc:	andeq	r3, r1, ip, lsr #17
   125c0:	andeq	r3, r1, r4, asr #17
   125c4:	push	{r4, lr}
   125c8:	bl	10904 <utf8proc_encode_char@plt>
   125cc:	cmp	r0, #0
   125d0:	ble	125dc <error@@Base+0x77c>
   125d4:	sxtb	r0, r0
   125d8:	pop	{r4, pc}
   125dc:	ldr	r0, [pc]	; 125e4 <error@@Base+0x784>
   125e0:	bl	11e60 <error@@Base>
   125e4:	ldrdeq	r3, [r1], -ip
   125e8:	push	{r4, r5, r6, r7, r8, lr}
   125ec:	mov	r4, r1
   125f0:	mov	r6, r2
   125f4:	uxtb	r0, r0
   125f8:	uxtb	r7, r3
   125fc:	cmp	r0, #0
   12600:	moveq	r5, #0
   12604:	bne	12658 <error@@Base+0x7f8>
   12608:	cmp	r4, #10
   1260c:	beq	1266c <error@@Base+0x80c>
   12610:	mov	r0, r4
   12614:	bl	108ec <utf8proc_get_property@plt>
   12618:	cmp	r4, #32
   1261c:	beq	12688 <error@@Base+0x828>
   12620:	ldrsh	r3, [r0]
   12624:	cmp	r3, #1
   12628:	blt	1263c <error@@Base+0x7dc>
   1262c:	cmp	r3, #22
   12630:	ble	12688 <error@@Base+0x828>
   12634:	cmp	r3, #29
   12638:	beq	12688 <error@@Base+0x828>
   1263c:	cmp	r4, #255	; 0xff
   12640:	mov	r2, r4
   12644:	ldrls	r1, [pc, #136]	; 126d4 <error@@Base+0x874>
   12648:	ldrhi	r1, [pc, #136]	; 126d8 <error@@Base+0x878>
   1264c:	add	r0, r6, r5
   12650:	bl	109e8 <sprintf@plt>
   12654:	pop	{r4, r5, r6, r7, r8, pc}
   12658:	mov	r1, r2
   1265c:	mov	r0, #94	; 0x5e
   12660:	bl	125c4 <error@@Base+0x764>
   12664:	sxth	r5, r0
   12668:	b	12608 <error@@Base+0x7a8>
   1266c:	ldr	r3, [pc, #104]	; 126dc <error@@Base+0x87c>
   12670:	ldr	r1, [pc, #104]	; 126e0 <error@@Base+0x880>
   12674:	cmp	r7, #0
   12678:	moveq	r1, r3
   1267c:	add	r0, r6, r5
   12680:	bl	109e8 <sprintf@plt>
   12684:	pop	{r4, r5, r6, r7, r8, pc}
   12688:	mov	r0, r4
   1268c:	bl	109ac <utf8proc_category@plt>
   12690:	sub	r0, r0, #6
   12694:	cmp	r0, #2
   12698:	bls	126bc <error@@Base+0x85c>
   1269c:	add	r1, r6, r5
   126a0:	mov	r0, r4
   126a4:	bl	125c4 <error@@Base+0x764>
   126a8:	add	r0, r0, r5
   126ac:	sxth	r0, r0
   126b0:	mov	r3, #0
   126b4:	strb	r3, [r6, r0]
   126b8:	pop	{r4, r5, r6, r7, r8, pc}
   126bc:	add	r1, r6, r5
   126c0:	ldr	r0, [pc, #28]	; 126e4 <error@@Base+0x884>
   126c4:	bl	125c4 <error@@Base+0x764>
   126c8:	add	r5, r0, r5
   126cc:	sxth	r5, r5
   126d0:	b	1269c <error@@Base+0x83c>
   126d4:	strdeq	r3, [r1], -ip
   126d8:	andeq	r3, r1, r4, lsl #18
   126dc:			; <UNDEFINED> instruction: 0x00012abc
   126e0:	strdeq	r3, [r1], -r4
   126e4:	andeq	r2, r0, ip, asr #11
   126e8:	push	{r4, r5, r6, r7, lr}
   126ec:	sub	sp, sp, #20
   126f0:	mov	r7, r0
   126f4:	mov	r0, r1
   126f8:	mov	r4, r2
   126fc:	ldr	r1, [pc, #160]	; 127a4 <error@@Base+0x944>
   12700:	bl	11f34 <error@@Base+0xd4>
   12704:	mov	r5, r0
   12708:	cmp	r4, #0
   1270c:	beq	12758 <error@@Base+0x8f8>
   12710:	mov	r3, r0
   12714:	mov	r2, #55	; 0x37
   12718:	mov	r1, #1
   1271c:	ldr	r0, [pc, #132]	; 127a8 <error@@Base+0x948>
   12720:	bl	1094c <fwrite@plt>
   12724:	ldr	r6, [pc, #128]	; 127ac <error@@Base+0x94c>
   12728:	mov	r3, r5
   1272c:	mov	r2, #55	; 0x37
   12730:	mov	r1, #1
   12734:	mov	r0, r6
   12738:	bl	1094c <fwrite@plt>
   1273c:	mov	r0, r5
   12740:	blx	r4
   12744:	mov	r3, r5
   12748:	mov	r2, #55	; 0x37
   1274c:	mov	r1, #1
   12750:	mov	r0, r6
   12754:	bl	1094c <fwrite@plt>
   12758:	ldr	r4, [r7]
   1275c:	cmp	r4, #0
   12760:	beq	12794 <error@@Base+0x934>
   12764:	mov	r6, #0
   12768:	mov	r3, r6
   1276c:	add	r2, sp, #4
   12770:	ldr	r1, [r4, #12]
   12774:	ldrb	r0, [r4, #8]
   12778:	bl	125e8 <error@@Base+0x788>
   1277c:	mov	r1, r5
   12780:	add	r0, sp, #4
   12784:	bl	10a00 <fputs@plt>
   12788:	ldr	r4, [r4, #4]
   1278c:	cmp	r4, #0
   12790:	bne	12768 <error@@Base+0x908>
   12794:	mov	r0, r5
   12798:	bl	11d2c <getc@plt+0x1308>
   1279c:	add	sp, sp, #20
   127a0:	pop	{r4, r5, r6, r7, pc}
   127a4:	andeq	r2, r1, r8, ror #22
   127a8:	andeq	r3, r1, ip, lsr r8
   127ac:	andeq	r3, r1, r4, ror r8
   127b0:	push	{r4, r5, r6, r7, r8, lr}
   127b4:	sub	sp, sp, #8
   127b8:	mov	r3, #0
   127bc:	str	r3, [sp, #4]
   127c0:	ldrb	r3, [r1]
   127c4:	cmp	r3, #0
   127c8:	beq	12818 <error@@Base+0x9b8>
   127cc:	mov	r6, r0
   127d0:	mov	r4, r1
   127d4:	mvn	r5, #0
   127d8:	mov	r7, #0
   127dc:	add	r2, sp, #4
   127e0:	mov	r1, r5
   127e4:	mov	r0, r4
   127e8:	bl	10964 <utf8proc_iterate@plt>
   127ec:	subs	r8, r0, #0
   127f0:	ble	12820 <error@@Base+0x9c0>
   127f4:	ldr	r2, [sp, #4]
   127f8:	mov	r1, r7
   127fc:	mov	r0, r6
   12800:	bl	121f8 <error@@Base+0x398>
   12804:	ldrb	r3, [r4, r8]!
   12808:	cmp	r3, #0
   1280c:	bne	127dc <error@@Base+0x97c>
   12810:	mov	r0, #1
   12814:	b	12824 <error@@Base+0x9c4>
   12818:	mov	r0, #1
   1281c:	b	12824 <error@@Base+0x9c4>
   12820:	mov	r0, #0
   12824:	add	sp, sp, #8
   12828:	pop	{r4, r5, r6, r7, r8, pc}
   1282c:	push	{r4, lr}
   12830:	mov	r4, r0
   12834:	str	r1, [r2]
   12838:	str	r3, [r2, #4]
   1283c:	cmp	r1, #0
   12840:	strne	r2, [r1, #4]
   12844:	streq	r2, [r0]
   12848:	cmp	r3, #0
   1284c:	strne	r2, [r3]
   12850:	streq	r2, [r0, #4]
   12854:	ldr	r0, [r0, #8]
   12858:	cmp	r0, #0
   1285c:	beq	1286c <error@@Base+0xa0c>
   12860:	bl	108e0 <free@plt>
   12864:	mov	r3, #0
   12868:	str	r3, [r4, #8]
   1286c:	ldr	r3, [r4, #12]
   12870:	add	r3, r3, #1
   12874:	str	r3, [r4, #12]
   12878:	pop	{r4, pc}
   1287c:	mov	r3, #0
   12880:	str	r3, [r0, #4]
   12884:	str	r3, [r0]
   12888:	str	r3, [r0, #8]
   1288c:	str	r3, [r0, #12]
   12890:	bx	lr
   12894:	push	{r4, lr}
   12898:	ldr	r3, [r0]
   1289c:	mov	r2, r1
   128a0:	mov	r1, #0
   128a4:	bl	1282c <error@@Base+0x9cc>
   128a8:	pop	{r4, pc}
   128ac:	push	{r4, lr}
   128b0:	mov	r3, #0
   128b4:	mov	r2, r1
   128b8:	ldr	r1, [r0, #4]
   128bc:	bl	1282c <error@@Base+0x9cc>
   128c0:	pop	{r4, pc}
   128c4:	push	{r4, lr}
   128c8:	mov	ip, r2
   128cc:	mov	r3, r2
   128d0:	mov	r2, r1
   128d4:	ldr	r1, [ip]
   128d8:	bl	1282c <error@@Base+0x9cc>
   128dc:	pop	{r4, pc}
   128e0:	push	{r4, lr}
   128e4:	ldr	r3, [r1, #4]
   128e8:	bl	1282c <error@@Base+0x9cc>
   128ec:	pop	{r4, pc}
   128f0:	push	{r4, lr}
   128f4:	mov	r4, r0
   128f8:	ldr	r3, [r1]
   128fc:	cmp	r3, #0
   12900:	ldrne	r2, [r1, #4]
   12904:	strne	r2, [r3, #4]
   12908:	ldreq	r3, [r1, #4]
   1290c:	streq	r3, [r0]
   12910:	ldr	r3, [r1, #4]
   12914:	cmp	r3, #0
   12918:	ldrne	r2, [r1]
   1291c:	strne	r2, [r3]
   12920:	ldreq	r3, [r1]
   12924:	streq	r3, [r0, #4]
   12928:	mov	r3, #0
   1292c:	str	r3, [r1, #4]
   12930:	str	r3, [r1]
   12934:	ldr	r0, [r0, #8]
   12938:	cmp	r0, r3
   1293c:	beq	1294c <error@@Base+0xaec>
   12940:	bl	108e0 <free@plt>
   12944:	mov	r3, #0
   12948:	str	r3, [r4, #8]
   1294c:	ldr	r3, [r4, #12]
   12950:	sub	r3, r3, #1
   12954:	str	r3, [r4, #12]
   12958:	pop	{r4, pc}
   1295c:	ldr	r3, [r0, #8]
   12960:	cmp	r3, #0
   12964:	bxne	lr
   12968:	ldr	r3, [r0, #12]
   1296c:	cmp	r3, #0
   12970:	bxeq	lr
   12974:	push	{r4, lr}
   12978:	mov	r4, r0
   1297c:	mov	r1, #4
   12980:	mov	r0, r3
   12984:	bl	11e9c <error@@Base+0x3c>
   12988:	str	r0, [r4, #8]
   1298c:	ldr	r3, [r4]
   12990:	cmp	r3, #0
   12994:	popeq	{r4, pc}
   12998:	mov	r2, #0
   1299c:	ldr	r1, [r4, #8]
   129a0:	str	r3, [r1, r2]
   129a4:	ldr	r3, [r3, #4]
   129a8:	add	r2, r2, #4
   129ac:	cmp	r3, #0
   129b0:	bne	1299c <error@@Base+0xb3c>
   129b4:	pop	{r4, pc}
   129b8:	push	{r4, r5, r6, lr}
   129bc:	mov	r5, r0
   129c0:	mov	r6, r1
   129c4:	ldr	r4, [r0]
   129c8:	cmp	r4, #0
   129cc:	popeq	{r4, r5, r6, pc}
   129d0:	mov	r1, r4
   129d4:	mov	r0, r5
   129d8:	bl	128f0 <error@@Base+0xa90>
   129dc:	mov	r0, r4
   129e0:	blx	r6
   129e4:	ldr	r4, [r5]
   129e8:	cmp	r4, #0
   129ec:	bne	129d0 <error@@Base+0xb70>
   129f0:	pop	{r4, r5, r6, pc}
   129f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129f8:	mov	r7, r0
   129fc:	ldr	r6, [pc, #72]	; 12a4c <error@@Base+0xbec>
   12a00:	ldr	r5, [pc, #72]	; 12a50 <error@@Base+0xbf0>
   12a04:	add	r6, pc, r6
   12a08:	add	r5, pc, r5
   12a0c:	sub	r6, r6, r5
   12a10:	mov	r8, r1
   12a14:	mov	r9, r2
   12a18:	bl	1089c <calloc@plt-0x20>
   12a1c:	asrs	r6, r6, #2
   12a20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a24:	mov	r4, #0
   12a28:	add	r4, r4, #1
   12a2c:	ldr	r3, [r5], #4
   12a30:	mov	r2, r9
   12a34:	mov	r1, r8
   12a38:	mov	r0, r7
   12a3c:	blx	r3
   12a40:	cmp	r6, r4
   12a44:	bne	12a28 <error@@Base+0xbc8>
   12a48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a4c:	strdeq	r1, [r1], -r4
   12a50:	andeq	r1, r1, ip, ror #7
   12a54:	bx	lr

Disassembly of section .fini:

00012a58 <.fini>:
   12a58:	push	{r3, lr}
   12a5c:	pop	{r3, pc}
