
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ab8 <.init>:
   11ab8:	push	{r3, lr}
   11abc:	bl	11ce4 <_start@@Base+0x3c>
   11ac0:	pop	{r3, pc}

Disassembly of section .plt:

00011ac4 <raise@plt-0x14>:
   11ac4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ac8:	ldr	lr, [pc, #4]	; 11ad4 <raise@plt-0x4>
   11acc:	add	lr, pc, lr
   11ad0:	ldr	pc, [lr, #8]!
   11ad4:	andeq	r3, r1, ip, lsr #10

00011ad8 <raise@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #1324]!	; 0x52c

00011ae4 <strcmp@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #1316]!	; 0x524

00011af0 <free@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #1308]!	; 0x51c

00011afc <time@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #1300]!	; 0x514

00011b08 <realloc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #77824	; 0x13000
   11b10:	ldr	pc, [ip, #1292]!	; 0x50c

00011b14 <strcpy@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #77824	; 0x13000
   11b1c:	ldr	pc, [ip, #1284]!	; 0x504

00011b20 <malloc@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #77824	; 0x13000
   11b28:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b2c <__libc_start_main@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #77824	; 0x13000
   11b34:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b38 <__gmon_start__@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #77824	; 0x13000
   11b40:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b44 <strlen@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #77824	; 0x13000
   11b4c:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b50 <srand@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #77824	; 0x13000
   11b58:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b5c <snprintf@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #77824	; 0x13000
   11b64:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b68 <__isoc99_sscanf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #77824	; 0x13000
   11b70:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b74 <rand@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #77824	; 0x13000
   11b7c:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b80 <abort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #77824	; 0x13000
   11b88:	ldr	pc, [ip, #1212]!	; 0x4bc

Disassembly of section .text:

00011b8c <main@@Base>:
   11b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b90:	sub	sp, sp, #28
   11b94:	mov	r4, #0
   11b98:	str	r4, [sp, #16]
   11b9c:	bl	11e2c <table_new@@Base>
   11ba0:	mov	r6, r4
   11ba4:	mov	r5, r0
   11ba8:	add	r0, sp, #20
   11bac:	bl	11afc <time@plt>
   11bb0:	bl	11b50 <srand@plt>
   11bb4:	mvn	r3, #0
   11bb8:	add	r2, sp, #16
   11bbc:	ldr	r1, [pc, #224]	; 11ca4 <main@@Base+0x118>
   11bc0:	mov	r0, r5
   11bc4:	bl	12418 <table_register_callback@@Base>
   11bc8:	strh	r6, [sp, #12]
   11bcc:	mov	r2, r4
   11bd0:	strb	r4, [sp, #12]
   11bd4:	add	r1, sp, #12
   11bd8:	mov	r0, r5
   11bdc:	add	r4, r4, #1
   11be0:	bl	12764 <table_add_column@@Base>
   11be4:	cmp	r4, #24
   11be8:	bne	11bc8 <main@@Base+0x3c>
   11bec:	mov	r0, r5
   11bf0:	bl	126f8 <table_get_column_length@@Base>
   11bf4:	mov	r4, #0
   11bf8:	mov	r9, #64	; 0x40
   11bfc:	mov	r8, r4
   11c00:	mov	r7, r0
   11c04:	mov	r0, r9
   11c08:	bl	11b20 <malloc@plt>
   11c0c:	mov	r6, r0
   11c10:	sub	sl, r0, #1
   11c14:	add	fp, r0, #62	; 0x3e
   11c18:	bl	11b74 <rand@plt>
   11c1c:	rsbs	r3, r0, #0
   11c20:	and	r3, r3, #127	; 0x7f
   11c24:	and	r0, r0, #127	; 0x7f
   11c28:	rsbpl	r0, r3, #0
   11c2c:	strb	r0, [sl, #1]!
   11c30:	cmp	fp, sl
   11c34:	bne	11c18 <main@@Base+0x8c>
   11c38:	strb	r8, [r6, #63]	; 0x3f
   11c3c:	mov	r0, r5
   11c40:	bl	12fd8 <table_add_row@@Base>
   11c44:	mov	sl, #0
   11c48:	cmp	sl, r7
   11c4c:	blt	11c78 <main@@Base+0xec>
   11c50:	mov	r0, r6
   11c54:	add	r4, r4, #1
   11c58:	bl	11af0 <free@plt>
   11c5c:	cmp	r4, #500	; 0x1f4
   11c60:	bne	11c04 <main@@Base+0x78>
   11c64:	mov	r0, r5
   11c68:	bl	11f0c <table_delete@@Base>
   11c6c:	mov	r0, #0
   11c70:	add	sp, sp, #28
   11c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c78:	mov	r1, sl
   11c7c:	mov	r0, r5
   11c80:	bl	12750 <table_get_column_data_type@@Base>
   11c84:	mov	r2, sl
   11c88:	mov	r3, r6
   11c8c:	mov	r1, r4
   11c90:	add	sl, sl, #1
   11c94:	str	r0, [sp]
   11c98:	mov	r0, r5
   11c9c:	bl	13190 <table_set@@Base>
   11ca0:	b	11c48 <main@@Base+0xbc>
   11ca4:	ldrdeq	r1, [r1], -r0

00011ca8 <_start@@Base>:
   11ca8:	mov	fp, #0
   11cac:	mov	lr, #0
   11cb0:	pop	{r1}		; (ldr r1, [sp], #4)
   11cb4:	mov	r2, sp
   11cb8:	push	{r2}		; (str r2, [sp, #-4]!)
   11cbc:	push	{r0}		; (str r0, [sp, #-4]!)
   11cc0:	ldr	ip, [pc, #16]	; 11cd8 <_start@@Base+0x30>
   11cc4:	push	{ip}		; (str ip, [sp, #-4]!)
   11cc8:	ldr	r0, [pc, #12]	; 11cdc <_start@@Base+0x34>
   11ccc:	ldr	r3, [pc, #12]	; 11ce0 <_start@@Base+0x38>
   11cd0:	bl	11b2c <__libc_start_main@plt>
   11cd4:	bl	11b80 <abort@plt>
   11cd8:	andeq	r4, r1, r4, lsr #6
   11cdc:	andeq	r1, r1, ip, lsl #23
   11ce0:	andeq	r4, r1, r4, asr #5
   11ce4:	ldr	r3, [pc, #20]	; 11d00 <_start@@Base+0x58>
   11ce8:	ldr	r2, [pc, #20]	; 11d04 <_start@@Base+0x5c>
   11cec:	add	r3, pc, r3
   11cf0:	ldr	r2, [r3, r2]
   11cf4:	cmp	r2, #0
   11cf8:	bxeq	lr
   11cfc:	b	11b38 <__gmon_start__@plt>
   11d00:	andeq	r3, r1, ip, lsl #6
   11d04:	andeq	r0, r0, r8, asr #32
   11d08:	ldr	r3, [pc, #28]	; 11d2c <_start@@Base+0x84>
   11d0c:	ldr	r0, [pc, #28]	; 11d30 <_start@@Base+0x88>
   11d10:	sub	r3, r3, r0
   11d14:	cmp	r3, #6
   11d18:	bxls	lr
   11d1c:	ldr	r3, [pc, #16]	; 11d34 <_start@@Base+0x8c>
   11d20:	cmp	r3, #0
   11d24:	bxeq	lr
   11d28:	bx	r3
   11d2c:	andeq	r5, r2, r7, asr r0
   11d30:	andeq	r5, r2, r4, asr r0
   11d34:	andeq	r0, r0, r0
   11d38:	ldr	r1, [pc, #36]	; 11d64 <_start@@Base+0xbc>
   11d3c:	ldr	r0, [pc, #36]	; 11d68 <_start@@Base+0xc0>
   11d40:	sub	r1, r1, r0
   11d44:	asr	r1, r1, #2
   11d48:	add	r1, r1, r1, lsr #31
   11d4c:	asrs	r1, r1, #1
   11d50:	bxeq	lr
   11d54:	ldr	r3, [pc, #16]	; 11d6c <_start@@Base+0xc4>
   11d58:	cmp	r3, #0
   11d5c:	bxeq	lr
   11d60:	bx	r3
   11d64:	andeq	r5, r2, r4, asr r0
   11d68:	andeq	r5, r2, r4, asr r0
   11d6c:	andeq	r0, r0, r0
   11d70:	push	{r4, lr}
   11d74:	ldr	r4, [pc, #24]	; 11d94 <_start@@Base+0xec>
   11d78:	ldrb	r3, [r4]
   11d7c:	cmp	r3, #0
   11d80:	popne	{r4, pc}
   11d84:	bl	11d08 <_start@@Base+0x60>
   11d88:	mov	r3, #1
   11d8c:	strb	r3, [r4]
   11d90:	pop	{r4, pc}
   11d94:	andeq	r5, r2, r4, asr r0
   11d98:	ldr	r0, [pc, #40]	; 11dc8 <_start@@Base+0x120>
   11d9c:	ldr	r3, [r0]
   11da0:	cmp	r3, #0
   11da4:	bne	11dac <_start@@Base+0x104>
   11da8:	b	11d38 <_start@@Base+0x90>
   11dac:	ldr	r3, [pc, #24]	; 11dcc <_start@@Base+0x124>
   11db0:	cmp	r3, #0
   11db4:	beq	11da8 <_start@@Base+0x100>
   11db8:	push	{r4, lr}
   11dbc:	blx	r3
   11dc0:	pop	{r4, lr}
   11dc4:	b	11d38 <_start@@Base+0x90>
   11dc8:	andeq	r4, r2, r4, lsl pc
   11dcc:	andeq	r0, r0, r0
   11dd0:	ldr	r1, [sp]
   11dd4:	ldr	r2, [r1]
   11dd8:	orr	r3, r2, r3
   11ddc:	str	r3, [r1]
   11de0:	bx	lr

00011de4 <table_init@@Base>:
   11de4:	mov	r3, #0
   11de8:	mov	r2, #10
   11dec:	mov	r1, #20
   11df0:	str	r3, [r0]
   11df4:	str	r3, [r0, #4]
   11df8:	str	r3, [r0, #12]
   11dfc:	str	r2, [r0, #8]
   11e00:	str	r3, [r0, #16]
   11e04:	str	r3, [r0, #20]
   11e08:	str	r3, [r0, #28]
   11e0c:	str	r1, [r0, #24]
   11e10:	str	r3, [r0, #36]	; 0x24
   11e14:	str	r3, [r0, #40]	; 0x28
   11e18:	str	r3, [r0, #44]	; 0x2c
   11e1c:	str	r3, [r0, #32]
   11e20:	str	r3, [r0, #52]	; 0x34
   11e24:	str	r2, [r0, #48]	; 0x30
   11e28:	bx	lr

00011e2c <table_new@@Base>:
   11e2c:	push	{r4, lr}
   11e30:	mov	r0, #56	; 0x38
   11e34:	bl	11b20 <malloc@plt>
   11e38:	mov	r4, r0
   11e3c:	bl	11de4 <table_init@@Base>
   11e40:	pop	{r4, pc}

00011e44 <table_destroy@@Base>:
   11e44:	push	{r4, r5, r6, lr}
   11e48:	subs	r4, r0, #0
   11e4c:	popeq	{r4, r5, r6, pc}
   11e50:	mvn	r2, #0
   11e54:	mov	r3, #64	; 0x40
   11e58:	mov	r1, r2
   11e5c:	bl	12620 <table_notify@@Base>
   11e60:	mov	r0, r4
   11e64:	bl	12fd0 <table_get_row_length@@Base>
   11e68:	mov	r5, #0
   11e6c:	mov	r6, r0
   11e70:	cmp	r6, r5
   11e74:	bgt	11ee4 <table_destroy@@Base+0xa0>
   11e78:	ldr	r0, [r4, #16]
   11e7c:	cmp	r0, #0
   11e80:	beq	11e88 <table_destroy@@Base+0x44>
   11e84:	bl	11af0 <free@plt>
   11e88:	mov	r0, r4
   11e8c:	bl	126f8 <table_get_column_length@@Base>
   11e90:	mov	r5, #0
   11e94:	mov	r6, r0
   11e98:	cmp	r6, r5
   11e9c:	bgt	11ef8 <table_destroy@@Base+0xb4>
   11ea0:	ldr	r0, [r4]
   11ea4:	cmp	r0, #0
   11ea8:	beq	11eb0 <table_destroy@@Base+0x6c>
   11eac:	bl	11af0 <free@plt>
   11eb0:	ldr	r0, [r4, #36]	; 0x24
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ec0 <table_destroy@@Base+0x7c>
   11ebc:	bl	11af0 <free@plt>
   11ec0:	ldr	r0, [r4, #40]	; 0x28
   11ec4:	cmp	r0, #0
   11ec8:	beq	11ed0 <table_destroy@@Base+0x8c>
   11ecc:	bl	11af0 <free@plt>
   11ed0:	ldr	r0, [r4, #44]	; 0x2c
   11ed4:	cmp	r0, #0
   11ed8:	popeq	{r4, r5, r6, pc}
   11edc:	pop	{r4, r5, r6, lr}
   11ee0:	b	11af0 <free@plt>
   11ee4:	mov	r1, r5
   11ee8:	mov	r0, r4
   11eec:	bl	12f80 <table_row_destroy@@Base>
   11ef0:	add	r5, r5, #1
   11ef4:	b	11e70 <table_destroy@@Base+0x2c>
   11ef8:	mov	r1, r5
   11efc:	mov	r0, r4
   11f00:	bl	126dc <table_column_destroy@@Base>
   11f04:	add	r5, r5, #1
   11f08:	b	11e98 <table_destroy@@Base+0x54>

00011f0c <table_delete@@Base>:
   11f0c:	push	{r4, lr}
   11f10:	mov	r4, r0
   11f14:	bl	11e44 <table_destroy@@Base>
   11f18:	mov	r0, r4
   11f1c:	pop	{r4, lr}
   11f20:	b	11af0 <free@plt>

00011f24 <table_dupe@@Base>:
   11f24:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f28:	sub	sp, sp, #20
   11f2c:	mov	r6, r0
   11f30:	bl	12fd0 <table_get_row_length@@Base>
   11f34:	mov	r4, #0
   11f38:	mov	r9, r0
   11f3c:	mov	r0, r6
   11f40:	bl	126f8 <table_get_column_length@@Base>
   11f44:	mov	r8, r0
   11f48:	bl	11e2c <table_new@@Base>
   11f4c:	mov	r7, r0
   11f50:	cmp	r4, r8
   11f54:	blt	11f70 <table_dupe@@Base+0x4c>
   11f58:	mov	r5, #0
   11f5c:	cmp	r5, r9
   11f60:	mov	r0, r7
   11f64:	blt	11fa4 <table_dupe@@Base+0x80>
   11f68:	add	sp, sp, #20
   11f6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f70:	mov	r1, r4
   11f74:	mov	r0, r6
   11f78:	bl	129cc <table_get_column_name@@Base>
   11f7c:	mov	r1, r4
   11f80:	add	r4, r4, #1
   11f84:	mov	r5, r0
   11f88:	mov	r0, r6
   11f8c:	bl	12750 <table_get_column_data_type@@Base>
   11f90:	mov	r1, r5
   11f94:	mov	r2, r0
   11f98:	mov	r0, r7
   11f9c:	bl	12764 <table_add_column@@Base>
   11fa0:	b	11f50 <table_dupe@@Base+0x2c>
   11fa4:	bl	12fd8 <table_add_row@@Base>
   11fa8:	mov	r4, #0
   11fac:	cmp	r4, r8
   11fb0:	addge	r5, r5, #1
   11fb4:	bge	11f5c <table_dupe@@Base+0x38>
   11fb8:	mov	r1, r4
   11fbc:	mov	r0, r6
   11fc0:	bl	12750 <table_get_column_data_type@@Base>
   11fc4:	cmp	r0, #23
   11fc8:	ldrls	pc, [pc, r0, lsl #2]
   11fcc:	b	12054 <table_dupe@@Base+0x130>
   11fd0:	andeq	r2, r1, r0, lsr r0
   11fd4:	andeq	r2, r1, ip, asr r0
   11fd8:	andeq	r2, r1, r4, lsl #1
   11fdc:	andeq	r2, r1, ip, lsr #1
   11fe0:	ldrdeq	r2, [r1], -r4
   11fe4:	strdeq	r2, [r1], -ip
   11fe8:	andeq	r2, r1, r4, lsr #2
   11fec:	andeq	r2, r1, ip, asr #2
   11ff0:	andeq	r2, r1, r4, ror r1
   11ff4:	muleq	r1, ip, r1
   11ff8:	andeq	r2, r1, r4, asr #3
   11ffc:	andeq	r2, r1, ip, ror #3
   12000:	andeq	r2, r1, r4, lsl r2
   12004:	andeq	r2, r1, ip, lsr r2
   12008:	andeq	r2, r1, r4, ror #4
   1200c:	andeq	r2, r1, ip, lsl #5
   12010:	ldrdeq	r2, [r1], -ip
   12014:	andeq	r2, r1, r0, lsl #6
   12018:	andeq	r2, r1, r4, lsr #6
   1201c:	andeq	r2, r1, r0, ror r3
   12020:	muleq	r1, r8, r3
   12024:			; <UNDEFINED> instruction: 0x000122b4
   12028:	andeq	r2, r1, r8, asr #6
   1202c:	andeq	r2, r1, r0, asr #7
   12030:	mov	r2, r4
   12034:	mov	r1, r5
   12038:	mov	r0, r6
   1203c:	bl	12e88 <table_get_int@@Base>
   12040:	mov	r2, r4
   12044:	mov	r1, r5
   12048:	mov	r3, r0
   1204c:	mov	r0, r7
   12050:	bl	13494 <table_set_int@@Base>
   12054:	add	r4, r4, #1
   12058:	b	11fac <table_dupe@@Base+0x88>
   1205c:	mov	r2, r4
   12060:	mov	r1, r5
   12064:	mov	r0, r6
   12068:	bl	12e9c <table_get_uint@@Base>
   1206c:	mov	r2, r4
   12070:	mov	r1, r5
   12074:	mov	r3, r0
   12078:	mov	r0, r7
   1207c:	bl	134b8 <table_set_uint@@Base>
   12080:	b	12054 <table_dupe@@Base+0x130>
   12084:	mov	r2, r4
   12088:	mov	r1, r5
   1208c:	mov	r0, r6
   12090:	bl	12e68 <table_get_int8@@Base>
   12094:	mov	r2, r4
   12098:	mov	r1, r5
   1209c:	mov	r3, r0
   120a0:	mov	r0, r7
   120a4:	bl	134dc <table_set_int8@@Base>
   120a8:	b	12054 <table_dupe@@Base+0x130>
   120ac:	mov	r2, r4
   120b0:	mov	r1, r5
   120b4:	mov	r0, r6
   120b8:	bl	12f54 <table_get_uint8@@Base>
   120bc:	mov	r2, r4
   120c0:	mov	r1, r5
   120c4:	mov	r3, r0
   120c8:	mov	r0, r7
   120cc:	bl	13500 <table_set_uint8@@Base>
   120d0:	b	12054 <table_dupe@@Base+0x130>
   120d4:	mov	r2, r4
   120d8:	mov	r1, r5
   120dc:	mov	r0, r6
   120e0:	bl	12eb0 <table_get_int16@@Base>
   120e4:	mov	r2, r4
   120e8:	mov	r1, r5
   120ec:	mov	r3, r0
   120f0:	mov	r0, r7
   120f4:	bl	13524 <table_set_int16@@Base>
   120f8:	b	12054 <table_dupe@@Base+0x130>
   120fc:	mov	r2, r4
   12100:	mov	r1, r5
   12104:	mov	r0, r6
   12108:	bl	12ec4 <table_get_uint16@@Base>
   1210c:	mov	r2, r4
   12110:	mov	r1, r5
   12114:	mov	r3, r0
   12118:	mov	r0, r7
   1211c:	bl	13548 <table_set_uint16@@Base>
   12120:	b	12054 <table_dupe@@Base+0x130>
   12124:	mov	r2, r4
   12128:	mov	r1, r5
   1212c:	mov	r0, r6
   12130:	bl	12e78 <table_get_int32@@Base>
   12134:	mov	r2, r4
   12138:	mov	r1, r5
   1213c:	mov	r3, r0
   12140:	mov	r0, r7
   12144:	bl	1356c <table_set_int32@@Base>
   12148:	b	12054 <table_dupe@@Base+0x130>
   1214c:	mov	r2, r4
   12150:	mov	r1, r5
   12154:	mov	r0, r6
   12158:	bl	12e8c <table_get_uint32@@Base>
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r3, r0
   12168:	mov	r0, r7
   1216c:	bl	13590 <table_set_uint32@@Base>
   12170:	b	12054 <table_dupe@@Base+0x130>
   12174:	mov	r2, r4
   12178:	mov	r1, r5
   1217c:	mov	r0, r6
   12180:	bl	12ef8 <table_get_int64@@Base>
   12184:	mov	r2, r4
   12188:	strd	r0, [sp]
   1218c:	mov	r1, r5
   12190:	mov	r0, r7
   12194:	bl	135b4 <table_set_int64@@Base>
   12198:	b	12054 <table_dupe@@Base+0x130>
   1219c:	mov	r2, r4
   121a0:	mov	r1, r5
   121a4:	mov	r0, r6
   121a8:	bl	12f0c <table_get_uint64@@Base>
   121ac:	mov	r2, r4
   121b0:	strd	r0, [sp]
   121b4:	mov	r1, r5
   121b8:	mov	r0, r7
   121bc:	bl	135d0 <table_set_uint64@@Base>
   121c0:	b	12054 <table_dupe@@Base+0x130>
   121c4:	mov	r2, r4
   121c8:	mov	r1, r5
   121cc:	mov	r0, r6
   121d0:	bl	12ea0 <table_get_short@@Base>
   121d4:	mov	r2, r4
   121d8:	mov	r1, r5
   121dc:	mov	r3, r0
   121e0:	mov	r0, r7
   121e4:	bl	135ec <table_set_short@@Base>
   121e8:	b	12054 <table_dupe@@Base+0x130>
   121ec:	mov	r2, r4
   121f0:	mov	r1, r5
   121f4:	mov	r0, r6
   121f8:	bl	12eb4 <table_get_ushort@@Base>
   121fc:	mov	r2, r4
   12200:	mov	r1, r5
   12204:	mov	r3, r0
   12208:	mov	r0, r7
   1220c:	bl	13610 <table_set_ushort@@Base>
   12210:	b	12054 <table_dupe@@Base+0x130>
   12214:	mov	r2, r4
   12218:	mov	r1, r5
   1221c:	mov	r0, r6
   12220:	bl	12ec8 <table_get_long@@Base>
   12224:	mov	r2, r4
   12228:	mov	r1, r5
   1222c:	mov	r3, r0
   12230:	mov	r0, r7
   12234:	bl	13634 <table_set_long@@Base>
   12238:	b	12054 <table_dupe@@Base+0x130>
   1223c:	mov	r2, r4
   12240:	mov	r1, r5
   12244:	mov	r0, r6
   12248:	bl	12ed8 <table_get_ulong@@Base>
   1224c:	mov	r2, r4
   12250:	mov	r1, r5
   12254:	mov	r3, r0
   12258:	mov	r0, r7
   1225c:	bl	13658 <table_set_ulong@@Base>
   12260:	b	12054 <table_dupe@@Base+0x130>
   12264:	mov	r2, r4
   12268:	mov	r1, r5
   1226c:	mov	r0, r6
   12270:	bl	12ee8 <table_get_llong@@Base>
   12274:	mov	r2, r4
   12278:	strd	r0, [sp]
   1227c:	mov	r1, r5
   12280:	mov	r0, r7
   12284:	bl	1367c <table_set_llong@@Base>
   12288:	b	12054 <table_dupe@@Base+0x130>
   1228c:	mov	r2, r4
   12290:	mov	r1, r5
   12294:	mov	r0, r6
   12298:	bl	12efc <table_get_ullong@@Base>
   1229c:	mov	r2, r4
   122a0:	strd	r0, [sp]
   122a4:	mov	r1, r5
   122a8:	mov	r0, r7
   122ac:	bl	13698 <table_set_ullong@@Base>
   122b0:	b	12054 <table_dupe@@Base+0x130>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	mov	r0, r6
   122c0:	bl	12f58 <table_get_string@@Base>
   122c4:	mov	r2, r4
   122c8:	mov	r1, r5
   122cc:	mov	r3, r0
   122d0:	mov	r0, r7
   122d4:	bl	13714 <table_set_string@@Base>
   122d8:	b	12054 <table_dupe@@Base+0x130>
   122dc:	mov	r2, r4
   122e0:	mov	r1, r5
   122e4:	mov	r0, r6
   122e8:	bl	12f10 <table_get_float@@Base>
   122ec:	mov	r2, r4
   122f0:	mov	r1, r5
   122f4:	mov	r0, r7
   122f8:	bl	136b4 <table_set_float@@Base>
   122fc:	b	12054 <table_dupe@@Base+0x130>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	12f20 <table_get_double@@Base>
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r0, r7
   1231c:	bl	136d4 <table_set_double@@Base>
   12320:	b	12054 <table_dupe@@Base+0x130>
   12324:	mov	r2, r4
   12328:	mov	r1, r5
   1232c:	mov	r0, r6
   12330:	bl	12f30 <table_get_ldouble@@Base>
   12334:	mov	r2, r4
   12338:	mov	r1, r5
   1233c:	mov	r0, r7
   12340:	bl	136f4 <table_set_ldouble@@Base>
   12344:	b	12054 <table_dupe@@Base+0x130>
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r0, r6
   12354:	bl	12e58 <table_get_bool@@Base>
   12358:	mov	r2, r4
   1235c:	mov	r1, r5
   12360:	mov	r3, r0
   12364:	mov	r0, r7
   12368:	bl	13470 <table_set_bool@@Base>
   1236c:	b	12054 <table_dupe@@Base+0x130>
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r0, r6
   1237c:	bl	12f50 <table_get_char@@Base>
   12380:	mov	r2, r4
   12384:	mov	r1, r5
   12388:	mov	r3, r0
   1238c:	mov	r0, r7
   12390:	bl	1372c <table_set_char@@Base>
   12394:	b	12054 <table_dupe@@Base+0x130>
   12398:	mov	r2, r4
   1239c:	mov	r1, r5
   123a0:	mov	r0, r6
   123a4:	bl	12f40 <table_get_uchar@@Base>
   123a8:	mov	r2, r4
   123ac:	mov	r1, r5
   123b0:	mov	r3, r0
   123b4:	mov	r0, r7
   123b8:	bl	13750 <table_set_uchar@@Base>
   123bc:	b	12054 <table_dupe@@Base+0x130>
   123c0:	mov	r2, r4
   123c4:	mov	r1, r5
   123c8:	mov	r0, r6
   123cc:	bl	12f5c <table_get_ptr@@Base>
   123d0:	add	r3, sp, #12
   123d4:	mov	r2, r4
   123d8:	mov	r1, r5
   123dc:	str	r0, [sp, #12]
   123e0:	mov	r0, r7
   123e4:	bl	13774 <table_set_ptr@@Base>
   123e8:	b	12054 <table_dupe@@Base+0x130>

000123ec <table_get_major_version@@Base>:
   123ec:	mov	r0, #0
   123f0:	bx	lr

000123f4 <table_get_minor_version@@Base>:
   123f4:	mov	r0, #0
   123f8:	bx	lr

000123fc <table_get_patch_version@@Base>:
   123fc:	mov	r0, #0
   12400:	bx	lr

00012404 <table_get_version@@Base>:
   12404:	ldr	r0, [pc]	; 1240c <table_get_version@@Base+0x8>
   12408:	bx	lr
   1240c:	andeq	r4, r1, r4, asr #7

00012410 <table_get_callback_length@@Base>:
   12410:	ldr	r0, [r0, #32]
   12414:	bx	lr

00012418 <table_register_callback@@Base>:
   12418:	push	{r4, r5, r6, r7, r8, lr}
   1241c:	mov	r4, r0
   12420:	ldr	r0, [r0, #32]
   12424:	mov	ip, #0
   12428:	cmp	ip, r0
   1242c:	blt	124c0 <table_register_callback@@Base+0xa8>
   12430:	ldr	r5, [r4, #48]	; 0x30
   12434:	mov	r8, r1
   12438:	mov	r1, r5
   1243c:	mov	r6, r3
   12440:	mov	r7, r2
   12444:	bl	14294 <table_cell_nullify@@Base+0x218>
   12448:	cmp	r1, #0
   1244c:	bne	12494 <table_register_callback@@Base+0x7c>
   12450:	ldr	r1, [r4, #52]	; 0x34
   12454:	ldr	r0, [r4, #36]	; 0x24
   12458:	add	r1, r5, r1
   1245c:	str	r1, [r4, #52]	; 0x34
   12460:	lsl	r1, r1, #2
   12464:	bl	11b08 <realloc@plt>
   12468:	ldr	r1, [r4, #52]	; 0x34
   1246c:	lsl	r1, r1, #2
   12470:	str	r0, [r4, #36]	; 0x24
   12474:	ldr	r0, [r4, #40]	; 0x28
   12478:	bl	11b08 <realloc@plt>
   1247c:	ldr	r1, [r4, #52]	; 0x34
   12480:	lsl	r1, r1, #2
   12484:	str	r0, [r4, #40]	; 0x28
   12488:	ldr	r0, [r4, #44]	; 0x2c
   1248c:	bl	11b08 <realloc@plt>
   12490:	str	r0, [r4, #44]	; 0x2c
   12494:	ldr	r3, [r4, #32]
   12498:	ldr	r2, [r4, #36]	; 0x24
   1249c:	str	r8, [r2, r3, lsl #2]
   124a0:	ldr	r2, [r4, #40]	; 0x28
   124a4:	str	r7, [r2, r3, lsl #2]
   124a8:	ldr	r2, [r4, #44]	; 0x2c
   124ac:	str	r6, [r2, r3, lsl #2]
   124b0:	ldr	r3, [r4, #32]
   124b4:	add	r3, r3, #1
   124b8:	str	r3, [r4, #32]
   124bc:	pop	{r4, r5, r6, r7, r8, pc}
   124c0:	ldr	r5, [r4, #36]	; 0x24
   124c4:	lsl	lr, ip, #2
   124c8:	ldr	r5, [r5, ip, lsl #2]
   124cc:	cmp	r1, r5
   124d0:	bne	124e4 <table_register_callback@@Base+0xcc>
   124d4:	ldr	r5, [r4, #40]	; 0x28
   124d8:	ldr	r5, [r5, ip, lsl #2]
   124dc:	cmp	r2, r5
   124e0:	beq	124ec <table_register_callback@@Base+0xd4>
   124e4:	add	ip, ip, #1
   124e8:	b	12428 <table_register_callback@@Base+0x10>
   124ec:	cmp	ip, #0
   124f0:	ble	12430 <table_register_callback@@Base+0x18>
   124f4:	ldr	r1, [r4, #44]	; 0x2c
   124f8:	ldr	r2, [r1, lr]
   124fc:	orr	r3, r2, r3
   12500:	str	r3, [r1, lr]
   12504:	pop	{r4, r5, r6, r7, r8, pc}

00012508 <table_unregister_callback@@Base>:
   12508:	push	{r4, r5, r6, lr}
   1250c:	mov	r4, r0
   12510:	ldr	r0, [r0, #32]
   12514:	mov	r3, #0
   12518:	cmp	r3, r0
   1251c:	blt	12524 <table_unregister_callback@@Base+0x1c>
   12520:	pop	{r4, r5, r6, pc}
   12524:	ldr	lr, [r4, #36]	; 0x24
   12528:	lsl	ip, r3, #2
   1252c:	ldr	lr, [lr, r3, lsl #2]
   12530:	cmp	r1, lr
   12534:	bne	12548 <table_unregister_callback@@Base+0x40>
   12538:	ldr	lr, [r4, #40]	; 0x28
   1253c:	ldr	lr, [lr, r3, lsl #2]
   12540:	cmp	r2, lr
   12544:	beq	1257c <table_unregister_callback@@Base+0x74>
   12548:	add	r3, r3, #1
   1254c:	b	12518 <table_unregister_callback@@Base+0x10>
   12550:	ldr	r1, [r4, #36]	; 0x24
   12554:	add	r3, r3, #1
   12558:	ldr	r0, [r1, r2]
   1255c:	str	r0, [r1, ip]
   12560:	ldr	r1, [r4, #40]	; 0x28
   12564:	ldr	r0, [r1, r2]
   12568:	str	r0, [r1, ip]
   1256c:	ldr	r1, [r4, #44]	; 0x2c
   12570:	ldr	r0, [r1, r2]
   12574:	str	r0, [r1, ip]
   12578:	mov	ip, r2
   1257c:	ldr	r0, [r4, #32]
   12580:	add	r2, ip, #4
   12584:	sub	r0, r0, #1
   12588:	cmp	r3, r0
   1258c:	blt	12550 <table_unregister_callback@@Base+0x48>
   12590:	ldr	r6, [r4, #48]	; 0x30
   12594:	str	r0, [r4, #32]
   12598:	mov	r1, r6
   1259c:	bl	14294 <table_cell_nullify@@Base+0x218>
   125a0:	cmp	r1, #0
   125a4:	popne	{r4, r5, r6, pc}
   125a8:	ldr	r5, [r4, #52]	; 0x34
   125ac:	sub	r5, r5, r6
   125b0:	cmp	r5, #0
   125b4:	str	r5, [r4, #52]	; 0x34
   125b8:	beq	125f8 <table_unregister_callback@@Base+0xf0>
   125bc:	lsl	r1, r5, #2
   125c0:	ldr	r0, [r4, #36]	; 0x24
   125c4:	bl	11b08 <realloc@plt>
   125c8:	ldr	r1, [r4, #52]	; 0x34
   125cc:	lsl	r1, r1, #2
   125d0:	str	r0, [r4, #36]	; 0x24
   125d4:	ldr	r0, [r4, #40]	; 0x28
   125d8:	bl	11b08 <realloc@plt>
   125dc:	ldr	r1, [r4, #52]	; 0x34
   125e0:	lsl	r1, r1, #2
   125e4:	str	r0, [r4, #40]	; 0x28
   125e8:	ldr	r0, [r4, #44]	; 0x2c
   125ec:	bl	11b08 <realloc@plt>
   125f0:	str	r0, [r4, #44]	; 0x2c
   125f4:	pop	{r4, r5, r6, pc}
   125f8:	ldr	r0, [r4, #36]	; 0x24
   125fc:	bl	11af0 <free@plt>
   12600:	ldr	r0, [r4, #40]	; 0x28
   12604:	bl	11af0 <free@plt>
   12608:	ldr	r0, [r4, #44]	; 0x2c
   1260c:	bl	11af0 <free@plt>
   12610:	str	r5, [r4, #36]	; 0x24
   12614:	str	r5, [r4, #40]	; 0x28
   12618:	str	r5, [r4, #44]	; 0x2c
   1261c:	pop	{r4, r5, r6, pc}

00012620 <table_notify@@Base>:
   12620:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12624:	mov	r5, r0
   12628:	mov	r7, r1
   1262c:	mov	r8, r2
   12630:	mov	r6, r3
   12634:	mov	r4, #0
   12638:	ldr	r3, [r5, #32]
   1263c:	cmp	r4, r3
   12640:	blt	1264c <table_notify@@Base+0x2c>
   12644:	add	sp, sp, #12
   12648:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1264c:	ldr	r3, [r5, #44]	; 0x2c
   12650:	ldr	r3, [r3, r4, lsl #2]
   12654:	tst	r6, r3
   12658:	beq	12684 <table_notify@@Base+0x64>
   1265c:	ldr	r2, [r5, #40]	; 0x28
   12660:	ldr	r3, [r5, #36]	; 0x24
   12664:	mov	r1, r7
   12668:	ldr	r2, [r2, r4, lsl #2]
   1266c:	mov	r0, r5
   12670:	str	r2, [sp]
   12674:	mov	r2, r8
   12678:	ldr	r9, [r3, r4, lsl #2]
   1267c:	mov	r3, r6
   12680:	blx	r9
   12684:	add	r4, r4, #1
   12688:	b	12638 <table_notify@@Base+0x18>

0001268c <table_column_init@@Base>:
   1268c:	push	{r4, r5, r6, r7, r8, lr}
   12690:	mov	r4, #12
   12694:	ldr	r7, [r0]
   12698:	mov	r0, r2
   1269c:	mul	r4, r4, r1
   126a0:	mov	r6, r2
   126a4:	mov	r8, r3
   126a8:	bl	11b44 <strlen@plt>
   126ac:	add	r5, r7, r4
   126b0:	add	r0, r0, #1
   126b4:	bl	11b20 <malloc@plt>
   126b8:	cmp	r0, #0
   126bc:	str	r0, [r7, r4]
   126c0:	beq	126cc <table_column_init@@Base+0x40>
   126c4:	mov	r1, r6
   126c8:	bl	11b14 <strcpy@plt>
   126cc:	ldr	r3, [sp, #24]
   126d0:	str	r8, [r5, #4]
   126d4:	str	r3, [r5, #8]
   126d8:	pop	{r4, r5, r6, r7, r8, pc}

000126dc <table_column_destroy@@Base>:
   126dc:	mov	r3, #12
   126e0:	ldr	r2, [r0]
   126e4:	mul	r1, r3, r1
   126e8:	ldr	r0, [r2, r1]
   126ec:	cmp	r0, #0
   126f0:	bxeq	lr
   126f4:	b	11af0 <free@plt>

000126f8 <table_get_column_length@@Base>:
   126f8:	ldr	r0, [r0, #4]
   126fc:	bx	lr

00012700 <table_get_column@@Base>:
   12700:	push	{r4, r5, r6, r7, r8, lr}
   12704:	mov	r5, r0
   12708:	ldr	r6, [r0, #4]
   1270c:	mov	r7, r1
   12710:	mov	r4, #0
   12714:	mov	r8, #12
   12718:	cmp	r4, r6
   1271c:	blt	1272c <table_get_column@@Base+0x2c>
   12720:	mvneq	r4, #0
   12724:	mov	r0, r4
   12728:	pop	{r4, r5, r6, r7, r8, pc}
   1272c:	mul	r3, r8, r4
   12730:	ldr	r2, [r5]
   12734:	mov	r1, r7
   12738:	ldr	r0, [r2, r3]
   1273c:	bl	11ae4 <strcmp@plt>
   12740:	cmp	r0, #0
   12744:	beq	12724 <table_get_column@@Base+0x24>
   12748:	add	r4, r4, #1
   1274c:	b	12718 <table_get_column@@Base+0x18>

00012750 <table_get_column_data_type@@Base>:
   12750:	ldr	r2, [r0]
   12754:	mov	r3, #12
   12758:	mla	r1, r3, r1, r2
   1275c:	ldr	r0, [r1, #4]
   12760:	bx	lr

00012764 <table_add_column@@Base>:
   12764:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12768:	mov	r4, r0
   1276c:	ldr	r6, [r0, #8]
   12770:	mov	r8, r1
   12774:	ldr	r0, [r0, #4]
   12778:	mov	r1, r6
   1277c:	mov	r7, r2
   12780:	bl	14294 <table_cell_nullify@@Base+0x218>
   12784:	subs	r5, r1, #0
   12788:	beq	127f0 <table_add_column@@Base+0x8c>
   1278c:	mov	r0, r4
   12790:	bl	12fd0 <table_get_row_length@@Base>
   12794:	ldr	r6, [r4, #4]
   12798:	mov	r5, #0
   1279c:	mov	r9, r0
   127a0:	mov	r0, r7
   127a4:	bl	12e30 <table_get_default_compare_function_for_data_type@@Base>
   127a8:	mov	r3, r7
   127ac:	mov	r2, r8
   127b0:	mov	r1, r6
   127b4:	str	r0, [sp]
   127b8:	mov	r0, r4
   127bc:	bl	1268c <table_column_init@@Base>
   127c0:	cmp	r9, r5
   127c4:	bgt	12850 <table_add_column@@Base+0xec>
   127c8:	mov	r0, r4
   127cc:	mov	r3, #8
   127d0:	ldr	r2, [r4, #4]
   127d4:	mvn	r1, #0
   127d8:	bl	12620 <table_notify@@Base>
   127dc:	ldr	r0, [r4, #4]
   127e0:	add	r3, r0, #1
   127e4:	str	r3, [r4, #4]
   127e8:	add	sp, sp, #12
   127ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   127f0:	ldr	r1, [r4, #12]
   127f4:	ldr	r0, [r4]
   127f8:	add	r6, r6, r1
   127fc:	mov	r1, #12
   12800:	str	r6, [r4, #12]
   12804:	mul	r1, r1, r6
   12808:	bl	11b08 <realloc@plt>
   1280c:	str	r0, [r4]
   12810:	mov	r0, r4
   12814:	bl	12fd0 <table_get_row_length@@Base>
   12818:	mov	r9, r0
   1281c:	cmp	r9, r5
   12820:	ble	1278c <table_add_column@@Base+0x28>
   12824:	mov	r1, r5
   12828:	mov	r0, r4
   1282c:	bl	13174 <table_get_row_ptr@@Base>
   12830:	ldr	r1, [r4, #12]
   12834:	add	r5, r5, #1
   12838:	lsl	r1, r1, #2
   1283c:	mov	r6, r0
   12840:	ldr	r0, [r0]
   12844:	bl	11b08 <realloc@plt>
   12848:	str	r0, [r6]
   1284c:	b	1281c <table_add_column@@Base+0xb8>
   12850:	mov	r1, r5
   12854:	mov	r2, r6
   12858:	mov	r0, r4
   1285c:	bl	14024 <table_cell_init@@Base>
   12860:	add	r5, r5, #1
   12864:	b	127c0 <table_add_column@@Base+0x5c>

00012868 <table_remove_column@@Base>:
   12868:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1286c:	mov	r5, r1
   12870:	mov	r4, r0
   12874:	bl	126dc <table_column_destroy@@Base>
   12878:	mov	r3, #12
   1287c:	ldr	r7, [r4, #4]
   12880:	mul	r3, r3, r5
   12884:	mov	r1, r5
   12888:	sub	r7, r7, #1
   1288c:	cmp	r1, r7
   12890:	add	lr, r3, #12
   12894:	blt	12924 <table_remove_column@@Base+0xbc>
   12898:	mov	r0, r4
   1289c:	bl	12fd0 <table_get_row_length@@Base>
   128a0:	lsl	r9, r5, #2
   128a4:	mov	r6, #0
   128a8:	mov	r8, r0
   128ac:	cmp	r8, r6
   128b0:	bgt	12954 <table_remove_column@@Base+0xec>
   128b4:	ldr	r0, [r4, #4]
   128b8:	ldr	r7, [r4, #8]
   128bc:	sub	r0, r0, #1
   128c0:	str	r0, [r4, #4]
   128c4:	mov	r1, r7
   128c8:	bl	14294 <table_cell_nullify@@Base+0x218>
   128cc:	subs	r6, r1, #0
   128d0:	bne	12908 <table_remove_column@@Base+0xa0>
   128d4:	ldr	r1, [r4, #12]
   128d8:	mov	r3, #12
   128dc:	sub	r1, r1, r7
   128e0:	str	r1, [r4, #12]
   128e4:	ldr	r0, [r4]
   128e8:	mul	r1, r3, r1
   128ec:	bl	11b08 <realloc@plt>
   128f0:	str	r0, [r4]
   128f4:	mov	r0, r4
   128f8:	bl	12fd0 <table_get_row_length@@Base>
   128fc:	mov	r8, r0
   12900:	cmp	r8, r6
   12904:	bgt	129a0 <table_remove_column@@Base+0x138>
   12908:	mov	r0, r4
   1290c:	mov	r3, #16
   12910:	mov	r2, r5
   12914:	mvn	r1, #0
   12918:	bl	12620 <table_notify@@Base>
   1291c:	mov	r0, #0
   12920:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12924:	ldr	ip, [r4]
   12928:	add	r1, r1, #1
   1292c:	add	r0, ip, lr
   12930:	add	r6, ip, r3
   12934:	ldr	r2, [r0]
   12938:	str	r2, [ip, r3]
   1293c:	ldr	r2, [r0, #4]
   12940:	mov	r3, lr
   12944:	str	r2, [r6, #4]
   12948:	ldr	r2, [r0, #8]
   1294c:	str	r2, [r6, #8]
   12950:	b	1288c <table_remove_column@@Base+0x24>
   12954:	mov	r2, r5
   12958:	mov	r1, r6
   1295c:	mov	r0, r4
   12960:	bl	14038 <table_cell_destroy@@Base>
   12964:	mov	r1, r6
   12968:	mov	r0, r4
   1296c:	bl	13174 <table_get_row_ptr@@Base>
   12970:	mov	r2, r9
   12974:	mov	r3, r5
   12978:	cmp	r7, r3
   1297c:	add	r1, r2, #4
   12980:	addle	r6, r6, #1
   12984:	ble	128ac <table_remove_column@@Base+0x44>
   12988:	ldr	ip, [r0]
   1298c:	add	r3, r3, #1
   12990:	ldr	lr, [ip, r1]
   12994:	str	lr, [ip, r2]
   12998:	mov	r2, r1
   1299c:	b	12978 <table_remove_column@@Base+0x110>
   129a0:	mov	r1, r6
   129a4:	mov	r0, r4
   129a8:	bl	13174 <table_get_row_ptr@@Base>
   129ac:	ldr	r1, [r4, #12]
   129b0:	add	r6, r6, #1
   129b4:	lsl	r1, r1, #2
   129b8:	mov	r7, r0
   129bc:	ldr	r0, [r0]
   129c0:	bl	11b08 <realloc@plt>
   129c4:	str	r0, [r7]
   129c8:	b	12900 <table_remove_column@@Base+0x98>

000129cc <table_get_column_name@@Base>:
   129cc:	mov	r3, #12
   129d0:	ldr	r2, [r0]
   129d4:	mul	r1, r3, r1
   129d8:	ldr	r0, [r2, r1]
   129dc:	bx	lr

000129e0 <table_get_col_ptr@@Base>:
   129e0:	ldr	r3, [r0]
   129e4:	mov	r0, #12
   129e8:	mla	r0, r0, r1, r3
   129ec:	bx	lr

000129f0 <table_get_column_compare_function@@Base>:
   129f0:	ldr	r2, [r0]
   129f4:	mov	r3, #12
   129f8:	mla	r1, r3, r1, r2
   129fc:	ldr	r0, [r1, #8]
   12a00:	bx	lr

00012a04 <table_set_column_compare_function@@Base>:
   12a04:	ldr	r0, [r0]
   12a08:	mov	r3, #12
   12a0c:	mla	r1, r3, r1, r0
   12a10:	str	r2, [r1, #8]
   12a14:	bx	lr

00012a18 <table_compare_bool@@Base>:
   12a18:	cmp	r0, #0
   12a1c:	bne	12a2c <table_compare_bool@@Base+0x14>
   12a20:	adds	r0, r1, #0
   12a24:	mvnne	r0, #0
   12a28:	bx	lr
   12a2c:	cmp	r1, #0
   12a30:	beq	12a50 <table_compare_bool@@Base+0x38>
   12a34:	ldrb	r2, [r0]
   12a38:	ldrb	r3, [r1]
   12a3c:	cmp	r2, r3
   12a40:	bgt	12a50 <table_compare_bool@@Base+0x38>
   12a44:	mvnlt	r0, #0
   12a48:	movge	r0, #0
   12a4c:	bx	lr
   12a50:	mov	r0, #1
   12a54:	bx	lr

00012a58 <table_compare_int8@@Base>:
   12a58:	cmp	r0, #0
   12a5c:	bne	12a6c <table_compare_int8@@Base+0x14>
   12a60:	adds	r0, r1, #0
   12a64:	mvnne	r0, #0
   12a68:	bx	lr
   12a6c:	cmp	r1, #0
   12a70:	beq	12a90 <table_compare_int8@@Base+0x38>
   12a74:	ldrsb	r2, [r0]
   12a78:	ldrsb	r3, [r1]
   12a7c:	cmp	r2, r3
   12a80:	bgt	12a90 <table_compare_int8@@Base+0x38>
   12a84:	mvnlt	r0, #0
   12a88:	movge	r0, #0
   12a8c:	bx	lr
   12a90:	mov	r0, #1
   12a94:	bx	lr

00012a98 <table_compare_int32@@Base>:
   12a98:	cmp	r0, #0
   12a9c:	bne	12aac <table_compare_int32@@Base+0x14>
   12aa0:	adds	r0, r1, #0
   12aa4:	mvnne	r0, #0
   12aa8:	bx	lr
   12aac:	cmp	r1, #0
   12ab0:	beq	12ad0 <table_compare_int32@@Base+0x38>
   12ab4:	ldr	r2, [r0]
   12ab8:	ldr	r3, [r1]
   12abc:	cmp	r2, r3
   12ac0:	bgt	12ad0 <table_compare_int32@@Base+0x38>
   12ac4:	mvnlt	r0, #0
   12ac8:	movge	r0, #0
   12acc:	bx	lr
   12ad0:	mov	r0, #1
   12ad4:	bx	lr

00012ad8 <table_compare_int@@Base>:
   12ad8:	b	12a98 <table_compare_int32@@Base>

00012adc <table_compare_uint32@@Base>:
   12adc:	cmp	r0, #0
   12ae0:	bne	12af0 <table_compare_uint32@@Base+0x14>
   12ae4:	adds	r0, r1, #0
   12ae8:	mvnne	r0, #0
   12aec:	bx	lr
   12af0:	cmp	r1, #0
   12af4:	beq	12b14 <table_compare_uint32@@Base+0x38>
   12af8:	ldr	r2, [r0]
   12afc:	ldr	r3, [r1]
   12b00:	cmp	r2, r3
   12b04:	bhi	12b14 <table_compare_uint32@@Base+0x38>
   12b08:	mvncc	r0, #0
   12b0c:	movcs	r0, #0
   12b10:	bx	lr
   12b14:	mov	r0, #1
   12b18:	bx	lr

00012b1c <table_compare_uint@@Base>:
   12b1c:	b	12adc <table_compare_uint32@@Base>

00012b20 <table_compare_uint64@@Base>:
   12b20:	cmp	r0, #0
   12b24:	bne	12b34 <table_compare_uint64@@Base+0x14>
   12b28:	adds	r0, r1, #0
   12b2c:	mvnne	r0, #0
   12b30:	bx	lr
   12b34:	cmp	r1, #0
   12b38:	beq	12b60 <table_compare_uint64@@Base+0x40>
   12b3c:	ldrd	r2, [r1]
   12b40:	push	{r4, r5, lr}
   12b44:	ldrd	r4, [r0]
   12b48:	cmp	r5, r3
   12b4c:	cmpeq	r4, r2
   12b50:	bhi	12b68 <table_compare_uint64@@Base+0x48>
   12b54:	mvncc	r0, #0
   12b58:	movcs	r0, #0
   12b5c:	pop	{r4, r5, pc}
   12b60:	mov	r0, #1
   12b64:	bx	lr
   12b68:	mov	r0, #1
   12b6c:	pop	{r4, r5, pc}

00012b70 <table_compare_short@@Base>:
   12b70:	cmp	r0, #0
   12b74:	bne	12b84 <table_compare_short@@Base+0x14>
   12b78:	adds	r0, r1, #0
   12b7c:	mvnne	r0, #0
   12b80:	bx	lr
   12b84:	cmp	r1, #0
   12b88:	beq	12ba8 <table_compare_short@@Base+0x38>
   12b8c:	ldrsh	r2, [r0]
   12b90:	ldrsh	r3, [r1]
   12b94:	cmp	r2, r3
   12b98:	bgt	12ba8 <table_compare_short@@Base+0x38>
   12b9c:	mvnlt	r0, #0
   12ba0:	movge	r0, #0
   12ba4:	bx	lr
   12ba8:	mov	r0, #1
   12bac:	bx	lr

00012bb0 <table_compare_int16@@Base>:
   12bb0:	b	12b70 <table_compare_short@@Base>

00012bb4 <table_compare_ushort@@Base>:
   12bb4:	cmp	r0, #0
   12bb8:	bne	12bc8 <table_compare_ushort@@Base+0x14>
   12bbc:	adds	r0, r1, #0
   12bc0:	mvnne	r0, #0
   12bc4:	bx	lr
   12bc8:	cmp	r1, #0
   12bcc:	beq	12bec <table_compare_ushort@@Base+0x38>
   12bd0:	ldrh	r2, [r0]
   12bd4:	ldrh	r3, [r1]
   12bd8:	cmp	r2, r3
   12bdc:	bhi	12bec <table_compare_ushort@@Base+0x38>
   12be0:	mvncc	r0, #0
   12be4:	movcs	r0, #0
   12be8:	bx	lr
   12bec:	mov	r0, #1
   12bf0:	bx	lr

00012bf4 <table_compare_uint16@@Base>:
   12bf4:	b	12bb4 <table_compare_ushort@@Base>

00012bf8 <table_compare_long@@Base>:
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c0c <table_compare_long@@Base+0x14>
   12c00:	adds	r0, r1, #0
   12c04:	mvnne	r0, #0
   12c08:	bx	lr
   12c0c:	cmp	r1, #0
   12c10:	beq	12c30 <table_compare_long@@Base+0x38>
   12c14:	ldr	r2, [r0]
   12c18:	ldr	r3, [r1]
   12c1c:	cmp	r2, r3
   12c20:	bgt	12c30 <table_compare_long@@Base+0x38>
   12c24:	mvnlt	r0, #0
   12c28:	movge	r0, #0
   12c2c:	bx	lr
   12c30:	mov	r0, #1
   12c34:	bx	lr

00012c38 <table_compare_llong@@Base>:
   12c38:	cmp	r0, #0
   12c3c:	bne	12c4c <table_compare_llong@@Base+0x14>
   12c40:	adds	r0, r1, #0
   12c44:	mvnne	r0, #0
   12c48:	bx	lr
   12c4c:	cmp	r1, #0
   12c50:	beq	12c80 <table_compare_llong@@Base+0x48>
   12c54:	ldrd	r2, [r1]
   12c58:	push	{r4, r5, lr}
   12c5c:	ldrd	r4, [r0]
   12c60:	cmp	r2, r4
   12c64:	sbcs	r1, r3, r5
   12c68:	blt	12c88 <table_compare_llong@@Base+0x50>
   12c6c:	cmp	r4, r2
   12c70:	sbcs	r3, r5, r3
   12c74:	mvnlt	r0, #0
   12c78:	movge	r0, #0
   12c7c:	pop	{r4, r5, pc}
   12c80:	mov	r0, #1
   12c84:	bx	lr
   12c88:	mov	r0, #1
   12c8c:	pop	{r4, r5, pc}

00012c90 <table_compare_int64@@Base>:
   12c90:	b	12c38 <table_compare_llong@@Base>

00012c94 <table_compare_ullong@@Base>:
   12c94:	cmp	r0, #0
   12c98:	bne	12ca8 <table_compare_ullong@@Base+0x14>
   12c9c:	adds	r0, r1, #0
   12ca0:	mvnne	r0, #0
   12ca4:	bx	lr
   12ca8:	cmp	r1, #0
   12cac:	beq	12ccc <table_compare_ullong@@Base+0x38>
   12cb0:	ldr	r2, [r0]
   12cb4:	ldr	r3, [r1]
   12cb8:	cmp	r2, r3
   12cbc:	bhi	12ccc <table_compare_ullong@@Base+0x38>
   12cc0:	mvncc	r0, #0
   12cc4:	movcs	r0, #0
   12cc8:	bx	lr
   12ccc:	mov	r0, #1
   12cd0:	bx	lr

00012cd4 <table_compare_ulong@@Base>:
   12cd4:	b	12c94 <table_compare_ullong@@Base>

00012cd8 <table_compare_float@@Base>:
   12cd8:	cmp	r0, #0
   12cdc:	bne	12cec <table_compare_float@@Base+0x14>
   12ce0:	adds	r0, r1, #0
   12ce4:	mvnne	r0, #0
   12ce8:	bx	lr
   12cec:	cmp	r1, #0
   12cf0:	beq	12d14 <table_compare_float@@Base+0x3c>
   12cf4:	vldr	s14, [r0]
   12cf8:	vldr	s15, [r1]
   12cfc:	vcmpe.f32	s14, s15
   12d00:	vmrs	APSR_nzcv, fpscr
   12d04:	bgt	12d14 <table_compare_float@@Base+0x3c>
   12d08:	mvnmi	r0, #0
   12d0c:	movpl	r0, #0
   12d10:	bx	lr
   12d14:	mov	r0, #1
   12d18:	bx	lr

00012d1c <table_compare_double@@Base>:
   12d1c:	cmp	r0, #0
   12d20:	bne	12d30 <table_compare_double@@Base+0x14>
   12d24:	adds	r0, r1, #0
   12d28:	mvnne	r0, #0
   12d2c:	bx	lr
   12d30:	cmp	r1, #0
   12d34:	beq	12d58 <table_compare_double@@Base+0x3c>
   12d38:	vldr	d6, [r0]
   12d3c:	vldr	d7, [r1]
   12d40:	vcmpe.f64	d6, d7
   12d44:	vmrs	APSR_nzcv, fpscr
   12d48:	bgt	12d58 <table_compare_double@@Base+0x3c>
   12d4c:	mvnmi	r0, #0
   12d50:	movpl	r0, #0
   12d54:	bx	lr
   12d58:	mov	r0, #1
   12d5c:	bx	lr

00012d60 <table_compare_ldouble@@Base>:
   12d60:	cmp	r0, #0
   12d64:	bne	12d74 <table_compare_ldouble@@Base+0x14>
   12d68:	adds	r0, r1, #0
   12d6c:	mvnne	r0, #0
   12d70:	bx	lr
   12d74:	cmp	r1, #0
   12d78:	beq	12d9c <table_compare_ldouble@@Base+0x3c>
   12d7c:	vldr	d6, [r0]
   12d80:	vldr	d7, [r1]
   12d84:	vcmpe.f64	d6, d7
   12d88:	vmrs	APSR_nzcv, fpscr
   12d8c:	bgt	12d9c <table_compare_ldouble@@Base+0x3c>
   12d90:	mvnmi	r0, #0
   12d94:	movpl	r0, #0
   12d98:	bx	lr
   12d9c:	mov	r0, #1
   12da0:	bx	lr

00012da4 <table_compare_uchar@@Base>:
   12da4:	cmp	r0, #0
   12da8:	bne	12db8 <table_compare_uchar@@Base+0x14>
   12dac:	adds	r0, r1, #0
   12db0:	mvnne	r0, #0
   12db4:	bx	lr
   12db8:	cmp	r1, #0
   12dbc:	beq	12ddc <table_compare_uchar@@Base+0x38>
   12dc0:	ldrb	r2, [r0]
   12dc4:	ldrb	r3, [r1]
   12dc8:	cmp	r2, r3
   12dcc:	bhi	12ddc <table_compare_uchar@@Base+0x38>
   12dd0:	mvncc	r0, #0
   12dd4:	movcs	r0, #0
   12dd8:	bx	lr
   12ddc:	mov	r0, #1
   12de0:	bx	lr

00012de4 <table_compare_char@@Base>:
   12de4:	b	12da4 <table_compare_uchar@@Base>

00012de8 <table_compare_uint8@@Base>:
   12de8:	b	12da4 <table_compare_uchar@@Base>

00012dec <table_compare_ptr@@Base>:
   12dec:	cmp	r0, r1
   12df0:	bhi	12e00 <table_compare_ptr@@Base+0x14>
   12df4:	mvncc	r0, #0
   12df8:	movcs	r0, #0
   12dfc:	bx	lr
   12e00:	mov	r0, #1
   12e04:	bx	lr

00012e08 <table_compare_string@@Base>:
   12e08:	cmp	r0, #0
   12e0c:	bne	12e1c <table_compare_string@@Base+0x14>
   12e10:	adds	r0, r1, #0
   12e14:	mvnne	r0, #0
   12e18:	bx	lr
   12e1c:	cmp	r1, #0
   12e20:	beq	12e28 <table_compare_string@@Base+0x20>
   12e24:	b	11ae4 <strcmp@plt>
   12e28:	mov	r0, #1
   12e2c:	bx	lr

00012e30 <table_get_default_compare_function_for_data_type@@Base>:
   12e30:	cmp	r0, #23
   12e34:	ldrls	r3, [pc, #8]	; 12e44 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12e38:	ldrls	r0, [r3, r0, lsl #2]
   12e3c:	movhi	r0, #0
   12e40:	bx	lr
   12e44:	andeq	r4, r1, r4, lsr r3

00012e48 <table_get@@Base>:
   12e48:	push	{r4, lr}
   12e4c:	bl	1400c <table_get_cell_ptr@@Base>
   12e50:	ldr	r0, [r0]
   12e54:	pop	{r4, pc}

00012e58 <table_get_bool@@Base>:
   12e58:	push	{r4, lr}
   12e5c:	bl	12e48 <table_get@@Base>
   12e60:	ldrb	r0, [r0]
   12e64:	pop	{r4, pc}

00012e68 <table_get_int8@@Base>:
   12e68:	push	{r4, lr}
   12e6c:	bl	12e48 <table_get@@Base>
   12e70:	ldrsb	r0, [r0]
   12e74:	pop	{r4, pc}

00012e78 <table_get_int32@@Base>:
   12e78:	push	{r4, lr}
   12e7c:	bl	12e48 <table_get@@Base>
   12e80:	ldr	r0, [r0]
   12e84:	pop	{r4, pc}

00012e88 <table_get_int@@Base>:
   12e88:	b	12e78 <table_get_int32@@Base>

00012e8c <table_get_uint32@@Base>:
   12e8c:	push	{r4, lr}
   12e90:	bl	12e48 <table_get@@Base>
   12e94:	ldr	r0, [r0]
   12e98:	pop	{r4, pc}

00012e9c <table_get_uint@@Base>:
   12e9c:	b	12e8c <table_get_uint32@@Base>

00012ea0 <table_get_short@@Base>:
   12ea0:	push	{r4, lr}
   12ea4:	bl	12e48 <table_get@@Base>
   12ea8:	ldrsh	r0, [r0]
   12eac:	pop	{r4, pc}

00012eb0 <table_get_int16@@Base>:
   12eb0:	b	12ea0 <table_get_short@@Base>

00012eb4 <table_get_ushort@@Base>:
   12eb4:	push	{r4, lr}
   12eb8:	bl	12e48 <table_get@@Base>
   12ebc:	ldrh	r0, [r0]
   12ec0:	pop	{r4, pc}

00012ec4 <table_get_uint16@@Base>:
   12ec4:	b	12eb4 <table_get_ushort@@Base>

00012ec8 <table_get_long@@Base>:
   12ec8:	push	{r4, lr}
   12ecc:	bl	12e48 <table_get@@Base>
   12ed0:	ldr	r0, [r0]
   12ed4:	pop	{r4, pc}

00012ed8 <table_get_ulong@@Base>:
   12ed8:	push	{r4, lr}
   12edc:	bl	12e48 <table_get@@Base>
   12ee0:	ldr	r0, [r0]
   12ee4:	pop	{r4, pc}

00012ee8 <table_get_llong@@Base>:
   12ee8:	push	{r4, lr}
   12eec:	bl	12e48 <table_get@@Base>
   12ef0:	ldrd	r0, [r0]
   12ef4:	pop	{r4, pc}

00012ef8 <table_get_int64@@Base>:
   12ef8:	b	12ee8 <table_get_llong@@Base>

00012efc <table_get_ullong@@Base>:
   12efc:	push	{r4, lr}
   12f00:	bl	12e48 <table_get@@Base>
   12f04:	ldrd	r0, [r0]
   12f08:	pop	{r4, pc}

00012f0c <table_get_uint64@@Base>:
   12f0c:	b	12efc <table_get_ullong@@Base>

00012f10 <table_get_float@@Base>:
   12f10:	push	{r4, lr}
   12f14:	bl	12e48 <table_get@@Base>
   12f18:	vldr	s0, [r0]
   12f1c:	pop	{r4, pc}

00012f20 <table_get_double@@Base>:
   12f20:	push	{r4, lr}
   12f24:	bl	12e48 <table_get@@Base>
   12f28:	vldr	d0, [r0]
   12f2c:	pop	{r4, pc}

00012f30 <table_get_ldouble@@Base>:
   12f30:	push	{r4, lr}
   12f34:	bl	12e48 <table_get@@Base>
   12f38:	vldr	d0, [r0]
   12f3c:	pop	{r4, pc}

00012f40 <table_get_uchar@@Base>:
   12f40:	push	{r4, lr}
   12f44:	bl	12e48 <table_get@@Base>
   12f48:	ldrb	r0, [r0]
   12f4c:	pop	{r4, pc}

00012f50 <table_get_char@@Base>:
   12f50:	b	12f40 <table_get_uchar@@Base>

00012f54 <table_get_uint8@@Base>:
   12f54:	b	12f40 <table_get_uchar@@Base>

00012f58 <table_get_string@@Base>:
   12f58:	b	12e48 <table_get@@Base>

00012f5c <table_get_ptr@@Base>:
   12f5c:	b	12e48 <table_get@@Base>

00012f60 <table_row_init@@Base>:
   12f60:	push	{r4, r5, r6, lr}
   12f64:	mov	r5, r1
   12f68:	ldr	r4, [r0, #16]
   12f6c:	ldr	r0, [r0, #12]
   12f70:	lsl	r0, r0, #2
   12f74:	bl	11b20 <malloc@plt>
   12f78:	str	r0, [r4, r5, lsl #2]
   12f7c:	pop	{r4, r5, r6, pc}

00012f80 <table_row_destroy@@Base>:
   12f80:	push	{r4, r5, r6, r7, r8, lr}
   12f84:	mov	r6, r0
   12f88:	mov	r5, r1
   12f8c:	bl	126f8 <table_get_column_length@@Base>
   12f90:	ldr	r7, [r6, #16]
   12f94:	mov	r4, #0
   12f98:	mov	r8, r0
   12f9c:	cmp	r4, r8
   12fa0:	blt	12fb8 <table_row_destroy@@Base+0x38>
   12fa4:	ldr	r0, [r7, r5, lsl #2]
   12fa8:	cmp	r0, #0
   12fac:	popeq	{r4, r5, r6, r7, r8, pc}
   12fb0:	pop	{r4, r5, r6, r7, r8, lr}
   12fb4:	b	11af0 <free@plt>
   12fb8:	mov	r2, r4
   12fbc:	mov	r1, r5
   12fc0:	mov	r0, r6
   12fc4:	bl	14038 <table_cell_destroy@@Base>
   12fc8:	add	r4, r4, #1
   12fcc:	b	12f9c <table_row_destroy@@Base+0x1c>

00012fd0 <table_get_row_length@@Base>:
   12fd0:	ldr	r0, [r0, #20]
   12fd4:	bx	lr

00012fd8 <table_add_row@@Base>:
   12fd8:	push	{r4, r5, r6, r7, r8, lr}
   12fdc:	mov	r4, r0
   12fe0:	ldr	r5, [r0, #24]
   12fe4:	ldr	r0, [r0, #20]
   12fe8:	mov	r1, r5
   12fec:	bl	14294 <table_cell_nullify@@Base+0x218>
   12ff0:	cmp	r1, #0
   12ff4:	bne	13014 <table_add_row@@Base+0x3c>
   12ff8:	ldr	r1, [r4, #28]
   12ffc:	ldr	r0, [r4, #16]
   13000:	add	r1, r5, r1
   13004:	str	r1, [r4, #28]
   13008:	lsl	r1, r1, #2
   1300c:	bl	11b08 <realloc@plt>
   13010:	str	r0, [r4, #16]
   13014:	mov	r0, r4
   13018:	ldr	r6, [r4, #20]
   1301c:	bl	126f8 <table_get_column_length@@Base>
   13020:	mov	r1, r6
   13024:	mov	r5, #0
   13028:	mov	r7, r0
   1302c:	mov	r0, r4
   13030:	bl	12f60 <table_row_init@@Base>
   13034:	cmp	r7, r5
   13038:	bgt	13060 <table_add_row@@Base+0x88>
   1303c:	mov	r0, r4
   13040:	mov	r3, #2
   13044:	mvn	r2, #0
   13048:	ldr	r1, [r4, #20]
   1304c:	bl	12620 <table_notify@@Base>
   13050:	ldr	r0, [r4, #20]
   13054:	add	r3, r0, #1
   13058:	str	r3, [r4, #20]
   1305c:	pop	{r4, r5, r6, r7, r8, pc}
   13060:	mov	r2, r5
   13064:	mov	r1, r6
   13068:	mov	r0, r4
   1306c:	bl	14024 <table_cell_init@@Base>
   13070:	add	r5, r5, #1
   13074:	b	13034 <table_add_row@@Base+0x5c>

00013078 <table_remove_row@@Base>:
   13078:	push	{r4, r5, r6, r7, r8, lr}
   1307c:	mov	r4, r0
   13080:	mov	r5, r1
   13084:	ldr	r7, [r0, #20]
   13088:	bl	126f8 <table_get_column_length@@Base>
   1308c:	mov	r6, #0
   13090:	mov	r8, r0
   13094:	cmp	r8, r6
   13098:	bgt	13120 <table_remove_row@@Base+0xa8>
   1309c:	ldr	r3, [r4, #16]
   130a0:	lsl	r6, r5, #2
   130a4:	ldr	r0, [r3, r5, lsl #2]
   130a8:	cmp	r0, #0
   130ac:	beq	130b4 <table_remove_row@@Base+0x3c>
   130b0:	bl	11af0 <free@plt>
   130b4:	mov	r3, r5
   130b8:	sub	r7, r7, #1
   130bc:	cmp	r3, r7
   130c0:	add	r2, r6, #4
   130c4:	blt	1315c <table_remove_row@@Base+0xe4>
   130c8:	ldr	r0, [r4, #20]
   130cc:	ldr	r6, [r4, #24]
   130d0:	sub	r0, r0, #1
   130d4:	str	r0, [r4, #20]
   130d8:	mov	r1, r6
   130dc:	bl	14294 <table_cell_nullify@@Base+0x218>
   130e0:	cmp	r1, #0
   130e4:	bne	13104 <table_remove_row@@Base+0x8c>
   130e8:	ldr	r1, [r4, #28]
   130ec:	ldr	r0, [r4, #16]
   130f0:	sub	r1, r1, r6
   130f4:	str	r1, [r4, #28]
   130f8:	lsl	r1, r1, #2
   130fc:	bl	11b08 <realloc@plt>
   13100:	str	r0, [r4, #16]
   13104:	mov	r0, r4
   13108:	mov	r3, #4
   1310c:	mvn	r2, #0
   13110:	mov	r1, r5
   13114:	bl	12620 <table_notify@@Base>
   13118:	mov	r0, #0
   1311c:	pop	{r4, r5, r6, r7, r8, pc}
   13120:	mov	r1, r6
   13124:	mov	r0, r4
   13128:	bl	12750 <table_get_column_data_type@@Base>
   1312c:	cmp	r0, #23
   13130:	beq	13154 <table_remove_row@@Base+0xdc>
   13134:	mov	r2, r6
   13138:	mov	r1, r5
   1313c:	mov	r0, r4
   13140:	bl	1400c <table_get_cell_ptr@@Base>
   13144:	ldr	r0, [r0]
   13148:	cmp	r0, #0
   1314c:	beq	13154 <table_remove_row@@Base+0xdc>
   13150:	bl	11af0 <free@plt>
   13154:	add	r6, r6, #1
   13158:	b	13094 <table_remove_row@@Base+0x1c>
   1315c:	ldr	r1, [r4, #16]
   13160:	add	r3, r3, #1
   13164:	ldr	r0, [r1, r2]
   13168:	str	r0, [r1, r6]
   1316c:	mov	r6, r2
   13170:	b	130bc <table_remove_row@@Base+0x44>

00013174 <table_get_row_ptr@@Base>:
   13174:	ldr	r0, [r0, #16]
   13178:	add	r0, r0, r1, lsl #2
   1317c:	bx	lr

00013180 <table_set_row_ptr@@Base>:
   13180:	ldr	r3, [r0, #16]
   13184:	ldr	r2, [r2]
   13188:	str	r2, [r3, r1, lsl #2]
   1318c:	bx	lr

00013190 <table_set@@Base>:
   13190:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13194:	mov	r6, r0
   13198:	mov	r8, r1
   1319c:	mov	r7, r2
   131a0:	ldr	r9, [sp, #32]
   131a4:	mov	r5, r3
   131a8:	bl	1400c <table_get_cell_ptr@@Base>
   131ac:	mov	r1, r7
   131b0:	mov	r4, r0
   131b4:	mov	r0, r6
   131b8:	bl	129e0 <table_get_col_ptr@@Base>
   131bc:	cmp	r9, #23
   131c0:	ldrls	pc, [pc, r9, lsl #2]
   131c4:	b	1329c <table_set@@Base+0x10c>
   131c8:	andeq	r3, r1, r4, ror #4
   131cc:	andeq	r3, r1, r4, lsr #5
   131d0:			; <UNDEFINED> instruction: 0x000132b0
   131d4:			; <UNDEFINED> instruction: 0x000132bc
   131d8:	andeq	r3, r1, r8, asr #5
   131dc:	andeq	r3, r1, ip, lsl r3
   131e0:	andeq	r3, r1, r8, lsr #6
   131e4:	andeq	r3, r1, r4, lsr r3
   131e8:	andeq	r3, r1, r0, asr #6
   131ec:	andeq	r3, r1, r0, lsl #7
   131f0:	andeq	r3, r1, r0, lsr #7
   131f4:	andeq	r3, r1, ip, lsr #7
   131f8:			; <UNDEFINED> instruction: 0x000133b8
   131fc:	andeq	r3, r1, r4, asr #7
   13200:	ldrdeq	r3, [r1], -r0
   13204:	ldrdeq	r3, [r1], -ip
   13208:	andeq	r3, r1, r8, ror #7
   1320c:	strdeq	r3, [r1], -r4
   13210:	andeq	r3, r1, r0, lsl #8
   13214:	andeq	r3, r1, r4, asr #8
   13218:	andeq	r3, r1, r0, asr r4
   1321c:	andeq	r3, r1, ip, lsl #8
   13220:	andeq	r3, r1, r8, lsr #4
   13224:	andeq	r3, r1, ip, asr r4
   13228:	ldr	r3, [r0, #4]
   1322c:	cmp	r3, #22
   13230:	bne	1329c <table_set@@Base+0x10c>
   13234:	ldr	r3, [r4]
   13238:	cmp	r3, #0
   1323c:	bne	1324c <table_set@@Base+0xbc>
   13240:	mov	r0, #1
   13244:	bl	11b20 <malloc@plt>
   13248:	str	r0, [r4]
   1324c:	ldr	r3, [r4]
   13250:	cmp	r3, #0
   13254:	ldrbne	r2, [r5]
   13258:	strbne	r2, [r3]
   1325c:	bne	13300 <table_set@@Base+0x170>
   13260:	b	1329c <table_set@@Base+0x10c>
   13264:	ldr	r3, [r0, #4]
   13268:	cmp	r3, #0
   1326c:	bne	1329c <table_set@@Base+0x10c>
   13270:	ldr	r3, [r4]
   13274:	cmp	r3, #0
   13278:	bne	13288 <table_set@@Base+0xf8>
   1327c:	mov	r0, #4
   13280:	bl	11b20 <malloc@plt>
   13284:	str	r0, [r4]
   13288:	ldr	r3, [r4]
   1328c:	cmp	r3, #0
   13290:	ldrne	r2, [r5]
   13294:	strne	r2, [r3]
   13298:	bne	13300 <table_set@@Base+0x170>
   1329c:	mvn	r0, #0
   132a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   132a4:	ldr	r3, [r0, #4]
   132a8:	cmp	r3, #1
   132ac:	b	1326c <table_set@@Base+0xdc>
   132b0:	ldr	r3, [r0, #4]
   132b4:	cmp	r3, #2
   132b8:	b	13230 <table_set@@Base+0xa0>
   132bc:	ldr	r3, [r0, #4]
   132c0:	cmp	r3, #3
   132c4:	b	13230 <table_set@@Base+0xa0>
   132c8:	ldr	r3, [r0, #4]
   132cc:	cmp	r3, #4
   132d0:	bne	1329c <table_set@@Base+0x10c>
   132d4:	ldr	r3, [r4]
   132d8:	cmp	r3, #0
   132dc:	bne	132ec <table_set@@Base+0x15c>
   132e0:	mov	r0, #2
   132e4:	bl	11b20 <malloc@plt>
   132e8:	str	r0, [r4]
   132ec:	ldr	r3, [r4]
   132f0:	cmp	r3, #0
   132f4:	beq	1329c <table_set@@Base+0x10c>
   132f8:	ldrh	r2, [r5]
   132fc:	strh	r2, [r3]
   13300:	mov	r0, r6
   13304:	mov	r3, #1
   13308:	mov	r2, r7
   1330c:	mov	r1, r8
   13310:	bl	12620 <table_notify@@Base>
   13314:	mov	r0, #0
   13318:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1331c:	ldr	r3, [r0, #4]
   13320:	cmp	r3, #5
   13324:	b	132d0 <table_set@@Base+0x140>
   13328:	ldr	r3, [r0, #4]
   1332c:	cmp	r3, #6
   13330:	b	1326c <table_set@@Base+0xdc>
   13334:	ldr	r3, [r0, #4]
   13338:	cmp	r3, #7
   1333c:	b	1326c <table_set@@Base+0xdc>
   13340:	ldr	r0, [r0, #4]
   13344:	cmp	r0, #8
   13348:	bne	1329c <table_set@@Base+0x10c>
   1334c:	ldr	r3, [r4]
   13350:	cmp	r3, #0
   13354:	bne	13360 <table_set@@Base+0x1d0>
   13358:	bl	11b20 <malloc@plt>
   1335c:	str	r0, [r4]
   13360:	ldr	r3, [r4]
   13364:	cmp	r3, #0
   13368:	beq	1329c <table_set@@Base+0x10c>
   1336c:	ldr	r2, [r5]
   13370:	str	r2, [r3]
   13374:	ldr	r2, [r5, #4]
   13378:	str	r2, [r3, #4]
   1337c:	b	13300 <table_set@@Base+0x170>
   13380:	ldr	r3, [r0, #4]
   13384:	cmp	r3, #9
   13388:	bne	1329c <table_set@@Base+0x10c>
   1338c:	ldr	r3, [r4]
   13390:	cmp	r3, #0
   13394:	bne	13360 <table_set@@Base+0x1d0>
   13398:	mov	r0, #8
   1339c:	b	13358 <table_set@@Base+0x1c8>
   133a0:	ldr	r3, [r0, #4]
   133a4:	cmp	r3, #10
   133a8:	b	132d0 <table_set@@Base+0x140>
   133ac:	ldr	r3, [r0, #4]
   133b0:	cmp	r3, #11
   133b4:	b	132d0 <table_set@@Base+0x140>
   133b8:	ldr	r3, [r0, #4]
   133bc:	cmp	r3, #12
   133c0:	b	1326c <table_set@@Base+0xdc>
   133c4:	ldr	r3, [r0, #4]
   133c8:	cmp	r3, #13
   133cc:	b	1326c <table_set@@Base+0xdc>
   133d0:	ldr	r3, [r0, #4]
   133d4:	cmp	r3, #14
   133d8:	b	13388 <table_set@@Base+0x1f8>
   133dc:	ldr	r3, [r0, #4]
   133e0:	cmp	r3, #15
   133e4:	b	13388 <table_set@@Base+0x1f8>
   133e8:	ldr	r3, [r0, #4]
   133ec:	cmp	r3, #16
   133f0:	b	1326c <table_set@@Base+0xdc>
   133f4:	ldr	r3, [r0, #4]
   133f8:	cmp	r3, #17
   133fc:	b	13388 <table_set@@Base+0x1f8>
   13400:	ldr	r3, [r0, #4]
   13404:	cmp	r3, #18
   13408:	b	13388 <table_set@@Base+0x1f8>
   1340c:	ldr	r3, [r0, #4]
   13410:	cmp	r3, #21
   13414:	bne	1329c <table_set@@Base+0x10c>
   13418:	mov	r0, r5
   1341c:	bl	11b44 <strlen@plt>
   13420:	add	r1, r0, #1
   13424:	ldr	r0, [r4]
   13428:	bl	11b08 <realloc@plt>
   1342c:	cmp	r0, #0
   13430:	str	r0, [r4]
   13434:	beq	1329c <table_set@@Base+0x10c>
   13438:	mov	r1, r5
   1343c:	bl	11b14 <strcpy@plt>
   13440:	b	13300 <table_set@@Base+0x170>
   13444:	ldr	r3, [r0, #4]
   13448:	cmp	r3, #19
   1344c:	b	13230 <table_set@@Base+0xa0>
   13450:	ldr	r3, [r0, #4]
   13454:	cmp	r3, #20
   13458:	b	13230 <table_set@@Base+0xa0>
   1345c:	ldr	r3, [r0, #4]
   13460:	cmp	r3, #23
   13464:	streq	r5, [r4]
   13468:	beq	13300 <table_set@@Base+0x170>
   1346c:	b	1329c <table_set@@Base+0x10c>

00013470 <table_set_bool@@Base>:
   13470:	push	{r0, r1, r2, r3, r4, lr}
   13474:	add	ip, sp, #16
   13478:	strb	r3, [ip, #-1]!
   1347c:	mov	r3, #22
   13480:	str	r3, [sp]
   13484:	mov	r3, ip
   13488:	bl	13190 <table_set@@Base>
   1348c:	add	sp, sp, #20
   13490:	pop	{pc}		; (ldr pc, [sp], #4)

00013494 <table_set_int@@Base>:
   13494:	push	{r0, r1, r2, r3, r4, lr}
   13498:	add	ip, sp, #16
   1349c:	str	r3, [ip, #-4]!
   134a0:	mov	r3, #0
   134a4:	str	r3, [sp]
   134a8:	mov	r3, ip
   134ac:	bl	13190 <table_set@@Base>
   134b0:	add	sp, sp, #20
   134b4:	pop	{pc}		; (ldr pc, [sp], #4)

000134b8 <table_set_uint@@Base>:
   134b8:	push	{r0, r1, r2, r3, r4, lr}
   134bc:	add	ip, sp, #16
   134c0:	str	r3, [ip, #-4]!
   134c4:	mov	r3, #1
   134c8:	str	r3, [sp]
   134cc:	mov	r3, ip
   134d0:	bl	13190 <table_set@@Base>
   134d4:	add	sp, sp, #20
   134d8:	pop	{pc}		; (ldr pc, [sp], #4)

000134dc <table_set_int8@@Base>:
   134dc:	push	{r0, r1, r2, r3, r4, lr}
   134e0:	add	ip, sp, #16
   134e4:	strb	r3, [ip, #-1]!
   134e8:	mov	r3, #2
   134ec:	str	r3, [sp]
   134f0:	mov	r3, ip
   134f4:	bl	13190 <table_set@@Base>
   134f8:	add	sp, sp, #20
   134fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013500 <table_set_uint8@@Base>:
   13500:	push	{r0, r1, r2, r3, r4, lr}
   13504:	add	ip, sp, #16
   13508:	strb	r3, [ip, #-1]!
   1350c:	mov	r3, #3
   13510:	str	r3, [sp]
   13514:	mov	r3, ip
   13518:	bl	13190 <table_set@@Base>
   1351c:	add	sp, sp, #20
   13520:	pop	{pc}		; (ldr pc, [sp], #4)

00013524 <table_set_int16@@Base>:
   13524:	push	{r0, r1, r2, r3, r4, lr}
   13528:	add	ip, sp, #16
   1352c:	strh	r3, [ip, #-2]!
   13530:	mov	r3, #4
   13534:	str	r3, [sp]
   13538:	mov	r3, ip
   1353c:	bl	13190 <table_set@@Base>
   13540:	add	sp, sp, #20
   13544:	pop	{pc}		; (ldr pc, [sp], #4)

00013548 <table_set_uint16@@Base>:
   13548:	push	{r0, r1, r2, r3, r4, lr}
   1354c:	add	ip, sp, #16
   13550:	strh	r3, [ip, #-2]!
   13554:	mov	r3, #5
   13558:	str	r3, [sp]
   1355c:	mov	r3, ip
   13560:	bl	13190 <table_set@@Base>
   13564:	add	sp, sp, #20
   13568:	pop	{pc}		; (ldr pc, [sp], #4)

0001356c <table_set_int32@@Base>:
   1356c:	push	{r0, r1, r2, r3, r4, lr}
   13570:	add	ip, sp, #16
   13574:	str	r3, [ip, #-4]!
   13578:	mov	r3, #6
   1357c:	str	r3, [sp]
   13580:	mov	r3, ip
   13584:	bl	13190 <table_set@@Base>
   13588:	add	sp, sp, #20
   1358c:	pop	{pc}		; (ldr pc, [sp], #4)

00013590 <table_set_uint32@@Base>:
   13590:	push	{r0, r1, r2, r3, r4, lr}
   13594:	add	ip, sp, #16
   13598:	str	r3, [ip, #-4]!
   1359c:	mov	r3, #7
   135a0:	str	r3, [sp]
   135a4:	mov	r3, ip
   135a8:	bl	13190 <table_set@@Base>
   135ac:	add	sp, sp, #20
   135b0:	pop	{pc}		; (ldr pc, [sp], #4)

000135b4 <table_set_int64@@Base>:
   135b4:	mov	r3, #8
   135b8:	push	{r0, r1, r2, lr}
   135bc:	str	r3, [sp]
   135c0:	add	r3, sp, #16
   135c4:	bl	13190 <table_set@@Base>
   135c8:	add	sp, sp, #12
   135cc:	pop	{pc}		; (ldr pc, [sp], #4)

000135d0 <table_set_uint64@@Base>:
   135d0:	mov	r3, #9
   135d4:	push	{r0, r1, r2, lr}
   135d8:	str	r3, [sp]
   135dc:	add	r3, sp, #16
   135e0:	bl	13190 <table_set@@Base>
   135e4:	add	sp, sp, #12
   135e8:	pop	{pc}		; (ldr pc, [sp], #4)

000135ec <table_set_short@@Base>:
   135ec:	push	{r0, r1, r2, r3, r4, lr}
   135f0:	add	ip, sp, #16
   135f4:	strh	r3, [ip, #-2]!
   135f8:	mov	r3, #10
   135fc:	str	r3, [sp]
   13600:	mov	r3, ip
   13604:	bl	13190 <table_set@@Base>
   13608:	add	sp, sp, #20
   1360c:	pop	{pc}		; (ldr pc, [sp], #4)

00013610 <table_set_ushort@@Base>:
   13610:	push	{r0, r1, r2, r3, r4, lr}
   13614:	add	ip, sp, #16
   13618:	strh	r3, [ip, #-2]!
   1361c:	mov	r3, #11
   13620:	str	r3, [sp]
   13624:	mov	r3, ip
   13628:	bl	13190 <table_set@@Base>
   1362c:	add	sp, sp, #20
   13630:	pop	{pc}		; (ldr pc, [sp], #4)

00013634 <table_set_long@@Base>:
   13634:	push	{r0, r1, r2, r3, r4, lr}
   13638:	add	ip, sp, #16
   1363c:	str	r3, [ip, #-4]!
   13640:	mov	r3, #12
   13644:	str	r3, [sp]
   13648:	mov	r3, ip
   1364c:	bl	13190 <table_set@@Base>
   13650:	add	sp, sp, #20
   13654:	pop	{pc}		; (ldr pc, [sp], #4)

00013658 <table_set_ulong@@Base>:
   13658:	push	{r0, r1, r2, r3, r4, lr}
   1365c:	add	ip, sp, #16
   13660:	str	r3, [ip, #-4]!
   13664:	mov	r3, #13
   13668:	str	r3, [sp]
   1366c:	mov	r3, ip
   13670:	bl	13190 <table_set@@Base>
   13674:	add	sp, sp, #20
   13678:	pop	{pc}		; (ldr pc, [sp], #4)

0001367c <table_set_llong@@Base>:
   1367c:	mov	r3, #14
   13680:	push	{r0, r1, r2, lr}
   13684:	str	r3, [sp]
   13688:	add	r3, sp, #16
   1368c:	bl	13190 <table_set@@Base>
   13690:	add	sp, sp, #12
   13694:	pop	{pc}		; (ldr pc, [sp], #4)

00013698 <table_set_ullong@@Base>:
   13698:	mov	r3, #15
   1369c:	push	{r0, r1, r2, lr}
   136a0:	str	r3, [sp]
   136a4:	add	r3, sp, #16
   136a8:	bl	13190 <table_set@@Base>
   136ac:	add	sp, sp, #12
   136b0:	pop	{pc}		; (ldr pc, [sp], #4)

000136b4 <table_set_float@@Base>:
   136b4:	push	{r0, r1, r2, r3, r4, lr}
   136b8:	add	r3, sp, #16
   136bc:	mov	ip, #16
   136c0:	vstmdb	r3!, {s0}
   136c4:	str	ip, [sp]
   136c8:	bl	13190 <table_set@@Base>
   136cc:	add	sp, sp, #20
   136d0:	pop	{pc}		; (ldr pc, [sp], #4)

000136d4 <table_set_double@@Base>:
   136d4:	push	{r0, r1, r2, r3, r4, lr}
   136d8:	add	r3, sp, #16
   136dc:	mov	ip, #17
   136e0:	vstmdb	r3!, {d0}
   136e4:	str	ip, [sp]
   136e8:	bl	13190 <table_set@@Base>
   136ec:	add	sp, sp, #20
   136f0:	pop	{pc}		; (ldr pc, [sp], #4)

000136f4 <table_set_ldouble@@Base>:
   136f4:	push	{r0, r1, r2, r3, r4, lr}
   136f8:	add	r3, sp, #16
   136fc:	mov	ip, #18
   13700:	vstmdb	r3!, {d0}
   13704:	str	ip, [sp]
   13708:	bl	13190 <table_set@@Base>
   1370c:	add	sp, sp, #20
   13710:	pop	{pc}		; (ldr pc, [sp], #4)

00013714 <table_set_string@@Base>:
   13714:	mov	ip, #21
   13718:	push	{r0, r1, r2, lr}
   1371c:	str	ip, [sp]
   13720:	bl	13190 <table_set@@Base>
   13724:	add	sp, sp, #12
   13728:	pop	{pc}		; (ldr pc, [sp], #4)

0001372c <table_set_char@@Base>:
   1372c:	push	{r0, r1, r2, r3, r4, lr}
   13730:	add	ip, sp, #16
   13734:	strb	r3, [ip, #-1]!
   13738:	mov	r3, #19
   1373c:	str	r3, [sp]
   13740:	mov	r3, ip
   13744:	bl	13190 <table_set@@Base>
   13748:	add	sp, sp, #20
   1374c:	pop	{pc}		; (ldr pc, [sp], #4)

00013750 <table_set_uchar@@Base>:
   13750:	push	{r0, r1, r2, r3, r4, lr}
   13754:	add	ip, sp, #16
   13758:	strb	r3, [ip, #-1]!
   1375c:	mov	r3, #20
   13760:	str	r3, [sp]
   13764:	mov	r3, ip
   13768:	bl	13190 <table_set@@Base>
   1376c:	add	sp, sp, #20
   13770:	pop	{pc}		; (ldr pc, [sp], #4)

00013774 <table_set_ptr@@Base>:
   13774:	mov	ip, #23
   13778:	push	{r0, r1, r2, lr}
   1377c:	str	ip, [sp]
   13780:	bl	13190 <table_set@@Base>
   13784:	add	sp, sp, #12
   13788:	pop	{pc}		; (ldr pc, [sp], #4)

0001378c <table_cell_to_buffer@@Base>:
   1378c:	push	{r4, r5, r6, r7, lr}
   13790:	sub	sp, sp, #20
   13794:	mov	r7, r1
   13798:	mov	r1, r2
   1379c:	str	r2, [sp, #12]
   137a0:	mov	r6, r0
   137a4:	mov	r4, r3
   137a8:	ldr	r5, [sp, #40]	; 0x28
   137ac:	bl	12750 <table_get_column_data_type@@Base>
   137b0:	ldr	r2, [sp, #12]
   137b4:	cmp	r0, #23
   137b8:	ldrls	pc, [pc, r0, lsl #2]
   137bc:	b	138dc <table_cell_to_buffer@@Base+0x150>
   137c0:	andeq	r3, r1, r0, lsr #16
   137c4:	andeq	r3, r1, r8, lsr r8
   137c8:	andeq	r3, r1, ip, asr r8
   137cc:	andeq	r3, r1, ip, ror #16
   137d0:	andeq	r3, r1, ip, ror r8
   137d4:	andeq	r3, r1, ip, lsl #17
   137d8:	muleq	r1, ip, r8
   137dc:	andeq	r3, r1, ip, lsr #17
   137e0:			; <UNDEFINED> instruction: 0x000138bc
   137e4:	andeq	r3, r1, r8, ror #17
   137e8:	andeq	r3, r1, r0, lsl #18
   137ec:	andeq	r3, r1, r8, lsl r9
   137f0:	andeq	r3, r1, r0, lsr r9
   137f4:	andeq	r3, r1, r8, asr #18
   137f8:	andeq	r3, r1, r0, ror #18
   137fc:	andeq	r3, r1, r0, ror r9
   13800:	muleq	r1, r8, r9
   13804:	andeq	r3, r1, r0, asr #19
   13808:	ldrdeq	r3, [r1], -r8
   1380c:	andeq	r3, r1, r0, lsl #20
   13810:	andeq	r3, r1, r8, lsl sl
   13814:	andeq	r3, r1, r0, lsl #19
   13818:	strdeq	r3, [r1], -r0
   1381c:	andeq	r3, r1, r8, lsr #20
   13820:	mov	r1, r7
   13824:	mov	r0, r6
   13828:	bl	12e88 <table_get_int@@Base>
   1382c:	mov	r3, r0
   13830:	ldr	r2, [pc, #520]	; 13a40 <table_cell_to_buffer@@Base+0x2b4>
   13834:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13838:	mov	r1, r7
   1383c:	mov	r0, r6
   13840:	bl	12e9c <table_get_uint@@Base>
   13844:	ldr	r2, [pc, #504]	; 13a44 <table_cell_to_buffer@@Base+0x2b8>
   13848:	mov	r3, r0
   1384c:	mov	r1, r5
   13850:	mov	r0, r4
   13854:	bl	11b5c <snprintf@plt>
   13858:	b	138dc <table_cell_to_buffer@@Base+0x150>
   1385c:	mov	r1, r7
   13860:	mov	r0, r6
   13864:	bl	12e68 <table_get_int8@@Base>
   13868:	b	1382c <table_cell_to_buffer@@Base+0xa0>
   1386c:	mov	r1, r7
   13870:	mov	r0, r6
   13874:	bl	12f54 <table_get_uint8@@Base>
   13878:	b	13844 <table_cell_to_buffer@@Base+0xb8>
   1387c:	mov	r1, r7
   13880:	mov	r0, r6
   13884:	bl	12eb0 <table_get_int16@@Base>
   13888:	b	1382c <table_cell_to_buffer@@Base+0xa0>
   1388c:	mov	r1, r7
   13890:	mov	r0, r6
   13894:	bl	12ec4 <table_get_uint16@@Base>
   13898:	b	13844 <table_cell_to_buffer@@Base+0xb8>
   1389c:	mov	r1, r7
   138a0:	mov	r0, r6
   138a4:	bl	12e78 <table_get_int32@@Base>
   138a8:	b	1382c <table_cell_to_buffer@@Base+0xa0>
   138ac:	mov	r1, r7
   138b0:	mov	r0, r6
   138b4:	bl	12e8c <table_get_uint32@@Base>
   138b8:	b	13844 <table_cell_to_buffer@@Base+0xb8>
   138bc:	mov	r1, r7
   138c0:	mov	r0, r6
   138c4:	bl	12ef8 <table_get_int64@@Base>
   138c8:	ldr	r2, [pc, #376]	; 13a48 <table_cell_to_buffer@@Base+0x2bc>
   138cc:	strd	r0, [sp]
   138d0:	mov	r1, r5
   138d4:	mov	r0, r4
   138d8:	bl	11b5c <snprintf@plt>
   138dc:	mov	r0, #0
   138e0:	add	sp, sp, #20
   138e4:	pop	{r4, r5, r6, r7, pc}
   138e8:	mov	r1, r7
   138ec:	mov	r0, r6
   138f0:	bl	12f0c <table_get_uint64@@Base>
   138f4:	strd	r0, [sp]
   138f8:	ldr	r2, [pc, #332]	; 13a4c <table_cell_to_buffer@@Base+0x2c0>
   138fc:	b	138d0 <table_cell_to_buffer@@Base+0x144>
   13900:	mov	r1, r7
   13904:	mov	r0, r6
   13908:	bl	12ea0 <table_get_short@@Base>
   1390c:	ldr	r2, [pc, #316]	; 13a50 <table_cell_to_buffer@@Base+0x2c4>
   13910:	mov	r3, r0
   13914:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13918:	mov	r1, r7
   1391c:	mov	r0, r6
   13920:	bl	12eb4 <table_get_ushort@@Base>
   13924:	ldr	r2, [pc, #296]	; 13a54 <table_cell_to_buffer@@Base+0x2c8>
   13928:	mov	r3, r0
   1392c:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13930:	mov	r1, r7
   13934:	mov	r0, r6
   13938:	bl	12ec8 <table_get_long@@Base>
   1393c:	ldr	r2, [pc, #276]	; 13a58 <table_cell_to_buffer@@Base+0x2cc>
   13940:	mov	r3, r0
   13944:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13948:	mov	r1, r7
   1394c:	mov	r0, r6
   13950:	bl	12ed8 <table_get_ulong@@Base>
   13954:	ldr	r2, [pc, #256]	; 13a5c <table_cell_to_buffer@@Base+0x2d0>
   13958:	mov	r3, r0
   1395c:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13960:	mov	r1, r7
   13964:	mov	r0, r6
   13968:	bl	12ee8 <table_get_llong@@Base>
   1396c:	b	138c8 <table_cell_to_buffer@@Base+0x13c>
   13970:	mov	r1, r7
   13974:	mov	r0, r6
   13978:	bl	12efc <table_get_ullong@@Base>
   1397c:	b	138f4 <table_cell_to_buffer@@Base+0x168>
   13980:	mov	r1, r7
   13984:	mov	r0, r6
   13988:	bl	12f58 <table_get_string@@Base>
   1398c:	ldr	r2, [pc, #204]	; 13a60 <table_cell_to_buffer@@Base+0x2d4>
   13990:	mov	r3, r0
   13994:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13998:	mov	r1, r7
   1399c:	mov	r0, r6
   139a0:	bl	12f10 <table_get_float@@Base>
   139a4:	ldr	r2, [pc, #184]	; 13a64 <table_cell_to_buffer@@Base+0x2d8>
   139a8:	vcvt.f64.f32	d0, s0
   139ac:	vstr	d0, [sp]
   139b0:	mov	r1, r5
   139b4:	mov	r0, r4
   139b8:	bl	11b5c <snprintf@plt>
   139bc:	b	138dc <table_cell_to_buffer@@Base+0x150>
   139c0:	mov	r1, r7
   139c4:	mov	r0, r6
   139c8:	bl	12f20 <table_get_double@@Base>
   139cc:	ldr	r2, [pc, #148]	; 13a68 <table_cell_to_buffer@@Base+0x2dc>
   139d0:	vstr	d0, [sp]
   139d4:	b	139b0 <table_cell_to_buffer@@Base+0x224>
   139d8:	mov	r1, r7
   139dc:	mov	r0, r6
   139e0:	bl	12f30 <table_get_ldouble@@Base>
   139e4:	ldr	r2, [pc, #128]	; 13a6c <table_cell_to_buffer@@Base+0x2e0>
   139e8:	vstr	d0, [sp]
   139ec:	b	139b0 <table_cell_to_buffer@@Base+0x224>
   139f0:	mov	r1, r7
   139f4:	mov	r0, r6
   139f8:	bl	12e58 <table_get_bool@@Base>
   139fc:	b	1382c <table_cell_to_buffer@@Base+0xa0>
   13a00:	mov	r1, r7
   13a04:	mov	r0, r6
   13a08:	bl	12f50 <table_get_char@@Base>
   13a0c:	mov	r3, r0
   13a10:	ldr	r2, [pc, #88]	; 13a70 <table_cell_to_buffer@@Base+0x2e4>
   13a14:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13a18:	mov	r1, r7
   13a1c:	mov	r0, r6
   13a20:	bl	12f40 <table_get_uchar@@Base>
   13a24:	b	13a0c <table_cell_to_buffer@@Base+0x280>
   13a28:	mov	r1, r7
   13a2c:	mov	r0, r6
   13a30:	bl	12f5c <table_get_ptr@@Base>
   13a34:	ldr	r2, [pc, #56]	; 13a74 <table_cell_to_buffer@@Base+0x2e8>
   13a38:	mov	r3, r0
   13a3c:	b	1384c <table_cell_to_buffer@@Base+0xc0>
   13a40:	muleq	r1, r4, r3
   13a44:	muleq	r1, r7, r3
   13a48:	muleq	r1, sl, r3
   13a4c:	muleq	r1, pc, r3	; <UNPREDICTABLE>
   13a50:	andeq	r4, r1, r4, lsr #7
   13a54:	andeq	r4, r1, r8, lsr #7
   13a58:	andeq	r4, r1, ip, lsr #7
   13a5c:			; <UNDEFINED> instruction: 0x000143b0
   13a60:			; <UNDEFINED> instruction: 0x000143b4
   13a64:			; <UNDEFINED> instruction: 0x000143b7
   13a68:			; <UNDEFINED> instruction: 0x000143ba
   13a6c:			; <UNDEFINED> instruction: 0x000143be
   13a70:	andeq	r4, r1, r2, asr #7
   13a74:	andeq	r4, r1, r5, asr #7

00013a78 <table_cell_from_buffer@@Base>:
   13a78:	push	{r4, r5, r6, r7, lr}
   13a7c:	mov	r7, r1
   13a80:	sub	sp, sp, #268	; 0x10c
   13a84:	mov	r1, r2
   13a88:	mov	r6, r0
   13a8c:	mov	r5, r2
   13a90:	mov	r4, r3
   13a94:	bl	12750 <table_get_column_data_type@@Base>
   13a98:	cmp	r0, #23
   13a9c:	ldrls	pc, [pc, r0, lsl #2]
   13aa0:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13aa4:	andeq	r3, r1, r4, lsl #22
   13aa8:	andeq	r3, r1, r8, lsr fp
   13aac:	andeq	r3, r1, r8, ror #22
   13ab0:	muleq	r1, r8, fp
   13ab4:	andeq	r3, r1, r8, asr #23
   13ab8:	strdeq	r3, [r1], -r8
   13abc:	andeq	r3, r1, r8, lsr #24
   13ac0:	andeq	r3, r1, r8, asr ip
   13ac4:	andeq	r3, r1, r8, lsl #25
   13ac8:			; <UNDEFINED> instruction: 0x00013cbc
   13acc:	strdeq	r3, [r1], -r0
   13ad0:	andeq	r3, r1, r0, lsr #26
   13ad4:	andeq	r3, r1, r0, asr sp
   13ad8:	andeq	r3, r1, r0, lsl #27
   13adc:			; <UNDEFINED> instruction: 0x00013db0
   13ae0:	andeq	r3, r1, r4, ror #27
   13ae4:	andeq	r3, r1, r8, asr #28
   13ae8:	andeq	r3, r1, r8, ror lr
   13aec:	andeq	r3, r1, r8, lsr #29
   13af0:	andeq	r3, r1, r4, lsr pc
   13af4:	andeq	r3, r1, r4, ror #30
   13af8:	andeq	r3, r1, r8, lsl lr
   13afc:	ldrdeq	r3, [r1], -r8
   13b00:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13b04:	add	r2, sp, #8
   13b08:	ldr	r1, [pc, #1212]	; 13fcc <table_cell_from_buffer@@Base+0x554>
   13b0c:	mov	r0, r4
   13b10:	bl	11b68 <__isoc99_sscanf@plt>
   13b14:	cmp	r0, #1
   13b18:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13b1c:	ldr	r3, [sp, #8]
   13b20:	mov	r2, r5
   13b24:	mov	r1, r7
   13b28:	mov	r0, r6
   13b2c:	bl	13494 <table_set_int@@Base>
   13b30:	mov	r4, #0
   13b34:	b	13f28 <table_cell_from_buffer@@Base+0x4b0>
   13b38:	add	r2, sp, #8
   13b3c:	ldr	r1, [pc, #1164]	; 13fd0 <table_cell_from_buffer@@Base+0x558>
   13b40:	mov	r0, r4
   13b44:	bl	11b68 <__isoc99_sscanf@plt>
   13b48:	cmp	r0, #1
   13b4c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13b50:	ldr	r3, [sp, #8]
   13b54:	mov	r2, r5
   13b58:	mov	r1, r7
   13b5c:	mov	r0, r6
   13b60:	bl	134b8 <table_set_uint@@Base>
   13b64:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13b68:	add	r2, sp, #8
   13b6c:	ldr	r1, [pc, #1120]	; 13fd4 <table_cell_from_buffer@@Base+0x55c>
   13b70:	mov	r0, r4
   13b74:	bl	11b68 <__isoc99_sscanf@plt>
   13b78:	cmp	r0, #1
   13b7c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13b80:	ldrsb	r3, [sp, #8]
   13b84:	mov	r2, r5
   13b88:	mov	r1, r7
   13b8c:	mov	r0, r6
   13b90:	bl	134dc <table_set_int8@@Base>
   13b94:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13b98:	add	r2, sp, #8
   13b9c:	ldr	r1, [pc, #1076]	; 13fd8 <table_cell_from_buffer@@Base+0x560>
   13ba0:	mov	r0, r4
   13ba4:	bl	11b68 <__isoc99_sscanf@plt>
   13ba8:	cmp	r0, #1
   13bac:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13bb0:	ldrb	r3, [sp, #8]
   13bb4:	mov	r2, r5
   13bb8:	mov	r1, r7
   13bbc:	mov	r0, r6
   13bc0:	bl	13500 <table_set_uint8@@Base>
   13bc4:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13bc8:	add	r2, sp, #8
   13bcc:	ldr	r1, [pc, #1032]	; 13fdc <table_cell_from_buffer@@Base+0x564>
   13bd0:	mov	r0, r4
   13bd4:	bl	11b68 <__isoc99_sscanf@plt>
   13bd8:	cmp	r0, #1
   13bdc:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13be0:	ldrsh	r3, [sp, #8]
   13be4:	mov	r2, r5
   13be8:	mov	r1, r7
   13bec:	mov	r0, r6
   13bf0:	bl	13524 <table_set_int16@@Base>
   13bf4:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13bf8:	add	r2, sp, #8
   13bfc:	ldr	r1, [pc, #988]	; 13fe0 <table_cell_from_buffer@@Base+0x568>
   13c00:	mov	r0, r4
   13c04:	bl	11b68 <__isoc99_sscanf@plt>
   13c08:	cmp	r0, #1
   13c0c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13c10:	ldrh	r3, [sp, #8]
   13c14:	mov	r2, r5
   13c18:	mov	r1, r7
   13c1c:	mov	r0, r6
   13c20:	bl	13548 <table_set_uint16@@Base>
   13c24:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13c28:	add	r2, sp, #8
   13c2c:	ldr	r1, [pc, #920]	; 13fcc <table_cell_from_buffer@@Base+0x554>
   13c30:	mov	r0, r4
   13c34:	bl	11b68 <__isoc99_sscanf@plt>
   13c38:	cmp	r0, #1
   13c3c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13c40:	ldr	r3, [sp, #8]
   13c44:	mov	r2, r5
   13c48:	mov	r1, r7
   13c4c:	mov	r0, r6
   13c50:	bl	1356c <table_set_int32@@Base>
   13c54:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13c58:	add	r2, sp, #8
   13c5c:	ldr	r1, [pc, #876]	; 13fd0 <table_cell_from_buffer@@Base+0x558>
   13c60:	mov	r0, r4
   13c64:	bl	11b68 <__isoc99_sscanf@plt>
   13c68:	cmp	r0, #1
   13c6c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13c70:	ldr	r3, [sp, #8]
   13c74:	mov	r2, r5
   13c78:	mov	r1, r7
   13c7c:	mov	r0, r6
   13c80:	bl	13590 <table_set_uint32@@Base>
   13c84:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13c88:	add	r2, sp, #8
   13c8c:	ldr	r1, [pc, #848]	; 13fe4 <table_cell_from_buffer@@Base+0x56c>
   13c90:	mov	r0, r4
   13c94:	bl	11b68 <__isoc99_sscanf@plt>
   13c98:	cmp	r0, #1
   13c9c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13ca0:	ldrd	r2, [sp, #8]
   13ca4:	mov	r1, r7
   13ca8:	mov	r0, r6
   13cac:	strd	r2, [sp]
   13cb0:	mov	r2, r5
   13cb4:	bl	135b4 <table_set_int64@@Base>
   13cb8:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13cbc:	add	r2, sp, #8
   13cc0:	ldr	r1, [pc, #800]	; 13fe8 <table_cell_from_buffer@@Base+0x570>
   13cc4:	mov	r0, r4
   13cc8:	bl	11b68 <__isoc99_sscanf@plt>
   13ccc:	cmp	r0, #1
   13cd0:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13cd4:	ldrd	r2, [sp, #8]
   13cd8:	mov	r1, r7
   13cdc:	mov	r0, r6
   13ce0:	strd	r2, [sp]
   13ce4:	mov	r2, r5
   13ce8:	bl	135d0 <table_set_uint64@@Base>
   13cec:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13cf0:	add	r2, sp, #8
   13cf4:	ldr	r1, [pc, #736]	; 13fdc <table_cell_from_buffer@@Base+0x564>
   13cf8:	mov	r0, r4
   13cfc:	bl	11b68 <__isoc99_sscanf@plt>
   13d00:	cmp	r0, #1
   13d04:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13d08:	ldrsh	r3, [sp, #8]
   13d0c:	mov	r2, r5
   13d10:	mov	r1, r7
   13d14:	mov	r0, r6
   13d18:	bl	135ec <table_set_short@@Base>
   13d1c:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13d20:	add	r2, sp, #8
   13d24:	ldr	r1, [pc, #692]	; 13fe0 <table_cell_from_buffer@@Base+0x568>
   13d28:	mov	r0, r4
   13d2c:	bl	11b68 <__isoc99_sscanf@plt>
   13d30:	cmp	r0, #1
   13d34:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13d38:	ldrh	r3, [sp, #8]
   13d3c:	mov	r2, r5
   13d40:	mov	r1, r7
   13d44:	mov	r0, r6
   13d48:	bl	13610 <table_set_ushort@@Base>
   13d4c:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13d50:	add	r2, sp, #8
   13d54:	ldr	r1, [pc, #656]	; 13fec <table_cell_from_buffer@@Base+0x574>
   13d58:	mov	r0, r4
   13d5c:	bl	11b68 <__isoc99_sscanf@plt>
   13d60:	cmp	r0, #1
   13d64:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13d68:	ldr	r3, [sp, #8]
   13d6c:	mov	r2, r5
   13d70:	mov	r1, r7
   13d74:	mov	r0, r6
   13d78:	bl	13634 <table_set_long@@Base>
   13d7c:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13d80:	add	r2, sp, #8
   13d84:	ldr	r1, [pc, #612]	; 13ff0 <table_cell_from_buffer@@Base+0x578>
   13d88:	mov	r0, r4
   13d8c:	bl	11b68 <__isoc99_sscanf@plt>
   13d90:	cmp	r0, #1
   13d94:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13d98:	ldr	r3, [sp, #8]
   13d9c:	mov	r2, r5
   13da0:	mov	r1, r7
   13da4:	mov	r0, r6
   13da8:	bl	13658 <table_set_ulong@@Base>
   13dac:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13db0:	add	r2, sp, #8
   13db4:	ldr	r1, [pc, #552]	; 13fe4 <table_cell_from_buffer@@Base+0x56c>
   13db8:	mov	r0, r4
   13dbc:	bl	11b68 <__isoc99_sscanf@plt>
   13dc0:	cmp	r0, #1
   13dc4:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13dc8:	ldrd	r2, [sp, #8]
   13dcc:	mov	r1, r7
   13dd0:	mov	r0, r6
   13dd4:	strd	r2, [sp]
   13dd8:	mov	r2, r5
   13ddc:	bl	1367c <table_set_llong@@Base>
   13de0:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13de4:	add	r2, sp, #8
   13de8:	ldr	r1, [pc, #504]	; 13fe8 <table_cell_from_buffer@@Base+0x570>
   13dec:	mov	r0, r4
   13df0:	bl	11b68 <__isoc99_sscanf@plt>
   13df4:	cmp	r0, #1
   13df8:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13dfc:	ldrd	r2, [sp, #8]
   13e00:	mov	r1, r7
   13e04:	mov	r0, r6
   13e08:	strd	r2, [sp]
   13e0c:	mov	r2, r5
   13e10:	bl	13698 <table_set_ullong@@Base>
   13e14:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13e18:	add	r2, sp, #8
   13e1c:	ldr	r1, [pc, #464]	; 13ff4 <table_cell_from_buffer@@Base+0x57c>
   13e20:	mov	r0, r4
   13e24:	bl	11b68 <__isoc99_sscanf@plt>
   13e28:	cmp	r0, #1
   13e2c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13e30:	add	r3, sp, #8
   13e34:	mov	r2, r5
   13e38:	mov	r1, r7
   13e3c:	mov	r0, r6
   13e40:	bl	13714 <table_set_string@@Base>
   13e44:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13e48:	add	r2, sp, #8
   13e4c:	ldr	r1, [pc, #420]	; 13ff8 <table_cell_from_buffer@@Base+0x580>
   13e50:	mov	r0, r4
   13e54:	bl	11b68 <__isoc99_sscanf@plt>
   13e58:	cmp	r0, #1
   13e5c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13e60:	vldr	s0, [sp, #8]
   13e64:	mov	r2, r5
   13e68:	mov	r1, r7
   13e6c:	mov	r0, r6
   13e70:	bl	136b4 <table_set_float@@Base>
   13e74:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13e78:	add	r2, sp, #8
   13e7c:	ldr	r1, [pc, #376]	; 13ffc <table_cell_from_buffer@@Base+0x584>
   13e80:	mov	r0, r4
   13e84:	bl	11b68 <__isoc99_sscanf@plt>
   13e88:	cmp	r0, #1
   13e8c:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13e90:	vldr	d0, [sp, #8]
   13e94:	mov	r2, r5
   13e98:	mov	r1, r7
   13e9c:	mov	r0, r6
   13ea0:	bl	136d4 <table_set_double@@Base>
   13ea4:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13ea8:	add	r2, sp, #8
   13eac:	ldr	r1, [pc, #332]	; 14000 <table_cell_from_buffer@@Base+0x588>
   13eb0:	mov	r0, r4
   13eb4:	bl	11b68 <__isoc99_sscanf@plt>
   13eb8:	cmp	r0, #1
   13ebc:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13ec0:	vldr	d0, [sp, #8]
   13ec4:	mov	r2, r5
   13ec8:	mov	r1, r7
   13ecc:	mov	r0, r6
   13ed0:	bl	136f4 <table_set_ldouble@@Base>
   13ed4:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13ed8:	add	r2, sp, #8
   13edc:	ldr	r1, [pc, #232]	; 13fcc <table_cell_from_buffer@@Base+0x554>
   13ee0:	mov	r0, r4
   13ee4:	bl	11b68 <__isoc99_sscanf@plt>
   13ee8:	cmp	r0, #1
   13eec:	mov	r3, r0
   13ef0:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13ef4:	ldr	r4, [sp, #8]
   13ef8:	cmp	r4, #0
   13efc:	beq	13f14 <table_cell_from_buffer@@Base+0x49c>
   13f00:	mov	r2, r5
   13f04:	mov	r1, r7
   13f08:	mov	r0, r6
   13f0c:	bl	13470 <table_set_bool@@Base>
   13f10:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13f14:	mov	r3, r4
   13f18:	mov	r2, r5
   13f1c:	mov	r1, r7
   13f20:	mov	r0, r6
   13f24:	bl	13470 <table_set_bool@@Base>
   13f28:	mov	r0, r4
   13f2c:	add	sp, sp, #268	; 0x10c
   13f30:	pop	{r4, r5, r6, r7, pc}
   13f34:	add	r2, sp, #8
   13f38:	ldr	r1, [pc, #196]	; 14004 <table_cell_from_buffer@@Base+0x58c>
   13f3c:	mov	r0, r4
   13f40:	bl	11b68 <__isoc99_sscanf@plt>
   13f44:	cmp	r0, #1
   13f48:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13f4c:	ldrb	r3, [sp, #8]
   13f50:	mov	r2, r5
   13f54:	mov	r1, r7
   13f58:	mov	r0, r6
   13f5c:	bl	1372c <table_set_char@@Base>
   13f60:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13f64:	add	r2, sp, #8
   13f68:	ldr	r1, [pc, #148]	; 14004 <table_cell_from_buffer@@Base+0x58c>
   13f6c:	mov	r0, r4
   13f70:	bl	11b68 <__isoc99_sscanf@plt>
   13f74:	cmp	r0, #1
   13f78:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13f7c:	ldrb	r3, [sp, #8]
   13f80:	mov	r2, r5
   13f84:	mov	r1, r7
   13f88:	mov	r0, r6
   13f8c:	bl	13750 <table_set_uchar@@Base>
   13f90:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13f94:	add	r2, sp, #8
   13f98:	ldr	r1, [pc, #104]	; 14008 <table_cell_from_buffer@@Base+0x590>
   13f9c:	mov	r0, r4
   13fa0:	bl	11b68 <__isoc99_sscanf@plt>
   13fa4:	cmp	r0, #1
   13fa8:	bne	13fc4 <table_cell_from_buffer@@Base+0x54c>
   13fac:	ldr	r3, [sp, #8]
   13fb0:	mov	r2, r5
   13fb4:	mov	r1, r7
   13fb8:	mov	r0, r6
   13fbc:	bl	13774 <table_set_ptr@@Base>
   13fc0:	b	13b30 <table_cell_from_buffer@@Base+0xb8>
   13fc4:	mvn	r4, #0
   13fc8:	b	13f28 <table_cell_from_buffer@@Base+0x4b0>
   13fcc:	muleq	r1, r4, r3
   13fd0:	muleq	r1, r7, r3
   13fd4:	andeq	r4, r1, r8, asr #7
   13fd8:	andeq	r4, r1, sp, asr #7
   13fdc:	andeq	r4, r1, r4, lsr #7
   13fe0:	andeq	r4, r1, r8, lsr #7
   13fe4:	muleq	r1, sl, r3
   13fe8:	muleq	r1, pc, r3	; <UNPREDICTABLE>
   13fec:	andeq	r4, r1, ip, lsr #7
   13ff0:			; <UNDEFINED> instruction: 0x000143b0
   13ff4:			; <UNDEFINED> instruction: 0x000143b4
   13ff8:			; <UNDEFINED> instruction: 0x000143b7
   13ffc:			; <UNDEFINED> instruction: 0x000143ba
   14000:			; <UNDEFINED> instruction: 0x000143be
   14004:	andeq	r4, r1, r2, asr #7
   14008:	andeq	r4, r1, r5, asr #7

0001400c <table_get_cell_ptr@@Base>:
   1400c:	push	{r4, lr}
   14010:	mov	r4, r2
   14014:	bl	13174 <table_get_row_ptr@@Base>
   14018:	ldr	r0, [r0]
   1401c:	add	r0, r0, r4, lsl #2
   14020:	pop	{r4, pc}

00014024 <table_cell_init@@Base>:
   14024:	push	{r4, lr}
   14028:	bl	1400c <table_get_cell_ptr@@Base>
   1402c:	mov	r3, #0
   14030:	str	r3, [r0]
   14034:	pop	{r4, pc}

00014038 <table_cell_destroy@@Base>:
   14038:	push	{r4, r5, r6, lr}
   1403c:	mov	r6, r1
   14040:	mov	r1, r2
   14044:	mov	r5, r0
   14048:	mov	r4, r2
   1404c:	bl	12750 <table_get_column_data_type@@Base>
   14050:	cmp	r0, #23
   14054:	popeq	{r4, r5, r6, pc}
   14058:	mov	r2, r4
   1405c:	mov	r1, r6
   14060:	mov	r0, r5
   14064:	bl	1400c <table_get_cell_ptr@@Base>
   14068:	ldr	r0, [r0]
   1406c:	cmp	r0, #0
   14070:	popeq	{r4, r5, r6, pc}
   14074:	pop	{r4, r5, r6, lr}
   14078:	b	11af0 <free@plt>

0001407c <table_cell_nullify@@Base>:
   1407c:	push	{r4, lr}
   14080:	bl	1400c <table_get_cell_ptr@@Base>
   14084:	mov	r4, r0
   14088:	ldr	r0, [r0]
   1408c:	cmp	r0, #0
   14090:	beq	140a0 <table_cell_nullify@@Base+0x24>
   14094:	bl	11af0 <free@plt>
   14098:	mov	r3, #0
   1409c:	str	r3, [r4]
   140a0:	mov	r0, #0
   140a4:	pop	{r4, pc}
   140a8:	subs	r2, r1, #1
   140ac:	bxeq	lr
   140b0:	bcc	14288 <table_cell_nullify@@Base+0x20c>
   140b4:	cmp	r0, r1
   140b8:	bls	1426c <table_cell_nullify@@Base+0x1f0>
   140bc:	tst	r1, r2
   140c0:	beq	14278 <table_cell_nullify@@Base+0x1fc>
   140c4:	clz	r3, r0
   140c8:	clz	r2, r1
   140cc:	sub	r3, r2, r3
   140d0:	rsbs	r3, r3, #31
   140d4:	addne	r3, r3, r3, lsl #1
   140d8:	mov	r2, #0
   140dc:	addne	pc, pc, r3, lsl #2
   140e0:	nop			; (mov r0, r0)
   140e4:	cmp	r0, r1, lsl #31
   140e8:	adc	r2, r2, r2
   140ec:	subcs	r0, r0, r1, lsl #31
   140f0:	cmp	r0, r1, lsl #30
   140f4:	adc	r2, r2, r2
   140f8:	subcs	r0, r0, r1, lsl #30
   140fc:	cmp	r0, r1, lsl #29
   14100:	adc	r2, r2, r2
   14104:	subcs	r0, r0, r1, lsl #29
   14108:	cmp	r0, r1, lsl #28
   1410c:	adc	r2, r2, r2
   14110:	subcs	r0, r0, r1, lsl #28
   14114:	cmp	r0, r1, lsl #27
   14118:	adc	r2, r2, r2
   1411c:	subcs	r0, r0, r1, lsl #27
   14120:	cmp	r0, r1, lsl #26
   14124:	adc	r2, r2, r2
   14128:	subcs	r0, r0, r1, lsl #26
   1412c:	cmp	r0, r1, lsl #25
   14130:	adc	r2, r2, r2
   14134:	subcs	r0, r0, r1, lsl #25
   14138:	cmp	r0, r1, lsl #24
   1413c:	adc	r2, r2, r2
   14140:	subcs	r0, r0, r1, lsl #24
   14144:	cmp	r0, r1, lsl #23
   14148:	adc	r2, r2, r2
   1414c:	subcs	r0, r0, r1, lsl #23
   14150:	cmp	r0, r1, lsl #22
   14154:	adc	r2, r2, r2
   14158:	subcs	r0, r0, r1, lsl #22
   1415c:	cmp	r0, r1, lsl #21
   14160:	adc	r2, r2, r2
   14164:	subcs	r0, r0, r1, lsl #21
   14168:	cmp	r0, r1, lsl #20
   1416c:	adc	r2, r2, r2
   14170:	subcs	r0, r0, r1, lsl #20
   14174:	cmp	r0, r1, lsl #19
   14178:	adc	r2, r2, r2
   1417c:	subcs	r0, r0, r1, lsl #19
   14180:	cmp	r0, r1, lsl #18
   14184:	adc	r2, r2, r2
   14188:	subcs	r0, r0, r1, lsl #18
   1418c:	cmp	r0, r1, lsl #17
   14190:	adc	r2, r2, r2
   14194:	subcs	r0, r0, r1, lsl #17
   14198:	cmp	r0, r1, lsl #16
   1419c:	adc	r2, r2, r2
   141a0:	subcs	r0, r0, r1, lsl #16
   141a4:	cmp	r0, r1, lsl #15
   141a8:	adc	r2, r2, r2
   141ac:	subcs	r0, r0, r1, lsl #15
   141b0:	cmp	r0, r1, lsl #14
   141b4:	adc	r2, r2, r2
   141b8:	subcs	r0, r0, r1, lsl #14
   141bc:	cmp	r0, r1, lsl #13
   141c0:	adc	r2, r2, r2
   141c4:	subcs	r0, r0, r1, lsl #13
   141c8:	cmp	r0, r1, lsl #12
   141cc:	adc	r2, r2, r2
   141d0:	subcs	r0, r0, r1, lsl #12
   141d4:	cmp	r0, r1, lsl #11
   141d8:	adc	r2, r2, r2
   141dc:	subcs	r0, r0, r1, lsl #11
   141e0:	cmp	r0, r1, lsl #10
   141e4:	adc	r2, r2, r2
   141e8:	subcs	r0, r0, r1, lsl #10
   141ec:	cmp	r0, r1, lsl #9
   141f0:	adc	r2, r2, r2
   141f4:	subcs	r0, r0, r1, lsl #9
   141f8:	cmp	r0, r1, lsl #8
   141fc:	adc	r2, r2, r2
   14200:	subcs	r0, r0, r1, lsl #8
   14204:	cmp	r0, r1, lsl #7
   14208:	adc	r2, r2, r2
   1420c:	subcs	r0, r0, r1, lsl #7
   14210:	cmp	r0, r1, lsl #6
   14214:	adc	r2, r2, r2
   14218:	subcs	r0, r0, r1, lsl #6
   1421c:	cmp	r0, r1, lsl #5
   14220:	adc	r2, r2, r2
   14224:	subcs	r0, r0, r1, lsl #5
   14228:	cmp	r0, r1, lsl #4
   1422c:	adc	r2, r2, r2
   14230:	subcs	r0, r0, r1, lsl #4
   14234:	cmp	r0, r1, lsl #3
   14238:	adc	r2, r2, r2
   1423c:	subcs	r0, r0, r1, lsl #3
   14240:	cmp	r0, r1, lsl #2
   14244:	adc	r2, r2, r2
   14248:	subcs	r0, r0, r1, lsl #2
   1424c:	cmp	r0, r1, lsl #1
   14250:	adc	r2, r2, r2
   14254:	subcs	r0, r0, r1, lsl #1
   14258:	cmp	r0, r1
   1425c:	adc	r2, r2, r2
   14260:	subcs	r0, r0, r1
   14264:	mov	r0, r2
   14268:	bx	lr
   1426c:	moveq	r0, #1
   14270:	movne	r0, #0
   14274:	bx	lr
   14278:	clz	r2, r1
   1427c:	rsb	r2, r2, #31
   14280:	lsr	r0, r0, r2
   14284:	bx	lr
   14288:	cmp	r0, #0
   1428c:	mvnne	r0, #0
   14290:	b	142b4 <table_cell_nullify@@Base+0x238>
   14294:	cmp	r1, #0
   14298:	beq	14288 <table_cell_nullify@@Base+0x20c>
   1429c:	push	{r0, r1, lr}
   142a0:	bl	140a8 <table_cell_nullify@@Base+0x2c>
   142a4:	pop	{r1, r2, lr}
   142a8:	mul	r3, r2, r0
   142ac:	sub	r1, r1, r3
   142b0:	bx	lr
   142b4:	push	{r1, lr}
   142b8:	mov	r0, #8
   142bc:	bl	11ad8 <raise@plt>
   142c0:	pop	{r1, pc}

000142c4 <__libc_csu_init@@Base>:
   142c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142c8:	mov	r7, r0
   142cc:	ldr	r6, [pc, #72]	; 1431c <__libc_csu_init@@Base+0x58>
   142d0:	ldr	r5, [pc, #72]	; 14320 <__libc_csu_init@@Base+0x5c>
   142d4:	add	r6, pc, r6
   142d8:	add	r5, pc, r5
   142dc:	sub	r6, r6, r5
   142e0:	mov	r8, r1
   142e4:	mov	r9, r2
   142e8:	bl	11ab8 <raise@plt-0x20>
   142ec:	asrs	r6, r6, #2
   142f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   142f4:	mov	r4, #0
   142f8:	add	r4, r4, #1
   142fc:	ldr	r3, [r5], #4
   14300:	mov	r2, r9
   14304:	mov	r1, r8
   14308:	mov	r0, r7
   1430c:	blx	r3
   14310:	cmp	r6, r4
   14314:	bne	142f8 <__libc_csu_init@@Base+0x34>
   14318:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1431c:	andeq	r0, r1, r4, lsr ip
   14320:	andeq	r0, r1, ip, lsr #24

00014324 <__libc_csu_fini@@Base>:
   14324:	bx	lr

Disassembly of section .fini:

00014328 <.fini>:
   14328:	push	{r3, lr}
   1432c:	pop	{r3, pc}
