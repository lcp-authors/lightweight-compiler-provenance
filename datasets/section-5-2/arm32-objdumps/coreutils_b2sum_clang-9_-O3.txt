
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00011030 <.init>:
   11030:	push	{r3, lr}
   11034:	bl	1135c <__assert_fail@plt+0x54>
   11038:	pop	{r3, pc}

Disassembly of section .plt:

0001103c <fdopen@plt-0x14>:
   1103c:	push	{lr}		; (str lr, [sp, #-4]!)
   11040:	ldr	lr, [pc, #4]	; 1104c <fdopen@plt-0x4>
   11044:	add	lr, pc, lr
   11048:	ldr	pc, [lr, #8]!
   1104c:			; <UNDEFINED> instruction: 0x0001efb4

00011050 <fdopen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #122880	; 0x1e000
   11058:	ldr	pc, [ip, #4020]!	; 0xfb4

0001105c <calloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #122880	; 0x1e000
   11064:	ldr	pc, [ip, #4012]!	; 0xfac

00011068 <fputs_unlocked@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #122880	; 0x1e000
   11070:	ldr	pc, [ip, #4004]!	; 0xfa4

00011074 <raise@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #122880	; 0x1e000
   1107c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011080 <__getdelim@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #122880	; 0x1e000
   11088:	ldr	pc, [ip, #3988]!	; 0xf94

0001108c <strcmp@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #122880	; 0x1e000
   11094:	ldr	pc, [ip, #3980]!	; 0xf8c

00011098 <posix_fadvise64@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #122880	; 0x1e000
   110a0:	ldr	pc, [ip, #3972]!	; 0xf84

000110a4 <fflush@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #122880	; 0x1e000
   110ac:	ldr	pc, [ip, #3964]!	; 0xf7c

000110b0 <free@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #122880	; 0x1e000
   110b8:	ldr	pc, [ip, #3956]!	; 0xf74

000110bc <ferror@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #122880	; 0x1e000
   110c4:	ldr	pc, [ip, #3948]!	; 0xf6c

000110c8 <_exit@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #122880	; 0x1e000
   110d0:	ldr	pc, [ip, #3940]!	; 0xf64

000110d4 <memcpy@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #122880	; 0x1e000
   110dc:	ldr	pc, [ip, #3932]!	; 0xf5c

000110e0 <__strtoull_internal@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #122880	; 0x1e000
   110e8:	ldr	pc, [ip, #3924]!	; 0xf54

000110ec <mbsinit@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #122880	; 0x1e000
   110f4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110f8 <dcgettext@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #122880	; 0x1e000
   11100:	ldr	pc, [ip, #3908]!	; 0xf44

00011104 <realloc@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #122880	; 0x1e000
   1110c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011110 <textdomain@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #122880	; 0x1e000
   11118:	ldr	pc, [ip, #3892]!	; 0xf34

0001111c <iswprint@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #122880	; 0x1e000
   11124:	ldr	pc, [ip, #3884]!	; 0xf2c

00011128 <fwrite@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #122880	; 0x1e000
   11130:	ldr	pc, [ip, #3876]!	; 0xf24

00011134 <lseek64@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #122880	; 0x1e000
   1113c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011140 <__ctype_get_mb_cur_max@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #122880	; 0x1e000
   11148:	ldr	pc, [ip, #3860]!	; 0xf14

0001114c <fread@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #122880	; 0x1e000
   11154:	ldr	pc, [ip, #3852]!	; 0xf0c

00011158 <__fpending@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #122880	; 0x1e000
   11160:	ldr	pc, [ip, #3844]!	; 0xf04

00011164 <mbrtowc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #122880	; 0x1e000
   1116c:	ldr	pc, [ip, #3836]!	; 0xefc

00011170 <error@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #122880	; 0x1e000
   11178:	ldr	pc, [ip, #3828]!	; 0xef4

0001117c <malloc@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #122880	; 0x1e000
   11184:	ldr	pc, [ip, #3820]!	; 0xeec

00011188 <__libc_start_main@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #122880	; 0x1e000
   11190:	ldr	pc, [ip, #3812]!	; 0xee4

00011194 <__freading@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #122880	; 0x1e000
   1119c:	ldr	pc, [ip, #3804]!	; 0xedc

000111a0 <__ctype_tolower_loc@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #122880	; 0x1e000
   111a8:	ldr	pc, [ip, #3796]!	; 0xed4

000111ac <__gmon_start__@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #122880	; 0x1e000
   111b4:	ldr	pc, [ip, #3788]!	; 0xecc

000111b8 <getopt_long@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #122880	; 0x1e000
   111c0:	ldr	pc, [ip, #3780]!	; 0xec4

000111c4 <__ctype_b_loc@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #122880	; 0x1e000
   111cc:	ldr	pc, [ip, #3772]!	; 0xebc

000111d0 <exit@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #122880	; 0x1e000
   111d8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111dc <feof@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #122880	; 0x1e000
   111e4:	ldr	pc, [ip, #3756]!	; 0xeac

000111e8 <bcmp@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #122880	; 0x1e000
   111f0:	ldr	pc, [ip, #3748]!	; 0xea4

000111f4 <strlen@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #122880	; 0x1e000
   111fc:	ldr	pc, [ip, #3740]!	; 0xe9c

00011200 <strchr@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #122880	; 0x1e000
   11208:	ldr	pc, [ip, #3732]!	; 0xe94

0001120c <__errno_location@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #122880	; 0x1e000
   11214:	ldr	pc, [ip, #3724]!	; 0xe8c

00011218 <__cxa_atexit@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #122880	; 0x1e000
   11220:	ldr	pc, [ip, #3716]!	; 0xe84

00011224 <setvbuf@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #122880	; 0x1e000
   1122c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011230 <memset@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #122880	; 0x1e000
   11238:	ldr	pc, [ip, #3700]!	; 0xe74

0001123c <__printf_chk@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #122880	; 0x1e000
   11244:	ldr	pc, [ip, #3692]!	; 0xe6c

00011248 <fileno@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #122880	; 0x1e000
   11250:	ldr	pc, [ip, #3684]!	; 0xe64

00011254 <__fprintf_chk@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #122880	; 0x1e000
   1125c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011260 <fclose@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #122880	; 0x1e000
   11268:	ldr	pc, [ip, #3668]!	; 0xe54

0001126c <fseeko64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #122880	; 0x1e000
   11274:	ldr	pc, [ip, #3660]!	; 0xe4c

00011278 <fcntl64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #122880	; 0x1e000
   11280:	ldr	pc, [ip, #3652]!	; 0xe44

00011284 <__overflow@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #122880	; 0x1e000
   1128c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011290 <setlocale@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #122880	; 0x1e000
   11298:	ldr	pc, [ip, #3636]!	; 0xe34

0001129c <strrchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #122880	; 0x1e000
   112a4:	ldr	pc, [ip, #3628]!	; 0xe2c

000112a8 <nl_langinfo@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #122880	; 0x1e000
   112b0:	ldr	pc, [ip, #3620]!	; 0xe24

000112b4 <clearerr_unlocked@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #122880	; 0x1e000
   112bc:	ldr	pc, [ip, #3612]!	; 0xe1c

000112c0 <fopen64@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #122880	; 0x1e000
   112c8:	ldr	pc, [ip, #3604]!	; 0xe14

000112cc <bindtextdomain@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #122880	; 0x1e000
   112d4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112d8 <strncmp@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #122880	; 0x1e000
   112e0:	ldr	pc, [ip, #3588]!	; 0xe04

000112e4 <abort@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #122880	; 0x1e000
   112ec:	ldr	pc, [ip, #3580]!	; 0xdfc

000112f0 <close@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #122880	; 0x1e000
   112f8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112fc <dcngettext@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #122880	; 0x1e000
   11304:	ldr	pc, [ip, #3564]!	; 0xdec

00011308 <__assert_fail@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #122880	; 0x1e000
   11310:	ldr	pc, [ip, #3556]!	; 0xde4

Disassembly of section .text:

00011320 <.text>:
   11320:	mov	fp, #0
   11324:	mov	lr, #0
   11328:	pop	{r1}		; (ldr r1, [sp], #4)
   1132c:	mov	r2, sp
   11330:	push	{r2}		; (str r2, [sp, #-4]!)
   11334:	push	{r0}		; (str r0, [sp, #-4]!)
   11338:	ldr	ip, [pc, #16]	; 11350 <__assert_fail@plt+0x48>
   1133c:	push	{ip}		; (str ip, [sp, #-4]!)
   11340:	ldr	r0, [pc, #12]	; 11354 <__assert_fail@plt+0x4c>
   11344:	ldr	r3, [pc, #12]	; 11358 <__assert_fail@plt+0x50>
   11348:	bl	11188 <__libc_start_main@plt>
   1134c:	bl	112e4 <abort@plt>
   11350:	andeq	lr, r1, r8, lsl r0
   11354:	andeq	r1, r1, r4, lsr #15
   11358:			; <UNDEFINED> instruction: 0x0001dfb8
   1135c:	ldr	r3, [pc, #20]	; 11378 <__assert_fail@plt+0x70>
   11360:	ldr	r2, [pc, #20]	; 1137c <__assert_fail@plt+0x74>
   11364:	add	r3, pc, r3
   11368:	ldr	r2, [r3, r2]
   1136c:	cmp	r2, #0
   11370:	bxeq	lr
   11374:	b	111ac <__gmon_start__@plt>
   11378:	muleq	r1, r4, ip
   1137c:	strdeq	r0, [r0], -r8
   11380:	ldr	r0, [pc, #24]	; 113a0 <__assert_fail@plt+0x98>
   11384:	ldr	r3, [pc, #24]	; 113a4 <__assert_fail@plt+0x9c>
   11388:	cmp	r3, r0
   1138c:	bxeq	lr
   11390:	ldr	r3, [pc, #16]	; 113a8 <__assert_fail@plt+0xa0>
   11394:	cmp	r3, #0
   11398:	bxeq	lr
   1139c:	bx	r3
   113a0:	andeq	r0, r3, r8, asr r1
   113a4:	andeq	r0, r3, r8, asr r1
   113a8:	andeq	r0, r0, r0
   113ac:	ldr	r0, [pc, #36]	; 113d8 <__assert_fail@plt+0xd0>
   113b0:	ldr	r1, [pc, #36]	; 113dc <__assert_fail@plt+0xd4>
   113b4:	sub	r1, r1, r0
   113b8:	asr	r1, r1, #2
   113bc:	add	r1, r1, r1, lsr #31
   113c0:	asrs	r1, r1, #1
   113c4:	bxeq	lr
   113c8:	ldr	r3, [pc, #16]	; 113e0 <__assert_fail@plt+0xd8>
   113cc:	cmp	r3, #0
   113d0:	bxeq	lr
   113d4:	bx	r3
   113d8:	andeq	r0, r3, r8, asr r1
   113dc:	andeq	r0, r3, r8, asr r1
   113e0:	andeq	r0, r0, r0
   113e4:	push	{r4, lr}
   113e8:	ldr	r4, [pc, #24]	; 11408 <__assert_fail@plt+0x100>
   113ec:	ldrb	r3, [r4]
   113f0:	cmp	r3, #0
   113f4:	popne	{r4, pc}
   113f8:	bl	11380 <__assert_fail@plt+0x78>
   113fc:	mov	r3, #1
   11400:	strb	r3, [r4]
   11404:	pop	{r4, pc}
   11408:	andeq	r0, r3, ip, ror r1
   1140c:	b	113ac <__assert_fail@plt+0xa4>
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #56	; 0x38
   1141c:	mov	r4, r0
   11420:	cmp	r0, #0
   11424:	bne	11760 <__assert_fail@plt+0x458>
   11428:	movw	r1, #57451	; 0xe06b
   1142c:	mov	r0, #0
   11430:	mov	r2, #5
   11434:	movt	r1, #1
   11438:	bl	110f8 <dcgettext@plt>
   1143c:	mov	r1, r0
   11440:	movw	r0, #416	; 0x1a0
   11444:	movt	r0, #3
   11448:	ldr	r2, [r0]
   1144c:	mov	r0, #1
   11450:	bl	1123c <__printf_chk@plt>
   11454:	movw	r1, #57484	; 0xe08c
   11458:	mov	r0, #0
   1145c:	mov	r2, #5
   11460:	movt	r1, #1
   11464:	bl	110f8 <dcgettext@plt>
   11468:	movw	r2, #57523	; 0xe0b3
   1146c:	mov	r1, r0
   11470:	mov	r0, #1
   11474:	mov	r3, #512	; 0x200
   11478:	movt	r2, #1
   1147c:	bl	1123c <__printf_chk@plt>
   11480:	movw	r1, #59701	; 0xe935
   11484:	mov	r0, #0
   11488:	mov	r2, #5
   1148c:	movt	r1, #1
   11490:	bl	110f8 <dcgettext@plt>
   11494:	movw	r7, #372	; 0x174
   11498:	movt	r7, #3
   1149c:	ldr	r1, [r7]
   114a0:	bl	11068 <fputs_unlocked@plt>
   114a4:	movw	r1, #59757	; 0xe96d
   114a8:	mov	r0, #0
   114ac:	mov	r2, #5
   114b0:	movt	r1, #1
   114b4:	bl	110f8 <dcgettext@plt>
   114b8:	ldr	r1, [r7]
   114bc:	bl	11068 <fputs_unlocked@plt>
   114c0:	movw	r1, #57531	; 0xe0bb
   114c4:	mov	r0, #0
   114c8:	mov	r2, #5
   114cc:	movt	r1, #1
   114d0:	bl	110f8 <dcgettext@plt>
   114d4:	ldr	r1, [r7]
   114d8:	bl	11068 <fputs_unlocked@plt>
   114dc:	movw	r1, #57576	; 0xe0e8
   114e0:	mov	r0, #0
   114e4:	mov	r2, #5
   114e8:	movt	r1, #1
   114ec:	bl	110f8 <dcgettext@plt>
   114f0:	ldr	r1, [r7]
   114f4:	bl	11068 <fputs_unlocked@plt>
   114f8:	movw	r1, #57646	; 0xe12e
   114fc:	mov	r0, #0
   11500:	mov	r2, #5
   11504:	movt	r1, #1
   11508:	bl	110f8 <dcgettext@plt>
   1150c:	ldr	r1, [r7]
   11510:	bl	11068 <fputs_unlocked@plt>
   11514:	movw	r1, #57797	; 0xe1c5
   11518:	mov	r0, #0
   1151c:	mov	r2, #5
   11520:	movt	r1, #1
   11524:	bl	110f8 <dcgettext@plt>
   11528:	ldr	r1, [r7]
   1152c:	bl	11068 <fputs_unlocked@plt>
   11530:	movw	r1, #57850	; 0xe1fa
   11534:	mov	r0, #0
   11538:	mov	r2, #5
   1153c:	movt	r1, #1
   11540:	bl	110f8 <dcgettext@plt>
   11544:	ldr	r1, [r7]
   11548:	bl	11068 <fputs_unlocked@plt>
   1154c:	movw	r1, #57903	; 0xe22f
   11550:	mov	r0, #0
   11554:	mov	r2, #5
   11558:	movt	r1, #1
   1155c:	bl	110f8 <dcgettext@plt>
   11560:	ldr	r1, [r7]
   11564:	bl	11068 <fputs_unlocked@plt>
   11568:	movw	r1, #58029	; 0xe2ad
   1156c:	mov	r0, #0
   11570:	mov	r2, #5
   11574:	movt	r1, #1
   11578:	bl	110f8 <dcgettext@plt>
   1157c:	ldr	r1, [r7]
   11580:	bl	11068 <fputs_unlocked@plt>
   11584:	movw	r1, #58468	; 0xe464
   11588:	mov	r0, #0
   1158c:	mov	r2, #5
   11590:	movt	r1, #1
   11594:	bl	110f8 <dcgettext@plt>
   11598:	ldr	r1, [r7]
   1159c:	bl	11068 <fputs_unlocked@plt>
   115a0:	movw	r1, #58513	; 0xe491
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	movt	r1, #1
   115b0:	bl	110f8 <dcgettext@plt>
   115b4:	ldr	r1, [r7]
   115b8:	bl	11068 <fputs_unlocked@plt>
   115bc:	movw	r1, #58567	; 0xe4c7
   115c0:	mov	r0, #0
   115c4:	mov	r2, #5
   115c8:	movt	r1, #1
   115cc:	bl	110f8 <dcgettext@plt>
   115d0:	movw	r2, #58611	; 0xe4f3
   115d4:	mov	r1, r0
   115d8:	mov	r0, #1
   115dc:	movt	r2, #1
   115e0:	bl	1123c <__printf_chk@plt>
   115e4:	movw	r1, #58620	; 0xe4fc
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	movt	r1, #1
   115f4:	bl	110f8 <dcgettext@plt>
   115f8:	ldr	r1, [r7]
   115fc:	bl	11068 <fputs_unlocked@plt>
   11600:	movw	r0, #60944	; 0xee10
   11604:	mov	r2, #48	; 0x30
   11608:	mov	r6, sp
   1160c:	movw	r5, #58953	; 0xe649
   11610:	movt	r0, #1
   11614:	movt	r5, #1
   11618:	add	r1, r0, #32
   1161c:	add	r3, r0, #16
   11620:	vld1.64	{d18-d19}, [r0], r2
   11624:	vld1.64	{d16-d17}, [r1]
   11628:	vld1.64	{d20-d21}, [r3]
   1162c:	vldr	d22, [r0]
   11630:	add	r1, r6, #32
   11634:	add	r0, r6, #16
   11638:	vst1.64	{d16-d17}, [r1]
   1163c:	movw	r1, #59832	; 0xe9b8
   11640:	vst1.64	{d20-d21}, [r0]
   11644:	mov	r0, r6
   11648:	movt	r1, #1
   1164c:	vst1.64	{d18-d19}, [r0], r2
   11650:	vstr	d22, [r0]
   11654:	mov	r0, r5
   11658:	bl	1108c <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	ldrne	r1, [r6, #8]!
   11664:	cmpne	r1, #0
   11668:	bne	11654 <__assert_fail@plt+0x34c>
   1166c:	movw	r1, #59927	; 0xea17
   11670:	ldr	r6, [r6, #4]
   11674:	mov	r0, #0
   11678:	mov	r2, #5
   1167c:	movt	r1, #1
   11680:	bl	110f8 <dcgettext@plt>
   11684:	movw	r2, #59055	; 0xe6af
   11688:	movw	r3, #59950	; 0xea2e
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	movt	r2, #1
   11698:	movt	r3, #1
   1169c:	bl	1123c <__printf_chk@plt>
   116a0:	cmp	r6, #0
   116a4:	mov	r0, #5
   116a8:	mov	r1, #0
   116ac:	moveq	r6, r5
   116b0:	bl	11290 <setlocale@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116f0 <__assert_fail@plt+0x3e8>
   116bc:	movw	r1, #59990	; 0xea56
   116c0:	mov	r2, #3
   116c4:	movt	r1, #1
   116c8:	bl	112d8 <strncmp@plt>
   116cc:	cmp	r0, #0
   116d0:	beq	116f0 <__assert_fail@plt+0x3e8>
   116d4:	movw	r1, #59994	; 0xea5a
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	110f8 <dcgettext@plt>
   116e8:	ldr	r1, [r7]
   116ec:	bl	11068 <fputs_unlocked@plt>
   116f0:	movw	r1, #60065	; 0xeaa1
   116f4:	mov	r0, #0
   116f8:	mov	r2, #5
   116fc:	movt	r1, #1
   11700:	bl	110f8 <dcgettext@plt>
   11704:	movw	r2, #59950	; 0xea2e
   11708:	mov	r1, r0
   1170c:	mov	r0, #1
   11710:	mov	r3, r5
   11714:	movt	r2, #1
   11718:	bl	1123c <__printf_chk@plt>
   1171c:	movw	r1, #60092	; 0xeabc
   11720:	mov	r0, #0
   11724:	mov	r2, #5
   11728:	movt	r1, #1
   1172c:	bl	110f8 <dcgettext@plt>
   11730:	mov	r1, r0
   11734:	movw	r0, #59860	; 0xe9d4
   11738:	movw	r3, #58467	; 0xe463
   1173c:	cmp	r6, r5
   11740:	mov	r2, r6
   11744:	movt	r0, #1
   11748:	movt	r3, #1
   1174c:	moveq	r3, r0
   11750:	mov	r0, #1
   11754:	bl	1123c <__printf_chk@plt>
   11758:	mov	r0, r4
   1175c:	bl	111d0 <exit@plt>
   11760:	movw	r0, #360	; 0x168
   11764:	movw	r1, #57412	; 0xe044
   11768:	mov	r2, #5
   1176c:	movt	r0, #3
   11770:	movt	r1, #1
   11774:	ldr	r5, [r0]
   11778:	mov	r0, #0
   1177c:	bl	110f8 <dcgettext@plt>
   11780:	mov	r2, r0
   11784:	movw	r0, #416	; 0x1a0
   11788:	mov	r1, #1
   1178c:	movt	r0, #3
   11790:	ldr	r3, [r0]
   11794:	mov	r0, r5
   11798:	bl	11254 <__fprintf_chk@plt>
   1179c:	mov	r0, r4
   117a0:	bl	111d0 <exit@plt>
   117a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117a8:	add	fp, sp, #28
   117ac:	sub	sp, sp, #316	; 0x13c
   117b0:	mov	r5, r0
   117b4:	ldr	r0, [r1]
   117b8:	mov	r4, r1
   117bc:	bl	19f4c <__assert_fail@plt+0x8c44>
   117c0:	movw	r7, #58467	; 0xe463
   117c4:	mov	r0, #6
   117c8:	movt	r7, #1
   117cc:	mov	r1, r7
   117d0:	bl	11290 <setlocale@plt>
   117d4:	movw	r6, #59059	; 0xe6b3
   117d8:	movw	r1, #58959	; 0xe64f
   117dc:	movt	r6, #1
   117e0:	movt	r1, #1
   117e4:	mov	r0, r6
   117e8:	bl	112cc <bindtextdomain@plt>
   117ec:	mov	r0, r6
   117f0:	bl	11110 <textdomain@plt>
   117f4:	movw	r0, #39848	; 0x9ba8
   117f8:	movt	r0, #1
   117fc:	bl	1e01c <__assert_fail@plt+0xcd14>
   11800:	movw	r0, #372	; 0x174
   11804:	mov	r1, #0
   11808:	mov	r2, #1
   1180c:	mov	r3, #0
   11810:	mov	r9, #0
   11814:	movt	r0, #3
   11818:	ldr	r0, [r0]
   1181c:	bl	11224 <setvbuf@plt>
   11820:	add	r0, sp, #148	; 0x94
   11824:	movw	r3, #58983	; 0xe667
   11828:	movw	r6, #60720	; 0xed30
   1182c:	mvn	r8, #0
   11830:	str	r7, [sp, #144]	; 0x90
   11834:	add	r0, r0, #7
   11838:	movt	r3, #1
   1183c:	movt	r6, #1
   11840:	and	sl, r0, #7
   11844:	sub	r0, r0, sl
   11848:	str	r0, [sp, #56]	; 0x38
   1184c:	mov	r0, #0
   11850:	str	r0, [sp, #60]	; 0x3c
   11854:	mov	r0, #0
   11858:	str	r0, [sp, #64]	; 0x40
   1185c:	mov	r0, r5
   11860:	mov	r1, r4
   11864:	mov	r2, r3
   11868:	mov	r7, r3
   1186c:	mov	r3, r6
   11870:	str	r9, [sp]
   11874:	bl	111b8 <getopt_long@plt>
   11878:	cmp	r0, #97	; 0x61
   1187c:	ble	11a68 <__assert_fail@plt+0x760>
   11880:	sub	r1, r0, #98	; 0x62
   11884:	cmp	r1, #24
   11888:	bhi	1190c <__assert_fail@plt+0x604>
   1188c:	add	r2, pc, #8
   11890:	mov	r0, #1
   11894:	mov	r3, r7
   11898:	ldr	pc, [r2, r1, lsl #2]
   1189c:	andeq	r1, r1, r0, lsl #18
   118a0:	andeq	r1, r1, r8, asr r8
   118a4:	andeq	r3, r1, ip, ror #6
   118a8:	andeq	r3, r1, ip, ror #6
   118ac:	andeq	r3, r1, ip, ror #6
   118b0:	andeq	r3, r1, ip, ror #6
   118b4:	andeq	r3, r1, ip, ror #6
   118b8:	andeq	r3, r1, ip, ror #6
   118bc:	andeq	r3, r1, ip, ror #6
   118c0:	andeq	r3, r1, ip, ror #6
   118c4:	andeq	r1, r1, r0, ror r9
   118c8:	andeq	r3, r1, ip, ror #6
   118cc:	andeq	r3, r1, ip, ror #6
   118d0:	andeq	r3, r1, ip, ror #6
   118d4:	andeq	r3, r1, ip, ror #6
   118d8:	andeq	r3, r1, ip, ror #6
   118dc:	andeq	r3, r1, ip, ror #6
   118e0:	andeq	r3, r1, ip, ror #6
   118e4:	andeq	r1, r1, r0, lsl sl
   118e8:	andeq	r3, r1, ip, ror #6
   118ec:	andeq	r3, r1, ip, ror #6
   118f0:	andeq	r1, r1, r4, ror #18
   118f4:	andeq	r3, r1, ip, ror #6
   118f8:	andeq	r3, r1, ip, ror #6
   118fc:	andeq	r1, r1, r0, asr sl
   11900:	ldr	r0, [sp, #64]	; 0x40
   11904:	mov	r8, #1
   11908:	b	11858 <__assert_fail@plt+0x550>
   1190c:	sub	r0, r0, #256	; 0x100
   11910:	cmp	r0, #4
   11914:	bhi	1336c <__assert_fail@plt+0x2064>
   11918:	add	r1, pc, #4
   1191c:	mov	r3, r7
   11920:	ldr	pc, [r1, r0, lsl #2]
   11924:	andeq	r1, r1, r8, lsr r9
   11928:	andeq	r1, r1, r4, lsr sl
   1192c:	strdeq	r1, [r1], -r4
   11930:	andeq	r1, r1, ip, lsl sl
   11934:	andeq	r1, r1, r0, asr r9
   11938:	movw	r0, #384	; 0x180
   1193c:	mov	r1, #1
   11940:	movt	r0, #3
   11944:	strb	r1, [r0, #3]
   11948:	ldr	r0, [sp, #64]	; 0x40
   1194c:	b	11858 <__assert_fail@plt+0x550>
   11950:	mov	r0, #1
   11954:	mov	r8, #1
   11958:	str	r0, [sp, #60]	; 0x3c
   1195c:	ldr	r0, [sp, #64]	; 0x40
   11960:	b	11858 <__assert_fail@plt+0x550>
   11964:	movw	r0, #384	; 0x180
   11968:	mov	r1, #256	; 0x100
   1196c:	b	11a3c <__assert_fail@plt+0x734>
   11970:	movw	r0, #376	; 0x178
   11974:	movw	r1, #58991	; 0xe66f
   11978:	mov	r2, #5
   1197c:	movt	r0, #3
   11980:	movt	r1, #1
   11984:	ldr	r0, [r0]
   11988:	str	r0, [sp, #144]	; 0x90
   1198c:	mov	r0, #0
   11990:	bl	110f8 <dcgettext@plt>
   11994:	mvn	r1, #0
   11998:	str	r0, [sp, #12]
   1199c:	ldr	r0, [sp, #144]	; 0x90
   119a0:	mov	r2, #0
   119a4:	mov	r3, #0
   119a8:	str	r9, [sp, #16]
   119ac:	str	r1, [sp]
   119b0:	str	r1, [sp, #4]
   119b4:	movw	r1, #58467	; 0xe463
   119b8:	movt	r1, #1
   119bc:	str	r1, [sp, #8]
   119c0:	bl	1cc68 <__assert_fail@plt+0xb960>
   119c4:	movw	r2, #384	; 0x180
   119c8:	tst	r0, #7
   119cc:	mov	r3, r7
   119d0:	movt	r2, #3
   119d4:	strd	r0, [r2, #16]
   119d8:	movw	r1, #376	; 0x178
   119dc:	ldr	r0, [sp, #64]	; 0x40
   119e0:	movt	r1, #3
   119e4:	ldr	r1, [r1]
   119e8:	str	r1, [sp, #144]	; 0x90
   119ec:	beq	11858 <__assert_fail@plt+0x550>
   119f0:	b	13314 <__assert_fail@plt+0x200c>
   119f4:	movw	r0, #384	; 0x180
   119f8:	mov	r1, #1
   119fc:	movt	r0, #3
   11a00:	strb	r1, [r0, #2]
   11a04:	strh	r9, [r0]
   11a08:	ldr	r0, [sp, #64]	; 0x40
   11a0c:	b	11858 <__assert_fail@plt+0x550>
   11a10:	ldr	r0, [sp, #64]	; 0x40
   11a14:	mov	r8, #0
   11a18:	b	11858 <__assert_fail@plt+0x550>
   11a1c:	movw	r0, #384	; 0x180
   11a20:	mov	r1, #1
   11a24:	movt	r0, #3
   11a28:	strb	r1, [r0, #4]
   11a2c:	ldr	r0, [sp, #64]	; 0x40
   11a30:	b	11858 <__assert_fail@plt+0x550>
   11a34:	movw	r0, #384	; 0x180
   11a38:	mov	r1, #1
   11a3c:	movt	r0, #3
   11a40:	strb	r9, [r0, #2]
   11a44:	strh	r1, [r0]
   11a48:	ldr	r0, [sp, #64]	; 0x40
   11a4c:	b	11858 <__assert_fail@plt+0x550>
   11a50:	movw	r0, #384	; 0x180
   11a54:	mov	r1, #1
   11a58:	movt	r0, #3
   11a5c:	strb	r1, [r0, #5]
   11a60:	ldr	r0, [sp, #64]	; 0x40
   11a64:	b	11858 <__assert_fail@plt+0x550>
   11a68:	cmn	r0, #1
   11a6c:	bne	132a8 <__assert_fail@plt+0x1fa0>
   11a70:	movw	r1, #384	; 0x180
   11a74:	mov	r0, #1
   11a78:	ldr	r9, [sp, #64]	; 0x40
   11a7c:	movw	r2, #513	; 0x201
   11a80:	movt	r1, #3
   11a84:	strb	r0, [r1, #8]
   11a88:	ldrd	r0, [r1, #16]
   11a8c:	subs	r2, r0, r2
   11a90:	sbcs	r2, r1, #0
   11a94:	bcs	13374 <__assert_fail@plt+0x206c>
   11a98:	orrs	r2, r0, r1
   11a9c:	beq	11ab4 <__assert_fail@plt+0x7ac>
   11aa0:	lsr	r0, r0, #2
   11aa4:	movw	r2, #384	; 0x180
   11aa8:	orr	r0, r0, r1, lsl #30
   11aac:	movt	r2, #3
   11ab0:	b	11acc <__assert_fail@plt+0x7c4>
   11ab4:	movw	r2, #384	; 0x180
   11ab8:	mov	r1, #0
   11abc:	mov	r0, #512	; 0x200
   11ac0:	movt	r2, #3
   11ac4:	strd	r0, [r2, #16]
   11ac8:	mov	r0, #128	; 0x80
   11acc:	str	r0, [r2, #12]
   11ad0:	ldr	r0, [sp, #60]	; 0x3c
   11ad4:	cmp	r8, #0
   11ad8:	eor	r1, r0, #1
   11adc:	tsteq	r1, #1
   11ae0:	beq	133e8 <__assert_fail@plt+0x20e0>
   11ae4:	eor	r0, r9, #1
   11ae8:	tst	r0, #1
   11aec:	bne	11b04 <__assert_fail@plt+0x7fc>
   11af0:	movw	r2, #384	; 0x180
   11af4:	movt	r2, #3
   11af8:	ldrb	r2, [r2, #5]
   11afc:	cmp	r2, #0
   11b00:	bne	133f4 <__assert_fail@plt+0x20ec>
   11b04:	orr	r1, r1, r0
   11b08:	tst	r1, #1
   11b0c:	beq	13400 <__assert_fail@plt+0x20f8>
   11b10:	cmp	r8, #0
   11b14:	mov	r1, #0
   11b18:	movwmi	r1, #1
   11b1c:	orr	r1, r1, r0
   11b20:	tst	r1, #1
   11b24:	beq	1340c <__assert_fail@plt+0x2104>
   11b28:	movw	r2, #384	; 0x180
   11b2c:	movt	r2, #3
   11b30:	ldrb	r1, [r2, #3]
   11b34:	mvn	r1, r1
   11b38:	orr	r1, r9, r1
   11b3c:	tst	r1, #1
   11b40:	beq	13418 <__assert_fail@plt+0x2110>
   11b44:	ldrb	r1, [r2]
   11b48:	mvn	r1, r1
   11b4c:	orr	r1, r9, r1
   11b50:	tst	r1, #1
   11b54:	beq	13424 <__assert_fail@plt+0x211c>
   11b58:	ldrb	r1, [r2, #1]
   11b5c:	mvn	r1, r1
   11b60:	orr	r1, r9, r1
   11b64:	tst	r1, #1
   11b68:	beq	13430 <__assert_fail@plt+0x2128>
   11b6c:	ldrb	r1, [r2, #2]
   11b70:	mvn	r1, r1
   11b74:	orr	r1, r9, r1
   11b78:	tst	r1, #1
   11b7c:	beq	1343c <__assert_fail@plt+0x2134>
   11b80:	ldrb	r1, [r2, #4]
   11b84:	and	r0, r1, r0
   11b88:	tst	r0, #1
   11b8c:	bne	13448 <__assert_fail@plt+0x2140>
   11b90:	movw	r0, #352	; 0x160
   11b94:	add	r6, r4, r5, lsl #2
   11b98:	movt	r0, #3
   11b9c:	ldr	r0, [r0]
   11ba0:	cmp	r0, r5
   11ba4:	add	r0, r4, r0, lsl #2
   11ba8:	mov	r4, #1
   11bac:	movweq	r1, #61184	; 0xef00
   11bb0:	movteq	r1, #1
   11bb4:	streq	r1, [r6], #4
   11bb8:	cmp	r0, r6
   11bbc:	bcs	13230 <__assert_fail@plt+0x1f28>
   11bc0:	cmp	r8, #1
   11bc4:	sub	r3, fp, #116	; 0x74
   11bc8:	mov	r1, #42	; 0x2a
   11bcc:	mov	r2, r0
   11bd0:	movw	r7, #60709	; 0xed25
   11bd4:	str	r6, [sp, #76]	; 0x4c
   11bd8:	movwlt	r1, #32
   11bdc:	add	r0, r3, #7
   11be0:	movt	r7, #1
   11be4:	str	r1, [sp, #32]
   11be8:	and	r1, r0, #7
   11bec:	sub	r0, r0, r1
   11bf0:	str	r0, [sp, #20]
   11bf4:	add	r0, sp, #148	; 0x94
   11bf8:	sub	r0, r0, sl
   11bfc:	add	sl, r0, #7
   11c00:	sub	r0, r3, r1
   11c04:	mov	r1, #1
   11c08:	add	r0, r0, #7
   11c0c:	str	sl, [sp, #48]	; 0x30
   11c10:	str	r0, [sp, #24]
   11c14:	mov	r0, r2
   11c18:	b	11c74 <__assert_fail@plt+0x96c>
   11c1c:	movw	r0, #372	; 0x174
   11c20:	movt	r0, #3
   11c24:	ldr	r1, [r0]
   11c28:	mov	r0, r8
   11c2c:	bl	11068 <fputs_unlocked@plt>
   11c30:	movw	r0, #372	; 0x174
   11c34:	movt	r0, #3
   11c38:	ldr	r0, [r0]
   11c3c:	ldr	r1, [r0, #20]
   11c40:	ldr	r2, [r0, #24]
   11c44:	cmp	r1, r2
   11c48:	bcs	13144 <__assert_fail@plt+0x1e3c>
   11c4c:	add	r2, r1, #1
   11c50:	str	r2, [r0, #20]
   11c54:	ldr	r0, [sp, #144]	; 0x90
   11c58:	strb	r0, [r1]
   11c5c:	mov	r4, r5
   11c60:	ldr	r0, [sp, #104]	; 0x68
   11c64:	add	r0, r0, #4
   11c68:	mov	r1, r4
   11c6c:	cmp	r0, r6
   11c70:	bcs	13230 <__assert_fail@plt+0x1f28>
   11c74:	ldr	r4, [r0]
   11c78:	tst	r9, #1
   11c7c:	str	r0, [sp, #104]	; 0x68
   11c80:	str	r1, [sp, #88]	; 0x58
   11c84:	beq	11cec <__assert_fail@plt+0x9e4>
   11c88:	movw	r1, #61184	; 0xef00
   11c8c:	mov	r0, r4
   11c90:	movt	r1, #1
   11c94:	bl	1108c <strcmp@plt>
   11c98:	movw	sl, #384	; 0x180
   11c9c:	mov	r9, r0
   11ca0:	cmp	r0, #0
   11ca4:	movt	sl, #3
   11ca8:	beq	11ed0 <__assert_fail@plt+0xbc8>
   11cac:	movw	r1, #60690	; 0xed12
   11cb0:	mov	r0, r4
   11cb4:	movt	r1, #1
   11cb8:	bl	19dcc <__assert_fail@plt+0x8ac4>
   11cbc:	movw	r7, #57523	; 0xe0b3
   11cc0:	mov	r8, r4
   11cc4:	cmp	r0, #0
   11cc8:	mov	r2, #0
   11ccc:	sub	r4, fp, #120	; 0x78
   11cd0:	sub	r5, fp, #124	; 0x7c
   11cd4:	movt	r7, #1
   11cd8:	beq	13094 <__assert_fail@plt+0x1d8c>
   11cdc:	mov	r6, r0
   11ce0:	str	r9, [sp, #72]	; 0x48
   11ce4:	str	r8, [sp, #84]	; 0x54
   11ce8:	b	11f14 <__assert_fail@plt+0xc0c>
   11cec:	ldr	r1, [sp, #56]	; 0x38
   11cf0:	mov	r0, r4
   11cf4:	sub	r2, fp, #116	; 0x74
   11cf8:	mov	r8, r4
   11cfc:	bl	134a0 <__assert_fail@plt+0x2198>
   11d00:	movw	r5, #384	; 0x180
   11d04:	mov	r4, #0
   11d08:	cmp	r0, #0
   11d0c:	movt	r5, #3
   11d10:	beq	11c60 <__assert_fail@plt+0x958>
   11d14:	ldrb	r0, [r5, #5]
   11d18:	mov	r4, #0
   11d1c:	cmp	r0, #0
   11d20:	mov	r0, #10
   11d24:	movwne	r0, #0
   11d28:	str	r0, [sp, #144]	; 0x90
   11d2c:	bne	11d9c <__assert_fail@plt+0xa94>
   11d30:	mov	r0, r8
   11d34:	mov	r1, #92	; 0x5c
   11d38:	bl	11200 <strchr@plt>
   11d3c:	cmp	r0, #0
   11d40:	bne	11d6c <__assert_fail@plt+0xa64>
   11d44:	mov	r0, r8
   11d48:	mov	r1, #10
   11d4c:	bl	11200 <strchr@plt>
   11d50:	cmp	r0, #0
   11d54:	bne	11d6c <__assert_fail@plt+0xa64>
   11d58:	mov	r0, r8
   11d5c:	mov	r1, #13
   11d60:	bl	11200 <strchr@plt>
   11d64:	cmp	r0, #0
   11d68:	beq	11d9c <__assert_fail@plt+0xa94>
   11d6c:	movw	r0, #372	; 0x174
   11d70:	movt	r0, #3
   11d74:	ldr	r0, [r0]
   11d78:	ldr	r1, [r0, #20]
   11d7c:	ldr	r2, [r0, #24]
   11d80:	cmp	r1, r2
   11d84:	bcs	13224 <__assert_fail@plt+0x1f1c>
   11d88:	add	r2, r1, #1
   11d8c:	str	r2, [r0, #20]
   11d90:	mov	r0, #92	; 0x5c
   11d94:	strb	r0, [r1]
   11d98:	mov	r4, #1
   11d9c:	ldr	r0, [sp, #60]	; 0x3c
   11da0:	tst	r0, #1
   11da4:	beq	12fec <__assert_fail@plt+0x1ce4>
   11da8:	movw	r0, #372	; 0x174
   11dac:	movt	r0, #3
   11db0:	ldr	r1, [r0]
   11db4:	movw	r0, #57523	; 0xe0b3
   11db8:	movt	r0, #1
   11dbc:	bl	11068 <fputs_unlocked@plt>
   11dc0:	ldrd	r2, [r5, #16]
   11dc4:	lsr	r0, r2, #9
   11dc8:	orr	r0, r0, r3, lsl #23
   11dcc:	orr	r0, r0, r3, lsr #9
   11dd0:	cmp	r0, #0
   11dd4:	bne	11de8 <__assert_fail@plt+0xae0>
   11dd8:	movw	r1, #60695	; 0xed17
   11ddc:	mov	r0, #1
   11de0:	movt	r1, #1
   11de4:	bl	1123c <__printf_chk@plt>
   11de8:	movw	r0, #372	; 0x174
   11dec:	movt	r0, #3
   11df0:	ldr	r1, [r0]
   11df4:	movw	r0, #60701	; 0xed1d
   11df8:	movt	r0, #1
   11dfc:	bl	11068 <fputs_unlocked@plt>
   11e00:	cmp	r4, #0
   11e04:	mov	r6, r8
   11e08:	bne	11e40 <__assert_fail@plt+0xb38>
   11e0c:	movw	r0, #372	; 0x174
   11e10:	movt	r0, #3
   11e14:	ldr	r1, [r0]
   11e18:	mov	r0, r8
   11e1c:	bl	11068 <fputs_unlocked@plt>
   11e20:	b	12fd4 <__assert_fail@plt+0x1ccc>
   11e24:	movw	r0, #372	; 0x174
   11e28:	movt	r0, #3
   11e2c:	ldr	r1, [r0]
   11e30:	movw	r0, #60689	; 0xed11
   11e34:	movt	r0, #1
   11e38:	bl	11068 <fputs_unlocked@plt>
   11e3c:	add	r6, r6, #1
   11e40:	ldrb	r1, [r6]
   11e44:	cmp	r1, #12
   11e48:	ble	11e74 <__assert_fail@plt+0xb6c>
   11e4c:	cmp	r1, #13
   11e50:	beq	11e24 <__assert_fail@plt+0xb1c>
   11e54:	cmp	r1, #92	; 0x5c
   11e58:	bne	11e9c <__assert_fail@plt+0xb94>
   11e5c:	movw	r0, #372	; 0x174
   11e60:	movt	r0, #3
   11e64:	ldr	r1, [r0]
   11e68:	movw	r0, #60692	; 0xed14
   11e6c:	movt	r0, #1
   11e70:	b	11e38 <__assert_fail@plt+0xb30>
   11e74:	cmp	r1, #10
   11e78:	bne	11e94 <__assert_fail@plt+0xb8c>
   11e7c:	movw	r0, #372	; 0x174
   11e80:	movt	r0, #3
   11e84:	ldr	r1, [r0]
   11e88:	movw	r0, #60686	; 0xed0e
   11e8c:	movt	r0, #1
   11e90:	b	11e38 <__assert_fail@plt+0xb30>
   11e94:	cmp	r1, #0
   11e98:	beq	12fd4 <__assert_fail@plt+0x1ccc>
   11e9c:	movw	r0, #372	; 0x174
   11ea0:	movt	r0, #3
   11ea4:	ldr	r0, [r0]
   11ea8:	ldr	r2, [r0, #20]
   11eac:	ldr	r3, [r0, #24]
   11eb0:	cmp	r2, r3
   11eb4:	bcs	11ec8 <__assert_fail@plt+0xbc0>
   11eb8:	add	r3, r2, #1
   11ebc:	str	r3, [r0, #20]
   11ec0:	strb	r1, [r2]
   11ec4:	b	11e3c <__assert_fail@plt+0xb34>
   11ec8:	bl	11284 <__overflow@plt>
   11ecc:	b	11e3c <__assert_fail@plt+0xb34>
   11ed0:	movw	r1, #59686	; 0xe926
   11ed4:	mov	r0, #1
   11ed8:	mov	r2, #5
   11edc:	str	r9, [sp, #72]	; 0x48
   11ee0:	movt	r1, #1
   11ee4:	strb	r0, [sl, #9]
   11ee8:	mov	r0, #0
   11eec:	bl	110f8 <dcgettext@plt>
   11ef0:	str	r0, [sp, #84]	; 0x54
   11ef4:	movw	r0, #368	; 0x170
   11ef8:	movw	r7, #57523	; 0xe0b3
   11efc:	mov	r2, #0
   11f00:	sub	r4, fp, #120	; 0x78
   11f04:	sub	r5, fp, #124	; 0x7c
   11f08:	movt	r0, #3
   11f0c:	movt	r7, #1
   11f10:	ldr	r6, [r0]
   11f14:	mov	r0, #0
   11f18:	mov	r1, #0
   11f1c:	mov	r9, #0
   11f20:	mov	r8, #0
   11f24:	str	r6, [sp, #132]	; 0x84
   11f28:	str	r0, [sp, #40]	; 0x28
   11f2c:	mov	r0, #0
   11f30:	str	r1, [fp, #-124]	; 0xffffff84
   11f34:	str	r1, [fp, #-120]	; 0xffffff88
   11f38:	mov	r1, #0
   11f3c:	str	r0, [sp, #144]	; 0x90
   11f40:	mov	r0, #0
   11f44:	str	r0, [sp, #52]	; 0x34
   11f48:	mov	r0, #0
   11f4c:	str	r0, [sp, #68]	; 0x44
   11f50:	mov	r0, #0
   11f54:	str	r0, [sp, #80]	; 0x50
   11f58:	mov	r0, #0
   11f5c:	str	r0, [sp, #44]	; 0x2c
   11f60:	mov	r0, #0
   11f64:	str	r0, [sp, #120]	; 0x78
   11f68:	mov	r0, #0
   11f6c:	str	r0, [sp, #124]	; 0x7c
   11f70:	mov	r0, #0
   11f74:	str	r0, [sp, #116]	; 0x74
   11f78:	b	11f94 <__assert_fail@plt+0xc8c>
   11f7c:	ldr	r8, [sp, #140]	; 0x8c
   11f80:	ldr	r1, [sp, #136]	; 0x88
   11f84:	mov	r2, #0
   11f88:	ldrb	r0, [r6]
   11f8c:	tst	r0, #48	; 0x30
   11f90:	bne	12ce4 <__assert_fail@plt+0x19dc>
   11f94:	ldr	r0, [sp, #144]	; 0x90
   11f98:	mov	sl, #0
   11f9c:	str	r1, [sp, #136]	; 0x88
   11fa0:	str	r8, [sp, #140]	; 0x8c
   11fa4:	adds	r0, r0, #1
   11fa8:	adcs	r9, r9, #0
   11fac:	str	r0, [sp, #144]	; 0x90
   11fb0:	adc	r0, r2, #0
   11fb4:	cmp	r0, #1
   11fb8:	beq	1326c <__assert_fail@plt+0x1f64>
   11fbc:	mov	r0, r4
   11fc0:	mov	r1, r5
   11fc4:	mov	r2, #10
   11fc8:	mov	r3, r6
   11fcc:	bl	11080 <__getdelim@plt>
   11fd0:	cmp	r0, #1
   11fd4:	blt	12cdc <__assert_fail@plt+0x19d4>
   11fd8:	mov	r8, r0
   11fdc:	ldr	r0, [fp, #-120]	; 0xffffff88
   11fe0:	ldr	r6, [sp, #132]	; 0x84
   11fe4:	ldrb	r1, [r0]
   11fe8:	cmp	r1, #35	; 0x23
   11fec:	beq	11f7c <__assert_fail@plt+0xc74>
   11ff0:	add	r1, r8, r0
   11ff4:	ldrb	r1, [r1, #-1]
   11ff8:	sub	r1, r1, #10
   11ffc:	clz	r1, r1
   12000:	lsr	r3, r1, #5
   12004:	sub	r1, r8, r3
   12008:	cmp	r1, #0
   1200c:	mov	r2, r1
   12010:	subgt	r2, r2, #1
   12014:	ldrb	r2, [r0, r2]
   12018:	sub	r2, r2, #13
   1201c:	clz	r2, r2
   12020:	lsr	r2, r2, #5
   12024:	subs	r1, r1, r2
   12028:	beq	11f7c <__assert_fail@plt+0xc74>
   1202c:	mov	r4, #0
   12030:	strb	r4, [r0, r1]
   12034:	ldr	r5, [fp, #-120]	; 0xffffff88
   12038:	b	12040 <__assert_fail@plt+0xd38>
   1203c:	add	r4, r4, #1
   12040:	ldrb	r0, [r5, r4]
   12044:	cmp	r0, #9
   12048:	cmpne	r0, #32
   1204c:	beq	1203c <__assert_fail@plt+0xd34>
   12050:	cmp	r0, #92	; 0x5c
   12054:	str	r1, [sp, #108]	; 0x6c
   12058:	str	r2, [sp, #96]	; 0x60
   1205c:	mov	r1, r7
   12060:	mov	r2, #7
   12064:	str	r3, [sp, #100]	; 0x64
   12068:	str	r9, [sp, #112]	; 0x70
   1206c:	addeq	r4, r4, #1
   12070:	movne	r0, #0
   12074:	moveq	r0, #1
   12078:	add	r6, r5, r4
   1207c:	str	r0, [sp, #92]	; 0x5c
   12080:	mov	r0, r6
   12084:	bl	112d8 <strncmp@plt>
   12088:	cmp	r0, #0
   1208c:	beq	122dc <__assert_fail@plt+0xfd4>
   12090:	movw	r0, #384	; 0x180
   12094:	ldrb	r1, [r6]
   12098:	str	r6, [sp, #128]	; 0x80
   1209c:	movt	r0, #3
   120a0:	ldrb	r0, [r0, #8]
   120a4:	sub	r1, r1, #92	; 0x5c
   120a8:	clz	r1, r1
   120ac:	lsr	r1, r1, #5
   120b0:	cmp	r0, #0
   120b4:	ldr	r0, [sp, #108]	; 0x6c
   120b8:	addne	r1, r1, #3
   120bc:	sub	r0, r0, r4
   120c0:	cmp	r0, r1
   120c4:	bcc	127f8 <__assert_fail@plt+0x14f0>
   120c8:	movw	r0, #384	; 0x180
   120cc:	movt	r0, #3
   120d0:	str	sl, [r0, #12]
   120d4:	bl	111c4 <__ctype_b_loc@plt>
   120d8:	ldr	r1, [sp, #128]	; 0x80
   120dc:	ldr	r7, [r0]
   120e0:	ldrb	r1, [r1]
   120e4:	add	r1, r7, r1, lsl #1
   120e8:	ldrb	r1, [r1, #1]
   120ec:	tst	r1, #16
   120f0:	beq	127f8 <__assert_fail@plt+0x14f0>
   120f4:	add	lr, r5, r4
   120f8:	mov	r3, #0
   120fc:	mov	r2, #0
   12100:	add	r1, lr, #1
   12104:	ldrb	r6, [r1, r2]
   12108:	add	r3, r3, #4
   1210c:	add	r2, r2, #1
   12110:	add	r6, r7, r6, lsl #1
   12114:	ldrb	r6, [r6, #1]
   12118:	tst	r6, #16
   1211c:	bne	12104 <__assert_fail@plt+0xdfc>
   12120:	movw	r1, #384	; 0x180
   12124:	cmp	r2, #2
   12128:	mov	r6, #0
   1212c:	movt	r1, #3
   12130:	str	r2, [r1, #12]
   12134:	bcc	127f8 <__assert_fail@plt+0x14f0>
   12138:	cmp	r2, #128	; 0x80
   1213c:	bhi	127f8 <__assert_fail@plt+0x14f0>
   12140:	ands	r1, r2, #1
   12144:	bne	127f8 <__assert_fail@plt+0x14f0>
   12148:	movw	r1, #384	; 0x180
   1214c:	movt	r1, #3
   12150:	str	r3, [r1, #16]
   12154:	str	r6, [r1, #20]
   12158:	mov	r1, lr
   1215c:	ldrb	r3, [r1, r2]!
   12160:	cmp	r3, #32
   12164:	cmpne	r3, #9
   12168:	bne	127f8 <__assert_fail@plt+0x14f0>
   1216c:	add	r1, r1, #1
   12170:	mov	r3, #0
   12174:	add	r7, r4, r2
   12178:	strb	r3, [r1, #-1]
   1217c:	add	ip, r7, #1
   12180:	ldr	r0, [r0]
   12184:	ldr	r1, [sp, #128]	; 0x80
   12188:	ldrb	r1, [r1, r3]
   1218c:	add	r1, r0, r1, lsl #1
   12190:	ldrb	r1, [r1, #1]
   12194:	tst	r1, #16
   12198:	beq	127f8 <__assert_fail@plt+0x14f0>
   1219c:	add	r3, r3, #1
   121a0:	cmp	r3, r2
   121a4:	bcc	12184 <__assert_fail@plt+0xe7c>
   121a8:	ldr	r0, [sp, #128]	; 0x80
   121ac:	ldrb	r0, [r0, r3]
   121b0:	cmp	r0, #0
   121b4:	bne	127f8 <__assert_fail@plt+0x14f0>
   121b8:	ldr	r0, [sp, #100]	; 0x64
   121bc:	ldr	r1, [sp, #96]	; 0x60
   121c0:	add	r0, r0, r1
   121c4:	sub	r0, r0, r8
   121c8:	add	r0, r0, r4
   121cc:	add	r0, r0, r2
   121d0:	cmn	r0, #2
   121d4:	beq	12648 <__assert_fail@plt+0x1340>
   121d8:	add	r0, lr, r2
   121dc:	ldrb	r0, [r0, #1]
   121e0:	cmp	r0, #32
   121e4:	cmpne	r0, #42	; 0x2a
   121e8:	bne	12648 <__assert_fail@plt+0x1340>
   121ec:	movw	r0, #264	; 0x108
   121f0:	movt	r0, #3
   121f4:	ldr	r0, [r0]
   121f8:	cmp	r0, #1
   121fc:	movwne	r0, #264	; 0x108
   12200:	addne	ip, r7, #2
   12204:	movtne	r0, #3
   12208:	strne	r6, [r0]
   1220c:	ldr	r0, [sp, #92]	; 0x5c
   12210:	add	lr, r5, ip
   12214:	cmp	r0, #0
   12218:	beq	1267c <__assert_fail@plt+0x1374>
   1221c:	ldr	r0, [sp, #108]	; 0x6c
   12220:	subs	r1, r0, ip
   12224:	mov	r0, lr
   12228:	beq	122c0 <__assert_fail@plt+0xfb8>
   1222c:	sub	r2, r1, #1
   12230:	mov	r3, #0
   12234:	mov	r0, lr
   12238:	ldrb	r7, [lr, r3]
   1223c:	cmp	r7, #92	; 0x5c
   12240:	beq	12268 <__assert_fail@plt+0xf60>
   12244:	cmp	r7, #0
   12248:	beq	127f8 <__assert_fail@plt+0x14f0>
   1224c:	add	r3, r3, #1
   12250:	strb	r7, [r0], #1
   12254:	cmp	r3, r1
   12258:	bcs	122c0 <__assert_fail@plt+0xfb8>
   1225c:	ldrb	r7, [lr, r3]
   12260:	cmp	r7, #92	; 0x5c
   12264:	bne	12244 <__assert_fail@plt+0xf3c>
   12268:	cmp	r3, r2
   1226c:	beq	127f8 <__assert_fail@plt+0x14f0>
   12270:	add	r3, r3, #1
   12274:	ldrb	r4, [lr, r3]
   12278:	cmp	r4, #92	; 0x5c
   1227c:	beq	122ac <__assert_fail@plt+0xfa4>
   12280:	mov	r7, #10
   12284:	cmp	r4, #110	; 0x6e
   12288:	beq	1224c <__assert_fail@plt+0xf44>
   1228c:	cmp	r4, #114	; 0x72
   12290:	bne	127f8 <__assert_fail@plt+0x14f0>
   12294:	mov	r7, #13
   12298:	add	r3, r3, #1
   1229c:	strb	r7, [r0], #1
   122a0:	cmp	r3, r1
   122a4:	bcc	1225c <__assert_fail@plt+0xf54>
   122a8:	b	122c0 <__assert_fail@plt+0xfb8>
   122ac:	mov	r7, #92	; 0x5c
   122b0:	add	r3, r3, #1
   122b4:	strb	r7, [r0], #1
   122b8:	cmp	r3, r1
   122bc:	bcc	1225c <__assert_fail@plt+0xf54>
   122c0:	ldr	r1, [sp, #108]	; 0x6c
   122c4:	add	r1, r5, r1
   122c8:	cmp	r0, r1
   122cc:	strbcc	r6, [r0]
   122d0:	cmp	lr, #0
   122d4:	bne	1267c <__assert_fail@plt+0x1374>
   122d8:	b	127f8 <__assert_fail@plt+0x14f0>
   122dc:	mov	r1, r7
   122e0:	add	r7, r4, #7
   122e4:	mov	r0, r6
   122e8:	ldrb	r9, [r5, r7]
   122ec:	strb	sl, [r5, r7]
   122f0:	bl	1108c <strcmp@plt>
   122f4:	cmp	r0, #0
   122f8:	bne	127f8 <__assert_fail@plt+0x14f0>
   122fc:	cmp	r9, #40	; 0x28
   12300:	mov	r1, #0
   12304:	mov	r3, #128	; 0x80
   12308:	moveq	r0, #40	; 0x28
   1230c:	strbeq	r0, [r5, r7]
   12310:	addne	r7, r4, #8
   12314:	movw	r4, #384	; 0x180
   12318:	mov	r0, #512	; 0x200
   1231c:	cmp	r9, #45	; 0x2d
   12320:	movt	r4, #3
   12324:	strd	r0, [r4, #16]
   12328:	bne	12394 <__assert_fail@plt+0x108c>
   1232c:	str	r1, [sp]
   12330:	add	r0, r5, r7
   12334:	sub	r1, fp, #44	; 0x2c
   12338:	mov	r2, #0
   1233c:	sub	r3, fp, #40	; 0x28
   12340:	bl	1cc70 <__assert_fail@plt+0xb968>
   12344:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12348:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1234c:	subs	r4, r2, #1
   12350:	sbc	r7, r3, #0
   12354:	tst	r2, #7
   12358:	cmpeq	r0, #0
   1235c:	bne	127f8 <__assert_fail@plt+0x14f0>
   12360:	movw	r0, #384	; 0x180
   12364:	movt	r0, #3
   12368:	ldrd	r0, [r0, #16]
   1236c:	subs	r0, r4, r0
   12370:	sbcs	r0, r7, r1
   12374:	bcs	127f8 <__assert_fail@plt+0x14f0>
   12378:	movw	r4, #384	; 0x180
   1237c:	lsr	r0, r2, #2
   12380:	movt	r4, #3
   12384:	strd	r2, [r4, #16]
   12388:	orr	r3, r0, r3, lsl #30
   1238c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12390:	sub	r7, r0, r5
   12394:	str	r3, [r4, #12]
   12398:	ldrb	r0, [r5, r7]
   1239c:	sub	r0, r0, #32
   123a0:	clz	r0, r0
   123a4:	lsr	r2, r0, #5
   123a8:	add	r0, r7, r2
   123ac:	ldrb	r1, [r5, r0]
   123b0:	cmp	r1, #40	; 0x28
   123b4:	bne	127f8 <__assert_fail@plt+0x14f0>
   123b8:	ldr	r1, [sp, #108]	; 0x6c
   123bc:	add	r0, r0, #1
   123c0:	subs	r1, r1, r0
   123c4:	beq	127f8 <__assert_fail@plt+0x14f0>
   123c8:	str	r3, [sp, #28]
   123cc:	ldr	r3, [sp, #100]	; 0x64
   123d0:	ldr	r6, [sp, #96]	; 0x60
   123d4:	add	r0, r5, r0
   123d8:	str	r0, [sp, #36]	; 0x24
   123dc:	add	r1, r3, r6
   123e0:	add	r3, r7, r3
   123e4:	sub	r0, r5, r1
   123e8:	sub	r1, r8, r1
   123ec:	add	r3, r3, r6
   123f0:	add	r7, r3, r2
   123f4:	add	r1, r5, r1
   123f8:	add	r4, r1, #2
   123fc:	add	r1, r1, #1
   12400:	add	r3, r7, #2
   12404:	add	r5, r7, #3
   12408:	add	r9, r7, #1
   1240c:	mov	r2, r5
   12410:	mov	ip, r3
   12414:	mov	r5, r0
   12418:	mov	r6, r1
   1241c:	mov	r7, r4
   12420:	cmp	r8, r3
   12424:	beq	12564 <__assert_fail@plt+0x125c>
   12428:	add	r0, r5, r8
   1242c:	mov	lr, r9
   12430:	sub	r1, r6, #1
   12434:	add	r3, ip, #1
   12438:	mov	sl, r7
   1243c:	add	r9, r9, #1
   12440:	ldrb	r0, [r0, #-1]
   12444:	str	r0, [sp, #128]	; 0x80
   12448:	sub	r0, r7, #1
   1244c:	mov	r7, r5
   12450:	ldr	r4, [sp, #128]	; 0x80
   12454:	str	r0, [sp, #108]	; 0x6c
   12458:	sub	r0, r5, #1
   1245c:	add	r5, r2, #1
   12460:	cmp	r4, #41	; 0x29
   12464:	ldr	r4, [sp, #108]	; 0x6c
   12468:	bne	1240c <__assert_fail@plt+0x1104>
   1246c:	ldr	r1, [sp, #28]
   12470:	str	lr, [sp, #100]	; 0x64
   12474:	ldr	lr, [sp, #36]	; 0x24
   12478:	add	r0, r0, r8
   1247c:	mov	r5, r7
   12480:	mov	r7, sl
   12484:	str	r6, [sp, #128]	; 0x80
   12488:	str	r0, [sp, #108]	; 0x6c
   1248c:	mov	r0, #0
   12490:	mov	sl, r1
   12494:	ldr	r1, [sp, #92]	; 0x5c
   12498:	cmp	r1, #0
   1249c:	beq	12594 <__assert_fail@plt+0x128c>
   124a0:	cmp	r0, #0
   124a4:	mov	r4, lr
   124a8:	bne	12550 <__assert_fail@plt+0x1248>
   124ac:	sub	r0, r8, ip
   124b0:	mov	r3, #0
   124b4:	mov	r4, lr
   124b8:	ldrb	r1, [lr, r3]
   124bc:	cmp	r1, #92	; 0x5c
   124c0:	beq	124e8 <__assert_fail@plt+0x11e0>
   124c4:	cmp	r1, #0
   124c8:	beq	127f8 <__assert_fail@plt+0x14f0>
   124cc:	add	r3, r3, #1
   124d0:	strb	r1, [r4], #1
   124d4:	cmp	r3, r0
   124d8:	bcs	12550 <__assert_fail@plt+0x1248>
   124dc:	ldrb	r1, [lr, r3]
   124e0:	cmp	r1, #92	; 0x5c
   124e4:	bne	124c4 <__assert_fail@plt+0x11bc>
   124e8:	sub	r1, r8, r3
   124ec:	cmp	r1, r2
   124f0:	beq	127f8 <__assert_fail@plt+0x14f0>
   124f4:	add	r3, r3, #1
   124f8:	mov	r6, r2
   124fc:	ldrb	r2, [lr, r3]
   12500:	cmp	r2, #92	; 0x5c
   12504:	beq	12538 <__assert_fail@plt+0x1230>
   12508:	mov	r1, #10
   1250c:	cmp	r2, #110	; 0x6e
   12510:	beq	1253c <__assert_fail@plt+0x1234>
   12514:	cmp	r2, #114	; 0x72
   12518:	bne	127f8 <__assert_fail@plt+0x14f0>
   1251c:	mov	r2, r6
   12520:	mov	r1, #13
   12524:	add	r3, r3, #1
   12528:	strb	r1, [r4], #1
   1252c:	cmp	r3, r0
   12530:	bcc	124dc <__assert_fail@plt+0x11d4>
   12534:	b	12550 <__assert_fail@plt+0x1248>
   12538:	mov	r1, #92	; 0x5c
   1253c:	mov	r2, r6
   12540:	add	r3, r3, #1
   12544:	strb	r1, [r4], #1
   12548:	cmp	r3, r0
   1254c:	bcc	124dc <__assert_fail@plt+0x11d4>
   12550:	ldr	r0, [sp, #108]	; 0x6c
   12554:	cmp	r4, r0
   12558:	movcc	r0, #0
   1255c:	strbcc	r0, [r4]
   12560:	b	12594 <__assert_fail@plt+0x128c>
   12564:	ldr	lr, [sp, #36]	; 0x24
   12568:	ldr	sl, [sp, #28]
   1256c:	mov	r0, #1
   12570:	str	r9, [sp, #100]	; 0x64
   12574:	str	r6, [sp, #128]	; 0x80
   12578:	ldrb	r1, [lr]
   1257c:	str	lr, [sp, #108]	; 0x6c
   12580:	cmp	r1, #41	; 0x29
   12584:	bne	127f8 <__assert_fail@plt+0x14f0>
   12588:	ldr	r1, [sp, #92]	; 0x5c
   1258c:	cmp	r1, #0
   12590:	bne	124a0 <__assert_fail@plt+0x1198>
   12594:	ldr	r0, [sp, #100]	; 0x64
   12598:	ldr	r2, [sp, #108]	; 0x6c
   1259c:	mov	r1, #0
   125a0:	sub	r0, r8, r0
   125a4:	strb	r1, [r2]
   125a8:	b	125c4 <__assert_fail@plt+0x12bc>
   125ac:	ldr	r1, [sp, #128]	; 0x80
   125b0:	add	r7, r7, #1
   125b4:	add	r8, r8, #1
   125b8:	add	r0, r0, #1
   125bc:	add	r1, r1, #1
   125c0:	str	r1, [sp, #128]	; 0x80
   125c4:	ldrb	r1, [r5, r8]
   125c8:	cmp	r1, #9
   125cc:	cmpne	r1, #32
   125d0:	beq	125ac <__assert_fail@plt+0x12a4>
   125d4:	cmp	r1, #61	; 0x3d
   125d8:	bne	127f8 <__assert_fail@plt+0x14f0>
   125dc:	ldr	r0, [sp, #128]	; 0x80
   125e0:	ldrb	r5, [r0]
   125e4:	cmp	r5, #32
   125e8:	cmpne	r5, #9
   125ec:	bne	12604 <__assert_fail@plt+0x12fc>
   125f0:	ldr	r0, [sp, #128]	; 0x80
   125f4:	add	r7, r7, #1
   125f8:	add	r0, r0, #1
   125fc:	str	r0, [sp, #128]	; 0x80
   12600:	b	125dc <__assert_fail@plt+0x12d4>
   12604:	cmp	sl, #0
   12608:	beq	1263c <__assert_fail@plt+0x1334>
   1260c:	bl	111c4 <__ctype_b_loc@plt>
   12610:	ldr	r2, [sp, #28]
   12614:	ldr	lr, [sp, #36]	; 0x24
   12618:	ldr	r0, [r0]
   1261c:	uxtb	r1, r5
   12620:	add	r1, r0, r1, lsl #1
   12624:	ldrb	r1, [r1, #1]
   12628:	tst	r1, #16
   1262c:	beq	127f8 <__assert_fail@plt+0x14f0>
   12630:	ldrb	r5, [r7], #1
   12634:	subs	r2, r2, #1
   12638:	bne	1261c <__assert_fail@plt+0x1314>
   1263c:	cmp	r5, #0
   12640:	bne	127f8 <__assert_fail@plt+0x14f0>
   12644:	b	1267c <__assert_fail@plt+0x1374>
   12648:	movw	r0, #264	; 0x108
   1264c:	movt	r0, #3
   12650:	ldr	r0, [r0]
   12654:	cmp	r0, #0
   12658:	beq	127f8 <__assert_fail@plt+0x14f0>
   1265c:	movw	r1, #264	; 0x108
   12660:	mov	r0, #1
   12664:	movt	r1, #3
   12668:	str	r0, [r1]
   1266c:	ldr	r0, [sp, #92]	; 0x5c
   12670:	add	lr, r5, ip
   12674:	cmp	r0, #0
   12678:	bne	1221c <__assert_fail@plt+0xf14>
   1267c:	ldr	r0, [sp, #72]	; 0x48
   12680:	str	lr, [sp, #36]	; 0x24
   12684:	cmp	r0, #0
   12688:	bne	126a8 <__assert_fail@plt+0x13a0>
   1268c:	movw	r1, #61184	; 0xef00
   12690:	mov	r0, lr
   12694:	movt	r1, #1
   12698:	bl	1108c <strcmp@plt>
   1269c:	ldr	lr, [sp, #36]	; 0x24
   126a0:	cmp	r0, #0
   126a4:	beq	127f8 <__assert_fail@plt+0x14f0>
   126a8:	movw	r4, #384	; 0x180
   126ac:	mov	r8, #0
   126b0:	movt	r4, #3
   126b4:	ldrb	r0, [r4]
   126b8:	cmp	r0, #0
   126bc:	bne	126dc <__assert_fail@plt+0x13d4>
   126c0:	mov	r0, lr
   126c4:	mov	r1, #10
   126c8:	bl	11200 <strchr@plt>
   126cc:	ldr	lr, [sp, #36]	; 0x24
   126d0:	cmp	r0, #0
   126d4:	mov	r8, r0
   126d8:	movwne	r8, #1
   126dc:	ldr	r1, [sp, #20]
   126e0:	mov	r0, lr
   126e4:	sub	r2, fp, #40	; 0x28
   126e8:	bl	134a0 <__assert_fail@plt+0x2198>
   126ec:	ldr	r1, [sp, #80]	; 0x50
   126f0:	movw	r7, #57523	; 0xe0b3
   126f4:	cmp	r0, #0
   126f8:	movt	r7, #1
   126fc:	beq	128b8 <__assert_fail@plt+0x15b0>
   12700:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   12704:	ldr	r6, [sp, #132]	; 0x84
   12708:	sub	r5, fp, #124	; 0x7c
   1270c:	cmp	r0, #0
   12710:	ldrbne	r0, [r4, #3]
   12714:	cmpne	r0, #0
   12718:	bne	12948 <__assert_fail@plt+0x1640>
   1271c:	ldr	r0, [r4, #12]
   12720:	ldr	sl, [sp, #44]	; 0x2c
   12724:	ldr	r9, [sp, #112]	; 0x70
   12728:	mov	r5, #0
   1272c:	cmp	r5, r0, lsr #1
   12730:	lsr	ip, r0, #1
   12734:	beq	127a0 <__assert_fail@plt+0x1498>
   12738:	mov	r4, ip
   1273c:	bl	111a0 <__ctype_tolower_loc@plt>
   12740:	ldr	r6, [sp, #132]	; 0x84
   12744:	ldr	r0, [r0]
   12748:	movw	r7, #61000	; 0xee48
   1274c:	mov	ip, r4
   12750:	mov	r5, #0
   12754:	movt	r7, #1
   12758:	ldr	r1, [sp, #24]
   1275c:	ldr	r4, [sp, #128]	; 0x80
   12760:	ldrb	r3, [r4, r5, lsl #1]
   12764:	ldrb	r1, [r1, r5]
   12768:	ldrb	r2, [r7, r1, lsr #4]
   1276c:	ldr	r3, [r0, r3, lsl #2]
   12770:	cmp	r3, r2
   12774:	addeq	r2, r4, r5, lsl #1
   12778:	andeq	r1, r1, #15
   1277c:	ldrbeq	r1, [r7, r1]
   12780:	ldrbeq	r2, [r2, #1]
   12784:	ldreq	r2, [r0, r2, lsl #2]
   12788:	cmpeq	r2, r1
   1278c:	bne	127a0 <__assert_fail@plt+0x1498>
   12790:	add	r5, r5, #1
   12794:	cmp	ip, r5
   12798:	bne	12758 <__assert_fail@plt+0x1450>
   1279c:	mov	r5, ip
   127a0:	movw	r2, #384	; 0x180
   127a4:	ldr	r1, [sp, #140]	; 0x8c
   127a8:	adds	r3, sl, #1
   127ac:	mov	r0, sl
   127b0:	movt	r2, #3
   127b4:	ldrb	r2, [r2]
   127b8:	adc	r7, r1, #0
   127bc:	cmp	r5, ip
   127c0:	movne	r0, r3
   127c4:	movne	r1, r7
   127c8:	cmp	r2, #0
   127cc:	beq	1295c <__assert_fail@plt+0x1654>
   127d0:	ldr	r3, [sp, #40]	; 0x28
   127d4:	sub	r2, r5, ip
   127d8:	str	r0, [sp, #44]	; 0x2c
   127dc:	mov	r8, r1
   127e0:	sub	r4, fp, #120	; 0x78
   127e4:	clz	r2, r2
   127e8:	lsr	r2, r2, #5
   127ec:	orr	r3, r3, r2
   127f0:	str	r3, [sp, #40]	; 0x28
   127f4:	b	12b68 <__assert_fail@plt+0x1860>
   127f8:	ldr	r1, [sp, #136]	; 0x88
   127fc:	ldr	r0, [sp, #116]	; 0x74
   12800:	ldr	r9, [sp, #112]	; 0x70
   12804:	movw	r7, #57523	; 0xe0b3
   12808:	movt	r7, #1
   1280c:	adds	r1, r1, #1
   12810:	adc	r0, r0, #0
   12814:	str	r0, [sp, #116]	; 0x74
   12818:	movw	r0, #384	; 0x180
   1281c:	movt	r0, #3
   12820:	ldrb	r0, [r0, #1]
   12824:	cmp	r0, #1
   12828:	bne	1287c <__assert_fail@plt+0x1574>
   1282c:	mov	r4, r1
   12830:	movw	r1, #60251	; 0xeb5b
   12834:	mov	r0, #0
   12838:	mov	r2, #5
   1283c:	movt	r1, #1
   12840:	bl	110f8 <dcgettext@plt>
   12844:	ldr	r2, [sp, #84]	; 0x54
   12848:	mov	r5, r0
   1284c:	mov	r0, #0
   12850:	mov	r1, #3
   12854:	bl	1bc64 <__assert_fail@plt+0xa95c>
   12858:	mov	r3, r0
   1285c:	ldr	r0, [sp, #144]	; 0x90
   12860:	mov	r1, #0
   12864:	mov	r2, r5
   12868:	stm	sp, {r0, r9}
   1286c:	mov	r0, #0
   12870:	str	r7, [sp, #8]
   12874:	bl	11170 <error@plt>
   12878:	mov	r1, r4
   1287c:	ldr	r0, [sp, #120]	; 0x78
   12880:	ldr	r8, [sp, #140]	; 0x8c
   12884:	ldr	r6, [sp, #132]	; 0x84
   12888:	sub	r4, fp, #120	; 0x78
   1288c:	sub	r5, fp, #124	; 0x7c
   12890:	mov	r2, #0
   12894:	adds	r0, r0, #1
   12898:	str	r0, [sp, #120]	; 0x78
   1289c:	ldr	r0, [sp, #124]	; 0x7c
   128a0:	adc	r0, r0, #0
   128a4:	str	r0, [sp, #124]	; 0x7c
   128a8:	ldrb	r0, [r6]
   128ac:	tst	r0, #48	; 0x30
   128b0:	beq	11f94 <__assert_fail@plt+0xc8c>
   128b4:	b	12ce4 <__assert_fail@plt+0x19dc>
   128b8:	ldr	r0, [sp, #68]	; 0x44
   128bc:	ldr	r6, [sp, #132]	; 0x84
   128c0:	sub	r5, fp, #124	; 0x7c
   128c4:	mov	r2, #0
   128c8:	adds	r0, r0, #1
   128cc:	str	r0, [sp, #68]	; 0x44
   128d0:	ldrb	r0, [r4]
   128d4:	adc	r1, r1, #0
   128d8:	sub	r4, fp, #120	; 0x78
   128dc:	str	r1, [sp, #80]	; 0x50
   128e0:	cmp	r0, #0
   128e4:	beq	128f8 <__assert_fail@plt+0x15f0>
   128e8:	ldr	r8, [sp, #140]	; 0x8c
   128ec:	ldr	r1, [sp, #136]	; 0x88
   128f0:	ldr	r9, [sp, #112]	; 0x70
   128f4:	b	12c9c <__assert_fail@plt+0x1994>
   128f8:	movw	r0, #372	; 0x174
   128fc:	ldr	r9, [sp, #112]	; 0x70
   12900:	cmp	r8, #0
   12904:	movt	r0, #3
   12908:	ldr	r1, [r0]
   1290c:	beq	12994 <__assert_fail@plt+0x168c>
   12910:	ldr	r0, [r1, #20]
   12914:	ldr	r2, [r1, #24]
   12918:	ldr	r6, [sp, #36]	; 0x24
   1291c:	cmp	r0, r2
   12920:	bcs	12b7c <__assert_fail@plt+0x1874>
   12924:	add	r2, r0, #1
   12928:	str	r2, [r1, #20]
   1292c:	mov	r1, #92	; 0x5c
   12930:	strb	r1, [r0]
   12934:	ldr	r8, [sp, #140]	; 0x8c
   12938:	ldrb	r1, [r6]
   1293c:	cmp	r1, #12
   12940:	bgt	12bf0 <__assert_fail@plt+0x18e8>
   12944:	b	12c40 <__assert_fail@plt+0x1938>
   12948:	ldr	r8, [sp, #140]	; 0x8c
   1294c:	ldr	r1, [sp, #136]	; 0x88
   12950:	ldr	r9, [sp, #112]	; 0x70
   12954:	sub	r4, fp, #120	; 0x78
   12958:	b	12c98 <__assert_fail@plt+0x1990>
   1295c:	cmp	r5, ip
   12960:	bne	129a4 <__assert_fail@plt+0x169c>
   12964:	movw	r0, #384	; 0x180
   12968:	movt	r0, #3
   1296c:	ldrb	r0, [r0, #2]
   12970:	cmp	r0, #0
   12974:	beq	129a4 <__assert_fail@plt+0x169c>
   12978:	ldr	r8, [sp, #140]	; 0x8c
   1297c:	movw	r7, #57523	; 0xe0b3
   12980:	mov	r0, #1
   12984:	sub	r4, fp, #120	; 0x78
   12988:	sub	r5, fp, #124	; 0x7c
   1298c:	str	r0, [sp, #40]	; 0x28
   12990:	b	12b70 <__assert_fail@plt+0x1868>
   12994:	ldr	r0, [sp, #36]	; 0x24
   12998:	bl	11068 <fputs_unlocked@plt>
   1299c:	ldr	r8, [sp, #140]	; 0x8c
   129a0:	b	12c68 <__assert_fail@plt+0x1960>
   129a4:	movw	r0, #372	; 0x174
   129a8:	mov	r4, ip
   129ac:	cmp	r8, #0
   129b0:	str	r7, [sp, #108]	; 0x6c
   129b4:	str	r3, [sp, #128]	; 0x80
   129b8:	movt	r0, #3
   129bc:	ldr	r1, [r0]
   129c0:	beq	12abc <__assert_fail@plt+0x17b4>
   129c4:	ldr	r0, [r1, #20]
   129c8:	ldr	r2, [r1, #24]
   129cc:	ldr	r7, [sp, #36]	; 0x24
   129d0:	cmp	r0, r2
   129d4:	bcs	12cb4 <__assert_fail@plt+0x19ac>
   129d8:	add	r2, r0, #1
   129dc:	str	r2, [r1, #20]
   129e0:	mov	r1, #92	; 0x5c
   129e4:	strb	r1, [r0]
   129e8:	ldr	r8, [sp, #140]	; 0x8c
   129ec:	ldrb	r1, [r7]
   129f0:	cmp	r1, #12
   129f4:	ble	12a38 <__assert_fail@plt+0x1730>
   129f8:	cmp	r1, #13
   129fc:	beq	12a20 <__assert_fail@plt+0x1718>
   12a00:	cmp	r1, #92	; 0x5c
   12a04:	bne	12a78 <__assert_fail@plt+0x1770>
   12a08:	movw	r0, #372	; 0x174
   12a0c:	movt	r0, #3
   12a10:	ldr	r1, [r0]
   12a14:	movw	r0, #60692	; 0xed14
   12a18:	movt	r0, #1
   12a1c:	b	12a54 <__assert_fail@plt+0x174c>
   12a20:	movw	r0, #372	; 0x174
   12a24:	movt	r0, #3
   12a28:	ldr	r1, [r0]
   12a2c:	movw	r0, #60689	; 0xed11
   12a30:	movt	r0, #1
   12a34:	b	12a54 <__assert_fail@plt+0x174c>
   12a38:	cmp	r1, #10
   12a3c:	bne	12a70 <__assert_fail@plt+0x1768>
   12a40:	movw	r0, #372	; 0x174
   12a44:	movt	r0, #3
   12a48:	ldr	r1, [r0]
   12a4c:	movw	r0, #60686	; 0xed0e
   12a50:	movt	r0, #1
   12a54:	bl	11068 <fputs_unlocked@plt>
   12a58:	ldr	r6, [sp, #132]	; 0x84
   12a5c:	add	r7, r7, #1
   12a60:	ldrb	r1, [r7]
   12a64:	cmp	r1, #12
   12a68:	bgt	129f8 <__assert_fail@plt+0x16f0>
   12a6c:	b	12a38 <__assert_fail@plt+0x1730>
   12a70:	cmp	r1, #0
   12a74:	beq	12acc <__assert_fail@plt+0x17c4>
   12a78:	movw	r0, #372	; 0x174
   12a7c:	movt	r0, #3
   12a80:	ldr	r0, [r0]
   12a84:	ldr	r2, [r0, #20]
   12a88:	ldr	r3, [r0, #24]
   12a8c:	cmp	r2, r3
   12a90:	bcs	12ab4 <__assert_fail@plt+0x17ac>
   12a94:	add	r3, r2, #1
   12a98:	add	r7, r7, #1
   12a9c:	str	r3, [r0, #20]
   12aa0:	strb	r1, [r2]
   12aa4:	ldrb	r1, [r7]
   12aa8:	cmp	r1, #12
   12aac:	bgt	129f8 <__assert_fail@plt+0x16f0>
   12ab0:	b	12a38 <__assert_fail@plt+0x1730>
   12ab4:	bl	11284 <__overflow@plt>
   12ab8:	b	12a58 <__assert_fail@plt+0x1750>
   12abc:	ldr	r0, [sp, #36]	; 0x24
   12ac0:	bl	11068 <fputs_unlocked@plt>
   12ac4:	ldr	r6, [sp, #132]	; 0x84
   12ac8:	ldr	r8, [sp, #140]	; 0x8c
   12acc:	cmp	r5, r4
   12ad0:	beq	12b14 <__assert_fail@plt+0x180c>
   12ad4:	movw	r1, #60319	; 0xeb9f
   12ad8:	mov	r0, #0
   12adc:	mov	r2, #5
   12ae0:	movt	r1, #1
   12ae4:	bl	110f8 <dcgettext@plt>
   12ae8:	movw	r1, #61989	; 0xf225
   12aec:	mov	r2, r0
   12af0:	mov	r0, #1
   12af4:	movt	r1, #1
   12af8:	bl	1123c <__printf_chk@plt>
   12afc:	ldr	r0, [sp, #128]	; 0x80
   12b00:	ldr	r6, [sp, #132]	; 0x84
   12b04:	ldr	r8, [sp, #108]	; 0x6c
   12b08:	sub	r4, fp, #120	; 0x78
   12b0c:	str	r0, [sp, #44]	; 0x2c
   12b10:	b	12b68 <__assert_fail@plt+0x1860>
   12b14:	movw	sl, #384	; 0x180
   12b18:	mov	r1, #1
   12b1c:	sub	r4, fp, #120	; 0x78
   12b20:	movt	sl, #3
   12b24:	str	r1, [sp, #40]	; 0x28
   12b28:	ldrb	r0, [sl, #2]
   12b2c:	cmp	r0, #0
   12b30:	bne	12b68 <__assert_fail@plt+0x1860>
   12b34:	movw	r1, #60326	; 0xeba6
   12b38:	mov	r0, #0
   12b3c:	mov	r2, #5
   12b40:	movt	r1, #1
   12b44:	bl	110f8 <dcgettext@plt>
   12b48:	movw	r1, #61989	; 0xf225
   12b4c:	mov	r2, r0
   12b50:	mov	r0, #1
   12b54:	movt	r1, #1
   12b58:	str	r0, [sp, #40]	; 0x28
   12b5c:	mov	r0, #1
   12b60:	bl	1123c <__printf_chk@plt>
   12b64:	ldr	r6, [sp, #132]	; 0x84
   12b68:	movw	r7, #57523	; 0xe0b3
   12b6c:	sub	r5, fp, #124	; 0x7c
   12b70:	movt	r7, #1
   12b74:	ldr	r1, [sp, #136]	; 0x88
   12b78:	b	12c98 <__assert_fail@plt+0x1990>
   12b7c:	mov	r0, r1
   12b80:	mov	r1, #92	; 0x5c
   12b84:	bl	11284 <__overflow@plt>
   12b88:	ldr	r6, [sp, #36]	; 0x24
   12b8c:	ldr	r8, [sp, #140]	; 0x8c
   12b90:	ldrb	r1, [r6]
   12b94:	cmp	r1, #12
   12b98:	bgt	12bf0 <__assert_fail@plt+0x18e8>
   12b9c:	b	12c40 <__assert_fail@plt+0x1938>
   12ba0:	movw	r0, #372	; 0x174
   12ba4:	movt	r0, #3
   12ba8:	ldr	r0, [r0]
   12bac:	ldr	r2, [r0, #20]
   12bb0:	ldr	r3, [r0, #24]
   12bb4:	cmp	r2, r3
   12bb8:	bcs	12bdc <__assert_fail@plt+0x18d4>
   12bbc:	add	r3, r2, #1
   12bc0:	add	r6, r6, #1
   12bc4:	str	r3, [r0, #20]
   12bc8:	strb	r1, [r2]
   12bcc:	ldrb	r1, [r6]
   12bd0:	cmp	r1, #12
   12bd4:	bgt	12bf0 <__assert_fail@plt+0x18e8>
   12bd8:	b	12c40 <__assert_fail@plt+0x1938>
   12bdc:	bl	11284 <__overflow@plt>
   12be0:	add	r6, r6, #1
   12be4:	ldrb	r1, [r6]
   12be8:	cmp	r1, #12
   12bec:	ble	12c40 <__assert_fail@plt+0x1938>
   12bf0:	cmp	r1, #13
   12bf4:	beq	12c18 <__assert_fail@plt+0x1910>
   12bf8:	cmp	r1, #92	; 0x5c
   12bfc:	bne	12ba0 <__assert_fail@plt+0x1898>
   12c00:	movw	r0, #372	; 0x174
   12c04:	movt	r0, #3
   12c08:	ldr	r1, [r0]
   12c0c:	movw	r0, #60692	; 0xed14
   12c10:	movt	r0, #1
   12c14:	b	12c2c <__assert_fail@plt+0x1924>
   12c18:	movw	r0, #372	; 0x174
   12c1c:	movt	r0, #3
   12c20:	ldr	r1, [r0]
   12c24:	movw	r0, #60689	; 0xed11
   12c28:	movt	r0, #1
   12c2c:	bl	11068 <fputs_unlocked@plt>
   12c30:	add	r6, r6, #1
   12c34:	ldrb	r1, [r6]
   12c38:	cmp	r1, #12
   12c3c:	bgt	12bf0 <__assert_fail@plt+0x18e8>
   12c40:	cmp	r1, #10
   12c44:	bne	12c60 <__assert_fail@plt+0x1958>
   12c48:	movw	r0, #372	; 0x174
   12c4c:	movt	r0, #3
   12c50:	ldr	r1, [r0]
   12c54:	movw	r0, #60686	; 0xed0e
   12c58:	movt	r0, #1
   12c5c:	b	12c2c <__assert_fail@plt+0x1924>
   12c60:	cmp	r1, #0
   12c64:	bne	12ba0 <__assert_fail@plt+0x1898>
   12c68:	movw	r1, #60299	; 0xeb8b
   12c6c:	mov	r0, #0
   12c70:	mov	r2, #5
   12c74:	movt	r1, #1
   12c78:	bl	110f8 <dcgettext@plt>
   12c7c:	movw	r1, #61989	; 0xf225
   12c80:	mov	r2, r0
   12c84:	mov	r0, #1
   12c88:	movt	r1, #1
   12c8c:	bl	1123c <__printf_chk@plt>
   12c90:	ldr	r1, [sp, #136]	; 0x88
   12c94:	ldr	r6, [sp, #132]	; 0x84
   12c98:	mov	r2, #0
   12c9c:	mov	r0, #1
   12ca0:	str	r0, [sp, #52]	; 0x34
   12ca4:	ldrb	r0, [r6]
   12ca8:	tst	r0, #48	; 0x30
   12cac:	beq	11f94 <__assert_fail@plt+0xc8c>
   12cb0:	b	12ce4 <__assert_fail@plt+0x19dc>
   12cb4:	mov	r0, r1
   12cb8:	mov	r1, #92	; 0x5c
   12cbc:	bl	11284 <__overflow@plt>
   12cc0:	ldr	r7, [sp, #36]	; 0x24
   12cc4:	ldr	r6, [sp, #132]	; 0x84
   12cc8:	ldr	r8, [sp, #140]	; 0x8c
   12ccc:	ldrb	r1, [r7]
   12cd0:	cmp	r1, #12
   12cd4:	bgt	129f8 <__assert_fail@plt+0x16f0>
   12cd8:	b	12a38 <__assert_fail@plt+0x1730>
   12cdc:	ldr	r8, [sp, #140]	; 0x8c
   12ce0:	ldr	r1, [sp, #136]	; 0x88
   12ce4:	ldr	r0, [fp, #-120]	; 0xffffff88
   12ce8:	mov	r6, r1
   12cec:	bl	19e7c <__assert_fail@plt+0x8b74>
   12cf0:	ldr	r1, [sp, #132]	; 0x84
   12cf4:	mov	r5, #0
   12cf8:	ldr	r0, [r1]
   12cfc:	ands	r4, r0, #32
   12d00:	ldr	r0, [sp, #72]	; 0x48
   12d04:	mvneq	r5, #0
   12d08:	cmp	r0, #0
   12d0c:	beq	12d8c <__assert_fail@plt+0x1a84>
   12d10:	mov	r0, r1
   12d14:	bl	19cd4 <__assert_fail@plt+0x89cc>
   12d18:	ldr	r9, [sp, #64]	; 0x40
   12d1c:	cmp	r4, #0
   12d20:	bne	12d98 <__assert_fail@plt+0x1a90>
   12d24:	ldr	r7, [sp, #68]	; 0x44
   12d28:	ldr	r4, [sp, #80]	; 0x50
   12d2c:	cmp	r0, #0
   12d30:	beq	12d3c <__assert_fail@plt+0x1a34>
   12d34:	bl	1120c <__errno_location@plt>
   12d38:	ldr	r5, [r0]
   12d3c:	cmp	r5, #0
   12d40:	bmi	12da8 <__assert_fail@plt+0x1aa0>
   12d44:	movw	r4, #59022	; 0xe68e
   12d48:	movt	r4, #1
   12d4c:	bne	12d68 <__assert_fail@plt+0x1a60>
   12d50:	movw	r1, #60329	; 0xeba9
   12d54:	mov	r0, #0
   12d58:	mov	r2, #5
   12d5c:	movt	r1, #1
   12d60:	bl	110f8 <dcgettext@plt>
   12d64:	mov	r4, r0
   12d68:	ldr	r2, [sp, #84]	; 0x54
   12d6c:	mov	r0, #0
   12d70:	mov	r1, #3
   12d74:	mov	r7, #0
   12d78:	bl	1bc64 <__assert_fail@plt+0xa95c>
   12d7c:	mov	r3, r0
   12d80:	mov	r0, #0
   12d84:	mov	r1, r5
   12d88:	b	1310c <__assert_fail@plt+0x1e04>
   12d8c:	mov	r0, r1
   12d90:	bl	112b4 <clearerr_unlocked@plt>
   12d94:	ldr	r9, [sp, #64]	; 0x40
   12d98:	ldr	r7, [sp, #68]	; 0x44
   12d9c:	ldr	r4, [sp, #80]	; 0x50
   12da0:	cmp	r5, #0
   12da4:	bpl	12d44 <__assert_fail@plt+0x1a3c>
   12da8:	ldr	r0, [sp, #52]	; 0x34
   12dac:	tst	r0, #1
   12db0:	beq	130d4 <__assert_fail@plt+0x1dcc>
   12db4:	movw	r0, #384	; 0x180
   12db8:	ldr	r5, [sp, #88]	; 0x58
   12dbc:	movt	r0, #3
   12dc0:	ldrb	r0, [r0]
   12dc4:	cmp	r0, #0
   12dc8:	bne	12f7c <__assert_fail@plt+0x1c74>
   12dcc:	ldr	sl, [sp, #116]	; 0x74
   12dd0:	orrs	r0, r6, sl
   12dd4:	beq	12e3c <__assert_fail@plt+0x1b34>
   12dd8:	cmp	sl, #0
   12ddc:	mov	r3, r6
   12de0:	beq	12e08 <__assert_fail@plt+0x1b00>
   12de4:	movw	r4, #16960	; 0x4240
   12de8:	mov	r0, r6
   12dec:	mov	r1, sl
   12df0:	mov	r3, #0
   12df4:	movt	r4, #15
   12df8:	mov	r2, r4
   12dfc:	bl	1de44 <__assert_fail@plt+0xcb3c>
   12e00:	add	r3, r2, r4
   12e04:	ldr	r4, [sp, #80]	; 0x50
   12e08:	movw	r1, #60391	; 0xebe7
   12e0c:	movw	r2, #60434	; 0xec12
   12e10:	mov	r0, #5
   12e14:	movt	r1, #1
   12e18:	movt	r2, #1
   12e1c:	str	r0, [sp]
   12e20:	mov	r0, #0
   12e24:	bl	112fc <dcngettext@plt>
   12e28:	mov	r2, r0
   12e2c:	mov	r0, #0
   12e30:	mov	r1, #0
   12e34:	stm	sp, {r6, sl}
   12e38:	bl	11170 <error@plt>
   12e3c:	orrs	r0, r7, r4
   12e40:	beq	12eac <__assert_fail@plt+0x1ba4>
   12e44:	cmp	r4, #0
   12e48:	mov	r3, r7
   12e4c:	beq	12e74 <__assert_fail@plt+0x1b6c>
   12e50:	mov	r1, r4
   12e54:	movw	r4, #16960	; 0x4240
   12e58:	mov	r0, r7
   12e5c:	mov	r3, #0
   12e60:	movt	r4, #15
   12e64:	mov	r2, r4
   12e68:	bl	1de44 <__assert_fail@plt+0xcb3c>
   12e6c:	add	r3, r2, r4
   12e70:	ldr	r4, [sp, #80]	; 0x50
   12e74:	movw	r1, #60479	; 0xec3f
   12e78:	movw	r2, #60523	; 0xec6b
   12e7c:	mov	r0, #5
   12e80:	movt	r1, #1
   12e84:	movt	r2, #1
   12e88:	str	r0, [sp]
   12e8c:	mov	r0, #0
   12e90:	bl	112fc <dcngettext@plt>
   12e94:	mov	r2, r0
   12e98:	mov	r0, #0
   12e9c:	mov	r1, #0
   12ea0:	str	r7, [sp]
   12ea4:	str	r4, [sp, #4]
   12ea8:	bl	11170 <error@plt>
   12eac:	ldr	r6, [sp, #44]	; 0x2c
   12eb0:	orrs	r0, r6, r8
   12eb4:	beq	12f1c <__assert_fail@plt+0x1c14>
   12eb8:	cmp	r8, #0
   12ebc:	mov	r3, r6
   12ec0:	beq	12ee8 <__assert_fail@plt+0x1be0>
   12ec4:	movw	r4, #16960	; 0x4240
   12ec8:	mov	r0, r6
   12ecc:	mov	r1, r8
   12ed0:	mov	r3, #0
   12ed4:	movt	r4, #15
   12ed8:	mov	r2, r4
   12edc:	bl	1de44 <__assert_fail@plt+0xcb3c>
   12ee0:	add	r3, r2, r4
   12ee4:	ldr	r4, [sp, #80]	; 0x50
   12ee8:	movw	r1, #60568	; 0xec98
   12eec:	movw	r2, #60614	; 0xecc6
   12ef0:	mov	r0, #5
   12ef4:	movt	r1, #1
   12ef8:	movt	r2, #1
   12efc:	str	r0, [sp]
   12f00:	mov	r0, #0
   12f04:	bl	112fc <dcngettext@plt>
   12f08:	mov	r2, r0
   12f0c:	mov	r0, #0
   12f10:	mov	r1, #0
   12f14:	stm	sp, {r6, r8}
   12f18:	bl	11170 <error@plt>
   12f1c:	movw	r0, #384	; 0x180
   12f20:	ldr	r1, [sp, #40]	; 0x28
   12f24:	movt	r0, #3
   12f28:	ldrb	r0, [r0, #3]
   12f2c:	mvn	r0, r0
   12f30:	orr	r0, r1, r0
   12f34:	tst	r0, #1
   12f38:	bne	12f7c <__assert_fail@plt+0x1c74>
   12f3c:	movw	r1, #60661	; 0xecf5
   12f40:	mov	r0, #0
   12f44:	mov	r2, #5
   12f48:	movt	r1, #1
   12f4c:	bl	110f8 <dcgettext@plt>
   12f50:	ldr	r2, [sp, #84]	; 0x54
   12f54:	mov	r4, r0
   12f58:	mov	r0, #0
   12f5c:	mov	r1, #3
   12f60:	bl	1bc64 <__assert_fail@plt+0xa95c>
   12f64:	mov	r2, r4
   12f68:	ldr	r4, [sp, #80]	; 0x50
   12f6c:	mov	r3, r0
   12f70:	mov	r0, #0
   12f74:	mov	r1, #0
   12f78:	bl	11170 <error@plt>
   12f7c:	ldr	r0, [sp, #44]	; 0x2c
   12f80:	orr	r1, r4, r8
   12f84:	orr	r0, r7, r0
   12f88:	mov	r7, #0
   12f8c:	orrs	r0, r0, r1
   12f90:	ldr	r1, [sp, #40]	; 0x28
   12f94:	movwne	r0, #1
   12f98:	mvn	r1, r1
   12f9c:	orr	r0, r1, r0
   12fa0:	tst	r0, #1
   12fa4:	bne	13118 <__assert_fail@plt+0x1e10>
   12fa8:	ldr	r0, [sp, #124]	; 0x7c
   12fac:	ldr	r1, [sp, #120]	; 0x78
   12fb0:	orr	r0, r1, r0
   12fb4:	movw	r1, #384	; 0x180
   12fb8:	movt	r1, #3
   12fbc:	clz	r0, r0
   12fc0:	lsr	r0, r0, #5
   12fc4:	ldrb	r1, [r1, #4]
   12fc8:	eor	r1, r1, #1
   12fcc:	orr	r7, r0, r1
   12fd0:	b	13118 <__assert_fail@plt+0x1e10>
   12fd4:	movw	r0, #372	; 0x174
   12fd8:	movt	r0, #3
   12fdc:	ldr	r1, [r0]
   12fe0:	movw	r0, #60704	; 0xed20
   12fe4:	movt	r0, #1
   12fe8:	bl	11068 <fputs_unlocked@plt>
   12fec:	ldr	r0, [r5, #12]
   12ff0:	cmp	r0, #2
   12ff4:	bcc	1301c <__assert_fail@plt+0x1d14>
   12ff8:	mov	r6, #0
   12ffc:	ldrb	r2, [sl, r6]
   13000:	mov	r0, #1
   13004:	mov	r1, r7
   13008:	bl	1123c <__printf_chk@plt>
   1300c:	ldr	r0, [r5, #12]
   13010:	add	r6, r6, #1
   13014:	cmp	r6, r0, lsr #1
   13018:	bcc	12ffc <__assert_fail@plt+0x1cf4>
   1301c:	ldr	r0, [sp, #60]	; 0x3c
   13020:	ldr	r6, [sp, #76]	; 0x4c
   13024:	ldr	r5, [sp, #88]	; 0x58
   13028:	tst	r0, #1
   1302c:	bne	11c30 <__assert_fail@plt+0x928>
   13030:	movw	r0, #372	; 0x174
   13034:	movt	r0, #3
   13038:	ldr	r0, [r0]
   1303c:	ldr	r1, [r0, #20]
   13040:	ldr	r2, [r0, #24]
   13044:	cmp	r1, r2
   13048:	bcs	13150 <__assert_fail@plt+0x1e48>
   1304c:	add	r2, r1, #1
   13050:	str	r2, [r0, #20]
   13054:	mov	r0, #32
   13058:	strb	r0, [r1]
   1305c:	movw	r0, #372	; 0x174
   13060:	movt	r0, #3
   13064:	ldr	r0, [r0]
   13068:	ldr	r1, [r0, #20]
   1306c:	ldr	r2, [r0, #24]
   13070:	cmp	r1, r2
   13074:	bcs	1315c <__assert_fail@plt+0x1e54>
   13078:	add	r2, r1, #1
   1307c:	str	r2, [r0, #20]
   13080:	ldr	r0, [sp, #32]
   13084:	strb	r0, [r1]
   13088:	cmp	r4, #0
   1308c:	bne	13190 <__assert_fail@plt+0x1e88>
   13090:	b	11c1c <__assert_fail@plt+0x914>
   13094:	bl	1120c <__errno_location@plt>
   13098:	ldr	r4, [r0]
   1309c:	mov	r0, #0
   130a0:	mov	r1, #3
   130a4:	mov	r2, r8
   130a8:	mov	r7, #0
   130ac:	bl	1bc64 <__assert_fail@plt+0xa95c>
   130b0:	movw	r2, #59022	; 0xe68e
   130b4:	mov	r3, r0
   130b8:	mov	r0, #0
   130bc:	mov	r1, r4
   130c0:	movt	r2, #1
   130c4:	bl	11170 <error@plt>
   130c8:	ldr	r5, [sp, #88]	; 0x58
   130cc:	ldr	r9, [sp, #64]	; 0x40
   130d0:	b	13118 <__assert_fail@plt+0x1e10>
   130d4:	movw	r1, #60344	; 0xebb8
   130d8:	mov	r0, #0
   130dc:	mov	r2, #5
   130e0:	mov	r7, #0
   130e4:	movt	r1, #1
   130e8:	bl	110f8 <dcgettext@plt>
   130ec:	ldr	r2, [sp, #84]	; 0x54
   130f0:	mov	r4, r0
   130f4:	mov	r0, #0
   130f8:	mov	r1, #3
   130fc:	bl	1bc64 <__assert_fail@plt+0xa95c>
   13100:	mov	r3, r0
   13104:	mov	r0, #0
   13108:	mov	r1, #0
   1310c:	mov	r2, r4
   13110:	bl	11170 <error@plt>
   13114:	ldr	r5, [sp, #88]	; 0x58
   13118:	ldr	r6, [sp, #76]	; 0x4c
   1311c:	ldr	r0, [sp, #104]	; 0x68
   13120:	ldr	sl, [sp, #48]	; 0x30
   13124:	and	r4, r5, r7
   13128:	movw	r7, #60709	; 0xed25
   1312c:	movt	r7, #1
   13130:	add	r0, r0, #4
   13134:	mov	r1, r4
   13138:	cmp	r0, r6
   1313c:	bcc	11c74 <__assert_fail@plt+0x96c>
   13140:	b	13230 <__assert_fail@plt+0x1f28>
   13144:	ldr	r1, [sp, #144]	; 0x90
   13148:	bl	11284 <__overflow@plt>
   1314c:	b	11c5c <__assert_fail@plt+0x954>
   13150:	mov	r1, #32
   13154:	bl	11284 <__overflow@plt>
   13158:	b	1305c <__assert_fail@plt+0x1d54>
   1315c:	ldr	r1, [sp, #32]
   13160:	bl	11284 <__overflow@plt>
   13164:	cmp	r4, #0
   13168:	bne	13190 <__assert_fail@plt+0x1e88>
   1316c:	b	11c1c <__assert_fail@plt+0x914>
   13170:	movw	r0, #372	; 0x174
   13174:	movt	r0, #3
   13178:	ldr	r1, [r0]
   1317c:	movw	r0, #60689	; 0xed11
   13180:	movt	r0, #1
   13184:	bl	11068 <fputs_unlocked@plt>
   13188:	mov	r8, r4
   1318c:	add	r8, r4, #1
   13190:	ldrb	r1, [r8]
   13194:	mov	r4, r8
   13198:	cmp	r1, #12
   1319c:	ble	131c8 <__assert_fail@plt+0x1ec0>
   131a0:	cmp	r1, #13
   131a4:	beq	13170 <__assert_fail@plt+0x1e68>
   131a8:	cmp	r1, #92	; 0x5c
   131ac:	bne	131f0 <__assert_fail@plt+0x1ee8>
   131b0:	movw	r0, #372	; 0x174
   131b4:	movt	r0, #3
   131b8:	ldr	r1, [r0]
   131bc:	movw	r0, #60692	; 0xed14
   131c0:	movt	r0, #1
   131c4:	b	13184 <__assert_fail@plt+0x1e7c>
   131c8:	cmp	r1, #10
   131cc:	bne	131e8 <__assert_fail@plt+0x1ee0>
   131d0:	movw	r0, #372	; 0x174
   131d4:	movt	r0, #3
   131d8:	ldr	r1, [r0]
   131dc:	movw	r0, #60686	; 0xed0e
   131e0:	movt	r0, #1
   131e4:	b	13184 <__assert_fail@plt+0x1e7c>
   131e8:	cmp	r1, #0
   131ec:	beq	11c30 <__assert_fail@plt+0x928>
   131f0:	movw	r0, #372	; 0x174
   131f4:	movt	r0, #3
   131f8:	ldr	r0, [r0]
   131fc:	ldr	r2, [r0, #20]
   13200:	ldr	r3, [r0, #24]
   13204:	cmp	r2, r3
   13208:	bcs	1321c <__assert_fail@plt+0x1f14>
   1320c:	add	r3, r2, #1
   13210:	str	r3, [r0, #20]
   13214:	strb	r1, [r2]
   13218:	b	13188 <__assert_fail@plt+0x1e80>
   1321c:	bl	11284 <__overflow@plt>
   13220:	b	13188 <__assert_fail@plt+0x1e80>
   13224:	mov	r1, #92	; 0x5c
   13228:	bl	11284 <__overflow@plt>
   1322c:	b	11d98 <__assert_fail@plt+0xa90>
   13230:	movw	r0, #384	; 0x180
   13234:	movt	r0, #3
   13238:	ldrb	r0, [r0, #9]
   1323c:	cmp	r0, #0
   13240:	beq	1325c <__assert_fail@plt+0x1f54>
   13244:	movw	r0, #368	; 0x170
   13248:	movt	r0, #3
   1324c:	ldr	r0, [r0]
   13250:	bl	19cd4 <__assert_fail@plt+0x89cc>
   13254:	cmn	r0, #1
   13258:	beq	13474 <__assert_fail@plt+0x216c>
   1325c:	mov	r0, #1
   13260:	bic	r0, r0, r4
   13264:	sub	sp, fp, #28
   13268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1326c:	movw	r1, #60223	; 0xeb3f
   13270:	mov	r0, #0
   13274:	mov	r2, #5
   13278:	movt	r1, #1
   1327c:	bl	110f8 <dcgettext@plt>
   13280:	ldr	r2, [sp, #84]	; 0x54
   13284:	mov	r4, r0
   13288:	mov	r0, #0
   1328c:	mov	r1, #3
   13290:	bl	1bc64 <__assert_fail@plt+0xa95c>
   13294:	mov	r3, r0
   13298:	mov	r0, #1
   1329c:	mov	r1, #0
   132a0:	mov	r2, r4
   132a4:	bl	11170 <error@plt>
   132a8:	cmn	r0, #3
   132ac:	bne	13304 <__assert_fail@plt+0x1ffc>
   132b0:	movw	r0, #268	; 0x10c
   132b4:	movw	r2, #59083	; 0xe6cb
   132b8:	mov	r1, #0
   132bc:	movw	r7, #59069	; 0xe6bd
   132c0:	movt	r0, #3
   132c4:	movt	r2, #1
   132c8:	str	r1, [sp, #8]
   132cc:	movw	r1, #58953	; 0xe649
   132d0:	movt	r7, #1
   132d4:	movt	r1, #1
   132d8:	ldr	r3, [r0]
   132dc:	movw	r0, #372	; 0x174
   132e0:	str	r2, [sp, #4]
   132e4:	movw	r2, #59055	; 0xe6af
   132e8:	str	r7, [sp]
   132ec:	movt	r0, #3
   132f0:	movt	r2, #1
   132f4:	ldr	r0, [r0]
   132f8:	bl	1c3c0 <__assert_fail@plt+0xb0b8>
   132fc:	mov	r0, #0
   13300:	bl	111d0 <exit@plt>
   13304:	cmn	r0, #2
   13308:	bne	1336c <__assert_fail@plt+0x2064>
   1330c:	mov	r0, #0
   13310:	bl	11410 <__assert_fail@plt+0x108>
   13314:	movw	r1, #59006	; 0xe67e
   13318:	mov	r0, #0
   1331c:	mov	r2, #5
   13320:	movt	r1, #1
   13324:	bl	110f8 <dcgettext@plt>
   13328:	mov	r4, r0
   1332c:	ldr	r0, [sp, #144]	; 0x90
   13330:	bl	1bf10 <__assert_fail@plt+0xac08>
   13334:	mov	r3, r0
   13338:	mov	r0, #0
   1333c:	mov	r1, #0
   13340:	mov	r2, r4
   13344:	bl	11170 <error@plt>
   13348:	movw	r1, #59025	; 0xe691
   1334c:	mov	r0, #0
   13350:	mov	r2, #5
   13354:	movt	r1, #1
   13358:	bl	110f8 <dcgettext@plt>
   1335c:	mov	r2, r0
   13360:	mov	r0, #1
   13364:	mov	r1, #0
   13368:	bl	11170 <error@plt>
   1336c:	mov	r0, #1
   13370:	bl	11410 <__assert_fail@plt+0x108>
   13374:	movw	r1, #59006	; 0xe67e
   13378:	mov	r0, #0
   1337c:	mov	r2, #5
   13380:	movt	r1, #1
   13384:	bl	110f8 <dcgettext@plt>
   13388:	mov	r4, r0
   1338c:	ldr	r0, [sp, #144]	; 0x90
   13390:	bl	1bf10 <__assert_fail@plt+0xac08>
   13394:	mov	r3, r0
   13398:	mov	r0, #0
   1339c:	mov	r1, #0
   133a0:	mov	r2, r4
   133a4:	bl	11170 <error@plt>
   133a8:	movw	r1, #59096	; 0xe6d8
   133ac:	mov	r0, #0
   133b0:	mov	r2, #5
   133b4:	movt	r1, #1
   133b8:	bl	110f8 <dcgettext@plt>
   133bc:	mov	r4, r0
   133c0:	movw	r0, #57523	; 0xe0b3
   133c4:	movt	r0, #1
   133c8:	bl	1bf10 <__assert_fail@plt+0xac08>
   133cc:	mov	r3, r0
   133d0:	mov	r0, #512	; 0x200
   133d4:	str	r0, [sp]
   133d8:	mov	r0, #1
   133dc:	mov	r1, #0
   133e0:	mov	r2, r4
   133e4:	bl	11170 <error@plt>
   133e8:	movw	r1, #59136	; 0xe700
   133ec:	movt	r1, #1
   133f0:	b	13450 <__assert_fail@plt+0x2148>
   133f4:	movw	r1, #59171	; 0xe723
   133f8:	movt	r1, #1
   133fc:	b	13450 <__assert_fail@plt+0x2148>
   13400:	movw	r1, #59231	; 0xe75f
   13404:	movt	r1, #1
   13408:	b	13450 <__assert_fail@plt+0x2148>
   1340c:	movw	r1, #59288	; 0xe798
   13410:	movt	r1, #1
   13414:	b	13450 <__assert_fail@plt+0x2148>
   13418:	movw	r1, #59361	; 0xe7e1
   1341c:	movt	r1, #1
   13420:	b	13450 <__assert_fail@plt+0x2148>
   13424:	movw	r1, #59433	; 0xe829
   13428:	movt	r1, #1
   1342c:	b	13450 <__assert_fail@plt+0x2148>
   13430:	movw	r1, #59497	; 0xe869
   13434:	movt	r1, #1
   13438:	b	13450 <__assert_fail@plt+0x2148>
   1343c:	movw	r1, #59559	; 0xe8a7
   13440:	movt	r1, #1
   13444:	b	13450 <__assert_fail@plt+0x2148>
   13448:	movw	r1, #59622	; 0xe8e6
   1344c:	movt	r1, #1
   13450:	mov	r0, #0
   13454:	mov	r2, #5
   13458:	bl	110f8 <dcgettext@plt>
   1345c:	mov	r2, r0
   13460:	mov	r0, #0
   13464:	mov	r1, #0
   13468:	bl	11170 <error@plt>
   1346c:	mov	r0, #1
   13470:	bl	11410 <__assert_fail@plt+0x108>
   13474:	bl	1120c <__errno_location@plt>
   13478:	movw	r1, #59686	; 0xe926
   1347c:	ldr	r4, [r0]
   13480:	mov	r0, #0
   13484:	mov	r2, #5
   13488:	movt	r1, #1
   1348c:	bl	110f8 <dcgettext@plt>
   13490:	mov	r2, r0
   13494:	mov	r0, #1
   13498:	mov	r1, r4
   1349c:	bl	11170 <error@plt>
   134a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   134a4:	add	fp, sp, #24
   134a8:	mov	r6, r1
   134ac:	movw	r1, #61184	; 0xef00
   134b0:	mov	r4, r2
   134b4:	mov	r8, r0
   134b8:	movt	r1, #1
   134bc:	bl	1108c <strcmp@plt>
   134c0:	mov	r5, r0
   134c4:	mov	r0, #0
   134c8:	cmp	r5, #0
   134cc:	strb	r0, [r4]
   134d0:	beq	13524 <__assert_fail@plt+0x221c>
   134d4:	movw	r1, #60690	; 0xed12
   134d8:	mov	r0, r8
   134dc:	movt	r1, #1
   134e0:	bl	19dcc <__assert_fail@plt+0x8ac4>
   134e4:	mov	r7, r0
   134e8:	cmp	r0, #0
   134ec:	bne	13540 <__assert_fail@plt+0x2238>
   134f0:	movw	r0, #384	; 0x180
   134f4:	movt	r0, #3
   134f8:	ldrb	r5, [r0, #3]
   134fc:	bl	1120c <__errno_location@plt>
   13500:	cmp	r5, #1
   13504:	bne	13608 <__assert_fail@plt+0x2300>
   13508:	ldr	r1, [r0]
   1350c:	cmp	r1, #2
   13510:	bne	13608 <__assert_fail@plt+0x2300>
   13514:	mov	r5, #1
   13518:	mov	r0, r5
   1351c:	strb	r5, [r4]
   13520:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13524:	movw	r0, #384	; 0x180
   13528:	mov	r1, #1
   1352c:	movt	r0, #3
   13530:	strb	r1, [r0, #9]
   13534:	movw	r0, #368	; 0x170
   13538:	movt	r0, #3
   1353c:	ldr	r7, [r0]
   13540:	mov	r0, r7
   13544:	mov	r1, #2
   13548:	bl	19c98 <__assert_fail@plt+0x8990>
   1354c:	movw	r0, #384	; 0x180
   13550:	movt	r0, #3
   13554:	ldrd	r0, [r0, #16]
   13558:	lsr	r0, r0, #3
   1355c:	orr	r2, r0, r1, lsl #29
   13560:	mov	r0, r7
   13564:	mov	r1, r6
   13568:	bl	19a94 <__assert_fail@plt+0x878c>
   1356c:	cmp	r0, #0
   13570:	beq	135e0 <__assert_fail@plt+0x22d8>
   13574:	bl	1120c <__errno_location@plt>
   13578:	ldr	r6, [r0]
   1357c:	mov	r0, r7
   13580:	cmp	r5, #0
   13584:	beq	135f0 <__assert_fail@plt+0x22e8>
   13588:	bl	19cd4 <__assert_fail@plt+0x89cc>
   1358c:	cmp	r6, #0
   13590:	bne	135a4 <__assert_fail@plt+0x229c>
   13594:	cmp	r0, #0
   13598:	beq	135a4 <__assert_fail@plt+0x229c>
   1359c:	bl	1120c <__errno_location@plt>
   135a0:	ldr	r6, [r0]
   135a4:	cmp	r6, #0
   135a8:	beq	135fc <__assert_fail@plt+0x22f4>
   135ac:	mov	r0, #0
   135b0:	mov	r1, #3
   135b4:	mov	r2, r8
   135b8:	mov	r5, #0
   135bc:	bl	1bc64 <__assert_fail@plt+0xa95c>
   135c0:	movw	r2, #59022	; 0xe68e
   135c4:	mov	r3, r0
   135c8:	mov	r0, #0
   135cc:	mov	r1, r6
   135d0:	movt	r2, #1
   135d4:	bl	11170 <error@plt>
   135d8:	mov	r0, r5
   135dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   135e0:	mov	r6, #0
   135e4:	mov	r0, r7
   135e8:	cmp	r5, #0
   135ec:	bne	13588 <__assert_fail@plt+0x2280>
   135f0:	bl	112b4 <clearerr_unlocked@plt>
   135f4:	cmp	r6, #0
   135f8:	bne	135ac <__assert_fail@plt+0x22a4>
   135fc:	mov	r5, #1
   13600:	mov	r0, r5
   13604:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13608:	ldr	r4, [r0]
   1360c:	mov	r0, #0
   13610:	mov	r1, #3
   13614:	mov	r2, r8
   13618:	mov	r5, #0
   1361c:	bl	1bc64 <__assert_fail@plt+0xa95c>
   13620:	movw	r2, #59022	; 0xe68e
   13624:	mov	r3, r0
   13628:	mov	r0, #0
   1362c:	mov	r1, r4
   13630:	movt	r2, #1
   13634:	bl	11170 <error@plt>
   13638:	mov	r0, r5
   1363c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13640:	push	{r4, r5, fp, lr}
   13644:	add	fp, sp, #8
   13648:	mov	r5, r1
   1364c:	mov	r4, r0
   13650:	add	r0, r0, #64	; 0x40
   13654:	mov	r1, #0
   13658:	mov	r2, #176	; 0xb0
   1365c:	bl	11230 <memset@plt>
   13660:	movw	r0, #61016	; 0xee58
   13664:	mov	r2, #48	; 0x30
   13668:	movt	r0, #1
   1366c:	add	r3, r0, #32
   13670:	add	r1, r0, #16
   13674:	vld1.64	{d18-d19}, [r0], r2
   13678:	vld1.64	{d20-d21}, [r3]
   1367c:	vld1.64	{d16-d17}, [r1]
   13680:	vld1.64	{d22-d23}, [r0]
   13684:	add	r0, r4, #32
   13688:	add	r1, r4, #16
   1368c:	movw	r3, #58983	; 0xe667
   13690:	movt	r3, #27145	; 0x6a09
   13694:	vst1.64	{d20-d21}, [r0]
   13698:	add	r0, r4, #48	; 0x30
   1369c:	vst1.64	{d16-d17}, [r1]
   136a0:	mov	r1, #228	; 0xe4
   136a4:	vst1.64	{d22-d23}, [r0]
   136a8:	mov	r0, r4
   136ac:	vst1.64	{d18-d19}, [r0], r1
   136b0:	movw	r1, #44677	; 0xae85
   136b4:	ldr	r2, [r5, #4]
   136b8:	ldr	ip, [r5]
   136bc:	movt	r1, #47975	; 0xbb67
   136c0:	eor	r2, r2, r3
   136c4:	str	r2, [r4, #4]
   136c8:	movw	r2, #51464	; 0xc908
   136cc:	movt	r2, #62396	; 0xf3bc
   136d0:	eor	r2, ip, r2
   136d4:	str	r2, [r4]
   136d8:	ldr	r3, [r5, #12]
   136dc:	ldr	r2, [r5, #8]
   136e0:	eor	r1, r3, r1
   136e4:	movw	r3, #62322	; 0xf372
   136e8:	str	r1, [r4, #12]
   136ec:	movw	r1, #42811	; 0xa73b
   136f0:	movt	r3, #15470	; 0x3c6e
   136f4:	movt	r1, #33994	; 0x84ca
   136f8:	eor	r1, r2, r1
   136fc:	str	r1, [r4, #8]
   13700:	ldr	r2, [r5, #20]
   13704:	ldr	r1, [r5, #16]
   13708:	eor	r2, r2, r3
   1370c:	movw	r3, #62778	; 0xf53a
   13710:	str	r2, [r4, #20]
   13714:	movw	r2, #63531	; 0xf82b
   13718:	movt	r3, #42319	; 0xa54f
   1371c:	movt	r2, #65172	; 0xfe94
   13720:	eor	r1, r1, r2
   13724:	str	r1, [r4, #16]
   13728:	ldr	r2, [r5, #28]
   1372c:	ldr	r1, [r5, #24]
   13730:	eor	r2, r2, r3
   13734:	movw	r3, #21119	; 0x527f
   13738:	str	r2, [r4, #28]
   1373c:	movw	r2, #14065	; 0x36f1
   13740:	movt	r3, #20750	; 0x510e
   13744:	movt	r2, #24349	; 0x5f1d
   13748:	eor	r1, r1, r2
   1374c:	str	r1, [r4, #24]
   13750:	ldr	r2, [r5, #36]	; 0x24
   13754:	ldr	r1, [r5, #32]
   13758:	eor	r2, r2, r3
   1375c:	movw	r3, #26764	; 0x688c
   13760:	str	r2, [r4, #36]	; 0x24
   13764:	movw	r2, #33489	; 0x82d1
   13768:	movt	r3, #39685	; 0x9b05
   1376c:	movt	r2, #44518	; 0xade6
   13770:	eor	r1, r1, r2
   13774:	str	r1, [r4, #32]
   13778:	ldr	r2, [r5, #44]	; 0x2c
   1377c:	ldr	r1, [r5, #40]	; 0x28
   13780:	eor	r2, r2, r3
   13784:	movw	r3, #55723	; 0xd9ab
   13788:	str	r2, [r4, #44]	; 0x2c
   1378c:	movw	r2, #27679	; 0x6c1f
   13790:	movt	r3, #8067	; 0x1f83
   13794:	movt	r2, #11070	; 0x2b3e
   13798:	eor	r1, r1, r2
   1379c:	str	r1, [r4, #40]	; 0x28
   137a0:	ldr	r2, [r5, #52]	; 0x34
   137a4:	ldr	r1, [r5, #48]	; 0x30
   137a8:	eor	r2, r2, r3
   137ac:	uxtb	r3, ip
   137b0:	str	r2, [r4, #52]	; 0x34
   137b4:	movw	r2, #48491	; 0xbd6b
   137b8:	movt	r2, #64321	; 0xfb41
   137bc:	eor	r1, r1, r2
   137c0:	str	r1, [r4, #48]	; 0x30
   137c4:	ldr	r2, [r5, #60]	; 0x3c
   137c8:	ldr	r1, [r5, #56]	; 0x38
   137cc:	str	r3, [r0]
   137d0:	movw	r0, #52505	; 0xcd19
   137d4:	movt	r0, #23520	; 0x5be0
   137d8:	eor	r0, r2, r0
   137dc:	str	r0, [r4, #60]	; 0x3c
   137e0:	movw	r0, #8569	; 0x2179
   137e4:	movt	r0, #4990	; 0x137e
   137e8:	eor	r0, r1, r0
   137ec:	str	r0, [r4, #56]	; 0x38
   137f0:	mov	r0, #0
   137f4:	pop	{r4, r5, fp, pc}
   137f8:	nop	{0}
   137fc:	nop	{0}
   13800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13804:	add	fp, sp, #28
   13808:	sub	sp, sp, #4
   1380c:	mov	r4, r0
   13810:	sub	r0, r1, #1
   13814:	mvn	r5, #0
   13818:	cmp	r0, #63	; 0x3f
   1381c:	bhi	138ac <__assert_fail@plt+0x25a4>
   13820:	mov	r6, r1
   13824:	add	r0, r4, #64	; 0x40
   13828:	mov	r1, #0
   1382c:	mov	r2, #176	; 0xb0
   13830:	add	r7, r4, #8
   13834:	add	r8, r4, #24
   13838:	add	r9, r4, #40	; 0x28
   1383c:	add	sl, r4, #56	; 0x38
   13840:	mov	r5, #0
   13844:	bl	11230 <memset@plt>
   13848:	add	r0, pc, #112	; 0x70
   1384c:	movw	r3, #51464	; 0xc908
   13850:	movw	r1, #58983	; 0xe667
   13854:	vld1.64	{d16-d17}, [r0 :128]
   13858:	uxtb	r0, r6
   1385c:	movt	r3, #62396	; 0xf3bc
   13860:	movt	r1, #27145	; 0x6a09
   13864:	orr	r2, r0, #65536	; 0x10000
   13868:	orr	r2, r2, #16777216	; 0x1000000
   1386c:	eor	r2, r2, r3
   13870:	movw	r3, #52505	; 0xcd19
   13874:	str	r2, [r4]
   13878:	str	r1, [r4, #4]
   1387c:	add	r1, pc, #76	; 0x4c
   13880:	vst1.64	{d16-d17}, [r7]
   13884:	movw	r2, #8569	; 0x2179
   13888:	movt	r3, #23520	; 0x5be0
   1388c:	vld1.64	{d18-d19}, [r1 :128]
   13890:	add	r1, pc, #72	; 0x48
   13894:	movt	r2, #4990	; 0x137e
   13898:	vld1.64	{d16-d17}, [r1 :128]
   1389c:	vst1.64	{d18-d19}, [r8]
   138a0:	vst1.64	{d16-d17}, [r9]
   138a4:	strd	r2, [sl]
   138a8:	str	r0, [r4, #228]	; 0xe4
   138ac:	mov	r0, r5
   138b0:	sub	sp, fp, #28
   138b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138b8:	nop	{0}
   138bc:	nop	{0}
   138c0:	strbhi	sl, [sl], #1851	; 0x73b
   138c4:	bllt	19ff2e0 <optarg@@GLIBC_2.4+0x19cf168>
   138c8:	vcmla.f32	d15, d4, d27[0], #90
   138cc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   138d0:	svcpl	0x001d36f1
   138d4:	strbge	pc, [pc, #-1338]	; 133a2 <__assert_fail@plt+0x209a>	; <UNPREDICTABLE>
   138d8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   138dc:	tstpl	lr, pc, ror r2
   138e0:	blcs	fae964 <optarg@@GLIBC_2.4+0xf7e7ec>
   138e4:	blls	16db1c <optarg@@GLIBC_2.4+0x13d9a4>
   138e8:	blx	1082e9e <optarg@@GLIBC_2.4+0x1052d26>
   138ec:	svcne	0x0083d9ab
   138f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f4:	add	fp, sp, #28
   138f8:	sub	sp, sp, #140	; 0x8c
   138fc:	mov	r5, r0
   13900:	sub	r0, r1, #1
   13904:	mvn	r4, #0
   13908:	cmp	r0, #63	; 0x3f
   1390c:	bhi	13a28 <__assert_fail@plt+0x2720>
   13910:	mov	r8, r2
   13914:	cmp	r2, #0
   13918:	beq	13a28 <__assert_fail@plt+0x2720>
   1391c:	sub	r0, r3, #1
   13920:	mov	r6, r3
   13924:	cmp	r0, #63	; 0x3f
   13928:	bhi	13a28 <__assert_fail@plt+0x2720>
   1392c:	add	r0, r5, #40	; 0x28
   13930:	mov	r7, r1
   13934:	mov	r1, #0
   13938:	mov	r2, #176	; 0xb0
   1393c:	add	r9, r5, #8
   13940:	add	sl, r5, #24
   13944:	mov	r4, #0
   13948:	str	r0, [sp]
   1394c:	add	r0, r5, #56	; 0x38
   13950:	str	r0, [sp, #4]
   13954:	add	r0, r5, #64	; 0x40
   13958:	bl	11230 <memset@plt>
   1395c:	add	r0, pc, #220	; 0xdc
   13960:	uxtb	r2, r7
   13964:	movw	r3, #51464	; 0xc908
   13968:	movw	r1, #58983	; 0xe667
   1396c:	add	r7, sp, #8
   13970:	vld1.64	{d16-d17}, [r0 :128]
   13974:	uxtb	r0, r6
   13978:	movt	r3, #62396	; 0xf3bc
   1397c:	movt	r1, #27145	; 0x6a09
   13980:	orr	r0, r2, r0, lsl #8
   13984:	orr	r0, r0, #65536	; 0x10000
   13988:	orr	r0, r0, #16777216	; 0x1000000
   1398c:	eor	r0, r0, r3
   13990:	strd	r0, [r5]
   13994:	add	r0, pc, #180	; 0xb4
   13998:	vst1.64	{d16-d17}, [r9]
   1399c:	movw	r1, #52505	; 0xcd19
   139a0:	vld1.64	{d18-d19}, [r0 :128]
   139a4:	add	r0, pc, #180	; 0xb4
   139a8:	ldr	r3, [sp, #4]
   139ac:	movt	r1, #23520	; 0x5be0
   139b0:	vld1.64	{d16-d17}, [r0 :128]
   139b4:	ldr	r0, [sp]
   139b8:	vst1.64	{d18-d19}, [sl]
   139bc:	vst1.64	{d16-d17}, [r0]
   139c0:	movw	r0, #8569	; 0x2179
   139c4:	movt	r0, #4990	; 0x137e
   139c8:	strd	r0, [r3]
   139cc:	str	r2, [r5, #228]	; 0xe4
   139d0:	add	r0, r7, r6
   139d4:	rsb	r2, r6, #128	; 0x80
   139d8:	mov	r1, #0
   139dc:	bl	11230 <memset@plt>
   139e0:	mov	r0, r7
   139e4:	mov	r1, r8
   139e8:	mov	r2, r6
   139ec:	bl	110d4 <memcpy@plt>
   139f0:	add	r0, r5, #96	; 0x60
   139f4:	mov	r1, r7
   139f8:	mov	r2, #128	; 0x80
   139fc:	bl	110d4 <memcpy@plt>
   13a00:	ldr	r0, [r5, #224]	; 0xe0
   13a04:	mov	r1, #0
   13a08:	mov	r2, #128	; 0x80
   13a0c:	add	r0, r0, #128	; 0x80
   13a10:	str	r0, [r5, #224]	; 0xe0
   13a14:	movw	r0, #61080	; 0xee98
   13a18:	movt	r0, #1
   13a1c:	ldr	r3, [r0]
   13a20:	mov	r0, r7
   13a24:	blx	r3
   13a28:	mov	r0, r4
   13a2c:	sub	sp, fp, #28
   13a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a34:	nop	{0}
   13a38:	nop	{0}
   13a3c:	nop	{0}
   13a40:	strbhi	sl, [sl], #1851	; 0x73b
   13a44:	bllt	19ff460 <optarg@@GLIBC_2.4+0x19cf2e8>
   13a48:	vcmla.f32	d15, d4, d27[0], #90
   13a4c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13a50:	svcpl	0x001d36f1
   13a54:	strbge	pc, [pc, #-1338]	; 13522 <__assert_fail@plt+0x221a>	; <UNPREDICTABLE>
   13a58:	sfmge	f0, 3, [r6, #836]!	; 0x344
   13a5c:	tstpl	lr, pc, ror r2
   13a60:	blcs	faeae4 <optarg@@GLIBC_2.4+0xf7e96c>
   13a64:	blls	16dc9c <optarg@@GLIBC_2.4+0x13db24>
   13a68:	blx	108301e <optarg@@GLIBC_2.4+0x1052ea6>
   13a6c:	svcne	0x0083d9ab
   13a70:	cmp	r2, #0
   13a74:	beq	13b90 <__assert_fail@plt+0x2888>
   13a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a7c:	add	fp, sp, #28
   13a80:	sub	sp, sp, #4
   13a84:	mov	r5, r1
   13a88:	ldr	r1, [r0, #224]	; 0xe0
   13a8c:	mov	sl, r2
   13a90:	mov	r8, r0
   13a94:	rsb	r9, r1, #128	; 0x80
   13a98:	cmp	r9, r2
   13a9c:	bcs	13b64 <__assert_fail@plt+0x285c>
   13aa0:	mov	r0, #0
   13aa4:	add	r4, r8, #96	; 0x60
   13aa8:	str	r1, [sp]
   13aac:	mov	r2, r9
   13ab0:	add	r7, r8, #64	; 0x40
   13ab4:	add	r6, r8, #72	; 0x48
   13ab8:	str	r0, [r8, #224]	; 0xe0
   13abc:	add	r0, r4, r1
   13ac0:	mov	r1, r5
   13ac4:	bl	110d4 <memcpy@plt>
   13ac8:	ldrd	r0, [r7]
   13acc:	adds	r0, r0, #128	; 0x80
   13ad0:	adcs	r1, r1, #0
   13ad4:	strd	r0, [r7]
   13ad8:	ldrd	r0, [r6]
   13adc:	adcs	r0, r0, #0
   13ae0:	adc	r1, r1, #0
   13ae4:	strd	r0, [r6]
   13ae8:	mov	r0, r8
   13aec:	mov	r1, r4
   13af0:	bl	13ba0 <__assert_fail@plt+0x2898>
   13af4:	sub	r4, sl, r9
   13af8:	add	r5, r5, r9
   13afc:	cmp	r4, #129	; 0x81
   13b00:	bcc	13b60 <__assert_fail@plt+0x2858>
   13b04:	ldr	r0, [sp]
   13b08:	add	r9, r0, sl
   13b0c:	movw	r0, #257	; 0x101
   13b10:	sub	r0, r9, r0
   13b14:	bic	sl, r0, #127	; 0x7f
   13b18:	ldrd	r0, [r7]
   13b1c:	adds	r0, r0, #128	; 0x80
   13b20:	adcs	r1, r1, #0
   13b24:	strd	r0, [r7]
   13b28:	ldrd	r0, [r6]
   13b2c:	adcs	r0, r0, #0
   13b30:	adc	r1, r1, #0
   13b34:	strd	r0, [r6]
   13b38:	mov	r0, r8
   13b3c:	mov	r1, r5
   13b40:	bl	13ba0 <__assert_fail@plt+0x2898>
   13b44:	sub	r4, r4, #128	; 0x80
   13b48:	add	r5, r5, #128	; 0x80
   13b4c:	cmp	r4, #128	; 0x80
   13b50:	bhi	13b18 <__assert_fail@plt+0x2810>
   13b54:	sub	r0, r9, sl
   13b58:	sub	sl, r0, #256	; 0x100
   13b5c:	b	13b64 <__assert_fail@plt+0x285c>
   13b60:	mov	sl, r4
   13b64:	ldr	r0, [r8, #224]	; 0xe0
   13b68:	mov	r1, r5
   13b6c:	mov	r2, sl
   13b70:	add	r0, r8, r0
   13b74:	add	r0, r0, #96	; 0x60
   13b78:	bl	110d4 <memcpy@plt>
   13b7c:	ldr	r0, [r8, #224]	; 0xe0
   13b80:	add	r0, r0, sl
   13b84:	str	r0, [r8, #224]	; 0xe0
   13b88:	sub	sp, fp, #28
   13b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b90:	mov	r0, #0
   13b94:	bx	lr
   13b98:	nop	{0}
   13b9c:	nop	{0}
   13ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ba4:	add	fp, sp, #28
   13ba8:	sub	sp, sp, #532	; 0x214
   13bac:	mov	r5, r0
   13bb0:	sub	r0, fp, #160	; 0xa0
   13bb4:	mov	r2, #128	; 0x80
   13bb8:	bl	110d4 <memcpy@plt>
   13bbc:	add	r0, r5, #32
   13bc0:	add	r1, r5, #16
   13bc4:	add	r2, r5, #48	; 0x30
   13bc8:	mov	r3, #8
   13bcc:	add	r6, sp, #272	; 0x110
   13bd0:	sub	r9, fp, #160	; 0xa0
   13bd4:	mov	r4, r5
   13bd8:	vld1.64	{d16-d17}, [r0]
   13bdc:	add	r7, pc, #1004	; 0x3ec
   13be0:	vld1.64	{d24-d25}, [r1]
   13be4:	vld1.64	{d22-d23}, [r2]
   13be8:	add	r0, r6, #32
   13bec:	mov	sl, r4
   13bf0:	ldr	lr, [fp, #-148]	; 0xffffff6c
   13bf4:	vld1.64	{d18-d19}, [r7 :128]
   13bf8:	mov	r7, r5
   13bfc:	str	sl, [sp, #100]	; 0x64
   13c00:	vld1.64	{d20-d21}, [r7], r3
   13c04:	str	r7, [sp, #104]	; 0x68
   13c08:	str	lr, [sp, #224]	; 0xe0
   13c0c:	vst1.64	{d16-d17}, [r0]
   13c10:	add	r0, r6, #80	; 0x50
   13c14:	vst1.64	{d18-d19}, [r0]
   13c18:	add	r0, r6, #16
   13c1c:	vst1.64	{d24-d25}, [r0]
   13c20:	add	r0, r6, #48	; 0x30
   13c24:	vst1.64	{d20-d21}, [r6], r3
   13c28:	vst1.64	{d22-d23}, [r0]
   13c2c:	str	r6, [sp, #172]	; 0xac
   13c30:	ldm	r9, {r3, r6, r9}
   13c34:	str	r9, [sp, #228]	; 0xe4
   13c38:	ldr	r0, [sp, #272]	; 0x110
   13c3c:	ldr	r2, [sp, #304]	; 0x130
   13c40:	ldr	r1, [sp, #276]	; 0x114
   13c44:	ldr	r7, [sp, #308]	; 0x134
   13c48:	ldr	r8, [r4, #76]	; 0x4c
   13c4c:	adds	r0, r2, r0
   13c50:	adc	r1, r7, r1
   13c54:	adds	ip, r0, r3
   13c58:	movw	r3, #21119	; 0x527f
   13c5c:	ldr	r0, [r4, #72]	; 0x48
   13c60:	movw	r4, #58983	; 0xe667
   13c64:	adc	r1, r1, r6
   13c68:	ldr	r6, [r5, #64]	; 0x40
   13c6c:	ldr	r5, [r5, #68]	; 0x44
   13c70:	movt	r3, #20750	; 0x510e
   13c74:	movt	r4, #27145	; 0x6a09
   13c78:	str	r0, [sp, #252]	; 0xfc
   13c7c:	eor	r5, r5, r1
   13c80:	eor	r6, r6, ip
   13c84:	eor	r3, r5, r3
   13c88:	movw	r5, #33489	; 0x82d1
   13c8c:	movt	r5, #44518	; 0xade6
   13c90:	eor	r6, r6, r5
   13c94:	movw	r5, #51464	; 0xc908
   13c98:	movt	r5, #62396	; 0xf3bc
   13c9c:	adds	r5, r3, r5
   13ca0:	adc	r4, r6, r4
   13ca4:	eor	r2, r5, r2
   13ca8:	lsl	r0, r2, #8
   13cac:	eor	r7, r4, r7
   13cb0:	lsr	r2, r2, #24
   13cb4:	orr	r0, r0, r7, lsr #24
   13cb8:	orr	r7, r2, r7, lsl #8
   13cbc:	adds	r2, r9, ip
   13cc0:	adc	r1, lr, r1
   13cc4:	adds	r2, r2, r7
   13cc8:	adc	r1, r1, r0
   13ccc:	eor	r3, r2, r3
   13cd0:	mov	r9, r2
   13cd4:	str	r2, [sp, #232]	; 0xe8
   13cd8:	eor	ip, r1, r6
   13cdc:	lsl	r6, r3, #16
   13ce0:	lsr	r3, r3, #16
   13ce4:	mov	lr, r1
   13ce8:	str	r1, [sp, #236]	; 0xec
   13cec:	orr	r1, r3, ip, lsl #16
   13cf0:	orr	r6, r6, ip, lsr #16
   13cf4:	adds	r2, r1, r5
   13cf8:	mov	ip, r1
   13cfc:	str	r1, [sp, #268]	; 0x10c
   13d00:	str	r6, [sp, #264]	; 0x108
   13d04:	adc	r1, r6, r4
   13d08:	str	r2, [sp, #256]	; 0x100
   13d0c:	eor	r0, r1, r0
   13d10:	mov	r4, r1
   13d14:	str	r1, [sp, #260]	; 0x104
   13d18:	eor	r1, r2, r7
   13d1c:	lsl	r3, r0, #1
   13d20:	orr	r5, r3, r1, lsr #31
   13d24:	lsl	r1, r1, #1
   13d28:	movw	r3, #52505	; 0xcd19
   13d2c:	orr	r7, r1, r0, lsr #31
   13d30:	ldr	r0, [sl, #88]	; 0x58
   13d34:	movw	r1, #8569	; 0x2179
   13d38:	movt	r3, #23520	; 0x5be0
   13d3c:	movt	r1, #4990	; 0x137e
   13d40:	str	r5, [sp, #156]	; 0x9c
   13d44:	str	r7, [sp, #152]	; 0x98
   13d48:	eor	r0, r0, r1
   13d4c:	ldr	r1, [sl, #92]	; 0x5c
   13d50:	str	r0, [sp, #192]	; 0xc0
   13d54:	eor	r1, r1, r3
   13d58:	ldr	r3, [sl, #80]	; 0x50
   13d5c:	str	r1, [sp, #196]	; 0xc4
   13d60:	str	r3, [sp, #244]	; 0xf4
   13d64:	ldr	r3, [sl, #84]	; 0x54
   13d68:	str	r0, [sp, #392]	; 0x188
   13d6c:	str	r1, [sp, #396]	; 0x18c
   13d70:	str	r9, [sp, #272]	; 0x110
   13d74:	str	lr, [sp, #276]	; 0x114
   13d78:	str	ip, [sp, #368]	; 0x170
   13d7c:	ldr	ip, [sp, #172]	; 0xac
   13d80:	str	r6, [sp, #372]	; 0x174
   13d84:	str	r2, [sp, #336]	; 0x150
   13d88:	str	r4, [sp, #340]	; 0x154
   13d8c:	str	r5, [sp, #308]	; 0x134
   13d90:	str	r7, [sp, #304]	; 0x130
   13d94:	ldr	r0, [fp, #-144]	; 0xffffff70
   13d98:	ldr	r2, [fp, #-140]	; 0xffffff74
   13d9c:	movw	r5, #26764	; 0x688c
   13da0:	movw	r6, #27679	; 0x6c1f
   13da4:	ldr	sl, [fp, #-136]	; 0xffffff78
   13da8:	ldr	r9, [fp, #-132]	; 0xffffff7c
   13dac:	ldr	r7, [sp, #316]	; 0x13c
   13db0:	movt	r5, #39685	; 0x9b05
   13db4:	movt	r6, #11070	; 0x2b3e
   13db8:	str	r3, [sp, #240]	; 0xf0
   13dbc:	ldr	r4, [ip]
   13dc0:	ldr	r3, [sp, #312]	; 0x138
   13dc4:	ldr	r1, [ip, #4]
   13dc8:	str	r0, [sp, #204]	; 0xcc
   13dcc:	str	r2, [sp, #200]	; 0xc8
   13dd0:	adds	r4, r3, r4
   13dd4:	adc	r1, r7, r1
   13dd8:	adds	r4, r4, r0
   13ddc:	ldr	r0, [sp, #252]	; 0xfc
   13de0:	adc	r1, r1, r2
   13de4:	movw	r2, #42811	; 0xa73b
   13de8:	eor	r8, r8, r1
   13dec:	movt	r2, #33994	; 0x84ca
   13df0:	eor	r5, r8, r5
   13df4:	eor	lr, r0, r4
   13df8:	movw	r0, #44677	; 0xae85
   13dfc:	movt	r0, #47975	; 0xbb67
   13e00:	eor	r6, lr, r6
   13e04:	adds	lr, r5, r2
   13e08:	eor	r3, lr, r3
   13e0c:	adc	r0, r6, r0
   13e10:	lsl	r2, r3, #8
   13e14:	lsr	r3, r3, #24
   13e18:	adds	r4, sl, r4
   13e1c:	ldr	sl, [fp, #-116]	; 0xffffff8c
   13e20:	eor	r7, r0, r7
   13e24:	adc	r1, r9, r1
   13e28:	orr	r3, r3, r7, lsl #8
   13e2c:	orr	r2, r2, r7, lsr #24
   13e30:	adds	r4, r4, r3
   13e34:	adc	r7, r1, r2
   13e38:	mov	r9, r4
   13e3c:	str	r4, [sp, #208]	; 0xd0
   13e40:	eor	r1, r7, r6
   13e44:	mov	r8, r7
   13e48:	str	r7, [sp, #220]	; 0xdc
   13e4c:	eor	r7, r4, r5
   13e50:	str	r9, [ip]
   13e54:	lsl	r6, r7, #16
   13e58:	lsr	r7, r7, #16
   13e5c:	str	r8, [ip, #4]
   13e60:	ldr	r8, [fp, #-88]	; 0xffffffa8
   13e64:	orr	r4, r6, r1, lsr #16
   13e68:	orr	r1, r7, r1, lsl #16
   13e6c:	adds	r7, r1, lr
   13e70:	mov	r5, r1
   13e74:	str	r1, [sp, #248]	; 0xf8
   13e78:	str	r4, [sp, #380]	; 0x17c
   13e7c:	str	r4, [sp, #252]	; 0xfc
   13e80:	adc	r1, r4, r0
   13e84:	str	r5, [sp, #376]	; 0x178
   13e88:	str	r7, [sp, #344]	; 0x158
   13e8c:	movw	r5, #55723	; 0xd9ab
   13e90:	ldr	r4, [fp, #-120]	; 0xffffff88
   13e94:	str	r7, [sp, #148]	; 0x94
   13e98:	str	r8, [sp, #132]	; 0x84
   13e9c:	eor	r0, r1, r2
   13ea0:	mov	r6, r1
   13ea4:	str	r1, [sp, #144]	; 0x90
   13ea8:	eor	r1, r7, r3
   13eac:	ldr	r3, [fp, #-124]	; 0xffffff84
   13eb0:	movt	r5, #8067	; 0x1f83
   13eb4:	lsl	r2, r0, #1
   13eb8:	str	r6, [sp, #348]	; 0x15c
   13ebc:	orr	r2, r2, r1, lsr #31
   13ec0:	lsl	r1, r1, #1
   13ec4:	ldr	lr, [sp, #320]	; 0x140
   13ec8:	ldr	r6, [sp, #324]	; 0x144
   13ecc:	orr	r0, r1, r0, lsr #31
   13ed0:	ldr	r1, [sp, #232]	; 0xe8
   13ed4:	str	sl, [sp, #232]	; 0xe8
   13ed8:	str	r2, [sp, #160]	; 0xa0
   13edc:	str	r3, [sp, #184]	; 0xb8
   13ee0:	str	r0, [sp, #164]	; 0xa4
   13ee4:	adds	r0, r0, r1
   13ee8:	ldr	r1, [sp, #292]	; 0x124
   13eec:	str	r0, [sp, #140]	; 0x8c
   13ef0:	ldr	r0, [sp, #236]	; 0xec
   13ef4:	str	r4, [sp, #236]	; 0xec
   13ef8:	adc	r0, r2, r0
   13efc:	ldr	r2, [fp, #-128]	; 0xffffff80
   13f00:	str	r0, [sp, #136]	; 0x88
   13f04:	ldr	r0, [sp, #288]	; 0x120
   13f08:	str	r2, [sp, #188]	; 0xbc
   13f0c:	adds	r0, lr, r0
   13f10:	adc	r1, r6, r1
   13f14:	adds	r0, r0, r2
   13f18:	ldr	r2, [sp, #240]	; 0xf0
   13f1c:	adc	r1, r1, r3
   13f20:	eor	r2, r2, r1
   13f24:	eor	r3, r2, r5
   13f28:	ldr	r2, [sp, #244]	; 0xf4
   13f2c:	movw	r5, #48491	; 0xbd6b
   13f30:	movt	r5, #64321	; 0xfb41
   13f34:	eor	r2, r2, r0
   13f38:	eor	ip, r2, r5
   13f3c:	movw	r2, #63531	; 0xf82b
   13f40:	movw	r5, #62322	; 0xf372
   13f44:	movt	r2, #65172	; 0xfe94
   13f48:	movt	r5, #15470	; 0x3c6e
   13f4c:	adds	r2, r3, r2
   13f50:	adc	r5, ip, r5
   13f54:	eor	lr, r2, lr
   13f58:	adds	r0, r4, r0
   13f5c:	str	r2, [sp, #120]	; 0x78
   13f60:	ldr	r4, [fp, #-104]	; 0xffffff98
   13f64:	eor	r6, r5, r6
   13f68:	lsr	r7, lr, #24
   13f6c:	str	r5, [sp, #124]	; 0x7c
   13f70:	lsl	r5, lr, #8
   13f74:	adc	r1, sl, r1
   13f78:	orr	r7, r7, r6, lsl #8
   13f7c:	orr	r2, r5, r6, lsr #24
   13f80:	ldr	r5, [fp, #-108]	; 0xffffff94
   13f84:	str	r7, [sp, #108]	; 0x6c
   13f88:	adds	r7, r0, r7
   13f8c:	str	r2, [sp, #96]	; 0x60
   13f90:	str	r4, [sp, #244]	; 0xf4
   13f94:	adc	r6, r1, r2
   13f98:	eor	r1, r7, r3
   13f9c:	str	r7, [sp, #288]	; 0x120
   13fa0:	str	r7, [sp, #84]	; 0x54
   13fa4:	lsr	r3, r1, #16
   13fa8:	eor	r0, r6, ip
   13fac:	lsl	r1, r1, #16
   13fb0:	str	r6, [sp, #292]	; 0x124
   13fb4:	str	r6, [sp, #80]	; 0x50
   13fb8:	ldr	r6, [fp, #-112]	; 0xffffff90
   13fbc:	str	r5, [sp, #212]	; 0xd4
   13fc0:	orr	r2, r3, r0, lsl #16
   13fc4:	orr	r0, r1, r0, lsr #16
   13fc8:	b	13fe0 <__assert_fail@plt+0x2cd8>
   13fcc:	nop	{0}
   13fd0:	vcmla.f32	d15, d4, d27[0], #90
   13fd4:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13fd8:	svcpl	0x001d36f1
   13fdc:	strbge	pc, [pc, #-1338]	; 13aaa <__assert_fail@plt+0x27a2>	; <UNPREDICTABLE>
   13fe0:	str	r0, [sp, #388]	; 0x184
   13fe4:	str	r2, [sp, #384]	; 0x180
   13fe8:	str	r0, [sp, #168]	; 0xa8
   13fec:	mov	lr, r2
   13ff0:	str	r2, [sp, #92]	; 0x5c
   13ff4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13ff8:	ldr	r0, [sp, #296]	; 0x128
   13ffc:	ldr	ip, [sp, #328]	; 0x148
   14000:	ldr	r1, [sp, #300]	; 0x12c
   14004:	ldr	r7, [sp, #332]	; 0x14c
   14008:	str	r6, [sp, #216]	; 0xd8
   1400c:	str	r2, [sp, #240]	; 0xf0
   14010:	adds	r0, ip, r0
   14014:	adc	r1, r7, r1
   14018:	adds	r0, r0, r6
   1401c:	ldr	r6, [sp, #192]	; 0xc0
   14020:	adc	r1, r1, r5
   14024:	movw	r5, #62778	; 0xf53a
   14028:	movt	r5, #42319	; 0xa54f
   1402c:	eor	r9, r0, r6
   14030:	ldr	r6, [sp, #196]	; 0xc4
   14034:	eor	sl, r1, r6
   14038:	movw	r6, #14065	; 0x36f1
   1403c:	movt	r6, #24349	; 0x5f1d
   14040:	adds	r6, sl, r6
   14044:	adc	r3, r9, r5
   14048:	adds	r0, r4, r0
   1404c:	ldr	r4, [sp, #140]	; 0x8c
   14050:	str	r6, [sp, #68]	; 0x44
   14054:	str	r3, [sp, #72]	; 0x48
   14058:	eor	r5, r3, r7
   1405c:	eor	r3, r6, ip
   14060:	adc	r1, r2, r1
   14064:	ldr	ip, [fp, #-84]	; 0xffffffac
   14068:	lsl	r7, r3, #8
   1406c:	lsr	r3, r3, #24
   14070:	orr	r3, r3, r5, lsl #8
   14074:	orr	r7, r7, r5, lsr #24
   14078:	adds	r0, r0, r3
   1407c:	str	r3, [sp, #56]	; 0x38
   14080:	str	r7, [sp, #52]	; 0x34
   14084:	str	ip, [sp, #128]	; 0x80
   14088:	str	r0, [sp, #296]	; 0x128
   1408c:	mov	r3, r0
   14090:	str	r0, [sp, #76]	; 0x4c
   14094:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14098:	adc	r1, r1, r7
   1409c:	str	r1, [sp, #300]	; 0x12c
   140a0:	mov	r2, r1
   140a4:	str	r1, [sp, #88]	; 0x58
   140a8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   140ac:	adds	r5, r4, r0
   140b0:	str	r0, [sp, #180]	; 0xb4
   140b4:	ldr	r0, [sp, #136]	; 0x88
   140b8:	eor	r4, r2, r9
   140bc:	eor	r2, r3, sl
   140c0:	str	r1, [sp, #176]	; 0xb0
   140c4:	lsr	r3, r2, #16
   140c8:	lsl	r2, r2, #16
   140cc:	adc	r7, r0, r1
   140d0:	ldr	r0, [sp, #120]	; 0x78
   140d4:	ldr	r1, [sp, #168]	; 0xa8
   140d8:	adds	lr, lr, r0
   140dc:	ldr	r0, [sp, #124]	; 0x7c
   140e0:	str	lr, [sp, #196]	; 0xc4
   140e4:	adc	r6, r1, r0
   140e8:	orr	r0, r3, r4, lsl #16
   140ec:	orr	r1, r2, r4, lsr #16
   140f0:	str	r6, [sp, #192]	; 0xc0
   140f4:	str	r0, [sp, #60]	; 0x3c
   140f8:	eor	r3, r0, r5
   140fc:	ldr	r0, [sp, #160]	; 0xa0
   14100:	eor	r4, r1, r7
   14104:	str	r1, [sp, #64]	; 0x40
   14108:	adds	r9, r4, lr
   1410c:	adc	r2, r3, r6
   14110:	eor	r1, r2, r0
   14114:	ldr	r0, [sp, #164]	; 0xa4
   14118:	eor	r0, r9, r0
   1411c:	lsl	sl, r0, #8
   14120:	lsr	r0, r0, #24
   14124:	orr	r0, r0, r1, lsl #8
   14128:	orr	sl, sl, r1, lsr #24
   1412c:	adds	r1, r8, r5
   14130:	adc	r5, ip, r7
   14134:	adds	r6, r1, r0
   14138:	adc	r8, r5, sl
   1413c:	str	r6, [sp, #112]	; 0x70
   14140:	str	r6, [sp, #272]	; 0x110
   14144:	eor	r1, r8, r3
   14148:	eor	r3, r6, r4
   1414c:	str	r8, [sp, #116]	; 0x74
   14150:	str	r8, [sp, #276]	; 0x114
   14154:	lsl	r4, r3, #16
   14158:	lsr	r3, r3, #16
   1415c:	orr	r4, r4, r1, lsr #16
   14160:	orr	r1, r3, r1, lsl #16
   14164:	adds	ip, r1, r9
   14168:	mov	r7, r1
   1416c:	str	r1, [sp, #140]	; 0x8c
   14170:	str	r4, [sp, #396]	; 0x18c
   14174:	str	r4, [sp, #136]	; 0x88
   14178:	adc	r2, r4, r2
   1417c:	eor	r0, ip, r0
   14180:	str	r7, [sp, #392]	; 0x188
   14184:	str	ip, [sp, #352]	; 0x160
   14188:	str	ip, [sp, #120]	; 0x78
   1418c:	eor	r1, r2, sl
   14190:	mov	lr, r2
   14194:	str	r2, [sp, #124]	; 0x7c
   14198:	lsl	r2, r1, #1
   1419c:	str	lr, [sp, #356]	; 0x164
   141a0:	orr	r5, r2, r0, lsr #31
   141a4:	lsl	r0, r0, #1
   141a8:	ldr	r2, [sp, #196]	; 0xc4
   141ac:	orr	r3, r0, r1, lsr #31
   141b0:	ldr	r0, [sp, #96]	; 0x60
   141b4:	ldr	r1, [sp, #192]	; 0xc0
   141b8:	str	r5, [sp, #164]	; 0xa4
   141bc:	str	r5, [sp, #316]	; 0x13c
   141c0:	ldr	r5, [fp, #-72]	; 0xffffffb8
   141c4:	str	r3, [sp, #312]	; 0x138
   141c8:	mov	r8, r3
   141cc:	str	r3, [sp, #40]	; 0x28
   141d0:	eor	r0, r1, r0
   141d4:	ldr	r1, [sp, #108]	; 0x6c
   141d8:	str	r5, [sp, #196]	; 0xc4
   141dc:	eor	r1, r2, r1
   141e0:	lsl	r2, r0, #1
   141e4:	orr	r2, r2, r1, lsr #31
   141e8:	lsl	r1, r1, #1
   141ec:	orr	sl, r1, r0, lsr #31
   141f0:	ldr	r0, [sp, #208]	; 0xd0
   141f4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   141f8:	str	r2, [sp, #160]	; 0xa0
   141fc:	adds	r9, sl, r0
   14200:	ldr	r0, [sp, #220]	; 0xdc
   14204:	str	r1, [sp, #208]	; 0xd0
   14208:	adc	r0, r2, r0
   1420c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14210:	adds	r6, r9, r1
   14214:	str	r0, [sp, #108]	; 0x6c
   14218:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1421c:	ldr	r1, [sp, #108]	; 0x6c
   14220:	str	r2, [sp, #220]	; 0xdc
   14224:	str	r0, [sp, #192]	; 0xc0
   14228:	adc	r3, r1, r2
   1422c:	ldr	r1, [sp, #264]	; 0x108
   14230:	ldr	r2, [sp, #60]	; 0x3c
   14234:	eor	r4, r3, r1
   14238:	ldr	r1, [sp, #68]	; 0x44
   1423c:	adds	r7, r2, r1
   14240:	ldr	r1, [sp, #72]	; 0x48
   14244:	ldr	r2, [sp, #64]	; 0x40
   14248:	str	r7, [sp, #264]	; 0x108
   1424c:	adc	ip, r2, r1
   14250:	ldr	r1, [sp, #268]	; 0x10c
   14254:	adds	r9, r4, r7
   14258:	str	ip, [sp, #48]	; 0x30
   1425c:	eor	r2, r6, r1
   14260:	ldr	r1, [sp, #160]	; 0xa0
   14264:	adc	ip, r2, ip
   14268:	adds	r6, r5, r6
   1426c:	ldr	r5, [sp, #164]	; 0xa4
   14270:	adc	r3, r0, r3
   14274:	ldr	r0, [sp, #188]	; 0xbc
   14278:	eor	lr, ip, r1
   1427c:	eor	r1, r9, sl
   14280:	lsl	r7, r1, #8
   14284:	lsr	r1, r1, #24
   14288:	orr	r1, r1, lr, lsl #8
   1428c:	orr	sl, r7, lr, lsr #24
   14290:	adds	r6, r6, r1
   14294:	adc	r3, r3, sl
   14298:	adds	r7, r8, r0
   1429c:	ldr	r0, [sp, #184]	; 0xb8
   142a0:	ldr	r8, [fp, #-52]	; 0xffffffcc
   142a4:	adc	lr, r5, r0
   142a8:	adds	r0, r7, r6
   142ac:	ldr	r5, [sp, #80]	; 0x50
   142b0:	str	r8, [sp, #184]	; 0xb8
   142b4:	str	r0, [sp, #36]	; 0x24
   142b8:	adc	r0, lr, r3
   142bc:	str	r0, [sp, #160]	; 0xa0
   142c0:	eor	r0, r3, r2
   142c4:	eor	r3, r6, r4
   142c8:	lsl	r6, r3, #16
   142cc:	lsr	r3, r3, #16
   142d0:	orr	r7, r6, r0, lsr #16
   142d4:	orr	r0, r3, r0, lsl #16
   142d8:	adds	r2, r0, r9
   142dc:	str	r0, [sp, #72]	; 0x48
   142e0:	str	r7, [sp, #60]	; 0x3c
   142e4:	adc	r3, r7, ip
   142e8:	mov	r7, r2
   142ec:	eor	r1, r2, r1
   142f0:	str	r2, [sp, #96]	; 0x60
   142f4:	eor	r0, r3, sl
   142f8:	str	r7, [sp, #360]	; 0x168
   142fc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14300:	str	r3, [sp, #364]	; 0x16c
   14304:	str	r3, [sp, #108]	; 0x6c
   14308:	lsl	r2, r0, #1
   1430c:	orr	r6, r2, r1, lsr #31
   14310:	lsl	r1, r1, #1
   14314:	ldr	r2, [sp, #264]	; 0x108
   14318:	orr	r4, r1, r0, lsr #31
   1431c:	ldr	r0, [sp, #52]	; 0x34
   14320:	ldr	r1, [sp, #48]	; 0x30
   14324:	str	r6, [sp, #68]	; 0x44
   14328:	str	r6, [sp, #324]	; 0x144
   1432c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14330:	str	r7, [sp, #268]	; 0x10c
   14334:	str	r4, [sp, #64]	; 0x40
   14338:	str	r4, [sp, #320]	; 0x140
   1433c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   14340:	eor	r0, r1, r0
   14344:	ldr	r1, [sp, #56]	; 0x38
   14348:	str	r6, [sp, #264]	; 0x108
   1434c:	str	r4, [sp, #188]	; 0xbc
   14350:	eor	r1, r2, r1
   14354:	lsl	r2, r0, #1
   14358:	orr	r2, r2, r1, lsr #31
   1435c:	lsl	r1, r1, #1
   14360:	orr	r0, r1, r0, lsr #31
   14364:	ldr	r1, [sp, #84]	; 0x54
   14368:	adds	r1, r0, r1
   1436c:	adc	r5, r2, r5
   14370:	adds	r1, r1, r7
   14374:	ldr	r7, [sp, #252]	; 0xfc
   14378:	adc	r3, r5, r6
   1437c:	eor	r6, r3, r7
   14380:	ldr	r7, [sp, #248]	; 0xf8
   14384:	eor	r5, r1, r7
   14388:	ldr	r7, [sp, #256]	; 0x100
   1438c:	adds	lr, r6, r7
   14390:	ldr	r7, [sp, #260]	; 0x104
   14394:	eor	r0, lr, r0
   14398:	adc	ip, r5, r7
   1439c:	lsl	r7, r0, #8
   143a0:	lsr	r0, r0, #24
   143a4:	adds	r1, r4, r1
   143a8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   143ac:	eor	r2, ip, r2
   143b0:	orr	r0, r0, r2, lsl #8
   143b4:	orr	r7, r7, r2, lsr #24
   143b8:	adc	r2, r8, r3
   143bc:	ldr	r8, [sp, #152]	; 0x98
   143c0:	adds	r3, r1, r0
   143c4:	str	r4, [sp, #256]	; 0x100
   143c8:	adc	r1, r2, r7
   143cc:	eor	r2, r3, r6
   143d0:	str	r3, [sp, #44]	; 0x2c
   143d4:	str	r1, [sp, #48]	; 0x30
   143d8:	lsl	r3, r2, #16
   143dc:	eor	r1, r1, r5
   143e0:	lsr	r2, r2, #16
   143e4:	orr	r9, r2, r1, lsl #16
   143e8:	orr	r6, r3, r1, lsr #16
   143ec:	ldr	r1, [sp, #160]	; 0xa0
   143f0:	adds	r2, r9, lr
   143f4:	eor	r0, r2, r0
   143f8:	str	r2, [sp, #24]
   143fc:	eor	r1, r6, r1
   14400:	str	r1, [sp, #20]
   14404:	adc	r1, r6, ip
   14408:	str	r1, [sp, #32]
   1440c:	eor	r1, r1, r7
   14410:	lsl	r7, r1, #1
   14414:	orr	r3, r7, r0, lsr #31
   14418:	lsl	r0, r0, #1
   1441c:	orr	r6, r0, r1, lsr #31
   14420:	ldr	r0, [sp, #76]	; 0x4c
   14424:	ldr	r1, [sp, #88]	; 0x58
   14428:	str	r3, [sp, #52]	; 0x34
   1442c:	str	r3, [sp, #332]	; 0x14c
   14430:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14434:	str	r6, [sp, #56]	; 0x38
   14438:	str	r6, [sp, #328]	; 0x148
   1443c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   14440:	adds	r7, r0, r8
   14444:	ldr	r0, [sp, #156]	; 0x9c
   14448:	str	r3, [sp, #252]	; 0xfc
   1444c:	str	r6, [sp, #248]	; 0xf8
   14450:	adc	r2, r1, r0
   14454:	adds	r7, r7, r3
   14458:	ldr	r3, [sp, #148]	; 0x94
   1445c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14460:	adc	r5, r2, r6
   14464:	ldr	r2, [sp, #168]	; 0xa8
   14468:	str	r1, [sp, #260]	; 0x104
   1446c:	eor	ip, r5, r2
   14470:	ldr	r2, [sp, #92]	; 0x5c
   14474:	adds	lr, ip, r3
   14478:	ldr	r3, [sp, #144]	; 0x90
   1447c:	eor	r2, r7, r2
   14480:	adc	sl, r2, r3
   14484:	eor	r3, sl, r0
   14488:	eor	r0, lr, r8
   1448c:	lsl	r6, r0, #8
   14490:	lsr	r0, r0, #24
   14494:	orr	r8, r6, r3, lsr #24
   14498:	orr	r6, r0, r3, lsl #8
   1449c:	adds	r0, r1, r7
   144a0:	ldr	r3, [sp, #36]	; 0x24
   144a4:	ldr	r7, [sp, #160]	; 0xa0
   144a8:	adc	r5, r4, r5
   144ac:	adds	r1, r0, r6
   144b0:	adc	r0, r5, r8
   144b4:	str	r1, [sp, #28]
   144b8:	str	r0, [sp, #144]	; 0x90
   144bc:	eor	r0, r0, r2
   144c0:	eor	r2, r1, ip
   144c4:	ldr	ip, [sp, #20]
   144c8:	lsl	r4, r2, #16
   144cc:	lsr	r2, r2, #16
   144d0:	orr	r1, r4, r0, lsr #16
   144d4:	orr	r0, r2, r0, lsl #16
   144d8:	eor	r2, r9, r3
   144dc:	adds	r5, r0, lr
   144e0:	str	r0, [sp, #152]	; 0x98
   144e4:	ldr	r0, [sp, #164]	; 0xa4
   144e8:	str	r1, [sp, #156]	; 0x9c
   144ec:	adc	r4, r1, sl
   144f0:	adds	r9, r5, ip
   144f4:	adc	lr, r4, r2
   144f8:	eor	r1, lr, r0
   144fc:	ldr	r0, [sp, #40]	; 0x28
   14500:	eor	r0, r9, r0
   14504:	lsl	sl, r0, #8
   14508:	lsr	r0, r0, #24
   1450c:	orr	sl, sl, r1, lsr #24
   14510:	orr	r0, r0, r1, lsl #8
   14514:	ldr	r1, [sp, #180]	; 0xb4
   14518:	adds	r1, r3, r1
   1451c:	ldr	r3, [sp, #176]	; 0xb0
   14520:	adc	r3, r7, r3
   14524:	adds	r7, r1, r0
   14528:	adc	r1, r3, sl
   1452c:	str	r7, [sp, #80]	; 0x50
   14530:	str	r1, [sp, #84]	; 0x54
   14534:	eor	r1, r1, r2
   14538:	eor	r2, r7, ip
   1453c:	ldr	r7, [sp, #116]	; 0x74
   14540:	lsl	r3, r2, #16
   14544:	lsr	r2, r2, #16
   14548:	orr	r3, r3, r1, lsr #16
   1454c:	orr	r1, r2, r1, lsl #16
   14550:	adds	r2, r1, r9
   14554:	str	r1, [sp, #148]	; 0x94
   14558:	str	r3, [sp, #160]	; 0xa0
   1455c:	adc	r1, r3, lr
   14560:	str	r2, [sp, #164]	; 0xa4
   14564:	eor	r0, r2, r0
   14568:	ldr	r3, [sp, #112]	; 0x70
   1456c:	str	r1, [sp, #168]	; 0xa8
   14570:	eor	r1, r1, sl
   14574:	lsl	r2, r1, #1
   14578:	orr	lr, r2, r0, lsr #31
   1457c:	lsl	r0, r0, #1
   14580:	orr	r9, r0, r1, lsr #31
   14584:	eor	r0, r4, r8
   14588:	eor	r1, r5, r6
   1458c:	lsl	r2, r0, #1
   14590:	str	lr, [sp, #4]
   14594:	orr	r2, r2, r1, lsr #31
   14598:	lsl	r1, r1, #1
   1459c:	str	r9, [sp, #8]
   145a0:	orr	r0, r1, r0, lsr #31
   145a4:	ldr	r1, [sp, #252]	; 0xfc
   145a8:	adds	r1, r1, r3
   145ac:	ldr	r3, [sp, #248]	; 0xf8
   145b0:	adc	r3, r3, r7
   145b4:	ldr	r7, [sp, #60]	; 0x3c
   145b8:	adds	r1, r1, r0
   145bc:	adc	r3, r3, r2
   145c0:	eor	r6, r3, r7
   145c4:	ldr	r7, [sp, #72]	; 0x48
   145c8:	str	r6, [sp, #60]	; 0x3c
   145cc:	eor	r4, r1, r7
   145d0:	ldr	r7, [sp, #24]
   145d4:	str	r4, [sp, #40]	; 0x28
   145d8:	adds	r7, r6, r7
   145dc:	ldr	r6, [sp, #32]
   145e0:	eor	r0, r7, r0
   145e4:	str	r7, [sp, #72]	; 0x48
   145e8:	adc	r6, r4, r6
   145ec:	ldr	r4, [sp, #64]	; 0x40
   145f0:	str	r6, [sp, #76]	; 0x4c
   145f4:	eor	r2, r6, r2
   145f8:	lsl	r6, r0, #8
   145fc:	lsr	r0, r0, #24
   14600:	orr	r7, r6, r2, lsr #24
   14604:	orr	r2, r0, r2, lsl #8
   14608:	ldr	r0, [sp, #208]	; 0xd0
   1460c:	str	r2, [sp, #36]	; 0x24
   14610:	str	r7, [sp, #32]
   14614:	adds	r0, r1, r0
   14618:	ldr	r1, [sp, #220]	; 0xdc
   1461c:	adc	r1, r3, r1
   14620:	adds	r2, r0, r2
   14624:	ldr	r0, [sp, #228]	; 0xe4
   14628:	adc	r3, r1, r7
   1462c:	ldr	r1, [sp, #224]	; 0xe0
   14630:	str	r2, [sp, #24]
   14634:	str	r3, [sp, #20]
   14638:	adds	r0, r9, r0
   1463c:	adc	r1, lr, r1
   14640:	adds	lr, r0, r2
   14644:	ldr	r0, [sp, #132]	; 0x84
   14648:	ldr	r2, [sp, #44]	; 0x2c
   1464c:	adc	r9, r1, r3
   14650:	ldr	r1, [sp, #128]	; 0x80
   14654:	ldr	r3, [sp, #68]	; 0x44
   14658:	adds	r0, r4, r0
   1465c:	adc	r1, r3, r1
   14660:	adds	r2, r0, r2
   14664:	ldr	r0, [sp, #48]	; 0x30
   14668:	adc	r1, r1, r0
   1466c:	ldr	r0, [sp, #156]	; 0x9c
   14670:	eor	r6, r0, r1
   14674:	ldr	r0, [sp, #152]	; 0x98
   14678:	eor	r5, r0, r2
   1467c:	ldr	r0, [sp, #120]	; 0x78
   14680:	adds	r7, r6, r0
   14684:	ldr	r0, [sp, #124]	; 0x7c
   14688:	adc	r8, r5, r0
   1468c:	eor	r0, r7, r4
   14690:	lsl	r4, r0, #8
   14694:	eor	ip, r8, r3
   14698:	lsr	r0, r0, #24
   1469c:	orr	r3, r4, ip, lsr #24
   146a0:	orr	r4, r0, ip, lsl #8
   146a4:	ldr	r0, [sp, #260]	; 0x104
   146a8:	str	r3, [sp, #12]
   146ac:	str	r4, [sp, #16]
   146b0:	adds	r0, r0, r2
   146b4:	ldr	r2, [sp, #256]	; 0x100
   146b8:	adc	r1, r2, r1
   146bc:	adds	r2, r0, r4
   146c0:	adc	r0, r1, r3
   146c4:	eor	r1, r2, r6
   146c8:	str	r2, [sp, #88]	; 0x58
   146cc:	ldr	r3, [sp, #56]	; 0x38
   146d0:	str	r0, [sp, #92]	; 0x5c
   146d4:	lsl	r2, r1, #16
   146d8:	eor	r0, r0, r5
   146dc:	lsr	r1, r1, #16
   146e0:	orr	r2, r2, r0, lsr #16
   146e4:	orr	r0, r1, r0, lsl #16
   146e8:	ldr	r1, [sp, #52]	; 0x34
   146ec:	adds	ip, r0, r7
   146f0:	str	r0, [sp, #156]	; 0x9c
   146f4:	ldr	r0, [sp, #188]	; 0xbc
   146f8:	str	r2, [sp, #152]	; 0x98
   146fc:	adc	sl, r2, r8
   14700:	str	ip, [sp]
   14704:	adds	r2, r3, r0
   14708:	ldr	r0, [sp, #184]	; 0xb8
   1470c:	adc	r5, r1, r0
   14710:	ldr	r0, [sp, #28]
   14714:	adds	r2, r2, r0
   14718:	ldr	r0, [sp, #144]	; 0x90
   1471c:	adc	r6, r5, r0
   14720:	ldr	r0, [sp, #136]	; 0x88
   14724:	eor	r8, r6, r0
   14728:	ldr	r0, [sp, #140]	; 0x8c
   1472c:	eor	r7, r2, r0
   14730:	ldr	r0, [sp, #96]	; 0x60
   14734:	adds	r5, r8, r0
   14738:	ldr	r0, [sp, #108]	; 0x6c
   1473c:	str	r5, [sp, #44]	; 0x2c
   14740:	adc	r0, r7, r0
   14744:	str	r0, [sp, #48]	; 0x30
   14748:	eor	r1, r0, r1
   1474c:	eor	r0, r5, r3
   14750:	lsl	r5, r0, #8
   14754:	lsr	r0, r0, #24
   14758:	orr	r3, r5, r1, lsr #24
   1475c:	orr	r5, r0, r1, lsl #8
   14760:	ldr	r0, [sp, #216]	; 0xd8
   14764:	ldr	r1, [sp, #212]	; 0xd4
   14768:	str	r3, [sp, #64]	; 0x40
   1476c:	str	r5, [sp, #68]	; 0x44
   14770:	adds	r0, r2, r0
   14774:	adc	r1, r6, r1
   14778:	adds	r2, r0, r5
   1477c:	ldr	r6, [sp, #268]	; 0x10c
   14780:	adc	r0, r1, r3
   14784:	eor	r1, r2, r8
   14788:	str	r2, [sp, #124]	; 0x7c
   1478c:	str	r0, [sp, #128]	; 0x80
   14790:	lsr	r2, r1, #16
   14794:	eor	r0, r0, r7
   14798:	lsl	r1, r1, #16
   1479c:	orr	r3, r2, r0, lsl #16
   147a0:	orr	r0, r1, r0, lsr #16
   147a4:	str	r0, [sp, #56]	; 0x38
   147a8:	eor	r2, r9, r0
   147ac:	ldr	r0, [sp, #4]
   147b0:	str	r3, [sp, #52]	; 0x34
   147b4:	eor	r1, lr, r3
   147b8:	adds	r3, r2, ip
   147bc:	adc	r5, r1, sl
   147c0:	eor	r7, r5, r0
   147c4:	ldr	r0, [sp, #8]
   147c8:	eor	r0, r3, r0
   147cc:	lsl	r8, r0, #8
   147d0:	lsr	r0, r0, #24
   147d4:	orr	r8, r8, r7, lsr #24
   147d8:	orr	r0, r0, r7, lsl #8
   147dc:	adds	r7, lr, r6
   147e0:	ldr	r6, [sp, #264]	; 0x108
   147e4:	adc	r9, r9, r6
   147e8:	adds	r7, r7, r0
   147ec:	adc	r6, r9, r8
   147f0:	eor	r2, r7, r2
   147f4:	str	r7, [sp, #116]	; 0x74
   147f8:	lsl	r7, r2, #16
   147fc:	eor	r1, r6, r1
   14800:	lsr	r2, r2, #16
   14804:	str	r6, [sp, #120]	; 0x78
   14808:	orr	r4, r2, r1, lsl #16
   1480c:	orr	r6, r7, r1, lsr #16
   14810:	adds	ip, r4, r3
   14814:	mov	r3, r6
   14818:	str	r6, [sp, #132]	; 0x84
   1481c:	str	r4, [sp, #136]	; 0x88
   14820:	adc	lr, r6, r5
   14824:	eor	r0, ip, r0
   14828:	str	ip, [sp, #108]	; 0x6c
   1482c:	eor	r1, lr, r8
   14830:	str	lr, [sp, #112]	; 0x70
   14834:	lsl	r2, r1, #1
   14838:	orr	r2, r2, r0, lsr #31
   1483c:	lsl	r0, r0, #1
   14840:	orr	r0, r0, r1, lsr #31
   14844:	ldr	r1, [sp, #16]
   14848:	str	r2, [sp, #140]	; 0x8c
   1484c:	ldr	r2, [sp]
   14850:	str	r0, [sp, #144]	; 0x90
   14854:	ldr	r0, [sp, #12]
   14858:	eor	r1, r2, r1
   1485c:	eor	r0, sl, r0
   14860:	lsl	r2, r0, #1
   14864:	orr	r2, r2, r1, lsr #31
   14868:	lsl	r1, r1, #1
   1486c:	orr	r1, r1, r0, lsr #31
   14870:	ldr	r0, [sp, #80]	; 0x50
   14874:	str	r2, [sp, #16]
   14878:	str	r1, [sp, #28]
   1487c:	adds	r0, r1, r0
   14880:	ldr	r1, [sp, #20]
   14884:	str	r0, [sp, #12]
   14888:	ldr	r0, [sp, #84]	; 0x54
   1488c:	adc	r0, r2, r0
   14890:	ldr	r2, [sp, #24]
   14894:	str	r0, [sp, #8]
   14898:	ldr	r0, [sp, #40]	; 0x28
   1489c:	eor	r0, r1, r0
   148a0:	ldr	r1, [sp, #60]	; 0x3c
   148a4:	eor	r1, r2, r1
   148a8:	lsl	r2, r1, #16
   148ac:	lsr	r1, r1, #16
   148b0:	orr	r7, r2, r0, lsr #16
   148b4:	orr	r8, r1, r0, lsl #16
   148b8:	ldr	r0, [sp, #72]	; 0x48
   148bc:	str	r7, [sp, #372]	; 0x174
   148c0:	str	r8, [sp, #368]	; 0x170
   148c4:	adds	r9, r8, r0
   148c8:	ldr	r0, [sp, #76]	; 0x4c
   148cc:	str	r9, [sp, #336]	; 0x150
   148d0:	adc	sl, r7, r0
   148d4:	ldr	r0, [sp, #32]
   148d8:	str	sl, [sp, #340]	; 0x154
   148dc:	eor	r5, sl, r0
   148e0:	ldr	r0, [sp, #36]	; 0x24
   148e4:	lsl	r6, r5, #1
   148e8:	eor	r2, r9, r0
   148ec:	orr	r1, r6, r2, lsr #31
   148f0:	lsl	r2, r2, #1
   148f4:	ldr	r6, [fp, #-156]	; 0xffffff64
   148f8:	orr	r0, r2, r5, lsr #31
   148fc:	ldr	r2, [sp, #12]
   14900:	str	r1, [sp, #308]	; 0x134
   14904:	str	r1, [sp, #84]	; 0x54
   14908:	ldr	r1, [sp, #144]	; 0x90
   1490c:	str	r0, [sp, #76]	; 0x4c
   14910:	str	r0, [sp, #304]	; 0x130
   14914:	ldr	r0, [sp, #160]	; 0xa0
   14918:	str	r6, [sp, #80]	; 0x50
   1491c:	str	r0, [sp, #380]	; 0x17c
   14920:	ldr	r0, [sp, #148]	; 0x94
   14924:	str	r0, [sp, #376]	; 0x178
   14928:	ldr	r0, [sp, #168]	; 0xa8
   1492c:	str	r0, [sp, #348]	; 0x15c
   14930:	ldr	r0, [sp, #164]	; 0xa4
   14934:	str	r0, [sp, #344]	; 0x158
   14938:	ldr	r0, [sp, #152]	; 0x98
   1493c:	str	r0, [sp, #388]	; 0x184
   14940:	ldr	r0, [sp, #156]	; 0x9c
   14944:	str	r0, [sp, #384]	; 0x180
   14948:	ldr	r0, [fp, #-160]	; 0xffffff60
   1494c:	str	r3, [sp, #396]	; 0x18c
   14950:	str	r4, [sp, #392]	; 0x188
   14954:	str	lr, [sp, #356]	; 0x164
   14958:	str	ip, [sp, #352]	; 0x160
   1495c:	ldr	r3, [sp, #140]	; 0x8c
   14960:	str	r1, [sp, #312]	; 0x138
   14964:	adds	r2, r2, r0
   14968:	str	r0, [sp, #96]	; 0x60
   1496c:	ldr	r0, [sp, #8]
   14970:	str	r3, [sp, #316]	; 0x13c
   14974:	eor	r4, r2, r8
   14978:	adc	r6, r0, r6
   1497c:	ldr	r0, [sp, #44]	; 0x2c
   14980:	eor	lr, r6, r7
   14984:	ldr	r7, [sp, #52]	; 0x34
   14988:	str	lr, [sp, #32]
   1498c:	adds	r5, r7, r0
   14990:	ldr	r7, [sp, #56]	; 0x38
   14994:	ldr	r0, [sp, #48]	; 0x30
   14998:	str	r4, [sp, #56]	; 0x38
   1499c:	adc	ip, r7, r0
   149a0:	adds	r0, lr, r5
   149a4:	adc	r7, r4, ip
   149a8:	ldr	r4, [sp, #16]
   149ac:	str	r0, [sp, #44]	; 0x2c
   149b0:	str	r7, [sp, #48]	; 0x30
   149b4:	eor	lr, r7, r4
   149b8:	ldr	r4, [sp, #28]
   149bc:	eor	r4, r0, r4
   149c0:	ldr	r0, [sp, #204]	; 0xcc
   149c4:	lsl	r7, r4, #8
   149c8:	lsr	r4, r4, #24
   149cc:	orr	r8, r7, lr, lsr #24
   149d0:	orr	r7, r4, lr, lsl #8
   149d4:	adds	r2, r2, r0
   149d8:	ldr	r0, [sp, #200]	; 0xc8
   149dc:	str	r7, [sp, #24]
   149e0:	str	r8, [sp, #16]
   149e4:	adc	r6, r6, r0
   149e8:	ldr	r0, [sp, #268]	; 0x10c
   149ec:	adds	r7, r2, r7
   149f0:	ldr	r2, [sp, #88]	; 0x58
   149f4:	adc	r4, r6, r8
   149f8:	adds	r6, r1, r0
   149fc:	ldr	r0, [sp, #264]	; 0x108
   14a00:	adc	r0, r3, r0
   14a04:	adds	r1, r6, r7
   14a08:	ldr	r6, [sp, #92]	; 0x5c
   14a0c:	adc	lr, r0, r4
   14a10:	ldr	r0, [sp, #64]	; 0x40
   14a14:	str	r1, [sp, #72]	; 0x48
   14a18:	ldr	r1, [sp, #68]	; 0x44
   14a1c:	str	lr, [sp, #28]
   14a20:	eor	r0, ip, r0
   14a24:	eor	r1, r5, r1
   14a28:	lsl	r3, r0, #1
   14a2c:	orr	r3, r3, r1, lsr #31
   14a30:	lsl	r1, r1, #1
   14a34:	orr	r0, r1, r0, lsr #31
   14a38:	ldr	r1, [sp, #196]	; 0xc4
   14a3c:	adds	r1, r2, r1
   14a40:	ldr	r2, [sp, #192]	; 0xc0
   14a44:	adc	r6, r6, r2
   14a48:	ldr	r2, [sp, #160]	; 0xa0
   14a4c:	adds	r1, r1, r0
   14a50:	adc	r6, r6, r3
   14a54:	eor	ip, r6, r2
   14a58:	ldr	r2, [sp, #148]	; 0x94
   14a5c:	adds	r9, ip, r9
   14a60:	eor	r0, r9, r0
   14a64:	lsl	r8, r0, #8
   14a68:	lsr	r0, r0, #24
   14a6c:	eor	r2, r1, r2
   14a70:	adc	sl, r2, sl
   14a74:	eor	r3, sl, r3
   14a78:	orr	r8, r8, r3, lsr #24
   14a7c:	orr	r0, r0, r3, lsl #8
   14a80:	ldr	r3, [sp, #244]	; 0xf4
   14a84:	adds	r1, r1, r3
   14a88:	ldr	r3, [sp, #240]	; 0xf0
   14a8c:	adc	r3, r6, r3
   14a90:	adds	r5, r1, r0
   14a94:	adc	r1, r3, r8
   14a98:	str	r5, [sp, #60]	; 0x3c
   14a9c:	str	r1, [sp, #64]	; 0x40
   14aa0:	eor	r1, r1, r2
   14aa4:	eor	r2, r5, ip
   14aa8:	ldr	r5, [sp, #84]	; 0x54
   14aac:	lsl	r3, r2, #16
   14ab0:	lsr	r2, r2, #16
   14ab4:	orr	ip, r3, r1, lsr #16
   14ab8:	orr	r1, r2, r1, lsl #16
   14abc:	adds	r2, r1, r9
   14ac0:	str	r1, [sp, #92]	; 0x5c
   14ac4:	eor	r1, lr, ip
   14ac8:	str	r1, [sp, #20]
   14acc:	adc	r1, ip, sl
   14ad0:	str	r2, [sp, #36]	; 0x24
   14ad4:	eor	r0, r2, r0
   14ad8:	str	r1, [sp, #40]	; 0x28
   14adc:	eor	r1, r1, r8
   14ae0:	lsl	r2, r1, #1
   14ae4:	orr	r2, r2, r0, lsr #31
   14ae8:	lsl	r0, r0, #1
   14aec:	orr	r0, r0, r1, lsr #31
   14af0:	ldr	r1, [sp, #32]
   14af4:	str	r2, [sp, #160]	; 0xa0
   14af8:	str	r0, [sp, #148]	; 0x94
   14afc:	ldr	r0, [sp, #56]	; 0x38
   14b00:	eor	r1, r7, r1
   14b04:	lsl	r2, r1, #16
   14b08:	lsr	r1, r1, #16
   14b0c:	eor	r0, r4, r0
   14b10:	orr	r3, r2, r0, lsr #16
   14b14:	orr	r0, r1, r0, lsl #16
   14b18:	ldr	r1, [sp, #44]	; 0x2c
   14b1c:	str	r0, [sp, #52]	; 0x34
   14b20:	str	r3, [sp, #56]	; 0x38
   14b24:	adds	lr, r0, r1
   14b28:	ldr	r0, [sp, #48]	; 0x30
   14b2c:	ldr	r1, [sp, #24]
   14b30:	str	lr, [sp, #360]	; 0x168
   14b34:	str	lr, [sp, #44]	; 0x2c
   14b38:	adc	r9, r3, r0
   14b3c:	ldr	r0, [sp, #16]
   14b40:	eor	r1, lr, r1
   14b44:	str	r9, [sp, #364]	; 0x16c
   14b48:	str	r9, [sp, #48]	; 0x30
   14b4c:	eor	r0, r9, r0
   14b50:	lsl	r2, r0, #1
   14b54:	orr	r8, r2, r1, lsr #31
   14b58:	lsl	r1, r1, #1
   14b5c:	ldr	r2, [sp, #128]	; 0x80
   14b60:	orr	r6, r1, r0, lsr #31
   14b64:	ldr	r0, [sp, #236]	; 0xec
   14b68:	ldr	r1, [sp, #124]	; 0x7c
   14b6c:	str	r8, [sp, #324]	; 0x144
   14b70:	str	r8, [sp, #32]
   14b74:	str	r6, [sp, #320]	; 0x140
   14b78:	str	r6, [sp, #24]
   14b7c:	adds	r0, r1, r0
   14b80:	ldr	r1, [sp, #232]	; 0xe8
   14b84:	adc	r7, r2, r1
   14b88:	ldr	r2, [sp, #76]	; 0x4c
   14b8c:	adds	r3, r0, r2
   14b90:	ldr	r0, [sp, #152]	; 0x98
   14b94:	adc	r4, r7, r5
   14b98:	eor	sl, r4, r0
   14b9c:	ldr	r0, [sp, #156]	; 0x9c
   14ba0:	eor	r7, r3, r0
   14ba4:	ldr	r0, [sp, #164]	; 0xa4
   14ba8:	adds	r1, sl, r0
   14bac:	ldr	r0, [sp, #168]	; 0xa8
   14bb0:	str	r1, [sp, #124]	; 0x7c
   14bb4:	adc	r0, r7, r0
   14bb8:	str	r0, [sp, #128]	; 0x80
   14bbc:	eor	ip, r0, r5
   14bc0:	eor	r0, r1, r2
   14bc4:	lsl	r5, r0, #8
   14bc8:	lsr	r0, r0, #24
   14bcc:	orr	r0, r0, ip, lsl #8
   14bd0:	orr	r1, r5, ip, lsr #24
   14bd4:	adds	ip, r0, r3
   14bd8:	str	r0, [sp, #156]	; 0x9c
   14bdc:	ldr	r0, [sp, #148]	; 0x94
   14be0:	str	r1, [sp, #152]	; 0x98
   14be4:	adc	r2, r1, r4
   14be8:	ldr	r4, [fp, #-136]	; 0xffffff78
   14bec:	str	r0, [sp, #328]	; 0x148
   14bf0:	ldr	r0, [sp, #160]	; 0xa0
   14bf4:	adds	r1, ip, r4
   14bf8:	str	r4, [sp, #88]	; 0x58
   14bfc:	str	r1, [sp, #164]	; 0xa4
   14c00:	eor	r1, r1, sl
   14c04:	str	r0, [sp, #332]	; 0x14c
   14c08:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14c0c:	str	r0, [sp, #84]	; 0x54
   14c10:	adc	r0, r2, r0
   14c14:	lsl	r2, r1, #16
   14c18:	lsr	r1, r1, #16
   14c1c:	str	r0, [sp, #168]	; 0xa8
   14c20:	eor	r0, r0, r7
   14c24:	ldr	r7, [sp, #20]
   14c28:	orr	r9, r2, r0, lsr #16
   14c2c:	orr	r8, r1, r0, lsl #16
   14c30:	ldr	r0, [sp, #124]	; 0x7c
   14c34:	ldr	r2, [sp, #72]	; 0x48
   14c38:	adds	r5, r8, r0
   14c3c:	ldr	r0, [sp, #128]	; 0x80
   14c40:	adc	lr, r9, r0
   14c44:	ldr	r0, [sp, #92]	; 0x5c
   14c48:	adds	r6, r5, r7
   14c4c:	eor	r3, r2, r0
   14c50:	ldr	r0, [sp, #140]	; 0x8c
   14c54:	adc	r4, lr, r3
   14c58:	eor	r1, r4, r0
   14c5c:	ldr	r0, [sp, #144]	; 0x90
   14c60:	eor	r0, r6, r0
   14c64:	lsl	sl, r0, #8
   14c68:	lsr	r0, r0, #24
   14c6c:	orr	ip, r0, r1, lsl #8
   14c70:	ldr	r0, [sp, #96]	; 0x60
   14c74:	orr	sl, sl, r1, lsr #24
   14c78:	adds	r1, r2, r0
   14c7c:	ldr	r0, [sp, #80]	; 0x50
   14c80:	ldr	r2, [sp, #28]
   14c84:	adc	r2, r2, r0
   14c88:	adds	r0, r1, ip
   14c8c:	adc	r1, r2, sl
   14c90:	eor	r2, r0, r7
   14c94:	str	r0, [sp, #68]	; 0x44
   14c98:	ldr	r7, [sp, #120]	; 0x78
   14c9c:	str	r1, [sp, #72]	; 0x48
   14ca0:	eor	r1, r1, r3
   14ca4:	lsl	r3, r2, #16
   14ca8:	lsr	r2, r2, #16
   14cac:	orr	r3, r3, r1, lsr #16
   14cb0:	orr	r1, r2, r1, lsl #16
   14cb4:	adds	r2, r1, r6
   14cb8:	str	r1, [sp, #96]	; 0x60
   14cbc:	str	r3, [sp, #92]	; 0x5c
   14cc0:	ldr	r6, [sp, #52]	; 0x34
   14cc4:	adc	r1, r3, r4
   14cc8:	str	r2, [sp, #124]	; 0x7c
   14ccc:	eor	r0, r2, ip
   14cd0:	ldr	r3, [sp, #116]	; 0x74
   14cd4:	str	r1, [sp, #128]	; 0x80
   14cd8:	eor	r1, r1, sl
   14cdc:	lsl	r2, r1, #1
   14ce0:	orr	ip, r2, r0, lsr #31
   14ce4:	lsl	r0, r0, #1
   14ce8:	orr	r4, r0, r1, lsr #31
   14cec:	ldr	r0, [sp, #152]	; 0x98
   14cf0:	ldr	r1, [sp, #156]	; 0x9c
   14cf4:	str	ip, [sp, #140]	; 0x8c
   14cf8:	str	r4, [sp, #144]	; 0x90
   14cfc:	eor	r0, lr, r0
   14d00:	eor	r1, r5, r1
   14d04:	lsl	r2, r0, #1
   14d08:	orr	r2, r2, r1, lsr #31
   14d0c:	lsl	r1, r1, #1
   14d10:	orr	r0, r1, r0, lsr #31
   14d14:	ldr	r1, [sp, #196]	; 0xc4
   14d18:	adds	r1, r3, r1
   14d1c:	ldr	r3, [sp, #192]	; 0xc0
   14d20:	adc	r3, r7, r3
   14d24:	adds	r1, r1, r0
   14d28:	ldr	r7, [sp, #56]	; 0x38
   14d2c:	eor	r5, r1, r6
   14d30:	ldr	r6, [sp, #36]	; 0x24
   14d34:	adc	r3, r3, r2
   14d38:	str	r5, [sp, #52]	; 0x34
   14d3c:	eor	r7, r3, r7
   14d40:	adds	r6, r7, r6
   14d44:	str	r7, [sp, #56]	; 0x38
   14d48:	ldr	r7, [sp, #40]	; 0x28
   14d4c:	eor	r0, r6, r0
   14d50:	str	r6, [sp, #76]	; 0x4c
   14d54:	ldr	r6, [sp, #160]	; 0xa0
   14d58:	adc	r7, r5, r7
   14d5c:	ldr	r5, [sp, #148]	; 0x94
   14d60:	str	r7, [sp, #80]	; 0x50
   14d64:	eor	r2, r7, r2
   14d68:	lsl	r7, r0, #8
   14d6c:	lsr	r0, r0, #24
   14d70:	orr	r7, r7, r2, lsr #24
   14d74:	orr	r2, r0, r2, lsl #8
   14d78:	ldr	r0, [sp, #180]	; 0xb4
   14d7c:	str	r2, [sp, #156]	; 0x9c
   14d80:	str	r7, [sp, #152]	; 0x98
   14d84:	adds	r0, r1, r0
   14d88:	ldr	r1, [sp, #176]	; 0xb0
   14d8c:	adc	r1, r3, r1
   14d90:	adds	r2, r0, r2
   14d94:	ldr	r0, [sp, #208]	; 0xd0
   14d98:	adc	r3, r1, r7
   14d9c:	ldr	r1, [sp, #220]	; 0xdc
   14da0:	str	r2, [sp, #40]	; 0x28
   14da4:	ldr	r7, [sp, #24]
   14da8:	str	r3, [sp, #36]	; 0x24
   14dac:	adds	r0, r4, r0
   14db0:	adc	r1, ip, r1
   14db4:	adds	r0, r0, r2
   14db8:	ldr	r2, [sp, #64]	; 0x40
   14dbc:	str	r0, [sp, #180]	; 0xb4
   14dc0:	adc	r0, r1, r3
   14dc4:	ldr	r1, [sp, #60]	; 0x3c
   14dc8:	ldr	r3, [sp, #32]
   14dcc:	str	r0, [sp, #176]	; 0xb0
   14dd0:	ldr	r0, [sp, #236]	; 0xec
   14dd4:	adds	r0, r1, r0
   14dd8:	ldr	r1, [sp, #232]	; 0xe8
   14ddc:	adc	r1, r2, r1
   14de0:	ldr	r2, [sp, #108]	; 0x6c
   14de4:	adds	r0, r0, r7
   14de8:	adc	r1, r1, r3
   14dec:	eor	sl, r8, r0
   14df0:	eor	r9, r9, r1
   14df4:	adds	lr, r9, r2
   14df8:	ldr	r2, [sp, #112]	; 0x70
   14dfc:	eor	r7, lr, r7
   14e00:	lsl	r4, r7, #8
   14e04:	lsr	r7, r7, #24
   14e08:	adc	r8, sl, r2
   14e0c:	eor	r2, r8, r3
   14e10:	orr	r3, r4, r2, lsr #24
   14e14:	orr	r4, r7, r2, lsl #8
   14e18:	ldr	r2, [sp, #204]	; 0xcc
   14e1c:	str	r3, [sp, #28]
   14e20:	str	r4, [sp, #32]
   14e24:	adds	r0, r0, r2
   14e28:	ldr	r2, [sp, #200]	; 0xc8
   14e2c:	adc	r1, r1, r2
   14e30:	adds	r2, r0, r4
   14e34:	adc	r0, r1, r3
   14e38:	eor	r1, r2, r9
   14e3c:	str	r2, [sp, #60]	; 0x3c
   14e40:	str	r0, [sp, #64]	; 0x40
   14e44:	lsl	r2, r1, #16
   14e48:	eor	r0, r0, sl
   14e4c:	lsr	r1, r1, #16
   14e50:	orr	r2, r2, r0, lsr #16
   14e54:	orr	r0, r1, r0, lsl #16
   14e58:	ldr	r1, [sp, #256]	; 0x100
   14e5c:	adds	r9, r0, lr
   14e60:	str	r0, [sp, #112]	; 0x70
   14e64:	ldr	r0, [sp, #260]	; 0x104
   14e68:	str	r2, [sp, #108]	; 0x6c
   14e6c:	adc	ip, r2, r8
   14e70:	str	r9, [sp, #24]
   14e74:	adds	r0, r5, r0
   14e78:	adc	r2, r6, r1
   14e7c:	ldr	r1, [sp, #164]	; 0xa4
   14e80:	adds	r1, r0, r1
   14e84:	ldr	r0, [sp, #168]	; 0xa8
   14e88:	adc	r7, r2, r0
   14e8c:	ldr	r0, [sp, #132]	; 0x84
   14e90:	eor	r3, r7, r0
   14e94:	ldr	r0, [sp, #136]	; 0x88
   14e98:	eor	r2, r1, r0
   14e9c:	ldr	r0, [sp, #44]	; 0x2c
   14ea0:	adds	r4, r3, r0
   14ea4:	ldr	r0, [sp, #48]	; 0x30
   14ea8:	str	r4, [sp, #44]	; 0x2c
   14eac:	adc	r0, r2, r0
   14eb0:	str	r0, [sp, #48]	; 0x30
   14eb4:	eor	sl, r0, r6
   14eb8:	eor	r0, r4, r5
   14ebc:	lsl	r5, r0, #8
   14ec0:	lsr	r0, r0, #24
   14ec4:	orr	r6, r5, sl, lsr #24
   14ec8:	orr	r5, r0, sl, lsl #8
   14ecc:	ldr	r0, [sp, #188]	; 0xbc
   14ed0:	str	r6, [sp, #132]	; 0x84
   14ed4:	str	r5, [sp, #136]	; 0x88
   14ed8:	adds	r0, r1, r0
   14edc:	ldr	r1, [sp, #184]	; 0xb8
   14ee0:	adc	r1, r7, r1
   14ee4:	adds	r7, r0, r5
   14ee8:	adc	r0, r1, r6
   14eec:	eor	r1, r7, r3
   14ef0:	ldr	r6, [sp, #180]	; 0xb4
   14ef4:	str	r7, [sp, #148]	; 0x94
   14ef8:	str	r0, [sp, #160]	; 0xa0
   14efc:	eor	r0, r0, r2
   14f00:	lsr	r2, r1, #16
   14f04:	lsl	r1, r1, #16
   14f08:	orr	r8, r2, r0, lsl #16
   14f0c:	ldr	r2, [sp, #176]	; 0xb0
   14f10:	orr	r7, r1, r0, lsr #16
   14f14:	ldr	r0, [sp, #140]	; 0x8c
   14f18:	eor	r3, r6, r8
   14f1c:	eor	lr, r2, r7
   14f20:	adds	r4, lr, r9
   14f24:	mov	r9, ip
   14f28:	adc	r5, r3, ip
   14f2c:	eor	r1, r5, r0
   14f30:	ldr	r0, [sp, #144]	; 0x90
   14f34:	eor	r0, r4, r0
   14f38:	lsl	sl, r0, #8
   14f3c:	lsr	r0, r0, #24
   14f40:	orr	sl, sl, r1, lsr #24
   14f44:	orr	r0, r0, r1, lsl #8
   14f48:	ldr	r1, [sp, #252]	; 0xfc
   14f4c:	adds	r1, r6, r1
   14f50:	ldr	r6, [sp, #248]	; 0xf8
   14f54:	adc	ip, r2, r6
   14f58:	adds	r6, r1, r0
   14f5c:	adc	r1, ip, sl
   14f60:	eor	r2, r6, lr
   14f64:	str	r6, [sp, #116]	; 0x74
   14f68:	ldr	r6, [sp, #40]	; 0x28
   14f6c:	eor	ip, r1, r3
   14f70:	lsl	r3, r2, #16
   14f74:	lsr	r2, r2, #16
   14f78:	str	r1, [sp, #120]	; 0x78
   14f7c:	orr	r1, r2, ip, lsl #16
   14f80:	orr	r3, r3, ip, lsr #16
   14f84:	ldr	ip, [sp, #88]	; 0x58
   14f88:	adds	r2, r1, r4
   14f8c:	str	r1, [sp, #168]	; 0xa8
   14f90:	str	r3, [sp, #164]	; 0xa4
   14f94:	adc	r1, r3, r5
   14f98:	str	r2, [sp, #140]	; 0x8c
   14f9c:	eor	r0, r2, r0
   14fa0:	ldr	r3, [sp, #72]	; 0x48
   14fa4:	str	r1, [sp, #144]	; 0x90
   14fa8:	eor	r1, r1, sl
   14fac:	ldr	sl, [sp, #84]	; 0x54
   14fb0:	lsl	r2, r1, #1
   14fb4:	orr	r2, r2, r0, lsr #31
   14fb8:	lsl	r0, r0, #1
   14fbc:	orr	r0, r0, r1, lsr #31
   14fc0:	ldr	r1, [sp, #32]
   14fc4:	str	r2, [sp, #180]	; 0xb4
   14fc8:	ldr	r2, [sp, #24]
   14fcc:	str	r0, [sp, #176]	; 0xb0
   14fd0:	ldr	r0, [sp, #28]
   14fd4:	eor	r1, r2, r1
   14fd8:	eor	r0, r9, r0
   14fdc:	lsl	r2, r0, #1
   14fe0:	orr	r2, r2, r1, lsr #31
   14fe4:	lsl	r1, r1, #1
   14fe8:	orr	r0, r1, r0, lsr #31
   14fec:	ldr	r1, [sp, #68]	; 0x44
   14ff0:	adds	r1, r1, ip
   14ff4:	adc	r3, r3, sl
   14ff8:	adds	r5, r1, r0
   14ffc:	ldr	r1, [sp, #44]	; 0x2c
   15000:	adc	r3, r3, r2
   15004:	adds	r9, r8, r1
   15008:	ldr	r1, [sp, #48]	; 0x30
   1500c:	adc	r8, r7, r1
   15010:	ldr	r1, [sp, #52]	; 0x34
   15014:	ldr	r7, [sp, #36]	; 0x24
   15018:	eor	r1, r7, r1
   1501c:	ldr	r7, [sp, #56]	; 0x38
   15020:	eor	r7, r6, r7
   15024:	lsr	r6, r7, #16
   15028:	lsl	r7, r7, #16
   1502c:	orr	lr, r7, r1, lsr #16
   15030:	orr	r6, r6, r1, lsl #16
   15034:	ldr	r7, [sp, #228]	; 0xe4
   15038:	eor	r1, lr, r3
   1503c:	eor	r4, r6, r5
   15040:	str	r1, [sp, #72]	; 0x48
   15044:	adds	r1, r1, r9
   15048:	str	r4, [sp, #48]	; 0x30
   1504c:	adc	r4, r4, r8
   15050:	eor	r0, r1, r0
   15054:	str	r1, [sp, #56]	; 0x38
   15058:	str	r4, [sp, #68]	; 0x44
   1505c:	eor	r2, r4, r2
   15060:	lsl	r4, r0, #8
   15064:	lsr	r0, r0, #24
   15068:	orr	r1, r4, r2, lsr #24
   1506c:	orr	r4, r0, r2, lsl #8
   15070:	ldr	r0, [sp, #216]	; 0xd8
   15074:	str	r1, [sp, #40]	; 0x28
   15078:	str	r4, [sp, #44]	; 0x2c
   1507c:	adds	r2, r5, r0
   15080:	ldr	r0, [sp, #212]	; 0xd4
   15084:	adc	r3, r3, r0
   15088:	adds	r0, r2, r4
   1508c:	ldr	r2, [sp, #60]	; 0x3c
   15090:	adc	r1, r3, r1
   15094:	adds	r3, r0, ip
   15098:	str	r0, [sp, #32]
   1509c:	str	r1, [sp, #28]
   150a0:	adc	r0, r1, sl
   150a4:	ldr	r1, [sp, #176]	; 0xb0
   150a8:	adds	r1, r3, r1
   150ac:	str	r1, [sp, #88]	; 0x58
   150b0:	ldr	r1, [sp, #180]	; 0xb4
   150b4:	adc	r5, r0, r1
   150b8:	ldr	r1, [sp, #136]	; 0x88
   150bc:	ldr	r0, [sp, #132]	; 0x84
   150c0:	str	r5, [sp, #84]	; 0x54
   150c4:	eor	r3, r9, r1
   150c8:	ldr	r1, [sp, #244]	; 0xf4
   150cc:	eor	r0, r8, r0
   150d0:	lsl	r4, r0, #1
   150d4:	orr	r9, r4, r3, lsr #31
   150d8:	lsl	r3, r3, #1
   150dc:	orr	r0, r3, r0, lsr #31
   150e0:	adds	r3, r2, r1
   150e4:	ldr	r1, [sp, #240]	; 0xf0
   150e8:	ldr	r2, [sp, #64]	; 0x40
   150ec:	adc	r4, r2, r1
   150f0:	ldr	r1, [sp, #92]	; 0x5c
   150f4:	adds	r3, r3, r0
   150f8:	adc	r4, r4, r9
   150fc:	str	r1, [sp, #380]	; 0x17c
   15100:	eor	ip, r4, r1
   15104:	ldr	r1, [sp, #76]	; 0x4c
   15108:	str	r6, [sp, #368]	; 0x170
   1510c:	str	lr, [sp, #372]	; 0x174
   15110:	adds	r6, r6, r1
   15114:	ldr	r1, [sp, #80]	; 0x50
   15118:	adc	r8, lr, r1
   1511c:	ldr	r1, [sp, #96]	; 0x60
   15120:	str	r1, [sp, #376]	; 0x178
   15124:	eor	lr, r3, r1
   15128:	adds	r1, ip, r6
   1512c:	str	r8, [sp, #340]	; 0x154
   15130:	str	r6, [sp, #336]	; 0x150
   15134:	adc	r2, lr, r8
   15138:	eor	r0, r1, r0
   1513c:	adds	r3, r3, r7
   15140:	ldr	r7, [sp, #224]	; 0xe0
   15144:	lsl	sl, r0, #8
   15148:	eor	r9, r2, r9
   1514c:	lsr	r0, r0, #24
   15150:	orr	r0, r0, r9, lsl #8
   15154:	orr	sl, sl, r9, lsr #24
   15158:	adc	r4, r4, r7
   1515c:	adds	r7, r3, r0
   15160:	adc	r3, r4, sl
   15164:	eor	r4, r7, ip
   15168:	str	r7, [sp, #92]	; 0x5c
   1516c:	str	r3, [sp, #96]	; 0x60
   15170:	eor	r3, r3, lr
   15174:	lsl	r7, r4, #16
   15178:	lsr	r4, r4, #16
   1517c:	ldr	lr, [sp, #124]	; 0x7c
   15180:	orr	r7, r7, r3, lsr #16
   15184:	orr	r3, r4, r3, lsl #16
   15188:	str	r3, [sp, #52]	; 0x34
   1518c:	adds	r3, r3, r1
   15190:	eor	r1, r5, r7
   15194:	str	r1, [sp, #36]	; 0x24
   15198:	adc	r1, r7, r2
   1519c:	eor	r0, r3, r0
   151a0:	str	r3, [sp, #76]	; 0x4c
   151a4:	str	r1, [sp, #80]	; 0x50
   151a8:	eor	r1, r1, sl
   151ac:	ldr	sl, [sp, #128]	; 0x80
   151b0:	lsl	r2, r1, #1
   151b4:	orr	r2, r2, r0, lsr #31
   151b8:	lsl	r0, r0, #1
   151bc:	orr	r0, r0, r1, lsr #31
   151c0:	ldr	r1, [sp, #28]
   151c4:	str	r2, [sp, #136]	; 0x88
   151c8:	ldr	r2, [sp, #32]
   151cc:	str	r0, [sp, #132]	; 0x84
   151d0:	ldr	r0, [sp, #48]	; 0x30
   151d4:	eor	r0, r1, r0
   151d8:	ldr	r1, [sp, #72]	; 0x48
   151dc:	eor	r1, r2, r1
   151e0:	lsl	r2, r1, #16
   151e4:	lsr	r1, r1, #16
   151e8:	orr	r3, r2, r0, lsr #16
   151ec:	orr	r0, r1, r0, lsl #16
   151f0:	ldr	r1, [sp, #56]	; 0x38
   151f4:	str	r0, [sp, #72]	; 0x48
   151f8:	str	r3, [sp, #64]	; 0x40
   151fc:	adds	r2, r0, r1
   15200:	ldr	r0, [sp, #68]	; 0x44
   15204:	ldr	r1, [sp, #44]	; 0x2c
   15208:	str	r2, [sp, #60]	; 0x3c
   1520c:	adc	r9, r3, r0
   15210:	ldr	r0, [sp, #40]	; 0x28
   15214:	eor	r1, r2, r1
   15218:	str	r9, [sp, #68]	; 0x44
   1521c:	eor	r0, r9, r0
   15220:	lsl	r3, r0, #1
   15224:	orr	ip, r3, r1, lsr #31
   15228:	lsl	r1, r1, #1
   1522c:	orr	r1, r1, r0, lsr #31
   15230:	ldr	r0, [sp, #152]	; 0x98
   15234:	str	ip, [sp, #48]	; 0x30
   15238:	str	r1, [sp, #40]	; 0x28
   1523c:	eor	r3, r8, r0
   15240:	ldr	r0, [sp, #156]	; 0x9c
   15244:	ldr	r8, [sp, #108]	; 0x6c
   15248:	eor	r7, r6, r0
   1524c:	lsl	r0, r3, #1
   15250:	ldr	r6, [sp, #112]	; 0x70
   15254:	orr	r4, r0, r7, lsr #31
   15258:	ldr	r0, [sp, #148]	; 0x94
   1525c:	lsl	r7, r7, #1
   15260:	orr	r5, r7, r3, lsr #31
   15264:	ldr	r3, [fp, #-84]	; 0xffffffac
   15268:	str	r4, [sp, #308]	; 0x134
   1526c:	str	r5, [sp, #304]	; 0x130
   15270:	str	lr, [sp, #344]	; 0x158
   15274:	str	sl, [sp, #348]	; 0x15c
   15278:	str	r8, [sp, #388]	; 0x184
   1527c:	str	r6, [sp, #384]	; 0x180
   15280:	adds	r7, r5, r0
   15284:	ldr	r0, [sp, #160]	; 0xa0
   15288:	str	r3, [sp, #148]	; 0x94
   1528c:	adc	r0, r4, r0
   15290:	str	r0, [sp, #56]	; 0x38
   15294:	ldr	r0, [sp, #164]	; 0xa4
   15298:	str	r0, [sp, #396]	; 0x18c
   1529c:	ldr	r0, [sp, #168]	; 0xa8
   152a0:	str	r0, [sp, #392]	; 0x188
   152a4:	ldr	r0, [sp, #140]	; 0x8c
   152a8:	str	r0, [sp, #352]	; 0x160
   152ac:	ldr	r0, [sp, #144]	; 0x90
   152b0:	str	r0, [sp, #356]	; 0x164
   152b4:	ldr	r0, [sp, #176]	; 0xb0
   152b8:	str	r0, [sp, #312]	; 0x138
   152bc:	ldr	r0, [sp, #180]	; 0xb4
   152c0:	str	r2, [sp, #360]	; 0x168
   152c4:	add	r2, sp, #316	; 0x13c
   152c8:	str	r9, [sp, #364]	; 0x16c
   152cc:	stm	r2, {r0, r1, ip}
   152d0:	ldr	r0, [sp, #132]	; 0x84
   152d4:	ldr	r2, [fp, #-128]	; 0xffffff80
   152d8:	ldr	r1, [fp, #-124]	; 0xffffff84
   152dc:	str	r0, [sp, #328]	; 0x148
   152e0:	ldr	r0, [sp, #136]	; 0x88
   152e4:	str	r1, [sp, #156]	; 0x9c
   152e8:	str	r2, [sp, #160]	; 0xa0
   152ec:	str	r0, [sp, #332]	; 0x14c
   152f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   152f4:	str	r0, [sp, #152]	; 0x98
   152f8:	adds	r7, r7, r0
   152fc:	ldr	r0, [sp, #56]	; 0x38
   15300:	adc	ip, r0, r3
   15304:	eor	r3, r7, r6
   15308:	eor	r0, ip, r8
   1530c:	adds	r8, r0, lr
   15310:	eor	r6, r8, r5
   15314:	adc	lr, r3, sl
   15318:	lsl	r5, r6, #8
   1531c:	eor	r4, lr, r4
   15320:	lsr	r6, r6, #24
   15324:	orr	sl, r5, r4, lsr #24
   15328:	orr	r5, r6, r4, lsl #8
   1532c:	adds	r6, r2, r7
   15330:	adc	r7, r1, ip
   15334:	adds	r1, r6, r5
   15338:	adc	r2, r7, sl
   1533c:	eor	r0, r1, r0
   15340:	str	r1, [sp, #44]	; 0x2c
   15344:	eor	r6, r2, r3
   15348:	lsl	r3, r0, #16
   1534c:	lsr	r0, r0, #16
   15350:	str	r2, [sp, #56]	; 0x38
   15354:	ldr	r2, [sp, #88]	; 0x58
   15358:	orr	r0, r0, r6, lsl #16
   1535c:	orr	r1, r3, r6, lsr #16
   15360:	ldr	r3, [sp, #36]	; 0x24
   15364:	adds	r6, r0, r8
   15368:	str	r0, [sp, #112]	; 0x70
   1536c:	ldr	r0, [sp, #52]	; 0x34
   15370:	str	r1, [sp, #32]
   15374:	adc	r4, r1, lr
   15378:	adds	r8, r6, r3
   1537c:	eor	r7, r2, r0
   15380:	ldr	r0, [sp, #180]	; 0xb4
   15384:	adc	r9, r4, r7
   15388:	eor	r1, r9, r0
   1538c:	ldr	r0, [sp, #176]	; 0xb0
   15390:	eor	r0, r8, r0
   15394:	lsl	lr, r0, #8
   15398:	lsr	r0, r0, #24
   1539c:	orr	ip, r0, r1, lsl #8
   153a0:	orr	lr, lr, r1, lsr #24
   153a4:	ldr	r1, [sp, #228]	; 0xe4
   153a8:	ldr	r0, [sp, #84]	; 0x54
   153ac:	adds	r1, r2, r1
   153b0:	ldr	r2, [sp, #224]	; 0xe0
   153b4:	adc	r2, r0, r2
   153b8:	adds	r0, r1, ip
   153bc:	adc	r1, r2, lr
   153c0:	eor	r2, r0, r3
   153c4:	str	r0, [sp, #124]	; 0x7c
   153c8:	ldr	r3, [sp, #116]	; 0x74
   153cc:	str	r1, [sp, #128]	; 0x80
   153d0:	eor	r1, r1, r7
   153d4:	lsl	r7, r2, #16
   153d8:	lsr	r2, r2, #16
   153dc:	orr	r7, r7, r1, lsr #16
   153e0:	orr	r1, r2, r1, lsl #16
   153e4:	adds	r2, r1, r8
   153e8:	str	r1, [sp, #88]	; 0x58
   153ec:	str	r7, [sp, #84]	; 0x54
   153f0:	adc	r1, r7, r9
   153f4:	str	r2, [sp, #176]	; 0xb0
   153f8:	eor	r0, r2, ip
   153fc:	ldr	r7, [sp, #120]	; 0x78
   15400:	str	r1, [sp, #180]	; 0xb4
   15404:	eor	r1, r1, lr
   15408:	lsl	r2, r1, #1
   1540c:	orr	ip, r2, r0, lsr #31
   15410:	lsl	r0, r0, #1
   15414:	orr	lr, r0, r1, lsr #31
   15418:	eor	r0, r4, sl
   1541c:	eor	r1, r6, r5
   15420:	lsl	r2, r0, #1
   15424:	str	ip, [sp, #20]
   15428:	orr	r2, r2, r1, lsr #31
   1542c:	lsl	r1, r1, #1
   15430:	str	lr, [sp, #24]
   15434:	orr	r0, r1, r0, lsr #31
   15438:	ldr	r1, [sp, #244]	; 0xf4
   1543c:	adds	r1, r3, r1
   15440:	ldr	r3, [sp, #240]	; 0xf0
   15444:	adc	r3, r7, r3
   15448:	ldr	r7, [sp, #64]	; 0x40
   1544c:	adds	r1, r1, r0
   15450:	adc	r3, r3, r2
   15454:	eor	r6, r3, r7
   15458:	ldr	r7, [sp, #72]	; 0x48
   1545c:	str	r6, [sp, #120]	; 0x78
   15460:	eor	r5, r1, r7
   15464:	ldr	r7, [sp, #76]	; 0x4c
   15468:	str	r5, [sp, #116]	; 0x74
   1546c:	adds	r6, r6, r7
   15470:	ldr	r7, [sp, #80]	; 0x50
   15474:	eor	r0, r6, r0
   15478:	str	r6, [sp, #64]	; 0x40
   1547c:	ldr	r6, [sp, #48]	; 0x30
   15480:	adc	r7, r5, r7
   15484:	ldr	r5, [sp, #40]	; 0x28
   15488:	str	r7, [sp, #72]	; 0x48
   1548c:	eor	r2, r7, r2
   15490:	lsl	r7, r0, #8
   15494:	lsr	r0, r0, #24
   15498:	orr	r7, r7, r2, lsr #24
   1549c:	orr	r2, r0, r2, lsl #8
   154a0:	ldr	r0, [sp, #152]	; 0x98
   154a4:	str	r2, [sp, #80]	; 0x50
   154a8:	str	r7, [sp, #76]	; 0x4c
   154ac:	adds	r0, r1, r0
   154b0:	ldr	r1, [sp, #148]	; 0x94
   154b4:	adc	r1, r3, r1
   154b8:	adds	r2, r0, r2
   154bc:	ldr	r0, [sp, #204]	; 0xcc
   154c0:	adc	r3, r1, r7
   154c4:	ldr	r1, [sp, #200]	; 0xc8
   154c8:	str	r2, [sp, #108]	; 0x6c
   154cc:	ldr	r7, [sp, #140]	; 0x8c
   154d0:	str	r3, [sp, #52]	; 0x34
   154d4:	adds	r0, lr, r0
   154d8:	adc	r1, ip, r1
   154dc:	adds	r0, r0, r2
   154e0:	ldr	r2, [sp, #96]	; 0x60
   154e4:	adc	lr, r1, r3
   154e8:	str	r0, [sp, #16]
   154ec:	ldr	r0, [sp, #188]	; 0xbc
   154f0:	ldr	r1, [sp, #92]	; 0x5c
   154f4:	ldr	r3, [sp, #112]	; 0x70
   154f8:	adds	r0, r1, r0
   154fc:	ldr	r1, [sp, #184]	; 0xb8
   15500:	adc	r1, r2, r1
   15504:	ldr	r2, [sp, #32]
   15508:	adds	r0, r0, r5
   1550c:	adc	r1, r1, r6
   15510:	eor	r3, r3, r0
   15514:	eor	r2, r2, r1
   15518:	adds	sl, r2, r7
   1551c:	ldr	r7, [sp, #144]	; 0x90
   15520:	eor	r4, sl, r5
   15524:	adc	ip, r3, r7
   15528:	lsl	r7, r4, #8
   1552c:	lsr	r4, r4, #24
   15530:	eor	r6, ip, r6
   15534:	orr	r5, r7, r6, lsr #24
   15538:	ldr	r7, [sp, #268]	; 0x10c
   1553c:	orr	r6, r4, r6, lsl #8
   15540:	str	r6, [sp, #32]
   15544:	str	r5, [sp, #28]
   15548:	adds	r0, r0, r7
   1554c:	ldr	r7, [sp, #264]	; 0x108
   15550:	adc	r1, r1, r7
   15554:	adds	r7, r0, r6
   15558:	ldr	r6, [sp, #132]	; 0x84
   1555c:	adc	r0, r1, r5
   15560:	eor	r1, r7, r2
   15564:	str	r7, [sp, #36]	; 0x24
   15568:	ldr	r7, [sp, #136]	; 0x88
   1556c:	str	r0, [sp, #40]	; 0x28
   15570:	lsl	r2, r1, #16
   15574:	eor	r0, r0, r3
   15578:	lsr	r1, r1, #16
   1557c:	orr	r2, r2, r0, lsr #16
   15580:	orr	r0, r1, r0, lsl #16
   15584:	ldr	r1, [sp, #192]	; 0xc0
   15588:	adds	r9, r0, sl
   1558c:	str	r0, [sp, #112]	; 0x70
   15590:	ldr	r0, [sp, #196]	; 0xc4
   15594:	str	r2, [sp, #48]	; 0x30
   15598:	adc	r8, r2, ip
   1559c:	ldr	r2, [sp, #44]	; 0x2c
   155a0:	adds	r0, r6, r0
   155a4:	adc	r1, r7, r1
   155a8:	adds	r2, r0, r2
   155ac:	ldr	r0, [sp, #56]	; 0x38
   155b0:	adc	r1, r1, r0
   155b4:	ldr	r0, [sp, #164]	; 0xa4
   155b8:	eor	ip, r1, r0
   155bc:	ldr	r0, [sp, #168]	; 0xa8
   155c0:	eor	r3, r2, r0
   155c4:	ldr	r0, [sp, #60]	; 0x3c
   155c8:	adds	r4, ip, r0
   155cc:	ldr	r0, [sp, #68]	; 0x44
   155d0:	str	r4, [sp, #44]	; 0x2c
   155d4:	adc	r0, r3, r0
   155d8:	str	r0, [sp, #56]	; 0x38
   155dc:	eor	sl, r0, r7
   155e0:	eor	r0, r4, r6
   155e4:	lsl	r7, r0, #8
   155e8:	lsr	r0, r0, #24
   155ec:	orr	r6, r0, sl, lsl #8
   155f0:	ldr	r0, [sp, #252]	; 0xfc
   155f4:	orr	r7, r7, sl, lsr #24
   155f8:	str	r6, [sp, #168]	; 0xa8
   155fc:	str	r7, [sp, #164]	; 0xa4
   15600:	adds	r0, r2, r0
   15604:	ldr	r2, [sp, #248]	; 0xf8
   15608:	adc	r1, r1, r2
   1560c:	adds	r2, r0, r6
   15610:	ldr	r6, [sp, #16]
   15614:	str	r2, [sp, #60]	; 0x3c
   15618:	adc	r0, r1, r7
   1561c:	eor	r2, r2, ip
   15620:	mov	ip, lr
   15624:	str	r0, [sp, #68]	; 0x44
   15628:	lsr	r1, r2, #16
   1562c:	eor	r0, r0, r3
   15630:	lsl	r2, r2, #16
   15634:	orr	r4, r2, r0, lsr #16
   15638:	orr	r5, r1, r0, lsl #16
   1563c:	ldr	r0, [sp, #20]
   15640:	eor	r2, lr, r4
   15644:	eor	r3, r6, r5
   15648:	adds	r7, r2, r9
   1564c:	adc	lr, r3, r8
   15650:	eor	r1, lr, r0
   15654:	ldr	r0, [sp, #24]
   15658:	eor	r0, r7, r0
   1565c:	lsl	sl, r0, #8
   15660:	lsr	r0, r0, #24
   15664:	orr	sl, sl, r1, lsr #24
   15668:	orr	r0, r0, r1, lsl #8
   1566c:	ldr	r1, [sp, #216]	; 0xd8
   15670:	adds	r1, r6, r1
   15674:	ldr	r6, [sp, #212]	; 0xd4
   15678:	adc	ip, ip, r6
   1567c:	adds	r6, r1, r0
   15680:	adc	r1, ip, sl
   15684:	eor	r2, r6, r2
   15688:	str	r6, [sp, #92]	; 0x5c
   1568c:	eor	ip, r1, r3
   15690:	lsl	r3, r2, #16
   15694:	lsr	r2, r2, #16
   15698:	str	r1, [sp, #96]	; 0x60
   1569c:	orr	r1, r2, ip, lsl #16
   156a0:	orr	r3, r3, ip, lsr #16
   156a4:	ldr	ip, [sp, #236]	; 0xec
   156a8:	adds	r2, r1, r7
   156ac:	str	r1, [sp, #144]	; 0x90
   156b0:	str	r3, [sp, #140]	; 0x8c
   156b4:	adc	r1, r3, lr
   156b8:	str	r2, [sp, #132]	; 0x84
   156bc:	eor	r0, r2, r0
   156c0:	ldr	lr, [sp, #232]	; 0xe8
   156c4:	str	r1, [sp, #136]	; 0x88
   156c8:	eor	r1, r1, sl
   156cc:	lsl	r2, r1, #1
   156d0:	orr	r2, r2, r0, lsr #31
   156d4:	lsl	r0, r0, #1
   156d8:	orr	r0, r0, r1, lsr #31
   156dc:	ldr	r1, [sp, #32]
   156e0:	str	r2, [sp, #188]	; 0xbc
   156e4:	str	r0, [sp, #184]	; 0xb8
   156e8:	ldr	r0, [sp, #28]
   156ec:	eor	r1, r9, r1
   156f0:	eor	r0, r8, r0
   156f4:	lsl	r2, r0, #1
   156f8:	orr	r8, r2, r1, lsr #31
   156fc:	lsl	r1, r1, #1
   15700:	orr	r6, r1, r0, lsr #31
   15704:	ldr	r0, [sp, #124]	; 0x7c
   15708:	ldr	r1, [sp, #128]	; 0x80
   1570c:	adds	r0, r0, ip
   15710:	adc	r1, r1, lr
   15714:	adds	r3, r0, r6
   15718:	ldr	r0, [sp, #44]	; 0x2c
   1571c:	adc	r9, r1, r8
   15720:	ldr	r1, [sp, #52]	; 0x34
   15724:	adds	r7, r5, r0
   15728:	ldr	r0, [sp, #56]	; 0x38
   1572c:	str	r7, [sp, #24]
   15730:	adc	r2, r4, r0
   15734:	ldr	r0, [sp, #116]	; 0x74
   15738:	ldr	r4, [sp, #108]	; 0x6c
   1573c:	str	r2, [sp, #20]
   15740:	eor	r1, r1, r0
   15744:	ldr	r0, [sp, #120]	; 0x78
   15748:	eor	r5, r4, r0
   1574c:	lsr	r0, r5, #16
   15750:	lsl	r5, r5, #16
   15754:	orr	r0, r0, r1, lsl #16
   15758:	orr	r1, r5, r1, lsr #16
   1575c:	eor	r5, r1, r9
   15760:	eor	r4, r0, r3
   15764:	str	r0, [sp, #28]
   15768:	str	r1, [sp, #32]
   1576c:	ldr	r1, [sp, #184]	; 0xb8
   15770:	adds	sl, r5, r7
   15774:	adc	r0, r4, r2
   15778:	eor	r6, sl, r6
   1577c:	str	r0, [sp, #128]	; 0x80
   15780:	eor	r7, r0, r8
   15784:	lsl	r0, r6, #8
   15788:	lsr	r6, r6, #24
   1578c:	orr	r8, r0, r7, lsr #24
   15790:	ldr	r0, [sp, #208]	; 0xd0
   15794:	orr	r6, r6, r7, lsl #8
   15798:	adds	r3, r3, r0
   1579c:	ldr	r0, [sp, #220]	; 0xdc
   157a0:	adc	r2, r9, r0
   157a4:	adds	r3, r3, r6
   157a8:	ldr	r9, [sp, #48]	; 0x30
   157ac:	adc	r2, r2, r8
   157b0:	adds	r7, r3, ip
   157b4:	adc	r0, r2, lr
   157b8:	adds	r1, r7, r1
   157bc:	ldr	r7, [sp, #188]	; 0xbc
   157c0:	str	r1, [sp, #44]	; 0x2c
   157c4:	adc	r0, r0, r7
   157c8:	ldr	r7, [sp, #40]	; 0x28
   157cc:	str	r0, [sp, #108]	; 0x6c
   157d0:	eor	r0, r2, r4
   157d4:	eor	r2, r3, r5
   157d8:	lsl	r3, r2, #16
   157dc:	lsr	r2, r2, #16
   157e0:	orr	r1, r3, r0, lsr #16
   157e4:	orr	r0, r2, r0, lsl #16
   157e8:	adds	r2, r0, sl
   157ec:	str	r0, [sp, #56]	; 0x38
   157f0:	ldr	r0, [sp, #128]	; 0x80
   157f4:	str	r1, [sp, #52]	; 0x34
   157f8:	str	r2, [sp, #124]	; 0x7c
   157fc:	adc	r0, r1, r0
   15800:	eor	r1, r2, r6
   15804:	str	r0, [sp, #128]	; 0x80
   15808:	eor	r0, r0, r8
   1580c:	lsl	r2, r0, #1
   15810:	orr	r2, r2, r1, lsr #31
   15814:	lsl	r1, r1, #1
   15818:	orr	r0, r1, r0, lsr #31
   1581c:	ldr	r1, [sp, #20]
   15820:	str	r2, [sp, #120]	; 0x78
   15824:	ldr	r2, [sp, #24]
   15828:	str	r0, [sp, #116]	; 0x74
   1582c:	ldr	r0, [sp, #164]	; 0xa4
   15830:	eor	r0, r1, r0
   15834:	ldr	r1, [sp, #168]	; 0xa8
   15838:	eor	r1, r2, r1
   1583c:	lsl	r2, r0, #1
   15840:	orr	r3, r2, r1, lsr #31
   15844:	lsl	r1, r1, #1
   15848:	ldr	r2, [sp, #36]	; 0x24
   1584c:	orr	r0, r1, r0, lsr #31
   15850:	ldr	r1, [sp, #160]	; 0xa0
   15854:	adds	r1, r2, r1
   15858:	ldr	r2, [sp, #156]	; 0x9c
   1585c:	adc	r2, r7, r2
   15860:	adds	r1, r1, r0
   15864:	ldr	r7, [sp, #28]
   15868:	adc	r4, r2, r3
   1586c:	ldr	r2, [sp, #84]	; 0x54
   15870:	str	r2, [sp, #380]	; 0x17c
   15874:	eor	lr, r4, r2
   15878:	ldr	r2, [sp, #64]	; 0x40
   1587c:	str	r7, [sp, #368]	; 0x170
   15880:	adds	r6, r7, r2
   15884:	ldr	r7, [sp, #32]
   15888:	ldr	r2, [sp, #72]	; 0x48
   1588c:	adc	r5, r7, r2
   15890:	ldr	r2, [sp, #88]	; 0x58
   15894:	str	r7, [sp, #372]	; 0x174
   15898:	adds	ip, lr, r6
   1589c:	eor	r0, ip, r0
   158a0:	str	r2, [sp, #376]	; 0x178
   158a4:	eor	r2, r1, r2
   158a8:	str	r5, [sp, #340]	; 0x154
   158ac:	str	r6, [sp, #336]	; 0x150
   158b0:	adc	r7, r2, r5
   158b4:	str	r7, [sp, #88]	; 0x58
   158b8:	eor	r3, r7, r3
   158bc:	lsl	r7, r0, #8
   158c0:	lsr	r0, r0, #24
   158c4:	orr	sl, r7, r3, lsr #24
   158c8:	orr	r3, r0, r3, lsl #8
   158cc:	ldr	r0, [sp, #76]	; 0x4c
   158d0:	adds	r1, r3, r1
   158d4:	adc	r7, sl, r4
   158d8:	eor	r4, r5, r0
   158dc:	ldr	r0, [sp, #80]	; 0x50
   158e0:	eor	r5, r6, r0
   158e4:	lsl	r0, r4, #1
   158e8:	orr	r8, r0, r5, lsr #31
   158ec:	ldr	r0, [sp, #176]	; 0xb0
   158f0:	lsl	r5, r5, #1
   158f4:	orr	r4, r5, r4, lsr #31
   158f8:	ldr	r5, [fp, #-156]	; 0xffffff64
   158fc:	str	r8, [sp, #308]	; 0x134
   15900:	str	r4, [sp, #304]	; 0x130
   15904:	str	r0, [sp, #344]	; 0x158
   15908:	ldr	r0, [sp, #180]	; 0xb4
   1590c:	str	r5, [sp, #164]	; 0xa4
   15910:	str	r0, [sp, #348]	; 0x15c
   15914:	ldr	r0, [sp, #112]	; 0x70
   15918:	str	r9, [sp, #388]	; 0x184
   1591c:	str	r0, [sp, #384]	; 0x180
   15920:	ldr	r0, [sp, #140]	; 0x8c
   15924:	str	r0, [sp, #396]	; 0x18c
   15928:	ldr	r0, [sp, #144]	; 0x90
   1592c:	str	r0, [sp, #392]	; 0x188
   15930:	ldr	r0, [sp, #132]	; 0x84
   15934:	str	r0, [sp, #352]	; 0x160
   15938:	ldr	r0, [sp, #136]	; 0x88
   1593c:	str	r0, [sp, #356]	; 0x164
   15940:	ldr	r0, [sp, #184]	; 0xb8
   15944:	str	r0, [sp, #312]	; 0x138
   15948:	ldr	r0, [sp, #188]	; 0xbc
   1594c:	str	r0, [sp, #316]	; 0x13c
   15950:	ldr	r0, [sp, #124]	; 0x7c
   15954:	str	r0, [sp, #360]	; 0x168
   15958:	ldr	r0, [sp, #128]	; 0x80
   1595c:	str	r0, [sp, #364]	; 0x16c
   15960:	ldr	r0, [sp, #116]	; 0x74
   15964:	str	r0, [sp, #320]	; 0x140
   15968:	ldr	r0, [sp, #120]	; 0x78
   1596c:	str	r0, [sp, #324]	; 0x144
   15970:	ldr	r0, [fp, #-160]	; 0xffffff60
   15974:	str	r0, [sp, #168]	; 0xa8
   15978:	adds	r0, r1, r0
   1597c:	adc	r1, r7, r5
   15980:	eor	r6, r0, lr
   15984:	str	r0, [sp, #36]	; 0x24
   15988:	ldr	r0, [sp, #108]	; 0x6c
   1598c:	lsl	r5, r6, #16
   15990:	eor	r2, r1, r2
   15994:	lsr	r6, r6, #16
   15998:	str	r1, [sp, #40]	; 0x28
   1599c:	orr	r7, r5, r2, lsr #16
   159a0:	orr	lr, r6, r2, lsl #16
   159a4:	ldr	r2, [sp, #68]	; 0x44
   159a8:	eor	r0, r7, r0
   159ac:	adds	r1, lr, ip
   159b0:	str	r0, [sp, #84]	; 0x54
   159b4:	ldr	r0, [sp, #88]	; 0x58
   159b8:	str	r1, [sp, #76]	; 0x4c
   159bc:	eor	r3, r1, r3
   159c0:	adc	r0, r7, r0
   159c4:	eor	r7, r0, sl
   159c8:	str	r0, [sp, #80]	; 0x50
   159cc:	ldr	r0, [sp, #260]	; 0x104
   159d0:	lsl	r1, r7, #1
   159d4:	orr	r5, r1, r3, lsr #31
   159d8:	lsl	r1, r3, #1
   159dc:	orr	ip, r1, r7, lsr #31
   159e0:	ldr	r1, [sp, #60]	; 0x3c
   159e4:	str	r5, [sp, #32]
   159e8:	str	r5, [sp, #332]	; 0x14c
   159ec:	ldr	r5, [sp, #84]	; 0x54
   159f0:	str	ip, [sp, #28]
   159f4:	str	ip, [sp, #328]	; 0x148
   159f8:	adds	r1, r1, r0
   159fc:	ldr	r0, [sp, #256]	; 0x100
   15a00:	adc	r3, r2, r0
   15a04:	adds	sl, r1, r4
   15a08:	ldr	r1, [sp, #176]	; 0xb0
   15a0c:	ldr	r0, [sp, #112]	; 0x70
   15a10:	adc	r6, r3, r8
   15a14:	eor	r9, r6, r9
   15a18:	adds	r3, r9, r1
   15a1c:	ldr	r1, [sp, #180]	; 0xb4
   15a20:	eor	r0, sl, r0
   15a24:	eor	r4, r3, r4
   15a28:	lsl	r7, r4, #8
   15a2c:	lsr	r4, r4, #24
   15a30:	adc	r2, r0, r1
   15a34:	eor	r1, r2, r8
   15a38:	orr	r8, r4, r1, lsl #8
   15a3c:	orr	r7, r7, r1, lsr #24
   15a40:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15a44:	adds	r4, r8, sl
   15a48:	str	r7, [sp, #64]	; 0x40
   15a4c:	adc	r6, r7, r6
   15a50:	ldr	r7, [fp, #-96]	; 0xffffffa0
   15a54:	str	r1, [sp, #176]	; 0xb0
   15a58:	str	r7, [sp, #180]	; 0xb4
   15a5c:	adds	r7, r4, r7
   15a60:	adc	r1, r6, r1
   15a64:	eor	r6, r7, r9
   15a68:	str	r7, [sp, #24]
   15a6c:	str	r1, [sp, #48]	; 0x30
   15a70:	eor	r1, r1, r0
   15a74:	lsl	r0, r6, #16
   15a78:	lsr	r6, r6, #16
   15a7c:	orr	r9, r6, r1, lsl #16
   15a80:	orr	r0, r0, r1, lsr #16
   15a84:	ldr	r1, [sp, #244]	; 0xf4
   15a88:	adds	r4, r9, r3
   15a8c:	str	r0, [sp, #60]	; 0x3c
   15a90:	adc	ip, r0, r2
   15a94:	ldr	r2, [sp, #44]	; 0x2c
   15a98:	ldr	r0, [sp, #188]	; 0xbc
   15a9c:	adds	r7, r4, r5
   15aa0:	eor	r3, lr, r2
   15aa4:	adc	lr, ip, r3
   15aa8:	eor	r6, lr, r0
   15aac:	ldr	r0, [sp, #184]	; 0xb8
   15ab0:	eor	r0, r7, r0
   15ab4:	lsl	sl, r0, #8
   15ab8:	lsr	r0, r0, #24
   15abc:	orr	sl, sl, r6, lsr #24
   15ac0:	orr	r0, r0, r6, lsl #8
   15ac4:	adds	r6, r2, r1
   15ac8:	ldr	r1, [sp, #240]	; 0xf0
   15acc:	ldr	r2, [sp, #108]	; 0x6c
   15ad0:	adc	r1, r2, r1
   15ad4:	adds	r2, r6, r0
   15ad8:	adc	r1, r1, sl
   15adc:	str	r2, [sp, #68]	; 0x44
   15ae0:	str	r1, [sp, #72]	; 0x48
   15ae4:	eor	r1, r1, r3
   15ae8:	eor	r3, r2, r5
   15aec:	lsl	r6, r3, #16
   15af0:	lsr	r3, r3, #16
   15af4:	orr	r5, r6, r1, lsr #16
   15af8:	orr	r1, r3, r1, lsl #16
   15afc:	adds	r3, r1, r7
   15b00:	str	r1, [sp, #88]	; 0x58
   15b04:	str	r5, [sp, #84]	; 0x54
   15b08:	ldr	r7, [sp, #96]	; 0x60
   15b0c:	adc	r1, r5, lr
   15b10:	str	r3, [sp, #108]	; 0x6c
   15b14:	eor	r0, r3, r0
   15b18:	str	r1, [sp, #112]	; 0x70
   15b1c:	eor	r1, r1, sl
   15b20:	lsl	r3, r1, #1
   15b24:	orr	lr, r3, r0, lsr #31
   15b28:	lsl	r0, r0, #1
   15b2c:	ldr	r3, [sp, #92]	; 0x5c
   15b30:	orr	r5, r0, r1, lsr #31
   15b34:	ldr	r0, [sp, #64]	; 0x40
   15b38:	eor	r1, r4, r8
   15b3c:	ldr	r4, [sp, #76]	; 0x4c
   15b40:	str	lr, [sp, #184]	; 0xb8
   15b44:	str	r5, [sp, #188]	; 0xbc
   15b48:	eor	r0, ip, r0
   15b4c:	lsl	r2, r0, #1
   15b50:	orr	r2, r2, r1, lsr #31
   15b54:	lsl	r1, r1, #1
   15b58:	orr	r0, r1, r0, lsr #31
   15b5c:	ldr	r1, [sp, #152]	; 0x98
   15b60:	adds	r1, r3, r1
   15b64:	ldr	r3, [sp, #148]	; 0x94
   15b68:	adc	r3, r7, r3
   15b6c:	ldr	r7, [sp, #52]	; 0x34
   15b70:	adds	r1, r1, r0
   15b74:	adc	r3, r3, r2
   15b78:	eor	r6, r3, r7
   15b7c:	ldr	r7, [sp, #56]	; 0x38
   15b80:	str	r6, [sp, #152]	; 0x98
   15b84:	adds	r6, r6, r4
   15b88:	ldr	r4, [sp, #80]	; 0x50
   15b8c:	eor	r0, r6, r0
   15b90:	str	r6, [sp, #76]	; 0x4c
   15b94:	ldr	r6, [sp, #120]	; 0x78
   15b98:	eor	r7, r1, r7
   15b9c:	str	r7, [sp, #64]	; 0x40
   15ba0:	adc	r7, r7, r4
   15ba4:	str	r7, [sp, #80]	; 0x50
   15ba8:	eor	r2, r7, r2
   15bac:	lsl	r7, r0, #8
   15bb0:	lsr	r0, r0, #24
   15bb4:	orr	r7, r7, r2, lsr #24
   15bb8:	orr	r2, r0, r2, lsl #8
   15bbc:	ldr	r0, [sp, #168]	; 0xa8
   15bc0:	str	r2, [sp, #96]	; 0x60
   15bc4:	str	r7, [sp, #92]	; 0x5c
   15bc8:	adds	r0, r1, r0
   15bcc:	ldr	r1, [sp, #164]	; 0xa4
   15bd0:	adc	r1, r3, r1
   15bd4:	adds	r2, r0, r2
   15bd8:	ldr	r0, [sp, #252]	; 0xfc
   15bdc:	adc	r3, r1, r7
   15be0:	ldr	r1, [sp, #248]	; 0xf8
   15be4:	str	r2, [sp, #56]	; 0x38
   15be8:	ldr	r7, [sp, #132]	; 0x84
   15bec:	str	r3, [sp, #52]	; 0x34
   15bf0:	adds	r0, r5, r0
   15bf4:	ldr	r5, [sp, #116]	; 0x74
   15bf8:	adc	r1, lr, r1
   15bfc:	adds	lr, r0, r2
   15c00:	ldr	r0, [sp, #204]	; 0xcc
   15c04:	ldr	r2, [sp, #36]	; 0x24
   15c08:	adc	ip, r1, r3
   15c0c:	ldr	r1, [sp, #200]	; 0xc8
   15c10:	adds	r0, r5, r0
   15c14:	adc	r1, r6, r1
   15c18:	adds	r0, r0, r2
   15c1c:	ldr	r2, [sp, #40]	; 0x28
   15c20:	eor	r3, r9, r0
   15c24:	adc	r1, r1, r2
   15c28:	ldr	r2, [sp, #60]	; 0x3c
   15c2c:	eor	r2, r2, r1
   15c30:	adds	r9, r2, r7
   15c34:	ldr	r7, [sp, #136]	; 0x88
   15c38:	adc	r8, r3, r7
   15c3c:	eor	r7, r9, r5
   15c40:	lsl	r5, r7, #8
   15c44:	eor	r4, r8, r6
   15c48:	lsr	r7, r7, #24
   15c4c:	orr	r6, r5, r4, lsr #24
   15c50:	orr	r5, r7, r4, lsl #8
   15c54:	ldr	r7, [sp, #160]	; 0xa0
   15c58:	str	r5, [sp, #44]	; 0x2c
   15c5c:	str	r6, [sp, #40]	; 0x28
   15c60:	adds	r0, r0, r7
   15c64:	ldr	r7, [sp, #156]	; 0x9c
   15c68:	adc	r1, r1, r7
   15c6c:	adds	r7, r0, r5
   15c70:	ldr	r5, [sp, #28]
   15c74:	adc	r0, r1, r6
   15c78:	eor	r1, r7, r2
   15c7c:	ldr	r6, [sp, #32]
   15c80:	str	r7, [sp, #60]	; 0x3c
   15c84:	str	r0, [sp, #136]	; 0x88
   15c88:	lsl	r2, r1, #16
   15c8c:	eor	r0, r0, r3
   15c90:	lsr	r1, r1, #16
   15c94:	orr	r2, r2, r0, lsr #16
   15c98:	orr	r0, r1, r0, lsl #16
   15c9c:	ldr	r1, [sp, #220]	; 0xdc
   15ca0:	adds	sl, r0, r9
   15ca4:	str	r0, [sp, #120]	; 0x78
   15ca8:	ldr	r0, [sp, #208]	; 0xd0
   15cac:	str	r2, [sp, #116]	; 0x74
   15cb0:	adc	r9, r2, r8
   15cb4:	adds	r0, r5, r0
   15cb8:	adc	r3, r6, r1
   15cbc:	ldr	r1, [sp, #24]
   15cc0:	adds	r1, r0, r1
   15cc4:	ldr	r0, [sp, #48]	; 0x30
   15cc8:	adc	r7, r3, r0
   15ccc:	ldr	r0, [sp, #140]	; 0x8c
   15cd0:	eor	r3, r7, r0
   15cd4:	ldr	r0, [sp, #144]	; 0x90
   15cd8:	eor	r2, r1, r0
   15cdc:	ldr	r0, [sp, #124]	; 0x7c
   15ce0:	adds	r4, r3, r0
   15ce4:	ldr	r0, [sp, #128]	; 0x80
   15ce8:	str	r4, [sp, #24]
   15cec:	adc	r0, r2, r0
   15cf0:	str	r0, [sp, #36]	; 0x24
   15cf4:	eor	r8, r0, r6
   15cf8:	eor	r0, r4, r5
   15cfc:	lsl	r5, r0, #8
   15d00:	lsr	r0, r0, #24
   15d04:	orr	r6, r5, r8, lsr #24
   15d08:	orr	r5, r0, r8, lsl #8
   15d0c:	ldr	r0, [sp, #260]	; 0x104
   15d10:	str	r6, [sp, #48]	; 0x30
   15d14:	str	r5, [sp, #124]	; 0x7c
   15d18:	adds	r0, r1, r0
   15d1c:	ldr	r1, [sp, #256]	; 0x100
   15d20:	adc	r1, r7, r1
   15d24:	adds	r7, r0, r5
   15d28:	adc	r0, r1, r6
   15d2c:	eor	r1, r7, r3
   15d30:	str	r7, [sp, #140]	; 0x8c
   15d34:	mov	r6, lr
   15d38:	str	r0, [sp, #144]	; 0x90
   15d3c:	eor	r0, r0, r2
   15d40:	lsr	r2, r1, #16
   15d44:	lsl	r1, r1, #16
   15d48:	orr	r4, r1, r0, lsr #16
   15d4c:	orr	r7, r2, r0, lsl #16
   15d50:	ldr	r0, [sp, #184]	; 0xb8
   15d54:	eor	r3, ip, r4
   15d58:	eor	r2, lr, r7
   15d5c:	adds	lr, r3, sl
   15d60:	adc	r5, r2, r9
   15d64:	eor	r1, r5, r0
   15d68:	ldr	r0, [sp, #188]	; 0xbc
   15d6c:	eor	r0, lr, r0
   15d70:	lsl	r8, r0, #8
   15d74:	lsr	r0, r0, #24
   15d78:	orr	r8, r8, r1, lsr #24
   15d7c:	orr	r0, r0, r1, lsl #8
   15d80:	ldr	r1, [sp, #228]	; 0xe4
   15d84:	adds	r1, r6, r1
   15d88:	ldr	r6, [sp, #224]	; 0xe0
   15d8c:	adc	ip, ip, r6
   15d90:	adds	r6, r1, r0
   15d94:	adc	r1, ip, r8
   15d98:	str	r6, [sp, #128]	; 0x80
   15d9c:	eor	ip, r1, r2
   15da0:	eor	r2, r6, r3
   15da4:	str	r1, [sp, #132]	; 0x84
   15da8:	lsl	r3, r2, #16
   15dac:	lsr	r2, r2, #16
   15db0:	orr	r1, r2, ip, lsl #16
   15db4:	orr	r3, r3, ip, lsr #16
   15db8:	adds	r2, r1, lr
   15dbc:	str	r1, [sp, #188]	; 0xbc
   15dc0:	str	r3, [sp, #184]	; 0xb8
   15dc4:	adc	r1, r3, r5
   15dc8:	str	r2, [sp, #156]	; 0x9c
   15dcc:	eor	r0, r2, r0
   15dd0:	ldr	r5, [sp, #72]	; 0x48
   15dd4:	str	r1, [sp, #160]	; 0xa0
   15dd8:	eor	r1, r1, r8
   15ddc:	lsl	r2, r1, #1
   15de0:	orr	lr, r2, r0, lsr #31
   15de4:	lsl	r0, r0, #1
   15de8:	orr	ip, r0, r1, lsr #31
   15dec:	ldr	r0, [sp, #40]	; 0x28
   15df0:	ldr	r1, [sp, #44]	; 0x2c
   15df4:	str	lr, [sp, #28]
   15df8:	str	ip, [sp, #148]	; 0x94
   15dfc:	eor	r0, r9, r0
   15e00:	eor	r1, sl, r1
   15e04:	lsl	r2, r0, #1
   15e08:	orr	r3, r2, r1, lsr #31
   15e0c:	lsl	r1, r1, #1
   15e10:	ldr	r2, [sp, #68]	; 0x44
   15e14:	orr	r1, r1, r0, lsr #31
   15e18:	ldr	r0, [sp, #196]	; 0xc4
   15e1c:	adds	r0, r2, r0
   15e20:	ldr	r2, [sp, #192]	; 0xc0
   15e24:	adc	r2, r5, r2
   15e28:	adds	r5, r0, r1
   15e2c:	ldr	r0, [sp, #24]
   15e30:	adc	r8, r2, r3
   15e34:	adds	r9, r7, r0
   15e38:	ldr	r0, [sp, #36]	; 0x24
   15e3c:	adc	r2, r4, r0
   15e40:	ldr	r0, [sp, #64]	; 0x40
   15e44:	ldr	r4, [sp, #52]	; 0x34
   15e48:	eor	r7, r4, r0
   15e4c:	ldr	r0, [sp, #152]	; 0x98
   15e50:	ldr	r4, [sp, #56]	; 0x38
   15e54:	eor	r6, r4, r0
   15e58:	lsr	r0, r6, #16
   15e5c:	lsl	r6, r6, #16
   15e60:	orr	sl, r6, r7, lsr #16
   15e64:	orr	r0, r0, r7, lsl #16
   15e68:	eor	r4, sl, r8
   15e6c:	eor	r6, r0, r5
   15e70:	str	r4, [sp, #44]	; 0x2c
   15e74:	adds	r4, r4, r9
   15e78:	str	r6, [sp, #40]	; 0x28
   15e7c:	adc	r6, r6, r2
   15e80:	eor	r1, r4, r1
   15e84:	str	r4, [sp, #64]	; 0x40
   15e88:	lsl	r4, r1, #8
   15e8c:	eor	r3, r6, r3
   15e90:	lsr	r1, r1, #24
   15e94:	str	r6, [sp, #72]	; 0x48
   15e98:	orr	r6, r1, r3, lsl #8
   15e9c:	ldr	r1, [sp, #268]	; 0x10c
   15ea0:	orr	r4, r4, r3, lsr #24
   15ea4:	ldr	r3, [sp, #264]	; 0x108
   15ea8:	str	r4, [sp, #16]
   15eac:	str	r6, [sp, #36]	; 0x24
   15eb0:	adds	r1, r5, r1
   15eb4:	adc	r5, r8, r3
   15eb8:	adds	r3, r1, r6
   15ebc:	ldr	r1, [sp, #216]	; 0xd8
   15ec0:	adc	r4, r5, r4
   15ec4:	str	r3, [sp, #32]
   15ec8:	str	r4, [sp, #12]
   15ecc:	adds	r5, r3, r1
   15ed0:	ldr	r3, [sp, #212]	; 0xd4
   15ed4:	adc	r8, r4, r3
   15ed8:	adds	r7, r5, ip
   15edc:	ldr	r4, [sp, #180]	; 0xb4
   15ee0:	str	r7, [sp, #56]	; 0x38
   15ee4:	adc	r7, r8, lr
   15ee8:	str	r7, [sp, #152]	; 0x98
   15eec:	ldr	r7, [sp, #48]	; 0x30
   15ef0:	eor	r2, r2, r7
   15ef4:	ldr	r7, [sp, #124]	; 0x7c
   15ef8:	eor	r5, r9, r7
   15efc:	lsl	r7, r2, #1
   15f00:	orr	r8, r7, r5, lsr #31
   15f04:	ldr	r7, [sp, #60]	; 0x3c
   15f08:	lsl	r5, r5, #1
   15f0c:	orr	r2, r5, r2, lsr #31
   15f10:	adds	r5, r7, r1
   15f14:	ldr	r1, [sp, #136]	; 0x88
   15f18:	adc	r7, r1, r3
   15f1c:	ldr	r1, [sp, #84]	; 0x54
   15f20:	adds	r5, r5, r2
   15f24:	adc	r9, r7, r8
   15f28:	str	r1, [sp, #380]	; 0x17c
   15f2c:	eor	lr, r9, r1
   15f30:	ldr	r1, [sp, #76]	; 0x4c
   15f34:	str	r0, [sp, #368]	; 0x170
   15f38:	str	sl, [sp, #372]	; 0x174
   15f3c:	adds	r7, r0, r1
   15f40:	ldr	r0, [sp, #80]	; 0x50
   15f44:	adc	ip, sl, r0
   15f48:	ldr	r0, [sp, #88]	; 0x58
   15f4c:	str	r0, [sp, #376]	; 0x178
   15f50:	eor	sl, r5, r0
   15f54:	adds	r0, lr, r7
   15f58:	str	r7, [sp, #336]	; 0x150
   15f5c:	str	ip, [sp, #340]	; 0x154
   15f60:	adc	r1, sl, ip
   15f64:	eor	r2, r0, r2
   15f68:	adds	r5, r5, r4
   15f6c:	ldr	r4, [sp, #176]	; 0xb0
   15f70:	lsl	r6, r2, #8
   15f74:	eor	r8, r1, r8
   15f78:	lsr	r2, r2, #24
   15f7c:	orr	r2, r2, r8, lsl #8
   15f80:	orr	r6, r6, r8, lsr #24
   15f84:	adc	r8, r9, r4
   15f88:	adds	r4, r5, r2
   15f8c:	ldr	r9, [sp, #28]
   15f90:	adc	r3, r8, r6
   15f94:	str	r4, [sp, #84]	; 0x54
   15f98:	ldr	r8, [sp, #112]	; 0x70
   15f9c:	str	r3, [sp, #88]	; 0x58
   15fa0:	eor	r5, r3, sl
   15fa4:	eor	r3, r4, lr
   15fa8:	lsl	r4, r3, #16
   15fac:	lsr	r3, r3, #16
   15fb0:	orr	r3, r3, r5, lsl #16
   15fb4:	orr	r4, r4, r5, lsr #16
   15fb8:	str	r3, [sp, #20]
   15fbc:	adds	r3, r3, r0
   15fc0:	ldr	r0, [sp, #152]	; 0x98
   15fc4:	str	r3, [sp, #48]	; 0x30
   15fc8:	eor	r0, r0, r4
   15fcc:	str	r0, [sp, #24]
   15fd0:	adc	r0, r4, r1
   15fd4:	eor	r1, r3, r2
   15fd8:	ldr	r4, [sp, #108]	; 0x6c
   15fdc:	str	r0, [sp, #52]	; 0x34
   15fe0:	eor	r0, r0, r6
   15fe4:	lsl	r2, r0, #1
   15fe8:	orr	r2, r2, r1, lsr #31
   15fec:	lsl	r1, r1, #1
   15ff0:	orr	sl, r1, r0, lsr #31
   15ff4:	ldr	r0, [sp, #40]	; 0x28
   15ff8:	ldr	r1, [sp, #12]
   15ffc:	str	r2, [sp, #136]	; 0x88
   16000:	ldr	r2, [sp, #32]
   16004:	str	sl, [sp, #68]	; 0x44
   16008:	eor	r0, r1, r0
   1600c:	ldr	r1, [sp, #44]	; 0x2c
   16010:	eor	r1, r2, r1
   16014:	lsl	r2, r1, #16
   16018:	lsr	r1, r1, #16
   1601c:	orr	r3, r2, r0, lsr #16
   16020:	orr	r0, r1, r0, lsl #16
   16024:	ldr	r1, [sp, #64]	; 0x40
   16028:	ldr	r2, [sp, #120]	; 0x78
   1602c:	str	r0, [sp, #44]	; 0x2c
   16030:	str	r3, [sp, #32]
   16034:	adds	r6, r0, r1
   16038:	ldr	r0, [sp, #72]	; 0x48
   1603c:	str	r6, [sp, #76]	; 0x4c
   16040:	adc	r1, r3, r0
   16044:	ldr	r0, [sp, #16]
   16048:	mov	lr, r1
   1604c:	str	r1, [sp, #80]	; 0x50
   16050:	eor	r0, r1, r0
   16054:	ldr	r1, [sp, #36]	; 0x24
   16058:	lsl	r3, r0, #1
   1605c:	eor	r1, r6, r1
   16060:	orr	r5, r3, r1, lsr #31
   16064:	lsl	r1, r1, #1
   16068:	orr	r3, r1, r0, lsr #31
   1606c:	ldr	r0, [sp, #92]	; 0x5c
   16070:	str	r5, [sp, #40]	; 0x28
   16074:	str	r3, [sp, #36]	; 0x24
   16078:	eor	r1, ip, r0
   1607c:	ldr	r0, [sp, #96]	; 0x60
   16080:	eor	r7, r7, r0
   16084:	lsl	r0, r1, #1
   16088:	orr	r0, r0, r7, lsr #31
   1608c:	lsl	r7, r7, #1
   16090:	orr	ip, r7, r1, lsr #31
   16094:	ldr	r1, [sp, #140]	; 0x8c
   16098:	ldr	r7, [sp, #116]	; 0x74
   1609c:	str	r0, [sp, #308]	; 0x134
   160a0:	str	ip, [sp, #304]	; 0x130
   160a4:	str	r4, [sp, #344]	; 0x158
   160a8:	str	r8, [sp, #348]	; 0x15c
   160ac:	str	r2, [sp, #384]	; 0x180
   160b0:	adds	r1, ip, r1
   160b4:	str	r7, [sp, #388]	; 0x184
   160b8:	str	r1, [sp, #140]	; 0x8c
   160bc:	ldr	r1, [sp, #144]	; 0x90
   160c0:	adc	r1, r0, r1
   160c4:	str	r1, [sp, #144]	; 0x90
   160c8:	ldr	r1, [sp, #184]	; 0xb8
   160cc:	str	r1, [sp, #396]	; 0x18c
   160d0:	ldr	r1, [sp, #188]	; 0xbc
   160d4:	str	r1, [sp, #392]	; 0x188
   160d8:	ldr	r1, [sp, #156]	; 0x9c
   160dc:	str	r1, [sp, #352]	; 0x160
   160e0:	ldr	r1, [sp, #160]	; 0xa0
   160e4:	str	r1, [sp, #356]	; 0x164
   160e8:	ldr	r1, [sp, #148]	; 0x94
   160ec:	str	r9, [sp, #316]	; 0x13c
   160f0:	str	r1, [sp, #312]	; 0x138
   160f4:	add	r1, sp, #320	; 0x140
   160f8:	str	r6, [sp, #360]	; 0x168
   160fc:	str	lr, [sp, #364]	; 0x16c
   16100:	ldr	r6, [fp, #-132]	; 0xffffff7c
   16104:	ldr	lr, [fp, #-52]	; 0xffffffcc
   16108:	stm	r1, {r3, r5, sl}
   1610c:	ldr	r1, [sp, #136]	; 0x88
   16110:	ldr	r5, [sp, #140]	; 0x8c
   16114:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16118:	str	r6, [sp, #72]	; 0x48
   1611c:	str	lr, [sp, #96]	; 0x60
   16120:	str	r1, [sp, #332]	; 0x14c
   16124:	ldr	r1, [fp, #-136]	; 0xffffff78
   16128:	str	r3, [sp, #124]	; 0x7c
   1612c:	adds	r5, r5, r1
   16130:	str	r1, [sp, #92]	; 0x5c
   16134:	ldr	r1, [sp, #144]	; 0x90
   16138:	eor	r2, r5, r2
   1613c:	adc	r6, r1, r6
   16140:	eor	r7, r6, r7
   16144:	adds	sl, r7, r4
   16148:	adc	r8, r2, r8
   1614c:	eor	r1, r8, r0
   16150:	eor	r0, sl, ip
   16154:	lsl	r4, r0, #8
   16158:	lsr	r0, r0, #24
   1615c:	orr	r4, r4, r1, lsr #24
   16160:	orr	r1, r0, r1, lsl #8
   16164:	adds	r0, r3, r5
   16168:	adc	r3, lr, r6
   1616c:	adds	r0, r0, r1
   16170:	str	r1, [sp, #112]	; 0x70
   16174:	mov	r6, r4
   16178:	adc	r1, r3, r4
   1617c:	str	r0, [sp, #60]	; 0x3c
   16180:	str	r1, [sp, #64]	; 0x40
   16184:	eor	r1, r1, r2
   16188:	eor	r2, r0, r7
   1618c:	ldr	r7, [sp, #56]	; 0x38
   16190:	lsl	r4, r2, #16
   16194:	lsr	r2, r2, #16
   16198:	orr	r0, r4, r1, lsr #16
   1619c:	orr	r1, r2, r1, lsl #16
   161a0:	ldr	r2, [sp, #24]
   161a4:	adds	lr, r1, sl
   161a8:	str	r0, [sp, #16]
   161ac:	str	r1, [sp, #12]
   161b0:	adc	ip, r0, r8
   161b4:	ldr	r0, [sp, #20]
   161b8:	adds	r5, lr, r2
   161bc:	eor	r3, r7, r0
   161c0:	ldr	r0, [sp, #148]	; 0x94
   161c4:	adc	sl, ip, r3
   161c8:	eor	r1, sl, r9
   161cc:	eor	r4, r5, r0
   161d0:	ldr	r0, [sp, #208]	; 0xd0
   161d4:	lsl	r8, r4, #8
   161d8:	lsr	r4, r4, #24
   161dc:	orr	r8, r8, r1, lsr #24
   161e0:	orr	r1, r4, r1, lsl #8
   161e4:	adds	r4, r7, r0
   161e8:	ldr	r0, [sp, #220]	; 0xdc
   161ec:	ldr	r7, [sp, #152]	; 0x98
   161f0:	adc	r0, r7, r0
   161f4:	adds	r4, r4, r1
   161f8:	ldr	r7, [sp, #132]	; 0x84
   161fc:	adc	r0, r0, r8
   16200:	str	r4, [sp, #116]	; 0x74
   16204:	str	r0, [sp, #120]	; 0x78
   16208:	eor	r0, r0, r3
   1620c:	eor	r3, r4, r2
   16210:	lsl	r4, r3, #16
   16214:	lsr	r3, r3, #16
   16218:	orr	r4, r4, r0, lsr #16
   1621c:	orr	r0, r3, r0, lsl #16
   16220:	adds	r3, r0, r5
   16224:	str	r0, [sp, #152]	; 0x98
   16228:	str	r4, [sp, #148]	; 0x94
   1622c:	adc	r0, r4, sl
   16230:	str	r3, [sp, #140]	; 0x8c
   16234:	eor	r1, r3, r1
   16238:	str	r0, [sp, #144]	; 0x90
   1623c:	eor	r0, r0, r8
   16240:	lsl	r3, r0, #1
   16244:	orr	r8, r3, r1, lsr #31
   16248:	lsl	r1, r1, #1
   1624c:	ldr	r3, [sp, #128]	; 0x80
   16250:	orr	sl, r1, r0, lsr #31
   16254:	ldr	r1, [sp, #112]	; 0x70
   16258:	eor	r0, ip, r6
   1625c:	lsl	r2, r0, #1
   16260:	str	r8, [sp, #24]
   16264:	str	sl, [sp, #28]
   16268:	eor	r1, lr, r1
   1626c:	orr	r2, r2, r1, lsr #31
   16270:	lsl	r1, r1, #1
   16274:	orr	r0, r1, r0, lsr #31
   16278:	ldr	r1, [sp, #204]	; 0xcc
   1627c:	adds	r1, r3, r1
   16280:	ldr	r3, [sp, #200]	; 0xc8
   16284:	adc	r3, r7, r3
   16288:	ldr	r7, [sp, #32]
   1628c:	adds	r1, r1, r0
   16290:	adc	r3, r3, r2
   16294:	eor	r5, r3, r7
   16298:	ldr	r7, [sp, #44]	; 0x2c
   1629c:	eor	r4, r1, r7
   162a0:	ldr	r7, [sp, #48]	; 0x30
   162a4:	adds	lr, r5, r7
   162a8:	ldr	r7, [sp, #52]	; 0x34
   162ac:	eor	r0, lr, r0
   162b0:	adc	r9, r4, r7
   162b4:	lsl	r7, r0, #8
   162b8:	lsr	r0, r0, #24
   162bc:	eor	r2, r9, r2
   162c0:	orr	r7, r7, r2, lsr #24
   162c4:	orr	r0, r0, r2, lsl #8
   162c8:	ldr	r2, [sp, #268]	; 0x10c
   162cc:	adds	r1, r1, r2
   162d0:	ldr	r2, [sp, #264]	; 0x108
   162d4:	adc	r2, r3, r2
   162d8:	adds	r3, r1, r0
   162dc:	adc	r2, r2, r7
   162e0:	adds	r1, r3, sl
   162e4:	eor	r3, r3, r5
   162e8:	ldr	r5, [sp, #40]	; 0x28
   162ec:	str	r1, [sp, #204]	; 0xcc
   162f0:	adc	r1, r2, r8
   162f4:	eor	r2, r2, r4
   162f8:	lsl	r4, r3, #16
   162fc:	lsr	r3, r3, #16
   16300:	str	r1, [sp, #200]	; 0xc8
   16304:	orr	r1, r3, r2, lsl #16
   16308:	orr	r8, r4, r2, lsr #16
   1630c:	str	r1, [sp, #132]	; 0x84
   16310:	adds	r1, r1, lr
   16314:	str	r8, [sp, #372]	; 0x174
   16318:	str	r8, [sp, #52]	; 0x34
   1631c:	adc	r2, r8, r9
   16320:	eor	r0, r1, r0
   16324:	mov	r9, r1
   16328:	str	r1, [sp, #56]	; 0x38
   1632c:	ldr	r1, [sp, #84]	; 0x54
   16330:	str	r2, [sp, #128]	; 0x80
   16334:	eor	r2, r2, r7
   16338:	lsl	r3, r2, #1
   1633c:	orr	sl, r3, r0, lsr #31
   16340:	lsl	r0, r0, #1
   16344:	orr	r4, r0, r2, lsr #31
   16348:	ldr	r0, [sp, #168]	; 0xa8
   1634c:	ldr	r2, [sp, #88]	; 0x58
   16350:	str	sl, [sp, #108]	; 0x6c
   16354:	str	r4, [sp, #112]	; 0x70
   16358:	adds	r0, r1, r0
   1635c:	ldr	r1, [sp, #164]	; 0xa4
   16360:	adc	r1, r2, r1
   16364:	ldr	r2, [sp, #36]	; 0x24
   16368:	adds	ip, r0, r2
   1636c:	ldr	r0, [sp, #16]
   16370:	adc	lr, r1, r5
   16374:	ldr	r1, [sp, #156]	; 0x9c
   16378:	eor	r7, r0, lr
   1637c:	ldr	r0, [sp, #12]
   16380:	adds	r3, r7, r1
   16384:	ldr	r1, [sp, #160]	; 0xa0
   16388:	eor	r2, r3, r2
   1638c:	str	r3, [sp, #156]	; 0x9c
   16390:	eor	r6, r0, ip
   16394:	adc	r0, r6, r1
   16398:	eor	r1, r0, r5
   1639c:	lsl	r5, r2, #8
   163a0:	lsr	r2, r2, #24
   163a4:	str	r0, [sp, #160]	; 0xa0
   163a8:	orr	r5, r5, r1, lsr #24
   163ac:	orr	r0, r2, r1, lsl #8
   163b0:	ldr	r1, [sp, #196]	; 0xc4
   163b4:	str	r0, [sp, #84]	; 0x54
   163b8:	str	r5, [sp, #48]	; 0x30
   163bc:	adds	r2, ip, r1
   163c0:	ldr	r1, [sp, #192]	; 0xc0
   163c4:	adc	r1, lr, r1
   163c8:	adds	r2, r2, r0
   163cc:	adc	r0, r1, r5
   163d0:	eor	r1, r2, r7
   163d4:	str	r2, [sp, #88]	; 0x58
   163d8:	ldr	r7, [sp, #204]	; 0xcc
   163dc:	ldr	r5, [sp, #68]	; 0x44
   163e0:	str	r0, [sp, #164]	; 0xa4
   163e4:	lsr	r2, r1, #16
   163e8:	eor	r0, r0, r6
   163ec:	lsl	r1, r1, #16
   163f0:	orr	r3, r1, r0, lsr #16
   163f4:	orr	r2, r2, r0, lsl #16
   163f8:	ldr	r0, [sp, #132]	; 0x84
   163fc:	ldr	r1, [fp, #-124]	; 0xffffff84
   16400:	str	r2, [sp, #192]	; 0xc0
   16404:	str	r3, [sp, #168]	; 0xa8
   16408:	str	r0, [sp, #368]	; 0x170
   1640c:	ldr	r0, [sp, #128]	; 0x80
   16410:	str	r9, [sp, #336]	; 0x150
   16414:	str	r0, [sp, #340]	; 0x154
   16418:	ldr	r0, [sp, #148]	; 0x94
   1641c:	str	r4, [sp, #304]	; 0x130
   16420:	str	sl, [sp, #308]	; 0x134
   16424:	ldr	r4, [sp, #136]	; 0x88
   16428:	str	r0, [sp, #380]	; 0x17c
   1642c:	ldr	r0, [sp, #152]	; 0x98
   16430:	str	r0, [sp, #376]	; 0x178
   16434:	ldr	r0, [sp, #140]	; 0x8c
   16438:	str	r0, [sp, #344]	; 0x158
   1643c:	ldr	r0, [sp, #144]	; 0x90
   16440:	str	r0, [sp, #348]	; 0x15c
   16444:	ldr	r0, [fp, #-128]	; 0xffffff80
   16448:	str	r2, [sp, #384]	; 0x180
   1644c:	str	r3, [sp, #388]	; 0x184
   16450:	adds	r7, r7, r0
   16454:	ldr	r0, [sp, #200]	; 0xc8
   16458:	adc	r6, r0, r1
   1645c:	ldr	r0, [sp, #156]	; 0x9c
   16460:	adds	r9, r2, r0
   16464:	ldr	r0, [sp, #160]	; 0xa0
   16468:	adc	r8, r3, r0
   1646c:	ldr	r0, [sp, #180]	; 0xb4
   16470:	adds	r2, r5, r0
   16474:	ldr	r0, [sp, #176]	; 0xb0
   16478:	adc	r3, r4, r0
   1647c:	ldr	r0, [sp, #60]	; 0x3c
   16480:	adds	r2, r2, r0
   16484:	ldr	r0, [sp, #64]	; 0x40
   16488:	adc	r3, r3, r0
   1648c:	ldr	r0, [sp, #184]	; 0xb8
   16490:	eor	ip, r3, r0
   16494:	ldr	r0, [sp, #188]	; 0xbc
   16498:	eor	lr, r2, r0
   1649c:	ldr	r0, [sp, #76]	; 0x4c
   164a0:	adds	r1, ip, r0
   164a4:	ldr	r0, [sp, #80]	; 0x50
   164a8:	str	r1, [sp, #76]	; 0x4c
   164ac:	adc	r0, lr, r0
   164b0:	str	r0, [sp, #80]	; 0x50
   164b4:	eor	sl, r0, r4
   164b8:	eor	r0, r1, r5
   164bc:	lsl	r4, r0, #8
   164c0:	lsr	r0, r0, #24
   164c4:	orr	r5, r4, sl, lsr #24
   164c8:	orr	r4, r0, sl, lsl #8
   164cc:	ldr	r0, [sp, #92]	; 0x5c
   164d0:	str	r4, [sp, #180]	; 0xb4
   164d4:	str	r5, [sp, #136]	; 0x88
   164d8:	adds	r0, r2, r0
   164dc:	ldr	r2, [sp, #72]	; 0x48
   164e0:	adc	r2, r3, r2
   164e4:	adds	r3, r0, r4
   164e8:	adc	r0, r2, r5
   164ec:	eor	r1, r3, ip
   164f0:	str	r3, [sp, #176]	; 0xb0
   164f4:	str	r0, [sp, #188]	; 0xbc
   164f8:	lsr	r2, r1, #16
   164fc:	eor	r0, r0, lr
   16500:	lsl	r1, r1, #16
   16504:	orr	lr, r1, r0, lsr #16
   16508:	orr	r4, r2, r0, lsl #16
   1650c:	ldr	r0, [sp, #24]
   16510:	eor	r3, r6, lr
   16514:	eor	r2, r7, r4
   16518:	adds	r5, r3, r9
   1651c:	adc	ip, r2, r8
   16520:	eor	r1, ip, r0
   16524:	ldr	r0, [sp, #28]
   16528:	eor	r0, r5, r0
   1652c:	lsl	sl, r0, #8
   16530:	lsr	r0, r0, #24
   16534:	orr	sl, sl, r1, lsr #24
   16538:	orr	r0, r0, r1, lsl #8
   1653c:	ldr	r1, [sp, #124]	; 0x7c
   16540:	adds	r1, r7, r1
   16544:	ldr	r7, [sp, #96]	; 0x60
   16548:	adc	r6, r6, r7
   1654c:	adds	r7, r1, r0
   16550:	adc	r1, r6, sl
   16554:	str	r7, [sp, #156]	; 0x9c
   16558:	str	r1, [sp, #160]	; 0xa0
   1655c:	eor	r1, r1, r2
   16560:	eor	r2, r7, r3
   16564:	ldr	r7, [sp, #120]	; 0x78
   16568:	lsl	r3, r2, #16
   1656c:	lsr	r2, r2, #16
   16570:	orr	r3, r3, r1, lsr #16
   16574:	orr	r1, r2, r1, lsl #16
   16578:	adds	r2, r1, r5
   1657c:	str	r1, [sp, #204]	; 0xcc
   16580:	str	r3, [sp, #200]	; 0xc8
   16584:	adc	r1, r3, ip
   16588:	str	r2, [sp, #184]	; 0xb8
   1658c:	eor	r0, r2, r0
   16590:	ldr	r3, [sp, #116]	; 0x74
   16594:	str	r1, [sp, #196]	; 0xc4
   16598:	eor	r1, r1, sl
   1659c:	lsl	r2, r1, #1
   165a0:	orr	sl, r2, r0, lsr #31
   165a4:	lsl	r0, r0, #1
   165a8:	orr	ip, r0, r1, lsr #31
   165ac:	ldr	r0, [sp, #48]	; 0x30
   165b0:	ldr	r1, [sp, #84]	; 0x54
   165b4:	str	sl, [sp, #64]	; 0x40
   165b8:	str	ip, [sp, #68]	; 0x44
   165bc:	eor	r0, r8, r0
   165c0:	eor	r1, r9, r1
   165c4:	lsl	r2, r0, #1
   165c8:	orr	r2, r2, r1, lsr #31
   165cc:	lsl	r1, r1, #1
   165d0:	orr	r0, r1, r0, lsr #31
   165d4:	ldr	r1, [sp, #244]	; 0xf4
   165d8:	adds	r1, r3, r1
   165dc:	ldr	r3, [sp, #240]	; 0xf0
   165e0:	adc	r3, r7, r3
   165e4:	adds	r8, r1, r0
   165e8:	ldr	r1, [sp, #52]	; 0x34
   165ec:	adc	r7, r3, r2
   165f0:	eor	r5, r1, r7
   165f4:	ldr	r1, [sp, #76]	; 0x4c
   165f8:	str	r5, [sp, #92]	; 0x5c
   165fc:	adds	r9, r4, r1
   16600:	ldr	r1, [sp, #80]	; 0x50
   16604:	adc	r3, lr, r1
   16608:	ldr	r1, [sp, #132]	; 0x84
   1660c:	adds	r6, r5, r9
   16610:	ldr	lr, [sp, #224]	; 0xe0
   16614:	eor	r0, r6, r0
   16618:	str	r6, [sp, #80]	; 0x50
   1661c:	eor	r1, r1, r8
   16620:	str	r1, [sp, #76]	; 0x4c
   16624:	adc	r1, r1, r3
   16628:	str	r1, [sp, #96]	; 0x60
   1662c:	eor	r1, r1, r2
   16630:	lsl	r2, r0, #8
   16634:	lsr	r0, r0, #24
   16638:	orr	r6, r0, r1, lsl #8
   1663c:	ldr	r0, [sp, #236]	; 0xec
   16640:	orr	r2, r2, r1, lsr #24
   16644:	ldr	r1, [sp, #232]	; 0xe8
   16648:	str	r6, [sp, #60]	; 0x3c
   1664c:	str	r2, [sp, #52]	; 0x34
   16650:	adds	r0, r8, r0
   16654:	adc	r5, r7, r1
   16658:	ldr	r7, [sp, #228]	; 0xe4
   1665c:	adds	r0, r0, r6
   16660:	ldr	r1, [sp, #88]	; 0x58
   16664:	adc	r8, r5, r2
   16668:	str	r0, [sp, #72]	; 0x48
   1666c:	ldr	r2, [sp, #128]	; 0x80
   16670:	adds	r5, r0, r7
   16674:	adc	r6, r8, lr
   16678:	adds	r0, r5, ip
   1667c:	str	r0, [sp, #124]	; 0x7c
   16680:	ldr	r0, [sp, #136]	; 0x88
   16684:	adc	ip, r6, sl
   16688:	str	ip, [sp, #120]	; 0x78
   1668c:	eor	r3, r3, r0
   16690:	ldr	r0, [sp, #180]	; 0xb4
   16694:	lsl	r5, r3, #1
   16698:	eor	r4, r9, r0
   1669c:	ldr	r0, [sp, #260]	; 0x104
   166a0:	orr	r5, r5, r4, lsr #31
   166a4:	lsl	r4, r4, #1
   166a8:	orr	r3, r4, r3, lsr #31
   166ac:	adds	r4, r1, r0
   166b0:	ldr	r0, [sp, #256]	; 0x100
   166b4:	ldr	r1, [sp, #164]	; 0xa4
   166b8:	adc	r6, r1, r0
   166bc:	ldr	r0, [sp, #148]	; 0x94
   166c0:	adds	r4, r4, r3
   166c4:	ldr	r1, [sp, #56]	; 0x38
   166c8:	adc	r6, r6, r5
   166cc:	eor	sl, r6, r0
   166d0:	ldr	r0, [sp, #152]	; 0x98
   166d4:	adds	r1, sl, r1
   166d8:	eor	r3, r1, r3
   166dc:	lsl	r9, r3, #8
   166e0:	lsr	r3, r3, #24
   166e4:	eor	r0, r4, r0
   166e8:	adc	r2, r0, r2
   166ec:	eor	r5, r2, r5
   166f0:	orr	r9, r9, r5, lsr #24
   166f4:	orr	r3, r3, r5, lsl #8
   166f8:	ldr	r5, [sp, #252]	; 0xfc
   166fc:	adds	r4, r4, r5
   16700:	ldr	r5, [sp, #248]	; 0xf8
   16704:	adc	r5, r6, r5
   16708:	adds	r6, r4, r3
   1670c:	adc	r4, r5, r9
   16710:	str	r6, [sp, #132]	; 0x84
   16714:	str	r4, [sp, #136]	; 0x88
   16718:	eor	r0, r4, r0
   1671c:	eor	r4, r6, sl
   16720:	lsl	r5, r4, #16
   16724:	lsr	r4, r4, #16
   16728:	orr	r6, r5, r0, lsr #16
   1672c:	orr	r0, r4, r0, lsl #16
   16730:	ldr	r5, [sp, #140]	; 0x8c
   16734:	adds	r1, r0, r1
   16738:	str	r0, [sp, #88]	; 0x58
   1673c:	eor	r0, ip, r6
   16740:	str	r0, [sp, #84]	; 0x54
   16744:	adc	r0, r6, r2
   16748:	str	r1, [sp, #116]	; 0x74
   1674c:	eor	r1, r1, r3
   16750:	str	r0, [sp, #128]	; 0x80
   16754:	eor	r0, r0, r9
   16758:	lsl	r2, r0, #1
   1675c:	orr	r2, r2, r1, lsr #31
   16760:	lsl	r1, r1, #1
   16764:	orr	r0, r1, r0, lsr #31
   16768:	ldr	r1, [sp, #92]	; 0x5c
   1676c:	str	r2, [sp, #180]	; 0xb4
   16770:	ldr	r2, [sp, #72]	; 0x48
   16774:	str	r0, [sp, #164]	; 0xa4
   16778:	ldr	r0, [sp, #76]	; 0x4c
   1677c:	eor	r1, r2, r1
   16780:	lsl	r2, r1, #16
   16784:	eor	r0, r8, r0
   16788:	lsr	r1, r1, #16
   1678c:	orr	r3, r2, r0, lsr #16
   16790:	orr	r0, r1, r0, lsl #16
   16794:	ldr	r1, [sp, #80]	; 0x50
   16798:	str	r0, [sp, #92]	; 0x5c
   1679c:	str	r3, [sp, #72]	; 0x48
   167a0:	adds	r6, r0, r1
   167a4:	ldr	r0, [sp, #96]	; 0x60
   167a8:	ldr	r1, [sp, #60]	; 0x3c
   167ac:	str	r6, [sp, #148]	; 0x94
   167b0:	adc	r9, r3, r0
   167b4:	ldr	r0, [sp, #52]	; 0x34
   167b8:	eor	r1, r6, r1
   167bc:	str	r9, [sp, #152]	; 0x98
   167c0:	eor	r0, r9, r0
   167c4:	lsl	r2, r0, #1
   167c8:	orr	r8, r2, r1, lsr #31
   167cc:	lsl	r1, r1, #1
   167d0:	orr	r4, r1, r0, lsr #31
   167d4:	ldr	r0, [sp, #176]	; 0xb0
   167d8:	ldr	r1, [sp, #188]	; 0xbc
   167dc:	str	r8, [sp, #80]	; 0x50
   167e0:	str	r4, [sp, #76]	; 0x4c
   167e4:	adds	r0, r0, r7
   167e8:	ldr	r7, [sp, #112]	; 0x70
   167ec:	adc	r1, r1, lr
   167f0:	adds	ip, r0, r7
   167f4:	ldr	r0, [sp, #108]	; 0x6c
   167f8:	adc	r3, r1, r0
   167fc:	ldr	r1, [sp, #168]	; 0xa8
   16800:	eor	sl, r3, r1
   16804:	ldr	r1, [sp, #192]	; 0xc0
   16808:	adds	r2, sl, r5
   1680c:	ldr	r5, [sp, #144]	; 0x90
   16810:	str	r2, [sp, #192]	; 0xc0
   16814:	eor	r1, ip, r1
   16818:	adc	r5, r1, r5
   1681c:	eor	lr, r5, r0
   16820:	eor	r0, r2, r7
   16824:	lsl	r7, r0, #8
   16828:	lsr	r0, r0, #24
   1682c:	orr	r0, r0, lr, lsl #8
   16830:	orr	r2, r7, lr, lsr #24
   16834:	ldr	lr, [sp, #68]	; 0x44
   16838:	ldr	r7, [fp, #-84]	; 0xffffffac
   1683c:	str	r0, [sp, #144]	; 0x90
   16840:	adds	r0, r0, ip
   16844:	str	r2, [sp, #140]	; 0x8c
   16848:	ldr	ip, [sp, #64]	; 0x40
   1684c:	adc	r2, r2, r3
   16850:	ldr	r3, [sp, #200]	; 0xc8
   16854:	str	r3, [sp, #396]	; 0x18c
   16858:	ldr	r3, [sp, #204]	; 0xcc
   1685c:	str	r3, [sp, #392]	; 0x188
   16860:	ldr	r3, [sp, #184]	; 0xb8
   16864:	str	r3, [sp, #352]	; 0x160
   16868:	ldr	r3, [sp, #196]	; 0xc4
   1686c:	str	r3, [sp, #356]	; 0x164
   16870:	ldr	r3, [sp, #164]	; 0xa4
   16874:	str	lr, [sp, #312]	; 0x138
   16878:	str	ip, [sp, #316]	; 0x13c
   1687c:	str	r6, [sp, #360]	; 0x168
   16880:	str	r9, [sp, #364]	; 0x16c
   16884:	str	r4, [sp, #320]	; 0x140
   16888:	str	r8, [sp, #324]	; 0x144
   1688c:	str	r3, [sp, #328]	; 0x148
   16890:	ldr	r3, [sp, #180]	; 0xb4
   16894:	str	r3, [sp, #332]	; 0x14c
   16898:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1689c:	adds	r3, r0, r3
   168a0:	adc	r0, r2, r7
   168a4:	str	r3, [sp, #96]	; 0x60
   168a8:	str	r0, [sp, #108]	; 0x6c
   168ac:	eor	r0, r0, r1
   168b0:	eor	r1, r3, sl
   168b4:	ldr	r3, [sp, #124]	; 0x7c
   168b8:	lsl	r2, r1, #16
   168bc:	lsr	r1, r1, #16
   168c0:	orr	r2, r2, r0, lsr #16
   168c4:	orr	r0, r1, r0, lsl #16
   168c8:	ldr	r1, [sp, #192]	; 0xc0
   168cc:	str	r0, [sp, #60]	; 0x3c
   168d0:	str	r2, [sp, #56]	; 0x38
   168d4:	adds	r8, r0, r1
   168d8:	ldr	r0, [sp, #88]	; 0x58
   168dc:	adc	sl, r2, r5
   168e0:	ldr	r2, [sp, #84]	; 0x54
   168e4:	eor	r7, r3, r0
   168e8:	ldr	r0, [sp, #260]	; 0x104
   168ec:	adds	r6, r8, r2
   168f0:	adc	r5, sl, r7
   168f4:	eor	r1, r6, lr
   168f8:	lsl	r9, r1, #8
   168fc:	eor	r4, r5, ip
   16900:	lsr	r1, r1, #24
   16904:	orr	r9, r9, r4, lsr #24
   16908:	orr	r1, r1, r4, lsl #8
   1690c:	adds	r4, r3, r0
   16910:	ldr	r0, [sp, #256]	; 0x100
   16914:	ldr	r3, [sp, #120]	; 0x78
   16918:	adc	r0, r3, r0
   1691c:	adds	r3, r4, r1
   16920:	adc	r0, r0, r9
   16924:	eor	r4, r3, r2
   16928:	str	r3, [sp, #120]	; 0x78
   1692c:	str	r0, [sp, #124]	; 0x7c
   16930:	eor	r0, r0, r7
   16934:	lsl	r7, r4, #16
   16938:	lsr	r4, r4, #16
   1693c:	orr	r7, r7, r0, lsr #16
   16940:	orr	r0, r4, r0, lsl #16
   16944:	adds	r3, r0, r6
   16948:	str	r0, [sp, #192]	; 0xc0
   1694c:	str	r7, [sp, #188]	; 0xbc
   16950:	adc	r0, r7, r5
   16954:	eor	r1, r3, r1
   16958:	str	r3, [sp, #168]	; 0xa8
   1695c:	ldr	r3, [sp, #156]	; 0x9c
   16960:	ldr	r7, [sp, #160]	; 0xa0
   16964:	str	r0, [sp, #176]	; 0xb0
   16968:	eor	r0, r0, r9
   1696c:	lsl	r4, r0, #1
   16970:	orr	ip, r4, r1, lsr #31
   16974:	lsl	r1, r1, #1
   16978:	orr	r9, r1, r0, lsr #31
   1697c:	ldr	r0, [sp, #140]	; 0x8c
   16980:	ldr	r1, [sp, #144]	; 0x90
   16984:	str	ip, [sp, #84]	; 0x54
   16988:	str	r9, [sp, #88]	; 0x58
   1698c:	eor	r0, sl, r0
   16990:	eor	r1, r8, r1
   16994:	lsl	r2, r0, #1
   16998:	orr	r2, r2, r1, lsr #31
   1699c:	lsl	r1, r1, #1
   169a0:	orr	r0, r1, r0, lsr #31
   169a4:	ldr	r1, [sp, #268]	; 0x10c
   169a8:	adds	r1, r3, r1
   169ac:	ldr	r3, [sp, #264]	; 0x108
   169b0:	adc	r7, r7, r3
   169b4:	ldr	r3, [sp, #72]	; 0x48
   169b8:	adds	r1, r1, r0
   169bc:	adc	r7, r7, r2
   169c0:	eor	r6, r7, r3
   169c4:	ldr	r3, [sp, #92]	; 0x5c
   169c8:	eor	r4, r1, r3
   169cc:	ldr	r3, [sp, #116]	; 0x74
   169d0:	adds	r5, r6, r3
   169d4:	ldr	r3, [sp, #128]	; 0x80
   169d8:	eor	r0, r5, r0
   169dc:	adc	lr, r4, r3
   169e0:	lsl	r3, r0, #8
   169e4:	lsr	r0, r0, #24
   169e8:	eor	r2, lr, r2
   169ec:	orr	r3, r3, r2, lsr #24
   169f0:	orr	r0, r0, r2, lsl #8
   169f4:	ldr	r2, [sp, #236]	; 0xec
   169f8:	adds	r1, r1, r2
   169fc:	ldr	r2, [sp, #232]	; 0xe8
   16a00:	adc	r2, r7, r2
   16a04:	adds	r7, r1, r0
   16a08:	adc	r2, r2, r3
   16a0c:	adds	r1, r7, r9
   16a10:	str	r1, [sp, #68]	; 0x44
   16a14:	adc	r1, r2, ip
   16a18:	eor	r2, r2, r4
   16a1c:	eor	r4, r7, r6
   16a20:	lsl	r6, r4, #16
   16a24:	lsr	r4, r4, #16
   16a28:	str	r1, [sp, #64]	; 0x40
   16a2c:	orr	r1, r4, r2, lsl #16
   16a30:	orr	r7, r6, r2, lsr #16
   16a34:	ldr	r6, [sp, #80]	; 0x50
   16a38:	str	r1, [sp, #160]	; 0xa0
   16a3c:	adds	r1, r1, r5
   16a40:	str	r7, [sp, #156]	; 0x9c
   16a44:	adc	sl, r7, lr
   16a48:	eor	r0, r1, r0
   16a4c:	mov	lr, r1
   16a50:	str	r1, [sp, #112]	; 0x70
   16a54:	ldr	r1, [sp, #132]	; 0x84
   16a58:	ldr	r7, [sp, #76]	; 0x4c
   16a5c:	eor	r2, sl, r3
   16a60:	str	sl, [sp, #116]	; 0x74
   16a64:	lsl	r3, r2, #1
   16a68:	orr	r9, r3, r0, lsr #31
   16a6c:	lsl	r0, r0, #1
   16a70:	orr	r4, r0, r2, lsr #31
   16a74:	ldr	r0, [sp, #252]	; 0xfc
   16a78:	ldr	r2, [sp, #136]	; 0x88
   16a7c:	str	r9, [sp, #144]	; 0x90
   16a80:	str	r4, [sp, #140]	; 0x8c
   16a84:	adds	r0, r1, r0
   16a88:	ldr	r1, [sp, #248]	; 0xf8
   16a8c:	adc	r2, r2, r1
   16a90:	adds	r3, r0, r7
   16a94:	ldr	r0, [sp, #56]	; 0x38
   16a98:	adc	r5, r2, r6
   16a9c:	eor	ip, r0, r5
   16aa0:	ldr	r0, [sp, #60]	; 0x3c
   16aa4:	eor	r2, r0, r3
   16aa8:	ldr	r0, [sp, #184]	; 0xb8
   16aac:	adds	r1, ip, r0
   16ab0:	ldr	r0, [sp, #196]	; 0xc4
   16ab4:	str	r1, [sp, #184]	; 0xb8
   16ab8:	adc	r0, r2, r0
   16abc:	str	r0, [sp, #196]	; 0xc4
   16ac0:	eor	r8, r0, r6
   16ac4:	eor	r0, r1, r7
   16ac8:	ldr	r7, [sp, #188]	; 0xbc
   16acc:	lsl	r6, r0, #8
   16ad0:	lsr	r0, r0, #24
   16ad4:	orr	r0, r0, r8, lsl #8
   16ad8:	orr	r6, r6, r8, lsr #24
   16adc:	str	r0, [sp, #80]	; 0x50
   16ae0:	adds	r0, r0, r3
   16ae4:	str	r7, [sp, #380]	; 0x17c
   16ae8:	ldr	r7, [sp, #192]	; 0xc0
   16aec:	str	r6, [sp, #72]	; 0x48
   16af0:	adc	r3, r6, r5
   16af4:	ldr	r5, [sp, #168]	; 0xa8
   16af8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   16afc:	str	r7, [sp, #376]	; 0x178
   16b00:	str	r5, [sp, #344]	; 0x158
   16b04:	ldr	r5, [sp, #176]	; 0xb0
   16b08:	str	r5, [sp, #348]	; 0x15c
   16b0c:	ldr	r5, [sp, #156]	; 0x9c
   16b10:	str	r5, [sp, #372]	; 0x174
   16b14:	ldr	r5, [sp, #160]	; 0xa0
   16b18:	str	r5, [sp, #368]	; 0x170
   16b1c:	ldr	r5, [fp, #-56]	; 0xffffffc8
   16b20:	str	lr, [sp, #336]	; 0x150
   16b24:	str	sl, [sp, #340]	; 0x154
   16b28:	str	r4, [sp, #304]	; 0x130
   16b2c:	str	r9, [sp, #308]	; 0x134
   16b30:	ldr	r4, [sp, #164]	; 0xa4
   16b34:	adds	r7, r0, r5
   16b38:	ldr	r5, [fp, #-124]	; 0xffffff84
   16b3c:	adc	r0, r3, r6
   16b40:	eor	r1, r7, ip
   16b44:	str	r7, [sp, #76]	; 0x4c
   16b48:	ldr	r7, [sp, #68]	; 0x44
   16b4c:	ldr	ip, [fp, #-128]	; 0xffffff80
   16b50:	str	r0, [sp, #92]	; 0x5c
   16b54:	eor	r0, r0, r2
   16b58:	lsr	r3, r1, #16
   16b5c:	lsl	r1, r1, #16
   16b60:	ldr	r2, [sp, #108]	; 0x6c
   16b64:	orr	r3, r3, r0, lsl #16
   16b68:	orr	r6, r1, r0, lsr #16
   16b6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   16b70:	mov	r1, r3
   16b74:	str	r3, [sp, #132]	; 0x84
   16b78:	str	r3, [sp, #384]	; 0x180
   16b7c:	ldr	r3, [fp, #-156]	; 0xffffff64
   16b80:	str	r6, [sp, #128]	; 0x80
   16b84:	str	r6, [sp, #388]	; 0x184
   16b88:	adds	r8, r7, r0
   16b8c:	ldr	r0, [sp, #64]	; 0x40
   16b90:	adc	r7, r0, r3
   16b94:	ldr	r0, [sp, #184]	; 0xb8
   16b98:	adds	lr, r1, r0
   16b9c:	ldr	r0, [sp, #196]	; 0xc4
   16ba0:	ldr	r1, [sp, #180]	; 0xb4
   16ba4:	str	lr, [sp, #52]	; 0x34
   16ba8:	adc	r0, r6, r0
   16bac:	str	r0, [sp, #56]	; 0x38
   16bb0:	ldr	r0, [sp, #96]	; 0x60
   16bb4:	adds	r0, r0, r4
   16bb8:	adc	r6, r2, r1
   16bbc:	adds	r2, r0, ip
   16bc0:	ldr	r0, [sp, #200]	; 0xc8
   16bc4:	adc	r5, r6, r5
   16bc8:	eor	ip, r5, r0
   16bcc:	ldr	r0, [sp, #204]	; 0xcc
   16bd0:	eor	r3, r2, r0
   16bd4:	ldr	r0, [sp, #148]	; 0x94
   16bd8:	adds	r6, ip, r0
   16bdc:	ldr	r0, [sp, #152]	; 0x98
   16be0:	str	r6, [sp, #60]	; 0x3c
   16be4:	adc	r0, r3, r0
   16be8:	str	r0, [sp, #204]	; 0xcc
   16bec:	eor	r1, r0, r1
   16bf0:	eor	r0, r6, r4
   16bf4:	lsl	sl, r0, #8
   16bf8:	lsr	r0, r0, #24
   16bfc:	orr	r4, r0, r1, lsl #8
   16c00:	ldr	r0, [sp, #208]	; 0xd0
   16c04:	orr	r6, sl, r1, lsr #24
   16c08:	ldr	r1, [sp, #220]	; 0xdc
   16c0c:	str	r6, [sp, #64]	; 0x40
   16c10:	str	r4, [sp, #68]	; 0x44
   16c14:	adds	r0, r2, r0
   16c18:	adc	r1, r5, r1
   16c1c:	adds	r2, r0, r4
   16c20:	ldr	r5, [sp, #240]	; 0xf0
   16c24:	adc	r0, r1, r6
   16c28:	eor	r1, r2, ip
   16c2c:	str	r2, [sp, #96]	; 0x60
   16c30:	ldr	r6, [sp, #56]	; 0x38
   16c34:	str	r0, [sp, #108]	; 0x6c
   16c38:	lsr	r2, r1, #16
   16c3c:	eor	r0, r0, r3
   16c40:	lsl	r1, r1, #16
   16c44:	orr	r9, r1, r0, lsr #16
   16c48:	orr	sl, r2, r0, lsl #16
   16c4c:	ldr	r0, [sp, #84]	; 0x54
   16c50:	eor	r3, r9, r7
   16c54:	eor	r2, sl, r8
   16c58:	adds	ip, r3, lr
   16c5c:	adc	lr, r2, r6
   16c60:	eor	r1, lr, r0
   16c64:	ldr	r0, [sp, #88]	; 0x58
   16c68:	eor	r0, ip, r0
   16c6c:	lsl	r4, r0, #8
   16c70:	lsr	r0, r0, #24
   16c74:	orr	r4, r4, r1, lsr #24
   16c78:	orr	r0, r0, r1, lsl #8
   16c7c:	ldr	r1, [sp, #244]	; 0xf4
   16c80:	adds	r1, r8, r1
   16c84:	adc	r7, r7, r5
   16c88:	adds	r5, r1, r0
   16c8c:	adc	r1, r7, r4
   16c90:	str	r5, [sp, #148]	; 0x94
   16c94:	str	r1, [sp, #152]	; 0x98
   16c98:	eor	r1, r1, r2
   16c9c:	eor	r2, r5, r3
   16ca0:	lsl	r3, r2, #16
   16ca4:	lsr	r2, r2, #16
   16ca8:	orr	r3, r3, r1, lsr #16
   16cac:	orr	r1, r2, r1, lsl #16
   16cb0:	adds	ip, r1, ip
   16cb4:	str	r1, [sp, #196]	; 0xc4
   16cb8:	str	r3, [sp, #164]	; 0xa4
   16cbc:	adc	r1, r3, lr
   16cc0:	eor	r0, ip, r0
   16cc4:	mov	lr, r3
   16cc8:	str	ip, [sp, #136]	; 0x88
   16ccc:	str	r1, [sp, #180]	; 0xb4
   16cd0:	eor	r1, r1, r4
   16cd4:	ldr	r4, [sp, #124]	; 0x7c
   16cd8:	str	lr, [sp, #396]	; 0x18c
   16cdc:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16ce0:	lsl	r2, r1, #1
   16ce4:	orr	r2, r2, r0, lsr #31
   16ce8:	lsl	r0, r0, #1
   16cec:	orr	r0, r0, r1, lsr #31
   16cf0:	ldr	r1, [sp, #80]	; 0x50
   16cf4:	str	r2, [sp, #184]	; 0xb8
   16cf8:	ldr	r2, [sp, #52]	; 0x34
   16cfc:	str	r0, [sp, #200]	; 0xc8
   16d00:	ldr	r0, [sp, #72]	; 0x48
   16d04:	eor	r1, r2, r1
   16d08:	eor	r0, r6, r0
   16d0c:	lsl	r2, r0, #1
   16d10:	orr	r2, r2, r1, lsr #31
   16d14:	lsl	r1, r1, #1
   16d18:	orr	r3, r1, r0, lsr #31
   16d1c:	ldr	r0, [sp, #216]	; 0xd8
   16d20:	ldr	r1, [sp, #120]	; 0x78
   16d24:	adds	r0, r1, r0
   16d28:	ldr	r1, [sp, #212]	; 0xd4
   16d2c:	adc	r1, r4, r1
   16d30:	adds	r7, r0, r3
   16d34:	ldr	r0, [sp, #156]	; 0x9c
   16d38:	adc	r5, r1, r2
   16d3c:	eor	r8, r5, r0
   16d40:	ldr	r0, [sp, #60]	; 0x3c
   16d44:	adds	r1, sl, r0
   16d48:	ldr	r0, [sp, #204]	; 0xcc
   16d4c:	str	r1, [sp, #120]	; 0x78
   16d50:	adc	r4, r9, r0
   16d54:	ldr	r0, [sp, #160]	; 0xa0
   16d58:	adds	r9, r1, r8
   16d5c:	ldr	r1, [sp, #196]	; 0xc4
   16d60:	eor	r3, r9, r3
   16d64:	str	r4, [sp, #60]	; 0x3c
   16d68:	eor	r6, r7, r0
   16d6c:	str	r1, [sp, #392]	; 0x188
   16d70:	lsl	r0, r3, #8
   16d74:	str	ip, [sp, #352]	; 0x160
   16d78:	lsr	r3, r3, #24
   16d7c:	ldr	ip, [fp, #-136]	; 0xffffff78
   16d80:	ldr	r1, [sp, #180]	; 0xb4
   16d84:	adc	sl, r4, r6
   16d88:	ldr	r4, [sp, #244]	; 0xf4
   16d8c:	eor	r2, sl, r2
   16d90:	orr	r0, r0, r2, lsr #24
   16d94:	orr	r2, r3, r2, lsl #8
   16d98:	str	r1, [sp, #356]	; 0x164
   16d9c:	ldr	r1, [sp, #200]	; 0xc8
   16da0:	adds	r3, r2, r7
   16da4:	ldr	r7, [sp, #184]	; 0xb8
   16da8:	adc	r5, r0, r5
   16dac:	adds	r3, r3, ip
   16db0:	adc	r5, r5, lr
   16db4:	adds	lr, r3, r4
   16db8:	ldr	r4, [sp, #240]	; 0xf0
   16dbc:	eor	r3, r3, r8
   16dc0:	str	r1, [sp, #312]	; 0x138
   16dc4:	str	r7, [sp, #316]	; 0x13c
   16dc8:	adc	ip, r5, r4
   16dcc:	adds	r1, lr, r1
   16dd0:	lsl	r4, r3, #16
   16dd4:	lsr	r3, r3, #16
   16dd8:	ldr	lr, [fp, #-144]	; 0xffffff70
   16ddc:	str	r1, [sp, #72]	; 0x48
   16de0:	adc	r1, ip, r7
   16de4:	ldr	ip, [fp, #-140]	; 0xffffff74
   16de8:	str	r1, [sp, #204]	; 0xcc
   16dec:	eor	r1, r5, r6
   16df0:	ldr	r5, [sp, #92]	; 0x5c
   16df4:	orr	r7, r4, r1, lsr #16
   16df8:	orr	r1, r3, r1, lsl #16
   16dfc:	adds	r3, r1, r9
   16e00:	str	r1, [sp, #124]	; 0x7c
   16e04:	str	r7, [sp, #80]	; 0x50
   16e08:	ldr	r9, [sp, #140]	; 0x8c
   16e0c:	adc	r1, r7, sl
   16e10:	str	r3, [sp, #360]	; 0x168
   16e14:	str	r3, [sp, #156]	; 0x9c
   16e18:	eor	r0, r1, r0
   16e1c:	mov	r7, r1
   16e20:	str	r1, [sp, #160]	; 0xa0
   16e24:	eor	r1, r3, r2
   16e28:	lsl	r2, r0, #1
   16e2c:	str	r7, [sp, #364]	; 0x16c
   16e30:	ldr	r7, [fp, #-84]	; 0xffffffac
   16e34:	orr	r6, r2, r1, lsr #31
   16e38:	lsl	r1, r1, #1
   16e3c:	ldr	r2, [sp, #120]	; 0x78
   16e40:	orr	r4, r1, r0, lsr #31
   16e44:	ldr	r0, [sp, #64]	; 0x40
   16e48:	ldr	r1, [sp, #60]	; 0x3c
   16e4c:	str	r6, [sp, #88]	; 0x58
   16e50:	str	r6, [sp, #324]	; 0x144
   16e54:	ldr	r6, [sp, #116]	; 0x74
   16e58:	str	r4, [sp, #84]	; 0x54
   16e5c:	str	r4, [sp, #320]	; 0x140
   16e60:	ldr	r4, [fp, #-88]	; 0xffffffa8
   16e64:	eor	r0, r1, r0
   16e68:	ldr	r1, [sp, #68]	; 0x44
   16e6c:	eor	r1, r2, r1
   16e70:	lsl	r2, r0, #1
   16e74:	orr	r2, r2, r1, lsr #31
   16e78:	lsl	r1, r1, #1
   16e7c:	orr	r0, r1, r0, lsr #31
   16e80:	ldr	r1, [sp, #76]	; 0x4c
   16e84:	adds	r1, r0, r1
   16e88:	adc	r5, r2, r5
   16e8c:	adds	r1, r1, r4
   16e90:	ldr	r4, [sp, #188]	; 0xbc
   16e94:	adc	r3, r5, r7
   16e98:	ldr	r5, [sp, #112]	; 0x70
   16e9c:	eor	r7, r3, r4
   16ea0:	ldr	r4, [sp, #192]	; 0xc0
   16ea4:	adds	r5, r7, r5
   16ea8:	eor	r0, r5, r0
   16eac:	eor	r4, r1, r4
   16eb0:	adc	r8, r4, r6
   16eb4:	lsl	r6, r0, #8
   16eb8:	lsr	r0, r0, #24
   16ebc:	adds	r1, lr, r1
   16ec0:	eor	r2, r8, r2
   16ec4:	orr	r0, r0, r2, lsl #8
   16ec8:	orr	r6, r6, r2, lsr #24
   16ecc:	adc	r2, ip, r3
   16ed0:	adds	r3, r1, r0
   16ed4:	adc	r1, r2, r6
   16ed8:	eor	r2, r3, r7
   16edc:	str	r3, [sp, #112]	; 0x70
   16ee0:	ldr	r7, [fp, #-68]	; 0xffffffbc
   16ee4:	str	r1, [sp, #116]	; 0x74
   16ee8:	lsl	r3, r2, #16
   16eec:	eor	r1, r1, r4
   16ef0:	lsr	r2, r2, #16
   16ef4:	orr	sl, r2, r1, lsl #16
   16ef8:	orr	r3, r3, r1, lsr #16
   16efc:	ldr	r1, [sp, #204]	; 0xcc
   16f00:	adds	r2, sl, r5
   16f04:	str	r7, [sp, #64]	; 0x40
   16f08:	str	r2, [sp, #76]	; 0x4c
   16f0c:	eor	r0, r2, r0
   16f10:	ldr	r2, [sp, #96]	; 0x60
   16f14:	eor	r1, r3, r1
   16f18:	str	r1, [sp, #188]	; 0xbc
   16f1c:	adc	r1, r3, r8
   16f20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f24:	eor	r6, r1, r6
   16f28:	str	r1, [sp, #92]	; 0x5c
   16f2c:	lsl	r5, r6, #1
   16f30:	adds	ip, r2, r9
   16f34:	ldr	r2, [sp, #108]	; 0x6c
   16f38:	orr	r1, r5, r0, lsr #31
   16f3c:	lsl	r0, r0, #1
   16f40:	orr	r0, r0, r6, lsr #31
   16f44:	ldr	r6, [sp, #144]	; 0x90
   16f48:	str	r1, [sp, #120]	; 0x78
   16f4c:	str	r1, [sp, #332]	; 0x14c
   16f50:	str	r0, [sp, #192]	; 0xc0
   16f54:	str	r0, [sp, #328]	; 0x148
   16f58:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16f5c:	adc	r4, r2, r6
   16f60:	adds	r3, ip, r3
   16f64:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16f68:	adc	ip, r4, r0
   16f6c:	ldr	r0, [sp, #128]	; 0x80
   16f70:	str	r2, [sp, #96]	; 0x60
   16f74:	eor	lr, ip, r0
   16f78:	ldr	r0, [sp, #132]	; 0x84
   16f7c:	eor	r1, r3, r0
   16f80:	ldr	r0, [sp, #168]	; 0xa8
   16f84:	adds	r5, lr, r0
   16f88:	ldr	r0, [sp, #176]	; 0xb0
   16f8c:	adc	r8, r1, r0
   16f90:	eor	r0, r5, r9
   16f94:	eor	r4, r8, r6
   16f98:	lsl	r6, r0, #8
   16f9c:	lsr	r0, r0, #24
   16fa0:	orr	r9, r0, r4, lsl #8
   16fa4:	adds	r0, r2, r3
   16fa8:	orr	r6, r6, r4, lsr #24
   16fac:	adc	r3, r7, ip
   16fb0:	adds	r7, r0, r9
   16fb4:	str	r6, [sp, #128]	; 0x80
   16fb8:	adc	r0, r3, r6
   16fbc:	ldr	r6, [sp, #72]	; 0x48
   16fc0:	str	r7, [sp, #108]	; 0x6c
   16fc4:	str	r0, [sp, #176]	; 0xb0
   16fc8:	eor	r0, r0, r1
   16fcc:	eor	r1, r7, lr
   16fd0:	lsl	r3, r1, #16
   16fd4:	lsr	r1, r1, #16
   16fd8:	orr	r2, r3, r0, lsr #16
   16fdc:	orr	r0, r1, r0, lsl #16
   16fe0:	ldr	r3, [sp, #188]	; 0xbc
   16fe4:	ldr	r1, [sp, #252]	; 0xfc
   16fe8:	adds	r4, r0, r5
   16fec:	str	r0, [sp, #140]	; 0x8c
   16ff0:	ldr	r0, [sp, #184]	; 0xb8
   16ff4:	str	r2, [sp, #132]	; 0x84
   16ff8:	adc	lr, r2, r8
   16ffc:	eor	r2, sl, r6
   17000:	adds	ip, r4, r3
   17004:	adc	r5, lr, r2
   17008:	eor	r7, r5, r0
   1700c:	ldr	r0, [sp, #200]	; 0xc8
   17010:	eor	r0, ip, r0
   17014:	lsl	sl, r0, #8
   17018:	lsr	r0, r0, #24
   1701c:	orr	sl, sl, r7, lsr #24
   17020:	orr	r0, r0, r7, lsl #8
   17024:	adds	r7, r6, r1
   17028:	ldr	r1, [sp, #248]	; 0xf8
   1702c:	ldr	r6, [sp, #204]	; 0xcc
   17030:	adc	r1, r6, r1
   17034:	adds	r6, r7, r0
   17038:	adc	r1, r1, sl
   1703c:	str	r6, [sp, #144]	; 0x90
   17040:	str	r1, [sp, #168]	; 0xa8
   17044:	eor	r1, r1, r2
   17048:	eor	r2, r6, r3
   1704c:	lsl	r7, r2, #16
   17050:	lsr	r2, r2, #16
   17054:	orr	r7, r7, r1, lsr #16
   17058:	orr	r1, r2, r1, lsl #16
   1705c:	adds	r2, r1, ip
   17060:	str	r1, [sp, #188]	; 0xbc
   17064:	str	r7, [sp, #184]	; 0xb8
   17068:	adc	r1, r7, r5
   1706c:	str	r2, [sp, #200]	; 0xc8
   17070:	eor	r0, r2, r0
   17074:	ldr	r7, [sp, #152]	; 0x98
   17078:	str	r1, [sp, #204]	; 0xcc
   1707c:	eor	r1, r1, sl
   17080:	lsl	r2, r1, #1
   17084:	orr	sl, r2, r0, lsr #31
   17088:	lsl	r0, r0, #1
   1708c:	orr	ip, r0, r1, lsr #31
   17090:	ldr	r0, [sp, #128]	; 0x80
   17094:	eor	r1, r4, r9
   17098:	str	sl, [sp, #68]	; 0x44
   1709c:	str	ip, [sp, #72]	; 0x48
   170a0:	eor	r0, lr, r0
   170a4:	lsl	r2, r0, #1
   170a8:	orr	r3, r2, r1, lsr #31
   170ac:	lsl	r1, r1, #1
   170b0:	ldr	r2, [sp, #148]	; 0x94
   170b4:	orr	r1, r1, r0, lsr #31
   170b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   170bc:	adds	r0, r0, r2
   170c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   170c4:	adc	r2, r2, r7
   170c8:	adds	r7, r0, r1
   170cc:	ldr	r0, [sp, #80]	; 0x50
   170d0:	adc	r6, r2, r3
   170d4:	eor	r2, r6, r0
   170d8:	ldr	r0, [sp, #124]	; 0x7c
   170dc:	str	r2, [sp, #56]	; 0x38
   170e0:	eor	r9, r7, r0
   170e4:	ldr	r0, [sp, #76]	; 0x4c
   170e8:	adds	r2, r2, r0
   170ec:	ldr	r0, [sp, #92]	; 0x5c
   170f0:	eor	r1, r2, r1
   170f4:	str	r2, [sp, #80]	; 0x50
   170f8:	adc	r0, r9, r0
   170fc:	eor	r5, r0, r3
   17100:	str	r0, [sp, #92]	; 0x5c
   17104:	ldr	r0, [sp, #96]	; 0x60
   17108:	lsl	r3, r1, #8
   1710c:	lsr	r1, r1, #24
   17110:	orr	r1, r1, r5, lsl #8
   17114:	orr	r2, r3, r5, lsr #24
   17118:	str	r1, [sp, #76]	; 0x4c
   1711c:	str	r2, [sp, #40]	; 0x28
   17120:	adds	r7, r7, r0
   17124:	ldr	r0, [sp, #64]	; 0x40
   17128:	adc	r6, r6, r0
   1712c:	ldr	r0, [sp, #236]	; 0xec
   17130:	adds	r8, r7, r1
   17134:	ldr	r1, [sp, #88]	; 0x58
   17138:	adc	r7, r6, r2
   1713c:	adds	r6, ip, r0
   17140:	ldr	r0, [sp, #232]	; 0xe8
   17144:	adc	r5, sl, r0
   17148:	adds	r0, r6, r8
   1714c:	ldr	sl, [sp, #84]	; 0x54
   17150:	str	r0, [sp, #60]	; 0x3c
   17154:	adc	r0, r5, r7
   17158:	str	r0, [sp, #52]	; 0x34
   1715c:	ldr	r0, [sp, #268]	; 0x10c
   17160:	adds	r6, sl, r0
   17164:	ldr	r0, [sp, #264]	; 0x108
   17168:	adc	r5, r1, r0
   1716c:	ldr	r0, [sp, #112]	; 0x70
   17170:	adds	r6, r6, r0
   17174:	ldr	r0, [sp, #116]	; 0x74
   17178:	adc	r5, r5, r0
   1717c:	ldr	r0, [sp, #132]	; 0x84
   17180:	eor	ip, r0, r5
   17184:	ldr	r0, [sp, #140]	; 0x8c
   17188:	eor	r3, r0, r6
   1718c:	ldr	r0, [sp, #136]	; 0x88
   17190:	adds	lr, ip, r0
   17194:	ldr	r0, [sp, #180]	; 0xb4
   17198:	adc	r4, r3, r0
   1719c:	eor	r0, lr, sl
   171a0:	lsl	sl, r0, #8
   171a4:	eor	r1, r4, r1
   171a8:	lsr	r0, r0, #24
   171ac:	orr	r2, r0, r1, lsl #8
   171b0:	ldr	r0, [sp, #228]	; 0xe4
   171b4:	orr	sl, sl, r1, lsr #24
   171b8:	ldr	r1, [sp, #224]	; 0xe0
   171bc:	str	r2, [sp, #152]	; 0x98
   171c0:	str	sl, [sp, #112]	; 0x70
   171c4:	adds	r0, r6, r0
   171c8:	adc	r1, r5, r1
   171cc:	adds	r5, r0, r2
   171d0:	adc	r0, r1, sl
   171d4:	eor	r1, r5, ip
   171d8:	str	r5, [sp, #124]	; 0x7c
   171dc:	ldr	ip, [sp, #192]	; 0xc0
   171e0:	str	r0, [sp, #128]	; 0x80
   171e4:	lsl	r2, r1, #16
   171e8:	eor	r0, r0, r3
   171ec:	lsr	r1, r1, #16
   171f0:	orr	r2, r2, r0, lsr #16
   171f4:	orr	r0, r1, r0, lsl #16
   171f8:	adds	r1, r0, lr
   171fc:	mov	sl, r0
   17200:	str	r0, [sp, #148]	; 0x94
   17204:	mov	r5, r2
   17208:	str	r2, [sp, #140]	; 0x8c
   1720c:	str	r1, [sp, #48]	; 0x30
   17210:	ldr	r1, [sp, #56]	; 0x38
   17214:	adc	r0, r2, r4
   17218:	str	r0, [sp, #44]	; 0x2c
   1721c:	eor	r0, r7, r9
   17220:	ldr	r7, [sp, #176]	; 0xb0
   17224:	eor	r1, r8, r1
   17228:	ldr	r8, [sp, #120]	; 0x78
   1722c:	lsl	r2, r1, #16
   17230:	lsr	r1, r1, #16
   17234:	orr	r4, r2, r0, lsr #16
   17238:	orr	r0, r1, r0, lsl #16
   1723c:	ldr	r1, [sp, #80]	; 0x50
   17240:	mov	r9, r0
   17244:	str	r0, [sp, #88]	; 0x58
   17248:	str	r4, [sp, #372]	; 0x174
   1724c:	str	r4, [sp, #84]	; 0x54
   17250:	str	r9, [sp, #368]	; 0x170
   17254:	ldr	r9, [fp, #-156]	; 0xffffff64
   17258:	adds	r6, r0, r1
   1725c:	ldr	r0, [sp, #92]	; 0x5c
   17260:	str	r6, [sp, #336]	; 0x150
   17264:	str	r6, [sp, #96]	; 0x60
   17268:	adc	r1, r4, r0
   1726c:	ldr	r0, [sp, #40]	; 0x28
   17270:	ldr	r4, [sp, #44]	; 0x2c
   17274:	mov	r3, r1
   17278:	str	r1, [sp, #92]	; 0x5c
   1727c:	str	r3, [sp, #340]	; 0x154
   17280:	ldr	r3, [fp, #-132]	; 0xffffff7c
   17284:	eor	r0, r1, r0
   17288:	ldr	r1, [sp, #76]	; 0x4c
   1728c:	lsl	r2, r0, #1
   17290:	eor	r1, r6, r1
   17294:	orr	r2, r2, r1, lsr #31
   17298:	lsl	r1, r1, #1
   1729c:	orr	r1, r1, r0, lsr #31
   172a0:	ldr	r0, [sp, #108]	; 0x6c
   172a4:	str	r2, [sp, #308]	; 0x134
   172a8:	str	r2, [sp, #136]	; 0x88
   172ac:	ldr	r2, [fp, #-136]	; 0xffffff78
   172b0:	str	r1, [sp, #132]	; 0x84
   172b4:	str	r1, [sp, #304]	; 0x130
   172b8:	ldr	r1, [sp, #184]	; 0xb8
   172bc:	adds	r0, r0, ip
   172c0:	adc	lr, r7, r8
   172c4:	str	r1, [sp, #380]	; 0x17c
   172c8:	ldr	r1, [sp, #188]	; 0xbc
   172cc:	str	r1, [sp, #376]	; 0x178
   172d0:	ldr	r1, [sp, #204]	; 0xcc
   172d4:	str	r1, [sp, #348]	; 0x15c
   172d8:	ldr	r1, [sp, #200]	; 0xc8
   172dc:	str	r1, [sp, #344]	; 0x158
   172e0:	ldr	r1, [fp, #-160]	; 0xffffff60
   172e4:	str	sl, [sp, #384]	; 0x180
   172e8:	str	r5, [sp, #388]	; 0x184
   172ec:	str	r1, [sp, #180]	; 0xb4
   172f0:	adds	r1, r0, r2
   172f4:	ldr	r0, [sp, #164]	; 0xa4
   172f8:	adc	r2, lr, r3
   172fc:	eor	r6, r2, r0
   17300:	ldr	r0, [sp, #196]	; 0xc4
   17304:	eor	r3, r1, r0
   17308:	ldr	r0, [sp, #156]	; 0x9c
   1730c:	adds	r7, r6, r0
   17310:	ldr	r0, [sp, #160]	; 0xa0
   17314:	str	r7, [sp, #108]	; 0x6c
   17318:	adc	r0, r3, r0
   1731c:	str	r0, [sp, #156]	; 0x9c
   17320:	eor	r8, r0, r8
   17324:	eor	r0, r7, ip
   17328:	lsl	sl, r0, #8
   1732c:	lsr	r0, r0, #24
   17330:	orr	r5, r0, r8, lsl #8
   17334:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17338:	orr	r7, sl, r8, lsr #24
   1733c:	str	r7, [sp, #56]	; 0x38
   17340:	str	r5, [sp, #64]	; 0x40
   17344:	adds	r0, r0, r1
   17348:	ldr	r1, [fp, #-84]	; 0xffffffac
   1734c:	adc	r1, r1, r2
   17350:	adds	r2, r0, r5
   17354:	ldr	r5, [sp, #48]	; 0x30
   17358:	adc	r0, r1, r7
   1735c:	str	r2, [sp, #76]	; 0x4c
   17360:	eor	r2, r2, r6
   17364:	ldr	r7, [sp, #52]	; 0x34
   17368:	ldr	r6, [sp, #60]	; 0x3c
   1736c:	str	r0, [sp, #80]	; 0x50
   17370:	lsr	r1, r2, #16
   17374:	eor	r0, r0, r3
   17378:	lsl	r2, r2, #16
   1737c:	orr	sl, r2, r0, lsr #16
   17380:	orr	r1, r1, r0, lsl #16
   17384:	ldr	r0, [sp, #68]	; 0x44
   17388:	eor	r2, sl, r7
   1738c:	eor	r3, r1, r6
   17390:	str	r1, [sp, #40]	; 0x28
   17394:	adds	lr, r2, r5
   17398:	adc	ip, r3, r4
   1739c:	eor	r1, ip, r0
   173a0:	ldr	r0, [sp, #72]	; 0x48
   173a4:	eor	r0, lr, r0
   173a8:	lsl	r8, r0, #8
   173ac:	lsr	r0, r0, #24
   173b0:	orr	r8, r8, r1, lsr #24
   173b4:	orr	r0, r0, r1, lsl #8
   173b8:	ldr	r1, [sp, #180]	; 0xb4
   173bc:	adds	r1, r1, r6
   173c0:	adc	r9, r9, r7
   173c4:	adds	r6, r1, r0
   173c8:	adc	r1, r9, r8
   173cc:	eor	r2, r6, r2
   173d0:	str	r6, [sp, #120]	; 0x78
   173d4:	ldr	r6, [sp, #168]	; 0xa8
   173d8:	eor	r9, r1, r3
   173dc:	lsl	r3, r2, #16
   173e0:	lsr	r2, r2, #16
   173e4:	str	r1, [sp, #160]	; 0xa0
   173e8:	orr	r1, r2, r9, lsl #16
   173ec:	orr	r3, r3, r9, lsr #16
   173f0:	adds	r2, r1, lr
   173f4:	str	r1, [sp, #192]	; 0xc0
   173f8:	mov	r9, r3
   173fc:	str	r3, [sp, #164]	; 0xa4
   17400:	adc	r1, r3, ip
   17404:	str	r2, [sp, #196]	; 0xc4
   17408:	eor	r0, r2, r0
   1740c:	str	r9, [sp, #396]	; 0x18c
   17410:	str	r1, [sp, #180]	; 0xb4
   17414:	eor	r1, r1, r8
   17418:	lsl	r2, r1, #1
   1741c:	orr	r2, r2, r0, lsr #31
   17420:	lsl	r0, r0, #1
   17424:	orr	r8, r0, r1, lsr #31
   17428:	ldr	r0, [sp, #112]	; 0x70
   1742c:	ldr	r1, [sp, #152]	; 0x98
   17430:	str	r2, [sp, #176]	; 0xb0
   17434:	str	r8, [sp, #116]	; 0x74
   17438:	eor	r0, r4, r0
   1743c:	eor	r1, r5, r1
   17440:	lsl	r2, r0, #1
   17444:	orr	ip, r2, r1, lsr #31
   17448:	lsl	r1, r1, #1
   1744c:	orr	r3, r1, r0, lsr #31
   17450:	ldr	r0, [sp, #260]	; 0x104
   17454:	ldr	r1, [sp, #144]	; 0x90
   17458:	adds	r0, r1, r0
   1745c:	ldr	r1, [sp, #256]	; 0x100
   17460:	adc	r1, r6, r1
   17464:	adds	r6, r0, r3
   17468:	ldr	r0, [sp, #84]	; 0x54
   1746c:	adc	lr, r1, ip
   17470:	ldr	r1, [sp, #40]	; 0x28
   17474:	eor	r7, r0, lr
   17478:	ldr	r0, [sp, #108]	; 0x6c
   1747c:	adds	r1, r1, r0
   17480:	ldr	r0, [sp, #156]	; 0x9c
   17484:	str	r1, [sp, #72]	; 0x48
   17488:	adc	r2, sl, r0
   1748c:	adds	r4, r1, r7
   17490:	ldr	r1, [sp, #192]	; 0xc0
   17494:	ldr	r0, [sp, #88]	; 0x58
   17498:	eor	r3, r4, r3
   1749c:	str	r2, [sp, #68]	; 0x44
   174a0:	str	r1, [sp, #392]	; 0x188
   174a4:	ldr	r1, [sp, #196]	; 0xc4
   174a8:	eor	r5, r0, r6
   174ac:	lsl	r0, r3, #8
   174b0:	lsr	r3, r3, #24
   174b4:	adc	sl, r2, r5
   174b8:	eor	r2, sl, ip
   174bc:	orr	r0, r0, r2, lsr #24
   174c0:	orr	r2, r3, r2, lsl #8
   174c4:	str	r1, [sp, #352]	; 0x160
   174c8:	ldr	r1, [sp, #180]	; 0xb4
   174cc:	adds	r3, r2, r6
   174d0:	ldr	r6, [fp, #-128]	; 0xffffff80
   174d4:	adc	ip, r0, lr
   174d8:	str	r1, [sp, #356]	; 0x164
   174dc:	ldr	r1, [sp, #176]	; 0xb0
   174e0:	str	r8, [sp, #312]	; 0x138
   174e4:	ldr	r8, [sp, #212]	; 0xd4
   174e8:	adds	r3, r3, r6
   174ec:	ldr	r6, [sp, #128]	; 0x80
   174f0:	str	r3, [sp, #84]	; 0x54
   174f4:	eor	r3, r3, r7
   174f8:	lsl	r7, r3, #16
   174fc:	lsr	r3, r3, #16
   17500:	str	r1, [sp, #316]	; 0x13c
   17504:	ldr	r1, [fp, #-124]	; 0xffffff84
   17508:	adc	r1, ip, r1
   1750c:	ldr	ip, [sp, #216]	; 0xd8
   17510:	str	r1, [sp, #88]	; 0x58
   17514:	eor	r1, r1, r5
   17518:	orr	r7, r7, r1, lsr #16
   1751c:	orr	r1, r3, r1, lsl #16
   17520:	adds	r3, r1, r4
   17524:	str	r1, [sp, #168]	; 0xa8
   17528:	str	r7, [sp, #144]	; 0x90
   1752c:	adc	r1, r7, sl
   17530:	str	r3, [sp, #360]	; 0x168
   17534:	str	r3, [sp, #152]	; 0x98
   17538:	eor	r0, r1, r0
   1753c:	mov	r7, r1
   17540:	str	r1, [sp, #156]	; 0x9c
   17544:	eor	r1, r3, r2
   17548:	lsl	r2, r0, #1
   1754c:	str	r7, [sp, #364]	; 0x16c
   17550:	ldr	r7, [sp, #184]	; 0xb8
   17554:	orr	r5, r2, r1, lsr #31
   17558:	lsl	r1, r1, #1
   1755c:	ldr	r2, [sp, #72]	; 0x48
   17560:	orr	r4, r1, r0, lsr #31
   17564:	ldr	r0, [sp, #56]	; 0x38
   17568:	ldr	r1, [sp, #68]	; 0x44
   1756c:	str	r5, [sp, #108]	; 0x6c
   17570:	str	r5, [sp, #324]	; 0x144
   17574:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17578:	str	r4, [sp, #112]	; 0x70
   1757c:	str	r4, [sp, #320]	; 0x140
   17580:	ldr	r4, [fp, #-96]	; 0xffffffa0
   17584:	eor	r0, r1, r0
   17588:	ldr	r1, [sp, #64]	; 0x40
   1758c:	eor	r1, r2, r1
   17590:	lsl	r2, r0, #1
   17594:	orr	r2, r2, r1, lsr #31
   17598:	lsl	r1, r1, #1
   1759c:	orr	r0, r1, r0, lsr #31
   175a0:	ldr	r1, [sp, #124]	; 0x7c
   175a4:	adds	r1, r0, r1
   175a8:	adc	r6, r2, r6
   175ac:	adds	r1, r1, r4
   175b0:	adc	r3, r6, r5
   175b4:	eor	r4, r3, r7
   175b8:	ldr	r7, [sp, #188]	; 0xbc
   175bc:	eor	r5, r1, r7
   175c0:	ldr	r7, [sp, #96]	; 0x60
   175c4:	adds	r9, r4, r7
   175c8:	ldr	r7, [sp, #92]	; 0x5c
   175cc:	eor	r0, r9, r0
   175d0:	lsl	r6, r0, #8
   175d4:	lsr	r0, r0, #24
   175d8:	adc	r7, r5, r7
   175dc:	adds	r1, r1, ip
   175e0:	eor	r2, r7, r2
   175e4:	orr	r0, r0, r2, lsl #8
   175e8:	orr	r6, r6, r2, lsr #24
   175ec:	adc	r2, r3, r8
   175f0:	adds	r3, r1, r0
   175f4:	adc	r1, r2, r6
   175f8:	eor	r2, r3, r4
   175fc:	str	r3, [sp, #124]	; 0x7c
   17600:	str	r1, [sp, #128]	; 0x80
   17604:	lsl	r3, r2, #16
   17608:	eor	r1, r1, r5
   1760c:	lsr	r2, r2, #16
   17610:	orr	r3, r3, r1, lsr #16
   17614:	orr	r1, r2, r1, lsl #16
   17618:	adds	lr, r1, r9
   1761c:	str	r1, [sp, #92]	; 0x5c
   17620:	str	r3, [sp, #64]	; 0x40
   17624:	adc	r1, r3, r7
   17628:	eor	r0, lr, r0
   1762c:	ldr	r7, [sp, #132]	; 0x84
   17630:	eor	r4, r1, r6
   17634:	str	r1, [sp, #72]	; 0x48
   17638:	ldr	r1, [sp, #136]	; 0x88
   1763c:	ldr	r6, [sp, #80]	; 0x50
   17640:	lsl	r5, r4, #1
   17644:	orr	r2, r5, r0, lsr #31
   17648:	lsl	r0, r0, #1
   1764c:	ldr	r5, [fp, #-144]	; 0xffffff70
   17650:	orr	r3, r0, r4, lsr #31
   17654:	ldr	r0, [sp, #76]	; 0x4c
   17658:	str	r2, [sp, #184]	; 0xb8
   1765c:	str	r2, [sp, #332]	; 0x14c
   17660:	ldr	r2, [sp, #208]	; 0xd0
   17664:	str	r3, [sp, #188]	; 0xbc
   17668:	str	r3, [sp, #328]	; 0x148
   1766c:	adds	r0, r0, r7
   17670:	adc	r4, r6, r1
   17674:	ldr	r6, [fp, #-140]	; 0xffffff74
   17678:	adds	r9, r0, r5
   1767c:	ldr	r0, [sp, #140]	; 0x8c
   17680:	adc	r4, r4, r6
   17684:	eor	r5, r4, r0
   17688:	ldr	r0, [sp, #148]	; 0x94
   1768c:	eor	r6, r9, r0
   17690:	ldr	r0, [sp, #200]	; 0xc8
   17694:	adds	sl, r5, r0
   17698:	ldr	r0, [sp, #204]	; 0xcc
   1769c:	adc	r3, r6, r0
   176a0:	eor	r0, sl, r7
   176a4:	lsl	r7, r0, #8
   176a8:	eor	r1, r3, r1
   176ac:	lsr	r0, r0, #24
   176b0:	orr	r7, r7, r1, lsr #24
   176b4:	orr	r1, r0, r1, lsl #8
   176b8:	adds	r0, r9, r2
   176bc:	mov	r9, r2
   176c0:	ldr	r2, [sp, #220]	; 0xdc
   176c4:	adc	r4, r4, r2
   176c8:	adds	r2, r0, r1
   176cc:	adc	r0, r4, r7
   176d0:	eor	r4, r2, r5
   176d4:	str	r2, [sp, #80]	; 0x50
   176d8:	str	r0, [sp, #96]	; 0x60
   176dc:	eor	r0, r0, r6
   176e0:	lsl	r5, r4, #16
   176e4:	lsr	r4, r4, #16
   176e8:	ldr	r6, [sp, #72]	; 0x48
   176ec:	orr	r2, r5, r0, lsr #16
   176f0:	orr	r0, r4, r0, lsl #16
   176f4:	adds	r5, r0, sl
   176f8:	str	r0, [sp, #136]	; 0x88
   176fc:	str	r2, [sp, #132]	; 0x84
   17700:	adc	r0, r2, r3
   17704:	eor	r1, r5, r1
   17708:	eor	r2, r0, r7
   1770c:	str	r0, [sp, #76]	; 0x4c
   17710:	ldr	r0, [sp, #120]	; 0x78
   17714:	lsl	r3, r2, #1
   17718:	orr	r3, r3, r1, lsr #31
   1771c:	lsl	r1, r1, #1
   17720:	orr	r1, r1, r2, lsr #31
   17724:	adds	r2, r0, ip
   17728:	ldr	r0, [sp, #160]	; 0xa0
   1772c:	adc	r7, r0, r8
   17730:	ldr	r0, [sp, #144]	; 0x90
   17734:	adds	r2, r2, r1
   17738:	adc	r7, r7, r3
   1773c:	eor	ip, r7, r0
   17740:	ldr	r0, [sp, #168]	; 0xa8
   17744:	adds	r4, ip, lr
   17748:	eor	r1, r4, r1
   1774c:	eor	r0, r2, r0
   17750:	adc	r8, r0, r6
   17754:	lsl	r6, r1, #8
   17758:	lsr	r1, r1, #24
   1775c:	eor	r3, r8, r3
   17760:	orr	r6, r6, r3, lsr #24
   17764:	orr	r1, r1, r3, lsl #8
   17768:	ldr	r3, [sp, #260]	; 0x104
   1776c:	adds	r2, r2, r3
   17770:	ldr	r3, [sp, #256]	; 0x100
   17774:	adc	r3, r7, r3
   17778:	adds	r7, r2, r1
   1777c:	adc	r2, r3, r6
   17780:	str	r7, [sp, #144]	; 0x90
   17784:	str	r2, [sp, #148]	; 0x94
   17788:	eor	r0, r2, r0
   1778c:	eor	r2, r7, ip
   17790:	lsl	r3, r2, #16
   17794:	lsr	r2, r2, #16
   17798:	orr	lr, r3, r0, lsr #16
   1779c:	orr	r0, r2, r0, lsl #16
   177a0:	ldr	r3, [sp, #92]	; 0x5c
   177a4:	adds	r2, r0, r4
   177a8:	str	r0, [sp, #200]	; 0xc8
   177ac:	ldr	r4, [sp, #176]	; 0xb0
   177b0:	str	lr, [sp, #372]	; 0x174
   177b4:	str	lr, [sp, #140]	; 0x8c
   177b8:	adc	r0, lr, r8
   177bc:	eor	r1, r2, r1
   177c0:	mov	r7, r2
   177c4:	str	r2, [sp, #168]	; 0xa8
   177c8:	ldr	lr, [fp, #-132]	; 0xffffff7c
   177cc:	str	r0, [sp, #204]	; 0xcc
   177d0:	eor	r0, r0, r6
   177d4:	ldr	r6, [sp, #116]	; 0x74
   177d8:	lsl	r2, r0, #1
   177dc:	orr	ip, r2, r1, lsr #31
   177e0:	lsl	r1, r1, #1
   177e4:	ldr	r2, [sp, #88]	; 0x58
   177e8:	orr	sl, r1, r0, lsr #31
   177ec:	ldr	r0, [sp, #220]	; 0xdc
   177f0:	str	ip, [sp, #52]	; 0x34
   177f4:	adds	r1, sl, r9
   177f8:	str	sl, [sp, #60]	; 0x3c
   177fc:	str	r1, [sp, #72]	; 0x48
   17800:	ldr	r1, [sp, #84]	; 0x54
   17804:	adc	r0, ip, r0
   17808:	str	r0, [sp, #68]	; 0x44
   1780c:	ldr	r0, [sp, #252]	; 0xfc
   17810:	adds	r0, r1, r0
   17814:	ldr	r1, [sp, #248]	; 0xf8
   17818:	adc	r1, r2, r1
   1781c:	ldr	r2, [sp, #64]	; 0x40
   17820:	adds	r0, r0, r6
   17824:	adc	r1, r1, r4
   17828:	eor	r3, r3, r0
   1782c:	eor	r2, r2, r1
   17830:	adds	r8, r5, r2
   17834:	ldr	r5, [sp, #76]	; 0x4c
   17838:	eor	r6, r8, r6
   1783c:	adc	r9, r5, r3
   17840:	eor	r5, r9, r4
   17844:	lsl	r4, r6, #8
   17848:	lsr	r6, r6, #24
   1784c:	orr	r4, r4, r5, lsr #24
   17850:	orr	r5, r6, r5, lsl #8
   17854:	ldr	r6, [sp, #200]	; 0xc8
   17858:	adds	r0, r5, r0
   1785c:	str	r5, [sp, #88]	; 0x58
   17860:	ldr	r5, [fp, #-84]	; 0xffffffac
   17864:	str	r4, [sp, #76]	; 0x4c
   17868:	adc	r1, r4, r1
   1786c:	ldr	r4, [sp, #112]	; 0x70
   17870:	str	r6, [sp, #368]	; 0x170
   17874:	str	r7, [sp, #336]	; 0x150
   17878:	ldr	r7, [sp, #204]	; 0xcc
   1787c:	ldr	r6, [fp, #-88]	; 0xffffffa8
   17880:	str	r7, [sp, #340]	; 0x154
   17884:	adds	r7, r0, r6
   17888:	ldr	r6, [sp, #108]	; 0x6c
   1788c:	str	sl, [sp, #304]	; 0x130
   17890:	str	ip, [sp, #308]	; 0x134
   17894:	ldr	ip, [fp, #-136]	; 0xffffff78
   17898:	adc	r0, r1, r5
   1789c:	eor	r1, r7, r2
   178a0:	str	r7, [sp, #116]	; 0x74
   178a4:	ldr	r7, [fp, #-72]	; 0xffffffb8
   178a8:	str	r0, [sp, #120]	; 0x78
   178ac:	lsl	r2, r1, #16
   178b0:	eor	r0, r0, r3
   178b4:	lsr	r1, r1, #16
   178b8:	orr	r3, r1, r0, lsl #16
   178bc:	orr	r2, r2, r0, lsr #16
   178c0:	ldr	r0, [sp, #124]	; 0x7c
   178c4:	ldr	r1, [sp, #128]	; 0x80
   178c8:	adds	sl, r3, r8
   178cc:	str	r2, [sp, #380]	; 0x17c
   178d0:	str	r3, [sp, #376]	; 0x178
   178d4:	str	r2, [sp, #176]	; 0xb0
   178d8:	str	r3, [sp, #160]	; 0xa0
   178dc:	adc	r5, r2, r9
   178e0:	str	sl, [sp, #344]	; 0x158
   178e4:	str	sl, [sp, #32]
   178e8:	adds	r0, r0, r4
   178ec:	str	r5, [sp, #48]	; 0x30
   178f0:	str	r5, [sp, #348]	; 0x15c
   178f4:	ldr	r5, [fp, #-68]	; 0xffffffbc
   178f8:	adc	r1, r1, r6
   178fc:	adds	r2, r0, r7
   17900:	ldr	r0, [sp, #132]	; 0x84
   17904:	adc	r3, r1, r5
   17908:	eor	r7, r3, r0
   1790c:	ldr	r0, [sp, #136]	; 0x88
   17910:	eor	r9, r2, r0
   17914:	ldr	r0, [sp, #196]	; 0xc4
   17918:	adds	r5, r7, r0
   1791c:	ldr	r0, [sp, #180]	; 0xb4
   17920:	str	r5, [sp, #124]	; 0x7c
   17924:	adc	r0, r9, r0
   17928:	eor	r1, r0, r6
   1792c:	str	r0, [sp, #128]	; 0x80
   17930:	eor	r0, r5, r4
   17934:	ldr	r6, [fp, #-156]	; 0xffffff64
   17938:	lsl	r5, r0, #8
   1793c:	lsr	r0, r0, #24
   17940:	orr	r4, r5, r1, lsr #24
   17944:	orr	r5, r0, r1, lsl #8
   17948:	adds	r0, ip, r2
   1794c:	adc	r1, lr, r3
   17950:	adds	r2, r0, r5
   17954:	str	r5, [sp, #108]	; 0x6c
   17958:	ldr	r5, [sp, #184]	; 0xb8
   1795c:	str	r4, [sp, #92]	; 0x5c
   17960:	str	r2, [sp, #132]	; 0x84
   17964:	adc	r0, r1, r4
   17968:	eor	r2, r2, r7
   1796c:	str	r0, [sp, #136]	; 0x88
   17970:	lsr	r1, r2, #16
   17974:	eor	r0, r0, r9
   17978:	lsl	r2, r2, #16
   1797c:	orr	r7, r1, r0, lsl #16
   17980:	orr	r8, r2, r0, lsr #16
   17984:	ldr	r1, [sp, #188]	; 0xbc
   17988:	ldr	r0, [sp, #80]	; 0x50
   1798c:	mov	ip, r7
   17990:	str	r7, [sp, #384]	; 0x180
   17994:	ldr	r7, [fp, #-160]	; 0xffffff60
   17998:	str	r8, [sp, #388]	; 0x184
   1799c:	mov	r9, ip
   179a0:	adds	r2, r0, r1
   179a4:	ldr	r0, [sp, #96]	; 0x60
   179a8:	adc	r3, r0, r5
   179ac:	ldr	r0, [fp, #-144]	; 0xffffff70
   179b0:	adds	r7, r2, r7
   179b4:	adc	r3, r3, r6
   179b8:	str	r0, [sp, #64]	; 0x40
   179bc:	ldr	r0, [fp, #-140]	; 0xffffff74
   179c0:	str	r0, [sp, #56]	; 0x38
   179c4:	ldr	r0, [sp, #164]	; 0xa4
   179c8:	eor	r2, r3, r0
   179cc:	ldr	r0, [sp, #192]	; 0xc0
   179d0:	str	r2, [sp, #44]	; 0x2c
   179d4:	eor	r6, r7, r0
   179d8:	ldr	r0, [sp, #152]	; 0x98
   179dc:	str	r6, [sp, #40]	; 0x28
   179e0:	adds	r2, r2, r0
   179e4:	ldr	r0, [sp, #156]	; 0x9c
   179e8:	str	r2, [sp, #84]	; 0x54
   179ec:	adc	r0, r6, r0
   179f0:	eor	r6, r0, r5
   179f4:	eor	r5, r2, r1
   179f8:	str	r0, [sp, #96]	; 0x60
   179fc:	lsl	r4, r5, #8
   17a00:	lsr	r5, r5, #24
   17a04:	orr	r0, r4, r6, lsr #24
   17a08:	orr	r1, r5, r6, lsl #8
   17a0c:	ldr	r6, [fp, #-96]	; 0xffffffa0
   17a10:	str	r1, [sp, #152]	; 0x98
   17a14:	str	r0, [sp, #112]	; 0x70
   17a18:	adds	r7, r6, r7
   17a1c:	ldr	r6, [fp, #-92]	; 0xffffffa4
   17a20:	adc	r3, r6, r3
   17a24:	adds	r1, r7, r1
   17a28:	ldr	r6, [sp, #48]	; 0x30
   17a2c:	adc	r7, r3, r0
   17a30:	ldr	r0, [sp, #72]	; 0x48
   17a34:	str	r1, [sp, #36]	; 0x24
   17a38:	adds	r3, r0, r1
   17a3c:	ldr	r0, [sp, #68]	; 0x44
   17a40:	eor	r2, r3, ip
   17a44:	adc	r5, r0, r7
   17a48:	ldr	r0, [sp, #52]	; 0x34
   17a4c:	eor	r4, r5, r8
   17a50:	adds	ip, r4, sl
   17a54:	adc	lr, r2, r6
   17a58:	eor	r1, lr, r0
   17a5c:	ldr	r0, [sp, #60]	; 0x3c
   17a60:	eor	r0, ip, r0
   17a64:	lsl	sl, r0, #8
   17a68:	lsr	r0, r0, #24
   17a6c:	orr	sl, sl, r1, lsr #24
   17a70:	orr	r0, r0, r1, lsl #8
   17a74:	ldr	r1, [sp, #236]	; 0xec
   17a78:	adds	r1, r3, r1
   17a7c:	ldr	r3, [sp, #232]	; 0xe8
   17a80:	adc	r3, r5, r3
   17a84:	adds	r5, r1, r0
   17a88:	adc	r1, r3, sl
   17a8c:	str	r5, [sp, #188]	; 0xbc
   17a90:	str	r1, [sp, #192]	; 0xc0
   17a94:	eor	r1, r1, r2
   17a98:	eor	r2, r5, r4
   17a9c:	lsl	r3, r2, #16
   17aa0:	lsr	r2, r2, #16
   17aa4:	orr	r3, r3, r1, lsr #16
   17aa8:	orr	r1, r2, r1, lsl #16
   17aac:	adds	r2, r1, ip
   17ab0:	str	r1, [sp, #184]	; 0xb8
   17ab4:	str	r3, [sp, #180]	; 0xb4
   17ab8:	adc	r1, r3, lr
   17abc:	str	r2, [sp, #156]	; 0x9c
   17ac0:	eor	r0, r2, r0
   17ac4:	str	r1, [sp, #164]	; 0xa4
   17ac8:	eor	r1, r1, sl
   17acc:	lsl	r2, r1, #1
   17ad0:	orr	r2, r2, r0, lsr #31
   17ad4:	lsl	r0, r0, #1
   17ad8:	orr	sl, r0, r1, lsr #31
   17adc:	ldr	r0, [sp, #76]	; 0x4c
   17ae0:	ldr	r1, [sp, #88]	; 0x58
   17ae4:	str	r2, [sp, #196]	; 0xc4
   17ae8:	ldr	r2, [sp, #32]
   17aec:	ldr	r3, [sp, #148]	; 0x94
   17af0:	str	sl, [sp, #80]	; 0x50
   17af4:	eor	r0, r6, r0
   17af8:	eor	r1, r2, r1
   17afc:	lsl	r2, r0, #1
   17b00:	orr	r2, r2, r1, lsr #31
   17b04:	lsl	r1, r1, #1
   17b08:	orr	r4, r1, r0, lsr #31
   17b0c:	ldr	r0, [sp, #268]	; 0x10c
   17b10:	ldr	r1, [sp, #144]	; 0x90
   17b14:	adds	r0, r1, r0
   17b18:	ldr	r1, [sp, #264]	; 0x108
   17b1c:	adc	r1, r3, r1
   17b20:	adds	ip, r0, r4
   17b24:	ldr	r0, [sp, #124]	; 0x7c
   17b28:	ldr	r3, [sp, #36]	; 0x24
   17b2c:	adc	lr, r1, r2
   17b30:	adds	r5, r9, r0
   17b34:	ldr	r0, [sp, #128]	; 0x80
   17b38:	str	r5, [sp, #60]	; 0x3c
   17b3c:	adc	r1, r8, r0
   17b40:	ldr	r0, [sp, #40]	; 0x28
   17b44:	str	r1, [sp, #52]	; 0x34
   17b48:	eor	r7, r7, r0
   17b4c:	ldr	r0, [sp, #44]	; 0x2c
   17b50:	eor	r6, r3, r0
   17b54:	lsr	r3, r6, #16
   17b58:	orr	r0, r3, r7, lsl #16
   17b5c:	lsl	r3, r6, #16
   17b60:	orr	r3, r3, r7, lsr #16
   17b64:	eor	r7, r0, ip
   17b68:	str	r0, [sp, #68]	; 0x44
   17b6c:	str	r3, [sp, #72]	; 0x48
   17b70:	eor	r3, r3, lr
   17b74:	adds	r8, r3, r5
   17b78:	ldr	r5, [sp, #56]	; 0x38
   17b7c:	adc	r9, r7, r1
   17b80:	eor	r4, r8, r4
   17b84:	lsl	r6, r4, #8
   17b88:	eor	r2, r9, r2
   17b8c:	lsr	r4, r4, #24
   17b90:	orr	r0, r6, r2, lsr #24
   17b94:	orr	r2, r4, r2, lsl #8
   17b98:	ldr	r4, [sp, #64]	; 0x40
   17b9c:	adds	r6, r4, ip
   17ba0:	adc	r1, r5, lr
   17ba4:	adds	r4, r6, r2
   17ba8:	ldr	r6, [sp, #208]	; 0xd0
   17bac:	ldr	r5, [sp, #220]	; 0xdc
   17bb0:	adc	r1, r1, r0
   17bb4:	eor	r3, r4, r3
   17bb8:	adds	r6, r4, r6
   17bbc:	adc	ip, r1, r5
   17bc0:	adds	r5, r6, sl
   17bc4:	ldr	r6, [sp, #196]	; 0xc4
   17bc8:	eor	r1, r1, r7
   17bcc:	lsl	r7, r3, #16
   17bd0:	lsr	r3, r3, #16
   17bd4:	orr	r7, r7, r1, lsr #16
   17bd8:	orr	r1, r3, r1, lsl #16
   17bdc:	str	r5, [sp, #76]	; 0x4c
   17be0:	str	r1, [sp, #148]	; 0x94
   17be4:	str	r7, [sp, #144]	; 0x90
   17be8:	str	r7, [sp, #396]	; 0x18c
   17bec:	adc	r6, ip, r6
   17bf0:	adds	r3, r1, r8
   17bf4:	str	r6, [sp, #220]	; 0xdc
   17bf8:	mov	r6, r1
   17bfc:	adc	r1, r7, r9
   17c00:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17c04:	str	r3, [sp, #124]	; 0x7c
   17c08:	eor	r0, r1, r0
   17c0c:	mov	ip, r1
   17c10:	str	r1, [sp, #128]	; 0x80
   17c14:	eor	r1, r3, r2
   17c18:	str	r6, [sp, #392]	; 0x188
   17c1c:	str	r3, [sp, #352]	; 0x160
   17c20:	lsl	r2, r0, #1
   17c24:	str	ip, [sp, #356]	; 0x164
   17c28:	orr	r5, r2, r1, lsr #31
   17c2c:	lsl	r1, r1, #1
   17c30:	ldr	r2, [sp, #60]	; 0x3c
   17c34:	orr	r4, r1, r0, lsr #31
   17c38:	ldr	r0, [sp, #92]	; 0x5c
   17c3c:	ldr	r1, [sp, #52]	; 0x34
   17c40:	str	r5, [sp, #88]	; 0x58
   17c44:	str	r5, [sp, #316]	; 0x13c
   17c48:	ldr	r5, [fp, #-52]	; 0xffffffcc
   17c4c:	str	r4, [sp, #208]	; 0xd0
   17c50:	str	r4, [sp, #312]	; 0x138
   17c54:	eor	r0, r1, r0
   17c58:	ldr	r1, [sp, #108]	; 0x6c
   17c5c:	eor	r1, r2, r1
   17c60:	lsl	r2, r0, #1
   17c64:	orr	r2, r2, r1, lsr #31
   17c68:	lsl	r1, r1, #1
   17c6c:	orr	r9, r1, r0, lsr #31
   17c70:	ldr	r0, [sp, #116]	; 0x74
   17c74:	adds	r1, r9, r0
   17c78:	ldr	r0, [sp, #120]	; 0x78
   17c7c:	adc	r0, r2, r0
   17c80:	adds	sl, r1, r7
   17c84:	ldr	r1, [sp, #68]	; 0x44
   17c88:	adc	r3, r0, r5
   17c8c:	ldr	r0, [sp, #140]	; 0x8c
   17c90:	eor	r7, r3, r0
   17c94:	ldr	r0, [sp, #84]	; 0x54
   17c98:	adds	r6, r1, r0
   17c9c:	ldr	r0, [sp, #96]	; 0x60
   17ca0:	ldr	r1, [sp, #72]	; 0x48
   17ca4:	str	r6, [sp, #84]	; 0x54
   17ca8:	adc	lr, r1, r0
   17cac:	ldr	r0, [sp, #200]	; 0xc8
   17cb0:	adds	r4, r7, r6
   17cb4:	eor	r1, r4, r9
   17cb8:	lsl	r6, r1, #8
   17cbc:	lsr	r1, r1, #24
   17cc0:	eor	r5, sl, r0
   17cc4:	adc	ip, r5, lr
   17cc8:	eor	r0, ip, r2
   17ccc:	ldr	r2, [sp, #240]	; 0xf0
   17cd0:	orr	r6, r6, r0, lsr #24
   17cd4:	orr	r0, r1, r0, lsl #8
   17cd8:	ldr	r1, [sp, #244]	; 0xf4
   17cdc:	adds	r1, sl, r1
   17ce0:	adc	r3, r3, r2
   17ce4:	adds	r2, r1, r0
   17ce8:	adc	r1, r3, r6
   17cec:	eor	r3, r2, r7
   17cf0:	str	r2, [sp, #92]	; 0x5c
   17cf4:	str	r1, [sp, #200]	; 0xc8
   17cf8:	lsl	r7, r3, #16
   17cfc:	eor	r1, r1, r5
   17d00:	lsr	r3, r3, #16
   17d04:	orr	r5, r7, r1, lsr #16
   17d08:	orr	r1, r3, r1, lsl #16
   17d0c:	ldr	r3, [sp, #132]	; 0x84
   17d10:	adds	r8, r1, r4
   17d14:	str	r1, [sp, #140]	; 0x8c
   17d18:	ldr	r1, [sp, #220]	; 0xdc
   17d1c:	ldr	r4, [sp, #204]	; 0xcc
   17d20:	adc	sl, r5, ip
   17d24:	eor	r0, r8, r0
   17d28:	str	r8, [sp, #360]	; 0x168
   17d2c:	str	r8, [sp, #116]	; 0x74
   17d30:	str	sl, [sp, #364]	; 0x16c
   17d34:	str	sl, [sp, #120]	; 0x78
   17d38:	eor	r1, r5, r1
   17d3c:	ldr	r5, [sp, #168]	; 0xa8
   17d40:	str	r1, [sp, #60]	; 0x3c
   17d44:	eor	r1, sl, r6
   17d48:	ldr	r6, [sp, #136]	; 0x88
   17d4c:	lsl	r2, r1, #1
   17d50:	orr	r9, r2, r0, lsr #31
   17d54:	lsl	r0, r0, #1
   17d58:	ldr	r2, [sp, #84]	; 0x54
   17d5c:	orr	r7, r0, r1, lsr #31
   17d60:	ldr	r0, [sp, #112]	; 0x70
   17d64:	ldr	r1, [sp, #152]	; 0x98
   17d68:	str	r9, [sp, #108]	; 0x6c
   17d6c:	str	r9, [sp, #324]	; 0x144
   17d70:	str	r7, [sp, #96]	; 0x60
   17d74:	str	r7, [sp, #320]	; 0x140
   17d78:	ldr	r7, [fp, #-128]	; 0xffffff80
   17d7c:	eor	r0, lr, r0
   17d80:	eor	r1, r2, r1
   17d84:	lsl	r2, r0, #1
   17d88:	orr	r2, r2, r1, lsr #31
   17d8c:	lsl	r1, r1, #1
   17d90:	str	r7, [sp, #204]	; 0xcc
   17d94:	orr	r0, r1, r0, lsr #31
   17d98:	ldr	r1, [sp, #228]	; 0xe4
   17d9c:	adds	r1, r3, r1
   17da0:	ldr	r3, [sp, #224]	; 0xe0
   17da4:	adc	r6, r6, r3
   17da8:	ldr	r3, [sp, #176]	; 0xb0
   17dac:	adds	r1, r1, r0
   17db0:	adc	r6, r6, r2
   17db4:	eor	lr, r6, r3
   17db8:	ldr	r3, [sp, #160]	; 0xa0
   17dbc:	adds	ip, lr, r5
   17dc0:	eor	r0, ip, r0
   17dc4:	lsl	r5, r0, #8
   17dc8:	lsr	r0, r0, #24
   17dcc:	eor	r3, r1, r3
   17dd0:	adc	r4, r3, r4
   17dd4:	eor	r2, r4, r2
   17dd8:	orr	r5, r5, r2, lsr #24
   17ddc:	orr	r2, r0, r2, lsl #8
   17de0:	adds	r0, r2, r1
   17de4:	adc	r1, r5, r6
   17de8:	ldr	r6, [fp, #-124]	; 0xffffff84
   17dec:	adds	r8, r0, r7
   17df0:	str	r8, [sp, #72]	; 0x48
   17df4:	adc	r0, r1, r6
   17df8:	str	r6, [sp, #68]	; 0x44
   17dfc:	str	r0, [sp, #112]	; 0x70
   17e00:	eor	r0, r0, r3
   17e04:	eor	r3, r8, lr
   17e08:	lsl	r1, r3, #16
   17e0c:	lsr	r3, r3, #16
   17e10:	orr	r9, r1, r0, lsr #16
   17e14:	orr	r0, r3, r0, lsl #16
   17e18:	ldr	r1, [sp, #76]	; 0x4c
   17e1c:	adds	lr, r0, ip
   17e20:	str	r0, [sp, #64]	; 0x40
   17e24:	ldr	r0, [sp, #140]	; 0x8c
   17e28:	ldr	ip, [sp, #60]	; 0x3c
   17e2c:	adc	r6, r9, r4
   17e30:	eor	r2, lr, r2
   17e34:	eor	r5, r6, r5
   17e38:	eor	r7, r0, r1
   17e3c:	ldr	r0, [sp, #196]	; 0xc4
   17e40:	adds	r4, lr, ip
   17e44:	adc	r8, r6, r7
   17e48:	lsl	r6, r5, #1
   17e4c:	orr	r6, r6, r2, lsr #31
   17e50:	lsl	r2, r2, #1
   17e54:	orr	r2, r2, r5, lsr #31
   17e58:	ldr	r5, [fp, #-140]	; 0xffffff74
   17e5c:	eor	r3, r8, r0
   17e60:	ldr	r0, [sp, #80]	; 0x50
   17e64:	str	r6, [sp, #84]	; 0x54
   17e68:	str	r6, [sp, #332]	; 0x14c
   17e6c:	str	r2, [sp, #136]	; 0x88
   17e70:	str	r2, [sp, #328]	; 0x148
   17e74:	ldr	r2, [fp, #-144]	; 0xffffff70
   17e78:	eor	r0, r4, r0
   17e7c:	lsl	sl, r0, #8
   17e80:	lsr	r0, r0, #24
   17e84:	orr	r0, r0, r3, lsl #8
   17e88:	orr	sl, sl, r3, lsr #24
   17e8c:	adds	r3, r0, r1
   17e90:	ldr	r1, [sp, #220]	; 0xdc
   17e94:	adc	r1, sl, r1
   17e98:	adds	lr, r3, r2
   17e9c:	adc	r1, r1, r5
   17ea0:	eor	r5, lr, ip
   17ea4:	ldr	ip, [sp, #208]	; 0xd0
   17ea8:	str	r1, [sp, #196]	; 0xc4
   17eac:	eor	r1, r1, r7
   17eb0:	lsl	r7, r5, #16
   17eb4:	lsr	r5, r5, #16
   17eb8:	orr	r3, r5, r1, lsl #16
   17ebc:	orr	r2, r7, r1, lsr #16
   17ec0:	adds	r7, r3, r4
   17ec4:	str	r2, [sp, #372]	; 0x174
   17ec8:	str	r3, [sp, #368]	; 0x170
   17ecc:	str	r2, [sp, #132]	; 0x84
   17ed0:	str	r3, [sp, #140]	; 0x8c
   17ed4:	ldr	r3, [sp, #204]	; 0xcc
   17ed8:	adc	r6, r2, r8
   17edc:	mov	r4, r7
   17ee0:	eor	r0, r7, r0
   17ee4:	str	r7, [sp, #152]	; 0x98
   17ee8:	ldr	r2, [sp, #64]	; 0x40
   17eec:	eor	r1, r6, sl
   17ef0:	mov	r5, r6
   17ef4:	str	r6, [sp, #160]	; 0xa0
   17ef8:	ldr	sl, [sp, #88]	; 0x58
   17efc:	str	r4, [sp, #336]	; 0x150
   17f00:	lsl	r7, r1, #1
   17f04:	str	r5, [sp, #340]	; 0x154
   17f08:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17f0c:	orr	r7, r7, r0, lsr #31
   17f10:	lsl	r0, r0, #1
   17f14:	orr	r6, r0, r1, lsr #31
   17f18:	ldr	r0, [sp, #92]	; 0x5c
   17f1c:	ldr	r1, [sp, #200]	; 0xc8
   17f20:	str	r7, [sp, #168]	; 0xa8
   17f24:	str	r7, [sp, #308]	; 0x134
   17f28:	ldr	r7, [fp, #-96]	; 0xffffffa0
   17f2c:	str	r6, [sp, #176]	; 0xb0
   17f30:	str	r6, [sp, #304]	; 0x130
   17f34:	adds	r0, r0, ip
   17f38:	adc	r1, r1, sl
   17f3c:	adds	r0, r0, r7
   17f40:	ldr	r7, [sp, #156]	; 0x9c
   17f44:	adc	r1, r1, r5
   17f48:	eor	r5, r0, r2
   17f4c:	eor	r9, r1, r9
   17f50:	adds	r8, r9, r7
   17f54:	ldr	r7, [sp, #164]	; 0xa4
   17f58:	adc	r2, r5, r7
   17f5c:	eor	r7, r8, ip
   17f60:	adds	r0, r3, r0
   17f64:	ldr	r3, [sp, #68]	; 0x44
   17f68:	lsl	r6, r7, #8
   17f6c:	eor	r4, r2, sl
   17f70:	lsr	r7, r7, #24
   17f74:	orr	r6, r6, r4, lsr #24
   17f78:	orr	r4, r7, r4, lsl #8
   17f7c:	adc	r1, r3, r1
   17f80:	adds	r3, r0, r4
   17f84:	adc	r0, r1, r6
   17f88:	eor	r1, r3, r9
   17f8c:	str	r3, [sp, #88]	; 0x58
   17f90:	str	r0, [sp, #92]	; 0x5c
   17f94:	eor	r0, r0, r5
   17f98:	lsl	r5, r1, #16
   17f9c:	lsr	r1, r1, #16
   17fa0:	orr	r7, r5, r0, lsr #16
   17fa4:	orr	r0, r1, r0, lsl #16
   17fa8:	ldr	r5, [sp, #96]	; 0x60
   17fac:	adds	r1, r0, r8
   17fb0:	str	r0, [sp, #204]	; 0xcc
   17fb4:	str	r7, [sp, #200]	; 0xc8
   17fb8:	adc	r0, r7, r2
   17fbc:	str	r1, [sp, #208]	; 0xd0
   17fc0:	eor	r1, r1, r4
   17fc4:	ldr	r2, [sp, #196]	; 0xc4
   17fc8:	str	r0, [sp, #220]	; 0xdc
   17fcc:	eor	r0, r0, r6
   17fd0:	lsl	r7, r0, #1
   17fd4:	orr	r8, r7, r1, lsr #31
   17fd8:	lsl	r1, r1, #1
   17fdc:	ldr	r7, [sp, #108]	; 0x6c
   17fe0:	orr	sl, r1, r0, lsr #31
   17fe4:	ldr	r0, [sp, #260]	; 0x104
   17fe8:	ldr	r1, [sp, #256]	; 0x100
   17fec:	adds	r0, lr, r0
   17ff0:	adc	r1, r2, r1
   17ff4:	adds	r0, r0, sl
   17ff8:	ldr	r2, [sp, #112]	; 0x70
   17ffc:	str	r0, [sp, #164]	; 0xa4
   18000:	adc	r0, r1, r8
   18004:	ldr	r1, [sp, #72]	; 0x48
   18008:	str	r0, [sp, #156]	; 0x9c
   1800c:	ldr	r0, [sp, #244]	; 0xf4
   18010:	adds	r0, r1, r0
   18014:	ldr	r1, [sp, #240]	; 0xf0
   18018:	adc	r1, r2, r1
   1801c:	adds	r2, r0, r5
   18020:	ldr	r0, [sp, #180]	; 0xb4
   18024:	adc	r1, r1, r7
   18028:	eor	ip, r1, r0
   1802c:	ldr	r0, [sp, #184]	; 0xb8
   18030:	eor	r3, r2, r0
   18034:	ldr	r0, [sp, #124]	; 0x7c
   18038:	adds	r6, ip, r0
   1803c:	ldr	r0, [sp, #128]	; 0x80
   18040:	adc	r9, r3, r0
   18044:	eor	r0, r6, r5
   18048:	lsl	lr, r0, #8
   1804c:	eor	r7, r9, r7
   18050:	lsr	r0, r0, #24
   18054:	orr	r5, lr, r7, lsr #24
   18058:	orr	r7, r0, r7, lsl #8
   1805c:	ldr	r0, [sp, #216]	; 0xd8
   18060:	str	r5, [sp, #68]	; 0x44
   18064:	str	r7, [sp, #80]	; 0x50
   18068:	adds	r0, r2, r0
   1806c:	ldr	r2, [sp, #212]	; 0xd4
   18070:	adc	r1, r1, r2
   18074:	adds	r2, r0, r7
   18078:	adc	r0, r1, r5
   1807c:	eor	r1, r2, ip
   18080:	str	r2, [sp, #96]	; 0x60
   18084:	str	r0, [sp, #108]	; 0x6c
   18088:	lsl	r2, r1, #16
   1808c:	eor	r0, r0, r3
   18090:	lsr	r1, r1, #16
   18094:	orr	r5, r2, r0, lsr #16
   18098:	orr	r0, r1, r0, lsl #16
   1809c:	ldr	r1, [sp, #188]	; 0xbc
   180a0:	ldr	r2, [sp, #192]	; 0xc0
   180a4:	adds	ip, r0, r6
   180a8:	str	r0, [sp, #196]	; 0xc4
   180ac:	ldr	r0, [sp, #228]	; 0xe4
   180b0:	str	r5, [sp, #112]	; 0x70
   180b4:	adc	r4, r5, r9
   180b8:	ldr	r9, [sp, #136]	; 0x88
   180bc:	str	ip, [sp, #64]	; 0x40
   180c0:	str	r4, [sp, #60]	; 0x3c
   180c4:	adds	r0, r1, r0
   180c8:	ldr	r1, [sp, #224]	; 0xe0
   180cc:	adc	r6, r2, r1
   180d0:	ldr	r1, [sp, #84]	; 0x54
   180d4:	adds	r2, r0, r9
   180d8:	ldr	r0, [sp, #144]	; 0x90
   180dc:	adc	r6, r6, r1
   180e0:	eor	lr, r6, r0
   180e4:	ldr	r0, [sp, #148]	; 0x94
   180e8:	eor	r3, r2, r0
   180ec:	ldr	r0, [sp, #116]	; 0x74
   180f0:	adds	r7, lr, r0
   180f4:	ldr	r0, [sp, #120]	; 0x78
   180f8:	str	r7, [sp, #72]	; 0x48
   180fc:	adc	r0, r3, r0
   18100:	str	r0, [sp, #144]	; 0x90
   18104:	eor	r1, r0, r1
   18108:	eor	r0, r7, r9
   1810c:	lsl	r9, r0, #8
   18110:	lsr	r0, r0, #24
   18114:	orr	r7, r0, r1, lsl #8
   18118:	ldr	r0, [sp, #236]	; 0xec
   1811c:	orr	r9, r9, r1, lsr #24
   18120:	ldr	r1, [sp, #232]	; 0xe8
   18124:	str	r9, [sp, #76]	; 0x4c
   18128:	str	r7, [sp, #116]	; 0x74
   1812c:	adds	r0, r2, r0
   18130:	adc	r1, r6, r1
   18134:	adds	r2, r0, r7
   18138:	ldr	r6, [sp, #164]	; 0xa4
   1813c:	adc	r0, r1, r9
   18140:	eor	r1, r2, lr
   18144:	str	r2, [sp, #124]	; 0x7c
   18148:	str	r0, [sp, #128]	; 0x80
   1814c:	lsr	r2, r1, #16
   18150:	eor	r0, r0, r3
   18154:	lsl	r1, r1, #16
   18158:	orr	r9, r1, r0, lsr #16
   1815c:	ldr	r1, [sp, #156]	; 0x9c
   18160:	orr	r2, r2, r0, lsl #16
   18164:	str	r2, [sp, #120]	; 0x78
   18168:	eor	r2, r6, r2
   1816c:	eor	r3, r1, r9
   18170:	adds	lr, r3, ip
   18174:	adc	ip, r2, r4
   18178:	eor	r0, lr, sl
   1817c:	lsl	r7, r0, #8
   18180:	eor	r4, ip, r8
   18184:	lsr	r0, r0, #24
   18188:	orr	r0, r0, r4, lsl #8
   1818c:	orr	r7, r7, r4, lsr #24
   18190:	ldr	r4, [sp, #200]	; 0xc8
   18194:	adds	sl, r0, r6
   18198:	adc	r8, r7, r1
   1819c:	str	r4, [sp, #380]	; 0x17c
   181a0:	ldr	r4, [sp, #204]	; 0xcc
   181a4:	str	r4, [sp, #376]	; 0x178
   181a8:	str	r5, [sp, #388]	; 0x184
   181ac:	ldr	r5, [sp, #196]	; 0xc4
   181b0:	ldr	r4, [sp, #208]	; 0xd0
   181b4:	str	r5, [sp, #384]	; 0x180
   181b8:	str	r4, [sp, #344]	; 0x158
   181bc:	ldr	r4, [sp, #220]	; 0xdc
   181c0:	ldr	r5, [fp, #-68]	; 0xffffffbc
   181c4:	str	r4, [sp, #348]	; 0x15c
   181c8:	ldr	r4, [fp, #-72]	; 0xffffffb8
   181cc:	adds	r4, sl, r4
   181d0:	adc	r5, r8, r5
   181d4:	eor	r1, r4, r3
   181d8:	str	r4, [sp, #180]	; 0xb4
   181dc:	lsl	r4, r1, #16
   181e0:	eor	r2, r5, r2
   181e4:	lsr	r1, r1, #16
   181e8:	str	r5, [sp, #184]	; 0xb8
   181ec:	orr	r1, r1, r2, lsl #16
   181f0:	orr	r4, r4, r2, lsr #16
   181f4:	adds	r2, r1, lr
   181f8:	mov	r8, r1
   181fc:	str	r1, [sp, #148]	; 0x94
   18200:	str	r4, [sp, #396]	; 0x18c
   18204:	str	r4, [sp, #136]	; 0x88
   18208:	adc	r3, r4, ip
   1820c:	eor	r0, r2, r0
   18210:	mov	r5, r2
   18214:	str	r2, [sp, #188]	; 0xbc
   18218:	str	r8, [sp, #392]	; 0x188
   1821c:	ldr	r4, [sp, #140]	; 0x8c
   18220:	eor	r1, r3, r7
   18224:	str	r5, [sp, #352]	; 0x160
   18228:	str	r3, [sp, #356]	; 0x164
   1822c:	str	r3, [sp, #192]	; 0xc0
   18230:	ldr	r5, [sp, #120]	; 0x78
   18234:	lsl	r2, r1, #1
   18238:	orr	r6, r2, r0, lsr #31
   1823c:	lsl	r0, r0, #1
   18240:	ldr	r2, [sp, #64]	; 0x40
   18244:	orr	r7, r0, r1, lsr #31
   18248:	ldr	r0, [sp, #68]	; 0x44
   1824c:	ldr	r1, [sp, #60]	; 0x3c
   18250:	str	r6, [sp, #156]	; 0x9c
   18254:	str	r6, [sp, #316]	; 0x13c
   18258:	ldr	r6, [fp, #-84]	; 0xffffffac
   1825c:	str	r7, [sp, #164]	; 0xa4
   18260:	str	r7, [sp, #312]	; 0x138
   18264:	ldr	r7, [fp, #-88]	; 0xffffffa8
   18268:	eor	r0, r1, r0
   1826c:	ldr	r1, [sp, #80]	; 0x50
   18270:	eor	r1, r2, r1
   18274:	lsl	r2, r0, #1
   18278:	orr	r2, r2, r1, lsr #31
   1827c:	lsl	r1, r1, #1
   18280:	orr	r0, r1, r0, lsr #31
   18284:	ldr	r1, [sp, #88]	; 0x58
   18288:	adds	sl, r1, r0
   1828c:	ldr	r1, [sp, #92]	; 0x5c
   18290:	adc	ip, r1, r2
   18294:	adds	r1, sl, r7
   18298:	ldr	r7, [sp, #132]	; 0x84
   1829c:	adc	r3, ip, r6
   182a0:	ldr	r6, [sp, #72]	; 0x48
   182a4:	eor	r7, r3, r7
   182a8:	adds	ip, r5, r6
   182ac:	ldr	r6, [sp, #144]	; 0x90
   182b0:	eor	r5, r1, r4
   182b4:	adc	lr, r9, r6
   182b8:	adds	r6, r7, ip
   182bc:	adc	r8, r5, lr
   182c0:	eor	r0, r6, r0
   182c4:	lsl	r4, r0, #8
   182c8:	eor	r2, r8, r2
   182cc:	lsr	r0, r0, #24
   182d0:	orr	r4, r4, r2, lsr #24
   182d4:	orr	r0, r0, r2, lsl #8
   182d8:	ldr	r2, [sp, #252]	; 0xfc
   182dc:	adds	r1, r1, r2
   182e0:	ldr	r2, [sp, #248]	; 0xf8
   182e4:	adc	r2, r3, r2
   182e8:	adds	r3, r1, r0
   182ec:	adc	r1, r2, r4
   182f0:	eor	r2, r3, r7
   182f4:	str	r3, [sp, #120]	; 0x78
   182f8:	str	r1, [sp, #132]	; 0x84
   182fc:	lsl	r3, r2, #16
   18300:	eor	r1, r1, r5
   18304:	lsr	r2, r2, #16
   18308:	orr	r3, r3, r1, lsr #16
   1830c:	orr	r1, r2, r1, lsl #16
   18310:	adds	r2, r1, r6
   18314:	str	r3, [sp, #80]	; 0x50
   18318:	str	r1, [sp, #92]	; 0x5c
   1831c:	adc	r3, r3, r8
   18320:	mov	r7, r2
   18324:	eor	r0, r2, r0
   18328:	str	r2, [sp, #84]	; 0x54
   1832c:	eor	r1, r3, r4
   18330:	mov	r6, r3
   18334:	str	r3, [sp, #88]	; 0x58
   18338:	str	r7, [sp, #360]	; 0x168
   1833c:	ldr	r3, [sp, #108]	; 0x6c
   18340:	ldr	r7, [fp, #-136]	; 0xffffff78
   18344:	lsl	r2, r1, #1
   18348:	str	r6, [sp, #364]	; 0x16c
   1834c:	ldr	r6, [fp, #-132]	; 0xffffff7c
   18350:	orr	r5, r2, r0, lsr #31
   18354:	lsl	r0, r0, #1
   18358:	orr	r4, r0, r1, lsr #31
   1835c:	ldr	r0, [sp, #76]	; 0x4c
   18360:	ldr	r1, [sp, #116]	; 0x74
   18364:	str	r5, [sp, #140]	; 0x8c
   18368:	str	r5, [sp, #324]	; 0x144
   1836c:	ldr	r5, [sp, #152]	; 0x98
   18370:	str	r4, [sp, #144]	; 0x90
   18374:	str	r4, [sp, #320]	; 0x140
   18378:	eor	r0, lr, r0
   1837c:	eor	r1, ip, r1
   18380:	ldr	lr, [fp, #-156]	; 0xffffff64
   18384:	lsl	r2, r0, #1
   18388:	orr	r2, r2, r1, lsr #31
   1838c:	lsl	r1, r1, #1
   18390:	orr	r0, r1, r0, lsr #31
   18394:	ldr	r1, [sp, #96]	; 0x60
   18398:	adds	r1, r0, r1
   1839c:	adc	r3, r2, r3
   183a0:	adds	r1, r1, r7
   183a4:	ldr	r7, [sp, #200]	; 0xc8
   183a8:	adc	r3, r3, r6
   183ac:	ldr	r6, [sp, #204]	; 0xcc
   183b0:	eor	r7, r3, r7
   183b4:	adds	r4, r7, r5
   183b8:	ldr	r5, [sp, #160]	; 0xa0
   183bc:	eor	r6, r1, r6
   183c0:	eor	r0, r4, r0
   183c4:	adc	ip, r6, r5
   183c8:	lsl	r5, r0, #8
   183cc:	lsr	r0, r0, #24
   183d0:	eor	r2, ip, r2
   183d4:	orr	r5, r5, r2, lsr #24
   183d8:	orr	r0, r0, r2, lsl #8
   183dc:	ldr	r2, [sp, #268]	; 0x10c
   183e0:	adds	r1, r1, r2
   183e4:	ldr	r2, [sp, #264]	; 0x108
   183e8:	adc	r2, r3, r2
   183ec:	adds	r3, r1, r0
   183f0:	adc	r1, r2, r5
   183f4:	eor	r2, r3, r7
   183f8:	str	r3, [sp, #200]	; 0xc8
   183fc:	str	r1, [sp, #204]	; 0xcc
   18400:	lsl	r3, r2, #16
   18404:	eor	r1, r1, r6
   18408:	lsr	r2, r2, #16
   1840c:	orr	r3, r3, r1, lsr #16
   18410:	orr	r1, r2, r1, lsl #16
   18414:	adds	r2, r1, r4
   18418:	str	r1, [sp, #116]	; 0x74
   1841c:	str	r3, [sp, #96]	; 0x60
   18420:	ldr	r4, [fp, #-160]	; 0xffffff60
   18424:	adc	r9, r3, ip
   18428:	str	r2, [sp, #160]	; 0xa0
   1842c:	eor	r0, r2, r0
   18430:	ldr	r3, [sp, #128]	; 0x80
   18434:	eor	r1, r9, r5
   18438:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1843c:	lsl	r2, r1, #1
   18440:	orr	r7, r2, r0, lsr #31
   18444:	lsl	r0, r0, #1
   18448:	orr	r6, r0, r1, lsr #31
   1844c:	ldr	r0, [sp, #176]	; 0xb0
   18450:	ldr	r1, [sp, #124]	; 0x7c
   18454:	str	r7, [sp, #68]	; 0x44
   18458:	str	r7, [sp, #332]	; 0x14c
   1845c:	ldr	r7, [fp, #-52]	; 0xffffffcc
   18460:	str	r6, [sp, #72]	; 0x48
   18464:	str	r6, [sp, #328]	; 0x148
   18468:	ldr	r6, [sp, #208]	; 0xd0
   1846c:	adds	r2, r0, r1
   18470:	ldr	r1, [sp, #168]	; 0xa8
   18474:	adc	r3, r1, r3
   18478:	adds	r2, r2, r5
   1847c:	adc	r3, r3, r7
   18480:	ldr	r7, [sp, #112]	; 0x70
   18484:	eor	r5, r3, r7
   18488:	ldr	r7, [sp, #196]	; 0xc4
   1848c:	adds	r8, r5, r6
   18490:	ldr	r6, [sp, #220]	; 0xdc
   18494:	eor	r0, r8, r0
   18498:	lsl	sl, r0, #8
   1849c:	lsr	r0, r0, #24
   184a0:	eor	r7, r2, r7
   184a4:	adc	ip, r7, r6
   184a8:	eor	r1, ip, r1
   184ac:	orr	r0, r0, r1, lsl #8
   184b0:	orr	sl, sl, r1, lsr #24
   184b4:	adds	r1, r4, r2
   184b8:	adc	r3, lr, r3
   184bc:	adds	r2, r1, r0
   184c0:	adc	r3, r3, sl
   184c4:	eor	r5, r2, r5
   184c8:	eor	r1, r3, r7
   184cc:	lsl	r7, r5, #16
   184d0:	lsr	r5, r5, #16
   184d4:	orr	r6, r7, r1, lsr #16
   184d8:	orr	r1, r5, r1, lsl #16
   184dc:	ldr	r7, [sp, #184]	; 0xb8
   184e0:	adds	r5, r1, r8
   184e4:	str	r1, [sp, #220]	; 0xdc
   184e8:	str	r6, [sp, #208]	; 0xd0
   184ec:	adc	r1, r6, ip
   184f0:	str	r5, [sp, #76]	; 0x4c
   184f4:	eor	r0, r5, r0
   184f8:	ldr	r6, [sp, #160]	; 0xa0
   184fc:	str	r1, [sp, #196]	; 0xc4
   18500:	eor	r1, r1, sl
   18504:	lsl	r5, r1, #1
   18508:	orr	r5, r5, r0, lsr #31
   1850c:	lsl	r0, r0, #1
   18510:	orr	r0, r0, r1, lsr #31
   18514:	ldr	r1, [sp, #180]	; 0xb4
   18518:	adds	r1, r4, r1
   1851c:	adc	r4, lr, r7
   18520:	ldr	r7, [sp, #80]	; 0x50
   18524:	adds	r1, r1, r0
   18528:	adc	r4, r4, r5
   1852c:	eor	ip, r4, r7
   18530:	ldr	r7, [sp, #92]	; 0x5c
   18534:	adds	sl, ip, r6
   18538:	eor	r0, sl, r0
   1853c:	eor	lr, r1, r7
   18540:	lsl	r7, r0, #8
   18544:	lsr	r0, r0, #24
   18548:	adc	r9, lr, r9
   1854c:	eor	r5, r9, r5
   18550:	orr	r7, r7, r5, lsr #24
   18554:	orr	r0, r0, r5, lsl #8
   18558:	ldr	r5, [sp, #228]	; 0xe4
   1855c:	adds	r1, r1, r5
   18560:	ldr	r5, [sp, #224]	; 0xe0
   18564:	adc	r4, r4, r5
   18568:	adds	r5, r1, r0
   1856c:	str	r5, [sp, #112]	; 0x70
   18570:	adc	r1, r4, r7
   18574:	eor	r5, r5, ip
   18578:	str	r1, [sp, #160]	; 0xa0
   1857c:	lsl	r4, r5, #16
   18580:	eor	r1, r1, lr
   18584:	lsr	r5, r5, #16
   18588:	orr	r4, r4, r1, lsr #16
   1858c:	orr	r1, r5, r1, lsl #16
   18590:	adds	r6, r1, sl
   18594:	mov	sl, r1
   18598:	str	r1, [sp, #128]	; 0x80
   1859c:	str	r4, [sp, #372]	; 0x174
   185a0:	str	r4, [sp, #124]	; 0x7c
   185a4:	adc	r5, r4, r9
   185a8:	eor	r0, r6, r0
   185ac:	str	sl, [sp, #368]	; 0x170
   185b0:	sub	sl, fp, #144	; 0x90
   185b4:	str	r6, [sp, #180]	; 0xb4
   185b8:	str	r6, [sp, #336]	; 0x150
   185bc:	ldr	r6, [sp, #116]	; 0x74
   185c0:	eor	r1, r5, r7
   185c4:	mov	lr, r5
   185c8:	str	r5, [sp, #184]	; 0xb8
   185cc:	ldr	r5, [sp, #72]	; 0x48
   185d0:	lsl	r7, r1, #1
   185d4:	str	lr, [sp, #340]	; 0x154
   185d8:	orr	r9, r7, r0, lsr #31
   185dc:	lsl	r0, r0, #1
   185e0:	orr	r8, r0, r1, lsr #31
   185e4:	ldr	r0, [sp, #216]	; 0xd8
   185e8:	ldr	r1, [sp, #212]	; 0xd4
   185ec:	str	r9, [sp, #44]	; 0x2c
   185f0:	str	r9, [sp, #308]	; 0x134
   185f4:	str	r8, [sp, #56]	; 0x38
   185f8:	str	r8, [sp, #304]	; 0x130
   185fc:	adds	r7, r5, r0
   18600:	ldr	r0, [sp, #68]	; 0x44
   18604:	adc	r1, r0, r1
   18608:	adds	ip, r7, r2
   1860c:	ldr	r2, [sp, #136]	; 0x88
   18610:	ldr	r7, [sp, #84]	; 0x54
   18614:	adc	r1, r1, r3
   18618:	eor	r3, r1, r2
   1861c:	ldr	r2, [sp, #148]	; 0x94
   18620:	str	r3, [sp, #108]	; 0x6c
   18624:	adds	r3, r3, r7
   18628:	ldr	r7, [sp, #88]	; 0x58
   1862c:	str	r3, [sp, #148]	; 0x94
   18630:	eor	r3, r3, r5
   18634:	ldr	r5, [sp, #164]	; 0xa4
   18638:	eor	r2, ip, r2
   1863c:	str	r2, [sp, #92]	; 0x5c
   18640:	adc	r2, r2, r7
   18644:	lsl	r7, r3, #8
   18648:	lsr	r3, r3, #24
   1864c:	str	r2, [sp, #152]	; 0x98
   18650:	eor	r2, r2, r0
   18654:	orr	r7, r7, r2, lsr #24
   18658:	orr	r3, r3, r2, lsl #8
   1865c:	ldr	r2, [sp, #244]	; 0xf4
   18660:	str	r3, [sp, #176]	; 0xb0
   18664:	str	r7, [sp, #168]	; 0xa8
   18668:	adds	r0, ip, r2
   1866c:	ldr	r2, [sp, #240]	; 0xf0
   18670:	adc	r1, r1, r2
   18674:	adds	r2, r0, r3
   18678:	ldr	r0, [sp, #252]	; 0xfc
   1867c:	adc	r3, r1, r7
   18680:	ldr	r1, [sp, #248]	; 0xf8
   18684:	str	r2, [sp, #84]	; 0x54
   18688:	ldr	r7, [fp, #-132]	; 0xffffff7c
   1868c:	str	r3, [sp, #80]	; 0x50
   18690:	adds	r0, r2, r0
   18694:	adc	r1, r3, r1
   18698:	adds	r0, r0, r8
   1869c:	ldm	sl, {r2, r3, sl}
   186a0:	str	r0, [sp, #68]	; 0x44
   186a4:	adc	r0, r1, r9
   186a8:	ldr	r1, [sp, #132]	; 0x84
   186ac:	str	r0, [sp, #60]	; 0x3c
   186b0:	ldr	r0, [sp, #120]	; 0x78
   186b4:	adds	ip, r0, r5
   186b8:	ldr	r0, [sp, #156]	; 0x9c
   186bc:	adc	r1, r1, r0
   186c0:	adds	r2, ip, r2
   186c4:	adc	r1, r1, r3
   186c8:	ldr	r3, [sp, #96]	; 0x60
   186cc:	eor	r4, r2, r6
   186d0:	ldr	r6, [sp, #76]	; 0x4c
   186d4:	eor	r3, r1, r3
   186d8:	adds	ip, r3, r6
   186dc:	ldr	r6, [sp, #196]	; 0xc4
   186e0:	adc	r8, r4, r6
   186e4:	eor	lr, r8, r0
   186e8:	eor	r0, ip, r5
   186ec:	lsl	r6, r0, #8
   186f0:	lsr	r0, r0, #24
   186f4:	orr	r5, r6, lr, lsr #24
   186f8:	orr	r6, r0, lr, lsl #8
   186fc:	adds	r0, sl, r2
   18700:	adc	r1, r7, r1
   18704:	ldr	r7, [fp, #-128]	; 0xffffff80
   18708:	adds	r2, r0, r6
   1870c:	str	r6, [sp, #164]	; 0xa4
   18710:	ldr	r6, [sp, #144]	; 0x90
   18714:	str	r5, [sp, #64]	; 0x40
   18718:	adc	r0, r1, r5
   1871c:	eor	r1, r2, r3
   18720:	str	r2, [sp, #88]	; 0x58
   18724:	ldr	r3, [sp, #204]	; 0xcc
   18728:	str	r0, [sp, #96]	; 0x60
   1872c:	lsl	r2, r1, #16
   18730:	eor	r0, r0, r4
   18734:	lsr	r1, r1, #16
   18738:	orr	r4, r1, r0, lsl #16
   1873c:	orr	r2, r2, r0, lsr #16
   18740:	ldr	r0, [sp, #200]	; 0xc8
   18744:	adds	lr, r4, ip
   18748:	mov	r1, r2
   1874c:	str	r2, [sp, #136]	; 0x88
   18750:	str	r4, [sp, #132]	; 0x84
   18754:	str	r4, [sp, #376]	; 0x178
   18758:	ldr	r4, [fp, #-124]	; 0xffffff84
   1875c:	adc	r9, r2, r8
   18760:	ldr	r2, [sp, #140]	; 0x8c
   18764:	str	r1, [sp, #380]	; 0x17c
   18768:	str	lr, [sp, #344]	; 0x158
   1876c:	str	lr, [sp, #40]	; 0x28
   18770:	adds	r0, r0, r6
   18774:	str	r9, [sp, #348]	; 0x15c
   18778:	adc	r3, r3, r2
   1877c:	adds	r1, r0, r7
   18780:	ldr	r0, [sp, #208]	; 0xd0
   18784:	adc	r3, r3, r4
   18788:	eor	r4, r3, r0
   1878c:	ldr	r0, [sp, #220]	; 0xdc
   18790:	eor	r7, r1, r0
   18794:	ldr	r0, [sp, #188]	; 0xbc
   18798:	adds	r5, r4, r0
   1879c:	ldr	r0, [sp, #192]	; 0xc0
   187a0:	str	r5, [sp, #48]	; 0x30
   187a4:	adc	r0, r7, r0
   187a8:	str	r0, [sp, #52]	; 0x34
   187ac:	eor	r8, r0, r2
   187b0:	eor	r0, r5, r6
   187b4:	lsl	r6, r0, #8
   187b8:	lsr	r0, r0, #24
   187bc:	orr	r2, r0, r8, lsl #8
   187c0:	ldr	r0, [sp, #236]	; 0xec
   187c4:	orr	r6, r6, r8, lsr #24
   187c8:	str	r2, [sp, #76]	; 0x4c
   187cc:	str	r6, [sp, #72]	; 0x48
   187d0:	adds	r0, r1, r0
   187d4:	ldr	r1, [sp, #232]	; 0xe8
   187d8:	adc	r1, r3, r1
   187dc:	adds	r2, r0, r2
   187e0:	adc	r0, r1, r6
   187e4:	eor	r1, r2, r4
   187e8:	str	r2, [sp, #116]	; 0x74
   187ec:	str	r0, [sp, #120]	; 0x78
   187f0:	lsr	r3, r1, #16
   187f4:	eor	r0, r0, r7
   187f8:	lsl	r1, r1, #16
   187fc:	orr	r4, r1, r0, lsr #16
   18800:	ldr	r1, [sp, #60]	; 0x3c
   18804:	orr	sl, r3, r0, lsl #16
   18808:	ldr	r3, [sp, #68]	; 0x44
   1880c:	ldr	r0, [sp, #44]	; 0x2c
   18810:	str	r4, [sp, #388]	; 0x184
   18814:	str	sl, [sp, #384]	; 0x180
   18818:	eor	ip, r4, r1
   1881c:	eor	r2, sl, r3
   18820:	adds	r6, ip, lr
   18824:	mov	lr, r9
   18828:	adc	r7, r2, r9
   1882c:	eor	r9, r7, r0
   18830:	ldr	r0, [sp, #56]	; 0x38
   18834:	eor	r5, r6, r0
   18838:	ldr	r0, [sp, #260]	; 0x104
   1883c:	lsl	r8, r5, #8
   18840:	lsr	r5, r5, #24
   18844:	orr	r8, r8, r9, lsr #24
   18848:	orr	r5, r5, r9, lsl #8
   1884c:	adds	r9, r3, r0
   18850:	ldr	r0, [sp, #256]	; 0x100
   18854:	adc	r0, r1, r0
   18858:	adds	r3, r9, r5
   1885c:	adc	r0, r0, r8
   18860:	eor	r1, r3, ip
   18864:	str	r3, [sp, #200]	; 0xc8
   18868:	sub	ip, fp, #96	; 0x60
   1886c:	lsl	r3, r1, #16
   18870:	eor	r2, r0, r2
   18874:	lsr	r1, r1, #16
   18878:	str	r0, [sp, #204]	; 0xcc
   1887c:	orr	r1, r1, r2, lsl #16
   18880:	orr	r0, r3, r2, lsr #16
   18884:	str	r1, [sp, #196]	; 0xc4
   18888:	adds	r1, r1, r6
   1888c:	str	r0, [sp, #192]	; 0xc0
   18890:	adc	r0, r0, r7
   18894:	str	r1, [sp, #156]	; 0x9c
   18898:	eor	r1, r1, r5
   1889c:	str	r0, [sp, #188]	; 0xbc
   188a0:	eor	r0, r0, r8
   188a4:	lsl	r3, r0, #1
   188a8:	orr	r2, r3, r1, lsr #31
   188ac:	lsl	r1, r1, #1
   188b0:	orr	r0, r1, r0, lsr #31
   188b4:	ldr	r1, [sp, #164]	; 0xa4
   188b8:	str	r2, [sp, #220]	; 0xdc
   188bc:	ldr	r2, [sp, #40]	; 0x28
   188c0:	str	r0, [sp, #208]	; 0xd0
   188c4:	ldr	r0, [sp, #64]	; 0x40
   188c8:	eor	r1, r2, r1
   188cc:	ldr	r2, [fp, #-84]	; 0xffffffac
   188d0:	eor	r0, lr, r0
   188d4:	lsl	r3, r0, #1
   188d8:	orr	r6, r3, r1, lsr #31
   188dc:	lsl	r1, r1, #1
   188e0:	ldm	ip, {r3, r7, ip}
   188e4:	orr	r5, r1, r0, lsr #31
   188e8:	ldr	r0, [sp, #112]	; 0x70
   188ec:	ldr	r1, [sp, #160]	; 0xa0
   188f0:	str	r2, [sp, #164]	; 0xa4
   188f4:	ldr	r2, [sp, #48]	; 0x30
   188f8:	adds	r0, r5, r0
   188fc:	adc	r1, r6, r1
   18900:	adds	r0, r0, r3
   18904:	ldr	r3, [sp, #80]	; 0x50
   18908:	adc	r1, r1, r7
   1890c:	adds	r9, sl, r2
   18910:	ldr	r2, [sp, #52]	; 0x34
   18914:	ldr	r7, [sp, #84]	; 0x54
   18918:	adc	lr, r4, r2
   1891c:	ldr	r2, [sp, #92]	; 0x5c
   18920:	eor	r2, r3, r2
   18924:	ldr	r3, [sp, #108]	; 0x6c
   18928:	eor	r4, r7, r3
   1892c:	lsr	r7, r4, #16
   18930:	lsl	r4, r4, #16
   18934:	orr	r3, r7, r2, lsl #16
   18938:	orr	r2, r4, r2, lsr #16
   1893c:	eor	r4, r1, r2
   18940:	str	r3, [sp, #84]	; 0x54
   18944:	eor	r7, r0, r3
   18948:	ldr	r3, [sp, #164]	; 0xa4
   1894c:	str	r2, [sp, #92]	; 0x5c
   18950:	adds	sl, r4, r9
   18954:	adc	r2, r7, lr
   18958:	eor	r5, sl, r5
   1895c:	adds	r0, ip, r0
   18960:	lsl	r8, r5, #8
   18964:	eor	r6, r2, r6
   18968:	lsr	r5, r5, #24
   1896c:	orr	r8, r8, r6, lsr #24
   18970:	orr	r5, r5, r6, lsl #8
   18974:	ldr	r6, [sp, #252]	; 0xfc
   18978:	adc	r1, r3, r1
   1897c:	ldr	r3, [sp, #248]	; 0xf8
   18980:	adds	r0, r0, r5
   18984:	adc	r1, r1, r8
   18988:	adds	r6, r0, r6
   1898c:	eor	r0, r0, r4
   18990:	adc	ip, r1, r3
   18994:	ldr	r3, [sp, #208]	; 0xd0
   18998:	eor	r1, r1, r7
   1899c:	lsl	r7, r0, #16
   189a0:	lsr	r0, r0, #16
   189a4:	orr	r0, r0, r1, lsl #16
   189a8:	str	r0, [sp, #164]	; 0xa4
   189ac:	adds	r3, r6, r3
   189b0:	mov	r6, r0
   189b4:	str	r3, [sp, #248]	; 0xf8
   189b8:	ldr	r3, [sp, #220]	; 0xdc
   189bc:	str	r6, [sp, #392]	; 0x188
   189c0:	adc	r3, ip, r3
   189c4:	adds	r4, r0, sl
   189c8:	str	r3, [sp, #252]	; 0xfc
   189cc:	orr	r3, r7, r1, lsr #16
   189d0:	str	r4, [sp, #140]	; 0x8c
   189d4:	adc	r1, r3, r2
   189d8:	mov	r7, r3
   189dc:	str	r3, [sp, #160]	; 0xa0
   189e0:	eor	r0, r1, r8
   189e4:	mov	r8, r1
   189e8:	str	r1, [sp, #144]	; 0x90
   189ec:	eor	r1, r4, r5
   189f0:	mov	r5, r4
   189f4:	str	r7, [sp, #396]	; 0x18c
   189f8:	ldr	r7, [fp, #-80]	; 0xffffffb0
   189fc:	lsl	r2, r0, #1
   18a00:	str	r8, [sp, #356]	; 0x164
   18a04:	str	r5, [sp, #352]	; 0x160
   18a08:	orr	r4, r2, r1, lsr #31
   18a0c:	lsl	r1, r1, #1
   18a10:	orr	r3, r1, r0, lsr #31
   18a14:	ldr	r0, [sp, #72]	; 0x48
   18a18:	ldr	r1, [sp, #76]	; 0x4c
   18a1c:	str	r4, [sp, #108]	; 0x6c
   18a20:	str	r4, [sp, #316]	; 0x13c
   18a24:	str	r3, [sp, #112]	; 0x70
   18a28:	str	r3, [sp, #312]	; 0x138
   18a2c:	eor	r0, lr, r0
   18a30:	eor	r1, r9, r1
   18a34:	sub	lr, fp, #76	; 0x4c
   18a38:	lsl	r2, r0, #1
   18a3c:	ldm	lr, {r6, r8, lr}
   18a40:	orr	sl, r2, r1, lsr #31
   18a44:	lsl	r1, r1, #1
   18a48:	ldr	r2, [sp, #84]	; 0x54
   18a4c:	orr	ip, r1, r0, lsr #31
   18a50:	ldr	r0, [sp, #88]	; 0x58
   18a54:	adds	r1, ip, r0
   18a58:	ldr	r0, [sp, #96]	; 0x60
   18a5c:	adc	r0, sl, r0
   18a60:	adds	r1, r1, r7
   18a64:	adc	r3, r0, r6
   18a68:	ldr	r0, [sp, #124]	; 0x7c
   18a6c:	eor	r7, r3, r0
   18a70:	ldr	r0, [sp, #148]	; 0x94
   18a74:	adds	r4, r2, r0
   18a78:	ldr	r0, [sp, #152]	; 0x98
   18a7c:	ldr	r2, [sp, #92]	; 0x5c
   18a80:	str	r4, [sp, #124]	; 0x7c
   18a84:	adc	r9, r2, r0
   18a88:	ldr	r0, [sp, #128]	; 0x80
   18a8c:	adds	r2, r7, r4
   18a90:	eor	ip, r2, ip
   18a94:	lsr	r5, ip, #24
   18a98:	eor	r6, r1, r0
   18a9c:	adc	r0, r6, r9
   18aa0:	adds	r1, r8, r1
   18aa4:	eor	r4, r0, sl
   18aa8:	lsl	sl, ip, #8
   18aac:	adc	r3, lr, r3
   18ab0:	orr	sl, sl, r4, lsr #24
   18ab4:	orr	r4, r5, r4, lsl #8
   18ab8:	adds	r5, r1, r4
   18abc:	adc	r1, r3, sl
   18ac0:	eor	r3, r5, r7
   18ac4:	str	r5, [sp, #84]	; 0x54
   18ac8:	str	r1, [sp, #88]	; 0x58
   18acc:	lsl	r7, r3, #16
   18ad0:	eor	r1, r1, r6
   18ad4:	lsr	r3, r3, #16
   18ad8:	orr	r6, r7, r1, lsr #16
   18adc:	orr	r1, r3, r1, lsl #16
   18ae0:	ldr	r3, [sp, #264]	; 0x108
   18ae4:	adds	lr, r1, r2
   18ae8:	str	r1, [sp, #152]	; 0x98
   18aec:	ldr	r1, [sp, #252]	; 0xfc
   18af0:	adc	r8, r6, r0
   18af4:	str	lr, [sp, #128]	; 0x80
   18af8:	str	lr, [sp, #360]	; 0x168
   18afc:	eor	r0, r8, sl
   18b00:	str	r8, [sp, #148]	; 0x94
   18b04:	str	r8, [sp, #364]	; 0x16c
   18b08:	lsl	r2, r0, #1
   18b0c:	eor	r1, r6, r1
   18b10:	str	r1, [sp, #76]	; 0x4c
   18b14:	eor	r1, lr, r4
   18b18:	orr	r5, r2, r1, lsr #31
   18b1c:	lsl	r1, r1, #1
   18b20:	ldr	r2, [sp, #124]	; 0x7c
   18b24:	ldr	r8, [sp, #76]	; 0x4c
   18b28:	orr	ip, r1, r0, lsr #31
   18b2c:	ldr	r0, [sp, #168]	; 0xa8
   18b30:	ldr	r1, [sp, #176]	; 0xb0
   18b34:	str	r5, [sp, #96]	; 0x60
   18b38:	str	r5, [sp, #324]	; 0x144
   18b3c:	str	ip, [sp, #92]	; 0x5c
   18b40:	str	ip, [sp, #320]	; 0x140
   18b44:	eor	r0, r9, r0
   18b48:	eor	r1, r2, r1
   18b4c:	lsl	r2, r0, #1
   18b50:	orr	r2, r2, r1, lsr #31
   18b54:	lsl	r1, r1, #1
   18b58:	orr	r0, r1, r0, lsr #31
   18b5c:	ldr	r1, [sp, #268]	; 0x10c
   18b60:	adds	r1, r0, r1
   18b64:	adc	r4, r2, r3
   18b68:	ldr	r3, [sp, #116]	; 0x74
   18b6c:	adds	r1, r1, r3
   18b70:	ldr	r3, [sp, #120]	; 0x78
   18b74:	adc	r4, r4, r3
   18b78:	ldr	r3, [sp, #136]	; 0x88
   18b7c:	eor	r9, r4, r3
   18b80:	ldr	r3, [sp, #132]	; 0x84
   18b84:	eor	r6, r1, r3
   18b88:	ldr	r3, [sp, #180]	; 0xb4
   18b8c:	adds	sl, r9, r3
   18b90:	ldr	r3, [sp, #184]	; 0xb8
   18b94:	eor	r0, sl, r0
   18b98:	lsl	r7, r0, #8
   18b9c:	lsr	r0, r0, #24
   18ba0:	adc	r3, r6, r3
   18ba4:	eor	r2, r3, r2
   18ba8:	orr	r0, r0, r2, lsl #8
   18bac:	orr	r7, r7, r2, lsr #24
   18bb0:	str	r0, [sp, #176]	; 0xb0
   18bb4:	adds	r0, r0, r1
   18bb8:	str	r7, [sp, #168]	; 0xa8
   18bbc:	adc	r1, r7, r4
   18bc0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   18bc4:	ldr	r7, [fp, #-52]	; 0xffffffcc
   18bc8:	adds	r2, r0, r4
   18bcc:	adc	r0, r1, r7
   18bd0:	eor	r4, r2, r9
   18bd4:	str	r2, [sp, #116]	; 0x74
   18bd8:	str	r0, [sp, #120]	; 0x78
   18bdc:	lsl	r1, r4, #16
   18be0:	eor	r0, r0, r6
   18be4:	lsr	r4, r4, #16
   18be8:	orr	r1, r1, r0, lsr #16
   18bec:	orr	r0, r4, r0, lsl #16
   18bf0:	adds	r9, r0, sl
   18bf4:	str	r0, [sp, #184]	; 0xb8
   18bf8:	str	r1, [sp, #180]	; 0xb4
   18bfc:	ldr	r0, [sp, #152]	; 0x98
   18c00:	adc	r3, r1, r3
   18c04:	ldr	r1, [sp, #248]	; 0xf8
   18c08:	adds	sl, r9, r8
   18c0c:	eor	lr, r0, r1
   18c10:	ldr	r0, [sp, #220]	; 0xdc
   18c14:	adc	ip, r3, lr
   18c18:	eor	r6, ip, r0
   18c1c:	ldr	r0, [sp, #208]	; 0xd0
   18c20:	eor	r4, sl, r0
   18c24:	ldr	r0, [sp, #252]	; 0xfc
   18c28:	lsl	r7, r4, #8
   18c2c:	lsr	r4, r4, #24
   18c30:	orr	r4, r4, r6, lsl #8
   18c34:	orr	r7, r7, r6, lsr #24
   18c38:	adds	r1, r4, r1
   18c3c:	adc	r2, r7, r0
   18c40:	ldr	r0, [sp, #168]	; 0xa8
   18c44:	eor	r3, r3, r0
   18c48:	ldr	r0, [sp, #176]	; 0xb0
   18c4c:	lsl	r5, r3, #1
   18c50:	eor	r6, r9, r0
   18c54:	ldr	r9, [sp, #112]	; 0x70
   18c58:	orr	r0, r5, r6, lsr #31
   18c5c:	lsl	r6, r6, #1
   18c60:	ldr	r5, [fp, #-76]	; 0xffffffb4
   18c64:	orr	r3, r6, r3, lsr #31
   18c68:	str	r0, [sp, #124]	; 0x7c
   18c6c:	str	r0, [sp, #332]	; 0x14c
   18c70:	str	r3, [sp, #132]	; 0x84
   18c74:	str	r3, [sp, #328]	; 0x148
   18c78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18c7c:	adds	r0, r1, r3
   18c80:	ldr	r1, [sp, #84]	; 0x54
   18c84:	adc	r3, r2, r5
   18c88:	eor	r5, r0, r8
   18c8c:	str	r0, [sp, #80]	; 0x50
   18c90:	eor	r2, r3, lr
   18c94:	lsl	r6, r5, #16
   18c98:	orr	r0, r6, r2, lsr #16
   18c9c:	lsr	r6, r5, #16
   18ca0:	orr	r2, r6, r2, lsl #16
   18ca4:	str	r0, [sp, #372]	; 0x174
   18ca8:	str	r0, [sp, #152]	; 0x98
   18cac:	adds	r5, r2, sl
   18cb0:	mov	lr, r2
   18cb4:	str	r2, [sp, #168]	; 0xa8
   18cb8:	adc	r2, r0, ip
   18cbc:	str	lr, [sp, #368]	; 0x170
   18cc0:	adds	r8, r1, r9
   18cc4:	ldr	r1, [sp, #108]	; 0x6c
   18cc8:	str	r5, [sp, #336]	; 0x150
   18ccc:	ldr	lr, [fp, #-96]	; 0xffffffa0
   18cd0:	str	r5, [sp, #220]	; 0xdc
   18cd4:	eor	r6, r2, r7
   18cd8:	mov	ip, r2
   18cdc:	str	r2, [sp, #208]	; 0xd0
   18ce0:	eor	r2, r5, r4
   18ce4:	lsl	r7, r6, #1
   18ce8:	str	ip, [sp, #340]	; 0x154
   18cec:	ldr	ip, [fp, #-92]	; 0xffffffa4
   18cf0:	orr	r4, r7, r2, lsr #31
   18cf4:	lsl	r2, r2, #1
   18cf8:	orr	r7, r2, r6, lsr #31
   18cfc:	ldr	r2, [sp, #88]	; 0x58
   18d00:	ldr	r6, [fp, #-124]	; 0xffffff84
   18d04:	str	r4, [sp, #252]	; 0xfc
   18d08:	str	r4, [sp, #308]	; 0x134
   18d0c:	ldr	r4, [sp, #180]	; 0xb4
   18d10:	str	r7, [sp, #248]	; 0xf8
   18d14:	str	r7, [sp, #304]	; 0x130
   18d18:	ldr	r7, [fp, #-128]	; 0xffffff80
   18d1c:	adc	r2, r2, r1
   18d20:	adds	r0, r8, r7
   18d24:	adc	r2, r2, r6
   18d28:	eor	r7, r2, r4
   18d2c:	ldr	r4, [sp, #184]	; 0xb8
   18d30:	eor	r6, r0, r4
   18d34:	ldr	r4, [sp, #156]	; 0x9c
   18d38:	adds	r8, r7, r4
   18d3c:	ldr	r4, [sp, #188]	; 0xbc
   18d40:	eor	r5, r8, r9
   18d44:	lsl	r9, r5, #8
   18d48:	lsr	r5, r5, #24
   18d4c:	adc	sl, r6, r4
   18d50:	adds	r0, lr, r0
   18d54:	eor	r4, sl, r1
   18d58:	adc	r2, ip, r2
   18d5c:	orr	r9, r9, r4, lsr #24
   18d60:	orr	r4, r5, r4, lsl #8
   18d64:	adds	r1, r0, r4
   18d68:	adc	r0, r2, r9
   18d6c:	eor	r2, r1, r7
   18d70:	str	r1, [sp, #136]	; 0x88
   18d74:	ldr	r1, [sp, #80]	; 0x50
   18d78:	str	r0, [sp, #156]	; 0x9c
   18d7c:	lsl	r7, r2, #16
   18d80:	eor	r0, r0, r6
   18d84:	lsr	r2, r2, #16
   18d88:	orr	r6, r7, r0, lsr #16
   18d8c:	orr	r0, r2, r0, lsl #16
   18d90:	adds	r7, r0, r8
   18d94:	mov	ip, r0
   18d98:	str	r0, [sp, #180]	; 0xb4
   18d9c:	ldr	r8, [sp, #92]	; 0x5c
   18da0:	str	r6, [sp, #176]	; 0xb0
   18da4:	str	r6, [sp, #380]	; 0x17c
   18da8:	adc	r2, r6, sl
   18dac:	mov	r5, r7
   18db0:	str	r7, [sp, #184]	; 0xb8
   18db4:	str	ip, [sp, #376]	; 0x178
   18db8:	eor	r0, r2, r9
   18dbc:	mov	lr, r2
   18dc0:	str	r2, [sp, #188]	; 0xbc
   18dc4:	eor	r2, r7, r4
   18dc8:	ldr	r4, [sp, #96]	; 0x60
   18dcc:	str	r5, [sp, #344]	; 0x158
   18dd0:	lsl	r7, r0, #1
   18dd4:	str	lr, [sp, #348]	; 0x15c
   18dd8:	orr	sl, r7, r2, lsr #31
   18ddc:	lsl	r2, r2, #1
   18de0:	ldr	r7, [sp, #140]	; 0x8c
   18de4:	orr	r9, r2, r0, lsr #31
   18de8:	ldr	r0, [sp, #228]	; 0xe4
   18dec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18df0:	adds	r0, r1, r0
   18df4:	ldr	r1, [sp, #224]	; 0xe0
   18df8:	adc	r1, r3, r1
   18dfc:	adds	r0, r0, r9
   18e00:	ldr	r3, [fp, #-84]	; 0xffffffac
   18e04:	str	r0, [sp, #112]	; 0x70
   18e08:	adc	r0, r1, sl
   18e0c:	ldr	r1, [sp, #120]	; 0x78
   18e10:	str	r0, [sp, #108]	; 0x6c
   18e14:	ldr	r0, [sp, #116]	; 0x74
   18e18:	adds	r0, r8, r0
   18e1c:	adc	r1, r4, r1
   18e20:	adds	r0, r0, r2
   18e24:	ldr	r2, [sp, #192]	; 0xc0
   18e28:	adc	r1, r1, r3
   18e2c:	ldr	r3, [sp, #196]	; 0xc4
   18e30:	eor	r2, r1, r2
   18e34:	adds	ip, r2, r7
   18e38:	ldr	r7, [sp, #144]	; 0x90
   18e3c:	eor	r3, r0, r3
   18e40:	adc	r6, r3, r7
   18e44:	eor	r7, r6, r4
   18e48:	eor	r4, ip, r8
   18e4c:	lsl	r5, r4, #8
   18e50:	lsr	r4, r4, #24
   18e54:	orr	r5, r5, r7, lsr #24
   18e58:	orr	r4, r4, r7, lsl #8
   18e5c:	ldr	r7, [sp, #260]	; 0x104
   18e60:	str	r4, [sp, #192]	; 0xc0
   18e64:	str	r5, [sp, #140]	; 0x8c
   18e68:	adds	r0, r0, r7
   18e6c:	ldr	r7, [sp, #256]	; 0x100
   18e70:	adc	r1, r1, r7
   18e74:	adds	r7, r0, r4
   18e78:	adc	r0, r1, r5
   18e7c:	eor	r1, r7, r2
   18e80:	ldr	r5, [sp, #132]	; 0x84
   18e84:	str	r7, [sp, #196]	; 0xc4
   18e88:	ldr	r7, [sp, #124]	; 0x7c
   18e8c:	str	r0, [sp, #260]	; 0x104
   18e90:	lsl	r2, r1, #16
   18e94:	eor	r0, r0, r3
   18e98:	lsr	r1, r1, #16
   18e9c:	orr	r4, r1, r0, lsl #16
   18ea0:	orr	r3, r2, r0, lsr #16
   18ea4:	ldr	r0, [sp, #200]	; 0xc8
   18ea8:	ldr	r1, [sp, #204]	; 0xcc
   18eac:	adds	ip, r4, ip
   18eb0:	str	r3, [sp, #256]	; 0x100
   18eb4:	str	r3, [sp, #388]	; 0x184
   18eb8:	str	r4, [sp, #228]	; 0xe4
   18ebc:	str	r4, [sp, #384]	; 0x180
   18ec0:	adc	lr, r3, r6
   18ec4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18ec8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   18ecc:	adds	r0, r5, r0
   18ed0:	adc	r2, r7, r1
   18ed4:	adds	r1, r0, r3
   18ed8:	ldr	r0, [sp, #160]	; 0xa0
   18edc:	adc	r2, r2, r6
   18ee0:	eor	r6, r2, r0
   18ee4:	ldr	r0, [sp, #164]	; 0xa4
   18ee8:	eor	r3, r1, r0
   18eec:	ldr	r0, [sp, #128]	; 0x80
   18ef0:	adds	r4, r6, r0
   18ef4:	ldr	r0, [sp, #148]	; 0x94
   18ef8:	str	r4, [sp, #200]	; 0xc8
   18efc:	adc	r0, r3, r0
   18f00:	str	r0, [sp, #204]	; 0xcc
   18f04:	eor	r8, r0, r7
   18f08:	eor	r0, r4, r5
   18f0c:	lsl	r4, r0, #8
   18f10:	lsr	r0, r0, #24
   18f14:	orr	r5, r0, r8, lsl #8
   18f18:	ldr	r0, [sp, #216]	; 0xd8
   18f1c:	orr	r4, r4, r8, lsr #24
   18f20:	str	r5, [sp, #148]	; 0x94
   18f24:	str	r4, [sp, #144]	; 0x90
   18f28:	adds	r0, r1, r0
   18f2c:	ldr	r1, [sp, #212]	; 0xd4
   18f30:	adc	r1, r2, r1
   18f34:	adds	r2, r0, r5
   18f38:	ldr	r5, [sp, #112]	; 0x70
   18f3c:	adc	r0, r1, r4
   18f40:	eor	r1, r2, r6
   18f44:	str	r2, [sp, #216]	; 0xd8
   18f48:	str	r0, [sp, #224]	; 0xe0
   18f4c:	lsr	r2, r1, #16
   18f50:	eor	r0, r0, r3
   18f54:	lsl	r1, r1, #16
   18f58:	orr	r3, r2, r0, lsl #16
   18f5c:	orr	r2, r1, r0, lsr #16
   18f60:	ldr	r0, [sp, #108]	; 0x6c
   18f64:	str	r3, [sp, #212]	; 0xd4
   18f68:	eor	r3, r3, r5
   18f6c:	eor	r1, r2, r0
   18f70:	adds	r4, r1, ip
   18f74:	eor	r9, r4, r9
   18f78:	adc	r6, r3, lr
   18f7c:	eor	sl, r6, sl
   18f80:	lsr	r7, r9, #24
   18f84:	lsl	r8, r9, #8
   18f88:	orr	r9, r7, sl, lsl #8
   18f8c:	ldr	r7, [sp, #268]	; 0x10c
   18f90:	orr	r8, r8, sl, lsr #24
   18f94:	adds	r7, r5, r7
   18f98:	ldr	r5, [sp, #264]	; 0x108
   18f9c:	adc	sl, r0, r5
   18fa0:	adds	r7, r7, r9
   18fa4:	ldr	r5, [fp, #-160]	; 0xffffff60
   18fa8:	ldr	r0, [sp, #200]	; 0xc8
   18fac:	adc	sl, sl, r8
   18fb0:	eor	r1, r7, r1
   18fb4:	str	r7, [sp, #272]	; 0x110
   18fb8:	lsl	r7, r1, #16
   18fbc:	eor	r3, sl, r3
   18fc0:	lsr	r1, r1, #16
   18fc4:	str	sl, [sp, #276]	; 0x114
   18fc8:	orr	r1, r1, r3, lsl #16
   18fcc:	orr	r7, r7, r3, lsr #16
   18fd0:	str	r1, [sp, #392]	; 0x188
   18fd4:	adds	r1, r1, r4
   18fd8:	str	r7, [sp, #396]	; 0x18c
   18fdc:	adc	r3, r7, r6
   18fe0:	str	r1, [sp, #352]	; 0x160
   18fe4:	eor	r1, r1, r9
   18fe8:	ldr	r6, [sp, #156]	; 0x9c
   18fec:	str	r3, [sp, #356]	; 0x164
   18ff0:	eor	r3, r3, r8
   18ff4:	lsl	r4, r1, #1
   18ff8:	ldr	r8, [fp, #-140]	; 0xffffff74
   18ffc:	orr	r4, r4, r3, lsr #31
   19000:	lsl	r3, r3, #1
   19004:	orr	r1, r3, r1, lsr #31
   19008:	ldr	r3, [sp, #192]	; 0xc0
   1900c:	str	r4, [sp, #312]	; 0x138
   19010:	ldr	r4, [fp, #-156]	; 0xffffff64
   19014:	str	r1, [sp, #316]	; 0x13c
   19018:	ldr	r1, [sp, #140]	; 0x8c
   1901c:	eor	r3, ip, r3
   19020:	ldr	ip, [fp, #-144]	; 0xffffff70
   19024:	eor	r1, lr, r1
   19028:	lsl	r7, r1, #1
   1902c:	orr	r7, r7, r3, lsr #31
   19030:	lsl	r3, r3, #1
   19034:	orr	r1, r3, r1, lsr #31
   19038:	ldr	r3, [sp, #136]	; 0x88
   1903c:	adds	r3, r1, r3
   19040:	adc	r6, r7, r6
   19044:	adds	r3, r3, r5
   19048:	adc	r4, r6, r4
   1904c:	ldr	r6, [sp, #152]	; 0x98
   19050:	eor	r5, r4, r6
   19054:	ldr	r6, [sp, #212]	; 0xd4
   19058:	adds	lr, r6, r0
   1905c:	ldr	r0, [sp, #204]	; 0xcc
   19060:	adc	r9, r2, r0
   19064:	ldr	r0, [sp, #168]	; 0xa8
   19068:	adds	r2, r5, lr
   1906c:	eor	r1, r2, r1
   19070:	eor	r6, r3, r0
   19074:	lsl	r0, r1, #8
   19078:	lsr	r1, r1, #24
   1907c:	adc	sl, r6, r9
   19080:	adds	r3, ip, r3
   19084:	eor	r7, sl, r7
   19088:	orr	r1, r1, r7, lsl #8
   1908c:	orr	r0, r0, r7, lsr #24
   19090:	adc	r7, r8, r4
   19094:	adds	r4, r3, r1
   19098:	ldr	r3, [sp, #172]	; 0xac
   1909c:	adc	r7, r7, r0
   190a0:	str	r4, [sp, #200]	; 0xc8
   190a4:	str	r7, [sp, #192]	; 0xc0
   190a8:	stm	r3, {r4, r7}
   190ac:	eor	r3, r7, r6
   190b0:	eor	r7, r4, r5
   190b4:	lsl	r6, r7, #16
   190b8:	lsr	r7, r7, #16
   190bc:	orr	r5, r6, r3, lsr #16
   190c0:	orr	r3, r7, r3, lsl #16
   190c4:	adds	r2, r3, r2
   190c8:	mov	r6, r3
   190cc:	str	r3, [sp, #172]	; 0xac
   190d0:	mov	r7, r5
   190d4:	str	r5, [sp, #168]	; 0xa8
   190d8:	adc	r3, r5, sl
   190dc:	eor	r1, r2, r1
   190e0:	str	r2, [sp, #164]	; 0xa4
   190e4:	str	r7, [sp, #372]	; 0x174
   190e8:	ldr	r7, [fp, #-72]	; 0xffffffb8
   190ec:	str	r6, [sp, #368]	; 0x170
   190f0:	ldr	r6, [fp, #-68]	; 0xffffffbc
   190f4:	ldr	sl, [sp, #248]	; 0xf8
   190f8:	eor	r0, r3, r0
   190fc:	mov	r8, r3
   19100:	str	r3, [sp, #160]	; 0xa0
   19104:	mov	r3, r2
   19108:	lsl	r2, r0, #1
   1910c:	str	r3, [sp, #360]	; 0x168
   19110:	str	r8, [sp, #364]	; 0x16c
   19114:	orr	r5, r2, r1, lsr #31
   19118:	lsl	r1, r1, #1
   1911c:	orr	r4, r1, r0, lsr #31
   19120:	ldr	r0, [sp, #144]	; 0x90
   19124:	ldr	r1, [sp, #148]	; 0x94
   19128:	str	r5, [sp, #204]	; 0xcc
   1912c:	str	r5, [sp, #324]	; 0x144
   19130:	str	r4, [sp, #212]	; 0xd4
   19134:	str	r4, [sp, #320]	; 0x140
   19138:	eor	r0, r9, r0
   1913c:	eor	r1, lr, r1
   19140:	lsl	r2, r0, #1
   19144:	orr	ip, r2, r1, lsr #31
   19148:	lsl	r1, r1, #1
   1914c:	ldr	r2, [sp, #260]	; 0x104
   19150:	orr	r0, r1, r0, lsr #31
   19154:	ldr	r1, [sp, #196]	; 0xc4
   19158:	adds	r1, r0, r1
   1915c:	adc	r2, ip, r2
   19160:	adds	r1, r1, r7
   19164:	adc	r3, r2, r6
   19168:	ldr	r2, [sp, #176]	; 0xb0
   1916c:	eor	r6, r3, r2
   19170:	ldr	r2, [sp, #180]	; 0xb4
   19174:	eor	r5, r1, r2
   19178:	ldr	r2, [sp, #220]	; 0xdc
   1917c:	adds	r4, r6, r2
   19180:	ldr	r2, [sp, #208]	; 0xd0
   19184:	eor	r0, r4, r0
   19188:	adc	lr, r5, r2
   1918c:	lsl	r2, r0, #8
   19190:	lsr	r0, r0, #24
   19194:	eor	r7, lr, ip
   19198:	orr	r2, r2, r7, lsr #24
   1919c:	orr	r0, r0, r7, lsl #8
   191a0:	ldr	r7, [sp, #244]	; 0xf4
   191a4:	adds	r1, r1, r7
   191a8:	ldr	r7, [sp, #240]	; 0xf0
   191ac:	adc	r3, r3, r7
   191b0:	adds	r7, r1, r0
   191b4:	adc	r1, r3, r2
   191b8:	eor	r3, r7, r6
   191bc:	str	r7, [sp, #264]	; 0x108
   191c0:	str	r1, [sp, #260]	; 0x104
   191c4:	lsl	r6, r3, #16
   191c8:	eor	r1, r1, r5
   191cc:	lsr	r3, r3, #16
   191d0:	orr	r9, r3, r1, lsl #16
   191d4:	orr	r7, r6, r1, lsr #16
   191d8:	adds	r6, r9, r4
   191dc:	str	r7, [sp, #220]	; 0xdc
   191e0:	str	r9, [sp, #240]	; 0xf0
   191e4:	adc	r1, r7, lr
   191e8:	eor	r0, r6, r0
   191ec:	mov	lr, r7
   191f0:	ldr	r7, [sp, #252]	; 0xfc
   191f4:	str	r6, [sp, #208]	; 0xd0
   191f8:	str	r1, [sp, #196]	; 0xc4
   191fc:	eor	r1, r1, r2
   19200:	lsl	r2, r1, #1
   19204:	orr	r2, r2, r0, lsr #31
   19208:	lsl	r0, r0, #1
   1920c:	orr	ip, r0, r1, lsr #31
   19210:	ldr	r0, [sp, #236]	; 0xec
   19214:	ldr	r1, [sp, #232]	; 0xe8
   19218:	str	r2, [sp, #268]	; 0x10c
   1921c:	ldr	r2, [sp, #216]	; 0xd8
   19220:	str	ip, [sp, #244]	; 0xf4
   19224:	adds	r0, sl, r0
   19228:	adc	r1, r7, r1
   1922c:	adds	r2, r0, r2
   19230:	ldr	r0, [sp, #224]	; 0xe0
   19234:	adc	r1, r1, r0
   19238:	ldr	r0, [sp, #256]	; 0x100
   1923c:	eor	r8, r1, r0
   19240:	ldr	r0, [sp, #228]	; 0xe4
   19244:	eor	r3, r2, r0
   19248:	ldr	r0, [sp, #184]	; 0xb8
   1924c:	adds	r5, r8, r0
   19250:	ldr	r0, [sp, #188]	; 0xbc
   19254:	adc	r0, r3, r0
   19258:	str	r0, [sp, #236]	; 0xec
   1925c:	eor	r4, r0, r7
   19260:	eor	r0, r5, sl
   19264:	lsl	sl, r0, #8
   19268:	lsr	r0, r0, #24
   1926c:	orr	r0, r0, r4, lsl #8
   19270:	orr	sl, sl, r4, lsr #24
   19274:	ldr	r4, [fp, #-132]	; 0xffffff7c
   19278:	adds	r7, r0, r2
   1927c:	adc	r2, sl, r1
   19280:	ldr	r1, [sp, #264]	; 0x108
   19284:	str	r1, [sp, #288]	; 0x120
   19288:	ldr	r1, [sp, #260]	; 0x104
   1928c:	str	r1, [sp, #292]	; 0x124
   19290:	str	r9, [sp, #376]	; 0x178
   19294:	ldr	r9, [sp, #196]	; 0xc4
   19298:	ldr	r1, [sp, #268]	; 0x10c
   1929c:	str	lr, [sp, #380]	; 0x17c
   192a0:	str	r6, [sp, #336]	; 0x150
   192a4:	str	r9, [sp, #340]	; 0x154
   192a8:	str	r1, [sp, #332]	; 0x14c
   192ac:	ldr	r1, [fp, #-136]	; 0xffffff78
   192b0:	str	ip, [sp, #328]	; 0x148
   192b4:	adds	r7, r7, r1
   192b8:	adc	ip, r2, r4
   192bc:	eor	r4, r7, r8
   192c0:	str	r7, [sp, #296]	; 0x128
   192c4:	eor	r2, ip, r3
   192c8:	lsl	r3, r4, #16
   192cc:	lsr	r4, r4, #16
   192d0:	str	ip, [sp, #300]	; 0x12c
   192d4:	orr	r3, r3, r2, lsr #16
   192d8:	orr	r2, r4, r2, lsl #16
   192dc:	mov	r6, r2
   192e0:	adds	r1, r2, r5
   192e4:	str	r2, [sp, #256]	; 0x100
   192e8:	ldr	r2, [sp, #236]	; 0xec
   192ec:	str	r3, [sp, #388]	; 0x184
   192f0:	str	r6, [sp, #384]	; 0x180
   192f4:	ldr	r6, [sp, #100]	; 0x64
   192f8:	str	r1, [sp, #344]	; 0x158
   192fc:	adc	r5, r3, r2
   19300:	eor	r2, r1, r0
   19304:	eor	lr, r5, sl
   19308:	str	r5, [sp, #348]	; 0x15c
   1930c:	lsl	r4, lr, #1
   19310:	orr	sl, r4, r2, lsr #31
   19314:	lsl	r2, r2, #1
   19318:	orr	r8, r2, lr, lsr #31
   1931c:	str	sl, [sp, #308]	; 0x134
   19320:	str	r8, [sp, #304]	; 0x130
   19324:	ldr	r0, [r6, #16]
   19328:	ldm	r6, {r2, r4}
   1932c:	ldr	lr, [sp, #276]	; 0x114
   19330:	str	r0, [sp, #252]	; 0xfc
   19334:	ldr	r0, [r6, #20]
   19338:	eor	r4, lr, r4
   1933c:	eor	r4, r4, r9
   19340:	str	r0, [sp, #248]	; 0xf8
   19344:	ldr	r0, [sp, #272]	; 0x110
   19348:	eor	r0, r0, r2
   1934c:	ldr	r2, [sp, #208]	; 0xd0
   19350:	eor	r0, r0, r2
   19354:	stm	r6, {r0, r4}
   19358:	ldr	lr, [sp, #104]	; 0x68
   1935c:	ldr	r4, [sp, #192]	; 0xc0
   19360:	ldm	lr, {r0, r2}
   19364:	eor	r2, r4, r2
   19368:	eor	r5, r2, r5
   1936c:	ldr	r2, [sp, #200]	; 0xc8
   19370:	eor	r0, r2, r0
   19374:	eor	r4, r0, r1
   19378:	strd	r4, [lr]
   1937c:	ldr	r0, [r6, #28]
   19380:	ldr	r1, [sp, #160]	; 0xa0
   19384:	ldr	r2, [sp, #356]	; 0x164
   19388:	eor	r0, ip, r0
   1938c:	eor	r0, r0, r1
   19390:	ldr	r1, [sp, #352]	; 0x160
   19394:	str	r0, [r6, #28]
   19398:	ldr	r0, [r6, #24]
   1939c:	eor	r0, r7, r0
   193a0:	ldr	r7, [sp, #164]	; 0xa4
   193a4:	eor	r0, r0, r7
   193a8:	ldr	r7, [sp, #168]	; 0xa8
   193ac:	str	r0, [r6, #24]
   193b0:	ldr	r0, [r6, #36]	; 0x24
   193b4:	eor	r0, sl, r0
   193b8:	eor	r0, r0, r7
   193bc:	ldr	r7, [sp, #172]	; 0xac
   193c0:	str	r0, [r6, #36]	; 0x24
   193c4:	ldr	r0, [r6, #32]
   193c8:	eor	r0, r8, r0
   193cc:	eor	r0, r0, r7
   193d0:	ldr	r7, [sp, #248]	; 0xf8
   193d4:	str	r0, [r6, #32]
   193d8:	ldr	r0, [sp, #260]	; 0x104
   193dc:	eor	r0, r0, r7
   193e0:	eor	r0, r0, r2
   193e4:	ldr	r2, [sp, #252]	; 0xfc
   193e8:	str	r0, [r6, #20]
   193ec:	ldr	r0, [sp, #264]	; 0x108
   193f0:	eor	r0, r0, r2
   193f4:	eor	r0, r0, r1
   193f8:	ldr	r1, [sp, #204]	; 0xcc
   193fc:	str	r0, [r6, #16]
   19400:	ldr	r0, [r6, #52]	; 0x34
   19404:	ldr	r2, [sp, #316]	; 0x13c
   19408:	eor	r0, r1, r0
   1940c:	ldr	r1, [sp, #312]	; 0x138
   19410:	eor	r0, r0, r3
   19414:	ldr	r3, [sp, #212]	; 0xd4
   19418:	str	r0, [r6, #52]	; 0x34
   1941c:	ldr	r0, [r6, #48]	; 0x30
   19420:	eor	r0, r3, r0
   19424:	ldr	r3, [sp, #256]	; 0x100
   19428:	eor	r0, r0, r3
   1942c:	str	r0, [r6, #48]	; 0x30
   19430:	ldr	r0, [r6, #44]	; 0x2c
   19434:	eor	r0, r2, r0
   19438:	ldr	r2, [sp, #220]	; 0xdc
   1943c:	eor	r0, r0, r2
   19440:	ldr	r2, [sp, #268]	; 0x10c
   19444:	str	r0, [r6, #44]	; 0x2c
   19448:	ldr	r0, [r6, #40]	; 0x28
   1944c:	eor	r0, r1, r0
   19450:	ldr	r1, [sp, #240]	; 0xf0
   19454:	eor	r0, r0, r1
   19458:	str	r0, [r6, #40]	; 0x28
   1945c:	ldr	r1, [r6, #60]	; 0x3c
   19460:	ldr	r3, [sp, #396]	; 0x18c
   19464:	ldr	r0, [r6, #56]	; 0x38
   19468:	eor	r1, r2, r1
   1946c:	ldr	r2, [sp, #392]	; 0x188
   19470:	eor	r1, r1, r3
   19474:	str	r1, [r6, #60]	; 0x3c
   19478:	ldr	r1, [sp, #244]	; 0xf4
   1947c:	eor	r0, r1, r0
   19480:	eor	r0, r0, r2
   19484:	str	r0, [r6, #56]	; 0x38
   19488:	sub	sp, fp, #28
   1948c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19494:	add	fp, sp, #28
   19498:	sub	sp, sp, #68	; 0x44
   1949c:	vmov.i32	q8, #0	; 0x00000000
   194a0:	mov	r9, sp
   194a4:	mov	sl, r1
   194a8:	mov	r6, r0
   194ac:	mov	r0, #48	; 0x30
   194b0:	mvn	r7, #0
   194b4:	mov	r1, r9
   194b8:	add	r4, r9, #32
   194bc:	add	r5, r9, #16
   194c0:	cmp	sl, #0
   194c4:	vst1.64	{d16-d17}, [r1], r0
   194c8:	vst1.64	{d16-d17}, [r4]
   194cc:	vst1.64	{d16-d17}, [r5]
   194d0:	vst1.64	{d16-d17}, [r1]
   194d4:	beq	194f4 <__assert_fail@plt+0x81ec>
   194d8:	ldr	r0, [r6, #228]	; 0xe4
   194dc:	cmp	r0, r2
   194e0:	bhi	194f4 <__assert_fail@plt+0x81ec>
   194e4:	add	r0, r6, #80	; 0x50
   194e8:	ldrd	r2, [r0]
   194ec:	orrs	r1, r2, r3
   194f0:	beq	19500 <__assert_fail@plt+0x81f8>
   194f4:	mov	r0, r7
   194f8:	sub	sp, fp, #28
   194fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19500:	add	r2, r6, #64	; 0x40
   19504:	ldr	r1, [r6, #224]	; 0xe0
   19508:	add	r3, r6, #72	; 0x48
   1950c:	ldr	r8, [r2]
   19510:	ldr	r7, [r2, #4]
   19514:	adds	r8, r8, r1
   19518:	adcs	r7, r7, #0
   1951c:	str	r8, [r2]
   19520:	add	r8, r6, #96	; 0x60
   19524:	str	r7, [r2, #4]
   19528:	ldm	r3, {r2, r7}
   1952c:	adcs	r2, r2, #0
   19530:	adc	r7, r7, #0
   19534:	stm	r3, {r2, r7}
   19538:	mvn	r3, #0
   1953c:	mov	r7, #0
   19540:	ldrb	r2, [r6, #232]	; 0xe8
   19544:	cmp	r2, #0
   19548:	addne	r2, r6, #88	; 0x58
   1954c:	strne	r3, [r2]
   19550:	strne	r3, [r2, #4]
   19554:	str	r3, [r0]
   19558:	str	r3, [r0, #4]
   1955c:	add	r0, r8, r1
   19560:	rsb	r2, r1, #128	; 0x80
   19564:	mov	r1, #0
   19568:	bl	11230 <memset@plt>
   1956c:	mov	r0, r6
   19570:	mov	r1, r8
   19574:	bl	13ba0 <__assert_fail@plt+0x2898>
   19578:	add	r1, r6, #32
   1957c:	mov	r2, #228	; 0xe4
   19580:	add	r0, r6, #48	; 0x30
   19584:	vld1.64	{d16-d17}, [r1]
   19588:	add	r1, r6, #16
   1958c:	vld1.64	{d20-d21}, [r6], r2
   19590:	vld1.64	{d22-d23}, [r0]
   19594:	mov	r0, #48	; 0x30
   19598:	vld1.64	{d18-d19}, [r1]
   1959c:	mov	r1, r9
   195a0:	vst1.64	{d20-d21}, [r1], r0
   195a4:	vst1.64	{d16-d17}, [r4]
   195a8:	mov	r0, sl
   195ac:	vst1.64	{d22-d23}, [r1]
   195b0:	vst1.64	{d18-d19}, [r5]
   195b4:	mov	r1, r9
   195b8:	ldr	r2, [r6]
   195bc:	bl	110d4 <memcpy@plt>
   195c0:	movw	r0, #61080	; 0xee98
   195c4:	mov	r1, #0
   195c8:	mov	r2, #64	; 0x40
   195cc:	movt	r0, #1
   195d0:	ldr	r3, [r0]
   195d4:	mov	r0, r9
   195d8:	blx	r3
   195dc:	mov	r0, r7
   195e0:	sub	sp, fp, #28
   195e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195e8:	nop	{0}
   195ec:	nop	{0}
   195f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195f4:	add	fp, sp, #28
   195f8:	sub	sp, sp, #388	; 0x184
   195fc:	mov	r9, r3
   19600:	mov	r3, r0
   19604:	mov	r6, r1
   19608:	mvn	r0, #0
   1960c:	cmp	r9, #0
   19610:	mov	r1, r9
   19614:	movwne	r1, #1
   19618:	cmp	r3, #0
   1961c:	beq	19654 <__assert_fail@plt+0x834c>
   19620:	mov	r7, r2
   19624:	clz	r2, r2
   19628:	lsr	r2, r2, #5
   1962c:	ands	r1, r2, r1
   19630:	bne	19654 <__assert_fail@plt+0x834c>
   19634:	ldr	r5, [fp, #12]
   19638:	cmp	r5, #0
   1963c:	mov	r1, r5
   19640:	movwne	r1, #1
   19644:	cmp	r5, #64	; 0x40
   19648:	subls	r2, r6, #1
   1964c:	cmpls	r2, #63	; 0x3f
   19650:	bls	1965c <__assert_fail@plt+0x8354>
   19654:	sub	sp, fp, #28
   19658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1965c:	ldr	lr, [fp, #8]
   19660:	clz	r2, lr
   19664:	lsr	r2, r2, #5
   19668:	ands	r1, r2, r1
   1966c:	bne	19654 <__assert_fail@plt+0x834c>
   19670:	add	sl, sp, #16
   19674:	cmp	r5, #0
   19678:	add	r8, sl, #8
   1967c:	add	r1, sl, #24
   19680:	add	ip, sl, #40	; 0x28
   19684:	add	r2, sl, #56	; 0x38
   19688:	add	r4, sl, #64	; 0x40
   1968c:	beq	197a8 <__assert_fail@plt+0x84a0>
   19690:	cmp	lr, #0
   19694:	beq	19654 <__assert_fail@plt+0x834c>
   19698:	str	r1, [sp, #12]
   1969c:	sub	r1, r5, #1
   196a0:	cmp	r1, #63	; 0x3f
   196a4:	bhi	19654 <__assert_fail@plt+0x834c>
   196a8:	str	r2, [sp, #8]
   196ac:	mov	r0, r4
   196b0:	mov	r1, #0
   196b4:	mov	r2, #176	; 0xb0
   196b8:	str	r3, [sp, #4]
   196bc:	str	ip, [sp]
   196c0:	bl	11230 <memset@plt>
   196c4:	movw	r0, #58983	; 0xe667
   196c8:	add	r1, pc, #912	; 0x390
   196cc:	movw	r2, #51464	; 0xc908
   196d0:	movw	r3, #52505	; 0xcd19
   196d4:	movt	r0, #27145	; 0x6a09
   196d8:	vld1.64	{d16-d17}, [r1 :128]
   196dc:	uxtb	r1, r6
   196e0:	movt	r2, #62396	; 0xf3bc
   196e4:	movt	r3, #23520	; 0x5be0
   196e8:	str	r0, [sp, #20]
   196ec:	uxtb	r0, r5
   196f0:	orr	r0, r1, r0, lsl #8
   196f4:	orr	r0, r0, #65536	; 0x10000
   196f8:	orr	r0, r0, #16777216	; 0x1000000
   196fc:	eor	r0, r0, r2
   19700:	str	r0, [sp, #16]
   19704:	add	r0, pc, #868	; 0x364
   19708:	vst1.64	{d16-d17}, [r8]
   1970c:	sub	r8, fp, #160	; 0xa0
   19710:	vld1.64	{d18-d19}, [r0 :128]
   19714:	add	r0, pc, #868	; 0x364
   19718:	ldr	r2, [sp, #8]
   1971c:	vld1.64	{d16-d17}, [r0 :128]
   19720:	ldr	r0, [sp, #12]
   19724:	vst1.64	{d18-d19}, [r0]
   19728:	ldr	r0, [sp]
   1972c:	vst1.64	{d16-d17}, [r0]
   19730:	movw	r0, #8569	; 0x2179
   19734:	movt	r0, #4990	; 0x137e
   19738:	stm	r2, {r0, r3}
   1973c:	str	r1, [sp, #244]	; 0xf4
   19740:	add	r0, r8, r5
   19744:	rsb	r2, r5, #128	; 0x80
   19748:	mov	r1, #0
   1974c:	bl	11230 <memset@plt>
   19750:	ldr	r1, [fp, #8]
   19754:	mov	r0, r8
   19758:	mov	r2, r5
   1975c:	bl	110d4 <memcpy@plt>
   19760:	add	r0, sl, #96	; 0x60
   19764:	mov	r1, r8
   19768:	mov	r2, #128	; 0x80
   1976c:	mov	r5, #128	; 0x80
   19770:	bl	110d4 <memcpy@plt>
   19774:	movw	r0, #61080	; 0xee98
   19778:	str	r5, [sp, #240]	; 0xf0
   1977c:	mov	r1, #0
   19780:	mov	r2, #128	; 0x80
   19784:	movt	r0, #1
   19788:	ldr	r3, [r0]
   1978c:	mov	r0, r8
   19790:	blx	r3
   19794:	add	r8, sl, #72	; 0x48
   19798:	cmp	r9, #0
   1979c:	str	r6, [sp, #12]
   197a0:	bne	19844 <__assert_fail@plt+0x853c>
   197a4:	b	19940 <__assert_fail@plt+0x8638>
   197a8:	str	r1, [sp, #12]
   197ac:	str	r2, [sp, #8]
   197b0:	mov	r0, r4
   197b4:	mov	r1, #0
   197b8:	mov	r2, #176	; 0xb0
   197bc:	str	r3, [sp, #4]
   197c0:	mov	r5, ip
   197c4:	bl	11230 <memset@plt>
   197c8:	movw	r0, #58983	; 0xe667
   197cc:	add	r1, pc, #652	; 0x28c
   197d0:	movw	r2, #51464	; 0xc908
   197d4:	movw	r3, #52505	; 0xcd19
   197d8:	movt	r0, #27145	; 0x6a09
   197dc:	vld1.64	{d16-d17}, [r1 :128]
   197e0:	movt	r2, #62396	; 0xf3bc
   197e4:	movt	r3, #23520	; 0x5be0
   197e8:	str	r0, [sp, #20]
   197ec:	uxtb	r0, r6
   197f0:	orr	r1, r0, #65536	; 0x10000
   197f4:	orr	r1, r1, #16777216	; 0x1000000
   197f8:	eor	r1, r1, r2
   197fc:	movw	r2, #8569	; 0x2179
   19800:	str	r1, [sp, #16]
   19804:	add	r1, pc, #612	; 0x264
   19808:	vst1.64	{d16-d17}, [r8]
   1980c:	movt	r2, #4990	; 0x137e
   19810:	vld1.64	{d18-d19}, [r1 :128]
   19814:	add	r1, pc, #612	; 0x264
   19818:	vld1.64	{d16-d17}, [r1 :128]
   1981c:	ldr	r1, [sp, #12]
   19820:	vst1.64	{d18-d19}, [r1]
   19824:	ldr	r1, [sp, #8]
   19828:	vst1.64	{d16-d17}, [r5]
   1982c:	strd	r2, [r1]
   19830:	str	r0, [sp, #244]	; 0xf4
   19834:	add	r8, sl, #72	; 0x48
   19838:	cmp	r9, #0
   1983c:	str	r6, [sp, #12]
   19840:	beq	19940 <__assert_fail@plt+0x8638>
   19844:	ldr	r1, [sp, #240]	; 0xf0
   19848:	rsb	r5, r1, #128	; 0x80
   1984c:	cmp	r5, r9
   19850:	bcs	1991c <__assert_fail@plt+0x8614>
   19854:	mov	r0, #0
   19858:	add	r6, sl, #96	; 0x60
   1985c:	str	r1, [sp, #8]
   19860:	mov	r2, r5
   19864:	str	r0, [sp, #240]	; 0xf0
   19868:	add	r0, r6, r1
   1986c:	mov	r1, r7
   19870:	bl	110d4 <memcpy@plt>
   19874:	ldrd	r0, [r4]
   19878:	adds	r0, r0, #128	; 0x80
   1987c:	adcs	r1, r1, #0
   19880:	strd	r0, [r4]
   19884:	ldrd	r0, [r8]
   19888:	adcs	r0, r0, #0
   1988c:	adc	r1, r1, #0
   19890:	strd	r0, [r8]
   19894:	mov	r0, sl
   19898:	mov	r1, r6
   1989c:	bl	13ba0 <__assert_fail@plt+0x2898>
   198a0:	sub	r6, r9, r5
   198a4:	add	r7, r7, r5
   198a8:	cmp	r6, #129	; 0x81
   198ac:	bcc	19918 <__assert_fail@plt+0x8610>
   198b0:	ldr	r0, [sp, #8]
   198b4:	add	r5, sp, #16
   198b8:	add	r9, r0, r9
   198bc:	movw	r0, #257	; 0x101
   198c0:	sub	r0, r9, r0
   198c4:	str	r0, [sp, #8]
   198c8:	ldrd	r0, [r4]
   198cc:	adds	r0, r0, #128	; 0x80
   198d0:	adcs	r1, r1, #0
   198d4:	strd	r0, [r4]
   198d8:	ldrd	r0, [r8]
   198dc:	adcs	r0, r0, #0
   198e0:	adc	r1, r1, #0
   198e4:	strd	r0, [r8]
   198e8:	mov	r0, r5
   198ec:	mov	r1, r7
   198f0:	bl	13ba0 <__assert_fail@plt+0x2898>
   198f4:	sub	r6, r6, #128	; 0x80
   198f8:	add	r7, r7, #128	; 0x80
   198fc:	cmp	r6, #128	; 0x80
   19900:	bhi	198c8 <__assert_fail@plt+0x85c0>
   19904:	ldr	r0, [sp, #8]
   19908:	bic	r0, r0, #127	; 0x7f
   1990c:	sub	r0, r9, r0
   19910:	sub	r9, r0, #256	; 0x100
   19914:	b	1991c <__assert_fail@plt+0x8614>
   19918:	mov	r9, r6
   1991c:	ldr	r0, [sp, #240]	; 0xf0
   19920:	mov	r1, r7
   19924:	mov	r2, r9
   19928:	add	r0, sl, r0
   1992c:	add	r0, r0, #96	; 0x60
   19930:	bl	110d4 <memcpy@plt>
   19934:	ldr	r0, [sp, #240]	; 0xf0
   19938:	add	r0, r0, r9
   1993c:	str	r0, [sp, #240]	; 0xf0
   19940:	vmov.i32	q8, #0	; 0x00000000
   19944:	sub	r6, fp, #160	; 0xa0
   19948:	mov	r0, #48	; 0x30
   1994c:	mov	r1, r6
   19950:	add	r5, r6, #32
   19954:	add	r7, r6, #16
   19958:	vst1.64	{d16-d17}, [r1], r0
   1995c:	ldr	r0, [sp, #244]	; 0xf4
   19960:	vst1.64	{d16-d17}, [r5]
   19964:	vst1.64	{d16-d17}, [r7]
   19968:	vst1.64	{d16-d17}, [r1]
   1996c:	ldr	r1, [sp, #12]
   19970:	cmp	r0, r1
   19974:	bhi	19a50 <__assert_fail@plt+0x8748>
   19978:	add	r0, sl, #80	; 0x50
   1997c:	ldrd	r2, [r0]
   19980:	orrs	r1, r2, r3
   19984:	bne	19a50 <__assert_fail@plt+0x8748>
   19988:	ldrd	r2, [r4]
   1998c:	ldr	r1, [sp, #240]	; 0xf0
   19990:	adds	r2, r2, r1
   19994:	adcs	r3, r3, #0
   19998:	strd	r2, [r4]
   1999c:	add	r4, sl, #96	; 0x60
   199a0:	ldrd	r2, [r8]
   199a4:	adcs	r2, r2, #0
   199a8:	adc	r3, r3, #0
   199ac:	strd	r2, [r8]
   199b0:	mvn	r3, #0
   199b4:	ldrb	r2, [sp, #248]	; 0xf8
   199b8:	cmp	r2, #0
   199bc:	addne	r2, sl, #88	; 0x58
   199c0:	strne	r3, [r2]
   199c4:	strne	r3, [r2, #4]
   199c8:	str	r3, [r0]
   199cc:	str	r3, [r0, #4]
   199d0:	add	r0, r4, r1
   199d4:	rsb	r2, r1, #128	; 0x80
   199d8:	mov	r1, #0
   199dc:	bl	11230 <memset@plt>
   199e0:	mov	r0, sl
   199e4:	mov	r1, r4
   199e8:	bl	13ba0 <__assert_fail@plt+0x2898>
   199ec:	add	r1, sl, #32
   199f0:	mov	r2, #228	; 0xe4
   199f4:	add	r0, sl, #48	; 0x30
   199f8:	vld1.64	{d16-d17}, [r1]
   199fc:	add	r1, sl, #16
   19a00:	vld1.64	{d20-d21}, [sl], r2
   19a04:	vld1.64	{d22-d23}, [r0]
   19a08:	mov	r0, #48	; 0x30
   19a0c:	vld1.64	{d18-d19}, [r1]
   19a10:	mov	r1, r6
   19a14:	ldr	r2, [sl]
   19a18:	vst1.64	{d20-d21}, [r1], r0
   19a1c:	ldr	r0, [sp, #4]
   19a20:	vst1.64	{d16-d17}, [r5]
   19a24:	vst1.64	{d22-d23}, [r1]
   19a28:	mov	r1, r6
   19a2c:	vst1.64	{d18-d19}, [r7]
   19a30:	bl	110d4 <memcpy@plt>
   19a34:	movw	r0, #61080	; 0xee98
   19a38:	mov	r1, #0
   19a3c:	mov	r2, #64	; 0x40
   19a40:	movt	r0, #1
   19a44:	ldr	r3, [r0]
   19a48:	mov	r0, r6
   19a4c:	blx	r3
   19a50:	mov	r0, #0
   19a54:	sub	sp, fp, #28
   19a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a5c:	nop	{0}
   19a60:	strbhi	sl, [sl], #1851	; 0x73b
   19a64:	bllt	1a05480 <optarg@@GLIBC_2.4+0x19d5308>
   19a68:	vcmla.f32	d15, d4, d27[0], #90
   19a6c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   19a70:	svcpl	0x001d36f1
   19a74:	strbge	pc, [pc, #-1338]	; 19542 <__assert_fail@plt+0x823a>	; <UNPREDICTABLE>
   19a78:	sfmge	f0, 3, [r6, #836]!	; 0x344
   19a7c:	tstpl	lr, pc, ror r2
   19a80:	blcs	fb4b04 <optarg@@GLIBC_2.4+0xf8498c>
   19a84:	blls	173cbc <optarg@@GLIBC_2.4+0x143b44>
   19a88:	blx	108903e <optarg@@GLIBC_2.4+0x1058ec6>
   19a8c:	svcne	0x0083d9ab
   19a90:	b	195f0 <__assert_fail@plt+0x82e8>
   19a94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19a98:	add	fp, sp, #24
   19a9c:	sub	sp, sp, #248	; 0xf8
   19aa0:	mov	r7, r0
   19aa4:	mov	r0, #32768	; 0x8000
   19aa8:	mov	r9, r2
   19aac:	mov	r8, r1
   19ab0:	bl	1d978 <__assert_fail@plt+0xc670>
   19ab4:	cmp	r0, #0
   19ab8:	beq	19b24 <__assert_fail@plt+0x881c>
   19abc:	mov	r4, sp
   19ac0:	mov	r5, r0
   19ac4:	mov	r1, r9
   19ac8:	mov	r0, r4
   19acc:	bl	13800 <__assert_fail@plt+0x24f8>
   19ad0:	b	19ae4 <__assert_fail@plt+0x87dc>
   19ad4:	mov	r0, r4
   19ad8:	mov	r1, r5
   19adc:	mov	r2, #32768	; 0x8000
   19ae0:	bl	13a70 <__assert_fail@plt+0x2768>
   19ae4:	mov	r6, #0
   19ae8:	add	r0, r5, r6
   19aec:	rsb	r2, r6, #32768	; 0x8000
   19af0:	mov	r1, #1
   19af4:	mov	r3, r7
   19af8:	bl	1114c <fread@plt>
   19afc:	add	r6, r0, r6
   19b00:	cmp	r6, #32768	; 0x8000
   19b04:	beq	19ad4 <__assert_fail@plt+0x87cc>
   19b08:	cmp	r0, #0
   19b0c:	beq	19b34 <__assert_fail@plt+0x882c>
   19b10:	mov	r0, r7
   19b14:	bl	111dc <feof@plt>
   19b18:	cmp	r0, #0
   19b1c:	beq	19ae8 <__assert_fail@plt+0x87e0>
   19b20:	b	19b48 <__assert_fail@plt+0x8840>
   19b24:	mvn	r4, #0
   19b28:	mov	r0, r4
   19b2c:	sub	sp, fp, #24
   19b30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b34:	mov	r0, r7
   19b38:	bl	110bc <ferror@plt>
   19b3c:	mvn	r4, #0
   19b40:	cmp	r0, #0
   19b44:	bne	19b74 <__assert_fail@plt+0x886c>
   19b48:	cmp	r6, #0
   19b4c:	beq	19b60 <__assert_fail@plt+0x8858>
   19b50:	mov	r0, sp
   19b54:	mov	r1, r5
   19b58:	mov	r2, r6
   19b5c:	bl	13a70 <__assert_fail@plt+0x2768>
   19b60:	mov	r0, sp
   19b64:	mov	r1, r8
   19b68:	mov	r2, r9
   19b6c:	bl	19490 <__assert_fail@plt+0x8188>
   19b70:	mov	r4, #0
   19b74:	mov	r0, r5
   19b78:	bl	19e7c <__assert_fail@plt+0x8b74>
   19b7c:	mov	r0, r4
   19b80:	sub	sp, fp, #24
   19b84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b88:	movw	r1, #408	; 0x198
   19b8c:	movt	r1, #3
   19b90:	str	r0, [r1, #4]
   19b94:	bx	lr
   19b98:	movw	r1, #408	; 0x198
   19b9c:	movt	r1, #3
   19ba0:	strb	r0, [r1]
   19ba4:	bx	lr
   19ba8:	push	{r4, r5, r6, sl, fp, lr}
   19bac:	add	fp, sp, #16
   19bb0:	sub	sp, sp, #8
   19bb4:	movw	r0, #372	; 0x174
   19bb8:	movt	r0, #3
   19bbc:	ldr	r0, [r0]
   19bc0:	bl	1d9fc <__assert_fail@plt+0xc6f4>
   19bc4:	cmp	r0, #0
   19bc8:	beq	19bf0 <__assert_fail@plt+0x88e8>
   19bcc:	movw	r5, #408	; 0x198
   19bd0:	movt	r5, #3
   19bd4:	ldrb	r0, [r5]
   19bd8:	cmp	r0, #0
   19bdc:	beq	19c1c <__assert_fail@plt+0x8914>
   19be0:	bl	1120c <__errno_location@plt>
   19be4:	ldr	r0, [r0]
   19be8:	cmp	r0, #32
   19bec:	bne	19c1c <__assert_fail@plt+0x8914>
   19bf0:	movw	r0, #360	; 0x168
   19bf4:	movt	r0, #3
   19bf8:	ldr	r0, [r0]
   19bfc:	bl	1d9fc <__assert_fail@plt+0xc6f4>
   19c00:	cmp	r0, #0
   19c04:	subeq	sp, fp, #16
   19c08:	popeq	{r4, r5, r6, sl, fp, pc}
   19c0c:	movw	r0, #272	; 0x110
   19c10:	movt	r0, #3
   19c14:	ldr	r0, [r0]
   19c18:	bl	110c8 <_exit@plt>
   19c1c:	movw	r1, #61099	; 0xeeab
   19c20:	mov	r0, #0
   19c24:	mov	r2, #5
   19c28:	movt	r1, #1
   19c2c:	bl	110f8 <dcgettext@plt>
   19c30:	ldr	r6, [r5, #4]
   19c34:	mov	r4, r0
   19c38:	bl	1120c <__errno_location@plt>
   19c3c:	ldr	r5, [r0]
   19c40:	cmp	r6, #0
   19c44:	bne	19c60 <__assert_fail@plt+0x8958>
   19c48:	movw	r2, #59022	; 0xe68e
   19c4c:	mov	r0, #0
   19c50:	mov	r1, r5
   19c54:	mov	r3, r4
   19c58:	movt	r2, #1
   19c5c:	b	19c80 <__assert_fail@plt+0x8978>
   19c60:	mov	r0, r6
   19c64:	bl	1bb88 <__assert_fail@plt+0xa880>
   19c68:	movw	r2, #61111	; 0xeeb7
   19c6c:	mov	r3, r0
   19c70:	str	r4, [sp]
   19c74:	mov	r0, #0
   19c78:	mov	r1, r5
   19c7c:	movt	r2, #1
   19c80:	bl	11170 <error@plt>
   19c84:	movw	r0, #272	; 0x110
   19c88:	movt	r0, #3
   19c8c:	ldr	r0, [r0]
   19c90:	bl	110c8 <_exit@plt>
   19c94:	b	11098 <posix_fadvise64@plt>
   19c98:	cmp	r0, #0
   19c9c:	bxeq	lr
   19ca0:	push	{r4, sl, fp, lr}
   19ca4:	add	fp, sp, #8
   19ca8:	sub	sp, sp, #16
   19cac:	mov	r4, r1
   19cb0:	bl	11248 <fileno@plt>
   19cb4:	mov	r1, #0
   19cb8:	mov	r2, #0
   19cbc:	mov	r3, #0
   19cc0:	str	r1, [sp]
   19cc4:	stmib	sp, {r1, r4}
   19cc8:	bl	11098 <posix_fadvise64@plt>
   19ccc:	sub	sp, fp, #8
   19cd0:	pop	{r4, sl, fp, pc}
   19cd4:	push	{r4, r5, r6, sl, fp, lr}
   19cd8:	add	fp, sp, #16
   19cdc:	sub	sp, sp, #8
   19ce0:	mov	r4, r0
   19ce4:	bl	11248 <fileno@plt>
   19ce8:	cmn	r0, #1
   19cec:	ble	19d60 <__assert_fail@plt+0x8a58>
   19cf0:	mov	r0, r4
   19cf4:	bl	11194 <__freading@plt>
   19cf8:	cmp	r0, #0
   19cfc:	beq	19d28 <__assert_fail@plt+0x8a20>
   19d00:	mov	r0, r4
   19d04:	bl	11248 <fileno@plt>
   19d08:	mov	r1, #1
   19d0c:	mov	r2, #0
   19d10:	mov	r3, #0
   19d14:	str	r1, [sp]
   19d18:	bl	11134 <lseek64@plt>
   19d1c:	and	r0, r0, r1
   19d20:	cmn	r0, #1
   19d24:	beq	19d60 <__assert_fail@plt+0x8a58>
   19d28:	mov	r0, r4
   19d2c:	bl	19d70 <__assert_fail@plt+0x8a68>
   19d30:	cmp	r0, #0
   19d34:	beq	19d60 <__assert_fail@plt+0x8a58>
   19d38:	bl	1120c <__errno_location@plt>
   19d3c:	ldr	r6, [r0]
   19d40:	mov	r5, r0
   19d44:	mov	r0, r4
   19d48:	bl	11260 <fclose@plt>
   19d4c:	cmp	r6, #0
   19d50:	strne	r6, [r5]
   19d54:	mvnne	r0, #0
   19d58:	sub	sp, fp, #16
   19d5c:	pop	{r4, r5, r6, sl, fp, pc}
   19d60:	mov	r0, r4
   19d64:	sub	sp, fp, #16
   19d68:	pop	{r4, r5, r6, sl, fp, lr}
   19d6c:	b	11260 <fclose@plt>
   19d70:	push	{r4, sl, fp, lr}
   19d74:	add	fp, sp, #8
   19d78:	sub	sp, sp, #8
   19d7c:	mov	r4, r0
   19d80:	cmp	r0, #0
   19d84:	beq	19dbc <__assert_fail@plt+0x8ab4>
   19d88:	mov	r0, r4
   19d8c:	bl	11194 <__freading@plt>
   19d90:	cmp	r0, #0
   19d94:	beq	19dbc <__assert_fail@plt+0x8ab4>
   19d98:	ldrb	r0, [r4, #1]
   19d9c:	tst	r0, #1
   19da0:	beq	19dbc <__assert_fail@plt+0x8ab4>
   19da4:	mov	r0, #1
   19da8:	mov	r2, #0
   19dac:	mov	r3, #0
   19db0:	str	r0, [sp]
   19db4:	mov	r0, r4
   19db8:	bl	19ea4 <__assert_fail@plt+0x8b9c>
   19dbc:	mov	r0, r4
   19dc0:	sub	sp, fp, #8
   19dc4:	pop	{r4, sl, fp, lr}
   19dc8:	b	110a4 <fflush@plt>
   19dcc:	push	{r4, r5, r6, r7, fp, lr}
   19dd0:	add	fp, sp, #16
   19dd4:	mov	r5, r1
   19dd8:	bl	112c0 <fopen64@plt>
   19ddc:	mov	r4, #0
   19de0:	cmp	r0, #0
   19de4:	beq	19e4c <__assert_fail@plt+0x8b44>
   19de8:	mov	r6, r0
   19dec:	bl	11248 <fileno@plt>
   19df0:	cmp	r0, #2
   19df4:	bhi	19e54 <__assert_fail@plt+0x8b4c>
   19df8:	bl	1bf28 <__assert_fail@plt+0xac20>
   19dfc:	cmn	r0, #1
   19e00:	ble	19e5c <__assert_fail@plt+0x8b54>
   19e04:	mov	r7, r0
   19e08:	mov	r0, r6
   19e0c:	bl	19cd4 <__assert_fail@plt+0x89cc>
   19e10:	cmp	r0, #0
   19e14:	bne	19e30 <__assert_fail@plt+0x8b28>
   19e18:	mov	r0, r7
   19e1c:	mov	r1, r5
   19e20:	bl	11050 <fdopen@plt>
   19e24:	mov	r4, r0
   19e28:	cmp	r0, #0
   19e2c:	bne	19e4c <__assert_fail@plt+0x8b44>
   19e30:	bl	1120c <__errno_location@plt>
   19e34:	ldr	r5, [r0]
   19e38:	mov	r4, r0
   19e3c:	mov	r0, r7
   19e40:	bl	112f0 <close@plt>
   19e44:	str	r5, [r4]
   19e48:	mov	r4, #0
   19e4c:	mov	r0, r4
   19e50:	pop	{r4, r5, r6, r7, fp, pc}
   19e54:	mov	r0, r6
   19e58:	pop	{r4, r5, r6, r7, fp, pc}
   19e5c:	bl	1120c <__errno_location@plt>
   19e60:	ldr	r7, [r0]
   19e64:	mov	r5, r0
   19e68:	mov	r0, r6
   19e6c:	bl	19cd4 <__assert_fail@plt+0x89cc>
   19e70:	mov	r0, r4
   19e74:	str	r7, [r5]
   19e78:	pop	{r4, r5, r6, r7, fp, pc}
   19e7c:	push	{r4, r5, r6, sl, fp, lr}
   19e80:	add	fp, sp, #16
   19e84:	mov	r4, r0
   19e88:	bl	1120c <__errno_location@plt>
   19e8c:	ldr	r6, [r0]
   19e90:	mov	r5, r0
   19e94:	mov	r0, r4
   19e98:	bl	110b0 <free@plt>
   19e9c:	str	r6, [r5]
   19ea0:	pop	{r4, r5, r6, sl, fp, pc}
   19ea4:	push	{r4, r5, r6, r7, fp, lr}
   19ea8:	add	fp, sp, #16
   19eac:	sub	sp, sp, #8
   19eb0:	mov	r4, r0
   19eb4:	ldr	r0, [r0, #4]
   19eb8:	mov	r5, r3
   19ebc:	mov	r6, r2
   19ec0:	ldr	r1, [r4, #8]
   19ec4:	cmp	r1, r0
   19ec8:	bne	19ee4 <__assert_fail@plt+0x8bdc>
   19ecc:	ldrd	r0, [r4, #16]
   19ed0:	cmp	r1, r0
   19ed4:	bne	19ee4 <__assert_fail@plt+0x8bdc>
   19ed8:	ldr	r0, [r4, #36]	; 0x24
   19edc:	cmp	r0, #0
   19ee0:	beq	19efc <__assert_fail@plt+0x8bf4>
   19ee4:	mov	r0, r4
   19ee8:	mov	r2, r6
   19eec:	mov	r3, r5
   19ef0:	sub	sp, fp, #16
   19ef4:	pop	{r4, r5, r6, r7, fp, lr}
   19ef8:	b	1126c <fseeko64@plt>
   19efc:	ldr	r7, [fp, #8]
   19f00:	mov	r0, r4
   19f04:	bl	11248 <fileno@plt>
   19f08:	mov	r2, r6
   19f0c:	mov	r3, r5
   19f10:	str	r7, [sp]
   19f14:	bl	11134 <lseek64@plt>
   19f18:	and	r2, r0, r1
   19f1c:	cmn	r2, #1
   19f20:	beq	19f40 <__assert_fail@plt+0x8c38>
   19f24:	strd	r0, [r4, #80]	; 0x50
   19f28:	ldr	r0, [r4]
   19f2c:	bic	r0, r0, #16
   19f30:	str	r0, [r4]
   19f34:	mov	r0, #0
   19f38:	sub	sp, fp, #16
   19f3c:	pop	{r4, r5, r6, r7, fp, pc}
   19f40:	mvn	r0, #0
   19f44:	sub	sp, fp, #16
   19f48:	pop	{r4, r5, r6, r7, fp, pc}
   19f4c:	push	{r4, r5, fp, lr}
   19f50:	add	fp, sp, #8
   19f54:	cmp	r0, #0
   19f58:	beq	19fec <__assert_fail@plt+0x8ce4>
   19f5c:	mov	r1, #47	; 0x2f
   19f60:	mov	r4, r0
   19f64:	bl	1129c <strrchr@plt>
   19f68:	cmp	r0, #0
   19f6c:	mov	r5, r4
   19f70:	addne	r5, r0, #1
   19f74:	sub	r0, r5, r4
   19f78:	cmp	r0, #7
   19f7c:	blt	19fd0 <__assert_fail@plt+0x8cc8>
   19f80:	movw	r1, #61174	; 0xeef6
   19f84:	sub	r0, r5, #7
   19f88:	mov	r2, #7
   19f8c:	movt	r1, #1
   19f90:	bl	112d8 <strncmp@plt>
   19f94:	cmp	r0, #0
   19f98:	bne	19fd0 <__assert_fail@plt+0x8cc8>
   19f9c:	movw	r1, #61182	; 0xeefe
   19fa0:	mov	r0, r5
   19fa4:	mov	r2, #3
   19fa8:	movt	r1, #1
   19fac:	bl	112d8 <strncmp@plt>
   19fb0:	cmp	r0, #0
   19fb4:	beq	19fc0 <__assert_fail@plt+0x8cb8>
   19fb8:	mov	r4, r5
   19fbc:	b	19fd0 <__assert_fail@plt+0x8cc8>
   19fc0:	movw	r0, #344	; 0x158
   19fc4:	add	r4, r5, #3
   19fc8:	movt	r0, #3
   19fcc:	str	r4, [r0]
   19fd0:	movw	r0, #348	; 0x15c
   19fd4:	movt	r0, #3
   19fd8:	str	r4, [r0]
   19fdc:	movw	r0, #416	; 0x1a0
   19fe0:	movt	r0, #3
   19fe4:	str	r4, [r0]
   19fe8:	pop	{r4, r5, fp, pc}
   19fec:	movw	r0, #360	; 0x168
   19ff0:	mov	r1, #55	; 0x37
   19ff4:	mov	r2, #1
   19ff8:	movt	r0, #3
   19ffc:	ldr	r3, [r0]
   1a000:	movw	r0, #61118	; 0xeebe
   1a004:	movt	r0, #1
   1a008:	bl	11128 <fwrite@plt>
   1a00c:	bl	112e4 <abort@plt>
   1a010:	push	{r4, r5, r6, sl, fp, lr}
   1a014:	add	fp, sp, #16
   1a018:	mov	r4, r0
   1a01c:	movw	r0, #424	; 0x1a8
   1a020:	movt	r0, #3
   1a024:	cmp	r4, #0
   1a028:	moveq	r4, r0
   1a02c:	bl	1120c <__errno_location@plt>
   1a030:	ldr	r6, [r0]
   1a034:	mov	r5, r0
   1a038:	mov	r0, r4
   1a03c:	mov	r1, #48	; 0x30
   1a040:	bl	1ca54 <__assert_fail@plt+0xb74c>
   1a044:	str	r6, [r5]
   1a048:	pop	{r4, r5, r6, sl, fp, pc}
   1a04c:	movw	r1, #424	; 0x1a8
   1a050:	cmp	r0, #0
   1a054:	movt	r1, #3
   1a058:	movne	r1, r0
   1a05c:	ldr	r0, [r1]
   1a060:	bx	lr
   1a064:	movw	r2, #424	; 0x1a8
   1a068:	cmp	r0, #0
   1a06c:	movt	r2, #3
   1a070:	movne	r2, r0
   1a074:	str	r1, [r2]
   1a078:	bx	lr
   1a07c:	movw	r3, #424	; 0x1a8
   1a080:	cmp	r0, #0
   1a084:	and	r2, r2, #1
   1a088:	movt	r3, #3
   1a08c:	movne	r3, r0
   1a090:	ubfx	r0, r1, #5, #3
   1a094:	and	r1, r1, #31
   1a098:	add	ip, r3, r0, lsl #2
   1a09c:	mov	r0, #1
   1a0a0:	ldr	r3, [ip, #8]
   1a0a4:	and	r0, r0, r3, lsr r1
   1a0a8:	eor	r2, r0, r2
   1a0ac:	eor	r1, r3, r2, lsl r1
   1a0b0:	str	r1, [ip, #8]
   1a0b4:	bx	lr
   1a0b8:	movw	r2, #424	; 0x1a8
   1a0bc:	cmp	r0, #0
   1a0c0:	movt	r2, #3
   1a0c4:	movne	r2, r0
   1a0c8:	ldr	r0, [r2, #4]
   1a0cc:	str	r1, [r2, #4]
   1a0d0:	bx	lr
   1a0d4:	push	{fp, lr}
   1a0d8:	mov	fp, sp
   1a0dc:	movw	r3, #424	; 0x1a8
   1a0e0:	cmp	r0, #0
   1a0e4:	movt	r3, #3
   1a0e8:	movne	r3, r0
   1a0ec:	cmp	r1, #0
   1a0f0:	mov	r0, #10
   1a0f4:	cmpne	r2, #0
   1a0f8:	str	r0, [r3]
   1a0fc:	bne	1a104 <__assert_fail@plt+0x8dfc>
   1a100:	bl	112e4 <abort@plt>
   1a104:	str	r1, [r3, #40]	; 0x28
   1a108:	str	r2, [r3, #44]	; 0x2c
   1a10c:	pop	{fp, pc}
   1a110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a114:	add	fp, sp, #28
   1a118:	sub	sp, sp, #20
   1a11c:	mov	r7, r0
   1a120:	ldr	r0, [fp, #8]
   1a124:	movw	r5, #424	; 0x1a8
   1a128:	mov	r8, r3
   1a12c:	mov	r9, r2
   1a130:	mov	sl, r1
   1a134:	movt	r5, #3
   1a138:	cmp	r0, #0
   1a13c:	movne	r5, r0
   1a140:	bl	1120c <__errno_location@plt>
   1a144:	ldr	r2, [r5, #40]	; 0x28
   1a148:	ldr	r3, [r5, #44]	; 0x2c
   1a14c:	mov	r4, r0
   1a150:	ldm	r5, {r0, r1}
   1a154:	add	r5, r5, #8
   1a158:	ldr	r6, [r4]
   1a15c:	stm	sp, {r0, r1, r5}
   1a160:	mov	r0, r7
   1a164:	mov	r1, sl
   1a168:	str	r2, [sp, #12]
   1a16c:	str	r3, [sp, #16]
   1a170:	mov	r2, r9
   1a174:	mov	r3, r8
   1a178:	bl	1a188 <__assert_fail@plt+0x8e80>
   1a17c:	str	r6, [r4]
   1a180:	sub	sp, fp, #28
   1a184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a18c:	add	fp, sp, #28
   1a190:	sub	sp, sp, #156	; 0x9c
   1a194:	str	r0, [fp, #-84]	; 0xffffffac
   1a198:	add	r0, r2, #1
   1a19c:	mov	r6, r1
   1a1a0:	mov	r7, r3
   1a1a4:	str	r2, [fp, #-80]	; 0xffffffb0
   1a1a8:	str	r0, [sp, #80]	; 0x50
   1a1ac:	ldr	r0, [fp, #12]
   1a1b0:	and	r1, r0, #1
   1a1b4:	str	r1, [sp, #36]	; 0x24
   1a1b8:	and	r1, r0, #4
   1a1bc:	str	r1, [sp, #32]
   1a1c0:	ubfx	r8, r0, #1, #1
   1a1c4:	bl	11140 <__ctype_get_mb_cur_max@plt>
   1a1c8:	str	r0, [sp, #40]	; 0x28
   1a1cc:	ldr	r0, [fp, #24]
   1a1d0:	ldr	r4, [fp, #8]
   1a1d4:	mov	r1, #0
   1a1d8:	str	r1, [fp, #-52]	; 0xffffffcc
   1a1dc:	mov	r1, #0
   1a1e0:	str	r1, [sp, #60]	; 0x3c
   1a1e4:	mov	r1, #1
   1a1e8:	str	r1, [sp, #84]	; 0x54
   1a1ec:	str	r0, [sp, #76]	; 0x4c
   1a1f0:	ldr	r0, [fp, #20]
   1a1f4:	str	r0, [sp, #72]	; 0x48
   1a1f8:	mov	r0, #0
   1a1fc:	str	r0, [sp, #56]	; 0x38
   1a200:	mov	r0, #0
   1a204:	str	r0, [fp, #-88]	; 0xffffffa8
   1a208:	mov	r0, #0
   1a20c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a210:	mov	r0, #0
   1a214:	cmp	r4, #10
   1a218:	bhi	1b534 <__assert_fail@plt+0xa22c>
   1a21c:	add	r1, pc, #24
   1a220:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a224:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1a228:	mov	r5, r6
   1a22c:	mov	r9, #0
   1a230:	mov	r2, #1
   1a234:	mov	r3, #0
   1a238:	ldr	pc, [r1, r4, lsl #2]
   1a23c:	andeq	sl, r1, r4, lsl #6
   1a240:	andeq	sl, r1, r0, asr #6
   1a244:	andeq	sl, r1, r4, lsl r3
   1a248:	strdeq	sl, [r1], -ip
   1a24c:	andeq	sl, r1, r4, lsr r3
   1a250:	muleq	r1, r8, r3
   1a254:	andeq	sl, r1, r4, lsr #6
   1a258:	andeq	sl, r1, r0, lsl r6
   1a25c:	andeq	sl, r1, r8, ror #4
   1a260:	andeq	sl, r1, r8, ror #4
   1a264:	andeq	sl, r1, r0, lsr #9
   1a268:	movw	r6, #61264	; 0xef50
   1a26c:	mov	r0, #0
   1a270:	mov	r2, #5
   1a274:	movt	r6, #1
   1a278:	mov	r1, r6
   1a27c:	bl	110f8 <dcgettext@plt>
   1a280:	cmp	r0, r6
   1a284:	str	r0, [sp, #72]	; 0x48
   1a288:	bne	1a478 <__assert_fail@plt+0x9170>
   1a28c:	bl	1dc60 <__assert_fail@plt+0xc958>
   1a290:	ldrb	r1, [r0]
   1a294:	and	r1, r1, #223	; 0xdf
   1a298:	cmp	r1, #71	; 0x47
   1a29c:	beq	1a3f8 <__assert_fail@plt+0x90f0>
   1a2a0:	cmp	r1, #85	; 0x55
   1a2a4:	bne	1a45c <__assert_fail@plt+0x9154>
   1a2a8:	ldrb	r1, [r0, #1]
   1a2ac:	and	r1, r1, #223	; 0xdf
   1a2b0:	cmp	r1, #84	; 0x54
   1a2b4:	bne	1a45c <__assert_fail@plt+0x9154>
   1a2b8:	ldrb	r1, [r0, #2]
   1a2bc:	and	r1, r1, #223	; 0xdf
   1a2c0:	cmp	r1, #70	; 0x46
   1a2c4:	bne	1a45c <__assert_fail@plt+0x9154>
   1a2c8:	ldrb	r1, [r0, #3]
   1a2cc:	cmp	r1, #45	; 0x2d
   1a2d0:	bne	1a45c <__assert_fail@plt+0x9154>
   1a2d4:	ldrb	r1, [r0, #4]
   1a2d8:	cmp	r1, #56	; 0x38
   1a2dc:	bne	1a45c <__assert_fail@plt+0x9154>
   1a2e0:	ldrb	r0, [r0, #5]
   1a2e4:	cmp	r0, #0
   1a2e8:	movw	r0, #61268	; 0xef54
   1a2ec:	movt	r0, #1
   1a2f0:	str	r0, [sp, #72]	; 0x48
   1a2f4:	bne	1a45c <__assert_fail@plt+0x9154>
   1a2f8:	b	1a478 <__assert_fail@plt+0x9170>
   1a2fc:	mov	r0, #1
   1a300:	b	1a340 <__assert_fail@plt+0x9038>
   1a304:	mov	r4, #0
   1a308:	mov	r9, #0
   1a30c:	mov	r2, r0
   1a310:	b	1a390 <__assert_fail@plt+0x9088>
   1a314:	tst	r8, #1
   1a318:	bne	1a340 <__assert_fail@plt+0x9038>
   1a31c:	mov	r2, r0
   1a320:	b	1a368 <__assert_fail@plt+0x9060>
   1a324:	mov	r0, #1
   1a328:	mov	r9, #0
   1a32c:	mov	r4, #5
   1a330:	b	1a3ac <__assert_fail@plt+0x90a4>
   1a334:	mov	r2, #1
   1a338:	tst	r8, #1
   1a33c:	beq	1a368 <__assert_fail@plt+0x9060>
   1a340:	mov	r1, #1
   1a344:	mov	r9, #0
   1a348:	mov	r4, #2
   1a34c:	mov	r2, r0
   1a350:	mov	r3, #1
   1a354:	str	r1, [fp, #-72]	; 0xffffffb8
   1a358:	movw	r1, #61266	; 0xef52
   1a35c:	movt	r1, #1
   1a360:	str	r1, [fp, #-88]	; 0xffffffa8
   1a364:	b	1a610 <__assert_fail@plt+0x9308>
   1a368:	cmp	r5, #0
   1a36c:	mov	r9, #1
   1a370:	mov	r4, #2
   1a374:	movne	r0, #39	; 0x27
   1a378:	strbne	r0, [ip]
   1a37c:	movw	r0, #61266	; 0xef52
   1a380:	movt	r0, #1
   1a384:	str	r0, [fp, #-88]	; 0xffffffa8
   1a388:	mov	r0, #1
   1a38c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a390:	mov	r3, #0
   1a394:	b	1a610 <__assert_fail@plt+0x9308>
   1a398:	mov	r4, #5
   1a39c:	tst	r8, #1
   1a3a0:	beq	1a3c8 <__assert_fail@plt+0x90c0>
   1a3a4:	mov	r0, #1
   1a3a8:	mov	r9, #0
   1a3ac:	str	r0, [fp, #-72]	; 0xffffffb8
   1a3b0:	movw	r0, #61262	; 0xef4e
   1a3b4:	mov	r2, #1
   1a3b8:	mov	r3, #1
   1a3bc:	movt	r0, #1
   1a3c0:	str	r0, [fp, #-88]	; 0xffffffa8
   1a3c4:	b	1a610 <__assert_fail@plt+0x9308>
   1a3c8:	cmp	r5, #0
   1a3cc:	mov	r3, #0
   1a3d0:	mov	r9, #1
   1a3d4:	mov	r2, #1
   1a3d8:	movne	r0, #34	; 0x22
   1a3dc:	strbne	r0, [ip]
   1a3e0:	movw	r0, #61262	; 0xef4e
   1a3e4:	movt	r0, #1
   1a3e8:	str	r0, [fp, #-88]	; 0xffffffa8
   1a3ec:	mov	r0, #1
   1a3f0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a3f4:	b	1a610 <__assert_fail@plt+0x9308>
   1a3f8:	ldrb	r1, [r0, #1]
   1a3fc:	and	r1, r1, #223	; 0xdf
   1a400:	cmp	r1, #66	; 0x42
   1a404:	bne	1a45c <__assert_fail@plt+0x9154>
   1a408:	ldrb	r1, [r0, #2]
   1a40c:	cmp	r1, #49	; 0x31
   1a410:	bne	1a45c <__assert_fail@plt+0x9154>
   1a414:	ldrb	r1, [r0, #3]
   1a418:	cmp	r1, #56	; 0x38
   1a41c:	bne	1a45c <__assert_fail@plt+0x9154>
   1a420:	ldrb	r1, [r0, #4]
   1a424:	cmp	r1, #48	; 0x30
   1a428:	bne	1a45c <__assert_fail@plt+0x9154>
   1a42c:	ldrb	r1, [r0, #5]
   1a430:	cmp	r1, #51	; 0x33
   1a434:	bne	1a45c <__assert_fail@plt+0x9154>
   1a438:	ldrb	r1, [r0, #6]
   1a43c:	cmp	r1, #48	; 0x30
   1a440:	bne	1a45c <__assert_fail@plt+0x9154>
   1a444:	ldrb	r0, [r0, #7]
   1a448:	cmp	r0, #0
   1a44c:	movw	r0, #61276	; 0xef5c
   1a450:	movt	r0, #1
   1a454:	str	r0, [sp, #72]	; 0x48
   1a458:	beq	1a478 <__assert_fail@plt+0x9170>
   1a45c:	movw	r1, #61262	; 0xef4e
   1a460:	movw	r0, #61266	; 0xef52
   1a464:	cmp	r4, #9
   1a468:	movt	r1, #1
   1a46c:	movt	r0, #1
   1a470:	moveq	r0, r1
   1a474:	str	r0, [sp, #72]	; 0x48
   1a478:	movw	r6, #61266	; 0xef52
   1a47c:	mov	r0, #0
   1a480:	mov	r2, #5
   1a484:	movt	r6, #1
   1a488:	mov	r1, r6
   1a48c:	bl	110f8 <dcgettext@plt>
   1a490:	cmp	r0, r6
   1a494:	str	r0, [sp, #76]	; 0x4c
   1a498:	beq	1a4e4 <__assert_fail@plt+0x91dc>
   1a49c:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a4a0:	mov	r9, #0
   1a4a4:	tst	r8, #1
   1a4a8:	bne	1a5ec <__assert_fail@plt+0x92e4>
   1a4ac:	ldr	r0, [sp, #72]	; 0x48
   1a4b0:	ldrb	r0, [r0]
   1a4b4:	cmp	r0, #0
   1a4b8:	beq	1a5ec <__assert_fail@plt+0x92e4>
   1a4bc:	ldr	r1, [sp, #72]	; 0x48
   1a4c0:	mov	r9, #0
   1a4c4:	add	r1, r1, #1
   1a4c8:	cmp	r9, r5
   1a4cc:	strbcc	r0, [ip, r9]
   1a4d0:	ldrb	r0, [r1, r9]
   1a4d4:	add	r9, r9, #1
   1a4d8:	cmp	r0, #0
   1a4dc:	bne	1a4c8 <__assert_fail@plt+0x91c0>
   1a4e0:	b	1a5ec <__assert_fail@plt+0x92e4>
   1a4e4:	bl	1dc60 <__assert_fail@plt+0xc958>
   1a4e8:	ldrb	r1, [r0]
   1a4ec:	and	r1, r1, #223	; 0xdf
   1a4f0:	cmp	r1, #71	; 0x47
   1a4f4:	beq	1a564 <__assert_fail@plt+0x925c>
   1a4f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a4fc:	cmp	r1, #85	; 0x55
   1a500:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a504:	ldrb	r1, [r0, #1]
   1a508:	and	r1, r1, #223	; 0xdf
   1a50c:	cmp	r1, #84	; 0x54
   1a510:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a514:	ldrb	r1, [r0, #2]
   1a518:	and	r1, r1, #223	; 0xdf
   1a51c:	cmp	r1, #70	; 0x46
   1a520:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a524:	ldrb	r1, [r0, #3]
   1a528:	cmp	r1, #45	; 0x2d
   1a52c:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a530:	ldrb	r1, [r0, #4]
   1a534:	cmp	r1, #56	; 0x38
   1a538:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a53c:	ldrb	r0, [r0, #5]
   1a540:	cmp	r0, #0
   1a544:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a548:	movw	r0, #61272	; 0xef58
   1a54c:	movt	r0, #1
   1a550:	str	r0, [sp, #76]	; 0x4c
   1a554:	mov	r9, #0
   1a558:	tst	r8, #1
   1a55c:	beq	1a4ac <__assert_fail@plt+0x91a4>
   1a560:	b	1a5ec <__assert_fail@plt+0x92e4>
   1a564:	ldrb	r1, [r0, #1]
   1a568:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a56c:	and	r1, r1, #223	; 0xdf
   1a570:	cmp	r1, #66	; 0x42
   1a574:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a578:	ldrb	r1, [r0, #2]
   1a57c:	cmp	r1, #49	; 0x31
   1a580:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a584:	ldrb	r1, [r0, #3]
   1a588:	cmp	r1, #56	; 0x38
   1a58c:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a590:	ldrb	r1, [r0, #4]
   1a594:	cmp	r1, #48	; 0x30
   1a598:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a59c:	ldrb	r1, [r0, #5]
   1a5a0:	cmp	r1, #51	; 0x33
   1a5a4:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a5a8:	ldrb	r1, [r0, #6]
   1a5ac:	cmp	r1, #48	; 0x30
   1a5b0:	bne	1a5c0 <__assert_fail@plt+0x92b8>
   1a5b4:	ldrb	r0, [r0, #7]
   1a5b8:	cmp	r0, #0
   1a5bc:	beq	1b3d4 <__assert_fail@plt+0xa0cc>
   1a5c0:	movw	r0, #61266	; 0xef52
   1a5c4:	cmp	r4, #9
   1a5c8:	movt	r0, #1
   1a5cc:	mov	r1, r0
   1a5d0:	movw	r0, #61262	; 0xef4e
   1a5d4:	movt	r0, #1
   1a5d8:	moveq	r1, r0
   1a5dc:	str	r1, [sp, #76]	; 0x4c
   1a5e0:	mov	r9, #0
   1a5e4:	tst	r8, #1
   1a5e8:	beq	1a4ac <__assert_fail@plt+0x91a4>
   1a5ec:	ldr	r6, [sp, #76]	; 0x4c
   1a5f0:	mov	r0, r6
   1a5f4:	bl	111f4 <strlen@plt>
   1a5f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a5fc:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1a600:	str	r0, [fp, #-72]	; 0xffffffb8
   1a604:	str	r6, [fp, #-88]	; 0xffffffa8
   1a608:	mov	r2, #1
   1a60c:	mov	r3, r8
   1a610:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a614:	str	r4, [fp, #-64]	; 0xffffffc0
   1a618:	mov	sl, #0
   1a61c:	str	r3, [fp, #-76]	; 0xffffffb4
   1a620:	str	r2, [sp, #88]	; 0x58
   1a624:	cmp	r0, #0
   1a628:	movwne	r0, #1
   1a62c:	and	r1, r0, r3
   1a630:	and	r1, r2, r1
   1a634:	str	r1, [sp, #48]	; 0x30
   1a638:	sub	r1, r4, #2
   1a63c:	clz	r1, r1
   1a640:	lsr	r1, r1, #5
   1a644:	and	r1, r1, r3
   1a648:	str	r1, [sp, #44]	; 0x2c
   1a64c:	subs	r1, r4, #2
   1a650:	eor	r4, r3, #1
   1a654:	movwne	r1, #1
   1a658:	str	r4, [sp, #92]	; 0x5c
   1a65c:	orr	r4, r1, r4
   1a660:	and	r1, r1, r2
   1a664:	and	r0, r0, r1
   1a668:	str	r4, [sp, #64]	; 0x40
   1a66c:	ldr	r4, [sp, #84]	; 0x54
   1a670:	str	r0, [fp, #-60]	; 0xffffffc4
   1a674:	orr	r0, r1, r3
   1a678:	ldr	r1, [fp, #16]
   1a67c:	eor	r0, r0, #1
   1a680:	clz	r1, r1
   1a684:	lsr	r1, r1, #5
   1a688:	orr	r0, r1, r0
   1a68c:	str	r0, [fp, #-68]	; 0xffffffbc
   1a690:	eor	r0, r2, #1
   1a694:	str	r0, [sp, #52]	; 0x34
   1a698:	cmn	r7, #1
   1a69c:	beq	1a6ac <__assert_fail@plt+0x93a4>
   1a6a0:	cmp	sl, r7
   1a6a4:	bne	1a6b8 <__assert_fail@plt+0x93b0>
   1a6a8:	b	1b34c <__assert_fail@plt+0xa044>
   1a6ac:	ldrb	r0, [lr, sl]
   1a6b0:	cmp	r0, #0
   1a6b4:	beq	1b354 <__assert_fail@plt+0xa04c>
   1a6b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a6bc:	cmp	r0, #0
   1a6c0:	beq	1a720 <__assert_fail@plt+0x9418>
   1a6c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a6c8:	mov	r6, r5
   1a6cc:	add	r5, sl, r0
   1a6d0:	cmp	r0, #2
   1a6d4:	bcc	1a740 <__assert_fail@plt+0x9438>
   1a6d8:	mov	r0, #0
   1a6dc:	cmn	r7, #1
   1a6e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6e4:	bne	1a6fc <__assert_fail@plt+0x93f4>
   1a6e8:	mov	r0, lr
   1a6ec:	bl	111f4 <strlen@plt>
   1a6f0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1a6f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a6f8:	mov	r7, r0
   1a6fc:	cmp	r5, r7
   1a700:	bls	1a750 <__assert_fail@plt+0x9448>
   1a704:	mov	r0, #0
   1a708:	mov	r5, r6
   1a70c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a710:	ldrb	r6, [lr, sl]
   1a714:	cmp	r6, #126	; 0x7e
   1a718:	bls	1a7a0 <__assert_fail@plt+0x9498>
   1a71c:	b	1acfc <__assert_fail@plt+0x99f4>
   1a720:	mov	r0, #0
   1a724:	str	r0, [fp, #-56]	; 0xffffffc8
   1a728:	mov	r0, #0
   1a72c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a730:	ldrb	r6, [lr, sl]
   1a734:	cmp	r6, #126	; 0x7e
   1a738:	bls	1a7a0 <__assert_fail@plt+0x9498>
   1a73c:	b	1acfc <__assert_fail@plt+0x99f4>
   1a740:	mov	r0, #0
   1a744:	str	r0, [fp, #-56]	; 0xffffffc8
   1a748:	cmp	r5, r7
   1a74c:	bhi	1a704 <__assert_fail@plt+0x93fc>
   1a750:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a754:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a758:	add	r0, lr, sl
   1a75c:	bl	111e8 <bcmp@plt>
   1a760:	ldr	r2, [sp, #92]	; 0x5c
   1a764:	cmp	r0, #0
   1a768:	mov	r1, r0
   1a76c:	mov	r5, r6
   1a770:	movwne	r1, #1
   1a774:	orr	r1, r1, r2
   1a778:	tst	r1, #1
   1a77c:	beq	1b414 <__assert_fail@plt+0xa10c>
   1a780:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a784:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1a788:	clz	r0, r0
   1a78c:	lsr	r0, r0, #5
   1a790:	str	r0, [fp, #-48]	; 0xffffffd0
   1a794:	ldrb	r6, [lr, sl]
   1a798:	cmp	r6, #126	; 0x7e
   1a79c:	bhi	1acfc <__assert_fail@plt+0x99f4>
   1a7a0:	add	r3, pc, #16
   1a7a4:	mov	r8, #1
   1a7a8:	mov	r2, #110	; 0x6e
   1a7ac:	mov	r0, #97	; 0x61
   1a7b0:	mov	r1, #0
   1a7b4:	ldr	pc, [r3, r6, lsl #2]
   1a7b8:			; <UNDEFINED> instruction: 0x0001aab4
   1a7bc:	strdeq	sl, [r1], -ip
   1a7c0:	strdeq	sl, [r1], -ip
   1a7c4:	strdeq	sl, [r1], -ip
   1a7c8:	strdeq	sl, [r1], -ip
   1a7cc:	strdeq	sl, [r1], -ip
   1a7d0:	strdeq	sl, [r1], -ip
   1a7d4:			; <UNDEFINED> instruction: 0x0001adb0
   1a7d8:	muleq	r1, r4, sl
   1a7dc:	andeq	sl, r1, ip, lsl #21
   1a7e0:	andeq	sl, r1, r0, lsr #21
   1a7e4:	ldrdeq	sl, [r1], -r0
   1a7e8:	andeq	sl, r1, r4, lsl #21
   1a7ec:	muleq	r1, ip, sl
   1a7f0:	strdeq	sl, [r1], -ip
   1a7f4:	strdeq	sl, [r1], -ip
   1a7f8:	strdeq	sl, [r1], -ip
   1a7fc:	strdeq	sl, [r1], -ip
   1a800:	strdeq	sl, [r1], -ip
   1a804:	strdeq	sl, [r1], -ip
   1a808:	strdeq	sl, [r1], -ip
   1a80c:	strdeq	sl, [r1], -ip
   1a810:	strdeq	sl, [r1], -ip
   1a814:	strdeq	sl, [r1], -ip
   1a818:	strdeq	sl, [r1], -ip
   1a81c:	strdeq	sl, [r1], -ip
   1a820:	strdeq	sl, [r1], -ip
   1a824:	strdeq	sl, [r1], -ip
   1a828:	strdeq	sl, [r1], -ip
   1a82c:	strdeq	sl, [r1], -ip
   1a830:	strdeq	sl, [r1], -ip
   1a834:	strdeq	sl, [r1], -ip
   1a838:	andeq	sl, r1, r8, lsr #20
   1a83c:	andeq	sl, r1, ip, lsr #20
   1a840:	andeq	sl, r1, ip, lsr #20
   1a844:	andeq	sl, r1, ip, lsl sl
   1a848:	andeq	sl, r1, ip, lsr #20
   1a84c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a850:	andeq	sl, r1, ip, lsr #20
   1a854:	ldrdeq	sl, [r1], -r8
   1a858:	andeq	sl, r1, ip, lsr #20
   1a85c:	andeq	sl, r1, ip, lsr #20
   1a860:	andeq	sl, r1, ip, lsr #20
   1a864:			; <UNDEFINED> instruction: 0x0001a9b4
   1a868:			; <UNDEFINED> instruction: 0x0001a9b4
   1a86c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a870:			; <UNDEFINED> instruction: 0x0001a9b4
   1a874:			; <UNDEFINED> instruction: 0x0001a9b4
   1a878:			; <UNDEFINED> instruction: 0x0001a9b4
   1a87c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a880:			; <UNDEFINED> instruction: 0x0001a9b4
   1a884:			; <UNDEFINED> instruction: 0x0001a9b4
   1a888:			; <UNDEFINED> instruction: 0x0001a9b4
   1a88c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a890:			; <UNDEFINED> instruction: 0x0001a9b4
   1a894:			; <UNDEFINED> instruction: 0x0001a9b4
   1a898:			; <UNDEFINED> instruction: 0x0001a9b4
   1a89c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8a0:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8a4:	andeq	sl, r1, ip, lsr #20
   1a8a8:	andeq	sl, r1, ip, lsr #20
   1a8ac:	andeq	sl, r1, ip, lsr #20
   1a8b0:	andeq	sl, r1, ip, lsr #20
   1a8b4:	muleq	r1, ip, fp
   1a8b8:	strdeq	sl, [r1], -ip
   1a8bc:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8c0:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8c4:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8c8:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8cc:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8d0:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8d4:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8d8:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8dc:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8e0:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8e4:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8e8:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8ec:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8f0:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8f4:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8f8:			; <UNDEFINED> instruction: 0x0001a9b4
   1a8fc:			; <UNDEFINED> instruction: 0x0001a9b4
   1a900:			; <UNDEFINED> instruction: 0x0001a9b4
   1a904:			; <UNDEFINED> instruction: 0x0001a9b4
   1a908:			; <UNDEFINED> instruction: 0x0001a9b4
   1a90c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a910:			; <UNDEFINED> instruction: 0x0001a9b4
   1a914:			; <UNDEFINED> instruction: 0x0001a9b4
   1a918:			; <UNDEFINED> instruction: 0x0001a9b4
   1a91c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a920:			; <UNDEFINED> instruction: 0x0001a9b4
   1a924:	andeq	sl, r1, ip, lsr #20
   1a928:	andeq	sl, r1, r0, ror #20
   1a92c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a930:	andeq	sl, r1, ip, lsr #20
   1a934:			; <UNDEFINED> instruction: 0x0001a9b4
   1a938:	andeq	sl, r1, ip, lsr #20
   1a93c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a940:			; <UNDEFINED> instruction: 0x0001a9b4
   1a944:			; <UNDEFINED> instruction: 0x0001a9b4
   1a948:			; <UNDEFINED> instruction: 0x0001a9b4
   1a94c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a950:			; <UNDEFINED> instruction: 0x0001a9b4
   1a954:			; <UNDEFINED> instruction: 0x0001a9b4
   1a958:			; <UNDEFINED> instruction: 0x0001a9b4
   1a95c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a960:			; <UNDEFINED> instruction: 0x0001a9b4
   1a964:			; <UNDEFINED> instruction: 0x0001a9b4
   1a968:			; <UNDEFINED> instruction: 0x0001a9b4
   1a96c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a970:			; <UNDEFINED> instruction: 0x0001a9b4
   1a974:			; <UNDEFINED> instruction: 0x0001a9b4
   1a978:			; <UNDEFINED> instruction: 0x0001a9b4
   1a97c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a980:			; <UNDEFINED> instruction: 0x0001a9b4
   1a984:			; <UNDEFINED> instruction: 0x0001a9b4
   1a988:			; <UNDEFINED> instruction: 0x0001a9b4
   1a98c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a990:			; <UNDEFINED> instruction: 0x0001a9b4
   1a994:			; <UNDEFINED> instruction: 0x0001a9b4
   1a998:			; <UNDEFINED> instruction: 0x0001a9b4
   1a99c:			; <UNDEFINED> instruction: 0x0001a9b4
   1a9a0:			; <UNDEFINED> instruction: 0x0001a9b4
   1a9a4:	strdeq	sl, [r1], -r4
   1a9a8:	andeq	sl, r1, ip, lsr #20
   1a9ac:	strdeq	sl, [r1], -r4
   1a9b0:	andeq	sl, r1, ip, lsl sl
   1a9b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a9b8:	tst	r0, #1
   1a9bc:	bne	1ac74 <__assert_fail@plt+0x996c>
   1a9c0:	ldr	r1, [fp, #16]
   1a9c4:	ubfx	r0, r6, #5, #3
   1a9c8:	mov	r2, #1
   1a9cc:	ldr	r0, [r1, r0, lsl #2]
   1a9d0:	and	r1, r6, #31
   1a9d4:	tst	r0, r2, lsl r1
   1a9d8:	beq	1ac74 <__assert_fail@plt+0x996c>
   1a9dc:	mov	r0, r6
   1a9e0:	mov	r1, r8
   1a9e4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a9e8:	tst	r2, #1
   1a9ec:	beq	1ac94 <__assert_fail@plt+0x998c>
   1a9f0:	b	1b3f0 <__assert_fail@plt+0xa0e8>
   1a9f4:	cmp	r7, #1
   1a9f8:	beq	1aa1c <__assert_fail@plt+0x9714>
   1a9fc:	mov	r8, #0
   1aa00:	cmn	r7, #1
   1aa04:	bne	1ac60 <__assert_fail@plt+0x9958>
   1aa08:	ldrb	r0, [lr, #1]
   1aa0c:	cmp	r0, #0
   1aa10:	beq	1aa1c <__assert_fail@plt+0x9714>
   1aa14:	mvn	r7, #0
   1aa18:	b	1ac60 <__assert_fail@plt+0x9958>
   1aa1c:	mov	r8, #0
   1aa20:	cmp	sl, #0
   1aa24:	bne	1ac60 <__assert_fail@plt+0x9958>
   1aa28:	mov	r1, #1
   1aa2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aa30:	cmp	r0, #2
   1aa34:	bne	1aa4c <__assert_fail@plt+0x9744>
   1aa38:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1aa3c:	mov	r8, r1
   1aa40:	tst	r0, #1
   1aa44:	beq	1a9b4 <__assert_fail@plt+0x96ac>
   1aa48:	b	1b3f0 <__assert_fail@plt+0xa0e8>
   1aa4c:	mov	r8, r1
   1aa50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1aa54:	tst	r0, #1
   1aa58:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1aa5c:	b	1ac74 <__assert_fail@plt+0x996c>
   1aa60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aa64:	cmp	r0, #2
   1aa68:	bne	1ad28 <__assert_fail@plt+0x9a20>
   1aa6c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1aa70:	tst	r0, #1
   1aa74:	bne	1b3f0 <__assert_fail@plt+0xa0e8>
   1aa78:	mov	r0, #0
   1aa7c:	str	r0, [fp, #-56]	; 0xffffffc8
   1aa80:	b	1ad40 <__assert_fail@plt+0x9a38>
   1aa84:	mov	r0, #102	; 0x66
   1aa88:	b	1adb0 <__assert_fail@plt+0x9aa8>
   1aa8c:	mov	r2, #116	; 0x74
   1aa90:	b	1aaa0 <__assert_fail@plt+0x9798>
   1aa94:	mov	r0, #98	; 0x62
   1aa98:	b	1adb0 <__assert_fail@plt+0x9aa8>
   1aa9c:	mov	r2, #114	; 0x72
   1aaa0:	ldr	r0, [sp, #64]	; 0x40
   1aaa4:	tst	r0, #1
   1aaa8:	mov	r0, r2
   1aaac:	bne	1adb0 <__assert_fail@plt+0x9aa8>
   1aab0:	b	1b3f0 <__assert_fail@plt+0xa0e8>
   1aab4:	ldr	r0, [sp, #88]	; 0x58
   1aab8:	tst	r0, #1
   1aabc:	beq	1add0 <__assert_fail@plt+0x9ac8>
   1aac0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1aac4:	tst	r0, #1
   1aac8:	bne	1b52c <__assert_fail@plt+0xa224>
   1aacc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aad0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aad4:	subs	r0, r0, #2
   1aad8:	movwne	r0, #1
   1aadc:	orr	r0, r0, r1
   1aae0:	tst	r0, #1
   1aae4:	bne	1ab20 <__assert_fail@plt+0x9818>
   1aae8:	cmp	r9, r5
   1aaec:	movcc	r0, #39	; 0x27
   1aaf0:	strbcc	r0, [ip, r9]
   1aaf4:	add	r0, r9, #1
   1aaf8:	cmp	r0, r5
   1aafc:	movcc	r1, #36	; 0x24
   1ab00:	strbcc	r1, [ip, r0]
   1ab04:	add	r0, r9, #2
   1ab08:	add	r9, r9, #3
   1ab0c:	cmp	r0, r5
   1ab10:	movcc	r1, #39	; 0x27
   1ab14:	strbcc	r1, [ip, r0]
   1ab18:	mov	r0, #1
   1ab1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ab20:	mov	r1, #1
   1ab24:	cmp	r9, r5
   1ab28:	mov	r8, #0
   1ab2c:	mov	r6, #48	; 0x30
   1ab30:	str	r1, [fp, #-56]	; 0xffffffc8
   1ab34:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1ab38:	movcc	r0, #92	; 0x5c
   1ab3c:	strbcc	r0, [ip, r9]
   1ab40:	add	r0, r9, #1
   1ab44:	cmp	r1, #2
   1ab48:	beq	1af9c <__assert_fail@plt+0x9c94>
   1ab4c:	add	r1, sl, #1
   1ab50:	cmp	r1, r7
   1ab54:	bcs	1af9c <__assert_fail@plt+0x9c94>
   1ab58:	ldrb	r1, [lr, r1]
   1ab5c:	sub	r1, r1, #48	; 0x30
   1ab60:	uxtb	r1, r1
   1ab64:	cmp	r1, #9
   1ab68:	bhi	1af9c <__assert_fail@plt+0x9c94>
   1ab6c:	cmp	r0, r5
   1ab70:	movcc	r1, #48	; 0x30
   1ab74:	strbcc	r1, [ip, r0]
   1ab78:	add	r0, r9, #2
   1ab7c:	add	r9, r9, #3
   1ab80:	cmp	r0, r5
   1ab84:	movcc	r1, #48	; 0x30
   1ab88:	strbcc	r1, [ip, r0]
   1ab8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ab90:	tst	r0, #1
   1ab94:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1ab98:	b	1ac74 <__assert_fail@plt+0x996c>
   1ab9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aba0:	mov	r6, #63	; 0x3f
   1aba4:	cmp	r0, #5
   1aba8:	beq	1afb0 <__assert_fail@plt+0x9ca8>
   1abac:	mov	r1, #0
   1abb0:	cmp	r0, #2
   1abb4:	str	r1, [fp, #-56]	; 0xffffffc8
   1abb8:	bne	1b078 <__assert_fail@plt+0x9d70>
   1abbc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1abc0:	mov	r8, #0
   1abc4:	tst	r0, #1
   1abc8:	beq	1a9b4 <__assert_fail@plt+0x96ac>
   1abcc:	b	1b3f0 <__assert_fail@plt+0xa0e8>
   1abd0:	mov	r0, #118	; 0x76
   1abd4:	b	1adb0 <__assert_fail@plt+0x9aa8>
   1abd8:	mov	r0, #1
   1abdc:	mov	r6, #39	; 0x27
   1abe0:	str	r0, [sp, #60]	; 0x3c
   1abe4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1abe8:	cmp	r0, #2
   1abec:	bne	1adf0 <__assert_fail@plt+0x9ae8>
   1abf0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1abf4:	tst	r0, #1
   1abf8:	bne	1b3f0 <__assert_fail@plt+0xa0e8>
   1abfc:	ldr	r2, [sp, #56]	; 0x38
   1ac00:	clz	r1, r5
   1ac04:	mov	r8, #1
   1ac08:	lsr	r1, r1, #5
   1ac0c:	cmp	r2, #0
   1ac10:	mov	r0, r2
   1ac14:	movwne	r0, #1
   1ac18:	orrs	r0, r0, r1
   1ac1c:	moveq	r2, r5
   1ac20:	moveq	r5, r0
   1ac24:	cmp	r9, r5
   1ac28:	str	r2, [sp, #56]	; 0x38
   1ac2c:	movcc	r0, #39	; 0x27
   1ac30:	strbcc	r0, [ip, r9]
   1ac34:	add	r0, r9, #1
   1ac38:	cmp	r0, r5
   1ac3c:	movcc	r1, #92	; 0x5c
   1ac40:	strbcc	r1, [ip, r0]
   1ac44:	add	r0, r9, #2
   1ac48:	add	r9, r9, #3
   1ac4c:	cmp	r0, r5
   1ac50:	movcc	r1, #39	; 0x27
   1ac54:	strbcc	r1, [ip, r0]
   1ac58:	mov	r0, #0
   1ac5c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ac60:	mov	r0, #0
   1ac64:	str	r0, [fp, #-56]	; 0xffffffc8
   1ac68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ac6c:	tst	r0, #1
   1ac70:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1ac74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac78:	mov	r1, r8
   1ac7c:	cmp	r0, #0
   1ac80:	mov	r0, r6
   1ac84:	beq	1ad48 <__assert_fail@plt+0x9a40>
   1ac88:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ac8c:	tst	r2, #1
   1ac90:	bne	1b3f0 <__assert_fail@plt+0xa0e8>
   1ac94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ac98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ac9c:	subs	r2, r2, #2
   1aca0:	movwne	r2, #1
   1aca4:	orr	r2, r2, r3
   1aca8:	tst	r2, #1
   1acac:	bne	1ace8 <__assert_fail@plt+0x99e0>
   1acb0:	cmp	r9, r5
   1acb4:	movcc	r2, #39	; 0x27
   1acb8:	strbcc	r2, [ip, r9]
   1acbc:	add	r2, r9, #1
   1acc0:	cmp	r2, r5
   1acc4:	movcc	r3, #36	; 0x24
   1acc8:	strbcc	r3, [ip, r2]
   1accc:	add	r2, r9, #2
   1acd0:	add	r9, r9, #3
   1acd4:	cmp	r2, r5
   1acd8:	movcc	r3, #39	; 0x27
   1acdc:	strbcc	r3, [ip, r2]
   1ace0:	mov	r2, #1
   1ace4:	str	r2, [fp, #-52]	; 0xffffffcc
   1ace8:	cmp	r9, r5
   1acec:	movcc	r2, #92	; 0x5c
   1acf0:	strbcc	r2, [ip, r9]
   1acf4:	add	r9, r9, #1
   1acf8:	b	1ad90 <__assert_fail@plt+0x9a88>
   1acfc:	ldr	r0, [sp, #40]	; 0x28
   1ad00:	cmp	r0, #1
   1ad04:	bne	1ae04 <__assert_fail@plt+0x9afc>
   1ad08:	bl	111c4 <__ctype_b_loc@plt>
   1ad0c:	ldr	r0, [r0]
   1ad10:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1ad14:	mov	r1, #1
   1ad18:	add	r0, r0, r6, lsl #1
   1ad1c:	ldrb	r0, [r0, #1]
   1ad20:	ubfx	r8, r0, #6, #1
   1ad24:	b	1b15c <__assert_fail@plt+0x9e54>
   1ad28:	ldr	r1, [sp, #48]	; 0x30
   1ad2c:	mov	r0, #0
   1ad30:	str	r0, [fp, #-56]	; 0xffffffc8
   1ad34:	mov	r0, #92	; 0x5c
   1ad38:	cmp	r1, #0
   1ad3c:	beq	1adb0 <__assert_fail@plt+0x9aa8>
   1ad40:	mov	r6, #92	; 0x5c
   1ad44:	mov	r8, #0
   1ad48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ad4c:	cmp	r0, #0
   1ad50:	bne	1ad88 <__assert_fail@plt+0x9a80>
   1ad54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ad58:	tst	r0, #1
   1ad5c:	beq	1ad88 <__assert_fail@plt+0x9a80>
   1ad60:	cmp	r9, r5
   1ad64:	movcc	r0, #39	; 0x27
   1ad68:	strbcc	r0, [ip, r9]
   1ad6c:	add	r0, r9, #1
   1ad70:	add	r9, r9, #2
   1ad74:	cmp	r0, r5
   1ad78:	movcc	r1, #39	; 0x27
   1ad7c:	strbcc	r1, [ip, r0]
   1ad80:	mov	r0, #0
   1ad84:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad88:	mov	r1, r8
   1ad8c:	mov	r0, r6
   1ad90:	cmp	r9, r5
   1ad94:	and	r4, r4, r1
   1ad98:	strbcc	r0, [ip, r9]
   1ad9c:	add	r9, r9, #1
   1ada0:	add	sl, sl, #1
   1ada4:	cmn	r7, #1
   1ada8:	bne	1a6a0 <__assert_fail@plt+0x9398>
   1adac:	b	1a6ac <__assert_fail@plt+0x93a4>
   1adb0:	mov	r1, #0
   1adb4:	mov	r8, #0
   1adb8:	str	r1, [fp, #-56]	; 0xffffffc8
   1adbc:	ldr	r1, [sp, #88]	; 0x58
   1adc0:	tst	r1, #1
   1adc4:	mov	r1, #0
   1adc8:	beq	1a9b4 <__assert_fail@plt+0x96ac>
   1adcc:	b	1ac88 <__assert_fail@plt+0x9980>
   1add0:	ldr	r0, [sp, #36]	; 0x24
   1add4:	mov	r6, #0
   1add8:	mov	r8, #0
   1addc:	cmp	r0, #0
   1ade0:	mov	r0, #0
   1ade4:	str	r0, [fp, #-56]	; 0xffffffc8
   1ade8:	bne	1ada0 <__assert_fail@plt+0x9a98>
   1adec:	b	1a9b4 <__assert_fail@plt+0x96ac>
   1adf0:	mov	r8, #1
   1adf4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1adf8:	tst	r0, #1
   1adfc:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1ae00:	b	1ac74 <__assert_fail@plt+0x996c>
   1ae04:	mov	r0, #0
   1ae08:	cmn	r7, #1
   1ae0c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ae10:	str	r0, [fp, #-40]	; 0xffffffd8
   1ae14:	bne	1ae28 <__assert_fail@plt+0x9b20>
   1ae18:	mov	r0, lr
   1ae1c:	bl	111f4 <strlen@plt>
   1ae20:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1ae24:	mov	r7, r0
   1ae28:	ldr	r0, [sp, #44]	; 0x2c
   1ae2c:	str	r4, [sp, #84]	; 0x54
   1ae30:	str	r5, [sp, #28]
   1ae34:	cmp	r0, #0
   1ae38:	beq	1b08c <__assert_fail@plt+0x9d84>
   1ae3c:	ldr	r0, [sp, #80]	; 0x50
   1ae40:	mov	r8, #1
   1ae44:	mov	r5, #0
   1ae48:	add	r0, r0, sl
   1ae4c:	str	r0, [sp, #24]
   1ae50:	sub	r0, fp, #40	; 0x28
   1ae54:	mov	r3, r0
   1ae58:	b	1ae94 <__assert_fail@plt+0x9b8c>
   1ae5c:	ldr	r5, [sp, #68]	; 0x44
   1ae60:	add	r5, r0, r5
   1ae64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae68:	bl	1111c <iswprint@plt>
   1ae6c:	cmp	r0, #0
   1ae70:	sub	r4, fp, #40	; 0x28
   1ae74:	movwne	r0, #1
   1ae78:	and	r8, r8, r0
   1ae7c:	mov	r0, r4
   1ae80:	bl	110ec <mbsinit@plt>
   1ae84:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1ae88:	mov	r3, r4
   1ae8c:	cmp	r0, #0
   1ae90:	bne	1b150 <__assert_fail@plt+0x9e48>
   1ae94:	str	r5, [sp, #68]	; 0x44
   1ae98:	add	r5, r5, sl
   1ae9c:	sub	r0, fp, #44	; 0x2c
   1aea0:	add	r1, lr, r5
   1aea4:	sub	r2, r7, r5
   1aea8:	bl	1dc98 <__assert_fail@plt+0xc990>
   1aeac:	cmn	r0, #2
   1aeb0:	beq	1b110 <__assert_fail@plt+0x9e08>
   1aeb4:	ldr	ip, [fp, #-84]	; 0xffffffac
   1aeb8:	cmn	r0, #1
   1aebc:	beq	1b104 <__assert_fail@plt+0x9dfc>
   1aec0:	cmp	r0, #0
   1aec4:	beq	1b108 <__assert_fail@plt+0x9e00>
   1aec8:	cmp	r0, #2
   1aecc:	bcc	1ae5c <__assert_fail@plt+0x9b54>
   1aed0:	ldr	r1, [sp, #68]	; 0x44
   1aed4:	ldr	r2, [sp, #24]
   1aed8:	add	r1, r2, r1
   1aedc:	sub	r2, r0, #1
   1aee0:	ldrb	r3, [r1]
   1aee4:	sub	r3, r3, #91	; 0x5b
   1aee8:	cmp	r3, #33	; 0x21
   1aeec:	bls	1af0c <__assert_fail@plt+0x9c04>
   1aef0:	add	r1, r1, #1
   1aef4:	subs	r2, r2, #1
   1aef8:	beq	1ae5c <__assert_fail@plt+0x9b54>
   1aefc:	ldrb	r3, [r1]
   1af00:	sub	r3, r3, #91	; 0x5b
   1af04:	cmp	r3, #33	; 0x21
   1af08:	bhi	1aef0 <__assert_fail@plt+0x9be8>
   1af0c:	add	r5, pc, #0
   1af10:	ldr	pc, [r5, r3, lsl #2]
   1af14:	andeq	fp, r1, r8, lsr #8
   1af18:	andeq	fp, r1, r8, lsr #8
   1af1c:	strdeq	sl, [r1], -r0
   1af20:	andeq	fp, r1, r8, lsr #8
   1af24:	strdeq	sl, [r1], -r0
   1af28:	andeq	fp, r1, r8, lsr #8
   1af2c:	strdeq	sl, [r1], -r0
   1af30:	strdeq	sl, [r1], -r0
   1af34:	strdeq	sl, [r1], -r0
   1af38:	strdeq	sl, [r1], -r0
   1af3c:	strdeq	sl, [r1], -r0
   1af40:	strdeq	sl, [r1], -r0
   1af44:	strdeq	sl, [r1], -r0
   1af48:	strdeq	sl, [r1], -r0
   1af4c:	strdeq	sl, [r1], -r0
   1af50:	strdeq	sl, [r1], -r0
   1af54:	strdeq	sl, [r1], -r0
   1af58:	strdeq	sl, [r1], -r0
   1af5c:	strdeq	sl, [r1], -r0
   1af60:	strdeq	sl, [r1], -r0
   1af64:	strdeq	sl, [r1], -r0
   1af68:	strdeq	sl, [r1], -r0
   1af6c:	strdeq	sl, [r1], -r0
   1af70:	strdeq	sl, [r1], -r0
   1af74:	strdeq	sl, [r1], -r0
   1af78:	strdeq	sl, [r1], -r0
   1af7c:	strdeq	sl, [r1], -r0
   1af80:	strdeq	sl, [r1], -r0
   1af84:	strdeq	sl, [r1], -r0
   1af88:	strdeq	sl, [r1], -r0
   1af8c:	strdeq	sl, [r1], -r0
   1af90:	strdeq	sl, [r1], -r0
   1af94:	strdeq	sl, [r1], -r0
   1af98:	andeq	fp, r1, r8, lsr #8
   1af9c:	mov	r9, r0
   1afa0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1afa4:	tst	r0, #1
   1afa8:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1afac:	b	1ac74 <__assert_fail@plt+0x996c>
   1afb0:	mov	r0, #0
   1afb4:	str	r0, [fp, #-56]	; 0xffffffc8
   1afb8:	ldr	r0, [sp, #32]
   1afbc:	cmp	r0, #0
   1afc0:	beq	1b078 <__assert_fail@plt+0x9d70>
   1afc4:	add	r0, sl, #2
   1afc8:	mov	r1, r7
   1afcc:	cmp	r0, r7
   1afd0:	bcs	1b078 <__assert_fail@plt+0x9d70>
   1afd4:	add	r1, sl, lr
   1afd8:	ldrb	r1, [r1, #1]
   1afdc:	cmp	r1, #63	; 0x3f
   1afe0:	bne	1b078 <__assert_fail@plt+0x9d70>
   1afe4:	ldrb	r8, [lr, r0]
   1afe8:	sub	r2, r8, #33	; 0x21
   1afec:	cmp	r2, #29
   1aff0:	bhi	1b078 <__assert_fail@plt+0x9d70>
   1aff4:	mov	r1, r4
   1aff8:	movw	r4, #20929	; 0x51c1
   1affc:	mov	r3, #1
   1b000:	movt	r4, #14336	; 0x3800
   1b004:	tst	r4, r3, lsl r2
   1b008:	beq	1b334 <__assert_fail@plt+0xa02c>
   1b00c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b010:	tst	r2, #1
   1b014:	bne	1b3f0 <__assert_fail@plt+0xa0e8>
   1b018:	cmp	r9, r5
   1b01c:	mov	r6, r8
   1b020:	mov	r4, r1
   1b024:	mov	sl, r0
   1b028:	mov	r8, #0
   1b02c:	movcc	r2, #63	; 0x3f
   1b030:	strbcc	r2, [ip, r9]
   1b034:	add	r2, r9, #1
   1b038:	cmp	r2, r5
   1b03c:	movcc	r3, #34	; 0x22
   1b040:	strbcc	r3, [ip, r2]
   1b044:	add	r2, r9, #2
   1b048:	cmp	r2, r5
   1b04c:	movcc	r3, #34	; 0x22
   1b050:	strbcc	r3, [ip, r2]
   1b054:	add	r2, r9, #3
   1b058:	add	r9, r9, #4
   1b05c:	cmp	r2, r5
   1b060:	movcc	r3, #63	; 0x3f
   1b064:	strbcc	r3, [ip, r2]
   1b068:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b06c:	tst	r0, #1
   1b070:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1b074:	b	1ac74 <__assert_fail@plt+0x996c>
   1b078:	mov	r8, #0
   1b07c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b080:	tst	r0, #1
   1b084:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1b088:	b	1ac74 <__assert_fail@plt+0x996c>
   1b08c:	mov	r8, #1
   1b090:	mov	r5, #0
   1b094:	sub	r4, fp, #40	; 0x28
   1b098:	str	r5, [sp, #68]	; 0x44
   1b09c:	add	r5, r5, sl
   1b0a0:	sub	r0, fp, #44	; 0x2c
   1b0a4:	mov	r3, r4
   1b0a8:	add	r1, lr, r5
   1b0ac:	sub	r2, r7, r5
   1b0b0:	bl	1dc98 <__assert_fail@plt+0xc990>
   1b0b4:	cmn	r0, #2
   1b0b8:	beq	1b110 <__assert_fail@plt+0x9e08>
   1b0bc:	cmn	r0, #1
   1b0c0:	beq	1b104 <__assert_fail@plt+0x9dfc>
   1b0c4:	ldr	r5, [sp, #68]	; 0x44
   1b0c8:	cmp	r0, #0
   1b0cc:	beq	1b14c <__assert_fail@plt+0x9e44>
   1b0d0:	add	r5, r0, r5
   1b0d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0d8:	bl	1111c <iswprint@plt>
   1b0dc:	cmp	r0, #0
   1b0e0:	sub	r4, fp, #40	; 0x28
   1b0e4:	movwne	r0, #1
   1b0e8:	and	r8, r8, r0
   1b0ec:	mov	r0, r4
   1b0f0:	bl	110ec <mbsinit@plt>
   1b0f4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1b0f8:	cmp	r0, #0
   1b0fc:	beq	1b098 <__assert_fail@plt+0x9d90>
   1b100:	b	1b150 <__assert_fail@plt+0x9e48>
   1b104:	mov	r8, #0
   1b108:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1b10c:	b	1b144 <__assert_fail@plt+0x9e3c>
   1b110:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1b114:	mov	r8, #0
   1b118:	cmp	r5, r7
   1b11c:	bcs	1b144 <__assert_fail@plt+0x9e3c>
   1b120:	ldrb	r0, [lr, r5]
   1b124:	cmp	r0, #0
   1b128:	beq	1b144 <__assert_fail@plt+0x9e3c>
   1b12c:	ldr	r0, [sp, #68]	; 0x44
   1b130:	add	r0, r0, #1
   1b134:	add	r5, r0, sl
   1b138:	str	r0, [sp, #68]	; 0x44
   1b13c:	cmp	r5, r7
   1b140:	bcc	1b120 <__assert_fail@plt+0x9e18>
   1b144:	ldr	r5, [sp, #68]	; 0x44
   1b148:	b	1b150 <__assert_fail@plt+0x9e48>
   1b14c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1b150:	mov	r1, r5
   1b154:	ldr	r5, [sp, #28]
   1b158:	ldr	r4, [sp, #84]	; 0x54
   1b15c:	ldr	r0, [sp, #52]	; 0x34
   1b160:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b164:	cmp	r1, #1
   1b168:	orr	r2, r8, r0
   1b16c:	mov	r0, r1
   1b170:	bhi	1b17c <__assert_fail@plt+0x9e74>
   1b174:	tst	r2, #1
   1b178:	bne	1a9b4 <__assert_fail@plt+0x96ac>
   1b17c:	add	r0, r0, sl
   1b180:	str	r2, [sp, #84]	; 0x54
   1b184:	str	r0, [fp, #-56]	; 0xffffffc8
   1b188:	mov	r0, #0
   1b18c:	tst	r2, #1
   1b190:	bne	1b270 <__assert_fail@plt+0x9f68>
   1b194:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b198:	tst	r1, #1
   1b19c:	bne	1b3f0 <__assert_fail@plt+0xa0e8>
   1b1a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b1a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b1a8:	subs	r2, r1, #2
   1b1ac:	movwne	r2, #1
   1b1b0:	orr	r2, r2, r0
   1b1b4:	tst	r2, #1
   1b1b8:	bne	1b1f4 <__assert_fail@plt+0x9eec>
   1b1bc:	cmp	r9, r5
   1b1c0:	add	r2, r9, #1
   1b1c4:	mov	r0, #1
   1b1c8:	movcc	r1, #39	; 0x27
   1b1cc:	str	r0, [fp, #-52]	; 0xffffffcc
   1b1d0:	strbcc	r1, [ip, r9]
   1b1d4:	cmp	r2, r5
   1b1d8:	movcc	r1, #36	; 0x24
   1b1dc:	strbcc	r1, [ip, r2]
   1b1e0:	add	r2, r9, #2
   1b1e4:	add	r9, r9, #3
   1b1e8:	cmp	r2, r5
   1b1ec:	movcc	r1, #39	; 0x27
   1b1f0:	strbcc	r1, [ip, r2]
   1b1f4:	cmp	r9, r5
   1b1f8:	add	r2, r9, #1
   1b1fc:	movcc	r1, #92	; 0x5c
   1b200:	strbcc	r1, [ip, r9]
   1b204:	cmp	r2, r5
   1b208:	bcs	1b21c <__assert_fail@plt+0x9f14>
   1b20c:	uxtb	r3, r6
   1b210:	mov	r1, #48	; 0x30
   1b214:	orr	r3, r1, r3, lsr #6
   1b218:	strb	r3, [ip, r2]
   1b21c:	add	r2, r9, #2
   1b220:	add	r9, r9, #3
   1b224:	cmp	r2, r5
   1b228:	lsrcc	r3, r6, #3
   1b22c:	movcc	r1, #6
   1b230:	bficc	r3, r1, #3, #29
   1b234:	mov	r1, #6
   1b238:	bfi	r6, r1, #3, #29
   1b23c:	strbcc	r3, [ip, r2]
   1b240:	mov	r2, #1
   1b244:	b	1b2a4 <__assert_fail@plt+0x9f9c>
   1b248:	ldr	r1, [sp, #80]	; 0x50
   1b24c:	cmp	r9, r2
   1b250:	mov	r5, r2
   1b254:	ldr	r2, [sp, #84]	; 0x54
   1b258:	strbcc	r6, [ip, r9]
   1b25c:	add	r9, r9, #1
   1b260:	ldrb	r6, [r1, sl]
   1b264:	mov	sl, r3
   1b268:	tst	r2, #1
   1b26c:	beq	1b194 <__assert_fail@plt+0x9e8c>
   1b270:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b274:	tst	r1, #1
   1b278:	beq	1b298 <__assert_fail@plt+0x9f90>
   1b27c:	cmp	r9, r5
   1b280:	mov	r2, r0
   1b284:	movcc	r1, #92	; 0x5c
   1b288:	strbcc	r1, [ip, r9]
   1b28c:	add	r9, r9, #1
   1b290:	mov	r1, #0
   1b294:	b	1b2a0 <__assert_fail@plt+0x9f98>
   1b298:	mov	r1, #0
   1b29c:	mov	r2, r0
   1b2a0:	str	r1, [fp, #-48]	; 0xffffffd0
   1b2a4:	mov	r0, r2
   1b2a8:	and	r1, r2, #1
   1b2ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b2b0:	add	r3, sl, #1
   1b2b4:	cmp	r2, r3
   1b2b8:	bls	1b318 <__assert_fail@plt+0xa010>
   1b2bc:	mov	r2, r5
   1b2c0:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1b2c4:	cmp	r1, #0
   1b2c8:	movwne	r1, #1
   1b2cc:	mvn	r5, r5
   1b2d0:	orr	r5, r5, r1
   1b2d4:	tst	r5, #1
   1b2d8:	bne	1b248 <__assert_fail@plt+0x9f40>
   1b2dc:	cmp	r9, r2
   1b2e0:	movcc	r5, r4
   1b2e4:	movcc	r4, #39	; 0x27
   1b2e8:	strbcc	r4, [ip, r9]
   1b2ec:	movcc	r4, r5
   1b2f0:	add	r5, r9, #1
   1b2f4:	add	r9, r9, #2
   1b2f8:	cmp	r5, r2
   1b2fc:	movcc	r1, r4
   1b300:	movcc	r4, #39	; 0x27
   1b304:	strbcc	r4, [ip, r5]
   1b308:	movcc	r4, r1
   1b30c:	mov	r1, #0
   1b310:	str	r1, [fp, #-52]	; 0xffffffcc
   1b314:	b	1b248 <__assert_fail@plt+0x9f40>
   1b318:	cmp	r1, #0
   1b31c:	movwne	r1, #1
   1b320:	str	r1, [fp, #-56]	; 0xffffffc8
   1b324:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b328:	cmp	r0, #0
   1b32c:	beq	1ad54 <__assert_fail@plt+0x9a4c>
   1b330:	b	1ad88 <__assert_fail@plt+0x9a80>
   1b334:	mov	r8, #0
   1b338:	mov	r4, r1
   1b33c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b340:	tst	r0, #1
   1b344:	beq	1a9c0 <__assert_fail@plt+0x96b8>
   1b348:	b	1ac74 <__assert_fail@plt+0x996c>
   1b34c:	mov	r7, sl
   1b350:	b	1b358 <__assert_fail@plt+0xa050>
   1b354:	mvn	r7, #0
   1b358:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b35c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b360:	ldr	r2, [sp, #88]	; 0x58
   1b364:	eor	r0, r1, #2
   1b368:	orr	r0, r0, r9
   1b36c:	clz	r0, r0
   1b370:	lsr	r0, r0, #5
   1b374:	tst	r3, r0
   1b378:	bne	1b3f0 <__assert_fail@plt+0xa0e8>
   1b37c:	subs	r0, r1, #2
   1b380:	movwne	r0, #1
   1b384:	orr	r0, r3, r0
   1b388:	tst	r0, #1
   1b38c:	ldreq	r0, [sp, #60]	; 0x3c
   1b390:	eoreq	r0, r0, #1
   1b394:	tsteq	r0, #1
   1b398:	bne	1b4cc <__assert_fail@plt+0xa1c4>
   1b39c:	tst	r4, #1
   1b3a0:	bne	1b490 <__assert_fail@plt+0xa188>
   1b3a4:	ldr	r6, [sp, #56]	; 0x38
   1b3a8:	mov	r8, #0
   1b3ac:	cmp	r6, #0
   1b3b0:	beq	1b4c8 <__assert_fail@plt+0xa1c0>
   1b3b4:	mov	r1, #0
   1b3b8:	mov	r4, #2
   1b3bc:	cmp	r5, #0
   1b3c0:	mov	r0, r2
   1b3c4:	mov	r3, #0
   1b3c8:	str	r1, [sp, #84]	; 0x54
   1b3cc:	beq	1a214 <__assert_fail@plt+0x8f0c>
   1b3d0:	b	1b4cc <__assert_fail@plt+0xa1c4>
   1b3d4:	movw	r0, #61280	; 0xef60
   1b3d8:	movt	r0, #1
   1b3dc:	str	r0, [sp, #76]	; 0x4c
   1b3e0:	mov	r9, #0
   1b3e4:	tst	r8, #1
   1b3e8:	beq	1a4ac <__assert_fail@plt+0x91a4>
   1b3ec:	b	1a5ec <__assert_fail@plt+0x92e4>
   1b3f0:	ldr	r1, [sp, #88]	; 0x58
   1b3f4:	mov	r0, #2
   1b3f8:	tst	r1, #1
   1b3fc:	movwne	r0, #4
   1b400:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b404:	ldr	r1, [fp, #12]
   1b408:	cmp	r2, #2
   1b40c:	moveq	r2, r0
   1b410:	b	1b448 <__assert_fail@plt+0xa140>
   1b414:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b418:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1b41c:	ldr	r1, [fp, #12]
   1b420:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b424:	b	1b448 <__assert_fail@plt+0xa140>
   1b428:	ldr	r1, [sp, #88]	; 0x58
   1b42c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1b430:	ldr	r5, [sp, #28]
   1b434:	mov	r0, #2
   1b438:	tst	r1, #1
   1b43c:	ldr	r1, [fp, #12]
   1b440:	movwne	r0, #4
   1b444:	mov	r2, r0
   1b448:	mov	r0, #0
   1b44c:	bic	r1, r1, #2
   1b450:	str	r2, [sp]
   1b454:	mov	r2, lr
   1b458:	str	r0, [sp, #8]
   1b45c:	ldr	r0, [sp, #72]	; 0x48
   1b460:	str	r1, [sp, #4]
   1b464:	mov	r1, r5
   1b468:	str	r0, [sp, #12]
   1b46c:	ldr	r0, [sp, #76]	; 0x4c
   1b470:	str	r0, [sp, #16]
   1b474:	mov	r0, ip
   1b478:	mov	r3, r7
   1b47c:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b480:	mov	r9, r0
   1b484:	mov	r0, r9
   1b488:	sub	sp, fp, #28
   1b48c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b490:	mov	r0, #5
   1b494:	ldr	r1, [sp, #56]	; 0x38
   1b498:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b49c:	str	r0, [sp]
   1b4a0:	ldr	r0, [fp, #12]
   1b4a4:	str	r0, [sp, #4]
   1b4a8:	ldr	r0, [fp, #16]
   1b4ac:	str	r0, [sp, #8]
   1b4b0:	ldr	r0, [sp, #72]	; 0x48
   1b4b4:	str	r0, [sp, #12]
   1b4b8:	ldr	r0, [sp, #76]	; 0x4c
   1b4bc:	str	r0, [sp, #16]
   1b4c0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1b4c4:	b	1b478 <__assert_fail@plt+0xa170>
   1b4c8:	mov	r3, #0
   1b4cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1b4d0:	cmp	r1, #0
   1b4d4:	beq	1b510 <__assert_fail@plt+0xa208>
   1b4d8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b4dc:	tst	r3, #1
   1b4e0:	bne	1b514 <__assert_fail@plt+0xa20c>
   1b4e4:	ldrb	r0, [r1]
   1b4e8:	cmp	r0, #0
   1b4ec:	beq	1b514 <__assert_fail@plt+0xa20c>
   1b4f0:	add	r1, r1, #1
   1b4f4:	cmp	r9, r5
   1b4f8:	strbcc	r0, [r2, r9]
   1b4fc:	add	r9, r9, #1
   1b500:	ldrb	r0, [r1], #1
   1b504:	cmp	r0, #0
   1b508:	bne	1b4f4 <__assert_fail@plt+0xa1ec>
   1b50c:	b	1b514 <__assert_fail@plt+0xa20c>
   1b510:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b514:	cmp	r9, r5
   1b518:	movcc	r0, #0
   1b51c:	strbcc	r0, [r2, r9]
   1b520:	mov	r0, r9
   1b524:	sub	sp, fp, #28
   1b528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b52c:	mov	r0, #4
   1b530:	b	1b400 <__assert_fail@plt+0xa0f8>
   1b534:	bl	112e4 <abort@plt>
   1b538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b53c:	add	fp, sp, #28
   1b540:	sub	sp, sp, #28
   1b544:	movw	r5, #424	; 0x1a8
   1b548:	cmp	r2, #0
   1b54c:	mov	r4, r1
   1b550:	mov	r7, r0
   1b554:	str	r0, [sp, #20]
   1b558:	movt	r5, #3
   1b55c:	movne	r5, r2
   1b560:	bl	1120c <__errno_location@plt>
   1b564:	mov	sl, r0
   1b568:	ldr	r2, [r5, #40]	; 0x28
   1b56c:	ldr	r3, [r5, #44]	; 0x2c
   1b570:	ldm	r5, {r0, r1}
   1b574:	orr	r8, r1, #1
   1b578:	add	r9, r5, #8
   1b57c:	mov	r1, #0
   1b580:	ldr	r6, [sl]
   1b584:	stm	sp, {r0, r8, r9}
   1b588:	mov	r0, #0
   1b58c:	str	r2, [sp, #12]
   1b590:	str	r3, [sp, #16]
   1b594:	mov	r2, r7
   1b598:	mov	r3, r4
   1b59c:	str	r6, [sp, #24]
   1b5a0:	mov	r6, r4
   1b5a4:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b5a8:	add	r7, r0, #1
   1b5ac:	mov	r0, r7
   1b5b0:	bl	1c624 <__assert_fail@plt+0xb31c>
   1b5b4:	mov	r4, r0
   1b5b8:	ldr	r0, [r5]
   1b5bc:	ldr	r2, [r5, #44]	; 0x2c
   1b5c0:	ldr	r1, [r5, #40]	; 0x28
   1b5c4:	mov	r3, r6
   1b5c8:	stm	sp, {r0, r8, r9}
   1b5cc:	str	r2, [sp, #16]
   1b5d0:	ldr	r2, [sp, #20]
   1b5d4:	str	r1, [sp, #12]
   1b5d8:	mov	r0, r4
   1b5dc:	mov	r1, r7
   1b5e0:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b5e4:	ldr	r0, [sp, #24]
   1b5e8:	str	r0, [sl]
   1b5ec:	mov	r0, r4
   1b5f0:	sub	sp, fp, #28
   1b5f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5fc:	add	fp, sp, #28
   1b600:	sub	sp, sp, #36	; 0x24
   1b604:	movw	r8, #424	; 0x1a8
   1b608:	cmp	r3, #0
   1b60c:	mov	r4, r2
   1b610:	str	r2, [sp, #24]
   1b614:	mov	r5, r1
   1b618:	mov	r6, r0
   1b61c:	str	r0, [sp, #20]
   1b620:	movt	r8, #3
   1b624:	movne	r8, r3
   1b628:	bl	1120c <__errno_location@plt>
   1b62c:	str	r0, [sp, #28]
   1b630:	ldr	r1, [r8, #40]	; 0x28
   1b634:	ldr	r2, [r8, #44]	; 0x2c
   1b638:	ldr	r7, [r0]
   1b63c:	cmp	r4, #0
   1b640:	add	sl, r8, #8
   1b644:	mov	r0, #0
   1b648:	ldm	r8, {r3, r9}
   1b64c:	orreq	r9, r9, #1
   1b650:	stm	sp, {r3, r9, sl}
   1b654:	str	r1, [sp, #12]
   1b658:	str	r2, [sp, #16]
   1b65c:	mov	r1, #0
   1b660:	mov	r2, r6
   1b664:	mov	r3, r5
   1b668:	str	r7, [sp, #32]
   1b66c:	mov	r7, r5
   1b670:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b674:	add	r4, r0, #1
   1b678:	mov	r5, r0
   1b67c:	mov	r0, r4
   1b680:	bl	1c624 <__assert_fail@plt+0xb31c>
   1b684:	mov	r6, r0
   1b688:	ldr	r0, [r8]
   1b68c:	ldr	r2, [r8, #44]	; 0x2c
   1b690:	ldr	r1, [r8, #40]	; 0x28
   1b694:	mov	r3, r7
   1b698:	stm	sp, {r0, r9, sl}
   1b69c:	str	r2, [sp, #16]
   1b6a0:	ldr	r2, [sp, #20]
   1b6a4:	str	r1, [sp, #12]
   1b6a8:	mov	r0, r6
   1b6ac:	mov	r1, r4
   1b6b0:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b6b4:	ldr	r0, [sp, #24]
   1b6b8:	ldr	r1, [sp, #32]
   1b6bc:	ldr	r2, [sp, #28]
   1b6c0:	cmp	r0, #0
   1b6c4:	str	r1, [r2]
   1b6c8:	strne	r5, [r0]
   1b6cc:	mov	r0, r6
   1b6d0:	sub	sp, fp, #28
   1b6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6d8:	push	{r4, r5, r6, r7, fp, lr}
   1b6dc:	add	fp, sp, #16
   1b6e0:	movw	r4, #328	; 0x148
   1b6e4:	movt	r4, #3
   1b6e8:	ldrd	r6, [r4]
   1b6ec:	cmp	r7, #2
   1b6f0:	blt	1b71c <__assert_fail@plt+0xa414>
   1b6f4:	add	r5, r6, #12
   1b6f8:	mov	r7, #0
   1b6fc:	ldr	r0, [r5, r7, lsl #3]
   1b700:	bl	19e7c <__assert_fail@plt+0x8b74>
   1b704:	ldr	r1, [r4, #4]
   1b708:	add	r2, r7, #2
   1b70c:	add	r0, r7, #1
   1b710:	mov	r7, r0
   1b714:	cmp	r2, r1
   1b718:	blt	1b6fc <__assert_fail@plt+0xa3f4>
   1b71c:	ldr	r0, [r6, #4]
   1b720:	movw	r5, #472	; 0x1d8
   1b724:	movt	r5, #3
   1b728:	cmp	r0, r5
   1b72c:	beq	1b740 <__assert_fail@plt+0xa438>
   1b730:	bl	19e7c <__assert_fail@plt+0x8b74>
   1b734:	mov	r0, #256	; 0x100
   1b738:	str	r0, [r4, #8]
   1b73c:	str	r5, [r4, #12]
   1b740:	add	r5, r4, #8
   1b744:	cmp	r6, r5
   1b748:	beq	1b758 <__assert_fail@plt+0xa450>
   1b74c:	mov	r0, r6
   1b750:	bl	19e7c <__assert_fail@plt+0x8b74>
   1b754:	str	r5, [r4]
   1b758:	mov	r0, #1
   1b75c:	str	r0, [r4, #4]
   1b760:	pop	{r4, r5, r6, r7, fp, pc}
   1b764:	movw	r3, #424	; 0x1a8
   1b768:	mvn	r2, #0
   1b76c:	movt	r3, #3
   1b770:	b	1b774 <__assert_fail@plt+0xa46c>
   1b774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b778:	add	fp, sp, #28
   1b77c:	sub	sp, sp, #44	; 0x2c
   1b780:	mov	r7, r3
   1b784:	str	r2, [sp, #36]	; 0x24
   1b788:	str	r1, [sp, #32]
   1b78c:	mov	r5, r0
   1b790:	bl	1120c <__errno_location@plt>
   1b794:	cmp	r5, #0
   1b798:	bmi	1b900 <__assert_fail@plt+0xa5f8>
   1b79c:	cmn	r5, #-2147483647	; 0x80000001
   1b7a0:	beq	1b900 <__assert_fail@plt+0xa5f8>
   1b7a4:	movw	r8, #328	; 0x148
   1b7a8:	mov	r4, r0
   1b7ac:	ldr	r0, [r0]
   1b7b0:	movt	r8, #3
   1b7b4:	str	r4, [sp, #28]
   1b7b8:	ldr	r1, [r8, #4]
   1b7bc:	ldr	r6, [r8]
   1b7c0:	str	r0, [sp, #24]
   1b7c4:	cmp	r1, r5
   1b7c8:	ble	1b7d4 <__assert_fail@plt+0xa4cc>
   1b7cc:	mov	sl, r6
   1b7d0:	b	1b83c <__assert_fail@plt+0xa534>
   1b7d4:	mov	r0, #8
   1b7d8:	add	r9, r8, #8
   1b7dc:	str	r1, [fp, #-32]	; 0xffffffe0
   1b7e0:	sub	r1, r5, r1
   1b7e4:	mvn	r3, #-2147483648	; 0x80000000
   1b7e8:	str	r0, [sp]
   1b7ec:	subs	r0, r6, r9
   1b7f0:	add	r2, r1, #1
   1b7f4:	sub	r1, fp, #32
   1b7f8:	movne	r0, r6
   1b7fc:	bl	1c824 <__assert_fail@plt+0xb51c>
   1b800:	mov	sl, r0
   1b804:	cmp	r6, r9
   1b808:	str	r0, [r8]
   1b80c:	bne	1b818 <__assert_fail@plt+0xa510>
   1b810:	ldrd	r0, [r8, #8]
   1b814:	stm	sl, {r0, r1}
   1b818:	ldr	r1, [r8, #4]
   1b81c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b820:	add	r0, sl, r1, lsl #3
   1b824:	sub	r1, r2, r1
   1b828:	lsl	r2, r1, #3
   1b82c:	mov	r1, #0
   1b830:	bl	11230 <memset@plt>
   1b834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b838:	str	r0, [r8, #4]
   1b83c:	mov	r9, sl
   1b840:	ldm	r7, {r0, r1}
   1b844:	orr	r8, r1, #1
   1b848:	add	r1, r7, #8
   1b84c:	ldr	r2, [r7, #40]	; 0x28
   1b850:	ldr	r3, [r7, #44]	; 0x2c
   1b854:	ldr	r6, [r9, r5, lsl #3]!
   1b858:	str	r1, [sp, #20]
   1b85c:	ldr	r4, [r9, #4]!
   1b860:	stm	sp, {r0, r8}
   1b864:	add	r0, sp, #8
   1b868:	stm	r0, {r1, r2, r3}
   1b86c:	ldr	r2, [sp, #32]
   1b870:	ldr	r3, [sp, #36]	; 0x24
   1b874:	mov	r1, r6
   1b878:	mov	r0, r4
   1b87c:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b880:	cmp	r6, r0
   1b884:	bhi	1b8e8 <__assert_fail@plt+0xa5e0>
   1b888:	add	r6, r0, #1
   1b88c:	movw	r0, #472	; 0x1d8
   1b890:	movt	r0, #3
   1b894:	str	r6, [sl, r5, lsl #3]
   1b898:	cmp	r4, r0
   1b89c:	beq	1b8a8 <__assert_fail@plt+0xa5a0>
   1b8a0:	mov	r0, r4
   1b8a4:	bl	19e7c <__assert_fail@plt+0x8b74>
   1b8a8:	mov	r0, r6
   1b8ac:	bl	1c624 <__assert_fail@plt+0xb31c>
   1b8b0:	str	r0, [r9]
   1b8b4:	mov	r4, r0
   1b8b8:	add	r3, sp, #8
   1b8bc:	ldr	r0, [r7]
   1b8c0:	ldr	r1, [r7, #40]	; 0x28
   1b8c4:	ldr	r2, [r7, #44]	; 0x2c
   1b8c8:	stm	sp, {r0, r8}
   1b8cc:	ldr	r0, [sp, #20]
   1b8d0:	stm	r3, {r0, r1, r2}
   1b8d4:	ldr	r2, [sp, #32]
   1b8d8:	ldr	r3, [sp, #36]	; 0x24
   1b8dc:	mov	r0, r4
   1b8e0:	mov	r1, r6
   1b8e4:	bl	1a188 <__assert_fail@plt+0x8e80>
   1b8e8:	ldr	r1, [sp, #24]
   1b8ec:	ldr	r0, [sp, #28]
   1b8f0:	str	r1, [r0]
   1b8f4:	mov	r0, r4
   1b8f8:	sub	sp, fp, #28
   1b8fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b900:	bl	112e4 <abort@plt>
   1b904:	movw	r3, #424	; 0x1a8
   1b908:	movt	r3, #3
   1b90c:	b	1b774 <__assert_fail@plt+0xa46c>
   1b910:	movw	r3, #424	; 0x1a8
   1b914:	mov	r1, r0
   1b918:	mov	r0, #0
   1b91c:	mvn	r2, #0
   1b920:	movt	r3, #3
   1b924:	b	1b774 <__assert_fail@plt+0xa46c>
   1b928:	movw	r3, #424	; 0x1a8
   1b92c:	mov	r2, r1
   1b930:	mov	r1, r0
   1b934:	mov	r0, #0
   1b938:	movt	r3, #3
   1b93c:	b	1b774 <__assert_fail@plt+0xa46c>
   1b940:	push	{fp, lr}
   1b944:	mov	fp, sp
   1b948:	sub	sp, sp, #48	; 0x30
   1b94c:	vmov.i32	q8, #0	; 0x00000000
   1b950:	mov	ip, #32
   1b954:	mov	r3, sp
   1b958:	mov	lr, r2
   1b95c:	cmp	r1, #10
   1b960:	add	r2, r3, #16
   1b964:	vst1.64	{d16-d17}, [r3], ip
   1b968:	vst1.64	{d16-d17}, [r2]
   1b96c:	vst1.64	{d16-d17}, [r3]
   1b970:	beq	1b990 <__assert_fail@plt+0xa688>
   1b974:	str	r1, [sp]
   1b978:	mov	r3, sp
   1b97c:	mov	r1, lr
   1b980:	mvn	r2, #0
   1b984:	bl	1b774 <__assert_fail@plt+0xa46c>
   1b988:	mov	sp, fp
   1b98c:	pop	{fp, pc}
   1b990:	bl	112e4 <abort@plt>
   1b994:	push	{r4, sl, fp, lr}
   1b998:	add	fp, sp, #8
   1b99c:	sub	sp, sp, #48	; 0x30
   1b9a0:	vmov.i32	q8, #0	; 0x00000000
   1b9a4:	mov	ip, r3
   1b9a8:	mov	r3, sp
   1b9ac:	mov	lr, #32
   1b9b0:	cmp	r1, #10
   1b9b4:	add	r4, r3, #16
   1b9b8:	vst1.64	{d16-d17}, [r3], lr
   1b9bc:	vst1.64	{d16-d17}, [r4]
   1b9c0:	vst1.64	{d16-d17}, [r3]
   1b9c4:	beq	1b9e4 <__assert_fail@plt+0xa6dc>
   1b9c8:	str	r1, [sp]
   1b9cc:	mov	r1, r2
   1b9d0:	mov	r3, sp
   1b9d4:	mov	r2, ip
   1b9d8:	bl	1b774 <__assert_fail@plt+0xa46c>
   1b9dc:	sub	sp, fp, #8
   1b9e0:	pop	{r4, sl, fp, pc}
   1b9e4:	bl	112e4 <abort@plt>
   1b9e8:	push	{fp, lr}
   1b9ec:	mov	fp, sp
   1b9f0:	sub	sp, sp, #48	; 0x30
   1b9f4:	vmov.i32	q8, #0	; 0x00000000
   1b9f8:	mov	r3, sp
   1b9fc:	mov	ip, #32
   1ba00:	cmp	r0, #10
   1ba04:	add	r2, r3, #16
   1ba08:	vst1.64	{d16-d17}, [r3], ip
   1ba0c:	vst1.64	{d16-d17}, [r2]
   1ba10:	vst1.64	{d16-d17}, [r3]
   1ba14:	beq	1ba34 <__assert_fail@plt+0xa72c>
   1ba18:	str	r0, [sp]
   1ba1c:	mov	r3, sp
   1ba20:	mov	r0, #0
   1ba24:	mvn	r2, #0
   1ba28:	bl	1b774 <__assert_fail@plt+0xa46c>
   1ba2c:	mov	sp, fp
   1ba30:	pop	{fp, pc}
   1ba34:	bl	112e4 <abort@plt>
   1ba38:	push	{fp, lr}
   1ba3c:	mov	fp, sp
   1ba40:	sub	sp, sp, #48	; 0x30
   1ba44:	vmov.i32	q8, #0	; 0x00000000
   1ba48:	mov	r3, sp
   1ba4c:	mov	ip, #32
   1ba50:	cmp	r0, #10
   1ba54:	add	lr, r3, #16
   1ba58:	vst1.64	{d16-d17}, [r3], ip
   1ba5c:	vst1.64	{d16-d17}, [lr]
   1ba60:	vst1.64	{d16-d17}, [r3]
   1ba64:	beq	1ba80 <__assert_fail@plt+0xa778>
   1ba68:	str	r0, [sp]
   1ba6c:	mov	r3, sp
   1ba70:	mov	r0, #0
   1ba74:	bl	1b774 <__assert_fail@plt+0xa46c>
   1ba78:	mov	sp, fp
   1ba7c:	pop	{fp, pc}
   1ba80:	bl	112e4 <abort@plt>
   1ba84:	push	{r4, sl, fp, lr}
   1ba88:	add	fp, sp, #8
   1ba8c:	sub	sp, sp, #48	; 0x30
   1ba90:	mov	lr, r0
   1ba94:	movw	r0, #424	; 0x1a8
   1ba98:	mov	ip, r1
   1ba9c:	mov	r1, #32
   1baa0:	mov	r4, #1
   1baa4:	movt	r0, #3
   1baa8:	add	r3, r0, #16
   1baac:	vld1.64	{d16-d17}, [r0], r1
   1bab0:	vld1.64	{d20-d21}, [r0]
   1bab4:	vld1.64	{d18-d19}, [r3]
   1bab8:	mov	r3, sp
   1babc:	add	r0, r3, #32
   1bac0:	add	r1, r3, #16
   1bac4:	vst1.64	{d20-d21}, [r0]
   1bac8:	mov	r0, #28
   1bacc:	vst1.64	{d18-d19}, [r1]
   1bad0:	mov	r1, r3
   1bad4:	and	r0, r0, r2, lsr #3
   1bad8:	and	r2, r2, #31
   1badc:	vst1.64	{d16-d17}, [r1], r0
   1bae0:	ldr	r0, [r1, #8]
   1bae4:	bic	r4, r4, r0, lsr r2
   1bae8:	eor	r0, r0, r4, lsl r2
   1baec:	mov	r2, ip
   1baf0:	str	r0, [r1, #8]
   1baf4:	mov	r0, #0
   1baf8:	mov	r1, lr
   1bafc:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bb00:	sub	sp, fp, #8
   1bb04:	pop	{r4, sl, fp, pc}
   1bb08:	push	{fp, lr}
   1bb0c:	mov	fp, sp
   1bb10:	sub	sp, sp, #48	; 0x30
   1bb14:	mov	ip, r0
   1bb18:	movw	r0, #424	; 0x1a8
   1bb1c:	mov	r2, #32
   1bb20:	movt	r0, #3
   1bb24:	add	r3, r0, #16
   1bb28:	vld1.64	{d16-d17}, [r0], r2
   1bb2c:	vld1.64	{d20-d21}, [r0]
   1bb30:	vld1.64	{d18-d19}, [r3]
   1bb34:	mov	r3, sp
   1bb38:	add	r0, r3, #32
   1bb3c:	add	r2, r3, #16
   1bb40:	vst1.64	{d20-d21}, [r0]
   1bb44:	mov	r0, #28
   1bb48:	vst1.64	{d18-d19}, [r2]
   1bb4c:	mov	r2, r3
   1bb50:	and	r0, r0, r1, lsr #3
   1bb54:	and	r1, r1, #31
   1bb58:	vst1.64	{d16-d17}, [r2], r0
   1bb5c:	mov	r0, #1
   1bb60:	ldr	lr, [r2, #8]
   1bb64:	bic	r0, r0, lr, lsr r1
   1bb68:	eor	r0, lr, r0, lsl r1
   1bb6c:	mov	r1, ip
   1bb70:	str	r0, [r2, #8]
   1bb74:	mov	r0, #0
   1bb78:	mvn	r2, #0
   1bb7c:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bb80:	mov	sp, fp
   1bb84:	pop	{fp, pc}
   1bb88:	push	{fp, lr}
   1bb8c:	mov	fp, sp
   1bb90:	sub	sp, sp, #48	; 0x30
   1bb94:	mov	r1, r0
   1bb98:	movw	r0, #424	; 0x1a8
   1bb9c:	mov	r3, #32
   1bba0:	movt	r0, #3
   1bba4:	add	r2, r0, #16
   1bba8:	vld1.64	{d16-d17}, [r0], r3
   1bbac:	mov	r3, sp
   1bbb0:	vld1.64	{d18-d19}, [r2]
   1bbb4:	vld1.64	{d20-d21}, [r0]
   1bbb8:	add	r2, r3, #16
   1bbbc:	add	r0, r3, #32
   1bbc0:	vst1.64	{d18-d19}, [r2]
   1bbc4:	vst1.64	{d20-d21}, [r0]
   1bbc8:	mov	r0, #12
   1bbcc:	mov	r2, r3
   1bbd0:	vst1.64	{d16-d17}, [r2], r0
   1bbd4:	ldr	r0, [r2]
   1bbd8:	orr	r0, r0, #67108864	; 0x4000000
   1bbdc:	str	r0, [r2]
   1bbe0:	mov	r0, #0
   1bbe4:	mvn	r2, #0
   1bbe8:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bbec:	mov	sp, fp
   1bbf0:	pop	{fp, pc}
   1bbf4:	push	{fp, lr}
   1bbf8:	mov	fp, sp
   1bbfc:	sub	sp, sp, #48	; 0x30
   1bc00:	mov	ip, r1
   1bc04:	mov	r1, r0
   1bc08:	movw	r0, #424	; 0x1a8
   1bc0c:	mov	r2, #32
   1bc10:	movt	r0, #3
   1bc14:	add	r3, r0, #16
   1bc18:	vld1.64	{d16-d17}, [r0], r2
   1bc1c:	vld1.64	{d18-d19}, [r3]
   1bc20:	vld1.64	{d20-d21}, [r0]
   1bc24:	mov	r3, sp
   1bc28:	add	r2, r3, #16
   1bc2c:	add	r0, r3, #32
   1bc30:	vst1.64	{d18-d19}, [r2]
   1bc34:	vst1.64	{d20-d21}, [r0]
   1bc38:	mov	r0, #12
   1bc3c:	mov	r2, r3
   1bc40:	vst1.64	{d16-d17}, [r2], r0
   1bc44:	ldr	r0, [r2]
   1bc48:	orr	r0, r0, #67108864	; 0x4000000
   1bc4c:	str	r0, [r2]
   1bc50:	mov	r0, #0
   1bc54:	mov	r2, ip
   1bc58:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bc5c:	mov	sp, fp
   1bc60:	pop	{fp, pc}
   1bc64:	push	{r4, sl, fp, lr}
   1bc68:	add	fp, sp, #8
   1bc6c:	sub	sp, sp, #96	; 0x60
   1bc70:	vmov.i32	q8, #0	; 0x00000000
   1bc74:	mov	ip, r2
   1bc78:	mov	r2, sp
   1bc7c:	mov	r4, #28
   1bc80:	cmp	r1, #10
   1bc84:	mov	r3, r2
   1bc88:	add	lr, r2, #16
   1bc8c:	vst1.64	{d16-d17}, [r3], r4
   1bc90:	vst1.64	{d16-d17}, [lr]
   1bc94:	vst1.32	{d16-d17}, [r3]
   1bc98:	beq	1bce8 <__assert_fail@plt+0xa9e0>
   1bc9c:	vld1.64	{d16-d17}, [r2], r4
   1bca0:	vld1.64	{d18-d19}, [lr]
   1bca4:	add	r3, sp, #48	; 0x30
   1bca8:	vld1.32	{d20-d21}, [r2]
   1bcac:	add	r2, r3, #20
   1bcb0:	add	r4, r3, #4
   1bcb4:	vst1.32	{d18-d19}, [r2]
   1bcb8:	add	r2, r3, #32
   1bcbc:	vst1.32	{d16-d17}, [r4]
   1bcc0:	vst1.32	{d20-d21}, [r2]
   1bcc4:	str	r1, [sp, #48]	; 0x30
   1bcc8:	mvn	r2, #0
   1bccc:	ldr	r1, [sp, #60]	; 0x3c
   1bcd0:	orr	r1, r1, #67108864	; 0x4000000
   1bcd4:	str	r1, [sp, #60]	; 0x3c
   1bcd8:	mov	r1, ip
   1bcdc:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bce0:	sub	sp, fp, #8
   1bce4:	pop	{r4, sl, fp, pc}
   1bce8:	bl	112e4 <abort@plt>
   1bcec:	push	{r4, r5, r6, sl, fp, lr}
   1bcf0:	add	fp, sp, #16
   1bcf4:	sub	sp, sp, #48	; 0x30
   1bcf8:	mov	ip, r3
   1bcfc:	movw	r3, #424	; 0x1a8
   1bd00:	mov	r6, #32
   1bd04:	cmp	r1, #0
   1bd08:	mov	r4, sp
   1bd0c:	movt	r3, #3
   1bd10:	cmpne	r2, #0
   1bd14:	add	r5, r4, #16
   1bd18:	add	lr, r3, #16
   1bd1c:	vld1.64	{d16-d17}, [r3], r6
   1bd20:	vld1.64	{d18-d19}, [lr]
   1bd24:	vld1.64	{d20-d21}, [r3]
   1bd28:	mov	r3, #10
   1bd2c:	vst1.64	{d16-d17}, [r4], r6
   1bd30:	vst1.64	{d18-d19}, [r5]
   1bd34:	vst1.64	{d20-d21}, [r4]
   1bd38:	str	r3, [sp]
   1bd3c:	bne	1bd44 <__assert_fail@plt+0xaa3c>
   1bd40:	bl	112e4 <abort@plt>
   1bd44:	str	r2, [sp, #44]	; 0x2c
   1bd48:	str	r1, [sp, #40]	; 0x28
   1bd4c:	mov	r3, sp
   1bd50:	mov	r1, ip
   1bd54:	mvn	r2, #0
   1bd58:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bd5c:	sub	sp, fp, #16
   1bd60:	pop	{r4, r5, r6, sl, fp, pc}
   1bd64:	push	{r4, r5, r6, sl, fp, lr}
   1bd68:	add	fp, sp, #16
   1bd6c:	sub	sp, sp, #48	; 0x30
   1bd70:	mov	lr, r3
   1bd74:	movw	r3, #424	; 0x1a8
   1bd78:	mov	r6, #32
   1bd7c:	cmp	r1, #0
   1bd80:	mov	r4, sp
   1bd84:	movt	r3, #3
   1bd88:	cmpne	r2, #0
   1bd8c:	add	r5, r4, #16
   1bd90:	add	ip, r3, #16
   1bd94:	vld1.64	{d16-d17}, [r3], r6
   1bd98:	vld1.64	{d18-d19}, [ip]
   1bd9c:	vld1.64	{d20-d21}, [r3]
   1bda0:	mov	r3, #10
   1bda4:	vst1.64	{d16-d17}, [r4], r6
   1bda8:	vst1.64	{d18-d19}, [r5]
   1bdac:	vst1.64	{d20-d21}, [r4]
   1bdb0:	str	r3, [sp]
   1bdb4:	bne	1bdbc <__assert_fail@plt+0xaab4>
   1bdb8:	bl	112e4 <abort@plt>
   1bdbc:	ldr	ip, [fp, #8]
   1bdc0:	str	r2, [sp, #44]	; 0x2c
   1bdc4:	str	r1, [sp, #40]	; 0x28
   1bdc8:	mov	r3, sp
   1bdcc:	mov	r1, lr
   1bdd0:	mov	r2, ip
   1bdd4:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bdd8:	sub	sp, fp, #16
   1bddc:	pop	{r4, r5, r6, sl, fp, pc}
   1bde0:	push	{r4, sl, fp, lr}
   1bde4:	add	fp, sp, #8
   1bde8:	sub	sp, sp, #48	; 0x30
   1bdec:	movw	r3, #424	; 0x1a8
   1bdf0:	mov	lr, #32
   1bdf4:	mov	ip, r2
   1bdf8:	cmp	r0, #0
   1bdfc:	movt	r3, #3
   1be00:	cmpne	r1, #0
   1be04:	add	r2, r3, #16
   1be08:	vld1.64	{d16-d17}, [r3], lr
   1be0c:	vld1.64	{d20-d21}, [r3]
   1be10:	vld1.64	{d18-d19}, [r2]
   1be14:	mov	r2, sp
   1be18:	add	r4, r2, #16
   1be1c:	vst1.64	{d16-d17}, [r2], lr
   1be20:	vst1.64	{d20-d21}, [r2]
   1be24:	mov	r2, #10
   1be28:	vst1.64	{d18-d19}, [r4]
   1be2c:	str	r2, [sp]
   1be30:	bne	1be38 <__assert_fail@plt+0xab30>
   1be34:	bl	112e4 <abort@plt>
   1be38:	str	r1, [sp, #44]	; 0x2c
   1be3c:	str	r0, [sp, #40]	; 0x28
   1be40:	mov	r3, sp
   1be44:	mov	r0, #0
   1be48:	mov	r1, ip
   1be4c:	mvn	r2, #0
   1be50:	bl	1b774 <__assert_fail@plt+0xa46c>
   1be54:	sub	sp, fp, #8
   1be58:	pop	{r4, sl, fp, pc}
   1be5c:	push	{r4, r5, fp, lr}
   1be60:	add	fp, sp, #8
   1be64:	sub	sp, sp, #48	; 0x30
   1be68:	mov	ip, r3
   1be6c:	movw	r3, #424	; 0x1a8
   1be70:	mov	r4, #32
   1be74:	mov	lr, r2
   1be78:	cmp	r0, #0
   1be7c:	movt	r3, #3
   1be80:	cmpne	r1, #0
   1be84:	add	r2, r3, #16
   1be88:	vld1.64	{d16-d17}, [r3], r4
   1be8c:	vld1.64	{d20-d21}, [r3]
   1be90:	vld1.64	{d18-d19}, [r2]
   1be94:	mov	r2, sp
   1be98:	add	r5, r2, #16
   1be9c:	vst1.64	{d16-d17}, [r2], r4
   1bea0:	vst1.64	{d20-d21}, [r2]
   1bea4:	mov	r2, #10
   1bea8:	vst1.64	{d18-d19}, [r5]
   1beac:	str	r2, [sp]
   1beb0:	bne	1beb8 <__assert_fail@plt+0xabb0>
   1beb4:	bl	112e4 <abort@plt>
   1beb8:	str	r1, [sp, #44]	; 0x2c
   1bebc:	str	r0, [sp, #40]	; 0x28
   1bec0:	mov	r3, sp
   1bec4:	mov	r0, #0
   1bec8:	mov	r1, lr
   1becc:	mov	r2, ip
   1bed0:	bl	1b774 <__assert_fail@plt+0xa46c>
   1bed4:	sub	sp, fp, #8
   1bed8:	pop	{r4, r5, fp, pc}
   1bedc:	movw	r3, #280	; 0x118
   1bee0:	movt	r3, #3
   1bee4:	b	1b774 <__assert_fail@plt+0xa46c>
   1bee8:	movw	r3, #280	; 0x118
   1beec:	mov	r2, r1
   1bef0:	mov	r1, r0
   1bef4:	mov	r0, #0
   1bef8:	movt	r3, #3
   1befc:	b	1b774 <__assert_fail@plt+0xa46c>
   1bf00:	movw	r3, #280	; 0x118
   1bf04:	mvn	r2, #0
   1bf08:	movt	r3, #3
   1bf0c:	b	1b774 <__assert_fail@plt+0xa46c>
   1bf10:	movw	r3, #280	; 0x118
   1bf14:	mov	r1, r0
   1bf18:	mov	r0, #0
   1bf1c:	mvn	r2, #0
   1bf20:	movt	r3, #3
   1bf24:	b	1b774 <__assert_fail@plt+0xa46c>
   1bf28:	mov	r1, #0
   1bf2c:	mov	r2, #3
   1bf30:	b	1da80 <__assert_fail@plt+0xc778>
   1bf34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bf38:	add	fp, sp, #24
   1bf3c:	sub	sp, sp, #32
   1bf40:	ldr	r6, [fp, #12]
   1bf44:	ldr	r7, [fp, #8]
   1bf48:	mov	r4, r2
   1bf4c:	mov	r8, r0
   1bf50:	cmp	r1, #0
   1bf54:	beq	1bf7c <__assert_fail@plt+0xac74>
   1bf58:	movw	r2, #61368	; 0xefb8
   1bf5c:	mov	r5, r1
   1bf60:	str	r3, [sp, #4]
   1bf64:	str	r4, [sp]
   1bf68:	mov	r0, r8
   1bf6c:	mov	r1, #1
   1bf70:	movt	r2, #1
   1bf74:	mov	r3, r5
   1bf78:	b	1bf94 <__assert_fail@plt+0xac8c>
   1bf7c:	movw	r2, #61380	; 0xefc4
   1bf80:	str	r3, [sp]
   1bf84:	mov	r0, r8
   1bf88:	mov	r1, #1
   1bf8c:	mov	r3, r4
   1bf90:	movt	r2, #1
   1bf94:	bl	11254 <__fprintf_chk@plt>
   1bf98:	movw	r1, #61387	; 0xefcb
   1bf9c:	mov	r0, #0
   1bfa0:	mov	r2, #5
   1bfa4:	movt	r1, #1
   1bfa8:	bl	110f8 <dcgettext@plt>
   1bfac:	movw	r2, #62105	; 0xf299
   1bfb0:	mov	r3, r0
   1bfb4:	movw	r0, #2022	; 0x7e6
   1bfb8:	mov	r1, #1
   1bfbc:	movt	r2, #1
   1bfc0:	str	r0, [sp]
   1bfc4:	mov	r0, r8
   1bfc8:	bl	11254 <__fprintf_chk@plt>
   1bfcc:	movw	r4, #58466	; 0xe462
   1bfd0:	mov	r1, r8
   1bfd4:	movt	r4, #1
   1bfd8:	mov	r0, r4
   1bfdc:	bl	11068 <fputs_unlocked@plt>
   1bfe0:	movw	r1, #61391	; 0xefcf
   1bfe4:	mov	r0, #0
   1bfe8:	mov	r2, #5
   1bfec:	movt	r1, #1
   1bff0:	bl	110f8 <dcgettext@plt>
   1bff4:	movw	r3, #61562	; 0xf07a
   1bff8:	mov	r2, r0
   1bffc:	mov	r0, r8
   1c000:	mov	r1, #1
   1c004:	movt	r3, #1
   1c008:	bl	11254 <__fprintf_chk@plt>
   1c00c:	mov	r0, r4
   1c010:	mov	r1, r8
   1c014:	bl	11068 <fputs_unlocked@plt>
   1c018:	cmp	r6, #9
   1c01c:	bhi	1c058 <__assert_fail@plt+0xad50>
   1c020:	add	r0, pc, #0
   1c024:	ldr	pc, [r0, r6, lsl #2]
   1c028:	andeq	ip, r1, r0, asr r0
   1c02c:	andeq	ip, r1, r4, rrx
   1c030:	muleq	r1, r4, r0
   1c034:	strheq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c038:	andeq	ip, r1, r4, ror #1
   1c03c:	andeq	ip, r1, ip, lsl #2
   1c040:	andeq	ip, r1, r4, lsr r1
   1c044:	andeq	ip, r1, ip, ror #2
   1c048:	andeq	ip, r1, r4, lsl r2
   1c04c:			; <UNDEFINED> instruction: 0x0001c1bc
   1c050:	sub	sp, fp, #24
   1c054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c058:	movw	r1, #61915	; 0xf1db
   1c05c:	movt	r1, #1
   1c060:	b	1c1c4 <__assert_fail@plt+0xaebc>
   1c064:	movw	r1, #61596	; 0xf09c
   1c068:	mov	r0, #0
   1c06c:	mov	r2, #5
   1c070:	movt	r1, #1
   1c074:	bl	110f8 <dcgettext@plt>
   1c078:	ldr	r3, [r7]
   1c07c:	mov	r2, r0
   1c080:	mov	r0, r8
   1c084:	mov	r1, #1
   1c088:	sub	sp, fp, #24
   1c08c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c090:	b	11254 <__fprintf_chk@plt>
   1c094:	movw	r1, #61612	; 0xf0ac
   1c098:	mov	r0, #0
   1c09c:	mov	r2, #5
   1c0a0:	movt	r1, #1
   1c0a4:	bl	110f8 <dcgettext@plt>
   1c0a8:	mov	r2, r0
   1c0ac:	ldr	r3, [r7]
   1c0b0:	ldr	r0, [r7, #4]
   1c0b4:	str	r0, [sp]
   1c0b8:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c0bc:	movw	r1, #61635	; 0xf0c3
   1c0c0:	mov	r0, #0
   1c0c4:	mov	r2, #5
   1c0c8:	movt	r1, #1
   1c0cc:	bl	110f8 <dcgettext@plt>
   1c0d0:	mov	r2, r0
   1c0d4:	ldr	r3, [r7]
   1c0d8:	ldmib	r7, {r0, r1}
   1c0dc:	stm	sp, {r0, r1}
   1c0e0:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c0e4:	movw	r1, #61663	; 0xf0df
   1c0e8:	mov	r0, #0
   1c0ec:	mov	r2, #5
   1c0f0:	movt	r1, #1
   1c0f4:	bl	110f8 <dcgettext@plt>
   1c0f8:	ldr	r3, [r7]
   1c0fc:	mov	r2, r0
   1c100:	ldmib	r7, {r0, r1, r7}
   1c104:	stm	sp, {r0, r1, r7}
   1c108:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c10c:	movw	r1, #61695	; 0xf0ff
   1c110:	mov	r0, #0
   1c114:	mov	r2, #5
   1c118:	movt	r1, #1
   1c11c:	bl	110f8 <dcgettext@plt>
   1c120:	ldr	r3, [r7]
   1c124:	mov	r2, r0
   1c128:	ldmib	r7, {r0, r1, r6, r7}
   1c12c:	stm	sp, {r0, r1, r6, r7}
   1c130:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c134:	movw	r1, #61731	; 0xf123
   1c138:	mov	r0, #0
   1c13c:	mov	r2, #5
   1c140:	movt	r1, #1
   1c144:	bl	110f8 <dcgettext@plt>
   1c148:	mov	r2, r0
   1c14c:	ldr	r3, [r7]
   1c150:	ldmib	r7, {r0, r1, r6}
   1c154:	ldr	r5, [r7, #16]
   1c158:	ldr	r7, [r7, #20]
   1c15c:	stm	sp, {r0, r1, r6}
   1c160:	str	r5, [sp, #12]
   1c164:	str	r7, [sp, #16]
   1c168:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c16c:	movw	r1, #61771	; 0xf14b
   1c170:	mov	r0, #0
   1c174:	mov	r2, #5
   1c178:	movt	r1, #1
   1c17c:	bl	110f8 <dcgettext@plt>
   1c180:	mov	r2, r0
   1c184:	ldr	r3, [r7]
   1c188:	ldmib	r7, {r0, r1, r6}
   1c18c:	ldr	r5, [r7, #16]
   1c190:	ldr	r4, [r7, #20]
   1c194:	ldr	r7, [r7, #24]
   1c198:	stm	sp, {r0, r1, r6}
   1c19c:	str	r5, [sp, #12]
   1c1a0:	str	r4, [sp, #16]
   1c1a4:	str	r7, [sp, #20]
   1c1a8:	mov	r0, r8
   1c1ac:	mov	r1, #1
   1c1b0:	bl	11254 <__fprintf_chk@plt>
   1c1b4:	sub	sp, fp, #24
   1c1b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c1bc:	movw	r1, #61863	; 0xf1a7
   1c1c0:	movt	r1, #1
   1c1c4:	mov	r0, #0
   1c1c8:	mov	r2, #5
   1c1cc:	bl	110f8 <dcgettext@plt>
   1c1d0:	mov	ip, r0
   1c1d4:	ldr	r3, [r7]
   1c1d8:	ldr	r0, [r7, #4]
   1c1dc:	ldr	r1, [r7, #8]
   1c1e0:	ldr	r6, [r7, #12]
   1c1e4:	ldr	r5, [r7, #16]
   1c1e8:	ldr	r4, [r7, #20]
   1c1ec:	ldr	r2, [r7, #24]
   1c1f0:	ldr	lr, [r7, #28]
   1c1f4:	ldr	r7, [r7, #32]
   1c1f8:	stm	sp, {r0, r1, r6}
   1c1fc:	str	r5, [sp, #12]
   1c200:	str	r4, [sp, #16]
   1c204:	str	r2, [sp, #20]
   1c208:	str	lr, [sp, #24]
   1c20c:	str	r7, [sp, #28]
   1c210:	b	1c258 <__assert_fail@plt+0xaf50>
   1c214:	movw	r1, #61815	; 0xf177
   1c218:	mov	r0, #0
   1c21c:	mov	r2, #5
   1c220:	movt	r1, #1
   1c224:	bl	110f8 <dcgettext@plt>
   1c228:	mov	ip, r0
   1c22c:	ldr	r3, [r7]
   1c230:	ldmib	r7, {r0, r1, r6}
   1c234:	ldr	r5, [r7, #16]
   1c238:	ldr	r4, [r7, #20]
   1c23c:	ldr	r2, [r7, #24]
   1c240:	ldr	r7, [r7, #28]
   1c244:	stm	sp, {r0, r1, r6}
   1c248:	str	r5, [sp, #12]
   1c24c:	str	r4, [sp, #16]
   1c250:	str	r2, [sp, #20]
   1c254:	str	r7, [sp, #24]
   1c258:	mov	r0, r8
   1c25c:	mov	r1, #1
   1c260:	mov	r2, ip
   1c264:	bl	11254 <__fprintf_chk@plt>
   1c268:	sub	sp, fp, #24
   1c26c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c270:	push	{r4, sl, fp, lr}
   1c274:	add	fp, sp, #8
   1c278:	sub	sp, sp, #8
   1c27c:	ldr	ip, [fp, #8]
   1c280:	mov	lr, #0
   1c284:	ldr	r4, [ip, lr, lsl #2]
   1c288:	add	lr, lr, #1
   1c28c:	cmp	r4, #0
   1c290:	bne	1c284 <__assert_fail@plt+0xaf7c>
   1c294:	sub	r4, lr, #1
   1c298:	str	ip, [sp]
   1c29c:	str	r4, [sp, #4]
   1c2a0:	bl	1bf34 <__assert_fail@plt+0xac2c>
   1c2a4:	sub	sp, fp, #8
   1c2a8:	pop	{r4, sl, fp, pc}
   1c2ac:	push	{fp, lr}
   1c2b0:	mov	fp, sp
   1c2b4:	sub	sp, sp, #48	; 0x30
   1c2b8:	ldr	ip, [fp, #8]
   1c2bc:	ldr	lr, [ip]
   1c2c0:	cmp	lr, #0
   1c2c4:	str	lr, [sp, #8]
   1c2c8:	beq	1c364 <__assert_fail@plt+0xb05c>
   1c2cc:	ldr	lr, [ip, #4]
   1c2d0:	cmp	lr, #0
   1c2d4:	str	lr, [sp, #12]
   1c2d8:	beq	1c36c <__assert_fail@plt+0xb064>
   1c2dc:	ldr	lr, [ip, #8]
   1c2e0:	cmp	lr, #0
   1c2e4:	str	lr, [sp, #16]
   1c2e8:	beq	1c374 <__assert_fail@plt+0xb06c>
   1c2ec:	ldr	lr, [ip, #12]
   1c2f0:	cmp	lr, #0
   1c2f4:	str	lr, [sp, #20]
   1c2f8:	beq	1c37c <__assert_fail@plt+0xb074>
   1c2fc:	ldr	lr, [ip, #16]
   1c300:	cmp	lr, #0
   1c304:	str	lr, [sp, #24]
   1c308:	beq	1c384 <__assert_fail@plt+0xb07c>
   1c30c:	ldr	lr, [ip, #20]
   1c310:	cmp	lr, #0
   1c314:	str	lr, [sp, #28]
   1c318:	beq	1c38c <__assert_fail@plt+0xb084>
   1c31c:	ldr	lr, [ip, #24]
   1c320:	cmp	lr, #0
   1c324:	str	lr, [sp, #32]
   1c328:	beq	1c394 <__assert_fail@plt+0xb08c>
   1c32c:	ldr	lr, [ip, #28]
   1c330:	cmp	lr, #0
   1c334:	str	lr, [sp, #36]	; 0x24
   1c338:	beq	1c39c <__assert_fail@plt+0xb094>
   1c33c:	ldr	lr, [ip, #32]
   1c340:	cmp	lr, #0
   1c344:	str	lr, [sp, #40]	; 0x28
   1c348:	beq	1c3a4 <__assert_fail@plt+0xb09c>
   1c34c:	ldr	lr, [ip, #36]	; 0x24
   1c350:	mov	ip, #10
   1c354:	cmp	lr, #0
   1c358:	str	lr, [sp, #44]	; 0x2c
   1c35c:	movweq	ip, #9
   1c360:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c364:	mov	ip, #0
   1c368:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c36c:	mov	ip, #1
   1c370:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c374:	mov	ip, #2
   1c378:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c37c:	mov	ip, #3
   1c380:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c384:	mov	ip, #4
   1c388:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c38c:	mov	ip, #5
   1c390:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c394:	mov	ip, #6
   1c398:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c39c:	mov	ip, #7
   1c3a0:	b	1c3a8 <__assert_fail@plt+0xb0a0>
   1c3a4:	mov	ip, #8
   1c3a8:	add	lr, sp, #8
   1c3ac:	str	ip, [sp, #4]
   1c3b0:	str	lr, [sp]
   1c3b4:	bl	1bf34 <__assert_fail@plt+0xac2c>
   1c3b8:	mov	sp, fp
   1c3bc:	pop	{fp, pc}
   1c3c0:	push	{fp, lr}
   1c3c4:	mov	fp, sp
   1c3c8:	sub	sp, sp, #56	; 0x38
   1c3cc:	add	ip, fp, #8
   1c3d0:	str	ip, [sp, #12]
   1c3d4:	ldr	lr, [fp, #8]
   1c3d8:	cmp	lr, #0
   1c3dc:	str	lr, [sp, #16]
   1c3e0:	beq	1c47c <__assert_fail@plt+0xb174>
   1c3e4:	ldr	lr, [ip, #4]
   1c3e8:	cmp	lr, #0
   1c3ec:	str	lr, [sp, #20]
   1c3f0:	beq	1c484 <__assert_fail@plt+0xb17c>
   1c3f4:	ldr	lr, [ip, #8]
   1c3f8:	cmp	lr, #0
   1c3fc:	str	lr, [sp, #24]
   1c400:	beq	1c48c <__assert_fail@plt+0xb184>
   1c404:	ldr	lr, [ip, #12]
   1c408:	cmp	lr, #0
   1c40c:	str	lr, [sp, #28]
   1c410:	beq	1c494 <__assert_fail@plt+0xb18c>
   1c414:	ldr	lr, [ip, #16]
   1c418:	cmp	lr, #0
   1c41c:	str	lr, [sp, #32]
   1c420:	beq	1c49c <__assert_fail@plt+0xb194>
   1c424:	ldr	lr, [ip, #20]
   1c428:	cmp	lr, #0
   1c42c:	str	lr, [sp, #36]	; 0x24
   1c430:	beq	1c4a4 <__assert_fail@plt+0xb19c>
   1c434:	ldr	lr, [ip, #24]
   1c438:	cmp	lr, #0
   1c43c:	str	lr, [sp, #40]	; 0x28
   1c440:	beq	1c4ac <__assert_fail@plt+0xb1a4>
   1c444:	ldr	lr, [ip, #28]
   1c448:	cmp	lr, #0
   1c44c:	str	lr, [sp, #44]	; 0x2c
   1c450:	beq	1c4b4 <__assert_fail@plt+0xb1ac>
   1c454:	ldr	lr, [ip, #32]
   1c458:	cmp	lr, #0
   1c45c:	str	lr, [sp, #48]	; 0x30
   1c460:	beq	1c4bc <__assert_fail@plt+0xb1b4>
   1c464:	ldr	lr, [ip, #36]	; 0x24
   1c468:	mov	ip, #10
   1c46c:	cmp	lr, #0
   1c470:	str	lr, [sp, #52]	; 0x34
   1c474:	movweq	ip, #9
   1c478:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c47c:	mov	ip, #0
   1c480:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c484:	mov	ip, #1
   1c488:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c48c:	mov	ip, #2
   1c490:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c494:	mov	ip, #3
   1c498:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c49c:	mov	ip, #4
   1c4a0:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c4a4:	mov	ip, #5
   1c4a8:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c4ac:	mov	ip, #6
   1c4b0:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c4b4:	mov	ip, #7
   1c4b8:	b	1c4c0 <__assert_fail@plt+0xb1b8>
   1c4bc:	mov	ip, #8
   1c4c0:	add	lr, sp, #16
   1c4c4:	str	ip, [sp, #4]
   1c4c8:	str	lr, [sp]
   1c4cc:	bl	1bf34 <__assert_fail@plt+0xac2c>
   1c4d0:	mov	sp, fp
   1c4d4:	pop	{fp, pc}
   1c4d8:	push	{fp, lr}
   1c4dc:	mov	fp, sp
   1c4e0:	movw	r0, #372	; 0x174
   1c4e4:	movt	r0, #3
   1c4e8:	ldr	r1, [r0]
   1c4ec:	movw	r0, #58466	; 0xe462
   1c4f0:	movt	r0, #1
   1c4f4:	bl	11068 <fputs_unlocked@plt>
   1c4f8:	movw	r1, #61975	; 0xf217
   1c4fc:	mov	r0, #0
   1c500:	mov	r2, #5
   1c504:	movt	r1, #1
   1c508:	bl	110f8 <dcgettext@plt>
   1c50c:	movw	r2, #61995	; 0xf22b
   1c510:	mov	r1, r0
   1c514:	mov	r0, #1
   1c518:	movt	r2, #1
   1c51c:	bl	1123c <__printf_chk@plt>
   1c520:	movw	r1, #62017	; 0xf241
   1c524:	mov	r0, #0
   1c528:	mov	r2, #5
   1c52c:	movt	r1, #1
   1c530:	bl	110f8 <dcgettext@plt>
   1c534:	movw	r2, #59055	; 0xe6af
   1c538:	movw	r3, #59950	; 0xea2e
   1c53c:	mov	r1, r0
   1c540:	mov	r0, #1
   1c544:	movt	r2, #1
   1c548:	movt	r3, #1
   1c54c:	bl	1123c <__printf_chk@plt>
   1c550:	movw	r1, #62037	; 0xf255
   1c554:	mov	r0, #0
   1c558:	mov	r2, #5
   1c55c:	movt	r1, #1
   1c560:	bl	110f8 <dcgettext@plt>
   1c564:	movw	r2, #62076	; 0xf27c
   1c568:	mov	r1, r0
   1c56c:	mov	r0, #1
   1c570:	movt	r2, #1
   1c574:	pop	{fp, lr}
   1c578:	b	1123c <__printf_chk@plt>
   1c57c:	push	{r4, r5, r6, sl, fp, lr}
   1c580:	add	fp, sp, #16
   1c584:	mov	r4, r2
   1c588:	mov	r5, r1
   1c58c:	mov	r6, r0
   1c590:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c594:	cmp	r0, #0
   1c598:	popne	{r4, r5, r6, sl, fp, pc}
   1c59c:	cmp	r6, #0
   1c5a0:	beq	1c5b4 <__assert_fail@plt+0xb2ac>
   1c5a4:	cmp	r5, #0
   1c5a8:	cmpne	r4, #0
   1c5ac:	bne	1c5b4 <__assert_fail@plt+0xb2ac>
   1c5b0:	pop	{r4, r5, r6, sl, fp, pc}
   1c5b4:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c5b8:	push	{r4, r5, r6, sl, fp, lr}
   1c5bc:	add	fp, sp, #16
   1c5c0:	mov	r4, r2
   1c5c4:	mov	r5, r1
   1c5c8:	mov	r6, r0
   1c5cc:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c5d0:	cmp	r0, #0
   1c5d4:	popne	{r4, r5, r6, sl, fp, pc}
   1c5d8:	cmp	r6, #0
   1c5dc:	beq	1c5f0 <__assert_fail@plt+0xb2e8>
   1c5e0:	cmp	r5, #0
   1c5e4:	cmpne	r4, #0
   1c5e8:	bne	1c5f0 <__assert_fail@plt+0xb2e8>
   1c5ec:	pop	{r4, r5, r6, sl, fp, pc}
   1c5f0:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c5f4:	push	{fp, lr}
   1c5f8:	mov	fp, sp
   1c5fc:	bl	1d978 <__assert_fail@plt+0xc670>
   1c600:	cmp	r0, #0
   1c604:	popne	{fp, pc}
   1c608:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c60c:	push	{fp, lr}
   1c610:	mov	fp, sp
   1c614:	bl	1d978 <__assert_fail@plt+0xc670>
   1c618:	cmp	r0, #0
   1c61c:	popne	{fp, pc}
   1c620:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c624:	push	{fp, lr}
   1c628:	mov	fp, sp
   1c62c:	bl	1d978 <__assert_fail@plt+0xc670>
   1c630:	cmp	r0, #0
   1c634:	popne	{fp, pc}
   1c638:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c63c:	push	{r4, r5, fp, lr}
   1c640:	add	fp, sp, #8
   1c644:	mov	r4, r1
   1c648:	mov	r5, r0
   1c64c:	bl	1d9a8 <__assert_fail@plt+0xc6a0>
   1c650:	cmp	r0, #0
   1c654:	popne	{r4, r5, fp, pc}
   1c658:	cmp	r5, #0
   1c65c:	beq	1c66c <__assert_fail@plt+0xb364>
   1c660:	cmp	r4, #0
   1c664:	bne	1c66c <__assert_fail@plt+0xb364>
   1c668:	pop	{r4, r5, fp, pc}
   1c66c:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c670:	push	{fp, lr}
   1c674:	mov	fp, sp
   1c678:	cmp	r1, #0
   1c67c:	orreq	r1, r1, #1
   1c680:	bl	1d9a8 <__assert_fail@plt+0xc6a0>
   1c684:	cmp	r0, #0
   1c688:	popne	{fp, pc}
   1c68c:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c690:	push	{fp, lr}
   1c694:	mov	fp, sp
   1c698:	clz	r3, r2
   1c69c:	lsr	ip, r3, #5
   1c6a0:	clz	r3, r1
   1c6a4:	lsr	r3, r3, #5
   1c6a8:	orrs	r3, r3, ip
   1c6ac:	movwne	r1, #1
   1c6b0:	movwne	r2, #1
   1c6b4:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c6b8:	cmp	r0, #0
   1c6bc:	popne	{fp, pc}
   1c6c0:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c6c4:	push	{fp, lr}
   1c6c8:	mov	fp, sp
   1c6cc:	mov	r2, r1
   1c6d0:	mov	r1, r0
   1c6d4:	mov	r0, #0
   1c6d8:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c6dc:	cmp	r0, #0
   1c6e0:	popne	{fp, pc}
   1c6e4:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c6e8:	push	{fp, lr}
   1c6ec:	mov	fp, sp
   1c6f0:	mov	r2, r1
   1c6f4:	mov	r1, r0
   1c6f8:	clz	r0, r2
   1c6fc:	clz	r3, r1
   1c700:	lsr	r0, r0, #5
   1c704:	lsr	r3, r3, #5
   1c708:	orrs	r0, r3, r0
   1c70c:	mov	r0, #0
   1c710:	movwne	r1, #1
   1c714:	movwne	r2, #1
   1c718:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c71c:	cmp	r0, #0
   1c720:	popne	{fp, pc}
   1c724:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c728:	push	{r4, r5, r6, sl, fp, lr}
   1c72c:	add	fp, sp, #16
   1c730:	ldr	r5, [r1]
   1c734:	mov	r4, r1
   1c738:	mov	r6, r0
   1c73c:	cmp	r0, #0
   1c740:	beq	1c758 <__assert_fail@plt+0xb450>
   1c744:	mov	r0, #1
   1c748:	add	r0, r0, r5, lsr #1
   1c74c:	adds	r5, r5, r0
   1c750:	bcc	1c760 <__assert_fail@plt+0xb458>
   1c754:	b	1c79c <__assert_fail@plt+0xb494>
   1c758:	cmp	r5, #0
   1c75c:	movweq	r5, #64	; 0x40
   1c760:	mov	r0, r6
   1c764:	mov	r1, r5
   1c768:	mov	r2, #1
   1c76c:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c770:	cmp	r5, #0
   1c774:	mov	r1, r5
   1c778:	movwne	r1, #1
   1c77c:	cmp	r0, #0
   1c780:	bne	1c794 <__assert_fail@plt+0xb48c>
   1c784:	clz	r2, r6
   1c788:	lsr	r2, r2, #5
   1c78c:	orrs	r1, r2, r1
   1c790:	bne	1c79c <__assert_fail@plt+0xb494>
   1c794:	str	r5, [r4]
   1c798:	pop	{r4, r5, r6, sl, fp, pc}
   1c79c:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c7a0:	push	{r4, r5, r6, r7, fp, lr}
   1c7a4:	add	fp, sp, #16
   1c7a8:	ldr	r5, [r1]
   1c7ac:	mov	r6, r2
   1c7b0:	mov	r4, r1
   1c7b4:	mov	r7, r0
   1c7b8:	cmp	r0, #0
   1c7bc:	beq	1c7d4 <__assert_fail@plt+0xb4cc>
   1c7c0:	mov	r0, #1
   1c7c4:	add	r0, r0, r5, lsr #1
   1c7c8:	adds	r5, r5, r0
   1c7cc:	bcc	1c7ec <__assert_fail@plt+0xb4e4>
   1c7d0:	b	1c820 <__assert_fail@plt+0xb518>
   1c7d4:	cmp	r5, #0
   1c7d8:	bne	1c7ec <__assert_fail@plt+0xb4e4>
   1c7dc:	mov	r0, #64	; 0x40
   1c7e0:	cmp	r6, #64	; 0x40
   1c7e4:	udiv	r5, r0, r6
   1c7e8:	addhi	r5, r5, #1
   1c7ec:	mov	r0, r7
   1c7f0:	mov	r1, r5
   1c7f4:	mov	r2, r6
   1c7f8:	bl	1dcfc <__assert_fail@plt+0xc9f4>
   1c7fc:	cmp	r0, #0
   1c800:	bne	1c818 <__assert_fail@plt+0xb510>
   1c804:	cmp	r7, #0
   1c808:	beq	1c820 <__assert_fail@plt+0xb518>
   1c80c:	cmp	r6, #0
   1c810:	cmpne	r5, #0
   1c814:	bne	1c820 <__assert_fail@plt+0xb518>
   1c818:	str	r5, [r4]
   1c81c:	pop	{r4, r5, r6, r7, fp, pc}
   1c820:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c824:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c828:	add	fp, sp, #24
   1c82c:	mov	r8, r1
   1c830:	ldr	r1, [r1]
   1c834:	mov	r5, r0
   1c838:	add	r0, r1, r1, asr #1
   1c83c:	cmp	r0, r1
   1c840:	mvnvs	r0, #-2147483648	; 0x80000000
   1c844:	cmp	r0, r3
   1c848:	mov	r7, r0
   1c84c:	movgt	r7, r3
   1c850:	cmn	r3, #1
   1c854:	movle	r7, r0
   1c858:	ldr	r0, [fp, #8]
   1c85c:	cmn	r0, #1
   1c860:	ble	1c888 <__assert_fail@plt+0xb580>
   1c864:	cmp	r0, #0
   1c868:	beq	1c8dc <__assert_fail@plt+0xb5d4>
   1c86c:	cmn	r7, #1
   1c870:	ble	1c8b0 <__assert_fail@plt+0xb5a8>
   1c874:	mvn	r4, #-2147483648	; 0x80000000
   1c878:	udiv	r6, r4, r0
   1c87c:	cmp	r6, r7
   1c880:	bge	1c8dc <__assert_fail@plt+0xb5d4>
   1c884:	b	1c8ec <__assert_fail@plt+0xb5e4>
   1c888:	cmn	r7, #1
   1c88c:	ble	1c8cc <__assert_fail@plt+0xb5c4>
   1c890:	cmn	r0, #1
   1c894:	beq	1c8dc <__assert_fail@plt+0xb5d4>
   1c898:	mov	r6, #-2147483648	; 0x80000000
   1c89c:	mvn	r4, #-2147483648	; 0x80000000
   1c8a0:	sdiv	r6, r6, r0
   1c8a4:	cmp	r6, r7
   1c8a8:	bge	1c8dc <__assert_fail@plt+0xb5d4>
   1c8ac:	b	1c8ec <__assert_fail@plt+0xb5e4>
   1c8b0:	beq	1c8dc <__assert_fail@plt+0xb5d4>
   1c8b4:	mov	r6, #-2147483648	; 0x80000000
   1c8b8:	mvn	r4, #-2147483648	; 0x80000000
   1c8bc:	sdiv	r6, r6, r7
   1c8c0:	cmp	r6, r0
   1c8c4:	bge	1c8dc <__assert_fail@plt+0xb5d4>
   1c8c8:	b	1c8ec <__assert_fail@plt+0xb5e4>
   1c8cc:	mvn	r4, #-2147483648	; 0x80000000
   1c8d0:	sdiv	r6, r4, r0
   1c8d4:	cmp	r7, r6
   1c8d8:	blt	1c8ec <__assert_fail@plt+0xb5e4>
   1c8dc:	mul	r6, r7, r0
   1c8e0:	mov	r4, #64	; 0x40
   1c8e4:	cmp	r6, #63	; 0x3f
   1c8e8:	bgt	1c8f4 <__assert_fail@plt+0xb5ec>
   1c8ec:	sdiv	r7, r4, r0
   1c8f0:	mul	r6, r7, r0
   1c8f4:	cmp	r5, #0
   1c8f8:	moveq	r4, #0
   1c8fc:	streq	r4, [r8]
   1c900:	sub	r4, r7, r1
   1c904:	cmp	r4, r2
   1c908:	bge	1c9b4 <__assert_fail@plt+0xb6ac>
   1c90c:	add	r7, r1, r2
   1c910:	mov	r6, #0
   1c914:	mov	r2, #0
   1c918:	cmp	r7, r3
   1c91c:	movwgt	r6, #1
   1c920:	cmn	r3, #1
   1c924:	movwgt	r2, #1
   1c928:	cmp	r7, r1
   1c92c:	bvs	1c9e8 <__assert_fail@plt+0xb6e0>
   1c930:	ands	r1, r2, r6
   1c934:	bne	1c9e8 <__assert_fail@plt+0xb6e0>
   1c938:	cmn	r0, #1
   1c93c:	ble	1c964 <__assert_fail@plt+0xb65c>
   1c940:	cmp	r0, #0
   1c944:	beq	1c9b0 <__assert_fail@plt+0xb6a8>
   1c948:	cmn	r7, #1
   1c94c:	ble	1c988 <__assert_fail@plt+0xb680>
   1c950:	mvn	r1, #-2147483648	; 0x80000000
   1c954:	udiv	r1, r1, r0
   1c958:	cmp	r1, r7
   1c95c:	bge	1c9b0 <__assert_fail@plt+0xb6a8>
   1c960:	b	1c9e8 <__assert_fail@plt+0xb6e0>
   1c964:	cmn	r7, #1
   1c968:	ble	1c9a0 <__assert_fail@plt+0xb698>
   1c96c:	cmn	r0, #1
   1c970:	beq	1c9b0 <__assert_fail@plt+0xb6a8>
   1c974:	mov	r1, #-2147483648	; 0x80000000
   1c978:	sdiv	r1, r1, r0
   1c97c:	cmp	r1, r7
   1c980:	bge	1c9b0 <__assert_fail@plt+0xb6a8>
   1c984:	b	1c9e8 <__assert_fail@plt+0xb6e0>
   1c988:	beq	1c9b0 <__assert_fail@plt+0xb6a8>
   1c98c:	mov	r1, #-2147483648	; 0x80000000
   1c990:	sdiv	r1, r1, r7
   1c994:	cmp	r1, r0
   1c998:	bge	1c9b0 <__assert_fail@plt+0xb6a8>
   1c99c:	b	1c9e8 <__assert_fail@plt+0xb6e0>
   1c9a0:	mvn	r1, #-2147483648	; 0x80000000
   1c9a4:	sdiv	r1, r1, r0
   1c9a8:	cmp	r7, r1
   1c9ac:	blt	1c9e8 <__assert_fail@plt+0xb6e0>
   1c9b0:	mul	r6, r7, r0
   1c9b4:	mov	r0, r5
   1c9b8:	mov	r1, r6
   1c9bc:	bl	1d9a8 <__assert_fail@plt+0xc6a0>
   1c9c0:	cmp	r6, #0
   1c9c4:	movwne	r6, #1
   1c9c8:	cmp	r0, #0
   1c9cc:	bne	1c9e0 <__assert_fail@plt+0xb6d8>
   1c9d0:	clz	r1, r5
   1c9d4:	lsr	r1, r1, #5
   1c9d8:	orrs	r1, r1, r6
   1c9dc:	bne	1c9e8 <__assert_fail@plt+0xb6e0>
   1c9e0:	str	r7, [r8]
   1c9e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c9e8:	bl	1cb30 <__assert_fail@plt+0xb828>
   1c9ec:	push	{fp, lr}
   1c9f0:	mov	fp, sp
   1c9f4:	mov	r1, #1
   1c9f8:	bl	1d924 <__assert_fail@plt+0xc61c>
   1c9fc:	cmp	r0, #0
   1ca00:	popne	{fp, pc}
   1ca04:	bl	1cb30 <__assert_fail@plt+0xb828>
   1ca08:	push	{fp, lr}
   1ca0c:	mov	fp, sp
   1ca10:	bl	1d924 <__assert_fail@plt+0xc61c>
   1ca14:	cmp	r0, #0
   1ca18:	popne	{fp, pc}
   1ca1c:	bl	1cb30 <__assert_fail@plt+0xb828>
   1ca20:	push	{fp, lr}
   1ca24:	mov	fp, sp
   1ca28:	mov	r1, #1
   1ca2c:	bl	1d924 <__assert_fail@plt+0xc61c>
   1ca30:	cmp	r0, #0
   1ca34:	popne	{fp, pc}
   1ca38:	bl	1cb30 <__assert_fail@plt+0xb828>
   1ca3c:	push	{fp, lr}
   1ca40:	mov	fp, sp
   1ca44:	bl	1d924 <__assert_fail@plt+0xc61c>
   1ca48:	cmp	r0, #0
   1ca4c:	popne	{fp, pc}
   1ca50:	bl	1cb30 <__assert_fail@plt+0xb828>
   1ca54:	push	{r4, r5, fp, lr}
   1ca58:	add	fp, sp, #8
   1ca5c:	mov	r5, r0
   1ca60:	mov	r0, r1
   1ca64:	mov	r4, r1
   1ca68:	bl	1d978 <__assert_fail@plt+0xc670>
   1ca6c:	cmp	r0, #0
   1ca70:	beq	1ca84 <__assert_fail@plt+0xb77c>
   1ca74:	mov	r1, r5
   1ca78:	mov	r2, r4
   1ca7c:	pop	{r4, r5, fp, lr}
   1ca80:	b	110d4 <memcpy@plt>
   1ca84:	bl	1cb30 <__assert_fail@plt+0xb828>
   1ca88:	push	{r4, r5, fp, lr}
   1ca8c:	add	fp, sp, #8
   1ca90:	mov	r5, r0
   1ca94:	mov	r0, r1
   1ca98:	mov	r4, r1
   1ca9c:	bl	1d978 <__assert_fail@plt+0xc670>
   1caa0:	cmp	r0, #0
   1caa4:	beq	1cab8 <__assert_fail@plt+0xb7b0>
   1caa8:	mov	r1, r5
   1caac:	mov	r2, r4
   1cab0:	pop	{r4, r5, fp, lr}
   1cab4:	b	110d4 <memcpy@plt>
   1cab8:	bl	1cb30 <__assert_fail@plt+0xb828>
   1cabc:	push	{r4, r5, fp, lr}
   1cac0:	add	fp, sp, #8
   1cac4:	mov	r5, r0
   1cac8:	add	r0, r1, #1
   1cacc:	mov	r4, r1
   1cad0:	bl	1d978 <__assert_fail@plt+0xc670>
   1cad4:	cmp	r0, #0
   1cad8:	beq	1caf4 <__assert_fail@plt+0xb7ec>
   1cadc:	mov	r1, #0
   1cae0:	mov	r2, r4
   1cae4:	strb	r1, [r0, r4]
   1cae8:	mov	r1, r5
   1caec:	pop	{r4, r5, fp, lr}
   1caf0:	b	110d4 <memcpy@plt>
   1caf4:	bl	1cb30 <__assert_fail@plt+0xb828>
   1caf8:	push	{r4, r5, fp, lr}
   1cafc:	add	fp, sp, #8
   1cb00:	mov	r4, r0
   1cb04:	bl	111f4 <strlen@plt>
   1cb08:	add	r5, r0, #1
   1cb0c:	mov	r0, r5
   1cb10:	bl	1d978 <__assert_fail@plt+0xc670>
   1cb14:	cmp	r0, #0
   1cb18:	beq	1cb2c <__assert_fail@plt+0xb824>
   1cb1c:	mov	r1, r4
   1cb20:	mov	r2, r5
   1cb24:	pop	{r4, r5, fp, lr}
   1cb28:	b	110d4 <memcpy@plt>
   1cb2c:	bl	1cb30 <__assert_fail@plt+0xb828>
   1cb30:	push	{fp, lr}
   1cb34:	mov	fp, sp
   1cb38:	movw	r0, #272	; 0x110
   1cb3c:	movw	r1, #62152	; 0xf2c8
   1cb40:	mov	r2, #5
   1cb44:	movt	r0, #3
   1cb48:	movt	r1, #1
   1cb4c:	ldr	r4, [r0]
   1cb50:	mov	r0, #0
   1cb54:	bl	110f8 <dcgettext@plt>
   1cb58:	movw	r2, #59022	; 0xe68e
   1cb5c:	mov	r3, r0
   1cb60:	mov	r0, r4
   1cb64:	mov	r1, #0
   1cb68:	movt	r2, #1
   1cb6c:	bl	11170 <error@plt>
   1cb70:	bl	112e4 <abort@plt>
   1cb74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cb78:	add	fp, sp, #24
   1cb7c:	sub	sp, sp, #16
   1cb80:	mov	r8, r0
   1cb84:	ldr	r0, [fp, #16]
   1cb88:	mov	r5, r3
   1cb8c:	mov	r6, r2
   1cb90:	mov	r2, r1
   1cb94:	add	r3, sp, #8
   1cb98:	mov	r1, #0
   1cb9c:	str	r0, [sp]
   1cba0:	mov	r0, r8
   1cba4:	bl	1cc70 <__assert_fail@plt+0xb968>
   1cba8:	cmp	r0, #0
   1cbac:	bne	1cc38 <__assert_fail@plt+0xb930>
   1cbb0:	ldr	r4, [sp, #8]
   1cbb4:	ldr	r7, [sp, #12]
   1cbb8:	subs	r0, r4, r6
   1cbbc:	sbcs	r0, r7, r5
   1cbc0:	bcc	1cbe4 <__assert_fail@plt+0xb8dc>
   1cbc4:	ldr	r1, [fp, #8]
   1cbc8:	ldr	r0, [fp, #12]
   1cbcc:	subs	r1, r1, r4
   1cbd0:	sbcs	r0, r0, r7
   1cbd4:	movcs	r0, r4
   1cbd8:	movcs	r1, r7
   1cbdc:	subcs	sp, fp, #24
   1cbe0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cbe4:	bl	1120c <__errno_location@plt>
   1cbe8:	subs	r1, r4, #1073741824	; 0x40000000
   1cbec:	sbcs	r1, r7, #0
   1cbf0:	movcc	r1, #34	; 0x22
   1cbf4:	movcs	r1, #75	; 0x4b
   1cbf8:	str	r1, [r0]
   1cbfc:	ldr	r6, [r0]
   1cc00:	ldr	r4, [fp, #24]
   1cc04:	ldr	r5, [fp, #20]
   1cc08:	mov	r0, r8
   1cc0c:	bl	1bf10 <__assert_fail@plt+0xac08>
   1cc10:	subs	r1, r6, #22
   1cc14:	movw	r2, #61111	; 0xeeb7
   1cc18:	str	r0, [sp]
   1cc1c:	mov	r3, r5
   1cc20:	movne	r1, r6
   1cc24:	cmp	r4, #0
   1cc28:	movt	r2, #1
   1cc2c:	movweq	r4, #1
   1cc30:	mov	r0, r4
   1cc34:	bl	11170 <error@plt>
   1cc38:	cmp	r0, #1
   1cc3c:	beq	1cc54 <__assert_fail@plt+0xb94c>
   1cc40:	cmp	r0, #3
   1cc44:	bne	1cc60 <__assert_fail@plt+0xb958>
   1cc48:	bl	1120c <__errno_location@plt>
   1cc4c:	mov	r1, #0
   1cc50:	b	1cbf8 <__assert_fail@plt+0xb8f0>
   1cc54:	bl	1120c <__errno_location@plt>
   1cc58:	mov	r1, #75	; 0x4b
   1cc5c:	b	1cbf8 <__assert_fail@plt+0xb8f0>
   1cc60:	bl	1120c <__errno_location@plt>
   1cc64:	b	1cbfc <__assert_fail@plt+0xb8f4>
   1cc68:	mov	r1, #10
   1cc6c:	b	1cb74 <__assert_fail@plt+0xb86c>
   1cc70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc74:	add	fp, sp, #28
   1cc78:	sub	sp, sp, #44	; 0x2c
   1cc7c:	cmp	r2, #37	; 0x25
   1cc80:	bcs	1d904 <__assert_fail@plt+0xc5fc>
   1cc84:	ldr	sl, [fp, #8]
   1cc88:	mov	r6, r2
   1cc8c:	mov	r7, r1
   1cc90:	mov	r4, r0
   1cc94:	str	r3, [sp, #36]	; 0x24
   1cc98:	bl	1120c <__errno_location@plt>
   1cc9c:	mov	r5, r0
   1cca0:	mov	r0, #0
   1cca4:	str	r0, [r5]
   1cca8:	bl	111c4 <__ctype_b_loc@plt>
   1ccac:	ldr	r1, [r0]
   1ccb0:	mov	r2, r4
   1ccb4:	ldrb	r0, [r2], #1
   1ccb8:	add	r3, r1, r0, lsl #1
   1ccbc:	ldrb	r3, [r3, #1]
   1ccc0:	tst	r3, #32
   1ccc4:	bne	1ccb4 <__assert_fail@plt+0xb9ac>
   1ccc8:	cmp	r7, #0
   1cccc:	sub	r9, fp, #32
   1ccd0:	mov	r8, #4
   1ccd4:	movne	r9, r7
   1ccd8:	cmp	r0, #45	; 0x2d
   1ccdc:	beq	1d09c <__assert_fail@plt+0xbd94>
   1cce0:	mov	r0, r4
   1cce4:	mov	r1, r9
   1cce8:	mov	r2, r6
   1ccec:	mov	r3, #0
   1ccf0:	bl	110e0 <__strtoull_internal@plt>
   1ccf4:	mov	r7, r1
   1ccf8:	ldr	r1, [r9]
   1ccfc:	cmp	r1, r4
   1cd00:	beq	1cd38 <__assert_fail@plt+0xba30>
   1cd04:	mov	r6, r0
   1cd08:	ldr	r0, [r5]
   1cd0c:	cmp	r0, #0
   1cd10:	beq	1d054 <__assert_fail@plt+0xbd4c>
   1cd14:	cmp	r0, #34	; 0x22
   1cd18:	bne	1d09c <__assert_fail@plt+0xbd94>
   1cd1c:	mov	r8, #1
   1cd20:	cmp	sl, #0
   1cd24:	beq	1d8f0 <__assert_fail@plt+0xc5e8>
   1cd28:	ldrb	r4, [r1]
   1cd2c:	cmp	r4, #0
   1cd30:	bne	1cd7c <__assert_fail@plt+0xba74>
   1cd34:	b	1d8f0 <__assert_fail@plt+0xc5e8>
   1cd38:	cmp	sl, #0
   1cd3c:	beq	1d09c <__assert_fail@plt+0xbd94>
   1cd40:	mov	r5, r1
   1cd44:	ldrb	r1, [r4]
   1cd48:	cmp	r1, #0
   1cd4c:	beq	1d09c <__assert_fail@plt+0xbd94>
   1cd50:	mov	r0, sl
   1cd54:	bl	11200 <strchr@plt>
   1cd58:	cmp	r0, #0
   1cd5c:	beq	1d09c <__assert_fail@plt+0xbd94>
   1cd60:	mov	r1, r5
   1cd64:	mov	r8, #0
   1cd68:	mov	r6, #1
   1cd6c:	mov	r7, #0
   1cd70:	ldrb	r4, [r1]
   1cd74:	cmp	r4, #0
   1cd78:	beq	1d8f0 <__assert_fail@plt+0xc5e8>
   1cd7c:	str	r1, [sp, #32]
   1cd80:	mov	r0, sl
   1cd84:	mov	r1, r4
   1cd88:	bl	11200 <strchr@plt>
   1cd8c:	cmp	r0, #0
   1cd90:	beq	1d090 <__assert_fail@plt+0xbd88>
   1cd94:	sub	r0, r4, #69	; 0x45
   1cd98:	mov	r1, #1
   1cd9c:	mov	r3, #0
   1cda0:	mov	r5, #1024	; 0x400
   1cda4:	cmp	r0, #47	; 0x2f
   1cda8:	str	r1, [sp, #28]
   1cdac:	bhi	1ceb0 <__assert_fail@plt+0xbba8>
   1cdb0:	add	r1, pc, #0
   1cdb4:	ldr	pc, [r1, r0, lsl #2]
   1cdb8:	andeq	ip, r1, r8, ror lr
   1cdbc:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdc0:	andeq	ip, r1, r8, ror lr
   1cdc4:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdc8:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdcc:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdd0:	andeq	ip, r1, r8, ror lr
   1cdd4:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdd8:	andeq	ip, r1, r8, ror lr
   1cddc:			; <UNDEFINED> instruction: 0x0001ceb0
   1cde0:			; <UNDEFINED> instruction: 0x0001ceb0
   1cde4:	andeq	ip, r1, r8, ror lr
   1cde8:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdec:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdf0:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdf4:	andeq	ip, r1, r8, ror lr
   1cdf8:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdfc:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce00:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce04:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce08:	andeq	ip, r1, r8, ror lr
   1ce0c:	andeq	ip, r1, r8, ror lr
   1ce10:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce14:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce18:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce1c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce20:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce24:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce28:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce2c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce30:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce34:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce38:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce3c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce40:	andeq	ip, r1, r8, ror lr
   1ce44:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce48:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce4c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce50:	andeq	ip, r1, r8, ror lr
   1ce54:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce58:	andeq	ip, r1, r8, ror lr
   1ce5c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce60:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce64:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce68:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce6c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce70:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce74:	andeq	ip, r1, r8, ror lr
   1ce78:	mov	r0, sl
   1ce7c:	mov	r1, #48	; 0x30
   1ce80:	bl	11200 <strchr@plt>
   1ce84:	cmp	r0, #0
   1ce88:	beq	1ceac <__assert_fail@plt+0xbba4>
   1ce8c:	ldr	r1, [sp, #32]
   1ce90:	ldrb	r0, [r1, #1]
   1ce94:	cmp	r0, #66	; 0x42
   1ce98:	cmpne	r0, #68	; 0x44
   1ce9c:	bne	1d064 <__assert_fail@plt+0xbd5c>
   1cea0:	mov	r5, #1000	; 0x3e8
   1cea4:	mov	r0, #2
   1cea8:	str	r0, [sp, #28]
   1ceac:	mov	r3, #0
   1ceb0:	sub	r0, r4, #66	; 0x42
   1ceb4:	cmp	r0, #53	; 0x35
   1ceb8:	bhi	1d090 <__assert_fail@plt+0xbd88>
   1cebc:	add	r1, pc, #0
   1cec0:	ldr	pc, [r1, r0, lsl #2]
   1cec4:	andeq	sp, r1, r0, lsl #8
   1cec8:	muleq	r1, r0, r0
   1cecc:	muleq	r1, r0, r0
   1ced0:	andeq	sp, r1, r8, lsr #8
   1ced4:	muleq	r1, r0, r0
   1ced8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1cedc:	muleq	r1, r0, r0
   1cee0:	muleq	r1, r0, r0
   1cee4:	muleq	r1, r0, r0
   1cee8:	andeq	sp, r1, r8, lsr #1
   1ceec:	muleq	r1, r0, r0
   1cef0:	strdeq	sp, [r1], -r0
   1cef4:	muleq	r1, r0, r0
   1cef8:	muleq	r1, r0, r0
   1cefc:	andeq	sp, r1, ip, ror r5
   1cf00:	muleq	r1, r0, r0
   1cf04:	muleq	r1, r0, r0
   1cf08:	muleq	r1, r0, r0
   1cf0c:	andeq	sp, r1, ip, ror r1
   1cf10:	muleq	r1, r0, r0
   1cf14:	muleq	r1, r0, r0
   1cf18:	muleq	r1, r0, r0
   1cf1c:	muleq	r1, r0, r0
   1cf20:	andeq	sp, r1, r4, lsr #13
   1cf24:	andeq	sp, r1, r4, ror #4
   1cf28:	muleq	r1, r0, r0
   1cf2c:	muleq	r1, r0, r0
   1cf30:	muleq	r1, r0, r0
   1cf34:	muleq	r1, r0, r0
   1cf38:	muleq	r1, r0, r0
   1cf3c:	muleq	r1, r0, r0
   1cf40:	muleq	r1, r0, r0
   1cf44:	andeq	sp, r1, r8, ror r8
   1cf48:	ldrdeq	sp, [r1], -r0
   1cf4c:	muleq	r1, r0, r0
   1cf50:	muleq	r1, r0, r0
   1cf54:	muleq	r1, r0, r0
   1cf58:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1cf5c:	muleq	r1, r0, r0
   1cf60:	muleq	r1, r0, r0
   1cf64:	muleq	r1, r0, r0
   1cf68:	andeq	sp, r1, r8, lsr #1
   1cf6c:	muleq	r1, r0, r0
   1cf70:	strdeq	sp, [r1], -r0
   1cf74:	muleq	r1, r0, r0
   1cf78:	muleq	r1, r0, r0
   1cf7c:	muleq	r1, r0, r0
   1cf80:	muleq	r1, r0, r0
   1cf84:	muleq	r1, r0, r0
   1cf88:	muleq	r1, r0, r0
   1cf8c:	andeq	sp, r1, ip, ror r1
   1cf90:	muleq	r1, r0, r0
   1cf94:	muleq	r1, r0, r0
   1cf98:	andeq	sp, r1, ip, lsr #17
   1cf9c:	mvn	r0, #0
   1cfa0:	mvn	r1, #0
   1cfa4:	mov	r2, r5
   1cfa8:	mov	sl, r3
   1cfac:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1cfb0:	subs	r3, r0, r6
   1cfb4:	umull	r4, r2, r6, r5
   1cfb8:	mov	lr, #0
   1cfbc:	str	r1, [sp, #20]
   1cfc0:	sbcs	r3, r1, r7
   1cfc4:	movwcc	lr, #1
   1cfc8:	mla	ip, r6, sl, r2
   1cfcc:	mov	r2, r1
   1cfd0:	mov	r2, #0
   1cfd4:	cmp	lr, #0
   1cfd8:	mla	r7, r7, r5, ip
   1cfdc:	mvnne	r4, #0
   1cfe0:	mvnne	r7, #0
   1cfe4:	subs	r6, r0, r4
   1cfe8:	sbcs	r6, r1, r7
   1cfec:	umull	r3, r6, r4, r5
   1cff0:	movwcc	r2, #1
   1cff4:	cmp	r2, #0
   1cff8:	mvnne	r3, #0
   1cffc:	cmp	r2, #0
   1d000:	str	r6, [sp, #16]
   1d004:	umull	r6, ip, r3, r5
   1d008:	mla	r1, r3, sl, ip
   1d00c:	ldr	ip, [sp, #16]
   1d010:	str	r1, [sp, #12]
   1d014:	mla	r4, r4, sl, ip
   1d018:	mla	r4, r7, r5, r4
   1d01c:	mvnne	r4, #0
   1d020:	subs	r0, r0, r3
   1d024:	ldr	r0, [sp, #20]
   1d028:	ldr	r7, [sp, #12]
   1d02c:	sbcs	r0, r0, r4
   1d030:	mov	r0, #0
   1d034:	mla	r7, r4, r5, r7
   1d038:	movwcc	r0, #1
   1d03c:	cmp	r0, #0
   1d040:	mov	r1, r0
   1d044:	orr	r0, lr, r2
   1d048:	mvnne	r7, #0
   1d04c:	mvnne	r6, #0
   1d050:	b	1d69c <__assert_fail@plt+0xc394>
   1d054:	mov	r8, r0
   1d058:	cmp	sl, #0
   1d05c:	bne	1cd28 <__assert_fail@plt+0xba20>
   1d060:	b	1d8f0 <__assert_fail@plt+0xc5e8>
   1d064:	cmp	r0, #105	; 0x69
   1d068:	mov	r3, #0
   1d06c:	bne	1ceb0 <__assert_fail@plt+0xbba8>
   1d070:	ldrb	r0, [r1, #2]
   1d074:	mov	r1, #1
   1d078:	cmp	r0, #66	; 0x42
   1d07c:	movweq	r1, #3
   1d080:	str	r1, [sp, #28]
   1d084:	sub	r0, r4, #66	; 0x42
   1d088:	cmp	r0, #53	; 0x35
   1d08c:	bls	1cebc <__assert_fail@plt+0xbbb4>
   1d090:	ldr	r0, [sp, #36]	; 0x24
   1d094:	orr	r8, r8, #2
   1d098:	strd	r6, [r0]
   1d09c:	mov	r0, r8
   1d0a0:	sub	sp, fp, #28
   1d0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0a8:	mvn	r0, #0
   1d0ac:	mvn	r1, #0
   1d0b0:	mov	r2, r5
   1d0b4:	mov	r4, r3
   1d0b8:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d0bc:	subs	r0, r0, r6
   1d0c0:	mov	r2, #0
   1d0c4:	sbcs	r0, r1, r7
   1d0c8:	umull	r0, r1, r6, r5
   1d0cc:	movwcc	r2, #1
   1d0d0:	cmp	r2, #0
   1d0d4:	mla	r1, r6, r4, r1
   1d0d8:	mov	r3, r2
   1d0dc:	mvnne	r0, #0
   1d0e0:	mla	r7, r7, r5, r1
   1d0e4:	mvnne	r7, #0
   1d0e8:	mov	r6, r0
   1d0ec:	b	1d8d0 <__assert_fail@plt+0xc5c8>
   1d0f0:	mvn	r0, #0
   1d0f4:	mvn	r1, #0
   1d0f8:	mov	r2, r5
   1d0fc:	str	r3, [sp, #24]
   1d100:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d104:	subs	r3, r0, r6
   1d108:	mov	ip, r0
   1d10c:	umull	r4, r0, r6, r5
   1d110:	mov	sl, #0
   1d114:	sbcs	r3, r1, r7
   1d118:	mov	r3, #0
   1d11c:	movwcc	r3, #1
   1d120:	cmp	r3, #0
   1d124:	str	r0, [sp, #20]
   1d128:	ldr	r0, [sp, #24]
   1d12c:	mvnne	r4, #0
   1d130:	cmp	r3, #0
   1d134:	umull	lr, r2, r4, r5
   1d138:	mla	r2, r4, r0, r2
   1d13c:	str	r2, [sp, #16]
   1d140:	ldr	r2, [sp, #20]
   1d144:	mla	r6, r6, r0, r2
   1d148:	ldr	r0, [sp, #16]
   1d14c:	mla	r6, r7, r5, r6
   1d150:	mvnne	r6, #0
   1d154:	mla	r7, r6, r5, r0
   1d158:	subs	r0, ip, r4
   1d15c:	sbcs	r0, r1, r6
   1d160:	movwcc	sl, #1
   1d164:	cmp	sl, #0
   1d168:	orr	r3, r3, sl
   1d16c:	mvnne	lr, #0
   1d170:	mvnne	r7, #0
   1d174:	mov	r6, lr
   1d178:	b	1d8d0 <__assert_fail@plt+0xc5c8>
   1d17c:	mvn	r0, #0
   1d180:	mvn	r1, #0
   1d184:	mov	r2, r5
   1d188:	mov	sl, r3
   1d18c:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d190:	subs	r3, r0, r6
   1d194:	mov	ip, r1
   1d198:	umull	r2, lr, r6, r5
   1d19c:	str	r0, [sp, #20]
   1d1a0:	sbcs	r3, r1, r7
   1d1a4:	mov	r1, #0
   1d1a8:	str	ip, [sp, #16]
   1d1ac:	movwcc	r1, #1
   1d1b0:	mla	r6, r6, sl, lr
   1d1b4:	mov	lr, #0
   1d1b8:	cmp	r1, #0
   1d1bc:	mla	r7, r7, r5, r6
   1d1c0:	mvnne	r2, #0
   1d1c4:	cmp	r1, #0
   1d1c8:	umull	r3, r4, r2, r5
   1d1cc:	mvnne	r7, #0
   1d1d0:	mla	r4, r2, sl, r4
   1d1d4:	subs	r2, r0, r2
   1d1d8:	sbcs	r2, ip, r7
   1d1dc:	mla	r4, r7, r5, r4
   1d1e0:	mov	r2, #0
   1d1e4:	movwcc	lr, #1
   1d1e8:	cmp	lr, #0
   1d1ec:	mvnne	r3, #0
   1d1f0:	mvnne	r4, #0
   1d1f4:	subs	r7, r0, r3
   1d1f8:	mov	r0, r5
   1d1fc:	sbcs	r7, ip, r4
   1d200:	umull	r5, r7, r3, r5
   1d204:	movwcc	r2, #1
   1d208:	cmp	r2, #0
   1d20c:	mla	r3, r3, sl, r7
   1d210:	mvnne	r5, #0
   1d214:	cmp	r2, #0
   1d218:	mla	r3, r4, r0, r3
   1d21c:	umull	r6, ip, r5, r0
   1d220:	mvnne	r3, #0
   1d224:	mla	ip, r5, sl, ip
   1d228:	mla	r7, r3, r0, ip
   1d22c:	ldr	r0, [sp, #20]
   1d230:	subs	r0, r0, r5
   1d234:	ldr	r0, [sp, #16]
   1d238:	sbcs	r0, r0, r3
   1d23c:	mov	r0, #0
   1d240:	movwcc	r0, #1
   1d244:	cmp	r0, #0
   1d248:	mov	r3, r0
   1d24c:	orr	r0, r1, lr
   1d250:	orr	r0, r0, r2
   1d254:	mvnne	r7, #0
   1d258:	mvnne	r6, #0
   1d25c:	orr	r3, r0, r3
   1d260:	b	1d8d0 <__assert_fail@plt+0xc5c8>
   1d264:	mvn	r0, #0
   1d268:	mvn	r1, #0
   1d26c:	mov	r2, r5
   1d270:	mov	r4, r3
   1d274:	str	r3, [sp, #24]
   1d278:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d27c:	umull	r3, r2, r6, r5
   1d280:	mla	r2, r6, r4, r2
   1d284:	subs	r6, r0, r6
   1d288:	sbcs	r6, r1, r7
   1d28c:	mov	r6, #0
   1d290:	mla	r2, r7, r5, r2
   1d294:	mov	r7, #0
   1d298:	movwcc	r6, #1
   1d29c:	cmp	r6, #0
   1d2a0:	str	r6, [sp, #20]
   1d2a4:	mvnne	r3, #0
   1d2a8:	mvnne	r2, #0
   1d2ac:	subs	r4, r0, r3
   1d2b0:	umull	r6, ip, r3, r5
   1d2b4:	sbcs	r4, r1, r2
   1d2b8:	ldr	r4, [sp, #24]
   1d2bc:	movwcc	r7, #1
   1d2c0:	cmp	r7, #0
   1d2c4:	mov	lr, r7
   1d2c8:	str	r7, [sp, #16]
   1d2cc:	mvnne	r6, #0
   1d2d0:	cmp	lr, #0
   1d2d4:	mov	lr, #0
   1d2d8:	umull	sl, r7, r6, r5
   1d2dc:	mla	r3, r3, r4, ip
   1d2e0:	mla	r2, r2, r5, r3
   1d2e4:	mvnne	r2, #0
   1d2e8:	subs	r3, r0, r6
   1d2ec:	mla	r7, r6, r4, r7
   1d2f0:	mov	r4, r0
   1d2f4:	mov	r0, #0
   1d2f8:	mla	r7, r2, r5, r7
   1d2fc:	sbcs	r2, r1, r2
   1d300:	mov	r3, r4
   1d304:	movwcc	r0, #1
   1d308:	str	r3, [sp, #4]
   1d30c:	cmp	r0, #0
   1d310:	str	r0, [sp, #12]
   1d314:	mov	r0, r1
   1d318:	mvnne	sl, #0
   1d31c:	mvnne	r7, #0
   1d320:	str	r0, [sp, #8]
   1d324:	subs	r2, r4, sl
   1d328:	ldr	r4, [sp, #24]
   1d32c:	sbcs	r2, r1, r7
   1d330:	umull	r6, r2, sl, r5
   1d334:	movwcc	lr, #1
   1d338:	cmp	lr, #0
   1d33c:	mvnne	r6, #0
   1d340:	mla	r2, sl, r4, r2
   1d344:	cmp	lr, #0
   1d348:	umull	r1, ip, r6, r5
   1d34c:	mla	r2, r7, r5, r2
   1d350:	mvnne	r2, #0
   1d354:	mla	ip, r6, r4, ip
   1d358:	subs	r6, r3, r6
   1d35c:	mla	r7, r2, r5, ip
   1d360:	sbcs	r2, r0, r2
   1d364:	mov	ip, #0
   1d368:	mov	r2, #0
   1d36c:	movwcc	ip, #1
   1d370:	cmp	ip, #0
   1d374:	mvnne	r1, #0
   1d378:	mvnne	r7, #0
   1d37c:	subs	r6, r3, r1
   1d380:	ldr	r3, [sp, #24]
   1d384:	sbcs	r6, r0, r7
   1d388:	umull	r0, sl, r1, r5
   1d38c:	movwcc	r2, #1
   1d390:	cmp	r2, #0
   1d394:	mvnne	r0, #0
   1d398:	mla	r1, r1, r3, sl
   1d39c:	cmp	r2, #0
   1d3a0:	umull	r6, r4, r0, r5
   1d3a4:	mla	r1, r7, r5, r1
   1d3a8:	mvnne	r1, #0
   1d3ac:	mla	r4, r0, r3, r4
   1d3b0:	ldr	r3, [sp, #4]
   1d3b4:	mla	r7, r1, r5, r4
   1d3b8:	ldr	r5, [sp, #16]
   1d3bc:	subs	r0, r3, r0
   1d3c0:	ldr	r0, [sp, #8]
   1d3c4:	sbcs	r0, r0, r1
   1d3c8:	mov	r0, #0
   1d3cc:	movwcc	r0, #1
   1d3d0:	cmp	r0, #0
   1d3d4:	mov	r1, r0
   1d3d8:	ldr	r0, [sp, #20]
   1d3dc:	mvnne	r7, #0
   1d3e0:	mvnne	r6, #0
   1d3e4:	orr	r0, r0, r5
   1d3e8:	ldr	r5, [sp, #12]
   1d3ec:	orr	r0, r0, r5
   1d3f0:	orr	r0, r0, lr
   1d3f4:	orr	r0, r0, ip
   1d3f8:	orr	r0, r0, r2
   1d3fc:	b	1d86c <__assert_fail@plt+0xc564>
   1d400:	mov	r1, #0
   1d404:	lsl	r2, r7, #10
   1d408:	lsl	r0, r6, #10
   1d40c:	lsr	r3, r7, #22
   1d410:	cmp	r1, r7, lsr #22
   1d414:	orr	r2, r2, r6, lsr #22
   1d418:	mvnne	r0, #0
   1d41c:	movwne	r3, #1
   1d420:	cmp	r1, r7, lsr #22
   1d424:	b	1d89c <__assert_fail@plt+0xc594>
   1d428:	mvn	r0, #0
   1d42c:	mvn	r1, #0
   1d430:	mov	r2, r5
   1d434:	mov	sl, r3
   1d438:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d43c:	subs	r2, r0, r6
   1d440:	mov	ip, r0
   1d444:	mov	r0, #0
   1d448:	sbcs	r2, r1, r7
   1d44c:	umull	r4, r2, r6, r5
   1d450:	movwcc	r0, #1
   1d454:	cmp	r0, #0
   1d458:	mla	r2, r6, sl, r2
   1d45c:	str	r0, [sp, #20]
   1d460:	mvnne	r4, #0
   1d464:	cmp	r0, #0
   1d468:	mla	r2, r7, r5, r2
   1d46c:	mov	r0, #0
   1d470:	umull	lr, r3, r4, r5
   1d474:	mvnne	r2, #0
   1d478:	mla	r3, r4, sl, r3
   1d47c:	mla	r6, r2, r5, r3
   1d480:	subs	r3, ip, r4
   1d484:	mov	r3, r1
   1d488:	sbcs	r2, r1, r2
   1d48c:	str	r3, [sp, #8]
   1d490:	movwcc	r0, #1
   1d494:	cmp	r0, #0
   1d498:	str	r0, [sp, #16]
   1d49c:	mov	r0, ip
   1d4a0:	mvnne	lr, #0
   1d4a4:	mvnne	r6, #0
   1d4a8:	str	r0, [sp, #12]
   1d4ac:	subs	r2, ip, lr
   1d4b0:	umull	r7, r4, lr, r5
   1d4b4:	sbcs	r2, r1, r6
   1d4b8:	mov	r2, #0
   1d4bc:	movwcc	r2, #1
   1d4c0:	mla	r4, lr, sl, r4
   1d4c4:	cmp	r2, #0
   1d4c8:	mla	r6, r6, r5, r4
   1d4cc:	mov	r4, #0
   1d4d0:	mvnne	r7, #0
   1d4d4:	cmp	r2, #0
   1d4d8:	umull	r1, ip, r7, r5
   1d4dc:	mvnne	r6, #0
   1d4e0:	mla	ip, r7, sl, ip
   1d4e4:	subs	r7, r0, r7
   1d4e8:	sbcs	r7, r3, r6
   1d4ec:	mla	lr, r6, r5, ip
   1d4f0:	mov	ip, #0
   1d4f4:	movwcc	ip, #1
   1d4f8:	cmp	ip, #0
   1d4fc:	mvnne	r1, #0
   1d500:	mvnne	lr, #0
   1d504:	subs	r7, r0, r1
   1d508:	sbcs	r7, r3, lr
   1d50c:	umull	r0, r7, r1, r5
   1d510:	movwcc	r4, #1
   1d514:	cmp	r4, #0
   1d518:	mla	r1, r1, sl, r7
   1d51c:	mvnne	r0, #0
   1d520:	cmp	r4, #0
   1d524:	mla	r1, lr, r5, r1
   1d528:	umull	r6, r3, r0, r5
   1d52c:	mvnne	r1, #0
   1d530:	mla	r3, r0, sl, r3
   1d534:	mla	r7, r1, r5, r3
   1d538:	ldr	r3, [sp, #12]
   1d53c:	subs	r0, r3, r0
   1d540:	ldr	r0, [sp, #8]
   1d544:	ldr	r3, [sp, #16]
   1d548:	sbcs	r0, r0, r1
   1d54c:	mov	r0, #0
   1d550:	movwcc	r0, #1
   1d554:	cmp	r0, #0
   1d558:	mov	r1, r0
   1d55c:	ldr	r0, [sp, #20]
   1d560:	mvnne	r7, #0
   1d564:	mvnne	r6, #0
   1d568:	orr	r0, r0, r3
   1d56c:	orr	r0, r0, r2
   1d570:	orr	r0, r0, ip
   1d574:	orr	r0, r0, r4
   1d578:	b	1d69c <__assert_fail@plt+0xc394>
   1d57c:	mvn	r0, #0
   1d580:	mvn	r1, #0
   1d584:	mov	r2, r5
   1d588:	mov	sl, r3
   1d58c:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d590:	umull	r3, r2, r6, r5
   1d594:	mov	lr, r1
   1d598:	mov	r1, r0
   1d59c:	mla	r2, r6, sl, r2
   1d5a0:	subs	r6, r0, r6
   1d5a4:	mov	r0, #0
   1d5a8:	sbcs	r6, lr, r7
   1d5ac:	mla	r2, r7, r5, r2
   1d5b0:	movwcc	r0, #1
   1d5b4:	cmp	r0, #0
   1d5b8:	str	r0, [sp, #20]
   1d5bc:	mov	r0, r1
   1d5c0:	mvnne	r3, #0
   1d5c4:	mvnne	r2, #0
   1d5c8:	str	r0, [sp, #16]
   1d5cc:	subs	r4, r1, r3
   1d5d0:	umull	r7, ip, r3, r5
   1d5d4:	sbcs	r4, lr, r2
   1d5d8:	mov	r4, #0
   1d5dc:	movwcc	r4, #1
   1d5e0:	mla	r3, r3, sl, ip
   1d5e4:	mov	ip, #0
   1d5e8:	cmp	r4, #0
   1d5ec:	mla	r2, r2, r5, r3
   1d5f0:	mvnne	r7, #0
   1d5f4:	cmp	r4, #0
   1d5f8:	umull	r1, r6, r7, r5
   1d5fc:	mvnne	r2, #0
   1d600:	mla	r6, r7, sl, r6
   1d604:	mla	r3, r2, r5, r6
   1d608:	subs	r6, r0, r7
   1d60c:	sbcs	r2, lr, r2
   1d610:	mov	r2, #0
   1d614:	movwcc	ip, #1
   1d618:	cmp	ip, #0
   1d61c:	mvnne	r1, #0
   1d620:	mvnne	r3, #0
   1d624:	subs	r6, r0, r1
   1d628:	sbcs	r6, lr, r3
   1d62c:	umull	r0, r6, r1, r5
   1d630:	movwcc	r2, #1
   1d634:	cmp	r2, #0
   1d638:	mvnne	r0, #0
   1d63c:	cmp	r2, #0
   1d640:	str	r6, [sp, #12]
   1d644:	umull	r6, r7, r0, r5
   1d648:	mla	r7, r0, sl, r7
   1d64c:	str	r7, [sp, #8]
   1d650:	ldr	r7, [sp, #12]
   1d654:	mla	r1, r1, sl, r7
   1d658:	mla	r1, r3, r5, r1
   1d65c:	ldr	r3, [sp, #8]
   1d660:	mvnne	r1, #0
   1d664:	mla	r7, r1, r5, r3
   1d668:	ldr	r3, [sp, #16]
   1d66c:	subs	r0, r3, r0
   1d670:	sbcs	r0, lr, r1
   1d674:	mov	r0, #0
   1d678:	movwcc	r0, #1
   1d67c:	cmp	r0, #0
   1d680:	mov	r1, r0
   1d684:	ldr	r0, [sp, #20]
   1d688:	mvnne	r7, #0
   1d68c:	mvnne	r6, #0
   1d690:	orr	r0, r0, r4
   1d694:	orr	r0, r0, ip
   1d698:	orr	r0, r0, r2
   1d69c:	orr	r3, r0, r1
   1d6a0:	b	1d8d0 <__assert_fail@plt+0xc5c8>
   1d6a4:	mvn	r0, #0
   1d6a8:	mvn	r1, #0
   1d6ac:	mov	r2, r5
   1d6b0:	mov	sl, r3
   1d6b4:	bl	1de44 <__assert_fail@plt+0xcb3c>
   1d6b8:	mov	ip, r1
   1d6bc:	subs	r1, r0, r6
   1d6c0:	umull	r3, lr, r6, r5
   1d6c4:	mov	r2, r5
   1d6c8:	sbcs	r1, ip, r7
   1d6cc:	mov	r1, #0
   1d6d0:	str	ip, [sp, #4]
   1d6d4:	movwcc	r1, #1
   1d6d8:	mla	r6, r6, sl, lr
   1d6dc:	cmp	r1, #0
   1d6e0:	mla	r7, r7, r2, r6
   1d6e4:	str	r1, [sp, #20]
   1d6e8:	mvnne	r3, #0
   1d6ec:	cmp	r1, #0
   1d6f0:	mov	r1, r0
   1d6f4:	umull	r4, r5, r3, r5
   1d6f8:	mvnne	r7, #0
   1d6fc:	mov	lr, r1
   1d700:	mla	r5, r3, sl, r5
   1d704:	subs	r3, r0, r3
   1d708:	sbcs	r0, ip, r7
   1d70c:	mov	r0, #0
   1d710:	mla	r5, r7, r2, r5
   1d714:	movwcc	r0, #1
   1d718:	cmp	r0, #0
   1d71c:	str	r0, [sp, #16]
   1d720:	mvnne	r4, #0
   1d724:	mvnne	r5, #0
   1d728:	subs	r0, r1, r4
   1d72c:	mov	r1, #0
   1d730:	sbcs	r0, ip, r5
   1d734:	umull	r3, r0, r4, r2
   1d738:	movwcc	r1, #1
   1d73c:	cmp	r1, #0
   1d740:	mla	r0, r4, sl, r0
   1d744:	mov	r4, lr
   1d748:	str	r1, [sp, #12]
   1d74c:	mvnne	r3, #0
   1d750:	cmp	r1, #0
   1d754:	mla	r0, r5, r2, r0
   1d758:	str	r4, [sp]
   1d75c:	umull	r7, r6, r3, r2
   1d760:	mvnne	r0, #0
   1d764:	mla	r6, r3, sl, r6
   1d768:	subs	r3, lr, r3
   1d76c:	mov	r3, #0
   1d770:	mla	r5, r0, r2, r6
   1d774:	sbcs	r0, ip, r0
   1d778:	mov	r0, #0
   1d77c:	movwcc	r0, #1
   1d780:	cmp	r0, #0
   1d784:	str	r0, [sp, #8]
   1d788:	mvnne	r7, #0
   1d78c:	mvnne	r5, #0
   1d790:	subs	r0, lr, r7
   1d794:	sbcs	r0, ip, r5
   1d798:	umull	r6, r0, r7, r2
   1d79c:	movwcc	r3, #1
   1d7a0:	cmp	r3, #0
   1d7a4:	mla	r7, r7, sl, r0
   1d7a8:	mov	r0, ip
   1d7ac:	mvnne	r6, #0
   1d7b0:	cmp	r3, #0
   1d7b4:	mla	r7, r5, r2, r7
   1d7b8:	mov	r5, #0
   1d7bc:	umull	r1, lr, r6, r2
   1d7c0:	mvnne	r7, #0
   1d7c4:	mla	lr, r6, sl, lr
   1d7c8:	subs	r6, r4, r6
   1d7cc:	mla	lr, r7, r2, lr
   1d7d0:	sbcs	r7, ip, r7
   1d7d4:	mov	ip, #0
   1d7d8:	movwcc	ip, #1
   1d7dc:	cmp	ip, #0
   1d7e0:	mvnne	r1, #0
   1d7e4:	mvnne	lr, #0
   1d7e8:	subs	r7, r4, r1
   1d7ec:	sbcs	r7, r0, lr
   1d7f0:	umull	r0, r7, r1, r2
   1d7f4:	movwcc	r5, #1
   1d7f8:	cmp	r5, #0
   1d7fc:	mla	r1, r1, sl, r7
   1d800:	mvnne	r0, #0
   1d804:	cmp	r5, #0
   1d808:	mla	r1, lr, r2, r1
   1d80c:	umull	r6, r4, r0, r2
   1d810:	mvnne	r1, #0
   1d814:	mla	r4, r0, sl, r4
   1d818:	mla	r7, r1, r2, r4
   1d81c:	ldr	r2, [sp]
   1d820:	subs	r0, r2, r0
   1d824:	ldr	r0, [sp, #4]
   1d828:	ldr	r2, [sp, #16]
   1d82c:	sbcs	r0, r0, r1
   1d830:	mov	r0, #0
   1d834:	movwcc	r0, #1
   1d838:	cmp	r0, #0
   1d83c:	mov	r1, r0
   1d840:	ldr	r0, [sp, #20]
   1d844:	mvnne	r7, #0
   1d848:	mvnne	r6, #0
   1d84c:	orr	r0, r0, r2
   1d850:	ldr	r2, [sp, #12]
   1d854:	orr	r0, r0, r2
   1d858:	ldr	r2, [sp, #8]
   1d85c:	orr	r0, r0, r2
   1d860:	orr	r0, r0, r3
   1d864:	orr	r0, r0, ip
   1d868:	orr	r0, r0, r5
   1d86c:	orr	r0, r0, r1
   1d870:	and	r3, r0, #1
   1d874:	b	1d8d0 <__assert_fail@plt+0xc5c8>
   1d878:	mov	r1, #0
   1d87c:	lsl	r2, r7, #9
   1d880:	lsl	r0, r6, #9
   1d884:	lsr	r3, r7, #23
   1d888:	cmp	r1, r7, lsr #23
   1d88c:	orr	r2, r2, r6, lsr #23
   1d890:	mvnne	r0, #0
   1d894:	movwne	r3, #1
   1d898:	cmp	r1, r7, lsr #23
   1d89c:	mvnne	r2, #0
   1d8a0:	mov	r6, r0
   1d8a4:	mov	r7, r2
   1d8a8:	b	1d8d0 <__assert_fail@plt+0xc5c8>
   1d8ac:	lsl	r1, r7, #1
   1d8b0:	cmp	r7, #0
   1d8b4:	lsl	r0, r6, #1
   1d8b8:	lsr	r3, r7, #31
   1d8bc:	orr	r1, r1, r6, lsr #31
   1d8c0:	mvnmi	r0, #0
   1d8c4:	mvnmi	r1, #0
   1d8c8:	mov	r6, r0
   1d8cc:	mov	r7, r1
   1d8d0:	ldr	r1, [sp, #32]
   1d8d4:	ldr	r2, [sp, #28]
   1d8d8:	orr	r8, r3, r8
   1d8dc:	add	r0, r1, r2
   1d8e0:	str	r0, [r9]
   1d8e4:	ldrb	r0, [r1, r2]
   1d8e8:	cmp	r0, #0
   1d8ec:	orrne	r8, r8, #2
   1d8f0:	ldr	r0, [sp, #36]	; 0x24
   1d8f4:	strd	r6, [r0]
   1d8f8:	mov	r0, r8
   1d8fc:	sub	sp, fp, #28
   1d900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d904:	movw	r0, #62169	; 0xf2d9
   1d908:	movw	r1, #62207	; 0xf2ff
   1d90c:	movw	r3, #62223	; 0xf30f
   1d910:	mov	r2, #85	; 0x55
   1d914:	movt	r0, #1
   1d918:	movt	r1, #1
   1d91c:	movt	r3, #1
   1d920:	bl	11308 <__assert_fail@plt>
   1d924:	clz	r2, r1
   1d928:	clz	r3, r0
   1d92c:	lsr	r2, r2, #5
   1d930:	lsr	r3, r3, #5
   1d934:	orrs	r2, r3, r2
   1d938:	movwne	r1, #1
   1d93c:	movwne	r0, #1
   1d940:	cmp	r1, #0
   1d944:	beq	1d974 <__assert_fail@plt+0xc66c>
   1d948:	mvn	r2, #-2147483648	; 0x80000000
   1d94c:	udiv	r2, r2, r1
   1d950:	cmp	r2, r0
   1d954:	bcs	1d974 <__assert_fail@plt+0xc66c>
   1d958:	push	{fp, lr}
   1d95c:	mov	fp, sp
   1d960:	bl	1120c <__errno_location@plt>
   1d964:	mov	r1, #12
   1d968:	str	r1, [r0]
   1d96c:	mov	r0, #0
   1d970:	pop	{fp, pc}
   1d974:	b	1105c <calloc@plt>
   1d978:	cmp	r0, #0
   1d97c:	movweq	r0, #1
   1d980:	cmn	r0, #1
   1d984:	ble	1d98c <__assert_fail@plt+0xc684>
   1d988:	b	1117c <malloc@plt>
   1d98c:	push	{fp, lr}
   1d990:	mov	fp, sp
   1d994:	bl	1120c <__errno_location@plt>
   1d998:	mov	r1, #12
   1d99c:	str	r1, [r0]
   1d9a0:	mov	r0, #0
   1d9a4:	pop	{fp, pc}
   1d9a8:	push	{fp, lr}
   1d9ac:	mov	fp, sp
   1d9b0:	cmp	r0, #0
   1d9b4:	beq	1d9d0 <__assert_fail@plt+0xc6c8>
   1d9b8:	cmp	r1, #0
   1d9bc:	beq	1d9dc <__assert_fail@plt+0xc6d4>
   1d9c0:	cmn	r1, #1
   1d9c4:	ble	1d9e8 <__assert_fail@plt+0xc6e0>
   1d9c8:	pop	{fp, lr}
   1d9cc:	b	11104 <realloc@plt>
   1d9d0:	mov	r0, r1
   1d9d4:	pop	{fp, lr}
   1d9d8:	b	1d978 <__assert_fail@plt+0xc670>
   1d9dc:	bl	19e7c <__assert_fail@plt+0x8b74>
   1d9e0:	mov	r0, #0
   1d9e4:	pop	{fp, pc}
   1d9e8:	bl	1120c <__errno_location@plt>
   1d9ec:	mov	r1, #12
   1d9f0:	str	r1, [r0]
   1d9f4:	mov	r0, #0
   1d9f8:	pop	{fp, pc}
   1d9fc:	push	{r4, r5, r6, sl, fp, lr}
   1da00:	add	fp, sp, #16
   1da04:	mov	r4, r0
   1da08:	bl	11158 <__fpending@plt>
   1da0c:	ldr	r6, [r4]
   1da10:	mov	r5, r0
   1da14:	mov	r0, r4
   1da18:	bl	19cd4 <__assert_fail@plt+0x89cc>
   1da1c:	tst	r6, #32
   1da20:	bne	1da58 <__assert_fail@plt+0xc750>
   1da24:	cmp	r0, #0
   1da28:	mov	r4, r0
   1da2c:	mvnne	r4, #0
   1da30:	cmp	r5, #0
   1da34:	bne	1da64 <__assert_fail@plt+0xc75c>
   1da38:	cmp	r0, #0
   1da3c:	beq	1da64 <__assert_fail@plt+0xc75c>
   1da40:	bl	1120c <__errno_location@plt>
   1da44:	ldr	r0, [r0]
   1da48:	subs	r4, r0, #9
   1da4c:	mvnne	r4, #0
   1da50:	mov	r0, r4
   1da54:	pop	{r4, r5, r6, sl, fp, pc}
   1da58:	mvn	r4, #0
   1da5c:	cmp	r0, #0
   1da60:	beq	1da6c <__assert_fail@plt+0xc764>
   1da64:	mov	r0, r4
   1da68:	pop	{r4, r5, r6, sl, fp, pc}
   1da6c:	bl	1120c <__errno_location@plt>
   1da70:	mov	r1, #0
   1da74:	str	r1, [r0]
   1da78:	mov	r0, r4
   1da7c:	pop	{r4, r5, r6, sl, fp, pc}
   1da80:	sub	sp, sp, #8
   1da84:	push	{r4, r5, r6, r7, fp, lr}
   1da88:	add	fp, sp, #16
   1da8c:	sub	sp, sp, #8
   1da90:	mov	r5, r0
   1da94:	add	r0, fp, #8
   1da98:	cmp	r1, #11
   1da9c:	str	r2, [fp, #8]
   1daa0:	str	r3, [fp, #12]
   1daa4:	str	r0, [sp, #4]
   1daa8:	bhi	1dae4 <__assert_fail@plt+0xc7dc>
   1daac:	mov	r0, #1
   1dab0:	movw	r2, #1300	; 0x514
   1dab4:	tst	r2, r0, lsl r1
   1dab8:	bne	1dba4 <__assert_fail@plt+0xc89c>
   1dabc:	movw	r2, #2570	; 0xa0a
   1dac0:	tst	r2, r0, lsl r1
   1dac4:	bne	1db0c <__assert_fail@plt+0xc804>
   1dac8:	cmp	r1, #0
   1dacc:	bne	1dae4 <__assert_fail@plt+0xc7dc>
   1dad0:	ldr	r0, [sp, #4]
   1dad4:	add	r1, r0, #4
   1dad8:	str	r1, [sp, #4]
   1dadc:	mov	r1, #0
   1dae0:	b	1dbb0 <__assert_fail@plt+0xc8a8>
   1dae4:	sub	r0, r1, #1024	; 0x400
   1dae8:	cmp	r0, #10
   1daec:	bhi	1dba4 <__assert_fail@plt+0xc89c>
   1daf0:	mov	r2, #1
   1daf4:	movw	r3, #645	; 0x285
   1daf8:	tst	r3, r2, lsl r0
   1dafc:	bne	1dba4 <__assert_fail@plt+0xc89c>
   1db00:	movw	r3, #1282	; 0x502
   1db04:	tst	r3, r2, lsl r0
   1db08:	beq	1db18 <__assert_fail@plt+0xc810>
   1db0c:	mov	r0, r5
   1db10:	bl	11278 <fcntl64@plt>
   1db14:	b	1dbbc <__assert_fail@plt+0xc8b4>
   1db18:	cmp	r0, #6
   1db1c:	bne	1dba4 <__assert_fail@plt+0xc89c>
   1db20:	ldr	r0, [sp, #4]
   1db24:	movw	r7, #728	; 0x2d8
   1db28:	movt	r7, #3
   1db2c:	add	r1, r0, #4
   1db30:	str	r1, [sp, #4]
   1db34:	ldr	r6, [r0]
   1db38:	ldr	r0, [r7]
   1db3c:	cmp	r0, #0
   1db40:	bmi	1dbe0 <__assert_fail@plt+0xc8d8>
   1db44:	mov	r0, r5
   1db48:	movw	r1, #1030	; 0x406
   1db4c:	mov	r2, r6
   1db50:	bl	11278 <fcntl64@plt>
   1db54:	mov	r4, r0
   1db58:	cmn	r0, #1
   1db5c:	bgt	1dbd4 <__assert_fail@plt+0xc8cc>
   1db60:	bl	1120c <__errno_location@plt>
   1db64:	ldr	r0, [r0]
   1db68:	cmp	r0, #22
   1db6c:	bne	1dbd4 <__assert_fail@plt+0xc8cc>
   1db70:	mov	r0, r5
   1db74:	mov	r1, #0
   1db78:	mov	r2, r6
   1db7c:	bl	11278 <fcntl64@plt>
   1db80:	mov	r4, r0
   1db84:	cmp	r0, #0
   1db88:	bmi	1dbc0 <__assert_fail@plt+0xc8b8>
   1db8c:	mvn	r0, #0
   1db90:	str	r0, [r7]
   1db94:	mov	r0, #1
   1db98:	cmp	r0, #0
   1db9c:	bne	1dc0c <__assert_fail@plt+0xc904>
   1dba0:	b	1dbc0 <__assert_fail@plt+0xc8b8>
   1dba4:	ldr	r0, [sp, #4]
   1dba8:	add	r2, r0, #4
   1dbac:	str	r2, [sp, #4]
   1dbb0:	ldr	r2, [r0]
   1dbb4:	mov	r0, r5
   1dbb8:	bl	11278 <fcntl64@plt>
   1dbbc:	mov	r4, r0
   1dbc0:	mov	r0, r4
   1dbc4:	sub	sp, fp, #16
   1dbc8:	pop	{r4, r5, r6, r7, fp, lr}
   1dbcc:	add	sp, sp, #8
   1dbd0:	bx	lr
   1dbd4:	mov	r0, #1
   1dbd8:	str	r0, [r7]
   1dbdc:	b	1dbc0 <__assert_fail@plt+0xc8b8>
   1dbe0:	mov	r0, r5
   1dbe4:	mov	r1, #0
   1dbe8:	mov	r2, r6
   1dbec:	bl	11278 <fcntl64@plt>
   1dbf0:	mov	r4, r0
   1dbf4:	ldr	r0, [r7]
   1dbf8:	add	r0, r0, #1
   1dbfc:	clz	r0, r0
   1dc00:	lsr	r0, r0, #5
   1dc04:	cmp	r0, #0
   1dc08:	beq	1dbc0 <__assert_fail@plt+0xc8b8>
   1dc0c:	cmp	r4, #0
   1dc10:	bmi	1dbc0 <__assert_fail@plt+0xc8b8>
   1dc14:	mov	r0, r4
   1dc18:	mov	r1, #1
   1dc1c:	bl	11278 <fcntl64@plt>
   1dc20:	cmp	r0, #0
   1dc24:	bmi	1dc40 <__assert_fail@plt+0xc938>
   1dc28:	orr	r2, r0, #1
   1dc2c:	mov	r0, r4
   1dc30:	mov	r1, #2
   1dc34:	bl	11278 <fcntl64@plt>
   1dc38:	cmn	r0, #1
   1dc3c:	bne	1dbc0 <__assert_fail@plt+0xc8b8>
   1dc40:	bl	1120c <__errno_location@plt>
   1dc44:	ldr	r6, [r0]
   1dc48:	mov	r5, r0
   1dc4c:	mov	r0, r4
   1dc50:	bl	112f0 <close@plt>
   1dc54:	str	r6, [r5]
   1dc58:	mvn	r4, #0
   1dc5c:	b	1dbc0 <__assert_fail@plt+0xc8b8>
   1dc60:	push	{fp, lr}
   1dc64:	mov	fp, sp
   1dc68:	mov	r0, #14
   1dc6c:	bl	112a8 <nl_langinfo@plt>
   1dc70:	movw	r1, #58467	; 0xe463
   1dc74:	cmp	r0, #0
   1dc78:	movt	r1, #1
   1dc7c:	movne	r1, r0
   1dc80:	movw	r0, #62302	; 0xf35e
   1dc84:	ldrb	r2, [r1]
   1dc88:	movt	r0, #1
   1dc8c:	cmp	r2, #0
   1dc90:	movne	r0, r1
   1dc94:	pop	{fp, pc}
   1dc98:	push	{r4, r5, r6, r7, fp, lr}
   1dc9c:	add	fp, sp, #16
   1dca0:	sub	sp, sp, #8
   1dca4:	cmp	r0, #0
   1dca8:	add	r5, sp, #4
   1dcac:	mov	r7, r2
   1dcb0:	mov	r4, r1
   1dcb4:	movne	r5, r0
   1dcb8:	mov	r0, r5
   1dcbc:	bl	11164 <mbrtowc@plt>
   1dcc0:	mov	r6, r0
   1dcc4:	cmp	r7, #0
   1dcc8:	beq	1dcf0 <__assert_fail@plt+0xc9e8>
   1dccc:	cmn	r6, #2
   1dcd0:	bcc	1dcf0 <__assert_fail@plt+0xc9e8>
   1dcd4:	mov	r0, #0
   1dcd8:	bl	1dd38 <__assert_fail@plt+0xca30>
   1dcdc:	cmp	r0, #0
   1dce0:	bne	1dcf0 <__assert_fail@plt+0xc9e8>
   1dce4:	ldrb	r0, [r4]
   1dce8:	mov	r6, #1
   1dcec:	str	r0, [r5]
   1dcf0:	mov	r0, r6
   1dcf4:	sub	sp, fp, #16
   1dcf8:	pop	{r4, r5, r6, r7, fp, pc}
   1dcfc:	cmp	r2, #0
   1dd00:	beq	1dd30 <__assert_fail@plt+0xca28>
   1dd04:	mvn	r3, #0
   1dd08:	udiv	r3, r3, r2
   1dd0c:	cmp	r3, r1
   1dd10:	bcs	1dd30 <__assert_fail@plt+0xca28>
   1dd14:	push	{fp, lr}
   1dd18:	mov	fp, sp
   1dd1c:	bl	1120c <__errno_location@plt>
   1dd20:	mov	r1, #12
   1dd24:	str	r1, [r0]
   1dd28:	mov	r0, #0
   1dd2c:	pop	{fp, pc}
   1dd30:	mul	r1, r2, r1
   1dd34:	b	1d9a8 <__assert_fail@plt+0xc6a0>
   1dd38:	push	{r4, sl, fp, lr}
   1dd3c:	add	fp, sp, #8
   1dd40:	sub	sp, sp, #264	; 0x108
   1dd44:	add	r1, sp, #7
   1dd48:	movw	r2, #257	; 0x101
   1dd4c:	bl	1dda4 <__assert_fail@plt+0xca9c>
   1dd50:	mov	r4, #0
   1dd54:	cmp	r0, #0
   1dd58:	bne	1dd98 <__assert_fail@plt+0xca90>
   1dd5c:	movw	r1, #62308	; 0xf364
   1dd60:	add	r0, sp, #7
   1dd64:	mov	r2, #2
   1dd68:	movt	r1, #1
   1dd6c:	bl	111e8 <bcmp@plt>
   1dd70:	cmp	r0, #0
   1dd74:	beq	1dd98 <__assert_fail@plt+0xca90>
   1dd78:	movw	r1, #62310	; 0xf366
   1dd7c:	add	r0, sp, #7
   1dd80:	mov	r2, #6
   1dd84:	movt	r1, #1
   1dd88:	bl	111e8 <bcmp@plt>
   1dd8c:	cmp	r0, #0
   1dd90:	mov	r4, r0
   1dd94:	movwne	r4, #1
   1dd98:	mov	r0, r4
   1dd9c:	sub	sp, fp, #8
   1dda0:	pop	{r4, sl, fp, pc}
   1dda4:	push	{r4, r5, r6, r7, fp, lr}
   1dda8:	add	fp, sp, #16
   1ddac:	mov	r4, r1
   1ddb0:	mov	r1, #0
   1ddb4:	mov	r6, r2
   1ddb8:	bl	11290 <setlocale@plt>
   1ddbc:	cmp	r0, #0
   1ddc0:	beq	1ddf0 <__assert_fail@plt+0xcae8>
   1ddc4:	mov	r7, r0
   1ddc8:	bl	111f4 <strlen@plt>
   1ddcc:	cmp	r0, r6
   1ddd0:	bcs	1de0c <__assert_fail@plt+0xcb04>
   1ddd4:	add	r2, r0, #1
   1ddd8:	mov	r0, r4
   1dddc:	mov	r1, r7
   1dde0:	bl	110d4 <memcpy@plt>
   1dde4:	mov	r5, #0
   1dde8:	mov	r0, r5
   1ddec:	pop	{r4, r5, r6, r7, fp, pc}
   1ddf0:	mov	r5, #22
   1ddf4:	cmp	r6, #0
   1ddf8:	beq	1de34 <__assert_fail@plt+0xcb2c>
   1ddfc:	mov	r0, #0
   1de00:	strb	r0, [r4]
   1de04:	mov	r0, r5
   1de08:	pop	{r4, r5, r6, r7, fp, pc}
   1de0c:	mov	r5, #34	; 0x22
   1de10:	cmp	r6, #0
   1de14:	beq	1de34 <__assert_fail@plt+0xcb2c>
   1de18:	sub	r6, r6, #1
   1de1c:	mov	r0, r4
   1de20:	mov	r1, r7
   1de24:	mov	r2, r6
   1de28:	bl	110d4 <memcpy@plt>
   1de2c:	mov	r0, #0
   1de30:	strb	r0, [r4, r6]
   1de34:	mov	r0, r5
   1de38:	pop	{r4, r5, r6, r7, fp, pc}
   1de3c:	mov	r1, #0
   1de40:	b	11290 <setlocale@plt>
   1de44:	cmp	r3, #0
   1de48:	cmpeq	r2, #0
   1de4c:	bne	1de64 <__assert_fail@plt+0xcb5c>
   1de50:	cmp	r1, #0
   1de54:	cmpeq	r0, #0
   1de58:	mvnne	r1, #0
   1de5c:	mvnne	r0, #0
   1de60:	b	1de80 <__assert_fail@plt+0xcb78>
   1de64:	sub	sp, sp, #8
   1de68:	push	{sp, lr}
   1de6c:	bl	1de90 <__assert_fail@plt+0xcb88>
   1de70:	ldr	lr, [sp, #4]
   1de74:	add	sp, sp, #8
   1de78:	pop	{r2, r3}
   1de7c:	bx	lr
   1de80:	push	{r1, lr}
   1de84:	mov	r0, #8
   1de88:	bl	11074 <raise@plt>
   1de8c:	pop	{r1, pc}
   1de90:	cmp	r1, r3
   1de94:	cmpeq	r0, r2
   1de98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de9c:	mov	r4, r0
   1dea0:	movcc	r0, #0
   1dea4:	mov	r5, r1
   1dea8:	ldr	lr, [sp, #36]	; 0x24
   1deac:	movcc	r1, r0
   1deb0:	bcc	1dfac <__assert_fail@plt+0xcca4>
   1deb4:	cmp	r3, #0
   1deb8:	clzeq	ip, r2
   1debc:	clzne	ip, r3
   1dec0:	addeq	ip, ip, #32
   1dec4:	cmp	r5, #0
   1dec8:	clzeq	r1, r4
   1decc:	addeq	r1, r1, #32
   1ded0:	clzne	r1, r5
   1ded4:	sub	ip, ip, r1
   1ded8:	sub	sl, ip, #32
   1dedc:	lsl	r9, r3, ip
   1dee0:	rsb	fp, ip, #32
   1dee4:	orr	r9, r9, r2, lsl sl
   1dee8:	orr	r9, r9, r2, lsr fp
   1deec:	lsl	r8, r2, ip
   1def0:	cmp	r5, r9
   1def4:	cmpeq	r4, r8
   1def8:	movcc	r0, #0
   1defc:	movcc	r1, r0
   1df00:	bcc	1df1c <__assert_fail@plt+0xcc14>
   1df04:	mov	r0, #1
   1df08:	subs	r4, r4, r8
   1df0c:	lsl	r1, r0, sl
   1df10:	orr	r1, r1, r0, lsr fp
   1df14:	lsl	r0, r0, ip
   1df18:	sbc	r5, r5, r9
   1df1c:	cmp	ip, #0
   1df20:	beq	1dfac <__assert_fail@plt+0xcca4>
   1df24:	lsr	r6, r8, #1
   1df28:	orr	r6, r6, r9, lsl #31
   1df2c:	lsr	r7, r9, #1
   1df30:	mov	r2, ip
   1df34:	b	1df58 <__assert_fail@plt+0xcc50>
   1df38:	subs	r3, r4, r6
   1df3c:	sbc	r8, r5, r7
   1df40:	adds	r3, r3, r3
   1df44:	adc	r8, r8, r8
   1df48:	adds	r4, r3, #1
   1df4c:	adc	r5, r8, #0
   1df50:	subs	r2, r2, #1
   1df54:	beq	1df74 <__assert_fail@plt+0xcc6c>
   1df58:	cmp	r5, r7
   1df5c:	cmpeq	r4, r6
   1df60:	bcs	1df38 <__assert_fail@plt+0xcc30>
   1df64:	adds	r4, r4, r4
   1df68:	adc	r5, r5, r5
   1df6c:	subs	r2, r2, #1
   1df70:	bne	1df58 <__assert_fail@plt+0xcc50>
   1df74:	lsr	r3, r4, ip
   1df78:	orr	r3, r3, r5, lsl fp
   1df7c:	lsr	r2, r5, ip
   1df80:	orr	r3, r3, r5, lsr sl
   1df84:	adds	r0, r0, r4
   1df88:	mov	r4, r3
   1df8c:	lsl	r3, r2, ip
   1df90:	orr	r3, r3, r4, lsl sl
   1df94:	lsl	ip, r4, ip
   1df98:	orr	r3, r3, r4, lsr fp
   1df9c:	adc	r1, r1, r5
   1dfa0:	subs	r0, r0, ip
   1dfa4:	mov	r5, r2
   1dfa8:	sbc	r1, r1, r3
   1dfac:	cmp	lr, #0
   1dfb0:	strdne	r4, [lr]
   1dfb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dfb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dfbc:	mov	r7, r0
   1dfc0:	ldr	r6, [pc, #72]	; 1e010 <__assert_fail@plt+0xcd08>
   1dfc4:	ldr	r5, [pc, #72]	; 1e014 <__assert_fail@plt+0xcd0c>
   1dfc8:	add	r6, pc, r6
   1dfcc:	add	r5, pc, r5
   1dfd0:	sub	r6, r6, r5
   1dfd4:	mov	r8, r1
   1dfd8:	mov	r9, r2
   1dfdc:	bl	11030 <fdopen@plt-0x20>
   1dfe0:	asrs	r6, r6, #2
   1dfe4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dfe8:	mov	r4, #0
   1dfec:	add	r4, r4, #1
   1dff0:	ldr	r3, [r5], #4
   1dff4:	mov	r2, r9
   1dff8:	mov	r1, r8
   1dffc:	mov	r0, r7
   1e000:	blx	r3
   1e004:	cmp	r6, r4
   1e008:	bne	1dfec <__assert_fail@plt+0xcce4>
   1e00c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e010:	andeq	r1, r1, ip, lsr pc
   1e014:	andeq	r1, r1, r4, lsr pc
   1e018:	bx	lr
   1e01c:	ldr	r3, [pc, #12]	; 1e030 <__assert_fail@plt+0xcd28>
   1e020:	mov	r1, #0
   1e024:	add	r3, pc, r3
   1e028:	ldr	r2, [r3]
   1e02c:	b	11218 <__cxa_atexit@plt>
   1e030:	ldrdeq	r2, [r1], -r8

Disassembly of section .fini:

0001e034 <.fini>:
   1e034:	push	{r3, lr}
   1e038:	pop	{r3, pc}
